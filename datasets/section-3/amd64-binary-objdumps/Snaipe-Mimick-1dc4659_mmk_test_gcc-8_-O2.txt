
../repos/Snaipe-Mimick-1dc4659/test/mmk_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x6fe1]        # 408ff0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <__snprintf_chk@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <__snprintf_chk@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x6fe2]        # 409008 <_IO_stdin_used@@Base+0x3008>
  402026:	jmp    QWORD PTR [rip+0x6fe4]        # 409010 <_IO_stdin_used@@Base+0x3010>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <__snprintf_chk@plt>:
  402030:	jmp    QWORD PTR [rip+0x6fe2]        # 409018 <__snprintf_chk@GLIBC_2.3.4>
  402036:	push   0x0
  40203b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402040 <free@plt>:
  402040:	jmp    QWORD PTR [rip+0x6fda]        # 409020 <free@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402050 <abort@plt>:
  402050:	jmp    QWORD PTR [rip+0x6fd2]        # 409028 <abort@GLIBC_2.2.5>
  402056:	push   0x2
  40205b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402060 <__errno_location@plt>:
  402060:	jmp    QWORD PTR [rip+0x6fca]        # 409030 <__errno_location@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402070 <strlen@plt>:
  402070:	jmp    QWORD PTR [rip+0x6fc2]        # 409038 <strlen@GLIBC_2.2.5>
  402076:	push   0x4
  40207b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402080 <__stack_chk_fail@plt>:
  402080:	jmp    QWORD PTR [rip+0x6fba]        # 409040 <__stack_chk_fail@GLIBC_2.4>
  402086:	push   0x5
  40208b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402090 <mmap@plt>:
  402090:	jmp    QWORD PTR [rip+0x6fb2]        # 409048 <mmap@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <__snprintf_chk@plt-0x10>

00000000004020a0 <strchr@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x6faa]        # 409050 <strchr@GLIBC_2.2.5>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <__snprintf_chk@plt-0x10>

00000000004020b0 <__tls_get_addr@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x6fa2]        # 409058 <__tls_get_addr@GLIBC_2.3>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <__snprintf_chk@plt-0x10>

00000000004020c0 <strcmp@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x6f9a]        # 409060 <strcmp@GLIBC_2.2.5>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <__snprintf_chk@plt-0x10>

00000000004020d0 <fprintf@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x6f92]        # 409068 <fprintf@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <__snprintf_chk@plt-0x10>

00000000004020e0 <memcpy@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x6f8a]        # 409070 <memcpy@GLIBC_2.14>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <__snprintf_chk@plt-0x10>

00000000004020f0 <malloc@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x6f82]        # 409078 <malloc@GLIBC_2.2.5>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402100 <realloc@plt>:
  402100:	jmp    QWORD PTR [rip+0x6f7a]        # 409080 <realloc@GLIBC_2.2.5>
  402106:	push   0xd
  40210b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402110 <munmap@plt>:
  402110:	jmp    QWORD PTR [rip+0x6f72]        # 409088 <munmap@GLIBC_2.2.5>
  402116:	push   0xe
  40211b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402120 <mprotect@plt>:
  402120:	jmp    QWORD PTR [rip+0x6f6a]        # 409090 <mprotect@GLIBC_2.2.5>
  402126:	push   0xf
  40212b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402130 <__fprintf_chk@plt>:
  402130:	jmp    QWORD PTR [rip+0x6f62]        # 409098 <__fprintf_chk@GLIBC_2.3.4>
  402136:	push   0x10
  40213b:	jmp    402020 <__snprintf_chk@plt-0x10>

0000000000402140 <strstr@plt>:
  402140:	jmp    QWORD PTR [rip+0x6f5a]        # 4090a0 <strstr@GLIBC_2.2.5>
  402146:	push   0x11
  40214b:	jmp    402020 <__snprintf_chk@plt-0x10>

Disassembly of section .plt.got:

0000000000402150 <fn_vv@plt>:
  402150:	jmp    QWORD PTR [rip+0x6e7a]        # 408fd0 <fn_vv>
  402156:	xchg   ax,ax

0000000000402158 <fn_ii@plt>:
  402158:	jmp    QWORD PTR [rip+0x6e7a]        # 408fd8 <fn_ii>
  40215e:	xchg   ax,ax

0000000000402160 <fn_ii_va@plt>:
  402160:	jmp    QWORD PTR [rip+0x6e7a]        # 408fe0 <fn_ii_va>
  402166:	xchg   ax,ax

Disassembly of section .text:

0000000000402170 <_start@@Base>:
  402170:	endbr64 
  402174:	xor    ebp,ebp
  402176:	mov    r9,rdx
  402179:	pop    rsi
  40217a:	mov    rdx,rsp
  40217d:	and    rsp,0xfffffffffffffff0
  402181:	push   rax
  402182:	push   rsp
  402183:	mov    r8,0x405d80
  40218a:	mov    rcx,0x405d10
  402191:	mov    rdi,0x403589
  402198:	call   QWORD PTR [rip+0x6e4a]        # 408fe8 <__libc_start_main@GLIBC_2.2.5>
  40219e:	hlt    
  40219f:	nop
  4021a0:	endbr64 
  4021a4:	ret    
  4021a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021af:	nop
  4021b0:	mov    eax,0x4090c0
  4021b5:	cmp    rax,0x4090c0
  4021bb:	je     4021d0 <_start@@Base+0x60>
  4021bd:	mov    eax,0x0
  4021c2:	test   rax,rax
  4021c5:	je     4021d0 <_start@@Base+0x60>
  4021c7:	mov    edi,0x4090c0
  4021cc:	jmp    rax
  4021ce:	xchg   ax,ax
  4021d0:	ret    
  4021d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021dc:	nop    DWORD PTR [rax+0x0]
  4021e0:	mov    esi,0x4090c0
  4021e5:	sub    rsi,0x4090c0
  4021ec:	sar    rsi,0x3
  4021f0:	mov    rax,rsi
  4021f3:	shr    rax,0x3f
  4021f7:	add    rsi,rax
  4021fa:	sar    rsi,1
  4021fd:	je     402210 <_start@@Base+0xa0>
  4021ff:	mov    eax,0x0
  402204:	test   rax,rax
  402207:	je     402210 <_start@@Base+0xa0>
  402209:	mov    edi,0x4090c0
  40220e:	jmp    rax
  402210:	ret    
  402211:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40221c:	nop    DWORD PTR [rax+0x0]
  402220:	endbr64 
  402224:	cmp    BYTE PTR [rip+0x6e95],0x0        # 4090c0 <__bss_start@@Base>
  40222b:	jne    402240 <_start@@Base+0xd0>
  40222d:	push   rbp
  40222e:	mov    rbp,rsp
  402231:	call   4021b0 <_start@@Base+0x40>
  402236:	mov    BYTE PTR [rip+0x6e83],0x1        # 4090c0 <__bss_start@@Base>
  40223d:	pop    rbp
  40223e:	ret    
  40223f:	nop
  402240:	ret    
  402241:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40224c:	nop    DWORD PTR [rax+0x0]
  402250:	endbr64 
  402254:	jmp    4021e0 <_start@@Base+0x70>
  402256:	endbr64 
  40225a:	push   rbp
  40225b:	mov    rbp,rsp
  40225e:	sub    rsp,0xc0
  402265:	mov    DWORD PTR [rbp-0xb4],edi
  40226b:	mov    rax,QWORD PTR fs:0x28
  402274:	mov    QWORD PTR [rbp-0x8],rax
  402278:	xor    eax,eax
  40227a:	call   4044f0 <mmk_matcher_ctx@@Base>
  40227f:	mov    QWORD PTR [rbp-0x80],rax
  402283:	cmp    QWORD PTR [rbp-0x80],0x0
  402288:	je     4024e2 <_start@@Base+0x372>
  40228e:	call   4053ba <mmk_ctx@@Base>
  402293:	mov    rdi,rax
  402296:	call   404fe1 <mmk_stub_context@@Base>
  40229b:	mov    QWORD PTR [rbp-0x78],rax
  40229f:	mov    rax,QWORD PTR [rbp-0x80]
  4022a3:	mov    eax,DWORD PTR [rax]
  4022a5:	test   eax,eax
  4022a7:	jne    402307 <_start@@Base+0x197>
  4022a9:	mov    edi,0x50
  4022ae:	call   405aa0 <mmk_malloc@@Base>
  4022b3:	mov    QWORD PTR [rbp-0x70],rax
  4022b7:	call   405bce <mmk_when_get_result@@Base>
  4022bc:	mov    rsi,rax
  4022bf:	mov    rcx,QWORD PTR [rbp-0x70]
  4022c3:	mov    rax,QWORD PTR [rsi]
  4022c6:	mov    rdx,QWORD PTR [rsi+0x8]
  4022ca:	mov    QWORD PTR [rcx+0x10],rax
  4022ce:	mov    QWORD PTR [rcx+0x18],rdx
  4022d2:	mov    rax,QWORD PTR [rsi+0x10]
  4022d6:	mov    rdx,QWORD PTR [rsi+0x18]
  4022da:	mov    QWORD PTR [rcx+0x20],rax
  4022de:	mov    QWORD PTR [rcx+0x28],rdx
  4022e2:	mov    edx,DWORD PTR [rbp-0xb4]
  4022e8:	mov    rax,QWORD PTR [rbp-0x70]
  4022ec:	mov    DWORD PTR [rax+0x48],edx
  4022ef:	mov    rdx,QWORD PTR [rbp-0x70]
  4022f3:	mov    rax,QWORD PTR [rbp-0x78]
  4022f7:	mov    rsi,rdx
  4022fa:	mov    rdi,rax
  4022fd:	call   405bed <mmk_when_impl@@Base>
  402302:	jmp    4024d7 <_start@@Base+0x367>
  402307:	mov    rax,QWORD PTR [rbp-0x80]
  40230b:	mov    eax,DWORD PTR [rax]
  40230d:	cmp    eax,0x1
  402310:	jne    4024d7 <_start@@Base+0x367>
  402316:	mov    QWORD PTR [rbp-0xa0],0x0
  402321:	mov    rax,QWORD PTR [rbp-0x78]
  402325:	mov    rdi,rax
  402328:	call   404865 <mmk_mock_params_begin@@Base>
  40232d:	mov    QWORD PTR [rbp-0x98],rax
  402334:	jmp    40247a <_start@@Base+0x30a>
  402339:	mov    rax,QWORD PTR [rbp-0x80]
  40233d:	mov    QWORD PTR [rbp-0x68],rax
  402341:	mov    rax,QWORD PTR [rbp-0x68]
  402345:	mov    rax,QWORD PTR [rax+0x10]
  402349:	test   rax,rax
  40234c:	je     40241d <_start@@Base+0x2ad>
  402352:	mov    rax,QWORD PTR [rbp-0x68]
  402356:	mov    rax,QWORD PTR [rax+0x10]
  40235a:	mov    QWORD PTR [rbp-0x68],rax
  40235e:	mov    rax,QWORD PTR [rbp-0x68]
  402362:	mov    eax,DWORD PTR [rax]
  402364:	test   eax,eax
  402366:	je     402443 <_start@@Base+0x2d3>
  40236c:	mov    rax,QWORD PTR [rbp-0x68]
  402370:	mov    eax,DWORD PTR [rax]
  402372:	test   eax,eax
  402374:	jns    4023ea <_start@@Base+0x27a>
  402376:	mov    rax,QWORD PTR [rbp-0x98]
  40237d:	lea    rcx,[rax+0x18]
  402381:	lea    rax,[rbp-0xb4]
  402388:	mov    edx,0x4
  40238d:	mov    rsi,rax
  402390:	mov    rdi,rcx
  402393:	call   4058c0 <mmk_memcmp@@Base>
  402398:	mov    DWORD PTR [rbp-0xac],eax
  40239e:	cmp    DWORD PTR [rbp-0xac],0x0
  4023a5:	jne    4023b8 <_start@@Base+0x248>
  4023a7:	mov    rax,QWORD PTR [rbp-0x68]
  4023ab:	mov    eax,DWORD PTR [rax]
  4023ad:	and    eax,0x2
  4023b0:	test   eax,eax
  4023b2:	je     402456 <_start@@Base+0x2e6>
  4023b8:	cmp    DWORD PTR [rbp-0xac],0x0
  4023bf:	jns    4023d2 <_start@@Base+0x262>
  4023c1:	mov    rax,QWORD PTR [rbp-0x68]
  4023c5:	mov    eax,DWORD PTR [rax]
  4023c7:	and    eax,0x4
  4023ca:	test   eax,eax
  4023cc:	je     402459 <_start@@Base+0x2e9>
  4023d2:	cmp    DWORD PTR [rbp-0xac],0x0
  4023d9:	jle    402443 <_start@@Base+0x2d3>
  4023db:	mov    rax,QWORD PTR [rbp-0x68]
  4023df:	mov    eax,DWORD PTR [rax]
  4023e1:	and    eax,0x8
  4023e4:	test   eax,eax
  4023e6:	jne    402443 <_start@@Base+0x2d3>
  4023e8:	jmp    40245d <_start@@Base+0x2ed>
  4023ea:	mov    rax,QWORD PTR [rbp-0x68]
  4023ee:	mov    eax,DWORD PTR [rax]
  4023f0:	cmp    eax,0x1
  4023f3:	jne    402443 <_start@@Base+0x2d3>
  4023f5:	mov    rax,QWORD PTR [rbp-0x68]
  4023f9:	mov    rdi,rax
  4023fc:	call   404590 <mmk_matcher_get_predicate@@Base>
  402401:	mov    QWORD PTR [rbp-0x60],rax
  402405:	mov    rax,QWORD PTR [rbp-0x98]
  40240c:	mov    edx,DWORD PTR [rax+0x18]
  40240f:	mov    rax,QWORD PTR [rbp-0x60]
  402413:	mov    edi,edx
  402415:	call   rax
  402417:	test   eax,eax
  402419:	jne    402443 <_start@@Base+0x2d3>
  40241b:	jmp    40245d <_start@@Base+0x2ed>
  40241d:	mov    rax,QWORD PTR [rbp-0x98]
  402424:	lea    rcx,[rax+0x18]
  402428:	lea    rax,[rbp-0xb4]
  40242f:	mov    edx,0x4
  402434:	mov    rsi,rax
  402437:	mov    rdi,rcx
  40243a:	call   4058c0 <mmk_memcmp@@Base>
  40243f:	test   eax,eax
  402441:	jne    40245c <_start@@Base+0x2ec>
  402443:	mov    rax,QWORD PTR [rbp-0x98]
  40244a:	mov    rax,QWORD PTR [rax]
  40244d:	add    QWORD PTR [rbp-0xa0],rax
  402454:	jmp    40245d <_start@@Base+0x2ed>
  402456:	nop
  402457:	jmp    40245d <_start@@Base+0x2ed>
  402459:	nop
  40245a:	jmp    40245d <_start@@Base+0x2ed>
  40245c:	nop
  40245d:	mov    rdx,QWORD PTR [rbp-0x98]
  402464:	mov    rax,QWORD PTR [rbp-0x78]
  402468:	mov    rsi,rdx
  40246b:	mov    rdi,rax
  40246e:	call   4048a0 <mmk_mock_params_next@@Base>
  402473:	mov    QWORD PTR [rbp-0x98],rax
  40247a:	cmp    QWORD PTR [rbp-0x98],0x0
  402482:	jne    402339 <_start@@Base+0x1c9>
  402488:	mov    rax,QWORD PTR [rbp-0x80]
  40248c:	mov    QWORD PTR [rbp-0x90],rax
  402493:	jmp    4024be <_start@@Base+0x34e>
  402495:	mov    rax,QWORD PTR [rbp-0x90]
  40249c:	mov    rax,QWORD PTR [rax+0x10]
  4024a0:	mov    QWORD PTR [rbp-0x58],rax
  4024a4:	mov    rax,QWORD PTR [rbp-0x90]
  4024ab:	mov    rdi,rax
  4024ae:	call   405ac0 <mmk_free@@Base>
  4024b3:	mov    rax,QWORD PTR [rbp-0x58]
  4024b7:	mov    QWORD PTR [rbp-0x90],rax
  4024be:	cmp    QWORD PTR [rbp-0x90],0x0
  4024c6:	jne    402495 <_start@@Base+0x325>
  4024c8:	mov    rax,QWORD PTR [rbp-0xa0]
  4024cf:	mov    rdi,rax
  4024d2:	call   4054f2 <mmk_verify_set_times@@Base>
  4024d7:	mov    eax,DWORD PTR [rip+0x6beb]        # 4090c8 <__bss_start@@Base+0x8>
  4024dd:	jmp    40272b <_start@@Base+0x5bb>
  4024e2:	mov    QWORD PTR [rbp-0x30],0x0
  4024ea:	mov    QWORD PTR [rbp-0x28],0x0
  4024f2:	mov    QWORD PTR [rbp-0x20],0x0
  4024fa:	mov    QWORD PTR [rbp-0x18],0x0
  402502:	mov    eax,DWORD PTR [rbp-0xb4]
  402508:	mov    DWORD PTR [rbp-0x18],eax
  40250b:	lea    rax,[rbp-0x30]
  40250f:	mov    QWORD PTR [rbp-0x50],rax
  402513:	mov    rax,QWORD PTR [rbp-0x50]
  402517:	mov    esi,0x20
  40251c:	mov    rdi,rax
  40251f:	call   405694 <mmk_verify_register_call@@Base>
  402524:	call   4048f6 <mmk_mock_get_params@@Base>
  402529:	mov    QWORD PTR [rbp-0x88],rax
  402530:	jmp    402717 <_start@@Base+0x5a7>
  402535:	mov    rax,QWORD PTR [rbp-0x88]
  40253c:	mov    QWORD PTR [rbp-0x48],rax
  402540:	mov    rax,QWORD PTR [rbp-0x88]
  402547:	mov    rax,QWORD PTR [rax]
  40254a:	mov    QWORD PTR [rbp-0x40],rax
  40254e:	mov    rax,QWORD PTR [rbp-0x40]
  402552:	mov    rax,QWORD PTR [rax+0x10]
  402556:	test   rax,rax
  402559:	je     402628 <_start@@Base+0x4b8>
  40255f:	mov    rax,QWORD PTR [rbp-0x40]
  402563:	mov    rax,QWORD PTR [rax+0x10]
  402567:	mov    QWORD PTR [rbp-0x40],rax
  40256b:	mov    rax,QWORD PTR [rbp-0x40]
  40256f:	mov    eax,DWORD PTR [rax]
  402571:	test   eax,eax
  402573:	je     40264f <_start@@Base+0x4df>
  402579:	mov    rax,QWORD PTR [rbp-0x40]
  40257d:	mov    eax,DWORD PTR [rax]
  40257f:	test   eax,eax
  402581:	jns    4025f6 <_start@@Base+0x486>
  402583:	lea    rcx,[rbp-0xb4]
  40258a:	lea    rax,[rbp-0xb4]
  402591:	mov    edx,0x4
  402596:	mov    rsi,rcx
  402599:	mov    rdi,rax
  40259c:	call   4058c0 <mmk_memcmp@@Base>
  4025a1:	mov    DWORD PTR [rbp-0xa8],eax
  4025a7:	cmp    DWORD PTR [rbp-0xa8],0x0
  4025ae:	jne    4025c1 <_start@@Base+0x451>
  4025b0:	mov    rax,QWORD PTR [rbp-0x40]
  4025b4:	mov    eax,DWORD PTR [rax]
  4025b6:	and    eax,0x2
  4025b9:	test   eax,eax
  4025bb:	je     402701 <_start@@Base+0x591>
  4025c1:	cmp    DWORD PTR [rbp-0xa8],0x0
  4025c8:	jns    4025db <_start@@Base+0x46b>
  4025ca:	mov    rax,QWORD PTR [rbp-0x40]
  4025ce:	mov    eax,DWORD PTR [rax]
  4025d0:	and    eax,0x4
  4025d3:	test   eax,eax
  4025d5:	je     402701 <_start@@Base+0x591>
  4025db:	cmp    DWORD PTR [rbp-0xa8],0x0
  4025e2:	jle    40264f <_start@@Base+0x4df>
  4025e4:	mov    rax,QWORD PTR [rbp-0x40]
  4025e8:	mov    eax,DWORD PTR [rax]
  4025ea:	and    eax,0x8
  4025ed:	test   eax,eax
  4025ef:	jne    40264f <_start@@Base+0x4df>
  4025f1:	jmp    402701 <_start@@Base+0x591>
  4025f6:	mov    rax,QWORD PTR [rbp-0x40]
  4025fa:	mov    eax,DWORD PTR [rax]
  4025fc:	cmp    eax,0x1
  4025ff:	jne    40264f <_start@@Base+0x4df>
  402601:	mov    rax,QWORD PTR [rbp-0x40]
  402605:	mov    rdi,rax
  402608:	call   404590 <mmk_matcher_get_predicate@@Base>
  40260d:	mov    QWORD PTR [rbp-0x38],rax
  402611:	mov    edx,DWORD PTR [rbp-0xb4]
  402617:	mov    rax,QWORD PTR [rbp-0x38]
  40261b:	mov    edi,edx
  40261d:	call   rax
  40261f:	test   eax,eax
  402621:	jne    40264f <_start@@Base+0x4df>
  402623:	jmp    402705 <_start@@Base+0x595>
  402628:	mov    rax,QWORD PTR [rbp-0x48]
  40262c:	lea    rcx,[rax+0x48]
  402630:	lea    rax,[rbp-0xb4]
  402637:	mov    edx,0x4
  40263c:	mov    rsi,rcx
  40263f:	mov    rdi,rax
  402642:	call   4058c0 <mmk_memcmp@@Base>
  402647:	test   eax,eax
  402649:	jne    402704 <_start@@Base+0x594>
  40264f:	mov    rax,QWORD PTR [rbp-0x48]
  402653:	mov    eax,DWORD PTR [rax+0x14]
  402656:	test   eax,eax
  402658:	je     40266b <_start@@Base+0x4fb>
  40265a:	call   402060 <__errno_location@plt>
  40265f:	mov    rdx,rax
  402662:	mov    rax,QWORD PTR [rbp-0x48]
  402666:	mov    eax,DWORD PTR [rax+0x14]
  402669:	mov    DWORD PTR [rdx],eax
  40266b:	mov    rax,QWORD PTR [rbp-0x48]
  40266f:	mov    rax,QWORD PTR [rax+0x20]
  402673:	test   rax,rax
  402676:	je     4026a8 <_start@@Base+0x538>
  402678:	mov    rax,QWORD PTR [rbp-0x48]
  40267c:	mov    rax,QWORD PTR [rax+0x18]
  402680:	test   rax,rax
  402683:	jne    4026a8 <_start@@Base+0x538>
  402685:	mov    rax,QWORD PTR [rbp-0x48]
  402689:	mov    rax,QWORD PTR [rax+0x20]
  40268d:	mov    edx,DWORD PTR [rbp-0xb4]
  402693:	mov    edi,edx
  402695:	call   rax
  402697:	mov    DWORD PTR [rbp-0xa4],eax
  40269d:	mov    eax,DWORD PTR [rbp-0xa4]
  4026a3:	jmp    40272b <_start@@Base+0x5bb>
  4026a8:	mov    rax,QWORD PTR [rbp-0x48]
  4026ac:	mov    rax,QWORD PTR [rax+0x20]
  4026b0:	test   rax,rax
  4026b3:	je     4026e0 <_start@@Base+0x570>
  4026b5:	mov    rax,QWORD PTR [rbp-0x48]
  4026b9:	mov    rax,QWORD PTR [rax+0x18]
  4026bd:	test   rax,rax
  4026c0:	je     4026e0 <_start@@Base+0x570>
  4026c2:	mov    rax,QWORD PTR [rbp-0x48]
  4026c6:	mov    rax,QWORD PTR [rax+0x20]
  4026ca:	mov    edx,DWORD PTR [rbp-0xb4]
  4026d0:	mov    edi,edx
  4026d2:	call   rax
  4026d4:	mov    rax,QWORD PTR [rbp-0x48]
  4026d8:	mov    rax,QWORD PTR [rax+0x18]
  4026dc:	mov    eax,DWORD PTR [rax]
  4026de:	jmp    40272b <_start@@Base+0x5bb>
  4026e0:	mov    rax,QWORD PTR [rbp-0x48]
  4026e4:	mov    rax,QWORD PTR [rax+0x18]
  4026e8:	test   rax,rax
  4026eb:	je     4026f9 <_start@@Base+0x589>
  4026ed:	mov    rax,QWORD PTR [rbp-0x48]
  4026f1:	mov    rax,QWORD PTR [rax+0x18]
  4026f5:	mov    eax,DWORD PTR [rax]
  4026f7:	jmp    40272b <_start@@Base+0x5bb>
  4026f9:	mov    eax,DWORD PTR [rip+0x69c9]        # 4090c8 <__bss_start@@Base+0x8>
  4026ff:	jmp    40272b <_start@@Base+0x5bb>
  402701:	nop
  402702:	jmp    402705 <_start@@Base+0x595>
  402704:	nop
  402705:	mov    rax,QWORD PTR [rbp-0x88]
  40270c:	mov    rax,QWORD PTR [rax+0x8]
  402710:	mov    QWORD PTR [rbp-0x88],rax
  402717:	cmp    QWORD PTR [rbp-0x88],0x0
  40271f:	jne    402535 <_start@@Base+0x3c5>
  402725:	mov    eax,DWORD PTR [rip+0x699d]        # 4090c8 <__bss_start@@Base+0x8>
  40272b:	mov    rsi,QWORD PTR [rbp-0x8]
  40272f:	xor    rsi,QWORD PTR fs:0x28
  402738:	je     40273f <_start@@Base+0x5cf>
  40273a:	call   402080 <__stack_chk_fail@plt>
  40273f:	leave  
  402740:	ret    
  402741:	push   rbp
  402742:	mov    rbp,rsp
  402745:	sub    rsp,0x10
  402749:	mov    QWORD PTR [rbp-0x8],rdi
  40274d:	mov    rax,QWORD PTR [rbp-0x8]
  402751:	lea    rsi,[rip+0xfffffffffffffafe]        # 402256 <_start@@Base+0xe6>
  402758:	mov    rdi,rax
  40275b:	call   404599 <mmk_mock_create_internal@@Base>
  402760:	leave  
  402761:	ret    
  402762:	endbr64 
  402766:	push   rbp
  402767:	mov    rbp,rsp
  40276a:	add    rsp,0xffffffffffffff80
  40276e:	mov    rax,QWORD PTR fs:0x28
  402777:	mov    QWORD PTR [rbp-0x8],rax
  40277b:	xor    eax,eax
  40277d:	call   4044f0 <mmk_matcher_ctx@@Base>
  402782:	mov    QWORD PTR [rbp-0x68],rax
  402786:	cmp    QWORD PTR [rbp-0x68],0x0
  40278b:	je     40289e <_start@@Base+0x72e>
  402791:	call   4053ba <mmk_ctx@@Base>
  402796:	mov    rdi,rax
  402799:	call   404fe1 <mmk_stub_context@@Base>
  40279e:	mov    QWORD PTR [rbp-0x60],rax
  4027a2:	mov    rax,QWORD PTR [rbp-0x68]
  4027a6:	mov    eax,DWORD PTR [rax]
  4027a8:	test   eax,eax
  4027aa:	jne    4027fd <_start@@Base+0x68d>
  4027ac:	mov    edi,0x48
  4027b1:	call   405aa0 <mmk_malloc@@Base>
  4027b6:	mov    QWORD PTR [rbp-0x58],rax
  4027ba:	call   405bce <mmk_when_get_result@@Base>
  4027bf:	mov    rsi,rax
  4027c2:	mov    rcx,QWORD PTR [rbp-0x58]
  4027c6:	mov    rax,QWORD PTR [rsi]
  4027c9:	mov    rdx,QWORD PTR [rsi+0x8]
  4027cd:	mov    QWORD PTR [rcx+0x10],rax
  4027d1:	mov    QWORD PTR [rcx+0x18],rdx
  4027d5:	mov    rax,QWORD PTR [rsi+0x10]
  4027d9:	mov    rdx,QWORD PTR [rsi+0x18]
  4027dd:	mov    QWORD PTR [rcx+0x20],rax
  4027e1:	mov    QWORD PTR [rcx+0x28],rdx
  4027e5:	mov    rdx,QWORD PTR [rbp-0x58]
  4027e9:	mov    rax,QWORD PTR [rbp-0x60]
  4027ed:	mov    rsi,rdx
  4027f0:	mov    rdi,rax
  4027f3:	call   405bed <mmk_when_impl@@Base>
  4027f8:	jmp    40296b <_start@@Base+0x7fb>
  4027fd:	mov    rax,QWORD PTR [rbp-0x68]
  402801:	mov    eax,DWORD PTR [rax]
  402803:	cmp    eax,0x1
  402806:	jne    40296b <_start@@Base+0x7fb>
  40280c:	mov    QWORD PTR [rbp-0x80],0x0
  402814:	mov    rax,QWORD PTR [rbp-0x60]
  402818:	mov    rdi,rax
  40281b:	call   404865 <mmk_mock_params_begin@@Base>
  402820:	mov    QWORD PTR [rbp-0x78],rax
  402824:	jmp    402855 <_start@@Base+0x6e5>
  402826:	mov    rax,QWORD PTR [rbp-0x68]
  40282a:	mov    QWORD PTR [rbp-0x50],rax
  40282e:	mov    rax,QWORD PTR [rbp-0x78]
  402832:	mov    rax,QWORD PTR [rax]
  402835:	add    QWORD PTR [rbp-0x80],rax
  402839:	nop
  40283a:	endbr64 
  40283e:	mov    rdx,QWORD PTR [rbp-0x78]
  402842:	mov    rax,QWORD PTR [rbp-0x60]
  402846:	mov    rsi,rdx
  402849:	mov    rdi,rax
  40284c:	call   4048a0 <mmk_mock_params_next@@Base>
  402851:	mov    QWORD PTR [rbp-0x78],rax
  402855:	cmp    QWORD PTR [rbp-0x78],0x0
  40285a:	jne    402826 <_start@@Base+0x6b6>
  40285c:	mov    rax,QWORD PTR [rbp-0x68]
  402860:	mov    QWORD PTR [rbp-0x70],rax
  402864:	jmp    402886 <_start@@Base+0x716>
  402866:	mov    rax,QWORD PTR [rbp-0x70]
  40286a:	mov    rax,QWORD PTR [rax+0x10]
  40286e:	mov    QWORD PTR [rbp-0x48],rax
  402872:	mov    rax,QWORD PTR [rbp-0x70]
  402876:	mov    rdi,rax
  402879:	call   405ac0 <mmk_free@@Base>
  40287e:	mov    rax,QWORD PTR [rbp-0x48]
  402882:	mov    QWORD PTR [rbp-0x70],rax
  402886:	cmp    QWORD PTR [rbp-0x70],0x0
  40288b:	jne    402866 <_start@@Base+0x6f6>
  40288d:	mov    rax,QWORD PTR [rbp-0x80]
  402891:	mov    rdi,rax
  402894:	call   4054f2 <mmk_verify_set_times@@Base>
  402899:	jmp    40296b <_start@@Base+0x7fb>
  40289e:	mov    QWORD PTR [rbp-0x20],0x0
  4028a6:	mov    QWORD PTR [rbp-0x18],0x0
  4028ae:	mov    QWORD PTR [rbp-0x10],0x0
  4028b6:	lea    rax,[rbp-0x20]
  4028ba:	mov    QWORD PTR [rbp-0x40],rax
  4028be:	mov    rax,QWORD PTR [rbp-0x40]
  4028c2:	mov    esi,0x18
  4028c7:	mov    rdi,rax
  4028ca:	call   405694 <mmk_verify_register_call@@Base>
  4028cf:	call   4048f6 <mmk_mock_get_params@@Base>
  4028d4:	mov    QWORD PTR [rbp-0x38],rax
  4028d8:	cmp    QWORD PTR [rbp-0x38],0x0
  4028dd:	je     40296e <_start@@Base+0x7fe>
  4028e3:	mov    rax,QWORD PTR [rbp-0x38]
  4028e7:	mov    QWORD PTR [rbp-0x30],rax
  4028eb:	mov    rax,QWORD PTR [rbp-0x38]
  4028ef:	mov    rax,QWORD PTR [rax]
  4028f2:	mov    QWORD PTR [rbp-0x28],rax
  4028f6:	mov    rax,QWORD PTR [rbp-0x30]
  4028fa:	mov    eax,DWORD PTR [rax+0x14]
  4028fd:	test   eax,eax
  4028ff:	je     402912 <_start@@Base+0x7a2>
  402901:	call   402060 <__errno_location@plt>
  402906:	mov    rdx,rax
  402909:	mov    rax,QWORD PTR [rbp-0x30]
  40290d:	mov    eax,DWORD PTR [rax+0x14]
  402910:	mov    DWORD PTR [rdx],eax
  402912:	mov    rax,QWORD PTR [rbp-0x30]
  402916:	mov    rax,QWORD PTR [rax+0x20]
  40291a:	test   rax,rax
  40291d:	je     402938 <_start@@Base+0x7c8>
  40291f:	mov    rax,QWORD PTR [rbp-0x30]
  402923:	mov    rax,QWORD PTR [rax+0x18]
  402927:	test   rax,rax
  40292a:	jne    402938 <_start@@Base+0x7c8>
  40292c:	mov    rax,QWORD PTR [rbp-0x30]
  402930:	mov    rax,QWORD PTR [rax+0x20]
  402934:	call   rax
  402936:	jmp    40296f <_start@@Base+0x7ff>
  402938:	mov    rax,QWORD PTR [rbp-0x30]
  40293c:	mov    rax,QWORD PTR [rax+0x20]
  402940:	test   rax,rax
  402943:	je     40295e <_start@@Base+0x7ee>
  402945:	mov    rax,QWORD PTR [rbp-0x30]
  402949:	mov    rax,QWORD PTR [rax+0x18]
  40294d:	test   rax,rax
  402950:	je     40295e <_start@@Base+0x7ee>
  402952:	mov    rax,QWORD PTR [rbp-0x30]
  402956:	mov    rax,QWORD PTR [rax+0x20]
  40295a:	call   rax
  40295c:	jmp    40296f <_start@@Base+0x7ff>
  40295e:	mov    rax,QWORD PTR [rbp-0x30]
  402962:	mov    rax,QWORD PTR [rax+0x18]
  402966:	test   rax,rax
  402969:	jmp    40296f <_start@@Base+0x7ff>
  40296b:	nop
  40296c:	jmp    40296f <_start@@Base+0x7ff>
  40296e:	nop
  40296f:	mov    rax,QWORD PTR [rbp-0x8]
  402973:	xor    rax,QWORD PTR fs:0x28
  40297c:	je     402983 <_start@@Base+0x813>
  40297e:	call   402080 <__stack_chk_fail@plt>
  402983:	leave  
  402984:	ret    
  402985:	push   rbp
  402986:	mov    rbp,rsp
  402989:	sub    rsp,0x10
  40298d:	mov    QWORD PTR [rbp-0x8],rdi
  402991:	mov    rax,QWORD PTR [rbp-0x8]
  402995:	lea    rsi,[rip+0xfffffffffffffdc6]        # 402762 <_start@@Base+0x5f2>
  40299c:	mov    rdi,rax
  40299f:	call   404599 <mmk_mock_create_internal@@Base>
  4029a4:	leave  
  4029a5:	ret    
  4029a6:	endbr64 
  4029aa:	push   rbp
  4029ab:	mov    rbp,rsp
  4029ae:	push   rbx
  4029af:	sub    rsp,0x48
  4029b3:	mov    DWORD PTR [rbp-0x34],edi
  4029b6:	mov    QWORD PTR [rbp-0x40],rsi
  4029ba:	mov    QWORD PTR [rbp-0x48],rdx
  4029be:	mov    QWORD PTR [rbp-0x50],rcx
  4029c2:	mov    rax,QWORD PTR fs:0x28
  4029cb:	mov    QWORD PTR [rbp-0x18],rax
  4029cf:	xor    eax,eax
  4029d1:	cmp    DWORD PTR [rbp-0x34],0x0
  4029d5:	jg     4029e1 <_start@@Base+0x871>
  4029d7:	mov    eax,0x0
  4029dc:	jmp    402ae5 <_start@@Base+0x975>
  4029e1:	mov    eax,DWORD PTR [rbp-0x34]
  4029e4:	cdqe   
  4029e6:	shl    rax,0x3
  4029ea:	mov    rdi,rax
  4029ed:	call   405aa0 <mmk_malloc@@Base>
  4029f2:	mov    QWORD PTR [rbp-0x20],rax
  4029f6:	mov    DWORD PTR [rbp-0x24],0x0
  4029fd:	jmp    402abc <_start@@Base+0x94c>
  402a02:	mov    eax,DWORD PTR [rbp-0x24]
  402a05:	cdqe   
  402a07:	lea    rdx,[rax*8+0x0]
  402a0f:	mov    rax,QWORD PTR [rbp-0x20]
  402a13:	lea    rbx,[rdx+rax*1]
  402a17:	mov    edi,0xc
  402a1c:	call   405aa0 <mmk_malloc@@Base>
  402a21:	mov    QWORD PTR [rbx],rax
  402a24:	mov    eax,DWORD PTR [rbp-0x24]
  402a27:	cdqe   
  402a29:	lea    rdx,[rax*8+0x0]
  402a31:	mov    rax,QWORD PTR [rbp-0x20]
  402a35:	add    rax,rdx
  402a38:	mov    rax,QWORD PTR [rax]
  402a3b:	mov    QWORD PTR [rax],0x4
  402a42:	mov    rax,QWORD PTR [rbp-0x40]
  402a46:	mov    eax,DWORD PTR [rax]
  402a48:	cmp    eax,0x2f
  402a4b:	ja     402a71 <_start@@Base+0x901>
  402a4d:	mov    rax,QWORD PTR [rbp-0x40]
  402a51:	mov    rdx,QWORD PTR [rax+0x10]
  402a55:	mov    rax,QWORD PTR [rbp-0x40]
  402a59:	mov    eax,DWORD PTR [rax]
  402a5b:	mov    eax,eax
  402a5d:	add    rax,rdx
  402a60:	mov    rdx,QWORD PTR [rbp-0x40]
  402a64:	mov    edx,DWORD PTR [rdx]
  402a66:	lea    ecx,[rdx+0x8]
  402a69:	mov    rdx,QWORD PTR [rbp-0x40]
  402a6d:	mov    DWORD PTR [rdx],ecx
  402a6f:	jmp    402a85 <_start@@Base+0x915>
  402a71:	mov    rax,QWORD PTR [rbp-0x40]
  402a75:	mov    rax,QWORD PTR [rax+0x8]
  402a79:	lea    rcx,[rax+0x8]
  402a7d:	mov    rdx,QWORD PTR [rbp-0x40]
  402a81:	mov    QWORD PTR [rdx+0x8],rcx
  402a85:	mov    eax,DWORD PTR [rax]
  402a87:	mov    DWORD PTR [rbp-0x28],eax
  402a8a:	mov    eax,DWORD PTR [rbp-0x24]
  402a8d:	cdqe   
  402a8f:	lea    rdx,[rax*8+0x0]
  402a97:	mov    rax,QWORD PTR [rbp-0x20]
  402a9b:	add    rax,rdx
  402a9e:	mov    rax,QWORD PTR [rax]
  402aa1:	lea    rcx,[rax+0x8]
  402aa5:	lea    rax,[rbp-0x28]
  402aa9:	mov    edx,0x4
  402aae:	mov    rsi,rax
  402ab1:	mov    rdi,rcx
  402ab4:	call   405910 <mmk_memcpy@@Base>
  402ab9:	inc    DWORD PTR [rbp-0x24]
  402abc:	mov    eax,DWORD PTR [rbp-0x24]
  402abf:	cmp    eax,DWORD PTR [rbp-0x34]
  402ac2:	jl     402a02 <_start@@Base+0x892>
  402ac8:	mov    eax,DWORD PTR [rbp-0x34]
  402acb:	movsxd rdx,eax
  402ace:	mov    rax,QWORD PTR [rbp-0x48]
  402ad2:	mov    QWORD PTR [rax],rdx
  402ad5:	mov    rax,QWORD PTR [rbp-0x50]
  402ad9:	mov    rdx,QWORD PTR [rbp-0x20]
  402add:	mov    QWORD PTR [rax],rdx
  402ae0:	mov    eax,0x1
  402ae5:	mov    rsi,QWORD PTR [rbp-0x18]
  402ae9:	xor    rsi,QWORD PTR fs:0x28
  402af2:	je     402af9 <_start@@Base+0x989>
  402af4:	call   402080 <__stack_chk_fail@plt>
  402af9:	add    rsp,0x48
  402afd:	pop    rbx
  402afe:	pop    rbp
  402aff:	ret    
  402b00:	endbr64 
  402b04:	push   rbp
  402b05:	mov    rbp,rsp
  402b08:	sub    rsp,0x1f0
  402b0f:	mov    DWORD PTR [rbp-0x1e4],edi
  402b15:	mov    QWORD PTR [rbp-0xa8],rsi
  402b1c:	mov    QWORD PTR [rbp-0xa0],rdx
  402b23:	mov    QWORD PTR [rbp-0x98],rcx
  402b2a:	mov    QWORD PTR [rbp-0x90],r8
  402b31:	mov    QWORD PTR [rbp-0x88],r9
  402b38:	test   al,al
  402b3a:	je     402b64 <_start@@Base+0x9f4>
  402b3c:	vmovaps XMMWORD PTR [rbp-0x80],xmm0
  402b41:	vmovaps XMMWORD PTR [rbp-0x70],xmm1
  402b46:	vmovaps XMMWORD PTR [rbp-0x60],xmm2
  402b4b:	vmovaps XMMWORD PTR [rbp-0x50],xmm3
  402b50:	vmovaps XMMWORD PTR [rbp-0x40],xmm4
  402b55:	vmovaps XMMWORD PTR [rbp-0x30],xmm5
  402b5a:	vmovaps XMMWORD PTR [rbp-0x20],xmm6
  402b5f:	vmovaps XMMWORD PTR [rbp-0x10],xmm7
  402b64:	mov    rax,QWORD PTR fs:0x28
  402b6d:	mov    QWORD PTR [rbp-0xb8],rax
  402b74:	xor    eax,eax
  402b76:	lea    rax,[rip+0xfffffffffffffe29]        # 4029a6 <_start@@Base+0x836>
  402b7d:	mov    QWORD PTR [rbp-0x178],rax
  402b84:	mov    DWORD PTR [rbp-0xe8],0x8
  402b8e:	mov    DWORD PTR [rbp-0xe4],0x30
  402b98:	lea    rax,[rbp+0x10]
  402b9c:	mov    QWORD PTR [rbp-0xe0],rax
  402ba3:	lea    rax,[rbp-0xb0]
  402baa:	mov    QWORD PTR [rbp-0xd8],rax
  402bb1:	call   4044f0 <mmk_matcher_ctx@@Base>
  402bb6:	mov    QWORD PTR [rbp-0x170],rax
  402bbd:	cmp    QWORD PTR [rbp-0x170],0x0
  402bc5:	je     40319e <_start@@Base+0x102e>
  402bcb:	call   4053ba <mmk_ctx@@Base>
  402bd0:	mov    rdi,rax
  402bd3:	call   404fe1 <mmk_stub_context@@Base>
  402bd8:	mov    QWORD PTR [rbp-0x168],rax
  402bdf:	mov    rax,QWORD PTR [rbp-0x170]
  402be6:	mov    eax,DWORD PTR [rax]
  402be8:	test   eax,eax
  402bea:	jne    402cee <_start@@Base+0xb7e>
  402bf0:	mov    edi,0x50
  402bf5:	call   405aa0 <mmk_malloc@@Base>
  402bfa:	mov    QWORD PTR [rbp-0x160],rax
  402c01:	call   405bce <mmk_when_get_result@@Base>
  402c06:	mov    rsi,rax
  402c09:	mov    rcx,QWORD PTR [rbp-0x160]
  402c10:	mov    rax,QWORD PTR [rsi]
  402c13:	mov    rdx,QWORD PTR [rsi+0x8]
  402c17:	mov    QWORD PTR [rcx+0x10],rax
  402c1b:	mov    QWORD PTR [rcx+0x18],rdx
  402c1f:	mov    rax,QWORD PTR [rsi+0x10]
  402c23:	mov    rdx,QWORD PTR [rsi+0x18]
  402c27:	mov    QWORD PTR [rcx+0x20],rax
  402c2b:	mov    QWORD PTR [rcx+0x28],rdx
  402c2f:	mov    edx,DWORD PTR [rbp-0x1e4]
  402c35:	mov    rax,QWORD PTR [rbp-0x160]
  402c3c:	mov    DWORD PTR [rax+0x48],edx
  402c3f:	mov    QWORD PTR [rbp-0x1b0],0x0
  402c4a:	mov    QWORD PTR [rbp-0x110],0x0
  402c55:	lea    rcx,[rbp-0xd0]
  402c5c:	lea    rsi,[rbp-0xe8]
  402c63:	mov    rax,QWORD PTR [rsi]
  402c66:	mov    rdx,QWORD PTR [rsi+0x8]
  402c6a:	mov    QWORD PTR [rcx],rax
  402c6d:	mov    QWORD PTR [rcx+0x8],rdx
  402c71:	mov    rax,QWORD PTR [rsi+0x10]
  402c75:	mov    QWORD PTR [rcx+0x10],rax
  402c79:	mov    edi,DWORD PTR [rbp-0x1e4]
  402c7f:	lea    rcx,[rbp-0x110]
  402c86:	lea    rdx,[rbp-0x1b0]
  402c8d:	lea    rsi,[rbp-0xd0]
  402c94:	mov    rax,QWORD PTR [rbp-0x178]
  402c9b:	call   rax
  402c9d:	mov    DWORD PTR [rbp-0x1d4],eax
  402ca3:	cmp    DWORD PTR [rbp-0x1d4],0x0
  402caa:	je     402cd0 <_start@@Base+0xb60>
  402cac:	mov    rdx,QWORD PTR [rbp-0x1b0]
  402cb3:	mov    rax,QWORD PTR [rbp-0x160]
  402cba:	mov    QWORD PTR [rax+0x38],rdx
  402cbe:	mov    rdx,QWORD PTR [rbp-0x110]
  402cc5:	mov    rax,QWORD PTR [rbp-0x160]
  402ccc:	mov    QWORD PTR [rax+0x40],rdx
  402cd0:	mov    rdx,QWORD PTR [rbp-0x160]
  402cd7:	mov    rax,QWORD PTR [rbp-0x168]
  402cde:	mov    rsi,rdx
  402ce1:	mov    rdi,rax
  402ce4:	call   405bed <mmk_when_impl@@Base>
  402ce9:	jmp    403193 <_start@@Base+0x1023>
  402cee:	mov    rax,QWORD PTR [rbp-0x170]
  402cf5:	mov    eax,DWORD PTR [rax]
  402cf7:	cmp    eax,0x1
  402cfa:	jne    403193 <_start@@Base+0x1023>
  402d00:	mov    QWORD PTR [rbp-0x1a8],0x0
  402d0b:	mov    rax,QWORD PTR [rbp-0x168]
  402d12:	mov    rdi,rax
  402d15:	call   404865 <mmk_mock_params_begin@@Base>
  402d1a:	mov    QWORD PTR [rbp-0x1a0],rax
  402d21:	jmp    40312d <_start@@Base+0xfbd>
  402d26:	mov    rax,QWORD PTR [rbp-0x170]
  402d2d:	mov    QWORD PTR [rbp-0x198],rax
  402d34:	mov    rax,QWORD PTR [rbp-0x198]
  402d3b:	mov    rax,QWORD PTR [rax+0x10]
  402d3f:	test   rax,rax
  402d42:	je     402e42 <_start@@Base+0xcd2>
  402d48:	mov    rax,QWORD PTR [rbp-0x198]
  402d4f:	mov    rax,QWORD PTR [rax+0x10]
  402d53:	mov    QWORD PTR [rbp-0x198],rax
  402d5a:	mov    rax,QWORD PTR [rbp-0x198]
  402d61:	mov    eax,DWORD PTR [rax]
  402d63:	test   eax,eax
  402d65:	je     402e6c <_start@@Base+0xcfc>
  402d6b:	mov    rax,QWORD PTR [rbp-0x198]
  402d72:	mov    eax,DWORD PTR [rax]
  402d74:	test   eax,eax
  402d76:	jns    402e00 <_start@@Base+0xc90>
  402d7c:	mov    rax,QWORD PTR [rbp-0x1a0]
  402d83:	lea    rcx,[rax+0x18]
  402d87:	lea    rax,[rbp-0x1e4]
  402d8e:	mov    edx,0x4
  402d93:	mov    rsi,rax
  402d96:	mov    rdi,rcx
  402d99:	call   4058c0 <mmk_memcmp@@Base>
  402d9e:	mov    DWORD PTR [rbp-0x1d0],eax
  402da4:	cmp    DWORD PTR [rbp-0x1d0],0x0
  402dab:	jne    402dc1 <_start@@Base+0xc51>
  402dad:	mov    rax,QWORD PTR [rbp-0x198]
  402db4:	mov    eax,DWORD PTR [rax]
  402db6:	and    eax,0x2
  402db9:	test   eax,eax
  402dbb:	je     4030f7 <_start@@Base+0xf87>
  402dc1:	cmp    DWORD PTR [rbp-0x1d0],0x0
  402dc8:	jns    402dde <_start@@Base+0xc6e>
  402dca:	mov    rax,QWORD PTR [rbp-0x198]
  402dd1:	mov    eax,DWORD PTR [rax]
  402dd3:	and    eax,0x4
  402dd6:	test   eax,eax
  402dd8:	je     4030fa <_start@@Base+0xf8a>
  402dde:	cmp    DWORD PTR [rbp-0x1d0],0x0
  402de5:	jle    402e6c <_start@@Base+0xcfc>
  402deb:	mov    rax,QWORD PTR [rbp-0x198]
  402df2:	mov    eax,DWORD PTR [rax]
  402df4:	and    eax,0x8
  402df7:	test   eax,eax
  402df9:	jne    402e6c <_start@@Base+0xcfc>
  402dfb:	jmp    40310d <_start@@Base+0xf9d>
  402e00:	mov    rax,QWORD PTR [rbp-0x198]
  402e07:	mov    eax,DWORD PTR [rax]
  402e09:	cmp    eax,0x1
  402e0c:	jne    402e6c <_start@@Base+0xcfc>
  402e0e:	mov    rax,QWORD PTR [rbp-0x198]
  402e15:	mov    rdi,rax
  402e18:	call   404590 <mmk_matcher_get_predicate@@Base>
  402e1d:	mov    QWORD PTR [rbp-0x158],rax
  402e24:	mov    rax,QWORD PTR [rbp-0x1a0]
  402e2b:	mov    edx,DWORD PTR [rax+0x18]
  402e2e:	mov    rax,QWORD PTR [rbp-0x158]
  402e35:	mov    edi,edx
  402e37:	call   rax
  402e39:	test   eax,eax
  402e3b:	jne    402e6c <_start@@Base+0xcfc>
  402e3d:	jmp    40310d <_start@@Base+0xf9d>
  402e42:	mov    rax,QWORD PTR [rbp-0x1a0]
  402e49:	lea    rcx,[rax+0x18]
  402e4d:	lea    rax,[rbp-0x1e4]
  402e54:	mov    edx,0x4
  402e59:	mov    rsi,rax
  402e5c:	mov    rdi,rcx
  402e5f:	call   4058c0 <mmk_memcmp@@Base>
  402e64:	test   eax,eax
  402e66:	jne    4030fd <_start@@Base+0xf8d>
  402e6c:	mov    QWORD PTR [rbp-0x1b0],0x0
  402e77:	mov    QWORD PTR [rbp-0x110],0x0
  402e82:	lea    rcx,[rbp-0xd0]
  402e89:	lea    rsi,[rbp-0xe8]
  402e90:	mov    rax,QWORD PTR [rsi]
  402e93:	mov    rdx,QWORD PTR [rsi+0x8]
  402e97:	mov    QWORD PTR [rcx],rax
  402e9a:	mov    QWORD PTR [rcx+0x8],rdx
  402e9e:	mov    rax,QWORD PTR [rsi+0x10]
  402ea2:	mov    QWORD PTR [rcx+0x10],rax
  402ea6:	mov    edi,DWORD PTR [rbp-0x1e4]
  402eac:	lea    rcx,[rbp-0x110]
  402eb3:	lea    rdx,[rbp-0x1b0]
  402eba:	lea    rsi,[rbp-0xd0]
  402ec1:	mov    rax,QWORD PTR [rbp-0x178]
  402ec8:	call   rax
  402eca:	mov    DWORD PTR [rbp-0x1cc],eax
  402ed0:	cmp    DWORD PTR [rbp-0x1cc],0x0
  402ed7:	je     403100 <_start@@Base+0xf90>
  402edd:	mov    rax,QWORD PTR [rbp-0x1a0]
  402ee4:	mov    rdx,QWORD PTR [rax+0x8]
  402ee8:	mov    rax,QWORD PTR [rbp-0x1b0]
  402eef:	cmp    rdx,rax
  402ef2:	jne    403100 <_start@@Base+0xf90>
  402ef8:	mov    QWORD PTR [rbp-0x190],0x0
  402f03:	jmp    4030c1 <_start@@Base+0xf51>
  402f08:	mov    rax,QWORD PTR [rbp-0x1a0]
  402f0f:	mov    rax,QWORD PTR [rax+0x10]
  402f13:	mov    rdx,QWORD PTR [rbp-0x190]
  402f1a:	shl    rdx,0x3
  402f1e:	add    rax,rdx
  402f21:	mov    rax,QWORD PTR [rax]
  402f24:	mov    QWORD PTR [rbp-0x150],rax
  402f2b:	mov    rax,QWORD PTR [rbp-0x110]
  402f32:	mov    rdx,QWORD PTR [rbp-0x190]
  402f39:	shl    rdx,0x3
  402f3d:	add    rax,rdx
  402f40:	mov    rax,QWORD PTR [rax]
  402f43:	mov    QWORD PTR [rbp-0x148],rax
  402f4a:	mov    rax,QWORD PTR [rbp-0x150]
  402f51:	mov    rdx,QWORD PTR [rax]
  402f54:	mov    rax,QWORD PTR [rbp-0x148]
  402f5b:	mov    rax,QWORD PTR [rax]
  402f5e:	cmp    rdx,rax
  402f61:	jne    403103 <_start@@Base+0xf93>
  402f67:	mov    rax,QWORD PTR [rbp-0x198]
  402f6e:	mov    rax,QWORD PTR [rax+0x10]
  402f72:	test   rax,rax
  402f75:	je     40307c <_start@@Base+0xf0c>
  402f7b:	mov    rax,QWORD PTR [rbp-0x198]
  402f82:	mov    rax,QWORD PTR [rax+0x10]
  402f86:	mov    QWORD PTR [rbp-0x198],rax
  402f8d:	mov    rax,QWORD PTR [rbp-0x198]
  402f94:	mov    eax,DWORD PTR [rax]
  402f96:	test   eax,eax
  402f98:	je     4030ab <_start@@Base+0xf3b>
  402f9e:	mov    rax,QWORD PTR [rbp-0x198]
  402fa5:	mov    eax,DWORD PTR [rax]
  402fa7:	test   eax,eax
  402fa9:	jns    40303c <_start@@Base+0xecc>
  402faf:	mov    rax,QWORD PTR [rbp-0x148]
  402fb6:	mov    rax,QWORD PTR [rax]
  402fb9:	mov    rdx,QWORD PTR [rbp-0x148]
  402fc0:	lea    rsi,[rdx+0x8]
  402fc4:	mov    rdx,QWORD PTR [rbp-0x150]
  402fcb:	lea    rcx,[rdx+0x8]
  402fcf:	mov    rdx,rax
  402fd2:	mov    rdi,rcx
  402fd5:	call   4058c0 <mmk_memcmp@@Base>
  402fda:	mov    DWORD PTR [rbp-0x1c8],eax
  402fe0:	cmp    DWORD PTR [rbp-0x1c8],0x0
  402fe7:	jne    402ffd <_start@@Base+0xe8d>
  402fe9:	mov    rax,QWORD PTR [rbp-0x198]
  402ff0:	mov    eax,DWORD PTR [rax]
  402ff2:	and    eax,0x2
  402ff5:	test   eax,eax
  402ff7:	je     403106 <_start@@Base+0xf96>
  402ffd:	cmp    DWORD PTR [rbp-0x1c8],0x0
  403004:	jns    40301a <_start@@Base+0xeaa>
  403006:	mov    rax,QWORD PTR [rbp-0x198]
  40300d:	mov    eax,DWORD PTR [rax]
  40300f:	and    eax,0x4
  403012:	test   eax,eax
  403014:	je     403109 <_start@@Base+0xf99>
  40301a:	cmp    DWORD PTR [rbp-0x1c8],0x0
  403021:	jle    4030ab <_start@@Base+0xf3b>
  403027:	mov    rax,QWORD PTR [rbp-0x198]
  40302e:	mov    eax,DWORD PTR [rax]
  403030:	and    eax,0x8
  403033:	test   eax,eax
  403035:	jne    4030ab <_start@@Base+0xf3b>
  403037:	jmp    40310d <_start@@Base+0xf9d>
  40303c:	mov    rax,QWORD PTR [rbp-0x198]
  403043:	mov    eax,DWORD PTR [rax]
  403045:	cmp    eax,0x1
  403048:	jne    4030ab <_start@@Base+0xf3b>
  40304a:	mov    rax,QWORD PTR [rbp-0x198]
  403051:	mov    rdi,rax
  403054:	call   404590 <mmk_matcher_get_predicate@@Base>
  403059:	mov    QWORD PTR [rbp-0x140],rax
  403060:	mov    rdx,QWORD PTR [rbp-0x150]
  403067:	mov    rax,QWORD PTR [rbp-0x140]
  40306e:	mov    rdi,rdx
  403071:	call   rax
  403073:	test   eax,eax
  403075:	jne    4030ab <_start@@Base+0xf3b>
  403077:	jmp    40310d <_start@@Base+0xf9d>
  40307c:	mov    rax,QWORD PTR [rbp-0x148]
  403083:	mov    rax,QWORD PTR [rax]
  403086:	mov    rdx,QWORD PTR [rbp-0x148]
  40308d:	lea    rsi,[rdx+0x8]
  403091:	mov    rdx,QWORD PTR [rbp-0x150]
  403098:	lea    rcx,[rdx+0x8]
  40309c:	mov    rdx,rax
  40309f:	mov    rdi,rcx
  4030a2:	call   4058c0 <mmk_memcmp@@Base>
  4030a7:	test   eax,eax
  4030a9:	jne    40310c <_start@@Base+0xf9c>
  4030ab:	mov    rax,QWORD PTR [rbp-0x148]
  4030b2:	mov    rdi,rax
  4030b5:	call   405ac0 <mmk_free@@Base>
  4030ba:	inc    QWORD PTR [rbp-0x190]
  4030c1:	mov    rax,QWORD PTR [rbp-0x1b0]
  4030c8:	cmp    QWORD PTR [rbp-0x190],rax
  4030cf:	jb     402f08 <_start@@Base+0xd98>
  4030d5:	mov    rax,QWORD PTR [rbp-0x110]
  4030dc:	mov    rdi,rax
  4030df:	call   405ac0 <mmk_free@@Base>
  4030e4:	mov    rax,QWORD PTR [rbp-0x1a0]
  4030eb:	mov    rax,QWORD PTR [rax]
  4030ee:	add    QWORD PTR [rbp-0x1a8],rax
  4030f5:	jmp    40310d <_start@@Base+0xf9d>
  4030f7:	nop
  4030f8:	jmp    40310d <_start@@Base+0xf9d>
  4030fa:	nop
  4030fb:	jmp    40310d <_start@@Base+0xf9d>
  4030fd:	nop
  4030fe:	jmp    40310d <_start@@Base+0xf9d>
  403100:	nop
  403101:	jmp    40310d <_start@@Base+0xf9d>
  403103:	nop
  403104:	jmp    40310d <_start@@Base+0xf9d>
  403106:	nop
  403107:	jmp    40310d <_start@@Base+0xf9d>
  403109:	nop
  40310a:	jmp    40310d <_start@@Base+0xf9d>
  40310c:	nop
  40310d:	mov    rdx,QWORD PTR [rbp-0x1a0]
  403114:	mov    rax,QWORD PTR [rbp-0x168]
  40311b:	mov    rsi,rdx
  40311e:	mov    rdi,rax
  403121:	call   4048a0 <mmk_mock_params_next@@Base>
  403126:	mov    QWORD PTR [rbp-0x1a0],rax
  40312d:	cmp    QWORD PTR [rbp-0x1a0],0x0
  403135:	jne    402d26 <_start@@Base+0xbb6>
  40313b:	mov    rax,QWORD PTR [rbp-0x170]
  403142:	mov    QWORD PTR [rbp-0x188],rax
  403149:	jmp    40317a <_start@@Base+0x100a>
  40314b:	mov    rax,QWORD PTR [rbp-0x188]
  403152:	mov    rax,QWORD PTR [rax+0x10]
  403156:	mov    QWORD PTR [rbp-0x138],rax
  40315d:	mov    rax,QWORD PTR [rbp-0x188]
  403164:	mov    rdi,rax
  403167:	call   405ac0 <mmk_free@@Base>
  40316c:	mov    rax,QWORD PTR [rbp-0x138]
  403173:	mov    QWORD PTR [rbp-0x188],rax
  40317a:	cmp    QWORD PTR [rbp-0x188],0x0
  403182:	jne    40314b <_start@@Base+0xfdb>
  403184:	mov    rax,QWORD PTR [rbp-0x1a8]
  40318b:	mov    rdi,rax
  40318e:	call   4054f2 <mmk_verify_set_times@@Base>
  403193:	mov    eax,DWORD PTR [rip+0x5f33]        # 4090cc <__bss_start@@Base+0xc>
  403199:	jmp    40353a <_start@@Base+0x13ca>
  40319e:	mov    QWORD PTR [rbp-0x110],0x0
  4031a9:	mov    QWORD PTR [rbp-0x108],0x0
  4031b4:	mov    QWORD PTR [rbp-0x100],0x0
  4031bf:	mov    QWORD PTR [rbp-0xf8],0x0
  4031ca:	mov    eax,DWORD PTR [rbp-0x1e4]
  4031d0:	mov    DWORD PTR [rbp-0xf8],eax
  4031d6:	lea    rax,[rbp-0x110]
  4031dd:	mov    QWORD PTR [rbp-0x130],rax
  4031e4:	mov    QWORD PTR [rbp-0x1b8],0x0
  4031ef:	mov    QWORD PTR [rbp-0x1b0],0x0
  4031fa:	lea    rcx,[rbp-0xd0]
  403201:	lea    rsi,[rbp-0xe8]
  403208:	mov    rax,QWORD PTR [rsi]
  40320b:	mov    rdx,QWORD PTR [rsi+0x8]
  40320f:	mov    QWORD PTR [rcx],rax
  403212:	mov    QWORD PTR [rcx+0x8],rdx
  403216:	mov    rax,QWORD PTR [rsi+0x10]
  40321a:	mov    QWORD PTR [rcx+0x10],rax
  40321e:	mov    edi,DWORD PTR [rbp-0x1e4]
  403224:	lea    rcx,[rbp-0x1b0]
  40322b:	lea    rdx,[rbp-0x1b8]
  403232:	lea    rsi,[rbp-0xd0]
  403239:	mov    rax,QWORD PTR [rbp-0x178]
  403240:	call   rax
  403242:	mov    DWORD PTR [rbp-0x1c4],eax
  403248:	cmp    DWORD PTR [rbp-0x1c4],0x0
  40324f:	je     403275 <_start@@Base+0x1105>
  403251:	mov    rdx,QWORD PTR [rbp-0x1b8]
  403258:	mov    rax,QWORD PTR [rbp-0x130]
  40325f:	mov    QWORD PTR [rax+0x8],rdx
  403263:	mov    rdx,QWORD PTR [rbp-0x1b0]
  40326a:	mov    rax,QWORD PTR [rbp-0x130]
  403271:	mov    QWORD PTR [rax+0x10],rdx
  403275:	mov    rax,QWORD PTR [rbp-0x130]
  40327c:	mov    esi,0x20
  403281:	mov    rdi,rax
  403284:	call   405694 <mmk_verify_register_call@@Base>
  403289:	call   4048f6 <mmk_mock_get_params@@Base>
  40328e:	mov    QWORD PTR [rbp-0x180],rax
  403295:	jmp    403526 <_start@@Base+0x13b6>
  40329a:	mov    rax,QWORD PTR [rbp-0x180]
  4032a1:	mov    QWORD PTR [rbp-0x128],rax
  4032a8:	mov    rax,QWORD PTR [rbp-0x180]
  4032af:	mov    rax,QWORD PTR [rax]
  4032b2:	mov    QWORD PTR [rbp-0x120],rax
  4032b9:	mov    rax,QWORD PTR [rbp-0x120]
  4032c0:	mov    rax,QWORD PTR [rax+0x10]
  4032c4:	test   rax,rax
  4032c7:	je     4033b7 <_start@@Base+0x1247>
  4032cd:	mov    rax,QWORD PTR [rbp-0x120]
  4032d4:	mov    rax,QWORD PTR [rax+0x10]
  4032d8:	mov    QWORD PTR [rbp-0x120],rax
  4032df:	mov    rax,QWORD PTR [rbp-0x120]
  4032e6:	mov    eax,DWORD PTR [rax]
  4032e8:	test   eax,eax
  4032ea:	je     4033e1 <_start@@Base+0x1271>
  4032f0:	mov    rax,QWORD PTR [rbp-0x120]
  4032f7:	mov    eax,DWORD PTR [rax]
  4032f9:	test   eax,eax
  4032fb:	jns    403379 <_start@@Base+0x1209>
  4032fd:	lea    rcx,[rbp-0x1e4]
  403304:	lea    rax,[rbp-0x1e4]
  40330b:	mov    edx,0x4
  403310:	mov    rsi,rcx
  403313:	mov    rdi,rax
  403316:	call   4058c0 <mmk_memcmp@@Base>
  40331b:	mov    DWORD PTR [rbp-0x1c0],eax
  403321:	cmp    DWORD PTR [rbp-0x1c0],0x0
  403328:	jne    40333e <_start@@Base+0x11ce>
  40332a:	mov    rax,QWORD PTR [rbp-0x120]
  403331:	mov    eax,DWORD PTR [rax]
  403333:	and    eax,0x2
  403336:	test   eax,eax
  403338:	je     403510 <_start@@Base+0x13a0>
  40333e:	cmp    DWORD PTR [rbp-0x1c0],0x0
  403345:	jns    40335b <_start@@Base+0x11eb>
  403347:	mov    rax,QWORD PTR [rbp-0x120]
  40334e:	mov    eax,DWORD PTR [rax]
  403350:	and    eax,0x4
  403353:	test   eax,eax
  403355:	je     403510 <_start@@Base+0x13a0>
  40335b:	cmp    DWORD PTR [rbp-0x1c0],0x0
  403362:	jle    4033e1 <_start@@Base+0x1271>
  403364:	mov    rax,QWORD PTR [rbp-0x120]
  40336b:	mov    eax,DWORD PTR [rax]
  40336d:	and    eax,0x8
  403370:	test   eax,eax
  403372:	jne    4033e1 <_start@@Base+0x1271>
  403374:	jmp    403510 <_start@@Base+0x13a0>
  403379:	mov    rax,QWORD PTR [rbp-0x120]
  403380:	mov    eax,DWORD PTR [rax]
  403382:	cmp    eax,0x1
  403385:	jne    4033e1 <_start@@Base+0x1271>
  403387:	mov    rax,QWORD PTR [rbp-0x120]
  40338e:	mov    rdi,rax
  403391:	call   404590 <mmk_matcher_get_predicate@@Base>
  403396:	mov    QWORD PTR [rbp-0x118],rax
  40339d:	mov    edx,DWORD PTR [rbp-0x1e4]
  4033a3:	mov    rax,QWORD PTR [rbp-0x118]
  4033aa:	mov    edi,edx
  4033ac:	call   rax
  4033ae:	test   eax,eax
  4033b0:	jne    4033e1 <_start@@Base+0x1271>
  4033b2:	jmp    403514 <_start@@Base+0x13a4>
  4033b7:	mov    rax,QWORD PTR [rbp-0x128]
  4033be:	lea    rcx,[rax+0x48]
  4033c2:	lea    rax,[rbp-0x1e4]
  4033c9:	mov    edx,0x4
  4033ce:	mov    rsi,rcx
  4033d1:	mov    rdi,rax
  4033d4:	call   4058c0 <mmk_memcmp@@Base>
  4033d9:	test   eax,eax
  4033db:	jne    403513 <_start@@Base+0x13a3>
  4033e1:	mov    rax,QWORD PTR [rbp-0x128]
  4033e8:	mov    eax,DWORD PTR [rax+0x14]
  4033eb:	test   eax,eax
  4033ed:	je     403403 <_start@@Base+0x1293>
  4033ef:	call   402060 <__errno_location@plt>
  4033f4:	mov    rdx,rax
  4033f7:	mov    rax,QWORD PTR [rbp-0x128]
  4033fe:	mov    eax,DWORD PTR [rax+0x14]
  403401:	mov    DWORD PTR [rdx],eax
  403403:	mov    rax,QWORD PTR [rbp-0x128]
  40340a:	mov    rax,QWORD PTR [rax+0x20]
  40340e:	test   rax,rax
  403411:	je     403477 <_start@@Base+0x1307>
  403413:	mov    rax,QWORD PTR [rbp-0x128]
  40341a:	mov    rax,QWORD PTR [rax+0x18]
  40341e:	test   rax,rax
  403421:	jne    403477 <_start@@Base+0x1307>
  403423:	lea    rcx,[rbp-0xd0]
  40342a:	lea    rsi,[rbp-0xe8]
  403431:	mov    rax,QWORD PTR [rsi]
  403434:	mov    rdx,QWORD PTR [rsi+0x8]
  403438:	mov    QWORD PTR [rcx],rax
  40343b:	mov    QWORD PTR [rcx+0x8],rdx
  40343f:	mov    rax,QWORD PTR [rsi+0x10]
  403443:	mov    QWORD PTR [rcx+0x10],rax
  403447:	mov    rax,QWORD PTR [rbp-0x128]
  40344e:	mov    rax,QWORD PTR [rax+0x20]
  403452:	mov    edx,DWORD PTR [rbp-0x1e4]
  403458:	lea    rcx,[rbp-0xd0]
  40345f:	mov    rsi,rcx
  403462:	mov    edi,edx
  403464:	call   rax
  403466:	mov    DWORD PTR [rbp-0x1bc],eax
  40346c:	mov    eax,DWORD PTR [rbp-0x1bc]
  403472:	jmp    40353a <_start@@Base+0x13ca>
  403477:	mov    rax,QWORD PTR [rbp-0x128]
  40347e:	mov    rax,QWORD PTR [rax+0x20]
  403482:	test   rax,rax
  403485:	je     4034e9 <_start@@Base+0x1379>
  403487:	mov    rax,QWORD PTR [rbp-0x128]
  40348e:	mov    rax,QWORD PTR [rax+0x18]
  403492:	test   rax,rax
  403495:	je     4034e9 <_start@@Base+0x1379>
  403497:	lea    rcx,[rbp-0xd0]
  40349e:	lea    rsi,[rbp-0xe8]
  4034a5:	mov    rax,QWORD PTR [rsi]
  4034a8:	mov    rdx,QWORD PTR [rsi+0x8]
  4034ac:	mov    QWORD PTR [rcx],rax
  4034af:	mov    QWORD PTR [rcx+0x8],rdx
  4034b3:	mov    rax,QWORD PTR [rsi+0x10]
  4034b7:	mov    QWORD PTR [rcx+0x10],rax
  4034bb:	mov    rax,QWORD PTR [rbp-0x128]
  4034c2:	mov    rax,QWORD PTR [rax+0x20]
  4034c6:	mov    edx,DWORD PTR [rbp-0x1e4]
  4034cc:	lea    rcx,[rbp-0xd0]
  4034d3:	mov    rsi,rcx
  4034d6:	mov    edi,edx
  4034d8:	call   rax
  4034da:	mov    rax,QWORD PTR [rbp-0x128]
  4034e1:	mov    rax,QWORD PTR [rax+0x18]
  4034e5:	mov    eax,DWORD PTR [rax]
  4034e7:	jmp    40353a <_start@@Base+0x13ca>
  4034e9:	mov    rax,QWORD PTR [rbp-0x128]
  4034f0:	mov    rax,QWORD PTR [rax+0x18]
  4034f4:	test   rax,rax
  4034f7:	je     403508 <_start@@Base+0x1398>
  4034f9:	mov    rax,QWORD PTR [rbp-0x128]
  403500:	mov    rax,QWORD PTR [rax+0x18]
  403504:	mov    eax,DWORD PTR [rax]
  403506:	jmp    40353a <_start@@Base+0x13ca>
  403508:	mov    eax,DWORD PTR [rip+0x5bbe]        # 4090cc <__bss_start@@Base+0xc>
  40350e:	jmp    40353a <_start@@Base+0x13ca>
  403510:	nop
  403511:	jmp    403514 <_start@@Base+0x13a4>
  403513:	nop
  403514:	mov    rax,QWORD PTR [rbp-0x180]
  40351b:	mov    rax,QWORD PTR [rax+0x8]
  40351f:	mov    QWORD PTR [rbp-0x180],rax
  403526:	cmp    QWORD PTR [rbp-0x180],0x0
  40352e:	jne    40329a <_start@@Base+0x112a>
  403534:	mov    eax,DWORD PTR [rip+0x5b92]        # 4090cc <__bss_start@@Base+0xc>
  40353a:	mov    rdi,QWORD PTR [rbp-0xb8]
  403541:	xor    rdi,QWORD PTR fs:0x28
  40354a:	je     403551 <_start@@Base+0x13e1>
  40354c:	call   402080 <__stack_chk_fail@plt>
  403551:	leave  
  403552:	ret    
  403553:	push   rbp
  403554:	mov    rbp,rsp
  403557:	sub    rsp,0x10
  40355b:	mov    QWORD PTR [rbp-0x8],rdi
  40355f:	mov    rax,QWORD PTR [rbp-0x8]
  403563:	lea    rsi,[rip+0xfffffffffffff596]        # 402b00 <_start@@Base+0x990>
  40356a:	mov    rdi,rax
  40356d:	call   404599 <mmk_mock_create_internal@@Base>
  403572:	leave  
  403573:	ret    

0000000000403574 <set_valid@@Base>:
  403574:	endbr64 
  403578:	push   rbp
  403579:	mov    rbp,rsp
  40357c:	mov    DWORD PTR [rip+0x5b3e],0x1        # 4090c4 <__bss_start@@Base+0x4>
  403586:	nop
  403587:	pop    rbp
  403588:	ret    

0000000000403589 <main@@Base>:
  403589:	endbr64 
  40358d:	push   rbp
  40358e:	mov    rbp,rsp
  403591:	sub    rsp,0x370
  403598:	mov    rax,QWORD PTR fs:0x28
  4035a1:	mov    QWORD PTR [rbp-0x8],rax
  4035a5:	xor    eax,eax
  4035a7:	lea    rdi,[rip+0x2a5a]        # 406008 <_IO_stdin_used@@Base+0x8>
  4035ae:	call   402985 <_start@@Base+0x815>
  4035b3:	mov    edi,0x0
  4035b8:	call   404470 <mmk_matcher_init@@Base>
  4035bd:	mov    QWORD PTR [rbp-0x360],0x0
  4035c8:	mov    QWORD PTR [rbp-0x358],0x0
  4035d3:	mov    QWORD PTR [rbp-0x350],0x0
  4035de:	mov    QWORD PTR [rbp-0x348],0x0
  4035e9:	mov    rax,0x403574
  4035f0:	mov    QWORD PTR [rbp-0x350],rax
  4035f7:	lea    rax,[rbp-0x360]
  4035fe:	mov    rdi,rax
  403601:	call   405ba1 <mmk_when_init@@Base>
  403606:	call   402150 <fn_vv@plt>
  40360b:	call   4044c0 <mmk_matcher_term@@Base>
  403610:	mov    edi,0x1
  403615:	call   404470 <mmk_matcher_init@@Base>
  40361a:	call   402150 <fn_vv@plt>
  40361f:	call   4044c0 <mmk_matcher_term@@Base>
  403624:	mov    QWORD PTR [rbp-0x300],0x0
  40362f:	mov    QWORD PTR [rbp-0x2f8],0x0
  40363a:	mov    QWORD PTR [rbp-0x2f0],0x0
  403645:	mov    QWORD PTR [rbp-0x2e8],0x0
  403650:	mov    QWORD PTR [rbp-0x2e0],0x0
  40365b:	mov    DWORD PTR [rbp-0x300],0x1
  403665:	mov    DWORD PTR [rbp-0x2fc],0x1
  40366f:	lea    rax,[rbp-0x300]
  403676:	mov    rdi,rax
  403679:	call   40551f <mmk_verify_times@@Base>
  40367e:	test   eax,eax
  403680:	jne    4036b8 <main@@Base+0x12f>
  403682:	mov    rax,QWORD PTR [rip+0x596f]        # 408ff8 <stderr@GLIBC_2.2.5>
  403689:	mov    rax,QWORD PTR [rax]
  40368c:	lea    r8,[rip+0x297d]        # 406010 <_IO_stdin_used@@Base+0x10>
  403693:	mov    ecx,0x2a
  403698:	lea    rdx,[rip+0x2991]        # 406030 <_IO_stdin_used@@Base+0x30>
  40369f:	lea    rsi,[rip+0x29dd]        # 406083 <_IO_stdin_used@@Base+0x83>
  4036a6:	mov    rdi,rax
  4036a9:	mov    eax,0x0
  4036ae:	call   4020d0 <fprintf@plt>
  4036b3:	call   402050 <abort@plt>
  4036b8:	mov    edi,0x1
  4036bd:	call   404470 <mmk_matcher_init@@Base>
  4036c2:	call   402150 <fn_vv@plt>
  4036c7:	call   4044c0 <mmk_matcher_term@@Base>
  4036cc:	mov    QWORD PTR [rbp-0x2d0],0x0
  4036d7:	mov    QWORD PTR [rbp-0x2c8],0x0
  4036e2:	mov    QWORD PTR [rbp-0x2c0],0x0
  4036ed:	mov    QWORD PTR [rbp-0x2b8],0x0
  4036f8:	mov    QWORD PTR [rbp-0x2b0],0x0
  403703:	mov    DWORD PTR [rbp-0x2d0],0x1
  40370d:	mov    QWORD PTR [rbp-0x2c0],0x1
  403718:	lea    rax,[rbp-0x2d0]
  40371f:	mov    rdi,rax
  403722:	call   40551f <mmk_verify_times@@Base>
  403727:	test   eax,eax
  403729:	jne    403761 <main@@Base+0x1d8>
  40372b:	mov    rax,QWORD PTR [rip+0x58c6]        # 408ff8 <stderr@GLIBC_2.2.5>
  403732:	mov    rax,QWORD PTR [rax]
  403735:	lea    r8,[rip+0x2964]        # 4060a0 <_IO_stdin_used@@Base+0xa0>
  40373c:	mov    ecx,0x2b
  403741:	lea    rdx,[rip+0x28e8]        # 406030 <_IO_stdin_used@@Base+0x30>
  403748:	lea    rsi,[rip+0x2934]        # 406083 <_IO_stdin_used@@Base+0x83>
  40374f:	mov    rdi,rax
  403752:	mov    eax,0x0
  403757:	call   4020d0 <fprintf@plt>
  40375c:	call   402050 <abort@plt>
  403761:	mov    edi,0x1
  403766:	call   404470 <mmk_matcher_init@@Base>
  40376b:	call   402150 <fn_vv@plt>
  403770:	call   4044c0 <mmk_matcher_term@@Base>
  403775:	mov    QWORD PTR [rbp-0x2a0],0x0
  403780:	mov    QWORD PTR [rbp-0x298],0x0
  40378b:	mov    QWORD PTR [rbp-0x290],0x0
  403796:	mov    QWORD PTR [rbp-0x288],0x0
  4037a1:	mov    QWORD PTR [rbp-0x280],0x0
  4037ac:	mov    DWORD PTR [rbp-0x2a0],0x1
  4037b6:	mov    QWORD PTR [rbp-0x288],0x1
  4037c1:	lea    rax,[rbp-0x2a0]
  4037c8:	mov    rdi,rax
  4037cb:	call   40551f <mmk_verify_times@@Base>
  4037d0:	test   eax,eax
  4037d2:	je     40380a <main@@Base+0x281>
  4037d4:	mov    rax,QWORD PTR [rip+0x581d]        # 408ff8 <stderr@GLIBC_2.2.5>
  4037db:	mov    rax,QWORD PTR [rax]
  4037de:	lea    r8,[rip+0x28e3]        # 4060c8 <_IO_stdin_used@@Base+0xc8>
  4037e5:	mov    ecx,0x2d
  4037ea:	lea    rdx,[rip+0x283f]        # 406030 <_IO_stdin_used@@Base+0x30>
  4037f1:	lea    rsi,[rip+0x288b]        # 406083 <_IO_stdin_used@@Base+0x83>
  4037f8:	mov    rdi,rax
  4037fb:	mov    eax,0x0
  403800:	call   4020d0 <fprintf@plt>
  403805:	call   402050 <abort@plt>
  40380a:	mov    edi,0x1
  40380f:	call   404470 <mmk_matcher_init@@Base>
  403814:	call   402150 <fn_vv@plt>
  403819:	call   4044c0 <mmk_matcher_term@@Base>
  40381e:	mov    QWORD PTR [rbp-0x270],0x0
  403829:	mov    QWORD PTR [rbp-0x268],0x0
  403834:	mov    QWORD PTR [rbp-0x260],0x0
  40383f:	mov    QWORD PTR [rbp-0x258],0x0
  40384a:	mov    QWORD PTR [rbp-0x250],0x0
  403855:	mov    DWORD PTR [rbp-0x270],0x1
  40385f:	mov    QWORD PTR [rbp-0x268],0x1
  40386a:	lea    rax,[rbp-0x270]
  403871:	mov    rdi,rax
  403874:	call   40551f <mmk_verify_times@@Base>
  403879:	test   eax,eax
  40387b:	je     4038b3 <main@@Base+0x32a>
  40387d:	mov    rax,QWORD PTR [rip+0x5774]        # 408ff8 <stderr@GLIBC_2.2.5>
  403884:	mov    rax,QWORD PTR [rax]
  403887:	lea    r8,[rip+0x2862]        # 4060f0 <_IO_stdin_used@@Base+0xf0>
  40388e:	mov    ecx,0x2e
  403893:	lea    rdx,[rip+0x2796]        # 406030 <_IO_stdin_used@@Base+0x30>
  40389a:	lea    rsi,[rip+0x27e2]        # 406083 <_IO_stdin_used@@Base+0x83>
  4038a1:	mov    rdi,rax
  4038a4:	mov    eax,0x0
  4038a9:	call   4020d0 <fprintf@plt>
  4038ae:	call   402050 <abort@plt>
  4038b3:	mov    edi,0x1
  4038b8:	call   404470 <mmk_matcher_init@@Base>
  4038bd:	call   402150 <fn_vv@plt>
  4038c2:	call   4044c0 <mmk_matcher_term@@Base>
  4038c7:	mov    QWORD PTR [rbp-0x240],0x0
  4038d2:	mov    QWORD PTR [rbp-0x238],0x0
  4038dd:	mov    QWORD PTR [rbp-0x230],0x0
  4038e8:	mov    QWORD PTR [rbp-0x228],0x0
  4038f3:	mov    QWORD PTR [rbp-0x220],0x0
  4038fe:	mov    DWORD PTR [rbp-0x240],0x1
  403908:	mov    QWORD PTR [rbp-0x238],0x1
  403913:	mov    QWORD PTR [rbp-0x230],0x1
  40391e:	lea    rax,[rbp-0x240]
  403925:	mov    rdi,rax
  403928:	call   40551f <mmk_verify_times@@Base>
  40392d:	test   eax,eax
  40392f:	je     403967 <main@@Base+0x3de>
  403931:	mov    rax,QWORD PTR [rip+0x56c0]        # 408ff8 <stderr@GLIBC_2.2.5>
  403938:	mov    rax,QWORD PTR [rax]
  40393b:	lea    r8,[rip+0x27d6]        # 406118 <_IO_stdin_used@@Base+0x118>
  403942:	mov    ecx,0x2f
  403947:	lea    rdx,[rip+0x26e2]        # 406030 <_IO_stdin_used@@Base+0x30>
  40394e:	lea    rsi,[rip+0x272e]        # 406083 <_IO_stdin_used@@Base+0x83>
  403955:	mov    rdi,rax
  403958:	mov    eax,0x0
  40395d:	call   4020d0 <fprintf@plt>
  403962:	call   402050 <abort@plt>
  403967:	call   402150 <fn_vv@plt>
  40396c:	mov    eax,DWORD PTR [rip+0x5752]        # 4090c4 <__bss_start@@Base+0x4>
  403972:	test   eax,eax
  403974:	jne    4039ac <main@@Base+0x423>
  403976:	mov    rax,QWORD PTR [rip+0x567b]        # 408ff8 <stderr@GLIBC_2.2.5>
  40397d:	mov    rax,QWORD PTR [rax]
  403980:	lea    r8,[rip+0x27c3]        # 40614a <_IO_stdin_used@@Base+0x14a>
  403987:	mov    ecx,0x32
  40398c:	lea    rdx,[rip+0x269d]        # 406030 <_IO_stdin_used@@Base+0x30>
  403993:	lea    rsi,[rip+0x26e9]        # 406083 <_IO_stdin_used@@Base+0x83>
  40399a:	mov    rdi,rax
  40399d:	mov    eax,0x0
  4039a2:	call   4020d0 <fprintf@plt>
  4039a7:	call   402050 <abort@plt>
  4039ac:	mov    edi,0x1
  4039b1:	call   404470 <mmk_matcher_init@@Base>
  4039b6:	call   402150 <fn_vv@plt>
  4039bb:	call   4044c0 <mmk_matcher_term@@Base>
  4039c0:	mov    QWORD PTR [rbp-0x210],0x0
  4039cb:	mov    QWORD PTR [rbp-0x208],0x0
  4039d6:	mov    QWORD PTR [rbp-0x200],0x0
  4039e1:	mov    QWORD PTR [rbp-0x1f8],0x0
  4039ec:	mov    QWORD PTR [rbp-0x1f0],0x0
  4039f7:	mov    DWORD PTR [rbp-0x210],0x1
  403a01:	mov    QWORD PTR [rbp-0x1f8],0x1
  403a0c:	lea    rax,[rbp-0x210]
  403a13:	mov    rdi,rax
  403a16:	call   40551f <mmk_verify_times@@Base>
  403a1b:	test   eax,eax
  403a1d:	jne    403a55 <main@@Base+0x4cc>
  403a1f:	mov    rax,QWORD PTR [rip+0x55d2]        # 408ff8 <stderr@GLIBC_2.2.5>
  403a26:	mov    rax,QWORD PTR [rax]
  403a29:	lea    r8,[rip+0x2720]        # 406150 <_IO_stdin_used@@Base+0x150>
  403a30:	mov    ecx,0x33
  403a35:	lea    rdx,[rip+0x25f4]        # 406030 <_IO_stdin_used@@Base+0x30>
  403a3c:	lea    rsi,[rip+0x2640]        # 406083 <_IO_stdin_used@@Base+0x83>
  403a43:	mov    rdi,rax
  403a46:	mov    eax,0x0
  403a4b:	call   4020d0 <fprintf@plt>
  403a50:	call   402050 <abort@plt>
  403a55:	mov    edi,0x1
  403a5a:	call   404470 <mmk_matcher_init@@Base>
  403a5f:	call   402150 <fn_vv@plt>
  403a64:	call   4044c0 <mmk_matcher_term@@Base>
  403a69:	mov    QWORD PTR [rbp-0x1e0],0x0
  403a74:	mov    QWORD PTR [rbp-0x1d8],0x0
  403a7f:	mov    QWORD PTR [rbp-0x1d0],0x0
  403a8a:	mov    QWORD PTR [rbp-0x1c8],0x0
  403a95:	mov    QWORD PTR [rbp-0x1c0],0x0
  403aa0:	mov    DWORD PTR [rbp-0x1e0],0x1
  403aaa:	mov    QWORD PTR [rbp-0x1d8],0x1
  403ab5:	lea    rax,[rbp-0x1e0]
  403abc:	mov    rdi,rax
  403abf:	call   40551f <mmk_verify_times@@Base>
  403ac4:	test   eax,eax
  403ac6:	jne    403afe <main@@Base+0x575>
  403ac8:	mov    rax,QWORD PTR [rip+0x5529]        # 408ff8 <stderr@GLIBC_2.2.5>
  403acf:	mov    rax,QWORD PTR [rax]
  403ad2:	lea    r8,[rip+0x2697]        # 406170 <_IO_stdin_used@@Base+0x170>
  403ad9:	mov    ecx,0x34
  403ade:	lea    rdx,[rip+0x254b]        # 406030 <_IO_stdin_used@@Base+0x30>
  403ae5:	lea    rsi,[rip+0x2597]        # 406083 <_IO_stdin_used@@Base+0x83>
  403aec:	mov    rdi,rax
  403aef:	mov    eax,0x0
  403af4:	call   4020d0 <fprintf@plt>
  403af9:	call   402050 <abort@plt>
  403afe:	mov    edi,0x1
  403b03:	call   404470 <mmk_matcher_init@@Base>
  403b08:	call   402150 <fn_vv@plt>
  403b0d:	call   4044c0 <mmk_matcher_term@@Base>
  403b12:	mov    QWORD PTR [rbp-0x1b0],0x0
  403b1d:	mov    QWORD PTR [rbp-0x1a8],0x0
  403b28:	mov    QWORD PTR [rbp-0x1a0],0x0
  403b33:	mov    QWORD PTR [rbp-0x198],0x0
  403b3e:	mov    QWORD PTR [rbp-0x190],0x0
  403b49:	mov    DWORD PTR [rbp-0x1b0],0x1
  403b53:	mov    QWORD PTR [rbp-0x1a0],0x1
  403b5e:	lea    rax,[rbp-0x1b0]
  403b65:	mov    rdi,rax
  403b68:	call   40551f <mmk_verify_times@@Base>
  403b6d:	test   eax,eax
  403b6f:	jne    403ba7 <main@@Base+0x61e>
  403b71:	mov    rax,QWORD PTR [rip+0x5480]        # 408ff8 <stderr@GLIBC_2.2.5>
  403b78:	mov    rax,QWORD PTR [rax]
  403b7b:	lea    r8,[rip+0x251e]        # 4060a0 <_IO_stdin_used@@Base+0xa0>
  403b82:	mov    ecx,0x35
  403b87:	lea    rdx,[rip+0x24a2]        # 406030 <_IO_stdin_used@@Base+0x30>
  403b8e:	lea    rsi,[rip+0x24ee]        # 406083 <_IO_stdin_used@@Base+0x83>
  403b95:	mov    rdi,rax
  403b98:	mov    eax,0x0
  403b9d:	call   4020d0 <fprintf@plt>
  403ba2:	call   402050 <abort@plt>
  403ba7:	mov    edi,0x1
  403bac:	call   404470 <mmk_matcher_init@@Base>
  403bb1:	call   402150 <fn_vv@plt>
  403bb6:	call   4044c0 <mmk_matcher_term@@Base>
  403bbb:	mov    QWORD PTR [rbp-0x180],0x0
  403bc6:	mov    QWORD PTR [rbp-0x178],0x0
  403bd1:	mov    QWORD PTR [rbp-0x170],0x0
  403bdc:	mov    QWORD PTR [rbp-0x168],0x0
  403be7:	mov    QWORD PTR [rbp-0x160],0x0
  403bf2:	mov    DWORD PTR [rbp-0x180],0x1
  403bfc:	mov    QWORD PTR [rbp-0x178],0x1
  403c07:	mov    QWORD PTR [rbp-0x170],0x1
  403c12:	lea    rax,[rbp-0x180]
  403c19:	mov    rdi,rax
  403c1c:	call   40551f <mmk_verify_times@@Base>
  403c21:	test   eax,eax
  403c23:	jne    403c5b <main@@Base+0x6d2>
  403c25:	mov    rax,QWORD PTR [rip+0x53cc]        # 408ff8 <stderr@GLIBC_2.2.5>
  403c2c:	mov    rax,QWORD PTR [rax]
  403c2f:	lea    r8,[rip+0x2562]        # 406198 <_IO_stdin_used@@Base+0x198>
  403c36:	mov    ecx,0x36
  403c3b:	lea    rdx,[rip+0x23ee]        # 406030 <_IO_stdin_used@@Base+0x30>
  403c42:	lea    rsi,[rip+0x243a]        # 406083 <_IO_stdin_used@@Base+0x83>
  403c49:	mov    rdi,rax
  403c4c:	mov    eax,0x0
  403c51:	call   4020d0 <fprintf@plt>
  403c56:	call   402050 <abort@plt>
  403c5b:	mov    edi,0x1
  403c60:	call   404470 <mmk_matcher_init@@Base>
  403c65:	call   402150 <fn_vv@plt>
  403c6a:	call   4044c0 <mmk_matcher_term@@Base>
  403c6f:	mov    QWORD PTR [rbp-0x150],0x0
  403c7a:	mov    QWORD PTR [rbp-0x148],0x0
  403c85:	mov    QWORD PTR [rbp-0x140],0x0
  403c90:	mov    QWORD PTR [rbp-0x138],0x0
  403c9b:	mov    QWORD PTR [rbp-0x130],0x0
  403ca6:	mov    DWORD PTR [rbp-0x150],0x1
  403cb0:	mov    DWORD PTR [rbp-0x14c],0x1
  403cba:	lea    rax,[rbp-0x150]
  403cc1:	mov    rdi,rax
  403cc4:	call   40551f <mmk_verify_times@@Base>
  403cc9:	test   eax,eax
  403ccb:	je     403d03 <main@@Base+0x77a>
  403ccd:	mov    rax,QWORD PTR [rip+0x5324]        # 408ff8 <stderr@GLIBC_2.2.5>
  403cd4:	mov    rax,QWORD PTR [rax]
  403cd7:	lea    r8,[rip+0x24f2]        # 4061d0 <_IO_stdin_used@@Base+0x1d0>
  403cde:	mov    ecx,0x37
  403ce3:	lea    rdx,[rip+0x2346]        # 406030 <_IO_stdin_used@@Base+0x30>
  403cea:	lea    rsi,[rip+0x2392]        # 406083 <_IO_stdin_used@@Base+0x83>
  403cf1:	mov    rdi,rax
  403cf4:	mov    eax,0x0
  403cf9:	call   4020d0 <fprintf@plt>
  403cfe:	call   402050 <abort@plt>
  403d03:	mov    edi,0x1
  403d08:	call   404470 <mmk_matcher_init@@Base>
  403d0d:	call   402150 <fn_vv@plt>
  403d12:	call   4044c0 <mmk_matcher_term@@Base>
  403d17:	mov    QWORD PTR [rbp-0x120],0x0
  403d22:	mov    QWORD PTR [rbp-0x118],0x0
  403d2d:	mov    QWORD PTR [rbp-0x110],0x0
  403d38:	mov    QWORD PTR [rbp-0x108],0x0
  403d43:	mov    QWORD PTR [rbp-0x100],0x0
  403d4e:	mov    DWORD PTR [rbp-0x120],0x1
  403d58:	mov    QWORD PTR [rbp-0x108],0x2
  403d63:	lea    rax,[rbp-0x120]
  403d6a:	mov    rdi,rax
  403d6d:	call   40551f <mmk_verify_times@@Base>
  403d72:	test   eax,eax
  403d74:	je     403dac <main@@Base+0x823>
  403d76:	mov    rax,QWORD PTR [rip+0x527b]        # 408ff8 <stderr@GLIBC_2.2.5>
  403d7d:	mov    rax,QWORD PTR [rax]
  403d80:	lea    r8,[rip+0x2471]        # 4061f8 <_IO_stdin_used@@Base+0x1f8>
  403d87:	mov    ecx,0x38
  403d8c:	lea    rdx,[rip+0x229d]        # 406030 <_IO_stdin_used@@Base+0x30>
  403d93:	lea    rsi,[rip+0x22e9]        # 406083 <_IO_stdin_used@@Base+0x83>
  403d9a:	mov    rdi,rax
  403d9d:	mov    eax,0x0
  403da2:	call   4020d0 <fprintf@plt>
  403da7:	call   402050 <abort@plt>
  403dac:	mov    edi,0x1
  403db1:	call   404470 <mmk_matcher_init@@Base>
  403db6:	call   402150 <fn_vv@plt>
  403dbb:	call   4044c0 <mmk_matcher_term@@Base>
  403dc0:	mov    QWORD PTR [rbp-0xf0],0x0
  403dcb:	mov    QWORD PTR [rbp-0xe8],0x0
  403dd6:	mov    QWORD PTR [rbp-0xe0],0x0
  403de1:	mov    QWORD PTR [rbp-0xd8],0x0
  403dec:	mov    QWORD PTR [rbp-0xd0],0x0
  403df7:	mov    DWORD PTR [rbp-0xf0],0x1
  403e01:	mov    QWORD PTR [rbp-0xe8],0x2
  403e0c:	lea    rax,[rbp-0xf0]
  403e13:	mov    rdi,rax
  403e16:	call   40551f <mmk_verify_times@@Base>
  403e1b:	test   eax,eax
  403e1d:	je     403e55 <main@@Base+0x8cc>
  403e1f:	mov    rax,QWORD PTR [rip+0x51d2]        # 408ff8 <stderr@GLIBC_2.2.5>
  403e26:	mov    rax,QWORD PTR [rax]
  403e29:	lea    r8,[rip+0x23f0]        # 406220 <_IO_stdin_used@@Base+0x220>
  403e30:	mov    ecx,0x39
  403e35:	lea    rdx,[rip+0x21f4]        # 406030 <_IO_stdin_used@@Base+0x30>
  403e3c:	lea    rsi,[rip+0x2240]        # 406083 <_IO_stdin_used@@Base+0x83>
  403e43:	mov    rdi,rax
  403e46:	mov    eax,0x0
  403e4b:	call   4020d0 <fprintf@plt>
  403e50:	call   402050 <abort@plt>
  403e55:	mov    rax,QWORD PTR [rip+0x5174]        # 408fd0 <fn_vv>
  403e5c:	mov    rdi,rax
  403e5f:	call   404426 <mmk_reset@@Base>
  403e64:	mov    DWORD PTR [rbp-0x364],0xfefefefe
  403e6e:	lea    rdi,[rip+0x23cf]        # 406244 <_IO_stdin_used@@Base+0x244>
  403e75:	call   402741 <_start@@Base+0x5d1>
  403e7a:	mov    edi,0x0
  403e7f:	call   404470 <mmk_matcher_init@@Base>
  403e84:	mov    QWORD PTR [rbp-0x340],0x0
  403e8f:	mov    QWORD PTR [rbp-0x338],0x0
  403e9a:	mov    QWORD PTR [rbp-0x330],0x0
  403ea5:	mov    QWORD PTR [rbp-0x328],0x0
  403eb0:	mov    eax,DWORD PTR [rbp-0x364]
  403eb6:	mov    DWORD PTR [rbp-0x33c],eax
  403ebc:	mov    DWORD PTR [rbp-0x36c],0x1
  403ec6:	lea    rax,[rbp-0x36c]
  403ecd:	mov    QWORD PTR [rbp-0x338],rax
  403ed4:	lea    rax,[rbp-0x340]
  403edb:	mov    rdi,rax
  403ede:	call   405ba1 <mmk_when_init@@Base>
  403ee3:	mov    edi,0x1
  403ee8:	call   402158 <fn_ii@plt>
  403eed:	call   4044c0 <mmk_matcher_term@@Base>
  403ef2:	mov    edi,0x1
  403ef7:	call   402158 <fn_ii@plt>
  403efc:	cmp    eax,0x1
  403eff:	jne    403f10 <main@@Base+0x987>
  403f01:	call   402060 <__errno_location@plt>
  403f06:	mov    eax,DWORD PTR [rax]
  403f08:	cmp    DWORD PTR [rbp-0x364],eax
  403f0e:	je     403f46 <main@@Base+0x9bd>
  403f10:	mov    rax,QWORD PTR [rip+0x50e1]        # 408ff8 <stderr@GLIBC_2.2.5>
  403f17:	mov    rax,QWORD PTR [rax]
  403f1a:	lea    r8,[rip+0x2329]        # 40624a <_IO_stdin_used@@Base+0x24a>
  403f21:	mov    ecx,0x40
  403f26:	lea    rdx,[rip+0x2103]        # 406030 <_IO_stdin_used@@Base+0x30>
  403f2d:	lea    rsi,[rip+0x214f]        # 406083 <_IO_stdin_used@@Base+0x83>
  403f34:	mov    rdi,rax
  403f37:	mov    eax,0x0
  403f3c:	call   4020d0 <fprintf@plt>
  403f41:	call   402050 <abort@plt>
  403f46:	mov    edi,0x2a
  403f4b:	call   402158 <fn_ii@plt>
  403f50:	test   eax,eax
  403f52:	je     403f8a <main@@Base+0xa01>
  403f54:	mov    rax,QWORD PTR [rip+0x509d]        # 408ff8 <stderr@GLIBC_2.2.5>
  403f5b:	mov    rax,QWORD PTR [rax]
  403f5e:	lea    r8,[rip+0x2303]        # 406268 <_IO_stdin_used@@Base+0x268>
  403f65:	mov    ecx,0x41
  403f6a:	lea    rdx,[rip+0x20bf]        # 406030 <_IO_stdin_used@@Base+0x30>
  403f71:	lea    rsi,[rip+0x210b]        # 406083 <_IO_stdin_used@@Base+0x83>
  403f78:	mov    rdi,rax
  403f7b:	mov    eax,0x0
  403f80:	call   4020d0 <fprintf@plt>
  403f85:	call   402050 <abort@plt>
  403f8a:	mov    edi,0x1
  403f8f:	call   404470 <mmk_matcher_init@@Base>
  403f94:	mov    esi,0x0
  403f99:	mov    edi,0x0
  403f9e:	call   404510 <mmk_matcher_add@@Base>
  403fa3:	mov    edi,0x0
  403fa8:	call   402158 <fn_ii@plt>
  403fad:	call   4044c0 <mmk_matcher_term@@Base>
  403fb2:	mov    QWORD PTR [rbp-0xc0],0x0
  403fbd:	mov    QWORD PTR [rbp-0xb8],0x0
  403fc8:	mov    QWORD PTR [rbp-0xb0],0x0
  403fd3:	mov    QWORD PTR [rbp-0xa8],0x0
  403fde:	mov    QWORD PTR [rbp-0xa0],0x0
  403fe9:	mov    DWORD PTR [rbp-0xc0],0x1
  403ff3:	mov    QWORD PTR [rbp-0xa8],0x2
  403ffe:	lea    rax,[rbp-0xc0]
  404005:	mov    rdi,rax
  404008:	call   40551f <mmk_verify_times@@Base>
  40400d:	test   eax,eax
  40400f:	jne    404047 <main@@Base+0xabe>
  404011:	mov    rax,QWORD PTR [rip+0x4fe0]        # 408ff8 <stderr@GLIBC_2.2.5>
  404018:	mov    rax,QWORD PTR [rax]
  40401b:	lea    r8,[rip+0x2256]        # 406278 <_IO_stdin_used@@Base+0x278>
  404022:	mov    ecx,0x43
  404027:	lea    rdx,[rip+0x2002]        # 406030 <_IO_stdin_used@@Base+0x30>
  40402e:	lea    rsi,[rip+0x204e]        # 406083 <_IO_stdin_used@@Base+0x83>
  404035:	mov    rdi,rax
  404038:	mov    eax,0x0
  40403d:	call   4020d0 <fprintf@plt>
  404042:	call   402050 <abort@plt>
  404047:	mov    edi,0x1
  40404c:	call   404470 <mmk_matcher_init@@Base>
  404051:	mov    edi,0x1
  404056:	call   402158 <fn_ii@plt>
  40405b:	call   4044c0 <mmk_matcher_term@@Base>
  404060:	mov    QWORD PTR [rbp-0x90],0x0
  40406b:	mov    QWORD PTR [rbp-0x88],0x0
  404076:	mov    QWORD PTR [rbp-0x80],0x0
  40407e:	mov    QWORD PTR [rbp-0x78],0x0
  404086:	mov    QWORD PTR [rbp-0x70],0x0
  40408e:	mov    DWORD PTR [rbp-0x90],0x1
  404098:	mov    QWORD PTR [rbp-0x78],0x1
  4040a0:	lea    rax,[rbp-0x90]
  4040a7:	mov    rdi,rax
  4040aa:	call   40551f <mmk_verify_times@@Base>
  4040af:	test   eax,eax
  4040b1:	jne    4040e9 <main@@Base+0xb60>
  4040b3:	mov    rax,QWORD PTR [rip+0x4f3e]        # 408ff8 <stderr@GLIBC_2.2.5>
  4040ba:	mov    rax,QWORD PTR [rax]
  4040bd:	lea    r8,[rip+0x21e4]        # 4062a8 <_IO_stdin_used@@Base+0x2a8>
  4040c4:	mov    ecx,0x44
  4040c9:	lea    rdx,[rip+0x1f60]        # 406030 <_IO_stdin_used@@Base+0x30>
  4040d0:	lea    rsi,[rip+0x1fac]        # 406083 <_IO_stdin_used@@Base+0x83>
  4040d7:	mov    rdi,rax
  4040da:	mov    eax,0x0
  4040df:	call   4020d0 <fprintf@plt>
  4040e4:	call   402050 <abort@plt>
  4040e9:	mov    edi,0x1
  4040ee:	call   404470 <mmk_matcher_init@@Base>
  4040f3:	mov    edi,0x2a
  4040f8:	call   402158 <fn_ii@plt>
  4040fd:	call   4044c0 <mmk_matcher_term@@Base>
  404102:	mov    QWORD PTR [rbp-0x60],0x0
  40410a:	mov    QWORD PTR [rbp-0x58],0x0
  404112:	mov    QWORD PTR [rbp-0x50],0x0
  40411a:	mov    QWORD PTR [rbp-0x48],0x0
  404122:	mov    QWORD PTR [rbp-0x40],0x0
  40412a:	mov    DWORD PTR [rbp-0x60],0x1
  404131:	mov    QWORD PTR [rbp-0x48],0x1
  404139:	lea    rax,[rbp-0x60]
  40413d:	mov    rdi,rax
  404140:	call   40551f <mmk_verify_times@@Base>
  404145:	test   eax,eax
  404147:	jne    40417f <main@@Base+0xbf6>
  404149:	mov    rax,QWORD PTR [rip+0x4ea8]        # 408ff8 <stderr@GLIBC_2.2.5>
  404150:	mov    rax,QWORD PTR [rax]
  404153:	lea    r8,[rip+0x2176]        # 4062d0 <_IO_stdin_used@@Base+0x2d0>
  40415a:	mov    ecx,0x45
  40415f:	lea    rdx,[rip+0x1eca]        # 406030 <_IO_stdin_used@@Base+0x30>
  404166:	lea    rsi,[rip+0x1f16]        # 406083 <_IO_stdin_used@@Base+0x83>
  40416d:	mov    rdi,rax
  404170:	mov    eax,0x0
  404175:	call   4020d0 <fprintf@plt>
  40417a:	call   402050 <abort@plt>
  40417f:	mov    edi,0x1
  404184:	call   404470 <mmk_matcher_init@@Base>
  404189:	mov    edi,0xc
  40418e:	call   402158 <fn_ii@plt>
  404193:	call   4044c0 <mmk_matcher_term@@Base>
  404198:	mov    QWORD PTR [rbp-0x30],0x0
  4041a0:	mov    QWORD PTR [rbp-0x28],0x0
  4041a8:	mov    QWORD PTR [rbp-0x20],0x0
  4041b0:	mov    QWORD PTR [rbp-0x18],0x0
  4041b8:	mov    QWORD PTR [rbp-0x10],0x0
  4041c0:	mov    DWORD PTR [rbp-0x30],0x1
  4041c7:	mov    DWORD PTR [rbp-0x2c],0x1
  4041ce:	lea    rax,[rbp-0x30]
  4041d2:	mov    rdi,rax
  4041d5:	call   40551f <mmk_verify_times@@Base>
  4041da:	test   eax,eax
  4041dc:	jne    404214 <main@@Base+0xc8b>
  4041de:	mov    rax,QWORD PTR [rip+0x4e13]        # 408ff8 <stderr@GLIBC_2.2.5>
  4041e5:	mov    rax,QWORD PTR [rax]
  4041e8:	lea    r8,[rip+0x2109]        # 4062f8 <_IO_stdin_used@@Base+0x2f8>
  4041ef:	mov    ecx,0x46
  4041f4:	lea    rdx,[rip+0x1e35]        # 406030 <_IO_stdin_used@@Base+0x30>
  4041fb:	lea    rsi,[rip+0x1e81]        # 406083 <_IO_stdin_used@@Base+0x83>
  404202:	mov    rdi,rax
  404205:	mov    eax,0x0
  40420a:	call   4020d0 <fprintf@plt>
  40420f:	call   402050 <abort@plt>
  404214:	mov    rax,QWORD PTR [rip+0x4dbd]        # 408fd8 <fn_ii>
  40421b:	mov    rdi,rax
  40421e:	call   404426 <mmk_reset@@Base>
  404223:	lea    rdi,[rip+0x20f0]        # 40631a <_IO_stdin_used@@Base+0x31a>
  40422a:	call   403553 <_start@@Base+0x13e3>
  40422f:	mov    edi,0x0
  404234:	call   404470 <mmk_matcher_init@@Base>
  404239:	mov    QWORD PTR [rbp-0x320],0x0
  404244:	mov    QWORD PTR [rbp-0x318],0x0
  40424f:	mov    QWORD PTR [rbp-0x310],0x0
  40425a:	mov    QWORD PTR [rbp-0x308],0x0
  404265:	mov    DWORD PTR [rbp-0x368],0x1
  40426f:	lea    rax,[rbp-0x368]
  404276:	mov    QWORD PTR [rbp-0x318],rax
  40427d:	lea    rax,[rbp-0x320]
  404284:	mov    rdi,rax
  404287:	call   405ba1 <mmk_when_init@@Base>
  40428c:	mov    esi,0x2a
  404291:	mov    edi,0x1
  404296:	mov    eax,0x0
  40429b:	call   402160 <fn_ii_va@plt>
  4042a0:	call   4044c0 <mmk_matcher_term@@Base>
  4042a5:	mov    esi,0x2a
  4042aa:	mov    edi,0x1
  4042af:	mov    eax,0x0
  4042b4:	call   402160 <fn_ii_va@plt>
  4042b9:	cmp    eax,0x1
  4042bc:	je     4042f4 <main@@Base+0xd6b>
  4042be:	mov    rax,QWORD PTR [rip+0x4d33]        # 408ff8 <stderr@GLIBC_2.2.5>
  4042c5:	mov    rax,QWORD PTR [rax]
  4042c8:	lea    r8,[rip+0x2054]        # 406323 <_IO_stdin_used@@Base+0x323>
  4042cf:	mov    ecx,0x4d
  4042d4:	lea    rdx,[rip+0x1d55]        # 406030 <_IO_stdin_used@@Base+0x30>
  4042db:	lea    rsi,[rip+0x1da1]        # 406083 <_IO_stdin_used@@Base+0x83>
  4042e2:	mov    rdi,rax
  4042e5:	mov    eax,0x0
  4042ea:	call   4020d0 <fprintf@plt>
  4042ef:	call   402050 <abort@plt>
  4042f4:	mov    rax,QWORD PTR [rip+0x4ce5]        # 408fe0 <fn_ii_va>
  4042fb:	mov    rdi,rax
  4042fe:	call   404426 <mmk_reset@@Base>
  404303:	mov    eax,0x0
  404308:	mov    rdx,QWORD PTR [rbp-0x8]
  40430c:	xor    rdx,QWORD PTR fs:0x28
  404315:	je     40431c <main@@Base+0xd93>
  404317:	call   402080 <__stack_chk_fail@plt>
  40431c:	leave  
  40431d:	ret    

000000000040431e <mmk_init@@Base>:
  40431e:	endbr64 
  404322:	push   rbp
  404323:	mov    rbp,rsp
  404326:	sub    rsp,0x10
  40432a:	mov    eax,DWORD PTR [rip+0x4da0]        # 4090d0 <__bss_start@@Base+0x10>
  404330:	test   eax,eax
  404332:	jne    4043b8 <mmk_init@@Base+0x9a>
  404338:	call   404ba0 <plt_init_ctx@@Base>
  40433d:	mov    QWORD PTR [rip+0x4d94],rax        # 4090d8 <__bss_start@@Base+0x18>
  404344:	mov    rax,QWORD PTR [rip+0x4d8d]        # 4090d8 <__bss_start@@Base+0x18>
  40434b:	cmp    rax,0xffffffffffffffff
  40434f:	jne    40439d <mmk_init@@Base+0x7f>
  404351:	mov    rax,QWORD PTR [rip+0x4ca0]        # 408ff8 <stderr@GLIBC_2.2.5>
  404358:	mov    rax,QWORD PTR [rax]
  40435b:	mov    QWORD PTR [rbp-0x10],rax
  40435f:	lea    rax,[rip+0x1fd2]        # 406338 <_IO_stdin_used@@Base+0x338>
  404366:	mov    QWORD PTR [rbp-0x8],rax
  40436a:	mov    rdx,QWORD PTR [rbp-0x8]
  40436e:	mov    rax,QWORD PTR [rbp-0x10]
  404372:	lea    r9,[rip+0x1fdc]        # 406355 <_IO_stdin_used@@Base+0x355>
  404379:	mov    r8d,0x2d
  40437f:	lea    rcx,[rip+0x1fea]        # 406370 <_IO_stdin_used@@Base+0x370>
  404386:	mov    esi,0x1
  40438b:	mov    rdi,rax
  40438e:	mov    eax,0x0
  404393:	call   402130 <__fprintf_chk@plt>
  404398:	call   402050 <abort@plt>
  40439d:	mov    rax,QWORD PTR [rip+0x4d34]        # 4090d8 <__bss_start@@Base+0x18>
  4043a4:	mov    rdi,rax
  4043a7:	call   405ad0 <mmk_init_vital_functions@@Base>
  4043ac:	mov    DWORD PTR [rip+0x4d1a],0x1        # 4090d0 <__bss_start@@Base+0x10>
  4043b6:	jmp    4043b9 <mmk_init@@Base+0x9b>
  4043b8:	nop
  4043b9:	leave  
  4043ba:	ret    

00000000004043bb <mmk_plt_ctx@@Base>:
  4043bb:	endbr64 
  4043bf:	push   rbp
  4043c0:	mov    rbp,rsp
  4043c3:	sub    rsp,0x10
  4043c7:	mov    eax,DWORD PTR [rip+0x4d03]        # 4090d0 <__bss_start@@Base+0x10>
  4043cd:	test   eax,eax
  4043cf:	jne    40441d <mmk_plt_ctx@@Base+0x62>
  4043d1:	mov    rax,QWORD PTR [rip+0x4c20]        # 408ff8 <stderr@GLIBC_2.2.5>
  4043d8:	mov    rax,QWORD PTR [rax]
  4043db:	mov    QWORD PTR [rbp-0x10],rax
  4043df:	lea    rax,[rip+0x1f52]        # 406338 <_IO_stdin_used@@Base+0x338>
  4043e6:	mov    QWORD PTR [rbp-0x8],rax
  4043ea:	mov    rdx,QWORD PTR [rbp-0x8]
  4043ee:	mov    rax,QWORD PTR [rbp-0x10]
  4043f2:	lea    r9,[rip+0x1fc9]        # 4063c2 <_IO_stdin_used@@Base+0x3c2>
  4043f9:	mov    r8d,0x36
  4043ff:	lea    rcx,[rip+0x1f6a]        # 406370 <_IO_stdin_used@@Base+0x370>
  404406:	mov    esi,0x1
  40440b:	mov    rdi,rax
  40440e:	mov    eax,0x0
  404413:	call   402130 <__fprintf_chk@plt>
  404418:	call   402050 <abort@plt>
  40441d:	mov    rax,QWORD PTR [rip+0x4cb4]        # 4090d8 <__bss_start@@Base+0x18>
  404424:	leave  
  404425:	ret    

0000000000404426 <mmk_reset@@Base>:
  404426:	endbr64 
  40442a:	push   rbp
  40442b:	mov    rbp,rsp
  40442e:	sub    rsp,0x20
  404432:	mov    QWORD PTR [rbp-0x18],rdi
  404436:	cmp    QWORD PTR [rbp-0x18],0x0
  40443b:	je     40446b <mmk_reset@@Base+0x45>
  40443d:	mov    rax,QWORD PTR [rbp-0x18]
  404441:	mov    rdi,rax
  404444:	call   40534a <mmk_ask_ctx@@Base>
  404449:	mov    QWORD PTR [rbp-0x10],rax
  40444d:	mov    rax,QWORD PTR [rbp-0x10]
  404451:	mov    rdi,rax
  404454:	call   404fe1 <mmk_stub_context@@Base>
  404459:	mov    QWORD PTR [rbp-0x8],rax
  40445d:	mov    rax,QWORD PTR [rbp-0x8]
  404461:	mov    rdi,rax
  404464:	call   404799 <mmk_mock_destroy_internal@@Base>
  404469:	jmp    40446c <mmk_reset@@Base+0x46>
  40446b:	nop
  40446c:	leave  
  40446d:	ret    
  40446e:	xchg   ax,ax

0000000000404470 <mmk_matcher_init@@Base>:
  404470:	endbr64 
  404474:	push   rbp
  404475:	mov    ebp,edi
  404477:	mov    edi,0x18
  40447c:	push   rbx
  40447d:	sub    rsp,0x8
  404481:	call   405aa0 <mmk_malloc@@Base>
  404486:	vpxor  xmm0,xmm0,xmm0
  40448a:	vmovups XMMWORD PTR [rax],xmm0
  40448e:	mov    QWORD PTR [rax+0x10],0x0
  404496:	mov    DWORD PTR [rax],ebp
  404498:	mov    rbx,rax
  40449b:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4044a7:	mov    QWORD PTR [rax-0x28],rbx
  4044ae:	add    rsp,0x8
  4044b2:	pop    rbx
  4044b3:	pop    rbp
  4044b4:	ret    
  4044b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004044c0 <mmk_matcher_term@@Base>:
  4044c0:	endbr64 
  4044c4:	sub    rsp,0x8
  4044c8:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4044d4:	mov    QWORD PTR [rax-0x28],0x0
  4044df:	add    rsp,0x8
  4044e3:	ret    
  4044e4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4044ef:	nop

00000000004044f0 <mmk_matcher_ctx@@Base>:
  4044f0:	endbr64 
  4044f4:	sub    rsp,0x8
  4044f8:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  404504:	mov    rax,QWORD PTR [rax-0x28]
  40450b:	add    rsp,0x8
  40450f:	ret    

0000000000404510 <mmk_matcher_add@@Base>:
  404510:	endbr64 
  404514:	push   r12
  404516:	mov    r12d,edi
  404519:	mov    edi,0x18
  40451e:	push   rbp
  40451f:	mov    ebp,esi
  404521:	push   rbx
  404522:	call   405aa0 <mmk_malloc@@Base>
  404527:	mov    rbx,rax
  40452a:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  404536:	mov    QWORD PTR [rbx+0x10],0x0
  40453e:	vpxor  xmm0,xmm0,xmm0
  404542:	vmovups XMMWORD PTR [rbx],xmm0
  404546:	movsxd rsi,ebp
  404549:	mov    DWORD PTR [rbx],r12d
  40454c:	mov    rdx,QWORD PTR [rax-0x28]
  404553:	mov    QWORD PTR [rbx+0x8],rsi
  404557:	mov    rax,QWORD PTR [rdx+0x10]
  40455b:	test   rax,rax
  40455e:	je     404566 <mmk_matcher_add@@Base+0x56>
  404560:	cmp    rsi,QWORD PTR [rax+0x8]
  404564:	ja     404578 <mmk_matcher_add@@Base+0x68>
  404566:	mov    QWORD PTR [rbx+0x10],rax
  40456a:	mov    QWORD PTR [rdx+0x10],rbx
  40456e:	pop    rbx
  40456f:	pop    rbp
  404570:	pop    r12
  404572:	ret    
  404573:	nop    DWORD PTR [rax+rax*1+0x0]
  404578:	mov    rdx,rax
  40457b:	mov    rax,QWORD PTR [rax+0x10]
  40457f:	test   rax,rax
  404582:	jne    404560 <mmk_matcher_add@@Base+0x50>
  404584:	jmp    404566 <mmk_matcher_add@@Base+0x56>
  404586:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404590 <mmk_matcher_get_predicate@@Base>:
  404590:	endbr64 
  404594:	lea    rax,[rdi+0x18]
  404598:	ret    

0000000000404599 <mmk_mock_create_internal@@Base>:
  404599:	endbr64 
  40459d:	push   rbp
  40459e:	mov    rbp,rsp
  4045a1:	push   rbx
  4045a2:	sub    rsp,0x68
  4045a6:	mov    QWORD PTR [rbp-0x68],rdi
  4045aa:	mov    QWORD PTR [rbp-0x70],rsi
  4045ae:	call   40431e <mmk_init@@Base>
  4045b3:	mov    edi,0x28
  4045b8:	call   405aa0 <mmk_malloc@@Base>
  4045bd:	mov    QWORD PTR [rbp-0x48],rax
  4045c1:	cmp    QWORD PTR [rbp-0x48],0x0
  4045c6:	jne    404614 <mmk_mock_create_internal@@Base+0x7b>
  4045c8:	mov    rax,QWORD PTR [rip+0x4a29]        # 408ff8 <stderr@GLIBC_2.2.5>
  4045cf:	mov    rax,QWORD PTR [rax]
  4045d2:	mov    QWORD PTR [rbp-0x30],rax
  4045d6:	lea    rax,[rip+0x1dfb]        # 4063d8 <_IO_stdin_used@@Base+0x3d8>
  4045dd:	mov    QWORD PTR [rbp-0x28],rax
  4045e1:	mov    rdx,QWORD PTR [rbp-0x28]
  4045e5:	mov    rax,QWORD PTR [rbp-0x30]
  4045e9:	lea    r9,[rip+0x1e05]        # 4063f5 <_IO_stdin_used@@Base+0x3f5>
  4045f0:	mov    r8d,0x24
  4045f6:	lea    rcx,[rip+0x1e03]        # 406400 <_IO_stdin_used@@Base+0x400>
  4045fd:	mov    esi,0x1
  404602:	mov    rdi,rax
  404605:	mov    eax,0x0
  40460a:	call   402130 <__fprintf_chk@plt>
  40460f:	call   402050 <abort@plt>
  404614:	mov    rax,QWORD PTR [rbp-0x48]
  404618:	mov    QWORD PTR [rax],0x0
  40461f:	mov    QWORD PTR [rax+0x8],0x0
  404627:	mov    QWORD PTR [rax+0x10],0x0
  40462f:	mov    QWORD PTR [rax+0x18],0x0
  404637:	mov    QWORD PTR [rax+0x20],0x0
  40463f:	mov    rax,QWORD PTR [rbp-0x68]
  404643:	mov    esi,0x40
  404648:	mov    rdi,rax
  40464b:	call   4059a0 <mmk_strchr@@Base>
  404650:	mov    QWORD PTR [rbp-0x40],rax
  404654:	cmp    QWORD PTR [rbp-0x40],0x0
  404659:	jne    40466d <mmk_mock_create_internal@@Base+0xd4>
  40465b:	mov    rax,QWORD PTR [rbp-0x68]
  40465f:	mov    rdi,rax
  404662:	call   405a50 <mmk_strlen@@Base>
  404667:	mov    QWORD PTR [rbp-0x50],rax
  40466b:	jmp    404679 <mmk_mock_create_internal@@Base+0xe0>
  40466d:	mov    rax,QWORD PTR [rbp-0x40]
  404671:	sub    rax,QWORD PTR [rbp-0x68]
  404675:	mov    QWORD PTR [rbp-0x50],rax
  404679:	mov    rax,QWORD PTR [rbp-0x50]
  40467d:	inc    rax
  404680:	mov    rdi,rax
  404683:	call   405aa0 <mmk_malloc@@Base>
  404688:	mov    QWORD PTR [rbp-0x38],rax
  40468c:	mov    rdx,QWORD PTR [rbp-0x50]
  404690:	mov    rcx,QWORD PTR [rbp-0x68]
  404694:	mov    rax,QWORD PTR [rbp-0x38]
  404698:	mov    rsi,rcx
  40469b:	mov    rdi,rax
  40469e:	call   405a10 <mmk_strncpy@@Base>
  4046a3:	mov    rdx,QWORD PTR [rbp-0x38]
  4046a7:	mov    rax,QWORD PTR [rbp-0x50]
  4046ab:	add    rax,rdx
  4046ae:	mov    BYTE PTR [rax],0x0
  4046b1:	cmp    QWORD PTR [rbp-0x40],0x0
  4046b6:	je     4046d7 <mmk_mock_create_internal@@Base+0x13e>
  4046b8:	mov    rax,QWORD PTR [rbp-0x40]
  4046bc:	inc    rax
  4046bf:	mov    edx,0x4
  4046c4:	lea    rsi,[rip+0x1d87]        # 406452 <_IO_stdin_used@@Base+0x452>
  4046cb:	mov    rdi,rax
  4046ce:	call   405940 <mmk_strneq@@Base>
  4046d3:	test   eax,eax
  4046d5:	je     4046de <mmk_mock_create_internal@@Base+0x145>
  4046d7:	mov    eax,0x1
  4046dc:	jmp    4046e3 <mmk_mock_create_internal@@Base+0x14a>
  4046de:	mov    eax,0x0
  4046e3:	mov    DWORD PTR [rbp-0x54],eax
  4046e6:	mov    rdx,QWORD PTR [rbp-0x48]
  4046ea:	mov    rcx,QWORD PTR [rbp-0x70]
  4046ee:	mov    rax,QWORD PTR [rbp-0x68]
  4046f2:	mov    rsi,rcx
  4046f5:	mov    rdi,rax
  4046f8:	call   40524e <mmk_stub_create@@Base>
  4046fd:	mov    rdx,rax
  404700:	mov    rax,QWORD PTR [rbp-0x48]
  404704:	mov    QWORD PTR [rax+0x8],rdx
  404708:	mov    rax,QWORD PTR [rbp-0x48]
  40470c:	mov    rax,QWORD PTR [rax+0x8]
  404710:	test   rax,rax
  404713:	jne    404751 <mmk_mock_create_internal@@Base+0x1b8>
  404715:	mov    rax,QWORD PTR [rip+0x48dc]        # 408ff8 <stderr@GLIBC_2.2.5>
  40471c:	mov    rax,QWORD PTR [rax]
  40471f:	mov    QWORD PTR [rbp-0x20],rax
  404723:	lea    rax,[rip+0x1d2e]        # 406458 <_IO_stdin_used@@Base+0x458>
  40472a:	mov    QWORD PTR [rbp-0x18],rax
  40472e:	mov    rcx,QWORD PTR [rbp-0x68]
  404732:	mov    rdx,QWORD PTR [rbp-0x18]
  404736:	mov    rax,QWORD PTR [rbp-0x20]
  40473a:	mov    esi,0x1
  40473f:	mov    rdi,rax
  404742:	mov    eax,0x0
  404747:	call   402130 <__fprintf_chk@plt>
  40474c:	call   402050 <abort@plt>
  404751:	cmp    DWORD PTR [rbp-0x54],0x0
  404755:	jne    40477a <mmk_mock_create_internal@@Base+0x1e1>
  404757:	mov    rax,QWORD PTR [rbp-0x48]
  40475b:	mov    rbx,QWORD PTR [rax+0x8]
  40475f:	mov    rdx,QWORD PTR [rbp-0x48]
  404763:	mov    rcx,QWORD PTR [rbp-0x70]
  404767:	mov    rax,QWORD PTR [rbp-0x38]
  40476b:	mov    rsi,rcx
  40476e:	mov    rdi,rax
  404771:	call   40524e <mmk_stub_create@@Base>
  404776:	mov    QWORD PTR [rbx+0x48],rax
  40477a:	mov    rax,QWORD PTR [rbp-0x38]
  40477e:	mov    rdi,rax
  404781:	call   405ac0 <mmk_free@@Base>
  404786:	mov    rax,QWORD PTR [rbp-0x48]
  40478a:	mov    rax,QWORD PTR [rax+0x8]
  40478e:	mov    rax,QWORD PTR [rax+0x40]
  404792:	add    rsp,0x68
  404796:	pop    rbx
  404797:	pop    rbp
  404798:	ret    

0000000000404799 <mmk_mock_destroy_internal@@Base>:
  404799:	endbr64 
  40479d:	push   rbp
  40479e:	mov    rbp,rsp
  4047a1:	sub    rsp,0x40
  4047a5:	mov    QWORD PTR [rbp-0x38],rdi
  4047a9:	mov    rax,QWORD PTR [rbp-0x38]
  4047ad:	mov    rax,QWORD PTR [rax+0x8]
  4047b1:	mov    QWORD PTR [rbp-0x30],rax
  4047b5:	jmp    4047d7 <mmk_mock_destroy_internal@@Base+0x3e>
  4047b7:	mov    rax,QWORD PTR [rbp-0x30]
  4047bb:	mov    rax,QWORD PTR [rax+0x48]
  4047bf:	mov    QWORD PTR [rbp-0x18],rax
  4047c3:	mov    rax,QWORD PTR [rbp-0x30]
  4047c7:	mov    rdi,rax
  4047ca:	call   40531f <mmk_stub_destroy@@Base>
  4047cf:	mov    rax,QWORD PTR [rbp-0x18]
  4047d3:	mov    QWORD PTR [rbp-0x30],rax
  4047d7:	cmp    QWORD PTR [rbp-0x30],0x0
  4047dc:	jne    4047b7 <mmk_mock_destroy_internal@@Base+0x1e>
  4047de:	mov    rax,QWORD PTR [rbp-0x38]
  4047e2:	mov    rax,QWORD PTR [rax+0x10]
  4047e6:	mov    rdi,rax
  4047e9:	call   405ac0 <mmk_free@@Base>
  4047ee:	mov    rax,QWORD PTR [rbp-0x38]
  4047f2:	mov    rax,QWORD PTR [rax]
  4047f5:	mov    QWORD PTR [rbp-0x28],rax
  4047f9:	jmp    40484f <mmk_mock_destroy_internal@@Base+0xb6>
  4047fb:	mov    rax,QWORD PTR [rbp-0x28]
  4047ff:	mov    rax,QWORD PTR [rax+0x8]
  404803:	mov    QWORD PTR [rbp-0x10],rax
  404807:	mov    rax,QWORD PTR [rbp-0x28]
  40480b:	mov    rax,QWORD PTR [rax]
  40480e:	mov    QWORD PTR [rbp-0x20],rax
  404812:	jmp    404834 <mmk_mock_destroy_internal@@Base+0x9b>
  404814:	mov    rax,QWORD PTR [rbp-0x20]
  404818:	mov    rax,QWORD PTR [rax+0x10]
  40481c:	mov    QWORD PTR [rbp-0x8],rax
  404820:	mov    rax,QWORD PTR [rbp-0x20]
  404824:	mov    rdi,rax
  404827:	call   405ac0 <mmk_free@@Base>
  40482c:	mov    rax,QWORD PTR [rbp-0x8]
  404830:	mov    QWORD PTR [rbp-0x20],rax
  404834:	cmp    QWORD PTR [rbp-0x20],0x0
  404839:	jne    404814 <mmk_mock_destroy_internal@@Base+0x7b>
  40483b:	mov    rax,QWORD PTR [rbp-0x28]
  40483f:	mov    rdi,rax
  404842:	call   405ac0 <mmk_free@@Base>
  404847:	mov    rax,QWORD PTR [rbp-0x10]
  40484b:	mov    QWORD PTR [rbp-0x28],rax
  40484f:	cmp    QWORD PTR [rbp-0x28],0x0
  404854:	jne    4047fb <mmk_mock_destroy_internal@@Base+0x62>
  404856:	mov    rax,QWORD PTR [rbp-0x38]
  40485a:	mov    rdi,rax
  40485d:	call   405ac0 <mmk_free@@Base>
  404862:	nop
  404863:	leave  
  404864:	ret    

0000000000404865 <mmk_mock_params_begin@@Base>:
  404865:	endbr64 
  404869:	push   rbp
  40486a:	mov    rbp,rsp
  40486d:	mov    QWORD PTR [rbp-0x8],rdi
  404871:	mov    rax,QWORD PTR [rbp-0x8]
  404875:	mov    rax,QWORD PTR [rax+0x10]
  404879:	test   rax,rax
  40487c:	je     40488b <mmk_mock_params_begin@@Base+0x26>
  40487e:	mov    rax,QWORD PTR [rbp-0x8]
  404882:	mov    rax,QWORD PTR [rax+0x18]
  404886:	test   rax,rax
  404889:	jne    404892 <mmk_mock_params_begin@@Base+0x2d>
  40488b:	mov    eax,0x0
  404890:	jmp    40489e <mmk_mock_params_begin@@Base+0x39>
  404892:	mov    rax,QWORD PTR [rbp-0x8]
  404896:	mov    rax,QWORD PTR [rax+0x10]
  40489a:	add    rax,0x8
  40489e:	pop    rbp
  40489f:	ret    

00000000004048a0 <mmk_mock_params_next@@Base>:
  4048a0:	endbr64 
  4048a4:	push   rbp
  4048a5:	mov    rbp,rsp
  4048a8:	mov    QWORD PTR [rbp-0x18],rdi
  4048ac:	mov    QWORD PTR [rbp-0x20],rsi
  4048b0:	mov    rax,QWORD PTR [rbp-0x20]
  4048b4:	mov    QWORD PTR [rbp-0x10],rax
  4048b8:	mov    rax,QWORD PTR [rbp-0x10]
  4048bc:	mov    rax,QWORD PTR [rax-0x8]
  4048c0:	mov    QWORD PTR [rbp-0x8],rax
  4048c4:	mov    rax,QWORD PTR [rbp-0x8]
  4048c8:	add    rax,0x8
  4048cc:	add    QWORD PTR [rbp-0x10],rax
  4048d0:	mov    rax,QWORD PTR [rbp-0x18]
  4048d4:	mov    rdx,QWORD PTR [rax+0x10]
  4048d8:	mov    rax,QWORD PTR [rbp-0x18]
  4048dc:	mov    rax,QWORD PTR [rax+0x18]
  4048e0:	add    rax,rdx
  4048e3:	cmp    QWORD PTR [rbp-0x10],rax
  4048e7:	jb     4048f0 <mmk_mock_params_next@@Base+0x50>
  4048e9:	mov    eax,0x0
  4048ee:	jmp    4048f4 <mmk_mock_params_next@@Base+0x54>
  4048f0:	mov    rax,QWORD PTR [rbp-0x10]
  4048f4:	pop    rbp
  4048f5:	ret    

00000000004048f6 <mmk_mock_get_params@@Base>:
  4048f6:	endbr64 
  4048fa:	push   rbp
  4048fb:	mov    rbp,rsp
  4048fe:	sub    rsp,0x10
  404902:	call   4053ba <mmk_ctx@@Base>
  404907:	mov    rdi,rax
  40490a:	call   404fe1 <mmk_stub_context@@Base>
  40490f:	mov    QWORD PTR [rbp-0x8],rax
  404913:	mov    rax,QWORD PTR [rbp-0x8]
  404917:	mov    rax,QWORD PTR [rax]
  40491a:	leave  
  40491b:	ret    
  40491c:	nop    DWORD PTR [rax+0x0]
  404920:	push   r15
  404922:	push   r14
  404924:	push   r13
  404926:	push   r12
  404928:	push   rbp
  404929:	push   rbx
  40492a:	sub    rsp,0x18
  40492e:	mov    rdx,QWORD PTR [rdi+0x10]
  404932:	mov    rax,QWORD PTR [rdi]
  404935:	mov    r9,QWORD PTR [rdx]
  404938:	mov    QWORD PTR [rsp+0x8],rax
  40493d:	test   r9,r9
  404940:	je     404ac8 <mmk_mock_get_params@@Base+0x1d2>
  404946:	mov    rax,rdx
  404949:	cmp    r9,0x6
  40494d:	jne    404962 <mmk_mock_get_params@@Base+0x6c>
  40494f:	jmp    404b70 <mmk_mock_get_params@@Base+0x27a>
  404954:	nop    DWORD PTR [rax+0x0]
  404958:	cmp    rcx,0x6
  40495c:	je     404b70 <mmk_mock_get_params@@Base+0x27a>
  404962:	add    rax,0x10
  404966:	mov    rcx,QWORD PTR [rax]
  404969:	test   rcx,rcx
  40496c:	jne    404958 <mmk_mock_get_params@@Base+0x62>
  40496e:	mov    r10d,0x1
  404974:	xor    ebx,ebx
  404976:	mov    rcx,rdx
  404979:	cmp    r9,0x5
  40497d:	jne    404992 <mmk_mock_get_params@@Base+0x9c>
  40497f:	jmp    404b38 <mmk_mock_get_params@@Base+0x242>
  404984:	nop    DWORD PTR [rax+0x0]
  404988:	cmp    rax,0x5
  40498c:	je     404b38 <mmk_mock_get_params@@Base+0x242>
  404992:	add    rcx,0x10
  404996:	mov    rax,QWORD PTR [rcx]
  404999:	test   rax,rax
  40499c:	jne    404988 <mmk_mock_get_params@@Base+0x92>
  40499e:	mov    r10d,0x1
  4049a4:	xor    r12d,r12d
  4049a7:	mov    rcx,rdx
  4049aa:	cmp    r9,0x14
  4049ae:	jne    4049c2 <mmk_mock_get_params@@Base+0xcc>
  4049b0:	jmp    404b28 <mmk_mock_get_params@@Base+0x232>
  4049b5:	nop    DWORD PTR [rax]
  4049b8:	cmp    rdi,0x14
  4049bc:	je     404b28 <mmk_mock_get_params@@Base+0x232>
  4049c2:	add    rcx,0x10
  4049c6:	mov    rdi,QWORD PTR [rcx]
  4049c9:	test   rdi,rdi
  4049cc:	jne    4049b8 <mmk_mock_get_params@@Base+0xc2>
  4049ce:	mov    r11d,0x2
  4049d4:	mov    rcx,rdx
  4049d7:	cmp    r9,0x17
  4049db:	jne    4049f2 <mmk_mock_get_params@@Base+0xfc>
  4049dd:	jmp    404b00 <mmk_mock_get_params@@Base+0x20a>
  4049e2:	nop    WORD PTR [rax+rax*1+0x0]
  4049e8:	cmp    rax,0x17
  4049ec:	je     404b00 <mmk_mock_get_params@@Base+0x20a>
  4049f2:	add    rcx,0x10
  4049f6:	mov    rax,QWORD PTR [rcx]
  4049f9:	test   rax,rax
  4049fc:	jne    4049e8 <mmk_mock_get_params@@Base+0xf2>
  4049fe:	xor    ebp,ebp
  404a00:	mov    rax,rdx
  404a03:	cmp    r9,0x2
  404a07:	jne    404a1a <mmk_mock_get_params@@Base+0x124>
  404a09:	jmp    404af0 <mmk_mock_get_params@@Base+0x1fa>
  404a0e:	xchg   ax,ax
  404a10:	cmp    r8,0x2
  404a14:	je     404af0 <mmk_mock_get_params@@Base+0x1fa>
  404a1a:	add    rax,0x10
  404a1e:	mov    r8,QWORD PTR [rax]
  404a21:	test   r8,r8
  404a24:	jne    404a10 <mmk_mock_get_params@@Base+0x11a>
  404a26:	cmp    r9,r11
  404a29:	jne    404a39 <mmk_mock_get_params@@Base+0x143>
  404a2b:	jmp    404ae0 <mmk_mock_get_params@@Base+0x1ea>
  404a30:	cmp    rax,r11
  404a33:	je     404ae0 <mmk_mock_get_params@@Base+0x1ea>
  404a39:	add    rdx,0x10
  404a3d:	mov    rax,QWORD PTR [rdx]
  404a40:	test   rax,rax
  404a43:	jne    404a30 <mmk_mock_get_params@@Base+0x13a>
  404a45:	xor    r13d,r13d
  404a48:	test   r10b,r10b
  404a4b:	jne    404ac8 <mmk_mock_get_params@@Base+0x1d2>
  404a4d:	test   rdi,rdi
  404a50:	je     404ac8 <mmk_mock_get_params@@Base+0x1d2>
  404a52:	test   rbp,rbp
  404a55:	je     404ac8 <mmk_mock_get_params@@Base+0x1d2>
  404a57:	test   r8,r8
  404a5a:	je     404ac8 <mmk_mock_get_params@@Base+0x1d2>
  404a5c:	test   r13,r13
  404a5f:	je     404ac8 <mmk_mock_get_params@@Base+0x1d2>
  404a61:	mov    rax,r8
  404a64:	xor    edx,edx
  404a66:	div    r13
  404a69:	mov    QWORD PTR [rsp],rax
  404a6d:	cmp    r13,r8
  404a70:	ja     404ac8 <mmk_mock_get_params@@Base+0x1d2>
  404a72:	mov    r14,rsi
  404a75:	xor    r15d,r15d
  404a78:	jmp    404a8c <mmk_mock_get_params@@Base+0x196>
  404a7a:	nop    WORD PTR [rax+rax*1+0x0]
  404a80:	inc    r15
  404a83:	add    rbp,r13
  404a86:	cmp    QWORD PTR [rsp],r15
  404a8a:	jbe    404ac8 <mmk_mock_get_params@@Base+0x1d2>
  404a8c:	mov    eax,DWORD PTR [rbp+0xc]
  404a8f:	mov    rsi,r14
  404a92:	lea    rax,[rax+rax*2]
  404a96:	mov    edi,DWORD PTR [rbx+rax*8]
  404a99:	add    rdi,r12
  404a9c:	call   4020c0 <strcmp@plt>
  404aa1:	test   eax,eax
  404aa3:	jne    404a80 <mmk_mock_get_params@@Base+0x18a>
  404aa5:	mov    rax,QWORD PTR [rbp+0x0]
  404aa9:	test   rax,rax
  404aac:	je     404aca <mmk_mock_get_params@@Base+0x1d4>
  404aae:	add    rax,QWORD PTR [rsp+0x8]
  404ab3:	add    rsp,0x18
  404ab7:	pop    rbx
  404ab8:	pop    rbp
  404ab9:	pop    r12
  404abb:	pop    r13
  404abd:	pop    r14
  404abf:	pop    r15
  404ac1:	ret    
  404ac2:	nop    WORD PTR [rax+rax*1+0x0]
  404ac8:	xor    eax,eax
  404aca:	add    rsp,0x18
  404ace:	pop    rbx
  404acf:	pop    rbp
  404ad0:	pop    r12
  404ad2:	pop    r13
  404ad4:	pop    r14
  404ad6:	pop    r15
  404ad8:	ret    
  404ad9:	nop    DWORD PTR [rax+0x0]
  404ae0:	mov    r13,QWORD PTR [rdx+0x8]
  404ae4:	jmp    404a48 <mmk_mock_get_params@@Base+0x152>
  404ae9:	nop    DWORD PTR [rax+0x0]
  404af0:	mov    r8,QWORD PTR [rax+0x8]
  404af4:	jmp    404a26 <mmk_mock_get_params@@Base+0x130>
  404af9:	nop    DWORD PTR [rax+0x0]
  404b00:	mov    rcx,QWORD PTR [rcx+0x8]
  404b04:	cmp    QWORD PTR [rsp+0x8],rcx
  404b09:	ja     404b17 <mmk_mock_get_params@@Base+0x221>
  404b0b:	mov    rbp,rcx
  404b0e:	test   rcx,rcx
  404b11:	jns    404a00 <mmk_mock_get_params@@Base+0x10a>
  404b17:	mov    rax,QWORD PTR [rsp+0x8]
  404b1c:	lea    rbp,[rax+rcx*1]
  404b20:	jmp    404a00 <mmk_mock_get_params@@Base+0x10a>
  404b25:	nop    DWORD PTR [rax]
  404b28:	mov    rdi,QWORD PTR [rcx+0x8]
  404b2c:	lea    r11,[rdi+0x2]
  404b30:	jmp    4049d4 <mmk_mock_get_params@@Base+0xde>
  404b35:	nop    DWORD PTR [rax]
  404b38:	mov    r12,QWORD PTR [rcx+0x8]
  404b3c:	cmp    QWORD PTR [rsp+0x8],r12
  404b41:	ja     404b58 <mmk_mock_get_params@@Base+0x262>
  404b43:	test   r12,r12
  404b46:	js     404b58 <mmk_mock_get_params@@Base+0x262>
  404b48:	sete   al
  404b4b:	or     r10d,eax
  404b4e:	jmp    4049a7 <mmk_mock_get_params@@Base+0xb1>
  404b53:	nop    DWORD PTR [rax+rax*1+0x0]
  404b58:	add    r12,QWORD PTR [rsp+0x8]
  404b5d:	sete   al
  404b60:	or     r10d,eax
  404b63:	jmp    4049a7 <mmk_mock_get_params@@Base+0xb1>
  404b68:	nop    DWORD PTR [rax+rax*1+0x0]
  404b70:	mov    rbx,QWORD PTR [rax+0x8]
  404b74:	cmp    QWORD PTR [rsp+0x8],rbx
  404b79:	ja     404b90 <mmk_mock_get_params@@Base+0x29a>
  404b7b:	test   rbx,rbx
  404b7e:	js     404b90 <mmk_mock_get_params@@Base+0x29a>
  404b80:	sete   r10b
  404b84:	jmp    404976 <mmk_mock_get_params@@Base+0x80>
  404b89:	nop    DWORD PTR [rax+0x0]
  404b90:	add    rbx,QWORD PTR [rsp+0x8]
  404b95:	sete   r10b
  404b99:	jmp    404976 <mmk_mock_get_params@@Base+0x80>
  404b9e:	xchg   ax,ax

0000000000404ba0 <plt_init_ctx@@Base>:
  404ba0:	endbr64 
  404ba4:	mov    rax,QWORD PTR [rip+0x450d]        # 4090b8 <__data_start@@Base+0x10>
  404bab:	cmp    rax,0xffffffffffffffff
  404baf:	je     404bb8 <plt_init_ctx@@Base+0x18>
  404bb1:	ret    
  404bb2:	nop    WORD PTR [rax+rax*1+0x0]
  404bb8:	mov    rax,QWORD PTR [rip+0x4409]        # 408fc8 <_r_debug@GLIBC_2.2.5>
  404bbf:	mov    QWORD PTR [rip+0x44f2],rax        # 4090b8 <__data_start@@Base+0x10>
  404bc6:	ret    
  404bc7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404bd0 <plt_get_lib@@Base>:
  404bd0:	endbr64 
  404bd4:	push   rbp
  404bd5:	mov    rbp,rsp
  404bd8:	push   r15
  404bda:	push   r14
  404bdc:	mov    r14,rdi
  404bdf:	push   r13
  404be1:	push   r12
  404be3:	push   rbx
  404be4:	sub    rsp,0x48
  404be8:	mov    rax,QWORD PTR fs:0x28
  404bf1:	mov    QWORD PTR [rbp-0x38],rax
  404bf5:	xor    eax,eax
  404bf7:	test   rsi,rsi
  404bfa:	je     404e00 <plt_get_lib@@Base+0x230>
  404c00:	mov    ecx,0x4
  404c05:	lea    rdi,[rip+0x187f]        # 40648b <_IO_stdin_used@@Base+0x48b>
  404c0c:	mov    r13,rsi
  404c0f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404c11:	mov    ebx,0x1
  404c16:	seta   al
  404c19:	sbb    al,0x0
  404c1b:	test   al,al
  404c1d:	jne    404dd3 <plt_get_lib@@Base+0x203>
  404c23:	mov    esi,0x3a
  404c28:	mov    rdi,r13
  404c2b:	call   4020a0 <strchr@plt>
  404c30:	lea    rsi,[rax+0x1]
  404c34:	mov    ecx,0x2
  404c39:	lea    rdi,[rip+0x1a01]        # 406641 <_IO_stdin_used@@Base+0x641>
  404c40:	mov    rax,rsi
  404c43:	mov    QWORD PTR [rbp-0x58],rsi
  404c47:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404c49:	mov    rdi,rax
  404c4c:	seta   r12b
  404c50:	sbb    r12b,0x0
  404c54:	call   402070 <strlen@plt>
  404c59:	mov    QWORD PTR [rbp-0x48],rax
  404c5d:	movsx  r12d,r12b
  404c61:	mov    r14,QWORD PTR [r14+0x8]
  404c65:	test   r14,r14
  404c68:	je     404d40 <plt_get_lib@@Base+0x170>
  404c6e:	mov    rax,QWORD PTR [rbp-0x48]
  404c72:	add    rax,0x17
  404c76:	mov    rcx,rax
  404c79:	and    rcx,0xfffffffffffffff0
  404c7d:	and    rax,0xfffffffffffff000
  404c83:	mov    QWORD PTR [rbp-0x60],rcx
  404c87:	mov    QWORD PTR [rbp-0x50],rax
  404c8b:	jmp    404cb6 <plt_get_lib@@Base+0xe6>
  404c8d:	nop    DWORD PTR [rax]
  404c90:	test   bl,0x1
  404c93:	jne    404d18 <plt_get_lib@@Base+0x148>
  404c99:	mov    rsi,QWORD PTR [r14+0x8]
  404c9d:	mov    rdi,r13
  404ca0:	call   4020c0 <strcmp@plt>
  404ca5:	test   eax,eax
  404ca7:	je     404cf0 <plt_get_lib@@Base+0x120>
  404ca9:	mov    r14,QWORD PTR [r14+0x18]
  404cad:	test   r14,r14
  404cb0:	je     404d40 <plt_get_lib@@Base+0x170>
  404cb6:	cmp    ebx,0x1
  404cb9:	jne    404c90 <plt_get_lib@@Base+0xc0>
  404cbb:	test   r12d,r12d
  404cbe:	jne    404d48 <plt_get_lib@@Base+0x178>
  404cc4:	mov    r15,QWORD PTR [r14+0x8]
  404cc8:	lea    rsi,[rip+0x17d1]        # 4064a0 <_IO_stdin_used@@Base+0x4a0>
  404ccf:	mov    rdi,r15
  404cd2:	call   402140 <strstr@plt>
  404cd7:	test   rax,rax
  404cda:	jne    404cf0 <plt_get_lib@@Base+0x120>
  404cdc:	lea    rsi,[rip+0x17c6]        # 4064a9 <_IO_stdin_used@@Base+0x4a9>
  404ce3:	mov    rdi,r15
  404ce6:	call   402140 <strstr@plt>
  404ceb:	test   rax,rax
  404cee:	je     404ca9 <plt_get_lib@@Base+0xd9>
  404cf0:	mov    rdx,QWORD PTR [rbp-0x38]
  404cf4:	xor    rdx,QWORD PTR fs:0x28
  404cfd:	mov    rax,r14
  404d00:	jne    404e9d <plt_get_lib@@Base+0x2cd>
  404d06:	lea    rsp,[rbp-0x28]
  404d0a:	pop    rbx
  404d0b:	pop    r12
  404d0d:	pop    r13
  404d0f:	pop    r14
  404d11:	pop    r15
  404d13:	pop    rbp
  404d14:	ret    
  404d15:	nop    DWORD PTR [rax]
  404d18:	cmp    ebx,0x3
  404d1b:	jne    404ca9 <plt_get_lib@@Base+0xd9>
  404d1d:	mov    rsi,QWORD PTR [rbp-0x58]
  404d21:	mov    rdi,r14
  404d24:	call   404920 <mmk_mock_get_params@@Base+0x2a>
  404d29:	test   rax,rax
  404d2c:	jne    404cf0 <plt_get_lib@@Base+0x120>
  404d2e:	mov    r14,QWORD PTR [r14+0x18]
  404d32:	test   r14,r14
  404d35:	jne    404cb6 <plt_get_lib@@Base+0xe6>
  404d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  404d40:	xor    r14d,r14d
  404d43:	jmp    404cf0 <plt_get_lib@@Base+0x120>
  404d45:	nop    DWORD PTR [rax]
  404d48:	mov    rax,QWORD PTR [rbp-0x48]
  404d4c:	mov    r11,rsp
  404d4f:	lea    rsi,[rax+0x8]
  404d53:	mov    rax,rsp
  404d56:	sub    rax,QWORD PTR [rbp-0x50]
  404d5a:	cmp    rsp,rax
  404d5d:	je     404d74 <plt_get_lib@@Base+0x1a4>
  404d5f:	sub    rsp,0x1000
  404d66:	or     QWORD PTR [rsp+0xff8],0x0
  404d6f:	cmp    rsp,rax
  404d72:	jne    404d5f <plt_get_lib@@Base+0x18f>
  404d74:	mov    rax,QWORD PTR [rbp-0x60]
  404d78:	and    eax,0xfff
  404d7d:	jne    404dc8 <plt_get_lib@@Base+0x1f8>
  404d7f:	mov    r9,QWORD PTR [rbp-0x58]
  404d83:	lea    r8,[rip+0x1728]        # 4064b2 <_IO_stdin_used@@Base+0x4b2>
  404d8a:	mov    rcx,0xffffffffffffffff
  404d91:	mov    edx,0x1
  404d96:	mov    rdi,rsp
  404d99:	xor    eax,eax
  404d9b:	mov    QWORD PTR [rbp-0x68],r11
  404d9f:	call   402030 <__snprintf_chk@plt>
  404da4:	mov    rdi,QWORD PTR [r14+0x8]
  404da8:	mov    rsi,rsp
  404dab:	call   402140 <strstr@plt>
  404db0:	test   rax,rax
  404db3:	mov    r11,QWORD PTR [rbp-0x68]
  404db7:	jne    404e44 <plt_get_lib@@Base+0x274>
  404dbd:	mov    rsp,r11
  404dc0:	jmp    404ca9 <plt_get_lib@@Base+0xd9>
  404dc5:	nop    DWORD PTR [rax]
  404dc8:	sub    rsp,rax
  404dcb:	or     QWORD PTR [rsp+rax*1-0x8],0x0
  404dd1:	jmp    404d7f <plt_get_lib@@Base+0x1af>
  404dd3:	mov    ecx,0x5
  404dd8:	lea    rdi,[rip+0x16b1]        # 406490 <_IO_stdin_used@@Base+0x490>
  404ddf:	mov    rsi,r13
  404de2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404de4:	seta   al
  404de7:	sbb    al,0x0
  404de9:	test   al,al
  404deb:	jne    404e20 <plt_get_lib@@Base+0x250>
  404ded:	mov    ebx,0x2
  404df2:	jmp    404c23 <plt_get_lib@@Base+0x53>
  404df7:	nop    WORD PTR [rax+rax*1+0x0]
  404e00:	lea    r13,[rip+0x173a]        # 406541 <_IO_stdin_used@@Base+0x541>
  404e07:	mov    QWORD PTR [rbp-0x48],0x0
  404e0f:	mov    r12d,0xffffffff
  404e15:	xor    ebx,ebx
  404e17:	mov    QWORD PTR [rbp-0x58],r13
  404e1b:	jmp    404c61 <plt_get_lib@@Base+0x91>
  404e20:	mov    ecx,0x4
  404e25:	lea    rdi,[rip+0x166a]        # 406496 <_IO_stdin_used@@Base+0x496>
  404e2c:	mov    rsi,r13
  404e2f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404e31:	seta   al
  404e34:	sbb    al,0x0
  404e36:	test   al,al
  404e38:	jne    404e4c <plt_get_lib@@Base+0x27c>
  404e3a:	mov    ebx,0x3
  404e3f:	jmp    404c23 <plt_get_lib@@Base+0x53>
  404e44:	mov    rsp,r11
  404e47:	jmp    404cf0 <plt_get_lib@@Base+0x120>
  404e4c:	lea    rsi,[rip+0x1648]        # 40649b <_IO_stdin_used@@Base+0x49b>
  404e53:	mov    rdi,r13
  404e56:	call   4020c0 <strcmp@plt>
  404e5b:	test   eax,eax
  404e5d:	je     404e00 <plt_get_lib@@Base+0x230>
  404e5f:	mov    rdi,r13
  404e62:	mov    esi,0x3a
  404e67:	call   4020a0 <strchr@plt>
  404e6c:	mov    rdx,QWORD PTR [rip+0x4185]        # 408ff8 <stderr@GLIBC_2.2.5>
  404e73:	mov    rdi,QWORD PTR [rdx]
  404e76:	test   rax,rax
  404e79:	je     404ea2 <plt_get_lib@@Base+0x2d2>
  404e7b:	sub    rax,r13
  404e7e:	lea    rcx,[rax+0x1]
  404e82:	mov    r8,r13
  404e85:	lea    rdx,[rip+0x1634]        # 4064c0 <_IO_stdin_used@@Base+0x4c0>
  404e8c:	mov    esi,0x1
  404e91:	xor    eax,eax
  404e93:	call   402130 <__fprintf_chk@plt>
  404e98:	call   402050 <abort@plt>
  404e9d:	call   402080 <__stack_chk_fail@plt>
  404ea2:	mov    rcx,r13
  404ea5:	lea    rdx,[rip+0x163c]        # 4064e8 <_IO_stdin_used@@Base+0x4e8>
  404eac:	mov    esi,0x1
  404eb1:	xor    eax,eax
  404eb3:	call   402130 <__fprintf_chk@plt>
  404eb8:	jmp    404e98 <plt_get_lib@@Base+0x2c8>
  404eba:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404ec0 <plt_get_offsets@@Base>:
  404ec0:	endbr64 
  404ec4:	push   rbp
  404ec5:	mov    rbp,rdx
  404ec8:	push   rbx
  404ec9:	sub    rsp,0x8
  404ecd:	call   404920 <mmk_mock_get_params@@Base+0x2a>
  404ed2:	mov    rbx,rax
  404ed5:	test   rax,rax
  404ed8:	je     404efa <plt_get_offsets@@Base+0x3a>
  404eda:	mov    edi,0x10
  404edf:	call   405aa0 <mmk_malloc@@Base>
  404ee4:	vpxor  xmm0,xmm0,xmm0
  404ee8:	mov    QWORD PTR [rbp+0x0],0x1
  404ef0:	vmovups XMMWORD PTR [rax],xmm0
  404ef4:	mov    QWORD PTR [rax],rbx
  404ef7:	mov    rbx,rax
  404efa:	add    rsp,0x8
  404efe:	mov    rax,rbx
  404f01:	pop    rbx
  404f02:	pop    rbp
  404f03:	ret    
  404f04:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404f0f:	nop

0000000000404f10 <plt_set_offsets@@Base>:
  404f10:	endbr64 
  404f14:	mov    rcx,rsi
  404f17:	shl    rcx,0x4
  404f1b:	add    rcx,rdi
  404f1e:	test   rsi,rsi
  404f21:	jne    404f34 <plt_set_offsets@@Base+0x24>
  404f23:	jmp    404f51 <plt_set_offsets@@Base+0x41>
  404f25:	nop    DWORD PTR [rax]
  404f28:	add    rdi,0x10
  404f2c:	mov    QWORD PTR [rax],rdx
  404f2f:	cmp    rcx,rdi
  404f32:	je     404f51 <plt_set_offsets@@Base+0x41>
  404f34:	cmp    QWORD PTR [rdi+0x8],0x0
  404f39:	mov    rax,QWORD PTR [rdi]
  404f3c:	jne    404f28 <plt_set_offsets@@Base+0x18>
  404f3e:	mov    rsi,QWORD PTR [rax]
  404f41:	add    rdi,0x10
  404f45:	mov    QWORD PTR [rdi-0x8],rsi
  404f49:	mov    QWORD PTR [rax],rdx
  404f4c:	cmp    rcx,rdi
  404f4f:	jne    404f34 <plt_set_offsets@@Base+0x24>
  404f51:	ret    
  404f52:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404f5d:	nop    DWORD PTR [rax]

0000000000404f60 <plt_reset_offsets@@Base>:
  404f60:	endbr64 
  404f64:	test   rsi,rsi
  404f67:	je     404f83 <plt_reset_offsets@@Base+0x23>
  404f69:	shl    rsi,0x4
  404f6d:	add    rsi,rdi
  404f70:	mov    rdx,QWORD PTR [rdi+0x8]
  404f74:	mov    rax,QWORD PTR [rdi]
  404f77:	add    rdi,0x10
  404f7b:	mov    QWORD PTR [rax],rdx
  404f7e:	cmp    rdi,rsi
  404f81:	jne    404f70 <plt_reset_offsets@@Base+0x10>
  404f83:	ret    
  404f84:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404f8f:	nop

0000000000404f90 <plt_get_real_fn@@Base>:
  404f90:	endbr64 
  404f94:	push   rbp
  404f95:	push   rbx
  404f96:	sub    rsp,0x8
  404f9a:	mov    rbx,QWORD PTR [rdi+0x8]
  404f9e:	test   rbx,rbx
  404fa1:	je     404fd8 <plt_get_real_fn@@Base+0x48>
  404fa3:	mov    rbp,rsi
  404fa6:	jmp    404fb9 <plt_get_real_fn@@Base+0x29>
  404fa8:	nop    DWORD PTR [rax+rax*1+0x0]
  404fb0:	mov    rbx,QWORD PTR [rbx+0x18]
  404fb4:	test   rbx,rbx
  404fb7:	je     404fd8 <plt_get_real_fn@@Base+0x48>
  404fb9:	mov    rsi,rbp
  404fbc:	mov    rdi,rbx
  404fbf:	call   404920 <mmk_mock_get_params@@Base+0x2a>
  404fc4:	test   rax,rax
  404fc7:	je     404fb0 <plt_get_real_fn@@Base+0x20>
  404fc9:	mov    rax,QWORD PTR [rax]
  404fcc:	add    rsp,0x8
  404fd0:	pop    rbx
  404fd1:	pop    rbp
  404fd2:	ret    
  404fd3:	nop    DWORD PTR [rax+rax*1+0x0]
  404fd8:	add    rsp,0x8
  404fdc:	pop    rbx
  404fdd:	xor    eax,eax
  404fdf:	pop    rbp
  404fe0:	ret    

0000000000404fe1 <mmk_stub_context@@Base>:
  404fe1:	endbr64 
  404fe5:	push   rbp
  404fe6:	mov    rbp,rsp
  404fe9:	mov    QWORD PTR [rbp-0x8],rdi
  404fed:	cmp    QWORD PTR [rbp-0x8],0x0
  404ff2:	jne    404ffb <mmk_stub_context@@Base+0x1a>
  404ff4:	mov    eax,0x0
  404ff9:	jmp    405003 <mmk_stub_context@@Base+0x22>
  404ffb:	mov    rax,QWORD PTR [rbp-0x8]
  404fff:	mov    rax,QWORD PTR [rax+0x18]
  405003:	pop    rbp
  405004:	ret    

0000000000405005 <mmk_stub_create_static@@Base>:
  405005:	endbr64 
  405009:	push   rbp
  40500a:	mov    rbp,rsp
  40500d:	sub    rsp,0x60
  405011:	mov    QWORD PTR [rbp-0x48],rdi
  405015:	mov    QWORD PTR [rbp-0x50],rsi
  405019:	mov    QWORD PTR [rbp-0x58],rdx
  40501d:	mov    QWORD PTR [rbp-0x60],rcx
  405021:	mov    rax,QWORD PTR fs:0x28
  40502a:	mov    QWORD PTR [rbp-0x8],rax
  40502e:	xor    eax,eax
  405030:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  40503c:	add    rax,0xffffffffffffffe0
  405042:	mov    DWORD PTR [rax],0x0
  405048:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  405054:	add    rax,0xffffffffffffffe8
  40505a:	mov    QWORD PTR [rax],0x0
  405061:	mov    rax,QWORD PTR [rbp-0x50]
  405065:	mov    rdi,rax
  405068:	call   405a50 <mmk_strlen@@Base>
  40506d:	inc    rax
  405070:	mov    rdi,rax
  405073:	call   405aa0 <mmk_malloc@@Base>
  405078:	mov    QWORD PTR [rbp-0x28],rax
  40507c:	cmp    QWORD PTR [rbp-0x28],0x0
  405081:	jne    40508d <mmk_stub_create_static@@Base+0x88>
  405083:	mov    eax,0xfffffff4
  405088:	jmp    405238 <mmk_stub_create_static@@Base+0x233>
  40508d:	mov    rdx,QWORD PTR [rbp-0x50]
  405091:	mov    rax,QWORD PTR [rbp-0x28]
  405095:	mov    rsi,rdx
  405098:	mov    rdi,rax
  40509b:	call   4059e0 <mmk_strcpy@@Base>
  4050a0:	mov    QWORD PTR [rbp-0x30],0x0
  4050a8:	mov    rax,QWORD PTR [rbp-0x28]
  4050ac:	mov    esi,0x40
  4050b1:	mov    rdi,rax
  4050b4:	call   4059a0 <mmk_strchr@@Base>
  4050b9:	mov    QWORD PTR [rbp-0x20],rax
  4050bd:	cmp    QWORD PTR [rbp-0x20],0x0
  4050c2:	je     4050d6 <mmk_stub_create_static@@Base+0xd1>
  4050c4:	mov    rax,QWORD PTR [rbp-0x20]
  4050c8:	mov    BYTE PTR [rax],0x0
  4050cb:	mov    rax,QWORD PTR [rbp-0x20]
  4050cf:	inc    rax
  4050d2:	mov    QWORD PTR [rbp-0x30],rax
  4050d6:	call   4043bb <mmk_plt_ctx@@Base>
  4050db:	mov    rdx,rax
  4050de:	mov    rax,QWORD PTR [rbp-0x30]
  4050e2:	mov    rsi,rax
  4050e5:	mov    rdi,rdx
  4050e8:	call   404bd0 <plt_get_lib@@Base>
  4050ed:	mov    QWORD PTR [rbp-0x18],rax
  4050f1:	cmp    QWORD PTR [rbp-0x18],0x0
  4050f6:	jne    405102 <mmk_stub_create_static@@Base+0xfd>
  4050f8:	mov    eax,0xfffffffe
  4050fd:	jmp    405238 <mmk_stub_create_static@@Base+0x233>
  405102:	mov    QWORD PTR [rbp-0x38],0x0
  40510a:	lea    rdx,[rbp-0x38]
  40510e:	mov    rcx,QWORD PTR [rbp-0x28]
  405112:	mov    rax,QWORD PTR [rbp-0x18]
  405116:	mov    rsi,rcx
  405119:	mov    rdi,rax
  40511c:	call   404ec0 <plt_get_offsets@@Base>
  405121:	mov    QWORD PTR [rbp-0x10],rax
  405125:	cmp    QWORD PTR [rbp-0x10],0x0
  40512a:	je     405135 <mmk_stub_create_static@@Base+0x130>
  40512c:	mov    rax,QWORD PTR [rbp-0x38]
  405130:	test   rax,rax
  405133:	jne    40513f <mmk_stub_create_static@@Base+0x13a>
  405135:	mov    eax,0xfffffffe
  40513a:	jmp    405238 <mmk_stub_create_static@@Base+0x233>
  40513f:	mov    rdx,QWORD PTR [rbp-0x38]
  405143:	mov    rax,QWORD PTR [rbp-0x48]
  405147:	mov    QWORD PTR [rax],0x0
  40514e:	mov    QWORD PTR [rax+0x8],0x0
  405156:	mov    QWORD PTR [rax+0x10],0x0
  40515e:	mov    QWORD PTR [rax+0x18],0x0
  405166:	mov    QWORD PTR [rax+0x20],0x0
  40516e:	mov    QWORD PTR [rax+0x28],0x0
  405176:	mov    QWORD PTR [rax+0x30],0x0
  40517e:	mov    QWORD PTR [rax+0x38],0x0
  405186:	mov    QWORD PTR [rax+0x40],0x0
  40518e:	mov    QWORD PTR [rax+0x48],0x0
  405196:	mov    rax,QWORD PTR [rbp-0x48]
  40519a:	mov    rcx,0x40537a
  4051a1:	mov    QWORD PTR [rax],rcx
  4051a4:	mov    rax,QWORD PTR [rbp-0x48]
  4051a8:	mov    rcx,0x4053d9
  4051af:	mov    QWORD PTR [rax+0x8],rcx
  4051b3:	mov    rax,QWORD PTR [rbp-0x48]
  4051b7:	mov    rcx,0x4053ba
  4051be:	mov    QWORD PTR [rax+0x10],rcx
  4051c2:	mov    rax,QWORD PTR [rbp-0x48]
  4051c6:	mov    rcx,QWORD PTR [rbp-0x60]
  4051ca:	mov    QWORD PTR [rax+0x18],rcx
  4051ce:	mov    rax,QWORD PTR [rbp-0x48]
  4051d2:	mov    rcx,QWORD PTR [rbp-0x28]
  4051d6:	mov    QWORD PTR [rax+0x20],rcx
  4051da:	mov    rax,QWORD PTR [rbp-0x48]
  4051de:	mov    rcx,QWORD PTR [rbp-0x30]
  4051e2:	mov    QWORD PTR [rax+0x28],rcx
  4051e6:	mov    rax,QWORD PTR [rbp-0x48]
  4051ea:	mov    rcx,QWORD PTR [rbp-0x10]
  4051ee:	mov    QWORD PTR [rax+0x30],rcx
  4051f2:	mov    rax,QWORD PTR [rbp-0x48]
  4051f6:	mov    QWORD PTR [rax+0x38],rdx
  4051fa:	mov    rdx,QWORD PTR [rbp-0x58]
  4051fe:	mov    rax,QWORD PTR [rbp-0x48]
  405202:	mov    rsi,rdx
  405205:	mov    rdi,rax
  405208:	call   405410 <create_trampoline@@Base>
  40520d:	mov    rdx,rax
  405210:	mov    rax,QWORD PTR [rbp-0x48]
  405214:	mov    QWORD PTR [rax+0x40],rdx
  405218:	mov    rax,QWORD PTR [rbp-0x48]
  40521c:	mov    rdx,QWORD PTR [rax+0x40]
  405220:	mov    rcx,QWORD PTR [rbp-0x38]
  405224:	mov    rax,QWORD PTR [rbp-0x10]
  405228:	mov    rsi,rcx
  40522b:	mov    rdi,rax
  40522e:	call   404f10 <plt_set_offsets@@Base>
  405233:	mov    eax,0x0
  405238:	mov    rsi,QWORD PTR [rbp-0x8]
  40523c:	xor    rsi,QWORD PTR fs:0x28
  405245:	je     40524c <mmk_stub_create_static@@Base+0x247>
  405247:	call   402080 <__stack_chk_fail@plt>
  40524c:	leave  
  40524d:	ret    

000000000040524e <mmk_stub_create@@Base>:
  40524e:	endbr64 
  405252:	push   rbp
  405253:	mov    rbp,rsp
  405256:	sub    rsp,0x30
  40525a:	mov    QWORD PTR [rbp-0x18],rdi
  40525e:	mov    QWORD PTR [rbp-0x20],rsi
  405262:	mov    QWORD PTR [rbp-0x28],rdx
  405266:	call   40431e <mmk_init@@Base>
  40526b:	mov    edi,0x50
  405270:	call   405aa0 <mmk_malloc@@Base>
  405275:	mov    QWORD PTR [rbp-0x8],rax
  405279:	mov    rcx,QWORD PTR [rbp-0x28]
  40527d:	mov    rdx,QWORD PTR [rbp-0x20]
  405281:	mov    rsi,QWORD PTR [rbp-0x18]
  405285:	mov    rax,QWORD PTR [rbp-0x8]
  405289:	mov    rdi,rax
  40528c:	call   405005 <mmk_stub_create_static@@Base>
  405291:	mov    DWORD PTR [rbp-0xc],eax
  405294:	cmp    DWORD PTR [rbp-0xc],0x0
  405298:	jns    4052bb <mmk_stub_create@@Base+0x6d>
  40529a:	mov    rax,QWORD PTR [rbp-0x8]
  40529e:	mov    rdi,rax
  4052a1:	call   405ac0 <mmk_free@@Base>
  4052a6:	call   402060 <__errno_location@plt>
  4052ab:	mov    rdx,rax
  4052ae:	mov    eax,DWORD PTR [rbp-0xc]
  4052b1:	mov    DWORD PTR [rdx],eax
  4052b3:	mov    QWORD PTR [rbp-0x8],0x0
  4052bb:	mov    rax,QWORD PTR [rbp-0x8]
  4052bf:	leave  
  4052c0:	ret    

00000000004052c1 <mmk_stub_destroy_static@@Base>:
  4052c1:	endbr64 
  4052c5:	push   rbp
  4052c6:	mov    rbp,rsp
  4052c9:	sub    rsp,0x10
  4052cd:	mov    QWORD PTR [rbp-0x8],rdi
  4052d1:	mov    rax,QWORD PTR [rbp-0x8]
  4052d5:	mov    rdx,QWORD PTR [rax+0x38]
  4052d9:	mov    rax,QWORD PTR [rbp-0x8]
  4052dd:	mov    rax,QWORD PTR [rax+0x30]
  4052e1:	mov    rsi,rdx
  4052e4:	mov    rdi,rax
  4052e7:	call   404f60 <plt_reset_offsets@@Base>
  4052ec:	mov    rax,QWORD PTR [rbp-0x8]
  4052f0:	mov    rax,QWORD PTR [rax+0x30]
  4052f4:	mov    rdi,rax
  4052f7:	call   405ac0 <mmk_free@@Base>
  4052fc:	mov    rax,QWORD PTR [rbp-0x8]
  405300:	mov    rax,QWORD PTR [rax+0x40]
  405304:	mov    rdi,rax
  405307:	call   4054e0 <destroy_trampoline@@Base>
  40530c:	mov    rax,QWORD PTR [rbp-0x8]
  405310:	mov    rax,QWORD PTR [rax+0x20]
  405314:	mov    rdi,rax
  405317:	call   405ac0 <mmk_free@@Base>
  40531c:	nop
  40531d:	leave  
  40531e:	ret    

000000000040531f <mmk_stub_destroy@@Base>:
  40531f:	endbr64 
  405323:	push   rbp
  405324:	mov    rbp,rsp
  405327:	sub    rsp,0x10
  40532b:	mov    QWORD PTR [rbp-0x8],rdi
  40532f:	mov    rax,QWORD PTR [rbp-0x8]
  405333:	mov    rdi,rax
  405336:	call   4052c1 <mmk_stub_destroy_static@@Base>
  40533b:	mov    rax,QWORD PTR [rbp-0x8]
  40533f:	mov    rdi,rax
  405342:	call   405ac0 <mmk_free@@Base>
  405347:	nop
  405348:	leave  
  405349:	ret    

000000000040534a <mmk_ask_ctx@@Base>:
  40534a:	endbr64 
  40534e:	push   rbp
  40534f:	mov    rbp,rsp
  405352:	sub    rsp,0x10
  405356:	mov    QWORD PTR [rbp-0x8],rdi
  40535a:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  405366:	add    rax,0xffffffffffffffe0
  40536c:	mov    DWORD PTR [rax],0x1
  405372:	mov    rax,QWORD PTR [rbp-0x8]
  405376:	call   rax
  405378:	leave  
  405379:	ret    

000000000040537a <mmk_ctx_asked@@Base>:
  40537a:	endbr64 
  40537e:	push   rbp
  40537f:	mov    rbp,rsp
  405382:	sub    rsp,0x10
  405386:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  405392:	add    rax,0xffffffffffffffe0
  405398:	mov    eax,DWORD PTR [rax]
  40539a:	mov    DWORD PTR [rbp-0x4],eax
  40539d:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4053a9:	add    rax,0xffffffffffffffe0
  4053af:	mov    DWORD PTR [rax],0x0
  4053b5:	mov    eax,DWORD PTR [rbp-0x4]
  4053b8:	leave  
  4053b9:	ret    

00000000004053ba <mmk_ctx@@Base>:
  4053ba:	endbr64 
  4053be:	push   rbp
  4053bf:	mov    rbp,rsp
  4053c2:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4053ce:	add    rax,0xffffffffffffffe8
  4053d4:	mov    rax,QWORD PTR [rax]
  4053d7:	pop    rbp
  4053d8:	ret    

00000000004053d9 <mmk_set_ctx@@Base>:
  4053d9:	endbr64 
  4053dd:	push   rbp
  4053de:	mov    rbp,rsp
  4053e1:	sub    rsp,0x10
  4053e5:	mov    QWORD PTR [rbp-0x8],rdi
  4053e9:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4053f5:	lea    rdx,[rax-0x18]
  4053fc:	mov    rax,QWORD PTR [rbp-0x8]
  405400:	mov    QWORD PTR [rdx],rax
  405403:	nop
  405404:	leave  
  405405:	ret    
  405406:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405410 <create_trampoline@@Base>:
  405410:	endbr64 
  405414:	push   r14
  405416:	push   r13
  405418:	push   r12
  40541a:	mov    r12,0x405c35
  405421:	push   rbp
  405422:	mov    rbp,0x405d08
  405429:	sub    rbp,r12
  40542c:	push   rbx
  40542d:	cmp    rbp,0xfff
  405434:	ja     40549b <create_trampoline@@Base+0x8b>
  405436:	mov    r14,rdi
  405439:	mov    r13,rsi
  40543c:	xor    r9d,r9d
  40543f:	mov    r8d,0xffffffff
  405445:	mov    ecx,0x22
  40544a:	mov    edx,0x7
  40544f:	mov    esi,0x1000
  405454:	xor    edi,edi
  405456:	call   402090 <mmap@plt>
  40545b:	mov    rbx,rax
  40545e:	cmp    rax,0xffffffffffffffff
  405462:	je     4054d1 <create_trampoline@@Base+0xc1>
  405464:	mov    QWORD PTR [rax],r14
  405467:	mov    QWORD PTR [rax+0x8],r13
  40546b:	lea    r13,[rax+0x10]
  40546f:	mov    rdx,rbp
  405472:	mov    rsi,r12
  405475:	mov    rdi,r13
  405478:	call   4020e0 <memcpy@plt>
  40547d:	mov    rdi,rbx
  405480:	mov    edx,0x5
  405485:	mov    esi,0x1000
  40548a:	call   402120 <mprotect@plt>
  40548f:	pop    rbx
  405490:	pop    rbp
  405491:	pop    r12
  405493:	mov    rax,r13
  405496:	pop    r13
  405498:	pop    r14
  40549a:	ret    
  40549b:	lea    r9,[rip+0x1069]        # 40650b <_IO_stdin_used@@Base+0x50b>
  4054a2:	mov    r8d,0x2d
  4054a8:	mov    rax,QWORD PTR [rip+0x3b49]        # 408ff8 <stderr@GLIBC_2.2.5>
  4054af:	lea    rcx,[rip+0x10a2]        # 406558 <_IO_stdin_used@@Base+0x558>
  4054b6:	mov    rdi,QWORD PTR [rax]
  4054b9:	lea    rdx,[rip+0x1065]        # 406525 <_IO_stdin_used@@Base+0x525>
  4054c0:	mov    esi,0x1
  4054c5:	xor    eax,eax
  4054c7:	call   402130 <__fprintf_chk@plt>
  4054cc:	call   402050 <abort@plt>
  4054d1:	lea    r9,[rip+0x106a]        # 406542 <_IO_stdin_used@@Base+0x542>
  4054d8:	mov    r8d,0x45
  4054de:	jmp    4054a8 <create_trampoline@@Base+0x98>

00000000004054e0 <destroy_trampoline@@Base>:
  4054e0:	endbr64 
  4054e4:	sub    rdi,0x10
  4054e8:	mov    esi,0x1000
  4054ed:	jmp    402110 <munmap@plt>

00000000004054f2 <mmk_verify_set_times@@Base>:
  4054f2:	endbr64 
  4054f6:	push   rbp
  4054f7:	mov    rbp,rsp
  4054fa:	sub    rsp,0x10
  4054fe:	mov    QWORD PTR [rbp-0x8],rdi
  405502:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  40550e:	lea    rdx,[rax-0x10]
  405515:	mov    rax,QWORD PTR [rbp-0x8]
  405519:	mov    QWORD PTR [rdx],rax
  40551c:	nop
  40551d:	leave  
  40551e:	ret    

000000000040551f <mmk_verify_times@@Base>:
  40551f:	endbr64 
  405523:	push   rbp
  405524:	mov    rbp,rsp
  405527:	sub    rsp,0x20
  40552b:	mov    QWORD PTR [rbp-0x18],rdi
  40552f:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  40553b:	add    rax,0xfffffffffffffff0
  405541:	mov    rax,QWORD PTR [rax]
  405544:	mov    QWORD PTR [rbp-0x10],rax
  405548:	mov    rax,QWORD PTR [rbp-0x18]
  40554c:	mov    eax,DWORD PTR [rax+0x4]
  40554f:	test   eax,eax
  405551:	je     405563 <mmk_verify_times@@Base+0x44>
  405553:	cmp    QWORD PTR [rbp-0x10],0x0
  405558:	sete   al
  40555b:	movzx  eax,al
  40555e:	jmp    4055f4 <mmk_verify_times@@Base+0xd5>
  405563:	mov    rax,QWORD PTR [rbp-0x18]
  405567:	mov    rax,QWORD PTR [rax+0x8]
  40556b:	test   rax,rax
  40556e:	jne    40557d <mmk_verify_times@@Base+0x5e>
  405570:	mov    rax,QWORD PTR [rbp-0x18]
  405574:	mov    rax,QWORD PTR [rax+0x10]
  405578:	test   rax,rax
  40557b:	je     4055c2 <mmk_verify_times@@Base+0xa3>
  40557d:	mov    rax,QWORD PTR [rbp-0x18]
  405581:	mov    rax,QWORD PTR [rax+0x10]
  405585:	test   rax,rax
  405588:	je     405594 <mmk_verify_times@@Base+0x75>
  40558a:	mov    rax,QWORD PTR [rbp-0x18]
  40558e:	mov    rax,QWORD PTR [rax+0x10]
  405592:	jmp    405598 <mmk_verify_times@@Base+0x79>
  405594:	mov    rax,QWORD PTR [rbp-0x10]
  405598:	mov    QWORD PTR [rbp-0x8],rax
  40559c:	mov    rax,QWORD PTR [rbp-0x18]
  4055a0:	mov    rax,QWORD PTR [rax+0x8]
  4055a4:	cmp    QWORD PTR [rbp-0x10],rax
  4055a8:	jb     4055bb <mmk_verify_times@@Base+0x9c>
  4055aa:	mov    rax,QWORD PTR [rbp-0x10]
  4055ae:	cmp    rax,QWORD PTR [rbp-0x8]
  4055b2:	ja     4055bb <mmk_verify_times@@Base+0x9c>
  4055b4:	mov    eax,0x1
  4055b9:	jmp    4055f4 <mmk_verify_times@@Base+0xd5>
  4055bb:	mov    eax,0x0
  4055c0:	jmp    4055f4 <mmk_verify_times@@Base+0xd5>
  4055c2:	mov    rax,QWORD PTR [rbp-0x18]
  4055c6:	mov    rax,QWORD PTR [rax+0x20]
  4055ca:	test   rax,rax
  4055cd:	je     4055e2 <mmk_verify_times@@Base+0xc3>
  4055cf:	mov    rax,QWORD PTR [rbp-0x18]
  4055d3:	mov    rax,QWORD PTR [rax+0x20]
  4055d7:	mov    rdx,QWORD PTR [rbp-0x10]
  4055db:	mov    rdi,rdx
  4055de:	call   rax
  4055e0:	jmp    4055f4 <mmk_verify_times@@Base+0xd5>
  4055e2:	mov    rax,QWORD PTR [rbp-0x18]
  4055e6:	mov    rax,QWORD PTR [rax+0x18]
  4055ea:	cmp    QWORD PTR [rbp-0x10],rax
  4055ee:	sete   al
  4055f1:	movzx  eax,al
  4055f4:	leave  
  4055f5:	ret    
  4055f6:	endbr64 
  4055fa:	push   rbp
  4055fb:	mov    rbp,rsp
  4055fe:	sub    rsp,0x40
  405602:	mov    QWORD PTR [rbp-0x28],rdi
  405606:	mov    QWORD PTR [rbp-0x30],rsi
  40560a:	mov    QWORD PTR [rbp-0x38],rdx
  40560e:	add    QWORD PTR [rbp-0x30],0x8
  405613:	sub    QWORD PTR [rbp-0x38],0x8
  405618:	mov    rax,QWORD PTR [rbp-0x28]
  40561c:	mov    rdi,rax
  40561f:	call   404865 <mmk_mock_params_begin@@Base>
  405624:	mov    QWORD PTR [rbp-0x10],rax
  405628:	jmp    405686 <mmk_verify_times@@Base+0x167>
  40562a:	mov    rax,QWORD PTR [rbp-0x10]
  40562e:	lea    rcx,[rax+0x8]
  405632:	mov    rdx,QWORD PTR [rbp-0x38]
  405636:	mov    rax,QWORD PTR [rbp-0x30]
  40563a:	mov    rsi,rax
  40563d:	mov    rdi,rcx
  405640:	call   4058c0 <mmk_memcmp@@Base>
  405645:	mov    DWORD PTR [rbp-0x14],eax
  405648:	cmp    DWORD PTR [rbp-0x14],0x0
  40564c:	jne    40566f <mmk_verify_times@@Base+0x150>
  40564e:	mov    rax,QWORD PTR [rbp-0x10]
  405652:	mov    QWORD PTR [rbp-0x8],rax
  405656:	mov    rax,QWORD PTR [rbp-0x8]
  40565a:	mov    rax,QWORD PTR [rax]
  40565d:	lea    rdx,[rax+0x1]
  405661:	mov    rax,QWORD PTR [rbp-0x8]
  405665:	mov    QWORD PTR [rax],rdx
  405668:	mov    eax,0x1
  40566d:	jmp    405692 <mmk_verify_times@@Base+0x173>
  40566f:	mov    rdx,QWORD PTR [rbp-0x10]
  405673:	mov    rax,QWORD PTR [rbp-0x28]
  405677:	mov    rsi,rdx
  40567a:	mov    rdi,rax
  40567d:	call   4048a0 <mmk_mock_params_next@@Base>
  405682:	mov    QWORD PTR [rbp-0x10],rax
  405686:	cmp    QWORD PTR [rbp-0x10],0x0
  40568b:	jne    40562a <mmk_verify_times@@Base+0x10b>
  40568d:	mov    eax,0x0
  405692:	leave  
  405693:	ret    

0000000000405694 <mmk_verify_register_call@@Base>:
  405694:	endbr64 
  405698:	push   rbp
  405699:	mov    rbp,rsp
  40569c:	sub    rsp,0x40
  4056a0:	mov    QWORD PTR [rbp-0x38],rdi
  4056a4:	mov    QWORD PTR [rbp-0x40],rsi
  4056a8:	call   4053ba <mmk_ctx@@Base>
  4056ad:	mov    rdi,rax
  4056b0:	call   404fe1 <mmk_stub_context@@Base>
  4056b5:	mov    QWORD PTR [rbp-0x30],rax
  4056b9:	mov    rax,QWORD PTR [rbp-0x30]
  4056bd:	mov    rax,QWORD PTR [rax+0x10]
  4056c1:	test   rax,rax
  4056c4:	jne    405740 <mmk_verify_register_call@@Base+0xac>
  4056c6:	mov    edi,0x1000
  4056cb:	call   405aa0 <mmk_malloc@@Base>
  4056d0:	mov    rdx,rax
  4056d3:	mov    rax,QWORD PTR [rbp-0x30]
  4056d7:	mov    QWORD PTR [rax+0x10],rdx
  4056db:	mov    rax,QWORD PTR [rbp-0x30]
  4056df:	mov    rax,QWORD PTR [rax+0x10]
  4056e3:	test   rax,rax
  4056e6:	jne    405734 <mmk_verify_register_call@@Base+0xa0>
  4056e8:	mov    rax,QWORD PTR [rip+0x3909]        # 408ff8 <stderr@GLIBC_2.2.5>
  4056ef:	mov    rax,QWORD PTR [rax]
  4056f2:	mov    QWORD PTR [rbp-0x20],rax
  4056f6:	lea    rax,[rip+0xeb3]        # 4065b0 <_IO_stdin_used@@Base+0x5b0>
  4056fd:	mov    QWORD PTR [rbp-0x18],rax
  405701:	mov    rdx,QWORD PTR [rbp-0x18]
  405705:	mov    rax,QWORD PTR [rbp-0x20]
  405709:	lea    r9,[rip+0xebd]        # 4065cd <_IO_stdin_used@@Base+0x5cd>
  405710:	mov    r8d,0x4f
  405716:	lea    rcx,[rip+0xec3]        # 4065e0 <_IO_stdin_used@@Base+0x5e0>
  40571d:	mov    esi,0x1
  405722:	mov    rdi,rax
  405725:	mov    eax,0x0
  40572a:	call   402130 <__fprintf_chk@plt>
  40572f:	call   402050 <abort@plt>
  405734:	mov    rax,QWORD PTR [rbp-0x30]
  405738:	mov    QWORD PTR [rax+0x20],0x1000
  405740:	mov    rdx,QWORD PTR [rbp-0x40]
  405744:	mov    rcx,QWORD PTR [rbp-0x38]
  405748:	mov    rax,QWORD PTR [rbp-0x30]
  40574c:	mov    rsi,rcx
  40574f:	mov    rdi,rax
  405752:	call   4055f6 <mmk_verify_times@@Base+0xd7>
  405757:	test   eax,eax
  405759:	jne    4058b9 <mmk_verify_register_call@@Base+0x225>
  40575f:	mov    rax,QWORD PTR [rbp-0x30]
  405763:	mov    rdx,QWORD PTR [rax+0x18]
  405767:	mov    rax,QWORD PTR [rbp-0x40]
  40576b:	add    rax,rdx
  40576e:	lea    rdx,[rax+0x8]
  405772:	mov    rax,QWORD PTR [rbp-0x30]
  405776:	mov    rax,QWORD PTR [rax+0x20]
  40577a:	cmp    rdx,rax
  40577d:	jb     40583b <mmk_verify_register_call@@Base+0x1a7>
  405783:	jmp    40579c <mmk_verify_register_call@@Base+0x108>
  405785:	mov    rax,QWORD PTR [rbp-0x30]
  405789:	mov    rax,QWORD PTR [rax+0x20]
  40578d:	lea    rdx,[rax+0x1000]
  405794:	mov    rax,QWORD PTR [rbp-0x30]
  405798:	mov    QWORD PTR [rax+0x20],rdx
  40579c:	mov    rax,QWORD PTR [rbp-0x30]
  4057a0:	mov    rdx,QWORD PTR [rax+0x18]
  4057a4:	mov    rax,QWORD PTR [rbp-0x40]
  4057a8:	add    rax,rdx
  4057ab:	lea    rdx,[rax+0x8]
  4057af:	mov    rax,QWORD PTR [rbp-0x30]
  4057b3:	mov    rax,QWORD PTR [rax+0x20]
  4057b7:	cmp    rdx,rax
  4057ba:	jae    405785 <mmk_verify_register_call@@Base+0xf1>
  4057bc:	mov    rax,QWORD PTR [rbp-0x30]
  4057c0:	mov    rdx,QWORD PTR [rax+0x20]
  4057c4:	mov    rax,QWORD PTR [rbp-0x30]
  4057c8:	mov    rax,QWORD PTR [rax+0x10]
  4057cc:	mov    rsi,rdx
  4057cf:	mov    rdi,rax
  4057d2:	call   405ab0 <mmk_realloc@@Base>
  4057d7:	mov    rdx,rax
  4057da:	mov    rax,QWORD PTR [rbp-0x30]
  4057de:	mov    QWORD PTR [rax+0x10],rdx
  4057e2:	mov    rax,QWORD PTR [rbp-0x30]
  4057e6:	mov    rax,QWORD PTR [rax+0x10]
  4057ea:	test   rax,rax
  4057ed:	jne    40583b <mmk_verify_register_call@@Base+0x1a7>
  4057ef:	mov    rax,QWORD PTR [rip+0x3802]        # 408ff8 <stderr@GLIBC_2.2.5>
  4057f6:	mov    rax,QWORD PTR [rax]
  4057f9:	mov    QWORD PTR [rbp-0x10],rax
  4057fd:	lea    rax,[rip+0xdac]        # 4065b0 <_IO_stdin_used@@Base+0x5b0>
  405804:	mov    QWORD PTR [rbp-0x8],rax
  405808:	mov    rdx,QWORD PTR [rbp-0x8]
  40580c:	mov    rax,QWORD PTR [rbp-0x10]
  405810:	lea    r9,[rip+0xdb6]        # 4065cd <_IO_stdin_used@@Base+0x5cd>
  405817:	mov    r8d,0x5b
  40581d:	lea    rcx,[rip+0xdbc]        # 4065e0 <_IO_stdin_used@@Base+0x5e0>
  405824:	mov    esi,0x1
  405829:	mov    rdi,rax
  40582c:	mov    eax,0x0
  405831:	call   402130 <__fprintf_chk@plt>
  405836:	call   402050 <abort@plt>
  40583b:	mov    rax,QWORD PTR [rbp-0x30]
  40583f:	mov    rdx,QWORD PTR [rax+0x10]
  405843:	mov    rax,QWORD PTR [rbp-0x30]
  405847:	mov    rax,QWORD PTR [rax+0x18]
  40584b:	lea    rcx,[rdx+rax*1]
  40584f:	lea    rax,[rbp-0x40]
  405853:	mov    edx,0x8
  405858:	mov    rsi,rax
  40585b:	mov    rdi,rcx
  40585e:	call   405910 <mmk_memcpy@@Base>
  405863:	mov    rdx,QWORD PTR [rbp-0x40]
  405867:	mov    rax,QWORD PTR [rbp-0x30]
  40586b:	mov    rcx,QWORD PTR [rax+0x10]
  40586f:	mov    rax,QWORD PTR [rbp-0x30]
  405873:	mov    rax,QWORD PTR [rax+0x18]
  405877:	add    rax,0x8
  40587b:	add    rcx,rax
  40587e:	mov    rax,QWORD PTR [rbp-0x38]
  405882:	mov    rsi,rax
  405885:	mov    rdi,rcx
  405888:	call   405910 <mmk_memcpy@@Base>
  40588d:	mov    QWORD PTR [rbp-0x28],rax
  405891:	mov    rax,QWORD PTR [rbp-0x28]
  405895:	mov    QWORD PTR [rax],0x1
  40589c:	mov    rax,QWORD PTR [rbp-0x30]
  4058a0:	mov    rdx,QWORD PTR [rax+0x18]
  4058a4:	mov    rax,QWORD PTR [rbp-0x40]
  4058a8:	add    rax,rdx
  4058ab:	lea    rdx,[rax+0x8]
  4058af:	mov    rax,QWORD PTR [rbp-0x30]
  4058b3:	mov    QWORD PTR [rax+0x18],rdx
  4058b7:	jmp    4058ba <mmk_verify_register_call@@Base+0x226>
  4058b9:	nop
  4058ba:	leave  
  4058bb:	ret    
  4058bc:	nop    DWORD PTR [rax+0x0]

00000000004058c0 <mmk_memcmp@@Base>:
  4058c0:	endbr64 
  4058c4:	test   rdx,rdx
  4058c7:	je     4058f7 <mmk_memcmp@@Base+0x37>
  4058c9:	movzx  ecx,BYTE PTR [rdi]
  4058cc:	movzx  r8d,BYTE PTR [rsi]
  4058d0:	cmp    cl,r8b
  4058d3:	jne    405900 <mmk_memcmp@@Base+0x40>
  4058d5:	mov    eax,0x1
  4058da:	jmp    4058f2 <mmk_memcmp@@Base+0x32>
  4058dc:	nop    DWORD PTR [rax+0x0]
  4058e0:	movzx  ecx,BYTE PTR [rdi+rax*1]
  4058e4:	inc    rax
  4058e7:	movzx  r8d,BYTE PTR [rsi+rax*1-0x1]
  4058ed:	cmp    cl,r8b
  4058f0:	jne    405900 <mmk_memcmp@@Base+0x40>
  4058f2:	cmp    rax,rdx
  4058f5:	jne    4058e0 <mmk_memcmp@@Base+0x20>
  4058f7:	xor    eax,eax
  4058f9:	ret    
  4058fa:	nop    WORD PTR [rax+rax*1+0x0]
  405900:	xor    eax,eax
  405902:	cmp    r8b,cl
  405905:	setle  al
  405908:	lea    eax,[rax+rax*1-0x1]
  40590c:	ret    
  40590d:	nop    DWORD PTR [rax]

0000000000405910 <mmk_memcpy@@Base>:
  405910:	endbr64 
  405914:	mov    rax,rdi
  405917:	test   rdx,rdx
  40591a:	je     405931 <mmk_memcpy@@Base+0x21>
  40591c:	xor    ecx,ecx
  40591e:	xchg   ax,ax
  405920:	movzx  r8d,BYTE PTR [rsi+rcx*1]
  405925:	mov    BYTE PTR [rax+rcx*1],r8b
  405929:	inc    rcx
  40592c:	cmp    rcx,rdx
  40592f:	jne    405920 <mmk_memcpy@@Base+0x10>
  405931:	ret    
  405932:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40593d:	nop    DWORD PTR [rax]

0000000000405940 <mmk_strneq@@Base>:
  405940:	endbr64 
  405944:	movzx  eax,BYTE PTR [rdi]
  405947:	test   al,al
  405949:	jne    405969 <mmk_strneq@@Base+0x29>
  40594b:	jmp    405970 <mmk_strneq@@Base+0x30>
  40594d:	nop    DWORD PTR [rax]
  405950:	test   rdx,rdx
  405953:	je     405990 <mmk_strneq@@Base+0x50>
  405955:	cmp    al,cl
  405957:	jne    405988 <mmk_strneq@@Base+0x48>
  405959:	inc    rdi
  40595c:	movzx  eax,BYTE PTR [rdi]
  40595f:	inc    rsi
  405962:	dec    rdx
  405965:	test   al,al
  405967:	je     405970 <mmk_strneq@@Base+0x30>
  405969:	movzx  ecx,BYTE PTR [rsi]
  40596c:	test   cl,cl
  40596e:	jne    405950 <mmk_strneq@@Base+0x10>
  405970:	mov    eax,0x1
  405975:	test   rdx,rdx
  405978:	je     40598a <mmk_strneq@@Base+0x4a>
  40597a:	xor    eax,eax
  40597c:	cmp    BYTE PTR [rsi],0x0
  40597f:	sete   al
  405982:	ret    
  405983:	nop    DWORD PTR [rax+rax*1+0x0]
  405988:	xor    eax,eax
  40598a:	ret    
  40598b:	nop    DWORD PTR [rax+rax*1+0x0]
  405990:	mov    eax,0x1
  405995:	ret    
  405996:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004059a0 <mmk_strchr@@Base>:
  4059a0:	endbr64 
  4059a4:	movsx  eax,BYTE PTR [rdi]
  4059a7:	test   al,al
  4059a9:	je     4059c6 <mmk_strchr@@Base+0x26>
  4059ab:	cmp    esi,eax
  4059ad:	jne    4059bc <mmk_strchr@@Base+0x1c>
  4059af:	jmp    4059d0 <mmk_strchr@@Base+0x30>
  4059b1:	nop    DWORD PTR [rax+0x0]
  4059b8:	cmp    edx,esi
  4059ba:	je     4059d0 <mmk_strchr@@Base+0x30>
  4059bc:	inc    rdi
  4059bf:	movsx  edx,BYTE PTR [rdi]
  4059c2:	test   dl,dl
  4059c4:	jne    4059b8 <mmk_strchr@@Base+0x18>
  4059c6:	xor    eax,eax
  4059c8:	ret    
  4059c9:	nop    DWORD PTR [rax+0x0]
  4059d0:	mov    rax,rdi
  4059d3:	ret    
  4059d4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4059df:	nop

00000000004059e0 <mmk_strcpy@@Base>:
  4059e0:	endbr64 
  4059e4:	movzx  edx,BYTE PTR [rsi]
  4059e7:	mov    rax,rdi
  4059ea:	test   dl,dl
  4059ec:	je     4059ff <mmk_strcpy@@Base+0x1f>
  4059ee:	xchg   ax,ax
  4059f0:	mov    BYTE PTR [rax],dl
  4059f2:	inc    rsi
  4059f5:	inc    rax
  4059f8:	movzx  edx,BYTE PTR [rsi]
  4059fb:	test   dl,dl
  4059fd:	jne    4059f0 <mmk_strcpy@@Base+0x10>
  4059ff:	mov    BYTE PTR [rax],0x0
  405a02:	ret    
  405a03:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405a0e:	xchg   ax,ax

0000000000405a10 <mmk_strncpy@@Base>:
  405a10:	endbr64 
  405a14:	movzx  ecx,BYTE PTR [rsi]
  405a17:	mov    rax,rdi
  405a1a:	test   rdx,rdx
  405a1d:	je     405a44 <mmk_strncpy@@Base+0x34>
  405a1f:	test   cl,cl
  405a21:	je     405a44 <mmk_strncpy@@Base+0x34>
  405a23:	add    rdx,rdi
  405a26:	jmp    405a34 <mmk_strncpy@@Base+0x24>
  405a28:	nop    DWORD PTR [rax+rax*1+0x0]
  405a30:	test   cl,cl
  405a32:	je     405a44 <mmk_strncpy@@Base+0x34>
  405a34:	mov    BYTE PTR [rax],cl
  405a36:	inc    rsi
  405a39:	inc    rax
  405a3c:	movzx  ecx,BYTE PTR [rsi]
  405a3f:	cmp    rax,rdx
  405a42:	jne    405a30 <mmk_strncpy@@Base+0x20>
  405a44:	mov    BYTE PTR [rax],0x0
  405a47:	ret    
  405a48:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405a50 <mmk_strlen@@Base>:
  405a50:	endbr64 
  405a54:	xor    eax,eax
  405a56:	cmp    BYTE PTR [rdi],0x0
  405a59:	je     405a70 <mmk_strlen@@Base+0x20>
  405a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  405a60:	inc    rax
  405a63:	cmp    BYTE PTR [rdi+rax*1],0x0
  405a67:	jne    405a60 <mmk_strlen@@Base+0x10>
  405a69:	ret    
  405a6a:	nop    WORD PTR [rax+rax*1+0x0]
  405a70:	ret    
  405a71:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405a7c:	nop    DWORD PTR [rax+0x0]

0000000000405a80 <mmk_isspace@@Base>:
  405a80:	endbr64 
  405a84:	xor    eax,eax
  405a86:	cmp    edi,0x20
  405a89:	ja     405a9d <mmk_isspace@@Base+0x1d>
  405a8b:	movabs rax,0x100002600
  405a95:	shrx   rax,rax,rdi
  405a9a:	and    eax,0x1
  405a9d:	ret    
  405a9e:	xchg   ax,ax

0000000000405aa0 <mmk_malloc@@Base>:
  405aa0:	endbr64 
  405aa4:	mov    rax,0x4090f0
  405aab:	jmp    QWORD PTR [rax]
  405aad:	nop    DWORD PTR [rax]

0000000000405ab0 <mmk_realloc@@Base>:
  405ab0:	endbr64 
  405ab4:	mov    rax,0x4090e0
  405abb:	jmp    QWORD PTR [rax]
  405abd:	nop    DWORD PTR [rax]

0000000000405ac0 <mmk_free@@Base>:
  405ac0:	endbr64 
  405ac4:	mov    rax,0x4090e8
  405acb:	jmp    QWORD PTR [rax]
  405acd:	nop    DWORD PTR [rax]

0000000000405ad0 <mmk_init_vital_functions@@Base>:
  405ad0:	endbr64 
  405ad4:	push   rbx
  405ad5:	mov    rbx,rdi
  405ad8:	xor    edi,edi
  405ada:	call   4020f0 <malloc@plt>
  405adf:	mov    rdi,rax
  405ae2:	xor    esi,esi
  405ae4:	call   402100 <realloc@plt>
  405ae9:	mov    rdi,rax
  405aec:	call   402040 <free@plt>
  405af1:	lea    rsi,[rip+0xb3c]        # 406634 <_IO_stdin_used@@Base+0x634>
  405af8:	mov    rdi,rbx
  405afb:	call   404f90 <plt_get_real_fn@@Base>
  405b00:	mov    rdx,0x4090f0
  405b07:	mov    QWORD PTR [rdx],rax
  405b0a:	test   rax,rax
  405b0d:	je     405b4d <mmk_init_vital_functions@@Base+0x7d>
  405b0f:	lea    rsi,[rip+0xb25]        # 40663b <_IO_stdin_used@@Base+0x63b>
  405b16:	mov    rdi,rbx
  405b19:	call   404f90 <plt_get_real_fn@@Base>
  405b1e:	mov    rdx,0x4090e0
  405b25:	mov    QWORD PTR [rdx],rax
  405b28:	test   rax,rax
  405b2b:	je     405b92 <mmk_init_vital_functions@@Base+0xc2>
  405b2d:	lea    rsi,[rip+0xb0f]        # 406643 <_IO_stdin_used@@Base+0x643>
  405b34:	mov    rdi,rbx
  405b37:	call   404f90 <plt_get_real_fn@@Base>
  405b3c:	mov    rdx,0x4090e8
  405b43:	mov    QWORD PTR [rdx],rax
  405b46:	test   rax,rax
  405b49:	je     405b83 <mmk_init_vital_functions@@Base+0xb3>
  405b4b:	pop    rbx
  405b4c:	ret    
  405b4d:	lea    r9,[rip+0xaf4]        # 406648 <_IO_stdin_used@@Base+0x648>
  405b54:	mov    r8d,0x58
  405b5a:	mov    rax,QWORD PTR [rip+0x3497]        # 408ff8 <stderr@GLIBC_2.2.5>
  405b61:	lea    rcx,[rip+0xb18]        # 406680 <_IO_stdin_used@@Base+0x680>
  405b68:	mov    rdi,QWORD PTR [rax]
  405b6b:	lea    rdx,[rip+0x9b3]        # 406525 <_IO_stdin_used@@Base+0x525>
  405b72:	mov    esi,0x1
  405b77:	xor    eax,eax
  405b79:	call   402130 <__fprintf_chk@plt>
  405b7e:	call   402050 <abort@plt>
  405b83:	lea    r9,[rip+0xb86]        # 406710 <_IO_stdin_used@@Base+0x710>
  405b8a:	mov    r8d,0x5a
  405b90:	jmp    405b5a <mmk_init_vital_functions@@Base+0x8a>
  405b92:	lea    r9,[rip+0xb3f]        # 4066d8 <_IO_stdin_used@@Base+0x6d8>
  405b99:	mov    r8d,0x59
  405b9f:	jmp    405b5a <mmk_init_vital_functions@@Base+0x8a>

0000000000405ba1 <mmk_when_init@@Base>:
  405ba1:	endbr64 
  405ba5:	push   rbp
  405ba6:	mov    rbp,rsp
  405ba9:	sub    rsp,0x10
  405bad:	mov    QWORD PTR [rbp-0x8],rdi
  405bb1:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  405bbd:	lea    rdx,[rax-0x8]
  405bc4:	mov    rax,QWORD PTR [rbp-0x8]
  405bc8:	mov    QWORD PTR [rdx],rax
  405bcb:	nop
  405bcc:	leave  
  405bcd:	ret    

0000000000405bce <mmk_when_get_result@@Base>:
  405bce:	endbr64 
  405bd2:	push   rbp
  405bd3:	mov    rbp,rsp
  405bd6:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  405be2:	add    rax,0xfffffffffffffff8
  405be8:	mov    rax,QWORD PTR [rax]
  405beb:	pop    rbp
  405bec:	ret    

0000000000405bed <mmk_when_impl@@Base>:
  405bed:	endbr64 
  405bf1:	push   rbp
  405bf2:	mov    rbp,rsp
  405bf5:	sub    rsp,0x20
  405bf9:	mov    QWORD PTR [rbp-0x18],rdi
  405bfd:	mov    QWORD PTR [rbp-0x20],rsi
  405c01:	mov    rax,QWORD PTR [rbp-0x20]
  405c05:	mov    QWORD PTR [rbp-0x8],rax
  405c09:	call   4044f0 <mmk_matcher_ctx@@Base>
  405c0e:	mov    rdx,rax
  405c11:	mov    rax,QWORD PTR [rbp-0x8]
  405c15:	mov    QWORD PTR [rax],rdx
  405c18:	mov    rax,QWORD PTR [rbp-0x18]
  405c1c:	mov    rdx,QWORD PTR [rax]
  405c1f:	mov    rax,QWORD PTR [rbp-0x8]
  405c23:	mov    QWORD PTR [rax+0x8],rdx
  405c27:	mov    rax,QWORD PTR [rbp-0x18]
  405c2b:	mov    rdx,QWORD PTR [rbp-0x8]
  405c2f:	mov    QWORD PTR [rax],rdx
  405c32:	nop
  405c33:	leave  
  405c34:	ret    

0000000000405c35 <mmk_trampoline@@Base>:
  405c35:	call   405c3a <mmk_trampoline@@Base+0x5>
  405c3a:	pop    rax
  405c3b:	push   rax
  405c3c:	mov    rax,QWORD PTR [rax-0x15]
  405c40:	push   rdi
  405c41:	push   rsi
  405c42:	push   rdx
  405c43:	push   rcx
  405c44:	push   r8
  405c46:	push   r9
  405c48:	sub    rsp,0x10
  405c4c:	movdqu XMMWORD PTR [rsp],xmm0
  405c51:	sub    rsp,0x10
  405c55:	movdqu XMMWORD PTR [rsp],xmm1
  405c5a:	sub    rsp,0x10
  405c5e:	movdqu XMMWORD PTR [rsp],xmm2
  405c63:	sub    rsp,0x10
  405c67:	movdqu XMMWORD PTR [rsp],xmm3
  405c6c:	sub    rsp,0x10
  405c70:	movdqu XMMWORD PTR [rsp],xmm4
  405c75:	sub    rsp,0x10
  405c79:	movdqu XMMWORD PTR [rsp],xmm5
  405c7e:	sub    rsp,0x10
  405c82:	movdqu XMMWORD PTR [rsp],xmm6
  405c87:	sub    rsp,0x10
  405c8b:	movdqu XMMWORD PTR [rsp],xmm7
  405c90:	mov    rdi,rax
  405c93:	push   rax
  405c94:	mov    rax,QWORD PTR [rax+0x8]
  405c98:	call   rax
  405c9a:	pop    rax
  405c9b:	mov    rax,QWORD PTR [rax]
  405c9e:	call   rax
  405ca0:	movdqu xmm7,XMMWORD PTR [rsp]
  405ca5:	add    rsp,0x10
  405ca9:	movdqu xmm6,XMMWORD PTR [rsp]
  405cae:	add    rsp,0x10
  405cb2:	movdqu xmm5,XMMWORD PTR [rsp]
  405cb7:	add    rsp,0x10
  405cbb:	movdqu xmm4,XMMWORD PTR [rsp]
  405cc0:	add    rsp,0x10
  405cc4:	movdqu xmm3,XMMWORD PTR [rsp]
  405cc9:	add    rsp,0x10
  405ccd:	movdqu xmm2,XMMWORD PTR [rsp]
  405cd2:	add    rsp,0x10
  405cd6:	movdqu xmm1,XMMWORD PTR [rsp]
  405cdb:	add    rsp,0x10
  405cdf:	movdqu xmm0,XMMWORD PTR [rsp]
  405ce4:	add    rsp,0x10
  405ce8:	pop    r9
  405cea:	pop    r8
  405cec:	pop    rcx
  405ced:	pop    rdx
  405cee:	pop    rsi
  405cef:	pop    rdi
  405cf0:	test   rax,rax
  405cf3:	jne    405cfc <mmk_trampoline@@Base+0xc7>
  405cf5:	pop    rax
  405cf6:	mov    rax,QWORD PTR [rax-0xd]
  405cfa:	jmp    rax
  405cfc:	pop    rax
  405cfd:	mov    rax,QWORD PTR [rax-0x15]
  405d01:	mov    rax,QWORD PTR [rax+0x10]
  405d05:	call   rax
  405d07:	ret    

0000000000405d08 <mmk_trampoline_end@@Base>:
  405d08:	nop
  405d09:	nop    DWORD PTR [rax+0x0]

0000000000405d10 <__libc_csu_init@@Base>:
  405d10:	endbr64 
  405d14:	push   r15
  405d16:	lea    r15,[rip+0x309b]        # 408db8 <_IO_stdin_used@@Base+0x2db8>
  405d1d:	push   r14
  405d1f:	mov    r14,rdx
  405d22:	push   r13
  405d24:	mov    r13,rsi
  405d27:	push   r12
  405d29:	mov    r12d,edi
  405d2c:	push   rbp
  405d2d:	lea    rbp,[rip+0x308c]        # 408dc0 <_IO_stdin_used@@Base+0x2dc0>
  405d34:	push   rbx
  405d35:	sub    rbp,r15
  405d38:	sub    rsp,0x8
  405d3c:	call   402000 <__snprintf_chk@plt-0x30>
  405d41:	sar    rbp,0x3
  405d45:	je     405d66 <__libc_csu_init@@Base+0x56>
  405d47:	xor    ebx,ebx
  405d49:	nop    DWORD PTR [rax+0x0]
  405d50:	mov    rdx,r14
  405d53:	mov    rsi,r13
  405d56:	mov    edi,r12d
  405d59:	call   QWORD PTR [r15+rbx*8]
  405d5d:	add    rbx,0x1
  405d61:	cmp    rbp,rbx
  405d64:	jne    405d50 <__libc_csu_init@@Base+0x40>
  405d66:	add    rsp,0x8
  405d6a:	pop    rbx
  405d6b:	pop    rbp
  405d6c:	pop    r12
  405d6e:	pop    r13
  405d70:	pop    r14
  405d72:	pop    r15
  405d74:	ret    
  405d75:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000405d80 <__libc_csu_fini@@Base>:
  405d80:	endbr64 
  405d84:	ret    

Disassembly of section .fini:

0000000000405d88 <.fini>:
  405d88:	endbr64 
  405d8c:	sub    rsp,0x8
  405d90:	add    rsp,0x8
  405d94:	ret    
