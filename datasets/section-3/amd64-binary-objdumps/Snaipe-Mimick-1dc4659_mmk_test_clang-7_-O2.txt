
../repos/Snaipe-Mimick-1dc4659/test/mmk_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x6fe1]        # 408ff0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <free@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <free@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x6fe2]        # 409008 <_IO_stdin_used@@Base+0x3008>
  402026:	jmp    QWORD PTR [rip+0x6fe4]        # 409010 <_IO_stdin_used@@Base+0x3010>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <free@plt>:
  402030:	jmp    QWORD PTR [rip+0x6fe2]        # 409018 <free@GLIBC_2.2.5>
  402036:	push   0x0
  40203b:	jmp    402020 <free@plt-0x10>

0000000000402040 <abort@plt>:
  402040:	jmp    QWORD PTR [rip+0x6fda]        # 409020 <abort@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <free@plt-0x10>

0000000000402050 <__errno_location@plt>:
  402050:	jmp    QWORD PTR [rip+0x6fd2]        # 409028 <__errno_location@GLIBC_2.2.5>
  402056:	push   0x2
  40205b:	jmp    402020 <free@plt-0x10>

0000000000402060 <strncmp@plt>:
  402060:	jmp    QWORD PTR [rip+0x6fca]        # 409030 <strncmp@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <free@plt-0x10>

0000000000402070 <strlen@plt>:
  402070:	jmp    QWORD PTR [rip+0x6fc2]        # 409038 <strlen@GLIBC_2.2.5>
  402076:	push   0x4
  40207b:	jmp    402020 <free@plt-0x10>

0000000000402080 <mmap@plt>:
  402080:	jmp    QWORD PTR [rip+0x6fba]        # 409040 <mmap@GLIBC_2.2.5>
  402086:	push   0x5
  40208b:	jmp    402020 <free@plt-0x10>

0000000000402090 <strchr@plt>:
  402090:	jmp    QWORD PTR [rip+0x6fb2]        # 409048 <strchr@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <free@plt-0x10>

00000000004020a0 <snprintf@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x6faa]        # 409050 <snprintf@GLIBC_2.2.5>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <free@plt-0x10>

00000000004020b0 <memset@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x6fa2]        # 409058 <memset@GLIBC_2.2.5>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <free@plt-0x10>

00000000004020c0 <__tls_get_addr@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x6f9a]        # 409060 <__tls_get_addr@GLIBC_2.3>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <free@plt-0x10>

00000000004020d0 <strcmp@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x6f92]        # 409068 <strcmp@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <free@plt-0x10>

00000000004020e0 <fprintf@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x6f8a]        # 409070 <fprintf@GLIBC_2.2.5>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <free@plt-0x10>

00000000004020f0 <memcpy@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x6f82]        # 409078 <memcpy@GLIBC_2.14>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <free@plt-0x10>

0000000000402100 <malloc@plt>:
  402100:	jmp    QWORD PTR [rip+0x6f7a]        # 409080 <malloc@GLIBC_2.2.5>
  402106:	push   0xd
  40210b:	jmp    402020 <free@plt-0x10>

0000000000402110 <realloc@plt>:
  402110:	jmp    QWORD PTR [rip+0x6f72]        # 409088 <realloc@GLIBC_2.2.5>
  402116:	push   0xe
  40211b:	jmp    402020 <free@plt-0x10>

0000000000402120 <munmap@plt>:
  402120:	jmp    QWORD PTR [rip+0x6f6a]        # 409090 <munmap@GLIBC_2.2.5>
  402126:	push   0xf
  40212b:	jmp    402020 <free@plt-0x10>

0000000000402130 <mprotect@plt>:
  402130:	jmp    QWORD PTR [rip+0x6f62]        # 409098 <mprotect@GLIBC_2.2.5>
  402136:	push   0x10
  40213b:	jmp    402020 <free@plt-0x10>

0000000000402140 <strstr@plt>:
  402140:	jmp    QWORD PTR [rip+0x6f5a]        # 4090a0 <strstr@GLIBC_2.2.5>
  402146:	push   0x11
  40214b:	jmp    402020 <free@plt-0x10>

Disassembly of section .plt.got:

0000000000402150 <fn_vv@plt>:
  402150:	jmp    QWORD PTR [rip+0x6e72]        # 408fc8 <fn_vv>
  402156:	xchg   ax,ax

0000000000402158 <fn_ii@plt>:
  402158:	jmp    QWORD PTR [rip+0x6e72]        # 408fd0 <fn_ii>
  40215e:	xchg   ax,ax

0000000000402160 <fn_ii_va@plt>:
  402160:	jmp    QWORD PTR [rip+0x6e72]        # 408fd8 <fn_ii_va>
  402166:	xchg   ax,ax

Disassembly of section .text:

0000000000402170 <_start@@Base>:
  402170:	endbr64 
  402174:	xor    ebp,ebp
  402176:	mov    r9,rdx
  402179:	pop    rsi
  40217a:	mov    rdx,rsp
  40217d:	and    rsp,0xfffffffffffffff0
  402181:	push   rax
  402182:	push   rsp
  402183:	mov    r8,0x405f00
  40218a:	mov    rcx,0x405e90
  402191:	mov    rdi,0x402270
  402198:	call   QWORD PTR [rip+0x6e4a]        # 408fe8 <__libc_start_main@GLIBC_2.2.5>
  40219e:	hlt    
  40219f:	nop
  4021a0:	endbr64 
  4021a4:	ret    
  4021a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021af:	nop
  4021b0:	mov    eax,0x4090c0
  4021b5:	cmp    rax,0x4090c0
  4021bb:	je     4021d0 <_start@@Base+0x60>
  4021bd:	mov    eax,0x0
  4021c2:	test   rax,rax
  4021c5:	je     4021d0 <_start@@Base+0x60>
  4021c7:	mov    edi,0x4090c0
  4021cc:	jmp    rax
  4021ce:	xchg   ax,ax
  4021d0:	ret    
  4021d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021dc:	nop    DWORD PTR [rax+0x0]
  4021e0:	mov    esi,0x4090c0
  4021e5:	sub    rsi,0x4090c0
  4021ec:	mov    rax,rsi
  4021ef:	shr    rsi,0x3f
  4021f3:	sar    rax,0x3
  4021f7:	add    rsi,rax
  4021fa:	sar    rsi,1
  4021fd:	je     402210 <_start@@Base+0xa0>
  4021ff:	mov    eax,0x0
  402204:	test   rax,rax
  402207:	je     402210 <_start@@Base+0xa0>
  402209:	mov    edi,0x4090c0
  40220e:	jmp    rax
  402210:	ret    
  402211:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40221c:	nop    DWORD PTR [rax+0x0]
  402220:	endbr64 
  402224:	cmp    BYTE PTR [rip+0x6e95],0x0        # 4090c0 <__bss_start@@Base>
  40222b:	jne    402240 <_start@@Base+0xd0>
  40222d:	push   rbp
  40222e:	mov    rbp,rsp
  402231:	call   4021b0 <_start@@Base+0x40>
  402236:	mov    BYTE PTR [rip+0x6e83],0x1        # 4090c0 <__bss_start@@Base>
  40223d:	pop    rbp
  40223e:	ret    
  40223f:	nop
  402240:	ret    
  402241:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40224c:	nop    DWORD PTR [rax+0x0]
  402250:	endbr64 
  402254:	jmp    4021e0 <_start@@Base+0x70>
  402256:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402260 <set_valid@@Base>:
  402260:	push   rbp
  402261:	mov    rbp,rsp
  402264:	mov    DWORD PTR [rip+0x6e56],0x1        # 4090c4 <__bss_start@@Base+0x4>
  40226e:	pop    rbp
  40226f:	ret    

0000000000402270 <main@@Base>:
  402270:	push   rbp
  402271:	mov    rbp,rsp
  402274:	sub    rsp,0x3c0
  40227b:	mov    DWORD PTR [rbp-0x4],0x0
  402282:	lea    rdi,[rip+0x3d7b]        # 406004 <_IO_stdin_used@@Base+0x4>
  402289:	call   403010 <main@@Base+0xda0>
  40228e:	xor    edi,edi
  402290:	mov    QWORD PTR [rbp-0x308],rax
  402297:	call   4047c0 <mmk_matcher_init@@Base>
  40229c:	lea    rax,[rip+0xffffffffffffffbd]        # 402260 <set_valid@@Base>
  4022a3:	xor    esi,esi
  4022a5:	mov    edi,0x20
  4022aa:	mov    edx,edi
  4022ac:	lea    rcx,[rbp-0x28]
  4022b0:	mov    r8,rcx
  4022b3:	mov    rdi,r8
  4022b6:	mov    QWORD PTR [rbp-0x310],rax
  4022bd:	mov    QWORD PTR [rbp-0x318],rcx
  4022c4:	call   4020b0 <memset@plt>
  4022c9:	mov    rax,QWORD PTR [rbp-0x310]
  4022d0:	mov    QWORD PTR [rbp-0x18],rax
  4022d4:	mov    rdi,QWORD PTR [rbp-0x318]
  4022db:	call   405d40 <mmk_when_init@@Base>
  4022e0:	call   402150 <fn_vv@plt>
  4022e5:	call   404800 <mmk_matcher_term@@Base>
  4022ea:	mov    edi,0x1
  4022ef:	call   4047c0 <mmk_matcher_init@@Base>
  4022f4:	call   402150 <fn_vv@plt>
  4022f9:	call   404800 <mmk_matcher_term@@Base>
  4022fe:	xor    esi,esi
  402300:	mov    edi,0x28
  402305:	mov    edx,edi
  402307:	lea    rax,[rbp-0x50]
  40230b:	mov    rcx,rax
  40230e:	mov    rdi,rcx
  402311:	mov    QWORD PTR [rbp-0x320],rax
  402318:	call   4020b0 <memset@plt>
  40231d:	mov    DWORD PTR [rbp-0x50],0x1
  402324:	mov    DWORD PTR [rbp-0x4c],0x1
  40232b:	mov    rdi,QWORD PTR [rbp-0x320]
  402332:	call   4055a0 <mmk_verify_times@@Base>
  402337:	cmp    eax,0x0
  40233a:	jne    402376 <main@@Base+0x106>
  402340:	mov    rax,QWORD PTR [rip+0x6cb1]        # 408ff8 <stderr@GLIBC_2.2.5>
  402347:	mov    rdi,QWORD PTR [rax]
  40234a:	lea    rsi,[rip+0x3cb9]        # 40600a <_IO_stdin_used@@Base+0xa>
  402351:	lea    rdx,[rip+0x3ccf]        # 406027 <_IO_stdin_used@@Base+0x27>
  402358:	mov    ecx,0x2a
  40235d:	lea    r8,[rip+0x3db6]        # 40611a <_IO_stdin_used@@Base+0x11a>
  402364:	mov    al,0x0
  402366:	call   4020e0 <fprintf@plt>
  40236b:	mov    DWORD PTR [rbp-0x324],eax
  402371:	call   402040 <abort@plt>
  402376:	jmp    40237b <main@@Base+0x10b>
  40237b:	jmp    402380 <main@@Base+0x110>
  402380:	mov    edi,0x1
  402385:	call   4047c0 <mmk_matcher_init@@Base>
  40238a:	call   402150 <fn_vv@plt>
  40238f:	call   404800 <mmk_matcher_term@@Base>
  402394:	mov    DWORD PTR [rbp-0x78],0x1
  40239b:	mov    DWORD PTR [rbp-0x74],0x0
  4023a2:	mov    QWORD PTR [rbp-0x70],0x0
  4023aa:	mov    QWORD PTR [rbp-0x68],0x1
  4023b2:	mov    QWORD PTR [rbp-0x60],0x0
  4023ba:	mov    QWORD PTR [rbp-0x58],0x0
  4023c2:	lea    rdi,[rbp-0x78]
  4023c6:	call   4055a0 <mmk_verify_times@@Base>
  4023cb:	cmp    eax,0x0
  4023ce:	jne    40240a <main@@Base+0x19a>
  4023d4:	mov    rax,QWORD PTR [rip+0x6c1d]        # 408ff8 <stderr@GLIBC_2.2.5>
  4023db:	mov    rdi,QWORD PTR [rax]
  4023de:	lea    rsi,[rip+0x3c25]        # 40600a <_IO_stdin_used@@Base+0xa>
  4023e5:	lea    rdx,[rip+0x3c3b]        # 406027 <_IO_stdin_used@@Base+0x27>
  4023ec:	mov    ecx,0x2b
  4023f1:	lea    r8,[rip+0x3c82]        # 40607a <_IO_stdin_used@@Base+0x7a>
  4023f8:	mov    al,0x0
  4023fa:	call   4020e0 <fprintf@plt>
  4023ff:	mov    DWORD PTR [rbp-0x328],eax
  402405:	call   402040 <abort@plt>
  40240a:	jmp    40240f <main@@Base+0x19f>
  40240f:	jmp    402414 <main@@Base+0x1a4>
  402414:	mov    edi,0x1
  402419:	call   4047c0 <mmk_matcher_init@@Base>
  40241e:	call   402150 <fn_vv@plt>
  402423:	call   404800 <mmk_matcher_term@@Base>
  402428:	mov    DWORD PTR [rbp-0xa0],0x1
  402432:	mov    DWORD PTR [rbp-0x9c],0x0
  40243c:	mov    QWORD PTR [rbp-0x98],0x0
  402447:	mov    QWORD PTR [rbp-0x90],0x0
  402452:	mov    QWORD PTR [rbp-0x88],0x1
  40245d:	mov    QWORD PTR [rbp-0x80],0x0
  402465:	lea    rdi,[rbp-0xa0]
  40246c:	call   4055a0 <mmk_verify_times@@Base>
  402471:	cmp    eax,0x0
  402474:	je     4024b0 <main@@Base+0x240>
  40247a:	mov    rax,QWORD PTR [rip+0x6b77]        # 408ff8 <stderr@GLIBC_2.2.5>
  402481:	mov    rdi,QWORD PTR [rax]
  402484:	lea    rsi,[rip+0x3b7f]        # 40600a <_IO_stdin_used@@Base+0xa>
  40248b:	lea    rdx,[rip+0x3b95]        # 406027 <_IO_stdin_used@@Base+0x27>
  402492:	mov    ecx,0x2d
  402497:	lea    r8,[rip+0x3bfe]        # 40609c <_IO_stdin_used@@Base+0x9c>
  40249e:	mov    al,0x0
  4024a0:	call   4020e0 <fprintf@plt>
  4024a5:	mov    DWORD PTR [rbp-0x32c],eax
  4024ab:	call   402040 <abort@plt>
  4024b0:	jmp    4024b5 <main@@Base+0x245>
  4024b5:	jmp    4024ba <main@@Base+0x24a>
  4024ba:	mov    edi,0x1
  4024bf:	call   4047c0 <mmk_matcher_init@@Base>
  4024c4:	call   402150 <fn_vv@plt>
  4024c9:	call   404800 <mmk_matcher_term@@Base>
  4024ce:	mov    DWORD PTR [rbp-0xc8],0x1
  4024d8:	mov    DWORD PTR [rbp-0xc4],0x0
  4024e2:	mov    QWORD PTR [rbp-0xc0],0x1
  4024ed:	mov    QWORD PTR [rbp-0xb8],0x0
  4024f8:	mov    QWORD PTR [rbp-0xb0],0x0
  402503:	mov    QWORD PTR [rbp-0xa8],0x0
  40250e:	lea    rdi,[rbp-0xc8]
  402515:	call   4055a0 <mmk_verify_times@@Base>
  40251a:	cmp    eax,0x0
  40251d:	je     402559 <main@@Base+0x2e9>
  402523:	mov    rax,QWORD PTR [rip+0x6ace]        # 408ff8 <stderr@GLIBC_2.2.5>
  40252a:	mov    rdi,QWORD PTR [rax]
  40252d:	lea    rsi,[rip+0x3ad6]        # 40600a <_IO_stdin_used@@Base+0xa>
  402534:	lea    rdx,[rip+0x3aec]        # 406027 <_IO_stdin_used@@Base+0x27>
  40253b:	mov    ecx,0x2e
  402540:	lea    r8,[rip+0x3b76]        # 4060bd <_IO_stdin_used@@Base+0xbd>
  402547:	mov    al,0x0
  402549:	call   4020e0 <fprintf@plt>
  40254e:	mov    DWORD PTR [rbp-0x330],eax
  402554:	call   402040 <abort@plt>
  402559:	jmp    40255e <main@@Base+0x2ee>
  40255e:	jmp    402563 <main@@Base+0x2f3>
  402563:	mov    edi,0x1
  402568:	call   4047c0 <mmk_matcher_init@@Base>
  40256d:	call   402150 <fn_vv@plt>
  402572:	call   404800 <mmk_matcher_term@@Base>
  402577:	mov    DWORD PTR [rbp-0xf0],0x1
  402581:	mov    DWORD PTR [rbp-0xec],0x0
  40258b:	mov    QWORD PTR [rbp-0xe8],0x1
  402596:	mov    QWORD PTR [rbp-0xe0],0x1
  4025a1:	mov    QWORD PTR [rbp-0xd8],0x0
  4025ac:	mov    QWORD PTR [rbp-0xd0],0x0
  4025b7:	lea    rdi,[rbp-0xf0]
  4025be:	call   4055a0 <mmk_verify_times@@Base>
  4025c3:	cmp    eax,0x0
  4025c6:	je     402602 <main@@Base+0x392>
  4025cc:	mov    rax,QWORD PTR [rip+0x6a25]        # 408ff8 <stderr@GLIBC_2.2.5>
  4025d3:	mov    rdi,QWORD PTR [rax]
  4025d6:	lea    rsi,[rip+0x3a2d]        # 40600a <_IO_stdin_used@@Base+0xa>
  4025dd:	lea    rdx,[rip+0x3a43]        # 406027 <_IO_stdin_used@@Base+0x27>
  4025e4:	mov    ecx,0x2f
  4025e9:	lea    r8,[rip+0x3af1]        # 4060e1 <_IO_stdin_used@@Base+0xe1>
  4025f0:	mov    al,0x0
  4025f2:	call   4020e0 <fprintf@plt>
  4025f7:	mov    DWORD PTR [rbp-0x334],eax
  4025fd:	call   402040 <abort@plt>
  402602:	jmp    402607 <main@@Base+0x397>
  402607:	call   402150 <fn_vv@plt>
  40260c:	cmp    DWORD PTR [rip+0x6ab1],0x0        # 4090c4 <__bss_start@@Base+0x4>
  402613:	jne    40264f <main@@Base+0x3df>
  402619:	mov    rax,QWORD PTR [rip+0x69d8]        # 408ff8 <stderr@GLIBC_2.2.5>
  402620:	mov    rdi,QWORD PTR [rax]
  402623:	lea    rsi,[rip+0x39e0]        # 40600a <_IO_stdin_used@@Base+0xa>
  40262a:	lea    rdx,[rip+0x39f6]        # 406027 <_IO_stdin_used@@Base+0x27>
  402631:	mov    ecx,0x32
  402636:	lea    r8,[rip+0x3ad6]        # 406113 <_IO_stdin_used@@Base+0x113>
  40263d:	mov    al,0x0
  40263f:	call   4020e0 <fprintf@plt>
  402644:	mov    DWORD PTR [rbp-0x338],eax
  40264a:	call   402040 <abort@plt>
  40264f:	jmp    402654 <main@@Base+0x3e4>
  402654:	jmp    402659 <main@@Base+0x3e9>
  402659:	mov    edi,0x1
  40265e:	call   4047c0 <mmk_matcher_init@@Base>
  402663:	call   402150 <fn_vv@plt>
  402668:	call   404800 <mmk_matcher_term@@Base>
  40266d:	mov    DWORD PTR [rbp-0x118],0x1
  402677:	mov    DWORD PTR [rbp-0x114],0x0
  402681:	mov    QWORD PTR [rbp-0x110],0x0
  40268c:	mov    QWORD PTR [rbp-0x108],0x0
  402697:	mov    QWORD PTR [rbp-0x100],0x1
  4026a2:	mov    QWORD PTR [rbp-0xf8],0x0
  4026ad:	lea    rdi,[rbp-0x118]
  4026b4:	call   4055a0 <mmk_verify_times@@Base>
  4026b9:	cmp    eax,0x0
  4026bc:	jne    4026f8 <main@@Base+0x488>
  4026c2:	mov    rax,QWORD PTR [rip+0x692f]        # 408ff8 <stderr@GLIBC_2.2.5>
  4026c9:	mov    rdi,QWORD PTR [rax]
  4026cc:	lea    rsi,[rip+0x3937]        # 40600a <_IO_stdin_used@@Base+0xa>
  4026d3:	lea    rdx,[rip+0x394d]        # 406027 <_IO_stdin_used@@Base+0x27>
  4026da:	mov    ecx,0x33
  4026df:	lea    r8,[rip+0x39b7]        # 40609d <_IO_stdin_used@@Base+0x9d>
  4026e6:	mov    al,0x0
  4026e8:	call   4020e0 <fprintf@plt>
  4026ed:	mov    DWORD PTR [rbp-0x33c],eax
  4026f3:	call   402040 <abort@plt>
  4026f8:	jmp    4026fd <main@@Base+0x48d>
  4026fd:	jmp    402702 <main@@Base+0x492>
  402702:	mov    edi,0x1
  402707:	call   4047c0 <mmk_matcher_init@@Base>
  40270c:	call   402150 <fn_vv@plt>
  402711:	call   404800 <mmk_matcher_term@@Base>
  402716:	mov    DWORD PTR [rbp-0x140],0x1
  402720:	mov    DWORD PTR [rbp-0x13c],0x0
  40272a:	mov    QWORD PTR [rbp-0x138],0x1
  402735:	mov    QWORD PTR [rbp-0x130],0x0
  402740:	mov    QWORD PTR [rbp-0x128],0x0
  40274b:	mov    QWORD PTR [rbp-0x120],0x0
  402756:	lea    rdi,[rbp-0x140]
  40275d:	call   4055a0 <mmk_verify_times@@Base>
  402762:	cmp    eax,0x0
  402765:	jne    4027a1 <main@@Base+0x531>
  40276b:	mov    rax,QWORD PTR [rip+0x6886]        # 408ff8 <stderr@GLIBC_2.2.5>
  402772:	mov    rdi,QWORD PTR [rax]
  402775:	lea    rsi,[rip+0x388e]        # 40600a <_IO_stdin_used@@Base+0xa>
  40277c:	lea    rdx,[rip+0x38a4]        # 406027 <_IO_stdin_used@@Base+0x27>
  402783:	mov    ecx,0x34
  402788:	lea    r8,[rip+0x392f]        # 4060be <_IO_stdin_used@@Base+0xbe>
  40278f:	mov    al,0x0
  402791:	call   4020e0 <fprintf@plt>
  402796:	mov    DWORD PTR [rbp-0x340],eax
  40279c:	call   402040 <abort@plt>
  4027a1:	jmp    4027a6 <main@@Base+0x536>
  4027a6:	jmp    4027ab <main@@Base+0x53b>
  4027ab:	mov    edi,0x1
  4027b0:	call   4047c0 <mmk_matcher_init@@Base>
  4027b5:	call   402150 <fn_vv@plt>
  4027ba:	call   404800 <mmk_matcher_term@@Base>
  4027bf:	mov    DWORD PTR [rbp-0x168],0x1
  4027c9:	mov    DWORD PTR [rbp-0x164],0x0
  4027d3:	mov    QWORD PTR [rbp-0x160],0x0
  4027de:	mov    QWORD PTR [rbp-0x158],0x1
  4027e9:	mov    QWORD PTR [rbp-0x150],0x0
  4027f4:	mov    QWORD PTR [rbp-0x148],0x0
  4027ff:	lea    rdi,[rbp-0x168]
  402806:	call   4055a0 <mmk_verify_times@@Base>
  40280b:	cmp    eax,0x0
  40280e:	jne    40284a <main@@Base+0x5da>
  402814:	mov    rax,QWORD PTR [rip+0x67dd]        # 408ff8 <stderr@GLIBC_2.2.5>
  40281b:	mov    rdi,QWORD PTR [rax]
  40281e:	lea    rsi,[rip+0x37e5]        # 40600a <_IO_stdin_used@@Base+0xa>
  402825:	lea    rdx,[rip+0x37fb]        # 406027 <_IO_stdin_used@@Base+0x27>
  40282c:	mov    ecx,0x35
  402831:	lea    r8,[rip+0x3842]        # 40607a <_IO_stdin_used@@Base+0x7a>
  402838:	mov    al,0x0
  40283a:	call   4020e0 <fprintf@plt>
  40283f:	mov    DWORD PTR [rbp-0x344],eax
  402845:	call   402040 <abort@plt>
  40284a:	jmp    40284f <main@@Base+0x5df>
  40284f:	jmp    402854 <main@@Base+0x5e4>
  402854:	mov    edi,0x1
  402859:	call   4047c0 <mmk_matcher_init@@Base>
  40285e:	call   402150 <fn_vv@plt>
  402863:	call   404800 <mmk_matcher_term@@Base>
  402868:	mov    DWORD PTR [rbp-0x190],0x1
  402872:	mov    DWORD PTR [rbp-0x18c],0x0
  40287c:	mov    QWORD PTR [rbp-0x188],0x1
  402887:	mov    QWORD PTR [rbp-0x180],0x1
  402892:	mov    QWORD PTR [rbp-0x178],0x0
  40289d:	mov    QWORD PTR [rbp-0x170],0x0
  4028a8:	lea    rdi,[rbp-0x190]
  4028af:	call   4055a0 <mmk_verify_times@@Base>
  4028b4:	cmp    eax,0x0
  4028b7:	jne    4028f3 <main@@Base+0x683>
  4028bd:	mov    rax,QWORD PTR [rip+0x6734]        # 408ff8 <stderr@GLIBC_2.2.5>
  4028c4:	mov    rdi,QWORD PTR [rax]
  4028c7:	lea    rsi,[rip+0x373c]        # 40600a <_IO_stdin_used@@Base+0xa>
  4028ce:	lea    rdx,[rip+0x3752]        # 406027 <_IO_stdin_used@@Base+0x27>
  4028d5:	mov    ecx,0x36
  4028da:	lea    r8,[rip+0x3801]        # 4060e2 <_IO_stdin_used@@Base+0xe2>
  4028e1:	mov    al,0x0
  4028e3:	call   4020e0 <fprintf@plt>
  4028e8:	mov    DWORD PTR [rbp-0x348],eax
  4028ee:	call   402040 <abort@plt>
  4028f3:	jmp    4028f8 <main@@Base+0x688>
  4028f8:	jmp    4028fd <main@@Base+0x68d>
  4028fd:	mov    edi,0x1
  402902:	call   4047c0 <mmk_matcher_init@@Base>
  402907:	call   402150 <fn_vv@plt>
  40290c:	call   404800 <mmk_matcher_term@@Base>
  402911:	xor    esi,esi
  402913:	mov    edi,0x28
  402918:	mov    edx,edi
  40291a:	lea    rax,[rbp-0x1b8]
  402921:	mov    rcx,rax
  402924:	mov    rdi,rcx
  402927:	mov    QWORD PTR [rbp-0x350],rax
  40292e:	call   4020b0 <memset@plt>
  402933:	mov    DWORD PTR [rbp-0x1b8],0x1
  40293d:	mov    DWORD PTR [rbp-0x1b4],0x1
  402947:	mov    rdi,QWORD PTR [rbp-0x350]
  40294e:	call   4055a0 <mmk_verify_times@@Base>
  402953:	cmp    eax,0x0
  402956:	je     402992 <main@@Base+0x722>
  40295c:	mov    rax,QWORD PTR [rip+0x6695]        # 408ff8 <stderr@GLIBC_2.2.5>
  402963:	mov    rdi,QWORD PTR [rax]
  402966:	lea    rsi,[rip+0x369d]        # 40600a <_IO_stdin_used@@Base+0xa>
  40296d:	lea    rdx,[rip+0x36b3]        # 406027 <_IO_stdin_used@@Base+0x27>
  402974:	mov    ecx,0x37
  402979:	lea    r8,[rip+0x3799]        # 406119 <_IO_stdin_used@@Base+0x119>
  402980:	mov    al,0x0
  402982:	call   4020e0 <fprintf@plt>
  402987:	mov    DWORD PTR [rbp-0x354],eax
  40298d:	call   402040 <abort@plt>
  402992:	jmp    402997 <main@@Base+0x727>
  402997:	jmp    40299c <main@@Base+0x72c>
  40299c:	mov    edi,0x1
  4029a1:	call   4047c0 <mmk_matcher_init@@Base>
  4029a6:	call   402150 <fn_vv@plt>
  4029ab:	call   404800 <mmk_matcher_term@@Base>
  4029b0:	mov    DWORD PTR [rbp-0x1e0],0x1
  4029ba:	mov    DWORD PTR [rbp-0x1dc],0x0
  4029c4:	mov    QWORD PTR [rbp-0x1d8],0x0
  4029cf:	mov    QWORD PTR [rbp-0x1d0],0x0
  4029da:	mov    QWORD PTR [rbp-0x1c8],0x2
  4029e5:	mov    QWORD PTR [rbp-0x1c0],0x0
  4029f0:	lea    rdi,[rbp-0x1e0]
  4029f7:	call   4055a0 <mmk_verify_times@@Base>
  4029fc:	cmp    eax,0x0
  4029ff:	je     402a3b <main@@Base+0x7cb>
  402a05:	mov    rax,QWORD PTR [rip+0x65ec]        # 408ff8 <stderr@GLIBC_2.2.5>
  402a0c:	mov    rdi,QWORD PTR [rax]
  402a0f:	lea    rsi,[rip+0x35f4]        # 40600a <_IO_stdin_used@@Base+0xa>
  402a16:	lea    rdx,[rip+0x360a]        # 406027 <_IO_stdin_used@@Base+0x27>
  402a1d:	mov    ecx,0x38
  402a22:	lea    r8,[rip+0x3711]        # 40613a <_IO_stdin_used@@Base+0x13a>
  402a29:	mov    al,0x0
  402a2b:	call   4020e0 <fprintf@plt>
  402a30:	mov    DWORD PTR [rbp-0x358],eax
  402a36:	call   402040 <abort@plt>
  402a3b:	jmp    402a40 <main@@Base+0x7d0>
  402a40:	jmp    402a45 <main@@Base+0x7d5>
  402a45:	mov    edi,0x1
  402a4a:	call   4047c0 <mmk_matcher_init@@Base>
  402a4f:	call   402150 <fn_vv@plt>
  402a54:	call   404800 <mmk_matcher_term@@Base>
  402a59:	mov    DWORD PTR [rbp-0x208],0x1
  402a63:	mov    DWORD PTR [rbp-0x204],0x0
  402a6d:	mov    QWORD PTR [rbp-0x200],0x2
  402a78:	mov    QWORD PTR [rbp-0x1f8],0x0
  402a83:	mov    QWORD PTR [rbp-0x1f0],0x0
  402a8e:	mov    QWORD PTR [rbp-0x1e8],0x0
  402a99:	lea    rdi,[rbp-0x208]
  402aa0:	call   4055a0 <mmk_verify_times@@Base>
  402aa5:	cmp    eax,0x0
  402aa8:	je     402ae4 <main@@Base+0x874>
  402aae:	mov    rax,QWORD PTR [rip+0x6543]        # 408ff8 <stderr@GLIBC_2.2.5>
  402ab5:	mov    rdi,QWORD PTR [rax]
  402ab8:	lea    rsi,[rip+0x354b]        # 40600a <_IO_stdin_used@@Base+0xa>
  402abf:	lea    rdx,[rip+0x3561]        # 406027 <_IO_stdin_used@@Base+0x27>
  402ac6:	mov    ecx,0x39
  402acb:	lea    r8,[rip+0x3689]        # 40615b <_IO_stdin_used@@Base+0x15b>
  402ad2:	mov    al,0x0
  402ad4:	call   4020e0 <fprintf@plt>
  402ad9:	mov    DWORD PTR [rbp-0x35c],eax
  402adf:	call   402040 <abort@plt>
  402ae4:	jmp    402ae9 <main@@Base+0x879>
  402ae9:	mov    rdi,QWORD PTR [rip+0x64d8]        # 408fc8 <fn_vv>
  402af0:	call   4047a0 <mmk_reset@@Base>
  402af5:	mov    DWORD PTR [rbp-0x20c],0xfefefefe
  402aff:	lea    rdi,[rip+0x3679]        # 40617f <_IO_stdin_used@@Base+0x17f>
  402b06:	call   403040 <main@@Base+0xdd0>
  402b0b:	xor    edi,edi
  402b0d:	mov    QWORD PTR [rbp-0x368],rax
  402b14:	call   4047c0 <mmk_matcher_init@@Base>
  402b19:	mov    DWORD PTR [rbp-0x230],0x0
  402b23:	mov    edi,DWORD PTR [rbp-0x20c]
  402b29:	mov    DWORD PTR [rbp-0x22c],edi
  402b2f:	mov    DWORD PTR [rbp-0x234],0x1
  402b39:	lea    rax,[rbp-0x234]
  402b40:	mov    QWORD PTR [rbp-0x228],rax
  402b47:	mov    QWORD PTR [rbp-0x220],0x0
  402b52:	mov    QWORD PTR [rbp-0x218],0x0
  402b5d:	lea    rdi,[rbp-0x230]
  402b64:	call   405d40 <mmk_when_init@@Base>
  402b69:	mov    edi,0x1
  402b6e:	call   402158 <fn_ii@plt>
  402b73:	mov    DWORD PTR [rbp-0x36c],eax
  402b79:	call   404800 <mmk_matcher_term@@Base>
  402b7e:	mov    edi,0x1
  402b83:	call   402158 <fn_ii@plt>
  402b88:	cmp    eax,0x1
  402b8b:	jne    402ba4 <main@@Base+0x934>
  402b91:	call   402050 <__errno_location@plt>
  402b96:	mov    ecx,DWORD PTR [rax]
  402b98:	cmp    ecx,DWORD PTR [rbp-0x20c]
  402b9e:	je     402bda <main@@Base+0x96a>
  402ba4:	mov    rax,QWORD PTR [rip+0x644d]        # 408ff8 <stderr@GLIBC_2.2.5>
  402bab:	mov    rdi,QWORD PTR [rax]
  402bae:	lea    rsi,[rip+0x3455]        # 40600a <_IO_stdin_used@@Base+0xa>
  402bb5:	lea    rdx,[rip+0x346b]        # 406027 <_IO_stdin_used@@Base+0x27>
  402bbc:	mov    ecx,0x40
  402bc1:	lea    r8,[rip+0x35bd]        # 406185 <_IO_stdin_used@@Base+0x185>
  402bc8:	mov    al,0x0
  402bca:	call   4020e0 <fprintf@plt>
  402bcf:	mov    DWORD PTR [rbp-0x370],eax
  402bd5:	call   402040 <abort@plt>
  402bda:	jmp    402bdf <main@@Base+0x96f>
  402bdf:	jmp    402be4 <main@@Base+0x974>
  402be4:	mov    edi,0x2a
  402be9:	call   402158 <fn_ii@plt>
  402bee:	cmp    eax,0x0
  402bf1:	je     402c2d <main@@Base+0x9bd>
  402bf7:	mov    rax,QWORD PTR [rip+0x63fa]        # 408ff8 <stderr@GLIBC_2.2.5>
  402bfe:	mov    rdi,QWORD PTR [rax]
  402c01:	lea    rsi,[rip+0x3402]        # 40600a <_IO_stdin_used@@Base+0xa>
  402c08:	lea    rdx,[rip+0x3418]        # 406027 <_IO_stdin_used@@Base+0x27>
  402c0f:	mov    ecx,0x41
  402c14:	lea    r8,[rip+0x3588]        # 4061a3 <_IO_stdin_used@@Base+0x1a3>
  402c1b:	mov    al,0x0
  402c1d:	call   4020e0 <fprintf@plt>
  402c22:	mov    DWORD PTR [rbp-0x374],eax
  402c28:	call   402040 <abort@plt>
  402c2d:	jmp    402c32 <main@@Base+0x9c2>
  402c32:	jmp    402c37 <main@@Base+0x9c7>
  402c37:	mov    edi,0x1
  402c3c:	call   4047c0 <mmk_matcher_init@@Base>
  402c41:	xor    edi,edi
  402c43:	mov    DWORD PTR [rbp-0x378],edi
  402c49:	mov    esi,DWORD PTR [rbp-0x378]
  402c4f:	call   404840 <mmk_matcher_add@@Base>
  402c54:	mov    DWORD PTR [rbp-0x238],0x0
  402c5e:	mov    edi,DWORD PTR [rbp-0x238]
  402c64:	call   402158 <fn_ii@plt>
  402c69:	mov    DWORD PTR [rbp-0x37c],eax
  402c6f:	call   404800 <mmk_matcher_term@@Base>
  402c74:	mov    DWORD PTR [rbp-0x260],0x1
  402c7e:	mov    DWORD PTR [rbp-0x25c],0x0
  402c88:	mov    QWORD PTR [rbp-0x258],0x0
  402c93:	mov    QWORD PTR [rbp-0x250],0x0
  402c9e:	mov    QWORD PTR [rbp-0x248],0x2
  402ca9:	mov    QWORD PTR [rbp-0x240],0x0
  402cb4:	lea    rdi,[rbp-0x260]
  402cbb:	call   4055a0 <mmk_verify_times@@Base>
  402cc0:	cmp    eax,0x0
  402cc3:	jne    402cff <main@@Base+0xa8f>
  402cc9:	mov    rax,QWORD PTR [rip+0x6328]        # 408ff8 <stderr@GLIBC_2.2.5>
  402cd0:	mov    rdi,QWORD PTR [rax]
  402cd3:	lea    rsi,[rip+0x3330]        # 40600a <_IO_stdin_used@@Base+0xa>
  402cda:	lea    rdx,[rip+0x3346]        # 406027 <_IO_stdin_used@@Base+0x27>
  402ce1:	mov    ecx,0x43
  402ce6:	lea    r8,[rip+0x34c5]        # 4061b2 <_IO_stdin_used@@Base+0x1b2>
  402ced:	mov    al,0x0
  402cef:	call   4020e0 <fprintf@plt>
  402cf4:	mov    DWORD PTR [rbp-0x380],eax
  402cfa:	call   402040 <abort@plt>
  402cff:	jmp    402d04 <main@@Base+0xa94>
  402d04:	jmp    402d09 <main@@Base+0xa99>
  402d09:	mov    edi,0x1
  402d0e:	call   4047c0 <mmk_matcher_init@@Base>
  402d13:	mov    edi,0x1
  402d18:	call   402158 <fn_ii@plt>
  402d1d:	mov    DWORD PTR [rbp-0x384],eax
  402d23:	call   404800 <mmk_matcher_term@@Base>
  402d28:	mov    DWORD PTR [rbp-0x288],0x1
  402d32:	mov    DWORD PTR [rbp-0x284],0x0
  402d3c:	mov    QWORD PTR [rbp-0x280],0x0
  402d47:	mov    QWORD PTR [rbp-0x278],0x0
  402d52:	mov    QWORD PTR [rbp-0x270],0x1
  402d5d:	mov    QWORD PTR [rbp-0x268],0x0
  402d68:	lea    rdi,[rbp-0x288]
  402d6f:	call   4055a0 <mmk_verify_times@@Base>
  402d74:	cmp    eax,0x0
  402d77:	jne    402db3 <main@@Base+0xb43>
  402d7d:	mov    rax,QWORD PTR [rip+0x6274]        # 408ff8 <stderr@GLIBC_2.2.5>
  402d84:	mov    rdi,QWORD PTR [rax]
  402d87:	lea    rsi,[rip+0x327c]        # 40600a <_IO_stdin_used@@Base+0xa>
  402d8e:	lea    rdx,[rip+0x3292]        # 406027 <_IO_stdin_used@@Base+0x27>
  402d95:	mov    ecx,0x44
  402d9a:	lea    r8,[rip+0x343d]        # 4061de <_IO_stdin_used@@Base+0x1de>
  402da1:	mov    al,0x0
  402da3:	call   4020e0 <fprintf@plt>
  402da8:	mov    DWORD PTR [rbp-0x388],eax
  402dae:	call   402040 <abort@plt>
  402db3:	jmp    402db8 <main@@Base+0xb48>
  402db8:	jmp    402dbd <main@@Base+0xb4d>
  402dbd:	mov    edi,0x1
  402dc2:	call   4047c0 <mmk_matcher_init@@Base>
  402dc7:	mov    edi,0x2a
  402dcc:	call   402158 <fn_ii@plt>
  402dd1:	mov    DWORD PTR [rbp-0x38c],eax
  402dd7:	call   404800 <mmk_matcher_term@@Base>
  402ddc:	mov    DWORD PTR [rbp-0x2b0],0x1
  402de6:	mov    DWORD PTR [rbp-0x2ac],0x0
  402df0:	mov    QWORD PTR [rbp-0x2a8],0x0
  402dfb:	mov    QWORD PTR [rbp-0x2a0],0x0
  402e06:	mov    QWORD PTR [rbp-0x298],0x1
  402e11:	mov    QWORD PTR [rbp-0x290],0x0
  402e1c:	lea    rdi,[rbp-0x2b0]
  402e23:	call   4055a0 <mmk_verify_times@@Base>
  402e28:	cmp    eax,0x0
  402e2b:	jne    402e67 <main@@Base+0xbf7>
  402e31:	mov    rax,QWORD PTR [rip+0x61c0]        # 408ff8 <stderr@GLIBC_2.2.5>
  402e38:	mov    rdi,QWORD PTR [rax]
  402e3b:	lea    rsi,[rip+0x31c8]        # 40600a <_IO_stdin_used@@Base+0xa>
  402e42:	lea    rdx,[rip+0x31de]        # 406027 <_IO_stdin_used@@Base+0x27>
  402e49:	mov    ecx,0x45
  402e4e:	lea    r8,[rip+0x33aa]        # 4061ff <_IO_stdin_used@@Base+0x1ff>
  402e55:	mov    al,0x0
  402e57:	call   4020e0 <fprintf@plt>
  402e5c:	mov    DWORD PTR [rbp-0x390],eax
  402e62:	call   402040 <abort@plt>
  402e67:	jmp    402e6c <main@@Base+0xbfc>
  402e6c:	jmp    402e71 <main@@Base+0xc01>
  402e71:	mov    edi,0x1
  402e76:	call   4047c0 <mmk_matcher_init@@Base>
  402e7b:	mov    edi,0xc
  402e80:	call   402158 <fn_ii@plt>
  402e85:	mov    DWORD PTR [rbp-0x394],eax
  402e8b:	call   404800 <mmk_matcher_term@@Base>
  402e90:	xor    esi,esi
  402e92:	mov    eax,0x28
  402e97:	mov    edx,eax
  402e99:	lea    rcx,[rbp-0x2d8]
  402ea0:	mov    r8,rcx
  402ea3:	mov    rdi,r8
  402ea6:	mov    QWORD PTR [rbp-0x3a0],rcx
  402ead:	call   4020b0 <memset@plt>
  402eb2:	mov    DWORD PTR [rbp-0x2d8],0x1
  402ebc:	mov    DWORD PTR [rbp-0x2d4],0x1
  402ec6:	mov    rdi,QWORD PTR [rbp-0x3a0]
  402ecd:	call   4055a0 <mmk_verify_times@@Base>
  402ed2:	cmp    eax,0x0
  402ed5:	jne    402f11 <main@@Base+0xca1>
  402edb:	mov    rax,QWORD PTR [rip+0x6116]        # 408ff8 <stderr@GLIBC_2.2.5>
  402ee2:	mov    rdi,QWORD PTR [rax]
  402ee5:	lea    rsi,[rip+0x311e]        # 40600a <_IO_stdin_used@@Base+0xa>
  402eec:	lea    rdx,[rip+0x3134]        # 406027 <_IO_stdin_used@@Base+0x27>
  402ef3:	mov    ecx,0x46
  402ef8:	lea    r8,[rip+0x3322]        # 406221 <_IO_stdin_used@@Base+0x221>
  402eff:	mov    al,0x0
  402f01:	call   4020e0 <fprintf@plt>
  402f06:	mov    DWORD PTR [rbp-0x3a4],eax
  402f0c:	call   402040 <abort@plt>
  402f11:	jmp    402f16 <main@@Base+0xca6>
  402f16:	mov    rax,QWORD PTR [rip+0x60b3]        # 408fd0 <fn_ii>
  402f1d:	mov    rdi,rax
  402f20:	call   4047a0 <mmk_reset@@Base>
  402f25:	lea    rdi,[rip+0x3317]        # 406243 <_IO_stdin_used@@Base+0x243>
  402f2c:	call   403070 <main@@Base+0xe00>
  402f31:	xor    edi,edi
  402f33:	mov    QWORD PTR [rbp-0x3b0],rax
  402f3a:	call   4047c0 <mmk_matcher_init@@Base>
  402f3f:	xor    esi,esi
  402f41:	mov    edi,0x20
  402f46:	mov    edx,edi
  402f48:	lea    rax,[rbp-0x2f8]
  402f4f:	mov    rcx,rax
  402f52:	mov    rdi,rcx
  402f55:	mov    QWORD PTR [rbp-0x3b8],rax
  402f5c:	call   4020b0 <memset@plt>
  402f61:	mov    DWORD PTR [rbp-0x2fc],0x1
  402f6b:	lea    rax,[rbp-0x2fc]
  402f72:	mov    QWORD PTR [rbp-0x2f0],rax
  402f79:	mov    rdi,QWORD PTR [rbp-0x3b8]
  402f80:	call   405d40 <mmk_when_init@@Base>
  402f85:	mov    edi,0x1
  402f8a:	mov    esi,0x2a
  402f8f:	mov    al,0x0
  402f91:	call   402160 <fn_ii_va@plt>
  402f96:	mov    DWORD PTR [rbp-0x3bc],eax
  402f9c:	call   404800 <mmk_matcher_term@@Base>
  402fa1:	mov    edi,0x1
  402fa6:	mov    esi,0x2a
  402fab:	mov    al,0x0
  402fad:	call   402160 <fn_ii_va@plt>
  402fb2:	cmp    eax,0x1
  402fb5:	je     402ff1 <main@@Base+0xd81>
  402fbb:	mov    rax,QWORD PTR [rip+0x6036]        # 408ff8 <stderr@GLIBC_2.2.5>
  402fc2:	mov    rdi,QWORD PTR [rax]
  402fc5:	lea    rsi,[rip+0x303e]        # 40600a <_IO_stdin_used@@Base+0xa>
  402fcc:	lea    rdx,[rip+0x3054]        # 406027 <_IO_stdin_used@@Base+0x27>
  402fd3:	mov    ecx,0x4d
  402fd8:	lea    r8,[rip+0x326d]        # 40624c <_IO_stdin_used@@Base+0x24c>
  402fdf:	mov    al,0x0
  402fe1:	call   4020e0 <fprintf@plt>
  402fe6:	mov    DWORD PTR [rbp-0x3c0],eax
  402fec:	call   402040 <abort@plt>
  402ff1:	jmp    402ff6 <main@@Base+0xd86>
  402ff6:	mov    rax,QWORD PTR [rip+0x5fdb]        # 408fd8 <fn_ii_va>
  402ffd:	mov    rdi,rax
  403000:	call   4047a0 <mmk_reset@@Base>
  403005:	xor    eax,eax
  403007:	add    rsp,0x3c0
  40300e:	pop    rbp
  40300f:	ret    
  403010:	push   rbp
  403011:	mov    rbp,rsp
  403014:	sub    rsp,0x10
  403018:	mov    QWORD PTR [rbp-0x8],rdi
  40301c:	mov    rdi,QWORD PTR [rbp-0x8]
  403020:	lea    rsi,[rip+0x79]        # 4030a0 <main@@Base+0xe30>
  403027:	call   4048b0 <mmk_mock_create_internal@@Base>
  40302c:	add    rsp,0x10
  403030:	pop    rbp
  403031:	ret    
  403032:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40303c:	nop    DWORD PTR [rax+0x0]
  403040:	push   rbp
  403041:	mov    rbp,rsp
  403044:	sub    rsp,0x10
  403048:	lea    rax,[rip+0x311]        # 403360 <main@@Base+0x10f0>
  40304f:	mov    QWORD PTR [rbp-0x8],rdi
  403053:	mov    rdi,QWORD PTR [rbp-0x8]
  403057:	mov    rsi,rax
  40305a:	call   4048b0 <mmk_mock_create_internal@@Base>
  40305f:	add    rsp,0x10
  403063:	pop    rbp
  403064:	ret    
  403065:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40306f:	nop
  403070:	push   rbp
  403071:	mov    rbp,rsp
  403074:	sub    rsp,0x10
  403078:	lea    rax,[rip+0x901]        # 403980 <main@@Base+0x1710>
  40307f:	mov    QWORD PTR [rbp-0x8],rdi
  403083:	mov    rdi,QWORD PTR [rbp-0x8]
  403087:	mov    rsi,rax
  40308a:	call   4048b0 <mmk_mock_create_internal@@Base>
  40308f:	add    rsp,0x10
  403093:	pop    rbp
  403094:	ret    
  403095:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40309f:	nop
  4030a0:	push   rbp
  4030a1:	mov    rbp,rsp
  4030a4:	sub    rsp,0x90
  4030ab:	jmp    4030b0 <main@@Base+0xe40>
  4030b0:	jmp    4030b5 <main@@Base+0xe45>
  4030b5:	jmp    4030ba <main@@Base+0xe4a>
  4030ba:	call   404820 <mmk_matcher_ctx@@Base>
  4030bf:	mov    QWORD PTR [rbp-0x8],rax
  4030c3:	cmp    QWORD PTR [rbp-0x8],0x0
  4030c8:	je     403202 <main@@Base+0xf92>
  4030ce:	call   405370 <mmk_ctx@@Base>
  4030d3:	mov    rdi,rax
  4030d6:	call   4051d0 <mmk_stub_context@@Base>
  4030db:	mov    QWORD PTR [rbp-0x10],rax
  4030df:	mov    rax,QWORD PTR [rbp-0x8]
  4030e3:	cmp    DWORD PTR [rax],0x0
  4030e6:	jne    403146 <main@@Base+0xed6>
  4030ec:	mov    eax,0x48
  4030f1:	mov    edi,eax
  4030f3:	call   405c10 <mmk_malloc@@Base>
  4030f8:	mov    QWORD PTR [rbp-0x18],rax
  4030fc:	mov    rax,QWORD PTR [rbp-0x18]
  403100:	mov    QWORD PTR [rbp-0x80],rax
  403104:	call   405d60 <mmk_when_get_result@@Base>
  403109:	mov    rdi,QWORD PTR [rax]
  40310c:	mov    rcx,QWORD PTR [rbp-0x80]
  403110:	mov    QWORD PTR [rcx+0x10],rdi
  403114:	mov    rdi,QWORD PTR [rax+0x8]
  403118:	mov    QWORD PTR [rcx+0x18],rdi
  40311c:	mov    rdi,QWORD PTR [rax+0x10]
  403120:	mov    QWORD PTR [rcx+0x20],rdi
  403124:	mov    rax,QWORD PTR [rax+0x18]
  403128:	mov    QWORD PTR [rcx+0x28],rax
  40312c:	jmp    403131 <main@@Base+0xec1>
  403131:	mov    rdi,QWORD PTR [rbp-0x10]
  403135:	mov    rax,QWORD PTR [rbp-0x18]
  403139:	mov    rsi,rax
  40313c:	call   405d80 <mmk_when_impl@@Base>
  403141:	jmp    4031f3 <main@@Base+0xf83>
  403146:	mov    rax,QWORD PTR [rbp-0x8]
  40314a:	cmp    DWORD PTR [rax],0x1
  40314d:	jne    4031ee <main@@Base+0xf7e>
  403153:	mov    QWORD PTR [rbp-0x20],0x0
  40315b:	mov    rdi,QWORD PTR [rbp-0x10]
  40315f:	call   404aa0 <mmk_mock_params_begin@@Base>
  403164:	mov    QWORD PTR [rbp-0x28],rax
  403168:	cmp    QWORD PTR [rbp-0x28],0x0
  40316d:	je     4031ad <main@@Base+0xf3d>
  403173:	mov    rax,QWORD PTR [rbp-0x8]
  403177:	mov    QWORD PTR [rbp-0x30],rax
  40317b:	jmp    403180 <main@@Base+0xf10>
  403180:	mov    rax,QWORD PTR [rbp-0x28]
  403184:	mov    rax,QWORD PTR [rax]
  403187:	add    rax,QWORD PTR [rbp-0x20]
  40318b:	mov    QWORD PTR [rbp-0x20],rax
  40318f:	jmp    403194 <main@@Base+0xf24>
  403194:	mov    rdi,QWORD PTR [rbp-0x10]
  403198:	mov    rax,QWORD PTR [rbp-0x28]
  40319c:	mov    rsi,rax
  40319f:	call   404ac0 <mmk_mock_params_next@@Base>
  4031a4:	mov    QWORD PTR [rbp-0x28],rax
  4031a8:	jmp    403168 <main@@Base+0xef8>
  4031ad:	mov    rax,QWORD PTR [rbp-0x8]
  4031b1:	mov    QWORD PTR [rbp-0x38],rax
  4031b5:	cmp    QWORD PTR [rbp-0x38],0x0
  4031ba:	je     4031e5 <main@@Base+0xf75>
  4031c0:	mov    rax,QWORD PTR [rbp-0x38]
  4031c4:	mov    rax,QWORD PTR [rax+0x10]
  4031c8:	mov    QWORD PTR [rbp-0x40],rax
  4031cc:	mov    rax,QWORD PTR [rbp-0x38]
  4031d0:	mov    rdi,rax
  4031d3:	call   405c30 <mmk_free@@Base>
  4031d8:	mov    rax,QWORD PTR [rbp-0x40]
  4031dc:	mov    QWORD PTR [rbp-0x38],rax
  4031e0:	jmp    4031b5 <main@@Base+0xf45>
  4031e5:	mov    rdi,QWORD PTR [rbp-0x20]
  4031e9:	call   405580 <mmk_verify_set_times@@Base>
  4031ee:	jmp    4031f3 <main@@Base+0xf83>
  4031f3:	jmp    4031f8 <main@@Base+0xf88>
  4031f8:	jmp    4031fd <main@@Base+0xf8d>
  4031fd:	jmp    403350 <main@@Base+0x10e0>
  403202:	mov    QWORD PTR [rbp-0x60],0x0
  40320a:	mov    QWORD PTR [rbp-0x58],0x0
  403212:	mov    QWORD PTR [rbp-0x50],0x0
  40321a:	lea    rax,[rbp-0x60]
  40321e:	mov    QWORD PTR [rbp-0x48],rax
  403222:	jmp    403227 <main@@Base+0xfb7>
  403227:	mov    eax,0x18
  40322c:	mov    esi,eax
  40322e:	mov    rcx,QWORD PTR [rbp-0x48]
  403232:	mov    rdi,rcx
  403235:	call   405610 <mmk_verify_register_call@@Base>
  40323a:	call   404ae0 <mmk_mock_get_params@@Base>
  40323f:	mov    QWORD PTR [rbp-0x68],rax
  403243:	cmp    QWORD PTR [rbp-0x68],0x0
  403248:	je     403341 <main@@Base+0x10d1>
  40324e:	mov    rax,QWORD PTR [rbp-0x68]
  403252:	mov    QWORD PTR [rbp-0x70],rax
  403256:	mov    rax,QWORD PTR [rbp-0x68]
  40325a:	mov    rax,QWORD PTR [rax]
  40325d:	mov    QWORD PTR [rbp-0x78],rax
  403261:	mov    rax,QWORD PTR [rbp-0x70]
  403265:	cmp    DWORD PTR [rax+0x14],0x0
  403269:	je     403289 <main@@Base+0x1019>
  40326f:	mov    rax,QWORD PTR [rbp-0x70]
  403273:	mov    ecx,DWORD PTR [rax+0x14]
  403276:	mov    DWORD PTR [rbp-0x84],ecx
  40327c:	call   402050 <__errno_location@plt>
  403281:	mov    ecx,DWORD PTR [rbp-0x84]
  403287:	mov    DWORD PTR [rax],ecx
  403289:	mov    rax,QWORD PTR [rbp-0x70]
  40328d:	cmp    QWORD PTR [rax+0x20],0x0
  403292:	je     4032d1 <main@@Base+0x1061>
  403298:	mov    rax,QWORD PTR [rbp-0x70]
  40329c:	cmp    QWORD PTR [rax+0x18],0x0
  4032a1:	jne    4032d1 <main@@Base+0x1061>
  4032a7:	jmp    4032ac <main@@Base+0x103c>
  4032ac:	jmp    4032b1 <main@@Base+0x1041>
  4032b1:	jmp    4032b6 <main@@Base+0x1046>
  4032b6:	mov    rax,QWORD PTR [rbp-0x70]
  4032ba:	call   QWORD PTR [rax+0x20]
  4032bd:	jmp    4032c2 <main@@Base+0x1052>
  4032c2:	jmp    4032c7 <main@@Base+0x1057>
  4032c7:	jmp    4032cc <main@@Base+0x105c>
  4032cc:	jmp    403350 <main@@Base+0x10e0>
  4032d1:	mov    rax,QWORD PTR [rbp-0x70]
  4032d5:	cmp    QWORD PTR [rax+0x20],0x0
  4032da:	je     403314 <main@@Base+0x10a4>
  4032e0:	mov    rax,QWORD PTR [rbp-0x70]
  4032e4:	cmp    QWORD PTR [rax+0x18],0x0
  4032e9:	je     403314 <main@@Base+0x10a4>
  4032ef:	jmp    4032f4 <main@@Base+0x1084>
  4032f4:	jmp    4032f9 <main@@Base+0x1089>
  4032f9:	mov    rax,QWORD PTR [rbp-0x70]
  4032fd:	call   QWORD PTR [rax+0x20]
  403300:	jmp    403305 <main@@Base+0x1095>
  403305:	jmp    40330a <main@@Base+0x109a>
  40330a:	jmp    40330f <main@@Base+0x109f>
  40330f:	jmp    403350 <main@@Base+0x10e0>
  403314:	mov    rax,QWORD PTR [rbp-0x70]
  403318:	cmp    QWORD PTR [rax+0x18],0x0
  40331d:	je     403332 <main@@Base+0x10c2>
  403323:	jmp    403328 <main@@Base+0x10b8>
  403328:	jmp    40332d <main@@Base+0x10bd>
  40332d:	jmp    403350 <main@@Base+0x10e0>
  403332:	jmp    403337 <main@@Base+0x10c7>
  403337:	jmp    40333c <main@@Base+0x10cc>
  40333c:	jmp    403350 <main@@Base+0x10e0>
  403341:	jmp    403346 <main@@Base+0x10d6>
  403346:	jmp    40334b <main@@Base+0x10db>
  40334b:	jmp    403350 <main@@Base+0x10e0>
  403350:	add    rsp,0x90
  403357:	pop    rbp
  403358:	ret    
  403359:	nop    DWORD PTR [rax+0x0]
  403360:	push   rbp
  403361:	mov    rbp,rsp
  403364:	sub    rsp,0xc0
  40336b:	mov    DWORD PTR [rbp-0x8],edi
  40336e:	jmp    403373 <main@@Base+0x1103>
  403373:	call   404820 <mmk_matcher_ctx@@Base>
  403378:	mov    QWORD PTR [rbp-0x10],rax
  40337c:	cmp    QWORD PTR [rbp-0x10],0x0
  403381:	je     403618 <main@@Base+0x13a8>
  403387:	call   405370 <mmk_ctx@@Base>
  40338c:	mov    rdi,rax
  40338f:	call   4051d0 <mmk_stub_context@@Base>
  403394:	mov    QWORD PTR [rbp-0x18],rax
  403398:	mov    rax,QWORD PTR [rbp-0x10]
  40339c:	cmp    DWORD PTR [rax],0x0
  40339f:	jne    40340f <main@@Base+0x119f>
  4033a5:	mov    eax,0x50
  4033aa:	mov    edi,eax
  4033ac:	call   405c10 <mmk_malloc@@Base>
  4033b1:	mov    QWORD PTR [rbp-0x20],rax
  4033b5:	mov    rax,QWORD PTR [rbp-0x20]
  4033b9:	mov    QWORD PTR [rbp-0xb8],rax
  4033c0:	call   405d60 <mmk_when_get_result@@Base>
  4033c5:	mov    rdi,QWORD PTR [rax]
  4033c8:	mov    rcx,QWORD PTR [rbp-0xb8]
  4033cf:	mov    QWORD PTR [rcx+0x10],rdi
  4033d3:	mov    rdi,QWORD PTR [rax+0x8]
  4033d7:	mov    QWORD PTR [rcx+0x18],rdi
  4033db:	mov    rdi,QWORD PTR [rax+0x10]
  4033df:	mov    QWORD PTR [rcx+0x20],rdi
  4033e3:	mov    rax,QWORD PTR [rax+0x18]
  4033e7:	mov    QWORD PTR [rcx+0x28],rax
  4033eb:	mov    edx,DWORD PTR [rbp-0x8]
  4033ee:	mov    rax,QWORD PTR [rbp-0x20]
  4033f2:	mov    DWORD PTR [rax+0x48],edx
  4033f5:	jmp    4033fa <main@@Base+0x118a>
  4033fa:	mov    rdi,QWORD PTR [rbp-0x18]
  4033fe:	mov    rax,QWORD PTR [rbp-0x20]
  403402:	mov    rsi,rax
  403405:	call   405d80 <mmk_when_impl@@Base>
  40340a:	jmp    403600 <main@@Base+0x1390>
  40340f:	mov    rax,QWORD PTR [rbp-0x10]
  403413:	cmp    DWORD PTR [rax],0x1
  403416:	jne    4035fb <main@@Base+0x138b>
  40341c:	mov    QWORD PTR [rbp-0x28],0x0
  403424:	mov    rdi,QWORD PTR [rbp-0x18]
  403428:	call   404aa0 <mmk_mock_params_begin@@Base>
  40342d:	mov    QWORD PTR [rbp-0x30],rax
  403431:	cmp    QWORD PTR [rbp-0x30],0x0
  403436:	je     4035ba <main@@Base+0x134a>
  40343c:	mov    rax,QWORD PTR [rbp-0x10]
  403440:	mov    QWORD PTR [rbp-0x38],rax
  403444:	mov    rax,QWORD PTR [rbp-0x38]
  403448:	cmp    QWORD PTR [rax+0x10],0x0
  40344d:	je     403555 <main@@Base+0x12e5>
  403453:	mov    rax,QWORD PTR [rbp-0x38]
  403457:	mov    rax,QWORD PTR [rax+0x10]
  40345b:	mov    QWORD PTR [rbp-0x38],rax
  40345f:	mov    rax,QWORD PTR [rbp-0x38]
  403463:	cmp    DWORD PTR [rax],0x0
  403466:	jne    403471 <main@@Base+0x1201>
  40346c:	jmp    403550 <main@@Base+0x12e0>
  403471:	mov    rax,QWORD PTR [rbp-0x38]
  403475:	mov    ecx,DWORD PTR [rax]
  403477:	and    ecx,0x80000000
  40347d:	cmp    ecx,0x0
  403480:	je     40350c <main@@Base+0x129c>
  403486:	mov    eax,0x4
  40348b:	mov    edx,eax
  40348d:	mov    rcx,QWORD PTR [rbp-0x30]
  403491:	add    rcx,0x18
  403495:	lea    rsi,[rbp-0x8]
  403499:	mov    rdi,rcx
  40349c:	call   4057d0 <mmk_memcmp@@Base>
  4034a1:	mov    DWORD PTR [rbp-0x3c],eax
  4034a4:	cmp    DWORD PTR [rbp-0x3c],0x0
  4034a8:	jne    4034c5 <main@@Base+0x1255>
  4034ae:	mov    rax,QWORD PTR [rbp-0x38]
  4034b2:	mov    ecx,DWORD PTR [rax]
  4034b4:	and    ecx,0x2
  4034b7:	cmp    ecx,0x0
  4034ba:	jne    4034c5 <main@@Base+0x1255>
  4034c0:	jmp    40359c <main@@Base+0x132c>
  4034c5:	cmp    DWORD PTR [rbp-0x3c],0x0
  4034c9:	jge    4034e6 <main@@Base+0x1276>
  4034cf:	mov    rax,QWORD PTR [rbp-0x38]
  4034d3:	mov    ecx,DWORD PTR [rax]
  4034d5:	and    ecx,0x4
  4034d8:	cmp    ecx,0x0
  4034db:	jne    4034e6 <main@@Base+0x1276>
  4034e1:	jmp    40359c <main@@Base+0x132c>
  4034e6:	cmp    DWORD PTR [rbp-0x3c],0x0
  4034ea:	jle    403507 <main@@Base+0x1297>
  4034f0:	mov    rax,QWORD PTR [rbp-0x38]
  4034f4:	mov    ecx,DWORD PTR [rax]
  4034f6:	and    ecx,0x8
  4034f9:	cmp    ecx,0x0
  4034fc:	jne    403507 <main@@Base+0x1297>
  403502:	jmp    40359c <main@@Base+0x132c>
  403507:	jmp    40354b <main@@Base+0x12db>
  40350c:	mov    rax,QWORD PTR [rbp-0x38]
  403510:	cmp    DWORD PTR [rax],0x1
  403513:	jne    403546 <main@@Base+0x12d6>
  403519:	mov    rdi,QWORD PTR [rbp-0x38]
  40351d:	call   4048a0 <mmk_matcher_get_predicate@@Base>
  403522:	mov    QWORD PTR [rbp-0x48],rax
  403526:	mov    rax,QWORD PTR [rbp-0x48]
  40352a:	mov    rdi,QWORD PTR [rbp-0x30]
  40352e:	mov    edi,DWORD PTR [rdi+0x18]
  403531:	call   rax
  403533:	cmp    eax,0x0
  403536:	jne    403541 <main@@Base+0x12d1>
  40353c:	jmp    40359c <main@@Base+0x132c>
  403541:	jmp    403546 <main@@Base+0x12d6>
  403546:	jmp    40354b <main@@Base+0x12db>
  40354b:	jmp    403550 <main@@Base+0x12e0>
  403550:	jmp    403583 <main@@Base+0x1313>
  403555:	mov    eax,0x4
  40355a:	mov    edx,eax
  40355c:	mov    rcx,QWORD PTR [rbp-0x30]
  403560:	add    rcx,0x18
  403564:	lea    rsi,[rbp-0x8]
  403568:	mov    rdi,rcx
  40356b:	call   4057d0 <mmk_memcmp@@Base>
  403570:	cmp    eax,0x0
  403573:	je     40357e <main@@Base+0x130e>
  403579:	jmp    40359c <main@@Base+0x132c>
  40357e:	jmp    403583 <main@@Base+0x1313>
  403583:	jmp    403588 <main@@Base+0x1318>
  403588:	jmp    40358d <main@@Base+0x131d>
  40358d:	mov    rax,QWORD PTR [rbp-0x30]
  403591:	mov    rax,QWORD PTR [rax]
  403594:	add    rax,QWORD PTR [rbp-0x28]
  403598:	mov    QWORD PTR [rbp-0x28],rax
  40359c:	jmp    4035a1 <main@@Base+0x1331>
  4035a1:	mov    rdi,QWORD PTR [rbp-0x18]
  4035a5:	mov    rax,QWORD PTR [rbp-0x30]
  4035a9:	mov    rsi,rax
  4035ac:	call   404ac0 <mmk_mock_params_next@@Base>
  4035b1:	mov    QWORD PTR [rbp-0x30],rax
  4035b5:	jmp    403431 <main@@Base+0x11c1>
  4035ba:	mov    rax,QWORD PTR [rbp-0x10]
  4035be:	mov    QWORD PTR [rbp-0x50],rax
  4035c2:	cmp    QWORD PTR [rbp-0x50],0x0
  4035c7:	je     4035f2 <main@@Base+0x1382>
  4035cd:	mov    rax,QWORD PTR [rbp-0x50]
  4035d1:	mov    rax,QWORD PTR [rax+0x10]
  4035d5:	mov    QWORD PTR [rbp-0x58],rax
  4035d9:	mov    rax,QWORD PTR [rbp-0x50]
  4035dd:	mov    rdi,rax
  4035e0:	call   405c30 <mmk_free@@Base>
  4035e5:	mov    rax,QWORD PTR [rbp-0x58]
  4035e9:	mov    QWORD PTR [rbp-0x50],rax
  4035ed:	jmp    4035c2 <main@@Base+0x1352>
  4035f2:	mov    rdi,QWORD PTR [rbp-0x28]
  4035f6:	call   405580 <mmk_verify_set_times@@Base>
  4035fb:	jmp    403600 <main@@Base+0x1390>
  403600:	jmp    403605 <main@@Base+0x1395>
  403605:	jmp    40360a <main@@Base+0x139a>
  40360a:	mov    eax,DWORD PTR [rip+0x5ab8]        # 4090c8 <__bss_start@@Base+0x8>
  403610:	mov    DWORD PTR [rbp-0x4],eax
  403613:	jmp    40396e <main@@Base+0x16fe>
  403618:	mov    QWORD PTR [rbp-0x80],0x0
  403620:	mov    QWORD PTR [rbp-0x78],0x0
  403628:	mov    QWORD PTR [rbp-0x70],0x0
  403630:	mov    eax,DWORD PTR [rbp-0x8]
  403633:	mov    DWORD PTR [rbp-0x68],eax
  403636:	lea    rcx,[rbp-0x80]
  40363a:	mov    QWORD PTR [rbp-0x60],rcx
  40363e:	jmp    403643 <main@@Base+0x13d3>
  403643:	mov    eax,0x20
  403648:	mov    esi,eax
  40364a:	mov    rcx,QWORD PTR [rbp-0x60]
  40364e:	mov    rdi,rcx
  403651:	call   405610 <mmk_verify_register_call@@Base>
  403656:	call   404ae0 <mmk_mock_get_params@@Base>
  40365b:	mov    QWORD PTR [rbp-0x88],rax
  403662:	cmp    QWORD PTR [rbp-0x88],0x0
  40366a:	je     40395b <main@@Base+0x16eb>
  403670:	mov    rax,QWORD PTR [rbp-0x88]
  403677:	mov    QWORD PTR [rbp-0x90],rax
  40367e:	mov    rax,QWORD PTR [rbp-0x88]
  403685:	mov    rax,QWORD PTR [rax]
  403688:	mov    QWORD PTR [rbp-0x98],rax
  40368f:	mov    rax,QWORD PTR [rbp-0x98]
  403696:	cmp    QWORD PTR [rax+0x10],0x0
  40369b:	je     4037ca <main@@Base+0x155a>
  4036a1:	mov    rax,QWORD PTR [rbp-0x98]
  4036a8:	mov    rax,QWORD PTR [rax+0x10]
  4036ac:	mov    QWORD PTR [rbp-0x98],rax
  4036b3:	mov    rax,QWORD PTR [rbp-0x98]
  4036ba:	cmp    DWORD PTR [rax],0x0
  4036bd:	jne    4036c8 <main@@Base+0x1458>
  4036c3:	jmp    4037c5 <main@@Base+0x1555>
  4036c8:	mov    rax,QWORD PTR [rbp-0x98]
  4036cf:	mov    ecx,DWORD PTR [rax]
  4036d1:	and    ecx,0x80000000
  4036d7:	cmp    ecx,0x0
  4036da:	je     403779 <main@@Base+0x1509>
  4036e0:	mov    eax,0x4
  4036e5:	mov    edx,eax
  4036e7:	lea    rcx,[rbp-0x8]
  4036eb:	mov    rsi,rcx
  4036ee:	mov    rdi,rsi
  4036f1:	mov    rsi,rcx
  4036f4:	call   4057d0 <mmk_memcmp@@Base>
  4036f9:	mov    DWORD PTR [rbp-0x9c],eax
  4036ff:	cmp    DWORD PTR [rbp-0x9c],0x0
  403706:	jne    403726 <main@@Base+0x14b6>
  40370c:	mov    rax,QWORD PTR [rbp-0x98]
  403713:	mov    ecx,DWORD PTR [rax]
  403715:	and    ecx,0x2
  403718:	cmp    ecx,0x0
  40371b:	jne    403726 <main@@Base+0x14b6>
  403721:	jmp    403944 <main@@Base+0x16d4>
  403726:	cmp    DWORD PTR [rbp-0x9c],0x0
  40372d:	jge    40374d <main@@Base+0x14dd>
  403733:	mov    rax,QWORD PTR [rbp-0x98]
  40373a:	mov    ecx,DWORD PTR [rax]
  40373c:	and    ecx,0x4
  40373f:	cmp    ecx,0x0
  403742:	jne    40374d <main@@Base+0x14dd>
  403748:	jmp    403944 <main@@Base+0x16d4>
  40374d:	cmp    DWORD PTR [rbp-0x9c],0x0
  403754:	jle    403774 <main@@Base+0x1504>
  40375a:	mov    rax,QWORD PTR [rbp-0x98]
  403761:	mov    ecx,DWORD PTR [rax]
  403763:	and    ecx,0x8
  403766:	cmp    ecx,0x0
  403769:	jne    403774 <main@@Base+0x1504>
  40376f:	jmp    403944 <main@@Base+0x16d4>
  403774:	jmp    4037c0 <main@@Base+0x1550>
  403779:	mov    rax,QWORD PTR [rbp-0x98]
  403780:	cmp    DWORD PTR [rax],0x1
  403783:	jne    4037bb <main@@Base+0x154b>
  403789:	mov    rdi,QWORD PTR [rbp-0x98]
  403790:	call   4048a0 <mmk_matcher_get_predicate@@Base>
  403795:	mov    QWORD PTR [rbp-0xa8],rax
  40379c:	mov    rax,QWORD PTR [rbp-0xa8]
  4037a3:	mov    edi,DWORD PTR [rbp-0x8]
  4037a6:	call   rax
  4037a8:	cmp    eax,0x0
  4037ab:	jne    4037b6 <main@@Base+0x1546>
  4037b1:	jmp    403944 <main@@Base+0x16d4>
  4037b6:	jmp    4037bb <main@@Base+0x154b>
  4037bb:	jmp    4037c0 <main@@Base+0x1550>
  4037c0:	jmp    4037c5 <main@@Base+0x1555>
  4037c5:	jmp    4037ff <main@@Base+0x158f>
  4037ca:	mov    eax,0x4
  4037cf:	mov    edx,eax
  4037d1:	lea    rcx,[rbp-0x8]
  4037d5:	mov    rsi,QWORD PTR [rbp-0x90]
  4037dc:	add    rsi,0x30
  4037e0:	add    rsi,0x18
  4037e4:	mov    rdi,rcx
  4037e7:	call   4057d0 <mmk_memcmp@@Base>
  4037ec:	cmp    eax,0x0
  4037ef:	je     4037fa <main@@Base+0x158a>
  4037f5:	jmp    403944 <main@@Base+0x16d4>
  4037fa:	jmp    4037ff <main@@Base+0x158f>
  4037ff:	mov    rax,QWORD PTR [rbp-0x90]
  403806:	cmp    DWORD PTR [rax+0x14],0x0
  40380a:	je     40382d <main@@Base+0x15bd>
  403810:	mov    rax,QWORD PTR [rbp-0x90]
  403817:	mov    ecx,DWORD PTR [rax+0x14]
  40381a:	mov    DWORD PTR [rbp-0xbc],ecx
  403820:	call   402050 <__errno_location@plt>
  403825:	mov    ecx,DWORD PTR [rbp-0xbc]
  40382b:	mov    DWORD PTR [rax],ecx
  40382d:	mov    rax,QWORD PTR [rbp-0x90]
  403834:	cmp    QWORD PTR [rax+0x20],0x0
  403839:	je     403893 <main@@Base+0x1623>
  40383f:	mov    rax,QWORD PTR [rbp-0x90]
  403846:	cmp    QWORD PTR [rax+0x18],0x0
  40384b:	jne    403893 <main@@Base+0x1623>
  403851:	jmp    403856 <main@@Base+0x15e6>
  403856:	jmp    40385b <main@@Base+0x15eb>
  40385b:	jmp    403860 <main@@Base+0x15f0>
  403860:	mov    rax,QWORD PTR [rbp-0x90]
  403867:	mov    rax,QWORD PTR [rax+0x20]
  40386b:	mov    edi,DWORD PTR [rbp-0x8]
  40386e:	call   rax
  403870:	mov    DWORD PTR [rbp-0xac],eax
  403876:	jmp    40387b <main@@Base+0x160b>
  40387b:	jmp    403880 <main@@Base+0x1610>
  403880:	jmp    403885 <main@@Base+0x1615>
  403885:	mov    eax,DWORD PTR [rbp-0xac]
  40388b:	mov    DWORD PTR [rbp-0x4],eax
  40388e:	jmp    40396e <main@@Base+0x16fe>
  403893:	mov    rax,QWORD PTR [rbp-0x90]
  40389a:	cmp    QWORD PTR [rax+0x20],0x0
  40389f:	je     4038fb <main@@Base+0x168b>
  4038a5:	mov    rax,QWORD PTR [rbp-0x90]
  4038ac:	cmp    QWORD PTR [rax+0x18],0x0
  4038b1:	je     4038fb <main@@Base+0x168b>
  4038b7:	jmp    4038bc <main@@Base+0x164c>
  4038bc:	jmp    4038c1 <main@@Base+0x1651>
  4038c1:	mov    rax,QWORD PTR [rbp-0x90]
  4038c8:	mov    rax,QWORD PTR [rax+0x20]
  4038cc:	mov    edi,DWORD PTR [rbp-0x8]
  4038cf:	call   rax
  4038d1:	mov    DWORD PTR [rbp-0xc0],eax
  4038d7:	jmp    4038dc <main@@Base+0x166c>
  4038dc:	jmp    4038e1 <main@@Base+0x1671>
  4038e1:	jmp    4038e6 <main@@Base+0x1676>
  4038e6:	mov    rax,QWORD PTR [rbp-0x90]
  4038ed:	mov    rax,QWORD PTR [rax+0x18]
  4038f1:	mov    ecx,DWORD PTR [rax]
  4038f3:	mov    DWORD PTR [rbp-0x4],ecx
  4038f6:	jmp    40396e <main@@Base+0x16fe>
  4038fb:	mov    rax,QWORD PTR [rbp-0x90]
  403902:	cmp    QWORD PTR [rax+0x18],0x0
  403907:	je     40392c <main@@Base+0x16bc>
  40390d:	jmp    403912 <main@@Base+0x16a2>
  403912:	jmp    403917 <main@@Base+0x16a7>
  403917:	mov    rax,QWORD PTR [rbp-0x90]
  40391e:	mov    rax,QWORD PTR [rax+0x18]
  403922:	mov    ecx,DWORD PTR [rax]
  403924:	mov    DWORD PTR [rbp-0x4],ecx
  403927:	jmp    40396e <main@@Base+0x16fe>
  40392c:	jmp    403931 <main@@Base+0x16c1>
  403931:	jmp    403936 <main@@Base+0x16c6>
  403936:	mov    eax,DWORD PTR [rip+0x578c]        # 4090c8 <__bss_start@@Base+0x8>
  40393c:	mov    DWORD PTR [rbp-0x4],eax
  40393f:	jmp    40396e <main@@Base+0x16fe>
  403944:	mov    rax,QWORD PTR [rbp-0x88]
  40394b:	mov    rax,QWORD PTR [rax+0x8]
  40394f:	mov    QWORD PTR [rbp-0x88],rax
  403956:	jmp    403662 <main@@Base+0x13f2>
  40395b:	jmp    403960 <main@@Base+0x16f0>
  403960:	jmp    403965 <main@@Base+0x16f5>
  403965:	mov    eax,DWORD PTR [rip+0x575d]        # 4090c8 <__bss_start@@Base+0x8>
  40396b:	mov    DWORD PTR [rbp-0x4],eax
  40396e:	mov    eax,DWORD PTR [rbp-0x4]
  403971:	add    rsp,0xc0
  403978:	pop    rbp
  403979:	ret    
  40397a:	nop    WORD PTR [rax+rax*1+0x0]
  403980:	push   rbp
  403981:	mov    rbp,rsp
  403984:	sub    rsp,0x360
  40398b:	test   al,al
  40398d:	vmovaps XMMWORD PTR [rbp-0x230],xmm7
  403995:	vmovaps XMMWORD PTR [rbp-0x240],xmm6
  40399d:	vmovaps XMMWORD PTR [rbp-0x250],xmm5
  4039a5:	vmovaps XMMWORD PTR [rbp-0x260],xmm4
  4039ad:	vmovaps XMMWORD PTR [rbp-0x270],xmm3
  4039b5:	vmovaps XMMWORD PTR [rbp-0x280],xmm2
  4039bd:	vmovaps XMMWORD PTR [rbp-0x290],xmm1
  4039c5:	vmovaps XMMWORD PTR [rbp-0x2a0],xmm0
  4039cd:	mov    DWORD PTR [rbp-0x2a4],edi
  4039d3:	mov    QWORD PTR [rbp-0x2b0],r9
  4039da:	mov    QWORD PTR [rbp-0x2b8],r8
  4039e1:	mov    QWORD PTR [rbp-0x2c0],rcx
  4039e8:	mov    QWORD PTR [rbp-0x2c8],rdx
  4039ef:	mov    QWORD PTR [rbp-0x2d0],rsi
  4039f6:	je     403a7c <main@@Base+0x180c>
  4039fc:	vmovaps xmm0,XMMWORD PTR [rbp-0x2a0]
  403a04:	vmovaps XMMWORD PTR [rbp-0x1f0],xmm0
  403a0c:	vmovaps xmm1,XMMWORD PTR [rbp-0x290]
  403a14:	vmovaps XMMWORD PTR [rbp-0x1e0],xmm1
  403a1c:	vmovaps xmm2,XMMWORD PTR [rbp-0x280]
  403a24:	vmovaps XMMWORD PTR [rbp-0x1d0],xmm2
  403a2c:	vmovaps xmm3,XMMWORD PTR [rbp-0x270]
  403a34:	vmovaps XMMWORD PTR [rbp-0x1c0],xmm3
  403a3c:	vmovaps xmm4,XMMWORD PTR [rbp-0x260]
  403a44:	vmovaps XMMWORD PTR [rbp-0x1b0],xmm4
  403a4c:	vmovaps xmm5,XMMWORD PTR [rbp-0x250]
  403a54:	vmovaps XMMWORD PTR [rbp-0x1a0],xmm5
  403a5c:	vmovaps xmm6,XMMWORD PTR [rbp-0x240]
  403a64:	vmovaps XMMWORD PTR [rbp-0x190],xmm6
  403a6c:	vmovaps xmm7,XMMWORD PTR [rbp-0x230]
  403a74:	vmovaps XMMWORD PTR [rbp-0x180],xmm7
  403a7c:	mov    rax,QWORD PTR [rbp-0x2b0]
  403a83:	mov    QWORD PTR [rbp-0x1f8],rax
  403a8a:	mov    rcx,QWORD PTR [rbp-0x2b8]
  403a91:	mov    QWORD PTR [rbp-0x200],rcx
  403a98:	mov    rdx,QWORD PTR [rbp-0x2c0]
  403a9f:	mov    QWORD PTR [rbp-0x208],rdx
  403aa6:	mov    rsi,QWORD PTR [rbp-0x2c8]
  403aad:	mov    QWORD PTR [rbp-0x210],rsi
  403ab4:	mov    rdi,QWORD PTR [rbp-0x2d0]
  403abb:	mov    QWORD PTR [rbp-0x218],rdi
  403ac2:	mov    r8d,DWORD PTR [rbp-0x2a4]
  403ac9:	lea    r9,[rbp-0x30]
  403acd:	mov    DWORD PTR [rbp-0x8],r8d
  403ad1:	lea    r10,[rip+0xad8]        # 4045b0 <main@@Base+0x2340>
  403ad8:	mov    QWORD PTR [rbp-0x10],r10
  403adc:	lea    r10,[rbp-0x220]
  403ae3:	mov    QWORD PTR [r9+0x10],r10
  403ae7:	lea    r10,[rbp+0x10]
  403aeb:	mov    QWORD PTR [r9+0x8],r10
  403aef:	mov    DWORD PTR [r9+0x4],0x30
  403af7:	mov    DWORD PTR [r9],0x8
  403afe:	call   404820 <mmk_matcher_ctx@@Base>
  403b03:	mov    QWORD PTR [rbp-0x58],rax
  403b07:	cmp    QWORD PTR [rbp-0x58],0x0
  403b0c:	je     40415a <main@@Base+0x1eea>
  403b12:	call   405370 <mmk_ctx@@Base>
  403b17:	mov    rdi,rax
  403b1a:	call   4051d0 <mmk_stub_context@@Base>
  403b1f:	mov    QWORD PTR [rbp-0x60],rax
  403b23:	mov    rax,QWORD PTR [rbp-0x58]
  403b27:	cmp    DWORD PTR [rax],0x0
  403b2a:	jne    403c1a <main@@Base+0x19aa>
  403b30:	mov    eax,0x50
  403b35:	mov    edi,eax
  403b37:	call   405c10 <mmk_malloc@@Base>
  403b3c:	mov    QWORD PTR [rbp-0x68],rax
  403b40:	mov    rax,QWORD PTR [rbp-0x68]
  403b44:	mov    QWORD PTR [rbp-0x2d8],rax
  403b4b:	call   405d60 <mmk_when_get_result@@Base>
  403b50:	mov    rdi,QWORD PTR [rax]
  403b53:	mov    rcx,QWORD PTR [rbp-0x2d8]
  403b5a:	mov    QWORD PTR [rcx+0x10],rdi
  403b5e:	mov    rdi,QWORD PTR [rax+0x8]
  403b62:	mov    QWORD PTR [rcx+0x18],rdi
  403b66:	mov    rdi,QWORD PTR [rax+0x10]
  403b6a:	mov    QWORD PTR [rcx+0x20],rdi
  403b6e:	mov    rax,QWORD PTR [rax+0x18]
  403b72:	mov    QWORD PTR [rcx+0x28],rax
  403b76:	mov    edx,DWORD PTR [rbp-0x8]
  403b79:	mov    rax,QWORD PTR [rbp-0x68]
  403b7d:	mov    DWORD PTR [rax+0x48],edx
  403b80:	lea    rax,[rbp-0x50]
  403b84:	lea    rcx,[rbp-0x30]
  403b88:	mov    QWORD PTR [rbp-0x70],0x0
  403b90:	mov    QWORD PTR [rbp-0x78],0x0
  403b98:	mov    rdx,rax
  403b9b:	mov    rsi,QWORD PTR [rcx+0x10]
  403b9f:	mov    QWORD PTR [rdx+0x10],rsi
  403ba3:	vmovdqu xmm0,XMMWORD PTR [rcx]
  403ba7:	vmovdqu XMMWORD PTR [rdx],xmm0
  403bab:	mov    rcx,QWORD PTR [rbp-0x10]
  403baf:	mov    edi,DWORD PTR [rbp-0x8]
  403bb2:	mov    rsi,rax
  403bb5:	lea    rdx,[rbp-0x70]
  403bb9:	lea    rax,[rbp-0x78]
  403bbd:	mov    QWORD PTR [rbp-0x2e0],rcx
  403bc4:	mov    rcx,rax
  403bc7:	mov    rax,QWORD PTR [rbp-0x2e0]
  403bce:	call   rax
  403bd0:	lea    rcx,[rbp-0x50]
  403bd4:	mov    DWORD PTR [rbp-0x7c],eax
  403bd7:	cmp    DWORD PTR [rbp-0x7c],0x0
  403bdb:	mov    QWORD PTR [rbp-0x2e8],rcx
  403be2:	je     403c00 <main@@Base+0x1990>
  403be8:	mov    rax,QWORD PTR [rbp-0x70]
  403bec:	mov    rcx,QWORD PTR [rbp-0x68]
  403bf0:	mov    QWORD PTR [rcx+0x38],rax
  403bf4:	mov    rax,QWORD PTR [rbp-0x78]
  403bf8:	mov    rcx,QWORD PTR [rbp-0x68]
  403bfc:	mov    QWORD PTR [rcx+0x40],rax
  403c00:	jmp    403c05 <main@@Base+0x1995>
  403c05:	mov    rdi,QWORD PTR [rbp-0x60]
  403c09:	mov    rax,QWORD PTR [rbp-0x68]
  403c0d:	mov    rsi,rax
  403c10:	call   405d80 <mmk_when_impl@@Base>
  403c15:	jmp    404141 <main@@Base+0x1ed1>
  403c1a:	mov    rax,QWORD PTR [rbp-0x58]
  403c1e:	cmp    DWORD PTR [rax],0x1
  403c21:	jne    40413c <main@@Base+0x1ecc>
  403c27:	mov    QWORD PTR [rbp-0x88],0x0
  403c32:	mov    rdi,QWORD PTR [rbp-0x60]
  403c36:	call   404aa0 <mmk_mock_params_begin@@Base>
  403c3b:	mov    QWORD PTR [rbp-0x90],rax
  403c42:	cmp    QWORD PTR [rbp-0x90],0x0
  403c4a:	je     4040e3 <main@@Base+0x1e73>
  403c50:	mov    rax,QWORD PTR [rbp-0x58]
  403c54:	mov    QWORD PTR [rbp-0x98],rax
  403c5b:	mov    rax,QWORD PTR [rbp-0x98]
  403c62:	cmp    QWORD PTR [rax+0x10],0x0
  403c67:	je     403da2 <main@@Base+0x1b32>
  403c6d:	mov    rax,QWORD PTR [rbp-0x98]
  403c74:	mov    rax,QWORD PTR [rax+0x10]
  403c78:	mov    QWORD PTR [rbp-0x98],rax
  403c7f:	mov    rax,QWORD PTR [rbp-0x98]
  403c86:	cmp    DWORD PTR [rax],0x0
  403c89:	jne    403c94 <main@@Base+0x1a24>
  403c8f:	jmp    403d9d <main@@Base+0x1b2d>
  403c94:	mov    rax,QWORD PTR [rbp-0x98]
  403c9b:	mov    ecx,DWORD PTR [rax]
  403c9d:	and    ecx,0x80000000
  403ca3:	cmp    ecx,0x0
  403ca6:	je     403d4a <main@@Base+0x1ada>
  403cac:	mov    eax,0x4
  403cb1:	mov    edx,eax
  403cb3:	mov    rcx,QWORD PTR [rbp-0x90]
  403cba:	add    rcx,0x18
  403cbe:	lea    rsi,[rbp-0x8]
  403cc2:	mov    rdi,rcx
  403cc5:	call   4057d0 <mmk_memcmp@@Base>
  403cca:	mov    DWORD PTR [rbp-0x9c],eax
  403cd0:	cmp    DWORD PTR [rbp-0x9c],0x0
  403cd7:	jne    403cf7 <main@@Base+0x1a87>
  403cdd:	mov    rax,QWORD PTR [rbp-0x98]
  403ce4:	mov    ecx,DWORD PTR [rax]
  403ce6:	and    ecx,0x2
  403ce9:	cmp    ecx,0x0
  403cec:	jne    403cf7 <main@@Base+0x1a87>
  403cf2:	jmp    4040bf <main@@Base+0x1e4f>
  403cf7:	cmp    DWORD PTR [rbp-0x9c],0x0
  403cfe:	jge    403d1e <main@@Base+0x1aae>
  403d04:	mov    rax,QWORD PTR [rbp-0x98]
  403d0b:	mov    ecx,DWORD PTR [rax]
  403d0d:	and    ecx,0x4
  403d10:	cmp    ecx,0x0
  403d13:	jne    403d1e <main@@Base+0x1aae>
  403d19:	jmp    4040bf <main@@Base+0x1e4f>
  403d1e:	cmp    DWORD PTR [rbp-0x9c],0x0
  403d25:	jle    403d45 <main@@Base+0x1ad5>
  403d2b:	mov    rax,QWORD PTR [rbp-0x98]
  403d32:	mov    ecx,DWORD PTR [rax]
  403d34:	and    ecx,0x8
  403d37:	cmp    ecx,0x0
  403d3a:	jne    403d45 <main@@Base+0x1ad5>
  403d40:	jmp    4040bf <main@@Base+0x1e4f>
  403d45:	jmp    403d98 <main@@Base+0x1b28>
  403d4a:	mov    rax,QWORD PTR [rbp-0x98]
  403d51:	cmp    DWORD PTR [rax],0x1
  403d54:	jne    403d93 <main@@Base+0x1b23>
  403d5a:	mov    rdi,QWORD PTR [rbp-0x98]
  403d61:	call   4048a0 <mmk_matcher_get_predicate@@Base>
  403d66:	mov    QWORD PTR [rbp-0xa8],rax
  403d6d:	mov    rax,QWORD PTR [rbp-0xa8]
  403d74:	mov    rdi,QWORD PTR [rbp-0x90]
  403d7b:	mov    edi,DWORD PTR [rdi+0x18]
  403d7e:	call   rax
  403d80:	cmp    eax,0x0
  403d83:	jne    403d8e <main@@Base+0x1b1e>
  403d89:	jmp    4040bf <main@@Base+0x1e4f>
  403d8e:	jmp    403d93 <main@@Base+0x1b23>
  403d93:	jmp    403d98 <main@@Base+0x1b28>
  403d98:	jmp    403d9d <main@@Base+0x1b2d>
  403d9d:	jmp    403dd3 <main@@Base+0x1b63>
  403da2:	mov    eax,0x4
  403da7:	mov    edx,eax
  403da9:	mov    rcx,QWORD PTR [rbp-0x90]
  403db0:	add    rcx,0x18
  403db4:	lea    rsi,[rbp-0x8]
  403db8:	mov    rdi,rcx
  403dbb:	call   4057d0 <mmk_memcmp@@Base>
  403dc0:	cmp    eax,0x0
  403dc3:	je     403dce <main@@Base+0x1b5e>
  403dc9:	jmp    4040bf <main@@Base+0x1e4f>
  403dce:	jmp    403dd3 <main@@Base+0x1b63>
  403dd3:	jmp    403dd8 <main@@Base+0x1b68>
  403dd8:	lea    rax,[rbp-0x50]
  403ddc:	lea    rcx,[rbp-0x30]
  403de0:	mov    QWORD PTR [rbp-0xb0],0x0
  403deb:	mov    QWORD PTR [rbp-0xb8],0x0
  403df6:	mov    rdx,rax
  403df9:	mov    rsi,QWORD PTR [rcx+0x10]
  403dfd:	mov    QWORD PTR [rdx+0x10],rsi
  403e01:	vmovdqu xmm0,XMMWORD PTR [rcx]
  403e05:	vmovdqu XMMWORD PTR [rdx],xmm0
  403e09:	mov    rcx,QWORD PTR [rbp-0x10]
  403e0d:	mov    edi,DWORD PTR [rbp-0x8]
  403e10:	mov    rsi,rax
  403e13:	lea    rdx,[rbp-0xb0]
  403e1a:	lea    rax,[rbp-0xb8]
  403e21:	mov    QWORD PTR [rbp-0x2f0],rcx
  403e28:	mov    rcx,rax
  403e2b:	mov    rax,QWORD PTR [rbp-0x2f0]
  403e32:	call   rax
  403e34:	lea    rcx,[rbp-0x50]
  403e38:	mov    DWORD PTR [rbp-0xbc],eax
  403e3e:	cmp    DWORD PTR [rbp-0xbc],0x0
  403e45:	mov    QWORD PTR [rbp-0x2f8],rcx
  403e4c:	je     403e6a <main@@Base+0x1bfa>
  403e52:	mov    rax,QWORD PTR [rbp-0x90]
  403e59:	mov    rax,QWORD PTR [rax+0x8]
  403e5d:	cmp    rax,QWORD PTR [rbp-0xb0]
  403e64:	je     403e6f <main@@Base+0x1bff>
  403e6a:	jmp    4040bf <main@@Base+0x1e4f>
  403e6f:	mov    QWORD PTR [rbp-0xc8],0x0
  403e7a:	mov    rax,QWORD PTR [rbp-0xc8]
  403e81:	cmp    rax,QWORD PTR [rbp-0xb0]
  403e88:	jae    404098 <main@@Base+0x1e28>
  403e8e:	mov    rax,QWORD PTR [rbp-0x90]
  403e95:	mov    rax,QWORD PTR [rax+0x10]
  403e99:	mov    rcx,QWORD PTR [rbp-0xc8]
  403ea0:	mov    rax,QWORD PTR [rax+rcx*8]
  403ea4:	mov    QWORD PTR [rbp-0xd0],rax
  403eab:	mov    rax,QWORD PTR [rbp-0xb8]
  403eb2:	mov    rcx,QWORD PTR [rbp-0xc8]
  403eb9:	mov    rax,QWORD PTR [rax+rcx*8]
  403ebd:	mov    QWORD PTR [rbp-0xd8],rax
  403ec4:	mov    rax,QWORD PTR [rbp-0xd0]
  403ecb:	mov    rax,QWORD PTR [rax]
  403ece:	mov    rcx,QWORD PTR [rbp-0xd8]
  403ed5:	cmp    rax,QWORD PTR [rcx]
  403ed8:	je     403ee3 <main@@Base+0x1c73>
  403ede:	jmp    4040bf <main@@Base+0x1e4f>
  403ee3:	mov    rax,QWORD PTR [rbp-0x98]
  403eea:	cmp    QWORD PTR [rax+0x10],0x0
  403eef:	je     404034 <main@@Base+0x1dc4>
  403ef5:	mov    rax,QWORD PTR [rbp-0x98]
  403efc:	mov    rax,QWORD PTR [rax+0x10]
  403f00:	mov    QWORD PTR [rbp-0x98],rax
  403f07:	mov    rax,QWORD PTR [rbp-0x98]
  403f0e:	cmp    DWORD PTR [rax],0x0
  403f11:	jne    403f1c <main@@Base+0x1cac>
  403f17:	jmp    40402f <main@@Base+0x1dbf>
  403f1c:	mov    rax,QWORD PTR [rbp-0x98]
  403f23:	mov    ecx,DWORD PTR [rax]
  403f25:	and    ecx,0x80000000
  403f2b:	cmp    ecx,0x0
  403f2e:	je     403fdf <main@@Base+0x1d6f>
  403f34:	mov    rax,QWORD PTR [rbp-0xd0]
  403f3b:	add    rax,0x8
  403f3f:	mov    rcx,QWORD PTR [rbp-0xd8]
  403f46:	add    rcx,0x8
  403f4a:	mov    rdx,QWORD PTR [rbp-0xd8]
  403f51:	mov    rdx,QWORD PTR [rdx]
  403f54:	mov    rdi,rax
  403f57:	mov    rsi,rcx
  403f5a:	call   4057d0 <mmk_memcmp@@Base>
  403f5f:	mov    DWORD PTR [rbp-0xdc],eax
  403f65:	cmp    DWORD PTR [rbp-0xdc],0x0
  403f6c:	jne    403f8c <main@@Base+0x1d1c>
  403f72:	mov    rax,QWORD PTR [rbp-0x98]
  403f79:	mov    ecx,DWORD PTR [rax]
  403f7b:	and    ecx,0x2
  403f7e:	cmp    ecx,0x0
  403f81:	jne    403f8c <main@@Base+0x1d1c>
  403f87:	jmp    4040bf <main@@Base+0x1e4f>
  403f8c:	cmp    DWORD PTR [rbp-0xdc],0x0
  403f93:	jge    403fb3 <main@@Base+0x1d43>
  403f99:	mov    rax,QWORD PTR [rbp-0x98]
  403fa0:	mov    ecx,DWORD PTR [rax]
  403fa2:	and    ecx,0x4
  403fa5:	cmp    ecx,0x0
  403fa8:	jne    403fb3 <main@@Base+0x1d43>
  403fae:	jmp    4040bf <main@@Base+0x1e4f>
  403fb3:	cmp    DWORD PTR [rbp-0xdc],0x0
  403fba:	jle    403fda <main@@Base+0x1d6a>
  403fc0:	mov    rax,QWORD PTR [rbp-0x98]
  403fc7:	mov    ecx,DWORD PTR [rax]
  403fc9:	and    ecx,0x8
  403fcc:	cmp    ecx,0x0
  403fcf:	jne    403fda <main@@Base+0x1d6a>
  403fd5:	jmp    4040bf <main@@Base+0x1e4f>
  403fda:	jmp    40402a <main@@Base+0x1dba>
  403fdf:	mov    rax,QWORD PTR [rbp-0x98]
  403fe6:	cmp    DWORD PTR [rax],0x1
  403fe9:	jne    404025 <main@@Base+0x1db5>
  403fef:	mov    rdi,QWORD PTR [rbp-0x98]
  403ff6:	call   4048a0 <mmk_matcher_get_predicate@@Base>
  403ffb:	mov    QWORD PTR [rbp-0xe8],rax
  404002:	mov    rax,QWORD PTR [rbp-0xe8]
  404009:	mov    rdi,QWORD PTR [rbp-0xd0]
  404010:	call   rax
  404012:	cmp    eax,0x0
  404015:	jne    404020 <main@@Base+0x1db0>
  40401b:	jmp    4040bf <main@@Base+0x1e4f>
  404020:	jmp    404025 <main@@Base+0x1db5>
  404025:	jmp    40402a <main@@Base+0x1dba>
  40402a:	jmp    40402f <main@@Base+0x1dbf>
  40402f:	jmp    404072 <main@@Base+0x1e02>
  404034:	mov    rax,QWORD PTR [rbp-0xd0]
  40403b:	add    rax,0x8
  40403f:	mov    rcx,QWORD PTR [rbp-0xd8]
  404046:	add    rcx,0x8
  40404a:	mov    rdx,QWORD PTR [rbp-0xd8]
  404051:	mov    rdx,QWORD PTR [rdx]
  404054:	mov    rdi,rax
  404057:	mov    rsi,rcx
  40405a:	call   4057d0 <mmk_memcmp@@Base>
  40405f:	cmp    eax,0x0
  404062:	je     40406d <main@@Base+0x1dfd>
  404068:	jmp    4040bf <main@@Base+0x1e4f>
  40406d:	jmp    404072 <main@@Base+0x1e02>
  404072:	mov    rax,QWORD PTR [rbp-0xd8]
  404079:	mov    rdi,rax
  40407c:	call   405c30 <mmk_free@@Base>
  404081:	mov    rax,QWORD PTR [rbp-0xc8]
  404088:	add    rax,0x1
  40408c:	mov    QWORD PTR [rbp-0xc8],rax
  404093:	jmp    403e7a <main@@Base+0x1c0a>
  404098:	mov    rax,QWORD PTR [rbp-0xb8]
  40409f:	mov    rdi,rax
  4040a2:	call   405c30 <mmk_free@@Base>
  4040a7:	mov    rax,QWORD PTR [rbp-0x90]
  4040ae:	mov    rax,QWORD PTR [rax]
  4040b1:	add    rax,QWORD PTR [rbp-0x88]
  4040b8:	mov    QWORD PTR [rbp-0x88],rax
  4040bf:	jmp    4040c4 <main@@Base+0x1e54>
  4040c4:	mov    rdi,QWORD PTR [rbp-0x60]
  4040c8:	mov    rax,QWORD PTR [rbp-0x90]
  4040cf:	mov    rsi,rax
  4040d2:	call   404ac0 <mmk_mock_params_next@@Base>
  4040d7:	mov    QWORD PTR [rbp-0x90],rax
  4040de:	jmp    403c42 <main@@Base+0x19d2>
  4040e3:	mov    rax,QWORD PTR [rbp-0x58]
  4040e7:	mov    QWORD PTR [rbp-0xf0],rax
  4040ee:	cmp    QWORD PTR [rbp-0xf0],0x0
  4040f6:	je     404130 <main@@Base+0x1ec0>
  4040fc:	mov    rax,QWORD PTR [rbp-0xf0]
  404103:	mov    rax,QWORD PTR [rax+0x10]
  404107:	mov    QWORD PTR [rbp-0xf8],rax
  40410e:	mov    rax,QWORD PTR [rbp-0xf0]
  404115:	mov    rdi,rax
  404118:	call   405c30 <mmk_free@@Base>
  40411d:	mov    rax,QWORD PTR [rbp-0xf8]
  404124:	mov    QWORD PTR [rbp-0xf0],rax
  40412b:	jmp    4040ee <main@@Base+0x1e7e>
  404130:	mov    rdi,QWORD PTR [rbp-0x88]
  404137:	call   405580 <mmk_verify_set_times@@Base>
  40413c:	jmp    404141 <main@@Base+0x1ed1>
  404141:	lea    rax,[rbp-0x30]
  404145:	mov    ecx,DWORD PTR [rip+0x4f81]        # 4090cc <__bss_start@@Base+0xc>
  40414b:	mov    DWORD PTR [rbp-0x4],ecx
  40414e:	mov    QWORD PTR [rbp-0x300],rax
  404155:	jmp    40459c <main@@Base+0x232c>
  40415a:	mov    QWORD PTR [rbp-0x120],0x0
  404165:	mov    QWORD PTR [rbp-0x118],0x0
  404170:	mov    QWORD PTR [rbp-0x110],0x0
  40417b:	mov    eax,DWORD PTR [rbp-0x8]
  40417e:	mov    DWORD PTR [rbp-0x108],eax
  404184:	lea    rcx,[rbp-0x120]
  40418b:	mov    QWORD PTR [rbp-0x100],rcx
  404192:	lea    rax,[rbp-0x50]
  404196:	lea    rcx,[rbp-0x30]
  40419a:	mov    QWORD PTR [rbp-0x128],0x0
  4041a5:	mov    QWORD PTR [rbp-0x130],0x0
  4041b0:	mov    rdx,rax
  4041b3:	mov    rsi,QWORD PTR [rcx+0x10]
  4041b7:	mov    QWORD PTR [rdx+0x10],rsi
  4041bb:	vmovdqu xmm0,XMMWORD PTR [rcx]
  4041bf:	vmovdqu XMMWORD PTR [rdx],xmm0
  4041c3:	mov    rcx,QWORD PTR [rbp-0x10]
  4041c7:	mov    edi,DWORD PTR [rbp-0x8]
  4041ca:	mov    rsi,rax
  4041cd:	lea    rdx,[rbp-0x128]
  4041d4:	lea    rax,[rbp-0x130]
  4041db:	mov    QWORD PTR [rbp-0x308],rcx
  4041e2:	mov    rcx,rax
  4041e5:	mov    rax,QWORD PTR [rbp-0x308]
  4041ec:	call   rax
  4041ee:	lea    rcx,[rbp-0x50]
  4041f2:	mov    DWORD PTR [rbp-0x134],eax
  4041f8:	cmp    DWORD PTR [rbp-0x134],0x0
  4041ff:	mov    QWORD PTR [rbp-0x310],rcx
  404206:	je     404230 <main@@Base+0x1fc0>
  40420c:	mov    rax,QWORD PTR [rbp-0x128]
  404213:	mov    rcx,QWORD PTR [rbp-0x100]
  40421a:	mov    QWORD PTR [rcx+0x8],rax
  40421e:	mov    rax,QWORD PTR [rbp-0x130]
  404225:	mov    rcx,QWORD PTR [rbp-0x100]
  40422c:	mov    QWORD PTR [rcx+0x10],rax
  404230:	jmp    404235 <main@@Base+0x1fc5>
  404235:	mov    eax,0x20
  40423a:	mov    esi,eax
  40423c:	mov    rcx,QWORD PTR [rbp-0x100]
  404243:	mov    rdi,rcx
  404246:	call   405610 <mmk_verify_register_call@@Base>
  40424b:	call   404ae0 <mmk_mock_get_params@@Base>
  404250:	mov    QWORD PTR [rbp-0x140],rax
  404257:	cmp    QWORD PTR [rbp-0x140],0x0
  40425f:	je     404588 <main@@Base+0x2318>
  404265:	mov    rax,QWORD PTR [rbp-0x140]
  40426c:	mov    QWORD PTR [rbp-0x148],rax
  404273:	mov    rax,QWORD PTR [rbp-0x140]
  40427a:	mov    rax,QWORD PTR [rax]
  40427d:	mov    QWORD PTR [rbp-0x150],rax
  404284:	mov    rax,QWORD PTR [rbp-0x150]
  40428b:	cmp    QWORD PTR [rax+0x10],0x0
  404290:	je     4043bf <main@@Base+0x214f>
  404296:	mov    rax,QWORD PTR [rbp-0x150]
  40429d:	mov    rax,QWORD PTR [rax+0x10]
  4042a1:	mov    QWORD PTR [rbp-0x150],rax
  4042a8:	mov    rax,QWORD PTR [rbp-0x150]
  4042af:	cmp    DWORD PTR [rax],0x0
  4042b2:	jne    4042bd <main@@Base+0x204d>
  4042b8:	jmp    4043ba <main@@Base+0x214a>
  4042bd:	mov    rax,QWORD PTR [rbp-0x150]
  4042c4:	mov    ecx,DWORD PTR [rax]
  4042c6:	and    ecx,0x80000000
  4042cc:	cmp    ecx,0x0
  4042cf:	je     40436e <main@@Base+0x20fe>
  4042d5:	mov    eax,0x4
  4042da:	mov    edx,eax
  4042dc:	lea    rcx,[rbp-0x8]
  4042e0:	mov    rsi,rcx
  4042e3:	mov    rdi,rsi
  4042e6:	mov    rsi,rcx
  4042e9:	call   4057d0 <mmk_memcmp@@Base>
  4042ee:	mov    DWORD PTR [rbp-0x154],eax
  4042f4:	cmp    DWORD PTR [rbp-0x154],0x0
  4042fb:	jne    40431b <main@@Base+0x20ab>
  404301:	mov    rax,QWORD PTR [rbp-0x150]
  404308:	mov    ecx,DWORD PTR [rax]
  40430a:	and    ecx,0x2
  40430d:	cmp    ecx,0x0
  404310:	jne    40431b <main@@Base+0x20ab>
  404316:	jmp    404571 <main@@Base+0x2301>
  40431b:	cmp    DWORD PTR [rbp-0x154],0x0
  404322:	jge    404342 <main@@Base+0x20d2>
  404328:	mov    rax,QWORD PTR [rbp-0x150]
  40432f:	mov    ecx,DWORD PTR [rax]
  404331:	and    ecx,0x4
  404334:	cmp    ecx,0x0
  404337:	jne    404342 <main@@Base+0x20d2>
  40433d:	jmp    404571 <main@@Base+0x2301>
  404342:	cmp    DWORD PTR [rbp-0x154],0x0
  404349:	jle    404369 <main@@Base+0x20f9>
  40434f:	mov    rax,QWORD PTR [rbp-0x150]
  404356:	mov    ecx,DWORD PTR [rax]
  404358:	and    ecx,0x8
  40435b:	cmp    ecx,0x0
  40435e:	jne    404369 <main@@Base+0x20f9>
  404364:	jmp    404571 <main@@Base+0x2301>
  404369:	jmp    4043b5 <main@@Base+0x2145>
  40436e:	mov    rax,QWORD PTR [rbp-0x150]
  404375:	cmp    DWORD PTR [rax],0x1
  404378:	jne    4043b0 <main@@Base+0x2140>
  40437e:	mov    rdi,QWORD PTR [rbp-0x150]
  404385:	call   4048a0 <mmk_matcher_get_predicate@@Base>
  40438a:	mov    QWORD PTR [rbp-0x160],rax
  404391:	mov    rax,QWORD PTR [rbp-0x160]
  404398:	mov    edi,DWORD PTR [rbp-0x8]
  40439b:	call   rax
  40439d:	cmp    eax,0x0
  4043a0:	jne    4043ab <main@@Base+0x213b>
  4043a6:	jmp    404571 <main@@Base+0x2301>
  4043ab:	jmp    4043b0 <main@@Base+0x2140>
  4043b0:	jmp    4043b5 <main@@Base+0x2145>
  4043b5:	jmp    4043ba <main@@Base+0x214a>
  4043ba:	jmp    4043f4 <main@@Base+0x2184>
  4043bf:	mov    eax,0x4
  4043c4:	mov    edx,eax
  4043c6:	lea    rcx,[rbp-0x8]
  4043ca:	mov    rsi,QWORD PTR [rbp-0x148]
  4043d1:	add    rsi,0x30
  4043d5:	add    rsi,0x18
  4043d9:	mov    rdi,rcx
  4043dc:	call   4057d0 <mmk_memcmp@@Base>
  4043e1:	cmp    eax,0x0
  4043e4:	je     4043ef <main@@Base+0x217f>
  4043ea:	jmp    404571 <main@@Base+0x2301>
  4043ef:	jmp    4043f4 <main@@Base+0x2184>
  4043f4:	mov    rax,QWORD PTR [rbp-0x148]
  4043fb:	cmp    DWORD PTR [rax+0x14],0x0
  4043ff:	je     404422 <main@@Base+0x21b2>
  404405:	mov    rax,QWORD PTR [rbp-0x148]
  40440c:	mov    ecx,DWORD PTR [rax+0x14]
  40440f:	mov    DWORD PTR [rbp-0x314],ecx
  404415:	call   402050 <__errno_location@plt>
  40441a:	mov    ecx,DWORD PTR [rbp-0x314]
  404420:	mov    DWORD PTR [rax],ecx
  404422:	mov    rax,QWORD PTR [rbp-0x148]
  404429:	cmp    QWORD PTR [rax+0x20],0x0
  40442e:	je     4044a3 <main@@Base+0x2233>
  404434:	mov    rax,QWORD PTR [rbp-0x148]
  40443b:	cmp    QWORD PTR [rax+0x18],0x0
  404440:	jne    4044a3 <main@@Base+0x2233>
  404446:	jmp    40444b <main@@Base+0x21db>
  40444b:	lea    rax,[rbp-0x50]
  40444f:	lea    rcx,[rbp-0x30]
  404453:	mov    rdx,rax
  404456:	mov    rsi,QWORD PTR [rcx+0x10]
  40445a:	mov    QWORD PTR [rdx+0x10],rsi
  40445e:	vmovdqu xmm0,XMMWORD PTR [rcx]
  404462:	vmovdqu XMMWORD PTR [rdx],xmm0
  404466:	mov    rcx,QWORD PTR [rbp-0x148]
  40446d:	mov    rcx,QWORD PTR [rcx+0x20]
  404471:	mov    edi,DWORD PTR [rbp-0x8]
  404474:	mov    rsi,rax
  404477:	call   rcx
  404479:	lea    rcx,[rbp-0x30]
  40447d:	lea    rdx,[rbp-0x50]
  404481:	mov    DWORD PTR [rbp-0x164],eax
  404487:	mov    eax,DWORD PTR [rbp-0x164]
  40448d:	mov    DWORD PTR [rbp-0x4],eax
  404490:	mov    QWORD PTR [rbp-0x320],rdx
  404497:	mov    QWORD PTR [rbp-0x328],rcx
  40449e:	jmp    40459c <main@@Base+0x232c>
  4044a3:	mov    rax,QWORD PTR [rbp-0x148]
  4044aa:	cmp    QWORD PTR [rax+0x20],0x0
  4044af:	je     404526 <main@@Base+0x22b6>
  4044b5:	mov    rax,QWORD PTR [rbp-0x148]
  4044bc:	cmp    QWORD PTR [rax+0x18],0x0
  4044c1:	je     404526 <main@@Base+0x22b6>
  4044c7:	lea    rax,[rbp-0x50]
  4044cb:	lea    rcx,[rbp-0x30]
  4044cf:	mov    rdx,rax
  4044d2:	mov    rsi,QWORD PTR [rcx+0x10]
  4044d6:	mov    QWORD PTR [rdx+0x10],rsi
  4044da:	vmovdqu xmm0,XMMWORD PTR [rcx]
  4044de:	vmovdqu XMMWORD PTR [rdx],xmm0
  4044e2:	mov    rcx,QWORD PTR [rbp-0x148]
  4044e9:	mov    rcx,QWORD PTR [rcx+0x20]
  4044ed:	mov    edi,DWORD PTR [rbp-0x8]
  4044f0:	mov    rsi,rax
  4044f3:	call   rcx
  4044f5:	lea    rcx,[rbp-0x30]
  4044f9:	lea    rdx,[rbp-0x50]
  4044fd:	mov    rsi,QWORD PTR [rbp-0x148]
  404504:	mov    rsi,QWORD PTR [rsi+0x18]
  404508:	mov    edi,DWORD PTR [rsi]
  40450a:	mov    DWORD PTR [rbp-0x4],edi
  40450d:	mov    DWORD PTR [rbp-0x32c],eax
  404513:	mov    QWORD PTR [rbp-0x338],rdx
  40451a:	mov    QWORD PTR [rbp-0x340],rcx
  404521:	jmp    40459c <main@@Base+0x232c>
  404526:	mov    rax,QWORD PTR [rbp-0x148]
  40452d:	cmp    QWORD PTR [rax+0x18],0x0
  404532:	je     404558 <main@@Base+0x22e8>
  404538:	lea    rax,[rbp-0x30]
  40453c:	mov    rcx,QWORD PTR [rbp-0x148]
  404543:	mov    rcx,QWORD PTR [rcx+0x18]
  404547:	mov    edx,DWORD PTR [rcx]
  404549:	mov    DWORD PTR [rbp-0x4],edx
  40454c:	mov    QWORD PTR [rbp-0x348],rax
  404553:	jmp    40459c <main@@Base+0x232c>
  404558:	lea    rax,[rbp-0x30]
  40455c:	mov    ecx,DWORD PTR [rip+0x4b6a]        # 4090cc <__bss_start@@Base+0xc>
  404562:	mov    DWORD PTR [rbp-0x4],ecx
  404565:	mov    QWORD PTR [rbp-0x350],rax
  40456c:	jmp    40459c <main@@Base+0x232c>
  404571:	mov    rax,QWORD PTR [rbp-0x140]
  404578:	mov    rax,QWORD PTR [rax+0x8]
  40457c:	mov    QWORD PTR [rbp-0x140],rax
  404583:	jmp    404257 <main@@Base+0x1fe7>
  404588:	lea    rax,[rbp-0x30]
  40458c:	mov    ecx,DWORD PTR [rip+0x4b3a]        # 4090cc <__bss_start@@Base+0xc>
  404592:	mov    DWORD PTR [rbp-0x4],ecx
  404595:	mov    QWORD PTR [rbp-0x358],rax
  40459c:	mov    eax,DWORD PTR [rbp-0x4]
  40459f:	add    rsp,0x360
  4045a6:	pop    rbp
  4045a7:	ret    
  4045a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4045b0:	push   rbp
  4045b1:	mov    rbp,rsp
  4045b4:	sub    rsp,0x50
  4045b8:	mov    DWORD PTR [rbp-0x8],edi
  4045bb:	mov    QWORD PTR [rbp-0x10],rsi
  4045bf:	mov    QWORD PTR [rbp-0x18],rdx
  4045c3:	mov    QWORD PTR [rbp-0x20],rcx
  4045c7:	cmp    DWORD PTR [rbp-0x8],0x0
  4045cb:	jg     4045dd <main@@Base+0x236d>
  4045d1:	mov    DWORD PTR [rbp-0x4],0x0
  4045d8:	jmp    4046dd <main@@Base+0x246d>
  4045dd:	movsxd rax,DWORD PTR [rbp-0x8]
  4045e1:	shl    rax,0x3
  4045e5:	mov    rdi,rax
  4045e8:	call   405c10 <mmk_malloc@@Base>
  4045ed:	mov    QWORD PTR [rbp-0x28],rax
  4045f1:	mov    DWORD PTR [rbp-0x2c],0x0
  4045f8:	mov    eax,DWORD PTR [rbp-0x2c]
  4045fb:	cmp    eax,DWORD PTR [rbp-0x8]
  4045fe:	jge    4046c0 <main@@Base+0x2450>
  404604:	jmp    404609 <main@@Base+0x2399>
  404609:	mov    eax,0xc
  40460e:	mov    edi,eax
  404610:	call   405c10 <mmk_malloc@@Base>
  404615:	mov    rdi,QWORD PTR [rbp-0x28]
  404619:	movsxd rcx,DWORD PTR [rbp-0x2c]
  40461d:	mov    QWORD PTR [rdi+rcx*8],rax
  404621:	mov    rax,QWORD PTR [rbp-0x28]
  404625:	movsxd rcx,DWORD PTR [rbp-0x2c]
  404629:	mov    rax,QWORD PTR [rax+rcx*8]
  40462d:	mov    QWORD PTR [rax],0x4
  404634:	mov    rax,QWORD PTR [rbp-0x10]
  404638:	mov    edx,DWORD PTR [rax]
  40463a:	cmp    edx,0x28
  40463d:	mov    QWORD PTR [rbp-0x38],rax
  404641:	mov    DWORD PTR [rbp-0x3c],edx
  404644:	ja     404666 <main@@Base+0x23f6>
  40464a:	mov    eax,DWORD PTR [rbp-0x3c]
  40464d:	movsxd rcx,eax
  404650:	mov    rdx,QWORD PTR [rbp-0x38]
  404654:	add    rcx,QWORD PTR [rdx+0x10]
  404658:	add    eax,0x8
  40465b:	mov    DWORD PTR [rdx],eax
  40465d:	mov    QWORD PTR [rbp-0x48],rcx
  404661:	jmp    40467d <main@@Base+0x240d>
  404666:	mov    rax,QWORD PTR [rbp-0x38]
  40466a:	mov    rcx,QWORD PTR [rax+0x8]
  40466e:	mov    rdx,rcx
  404671:	add    rcx,0x8
  404675:	mov    QWORD PTR [rax+0x8],rcx
  404679:	mov    QWORD PTR [rbp-0x48],rdx
  40467d:	mov    rax,QWORD PTR [rbp-0x48]
  404681:	mov    ecx,0x4
  404686:	mov    edx,ecx
  404688:	mov    ecx,DWORD PTR [rax]
  40468a:	mov    DWORD PTR [rbp-0x30],ecx
  40468d:	mov    rax,QWORD PTR [rbp-0x28]
  404691:	movsxd rsi,DWORD PTR [rbp-0x2c]
  404695:	mov    rax,QWORD PTR [rax+rsi*8]
  404699:	add    rax,0x8
  40469d:	lea    rsi,[rbp-0x30]
  4046a1:	mov    rdi,rax
  4046a4:	call   405810 <mmk_memcpy@@Base>
  4046a9:	mov    QWORD PTR [rbp-0x50],rax
  4046ad:	jmp    4046b2 <main@@Base+0x2442>
  4046b2:	mov    eax,DWORD PTR [rbp-0x2c]
  4046b5:	add    eax,0x1
  4046b8:	mov    DWORD PTR [rbp-0x2c],eax
  4046bb:	jmp    4045f8 <main@@Base+0x2388>
  4046c0:	movsxd rax,DWORD PTR [rbp-0x8]
  4046c4:	mov    rcx,QWORD PTR [rbp-0x18]
  4046c8:	mov    QWORD PTR [rcx],rax
  4046cb:	mov    rax,QWORD PTR [rbp-0x28]
  4046cf:	mov    rcx,QWORD PTR [rbp-0x20]
  4046d3:	mov    QWORD PTR [rcx],rax
  4046d6:	mov    DWORD PTR [rbp-0x4],0x1
  4046dd:	mov    eax,DWORD PTR [rbp-0x4]
  4046e0:	add    rsp,0x50
  4046e4:	pop    rbp
  4046e5:	ret    
  4046e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004046f0 <mmk_init@@Base>:
  4046f0:	push   rax
  4046f1:	cmp    BYTE PTR [rip+0x49d8],0x0        # 4090d0 <__bss_start@@Base+0x10>
  4046f8:	jne    40471b <mmk_init@@Base+0x2b>
  4046fa:	call   404b00 <plt_init_ctx@@Base>
  4046ff:	mov    QWORD PTR [rip+0x49d2],rax        # 4090d8 <__bss_start@@Base+0x18>
  404706:	cmp    rax,0xffffffffffffffff
  40470a:	je     40471d <mmk_init@@Base+0x2d>
  40470c:	mov    rdi,rax
  40470f:	call   405c40 <mmk_init_vital_functions@@Base>
  404714:	mov    BYTE PTR [rip+0x49b5],0x1        # 4090d0 <__bss_start@@Base+0x10>
  40471b:	pop    rax
  40471c:	ret    
  40471d:	mov    rax,QWORD PTR [rip+0x48d4]        # 408ff8 <stderr@GLIBC_2.2.5>
  404724:	mov    rdi,QWORD PTR [rax]
  404727:	lea    rsi,[rip+0x18dc]        # 40600a <_IO_stdin_used@@Base+0xa>
  40472e:	lea    rdx,[rip+0x1b2c]        # 406261 <_IO_stdin_used@@Base+0x261>
  404735:	lea    r8,[rip+0x1b77]        # 4062b3 <_IO_stdin_used@@Base+0x2b3>
  40473c:	mov    ecx,0x2d
  404741:	xor    eax,eax
  404743:	call   4020e0 <fprintf@plt>
  404748:	call   402040 <abort@plt>
  40474d:	nop    DWORD PTR [rax]

0000000000404750 <mmk_plt_ctx@@Base>:
  404750:	cmp    BYTE PTR [rip+0x4979],0x0        # 4090d0 <__bss_start@@Base+0x10>
  404757:	je     404761 <mmk_plt_ctx@@Base+0x11>
  404759:	mov    rax,QWORD PTR [rip+0x4978]        # 4090d8 <__bss_start@@Base+0x18>
  404760:	ret    
  404761:	push   rax
  404762:	mov    rax,QWORD PTR [rip+0x488f]        # 408ff8 <stderr@GLIBC_2.2.5>
  404769:	mov    rdi,QWORD PTR [rax]
  40476c:	lea    rsi,[rip+0x1897]        # 40600a <_IO_stdin_used@@Base+0xa>
  404773:	lea    rdx,[rip+0x1ae7]        # 406261 <_IO_stdin_used@@Base+0x261>
  40477a:	lea    r8,[rip+0x1b49]        # 4062ca <_IO_stdin_used@@Base+0x2ca>
  404781:	mov    ecx,0x36
  404786:	xor    eax,eax
  404788:	call   4020e0 <fprintf@plt>
  40478d:	call   402040 <abort@plt>
  404792:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40479c:	nop    DWORD PTR [rax+0x0]

00000000004047a0 <mmk_reset@@Base>:
  4047a0:	test   rdi,rdi
  4047a3:	je     4047bc <mmk_reset@@Base+0x1c>
  4047a5:	push   rax
  4047a6:	call   405460 <mmk_ask_ctx@@Base>
  4047ab:	mov    rdi,rax
  4047ae:	call   4051d0 <mmk_stub_context@@Base>
  4047b3:	mov    rdi,rax
  4047b6:	pop    rax
  4047b7:	jmp    404a00 <mmk_mock_destroy_internal@@Base>
  4047bc:	ret    
  4047bd:	nop    DWORD PTR [rax]

00000000004047c0 <mmk_matcher_init@@Base>:
  4047c0:	push   rbp
  4047c1:	push   rbx
  4047c2:	push   rax
  4047c3:	mov    ebp,edi
  4047c5:	mov    edi,0x18
  4047ca:	call   405c10 <mmk_malloc@@Base>
  4047cf:	mov    rbx,rax
  4047d2:	mov    DWORD PTR [rax],ebp
  4047d4:	vxorps xmm0,xmm0,xmm0
  4047d8:	vmovups XMMWORD PTR [rax+0x4],xmm0
  4047dd:	mov    DWORD PTR [rax+0x14],0x0
  4047e4:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4047f0:	mov    QWORD PTR [rax-0x28],rbx
  4047f7:	add    rsp,0x8
  4047fb:	pop    rbx
  4047fc:	pop    rbp
  4047fd:	ret    
  4047fe:	xchg   ax,ax

0000000000404800 <mmk_matcher_term@@Base>:
  404800:	push   rax
  404801:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  40480d:	mov    QWORD PTR [rax-0x28],0x0
  404818:	pop    rax
  404819:	ret    
  40481a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404820 <mmk_matcher_ctx@@Base>:
  404820:	push   rax
  404821:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  40482d:	mov    rax,QWORD PTR [rax-0x28]
  404834:	pop    rcx
  404835:	ret    
  404836:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404840 <mmk_matcher_add@@Base>:
  404840:	push   rbp
  404841:	push   r14
  404843:	push   rbx
  404844:	mov    ebp,esi
  404846:	mov    r14d,edi
  404849:	mov    edi,0x18
  40484e:	call   405c10 <mmk_malloc@@Base>
  404853:	mov    rbx,rax
  404856:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  404862:	mov    rax,QWORD PTR [rax-0x28]
  404869:	movsxd rcx,ebp
  40486c:	mov    DWORD PTR [rbx],r14d
  40486f:	mov    QWORD PTR [rbx+0x8],rcx
  404873:	mov    QWORD PTR [rbx+0x10],0x0
  40487b:	nop    DWORD PTR [rax+rax*1+0x0]
  404880:	mov    rdx,rax
  404883:	mov    rax,QWORD PTR [rax+0x10]
  404887:	test   rax,rax
  40488a:	je     404892 <mmk_matcher_add@@Base+0x52>
  40488c:	cmp    QWORD PTR [rax+0x8],rcx
  404890:	jb     404880 <mmk_matcher_add@@Base+0x40>
  404892:	mov    QWORD PTR [rbx+0x10],rax
  404896:	mov    QWORD PTR [rdx+0x10],rbx
  40489a:	pop    rbx
  40489b:	pop    r14
  40489d:	pop    rbp
  40489e:	ret    
  40489f:	nop

00000000004048a0 <mmk_matcher_get_predicate@@Base>:
  4048a0:	lea    rax,[rdi+0x18]
  4048a4:	ret    
  4048a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4048af:	nop

00000000004048b0 <mmk_mock_create_internal@@Base>:
  4048b0:	push   rbp
  4048b1:	push   r15
  4048b3:	push   r14
  4048b5:	push   r13
  4048b7:	push   r12
  4048b9:	push   rbx
  4048ba:	push   rax
  4048bb:	mov    r15,rsi
  4048be:	mov    r14,rdi
  4048c1:	call   4046f0 <mmk_init@@Base>
  4048c6:	mov    edi,0x28
  4048cb:	call   405c10 <mmk_malloc@@Base>
  4048d0:	test   rax,rax
  4048d3:	je     4049ac <mmk_mock_create_internal@@Base+0xfc>
  4048d9:	mov    r13,rax
  4048dc:	vxorps xmm0,xmm0,xmm0
  4048e0:	vmovups YMMWORD PTR [rax],ymm0
  4048e4:	mov    QWORD PTR [rax+0x20],0x0
  4048ec:	mov    esi,0x40
  4048f1:	mov    rdi,r14
  4048f4:	vzeroupper 
  4048f7:	call   405b10 <mmk_strchr@@Base>
  4048fc:	mov    rbx,rax
  4048ff:	test   rax,rax
  404902:	je     40490c <mmk_mock_create_internal@@Base+0x5c>
  404904:	mov    rbp,rbx
  404907:	sub    rbp,r14
  40490a:	jmp    404917 <mmk_mock_create_internal@@Base+0x67>
  40490c:	mov    rdi,r14
  40490f:	call   405bc0 <mmk_strlen@@Base>
  404914:	mov    rbp,rax
  404917:	lea    rdi,[rbp+0x1]
  40491b:	call   405c10 <mmk_malloc@@Base>
  404920:	mov    r12,rax
  404923:	mov    rdi,rax
  404926:	mov    rsi,r14
  404929:	mov    rdx,rbp
  40492c:	call   405b70 <mmk_strncpy@@Base>
  404931:	mov    BYTE PTR [r12+rbp*1],0x0
  404936:	test   rbx,rbx
  404939:	je     40495a <mmk_mock_create_internal@@Base+0xaa>
  40493b:	add    rbx,0x1
  40493f:	lea    rsi,[rip+0x19eb]        # 406331 <_IO_stdin_used@@Base+0x331>
  404946:	mov    edx,0x4
  40494b:	mov    rdi,rbx
  40494e:	call   405ac0 <mmk_strneq@@Base>
  404953:	test   eax,eax
  404955:	setne  bl
  404958:	jmp    40495c <mmk_mock_create_internal@@Base+0xac>
  40495a:	mov    bl,0x1
  40495c:	mov    rdi,r14
  40495f:	mov    rsi,r15
  404962:	mov    rdx,r13
  404965:	call   405390 <mmk_stub_create@@Base>
  40496a:	mov    QWORD PTR [r13+0x8],rax
  40496e:	test   rax,rax
  404971:	je     4049dc <mmk_mock_create_internal@@Base+0x12c>
  404973:	test   bl,bl
  404975:	jne    40498d <mmk_mock_create_internal@@Base+0xdd>
  404977:	mov    rdi,r12
  40497a:	mov    rsi,r15
  40497d:	mov    rdx,r13
  404980:	call   405390 <mmk_stub_create@@Base>
  404985:	mov    rcx,QWORD PTR [r13+0x8]
  404989:	mov    QWORD PTR [rcx+0x48],rax
  40498d:	mov    rdi,r12
  404990:	call   405c30 <mmk_free@@Base>
  404995:	mov    rax,QWORD PTR [r13+0x8]
  404999:	mov    rax,QWORD PTR [rax+0x40]
  40499d:	add    rsp,0x8
  4049a1:	pop    rbx
  4049a2:	pop    r12
  4049a4:	pop    r13
  4049a6:	pop    r14
  4049a8:	pop    r15
  4049aa:	pop    rbp
  4049ab:	ret    
  4049ac:	mov    rax,QWORD PTR [rip+0x4645]        # 408ff8 <stderr@GLIBC_2.2.5>
  4049b3:	mov    rdi,QWORD PTR [rax]
  4049b6:	lea    rsi,[rip+0x164d]        # 40600a <_IO_stdin_used@@Base+0xa>
  4049bd:	lea    rdx,[rip+0x1917]        # 4062db <_IO_stdin_used@@Base+0x2db>
  4049c4:	lea    r8,[rip+0x1962]        # 40632d <_IO_stdin_used@@Base+0x32d>
  4049cb:	mov    ecx,0x24
  4049d0:	xor    eax,eax
  4049d2:	call   4020e0 <fprintf@plt>
  4049d7:	call   402040 <abort@plt>
  4049dc:	mov    rax,QWORD PTR [rip+0x4615]        # 408ff8 <stderr@GLIBC_2.2.5>
  4049e3:	mov    rdi,QWORD PTR [rax]
  4049e6:	lea    rsi,[rip+0x1949]        # 406336 <_IO_stdin_used@@Base+0x336>
  4049ed:	xor    eax,eax
  4049ef:	mov    rdx,r14
  4049f2:	call   4020e0 <fprintf@plt>
  4049f7:	call   402040 <abort@plt>
  4049fc:	nop    DWORD PTR [rax+0x0]

0000000000404a00 <mmk_mock_destroy_internal@@Base>:
  404a00:	push   r15
  404a02:	push   r14
  404a04:	push   r12
  404a06:	push   rbx
  404a07:	push   rax
  404a08:	mov    r14,rdi
  404a0b:	mov    rdi,QWORD PTR [rdi+0x8]
  404a0f:	test   rdi,rdi
  404a12:	je     404a31 <mmk_mock_destroy_internal@@Base+0x31>
  404a14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a1e:	xchg   ax,ax
  404a20:	mov    rbx,QWORD PTR [rdi+0x48]
  404a24:	call   405420 <mmk_stub_destroy@@Base>
  404a29:	mov    rdi,rbx
  404a2c:	test   rbx,rbx
  404a2f:	jne    404a20 <mmk_mock_destroy_internal@@Base+0x20>
  404a31:	mov    rdi,QWORD PTR [r14+0x10]
  404a35:	call   405c30 <mmk_free@@Base>
  404a3a:	mov    r12,QWORD PTR [r14]
  404a3d:	test   r12,r12
  404a40:	je     404a81 <mmk_mock_destroy_internal@@Base+0x81>
  404a42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a4c:	nop    DWORD PTR [rax+0x0]
  404a50:	mov    rdi,QWORD PTR [r12]
  404a54:	mov    r15,QWORD PTR [r12+0x8]
  404a59:	test   rdi,rdi
  404a5c:	je     404a71 <mmk_mock_destroy_internal@@Base+0x71>
  404a5e:	xchg   ax,ax
  404a60:	mov    rbx,QWORD PTR [rdi+0x10]
  404a64:	call   405c30 <mmk_free@@Base>
  404a69:	mov    rdi,rbx
  404a6c:	test   rbx,rbx
  404a6f:	jne    404a60 <mmk_mock_destroy_internal@@Base+0x60>
  404a71:	mov    rdi,r12
  404a74:	call   405c30 <mmk_free@@Base>
  404a79:	mov    r12,r15
  404a7c:	test   r15,r15
  404a7f:	jne    404a50 <mmk_mock_destroy_internal@@Base+0x50>
  404a81:	mov    rdi,r14
  404a84:	add    rsp,0x8
  404a88:	pop    rbx
  404a89:	pop    r12
  404a8b:	pop    r14
  404a8d:	pop    r15
  404a8f:	jmp    405c30 <mmk_free@@Base>
  404a94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a9e:	xchg   ax,ax

0000000000404aa0 <mmk_mock_params_begin@@Base>:
  404aa0:	mov    rax,QWORD PTR [rdi+0x10]
  404aa4:	test   rax,rax
  404aa7:	je     404ab9 <mmk_mock_params_begin@@Base+0x19>
  404aa9:	mov    rcx,QWORD PTR [rdi+0x18]
  404aad:	add    rax,0x8
  404ab1:	test   rcx,rcx
  404ab4:	cmove  rax,rcx
  404ab8:	ret    
  404ab9:	xor    eax,eax
  404abb:	ret    
  404abc:	nop    DWORD PTR [rax+0x0]

0000000000404ac0 <mmk_mock_params_next@@Base>:
  404ac0:	mov    rax,QWORD PTR [rsi-0x8]
  404ac4:	lea    rcx,[rsi+rax*1]
  404ac8:	add    rcx,0x8
  404acc:	mov    rdx,QWORD PTR [rdi+0x10]
  404ad0:	add    rdx,QWORD PTR [rdi+0x18]
  404ad4:	xor    eax,eax
  404ad6:	cmp    rcx,rdx
  404ad9:	cmovb  rax,rcx
  404add:	ret    
  404ade:	xchg   ax,ax

0000000000404ae0 <mmk_mock_get_params@@Base>:
  404ae0:	push   rax
  404ae1:	call   405370 <mmk_ctx@@Base>
  404ae6:	mov    rdi,rax
  404ae9:	call   4051d0 <mmk_stub_context@@Base>
  404aee:	mov    rax,QWORD PTR [rax]
  404af1:	pop    rcx
  404af2:	ret    
  404af3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404afd:	nop    DWORD PTR [rax]

0000000000404b00 <plt_init_ctx@@Base>:
  404b00:	mov    rax,QWORD PTR [rip+0x45b1]        # 4090b8 <__data_start@@Base+0x10>
  404b07:	cmp    rax,0xffffffffffffffff
  404b0b:	je     404b0e <plt_init_ctx@@Base+0xe>
  404b0d:	ret    
  404b0e:	mov    rax,QWORD PTR [rip+0x44ab]        # 408fc0 <_r_debug@GLIBC_2.2.5>
  404b15:	mov    QWORD PTR [rip+0x459c],rax        # 4090b8 <__data_start@@Base+0x10>
  404b1c:	ret    
  404b1d:	nop    DWORD PTR [rax]

0000000000404b20 <plt_get_lib@@Base>:
  404b20:	push   rbp
  404b21:	mov    rbp,rsp
  404b24:	push   r15
  404b26:	push   r14
  404b28:	push   r13
  404b2a:	push   r12
  404b2c:	push   rbx
  404b2d:	sub    rsp,0x28
  404b31:	mov    r14,rdi
  404b34:	test   rsi,rsi
  404b37:	lea    rbx,[rip+0x17f3]        # 406331 <_IO_stdin_used@@Base+0x331>
  404b3e:	cmovne rbx,rsi
  404b42:	lea    rsi,[rip+0x1820]        # 406369 <_IO_stdin_used@@Base+0x369>
  404b49:	mov    edx,0x4
  404b4e:	mov    rdi,rbx
  404b51:	call   402060 <strncmp@plt>
  404b56:	test   eax,eax
  404b58:	je     404bb1 <plt_get_lib@@Base+0x91>
  404b5a:	lea    rsi,[rip+0x180d]        # 40636e <_IO_stdin_used@@Base+0x36e>
  404b61:	mov    edx,0x5
  404b66:	mov    rdi,rbx
  404b69:	call   402060 <strncmp@plt>
  404b6e:	test   eax,eax
  404b70:	je     404bb9 <plt_get_lib@@Base+0x99>
  404b72:	lea    rsi,[rip+0x17fb]        # 406374 <_IO_stdin_used@@Base+0x374>
  404b79:	mov    edx,0x4
  404b7e:	mov    rdi,rbx
  404b81:	call   402060 <strncmp@plt>
  404b86:	test   eax,eax
  404b88:	je     404bc1 <plt_get_lib@@Base+0xa1>
  404b8a:	lea    rsi,[rip+0x17a0]        # 406331 <_IO_stdin_used@@Base+0x331>
  404b91:	mov    rdi,rbx
  404b94:	call   4020d0 <strcmp@plt>
  404b99:	test   eax,eax
  404b9b:	jne    404d11 <plt_get_lib@@Base+0x1f1>
  404ba1:	xor    r12d,r12d
  404ba4:	lea    rbx,[rip+0x1812]        # 4063bd <_IO_stdin_used@@Base+0x3bd>
  404bab:	mov    QWORD PTR [rbp-0x38],rbx
  404baf:	jmp    404bdf <plt_get_lib@@Base+0xbf>
  404bb1:	mov    r12d,0x1
  404bb7:	jmp    404bc7 <plt_get_lib@@Base+0xa7>
  404bb9:	mov    r12d,0x2
  404bbf:	jmp    404bc7 <plt_get_lib@@Base+0xa7>
  404bc1:	mov    r12d,0x3
  404bc7:	mov    esi,0x3a
  404bcc:	mov    QWORD PTR [rbp-0x38],rbx
  404bd0:	mov    rdi,rbx
  404bd3:	call   402090 <strchr@plt>
  404bd8:	mov    rbx,rax
  404bdb:	add    rbx,0x1
  404bdf:	mov    rdi,rbx
  404be2:	call   402070 <strlen@plt>
  404be7:	mov    r15,rax
  404bea:	lea    rsi,[rip+0x183f]        # 406430 <_IO_stdin_used@@Base+0x430>
  404bf1:	mov    QWORD PTR [rbp-0x40],rbx
  404bf5:	mov    rdi,rbx
  404bf8:	call   4020d0 <strcmp@plt>
  404bfd:	mov    DWORD PTR [rbp-0x30],eax
  404c00:	mov    rbx,QWORD PTR [r14+0x8]
  404c04:	test   rbx,rbx
  404c07:	je     404cfd <plt_get_lib@@Base+0x1dd>
  404c0d:	add    r15,0x8
  404c11:	mov    eax,r12d
  404c14:	or     eax,0x2
  404c17:	mov    DWORD PTR [rbp-0x2c],eax
  404c1a:	lea    rax,[r15+0xf]
  404c1e:	and    rax,0xfffffffffffffff0
  404c22:	mov    QWORD PTR [rbp-0x48],rax
  404c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c30:	cmp    r12d,0x1
  404c34:	jne    404c80 <plt_get_lib@@Base+0x160>
  404c36:	cmp    DWORD PTR [rbp-0x30],0x0
  404c3a:	je     404cb9 <plt_get_lib@@Base+0x199>
  404c3c:	mov    r13,rsp
  404c3f:	mov    r14,rsp
  404c42:	sub    r14,QWORD PTR [rbp-0x48]
  404c46:	mov    rsp,r14
  404c49:	xor    eax,eax
  404c4b:	mov    rdi,r14
  404c4e:	mov    rsi,r15
  404c51:	lea    rdx,[rip+0x1778]        # 4063d0 <_IO_stdin_used@@Base+0x3d0>
  404c58:	mov    rcx,QWORD PTR [rbp-0x40]
  404c5c:	call   4020a0 <snprintf@plt>
  404c61:	mov    rdi,QWORD PTR [rbx+0x8]
  404c65:	mov    rsi,r14
  404c68:	call   402140 <strstr@plt>
  404c6d:	test   rax,rax
  404c70:	mov    rsp,r13
  404c73:	je     404cf0 <plt_get_lib@@Base+0x1d0>
  404c75:	jmp    404cff <plt_get_lib@@Base+0x1df>
  404c7a:	nop    WORD PTR [rax+rax*1+0x0]
  404c80:	cmp    DWORD PTR [rbp-0x2c],0x2
  404c84:	jne    404ca0 <plt_get_lib@@Base+0x180>
  404c86:	mov    rsi,QWORD PTR [rbx+0x8]
  404c8a:	mov    rdi,QWORD PTR [rbp-0x38]
  404c8e:	call   4020d0 <strcmp@plt>
  404c93:	test   eax,eax
  404c95:	jne    404cf0 <plt_get_lib@@Base+0x1d0>
  404c97:	jmp    404cff <plt_get_lib@@Base+0x1df>
  404c99:	nop    DWORD PTR [rax+0x0]
  404ca0:	cmp    r12d,0x3
  404ca4:	jne    404cf0 <plt_get_lib@@Base+0x1d0>
  404ca6:	mov    rdi,rbx
  404ca9:	mov    rsi,QWORD PTR [rbp-0x40]
  404cad:	call   404d70 <plt_get_lib@@Base+0x250>
  404cb2:	test   rax,rax
  404cb5:	je     404cf0 <plt_get_lib@@Base+0x1d0>
  404cb7:	jmp    404cff <plt_get_lib@@Base+0x1df>
  404cb9:	mov    r14,QWORD PTR [rbx+0x8]
  404cbd:	mov    rdi,r14
  404cc0:	lea    rsi,[rip+0x16f7]        # 4063be <_IO_stdin_used@@Base+0x3be>
  404cc7:	call   402140 <strstr@plt>
  404ccc:	test   rax,rax
  404ccf:	jne    404cff <plt_get_lib@@Base+0x1df>
  404cd1:	mov    rdi,r14
  404cd4:	lea    rsi,[rip+0x16ec]        # 4063c7 <_IO_stdin_used@@Base+0x3c7>
  404cdb:	call   402140 <strstr@plt>
  404ce0:	test   rax,rax
  404ce3:	jne    404cff <plt_get_lib@@Base+0x1df>
  404ce5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404cef:	nop
  404cf0:	mov    rbx,QWORD PTR [rbx+0x18]
  404cf4:	test   rbx,rbx
  404cf7:	jne    404c30 <plt_get_lib@@Base+0x110>
  404cfd:	xor    ebx,ebx
  404cff:	mov    rax,rbx
  404d02:	lea    rsp,[rbp-0x28]
  404d06:	pop    rbx
  404d07:	pop    r12
  404d09:	pop    r13
  404d0b:	pop    r14
  404d0d:	pop    r15
  404d0f:	pop    rbp
  404d10:	ret    
  404d11:	mov    esi,0x3a
  404d16:	mov    r14,rbx
  404d19:	mov    rdi,rbx
  404d1c:	call   402090 <strchr@plt>
  404d21:	test   rax,rax
  404d24:	jne    404d46 <plt_get_lib@@Base+0x226>
  404d26:	mov    rax,QWORD PTR [rip+0x42cb]        # 408ff8 <stderr@GLIBC_2.2.5>
  404d2d:	mov    rdi,QWORD PTR [rax]
  404d30:	lea    rsi,[rip+0x1664]        # 40639b <_IO_stdin_used@@Base+0x39b>
  404d37:	xor    eax,eax
  404d39:	mov    rdx,r14
  404d3c:	call   4020e0 <fprintf@plt>
  404d41:	call   402040 <abort@plt>
  404d46:	mov    rdx,rax
  404d49:	sub    edx,r14d
  404d4c:	mov    rax,QWORD PTR [rip+0x42a5]        # 408ff8 <stderr@GLIBC_2.2.5>
  404d53:	mov    rdi,QWORD PTR [rax]
  404d56:	add    edx,0x1
  404d59:	lea    rsi,[rip+0x1619]        # 406379 <_IO_stdin_used@@Base+0x379>
  404d60:	xor    eax,eax
  404d62:	mov    rcx,r14
  404d65:	call   4020e0 <fprintf@plt>
  404d6a:	call   402040 <abort@plt>
  404d6f:	nop
  404d70:	push   rbp
  404d71:	push   r15
  404d73:	push   r14
  404d75:	push   r13
  404d77:	push   r12
  404d79:	push   rbx
  404d7a:	sub    rsp,0x18
  404d7e:	mov    QWORD PTR [rsp+0x10],rsi
  404d83:	mov    rbx,QWORD PTR [rdi]
  404d86:	mov    rax,QWORD PTR [rdi+0x10]
  404d8a:	mov    rcx,QWORD PTR [rax]
  404d8d:	test   rcx,rcx
  404d90:	je     404db4 <plt_get_lib@@Base+0x294>
  404d92:	lea    rdx,[rax+0x10]
  404d96:	xor    r8d,r8d
  404d99:	mov    rsi,rcx
  404d9c:	nop    DWORD PTR [rax+0x0]
  404da0:	cmp    rsi,0x6
  404da4:	je     404dcc <plt_get_lib@@Base+0x2ac>
  404da6:	mov    rsi,QWORD PTR [rdx]
  404da9:	add    rdx,0x10
  404dad:	test   rsi,rsi
  404db0:	jne    404da0 <plt_get_lib@@Base+0x280>
  404db2:	jmp    404ddd <plt_get_lib@@Base+0x2bd>
  404db4:	xor    eax,eax
  404db6:	mov    QWORD PTR [rsp],rax
  404dba:	xor    edx,edx
  404dbc:	xor    r8d,r8d
  404dbf:	xor    r9d,r9d
  404dc2:	xor    ebp,ebp
  404dc4:	xor    r15d,r15d
  404dc7:	jmp    404ed7 <plt_get_lib@@Base+0x3b7>
  404dcc:	mov    r8,QWORD PTR [rdx-0x8]
  404dd0:	cmp    r8,rbx
  404dd3:	jb     404dda <plt_get_lib@@Base+0x2ba>
  404dd5:	test   r8,r8
  404dd8:	jns    404ddd <plt_get_lib@@Base+0x2bd>
  404dda:	add    r8,rbx
  404ddd:	lea    rdx,[rax+0x10]
  404de1:	xor    r9d,r9d
  404de4:	mov    rsi,rcx
  404de7:	nop    WORD PTR [rax+rax*1+0x0]
  404df0:	cmp    rsi,0x5
  404df4:	je     404e04 <plt_get_lib@@Base+0x2e4>
  404df6:	mov    rsi,QWORD PTR [rdx]
  404df9:	add    rdx,0x10
  404dfd:	test   rsi,rsi
  404e00:	jne    404df0 <plt_get_lib@@Base+0x2d0>
  404e02:	jmp    404e15 <plt_get_lib@@Base+0x2f5>
  404e04:	mov    r9,QWORD PTR [rdx-0x8]
  404e08:	cmp    r9,rbx
  404e0b:	jb     404e12 <plt_get_lib@@Base+0x2f2>
  404e0d:	test   r9,r9
  404e10:	jns    404e15 <plt_get_lib@@Base+0x2f5>
  404e12:	add    r9,rbx
  404e15:	lea    rsi,[rax+0x10]
  404e19:	xor    edx,edx
  404e1b:	mov    rdi,rcx
  404e1e:	xchg   ax,ax
  404e20:	cmp    rdi,0x14
  404e24:	je     404e34 <plt_get_lib@@Base+0x314>
  404e26:	mov    rdi,QWORD PTR [rsi]
  404e29:	add    rsi,0x10
  404e2d:	test   rdi,rdi
  404e30:	jne    404e20 <plt_get_lib@@Base+0x300>
  404e32:	jmp    404e38 <plt_get_lib@@Base+0x318>
  404e34:	mov    rdx,QWORD PTR [rsi-0x8]
  404e38:	lea    rsi,[rax+0x10]
  404e3c:	xor    ebp,ebp
  404e3e:	mov    rdi,rcx
  404e41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  404e50:	cmp    rdi,0x17
  404e54:	je     404e64 <plt_get_lib@@Base+0x344>
  404e56:	mov    rdi,QWORD PTR [rsi]
  404e59:	add    rsi,0x10
  404e5d:	test   rdi,rdi
  404e60:	jne    404e50 <plt_get_lib@@Base+0x330>
  404e62:	jmp    404e75 <plt_get_lib@@Base+0x355>
  404e64:	mov    rbp,QWORD PTR [rsi-0x8]
  404e68:	cmp    rbp,rbx
  404e6b:	jb     404e72 <plt_get_lib@@Base+0x352>
  404e6d:	test   rbp,rbp
  404e70:	jns    404e75 <plt_get_lib@@Base+0x355>
  404e72:	add    rbp,rbx
  404e75:	lea    rsi,[rax+0x10]
  404e79:	xor    edi,edi
  404e7b:	mov    QWORD PTR [rsp],rdi
  404e7f:	mov    rdi,rcx
  404e82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e8c:	nop    DWORD PTR [rax+0x0]
  404e90:	cmp    rdi,0x2
  404e94:	je     404ea4 <plt_get_lib@@Base+0x384>
  404e96:	mov    rdi,QWORD PTR [rsi]
  404e99:	add    rsi,0x10
  404e9d:	test   rdi,rdi
  404ea0:	jne    404e90 <plt_get_lib@@Base+0x370>
  404ea2:	jmp    404eac <plt_get_lib@@Base+0x38c>
  404ea4:	mov    rsi,QWORD PTR [rsi-0x8]
  404ea8:	mov    QWORD PTR [rsp],rsi
  404eac:	lea    rsi,[rdx+0x2]
  404eb0:	add    rax,0x10
  404eb4:	xor    r15d,r15d
  404eb7:	nop    WORD PTR [rax+rax*1+0x0]
  404ec0:	cmp    rcx,rsi
  404ec3:	je     404ed3 <plt_get_lib@@Base+0x3b3>
  404ec5:	mov    rcx,QWORD PTR [rax]
  404ec8:	add    rax,0x10
  404ecc:	test   rcx,rcx
  404ecf:	jne    404ec0 <plt_get_lib@@Base+0x3a0>
  404ed1:	jmp    404ed7 <plt_get_lib@@Base+0x3b7>
  404ed3:	mov    r15,QWORD PTR [rax-0x8]
  404ed7:	xor    eax,eax
  404ed9:	test   r15,r15
  404edc:	je     404fab <plt_get_lib@@Base+0x48b>
  404ee2:	cmp    QWORD PTR [rsp],0x0
  404ee7:	je     404fab <plt_get_lib@@Base+0x48b>
  404eed:	test   rbp,rbp
  404ef0:	je     404fab <plt_get_lib@@Base+0x48b>
  404ef6:	test   rdx,rdx
  404ef9:	je     404fab <plt_get_lib@@Base+0x48b>
  404eff:	test   r8,r8
  404f02:	je     404fab <plt_get_lib@@Base+0x48b>
  404f08:	test   r9,r9
  404f0b:	je     404fab <plt_get_lib@@Base+0x48b>
  404f11:	mov    QWORD PTR [rsp+0x8],rbx
  404f16:	cmp    r15,QWORD PTR [rsp]
  404f1a:	ja     404fa9 <plt_get_lib@@Base+0x489>
  404f20:	add    rbp,0x8
  404f24:	xor    r14d,r14d
  404f27:	mov    rbx,QWORD PTR [rsp]
  404f2b:	or     rbx,r15
  404f2e:	shr    rbx,0x20
  404f32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f3c:	nop    DWORD PTR [rax+0x0]
  404f40:	mov    eax,DWORD PTR [rbp+0x4]
  404f43:	lea    rax,[rax+rax*2]
  404f47:	mov    r13,r8
  404f4a:	mov    edi,DWORD PTR [r8+rax*8]
  404f4e:	mov    r12,r9
  404f51:	add    rdi,r9
  404f54:	mov    rsi,QWORD PTR [rsp+0x10]
  404f59:	call   4020d0 <strcmp@plt>
  404f5e:	test   eax,eax
  404f60:	je     404f99 <plt_get_lib@@Base+0x479>
  404f62:	add    r14,0x1
  404f66:	test   rbx,rbx
  404f69:	je     404f80 <plt_get_lib@@Base+0x460>
  404f6b:	xor    edx,edx
  404f6d:	mov    rax,QWORD PTR [rsp]
  404f71:	div    r15
  404f74:	jmp    404f89 <plt_get_lib@@Base+0x469>
  404f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f80:	xor    edx,edx
  404f82:	mov    rax,QWORD PTR [rsp]
  404f86:	div    r15d
  404f89:	mov    r8,r13
  404f8c:	mov    r9,r12
  404f8f:	add    rbp,r15
  404f92:	cmp    r14,rax
  404f95:	jb     404f40 <plt_get_lib@@Base+0x420>
  404f97:	jmp    404fa9 <plt_get_lib@@Base+0x489>
  404f99:	mov    rax,QWORD PTR [rbp-0x8]
  404f9d:	test   rax,rax
  404fa0:	je     404fa9 <plt_get_lib@@Base+0x489>
  404fa2:	add    rax,QWORD PTR [rsp+0x8]
  404fa7:	jmp    404fab <plt_get_lib@@Base+0x48b>
  404fa9:	xor    eax,eax
  404fab:	add    rsp,0x18
  404faf:	pop    rbx
  404fb0:	pop    r12
  404fb2:	pop    r13
  404fb4:	pop    r14
  404fb6:	pop    r15
  404fb8:	pop    rbp
  404fb9:	ret    
  404fba:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404fc0 <plt_get_offsets@@Base>:
  404fc0:	push   r14
  404fc2:	push   rbx
  404fc3:	push   rax
  404fc4:	mov    r14,rdx
  404fc7:	call   404d70 <plt_get_lib@@Base+0x250>
  404fcc:	test   rax,rax
  404fcf:	je     404ff2 <plt_get_offsets@@Base+0x32>
  404fd1:	mov    rbx,rax
  404fd4:	mov    edi,0x10
  404fd9:	call   405c10 <mmk_malloc@@Base>
  404fde:	mov    QWORD PTR [r14],0x1
  404fe5:	mov    QWORD PTR [rax],rbx
  404fe8:	mov    QWORD PTR [rax+0x8],0x0
  404ff0:	jmp    404ff4 <plt_get_offsets@@Base+0x34>
  404ff2:	xor    eax,eax
  404ff4:	add    rsp,0x8
  404ff8:	pop    rbx
  404ff9:	pop    r14
  404ffb:	ret    
  404ffc:	nop    DWORD PTR [rax+0x0]

0000000000405000 <plt_set_offsets@@Base>:
  405000:	test   rsi,rsi
  405003:	je     4050a8 <plt_set_offsets@@Base+0xa8>
  405009:	mov    r8d,esi
  40500c:	and    r8d,0x1
  405010:	cmp    rsi,0x1
  405014:	jne    405023 <plt_set_offsets@@Base+0x23>
  405016:	xor    r10d,r10d
  405019:	test   r8,r8
  40501c:	jne    40507f <plt_set_offsets@@Base+0x7f>
  40501e:	jmp    4050a8 <plt_set_offsets@@Base+0xa8>
  405023:	sub    rsi,r8
  405026:	lea    rcx,[rdi+0x18]
  40502a:	xor    r10d,r10d
  40502d:	nop    DWORD PTR [rax]
  405030:	cmp    QWORD PTR [rcx-0x10],0x0
  405035:	je     405040 <plt_set_offsets@@Base+0x40>
  405037:	mov    r9,QWORD PTR [rcx-0x18]
  40503b:	jmp    40504b <plt_set_offsets@@Base+0x4b>
  40503d:	nop    DWORD PTR [rax]
  405040:	mov    r9,QWORD PTR [rcx-0x18]
  405044:	mov    rax,QWORD PTR [r9]
  405047:	mov    QWORD PTR [rcx-0x10],rax
  40504b:	mov    QWORD PTR [r9],rdx
  40504e:	cmp    QWORD PTR [rcx],0x0
  405052:	je     405060 <plt_set_offsets@@Base+0x60>
  405054:	mov    r9,QWORD PTR [rcx-0x8]
  405058:	jmp    40506a <plt_set_offsets@@Base+0x6a>
  40505a:	nop    WORD PTR [rax+rax*1+0x0]
  405060:	mov    r9,QWORD PTR [rcx-0x8]
  405064:	mov    rax,QWORD PTR [r9]
  405067:	mov    QWORD PTR [rcx],rax
  40506a:	mov    QWORD PTR [r9],rdx
  40506d:	add    r10,0x2
  405071:	add    rcx,0x20
  405075:	cmp    rsi,r10
  405078:	jne    405030 <plt_set_offsets@@Base+0x30>
  40507a:	test   r8,r8
  40507d:	je     4050a8 <plt_set_offsets@@Base+0xa8>
  40507f:	shl    r10,0x4
  405083:	lea    rcx,[rdi+r10*1]
  405087:	cmp    QWORD PTR [rdi+r10*1+0x8],0x0
  40508d:	je     405094 <plt_set_offsets@@Base+0x94>
  40508f:	mov    rax,QWORD PTR [rcx]
  405092:	jmp    4050a5 <plt_set_offsets@@Base+0xa5>
  405094:	lea    rsi,[rdi+r10*1]
  405098:	add    rsi,0x8
  40509c:	mov    rax,QWORD PTR [rcx]
  40509f:	mov    rcx,QWORD PTR [rax]
  4050a2:	mov    QWORD PTR [rsi],rcx
  4050a5:	mov    QWORD PTR [rax],rdx
  4050a8:	ret    
  4050a9:	nop    DWORD PTR [rax+0x0]

00000000004050b0 <plt_reset_offsets@@Base>:
  4050b0:	test   rsi,rsi
  4050b3:	je     405174 <plt_reset_offsets@@Base+0xc4>
  4050b9:	lea    rcx,[rsi-0x1]
  4050bd:	mov    r8d,esi
  4050c0:	and    r8d,0x7
  4050c4:	cmp    rcx,0x7
  4050c8:	jae    4050d6 <plt_reset_offsets@@Base+0x26>
  4050ca:	xor    ecx,ecx
  4050cc:	test   r8,r8
  4050cf:	jne    405149 <plt_reset_offsets@@Base+0x99>
  4050d1:	jmp    405174 <plt_reset_offsets@@Base+0xc4>
  4050d6:	sub    rsi,r8
  4050d9:	lea    rdx,[rdi+0x78]
  4050dd:	xor    ecx,ecx
  4050df:	nop
  4050e0:	mov    r9,QWORD PTR [rdx-0x78]
  4050e4:	mov    rax,QWORD PTR [rdx-0x70]
  4050e8:	mov    QWORD PTR [r9],rax
  4050eb:	mov    r9,QWORD PTR [rdx-0x68]
  4050ef:	mov    rax,QWORD PTR [rdx-0x60]
  4050f3:	mov    QWORD PTR [r9],rax
  4050f6:	mov    r9,QWORD PTR [rdx-0x58]
  4050fa:	mov    rax,QWORD PTR [rdx-0x50]
  4050fe:	mov    QWORD PTR [r9],rax
  405101:	mov    r9,QWORD PTR [rdx-0x48]
  405105:	mov    rax,QWORD PTR [rdx-0x40]
  405109:	mov    QWORD PTR [r9],rax
  40510c:	mov    r9,QWORD PTR [rdx-0x38]
  405110:	mov    rax,QWORD PTR [rdx-0x30]
  405114:	mov    QWORD PTR [r9],rax
  405117:	mov    r9,QWORD PTR [rdx-0x28]
  40511b:	mov    rax,QWORD PTR [rdx-0x20]
  40511f:	mov    QWORD PTR [r9],rax
  405122:	mov    r9,QWORD PTR [rdx-0x18]
  405126:	mov    rax,QWORD PTR [rdx-0x10]
  40512a:	mov    QWORD PTR [r9],rax
  40512d:	mov    r9,QWORD PTR [rdx-0x8]
  405131:	mov    rax,QWORD PTR [rdx]
  405134:	mov    QWORD PTR [r9],rax
  405137:	add    rcx,0x8
  40513b:	sub    rdx,0xffffffffffffff80
  40513f:	cmp    rsi,rcx
  405142:	jne    4050e0 <plt_reset_offsets@@Base+0x30>
  405144:	test   r8,r8
  405147:	je     405174 <plt_reset_offsets@@Base+0xc4>
  405149:	shl    rcx,0x4
  40514d:	add    rcx,rdi
  405150:	add    rcx,0x8
  405154:	neg    r8
  405157:	nop    WORD PTR [rax+rax*1+0x0]
  405160:	mov    rdx,QWORD PTR [rcx-0x8]
  405164:	mov    rsi,QWORD PTR [rcx]
  405167:	mov    QWORD PTR [rdx],rsi
  40516a:	add    rcx,0x10
  40516e:	add    r8,0x1
  405172:	jne    405160 <plt_reset_offsets@@Base+0xb0>
  405174:	ret    
  405175:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40517f:	nop

0000000000405180 <plt_get_real_fn@@Base>:
  405180:	push   r15
  405182:	push   r14
  405184:	push   rbx
  405185:	mov    rbx,QWORD PTR [rdi+0x8]
  405189:	test   rbx,rbx
  40518c:	je     4051bb <plt_get_real_fn@@Base+0x3b>
  40518e:	mov    r15,rsi
  405191:	xor    r14d,r14d
  405194:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40519e:	xchg   ax,ax
  4051a0:	mov    rdi,rbx
  4051a3:	mov    rsi,r15
  4051a6:	call   404d70 <plt_get_lib@@Base+0x250>
  4051ab:	test   rax,rax
  4051ae:	jne    4051c0 <plt_get_real_fn@@Base+0x40>
  4051b0:	mov    rbx,QWORD PTR [rbx+0x18]
  4051b4:	test   rbx,rbx
  4051b7:	jne    4051a0 <plt_get_real_fn@@Base+0x20>
  4051b9:	jmp    4051c3 <plt_get_real_fn@@Base+0x43>
  4051bb:	xor    r14d,r14d
  4051be:	jmp    4051c3 <plt_get_real_fn@@Base+0x43>
  4051c0:	mov    r14,QWORD PTR [rax]
  4051c3:	mov    rax,r14
  4051c6:	pop    rbx
  4051c7:	pop    r14
  4051c9:	pop    r15
  4051cb:	ret    
  4051cc:	nop    DWORD PTR [rax+0x0]

00000000004051d0 <mmk_stub_context@@Base>:
  4051d0:	test   rdi,rdi
  4051d3:	je     4051da <mmk_stub_context@@Base+0xa>
  4051d5:	mov    rax,QWORD PTR [rdi+0x18]
  4051d9:	ret    
  4051da:	xor    eax,eax
  4051dc:	ret    
  4051dd:	nop    DWORD PTR [rax]

00000000004051e0 <mmk_stub_create_static@@Base>:
  4051e0:	push   rbp
  4051e1:	push   r15
  4051e3:	push   r14
  4051e5:	push   r13
  4051e7:	push   r12
  4051e9:	push   rbx
  4051ea:	push   rax
  4051eb:	mov    r15,rcx
  4051ee:	mov    r14,rdx
  4051f1:	mov    rbx,rsi
  4051f4:	mov    r12,rdi
  4051f7:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  405203:	mov    BYTE PTR [rax-0x20],0x0
  40520a:	mov    QWORD PTR [rax-0x18],0x0
  405215:	mov    rdi,rbx
  405218:	call   405bc0 <mmk_strlen@@Base>
  40521d:	lea    rdi,[rax+0x1]
  405221:	call   405c10 <mmk_malloc@@Base>
  405226:	test   rax,rax
  405229:	je     405257 <mmk_stub_create_static@@Base+0x77>
  40522b:	mov    r13,rax
  40522e:	mov    rdi,rax
  405231:	mov    rsi,rbx
  405234:	call   405b40 <mmk_strcpy@@Base>
  405239:	mov    esi,0x40
  40523e:	mov    rdi,r13
  405241:	call   405b10 <mmk_strchr@@Base>
  405246:	test   rax,rax
  405249:	je     405261 <mmk_stub_create_static@@Base+0x81>
  40524b:	mov    rbx,rax
  40524e:	mov    BYTE PTR [rax],0x0
  405251:	add    rbx,0x1
  405255:	jmp    405263 <mmk_stub_create_static@@Base+0x83>
  405257:	mov    eax,0xfffffff4
  40525c:	jmp    405317 <mmk_stub_create_static@@Base+0x137>
  405261:	xor    ebx,ebx
  405263:	call   404750 <mmk_plt_ctx@@Base>
  405268:	mov    rdi,rax
  40526b:	mov    rsi,rbx
  40526e:	call   404b20 <plt_get_lib@@Base>
  405273:	test   rax,rax
  405276:	je     405312 <mmk_stub_create_static@@Base+0x132>
  40527c:	mov    QWORD PTR [rsp],0x0
  405284:	mov    rdx,rsp
  405287:	mov    rdi,rax
  40528a:	mov    rsi,r13
  40528d:	call   404fc0 <plt_get_offsets@@Base>
  405292:	mov    rbp,rax
  405295:	mov    eax,0xfffffffe
  40529a:	test   rbp,rbp
  40529d:	je     405317 <mmk_stub_create_static@@Base+0x137>
  40529f:	mov    rcx,QWORD PTR [rsp]
  4052a3:	test   rcx,rcx
  4052a6:	je     405317 <mmk_stub_create_static@@Base+0x137>
  4052a8:	lea    rax,[rip+0x81]        # 405330 <mmk_ctx_asked@@Base>
  4052af:	mov    QWORD PTR [r12],rax
  4052b3:	lea    rax,[rip+0x96]        # 405350 <mmk_set_ctx@@Base>
  4052ba:	mov    QWORD PTR [r12+0x8],rax
  4052bf:	lea    rax,[rip+0xaa]        # 405370 <mmk_ctx@@Base>
  4052c6:	mov    QWORD PTR [r12+0x10],rax
  4052cb:	mov    QWORD PTR [r12+0x18],r15
  4052d0:	mov    QWORD PTR [r12+0x20],r13
  4052d5:	mov    QWORD PTR [r12+0x28],rbx
  4052da:	mov    QWORD PTR [r12+0x30],rbp
  4052df:	mov    QWORD PTR [r12+0x38],rcx
  4052e4:	vxorps xmm0,xmm0,xmm0
  4052e8:	vmovups XMMWORD PTR [r12+0x40],xmm0
  4052ef:	mov    rdi,r12
  4052f2:	mov    rsi,r14
  4052f5:	call   405480 <create_trampoline@@Base>
  4052fa:	mov    QWORD PTR [r12+0x40],rax
  4052ff:	mov    rsi,QWORD PTR [rsp]
  405303:	mov    rdi,rbp
  405306:	mov    rdx,rax
  405309:	call   405000 <plt_set_offsets@@Base>
  40530e:	xor    eax,eax
  405310:	jmp    405317 <mmk_stub_create_static@@Base+0x137>
  405312:	mov    eax,0xfffffffe
  405317:	add    rsp,0x8
  40531b:	pop    rbx
  40531c:	pop    r12
  40531e:	pop    r13
  405320:	pop    r14
  405322:	pop    r15
  405324:	pop    rbp
  405325:	ret    
  405326:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405330 <mmk_ctx_asked@@Base>:
  405330:	push   rax
  405331:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  40533d:	movzx  ecx,BYTE PTR [rax-0x20]
  405344:	mov    BYTE PTR [rax-0x20],0x0
  40534b:	mov    eax,ecx
  40534d:	pop    rcx
  40534e:	ret    
  40534f:	nop

0000000000405350 <mmk_set_ctx@@Base>:
  405350:	push   rbx
  405351:	mov    rbx,rdi
  405354:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  405360:	mov    QWORD PTR [rax-0x18],rbx
  405367:	pop    rbx
  405368:	ret    
  405369:	nop    DWORD PTR [rax+0x0]

0000000000405370 <mmk_ctx@@Base>:
  405370:	push   rax
  405371:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  40537d:	mov    rax,QWORD PTR [rax-0x18]
  405384:	pop    rcx
  405385:	ret    
  405386:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405390 <mmk_stub_create@@Base>:
  405390:	push   rbp
  405391:	push   r15
  405393:	push   r14
  405395:	push   rbx
  405396:	push   rax
  405397:	mov    r14,rdx
  40539a:	mov    r15,rsi
  40539d:	mov    rbp,rdi
  4053a0:	call   4046f0 <mmk_init@@Base>
  4053a5:	mov    edi,0x50
  4053aa:	call   405c10 <mmk_malloc@@Base>
  4053af:	mov    rbx,rax
  4053b2:	mov    rdi,rax
  4053b5:	mov    rsi,rbp
  4053b8:	mov    rdx,r15
  4053bb:	mov    rcx,r14
  4053be:	call   4051e0 <mmk_stub_create_static@@Base>
  4053c3:	test   eax,eax
  4053c5:	jns    4053da <mmk_stub_create@@Base+0x4a>
  4053c7:	mov    ebp,eax
  4053c9:	mov    rdi,rbx
  4053cc:	call   405c30 <mmk_free@@Base>
  4053d1:	call   402050 <__errno_location@plt>
  4053d6:	mov    DWORD PTR [rax],ebp
  4053d8:	xor    ebx,ebx
  4053da:	mov    rax,rbx
  4053dd:	add    rsp,0x8
  4053e1:	pop    rbx
  4053e2:	pop    r14
  4053e4:	pop    r15
  4053e6:	pop    rbp
  4053e7:	ret    
  4053e8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004053f0 <mmk_stub_destroy_static@@Base>:
  4053f0:	push   rbx
  4053f1:	mov    rbx,rdi
  4053f4:	mov    rdi,QWORD PTR [rdi+0x30]
  4053f8:	mov    rsi,QWORD PTR [rbx+0x38]
  4053fc:	call   4050b0 <plt_reset_offsets@@Base>
  405401:	mov    rdi,QWORD PTR [rbx+0x30]
  405405:	call   405c30 <mmk_free@@Base>
  40540a:	mov    rdi,QWORD PTR [rbx+0x40]
  40540e:	call   405570 <destroy_trampoline@@Base>
  405413:	mov    rdi,QWORD PTR [rbx+0x20]
  405417:	pop    rbx
  405418:	jmp    405c30 <mmk_free@@Base>
  40541d:	nop    DWORD PTR [rax]

0000000000405420 <mmk_stub_destroy@@Base>:
  405420:	push   rbx
  405421:	mov    rbx,rdi
  405424:	mov    rdi,QWORD PTR [rdi+0x30]
  405428:	mov    rsi,QWORD PTR [rbx+0x38]
  40542c:	call   4050b0 <plt_reset_offsets@@Base>
  405431:	mov    rdi,QWORD PTR [rbx+0x30]
  405435:	call   405c30 <mmk_free@@Base>
  40543a:	mov    rdi,QWORD PTR [rbx+0x40]
  40543e:	call   405570 <destroy_trampoline@@Base>
  405443:	mov    rdi,QWORD PTR [rbx+0x20]
  405447:	call   405c30 <mmk_free@@Base>
  40544c:	mov    rdi,rbx
  40544f:	pop    rbx
  405450:	jmp    405c30 <mmk_free@@Base>
  405455:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40545f:	nop

0000000000405460 <mmk_ask_ctx@@Base>:
  405460:	push   rbx
  405461:	mov    rbx,rdi
  405464:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  405470:	mov    BYTE PTR [rax-0x20],0x1
  405477:	mov    rax,rbx
  40547a:	pop    rbx
  40547b:	jmp    rax
  40547d:	nop    DWORD PTR [rax]

0000000000405480 <create_trampoline@@Base>:
  405480:	push   r15
  405482:	push   r14
  405484:	push   r12
  405486:	push   rbx
  405487:	push   rax
  405488:	lea    r12,[rip+0x9f1]        # 405e80 <mmk_trampoline_end@@Base>
  40548f:	mov    rax,r12
  405492:	sub    rax,QWORD PTR [rip+0x3b47]        # 408fe0 <mmk_trampoline@@Base+0x323c>
  405499:	cmp    rax,0x1000
  40549f:	jae    405516 <create_trampoline@@Base+0x96>
  4054a1:	mov    r14,rsi
  4054a4:	mov    r15,rdi
  4054a7:	mov    edi,0x0
  4054ac:	mov    esi,0x1000
  4054b1:	mov    edx,0x7
  4054b6:	mov    ecx,0x22
  4054bb:	mov    r8d,0xffffffff
  4054c1:	xor    r9d,r9d
  4054c4:	call   402080 <mmap@plt>
  4054c9:	cmp    rax,0xffffffffffffffff
  4054cd:	je     40553c <create_trampoline@@Base+0xbc>
  4054cf:	mov    rbx,rax
  4054d2:	mov    QWORD PTR [rax],r15
  4054d5:	mov    QWORD PTR [rax+0x8],r14
  4054d9:	mov    r14,rax
  4054dc:	add    r14,0x10
  4054e0:	lea    rsi,[rip+0x8bd]        # 405da4 <mmk_trampoline@@Base>
  4054e7:	sub    r12,rsi
  4054ea:	mov    rdi,r14
  4054ed:	mov    rdx,r12
  4054f0:	call   4020f0 <memcpy@plt>
  4054f5:	mov    esi,0x1000
  4054fa:	mov    edx,0x5
  4054ff:	mov    rdi,rbx
  405502:	call   402130 <mprotect@plt>
  405507:	mov    rax,r14
  40550a:	add    rsp,0x8
  40550e:	pop    rbx
  40550f:	pop    r12
  405511:	pop    r14
  405513:	pop    r15
  405515:	ret    
  405516:	mov    rax,QWORD PTR [rip+0x3adb]        # 408ff8 <stderr@GLIBC_2.2.5>
  40551d:	mov    rdi,QWORD PTR [rax]
  405520:	lea    rsi,[rip+0xae3]        # 40600a <_IO_stdin_used@@Base+0xa>
  405527:	lea    rdx,[rip+0xeac]        # 4063da <_IO_stdin_used@@Base+0x3da>
  40552e:	lea    r8,[rip+0xefd]        # 406432 <_IO_stdin_used@@Base+0x432>
  405535:	mov    ecx,0x2d
  40553a:	jmp    405560 <create_trampoline@@Base+0xe0>
  40553c:	mov    rax,QWORD PTR [rip+0x3ab5]        # 408ff8 <stderr@GLIBC_2.2.5>
  405543:	mov    rdi,QWORD PTR [rax]
  405546:	lea    rsi,[rip+0xabd]        # 40600a <_IO_stdin_used@@Base+0xa>
  40554d:	lea    rdx,[rip+0xe86]        # 4063da <_IO_stdin_used@@Base+0x3da>
  405554:	lea    r8,[rip+0xef1]        # 40644c <_IO_stdin_used@@Base+0x44c>
  40555b:	mov    ecx,0x45
  405560:	xor    eax,eax
  405562:	call   4020e0 <fprintf@plt>
  405567:	call   402040 <abort@plt>
  40556c:	nop    DWORD PTR [rax+0x0]

0000000000405570 <destroy_trampoline@@Base>:
  405570:	add    rdi,0xfffffffffffffff0
  405574:	mov    esi,0x1000
  405579:	jmp    402120 <munmap@plt>
  40557e:	xchg   ax,ax

0000000000405580 <mmk_verify_set_times@@Base>:
  405580:	push   rbx
  405581:	mov    rbx,rdi
  405584:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  405590:	mov    QWORD PTR [rax-0x10],rbx
  405597:	pop    rbx
  405598:	ret    
  405599:	nop    DWORD PTR [rax+0x0]

00000000004055a0 <mmk_verify_times@@Base>:
  4055a0:	push   rbx
  4055a1:	mov    rbx,rdi
  4055a4:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4055b0:	mov    rdi,QWORD PTR [rax-0x10]
  4055b7:	cmp    DWORD PTR [rbx+0x4],0x0
  4055bb:	je     4055c7 <mmk_verify_times@@Base+0x27>
  4055bd:	xor    eax,eax
  4055bf:	test   rdi,rdi
  4055c2:	sete   al
  4055c5:	pop    rbx
  4055c6:	ret    
  4055c7:	mov    rcx,QWORD PTR [rbx+0x8]
  4055cb:	mov    rax,QWORD PTR [rbx+0x10]
  4055cf:	mov    rdx,rcx
  4055d2:	or     rdx,rax
  4055d5:	je     4055f1 <mmk_verify_times@@Base+0x51>
  4055d7:	test   rax,rax
  4055da:	cmove  rax,rdi
  4055de:	cmp    rdi,rcx
  4055e1:	setae  cl
  4055e4:	cmp    rdi,rax
  4055e7:	setbe  al
  4055ea:	and    al,cl
  4055ec:	movzx  eax,al
  4055ef:	pop    rbx
  4055f0:	ret    
  4055f1:	mov    rax,QWORD PTR [rbx+0x20]
  4055f5:	test   rax,rax
  4055f8:	je     4055fd <mmk_verify_times@@Base+0x5d>
  4055fa:	pop    rbx
  4055fb:	jmp    rax
  4055fd:	xor    eax,eax
  4055ff:	cmp    QWORD PTR [rbx+0x18],rdi
  405603:	jmp    4055c2 <mmk_verify_times@@Base+0x22>
  405605:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40560f:	nop

0000000000405610 <mmk_verify_register_call@@Base>:
  405610:	push   rbp
  405611:	push   r15
  405613:	push   r14
  405615:	push   r13
  405617:	push   r12
  405619:	push   rbx
  40561a:	sub    rsp,0x18
  40561e:	mov    r12,rsi
  405621:	mov    QWORD PTR [rsp+0x10],rdi
  405626:	mov    QWORD PTR [rsp+0x8],rsi
  40562b:	call   405370 <mmk_ctx@@Base>
  405630:	mov    rdi,rax
  405633:	call   4051d0 <mmk_stub_context@@Base>
  405638:	mov    r15,rax
  40563b:	mov    r13,rax
  40563e:	cmp    QWORD PTR [rax+0x10],0x0
  405643:	jne    405664 <mmk_verify_register_call@@Base+0x54>
  405645:	mov    edi,0x1000
  40564a:	call   405c10 <mmk_malloc@@Base>
  40564f:	mov    QWORD PTR [r13+0x10],rax
  405653:	test   rax,rax
  405656:	je     405770 <mmk_verify_register_call@@Base+0x160>
  40565c:	mov    QWORD PTR [r13+0x20],0x1000
  405664:	mov    rdi,r13
  405667:	call   404aa0 <mmk_mock_params_begin@@Base>
  40566c:	test   rax,rax
  40566f:	je     4056ba <mmk_verify_register_call@@Base+0xaa>
  405671:	mov    rbx,rax
  405674:	mov    rax,QWORD PTR [rsp+0x10]
  405679:	lea    rbp,[rax+0x8]
  40567d:	lea    r14,[r12-0x8]
  405682:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40568c:	nop    DWORD PTR [rax+0x0]
  405690:	lea    rdi,[rbx+0x8]
  405694:	mov    rsi,rbp
  405697:	mov    rdx,r14
  40569a:	call   4057d0 <mmk_memcmp@@Base>
  40569f:	test   eax,eax
  4056a1:	je     405750 <mmk_verify_register_call@@Base+0x140>
  4056a7:	mov    rdi,r13
  4056aa:	mov    rsi,rbx
  4056ad:	call   404ac0 <mmk_mock_params_next@@Base>
  4056b2:	mov    rbx,rax
  4056b5:	test   rax,rax
  4056b8:	jne    405690 <mmk_verify_register_call@@Base+0x80>
  4056ba:	add    r15,0x18
  4056be:	mov    rdi,QWORD PTR [r13+0x18]
  4056c2:	mov    rsi,QWORD PTR [r13+0x20]
  4056c6:	lea    rax,[rdi+r12*1]
  4056ca:	add    rax,0x8
  4056ce:	cmp    rax,rsi
  4056d1:	jae    4056e0 <mmk_verify_register_call@@Base+0xd0>
  4056d3:	mov    rax,QWORD PTR [r13+0x10]
  4056d7:	jmp    405709 <mmk_verify_register_call@@Base+0xf9>
  4056d9:	nop    DWORD PTR [rax+0x0]
  4056e0:	add    rsi,0x1000
  4056e7:	cmp    rax,rsi
  4056ea:	jae    4056e0 <mmk_verify_register_call@@Base+0xd0>
  4056ec:	mov    QWORD PTR [r13+0x20],rsi
  4056f0:	mov    rdi,QWORD PTR [r13+0x10]
  4056f4:	call   405c20 <mmk_realloc@@Base>
  4056f9:	mov    QWORD PTR [r13+0x10],rax
  4056fd:	test   rax,rax
  405700:	je     405796 <mmk_verify_register_call@@Base+0x186>
  405706:	mov    rdi,QWORD PTR [r15]
  405709:	add    rdi,rax
  40570c:	lea    rsi,[rsp+0x8]
  405711:	mov    edx,0x8
  405716:	call   405810 <mmk_memcpy@@Base>
  40571b:	mov    rax,QWORD PTR [r13+0x10]
  40571f:	mov    rcx,QWORD PTR [r13+0x18]
  405723:	lea    rdi,[rax+rcx*1]
  405727:	add    rdi,0x8
  40572b:	mov    rdx,QWORD PTR [rsp+0x8]
  405730:	mov    rsi,QWORD PTR [rsp+0x10]
  405735:	call   405810 <mmk_memcpy@@Base>
  40573a:	mov    QWORD PTR [rax],0x1
  405741:	mov    rax,QWORD PTR [rsp+0x8]
  405746:	add    rax,0x8
  40574a:	mov    rcx,QWORD PTR [r13+0x18]
  40574e:	jmp    40575b <mmk_verify_register_call@@Base+0x14b>
  405750:	mov    rax,QWORD PTR [rbx]
  405753:	mov    ecx,0x1
  405758:	mov    r15,rbx
  40575b:	add    rcx,rax
  40575e:	mov    QWORD PTR [r15],rcx
  405761:	add    rsp,0x18
  405765:	pop    rbx
  405766:	pop    r12
  405768:	pop    r13
  40576a:	pop    r14
  40576c:	pop    r15
  40576e:	pop    rbp
  40576f:	ret    
  405770:	mov    rax,QWORD PTR [rip+0x3881]        # 408ff8 <stderr@GLIBC_2.2.5>
  405777:	mov    rdi,QWORD PTR [rax]
  40577a:	lea    rsi,[rip+0x889]        # 40600a <_IO_stdin_used@@Base+0xa>
  405781:	lea    rdx,[rip+0xcd6]        # 40645e <_IO_stdin_used@@Base+0x45e>
  405788:	lea    r8,[rip+0xd23]        # 4064b2 <_IO_stdin_used@@Base+0x4b2>
  40578f:	mov    ecx,0x4f
  405794:	jmp    4057ba <mmk_verify_register_call@@Base+0x1aa>
  405796:	mov    rax,QWORD PTR [rip+0x385b]        # 408ff8 <stderr@GLIBC_2.2.5>
  40579d:	mov    rdi,QWORD PTR [rax]
  4057a0:	lea    rsi,[rip+0x863]        # 40600a <_IO_stdin_used@@Base+0xa>
  4057a7:	lea    rdx,[rip+0xcb0]        # 40645e <_IO_stdin_used@@Base+0x45e>
  4057ae:	lea    r8,[rip+0xcfd]        # 4064b2 <_IO_stdin_used@@Base+0x4b2>
  4057b5:	mov    ecx,0x5b
  4057ba:	xor    eax,eax
  4057bc:	call   4020e0 <fprintf@plt>
  4057c1:	call   402040 <abort@plt>
  4057c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004057d0 <mmk_memcmp@@Base>:
  4057d0:	test   rdx,rdx
  4057d3:	je     4057f5 <mmk_memcmp@@Base+0x25>
  4057d5:	xor    eax,eax
  4057d7:	nop    WORD PTR [rax+rax*1+0x0]
  4057e0:	movzx  ecx,BYTE PTR [rsi+rax*1]
  4057e4:	cmp    BYTE PTR [rdi+rax*1],cl
  4057e7:	jne    4057f8 <mmk_memcmp@@Base+0x28>
  4057e9:	add    rax,0x1
  4057ed:	cmp    rdx,rax
  4057f0:	jne    4057e0 <mmk_memcmp@@Base+0x10>
  4057f2:	xor    eax,eax
  4057f4:	ret    
  4057f5:	xor    eax,eax
  4057f7:	ret    
  4057f8:	setge  al
  4057fb:	movzx  eax,al
  4057fe:	lea    eax,[rax+rax*1]
  405801:	add    eax,0xffffffff
  405804:	ret    
  405805:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40580f:	nop

0000000000405810 <mmk_memcpy@@Base>:
  405810:	test   rdx,rdx
  405813:	je     405a9d <mmk_memcpy@@Base+0x28d>
  405819:	cmp    rdx,0x7f
  40581d:	jbe    405839 <mmk_memcpy@@Base+0x29>
  40581f:	lea    rax,[rsi+rdx*1]
  405823:	cmp    rax,rdi
  405826:	jbe    4058dc <mmk_memcpy@@Base+0xcc>
  40582c:	lea    rax,[rdi+rdx*1]
  405830:	cmp    rax,rsi
  405833:	jbe    4058dc <mmk_memcpy@@Base+0xcc>
  405839:	mov    r10,rdi
  40583c:	lea    r8,[rdx-0x1]
  405840:	mov    r9,rdx
  405843:	and    r9,0x7
  405847:	je     40586a <mmk_memcpy@@Base+0x5a>
  405849:	xor    eax,eax
  40584b:	nop    DWORD PTR [rax+rax*1+0x0]
  405850:	movzx  ecx,BYTE PTR [rsi+rax*1]
  405854:	mov    BYTE PTR [r10+rax*1],cl
  405858:	add    rax,0x1
  40585c:	cmp    r9,rax
  40585f:	jne    405850 <mmk_memcpy@@Base+0x40>
  405861:	add    r10,rax
  405864:	add    rsi,rax
  405867:	sub    rdx,rax
  40586a:	cmp    r8,0x7
  40586e:	jb     405a9d <mmk_memcpy@@Base+0x28d>
  405874:	xor    eax,eax
  405876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405880:	movzx  ecx,BYTE PTR [rsi+rax*1]
  405884:	mov    BYTE PTR [r10+rax*1],cl
  405888:	movzx  ecx,BYTE PTR [rsi+rax*1+0x1]
  40588d:	mov    BYTE PTR [r10+rax*1+0x1],cl
  405892:	movzx  ecx,BYTE PTR [rsi+rax*1+0x2]
  405897:	mov    BYTE PTR [r10+rax*1+0x2],cl
  40589c:	movzx  ecx,BYTE PTR [rsi+rax*1+0x3]
  4058a1:	mov    BYTE PTR [r10+rax*1+0x3],cl
  4058a6:	movzx  ecx,BYTE PTR [rsi+rax*1+0x4]
  4058ab:	mov    BYTE PTR [r10+rax*1+0x4],cl
  4058b0:	movzx  ecx,BYTE PTR [rsi+rax*1+0x5]
  4058b5:	mov    BYTE PTR [r10+rax*1+0x5],cl
  4058ba:	movzx  ecx,BYTE PTR [rsi+rax*1+0x6]
  4058bf:	mov    BYTE PTR [r10+rax*1+0x6],cl
  4058c4:	movzx  ecx,BYTE PTR [rsi+rax*1+0x7]
  4058c9:	mov    BYTE PTR [r10+rax*1+0x7],cl
  4058ce:	add    rax,0x8
  4058d2:	cmp    rdx,rax
  4058d5:	jne    405880 <mmk_memcpy@@Base+0x70>
  4058d7:	jmp    405a9d <mmk_memcpy@@Base+0x28d>
  4058dc:	mov    r8,rdx
  4058df:	and    r8,0xffffffffffffff80
  4058e3:	lea    rcx,[r8-0x80]
  4058e7:	mov    rax,rcx
  4058ea:	shr    rax,0x7
  4058ee:	add    rax,0x1
  4058f2:	mov    r9d,eax
  4058f5:	and    r9d,0x3
  4058f9:	cmp    rcx,0x180
  405900:	jae    405912 <mmk_memcpy@@Base+0x102>
  405902:	xor    eax,eax
  405904:	test   r9,r9
  405907:	jne    405a4b <mmk_memcpy@@Base+0x23b>
  40590d:	jmp    405a98 <mmk_memcpy@@Base+0x288>
  405912:	mov    ecx,0x1
  405917:	sub    rcx,rax
  40591a:	add    rcx,r9
  40591d:	add    rcx,0xffffffffffffffff
  405921:	xor    eax,eax
  405923:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40592d:	nop    DWORD PTR [rax]
  405930:	vmovups ymm0,YMMWORD PTR [rsi+rax*1]
  405935:	vmovups ymm1,YMMWORD PTR [rsi+rax*1+0x20]
  40593b:	vmovups ymm2,YMMWORD PTR [rsi+rax*1+0x40]
  405941:	vmovups ymm3,YMMWORD PTR [rsi+rax*1+0x60]
  405947:	vmovups YMMWORD PTR [rdi+rax*1],ymm0
  40594c:	vmovups YMMWORD PTR [rdi+rax*1+0x20],ymm1
  405952:	vmovups YMMWORD PTR [rdi+rax*1+0x40],ymm2
  405958:	vmovups YMMWORD PTR [rdi+rax*1+0x60],ymm3
  40595e:	vmovups ymm0,YMMWORD PTR [rsi+rax*1+0x80]
  405967:	vmovups ymm1,YMMWORD PTR [rsi+rax*1+0xa0]
  405970:	vmovups ymm2,YMMWORD PTR [rsi+rax*1+0xc0]
  405979:	vmovups ymm3,YMMWORD PTR [rsi+rax*1+0xe0]
  405982:	vmovups YMMWORD PTR [rdi+rax*1+0x80],ymm0
  40598b:	vmovups YMMWORD PTR [rdi+rax*1+0xa0],ymm1
  405994:	vmovups YMMWORD PTR [rdi+rax*1+0xc0],ymm2
  40599d:	vmovups YMMWORD PTR [rdi+rax*1+0xe0],ymm3
  4059a6:	vmovups ymm0,YMMWORD PTR [rsi+rax*1+0x100]
  4059af:	vmovups ymm1,YMMWORD PTR [rsi+rax*1+0x120]
  4059b8:	vmovups ymm2,YMMWORD PTR [rsi+rax*1+0x140]
  4059c1:	vmovups ymm3,YMMWORD PTR [rsi+rax*1+0x160]
  4059ca:	vmovups YMMWORD PTR [rdi+rax*1+0x100],ymm0
  4059d3:	vmovups YMMWORD PTR [rdi+rax*1+0x120],ymm1
  4059dc:	vmovups YMMWORD PTR [rdi+rax*1+0x140],ymm2
  4059e5:	vmovups YMMWORD PTR [rdi+rax*1+0x160],ymm3
  4059ee:	vmovups ymm0,YMMWORD PTR [rsi+rax*1+0x180]
  4059f7:	vmovups ymm1,YMMWORD PTR [rsi+rax*1+0x1a0]
  405a00:	vmovups ymm2,YMMWORD PTR [rsi+rax*1+0x1c0]
  405a09:	vmovups ymm3,YMMWORD PTR [rsi+rax*1+0x1e0]
  405a12:	vmovups YMMWORD PTR [rdi+rax*1+0x180],ymm0
  405a1b:	vmovups YMMWORD PTR [rdi+rax*1+0x1a0],ymm1
  405a24:	vmovups YMMWORD PTR [rdi+rax*1+0x1c0],ymm2
  405a2d:	vmovups YMMWORD PTR [rdi+rax*1+0x1e0],ymm3
  405a36:	add    rax,0x200
  405a3c:	add    rcx,0x4
  405a40:	jne    405930 <mmk_memcpy@@Base+0x120>
  405a46:	test   r9,r9
  405a49:	je     405a98 <mmk_memcpy@@Base+0x288>
  405a4b:	add    rax,0x60
  405a4f:	neg    r9
  405a52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a5c:	nop    DWORD PTR [rax+0x0]
  405a60:	vmovups ymm0,YMMWORD PTR [rsi+rax*1-0x60]
  405a66:	vmovups ymm1,YMMWORD PTR [rsi+rax*1-0x40]
  405a6c:	vmovups ymm2,YMMWORD PTR [rsi+rax*1-0x20]
  405a72:	vmovups ymm3,YMMWORD PTR [rsi+rax*1]
  405a77:	vmovups YMMWORD PTR [rdi+rax*1-0x60],ymm0
  405a7d:	vmovups YMMWORD PTR [rdi+rax*1-0x40],ymm1
  405a83:	vmovups YMMWORD PTR [rdi+rax*1-0x20],ymm2
  405a89:	vmovups YMMWORD PTR [rdi+rax*1],ymm3
  405a8e:	sub    rax,0xffffffffffffff80
  405a92:	add    r9,0x1
  405a96:	jne    405a60 <mmk_memcpy@@Base+0x250>
  405a98:	cmp    r8,rdx
  405a9b:	jne    405aa4 <mmk_memcpy@@Base+0x294>
  405a9d:	mov    rax,rdi
  405aa0:	vzeroupper 
  405aa3:	ret    
  405aa4:	lea    r10,[rdi+r8*1]
  405aa8:	add    rsi,r8
  405aab:	sub    rdx,r8
  405aae:	jmp    40583c <mmk_memcpy@@Base+0x2c>
  405ab3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405abd:	nop    DWORD PTR [rax]

0000000000405ac0 <mmk_strneq@@Base>:
  405ac0:	mov    al,BYTE PTR [rdi]
  405ac2:	test   al,al
  405ac4:	je     405af3 <mmk_strneq@@Base+0x33>
  405ac6:	add    rdi,0x1
  405aca:	nop    WORD PTR [rax+rax*1+0x0]
  405ad0:	test   rdx,rdx
  405ad3:	je     405af3 <mmk_strneq@@Base+0x33>
  405ad5:	movzx  ecx,BYTE PTR [rsi]
  405ad8:	test   cl,cl
  405ada:	je     405af3 <mmk_strneq@@Base+0x33>
  405adc:	cmp    al,cl
  405ade:	jne    405b07 <mmk_strneq@@Base+0x47>
  405ae0:	add    rsi,0x1
  405ae4:	add    rdx,0xffffffffffffffff
  405ae8:	movzx  eax,BYTE PTR [rdi]
  405aeb:	add    rdi,0x1
  405aef:	test   al,al
  405af1:	jne    405ad0 <mmk_strneq@@Base+0x10>
  405af3:	test   rdx,rdx
  405af6:	je     405b01 <mmk_strneq@@Base+0x41>
  405af8:	xor    eax,eax
  405afa:	cmp    BYTE PTR [rsi],0x0
  405afd:	sete   al
  405b00:	ret    
  405b01:	mov    eax,0x1
  405b06:	ret    
  405b07:	xor    eax,eax
  405b09:	ret    
  405b0a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405b10 <mmk_strchr@@Base>:
  405b10:	mov    al,BYTE PTR [rdi]
  405b12:	test   al,al
  405b14:	jne    405b2c <mmk_strchr@@Base+0x1c>
  405b16:	jmp    405b37 <mmk_strchr@@Base+0x27>
  405b18:	nop    DWORD PTR [rax+rax*1+0x0]
  405b20:	movzx  eax,BYTE PTR [rdi+0x1]
  405b24:	add    rdi,0x1
  405b28:	test   al,al
  405b2a:	je     405b37 <mmk_strchr@@Base+0x27>
  405b2c:	movsx  eax,al
  405b2f:	cmp    eax,esi
  405b31:	jne    405b20 <mmk_strchr@@Base+0x10>
  405b33:	mov    rax,rdi
  405b36:	ret    
  405b37:	xor    edi,edi
  405b39:	mov    rax,rdi
  405b3c:	ret    
  405b3d:	nop    DWORD PTR [rax]

0000000000405b40 <mmk_strcpy@@Base>:
  405b40:	mov    al,BYTE PTR [rsi]
  405b42:	test   al,al
  405b44:	je     405b61 <mmk_strcpy@@Base+0x21>
  405b46:	add    rsi,0x1
  405b4a:	nop    WORD PTR [rax+rax*1+0x0]
  405b50:	mov    BYTE PTR [rdi],al
  405b52:	add    rdi,0x1
  405b56:	movzx  eax,BYTE PTR [rsi]
  405b59:	add    rsi,0x1
  405b5d:	test   al,al
  405b5f:	jne    405b50 <mmk_strcpy@@Base+0x10>
  405b61:	mov    BYTE PTR [rdi],0x0
  405b64:	mov    rax,rdi
  405b67:	ret    
  405b68:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405b70 <mmk_strncpy@@Base>:
  405b70:	test   rdx,rdx
  405b73:	je     405bab <mmk_strncpy@@Base+0x3b>
  405b75:	mov    al,BYTE PTR [rsi]
  405b77:	test   al,al
  405b79:	je     405bab <mmk_strncpy@@Base+0x3b>
  405b7b:	add    rdx,0xffffffffffffffff
  405b7f:	xor    ecx,ecx
  405b81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  405b90:	mov    BYTE PTR [rdi+rcx*1],al
  405b93:	lea    r8,[rcx+0x1]
  405b97:	cmp    rdx,rcx
  405b9a:	je     405ba8 <mmk_strncpy@@Base+0x38>
  405b9c:	movzx  eax,BYTE PTR [rsi+rcx*1+0x1]
  405ba1:	mov    rcx,r8
  405ba4:	test   al,al
  405ba6:	jne    405b90 <mmk_strncpy@@Base+0x20>
  405ba8:	add    rdi,r8
  405bab:	mov    BYTE PTR [rdi],0x0
  405bae:	mov    rax,rdi
  405bb1:	ret    
  405bb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405bbc:	nop    DWORD PTR [rax+0x0]

0000000000405bc0 <mmk_strlen@@Base>:
  405bc0:	cmp    BYTE PTR [rdi],0x0
  405bc3:	je     405bdc <mmk_strlen@@Base+0x1c>
  405bc5:	xor    eax,eax
  405bc7:	nop    WORD PTR [rax+rax*1+0x0]
  405bd0:	cmp    BYTE PTR [rdi+rax*1+0x1],0x0
  405bd5:	lea    rax,[rax+0x1]
  405bd9:	jne    405bd0 <mmk_strlen@@Base+0x10>
  405bdb:	ret    
  405bdc:	xor    eax,eax
  405bde:	ret    
  405bdf:	nop

0000000000405be0 <mmk_isspace@@Base>:
  405be0:	cmp    edi,0x20
  405be3:	ja     405bfd <mmk_isspace@@Base+0x1d>
  405be5:	mov    eax,0x1
  405bea:	mov    ecx,edi
  405bec:	movabs rdx,0x100002200
  405bf6:	bt     rdx,rcx
  405bfa:	jae    405bfd <mmk_isspace@@Base+0x1d>
  405bfc:	ret    
  405bfd:	xor    eax,eax
  405bff:	cmp    edi,0xa
  405c02:	sete   al
  405c05:	ret    
  405c06:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405c10 <mmk_malloc@@Base>:
  405c10:	lea    rax,[rip+0x34d9]        # 4090f0 <mmk_malloc_@@Base>
  405c17:	jmp    QWORD PTR [rax]
  405c19:	nop    DWORD PTR [rax+0x0]

0000000000405c20 <mmk_realloc@@Base>:
  405c20:	lea    rax,[rip+0x34b9]        # 4090e0 <mmk_realloc_@@Base>
  405c27:	mov    rax,QWORD PTR [rax]
  405c2a:	jmp    rax
  405c2c:	nop    DWORD PTR [rax+0x0]

0000000000405c30 <mmk_free@@Base>:
  405c30:	lea    rax,[rip+0x34b1]        # 4090e8 <mmk_free_@@Base>
  405c37:	jmp    QWORD PTR [rax]
  405c39:	nop    DWORD PTR [rax+0x0]

0000000000405c40 <mmk_init_vital_functions@@Base>:
  405c40:	push   rbx
  405c41:	mov    rbx,rdi
  405c44:	xor    edi,edi
  405c46:	call   402100 <malloc@plt>
  405c4b:	xor    esi,esi
  405c4d:	mov    rdi,rax
  405c50:	call   402110 <realloc@plt>
  405c55:	mov    rdi,rax
  405c58:	call   402030 <free@plt>
  405c5d:	lea    rsi,[rip+0x85e]        # 4064c2 <_IO_stdin_used@@Base+0x4c2>
  405c64:	mov    rdi,rbx
  405c67:	call   405180 <plt_get_real_fn@@Base>
  405c6c:	lea    rcx,[rip+0x347d]        # 4090f0 <mmk_malloc_@@Base>
  405c73:	mov    QWORD PTR [rcx],rax
  405c76:	test   rax,rax
  405c79:	je     405cb9 <mmk_init_vital_functions@@Base+0x79>
  405c7b:	lea    rsi,[rip+0x8d1]        # 406553 <_IO_stdin_used@@Base+0x553>
  405c82:	mov    rdi,rbx
  405c85:	call   405180 <plt_get_real_fn@@Base>
  405c8a:	lea    rcx,[rip+0x344f]        # 4090e0 <mmk_realloc_@@Base>
  405c91:	mov    QWORD PTR [rcx],rax
  405c94:	test   rax,rax
  405c97:	je     405cdf <mmk_init_vital_functions@@Base+0x9f>
  405c99:	lea    rsi,[rip+0x8f3]        # 406593 <_IO_stdin_used@@Base+0x593>
  405ca0:	mov    rdi,rbx
  405ca3:	call   405180 <plt_get_real_fn@@Base>
  405ca8:	lea    rcx,[rip+0x3439]        # 4090e8 <mmk_free_@@Base>
  405caf:	mov    QWORD PTR [rcx],rax
  405cb2:	test   rax,rax
  405cb5:	je     405d05 <mmk_init_vital_functions@@Base+0xc5>
  405cb7:	pop    rbx
  405cb8:	ret    
  405cb9:	mov    rax,QWORD PTR [rip+0x3338]        # 408ff8 <stderr@GLIBC_2.2.5>
  405cc0:	mov    rdi,QWORD PTR [rax]
  405cc3:	lea    rsi,[rip+0x340]        # 40600a <_IO_stdin_used@@Base+0xa>
  405cca:	lea    rdx,[rip+0x7f8]        # 4064c9 <_IO_stdin_used@@Base+0x4c9>
  405cd1:	lea    r8,[rip+0x845]        # 40651d <_IO_stdin_used@@Base+0x51d>
  405cd8:	mov    ecx,0x58
  405cdd:	jmp    405d29 <mmk_init_vital_functions@@Base+0xe9>
  405cdf:	mov    rax,QWORD PTR [rip+0x3312]        # 408ff8 <stderr@GLIBC_2.2.5>
  405ce6:	mov    rdi,QWORD PTR [rax]
  405ce9:	lea    rsi,[rip+0x31a]        # 40600a <_IO_stdin_used@@Base+0xa>
  405cf0:	lea    rdx,[rip+0x7d2]        # 4064c9 <_IO_stdin_used@@Base+0x4c9>
  405cf7:	lea    r8,[rip+0x85d]        # 40655b <_IO_stdin_used@@Base+0x55b>
  405cfe:	mov    ecx,0x59
  405d03:	jmp    405d29 <mmk_init_vital_functions@@Base+0xe9>
  405d05:	mov    rax,QWORD PTR [rip+0x32ec]        # 408ff8 <stderr@GLIBC_2.2.5>
  405d0c:	mov    rdi,QWORD PTR [rax]
  405d0f:	lea    rsi,[rip+0x2f4]        # 40600a <_IO_stdin_used@@Base+0xa>
  405d16:	lea    rdx,[rip+0x7ac]        # 4064c9 <_IO_stdin_used@@Base+0x4c9>
  405d1d:	lea    r8,[rip+0x874]        # 406598 <_IO_stdin_used@@Base+0x598>
  405d24:	mov    ecx,0x5a
  405d29:	xor    eax,eax
  405d2b:	call   4020e0 <fprintf@plt>
  405d30:	call   402040 <abort@plt>
  405d35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d3f:	nop

0000000000405d40 <mmk_when_init@@Base>:
  405d40:	push   rbx
  405d41:	mov    rbx,rdi
  405d44:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  405d50:	mov    QWORD PTR [rax-0x8],rbx
  405d57:	pop    rbx
  405d58:	ret    
  405d59:	nop    DWORD PTR [rax+0x0]

0000000000405d60 <mmk_when_get_result@@Base>:
  405d60:	push   rax
  405d61:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  405d6d:	mov    rax,QWORD PTR [rax-0x8]
  405d74:	pop    rcx
  405d75:	ret    
  405d76:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405d80 <mmk_when_impl@@Base>:
  405d80:	push   r14
  405d82:	push   rbx
  405d83:	push   rax
  405d84:	mov    rbx,rsi
  405d87:	mov    r14,rdi
  405d8a:	call   404820 <mmk_matcher_ctx@@Base>
  405d8f:	mov    QWORD PTR [rbx],rax
  405d92:	mov    rax,QWORD PTR [r14]
  405d95:	mov    QWORD PTR [rbx+0x8],rax
  405d99:	mov    QWORD PTR [r14],rbx
  405d9c:	add    rsp,0x8
  405da0:	pop    rbx
  405da1:	pop    r14
  405da3:	ret    

0000000000405da4 <mmk_trampoline@@Base>:
  405da4:	call   405da9 <mmk_trampoline@@Base+0x5>
  405da9:	pop    rax
  405daa:	push   rax
  405dab:	mov    rax,QWORD PTR [rax-0x15]
  405db2:	push   rdi
  405db3:	push   rsi
  405db4:	push   rdx
  405db5:	push   rcx
  405db6:	push   r8
  405db8:	push   r9
  405dba:	sub    rsp,0x10
  405dbe:	movdqu XMMWORD PTR [rsp],xmm0
  405dc3:	sub    rsp,0x10
  405dc7:	movdqu XMMWORD PTR [rsp],xmm1
  405dcc:	sub    rsp,0x10
  405dd0:	movdqu XMMWORD PTR [rsp],xmm2
  405dd5:	sub    rsp,0x10
  405dd9:	movdqu XMMWORD PTR [rsp],xmm3
  405dde:	sub    rsp,0x10
  405de2:	movdqu XMMWORD PTR [rsp],xmm4
  405de7:	sub    rsp,0x10
  405deb:	movdqu XMMWORD PTR [rsp],xmm5
  405df0:	sub    rsp,0x10
  405df4:	movdqu XMMWORD PTR [rsp],xmm6
  405df9:	sub    rsp,0x10
  405dfd:	movdqu XMMWORD PTR [rsp],xmm7
  405e02:	mov    rdi,rax
  405e05:	push   rax
  405e06:	mov    rax,QWORD PTR [rax+0x8]
  405e0a:	call   rax
  405e0c:	pop    rax
  405e0d:	mov    rax,QWORD PTR [rax]
  405e10:	call   rax
  405e12:	movdqu xmm7,XMMWORD PTR [rsp]
  405e17:	add    rsp,0x10
  405e1b:	movdqu xmm6,XMMWORD PTR [rsp]
  405e20:	add    rsp,0x10
  405e24:	movdqu xmm5,XMMWORD PTR [rsp]
  405e29:	add    rsp,0x10
  405e2d:	movdqu xmm4,XMMWORD PTR [rsp]
  405e32:	add    rsp,0x10
  405e36:	movdqu xmm3,XMMWORD PTR [rsp]
  405e3b:	add    rsp,0x10
  405e3f:	movdqu xmm2,XMMWORD PTR [rsp]
  405e44:	add    rsp,0x10
  405e48:	movdqu xmm1,XMMWORD PTR [rsp]
  405e4d:	add    rsp,0x10
  405e51:	movdqu xmm0,XMMWORD PTR [rsp]
  405e56:	add    rsp,0x10
  405e5a:	pop    r9
  405e5c:	pop    r8
  405e5e:	pop    rcx
  405e5f:	pop    rdx
  405e60:	pop    rsi
  405e61:	pop    rdi
  405e62:	test   rax,rax
  405e65:	jne    405e71 <mmk_trampoline@@Base+0xcd>
  405e67:	pop    rax
  405e68:	mov    rax,QWORD PTR [rax-0xd]
  405e6f:	jmp    rax
  405e71:	pop    rax
  405e72:	mov    rax,QWORD PTR [rax-0x15]
  405e79:	mov    rax,QWORD PTR [rax+0x10]
  405e7d:	call   rax
  405e7f:	ret    

0000000000405e80 <mmk_trampoline_end@@Base>:
  405e80:	nop
  405e81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405e90 <__libc_csu_init@@Base>:
  405e90:	endbr64 
  405e94:	push   r15
  405e96:	lea    r15,[rip+0x2f03]        # 408da0 <_IO_stdin_used@@Base+0x2da0>
  405e9d:	push   r14
  405e9f:	mov    r14,rdx
  405ea2:	push   r13
  405ea4:	mov    r13,rsi
  405ea7:	push   r12
  405ea9:	mov    r12d,edi
  405eac:	push   rbp
  405ead:	lea    rbp,[rip+0x2ef4]        # 408da8 <_IO_stdin_used@@Base+0x2da8>
  405eb4:	push   rbx
  405eb5:	sub    rbp,r15
  405eb8:	sub    rsp,0x8
  405ebc:	call   402000 <free@plt-0x30>
  405ec1:	sar    rbp,0x3
  405ec5:	je     405ee6 <__libc_csu_init@@Base+0x56>
  405ec7:	xor    ebx,ebx
  405ec9:	nop    DWORD PTR [rax+0x0]
  405ed0:	mov    rdx,r14
  405ed3:	mov    rsi,r13
  405ed6:	mov    edi,r12d
  405ed9:	call   QWORD PTR [r15+rbx*8]
  405edd:	add    rbx,0x1
  405ee1:	cmp    rbp,rbx
  405ee4:	jne    405ed0 <__libc_csu_init@@Base+0x40>
  405ee6:	add    rsp,0x8
  405eea:	pop    rbx
  405eeb:	pop    rbp
  405eec:	pop    r12
  405eee:	pop    r13
  405ef0:	pop    r14
  405ef2:	pop    r15
  405ef4:	ret    
  405ef5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000405f00 <__libc_csu_fini@@Base>:
  405f00:	endbr64 
  405f04:	ret    

Disassembly of section .fini:

0000000000405f08 <.fini>:
  405f08:	endbr64 
  405f0c:	sub    rsp,0x8
  405f10:	add    rsp,0x8
  405f14:	ret    
