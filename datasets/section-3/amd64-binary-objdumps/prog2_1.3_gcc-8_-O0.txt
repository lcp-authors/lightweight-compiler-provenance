
../repos/prog2/1.3:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <strcpy@plt-0x8a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	bnd jmp QWORD PTR [rip+0x2fe3]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <strcpy@plt-0x80>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <strcpy@plt-0x80>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <strcpy@plt-0x80>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <strcpy@plt-0x80>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <strcpy@plt-0x80>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <strcpy@plt-0x80>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <strcpy@plt-0x80>
  40109f:	nop

Disassembly of section .plt.sec:

00000000004010a0 <strcpy@plt>:
  4010a0:	endbr64 
  4010a4:	bnd jmp QWORD PTR [rip+0x2f6d]        # 404018 <strcpy@GLIBC_2.2.5>
  4010ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010b0 <fclose@plt>:
  4010b0:	endbr64 
  4010b4:	bnd jmp QWORD PTR [rip+0x2f65]        # 404020 <fclose@GLIBC_2.2.5>
  4010bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010c0 <__stack_chk_fail@plt>:
  4010c0:	endbr64 
  4010c4:	bnd jmp QWORD PTR [rip+0x2f5d]        # 404028 <__stack_chk_fail@GLIBC_2.4>
  4010cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010d0 <printf@plt>:
  4010d0:	endbr64 
  4010d4:	bnd jmp QWORD PTR [rip+0x2f55]        # 404030 <printf@GLIBC_2.2.5>
  4010db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010e0 <fseek@plt>:
  4010e0:	endbr64 
  4010e4:	bnd jmp QWORD PTR [rip+0x2f4d]        # 404038 <fseek@GLIBC_2.2.5>
  4010eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010f0 <fopen@plt>:
  4010f0:	endbr64 
  4010f4:	bnd jmp QWORD PTR [rip+0x2f45]        # 404040 <fopen@GLIBC_2.2.5>
  4010fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401100 <getc@plt>:
  401100:	endbr64 
  401104:	bnd jmp QWORD PTR [rip+0x2f3d]        # 404048 <getc@GLIBC_2.2.5>
  40110b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000401110 <_start@@Base>:
  401110:	endbr64 
  401114:	xor    ebp,ebp
  401116:	mov    r9,rdx
  401119:	pop    rsi
  40111a:	mov    rdx,rsp
  40111d:	and    rsp,0xfffffffffffffff0
  401121:	push   rax
  401122:	push   rsp
  401123:	mov    r8,0x401590
  40112a:	mov    rcx,0x401520
  401131:	mov    rdi,0x401233
  401138:	call   QWORD PTR [rip+0x2eb2]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40113e:	hlt    
  40113f:	nop
  401140:	endbr64 
  401144:	ret    
  401145:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40114f:	nop
  401150:	mov    eax,0x404060
  401155:	cmp    rax,0x404060
  40115b:	je     401170 <_start@@Base+0x60>
  40115d:	mov    eax,0x0
  401162:	test   rax,rax
  401165:	je     401170 <_start@@Base+0x60>
  401167:	mov    edi,0x404060
  40116c:	jmp    rax
  40116e:	xchg   ax,ax
  401170:	ret    
  401171:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40117c:	nop    DWORD PTR [rax+0x0]
  401180:	mov    esi,0x404060
  401185:	sub    rsi,0x404060
  40118c:	sar    rsi,0x3
  401190:	mov    rax,rsi
  401193:	shr    rax,0x3f
  401197:	add    rsi,rax
  40119a:	sar    rsi,1
  40119d:	je     4011b0 <_start@@Base+0xa0>
  40119f:	mov    eax,0x0
  4011a4:	test   rax,rax
  4011a7:	je     4011b0 <_start@@Base+0xa0>
  4011a9:	mov    edi,0x404060
  4011ae:	jmp    rax
  4011b0:	ret    
  4011b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4011bc:	nop    DWORD PTR [rax+0x0]
  4011c0:	endbr64 
  4011c4:	cmp    BYTE PTR [rip+0x2e95],0x0        # 404060 <__bss_start@@Base>
  4011cb:	jne    4011e0 <_start@@Base+0xd0>
  4011cd:	push   rbp
  4011ce:	mov    rbp,rsp
  4011d1:	call   401150 <_start@@Base+0x40>
  4011d6:	mov    BYTE PTR [rip+0x2e83],0x1        # 404060 <__bss_start@@Base>
  4011dd:	pop    rbp
  4011de:	ret    
  4011df:	nop
  4011e0:	ret    
  4011e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4011ec:	nop    DWORD PTR [rax+0x0]
  4011f0:	endbr64 
  4011f4:	jmp    401180 <_start@@Base+0x70>

00000000004011f6 <esvaziastring@@Base>:
  4011f6:	endbr64 
  4011fa:	push   rbp
  4011fb:	mov    rbp,rsp
  4011fe:	mov    QWORD PTR [rbp-0x18],rdi
  401202:	mov    DWORD PTR [rbp-0x1c],esi
  401205:	mov    DWORD PTR [rbp-0x4],0x0
  40120c:	mov    DWORD PTR [rbp-0x4],0x0
  401213:	jmp    401228 <esvaziastring@@Base+0x32>
  401215:	mov    eax,DWORD PTR [rbp-0x4]
  401218:	movsxd rdx,eax
  40121b:	mov    rax,QWORD PTR [rbp-0x18]
  40121f:	add    rax,rdx
  401222:	mov    BYTE PTR [rax],0x0
  401225:	inc    DWORD PTR [rbp-0x4]
  401228:	mov    eax,DWORD PTR [rbp-0x4]
  40122b:	cmp    eax,DWORD PTR [rbp-0x1c]
  40122e:	jl     401215 <esvaziastring@@Base+0x1f>
  401230:	nop
  401231:	pop    rbp
  401232:	ret    

0000000000401233 <main@@Base>:
  401233:	endbr64 
  401237:	push   rbp
  401238:	mov    rbp,rsp
  40123b:	sub    rsp,0x900
  401242:	mov    rax,QWORD PTR fs:0x28
  40124b:	mov    QWORD PTR [rbp-0x8],rax
  40124f:	xor    eax,eax
  401251:	lea    rsi,[rip+0xdac]        # 402004 <_IO_stdin_used@@Base+0x4>
  401258:	lea    rdi,[rip+0xda7]        # 402006 <_IO_stdin_used@@Base+0x6>
  40125f:	call   4010f0 <fopen@plt>
  401264:	mov    QWORD PTR [rbp-0x8e8],rax
  40126b:	mov    DWORD PTR [rbp-0x8f4],0x0
  401275:	mov    DWORD PTR [rbp-0x8f0],0x0
  40127f:	mov    DWORD PTR [rbp-0x8f0],0x0
  401289:	mov    rax,QWORD PTR [rbp-0x8e8]
  401290:	mov    rdi,rax
  401293:	call   401100 <getc@plt>
  401298:	mov    DWORD PTR [rbp-0x8ec],eax
  40129e:	cmp    DWORD PTR [rbp-0x8ec],0xffffffff
  4012a5:	jne    4012d4 <main@@Base+0xa1>
  4012a7:	mov    rax,QWORD PTR [rbp-0x8e8]
  4012ae:	mov    rdi,rax
  4012b1:	call   4010b0 <fclose@plt>
  4012b6:	nop
  4012b7:	mov    eax,0x0
  4012bc:	mov    rcx,QWORD PTR [rbp-0x8]
  4012c0:	xor    rcx,QWORD PTR fs:0x28
  4012c9:	je     401511 <main@@Base+0x2de>
  4012cf:	jmp    40150c <main@@Base+0x2d9>
  4012d4:	cmp    DWORD PTR [rbp-0x8ec],0x3c
  4012db:	jne    401289 <main@@Base+0x56>
  4012dd:	mov    rax,QWORD PTR [rbp-0x8e8]
  4012e4:	mov    rdi,rax
  4012e7:	call   401100 <getc@plt>
  4012ec:	cmp    eax,0x61
  4012ef:	jne    401506 <main@@Base+0x2d3>
  4012f5:	lea    rax,[rbp-0xd0]
  4012fc:	mov    esi,0xc8
  401301:	mov    rdi,rax
  401304:	call   4011f6 <esvaziastring@@Base>
  401309:	mov    rax,QWORD PTR [rbp-0x8e8]
  401310:	mov    edx,0x1
  401315:	mov    esi,0x7
  40131a:	mov    rdi,rax
  40131d:	call   4010e0 <fseek@plt>
  401322:	mov    DWORD PTR [rbp-0x8f4],0x0
  40132c:	mov    rax,QWORD PTR [rbp-0x8e8]
  401333:	mov    rdi,rax
  401336:	call   401100 <getc@plt>
  40133b:	mov    DWORD PTR [rbp-0x8ec],eax
  401341:	cmp    DWORD PTR [rbp-0x8ec],0x22
  401348:	je     401369 <main@@Base+0x136>
  40134a:	mov    eax,DWORD PTR [rbp-0x8ec]
  401350:	mov    edx,eax
  401352:	mov    eax,DWORD PTR [rbp-0x8f4]
  401358:	cdqe   
  40135a:	mov    BYTE PTR [rbp+rax*1-0xd0],dl
  401361:	inc    DWORD PTR [rbp-0x8f4]
  401367:	jmp    40132c <main@@Base+0xf9>
  401369:	nop
  40136a:	mov    eax,DWORD PTR [rbp-0x8f4]
  401370:	cdqe   
  401372:	mov    BYTE PTR [rbp+rax*1-0xd0],0x0
  40137a:	lea    rdx,[rbp-0x8e0]
  401381:	mov    eax,DWORD PTR [rbp-0x8f0]
  401387:	cdqe   
  401389:	imul   rax,rax,0x19a
  401390:	add    rdx,rax
  401393:	lea    rax,[rbp-0xd0]
  40139a:	mov    rsi,rax
  40139d:	mov    rdi,rdx
  4013a0:	call   4010a0 <strcpy@plt>
  4013a5:	lea    rax,[rbp-0xd0]
  4013ac:	mov    esi,0xc8
  4013b1:	mov    rdi,rax
  4013b4:	call   4011f6 <esvaziastring@@Base>
  4013b9:	mov    rax,QWORD PTR [rbp-0x8e8]
  4013c0:	mov    edx,0x1
  4013c5:	mov    esi,0x1
  4013ca:	mov    rdi,rax
  4013cd:	call   4010e0 <fseek@plt>
  4013d2:	mov    DWORD PTR [rbp-0x8f4],0x0
  4013dc:	mov    rax,QWORD PTR [rbp-0x8e8]
  4013e3:	mov    rdi,rax
  4013e6:	call   401100 <getc@plt>
  4013eb:	mov    DWORD PTR [rbp-0x8ec],eax
  4013f1:	cmp    DWORD PTR [rbp-0x8ec],0x3c
  4013f8:	je     40144d <main@@Base+0x21a>
  4013fa:	cmp    DWORD PTR [rbp-0x8ec],0xe1
  401404:	jne    40142e <main@@Base+0x1fb>
  401406:	mov    eax,DWORD PTR [rbp-0x8f4]
  40140c:	cdqe   
  40140e:	mov    BYTE PTR [rbp+rax*1-0xd0],0xc3
  401416:	inc    DWORD PTR [rbp-0x8f4]
  40141c:	mov    eax,DWORD PTR [rbp-0x8f4]
  401422:	cdqe   
  401424:	mov    BYTE PTR [rbp+rax*1-0xd0],0xa1
  40142c:	jmp    401445 <main@@Base+0x212>
  40142e:	mov    eax,DWORD PTR [rbp-0x8ec]
  401434:	mov    edx,eax
  401436:	mov    eax,DWORD PTR [rbp-0x8f4]
  40143c:	cdqe   
  40143e:	mov    BYTE PTR [rbp+rax*1-0xd0],dl
  401445:	inc    DWORD PTR [rbp-0x8f4]
  40144b:	jmp    4013dc <main@@Base+0x1a9>
  40144d:	nop
  40144e:	mov    eax,DWORD PTR [rbp-0x8f4]
  401454:	cdqe   
  401456:	mov    BYTE PTR [rbp+rax*1-0xd0],0x0
  40145e:	lea    rax,[rbp-0x8e0]
  401465:	mov    edx,DWORD PTR [rbp-0x8f0]
  40146b:	movsxd rdx,edx
  40146e:	imul   rdx,rdx,0x19a
  401475:	add    rdx,0xc0
  40147c:	add    rax,rdx
  40147f:	lea    rdx,[rax+0xd]
  401483:	lea    rax,[rbp-0xd0]
  40148a:	mov    rsi,rax
  40148d:	mov    rdi,rdx
  401490:	call   4010a0 <strcpy@plt>
  401495:	lea    rax,[rbp-0xd0]
  40149c:	mov    esi,0x50
  4014a1:	mov    rdi,rax
  4014a4:	call   4011f6 <esvaziastring@@Base>
  4014a9:	lea    rdx,[rbp-0x8e0]
  4014b0:	mov    eax,DWORD PTR [rbp-0x8f0]
  4014b6:	cdqe   
  4014b8:	imul   rax,rax,0x19a
  4014bf:	add    rdx,rax
  4014c2:	lea    rax,[rbp-0x8e0]
  4014c9:	mov    ecx,DWORD PTR [rbp-0x8f0]
  4014cf:	movsxd rcx,ecx
  4014d2:	imul   rcx,rcx,0x19a
  4014d9:	add    rcx,0xc0
  4014e0:	add    rax,rcx
  4014e3:	add    rax,0xd
  4014e7:	mov    rsi,rax
  4014ea:	lea    rdi,[rip+0xb2b]        # 40201c <_IO_stdin_used@@Base+0x1c>
  4014f1:	mov    eax,0x0
  4014f6:	call   4010d0 <printf@plt>
  4014fb:	inc    DWORD PTR [rbp-0x8f0]
  401501:	jmp    401289 <main@@Base+0x56>
  401506:	nop
  401507:	jmp    401289 <main@@Base+0x56>
  40150c:	call   4010c0 <__stack_chk_fail@plt>
  401511:	leave  
  401512:	ret    
  401513:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40151d:	nop    DWORD PTR [rax]

0000000000401520 <__libc_csu_init@@Base>:
  401520:	endbr64 
  401524:	push   r15
  401526:	lea    r15,[rip+0x28e3]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  40152d:	push   r14
  40152f:	mov    r14,rdx
  401532:	push   r13
  401534:	mov    r13,rsi
  401537:	push   r12
  401539:	mov    r12d,edi
  40153c:	push   rbp
  40153d:	lea    rbp,[rip+0x28d4]        # 403e18 <_IO_stdin_used@@Base+0x1e18>
  401544:	push   rbx
  401545:	sub    rbp,r15
  401548:	sub    rsp,0x8
  40154c:	call   401000 <strcpy@plt-0xa0>
  401551:	sar    rbp,0x3
  401555:	je     401576 <__libc_csu_init@@Base+0x56>
  401557:	xor    ebx,ebx
  401559:	nop    DWORD PTR [rax+0x0]
  401560:	mov    rdx,r14
  401563:	mov    rsi,r13
  401566:	mov    edi,r12d
  401569:	call   QWORD PTR [r15+rbx*8]
  40156d:	add    rbx,0x1
  401571:	cmp    rbp,rbx
  401574:	jne    401560 <__libc_csu_init@@Base+0x40>
  401576:	add    rsp,0x8
  40157a:	pop    rbx
  40157b:	pop    rbp
  40157c:	pop    r12
  40157e:	pop    r13
  401580:	pop    r14
  401582:	pop    r15
  401584:	ret    
  401585:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401590 <__libc_csu_fini@@Base>:
  401590:	endbr64 
  401594:	ret    

Disassembly of section .fini:

0000000000401598 <.fini>:
  401598:	endbr64 
  40159c:	sub    rsp,0x8
  4015a0:	add    rsp,0x8
  4015a4:	ret    
