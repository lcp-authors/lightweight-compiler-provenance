
../repos/oor/oor/oor:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x64fe9]        # 467ff8 <strcmp@plt+0x64840>
  40300f:	test   rax,rax
  403012:	je     403016 <__printf_chk@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <__printf_chk@plt-0x10>:
  403020:	push   QWORD PTR [rip+0x64fe2]        # 468008 <strcmp@plt+0x64850>
  403026:	jmp    QWORD PTR [rip+0x64fe4]        # 468010 <strcmp@plt+0x64858>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <__printf_chk@plt>:
  403030:	jmp    QWORD PTR [rip+0x64fe2]        # 468018 <strcmp@plt+0x64860>
  403036:	push   0x0
  40303b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403040 <xmlReadMemory@plt>:
  403040:	jmp    QWORD PTR [rip+0x64fda]        # 468020 <strcmp@plt+0x64868>
  403046:	push   0x1
  40304b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403050 <__errno_location@plt>:
  403050:	jmp    QWORD PTR [rip+0x64fd2]        # 468028 <strcmp@plt+0x64870>
  403056:	push   0x2
  40305b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403060 <sendto@plt>:
  403060:	jmp    QWORD PTR [rip+0x64fca]        # 468030 <strcmp@plt+0x64878>
  403066:	push   0x3
  40306b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403070 <__ctype_toupper_loc@plt>:
  403070:	jmp    QWORD PTR [rip+0x64fc2]        # 468038 <strcmp@plt+0x64880>
  403076:	push   0x4
  40307b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403080 <bind@plt>:
  403080:	jmp    QWORD PTR [rip+0x64fba]        # 468040 <strcmp@plt+0x64888>
  403086:	push   0x5
  40308b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403090 <__ctype_tolower_loc@plt>:
  403090:	jmp    QWORD PTR [rip+0x64fb2]        # 468048 <strcmp@plt+0x64890>
  403096:	push   0x6
  40309b:	jmp    403020 <__printf_chk@plt-0x10>

00000000004030a0 <__vsyslog_chk@plt>:
  4030a0:	jmp    QWORD PTR [rip+0x64faa]        # 468050 <strcmp@plt+0x64898>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <__printf_chk@plt-0x10>

00000000004030b0 <if_nametoindex@plt>:
  4030b0:	jmp    QWORD PTR [rip+0x64fa2]        # 468058 <strcmp@plt+0x648a0>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004030c0 <strstr@plt>:
  4030c0:	jmp    QWORD PTR [rip+0x64f9a]        # 468060 <strcmp@plt+0x648a8>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004030d0 <srandom@plt>:
  4030d0:	jmp    QWORD PTR [rip+0x64f92]        # 468068 <strcmp@plt+0x648b0>
  4030d6:	push   0xa
  4030db:	jmp    403020 <__printf_chk@plt-0x10>

00000000004030e0 <socket@plt>:
  4030e0:	jmp    QWORD PTR [rip+0x64f8a]        # 468070 <strcmp@plt+0x648b8>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004030f0 <zmq_strerror@plt>:
  4030f0:	jmp    QWORD PTR [rip+0x64f82]        # 468078 <strcmp@plt+0x648c0>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403100 <fork@plt>:
  403100:	jmp    QWORD PTR [rip+0x64f7a]        # 468080 <strcmp@plt+0x648c8>
  403106:	push   0xd
  40310b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403110 <cfg_getnstr@plt>:
  403110:	jmp    QWORD PTR [rip+0x64f72]        # 468088 <strcmp@plt+0x648d0>
  403116:	push   0xe
  40311b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403120 <__vfprintf_chk@plt>:
  403120:	jmp    QWORD PTR [rip+0x64f6a]        # 468090 <strcmp@plt+0x648d8>
  403126:	push   0xf
  40312b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403130 <recvmsg@plt>:
  403130:	jmp    QWORD PTR [rip+0x64f62]        # 468098 <strcmp@plt+0x648e0>
  403136:	push   0x10
  40313b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403140 <nanosleep@plt>:
  403140:	jmp    QWORD PTR [rip+0x64f5a]        # 4680a0 <strcmp@plt+0x648e8>
  403146:	push   0x11
  40314b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403150 <cfg_free@plt>:
  403150:	jmp    QWORD PTR [rip+0x64f52]        # 4680a8 <strcmp@plt+0x648f0>
  403156:	push   0x12
  40315b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403160 <recv@plt>:
  403160:	jmp    QWORD PTR [rip+0x64f4a]        # 4680b0 <strcmp@plt+0x648f8>
  403166:	push   0x13
  40316b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403170 <strerror@plt>:
  403170:	jmp    QWORD PTR [rip+0x64f42]        # 4680b8 <strcmp@plt+0x64900>
  403176:	push   0x14
  40317b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403180 <write@plt>:
  403180:	jmp    QWORD PTR [rip+0x64f3a]        # 4680c0 <strcmp@plt+0x64908>
  403186:	push   0x15
  40318b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403190 <strchr@plt>:
  403190:	jmp    QWORD PTR [rip+0x64f32]        # 4680c8 <strcmp@plt+0x64910>
  403196:	push   0x16
  40319b:	jmp    403020 <__printf_chk@plt-0x10>

00000000004031a0 <cfg_getint@plt>:
  4031a0:	jmp    QWORD PTR [rip+0x64f2a]        # 4680d0 <strcmp@plt+0x64918>
  4031a6:	push   0x17
  4031ab:	jmp    403020 <__printf_chk@plt-0x10>

00000000004031b0 <getprotobyname@plt>:
  4031b0:	jmp    QWORD PTR [rip+0x64f22]        # 4680d8 <strcmp@plt+0x64920>
  4031b6:	push   0x18
  4031bb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004031c0 <dirname@plt>:
  4031c0:	jmp    QWORD PTR [rip+0x64f1a]        # 4680e0 <strcmp@plt+0x64928>
  4031c6:	push   0x19
  4031cb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004031d0 <strlen@plt>:
  4031d0:	jmp    QWORD PTR [rip+0x64f12]        # 4680e8 <strcmp@plt+0x64930>
  4031d6:	push   0x1a
  4031db:	jmp    403020 <__printf_chk@plt-0x10>

00000000004031e0 <cfg_getnsec@plt>:
  4031e0:	jmp    QWORD PTR [rip+0x64f0a]        # 4680f0 <strcmp@plt+0x64938>
  4031e6:	push   0x1b
  4031eb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004031f0 <memcmp@plt>:
  4031f0:	jmp    QWORD PTR [rip+0x64f02]        # 4680f8 <strcmp@plt+0x64940>
  4031f6:	push   0x1c
  4031fb:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403200 <xmlNextElementSibling@plt>:
  403200:	jmp    QWORD PTR [rip+0x64efa]        # 468100 <strcmp@plt+0x64948>
  403206:	push   0x1d
  40320b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403210 <strncmp@plt>:
  403210:	jmp    QWORD PTR [rip+0x64ef2]        # 468108 <strcmp@plt+0x64950>
  403216:	push   0x1e
  40321b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403220 <send@plt>:
  403220:	jmp    QWORD PTR [rip+0x64eea]        # 468110 <strcmp@plt+0x64958>
  403226:	push   0x1f
  40322b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403230 <random@plt>:
  403230:	jmp    QWORD PTR [rip+0x64ee2]        # 468118 <strcmp@plt+0x64960>
  403236:	push   0x20
  40323b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403240 <strncpy@plt>:
  403240:	jmp    QWORD PTR [rip+0x64eda]        # 468120 <strcmp@plt+0x64968>
  403246:	push   0x21
  40324b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403250 <memset@plt>:
  403250:	jmp    QWORD PTR [rip+0x64ed2]        # 468128 <strcmp@plt+0x64970>
  403256:	push   0x22
  40325b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403260 <abort@plt>:
  403260:	jmp    QWORD PTR [rip+0x64eca]        # 468130 <strcmp@plt+0x64978>
  403266:	push   0x23
  40326b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403270 <cfg_getsec@plt>:
  403270:	jmp    QWORD PTR [rip+0x64ec2]        # 468138 <strcmp@plt+0x64980>
  403276:	push   0x24
  40327b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403280 <fcntl@plt>:
  403280:	jmp    QWORD PTR [rip+0x64eba]        # 468140 <strcmp@plt+0x64988>
  403286:	push   0x25
  40328b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403290 <__sprintf_chk@plt>:
  403290:	jmp    QWORD PTR [rip+0x64eb2]        # 468148 <strcmp@plt+0x64990>
  403296:	push   0x26
  40329b:	jmp    403020 <__printf_chk@plt-0x10>

00000000004032a0 <__snprintf_chk@plt>:
  4032a0:	jmp    QWORD PTR [rip+0x64eaa]        # 468150 <strcmp@plt+0x64998>
  4032a6:	push   0x27
  4032ab:	jmp    403020 <__printf_chk@plt-0x10>

00000000004032b0 <getnameinfo@plt>:
  4032b0:	jmp    QWORD PTR [rip+0x64ea2]        # 468158 <strcmp@plt+0x649a0>
  4032b6:	push   0x28
  4032bb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004032c0 <__assert_fail@plt>:
  4032c0:	jmp    QWORD PTR [rip+0x64e9a]        # 468160 <strcmp@plt+0x649a8>
  4032c6:	push   0x29
  4032cb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004032d0 <cfg_getstr@plt>:
  4032d0:	jmp    QWORD PTR [rip+0x64e92]        # 468168 <strcmp@plt+0x649b0>
  4032d6:	push   0x2a
  4032db:	jmp    403020 <__printf_chk@plt-0x10>

00000000004032e0 <calloc@plt>:
  4032e0:	jmp    QWORD PTR [rip+0x64e8a]        # 468170 <strcmp@plt+0x649b8>
  4032e6:	push   0x2b
  4032eb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004032f0 <zmq_bind@plt>:
  4032f0:	jmp    QWORD PTR [rip+0x64e82]        # 468178 <strcmp@plt+0x649c0>
  4032f6:	push   0x2c
  4032fb:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403300 <open@plt>:
  403300:	jmp    QWORD PTR [rip+0x64e7a]        # 468180 <strcmp@plt+0x649c8>
  403306:	push   0x2d
  40330b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403310 <localtime@plt>:
  403310:	jmp    QWORD PTR [rip+0x64e72]        # 468188 <strcmp@plt+0x649d0>
  403316:	push   0x2e
  40331b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403320 <xmlFirstElementChild@plt>:
  403320:	jmp    QWORD PTR [rip+0x64e6a]        # 468190 <strcmp@plt+0x649d8>
  403326:	push   0x2f
  40332b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403330 <strftime@plt>:
  403330:	jmp    QWORD PTR [rip+0x64e62]        # 468198 <strcmp@plt+0x649e0>
  403336:	push   0x30
  40333b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403340 <memcpy@plt>:
  403340:	jmp    QWORD PTR [rip+0x64e5a]        # 4681a0 <strcmp@plt+0x649e8>
  403346:	push   0x31
  40334b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403350 <timer_settime@plt>:
  403350:	jmp    QWORD PTR [rip+0x64e52]        # 4681a8 <strcmp@plt+0x649f0>
  403356:	push   0x32
  40335b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403360 <cfg_getbool@plt>:
  403360:	jmp    QWORD PTR [rip+0x64e4a]        # 4681b0 <strcmp@plt+0x649f8>
  403366:	push   0x33
  40336b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403370 <clock_gettime@plt>:
  403370:	jmp    QWORD PTR [rip+0x64e42]        # 4681b8 <strcmp@plt+0x64a00>
  403376:	push   0x34
  40337b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403380 <time@plt>:
  403380:	jmp    QWORD PTR [rip+0x64e3a]        # 4681c0 <strcmp@plt+0x64a08>
  403386:	push   0x35
  40338b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403390 <getsockname@plt>:
  403390:	jmp    QWORD PTR [rip+0x64e32]        # 4681c8 <strcmp@plt+0x64a10>
  403396:	push   0x36
  40339b:	jmp    403020 <__printf_chk@plt-0x10>

00000000004033a0 <cfg_init@plt>:
  4033a0:	jmp    QWORD PTR [rip+0x64e2a]        # 4681d0 <strcmp@plt+0x64a18>
  4033a6:	push   0x37
  4033ab:	jmp    403020 <__printf_chk@plt-0x10>

00000000004033b0 <select@plt>:
  4033b0:	jmp    QWORD PTR [rip+0x64e22]        # 4681d8 <strcmp@plt+0x64a20>
  4033b6:	push   0x38
  4033bb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004033c0 <zmq_connect@plt>:
  4033c0:	jmp    QWORD PTR [rip+0x64e1a]        # 4681e0 <strcmp@plt+0x64a28>
  4033c6:	push   0x39
  4033cb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004033d0 <zmq_send@plt>:
  4033d0:	jmp    QWORD PTR [rip+0x64e12]        # 4681e8 <strcmp@plt+0x64a30>
  4033d6:	push   0x3a
  4033db:	jmp    403020 <__printf_chk@plt-0x10>

00000000004033e0 <fclose@plt>:
  4033e0:	jmp    QWORD PTR [rip+0x64e0a]        # 4681f0 <strcmp@plt+0x64a38>
  4033e6:	push   0x3b
  4033eb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004033f0 <inet_ntop@plt>:
  4033f0:	jmp    QWORD PTR [rip+0x64e02]        # 4681f8 <strcmp@plt+0x64a40>
  4033f6:	push   0x3c
  4033fb:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403400 <zmq_poll@plt>:
  403400:	jmp    QWORD PTR [rip+0x64dfa]        # 468200 <strcmp@plt+0x64a48>
  403406:	push   0x3d
  40340b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403410 <freopen@plt>:
  403410:	jmp    QWORD PTR [rip+0x64df2]        # 468208 <strcmp@plt+0x64a50>
  403416:	push   0x3e
  40341b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403420 <__ctype_b_loc@plt>:
  403420:	jmp    QWORD PTR [rip+0x64dea]        # 468210 <strcmp@plt+0x64a58>
  403426:	push   0x3f
  40342b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403430 <xmlNodeGetContent@plt>:
  403430:	jmp    QWORD PTR [rip+0x64de2]        # 468218 <strcmp@plt+0x64a60>
  403436:	push   0x40
  40343b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403440 <setsid@plt>:
  403440:	jmp    QWORD PTR [rip+0x64dda]        # 468220 <strcmp@plt+0x64a68>
  403446:	push   0x41
  40344b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403450 <__syslog_chk@plt>:
  403450:	jmp    QWORD PTR [rip+0x64dd2]        # 468228 <strcmp@plt+0x64a70>
  403456:	push   0x42
  40345b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403460 <__stack_chk_fail@plt>:
  403460:	jmp    QWORD PTR [rip+0x64dca]        # 468230 <strcmp@plt+0x64a78>
  403466:	push   0x43
  40346b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403470 <fputs@plt>:
  403470:	jmp    QWORD PTR [rip+0x64dc2]        # 468238 <strcmp@plt+0x64a80>
  403476:	push   0x44
  40347b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403480 <fflush@plt>:
  403480:	jmp    QWORD PTR [rip+0x64dba]        # 468240 <strcmp@plt+0x64a88>
  403486:	push   0x45
  40348b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403490 <capget@plt>:
  403490:	jmp    QWORD PTR [rip+0x64db2]        # 468248 <strcmp@plt+0x64a90>
  403496:	push   0x46
  40349b:	jmp    403020 <__printf_chk@plt-0x10>

00000000004034a0 <fopen@plt>:
  4034a0:	jmp    QWORD PTR [rip+0x64daa]        # 468250 <strcmp@plt+0x64a98>
  4034a6:	push   0x47
  4034ab:	jmp    403020 <__printf_chk@plt-0x10>

00000000004034b0 <signal@plt>:
  4034b0:	jmp    QWORD PTR [rip+0x64da2]        # 468258 <strcmp@plt+0x64aa0>
  4034b6:	push   0x48
  4034bb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004034c0 <exit@plt>:
  4034c0:	jmp    QWORD PTR [rip+0x64d9a]        # 468260 <strcmp@plt+0x64aa8>
  4034c6:	push   0x49
  4034cb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004034d0 <timer_delete@plt>:
  4034d0:	jmp    QWORD PTR [rip+0x64d92]        # 468268 <strcmp@plt+0x64ab0>
  4034d6:	push   0x4a
  4034db:	jmp    403020 <__printf_chk@plt-0x10>

00000000004034e0 <fputc@plt>:
  4034e0:	jmp    QWORD PTR [rip+0x64d8a]        # 468270 <strcmp@plt+0x64ab8>
  4034e6:	push   0x4b
  4034eb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004034f0 <sigemptyset@plt>:
  4034f0:	jmp    QWORD PTR [rip+0x64d82]        # 468278 <strcmp@plt+0x64ac0>
  4034f6:	push   0x4c
  4034fb:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403500 <sigaction@plt>:
  403500:	jmp    QWORD PTR [rip+0x64d7a]        # 468280 <strcmp@plt+0x64ac8>
  403506:	push   0x4d
  40350b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403510 <getaddrinfo@plt>:
  403510:	jmp    QWORD PTR [rip+0x64d72]        # 468288 <strcmp@plt+0x64ad0>
  403516:	push   0x4e
  40351b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403520 <freeaddrinfo@plt>:
  403520:	jmp    QWORD PTR [rip+0x64d6a]        # 468290 <strcmp@plt+0x64ad8>
  403526:	push   0x4f
  40352b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403530 <malloc@plt>:
  403530:	jmp    QWORD PTR [rip+0x64d62]        # 468298 <strcmp@plt+0x64ae0>
  403536:	push   0x50
  40353b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403540 <pipe@plt>:
  403540:	jmp    QWORD PTR [rip+0x64d5a]        # 4682a0 <strcmp@plt+0x64ae8>
  403546:	push   0x51
  40354b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403550 <zmq_recv@plt>:
  403550:	jmp    QWORD PTR [rip+0x64d52]        # 4682a8 <strcmp@plt+0x64af0>
  403556:	push   0x52
  40355b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403560 <gai_strerror@plt>:
  403560:	jmp    QWORD PTR [rip+0x64d4a]        # 4682b0 <strcmp@plt+0x64af8>
  403566:	push   0x53
  40356b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403570 <putchar@plt>:
  403570:	jmp    QWORD PTR [rip+0x64d42]        # 4682b8 <strcmp@plt+0x64b00>
  403576:	push   0x54
  40357b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403580 <strtol@plt>:
  403580:	jmp    QWORD PTR [rip+0x64d3a]        # 4682c0 <strcmp@plt+0x64b08>
  403586:	push   0x55
  40358b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403590 <ioctl@plt>:
  403590:	jmp    QWORD PTR [rip+0x64d32]        # 4682c8 <strcmp@plt+0x64b10>
  403596:	push   0x56
  40359b:	jmp    403020 <__printf_chk@plt-0x10>

00000000004035a0 <read@plt>:
  4035a0:	jmp    QWORD PTR [rip+0x64d2a]        # 4682d0 <strcmp@plt+0x64b18>
  4035a6:	push   0x57
  4035ab:	jmp    403020 <__printf_chk@plt-0x10>

00000000004035b0 <xmlCharStrdup@plt>:
  4035b0:	jmp    QWORD PTR [rip+0x64d22]        # 4682d8 <strcmp@plt+0x64b20>
  4035b6:	push   0x58
  4035bb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004035c0 <getpid@plt>:
  4035c0:	jmp    QWORD PTR [rip+0x64d1a]        # 4682e0 <strcmp@plt+0x64b28>
  4035c6:	push   0x59
  4035cb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004035d0 <zmq_close@plt>:
  4035d0:	jmp    QWORD PTR [rip+0x64d12]        # 4682e8 <strcmp@plt+0x64b30>
  4035d6:	push   0x5a
  4035db:	jmp    403020 <__printf_chk@plt-0x10>

00000000004035e0 <chdir@plt>:
  4035e0:	jmp    QWORD PTR [rip+0x64d0a]        # 4682f0 <strcmp@plt+0x64b38>
  4035e6:	push   0x5b
  4035eb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004035f0 <xmlDocGetRootElement@plt>:
  4035f0:	jmp    QWORD PTR [rip+0x64d02]        # 4682f8 <strcmp@plt+0x64b40>
  4035f6:	push   0x5c
  4035fb:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403600 <puts@plt>:
  403600:	jmp    QWORD PTR [rip+0x64cfa]        # 468300 <strcmp@plt+0x64b48>
  403606:	push   0x5d
  40360b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403610 <strtok@plt>:
  403610:	jmp    QWORD PTR [rip+0x64cf2]        # 468308 <strcmp@plt+0x64b50>
  403616:	push   0x5e
  40361b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403620 <fgets@plt>:
  403620:	jmp    QWORD PTR [rip+0x64cea]        # 468310 <strcmp@plt+0x64b58>
  403626:	push   0x5f
  40362b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403630 <__fdelt_chk@plt>:
  403630:	jmp    QWORD PTR [rip+0x64ce2]        # 468318 <strcmp@plt+0x64b60>
  403636:	push   0x60
  40363b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403640 <snprintf@plt>:
  403640:	jmp    QWORD PTR [rip+0x64cda]        # 468320 <strcmp@plt+0x64b68>
  403646:	push   0x61
  40364b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403650 <zmq_ctx_destroy@plt>:
  403650:	jmp    QWORD PTR [rip+0x64cd2]        # 468328 <strcmp@plt+0x64b70>
  403656:	push   0x62
  40365b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403660 <gettimeofday@plt>:
  403660:	jmp    QWORD PTR [rip+0x64cca]        # 468330 <strcmp@plt+0x64b78>
  403666:	push   0x63
  40366b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403670 <realloc@plt>:
  403670:	jmp    QWORD PTR [rip+0x64cc2]        # 468338 <strcmp@plt+0x64b80>
  403676:	push   0x64
  40367b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403680 <__fprintf_chk@plt>:
  403680:	jmp    QWORD PTR [rip+0x64cba]        # 468340 <strcmp@plt+0x64b88>
  403686:	push   0x65
  40368b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403690 <getopt_long@plt>:
  403690:	jmp    QWORD PTR [rip+0x64cb2]        # 468348 <strcmp@plt+0x64b90>
  403696:	push   0x66
  40369b:	jmp    403020 <__printf_chk@plt-0x10>

00000000004036a0 <access@plt>:
  4036a0:	jmp    QWORD PTR [rip+0x64caa]        # 468350 <strcmp@plt+0x64b98>
  4036a6:	push   0x67
  4036ab:	jmp    403020 <__printf_chk@plt-0x10>

00000000004036b0 <timer_create@plt>:
  4036b0:	jmp    QWORD PTR [rip+0x64ca2]        # 468358 <strcmp@plt+0x64ba0>
  4036b6:	push   0x68
  4036bb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004036c0 <zmq_ctx_new@plt>:
  4036c0:	jmp    QWORD PTR [rip+0x64c9a]        # 468360 <strcmp@plt+0x64ba8>
  4036c6:	push   0x69
  4036cb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004036d0 <__memcpy_chk@plt>:
  4036d0:	jmp    QWORD PTR [rip+0x64c92]        # 468368 <strcmp@plt+0x64bb0>
  4036d6:	push   0x6a
  4036db:	jmp    403020 <__printf_chk@plt-0x10>

00000000004036e0 <freeifaddrs@plt>:
  4036e0:	jmp    QWORD PTR [rip+0x64c8a]        # 468370 <strcmp@plt+0x64bb8>
  4036e6:	push   0x6b
  4036eb:	jmp    403020 <__printf_chk@plt-0x10>

00000000004036f0 <cfg_parse@plt>:
  4036f0:	jmp    QWORD PTR [rip+0x64c82]        # 468378 <strcmp@plt+0x64bc0>
  4036f6:	push   0x6c
  4036fb:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403700 <umask@plt>:
  403700:	jmp    QWORD PTR [rip+0x64c7a]        # 468380 <strcmp@plt+0x64bc8>
  403706:	push   0x6d
  40370b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403710 <zmq_socket@plt>:
  403710:	jmp    QWORD PTR [rip+0x64c72]        # 468388 <strcmp@plt+0x64bd0>
  403716:	push   0x6e
  40371b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403720 <setsockopt@plt>:
  403720:	jmp    QWORD PTR [rip+0x64c6a]        # 468390 <strcmp@plt+0x64bd8>
  403726:	push   0x6f
  40372b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403730 <strdup@plt>:
  403730:	jmp    QWORD PTR [rip+0x64c62]        # 468398 <strcmp@plt+0x64be0>
  403736:	push   0x70
  40373b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403740 <xmlFreeDoc@plt>:
  403740:	jmp    QWORD PTR [rip+0x64c5a]        # 4683a0 <strcmp@plt+0x64be8>
  403746:	push   0x71
  40374b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403750 <cfg_size@plt>:
  403750:	jmp    QWORD PTR [rip+0x64c52]        # 4683a8 <strcmp@plt+0x64bf0>
  403756:	push   0x72
  40375b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403760 <if_indextoname@plt>:
  403760:	jmp    QWORD PTR [rip+0x64c4a]        # 4683b0 <strcmp@plt+0x64bf8>
  403766:	push   0x73
  40376b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403770 <getifaddrs@plt>:
  403770:	jmp    QWORD PTR [rip+0x64c42]        # 4683b8 <strcmp@plt+0x64c00>
  403776:	push   0x74
  40377b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403780 <inet_pton@plt>:
  403780:	jmp    QWORD PTR [rip+0x64c3a]        # 4683c0 <strcmp@plt+0x64c08>
  403786:	push   0x75
  40378b:	jmp    403020 <__printf_chk@plt-0x10>

0000000000403790 <close@plt>:
  403790:	jmp    QWORD PTR [rip+0x64c32]        # 4683c8 <strcmp@plt+0x64c10>
  403796:	push   0x76
  40379b:	jmp    403020 <__printf_chk@plt-0x10>

00000000004037a0 <xmlStrEqual@plt>:
  4037a0:	jmp    QWORD PTR [rip+0x64c2a]        # 4683d0 <strcmp@plt+0x64c18>
  4037a6:	push   0x77
  4037ab:	jmp    403020 <__printf_chk@plt-0x10>

Disassembly of section .plt.got:

00000000004037b0 <free@plt>:
  4037b0:	jmp    QWORD PTR [rip+0x6480a]        # 467fc0 <strcmp@plt+0x64808>
  4037b6:	xchg   ax,ax

00000000004037b8 <strcmp@plt>:
  4037b8:	jmp    QWORD PTR [rip+0x6481a]        # 467fd8 <strcmp@plt+0x64820>
  4037be:	xchg   ax,ax

Disassembly of section .text:

00000000004037c0 <.text>:
  4037c0:	lea    rcx,[rip+0x4afe1]        # 44e7a8 <strcmp@plt+0x4aff0>
  4037c7:	lea    rsi,[rip+0x4aa68]        # 44e236 <strcmp@plt+0x4aa7e>
  4037ce:	lea    rdi,[rip+0x4aa75]        # 44e24a <strcmp@plt+0x4aa92>
  4037d5:	sub    rsp,0x8
  4037d9:	mov    edx,0x6a
  4037de:	call   4032c0 <__assert_fail@plt>
  4037e3:	lea    rcx,[rip+0x4afae]        # 44e798 <strcmp@plt+0x4afe0>
  4037ea:	lea    rsi,[rip+0x4aa45]        # 44e236 <strcmp@plt+0x4aa7e>
  4037f1:	lea    rdi,[rip+0x4aa52]        # 44e24a <strcmp@plt+0x4aa92>
  4037f8:	sub    rsp,0x8
  4037fc:	mov    edx,0x6f
  403801:	call   4032c0 <__assert_fail@plt>
  403806:	lea    rcx,[rip+0x4af43]        # 44e750 <strcmp@plt+0x4af98>
  40380d:	lea    rsi,[rip+0x4aa22]        # 44e236 <strcmp@plt+0x4aa7e>
  403814:	lea    rdi,[rip+0x4aa2f]        # 44e24a <strcmp@plt+0x4aa92>
  40381b:	sub    rsp,0x8
  40381f:	mov    edx,0xdb
  403824:	call   4032c0 <__assert_fail@plt>
  403829:	lea    rcx,[rip+0x4ae80]        # 44e6b0 <strcmp@plt+0x4aef8>
  403830:	lea    rsi,[rip+0x4a9ff]        # 44e236 <strcmp@plt+0x4aa7e>
  403837:	lea    rdi,[rip+0x4aa0c]        # 44e24a <strcmp@plt+0x4aa92>
  40383e:	sub    rsp,0x8
  403842:	mov    edx,0xfe
  403847:	call   4032c0 <__assert_fail@plt>
  40384c:	lea    rcx,[rip+0x4ae3d]        # 44e690 <strcmp@plt+0x4aed8>
  403853:	lea    rsi,[rip+0x4a9dc]        # 44e236 <strcmp@plt+0x4aa7e>
  40385a:	lea    rdi,[rip+0x4aa42]        # 44e2a3 <strcmp@plt+0x4aaeb>
  403861:	sub    rsp,0x8
  403865:	mov    edx,0x124
  40386a:	call   4032c0 <__assert_fail@plt>
  40386f:	lea    rcx,[rip+0x4adfa]        # 44e670 <strcmp@plt+0x4aeb8>
  403876:	lea    rsi,[rip+0x4a9b9]        # 44e236 <strcmp@plt+0x4aa7e>
  40387d:	lea    rdi,[rip+0x4a9c6]        # 44e24a <strcmp@plt+0x4aa92>
  403884:	sub    rsp,0x8
  403888:	mov    edx,0x12a
  40388d:	call   4032c0 <__assert_fail@plt>
  403892:	lea    rcx,[rip+0x4acf7]        # 44e590 <strcmp@plt+0x4add8>
  403899:	lea    rsi,[rip+0x4a996]        # 44e236 <strcmp@plt+0x4aa7e>
  4038a0:	lea    rdi,[rip+0x4a9a8]        # 44e24f <strcmp@plt+0x4aa97>
  4038a7:	sub    rsp,0x8
  4038ab:	mov    edx,0x1d0
  4038b0:	call   4032c0 <__assert_fail@plt>
  4038b5:	lea    rcx,[rip+0x4acc4]        # 44e580 <strcmp@plt+0x4adc8>
  4038bc:	lea    rsi,[rip+0x4a973]        # 44e236 <strcmp@plt+0x4aa7e>
  4038c3:	lea    rdi,[rip+0x4a985]        # 44e24f <strcmp@plt+0x4aa97>
  4038ca:	sub    rsp,0x8
  4038ce:	mov    edx,0x1d7
  4038d3:	call   4032c0 <__assert_fail@plt>
  4038d8:	lea    rcx,[rip+0x4ac51]        # 44e530 <strcmp@plt+0x4ad78>
  4038df:	lea    rsi,[rip+0x4a950]        # 44e236 <strcmp@plt+0x4aa7e>
  4038e6:	lea    rdi,[rip+0x4a962]        # 44e24f <strcmp@plt+0x4aa97>
  4038ed:	sub    rsp,0x8
  4038f1:	mov    edx,0x235
  4038f6:	call   4032c0 <__assert_fail@plt>
  4038fb:	lea    rcx,[rip+0x4ac6e]        # 44e570 <strcmp@plt+0x4adb8>
  403902:	lea    rsi,[rip+0x4a92d]        # 44e236 <strcmp@plt+0x4aa7e>
  403909:	lea    rdi,[rip+0x4a942]        # 44e252 <strcmp@plt+0x4aa9a>
  403910:	sub    rsp,0x8
  403914:	mov    edx,0x1df
  403919:	call   4032c0 <__assert_fail@plt>
  40391e:	lea    rcx,[rip+0x4abfb]        # 44e520 <strcmp@plt+0x4ad68>
  403925:	lea    rsi,[rip+0x4a90a]        # 44e236 <strcmp@plt+0x4aa7e>
  40392c:	lea    rdi,[rip+0x4a91c]        # 44e24f <strcmp@plt+0x4aa97>
  403933:	sub    rsp,0x8
  403937:	mov    edx,0x23c
  40393c:	call   4032c0 <__assert_fail@plt>
  403941:	lea    rcx,[rip+0x4ac18]        # 44e560 <strcmp@plt+0x4ada8>
  403948:	lea    rsi,[rip+0x4a8e7]        # 44e236 <strcmp@plt+0x4aa7e>
  40394f:	lea    rdi,[rip+0x4a900]        # 44e256 <strcmp@plt+0x4aa9e>
  403956:	sub    rsp,0x8
  40395a:	mov    edx,0x1e7
  40395f:	call   4032c0 <__assert_fail@plt>
  403964:	lea    rcx,[rip+0x4aba5]        # 44e510 <strcmp@plt+0x4ad58>
  40396b:	lea    rsi,[rip+0x4a8c4]        # 44e236 <strcmp@plt+0x4aa7e>
  403972:	lea    rdi,[rip+0x4a8d6]        # 44e24f <strcmp@plt+0x4aa97>
  403979:	sub    rsp,0x8
  40397d:	mov    edx,0x243
  403982:	call   4032c0 <__assert_fail@plt>
  403987:	lea    rcx,[rip+0x4ab72]        # 44e500 <strcmp@plt+0x4ad48>
  40398e:	lea    rsi,[rip+0x4a8a1]        # 44e236 <strcmp@plt+0x4aa7e>
  403995:	lea    rdi,[rip+0x4a8b3]        # 44e24f <strcmp@plt+0x4aa97>
  40399c:	sub    rsp,0x8
  4039a0:	mov    edx,0x24a
  4039a5:	call   4032c0 <__assert_fail@plt>
  4039aa:	lea    rcx,[rip+0x4ab2f]        # 44e4e0 <strcmp@plt+0x4ad28>
  4039b1:	lea    rsi,[rip+0x4a87e]        # 44e236 <strcmp@plt+0x4aa7e>
  4039b8:	lea    rdi,[rip+0x4a890]        # 44e24f <strcmp@plt+0x4aa97>
  4039bf:	sub    rsp,0x8
  4039c3:	mov    edx,0x251
  4039c8:	call   4032c0 <__assert_fail@plt>
  4039cd:	lea    rcx,[rip+0x4aaec]        # 44e4c0 <strcmp@plt+0x4ad08>
  4039d4:	lea    rsi,[rip+0x4a85b]        # 44e236 <strcmp@plt+0x4aa7e>
  4039db:	lea    rdi,[rip+0x4a86d]        # 44e24f <strcmp@plt+0x4aa97>
  4039e2:	sub    rsp,0x8
  4039e6:	mov    edx,0x258
  4039eb:	call   4032c0 <__assert_fail@plt>
  4039f0:	lea    rcx,[rip+0x4aaa9]        # 44e4a0 <strcmp@plt+0x4ace8>
  4039f7:	lea    rsi,[rip+0x4a838]        # 44e236 <strcmp@plt+0x4aa7e>
  4039fe:	lea    rdi,[rip+0x4a863]        # 44e268 <strcmp@plt+0x4aab0>
  403a05:	sub    rsp,0x8
  403a09:	mov    edx,0x2f6
  403a0e:	call   4032c0 <__assert_fail@plt>
  403a13:	lea    rcx,[rip+0x4aa66]        # 44e480 <strcmp@plt+0x4acc8>
  403a1a:	lea    rsi,[rip+0x4a815]        # 44e236 <strcmp@plt+0x4aa7e>
  403a21:	lea    rdi,[rip+0x4a840]        # 44e268 <strcmp@plt+0x4aab0>
  403a28:	sub    rsp,0x8
  403a2c:	mov    edx,0x303
  403a31:	call   4032c0 <__assert_fail@plt>
  403a36:	lea    rcx,[rip+0x4aa23]        # 44e460 <strcmp@plt+0x4aca8>
  403a3d:	lea    rsi,[rip+0x4a7f2]        # 44e236 <strcmp@plt+0x4aa7e>
  403a44:	lea    rdi,[rip+0x4a81d]        # 44e268 <strcmp@plt+0x4aab0>
  403a4b:	sub    rsp,0x8
  403a4f:	mov    edx,0x30a
  403a54:	call   4032c0 <__assert_fail@plt>
  403a59:	lea    rcx,[rip+0x4a9e0]        # 44e440 <strcmp@plt+0x4ac88>
  403a60:	lea    rsi,[rip+0x4a7cf]        # 44e236 <strcmp@plt+0x4aa7e>
  403a67:	lea    rdi,[rip+0x4a812]        # 44e280 <strcmp@plt+0x4aac8>
  403a6e:	sub    rsp,0x8
  403a72:	mov    edx,0x311
  403a77:	call   4032c0 <__assert_fail@plt>
  403a7c:	lea    rcx,[rip+0x4a97d]        # 44e400 <strcmp@plt+0x4ac48>
  403a83:	lea    rsi,[rip+0x4a7ac]        # 44e236 <strcmp@plt+0x4aa7e>
  403a8a:	lea    rdi,[rip+0x4a7d7]        # 44e268 <strcmp@plt+0x4aab0>
  403a91:	sub    rsp,0x8
  403a95:	mov    edx,0x320
  403a9a:	call   4032c0 <__assert_fail@plt>
  403a9f:	lea    rcx,[rip+0x4a91a]        # 44e3c0 <strcmp@plt+0x4ac08>
  403aa6:	lea    rsi,[rip+0x4a789]        # 44e236 <strcmp@plt+0x4aa7e>
  403aad:	lea    rdi,[rip+0x4a7d1]        # 44e285 <strcmp@plt+0x4aacd>
  403ab4:	sub    rsp,0x8
  403ab8:	mov    edx,0x3c2
  403abd:	call   4032c0 <__assert_fail@plt>
  403ac2:	lea    rcx,[rip+0x4a8d7]        # 44e3a0 <strcmp@plt+0x4abe8>
  403ac9:	lea    rsi,[rip+0x4a766]        # 44e236 <strcmp@plt+0x4aa7e>
  403ad0:	lea    rdi,[rip+0x4a7ae]        # 44e285 <strcmp@plt+0x4aacd>
  403ad7:	sub    rsp,0x8
  403adb:	mov    edx,0x3cd
  403ae0:	call   4032c0 <__assert_fail@plt>
  403ae5:	lea    rcx,[rip+0x4a894]        # 44e380 <strcmp@plt+0x4abc8>
  403aec:	lea    rsi,[rip+0x4a743]        # 44e236 <strcmp@plt+0x4aa7e>
  403af3:	lea    rdi,[rip+0x4a78b]        # 44e285 <strcmp@plt+0x4aacd>
  403afa:	sub    rsp,0x8
  403afe:	mov    edx,0x3d7
  403b03:	call   4032c0 <__assert_fail@plt>
  403b08:	lea    rcx,[rip+0x4a851]        # 44e360 <strcmp@plt+0x4aba8>
  403b0f:	lea    rsi,[rip+0x4a720]        # 44e236 <strcmp@plt+0x4aa7e>
  403b16:	lea    rdi,[rip+0x4a768]        # 44e285 <strcmp@plt+0x4aacd>
  403b1d:	sub    rsp,0x8
  403b21:	mov    edx,0x3e1
  403b26:	call   4032c0 <__assert_fail@plt>
  403b2b:	lea    rcx,[rip+0x4a80e]        # 44e340 <strcmp@plt+0x4ab88>
  403b32:	lea    rsi,[rip+0x4a6fd]        # 44e236 <strcmp@plt+0x4aa7e>
  403b39:	lea    rdi,[rip+0x4a745]        # 44e285 <strcmp@plt+0x4aacd>
  403b40:	sub    rsp,0x8
  403b44:	mov    edx,0x3eb
  403b49:	call   4032c0 <__assert_fail@plt>
  403b4e:	lea    rcx,[rip+0x4a78b]        # 44e2e0 <strcmp@plt+0x4ab28>
  403b55:	lea    rsi,[rip+0x4a6da]        # 44e236 <strcmp@plt+0x4aa7e>
  403b5c:	lea    rdi,[rip+0x4a722]        # 44e285 <strcmp@plt+0x4aacd>
  403b63:	sub    rsp,0x8
  403b67:	mov    edx,0x400
  403b6c:	call   4032c0 <__assert_fail@plt>
  403b71:	lea    rsi,[rip+0x4cc7c]        # 4507f4 <strcmp@plt+0x4d03c>
  403b78:	sub    rsp,0x8
  403b7c:	mov    edi,0x1
  403b81:	xor    eax,eax
  403b83:	call   4306a0 <strcmp@plt+0x2cee8>
  403b88:	call   403260 <abort@plt>
  403b8d:	nop    DWORD PTR [rax]
  403b90:	push   r15
  403b92:	push   r14
  403b94:	lea    rdx,[rip+0x4f1fd]        # 452d98 <strcmp@plt+0x4f5e0>
  403b9b:	push   r13
  403b9d:	push   r12
  403b9f:	mov    r14,rsi
  403ba2:	push   rbp
  403ba3:	push   rbx
  403ba4:	lea    rsi,[rip+0x4f095]        # 452c40 <strcmp@plt+0x4f488>
  403bab:	mov    r13d,edi
  403bae:	mov    edi,0x4
  403bb3:	sub    rsp,0x98
  403bba:	mov    rax,QWORD PTR fs:0x28
  403bc3:	mov    QWORD PTR [rsp+0x88],rax
  403bcb:	xor    eax,eax
  403bcd:	call   4306a0 <strcmp@plt+0x2cee8>
  403bd2:	mov    rbp,0x468e3c
  403bd9:	mov    eax,DWORD PTR [rbp+0x0]
  403bdc:	test   eax,eax
  403bde:	jle    403bf3 <strcmp@plt+0x43b>
  403be0:	lea    rsi,[rip+0x4f1e4]        # 452dcb <strcmp@plt+0x4f613>
  403be7:	mov    edi,0x5
  403bec:	xor    eax,eax
  403bee:	call   4306a0 <strcmp@plt+0x2cee8>
  403bf3:	xor    eax,eax
  403bf5:	call   43f090 <strcmp@plt+0x3b8d8>
  403bfa:	cmp    eax,0x1
  403bfd:	je     403c06 <strcmp@plt+0x44e>
  403bff:	xor    edi,edi
  403c01:	call   4034c0 <exit@plt>
  403c06:	xor    edi,edi
  403c08:	mov    r12,rsp
  403c0b:	call   403380 <time@plt>
  403c10:	mov    rdx,0x4747b8
  403c17:	mov    edi,eax
  403c19:	mov    DWORD PTR [rdx],eax
  403c1b:	call   4030d0 <srandom@plt>
  403c20:	mov    rbx,0x43f220
  403c27:	mov    edi,0x1
  403c2c:	mov    rsi,rbx
  403c2f:	call   4034b0 <signal@plt>
  403c34:	mov    rsi,rbx
  403c37:	mov    edi,0xf
  403c3c:	call   4034b0 <signal@plt>
  403c41:	mov    rsi,rbx
  403c44:	mov    edi,0x2
  403c49:	call   4034b0 <signal@plt>
  403c4e:	mov    rsi,rbx
  403c51:	mov    edi,0x3
  403c56:	call   4034b0 <signal@plt>
  403c5b:	xor    eax,eax
  403c5d:	call   434930 <strcmp@plt+0x31178>
  403c62:	mov    rdx,0x474860
  403c69:	mov    QWORD PTR [rdx],rax
  403c6c:	xor    eax,eax
  403c6e:	call   42dd40 <strcmp@plt+0x2a588>
  403c73:	mov    rdx,0x474858
  403c7a:	mov    rsi,r14
  403c7d:	mov    edi,r13d
  403c80:	mov    QWORD PTR [rdx],rax
  403c83:	mov    rdx,rsp
  403c86:	call   404e20 <strcmp@plt+0x1668>
  403c8b:	test   eax,eax
  403c8d:	jne    403f45 <strcmp@plt+0x78d>
  403c93:	cmp    DWORD PTR [rsp+0x74],0x0
  403c98:	je     403eba <strcmp@plt+0x702>
  403c9e:	mov    rdi,QWORD PTR [rsp+0x48]
  403ca3:	call   403730 <strdup@plt>
  403ca8:	mov    rbx,0x4747c8
  403caf:	mov    QWORD PTR [rbx],rax
  403cb2:	cmp    DWORD PTR [rsp+0x70],0x0
  403cb7:	je     403ce1 <strcmp@plt+0x529>
  403cb9:	mov    rdx,QWORD PTR [rbx]
  403cbc:	cmp    BYTE PTR [rdx],0x2f
  403cbf:	je     403cd4 <strcmp@plt+0x51c>
  403cc1:	lea    rsi,[rip+0x4efa8]        # 452c70 <strcmp@plt+0x4f4b8>
  403cc8:	mov    edi,0x1
  403ccd:	xor    eax,eax
  403ccf:	call   4306a0 <strcmp@plt+0x2cee8>
  403cd4:	mov    rax,0x4747bc
  403cdb:	mov    DWORD PTR [rax],0x1
  403ce1:	cmp    DWORD PTR [rsp+0x68],0x0
  403ce6:	je     403cef <strcmp@plt+0x537>
  403ce8:	mov    eax,DWORD PTR [rsp+0x10]
  403cec:	mov    DWORD PTR [rbp+0x0],eax
  403cef:	cmp    DWORD PTR [rsp+0x6c],0x0
  403cf4:	je     403f33 <strcmp@plt+0x77b>
  403cfa:	mov    eax,DWORD PTR [rsp+0x28]
  403cfe:	test   eax,eax
  403d00:	je     403fdc <strcmp@plt+0x824>
  403d06:	sub    eax,0x1
  403d09:	jne    403f4f <strcmp@plt+0x797>
  403d0f:	mov    rax,0x4747c0
  403d16:	mov    DWORD PTR [rax],0xa
  403d1c:	mov    rdi,r12
  403d1f:	call   404a40 <strcmp@plt+0x1288>
  403d24:	mov    rdi,QWORD PTR [rbx]
  403d27:	xor    esi,esi
  403d29:	call   4036a0 <access@plt>
  403d2e:	add    eax,0x1
  403d31:	je     403fbf <strcmp@plt+0x807>
  403d37:	mov    rax,0x4747bc
  403d3e:	cmp    DWORD PTR [rax],0x0
  403d41:	je     403db8 <strcmp@plt+0x600>
  403d43:	cmp    DWORD PTR [rbp+0x0],0x0
  403d47:	jg     403fa7 <strcmp@plt+0x7ef>
  403d4d:	call   403100 <fork@plt>
  403d52:	mov    rbx,0x4747b4
  403d59:	test   eax,eax
  403d5b:	mov    DWORD PTR [rbx],eax
  403d5d:	js     403f9d <strcmp@plt+0x7e5>
  403d63:	xor    edi,edi
  403d65:	call   403700 <umask@plt>
  403d6a:	cmp    DWORD PTR [rbx],0x0
  403d6d:	jg     403bff <strcmp@plt+0x447>
  403d73:	call   403440 <setsid@plt>
  403d78:	mov    rdx,0x4747b0
  403d7f:	test   eax,eax
  403d81:	mov    DWORD PTR [rdx],eax
  403d83:	js     403f93 <strcmp@plt+0x7db>
  403d89:	lea    rdi,[rip+0x4a14d]        # 44dedd <strcmp@plt+0x4a725>
  403d90:	call   4035e0 <chdir@plt>
  403d95:	test   eax,eax
  403d97:	js     403f89 <strcmp@plt+0x7d1>
  403d9d:	xor    edi,edi
  403d9f:	call   403790 <close@plt>
  403da4:	mov    edi,0x1
  403da9:	call   403790 <close@plt>
  403dae:	mov    edi,0x2
  403db3:	call   403790 <close@plt>
  403db8:	xor    eax,eax
  403dba:	call   4196e0 <strcmp@plt+0x15f28>
  403dbf:	xor    eax,eax
  403dc1:	call   43b7a0 <strcmp@plt+0x37fe8>
  403dc6:	xor    eax,eax
  403dc8:	call   437d10 <strcmp@plt+0x34558>
  403dcd:	mov    rbx,0x4747a8
  403dd4:	mov    QWORD PTR [rbx],rax
  403dd7:	xor    eax,eax
  403dd9:	call   43a8d0 <strcmp@plt+0x37118>
  403dde:	xor    eax,eax
  403de0:	call   43e3c0 <strcmp@plt+0x3ac08>
  403de5:	sub    eax,0x1
  403de8:	je     403def <strcmp@plt+0x637>
  403dea:	call   43f160 <strcmp@plt+0x3b9a8>
  403def:	xor    eax,eax
  403df1:	call   407d20 <strcmp@plt+0x4568>
  403df6:	mov    r15,0x474830
  403dfd:	test   rax,rax
  403e00:	mov    QWORD PTR [r15],rax
  403e03:	je     403f7f <strcmp@plt+0x7c7>
  403e09:	xor    eax,eax
  403e0b:	call   444b00 <strcmp@plt+0x41348>
  403e10:	sub    eax,0x1
  403e13:	je     403e1a <strcmp@plt+0x662>
  403e15:	call   43f160 <strcmp@plt+0x3b9a8>
  403e1a:	mov    r12,0x474850
  403e21:	mov    rdi,QWORD PTR [r12]
  403e25:	call   408340 <strcmp@plt+0x4b88>
  403e2a:	mov    r13d,eax
  403e2d:	lea    eax,[rax-0x2]
  403e30:	cmp    eax,0x1
  403e33:	jbe    403ed5 <strcmp@plt+0x71d>
  403e39:	test   r13d,r13d
  403e3c:	je     403ed5 <strcmp@plt+0x71d>
  403e42:	mov    rdi,QWORD PTR [r15]
  403e45:	call   407df0 <strcmp@plt+0x4638>
  403e4a:	sub    eax,0x1
  403e4d:	je     403e54 <strcmp@plt+0x69c>
  403e4f:	call   43f160 <strcmp@plt+0x3b9a8>
  403e54:	mov    rax,0x473da8
  403e5b:	mov    rdx,QWORD PTR [rax]
  403e5e:	xor    eax,eax
  403e60:	call   QWORD PTR [rdx]
  403e62:	sub    eax,0x1
  403e65:	je     403e6c <strcmp@plt+0x6b4>
  403e67:	call   43f160 <strcmp@plt+0x3b9a8>
  403e6c:	mov    rdi,QWORD PTR [r12]
  403e70:	call   408370 <strcmp@plt+0x4bb8>
  403e75:	lea    rdx,[rip+0x4ef1c]        # 452d98 <strcmp@plt+0x4f5e0>
  403e7c:	lea    rsi,[rip+0x4ee7d]        # 452d00 <strcmp@plt+0x4f548>
  403e83:	mov    edi,0x4
  403e88:	xor    eax,eax
  403e8a:	call   4306a0 <strcmp@plt+0x2cee8>
  403e8f:	mov    rbp,0x474840
  403e96:	mov    rdi,rbp
  403e99:	call   441e00 <strcmp@plt+0x3e648>
  403e9e:	xchg   ax,ax
  403ea0:	mov    rdi,QWORD PTR [rbx]
  403ea3:	call   4380b0 <strcmp@plt+0x348f8>
  403ea8:	mov    rdi,QWORD PTR [rbx]
  403eab:	call   437fb0 <strcmp@plt+0x347f8>
  403eb0:	mov    rdi,rbp
  403eb3:	call   442300 <strcmp@plt+0x3eb48>
  403eb8:	jmp    403ea0 <strcmp@plt+0x6e8>
  403eba:	lea    rdi,[rip+0x4eede]        # 452d9f <strcmp@plt+0x4f5e7>
  403ec1:	call   403730 <strdup@plt>
  403ec6:	mov    rbx,0x4747c8
  403ecd:	mov    QWORD PTR [rbx],rax
  403ed0:	jmp    403cb2 <strcmp@plt+0x4fa>
  403ed5:	cmp    DWORD PTR [rbp+0x0],0x1
  403ed9:	jg     403f67 <strcmp@plt+0x7af>
  403edf:	mov    rdi,QWORD PTR [r12]
  403ee3:	call   40b890 <strcmp@plt+0x80d8>
  403ee8:	mov    r14,0x46c558
  403eef:	mov    rdx,QWORD PTR [rax+0x60]
  403ef3:	mov    edi,r13d
  403ef6:	mov    esi,DWORD PTR [rax+0x58]
  403ef9:	xor    eax,eax
  403efb:	mov    rcx,QWORD PTR [r14]
  403efe:	call   QWORD PTR [rcx]
  403f00:	sub    eax,0x1
  403f03:	je     403f11 <strcmp@plt+0x759>
  403f05:	mov    QWORD PTR [r14],0x0
  403f0c:	call   43f160 <strcmp@plt+0x3b9a8>
  403f11:	cmp    DWORD PTR [rbp+0x0],0x0
  403f15:	jle    403e42 <strcmp@plt+0x68a>
  403f1b:	lea    rsi,[rip+0x4eecb]        # 452ded <strcmp@plt+0x4f635>
  403f22:	mov    edi,0x5
  403f27:	xor    eax,eax
  403f29:	call   4306a0 <strcmp@plt+0x2cee8>
  403f2e:	jmp    403e42 <strcmp@plt+0x68a>
  403f33:	mov    rax,0x4747c0
  403f3a:	mov    DWORD PTR [rax],0x0
  403f40:	jmp    403d1c <strcmp@plt+0x564>
  403f45:	call   43f160 <strcmp@plt+0x3b9a8>
  403f4a:	jmp    403c93 <strcmp@plt+0x4db>
  403f4f:	lea    rsi,[rip+0x4ed82]        # 452cd8 <strcmp@plt+0x4f520>
  403f56:	mov    edi,0x4
  403f5b:	xor    eax,eax
  403f5d:	call   4306a0 <strcmp@plt+0x2cee8>
  403f62:	jmp    403d1c <strcmp@plt+0x564>
  403f67:	lea    rsi,[rip+0x4ee68]        # 452dd6 <strcmp@plt+0x4f61e>
  403f6e:	mov    edi,0x6
  403f73:	xor    eax,eax
  403f75:	call   4306a0 <strcmp@plt+0x2cee8>
  403f7a:	jmp    403edf <strcmp@plt+0x727>
  403f7f:	call   43f160 <strcmp@plt+0x3b9a8>
  403f84:	jmp    403e09 <strcmp@plt+0x651>
  403f89:	call   43f160 <strcmp@plt+0x3b9a8>
  403f8e:	jmp    403d9d <strcmp@plt+0x5e5>
  403f93:	call   43f160 <strcmp@plt+0x3b9a8>
  403f98:	jmp    403d89 <strcmp@plt+0x5d1>
  403f9d:	call   43f160 <strcmp@plt+0x3b9a8>
  403fa2:	jmp    403d63 <strcmp@plt+0x5ab>
  403fa7:	lea    rsi,[rip+0x4ed82]        # 452d30 <strcmp@plt+0x4f578>
  403fae:	mov    edi,0x5
  403fb3:	xor    eax,eax
  403fb5:	call   4306a0 <strcmp@plt+0x2cee8>
  403fba:	jmp    403d4d <strcmp@plt+0x595>
  403fbf:	mov    rdx,QWORD PTR [rbx]
  403fc2:	lea    rsi,[rip+0x4ede4]        # 452dad <strcmp@plt+0x4f5f5>
  403fc9:	mov    edi,0x1
  403fce:	xor    eax,eax
  403fd0:	call   4306a0 <strcmp@plt+0x2cee8>
  403fd5:	xor    edi,edi
  403fd7:	call   4034c0 <exit@plt>
  403fdc:	mov    rax,0x4747c0
  403fe3:	mov    DWORD PTR [rax],0x2
  403fe9:	jmp    403d1c <strcmp@plt+0x564>
  403fee:	xchg   ax,ax
  403ff0:	endbr64 
  403ff4:	xor    ebp,ebp
  403ff6:	mov    r9,rdx
  403ff9:	pop    rsi
  403ffa:	mov    rdx,rsp
  403ffd:	and    rsp,0xfffffffffffffff0
  404001:	push   rax
  404002:	push   rsp
  404003:	mov    r8,0x4454e0
  40400a:	mov    rcx,0x445470
  404011:	mov    rdi,0x403b90
  404018:	call   QWORD PTR [rip+0x63fd2]        # 467ff0 <strcmp@plt+0x64838>
  40401e:	hlt    
  40401f:	nop
  404020:	endbr64 
  404024:	ret    
  404025:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40402f:	nop
  404030:	mov    eax,0x46c227
  404035:	push   rbp
  404036:	sub    rax,0x46c220
  40403c:	cmp    rax,0xe
  404040:	mov    rbp,rsp
  404043:	jbe    404060 <strcmp@plt+0x8a8>
  404045:	mov    eax,0x0
  40404a:	test   rax,rax
  40404d:	je     404060 <strcmp@plt+0x8a8>
  40404f:	pop    rbp
  404050:	mov    edi,0x46c220
  404055:	jmp    rax
  404057:	nop    WORD PTR [rax+rax*1+0x0]
  404060:	pop    rbp
  404061:	ret    
  404062:	nop    DWORD PTR [rax+0x0]
  404066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404070:	mov    esi,0x46c220
  404075:	push   rbp
  404076:	sub    rsi,0x46c220
  40407d:	sar    rsi,0x3
  404081:	mov    rbp,rsp
  404084:	mov    rax,rsi
  404087:	shr    rax,0x3f
  40408b:	add    rsi,rax
  40408e:	sar    rsi,1
  404091:	je     4040a8 <strcmp@plt+0x8f0>
  404093:	mov    eax,0x0
  404098:	test   rax,rax
  40409b:	je     4040a8 <strcmp@plt+0x8f0>
  40409d:	pop    rbp
  40409e:	mov    edi,0x46c220
  4040a3:	jmp    rax
  4040a5:	nop    DWORD PTR [rax]
  4040a8:	pop    rbp
  4040a9:	ret    
  4040aa:	nop    WORD PTR [rax+rax*1+0x0]
  4040b0:	cmp    BYTE PTR [rip+0x68169],0x0        # 46c220 <strcmp@plt+0x68a68>
  4040b7:	jne    4040ca <strcmp@plt+0x912>
  4040b9:	push   rbp
  4040ba:	mov    rbp,rsp
  4040bd:	call   404030 <strcmp@plt+0x878>
  4040c2:	pop    rbp
  4040c3:	mov    BYTE PTR [rip+0x68156],0x1        # 46c220 <strcmp@plt+0x68a68>
  4040ca:	repz ret 
  4040cc:	nop    DWORD PTR [rax+0x0]
  4040d0:	mov    edi,0x467c38
  4040d5:	cmp    QWORD PTR [rdi],0x0
  4040d9:	jne    4040e0 <strcmp@plt+0x928>
  4040db:	jmp    404070 <strcmp@plt+0x8b8>
  4040dd:	nop    DWORD PTR [rax]
  4040e0:	mov    eax,0x0
  4040e5:	test   rax,rax
  4040e8:	je     4040db <strcmp@plt+0x923>
  4040ea:	push   rbp
  4040eb:	mov    rbp,rsp
  4040ee:	call   rax
  4040f0:	pop    rbp
  4040f1:	jmp    404070 <strcmp@plt+0x8b8>
  4040f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404100:	push   r15
  404102:	push   r14
  404104:	push   r13
  404106:	push   r12
  404108:	push   rbp
  404109:	push   rbx
  40410a:	sub    rsp,0x18
  40410e:	test   rdi,rdi
  404111:	je     4041ad <strcmp@plt+0x9f5>
  404117:	mov    r13,rsi
  40411a:	mov    QWORD PTR [rsp],rdi
  40411e:	mov    r12d,0xffffffff
  404124:	call   4031d0 <strlen@plt>
  404129:	mov    rbp,QWORD PTR [r13+0x0]
  40412d:	mov    rbx,rax
  404130:	test   rbp,rbp
  404133:	je     40419b <strcmp@plt+0x9e3>
  404135:	xor    r15d,r15d
  404138:	mov    DWORD PTR [rsp+0xc],0x0
  404140:	xor    r14d,r14d
  404143:	nop    DWORD PTR [rax+rax*1+0x0]
  404148:	mov    rdi,QWORD PTR [rsp]
  40414c:	mov    rdx,rbx
  40414f:	mov    rsi,rbp
  404152:	mov    r12d,r15d
  404155:	call   403210 <strncmp@plt>
  40415a:	test   eax,eax
  40415c:	jne    404174 <strcmp@plt+0x9bc>
  40415e:	mov    rdi,rbp
  404161:	add    r14d,0x1
  404165:	call   4031d0 <strlen@plt>
  40416a:	cmp    rbx,rax
  40416d:	je     40419b <strcmp@plt+0x9e3>
  40416f:	mov    DWORD PTR [rsp+0xc],r15d
  404174:	add    r15,0x1
  404178:	mov    rbp,QWORD PTR [r13+r15*8+0x0]
  40417d:	test   rbp,rbp
  404180:	jne    404148 <strcmp@plt+0x990>
  404182:	cmp    r14d,0x1
  404186:	mov    r12d,DWORD PTR [rsp+0xc]
  40418b:	je     40419b <strcmp@plt+0x9e3>
  40418d:	xor    r12d,r12d
  404190:	test   r14d,r14d
  404193:	sete   r12b
  404197:	sub    r12d,0x2
  40419b:	add    rsp,0x18
  40419f:	mov    eax,r12d
  4041a2:	pop    rbx
  4041a3:	pop    rbp
  4041a4:	pop    r12
  4041a6:	pop    r13
  4041a8:	pop    r14
  4041aa:	pop    r15
  4041ac:	ret    
  4041ad:	mov    r12d,0xffffffff
  4041b3:	jmp    40419b <strcmp@plt+0x9e3>
  4041b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4041c0:	push   rbx
  4041c1:	mov    rbx,rdi
  4041c4:	mov    rdi,QWORD PTR [rdi+0x18]
  4041c8:	test   rdi,rdi
  4041cb:	je     4041da <strcmp@plt+0xa22>
  4041cd:	call   4037b0 <free@plt>
  4041d2:	mov    QWORD PTR [rbx+0x18],0x0
  4041da:	mov    rdi,QWORD PTR [rbx+0x30]
  4041de:	test   rdi,rdi
  4041e1:	je     4041f0 <strcmp@plt+0xa38>
  4041e3:	call   4037b0 <free@plt>
  4041e8:	mov    QWORD PTR [rbx+0x30],0x0
  4041f0:	mov    rdi,QWORD PTR [rbx+0x48]
  4041f4:	test   rdi,rdi
  4041f7:	je     404206 <strcmp@plt+0xa4e>
  4041f9:	call   4037b0 <free@plt>
  4041fe:	mov    QWORD PTR [rbx+0x48],0x0
  404206:	mov    rdi,QWORD PTR [rbx+0x50]
  40420a:	test   rdi,rdi
  40420d:	je     40421c <strcmp@plt+0xa64>
  40420f:	call   4037b0 <free@plt>
  404214:	mov    QWORD PTR [rbx+0x50],0x0
  40421c:	mov    DWORD PTR [rbx+0x60],0x0
  404223:	mov    DWORD PTR [rbx+0x64],0x0
  40422a:	mov    DWORD PTR [rbx+0x68],0x0
  404231:	mov    DWORD PTR [rbx+0x6c],0x0
  404238:	mov    DWORD PTR [rbx+0x70],0x0
  40423f:	mov    DWORD PTR [rbx+0x74],0x0
  404246:	mov    DWORD PTR [rbx+0x78],0x0
  40424d:	pop    rbx
  40424e:	ret    
  40424f:	nop
  404250:	test   rdi,rdi
  404253:	je     404298 <strcmp@plt+0xae0>
  404255:	push   rbp
  404256:	push   rbx
  404257:	mov    rbx,rdi
  40425a:	sub    rsp,0x8
  40425e:	call   4031d0 <strlen@plt>
  404263:	lea    rbp,[rax+0x1]
  404267:	mov    rdi,rbp
  40426a:	call   403530 <malloc@plt>
  40426f:	test   rax,rax
  404272:	mov    rcx,rax
  404275:	je     404288 <strcmp@plt+0xad0>
  404277:	mov    rdx,rbp
  40427a:	mov    rsi,rbx
  40427d:	mov    rdi,rax
  404280:	call   403340 <memcpy@plt>
  404285:	mov    rcx,rax
  404288:	add    rsp,0x8
  40428c:	mov    rax,rcx
  40428f:	pop    rbx
  404290:	pop    rbp
  404291:	ret    
  404292:	nop    WORD PTR [rax+rax*1+0x0]
  404298:	xor    ecx,ecx
  40429a:	mov    rax,rcx
  40429d:	ret    
  40429e:	xchg   ax,ax
  4042a0:	test   rdx,rdx
  4042a3:	je     404330 <strcmp@plt+0xb78>
  4042a9:	push   r13
  4042ab:	push   r12
  4042ad:	mov    r13,rsi
  4042b0:	push   rbp
  4042b1:	push   rbx
  4042b2:	mov    rbp,rcx
  4042b5:	mov    rbx,rdx
  4042b8:	mov    r12,rdi
  4042bb:	sub    rsp,0x8
  4042bf:	test   rcx,rcx
  4042c2:	je     404300 <strcmp@plt+0xb48>
  4042c4:	mov    rsi,rcx
  4042c7:	mov    rdi,rdx
  4042ca:	call   404100 <strcmp@plt+0x948>
  4042cf:	test   eax,eax
  4042d1:	js     404300 <strcmp@plt+0xb48>
  4042d3:	cdqe   
  4042d5:	mov    r8,rbx
  4042d8:	mov    rcx,r13
  4042db:	mov    r9,QWORD PTR [rbp+rax*8+0x0]
  4042e0:	add    rsp,0x8
  4042e4:	mov    rdi,r12
  4042e7:	pop    rbx
  4042e8:	pop    rbp
  4042e9:	pop    r12
  4042eb:	pop    r13
  4042ed:	lea    rdx,[rip+0x41d10]        # 446004 <strcmp@plt+0x4284c>
  4042f4:	mov    esi,0x1
  4042f9:	xor    eax,eax
  4042fb:	jmp    403680 <__fprintf_chk@plt>
  404300:	add    rsp,0x8
  404304:	mov    r8,rbx
  404307:	mov    rcx,r13
  40430a:	pop    rbx
  40430b:	mov    rdi,r12
  40430e:	lea    rdx,[rip+0x41cfd]        # 446012 <strcmp@plt+0x4285a>
  404315:	mov    esi,0x1
  40431a:	pop    rbp
  40431b:	pop    r12
  40431d:	pop    r13
  40431f:	xor    eax,eax
  404321:	jmp    403680 <__fprintf_chk@plt>
  404326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404330:	lea    rdx,[rip+0x4c154]        # 45048b <strcmp@plt+0x4ccd3>
  404337:	mov    rcx,rsi
  40433a:	xor    eax,eax
  40433c:	mov    esi,0x1
  404341:	jmp    403680 <__fprintf_chk@plt>
  404346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404350:	push   r15
  404352:	push   r14
  404354:	mov    r15,rdi
  404357:	push   r13
  404359:	push   r12
  40435b:	mov    r14,rsi
  40435e:	push   rbp
  40435f:	push   rbx
  404360:	mov    rbp,r9
  404363:	mov    r12,rdx
  404366:	mov    rbx,rcx
  404369:	mov    r13,r8
  40436c:	sub    rsp,0x18
  404370:	test   rcx,rcx
  404373:	mov    r9d,DWORD PTR [rsp+0x70]
  404378:	je     4043f0 <strcmp@plt+0xc38>
  40437a:	mov    eax,DWORD PTR [rcx]
  40437c:	test   eax,eax
  40437e:	je     4043e0 <strcmp@plt+0xc28>
  404380:	cmp    r9b,0x2d
  404384:	je     4045b0 <strcmp@plt+0xdf8>
  40438a:	lea    rax,[rip+0x41ca3]        # 446034 <strcmp@plt+0x4287c>
  404391:	sub    rsp,0x8
  404395:	mov    rcx,QWORD PTR [rip+0x67e8c]        # 46c228 <strcmp@plt+0x68a70>
  40439c:	lea    rdx,[rip+0x41d05]        # 4460a8 <strcmp@plt+0x428f0>
  4043a3:	movsx  r9d,r9b
  4043a7:	mov    esi,0x1
  4043ac:	push   rax
  4043ad:	mov    rax,QWORD PTR [rip+0x63c14]        # 467fc8 <strcmp@plt+0x64810>
  4043b4:	mov    r8,QWORD PTR [rsp+0x78]
  4043b9:	mov    rdi,QWORD PTR [rax]
  4043bc:	xor    eax,eax
  4043be:	call   403680 <__fprintf_chk@plt>
  4043c3:	pop    r8
  4043c5:	pop    r9
  4043c7:	mov    eax,0x1
  4043cc:	add    rsp,0x18
  4043d0:	pop    rbx
  4043d1:	pop    rbp
  4043d2:	pop    r12
  4043d4:	pop    r13
  4043d6:	pop    r14
  4043d8:	pop    r15
  4043da:	ret    
  4043db:	nop    DWORD PTR [rax+rax*1+0x0]
  4043e0:	mov    r11d,DWORD PTR [rsp+0x58]
  4043e5:	test   r11d,r11d
  4043e8:	jne    404548 <strcmp@plt+0xd90>
  4043ee:	xchg   ax,ax
  4043f0:	test   rbp,rbp
  4043f3:	mov    DWORD PTR [rsp+0xc],r9d
  4043f8:	je     4045a0 <strcmp@plt+0xde8>
  4043fe:	mov    rsi,rbp
  404401:	mov    rdi,r13
  404404:	call   404100 <strcmp@plt+0x948>
  404409:	test   eax,eax
  40440b:	mov    r9d,DWORD PTR [rsp+0xc]
  404410:	js     4044b0 <strcmp@plt+0xcf8>
  404416:	test   r12,r12
  404419:	je     404560 <strcmp@plt+0xda8>
  40441f:	mov    ecx,DWORD PTR [r12]
  404423:	test   ecx,ecx
  404425:	je     404440 <strcmp@plt+0xc88>
  404427:	mov    edx,DWORD PTR [rsp+0x60]
  40442b:	test   edx,edx
  40442d:	jne    404440 <strcmp@plt+0xc88>
  40442f:	xor    eax,eax
  404431:	add    rsp,0x18
  404435:	pop    rbx
  404436:	pop    rbp
  404437:	pop    r12
  404439:	pop    r13
  40443b:	pop    r14
  40443d:	pop    r15
  40443f:	ret    
  404440:	test   rbx,rbx
  404443:	je     404448 <strcmp@plt+0xc90>
  404445:	add    DWORD PTR [rbx],0x1
  404448:	add    DWORD PTR [r12],0x1
  40444d:	test   rbp,rbp
  404450:	je     4045f0 <strcmp@plt+0xe38>
  404456:	movsxd rdx,eax
  404459:	mov    rbx,QWORD PTR [rbp+rdx*8+0x0]
  40445e:	cmp    DWORD PTR [rsp+0x50],0x1
  404463:	je     404578 <strcmp@plt+0xdc0>
  404469:	cmp    DWORD PTR [rsp+0x50],0x2
  40446e:	jne    404530 <strcmp@plt+0xd78>
  404474:	test   rbx,rbx
  404477:	je     40447c <strcmp@plt+0xcc4>
  404479:	mov    DWORD PTR [r15],eax
  40447c:	test   r13,r13
  40447f:	je     40442f <strcmp@plt+0xc77>
  404481:	test   r14,r14
  404484:	je     40442f <strcmp@plt+0xc77>
  404486:	mov    rdi,QWORD PTR [r14]
  404489:	test   rdi,rdi
  40448c:	je     404493 <strcmp@plt+0xcdb>
  40448e:	call   4037b0 <free@plt>
  404493:	mov    rdi,r13
  404496:	call   404250 <strcmp@plt+0xa98>
  40449b:	mov    QWORD PTR [r14],rax
  40449e:	add    rsp,0x18
  4044a2:	xor    eax,eax
  4044a4:	pop    rbx
  4044a5:	pop    rbp
  4044a6:	pop    r12
  4044a8:	pop    r13
  4044aa:	pop    r14
  4044ac:	pop    r15
  4044ae:	ret    
  4044af:	nop
  4044b0:	cmp    r9b,0x2d
  4044b4:	je     404600 <strcmp@plt+0xe48>
  4044ba:	cmp    eax,0xfffffffe
  4044bd:	lea    r8,[rip+0x41b57]        # 44601b <strcmp@plt+0x42863>
  4044c4:	lea    rax,[rip+0x438c5]        # 447d90 <strcmp@plt+0x445d8>
  4044cb:	movsx  r9d,r9b
  4044cf:	mov    rcx,QWORD PTR [rip+0x67d52]        # 46c228 <strcmp@plt+0x68a70>
  4044d6:	lea    rdx,[rip+0x41c33]        # 446110 <strcmp@plt+0x42958>
  4044dd:	cmovne r8,rax
  4044e1:	lea    rax,[rip+0x41b4c]        # 446034 <strcmp@plt+0x4287c>
  4044e8:	sub    rsp,0x8
  4044ec:	mov    esi,0x1
  4044f1:	push   rax
  4044f2:	mov    rax,QWORD PTR [rip+0x63acf]        # 467fc8 <strcmp@plt+0x64810>
  4044f9:	push   r9
  4044fb:	push   QWORD PTR [rsp+0x80]
  404502:	mov    r9,r13
  404505:	mov    rdi,QWORD PTR [rax]
  404508:	xor    eax,eax
  40450a:	call   403680 <__fprintf_chk@plt>
  40450f:	add    rsp,0x20
  404513:	mov    eax,0x1
  404518:	add    rsp,0x18
  40451c:	pop    rbx
  40451d:	pop    rbp
  40451e:	pop    r12
  404520:	pop    r13
  404522:	pop    r14
  404524:	pop    r15
  404526:	ret    
  404527:	nop    WORD PTR [rax+rax*1+0x0]
  404530:	mov    eax,DWORD PTR [rsp+0x50]
  404534:	test   eax,eax
  404536:	jne    40447c <strcmp@plt+0xcc4>
  40453c:	xor    eax,eax
  40453e:	jmp    404431 <strcmp@plt+0xc79>
  404543:	nop    DWORD PTR [rax+rax*1+0x0]
  404548:	mov    r10d,DWORD PTR [rdx]
  40454b:	test   r10d,r10d
  40454e:	je     4043f0 <strcmp@plt+0xc38>
  404554:	jmp    404380 <strcmp@plt+0xbc8>
  404559:	nop    DWORD PTR [rax+0x0]
  404560:	test   rbx,rbx
  404563:	je     40444d <strcmp@plt+0xc95>
  404569:	add    DWORD PTR [rbx],0x1
  40456c:	jmp    40444d <strcmp@plt+0xc95>
  404571:	nop    DWORD PTR [rax+0x0]
  404578:	test   rbx,rbx
  40457b:	je     40447c <strcmp@plt+0xcc4>
  404581:	mov    rdi,QWORD PTR [r15]
  404584:	test   rdi,rdi
  404587:	je     40458e <strcmp@plt+0xdd6>
  404589:	call   4037b0 <free@plt>
  40458e:	mov    rdi,rbx
  404591:	call   404250 <strcmp@plt+0xa98>
  404596:	mov    QWORD PTR [r15],rax
  404599:	jmp    40447c <strcmp@plt+0xcc4>
  40459e:	xchg   ax,ax
  4045a0:	xor    eax,eax
  4045a2:	test   r12,r12
  4045a5:	jne    40441f <strcmp@plt+0xc67>
  4045ab:	jmp    404560 <strcmp@plt+0xda8>
  4045ad:	nop    DWORD PTR [rax]
  4045b0:	mov    rax,QWORD PTR [rip+0x63a11]        # 467fc8 <strcmp@plt+0x64810>
  4045b7:	mov    r8,QWORD PTR [rsp+0x68]
  4045bc:	lea    r9,[rip+0x41a71]        # 446034 <strcmp@plt+0x4287c>
  4045c3:	mov    rcx,QWORD PTR [rip+0x67c5e]        # 46c228 <strcmp@plt+0x68a70>
  4045ca:	lea    rdx,[rip+0x41b0f]        # 4460e0 <strcmp@plt+0x42928>
  4045d1:	mov    esi,0x1
  4045d6:	mov    rdi,QWORD PTR [rax]
  4045d9:	xor    eax,eax
  4045db:	call   403680 <__fprintf_chk@plt>
  4045e0:	mov    eax,0x1
  4045e5:	jmp    4043cc <strcmp@plt+0xc14>
  4045ea:	nop    WORD PTR [rax+rax*1+0x0]
  4045f0:	mov    rbx,r13
  4045f3:	jmp    40445e <strcmp@plt+0xca6>
  4045f8:	nop    DWORD PTR [rax+rax*1+0x0]
  404600:	cmp    eax,0xfffffffe
  404603:	lea    rax,[rip+0x41a2a]        # 446034 <strcmp@plt+0x4287c>
  40460a:	lea    r8,[rip+0x41a0a]        # 44601b <strcmp@plt+0x42863>
  404611:	mov    rcx,QWORD PTR [rip+0x67c10]        # 46c228 <strcmp@plt+0x68a70>
  404618:	lea    rdx,[rip+0x41b29]        # 446148 <strcmp@plt+0x42990>
  40461f:	mov    esi,0x1
  404624:	push   rax
  404625:	lea    rax,[rip+0x43764]        # 447d90 <strcmp@plt+0x445d8>
  40462c:	push   QWORD PTR [rsp+0x70]
  404630:	mov    r9,r13
  404633:	cmovne r8,rax
  404637:	mov    rax,QWORD PTR [rip+0x6398a]        # 467fc8 <strcmp@plt+0x64810>
  40463e:	mov    rdi,QWORD PTR [rax]
  404641:	xor    eax,eax
  404643:	call   403680 <__fprintf_chk@plt>
  404648:	pop    rsi
  404649:	mov    eax,0x1
  40464e:	pop    rdi
  40464f:	jmp    4043cc <strcmp@plt+0xc14>
  404654:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40465f:	nop
  404660:	lea    rdx,[rip+0x419be]        # 446025 <strcmp@plt+0x4286d>
  404667:	lea    rcx,[rip+0x4e72b]        # 452d99 <strcmp@plt+0x4f5e1>
  40466e:	lea    rsi,[rip+0x419b4]        # 446029 <strcmp@plt+0x42871>
  404675:	sub    rsp,0x8
  404679:	xor    eax,eax
  40467b:	mov    edi,0x1
  404680:	call   403030 <__printf_chk@plt>
  404685:	mov    rax,0x468588
  40468c:	mov    rdx,QWORD PTR [rax]
  40468f:	cmp    BYTE PTR [rdx],0x0
  404692:	jne    4046a0 <strcmp@plt+0xee8>
  404694:	add    rsp,0x8
  404698:	ret    
  404699:	nop    DWORD PTR [rax+0x0]
  4046a0:	lea    rsi,[rip+0x4bde3]        # 45048a <strcmp@plt+0x4ccd2>
  4046a7:	mov    edi,0x1
  4046ac:	xor    eax,eax
  4046ae:	add    rsp,0x8
  4046b2:	jmp    403030 <__printf_chk@plt>
  4046b7:	nop    WORD PTR [rax+rax*1+0x0]
  4046c0:	push   r12
  4046c2:	push   rbp
  4046c3:	push   rbx
  4046c4:	mov    rbx,0x468598
  4046cb:	mov    rdi,QWORD PTR [rbx]
  4046ce:	call   4031d0 <strlen@plt>
  4046d3:	mov    r12,rax
  4046d6:	mov    rax,0x468590
  4046dd:	mov    rbp,QWORD PTR [rax]
  4046e0:	mov    rdi,rbp
  4046e3:	call   4031d0 <strlen@plt>
  4046e8:	test   rax,rax
  4046eb:	jne    404740 <strcmp@plt+0xf88>
  4046ed:	test   r12,r12
  4046f0:	jne    40474d <strcmp@plt+0xf95>
  4046f2:	mov    rax,0x468580
  4046f9:	mov    rdx,QWORD PTR [rax]
  4046fc:	cmp    BYTE PTR [rdx],0x0
  4046ff:	je     404714 <strcmp@plt+0xf5c>
  404701:	lea    rsi,[rip+0x41928]        # 446030 <strcmp@plt+0x42878>
  404708:	mov    edi,0x1
  40470d:	xor    eax,eax
  40470f:	call   403030 <__printf_chk@plt>
  404714:	mov    rbx,0x468540
  40471b:	mov    rdi,QWORD PTR [rbx]
  40471e:	test   rdi,rdi
  404721:	je     404739 <strcmp@plt+0xf81>
  404723:	nop    DWORD PTR [rax+rax*1+0x0]
  404728:	add    rbx,0x8
  40472c:	call   403600 <puts@plt>
  404731:	mov    rdi,QWORD PTR [rbx]
  404734:	test   rdi,rdi
  404737:	jne    404728 <strcmp@plt+0xf70>
  404739:	pop    rbx
  40473a:	pop    rbp
  40473b:	pop    r12
  40473d:	ret    
  40473e:	xchg   ax,ax
  404740:	mov    rdi,rbp
  404743:	call   403600 <puts@plt>
  404748:	test   r12,r12
  40474b:	je     404755 <strcmp@plt+0xf9d>
  40474d:	mov    rdi,QWORD PTR [rbx]
  404750:	call   403600 <puts@plt>
  404755:	mov    edi,0xa
  40475a:	call   403570 <putchar@plt>
  40475f:	jmp    4046f2 <strcmp@plt+0xf3a>
  404761:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40476c:	nop    DWORD PTR [rax+0x0]
  404770:	mov    rax,0x468540
  404777:	mov    DWORD PTR [rdi+0x60],0x0
  40477e:	mov    DWORD PTR [rdi+0x64],0x0
  404785:	mov    DWORD PTR [rdi+0x68],0x0
  40478c:	mov    DWORD PTR [rdi+0x6c],0x0
  404793:	mov    DWORD PTR [rdi+0x70],0x0
  40479a:	mov    rdx,QWORD PTR [rax]
  40479d:	mov    DWORD PTR [rdi+0x74],0x0
  4047a4:	mov    DWORD PTR [rdi+0x78],0x0
  4047ab:	mov    DWORD PTR [rdi+0x10],0xffffffff
  4047b2:	mov    QWORD PTR [rdi+0x18],0x0
  4047ba:	mov    DWORD PTR [rdi+0x28],0xffffffff
  4047c1:	mov    QWORD PTR [rdi],rdx
  4047c4:	mov    rdx,QWORD PTR [rax+0x8]
  4047c8:	mov    QWORD PTR [rdi+0x30],0x0
  4047d0:	mov    QWORD PTR [rdi+0x48],0x0
  4047d8:	mov    QWORD PTR [rdi+0x50],0x0
  4047e0:	mov    QWORD PTR [rdi+0x8],rdx
  4047e4:	mov    rdx,QWORD PTR [rax+0x18]
  4047e8:	mov    QWORD PTR [rdi+0x20],rdx
  4047ec:	mov    rdx,QWORD PTR [rax+0x20]
  4047f0:	mov    QWORD PTR [rdi+0x38],rdx
  4047f4:	mov    rdx,QWORD PTR [rax+0x28]
  4047f8:	mov    rax,QWORD PTR [rax+0x30]
  4047fc:	mov    QWORD PTR [rdi+0x40],rdx
  404800:	mov    QWORD PTR [rdi+0x58],rax
  404804:	ret    
  404805:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404810:	test   rdi,rdi
  404813:	je     404837 <strcmp@plt+0x107f>
  404815:	mov    DWORD PTR [rdi],0x0
  40481b:	mov    DWORD PTR [rdi+0x4],0x1
  404822:	mov    DWORD PTR [rdi+0x8],0x1
  404829:	mov    DWORD PTR [rdi+0xc],0x0
  404830:	mov    DWORD PTR [rdi+0x10],0x1
  404837:	repz ret 
  404839:	nop    DWORD PTR [rax+0x0]
  404840:	push   rbx
  404841:	mov    edi,0x14
  404846:	call   403530 <malloc@plt>
  40484b:	mov    rbx,rax
  40484e:	mov    rdi,rax
  404851:	call   404810 <strcmp@plt+0x1058>
  404856:	mov    rax,rbx
  404859:	pop    rbx
  40485a:	ret    
  40485b:	nop    DWORD PTR [rax+rax*1+0x0]
  404860:	push   rbp
  404861:	push   rbx
  404862:	sub    rsp,0x18
  404866:	test   rdi,rdi
  404869:	je     404990 <strcmp@plt+0x11d8>
  40486f:	mov    r9d,DWORD PTR [rsi+0x60]
  404873:	mov    rbp,rdi
  404876:	mov    rbx,rsi
  404879:	test   r9d,r9d
  40487c:	jne    404968 <strcmp@plt+0x11b0>
  404882:	mov    r8d,DWORD PTR [rbx+0x64]
  404886:	test   r8d,r8d
  404889:	jne    404940 <strcmp@plt+0x1188>
  40488f:	mov    edi,DWORD PTR [rbx+0x68]
  404892:	test   edi,edi
  404894:	jne    404920 <strcmp@plt+0x1168>
  40489a:	mov    esi,DWORD PTR [rbx+0x6c]
  40489d:	test   esi,esi
  40489f:	jne    404900 <strcmp@plt+0x1148>
  4048a1:	mov    ecx,DWORD PTR [rbx+0x70]
  4048a4:	test   ecx,ecx
  4048a6:	jne    4048d8 <strcmp@plt+0x1120>
  4048a8:	mov    edx,DWORD PTR [rbx+0x74]
  4048ab:	xor    eax,eax
  4048ad:	test   edx,edx
  4048af:	je     4048ce <strcmp@plt+0x1116>
  4048b1:	mov    rdx,QWORD PTR [rbx+0x50]
  4048b5:	lea    rsi,[rip+0x4178c]        # 446048 <strcmp@plt+0x42890>
  4048bc:	xor    ecx,ecx
  4048be:	mov    rdi,rbp
  4048c1:	mov    DWORD PTR [rsp+0xc],eax
  4048c5:	call   4042a0 <strcmp@plt+0xae8>
  4048ca:	mov    eax,DWORD PTR [rsp+0xc]
  4048ce:	add    rsp,0x18
  4048d2:	pop    rbx
  4048d3:	pop    rbp
  4048d4:	ret    
  4048d5:	nop    DWORD PTR [rax]
  4048d8:	lea    rcx,[rip+0x4175f]        # 44603e <strcmp@plt+0x42886>
  4048df:	lea    rdx,[rip+0x4bba5]        # 45048b <strcmp@plt+0x4ccd3>
  4048e6:	mov    esi,0x1
  4048eb:	mov    rdi,rbp
  4048ee:	xor    eax,eax
  4048f0:	call   403680 <__fprintf_chk@plt>
  4048f5:	jmp    4048a8 <strcmp@plt+0x10f0>
  4048f7:	nop    WORD PTR [rax+rax*1+0x0]
  404900:	mov    rdx,QWORD PTR [rbx+0x30]
  404904:	mov    rcx,0x4684e0
  40490b:	lea    rsi,[rip+0x41728]        # 44603a <strcmp@plt+0x42882>
  404912:	mov    rdi,rbp
  404915:	call   4042a0 <strcmp@plt+0xae8>
  40491a:	jmp    4048a1 <strcmp@plt+0x10e9>
  40491c:	nop    DWORD PTR [rax+0x0]
  404920:	mov    rdx,QWORD PTR [rbx+0x18]
  404924:	mov    rcx,0x468500
  40492b:	lea    rsi,[rip+0x4fd84]        # 4546b6 <strcmp@plt+0x50efe>
  404932:	mov    rdi,rbp
  404935:	call   4042a0 <strcmp@plt+0xae8>
  40493a:	jmp    40489a <strcmp@plt+0x10e2>
  40493f:	nop
  404940:	lea    rcx,[rip+0x4fb8d]        # 4544d4 <strcmp@plt+0x50d1c>
  404947:	lea    rdx,[rip+0x4bb3d]        # 45048b <strcmp@plt+0x4ccd3>
  40494e:	mov    esi,0x1
  404953:	mov    rdi,rbp
  404956:	xor    eax,eax
  404958:	call   403680 <__fprintf_chk@plt>
  40495d:	jmp    40488f <strcmp@plt+0x10d7>
  404962:	nop    WORD PTR [rax+rax*1+0x0]
  404968:	lea    rcx,[rip+0x416c6]        # 446035 <strcmp@plt+0x4287d>
  40496f:	lea    rdx,[rip+0x4bb15]        # 45048b <strcmp@plt+0x4ccd3>
  404976:	mov    esi,0x1
  40497b:	xor    eax,eax
  40497d:	call   403680 <__fprintf_chk@plt>
  404982:	jmp    404882 <strcmp@plt+0x10ca>
  404987:	nop    WORD PTR [rax+rax*1+0x0]
  404990:	mov    rax,QWORD PTR [rip+0x63631]        # 467fc8 <strcmp@plt+0x64810>
  404997:	lea    rcx,[rip+0x41687]        # 446025 <strcmp@plt+0x4286d>
  40499e:	lea    rdx,[rip+0x417d3]        # 446178 <strcmp@plt+0x429c0>
  4049a5:	mov    esi,0x1
  4049aa:	mov    rdi,QWORD PTR [rax]
  4049ad:	xor    eax,eax
  4049af:	call   403680 <__fprintf_chk@plt>
  4049b4:	mov    eax,0x1
  4049b9:	jmp    4048ce <strcmp@plt+0x1116>
  4049be:	xchg   ax,ax
  4049c0:	push   r12
  4049c2:	mov    r12,rsi
  4049c5:	push   rbp
  4049c6:	lea    rsi,[rip+0x41687]        # 446054 <strcmp@plt+0x4289c>
  4049cd:	push   rbx
  4049ce:	mov    rbp,rdi
  4049d1:	call   4034a0 <fopen@plt>
  4049d6:	test   rax,rax
  4049d9:	je     404a00 <strcmp@plt+0x1248>
  4049db:	mov    rbx,rax
  4049de:	mov    rsi,r12
  4049e1:	mov    rdi,rax
  4049e4:	call   404860 <strcmp@plt+0x10a8>
  4049e9:	mov    rdi,rbx
  4049ec:	mov    ebp,eax
  4049ee:	call   4033e0 <fclose@plt>
  4049f3:	mov    eax,ebp
  4049f5:	pop    rbx
  4049f6:	pop    rbp
  4049f7:	pop    r12
  4049f9:	ret    
  4049fa:	nop    WORD PTR [rax+rax*1+0x0]
  404a00:	mov    rax,QWORD PTR [rip+0x635c1]        # 467fc8 <strcmp@plt+0x64810>
  404a07:	lea    rcx,[rip+0x41617]        # 446025 <strcmp@plt+0x4286d>
  404a0e:	lea    rdx,[rip+0x4178b]        # 4461a0 <strcmp@plt+0x429e8>
  404a15:	mov    r8,rbp
  404a18:	mov    esi,0x1
  404a1d:	mov    ebp,0x1
  404a22:	mov    rdi,QWORD PTR [rax]
  404a25:	xor    eax,eax
  404a27:	call   403680 <__fprintf_chk@plt>
  404a2c:	mov    eax,ebp
  404a2e:	pop    rbx
  404a2f:	pop    rbp
  404a30:	pop    r12
  404a32:	ret    
  404a33:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404a3e:	xchg   ax,ax
  404a40:	jmp    4041c0 <strcmp@plt+0xa08>
  404a45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404a50:	push   r15
  404a52:	push   r14
  404a54:	mov    r14d,edi
  404a57:	push   r13
  404a59:	push   r12
  404a5b:	mov    r13,rcx
  404a5e:	push   rbp
  404a5f:	push   rbx
  404a60:	mov    r12,rsi
  404a63:	mov    rbx,rdx
  404a66:	sub    rsp,0xd8
  404a6d:	mov    r15d,DWORD PTR [rcx+0xc]
  404a71:	mov    rax,QWORD PTR fs:0x28
  404a7a:	mov    QWORD PTR [rsp+0xc8],rax
  404a82:	xor    eax,eax
  404a84:	mov    rax,QWORD PTR [rsi]
  404a87:	mov    QWORD PTR [rip+0x6779a],rax        # 46c228 <strcmp@plt+0x68a70>
  404a8e:	mov    eax,DWORD PTR [rcx]
  404a90:	mov    DWORD PTR [rsp+0xc],eax
  404a94:	mov    eax,DWORD PTR [rcx+0x4]
  404a97:	test   eax,eax
  404a99:	jne    404c90 <strcmp@plt+0x14d8>
  404a9f:	lea    rbp,[rsp+0x40]
  404aa4:	mov    rdi,rbp
  404aa7:	call   404770 <strcmp@plt+0xfb8>
  404aac:	mov    rax,QWORD PTR [rip+0x634fd]        # 467fb0 <strcmp@plt+0x647f8>
  404ab3:	mov    edx,DWORD PTR [r13+0x10]
  404ab7:	lea    r13,[rsp+0x3c]
  404abc:	mov    QWORD PTR [rax],0x0
  404ac3:	mov    rax,QWORD PTR [rip+0x63506]        # 467fd0 <strcmp@plt+0x64818>
  404aca:	mov    DWORD PTR [rax],0x0
  404ad0:	mov    rax,QWORD PTR [rip+0x63511]        # 467fe8 <strcmp@plt+0x64830>
  404ad7:	mov    DWORD PTR [rax],edx
  404ad9:	mov    rax,QWORD PTR [rip+0x634d8]        # 467fb8 <strcmp@plt+0x64800>
  404ae0:	mov    DWORD PTR [rax],0x3f
  404ae6:	lea    rax,[rbp+0x68]
  404aea:	mov    QWORD PTR [rsp+0x10],rax
  404aef:	lea    rax,[rbx+0x68]
  404af3:	mov    QWORD PTR [rsp+0x18],rax
  404af8:	lea    rax,[rbx+0x18]
  404afc:	mov    QWORD PTR [rsp+0x20],rax
  404b01:	lea    rax,[rbx+0x10]
  404b05:	mov    QWORD PTR [rsp+0x28],rax
  404b0a:	lea    rcx,[rip+0x638ef]        # 468400 <strcmp@plt+0x64c48>
  404b11:	lea    rdx,[rip+0x4153e]        # 446056 <strcmp@plt+0x4289e>
  404b18:	mov    r8,r13
  404b1b:	mov    rsi,r12
  404b1e:	mov    edi,r14d
  404b21:	mov    DWORD PTR [rsp+0x3c],0x0
  404b29:	call   403690 <getopt_long@plt>
  404b2e:	cmp    eax,0xffffffff
  404b31:	je     404d68 <strcmp@plt+0x15b0>
  404b37:	cmp    eax,0x56
  404b3a:	je     404d50 <strcmp@plt+0x1598>
  404b40:	jle    404b70 <strcmp@plt+0x13b8>
  404b42:	cmp    eax,0x64
  404b45:	je     404cf0 <strcmp@plt+0x1538>
  404b4b:	jle    404c50 <strcmp@plt+0x1498>
  404b51:	cmp    eax,0x66
  404b54:	je     404bc0 <strcmp@plt+0x1408>
  404b56:	cmp    eax,0x68
  404b59:	jne    404b8a <strcmp@plt+0x13d2>
  404b5b:	call   4046c0 <strcmp@plt+0xf08>
  404b60:	mov    rdi,rbp
  404b63:	call   404a40 <strcmp@plt+0x1288>
  404b68:	xor    edi,edi
  404b6a:	call   4034c0 <exit@plt>
  404b6f:	nop
  404b70:	cmp    eax,0x3f
  404b73:	je     404c10 <strcmp@plt+0x1458>
  404b79:	cmp    eax,0x44
  404b7c:	je     404ca0 <strcmp@plt+0x14e8>
  404b82:	test   eax,eax
  404b84:	je     404c10 <strcmp@plt+0x1458>
  404b8a:	mov    r8d,eax
  404b8d:	mov    rax,QWORD PTR [rip+0x63434]        # 467fc8 <strcmp@plt+0x64810>
  404b94:	lea    r9,[rip+0x41499]        # 446034 <strcmp@plt+0x4287c>
  404b9b:	lea    rcx,[rip+0x41483]        # 446025 <strcmp@plt+0x4286d>
  404ba2:	lea    rdx,[rip+0x414b7]        # 446060 <strcmp@plt+0x428a8>
  404ba9:	mov    esi,0x1
  404bae:	mov    rdi,QWORD PTR [rax]
  404bb1:	xor    eax,eax
  404bb3:	call   403680 <__fprintf_chk@plt>
  404bb8:	call   403260 <abort@plt>
  404bbd:	nop    DWORD PTR [rax]
  404bc0:	lea    rax,[rip+0x41481]        # 446048 <strcmp@plt+0x42890>
  404bc7:	sub    rsp,0x8
  404bcb:	add    DWORD PTR [rbx+0x78],0x1
  404bcf:	push   0x66
  404bd1:	lea    rcx,[rbp+0x74]
  404bd5:	lea    rdx,[rbx+0x74]
  404bd9:	push   rax
  404bda:	mov    eax,DWORD PTR [rsp+0x24]
  404bde:	lea    rsi,[rbx+0x50]
  404be2:	lea    rdi,[rbx+0x48]
  404be6:	xor    r9d,r9d
  404be9:	push   rax
  404bea:	push   r15
  404bec:	push   0x1
  404bee:	mov    rax,QWORD PTR [rip+0x633bb]        # 467fb0 <strcmp@plt+0x647f8>
  404bf5:	mov    r8,QWORD PTR [rax]
  404bf8:	call   404350 <strcmp@plt+0xb98>
  404bfd:	add    rsp,0x30
  404c01:	test   eax,eax
  404c03:	je     404b0a <strcmp@plt+0x1352>
  404c09:	nop    DWORD PTR [rax+0x0]
  404c10:	mov    rdi,rbp
  404c13:	call   4041c0 <strcmp@plt+0xa08>
  404c18:	mov    eax,0x1
  404c1d:	mov    rsi,QWORD PTR [rsp+0xc8]
  404c25:	xor    rsi,QWORD PTR fs:0x28
  404c2e:	jne    404d77 <strcmp@plt+0x15bf>
  404c34:	add    rsp,0xd8
  404c3b:	pop    rbx
  404c3c:	pop    rbp
  404c3d:	pop    r12
  404c3f:	pop    r13
  404c41:	pop    r14
  404c43:	pop    r15
  404c45:	ret    
  404c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c50:	cmp    eax,0x61
  404c53:	jne    404b8a <strcmp@plt+0x13d2>
  404c59:	lea    rax,[rip+0x413da]        # 44603a <strcmp@plt+0x42882>
  404c60:	sub    rsp,0x8
  404c64:	add    DWORD PTR [rbx+0x78],0x1
  404c68:	push   0x61
  404c6a:	lea    rcx,[rbp+0x6c]
  404c6e:	lea    rdx,[rbx+0x6c]
  404c72:	push   rax
  404c73:	mov    eax,DWORD PTR [rsp+0x24]
  404c77:	lea    rsi,[rbx+0x30]
  404c7b:	lea    rdi,[rbx+0x28]
  404c7f:	mov    r9,0x4684e0
  404c86:	push   rax
  404c87:	push   r15
  404c89:	push   0x2
  404c8b:	jmp    404bee <strcmp@plt+0x1436>
  404c90:	mov    rdi,rdx
  404c93:	call   404770 <strcmp@plt+0xfb8>
  404c98:	jmp    404a9f <strcmp@plt+0x12e7>
  404c9d:	nop    DWORD PTR [rax]
  404ca0:	lea    rax,[rip+0x41397]        # 44603e <strcmp@plt+0x42886>
  404ca7:	sub    rsp,0x8
  404cab:	add    DWORD PTR [rbx+0x78],0x1
  404caf:	push   0x44
  404cb1:	lea    rcx,[rbp+0x70]
  404cb5:	lea    rdx,[rbx+0x70]
  404cb9:	push   rax
  404cba:	mov    eax,DWORD PTR [rsp+0x24]
  404cbe:	xor    r9d,r9d
  404cc1:	xor    esi,esi
  404cc3:	xor    edi,edi
  404cc5:	push   rax
  404cc6:	mov    rax,QWORD PTR [rip+0x632e3]        # 467fb0 <strcmp@plt+0x647f8>
  404ccd:	push   r15
  404ccf:	push   0x0
  404cd1:	mov    r8,QWORD PTR [rax]
  404cd4:	call   404350 <strcmp@plt+0xb98>
  404cd9:	add    rsp,0x30
  404cdd:	test   eax,eax
  404cdf:	je     404b0a <strcmp@plt+0x1352>
  404ce5:	jmp    404c10 <strcmp@plt+0x1458>
  404cea:	nop    WORD PTR [rax+rax*1+0x0]
  404cf0:	lea    rax,[rip+0x4f9bf]        # 4546b6 <strcmp@plt+0x50efe>
  404cf7:	sub    rsp,0x8
  404cfb:	add    DWORD PTR [rbx+0x78],0x1
  404cff:	push   0x64
  404d01:	mov    r9,0x468500
  404d08:	push   rax
  404d09:	mov    eax,DWORD PTR [rsp+0x24]
  404d0d:	push   rax
  404d0e:	mov    rax,QWORD PTR [rip+0x6329b]        # 467fb0 <strcmp@plt+0x647f8>
  404d15:	push   r15
  404d17:	push   0x2
  404d19:	mov    rcx,QWORD PTR [rsp+0x40]
  404d1e:	mov    rdx,QWORD PTR [rsp+0x48]
  404d23:	mov    rsi,QWORD PTR [rsp+0x50]
  404d28:	mov    rdi,QWORD PTR [rsp+0x58]
  404d2d:	mov    r8,QWORD PTR [rax]
  404d30:	call   404350 <strcmp@plt+0xb98>
  404d35:	add    rsp,0x30
  404d39:	test   eax,eax
  404d3b:	je     404b0a <strcmp@plt+0x1352>
  404d41:	jmp    404c10 <strcmp@plt+0x1458>
  404d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d50:	call   404660 <strcmp@plt+0xea8>
  404d55:	mov    rdi,rbp
  404d58:	call   404a40 <strcmp@plt+0x1288>
  404d5d:	xor    edi,edi
  404d5f:	call   4034c0 <exit@plt>
  404d64:	nop    DWORD PTR [rax+0x0]
  404d68:	mov    rdi,rbp
  404d6b:	call   4041c0 <strcmp@plt+0xa08>
  404d70:	xor    eax,eax
  404d72:	jmp    404c1d <strcmp@plt+0x1465>
  404d77:	call   403460 <__stack_chk_fail@plt>
  404d7c:	nop    DWORD PTR [rax+0x0]
  404d80:	push   rbx
  404d81:	mov    rbx,rdx
  404d84:	call   404a50 <strcmp@plt+0x1298>
  404d89:	cmp    eax,0x1
  404d8c:	je     404d90 <strcmp@plt+0x15d8>
  404d8e:	pop    rbx
  404d8f:	ret    
  404d90:	mov    rdi,rbx
  404d93:	call   404a40 <strcmp@plt+0x1288>
  404d98:	mov    edi,0x1
  404d9d:	call   4034c0 <exit@plt>
  404da2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404dad:	nop    DWORD PTR [rax]
  404db0:	push   rbx
  404db1:	mov    rbx,rdx
  404db4:	sub    rsp,0x20
  404db8:	mov    DWORD PTR [rsp],ecx
  404dbb:	mov    rcx,rsp
  404dbe:	mov    DWORD PTR [rsp+0x4],r8d
  404dc3:	mov    rax,QWORD PTR fs:0x28
  404dcc:	mov    QWORD PTR [rsp+0x18],rax
  404dd1:	xor    eax,eax
  404dd3:	mov    DWORD PTR [rsp+0x8],r9d
  404dd8:	mov    DWORD PTR [rsp+0xc],0x0
  404de0:	mov    DWORD PTR [rsp+0x10],0x1
  404de8:	call   404a50 <strcmp@plt+0x1298>
  404ded:	cmp    eax,0x1
  404df0:	je     404e08 <strcmp@plt+0x1650>
  404df2:	mov    rdx,QWORD PTR [rsp+0x18]
  404df7:	xor    rdx,QWORD PTR fs:0x28
  404e00:	jne    404e1a <strcmp@plt+0x1662>
  404e02:	add    rsp,0x20
  404e06:	pop    rbx
  404e07:	ret    
  404e08:	mov    rdi,rbx
  404e0b:	call   404a40 <strcmp@plt+0x1288>
  404e10:	mov    edi,0x1
  404e15:	call   4034c0 <exit@plt>
  404e1a:	call   403460 <__stack_chk_fail@plt>
  404e1f:	nop
  404e20:	mov    r9d,0x1
  404e26:	mov    r8d,0x1
  404e2c:	xor    ecx,ecx
  404e2e:	jmp    404db0 <strcmp@plt+0x15f8>
  404e33:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404e3e:	xchg   ax,ax
  404e40:	xor    eax,eax
  404e42:	ret    
  404e43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e4d:	nop    DWORD PTR [rax]
  404e50:	test   rdi,rdi
  404e53:	je     404e70 <strcmp@plt+0x16b8>
  404e55:	push   rbx
  404e56:	mov    rbx,rdi
  404e59:	mov    rdi,QWORD PTR [rdi]
  404e5c:	call   4037b0 <free@plt>
  404e61:	mov    rdi,rbx
  404e64:	pop    rbx
  404e65:	jmp    4037b0 <free@plt>
  404e6a:	nop    WORD PTR [rax+rax*1+0x0]
  404e70:	repz ret 
  404e72:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404e7d:	nop    DWORD PTR [rax]
  404e80:	test   rdi,rdi
  404e83:	je     404ea0 <strcmp@plt+0x16e8>
  404e85:	push   rbx
  404e86:	mov    rbx,rdi
  404e89:	mov    rdi,QWORD PTR [rdi]
  404e8c:	call   4037b0 <free@plt>
  404e91:	mov    rdi,rbx
  404e94:	pop    rbx
  404e95:	jmp    4037b0 <free@plt>
  404e9a:	nop    WORD PTR [rax+rax*1+0x0]
  404ea0:	repz ret 
  404ea2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404ead:	nop    DWORD PTR [rax]
  404eb0:	push   rbx
  404eb1:	mov    edi,0x20
  404eb6:	call   434790 <strcmp@plt+0x30fd8>
  404ebb:	test   rax,rax
  404ebe:	mov    rbx,rax
  404ec1:	je     404ef0 <strcmp@plt+0x1738>
  404ec3:	lea    rdi,[rip+0xffffffffffffffb6]        # 404e80 <strcmp@plt+0x16c8>
  404eca:	mov    QWORD PTR [rax],0x0
  404ed1:	call   42d4f0 <strcmp@plt+0x29d38>
  404ed6:	lea    rdi,[rip+0xffffffffffffff73]        # 404e50 <strcmp@plt+0x1698>
  404edd:	mov    QWORD PTR [rbx+0x10],rax
  404ee1:	call   42d4f0 <strcmp@plt+0x29d38>
  404ee6:	mov    QWORD PTR [rbx+0x18],rax
  404eea:	mov    rax,rbx
  404eed:	pop    rbx
  404eee:	ret    
  404eef:	nop
  404ef0:	lea    rsi,[rip+0x414a1]        # 446398 <strcmp@plt+0x42be0>
  404ef7:	mov    edi,0x3
  404efc:	xor    eax,eax
  404efe:	call   4306a0 <strcmp@plt+0x2cee8>
  404f03:	jmp    404eea <strcmp@plt+0x1732>
  404f05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404f10:	test   rdi,rdi
  404f13:	je     404f40 <strcmp@plt+0x1788>
  404f15:	push   rbx
  404f16:	mov    rbx,rdi
  404f19:	mov    rdi,QWORD PTR [rdi+0x10]
  404f1d:	call   42dac0 <strcmp@plt+0x2a308>
  404f22:	mov    rdi,QWORD PTR [rbx+0x18]
  404f26:	call   42dac0 <strcmp@plt+0x2a308>
  404f2b:	mov    rdi,QWORD PTR [rbx]
  404f2e:	call   4037b0 <free@plt>
  404f33:	mov    rdi,rbx
  404f36:	pop    rbx
  404f37:	jmp    4037b0 <free@plt>
  404f3c:	nop    DWORD PTR [rax+0x0]
  404f40:	repz ret 
  404f42:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404f4d:	nop    DWORD PTR [rax]
  404f50:	push   rbp
  404f51:	push   rbx
  404f52:	mov    ebp,edi
  404f54:	mov    edi,0x10
  404f59:	mov    rbx,rsi
  404f5c:	sub    rsp,0x8
  404f60:	call   434790 <strcmp@plt+0x30fd8>
  404f65:	test   rax,rax
  404f68:	je     404f70 <strcmp@plt+0x17b8>
  404f6a:	mov    DWORD PTR [rax],ebp
  404f6c:	mov    QWORD PTR [rax+0x8],rbx
  404f70:	add    rsp,0x8
  404f74:	pop    rbx
  404f75:	pop    rbp
  404f76:	ret    
  404f77:	nop    WORD PTR [rax+rax*1+0x0]
  404f80:	test   rdi,rdi
  404f83:	je     404fc8 <strcmp@plt+0x1810>
  404f85:	push   rbp
  404f86:	push   rbx
  404f87:	mov    rbx,rdi
  404f8a:	sub    rsp,0x8
  404f8e:	mov    eax,DWORD PTR [rdi]
  404f90:	test   eax,eax
  404f92:	je     404f99 <strcmp@plt+0x17e1>
  404f94:	cmp    eax,0x1
  404f97:	jne    404fb3 <strcmp@plt+0x17fb>
  404f99:	mov    rbp,QWORD PTR [rbx+0x8]
  404f9d:	test   rbp,rbp
  404fa0:	je     404fb3 <strcmp@plt+0x17fb>
  404fa2:	mov    rdi,QWORD PTR [rbp+0x0]
  404fa6:	call   4037b0 <free@plt>
  404fab:	mov    rdi,rbp
  404fae:	call   4037b0 <free@plt>
  404fb3:	add    rsp,0x8
  404fb7:	mov    rdi,rbx
  404fba:	pop    rbx
  404fbb:	pop    rbp
  404fbc:	jmp    4037b0 <free@plt>
  404fc1:	nop    DWORD PTR [rax+0x0]
  404fc8:	repz ret 
  404fca:	nop    WORD PTR [rax+rax*1+0x0]
  404fd0:	push   r15
  404fd2:	push   r14
  404fd4:	mov    r15d,esi
  404fd7:	push   r13
  404fd9:	push   r12
  404fdb:	mov    r14d,edx
  404fde:	push   rbp
  404fdf:	push   rbx
  404fe0:	mov    rbp,rdi
  404fe3:	mov    r12d,ecx
  404fe6:	mov    r13d,r9d
  404fe9:	sub    rsp,0x18
  404fed:	test   rdi,rdi
  404ff0:	mov    DWORD PTR [rsp+0xc],r8d
  404ff5:	je     405050 <strcmp@plt+0x1898>
  404ff7:	mov    edi,0x20
  404ffc:	call   434790 <strcmp@plt+0x30fd8>
  405001:	test   rax,rax
  405004:	mov    rbx,rax
  405007:	je     405068 <strcmp@plt+0x18b0>
  405009:	mov    rdi,rbp
  40500c:	movzx  r15d,r15b
  405010:	movzx  r14d,r14b
  405014:	call   403730 <strdup@plt>
  405019:	movzx  ebp,BYTE PTR [rsp+0xc]
  40501e:	movzx  r12d,r12b
  405022:	mov    QWORD PTR [rbx],rax
  405025:	mov    DWORD PTR [rbx+0x8],r15d
  405029:	mov    DWORD PTR [rbx+0xc],r14d
  40502d:	mov    DWORD PTR [rbx+0x10],r12d
  405031:	mov    BYTE PTR [rbx+0x18],r13b
  405035:	mov    DWORD PTR [rbx+0x14],ebp
  405038:	add    rsp,0x18
  40503c:	mov    rax,rbx
  40503f:	pop    rbx
  405040:	pop    rbp
  405041:	pop    r12
  405043:	pop    r13
  405045:	pop    r14
  405047:	pop    r15
  405049:	ret    
  40504a:	nop    WORD PTR [rax+rax*1+0x0]
  405050:	lea    rsi,[rip+0x41391]        # 4463e8 <strcmp@plt+0x42c30>
  405057:	mov    edi,0x2
  40505c:	xor    eax,eax
  40505e:	call   4306a0 <strcmp@plt+0x2cee8>
  405063:	jmp    404ff7 <strcmp@plt+0x183f>
  405065:	nop    DWORD PTR [rax]
  405068:	lea    rsi,[rip+0x413b1]        # 446420 <strcmp@plt+0x42c68>
  40506f:	mov    edi,0x3
  405074:	xor    eax,eax
  405076:	call   4306a0 <strcmp@plt+0x2cee8>
  40507b:	jmp    405038 <strcmp@plt+0x1880>
  40507d:	nop    DWORD PTR [rax]
  405080:	push   r15
  405082:	push   r14
  405084:	push   r13
  405086:	push   r12
  405088:	push   rbp
  405089:	push   rbx
  40508a:	sub    rsp,0x18
  40508e:	movzx  eax,BYTE PTR [rdi+0x18]
  405092:	mov    rbp,QWORD PTR [rdi]
  405095:	movzx  r12d,BYTE PTR [rdi+0x14]
  40509a:	movzx  r13d,BYTE PTR [rdi+0x10]
  40509f:	movzx  r14d,BYTE PTR [rdi+0xc]
  4050a4:	movzx  r15d,BYTE PTR [rdi+0x8]
  4050a9:	test   rbp,rbp
  4050ac:	mov    BYTE PTR [rsp+0xf],al
  4050b0:	je     405100 <strcmp@plt+0x1948>
  4050b2:	mov    edi,0x20
  4050b7:	call   434790 <strcmp@plt+0x30fd8>
  4050bc:	test   rax,rax
  4050bf:	mov    rbx,rax
  4050c2:	je     405118 <strcmp@plt+0x1960>
  4050c4:	mov    rdi,rbp
  4050c7:	call   403730 <strdup@plt>
  4050cc:	mov    QWORD PTR [rbx],rax
  4050cf:	movzx  eax,BYTE PTR [rsp+0xf]
  4050d4:	mov    DWORD PTR [rbx+0x8],r15d
  4050d8:	mov    DWORD PTR [rbx+0xc],r14d
  4050dc:	mov    DWORD PTR [rbx+0x10],r13d
  4050e0:	mov    DWORD PTR [rbx+0x14],r12d
  4050e4:	mov    BYTE PTR [rbx+0x18],al
  4050e7:	add    rsp,0x18
  4050eb:	mov    rax,rbx
  4050ee:	pop    rbx
  4050ef:	pop    rbp
  4050f0:	pop    r12
  4050f2:	pop    r13
  4050f4:	pop    r14
  4050f6:	pop    r15
  4050f8:	ret    
  4050f9:	nop    DWORD PTR [rax+0x0]
  405100:	lea    rsi,[rip+0x412e1]        # 4463e8 <strcmp@plt+0x42c30>
  405107:	mov    edi,0x2
  40510c:	xor    eax,eax
  40510e:	call   4306a0 <strcmp@plt+0x2cee8>
  405113:	jmp    4050b2 <strcmp@plt+0x18fa>
  405115:	nop    DWORD PTR [rax]
  405118:	lea    rsi,[rip+0x41301]        # 446420 <strcmp@plt+0x42c68>
  40511f:	mov    edi,0x3
  405124:	xor    eax,eax
  405126:	call   4306a0 <strcmp@plt+0x2cee8>
  40512b:	jmp    4050e7 <strcmp@plt+0x192f>
  40512d:	nop    DWORD PTR [rax]
  405130:	sub    rsp,0x10
  405134:	mov    BYTE PTR [rip+0x67185],0x0        # 46c2c0 <strcmp@plt+0x68b08>
  40513b:	cmp    BYTE PTR [rdi+0x18],0x0
  40513f:	lea    rdx,[rip+0x42569]        # 4476af <strcmp@plt+0x43ef7>
  405146:	lea    rax,[rip+0x4255d]        # 4476aa <strcmp@plt+0x43ef2>
  40514d:	lea    r8,[rip+0x41314]        # 446468 <strcmp@plt+0x42cb0>
  405154:	mov    ecx,0x72
  405159:	mov    esi,0x72
  40515e:	cmove  rax,rdx
  405162:	mov    edx,0x1
  405167:	push   rax
  405168:	mov    eax,DWORD PTR [rdi+0xc]
  40516b:	mov    r9,QWORD PTR [rdi]
  40516e:	push   rax
  40516f:	mov    eax,DWORD PTR [rdi+0x8]
  405172:	lea    rdi,[rip+0x67147]        # 46c2c0 <strcmp@plt+0x68b08>
  405179:	push   rax
  40517a:	xor    eax,eax
  40517c:	call   4032a0 <__snprintf_chk@plt>
  405181:	lea    rax,[rip+0x67138]        # 46c2c0 <strcmp@plt+0x68b08>
  405188:	add    rsp,0x28
  40518c:	ret    
  40518d:	nop    DWORD PTR [rax]
  405190:	push   r15
  405192:	push   r14
  405194:	push   r13
  405196:	push   r12
  405198:	push   rbp
  405199:	push   rbx
  40519a:	sub    rsp,0x18
  40519e:	test   rdi,rdi
  4051a1:	mov    DWORD PTR [rsp+0xc],r9d
  4051a6:	je     405265 <strcmp@plt+0x1aad>
  4051ac:	cmp    esi,0x4
  4051af:	mov    rbp,rdi
  4051b2:	mov    r14d,edx
  4051b5:	mov    r13d,ecx
  4051b8:	mov    r12d,r8d
  4051bb:	je     405220 <strcmp@plt+0x1a68>
  4051bd:	cmp    esi,0x6
  4051c0:	mov    r15d,0xa
  4051c6:	jne    405230 <strcmp@plt+0x1a78>
  4051c8:	mov    edi,0x20
  4051cd:	call   434790 <strcmp@plt+0x30fd8>
  4051d2:	test   rax,rax
  4051d5:	mov    rbx,rax
  4051d8:	je     405250 <strcmp@plt+0x1a98>
  4051da:	mov    rdi,rbp
  4051dd:	movzx  r14d,r14b
  4051e1:	movzx  r13d,r13b
  4051e5:	call   403730 <strdup@plt>
  4051ea:	movzx  ebp,BYTE PTR [rsp+0xc]
  4051ef:	movzx  r12d,r12b
  4051f3:	mov    QWORD PTR [rbx],rax
  4051f6:	mov    DWORD PTR [rbx+0x8],r15d
  4051fa:	mov    DWORD PTR [rbx+0xc],r14d
  4051fe:	mov    DWORD PTR [rbx+0x10],r13d
  405202:	mov    DWORD PTR [rbx+0x14],r12d
  405206:	mov    DWORD PTR [rbx+0x18],ebp
  405209:	add    rsp,0x18
  40520d:	mov    rax,rbx
  405210:	pop    rbx
  405211:	pop    rbp
  405212:	pop    r12
  405214:	pop    r13
  405216:	pop    r14
  405218:	pop    r15
  40521a:	ret    
  40521b:	nop    DWORD PTR [rax+rax*1+0x0]
  405220:	mov    r15d,0x2
  405226:	jmp    4051c8 <strcmp@plt+0x1a10>
  405228:	nop    DWORD PTR [rax+rax*1+0x0]
  405230:	mov    edx,esi
  405232:	lea    rsi,[rip+0x412b7]        # 4464f0 <strcmp@plt+0x42d38>
  405239:	mov    edi,0x2
  40523e:	xor    eax,eax
  405240:	xor    ebx,ebx
  405242:	call   4306a0 <strcmp@plt+0x2cee8>
  405247:	jmp    405209 <strcmp@plt+0x1a51>
  405249:	nop    DWORD PTR [rax+0x0]
  405250:	lea    rsi,[rip+0x412f1]        # 446548 <strcmp@plt+0x42d90>
  405257:	mov    edi,0x3
  40525c:	xor    eax,eax
  40525e:	call   4306a0 <strcmp@plt+0x2cee8>
  405263:	jmp    405209 <strcmp@plt+0x1a51>
  405265:	lea    rsi,[rip+0x4123c]        # 4464a8 <strcmp@plt+0x42cf0>
  40526c:	mov    edi,0x2
  405271:	xor    eax,eax
  405273:	xor    ebx,ebx
  405275:	call   4306a0 <strcmp@plt+0x2cee8>
  40527a:	jmp    405209 <strcmp@plt+0x1a51>
  40527c:	nop    DWORD PTR [rax+0x0]
  405280:	push   r15
  405282:	push   r14
  405284:	push   r13
  405286:	push   r12
  405288:	push   rbp
  405289:	push   rbx
  40528a:	sub    rsp,0x18
  40528e:	mov    ebp,DWORD PTR [rdi+0x8]
  405291:	cmp    ebp,0x2
  405294:	je     405310 <strcmp@plt+0x1b58>
  405296:	mov    rdx,QWORD PTR [rdi]
  405299:	movzx  r15d,BYTE PTR [rdi+0x18]
  40529e:	movzx  r14d,BYTE PTR [rdi+0x14]
  4052a3:	movzx  r13d,BYTE PTR [rdi+0x10]
  4052a8:	movzx  r12d,BYTE PTR [rdi+0xc]
  4052ad:	test   rdx,rdx
  4052b0:	je     405358 <strcmp@plt+0x1ba0>
  4052b6:	mov    ebp,0xa
  4052bb:	mov    edi,0x20
  4052c0:	mov    QWORD PTR [rsp+0x8],rdx
  4052c5:	call   434790 <strcmp@plt+0x30fd8>
  4052ca:	test   rax,rax
  4052cd:	mov    rbx,rax
  4052d0:	mov    rdx,QWORD PTR [rsp+0x8]
  4052d5:	je     405340 <strcmp@plt+0x1b88>
  4052d7:	mov    rdi,rdx
  4052da:	call   403730 <strdup@plt>
  4052df:	mov    DWORD PTR [rbx+0x8],ebp
  4052e2:	mov    QWORD PTR [rbx],rax
  4052e5:	mov    DWORD PTR [rbx+0xc],r12d
  4052e9:	mov    DWORD PTR [rbx+0x10],r13d
  4052ed:	mov    DWORD PTR [rbx+0x14],r14d
  4052f1:	mov    DWORD PTR [rbx+0x18],r15d
  4052f5:	add    rsp,0x18
  4052f9:	mov    rax,rbx
  4052fc:	pop    rbx
  4052fd:	pop    rbp
  4052fe:	pop    r12
  405300:	pop    r13
  405302:	pop    r14
  405304:	pop    r15
  405306:	ret    
  405307:	nop    WORD PTR [rax+rax*1+0x0]
  405310:	mov    rdx,QWORD PTR [rdi]
  405313:	mov    r15d,DWORD PTR [rdi+0x18]
  405317:	mov    r14d,DWORD PTR [rdi+0x14]
  40531b:	mov    r13d,DWORD PTR [rdi+0x10]
  40531f:	mov    r12d,DWORD PTR [rdi+0xc]
  405323:	test   rdx,rdx
  405326:	je     405358 <strcmp@plt+0x1ba0>
  405328:	movzx  r15d,r15b
  40532c:	movzx  r14d,r14b
  405330:	movzx  r13d,r13b
  405334:	movzx  r12d,r12b
  405338:	jmp    4052bb <strcmp@plt+0x1b03>
  40533a:	nop    WORD PTR [rax+rax*1+0x0]
  405340:	lea    rsi,[rip+0x41201]        # 446548 <strcmp@plt+0x42d90>
  405347:	mov    edi,0x3
  40534c:	xor    eax,eax
  40534e:	call   4306a0 <strcmp@plt+0x2cee8>
  405353:	jmp    4052f5 <strcmp@plt+0x1b3d>
  405355:	nop    DWORD PTR [rax]
  405358:	lea    rsi,[rip+0x41149]        # 4464a8 <strcmp@plt+0x42cf0>
  40535f:	mov    edi,0x2
  405364:	xor    eax,eax
  405366:	xor    ebx,ebx
  405368:	call   4306a0 <strcmp@plt+0x2cee8>
  40536d:	jmp    4052f5 <strcmp@plt+0x1b3d>
  40536f:	nop
  405370:	push   rbx
  405371:	mov    BYTE PTR [rip+0x66ec8],0x0        # 46c240 <strcmp@plt+0x68a88>
  405378:	lea    rbx,[rip+0x66ec1]        # 46c240 <strcmp@plt+0x68a88>
  40537f:	mov    eax,DWORD PTR [rdi+0x10]
  405382:	mov    r9,QWORD PTR [rdi]
  405385:	lea    r8,[rip+0x41214]        # 4465a0 <strcmp@plt+0x42de8>
  40538c:	sub    rsp,0x8
  405390:	mov    ecx,0x64
  405395:	mov    edx,0x1
  40539a:	mov    esi,0x64
  40539f:	push   rax
  4053a0:	mov    eax,DWORD PTR [rdi+0xc]
  4053a3:	push   rax
  4053a4:	mov    eax,DWORD PTR [rdi+0x8]
  4053a7:	mov    rdi,rbx
  4053aa:	push   rax
  4053ab:	xor    eax,eax
  4053ad:	call   4032a0 <__snprintf_chk@plt>
  4053b2:	add    rsp,0x20
  4053b6:	mov    rax,rbx
  4053b9:	pop    rbx
  4053ba:	ret    
  4053bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4053c0:	push   r14
  4053c2:	push   r13
  4053c4:	push   r12
  4053c6:	push   rbp
  4053c7:	mov    r12d,esi
  4053ca:	push   rbx
  4053cb:	mov    rbp,rdi
  4053ce:	sub    rsp,0x7e0
  4053d5:	mov    rax,QWORD PTR fs:0x28
  4053de:	mov    QWORD PTR [rsp+0x7d8],rax
  4053e6:	xor    eax,eax
  4053e8:	cmp    esi,0x4
  4053eb:	jle    405428 <strcmp@plt+0x1c70>
  4053ed:	mov    rax,0x468e3c
  4053f4:	mov    eax,DWORD PTR [rax]
  4053f6:	add    eax,0x4
  4053f9:	cmp    esi,eax
  4053fb:	jle    405428 <strcmp@plt+0x1c70>
  4053fd:	mov    rax,QWORD PTR [rsp+0x7d8]
  405405:	xor    rax,QWORD PTR fs:0x28
  40540e:	jne    4055b7 <strcmp@plt+0x1dff>
  405414:	add    rsp,0x7e0
  40541b:	pop    rbx
  40541c:	pop    rbp
  40541d:	pop    r12
  40541f:	pop    r13
  405421:	pop    r14
  405423:	ret    
  405424:	nop    DWORD PTR [rax+0x0]
  405428:	mov    eax,DWORD PTR [rbp+0x8]
  40542b:	mov    rbx,rsp
  40542e:	mov    r9,QWORD PTR [rbp+0x0]
  405432:	sub    rsp,0x8
  405436:	lea    r8,[rip+0x4227e]        # 4476bb <strcmp@plt+0x43f03>
  40543d:	mov    ecx,0x7d0
  405442:	mov    edx,0x1
  405447:	mov    esi,0x7d0
  40544c:	mov    rdi,rbx
  40544f:	push   rax
  405450:	xor    eax,eax
  405452:	mov    r13d,0x7d0
  405458:	call   4032a0 <__snprintf_chk@plt>
  40545d:	mov    rax,QWORD PTR [rbp+0x10]
  405461:	pop    rdx
  405462:	pop    rcx
  405463:	mov    r14,QWORD PTR [rax+0x8]
  405467:	cmp    rax,r14
  40546a:	je     4054e3 <strcmp@plt+0x1d2b>
  40546c:	mov    rdi,QWORD PTR [r14+0x10]
  405470:	call   405130 <strcmp@plt+0x1978>
  405475:	mov    rdi,rbx
  405478:	mov    ecx,DWORD PTR [rdi]
  40547a:	add    rdi,0x4
  40547e:	lea    edx,[rcx-0x1010101]
  405484:	andn   edx,ecx,edx
  405489:	and    edx,0x80808080
  40548f:	je     405478 <strcmp@plt+0x1cc0>
  405491:	mov    ecx,edx
  405493:	lea    r8,[rip+0x4221b]        # 4476b5 <strcmp@plt+0x43efd>
  40549a:	mov    r9,rax
  40549d:	shr    ecx,0x10
  4054a0:	test   edx,0x8080
  4054a6:	cmove  edx,ecx
  4054a9:	lea    rcx,[rdi+0x2]
  4054ad:	mov    esi,edx
  4054af:	cmove  rdi,rcx
  4054b3:	add    sil,dl
  4054b6:	mov    rsi,r13
  4054b9:	sbb    rdi,0x3
  4054bd:	mov    rcx,0xffffffffffffffff
  4054c4:	xor    eax,eax
  4054c6:	sub    rdi,rbx
  4054c9:	mov    edx,0x1
  4054ce:	sub    rsi,rdi
  4054d1:	add    rdi,rbx
  4054d4:	call   4032a0 <__snprintf_chk@plt>
  4054d9:	mov    r14,QWORD PTR [r14+0x8]
  4054dd:	cmp    QWORD PTR [rbp+0x10],r14
  4054e1:	jne    40546c <strcmp@plt+0x1cb4>
  4054e3:	mov    rax,QWORD PTR [rbp+0x18]
  4054e7:	mov    r13d,0x7d0
  4054ed:	mov    r14,QWORD PTR [rax+0x8]
  4054f1:	cmp    rax,r14
  4054f4:	je     405577 <strcmp@plt+0x1dbf>
  4054fa:	nop    WORD PTR [rax+rax*1+0x0]
  405500:	mov    rdi,QWORD PTR [r14+0x10]
  405504:	call   405370 <strcmp@plt+0x1bb8>
  405509:	mov    rdi,rbx
  40550c:	mov    ecx,DWORD PTR [rdi]
  40550e:	add    rdi,0x4
  405512:	lea    edx,[rcx-0x1010101]
  405518:	andn   edx,ecx,edx
  40551d:	and    edx,0x80808080
  405523:	je     40550c <strcmp@plt+0x1d54>
  405525:	mov    ecx,edx
  405527:	lea    r8,[rip+0x42187]        # 4476b5 <strcmp@plt+0x43efd>
  40552e:	mov    r9,rax
  405531:	shr    ecx,0x10
  405534:	test   edx,0x8080
  40553a:	cmove  edx,ecx
  40553d:	lea    rcx,[rdi+0x2]
  405541:	mov    esi,edx
  405543:	cmove  rdi,rcx
  405547:	add    sil,dl
  40554a:	mov    rsi,r13
  40554d:	sbb    rdi,0x3
  405551:	mov    rcx,0xffffffffffffffff
  405558:	xor    eax,eax
  40555a:	sub    rdi,rbx
  40555d:	mov    edx,0x1
  405562:	sub    rsi,rdi
  405565:	add    rdi,rbx
  405568:	call   4032a0 <__snprintf_chk@plt>
  40556d:	mov    r14,QWORD PTR [r14+0x8]
  405571:	cmp    QWORD PTR [rbp+0x18],r14
  405575:	jne    405500 <strcmp@plt+0x1d48>
  405577:	cmp    r12d,0x4
  40557b:	jg     4055a0 <strcmp@plt+0x1de8>
  40557d:	lea    rsi,[rip+0x4af07]        # 45048b <strcmp@plt+0x4ccd3>
  405584:	mov    rdx,rbx
  405587:	mov    edi,r12d
  40558a:	xor    eax,eax
  40558c:	call   4306a0 <strcmp@plt+0x2cee8>
  405591:	jmp    4053fd <strcmp@plt+0x1c45>
  405596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4055a0:	mov    rax,0x468e3c
  4055a7:	mov    eax,DWORD PTR [rax]
  4055a9:	add    eax,0x4
  4055ac:	cmp    r12d,eax
  4055af:	jg     4053fd <strcmp@plt+0x1c45>
  4055b5:	jmp    40557d <strcmp@plt+0x1dc5>
  4055b7:	call   403460 <__stack_chk_fail@plt>
  4055bc:	nop    DWORD PTR [rax+0x0]
  4055c0:	push   r13
  4055c2:	push   r12
  4055c4:	mov    r13,rdi
  4055c7:	push   rbp
  4055c8:	push   rbx
  4055c9:	mov    edi,0x18
  4055ce:	mov    r12,rsi
  4055d1:	mov    ebp,edx
  4055d3:	sub    rsp,0x8
  4055d7:	call   434790 <strcmp@plt+0x30fd8>
  4055dc:	test   rax,rax
  4055df:	mov    rbx,rax
  4055e2:	je     4055f6 <strcmp@plt+0x1e3e>
  4055e4:	mov    QWORD PTR [rax],r13
  4055e7:	mov    rdi,r12
  4055ea:	call   403730 <strdup@plt>
  4055ef:	mov    DWORD PTR [rbx+0x10],ebp
  4055f2:	mov    QWORD PTR [rbx+0x8],rax
  4055f6:	add    rsp,0x8
  4055fa:	mov    rax,rbx
  4055fd:	pop    rbx
  4055fe:	pop    rbp
  4055ff:	pop    r12
  405601:	pop    r13
  405603:	ret    
  405604:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40560f:	nop
  405610:	push   rbx
  405611:	mov    rbx,rdi
  405614:	mov    rdi,QWORD PTR [rdi+0x8]
  405618:	call   4037b0 <free@plt>
  40561d:	mov    rdi,rbx
  405620:	pop    rbx
  405621:	jmp    4037b0 <free@plt>
  405626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405630:	mov    rdx,QWORD PTR [rdi+0x8]
  405634:	cmp    rdi,rdx
  405637:	je     40565a <strcmp@plt+0x1ea2>
  405639:	mov    rax,QWORD PTR [rdx+0x10]
  40563d:	cmp    rsi,QWORD PTR [rax]
  405640:	jne    405651 <strcmp@plt+0x1e99>
  405642:	jmp    40565e <strcmp@plt+0x1ea6>
  405644:	nop    DWORD PTR [rax+0x0]
  405648:	mov    rax,QWORD PTR [rdx+0x10]
  40564c:	cmp    QWORD PTR [rax],rsi
  40564f:	je     40565c <strcmp@plt+0x1ea4>
  405651:	mov    rdx,QWORD PTR [rdx+0x8]
  405655:	cmp    rdi,rdx
  405658:	jne    405648 <strcmp@plt+0x1e90>
  40565a:	xor    eax,eax
  40565c:	repz ret 
  40565e:	repz ret 
  405660:	push   r12
  405662:	mov    r12,rdx
  405665:	push   rbp
  405666:	push   rbx
  405667:	mov    edx,DWORD PTR [rdi]
  405669:	mov    rbx,rdi
  40566c:	mov    rbp,rsi
  40566f:	test   edx,edx
  405671:	js     4056e0 <strcmp@plt+0x1f28>
  405673:	mov    rax,0x468e3c
  40567a:	je     40579f <strcmp@plt+0x1fe7>
  405680:	mov    ecx,DWORD PTR [rax]
  405682:	test   ecx,ecx
  405684:	jg     4056c0 <strcmp@plt+0x1f08>
  405686:	mov    eax,DWORD PTR [rbp+0x0]
  405689:	cmp    eax,0x5
  40568c:	jg     405710 <strcmp@plt+0x1f58>
  405692:	test   eax,eax
  405694:	js     405768 <strcmp@plt+0x1fb0>
  40569a:	test   eax,eax
  40569c:	jle    4056b4 <strcmp@plt+0x1efc>
  40569e:	mov    eax,DWORD PTR [r12]
  4056a2:	test   eax,eax
  4056a4:	jle    405790 <strcmp@plt+0x1fd8>
  4056aa:	mov    edx,DWORD PTR [rbx]
  4056ac:	cmp    eax,edx
  4056ae:	jg     405740 <strcmp@plt+0x1f88>
  4056b4:	pop    rbx
  4056b5:	pop    rbp
  4056b6:	pop    r12
  4056b8:	ret    
  4056b9:	nop    DWORD PTR [rax+0x0]
  4056c0:	lea    rsi,[rip+0x42006]        # 4476cd <strcmp@plt+0x43f15>
  4056c7:	mov    edi,0x5
  4056cc:	xor    eax,eax
  4056ce:	call   4306a0 <strcmp@plt+0x2cee8>
  4056d3:	mov    eax,DWORD PTR [rbx]
  4056d5:	test   eax,eax
  4056d7:	jne    405686 <strcmp@plt+0x1ece>
  4056d9:	pop    rbx
  4056da:	pop    rbp
  4056db:	pop    r12
  4056dd:	ret    
  4056de:	xchg   ax,ax
  4056e0:	mov    rax,0x468e3c
  4056e7:	mov    DWORD PTR [rdi],0x0
  4056ed:	mov    esi,DWORD PTR [rax]
  4056ef:	test   esi,esi
  4056f1:	jle    4056b4 <strcmp@plt+0x1efc>
  4056f3:	lea    rsi,[rip+0x41fed]        # 4476e7 <strcmp@plt+0x43f2f>
  4056fa:	mov    edi,0x5
  4056ff:	xor    eax,eax
  405701:	call   4306a0 <strcmp@plt+0x2cee8>
  405706:	jmp    4056d3 <strcmp@plt+0x1f1b>
  405708:	nop    DWORD PTR [rax+rax*1+0x0]
  405710:	lea    rsi,[rip+0x40ec9]        # 4465e0 <strcmp@plt+0x42e28>
  405717:	xor    eax,eax
  405719:	mov    DWORD PTR [rbp+0x0],0x5
  405720:	mov    ecx,0x5
  405725:	mov    edx,0x5
  40572a:	mov    edi,0x3
  40572f:	call   4306a0 <strcmp@plt+0x2cee8>
  405734:	mov    eax,DWORD PTR [rbp+0x0]
  405737:	jmp    40569a <strcmp@plt+0x1ee2>
  40573c:	nop    DWORD PTR [rax+0x0]
  405740:	mov    DWORD PTR [r12],edx
  405744:	mov    ecx,DWORD PTR [rbx]
  405746:	pop    rbx
  405747:	pop    rbp
  405748:	pop    r12
  40574a:	lea    rsi,[rip+0x40f1f]        # 446670 <strcmp@plt+0x42eb8>
  405751:	mov    edx,0x1
  405756:	mov    edi,0x3
  40575b:	xor    eax,eax
  40575d:	jmp    4306a0 <strcmp@plt+0x2cee8>
  405762:	nop    WORD PTR [rax+rax*1+0x0]
  405768:	lea    rsi,[rip+0x40eb9]        # 446628 <strcmp@plt+0x42e70>
  40576f:	xor    eax,eax
  405771:	mov    DWORD PTR [rbp+0x0],0x0
  405778:	mov    edx,0x5
  40577d:	mov    edi,0x3
  405782:	call   4306a0 <strcmp@plt+0x2cee8>
  405787:	mov    eax,DWORD PTR [rbp+0x0]
  40578a:	jmp    40569a <strcmp@plt+0x1ee2>
  40578f:	nop
  405790:	mov    DWORD PTR [r12],0x1
  405798:	mov    ecx,0x1
  40579d:	jmp    405746 <strcmp@plt+0x1f8e>
  40579f:	cmp    DWORD PTR [rax],0x0
  4057a2:	jle    4056d3 <strcmp@plt+0x1f1b>
  4057a8:	jmp    4056f3 <strcmp@plt+0x1f3b>
  4057ad:	nop    DWORD PTR [rax]
  4057b0:	lea    eax,[rdi+0x1]
  4057b3:	sub    rsp,0x8
  4057b7:	cmp    eax,0x100
  4057bc:	ja     4057f8 <strcmp@plt+0x2040>
  4057be:	cmp    esi,0xff
  4057c4:	mov    eax,0x1
  4057c9:	ja     4057d0 <strcmp@plt+0x2018>
  4057cb:	add    rsp,0x8
  4057cf:	ret    
  4057d0:	lea    rsi,[rip+0x40f31]        # 446708 <strcmp@plt+0x42f50>
  4057d7:	mov    edx,edi
  4057d9:	xor    eax,eax
  4057db:	mov    r8d,0xff
  4057e1:	xor    ecx,ecx
  4057e3:	mov    edi,0x2
  4057e8:	call   4306a0 <strcmp@plt+0x2cee8>
  4057ed:	xor    eax,eax
  4057ef:	add    rsp,0x8
  4057f3:	ret    
  4057f4:	nop    DWORD PTR [rax+0x0]
  4057f8:	lea    rsi,[rip+0x40ed1]        # 4466d0 <strcmp@plt+0x42f18>
  4057ff:	mov    edx,edi
  405801:	xor    eax,eax
  405803:	mov    r8d,0xfe
  405809:	xor    ecx,ecx
  40580b:	mov    edi,0x2
  405810:	call   4306a0 <strcmp@plt+0x2cee8>
  405815:	xor    eax,eax
  405817:	add    rsp,0x8
  40581b:	ret    
  40581c:	nop    DWORD PTR [rax+0x0]
  405820:	push   r15
  405822:	push   r14
  405824:	mov    r15d,ecx
  405827:	push   r13
  405829:	push   r12
  40582b:	mov    r13,rsi
  40582e:	push   rbp
  40582f:	push   rbx
  405830:	mov    r12,rdi
  405833:	mov    rdi,rdx
  405836:	mov    rbx,rdx
  405839:	mov    ebp,r8d
  40583c:	sub    rsp,0x18
  405840:	mov    r14d,r9d
  405843:	call   434230 <strcmp@plt+0x30a78>
  405848:	mov    rsi,QWORD PTR [r13+0x8]
  40584c:	mov    rdi,rbx
  40584f:	mov    QWORD PTR [rsp+0x8],rax
  405854:	call   42d730 <strcmp@plt+0x29f78>
  405859:	test   al,al
  40585b:	je     4058d8 <strcmp@plt+0x2120>
  40585d:	test   ebp,ebp
  40585f:	js     4058ec <strcmp@plt+0x2134>
  405865:	cmp    r15d,0x2
  405869:	movzx  esi,BYTE PTR [r12+0xc]
  40586f:	je     4058f8 <strcmp@plt+0x2140>
  405875:	mov    rdi,QWORD PTR [r12+0x18]
  40587a:	push   0x0
  40587c:	movzx  r8d,bpl
  405880:	push   0xff
  405885:	mov    edx,0x1
  40588a:	movzx  r9d,r14b
  40588e:	mov    ecx,0x1
  405893:	call   429d90 <strcmp@plt+0x265d8>
  405898:	mov    rbp,rax
  40589b:	test   rbp,rbp
  40589e:	pop    rax
  40589f:	pop    rdx
  4058a0:	je     4058c2 <strcmp@plt+0x210a>
  4058a2:	mov    rdi,QWORD PTR [rsp+0x8]
  4058a7:	mov    rsi,rbp
  4058aa:	call   42acb0 <strcmp@plt+0x274f8>
  4058af:	cmp    eax,0x1
  4058b2:	mov    ebx,eax
  4058b4:	je     405950 <strcmp@plt+0x2198>
  4058ba:	mov    rdi,rbp
  4058bd:	call   429d50 <strcmp@plt+0x26598>
  4058c2:	xor    ebx,ebx
  4058c4:	add    rsp,0x18
  4058c8:	mov    eax,ebx
  4058ca:	pop    rbx
  4058cb:	pop    rbp
  4058cc:	pop    r12
  4058ce:	pop    r13
  4058d0:	pop    r14
  4058d2:	pop    r15
  4058d4:	ret    
  4058d5:	nop    DWORD PTR [rax]
  4058d8:	mov    rsi,QWORD PTR [r13+0x8]
  4058dc:	mov    rdi,rbx
  4058df:	call   42d540 <strcmp@plt+0x29d88>
  4058e4:	test   ebp,ebp
  4058e6:	jns    405865 <strcmp@plt+0x20ad>
  4058ec:	mov    ebx,0x1
  4058f1:	jmp    4058c4 <strcmp@plt+0x210c>
  4058f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4058f8:	mov    rdi,QWORD PTR [r12+0x10]
  4058fd:	push   0x0
  4058ff:	movzx  r8d,bpl
  405903:	push   0xff
  405908:	mov    ecx,0x1
  40590d:	movzx  r9d,r14b
  405911:	mov    edx,0x1
  405916:	call   429d90 <strcmp@plt+0x265d8>
  40591b:	test   rax,rax
  40591e:	mov    rbp,rax
  405921:	pop    rcx
  405922:	pop    rsi
  405923:	je     4058c2 <strcmp@plt+0x210a>
  405925:	mov    rdi,QWORD PTR [rsp+0x8]
  40592a:	mov    rsi,rax
  40592d:	call   42acb0 <strcmp@plt+0x274f8>
  405932:	cmp    eax,0x1
  405935:	mov    ebx,eax
  405937:	jne    4058ba <strcmp@plt+0x2102>
  40593d:	mov    rsi,QWORD PTR [r13+0x10]
  405941:	mov    rdi,rbp
  405944:	call   42d540 <strcmp@plt+0x29d88>
  405949:	jmp    4058c4 <strcmp@plt+0x210c>
  40594e:	xchg   ax,ax
  405950:	mov    rsi,QWORD PTR [r13+0x18]
  405954:	mov    rdi,rbp
  405957:	call   42d540 <strcmp@plt+0x29d88>
  40595c:	jmp    4058c4 <strcmp@plt+0x210c>
  405961:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40596c:	nop    DWORD PTR [rax+0x0]
  405970:	push   r15
  405972:	push   r14
  405974:	push   r13
  405976:	push   r12
  405978:	push   rbp
  405979:	push   rbx
  40597a:	sub    rsp,0x18
  40597e:	test   rsi,rsi
  405981:	je     405a88 <strcmp@plt+0x22d0>
  405987:	mov    r15,rdi
  40598a:	mov    rbp,rsi
  40598d:	mov    edi,ecx
  40598f:	mov    esi,r8d
  405992:	mov    r14d,edx
  405995:	mov    r12d,ecx
  405998:	mov    r13d,r8d
  40599b:	call   4057b0 <strcmp@plt+0x1ff8>
  4059a0:	cmp    eax,0x1
  4059a3:	mov    ebx,eax
  4059a5:	je     4059c0 <strcmp@plt+0x2208>
  4059a7:	xor    ebx,ebx
  4059a9:	add    rsp,0x18
  4059ad:	mov    eax,ebx
  4059af:	pop    rbx
  4059b0:	pop    rbp
  4059b1:	pop    r12
  4059b3:	pop    r13
  4059b5:	pop    r14
  4059b7:	pop    r15
  4059b9:	ret    
  4059ba:	nop    WORD PTR [rax+rax*1+0x0]
  4059c0:	test   r12d,r12d
  4059c3:	js     405af8 <strcmp@plt+0x2340>
  4059c9:	mov    eax,r14d
  4059cc:	and    eax,0xfffffffd
  4059cf:	cmp    eax,0x4
  4059d2:	jne    405aa8 <strcmp@plt+0x22f0>
  4059d8:	xor    ebx,ebx
  4059da:	mov    rdi,rbp
  4059dd:	cmp    r14d,0x4
  4059e1:	setne  bl
  4059e4:	call   43e680 <strcmp@plt+0x3aec8>
  4059e9:	test   rax,rax
  4059ec:	lea    ebx,[rbx*8+0x2]
  4059f3:	mov    r14,rax
  4059f6:	je     405ac0 <strcmp@plt+0x2308>
  4059fc:	mov    esi,ebx
  4059fe:	mov    rdi,r14
  405a01:	call   43ebf0 <strcmp@plt+0x3b438>
  405a06:	cmp    eax,0x1
  405a09:	je     405a28 <strcmp@plt+0x2270>
  405a0b:	lea    rsi,[rip+0x40e66]        # 446878 <strcmp@plt+0x430c0>
  405a12:	mov    rdx,rbp
  405a15:	mov    edi,0x3
  405a1a:	xor    eax,eax
  405a1c:	xor    ebx,ebx
  405a1e:	call   4306a0 <strcmp@plt+0x2cee8>
  405a23:	jmp    4059a9 <strcmp@plt+0x21f1>
  405a25:	nop    DWORD PTR [rax]
  405a28:	mov    rdi,QWORD PTR [r15+0x50]
  405a2c:	mov    rsi,rbp
  405a2f:	call   43a470 <strcmp@plt+0x36cb8>
  405a34:	test   rax,rax
  405a37:	mov    r10,rax
  405a3a:	je     405b45 <strcmp@plt+0x238d>
  405a40:	mov    rsi,QWORD PTR [r15+0x68]
  405a44:	cmp    QWORD PTR [rsi+0x8],0x0
  405a49:	je     405b20 <strcmp@plt+0x2368>
  405a4f:	mov    ecx,ebx
  405a51:	mov    rdx,rsi
  405a54:	mov    r9d,r13d
  405a57:	mov    r8d,r12d
  405a5a:	mov    rsi,r10
  405a5d:	mov    rdi,r14
  405a60:	call   405820 <strcmp@plt+0x2068>
  405a65:	cmp    eax,0x1
  405a68:	mov    ebx,eax
  405a6a:	jne    4059a7 <strcmp@plt+0x21ef>
  405a70:	mov    rax,QWORD PTR [r15+0x38]
  405a74:	mov    rsi,QWORD PTR [r15+0x68]
  405a78:	mov    rdi,QWORD PTR [r15+0x40]
  405a7c:	call   QWORD PTR [rax+0x30]
  405a7f:	jmp    4059a9 <strcmp@plt+0x21f1>
  405a84:	nop    DWORD PTR [rax+0x0]
  405a88:	lea    rsi,[rip+0x40cb1]        # 446740 <strcmp@plt+0x42f88>
  405a8f:	mov    edi,0x2
  405a94:	xor    eax,eax
  405a96:	xor    ebx,ebx
  405a98:	call   4306a0 <strcmp@plt+0x2cee8>
  405a9d:	jmp    4059a9 <strcmp@plt+0x21f1>
  405aa2:	nop    WORD PTR [rax+rax*1+0x0]
  405aa8:	lea    rsi,[rip+0x40d39]        # 4467e8 <strcmp@plt+0x43030>
  405aaf:	mov    edi,0x2
  405ab4:	xor    eax,eax
  405ab6:	call   4306a0 <strcmp@plt+0x2cee8>
  405abb:	jmp    4059a7 <strcmp@plt+0x21ef>
  405ac0:	mov    rdi,rbp
  405ac3:	call   43e570 <strcmp@plt+0x3adb8>
  405ac8:	test   rax,rax
  405acb:	mov    r14,rax
  405ace:	jne    4059fc <strcmp@plt+0x2244>
  405ad4:	lea    rsi,[rip+0x40d6d]        # 446848 <strcmp@plt+0x43090>
  405adb:	mov    rdx,rbp
  405ade:	mov    edi,0x3
  405ae3:	xor    eax,eax
  405ae5:	xor    ebx,ebx
  405ae7:	call   4306a0 <strcmp@plt+0x2cee8>
  405aec:	jmp    4059a9 <strcmp@plt+0x21f1>
  405af1:	nop    DWORD PTR [rax+0x0]
  405af8:	lea    rsi,[rip+0x40c81]        # 446780 <strcmp@plt+0x42fc8>
  405aff:	mov    ecx,r14d
  405b02:	mov    rdx,rbp
  405b05:	mov    edi,0x2
  405b0a:	xor    eax,eax
  405b0c:	call   4306a0 <strcmp@plt+0x2cee8>
  405b11:	jmp    4059a9 <strcmp@plt+0x21f1>
  405b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b20:	mov    rax,QWORD PTR [r15+0x38]
  405b24:	xor    edx,edx
  405b26:	mov    QWORD PTR [rsp+0x8],r10
  405b2b:	mov    rdi,QWORD PTR [r15+0x40]
  405b2f:	call   QWORD PTR [rax+0x10]
  405b32:	cmp    eax,0x1
  405b35:	jne    405b78 <strcmp@plt+0x23c0>
  405b37:	mov    rsi,QWORD PTR [r15+0x68]
  405b3b:	mov    r10,QWORD PTR [rsp+0x8]
  405b40:	jmp    405a4f <strcmp@plt+0x2297>
  405b45:	mov    rdi,rbp
  405b48:	call   42e800 <strcmp@plt+0x2b048>
  405b4d:	mov    rdi,rbp
  405b50:	mov    QWORD PTR [rsp+0x8],rax
  405b55:	call   403730 <strdup@plt>
  405b5a:	mov    r10,QWORD PTR [rsp+0x8]
  405b5f:	mov    rdi,QWORD PTR [r15+0x50]
  405b63:	mov    rsi,rax
  405b66:	mov    rdx,r10
  405b69:	call   439800 <strcmp@plt+0x36048>
  405b6e:	mov    r10,QWORD PTR [rsp+0x8]
  405b73:	jmp    405a40 <strcmp@plt+0x2288>
  405b78:	lea    rsi,[rip+0x40d39]        # 4468b8 <strcmp@plt+0x43100>
  405b7f:	mov    edi,0x2
  405b84:	xor    eax,eax
  405b86:	xor    ebx,ebx
  405b88:	call   4306a0 <strcmp@plt+0x2cee8>
  405b8d:	mov    rdi,QWORD PTR [r15+0x68]
  405b91:	call   434380 <strcmp@plt+0x30bc8>
  405b96:	jmp    4059a9 <strcmp@plt+0x21f1>
  405b9b:	nop    DWORD PTR [rax+rax*1+0x0]
  405ba0:	push   r13
  405ba2:	push   r12
  405ba4:	mov    r13,rcx
  405ba7:	push   rbp
  405ba8:	push   rbx
  405ba9:	mov    r12,rsi
  405bac:	mov    ebp,edx
  405bae:	sub    rsp,0x8
  405bb2:	cmp    edx,0xffffff
  405bb8:	ja     405c28 <strcmp@plt+0x2470>
  405bba:	xor    eax,eax
  405bbc:	call   424740 <strcmp@plt+0x20f88>
  405bc1:	mov    rdi,r12
  405bc4:	mov    rsi,rax
  405bc7:	mov    rbx,rax
  405bca:	call   4256d0 <strcmp@plt+0x21f18>
  405bcf:	cmp    eax,0x1
  405bd2:	je     405bf7 <strcmp@plt+0x243f>
  405bd4:	mov    rdi,rbx
  405bd7:	call   424750 <strcmp@plt+0x20f98>
  405bdc:	mov    rsi,r12
  405bdf:	mov    rdi,r13
  405be2:	call   43a470 <strcmp@plt+0x36cb8>
  405be7:	test   rax,rax
  405bea:	je     405c50 <strcmp@plt+0x2498>
  405bec:	mov    rdi,rax
  405bef:	call   424b80 <strcmp@plt+0x213c8>
  405bf4:	mov    rbx,rax
  405bf7:	mov    rdi,rbx
  405bfa:	call   437250 <strcmp@plt+0x33a98>
  405bff:	mov    esi,ebp
  405c01:	mov    rdi,rbx
  405c04:	call   416a40 <strcmp@plt+0x13288>
  405c09:	mov    rdi,rbx
  405c0c:	mov    rbp,rax
  405c0f:	call   424750 <strcmp@plt+0x20f98>
  405c14:	add    rsp,0x8
  405c18:	mov    rax,rbp
  405c1b:	pop    rbx
  405c1c:	pop    rbp
  405c1d:	pop    r12
  405c1f:	pop    r13
  405c21:	ret    
  405c22:	nop    WORD PTR [rax+rax*1+0x0]
  405c28:	lea    rsi,[rip+0x40cc9]        # 4468f8 <strcmp@plt+0x43140>
  405c2f:	mov    ecx,0xffffff
  405c34:	mov    edi,0x2
  405c39:	xor    eax,eax
  405c3b:	xor    ebp,ebp
  405c3d:	call   4306a0 <strcmp@plt+0x2cee8>
  405c42:	jmp    405bba <strcmp@plt+0x2402>
  405c47:	nop    WORD PTR [rax+rax*1+0x0]
  405c50:	lea    rsi,[rip+0x40ce9]        # 446940 <strcmp@plt+0x43188>
  405c57:	mov    rdx,r12
  405c5a:	mov    edi,0x2
  405c5f:	xor    ebp,ebp
  405c61:	call   4306a0 <strcmp@plt+0x2cee8>
  405c66:	jmp    405c14 <strcmp@plt+0x245c>
  405c68:	nop    DWORD PTR [rax+rax*1+0x0]
  405c70:	push   r14
  405c72:	push   r13
  405c74:	mov    r13,rdi
  405c77:	push   r12
  405c79:	push   rbp
  405c7a:	push   rbx
  405c7b:	mov    ebx,esi
  405c7d:	sub    rsp,0x50
  405c81:	mov    rdi,0x424750
  405c88:	mov    rax,QWORD PTR fs:0x28
  405c91:	mov    QWORD PTR [rsp+0x48],rax
  405c96:	xor    eax,eax
  405c98:	mov    QWORD PTR [rsp+0x8],0x0
  405ca1:	call   42d4f0 <strcmp@plt+0x29d38>
  405ca6:	lea    rdx,[rsp+0x10]
  405cab:	mov    r12,rax
  405cae:	mov    ecx,0x6
  405cb3:	xor    eax,eax
  405cb5:	xor    esi,esi
  405cb7:	mov    rdi,rdx
  405cba:	rep stos QWORD PTR es:[rdi],rax
  405cbd:	lea    rcx,[rsp+0x8]
  405cc2:	mov    rdi,r13
  405cc5:	mov    DWORD PTR [rsp+0x14],ebx
  405cc9:	mov    DWORD PTR [rsp+0x10],0x1
  405cd1:	mov    DWORD PTR [rsp+0x1c],0x11
  405cd9:	call   403510 <getaddrinfo@plt>
  405cde:	test   eax,eax
  405ce0:	jne    405dd8 <strcmp@plt+0x2620>
  405ce6:	mov    rbx,QWORD PTR [rsp+0x8]
  405ceb:	test   rbx,rbx
  405cee:	je     405d95 <strcmp@plt+0x25dd>
  405cf4:	lea    r14,[rip+0x40cb5]        # 4469b0 <strcmp@plt+0x431f8>
  405cfb:	jmp    405d55 <strcmp@plt+0x259d>
  405cfd:	nop    DWORD PTR [rax]
  405d00:	cmp    ax,0xa
  405d04:	jne    405d17 <strcmp@plt+0x255f>
  405d06:	add    rsi,0x8
  405d0a:	mov    edx,0xa
  405d0f:	mov    rdi,rbp
  405d12:	call   425960 <strcmp@plt+0x221a8>
  405d17:	mov    rax,0x468e3c
  405d1e:	mov    eax,DWORD PTR [rax]
  405d20:	test   eax,eax
  405d22:	jle    405d41 <strcmp@plt+0x2589>
  405d24:	mov    rdi,rbp
  405d27:	call   424890 <strcmp@plt+0x210d8>
  405d2c:	mov    rdx,r13
  405d2f:	mov    rcx,rax
  405d32:	mov    rsi,r14
  405d35:	mov    edi,0x5
  405d3a:	xor    eax,eax
  405d3c:	call   4306a0 <strcmp@plt+0x2cee8>
  405d41:	mov    rsi,r12
  405d44:	mov    rdi,rbp
  405d47:	call   42d540 <strcmp@plt+0x29d88>
  405d4c:	mov    rbx,QWORD PTR [rbx+0x28]
  405d50:	test   rbx,rbx
  405d53:	je     405d90 <strcmp@plt+0x25d8>
  405d55:	mov    edi,0x1
  405d5a:	call   424670 <strcmp@plt+0x20eb8>
  405d5f:	test   rax,rax
  405d62:	mov    rbp,rax
  405d65:	je     405dc0 <strcmp@plt+0x2608>
  405d67:	mov    rsi,QWORD PTR [rbx+0x18]
  405d6b:	movzx  eax,WORD PTR [rsi]
  405d6e:	cmp    ax,0x2
  405d72:	jne    405d00 <strcmp@plt+0x2548>
  405d74:	add    rsi,0x4
  405d78:	mov    edx,0x2
  405d7d:	mov    rdi,rbp
  405d80:	call   425960 <strcmp@plt+0x221a8>
  405d85:	jmp    405d17 <strcmp@plt+0x255f>
  405d87:	nop    WORD PTR [rax+rax*1+0x0]
  405d90:	mov    rbx,QWORD PTR [rsp+0x8]
  405d95:	mov    rdi,rbx
  405d98:	call   403520 <freeaddrinfo@plt>
  405d9d:	mov    rcx,QWORD PTR [rsp+0x48]
  405da2:	xor    rcx,QWORD PTR fs:0x28
  405dab:	mov    rax,r12
  405dae:	jne    405dfa <strcmp@plt+0x2642>
  405db0:	add    rsp,0x50
  405db4:	pop    rbx
  405db5:	pop    rbp
  405db6:	pop    r12
  405db8:	pop    r13
  405dba:	pop    r14
  405dbc:	ret    
  405dbd:	nop    DWORD PTR [rax]
  405dc0:	lea    rsi,[rip+0x40ba9]        # 446970 <strcmp@plt+0x431b8>
  405dc7:	mov    edi,0x3
  405dcc:	xor    eax,eax
  405dce:	call   4306a0 <strcmp@plt+0x2cee8>
  405dd3:	jmp    405d4c <strcmp@plt+0x2594>
  405dd8:	mov    edi,eax
  405dda:	xor    r12d,r12d
  405ddd:	call   403560 <gai_strerror@plt>
  405de2:	lea    rsi,[rip+0x41914]        # 4476fd <strcmp@plt+0x43f45>
  405de9:	mov    rdx,rax
  405dec:	mov    edi,0x3
  405df1:	xor    eax,eax
  405df3:	call   4306a0 <strcmp@plt+0x2cee8>
  405df8:	jmp    405d9d <strcmp@plt+0x25e5>
  405dfa:	call   403460 <__stack_chk_fail@plt>
  405dff:	nop
  405e00:	push   r12
  405e02:	push   rbp
  405e03:	mov    r12,rdi
  405e06:	push   rbx
  405e07:	xor    eax,eax
  405e09:	mov    rbx,rsi
  405e0c:	call   424740 <strcmp@plt+0x20f88>
  405e11:	mov    esi,0x2f
  405e16:	mov    rdi,r12
  405e19:	mov    rbp,rax
  405e1c:	call   403190 <strchr@plt>
  405e21:	test   rax,rax
  405e24:	mov    rsi,rbp
  405e27:	mov    rdi,r12
  405e2a:	je     405ed8 <strcmp@plt+0x2720>
  405e30:	call   4256d0 <strcmp@plt+0x21f18>
  405e35:	cmp    eax,0x1
  405e38:	je     405e5d <strcmp@plt+0x26a5>
  405e3a:	mov    rdi,rbp
  405e3d:	call   424750 <strcmp@plt+0x20f98>
  405e42:	mov    rsi,r12
  405e45:	mov    rdi,rbx
  405e48:	call   43a470 <strcmp@plt+0x36cb8>
  405e4d:	test   rax,rax
  405e50:	je     405eb0 <strcmp@plt+0x26f8>
  405e52:	mov    rdi,rax
  405e55:	call   424b80 <strcmp@plt+0x213c8>
  405e5a:	mov    rbp,rax
  405e5d:	test   rbp,rbp
  405e60:	je     405eb0 <strcmp@plt+0x26f8>
  405e62:	mov    rdi,0x424750
  405e69:	call   42d4f0 <strcmp@plt+0x29d38>
  405e6e:	test   rax,rax
  405e71:	mov    rbx,rax
  405e74:	je     405ed0 <strcmp@plt+0x2718>
  405e76:	mov    rsi,rax
  405e79:	mov    rdi,rbp
  405e7c:	call   42d540 <strcmp@plt+0x29d88>
  405e81:	mov    eax,DWORD PTR [rbx+0x18]
  405e84:	test   eax,eax
  405e86:	jne    405e9e <strcmp@plt+0x26e6>
  405e88:	lea    rsi,[rip+0x40b49]        # 4469d8 <strcmp@plt+0x43220>
  405e8f:	mov    rdx,r12
  405e92:	mov    edi,0x2
  405e97:	xor    eax,eax
  405e99:	call   4306a0 <strcmp@plt+0x2cee8>
  405e9e:	mov    rax,rbx
  405ea1:	pop    rbx
  405ea2:	pop    rbp
  405ea3:	pop    r12
  405ea5:	ret    
  405ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405eb0:	mov    rax,0x4747c0
  405eb7:	mov    rdi,r12
  405eba:	mov    esi,DWORD PTR [rax]
  405ebc:	call   405c70 <strcmp@plt+0x24b8>
  405ec1:	test   rax,rax
  405ec4:	mov    rbx,rax
  405ec7:	jne    405e81 <strcmp@plt+0x26c9>
  405ec9:	nop    DWORD PTR [rax+0x0]
  405ed0:	xor    ebx,ebx
  405ed2:	jmp    405e88 <strcmp@plt+0x26d0>
  405ed4:	nop    DWORD PTR [rax+0x0]
  405ed8:	call   4256a0 <strcmp@plt+0x21ee8>
  405edd:	jmp    405e35 <strcmp@plt+0x267d>
  405ee2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405eed:	nop    DWORD PTR [rax]
  405ef0:	push   r15
  405ef2:	push   r14
  405ef4:	mov    r14,rsi
  405ef7:	push   r13
  405ef9:	push   r12
  405efb:	mov    r13d,edx
  405efe:	push   rbp
  405eff:	push   rbx
  405f00:	mov    r12,r8
  405f03:	sub    rsp,0x28
  405f07:	cmp    edx,0xffffff
  405f0d:	mov    eax,DWORD PTR [rsp+0x60]
  405f11:	mov    DWORD PTR [rsp+0x10],ecx
  405f15:	mov    DWORD PTR [rsp+0x14],r9d
  405f1a:	mov    r15d,DWORD PTR [rsp+0x70]
  405f1f:	mov    rbx,QWORD PTR [rsp+0x78]
  405f24:	mov    rbp,QWORD PTR [rsp+0x80]
  405f2c:	mov    DWORD PTR [rsp+0x18],eax
  405f30:	mov    eax,DWORD PTR [rsp+0x68]
  405f34:	mov    DWORD PTR [rsp+0x1c],eax
  405f38:	ja     406034 <strcmp@plt+0x287c>
  405f3e:	xor    eax,eax
  405f40:	call   424740 <strcmp@plt+0x20f88>
  405f45:	mov    rdi,r14
  405f48:	mov    rsi,rax
  405f4b:	mov    QWORD PTR [rsp+0x8],rax
  405f50:	call   4256d0 <strcmp@plt+0x21f18>
  405f55:	cmp    eax,0x1
  405f58:	je     405f85 <strcmp@plt+0x27cd>
  405f5a:	mov    rdi,QWORD PTR [rsp+0x8]
  405f5f:	call   424750 <strcmp@plt+0x20f98>
  405f64:	mov    rsi,r14
  405f67:	mov    rdi,rbp
  405f6a:	call   43a470 <strcmp@plt+0x36cb8>
  405f6f:	test   rax,rax
  405f72:	je     406054 <strcmp@plt+0x289c>
  405f78:	mov    rdi,rax
  405f7b:	call   424b80 <strcmp@plt+0x213c8>
  405f80:	mov    QWORD PTR [rsp+0x8],rax
  405f85:	mov    r14,QWORD PTR [rsp+0x8]
  405f8a:	mov    rdi,r14
  405f8d:	call   437250 <strcmp@plt+0x33a98>
  405f92:	sub    rsp,0x8
  405f96:	mov    rdi,r14
  405f99:	mov    rcx,r12
  405f9c:	movzx  eax,BYTE PTR [rsp+0x24]
  405fa1:	mov    esi,r13d
  405fa4:	push   rax
  405fa5:	movzx  r9d,BYTE PTR [rsp+0x28]
  405fab:	movzx  r8d,BYTE PTR [rsp+0x24]
  405fb1:	mov    edx,DWORD PTR [rsp+0x20]
  405fb5:	call   430560 <strcmp@plt+0x2cda8>
  405fba:	mov    BYTE PTR [rax+0x19],r15b
  405fbe:	mov    r15,QWORD PTR [rbx+0x8]
  405fc2:	mov    r14,rax
  405fc5:	pop    rax
  405fc6:	pop    rdx
  405fc7:	cmp    rbx,r15
  405fca:	je     406018 <strcmp@plt+0x2860>
  405fcc:	nop    DWORD PTR [rax+0x0]
  405fd0:	mov    rdi,QWORD PTR [r15+0x10]
  405fd4:	mov    rsi,rbp
  405fd7:	call   405e00 <strcmp@plt+0x2648>
  405fdc:	mov    r12,QWORD PTR [rax+0x8]
  405fe0:	mov    r13,rax
  405fe3:	cmp    rax,r12
  405fe6:	je     406007 <strcmp@plt+0x284f>
  405fe8:	nop    DWORD PTR [rax+rax*1+0x0]
  405ff0:	mov    rsi,QWORD PTR [r12+0x10]
  405ff5:	mov    rdi,r14
  405ff8:	call   430610 <strcmp@plt+0x2ce58>
  405ffd:	mov    r12,QWORD PTR [r12+0x8]
  406002:	cmp    r13,r12
  406005:	jne    405ff0 <strcmp@plt+0x2838>
  406007:	mov    rdi,r13
  40600a:	call   42dac0 <strcmp@plt+0x2a308>
  40600f:	mov    r15,QWORD PTR [r15+0x8]
  406013:	cmp    rbx,r15
  406016:	jne    405fd0 <strcmp@plt+0x2818>
  406018:	mov    rdi,QWORD PTR [rsp+0x8]
  40601d:	call   424750 <strcmp@plt+0x20f98>
  406022:	add    rsp,0x28
  406026:	mov    rax,r14
  406029:	pop    rbx
  40602a:	pop    rbp
  40602b:	pop    r12
  40602d:	pop    r13
  40602f:	pop    r14
  406031:	pop    r15
  406033:	ret    
  406034:	lea    rsi,[rip+0x408bd]        # 4468f8 <strcmp@plt+0x43140>
  40603b:	mov    ecx,0xffffff
  406040:	mov    edi,0x2
  406045:	xor    eax,eax
  406047:	xor    r13d,r13d
  40604a:	call   4306a0 <strcmp@plt+0x2cee8>
  40604f:	jmp    405f3e <strcmp@plt+0x2786>
  406054:	lea    rsi,[rip+0x408e5]        # 446940 <strcmp@plt+0x43188>
  40605b:	mov    rdx,r14
  40605e:	mov    edi,0x2
  406063:	xor    r14d,r14d
  406066:	call   4306a0 <strcmp@plt+0x2cee8>
  40606b:	jmp    406022 <strcmp@plt+0x286a>
  40606d:	nop    DWORD PTR [rax]
  406070:	push   r15
  406072:	push   r14
  406074:	mov    r15d,edx
  406077:	push   r13
  406079:	push   r12
  40607b:	mov    r13,r8
  40607e:	push   rbp
  40607f:	push   rbx
  406080:	mov    r14,r9
  406083:	mov    rbx,rsi
  406086:	sub    rsp,0x18
  40608a:	mov    rdi,0x424750
  406091:	mov    DWORD PTR [rsp+0x8],edx
  406095:	mov    DWORD PTR [rsp+0xc],ecx
  406099:	call   42d4f0 <strcmp@plt+0x29d38>
  40609e:	cmp    r15d,0xffffff
  4060a5:	mov    rbp,rax
  4060a8:	ja     40619b <strcmp@plt+0x29e3>
  4060ae:	xor    eax,eax
  4060b0:	call   424740 <strcmp@plt+0x20f88>
  4060b5:	mov    rdi,rbx
  4060b8:	mov    rsi,rax
  4060bb:	mov    r15,rax
  4060be:	mov    QWORD PTR [rsp],rax
  4060c2:	call   4256d0 <strcmp@plt+0x21f18>
  4060c7:	cmp    eax,0x1
  4060ca:	je     4060f4 <strcmp@plt+0x293c>
  4060cc:	mov    rdi,r15
  4060cf:	call   424750 <strcmp@plt+0x20f98>
  4060d4:	mov    rsi,rbx
  4060d7:	mov    rdi,r14
  4060da:	call   43a470 <strcmp@plt+0x36cb8>
  4060df:	test   rax,rax
  4060e2:	je     4061c4 <strcmp@plt+0x2a0c>
  4060e8:	mov    rdi,rax
  4060eb:	call   424b80 <strcmp@plt+0x213c8>
  4060f0:	mov    QWORD PTR [rsp],rax
  4060f4:	mov    rdi,QWORD PTR [rsp]
  4060f8:	call   437250 <strcmp@plt+0x33a98>
  4060fd:	mov    r12,QWORD PTR [r13+0x8]
  406101:	cmp    r13,r12
  406104:	je     40615f <strcmp@plt+0x29a7>
  406106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406110:	mov    rdi,QWORD PTR [r12+0x10]
  406115:	mov    rsi,r14
  406118:	call   405e00 <strcmp@plt+0x2648>
  40611d:	mov    rbx,rax
  406120:	mov    eax,DWORD PTR [rax+0x18]
  406123:	test   eax,eax
  406125:	jle    40614d <strcmp@plt+0x2995>
  406127:	mov    r15,QWORD PTR [rbx+0x8]
  40612b:	cmp    rbx,r15
  40612e:	je     40614d <strcmp@plt+0x2995>
  406130:	mov    rdi,QWORD PTR [r15+0x10]
  406134:	call   424b80 <strcmp@plt+0x213c8>
  406139:	mov    rsi,rbp
  40613c:	mov    rdi,rax
  40613f:	call   42d6d0 <strcmp@plt+0x29f18>
  406144:	mov    r15,QWORD PTR [r15+0x8]
  406148:	cmp    rbx,r15
  40614b:	jne    406130 <strcmp@plt+0x2978>
  40614d:	mov    rdi,rbx
  406150:	call   42dac0 <strcmp@plt+0x2a308>
  406155:	mov    r12,QWORD PTR [r12+0x8]
  40615a:	cmp    r13,r12
  40615d:	jne    406110 <strcmp@plt+0x2958>
  40615f:	mov    r14,QWORD PTR [rsp]
  406163:	mov    edx,DWORD PTR [rsp+0xc]
  406167:	mov    rcx,rbp
  40616a:	mov    esi,DWORD PTR [rsp+0x8]
  40616e:	mov    rdi,r14
  406171:	call   416aa0 <strcmp@plt+0x132e8>
  406176:	mov    rdi,r14
  406179:	mov    rbx,rax
  40617c:	call   424750 <strcmp@plt+0x20f98>
  406181:	mov    rdi,rbp
  406184:	call   42dac0 <strcmp@plt+0x2a308>
  406189:	add    rsp,0x18
  40618d:	mov    rax,rbx
  406190:	pop    rbx
  406191:	pop    rbp
  406192:	pop    r12
  406194:	pop    r13
  406196:	pop    r14
  406198:	pop    r15
  40619a:	ret    
  40619b:	mov    edx,DWORD PTR [rsp+0x8]
  40619f:	lea    rsi,[rip+0x40752]        # 4468f8 <strcmp@plt+0x43140>
  4061a6:	mov    ecx,0xffffff
  4061ab:	mov    edi,0x2
  4061b0:	xor    eax,eax
  4061b2:	call   4306a0 <strcmp@plt+0x2cee8>
  4061b7:	mov    DWORD PTR [rsp+0x8],0x0
  4061bf:	jmp    4060ae <strcmp@plt+0x28f6>
  4061c4:	lea    rsi,[rip+0x40775]        # 446940 <strcmp@plt+0x43188>
  4061cb:	mov    rdx,rbx
  4061ce:	mov    edi,0x2
  4061d3:	xor    ebx,ebx
  4061d5:	call   4306a0 <strcmp@plt+0x2cee8>
  4061da:	jmp    406189 <strcmp@plt+0x29d1>
  4061dc:	nop    DWORD PTR [rax+0x0]
  4061e0:	push   r15
  4061e2:	push   r14
  4061e4:	mov    r14,rdx
  4061e7:	push   r13
  4061e9:	push   r12
  4061eb:	mov    r13,rsi
  4061ee:	push   rbp
  4061ef:	push   rbx
  4061f0:	sub    rsp,0x18
  4061f4:	mov    QWORD PTR [rsp+0x8],rdi
  4061f9:	mov    rdi,0x424750
  406200:	call   42d4f0 <strcmp@plt+0x29d38>
  406205:	mov    rbp,rax
  406208:	xor    eax,eax
  40620a:	call   424740 <strcmp@plt+0x20f88>
  40620f:	mov    r12,QWORD PTR [r13+0x8]
  406213:	mov    QWORD PTR [rsp],rax
  406217:	cmp    r13,r12
  40621a:	je     40626f <strcmp@plt+0x2ab7>
  40621c:	nop    DWORD PTR [rax+0x0]
  406220:	mov    rdi,QWORD PTR [r12+0x10]
  406225:	mov    rsi,r14
  406228:	call   405e00 <strcmp@plt+0x2648>
  40622d:	mov    ecx,DWORD PTR [rax+0x18]
  406230:	mov    rbx,rax
  406233:	test   ecx,ecx
  406235:	jle    40625d <strcmp@plt+0x2aa5>
  406237:	mov    r15,QWORD PTR [rax+0x8]
  40623b:	cmp    rax,r15
  40623e:	je     40625d <strcmp@plt+0x2aa5>
  406240:	mov    rdi,QWORD PTR [r15+0x10]
  406244:	call   424b80 <strcmp@plt+0x213c8>
  406249:	mov    rsi,rbp
  40624c:	mov    rdi,rax
  40624f:	call   42d6d0 <strcmp@plt+0x29f18>
  406254:	mov    r15,QWORD PTR [r15+0x8]
  406258:	cmp    rbx,r15
  40625b:	jne    406240 <strcmp@plt+0x2a88>
  40625d:	mov    rdi,rbx
  406260:	call   42dac0 <strcmp@plt+0x2a308>
  406265:	mov    r12,QWORD PTR [r12+0x8]
  40626a:	cmp    r13,r12
  40626d:	jne    406220 <strcmp@plt+0x2a68>
  40626f:	mov    esi,DWORD PTR [rbp+0x18]
  406272:	test   esi,esi
  406274:	jle    4062f3 <strcmp@plt+0x2b3b>
  406276:	mov    rsi,QWORD PTR [rsp]
  40627a:	lea    rdi,[rip+0x41492]        # 447713 <strcmp@plt+0x43f5b>
  406281:	call   4256d0 <strcmp@plt+0x21f18>
  406286:	push   0x0
  406288:	push   0x0
  40628a:	mov    r9,rbp
  40628d:	mov    rdi,QWORD PTR [rsp+0x10]
  406292:	xor    edx,edx
  406294:	xor    r8d,r8d
  406297:	mov    ecx,0x1
  40629c:	mov    esi,0x5a0
  4062a1:	call   42bab0 <strcmp@plt+0x282f8>
  4062a6:	mov    r12,rax
  4062a9:	xor    eax,eax
  4062ab:	call   4332f0 <strcmp@plt+0x2fb38>
  4062b0:	mov    rsi,r12
  4062b3:	mov    rdi,rax
  4062b6:	mov    rbx,rax
  4062b9:	call   433320 <strcmp@plt+0x2fb68>
  4062be:	mov    rdi,QWORD PTR [rsp+0x18]
  4062c3:	mov    rsi,rbx
  4062c6:	call   417110 <strcmp@plt+0x13958>
  4062cb:	mov    rdi,QWORD PTR [rsp+0x10]
  4062d0:	call   424750 <strcmp@plt+0x20f98>
  4062d5:	mov    rdi,rbp
  4062d8:	call   42dac0 <strcmp@plt+0x2a308>
  4062dd:	pop    rax
  4062de:	pop    rdx
  4062df:	mov    eax,0x1
  4062e4:	add    rsp,0x18
  4062e8:	pop    rbx
  4062e9:	pop    rbp
  4062ea:	pop    r12
  4062ec:	pop    r13
  4062ee:	pop    r14
  4062f0:	pop    r15
  4062f2:	ret    
  4062f3:	lea    rsi,[rip+0x4070e]        # 446a08 <strcmp@plt+0x43250>
  4062fa:	xor    eax,eax
  4062fc:	mov    edi,0x2
  406301:	call   4306a0 <strcmp@plt+0x2cee8>
  406306:	add    rsp,0x18
  40630a:	xor    eax,eax
  40630c:	pop    rbx
  40630d:	pop    rbp
  40630e:	pop    r12
  406310:	pop    r13
  406312:	pop    r14
  406314:	pop    r15
  406316:	ret    
  406317:	nop    WORD PTR [rax+rax*1+0x0]
  406320:	push   r12
  406322:	push   rbp
  406323:	xor    eax,eax
  406325:	push   rbx
  406326:	mov    rbp,rdi
  406329:	call   424740 <strcmp@plt+0x20f88>
  40632e:	mov    rdi,rbp
  406331:	mov    rsi,rax
  406334:	mov    r12,rax
  406337:	call   4256a0 <strcmp@plt+0x21ee8>
  40633c:	cmp    eax,0x1
  40633f:	je     406390 <strcmp@plt+0x2bd8>
  406341:	mov    rdi,r12
  406344:	call   424750 <strcmp@plt+0x20f98>
  406349:	mov    rax,0x4747c0
  406350:	mov    rdi,rbp
  406353:	mov    esi,DWORD PTR [rax]
  406355:	call   405c70 <strcmp@plt+0x24b8>
  40635a:	test   rax,rax
  40635d:	mov    rbx,rax
  406360:	je     4063b8 <strcmp@plt+0x2c00>
  406362:	mov    eax,DWORD PTR [rbx+0x18]
  406365:	test   eax,eax
  406367:	jne    40637f <strcmp@plt+0x2bc7>
  406369:	lea    rsi,[rip+0x406e0]        # 446a50 <strcmp@plt+0x43298>
  406370:	mov    rdx,rbp
  406373:	mov    edi,0x2
  406378:	xor    eax,eax
  40637a:	call   4306a0 <strcmp@plt+0x2cee8>
  40637f:	mov    rax,rbx
  406382:	pop    rbx
  406383:	pop    rbp
  406384:	pop    r12
  406386:	ret    
  406387:	nop    WORD PTR [rax+rax*1+0x0]
  406390:	mov    rdi,0x424750
  406397:	call   42d4f0 <strcmp@plt+0x29d38>
  40639c:	test   rax,rax
  40639f:	mov    rbx,rax
  4063a2:	je     4063b8 <strcmp@plt+0x2c00>
  4063a4:	mov    rsi,rax
  4063a7:	mov    rdi,r12
  4063aa:	call   42d540 <strcmp@plt+0x29d88>
  4063af:	jmp    406362 <strcmp@plt+0x2baa>
  4063b1:	nop    DWORD PTR [rax+0x0]
  4063b8:	xor    ebx,ebx
  4063ba:	jmp    406369 <strcmp@plt+0x2bb1>
  4063bc:	nop    DWORD PTR [rax+0x0]
  4063c0:	push   r15
  4063c2:	push   r14
  4063c4:	mov    r14,rdi
  4063c7:	push   r13
  4063c9:	push   r12
  4063cb:	mov    r13,rsi
  4063ce:	push   rbp
  4063cf:	push   rbx
  4063d0:	sub    rsp,0x8
  4063d4:	call   406320 <strcmp@plt+0x2b68>
  4063d9:	test   rax,rax
  4063dc:	je     40649c <strcmp@plt+0x2ce4>
  4063e2:	mov    r15,QWORD PTR [rax+0x8]
  4063e6:	mov    r12,rax
  4063e9:	cmp    rax,r15
  4063ec:	je     406480 <strcmp@plt+0x2cc8>
  4063f2:	mov    rbp,0x4747c0
  4063f9:	jmp    40642f <strcmp@plt+0x2c77>
  4063fb:	nop    DWORD PTR [rax+rax*1+0x0]
  406400:	mov    rdi,rbx
  406403:	call   4251c0 <strcmp@plt+0x21a08>
  406408:	movzx  eax,ax
  40640b:	cmp    eax,DWORD PTR [rbp+0x0]
  40640e:	je     40643a <strcmp@plt+0x2c82>
  406410:	lea    rsi,[rip+0x406a9]        # 446ac0 <strcmp@plt+0x43308>
  406417:	mov    rdx,r14
  40641a:	mov    edi,0x3
  40641f:	xor    eax,eax
  406421:	call   4306a0 <strcmp@plt+0x2cee8>
  406426:	mov    r15,QWORD PTR [r15+0x8]
  40642a:	cmp    r12,r15
  40642d:	je     406480 <strcmp@plt+0x2cc8>
  40642f:	mov    eax,DWORD PTR [rbp+0x0]
  406432:	mov    rbx,QWORD PTR [r15+0x10]
  406436:	test   eax,eax
  406438:	jne    406400 <strcmp@plt+0x2c48>
  40643a:	mov    rdi,rbx
  40643d:	call   424b80 <strcmp@plt+0x213c8>
  406442:	mov    rsi,r13
  406445:	mov    rdi,rax
  406448:	call   42d6d0 <strcmp@plt+0x29f18>
  40644d:	mov    rax,0x468e3c
  406454:	cmp    DWORD PTR [rax],0x2
  406457:	jle    406426 <strcmp@plt+0x2c6e>
  406459:	mov    rdi,rbx
  40645c:	call   424890 <strcmp@plt+0x210d8>
  406461:	lea    rsi,[rip+0x406b0]        # 446b18 <strcmp@plt+0x43360>
  406468:	mov    rdx,rax
  40646b:	mov    edi,0x7
  406470:	xor    eax,eax
  406472:	call   4306a0 <strcmp@plt+0x2cee8>
  406477:	mov    r15,QWORD PTR [r15+0x8]
  40647b:	cmp    r12,r15
  40647e:	jne    40642f <strcmp@plt+0x2c77>
  406480:	mov    rdi,r12
  406483:	call   42dac0 <strcmp@plt+0x2a308>
  406488:	mov    eax,0x1
  40648d:	add    rsp,0x8
  406491:	pop    rbx
  406492:	pop    rbp
  406493:	pop    r12
  406495:	pop    r13
  406497:	pop    r14
  406499:	pop    r15
  40649b:	ret    
  40649c:	lea    rsi,[rip+0x405e5]        # 446a88 <strcmp@plt+0x432d0>
  4064a3:	xor    eax,eax
  4064a5:	mov    rdx,r14
  4064a8:	mov    edi,0x2
  4064ad:	call   4306a0 <strcmp@plt+0x2cee8>
  4064b2:	xor    eax,eax
  4064b4:	jmp    40648d <strcmp@plt+0x2cd5>
  4064b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4064c0:	push   r15
  4064c2:	push   r14
  4064c4:	mov    r15,rcx
  4064c7:	push   r13
  4064c9:	push   r12
  4064cb:	mov    r13d,edx
  4064ce:	push   rbp
  4064cf:	push   rbx
  4064d0:	movzx  r14d,r8b
  4064d4:	sub    rsp,0x28
  4064d8:	test   edx,edx
  4064da:	sete   dl
  4064dd:	test   rcx,rcx
  4064e0:	mov    QWORD PTR [rsp+0x10],rdi
  4064e5:	sete   al
  4064e8:	mov    QWORD PTR [rsp+0x18],rsi
  4064ed:	or     dl,al
  4064ef:	jne    4065d8 <strcmp@plt+0x2e20>
  4064f5:	test   rsi,rsi
  4064f8:	je     4065d8 <strcmp@plt+0x2e20>
  4064fe:	cmp    r13d,0x1
  406502:	je     40651e <strcmp@plt+0x2d66>
  406504:	lea    rsi,[rip+0x4068d]        # 446b98 <strcmp@plt+0x433e0>
  40650b:	xor    eax,eax
  40650d:	mov    edi,0x2
  406512:	call   4306a0 <strcmp@plt+0x2cee8>
  406517:	xor    eax,eax
  406519:	call   43f160 <strcmp@plt+0x3b9a8>
  40651e:	mov    rdi,QWORD PTR [rsp+0x18]
  406523:	call   406320 <strcmp@plt+0x2b68>
  406528:	test   rax,rax
  40652b:	mov    r12,rax
  40652e:	je     4065f7 <strcmp@plt+0x2e3f>
  406534:	mov    rbx,QWORD PTR [rax+0x8]
  406538:	cmp    rax,rbx
  40653b:	je     4065b9 <strcmp@plt+0x2e01>
  40653d:	movzx  eax,r13b
  406541:	mov    rbp,0x4747c0
  406548:	mov    DWORD PTR [rsp+0xc],eax
  40654c:	jmp    406581 <strcmp@plt+0x2dc9>
  40654e:	xchg   ax,ax
  406550:	mov    rdi,r13
  406553:	call   4251c0 <strcmp@plt+0x21a08>
  406558:	movzx  eax,ax
  40655b:	cmp    eax,DWORD PTR [rbp+0x0]
  40655e:	je     40658c <strcmp@plt+0x2dd4>
  406560:	mov    rdx,QWORD PTR [rsp+0x18]
  406565:	lea    rsi,[rip+0x4069c]        # 446c08 <strcmp@plt+0x43450>
  40656c:	mov    edi,0x3
  406571:	xor    eax,eax
  406573:	call   4306a0 <strcmp@plt+0x2cee8>
  406578:	mov    rbx,QWORD PTR [rbx+0x8]
  40657c:	cmp    r12,rbx
  40657f:	je     4065b9 <strcmp@plt+0x2e01>
  406581:	mov    eax,DWORD PTR [rbp+0x0]
  406584:	mov    r13,QWORD PTR [rbx+0x10]
  406588:	test   eax,eax
  40658a:	jne    406550 <strcmp@plt+0x2d98>
  40658c:	mov    esi,DWORD PTR [rsp+0xc]
  406590:	mov    ecx,r14d
  406593:	mov    rdx,r15
  406596:	mov    rdi,r13
  406599:	call   412610 <strcmp@plt+0xee58>
  40659e:	test   rax,rax
  4065a1:	je     406578 <strcmp@plt+0x2dc0>
  4065a3:	mov    rsi,QWORD PTR [rsp+0x10]
  4065a8:	mov    rdi,rax
  4065ab:	call   42d540 <strcmp@plt+0x29d88>
  4065b0:	mov    rbx,QWORD PTR [rbx+0x8]
  4065b4:	cmp    r12,rbx
  4065b7:	jne    406581 <strcmp@plt+0x2dc9>
  4065b9:	mov    rdi,r12
  4065bc:	call   42dac0 <strcmp@plt+0x2a308>
  4065c1:	mov    eax,0x1
  4065c6:	add    rsp,0x28
  4065ca:	pop    rbx
  4065cb:	pop    rbp
  4065cc:	pop    r12
  4065ce:	pop    r13
  4065d0:	pop    r14
  4065d2:	pop    r15
  4065d4:	ret    
  4065d5:	nop    DWORD PTR [rax]
  4065d8:	lea    rsi,[rip+0x40569]        # 446b48 <strcmp@plt+0x43390>
  4065df:	xor    eax,eax
  4065e1:	mov    edi,0x2
  4065e6:	call   4306a0 <strcmp@plt+0x2cee8>
  4065eb:	xor    eax,eax
  4065ed:	call   43f160 <strcmp@plt+0x3b9a8>
  4065f2:	jmp    4064fe <strcmp@plt+0x2d46>
  4065f7:	mov    rdx,QWORD PTR [rsp+0x18]
  4065fc:	lea    rsi,[rip+0x405d5]        # 446bd8 <strcmp@plt+0x43420>
  406603:	xor    eax,eax
  406605:	mov    edi,0x2
  40660a:	call   4306a0 <strcmp@plt+0x2cee8>
  40660f:	xor    eax,eax
  406611:	jmp    4065c6 <strcmp@plt+0x2e0e>
  406613:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40661e:	xchg   ax,ax
  406620:	push   r15
  406622:	push   r14
  406624:	push   r13
  406626:	push   r12
  406628:	push   rbp
  406629:	push   rbx
  40662a:	sub    rsp,0x18
  40662e:	test   rsi,rsi
  406631:	je     406760 <strcmp@plt+0x2fa8>
  406637:	mov    r15,rdi
  40663a:	mov    r13,rsi
  40663d:	mov    edi,edx
  40663f:	mov    esi,ecx
  406641:	mov    DWORD PTR [rsp+0x8],ecx
  406645:	mov    DWORD PTR [rsp],edx
  406648:	call   4057b0 <strcmp@plt+0x1ff8>
  40664d:	cmp    eax,0x1
  406650:	mov    ebp,eax
  406652:	je     406670 <strcmp@plt+0x2eb8>
  406654:	xor    ebp,ebp
  406656:	add    rsp,0x18
  40665a:	mov    eax,ebp
  40665c:	pop    rbx
  40665d:	pop    rbp
  40665e:	pop    r12
  406660:	pop    r13
  406662:	pop    r14
  406664:	pop    r15
  406666:	ret    
  406667:	nop    WORD PTR [rax+rax*1+0x0]
  406670:	mov    rdi,r13
  406673:	call   406320 <strcmp@plt+0x2b68>
  406678:	test   rax,rax
  40667b:	mov    r14,rax
  40667e:	mov    edx,DWORD PTR [rsp]
  406681:	mov    ecx,DWORD PTR [rsp+0x8]
  406685:	je     40677a <strcmp@plt+0x2fc2>
  40668b:	mov    rbx,QWORD PTR [rax+0x8]
  40668f:	cmp    rax,rbx
  406692:	je     40674d <strcmp@plt+0x2f95>
  406698:	movzx  eax,cl
  40669b:	mov    r12,0x4747c0
  4066a2:	mov    DWORD PTR [rsp+0x8],eax
  4066a6:	movzx  eax,dl
  4066a9:	mov    DWORD PTR [rsp+0xc],eax
  4066ad:	jmp    4066e8 <strcmp@plt+0x2f30>
  4066af:	nop
  4066b0:	mov    rdi,r10
  4066b3:	mov    QWORD PTR [rsp],r10
  4066b7:	call   4251c0 <strcmp@plt+0x21a08>
  4066bc:	movzx  eax,ax
  4066bf:	cmp    eax,DWORD PTR [r12]
  4066c3:	mov    r10,QWORD PTR [rsp]
  4066c7:	je     4066f4 <strcmp@plt+0x2f3c>
  4066c9:	lea    rsi,[rip+0x40610]        # 446ce0 <strcmp@plt+0x43528>
  4066d0:	mov    rdx,r13
  4066d3:	mov    edi,0x3
  4066d8:	xor    eax,eax
  4066da:	call   4306a0 <strcmp@plt+0x2cee8>
  4066df:	mov    rbx,QWORD PTR [rbx+0x8]
  4066e3:	cmp    r14,rbx
  4066e6:	je     40674d <strcmp@plt+0x2f95>
  4066e8:	mov    esi,DWORD PTR [r12]
  4066ec:	mov    r10,QWORD PTR [rbx+0x10]
  4066f0:	test   esi,esi
  4066f2:	jne    4066b0 <strcmp@plt+0x2ef8>
  4066f4:	push   0x0
  4066f6:	push   0xff
  4066fb:	xor    edx,edx
  4066fd:	mov    r9d,DWORD PTR [rsp+0x18]
  406702:	mov    r8d,DWORD PTR [rsp+0x1c]
  406707:	mov    ecx,0x1
  40670c:	mov    esi,0x1
  406711:	mov    rdi,r10
  406714:	call   429d90 <strcmp@plt+0x265d8>
  406719:	mov    rdx,rax
  40671c:	test   rdx,rdx
  40671f:	pop    rax
  406720:	pop    rcx
  406721:	je     4066df <strcmp@plt+0x2f27>
  406723:	mov    rdi,QWORD PTR [r15+0x8]
  406727:	mov    rsi,rdx
  40672a:	mov    QWORD PTR [rsp],rdx
  40672e:	call   42acb0 <strcmp@plt+0x274f8>
  406733:	cmp    eax,0x1
  406736:	je     4066df <strcmp@plt+0x2f27>
  406738:	mov    rdx,QWORD PTR [rsp]
  40673c:	mov    rdi,rdx
  40673f:	call   429d50 <strcmp@plt+0x26598>
  406744:	mov    rbx,QWORD PTR [rbx+0x8]
  406748:	cmp    r14,rbx
  40674b:	jne    4066e8 <strcmp@plt+0x2f30>
  40674d:	mov    rdi,r14
  406750:	call   42dac0 <strcmp@plt+0x2a308>
  406755:	jmp    406656 <strcmp@plt+0x2e9e>
  40675a:	nop    WORD PTR [rax+rax*1+0x0]
  406760:	lea    rsi,[rip+0x404f9]        # 446c60 <strcmp@plt+0x434a8>
  406767:	mov    edi,0x2
  40676c:	xor    eax,eax
  40676e:	xor    ebp,ebp
  406770:	call   4306a0 <strcmp@plt+0x2cee8>
  406775:	jmp    406656 <strcmp@plt+0x2e9e>
  40677a:	lea    rsi,[rip+0x40527]        # 446ca8 <strcmp@plt+0x434f0>
  406781:	mov    rdx,r13
  406784:	mov    edi,0x2
  406789:	xor    eax,eax
  40678b:	xor    ebp,ebp
  40678d:	call   4306a0 <strcmp@plt+0x2cee8>
  406792:	jmp    406656 <strcmp@plt+0x2e9e>
  406797:	nop    WORD PTR [rax+rax*1+0x0]
  4067a0:	push   r15
  4067a2:	push   r14
  4067a4:	push   r13
  4067a6:	push   r12
  4067a8:	push   rbp
  4067a9:	push   rbx
  4067aa:	sub    rsp,0x68
  4067ae:	mov    eax,DWORD PTR [rdi]
  4067b0:	mov    QWORD PTR [rsp+0x38],rdi
  4067b5:	mov    QWORD PTR [rsp+0x50],rsi
  4067ba:	mov    QWORD PTR [rsp+0x30],rdx
  4067bf:	mov    DWORD PTR [rsp+0x5c],ecx
  4067c3:	test   eax,eax
  4067c5:	mov    BYTE PTR [rsp],cl
  4067c8:	je     4070e9 <strcmp@plt+0x3931>
  4067ce:	cmp    eax,0x3
  4067d1:	je     4070e9 <strcmp@plt+0x3931>
  4067d7:	mov    QWORD PTR [rsp+0x40],0x0
  4067e0:	mov    rax,QWORD PTR [rsp+0x30]
  4067e5:	mov    rsi,QWORD PTR [rsp+0x50]
  4067ea:	mov    rdi,QWORD PTR [rax]
  4067ed:	call   405e00 <strcmp@plt+0x2648>
  4067f2:	test   rax,rax
  4067f5:	mov    rbx,rax
  4067f8:	je     407102 <strcmp@plt+0x394a>
  4067fe:	cmp    DWORD PTR [rax+0x18],0x1
  406802:	jne    407102 <strcmp@plt+0x394a>
  406808:	mov    rax,QWORD PTR [rax+0x8]
  40680c:	mov    rbp,QWORD PTR [rax+0x10]
  406810:	mov    rdi,rbp
  406813:	call   437250 <strcmp@plt+0x33a98>
  406818:	mov    rax,QWORD PTR [rsp+0x30]
  40681d:	mov    edi,DWORD PTR [rax+0xc]
  406820:	cmp    edi,0xffffff
  406826:	ja     40710a <strcmp@plt+0x3952>
  40682c:	test   edi,edi
  40682e:	je     407130 <strcmp@plt+0x3978>
  406834:	mov    edx,0x20
  406839:	mov    rsi,rbp
  40683c:	call   429040 <strcmp@plt+0x25888>
  406841:	mov    rbp,rax
  406844:	mov    rax,QWORD PTR [rsp+0x30]
  406849:	mov    edx,DWORD PTR [rax+0x8]
  40684c:	test   edx,edx
  40684e:	jle    40714b <strcmp@plt+0x3993>
  406854:	mov    rdi,rbp
  406857:	call   42a590 <strcmp@plt+0x26dd8>
  40685c:	test   rax,rax
  40685f:	mov    r15,rax
  406862:	je     407102 <strcmp@plt+0x394a>
  406868:	mov    r14,QWORD PTR [rsp+0x30]
  40686d:	cmp    BYTE PTR [rsp+0x5c],0x0
  406872:	mov    eax,DWORD PTR [r14+0x8]
  406876:	mov    DWORD PTR [r15+0x30],eax
  40687a:	jne    406b7e <strcmp@plt+0x33c6>
  406880:	mov    rdi,rbp
  406883:	call   424750 <strcmp@plt+0x20f98>
  406888:	mov    rdi,rbx
  40688b:	call   42dac0 <strcmp@plt+0x2a308>
  406890:	mov    rax,QWORD PTR [rsp+0x30]
  406895:	mov    rax,QWORD PTR [rax+0x10]
  406899:	mov    rcx,QWORD PTR [rax+0x8]
  40689d:	cmp    rcx,rax
  4068a0:	mov    QWORD PTR [rsp+0x28],rcx
  4068a5:	je     406e2a <strcmp@plt+0x3672>
  4068ab:	mov    QWORD PTR [rsp+0x48],r15
  4068b0:	mov    rax,QWORD PTR [rsp+0x28]
  4068b5:	mov    rbp,QWORD PTR [rax+0x10]
  4068b9:	mov    esi,DWORD PTR [rbp+0xc]
  4068bc:	mov    edi,DWORD PTR [rbp+0x8]
  4068bf:	call   4057b0 <strcmp@plt+0x1ff8>
  4068c4:	cmp    eax,0x1
  4068c7:	jne    406c60 <strcmp@plt+0x34a8>
  4068cd:	mov    rsi,QWORD PTR [rsp+0x50]
  4068d2:	mov    rdi,QWORD PTR [rbp+0x0]
  4068d6:	call   405e00 <strcmp@plt+0x2648>
  4068db:	test   rax,rax
  4068de:	mov    r14,rax
  4068e1:	je     406c60 <strcmp@plt+0x34a8>
  4068e7:	mov    eax,DWORD PTR [rax+0x18]
  4068ea:	test   eax,eax
  4068ec:	je     406c60 <strcmp@plt+0x34a8>
  4068f2:	call   42d4e0 <strcmp@plt+0x29d28>
  4068f7:	test   rax,rax
  4068fa:	mov    r12,rax
  4068fd:	je     406c60 <strcmp@plt+0x34a8>
  406903:	mov    rbx,QWORD PTR [r14+0x8]
  406907:	cmp    r14,rbx
  40690a:	je     406a88 <strcmp@plt+0x32d0>
  406910:	mov    r15,0x4747c0
  406917:	mov    r13,r14
  40691a:	mov    QWORD PTR [rsp+0x18],rax
  40691f:	jmp    406a19 <strcmp@plt+0x3261>
  406924:	nop    DWORD PTR [rax+0x0]
  406928:	mov    eax,DWORD PTR [r12+0x18]
  40692d:	cmp    eax,0x2
  406930:	je     406e40 <strcmp@plt+0x3688>
  406936:	cmp    BYTE PTR [rsp],0x0
  40693a:	movzx  edx,BYTE PTR [rbp+0x18]
  40693e:	je     406bb0 <strcmp@plt+0x33f8>
  406944:	test   dl,dl
  406946:	je     406bb0 <strcmp@plt+0x33f8>
  40694c:	cmp    eax,0x3
  40694f:	mov    r14,r12
  406952:	je     406c28 <strcmp@plt+0x3470>
  406958:	mov    rdi,r14
  40695b:	call   4251c0 <strcmp@plt+0x21a08>
  406960:	movzx  eax,ax
  406963:	cmp    eax,0xa
  406966:	mov    DWORD PTR [rsp+0x8],eax
  40696a:	jne    406986 <strcmp@plt+0x31ce>
  40696c:	mov    rax,0x473dc0
  406973:	mov    eax,DWORD PTR [rax]
  406975:	test   eax,eax
  406977:	je     406f28 <strcmp@plt+0x3770>
  40697d:	cmp    eax,0x1
  406980:	je     406f58 <strcmp@plt+0x37a0>
  406986:	mov    rdi,r14
  406989:	call   43f030 <strcmp@plt+0x3b878>
  40698e:	test   rax,rax
  406991:	mov    QWORD PTR [rsp+0x10],rax
  406996:	je     406fb0 <strcmp@plt+0x37f8>
  40699c:	mov    rdi,QWORD PTR [rsp+0x10]
  4069a1:	call   43e680 <strcmp@plt+0x3aec8>
  4069a6:	test   rax,rax
  4069a9:	mov    rdx,rax
  4069ac:	je     406fd8 <strcmp@plt+0x3820>
  4069b2:	mov    esi,DWORD PTR [rsp+0x8]
  4069b6:	mov    rdi,rdx
  4069b9:	mov    QWORD PTR [rsp+0x20],rdx
  4069be:	call   43ebf0 <strcmp@plt+0x3b438>
  4069c3:	mov    rdx,QWORD PTR [rsp+0x20]
  4069c8:	mov    esi,DWORD PTR [rsp+0x8]
  4069cc:	mov    rdi,rdx
  4069cf:	mov    QWORD PTR [rsp+0x8],rdx
  4069d4:	call   43ebb0 <strcmp@plt+0x3b3f8>
  4069d9:	mov    rdi,r14
  4069dc:	mov    rsi,rax
  4069df:	call   424df0 <strcmp@plt+0x21638>
  4069e4:	test   eax,eax
  4069e6:	mov    rdx,QWORD PTR [rsp+0x8]
  4069eb:	je     406e78 <strcmp@plt+0x36c0>
  4069f1:	mov    rdx,QWORD PTR [rsp+0x10]
  4069f6:	lea    rsi,[rip+0x40513]        # 446f10 <strcmp@plt+0x43758>
  4069fd:	mov    edi,0x2
  406a02:	xor    eax,eax
  406a04:	call   4306a0 <strcmp@plt+0x2cee8>
  406a09:	nop    DWORD PTR [rax+0x0]
  406a10:	mov    rbx,QWORD PTR [rbx+0x8]
  406a14:	cmp    r13,rbx
  406a17:	je     406a80 <strcmp@plt+0x32c8>
  406a19:	mov    eax,DWORD PTR [r15]
  406a1c:	mov    r12,QWORD PTR [rbx+0x10]
  406a20:	test   eax,eax
  406a22:	je     406928 <strcmp@plt+0x3170>
  406a28:	mov    rdi,r12
  406a2b:	call   425050 <strcmp@plt+0x21898>
  406a30:	mov    rdi,rax
  406a33:	call   4251c0 <strcmp@plt+0x21a08>
  406a38:	movzx  eax,ax
  406a3b:	cmp    eax,DWORD PTR [r15]
  406a3e:	je     406928 <strcmp@plt+0x3170>
  406a44:	mov    rax,0x468e3c
  406a4b:	mov    eax,DWORD PTR [rax]
  406a4d:	test   eax,eax
  406a4f:	jle    406a10 <strcmp@plt+0x3258>
  406a51:	mov    rdi,r12
  406a54:	call   424890 <strcmp@plt+0x210d8>
  406a59:	lea    rsi,[rip+0x405f0]        # 447050 <strcmp@plt+0x43898>
  406a60:	mov    rdx,rax
  406a63:	mov    edi,0x5
  406a68:	xor    eax,eax
  406a6a:	call   4306a0 <strcmp@plt+0x2cee8>
  406a6f:	mov    rbx,QWORD PTR [rbx+0x8]
  406a73:	cmp    r13,rbx
  406a76:	jne    406a19 <strcmp@plt+0x3261>
  406a78:	nop    DWORD PTR [rax+rax*1+0x0]
  406a80:	mov    r12,QWORD PTR [rsp+0x18]
  406a85:	mov    r14,r13
  406a88:	mov    rdi,r14
  406a8b:	call   42dac0 <strcmp@plt+0x2a308>
  406a90:	mov    rbp,QWORD PTR [r12+0x8]
  406a95:	cmp    rbp,r12
  406a98:	je     406e68 <strcmp@plt+0x36b0>
  406a9e:	mov    r14,QWORD PTR [rsp+0x40]
  406aa3:	mov    r13,QWORD PTR [rsp+0x48]
  406aa8:	jmp    406b08 <strcmp@plt+0x3350>
  406aaa:	nop    WORD PTR [rax+rax*1+0x0]
  406ab0:	mov    rdi,r13
  406ab3:	call   424890 <strcmp@plt+0x210d8>
  406ab8:	mov    rdi,QWORD PTR [rbx]
  406abb:	mov    r15,rax
  406abe:	call   424890 <strcmp@plt+0x210d8>
  406ac3:	lea    rsi,[rip+0x404f6]        # 446fc0 <strcmp@plt+0x43808>
  406aca:	mov    rdx,rax
  406acd:	mov    rcx,r15
  406ad0:	xor    eax,eax
  406ad2:	mov    edi,0x2
  406ad7:	call   4306a0 <strcmp@plt+0x2cee8>
  406adc:	test   r14,r14
  406adf:	je     406af3 <strcmp@plt+0x333b>
  406ae1:	cmp    BYTE PTR [rsp],0x0
  406ae5:	je     406af3 <strcmp@plt+0x333b>
  406ae7:	mov    rdi,QWORD PTR [r14+0x50]
  406aeb:	mov    rsi,rbx
  406aee:	call   42ead0 <strcmp@plt+0x2b318>
  406af3:	mov    rdi,rbx
  406af6:	call   429d50 <strcmp@plt+0x26598>
  406afb:	mov    rbp,QWORD PTR [rbp+0x8]
  406aff:	cmp    rbp,r12
  406b02:	je     406e68 <strcmp@plt+0x36b0>
  406b08:	mov    rbx,QWORD PTR [rbp+0x10]
  406b0c:	test   rbx,rbx
  406b0f:	je     406afb <strcmp@plt+0x3343>
  406b11:	mov    rsi,QWORD PTR [rbx]
  406b14:	mov    rdi,r13
  406b17:	call   42ac90 <strcmp@plt+0x274d8>
  406b1c:	test   rax,rax
  406b1f:	jne    406ab0 <strcmp@plt+0x32f8>
  406b21:	mov    rsi,rbx
  406b24:	mov    rdi,r13
  406b27:	call   42acb0 <strcmp@plt+0x274f8>
  406b2c:	cmp    eax,0x1
  406b2f:	je     406afb <strcmp@plt+0x3343>
  406b31:	mov    rax,0x468e3c
  406b38:	mov    r8d,DWORD PTR [rax]
  406b3b:	test   r8d,r8d
  406b3e:	jle    406b70 <strcmp@plt+0x33b8>
  406b40:	mov    rdi,r13
  406b43:	call   424890 <strcmp@plt+0x210d8>
  406b48:	mov    rdi,QWORD PTR [rbx]
  406b4b:	mov    QWORD PTR [rsp+0x8],rax
  406b50:	call   424890 <strcmp@plt+0x210d8>
  406b55:	mov    rcx,QWORD PTR [rsp+0x8]
  406b5a:	lea    rsi,[rip+0x405cf]        # 447130 <strcmp@plt+0x43978>
  406b61:	mov    rdx,rax
  406b64:	mov    edi,0x5
  406b69:	xor    eax,eax
  406b6b:	call   4306a0 <strcmp@plt+0x2cee8>
  406b70:	test   r14,r14
  406b73:	jne    406ae1 <strcmp@plt+0x3329>
  406b79:	jmp    406af3 <strcmp@plt+0x333b>
  406b7e:	mov    rdi,rbp
  406b81:	mov    BYTE PTR [r15+0x35],0x1
  406b86:	call   424750 <strcmp@plt+0x20f98>
  406b8b:	mov    rdi,rbx
  406b8e:	call   42dac0 <strcmp@plt+0x2a308>
  406b93:	mov    rax,QWORD PTR [r14+0x10]
  406b97:	mov    rcx,QWORD PTR [rax+0x8]
  406b9b:	cmp    rcx,rax
  406b9e:	mov    QWORD PTR [rsp+0x28],rcx
  406ba3:	jne    4068ab <strcmp@plt+0x30f3>
  406ba9:	jmp    406c8d <strcmp@plt+0x34d5>
  406bae:	xchg   ax,ax
  406bb0:	push   0x0
  406bb2:	push   0xff
  406bb7:	mov    rdi,r12
  406bba:	movzx  r9d,BYTE PTR [rbp+0xc]
  406bbf:	movzx  r8d,BYTE PTR [rbp+0x8]
  406bc4:	mov    ecx,0x1
  406bc9:	mov    esi,0x1
  406bce:	call   429d90 <strcmp@plt+0x265d8>
  406bd3:	test   rax,rax
  406bd6:	mov    r12,rax
  406bd9:	pop    r9
  406bdb:	pop    r10
  406bdd:	je     406a10 <strcmp@plt+0x3258>
  406be3:	mov    rsi,QWORD PTR [rsp+0x18]
  406be8:	mov    rdi,r12
  406beb:	call   42d540 <strcmp@plt+0x29d88>
  406bf0:	mov    rax,0x468e3c
  406bf7:	cmp    DWORD PTR [rax],0x1
  406bfa:	jle    406a10 <strcmp@plt+0x3258>
  406c00:	mov    rdi,r12
  406c03:	call   429e20 <strcmp@plt+0x26668>
  406c08:	lea    rsi,[rip+0x40409]        # 447018 <strcmp@plt+0x43860>
  406c0f:	mov    rdx,rax
  406c12:	mov    edi,0x6
  406c17:	xor    eax,eax
  406c19:	call   4306a0 <strcmp@plt+0x2cee8>
  406c1e:	jmp    406a10 <strcmp@plt+0x3258>
  406c23:	nop    DWORD PTR [rax+rax*1+0x0]
  406c28:	mov    rdi,r12
  406c2b:	call   425050 <strcmp@plt+0x21898>
  406c30:	test   rax,rax
  406c33:	mov    r14,rax
  406c36:	jne    406958 <strcmp@plt+0x31a0>
  406c3c:	mov    rdi,r12
  406c3f:	call   424890 <strcmp@plt+0x210d8>
  406c44:	lea    rsi,[rip+0x401a5]        # 446df0 <strcmp@plt+0x43638>
  406c4b:	mov    rdx,rax
  406c4e:	mov    edi,0x2
  406c53:	xor    eax,eax
  406c55:	call   4306a0 <strcmp@plt+0x2cee8>
  406c5a:	nop    WORD PTR [rax+rax*1+0x0]
  406c60:	mov    rax,QWORD PTR [rsp+0x28]
  406c65:	mov    rcx,QWORD PTR [rsp+0x30]
  406c6a:	mov    rax,QWORD PTR [rax+0x8]
  406c6e:	cmp    QWORD PTR [rcx+0x10],rax
  406c72:	mov    QWORD PTR [rsp+0x28],rax
  406c77:	jne    4068b0 <strcmp@plt+0x30f8>
  406c7d:	cmp    BYTE PTR [rsp+0x5c],0x0
  406c82:	mov    r15,QWORD PTR [rsp+0x48]
  406c87:	je     406e2a <strcmp@plt+0x3672>
  406c8d:	mov    rax,QWORD PTR [rsp+0x30]
  406c92:	lea    r13,[rip+0x40497]        # 447130 <strcmp@plt+0x43978>
  406c99:	mov    r12,QWORD PTR [rsp+0x40]
  406c9e:	mov    rax,QWORD PTR [rax+0x18]
  406ca2:	mov    rbx,QWORD PTR [rax+0x8]
  406ca6:	cmp    rax,rbx
  406ca9:	jne    406cec <strcmp@plt+0x3534>
  406cab:	jmp    406e2a <strcmp@plt+0x3672>
  406cb0:	cmp    eax,DWORD PTR [r14+0x8]
  406cb4:	je     406d02 <strcmp@plt+0x354a>
  406cb6:	mov    rax,0x468e3c
  406cbd:	mov    edi,DWORD PTR [rax]
  406cbf:	test   edi,edi
  406cc1:	jle    406cd9 <strcmp@plt+0x3521>
  406cc3:	mov    rdx,QWORD PTR [r14]
  406cc6:	lea    rsi,[rip+0x404cb]        # 447198 <strcmp@plt+0x439e0>
  406ccd:	mov    edi,0x5
  406cd2:	xor    eax,eax
  406cd4:	call   4306a0 <strcmp@plt+0x2cee8>
  406cd9:	mov    rax,QWORD PTR [rsp+0x30]
  406cde:	mov    rbx,QWORD PTR [rbx+0x8]
  406ce2:	cmp    QWORD PTR [rax+0x18],rbx
  406ce6:	je     406e2a <strcmp@plt+0x3672>
  406cec:	mov    r14,QWORD PTR [rbx+0x10]
  406cf0:	test   r14,r14
  406cf3:	je     406cd9 <strcmp@plt+0x3521>
  406cf5:	mov    rax,0x4747c0
  406cfc:	mov    eax,DWORD PTR [rax]
  406cfe:	test   eax,eax
  406d00:	jne    406cb0 <strcmp@plt+0x34f8>
  406d02:	mov    esi,DWORD PTR [r14+0x10]
  406d06:	mov    edi,DWORD PTR [r14+0xc]
  406d0a:	call   4057b0 <strcmp@plt+0x1ff8>
  406d0f:	cmp    eax,0x1
  406d12:	jne    406cd9 <strcmp@plt+0x3521>
  406d14:	mov    rdi,QWORD PTR [r14]
  406d17:	call   43e680 <strcmp@plt+0x3aec8>
  406d1c:	test   rax,rax
  406d1f:	mov    rbp,rax
  406d22:	je     40716a <strcmp@plt+0x39b2>
  406d28:	mov    esi,DWORD PTR [r14+0x8]
  406d2c:	mov    rdi,rbp
  406d2f:	call   43ebf0 <strcmp@plt+0x3b438>
  406d34:	movzx  eax,BYTE PTR [r14+0x18]
  406d39:	cmp    DWORD PTR [r14+0x8],0x2
  406d3e:	mov    ecx,0x1
  406d43:	mov    rdi,QWORD PTR [rbp+0x18]
  406d47:	movzx  esi,BYTE PTR [rbp+0xc]
  406d4b:	mov    edx,0x1
  406d50:	cmove  rdi,QWORD PTR [rbp+0x10]
  406d55:	push   rax
  406d56:	movzx  eax,BYTE PTR [r14+0x14]
  406d5b:	push   rax
  406d5c:	movzx  r9d,BYTE PTR [r14+0x10]
  406d61:	movzx  r8d,BYTE PTR [r14+0xc]
  406d66:	call   429d90 <strcmp@plt+0x265d8>
  406d6b:	mov    rbp,rax
  406d6e:	mov    rax,0x468e3c
  406d75:	pop    rdx
  406d76:	pop    rcx
  406d77:	cmp    DWORD PTR [rax],0x1
  406d7a:	jle    406d9a <strcmp@plt+0x35e2>
  406d7c:	mov    rdi,rbp
  406d7f:	call   429e20 <strcmp@plt+0x26668>
  406d84:	lea    rsi,[rip+0x4028d]        # 447018 <strcmp@plt+0x43860>
  406d8b:	mov    rdx,rax
  406d8e:	mov    edi,0x6
  406d93:	xor    eax,eax
  406d95:	call   4306a0 <strcmp@plt+0x2cee8>
  406d9a:	test   rbp,rbp
  406d9d:	je     406cd9 <strcmp@plt+0x3521>
  406da3:	mov    rax,QWORD PTR [rsp+0x38]
  406da8:	mov    eax,DWORD PTR [rax]
  406daa:	test   eax,eax
  406dac:	je     40708d <strcmp@plt+0x38d5>
  406db2:	cmp    eax,0x3
  406db5:	je     40708d <strcmp@plt+0x38d5>
  406dbb:	mov    rsi,QWORD PTR [rbp+0x0]
  406dbf:	mov    rdi,r15
  406dc2:	call   42ac90 <strcmp@plt+0x274d8>
  406dc7:	test   rax,rax
  406dca:	je     407033 <strcmp@plt+0x387b>
  406dd0:	mov    rdi,r15
  406dd3:	call   424890 <strcmp@plt+0x210d8>
  406dd8:	mov    rdi,QWORD PTR [rbp+0x0]
  406ddc:	mov    r14,rax
  406ddf:	call   424890 <strcmp@plt+0x210d8>
  406de4:	lea    rsi,[rip+0x401d5]        # 446fc0 <strcmp@plt+0x43808>
  406deb:	mov    rdx,rax
  406dee:	mov    rcx,r14
  406df1:	xor    eax,eax
  406df3:	mov    edi,0x2
  406df8:	call   4306a0 <strcmp@plt+0x2cee8>
  406dfd:	test   r12,r12
  406e00:	je     406e0f <strcmp@plt+0x3657>
  406e02:	mov    rdi,QWORD PTR [r12+0x50]
  406e07:	mov    rsi,rbp
  406e0a:	call   42ead0 <strcmp@plt+0x2b318>
  406e0f:	mov    rdi,rbp
  406e12:	call   429d50 <strcmp@plt+0x26598>
  406e17:	mov    rax,QWORD PTR [rsp+0x30]
  406e1c:	mov    rbx,QWORD PTR [rbx+0x8]
  406e20:	cmp    QWORD PTR [rax+0x18],rbx
  406e24:	jne    406cec <strcmp@plt+0x3534>
  406e2a:	add    rsp,0x68
  406e2e:	mov    rax,r15
  406e31:	pop    rbx
  406e32:	pop    rbp
  406e33:	pop    r12
  406e35:	pop    r13
  406e37:	pop    r14
  406e39:	pop    r15
  406e3b:	ret    
  406e3c:	nop    DWORD PTR [rax+0x0]
  406e40:	mov    rdi,r12
  406e43:	call   424890 <strcmp@plt+0x210d8>
  406e48:	lea    rsi,[rip+0x3ff61]        # 446db0 <strcmp@plt+0x435f8>
  406e4f:	mov    rdx,rax
  406e52:	mov    edi,0x2
  406e57:	xor    eax,eax
  406e59:	call   4306a0 <strcmp@plt+0x2cee8>
  406e5e:	jmp    406a10 <strcmp@plt+0x3258>
  406e63:	nop    DWORD PTR [rax+rax*1+0x0]
  406e68:	mov    rdi,r12
  406e6b:	call   42dac0 <strcmp@plt+0x2a308>
  406e70:	jmp    406c60 <strcmp@plt+0x34a8>
  406e75:	nop    DWORD PTR [rax]
  406e78:	movzx  eax,BYTE PTR [rbp+0x14]
  406e7c:	movzx  esi,BYTE PTR [rdx+0xc]
  406e80:	mov    rdi,r12
  406e83:	mov    ecx,0x1
  406e88:	mov    edx,0x1
  406e8d:	push   rax
  406e8e:	movzx  eax,BYTE PTR [rbp+0x10]
  406e92:	push   rax
  406e93:	movzx  r9d,BYTE PTR [rbp+0xc]
  406e98:	movzx  r8d,BYTE PTR [rbp+0x8]
  406e9d:	call   429d90 <strcmp@plt+0x265d8>
  406ea2:	mov    r12,rax
  406ea5:	test   r12,r12
  406ea8:	pop    r11
  406eaa:	pop    rax
  406eab:	je     406a10 <strcmp@plt+0x3258>
  406eb1:	mov    rax,QWORD PTR [rsp+0x38]
  406eb6:	mov    eax,DWORD PTR [rax]
  406eb8:	test   eax,eax
  406eba:	je     406ec5 <strcmp@plt+0x370d>
  406ebc:	cmp    eax,0x3
  406ebf:	jne    406be3 <strcmp@plt+0x342b>
  406ec5:	mov    rax,0x474850
  406ecc:	mov    rdi,QWORD PTR [rax]
  406ecf:	call   410710 <strcmp@plt+0xcf58>
  406ed4:	mov    rsi,QWORD PTR [rsp+0x10]
  406ed9:	mov    rdi,QWORD PTR [rax+0x50]
  406edd:	mov    QWORD PTR [rsp+0x8],rax
  406ee2:	call   43a470 <strcmp@plt+0x36cb8>
  406ee7:	test   rax,rax
  406eea:	mov    rcx,rax
  406eed:	mov    rdx,QWORD PTR [rsp+0x8]
  406ef2:	je     4071aa <strcmp@plt+0x39f2>
  406ef8:	mov    rdi,r14
  406efb:	mov    QWORD PTR [rsp+0x8],rcx
  406f00:	call   4251c0 <strcmp@plt+0x21a08>
  406f05:	cmp    ax,0x2
  406f09:	mov    rcx,QWORD PTR [rsp+0x8]
  406f0e:	je     4070d8 <strcmp@plt+0x3920>
  406f14:	mov    rsi,QWORD PTR [rcx+0x18]
  406f18:	mov    rdi,r12
  406f1b:	call   42d540 <strcmp@plt+0x29d88>
  406f20:	jmp    406be3 <strcmp@plt+0x342b>
  406f25:	nop    DWORD PTR [rax]
  406f28:	mov    rdi,r14
  406f2b:	call   4257f0 <strcmp@plt+0x22038>
  406f30:	mov    eax,DWORD PTR [rax]
  406f32:	and    eax,0xe0
  406f37:	cmp    eax,0x20
  406f3a:	jne    407010 <strcmp@plt+0x3858>
  406f40:	mov    rax,0x473dc0
  406f47:	mov    eax,DWORD PTR [rax]
  406f49:	cmp    eax,0x1
  406f4c:	jne    406986 <strcmp@plt+0x31ce>
  406f52:	nop    WORD PTR [rax+rax*1+0x0]
  406f58:	mov    rdi,r14
  406f5b:	call   4257f0 <strcmp@plt+0x22038>
  406f60:	mov    eax,DWORD PTR [rax]
  406f62:	mov    edx,eax
  406f64:	and    edx,0xc0ff
  406f6a:	cmp    edx,0xc0fe
  406f70:	je     406986 <strcmp@plt+0x31ce>
  406f76:	and    eax,0xfe
  406f7b:	cmp    eax,0xfc
  406f80:	je     406986 <strcmp@plt+0x31ce>
  406f86:	mov    rdi,r14
  406f89:	call   424890 <strcmp@plt+0x210d8>
  406f8e:	lea    rsi,[rip+0x40123]        # 4470b8 <strcmp@plt+0x43900>
  406f95:	mov    rdx,rax
  406f98:	mov    edi,0x2
  406f9d:	xor    eax,eax
  406f9f:	call   4306a0 <strcmp@plt+0x2cee8>
  406fa4:	jmp    406a10 <strcmp@plt+0x3258>
  406fa9:	nop    DWORD PTR [rax+0x0]
  406fb0:	mov    rdi,r14
  406fb3:	call   424890 <strcmp@plt+0x210d8>
  406fb8:	lea    rsi,[rip+0x3fee1]        # 446ea0 <strcmp@plt+0x436e8>
  406fbf:	mov    rdx,rax
  406fc2:	mov    edi,0x2
  406fc7:	xor    eax,eax
  406fc9:	call   4306a0 <strcmp@plt+0x2cee8>
  406fce:	jmp    406a10 <strcmp@plt+0x3258>
  406fd3:	nop    DWORD PTR [rax+rax*1+0x0]
  406fd8:	mov    rdi,QWORD PTR [rsp+0x10]
  406fdd:	call   43e570 <strcmp@plt+0x3adb8>
  406fe2:	test   rax,rax
  406fe5:	mov    rdx,rax
  406fe8:	jne    4069b2 <strcmp@plt+0x31fa>
  406fee:	mov    rdx,QWORD PTR [rsp+0x10]
  406ff3:	lea    rsi,[rip+0x3fede]        # 446ed8 <strcmp@plt+0x43720>
  406ffa:	mov    edi,0x2
  406fff:	xor    eax,eax
  407001:	call   4306a0 <strcmp@plt+0x2cee8>
  407006:	jmp    406a10 <strcmp@plt+0x3258>
  40700b:	nop    DWORD PTR [rax+rax*1+0x0]
  407010:	mov    rdi,r14
  407013:	call   424890 <strcmp@plt+0x210d8>
  407018:	lea    rsi,[rip+0x3fe11]        # 446e30 <strcmp@plt+0x43678>
  40701f:	mov    rdx,rax
  407022:	mov    edi,0x2
  407027:	xor    eax,eax
  407029:	call   4306a0 <strcmp@plt+0x2cee8>
  40702e:	jmp    406a10 <strcmp@plt+0x3258>
  407033:	mov    rsi,rbp
  407036:	mov    rdi,r15
  407039:	call   42acb0 <strcmp@plt+0x274f8>
  40703e:	cmp    eax,0x1
  407041:	je     406cd9 <strcmp@plt+0x3521>
  407047:	mov    rax,0x468e3c
  40704e:	mov    eax,DWORD PTR [rax]
  407050:	test   eax,eax
  407052:	jle    40707f <strcmp@plt+0x38c7>
  407054:	mov    rdi,r15
  407057:	call   424890 <strcmp@plt+0x210d8>
  40705c:	mov    rdi,QWORD PTR [rbp+0x0]
  407060:	mov    QWORD PTR [rsp],rax
  407064:	call   424890 <strcmp@plt+0x210d8>
  407069:	mov    rcx,QWORD PTR [rsp]
  40706d:	mov    rdx,rax
  407070:	mov    rsi,r13
  407073:	mov    edi,0x5
  407078:	xor    eax,eax
  40707a:	call   4306a0 <strcmp@plt+0x2cee8>
  40707f:	test   r12,r12
  407082:	jne    406e02 <strcmp@plt+0x364a>
  407088:	jmp    406e0f <strcmp@plt+0x3657>
  40708d:	mov    rax,0x474850
  407094:	mov    rdi,QWORD PTR [rax]
  407097:	call   410710 <strcmp@plt+0xcf58>
  40709c:	mov    rsi,QWORD PTR [r14]
  40709f:	mov    rdi,QWORD PTR [rax+0x50]
  4070a3:	mov    QWORD PTR [rsp],rax
  4070a7:	call   43a470 <strcmp@plt+0x36cb8>
  4070ac:	test   rax,rax
  4070af:	mov    rcx,rax
  4070b2:	mov    rdx,QWORD PTR [rsp]
  4070b6:	je     4071fc <strcmp@plt+0x3a44>
  4070bc:	cmp    DWORD PTR [r14+0x8],0x2
  4070c1:	je     4071eb <strcmp@plt+0x3a33>
  4070c7:	mov    rsi,QWORD PTR [rcx+0x18]
  4070cb:	mov    rdi,rbp
  4070ce:	call   42d540 <strcmp@plt+0x29d88>
  4070d3:	jmp    406dbb <strcmp@plt+0x3603>
  4070d8:	mov    rsi,QWORD PTR [rcx+0x10]
  4070dc:	mov    rdi,r12
  4070df:	call   42d540 <strcmp@plt+0x29d88>
  4070e4:	jmp    406be3 <strcmp@plt+0x342b>
  4070e9:	mov    rax,0x474850
  4070f0:	mov    rdi,QWORD PTR [rax]
  4070f3:	call   410710 <strcmp@plt+0xcf58>
  4070f8:	mov    QWORD PTR [rsp+0x40],rax
  4070fd:	jmp    4067e0 <strcmp@plt+0x3028>
  407102:	xor    r15d,r15d
  407105:	jmp    406e2a <strcmp@plt+0x3672>
  40710a:	lea    rsi,[rip+0x3fc17]        # 446d28 <strcmp@plt+0x43570>
  407111:	mov    edx,edi
  407113:	xor    eax,eax
  407115:	mov    ecx,0xffffff
  40711a:	mov    edi,0x2
  40711f:	call   4306a0 <strcmp@plt+0x2cee8>
  407124:	mov    rax,QWORD PTR [rsp+0x30]
  407129:	mov    DWORD PTR [rax+0xc],0x0
  407130:	mov    rdi,rbp
  407133:	call   424b80 <strcmp@plt+0x213c8>
  407138:	mov    rbp,rax
  40713b:	mov    rax,QWORD PTR [rsp+0x30]
  407140:	mov    edx,DWORD PTR [rax+0x8]
  407143:	test   edx,edx
  407145:	jg     406854 <strcmp@plt+0x309c>
  40714b:	lea    rsi,[rip+0x3fc1e]        # 446d70 <strcmp@plt+0x435b8>
  407152:	mov    DWORD PTR [rax+0x8],0x1
  407159:	mov    edi,0x3
  40715e:	xor    eax,eax
  407160:	call   4306a0 <strcmp@plt+0x2cee8>
  407165:	jmp    406854 <strcmp@plt+0x309c>
  40716a:	mov    rdi,QWORD PTR [r14]
  40716d:	call   43e570 <strcmp@plt+0x3adb8>
  407172:	test   rax,rax
  407175:	mov    rbp,rax
  407178:	jne    406d28 <strcmp@plt+0x3570>
  40717e:	mov    rax,0x468e3c
  407185:	mov    esi,DWORD PTR [rax]
  407187:	test   esi,esi
  407189:	jle    406cd9 <strcmp@plt+0x3521>
  40718f:	mov    rdx,QWORD PTR [r14]
  407192:	lea    rsi,[rip+0x4006f]        # 447208 <strcmp@plt+0x43a50>
  407199:	mov    edi,0x5
  40719e:	xor    eax,eax
  4071a0:	call   4306a0 <strcmp@plt+0x2cee8>
  4071a5:	jmp    406cd9 <strcmp@plt+0x3521>
  4071aa:	mov    rdi,QWORD PTR [rsp+0x10]
  4071af:	mov    QWORD PTR [rsp+0x20],rdx
  4071b4:	call   42e800 <strcmp@plt+0x2b048>
  4071b9:	mov    rdi,QWORD PTR [rsp+0x10]
  4071be:	mov    QWORD PTR [rsp+0x8],rax
  4071c3:	call   403730 <strdup@plt>
  4071c8:	mov    rdx,QWORD PTR [rsp+0x20]
  4071cd:	mov    rcx,QWORD PTR [rsp+0x8]
  4071d2:	mov    rsi,rax
  4071d5:	mov    rdi,QWORD PTR [rdx+0x50]
  4071d9:	mov    rdx,rcx
  4071dc:	call   439800 <strcmp@plt+0x36048>
  4071e1:	mov    rcx,QWORD PTR [rsp+0x8]
  4071e6:	jmp    406ef8 <strcmp@plt+0x3740>
  4071eb:	mov    rsi,QWORD PTR [rcx+0x10]
  4071ef:	mov    rdi,rbp
  4071f2:	call   42d540 <strcmp@plt+0x29d88>
  4071f7:	jmp    406dbb <strcmp@plt+0x3603>
  4071fc:	mov    rdi,QWORD PTR [r14]
  4071ff:	mov    QWORD PTR [rsp+0x8],rdx
  407204:	call   42e800 <strcmp@plt+0x2b048>
  407209:	mov    rdi,QWORD PTR [r14]
  40720c:	mov    QWORD PTR [rsp],rax
  407210:	call   403730 <strdup@plt>
  407215:	mov    rdx,QWORD PTR [rsp+0x8]
  40721a:	mov    rcx,QWORD PTR [rsp]
  40721e:	mov    rsi,rax
  407221:	mov    rdi,QWORD PTR [rdx+0x50]
  407225:	mov    rdx,rcx
  407228:	call   439800 <strcmp@plt+0x36048>
  40722d:	mov    rcx,QWORD PTR [rsp]
  407231:	jmp    4070bc <strcmp@plt+0x3904>
  407236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407240:	push   r13
  407242:	push   r12
  407244:	push   rbp
  407245:	push   rbx
  407246:	mov    rbx,rdi
  407249:	mov    rbp,rsi
  40724c:	sub    rsp,0x8
  407250:	call   4342b0 <strcmp@plt+0x30af8>
  407255:	test   rbx,rbx
  407258:	je     4072e0 <strcmp@plt+0x3b28>
  40725e:	mov    rdi,QWORD PTR [rbp+0x70]
  407262:	mov    rsi,rax
  407265:	mov    r12,rax
  407268:	call   408960 <strcmp@plt+0x51a8>
  40726d:	test   rax,rax
  407270:	je     4072b0 <strcmp@plt+0x3af8>
  407272:	mov    rdi,r12
  407275:	call   424890 <strcmp@plt+0x210d8>
  40727a:	lea    rsi,[rip+0x3ffdf]        # 447260 <strcmp@plt+0x43aa8>
  407281:	mov    rdx,rax
  407284:	mov    edi,0x2
  407289:	xor    eax,eax
  40728b:	call   4306a0 <strcmp@plt+0x2cee8>
  407290:	mov    rdi,QWORD PTR [rbp+0x50]
  407294:	mov    rsi,rbx
  407297:	xor    r13d,r13d
  40729a:	call   42ebc0 <strcmp@plt+0x2b408>
  40729f:	add    rsp,0x8
  4072a3:	mov    eax,r13d
  4072a6:	pop    rbx
  4072a7:	pop    rbp
  4072a8:	pop    r12
  4072aa:	pop    r13
  4072ac:	ret    
  4072ad:	nop    DWORD PTR [rax]
  4072b0:	mov    rdi,QWORD PTR [rbp+0x70]
  4072b4:	mov    rsi,rbx
  4072b7:	call   408760 <strcmp@plt+0x4fa8>
  4072bc:	cmp    eax,0x1
  4072bf:	mov    r13d,eax
  4072c2:	jne    407308 <strcmp@plt+0x3b50>
  4072c4:	mov    rax,0x468e3c
  4072cb:	mov    eax,DWORD PTR [rax]
  4072cd:	test   eax,eax
  4072cf:	jg     407330 <strcmp@plt+0x3b78>
  4072d1:	mov    rdi,QWORD PTR [rbp+0x50]
  4072d5:	mov    rsi,rbx
  4072d8:	call   42ea10 <strcmp@plt+0x2b258>
  4072dd:	jmp    40729f <strcmp@plt+0x3ae7>
  4072df:	nop
  4072e0:	lea    rsi,[rip+0x40436]        # 44771d <strcmp@plt+0x43f65>
  4072e7:	xor    eax,eax
  4072e9:	mov    edi,0x2
  4072ee:	xor    r13d,r13d
  4072f1:	call   4306a0 <strcmp@plt+0x2cee8>
  4072f6:	add    rsp,0x8
  4072fa:	mov    eax,r13d
  4072fd:	pop    rbx
  4072fe:	pop    rbp
  4072ff:	pop    r12
  407301:	pop    r13
  407303:	ret    
  407304:	nop    DWORD PTR [rax+0x0]
  407308:	mov    rdi,r12
  40730b:	call   424890 <strcmp@plt+0x210d8>
  407310:	lea    rsi,[rip+0x3ff21]        # 447238 <strcmp@plt+0x43a80>
  407317:	mov    rdx,rax
  40731a:	mov    edi,0x2
  40731f:	xor    eax,eax
  407321:	call   4306a0 <strcmp@plt+0x2cee8>
  407326:	jmp    407290 <strcmp@plt+0x3ad8>
  40732b:	nop    DWORD PTR [rax+rax*1+0x0]
  407330:	mov    rdi,r12
  407333:	call   424890 <strcmp@plt+0x210d8>
  407338:	lea    rsi,[rip+0x3ff61]        # 4472a0 <strcmp@plt+0x43ae8>
  40733f:	mov    rdx,rax
  407342:	mov    edi,0x5
  407347:	xor    eax,eax
  407349:	call   4306a0 <strcmp@plt+0x2cee8>
  40734e:	jmp    4072d1 <strcmp@plt+0x3b19>
  407350:	test   rdx,rdx
  407353:	push   r14
  407355:	push   r13
  407357:	push   r12
  407359:	push   rbp
  40735a:	mov    rbp,rdx
  40735d:	sete   dl
  407360:	test   rcx,rcx
  407363:	push   rbx
  407364:	sete   al
  407367:	or     dl,al
  407369:	jne    4073b0 <strcmp@plt+0x3bf8>
  40736b:	test   rsi,rsi
  40736e:	mov    rbx,rsi
  407371:	je     4073b0 <strcmp@plt+0x3bf8>
  407373:	mov    r13,rdi
  407376:	mov    rdi,QWORD PTR [rdi+0x30]
  40737a:	mov    r12,rcx
  40737d:	call   43a470 <strcmp@plt+0x36cb8>
  407382:	test   rax,rax
  407385:	je     4073d0 <strcmp@plt+0x3c18>
  407387:	lea    rsi,[rip+0x3ff7a]        # 447308 <strcmp@plt+0x43b50>
  40738e:	xor    eax,eax
  407390:	mov    rdx,rbx
  407393:	mov    edi,0x2
  407398:	call   4306a0 <strcmp@plt+0x2cee8>
  40739d:	xor    eax,eax
  40739f:	pop    rbx
  4073a0:	pop    rbp
  4073a1:	pop    r12
  4073a3:	pop    r13
  4073a5:	pop    r14
  4073a7:	ret    
  4073a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4073b0:	lea    rsi,[rip+0x3ff11]        # 4472c8 <strcmp@plt+0x43b10>
  4073b7:	xor    eax,eax
  4073b9:	mov    edi,0x2
  4073be:	call   4306a0 <strcmp@plt+0x2cee8>
  4073c3:	pop    rbx
  4073c4:	xor    eax,eax
  4073c6:	pop    rbp
  4073c7:	pop    r12
  4073c9:	pop    r13
  4073cb:	pop    r14
  4073cd:	ret    
  4073ce:	xchg   ax,ax
  4073d0:	mov    rdi,rbp
  4073d3:	call   406320 <strcmp@plt+0x2b68>
  4073d8:	test   rax,rax
  4073db:	mov    r14,rax
  4073de:	je     407402 <strcmp@plt+0x3c4a>
  4073e0:	mov    eax,DWORD PTR [rax+0x18]
  4073e3:	test   eax,eax
  4073e5:	je     407402 <strcmp@plt+0x3c4a>
  4073e7:	cmp    eax,0x1
  4073ea:	jle    407418 <strcmp@plt+0x3c60>
  4073ec:	lea    rsi,[rip+0x3ff35]        # 447328 <strcmp@plt+0x43b70>
  4073f3:	mov    rdx,rbp
  4073f6:	mov    edi,0x2
  4073fb:	xor    eax,eax
  4073fd:	call   4306a0 <strcmp@plt+0x2cee8>
  407402:	mov    rdi,r14
  407405:	call   42dac0 <strcmp@plt+0x2a308>
  40740a:	pop    rbx
  40740b:	xor    eax,eax
  40740d:	pop    rbp
  40740e:	pop    r12
  407410:	pop    r13
  407412:	pop    r14
  407414:	ret    
  407415:	nop    DWORD PTR [rax]
  407418:	mov    rax,QWORD PTR [r14+0x8]
  40741c:	mov    rbp,QWORD PTR [rax+0x10]
  407420:	mov    rdi,rbp
  407423:	call   424890 <strcmp@plt+0x210d8>
  407428:	mov    rdi,QWORD PTR [r13+0x38]
  40742c:	mov    rsi,rax
  40742f:	call   43a470 <strcmp@plt+0x36cb8>
  407434:	test   rax,rax
  407437:	je     40745e <strcmp@plt+0x3ca6>
  407439:	mov    rdi,rbp
  40743c:	call   424890 <strcmp@plt+0x210d8>
  407441:	lea    rsi,[rip+0x3ff40]        # 447388 <strcmp@plt+0x43bd0>
  407448:	mov    rdx,rax
  40744b:	mov    edi,0x2
  407450:	xor    eax,eax
  407452:	call   4306a0 <strcmp@plt+0x2cee8>
  407457:	xor    eax,eax
  407459:	jmp    40739f <strcmp@plt+0x3be7>
  40745e:	mov    rdi,rbx
  407461:	mov    rdx,r12
  407464:	mov    rsi,rbp
  407467:	call   414d70 <strcmp@plt+0x115b8>
  40746c:	mov    rdi,r14
  40746f:	mov    rbx,rax
  407472:	call   42dac0 <strcmp@plt+0x2a308>
  407477:	xor    eax,eax
  407479:	test   rbx,rbx
  40747c:	je     40739f <strcmp@plt+0x3be7>
  407482:	mov    rdi,QWORD PTR [rbx]
  407485:	call   403730 <strdup@plt>
  40748a:	mov    rdi,QWORD PTR [r13+0x30]
  40748e:	mov    rdx,rbx
  407491:	mov    rsi,rax
  407494:	call   439800 <strcmp@plt+0x36048>
  407499:	mov    rdi,QWORD PTR [rbx+0x8]
  40749d:	call   424890 <strcmp@plt+0x210d8>
  4074a2:	mov    rdi,rax
  4074a5:	call   403730 <strdup@plt>
  4074aa:	mov    rdi,QWORD PTR [r13+0x38]
  4074ae:	mov    rsi,rax
  4074b1:	mov    rdx,rbx
  4074b4:	call   439800 <strcmp@plt+0x36048>
  4074b9:	mov    rax,0x468e3c
  4074c0:	mov    eax,DWORD PTR [rax]
  4074c2:	test   eax,eax
  4074c4:	jle    4074e8 <strcmp@plt+0x3d30>
  4074c6:	mov    rdi,QWORD PTR [rbx+0x8]
  4074ca:	call   424890 <strcmp@plt+0x210d8>
  4074cf:	mov    rdx,QWORD PTR [rbx]
  4074d2:	lea    rsi,[rip+0x3fedf]        # 4473b8 <strcmp@plt+0x43c00>
  4074d9:	mov    rcx,rax
  4074dc:	mov    edi,0x5
  4074e1:	xor    eax,eax
  4074e3:	call   4306a0 <strcmp@plt+0x2cee8>
  4074e8:	mov    eax,0x1
  4074ed:	jmp    40739f <strcmp@plt+0x3be7>
  4074f2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4074fd:	nop    DWORD PTR [rax]
  407500:	push   r15
  407502:	push   r14
  407504:	push   r13
  407506:	push   r12
  407508:	push   rbp
  407509:	push   rbx
  40750a:	sub    rsp,0x8
  40750e:	test   rsi,rsi
  407511:	je     407648 <strcmp@plt+0x3e90>
  407517:	mov    r12,rdi
  40751a:	mov    rdi,QWORD PTR [rdi+0x28]
  40751e:	mov    r13,rsi
  407521:	mov    ebp,edx
  407523:	mov    r14,rcx
  407526:	call   43a470 <strcmp@plt+0x36cb8>
  40752b:	test   rax,rax
  40752e:	je     407560 <strcmp@plt+0x3da8>
  407530:	lea    rsi,[rip+0x3fed1]        # 447408 <strcmp@plt+0x43c50>
  407537:	mov    rdx,r13
  40753a:	mov    edi,0x2
  40753f:	xor    eax,eax
  407541:	xor    ebx,ebx
  407543:	call   4306a0 <strcmp@plt+0x2cee8>
  407548:	add    rsp,0x8
  40754c:	mov    eax,ebx
  40754e:	pop    rbx
  40754f:	pop    rbp
  407550:	pop    r12
  407552:	pop    r13
  407554:	pop    r14
  407556:	pop    r15
  407558:	ret    
  407559:	nop    DWORD PTR [rax+0x0]
  407560:	mov    ebx,DWORD PTR [r14+0x18]
  407564:	test   ebx,ebx
  407566:	je     407668 <strcmp@plt+0x3eb0>
  40756c:	test   ebp,ebp
  40756e:	jle    407688 <strcmp@plt+0x3ed0>
  407574:	mov    esi,ebp
  407576:	mov    rdi,r13
  407579:	call   414e00 <strcmp@plt+0x11648>
  40757e:	test   rax,rax
  407581:	mov    r15,rax
  407584:	je     4076a8 <strcmp@plt+0x3ef0>
  40758a:	mov    rbx,QWORD PTR [r14+0x8]
  40758e:	cmp    r14,rbx
  407591:	jne    407605 <strcmp@plt+0x3e4d>
  407593:	nop    DWORD PTR [rax+rax*1+0x0]
  407598:	mov    rdi,r13
  40759b:	call   403730 <strdup@plt>
  4075a0:	mov    rdi,QWORD PTR [r12+0x28]
  4075a5:	mov    rsi,rax
  4075a8:	mov    rdx,r15
  4075ab:	call   439800 <strcmp@plt+0x36048>
  4075b0:	mov    rax,0x468e3c
  4075b7:	mov    eax,DWORD PTR [rax]
  4075b9:	test   eax,eax
  4075bb:	jle    4075d0 <strcmp@plt+0x3e18>
  4075bd:	lea    rsi,[rip+0x40172]        # 447736 <strcmp@plt+0x43f7e>
  4075c4:	mov    edi,0x5
  4075c9:	xor    eax,eax
  4075cb:	call   4306a0 <strcmp@plt+0x2cee8>
  4075d0:	mov    esi,0x5
  4075d5:	mov    rdi,r15
  4075d8:	mov    ebx,0x1
  4075dd:	call   414e70 <strcmp@plt+0x116b8>
  4075e2:	jmp    407548 <strcmp@plt+0x3d90>
  4075e7:	nop    WORD PTR [rax+rax*1+0x0]
  4075f0:	mov    rsi,QWORD PTR [r15+0x10]
  4075f4:	mov    rdi,rax
  4075f7:	call   42d540 <strcmp@plt+0x29d88>
  4075fc:	mov    rbx,QWORD PTR [rbx+0x8]
  407600:	cmp    r14,rbx
  407603:	je     407598 <strcmp@plt+0x3de0>
  407605:	mov    rbp,QWORD PTR [rbx+0x10]
  407609:	mov    rdi,QWORD PTR [r12+0x30]
  40760e:	mov    rsi,rbp
  407611:	call   43a470 <strcmp@plt+0x36cb8>
  407616:	test   rax,rax
  407619:	jne    4075f0 <strcmp@plt+0x3e38>
  40761b:	lea    rsi,[rip+0x3fe66]        # 447488 <strcmp@plt+0x43cd0>
  407622:	mov    rcx,r13
  407625:	mov    rdx,rbp
  407628:	mov    edi,0x2
  40762d:	xor    ebx,ebx
  40762f:	call   4306a0 <strcmp@plt+0x2cee8>
  407634:	mov    rdi,r15
  407637:	call   4126e0 <strcmp@plt+0xef28>
  40763c:	jmp    407548 <strcmp@plt+0x3d90>
  407641:	nop    DWORD PTR [rax+0x0]
  407648:	lea    rsi,[rip+0x3fd99]        # 4473e8 <strcmp@plt+0x43c30>
  40764f:	mov    edi,0x2
  407654:	xor    eax,eax
  407656:	xor    ebx,ebx
  407658:	call   4306a0 <strcmp@plt+0x2cee8>
  40765d:	jmp    407548 <strcmp@plt+0x3d90>
  407662:	nop    WORD PTR [rax+rax*1+0x0]
  407668:	lea    rsi,[rip+0x3fdb9]        # 447428 <strcmp@plt+0x43c70>
  40766f:	mov    rdx,r13
  407672:	mov    edi,0x2
  407677:	xor    eax,eax
  407679:	call   4306a0 <strcmp@plt+0x2cee8>
  40767e:	jmp    407548 <strcmp@plt+0x3d90>
  407683:	nop    DWORD PTR [rax+rax*1+0x0]
  407688:	lea    rsi,[rip+0x3fdc9]        # 447458 <strcmp@plt+0x43ca0>
  40768f:	mov    rdx,r13
  407692:	mov    edi,0x2
  407697:	xor    eax,eax
  407699:	xor    ebx,ebx
  40769b:	call   4306a0 <strcmp@plt+0x2cee8>
  4076a0:	jmp    407548 <strcmp@plt+0x3d90>
  4076a5:	nop    DWORD PTR [rax]
  4076a8:	xor    ebx,ebx
  4076aa:	jmp    407548 <strcmp@plt+0x3d90>
  4076af:	nop
  4076b0:	push   rbp
  4076b1:	push   rbx
  4076b2:	mov    rbp,rdi
  4076b5:	sub    rsp,0x8
  4076b9:	test   rsi,rsi
  4076bc:	je     4076e0 <strcmp@plt+0x3f28>
  4076be:	mov    rdi,QWORD PTR [rdi+0x28]
  4076c2:	mov    rbx,rsi
  4076c5:	call   43a470 <strcmp@plt+0x36cb8>
  4076ca:	test   rax,rax
  4076cd:	mov    QWORD PTR [rbp+0x40],rax
  4076d1:	je     407710 <strcmp@plt+0x3f58>
  4076d3:	mov    eax,0x1
  4076d8:	add    rsp,0x8
  4076dc:	pop    rbx
  4076dd:	pop    rbp
  4076de:	ret    
  4076df:	nop
  4076e0:	mov    rax,0x468e3c
  4076e7:	mov    QWORD PTR [rdi+0x40],0x0
  4076ef:	mov    eax,DWORD PTR [rax]
  4076f1:	test   eax,eax
  4076f3:	jle    4076d3 <strcmp@plt+0x3f1b>
  4076f5:	lea    rsi,[rip+0x4004d]        # 447749 <strcmp@plt+0x43f91>
  4076fc:	mov    edi,0x5
  407701:	xor    eax,eax
  407703:	call   4306a0 <strcmp@plt+0x2cee8>
  407708:	jmp    4076d3 <strcmp@plt+0x3f1b>
  40770a:	nop    WORD PTR [rax+rax*1+0x0]
  407710:	lea    rsi,[rip+0x3fdb1]        # 4474c8 <strcmp@plt+0x43d10>
  407717:	mov    rdx,rbx
  40771a:	mov    edi,0x2
  40771f:	call   4306a0 <strcmp@plt+0x2cee8>
  407724:	xor    eax,eax
  407726:	jmp    4076d8 <strcmp@plt+0x3f20>
  407728:	nop    DWORD PTR [rax+rax*1+0x0]
  407730:	test   rsi,rsi
  407733:	push   r14
  407735:	push   r13
  407737:	push   r12
  407739:	push   rbp
  40773a:	push   rbx
  40773b:	je     4077d8 <strcmp@plt+0x4020>
  407741:	test   rdx,rdx
  407744:	mov    r13,rdx
  407747:	je     4077d8 <strcmp@plt+0x4020>
  40774d:	mov    rdx,rcx
  407750:	mov    r12,rdi
  407753:	lea    rdi,[rip+0x40009]        # 447763 <strcmp@plt+0x43fab>
  40775a:	mov    rbx,rsi
  40775d:	mov    ecx,0x4
  407762:	mov    rsi,rdx
  407765:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407767:	je     4077d0 <strcmp@plt+0x4018>
  407769:	lea    rdi,[rip+0x3fff7]        # 447767 <strcmp@plt+0x43faf>
  407770:	mov    ecx,0x4
  407775:	mov    rsi,rdx
  407778:	mov    r14d,0x1
  40777e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407780:	seta   cl
  407783:	setb   al
  407786:	cmp    cl,al
  407788:	jne    407800 <strcmp@plt+0x4048>
  40778a:	mov    rdi,rbx
  40778d:	call   406320 <strcmp@plt+0x2b68>
  407792:	test   rax,rax
  407795:	mov    rbp,rax
  407798:	je     4077bc <strcmp@plt+0x4004>
  40779a:	mov    eax,DWORD PTR [rax+0x18]
  40779d:	test   eax,eax
  40779f:	je     4077bc <strcmp@plt+0x4004>
  4077a1:	cmp    eax,0x1
  4077a4:	jle    407820 <strcmp@plt+0x4068>
  4077a6:	lea    rsi,[rip+0x3fdcb]        # 447578 <strcmp@plt+0x43dc0>
  4077ad:	mov    rdx,rbx
  4077b0:	mov    edi,0x2
  4077b5:	xor    eax,eax
  4077b7:	call   4306a0 <strcmp@plt+0x2cee8>
  4077bc:	mov    rdi,rbp
  4077bf:	call   42dac0 <strcmp@plt+0x2a308>
  4077c4:	xor    eax,eax
  4077c6:	pop    rbx
  4077c7:	pop    rbp
  4077c8:	pop    r12
  4077ca:	pop    r13
  4077cc:	pop    r14
  4077ce:	ret    
  4077cf:	nop
  4077d0:	xor    r14d,r14d
  4077d3:	jmp    40778a <strcmp@plt+0x3fd2>
  4077d5:	nop    DWORD PTR [rax]
  4077d8:	lea    rsi,[rip+0x3fd21]        # 447500 <strcmp@plt+0x43d48>
  4077df:	xor    eax,eax
  4077e1:	mov    edi,0x2
  4077e6:	call   4306a0 <strcmp@plt+0x2cee8>
  4077eb:	pop    rbx
  4077ec:	xor    eax,eax
  4077ee:	pop    rbp
  4077ef:	pop    r12
  4077f1:	pop    r13
  4077f3:	pop    r14
  4077f5:	ret    
  4077f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407800:	lea    rsi,[rip+0x3fd49]        # 447550 <strcmp@plt+0x43d98>
  407807:	xor    eax,eax
  407809:	mov    edi,0x2
  40780e:	call   4306a0 <strcmp@plt+0x2cee8>
  407813:	pop    rbx
  407814:	xor    eax,eax
  407816:	pop    rbp
  407817:	pop    r12
  407819:	pop    r13
  40781b:	pop    r14
  40781d:	ret    
  40781e:	xchg   ax,ax
  407820:	mov    rax,QWORD PTR [rbp+0x8]
  407824:	mov    edx,r14d
  407827:	mov    rsi,r13
  40782a:	mov    rdi,QWORD PTR [rax+0x10]
  40782e:	call   40b720 <strcmp@plt+0x7f68>
  407833:	mov    rdi,rbp
  407836:	mov    rbx,rax
  407839:	call   42dac0 <strcmp@plt+0x2a308>
  40783e:	xor    eax,eax
  407840:	test   rbx,rbx
  407843:	je     4077c6 <strcmp@plt+0x400e>
  407849:	mov    rdi,QWORD PTR [rbx]
  40784c:	call   424890 <strcmp@plt+0x210d8>
  407851:	mov    rdi,rax
  407854:	call   403730 <strdup@plt>
  407859:	mov    rdi,QWORD PTR [r12+0x70]
  40785e:	mov    rsi,rax
  407861:	mov    rdx,rbx
  407864:	call   439800 <strcmp@plt+0x36048>
  407869:	mov    rax,0x468e3c
  407870:	mov    eax,DWORD PTR [rax]
  407872:	test   eax,eax
  407874:	jle    407894 <strcmp@plt+0x40dc>
  407876:	mov    rdi,rbx
  407879:	call   409940 <strcmp@plt+0x6188>
  40787e:	lea    rsi,[rip+0x3fd53]        # 4475d8 <strcmp@plt+0x43e20>
  407885:	mov    rdx,rax
  407888:	mov    edi,0x5
  40788d:	xor    eax,eax
  40788f:	call   4306a0 <strcmp@plt+0x2cee8>
  407894:	pop    rbx
  407895:	mov    eax,0x1
  40789a:	pop    rbp
  40789b:	pop    r12
  40789d:	pop    r13
  40789f:	pop    r14
  4078a1:	ret    
  4078a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4078ad:	nop    DWORD PTR [rax]
  4078b0:	mov    QWORD PTR [rdi+0x88],rsi
  4078b7:	ret    
  4078b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4078c0:	push   r15
  4078c2:	push   r14
  4078c4:	push   r13
  4078c6:	push   r12
  4078c8:	push   rbp
  4078c9:	push   rbx
  4078ca:	mov    rbp,rdi
  4078cd:	sub    rsp,0x138
  4078d4:	mov    rax,QWORD PTR fs:0x28
  4078dd:	mov    QWORD PTR [rsp+0x128],rax
  4078e5:	xor    eax,eax
  4078e7:	mov    rax,0x4747c8
  4078ee:	lea    r14,[rsp+0x60]
  4078f3:	mov    rdi,QWORD PTR [rax]
  4078f6:	call   4031c0 <dirname@plt>
  4078fb:	mov    r9,rax
  4078fe:	lea    rax,[rip+0x3fe6c]        # 447771 <strcmp@plt+0x43fb9>
  407905:	sub    rsp,0x8
  407909:	lea    r8,[rip+0x3fe5b]        # 44776b <strcmp@plt+0x43fb3>
  407910:	mov    ecx,0xc8
  407915:	mov    edx,0x1
  40791a:	push   rax
  40791b:	mov    esi,0xc8
  407920:	xor    eax,eax
  407922:	mov    rdi,r14
  407925:	call   4032a0 <__snprintf_chk@plt>
  40792a:	cmp    eax,0xc7
  40792f:	pop    rdx
  407930:	pop    rcx
  407931:	ja     407a70 <strcmp@plt+0x42b8>
  407937:	lea    rsi,[rip+0x46968]        # 44e2a6 <strcmp@plt+0x4aaee>
  40793e:	mov    rdi,r14
  407941:	lea    r13,[rbp+0x90]
  407948:	call   4034a0 <fopen@plt>
  40794d:	test   rax,rax
  407950:	mov    r12,rax
  407953:	je     407ae0 <strcmp@plt+0x4328>
  407959:	lea    r15,[rsp+0x10]
  40795e:	mov    rdx,rax
  407961:	mov    esi,0x50
  407966:	mov    rdi,r15
  407969:	call   403620 <fgets@plt>
  40796e:	test   rax,rax
  407971:	je     4079b8 <strcmp@plt+0x4200>
  407973:	mov    rdx,r15
  407976:	mov    ecx,DWORD PTR [rdx]
  407978:	add    rdx,0x4
  40797c:	lea    eax,[rcx-0x1010101]
  407982:	andn   eax,ecx,eax
  407987:	and    eax,0x80808080
  40798c:	je     407976 <strcmp@plt+0x41be>
  40798e:	mov    ecx,eax
  407990:	shr    ecx,0x10
  407993:	test   eax,0x8080
  407998:	cmove  eax,ecx
  40799b:	lea    rcx,[rdx+0x2]
  40799f:	cmove  rdx,rcx
  4079a3:	mov    ecx,eax
  4079a5:	add    cl,al
  4079a7:	sbb    rdx,0x3
  4079ab:	sub    rdx,r15
  4079ae:	cmp    rdx,0x20
  4079b2:	je     407a90 <strcmp@plt+0x42d8>
  4079b8:	mov    rdi,r12
  4079bb:	add    rbp,0xa0
  4079c2:	mov    rbx,r13
  4079c5:	call   4033e0 <fclose@plt>
  4079ca:	lea    rsi,[rip+0x3e683]        # 446054 <strcmp@plt+0x4289c>
  4079d1:	mov    rdi,r14
  4079d4:	call   4034a0 <fopen@plt>
  4079d9:	test   rax,rax
  4079dc:	mov    r12,rax
  4079df:	je     407b1e <strcmp@plt+0x4366>
  4079e5:	nop    DWORD PTR [rax]
  4079e8:	call   403230 <random@plt>
  4079ed:	add    rbx,0x1
  4079f1:	mov    BYTE PTR [rbx-0x1],al
  4079f4:	cmp    rbx,rbp
  4079f7:	jne    4079e8 <strcmp@plt+0x4230>
  4079f9:	mov    rdi,r13
  4079fc:	call   43b3c0 <strcmp@plt+0x37c08>
  407a01:	mov    rsi,r12
  407a04:	mov    rdi,rax
  407a07:	call   403470 <fputs@plt>
  407a0c:	mov    rdi,r12
  407a0f:	call   4033e0 <fclose@plt>
  407a14:	mov    rax,0x468e3c
  407a1b:	cmp    DWORD PTR [rax],0x1
  407a1e:	jle    407a3e <strcmp@plt+0x4286>
  407a20:	mov    rdi,r13
  407a23:	call   43b3c0 <strcmp@plt+0x37c08>
  407a28:	lea    rsi,[rip+0x3fc49]        # 447678 <strcmp@plt+0x43ec0>
  407a2f:	mov    rdx,rax
  407a32:	mov    edi,0x6
  407a37:	xor    eax,eax
  407a39:	call   4306a0 <strcmp@plt+0x2cee8>
  407a3e:	mov    eax,0x1
  407a43:	mov    rcx,QWORD PTR [rsp+0x128]
  407a4b:	xor    rcx,QWORD PTR fs:0x28
  407a54:	jne    407b76 <strcmp@plt+0x43be>
  407a5a:	add    rsp,0x138
  407a61:	pop    rbx
  407a62:	pop    rbp
  407a63:	pop    r12
  407a65:	pop    r13
  407a67:	pop    r14
  407a69:	pop    r15
  407a6b:	ret    
  407a6c:	nop    DWORD PTR [rax+0x0]
  407a70:	lea    rsi,[rip+0x3fd01]        # 447778 <strcmp@plt+0x43fc0>
  407a77:	xor    eax,eax
  407a79:	mov    edi,0x2
  407a7e:	call   4306a0 <strcmp@plt+0x2cee8>
  407a83:	xor    eax,eax
  407a85:	jmp    407a43 <strcmp@plt+0x428b>
  407a87:	nop    WORD PTR [rax+rax*1+0x0]
  407a90:	lea    r14,[rsp+0xd]
  407a95:	mov    BYTE PTR [rsp+0xf],0x0
  407a9a:	xor    ebx,ebx
  407a9c:	nop    DWORD PTR [rax+0x0]
  407aa0:	movzx  eax,BYTE PTR [r15+rbx*2]
  407aa5:	xor    esi,esi
  407aa7:	mov    edx,0x10
  407aac:	mov    rdi,r14
  407aaf:	mov    BYTE PTR [rsp+0xd],al
  407ab3:	movzx  eax,BYTE PTR [r15+rbx*2+0x1]
  407ab9:	mov    BYTE PTR [rsp+0xe],al
  407abd:	call   403580 <strtol@plt>
  407ac2:	mov    BYTE PTR [rbp+rbx*1+0x90],al
  407ac9:	add    rbx,0x1
  407acd:	cmp    rbx,0x10
  407ad1:	jne    407aa0 <strcmp@plt+0x42e8>
  407ad3:	jmp    407a0c <strcmp@plt+0x4254>
  407ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  407ae0:	lea    rsi,[rip+0x3e56d]        # 446054 <strcmp@plt+0x4289c>
  407ae7:	mov    rdi,r14
  407aea:	add    rbp,0xa0
  407af1:	mov    rbx,r13
  407af4:	call   4034a0 <fopen@plt>
  407af9:	test   rax,rax
  407afc:	mov    r12,rax
  407aff:	je     407b4a <strcmp@plt+0x4392>
  407b01:	nop    DWORD PTR [rax+0x0]
  407b08:	call   403230 <random@plt>
  407b0d:	add    rbx,0x1
  407b11:	mov    BYTE PTR [rbx-0x1],al
  407b14:	cmp    rbp,rbx
  407b17:	jne    407b08 <strcmp@plt+0x4350>
  407b19:	jmp    4079f9 <strcmp@plt+0x4241>
  407b1e:	call   403050 <__errno_location@plt>
  407b23:	mov    edi,DWORD PTR [rax]
  407b25:	call   403170 <strerror@plt>
  407b2a:	lea    rsi,[rip+0x3fb07]        # 447638 <strcmp@plt+0x43e80>
  407b31:	mov    rcx,rax
  407b34:	mov    rdx,r14
  407b37:	xor    eax,eax
  407b39:	mov    edi,0x2
  407b3e:	call   4306a0 <strcmp@plt+0x2cee8>
  407b43:	xor    eax,eax
  407b45:	jmp    407a43 <strcmp@plt+0x428b>
  407b4a:	call   403050 <__errno_location@plt>
  407b4f:	mov    edi,DWORD PTR [rax]
  407b51:	call   403170 <strerror@plt>
  407b56:	lea    rsi,[rip+0x3faab]        # 447608 <strcmp@plt+0x43e50>
  407b5d:	mov    rcx,rax
  407b60:	mov    rdx,r14
  407b63:	xor    eax,eax
  407b65:	mov    edi,0x2
  407b6a:	call   4306a0 <strcmp@plt+0x2cee8>
  407b6f:	xor    eax,eax
  407b71:	jmp    407a43 <strcmp@plt+0x428b>
  407b76:	call   403460 <__stack_chk_fail@plt>
  407b7b:	nop    DWORD PTR [rax+rax*1+0x0]
  407b80:	push   rbp
  407b81:	push   rbx
  407b82:	xor    eax,eax
  407b84:	sub    rsp,0x8
  407b88:	mov    rbx,QWORD PTR [rdi+0x48]
  407b8c:	call   424740 <strcmp@plt+0x20f88>
  407b91:	lea    rdi,[rip+0x3fbf8]        # 447790 <strcmp@plt+0x43fd8>
  407b98:	mov    rbp,rax
  407b9b:	mov    rsi,rax
  407b9e:	call   4256d0 <strcmp@plt+0x21f18>
  407ba3:	mov    rsi,rbx
  407ba6:	mov    rdi,rbp
  407ba9:	call   42d540 <strcmp@plt+0x29d88>
  407bae:	xor    eax,eax
  407bb0:	call   424740 <strcmp@plt+0x20f88>
  407bb5:	lea    rdi,[rip+0x3fbde]        # 44779a <strcmp@plt+0x43fe2>
  407bbc:	mov    rbp,rax
  407bbf:	mov    rsi,rax
  407bc2:	call   4256d0 <strcmp@plt+0x21f18>
  407bc7:	mov    rsi,rbx
  407bca:	mov    rdi,rbp
  407bcd:	call   42d540 <strcmp@plt+0x29d88>
  407bd2:	xor    eax,eax
  407bd4:	call   424740 <strcmp@plt+0x20f88>
  407bd9:	lea    rdi,[rip+0x3fbca]        # 4477aa <strcmp@plt+0x43ff2>
  407be0:	mov    rbp,rax
  407be3:	mov    rsi,rax
  407be6:	call   4256d0 <strcmp@plt+0x21f18>
  407beb:	mov    rsi,rbx
  407bee:	mov    rdi,rbp
  407bf1:	call   42d540 <strcmp@plt+0x29d88>
  407bf6:	xor    eax,eax
  407bf8:	call   424740 <strcmp@plt+0x20f88>
  407bfd:	lea    rdi,[rip+0x3fba2]        # 4477a6 <strcmp@plt+0x43fee>
  407c04:	mov    rsi,rax
  407c07:	mov    rbp,rax
  407c0a:	call   4256d0 <strcmp@plt+0x21f18>
  407c0f:	add    rsp,0x8
  407c13:	mov    rsi,rbx
  407c16:	mov    rdi,rbp
  407c19:	pop    rbx
  407c1a:	pop    rbp
  407c1b:	jmp    42d540 <strcmp@plt+0x29d88>
  407c20:	push   r13
  407c22:	push   r12
  407c24:	mov    r12,rdi
  407c27:	push   rbp
  407c28:	push   rbx
  407c29:	sub    rsp,0x8
  407c2d:	mov    rdi,QWORD PTR [rdi+0x10]
  407c31:	call   42da80 <strcmp@plt+0x2a2c8>
  407c36:	mov    rdi,QWORD PTR [r12+0x18]
  407c3b:	call   42da80 <strcmp@plt+0x2a2c8>
  407c40:	mov    rdi,QWORD PTR [r12+0x20]
  407c45:	call   42da80 <strcmp@plt+0x2a2c8>
  407c4a:	mov    r13,0x473dd0
  407c51:	mov    DWORD PTR [r12+0x8],0x0
  407c5a:	mov    rax,QWORD PTR [r13+0x0]
  407c5e:	mov    rbx,QWORD PTR [rax+0x8]
  407c62:	cmp    rax,rbx
  407c65:	jne    407c8a <strcmp@plt+0x44d2>
  407c67:	jmp    407ce2 <strcmp@plt+0x452a>
  407c69:	nop    DWORD PTR [rax+0x0]
  407c70:	mov    rdi,QWORD PTR [rbp+0x18]
  407c74:	test   rdi,rdi
  407c77:	je     407c80 <strcmp@plt+0x44c8>
  407c79:	mov    edx,DWORD PTR [rdi+0x18]
  407c7c:	test   edx,edx
  407c7e:	jne    407cc0 <strcmp@plt+0x4508>
  407c80:	mov    rbx,QWORD PTR [rbx+0x8]
  407c84:	cmp    QWORD PTR [r13+0x0],rbx
  407c88:	je     407ce2 <strcmp@plt+0x452a>
  407c8a:	mov    rbp,QWORD PTR [rbx+0x10]
  407c8e:	mov    rdi,QWORD PTR [rbp+0x10]
  407c92:	test   rdi,rdi
  407c95:	je     407c70 <strcmp@plt+0x44b8>
  407c97:	mov    ecx,DWORD PTR [rdi+0x18]
  407c9a:	test   ecx,ecx
  407c9c:	je     407c70 <strcmp@plt+0x44b8>
  407c9e:	mov    rsi,QWORD PTR [r12+0x18]
  407ca3:	call   42d6d0 <strcmp@plt+0x29f18>
  407ca8:	mov    rsi,QWORD PTR [r12+0x10]
  407cad:	mov    rdi,QWORD PTR [rbp+0x10]
  407cb1:	call   42d6d0 <strcmp@plt+0x29f18>
  407cb6:	jmp    407c70 <strcmp@plt+0x44b8>
  407cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  407cc0:	mov    rsi,QWORD PTR [r12+0x20]
  407cc5:	call   42d6d0 <strcmp@plt+0x29f18>
  407cca:	mov    rsi,QWORD PTR [r12+0x10]
  407ccf:	mov    rdi,QWORD PTR [rbp+0x18]
  407cd3:	call   42d6d0 <strcmp@plt+0x29f18>
  407cd8:	mov    rbx,QWORD PTR [rbx+0x8]
  407cdc:	cmp    QWORD PTR [r13+0x0],rbx
  407ce0:	jne    407c8a <strcmp@plt+0x44d2>
  407ce2:	mov    rax,QWORD PTR [r12+0x18]
  407ce7:	mov    esi,DWORD PTR [rax+0x18]
  407cea:	test   esi,esi
  407cec:	jle    407cf4 <strcmp@plt+0x453c>
  407cee:	or     DWORD PTR [r12+0x8],0x1
  407cf4:	mov    rax,QWORD PTR [r12+0x20]
  407cf9:	mov    eax,DWORD PTR [rax+0x18]
  407cfc:	test   eax,eax
  407cfe:	jle    407d06 <strcmp@plt+0x454e>
  407d00:	or     DWORD PTR [r12+0x8],0x2
  407d06:	add    rsp,0x8
  407d0a:	pop    rbx
  407d0b:	pop    rbp
  407d0c:	pop    r12
  407d0e:	pop    r13
  407d10:	ret    
  407d11:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407d1c:	nop    DWORD PTR [rax+0x0]
  407d20:	push   rbx
  407d21:	mov    edi,0x30
  407d26:	call   434790 <strcmp@plt+0x30fd8>
  407d2b:	test   rax,rax
  407d2e:	mov    rbx,rax
  407d31:	je     407d7b <strcmp@plt+0x45c3>
  407d33:	mov    rdi,0x408380
  407d3a:	call   42d4f0 <strcmp@plt+0x29d38>
  407d3f:	mov    QWORD PTR [rbx],rax
  407d42:	call   42d4e0 <strcmp@plt+0x29d28>
  407d47:	mov    QWORD PTR [rbx+0x10],rax
  407d4b:	call   42d4e0 <strcmp@plt+0x29d28>
  407d50:	mov    QWORD PTR [rbx+0x18],rax
  407d54:	call   42d4e0 <strcmp@plt+0x29d28>
  407d59:	mov    QWORD PTR [rbx+0x20],rax
  407d5d:	xor    eax,eax
  407d5f:	call   418ac0 <strcmp@plt+0x15308>
  407d64:	lea    rsi,[rip+0x3fa44]        # 4477af <strcmp@plt+0x43ff7>
  407d6b:	mov    QWORD PTR [rbx+0x28],rax
  407d6f:	mov    edi,0x4
  407d74:	xor    eax,eax
  407d76:	call   4306a0 <strcmp@plt+0x2cee8>
  407d7b:	mov    rax,rbx
  407d7e:	pop    rbx
  407d7f:	ret    
  407d80:	test   rdi,rdi
  407d83:	je     407dd1 <strcmp@plt+0x4619>
  407d85:	push   rbx
  407d86:	mov    rbx,rdi
  407d89:	mov    rdi,QWORD PTR [rdi]
  407d8c:	call   42dac0 <strcmp@plt+0x2a308>
  407d91:	mov    rdi,QWORD PTR [rbx+0x10]
  407d95:	call   42dac0 <strcmp@plt+0x2a308>
  407d9a:	mov    rdi,QWORD PTR [rbx+0x18]
  407d9e:	call   42dac0 <strcmp@plt+0x2a308>
  407da3:	mov    rdi,QWORD PTR [rbx+0x20]
  407da7:	call   42dac0 <strcmp@plt+0x2a308>
  407dac:	mov    rax,QWORD PTR [rbx+0x28]
  407db0:	test   rax,rax
  407db3:	je     407dbb <strcmp@plt+0x4603>
  407db5:	mov    rdi,rbx
  407db8:	call   QWORD PTR [rax+0x8]
  407dbb:	mov    rdi,rbx
  407dbe:	call   4037b0 <free@plt>
  407dc3:	mov    rax,0x468e3c
  407dca:	mov    eax,DWORD PTR [rax]
  407dcc:	test   eax,eax
  407dce:	jg     407dd8 <strcmp@plt+0x4620>
  407dd0:	pop    rbx
  407dd1:	repz ret 
  407dd3:	nop    DWORD PTR [rax+rax*1+0x0]
  407dd8:	pop    rbx
  407dd9:	lea    rsi,[rip+0x3f9e0]        # 4477c0 <strcmp@plt+0x44008>
  407de0:	mov    edi,0x5
  407de5:	xor    eax,eax
  407de7:	jmp    4306a0 <strcmp@plt+0x2cee8>
  407dec:	nop    DWORD PTR [rax+0x0]
  407df0:	push   rbp
  407df1:	push   rbx
  407df2:	mov    rbp,rdi
  407df5:	sub    rsp,0x8
  407df9:	mov    rax,0x4747a8
  407e00:	mov    rdx,QWORD PTR [rdi+0x28]
  407e04:	mov    rsi,QWORD PTR [rax]
  407e07:	xor    eax,eax
  407e09:	call   QWORD PTR [rdx]
  407e0b:	cmp    eax,0x1
  407e0e:	je     407e30 <strcmp@plt+0x4678>
  407e10:	lea    rsi,[rip+0x3f9d9]        # 4477f0 <strcmp@plt+0x44038>
  407e17:	mov    edi,0x2
  407e1c:	xor    eax,eax
  407e1e:	xor    ebx,ebx
  407e20:	call   4306a0 <strcmp@plt+0x2cee8>
  407e25:	add    rsp,0x8
  407e29:	mov    eax,ebx
  407e2b:	pop    rbx
  407e2c:	pop    rbp
  407e2d:	ret    
  407e2e:	xchg   ax,ax
  407e30:	mov    rdi,rbp
  407e33:	mov    ebx,eax
  407e35:	call   407c20 <strcmp@plt+0x4468>
  407e3a:	mov    rax,0x468e3c
  407e41:	mov    eax,DWORD PTR [rax]
  407e43:	test   eax,eax
  407e45:	jle    407e25 <strcmp@plt+0x466d>
  407e47:	lea    rsi,[rip+0x3f98c]        # 4477da <strcmp@plt+0x44022>
  407e4e:	xor    eax,eax
  407e50:	mov    edi,0x5
  407e55:	call   4306a0 <strcmp@plt+0x2cee8>
  407e5a:	add    rsp,0x8
  407e5e:	mov    eax,ebx
  407e60:	pop    rbx
  407e61:	pop    rbp
  407e62:	ret    
  407e63:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407e6e:	xchg   ax,ax
  407e70:	push   r13
  407e72:	push   r12
  407e74:	push   rbp
  407e75:	push   rbx
  407e76:	sub    rsp,0x8
  407e7a:	mov    r12,0x473dd0
  407e81:	mov    rax,QWORD PTR [r12]
  407e85:	mov    rbx,QWORD PTR [rax+0x8]
  407e89:	cmp    rax,rbx
  407e8c:	je     407f4a <strcmp@plt+0x4792>
  407e92:	mov    r13,rdi
  407e95:	jmp    407ebe <strcmp@plt+0x4706>
  407e97:	nop    WORD PTR [rax+rax*1+0x0]
  407ea0:	mov    rdi,QWORD PTR [rbp+0x18]
  407ea4:	test   rdi,rdi
  407ea7:	je     407eb0 <strcmp@plt+0x46f8>
  407ea9:	mov    eax,DWORD PTR [rdi+0x18]
  407eac:	test   eax,eax
  407eae:	jne    407f28 <strcmp@plt+0x4770>
  407eb0:	mov    rbx,QWORD PTR [rbx+0x8]
  407eb4:	cmp    QWORD PTR [r12],rbx
  407eb8:	je     407f4a <strcmp@plt+0x4792>
  407ebe:	mov    rbp,QWORD PTR [rbx+0x10]
  407ec2:	mov    rdi,QWORD PTR [rbp+0x10]
  407ec6:	test   rdi,rdi
  407ec9:	je     407ea0 <strcmp@plt+0x46e8>
  407ecb:	mov    edx,DWORD PTR [rdi+0x18]
  407ece:	test   edx,edx
  407ed0:	je     407ea0 <strcmp@plt+0x46e8>
  407ed2:	mov    rsi,QWORD PTR [r13+0x18]
  407ed6:	mov    rdx,0x424df0
  407edd:	call   42d7a0 <strcmp@plt+0x29fe8>
  407ee2:	test   al,al
  407ee4:	jne    407ea0 <strcmp@plt+0x46e8>
  407ee6:	mov    rdi,r13
  407ee9:	call   407c20 <strcmp@plt+0x4468>
  407eee:	mov    rbx,0x473da8
  407ef5:	mov    esi,0x2
  407efa:	mov    edi,0xfe
  407eff:	mov    rax,QWORD PTR [rbx]
  407f02:	call   QWORD PTR [rax+0x50]
  407f05:	mov    rax,QWORD PTR [rbx]
  407f08:	mov    esi,0xa
  407f0d:	mov    edi,0xfe
  407f12:	mov    rax,QWORD PTR [rax+0x50]
  407f16:	add    rsp,0x8
  407f1a:	pop    rbx
  407f1b:	pop    rbp
  407f1c:	pop    r12
  407f1e:	pop    r13
  407f20:	jmp    rax
  407f22:	nop    WORD PTR [rax+rax*1+0x0]
  407f28:	mov    rsi,QWORD PTR [r13+0x20]
  407f2c:	mov    rdx,0x424df0
  407f33:	call   42d7a0 <strcmp@plt+0x29fe8>
  407f38:	test   al,al
  407f3a:	je     407ee6 <strcmp@plt+0x472e>
  407f3c:	mov    rbx,QWORD PTR [rbx+0x8]
  407f40:	cmp    QWORD PTR [r12],rbx
  407f44:	jne    407ebe <strcmp@plt+0x4706>
  407f4a:	add    rsp,0x8
  407f4e:	pop    rbx
  407f4f:	pop    rbp
  407f50:	pop    r12
  407f52:	pop    r13
  407f54:	ret    
  407f55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407f60:	push   r14
  407f62:	push   r13
  407f64:	xor    r14d,r14d
  407f67:	push   r12
  407f69:	push   rbp
  407f6a:	mov    r12,rdx
  407f6d:	push   rbx
  407f6e:	mov    rax,QWORD PTR [rdi]
  407f71:	mov    rbx,rdi
  407f74:	mov    rbp,rsi
  407f77:	mov    r13,rcx
  407f7a:	mov    edx,DWORD PTR [rax+0x18]
  407f7d:	test   edx,edx
  407f7f:	je     407f89 <strcmp@plt+0x47d1>
  407f81:	mov    rax,QWORD PTR [rax+0x8]
  407f85:	mov    r14,QWORD PTR [rax+0x10]
  407f89:	mov    rax,QWORD PTR [rbx+0x28]
  407f8d:	mov    rcx,r13
  407f90:	mov    rdx,r12
  407f93:	mov    rsi,rbp
  407f96:	mov    rdi,rbx
  407f99:	call   QWORD PTR [rax+0x40]
  407f9c:	movzx  r8d,BYTE PTR [rbp+0xc]
  407fa1:	mov    rsi,QWORD PTR [rbp+0x0]
  407fa5:	mov    rdi,r14
  407fa8:	mov    rcx,r13
  407fab:	mov    rdx,r12
  407fae:	call   4083f0 <strcmp@plt+0x4c38>
  407fb3:	mov    rdi,rbx
  407fb6:	pop    rbx
  407fb7:	pop    rbp
  407fb8:	pop    r12
  407fba:	pop    r13
  407fbc:	pop    r14
  407fbe:	jmp    407c20 <strcmp@plt+0x4468>
  407fc3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407fce:	xchg   ax,ax
  407fd0:	push   r13
  407fd2:	push   r12
  407fd4:	mov    r12,rsi
  407fd7:	push   rbp
  407fd8:	push   rbx
  407fd9:	xor    r13d,r13d
  407fdc:	mov    rbx,rdi
  407fdf:	mov    ebp,r8d
  407fe2:	sub    rsp,0x8
  407fe6:	mov    rax,QWORD PTR [rdi]
  407fe9:	mov    esi,DWORD PTR [rax+0x18]
  407fec:	test   esi,esi
  407fee:	je     407ff8 <strcmp@plt+0x4840>
  407ff0:	mov    rax,QWORD PTR [rax+0x8]
  407ff4:	mov    r13,QWORD PTR [rax+0x10]
  407ff8:	mov    rax,QWORD PTR [rbx+0x28]
  407ffc:	mov    r8d,ebp
  407fff:	mov    rsi,r12
  408002:	mov    rdi,rbx
  408005:	call   QWORD PTR [rax+0x48]
  408008:	mov    rsi,QWORD PTR [r12]
  40800c:	mov    rdi,r13
  40800f:	movzx  edx,bpl
  408013:	call   4083e0 <strcmp@plt+0x4c28>
  408018:	add    rsp,0x8
  40801c:	mov    rdi,rbx
  40801f:	pop    rbx
  408020:	pop    rbp
  408021:	pop    r12
  408023:	pop    r13
  408025:	jmp    407c20 <strcmp@plt+0x4468>
  40802a:	nop    WORD PTR [rax+rax*1+0x0]
  408030:	push   r15
  408032:	push   r14
  408034:	xor    r10d,r10d
  408037:	push   r13
  408039:	push   r12
  40803b:	mov    r12,rdx
  40803e:	push   rbp
  40803f:	push   rbx
  408040:	mov    ebp,esi
  408042:	mov    rbx,rdi
  408045:	mov    r13,rcx
  408048:	mov    r14,r8
  40804b:	sub    rsp,0x18
  40804f:	mov    rax,QWORD PTR [rdi]
  408052:	mov    r15,r9
  408055:	mov    edx,DWORD PTR [rax+0x18]
  408058:	test   edx,edx
  40805a:	je     408064 <strcmp@plt+0x48ac>
  40805c:	mov    rax,QWORD PTR [rax+0x8]
  408060:	mov    r10,QWORD PTR [rax+0x10]
  408064:	mov    rax,QWORD PTR [rbx+0x28]
  408068:	mov    QWORD PTR [rsp+0x8],r10
  40806d:	mov    r9,r15
  408070:	mov    r8,r14
  408073:	mov    rcx,r13
  408076:	mov    rdx,r12
  408079:	mov    esi,ebp
  40807b:	mov    rdi,rbx
  40807e:	call   QWORD PTR [rax+0x38]
  408081:	mov    r10,QWORD PTR [rsp+0x8]
  408086:	mov    rdx,QWORD PTR [r12]
  40808a:	mov    r9,r15
  40808d:	mov    r8,r14
  408090:	mov    rcx,r13
  408093:	mov    esi,ebp
  408095:	mov    rdi,r10
  408098:	call   408400 <strcmp@plt+0x4c48>
  40809d:	add    rsp,0x18
  4080a1:	mov    rdi,rbx
  4080a4:	pop    rbx
  4080a5:	pop    rbp
  4080a6:	pop    r12
  4080a8:	pop    r13
  4080aa:	pop    r14
  4080ac:	pop    r15
  4080ae:	jmp    407c20 <strcmp@plt+0x4468>
  4080b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4080be:	xchg   ax,ax
  4080c0:	mov    rax,QWORD PTR [rdi+0x28]
  4080c4:	jmp    QWORD PTR [rax+0x30]
  4080c7:	nop    WORD PTR [rax+rax*1+0x0]
  4080d0:	push   rbp
  4080d1:	push   rbx
  4080d2:	mov    rbx,rdi
  4080d5:	sub    rsp,0x8
  4080d9:	call   42d4e0 <strcmp@plt+0x29d28>
  4080de:	test   rax,rax
  4080e1:	mov    rbp,rax
  4080e4:	je     408124 <strcmp@plt+0x496c>
  4080e6:	mov    rax,QWORD PTR [rbx+0x28]
  4080ea:	mov    esi,0x2
  4080ef:	mov    rdi,rbx
  4080f2:	call   QWORD PTR [rax+0x30]
  4080f5:	test   rax,rax
  4080f8:	je     408105 <strcmp@plt+0x494d>
  4080fa:	mov    rsi,rbp
  4080fd:	mov    rdi,rax
  408100:	call   42d540 <strcmp@plt+0x29d88>
  408105:	mov    rax,QWORD PTR [rbx+0x28]
  408109:	mov    esi,0xa
  40810e:	mov    rdi,rbx
  408111:	call   QWORD PTR [rax+0x30]
  408114:	test   rax,rax
  408117:	je     408124 <strcmp@plt+0x496c>
  408119:	mov    rsi,rbp
  40811c:	mov    rdi,rax
  40811f:	call   42d540 <strcmp@plt+0x29d88>
  408124:	add    rsp,0x8
  408128:	mov    rax,rbp
  40812b:	pop    rbx
  40812c:	pop    rbp
  40812d:	ret    
  40812e:	xchg   ax,ax
  408130:	mov    rax,QWORD PTR [rdi+0x10]
  408134:	ret    
  408135:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408140:	cmp    esi,0x2
  408143:	je     408158 <strcmp@plt+0x49a0>
  408145:	cmp    esi,0xa
  408148:	jne    408150 <strcmp@plt+0x4998>
  40814a:	mov    rax,QWORD PTR [rdi+0x20]
  40814e:	ret    
  40814f:	nop
  408150:	xor    eax,eax
  408152:	ret    
  408153:	nop    DWORD PTR [rax+rax*1+0x0]
  408158:	mov    rax,QWORD PTR [rdi+0x18]
  40815c:	ret    
  40815d:	nop    DWORD PTR [rax]
  408160:	mov    eax,DWORD PTR [rdi+0x8]
  408163:	ret    
  408164:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40816f:	nop
  408170:	mov    rax,0x474830
  408177:	mov    rsi,rdi
  40817a:	xor    edi,edi
  40817c:	mov    rax,QWORD PTR [rax]
  40817f:	mov    rax,QWORD PTR [rax]
  408182:	mov    edx,DWORD PTR [rax+0x18]
  408185:	test   edx,edx
  408187:	je     408191 <strcmp@plt+0x49d9>
  408189:	mov    rax,QWORD PTR [rax+0x8]
  40818d:	mov    rdi,QWORD PTR [rax+0x10]
  408191:	jmp    408410 <strcmp@plt+0x4c58>
  408196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4081a0:	push   rbp
  4081a1:	push   rbx
  4081a2:	mov    rbp,rdi
  4081a5:	mov    rbx,rsi
  4081a8:	sub    rsp,0x8
  4081ac:	mov    edi,DWORD PTR [rsi]
  4081ae:	call   4084a0 <strcmp@plt+0x4ce8>
  4081b3:	lea    rsi,[rip+0x3f65e]        # 447818 <strcmp@plt+0x44060>
  4081ba:	mov    rdx,rax
  4081bd:	mov    edi,0x4
  4081c2:	xor    eax,eax
  4081c4:	call   4306a0 <strcmp@plt+0x2cee8>
  4081c9:	mov    rsi,QWORD PTR [rbp+0x0]
  4081cd:	mov    rdi,rbx
  4081d0:	call   42d540 <strcmp@plt+0x29d88>
  4081d5:	add    rsp,0x8
  4081d9:	mov    eax,0x1
  4081de:	pop    rbx
  4081df:	pop    rbp
  4081e0:	ret    
  4081e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4081ec:	nop    DWORD PTR [rax+0x0]
  4081f0:	mov    edi,DWORD PTR [rdi]
  4081f2:	lea    eax,[rdi-0x2]
  4081f5:	cmp    eax,0x1
  4081f8:	jbe    408240 <strcmp@plt+0x4a88>
  4081fa:	test   edi,edi
  4081fc:	je     408240 <strcmp@plt+0x4a88>
  4081fe:	mov    rax,0x468e3c
  408205:	mov    eax,DWORD PTR [rax]
  408207:	test   eax,eax
  408209:	jg     408218 <strcmp@plt+0x4a60>
  40820b:	mov    eax,0x1
  408210:	ret    
  408211:	nop    DWORD PTR [rax+0x0]
  408218:	lea    rsi,[rip+0x3f631]        # 447850 <strcmp@plt+0x44098>
  40821f:	sub    rsp,0x8
  408223:	xor    eax,eax
  408225:	mov    edi,0x5
  40822a:	call   4306a0 <strcmp@plt+0x2cee8>
  40822f:	mov    eax,0x1
  408234:	add    rsp,0x8
  408238:	ret    
  408239:	nop    DWORD PTR [rax+0x0]
  408240:	mov    rax,0x46c558
  408247:	mov    rax,QWORD PTR [rax]
  40824a:	jmp    QWORD PTR [rax+0x20]
  40824d:	nop    DWORD PTR [rax]
  408250:	mov    rax,0x46c558
  408257:	mov    edi,DWORD PTR [rdi]
  408259:	mov    rax,QWORD PTR [rax]
  40825c:	test   rax,rax
  40825f:	je     4082c0 <strcmp@plt+0x4b08>
  408261:	lea    edx,[rdi-0x2]
  408264:	sub    rsp,0x8
  408268:	cmp    edx,0x1
  40826b:	jbe    4082b0 <strcmp@plt+0x4af8>
  40826d:	test   edi,edi
  40826f:	je     4082b0 <strcmp@plt+0x4af8>
  408271:	mov    rax,0x468e3c
  408278:	mov    eax,DWORD PTR [rax]
  40827a:	test   eax,eax
  40827c:	jg     408290 <strcmp@plt+0x4ad8>
  40827e:	mov    eax,0x1
  408283:	add    rsp,0x8
  408287:	ret    
  408288:	nop    DWORD PTR [rax+rax*1+0x0]
  408290:	lea    rsi,[rip+0x3f619]        # 4478b0 <strcmp@plt+0x440f8>
  408297:	xor    eax,eax
  408299:	mov    edi,0x5
  40829e:	call   4306a0 <strcmp@plt+0x2cee8>
  4082a3:	mov    eax,0x1
  4082a8:	add    rsp,0x8
  4082ac:	ret    
  4082ad:	nop    DWORD PTR [rax]
  4082b0:	call   QWORD PTR [rax+0x28]
  4082b3:	mov    eax,0x1
  4082b8:	add    rsp,0x8
  4082bc:	ret    
  4082bd:	nop    DWORD PTR [rax]
  4082c0:	mov    eax,0x1
  4082c5:	ret    
  4082c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4082d0:	mov    rax,0x46c558
  4082d7:	movzx  esi,sil
  4082db:	mov    rax,QWORD PTR [rax]
  4082de:	jmp    QWORD PTR [rax+0x60]
  4082e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4082ec:	nop    DWORD PTR [rax+0x0]
  4082f0:	mov    rax,0x46c558
  4082f7:	mov    rax,QWORD PTR [rax]
  4082fa:	mov    rdx,QWORD PTR [rax+0x68]
  4082fe:	xor    eax,eax
  408300:	jmp    rdx
  408302:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40830d:	nop    DWORD PTR [rax]
  408310:	sub    rsp,0x8
  408314:	call   428d10 <strcmp@plt+0x25558>
  408319:	add    rsp,0x8
  40831d:	mov    rdi,rax
  408320:	jmp    424750 <strcmp@plt+0x20f98>
  408325:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408330:	jmp    408310 <strcmp@plt+0x4b58>
  408332:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40833c:	nop    DWORD PTR [rax+0x0]
  408340:	mov    eax,DWORD PTR [rdi]
  408342:	ret    
  408343:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40834e:	xchg   ax,ax
  408350:	mov    rax,QWORD PTR [rdi+0x10]
  408354:	ret    
  408355:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408360:	mov    rax,QWORD PTR [rdi+0x8]
  408364:	jmp    QWORD PTR [rax+0x30]
  408367:	nop    WORD PTR [rax+rax*1+0x0]
  408370:	mov    rax,QWORD PTR [rdi+0x8]
  408374:	jmp    QWORD PTR [rax+0x28]
  408377:	nop    WORD PTR [rax+rax*1+0x0]
  408380:	test   rdi,rdi
  408383:	je     4083a0 <strcmp@plt+0x4be8>
  408385:	push   rbx
  408386:	mov    rax,QWORD PTR [rdi+0x8]
  40838a:	mov    rbx,rdi
  40838d:	call   QWORD PTR [rax+0x18]
  408390:	mov    rax,QWORD PTR [rbx+0x8]
  408394:	mov    rdi,rbx
  408397:	pop    rbx
  408398:	mov    rax,QWORD PTR [rax+0x10]
  40839c:	jmp    rax
  40839e:	xchg   ax,ax
  4083a0:	repz ret 
  4083a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4083ad:	nop    DWORD PTR [rax]
  4083b0:	mov    rdi,QWORD PTR [rdi+0x10]
  4083b4:	mov    rax,QWORD PTR [rdi+0x28]
  4083b8:	jmp    QWORD PTR [rax+0x28]
  4083bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4083c0:	mov    rdi,rsi
  4083c3:	movzx  esi,dl
  4083c6:	jmp    4082d0 <strcmp@plt+0x4b18>
  4083cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4083d0:	xor    eax,eax
  4083d2:	jmp    4082f0 <strcmp@plt+0x4b38>
  4083d7:	nop    WORD PTR [rax+rax*1+0x0]
  4083e0:	mov    rax,QWORD PTR [rdi+0x8]
  4083e4:	movzx  edx,dl
  4083e7:	jmp    QWORD PTR [rax+0x38]
  4083ea:	nop    WORD PTR [rax+rax*1+0x0]
  4083f0:	mov    rax,QWORD PTR [rdi+0x8]
  4083f4:	movzx  r8d,r8b
  4083f8:	mov    rax,QWORD PTR [rax+0x40]
  4083fc:	jmp    rax
  4083fe:	xchg   ax,ax
  408400:	mov    rax,QWORD PTR [rdi+0x8]
  408404:	jmp    QWORD PTR [rax+0x48]
  408407:	nop    WORD PTR [rax+rax*1+0x0]
  408410:	mov    rax,QWORD PTR [rdi+0x8]
  408414:	jmp    QWORD PTR [rax+0x50]
  408417:	nop    WORD PTR [rax+rax*1+0x0]
  408420:	mov    rax,rdi
  408423:	sub    rsp,0x8
  408427:	mov    rdi,rsi
  40842a:	mov    QWORD PTR [rax+0x10],rsi
  40842e:	mov    rsi,rax
  408431:	call   4081a0 <strcmp@plt+0x49e8>
  408436:	mov    eax,0x1
  40843b:	add    rsp,0x8
  40843f:	ret    
  408440:	push   r13
  408442:	lea    rax,[rip+0x5f8b7]        # 467d00 <strcmp@plt+0x64548>
  408449:	push   r12
  40844b:	push   rbp
  40844c:	push   rbx
  40844d:	mov    edx,edi
  40844f:	mov    r13,rdx
  408452:	mov    r12,rsi
  408455:	sub    rsp,0x8
  408459:	mov    rbp,QWORD PTR [rax+rdx*8]
  40845d:	mov    QWORD PTR [rsi],0x0
  408464:	call   QWORD PTR [rbp+0x0]
  408467:	mov    rbx,rax
  40846a:	mov    DWORD PTR [rax],r13d
  40846d:	mov    QWORD PTR [rax+0x8],rbp
  408471:	mov    rdi,rax
  408474:	call   QWORD PTR [rbp+0x8]
  408477:	mov    rax,0x474830
  40847e:	mov    rdi,rbx
  408481:	mov    rsi,QWORD PTR [rax]
  408484:	call   408420 <strcmp@plt+0x4c68>
  408489:	mov    QWORD PTR [r12],rbx
  40848d:	add    rsp,0x8
  408491:	mov    eax,0x1
  408496:	pop    rbx
  408497:	pop    rbp
  408498:	pop    r12
  40849a:	pop    r13
  40849c:	ret    
  40849d:	nop    DWORD PTR [rax]
  4084a0:	cmp    edi,0x5
  4084a3:	ja     408590 <strcmp@plt+0x4dd8>
  4084a9:	lea    rdx,[rip+0x3f458]        # 447908 <strcmp@plt+0x44150>
  4084b0:	mov    edi,edi
  4084b2:	movsxd rax,DWORD PTR [rdx+rdi*4]
  4084b6:	add    rax,rdx
  4084b9:	jmp    rax
  4084bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4084c0:	movabs rax,0x65646f6e20544444
  4084ca:	mov    BYTE PTR [rip+0x63e6f],0x0        # 46c340 <strcmp@plt+0x68b88>
  4084d1:	mov    QWORD PTR [rip+0x63e60],rax        # 46c338 <strcmp@plt+0x68b80>
  4084d8:	lea    rax,[rip+0x63e59]        # 46c338 <strcmp@plt+0x68b80>
  4084df:	ret    
  4084e0:	movabs rax,0x6e20524d20544444
  4084ea:	mov    DWORD PTR [rip+0x63e4c],0x65646f        # 46c340 <strcmp@plt+0x68b88>
  4084f4:	mov    QWORD PTR [rip+0x63e3d],rax        # 46c338 <strcmp@plt+0x68b80>
  4084fb:	lea    rax,[rip+0x63e36]        # 46c338 <strcmp@plt+0x68b80>
  408502:	ret    
  408503:	nop    DWORD PTR [rax+rax*1+0x0]
  408508:	mov    DWORD PTR [rip+0x63e26],0x525478        # 46c338 <strcmp@plt+0x68b80>
  408512:	lea    rax,[rip+0x63e1f]        # 46c338 <strcmp@plt+0x68b80>
  408519:	ret    
  40851a:	nop    WORD PTR [rax+rax*1+0x0]
  408520:	movabs rax,0x767265532070614d
  40852a:	mov    BYTE PTR [rip+0x63e11],0x0        # 46c342 <strcmp@plt+0x68b8a>
  408531:	mov    QWORD PTR [rip+0x63e00],rax        # 46c338 <strcmp@plt+0x68b80>
  408538:	mov    eax,0x7265
  40853d:	mov    WORD PTR [rip+0x63dfc],ax        # 46c340 <strcmp@plt+0x68b88>
  408544:	lea    rax,[rip+0x63ded]        # 46c338 <strcmp@plt+0x68b80>
  40854b:	ret    
  40854c:	nop    DWORD PTR [rax+0x0]
  408550:	mov    DWORD PTR [rip+0x63dde],0x525452        # 46c338 <strcmp@plt+0x68b80>
  40855a:	lea    rax,[rip+0x63dd7]        # 46c338 <strcmp@plt+0x68b80>
  408561:	ret    
  408562:	nop    WORD PTR [rax+rax*1+0x0]
  408568:	movabs rax,0x4e20656c69626f4d
  408572:	mov    DWORD PTR [rip+0x63dc4],0x65646f        # 46c340 <strcmp@plt+0x68b88>
  40857c:	mov    QWORD PTR [rip+0x63db5],rax        # 46c338 <strcmp@plt+0x68b80>
  408583:	lea    rax,[rip+0x63dae]        # 46c338 <strcmp@plt+0x68b80>
  40858a:	ret    
  40858b:	nop    DWORD PTR [rax+rax*1+0x0]
  408590:	movabs rax,0x6e776f6e6b6e55
  40859a:	mov    QWORD PTR [rip+0x63d97],rax        # 46c338 <strcmp@plt+0x68b80>
  4085a1:	lea    rax,[rip+0x63d90]        # 46c338 <strcmp@plt+0x68b80>
  4085a8:	ret    
  4085a9:	nop    DWORD PTR [rax+0x0]
  4085b0:	push   r15
  4085b2:	push   r14
  4085b4:	mov    r14,rdi
  4085b7:	push   r13
  4085b9:	push   r12
  4085bb:	mov    r13,r8
  4085be:	push   rbp
  4085bf:	push   rbx
  4085c0:	mov    rbp,rsi
  4085c3:	mov    r12,rdx
  4085c6:	sub    rsp,0x8
  4085ca:	test   rcx,rcx
  4085cd:	je     408668 <strcmp@plt+0x4eb0>
  4085d3:	mov    r15,rcx
  4085d6:	mov    rdi,r15
  4085d9:	call   4251c0 <strcmp@plt+0x21a08>
  4085de:	mov    rdi,rbp
  4085e1:	movzx  esi,ax
  4085e4:	call   4244d0 <strcmp@plt+0x20d18>
  4085e9:	test   rax,rax
  4085ec:	mov    rbx,rax
  4085ef:	je     408620 <strcmp@plt+0x4e68>
  4085f1:	movzx  edx,WORD PTR [r12+0x42]
  4085f7:	mov    r8,rbx
  4085fa:	mov    rcx,r15
  4085fd:	mov    esi,0x10f6
  408602:	mov    rdi,r13
  408605:	call   438840 <strcmp@plt+0x35088>
  40860a:	mov    eax,0x1
  40860f:	add    rsp,0x8
  408613:	pop    rbx
  408614:	pop    rbp
  408615:	pop    r12
  408617:	pop    r13
  408619:	pop    r14
  40861b:	pop    r15
  40861d:	ret    
  40861e:	xchg   ax,ax
  408620:	mov    ecx,DWORD PTR [rbp+0x18]
  408623:	test   ecx,ecx
  408625:	je     408690 <strcmp@plt+0x4ed8>
  408627:	mov    rax,QWORD PTR [rbp+0x8]
  40862b:	mov    rbp,QWORD PTR [rax+0x10]
  40862f:	test   rbp,rbp
  408632:	je     408690 <strcmp@plt+0x4ed8>
  408634:	mov    rdi,rbp
  408637:	mov    rbx,rbp
  40863a:	call   4251c0 <strcmp@plt+0x21a08>
  40863f:	mov    rdi,QWORD PTR [r14+0x10]
  408643:	movzx  esi,ax
  408646:	call   4080c0 <strcmp@plt+0x4908>
  40864b:	test   rax,rax
  40864e:	mov    r15,rax
  408651:	jne    4085f1 <strcmp@plt+0x4e39>
  408653:	mov    rax,0x468e3c
  40865a:	mov    eax,DWORD PTR [rax]
  40865c:	test   eax,eax
  40865e:	jg     4086b7 <strcmp@plt+0x4eff>
  408660:	xor    eax,eax
  408662:	jmp    40860f <strcmp@plt+0x4e57>
  408664:	nop    DWORD PTR [rax+0x0]
  408668:	mov    rbx,rdx
  40866b:	mov    r15,rdx
  40866e:	add    rbx,0x20
  408672:	je     4085d6 <strcmp@plt+0x4e1e>
  408678:	mov    rsi,rbx
  40867b:	mov    rdi,rbp
  40867e:	call   424470 <strcmp@plt+0x20cb8>
  408683:	test   eax,eax
  408685:	jne    4085f1 <strcmp@plt+0x4e39>
  40868b:	jmp    4085d6 <strcmp@plt+0x4e1e>
  408690:	mov    rax,0x468e3c
  408697:	mov    edx,DWORD PTR [rax]
  408699:	test   edx,edx
  40869b:	jle    408660 <strcmp@plt+0x4ea8>
  40869d:	lea    rsi,[rip+0x3f2d4]        # 447978 <strcmp@plt+0x441c0>
  4086a4:	xor    eax,eax
  4086a6:	mov    edi,0x5
  4086ab:	call   4306a0 <strcmp@plt+0x2cee8>
  4086b0:	xor    eax,eax
  4086b2:	jmp    40860f <strcmp@plt+0x4e57>
  4086b7:	mov    rdi,rbp
  4086ba:	call   4251c0 <strcmp@plt+0x21a08>
  4086bf:	lea    rdx,[rip+0x3f25a]        # 447920 <strcmp@plt+0x44168>
  4086c6:	cmp    ax,0x2
  4086ca:	lea    rax,[rip+0x3f254]        # 447925 <strcmp@plt+0x4416d>
  4086d1:	lea    rsi,[rip+0x3f258]        # 447930 <strcmp@plt+0x44178>
  4086d8:	mov    edi,0x5
  4086dd:	cmovne rdx,rax
  4086e1:	xor    eax,eax
  4086e3:	call   4306a0 <strcmp@plt+0x2cee8>
  4086e8:	xor    eax,eax
  4086ea:	jmp    40860f <strcmp@plt+0x4e57>
  4086ef:	nop
  4086f0:	push   rbx
  4086f1:	mov    edi,0x8
  4086f6:	call   434790 <strcmp@plt+0x30fd8>
  4086fb:	test   rax,rax
  4086fe:	je     408720 <strcmp@plt+0x4f68>
  408700:	mov    rbx,rax
  408703:	xor    eax,eax
  408705:	call   431690 <strcmp@plt+0x2ded8>
  40870a:	test   rax,rax
  40870d:	mov    QWORD PTR [rbx],rax
  408710:	je     408720 <strcmp@plt+0x4f68>
  408712:	mov    rax,rbx
  408715:	pop    rbx
  408716:	ret    
  408717:	nop    WORD PTR [rax+rax*1+0x0]
  408720:	lea    rsi,[rip+0x3f281]        # 4479a8 <strcmp@plt+0x441f0>
  408727:	mov    edi,0x1
  40872c:	xor    eax,eax
  40872e:	xor    ebx,ebx
  408730:	call   4306a0 <strcmp@plt+0x2cee8>
  408735:	jmp    408712 <strcmp@plt+0x4f5a>
  408737:	nop    WORD PTR [rax+rax*1+0x0]
  408740:	push   rbx
  408741:	mov    rsi,0x434380
  408748:	mov    rbx,rdi
  40874b:	mov    rdi,QWORD PTR [rdi]
  40874e:	call   431200 <strcmp@plt+0x2da48>
  408753:	mov    rdi,rbx
  408756:	pop    rbx
  408757:	jmp    4037b0 <free@plt>
  40875c:	nop    DWORD PTR [rax+0x0]
  408760:	push   rbp
  408761:	push   rbx
  408762:	mov    rbp,rdi
  408765:	mov    rdi,rsi
  408768:	mov    rbx,rsi
  40876b:	sub    rsp,0x8
  40876f:	call   4342b0 <strcmp@plt+0x30af8>
  408774:	mov    rdi,rax
  408777:	call   425110 <strcmp@plt+0x21958>
  40877c:	mov    rdi,QWORD PTR [rbp+0x0]
  408780:	mov    rdx,rbx
  408783:	mov    rsi,rax
  408786:	call   431a10 <strcmp@plt+0x2e258>
  40878b:	cmp    eax,0x1
  40878e:	je     40879e <strcmp@plt+0x4fe6>
  408790:	mov    rax,0x468e3c
  408797:	cmp    DWORD PTR [rax],0x2
  40879a:	jg     4087a8 <strcmp@plt+0x4ff0>
  40879c:	xor    eax,eax
  40879e:	add    rsp,0x8
  4087a2:	pop    rbx
  4087a3:	pop    rbp
  4087a4:	ret    
  4087a5:	nop    DWORD PTR [rax]
  4087a8:	mov    rdi,rbx
  4087ab:	call   4342b0 <strcmp@plt+0x30af8>
  4087b0:	mov    rdi,rax
  4087b3:	call   424890 <strcmp@plt+0x210d8>
  4087b8:	lea    rsi,[rip+0x3f211]        # 4479d0 <strcmp@plt+0x44218>
  4087bf:	mov    rdx,rax
  4087c2:	mov    edi,0x7
  4087c7:	xor    eax,eax
  4087c9:	call   4306a0 <strcmp@plt+0x2cee8>
  4087ce:	jmp    40879c <strcmp@plt+0x4fe4>
  4087d0:	push   r13
  4087d2:	push   r12
  4087d4:	xor    r13d,r13d
  4087d7:	push   rbp
  4087d8:	push   rbx
  4087d9:	mov    rbp,rdi
  4087dc:	mov    rbx,rsi
  4087df:	mov    r12d,edx
  4087e2:	sub    rsp,0x8
  4087e6:	cmp    DWORD PTR [rsi+0x18],0x3
  4087ea:	je     408850 <strcmp@plt+0x5098>
  4087ec:	mov    rdi,QWORD PTR [rbp+0x0]
  4087f0:	call   432570 <strcmp@plt+0x2edb8>
  4087f5:	test   rax,rax
  4087f8:	mov    rbp,rax
  4087fb:	je     408900 <strcmp@plt+0x5148>
  408801:	test   r12b,r12b
  408804:	jne    408818 <strcmp@plt+0x5060>
  408806:	add    rsp,0x8
  40880a:	mov    rax,rbp
  40880d:	pop    rbx
  40880e:	pop    rbp
  40880f:	pop    r12
  408811:	pop    r13
  408813:	ret    
  408814:	nop    DWORD PTR [rax+0x0]
  408818:	mov    rdi,rax
  40881b:	call   4342b0 <strcmp@plt+0x30af8>
  408820:	test   r13d,r13d
  408823:	jne    4088b0 <strcmp@plt+0x50f8>
  408829:	cmp    DWORD PTR [rax+0x18],0x3
  40882d:	jne    408806 <strcmp@plt+0x504e>
  40882f:	mov    rax,0x468e3c
  408836:	cmp    DWORD PTR [rax],0x2
  408839:	jg     408938 <strcmp@plt+0x5180>
  40883f:	nop
  408840:	xor    ebp,ebp
  408842:	add    rsp,0x8
  408846:	mov    rax,rbp
  408849:	pop    rbx
  40884a:	pop    rbp
  40884b:	pop    r12
  40884d:	pop    r13
  40884f:	ret    
  408850:	mov    rdi,rsi
  408853:	call   428430 <strcmp@plt+0x24c78>
  408858:	test   eax,eax
  40885a:	jne    408890 <strcmp@plt+0x50d8>
  40885c:	mov    rax,0x468e3c
  408863:	cmp    DWORD PTR [rax],0x1
  408866:	jle    408840 <strcmp@plt+0x5088>
  408868:	mov    rdi,rbx
  40886b:	xor    ebp,ebp
  40886d:	call   424890 <strcmp@plt+0x210d8>
  408872:	lea    rsi,[rip+0x3f197]        # 447a10 <strcmp@plt+0x44258>
  408879:	mov    rdx,rax
  40887c:	mov    edi,0x6
  408881:	xor    eax,eax
  408883:	call   4306a0 <strcmp@plt+0x2cee8>
  408888:	jmp    408806 <strcmp@plt+0x504e>
  40888d:	nop    DWORD PTR [rax]
  408890:	mov    rdi,rbx
  408893:	call   428eb0 <strcmp@plt+0x256f8>
  408898:	mov    rdi,rbx
  40889b:	mov    r13d,eax
  40889e:	call   425110 <strcmp@plt+0x21958>
  4088a3:	mov    rsi,rax
  4088a6:	jmp    4087ec <strcmp@plt+0x5034>
  4088ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4088b0:	mov    rdi,rax
  4088b3:	call   428eb0 <strcmp@plt+0x256f8>
  4088b8:	cmp    r13d,eax
  4088bb:	je     408806 <strcmp@plt+0x504e>
  4088c1:	mov    rax,0x468e3c
  4088c8:	cmp    DWORD PTR [rax],0x2
  4088cb:	jle    408840 <strcmp@plt+0x5088>
  4088d1:	mov    rdi,rbx
  4088d4:	xor    ebp,ebp
  4088d6:	call   424890 <strcmp@plt+0x210d8>
  4088db:	lea    rsi,[rip+0x3f1a6]        # 447a88 <strcmp@plt+0x442d0>
  4088e2:	mov    rdx,rax
  4088e5:	mov    edi,0x7
  4088ea:	xor    eax,eax
  4088ec:	call   4306a0 <strcmp@plt+0x2cee8>
  4088f1:	jmp    408806 <strcmp@plt+0x504e>
  4088f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408900:	mov    rax,0x468e3c
  408907:	cmp    DWORD PTR [rax],0x2
  40890a:	jle    408840 <strcmp@plt+0x5088>
  408910:	mov    rdi,rbx
  408913:	call   424890 <strcmp@plt+0x210d8>
  408918:	lea    rsi,[rip+0x3f129]        # 447a48 <strcmp@plt+0x44290>
  40891f:	mov    rdx,rax
  408922:	mov    edi,0x7
  408927:	xor    eax,eax
  408929:	call   4306a0 <strcmp@plt+0x2cee8>
  40892e:	jmp    408806 <strcmp@plt+0x504e>
  408933:	nop    DWORD PTR [rax+rax*1+0x0]
  408938:	mov    rdi,rbx
  40893b:	xor    ebp,ebp
  40893d:	call   424890 <strcmp@plt+0x210d8>
  408942:	lea    rsi,[rip+0x3f18f]        # 447ad8 <strcmp@plt+0x44320>
  408949:	mov    rdx,rax
  40894c:	mov    edi,0x7
  408951:	xor    eax,eax
  408953:	call   4306a0 <strcmp@plt+0x2cee8>
  408958:	jmp    408842 <strcmp@plt+0x508a>
  40895d:	nop    DWORD PTR [rax]
  408960:	push   rbp
  408961:	push   rbx
  408962:	mov    rbp,rdi
  408965:	mov    rbx,rsi
  408968:	sub    rsp,0x8
  40896c:	cmp    DWORD PTR [rsi+0x18],0x3
  408970:	je     4089c0 <strcmp@plt+0x5208>
  408972:	mov    rdi,QWORD PTR [rbp+0x0]
  408976:	call   4325a0 <strcmp@plt+0x2ede8>
  40897b:	test   rax,rax
  40897e:	mov    rbp,rax
  408981:	je     408a00 <strcmp@plt+0x5248>
  408983:	mov    rdi,rax
  408986:	call   4342b0 <strcmp@plt+0x30af8>
  40898b:	mov    rsi,rbx
  40898e:	mov    rdi,rax
  408991:	call   424df0 <strcmp@plt+0x21638>
  408996:	test   eax,eax
  408998:	je     4089ac <strcmp@plt+0x51f4>
  40899a:	mov    rax,0x468e3c
  4089a1:	cmp    DWORD PTR [rax],0x2
  4089a4:	jg     408a30 <strcmp@plt+0x5278>
  4089aa:	xor    ebp,ebp
  4089ac:	add    rsp,0x8
  4089b0:	mov    rax,rbp
  4089b3:	pop    rbx
  4089b4:	pop    rbp
  4089b5:	ret    
  4089b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4089c0:	mov    rdi,rsi
  4089c3:	call   428430 <strcmp@plt+0x24c78>
  4089c8:	test   eax,eax
  4089ca:	jne    408a58 <strcmp@plt+0x52a0>
  4089d0:	mov    rax,0x468e3c
  4089d7:	cmp    DWORD PTR [rax],0x1
  4089da:	jle    4089aa <strcmp@plt+0x51f2>
  4089dc:	mov    rdi,rbx
  4089df:	xor    ebp,ebp
  4089e1:	call   424890 <strcmp@plt+0x210d8>
  4089e6:	lea    rsi,[rip+0x3f023]        # 447a10 <strcmp@plt+0x44258>
  4089ed:	mov    rdx,rax
  4089f0:	mov    edi,0x6
  4089f5:	xor    eax,eax
  4089f7:	call   4306a0 <strcmp@plt+0x2cee8>
  4089fc:	jmp    4089ac <strcmp@plt+0x51f4>
  4089fe:	xchg   ax,ax
  408a00:	mov    rax,0x468e3c
  408a07:	cmp    DWORD PTR [rax],0x2
  408a0a:	jle    4089aa <strcmp@plt+0x51f2>
  408a0c:	mov    rdi,rbx
  408a0f:	call   424890 <strcmp@plt+0x210d8>
  408a14:	lea    rsi,[rip+0x3f02d]        # 447a48 <strcmp@plt+0x44290>
  408a1b:	mov    rdx,rax
  408a1e:	mov    edi,0x7
  408a23:	xor    eax,eax
  408a25:	call   4306a0 <strcmp@plt+0x2cee8>
  408a2a:	jmp    4089ac <strcmp@plt+0x51f4>
  408a2c:	nop    DWORD PTR [rax+0x0]
  408a30:	mov    rdi,rbx
  408a33:	xor    ebp,ebp
  408a35:	call   424890 <strcmp@plt+0x210d8>
  408a3a:	lea    rsi,[rip+0x3f0e7]        # 447b28 <strcmp@plt+0x44370>
  408a41:	mov    rdx,rax
  408a44:	mov    edi,0x7
  408a49:	xor    eax,eax
  408a4b:	call   4306a0 <strcmp@plt+0x2cee8>
  408a50:	jmp    4089ac <strcmp@plt+0x51f4>
  408a55:	nop    DWORD PTR [rax]
  408a58:	mov    rdi,rbx
  408a5b:	call   425110 <strcmp@plt+0x21958>
  408a60:	mov    rsi,rax
  408a63:	jmp    408972 <strcmp@plt+0x51ba>
  408a68:	nop    DWORD PTR [rax+rax*1+0x0]
  408a70:	sub    rsp,0x8
  408a74:	mov    rdi,QWORD PTR [rdi]
  408a77:	call   432790 <strcmp@plt+0x2efd8>
  408a7c:	test   rax,rax
  408a7f:	je     408a90 <strcmp@plt+0x52d8>
  408a81:	mov    rdi,rax
  408a84:	add    rsp,0x8
  408a88:	jmp    434380 <strcmp@plt+0x30bc8>
  408a8d:	nop    DWORD PTR [rax]
  408a90:	add    rsp,0x8
  408a94:	ret    
  408a95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408aa0:	push   r15
  408aa2:	push   r14
  408aa4:	push   r13
  408aa6:	push   r12
  408aa8:	push   rbp
  408aa9:	push   rbx
  408aaa:	mov    rbp,rdi
  408aad:	sub    rsp,0x848
  408ab4:	mov    DWORD PTR [rsp+0x4],esi
  408ab8:	mov    rax,QWORD PTR fs:0x28
  408ac1:	mov    QWORD PTR [rsp+0x838],rax
  408ac9:	xor    eax,eax
  408acb:	call   42d4e0 <strcmp@plt+0x29d28>
  408ad0:	mov    rbx,rax
  408ad3:	mov    QWORD PTR [rsp+0x10],rax
  408ad8:	mov    rax,QWORD PTR [rbp+0x0]
  408adc:	mov    rsi,rbx
  408adf:	mov    rdi,QWORD PTR [rax]
  408ae2:	call   42d540 <strcmp@plt+0x29d88>
  408ae7:	mov    rax,QWORD PTR [rbp+0x0]
  408aeb:	mov    rsi,rbx
  408aee:	mov    rdi,QWORD PTR [rax+0x8]
  408af2:	call   42d540 <strcmp@plt+0x29d88>
  408af7:	mov    rsi,QWORD PTR [rbp+0x0]
  408afb:	mov    rax,QWORD PTR [rsi+0x10]
  408aff:	mov    rdi,QWORD PTR [rax]
  408b02:	mov    edx,DWORD PTR [rdi]
  408b04:	test   edx,edx
  408b06:	je     408b5e <strcmp@plt+0x53a6>
  408b08:	xor    ebx,ebx
  408b0a:	jmp    408b1a <strcmp@plt+0x5362>
  408b0c:	mov    rax,QWORD PTR [rsi+0x10]
  408b10:	add    ebx,0x1
  408b13:	mov    rdi,QWORD PTR [rax]
  408b16:	cmp    DWORD PTR [rdi],ebx
  408b18:	je     408b5e <strcmp@plt+0x53a6>
  408b1a:	mov    r8,QWORD PTR [rdi+0x10]
  408b1e:	lea    eax,[rbx+rbx*1]
  408b21:	mov    ecx,ebx
  408b23:	shr    ecx,0x4
  408b26:	and    eax,0x1e
  408b29:	mov    edx,eax
  408b2b:	mov    eax,DWORD PTR [r8+rcx*4]
  408b2f:	shrx   eax,eax,edx
  408b34:	test   al,0x3
  408b36:	jne    408b0c <strcmp@plt+0x5354>
  408b38:	mov    rdx,QWORD PTR [rdi+0x20]
  408b3c:	mov    eax,ebx
  408b3e:	mov    rsi,QWORD PTR [rsp+0x10]
  408b43:	add    ebx,0x1
  408b46:	mov    rdi,QWORD PTR [rdx+rax*8]
  408b4a:	call   42d540 <strcmp@plt+0x29d88>
  408b4f:	mov    rsi,QWORD PTR [rbp+0x0]
  408b53:	mov    rax,QWORD PTR [rsi+0x10]
  408b57:	mov    rdi,QWORD PTR [rax]
  408b5a:	cmp    DWORD PTR [rdi],ebx
  408b5c:	jne    408b1a <strcmp@plt+0x5362>
  408b5e:	mov    rax,QWORD PTR [rsi+0x18]
  408b62:	xor    ebx,ebx
  408b64:	mov    rdi,QWORD PTR [rax]
  408b67:	mov    eax,DWORD PTR [rdi]
  408b69:	test   eax,eax
  408b6b:	jne    408b7e <strcmp@plt+0x53c6>
  408b6d:	jmp    408bc2 <strcmp@plt+0x540a>
  408b6f:	nop
  408b70:	mov    rax,QWORD PTR [rsi+0x18]
  408b74:	add    ebx,0x1
  408b77:	mov    rdi,QWORD PTR [rax]
  408b7a:	cmp    DWORD PTR [rdi],ebx
  408b7c:	je     408bc2 <strcmp@plt+0x540a>
  408b7e:	mov    r8,QWORD PTR [rdi+0x10]
  408b82:	lea    eax,[rbx+rbx*1]
  408b85:	mov    ecx,ebx
  408b87:	shr    ecx,0x4
  408b8a:	and    eax,0x1e
  408b8d:	mov    edx,eax
  408b8f:	mov    eax,DWORD PTR [r8+rcx*4]
  408b93:	shrx   eax,eax,edx
  408b98:	test   al,0x3
  408b9a:	jne    408b70 <strcmp@plt+0x53b8>
  408b9c:	mov    rdx,QWORD PTR [rdi+0x20]
  408ba0:	mov    eax,ebx
  408ba2:	mov    rsi,QWORD PTR [rsp+0x10]
  408ba7:	add    ebx,0x1
  408baa:	mov    rdi,QWORD PTR [rdx+rax*8]
  408bae:	call   42d540 <strcmp@plt+0x29d88>
  408bb3:	mov    rsi,QWORD PTR [rbp+0x0]
  408bb7:	mov    rax,QWORD PTR [rsi+0x18]
  408bbb:	mov    rdi,QWORD PTR [rax]
  408bbe:	cmp    DWORD PTR [rdi],ebx
  408bc0:	jne    408b7e <strcmp@plt+0x53c6>
  408bc2:	mov    rax,QWORD PTR [rsp+0x10]
  408bc7:	lea    rsi,[rsp+0x20]
  408bcc:	lea    r12,[rsp+0x430]
  408bd4:	mov    QWORD PTR [rsp+0x18],rsi
  408bd9:	mov    rcx,QWORD PTR [rax+0x8]
  408bdd:	cmp    rax,rcx
  408be0:	mov    QWORD PTR [rsp+0x8],rcx
  408be5:	je     408d46 <strcmp@plt+0x558e>
  408beb:	mov    rax,QWORD PTR [rsp+0x8]
  408bf0:	mov    rax,QWORD PTR [rax+0x10]
  408bf4:	mov    rbx,QWORD PTR [rax]
  408bf7:	test   rbx,rbx
  408bfa:	je     408d2d <strcmp@plt+0x5575>
  408c00:	mov    rbp,QWORD PTR [rsp+0x18]
  408c05:	nop    DWORD PTR [rax]
  408c08:	cmp    QWORD PTR [rbx+0x8],0x0
  408c0d:	je     408c8b <strcmp@plt+0x54d3>
  408c0f:	mov    rax,QWORD PTR [rbx+0x28]
  408c13:	mov    r13,QWORD PTR [rax]
  408c16:	test   r13,r13
  408c19:	je     408c8b <strcmp@plt+0x54d3>
  408c1b:	mov    r14,r12
  408c1e:	cmp    QWORD PTR [r13+0x8],0x0
  408c23:	je     408c3f <strcmp@plt+0x5487>
  408c25:	mov    rdi,QWORD PTR [r13+0x28]
  408c29:	test   rdi,rdi
  408c2c:	je     408c3f <strcmp@plt+0x5487>
  408c2e:	call   4342b0 <strcmp@plt+0x30af8>
  408c33:	test   rax,rax
  408c36:	mov    r15,rax
  408c39:	jne    408cc0 <strcmp@plt+0x5508>
  408c3f:	mov    rax,QWORD PTR [r13+0x10]
  408c43:	test   rax,rax
  408c46:	je     408c70 <strcmp@plt+0x54b8>
  408c48:	mov    rdx,QWORD PTR [r13+0x18]
  408c4c:	test   rdx,rdx
  408c4f:	je     408cb8 <strcmp@plt+0x5500>
  408c51:	mov    r13,rax
  408c54:	mov    QWORD PTR [r14],rdx
  408c57:	add    r14,0x8
  408c5b:	cmp    QWORD PTR [r13+0x8],0x0
  408c60:	jne    408c25 <strcmp@plt+0x546d>
  408c62:	mov    rax,QWORD PTR [r13+0x10]
  408c66:	test   rax,rax
  408c69:	jne    408c48 <strcmp@plt+0x5490>
  408c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  408c70:	mov    r13,QWORD PTR [r13+0x18]
  408c74:	test   r13,r13
  408c77:	jne    408c1e <strcmp@plt+0x5466>
  408c79:	cmp    r14,r12
  408c7c:	je     408c8b <strcmp@plt+0x54d3>
  408c7e:	mov    r13,QWORD PTR [r14-0x8]
  408c82:	test   r13,r13
  408c85:	jne    408d58 <strcmp@plt+0x55a0>
  408c8b:	mov    rax,QWORD PTR [rbx+0x10]
  408c8f:	test   rax,rax
  408c92:	je     408d10 <strcmp@plt+0x5558>
  408c94:	mov    rdx,QWORD PTR [rbx+0x18]
  408c98:	test   rdx,rdx
  408c9b:	je     408d50 <strcmp@plt+0x5598>
  408ca1:	mov    QWORD PTR [rbp+0x0],rdx
  408ca5:	mov    rbx,rax
  408ca8:	add    rbp,0x8
  408cac:	jmp    408c08 <strcmp@plt+0x5450>
  408cb1:	nop    DWORD PTR [rax+0x0]
  408cb8:	mov    r13,rax
  408cbb:	jmp    408c1e <strcmp@plt+0x5466>
  408cc0:	mov    rdi,rax
  408cc3:	call   4251c0 <strcmp@plt+0x21a08>
  408cc8:	movzx  eax,ax
  408ccb:	cmp    eax,DWORD PTR [rsp+0x4]
  408ccf:	jne    408c3f <strcmp@plt+0x5487>
  408cd5:	mov    rdi,QWORD PTR [rsp+0x10]
  408cda:	call   42dac0 <strcmp@plt+0x2a308>
  408cdf:	mov    rcx,QWORD PTR [rsp+0x838]
  408ce7:	xor    rcx,QWORD PTR fs:0x28
  408cf0:	mov    rax,r15
  408cf3:	jne    408d61 <strcmp@plt+0x55a9>
  408cf5:	add    rsp,0x848
  408cfc:	pop    rbx
  408cfd:	pop    rbp
  408cfe:	pop    r12
  408d00:	pop    r13
  408d02:	pop    r14
  408d04:	pop    r15
  408d06:	ret    
  408d07:	nop    WORD PTR [rax+rax*1+0x0]
  408d10:	mov    rbx,QWORD PTR [rbx+0x18]
  408d14:	test   rbx,rbx
  408d17:	jne    408c08 <strcmp@plt+0x5450>
  408d1d:	cmp    rbp,QWORD PTR [rsp+0x18]
  408d22:	je     408d2d <strcmp@plt+0x5575>
  408d24:	mov    rbx,QWORD PTR [rbp-0x8]
  408d28:	test   rbx,rbx
  408d2b:	jne    408d66 <strcmp@plt+0x55ae>
  408d2d:	mov    rax,QWORD PTR [rsp+0x8]
  408d32:	mov    rax,QWORD PTR [rax+0x8]
  408d36:	cmp    QWORD PTR [rsp+0x10],rax
  408d3b:	mov    QWORD PTR [rsp+0x8],rax
  408d40:	jne    408beb <strcmp@plt+0x5433>
  408d46:	xor    r15d,r15d
  408d49:	jmp    408cd5 <strcmp@plt+0x551d>
  408d4b:	nop    DWORD PTR [rax+rax*1+0x0]
  408d50:	mov    rbx,rax
  408d53:	jmp    408c08 <strcmp@plt+0x5450>
  408d58:	sub    r14,0x8
  408d5c:	jmp    408c1e <strcmp@plt+0x5466>
  408d61:	call   403460 <__stack_chk_fail@plt>
  408d66:	sub    rbp,0x8
  408d6a:	jmp    408c08 <strcmp@plt+0x5450>
  408d6f:	nop
  408d70:	push   r15
  408d72:	push   r14
  408d74:	push   r13
  408d76:	push   r12
  408d78:	push   rbp
  408d79:	push   rbx
  408d7a:	mov    rbp,rdi
  408d7d:	sub    rsp,0x848
  408d84:	mov    DWORD PTR [rsp+0x4],esi
  408d88:	mov    rax,QWORD PTR fs:0x28
  408d91:	mov    QWORD PTR [rsp+0x838],rax
  408d99:	xor    eax,eax
  408d9b:	call   42d4e0 <strcmp@plt+0x29d28>
  408da0:	mov    rbx,rax
  408da3:	mov    QWORD PTR [rsp+0x10],rax
  408da8:	mov    rax,QWORD PTR [rbp+0x0]
  408dac:	mov    rsi,rbx
  408daf:	mov    rdi,QWORD PTR [rax]
  408db2:	call   42d540 <strcmp@plt+0x29d88>
  408db7:	mov    rax,QWORD PTR [rbp+0x0]
  408dbb:	mov    rsi,rbx
  408dbe:	mov    rdi,QWORD PTR [rax+0x8]
  408dc2:	call   42d540 <strcmp@plt+0x29d88>
  408dc7:	mov    rsi,QWORD PTR [rbp+0x0]
  408dcb:	mov    rax,QWORD PTR [rsi+0x10]
  408dcf:	mov    rdi,QWORD PTR [rax]
  408dd2:	mov    edx,DWORD PTR [rdi]
  408dd4:	test   edx,edx
  408dd6:	je     408e2e <strcmp@plt+0x5676>
  408dd8:	xor    ebx,ebx
  408dda:	jmp    408dea <strcmp@plt+0x5632>
  408ddc:	mov    rax,QWORD PTR [rsi+0x10]
  408de0:	add    ebx,0x1
  408de3:	mov    rdi,QWORD PTR [rax]
  408de6:	cmp    DWORD PTR [rdi],ebx
  408de8:	je     408e2e <strcmp@plt+0x5676>
  408dea:	mov    r8,QWORD PTR [rdi+0x10]
  408dee:	lea    eax,[rbx+rbx*1]
  408df1:	mov    ecx,ebx
  408df3:	shr    ecx,0x4
  408df6:	and    eax,0x1e
  408df9:	mov    edx,eax
  408dfb:	mov    eax,DWORD PTR [r8+rcx*4]
  408dff:	shrx   eax,eax,edx
  408e04:	test   al,0x3
  408e06:	jne    408ddc <strcmp@plt+0x5624>
  408e08:	mov    rdx,QWORD PTR [rdi+0x20]
  408e0c:	mov    eax,ebx
  408e0e:	mov    rsi,QWORD PTR [rsp+0x10]
  408e13:	add    ebx,0x1
  408e16:	mov    rdi,QWORD PTR [rdx+rax*8]
  408e1a:	call   42d540 <strcmp@plt+0x29d88>
  408e1f:	mov    rsi,QWORD PTR [rbp+0x0]
  408e23:	mov    rax,QWORD PTR [rsi+0x10]
  408e27:	mov    rdi,QWORD PTR [rax]
  408e2a:	cmp    DWORD PTR [rdi],ebx
  408e2c:	jne    408dea <strcmp@plt+0x5632>
  408e2e:	mov    rax,QWORD PTR [rsi+0x18]
  408e32:	xor    ebx,ebx
  408e34:	mov    rdi,QWORD PTR [rax]
  408e37:	mov    eax,DWORD PTR [rdi]
  408e39:	test   eax,eax
  408e3b:	jne    408e4e <strcmp@plt+0x5696>
  408e3d:	jmp    408e92 <strcmp@plt+0x56da>
  408e3f:	nop
  408e40:	mov    rax,QWORD PTR [rsi+0x18]
  408e44:	add    ebx,0x1
  408e47:	mov    rdi,QWORD PTR [rax]
  408e4a:	cmp    DWORD PTR [rdi],ebx
  408e4c:	je     408e92 <strcmp@plt+0x56da>
  408e4e:	mov    r8,QWORD PTR [rdi+0x10]
  408e52:	lea    eax,[rbx+rbx*1]
  408e55:	mov    ecx,ebx
  408e57:	shr    ecx,0x4
  408e5a:	and    eax,0x1e
  408e5d:	mov    edx,eax
  408e5f:	mov    eax,DWORD PTR [r8+rcx*4]
  408e63:	shrx   eax,eax,edx
  408e68:	test   al,0x3
  408e6a:	jne    408e40 <strcmp@plt+0x5688>
  408e6c:	mov    rdx,QWORD PTR [rdi+0x20]
  408e70:	mov    eax,ebx
  408e72:	mov    rsi,QWORD PTR [rsp+0x10]
  408e77:	add    ebx,0x1
  408e7a:	mov    rdi,QWORD PTR [rdx+rax*8]
  408e7e:	call   42d540 <strcmp@plt+0x29d88>
  408e83:	mov    rsi,QWORD PTR [rbp+0x0]
  408e87:	mov    rax,QWORD PTR [rsi+0x18]
  408e8b:	mov    rdi,QWORD PTR [rax]
  408e8e:	cmp    DWORD PTR [rdi],ebx
  408e90:	jne    408e4e <strcmp@plt+0x5696>
  408e92:	mov    rax,QWORD PTR [rsp+0x10]
  408e97:	lea    rsi,[rsp+0x20]
  408e9c:	xor    r12d,r12d
  408e9f:	lea    r13,[rsp+0x430]
  408ea7:	mov    QWORD PTR [rsp+0x18],rsi
  408eac:	mov    rcx,QWORD PTR [rax+0x8]
  408eb0:	cmp    rax,rcx
  408eb3:	mov    QWORD PTR [rsp+0x8],rcx
  408eb8:	je     408ff6 <strcmp@plt+0x583e>
  408ebe:	xchg   ax,ax
  408ec0:	mov    rax,QWORD PTR [rsp+0x8]
  408ec5:	mov    rax,QWORD PTR [rax+0x10]
  408ec9:	mov    rbx,QWORD PTR [rax]
  408ecc:	test   rbx,rbx
  408ecf:	je     408fdd <strcmp@plt+0x5825>
  408ed5:	mov    rbp,QWORD PTR [rsp+0x18]
  408eda:	nop    WORD PTR [rax+rax*1+0x0]
  408ee0:	cmp    QWORD PTR [rbx+0x8],0x0
  408ee5:	je     408f6b <strcmp@plt+0x57b3>
  408eeb:	mov    rax,QWORD PTR [rbx+0x28]
  408eef:	mov    r15,QWORD PTR [rax]
  408ef2:	test   r15,r15
  408ef5:	je     408f6b <strcmp@plt+0x57b3>
  408ef7:	mov    r14,r13
  408efa:	cmp    QWORD PTR [r15+0x8],0x0
  408eff:	je     408f1e <strcmp@plt+0x5766>
  408f01:	mov    rdi,QWORD PTR [r15+0x28]
  408f05:	test   rdi,rdi
  408f08:	je     408f1e <strcmp@plt+0x5766>
  408f0a:	call   4342b0 <strcmp@plt+0x30af8>
  408f0f:	test   rax,rax
  408f12:	je     408f1e <strcmp@plt+0x5766>
  408f14:	cmp    DWORD PTR [rax+0x18],0x2
  408f18:	je     408fa0 <strcmp@plt+0x57e8>
  408f1e:	mov    rax,QWORD PTR [r15+0x10]
  408f22:	test   rax,rax
  408f25:	je     408f50 <strcmp@plt+0x5798>
  408f27:	mov    rdx,QWORD PTR [r15+0x18]
  408f2b:	test   rdx,rdx
  408f2e:	je     408f98 <strcmp@plt+0x57e0>
  408f30:	mov    r15,rax
  408f33:	mov    QWORD PTR [r14],rdx
  408f36:	add    r14,0x8
  408f3a:	cmp    QWORD PTR [r15+0x8],0x0
  408f3f:	jne    408f01 <strcmp@plt+0x5749>
  408f41:	mov    rax,QWORD PTR [r15+0x10]
  408f45:	test   rax,rax
  408f48:	jne    408f27 <strcmp@plt+0x576f>
  408f4a:	nop    WORD PTR [rax+rax*1+0x0]
  408f50:	mov    r15,QWORD PTR [r15+0x18]
  408f54:	test   r15,r15
  408f57:	jne    408efa <strcmp@plt+0x5742>
  408f59:	cmp    r14,r13
  408f5c:	je     408f6b <strcmp@plt+0x57b3>
  408f5e:	mov    r15,QWORD PTR [r14-0x8]
  408f62:	test   r15,r15
  408f65:	jne    409038 <strcmp@plt+0x5880>
  408f6b:	mov    rax,QWORD PTR [rbx+0x10]
  408f6f:	test   rax,rax
  408f72:	je     408fc0 <strcmp@plt+0x5808>
  408f74:	mov    rdx,QWORD PTR [rbx+0x18]
  408f78:	test   rdx,rdx
  408f7b:	je     409030 <strcmp@plt+0x5878>
  408f81:	mov    QWORD PTR [rbp+0x0],rdx
  408f85:	mov    rbx,rax
  408f88:	add    rbp,0x8
  408f8c:	jmp    408ee0 <strcmp@plt+0x5728>
  408f91:	nop    DWORD PTR [rax+0x0]
  408f98:	mov    r15,rax
  408f9b:	jmp    408efa <strcmp@plt+0x5742>
  408fa0:	mov    rdi,rax
  408fa3:	call   4251c0 <strcmp@plt+0x21a08>
  408fa8:	movzx  eax,ax
  408fab:	cmp    eax,DWORD PTR [rsp+0x4]
  408faf:	sete   al
  408fb2:	movzx  eax,al
  408fb5:	add    r12d,eax
  408fb8:	jmp    408f1e <strcmp@plt+0x5766>
  408fbd:	nop    DWORD PTR [rax]
  408fc0:	mov    rbx,QWORD PTR [rbx+0x18]
  408fc4:	test   rbx,rbx
  408fc7:	jne    408ee0 <strcmp@plt+0x5728>
  408fcd:	cmp    rbp,QWORD PTR [rsp+0x18]
  408fd2:	je     408fdd <strcmp@plt+0x5825>
  408fd4:	mov    rbx,QWORD PTR [rbp-0x8]
  408fd8:	test   rbx,rbx
  408fdb:	jne    409041 <strcmp@plt+0x5889>
  408fdd:	mov    rax,QWORD PTR [rsp+0x8]
  408fe2:	mov    rax,QWORD PTR [rax+0x8]
  408fe6:	cmp    QWORD PTR [rsp+0x10],rax
  408feb:	mov    QWORD PTR [rsp+0x8],rax
  408ff0:	jne    408ec0 <strcmp@plt+0x5708>
  408ff6:	mov    rdi,QWORD PTR [rsp+0x10]
  408ffb:	call   42dac0 <strcmp@plt+0x2a308>
  409000:	mov    rsi,QWORD PTR [rsp+0x838]
  409008:	xor    rsi,QWORD PTR fs:0x28
  409011:	mov    eax,r12d
  409014:	jne    40904a <strcmp@plt+0x5892>
  409016:	add    rsp,0x848
  40901d:	pop    rbx
  40901e:	pop    rbp
  40901f:	pop    r12
  409021:	pop    r13
  409023:	pop    r14
  409025:	pop    r15
  409027:	ret    
  409028:	nop    DWORD PTR [rax+rax*1+0x0]
  409030:	mov    rbx,rax
  409033:	jmp    408ee0 <strcmp@plt+0x5728>
  409038:	sub    r14,0x8
  40903c:	jmp    408efa <strcmp@plt+0x5742>
  409041:	sub    rbp,0x8
  409045:	jmp    408ee0 <strcmp@plt+0x5728>
  40904a:	call   403460 <__stack_chk_fail@plt>
  40904f:	nop
  409050:	mov    rax,QWORD PTR [rdi]
  409053:	mov    eax,DWORD PTR [rax+0x30]
  409056:	ret    
  409057:	nop    WORD PTR [rax+rax*1+0x0]
  409060:	push   r15
  409062:	push   r14
  409064:	push   r13
  409066:	push   r12
  409068:	mov    r12,rdi
  40906b:	push   rbp
  40906c:	push   rbx
  40906d:	mov    ebp,esi
  40906f:	sub    rsp,0x848
  409076:	mov    rax,QWORD PTR fs:0x28
  40907f:	mov    QWORD PTR [rsp+0x838],rax
  409087:	xor    eax,eax
  409089:	cmp    esi,0x4
  40908c:	jle    4092a9 <strcmp@plt+0x5af1>
  409092:	mov    rax,0x468e3c
  409099:	mov    eax,DWORD PTR [rax]
  40909b:	add    eax,0x4
  40909e:	cmp    esi,eax
  4090a0:	jle    4092a9 <strcmp@plt+0x5af1>
  4090a6:	call   42d4e0 <strcmp@plt+0x29d28>
  4090ab:	mov    rbx,rax
  4090ae:	mov    QWORD PTR [rsp+0x10],rax
  4090b3:	mov    rax,QWORD PTR [r12]
  4090b7:	mov    rsi,rbx
  4090ba:	mov    rdi,QWORD PTR [rax]
  4090bd:	call   42d540 <strcmp@plt+0x29d88>
  4090c2:	mov    rax,QWORD PTR [r12]
  4090c6:	mov    rsi,rbx
  4090c9:	mov    rdi,QWORD PTR [rax+0x8]
  4090cd:	call   42d540 <strcmp@plt+0x29d88>
  4090d2:	mov    rsi,QWORD PTR [r12]
  4090d6:	mov    rax,QWORD PTR [rsi+0x10]
  4090da:	mov    rdi,QWORD PTR [rax]
  4090dd:	mov    edx,DWORD PTR [rdi]
  4090df:	test   edx,edx
  4090e1:	je     409139 <strcmp@plt+0x5981>
  4090e3:	xor    ebx,ebx
  4090e5:	jmp    4090f5 <strcmp@plt+0x593d>
  4090e7:	mov    rax,QWORD PTR [rsi+0x10]
  4090eb:	add    ebx,0x1
  4090ee:	mov    rdi,QWORD PTR [rax]
  4090f1:	cmp    DWORD PTR [rdi],ebx
  4090f3:	je     409139 <strcmp@plt+0x5981>
  4090f5:	mov    r8,QWORD PTR [rdi+0x10]
  4090f9:	lea    eax,[rbx+rbx*1]
  4090fc:	mov    ecx,ebx
  4090fe:	shr    ecx,0x4
  409101:	and    eax,0x1e
  409104:	mov    edx,eax
  409106:	mov    eax,DWORD PTR [r8+rcx*4]
  40910a:	shrx   eax,eax,edx
  40910f:	test   al,0x3
  409111:	jne    4090e7 <strcmp@plt+0x592f>
  409113:	mov    rdx,QWORD PTR [rdi+0x20]
  409117:	mov    eax,ebx
  409119:	mov    rsi,QWORD PTR [rsp+0x10]
  40911e:	add    ebx,0x1
  409121:	mov    rdi,QWORD PTR [rdx+rax*8]
  409125:	call   42d540 <strcmp@plt+0x29d88>
  40912a:	mov    rsi,QWORD PTR [r12]
  40912e:	mov    rax,QWORD PTR [rsi+0x10]
  409132:	mov    rdi,QWORD PTR [rax]
  409135:	cmp    DWORD PTR [rdi],ebx
  409137:	jne    4090f5 <strcmp@plt+0x593d>
  409139:	mov    rax,QWORD PTR [rsi+0x18]
  40913d:	mov    rdi,QWORD PTR [rax]
  409140:	mov    eax,DWORD PTR [rdi]
  409142:	test   eax,eax
  409144:	je     40919c <strcmp@plt+0x59e4>
  409146:	xor    ebx,ebx
  409148:	jmp    409158 <strcmp@plt+0x59a0>
  40914a:	mov    rax,QWORD PTR [rsi+0x18]
  40914e:	add    ebx,0x1
  409151:	mov    rdi,QWORD PTR [rax]
  409154:	cmp    DWORD PTR [rdi],ebx
  409156:	je     40919c <strcmp@plt+0x59e4>
  409158:	mov    r8,QWORD PTR [rdi+0x10]
  40915c:	lea    eax,[rbx+rbx*1]
  40915f:	mov    ecx,ebx
  409161:	shr    ecx,0x4
  409164:	and    eax,0x1e
  409167:	mov    edx,eax
  409169:	mov    eax,DWORD PTR [r8+rcx*4]
  40916d:	shrx   eax,eax,edx
  409172:	test   al,0x3
  409174:	jne    40914a <strcmp@plt+0x5992>
  409176:	mov    rdx,QWORD PTR [rdi+0x20]
  40917a:	mov    eax,ebx
  40917c:	mov    rsi,QWORD PTR [rsp+0x10]
  409181:	add    ebx,0x1
  409184:	mov    rdi,QWORD PTR [rdx+rax*8]
  409188:	call   42d540 <strcmp@plt+0x29d88>
  40918d:	mov    rsi,QWORD PTR [r12]
  409191:	mov    rax,QWORD PTR [rsi+0x18]
  409195:	mov    rdi,QWORD PTR [rax]
  409198:	cmp    DWORD PTR [rdi],ebx
  40919a:	jne    409158 <strcmp@plt+0x59a0>
  40919c:	mov    rbx,QWORD PTR [rsp+0x10]
  4091a1:	mov    rdi,QWORD PTR [rsi+0x20]
  4091a5:	lea    r13,[rsp+0x430]
  4091ad:	mov    rsi,rbx
  4091b0:	call   42d540 <strcmp@plt+0x29d88>
  4091b5:	mov    rax,QWORD PTR [r12]
  4091b9:	mov    rsi,rbx
  4091bc:	mov    rdi,QWORD PTR [rax+0x20]
  4091c0:	call   42d540 <strcmp@plt+0x29d88>
  4091c5:	mov    rcx,QWORD PTR [rbx+0x8]
  4091c9:	lea    rax,[rsp+0x20]
  4091ce:	mov    QWORD PTR [rsp+0x18],rax
  4091d3:	cmp    rbx,rcx
  4091d6:	mov    QWORD PTR [rsp+0x8],rcx
  4091db:	je     40930b <strcmp@plt+0x5b53>
  4091e1:	nop    DWORD PTR [rax+0x0]
  4091e8:	mov    rax,QWORD PTR [rsp+0x8]
  4091ed:	mov    rax,QWORD PTR [rax+0x10]
  4091f1:	mov    rbx,QWORD PTR [rax]
  4091f4:	test   rbx,rbx
  4091f7:	je     4092f2 <strcmp@plt+0x5b3a>
  4091fd:	mov    r12,QWORD PTR [rsp+0x18]
  409202:	nop    WORD PTR [rax+rax*1+0x0]
  409208:	cmp    QWORD PTR [rbx+0x8],0x0
  40920d:	je     409283 <strcmp@plt+0x5acb>
  40920f:	mov    rax,QWORD PTR [rbx+0x28]
  409213:	mov    r14,QWORD PTR [rax]
  409216:	test   r14,r14
  409219:	je     409283 <strcmp@plt+0x5acb>
  40921b:	mov    r15,r13
  40921e:	cmp    QWORD PTR [r14+0x8],0x0
  409223:	je     409235 <strcmp@plt+0x5a7d>
  409225:	mov    rdi,QWORD PTR [r14+0x28]
  409229:	test   rdi,rdi
  40922c:	je     409235 <strcmp@plt+0x5a7d>
  40922e:	mov    esi,ebp
  409230:	call   434480 <strcmp@plt+0x30cc8>
  409235:	mov    rdx,QWORD PTR [r14+0x10]
  409239:	test   rdx,rdx
  40923c:	je     409268 <strcmp@plt+0x5ab0>
  40923e:	mov    rax,QWORD PTR [r14+0x18]
  409242:	test   rax,rax
  409245:	je     4092c0 <strcmp@plt+0x5b08>
  409247:	mov    r14,rdx
  40924a:	mov    QWORD PTR [r15],rax
  40924d:	add    r15,0x8
  409251:	cmp    QWORD PTR [r14+0x8],0x0
  409256:	jne    409225 <strcmp@plt+0x5a6d>
  409258:	mov    rdx,QWORD PTR [r14+0x10]
  40925c:	test   rdx,rdx
  40925f:	jne    40923e <strcmp@plt+0x5a86>
  409261:	nop    DWORD PTR [rax+0x0]
  409268:	mov    r14,QWORD PTR [r14+0x18]
  40926c:	test   r14,r14
  40926f:	jne    40921e <strcmp@plt+0x5a66>
  409271:	cmp    r15,r13
  409274:	je     409283 <strcmp@plt+0x5acb>
  409276:	mov    r14,QWORD PTR [r15-0x8]
  40927a:	test   r14,r14
  40927d:	jne    40939e <strcmp@plt+0x5be6>
  409283:	mov    rax,QWORD PTR [rbx+0x10]
  409287:	test   rax,rax
  40928a:	je     4092d0 <strcmp@plt+0x5b18>
  40928c:	mov    rdx,QWORD PTR [rbx+0x18]
  409290:	test   rdx,rdx
  409293:	je     409388 <strcmp@plt+0x5bd0>
  409299:	mov    QWORD PTR [r12],rdx
  40929d:	mov    rbx,rax
  4092a0:	add    r12,0x8
  4092a4:	jmp    409208 <strcmp@plt+0x5a50>
  4092a9:	lea    rsi,[rip+0x3e8b8]        # 447b68 <strcmp@plt+0x443b0>
  4092b0:	mov    edi,ebp
  4092b2:	xor    eax,eax
  4092b4:	call   4306a0 <strcmp@plt+0x2cee8>
  4092b9:	jmp    4090a6 <strcmp@plt+0x58ee>
  4092be:	xchg   ax,ax
  4092c0:	mov    r14,rdx
  4092c3:	jmp    40921e <strcmp@plt+0x5a66>
  4092c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4092d0:	mov    rbx,QWORD PTR [rbx+0x18]
  4092d4:	test   rbx,rbx
  4092d7:	jne    409208 <strcmp@plt+0x5a50>
  4092dd:	cmp    r12,QWORD PTR [rsp+0x18]
  4092e2:	je     4092f2 <strcmp@plt+0x5b3a>
  4092e4:	mov    rbx,QWORD PTR [r12-0x8]
  4092e9:	test   rbx,rbx
  4092ec:	jne    409390 <strcmp@plt+0x5bd8>
  4092f2:	mov    rax,QWORD PTR [rsp+0x8]
  4092f7:	mov    rax,QWORD PTR [rax+0x8]
  4092fb:	cmp    QWORD PTR [rsp+0x10],rax
  409300:	mov    QWORD PTR [rsp+0x8],rax
  409305:	jne    4091e8 <strcmp@plt+0x5a30>
  40930b:	mov    rdi,QWORD PTR [rsp+0x10]
  409310:	call   42dac0 <strcmp@plt+0x2a308>
  409315:	cmp    ebp,0x4
  409318:	jle    40934f <strcmp@plt+0x5b97>
  40931a:	mov    rax,0x468e3c
  409321:	mov    eax,DWORD PTR [rax]
  409323:	add    eax,0x4
  409326:	cmp    ebp,eax
  409328:	jle    40934f <strcmp@plt+0x5b97>
  40932a:	mov    rax,QWORD PTR [rsp+0x838]
  409332:	xor    rax,QWORD PTR fs:0x28
  40933b:	jne    409399 <strcmp@plt+0x5be1>
  40933d:	add    rsp,0x848
  409344:	pop    rbx
  409345:	pop    rbp
  409346:	pop    r12
  409348:	pop    r13
  40934a:	pop    r14
  40934c:	pop    r15
  40934e:	ret    
  40934f:	mov    rax,QWORD PTR [rsp+0x838]
  409357:	xor    rax,QWORD PTR fs:0x28
  409360:	jne    409399 <strcmp@plt+0x5be1>
  409362:	add    rsp,0x848
  409369:	mov    edi,ebp
  40936b:	lea    rsi,[rip+0x3e836]        # 447ba8 <strcmp@plt+0x443f0>
  409372:	pop    rbx
  409373:	pop    rbp
  409374:	pop    r12
  409376:	pop    r13
  409378:	pop    r14
  40937a:	pop    r15
  40937c:	xor    eax,eax
  40937e:	jmp    4306a0 <strcmp@plt+0x2cee8>
  409383:	nop    DWORD PTR [rax+rax*1+0x0]
  409388:	mov    rbx,rax
  40938b:	jmp    409208 <strcmp@plt+0x5a50>
  409390:	sub    r12,0x8
  409394:	jmp    409208 <strcmp@plt+0x5a50>
  409399:	call   403460 <__stack_chk_fail@plt>
  40939e:	sub    r15,0x8
  4093a2:	jmp    40921e <strcmp@plt+0x5a66>
  4093a7:	nop    WORD PTR [rax+rax*1+0x0]
  4093b0:	push   rbx
  4093b1:	mov    edi,0x8
  4093b6:	call   434790 <strcmp@plt+0x30fd8>
  4093bb:	test   rax,rax
  4093be:	mov    rbx,rax
  4093c1:	je     4093e0 <strcmp@plt+0x5c28>
  4093c3:	xor    eax,eax
  4093c5:	call   431690 <strcmp@plt+0x2ded8>
  4093ca:	test   rax,rax
  4093cd:	mov    QWORD PTR [rbx],rax
  4093d0:	je     4093f5 <strcmp@plt+0x5c3d>
  4093d2:	mov    rax,rbx
  4093d5:	pop    rbx
  4093d6:	ret    
  4093d7:	nop    WORD PTR [rax+rax*1+0x0]
  4093e0:	lea    rsi,[rip+0x3e7fa]        # 447be1 <strcmp@plt+0x44429>
  4093e7:	mov    edi,0x1
  4093ec:	xor    eax,eax
  4093ee:	call   4306a0 <strcmp@plt+0x2cee8>
  4093f3:	jmp    4093d2 <strcmp@plt+0x5c1a>
  4093f5:	lea    rsi,[rip+0x3e802]        # 447bfe <strcmp@plt+0x44446>
  4093fc:	mov    edi,0x1
  409401:	xor    ebx,ebx
  409403:	call   4306a0 <strcmp@plt+0x2cee8>
  409408:	jmp    4093d2 <strcmp@plt+0x5c1a>
  40940a:	nop    WORD PTR [rax+rax*1+0x0]
  409410:	push   rbx
  409411:	mov    rsi,0x432f40
  409418:	mov    rbx,rdi
  40941b:	mov    rdi,QWORD PTR [rdi]
  40941e:	call   431200 <strcmp@plt+0x2da48>
  409423:	mov    rdi,rbx
  409426:	pop    rbx
  409427:	jmp    4037b0 <free@plt>
  40942c:	nop    DWORD PTR [rax+0x0]
  409430:	mov    rdi,QWORD PTR [rdi]
  409433:	jmp    431a10 <strcmp@plt+0x2e258>
  409438:	nop    DWORD PTR [rax+rax*1+0x0]
  409440:	mov    rdi,QWORD PTR [rdi]
  409443:	jmp    432790 <strcmp@plt+0x2efd8>
  409448:	nop    DWORD PTR [rax+rax*1+0x0]
  409450:	push   rbx
  409451:	mov    rdi,QWORD PTR [rdi]
  409454:	call   432570 <strcmp@plt+0x2edb8>
  409459:	test   rax,rax
  40945c:	je     409485 <strcmp@plt+0x5ccd>
  40945e:	mov    rdi,rax
  409461:	mov    rbx,rax
  409464:	call   433030 <strcmp@plt+0x2f878>
  409469:	cmp    DWORD PTR [rax+0x18],0x2
  40946d:	je     409478 <strcmp@plt+0x5cc0>
  40946f:	mov    rax,rbx
  409472:	pop    rbx
  409473:	ret    
  409474:	nop    DWORD PTR [rax+0x0]
  409478:	mov    rdi,rax
  40947b:	call   425170 <strcmp@plt+0x219b8>
  409480:	test   ax,ax
  409483:	jne    40946f <strcmp@plt+0x5cb7>
  409485:	xor    ebx,ebx
  409487:	jmp    40946f <strcmp@plt+0x5cb7>
  409489:	nop    DWORD PTR [rax+0x0]
  409490:	mov    rdi,QWORD PTR [rdi]
  409493:	jmp    4325a0 <strcmp@plt+0x2ede8>
  409498:	nop    DWORD PTR [rax+rax*1+0x0]
  4094a0:	push   rbp
  4094a1:	push   rbx
  4094a2:	mov    rbx,rdi
  4094a5:	sub    rsp,0x38
  4094a9:	mov    rax,QWORD PTR fs:0x28
  4094b2:	mov    QWORD PTR [rsp+0x28],rax
  4094b7:	xor    eax,eax
  4094b9:	cmp    esi,0x2
  4094bc:	je     409500 <strcmp@plt+0x5d48>
  4094be:	cmp    esi,0xa
  4094c1:	je     4094e0 <strcmp@plt+0x5d28>
  4094c3:	xor    eax,eax
  4094c5:	mov    rdx,QWORD PTR [rsp+0x28]
  4094ca:	xor    rdx,QWORD PTR fs:0x28
  4094d3:	jne    40951c <strcmp@plt+0x5d64>
  4094d5:	add    rsp,0x38
  4094d9:	pop    rbx
  4094da:	pop    rbp
  4094db:	ret    
  4094dc:	nop    DWORD PTR [rax+0x0]
  4094e0:	lea    rdi,[rip+0x3e732]        # 447c19 <strcmp@plt+0x44461>
  4094e7:	mov    rsi,rsp
  4094ea:	call   4256d0 <strcmp@plt+0x21f18>
  4094ef:	mov    rsi,rsp
  4094f2:	mov    rdi,rbx
  4094f5:	call   409490 <strcmp@plt+0x5cd8>
  4094fa:	jmp    4094c5 <strcmp@plt+0x5d0d>
  4094fc:	nop    DWORD PTR [rax+0x0]
  409500:	lea    rdi,[rip+0x3e20c]        # 447713 <strcmp@plt+0x43f5b>
  409507:	mov    rsi,rsp
  40950a:	call   4256d0 <strcmp@plt+0x21f18>
  40950f:	mov    rsi,rsp
  409512:	mov    rdi,rbx
  409515:	call   409490 <strcmp@plt+0x5cd8>
  40951a:	jmp    4094c5 <strcmp@plt+0x5d0d>
  40951c:	call   403460 <__stack_chk_fail@plt>
  409521:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40952c:	nop    DWORD PTR [rax+0x0]
  409530:	push   r15
  409532:	push   r14
  409534:	push   r13
  409536:	push   r12
  409538:	mov    r12,rdi
  40953b:	push   rbp
  40953c:	push   rbx
  40953d:	mov    ebx,esi
  40953f:	sub    rsp,0x848
  409546:	mov    rax,QWORD PTR fs:0x28
  40954f:	mov    QWORD PTR [rsp+0x838],rax
  409557:	xor    eax,eax
  409559:	cmp    esi,0x4
  40955c:	jle    409597 <strcmp@plt+0x5ddf>
  40955e:	mov    rax,0x468e3c
  409565:	mov    eax,DWORD PTR [rax]
  409567:	add    eax,0x4
  40956a:	cmp    esi,eax
  40956c:	jle    409597 <strcmp@plt+0x5ddf>
  40956e:	mov    rax,QWORD PTR [rsp+0x838]
  409576:	xor    rax,QWORD PTR fs:0x28
  40957f:	jne    409872 <strcmp@plt+0x60ba>
  409585:	add    rsp,0x848
  40958c:	pop    rbx
  40958d:	pop    rbp
  40958e:	pop    r12
  409590:	pop    r13
  409592:	pop    r14
  409594:	pop    r15
  409596:	ret    
  409597:	lea    rsi,[rip+0x3e682]        # 447c20 <strcmp@plt+0x44468>
  40959e:	mov    edi,ebx
  4095a0:	xor    eax,eax
  4095a2:	xor    ebp,ebp
  4095a4:	call   4306a0 <strcmp@plt+0x2cee8>
  4095a9:	call   42d4e0 <strcmp@plt+0x29d28>
  4095ae:	mov    r15,rax
  4095b1:	mov    QWORD PTR [rsp+0x10],rax
  4095b6:	mov    rax,QWORD PTR [r12]
  4095ba:	mov    rsi,r15
  4095bd:	mov    rdi,QWORD PTR [rax]
  4095c0:	call   42d540 <strcmp@plt+0x29d88>
  4095c5:	mov    rax,QWORD PTR [r12]
  4095c9:	mov    rsi,r15
  4095cc:	mov    rdi,QWORD PTR [rax+0x8]
  4095d0:	call   42d540 <strcmp@plt+0x29d88>
  4095d5:	mov    rsi,QWORD PTR [r12]
  4095d9:	mov    rax,QWORD PTR [rsi+0x10]
  4095dd:	mov    rdi,QWORD PTR [rax]
  4095e0:	mov    eax,DWORD PTR [rdi]
  4095e2:	test   eax,eax
  4095e4:	jne    4095fe <strcmp@plt+0x5e46>
  4095e6:	jmp    409643 <strcmp@plt+0x5e8b>
  4095e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4095f0:	mov    rax,QWORD PTR [rsi+0x10]
  4095f4:	add    ebp,0x1
  4095f7:	mov    rdi,QWORD PTR [rax]
  4095fa:	cmp    DWORD PTR [rdi],ebp
  4095fc:	je     409643 <strcmp@plt+0x5e8b>
  4095fe:	mov    r8,QWORD PTR [rdi+0x10]
  409602:	lea    eax,[rbp+rbp*1+0x0]
  409606:	mov    ecx,ebp
  409608:	shr    ecx,0x4
  40960b:	and    eax,0x1e
  40960e:	mov    edx,eax
  409610:	mov    eax,DWORD PTR [r8+rcx*4]
  409614:	shrx   eax,eax,edx
  409619:	test   al,0x3
  40961b:	jne    4095f0 <strcmp@plt+0x5e38>
  40961d:	mov    rdx,QWORD PTR [rdi+0x20]
  409621:	mov    eax,ebp
  409623:	mov    rsi,QWORD PTR [rsp+0x10]
  409628:	add    ebp,0x1
  40962b:	mov    rdi,QWORD PTR [rdx+rax*8]
  40962f:	call   42d540 <strcmp@plt+0x29d88>
  409634:	mov    rsi,QWORD PTR [r12]
  409638:	mov    rax,QWORD PTR [rsi+0x10]
  40963c:	mov    rdi,QWORD PTR [rax]
  40963f:	cmp    DWORD PTR [rdi],ebp
  409641:	jne    4095fe <strcmp@plt+0x5e46>
  409643:	mov    rax,QWORD PTR [rsi+0x18]
  409647:	mov    rdi,QWORD PTR [rax]
  40964a:	mov    edx,DWORD PTR [rdi]
  40964c:	test   edx,edx
  40964e:	je     4096a7 <strcmp@plt+0x5eef>
  409650:	xor    ebp,ebp
  409652:	jmp    409662 <strcmp@plt+0x5eaa>
  409654:	mov    rax,QWORD PTR [rsi+0x18]
  409658:	add    ebp,0x1
  40965b:	mov    rdi,QWORD PTR [rax]
  40965e:	cmp    DWORD PTR [rdi],ebp
  409660:	je     4096a7 <strcmp@plt+0x5eef>
  409662:	mov    r8,QWORD PTR [rdi+0x10]
  409666:	lea    eax,[rbp+rbp*1+0x0]
  40966a:	mov    ecx,ebp
  40966c:	shr    ecx,0x4
  40966f:	and    eax,0x1e
  409672:	mov    edx,eax
  409674:	mov    eax,DWORD PTR [r8+rcx*4]
  409678:	shrx   eax,eax,edx
  40967d:	test   al,0x3
  40967f:	jne    409654 <strcmp@plt+0x5e9c>
  409681:	mov    rdx,QWORD PTR [rdi+0x20]
  409685:	mov    eax,ebp
  409687:	mov    rsi,QWORD PTR [rsp+0x10]
  40968c:	add    ebp,0x1
  40968f:	mov    rdi,QWORD PTR [rdx+rax*8]
  409693:	call   42d540 <strcmp@plt+0x29d88>
  409698:	mov    rsi,QWORD PTR [r12]
  40969c:	mov    rax,QWORD PTR [rsi+0x18]
  4096a0:	mov    rdi,QWORD PTR [rax]
  4096a3:	cmp    DWORD PTR [rdi],ebp
  4096a5:	jne    409662 <strcmp@plt+0x5eaa>
  4096a7:	mov    r15,QWORD PTR [rsp+0x10]
  4096ac:	mov    rdi,QWORD PTR [rsi+0x20]
  4096b0:	lea    r13,[rsp+0x430]
  4096b8:	mov    rsi,r15
  4096bb:	call   42d540 <strcmp@plt+0x29d88>
  4096c0:	mov    rax,QWORD PTR [r12]
  4096c4:	mov    rsi,r15
  4096c7:	mov    rdi,QWORD PTR [rax+0x20]
  4096cb:	call   42d540 <strcmp@plt+0x29d88>
  4096d0:	mov    rcx,QWORD PTR [r15+0x8]
  4096d4:	lea    rax,[rsp+0x20]
  4096d9:	mov    QWORD PTR [rsp+0x18],rax
  4096de:	cmp    r15,rcx
  4096e1:	mov    QWORD PTR [rsp+0x8],rcx
  4096e6:	je     4097fb <strcmp@plt+0x6043>
  4096ec:	nop    DWORD PTR [rax+0x0]
  4096f0:	mov    rax,QWORD PTR [rsp+0x8]
  4096f5:	mov    rax,QWORD PTR [rax+0x10]
  4096f9:	mov    rbp,QWORD PTR [rax]
  4096fc:	test   rbp,rbp
  4096ff:	je     4097e2 <strcmp@plt+0x602a>
  409705:	mov    r12,QWORD PTR [rsp+0x18]
  40970a:	nop    WORD PTR [rax+rax*1+0x0]
  409710:	cmp    QWORD PTR [rbp+0x8],0x0
  409715:	je     40978b <strcmp@plt+0x5fd3>
  409717:	mov    rax,QWORD PTR [rbp+0x28]
  40971b:	mov    r14,QWORD PTR [rax]
  40971e:	test   r14,r14
  409721:	je     40978b <strcmp@plt+0x5fd3>
  409723:	mov    r15,r13
  409726:	cmp    QWORD PTR [r14+0x8],0x0
  40972b:	je     40973d <strcmp@plt+0x5f85>
  40972d:	mov    rdi,QWORD PTR [r14+0x28]
  409731:	test   rdi,rdi
  409734:	je     40973d <strcmp@plt+0x5f85>
  409736:	mov    esi,ebx
  409738:	call   433050 <strcmp@plt+0x2f898>
  40973d:	mov    rdx,QWORD PTR [r14+0x10]
  409741:	test   rdx,rdx
  409744:	je     409770 <strcmp@plt+0x5fb8>
  409746:	mov    rax,QWORD PTR [r14+0x18]
  40974a:	test   rax,rax
  40974d:	je     4097b8 <strcmp@plt+0x6000>
  40974f:	mov    r14,rdx
  409752:	mov    QWORD PTR [r15],rax
  409755:	add    r15,0x8
  409759:	cmp    QWORD PTR [r14+0x8],0x0
  40975e:	jne    40972d <strcmp@plt+0x5f75>
  409760:	mov    rdx,QWORD PTR [r14+0x10]
  409764:	test   rdx,rdx
  409767:	jne    409746 <strcmp@plt+0x5f8e>
  409769:	nop    DWORD PTR [rax+0x0]
  409770:	mov    r14,QWORD PTR [r14+0x18]
  409774:	test   r14,r14
  409777:	jne    409726 <strcmp@plt+0x5f6e>
  409779:	cmp    r15,r13
  40977c:	je     40978b <strcmp@plt+0x5fd3>
  40977e:	mov    r14,QWORD PTR [r15-0x8]
  409782:	test   r14,r14
  409785:	jne    409860 <strcmp@plt+0x60a8>
  40978b:	mov    rax,QWORD PTR [rbp+0x10]
  40978f:	test   rax,rax
  409792:	je     4097c0 <strcmp@plt+0x6008>
  409794:	mov    rdx,QWORD PTR [rbp+0x18]
  409798:	test   rdx,rdx
  40979b:	je     409858 <strcmp@plt+0x60a0>
  4097a1:	mov    QWORD PTR [r12],rdx
  4097a5:	mov    rbp,rax
  4097a8:	add    r12,0x8
  4097ac:	jmp    409710 <strcmp@plt+0x5f58>
  4097b1:	nop    DWORD PTR [rax+0x0]
  4097b8:	mov    r14,rdx
  4097bb:	jmp    409726 <strcmp@plt+0x5f6e>
  4097c0:	mov    rbp,QWORD PTR [rbp+0x18]
  4097c4:	test   rbp,rbp
  4097c7:	jne    409710 <strcmp@plt+0x5f58>
  4097cd:	cmp    r12,QWORD PTR [rsp+0x18]
  4097d2:	je     4097e2 <strcmp@plt+0x602a>
  4097d4:	mov    rbp,QWORD PTR [r12-0x8]
  4097d9:	test   rbp,rbp
  4097dc:	jne    409869 <strcmp@plt+0x60b1>
  4097e2:	mov    rax,QWORD PTR [rsp+0x8]
  4097e7:	mov    rax,QWORD PTR [rax+0x8]
  4097eb:	cmp    QWORD PTR [rsp+0x10],rax
  4097f0:	mov    QWORD PTR [rsp+0x8],rax
  4097f5:	jne    4096f0 <strcmp@plt+0x5f38>
  4097fb:	mov    rdi,QWORD PTR [rsp+0x10]
  409800:	call   42dac0 <strcmp@plt+0x2a308>
  409805:	cmp    ebx,0x4
  409808:	jle    40981e <strcmp@plt+0x6066>
  40980a:	mov    rax,0x468e3c
  409811:	mov    eax,DWORD PTR [rax]
  409813:	add    eax,0x4
  409816:	cmp    ebx,eax
  409818:	jg     40956e <strcmp@plt+0x5db6>
  40981e:	mov    rax,QWORD PTR [rsp+0x838]
  409826:	xor    rax,QWORD PTR fs:0x28
  40982f:	jne    409872 <strcmp@plt+0x60ba>
  409831:	add    rsp,0x848
  409838:	mov    edi,ebx
  40983a:	lea    rsi,[rip+0x3e367]        # 447ba8 <strcmp@plt+0x443f0>
  409841:	pop    rbx
  409842:	pop    rbp
  409843:	pop    r12
  409845:	pop    r13
  409847:	pop    r14
  409849:	pop    r15
  40984b:	xor    eax,eax
  40984d:	jmp    4306a0 <strcmp@plt+0x2cee8>
  409852:	nop    WORD PTR [rax+rax*1+0x0]
  409858:	mov    rbp,rax
  40985b:	jmp    409710 <strcmp@plt+0x5f58>
  409860:	sub    r15,0x8
  409864:	jmp    409726 <strcmp@plt+0x5f6e>
  409869:	sub    r12,0x8
  40986d:	jmp    409710 <strcmp@plt+0x5f58>
  409872:	call   403460 <__stack_chk_fail@plt>
  409877:	nop    WORD PTR [rax+rax*1+0x0]
  409880:	mov    eax,0x1
  409885:	ret    
  409886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409890:	push   rbx
  409891:	mov    rbx,rdi
  409894:	mov    rdi,QWORD PTR [rdi+0x8]
  409898:	call   424750 <strcmp@plt+0x20f98>
  40989d:	mov    rdi,QWORD PTR [rbx]
  4098a0:	call   424750 <strcmp@plt+0x20f98>
  4098a5:	mov    rdi,QWORD PTR [rbx+0x10]
  4098a9:	call   424750 <strcmp@plt+0x20f98>
  4098ae:	mov    rdi,QWORD PTR [rbx+0x18]
  4098b2:	call   424750 <strcmp@plt+0x20f98>
  4098b7:	mov    rdi,rbx
  4098ba:	pop    rbx
  4098bb:	jmp    4037b0 <free@plt>
  4098c0:	jmp    4037b0 <free@plt>
  4098c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4098d0:	push   rbx
  4098d1:	mov    rbx,rdi
  4098d4:	mov    rdi,QWORD PTR [rdi]
  4098d7:	call   424750 <strcmp@plt+0x20f98>
  4098dc:	mov    rdi,QWORD PTR [rbx+0x8]
  4098e0:	call   4037b0 <free@plt>
  4098e5:	mov    rdi,rbx
  4098e8:	pop    rbx
  4098e9:	jmp    4037b0 <free@plt>
  4098ee:	xchg   ax,ax
  4098f0:	sub    rsp,0x8
  4098f4:	mov    edi,0x78
  4098f9:	call   434790 <strcmp@plt+0x30fd8>
  4098fe:	add    rsp,0x8
  409902:	ret    
  409903:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40990e:	xchg   ax,ax
  409910:	sub    rsp,0x8
  409914:	call   43ac30 <strcmp@plt+0x37478>
  409919:	mov    rdx,0x474860
  409920:	mov    rcx,0x474858
  409927:	mov    rdi,rax
  40992a:	mov    rdx,QWORD PTR [rdx]
  40992d:	mov    rsi,QWORD PTR [rcx]
  409930:	call   43b0b0 <strcmp@plt+0x378f8>
  409935:	mov    eax,0x1
  40993a:	add    rsp,0x8
  40993e:	ret    
  40993f:	nop
  409940:	test   rdi,rdi
  409943:	je     409ac0 <strcmp@plt+0x6308>
  409949:	push   rbp
  40994a:	push   rbx
  40994b:	mov    rbx,rdi
  40994e:	lea    rbp,[rip+0x62a0b]        # 46c360 <strcmp@plt+0x68ba8>
  409955:	sub    rsp,0x8
  409959:	mov    BYTE PTR [rip+0x62a00],0x0        # 46c360 <strcmp@plt+0x68ba8>
  409960:	mov    rdi,QWORD PTR [rdi]
  409963:	call   424890 <strcmp@plt+0x210d8>
  409968:	mov    rdi,rbp
  40996b:	mov    rdx,rbp
  40996e:	mov    esi,DWORD PTR [rdx]
  409970:	add    rdx,0x4
  409974:	lea    ecx,[rsi-0x1010101]
  40997a:	andn   ecx,esi,ecx
  40997f:	and    ecx,0x80808080
  409985:	je     40996e <strcmp@plt+0x61b6>
  409987:	mov    esi,ecx
  409989:	lea    r8,[rip+0x3e2cf]        # 447c5f <strcmp@plt+0x444a7>
  409990:	mov    r9,rax
  409993:	shr    esi,0x10
  409996:	test   ecx,0x8080
  40999c:	cmove  ecx,esi
  40999f:	lea    rsi,[rdx+0x2]
  4099a3:	cmove  rdx,rsi
  4099a7:	mov    esi,ecx
  4099a9:	add    sil,cl
  4099ac:	mov    esi,0x1f4
  4099b1:	mov    rcx,0xffffffffffffffff
  4099b8:	sbb    rdx,0x3
  4099bc:	xor    eax,eax
  4099be:	sub    rdx,rbp
  4099c1:	lea    rbp,[rip+0x62998]        # 46c360 <strcmp@plt+0x68ba8>
  4099c8:	add    rdi,rdx
  4099cb:	sub    rsi,rdx
  4099ce:	mov    edx,0x1
  4099d3:	call   4032a0 <__snprintf_chk@plt>
  4099d8:	mov    rdi,rbp
  4099db:	mov    rdx,rbp
  4099de:	mov    ecx,DWORD PTR [rdx]
  4099e0:	add    rdx,0x4
  4099e4:	lea    eax,[rcx-0x1010101]
  4099ea:	andn   eax,ecx,eax
  4099ef:	and    eax,0x80808080
  4099f4:	je     4099de <strcmp@plt+0x6226>
  4099f6:	mov    ecx,eax
  4099f8:	shr    ecx,0x10
  4099fb:	test   eax,0x8080
  409a00:	cmove  eax,ecx
  409a03:	lea    rcx,[rdx+0x2]
  409a07:	mov    esi,eax
  409a09:	cmove  rdx,rcx
  409a0d:	add    sil,al
  409a10:	mov    esi,0x1f4
  409a15:	sbb    rdx,0x3
  409a19:	xor    eax,eax
  409a1b:	sub    rdx,rbp
  409a1e:	sub    rsi,rdx
  409a21:	add    rdi,rdx
  409a24:	lea    rdx,[rip+0x3e242]        # 447c6d <strcmp@plt+0x444b5>
  409a2b:	call   403640 <snprintf@plt>
  409a30:	mov    eax,DWORD PTR [rbx+0x14]
  409a33:	lea    rdi,[rip+0x62926]        # 46c360 <strcmp@plt+0x68ba8>
  409a3a:	lea    r9,[rip+0x3e217]        # 447c58 <strcmp@plt+0x444a0>
  409a41:	mov    rsi,rdi
  409a44:	mov    rcx,rdi
  409a47:	test   eax,eax
  409a49:	lea    rax,[rip+0x3e20c]        # 447c5c <strcmp@plt+0x444a4>
  409a50:	cmovne r9,rax
  409a54:	mov    edx,DWORD PTR [rcx]
  409a56:	add    rcx,0x4
  409a5a:	lea    eax,[rdx-0x1010101]
  409a60:	andn   eax,edx,eax
  409a65:	and    eax,0x80808080
  409a6a:	je     409a54 <strcmp@plt+0x629c>
  409a6c:	mov    edx,eax
  409a6e:	lea    r8,[rip+0x3e206]        # 447c7b <strcmp@plt+0x444c3>
  409a75:	shr    edx,0x10
  409a78:	test   eax,0x8080
  409a7d:	cmove  eax,edx
  409a80:	lea    rdx,[rcx+0x2]
  409a84:	mov    ebx,eax
  409a86:	cmove  rcx,rdx
  409a8a:	add    bl,al
  409a8c:	mov    edx,0x1
  409a91:	sbb    rcx,0x3
  409a95:	xor    eax,eax
  409a97:	sub    rcx,rsi
  409a9a:	mov    esi,0x1f4
  409a9f:	sub    rsi,rcx
  409aa2:	add    rdi,rcx
  409aa5:	mov    rcx,0xffffffffffffffff
  409aac:	call   4032a0 <__snprintf_chk@plt>
  409ab1:	add    rsp,0x8
  409ab5:	lea    rax,[rip+0x628a4]        # 46c360 <strcmp@plt+0x68ba8>
  409abc:	pop    rbx
  409abd:	pop    rbp
  409abe:	ret    
  409abf:	nop
  409ac0:	mov    edx,0x5f4c
  409ac5:	mov    DWORD PTR [rip+0x62891],0x4c554e5f        # 46c360 <strcmp@plt+0x68ba8>
  409acf:	mov    BYTE PTR [rip+0x62890],0x0        # 46c366 <strcmp@plt+0x68bae>
  409ad6:	mov    WORD PTR [rip+0x62887],dx        # 46c364 <strcmp@plt+0x68bac>
  409add:	lea    rax,[rip+0x6287c]        # 46c360 <strcmp@plt+0x68ba8>
  409ae4:	ret    
  409ae5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409af0:	push   rbp
  409af1:	push   rbx
  409af2:	mov    rbx,rdi
  409af5:	sub    rsp,0x8
  409af9:	call   43ac20 <strcmp@plt+0x37468>
  409afe:	mov    rdi,rbx
  409b01:	mov    rbp,rax
  409b04:	call   43ac30 <strcmp@plt+0x37478>
  409b09:	mov    rbx,QWORD PTR [rax]
  409b0c:	mov    rsi,QWORD PTR [rax+0x8]
  409b10:	mov    rdi,rbx
  409b13:	call   434050 <strcmp@plt+0x30898>
  409b18:	mov    rax,QWORD PTR [rbx+0x8]
  409b1c:	cmp    WORD PTR [rax+0x20],0x0
  409b21:	jne    409b80 <strcmp@plt+0x63c8>
  409b23:	mov    rax,0x468e3c
  409b2a:	mov    eax,DWORD PTR [rax]
  409b2c:	test   eax,eax
  409b2e:	jg     409b50 <strcmp@plt+0x6398>
  409b30:	lea    rdi,[rbp+0x18]
  409b34:	mov    rsi,rbx
  409b37:	call   40c1b0 <strcmp@plt+0x89f8>
  409b3c:	add    rsp,0x8
  409b40:	mov    eax,0x1
  409b45:	pop    rbx
  409b46:	pop    rbp
  409b47:	ret    
  409b48:	nop    DWORD PTR [rax+rax*1+0x0]
  409b50:	mov    rdi,rbx
  409b53:	call   433030 <strcmp@plt+0x2f878>
  409b58:	mov    rdi,rax
  409b5b:	call   424890 <strcmp@plt+0x210d8>
  409b60:	lea    rsi,[rip+0x3e12a]        # 447c91 <strcmp@plt+0x444d9>
  409b67:	mov    rdx,rax
  409b6a:	mov    edi,0x5
  409b6f:	xor    eax,eax
  409b71:	call   4306a0 <strcmp@plt+0x2cee8>
  409b76:	jmp    409b30 <strcmp@plt+0x6378>
  409b78:	nop    DWORD PTR [rax+rax*1+0x0]
  409b80:	mov    rdi,rbx
  409b83:	call   433030 <strcmp@plt+0x2f878>
  409b88:	mov    rdi,rbp
  409b8b:	xor    edx,edx
  409b8d:	mov    rsi,rax
  409b90:	call   4083c0 <strcmp@plt+0x4c08>
  409b95:	add    rsp,0x8
  409b99:	mov    eax,0x1
  409b9e:	pop    rbx
  409b9f:	pop    rbp
  409ba0:	ret    
  409ba1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409bac:	nop    DWORD PTR [rax+0x0]
  409bb0:	sub    rsp,0x8
  409bb4:	mov    rax,0x4685a0
  409bbb:	cmp    QWORD PTR [rdi+0x8],rax
  409bbf:	jne    409c00 <strcmp@plt+0x6448>
  409bc1:	call   4037b0 <free@plt>
  409bc6:	mov    rax,0x468e3c
  409bcd:	mov    eax,DWORD PTR [rax]
  409bcf:	test   eax,eax
  409bd1:	jg     409be0 <strcmp@plt+0x6428>
  409bd3:	add    rsp,0x8
  409bd7:	ret    
  409bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  409be0:	lea    rsi,[rip+0x3e0db]        # 447cc2 <strcmp@plt+0x4450a>
  409be7:	mov    edi,0x5
  409bec:	xor    eax,eax
  409bee:	add    rsp,0x8
  409bf2:	jmp    4306a0 <strcmp@plt+0x2cee8>
  409bf7:	nop    WORD PTR [rax+rax*1+0x0]
  409c00:	lea    rdx,[rip+0x3e191]        # 447d98 <strcmp@plt+0x445e0>
  409c07:	lea    rsi,[rip+0x3ea7a]        # 448688 <strcmp@plt+0x44ed0>
  409c0e:	lea    rdi,[rip+0x3e096]        # 447cab <strcmp@plt+0x444f3>
  409c15:	call   434880 <strcmp@plt+0x310c8>
  409c1a:	nop    WORD PTR [rax+rax*1+0x0]
  409c20:	push   rbx
  409c21:	mov    rax,0x4685a0
  409c28:	cmp    QWORD PTR [rdi+0x8],rax
  409c2c:	jne    409c78 <strcmp@plt+0x64c0>
  409c2e:	mov    rbx,rdi
  409c31:	lea    rdi,[rdi+0x18]
  409c35:	call   40b840 <strcmp@plt+0x8088>
  409c3a:	mov    rdi,QWORD PTR [rbx+0x68]
  409c3e:	call   434380 <strcmp@plt+0x30bc8>
  409c43:	mov    rdi,QWORD PTR [rbx+0x70]
  409c47:	call   43a5a0 <strcmp@plt+0x36de8>
  409c4c:	mov    rax,0x468e3c
  409c53:	mov    eax,DWORD PTR [rax]
  409c55:	test   eax,eax
  409c57:	jg     409c60 <strcmp@plt+0x64a8>
  409c59:	pop    rbx
  409c5a:	ret    
  409c5b:	nop    DWORD PTR [rax+rax*1+0x0]
  409c60:	pop    rbx
  409c61:	lea    rsi,[rip+0x3e068]        # 447cd0 <strcmp@plt+0x44518>
  409c68:	mov    edi,0x5
  409c6d:	xor    eax,eax
  409c6f:	jmp    4306a0 <strcmp@plt+0x2cee8>
  409c74:	nop    DWORD PTR [rax+0x0]
  409c78:	lea    rdx,[rip+0x3e119]        # 447d98 <strcmp@plt+0x445e0>
  409c7f:	lea    rsi,[rip+0x3ea02]        # 448688 <strcmp@plt+0x44ed0>
  409c86:	lea    rdi,[rip+0x3e01e]        # 447cab <strcmp@plt+0x444f3>
  409c8d:	call   434880 <strcmp@plt+0x310c8>
  409c92:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409c9d:	nop    DWORD PTR [rax]
  409ca0:	push   r12
  409ca2:	push   rbp
  409ca3:	push   rbx
  409ca4:	sub    rsp,0x30
  409ca8:	mov    rax,QWORD PTR fs:0x28
  409cb1:	mov    QWORD PTR [rsp+0x28],rax
  409cb6:	xor    eax,eax
  409cb8:	mov    rax,0x4685a0
  409cbf:	cmp    QWORD PTR [rdi+0x8],rax
  409cc3:	jne    409dc0 <strcmp@plt+0x6608>
  409cc9:	mov    rbx,rdi
  409ccc:	lea    rdi,[rdi+0x18]
  409cd0:	call   40b7c0 <strcmp@plt+0x8008>
  409cd5:	xor    esi,esi
  409cd7:	mov    rdi,rsp
  409cda:	call   424910 <strcmp@plt+0x21158>
  409cdf:	xor    eax,eax
  409ce1:	call   42a550 <strcmp@plt+0x26d98>
  409ce6:	mov    rsi,rsp
  409ce9:	mov    rbp,rax
  409cec:	mov    rdi,rax
  409cef:	call   424b00 <strcmp@plt+0x21348>
  409cf4:	test   rbp,rbp
  409cf7:	je     409d60 <strcmp@plt+0x65a8>
  409cf9:	mov    rdi,rbp
  409cfc:	call   4342d0 <strcmp@plt+0x30b18>
  409d01:	test   rax,rax
  409d04:	mov    QWORD PTR [rbx+0x68],rax
  409d08:	je     409d78 <strcmp@plt+0x65c0>
  409d0a:	mov    rdi,0x4098d0
  409d11:	call   4397c0 <strcmp@plt+0x36008>
  409d16:	mov    QWORD PTR [rbx+0x70],rax
  409d1a:	mov    rax,0x468e3c
  409d21:	mov    eax,DWORD PTR [rax]
  409d23:	test   eax,eax
  409d25:	jle    409d3a <strcmp@plt+0x6582>
  409d27:	lea    rsi,[rip+0x3dfb7]        # 447ce5 <strcmp@plt+0x4452d>
  409d2e:	mov    edi,0x5
  409d33:	xor    eax,eax
  409d35:	call   4306a0 <strcmp@plt+0x2cee8>
  409d3a:	mov    eax,0x1
  409d3f:	mov    rcx,QWORD PTR [rsp+0x28]
  409d44:	xor    rcx,QWORD PTR fs:0x28
  409d4d:	jne    409dda <strcmp@plt+0x6622>
  409d53:	add    rsp,0x30
  409d57:	pop    rbx
  409d58:	pop    rbp
  409d59:	pop    r12
  409d5b:	ret    
  409d5c:	nop    DWORD PTR [rax+0x0]
  409d60:	mov    rax,0x468e3c
  409d67:	mov    ecx,DWORD PTR [rax]
  409d69:	test   ecx,ecx
  409d6b:	jg     409da0 <strcmp@plt+0x65e8>
  409d6d:	xor    eax,eax
  409d6f:	jmp    409d3f <strcmp@plt+0x6587>
  409d71:	nop    DWORD PTR [rax+0x0]
  409d78:	mov    rax,0x468e3c
  409d7f:	mov    edx,DWORD PTR [rax]
  409d81:	test   edx,edx
  409d83:	jle    409d6d <strcmp@plt+0x65b5>
  409d85:	lea    rsi,[rip+0x3e064]        # 447df0 <strcmp@plt+0x44638>
  409d8c:	xor    eax,eax
  409d8e:	mov    edi,0x5
  409d93:	call   4306a0 <strcmp@plt+0x2cee8>
  409d98:	xor    eax,eax
  409d9a:	jmp    409d3f <strcmp@plt+0x6587>
  409d9c:	nop    DWORD PTR [rax+0x0]
  409da0:	lea    rsi,[rip+0x3e019]        # 447dc0 <strcmp@plt+0x44608>
  409da7:	xor    eax,eax
  409da9:	mov    edi,0x5
  409dae:	call   4306a0 <strcmp@plt+0x2cee8>
  409db3:	xor    eax,eax
  409db5:	jmp    409d3f <strcmp@plt+0x6587>
  409db7:	nop    WORD PTR [rax+rax*1+0x0]
  409dc0:	lea    rdx,[rip+0x3dfd1]        # 447d98 <strcmp@plt+0x445e0>
  409dc7:	lea    rsi,[rip+0x3e8ba]        # 448688 <strcmp@plt+0x44ed0>
  409dce:	lea    rdi,[rip+0x3ded6]        # 447cab <strcmp@plt+0x444f3>
  409dd5:	call   434880 <strcmp@plt+0x310c8>
  409dda:	call   403460 <__stack_chk_fail@plt>
  409ddf:	nop
  409de0:	push   rbp
  409de1:	push   rbx
  409de2:	sub    rsp,0x8
  409de6:	mov    rax,0x4685a0
  409ded:	cmp    QWORD PTR [rdi+0x8],rax
  409df1:	jne    409ee8 <strcmp@plt+0x6730>
  409df7:	lea    rsi,[rip+0x3df01]        # 447cff <strcmp@plt+0x44547>
  409dfe:	xor    eax,eax
  409e00:	mov    rbx,rdi
  409e03:	mov    edi,0x4
  409e08:	call   4306a0 <strcmp@plt+0x2cee8>
  409e0d:	mov    rax,QWORD PTR [rbx+0x48]
  409e11:	mov    eax,DWORD PTR [rax+0x18]
  409e14:	test   eax,eax
  409e16:	jne    409e35 <strcmp@plt+0x667d>
  409e18:	lea    rsi,[rip+0x3e009]        # 447e28 <strcmp@plt+0x44670>
  409e1f:	mov    edi,0x1
  409e24:	xor    eax,eax
  409e26:	call   4306a0 <strcmp@plt+0x2cee8>
  409e2b:	mov    edi,0x2
  409e30:	call   43ae90 <strcmp@plt+0x376d8>
  409e35:	lea    rsi,[rip+0x3e044]        # 447e80 <strcmp@plt+0x446c8>
  409e3c:	mov    edi,0x4
  409e41:	xor    eax,eax
  409e43:	call   4306a0 <strcmp@plt+0x2cee8>
  409e48:	mov    rdi,QWORD PTR [rbx+0x70]
  409e4c:	call   43a6e0 <strcmp@plt+0x36f28>
  409e51:	lea    rsi,[rip+0x3e058]        # 447eb0 <strcmp@plt+0x446f8>
  409e58:	mov    rbp,rax
  409e5b:	mov    edi,0x4
  409e60:	xor    eax,eax
  409e62:	call   4306a0 <strcmp@plt+0x2cee8>
  409e67:	mov    rsi,0x409940
  409e6e:	mov    edx,0x4
  409e73:	mov    rdi,rbp
  409e76:	call   42d820 <strcmp@plt+0x2a068>
  409e7b:	mov    rdi,rbp
  409e7e:	call   42dac0 <strcmp@plt+0x2a308>
  409e83:	mov    rdi,QWORD PTR [rbx+0x30]
  409e87:	mov    esi,0x4
  409e8c:	call   409530 <strcmp@plt+0x5d78>
  409e91:	mov    rdi,QWORD PTR [rbx+0x68]
  409e95:	call   434230 <strcmp@plt+0x30a78>
  409e9a:	lea    rsi,[rip+0x3de71]        # 447d12 <strcmp@plt+0x4455a>
  409ea1:	mov    rbp,rax
  409ea4:	mov    edi,0x4
  409ea9:	xor    eax,eax
  409eab:	call   4306a0 <strcmp@plt+0x2cee8>
  409eb0:	mov    rax,QWORD PTR [rbx+0x38]
  409eb4:	mov    rsi,QWORD PTR [rbx+0x68]
  409eb8:	mov    rdi,QWORD PTR [rbx+0x40]
  409ebc:	call   QWORD PTR [rax+0x30]
  409ebf:	mov    rdi,rbp
  409ec2:	call   42a820 <strcmp@plt+0x27068>
  409ec7:	add    rsp,0x8
  409ecb:	lea    rsi,[rip+0x3d7e6]        # 4476b8 <strcmp@plt+0x43f00>
  409ed2:	mov    rdx,rax
  409ed5:	pop    rbx
  409ed6:	pop    rbp
  409ed7:	mov    edi,0x4
  409edc:	xor    eax,eax
  409ede:	jmp    4306a0 <strcmp@plt+0x2cee8>
  409ee3:	nop    DWORD PTR [rax+rax*1+0x0]
  409ee8:	lea    rdx,[rip+0x3dea9]        # 447d98 <strcmp@plt+0x445e0>
  409eef:	lea    rsi,[rip+0x3e792]        # 448688 <strcmp@plt+0x44ed0>
  409ef6:	lea    rdi,[rip+0x3ddae]        # 447cab <strcmp@plt+0x444f3>
  409efd:	call   434880 <strcmp@plt+0x310c8>
  409f02:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409f0d:	nop    DWORD PTR [rax]
  409f10:	push   r13
  409f12:	push   r12
  409f14:	push   rbp
  409f15:	push   rbx
  409f16:	sub    rsp,0x8
  409f1a:	mov    rax,0x4685a0
  409f21:	cmp    QWORD PTR [rdi+0x8],rax
  409f25:	jne    40a038 <strcmp@plt+0x6880>
  409f2b:	mov    rbp,rdi
  409f2e:	mov    rdi,QWORD PTR [rdi+0x50]
  409f32:	mov    r12,rsi
  409f35:	mov    ebx,edx
  409f37:	call   43a470 <strcmp@plt+0x36cb8>
  409f3c:	test   rax,rax
  409f3f:	mov    r13,rax
  409f42:	je     40a000 <strcmp@plt+0x6848>
  409f48:	mov    rcx,QWORD PTR [rax+0x10]
  409f4c:	mov    rax,QWORD PTR [rcx+0x8]
  409f50:	cmp    rcx,rax
  409f53:	je     409f68 <strcmp@plt+0x67b0>
  409f55:	nop    DWORD PTR [rax]
  409f58:	mov    rdx,QWORD PTR [rax+0x10]
  409f5c:	mov    BYTE PTR [rdx+0x8],bl
  409f5f:	mov    rax,QWORD PTR [rax+0x8]
  409f63:	cmp    rcx,rax
  409f66:	jne    409f58 <strcmp@plt+0x67a0>
  409f68:	mov    rcx,QWORD PTR [r13+0x18]
  409f6c:	mov    rax,QWORD PTR [rcx+0x8]
  409f70:	cmp    rcx,rax
  409f73:	je     409f88 <strcmp@plt+0x67d0>
  409f75:	nop    DWORD PTR [rax]
  409f78:	mov    rdx,QWORD PTR [rax+0x10]
  409f7c:	mov    BYTE PTR [rdx+0x8],bl
  409f7f:	mov    rax,QWORD PTR [rax+0x8]
  409f83:	cmp    rcx,rax
  409f86:	jne    409f78 <strcmp@plt+0x67c0>
  409f88:	cmp    BYTE PTR [r13+0x20],0x1
  409f8d:	mov    rax,QWORD PTR [r13+0x8]
  409f91:	setne  BYTE PTR [r13+0x20]
  409f96:	mov    rbx,QWORD PTR [rax+0x8]
  409f9a:	cmp    rax,rbx
  409f9d:	je     409fd4 <strcmp@plt+0x681c>
  409f9f:	nop
  409fa0:	mov    r12,QWORD PTR [rbx+0x10]
  409fa4:	mov    rax,QWORD PTR [rbp+0x38]
  409fa8:	mov    rdi,QWORD PTR [rbp+0x40]
  409fac:	mov    rsi,r12
  409faf:	call   QWORD PTR [rax+0x30]
  409fb2:	mov    rdi,r12
  409fb5:	call   4342b0 <strcmp@plt+0x30af8>
  409fba:	mov    edx,0x1
  409fbf:	mov    rsi,rax
  409fc2:	mov    rdi,rbp
  409fc5:	call   4083c0 <strcmp@plt+0x4c08>
  409fca:	mov    rbx,QWORD PTR [rbx+0x8]
  409fce:	cmp    QWORD PTR [r13+0x8],rbx
  409fd2:	jne    409fa0 <strcmp@plt+0x67e8>
  409fd4:	mov    rax,QWORD PTR [rbp+0x38]
  409fd8:	mov    rsi,QWORD PTR [rbp+0x68]
  409fdc:	mov    rdi,QWORD PTR [rbp+0x40]
  409fe0:	call   QWORD PTR [rax+0x30]
  409fe3:	mov    rdi,rbp
  409fe6:	call   4083d0 <strcmp@plt+0x4c18>
  409feb:	add    rsp,0x8
  409fef:	mov    eax,0x1
  409ff4:	pop    rbx
  409ff5:	pop    rbp
  409ff6:	pop    r12
  409ff8:	pop    r13
  409ffa:	ret    
  409ffb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a000:	mov    rax,0x468e3c
  40a007:	cmp    DWORD PTR [rax],0x1
  40a00a:	jg     40a019 <strcmp@plt+0x6861>
  40a00c:	xor    eax,eax
  40a00e:	add    rsp,0x8
  40a012:	pop    rbx
  40a013:	pop    rbp
  40a014:	pop    r12
  40a016:	pop    r13
  40a018:	ret    
  40a019:	lea    rsi,[rip+0x3deb8]        # 447ed8 <strcmp@plt+0x44720>
  40a020:	xor    eax,eax
  40a022:	mov    rdx,r12
  40a025:	mov    edi,0x6
  40a02a:	call   4306a0 <strcmp@plt+0x2cee8>
  40a02f:	xor    eax,eax
  40a031:	jmp    40a00e <strcmp@plt+0x6856>
  40a033:	nop    DWORD PTR [rax+rax*1+0x0]
  40a038:	lea    rdx,[rip+0x3dd59]        # 447d98 <strcmp@plt+0x445e0>
  40a03f:	lea    rsi,[rip+0x3e642]        # 448688 <strcmp@plt+0x44ed0>
  40a046:	lea    rdi,[rip+0x3dc5e]        # 447cab <strcmp@plt+0x444f3>
  40a04d:	call   434880 <strcmp@plt+0x310c8>
  40a052:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a05d:	nop    DWORD PTR [rax]
  40a060:	push   r15
  40a062:	push   r14
  40a064:	push   r13
  40a066:	push   r12
  40a068:	push   rbp
  40a069:	push   rbx
  40a06a:	sub    rsp,0x18
  40a06e:	mov    rax,0x4685a0
  40a075:	cmp    QWORD PTR [rdi+0x8],rax
  40a079:	jne    40a218 <strcmp@plt+0x6a60>
  40a07f:	xor    eax,eax
  40a081:	mov    rbx,rdi
  40a084:	mov    r12,rsi
  40a087:	call   421b30 <strcmp@plt+0x1e378>
  40a08c:	test   rax,rax
  40a08f:	mov    rbp,rax
  40a092:	je     40a232 <strcmp@plt+0x6a7a>
  40a098:	mov    edi,DWORD PTR [r12+0x48]
  40a09d:	mov    rax,QWORD PTR [rbx+0x68]
  40a0a1:	test   edi,edi
  40a0a3:	mov    QWORD PTR [rsp+0x8],rax
  40a0a8:	jne    40a150 <strcmp@plt+0x6998>
  40a0ae:	mov    rdi,r12
  40a0b1:	call   424b80 <strcmp@plt+0x213c8>
  40a0b6:	lea    rdi,[r12+0x20]
  40a0bb:	mov    r14,rax
  40a0be:	call   424b80 <strcmp@plt+0x213c8>
  40a0c3:	mov    r13,rax
  40a0c6:	mov    rdi,QWORD PTR [rbx+0x30]
  40a0ca:	mov    rsi,r13
  40a0cd:	call   409450 <strcmp@plt+0x5c98>
  40a0d2:	test   rax,rax
  40a0d5:	mov    r15,rax
  40a0d8:	je     40a180 <strcmp@plt+0x69c8>
  40a0de:	mov    rdi,rax
  40a0e1:	call   433030 <strcmp@plt+0x2f878>
  40a0e6:	mov    rdi,rax
  40a0e9:	call   424b80 <strcmp@plt+0x213c8>
  40a0ee:	mov    QWORD PTR [rbp+0x0],rax
  40a0f2:	cmp    BYTE PTR [r15+0x10],0x0
  40a0f7:	jne    40a109 <strcmp@plt+0x6951>
  40a0f9:	mov    rax,0x468e3c
  40a100:	cmp    DWORD PTR [rax],0x1
  40a103:	jg     40a1c8 <strcmp@plt+0x6a10>
  40a109:	mov    rax,QWORD PTR [rbx+0x38]
  40a10d:	mov    rdi,QWORD PTR [rbx+0x40]
  40a111:	mov    r9,rbp
  40a114:	mov    r8,r12
  40a117:	xor    ecx,ecx
  40a119:	mov    rdx,r15
  40a11c:	mov    rsi,QWORD PTR [rsp+0x8]
  40a121:	call   QWORD PTR [rax+0x40]
  40a124:	mov    eax,DWORD PTR [rbx+0x58]
  40a127:	mov    rdi,r14
  40a12a:	mov    DWORD PTR [rbp+0x14],eax
  40a12d:	call   424750 <strcmp@plt+0x20f98>
  40a132:	mov    rdi,r13
  40a135:	call   424750 <strcmp@plt+0x20f98>
  40a13a:	add    rsp,0x18
  40a13e:	mov    rax,rbp
  40a141:	pop    rbx
  40a142:	pop    rbp
  40a143:	pop    r12
  40a145:	pop    r13
  40a147:	pop    r14
  40a149:	pop    r15
  40a14b:	ret    
  40a14c:	nop    DWORD PTR [rax+0x0]
  40a150:	mov    edx,0x20
  40a155:	mov    rsi,r12
  40a158:	call   429040 <strcmp@plt+0x25888>
  40a15d:	mov    edi,DWORD PTR [r12+0x48]
  40a162:	lea    rsi,[r12+0x20]
  40a167:	mov    edx,0x20
  40a16c:	mov    r14,rax
  40a16f:	call   429040 <strcmp@plt+0x25888>
  40a174:	mov    r13,rax
  40a177:	jmp    40a0c6 <strcmp@plt+0x690e>
  40a17c:	nop    DWORD PTR [rax+0x0]
  40a180:	mov    rax,0x468e3c
  40a187:	mov    eax,DWORD PTR [rax]
  40a189:	test   eax,eax
  40a18b:	jg     40a1f0 <strcmp@plt+0x6a38>
  40a18d:	lea    rdi,[rbx+0x18]
  40a191:	mov    rdx,r14
  40a194:	mov    rsi,r13
  40a197:	call   40cc50 <strcmp@plt+0x9498>
  40a19c:	mov    rdi,QWORD PTR [rbx+0x30]
  40a1a0:	mov    rsi,r13
  40a1a3:	call   409450 <strcmp@plt+0x5c98>
  40a1a8:	mov    rdi,rax
  40a1ab:	mov    r15,rax
  40a1ae:	call   433030 <strcmp@plt+0x2f878>
  40a1b3:	mov    rdi,rax
  40a1b6:	call   424b80 <strcmp@plt+0x213c8>
  40a1bb:	mov    QWORD PTR [rbp+0x0],rax
  40a1bf:	jmp    40a109 <strcmp@plt+0x6951>
  40a1c4:	nop    DWORD PTR [rax+0x0]
  40a1c8:	mov    rdi,r13
  40a1cb:	call   424890 <strcmp@plt+0x210d8>
  40a1d0:	lea    rsi,[rip+0x3ddc1]        # 447f98 <strcmp@plt+0x447e0>
  40a1d7:	mov    rdx,rax
  40a1da:	mov    edi,0x6
  40a1df:	xor    eax,eax
  40a1e1:	call   4306a0 <strcmp@plt+0x2cee8>
  40a1e6:	jmp    40a109 <strcmp@plt+0x6951>
  40a1eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1f0:	mov    rdi,r13
  40a1f3:	call   424890 <strcmp@plt+0x210d8>
  40a1f8:	lea    rsi,[rip+0x3dd69]        # 447f68 <strcmp@plt+0x447b0>
  40a1ff:	mov    rdx,rax
  40a202:	mov    edi,0x5
  40a207:	xor    eax,eax
  40a209:	call   4306a0 <strcmp@plt+0x2cee8>
  40a20e:	jmp    40a18d <strcmp@plt+0x69d5>
  40a213:	nop    DWORD PTR [rax+rax*1+0x0]
  40a218:	lea    rdx,[rip+0x3db79]        # 447d98 <strcmp@plt+0x445e0>
  40a21f:	lea    rsi,[rip+0x3e462]        # 448688 <strcmp@plt+0x44ed0>
  40a226:	lea    rdi,[rip+0x3da7e]        # 447cab <strcmp@plt+0x444f3>
  40a22d:	call   434880 <strcmp@plt+0x310c8>
  40a232:	lea    rsi,[rip+0x3dcef]        # 447f28 <strcmp@plt+0x44770>
  40a239:	mov    edi,0x3
  40a23e:	xor    eax,eax
  40a240:	call   4306a0 <strcmp@plt+0x2cee8>
  40a245:	jmp    40a13a <strcmp@plt+0x6982>
  40a24a:	nop    WORD PTR [rax+rax*1+0x0]
  40a250:	push   r15
  40a252:	push   r14
  40a254:	push   r13
  40a256:	push   r12
  40a258:	push   rbp
  40a259:	push   rbx
  40a25a:	sub    rsp,0x18
  40a25e:	mov    rax,0x4685a0
  40a265:	cmp    QWORD PTR [rdi+0x8],rax
  40a269:	jne    40a3e0 <strcmp@plt+0x6c28>
  40a26f:	mov    rbx,rdi
  40a272:	mov    rdi,QWORD PTR [rdi+0x50]
  40a276:	mov    r13,rsi
  40a279:	mov    r15,rdx
  40a27c:	mov    rbp,rcx
  40a27f:	call   43a470 <strcmp@plt+0x36cb8>
  40a284:	test   rax,rax
  40a287:	mov    r12,rax
  40a28a:	je     40a380 <strcmp@plt+0x6bc8>
  40a290:	mov    rsi,rbp
  40a293:	mov    rdi,r15
  40a296:	call   424df0 <strcmp@plt+0x21638>
  40a29b:	test   eax,eax
  40a29d:	mov    edx,0x1
  40a2a2:	je     40a365 <strcmp@plt+0x6bad>
  40a2a8:	mov    eax,DWORD PTR [rbp+0x18]
  40a2ab:	test   eax,eax
  40a2ad:	jne    40a390 <strcmp@plt+0x6bd8>
  40a2b3:	cmp    DWORD PTR [r15+0x18],0x2
  40a2b8:	lea    rcx,[r12+0x30]
  40a2bd:	mov    rax,QWORD PTR [r12+0x10]
  40a2c2:	mov    r14,QWORD PTR [r12+0x18]
  40a2c7:	mov    QWORD PTR [rsp],rcx
  40a2cb:	je     40a400 <strcmp@plt+0x6c48>
  40a2d1:	mov    rax,QWORD PTR [r14+0x8]
  40a2d5:	cmp    r14,rax
  40a2d8:	jne    40a2e8 <strcmp@plt+0x6b30>
  40a2da:	jmp    40a33b <strcmp@plt+0x6b83>
  40a2dc:	nop    DWORD PTR [rax+0x0]
  40a2e0:	cmp    r14,r13
  40a2e3:	mov    rax,r13
  40a2e6:	je     40a33b <strcmp@plt+0x6b83>
  40a2e8:	mov    rbp,QWORD PTR [rax+0x10]
  40a2ec:	mov    r13,QWORD PTR [rax+0x8]
  40a2f0:	mov    rax,QWORD PTR [rbp+0x0]
  40a2f4:	cmp    DWORD PTR [rax+0x18],0x1
  40a2f8:	je     40a30d <strcmp@plt+0x6b55>
  40a2fa:	lea    rsi,[rip+0x3dccf]        # 447fd0 <strcmp@plt+0x44818>
  40a301:	mov    edi,0x2
  40a306:	xor    eax,eax
  40a308:	call   4306a0 <strcmp@plt+0x2cee8>
  40a30d:	mov    rdi,QWORD PTR [rbx+0x68]
  40a311:	call   434230 <strcmp@plt+0x30a78>
  40a316:	mov    rsi,rbp
  40a319:	mov    rdi,rax
  40a31c:	mov    r12,rax
  40a31f:	call   42ae50 <strcmp@plt+0x27698>
  40a324:	test   al,al
  40a326:	je     40a2e0 <strcmp@plt+0x6b28>
  40a328:	mov    rsi,rbp
  40a32b:	mov    rdi,r12
  40a32e:	call   42b000 <strcmp@plt+0x27848>
  40a333:	cmp    r14,r13
  40a336:	mov    rax,r13
  40a339:	jne    40a2e8 <strcmp@plt+0x6b30>
  40a33b:	mov    rax,QWORD PTR [rsp]
  40a33f:	cmp    QWORD PTR [rax],0x0
  40a343:	je     40a5a6 <strcmp@plt+0x6dee>
  40a349:	mov    rax,QWORD PTR [rbx+0x38]
  40a34d:	mov    rsi,QWORD PTR [rbx+0x68]
  40a351:	mov    rdi,QWORD PTR [rbx+0x40]
  40a355:	call   QWORD PTR [rax+0x30]
  40a358:	mov    rdi,rbx
  40a35b:	call   4083d0 <strcmp@plt+0x4c18>
  40a360:	mov    edx,0x1
  40a365:	add    rsp,0x18
  40a369:	mov    eax,edx
  40a36b:	pop    rbx
  40a36c:	pop    rbp
  40a36d:	pop    r12
  40a36f:	pop    r13
  40a371:	pop    r14
  40a373:	pop    r15
  40a375:	ret    
  40a376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a380:	mov    rax,0x468e3c
  40a387:	cmp    DWORD PTR [rax],0x1
  40a38a:	jg     40a3c0 <strcmp@plt+0x6c08>
  40a38c:	xor    edx,edx
  40a38e:	jmp    40a365 <strcmp@plt+0x6bad>
  40a390:	cmp    eax,0x1
  40a393:	je     40a418 <strcmp@plt+0x6c60>
  40a399:	mov    rax,0x468e3c
  40a3a0:	cmp    DWORD PTR [rax],0x1
  40a3a3:	jle    40a38c <strcmp@plt+0x6bd4>
  40a3a5:	lea    rsi,[rip+0x3dca4]        # 448050 <strcmp@plt+0x44898>
  40a3ac:	mov    edi,0x6
  40a3b1:	xor    eax,eax
  40a3b3:	call   4306a0 <strcmp@plt+0x2cee8>
  40a3b8:	xor    edx,edx
  40a3ba:	jmp    40a365 <strcmp@plt+0x6bad>
  40a3bc:	nop    DWORD PTR [rax+0x0]
  40a3c0:	lea    rsi,[rip+0x3dc39]        # 448000 <strcmp@plt+0x44848>
  40a3c7:	mov    rdx,r13
  40a3ca:	mov    edi,0x6
  40a3cf:	xor    eax,eax
  40a3d1:	call   4306a0 <strcmp@plt+0x2cee8>
  40a3d6:	xor    edx,edx
  40a3d8:	jmp    40a365 <strcmp@plt+0x6bad>
  40a3da:	nop    WORD PTR [rax+rax*1+0x0]
  40a3e0:	lea    rdx,[rip+0x3d9b1]        # 447d98 <strcmp@plt+0x445e0>
  40a3e7:	lea    rsi,[rip+0x3e29a]        # 448688 <strcmp@plt+0x44ed0>
  40a3ee:	lea    rdi,[rip+0x3d8b6]        # 447cab <strcmp@plt+0x444f3>
  40a3f5:	call   434880 <strcmp@plt+0x310c8>
  40a3fa:	nop    WORD PTR [rax+rax*1+0x0]
  40a400:	lea    rcx,[r12+0x28]
  40a405:	mov    r14,rax
  40a408:	mov    QWORD PTR [rsp],rcx
  40a40c:	jmp    40a2d1 <strcmp@plt+0x6b19>
  40a411:	nop    DWORD PTR [rax+0x0]
  40a418:	mov    rdi,rbp
  40a41b:	call   4251c0 <strcmp@plt+0x21a08>
  40a420:	cmp    ax,0x2
  40a424:	je     40a55a <strcmp@plt+0x6da2>
  40a42a:	cmp    ax,0xa
  40a42e:	jne    40a399 <strcmp@plt+0x6be1>
  40a434:	lea    rax,[r12+0x30]
  40a439:	mov    r13,QWORD PTR [r12+0x18]
  40a43e:	mov    QWORD PTR [rsp+0x8],rax
  40a443:	mov    rax,QWORD PTR [r13+0x8]
  40a447:	cmp    r13,rax
  40a44a:	jne    40a487 <strcmp@plt+0x6ccf>
  40a44c:	jmp    40a528 <strcmp@plt+0x6d70>
  40a451:	nop    DWORD PTR [rax+0x0]
  40a458:	cmp    eax,0x1
  40a45b:	je     40a470 <strcmp@plt+0x6cb8>
  40a45d:	lea    rsi,[rip+0x3db6c]        # 447fd0 <strcmp@plt+0x44818>
  40a464:	mov    edi,0x2
  40a469:	xor    eax,eax
  40a46b:	call   4306a0 <strcmp@plt+0x2cee8>
  40a470:	mov    rsi,rbp
  40a473:	mov    rdi,r14
  40a476:	call   42a510 <strcmp@plt+0x26d58>
  40a47b:	cmp    r13,r12
  40a47e:	mov    rax,r12
  40a481:	je     40a528 <strcmp@plt+0x6d70>
  40a487:	mov    r14,QWORD PTR [rax+0x10]
  40a48b:	mov    r12,QWORD PTR [rax+0x8]
  40a48f:	mov    rax,QWORD PTR [r14]
  40a492:	mov    eax,DWORD PTR [rax+0x18]
  40a495:	test   eax,eax
  40a497:	jne    40a458 <strcmp@plt+0x6ca0>
  40a499:	mov    rdi,QWORD PTR [rbx+0x68]
  40a49d:	call   434230 <strcmp@plt+0x30a78>
  40a4a2:	mov    rsi,r14
  40a4a5:	mov    rdi,rax
  40a4a8:	mov    QWORD PTR [rsp],rax
  40a4ac:	call   42ae50 <strcmp@plt+0x27698>
  40a4b1:	test   al,al
  40a4b3:	je     40a47b <strcmp@plt+0x6cc3>
  40a4b5:	mov    rdi,QWORD PTR [rsp]
  40a4b9:	mov    rsi,rbp
  40a4bc:	call   42ac90 <strcmp@plt+0x274d8>
  40a4c1:	test   rax,rax
  40a4c4:	je     40a5ba <strcmp@plt+0x6e02>
  40a4ca:	mov    rax,0x468e3c
  40a4d1:	cmp    DWORD PTR [rax],0x1
  40a4d4:	jle    40a4e9 <strcmp@plt+0x6d31>
  40a4d6:	lea    rsi,[rip+0x3dbab]        # 448088 <strcmp@plt+0x448d0>
  40a4dd:	mov    edi,0x6
  40a4e2:	xor    eax,eax
  40a4e4:	call   4306a0 <strcmp@plt+0x2cee8>
  40a4e9:	mov    rdi,QWORD PTR [rsp]
  40a4ed:	xor    edx,edx
  40a4ef:	xor    esi,esi
  40a4f1:	call   42aa50 <strcmp@plt+0x27298>
  40a4f6:	mov    rdi,QWORD PTR [rbx+0x50]
  40a4fa:	mov    rsi,r14
  40a4fd:	mov    QWORD PTR [rsp],rax
  40a501:	call   42ead0 <strcmp@plt+0x2b318>
  40a506:	mov    rax,QWORD PTR [rsp]
  40a50a:	mov    rdi,r14
  40a50d:	mov    rsi,rax
  40a510:	call   42da30 <strcmp@plt+0x2a278>
  40a515:	cmp    r13,r12
  40a518:	mov    rax,r12
  40a51b:	jne    40a487 <strcmp@plt+0x6ccf>
  40a521:	nop    DWORD PTR [rax+0x0]
  40a528:	mov    rax,QWORD PTR [rsp+0x8]
  40a52d:	mov    rdi,QWORD PTR [rax]
  40a530:	test   rdi,rdi
  40a533:	je     40a570 <strcmp@plt+0x6db8>
  40a535:	mov    rsi,rbp
  40a538:	call   424df0 <strcmp@plt+0x21638>
  40a53d:	test   eax,eax
  40a53f:	je     40a590 <strcmp@plt+0x6dd8>
  40a541:	mov    rdi,QWORD PTR [rbx+0x68]
  40a545:	call   434230 <strcmp@plt+0x30a78>
  40a54a:	mov    rsi,rbp
  40a54d:	mov    rdi,rax
  40a550:	call   42aeb0 <strcmp@plt+0x276f8>
  40a555:	jmp    40a349 <strcmp@plt+0x6b91>
  40a55a:	lea    rax,[r12+0x28]
  40a55f:	mov    r13,QWORD PTR [r12+0x10]
  40a564:	mov    QWORD PTR [rsp+0x8],rax
  40a569:	jmp    40a443 <strcmp@plt+0x6c8b>
  40a56e:	xchg   ax,ax
  40a570:	test   r15,r15
  40a573:	je     40a5ce <strcmp@plt+0x6e16>
  40a575:	mov    rdi,r15
  40a578:	call   424b80 <strcmp@plt+0x213c8>
  40a57d:	mov    rcx,QWORD PTR [rsp+0x8]
  40a582:	mov    QWORD PTR [rcx],rax
  40a585:	jmp    40a541 <strcmp@plt+0x6d89>
  40a587:	nop    WORD PTR [rax+rax*1+0x0]
  40a590:	mov    r15,QWORD PTR [rsp+0x8]
  40a595:	mov    rdi,QWORD PTR [r15]
  40a598:	call   424750 <strcmp@plt+0x20f98>
  40a59d:	mov    QWORD PTR [r15],0x0
  40a5a4:	jmp    40a541 <strcmp@plt+0x6d89>
  40a5a6:	mov    rdi,r15
  40a5a9:	call   424b80 <strcmp@plt+0x213c8>
  40a5ae:	mov    rcx,QWORD PTR [rsp]
  40a5b2:	mov    QWORD PTR [rcx],rax
  40a5b5:	jmp    40a349 <strcmp@plt+0x6b91>
  40a5ba:	mov    rdi,QWORD PTR [rsp]
  40a5be:	mov    rdx,rbp
  40a5c1:	mov    rsi,r14
  40a5c4:	call   42af00 <strcmp@plt+0x27748>
  40a5c9:	jmp    40a47b <strcmp@plt+0x6cc3>
  40a5ce:	xor    edi,edi
  40a5d0:	call   424670 <strcmp@plt+0x20eb8>
  40a5d5:	mov    rcx,QWORD PTR [rsp+0x8]
  40a5da:	mov    QWORD PTR [rcx],rax
  40a5dd:	jmp    40a541 <strcmp@plt+0x6d89>
  40a5e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a5ed:	nop    DWORD PTR [rax]
  40a5f0:	mov    rax,0x4685a0
  40a5f7:	cmp    QWORD PTR [rdi+0x8],rax
  40a5fb:	jne    40a608 <strcmp@plt+0x6e50>
  40a5fd:	mov    rax,rdi
  40a600:	ret    
  40a601:	nop    DWORD PTR [rax+0x0]
  40a608:	lea    rdx,[rip+0x3d789]        # 447d98 <strcmp@plt+0x445e0>
  40a60f:	lea    rsi,[rip+0x3e072]        # 448688 <strcmp@plt+0x44ed0>
  40a616:	lea    rdi,[rip+0x3d68e]        # 447cab <strcmp@plt+0x444f3>
  40a61d:	sub    rsp,0x8
  40a621:	call   434880 <strcmp@plt+0x310c8>
  40a626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a630:	push   r12
  40a632:	push   rbp
  40a633:	mov    rbp,rdi
  40a636:	push   rbx
  40a637:	mov    rdi,rdx
  40a63a:	mov    rbx,rsi
  40a63d:	mov    r12,rdx
  40a640:	call   424890 <strcmp@plt+0x210d8>
  40a645:	mov    rdi,QWORD PTR [rbp+0x70]
  40a649:	mov    rsi,rax
  40a64c:	call   43a470 <strcmp@plt+0x36cb8>
  40a651:	test   rax,rax
  40a654:	je     40a680 <strcmp@plt+0x6ec8>
  40a656:	mov    rdi,rbx
  40a659:	mov    rbp,rax
  40a65c:	call   423d60 <strcmp@plt+0x205a8>
  40a661:	mov    rdi,rbx
  40a664:	mov    r12,rax
  40a667:	call   422810 <strcmp@plt+0x1f058>
  40a66c:	cmp    eax,0x1
  40a66f:	je     40a6b8 <strcmp@plt+0x6f00>
  40a671:	xor    eax,eax
  40a673:	pop    rbx
  40a674:	pop    rbp
  40a675:	pop    r12
  40a677:	ret    
  40a678:	nop    DWORD PTR [rax+rax*1+0x0]
  40a680:	mov    rax,0x468e3c
  40a687:	mov    edx,DWORD PTR [rax]
  40a689:	test   edx,edx
  40a68b:	jle    40a671 <strcmp@plt+0x6eb9>
  40a68d:	mov    rdi,r12
  40a690:	call   424890 <strcmp@plt+0x210d8>
  40a695:	lea    rsi,[rip+0x3da34]        # 4480d0 <strcmp@plt+0x44918>
  40a69c:	mov    rdx,rax
  40a69f:	mov    edi,0x5
  40a6a4:	xor    eax,eax
  40a6a6:	call   4306a0 <strcmp@plt+0x2cee8>
  40a6ab:	pop    rbx
  40a6ac:	xor    eax,eax
  40a6ae:	pop    rbp
  40a6af:	pop    r12
  40a6b1:	ret    
  40a6b2:	nop    WORD PTR [rax+rax*1+0x0]
  40a6b8:	mov    rdx,QWORD PTR [rbp+0x8]
  40a6bc:	mov    rsi,r12
  40a6bf:	mov    rdi,rbx
  40a6c2:	call   423fc0 <strcmp@plt+0x20808>
  40a6c7:	cmp    eax,0x1
  40a6ca:	je     40a673 <strcmp@plt+0x6ebb>
  40a6cc:	mov    rax,0x468e3c
  40a6d3:	mov    eax,DWORD PTR [rax]
  40a6d5:	test   eax,eax
  40a6d7:	jle    40a671 <strcmp@plt+0x6eb9>
  40a6d9:	lea    rsi,[rip+0x3da20]        # 448100 <strcmp@plt+0x44948>
  40a6e0:	mov    edi,0x5
  40a6e5:	xor    eax,eax
  40a6e7:	call   4306a0 <strcmp@plt+0x2cee8>
  40a6ec:	jmp    40a671 <strcmp@plt+0x6eb9>
  40a6ee:	xchg   ax,ax
  40a6f0:	push   r15
  40a6f2:	push   r14
  40a6f4:	push   r13
  40a6f6:	push   r12
  40a6f8:	push   rbp
  40a6f9:	push   rbx
  40a6fa:	sub    rsp,0x168
  40a701:	mov    rax,QWORD PTR fs:0x28
  40a70a:	mov    QWORD PTR [rsp+0x158],rax
  40a712:	xor    eax,eax
  40a714:	mov    rax,0x4685a0
  40a71b:	cmp    QWORD PTR [rdi+0x8],rax
  40a71f:	mov    QWORD PTR [rsp+0x8],rdx
  40a724:	jne    40ace8 <strcmp@plt+0x7530>
  40a72a:	mov    rbx,rdi
  40a72d:	mov    rdi,rsi
  40a730:	mov    r14,rsi
  40a733:	xor    r12d,r12d
  40a736:	xor    ebp,ebp
  40a738:	call   422770 <strcmp@plt+0x1efb8>
  40a73d:	cmp    eax,0x8
  40a740:	mov    r15d,eax
  40a743:	je     40ac40 <strcmp@plt+0x7488>
  40a749:	cmp    r15d,0x7
  40a74d:	ja     40aad0 <strcmp@plt+0x7318>
  40a753:	lea    rcx,[rip+0x3df0e]        # 448668 <strcmp@plt+0x44eb0>
  40a75a:	mov    edx,r15d
  40a75d:	movsxd rax,DWORD PTR [rcx+rdx*4]
  40a761:	add    rax,rcx
  40a764:	jmp    rax
  40a766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a770:	mov    rbx,0x468e3c
  40a777:	mov    ecx,DWORD PTR [rbx]
  40a779:	test   ecx,ecx
  40a77b:	jg     40ad58 <strcmp@plt+0x75a0>
  40a781:	nop    DWORD PTR [rax+0x0]
  40a788:	xor    r14d,r14d
  40a78b:	mov    rcx,QWORD PTR [rsp+0x158]
  40a793:	xor    rcx,QWORD PTR fs:0x28
  40a79c:	mov    eax,r14d
  40a79f:	jne    40b70d <strcmp@plt+0x7f55>
  40a7a5:	add    rsp,0x168
  40a7ac:	pop    rbx
  40a7ad:	pop    rbp
  40a7ae:	pop    r12
  40a7b0:	pop    r13
  40a7b2:	pop    r14
  40a7b4:	pop    r15
  40a7b6:	ret    
  40a7b7:	nop    WORD PTR [rax+rax*1+0x0]
  40a7c0:	mov    rax,QWORD PTR [r14]
  40a7c3:	mov    QWORD PTR [rsp+0x60],rax
  40a7c8:	mov    rax,QWORD PTR [r14+0x8]
  40a7cc:	mov    QWORD PTR [rsp+0x68],rax
  40a7d1:	mov    rax,QWORD PTR [r14+0x10]
  40a7d5:	mov    QWORD PTR [rsp+0x70],rax
  40a7da:	mov    rax,QWORD PTR [r14+0x18]
  40a7de:	mov    QWORD PTR [rsp+0x78],rax
  40a7e3:	mov    rax,QWORD PTR [r14+0x20]
  40a7e7:	mov    QWORD PTR [rsp+0x80],rax
  40a7ef:	mov    rax,QWORD PTR [r14+0x28]
  40a7f3:	mov    QWORD PTR [rsp+0x88],rax
  40a7fb:	mov    rax,QWORD PTR [r14+0x30]
  40a7ff:	mov    QWORD PTR [rsp+0x90],rax
  40a807:	mov    rax,QWORD PTR [r14+0x38]
  40a80b:	mov    QWORD PTR [rsp+0x98],rax
  40a813:	xor    eax,eax
  40a815:	call   424740 <strcmp@plt+0x20f88>
  40a81a:	mov    r13,rax
  40a81d:	xor    eax,eax
  40a81f:	call   424740 <strcmp@plt+0x20f88>
  40a824:	mov    r12,rax
  40a827:	lea    rax,[rsp+0x60]
  40a82c:	mov    r14,rax
  40a82f:	mov    rdi,rax
  40a832:	mov    QWORD PTR [rsp+0x10],rax
  40a837:	call   423110 <strcmp@plt+0x1f958>
  40a83c:	mov    rdi,r14
  40a83f:	mov    rsi,r13
  40a842:	mov    r15,rax
  40a845:	call   4229d0 <strcmp@plt+0x1f218>
  40a84a:	cmp    eax,0x1
  40a84d:	mov    r14d,eax
  40a850:	je     40ad08 <strcmp@plt+0x7550>
  40a856:	mov    rax,0x468e3c
  40a85d:	mov    QWORD PTR [rsp+0x18],rax
  40a862:	xor    edi,edi
  40a864:	call   42dac0 <strcmp@plt+0x2a308>
  40a869:	mov    rdi,r13
  40a86c:	xor    r14d,r14d
  40a86f:	call   424750 <strcmp@plt+0x20f98>
  40a874:	mov    rdi,r12
  40a877:	call   424750 <strcmp@plt+0x20f98>
  40a87c:	mov    rax,QWORD PTR [rsp+0x18]
  40a881:	cmp    r14d,0x1
  40a885:	mov    eax,DWORD PTR [rax]
  40a887:	je     40aaa7 <strcmp@plt+0x72ef>
  40a88d:	nop    DWORD PTR [rax]
  40a890:	test   eax,eax
  40a892:	jle    40a788 <strcmp@plt+0x6fd0>
  40a898:	lea    rsi,[rip+0x3dd11]        # 4485b0 <strcmp@plt+0x44df8>
  40a89f:	mov    edi,0x5
  40a8a4:	xor    eax,eax
  40a8a6:	call   4306a0 <strcmp@plt+0x2cee8>
  40a8ab:	jmp    40a788 <strcmp@plt+0x6fd0>
  40a8b0:	mov    rax,QWORD PTR [r14]
  40a8b3:	mov    QWORD PTR [rsp+0x60],rax
  40a8b8:	mov    rax,QWORD PTR [r14+0x8]
  40a8bc:	mov    QWORD PTR [rsp+0x68],rax
  40a8c1:	mov    rax,QWORD PTR [r14+0x10]
  40a8c5:	mov    QWORD PTR [rsp+0x70],rax
  40a8ca:	mov    rax,QWORD PTR [r14+0x18]
  40a8ce:	mov    QWORD PTR [rsp+0x78],rax
  40a8d3:	mov    rax,QWORD PTR [r14+0x20]
  40a8d7:	mov    QWORD PTR [rsp+0x80],rax
  40a8df:	mov    rax,QWORD PTR [r14+0x28]
  40a8e3:	mov    QWORD PTR [rsp+0x88],rax
  40a8eb:	mov    rax,QWORD PTR [r14+0x30]
  40a8ef:	mov    QWORD PTR [rsp+0x90],rax
  40a8f7:	mov    rax,QWORD PTR [r14+0x38]
  40a8fb:	mov    QWORD PTR [rsp+0x98],rax
  40a903:	lea    rax,[rsp+0x60]
  40a908:	mov    rdi,rax
  40a90b:	mov    QWORD PTR [rsp+0x10],rax
  40a910:	call   423110 <strcmp@plt+0x1f958>
  40a915:	test   r12,r12
  40a918:	mov    r13,rax
  40a91b:	je     40ae80 <strcmp@plt+0x76c8>
  40a921:	test   BYTE PTR [r12+0x1],0x40
  40a927:	jne    40ab00 <strcmp@plt+0x7348>
  40a92d:	test   BYTE PTR [rax],0x1
  40a930:	jne    40ab00 <strcmp@plt+0x7348>
  40a936:	mov    rbx,0x468e3c
  40a93d:	mov    eax,DWORD PTR [rbx]
  40a93f:	test   eax,eax
  40a941:	jle    40a890 <strcmp@plt+0x70d8>
  40a947:	lea    rsi,[rip+0x3d942]        # 448290 <strcmp@plt+0x44ad8>
  40a94e:	xor    eax,eax
  40a950:	mov    edi,0x5
  40a955:	call   4306a0 <strcmp@plt+0x2cee8>
  40a95a:	mov    eax,DWORD PTR [rbx]
  40a95c:	jmp    40a890 <strcmp@plt+0x70d8>
  40a961:	nop    DWORD PTR [rax+0x0]
  40a968:	mov    rax,QWORD PTR [r14]
  40a96b:	mov    QWORD PTR [rsp+0x50],0x0
  40a974:	mov    QWORD PTR [rsp+0x60],rax
  40a979:	mov    rax,QWORD PTR [r14+0x8]
  40a97d:	mov    QWORD PTR [rsp+0x68],rax
  40a982:	mov    rax,QWORD PTR [r14+0x10]
  40a986:	mov    QWORD PTR [rsp+0x70],rax
  40a98b:	mov    rax,QWORD PTR [r14+0x18]
  40a98f:	mov    QWORD PTR [rsp+0x78],rax
  40a994:	mov    rax,QWORD PTR [r14+0x20]
  40a998:	mov    QWORD PTR [rsp+0x80],rax
  40a9a0:	mov    rax,QWORD PTR [r14+0x28]
  40a9a4:	mov    QWORD PTR [rsp+0x88],rax
  40a9ac:	mov    rax,QWORD PTR [r14+0x30]
  40a9b0:	mov    QWORD PTR [rsp+0x90],rax
  40a9b8:	mov    rax,QWORD PTR [r14+0x38]
  40a9bc:	mov    QWORD PTR [rsp+0x98],rax
  40a9c4:	lea    rax,[rsp+0x60]
  40a9c9:	mov    rdi,rax
  40a9cc:	mov    QWORD PTR [rsp+0x10],rax
  40a9d1:	call   423110 <strcmp@plt+0x1f958>
  40a9d6:	mov    rsi,QWORD PTR [rax+0x4]
  40a9da:	mov    r13,rax
  40a9dd:	mov    rax,0x474860
  40a9e4:	mov    rdi,QWORD PTR [rax]
  40a9e7:	call   435210 <strcmp@plt+0x31a58>
  40a9ec:	test   rax,rax
  40a9ef:	je     40adf0 <strcmp@plt+0x7638>
  40a9f5:	mov    rdi,rax
  40a9f8:	call   435480 <strcmp@plt+0x31cc8>
  40a9fd:	mov    rdi,rax
  40aa00:	call   43ac30 <strcmp@plt+0x37478>
  40aa05:	mov    rdi,QWORD PTR [rax+0x18]
  40aa09:	mov    r15,rax
  40aa0c:	call   424890 <strcmp@plt+0x210d8>
  40aa11:	mov    rdi,QWORD PTR [rbx+0x70]
  40aa15:	mov    rsi,rax
  40aa18:	call   43a470 <strcmp@plt+0x36cb8>
  40aa1d:	test   rax,rax
  40aa20:	mov    QWORD PTR [rsp+0x28],rax
  40aa25:	je     40afc8 <strcmp@plt+0x7810>
  40aa2b:	movzx  eax,BYTE PTR [r13+0x0]
  40aa30:	test   al,0x8
  40aa32:	je     40ad78 <strcmp@plt+0x75c0>
  40aa38:	test   r12,r12
  40aa3b:	je     40b43f <strcmp@plt+0x7c87>
  40aa41:	test   BYTE PTR [r12+0x1],0x40
  40aa47:	jne    40aeb0 <strcmp@plt+0x76f8>
  40aa4d:	mov    rbx,0x468e3c
  40aa54:	mov    eax,DWORD PTR [rbx]
  40aa56:	test   eax,eax
  40aa58:	jle    40a890 <strcmp@plt+0x70d8>
  40aa5e:	lea    rsi,[rip+0x3d983]        # 4483e8 <strcmp@plt+0x44c30>
  40aa65:	xor    eax,eax
  40aa67:	mov    edi,0x5
  40aa6c:	call   4306a0 <strcmp@plt+0x2cee8>
  40aa71:	mov    eax,DWORD PTR [rbx]
  40aa73:	jmp    40a890 <strcmp@plt+0x70d8>
  40aa78:	nop    DWORD PTR [rax+rax*1+0x0]
  40aa80:	mov    rdx,QWORD PTR [rsp+0x8]
  40aa85:	lea    rdi,[rbx+0x18]
  40aa89:	mov    rsi,r14
  40aa8c:	call   40c340 <strcmp@plt+0x8b88>
  40aa91:	mov    r14d,eax
  40aa94:	mov    rax,0x468e3c
  40aa9b:	cmp    r14d,0x1
  40aa9f:	mov    eax,DWORD PTR [rax]
  40aaa1:	jne    40a890 <strcmp@plt+0x70d8>
  40aaa7:	cmp    eax,0x2
  40aaaa:	jle    40a78b <strcmp@plt+0x6fd3>
  40aab0:	lea    rsi,[rip+0x3db29]        # 4485e0 <strcmp@plt+0x44e28>
  40aab7:	mov    edi,0x7
  40aabc:	xor    eax,eax
  40aabe:	call   4306a0 <strcmp@plt+0x2cee8>
  40aac3:	jmp    40a78b <strcmp@plt+0x6fd3>
  40aac8:	nop    DWORD PTR [rax+rax*1+0x0]
  40aad0:	mov    rbx,0x468e3c
  40aad7:	mov    edx,DWORD PTR [rbx]
  40aad9:	test   edx,edx
  40aadb:	jle    40a788 <strcmp@plt+0x6fd0>
  40aae1:	lea    rsi,[rip+0x3da90]        # 448578 <strcmp@plt+0x44dc0>
  40aae8:	xor    eax,eax
  40aaea:	mov    edx,r15d
  40aaed:	mov    edi,0x5
  40aaf2:	call   4306a0 <strcmp@plt+0x2cee8>
  40aaf7:	mov    eax,DWORD PTR [rbx]
  40aaf9:	jmp    40a890 <strcmp@plt+0x70d8>
  40aafe:	xchg   ax,ax
  40ab00:	mov    rdi,QWORD PTR [rsp+0x8]
  40ab05:	call   424890 <strcmp@plt+0x210d8>
  40ab0a:	mov    rdi,QWORD PTR [rbx+0x70]
  40ab0e:	mov    rsi,rax
  40ab11:	call   43a470 <strcmp@plt+0x36cb8>
  40ab16:	test   rax,rax
  40ab19:	je     40b020 <strcmp@plt+0x7868>
  40ab1f:	mov    r10d,DWORD PTR [rax+0x14]
  40ab23:	test   r10d,r10d
  40ab26:	je     40ade0 <strcmp@plt+0x7628>
  40ab2c:	mov    r15,QWORD PTR [rsp+0x10]
  40ab31:	mov    rdi,r15
  40ab34:	call   430440 <strcmp@plt+0x2cc88>
  40ab39:	mov    rdi,r15
  40ab3c:	call   4237a0 <strcmp@plt+0x1ffe8>
  40ab41:	or     BYTE PTR [rax+0x1],0x20
  40ab45:	mov    r15,QWORD PTR [rsp+0x8]
  40ab4a:	lea    r12,[rsp+0x100]
  40ab52:	xor    ecx,ecx
  40ab54:	mov    edx,0x10f6
  40ab59:	mov    esi,0x10f6
  40ab5e:	mov    rdi,r12
  40ab61:	mov    r8,r15
  40ab64:	call   438840 <strcmp@plt+0x35088>
  40ab69:	mov    rsi,QWORD PTR [rsp+0x10]
  40ab6e:	mov    rdx,r12
  40ab71:	mov    rdi,rbx
  40ab74:	call   4083b0 <strcmp@plt+0x4bf8>
  40ab79:	mov    edi,0x28
  40ab7e:	call   434790 <strcmp@plt+0x30fd8>
  40ab83:	test   rax,rax
  40ab86:	mov    r12,rax
  40ab89:	je     40abca <strcmp@plt+0x7412>
  40ab8b:	lea    rdi,[r15+0x20]
  40ab8f:	call   424b80 <strcmp@plt+0x213c8>
  40ab94:	lea    rdi,[rbp+0x20]
  40ab98:	mov    QWORD PTR [r12+0x8],rax
  40ab9d:	call   424b80 <strcmp@plt+0x213c8>
  40aba2:	mov    rdi,rbp
  40aba5:	mov    QWORD PTR [r12],rax
  40aba9:	call   424b80 <strcmp@plt+0x213c8>
  40abae:	mov    rdi,r15
  40abb1:	mov    QWORD PTR [r12+0x10],rax
  40abb6:	call   424b80 <strcmp@plt+0x213c8>
  40abbb:	mov    QWORD PTR [r12+0x18],rax
  40abc0:	movzx  eax,WORD PTR [rbp+0x42]
  40abc4:	mov    WORD PTR [r12+0x20],ax
  40abca:	mov    rdx,0x409910
  40abd1:	lea    r8,[rip+0xffffffffffffecb8]        # 409890 <strcmp@plt+0x60d8>
  40abd8:	mov    rcx,r12
  40abdb:	mov    rsi,rbx
  40abde:	mov    edi,0xe
  40abe3:	mov    r14d,0x1
  40abe9:	call   43af50 <strcmp@plt+0x37798>
  40abee:	mov    rdx,rax
  40abf1:	mov    rbx,rax
  40abf4:	mov    rax,0x474858
  40abfb:	mov    rsi,r12
  40abfe:	mov    rdi,QWORD PTR [rax]
  40ac01:	call   43afa0 <strcmp@plt+0x377e8>
  40ac06:	mov    rdi,rbx
  40ac09:	call   43ac50 <strcmp@plt+0x37498>
  40ac0e:	mov    rdx,rax
  40ac11:	mov    rax,0x474860
  40ac18:	mov    rsi,QWORD PTR [r13+0x4]
  40ac1c:	mov    rdi,QWORD PTR [rax]
  40ac1f:	call   434960 <strcmp@plt+0x311a8>
  40ac24:	mov    esi,0x2
  40ac29:	mov    rdi,rbx
  40ac2c:	call   43ac60 <strcmp@plt+0x374a8>
  40ac31:	mov    rax,0x468e3c
  40ac38:	mov    eax,DWORD PTR [rax]
  40ac3a:	jmp    40aaa7 <strcmp@plt+0x72ef>
  40ac3f:	nop
  40ac40:	mov    rdi,r14
  40ac43:	call   4227d0 <strcmp@plt+0x1f018>
  40ac48:	test   BYTE PTR [rax],0x8
  40ac4b:	jne    40ae30 <strcmp@plt+0x7678>
  40ac51:	movzx  eax,WORD PTR [r14+0x20]
  40ac56:	cmp    ax,0xffff
  40ac5a:	je     40b000 <strcmp@plt+0x7848>
  40ac60:	add    rax,QWORD PTR [r14+0x30]
  40ac64:	je     40b000 <strcmp@plt+0x7848>
  40ac6a:	lea    rbp,[rsp+0x100]
  40ac72:	mov    rdi,r14
  40ac75:	lea    r13,[rsp+0xb0]
  40ac7d:	mov    rsi,rbp
  40ac80:	call   435ec0 <strcmp@plt+0x32708>
  40ac85:	movzx  edx,WORD PTR [rsp+0x140]
  40ac8d:	movzx  esi,WORD PTR [rsp+0x142]
  40ac95:	lea    rcx,[rbp+0x20]
  40ac99:	mov    r8,rbp
  40ac9c:	mov    rdi,r13
  40ac9f:	call   438840 <strcmp@plt+0x35088>
  40aca4:	movzx  r12d,WORD PTR [r14+0x1e]
  40aca9:	cmp    r12w,0xffff
  40acae:	je     40ae78 <strcmp@plt+0x76c0>
  40acb4:	add    r12,QWORD PTR [r14+0x30]
  40acb8:	mov    rdi,r14
  40acbb:	call   422770 <strcmp@plt+0x1efb8>
  40acc0:	mov    r15d,eax
  40acc3:	mov    rax,0x468e3c
  40acca:	mov    eax,DWORD PTR [rax]
  40accc:	test   eax,eax
  40acce:	jg     40b1d8 <strcmp@plt+0x7a20>
  40acd4:	mov    rbp,QWORD PTR [rsp+0x8]
  40acd9:	mov    QWORD PTR [rsp+0x8],r13
  40acde:	jmp    40a749 <strcmp@plt+0x6f91>
  40ace3:	nop    DWORD PTR [rax+rax*1+0x0]
  40ace8:	lea    rdx,[rip+0x3d0a9]        # 447d98 <strcmp@plt+0x445e0>
  40acef:	lea    rsi,[rip+0x3d992]        # 448688 <strcmp@plt+0x44ed0>
  40acf6:	lea    rdi,[rip+0x3cfae]        # 447cab <strcmp@plt+0x444f3>
  40acfd:	call   434880 <strcmp@plt+0x310c8>
  40ad02:	nop    WORD PTR [rax+rax*1+0x0]
  40ad08:	movzx  eax,BYTE PTR [r15]
  40ad0c:	test   al,0x3
  40ad0e:	je     40ada8 <strcmp@plt+0x75f0>
  40ad14:	test   al,0x2
  40ad16:	je     40af80 <strcmp@plt+0x77c8>
  40ad1c:	cmp    BYTE PTR [r15+0x3],0x1
  40ad21:	jbe    40b072 <strcmp@plt+0x78ba>
  40ad27:	mov    rax,0x468e3c
  40ad2e:	mov    QWORD PTR [rsp+0x18],rax
  40ad33:	mov    eax,DWORD PTR [rax]
  40ad35:	test   eax,eax
  40ad37:	jle    40a862 <strcmp@plt+0x70aa>
  40ad3d:	lea    rsi,[rip+0x3d46c]        # 4481b0 <strcmp@plt+0x449f8>
  40ad44:	mov    edi,0x5
  40ad49:	xor    eax,eax
  40ad4b:	call   4306a0 <strcmp@plt+0x2cee8>
  40ad50:	jmp    40a862 <strcmp@plt+0x70aa>
  40ad55:	nop    DWORD PTR [rax]
  40ad58:	lea    rsi,[rip+0x3d7d1]        # 448530 <strcmp@plt+0x44d78>
  40ad5f:	xor    eax,eax
  40ad61:	mov    edi,0x5
  40ad66:	call   4306a0 <strcmp@plt+0x2cee8>
  40ad6b:	mov    eax,DWORD PTR [rbx]
  40ad6d:	jmp    40a890 <strcmp@plt+0x70d8>
  40ad72:	nop    WORD PTR [rax+rax*1+0x0]
  40ad78:	mov    rbx,0x468e3c
  40ad7f:	mov    eax,DWORD PTR [rbx]
  40ad81:	test   eax,eax
  40ad83:	jle    40a890 <strcmp@plt+0x70d8>
  40ad89:	lea    rsi,[rip+0x3d5d8]        # 448368 <strcmp@plt+0x44bb0>
  40ad90:	xor    eax,eax
  40ad92:	mov    edi,0x5
  40ad97:	call   4306a0 <strcmp@plt+0x2cee8>
  40ad9c:	mov    eax,DWORD PTR [rbx]
  40ad9e:	jmp    40a890 <strcmp@plt+0x70d8>
  40ada3:	nop    DWORD PTR [rax+rax*1+0x0]
  40ada8:	mov    rax,0x468e3c
  40adaf:	mov    QWORD PTR [rsp+0x18],rax
  40adb4:	mov    eax,DWORD PTR [rax]
  40adb6:	test   eax,eax
  40adb8:	jle    40a862 <strcmp@plt+0x70aa>
  40adbe:	lea    rsi,[rip+0x3d3ab]        # 448170 <strcmp@plt+0x449b8>
  40adc5:	mov    edi,0x5
  40adca:	xor    eax,eax
  40adcc:	call   4306a0 <strcmp@plt+0x2cee8>
  40add1:	jmp    40a862 <strcmp@plt+0x70aa>
  40add6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ade0:	mov    rdi,QWORD PTR [rsp+0x10]
  40ade5:	call   430500 <strcmp@plt+0x2cd48>
  40adea:	jmp    40ab45 <strcmp@plt+0x738d>
  40adef:	nop
  40adf0:	mov    rbx,0x468e3c
  40adf7:	mov    eax,DWORD PTR [rbx]
  40adf9:	test   eax,eax
  40adfb:	jle    40a890 <strcmp@plt+0x70d8>
  40ae01:	mov    rdi,QWORD PTR [r13+0x4]
  40ae05:	call   4348f0 <strcmp@plt+0x31138>
  40ae0a:	lea    rsi,[rip+0x3d517]        # 448328 <strcmp@plt+0x44b70>
  40ae11:	mov    rdx,rax
  40ae14:	mov    edi,0x5
  40ae19:	xor    eax,eax
  40ae1b:	call   4306a0 <strcmp@plt+0x2cee8>
  40ae20:	mov    eax,DWORD PTR [rbx]
  40ae22:	jmp    40a890 <strcmp@plt+0x70d8>
  40ae27:	nop    WORD PTR [rax+rax*1+0x0]
  40ae30:	mov    rdi,r14
  40ae33:	call   423cc0 <strcmp@plt+0x20508>
  40ae38:	cmp    eax,0x2
  40ae3b:	je     40b050 <strcmp@plt+0x7898>
  40ae41:	mov    rax,0x468e3c
  40ae48:	cmp    DWORD PTR [rax],0x1
  40ae4b:	jle    40a788 <strcmp@plt+0x6fd0>
  40ae51:	mov    rdi,r14
  40ae54:	call   423cc0 <strcmp@plt+0x20508>
  40ae59:	lea    rsi,[rip+0x3cecb]        # 447d2b <strcmp@plt+0x44573>
  40ae60:	mov    edx,eax
  40ae62:	mov    edi,0x6
  40ae67:	xor    eax,eax
  40ae69:	call   4306a0 <strcmp@plt+0x2cee8>
  40ae6e:	jmp    40a788 <strcmp@plt+0x6fd0>
  40ae73:	nop    DWORD PTR [rax+rax*1+0x0]
  40ae78:	xor    r12d,r12d
  40ae7b:	jmp    40acb8 <strcmp@plt+0x7500>
  40ae80:	mov    rbx,0x468e3c
  40ae87:	mov    eax,DWORD PTR [rbx]
  40ae89:	test   eax,eax
  40ae8b:	jle    40a890 <strcmp@plt+0x70d8>
  40ae91:	lea    rsi,[rip+0x3d3b8]        # 448250 <strcmp@plt+0x44a98>
  40ae98:	xor    eax,eax
  40ae9a:	mov    edi,0x5
  40ae9f:	call   4306a0 <strcmp@plt+0x2cee8>
  40aea4:	mov    eax,DWORD PTR [rbx]
  40aea6:	jmp    40a890 <strcmp@plt+0x70d8>
  40aeab:	nop    DWORD PTR [rax+rax*1+0x0]
  40aeb0:	mov    rdi,QWORD PTR [rsp+0x10]
  40aeb5:	xor    r14d,r14d
  40aeb8:	call   424150 <strcmp@plt+0x20998>
  40aebd:	mov    rdi,0x42a650
  40aec4:	call   42d4f0 <strcmp@plt+0x29d38>
  40aec9:	cmp    BYTE PTR [r13+0x3],0x0
  40aece:	mov    QWORD PTR [rsp+0x20],rax
  40aed3:	lea    rax,[rsp+0x50]
  40aed8:	je     40b214 <strcmp@plt+0x7a5c>
  40aede:	mov    QWORD PTR [rsp+0x18],r15
  40aee3:	mov    QWORD PTR [rsp+0x30],r12
  40aee8:	mov    rbp,rax
  40aeeb:	mov    r15,QWORD PTR [rsp+0x20]
  40aef0:	mov    QWORD PTR [rsp+0x38],rbx
  40aef5:	mov    r12,QWORD PTR [rsp+0x10]
  40aefa:	jmp    40af25 <strcmp@plt+0x776d>
  40aefc:	nop    DWORD PTR [rax+0x0]
  40af00:	mov    rdi,rbx
  40af03:	add    r14d,0x1
  40af07:	call   437250 <strcmp@plt+0x33a98>
  40af0c:	mov    rsi,r15
  40af0f:	mov    rdi,rbx
  40af12:	call   42d540 <strcmp@plt+0x29d88>
  40af17:	movzx  eax,BYTE PTR [r13+0x3]
  40af1c:	cmp    r14d,eax
  40af1f:	jge    40b205 <strcmp@plt+0x7a4d>
  40af25:	xor    eax,eax
  40af27:	call   42a550 <strcmp@plt+0x26d98>
  40af2c:	mov    rdx,rbp
  40af2f:	mov    rsi,rax
  40af32:	mov    rdi,r12
  40af35:	mov    rbx,rax
  40af38:	call   422d90 <strcmp@plt+0x1f5d8>
  40af3d:	cmp    eax,0x1
  40af40:	je     40af00 <strcmp@plt+0x7748>
  40af42:	mov    rdi,QWORD PTR [rsp+0x20]
  40af47:	call   42dac0 <strcmp@plt+0x2a308>
  40af4c:	mov    rbx,0x468e3c
  40af53:	mov    eax,DWORD PTR [rbx]
  40af55:	test   eax,eax
  40af57:	jle    40a890 <strcmp@plt+0x70d8>
  40af5d:	lea    rsi,[rip+0x3d4cc]        # 448430 <strcmp@plt+0x44c78>
  40af64:	xor    eax,eax
  40af66:	mov    edi,0x5
  40af6b:	call   4306a0 <strcmp@plt+0x2cee8>
  40af70:	mov    eax,DWORD PTR [rbx]
  40af72:	jmp    40a890 <strcmp@plt+0x70d8>
  40af77:	nop    WORD PTR [rax+rax*1+0x0]
  40af80:	test   al,0x1
  40af82:	je     40b072 <strcmp@plt+0x78ba>
  40af88:	cmp    BYTE PTR [r15+0x3],0x1
  40af8d:	jbe    40b072 <strcmp@plt+0x78ba>
  40af93:	mov    rax,0x468e3c
  40af9a:	mov    QWORD PTR [rsp+0x18],rax
  40af9f:	mov    eax,DWORD PTR [rax]
  40afa1:	test   eax,eax
  40afa3:	jle    40a862 <strcmp@plt+0x70aa>
  40afa9:	lea    rsi,[rip+0x3d238]        # 4481e8 <strcmp@plt+0x44a30>
  40afb0:	mov    edi,0x5
  40afb5:	xor    eax,eax
  40afb7:	call   4306a0 <strcmp@plt+0x2cee8>
  40afbc:	jmp    40a862 <strcmp@plt+0x70aa>
  40afc1:	nop    DWORD PTR [rax+0x0]
  40afc8:	mov    rbx,0x468e3c
  40afcf:	mov    eax,DWORD PTR [rbx]
  40afd1:	test   eax,eax
  40afd3:	jle    40a890 <strcmp@plt+0x70d8>
  40afd9:	mov    rdi,QWORD PTR [r15+0x18]
  40afdd:	call   424890 <strcmp@plt+0x210d8>
  40afe2:	lea    rsi,[rip+0x3d0e7]        # 4480d0 <strcmp@plt+0x44918>
  40afe9:	mov    rdx,rax
  40afec:	mov    edi,0x5
  40aff1:	xor    eax,eax
  40aff3:	call   4306a0 <strcmp@plt+0x2cee8>
  40aff8:	mov    eax,DWORD PTR [rbx]
  40affa:	jmp    40a890 <strcmp@plt+0x70d8>
  40afff:	nop
  40b000:	mov    rdi,r14
  40b003:	call   422810 <strcmp@plt+0x1f058>
  40b008:	cmp    eax,0x1
  40b00b:	jne    40a788 <strcmp@plt+0x6fd0>
  40b011:	jmp    40ac6a <strcmp@plt+0x74b2>
  40b016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b020:	mov    rbx,0x468e3c
  40b027:	mov    eax,DWORD PTR [rbx]
  40b029:	test   eax,eax
  40b02b:	jle    40a890 <strcmp@plt+0x70d8>
  40b031:	lea    rsi,[rip+0x3d2a0]        # 4482d8 <strcmp@plt+0x44b20>
  40b038:	xor    eax,eax
  40b03a:	mov    edi,0x5
  40b03f:	call   4306a0 <strcmp@plt+0x2cee8>
  40b044:	mov    eax,DWORD PTR [rbx]
  40b046:	jmp    40a890 <strcmp@plt+0x70d8>
  40b04b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b050:	mov    rax,QWORD PTR [rsp+0x8]
  40b055:	mov    rsi,r14
  40b058:	mov    rdi,rbx
  40b05b:	lea    rdx,[rax+0x20]
  40b05f:	call   40a630 <strcmp@plt+0x6e78>
  40b064:	cmp    eax,0x1
  40b067:	jne    40a788 <strcmp@plt+0x6fd0>
  40b06d:	jmp    40ac51 <strcmp@plt+0x7499>
  40b072:	mov    rdi,0x424750
  40b079:	call   42d4f0 <strcmp@plt+0x29d38>
  40b07e:	mov    rdi,QWORD PTR [rsp+0x10]
  40b083:	mov    rsi,rax
  40b086:	mov    QWORD PTR [rsp+0x30],rax
  40b08b:	call   422a60 <strcmp@plt+0x1f2a8>
  40b090:	xor    eax,eax
  40b092:	mov    edi,0x2
  40b097:	call   423800 <strcmp@plt+0x20048>
  40b09c:	cmp    BYTE PTR [r15+0x3],0x0
  40b0a1:	mov    QWORD PTR [rsp+0x20],rax
  40b0a6:	je     40b481 <strcmp@plt+0x7cc9>
  40b0ac:	mov    rax,0x468e3c
  40b0b3:	lea    rcx,[rbx+0x18]
  40b0b7:	xor    esi,esi
  40b0b9:	mov    QWORD PTR [rsp+0x40],rbp
  40b0be:	mov    DWORD PTR [rsp+0x38],r14d
  40b0c3:	mov    QWORD PTR [rsp+0x48],rbx
  40b0c8:	mov    QWORD PTR [rsp+0x28],rcx
  40b0cd:	mov    ebx,esi
  40b0cf:	mov    QWORD PTR [rsp+0x18],rax
  40b0d4:	mov    r14,rax
  40b0d7:	mov    rbp,QWORD PTR [rsp+0x10]
  40b0dc:	jmp    40b0f0 <strcmp@plt+0x7938>
  40b0de:	xchg   ax,ax
  40b0e0:	movzx  eax,BYTE PTR [r15+0x3]
  40b0e5:	add    ebx,0x1
  40b0e8:	cmp    ebx,eax
  40b0ea:	jge    40b472 <strcmp@plt+0x7cba>
  40b0f0:	mov    rsi,r12
  40b0f3:	mov    rdi,rbp
  40b0f6:	call   422a10 <strcmp@plt+0x1f258>
  40b0fb:	cmp    eax,0x1
  40b0fe:	jne    40b1af <strcmp@plt+0x79f7>
  40b104:	mov    eax,DWORD PTR [r14]
  40b107:	test   eax,eax
  40b109:	jle    40b129 <strcmp@plt+0x7971>
  40b10b:	mov    rdi,r12
  40b10e:	call   424890 <strcmp@plt+0x210d8>
  40b113:	lea    rsi,[rip+0x3cc48]        # 447d62 <strcmp@plt+0x445aa>
  40b11a:	mov    rdx,rax
  40b11d:	mov    edi,0x5
  40b122:	xor    eax,eax
  40b124:	call   4306a0 <strcmp@plt+0x2cee8>
  40b129:	mov    rdi,QWORD PTR [rsp+0x20]
  40b12e:	xor    r8d,r8d
  40b131:	xor    ecx,ecx
  40b133:	xor    edx,edx
  40b135:	mov    rsi,r12
  40b138:	call   4233d0 <strcmp@plt+0x1fc18>
  40b13d:	mov    eax,DWORD PTR [r13+0x18]
  40b141:	test   eax,eax
  40b143:	je     40b0e0 <strcmp@plt+0x7928>
  40b145:	test   BYTE PTR [r15],0x1
  40b149:	je     40b0e0 <strcmp@plt+0x7928>
  40b14b:	mov    rdi,r12
  40b14e:	call   425110 <strcmp@plt+0x21958>
  40b153:	mov    esi,0x1
  40b158:	mov    rdi,rax
  40b15b:	call   424910 <strcmp@plt+0x21158>
  40b160:	mov    rdi,QWORD PTR [rsp+0x28]
  40b165:	mov    rdx,r13
  40b168:	mov    rsi,r12
  40b16b:	call   40d130 <strcmp@plt+0x9978>
  40b170:	cmp    eax,0x1
  40b173:	jne    40b1af <strcmp@plt+0x79f7>
  40b175:	test   BYTE PTR [r15],0x2
  40b179:	jne    40b0e0 <strcmp@plt+0x7928>
  40b17f:	mov    rdi,QWORD PTR [rsp+0x30]
  40b184:	mov    r14d,DWORD PTR [rsp+0x38]
  40b189:	call   42dac0 <strcmp@plt+0x2a308>
  40b18e:	cmp    QWORD PTR [rsp+0x20],0x0
  40b194:	jne    40b652 <strcmp@plt+0x7e9a>
  40b19a:	mov    rdi,r13
  40b19d:	call   424750 <strcmp@plt+0x20f98>
  40b1a2:	mov    rdi,r12
  40b1a5:	call   424750 <strcmp@plt+0x20f98>
  40b1aa:	jmp    40a87c <strcmp@plt+0x70c4>
  40b1af:	mov    rdi,QWORD PTR [rsp+0x30]
  40b1b4:	call   42dac0 <strcmp@plt+0x2a308>
  40b1b9:	cmp    QWORD PTR [rsp+0x20],0x0
  40b1bf:	je     40a869 <strcmp@plt+0x70b1>
  40b1c5:	mov    rdi,QWORD PTR [rsp+0x20]
  40b1ca:	call   4300b0 <strcmp@plt+0x2c8f8>
  40b1cf:	jmp    40a869 <strcmp@plt+0x70b1>
  40b1d4:	nop    DWORD PTR [rax+0x0]
  40b1d8:	mov    rdi,r14
  40b1db:	call   423a90 <strcmp@plt+0x202d8>
  40b1e0:	lea    rsi,[rip+0x3cb5d]        # 447d44 <strcmp@plt+0x4458c>
  40b1e7:	mov    rdx,rax
  40b1ea:	mov    edi,0x5
  40b1ef:	xor    eax,eax
  40b1f1:	call   4306a0 <strcmp@plt+0x2cee8>
  40b1f6:	mov    rbp,QWORD PTR [rsp+0x8]
  40b1fb:	mov    QWORD PTR [rsp+0x8],r13
  40b200:	jmp    40a749 <strcmp@plt+0x6f91>
  40b205:	mov    r15,QWORD PTR [rsp+0x18]
  40b20a:	mov    r12,QWORD PTR [rsp+0x30]
  40b20f:	mov    rbx,QWORD PTR [rsp+0x38]
  40b214:	lea    rax,[rsp+0xa0]
  40b21c:	mov    rdi,QWORD PTR [rsp+0x10]
  40b221:	lea    rdx,[rsp+0x58]
  40b226:	mov    rsi,rax
  40b229:	mov    rbp,rax
  40b22c:	call   423090 <strcmp@plt+0x1f8d8>
  40b231:	mov    rax,QWORD PTR [rsp+0x20]
  40b236:	mov    r14,QWORD PTR [rax+0x8]
  40b23a:	cmp    rax,r14
  40b23d:	mov    rax,0x468e3c
  40b244:	mov    QWORD PTR [rsp+0x18],rax
  40b249:	je     40b395 <strcmp@plt+0x7bdd>
  40b24f:	lea    rax,[rbx+0x18]
  40b253:	mov    QWORD PTR [rsp+0x30],r12
  40b258:	mov    r13,rbp
  40b25b:	mov    QWORD PTR [rsp+0x38],rax
  40b260:	jmp    40b2b0 <strcmp@plt+0x7af8>
  40b262:	nop    WORD PTR [rax+rax*1+0x0]
  40b268:	mov    rsi,rax
  40b26b:	mov    rax,0x474858
  40b272:	mov    rdi,QWORD PTR [rax]
  40b275:	call   43b010 <strcmp@plt+0x37858>
  40b27a:	test   rax,rax
  40b27d:	je     40b51d <strcmp@plt+0x7d65>
  40b283:	mov    esi,DWORD PTR [rax+0x18]
  40b286:	xor    ebp,ebp
  40b288:	test   esi,esi
  40b28a:	je     40b294 <strcmp@plt+0x7adc>
  40b28c:	mov    rax,QWORD PTR [rax+0x8]
  40b290:	mov    rbp,QWORD PTR [rax+0x10]
  40b294:	mov    esi,0xd2
  40b299:	mov    rdi,rbp
  40b29c:	call   43ac60 <strcmp@plt+0x374a8>
  40b2a1:	mov    r14,QWORD PTR [r14+0x8]
  40b2a5:	cmp    QWORD PTR [rsp+0x20],r14
  40b2aa:	je     40b390 <strcmp@plt+0x7bd8>
  40b2b0:	mov    r12,QWORD PTR [r14+0x10]
  40b2b4:	mov    rdi,QWORD PTR [rbx+0x30]
  40b2b8:	mov    rsi,r12
  40b2bb:	call   409490 <strcmp@plt+0x5cd8>
  40b2c0:	test   rax,rax
  40b2c3:	mov    rbp,rax
  40b2c6:	je     40b418 <strcmp@plt+0x7c60>
  40b2cc:	mov    rdi,QWORD PTR [rax+0x30]
  40b2d0:	test   rdi,rdi
  40b2d3:	je     40b34c <strcmp@plt+0x7b94>
  40b2d5:	cmp    QWORD PTR [rdi],0x0
  40b2d9:	je     40b347 <strcmp@plt+0x7b8f>
  40b2db:	movzx  r8d,WORD PTR [r15+0x20]
  40b2e0:	sub    rsp,0x8
  40b2e4:	mov    rdx,QWORD PTR [r15+0x10]
  40b2e8:	mov    r9,QWORD PTR [r15+0x8]
  40b2ec:	mov    rcx,QWORD PTR [r15]
  40b2ef:	mov    rsi,r12
  40b2f2:	push   r13
  40b2f4:	mov    rdi,rbp
  40b2f7:	call   433da0 <strcmp@plt+0x305e8>
  40b2fc:	cmp    eax,0x2
  40b2ff:	pop    r8
  40b301:	pop    r9
  40b303:	je     40b370 <strcmp@plt+0x7bb8>
  40b305:	mov    rdx,QWORD PTR [r15+0x8]
  40b309:	mov    rsi,r13
  40b30c:	mov    rdi,rbp
  40b30f:	call   434170 <strcmp@plt+0x309b8>
  40b314:	test   rax,rax
  40b317:	mov    r12,rax
  40b31a:	jne    40b268 <strcmp@plt+0x7ab0>
  40b320:	mov    rax,QWORD PTR [rsp+0x18]
  40b325:	mov    edi,DWORD PTR [rax]
  40b327:	test   edi,edi
  40b329:	jle    40b2a1 <strcmp@plt+0x7ae9>
  40b32f:	lea    rsi,[rip+0x3d152]        # 448488 <strcmp@plt+0x44cd0>
  40b336:	mov    edi,0x5
  40b33b:	xor    eax,eax
  40b33d:	call   4306a0 <strcmp@plt+0x2cee8>
  40b342:	jmp    40b2a1 <strcmp@plt+0x7ae9>
  40b347:	call   4338a0 <strcmp@plt+0x300e8>
  40b34c:	xor    eax,eax
  40b34e:	call   433840 <strcmp@plt+0x30088>
  40b353:	mov    QWORD PTR [rbp+0x30],rax
  40b357:	mov    rax,0x4338a0
  40b35e:	mov    QWORD PTR [rbp+0x38],rax
  40b362:	jmp    40b2db <strcmp@plt+0x7b23>
  40b367:	nop    WORD PTR [rax+rax*1+0x0]
  40b370:	mov    rax,QWORD PTR [rbx+0x38]
  40b374:	mov    rdi,QWORD PTR [rbx+0x40]
  40b378:	mov    rsi,rbp
  40b37b:	call   QWORD PTR [rax+0x38]
  40b37e:	xor    edx,edx
  40b380:	mov    rsi,r12
  40b383:	mov    rdi,rbx
  40b386:	call   4083c0 <strcmp@plt+0x4c08>
  40b38b:	jmp    40b305 <strcmp@plt+0x7b4d>
  40b390:	mov    r12,QWORD PTR [rsp+0x30]
  40b395:	mov    rdi,QWORD PTR [rsp+0x20]
  40b39a:	call   42dac0 <strcmp@plt+0x2a308>
  40b39f:	test   r12,r12
  40b3a2:	je     40b683 <strcmp@plt+0x7ecb>
  40b3a8:	mov    rdi,QWORD PTR [rsp+0x10]
  40b3ad:	call   430440 <strcmp@plt+0x2cc88>
  40b3b2:	mov    eax,DWORD PTR [rbx+0x58]
  40b3b5:	test   eax,eax
  40b3b7:	je     40b572 <strcmp@plt+0x7dba>
  40b3bd:	cmp    eax,0x1
  40b3c0:	jne    40b586 <strcmp@plt+0x7dce>
  40b3c6:	mov    rdi,QWORD PTR [r15]
  40b3c9:	call   419510 <strcmp@plt+0x15d58>
  40b3ce:	mov    rdi,QWORD PTR [rsp+0x10]
  40b3d3:	mov    edx,eax
  40b3d5:	mov    esi,0xffffff
  40b3da:	call   419560 <strcmp@plt+0x15da8>
  40b3df:	movzx  edx,WORD PTR [r15+0x20]
  40b3e4:	mov    rcx,QWORD PTR [r15+0x10]
  40b3e8:	lea    rbp,[rsp+0x100]
  40b3f0:	mov    r8,QWORD PTR [r15]
  40b3f3:	mov    esi,0x10f6
  40b3f8:	mov    rdi,rbp
  40b3fb:	call   438840 <strcmp@plt+0x35088>
  40b400:	mov    rsi,QWORD PTR [rsp+0x10]
  40b405:	mov    rdx,rbp
  40b408:	mov    rdi,rbx
  40b40b:	call   4083b0 <strcmp@plt+0x4bf8>
  40b410:	mov    r14d,eax
  40b413:	jmp    40a87c <strcmp@plt+0x70c4>
  40b418:	mov    rdi,r12
  40b41b:	call   42a590 <strcmp@plt+0x26dd8>
  40b420:	mov    rdi,QWORD PTR [rsp+0x38]
  40b425:	mov    ecx,0x1
  40b42a:	mov    edx,0x1
  40b42f:	mov    rsi,rax
  40b432:	call   40c0b0 <strcmp@plt+0x88f8>
  40b437:	mov    rbp,rax
  40b43a:	jmp    40b34c <strcmp@plt+0x7b94>
  40b43f:	test   al,0x4
  40b441:	jne    40b5a5 <strcmp@plt+0x7ded>
  40b447:	mov    rbx,0x468e3c
  40b44e:	mov    eax,DWORD PTR [rbx]
  40b450:	test   eax,eax
  40b452:	jle    40a890 <strcmp@plt+0x70d8>
  40b458:	lea    rsi,[rip+0x3cf49]        # 4483a8 <strcmp@plt+0x44bf0>
  40b45f:	xor    eax,eax
  40b461:	mov    edi,0x5
  40b466:	call   4306a0 <strcmp@plt+0x2cee8>
  40b46b:	mov    eax,DWORD PTR [rbx]
  40b46d:	jmp    40a890 <strcmp@plt+0x70d8>
  40b472:	mov    rbp,QWORD PTR [rsp+0x40]
  40b477:	mov    r14d,DWORD PTR [rsp+0x38]
  40b47c:	mov    rbx,QWORD PTR [rsp+0x48]
  40b481:	mov    rax,QWORD PTR [rsp+0x20]
  40b486:	movzx  eax,WORD PTR [rax+0x24]
  40b48a:	cmp    ax,0xffff
  40b48e:	je     40b509 <strcmp@plt+0x7d51>
  40b490:	mov    rcx,QWORD PTR [rsp+0x20]
  40b495:	mov    rsi,QWORD PTR [rsp+0x30]
  40b49a:	mov    rdi,rbx
  40b49d:	add    rax,QWORD PTR [rcx+0x30]
  40b4a1:	movzx  ecx,BYTE PTR [r15]
  40b4a5:	lea    edx,[rcx*4+0x0]
  40b4ac:	mov    ecx,edx
  40b4ae:	movzx  edx,BYTE PTR [rax]
  40b4b1:	and    ecx,0x8
  40b4b4:	and    edx,0xfffffff7
  40b4b7:	or     edx,ecx
  40b4b9:	mov    rcx,rbp
  40b4bc:	mov    BYTE PTR [rax],dl
  40b4be:	mov    rdx,QWORD PTR [r15+0x4]
  40b4c2:	lea    r15,[rsp+0x100]
  40b4ca:	mov    r8,r15
  40b4cd:	mov    QWORD PTR [rax+0x4],rdx
  40b4d1:	mov    rdx,QWORD PTR [rsp+0x8]
  40b4d6:	call   4085b0 <strcmp@plt+0x4df8>
  40b4db:	cmp    eax,0x1
  40b4de:	mov    rax,0x468e3c
  40b4e5:	mov    QWORD PTR [rsp+0x18],rax
  40b4ea:	je     40b610 <strcmp@plt+0x7e58>
  40b4f0:	mov    ebx,DWORD PTR [rax]
  40b4f2:	test   ebx,ebx
  40b4f4:	jg     40b661 <strcmp@plt+0x7ea9>
  40b4fa:	mov    rdi,QWORD PTR [rsp+0x30]
  40b4ff:	call   42dac0 <strcmp@plt+0x2a308>
  40b504:	jmp    40b1c5 <strcmp@plt+0x7a0d>
  40b509:	movzx  eax,BYTE PTR ds:0x0
  40b511:	and    eax,0xfffffff7
  40b514:	mov    BYTE PTR ds:0x0,al
  40b51b:	ud2    
  40b51d:	mov    edi,0x10
  40b522:	call   4347a0 <strcmp@plt+0x30fe8>
  40b527:	test   rax,rax
  40b52a:	mov    rcx,rax
  40b52d:	je     40b6dd <strcmp@plt+0x7f25>
  40b533:	mov    QWORD PTR [rax],rbp
  40b536:	mov    QWORD PTR [rax+0x8],r12
  40b53a:	mov    rdx,0x409af0
  40b541:	lea    r8,[rip+0xffffffffffffe378]        # 4098c0 <strcmp@plt+0x6108>
  40b548:	mov    rsi,rbx
  40b54b:	mov    edi,0xd
  40b550:	call   43af00 <strcmp@plt+0x37748>
  40b555:	mov    rbp,rax
  40b558:	mov    rdx,rax
  40b55b:	mov    rax,0x474858
  40b562:	mov    rsi,r12
  40b565:	mov    rdi,QWORD PTR [rax]
  40b568:	call   43afa0 <strcmp@plt+0x377e8>
  40b56d:	jmp    40b294 <strcmp@plt+0x7adc>
  40b572:	mov    rdi,QWORD PTR [rsp+0x10]
  40b577:	mov    esi,0xffffff
  40b57c:	call   424360 <strcmp@plt+0x20ba8>
  40b581:	jmp    40b3df <strcmp@plt+0x7c27>
  40b586:	lea    rsi,[rip+0x3cb9b]        # 448128 <strcmp@plt+0x44970>
  40b58d:	xor    eax,eax
  40b58f:	mov    edi,0x2
  40b594:	call   4306a0 <strcmp@plt+0x2cee8>
  40b599:	mov    rax,QWORD PTR [rsp+0x18]
  40b59e:	mov    eax,DWORD PTR [rax]
  40b5a0:	jmp    40a890 <strcmp@plt+0x70d8>
  40b5a5:	mov    ebp,DWORD PTR [r14+0x14]
  40b5a9:	mov    edi,0x1
  40b5ae:	call   42d210 <strcmp@plt+0x29a58>
  40b5b3:	mov    rcx,QWORD PTR [rsp+0x28]
  40b5b8:	movzx  eax,ax
  40b5bb:	mov    rdi,r14
  40b5be:	sub    rbp,0x4
  40b5c2:	sub    rbp,rax
  40b5c5:	mov    rdx,QWORD PTR [rcx+0x8]
  40b5c9:	mov    rax,rbp
  40b5cc:	add    rax,r13
  40b5cf:	mov    rsi,rax
  40b5d2:	mov    QWORD PTR [rsp+0x40],rax
  40b5d7:	call   423ef0 <strcmp@plt+0x20738>
  40b5dc:	cmp    eax,0x1
  40b5df:	je     40aeb0 <strcmp@plt+0x76f8>
  40b5e5:	mov    rbx,0x468e3c
  40b5ec:	mov    eax,DWORD PTR [rbx]
  40b5ee:	test   eax,eax
  40b5f0:	jle    40a890 <strcmp@plt+0x70d8>
  40b5f6:	lea    rsi,[rip+0x3c77d]        # 447d7a <strcmp@plt+0x445c2>
  40b5fd:	xor    eax,eax
  40b5ff:	mov    edi,0x5
  40b604:	call   4306a0 <strcmp@plt+0x2cee8>
  40b609:	mov    eax,DWORD PTR [rbx]
  40b60b:	jmp    40a890 <strcmp@plt+0x70d8>
  40b610:	mov    r11d,DWORD PTR [rax]
  40b613:	test   r11d,r11d
  40b616:	jle    40b638 <strcmp@plt+0x7e80>
  40b618:	mov    rdi,QWORD PTR [rsp+0x20]
  40b61d:	call   423a90 <strcmp@plt+0x202d8>
  40b622:	lea    rsi,[rip+0x3c746]        # 447d6f <strcmp@plt+0x445b7>
  40b629:	mov    rdx,rax
  40b62c:	mov    edi,0x5
  40b631:	xor    eax,eax
  40b633:	call   4306a0 <strcmp@plt+0x2cee8>
  40b638:	mov    rsi,QWORD PTR [rsp+0x20]
  40b63d:	mov    rdi,rbx
  40b640:	mov    rdx,r15
  40b643:	call   4083b0 <strcmp@plt+0x4bf8>
  40b648:	mov    rdi,QWORD PTR [rsp+0x30]
  40b64d:	call   42dac0 <strcmp@plt+0x2a308>
  40b652:	mov    rdi,QWORD PTR [rsp+0x20]
  40b657:	call   4300b0 <strcmp@plt+0x2c8f8>
  40b65c:	jmp    40b19a <strcmp@plt+0x79e2>
  40b661:	lea    rsi,[rip+0x3cbb8]        # 448220 <strcmp@plt+0x44a68>
  40b668:	mov    edi,0x5
  40b66d:	xor    eax,eax
  40b66f:	call   4306a0 <strcmp@plt+0x2cee8>
  40b674:	mov    rdi,QWORD PTR [rsp+0x30]
  40b679:	call   42dac0 <strcmp@plt+0x2a308>
  40b67e:	jmp    40b1c5 <strcmp@plt+0x7a0d>
  40b683:	mov    r14,QWORD PTR [rsp+0x10]
  40b688:	mov    rsi,QWORD PTR [rsp+0x40]
  40b68d:	xor    ecx,ecx
  40b68f:	xor    edx,edx
  40b691:	mov    rdi,r14
  40b694:	call   423dd0 <strcmp@plt+0x20618>
  40b699:	mov    rax,QWORD PTR [rsp+0x28]
  40b69e:	mov    ebp,DWORD PTR [rsp+0x74]
  40b6a2:	mov    edi,DWORD PTR [rax+0x10]
  40b6a5:	call   42d210 <strcmp@plt+0x29a58>
  40b6aa:	movzx  eax,ax
  40b6ad:	mov    rdi,r14
  40b6b0:	sub    ebp,eax
  40b6b2:	mov    DWORD PTR [rsp+0x74],ebp
  40b6b6:	call   430500 <strcmp@plt+0x2cd48>
  40b6bb:	mov    rax,QWORD PTR [rsp+0x8]
  40b6c0:	mov    r8,QWORD PTR [r15+0x8]
  40b6c4:	mov    rdi,r14
  40b6c7:	movzx  edx,WORD PTR [rax+0x42]
  40b6cb:	movzx  esi,WORD PTR [rax+0x40]
  40b6cf:	lea    rcx,[rax+0x20]
  40b6d3:	call   435b50 <strcmp@plt+0x32398>
  40b6d8:	jmp    40b3a8 <strcmp@plt+0x7bf0>
  40b6dd:	mov    rax,QWORD PTR [rsp+0x18]
  40b6e2:	cmp    DWORD PTR [rax],0x1
  40b6e5:	jle    40b53a <strcmp@plt+0x7d82>
  40b6eb:	lea    rsi,[rip+0x3cdde]        # 4484d0 <strcmp@plt+0x44d18>
  40b6f2:	mov    edi,0x6
  40b6f7:	xor    eax,eax
  40b6f9:	mov    QWORD PTR [rsp+0x48],rcx
  40b6fe:	call   4306a0 <strcmp@plt+0x2cee8>
  40b703:	mov    rcx,QWORD PTR [rsp+0x48]
  40b708:	jmp    40b53a <strcmp@plt+0x7d82>
  40b70d:	call   403460 <__stack_chk_fail@plt>
  40b712:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40b71d:	nop    DWORD PTR [rax]
  40b720:	push   r13
  40b722:	push   r12
  40b724:	mov    r13,rdi
  40b727:	push   rbp
  40b728:	push   rbx
  40b729:	mov    edi,0x18
  40b72e:	mov    r12,rsi
  40b731:	mov    ebp,edx
  40b733:	sub    rsp,0x8
  40b737:	call   434790 <strcmp@plt+0x30fd8>
  40b73c:	test   rax,rax
  40b73f:	mov    rbx,rax
  40b742:	je     40b778 <strcmp@plt+0x7fc0>
  40b744:	mov    rdi,r13
  40b747:	call   424b80 <strcmp@plt+0x213c8>
  40b74c:	mov    rdi,r12
  40b74f:	mov    QWORD PTR [rbx],rax
  40b752:	call   403730 <strdup@plt>
  40b757:	mov    DWORD PTR [rbx+0x10],0x1
  40b75e:	mov    QWORD PTR [rbx+0x8],rax
  40b762:	mov    DWORD PTR [rbx+0x14],ebp
  40b765:	add    rsp,0x8
  40b769:	mov    rax,rbx
  40b76c:	pop    rbx
  40b76d:	pop    rbp
  40b76e:	pop    r12
  40b770:	pop    r13
  40b772:	ret    
  40b773:	nop    DWORD PTR [rax+rax*1+0x0]
  40b778:	lea    rsi,[rip+0x3ce99]        # 448618 <strcmp@plt+0x44e60>
  40b77f:	mov    edi,0x3
  40b784:	xor    eax,eax
  40b786:	call   4306a0 <strcmp@plt+0x2cee8>
  40b78b:	jmp    40b765 <strcmp@plt+0x7fad>
  40b78d:	nop    DWORD PTR [rax]
  40b790:	jmp    4037b0 <free@plt>
  40b795:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40b7a0:	push   rbx
  40b7a1:	mov    rbx,rdi
  40b7a4:	mov    rdi,QWORD PTR [rdi+0x8]
  40b7a8:	call   424750 <strcmp@plt+0x20f98>
  40b7ad:	mov    rdi,rbx
  40b7b0:	pop    rbx
  40b7b1:	jmp    4037b0 <free@plt>
  40b7b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b7c0:	push   rbp
  40b7c1:	push   rbx
  40b7c2:	xor    eax,eax
  40b7c4:	mov    rbx,rdi
  40b7c7:	sub    rsp,0x8
  40b7cb:	call   4093b0 <strcmp@plt+0x5bf8>
  40b7d0:	mov    rbp,0x424750
  40b7d7:	mov    QWORD PTR [rbx+0x18],rax
  40b7db:	mov    rdi,rbp
  40b7de:	call   42d4f0 <strcmp@plt+0x29d38>
  40b7e3:	mov    rdi,0x42e860
  40b7ea:	mov    QWORD PTR [rbx+0x30],rax
  40b7ee:	call   4397c0 <strcmp@plt+0x36008>
  40b7f3:	cmp    QWORD PTR [rbx+0x18],0x0
  40b7f8:	mov    QWORD PTR [rbx+0x38],rax
  40b7fc:	je     40b828 <strcmp@plt+0x8070>
  40b7fe:	cmp    QWORD PTR [rbx+0x30],0x0
  40b803:	je     40b828 <strcmp@plt+0x8070>
  40b805:	test   rax,rax
  40b808:	je     40b828 <strcmp@plt+0x8070>
  40b80a:	mov    rdi,rbp
  40b80d:	call   42d4f0 <strcmp@plt+0x29d38>
  40b812:	mov    QWORD PTR [rbx+0x48],rax
  40b816:	add    rsp,0x8
  40b81a:	mov    eax,0x1
  40b81f:	pop    rbx
  40b820:	pop    rbp
  40b821:	ret    
  40b822:	nop    WORD PTR [rax+rax*1+0x0]
  40b828:	add    rsp,0x8
  40b82c:	xor    eax,eax
  40b82e:	pop    rbx
  40b82f:	pop    rbp
  40b830:	ret    
  40b831:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40b83c:	nop    DWORD PTR [rax+0x0]
  40b840:	test   rdi,rdi
  40b843:	je     40b880 <strcmp@plt+0x80c8>
  40b845:	push   rbx
  40b846:	mov    rbx,rdi
  40b849:	mov    rdi,QWORD PTR [rdi+0x38]
  40b84d:	call   43a5a0 <strcmp@plt+0x36de8>
  40b852:	mov    rdi,QWORD PTR [rbx+0x18]
  40b856:	call   409410 <strcmp@plt+0x5c58>
  40b85b:	mov    rdi,QWORD PTR [rbx+0x30]
  40b85f:	call   42dac0 <strcmp@plt+0x2a308>
  40b864:	mov    rdi,QWORD PTR [rbx+0x28]
  40b868:	test   rdi,rdi
  40b86b:	je     40b874 <strcmp@plt+0x80bc>
  40b86d:	mov    rax,QWORD PTR [rbx+0x20]
  40b871:	call   QWORD PTR [rax+0x8]
  40b874:	mov    rdi,QWORD PTR [rbx+0x48]
  40b878:	pop    rbx
  40b879:	jmp    42dac0 <strcmp@plt+0x2a308>
  40b87e:	xchg   ax,ax
  40b880:	repz ret 
  40b882:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40b88d:	nop    DWORD PTR [rax]
  40b890:	mov    rax,rdi
  40b893:	ret    
  40b894:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40b89f:	nop
  40b8a0:	push   r15
  40b8a2:	push   r14
  40b8a4:	mov    r15,rsi
  40b8a7:	push   r13
  40b8a9:	push   r12
  40b8ab:	mov    r13,rcx
  40b8ae:	push   rbp
  40b8af:	lea    rbp,[rdi-0x18]
  40b8b3:	push   rbx
  40b8b4:	mov    rbx,rdi
  40b8b7:	mov    r12,rdx
  40b8ba:	sub    rsp,0x78
  40b8be:	mov    rdi,rbp
  40b8c1:	mov    rax,QWORD PTR fs:0x28
  40b8ca:	mov    QWORD PTR [rsp+0x68],rax
  40b8cf:	xor    eax,eax
  40b8d1:	call   408350 <strcmp@plt+0x4b98>
  40b8d6:	mov    r14,rax
  40b8d9:	mov    rax,QWORD PTR [rbx+0x20]
  40b8dd:	mov    rdi,r14
  40b8e0:	mov    rbx,QWORD PTR [rax+0x48]
  40b8e4:	call   408130 <strcmp@plt+0x4978>
  40b8e9:	mov    rdi,QWORD PTR [r12]
  40b8ed:	mov    rsi,rax
  40b8f0:	call   rbx
  40b8f2:	xor    esi,esi
  40b8f4:	mov    rdi,rsp
  40b8f7:	mov    r12,rax
  40b8fa:	call   424910 <strcmp@plt+0x21158>
  40b8ff:	mov    rdi,r14
  40b902:	call   4080d0 <strcmp@plt+0x4918>
  40b907:	mov    rdx,r15
  40b90a:	mov    r14,rax
  40b90d:	mov    rsi,rax
  40b910:	mov    rdi,rsp
  40b913:	call   423920 <strcmp@plt+0x20168>
  40b918:	mov    rdi,r14
  40b91b:	mov    rbx,rax
  40b91e:	call   42dac0 <strcmp@plt+0x2a308>
  40b923:	test   rbx,rbx
  40b926:	je     40b9b0 <strcmp@plt+0x81f8>
  40b92c:	movzx  eax,WORD PTR [rbx+0x24]
  40b930:	cmp    ax,0xffff
  40b934:	je     40b9a0 <strcmp@plt+0x81e8>
  40b936:	add    rax,QWORD PTR [rbx+0x30]
  40b93a:	mov    r8,r12
  40b93d:	xor    ecx,ecx
  40b93f:	mov    edx,0x10f6
  40b944:	mov    esi,0x10f6
  40b949:	or     BYTE PTR [rax],0x2
  40b94c:	mov    QWORD PTR [rax+0x4],r13
  40b950:	lea    r13,[rsp+0x20]
  40b955:	mov    rdi,r13
  40b958:	call   438840 <strcmp@plt+0x35088>
  40b95d:	mov    rdi,rbp
  40b960:	mov    rdx,r13
  40b963:	mov    rsi,rbx
  40b966:	call   4083b0 <strcmp@plt+0x4bf8>
  40b96b:	mov    rdi,rbx
  40b96e:	mov    ebp,eax
  40b970:	call   4300b0 <strcmp@plt+0x2c8f8>
  40b975:	mov    rcx,QWORD PTR [rsp+0x68]
  40b97a:	xor    rcx,QWORD PTR fs:0x28
  40b983:	mov    eax,ebp
  40b985:	jne    40b9b4 <strcmp@plt+0x81fc>
  40b987:	add    rsp,0x78
  40b98b:	pop    rbx
  40b98c:	pop    rbp
  40b98d:	pop    r12
  40b98f:	pop    r13
  40b991:	pop    r14
  40b993:	pop    r15
  40b995:	ret    
  40b996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b9a0:	mov    QWORD PTR ds:0x4,0x0
  40b9ac:	ud2    
  40b9ae:	xchg   ax,ax
  40b9b0:	xor    ebp,ebp
  40b9b2:	jmp    40b975 <strcmp@plt+0x81bd>
  40b9b4:	call   403460 <__stack_chk_fail@plt>
  40b9b9:	nop    DWORD PTR [rax+0x0]
  40b9c0:	push   r15
  40b9c2:	push   r14
  40b9c4:	push   r13
  40b9c6:	push   r12
  40b9c8:	push   rbp
  40b9c9:	push   rbx
  40b9ca:	mov    rbx,rdi
  40b9cd:	sub    rsp,0x18
  40b9d1:	call   43ac30 <strcmp@plt+0x37478>
  40b9d6:	mov    rdi,rbx
  40b9d9:	mov    rbp,rax
  40b9dc:	call   43ac50 <strcmp@plt+0x37498>
  40b9e1:	mov    rdi,rbx
  40b9e4:	mov    r12,rax
  40b9e7:	call   43ac20 <strcmp@plt+0x37468>
  40b9ec:	mov    r13,rax
  40b9ef:	mov    rax,QWORD PTR [rbp+0x0]
  40b9f3:	mov    rbp,QWORD PTR [rbp+0x8]
  40b9f7:	mov    rdi,r13
  40b9fa:	mov    rax,QWORD PTR [rax+0x8]
  40b9fe:	mov    QWORD PTR [rsp],rax
  40ba02:	mov    rax,QWORD PTR [r13+0x38]
  40ba06:	mov    r14,QWORD PTR [rax+0x48]
  40ba0a:	call   408350 <strcmp@plt+0x4b98>
  40ba0f:	mov    rdi,rax
  40ba12:	call   408130 <strcmp@plt+0x4978>
  40ba17:	mov    rdi,QWORD PTR [rbp+0x0]
  40ba1b:	mov    rsi,rax
  40ba1e:	call   r14
  40ba21:	mov    rdi,r12
  40ba24:	mov    r14,rax
  40ba27:	call   4355a0 <strcmp@plt+0x31de8>
  40ba2c:	cmp    eax,DWORD PTR [r13+0x28]
  40ba30:	jle    40bb30 <strcmp@plt+0x8378>
  40ba36:	cmp    BYTE PTR [rbp+0x8],0x1
  40ba3a:	je     40bab0 <strcmp@plt+0x82f8>
  40ba3c:	mov    rbp,0x468e3c
  40ba43:	mov    rax,0x474860
  40ba4a:	mov    rsi,r12
  40ba4d:	mov    rdi,QWORD PTR [rax]
  40ba50:	call   4352c0 <strcmp@plt+0x31b08>
  40ba55:	mov    esi,DWORD PTR [r13+0x24]
  40ba59:	mov    rdi,rbx
  40ba5c:	call   43ac60 <strcmp@plt+0x374a8>
  40ba61:	cmp    DWORD PTR [rbp+0x0],0x1
  40ba65:	jle    40ba9b <strcmp@plt+0x82e3>
  40ba67:	mov    rdi,QWORD PTR [rsp]
  40ba6b:	mov    ebp,DWORD PTR [r13+0x24]
  40ba6f:	call   424890 <strcmp@plt+0x210d8>
  40ba74:	mov    rdi,r14
  40ba77:	mov    rbx,rax
  40ba7a:	call   424890 <strcmp@plt+0x210d8>
  40ba7f:	lea    rsi,[rip+0x3cd32]        # 4487b8 <strcmp@plt+0x45000>
  40ba86:	mov    rdx,rax
  40ba89:	mov    r8d,ebp
  40ba8c:	mov    rcx,rbx
  40ba8f:	mov    edi,0x6
  40ba94:	xor    eax,eax
  40ba96:	call   4306a0 <strcmp@plt+0x2cee8>
  40ba9b:	xor    r10d,r10d
  40ba9e:	add    rsp,0x18
  40baa2:	mov    eax,r10d
  40baa5:	pop    rbx
  40baa6:	pop    rbp
  40baa7:	pop    r12
  40baa9:	pop    r13
  40baab:	pop    r14
  40baad:	pop    r15
  40baaf:	ret    
  40bab0:	mov    BYTE PTR [rbp+0x8],0x0
  40bab4:	mov    rbp,0x468e3c
  40babb:	mov    eax,DWORD PTR [rbp+0x0]
  40babe:	test   eax,eax
  40bac0:	jle    40baef <strcmp@plt+0x8337>
  40bac2:	mov    rdi,QWORD PTR [rsp]
  40bac6:	call   424890 <strcmp@plt+0x210d8>
  40bacb:	mov    rdi,r14
  40bace:	mov    r15,rax
  40bad1:	call   424890 <strcmp@plt+0x210d8>
  40bad6:	lea    rsi,[rip+0x3cc73]        # 448750 <strcmp@plt+0x44f98>
  40badd:	mov    rdx,rax
  40bae0:	mov    rcx,r15
  40bae3:	mov    edi,0x5
  40bae8:	xor    eax,eax
  40baea:	call   4306a0 <strcmp@plt+0x2cee8>
  40baef:	mov    rdi,QWORD PTR [r13+0x30]
  40baf3:	mov    rsi,QWORD PTR [rsp]
  40baf7:	call   409490 <strcmp@plt+0x5cd8>
  40bafc:	test   rax,rax
  40baff:	mov    r15,rax
  40bb02:	je     40bbf0 <strcmp@plt+0x8438>
  40bb08:	mov    rax,QWORD PTR [r13+0x38]
  40bb0c:	mov    rsi,r15
  40bb0f:	mov    rdi,QWORD PTR [r13+0x40]
  40bb13:	call   QWORD PTR [rax+0x38]
  40bb16:	mov    rdi,r15
  40bb19:	call   433030 <strcmp@plt+0x2f878>
  40bb1e:	xor    edx,edx
  40bb20:	mov    rsi,rax
  40bb23:	mov    rdi,r13
  40bb26:	call   4083c0 <strcmp@plt+0x4c08>
  40bb2b:	jmp    40ba43 <strcmp@plt+0x828b>
  40bb30:	xor    eax,eax
  40bb32:	call   435450 <strcmp@plt+0x31c98>
  40bb37:	mov    rsi,QWORD PTR [rsp]
  40bb3b:	lea    rdi,[r13+0x18]
  40bb3f:	mov    rcx,rax
  40bb42:	mov    rdx,rbp
  40bb45:	mov    r15,rax
  40bb48:	call   40b8a0 <strcmp@plt+0x80e8>
  40bb4d:	cmp    eax,0x1
  40bb50:	jne    40ba36 <strcmp@plt+0x827e>
  40bb56:	mov    rdi,r12
  40bb59:	mov    DWORD PTR [rsp+0xc],eax
  40bb5d:	call   4355a0 <strcmp@plt+0x31de8>
  40bb62:	test   eax,eax
  40bb64:	mov    r10d,DWORD PTR [rsp+0xc]
  40bb69:	mov    rax,0x468e3c
  40bb70:	jle    40bc20 <strcmp@plt+0x8468>
  40bb76:	mov    ecx,DWORD PTR [rax]
  40bb78:	test   ecx,ecx
  40bb7a:	jle    40bbc2 <strcmp@plt+0x840a>
  40bb7c:	mov    rdi,r12
  40bb7f:	mov    DWORD PTR [rsp+0xc],r10d
  40bb84:	call   4355a0 <strcmp@plt+0x31de8>
  40bb89:	mov    rdi,QWORD PTR [rsp]
  40bb8d:	mov    ebp,eax
  40bb8f:	call   424890 <strcmp@plt+0x210d8>
  40bb94:	mov    rdi,r14
  40bb97:	mov    QWORD PTR [rsp],rax
  40bb9b:	call   424890 <strcmp@plt+0x210d8>
  40bba0:	mov    rcx,QWORD PTR [rsp]
  40bba4:	lea    rsi,[rip+0x3cb35]        # 4486e0 <strcmp@plt+0x44f28>
  40bbab:	mov    rdx,rax
  40bbae:	mov    r8d,ebp
  40bbb1:	mov    edi,0x5
  40bbb6:	xor    eax,eax
  40bbb8:	call   4306a0 <strcmp@plt+0x2cee8>
  40bbbd:	mov    r10d,DWORD PTR [rsp+0xc]
  40bbc2:	mov    rax,0x474860
  40bbc9:	mov    rdx,r12
  40bbcc:	mov    rsi,r15
  40bbcf:	mov    DWORD PTR [rsp],r10d
  40bbd3:	mov    rdi,QWORD PTR [rax]
  40bbd6:	call   434960 <strcmp@plt+0x311a8>
  40bbdb:	mov    esi,DWORD PTR [r13+0x2c]
  40bbdf:	mov    rdi,rbx
  40bbe2:	call   43ac60 <strcmp@plt+0x374a8>
  40bbe7:	mov    r10d,DWORD PTR [rsp]
  40bbeb:	jmp    40ba9e <strcmp@plt+0x82e6>
  40bbf0:	mov    rdi,QWORD PTR [rsp]
  40bbf4:	call   424890 <strcmp@plt+0x210d8>
  40bbf9:	lea    rsi,[rip+0x3ca98]        # 448698 <strcmp@plt+0x44ee0>
  40bc00:	mov    rdx,rax
  40bc03:	mov    edi,0x2
  40bc08:	xor    eax,eax
  40bc0a:	call   4306a0 <strcmp@plt+0x2cee8>
  40bc0f:	xor    r10d,r10d
  40bc12:	jmp    40ba9e <strcmp@plt+0x82e6>
  40bc17:	nop    WORD PTR [rax+rax*1+0x0]
  40bc20:	mov    edx,DWORD PTR [rax]
  40bc22:	test   edx,edx
  40bc24:	jle    40bbc2 <strcmp@plt+0x840a>
  40bc26:	mov    rdi,QWORD PTR [rsp]
  40bc2a:	mov    DWORD PTR [rsp+0xc],r10d
  40bc2f:	call   424890 <strcmp@plt+0x210d8>
  40bc34:	mov    rdi,r14
  40bc37:	mov    rbp,rax
  40bc3a:	call   424890 <strcmp@plt+0x210d8>
  40bc3f:	lea    rsi,[rip+0x3cada]        # 448720 <strcmp@plt+0x44f68>
  40bc46:	mov    rdx,rax
  40bc49:	mov    rcx,rbp
  40bc4c:	mov    edi,0x5
  40bc51:	xor    eax,eax
  40bc53:	call   4306a0 <strcmp@plt+0x2cee8>
  40bc58:	mov    r10d,DWORD PTR [rsp+0xc]
  40bc5d:	jmp    40bbc2 <strcmp@plt+0x840a>
  40bc62:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40bc6d:	nop    DWORD PTR [rax]
  40bc70:	push   r12
  40bc72:	push   rbp
  40bc73:	mov    rbp,rsi
  40bc76:	push   rbx
  40bc77:	mov    ebx,edx
  40bc79:	mov    rdx,0x40c200
  40bc80:	lea    rsi,[rdi-0x18]
  40bc84:	xor    r8d,r8d
  40bc87:	mov    rcx,rbp
  40bc8a:	mov    edi,0x1
  40bc8f:	call   43af00 <strcmp@plt+0x37748>
  40bc94:	mov    rdx,rax
  40bc97:	mov    r12,rax
  40bc9a:	mov    rax,0x474858
  40bca1:	mov    rsi,rbp
  40bca4:	mov    rdi,QWORD PTR [rax]
  40bca7:	call   43afa0 <strcmp@plt+0x377e8>
  40bcac:	mov    esi,ebx
  40bcae:	mov    rdi,r12
  40bcb1:	call   43ac60 <strcmp@plt+0x374a8>
  40bcb6:	cmp    ebx,0x3c
  40bcb9:	mov    rax,0x468e3c
  40bcc0:	jle    40bcd0 <strcmp@plt+0x8518>
  40bcc2:	mov    edx,DWORD PTR [rax]
  40bcc4:	test   edx,edx
  40bcc6:	jg     40bd00 <strcmp@plt+0x8548>
  40bcc8:	pop    rbx
  40bcc9:	pop    rbp
  40bcca:	pop    r12
  40bccc:	ret    
  40bccd:	nop    DWORD PTR [rax]
  40bcd0:	mov    eax,DWORD PTR [rax]
  40bcd2:	test   eax,eax
  40bcd4:	jle    40bcc8 <strcmp@plt+0x8510>
  40bcd6:	mov    rdi,QWORD PTR [rbp+0x8]
  40bcda:	call   424890 <strcmp@plt+0x210d8>
  40bcdf:	mov    ecx,ebx
  40bce1:	lea    rsi,[rip+0x3cb58]        # 448840 <strcmp@plt+0x45088>
  40bce8:	mov    rdx,rax
  40bceb:	pop    rbx
  40bcec:	pop    rbp
  40bced:	pop    r12
  40bcef:	mov    edi,0x5
  40bcf4:	xor    eax,eax
  40bcf6:	jmp    4306a0 <strcmp@plt+0x2cee8>
  40bcfb:	nop    DWORD PTR [rax+rax*1+0x0]
  40bd00:	mov    rdi,QWORD PTR [rbp+0x8]
  40bd04:	call   424890 <strcmp@plt+0x210d8>
  40bd09:	mov    edx,0x88888889
  40bd0e:	mov    rsi,rax
  40bd11:	mov    eax,ebx
  40bd13:	imul   edx
  40bd15:	mov    edi,0x5
  40bd1a:	xor    eax,eax
  40bd1c:	lea    ecx,[rdx+rbx*1]
  40bd1f:	sar    ebx,0x1f
  40bd22:	mov    rdx,rsi
  40bd25:	lea    rsi,[rip+0x3cad4]        # 448800 <strcmp@plt+0x45048>
  40bd2c:	sar    ecx,0x5
  40bd2f:	sub    ecx,ebx
  40bd31:	pop    rbx
  40bd32:	pop    rbp
  40bd33:	pop    r12
  40bd35:	jmp    4306a0 <strcmp@plt+0x2cee8>
  40bd3a:	nop    WORD PTR [rax+rax*1+0x0]
  40bd40:	push   rbp
  40bd41:	push   rbx
  40bd42:	mov    rbx,rsi
  40bd45:	mov    rbp,rdi
  40bd48:	mov    esi,0x1
  40bd4d:	mov    rdi,rbx
  40bd50:	sub    rsp,0x8
  40bd54:	mov    rax,0x474860
  40bd5b:	mov    rcx,QWORD PTR [rax]
  40bd5e:	mov    rax,0x474858
  40bd65:	mov    rdx,QWORD PTR [rax]
  40bd68:	call   43b1d0 <strcmp@plt+0x37a18>
  40bd6d:	mov    rax,QWORD PTR [rbx+0x8]
  40bd71:	mov    rsi,rbx
  40bd74:	mov    rdi,rbp
  40bd77:	imul   edx,DWORD PTR [rax+0x30],0x3c
  40bd7b:	add    rsp,0x8
  40bd7f:	pop    rbx
  40bd80:	pop    rbp
  40bd81:	jmp    40bc70 <strcmp@plt+0x84b8>
  40bd86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bd90:	push   rbp
  40bd91:	push   rbx
  40bd92:	mov    rbp,rdi
  40bd95:	mov    rbx,rsi
  40bd98:	mov    edi,0x10
  40bd9d:	sub    rsp,0x8
  40bda1:	call   4347a0 <strcmp@plt+0x30fe8>
  40bda6:	mov    QWORD PTR [rax],rbp
  40bda9:	mov    QWORD PTR [rax+0x8],rbx
  40bdad:	add    rsp,0x8
  40bdb1:	pop    rbx
  40bdb2:	pop    rbp
  40bdb3:	ret    
  40bdb4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40bdbf:	nop
  40bdc0:	cmp    BYTE PTR [rdx+0xa],0x0
  40bdc4:	je     40be45 <strcmp@plt+0x868d>
  40bdc6:	cmp    BYTE PTR [rdx+0xb],0xff
  40bdca:	je     40be45 <strcmp@plt+0x868d>
  40bdcc:	push   r13
  40bdce:	push   r12
  40bdd0:	mov    r13,rsi
  40bdd3:	push   rbp
  40bdd4:	push   rbx
  40bdd5:	mov    rbp,rdi
  40bdd8:	mov    rsi,rdx
  40bddb:	mov    rdi,r13
  40bdde:	mov    r12d,ecx
  40bde1:	sub    rsp,0x8
  40bde5:	mov    rbx,rdx
  40bde8:	call   40bd90 <strcmp@plt+0x85d8>
  40bded:	mov    r8,0x40b790
  40bdf4:	mov    rdx,0x40b9c0
  40bdfb:	lea    rsi,[rbp-0x18]
  40bdff:	mov    rcx,rax
  40be02:	mov    edi,0x5
  40be07:	call   43af50 <strcmp@plt+0x37798>
  40be0c:	mov    rdx,rax
  40be0f:	mov    rbp,rax
  40be12:	mov    rax,0x474858
  40be19:	mov    rsi,r13
  40be1c:	mov    rdi,QWORD PTR [rax]
  40be1f:	call   43afa0 <strcmp@plt+0x377e8>
  40be24:	mov    esi,r12d
  40be27:	mov    rdi,rbp
  40be2a:	call   43ac60 <strcmp@plt+0x374a8>
  40be2f:	mov    rax,0x468e3c
  40be36:	cmp    DWORD PTR [rax],0x1
  40be39:	jg     40be50 <strcmp@plt+0x8698>
  40be3b:	add    rsp,0x8
  40be3f:	pop    rbx
  40be40:	pop    rbp
  40be41:	pop    r12
  40be43:	pop    r13
  40be45:	repz ret 
  40be47:	nop    WORD PTR [rax+rax*1+0x0]
  40be50:	mov    rdi,QWORD PTR [rbx]
  40be53:	call   424890 <strcmp@plt+0x210d8>
  40be58:	mov    rdi,QWORD PTR [r13+0x8]
  40be5c:	mov    rbx,rax
  40be5f:	call   424890 <strcmp@plt+0x210d8>
  40be64:	add    rsp,0x8
  40be68:	mov    r8d,r12d
  40be6b:	mov    rcx,rbx
  40be6e:	pop    rbx
  40be6f:	pop    rbp
  40be70:	pop    r12
  40be72:	pop    r13
  40be74:	lea    rsi,[rip+0x3ca05]        # 448880 <strcmp@plt+0x450c8>
  40be7b:	mov    rdx,rax
  40be7e:	mov    edi,0x6
  40be83:	xor    eax,eax
  40be85:	jmp    4306a0 <strcmp@plt+0x2cee8>
  40be8a:	nop    WORD PTR [rax+rax*1+0x0]
  40be90:	mov    ecx,DWORD PTR [rdi+0xc]
  40be93:	test   ecx,ecx
  40be95:	jne    40bea0 <strcmp@plt+0x86e8>
  40be97:	repz ret 
  40be99:	nop    DWORD PTR [rax+0x0]
  40bea0:	push   r15
  40bea2:	push   r14
  40bea4:	mov    r15,rdi
  40bea7:	push   r13
  40bea9:	push   r12
  40beab:	mov    r13,rsi
  40beae:	push   rbp
  40beaf:	push   rbx
  40beb0:	mov    esi,0x5
  40beb5:	mov    rdi,r13
  40beb8:	sub    rsp,0x8
  40bebc:	mov    rax,0x474860
  40bec3:	mov    rcx,QWORD PTR [rax]
  40bec6:	mov    rax,0x474858
  40becd:	mov    rdx,QWORD PTR [rax]
  40bed0:	call   43b1d0 <strcmp@plt+0x37a18>
  40bed5:	mov    r14,QWORD PTR [r13+0x8]
  40bed9:	mov    rax,QWORD PTR [r14+0x28]
  40bedd:	mov    r12,QWORD PTR [rax+0x8]
  40bee1:	cmp    rax,r12
  40bee4:	je     40bf3f <strcmp@plt+0x8787>
  40bee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bef0:	mov    rbp,QWORD PTR [r12+0x10]
  40bef5:	mov    edx,DWORD PTR [rbp+0x18]
  40bef8:	test   edx,edx
  40befa:	je     40bf34 <strcmp@plt+0x877c>
  40befc:	mov    rbx,QWORD PTR [rbp+0x8]
  40bf00:	mov    rdx,QWORD PTR [rbx+0x10]
  40bf04:	mov    rax,QWORD PTR [rdx]
  40bf07:	mov    eax,DWORD PTR [rax+0x18]
  40bf0a:	test   eax,eax
  40bf0c:	je     40bf34 <strcmp@plt+0x877c>
  40bf0e:	cmp    rbp,rbx
  40bf11:	jne    40bf1c <strcmp@plt+0x8764>
  40bf13:	jmp    40bf34 <strcmp@plt+0x877c>
  40bf15:	nop    DWORD PTR [rax]
  40bf18:	mov    rdx,QWORD PTR [rbx+0x10]
  40bf1c:	mov    ecx,DWORD PTR [r15+0xc]
  40bf20:	mov    rsi,r13
  40bf23:	mov    rdi,r15
  40bf26:	call   40bdc0 <strcmp@plt+0x8608>
  40bf2b:	mov    rbx,QWORD PTR [rbx+0x8]
  40bf2f:	cmp    rbp,rbx
  40bf32:	jne    40bf18 <strcmp@plt+0x8760>
  40bf34:	mov    r12,QWORD PTR [r12+0x8]
  40bf39:	cmp    r12,QWORD PTR [r14+0x28]
  40bf3d:	jne    40bef0 <strcmp@plt+0x8738>
  40bf3f:	add    rsp,0x8
  40bf43:	pop    rbx
  40bf44:	pop    rbp
  40bf45:	pop    r12
  40bf47:	pop    r13
  40bf49:	pop    r14
  40bf4b:	pop    r15
  40bf4d:	ret    
  40bf4e:	xchg   ax,ax
  40bf50:	push   r15
  40bf52:	push   r14
  40bf54:	mov    r14,rdx
  40bf57:	push   r13
  40bf59:	push   r12
  40bf5b:	mov    r12,rsi
  40bf5e:	push   rbp
  40bf5f:	push   rbx
  40bf60:	mov    rbp,rdi
  40bf63:	sub    rsp,0x8
  40bf67:	mov    r13,QWORD PTR [rsi+0x8]
  40bf6b:	mov    rsi,rdx
  40bf6e:	mov    rdi,r13
  40bf71:	call   42ac90 <strcmp@plt+0x274d8>
  40bf76:	test   rax,rax
  40bf79:	je     40c030 <strcmp@plt+0x8878>
  40bf7f:	mov    r14,0x468e3c
  40bf86:	mov    rbx,rax
  40bf89:	mov    edx,DWORD PTR [r14]
  40bf8c:	test   edx,edx
  40bf8e:	jle    40bfbc <strcmp@plt+0x8804>
  40bf90:	mov    rdi,r13
  40bf93:	call   424890 <strcmp@plt+0x210d8>
  40bf98:	mov    rdi,QWORD PTR [rbx]
  40bf9b:	mov    r15,rax
  40bf9e:	call   424890 <strcmp@plt+0x210d8>
  40bfa3:	lea    rsi,[rip+0x3c946]        # 4488f0 <strcmp@plt+0x45138>
  40bfaa:	mov    rdx,rax
  40bfad:	mov    rcx,r15
  40bfb0:	mov    edi,0x5
  40bfb5:	xor    eax,eax
  40bfb7:	call   4306a0 <strcmp@plt+0x2cee8>
  40bfbc:	cmp    BYTE PTR [rbx+0x8],0x0
  40bfc0:	jne    40c007 <strcmp@plt+0x884f>
  40bfc2:	mov    eax,DWORD PTR [r14]
  40bfc5:	mov    BYTE PTR [rbx+0x8],0x1
  40bfc9:	test   eax,eax
  40bfcb:	jle    40bfeb <strcmp@plt+0x8833>
  40bfcd:	mov    rdi,QWORD PTR [rbx]
  40bfd0:	call   424890 <strcmp@plt+0x210d8>
  40bfd5:	lea    rsi,[rip+0x3c94c]        # 448928 <strcmp@plt+0x45170>
  40bfdc:	mov    rdx,rax
  40bfdf:	mov    edi,0x5
  40bfe4:	xor    eax,eax
  40bfe6:	call   4306a0 <strcmp@plt+0x2cee8>
  40bfeb:	mov    rax,QWORD PTR [rbp+0x20]
  40bfef:	mov    rdi,QWORD PTR [rbp+0x28]
  40bff3:	mov    rsi,r12
  40bff6:	call   QWORD PTR [rax+0x38]
  40bff9:	lea    rdi,[rbp-0x18]
  40bffd:	xor    edx,edx
  40bfff:	mov    rsi,r13
  40c002:	call   4083c0 <strcmp@plt+0x4c08>
  40c007:	mov    ecx,DWORD PTR [rbp+0xc]
  40c00a:	mov    rdx,rbx
  40c00d:	mov    rsi,r12
  40c010:	mov    rdi,rbp
  40c013:	call   40bdc0 <strcmp@plt+0x8608>
  40c018:	add    rsp,0x8
  40c01c:	mov    eax,0x1
  40c021:	pop    rbx
  40c022:	pop    rbp
  40c023:	pop    r12
  40c025:	pop    r13
  40c027:	pop    r14
  40c029:	pop    r15
  40c02b:	ret    
  40c02c:	nop    DWORD PTR [rax+0x0]
  40c030:	mov    rax,0x468e3c
  40c037:	cmp    DWORD PTR [rax],0x1
  40c03a:	jle    40c068 <strcmp@plt+0x88b0>
  40c03c:	mov    rdi,r13
  40c03f:	call   424890 <strcmp@plt+0x210d8>
  40c044:	mov    rdi,r14
  40c047:	mov    rbx,rax
  40c04a:	call   424890 <strcmp@plt+0x210d8>
  40c04f:	lea    rsi,[rip+0x3c862]        # 4488b8 <strcmp@plt+0x45100>
  40c056:	mov    rdx,rax
  40c059:	mov    rcx,rbx
  40c05c:	mov    edi,0x6
  40c061:	xor    eax,eax
  40c063:	call   4306a0 <strcmp@plt+0x2cee8>
  40c068:	add    rsp,0x8
  40c06c:	mov    eax,0xfffffffa
  40c071:	pop    rbx
  40c072:	pop    rbp
  40c073:	pop    r12
  40c075:	pop    r13
  40c077:	pop    r14
  40c079:	pop    r15
  40c07b:	ret    
  40c07c:	nop    DWORD PTR [rax+0x0]
  40c080:	push   r12
  40c082:	push   rbp
  40c083:	mov    r12,rdi
  40c086:	push   rbx
  40c087:	mov    rbp,rsi
  40c08a:	mov    edi,0x10
  40c08f:	call   4347a0 <strcmp@plt+0x30fe8>
  40c094:	mov    rdi,rbp
  40c097:	mov    rbx,rax
  40c09a:	mov    QWORD PTR [rax],r12
  40c09d:	call   424b80 <strcmp@plt+0x213c8>
  40c0a2:	mov    QWORD PTR [rbx+0x8],rax
  40c0a6:	mov    rax,rbx
  40c0a9:	pop    rbx
  40c0aa:	pop    rbp
  40c0ab:	pop    r12
  40c0ad:	ret    
  40c0ae:	xchg   ax,ax
  40c0b0:	push   r14
  40c0b2:	push   r13
  40c0b4:	xor    eax,eax
  40c0b6:	push   r12
  40c0b8:	push   rbp
  40c0b9:	mov    r12,rsi
  40c0bc:	push   rbx
  40c0bd:	mov    rbp,rdi
  40c0c0:	mov    r13d,edx
  40c0c3:	mov    r14d,ecx
  40c0c6:	call   432ef0 <strcmp@plt+0x2f738>
  40c0cb:	test   rax,rax
  40c0ce:	mov    rbx,rax
  40c0d1:	je     40c112 <strcmp@plt+0x895a>
  40c0d3:	cmp    r13d,0x1
  40c0d7:	mov    rsi,r12
  40c0da:	mov    rdi,rax
  40c0dd:	je     40c120 <strcmp@plt+0x8968>
  40c0df:	call   432f30 <strcmp@plt+0x2f778>
  40c0e4:	mov    rax,QWORD PTR [rbp+0x20]
  40c0e8:	mov    rdi,QWORD PTR [rbp+0x28]
  40c0ec:	mov    rsi,rbx
  40c0ef:	call   QWORD PTR [rax+0x20]
  40c0f2:	cmp    eax,0x1
  40c0f5:	jne    40c130 <strcmp@plt+0x8978>
  40c0f7:	mov    rdi,QWORD PTR [rbp+0x18]
  40c0fb:	mov    rdx,rbx
  40c0fe:	mov    rsi,r12
  40c101:	call   409430 <strcmp@plt+0x5c78>
  40c106:	cmp    eax,0x1
  40c109:	jne    40c168 <strcmp@plt+0x89b0>
  40c10b:	test   r14b,r14b
  40c10e:	setne  BYTE PTR [rbx+0x10]
  40c112:	mov    rax,rbx
  40c115:	pop    rbx
  40c116:	pop    rbp
  40c117:	pop    r12
  40c119:	pop    r13
  40c11b:	pop    r14
  40c11d:	ret    
  40c11e:	xchg   ax,ax
  40c120:	call   432f20 <strcmp@plt+0x2f768>
  40c125:	jmp    40c0e4 <strcmp@plt+0x892c>
  40c127:	nop    WORD PTR [rax+rax*1+0x0]
  40c130:	mov    rdi,r12
  40c133:	call   424890 <strcmp@plt+0x210d8>
  40c138:	lea    rsi,[rip+0x3c809]        # 448948 <strcmp@plt+0x45190>
  40c13f:	mov    rdx,rax
  40c142:	mov    edi,0x3
  40c147:	xor    eax,eax
  40c149:	call   4306a0 <strcmp@plt+0x2cee8>
  40c14e:	mov    rdi,rbx
  40c151:	xor    ebx,ebx
  40c153:	call   432f40 <strcmp@plt+0x2f788>
  40c158:	mov    rax,rbx
  40c15b:	pop    rbx
  40c15c:	pop    rbp
  40c15d:	pop    r12
  40c15f:	pop    r13
  40c161:	pop    r14
  40c163:	ret    
  40c164:	nop    DWORD PTR [rax+0x0]
  40c168:	mov    rax,0x468e3c
  40c16f:	mov    eax,DWORD PTR [rax]
  40c171:	test   eax,eax
  40c173:	jle    40c193 <strcmp@plt+0x89db>
  40c175:	mov    rdi,r12
  40c178:	call   424890 <strcmp@plt+0x210d8>
  40c17d:	lea    rsi,[rip+0x3c824]        # 4489a8 <strcmp@plt+0x451f0>
  40c184:	mov    rdx,rax
  40c187:	mov    edi,0x5
  40c18c:	xor    eax,eax
  40c18e:	call   4306a0 <strcmp@plt+0x2cee8>
  40c193:	mov    rdi,rbx
  40c196:	xor    ebx,ebx
  40c198:	call   432f40 <strcmp@plt+0x2f788>
  40c19d:	mov    rax,rbx
  40c1a0:	pop    rbx
  40c1a1:	pop    rbp
  40c1a2:	pop    r12
  40c1a4:	pop    r13
  40c1a6:	pop    r14
  40c1a8:	ret    
  40c1a9:	nop    DWORD PTR [rax+0x0]
  40c1b0:	push   rbp
  40c1b1:	push   rbx
  40c1b2:	mov    rbx,rdi
  40c1b5:	lea    rdi,[rdi-0x18]
  40c1b9:	xor    edx,edx
  40c1bb:	sub    rsp,0x8
  40c1bf:	mov    rbp,QWORD PTR [rsi+0x8]
  40c1c3:	mov    rsi,rbp
  40c1c6:	call   4083c0 <strcmp@plt+0x4c08>
  40c1cb:	mov    rdi,QWORD PTR [rbx+0x18]
  40c1cf:	mov    rsi,rbp
  40c1d2:	call   409440 <strcmp@plt+0x5c88>
  40c1d7:	mov    rdi,rax
  40c1da:	call   432f40 <strcmp@plt+0x2f788>
  40c1df:	mov    rdi,QWORD PTR [rbx+0x18]
  40c1e3:	mov    esi,0x7
  40c1e8:	call   409530 <strcmp@plt+0x5d78>
  40c1ed:	add    rsp,0x8
  40c1f1:	mov    eax,0x1
  40c1f6:	pop    rbx
  40c1f7:	pop    rbp
  40c1f8:	ret    
  40c1f9:	nop    DWORD PTR [rax+0x0]
  40c200:	push   r12
  40c202:	push   rbp
  40c203:	push   rbx
  40c204:	mov    rbx,rdi
  40c207:	call   43ac30 <strcmp@plt+0x37478>
  40c20c:	mov    rdi,rbx
  40c20f:	mov    rbp,rax
  40c212:	mov    r12,QWORD PTR [rax+0x8]
  40c216:	call   43ac20 <strcmp@plt+0x37468>
  40c21b:	mov    rbx,rax
  40c21e:	mov    rax,0x468e3c
  40c225:	mov    eax,DWORD PTR [rax]
  40c227:	test   eax,eax
  40c229:	jle    40c249 <strcmp@plt+0x8a91>
  40c22b:	mov    rdi,r12
  40c22e:	call   424890 <strcmp@plt+0x210d8>
  40c233:	lea    rsi,[rip+0x3ba57]        # 447c91 <strcmp@plt+0x444d9>
  40c23a:	mov    rdx,rax
  40c23d:	mov    edi,0x5
  40c242:	xor    eax,eax
  40c244:	call   4306a0 <strcmp@plt+0x2cee8>
  40c249:	lea    rdi,[rbx+0x18]
  40c24d:	mov    rsi,rbp
  40c250:	call   40c1b0 <strcmp@plt+0x89f8>
  40c255:	pop    rbx
  40c256:	mov    eax,0x1
  40c25b:	pop    rbp
  40c25c:	pop    r12
  40c25e:	ret    
  40c25f:	nop
  40c260:	push   r12
  40c262:	push   rbp
  40c263:	mov    rbp,rdi
  40c266:	push   rbx
  40c267:	mov    rdi,QWORD PTR [rdi+0x18]
  40c26b:	mov    r12,rsi
  40c26e:	call   409490 <strcmp@plt+0x5cd8>
  40c273:	test   rax,rax
  40c276:	je     40c2d0 <strcmp@plt+0x8b18>
  40c278:	mov    rbx,rax
  40c27b:	mov    rax,0x468e3c
  40c282:	cmp    DWORD PTR [rax],0x1
  40c285:	jle    40c2a5 <strcmp@plt+0x8aed>
  40c287:	mov    rdi,r12
  40c28a:	call   424890 <strcmp@plt+0x210d8>
  40c28f:	lea    rsi,[rip+0x3c76a]        # 448a00 <strcmp@plt+0x45248>
  40c296:	mov    rdx,rax
  40c299:	mov    edi,0x6
  40c29e:	xor    eax,eax
  40c2a0:	call   4306a0 <strcmp@plt+0x2cee8>
  40c2a5:	mov    rsi,QWORD PTR [r12+0x28]
  40c2aa:	mov    rdi,QWORD PTR [rbx+0x8]
  40c2ae:	call   42a9b0 <strcmp@plt+0x271f8>
  40c2b3:	mov    rax,QWORD PTR [rbp+0x20]
  40c2b7:	mov    rdi,QWORD PTR [rbp+0x28]
  40c2bb:	mov    rsi,rbx
  40c2be:	call   QWORD PTR [rax+0x38]
  40c2c1:	pop    rbx
  40c2c2:	mov    eax,0x1
  40c2c7:	pop    rbp
  40c2c8:	pop    r12
  40c2ca:	ret    
  40c2cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c2d0:	mov    rax,0x468e3c
  40c2d7:	cmp    DWORD PTR [rax],0x1
  40c2da:	jg     40c2e8 <strcmp@plt+0x8b30>
  40c2dc:	xor    eax,eax
  40c2de:	pop    rbx
  40c2df:	pop    rbp
  40c2e0:	pop    r12
  40c2e2:	ret    
  40c2e3:	nop    DWORD PTR [rax+rax*1+0x0]
  40c2e8:	mov    rdi,r12
  40c2eb:	call   424890 <strcmp@plt+0x210d8>
  40c2f0:	lea    rsi,[rip+0x3cca9]        # 448fa0 <strcmp@plt+0x457e8>
  40c2f7:	mov    rdx,rax
  40c2fa:	mov    edi,0x6
  40c2ff:	xor    eax,eax
  40c301:	call   4306a0 <strcmp@plt+0x2cee8>
  40c306:	xor    eax,eax
  40c308:	jmp    40c2de <strcmp@plt+0x8b26>
  40c30a:	nop    WORD PTR [rax+rax*1+0x0]
  40c310:	push   rbp
  40c311:	push   rbx
  40c312:	mov    rbp,rdi
  40c315:	mov    rbx,rsi
  40c318:	sub    rsp,0x8
  40c31c:	cmp    BYTE PTR [rsi],0x1
  40c31f:	je     40c338 <strcmp@plt+0x8b80>
  40c321:	add    rsp,0x8
  40c325:	mov    rsi,rbx
  40c328:	mov    rdi,rbp
  40c32b:	pop    rbx
  40c32c:	pop    rbp
  40c32d:	jmp    40be90 <strcmp@plt+0x86d8>
  40c332:	nop    WORD PTR [rax+rax*1+0x0]
  40c338:	call   40bd40 <strcmp@plt+0x8588>
  40c33d:	jmp    40c321 <strcmp@plt+0x8b69>
  40c33f:	nop
  40c340:	push   r15
  40c342:	push   r14
  40c344:	push   r13
  40c346:	push   r12
  40c348:	mov    r12,rdi
  40c34b:	push   rbp
  40c34c:	push   rbx
  40c34d:	mov    rbp,rdx
  40c350:	sub    rsp,0x88
  40c357:	mov    rax,QWORD PTR fs:0x28
  40c360:	mov    QWORD PTR [rsp+0x78],rax
  40c365:	xor    eax,eax
  40c367:	mov    rax,QWORD PTR [rsi]
  40c36a:	lea    r14,[rsp+0x30]
  40c36f:	mov    rdi,r14
  40c372:	mov    QWORD PTR [rsp+0x30],rax
  40c377:	mov    rax,QWORD PTR [rsi+0x8]
  40c37b:	mov    QWORD PTR [rsp+0x38],rax
  40c380:	mov    rax,QWORD PTR [rsi+0x10]
  40c384:	mov    QWORD PTR [rsp+0x40],rax
  40c389:	mov    rax,QWORD PTR [rsi+0x18]
  40c38d:	mov    QWORD PTR [rsp+0x48],rax
  40c392:	mov    rax,QWORD PTR [rsi+0x20]
  40c396:	mov    QWORD PTR [rsp+0x50],rax
  40c39b:	mov    rax,QWORD PTR [rsi+0x28]
  40c39f:	mov    QWORD PTR [rsp+0x58],rax
  40c3a4:	mov    rax,QWORD PTR [rsi+0x30]
  40c3a8:	mov    QWORD PTR [rsp+0x60],rax
  40c3ad:	mov    rax,QWORD PTR [rsi+0x38]
  40c3b1:	mov    QWORD PTR [rsp+0x68],rax
  40c3b6:	call   423110 <strcmp@plt+0x1f958>
  40c3bb:	mov    rsi,QWORD PTR [rax+0x4]
  40c3bf:	mov    rbx,rax
  40c3c2:	mov    rax,0x474860
  40c3c9:	mov    rdi,QWORD PTR [rax]
  40c3cc:	call   435210 <strcmp@plt+0x31a58>
  40c3d1:	test   rax,rax
  40c3d4:	je     40c5f0 <strcmp@plt+0x8e38>
  40c3da:	mov    rdi,rax
  40c3dd:	call   435480 <strcmp@plt+0x31cc8>
  40c3e2:	test   BYTE PTR [rbx],0x8
  40c3e5:	mov    QWORD PTR [rsp+0x10],rax
  40c3ea:	je     40c4e8 <strcmp@plt+0x8d30>
  40c3f0:	cmp    BYTE PTR [rbx+0x3],0x1
  40c3f4:	jbe    40c416 <strcmp@plt+0x8c5e>
  40c3f6:	mov    rax,0x468e3c
  40c3fd:	mov    edx,DWORD PTR [rax]
  40c3ff:	test   edx,edx
  40c401:	jle    40c416 <strcmp@plt+0x8c5e>
  40c403:	lea    rsi,[rip+0x3c7ee]        # 448bf8 <strcmp@plt+0x45440>
  40c40a:	mov    edi,0x5
  40c40f:	xor    eax,eax
  40c411:	call   4306a0 <strcmp@plt+0x2cee8>
  40c416:	xor    eax,eax
  40c418:	call   42a550 <strcmp@plt+0x26d98>
  40c41d:	lea    rdx,[rsp+0x28]
  40c422:	mov    rsi,rax
  40c425:	mov    rdi,r14
  40c428:	mov    rbx,rax
  40c42b:	call   422d90 <strcmp@plt+0x1f5d8>
  40c430:	cmp    eax,0x1
  40c433:	jne    40c680 <strcmp@plt+0x8ec8>
  40c439:	mov    rdi,rbx
  40c43c:	call   42b100 <strcmp@plt+0x27948>
  40c441:	test   eax,eax
  40c443:	mov    r14d,eax
  40c446:	jne    40c660 <strcmp@plt+0x8ea8>
  40c44c:	mov    rax,QWORD PTR [rsp+0x28]
  40c451:	add    rbp,0x20
  40c455:	test   rax,rax
  40c458:	je     40c45d <strcmp@plt+0x8ca5>
  40c45a:	mov    rbp,QWORD PTR [rax]
  40c45d:	mov    rdi,QWORD PTR [r12+0x18]
  40c462:	mov    rsi,rbx
  40c465:	call   409490 <strcmp@plt+0x5cd8>
  40c46a:	test   rax,rax
  40c46d:	mov    r13,rax
  40c470:	je     40c757 <strcmp@plt+0x8f9f>
  40c476:	mov    rdi,r12
  40c479:	mov    rdx,rbp
  40c47c:	mov    rsi,rax
  40c47f:	call   40bf50 <strcmp@plt+0x8798>
  40c484:	mov    rdi,rbx
  40c487:	call   42a650 <strcmp@plt+0x26e98>
  40c48c:	mov    rsi,QWORD PTR [rsp+0x10]
  40c491:	test   rsi,rsi
  40c494:	je     40c4b2 <strcmp@plt+0x8cfa>
  40c496:	mov    rax,0x474860
  40c49d:	mov    rdi,r13
  40c4a0:	mov    rcx,QWORD PTR [rax]
  40c4a3:	mov    rax,0x474858
  40c4aa:	mov    rdx,QWORD PTR [rax]
  40c4ad:	call   43b280 <strcmp@plt+0x37ac8>
  40c4b2:	mov    r14d,0x1
  40c4b8:	mov    rcx,QWORD PTR [rsp+0x78]
  40c4bd:	xor    rcx,QWORD PTR fs:0x28
  40c4c6:	mov    eax,r14d
  40c4c9:	jne    40c77f <strcmp@plt+0x8fc7>
  40c4cf:	add    rsp,0x88
  40c4d6:	pop    rbx
  40c4d7:	pop    rbp
  40c4d8:	pop    r12
  40c4da:	pop    r13
  40c4dc:	pop    r14
  40c4de:	pop    r15
  40c4e0:	ret    
  40c4e1:	nop    DWORD PTR [rax+0x0]
  40c4e8:	mov    rdi,rax
  40c4eb:	call   43ac30 <strcmp@plt+0x37478>
  40c4f0:	mov    r13,QWORD PTR [rax]
  40c4f3:	movzx  r15d,BYTE PTR [r13+0x10]
  40c4f8:	test   r15d,r15d
  40c4fb:	je     40c630 <strcmp@plt+0x8e78>
  40c501:	cmp    BYTE PTR [rbx+0x3],0x1
  40c505:	jbe    40c51a <strcmp@plt+0x8d62>
  40c507:	lea    rsi,[rip+0x3c522]        # 448a30 <strcmp@plt+0x45278>
  40c50e:	mov    edi,0x4
  40c513:	xor    eax,eax
  40c515:	call   4306a0 <strcmp@plt+0x2cee8>
  40c51a:	mov    DWORD PTR [rsp+0xc],0x1
  40c522:	lea    rax,[rsp+0x28]
  40c527:	xor    ebp,ebp
  40c529:	mov    QWORD PTR [rsp],rax
  40c52d:	lea    rax,[r12-0x18]
  40c532:	mov    QWORD PTR [rsp+0x18],rax
  40c537:	jmp    40c58d <strcmp@plt+0x8dd5>
  40c539:	nop    DWORD PTR [rax+0x0]
  40c540:	mov    rdi,QWORD PTR [r12+0x18]
  40c545:	mov    rsi,rbx
  40c548:	call   409490 <strcmp@plt+0x5cd8>
  40c54d:	test   rax,rax
  40c550:	mov    r13,rax
  40c553:	je     40c6e0 <strcmp@plt+0x8f28>
  40c559:	mov    rax,0x468e3c
  40c560:	cmp    DWORD PTR [rax],0x1
  40c563:	jle    40c578 <strcmp@plt+0x8dc0>
  40c565:	lea    rsi,[rip+0x3c5fc]        # 448b68 <strcmp@plt+0x453b0>
  40c56c:	mov    edi,0x6
  40c571:	xor    eax,eax
  40c573:	call   4306a0 <strcmp@plt+0x2cee8>
  40c578:	mov    rdi,rbx
  40c57b:	call   42a650 <strcmp@plt+0x26e98>
  40c580:	add    ebp,0x1
  40c583:	cmp    ebp,DWORD PTR [rsp+0xc]
  40c587:	jge    40c48c <strcmp@plt+0x8cd4>
  40c58d:	xor    eax,eax
  40c58f:	call   42a550 <strcmp@plt+0x26d98>
  40c594:	mov    rdx,QWORD PTR [rsp]
  40c598:	mov    rsi,rax
  40c59b:	mov    rdi,r14
  40c59e:	mov    rbx,rax
  40c5a1:	call   422d90 <strcmp@plt+0x1f5d8>
  40c5a6:	cmp    eax,0x1
  40c5a9:	jne    40c680 <strcmp@plt+0x8ec8>
  40c5af:	mov    rdi,rbx
  40c5b2:	call   42b100 <strcmp@plt+0x27948>
  40c5b7:	test   eax,eax
  40c5b9:	jne    40c660 <strcmp@plt+0x8ea8>
  40c5bf:	test   r15d,r15d
  40c5c2:	je     40c540 <strcmp@plt+0x8d88>
  40c5c8:	mov    rsi,rbx
  40c5cb:	mov    rdi,r12
  40c5ce:	call   40c260 <strcmp@plt+0x8aa8>
  40c5d3:	cmp    eax,0x1
  40c5d6:	je     40c6a0 <strcmp@plt+0x8ee8>
  40c5dc:	mov    rdi,QWORD PTR [r12+0x18]
  40c5e1:	mov    esi,0x7
  40c5e6:	call   409530 <strcmp@plt+0x5d78>
  40c5eb:	jmp    40c580 <strcmp@plt+0x8dc8>
  40c5ed:	nop    DWORD PTR [rax]
  40c5f0:	mov    rax,0x468e3c
  40c5f7:	cmp    DWORD PTR [rax],0x1
  40c5fa:	jg     40c608 <strcmp@plt+0x8e50>
  40c5fc:	xor    r14d,r14d
  40c5ff:	jmp    40c4b8 <strcmp@plt+0x8d00>
  40c604:	nop    DWORD PTR [rax+0x0]
  40c608:	mov    rdi,QWORD PTR [rbx+0x4]
  40c60c:	xor    r14d,r14d
  40c60f:	call   4348f0 <strcmp@plt+0x31138>
  40c614:	lea    rsi,[rip+0x3c4a5]        # 448ac0 <strcmp@plt+0x45308>
  40c61b:	mov    rdx,rax
  40c61e:	mov    edi,0x6
  40c623:	xor    eax,eax
  40c625:	call   4306a0 <strcmp@plt+0x2cee8>
  40c62a:	jmp    40c4b8 <strcmp@plt+0x8d00>
  40c62f:	nop
  40c630:	movzx  eax,BYTE PTR [rbx+0x3]
  40c634:	mov    rsi,r13
  40c637:	mov    rdi,r12
  40c63a:	mov    ebx,eax
  40c63c:	mov    DWORD PTR [rsp+0xc],eax
  40c640:	call   40c1b0 <strcmp@plt+0x89f8>
  40c645:	test   ebx,ebx
  40c647:	mov    QWORD PTR [rsp+0x10],0x0
  40c650:	jne    40c522 <strcmp@plt+0x8d6a>
  40c656:	jmp    40c4b2 <strcmp@plt+0x8cfa>
  40c65b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c660:	mov    rax,0x468e3c
  40c667:	mov    eax,DWORD PTR [rax]
  40c669:	test   eax,eax
  40c66b:	jle    40c680 <strcmp@plt+0x8ec8>
  40c66d:	lea    rsi,[rip+0x3c494]        # 448b08 <strcmp@plt+0x45350>
  40c674:	mov    edi,0x5
  40c679:	xor    eax,eax
  40c67b:	call   4306a0 <strcmp@plt+0x2cee8>
  40c680:	mov    rdi,QWORD PTR [rsp+0x28]
  40c685:	xor    r14d,r14d
  40c688:	call   429d50 <strcmp@plt+0x26598>
  40c68d:	mov    rdi,rbx
  40c690:	call   42a650 <strcmp@plt+0x26e98>
  40c695:	jmp    40c4b8 <strcmp@plt+0x8d00>
  40c69a:	nop    WORD PTR [rax+rax*1+0x0]
  40c6a0:	mov    rdi,QWORD PTR [r12+0x18]
  40c6a5:	mov    rsi,rbx
  40c6a8:	call   409490 <strcmp@plt+0x5cd8>
  40c6ad:	mov    rdi,r12
  40c6b0:	mov    rsi,rax
  40c6b3:	mov    r13,rax
  40c6b6:	call   40c310 <strcmp@plt+0x8b58>
  40c6bb:	mov    rdi,QWORD PTR [rsp+0x18]
  40c6c0:	xor    edx,edx
  40c6c2:	mov    rsi,rbx
  40c6c5:	call   4083c0 <strcmp@plt+0x4c08>
  40c6ca:	mov    rdi,rbx
  40c6cd:	call   42a650 <strcmp@plt+0x26e98>
  40c6d2:	jmp    40c5dc <strcmp@plt+0x8e24>
  40c6d7:	nop    WORD PTR [rax+rax*1+0x0]
  40c6e0:	mov    ecx,0x1
  40c6e5:	mov    edx,0x1
  40c6ea:	mov    rsi,rbx
  40c6ed:	mov    rdi,r12
  40c6f0:	call   40c0b0 <strcmp@plt+0x88f8>
  40c6f5:	test   rax,rax
  40c6f8:	mov    r13,rax
  40c6fb:	je     40c73c <strcmp@plt+0x8f84>
  40c6fd:	mov    rsi,rax
  40c700:	mov    rdi,r12
  40c703:	call   40c310 <strcmp@plt+0x8b58>
  40c708:	mov    rax,0x468e3c
  40c70f:	mov    ecx,DWORD PTR [rax]
  40c711:	test   ecx,ecx
  40c713:	jle    40c5dc <strcmp@plt+0x8e24>
  40c719:	mov    rdi,rbx
  40c71c:	call   424890 <strcmp@plt+0x210d8>
  40c721:	lea    rsi,[rip+0x3c490]        # 448bb8 <strcmp@plt+0x45400>
  40c728:	mov    rdx,rax
  40c72b:	mov    edi,0x5
  40c730:	xor    eax,eax
  40c732:	call   4306a0 <strcmp@plt+0x2cee8>
  40c737:	jmp    40c5dc <strcmp@plt+0x8e24>
  40c73c:	lea    rsi,[rip+0x3c33d]        # 448a80 <strcmp@plt+0x452c8>
  40c743:	mov    rdx,rbx
  40c746:	mov    edi,0x2
  40c74b:	xor    eax,eax
  40c74d:	call   4306a0 <strcmp@plt+0x2cee8>
  40c752:	jmp    40c578 <strcmp@plt+0x8dc0>
  40c757:	mov    rax,0x468e3c
  40c75e:	cmp    DWORD PTR [rax],0x1
  40c761:	jle    40c5fc <strcmp@plt+0x8e44>
  40c767:	lea    rsi,[rip+0x3c4e2]        # 448c50 <strcmp@plt+0x45498>
  40c76e:	mov    edi,0x6
  40c773:	xor    eax,eax
  40c775:	call   4306a0 <strcmp@plt+0x2cee8>
  40c77a:	jmp    40c4b8 <strcmp@plt+0x8d00>
  40c77f:	call   403460 <__stack_chk_fail@plt>
  40c784:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c78f:	nop
  40c790:	mov    rdi,QWORD PTR [rdi+0x18]
  40c794:	jmp    4094a0 <strcmp@plt+0x5ce8>
  40c799:	nop    DWORD PTR [rax+0x0]
  40c7a0:	push   r13
  40c7a2:	push   r12
  40c7a4:	mov    r12,rdi
  40c7a7:	push   rbp
  40c7a8:	push   rbx
  40c7a9:	sub    rdi,0x18
  40c7ad:	sub    rsp,0x8
  40c7b1:	call   408350 <strcmp@plt+0x4b98>
  40c7b6:	mov    rdi,rax
  40c7b9:	call   408160 <strcmp@plt+0x49a8>
  40c7be:	test   al,0x2
  40c7c0:	mov    r13d,eax
  40c7c3:	je     40c830 <strcmp@plt+0x9078>
  40c7c5:	mov    rax,QWORD PTR [r12+0x30]
  40c7ca:	mov    rbx,QWORD PTR [rax+0x8]
  40c7ce:	cmp    rax,rbx
  40c7d1:	jne    40c80b <strcmp@plt+0x9053>
  40c7d3:	nop    DWORD PTR [rax+rax*1+0x0]
  40c7d8:	mov    rax,0x468e3c
  40c7df:	mov    eax,DWORD PTR [rax]
  40c7e1:	test   eax,eax
  40c7e3:	jg     40c880 <strcmp@plt+0x90c8>
  40c7e9:	add    rsp,0x8
  40c7ed:	xor    eax,eax
  40c7ef:	pop    rbx
  40c7f0:	pop    rbp
  40c7f1:	pop    r12
  40c7f3:	pop    r13
  40c7f5:	ret    
  40c7f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c800:	mov    rbx,QWORD PTR [rbx+0x8]
  40c804:	cmp    QWORD PTR [r12+0x30],rbx
  40c809:	je     40c830 <strcmp@plt+0x9078>
  40c80b:	mov    rbp,QWORD PTR [rbx+0x10]
  40c80f:	mov    rdi,rbp
  40c812:	call   4251c0 <strcmp@plt+0x21a08>
  40c817:	cmp    ax,0xa
  40c81b:	jne    40c800 <strcmp@plt+0x9048>
  40c81d:	mov    rax,rbp
  40c820:	add    rsp,0x8
  40c824:	pop    rbx
  40c825:	pop    rbp
  40c826:	pop    r12
  40c828:	pop    r13
  40c82a:	ret    
  40c82b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c830:	and    r13d,0x1
  40c834:	je     40c7d8 <strcmp@plt+0x9020>
  40c836:	mov    rax,QWORD PTR [r12+0x30]
  40c83b:	mov    rbx,QWORD PTR [rax+0x8]
  40c83f:	cmp    rax,rbx
  40c842:	jne    40c85f <strcmp@plt+0x90a7>
  40c844:	jmp    40c7d8 <strcmp@plt+0x9020>
  40c846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c850:	mov    rbx,QWORD PTR [rbx+0x8]
  40c854:	cmp    QWORD PTR [r12+0x30],rbx
  40c859:	je     40c7d8 <strcmp@plt+0x9020>
  40c85f:	mov    rbp,QWORD PTR [rbx+0x10]
  40c863:	mov    rdi,rbp
  40c866:	call   4251c0 <strcmp@plt+0x21a08>
  40c86b:	cmp    ax,0x2
  40c86f:	jne    40c850 <strcmp@plt+0x9098>
  40c871:	mov    rax,rbp
  40c874:	jmp    40c820 <strcmp@plt+0x9068>
  40c876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c880:	lea    rsi,[rip+0x3c3f9]        # 448c80 <strcmp@plt+0x454c8>
  40c887:	mov    edi,0x5
  40c88c:	xor    eax,eax
  40c88e:	call   4306a0 <strcmp@plt+0x2cee8>
  40c893:	jmp    40c7e9 <strcmp@plt+0x9031>
  40c898:	nop    DWORD PTR [rax+rax*1+0x0]
  40c8a0:	push   r15
  40c8a2:	push   r14
  40c8a4:	push   r13
  40c8a6:	push   r12
  40c8a8:	push   rbp
  40c8a9:	push   rbx
  40c8aa:	sub    rsp,0x78
  40c8ae:	mov    rax,QWORD PTR fs:0x28
  40c8b7:	mov    QWORD PTR [rsp+0x68],rax
  40c8bc:	xor    eax,eax
  40c8be:	mov    rax,QWORD PTR [rdi+0x30]
  40c8c2:	mov    ebx,DWORD PTR [rax+0x18]
  40c8c5:	test   ebx,ebx
  40c8c7:	jne    40c918 <strcmp@plt+0x9160>
  40c8c9:	mov    rax,0x468e3c
  40c8d0:	mov    esi,DWORD PTR [rax]
  40c8d2:	test   esi,esi
  40c8d4:	jg     40c900 <strcmp@plt+0x9148>
  40c8d6:	mov    rsi,QWORD PTR [rsp+0x68]
  40c8db:	xor    rsi,QWORD PTR fs:0x28
  40c8e4:	mov    eax,ebx
  40c8e6:	jne    40caef <strcmp@plt+0x9337>
  40c8ec:	add    rsp,0x78
  40c8f0:	pop    rbx
  40c8f1:	pop    rbp
  40c8f2:	pop    r12
  40c8f4:	pop    r13
  40c8f6:	pop    r14
  40c8f8:	pop    r15
  40c8fa:	ret    
  40c8fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c900:	lea    rsi,[rip+0x3c3a9]        # 448cb0 <strcmp@plt+0x454f8>
  40c907:	mov    edi,0x5
  40c90c:	xor    eax,eax
  40c90e:	call   4306a0 <strcmp@plt+0x2cee8>
  40c913:	jmp    40c8d6 <strcmp@plt+0x911e>
  40c915:	nop    DWORD PTR [rax]
  40c918:	lea    r15,[rdi-0x18]
  40c91c:	mov    r14,rdi
  40c91f:	mov    QWORD PTR [rsp+0x8],rcx
  40c924:	mov    rbp,rsi
  40c927:	mov    r13,QWORD PTR [rdx+0x8]
  40c92b:	mov    rdi,r15
  40c92e:	call   408350 <strcmp@plt+0x4b98>
  40c933:	mov    rdi,rax
  40c936:	call   4080d0 <strcmp@plt+0x4918>
  40c93b:	mov    r12,rax
  40c93e:	mov    rax,0x468e3c
  40c945:	mov    ecx,DWORD PTR [rax]
  40c947:	test   ecx,ecx
  40c949:	mov    rcx,QWORD PTR [rsp+0x8]
  40c94e:	jg     40ca20 <strcmp@plt+0x9268>
  40c954:	mov    rdx,r13
  40c957:	mov    rsi,r12
  40c95a:	mov    rdi,rbp
  40c95d:	mov    QWORD PTR [rsp+0x8],rcx
  40c962:	call   423920 <strcmp@plt+0x20168>
  40c967:	test   rax,rax
  40c96a:	mov    rbx,rax
  40c96d:	mov    rcx,QWORD PTR [rsp+0x8]
  40c972:	je     40cab0 <strcmp@plt+0x92f8>
  40c978:	movzx  eax,WORD PTR [rax+0x24]
  40c97c:	cmp    ax,0xffff
  40c980:	je     40ca10 <strcmp@plt+0x9258>
  40c986:	mov    rdx,QWORD PTR [rbx+0x30]
  40c98a:	mov    QWORD PTR [rdx+rax*1+0x4],rcx
  40c98f:	mov    rax,0x468e3c
  40c996:	mov    eax,DWORD PTR [rax]
  40c998:	test   eax,eax
  40c99a:	jg     40ca50 <strcmp@plt+0x9298>
  40c9a0:	mov    rdi,r12
  40c9a3:	call   42dac0 <strcmp@plt+0x2a308>
  40c9a8:	mov    r8,r13
  40c9ab:	mov    rcx,rbp
  40c9ae:	mov    edx,0x10f6
  40c9b3:	mov    esi,0x10f6
  40c9b8:	mov    rdi,rbx
  40c9bb:	call   423bc0 <strcmp@plt+0x20408>
  40c9c0:	mov    rdi,r14
  40c9c3:	call   40c7a0 <strcmp@plt+0x8fe8>
  40c9c8:	test   rax,rax
  40c9cb:	mov    r8,rax
  40c9ce:	je     40cae0 <strcmp@plt+0x9328>
  40c9d4:	lea    rbp,[rsp+0x20]
  40c9d9:	xor    ecx,ecx
  40c9db:	mov    edx,0x10f6
  40c9e0:	mov    esi,0x10f6
  40c9e5:	mov    rdi,rbp
  40c9e8:	call   438840 <strcmp@plt+0x35088>
  40c9ed:	mov    rsi,rbx
  40c9f0:	mov    rdx,rbp
  40c9f3:	mov    rdi,r15
  40c9f6:	call   4083b0 <strcmp@plt+0x4bf8>
  40c9fb:	mov    rdi,rbx
  40c9fe:	mov    ebx,0x1
  40ca03:	call   4300b0 <strcmp@plt+0x2c8f8>
  40ca08:	jmp    40c8d6 <strcmp@plt+0x911e>
  40ca0d:	nop    DWORD PTR [rax]
  40ca10:	mov    QWORD PTR ds:0x4,0x0
  40ca1c:	ud2    
  40ca1e:	xchg   ax,ax
  40ca20:	mov    rdi,r12
  40ca23:	mov    QWORD PTR [rsp+0x8],rcx
  40ca28:	call   424530 <strcmp@plt+0x20d78>
  40ca2d:	lea    rsi,[rip+0x3c586]        # 448fba <strcmp@plt+0x45802>
  40ca34:	mov    rdx,rax
  40ca37:	mov    edi,0x5
  40ca3c:	xor    eax,eax
  40ca3e:	call   4306a0 <strcmp@plt+0x2cee8>
  40ca43:	mov    rcx,QWORD PTR [rsp+0x8]
  40ca48:	jmp    40c954 <strcmp@plt+0x919c>
  40ca4d:	nop    DWORD PTR [rax]
  40ca50:	mov    rdi,r13
  40ca53:	call   424890 <strcmp@plt+0x210d8>
  40ca58:	mov    rdi,rbp
  40ca5b:	mov    QWORD PTR [rsp+0x18],rax
  40ca60:	call   424890 <strcmp@plt+0x210d8>
  40ca65:	mov    rdi,r12
  40ca68:	mov    QWORD PTR [rsp+0x10],rax
  40ca6d:	call   424530 <strcmp@plt+0x20d78>
  40ca72:	mov    rdi,rbx
  40ca75:	mov    QWORD PTR [rsp+0x8],rax
  40ca7a:	call   423a90 <strcmp@plt+0x202d8>
  40ca7f:	mov    r9,QWORD PTR [rsp+0x18]
  40ca84:	mov    r8,QWORD PTR [rsp+0x10]
  40ca89:	lea    rsi,[rip+0x3c2b0]        # 448d40 <strcmp@plt+0x45588>
  40ca90:	mov    rcx,QWORD PTR [rsp+0x8]
  40ca95:	mov    rdx,rax
  40ca98:	mov    edi,0x5
  40ca9d:	xor    eax,eax
  40ca9f:	call   4306a0 <strcmp@plt+0x2cee8>
  40caa4:	jmp    40c9a0 <strcmp@plt+0x91e8>
  40caa9:	nop    DWORD PTR [rax+0x0]
  40cab0:	mov    rax,0x468e3c
  40cab7:	mov    edx,DWORD PTR [rax]
  40cab9:	test   edx,edx
  40cabb:	jle    40cad0 <strcmp@plt+0x9318>
  40cabd:	lea    rsi,[rip+0x3c22c]        # 448cf0 <strcmp@plt+0x45538>
  40cac4:	mov    edi,0x5
  40cac9:	xor    eax,eax
  40cacb:	call   4306a0 <strcmp@plt+0x2cee8>
  40cad0:	mov    rdi,r12
  40cad3:	xor    ebx,ebx
  40cad5:	call   42dac0 <strcmp@plt+0x2a308>
  40cada:	jmp    40c8d6 <strcmp@plt+0x911e>
  40cadf:	nop
  40cae0:	mov    rdi,rbx
  40cae3:	xor    ebx,ebx
  40cae5:	call   4300b0 <strcmp@plt+0x2c8f8>
  40caea:	jmp    40c8d6 <strcmp@plt+0x911e>
  40caef:	call   403460 <__stack_chk_fail@plt>
  40caf4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40caff:	nop
  40cb00:	push   r15
  40cb02:	push   r14
  40cb04:	push   r13
  40cb06:	push   r12
  40cb08:	push   rbp
  40cb09:	push   rbx
  40cb0a:	mov    rbx,rdi
  40cb0d:	sub    rsp,0x18
  40cb11:	call   43ac30 <strcmp@plt+0x37478>
  40cb16:	mov    rdi,rbx
  40cb19:	mov    rbp,rax
  40cb1c:	call   43ac50 <strcmp@plt+0x37498>
  40cb21:	mov    rdi,rbx
  40cb24:	mov    r13,rax
  40cb27:	call   43ac20 <strcmp@plt+0x37468>
  40cb2c:	mov    rdi,r13
  40cb2f:	mov    r15,rax
  40cb32:	lea    r14,[rax+0x18]
  40cb36:	call   4355a0 <strcmp@plt+0x31de8>
  40cb3b:	cmp    eax,DWORD PTR [r15+0x20]
  40cb3f:	mov    rsi,QWORD PTR [rbp+0x0]
  40cb43:	mov    r12d,eax
  40cb46:	mov    rdi,QWORD PTR [rsi+0x8]
  40cb4a:	jg     40cc00 <strcmp@plt+0x9448>
  40cb50:	test   eax,eax
  40cb52:	jle    40cb61 <strcmp@plt+0x93a9>
  40cb54:	mov    rax,0x468e3c
  40cb5b:	mov    edx,DWORD PTR [rax]
  40cb5d:	test   edx,edx
  40cb5f:	jg     40cb98 <strcmp@plt+0x93e0>
  40cb61:	xor    eax,eax
  40cb63:	call   435450 <strcmp@plt+0x31c98>
  40cb68:	mov    rsi,QWORD PTR [rbp+0x8]
  40cb6c:	mov    rdx,QWORD PTR [rbp+0x0]
  40cb70:	mov    rcx,rax
  40cb73:	mov    rdi,r14
  40cb76:	mov    r12,rax
  40cb79:	call   40c8a0 <strcmp@plt+0x90e8>
  40cb7e:	cmp    eax,0x1
  40cb81:	je     40cbc0 <strcmp@plt+0x9408>
  40cb83:	xor    eax,eax
  40cb85:	add    rsp,0x18
  40cb89:	pop    rbx
  40cb8a:	pop    rbp
  40cb8b:	pop    r12
  40cb8d:	pop    r13
  40cb8f:	pop    r14
  40cb91:	pop    r15
  40cb93:	ret    
  40cb94:	nop    DWORD PTR [rax+0x0]
  40cb98:	call   424890 <strcmp@plt+0x210d8>
  40cb9d:	lea    rsi,[rip+0x3c1cc]        # 448d70 <strcmp@plt+0x455b8>
  40cba4:	mov    rdx,rax
  40cba7:	mov    ecx,r12d
  40cbaa:	mov    edi,0x5
  40cbaf:	xor    eax,eax
  40cbb1:	call   4306a0 <strcmp@plt+0x2cee8>
  40cbb6:	jmp    40cb61 <strcmp@plt+0x93a9>
  40cbb8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cbc0:	mov    rcx,0x474860
  40cbc7:	mov    rdx,r13
  40cbca:	mov    rsi,r12
  40cbcd:	mov    DWORD PTR [rsp+0xc],eax
  40cbd1:	mov    rdi,QWORD PTR [rcx]
  40cbd4:	call   434960 <strcmp@plt+0x311a8>
  40cbd9:	mov    rdi,rbx
  40cbdc:	mov    esi,0x2
  40cbe1:	call   43ac60 <strcmp@plt+0x374a8>
  40cbe6:	mov    eax,DWORD PTR [rsp+0xc]
  40cbea:	add    rsp,0x18
  40cbee:	pop    rbx
  40cbef:	pop    rbp
  40cbf0:	pop    r12
  40cbf2:	pop    r13
  40cbf4:	pop    r14
  40cbf6:	pop    r15
  40cbf8:	ret    
  40cbf9:	nop    DWORD PTR [rax+0x0]
  40cc00:	mov    rax,0x468e3c
  40cc07:	mov    eax,DWORD PTR [rax]
  40cc09:	test   eax,eax
  40cc0b:	jle    40cc31 <strcmp@plt+0x9479>
  40cc0d:	call   424890 <strcmp@plt+0x210d8>
  40cc12:	lea    rsi,[rip+0x3c18f]        # 448da8 <strcmp@plt+0x455f0>
  40cc19:	lea    ecx,[r12-0x1]
  40cc1e:	mov    rdx,rax
  40cc21:	mov    edi,0x5
  40cc26:	xor    eax,eax
  40cc28:	call   4306a0 <strcmp@plt+0x2cee8>
  40cc2d:	mov    rsi,QWORD PTR [rbp+0x0]
  40cc31:	mov    rdi,r14
  40cc34:	call   40c1b0 <strcmp@plt+0x89f8>
  40cc39:	mov    eax,0xffffff9d
  40cc3e:	jmp    40cb85 <strcmp@plt+0x93cd>
  40cc43:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40cc4e:	xchg   ax,ax
  40cc50:	push   r13
  40cc52:	push   r12
  40cc54:	mov    r13,rdx
  40cc57:	push   rbp
  40cc58:	push   rbx
  40cc59:	mov    rbp,rdi
  40cc5c:	mov    rdi,rsi
  40cc5f:	mov    r12,rsi
  40cc62:	sub    rsp,0x18
  40cc66:	call   42a590 <strcmp@plt+0x26dd8>
  40cc6b:	xor    ecx,ecx
  40cc6d:	mov    BYTE PTR [rax+0x34],0x1
  40cc71:	mov    edx,0x1
  40cc76:	mov    rsi,rax
  40cc79:	mov    rdi,rbp
  40cc7c:	call   40c0b0 <strcmp@plt+0x88f8>
  40cc81:	test   rax,rax
  40cc84:	je     40cd20 <strcmp@plt+0x9568>
  40cc8a:	mov    rdi,r12
  40cc8d:	mov    rbx,rax
  40cc90:	call   424890 <strcmp@plt+0x210d8>
  40cc95:	lea    rsi,[rip+0x3c17c]        # 448e18 <strcmp@plt+0x45660>
  40cc9c:	mov    rdx,rax
  40cc9f:	mov    edi,0x1
  40cca4:	xor    eax,eax
  40cca6:	call   403030 <__printf_chk@plt>
  40ccab:	mov    rsi,r13
  40ccae:	mov    rdi,rbx
  40ccb1:	call   40c080 <strcmp@plt+0x88c8>
  40ccb6:	mov    r8,0x40b7a0
  40ccbd:	mov    rdx,0x40cb00
  40ccc4:	lea    rsi,[rbp-0x18]
  40ccc8:	mov    rcx,rax
  40cccb:	mov    edi,0x4
  40ccd0:	call   43af50 <strcmp@plt+0x37798>
  40ccd5:	mov    rdx,rax
  40ccd8:	mov    r12,rax
  40ccdb:	mov    rax,0x474858
  40cce2:	mov    rsi,rbx
  40cce5:	mov    rdi,QWORD PTR [rax]
  40cce8:	call   43afa0 <strcmp@plt+0x377e8>
  40cced:	mov    rdi,r12
  40ccf0:	call   40cb00 <strcmp@plt+0x9348>
  40ccf5:	test   eax,eax
  40ccf7:	jne    40cd11 <strcmp@plt+0x9559>
  40ccf9:	mov    edx,0xa
  40ccfe:	mov    rsi,rbx
  40cd01:	mov    rdi,rbp
  40cd04:	mov    DWORD PTR [rsp+0xc],eax
  40cd08:	call   40bc70 <strcmp@plt+0x84b8>
  40cd0d:	mov    eax,DWORD PTR [rsp+0xc]
  40cd11:	add    rsp,0x18
  40cd15:	pop    rbx
  40cd16:	pop    rbp
  40cd17:	pop    r12
  40cd19:	pop    r13
  40cd1b:	ret    
  40cd1c:	nop    DWORD PTR [rax+0x0]
  40cd20:	mov    rdi,r12
  40cd23:	call   424890 <strcmp@plt+0x210d8>
  40cd28:	lea    rsi,[rip+0x3c0b1]        # 448de0 <strcmp@plt+0x45628>
  40cd2f:	mov    rdx,rax
  40cd32:	mov    edi,0x3
  40cd37:	xor    eax,eax
  40cd39:	call   4306a0 <strcmp@plt+0x2cee8>
  40cd3e:	xor    edi,edi
  40cd40:	call   432f40 <strcmp@plt+0x2f788>
  40cd45:	add    rsp,0x18
  40cd49:	xor    eax,eax
  40cd4b:	pop    rbx
  40cd4c:	pop    rbp
  40cd4d:	pop    r12
  40cd4f:	pop    r13
  40cd51:	ret    
  40cd52:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40cd5d:	nop    DWORD PTR [rax]
  40cd60:	push   r15
  40cd62:	push   r14
  40cd64:	push   r13
  40cd66:	push   r12
  40cd68:	push   rbp
  40cd69:	push   rbx
  40cd6a:	mov    rbx,rdi
  40cd6d:	sub    rsp,0x88
  40cd74:	mov    rax,QWORD PTR fs:0x28
  40cd7d:	mov    QWORD PTR [rsp+0x78],rax
  40cd82:	xor    eax,eax
  40cd84:	call   43ac30 <strcmp@plt+0x37478>
  40cd89:	mov    rdi,rbx
  40cd8c:	mov    r13,rax
  40cd8f:	call   43ac50 <strcmp@plt+0x37498>
  40cd94:	mov    rdi,rbx
  40cd97:	mov    r12,rax
  40cd9a:	call   43ac20 <strcmp@plt+0x37468>
  40cd9f:	mov    rdi,r12
  40cda2:	mov    rbp,rax
  40cda5:	call   4355a0 <strcmp@plt+0x31de8>
  40cdaa:	cmp    eax,0x2
  40cdad:	jle    40ce20 <strcmp@plt+0x9668>
  40cdaf:	mov    rax,0x468e3c
  40cdb6:	mov    rsi,QWORD PTR [r13+0x0]
  40cdba:	mov    eax,DWORD PTR [rax]
  40cdbc:	test   eax,eax
  40cdbe:	jg     40cdf8 <strcmp@plt+0x9640>
  40cdc0:	lea    rdi,[rbp+0x18]
  40cdc4:	call   40c1b0 <strcmp@plt+0x89f8>
  40cdc9:	xor    eax,eax
  40cdcb:	mov    rcx,QWORD PTR [rsp+0x78]
  40cdd0:	xor    rcx,QWORD PTR fs:0x28
  40cdd9:	jne    40d124 <strcmp@plt+0x996c>
  40cddf:	add    rsp,0x88
  40cde6:	pop    rbx
  40cde7:	pop    rbp
  40cde8:	pop    r12
  40cdea:	pop    r13
  40cdec:	pop    r14
  40cdee:	pop    r15
  40cdf0:	ret    
  40cdf1:	nop    DWORD PTR [rax+0x0]
  40cdf8:	mov    rdi,QWORD PTR [rsi+0x8]
  40cdfc:	call   424890 <strcmp@plt+0x210d8>
  40ce01:	lea    rsi,[rip+0x3c110]        # 448f18 <strcmp@plt+0x45760>
  40ce08:	mov    rdx,rax
  40ce0b:	mov    edi,0x5
  40ce10:	xor    eax,eax
  40ce12:	call   4306a0 <strcmp@plt+0x2cee8>
  40ce17:	mov    rsi,QWORD PTR [r13+0x0]
  40ce1b:	jmp    40cdc0 <strcmp@plt+0x9608>
  40ce1d:	nop    DWORD PTR [rax]
  40ce20:	xor    eax,eax
  40ce22:	call   435450 <strcmp@plt+0x31c98>
  40ce27:	mov    QWORD PTR [rsp+0x18],rax
  40ce2c:	mov    rax,QWORD PTR [r13+0x0]
  40ce30:	mov    r15,QWORD PTR [r13+0x8]
  40ce34:	mov    r14,QWORD PTR [rax+0x8]
  40ce38:	mov    rdi,r14
  40ce3b:	call   4251c0 <strcmp@plt+0x21a08>
  40ce40:	movzx  eax,ax
  40ce43:	mov    DWORD PTR [rsp+0x10],eax
  40ce47:	mov    rax,0x468e3c
  40ce4e:	mov    esi,DWORD PTR [rax]
  40ce50:	test   esi,esi
  40ce52:	jg     40d008 <strcmp@plt+0x9850>
  40ce58:	mov    rdi,rbp
  40ce5b:	call   408350 <strcmp@plt+0x4b98>
  40ce60:	mov    rdi,rax
  40ce63:	call   4080d0 <strcmp@plt+0x4918>
  40ce68:	mov    rdx,r14
  40ce6b:	mov    rsi,rax
  40ce6e:	mov    rdi,r15
  40ce71:	mov    QWORD PTR [rsp+0x20],rax
  40ce76:	call   423920 <strcmp@plt+0x20168>
  40ce7b:	test   rax,rax
  40ce7e:	mov    r13,rax
  40ce81:	je     40d100 <strcmp@plt+0x9948>
  40ce87:	movzx  eax,WORD PTR [rax+0x24]
  40ce8b:	cmp    ax,0xffff
  40ce8f:	je     40cff0 <strcmp@plt+0x9838>
  40ce95:	add    rax,QWORD PTR [r13+0x30]
  40ce99:	mov    rdx,QWORD PTR [rsp+0x18]
  40ce9e:	mov    rdi,r14
  40cea1:	or     BYTE PTR [rax+0x1],0x40
  40cea5:	mov    QWORD PTR [rax+0x4],rdx
  40cea9:	call   425110 <strcmp@plt+0x21958>
  40ceae:	mov    rdi,rax
  40ceb1:	call   436e30 <strcmp@plt+0x33678>
  40ceb6:	mov    rdi,r15
  40ceb9:	mov    QWORD PTR [rsp+0x8],rax
  40cebe:	call   4251c0 <strcmp@plt+0x21a08>
  40cec3:	movzx  eax,ax
  40cec6:	cmp    DWORD PTR [rsp+0x10],eax
  40ceca:	je     40d030 <strcmp@plt+0x9878>
  40ced0:	mov    rdi,rbp
  40ced3:	call   408350 <strcmp@plt+0x4b98>
  40ced8:	mov    esi,DWORD PTR [rsp+0x10]
  40cedc:	mov    rdi,rax
  40cedf:	call   4080c0 <strcmp@plt+0x4908>
  40cee4:	test   rax,rax
  40cee7:	je     40d050 <strcmp@plt+0x9898>
  40ceed:	mov    rdi,rax
  40cef0:	call   424b80 <strcmp@plt+0x213c8>
  40cef5:	mov    QWORD PTR [rsp+0x10],rax
  40cefa:	mov    rax,0x468e3c
  40cf01:	mov    edx,DWORD PTR [rax]
  40cf03:	test   edx,edx
  40cf05:	jle    40cf55 <strcmp@plt+0x979d>
  40cf07:	mov    rdi,r14
  40cf0a:	call   424890 <strcmp@plt+0x210d8>
  40cf0f:	mov    rdi,r15
  40cf12:	mov    r14,rax
  40cf15:	call   424890 <strcmp@plt+0x210d8>
  40cf1a:	mov    rdi,QWORD PTR [rsp+0x20]
  40cf1f:	mov    r15,rax
  40cf22:	call   424530 <strcmp@plt+0x20d78>
  40cf27:	mov    rdi,r13
  40cf2a:	mov    QWORD PTR [rsp+0x28],rax
  40cf2f:	call   423a90 <strcmp@plt+0x202d8>
  40cf34:	mov    rcx,QWORD PTR [rsp+0x28]
  40cf39:	lea    rsi,[rip+0x3bfa8]        # 448ee8 <strcmp@plt+0x45730>
  40cf40:	mov    rdx,rax
  40cf43:	mov    r9,r14
  40cf46:	mov    r8,r15
  40cf49:	mov    edi,0x5
  40cf4e:	xor    eax,eax
  40cf50:	call   4306a0 <strcmp@plt+0x2cee8>
  40cf55:	mov    r8,QWORD PTR [rsp+0x8]
  40cf5a:	mov    rcx,QWORD PTR [rsp+0x10]
  40cf5f:	mov    edx,0x10f6
  40cf64:	mov    esi,0x10f6
  40cf69:	mov    rdi,r13
  40cf6c:	call   423bc0 <strcmp@plt+0x20408>
  40cf71:	lea    rdi,[rbp+0x18]
  40cf75:	call   40c7a0 <strcmp@plt+0x8fe8>
  40cf7a:	test   rax,rax
  40cf7d:	mov    r8,rax
  40cf80:	je     40d0d0 <strcmp@plt+0x9918>
  40cf86:	lea    r14,[rsp+0x30]
  40cf8b:	xor    ecx,ecx
  40cf8d:	mov    edx,0x10f6
  40cf92:	mov    esi,0x10f6
  40cf97:	mov    rdi,r14
  40cf9a:	call   438840 <strcmp@plt+0x35088>
  40cf9f:	mov    rdx,r14
  40cfa2:	mov    rsi,r13
  40cfa5:	mov    rdi,rbp
  40cfa8:	call   4083b0 <strcmp@plt+0x4bf8>
  40cfad:	mov    rdi,QWORD PTR [rsp+0x20]
  40cfb2:	mov    DWORD PTR [rsp+0x28],eax
  40cfb6:	call   42dac0 <strcmp@plt+0x2a308>
  40cfbb:	mov    rdi,r13
  40cfbe:	call   4300b0 <strcmp@plt+0x2c8f8>
  40cfc3:	mov    rdi,QWORD PTR [rsp+0x10]
  40cfc8:	call   424750 <strcmp@plt+0x20f98>
  40cfcd:	mov    rdi,QWORD PTR [rsp+0x8]
  40cfd2:	call   424750 <strcmp@plt+0x20f98>
  40cfd7:	mov    eax,DWORD PTR [rsp+0x28]
  40cfdb:	cmp    eax,0x1
  40cfde:	je     40d070 <strcmp@plt+0x98b8>
  40cfe4:	xor    eax,eax
  40cfe6:	jmp    40cdcb <strcmp@plt+0x9613>
  40cfeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cff0:	movzx  eax,WORD PTR ds:0x0
  40cff8:	and    ah,0xbf
  40cffb:	mov    WORD PTR ds:0x0,ax
  40d003:	ud2    
  40d005:	nop    DWORD PTR [rax]
  40d008:	mov    rdi,r14
  40d00b:	call   424890 <strcmp@plt+0x210d8>
  40d010:	lea    rsi,[rip+0x3bfb8]        # 448fcf <strcmp@plt+0x45817>
  40d017:	mov    rdx,rax
  40d01a:	mov    edi,0x5
  40d01f:	xor    eax,eax
  40d021:	call   4306a0 <strcmp@plt+0x2cee8>
  40d026:	jmp    40ce58 <strcmp@plt+0x96a0>
  40d02b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d030:	mov    rdi,r15
  40d033:	call   425050 <strcmp@plt+0x21898>
  40d038:	mov    rdi,rax
  40d03b:	call   424b80 <strcmp@plt+0x213c8>
  40d040:	mov    QWORD PTR [rsp+0x10],rax
  40d045:	jmp    40cefa <strcmp@plt+0x9742>
  40d04a:	nop    WORD PTR [rax+rax*1+0x0]
  40d050:	mov    rax,0x468e3c
  40d057:	mov    ecx,DWORD PTR [rax]
  40d059:	test   ecx,ecx
  40d05b:	jg     40d0a8 <strcmp@plt+0x98f0>
  40d05d:	mov    rdi,QWORD PTR [rsp+0x8]
  40d062:	call   424750 <strcmp@plt+0x20f98>
  40d067:	xor    eax,eax
  40d069:	jmp    40cdcb <strcmp@plt+0x9613>
  40d06e:	xchg   ax,ax
  40d070:	mov    rcx,0x474860
  40d077:	mov    rsi,QWORD PTR [rsp+0x18]
  40d07c:	mov    rdx,r12
  40d07f:	mov    DWORD PTR [rsp+0x8],eax
  40d083:	mov    rdi,QWORD PTR [rcx]
  40d086:	call   434960 <strcmp@plt+0x311a8>
  40d08b:	mov    esi,0x3
  40d090:	mov    rdi,rbx
  40d093:	call   43ac60 <strcmp@plt+0x374a8>
  40d098:	mov    eax,DWORD PTR [rsp+0x8]
  40d09c:	jmp    40cdcb <strcmp@plt+0x9613>
  40d0a1:	nop    DWORD PTR [rax+0x0]
  40d0a8:	mov    rdi,r14
  40d0ab:	call   424890 <strcmp@plt+0x210d8>
  40d0b0:	lea    rsi,[rip+0x3bdd9]        # 448e90 <strcmp@plt+0x456d8>
  40d0b7:	mov    rdx,rax
  40d0ba:	mov    edi,0x5
  40d0bf:	xor    eax,eax
  40d0c1:	call   4306a0 <strcmp@plt+0x2cee8>
  40d0c6:	jmp    40d05d <strcmp@plt+0x98a5>
  40d0c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d0d0:	mov    rdi,QWORD PTR [rsp+0x20]
  40d0d5:	call   42dac0 <strcmp@plt+0x2a308>
  40d0da:	mov    rdi,QWORD PTR [rsp+0x10]
  40d0df:	call   424750 <strcmp@plt+0x20f98>
  40d0e4:	mov    rdi,QWORD PTR [rsp+0x8]
  40d0e9:	call   424750 <strcmp@plt+0x20f98>
  40d0ee:	mov    rdi,r13
  40d0f1:	call   4300b0 <strcmp@plt+0x2c8f8>
  40d0f6:	xor    eax,eax
  40d0f8:	jmp    40cdcb <strcmp@plt+0x9613>
  40d0fd:	nop    DWORD PTR [rax]
  40d100:	lea    rsi,[rip+0x3bd41]        # 448e48 <strcmp@plt+0x45690>
  40d107:	xor    eax,eax
  40d109:	mov    edi,0x3
  40d10e:	call   4306a0 <strcmp@plt+0x2cee8>
  40d113:	mov    rdi,QWORD PTR [rsp+0x20]
  40d118:	call   42dac0 <strcmp@plt+0x2a308>
  40d11d:	xor    eax,eax
  40d11f:	jmp    40cdcb <strcmp@plt+0x9613>
  40d124:	call   403460 <__stack_chk_fail@plt>
  40d129:	nop    DWORD PTR [rax+0x0]
  40d130:	push   r13
  40d132:	push   r12
  40d134:	mov    r13,rsi
  40d137:	push   rbp
  40d138:	push   rbx
  40d139:	mov    rbx,rdi
  40d13c:	mov    rsi,rdx
  40d13f:	mov    r12,rdx
  40d142:	sub    rsp,0x8
  40d146:	mov    rdi,QWORD PTR [rdi+0x18]
  40d14a:	call   409450 <strcmp@plt+0x5c98>
  40d14f:	test   rax,rax
  40d152:	je     40d1b8 <strcmp@plt+0x9a00>
  40d154:	mov    rsi,r13
  40d157:	mov    rdi,rax
  40d15a:	mov    rbp,rax
  40d15d:	call   40c080 <strcmp@plt+0x88c8>
  40d162:	mov    r8,0x40b7a0
  40d169:	mov    rdx,0x40cd60
  40d170:	lea    rsi,[rbx-0x18]
  40d174:	mov    rcx,rax
  40d177:	mov    edi,0x7
  40d17c:	call   43af50 <strcmp@plt+0x37798>
  40d181:	mov    rbx,rax
  40d184:	mov    rdx,rax
  40d187:	mov    rax,0x474858
  40d18e:	mov    rsi,rbp
  40d191:	mov    rdi,QWORD PTR [rax]
  40d194:	call   43afa0 <strcmp@plt+0x377e8>
  40d199:	mov    rdi,rbx
  40d19c:	call   40cd60 <strcmp@plt+0x95a8>
  40d1a1:	add    rsp,0x8
  40d1a5:	mov    eax,0x1
  40d1aa:	pop    rbx
  40d1ab:	pop    rbp
  40d1ac:	pop    r12
  40d1ae:	pop    r13
  40d1b0:	ret    
  40d1b1:	nop    DWORD PTR [rax+0x0]
  40d1b8:	mov    rax,0x468e3c
  40d1bf:	cmp    DWORD PTR [rax],0x1
  40d1c2:	jg     40d1d8 <strcmp@plt+0x9a20>
  40d1c4:	xor    eax,eax
  40d1c6:	add    rsp,0x8
  40d1ca:	pop    rbx
  40d1cb:	pop    rbp
  40d1cc:	pop    r12
  40d1ce:	pop    r13
  40d1d0:	ret    
  40d1d1:	nop    DWORD PTR [rax+0x0]
  40d1d8:	mov    rdi,r12
  40d1db:	call   424890 <strcmp@plt+0x210d8>
  40d1e0:	lea    rsi,[rip+0x3bd69]        # 448f50 <strcmp@plt+0x45798>
  40d1e7:	mov    rdx,rax
  40d1ea:	mov    edi,0x6
  40d1ef:	xor    eax,eax
  40d1f1:	call   4306a0 <strcmp@plt+0x2cee8>
  40d1f6:	xor    eax,eax
  40d1f8:	jmp    40d1c6 <strcmp@plt+0x9a0e>
  40d1fa:	nop    WORD PTR [rax+rax*1+0x0]
  40d200:	push   r15
  40d202:	push   r14
  40d204:	mov    r15,rdi
  40d207:	push   r13
  40d209:	push   r12
  40d20b:	mov    r13,rsi
  40d20e:	push   rbp
  40d20f:	push   rbx
  40d210:	mov    rsi,rdi
  40d213:	mov    edx,0x3
  40d218:	sub    rsp,0x8
  40d21c:	mov    r14,0x474858
  40d223:	mov    rdi,QWORD PTR [r14]
  40d226:	call   43b020 <strcmp@plt+0x37868>
  40d22b:	mov    rbx,QWORD PTR [rax+0x8]
  40d22f:	mov    r12,rax
  40d232:	cmp    rax,rbx
  40d235:	je     40d25b <strcmp@plt+0x9aa3>
  40d237:	nop    WORD PTR [rax+rax*1+0x0]
  40d240:	mov    rbp,QWORD PTR [rbx+0x10]
  40d244:	mov    rdi,rbp
  40d247:	call   43ac30 <strcmp@plt+0x37478>
  40d24c:	cmp    QWORD PTR [rax+0x10],r13
  40d250:	je     40d278 <strcmp@plt+0x9ac0>
  40d252:	mov    rbx,QWORD PTR [rbx+0x8]
  40d256:	cmp    r12,rbx
  40d259:	jne    40d240 <strcmp@plt+0x9a88>
  40d25b:	add    rsp,0x8
  40d25f:	mov    rdi,r12
  40d262:	pop    rbx
  40d263:	pop    rbp
  40d264:	pop    r12
  40d266:	pop    r13
  40d268:	pop    r14
  40d26a:	pop    r15
  40d26c:	jmp    42dac0 <strcmp@plt+0x2a308>
  40d271:	nop    DWORD PTR [rax+0x0]
  40d278:	mov    rax,0x474860
  40d27f:	mov    rdx,QWORD PTR [r14]
  40d282:	mov    rsi,rbp
  40d285:	mov    rdi,r15
  40d288:	mov    rcx,QWORD PTR [rax]
  40d28b:	call   43b280 <strcmp@plt+0x37ac8>
  40d290:	jmp    40d252 <strcmp@plt+0x9a9a>
  40d292:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d29d:	nop    DWORD PTR [rax]
  40d2a0:	jmp    4037b0 <free@plt>
  40d2a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d2b0:	push   rbx
  40d2b1:	mov    rbx,rdi
  40d2b4:	mov    rdi,QWORD PTR [rdi+0x18]
  40d2b8:	call   424750 <strcmp@plt+0x20f98>
  40d2bd:	mov    rdi,rbx
  40d2c0:	pop    rbx
  40d2c1:	jmp    4037b0 <free@plt>
  40d2c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d2d0:	jmp    4037b0 <free@plt>
  40d2d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d2e0:	test   rdi,rdi
  40d2e3:	je     40d308 <strcmp@plt+0x9b50>
  40d2e5:	push   rbx
  40d2e6:	mov    rbx,rdi
  40d2e9:	mov    rdi,QWORD PTR [rdi]
  40d2ec:	call   424750 <strcmp@plt+0x20f98>
  40d2f1:	mov    rdi,QWORD PTR [rbx+0x10]
  40d2f5:	call   4037b0 <free@plt>
  40d2fa:	mov    rdi,rbx
  40d2fd:	pop    rbx
  40d2fe:	jmp    4037b0 <free@plt>
  40d303:	nop    DWORD PTR [rax+rax*1+0x0]
  40d308:	repz ret 
  40d30a:	nop    WORD PTR [rax+rax*1+0x0]
  40d310:	push   r15
  40d312:	push   r14
  40d314:	push   r13
  40d316:	push   r12
  40d318:	push   rbp
  40d319:	push   rbx
  40d31a:	mov    rbx,rdi
  40d31d:	sub    rsp,0x868
  40d324:	mov    QWORD PTR [rsp+0x20],rdi
  40d329:	mov    rdi,QWORD PTR [rdi+0x30]
  40d32d:	mov    rcx,QWORD PTR fs:0x28
  40d336:	mov    QWORD PTR [rsp+0x858],rcx
  40d33e:	xor    ecx,ecx
  40d340:	call   4094a0 <strcmp@plt+0x5ce8>
  40d345:	mov    rbp,QWORD PTR [rax+0x8]
  40d349:	mov    QWORD PTR [rsp+0x38],rax
  40d34e:	mov    rdi,rbp
  40d351:	call   42a990 <strcmp@plt+0x271d8>
  40d356:	call   42d4e0 <strcmp@plt+0x29d28>
  40d35b:	mov    r14,rax
  40d35e:	mov    QWORD PTR [rsp+0x18],rax
  40d363:	mov    rax,QWORD PTR [rbx+0x70]
  40d367:	mov    rsi,r14
  40d36a:	mov    rax,QWORD PTR [rax]
  40d36d:	mov    rdi,QWORD PTR [rax]
  40d370:	call   42d540 <strcmp@plt+0x29d88>
  40d375:	mov    rax,QWORD PTR [rbx+0x70]
  40d379:	mov    rsi,r14
  40d37c:	mov    rax,QWORD PTR [rax]
  40d37f:	mov    rdi,QWORD PTR [rax+0x8]
  40d383:	call   42d540 <strcmp@plt+0x29d88>
  40d388:	mov    rcx,QWORD PTR [rbx+0x70]
  40d38c:	mov    rax,QWORD PTR [rcx]
  40d38f:	mov    rdx,QWORD PTR [rax+0x10]
  40d393:	mov    rsi,QWORD PTR [rdx]
  40d396:	mov    r8d,DWORD PTR [rsi]
  40d399:	test   r8d,r8d
  40d39c:	je     40d3f0 <strcmp@plt+0x9c38>
  40d39e:	xor    ebx,ebx
  40d3a0:	jmp    40d3b3 <strcmp@plt+0x9bfb>
  40d3a2:	mov    rax,QWORD PTR [rcx]
  40d3a5:	add    ebx,0x1
  40d3a8:	mov    rdx,QWORD PTR [rax+0x10]
  40d3ac:	mov    rsi,QWORD PTR [rdx]
  40d3af:	cmp    DWORD PTR [rsi],ebx
  40d3b1:	je     40d3f0 <strcmp@plt+0x9c38>
  40d3b3:	mov    r8,QWORD PTR [rsi+0x10]
  40d3b7:	lea    eax,[rbx+rbx*1]
  40d3ba:	mov    edi,ebx
  40d3bc:	shr    edi,0x4
  40d3bf:	and    eax,0x1e
  40d3c2:	mov    edx,eax
  40d3c4:	mov    eax,DWORD PTR [r8+rdi*4]
  40d3c8:	shrx   eax,eax,edx
  40d3cd:	test   al,0x3
  40d3cf:	jne    40d3a2 <strcmp@plt+0x9bea>
  40d3d1:	mov    rdx,QWORD PTR [rsi+0x20]
  40d3d5:	mov    eax,ebx
  40d3d7:	mov    rsi,QWORD PTR [rsp+0x18]
  40d3dc:	mov    rdi,QWORD PTR [rdx+rax*8]
  40d3e0:	call   42d540 <strcmp@plt+0x29d88>
  40d3e5:	mov    rax,QWORD PTR [rsp+0x20]
  40d3ea:	mov    rcx,QWORD PTR [rax+0x70]
  40d3ee:	jmp    40d3a2 <strcmp@plt+0x9bea>
  40d3f0:	mov    rdx,QWORD PTR [rax+0x18]
  40d3f4:	mov    rsi,QWORD PTR [rdx]
  40d3f7:	mov    edi,DWORD PTR [rsi]
  40d3f9:	test   edi,edi
  40d3fb:	je     40d44f <strcmp@plt+0x9c97>
  40d3fd:	xor    ebx,ebx
  40d3ff:	jmp    40d412 <strcmp@plt+0x9c5a>
  40d401:	mov    rax,QWORD PTR [rcx]
  40d404:	add    ebx,0x1
  40d407:	mov    rdx,QWORD PTR [rax+0x18]
  40d40b:	mov    rsi,QWORD PTR [rdx]
  40d40e:	cmp    DWORD PTR [rsi],ebx
  40d410:	je     40d44f <strcmp@plt+0x9c97>
  40d412:	mov    r8,QWORD PTR [rsi+0x10]
  40d416:	lea    eax,[rbx+rbx*1]
  40d419:	mov    edi,ebx
  40d41b:	shr    edi,0x4
  40d41e:	and    eax,0x1e
  40d421:	mov    edx,eax
  40d423:	mov    eax,DWORD PTR [r8+rdi*4]
  40d427:	shrx   eax,eax,edx
  40d42c:	test   al,0x3
  40d42e:	jne    40d401 <strcmp@plt+0x9c49>
  40d430:	mov    rdx,QWORD PTR [rsi+0x20]
  40d434:	mov    eax,ebx
  40d436:	mov    rsi,QWORD PTR [rsp+0x18]
  40d43b:	mov    rdi,QWORD PTR [rdx+rax*8]
  40d43f:	call   42d540 <strcmp@plt+0x29d88>
  40d444:	mov    rax,QWORD PTR [rsp+0x20]
  40d449:	mov    rcx,QWORD PTR [rax+0x70]
  40d44d:	jmp    40d401 <strcmp@plt+0x9c49>
  40d44f:	mov    rbx,QWORD PTR [rsp+0x18]
  40d454:	mov    rdi,QWORD PTR [rax+0x20]
  40d458:	mov    rsi,rbx
  40d45b:	call   42d540 <strcmp@plt+0x29d88>
  40d460:	mov    rax,QWORD PTR [rsp+0x20]
  40d465:	mov    rsi,rbx
  40d468:	mov    rax,QWORD PTR [rax+0x70]
  40d46c:	mov    rax,QWORD PTR [rax]
  40d46f:	mov    rdi,QWORD PTR [rax+0x20]
  40d473:	call   42d540 <strcmp@plt+0x29d88>
  40d478:	mov    rcx,QWORD PTR [rbx+0x8]
  40d47c:	lea    rax,[rsp+0x40]
  40d481:	lea    rdx,[rsp+0x450]
  40d489:	mov    QWORD PTR [rsp+0x30],rax
  40d48e:	mov    QWORD PTR [rsp+0x10],rdx
  40d493:	cmp    rbx,rcx
  40d496:	mov    QWORD PTR [rsp+0x28],rcx
  40d49b:	je     40d60a <strcmp@plt+0x9e52>
  40d4a1:	mov    rax,QWORD PTR [rsp+0x28]
  40d4a6:	mov    rax,QWORD PTR [rax+0x10]
  40d4aa:	mov    r14,QWORD PTR [rax]
  40d4ad:	test   r14,r14
  40d4b0:	je     40d5f1 <strcmp@plt+0x9e39>
  40d4b6:	mov    rax,QWORD PTR [rsp+0x30]
  40d4bb:	mov    QWORD PTR [rsp+0x8],rax
  40d4c0:	cmp    QWORD PTR [r14+0x8],0x0
  40d4c5:	je     40d59a <strcmp@plt+0x9de2>
  40d4cb:	mov    rax,QWORD PTR [r14+0x28]
  40d4cf:	mov    r12,QWORD PTR [rax]
  40d4d2:	test   r12,r12
  40d4d5:	je     40d59a <strcmp@plt+0x9de2>
  40d4db:	mov    r13,QWORD PTR [rsp+0x10]
  40d4e0:	cmp    QWORD PTR [r12+0x8],0x0
  40d4e6:	je     40d54e <strcmp@plt+0x9d96>
  40d4e8:	mov    rdi,QWORD PTR [r12+0x28]
  40d4ed:	test   rdi,rdi
  40d4f0:	je     40d54e <strcmp@plt+0x9d96>
  40d4f2:	call   4346b0 <strcmp@plt+0x30ef8>
  40d4f7:	mov    rbx,QWORD PTR [rax+0x8]
  40d4fb:	mov    r15,rax
  40d4fe:	cmp    rax,rbx
  40d501:	je     40d546 <strcmp@plt+0x9d8e>
  40d503:	nop    DWORD PTR [rax+rax*1+0x0]
  40d508:	mov    rdi,QWORD PTR [rbx+0x10]
  40d50c:	push   0x0
  40d50e:	xor    edx,edx
  40d510:	push   0xff
  40d515:	mov    r9d,0x64
  40d51b:	mov    r8d,0x1
  40d521:	mov    ecx,0x1
  40d526:	mov    esi,0x1
  40d52b:	call   429d90 <strcmp@plt+0x265d8>
  40d530:	mov    rdi,rbp
  40d533:	mov    rsi,rax
  40d536:	call   42acb0 <strcmp@plt+0x274f8>
  40d53b:	mov    rbx,QWORD PTR [rbx+0x8]
  40d53f:	pop    rax
  40d540:	pop    rdx
  40d541:	cmp    r15,rbx
  40d544:	jne    40d508 <strcmp@plt+0x9d50>
  40d546:	mov    rdi,r15
  40d549:	call   42dac0 <strcmp@plt+0x2a308>
  40d54e:	mov    rax,QWORD PTR [r12+0x10]
  40d553:	test   rax,rax
  40d556:	je     40d578 <strcmp@plt+0x9dc0>
  40d558:	mov    rdx,QWORD PTR [r12+0x18]
  40d55d:	test   rdx,rdx
  40d560:	je     40d5c8 <strcmp@plt+0x9e10>
  40d562:	mov    QWORD PTR [r13+0x0],rdx
  40d566:	mov    r12,rax
  40d569:	add    r13,0x8
  40d56d:	jmp    40d4e0 <strcmp@plt+0x9d28>
  40d572:	nop    WORD PTR [rax+rax*1+0x0]
  40d578:	mov    r12,QWORD PTR [r12+0x18]
  40d57d:	test   r12,r12
  40d580:	jne    40d4e0 <strcmp@plt+0x9d28>
  40d586:	cmp    r13,QWORD PTR [rsp+0x10]
  40d58b:	je     40d59a <strcmp@plt+0x9de2>
  40d58d:	mov    r12,QWORD PTR [r13-0x8]
  40d591:	test   r12,r12
  40d594:	jne    40d657 <strcmp@plt+0x9e9f>
  40d59a:	mov    rax,QWORD PTR [r14+0x10]
  40d59e:	test   rax,rax
  40d5a1:	je     40d5d0 <strcmp@plt+0x9e18>
  40d5a3:	mov    rdx,QWORD PTR [r14+0x18]
  40d5a7:	test   rdx,rdx
  40d5aa:	je     40d5bd <strcmp@plt+0x9e05>
  40d5ac:	mov    rcx,QWORD PTR [rsp+0x8]
  40d5b1:	mov    QWORD PTR [rcx],rdx
  40d5b4:	add    rcx,0x8
  40d5b8:	mov    QWORD PTR [rsp+0x8],rcx
  40d5bd:	mov    r14,rax
  40d5c0:	jmp    40d4c0 <strcmp@plt+0x9d08>
  40d5c5:	nop    DWORD PTR [rax]
  40d5c8:	mov    r12,rax
  40d5cb:	jmp    40d4e0 <strcmp@plt+0x9d28>
  40d5d0:	mov    rax,QWORD PTR [r14+0x18]
  40d5d4:	test   rax,rax
  40d5d7:	jne    40d5bd <strcmp@plt+0x9e05>
  40d5d9:	mov    rax,QWORD PTR [rsp+0x8]
  40d5de:	mov    rcx,QWORD PTR [rsp+0x30]
  40d5e3:	cmp    rax,rcx
  40d5e6:	je     40d5f1 <strcmp@plt+0x9e39>
  40d5e8:	mov    rax,QWORD PTR [rax-0x8]
  40d5ec:	test   rax,rax
  40d5ef:	jne    40d665 <strcmp@plt+0x9ead>
  40d5f1:	mov    rax,QWORD PTR [rsp+0x28]
  40d5f6:	mov    rax,QWORD PTR [rax+0x8]
  40d5fa:	cmp    QWORD PTR [rsp+0x18],rax
  40d5ff:	mov    QWORD PTR [rsp+0x28],rax
  40d604:	jne    40d4a1 <strcmp@plt+0x9ce9>
  40d60a:	mov    rdi,QWORD PTR [rsp+0x18]
  40d60f:	call   42dac0 <strcmp@plt+0x2a308>
  40d614:	mov    rax,QWORD PTR [rsp+0x20]
  40d619:	mov    rsi,QWORD PTR [rsp+0x38]
  40d61e:	mov    rdi,QWORD PTR [rax+0x40]
  40d622:	mov    rax,QWORD PTR [rax+0x38]
  40d626:	call   QWORD PTR [rax+0x38]
  40d629:	mov    rax,QWORD PTR [rsp+0x858]
  40d631:	xor    rax,QWORD PTR fs:0x28
  40d63a:	jne    40d660 <strcmp@plt+0x9ea8>
  40d63c:	mov    rdi,QWORD PTR [rsp+0x20]
  40d641:	add    rsp,0x868
  40d648:	pop    rbx
  40d649:	pop    rbp
  40d64a:	pop    r12
  40d64c:	pop    r13
  40d64e:	pop    r14
  40d650:	pop    r15
  40d652:	jmp    4083d0 <strcmp@plt+0x4c18>
  40d657:	sub    r13,0x8
  40d65b:	jmp    40d4e0 <strcmp@plt+0x9d28>
  40d660:	call   403460 <__stack_chk_fail@plt>
  40d665:	sub    QWORD PTR [rsp+0x8],0x8
  40d66b:	jmp    40d5bd <strcmp@plt+0x9e05>
  40d670:	sub    rsp,0x8
  40d674:	mov    edi,0xa8
  40d679:	call   434790 <strcmp@plt+0x30fd8>
  40d67e:	add    rsp,0x8
  40d682:	ret    
  40d683:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d68e:	xchg   ax,ax
  40d690:	push   rbp
  40d691:	push   rbx
  40d692:	mov    rbp,rdi
  40d695:	mov    ebx,esi
  40d697:	sub    rsp,0x8
  40d69b:	mov    rax,0x468e3c
  40d6a2:	mov    eax,DWORD PTR [rax]
  40d6a4:	test   eax,eax
  40d6a6:	jle    40d6bd <strcmp@plt+0x9f05>
  40d6a8:	mov    edx,esi
  40d6aa:	lea    rsi,[rip+0x3b93f]        # 448ff0 <strcmp@plt+0x45838>
  40d6b1:	mov    edi,0x5
  40d6b6:	xor    eax,eax
  40d6b8:	call   4306a0 <strcmp@plt+0x2cee8>
  40d6bd:	mov    rdi,QWORD PTR [rbp+0xa0]
  40d6c4:	test   rdi,rdi
  40d6c7:	je     40d6e0 <strcmp@plt+0x9f28>
  40d6c9:	mov    esi,ebx
  40d6cb:	call   43ac60 <strcmp@plt+0x374a8>
  40d6d0:	add    rsp,0x8
  40d6d4:	mov    eax,0x1
  40d6d9:	pop    rbx
  40d6da:	pop    rbp
  40d6db:	ret    
  40d6dc:	nop    DWORD PTR [rax+0x0]
  40d6e0:	lea    rdx,[rip+0x3719]        # 410e00 <strcmp@plt+0xd648>
  40d6e7:	mov    edi,0x6
  40d6ec:	xor    r8d,r8d
  40d6ef:	mov    rcx,rbp
  40d6f2:	mov    rsi,rbp
  40d6f5:	call   43af00 <strcmp@plt+0x37748>
  40d6fa:	mov    rdi,rax
  40d6fd:	mov    QWORD PTR [rbp+0xa0],rax
  40d704:	jmp    40d6c9 <strcmp@plt+0x9f11>
  40d706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d710:	push   r15
  40d712:	push   r14
  40d714:	mov    r14,rdi
  40d717:	push   r13
  40d719:	push   r12
  40d71b:	push   rbp
  40d71c:	push   rbx
  40d71d:	sub    rsp,0x28
  40d721:	cmp    DWORD PTR [rdi+0x80],0x1
  40d728:	mov    QWORD PTR [rsp+0x8],rsi
  40d72d:	je     40d750 <strcmp@plt+0x9f98>
  40d72f:	mov    esi,0x4
  40d734:	call   40d690 <strcmp@plt+0x9ed8>
  40d739:	add    rsp,0x28
  40d73d:	mov    eax,0x1
  40d742:	pop    rbx
  40d743:	pop    rbp
  40d744:	pop    r12
  40d746:	pop    r13
  40d748:	pop    r14
  40d74a:	pop    r15
  40d74c:	ret    
  40d74d:	nop    DWORD PTR [rax]
  40d750:	mov    rax,QWORD PTR [rdx]
  40d753:	mov    edi,DWORD PTR [rax+0x18]
  40d756:	test   edi,edi
  40d758:	je     40d739 <strcmp@plt+0x9f81>
  40d75a:	mov    rax,QWORD PTR [rax+0x8]
  40d75e:	mov    rax,QWORD PTR [rax+0x10]
  40d762:	mov    rax,QWORD PTR [rax]
  40d765:	mov    ecx,DWORD PTR [rax+0x18]
  40d768:	mov    QWORD PTR [rsp+0x10],rax
  40d76d:	test   ecx,ecx
  40d76f:	je     40d739 <strcmp@plt+0x9f81>
  40d771:	mov    rax,QWORD PTR [rsi]
  40d774:	mov    rcx,QWORD PTR [rax+0x8]
  40d778:	cmp    rax,rcx
  40d77b:	mov    QWORD PTR [rsp],rcx
  40d77f:	je     40d739 <strcmp@plt+0x9f81>
  40d781:	nop    DWORD PTR [rax+0x0]
  40d788:	mov    rax,QWORD PTR [rsp]
  40d78c:	mov    r13,QWORD PTR [rax+0x10]
  40d790:	mov    rdi,r13
  40d793:	call   434230 <strcmp@plt+0x30a78>
  40d798:	mov    rsi,QWORD PTR [rsp+0x10]
  40d79d:	mov    rdi,rax
  40d7a0:	mov    QWORD PTR [rsp+0x18],rax
  40d7a5:	call   42ac90 <strcmp@plt+0x274d8>
  40d7aa:	mov    rbp,rax
  40d7ad:	mov    rax,0x474858
  40d7b4:	mov    edx,0x8
  40d7b9:	mov    rsi,r13
  40d7bc:	mov    rdi,QWORD PTR [rax]
  40d7bf:	call   43b020 <strcmp@plt+0x37868>
  40d7c4:	mov    r15,QWORD PTR [rax+0x8]
  40d7c8:	mov    r12,rax
  40d7cb:	cmp    rax,r15
  40d7ce:	je     40d7ef <strcmp@plt+0xa037>
  40d7d0:	mov    rbx,QWORD PTR [r15+0x10]
  40d7d4:	mov    rdi,rbx
  40d7d7:	call   43ac30 <strcmp@plt+0x37478>
  40d7dc:	cmp    rbp,QWORD PTR [rax+0x8]
  40d7e0:	je     40d8e8 <strcmp@plt+0xa130>
  40d7e6:	mov    r15,QWORD PTR [r15+0x8]
  40d7ea:	cmp    r12,r15
  40d7ed:	jne    40d7d0 <strcmp@plt+0xa018>
  40d7ef:	mov    rdi,r12
  40d7f2:	call   42dac0 <strcmp@plt+0x2a308>
  40d7f7:	mov    rsi,rbp
  40d7fa:	mov    rdi,r13
  40d7fd:	call   40d200 <strcmp@plt+0x9a48>
  40d802:	cmp    BYTE PTR [rbp+0x8],0x1
  40d806:	jne    40d910 <strcmp@plt+0xa158>
  40d80c:	mov    rax,0x468e3c
  40d813:	cmp    DWORD PTR [rax],0x1
  40d816:	jle    40d848 <strcmp@plt+0xa090>
  40d818:	mov    rdi,QWORD PTR [rsp+0x18]
  40d81d:	call   424890 <strcmp@plt+0x210d8>
  40d822:	mov    rdi,QWORD PTR [rsp+0x10]
  40d827:	mov    rbx,rax
  40d82a:	call   424890 <strcmp@plt+0x210d8>
  40d82f:	lea    rsi,[rip+0x3b7da]        # 449010 <strcmp@plt+0x45858>
  40d836:	mov    rdx,rax
  40d839:	mov    rcx,rbx
  40d83c:	mov    edi,0x6
  40d841:	xor    eax,eax
  40d843:	call   4306a0 <strcmp@plt+0x2cee8>
  40d848:	mov    rax,QWORD PTR [r14+0x78]
  40d84c:	mov    edx,DWORD PTR [rax+0x18]
  40d84f:	test   edx,edx
  40d851:	je     40d8c6 <strcmp@plt+0xa10e>
  40d853:	mov    rbx,QWORD PTR [rax+0x8]
  40d857:	cmp    rax,rbx
  40d85a:	je     40d8c6 <strcmp@plt+0xa10e>
  40d85c:	nop    DWORD PTR [rax+0x0]
  40d860:	mov    r12,QWORD PTR [rbx+0x10]
  40d864:	mov    edi,0x18
  40d869:	call   4347a0 <strcmp@plt+0x30fe8>
  40d86e:	lea    r8,[rip+0xfffffffffffffa2b]        # 40d2a0 <strcmp@plt+0x9ae8>
  40d875:	lea    rdx,[rip+0xfd4]        # 40e850 <strcmp@plt+0xb098>
  40d87c:	mov    rcx,rax
  40d87f:	mov    QWORD PTR [rax+0x10],r12
  40d883:	mov    rsi,r14
  40d886:	mov    edi,0x8
  40d88b:	mov    QWORD PTR [rax],r13
  40d88e:	mov    QWORD PTR [rax+0x8],rbp
  40d892:	call   43af50 <strcmp@plt+0x37798>
  40d897:	mov    rdx,rax
  40d89a:	mov    r12,rax
  40d89d:	mov    rax,0x474858
  40d8a4:	mov    rsi,r13
  40d8a7:	mov    rdi,QWORD PTR [rax]
  40d8aa:	call   43afa0 <strcmp@plt+0x377e8>
  40d8af:	mov    esi,0x2
  40d8b4:	mov    rdi,r12
  40d8b7:	call   43ac60 <strcmp@plt+0x374a8>
  40d8bc:	mov    rbx,QWORD PTR [rbx+0x8]
  40d8c0:	cmp    rbx,QWORD PTR [r14+0x78]
  40d8c4:	jne    40d860 <strcmp@plt+0xa0a8>
  40d8c6:	mov    rax,QWORD PTR [rsp]
  40d8ca:	mov    rcx,QWORD PTR [rsp+0x8]
  40d8cf:	mov    rax,QWORD PTR [rax+0x8]
  40d8d3:	cmp    rax,QWORD PTR [rcx]
  40d8d6:	mov    QWORD PTR [rsp],rax
  40d8da:	jne    40d788 <strcmp@plt+0x9fd0>
  40d8e0:	jmp    40d739 <strcmp@plt+0x9f81>
  40d8e5:	nop    DWORD PTR [rax]
  40d8e8:	mov    rax,0x474860
  40d8ef:	mov    rsi,rbx
  40d8f2:	mov    rdi,r13
  40d8f5:	mov    rcx,QWORD PTR [rax]
  40d8f8:	mov    rax,0x474858
  40d8ff:	mov    rdx,QWORD PTR [rax]
  40d902:	call   43b280 <strcmp@plt+0x37ac8>
  40d907:	jmp    40d7e6 <strcmp@plt+0xa02e>
  40d90c:	nop    DWORD PTR [rax+0x0]
  40d910:	mov    rax,0x474858
  40d917:	mov    edx,0x3
  40d91c:	mov    rsi,r13
  40d91f:	mov    rdi,QWORD PTR [rax]
  40d922:	call   43b020 <strcmp@plt+0x37868>
  40d927:	mov    rbp,QWORD PTR [rax+0x8]
  40d92b:	mov    rbx,rax
  40d92e:	cmp    rax,rbp
  40d931:	je     40d94f <strcmp@plt+0xa197>
  40d933:	nop    DWORD PTR [rax+rax*1+0x0]
  40d938:	mov    rdi,QWORD PTR [rbp+0x10]
  40d93c:	mov    esi,0x2
  40d941:	call   43ac60 <strcmp@plt+0x374a8>
  40d946:	mov    rbp,QWORD PTR [rbp+0x8]
  40d94a:	cmp    rbx,rbp
  40d94d:	jne    40d938 <strcmp@plt+0xa180>
  40d94f:	mov    rdi,rbx
  40d952:	call   42dac0 <strcmp@plt+0x2a308>
  40d957:	jmp    40d8c6 <strcmp@plt+0xa10e>
  40d95c:	nop    DWORD PTR [rax+0x0]
  40d960:	sub    rsp,0x8
  40d964:	mov    rax,0x468600
  40d96b:	cmp    QWORD PTR [rdi+0x8],rax
  40d96f:	jne    40d9b0 <strcmp@plt+0xa1f8>
  40d971:	call   4037b0 <free@plt>
  40d976:	mov    rax,0x468e3c
  40d97d:	mov    eax,DWORD PTR [rax]
  40d97f:	test   eax,eax
  40d981:	jg     40d990 <strcmp@plt+0xa1d8>
  40d983:	add    rsp,0x8
  40d987:	ret    
  40d988:	nop    DWORD PTR [rax+rax*1+0x0]
  40d990:	lea    rsi,[rip+0x3c750]        # 44a0e7 <strcmp@plt+0x4692f>
  40d997:	mov    edi,0x5
  40d99c:	xor    eax,eax
  40d99e:	add    rsp,0x8
  40d9a2:	jmp    4306a0 <strcmp@plt+0x2cee8>
  40d9a7:	nop    WORD PTR [rax+rax*1+0x0]
  40d9b0:	lea    rdx,[rip+0x3b6b1]        # 449068 <strcmp@plt+0x458b0>
  40d9b7:	lea    rsi,[rip+0x3c8f2]        # 44a2b0 <strcmp@plt+0x46af8>
  40d9be:	lea    rdi,[rip+0x3c70b]        # 44a0d0 <strcmp@plt+0x46918>
  40d9c5:	call   434880 <strcmp@plt+0x310c8>
  40d9ca:	nop    WORD PTR [rax+rax*1+0x0]
  40d9d0:	push   rbx
  40d9d1:	mov    rax,0x468600
  40d9d8:	cmp    QWORD PTR [rdi+0x8],rax
  40d9dc:	jne    40da08 <strcmp@plt+0xa250>
  40d9de:	mov    rbx,rdi
  40d9e1:	mov    rdi,QWORD PTR [rdi+0x50]
  40d9e5:	mov    rsi,rdx
  40d9e8:	call   43a470 <strcmp@plt+0x36cb8>
  40d9ed:	lea    rdx,[rax+0x10]
  40d9f1:	lea    rsi,[rax+0x8]
  40d9f5:	mov    rdi,rbx
  40d9f8:	call   40d710 <strcmp@plt+0x9f58>
  40d9fd:	mov    eax,0x1
  40da02:	pop    rbx
  40da03:	ret    
  40da04:	nop    DWORD PTR [rax+0x0]
  40da08:	lea    rdx,[rip+0x3b659]        # 449068 <strcmp@plt+0x458b0>
  40da0f:	lea    rsi,[rip+0x3c89a]        # 44a2b0 <strcmp@plt+0x46af8>
  40da16:	lea    rdi,[rip+0x3c6b3]        # 44a0d0 <strcmp@plt+0x46918>
  40da1d:	call   434880 <strcmp@plt+0x310c8>
  40da22:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40da2d:	nop    DWORD PTR [rax]
  40da30:	push   r15
  40da32:	push   r14
  40da34:	mov    r14,rdx
  40da37:	push   r13
  40da39:	push   r12
  40da3b:	mov    r13,rsi
  40da3e:	push   rbp
  40da3f:	push   rbx
  40da40:	mov    r12,rcx
  40da43:	mov    rbx,rdi
  40da46:	sub    rsp,0x68
  40da4a:	mov    rax,QWORD PTR fs:0x28
  40da53:	mov    QWORD PTR [rsp+0x58],rax
  40da58:	xor    eax,eax
  40da5a:	call   408350 <strcmp@plt+0x4b98>
  40da5f:	mov    rdi,rax
  40da62:	call   4080d0 <strcmp@plt+0x4918>
  40da67:	mov    rdx,r14
  40da6a:	mov    rsi,rax
  40da6d:	mov    rdi,r13
  40da70:	mov    rbp,rax
  40da73:	call   423920 <strcmp@plt+0x20168>
  40da78:	test   rax,rax
  40da7b:	je     40dbd0 <strcmp@plt+0xa418>
  40da81:	mov    r15,rax
  40da84:	movzx  eax,WORD PTR [rax+0x24]
  40da88:	cmp    ax,0xffff
  40da8c:	je     40db70 <strcmp@plt+0xa3b8>
  40da92:	mov    rdx,QWORD PTR [r15+0x30]
  40da96:	or     BYTE PTR [rdx+rax*1],0x1
  40da9a:	mov    rax,0x468e3c
  40daa1:	mov    eax,DWORD PTR [rax]
  40daa3:	test   eax,eax
  40daa5:	jle    40daf5 <strcmp@plt+0xa33d>
  40daa7:	mov    rdi,r14
  40daaa:	call   424890 <strcmp@plt+0x210d8>
  40daaf:	mov    rdi,r13
  40dab2:	mov    r14,rax
  40dab5:	call   424890 <strcmp@plt+0x210d8>
  40daba:	mov    rdi,rbp
  40dabd:	mov    QWORD PTR [rsp+0x8],rax
  40dac2:	call   424530 <strcmp@plt+0x20d78>
  40dac7:	mov    rdi,r15
  40daca:	mov    QWORD PTR [rsp],rax
  40dace:	call   423a90 <strcmp@plt+0x202d8>
  40dad3:	mov    r8,QWORD PTR [rsp+0x8]
  40dad8:	mov    rcx,QWORD PTR [rsp]
  40dadc:	lea    rsi,[rip+0x3b5ad]        # 449090 <strcmp@plt+0x458d8>
  40dae3:	mov    rdx,rax
  40dae6:	mov    r9,r14
  40dae9:	mov    edi,0x5
  40daee:	xor    eax,eax
  40daf0:	call   4306a0 <strcmp@plt+0x2cee8>
  40daf5:	mov    rdi,rbp
  40daf8:	call   42dac0 <strcmp@plt+0x2a308>
  40dafd:	mov    rdi,r12
  40db00:	call   4251c0 <strcmp@plt+0x21a08>
  40db05:	mov    rdi,QWORD PTR [rbx+0x10]
  40db09:	movzx  esi,ax
  40db0c:	call   4080c0 <strcmp@plt+0x4908>
  40db11:	test   rax,rax
  40db14:	je     40db88 <strcmp@plt+0xa3d0>
  40db16:	lea    rbp,[rsp+0x10]
  40db1b:	mov    r8,r12
  40db1e:	mov    rcx,rax
  40db21:	mov    edx,0x10f6
  40db26:	mov    esi,0x10f6
  40db2b:	mov    rdi,rbp
  40db2e:	call   438840 <strcmp@plt+0x35088>
  40db33:	mov    rdi,rbx
  40db36:	mov    rdx,rbp
  40db39:	mov    rsi,r15
  40db3c:	call   4083b0 <strcmp@plt+0x4bf8>
  40db41:	mov    rdi,r15
  40db44:	mov    ebx,eax
  40db46:	call   4300b0 <strcmp@plt+0x2c8f8>
  40db4b:	mov    rcx,QWORD PTR [rsp+0x58]
  40db50:	xor    rcx,QWORD PTR fs:0x28
  40db59:	mov    eax,ebx
  40db5b:	jne    40dbd7 <strcmp@plt+0xa41f>
  40db5d:	add    rsp,0x68
  40db61:	pop    rbx
  40db62:	pop    rbp
  40db63:	pop    r12
  40db65:	pop    r13
  40db67:	pop    r14
  40db69:	pop    r15
  40db6b:	ret    
  40db6c:	nop    DWORD PTR [rax+0x0]
  40db70:	movzx  eax,WORD PTR ds:0x0
  40db78:	and    eax,0xfffffffe
  40db7b:	mov    WORD PTR ds:0x0,ax
  40db83:	ud2    
  40db85:	nop    DWORD PTR [rax]
  40db88:	mov    rax,0x468e3c
  40db8f:	cmp    DWORD PTR [rax],0x1
  40db92:	jg     40dba0 <strcmp@plt+0xa3e8>
  40db94:	mov    rdi,r15
  40db97:	xor    ebx,ebx
  40db99:	call   4300b0 <strcmp@plt+0x2c8f8>
  40db9e:	jmp    40db4b <strcmp@plt+0xa393>
  40dba0:	mov    rdi,r13
  40dba3:	xor    ebx,ebx
  40dba5:	call   424890 <strcmp@plt+0x210d8>
  40dbaa:	lea    rsi,[rip+0x3b50f]        # 4490c0 <strcmp@plt+0x45908>
  40dbb1:	mov    rdx,rax
  40dbb4:	mov    edi,0x6
  40dbb9:	xor    eax,eax
  40dbbb:	call   4306a0 <strcmp@plt+0x2cee8>
  40dbc0:	mov    rdi,r15
  40dbc3:	call   4300b0 <strcmp@plt+0x2c8f8>
  40dbc8:	jmp    40db4b <strcmp@plt+0xa393>
  40dbca:	nop    WORD PTR [rax+rax*1+0x0]
  40dbd0:	xor    ebx,ebx
  40dbd2:	jmp    40db4b <strcmp@plt+0xa393>
  40dbd7:	call   403460 <__stack_chk_fail@plt>
  40dbdc:	nop    DWORD PTR [rax+0x0]
  40dbe0:	push   r13
  40dbe2:	push   r12
  40dbe4:	push   rbp
  40dbe5:	push   rbx
  40dbe6:	sub    rsp,0x38
  40dbea:	mov    rax,QWORD PTR fs:0x28
  40dbf3:	mov    QWORD PTR [rsp+0x28],rax
  40dbf8:	xor    eax,eax
  40dbfa:	mov    rax,0x468600
  40dc01:	cmp    QWORD PTR [rdi+0x8],rax
  40dc05:	jne    40dd58 <strcmp@plt+0xa5a0>
  40dc0b:	mov    rbx,rdi
  40dc0e:	lea    rdi,[rdi+0x18]
  40dc12:	call   40b7c0 <strcmp@plt+0x8008>
  40dc17:	xor    eax,eax
  40dc19:	call   4086f0 <strcmp@plt+0x4f38>
  40dc1e:	mov    rdi,0x40d2e0
  40dc25:	mov    QWORD PTR [rbx+0x70],rax
  40dc29:	call   42d4f0 <strcmp@plt+0x29d38>
  40dc2e:	mov    rdi,0x424750
  40dc35:	mov    QWORD PTR [rbx+0x78],rax
  40dc39:	call   42d4f0 <strcmp@plt+0x29d38>
  40dc3e:	mov    QWORD PTR [rbx+0x68],rax
  40dc42:	xor    eax,eax
  40dc44:	call   432ef0 <strcmp@plt+0x2f738>
  40dc49:	mov    rbp,rax
  40dc4c:	xor    eax,eax
  40dc4e:	call   432ef0 <strcmp@plt+0x2f738>
  40dc53:	cmp    QWORD PTR [rbx+0x70],0x0
  40dc58:	mov    r12,rax
  40dc5b:	je     40dd20 <strcmp@plt+0xa568>
  40dc61:	cmp    QWORD PTR [rbx+0x78],0x0
  40dc66:	je     40dd20 <strcmp@plt+0xa568>
  40dc6c:	cmp    QWORD PTR [rbx+0x68],0x0
  40dc71:	je     40dd20 <strcmp@plt+0xa568>
  40dc77:	test   rbp,rbp
  40dc7a:	je     40dd20 <strcmp@plt+0xa568>
  40dc80:	test   rax,rax
  40dc83:	je     40dd20 <strcmp@plt+0xa568>
  40dc89:	lea    rdi,[rip+0x39a83]        # 447713 <strcmp@plt+0x43f5b>
  40dc90:	mov    rsi,rsp
  40dc93:	call   4256d0 <strcmp@plt+0x21f18>
  40dc98:	mov    rdi,rsp
  40dc9b:	call   42a590 <strcmp@plt+0x26dd8>
  40dca0:	mov    rdi,rbp
  40dca3:	mov    rsi,rax
  40dca6:	mov    BYTE PTR [rax+0x34],0x1
  40dcaa:	call   432f30 <strcmp@plt+0x2f778>
  40dcaf:	mov    rdi,rbp
  40dcb2:	call   433030 <strcmp@plt+0x2f878>
  40dcb7:	mov    rdi,QWORD PTR [rbx+0x30]
  40dcbb:	mov    rdx,rbp
  40dcbe:	mov    rsi,rax
  40dcc1:	call   409430 <strcmp@plt+0x5c78>
  40dcc6:	lea    rdi,[rip+0x39f4c]        # 447c19 <strcmp@plt+0x44461>
  40dccd:	mov    rsi,rsp
  40dcd0:	call   4256d0 <strcmp@plt+0x21f18>
  40dcd5:	mov    rdi,rsp
  40dcd8:	call   42a590 <strcmp@plt+0x26dd8>
  40dcdd:	mov    rdi,r12
  40dce0:	mov    rsi,rax
  40dce3:	mov    BYTE PTR [rax+0x34],0x1
  40dce7:	call   432f30 <strcmp@plt+0x2f778>
  40dcec:	mov    rdi,r12
  40dcef:	call   433030 <strcmp@plt+0x2f878>
  40dcf4:	mov    rdi,QWORD PTR [rbx+0x30]
  40dcf8:	mov    rdx,r12
  40dcfb:	mov    rsi,rax
  40dcfe:	call   409430 <strcmp@plt+0x5c78>
  40dd03:	mov    rax,0x468e3c
  40dd0a:	mov    eax,DWORD PTR [rax]
  40dd0c:	test   eax,eax
  40dd0e:	jg     40dd40 <strcmp@plt+0xa588>
  40dd10:	mov    eax,0x1
  40dd15:	jmp    40dd22 <strcmp@plt+0xa56a>
  40dd17:	nop    WORD PTR [rax+rax*1+0x0]
  40dd20:	xor    eax,eax
  40dd22:	mov    rcx,QWORD PTR [rsp+0x28]
  40dd27:	xor    rcx,QWORD PTR fs:0x28
  40dd30:	jne    40dd72 <strcmp@plt+0xa5ba>
  40dd32:	add    rsp,0x38
  40dd36:	pop    rbx
  40dd37:	pop    rbp
  40dd38:	pop    r12
  40dd3a:	pop    r13
  40dd3c:	ret    
  40dd3d:	nop    DWORD PTR [rax]
  40dd40:	lea    rsi,[rip+0x3c3ae]        # 44a0f5 <strcmp@plt+0x4693d>
  40dd47:	mov    edi,0x5
  40dd4c:	xor    eax,eax
  40dd4e:	call   4306a0 <strcmp@plt+0x2cee8>
  40dd53:	jmp    40dd10 <strcmp@plt+0xa558>
  40dd55:	nop    DWORD PTR [rax]
  40dd58:	lea    rdx,[rip+0x3b309]        # 449068 <strcmp@plt+0x458b0>
  40dd5f:	lea    rsi,[rip+0x3c54a]        # 44a2b0 <strcmp@plt+0x46af8>
  40dd66:	lea    rdi,[rip+0x3c363]        # 44a0d0 <strcmp@plt+0x46918>
  40dd6d:	call   434880 <strcmp@plt+0x310c8>
  40dd72:	call   403460 <__stack_chk_fail@plt>
  40dd77:	nop    WORD PTR [rax+rax*1+0x0]
  40dd80:	push   r13
  40dd82:	push   r12
  40dd84:	push   rbp
  40dd85:	push   rbx
  40dd86:	sub    rsp,0x8
  40dd8a:	mov    rax,0x468600
  40dd91:	cmp    QWORD PTR [rdi+0x8],rax
  40dd95:	jne    40dea0 <strcmp@plt+0xa6e8>
  40dd9b:	mov    rbp,rdi
  40dd9e:	mov    rdi,QWORD PTR [rdi+0x50]
  40dda2:	mov    r12,rsi
  40dda5:	mov    ebx,edx
  40dda7:	call   43a470 <strcmp@plt+0x36cb8>
  40ddac:	test   rax,rax
  40ddaf:	mov    r13,rax
  40ddb2:	je     40de68 <strcmp@plt+0xa6b0>
  40ddb8:	mov    rcx,QWORD PTR [rax+0x10]
  40ddbc:	mov    rax,QWORD PTR [rcx+0x8]
  40ddc0:	cmp    rcx,rax
  40ddc3:	je     40ddd8 <strcmp@plt+0xa620>
  40ddc5:	nop    DWORD PTR [rax]
  40ddc8:	mov    rdx,QWORD PTR [rax+0x10]
  40ddcc:	mov    BYTE PTR [rdx+0x8],bl
  40ddcf:	mov    rax,QWORD PTR [rax+0x8]
  40ddd3:	cmp    rcx,rax
  40ddd6:	jne    40ddc8 <strcmp@plt+0xa610>
  40ddd8:	mov    rcx,QWORD PTR [r13+0x18]
  40dddc:	mov    rax,QWORD PTR [rcx+0x8]
  40dde0:	cmp    rcx,rax
  40dde3:	je     40ddf8 <strcmp@plt+0xa640>
  40dde5:	nop    DWORD PTR [rax]
  40dde8:	mov    rdx,QWORD PTR [rax+0x10]
  40ddec:	mov    BYTE PTR [rdx+0x8],bl
  40ddef:	mov    rax,QWORD PTR [rax+0x8]
  40ddf3:	cmp    rcx,rax
  40ddf6:	jne    40dde8 <strcmp@plt+0xa630>
  40ddf8:	cmp    BYTE PTR [r13+0x20],0x1
  40ddfd:	mov    rax,QWORD PTR [r13+0x8]
  40de01:	setne  BYTE PTR [r13+0x20]
  40de06:	mov    rbx,QWORD PTR [rax+0x8]
  40de0a:	cmp    rax,rbx
  40de0d:	je     40de44 <strcmp@plt+0xa68c>
  40de0f:	nop
  40de10:	mov    r12,QWORD PTR [rbx+0x10]
  40de14:	mov    rax,QWORD PTR [rbp+0x38]
  40de18:	mov    rdi,QWORD PTR [rbp+0x40]
  40de1c:	mov    rsi,r12
  40de1f:	call   QWORD PTR [rax+0x30]
  40de22:	mov    rdi,r12
  40de25:	call   4342b0 <strcmp@plt+0x30af8>
  40de2a:	mov    edx,0x1
  40de2f:	mov    rsi,rax
  40de32:	mov    rdi,rbp
  40de35:	call   4083c0 <strcmp@plt+0x4c08>
  40de3a:	mov    rbx,QWORD PTR [rbx+0x8]
  40de3e:	cmp    QWORD PTR [r13+0x8],rbx
  40de42:	jne    40de10 <strcmp@plt+0xa658>
  40de44:	lea    rdx,[r13+0x10]
  40de48:	lea    rsi,[r13+0x8]
  40de4c:	mov    rdi,rbp
  40de4f:	call   40d710 <strcmp@plt+0x9f58>
  40de54:	add    rsp,0x8
  40de58:	mov    eax,0x1
  40de5d:	pop    rbx
  40de5e:	pop    rbp
  40de5f:	pop    r12
  40de61:	pop    r13
  40de63:	ret    
  40de64:	nop    DWORD PTR [rax+0x0]
  40de68:	mov    rax,0x468e3c
  40de6f:	cmp    DWORD PTR [rax],0x1
  40de72:	jg     40de81 <strcmp@plt+0xa6c9>
  40de74:	xor    eax,eax
  40de76:	add    rsp,0x8
  40de7a:	pop    rbx
  40de7b:	pop    rbp
  40de7c:	pop    r12
  40de7e:	pop    r13
  40de80:	ret    
  40de81:	lea    rsi,[rip+0x3b280]        # 449108 <strcmp@plt+0x45950>
  40de88:	xor    eax,eax
  40de8a:	mov    rdx,r12
  40de8d:	mov    edi,0x6
  40de92:	call   4306a0 <strcmp@plt+0x2cee8>
  40de97:	xor    eax,eax
  40de99:	jmp    40de76 <strcmp@plt+0xa6be>
  40de9b:	nop    DWORD PTR [rax+rax*1+0x0]
  40dea0:	lea    rdx,[rip+0x3b1c1]        # 449068 <strcmp@plt+0x458b0>
  40dea7:	lea    rsi,[rip+0x3c402]        # 44a2b0 <strcmp@plt+0x46af8>
  40deae:	lea    rdi,[rip+0x3c21b]        # 44a0d0 <strcmp@plt+0x46918>
  40deb5:	call   434880 <strcmp@plt+0x310c8>
  40deba:	nop    WORD PTR [rax+rax*1+0x0]
  40dec0:	push   r15
  40dec2:	push   r14
  40dec4:	push   r13
  40dec6:	push   r12
  40dec8:	mov    r12,rdi
  40decb:	push   rbp
  40decc:	push   rbx
  40decd:	mov    rbp,rsi
  40ded0:	sub    rsp,0x848
  40ded7:	mov    rax,QWORD PTR fs:0x28
  40dee0:	mov    QWORD PTR [rsp+0x838],rax
  40dee8:	xor    eax,eax
  40deea:	call   42d4e0 <strcmp@plt+0x29d28>
  40deef:	mov    rbx,rax
  40def2:	mov    QWORD PTR [rsp+0x8],rax
  40def7:	mov    rax,QWORD PTR [r12]
  40defb:	mov    rsi,rbx
  40defe:	mov    rdi,QWORD PTR [rax]
  40df01:	call   42d540 <strcmp@plt+0x29d88>
  40df06:	mov    rax,QWORD PTR [r12]
  40df0a:	mov    rsi,rbx
  40df0d:	mov    rdi,QWORD PTR [rax+0x8]
  40df11:	call   42d540 <strcmp@plt+0x29d88>
  40df16:	mov    rsi,QWORD PTR [r12]
  40df1a:	mov    rax,QWORD PTR [rsi+0x10]
  40df1e:	mov    rdi,QWORD PTR [rax]
  40df21:	mov    edx,DWORD PTR [rdi]
  40df23:	test   edx,edx
  40df25:	je     40df7d <strcmp@plt+0xa7c5>
  40df27:	xor    ebx,ebx
  40df29:	jmp    40df39 <strcmp@plt+0xa781>
  40df2b:	mov    rax,QWORD PTR [rsi+0x10]
  40df2f:	add    ebx,0x1
  40df32:	mov    rdi,QWORD PTR [rax]
  40df35:	cmp    DWORD PTR [rdi],ebx
  40df37:	je     40df7d <strcmp@plt+0xa7c5>
  40df39:	mov    r8,QWORD PTR [rdi+0x10]
  40df3d:	lea    eax,[rbx+rbx*1]
  40df40:	mov    ecx,ebx
  40df42:	shr    ecx,0x4
  40df45:	and    eax,0x1e
  40df48:	mov    edx,eax
  40df4a:	mov    eax,DWORD PTR [r8+rcx*4]
  40df4e:	shrx   eax,eax,edx
  40df53:	test   al,0x3
  40df55:	jne    40df2b <strcmp@plt+0xa773>
  40df57:	mov    rdx,QWORD PTR [rdi+0x20]
  40df5b:	mov    eax,ebx
  40df5d:	mov    rsi,QWORD PTR [rsp+0x8]
  40df62:	add    ebx,0x1
  40df65:	mov    rdi,QWORD PTR [rdx+rax*8]
  40df69:	call   42d540 <strcmp@plt+0x29d88>
  40df6e:	mov    rsi,QWORD PTR [r12]
  40df72:	mov    rax,QWORD PTR [rsi+0x10]
  40df76:	mov    rdi,QWORD PTR [rax]
  40df79:	cmp    DWORD PTR [rdi],ebx
  40df7b:	jne    40df39 <strcmp@plt+0xa781>
  40df7d:	mov    rax,QWORD PTR [rsi+0x18]
  40df81:	mov    rdi,QWORD PTR [rax]
  40df84:	mov    eax,DWORD PTR [rdi]
  40df86:	test   eax,eax
  40df88:	je     40dfe0 <strcmp@plt+0xa828>
  40df8a:	xor    ebx,ebx
  40df8c:	jmp    40df9c <strcmp@plt+0xa7e4>
  40df8e:	mov    rax,QWORD PTR [rsi+0x18]
  40df92:	add    ebx,0x1
  40df95:	mov    rdi,QWORD PTR [rax]
  40df98:	cmp    DWORD PTR [rdi],ebx
  40df9a:	je     40dfe0 <strcmp@plt+0xa828>
  40df9c:	mov    r8,QWORD PTR [rdi+0x10]
  40dfa0:	lea    eax,[rbx+rbx*1]
  40dfa3:	mov    ecx,ebx
  40dfa5:	shr    ecx,0x4
  40dfa8:	and    eax,0x1e
  40dfab:	mov    edx,eax
  40dfad:	mov    eax,DWORD PTR [r8+rcx*4]
  40dfb1:	shrx   eax,eax,edx
  40dfb6:	test   al,0x3
  40dfb8:	jne    40df8e <strcmp@plt+0xa7d6>
  40dfba:	mov    rdx,QWORD PTR [rdi+0x20]
  40dfbe:	mov    eax,ebx
  40dfc0:	mov    rsi,QWORD PTR [rsp+0x8]
  40dfc5:	add    ebx,0x1
  40dfc8:	mov    rdi,QWORD PTR [rdx+rax*8]
  40dfcc:	call   42d540 <strcmp@plt+0x29d88>
  40dfd1:	mov    rsi,QWORD PTR [r12]
  40dfd5:	mov    rax,QWORD PTR [rsi+0x18]
  40dfd9:	mov    rdi,QWORD PTR [rax]
  40dfdc:	cmp    DWORD PTR [rdi],ebx
  40dfde:	jne    40df9c <strcmp@plt+0xa7e4>
  40dfe0:	mov    rbx,QWORD PTR [rsp+0x8]
  40dfe5:	mov    rdi,QWORD PTR [rsi+0x20]
  40dfe9:	mov    rsi,rbx
  40dfec:	call   42d540 <strcmp@plt+0x29d88>
  40dff1:	mov    rax,QWORD PTR [r12]
  40dff5:	mov    rsi,rbx
  40dff8:	mov    rdi,QWORD PTR [rax+0x20]
  40dffc:	call   42d540 <strcmp@plt+0x29d88>
  40e001:	mov    rcx,QWORD PTR [rbx+0x8]
  40e005:	cmp    rbx,rcx
  40e008:	mov    QWORD PTR [rsp+0x10],rcx
  40e00d:	je     40e196 <strcmp@plt+0xa9de>
  40e013:	lea    rax,[rsp+0x20]
  40e018:	mov    QWORD PTR [rsp+0x18],rax
  40e01d:	lea    rax,[rsp+0x430]
  40e025:	mov    QWORD PTR [rsp],rax
  40e029:	mov    rax,QWORD PTR [rsp+0x10]
  40e02e:	mov    rax,QWORD PTR [rax+0x10]
  40e032:	mov    r14,QWORD PTR [rax]
  40e035:	test   r14,r14
  40e038:	je     40e17d <strcmp@plt+0xa9c5>
  40e03e:	mov    rbx,QWORD PTR [rsp+0x18]
  40e043:	nop    DWORD PTR [rax+rax*1+0x0]
  40e048:	cmp    QWORD PTR [r14+0x8],0x0
  40e04d:	je     40e131 <strcmp@plt+0xa979>
  40e053:	mov    rax,QWORD PTR [r14+0x28]
  40e057:	mov    r12,QWORD PTR [rax]
  40e05a:	test   r12,r12
  40e05d:	je     40e131 <strcmp@plt+0xa979>
  40e063:	mov    r13,QWORD PTR [rsp]
  40e067:	nop    WORD PTR [rax+rax*1+0x0]
  40e070:	cmp    QWORD PTR [r12+0x8],0x0
  40e076:	je     40e082 <strcmp@plt+0xa8ca>
  40e078:	mov    r15,QWORD PTR [r12+0x28]
  40e07d:	test   r15,r15
  40e080:	jne    40e0bb <strcmp@plt+0xa903>
  40e082:	mov    rax,QWORD PTR [r12+0x10]
  40e087:	test   rax,rax
  40e08a:	je     40e110 <strcmp@plt+0xa958>
  40e090:	mov    rdx,QWORD PTR [r12+0x18]
  40e095:	test   rdx,rdx
  40e098:	je     40e158 <strcmp@plt+0xa9a0>
  40e09e:	mov    r12,rax
  40e0a1:	mov    QWORD PTR [r13+0x0],rdx
  40e0a5:	add    r13,0x8
  40e0a9:	cmp    QWORD PTR [r12+0x8],0x0
  40e0af:	je     40e082 <strcmp@plt+0xa8ca>
  40e0b1:	mov    r15,QWORD PTR [r12+0x28]
  40e0b6:	test   r15,r15
  40e0b9:	je     40e082 <strcmp@plt+0xa8ca>
  40e0bb:	mov    rdi,r15
  40e0be:	call   434230 <strcmp@plt+0x30a78>
  40e0c3:	mov    rsi,rbp
  40e0c6:	mov    rdi,rax
  40e0c9:	call   42ae50 <strcmp@plt+0x27698>
  40e0ce:	cmp    al,0x1
  40e0d0:	jne    40e082 <strcmp@plt+0xa8ca>
  40e0d2:	mov    rdi,QWORD PTR [rsp+0x8]
  40e0d7:	call   42dac0 <strcmp@plt+0x2a308>
  40e0dc:	mov    r8,r15
  40e0df:	mov    rcx,QWORD PTR [rsp+0x838]
  40e0e7:	xor    rcx,QWORD PTR fs:0x28
  40e0f0:	mov    rax,r8
  40e0f3:	jne    40e1f0 <strcmp@plt+0xaa38>
  40e0f9:	add    rsp,0x848
  40e100:	pop    rbx
  40e101:	pop    rbp
  40e102:	pop    r12
  40e104:	pop    r13
  40e106:	pop    r14
  40e108:	pop    r15
  40e10a:	ret    
  40e10b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e110:	mov    r12,QWORD PTR [r12+0x18]
  40e115:	test   r12,r12
  40e118:	jne    40e070 <strcmp@plt+0xa8b8>
  40e11e:	cmp    r13,QWORD PTR [rsp]
  40e122:	je     40e131 <strcmp@plt+0xa979>
  40e124:	mov    r12,QWORD PTR [r13-0x8]
  40e128:	test   r12,r12
  40e12b:	jne    40e1f5 <strcmp@plt+0xaa3d>
  40e131:	mov    rax,QWORD PTR [r14+0x10]
  40e135:	test   rax,rax
  40e138:	je     40e160 <strcmp@plt+0xa9a8>
  40e13a:	mov    rdx,QWORD PTR [r14+0x18]
  40e13e:	test   rdx,rdx
  40e141:	je     40e1b8 <strcmp@plt+0xaa00>
  40e143:	mov    QWORD PTR [rbx],rdx
  40e146:	mov    r14,rax
  40e149:	add    rbx,0x8
  40e14d:	jmp    40e048 <strcmp@plt+0xa890>
  40e152:	nop    WORD PTR [rax+rax*1+0x0]
  40e158:	mov    r12,rax
  40e15b:	jmp    40e070 <strcmp@plt+0xa8b8>
  40e160:	mov    r14,QWORD PTR [r14+0x18]
  40e164:	test   r14,r14
  40e167:	jne    40e048 <strcmp@plt+0xa890>
  40e16d:	cmp    rbx,QWORD PTR [rsp+0x18]
  40e172:	je     40e17d <strcmp@plt+0xa9c5>
  40e174:	mov    r14,QWORD PTR [rbx-0x8]
  40e178:	test   r14,r14
  40e17b:	jne    40e1e7 <strcmp@plt+0xaa2f>
  40e17d:	mov    rax,QWORD PTR [rsp+0x10]
  40e182:	mov    rax,QWORD PTR [rax+0x8]
  40e186:	cmp    QWORD PTR [rsp+0x8],rax
  40e18b:	mov    QWORD PTR [rsp+0x10],rax
  40e190:	jne    40e029 <strcmp@plt+0xa871>
  40e196:	mov    rdi,QWORD PTR [rsp+0x8]
  40e19b:	call   42dac0 <strcmp@plt+0x2a308>
  40e1a0:	mov    rax,0x468e3c
  40e1a7:	cmp    DWORD PTR [rax],0x1
  40e1aa:	jg     40e1c0 <strcmp@plt+0xaa08>
  40e1ac:	xor    r8d,r8d
  40e1af:	jmp    40e0df <strcmp@plt+0xa927>
  40e1b4:	nop    DWORD PTR [rax+0x0]
  40e1b8:	mov    r14,rax
  40e1bb:	jmp    40e048 <strcmp@plt+0xa890>
  40e1c0:	mov    rdi,QWORD PTR [rbp+0x0]
  40e1c4:	call   424890 <strcmp@plt+0x210d8>
  40e1c9:	lea    rsi,[rip+0x3af88]        # 449158 <strcmp@plt+0x459a0>
  40e1d0:	mov    rdx,rax
  40e1d3:	mov    edi,0x6
  40e1d8:	xor    eax,eax
  40e1da:	call   4306a0 <strcmp@plt+0x2cee8>
  40e1df:	xor    r8d,r8d
  40e1e2:	jmp    40e0df <strcmp@plt+0xa927>
  40e1e7:	sub    rbx,0x8
  40e1eb:	jmp    40e048 <strcmp@plt+0xa890>
  40e1f0:	call   403460 <__stack_chk_fail@plt>
  40e1f5:	sub    r13,0x8
  40e1f9:	jmp    40e070 <strcmp@plt+0xa8b8>
  40e1fe:	xchg   ax,ax
  40e200:	push   r15
  40e202:	push   r14
  40e204:	push   r13
  40e206:	push   r12
  40e208:	push   rbp
  40e209:	push   rbx
  40e20a:	sub    rsp,0x28
  40e20e:	mov    rax,0x468600
  40e215:	cmp    QWORD PTR [rdi+0x8],rax
  40e219:	jne    40e4a8 <strcmp@plt+0xacf0>
  40e21f:	xor    eax,eax
  40e221:	mov    rbx,rdi
  40e224:	mov    r12,rsi
  40e227:	call   421b30 <strcmp@plt+0x1e378>
  40e22c:	test   rax,rax
  40e22f:	mov    rbp,rax
  40e232:	je     40e4c8 <strcmp@plt+0xad10>
  40e238:	mov    rdi,QWORD PTR [rbx+0x70]
  40e23c:	xor    edx,edx
  40e23e:	mov    rsi,r12
  40e241:	call   4087d0 <strcmp@plt+0x5018>
  40e246:	test   rax,rax
  40e249:	mov    r13,rax
  40e24c:	je     40e3e8 <strcmp@plt+0xac30>
  40e252:	mov    rdi,rax
  40e255:	call   4342b0 <strcmp@plt+0x30af8>
  40e25a:	mov    r14,rax
  40e25d:	mov    rdi,rax
  40e260:	call   425110 <strcmp@plt+0x21958>
  40e265:	mov    rdi,r14
  40e268:	mov    QWORD PTR [rsp+0x10],rax
  40e26d:	call   428fc0 <strcmp@plt+0x25808>
  40e272:	test   eax,eax
  40e274:	jne    40e400 <strcmp@plt+0xac48>
  40e27a:	mov    DWORD PTR [r12+0x48],0x0
  40e283:	lea    r15,[r12+0x20]
  40e288:	mov    rdi,r12
  40e28b:	call   424b80 <strcmp@plt+0x213c8>
  40e290:	mov    rdi,r15
  40e293:	mov    QWORD PTR [rsp+0x8],rax
  40e298:	call   424b80 <strcmp@plt+0x213c8>
  40e29d:	mov    r14,rax
  40e2a0:	mov    edx,DWORD PTR [rbx+0x80]
  40e2a6:	test   edx,edx
  40e2a8:	je     40e360 <strcmp@plt+0xaba8>
  40e2ae:	mov    rdi,r15
  40e2b1:	call   4251c0 <strcmp@plt+0x21a08>
  40e2b6:	mov    rdi,QWORD PTR [rbx+0x30]
  40e2ba:	movzx  esi,ax
  40e2bd:	call   4094a0 <strcmp@plt+0x5ce8>
  40e2c2:	mov    r15,rax
  40e2c5:	test   r15,r15
  40e2c8:	je     40e378 <strcmp@plt+0xabc0>
  40e2ce:	mov    rdi,r15
  40e2d1:	call   433030 <strcmp@plt+0x2f878>
  40e2d6:	mov    rdi,rax
  40e2d9:	call   424b80 <strcmp@plt+0x213c8>
  40e2de:	mov    QWORD PTR [rbp+0x0],rax
  40e2e2:	cmp    BYTE PTR [r15+0x10],0x0
  40e2e7:	jne    40e2f9 <strcmp@plt+0xab41>
  40e2e9:	mov    rax,0x468e3c
  40e2f0:	cmp    DWORD PTR [rax],0x1
  40e2f3:	jg     40e478 <strcmp@plt+0xacc0>
  40e2f9:	lea    rax,[rbx+0x18]
  40e2fd:	mov    QWORD PTR [rsp+0x18],rax
  40e302:	mov    rdi,QWORD PTR [rsp+0x10]
  40e307:	call   4251c0 <strcmp@plt+0x21a08>
  40e30c:	mov    rdi,QWORD PTR [rsp+0x18]
  40e311:	movzx  esi,ax
  40e314:	call   40c790 <strcmp@plt+0x8fd8>
  40e319:	mov    r11,QWORD PTR [rbx+0x38]
  40e31d:	mov    rdi,QWORD PTR [rbx+0x40]
  40e321:	mov    r9,rbp
  40e324:	mov    r8,r12
  40e327:	mov    rcx,rax
  40e32a:	mov    rdx,r15
  40e32d:	mov    rsi,r13
  40e330:	call   QWORD PTR [r11+0x40]
  40e334:	mov    eax,DWORD PTR [rbx+0x58]
  40e337:	mov    rdi,QWORD PTR [rsp+0x8]
  40e33c:	mov    DWORD PTR [rbp+0x14],eax
  40e33f:	call   424750 <strcmp@plt+0x20f98>
  40e344:	mov    rdi,r14
  40e347:	call   424750 <strcmp@plt+0x20f98>
  40e34c:	add    rsp,0x28
  40e350:	mov    rax,rbp
  40e353:	pop    rbx
  40e354:	pop    rbp
  40e355:	pop    r12
  40e357:	pop    r13
  40e359:	pop    r14
  40e35b:	pop    r15
  40e35d:	ret    
  40e35e:	xchg   ax,ax
  40e360:	mov    rdi,QWORD PTR [rbx+0x30]
  40e364:	mov    rsi,r14
  40e367:	call   409450 <strcmp@plt+0x5c98>
  40e36c:	mov    r15,rax
  40e36f:	test   r15,r15
  40e372:	jne    40e2ce <strcmp@plt+0xab16>
  40e378:	mov    rax,0x468e3c
  40e37f:	mov    eax,DWORD PTR [rax]
  40e381:	test   eax,eax
  40e383:	jle    40e3a3 <strcmp@plt+0xabeb>
  40e385:	mov    rdi,r14
  40e388:	call   424890 <strcmp@plt+0x210d8>
  40e38d:	lea    rsi,[rip+0x39bd4]        # 447f68 <strcmp@plt+0x447b0>
  40e394:	mov    rdx,rax
  40e397:	mov    edi,0x5
  40e39c:	xor    eax,eax
  40e39e:	call   4306a0 <strcmp@plt+0x2cee8>
  40e3a3:	mov    rdx,QWORD PTR [rsp+0x8]
  40e3a8:	lea    rax,[rbx+0x18]
  40e3ac:	mov    rsi,r14
  40e3af:	mov    rdi,rax
  40e3b2:	mov    QWORD PTR [rsp+0x18],rax
  40e3b7:	call   40cc50 <strcmp@plt+0x9498>
  40e3bc:	mov    rdi,QWORD PTR [rbx+0x30]
  40e3c0:	mov    rsi,r14
  40e3c3:	call   409450 <strcmp@plt+0x5c98>
  40e3c8:	mov    rdi,rax
  40e3cb:	mov    r15,rax
  40e3ce:	call   433030 <strcmp@plt+0x2f878>
  40e3d3:	mov    rdi,rax
  40e3d6:	call   424b80 <strcmp@plt+0x213c8>
  40e3db:	mov    QWORD PTR [rbp+0x0],rax
  40e3df:	jmp    40e302 <strcmp@plt+0xab4a>
  40e3e4:	nop    DWORD PTR [rax+0x0]
  40e3e8:	mov    rax,0x468e3c
  40e3ef:	cmp    DWORD PTR [rax],0x2
  40e3f2:	jg     40e450 <strcmp@plt+0xac98>
  40e3f4:	xor    ebp,ebp
  40e3f6:	jmp    40e34c <strcmp@plt+0xab94>
  40e3fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e400:	mov    rdi,r14
  40e403:	call   428eb0 <strcmp@plt+0x256f8>
  40e408:	test   eax,eax
  40e40a:	mov    edi,eax
  40e40c:	mov    DWORD PTR [r12+0x48],eax
  40e411:	je     40e283 <strcmp@plt+0xaacb>
  40e417:	mov    edx,0x20
  40e41c:	mov    rsi,r12
  40e41f:	lea    r15,[r12+0x20]
  40e424:	call   429040 <strcmp@plt+0x25888>
  40e429:	mov    edi,DWORD PTR [r12+0x48]
  40e42e:	mov    edx,0x20
  40e433:	mov    rsi,r15
  40e436:	mov    QWORD PTR [rsp+0x8],rax
  40e43b:	call   429040 <strcmp@plt+0x25888>
  40e440:	mov    r14,rax
  40e443:	jmp    40e2a0 <strcmp@plt+0xaae8>
  40e448:	nop    DWORD PTR [rax+rax*1+0x0]
  40e450:	mov    rdi,r12
  40e453:	xor    ebp,ebp
  40e455:	call   424890 <strcmp@plt+0x210d8>
  40e45a:	lea    rsi,[rip+0x3ad47]        # 4491a8 <strcmp@plt+0x459f0>
  40e461:	mov    rdx,rax
  40e464:	mov    edi,0x7
  40e469:	xor    eax,eax
  40e46b:	call   4306a0 <strcmp@plt+0x2cee8>
  40e470:	jmp    40e34c <strcmp@plt+0xab94>
  40e475:	nop    DWORD PTR [rax]
  40e478:	mov    rdi,r14
  40e47b:	call   424890 <strcmp@plt+0x210d8>
  40e480:	lea    rsi,[rip+0x39b11]        # 447f98 <strcmp@plt+0x447e0>
  40e487:	mov    rdx,rax
  40e48a:	mov    edi,0x6
  40e48f:	xor    eax,eax
  40e491:	call   4306a0 <strcmp@plt+0x2cee8>
  40e496:	lea    rax,[rbx+0x18]
  40e49a:	mov    QWORD PTR [rsp+0x18],rax
  40e49f:	jmp    40e302 <strcmp@plt+0xab4a>
  40e4a4:	nop    DWORD PTR [rax+0x0]
  40e4a8:	lea    rdx,[rip+0x3abb9]        # 449068 <strcmp@plt+0x458b0>
  40e4af:	lea    rsi,[rip+0x3bdfa]        # 44a2b0 <strcmp@plt+0x46af8>
  40e4b6:	lea    rdi,[rip+0x3bc13]        # 44a0d0 <strcmp@plt+0x46918>
  40e4bd:	call   434880 <strcmp@plt+0x310c8>
  40e4c2:	nop    WORD PTR [rax+rax*1+0x0]
  40e4c8:	lea    rsi,[rip+0x39a59]        # 447f28 <strcmp@plt+0x44770>
  40e4cf:	mov    edi,0x3
  40e4d4:	xor    eax,eax
  40e4d6:	call   4306a0 <strcmp@plt+0x2cee8>
  40e4db:	jmp    40e34c <strcmp@plt+0xab94>
  40e4e0:	push   r15
  40e4e2:	push   r14
  40e4e4:	push   r13
  40e4e6:	push   r12
  40e4e8:	push   rbp
  40e4e9:	push   rbx
  40e4ea:	sub    rsp,0x848
  40e4f1:	mov    rax,QWORD PTR fs:0x28
  40e4fa:	mov    QWORD PTR [rsp+0x838],rax
  40e502:	xor    eax,eax
  40e504:	mov    rax,0x468600
  40e50b:	cmp    QWORD PTR [rdi+0x8],rax
  40e50f:	jne    40e81f <strcmp@plt+0xb067>
  40e515:	mov    rbx,rdi
  40e518:	lea    rdi,[rdi+0x18]
  40e51c:	call   40b840 <strcmp@plt+0x8088>
  40e521:	call   42d4e0 <strcmp@plt+0x29d28>
  40e526:	mov    r15,rax
  40e529:	mov    QWORD PTR [rsp+0x10],rax
  40e52e:	mov    rax,QWORD PTR [rbx+0x70]
  40e532:	mov    rsi,r15
  40e535:	mov    rax,QWORD PTR [rax]
  40e538:	mov    rdi,QWORD PTR [rax]
  40e53b:	call   42d540 <strcmp@plt+0x29d88>
  40e540:	mov    rax,QWORD PTR [rbx+0x70]
  40e544:	mov    rsi,r15
  40e547:	mov    rax,QWORD PTR [rax]
  40e54a:	mov    rdi,QWORD PTR [rax+0x8]
  40e54e:	call   42d540 <strcmp@plt+0x29d88>
  40e553:	mov    rsi,QWORD PTR [rbx+0x70]
  40e557:	mov    rax,QWORD PTR [rsi]
  40e55a:	mov    rdx,QWORD PTR [rax+0x10]
  40e55e:	mov    rdi,QWORD PTR [rdx]
  40e561:	mov    ecx,DWORD PTR [rdi]
  40e563:	test   ecx,ecx
  40e565:	je     40e5ba <strcmp@plt+0xae02>
  40e567:	xor    ebp,ebp
  40e569:	jmp    40e581 <strcmp@plt+0xadc9>
  40e56b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e570:	mov    rax,QWORD PTR [rsi]
  40e573:	add    ebp,0x1
  40e576:	mov    rdx,QWORD PTR [rax+0x10]
  40e57a:	mov    rdi,QWORD PTR [rdx]
  40e57d:	cmp    DWORD PTR [rdi],ebp
  40e57f:	je     40e5ba <strcmp@plt+0xae02>
  40e581:	mov    r8,QWORD PTR [rdi+0x10]
  40e585:	lea    eax,[rbp+rbp*1+0x0]
  40e589:	mov    ecx,ebp
  40e58b:	shr    ecx,0x4
  40e58e:	and    eax,0x1e
  40e591:	mov    edx,eax
  40e593:	mov    eax,DWORD PTR [r8+rcx*4]
  40e597:	shrx   eax,eax,edx
  40e59c:	test   al,0x3
  40e59e:	jne    40e570 <strcmp@plt+0xadb8>
  40e5a0:	mov    rdx,QWORD PTR [rdi+0x20]
  40e5a4:	mov    eax,ebp
  40e5a6:	mov    rsi,QWORD PTR [rsp+0x10]
  40e5ab:	mov    rdi,QWORD PTR [rdx+rax*8]
  40e5af:	call   42d540 <strcmp@plt+0x29d88>
  40e5b4:	mov    rsi,QWORD PTR [rbx+0x70]
  40e5b8:	jmp    40e570 <strcmp@plt+0xadb8>
  40e5ba:	mov    rdx,QWORD PTR [rax+0x18]
  40e5be:	mov    rdi,QWORD PTR [rdx]
  40e5c1:	mov    edx,DWORD PTR [rdi]
  40e5c3:	test   edx,edx
  40e5c5:	je     40e61a <strcmp@plt+0xae62>
  40e5c7:	xor    ebp,ebp
  40e5c9:	jmp    40e5e1 <strcmp@plt+0xae29>
  40e5cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e5d0:	mov    rax,QWORD PTR [rsi]
  40e5d3:	add    ebp,0x1
  40e5d6:	mov    rdx,QWORD PTR [rax+0x18]
  40e5da:	mov    rdi,QWORD PTR [rdx]
  40e5dd:	cmp    DWORD PTR [rdi],ebp
  40e5df:	je     40e61a <strcmp@plt+0xae62>
  40e5e1:	mov    r8,QWORD PTR [rdi+0x10]
  40e5e5:	lea    eax,[rbp+rbp*1+0x0]
  40e5e9:	mov    ecx,ebp
  40e5eb:	shr    ecx,0x4
  40e5ee:	and    eax,0x1e
  40e5f1:	mov    edx,eax
  40e5f3:	mov    eax,DWORD PTR [r8+rcx*4]
  40e5f7:	shrx   eax,eax,edx
  40e5fc:	test   al,0x3
  40e5fe:	jne    40e5d0 <strcmp@plt+0xae18>
  40e600:	mov    rdx,QWORD PTR [rdi+0x20]
  40e604:	mov    eax,ebp
  40e606:	mov    rsi,QWORD PTR [rsp+0x10]
  40e60b:	mov    rdi,QWORD PTR [rdx+rax*8]
  40e60f:	call   42d540 <strcmp@plt+0x29d88>
  40e614:	mov    rsi,QWORD PTR [rbx+0x70]
  40e618:	jmp    40e5d0 <strcmp@plt+0xae18>
  40e61a:	mov    r15,QWORD PTR [rsp+0x10]
  40e61f:	mov    rdi,QWORD PTR [rax+0x20]
  40e623:	lea    r13,[rsp+0x430]
  40e62b:	mov    rsi,r15
  40e62e:	call   42d540 <strcmp@plt+0x29d88>
  40e633:	mov    rax,QWORD PTR [rbx+0x70]
  40e637:	mov    rsi,r15
  40e63a:	mov    rax,QWORD PTR [rax]
  40e63d:	mov    rdi,QWORD PTR [rax+0x20]
  40e641:	call   42d540 <strcmp@plt+0x29d88>
  40e646:	mov    rcx,QWORD PTR [r15+0x8]
  40e64a:	lea    rax,[rsp+0x20]
  40e64f:	mov    QWORD PTR [rsp+0x18],rax
  40e654:	cmp    r15,rcx
  40e657:	mov    QWORD PTR [rsp+0x8],rcx
  40e65c:	je     40e77b <strcmp@plt+0xafc3>
  40e662:	nop    WORD PTR [rax+rax*1+0x0]
  40e668:	mov    rax,QWORD PTR [rsp+0x8]
  40e66d:	mov    rax,QWORD PTR [rax+0x10]
  40e671:	mov    rbp,QWORD PTR [rax]
  40e674:	test   rbp,rbp
  40e677:	je     40e762 <strcmp@plt+0xafaa>
  40e67d:	mov    r12,QWORD PTR [rsp+0x18]
  40e682:	nop    WORD PTR [rax+rax*1+0x0]
  40e688:	cmp    QWORD PTR [rbp+0x8],0x0
  40e68d:	je     40e70b <strcmp@plt+0xaf53>
  40e68f:	mov    rax,QWORD PTR [rbp+0x28]
  40e693:	mov    r14,QWORD PTR [rax]
  40e696:	test   r14,r14
  40e699:	je     40e70b <strcmp@plt+0xaf53>
  40e69b:	mov    r15,r13
  40e69e:	cmp    QWORD PTR [r14+0x8],0x0
  40e6a3:	je     40e6be <strcmp@plt+0xaf06>
  40e6a5:	mov    rdi,QWORD PTR [r14+0x28]
  40e6a9:	test   rdi,rdi
  40e6ac:	je     40e6be <strcmp@plt+0xaf06>
  40e6ae:	call   434230 <strcmp@plt+0x30a78>
  40e6b3:	mov    rdi,rbx
  40e6b6:	mov    rsi,rax
  40e6b9:	call   408250 <strcmp@plt+0x4a98>
  40e6be:	mov    rax,QWORD PTR [r14+0x10]
  40e6c2:	test   rax,rax
  40e6c5:	je     40e6f0 <strcmp@plt+0xaf38>
  40e6c7:	mov    rdx,QWORD PTR [r14+0x18]
  40e6cb:	test   rdx,rdx
  40e6ce:	je     40e738 <strcmp@plt+0xaf80>
  40e6d0:	mov    r14,rax
  40e6d3:	mov    QWORD PTR [r15],rdx
  40e6d6:	add    r15,0x8
  40e6da:	cmp    QWORD PTR [r14+0x8],0x0
  40e6df:	jne    40e6a5 <strcmp@plt+0xaeed>
  40e6e1:	mov    rax,QWORD PTR [r14+0x10]
  40e6e5:	test   rax,rax
  40e6e8:	jne    40e6c7 <strcmp@plt+0xaf0f>
  40e6ea:	nop    WORD PTR [rax+rax*1+0x0]
  40e6f0:	mov    r14,QWORD PTR [r14+0x18]
  40e6f4:	test   r14,r14
  40e6f7:	jne    40e69e <strcmp@plt+0xaee6>
  40e6f9:	cmp    r15,r13
  40e6fc:	je     40e70b <strcmp@plt+0xaf53>
  40e6fe:	mov    r14,QWORD PTR [r15-0x8]
  40e702:	test   r14,r14
  40e705:	jne    40e839 <strcmp@plt+0xb081>
  40e70b:	mov    rax,QWORD PTR [rbp+0x10]
  40e70f:	test   rax,rax
  40e712:	je     40e740 <strcmp@plt+0xaf88>
  40e714:	mov    rdx,QWORD PTR [rbp+0x18]
  40e718:	test   rdx,rdx
  40e71b:	je     40e7e0 <strcmp@plt+0xb028>
  40e721:	mov    QWORD PTR [r12],rdx
  40e725:	mov    rbp,rax
  40e728:	add    r12,0x8
  40e72c:	jmp    40e688 <strcmp@plt+0xaed0>
  40e731:	nop    DWORD PTR [rax+0x0]
  40e738:	mov    r14,rax
  40e73b:	jmp    40e69e <strcmp@plt+0xaee6>
  40e740:	mov    rbp,QWORD PTR [rbp+0x18]
  40e744:	test   rbp,rbp
  40e747:	jne    40e688 <strcmp@plt+0xaed0>
  40e74d:	cmp    r12,QWORD PTR [rsp+0x18]
  40e752:	je     40e762 <strcmp@plt+0xafaa>
  40e754:	mov    rbp,QWORD PTR [r12-0x8]
  40e759:	test   rbp,rbp
  40e75c:	jne    40e842 <strcmp@plt+0xb08a>
  40e762:	mov    rax,QWORD PTR [rsp+0x8]
  40e767:	mov    rax,QWORD PTR [rax+0x8]
  40e76b:	cmp    QWORD PTR [rsp+0x10],rax
  40e770:	mov    QWORD PTR [rsp+0x8],rax
  40e775:	jne    40e668 <strcmp@plt+0xaeb0>
  40e77b:	mov    rdi,QWORD PTR [rsp+0x10]
  40e780:	call   42dac0 <strcmp@plt+0x2a308>
  40e785:	mov    rdi,QWORD PTR [rbx+0x70]
  40e789:	call   408740 <strcmp@plt+0x4f88>
  40e78e:	mov    rdi,QWORD PTR [rbx+0x68]
  40e792:	call   42dac0 <strcmp@plt+0x2a308>
  40e797:	mov    rdi,QWORD PTR [rbx+0x78]
  40e79b:	call   42dac0 <strcmp@plt+0x2a308>
  40e7a0:	mov    rdi,QWORD PTR [rbx+0xa0]
  40e7a7:	call   43acd0 <strcmp@plt+0x37518>
  40e7ac:	mov    rax,0x468e3c
  40e7b3:	mov    eax,DWORD PTR [rax]
  40e7b5:	test   eax,eax
  40e7b7:	jg     40e7e8 <strcmp@plt+0xb030>
  40e7b9:	mov    rax,QWORD PTR [rsp+0x838]
  40e7c1:	xor    rax,QWORD PTR fs:0x28
  40e7ca:	jne    40e84b <strcmp@plt+0xb093>
  40e7cc:	add    rsp,0x848
  40e7d3:	pop    rbx
  40e7d4:	pop    rbp
  40e7d5:	pop    r12
  40e7d7:	pop    r13
  40e7d9:	pop    r14
  40e7db:	pop    r15
  40e7dd:	ret    
  40e7de:	xchg   ax,ax
  40e7e0:	mov    rbp,rax
  40e7e3:	jmp    40e688 <strcmp@plt+0xaed0>
  40e7e8:	mov    rax,QWORD PTR [rsp+0x838]
  40e7f0:	xor    rax,QWORD PTR fs:0x28
  40e7f9:	jne    40e84b <strcmp@plt+0xb093>
  40e7fb:	add    rsp,0x848
  40e802:	lea    rsi,[rip+0x3b906]        # 44a10f <strcmp@plt+0x46957>
  40e809:	mov    edi,0x5
  40e80e:	pop    rbx
  40e80f:	pop    rbp
  40e810:	pop    r12
  40e812:	pop    r13
  40e814:	pop    r14
  40e816:	pop    r15
  40e818:	xor    eax,eax
  40e81a:	jmp    4306a0 <strcmp@plt+0x2cee8>
  40e81f:	lea    rdx,[rip+0x3a842]        # 449068 <strcmp@plt+0x458b0>
  40e826:	lea    rsi,[rip+0x3ba83]        # 44a2b0 <strcmp@plt+0x46af8>
  40e82d:	lea    rdi,[rip+0x3b89c]        # 44a0d0 <strcmp@plt+0x46918>
  40e834:	call   434880 <strcmp@plt+0x310c8>
  40e839:	sub    r15,0x8
  40e83d:	jmp    40e69e <strcmp@plt+0xaee6>
  40e842:	sub    r12,0x8
  40e846:	jmp    40e688 <strcmp@plt+0xaed0>
  40e84b:	call   403460 <__stack_chk_fail@plt>
  40e850:	push   r15
  40e852:	push   r14
  40e854:	push   r13
  40e856:	push   r12
  40e858:	push   rbp
  40e859:	push   rbx
  40e85a:	mov    rbx,rdi
  40e85d:	sub    rsp,0x88
  40e864:	mov    rax,QWORD PTR fs:0x28
  40e86d:	mov    QWORD PTR [rsp+0x78],rax
  40e872:	xor    eax,eax
  40e874:	call   43ac30 <strcmp@plt+0x37478>
  40e879:	mov    rdi,rbx
  40e87c:	mov    rbp,rax
  40e87f:	call   43ac50 <strcmp@plt+0x37498>
  40e884:	mov    rdi,rbx
  40e887:	mov    r12,rax
  40e88a:	call   43ac20 <strcmp@plt+0x37468>
  40e88f:	mov    rdi,QWORD PTR [rbp+0x0]
  40e893:	mov    r15,rax
  40e896:	call   434230 <strcmp@plt+0x30a78>
  40e89b:	mov    r14,rax
  40e89e:	mov    rax,QWORD PTR [rbp+0x8]
  40e8a2:	mov    rdi,r12
  40e8a5:	mov    r13,QWORD PTR [rbp+0x10]
  40e8a9:	mov    QWORD PTR [rsp+0x8],rax
  40e8ae:	call   4355a0 <strcmp@plt+0x31de8>
  40e8b3:	cmp    eax,DWORD PTR [r15+0x20]
  40e8b7:	jg     40e9a0 <strcmp@plt+0xb1e8>
  40e8bd:	xor    eax,eax
  40e8bf:	call   435450 <strcmp@plt+0x31c98>
  40e8c4:	mov    rdi,r12
  40e8c7:	mov    QWORD PTR [rsp+0x10],rax
  40e8cc:	call   4355a0 <strcmp@plt+0x31de8>
  40e8d1:	test   eax,eax
  40e8d3:	jle    40ea50 <strcmp@plt+0xb298>
  40e8d9:	mov    rax,0x468e3c
  40e8e0:	mov    ecx,DWORD PTR [rax]
  40e8e2:	mov    QWORD PTR [rsp+0x18],rax
  40e8e7:	test   ecx,ecx
  40e8e9:	jle    40e940 <strcmp@plt+0xb188>
  40e8eb:	mov    rdi,r12
  40e8ee:	call   4355a0 <strcmp@plt+0x31de8>
  40e8f3:	mov    DWORD PTR [rsp+0x2c],eax
  40e8f7:	mov    rax,QWORD PTR [rsp+0x8]
  40e8fc:	mov    rdi,QWORD PTR [rax]
  40e8ff:	call   424890 <strcmp@plt+0x210d8>
  40e904:	mov    rdi,QWORD PTR [r13+0x0]
  40e908:	mov    QWORD PTR [rsp+0x20],rax
  40e90d:	call   424890 <strcmp@plt+0x210d8>
  40e912:	mov    rdi,r14
  40e915:	mov    rbp,rax
  40e918:	call   424890 <strcmp@plt+0x210d8>
  40e91d:	mov    r9d,DWORD PTR [rsp+0x2c]
  40e922:	mov    r8,QWORD PTR [rsp+0x20]
  40e927:	lea    rsi,[rip+0x3a91a]        # 449248 <strcmp@plt+0x45a90>
  40e92e:	mov    rdx,rax
  40e931:	mov    rcx,rbp
  40e934:	mov    edi,0x5
  40e939:	xor    eax,eax
  40e93b:	call   4306a0 <strcmp@plt+0x2cee8>
  40e940:	movzx  esi,BYTE PTR [r13+0x8]
  40e945:	mov    rdi,r14
  40e948:	call   424220 <strcmp@plt+0x20a68>
  40e94d:	test   rax,rax
  40e950:	mov    rbp,rax
  40e953:	je     40e991 <strcmp@plt+0xb1d9>
  40e955:	movzx  esi,WORD PTR [rax+0x24]
  40e959:	cmp    si,0xffff
  40e95d:	je     40ea38 <strcmp@plt+0xb280>
  40e963:	add    rsi,QWORD PTR [rax+0x30]
  40e967:	mov    rax,QWORD PTR [rsp+0x10]
  40e96c:	mov    rdi,rbp
  40e96f:	mov    rcx,QWORD PTR [r13+0x10]
  40e973:	mov    QWORD PTR [rsi+0x4],rax
  40e977:	movzx  edx,BYTE PTR [r13+0x8]
  40e97c:	add    rsi,0xc
  40e980:	call   423dd0 <strcmp@plt+0x20618>
  40e985:	cmp    eax,0x1
  40e988:	mov    r10d,eax
  40e98b:	je     40eac0 <strcmp@plt+0xb308>
  40e991:	xor    r10d,r10d
  40e994:	jmp    40ea08 <strcmp@plt+0xb250>
  40e996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e9a0:	mov    rax,0x474860
  40e9a7:	mov    rsi,r12
  40e9aa:	mov    rdi,QWORD PTR [rax]
  40e9ad:	call   4352c0 <strcmp@plt+0x31b08>
  40e9b2:	mov    esi,0x3c
  40e9b7:	mov    rdi,rbx
  40e9ba:	call   43ac60 <strcmp@plt+0x374a8>
  40e9bf:	mov    rax,QWORD PTR [rsp+0x8]
  40e9c4:	mov    rdi,QWORD PTR [rax]
  40e9c7:	call   424890 <strcmp@plt+0x210d8>
  40e9cc:	mov    rdi,QWORD PTR [r13+0x0]
  40e9d0:	mov    rbp,rax
  40e9d3:	call   424890 <strcmp@plt+0x210d8>
  40e9d8:	mov    rdi,r14
  40e9db:	mov    rbx,rax
  40e9de:	call   424890 <strcmp@plt+0x210d8>
  40e9e3:	lea    rsi,[rip+0x3a806]        # 4491f0 <strcmp@plt+0x45a38>
  40e9ea:	mov    rdx,rax
  40e9ed:	mov    r9d,0x3c
  40e9f3:	mov    r8,rbp
  40e9f6:	mov    rcx,rbx
  40e9f9:	mov    edi,0x3
  40e9fe:	xor    eax,eax
  40ea00:	call   4306a0 <strcmp@plt+0x2cee8>
  40ea05:	xor    r10d,r10d
  40ea08:	mov    rcx,QWORD PTR [rsp+0x78]
  40ea0d:	xor    rcx,QWORD PTR fs:0x28
  40ea16:	mov    eax,r10d
  40ea19:	jne    40eb8f <strcmp@plt+0xb3d7>
  40ea1f:	add    rsp,0x88
  40ea26:	pop    rbx
  40ea27:	pop    rbp
  40ea28:	pop    r12
  40ea2a:	pop    r13
  40ea2c:	pop    r14
  40ea2e:	pop    r15
  40ea30:	ret    
  40ea31:	nop    DWORD PTR [rax+0x0]
  40ea38:	mov    QWORD PTR ds:0x4,0x0
  40ea44:	ud2    
  40ea46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ea50:	mov    rsi,QWORD PTR [rsp+0x8]
  40ea55:	mov    rdi,QWORD PTR [rbp+0x0]
  40ea59:	call   40d200 <strcmp@plt+0x9a48>
  40ea5e:	mov    rax,0x468e3c
  40ea65:	mov    edx,DWORD PTR [rax]
  40ea67:	mov    QWORD PTR [rsp+0x18],rax
  40ea6c:	test   edx,edx
  40ea6e:	jle    40e940 <strcmp@plt+0xb188>
  40ea74:	mov    rax,QWORD PTR [rsp+0x8]
  40ea79:	mov    rdi,QWORD PTR [rax]
  40ea7c:	call   424890 <strcmp@plt+0x210d8>
  40ea81:	mov    rdi,QWORD PTR [r13+0x0]
  40ea85:	mov    QWORD PTR [rsp+0x20],rax
  40ea8a:	call   424890 <strcmp@plt+0x210d8>
  40ea8f:	mov    rdi,r14
  40ea92:	mov    rbp,rax
  40ea95:	call   424890 <strcmp@plt+0x210d8>
  40ea9a:	mov    r8,QWORD PTR [rsp+0x20]
  40ea9f:	lea    rsi,[rip+0x3a7f2]        # 449298 <strcmp@plt+0x45ae0>
  40eaa6:	mov    rdx,rax
  40eaa9:	mov    rcx,rbp
  40eaac:	mov    edi,0x5
  40eab1:	xor    eax,eax
  40eab3:	call   4306a0 <strcmp@plt+0x2cee8>
  40eab8:	jmp    40e940 <strcmp@plt+0xb188>
  40eabd:	nop    DWORD PTR [rax]
  40eac0:	mov    rax,QWORD PTR [rsp+0x8]
  40eac5:	mov    r13,QWORD PTR [r13+0x0]
  40eac9:	mov    r11,QWORD PTR [rax]
  40eacc:	mov    rax,QWORD PTR [rsp+0x18]
  40ead1:	mov    eax,DWORD PTR [rax]
  40ead3:	test   eax,eax
  40ead5:	jle    40eb29 <strcmp@plt+0xb371>
  40ead7:	mov    rdi,r13
  40eada:	mov    DWORD PTR [rsp+0x20],r10d
  40eadf:	mov    QWORD PTR [rsp+0x18],r11
  40eae4:	call   424890 <strcmp@plt+0x210d8>
  40eae9:	mov    rdi,r14
  40eaec:	mov    QWORD PTR [rsp+0x8],rax
  40eaf1:	call   424890 <strcmp@plt+0x210d8>
  40eaf6:	mov    rdi,rbp
  40eaf9:	mov    r14,rax
  40eafc:	call   423a90 <strcmp@plt+0x202d8>
  40eb01:	mov    r8,QWORD PTR [rsp+0x8]
  40eb06:	lea    rsi,[rip+0x3b617]        # 44a124 <strcmp@plt+0x4696c>
  40eb0d:	mov    rdx,rax
  40eb10:	mov    rcx,r14
  40eb13:	mov    edi,0x5
  40eb18:	xor    eax,eax
  40eb1a:	call   4306a0 <strcmp@plt+0x2cee8>
  40eb1f:	mov    r11,QWORD PTR [rsp+0x18]
  40eb24:	mov    r10d,DWORD PTR [rsp+0x20]
  40eb29:	lea    r14,[rsp+0x30]
  40eb2e:	mov    r8,r13
  40eb31:	mov    rcx,r11
  40eb34:	mov    edx,0x10f6
  40eb39:	mov    esi,0x10f6
  40eb3e:	mov    DWORD PTR [rsp+0x8],r10d
  40eb43:	mov    rdi,r14
  40eb46:	call   438840 <strcmp@plt+0x35088>
  40eb4b:	mov    rdx,r14
  40eb4e:	mov    rsi,rbp
  40eb51:	mov    rdi,r15
  40eb54:	call   4083b0 <strcmp@plt+0x4bf8>
  40eb59:	mov    rdi,rbp
  40eb5c:	call   4300b0 <strcmp@plt+0x2c8f8>
  40eb61:	mov    rax,0x474860
  40eb68:	mov    rsi,QWORD PTR [rsp+0x10]
  40eb6d:	mov    rdx,r12
  40eb70:	mov    rdi,QWORD PTR [rax]
  40eb73:	call   434960 <strcmp@plt+0x311a8>
  40eb78:	mov    esi,0x3
  40eb7d:	mov    rdi,rbx
  40eb80:	call   43ac60 <strcmp@plt+0x374a8>
  40eb85:	mov    r10d,DWORD PTR [rsp+0x8]
  40eb8a:	jmp    40ea08 <strcmp@plt+0xb250>
  40eb8f:	call   403460 <__stack_chk_fail@plt>
  40eb94:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40eb9f:	nop
  40eba0:	push   r15
  40eba2:	push   r14
  40eba4:	push   r13
  40eba6:	push   r12
  40eba8:	push   rbp
  40eba9:	push   rbx
  40ebaa:	sub    rsp,0x28
  40ebae:	mov    rax,0x468600
  40ebb5:	cmp    QWORD PTR [rdi+0x8],rax
  40ebb9:	mov    QWORD PTR [rsp],rdx
  40ebbd:	jne    40ed50 <strcmp@plt+0xb598>
  40ebc3:	mov    rbx,rdi
  40ebc6:	mov    rdi,QWORD PTR [rdi+0x50]
  40ebca:	mov    r13,rsi
  40ebcd:	mov    rbp,rcx
  40ebd0:	call   43a470 <strcmp@plt+0x36cb8>
  40ebd5:	test   rax,rax
  40ebd8:	mov    r12,rax
  40ebdb:	je     40ece8 <strcmp@plt+0xb530>
  40ebe1:	mov    r15,QWORD PTR [rsp]
  40ebe5:	mov    rsi,rbp
  40ebe8:	mov    rdi,r15
  40ebeb:	call   424df0 <strcmp@plt+0x21638>
  40ebf0:	test   eax,eax
  40ebf2:	mov    edx,0x1
  40ebf7:	je     40ecd0 <strcmp@plt+0xb518>
  40ebfd:	mov    eax,DWORD PTR [rbp+0x18]
  40ec00:	test   eax,eax
  40ec02:	jne    40ed00 <strcmp@plt+0xb548>
  40ec08:	cmp    DWORD PTR [r15+0x18],0x2
  40ec0d:	lea    rcx,[r12+0x30]
  40ec12:	mov    rax,QWORD PTR [r12+0x10]
  40ec17:	mov    r14,QWORD PTR [r12+0x18]
  40ec1c:	mov    QWORD PTR [rsp+0x8],rcx
  40ec21:	je     40ed70 <strcmp@plt+0xb5b8>
  40ec27:	mov    rax,QWORD PTR [r14+0x8]
  40ec2b:	cmp    r14,rax
  40ec2e:	je     40ecaa <strcmp@plt+0xb4f2>
  40ec30:	mov    rbp,QWORD PTR [rax+0x10]
  40ec34:	mov    r13,QWORD PTR [rax+0x8]
  40ec38:	mov    rax,QWORD PTR [rbp+0x0]
  40ec3c:	cmp    DWORD PTR [rax+0x18],0x1
  40ec40:	je     40ec55 <strcmp@plt+0xb49d>
  40ec42:	lea    rsi,[rip+0x39387]        # 447fd0 <strcmp@plt+0x44818>
  40ec49:	mov    edi,0x2
  40ec4e:	xor    eax,eax
  40ec50:	call   4306a0 <strcmp@plt+0x2cee8>
  40ec55:	mov    rdi,QWORD PTR [rbx+0x70]
  40ec59:	mov    rsi,rbp
  40ec5c:	call   40dec0 <strcmp@plt+0xa708>
  40ec61:	test   rax,rax
  40ec64:	mov    r15,rax
  40ec67:	je     40eca2 <strcmp@plt+0xb4ea>
  40ec69:	mov    rdi,rax
  40ec6c:	call   434230 <strcmp@plt+0x30a78>
  40ec71:	mov    rsi,rbp
  40ec74:	mov    rdi,rax
  40ec77:	call   42b000 <strcmp@plt+0x27848>
  40ec7c:	mov    rax,QWORD PTR [rbx+0x38]
  40ec80:	mov    rsi,r15
  40ec83:	mov    rdi,QWORD PTR [rbx+0x40]
  40ec87:	call   QWORD PTR [rax+0x30]
  40ec8a:	mov    rdi,r15
  40ec8d:	call   4342b0 <strcmp@plt+0x30af8>
  40ec92:	mov    edx,0x1
  40ec97:	mov    rsi,rax
  40ec9a:	mov    rdi,rbx
  40ec9d:	call   4083c0 <strcmp@plt+0x4c08>
  40eca2:	cmp    r14,r13
  40eca5:	mov    rax,r13
  40eca8:	jne    40ec30 <strcmp@plt+0xb478>
  40ecaa:	mov    rax,QWORD PTR [rsp+0x8]
  40ecaf:	cmp    QWORD PTR [rax],0x0
  40ecb3:	je     40ef98 <strcmp@plt+0xb7e0>
  40ecb9:	lea    rdx,[r12+0x10]
  40ecbe:	lea    rsi,[r12+0x8]
  40ecc3:	mov    rdi,rbx
  40ecc6:	call   40d710 <strcmp@plt+0x9f58>
  40eccb:	mov    edx,0x1
  40ecd0:	add    rsp,0x28
  40ecd4:	mov    eax,edx
  40ecd6:	pop    rbx
  40ecd7:	pop    rbp
  40ecd8:	pop    r12
  40ecda:	pop    r13
  40ecdc:	pop    r14
  40ecde:	pop    r15
  40ece0:	ret    
  40ece1:	nop    DWORD PTR [rax+0x0]
  40ece8:	mov    rax,0x468e3c
  40ecef:	cmp    DWORD PTR [rax],0x1
  40ecf2:	jg     40ed30 <strcmp@plt+0xb578>
  40ecf4:	xor    edx,edx
  40ecf6:	jmp    40ecd0 <strcmp@plt+0xb518>
  40ecf8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ed00:	cmp    eax,0x1
  40ed03:	je     40ed88 <strcmp@plt+0xb5d0>
  40ed09:	mov    rax,0x468e3c
  40ed10:	cmp    DWORD PTR [rax],0x1
  40ed13:	jle    40ecf4 <strcmp@plt+0xb53c>
  40ed15:	lea    rsi,[rip+0x3a604]        # 449320 <strcmp@plt+0x45b68>
  40ed1c:	mov    edi,0x6
  40ed21:	xor    eax,eax
  40ed23:	call   4306a0 <strcmp@plt+0x2cee8>
  40ed28:	xor    edx,edx
  40ed2a:	jmp    40ecd0 <strcmp@plt+0xb518>
  40ed2c:	nop    DWORD PTR [rax+0x0]
  40ed30:	lea    rsi,[rip+0x3a599]        # 4492d0 <strcmp@plt+0x45b18>
  40ed37:	mov    rdx,r13
  40ed3a:	mov    edi,0x6
  40ed3f:	xor    eax,eax
  40ed41:	call   4306a0 <strcmp@plt+0x2cee8>
  40ed46:	xor    edx,edx
  40ed48:	jmp    40ecd0 <strcmp@plt+0xb518>
  40ed4a:	nop    WORD PTR [rax+rax*1+0x0]
  40ed50:	lea    rdx,[rip+0x3a311]        # 449068 <strcmp@plt+0x458b0>
  40ed57:	lea    rsi,[rip+0x3b552]        # 44a2b0 <strcmp@plt+0x46af8>
  40ed5e:	lea    rdi,[rip+0x3b36b]        # 44a0d0 <strcmp@plt+0x46918>
  40ed65:	call   434880 <strcmp@plt+0x310c8>
  40ed6a:	nop    WORD PTR [rax+rax*1+0x0]
  40ed70:	lea    rcx,[r12+0x28]
  40ed75:	mov    r14,rax
  40ed78:	mov    QWORD PTR [rsp+0x8],rcx
  40ed7d:	jmp    40ec27 <strcmp@plt+0xb46f>
  40ed82:	nop    WORD PTR [rax+rax*1+0x0]
  40ed88:	mov    rdi,rbp
  40ed8b:	call   4251c0 <strcmp@plt+0x21a08>
  40ed90:	cmp    ax,0x2
  40ed94:	je     40eef4 <strcmp@plt+0xb73c>
  40ed9a:	cmp    ax,0xa
  40ed9e:	jne    40ed09 <strcmp@plt+0xb551>
  40eda4:	lea    rax,[r12+0x30]
  40eda9:	mov    r15,QWORD PTR [r12+0x18]
  40edae:	mov    QWORD PTR [rsp+0x18],rax
  40edb3:	mov    rax,QWORD PTR [r15+0x8]
  40edb7:	cmp    r15,rax
  40edba:	jne    40edf7 <strcmp@plt+0xb63f>
  40edbc:	jmp    40eea0 <strcmp@plt+0xb6e8>
  40edc1:	nop    DWORD PTR [rax+0x0]
  40edc8:	cmp    eax,0x1
  40edcb:	je     40ede0 <strcmp@plt+0xb628>
  40edcd:	lea    rsi,[rip+0x391fc]        # 447fd0 <strcmp@plt+0x44818>
  40edd4:	mov    edi,0x2
  40edd9:	xor    eax,eax
  40eddb:	call   4306a0 <strcmp@plt+0x2cee8>
  40ede0:	mov    rsi,rbp
  40ede3:	mov    rdi,r14
  40ede6:	call   42a510 <strcmp@plt+0x26d58>
  40edeb:	cmp    r15,r13
  40edee:	mov    rax,r13
  40edf1:	je     40eea0 <strcmp@plt+0xb6e8>
  40edf7:	mov    r14,QWORD PTR [rax+0x10]
  40edfb:	mov    r13,QWORD PTR [rax+0x8]
  40edff:	mov    rax,QWORD PTR [r14]
  40ee02:	mov    eax,DWORD PTR [rax+0x18]
  40ee05:	test   eax,eax
  40ee07:	jne    40edc8 <strcmp@plt+0xb610>
  40ee09:	mov    rdi,QWORD PTR [rbx+0x70]
  40ee0d:	mov    rsi,r14
  40ee10:	call   40dec0 <strcmp@plt+0xa708>
  40ee15:	test   rax,rax
  40ee18:	je     40edeb <strcmp@plt+0xb633>
  40ee1a:	mov    rdi,rax
  40ee1d:	mov    QWORD PTR [rsp+0x10],rax
  40ee22:	call   434230 <strcmp@plt+0x30a78>
  40ee27:	mov    rsi,rbp
  40ee2a:	mov    rdi,rax
  40ee2d:	mov    QWORD PTR [rsp+0x8],rax
  40ee32:	call   42ac90 <strcmp@plt+0x274d8>
  40ee37:	test   rax,rax
  40ee3a:	mov    r8,QWORD PTR [rsp+0x10]
  40ee3f:	je     40ef49 <strcmp@plt+0xb791>
  40ee45:	mov    rax,0x468e3c
  40ee4c:	cmp    DWORD PTR [rax],0x1
  40ee4f:	jle    40ee64 <strcmp@plt+0xb6ac>
  40ee51:	lea    rsi,[rip+0x3a500]        # 449358 <strcmp@plt+0x45ba0>
  40ee58:	mov    edi,0x6
  40ee5d:	xor    eax,eax
  40ee5f:	call   4306a0 <strcmp@plt+0x2cee8>
  40ee64:	mov    rdi,QWORD PTR [rsp+0x8]
  40ee69:	xor    edx,edx
  40ee6b:	xor    esi,esi
  40ee6d:	call   42aa50 <strcmp@plt+0x27298>
  40ee72:	mov    rdi,QWORD PTR [rbx+0x50]
  40ee76:	mov    rsi,r14
  40ee79:	mov    QWORD PTR [rsp+0x8],rax
  40ee7e:	call   42ead0 <strcmp@plt+0x2b318>
  40ee83:	mov    rax,QWORD PTR [rsp+0x8]
  40ee88:	mov    rdi,r14
  40ee8b:	mov    rsi,rax
  40ee8e:	call   42da30 <strcmp@plt+0x2a278>
  40ee93:	cmp    r15,r13
  40ee96:	mov    rax,r13
  40ee99:	jne    40edf7 <strcmp@plt+0xb63f>
  40ee9f:	nop
  40eea0:	mov    rax,QWORD PTR [rsp+0x18]
  40eea5:	mov    rdi,QWORD PTR [rax]
  40eea8:	test   rdi,rdi
  40eeab:	je     40ef10 <strcmp@plt+0xb758>
  40eead:	mov    rsi,rbp
  40eeb0:	call   424df0 <strcmp@plt+0x21638>
  40eeb5:	test   eax,eax
  40eeb7:	je     40ef30 <strcmp@plt+0xb778>
  40eeb9:	mov    rax,QWORD PTR [r12+0x8]
  40eebe:	mov    r13,QWORD PTR [rax+0x8]
  40eec2:	cmp    rax,r13
  40eec5:	je     40ecb9 <strcmp@plt+0xb501>
  40eecb:	nop    DWORD PTR [rax+rax*1+0x0]
  40eed0:	mov    rdi,QWORD PTR [r13+0x10]
  40eed4:	call   434230 <strcmp@plt+0x30a78>
  40eed9:	mov    rsi,rbp
  40eedc:	mov    rdi,rax
  40eedf:	call   42aeb0 <strcmp@plt+0x276f8>
  40eee4:	mov    r13,QWORD PTR [r13+0x8]
  40eee8:	cmp    QWORD PTR [r12+0x8],r13
  40eeed:	jne    40eed0 <strcmp@plt+0xb718>
  40eeef:	jmp    40ecb9 <strcmp@plt+0xb501>
  40eef4:	lea    rax,[r12+0x28]
  40eef9:	mov    r15,QWORD PTR [r12+0x10]
  40eefe:	mov    QWORD PTR [rsp+0x18],rax
  40ef03:	jmp    40edb3 <strcmp@plt+0xb5fb>
  40ef08:	nop    DWORD PTR [rax+rax*1+0x0]
  40ef10:	mov    rax,QWORD PTR [rsp]
  40ef14:	test   rax,rax
  40ef17:	je     40efae <strcmp@plt+0xb7f6>
  40ef1d:	mov    rdi,rax
  40ef20:	call   424b80 <strcmp@plt+0x213c8>
  40ef25:	mov    rcx,QWORD PTR [rsp+0x18]
  40ef2a:	mov    QWORD PTR [rcx],rax
  40ef2d:	jmp    40eeb9 <strcmp@plt+0xb701>
  40ef2f:	nop
  40ef30:	mov    r14,QWORD PTR [rsp+0x18]
  40ef35:	mov    rdi,QWORD PTR [r14]
  40ef38:	call   424750 <strcmp@plt+0x20f98>
  40ef3d:	mov    QWORD PTR [r14],0x0
  40ef44:	jmp    40eeb9 <strcmp@plt+0xb701>
  40ef49:	mov    rdi,QWORD PTR [rsp+0x8]
  40ef4e:	mov    rdx,rbp
  40ef51:	mov    rsi,r14
  40ef54:	mov    QWORD PTR [rsp+0x10],r8
  40ef59:	call   42af00 <strcmp@plt+0x27748>
  40ef5e:	mov    r8,QWORD PTR [rsp+0x10]
  40ef63:	mov    rax,QWORD PTR [rbx+0x38]
  40ef67:	mov    rdi,QWORD PTR [rbx+0x40]
  40ef6b:	mov    rsi,r8
  40ef6e:	mov    QWORD PTR [rsp+0x8],r8
  40ef73:	call   QWORD PTR [rax+0x30]
  40ef76:	mov    r8,QWORD PTR [rsp+0x8]
  40ef7b:	mov    rdi,r8
  40ef7e:	call   4342b0 <strcmp@plt+0x30af8>
  40ef83:	mov    edx,0x1
  40ef88:	mov    rsi,rax
  40ef8b:	mov    rdi,rbx
  40ef8e:	call   4083c0 <strcmp@plt+0x4c08>
  40ef93:	jmp    40edeb <strcmp@plt+0xb633>
  40ef98:	mov    rdi,QWORD PTR [rsp]
  40ef9c:	call   424b80 <strcmp@plt+0x213c8>
  40efa1:	mov    rcx,QWORD PTR [rsp+0x8]
  40efa6:	mov    QWORD PTR [rcx],rax
  40efa9:	jmp    40ecb9 <strcmp@plt+0xb501>
  40efae:	xor    edi,edi
  40efb0:	call   424670 <strcmp@plt+0x20eb8>
  40efb5:	mov    rcx,QWORD PTR [rsp+0x18]
  40efba:	mov    QWORD PTR [rcx],rax
  40efbd:	jmp    40eeb9 <strcmp@plt+0xb701>
  40efc2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40efcd:	nop    DWORD PTR [rax]
  40efd0:	push   r15
  40efd2:	push   r14
  40efd4:	push   r13
  40efd6:	push   r12
  40efd8:	push   rbp
  40efd9:	push   rbx
  40efda:	mov    rbx,rdi
  40efdd:	sub    rsp,0x88
  40efe4:	mov    rax,QWORD PTR fs:0x28
  40efed:	mov    QWORD PTR [rsp+0x78],rax
  40eff2:	xor    eax,eax
  40eff4:	call   43ac30 <strcmp@plt+0x37478>
  40eff9:	mov    rdi,rbx
  40effc:	mov    rbp,rax
  40efff:	call   43ac50 <strcmp@plt+0x37498>
  40f004:	mov    rdi,rbx
  40f007:	mov    r12,rax
  40f00a:	call   43ac20 <strcmp@plt+0x37468>
  40f00f:	mov    rdi,QWORD PTR [rbp+0x0]
  40f013:	mov    r14,rax
  40f016:	call   434230 <strcmp@plt+0x30a78>
  40f01b:	mov    rdi,r12
  40f01e:	mov    r13,rax
  40f021:	mov    rbp,QWORD PTR [rbp+0x8]
  40f025:	call   4355a0 <strcmp@plt+0x31de8>
  40f02a:	cmp    eax,0x2710
  40f02f:	jg     40f0b0 <strcmp@plt+0xb8f8>
  40f031:	xor    eax,eax
  40f033:	call   435450 <strcmp@plt+0x31c98>
  40f038:	movzx  esi,BYTE PTR [rbp+0x8]
  40f03c:	mov    rdi,r13
  40f03f:	mov    QWORD PTR [rsp+0x8],rax
  40f044:	call   4240b0 <strcmp@plt+0x208f8>
  40f049:	test   rax,rax
  40f04c:	mov    r15,rax
  40f04f:	je     40f0aa <strcmp@plt+0xb8f2>
  40f051:	movzx  esi,WORD PTR [rax+0x24]
  40f055:	cmp    si,0xffff
  40f059:	je     40f130 <strcmp@plt+0xb978>
  40f05f:	movzx  ecx,BYTE PTR [rbp+0x18]
  40f063:	add    rsi,QWORD PTR [rax+0x30]
  40f067:	mov    rdi,r15
  40f06a:	and    ecx,0x1
  40f06d:	add    rsi,0xc
  40f071:	mov    eax,ecx
  40f073:	movzx  ecx,BYTE PTR [rsi-0xc]
  40f077:	lea    edx,[rax*8+0x0]
  40f07e:	and    ecx,0xfffffff7
  40f081:	mov    eax,ecx
  40f083:	mov    rcx,QWORD PTR [rbp+0x10]
  40f087:	or     eax,edx
  40f089:	mov    BYTE PTR [rsi-0xc],al
  40f08c:	mov    rax,QWORD PTR [rsp+0x8]
  40f091:	mov    QWORD PTR [rsi-0x8],rax
  40f095:	movzx  edx,BYTE PTR [rbp+0x8]
  40f099:	call   423dd0 <strcmp@plt+0x20618>
  40f09e:	cmp    eax,0x1
  40f0a1:	mov    r10d,eax
  40f0a4:	je     40f148 <strcmp@plt+0xb990>
  40f0aa:	xor    r10d,r10d
  40f0ad:	jmp    40f105 <strcmp@plt+0xb94d>
  40f0af:	nop
  40f0b0:	mov    rax,0x474860
  40f0b7:	mov    rsi,r12
  40f0ba:	mov    rdi,QWORD PTR [rax]
  40f0bd:	call   4352c0 <strcmp@plt+0x31b08>
  40f0c2:	mov    esi,0x3c
  40f0c7:	mov    rdi,rbx
  40f0ca:	call   43ac60 <strcmp@plt+0x374a8>
  40f0cf:	mov    rdi,QWORD PTR [rbp+0x0]
  40f0d3:	call   424890 <strcmp@plt+0x210d8>
  40f0d8:	mov    rdi,r13
  40f0db:	mov    rbx,rax
  40f0de:	call   424890 <strcmp@plt+0x210d8>
  40f0e3:	lea    rsi,[rip+0x3a2b6]        # 4493a0 <strcmp@plt+0x45be8>
  40f0ea:	mov    rdx,rax
  40f0ed:	mov    r8d,0x3c
  40f0f3:	mov    rcx,rbx
  40f0f6:	mov    edi,0x3
  40f0fb:	xor    eax,eax
  40f0fd:	call   4306a0 <strcmp@plt+0x2cee8>
  40f102:	xor    r10d,r10d
  40f105:	mov    rdx,QWORD PTR [rsp+0x78]
  40f10a:	xor    rdx,QWORD PTR fs:0x28
  40f113:	mov    eax,r10d
  40f116:	jne    40f2de <strcmp@plt+0xbb26>
  40f11c:	add    rsp,0x88
  40f123:	pop    rbx
  40f124:	pop    rbp
  40f125:	pop    r12
  40f127:	pop    r13
  40f129:	pop    r14
  40f12b:	pop    r15
  40f12d:	ret    
  40f12e:	xchg   ax,ax
  40f130:	movzx  eax,BYTE PTR ds:0x0
  40f138:	and    eax,0xfffffff7
  40f13b:	mov    BYTE PTR ds:0x0,al
  40f142:	ud2    
  40f144:	nop    DWORD PTR [rax+0x0]
  40f148:	mov    rax,0x468e3c
  40f14f:	mov    r9,QWORD PTR [rbp+0x0]
  40f153:	mov    ecx,DWORD PTR [rax]
  40f155:	test   ecx,ecx
  40f157:	jle    40f1af <strcmp@plt+0xb9f7>
  40f159:	mov    rdi,r9
  40f15c:	mov    DWORD PTR [rsp+0x2c],r10d
  40f161:	mov    QWORD PTR [rsp+0x20],r9
  40f166:	call   424890 <strcmp@plt+0x210d8>
  40f16b:	mov    rdi,r13
  40f16e:	mov    QWORD PTR [rsp+0x18],rax
  40f173:	call   424890 <strcmp@plt+0x210d8>
  40f178:	mov    rdi,r15
  40f17b:	mov    QWORD PTR [rsp+0x10],rax
  40f180:	call   423a90 <strcmp@plt+0x202d8>
  40f185:	mov    r8,QWORD PTR [rsp+0x18]
  40f18a:	mov    rcx,QWORD PTR [rsp+0x10]
  40f18f:	lea    rsi,[rip+0x3af8e]        # 44a124 <strcmp@plt+0x4696c>
  40f196:	mov    rdx,rax
  40f199:	mov    edi,0x5
  40f19e:	xor    eax,eax
  40f1a0:	call   4306a0 <strcmp@plt+0x2cee8>
  40f1a5:	mov    r9,QWORD PTR [rsp+0x20]
  40f1aa:	mov    r10d,DWORD PTR [rsp+0x2c]
  40f1af:	lea    r11,[rsp+0x30]
  40f1b4:	xor    ecx,ecx
  40f1b6:	mov    r8,r9
  40f1b9:	mov    edx,0x10f6
  40f1be:	mov    esi,0x10f6
  40f1c3:	mov    DWORD PTR [rsp+0x18],r10d
  40f1c8:	mov    rdi,r11
  40f1cb:	mov    QWORD PTR [rsp+0x10],r11
  40f1d0:	call   438840 <strcmp@plt+0x35088>
  40f1d5:	mov    r11,QWORD PTR [rsp+0x10]
  40f1da:	mov    rsi,r15
  40f1dd:	mov    rdi,r14
  40f1e0:	mov    rdx,r11
  40f1e3:	call   4083b0 <strcmp@plt+0x4bf8>
  40f1e8:	mov    rdi,r15
  40f1eb:	call   4300b0 <strcmp@plt+0x2c8f8>
  40f1f0:	mov    rdi,r12
  40f1f3:	call   4355a0 <strcmp@plt+0x31de8>
  40f1f8:	test   eax,eax
  40f1fa:	mov    r10d,DWORD PTR [rsp+0x18]
  40f1ff:	mov    rax,0x468e3c
  40f206:	jle    40f298 <strcmp@plt+0xbae0>
  40f20c:	mov    edx,DWORD PTR [rax]
  40f20e:	test   edx,edx
  40f210:	jg     40f248 <strcmp@plt+0xba90>
  40f212:	mov    rax,0x474860
  40f219:	mov    rsi,QWORD PTR [rsp+0x8]
  40f21e:	mov    rdx,r12
  40f221:	mov    DWORD PTR [rsp+0x10],r10d
  40f226:	mov    rdi,QWORD PTR [rax]
  40f229:	call   434960 <strcmp@plt+0x311a8>
  40f22e:	mov    esi,0x3
  40f233:	mov    rdi,rbx
  40f236:	call   43ac60 <strcmp@plt+0x374a8>
  40f23b:	mov    r10d,DWORD PTR [rsp+0x10]
  40f240:	jmp    40f105 <strcmp@plt+0xb94d>
  40f245:	nop    DWORD PTR [rax]
  40f248:	mov    rdi,r12
  40f24b:	mov    DWORD PTR [rsp+0x10],r10d
  40f250:	call   4355a0 <strcmp@plt+0x31de8>
  40f255:	mov    rdi,QWORD PTR [rbp+0x0]
  40f259:	mov    r14d,eax
  40f25c:	call   424890 <strcmp@plt+0x210d8>
  40f261:	mov    rdi,r13
  40f264:	mov    rbp,rax
  40f267:	call   424890 <strcmp@plt+0x210d8>
  40f26c:	lea    rsi,[rip+0x3a175]        # 4493e8 <strcmp@plt+0x45c30>
  40f273:	mov    rdx,rax
  40f276:	mov    r8d,r14d
  40f279:	mov    rcx,rbp
  40f27c:	mov    edi,0x5
  40f281:	xor    eax,eax
  40f283:	call   4306a0 <strcmp@plt+0x2cee8>
  40f288:	mov    r10d,DWORD PTR [rsp+0x10]
  40f28d:	jmp    40f212 <strcmp@plt+0xba5a>
  40f292:	nop    WORD PTR [rax+rax*1+0x0]
  40f298:	mov    eax,DWORD PTR [rax]
  40f29a:	test   eax,eax
  40f29c:	jle    40f212 <strcmp@plt+0xba5a>
  40f2a2:	mov    rdi,QWORD PTR [rbp+0x0]
  40f2a6:	mov    DWORD PTR [rsp+0x10],r10d
  40f2ab:	call   424890 <strcmp@plt+0x210d8>
  40f2b0:	mov    rdi,r13
  40f2b3:	mov    rbp,rax
  40f2b6:	call   424890 <strcmp@plt+0x210d8>
  40f2bb:	lea    rsi,[rip+0x3a166]        # 449428 <strcmp@plt+0x45c70>
  40f2c2:	mov    rdx,rax
  40f2c5:	mov    rcx,rbp
  40f2c8:	mov    edi,0x5
  40f2cd:	xor    eax,eax
  40f2cf:	call   4306a0 <strcmp@plt+0x2cee8>
  40f2d4:	mov    r10d,DWORD PTR [rsp+0x10]
  40f2d9:	jmp    40f212 <strcmp@plt+0xba5a>
  40f2de:	call   403460 <__stack_chk_fail@plt>
  40f2e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f2ee:	xchg   ax,ax
  40f2f0:	push   r15
  40f2f2:	push   r14
  40f2f4:	push   r13
  40f2f6:	push   r12
  40f2f8:	push   rbp
  40f2f9:	push   rbx
  40f2fa:	mov    rbx,rdi
  40f2fd:	sub    rsp,0x98
  40f304:	mov    rax,QWORD PTR fs:0x28
  40f30d:	mov    QWORD PTR [rsp+0x88],rax
  40f315:	xor    eax,eax
  40f317:	call   43ac30 <strcmp@plt+0x37478>
  40f31c:	mov    rdi,rbx
  40f31f:	mov    r12,rax
  40f322:	call   43ac50 <strcmp@plt+0x37498>
  40f327:	mov    rdi,rbx
  40f32a:	mov    r13,rax
  40f32d:	call   43ac20 <strcmp@plt+0x37468>
  40f332:	mov    rdi,QWORD PTR [r12]
  40f336:	mov    rbp,rax
  40f339:	call   434230 <strcmp@plt+0x30a78>
  40f33e:	mov    QWORD PTR [rsp+0x10],rax
  40f343:	mov    r15,rax
  40f346:	mov    rax,QWORD PTR [r12+0x10]
  40f34b:	mov    rdi,r13
  40f34e:	mov    r14,QWORD PTR [r12+0x8]
  40f353:	mov    rcx,QWORD PTR [rax]
  40f356:	mov    rax,QWORD PTR [r12+0x18]
  40f35b:	mov    QWORD PTR [rsp],rcx
  40f35f:	mov    QWORD PTR [rsp+0x8],rax
  40f364:	call   4355a0 <strcmp@plt+0x31de8>
  40f369:	cmp    eax,DWORD PTR [rbp+0x28]
  40f36c:	jg     40f460 <strcmp@plt+0xbca8>
  40f372:	xor    eax,eax
  40f374:	call   435450 <strcmp@plt+0x31c98>
  40f379:	movzx  esi,BYTE PTR [r14+0x8]
  40f37e:	mov    rdi,r15
  40f381:	mov    QWORD PTR [rsp+0x18],rax
  40f386:	call   4240b0 <strcmp@plt+0x208f8>
  40f38b:	lea    rsi,[rbp+0x90]
  40f392:	lea    rdx,[rbp+0x88]
  40f399:	mov    r12,rax
  40f39c:	mov    rdi,rax
  40f39f:	call   423770 <strcmp@plt+0x1ffb8>
  40f3a4:	movzx  esi,WORD PTR [r12+0x24]
  40f3aa:	cmp    si,0xffff
  40f3ae:	je     40f450 <strcmp@plt+0xbc98>
  40f3b4:	add    rsi,QWORD PTR [r12+0x30]
  40f3b9:	mov    rax,QWORD PTR [rsp+0x18]
  40f3be:	mov    rdi,QWORD PTR [r14]
  40f3c1:	or     BYTE PTR [rsi],0xb
  40f3c4:	mov    QWORD PTR [rsi+0x4],rax
  40f3c8:	mov    r15,rsi
  40f3cb:	call   4251c0 <strcmp@plt+0x21a08>
  40f3d0:	mov    rdi,QWORD PTR [rsp]
  40f3d4:	mov    WORD PTR [rsp+0x20],ax
  40f3d9:	call   4251c0 <strcmp@plt+0x21a08>
  40f3de:	cmp    WORD PTR [rsp+0x20],ax
  40f3e3:	je     40f4f0 <strcmp@plt+0xbd38>
  40f3e9:	mov    rax,0x468e3c
  40f3f0:	mov    eax,DWORD PTR [rax]
  40f3f2:	test   eax,eax
  40f3f4:	jle    40f415 <strcmp@plt+0xbc5d>
  40f3f6:	mov    rdi,QWORD PTR [rsp]
  40f3fa:	call   424890 <strcmp@plt+0x210d8>
  40f3ff:	lea    rsi,[rip+0x3a04a]        # 449450 <strcmp@plt+0x45c98>
  40f406:	mov    rdx,rax
  40f409:	mov    edi,0x5
  40f40e:	xor    eax,eax
  40f410:	call   4306a0 <strcmp@plt+0x2cee8>
  40f415:	mov    rdi,r12
  40f418:	call   4300b0 <strcmp@plt+0x2c8f8>
  40f41d:	xor    r15d,r15d
  40f420:	mov    rdx,QWORD PTR [rsp+0x88]
  40f428:	xor    rdx,QWORD PTR fs:0x28
  40f431:	mov    eax,r15d
  40f434:	jne    40f74e <strcmp@plt+0xbf96>
  40f43a:	add    rsp,0x98
  40f441:	pop    rbx
  40f442:	pop    rbp
  40f443:	pop    r12
  40f445:	pop    r13
  40f447:	pop    r14
  40f449:	pop    r15
  40f44b:	ret    
  40f44c:	nop    DWORD PTR [rax+0x0]
  40f450:	mov    QWORD PTR ds:0x4,0x0
  40f45c:	ud2    
  40f45e:	xchg   ax,ax
  40f460:	mov    rax,0x474860
  40f467:	mov    rsi,r13
  40f46a:	mov    rdi,QWORD PTR [rax]
  40f46d:	call   4352c0 <strcmp@plt+0x31b08>
  40f472:	mov    esi,0x3c
  40f477:	mov    rdi,rbx
  40f47a:	call   43ac60 <strcmp@plt+0x374a8>
  40f47f:	mov    rax,0x468e3c
  40f486:	mov    r9d,DWORD PTR [rax]
  40f489:	test   r9d,r9d
  40f48c:	jle    40f41d <strcmp@plt+0xbc65>
  40f48e:	mov    rdi,QWORD PTR [rsp+0x8]
  40f493:	call   424890 <strcmp@plt+0x210d8>
  40f498:	mov    rdi,QWORD PTR [rsp]
  40f49c:	mov    r12,rax
  40f49f:	call   424890 <strcmp@plt+0x210d8>
  40f4a4:	mov    rdi,QWORD PTR [r14]
  40f4a7:	mov    rbp,rax
  40f4aa:	call   424890 <strcmp@plt+0x210d8>
  40f4af:	mov    rdi,QWORD PTR [rsp+0x10]
  40f4b4:	mov    rbx,rax
  40f4b7:	call   424890 <strcmp@plt+0x210d8>
  40f4bc:	sub    rsp,0x8
  40f4c0:	lea    rsi,[rip+0x3a109]        # 4495d0 <strcmp@plt+0x45e18>
  40f4c7:	mov    rdx,rax
  40f4ca:	push   0x3c
  40f4cc:	xor    eax,eax
  40f4ce:	mov    r9,r12
  40f4d1:	mov    r8,rbp
  40f4d4:	mov    rcx,rbx
  40f4d7:	mov    edi,0x5
  40f4dc:	call   4306a0 <strcmp@plt+0x2cee8>
  40f4e1:	pop    rax
  40f4e2:	pop    rdx
  40f4e3:	jmp    40f41d <strcmp@plt+0xbc65>
  40f4e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f4f0:	movzx  edx,BYTE PTR [r14+0x8]
  40f4f5:	mov    rcx,QWORD PTR [r14+0x10]
  40f4f9:	lea    rsi,[r15+0xc]
  40f4fd:	mov    rdi,r12
  40f500:	call   423dd0 <strcmp@plt+0x20618>
  40f505:	cmp    eax,0x1
  40f508:	mov    r15d,eax
  40f50b:	je     40f535 <strcmp@plt+0xbd7d>
  40f50d:	mov    rax,0x468e3c
  40f514:	cmp    DWORD PTR [rax],0x1
  40f517:	jle    40f41d <strcmp@plt+0xbc65>
  40f51d:	lea    rsi,[rip+0x39f84]        # 4494a8 <strcmp@plt+0x45cf0>
  40f524:	mov    edi,0x6
  40f529:	xor    eax,eax
  40f52b:	call   4306a0 <strcmp@plt+0x2cee8>
  40f530:	jmp    40f41d <strcmp@plt+0xbc65>
  40f535:	mov    r8,QWORD PTR [r14]
  40f538:	mov    rcx,QWORD PTR [rsp]
  40f53c:	mov    edx,0x10f6
  40f541:	mov    esi,0x10f6
  40f546:	mov    rdi,r12
  40f549:	call   423bc0 <strcmp@plt+0x20408>
  40f54e:	movzx  eax,WORD PTR [r12+0x1e]
  40f554:	cmp    ax,0xffff
  40f558:	je     40f739 <strcmp@plt+0xbf81>
  40f55e:	mov    rdx,QWORD PTR [r12+0x30]
  40f563:	or     BYTE PTR [rdx+rax*1+0x1],0x40
  40f568:	mov    rax,0x468e3c
  40f56f:	mov    eax,DWORD PTR [rax]
  40f571:	test   eax,eax
  40f573:	jle    40f5e8 <strcmp@plt+0xbe30>
  40f575:	mov    rdi,QWORD PTR [rsp+0x8]
  40f57a:	call   424890 <strcmp@plt+0x210d8>
  40f57f:	mov    rdi,QWORD PTR [rsp+0x10]
  40f584:	mov    QWORD PTR [rsp+0x38],rax
  40f589:	call   424890 <strcmp@plt+0x210d8>
  40f58e:	mov    rdi,QWORD PTR [r14]
  40f591:	mov    QWORD PTR [rsp+0x30],rax
  40f596:	call   424890 <strcmp@plt+0x210d8>
  40f59b:	mov    rdi,QWORD PTR [rsp]
  40f59f:	mov    QWORD PTR [rsp+0x28],rax
  40f5a4:	call   424890 <strcmp@plt+0x210d8>
  40f5a9:	mov    rdi,r12
  40f5ac:	mov    QWORD PTR [rsp+0x20],rax
  40f5b1:	call   423a90 <strcmp@plt+0x202d8>
  40f5b6:	sub    rsp,0x8
  40f5ba:	lea    rsi,[rip+0x39f2f]        # 4494f0 <strcmp@plt+0x45d38>
  40f5c1:	mov    edi,0x5
  40f5c6:	mov    rdx,QWORD PTR [rsp+0x40]
  40f5cb:	push   rdx
  40f5cc:	mov    r9,QWORD PTR [rsp+0x40]
  40f5d1:	mov    rdx,rax
  40f5d4:	mov    r8,QWORD PTR [rsp+0x38]
  40f5d9:	mov    rcx,QWORD PTR [rsp+0x30]
  40f5de:	xor    eax,eax
  40f5e0:	call   4306a0 <strcmp@plt+0x2cee8>
  40f5e5:	pop    rdi
  40f5e6:	pop    r8
  40f5e8:	movzx  esi,WORD PTR [rbp+0x5c]
  40f5ec:	lea    r9,[rsp+0x40]
  40f5f1:	mov    r8,QWORD PTR [rsp+0x8]
  40f5f6:	mov    rcx,QWORD PTR [rsp]
  40f5fa:	mov    edx,0x10f6
  40f5ff:	mov    rdi,r9
  40f602:	mov    QWORD PTR [rsp+0x20],r9
  40f607:	call   438840 <strcmp@plt+0x35088>
  40f60c:	mov    r9,QWORD PTR [rsp+0x20]
  40f611:	mov    rsi,r12
  40f614:	mov    rdi,rbp
  40f617:	mov    rdx,r9
  40f61a:	call   4083b0 <strcmp@plt+0x4bf8>
  40f61f:	mov    rdi,r12
  40f622:	call   4300b0 <strcmp@plt+0x2c8f8>
  40f627:	mov    rdi,r13
  40f62a:	call   4355a0 <strcmp@plt+0x31de8>
  40f62f:	test   eax,eax
  40f631:	jle    40f6d8 <strcmp@plt+0xbf20>
  40f637:	mov    rax,0x468e3c
  40f63e:	mov    r11d,DWORD PTR [rax]
  40f641:	test   r11d,r11d
  40f644:	jle    40f6a8 <strcmp@plt+0xbef0>
  40f646:	mov    rdi,r13
  40f649:	call   4355a0 <strcmp@plt+0x31de8>
  40f64e:	mov    rdi,QWORD PTR [rsp+0x8]
  40f653:	mov    ebp,eax
  40f655:	call   424890 <strcmp@plt+0x210d8>
  40f65a:	mov    rdi,QWORD PTR [rsp]
  40f65e:	mov    QWORD PTR [rsp+0x8],rax
  40f663:	call   424890 <strcmp@plt+0x210d8>
  40f668:	mov    rdi,QWORD PTR [r14]
  40f66b:	mov    r12,rax
  40f66e:	call   424890 <strcmp@plt+0x210d8>
  40f673:	mov    rdi,QWORD PTR [rsp+0x10]
  40f678:	mov    r14,rax
  40f67b:	call   424890 <strcmp@plt+0x210d8>
  40f680:	sub    rsp,0x8
  40f684:	lea    rsi,[rip+0x39e95]        # 449520 <strcmp@plt+0x45d68>
  40f68b:	mov    rcx,r14
  40f68e:	push   rbp
  40f68f:	mov    r9,QWORD PTR [rsp+0x18]
  40f694:	mov    rdx,rax
  40f697:	mov    r8,r12
  40f69a:	mov    edi,0x5
  40f69f:	xor    eax,eax
  40f6a1:	call   4306a0 <strcmp@plt+0x2cee8>
  40f6a6:	pop    rcx
  40f6a7:	pop    rsi
  40f6a8:	mov    rax,0x474860
  40f6af:	mov    rsi,QWORD PTR [rsp+0x18]
  40f6b4:	mov    rdx,r13
  40f6b7:	mov    rdi,QWORD PTR [rax]
  40f6ba:	call   434960 <strcmp@plt+0x311a8>
  40f6bf:	mov    esi,0x3
  40f6c4:	mov    rdi,rbx
  40f6c7:	call   43ac60 <strcmp@plt+0x374a8>
  40f6cc:	jmp    40f420 <strcmp@plt+0xbc68>
  40f6d1:	nop    DWORD PTR [rax+0x0]
  40f6d8:	mov    rax,0x468e3c
  40f6df:	mov    r10d,DWORD PTR [rax]
  40f6e2:	test   r10d,r10d
  40f6e5:	jle    40f6a8 <strcmp@plt+0xbef0>
  40f6e7:	mov    rdi,QWORD PTR [rsp+0x8]
  40f6ec:	call   424890 <strcmp@plt+0x210d8>
  40f6f1:	mov    rdi,QWORD PTR [rsp]
  40f6f5:	mov    rbp,rax
  40f6f8:	call   424890 <strcmp@plt+0x210d8>
  40f6fd:	mov    rdi,QWORD PTR [r14]
  40f700:	mov    r12,rax
  40f703:	call   424890 <strcmp@plt+0x210d8>
  40f708:	mov    rdi,QWORD PTR [rsp+0x10]
  40f70d:	mov    r14,rax
  40f710:	call   424890 <strcmp@plt+0x210d8>
  40f715:	lea    rsi,[rip+0x39e64]        # 449580 <strcmp@plt+0x45dc8>
  40f71c:	mov    rdx,rax
  40f71f:	mov    r9,rbp
  40f722:	mov    r8,r12
  40f725:	mov    rcx,r14
  40f728:	mov    edi,0x5
  40f72d:	xor    eax,eax
  40f72f:	call   4306a0 <strcmp@plt+0x2cee8>
  40f734:	jmp    40f6a8 <strcmp@plt+0xbef0>
  40f739:	movzx  eax,WORD PTR ds:0x0
  40f741:	and    ah,0xbf
  40f744:	mov    WORD PTR ds:0x0,ax
  40f74c:	ud2    
  40f74e:	call   403460 <__stack_chk_fail@plt>
  40f753:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f75e:	xchg   ax,ax
  40f760:	push   r15
  40f762:	push   r14
  40f764:	push   r13
  40f766:	push   r12
  40f768:	push   rbp
  40f769:	push   rbx
  40f76a:	sub    rsp,0x158
  40f771:	mov    rax,QWORD PTR fs:0x28
  40f77a:	mov    QWORD PTR [rsp+0x148],rax
  40f782:	xor    eax,eax
  40f784:	mov    rax,0x468600
  40f78b:	cmp    QWORD PTR [rdi+0x8],rax
  40f78f:	jne    40fb90 <strcmp@plt+0xc3d8>
  40f795:	mov    r15,rdi
  40f798:	mov    rdi,rsi
  40f79b:	mov    r14,rsi
  40f79e:	mov    r12,rdx
  40f7a1:	call   422770 <strcmp@plt+0x1efb8>
  40f7a6:	cmp    eax,0x8
  40f7a9:	mov    r13d,eax
  40f7ac:	mov    QWORD PTR [rsp+0x8],0x0
  40f7b5:	je     40fb40 <strcmp@plt+0xc388>
  40f7bb:	cmp    r13d,0x7
  40f7bf:	ja     40fb10 <strcmp@plt+0xc358>
  40f7c5:	lea    rcx,[rip+0x3aaa4]        # 44a270 <strcmp@plt+0x46ab8>
  40f7cc:	mov    edx,r13d
  40f7cf:	movsxd rax,DWORD PTR [rcx+rdx*4]
  40f7d3:	add    rax,rcx
  40f7d6:	jmp    rax
  40f7d8:	mov    rdi,r12
  40f7db:	call   424750 <strcmp@plt+0x20f98>
  40f7e0:	mov    rax,0x468e3c
  40f7e7:	mov    eax,DWORD PTR [rax]
  40f7e9:	nop    DWORD PTR [rax+0x0]
  40f7f0:	test   eax,eax
  40f7f2:	jg     40f828 <strcmp@plt+0xc070>
  40f7f4:	xor    ebx,ebx
  40f7f6:	mov    rcx,QWORD PTR [rsp+0x148]
  40f7fe:	xor    rcx,QWORD PTR fs:0x28
  40f807:	mov    eax,ebx
  40f809:	jne    4103cd <strcmp@plt+0xcc15>
  40f80f:	add    rsp,0x158
  40f816:	pop    rbx
  40f817:	pop    rbp
  40f818:	pop    r12
  40f81a:	pop    r13
  40f81c:	pop    r14
  40f81e:	pop    r15
  40f820:	ret    
  40f821:	nop    DWORD PTR [rax+0x0]
  40f828:	lea    rsi,[rip+0x3a1a9]        # 4499d8 <strcmp@plt+0x46220>
  40f82f:	mov    edi,0x5
  40f834:	xor    eax,eax
  40f836:	call   4306a0 <strcmp@plt+0x2cee8>
  40f83b:	jmp    40f7f4 <strcmp@plt+0xc03c>
  40f83d:	nop    DWORD PTR [rax]
  40f840:	mov    rax,QWORD PTR [r14]
  40f843:	mov    QWORD PTR [rsp+0x60],rax
  40f848:	mov    rax,QWORD PTR [r14+0x8]
  40f84c:	mov    QWORD PTR [rsp+0x68],rax
  40f851:	mov    rax,QWORD PTR [r14+0x10]
  40f855:	mov    QWORD PTR [rsp+0x70],rax
  40f85a:	mov    rax,QWORD PTR [r14+0x18]
  40f85e:	mov    QWORD PTR [rsp+0x78],rax
  40f863:	mov    rax,QWORD PTR [r14+0x20]
  40f867:	mov    QWORD PTR [rsp+0x80],rax
  40f86f:	mov    rax,QWORD PTR [r14+0x28]
  40f873:	mov    QWORD PTR [rsp+0x88],rax
  40f87b:	mov    rax,QWORD PTR [r14+0x30]
  40f87f:	mov    QWORD PTR [rsp+0x90],rax
  40f887:	mov    rax,QWORD PTR [r14+0x38]
  40f88b:	mov    QWORD PTR [rsp+0x98],rax
  40f893:	lea    rax,[rsp+0x60]
  40f898:	mov    rdi,rax
  40f89b:	mov    QWORD PTR [rsp],rax
  40f89f:	call   423110 <strcmp@plt+0x1f958>
  40f8a4:	mov    rsi,QWORD PTR [rax+0x4]
  40f8a8:	mov    r12,rax
  40f8ab:	mov    rax,0x474860
  40f8b2:	mov    rdi,QWORD PTR [rax]
  40f8b5:	mov    QWORD PTR [rsp+0x18],rax
  40f8ba:	call   435210 <strcmp@plt+0x31a58>
  40f8bf:	test   rax,rax
  40f8c2:	mov    QWORD PTR [rsp+0x8],rax
  40f8c7:	je     40fcf0 <strcmp@plt+0xc538>
  40f8cd:	mov    rdi,QWORD PTR [rsp+0x8]
  40f8d2:	call   435480 <strcmp@plt+0x31cc8>
  40f8d7:	test   BYTE PTR [r12],0x8
  40f8dc:	mov    QWORD PTR [rsp+0x10],rax
  40f8e1:	je     40fe58 <strcmp@plt+0xc6a0>
  40f8e7:	mov    rbp,0x468e3c
  40f8ee:	mov    edi,DWORD PTR [rbp+0x0]
  40f8f1:	test   edi,edi
  40f8f3:	jg     40fcd8 <strcmp@plt+0xc520>
  40f8f9:	mov    rdi,QWORD PTR [rsp+0x10]
  40f8fe:	call   43ac30 <strcmp@plt+0x37478>
  40f903:	test   BYTE PTR [r12],0x4
  40f908:	mov    rbx,QWORD PTR [rax+0x8]
  40f90c:	jne    40fc90 <strcmp@plt+0xc4d8>
  40f912:	mov    rdi,QWORD PTR [rsp]
  40f916:	call   424150 <strcmp@plt+0x20998>
  40f91b:	mov    rdx,QWORD PTR [rbx+0x10]
  40f91f:	mov    rsi,rax
  40f922:	mov    rdi,r14
  40f925:	call   423ef0 <strcmp@plt+0x20738>
  40f92a:	cmp    eax,0x1
  40f92d:	mov    ebx,eax
  40f92f:	je     40fe78 <strcmp@plt+0xc6c0>
  40f935:	mov    eax,DWORD PTR [rbp+0x0]
  40f938:	test   eax,eax
  40f93a:	jle    40f7f0 <strcmp@plt+0xc038>
  40f940:	lea    rsi,[rip+0x38433]        # 447d7a <strcmp@plt+0x445c2>
  40f947:	xor    eax,eax
  40f949:	mov    edi,0x5
  40f94e:	call   4306a0 <strcmp@plt+0x2cee8>
  40f953:	mov    eax,DWORD PTR [rbp+0x0]
  40f956:	jmp    40f7f0 <strcmp@plt+0xc038>
  40f95b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f960:	mov    rax,QWORD PTR [r14]
  40f963:	lea    rbx,[rsp+0x60]
  40f968:	mov    rdi,rbx
  40f96b:	mov    QWORD PTR [rsp+0x60],rax
  40f970:	mov    rax,QWORD PTR [r14+0x8]
  40f974:	mov    QWORD PTR [rsp+0x68],rax
  40f979:	mov    rax,QWORD PTR [r14+0x10]
  40f97d:	mov    QWORD PTR [rsp+0x70],rax
  40f982:	mov    rax,QWORD PTR [r14+0x18]
  40f986:	mov    QWORD PTR [rsp+0x78],rax
  40f98b:	mov    rax,QWORD PTR [r14+0x20]
  40f98f:	mov    QWORD PTR [rsp+0x80],rax
  40f997:	mov    rax,QWORD PTR [r14+0x28]
  40f99b:	mov    QWORD PTR [rsp+0x88],rax
  40f9a3:	mov    rax,QWORD PTR [r14+0x30]
  40f9a7:	mov    QWORD PTR [rsp+0x90],rax
  40f9af:	mov    rax,QWORD PTR [r14+0x38]
  40f9b3:	mov    QWORD PTR [rsp+0x98],rax
  40f9bb:	call   423110 <strcmp@plt+0x1f958>
  40f9c0:	test   BYTE PTR [rax],0x8
  40f9c3:	mov    rbp,rax
  40f9c6:	jne    40fd30 <strcmp@plt+0xc578>
  40f9cc:	mov    rbx,0x468e3c
  40f9d3:	mov    eax,DWORD PTR [rbx]
  40f9d5:	test   eax,eax
  40f9d7:	jle    40f7f0 <strcmp@plt+0xc038>
  40f9dd:	lea    rsi,[rip+0x39dbc]        # 4497a0 <strcmp@plt+0x45fe8>
  40f9e4:	xor    eax,eax
  40f9e6:	mov    edi,0x5
  40f9eb:	call   4306a0 <strcmp@plt+0x2cee8>
  40f9f0:	mov    eax,DWORD PTR [rbx]
  40f9f2:	jmp    40f7f0 <strcmp@plt+0xc038>
  40f9f7:	nop    WORD PTR [rax+rax*1+0x0]
  40fa00:	mov    rax,QWORD PTR [r14]
  40fa03:	mov    QWORD PTR [rsp+0x60],rax
  40fa08:	mov    rax,QWORD PTR [r14+0x8]
  40fa0c:	mov    QWORD PTR [rsp+0x68],rax
  40fa11:	mov    rax,QWORD PTR [r14+0x10]
  40fa15:	mov    QWORD PTR [rsp+0x70],rax
  40fa1a:	mov    rax,QWORD PTR [r14+0x18]
  40fa1e:	mov    QWORD PTR [rsp+0x78],rax
  40fa23:	mov    rax,QWORD PTR [r14+0x20]
  40fa27:	mov    QWORD PTR [rsp+0x80],rax
  40fa2f:	mov    rax,QWORD PTR [r14+0x28]
  40fa33:	mov    QWORD PTR [rsp+0x88],rax
  40fa3b:	mov    rax,QWORD PTR [r14+0x30]
  40fa3f:	mov    QWORD PTR [rsp+0x90],rax
  40fa47:	mov    rax,QWORD PTR [r14+0x38]
  40fa4b:	mov    QWORD PTR [rsp+0x98],rax
  40fa53:	xor    eax,eax
  40fa55:	call   424740 <strcmp@plt+0x20f88>
  40fa5a:	mov    rbp,rax
  40fa5d:	mov    QWORD PTR [rsp+0x20],rax
  40fa62:	xor    eax,eax
  40fa64:	call   424740 <strcmp@plt+0x20f88>
  40fa69:	lea    rcx,[rsp+0x60]
  40fa6e:	mov    r13,rax
  40fa71:	mov    rbx,rcx
  40fa74:	mov    rdi,rcx
  40fa77:	mov    QWORD PTR [rsp],rcx
  40fa7b:	call   423110 <strcmp@plt+0x1f958>
  40fa80:	mov    rdi,rbx
  40fa83:	mov    rsi,rbp
  40fa86:	mov    r14,rax
  40fa89:	call   4229d0 <strcmp@plt+0x1f218>
  40fa8e:	cmp    eax,0x1
  40fa91:	mov    ebx,eax
  40fa93:	je     40fbb0 <strcmp@plt+0xc3f8>
  40fa99:	mov    rbp,0x468e3c
  40faa0:	xor    edi,edi
  40faa2:	call   42dac0 <strcmp@plt+0x2a308>
  40faa7:	mov    rdi,QWORD PTR [rsp+0x20]
  40faac:	xor    ebx,ebx
  40faae:	call   424750 <strcmp@plt+0x20f98>
  40fab3:	mov    rdi,r13
  40fab6:	call   424750 <strcmp@plt+0x20f98>
  40fabb:	mov    eax,DWORD PTR [rbp+0x0]
  40fabe:	cmp    ebx,0x1
  40fac1:	jne    40f7f0 <strcmp@plt+0xc038>
  40fac7:	cmp    eax,0x2
  40faca:	jle    40f7f6 <strcmp@plt+0xc03e>
  40fad0:	lea    rsi,[rip+0x39f31]        # 449a08 <strcmp@plt+0x46250>
  40fad7:	mov    edi,0x7
  40fadc:	xor    eax,eax
  40fade:	call   4306a0 <strcmp@plt+0x2cee8>
  40fae3:	jmp    40f7f6 <strcmp@plt+0xc03e>
  40fae8:	nop    DWORD PTR [rax+rax*1+0x0]
  40faf0:	lea    rdi,[r15+0x18]
  40faf4:	mov    rdx,r12
  40faf7:	mov    rsi,r14
  40fafa:	call   40c340 <strcmp@plt+0x8b88>
  40faff:	mov    ebx,eax
  40fb01:	mov    rax,0x468e3c
  40fb08:	mov    eax,DWORD PTR [rax]
  40fb0a:	jmp    40fabe <strcmp@plt+0xc306>
  40fb0c:	nop    DWORD PTR [rax+0x0]
  40fb10:	mov    rbx,0x468e3c
  40fb17:	mov    edx,DWORD PTR [rbx]
  40fb19:	test   edx,edx
  40fb1b:	jle    40f7f4 <strcmp@plt+0xc03c>
  40fb21:	lea    rsi,[rip+0x39e78]        # 4499a0 <strcmp@plt+0x461e8>
  40fb28:	xor    eax,eax
  40fb2a:	mov    edx,r13d
  40fb2d:	mov    edi,0x5
  40fb32:	call   4306a0 <strcmp@plt+0x2cee8>
  40fb37:	mov    eax,DWORD PTR [rbx]
  40fb39:	jmp    40f7f0 <strcmp@plt+0xc038>
  40fb3e:	xchg   ax,ax
  40fb40:	mov    rdi,r14
  40fb43:	call   4227d0 <strcmp@plt+0x1f018>
  40fb48:	test   BYTE PTR [rax],0x8
  40fb4b:	mov    rdi,r14
  40fb4e:	je     40fc00 <strcmp@plt+0xc448>
  40fb54:	call   423cc0 <strcmp@plt+0x20508>
  40fb59:	mov    rax,0x468e3c
  40fb60:	cmp    DWORD PTR [rax],0x1
  40fb63:	jle    40f7f4 <strcmp@plt+0xc03c>
  40fb69:	mov    rdi,r14
  40fb6c:	call   423cc0 <strcmp@plt+0x20508>
  40fb71:	lea    rsi,[rip+0x39ad0]        # 449648 <strcmp@plt+0x45e90>
  40fb78:	mov    edx,eax
  40fb7a:	mov    edi,0x6
  40fb7f:	xor    eax,eax
  40fb81:	call   4306a0 <strcmp@plt+0x2cee8>
  40fb86:	jmp    40f7f4 <strcmp@plt+0xc03c>
  40fb8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fb90:	lea    rdx,[rip+0x394d1]        # 449068 <strcmp@plt+0x458b0>
  40fb97:	lea    rsi,[rip+0x3a712]        # 44a2b0 <strcmp@plt+0x46af8>
  40fb9e:	lea    rdi,[rip+0x3a52b]        # 44a0d0 <strcmp@plt+0x46918>
  40fba5:	call   434880 <strcmp@plt+0x310c8>
  40fbaa:	nop    WORD PTR [rax+rax*1+0x0]
  40fbb0:	movzx  eax,BYTE PTR [r14]
  40fbb4:	test   al,0x2
  40fbb6:	jne    40fca0 <strcmp@plt+0xc4e8>
  40fbbc:	test   al,0x1
  40fbbe:	je     40ff90 <strcmp@plt+0xc7d8>
  40fbc4:	cmp    BYTE PTR [r14+0x3],0x1
  40fbc9:	jbe    40ff90 <strcmp@plt+0xc7d8>
  40fbcf:	mov    rbp,0x468e3c
  40fbd6:	mov    eax,DWORD PTR [rbp+0x0]
  40fbd9:	test   eax,eax
  40fbdb:	jle    40faa0 <strcmp@plt+0xc2e8>
  40fbe1:	lea    rsi,[rip+0x38600]        # 4481e8 <strcmp@plt+0x44a30>
  40fbe8:	mov    edi,0x5
  40fbed:	xor    eax,eax
  40fbef:	call   4306a0 <strcmp@plt+0x2cee8>
  40fbf4:	jmp    40faa0 <strcmp@plt+0xc2e8>
  40fbf9:	nop    DWORD PTR [rax+0x0]
  40fc00:	call   422810 <strcmp@plt+0x1f058>
  40fc05:	cmp    eax,0x1
  40fc08:	jne    40f7f4 <strcmp@plt+0xc03c>
  40fc0e:	lea    rbp,[rsp+0xf0]
  40fc16:	mov    rdi,r14
  40fc19:	lea    rbx,[rsp+0xa0]
  40fc21:	mov    rsi,rbp
  40fc24:	call   435ec0 <strcmp@plt+0x32708>
  40fc29:	movzx  edx,WORD PTR [rsp+0x130]
  40fc31:	movzx  esi,WORD PTR [rsp+0x132]
  40fc39:	lea    rcx,[rbp+0x20]
  40fc3d:	mov    r8,rbp
  40fc40:	mov    rdi,rbx
  40fc43:	call   438840 <strcmp@plt+0x35088>
  40fc48:	mov    rdi,r14
  40fc4b:	call   422770 <strcmp@plt+0x1efb8>
  40fc50:	mov    rbp,0x468e3c
  40fc57:	mov    r13d,eax
  40fc5a:	mov    eax,DWORD PTR [rbp+0x0]
  40fc5d:	test   eax,eax
  40fc5f:	jle    40fc7f <strcmp@plt+0xc4c7>
  40fc61:	mov    rdi,r14
  40fc64:	call   423a90 <strcmp@plt+0x202d8>
  40fc69:	lea    rsi,[rip+0x3a4c8]        # 44a138 <strcmp@plt+0x46980>
  40fc70:	mov    rdx,rax
  40fc73:	mov    edi,0x5
  40fc78:	xor    eax,eax
  40fc7a:	call   4306a0 <strcmp@plt+0x2cee8>
  40fc7f:	mov    QWORD PTR [rsp+0x8],r12
  40fc84:	mov    r12,rbx
  40fc87:	jmp    40f7bb <strcmp@plt+0xc003>
  40fc8c:	nop    DWORD PTR [rax+0x0]
  40fc90:	sub    DWORD PTR [r14+0x14],0x4
  40fc95:	jmp    40f912 <strcmp@plt+0xc15a>
  40fc9a:	nop    WORD PTR [rax+rax*1+0x0]
  40fca0:	cmp    BYTE PTR [r14+0x3],0x1
  40fca5:	jbe    40ff90 <strcmp@plt+0xc7d8>
  40fcab:	mov    rbp,0x468e3c
  40fcb2:	mov    eax,DWORD PTR [rbp+0x0]
  40fcb5:	test   eax,eax
  40fcb7:	jle    40faa0 <strcmp@plt+0xc2e8>
  40fcbd:	lea    rsi,[rip+0x384ec]        # 4481b0 <strcmp@plt+0x449f8>
  40fcc4:	mov    edi,0x5
  40fcc9:	xor    eax,eax
  40fccb:	call   4306a0 <strcmp@plt+0x2cee8>
  40fcd0:	jmp    40faa0 <strcmp@plt+0xc2e8>
  40fcd5:	nop    DWORD PTR [rax]
  40fcd8:	lea    rsi,[rip+0x3a477]        # 44a156 <strcmp@plt+0x4699e>
  40fcdf:	mov    edi,0x5
  40fce4:	xor    eax,eax
  40fce6:	call   4306a0 <strcmp@plt+0x2cee8>
  40fceb:	jmp    40f8f9 <strcmp@plt+0xc141>
  40fcf0:	mov    rbx,0x468e3c
  40fcf7:	mov    eax,DWORD PTR [rbx]
  40fcf9:	test   eax,eax
  40fcfb:	jle    40f7f0 <strcmp@plt+0xc038>
  40fd01:	mov    rdi,QWORD PTR [r12+0x4]
  40fd06:	call   4348f0 <strcmp@plt+0x31138>
  40fd0b:	lea    rsi,[rip+0x399a6]        # 4496b8 <strcmp@plt+0x45f00>
  40fd12:	mov    rdx,rax
  40fd15:	mov    edi,0x5
  40fd1a:	xor    eax,eax
  40fd1c:	call   4306a0 <strcmp@plt+0x2cee8>
  40fd21:	mov    eax,DWORD PTR [rbx]
  40fd23:	jmp    40f7f0 <strcmp@plt+0xc038>
  40fd28:	nop    DWORD PTR [rax+rax*1+0x0]
  40fd30:	mov    rsi,QWORD PTR [rax+0x4]
  40fd34:	mov    rax,0x474860
  40fd3b:	mov    rdi,QWORD PTR [rax]
  40fd3e:	mov    QWORD PTR [rsp+0x18],rax
  40fd43:	call   435210 <strcmp@plt+0x31a58>
  40fd48:	test   rax,rax
  40fd4b:	mov    r13,rax
  40fd4e:	je     410160 <strcmp@plt+0xc9a8>
  40fd54:	mov    rdi,rax
  40fd57:	xor    ebp,ebp
  40fd59:	call   435480 <strcmp@plt+0x31cc8>
  40fd5e:	mov    rdi,rax
  40fd61:	call   43ac30 <strcmp@plt+0x37478>
  40fd66:	mov    QWORD PTR [rsp+0x8],rax
  40fd6b:	mov    rax,QWORD PTR [rax]
  40fd6e:	mov    rdi,rbx
  40fd71:	mov    QWORD PTR [rsp],rax
  40fd75:	call   424150 <strcmp@plt+0x20998>
  40fd7a:	mov    QWORD PTR [rsp+0x10],rax
  40fd7f:	mov    eax,DWORD PTR [rsp+0x74]
  40fd83:	cmp    eax,0x5
  40fd86:	jbe    40fda3 <strcmp@plt+0xc5eb>
  40fd88:	mov    rbp,QWORD PTR [rsp+0x98]
  40fd90:	sub    eax,0x6
  40fd93:	mov    DWORD PTR [rsp+0x74],eax
  40fd97:	lea    rdx,[rbp+0x6]
  40fd9b:	mov    QWORD PTR [rsp+0x98],rdx
  40fda3:	xor    eax,eax
  40fda5:	call   424740 <strcmp@plt+0x20f88>
  40fdaa:	mov    rdi,QWORD PTR [rsp+0x98]
  40fdb2:	mov    rsi,rax
  40fdb5:	mov    r12,rax
  40fdb8:	call   424d30 <strcmp@plt+0x21578>
  40fdbd:	test   eax,eax
  40fdbf:	jle    40f7d8 <strcmp@plt+0xc020>
  40fdc5:	mov    edx,DWORD PTR [rsp+0x74]
  40fdc9:	cmp    eax,edx
  40fdcb:	ja     40fddd <strcmp@plt+0xc625>
  40fdcd:	mov    ecx,eax
  40fdcf:	add    QWORD PTR [rsp+0x98],rcx
  40fdd7:	sub    edx,eax
  40fdd9:	mov    DWORD PTR [rsp+0x74],edx
  40fddd:	movzx  esi,BYTE PTR [rbp+0x5]
  40fde1:	mov    rdi,r12
  40fde4:	call   425300 <strcmp@plt+0x21b48>
  40fde9:	mov    rdi,QWORD PTR [rsp]
  40fded:	call   4342b0 <strcmp@plt+0x30af8>
  40fdf2:	mov    rdi,r12
  40fdf5:	mov    rsi,rax
  40fdf8:	mov    QWORD PTR [rsp+0x20],rax
  40fdfd:	call   424df0 <strcmp@plt+0x21638>
  40fe02:	test   eax,eax
  40fe04:	je     410198 <strcmp@plt+0xc9e0>
  40fe0a:	mov    rbp,0x468e3c
  40fe11:	cmp    DWORD PTR [rbp+0x0],0x1
  40fe15:	jle    40fe45 <strcmp@plt+0xc68d>
  40fe17:	mov    rdi,r12
  40fe1a:	call   424890 <strcmp@plt+0x210d8>
  40fe1f:	mov    rdi,QWORD PTR [rsp+0x20]
  40fe24:	mov    rbx,rax
  40fe27:	call   424890 <strcmp@plt+0x210d8>
  40fe2c:	lea    rsi,[rip+0x399ed]        # 449820 <strcmp@plt+0x46068>
  40fe33:	mov    rdx,rax
  40fe36:	mov    rcx,rbx
  40fe39:	mov    edi,0x6
  40fe3e:	xor    eax,eax
  40fe40:	call   4306a0 <strcmp@plt+0x2cee8>
  40fe45:	mov    rdi,r12
  40fe48:	call   424750 <strcmp@plt+0x20f98>
  40fe4d:	mov    eax,DWORD PTR [rbp+0x0]
  40fe50:	jmp    40f7f0 <strcmp@plt+0xc038>
  40fe55:	nop    DWORD PTR [rax]
  40fe58:	mov    rdi,QWORD PTR [rsp+0x10]
  40fe5d:	call   43ac30 <strcmp@plt+0x37478>
  40fe62:	mov    rbp,0x468e3c
  40fe69:	mov    rbx,QWORD PTR [rax+0x8]
  40fe6d:	jmp    40f912 <strcmp@plt+0xc15a>
  40fe72:	nop    WORD PTR [rax+rax*1+0x0]
  40fe78:	xor    r13d,r13d
  40fe7b:	cmp    BYTE PTR [r12+0x3],0x0
  40fe81:	lea    r14,[rsp+0x58]
  40fe86:	je     410148 <strcmp@plt+0xc990>
  40fe8c:	mov    QWORD PTR [rsp+0x20],r14
  40fe91:	mov    r14,r12
  40fe94:	jmp    40fedb <strcmp@plt+0xc723>
  40fe96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fea0:	mov    rdi,r12
  40fea3:	call   42a650 <strcmp@plt+0x26e98>
  40fea8:	mov    rax,QWORD PTR [rsp+0x18]
  40fead:	mov    rsi,QWORD PTR [rsp+0x8]
  40feb2:	mov    rdi,QWORD PTR [rax]
  40feb5:	call   4352c0 <strcmp@plt+0x31b08>
  40feba:	mov    rdi,QWORD PTR [rsp+0x10]
  40febf:	mov    esi,0x3c
  40fec4:	call   43ac60 <strcmp@plt+0x374a8>
  40fec9:	movzx  eax,BYTE PTR [r14+0x3]
  40fece:	add    r13d,0x1
  40fed2:	cmp    r13d,eax
  40fed5:	jge    410148 <strcmp@plt+0xc990>
  40fedb:	xor    eax,eax
  40fedd:	call   42a550 <strcmp@plt+0x26d98>
  40fee2:	mov    rdx,QWORD PTR [rsp+0x20]
  40fee7:	mov    rdi,QWORD PTR [rsp]
  40feeb:	mov    rsi,rax
  40feee:	mov    r12,rax
  40fef1:	call   422d90 <strcmp@plt+0x1f5d8>
  40fef6:	cmp    eax,0x1
  40fef9:	mov    ebx,eax
  40fefb:	jne    410150 <strcmp@plt+0xc998>
  40ff01:	mov    rdi,QWORD PTR [r15+0x70]
  40ff05:	mov    rsi,r12
  40ff08:	call   408960 <strcmp@plt+0x51a8>
  40ff0d:	test   rax,rax
  40ff10:	je     40ff60 <strcmp@plt+0xc7a8>
  40ff12:	mov    ecx,DWORD PTR [rbp+0x0]
  40ff15:	test   ecx,ecx
  40ff17:	jle    40fea0 <strcmp@plt+0xc6e8>
  40ff19:	mov    rdi,r12
  40ff1c:	call   424890 <strcmp@plt+0x210d8>
  40ff21:	lea    rsi,[rip+0x39810]        # 449738 <strcmp@plt+0x45f80>
  40ff28:	mov    rdx,rax
  40ff2b:	mov    edi,0x5
  40ff30:	xor    eax,eax
  40ff32:	call   4306a0 <strcmp@plt+0x2cee8>
  40ff37:	mov    eax,DWORD PTR [rbp+0x0]
  40ff3a:	test   eax,eax
  40ff3c:	jle    40fea0 <strcmp@plt+0xc6e8>
  40ff42:	lea    rsi,[rip+0x39827]        # 449770 <strcmp@plt+0x45fb8>
  40ff49:	mov    edx,0x3c
  40ff4e:	mov    edi,0x5
  40ff53:	xor    eax,eax
  40ff55:	call   4306a0 <strcmp@plt+0x2cee8>
  40ff5a:	jmp    40fea0 <strcmp@plt+0xc6e8>
  40ff5f:	nop
  40ff60:	mov    esi,DWORD PTR [rbp+0x0]
  40ff63:	test   esi,esi
  40ff65:	jle    40fec9 <strcmp@plt+0xc711>
  40ff6b:	mov    rdi,r12
  40ff6e:	call   424890 <strcmp@plt+0x210d8>
  40ff73:	lea    rsi,[rip+0x3977e]        # 4496f8 <strcmp@plt+0x45f40>
  40ff7a:	mov    rdx,rax
  40ff7d:	mov    edi,0x5
  40ff82:	xor    eax,eax
  40ff84:	call   4306a0 <strcmp@plt+0x2cee8>
  40ff89:	jmp    40fec9 <strcmp@plt+0xc711>
  40ff8e:	xchg   ax,ax
  40ff90:	mov    rdi,0x424750
  40ff97:	call   42d4f0 <strcmp@plt+0x29d38>
  40ff9c:	mov    rdi,QWORD PTR [rsp]
  40ffa0:	mov    rsi,rax
  40ffa3:	mov    QWORD PTR [rsp+0x30],rax
  40ffa8:	call   422a60 <strcmp@plt+0x1f2a8>
  40ffad:	xor    eax,eax
  40ffaf:	mov    edi,0x2
  40ffb4:	call   423800 <strcmp@plt+0x20048>
  40ffb9:	cmp    BYTE PTR [r14+0x3],0x0
  40ffbe:	mov    QWORD PTR [rsp+0x10],rax
  40ffc3:	je     410214 <strcmp@plt+0xca5c>
  40ffc9:	lea    rax,[r15+0x18]
  40ffcd:	xor    ecx,ecx
  40ffcf:	mov    DWORD PTR [rsp+0x38],ebx
  40ffd3:	mov    QWORD PTR [rsp+0x18],r12
  40ffd8:	mov    rbp,0x468e3c
  40ffdf:	mov    ebx,ecx
  40ffe1:	mov    QWORD PTR [rsp+0x28],rax
  40ffe6:	mov    r12,QWORD PTR [rsp+0x20]
  40ffeb:	jmp    410000 <strcmp@plt+0xc848>
  40ffed:	nop    DWORD PTR [rax]
  40fff0:	movzx  eax,BYTE PTR [r14+0x3]
  40fff5:	add    ebx,0x1
  40fff8:	cmp    ebx,eax
  40fffa:	jge    41020b <strcmp@plt+0xca53>
  410000:	mov    rdi,QWORD PTR [rsp]
  410004:	mov    rsi,r13
  410007:	call   422a10 <strcmp@plt+0x1f258>
  41000c:	cmp    eax,0x1
  41000f:	jne    410120 <strcmp@plt+0xc968>
  410015:	mov    eax,DWORD PTR [rbp+0x0]
  410018:	test   eax,eax
  41001a:	jle    41003a <strcmp@plt+0xc882>
  41001c:	mov    rdi,r13
  41001f:	call   424890 <strcmp@plt+0x210d8>
  410024:	lea    rsi,[rip+0x37d37]        # 447d62 <strcmp@plt+0x445aa>
  41002b:	mov    rdx,rax
  41002e:	mov    edi,0x5
  410033:	xor    eax,eax
  410035:	call   4306a0 <strcmp@plt+0x2cee8>
  41003a:	mov    rdi,QWORD PTR [r15+0x70]
  41003e:	mov    edx,0x1
  410043:	mov    rsi,r13
  410046:	call   4087d0 <strcmp@plt+0x5018>
  41004b:	test   rax,rax
  41004e:	je     4100f5 <strcmp@plt+0xc93d>
  410054:	mov    rdi,rax
  410057:	call   434230 <strcmp@plt+0x30a78>
  41005c:	test   BYTE PTR [r14],0x2
  410060:	mov    edx,0x0
  410065:	mov    rdi,QWORD PTR [rsp+0x10]
  41006a:	cmovne rdx,QWORD PTR [rsp+0x18]
  410070:	mov    rsi,rax
  410073:	call   423280 <strcmp@plt+0x1fac8>
  410078:	mov    r10d,DWORD PTR [r12+0x18]
  41007d:	test   r10d,r10d
  410080:	je     40fff0 <strcmp@plt+0xc838>
  410086:	test   BYTE PTR [r14],0x1
  41008a:	je     40fff0 <strcmp@plt+0xc838>
  410090:	mov    rdi,r13
  410093:	call   425110 <strcmp@plt+0x21958>
  410098:	mov    esi,0x1
  41009d:	mov    rdi,rax
  4100a0:	call   424910 <strcmp@plt+0x21158>
  4100a5:	mov    rdi,QWORD PTR [rsp+0x28]
  4100aa:	mov    rdx,r12
  4100ad:	mov    rsi,r13
  4100b0:	call   40d130 <strcmp@plt+0x9978>
  4100b5:	cmp    eax,0x1
  4100b8:	jne    410120 <strcmp@plt+0xc968>
  4100ba:	test   BYTE PTR [r14],0x2
  4100be:	jne    40fff0 <strcmp@plt+0xc838>
  4100c4:	mov    rdi,QWORD PTR [rsp+0x30]
  4100c9:	mov    ebx,DWORD PTR [rsp+0x38]
  4100cd:	call   42dac0 <strcmp@plt+0x2a308>
  4100d2:	cmp    QWORD PTR [rsp+0x10],0x0
  4100d8:	jne    410304 <strcmp@plt+0xcb4c>
  4100de:	mov    rdi,QWORD PTR [rsp+0x20]
  4100e3:	call   424750 <strcmp@plt+0x20f98>
  4100e8:	mov    rdi,r13
  4100eb:	call   424750 <strcmp@plt+0x20f98>
  4100f0:	jmp    40fabb <strcmp@plt+0xc303>
  4100f5:	mov    r11d,DWORD PTR [rbp+0x0]
  4100f9:	test   r11d,r11d
  4100fc:	jle    410120 <strcmp@plt+0xc968>
  4100fe:	mov    rdi,r13
  410101:	call   424890 <strcmp@plt+0x210d8>
  410106:	lea    rsi,[rip+0x3955b]        # 449668 <strcmp@plt+0x45eb0>
  41010d:	mov    rdx,rax
  410110:	mov    edi,0x5
  410115:	xor    eax,eax
  410117:	call   4306a0 <strcmp@plt+0x2cee8>
  41011c:	nop    DWORD PTR [rax+0x0]
  410120:	mov    rdi,QWORD PTR [rsp+0x30]
  410125:	call   42dac0 <strcmp@plt+0x2a308>
  41012a:	cmp    QWORD PTR [rsp+0x10],0x0
  410130:	je     40faa7 <strcmp@plt+0xc2ef>
  410136:	mov    rdi,QWORD PTR [rsp+0x10]
  41013b:	call   4300b0 <strcmp@plt+0x2c8f8>
  410140:	jmp    40faa7 <strcmp@plt+0xc2ef>
  410145:	nop    DWORD PTR [rax]
  410148:	mov    eax,DWORD PTR [rbp+0x0]
  41014b:	jmp    40fac7 <strcmp@plt+0xc30f>
  410150:	mov    rdi,r12
  410153:	call   42a650 <strcmp@plt+0x26e98>
  410158:	mov    eax,DWORD PTR [rbp+0x0]
  41015b:	jmp    40f7f0 <strcmp@plt+0xc038>
  410160:	mov    rbx,0x468e3c
  410167:	mov    eax,DWORD PTR [rbx]
  410169:	cmp    eax,0x1
  41016c:	jle    40f7f0 <strcmp@plt+0xc038>
  410172:	mov    rdi,QWORD PTR [rbp+0x4]
  410176:	call   4348f0 <strcmp@plt+0x31138>
  41017b:	lea    rsi,[rip+0x39656]        # 4497d8 <strcmp@plt+0x46020>
  410182:	mov    rdx,rax
  410185:	mov    edi,0x6
  41018a:	xor    eax,eax
  41018c:	call   4306a0 <strcmp@plt+0x2cee8>
  410191:	mov    eax,DWORD PTR [rbx]
  410193:	jmp    40f7f0 <strcmp@plt+0xc038>
  410198:	mov    rdi,r12
  41019b:	call   424750 <strcmp@plt+0x20f98>
  4101a0:	mov    rax,QWORD PTR [rsp+0x8]
  4101a5:	mov    rsi,QWORD PTR [rsp+0x10]
  4101aa:	mov    rdi,r14
  4101ad:	mov    rax,QWORD PTR [rax+0x10]
  4101b1:	mov    rdx,QWORD PTR [rax+0x10]
  4101b5:	call   423ef0 <strcmp@plt+0x20738>
  4101ba:	cmp    eax,0x1
  4101bd:	je     410313 <strcmp@plt+0xcb5b>
  4101c3:	mov    rbx,0x468e3c
  4101ca:	mov    eax,DWORD PTR [rbx]
  4101cc:	test   eax,eax
  4101ce:	jle    40f7f0 <strcmp@plt+0xc038>
  4101d4:	mov    rax,QWORD PTR [rsp+0x8]
  4101d9:	mov    rdi,QWORD PTR [rsp+0x20]
  4101de:	mov    rax,QWORD PTR [rax+0x10]
  4101e2:	mov    rbp,QWORD PTR [rax+0x10]
  4101e6:	call   424890 <strcmp@plt+0x210d8>
  4101eb:	lea    rsi,[rip+0x3966e]        # 449860 <strcmp@plt+0x460a8>
  4101f2:	mov    rdx,rax
  4101f5:	mov    edi,0x5
  4101fa:	xor    eax,eax
  4101fc:	mov    rcx,rbp
  4101ff:	call   4306a0 <strcmp@plt+0x2cee8>
  410204:	mov    eax,DWORD PTR [rbx]
  410206:	jmp    40f7f0 <strcmp@plt+0xc038>
  41020b:	mov    ebx,DWORD PTR [rsp+0x38]
  41020f:	mov    r12,QWORD PTR [rsp+0x18]
  410214:	mov    rax,QWORD PTR [rsp+0x10]
  410219:	movzx  eax,WORD PTR [rax+0x24]
  41021d:	cmp    ax,0xffff
  410221:	je     4102ad <strcmp@plt+0xcaf5>
  410227:	mov    rcx,QWORD PTR [rsp+0x10]
  41022c:	mov    rsi,QWORD PTR [rsp+0x30]
  410231:	mov    rdi,r15
  410234:	add    rax,QWORD PTR [rcx+0x30]
  410238:	movzx  ecx,BYTE PTR [r14]
  41023c:	lea    edx,[rcx*4+0x0]
  410243:	mov    ecx,edx
  410245:	movzx  edx,BYTE PTR [rax]
  410248:	and    ecx,0x8
  41024b:	and    edx,0xfffffff7
  41024e:	or     edx,ecx
  410250:	mov    rcx,QWORD PTR [rsp+0x8]
  410255:	mov    BYTE PTR [rax],dl
  410257:	mov    rdx,QWORD PTR [r14+0x4]
  41025b:	lea    r14,[rsp+0xf0]
  410263:	mov    r8,r14
  410266:	mov    QWORD PTR [rax+0x4],rdx
  41026a:	mov    rdx,r12
  41026d:	call   4085b0 <strcmp@plt+0x4df8>
  410272:	cmp    eax,0x1
  410275:	mov    rbp,0x468e3c
  41027c:	je     4102c1 <strcmp@plt+0xcb09>
  41027e:	mov    r9d,DWORD PTR [rbp+0x0]
  410282:	test   r9d,r9d
  410285:	jle    410120 <strcmp@plt+0xc968>
  41028b:	lea    rsi,[rip+0x393f6]        # 449688 <strcmp@plt+0x45ed0>
  410292:	mov    edi,0x5
  410297:	xor    eax,eax
  410299:	call   4306a0 <strcmp@plt+0x2cee8>
  41029e:	mov    rdi,QWORD PTR [rsp+0x30]
  4102a3:	call   42dac0 <strcmp@plt+0x2a308>
  4102a8:	jmp    410136 <strcmp@plt+0xc97e>
  4102ad:	movzx  eax,BYTE PTR ds:0x0
  4102b5:	and    eax,0xfffffff7
  4102b8:	mov    BYTE PTR ds:0x0,al
  4102bf:	ud2    
  4102c1:	mov    r8d,DWORD PTR [rbp+0x0]
  4102c5:	test   r8d,r8d
  4102c8:	jle    4102ea <strcmp@plt+0xcb32>
  4102ca:	mov    rdi,QWORD PTR [rsp+0x10]
  4102cf:	call   423a90 <strcmp@plt+0x202d8>
  4102d4:	lea    rsi,[rip+0x37a94]        # 447d6f <strcmp@plt+0x445b7>
  4102db:	mov    rdx,rax
  4102de:	mov    edi,0x5
  4102e3:	xor    eax,eax
  4102e5:	call   4306a0 <strcmp@plt+0x2cee8>
  4102ea:	mov    rsi,QWORD PTR [rsp+0x10]
  4102ef:	mov    rdi,r15
  4102f2:	mov    rdx,r14
  4102f5:	call   4083b0 <strcmp@plt+0x4bf8>
  4102fa:	mov    rdi,QWORD PTR [rsp+0x30]
  4102ff:	call   42dac0 <strcmp@plt+0x2a308>
  410304:	mov    rdi,QWORD PTR [rsp+0x10]
  410309:	call   4300b0 <strcmp@plt+0x2c8f8>
  41030e:	jmp    4100de <strcmp@plt+0xc926>
  410313:	xor    eax,eax
  410315:	call   424740 <strcmp@plt+0x20f88>
  41031a:	mov    rdi,QWORD PTR [rsp+0x98]
  410322:	mov    rsi,rax
  410325:	mov    QWORD PTR [rsp+0x10],rax
  41032a:	call   424d30 <strcmp@plt+0x21578>
  41032f:	test   eax,eax
  410331:	mov    rdi,QWORD PTR [rsp+0x10]
  410336:	jle    4103d2 <strcmp@plt+0xcc1a>
  41033c:	call   4283c0 <strcmp@plt+0x24c08>
  410341:	mov    rdi,rax
  410344:	call   4294c0 <strcmp@plt+0x25d08>
  410349:	mov    rdi,0x424750
  410350:	mov    rbx,rax
  410353:	call   42d4f0 <strcmp@plt+0x29d38>
  410358:	mov    esi,0x1
  41035d:	mov    rdi,rbx
  410360:	mov    r12,rax
  410363:	call   43b4b0 <strcmp@plt+0x37cf8>
  410368:	cmp    DWORD PTR [rbx+0x18],0x0
  41036c:	je     41038b <strcmp@plt+0xcbd3>
  41036e:	mov    rax,QWORD PTR [rbx+0x8]
  410372:	mov    rdi,QWORD PTR [rax+0x10]
  410376:	test   rdi,rdi
  410379:	je     41038b <strcmp@plt+0xcbd3>
  41037b:	call   424b80 <strcmp@plt+0x213c8>
  410380:	mov    rsi,r12
  410383:	mov    rdi,rax
  410386:	call   42d540 <strcmp@plt+0x29d88>
  41038b:	cmp    DWORD PTR [r12+0x18],0x0
  410391:	jne    410403 <strcmp@plt+0xcc4b>
  410393:	mov    rbp,0x468e3c
  41039a:	cmp    DWORD PTR [rbp+0x0],0x0
  41039e:	jle    4103b3 <strcmp@plt+0xcbfb>
  4103a0:	lea    rsi,[rip+0x39549]        # 4498f0 <strcmp@plt+0x46138>
  4103a7:	mov    edi,0x5
  4103ac:	xor    eax,eax
  4103ae:	call   4306a0 <strcmp@plt+0x2cee8>
  4103b3:	mov    rdi,r12
  4103b6:	call   42dac0 <strcmp@plt+0x2a308>
  4103bb:	mov    rdi,QWORD PTR [rsp+0x10]
  4103c0:	call   424750 <strcmp@plt+0x20f98>
  4103c5:	mov    eax,DWORD PTR [rbp+0x0]
  4103c8:	jmp    40f7f0 <strcmp@plt+0xc038>
  4103cd:	call   403460 <__stack_chk_fail@plt>
  4103d2:	call   424750 <strcmp@plt+0x20f98>
  4103d7:	mov    rbx,0x468e3c
  4103de:	mov    eax,DWORD PTR [rbx]
  4103e0:	cmp    eax,0x1
  4103e3:	jle    40f7f0 <strcmp@plt+0xc038>
  4103e9:	lea    rsi,[rip+0x394c8]        # 4498b8 <strcmp@plt+0x46100>
  4103f0:	xor    eax,eax
  4103f2:	mov    edi,0x6
  4103f7:	call   4306a0 <strcmp@plt+0x2cee8>
  4103fc:	mov    eax,DWORD PTR [rbx]
  4103fe:	jmp    40f7f0 <strcmp@plt+0xc038>
  410403:	mov    rdi,QWORD PTR [rsp]
  410407:	call   434230 <strcmp@plt+0x30a78>
  41040c:	mov    r14,QWORD PTR [r12+0x8]
  410411:	mov    rbx,rax
  410414:	cmp    r14,r12
  410417:	jne    41042d <strcmp@plt+0xcc75>
  410419:	jmp    410586 <strcmp@plt+0xcdce>
  41041e:	xchg   ax,ax
  410420:	mov    r14,QWORD PTR [r14+0x8]
  410424:	cmp    r14,r12
  410427:	je     410586 <strcmp@plt+0xcdce>
  41042d:	mov    rsi,QWORD PTR [r14+0x10]
  410431:	mov    rdi,rbx
  410434:	call   42ac90 <strcmp@plt+0x274d8>
  410439:	test   rax,rax
  41043c:	jne    410420 <strcmp@plt+0xcc68>
  41043e:	mov    BYTE PTR [rsp+0x20],0x1
  410443:	mov    rax,QWORD PTR [rsp+0x8]
  410448:	mov    rbx,QWORD PTR [rsp]
  41044c:	mov    rdx,r12
  41044f:	mov    rsi,QWORD PTR [rax+0x8]
  410453:	mov    rdi,rbx
  410456:	call   4344d0 <strcmp@plt+0x30d18>
  41045b:	mov    rax,QWORD PTR [r15+0x38]
  41045f:	mov    rsi,rbx
  410462:	mov    rdi,QWORD PTR [r15+0x40]
  410466:	call   QWORD PTR [rax+0x30]
  410469:	mov    rdi,rbx
  41046c:	call   4342b0 <strcmp@plt+0x30af8>
  410471:	mov    edx,0x1
  410476:	mov    rsi,rax
  410479:	mov    rdi,r15
  41047c:	call   4083c0 <strcmp@plt+0x4c08>
  410481:	mov    esi,0x2
  410486:	mov    rdi,r15
  410489:	call   40d310 <strcmp@plt+0x9b58>
  41048e:	mov    esi,0xa
  410493:	mov    rdi,r15
  410496:	call   40d310 <strcmp@plt+0x9b58>
  41049b:	mov    rax,QWORD PTR [r15+0x78]
  41049f:	cmp    DWORD PTR [rax+0x18],0x0
  4104a3:	jne    410590 <strcmp@plt+0xcdd8>
  4104a9:	mov    rax,QWORD PTR [rsp+0x18]
  4104ae:	mov    rsi,r13
  4104b1:	mov    rdi,QWORD PTR [rax]
  4104b4:	call   4352c0 <strcmp@plt+0x31b08>
  4104b9:	movbe  ebx,DWORD PTR [rbp+0x0]
  4104be:	mov    rdi,QWORD PTR [r13+0x8]
  4104c2:	imul   esi,ebx,0x3c
  4104c5:	call   43ac60 <strcmp@plt+0x374a8>
  4104ca:	mov    rbp,0x468e3c
  4104d1:	cmp    DWORD PTR [rbp+0x0],0x0
  4104d5:	jg     41050a <strcmp@plt+0xcd52>
  4104d7:	cmp    BYTE PTR [rsp+0x20],0x0
  4104dc:	je     4104eb <strcmp@plt+0xcd33>
  4104de:	mov    esi,0x1
  4104e3:	mov    rdi,r15
  4104e6:	call   40d690 <strcmp@plt+0x9ed8>
  4104eb:	mov    rdi,QWORD PTR [rsp+0x10]
  4104f0:	mov    ebx,0x1
  4104f5:	call   424750 <strcmp@plt+0x20f98>
  4104fa:	mov    rdi,r12
  4104fd:	call   42dac0 <strcmp@plt+0x2a308>
  410502:	mov    eax,DWORD PTR [rbp+0x0]
  410505:	jmp    40fac7 <strcmp@plt+0xc30f>
  41050a:	mov    r14,QWORD PTR [rsp+0x8]
  41050f:	mov    rax,QWORD PTR [r14+0x8]
  410513:	mov    rdi,QWORD PTR [rax]
  410516:	call   424890 <strcmp@plt+0x210d8>
  41051b:	mov    r13,rax
  41051e:	mov    rax,QWORD PTR [r14+0x10]
  410522:	mov    rdi,QWORD PTR [rax]
  410525:	call   424890 <strcmp@plt+0x210d8>
  41052a:	mov    rdi,QWORD PTR [rsp]
  41052e:	mov    r14,rax
  410531:	call   4342b0 <strcmp@plt+0x30af8>
  410536:	mov    rdi,rax
  410539:	call   424890 <strcmp@plt+0x210d8>
  41053e:	lea    rsi,[rip+0x393e3]        # 449928 <strcmp@plt+0x46170>
  410545:	mov    rdx,rax
  410548:	mov    r9d,ebx
  41054b:	xor    eax,eax
  41054d:	mov    r8,r13
  410550:	mov    rcx,r14
  410553:	mov    edi,0x5
  410558:	call   4306a0 <strcmp@plt+0x2cee8>
  41055d:	cmp    BYTE PTR [rsp+0x20],0x0
  410562:	je     4104eb <strcmp@plt+0xcd33>
  410564:	cmp    DWORD PTR [rbp+0x0],0x0
  410568:	jle    4104de <strcmp@plt+0xcd26>
  41056e:	lea    rsi,[rip+0x393fb]        # 449970 <strcmp@plt+0x461b8>
  410575:	mov    edi,0x5
  41057a:	xor    eax,eax
  41057c:	call   4306a0 <strcmp@plt+0x2cee8>
  410581:	jmp    4104de <strcmp@plt+0xcd26>
  410586:	mov    BYTE PTR [rsp+0x20],0x0
  41058b:	jmp    410443 <strcmp@plt+0xcc8b>
  410590:	mov    rax,QWORD PTR [rsp+0x8]
  410595:	mov    rsi,QWORD PTR [rsp]
  410599:	mov    edx,0x3
  41059e:	mov    r14,QWORD PTR [rax+0x8]
  4105a2:	mov    rax,0x474858
  4105a9:	mov    rdi,QWORD PTR [rax]
  4105ac:	call   43b020 <strcmp@plt+0x37868>
  4105b1:	mov    QWORD PTR [rsp+0x28],rax
  4105b6:	mov    rbx,QWORD PTR [rax+0x8]
  4105ba:	jmp    4105e0 <strcmp@plt+0xce28>
  4105bc:	mov    rsi,QWORD PTR [rbx+0x10]
  4105c0:	mov    rdi,rsi
  4105c3:	mov    QWORD PTR [rsp+0x30],rsi
  4105c8:	call   43ac30 <strcmp@plt+0x37478>
  4105cd:	cmp    r14,QWORD PTR [rax+0x10]
  4105d1:	mov    rsi,QWORD PTR [rsp+0x30]
  4105d6:	je     4106ea <strcmp@plt+0xcf32>
  4105dc:	mov    rbx,QWORD PTR [rbx+0x8]
  4105e0:	cmp    QWORD PTR [rsp+0x28],rbx
  4105e5:	jne    4105bc <strcmp@plt+0xce04>
  4105e7:	mov    rdi,QWORD PTR [rsp+0x28]
  4105ec:	call   42dac0 <strcmp@plt+0x2a308>
  4105f1:	mov    rsi,QWORD PTR [r14]
  4105f4:	mov    rdi,QWORD PTR [rsp]
  4105f8:	call   434730 <strcmp@plt+0x30f78>
  4105fd:	mov    rbx,QWORD PTR [rax+0x8]
  410601:	mov    r11,r12
  410604:	mov    r10,rax
  410607:	mov    r12,rbp
  41060a:	mov    rbp,rbx
  41060d:	cmp    r10,rbp
  410610:	je     4106df <strcmp@plt+0xcf27>
  410616:	mov    rax,QWORD PTR [rbp+0x10]
  41061a:	mov    QWORD PTR [rsp+0x28],rax
  41061f:	mov    rax,QWORD PTR [r15+0x78]
  410623:	mov    rbx,QWORD PTR [rax+0x8]
  410627:	cmp    rax,rbx
  41062a:	je     4106d6 <strcmp@plt+0xcf1e>
  410630:	mov    QWORD PTR [rsp+0x30],rbp
  410635:	mov    rbp,rbx
  410638:	mov    rdx,QWORD PTR [rbp+0x10]
  41063c:	mov    edi,0x20
  410641:	mov    QWORD PTR [rsp+0x48],r10
  410646:	mov    QWORD PTR [rsp+0x40],r11
  41064b:	mov    QWORD PTR [rsp+0x38],rdx
  410650:	call   4347a0 <strcmp@plt+0x30fe8>
  410655:	mov    rdx,QWORD PTR [rsp+0x38]
  41065a:	mov    rbx,rax
  41065d:	mov    rax,QWORD PTR [rsp]
  410661:	mov    rdi,QWORD PTR [rsp+0x28]
  410666:	mov    QWORD PTR [rbx+0x10],r14
  41066a:	mov    QWORD PTR [rbx+0x8],rdx
  41066e:	mov    QWORD PTR [rbx],rax
  410671:	call   424b80 <strcmp@plt+0x213c8>
  410676:	lea    r8,[rip+0xffffffffffffcc33]        # 40d2b0 <strcmp@plt+0x9af8>
  41067d:	lea    rdx,[rip+0xffffffffffffec6c]        # 40f2f0 <strcmp@plt+0xbb38>
  410684:	mov    rcx,rbx
  410687:	mov    QWORD PTR [rbx+0x18],rax
  41068b:	mov    rsi,r15
  41068e:	mov    edi,0x3
  410693:	call   43af50 <strcmp@plt+0x37798>
  410698:	mov    rdx,rax
  41069b:	mov    rbx,rax
  41069e:	mov    rax,0x474858
  4106a5:	mov    rsi,QWORD PTR [rsp]
  4106a9:	mov    rdi,QWORD PTR [rax]
  4106ac:	call   43afa0 <strcmp@plt+0x377e8>
  4106b1:	mov    rdi,rbx
  4106b4:	call   40f2f0 <strcmp@plt+0xbb38>
  4106b9:	mov    rbp,QWORD PTR [rbp+0x8]
  4106bd:	cmp    rbp,QWORD PTR [r15+0x78]
  4106c1:	mov    r11,QWORD PTR [rsp+0x40]
  4106c6:	mov    r10,QWORD PTR [rsp+0x48]
  4106cb:	jne    410638 <strcmp@plt+0xce80>
  4106d1:	mov    rbp,QWORD PTR [rsp+0x30]
  4106d6:	mov    rbp,QWORD PTR [rbp+0x8]
  4106da:	jmp    41060d <strcmp@plt+0xce55>
  4106df:	mov    rbp,r12
  4106e2:	mov    r12,r11
  4106e5:	jmp    4104a9 <strcmp@plt+0xccf1>
  4106ea:	mov    rax,QWORD PTR [rsp+0x18]
  4106ef:	mov    rdi,QWORD PTR [rsp]
  4106f3:	mov    rcx,QWORD PTR [rax]
  4106f6:	mov    rax,0x474858
  4106fd:	mov    rdx,QWORD PTR [rax]
  410700:	call   43b280 <strcmp@plt+0x37ac8>
  410705:	jmp    4105dc <strcmp@plt+0xce24>
  41070a:	nop    WORD PTR [rax+rax*1+0x0]
  410710:	mov    rax,0x468600
  410717:	cmp    QWORD PTR [rdi+0x8],rax
  41071b:	jne    410728 <strcmp@plt+0xcf70>
  41071d:	mov    rax,rdi
  410720:	ret    
  410721:	nop    DWORD PTR [rax+0x0]
  410728:	lea    rdx,[rip+0x38939]        # 449068 <strcmp@plt+0x458b0>
  41072f:	lea    rsi,[rip+0x39b7a]        # 44a2b0 <strcmp@plt+0x46af8>
  410736:	lea    rdi,[rip+0x39993]        # 44a0d0 <strcmp@plt+0x46918>
  41073d:	sub    rsp,0x8
  410741:	call   434880 <strcmp@plt+0x310c8>
  410746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410750:	push   r15
  410752:	push   r14
  410754:	push   r13
  410756:	push   r12
  410758:	push   rbp
  410759:	push   rbx
  41075a:	sub    rsp,0x868
  410761:	mov    rax,QWORD PTR fs:0x28
  41076a:	mov    QWORD PTR [rsp+0x858],rax
  410772:	xor    eax,eax
  410774:	mov    rax,QWORD PTR [rdi+0x78]
  410778:	mov    eax,DWORD PTR [rax+0x18]
  41077b:	test   eax,eax
  41077d:	jne    4107a8 <strcmp@plt+0xcff0>
  41077f:	mov    rcx,QWORD PTR [rsp+0x858]
  410787:	xor    rcx,QWORD PTR fs:0x28
  410790:	jne    410ad3 <strcmp@plt+0xd31b>
  410796:	add    rsp,0x868
  41079d:	pop    rbx
  41079e:	pop    rbp
  41079f:	pop    r12
  4107a1:	pop    r13
  4107a3:	pop    r14
  4107a5:	pop    r15
  4107a7:	ret    
  4107a8:	mov    r14,rdi
  4107ab:	call   42d4e0 <strcmp@plt+0x29d28>
  4107b0:	mov    rbx,rax
  4107b3:	mov    QWORD PTR [rsp+0x28],rax
  4107b8:	mov    rax,QWORD PTR [r14+0x70]
  4107bc:	mov    rsi,rbx
  4107bf:	mov    rax,QWORD PTR [rax]
  4107c2:	mov    rdi,QWORD PTR [rax]
  4107c5:	call   42d540 <strcmp@plt+0x29d88>
  4107ca:	mov    rax,QWORD PTR [r14+0x70]
  4107ce:	mov    rsi,rbx
  4107d1:	mov    rax,QWORD PTR [rax]
  4107d4:	mov    rdi,QWORD PTR [rax+0x8]
  4107d8:	call   42d540 <strcmp@plt+0x29d88>
  4107dd:	mov    rsi,QWORD PTR [r14+0x70]
  4107e1:	mov    rax,QWORD PTR [rsi]
  4107e4:	mov    rdx,QWORD PTR [rax+0x10]
  4107e8:	mov    rcx,QWORD PTR [rdx]
  4107eb:	mov    edi,DWORD PTR [rcx]
  4107ed:	test   edi,edi
  4107ef:	je     41083e <strcmp@plt+0xd086>
  4107f1:	xor    ebx,ebx
  4107f3:	jmp    410806 <strcmp@plt+0xd04e>
  4107f5:	mov    rax,QWORD PTR [rsi]
  4107f8:	add    ebx,0x1
  4107fb:	mov    rdx,QWORD PTR [rax+0x10]
  4107ff:	mov    rcx,QWORD PTR [rdx]
  410802:	cmp    DWORD PTR [rcx],ebx
  410804:	je     41083e <strcmp@plt+0xd086>
  410806:	mov    r8,QWORD PTR [rcx+0x10]
  41080a:	lea    eax,[rbx+rbx*1]
  41080d:	mov    edi,ebx
  41080f:	shr    edi,0x4
  410812:	and    eax,0x1e
  410815:	mov    edx,eax
  410817:	mov    eax,DWORD PTR [r8+rdi*4]
  41081b:	shrx   eax,eax,edx
  410820:	test   al,0x3
  410822:	jne    4107f5 <strcmp@plt+0xd03d>
  410824:	mov    rdx,QWORD PTR [rcx+0x20]
  410828:	mov    eax,ebx
  41082a:	mov    rsi,QWORD PTR [rsp+0x28]
  41082f:	mov    rdi,QWORD PTR [rdx+rax*8]
  410833:	call   42d540 <strcmp@plt+0x29d88>
  410838:	mov    rsi,QWORD PTR [r14+0x70]
  41083c:	jmp    4107f5 <strcmp@plt+0xd03d>
  41083e:	mov    rdx,QWORD PTR [rax+0x18]
  410842:	mov    rcx,QWORD PTR [rdx]
  410845:	mov    edx,DWORD PTR [rcx]
  410847:	test   edx,edx
  410849:	je     410898 <strcmp@plt+0xd0e0>
  41084b:	xor    ebx,ebx
  41084d:	jmp    410860 <strcmp@plt+0xd0a8>
  41084f:	mov    rax,QWORD PTR [rsi]
  410852:	add    ebx,0x1
  410855:	mov    rdx,QWORD PTR [rax+0x18]
  410859:	mov    rcx,QWORD PTR [rdx]
  41085c:	cmp    DWORD PTR [rcx],ebx
  41085e:	je     410898 <strcmp@plt+0xd0e0>
  410860:	mov    r8,QWORD PTR [rcx+0x10]
  410864:	lea    eax,[rbx+rbx*1]
  410867:	mov    edi,ebx
  410869:	shr    edi,0x4
  41086c:	and    eax,0x1e
  41086f:	mov    edx,eax
  410871:	mov    eax,DWORD PTR [r8+rdi*4]
  410875:	shrx   eax,eax,edx
  41087a:	test   al,0x3
  41087c:	jne    41084f <strcmp@plt+0xd097>
  41087e:	mov    rdx,QWORD PTR [rcx+0x20]
  410882:	mov    eax,ebx
  410884:	mov    rsi,QWORD PTR [rsp+0x28]
  410889:	mov    rdi,QWORD PTR [rdx+rax*8]
  41088d:	call   42d540 <strcmp@plt+0x29d88>
  410892:	mov    rsi,QWORD PTR [r14+0x70]
  410896:	jmp    41084f <strcmp@plt+0xd097>
  410898:	mov    rbx,QWORD PTR [rsp+0x28]
  41089d:	mov    rdi,QWORD PTR [rax+0x20]
  4108a1:	mov    rsi,rbx
  4108a4:	call   42d540 <strcmp@plt+0x29d88>
  4108a9:	mov    rax,QWORD PTR [r14+0x70]
  4108ad:	mov    rsi,rbx
  4108b0:	mov    rax,QWORD PTR [rax]
  4108b3:	mov    rdi,QWORD PTR [rax+0x20]
  4108b7:	call   42d540 <strcmp@plt+0x29d88>
  4108bc:	mov    rcx,QWORD PTR [rbx+0x8]
  4108c0:	cmp    rbx,rcx
  4108c3:	mov    QWORD PTR [rsp+0x30],rcx
  4108c8:	je     410abf <strcmp@plt+0xd307>
  4108ce:	lea    rax,[rsp+0x40]
  4108d3:	mov    QWORD PTR [rsp+0x38],rax
  4108d8:	lea    rax,[rsp+0x450]
  4108e0:	mov    QWORD PTR [rsp+0x20],rax
  4108e5:	mov    rax,QWORD PTR [rsp+0x30]
  4108ea:	mov    rax,QWORD PTR [rax+0x10]
  4108ee:	mov    rax,QWORD PTR [rax]
  4108f1:	test   rax,rax
  4108f4:	mov    QWORD PTR [rsp+0x10],rax
  4108f9:	je     410aa6 <strcmp@plt+0xd2ee>
  4108ff:	mov    rax,QWORD PTR [rsp+0x38]
  410904:	mov    QWORD PTR [rsp+0x18],rax
  410909:	nop    DWORD PTR [rax+0x0]
  410910:	mov    rax,QWORD PTR [rsp+0x10]
  410915:	cmp    QWORD PTR [rax+0x8],0x0
  41091a:	je     410a42 <strcmp@plt+0xd28a>
  410920:	mov    rax,QWORD PTR [rax+0x28]
  410924:	mov    r12,QWORD PTR [rax]
  410927:	test   r12,r12
  41092a:	je     410a42 <strcmp@plt+0xd28a>
  410930:	mov    rax,QWORD PTR [rsp+0x20]
  410935:	mov    QWORD PTR [rsp+0x8],rax
  41093a:	nop    WORD PTR [rax+rax*1+0x0]
  410940:	cmp    QWORD PTR [r12+0x8],0x0
  410946:	je     4109e7 <strcmp@plt+0xd22f>
  41094c:	mov    rbp,QWORD PTR [r12+0x28]
  410951:	test   rbp,rbp
  410954:	je     4109e7 <strcmp@plt+0xd22f>
  41095a:	mov    r13,0x474858
  410961:	mov    rax,0x474860
  410968:	mov    esi,0x2
  41096d:	mov    rdi,rbp
  410970:	mov    rcx,QWORD PTR [rax]
  410973:	mov    rdx,QWORD PTR [r13+0x0]
  410977:	call   43b1d0 <strcmp@plt+0x37a18>
  41097c:	mov    rax,QWORD PTR [r14+0x78]
  410980:	mov    rbx,QWORD PTR [rax+0x8]
  410984:	cmp    rax,rbx
  410987:	je     4109e7 <strcmp@plt+0xd22f>
  410989:	nop    DWORD PTR [rax+0x0]
  410990:	mov    r15,QWORD PTR [rbx+0x10]
  410994:	mov    edi,0x10
  410999:	call   4347a0 <strcmp@plt+0x30fe8>
  41099e:	lea    r8,[rip+0xffffffffffffc92b]        # 40d2d0 <strcmp@plt+0x9b18>
  4109a5:	lea    rdx,[rip+0xffffffffffffe624]        # 40efd0 <strcmp@plt+0xb818>
  4109ac:	mov    rcx,rax
  4109af:	mov    QWORD PTR [rax+0x8],r15
  4109b3:	mov    rsi,r14
  4109b6:	mov    edi,0x2
  4109bb:	mov    QWORD PTR [rax],rbp
  4109be:	call   43af50 <strcmp@plt+0x37798>
  4109c3:	mov    rdi,QWORD PTR [r13+0x0]
  4109c7:	mov    r15,rax
  4109ca:	mov    rdx,rax
  4109cd:	mov    rsi,rbp
  4109d0:	call   43afa0 <strcmp@plt+0x377e8>
  4109d5:	mov    rdi,r15
  4109d8:	call   40efd0 <strcmp@plt+0xb818>
  4109dd:	mov    rbx,QWORD PTR [rbx+0x8]
  4109e1:	cmp    QWORD PTR [r14+0x78],rbx
  4109e5:	jne    410990 <strcmp@plt+0xd1d8>
  4109e7:	mov    rax,QWORD PTR [r12+0x10]
  4109ec:	test   rax,rax
  4109ef:	je     410a18 <strcmp@plt+0xd260>
  4109f1:	mov    rdx,QWORD PTR [r12+0x18]
  4109f6:	test   rdx,rdx
  4109f9:	je     410a78 <strcmp@plt+0xd2c0>
  4109fb:	mov    rcx,QWORD PTR [rsp+0x8]
  410a00:	mov    r12,rax
  410a03:	lea    rax,[rcx+0x8]
  410a07:	mov    QWORD PTR [rcx],rdx
  410a0a:	mov    QWORD PTR [rsp+0x8],rax
  410a0f:	jmp    410940 <strcmp@plt+0xd188>
  410a14:	nop    DWORD PTR [rax+0x0]
  410a18:	mov    r12,QWORD PTR [r12+0x18]
  410a1d:	test   r12,r12
  410a20:	jne    410940 <strcmp@plt+0xd188>
  410a26:	mov    rax,QWORD PTR [rsp+0x8]
  410a2b:	mov    rcx,QWORD PTR [rsp+0x20]
  410a30:	cmp    rax,rcx
  410a33:	je     410a42 <strcmp@plt+0xd28a>
  410a35:	mov    r12,QWORD PTR [rax-0x8]
  410a39:	test   r12,r12
  410a3c:	jne    410ae0 <strcmp@plt+0xd328>
  410a42:	mov    rcx,QWORD PTR [rsp+0x10]
  410a47:	mov    rax,QWORD PTR [rcx+0x10]
  410a4b:	test   rax,rax
  410a4e:	je     410a80 <strcmp@plt+0xd2c8>
  410a50:	mov    rdx,QWORD PTR [rcx+0x18]
  410a54:	test   rdx,rdx
  410a57:	je     410a6a <strcmp@plt+0xd2b2>
  410a59:	mov    rcx,QWORD PTR [rsp+0x18]
  410a5e:	lea    rsi,[rcx+0x8]
  410a62:	mov    QWORD PTR [rcx],rdx
  410a65:	mov    QWORD PTR [rsp+0x18],rsi
  410a6a:	mov    QWORD PTR [rsp+0x10],rax
  410a6f:	jmp    410910 <strcmp@plt+0xd158>
  410a74:	nop    DWORD PTR [rax+0x0]
  410a78:	mov    r12,rax
  410a7b:	jmp    410940 <strcmp@plt+0xd188>
  410a80:	mov    rax,QWORD PTR [rsp+0x10]
  410a85:	mov    rax,QWORD PTR [rax+0x18]
  410a89:	test   rax,rax
  410a8c:	jne    410a6a <strcmp@plt+0xd2b2>
  410a8e:	mov    rax,QWORD PTR [rsp+0x18]
  410a93:	mov    rsi,QWORD PTR [rsp+0x38]
  410a98:	cmp    rax,rsi
  410a9b:	je     410aa6 <strcmp@plt+0xd2ee>
  410a9d:	mov    rax,QWORD PTR [rax-0x8]
  410aa1:	test   rax,rax
  410aa4:	jne    410ad8 <strcmp@plt+0xd320>
  410aa6:	mov    rax,QWORD PTR [rsp+0x30]
  410aab:	mov    rax,QWORD PTR [rax+0x8]
  410aaf:	cmp    QWORD PTR [rsp+0x28],rax
  410ab4:	mov    QWORD PTR [rsp+0x30],rax
  410ab9:	jne    4108e5 <strcmp@plt+0xd12d>
  410abf:	mov    rdi,QWORD PTR [rsp+0x28]
  410ac4:	call   42dac0 <strcmp@plt+0x2a308>
  410ac9:	mov    eax,0x1
  410ace:	jmp    41077f <strcmp@plt+0xcfc7>
  410ad3:	call   403460 <__stack_chk_fail@plt>
  410ad8:	sub    QWORD PTR [rsp+0x18],0x8
  410ade:	jmp    410a6a <strcmp@plt+0xd2b2>
  410ae0:	sub    QWORD PTR [rsp+0x8],0x8
  410ae6:	jmp    410940 <strcmp@plt+0xd188>
  410aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  410af0:	push   r15
  410af2:	push   r14
  410af4:	push   r13
  410af6:	push   r12
  410af8:	push   rbp
  410af9:	push   rbx
  410afa:	sub    rsp,0x438
  410b01:	mov    rax,QWORD PTR fs:0x28
  410b0a:	mov    QWORD PTR [rsp+0x428],rax
  410b12:	xor    eax,eax
  410b14:	test   rsi,rsi
  410b17:	je     410dda <strcmp@plt+0xd622>
  410b1d:	mov    r12,rdi
  410b20:	mov    rdi,rsi
  410b23:	mov    rbx,rsi
  410b26:	call   434230 <strcmp@plt+0x30a78>
  410b2b:	mov    r8d,DWORD PTR [r12+0x80]
  410b33:	mov    r13,rax
  410b36:	test   r8d,r8d
  410b39:	je     410d28 <strcmp@plt+0xd570>
  410b3f:	mov    rax,0x468e3c
  410b46:	mov    edi,DWORD PTR [rax]
  410b48:	test   edi,edi
  410b4a:	jle    410b6a <strcmp@plt+0xd3b2>
  410b4c:	mov    rdi,r13
  410b4f:	call   424890 <strcmp@plt+0x210d8>
  410b54:	lea    rsi,[rip+0x39631]        # 44a18c <strcmp@plt+0x469d4>
  410b5b:	mov    rdx,rax
  410b5e:	mov    edi,0x5
  410b63:	xor    eax,eax
  410b65:	call   4306a0 <strcmp@plt+0x2cee8>
  410b6a:	mov    rax,QWORD PTR [r12+0x30]
  410b6f:	mov    rsi,r13
  410b72:	mov    rdi,QWORD PTR [rax]
  410b75:	call   4311a0 <strcmp@plt+0x2d9e8>
  410b7a:	test   rax,rax
  410b7d:	je     410bfd <strcmp@plt+0xd445>
  410b7f:	mov    r15,QWORD PTR [rax]
  410b82:	test   r15,r15
  410b85:	je     410bfd <strcmp@plt+0xd445>
  410b87:	lea    r14,[rsp+0x20]
  410b8c:	mov    QWORD PTR [rsp+0x18],r14
  410b91:	cmp    QWORD PTR [r15+0x8],0x0
  410b96:	je     410bab <strcmp@plt+0xd3f3>
  410b98:	mov    rax,QWORD PTR [r15+0x28]
  410b9c:	test   rax,rax
  410b9f:	je     410bab <strcmp@plt+0xd3f3>
  410ba1:	cmp    BYTE PTR [rax+0x10],0x0
  410ba5:	jne    410c80 <strcmp@plt+0xd4c8>
  410bab:	mov    rax,QWORD PTR [r15+0x10]
  410baf:	test   rax,rax
  410bb2:	je     410be0 <strcmp@plt+0xd428>
  410bb4:	mov    rdx,QWORD PTR [r15+0x18]
  410bb8:	test   rdx,rdx
  410bbb:	je     410d20 <strcmp@plt+0xd568>
  410bc1:	mov    r15,rax
  410bc4:	mov    QWORD PTR [r14],rdx
  410bc7:	add    r14,0x8
  410bcb:	cmp    QWORD PTR [r15+0x8],0x0
  410bd0:	jne    410b98 <strcmp@plt+0xd3e0>
  410bd2:	mov    rax,QWORD PTR [r15+0x10]
  410bd6:	test   rax,rax
  410bd9:	jne    410bb4 <strcmp@plt+0xd3fc>
  410bdb:	nop    DWORD PTR [rax+rax*1+0x0]
  410be0:	mov    r15,QWORD PTR [r15+0x18]
  410be4:	test   r15,r15
  410be7:	jne    410b91 <strcmp@plt+0xd3d9>
  410be9:	cmp    r14,QWORD PTR [rsp+0x18]
  410bee:	je     410bfd <strcmp@plt+0xd445>
  410bf0:	mov    r15,QWORD PTR [r14-0x8]
  410bf4:	test   r15,r15
  410bf7:	jne    410dcc <strcmp@plt+0xd614>
  410bfd:	mov    rax,0x468e3c
  410c04:	mov    eax,DWORD PTR [rax]
  410c06:	test   eax,eax
  410c08:	jle    410c1d <strcmp@plt+0xd465>
  410c0a:	lea    rsi,[rip+0x39596]        # 44a1a7 <strcmp@plt+0x469ef>
  410c11:	mov    edi,0x5
  410c16:	xor    eax,eax
  410c18:	call   4306a0 <strcmp@plt+0x2cee8>
  410c1d:	mov    rax,QWORD PTR [r12+0x68]
  410c22:	mov    rbx,QWORD PTR [rax+0x8]
  410c26:	cmp    rax,rbx
  410c29:	je     410c4d <strcmp@plt+0xd495>
  410c2b:	nop    DWORD PTR [rax+rax*1+0x0]
  410c30:	mov    rcx,QWORD PTR [rbx+0x10]
  410c34:	mov    rdx,r13
  410c37:	mov    rsi,r13
  410c3a:	mov    rdi,r12
  410c3d:	call   40da30 <strcmp@plt+0xa278>
  410c42:	mov    rbx,QWORD PTR [rbx+0x8]
  410c46:	cmp    QWORD PTR [r12+0x68],rbx
  410c4b:	jne    410c30 <strcmp@plt+0xd478>
  410c4d:	mov    rax,QWORD PTR [rsp+0x428]
  410c55:	xor    rax,QWORD PTR fs:0x28
  410c5e:	jne    410dd5 <strcmp@plt+0xd61d>
  410c64:	add    rsp,0x438
  410c6b:	pop    rbx
  410c6c:	pop    rbp
  410c6d:	pop    r12
  410c6f:	pop    r13
  410c71:	pop    r14
  410c73:	pop    r15
  410c75:	ret    
  410c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410c80:	mov    r10,QWORD PTR [rax+0x8]
  410c84:	mov    rax,QWORD PTR [r10+0x28]
  410c88:	mov    r8,QWORD PTR [rax+0x8]
  410c8c:	cmp    rax,r8
  410c8f:	je     410bab <strcmp@plt+0xd3f3>
  410c95:	nop    DWORD PTR [rax]
  410c98:	mov    rbp,QWORD PTR [r8+0x10]
  410c9c:	mov    ecx,DWORD PTR [rbp+0x18]
  410c9f:	test   ecx,ecx
  410ca1:	je     410d08 <strcmp@plt+0xd550>
  410ca3:	mov    rbx,QWORD PTR [rbp+0x8]
  410ca7:	mov    rax,QWORD PTR [rbx+0x10]
  410cab:	mov    rdx,QWORD PTR [rax]
  410cae:	mov    edx,DWORD PTR [rdx+0x18]
  410cb1:	test   edx,edx
  410cb3:	je     410d08 <strcmp@plt+0xd550>
  410cb5:	cmp    rbp,rbx
  410cb8:	jne    410ccd <strcmp@plt+0xd515>
  410cba:	jmp    410d08 <strcmp@plt+0xd550>
  410cbc:	nop    DWORD PTR [rax+0x0]
  410cc0:	mov    rbx,QWORD PTR [rbx+0x8]
  410cc4:	cmp    rbp,rbx
  410cc7:	je     410d08 <strcmp@plt+0xd550>
  410cc9:	mov    rax,QWORD PTR [rbx+0x10]
  410ccd:	cmp    BYTE PTR [rax+0x8],0x1
  410cd1:	jne    410cc0 <strcmp@plt+0xd508>
  410cd3:	mov    rcx,QWORD PTR [rax]
  410cd6:	mov    rdx,r10
  410cd9:	mov    rsi,r13
  410cdc:	mov    rdi,r12
  410cdf:	mov    QWORD PTR [rsp+0x10],r8
  410ce4:	mov    QWORD PTR [rsp+0x8],r10
  410ce9:	call   40da30 <strcmp@plt+0xa278>
  410cee:	mov    rbx,QWORD PTR [rbx+0x8]
  410cf2:	mov    r8,QWORD PTR [rsp+0x10]
  410cf7:	mov    r10,QWORD PTR [rsp+0x8]
  410cfc:	cmp    rbp,rbx
  410cff:	jne    410cc9 <strcmp@plt+0xd511>
  410d01:	nop    DWORD PTR [rax+0x0]
  410d08:	mov    r8,QWORD PTR [r8+0x8]
  410d0c:	cmp    r8,QWORD PTR [r10+0x28]
  410d10:	jne    410c98 <strcmp@plt+0xd4e0>
  410d12:	jmp    410bab <strcmp@plt+0xd3f3>
  410d17:	nop    WORD PTR [rax+rax*1+0x0]
  410d20:	mov    r15,rax
  410d23:	jmp    410b91 <strcmp@plt+0xd3d9>
  410d28:	mov    rax,QWORD PTR [r12+0x78]
  410d2d:	mov    esi,DWORD PTR [rax+0x18]
  410d30:	test   esi,esi
  410d32:	je     410b3f <strcmp@plt+0xd387>
  410d38:	mov    r14,0x474858
  410d3f:	mov    rax,0x474860
  410d46:	mov    esi,0x2
  410d4b:	mov    rdi,rbx
  410d4e:	mov    rcx,QWORD PTR [rax]
  410d51:	mov    rdx,QWORD PTR [r14]
  410d54:	call   43b1d0 <strcmp@plt+0x37a18>
  410d59:	mov    rax,QWORD PTR [r12+0x78]
  410d5e:	mov    rbp,QWORD PTR [rax+0x8]
  410d62:	cmp    rax,rbp
  410d65:	je     410b3f <strcmp@plt+0xd387>
  410d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  410d70:	mov    r15,QWORD PTR [rbp+0x10]
  410d74:	mov    edi,0x10
  410d79:	call   4347a0 <strcmp@plt+0x30fe8>
  410d7e:	lea    r8,[rip+0xffffffffffffc54b]        # 40d2d0 <strcmp@plt+0x9b18>
  410d85:	lea    rdx,[rip+0xffffffffffffe244]        # 40efd0 <strcmp@plt+0xb818>
  410d8c:	mov    rcx,rax
  410d8f:	mov    QWORD PTR [rax+0x8],r15
  410d93:	mov    rsi,r12
  410d96:	mov    edi,0x2
  410d9b:	mov    QWORD PTR [rax],rbx
  410d9e:	call   43af50 <strcmp@plt+0x37798>
  410da3:	mov    rdi,QWORD PTR [r14]
  410da6:	mov    r15,rax
  410da9:	mov    rdx,rax
  410dac:	mov    rsi,rbx
  410daf:	call   43afa0 <strcmp@plt+0x377e8>
  410db4:	mov    rdi,r15
  410db7:	call   40efd0 <strcmp@plt+0xb818>
  410dbc:	mov    rbp,QWORD PTR [rbp+0x8]
  410dc0:	cmp    rbp,QWORD PTR [r12+0x78]
  410dc5:	jne    410d70 <strcmp@plt+0xd5b8>
  410dc7:	jmp    410b3f <strcmp@plt+0xd387>
  410dcc:	sub    r14,0x8
  410dd0:	jmp    410b91 <strcmp@plt+0xd3d9>
  410dd5:	call   403460 <__stack_chk_fail@plt>
  410dda:	lea    rcx,[rip+0x394af]        # 44a290 <strcmp@plt+0x46ad8>
  410de1:	lea    rsi,[rip+0x39387]        # 44a16f <strcmp@plt+0x469b7>
  410de8:	lea    rdi,[rip+0x39393]        # 44a182 <strcmp@plt+0x469ca>
  410def:	mov    edx,0x5ab
  410df4:	call   4032c0 <__assert_fail@plt>
  410df9:	nop    DWORD PTR [rax+0x0]
  410e00:	push   r15
  410e02:	push   r14
  410e04:	push   r13
  410e06:	push   r12
  410e08:	push   rbp
  410e09:	push   rbx
  410e0a:	sub    rsp,0x38
  410e0e:	mov    rax,QWORD PTR fs:0x28
  410e17:	mov    QWORD PTR [rsp+0x28],rax
  410e1c:	xor    eax,eax
  410e1e:	call   43ac30 <strcmp@plt+0x37478>
  410e23:	mov    rbp,rax
  410e26:	mov    rax,0x468e3c
  410e2d:	mov    eax,DWORD PTR [rax]
  410e2f:	test   eax,eax
  410e31:	jle    410e46 <strcmp@plt+0xd68e>
  410e33:	lea    rsi,[rip+0x38c06]        # 449a40 <strcmp@plt+0x46288>
  410e3a:	mov    edi,0x5
  410e3f:	xor    eax,eax
  410e41:	call   4306a0 <strcmp@plt+0x2cee8>
  410e46:	call   42d4e0 <strcmp@plt+0x29d28>
  410e4b:	mov    rdi,QWORD PTR [rbp+0x50]
  410e4f:	mov    r12,rax
  410e52:	mov    QWORD PTR [rsp+0x10],0x0
  410e5b:	mov    QWORD PTR [rsp+0x18],0x0
  410e64:	call   43a6e0 <strcmp@plt+0x36f28>
  410e69:	mov    rcx,QWORD PTR [rax+0x8]
  410e6d:	mov    QWORD PTR [rsp+0x8],rax
  410e72:	cmp    rax,rcx
  410e75:	mov    QWORD PTR [rsp],rcx
  410e79:	je     410f67 <strcmp@plt+0xd7af>
  410e7f:	nop
  410e80:	mov    rax,QWORD PTR [rsp]
  410e84:	mov    r13,QWORD PTR [rax+0x10]
  410e88:	cmp    BYTE PTR [r13+0x20],0x1
  410e8d:	je     410fe0 <strcmp@plt+0xd828>
  410e93:	mov    rdi,QWORD PTR [r13+0x28]
  410e97:	test   rdi,rdi
  410e9a:	je     410ea5 <strcmp@plt+0xd6ed>
  410e9c:	mov    rax,QWORD PTR [r13+0x10]
  410ea0:	mov    QWORD PTR [rsp+0x10],rax
  410ea5:	cmp    QWORD PTR [r13+0x30],0x0
  410eaa:	je     410eb5 <strcmp@plt+0xd6fd>
  410eac:	mov    rax,QWORD PTR [r13+0x18]
  410eb0:	mov    QWORD PTR [rsp+0x18],rax
  410eb5:	mov    rbx,QWORD PTR [rsp+0x10]
  410eba:	mov    BYTE PTR [r13+0x20],0x0
  410ebf:	call   424750 <strcmp@plt+0x20f98>
  410ec4:	mov    rdi,QWORD PTR [r13+0x30]
  410ec8:	call   424750 <strcmp@plt+0x20f98>
  410ecd:	mov    QWORD PTR [r13+0x28],0x0
  410ed5:	mov    QWORD PTR [r13+0x30],0x0
  410edd:	xor    r13d,r13d
  410ee0:	test   rbx,rbx
  410ee3:	je     410f38 <strcmp@plt+0xd780>
  410ee5:	mov    r15,QWORD PTR [rbx+0x8]
  410ee9:	cmp    r15,rbx
  410eec:	jne    410ef9 <strcmp@plt+0xd741>
  410eee:	jmp    410f38 <strcmp@plt+0xd780>
  410ef0:	mov    r15,QWORD PTR [r15+0x8]
  410ef4:	cmp    r15,rbx
  410ef7:	je     410f38 <strcmp@plt+0xd780>
  410ef9:	mov    rsi,QWORD PTR [r15+0x10]
  410efd:	mov    rdi,QWORD PTR [rbp+0x70]
  410f01:	call   40dec0 <strcmp@plt+0xa708>
  410f06:	test   rax,rax
  410f09:	mov    r14,rax
  410f0c:	je     410ef0 <strcmp@plt+0xd738>
  410f0e:	mov    rsi,r12
  410f11:	mov    rdi,rax
  410f14:	call   42d730 <strcmp@plt+0x29f78>
  410f19:	test   al,al
  410f1b:	jne    410ef0 <strcmp@plt+0xd738>
  410f1d:	mov    rsi,r12
  410f20:	mov    rdi,r14
  410f23:	call   42d540 <strcmp@plt+0x29d88>
  410f28:	mov    r15,QWORD PTR [r15+0x8]
  410f2c:	cmp    r15,rbx
  410f2f:	jne    410ef9 <strcmp@plt+0xd741>
  410f31:	nop    DWORD PTR [rax+0x0]
  410f38:	add    r13,0x8
  410f3c:	cmp    r13,0x10
  410f40:	je     410f50 <strcmp@plt+0xd798>
  410f42:	mov    rbx,QWORD PTR [rsp+r13*1+0x10]
  410f47:	jmp    410ee0 <strcmp@plt+0xd728>
  410f49:	nop    DWORD PTR [rax+0x0]
  410f50:	mov    rax,QWORD PTR [rsp]
  410f54:	mov    rax,QWORD PTR [rax+0x8]
  410f58:	cmp    QWORD PTR [rsp+0x8],rax
  410f5d:	mov    QWORD PTR [rsp],rax
  410f61:	jne    410e80 <strcmp@plt+0xd6c8>
  410f67:	mov    rdi,QWORD PTR [rsp+0x8]
  410f6c:	call   42dac0 <strcmp@plt+0x2a308>
  410f71:	mov    rbx,QWORD PTR [r12+0x8]
  410f76:	cmp    rbx,r12
  410f79:	je     410f95 <strcmp@plt+0xd7dd>
  410f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  410f80:	mov    rsi,QWORD PTR [rbx+0x10]
  410f84:	mov    rdi,rbp
  410f87:	call   410af0 <strcmp@plt+0xd338>
  410f8c:	mov    rbx,QWORD PTR [rbx+0x8]
  410f90:	cmp    rbx,r12
  410f93:	jne    410f80 <strcmp@plt+0xd7c8>
  410f95:	mov    rdi,r12
  410f98:	call   42dac0 <strcmp@plt+0x2a308>
  410f9d:	mov    rax,0x468e3c
  410fa4:	cmp    DWORD PTR [rax],0x1
  410fa7:	jle    410fbc <strcmp@plt+0xd804>
  410fa9:	lea    rsi,[rip+0x38ad8]        # 449a88 <strcmp@plt+0x462d0>
  410fb0:	mov    edi,0x6
  410fb5:	xor    eax,eax
  410fb7:	call   4306a0 <strcmp@plt+0x2cee8>
  410fbc:	mov    rcx,QWORD PTR [rsp+0x28]
  410fc1:	xor    rcx,QWORD PTR fs:0x28
  410fca:	mov    eax,0x1
  410fcf:	jne    410ffb <strcmp@plt+0xd843>
  410fd1:	add    rsp,0x38
  410fd5:	pop    rbx
  410fd6:	pop    rbp
  410fd7:	pop    r12
  410fd9:	pop    r13
  410fdb:	pop    r14
  410fdd:	pop    r15
  410fdf:	ret    
  410fe0:	mov    rbx,QWORD PTR [r13+0x10]
  410fe4:	mov    rax,QWORD PTR [r13+0x18]
  410fe8:	mov    rdi,QWORD PTR [r13+0x28]
  410fec:	mov    QWORD PTR [rsp+0x10],rbx
  410ff1:	mov    QWORD PTR [rsp+0x18],rax
  410ff6:	jmp    410eba <strcmp@plt+0xd702>
  410ffb:	call   403460 <__stack_chk_fail@plt>
  411000:	push   r15
  411002:	push   r14
  411004:	push   r13
  411006:	push   r12
  411008:	push   rbp
  411009:	push   rbx
  41100a:	mov    rbp,rdi
  41100d:	mov    ebx,esi
  41100f:	mov    esi,0x2
  411014:	sub    rsp,0x18
  411018:	mov    rdi,QWORD PTR [rdi+0x30]
  41101c:	call   4094a0 <strcmp@plt+0x5ce8>
  411021:	mov    rdi,QWORD PTR [rbp+0x30]
  411025:	mov    esi,0xa
  41102a:	mov    r15,rax
  41102d:	call   4094a0 <strcmp@plt+0x5ce8>
  411032:	cmp    ebx,0x4
  411035:	mov    QWORD PTR [rsp+0x8],rax
  41103a:	jle    411070 <strcmp@plt+0xd8b8>
  41103c:	mov    rbp,0x468e3c
  411043:	mov    eax,DWORD PTR [rbp+0x0]
  411046:	lea    edx,[rax+0x4]
  411049:	cmp    ebx,edx
  41104b:	jle    41128d <strcmp@plt+0xdad5>
  411051:	mov    rax,QWORD PTR [r15+0x8]
  411055:	mov    rsi,QWORD PTR [rax+0x28]
  411059:	mov    r13,QWORD PTR [rsi+0x8]
  41105d:	cmp    r13,rsi
  411060:	jne    4110a5 <strcmp@plt+0xd8ed>
  411062:	cmp    ebx,edx
  411064:	jle    4112ca <strcmp@plt+0xdb12>
  41106a:	jmp    411271 <strcmp@plt+0xdab9>
  41106f:	nop
  411070:	lea    rsi,[rip+0x38b11]        # 449b88 <strcmp@plt+0x463d0>
  411077:	mov    edi,ebx
  411079:	xor    eax,eax
  41107b:	call   4306a0 <strcmp@plt+0x2cee8>
  411080:	lea    rsi,[rip+0x38a29]        # 449ab0 <strcmp@plt+0x462f8>
  411087:	xor    eax,eax
  411089:	mov    edi,ebx
  41108b:	call   4306a0 <strcmp@plt+0x2cee8>
  411090:	mov    rax,QWORD PTR [r15+0x8]
  411094:	mov    rdx,QWORD PTR [rax+0x28]
  411098:	mov    r13,QWORD PTR [rdx+0x8]
  41109c:	cmp    rdx,r13
  41109f:	je     41112d <strcmp@plt+0xd975>
  4110a5:	lea    r14,[rip+0x3660c]        # 4476b8 <strcmp@plt+0x43f00>
  4110ac:	nop    DWORD PTR [rax+0x0]
  4110b0:	mov    r12,QWORD PTR [r13+0x10]
  4110b4:	mov    edi,DWORD PTR [r12+0x18]
  4110b9:	test   edi,edi
  4110bb:	je     411123 <strcmp@plt+0xd96b>
  4110bd:	mov    rbp,QWORD PTR [r12+0x8]
  4110c2:	mov    rdi,QWORD PTR [rbp+0x10]
  4110c6:	mov    rdx,QWORD PTR [rdi]
  4110c9:	mov    esi,DWORD PTR [rdx+0x18]
  4110cc:	test   esi,esi
  4110ce:	je     411123 <strcmp@plt+0xd96b>
  4110d0:	cmp    rbp,r12
  4110d3:	jne    4110fd <strcmp@plt+0xd945>
  4110d5:	jmp    411123 <strcmp@plt+0xd96b>
  4110d7:	nop    WORD PTR [rax+rax*1+0x0]
  4110e0:	mov    rax,0x468e3c
  4110e7:	mov    eax,DWORD PTR [rax]
  4110e9:	add    eax,0x4
  4110ec:	cmp    ebx,eax
  4110ee:	jle    411102 <strcmp@plt+0xd94a>
  4110f0:	mov    rbp,QWORD PTR [rbp+0x8]
  4110f4:	cmp    rbp,r12
  4110f7:	je     41111f <strcmp@plt+0xd967>
  4110f9:	mov    rdi,QWORD PTR [rbp+0x10]
  4110fd:	cmp    ebx,0x4
  411100:	jg     4110e0 <strcmp@plt+0xd928>
  411102:	call   429e20 <strcmp@plt+0x26668>
  411107:	mov    rsi,r14
  41110a:	mov    rdx,rax
  41110d:	mov    edi,ebx
  41110f:	xor    eax,eax
  411111:	call   4306a0 <strcmp@plt+0x2cee8>
  411116:	mov    rbp,QWORD PTR [rbp+0x8]
  41111a:	cmp    rbp,r12
  41111d:	jne    4110f9 <strcmp@plt+0xd941>
  41111f:	mov    rax,QWORD PTR [r15+0x8]
  411123:	mov    r13,QWORD PTR [r13+0x8]
  411127:	cmp    QWORD PTR [rax+0x28],r13
  41112b:	jne    4110b0 <strcmp@plt+0xd8f8>
  41112d:	cmp    ebx,0x4
  411130:	jg     411260 <strcmp@plt+0xdaa8>
  411136:	lea    rsi,[rip+0x38a03]        # 449b40 <strcmp@plt+0x46388>
  41113d:	mov    edi,ebx
  41113f:	xor    eax,eax
  411141:	call   4306a0 <strcmp@plt+0x2cee8>
  411146:	lea    rsi,[rip+0x389ab]        # 449af8 <strcmp@plt+0x46340>
  41114d:	mov    edi,ebx
  41114f:	xor    eax,eax
  411151:	call   4306a0 <strcmp@plt+0x2cee8>
  411156:	lea    rsi,[rip+0x38953]        # 449ab0 <strcmp@plt+0x462f8>
  41115d:	xor    eax,eax
  41115f:	mov    edi,ebx
  411161:	call   4306a0 <strcmp@plt+0x2cee8>
  411166:	mov    rax,QWORD PTR [rsp+0x8]
  41116b:	mov    rax,QWORD PTR [rax+0x8]
  41116f:	mov    rdx,QWORD PTR [rax+0x28]
  411173:	mov    r15,QWORD PTR [rdx+0x8]
  411177:	cmp    rdx,r15
  41117a:	je     411216 <strcmp@plt+0xda5e>
  411180:	lea    r14,[rip+0x36531]        # 4476b8 <strcmp@plt+0x43f00>
  411187:	nop    WORD PTR [rax+rax*1+0x0]
  411190:	mov    r12,QWORD PTR [r15+0x10]
  411194:	mov    ecx,DWORD PTR [r12+0x18]
  411199:	test   ecx,ecx
  41119b:	je     411208 <strcmp@plt+0xda50>
  41119d:	mov    rbp,QWORD PTR [r12+0x8]
  4111a2:	mov    rdi,QWORD PTR [rbp+0x10]
  4111a6:	mov    rdx,QWORD PTR [rdi]
  4111a9:	mov    edx,DWORD PTR [rdx+0x18]
  4111ac:	test   edx,edx
  4111ae:	je     411208 <strcmp@plt+0xda50>
  4111b0:	cmp    r12,rbp
  4111b3:	jne    4111dd <strcmp@plt+0xda25>
  4111b5:	jmp    411208 <strcmp@plt+0xda50>
  4111b7:	nop    WORD PTR [rax+rax*1+0x0]
  4111c0:	mov    rax,0x468e3c
  4111c7:	mov    eax,DWORD PTR [rax]
  4111c9:	add    eax,0x4
  4111cc:	cmp    ebx,eax
  4111ce:	jle    4111e2 <strcmp@plt+0xda2a>
  4111d0:	mov    rbp,QWORD PTR [rbp+0x8]
  4111d4:	cmp    rbp,r12
  4111d7:	je     4111ff <strcmp@plt+0xda47>
  4111d9:	mov    rdi,QWORD PTR [rbp+0x10]
  4111dd:	cmp    ebx,0x4
  4111e0:	jg     4111c0 <strcmp@plt+0xda08>
  4111e2:	call   429e20 <strcmp@plt+0x26668>
  4111e7:	mov    rsi,r14
  4111ea:	mov    rdx,rax
  4111ed:	mov    edi,ebx
  4111ef:	xor    eax,eax
  4111f1:	call   4306a0 <strcmp@plt+0x2cee8>
  4111f6:	mov    rbp,QWORD PTR [rbp+0x8]
  4111fa:	cmp    rbp,r12
  4111fd:	jne    4111d9 <strcmp@plt+0xda21>
  4111ff:	mov    rax,QWORD PTR [rsp+0x8]
  411204:	mov    rax,QWORD PTR [rax+0x8]
  411208:	mov    r15,QWORD PTR [r15+0x8]
  41120c:	cmp    QWORD PTR [rax+0x28],r15
  411210:	jne    411190 <strcmp@plt+0xd9d8>
  411216:	cmp    ebx,0x4
  411219:	jg     411240 <strcmp@plt+0xda88>
  41121b:	add    rsp,0x18
  41121f:	mov    edi,ebx
  411221:	lea    rsi,[rip+0x38918]        # 449b40 <strcmp@plt+0x46388>
  411228:	pop    rbx
  411229:	pop    rbp
  41122a:	pop    r12
  41122c:	pop    r13
  41122e:	pop    r14
  411230:	pop    r15
  411232:	xor    eax,eax
  411234:	jmp    4306a0 <strcmp@plt+0x2cee8>
  411239:	nop    DWORD PTR [rax+0x0]
  411240:	mov    rax,0x468e3c
  411247:	mov    eax,DWORD PTR [rax]
  411249:	add    eax,0x4
  41124c:	cmp    ebx,eax
  41124e:	jle    41121b <strcmp@plt+0xda63>
  411250:	add    rsp,0x18
  411254:	pop    rbx
  411255:	pop    rbp
  411256:	pop    r12
  411258:	pop    r13
  41125a:	pop    r14
  41125c:	pop    r15
  41125e:	ret    
  41125f:	nop
  411260:	mov    rbp,0x468e3c
  411267:	mov    eax,DWORD PTR [rbp+0x0]
  41126a:	add    eax,0x4
  41126d:	cmp    ebx,eax
  41126f:	jle    4112b0 <strcmp@plt+0xdaf8>
  411271:	mov    rax,QWORD PTR [rsp+0x8]
  411276:	mov    rax,QWORD PTR [rax+0x8]
  41127a:	mov    rdx,QWORD PTR [rax+0x28]
  41127e:	mov    r15,QWORD PTR [rdx+0x8]
  411282:	cmp    r15,rdx
  411285:	jne    411180 <strcmp@plt+0xd9c8>
  41128b:	jmp    411250 <strcmp@plt+0xda98>
  41128d:	lea    rsi,[rip+0x388f4]        # 449b88 <strcmp@plt+0x463d0>
  411294:	xor    eax,eax
  411296:	mov    edi,ebx
  411298:	call   4306a0 <strcmp@plt+0x2cee8>
  41129d:	mov    eax,DWORD PTR [rbp+0x0]
  4112a0:	lea    edx,[rax+0x4]
  4112a3:	cmp    ebx,edx
  4112a5:	jle    411080 <strcmp@plt+0xd8c8>
  4112ab:	jmp    411051 <strcmp@plt+0xd899>
  4112b0:	lea    rsi,[rip+0x38889]        # 449b40 <strcmp@plt+0x46388>
  4112b7:	xor    eax,eax
  4112b9:	mov    edi,ebx
  4112bb:	call   4306a0 <strcmp@plt+0x2cee8>
  4112c0:	mov    eax,DWORD PTR [rbp+0x0]
  4112c3:	add    eax,0x4
  4112c6:	cmp    ebx,eax
  4112c8:	jg     411271 <strcmp@plt+0xdab9>
  4112ca:	lea    rsi,[rip+0x38827]        # 449af8 <strcmp@plt+0x46340>
  4112d1:	xor    eax,eax
  4112d3:	mov    edi,ebx
  4112d5:	call   4306a0 <strcmp@plt+0x2cee8>
  4112da:	mov    eax,DWORD PTR [rbp+0x0]
  4112dd:	add    eax,0x4
  4112e0:	cmp    ebx,eax
  4112e2:	jle    411156 <strcmp@plt+0xd99e>
  4112e8:	jmp    411271 <strcmp@plt+0xdab9>
  4112ea:	nop    WORD PTR [rax+rax*1+0x0]
  4112f0:	push   r15
  4112f2:	push   r14
  4112f4:	push   r13
  4112f6:	push   r12
  4112f8:	push   rbp
  4112f9:	push   rbx
  4112fa:	sub    rsp,0x68
  4112fe:	mov    rax,QWORD PTR fs:0x28
  411307:	mov    QWORD PTR [rsp+0x58],rax
  41130c:	xor    eax,eax
  41130e:	mov    rax,QWORD PTR [rdi+0x78]
  411312:	mov    eax,DWORD PTR [rax+0x18]
  411315:	test   eax,eax
  411317:	je     411388 <strcmp@plt+0xdbd0>
  411319:	cmp    esi,0x4
  41131c:	mov    r12,rdi
  41131f:	mov    ebx,esi
  411321:	jg     4113b0 <strcmp@plt+0xdbf8>
  411327:	lea    rsi,[rip+0x388ea]        # 449c18 <strcmp@plt+0x46460>
  41132e:	xor    eax,eax
  411330:	mov    edi,ebx
  411332:	call   4306a0 <strcmp@plt+0x2cee8>
  411337:	lea    rsi,[rip+0x38922]        # 449c60 <strcmp@plt+0x464a8>
  41133e:	xor    eax,eax
  411340:	mov    edi,ebx
  411342:	call   4306a0 <strcmp@plt+0x2cee8>
  411347:	mov    rax,QWORD PTR [r12+0x78]
  41134c:	mov    r14,QWORD PTR [rax+0x8]
  411350:	cmp    r14,rax
  411353:	je     411371 <strcmp@plt+0xdbb9>
  411355:	mov    rbp,rsp
  411358:	lea    r13,[rip+0x38e5e]        # 44a1bd <strcmp@plt+0x46a05>
  41135f:	jmp    41141c <strcmp@plt+0xdc64>
  411364:	nop    DWORD PTR [rax+0x0]
  411368:	cmp    ebx,0x4
  41136b:	jg     411580 <strcmp@plt+0xddc8>
  411371:	lea    rsi,[rip+0x38858]        # 449bd0 <strcmp@plt+0x46418>
  411378:	mov    edi,ebx
  41137a:	xor    eax,eax
  41137c:	call   4306a0 <strcmp@plt+0x2cee8>
  411381:	nop    DWORD PTR [rax+0x0]
  411388:	mov    rax,QWORD PTR [rsp+0x58]
  41138d:	xor    rax,QWORD PTR fs:0x28
  411396:	jne    4115c4 <strcmp@plt+0xde0c>
  41139c:	add    rsp,0x68
  4113a0:	pop    rbx
  4113a1:	pop    rbp
  4113a2:	pop    r12
  4113a4:	pop    r13
  4113a6:	pop    r14
  4113a8:	pop    r15
  4113aa:	ret    
  4113ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4113b0:	mov    r15,0x468e3c
  4113b7:	mov    eax,DWORD PTR [r15]
  4113ba:	add    eax,0x4
  4113bd:	cmp    esi,eax
  4113bf:	jg     411388 <strcmp@plt+0xdbd0>
  4113c1:	lea    rsi,[rip+0x38850]        # 449c18 <strcmp@plt+0x46460>
  4113c8:	xor    eax,eax
  4113ca:	mov    edi,ebx
  4113cc:	call   4306a0 <strcmp@plt+0x2cee8>
  4113d1:	mov    eax,DWORD PTR [r15]
  4113d4:	add    eax,0x4
  4113d7:	cmp    ebx,eax
  4113d9:	jle    4115a0 <strcmp@plt+0xdde8>
  4113df:	mov    rax,QWORD PTR [r12+0x78]
  4113e4:	mov    r14,QWORD PTR [rax+0x8]
  4113e8:	cmp    r14,rax
  4113eb:	jne    411355 <strcmp@plt+0xdb9d>
  4113f1:	jmp    411388 <strcmp@plt+0xdbd0>
  4113f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4113f8:	mov    r15,0x468e3c
  4113ff:	mov    eax,DWORD PTR [r15]
  411402:	add    eax,0x4
  411405:	cmp    ebx,eax
  411407:	jle    4114b5 <strcmp@plt+0xdcfd>
  41140d:	mov    r14,QWORD PTR [r14+0x8]
  411411:	cmp    r14,QWORD PTR [r12+0x78]
  411416:	je     411368 <strcmp@plt+0xdbb0>
  41141c:	mov    r15,QWORD PTR [r14+0x10]
  411420:	mov    rdi,QWORD PTR [r15]
  411423:	call   424890 <strcmp@plt+0x210d8>
  411428:	mov    rdi,rbp
  41142b:	mov    r9,rax
  41142e:	mov    r8,r13
  411431:	xor    eax,eax
  411433:	mov    ecx,0x50
  411438:	mov    edx,0x1
  41143d:	mov    esi,0x50
  411442:	call   4032a0 <__snprintf_chk@plt>
  411447:	movzx  eax,BYTE PTR [r15+0x8]
  41144c:	mov    rdi,rbp
  41144f:	test   al,al
  411451:	je     4114d0 <strcmp@plt+0xdd18>
  411453:	cmp    al,0x1
  411455:	je     411528 <strcmp@plt+0xdd70>
  41145b:	mov    edx,DWORD PTR [rdi]
  41145d:	add    rdi,0x4
  411461:	lea    eax,[rdx-0x1010101]
  411467:	andn   eax,edx,eax
  41146c:	and    eax,0x80808080
  411471:	je     41145b <strcmp@plt+0xdca3>
  411473:	mov    edx,eax
  411475:	mov    esi,0x50
  41147a:	shr    edx,0x10
  41147d:	test   eax,0x8080
  411482:	cmove  eax,edx
  411485:	lea    rdx,[rdi+0x2]
  411489:	mov    ecx,eax
  41148b:	cmove  rdi,rdx
  41148f:	add    cl,al
  411491:	lea    rdx,[rip+0x38d64]        # 44a1fc <strcmp@plt+0x46a44>
  411498:	sbb    rdi,0x3
  41149c:	xor    eax,eax
  41149e:	sub    rdi,rbp
  4114a1:	sub    rsi,rdi
  4114a4:	add    rdi,rbp
  4114a7:	call   403640 <snprintf@plt>
  4114ac:	cmp    ebx,0x4
  4114af:	jg     4113f8 <strcmp@plt+0xdc40>
  4114b5:	lea    rsi,[rip+0x361fc]        # 4476b8 <strcmp@plt+0x43f00>
  4114bc:	mov    rdx,rbp
  4114bf:	mov    edi,ebx
  4114c1:	xor    eax,eax
  4114c3:	call   4306a0 <strcmp@plt+0x2cee8>
  4114c8:	jmp    41140d <strcmp@plt+0xdc55>
  4114cd:	nop    DWORD PTR [rax]
  4114d0:	mov    edx,DWORD PTR [rdi]
  4114d2:	add    rdi,0x4
  4114d6:	lea    eax,[rdx-0x1010101]
  4114dc:	andn   eax,edx,eax
  4114e1:	and    eax,0x80808080
  4114e6:	je     4114d0 <strcmp@plt+0xdd18>
  4114e8:	mov    edx,eax
  4114ea:	mov    esi,0x50
  4114ef:	shr    edx,0x10
  4114f2:	test   eax,0x8080
  4114f7:	cmove  eax,edx
  4114fa:	lea    rdx,[rdi+0x2]
  4114fe:	mov    ecx,eax
  411500:	cmove  rdi,rdx
  411504:	add    cl,al
  411506:	lea    rdx,[rip+0x38cb9]        # 44a1c6 <strcmp@plt+0x46a0e>
  41150d:	sbb    rdi,0x3
  411511:	xor    eax,eax
  411513:	sub    rdi,rbp
  411516:	sub    rsi,rdi
  411519:	add    rdi,rbp
  41151c:	call   403640 <snprintf@plt>
  411521:	jmp    4114ac <strcmp@plt+0xdcf4>
  411523:	nop    DWORD PTR [rax+rax*1+0x0]
  411528:	mov    edx,DWORD PTR [rdi]
  41152a:	add    rdi,0x4
  41152e:	lea    eax,[rdx-0x1010101]
  411534:	andn   eax,edx,eax
  411539:	and    eax,0x80808080
  41153e:	je     411528 <strcmp@plt+0xdd70>
  411540:	mov    edx,eax
  411542:	mov    esi,0x50
  411547:	shr    edx,0x10
  41154a:	test   eax,0x8080
  41154f:	cmove  eax,edx
  411552:	lea    rdx,[rdi+0x2]
  411556:	mov    ecx,eax
  411558:	cmove  rdi,rdx
  41155c:	add    cl,al
  41155e:	lea    rdx,[rip+0x38c7c]        # 44a1e1 <strcmp@plt+0x46a29>
  411565:	sbb    rdi,0x3
  411569:	xor    eax,eax
  41156b:	sub    rdi,rbp
  41156e:	sub    rsi,rdi
  411571:	add    rdi,rbp
  411574:	call   403640 <snprintf@plt>
  411579:	jmp    4114ac <strcmp@plt+0xdcf4>
  41157e:	xchg   ax,ax
  411580:	mov    r15,0x468e3c
  411587:	mov    eax,DWORD PTR [r15]
  41158a:	add    eax,0x4
  41158d:	cmp    ebx,eax
  41158f:	jg     411388 <strcmp@plt+0xdbd0>
  411595:	jmp    411371 <strcmp@plt+0xdbb9>
  41159a:	nop    WORD PTR [rax+rax*1+0x0]
  4115a0:	lea    rsi,[rip+0x386b9]        # 449c60 <strcmp@plt+0x464a8>
  4115a7:	xor    eax,eax
  4115a9:	mov    edi,ebx
  4115ab:	call   4306a0 <strcmp@plt+0x2cee8>
  4115b0:	mov    rax,QWORD PTR [r12+0x78]
  4115b5:	mov    r14,QWORD PTR [rax+0x8]
  4115b9:	cmp    r14,rax
  4115bc:	jne    411355 <strcmp@plt+0xdb9d>
  4115c2:	jmp    411587 <strcmp@plt+0xddcf>
  4115c4:	call   403460 <__stack_chk_fail@plt>
  4115c9:	nop    DWORD PTR [rax+0x0]
  4115d0:	push   r15
  4115d2:	push   r14
  4115d4:	push   r13
  4115d6:	push   r12
  4115d8:	push   rbp
  4115d9:	push   rbx
  4115da:	sub    rsp,0x8a8
  4115e1:	mov    rax,QWORD PTR fs:0x28
  4115ea:	mov    QWORD PTR [rsp+0x898],rax
  4115f2:	xor    eax,eax
  4115f4:	mov    rax,0x468600
  4115fb:	cmp    QWORD PTR [rdi+0x8],rax
  4115ff:	jne    412208 <strcmp@plt+0xea50>
  411605:	mov    eax,DWORD PTR [rdi]
  411607:	mov    r15,rdi
  41160a:	cmp    eax,0x3
  41160d:	je     4121d7 <strcmp@plt+0xea1f>
  411613:	mov    rcx,0x468e3c
  41161a:	mov    QWORD PTR [rsp+0x10],rcx
  41161f:	test   eax,eax
  411621:	jne    411641 <strcmp@plt+0xde89>
  411623:	mov    rax,QWORD PTR [rsp+0x10]
  411628:	mov    ebx,DWORD PTR [rax]
  41162a:	test   ebx,ebx
  41162c:	jle    411641 <strcmp@plt+0xde89>
  41162e:	lea    rsi,[rip+0x38bf8]        # 44a22d <strcmp@plt+0x46a75>
  411635:	mov    edi,0x5
  41163a:	xor    eax,eax
  41163c:	call   4306a0 <strcmp@plt+0x2cee8>
  411641:	mov    rax,QWORD PTR [r15+0x78]
  411645:	mov    r11d,DWORD PTR [rax+0x18]
  411649:	test   r11d,r11d
  41164c:	je     411cc6 <strcmp@plt+0xe50e>
  411652:	mov    rax,QWORD PTR [r15+0x48]
  411656:	mov    r10d,DWORD PTR [rax+0x18]
  41165a:	test   r10d,r10d
  41165d:	je     411cf4 <strcmp@plt+0xe53c>
  411663:	lea    rax,[r15+0x18]
  411667:	mov    esi,0x2
  41166c:	mov    rbx,rax
  41166f:	mov    rdi,rax
  411672:	mov    QWORD PTR [rsp+0x68],rax
  411677:	call   40c790 <strcmp@plt+0x8fd8>
  41167c:	mov    rdi,rbx
  41167f:	mov    r14,rax
  411682:	mov    esi,0xa
  411687:	mov    QWORD PTR [rsp+0x38],rax
  41168c:	call   40c790 <strcmp@plt+0x8fd8>
  411691:	mov    rdi,r14
  411694:	mov    rbx,rax
  411697:	mov    QWORD PTR [rsp+0x40],rax
  41169c:	call   433040 <strcmp@plt+0x2f888>
  4116a1:	test   al,al
  4116a3:	jne    4116b5 <strcmp@plt+0xdefd>
  4116a5:	mov    rdi,rbx
  4116a8:	call   433040 <strcmp@plt+0x2f888>
  4116ad:	test   al,al
  4116af:	je     412222 <strcmp@plt+0xea6a>
  4116b5:	mov    rbx,QWORD PTR [rsp+0x38]
  4116ba:	mov    rax,QWORD PTR [r15+0x38]
  4116be:	mov    rdi,QWORD PTR [r15+0x40]
  4116c2:	mov    rsi,rbx
  4116c5:	call   QWORD PTR [rax+0x38]
  4116c8:	mov    rdi,rbx
  4116cb:	call   433030 <strcmp@plt+0x2f878>
  4116d0:	xor    edx,edx
  4116d2:	mov    rsi,rax
  4116d5:	mov    rdi,r15
  4116d8:	call   4083c0 <strcmp@plt+0x4c08>
  4116dd:	mov    rbx,QWORD PTR [rsp+0x40]
  4116e2:	mov    rax,QWORD PTR [r15+0x38]
  4116e6:	mov    rdi,QWORD PTR [r15+0x40]
  4116ea:	mov    rsi,rbx
  4116ed:	call   QWORD PTR [rax+0x38]
  4116f0:	mov    rdi,rbx
  4116f3:	call   433030 <strcmp@plt+0x2f878>
  4116f8:	xor    edx,edx
  4116fa:	mov    rsi,rax
  4116fd:	mov    rdi,r15
  411700:	call   4083c0 <strcmp@plt+0x4c08>
  411705:	cmp    DWORD PTR [r15+0x80],0x1
  41170d:	je     411d16 <strcmp@plt+0xe55e>
  411713:	cmp    DWORD PTR [r15],0x3
  411717:	je     41211d <strcmp@plt+0xe965>
  41171d:	mov    rax,QWORD PTR [rsp+0x10]
  411722:	mov    eax,DWORD PTR [rax]
  411724:	test   eax,eax
  411726:	jg     411b6b <strcmp@plt+0xe3b3>
  41172c:	mov    rdi,QWORD PTR [r15+0x70]
  411730:	mov    esi,0x5
  411735:	call   409060 <strcmp@plt+0x58a8>
  41173a:	mov    rdi,QWORD PTR [r15+0x30]
  41173e:	mov    esi,0x5
  411743:	call   409530 <strcmp@plt+0x5d78>
  411748:	mov    esi,0x5
  41174d:	mov    rdi,r15
  411750:	call   4112f0 <strcmp@plt+0xdb38>
  411755:	mov    rax,QWORD PTR [rsp+0x10]
  41175a:	mov    eax,DWORD PTR [rax]
  41175c:	test   eax,eax
  41175e:	jg     411bdc <strcmp@plt+0xe424>
  411764:	mov    rbx,0x424890
  41176b:	mov    rdi,QWORD PTR [r15+0x48]
  41176f:	mov    edx,0x5
  411774:	mov    rsi,rbx
  411777:	call   42d820 <strcmp@plt+0x2a068>
  41177c:	mov    rax,QWORD PTR [rsp+0x10]
  411781:	mov    eax,DWORD PTR [rax]
  411783:	test   eax,eax
  411785:	jg     411bc4 <strcmp@plt+0xe40c>
  41178b:	mov    esi,0x5
  411790:	mov    rdi,r15
  411793:	call   411000 <strcmp@plt+0xd848>
  411798:	mov    rax,QWORD PTR [rsp+0x10]
  41179d:	mov    eax,DWORD PTR [rax]
  41179f:	test   eax,eax
  4117a1:	jg     411ba5 <strcmp@plt+0xe3ed>
  4117a7:	mov    rdi,QWORD PTR [r15+0x68]
  4117ab:	mov    edx,0x5
  4117b0:	mov    rsi,rbx
  4117b3:	call   42d820 <strcmp@plt+0x2a068>
  4117b8:	mov    rax,QWORD PTR [rsp+0x10]
  4117bd:	mov    r14d,DWORD PTR [rax]
  4117c0:	test   r14d,r14d
  4117c3:	jg     411ae8 <strcmp@plt+0xe330>
  4117c9:	mov    rdi,QWORD PTR [r15+0x60]
  4117cd:	mov    eax,DWORD PTR [rdi+0x18]
  4117d0:	test   eax,eax
  4117d2:	jne    411b35 <strcmp@plt+0xe37d>
  4117d8:	call   42d4e0 <strcmp@plt+0x29d28>
  4117dd:	mov    rbx,rax
  4117e0:	mov    QWORD PTR [rsp+0x10],rax
  4117e5:	mov    rax,QWORD PTR [r15+0x70]
  4117e9:	mov    rsi,rbx
  4117ec:	mov    rax,QWORD PTR [rax]
  4117ef:	mov    rdi,QWORD PTR [rax]
  4117f2:	call   42d540 <strcmp@plt+0x29d88>
  4117f7:	mov    rax,QWORD PTR [r15+0x70]
  4117fb:	mov    rsi,rbx
  4117fe:	mov    rax,QWORD PTR [rax]
  411801:	mov    rdi,QWORD PTR [rax+0x8]
  411805:	call   42d540 <strcmp@plt+0x29d88>
  41180a:	mov    rax,QWORD PTR [r15+0x70]
  41180e:	mov    rdx,QWORD PTR [rax]
  411811:	mov    rcx,QWORD PTR [rdx+0x10]
  411815:	mov    rsi,QWORD PTR [rcx]
  411818:	mov    ebp,DWORD PTR [rsi]
  41181a:	test   ebp,ebp
  41181c:	je     411868 <strcmp@plt+0xe0b0>
  41181e:	xor    ebx,ebx
  411820:	mov    r8,QWORD PTR [rsi+0x10]
  411824:	lea    edx,[rbx+rbx*1]
  411827:	mov    edi,ebx
  411829:	shr    edi,0x4
  41182c:	mov    ecx,edx
  41182e:	mov    edx,DWORD PTR [r8+rdi*4]
  411832:	and    ecx,0x1e
  411835:	shrx   edx,edx,ecx
  41183a:	and    edx,0x3
  41183d:	jne    411857 <strcmp@plt+0xe09f>
  41183f:	mov    rdx,QWORD PTR [rsi+0x20]
  411843:	mov    eax,ebx
  411845:	mov    rsi,QWORD PTR [rsp+0x10]
  41184a:	mov    rdi,QWORD PTR [rdx+rax*8]
  41184e:	call   42d540 <strcmp@plt+0x29d88>
  411853:	mov    rax,QWORD PTR [r15+0x70]
  411857:	mov    rdx,QWORD PTR [rax]
  41185a:	add    ebx,0x1
  41185d:	mov    rcx,QWORD PTR [rdx+0x10]
  411861:	mov    rsi,QWORD PTR [rcx]
  411864:	cmp    DWORD PTR [rsi],ebx
  411866:	jne    411820 <strcmp@plt+0xe068>
  411868:	mov    rcx,QWORD PTR [rdx+0x18]
  41186c:	mov    rsi,QWORD PTR [rcx]
  41186f:	mov    ebx,DWORD PTR [rsi]
  411871:	test   ebx,ebx
  411873:	je     4118bf <strcmp@plt+0xe107>
  411875:	xor    ebx,ebx
  411877:	mov    r8,QWORD PTR [rsi+0x10]
  41187b:	lea    edx,[rbx+rbx*1]
  41187e:	mov    edi,ebx
  411880:	shr    edi,0x4
  411883:	mov    ecx,edx
  411885:	mov    edx,DWORD PTR [r8+rdi*4]
  411889:	and    ecx,0x1e
  41188c:	shrx   edx,edx,ecx
  411891:	and    edx,0x3
  411894:	jne    4118ae <strcmp@plt+0xe0f6>
  411896:	mov    rdx,QWORD PTR [rsi+0x20]
  41189a:	mov    eax,ebx
  41189c:	mov    rsi,QWORD PTR [rsp+0x10]
  4118a1:	mov    rdi,QWORD PTR [rdx+rax*8]
  4118a5:	call   42d540 <strcmp@plt+0x29d88>
  4118aa:	mov    rax,QWORD PTR [r15+0x70]
  4118ae:	mov    rdx,QWORD PTR [rax]
  4118b1:	add    ebx,0x1
  4118b4:	mov    rcx,QWORD PTR [rdx+0x18]
  4118b8:	mov    rsi,QWORD PTR [rcx]
  4118bb:	cmp    DWORD PTR [rsi],ebx
  4118bd:	jne    411877 <strcmp@plt+0xe0bf>
  4118bf:	mov    rbx,QWORD PTR [rsp+0x10]
  4118c4:	mov    rdi,QWORD PTR [rdx+0x20]
  4118c8:	mov    rsi,rbx
  4118cb:	call   42d540 <strcmp@plt+0x29d88>
  4118d0:	mov    rax,QWORD PTR [r15+0x70]
  4118d4:	mov    rsi,rbx
  4118d7:	mov    rax,QWORD PTR [rax]
  4118da:	mov    rdi,QWORD PTR [rax+0x20]
  4118de:	call   42d540 <strcmp@plt+0x29d88>
  4118e3:	mov    rcx,QWORD PTR [rbx+0x8]
  4118e7:	cmp    rbx,rcx
  4118ea:	mov    QWORD PTR [rsp+0x18],rcx
  4118ef:	je     411a73 <strcmp@plt+0xe2bb>
  4118f5:	lea    rax,[rsp+0x80]
  4118fd:	mov    QWORD PTR [rsp+0x20],rax
  411902:	lea    rax,[rsp+0x490]
  41190a:	mov    QWORD PTR [rsp+0x8],rax
  41190f:	mov    rax,QWORD PTR [rsp+0x18]
  411914:	mov    rax,QWORD PTR [rax+0x10]
  411918:	mov    rbp,QWORD PTR [rax]
  41191b:	test   rbp,rbp
  41191e:	je     411a5a <strcmp@plt+0xe2a2>
  411924:	mov    r12,QWORD PTR [rsp+0x20]
  411929:	nop    DWORD PTR [rax+0x0]
  411930:	cmp    QWORD PTR [rbp+0x8],0x0
  411935:	je     411a01 <strcmp@plt+0xe249>
  41193b:	mov    rax,QWORD PTR [rbp+0x28]
  41193f:	mov    rbx,QWORD PTR [rax]
  411942:	test   rbx,rbx
  411945:	je     411a01 <strcmp@plt+0xe249>
  41194b:	mov    r14,QWORD PTR [rsp+0x8]
  411950:	cmp    QWORD PTR [rbx+0x8],0x0
  411955:	je     4119b3 <strcmp@plt+0xe1fb>
  411957:	mov    r13,QWORD PTR [rbx+0x28]
  41195b:	test   r13,r13
  41195e:	je     4119b3 <strcmp@plt+0xe1fb>
  411960:	mov    rdi,r13
  411963:	call   434230 <strcmp@plt+0x30a78>
  411968:	mov    rdi,r15
  41196b:	mov    rsi,rax
  41196e:	call   4081f0 <strcmp@plt+0x4a38>
  411973:	cmp    eax,0x1
  411976:	je     4119a5 <strcmp@plt+0xe1ed>
  411978:	mov    rdi,r13
  41197b:	call   4342b0 <strcmp@plt+0x30af8>
  411980:	mov    rdi,rax
  411983:	call   424890 <strcmp@plt+0x210d8>
  411988:	lea    rsi,[rip+0x38641]        # 449fd0 <strcmp@plt+0x46818>
  41198f:	mov    rdx,rax
  411992:	mov    edi,0x2
  411997:	xor    eax,eax
  411999:	call   4306a0 <strcmp@plt+0x2cee8>
  41199e:	xor    eax,eax
  4119a0:	call   43f160 <strcmp@plt+0x3b9a8>
  4119a5:	mov    rax,QWORD PTR [r15+0x38]
  4119a9:	mov    rdi,QWORD PTR [r15+0x40]
  4119ad:	mov    rsi,r13
  4119b0:	call   QWORD PTR [rax+0x30]
  4119b3:	mov    rax,QWORD PTR [rbx+0x10]
  4119b7:	test   rax,rax
  4119ba:	je     4119e0 <strcmp@plt+0xe228>
  4119bc:	mov    rdx,QWORD PTR [rbx+0x18]
  4119c0:	test   rdx,rdx
  4119c3:	je     411a30 <strcmp@plt+0xe278>
  4119c5:	mov    rbx,rax
  4119c8:	mov    QWORD PTR [r14],rdx
  4119cb:	add    r14,0x8
  4119cf:	cmp    QWORD PTR [rbx+0x8],0x0
  4119d4:	jne    411957 <strcmp@plt+0xe19f>
  4119d6:	mov    rax,QWORD PTR [rbx+0x10]
  4119da:	test   rax,rax
  4119dd:	jne    4119bc <strcmp@plt+0xe204>
  4119df:	nop
  4119e0:	mov    rbx,QWORD PTR [rbx+0x18]
  4119e4:	test   rbx,rbx
  4119e7:	jne    411950 <strcmp@plt+0xe198>
  4119ed:	cmp    r14,QWORD PTR [rsp+0x8]
  4119f2:	je     411a01 <strcmp@plt+0xe249>
  4119f4:	mov    rbx,QWORD PTR [r14-0x8]
  4119f8:	test   rbx,rbx
  4119fb:	jne    411bfb <strcmp@plt+0xe443>
  411a01:	mov    rax,QWORD PTR [rbp+0x10]
  411a05:	test   rax,rax
  411a08:	je     411a38 <strcmp@plt+0xe280>
  411a0a:	mov    rdx,QWORD PTR [rbp+0x18]
  411a0e:	test   rdx,rdx
  411a11:	je     411ae0 <strcmp@plt+0xe328>
  411a17:	mov    QWORD PTR [r12],rdx
  411a1b:	mov    rbp,rax
  411a1e:	add    r12,0x8
  411a22:	jmp    411930 <strcmp@plt+0xe178>
  411a27:	nop    WORD PTR [rax+rax*1+0x0]
  411a30:	mov    rbx,rax
  411a33:	jmp    411950 <strcmp@plt+0xe198>
  411a38:	mov    rbp,QWORD PTR [rbp+0x18]
  411a3c:	test   rbp,rbp
  411a3f:	jne    411930 <strcmp@plt+0xe178>
  411a45:	cmp    r12,QWORD PTR [rsp+0x20]
  411a4a:	je     411a5a <strcmp@plt+0xe2a2>
  411a4c:	mov    rbp,QWORD PTR [r12-0x8]
  411a51:	test   rbp,rbp
  411a54:	jne    411c04 <strcmp@plt+0xe44c>
  411a5a:	mov    rax,QWORD PTR [rsp+0x18]
  411a5f:	mov    rax,QWORD PTR [rax+0x8]
  411a63:	cmp    QWORD PTR [rsp+0x10],rax
  411a68:	mov    QWORD PTR [rsp+0x18],rax
  411a6d:	jne    41190f <strcmp@plt+0xe157>
  411a73:	mov    rdi,QWORD PTR [rsp+0x10]
  411a78:	call   42dac0 <strcmp@plt+0x2a308>
  411a7d:	mov    r11d,DWORD PTR [r15+0x80]
  411a84:	test   r11d,r11d
  411a87:	jne    411c12 <strcmp@plt+0xe45a>
  411a8d:	mov    esi,0x1
  411a92:	mov    rdi,r15
  411a95:	call   40d690 <strcmp@plt+0x9ed8>
  411a9a:	mov    rsi,QWORD PTR [rsp+0x38]
  411a9f:	mov    rdi,QWORD PTR [rsp+0x68]
  411aa4:	call   40be90 <strcmp@plt+0x86d8>
  411aa9:	mov    rax,QWORD PTR [rsp+0x898]
  411ab1:	xor    rax,QWORD PTR fs:0x28
  411aba:	jne    411c0d <strcmp@plt+0xe455>
  411ac0:	mov    rsi,QWORD PTR [rsp+0x40]
  411ac5:	mov    rdi,QWORD PTR [rsp+0x68]
  411aca:	add    rsp,0x8a8
  411ad1:	pop    rbx
  411ad2:	pop    rbp
  411ad3:	pop    r12
  411ad5:	pop    r13
  411ad7:	pop    r14
  411ad9:	pop    r15
  411adb:	jmp    40be90 <strcmp@plt+0x86d8>
  411ae0:	mov    rbp,rax
  411ae3:	jmp    411930 <strcmp@plt+0xe178>
  411ae8:	lea    rsi,[rip+0x38579]        # 44a068 <strcmp@plt+0x468b0>
  411aef:	mov    edi,0x5
  411af4:	xor    eax,eax
  411af6:	call   4306a0 <strcmp@plt+0x2cee8>
  411afb:	mov    rdi,QWORD PTR [r15+0x60]
  411aff:	mov    edx,DWORD PTR [rdi+0x18]
  411b02:	test   edx,edx
  411b04:	je     4117d8 <strcmp@plt+0xe020>
  411b0a:	mov    rax,QWORD PTR [rsp+0x10]
  411b0f:	mov    r13d,DWORD PTR [rax]
  411b12:	test   r13d,r13d
  411b15:	jle    411b35 <strcmp@plt+0xe37d>
  411b17:	lea    rdx,[rip+0x3873b]        # 44a259 <strcmp@plt+0x46aa1>
  411b1e:	lea    rsi,[rip+0x3851b]        # 44a040 <strcmp@plt+0x46888>
  411b25:	mov    edi,0x5
  411b2a:	xor    eax,eax
  411b2c:	call   4306a0 <strcmp@plt+0x2cee8>
  411b31:	mov    rdi,QWORD PTR [r15+0x60]
  411b35:	mov    edx,0x5
  411b3a:	mov    rsi,rbx
  411b3d:	call   42d820 <strcmp@plt+0x2a068>
  411b42:	mov    rax,QWORD PTR [rsp+0x10]
  411b47:	mov    r12d,DWORD PTR [rax]
  411b4a:	test   r12d,r12d
  411b4d:	jle    4117d8 <strcmp@plt+0xe020>
  411b53:	lea    rsi,[rip+0x3850e]        # 44a068 <strcmp@plt+0x468b0>
  411b5a:	mov    edi,0x5
  411b5f:	xor    eax,eax
  411b61:	call   4306a0 <strcmp@plt+0x2cee8>
  411b66:	jmp    4117d8 <strcmp@plt+0xe020>
  411b6b:	lea    rsi,[rip+0x344c1]        # 446033 <strcmp@plt+0x4287b>
  411b72:	xor    eax,eax
  411b74:	mov    edi,0x5
  411b79:	call   4306a0 <strcmp@plt+0x2cee8>
  411b7e:	mov    rax,QWORD PTR [rsp+0x10]
  411b83:	mov    ecx,DWORD PTR [rax]
  411b85:	test   ecx,ecx
  411b87:	jle    41172c <strcmp@plt+0xdf74>
  411b8d:	lea    rsi,[rip+0x38474]        # 44a008 <strcmp@plt+0x46850>
  411b94:	mov    edi,0x5
  411b99:	xor    eax,eax
  411b9b:	call   4306a0 <strcmp@plt+0x2cee8>
  411ba0:	jmp    41172c <strcmp@plt+0xdf74>
  411ba5:	lea    rdx,[rip+0x386a2]        # 44a24e <strcmp@plt+0x46a96>
  411bac:	lea    rsi,[rip+0x3848d]        # 44a040 <strcmp@plt+0x46888>
  411bb3:	mov    edi,0x5
  411bb8:	xor    eax,eax
  411bba:	call   4306a0 <strcmp@plt+0x2cee8>
  411bbf:	jmp    4117a7 <strcmp@plt+0xdfef>
  411bc4:	lea    rsi,[rip+0x3849d]        # 44a068 <strcmp@plt+0x468b0>
  411bcb:	mov    edi,0x5
  411bd0:	xor    eax,eax
  411bd2:	call   4306a0 <strcmp@plt+0x2cee8>
  411bd7:	jmp    41178b <strcmp@plt+0xdfd3>
  411bdc:	lea    rdx,[rip+0x3865d]        # 44a240 <strcmp@plt+0x46a88>
  411be3:	lea    rsi,[rip+0x38456]        # 44a040 <strcmp@plt+0x46888>
  411bea:	mov    edi,0x5
  411bef:	xor    eax,eax
  411bf1:	call   4306a0 <strcmp@plt+0x2cee8>
  411bf6:	jmp    411764 <strcmp@plt+0xdfac>
  411bfb:	sub    r14,0x8
  411bff:	jmp    411950 <strcmp@plt+0xe198>
  411c04:	sub    r12,0x8
  411c08:	jmp    411930 <strcmp@plt+0xe178>
  411c0d:	call   403460 <__stack_chk_fail@plt>
  411c12:	mov    rax,QWORD PTR [r15+0x78]
  411c16:	mov    r10d,DWORD PTR [rax+0x18]
  411c1a:	test   r10d,r10d
  411c1d:	je     411a9a <strcmp@plt+0xe2e2>
  411c23:	call   42d4e0 <strcmp@plt+0x29d28>
  411c28:	mov    rbx,rax
  411c2b:	mov    QWORD PTR [rsp+0x50],rax
  411c30:	mov    rax,QWORD PTR [r15+0x70]
  411c34:	mov    rsi,rbx
  411c37:	mov    rax,QWORD PTR [rax]
  411c3a:	mov    rdi,QWORD PTR [rax]
  411c3d:	call   42d540 <strcmp@plt+0x29d88>
  411c42:	mov    rax,QWORD PTR [r15+0x70]
  411c46:	mov    rsi,rbx
  411c49:	mov    rax,QWORD PTR [rax]
  411c4c:	mov    rdi,QWORD PTR [rax+0x8]
  411c50:	call   42d540 <strcmp@plt+0x29d88>
  411c55:	mov    rax,QWORD PTR [r15+0x70]
  411c59:	mov    rdx,QWORD PTR [rax]
  411c5c:	mov    rcx,QWORD PTR [rdx+0x10]
  411c60:	mov    rsi,QWORD PTR [rcx]
  411c63:	mov    r9d,DWORD PTR [rsi]
  411c66:	test   r9d,r9d
  411c69:	je     412242 <strcmp@plt+0xea8a>
  411c6f:	xor    ebx,ebx
  411c71:	jmp    411c8d <strcmp@plt+0xe4d5>
  411c73:	nop    DWORD PTR [rax+rax*1+0x0]
  411c78:	mov    rdx,QWORD PTR [rax]
  411c7b:	add    ebx,0x1
  411c7e:	mov    rcx,QWORD PTR [rdx+0x10]
  411c82:	mov    rsi,QWORD PTR [rcx]
  411c85:	cmp    ebx,DWORD PTR [rsi]
  411c87:	je     412242 <strcmp@plt+0xea8a>
  411c8d:	mov    r8,QWORD PTR [rsi+0x10]
  411c91:	lea    edx,[rbx+rbx*1]
  411c94:	mov    edi,ebx
  411c96:	shr    edi,0x4
  411c99:	mov    ecx,edx
  411c9b:	mov    edx,DWORD PTR [r8+rdi*4]
  411c9f:	and    ecx,0x1e
  411ca2:	shrx   edx,edx,ecx
  411ca7:	and    edx,0x3
  411caa:	jne    411c78 <strcmp@plt+0xe4c0>
  411cac:	mov    rdx,QWORD PTR [rsi+0x20]
  411cb0:	mov    eax,ebx
  411cb2:	mov    rsi,QWORD PTR [rsp+0x50]
  411cb7:	mov    rdi,QWORD PTR [rdx+rax*8]
  411cbb:	call   42d540 <strcmp@plt+0x29d88>
  411cc0:	mov    rax,QWORD PTR [r15+0x70]
  411cc4:	jmp    411c78 <strcmp@plt+0xe4c0>
  411cc6:	lea    rsi,[rip+0x37fdb]        # 449ca8 <strcmp@plt+0x464f0>
  411ccd:	xor    eax,eax
  411ccf:	mov    edi,0x3
  411cd4:	call   4306a0 <strcmp@plt+0x2cee8>
  411cd9:	mov    edi,0x2
  411cde:	call   43ae90 <strcmp@plt+0x376d8>
  411ce3:	mov    rax,QWORD PTR [r15+0x48]
  411ce7:	mov    r10d,DWORD PTR [rax+0x18]
  411ceb:	test   r10d,r10d
  411cee:	jne    411663 <strcmp@plt+0xdeab>
  411cf4:	lea    rsi,[rip+0x38005]        # 449d00 <strcmp@plt+0x46548>
  411cfb:	mov    edi,0x1
  411d00:	xor    eax,eax
  411d02:	call   4306a0 <strcmp@plt+0x2cee8>
  411d07:	mov    edi,0x2
  411d0c:	call   43ae90 <strcmp@plt+0x376d8>
  411d11:	jmp    411663 <strcmp@plt+0xdeab>
  411d16:	mov    rax,QWORD PTR [r15+0x78]
  411d1a:	mov    edx,DWORD PTR [rax+0x18]
  411d1d:	cmp    edx,0x1
  411d20:	jle    411d43 <strcmp@plt+0xe58b>
  411d22:	lea    rsi,[rip+0x380c7]        # 449df0 <strcmp@plt+0x46638>
  411d29:	mov    edi,0x2
  411d2e:	xor    eax,eax
  411d30:	call   4306a0 <strcmp@plt+0x2cee8>
  411d35:	xor    eax,eax
  411d37:	call   43f160 <strcmp@plt+0x3b9a8>
  411d3c:	mov    rax,QWORD PTR [r15+0x78]
  411d40:	mov    edx,DWORD PTR [rax+0x18]
  411d43:	cmp    edx,0x1
  411d46:	je     41219e <strcmp@plt+0xe9e6>
  411d4c:	mov    rax,QWORD PTR [r15+0x48]
  411d50:	mov    r9d,DWORD PTR [rax+0x18]
  411d54:	test   r9d,r9d
  411d57:	jle    411d75 <strcmp@plt+0xe5bd>
  411d59:	lea    rsi,[rip+0x38120]        # 449e80 <strcmp@plt+0x466c8>
  411d60:	mov    edi,0x4
  411d65:	xor    eax,eax
  411d67:	call   4306a0 <strcmp@plt+0x2cee8>
  411d6c:	mov    rdi,QWORD PTR [r15+0x48]
  411d70:	call   42da80 <strcmp@plt+0x2a2c8>
  411d75:	mov    r8d,DWORD PTR [r15+0x24]
  411d79:	test   r8d,r8d
  411d7c:	jle    411d99 <strcmp@plt+0xe5e1>
  411d7e:	lea    rsi,[rip+0x3812b]        # 449eb0 <strcmp@plt+0x466f8>
  411d85:	mov    DWORD PTR [r15+0x24],0x0
  411d8d:	mov    edi,0x4
  411d92:	xor    eax,eax
  411d94:	call   4306a0 <strcmp@plt+0x2cee8>
  411d99:	call   42d4e0 <strcmp@plt+0x29d28>
  411d9e:	mov    rbx,rax
  411da1:	mov    QWORD PTR [rsp+0x20],rax
  411da6:	mov    rax,QWORD PTR [r15+0x70]
  411daa:	mov    rsi,rbx
  411dad:	mov    rax,QWORD PTR [rax]
  411db0:	mov    rdi,QWORD PTR [rax]
  411db3:	call   42d540 <strcmp@plt+0x29d88>
  411db8:	mov    rax,QWORD PTR [r15+0x70]
  411dbc:	mov    rsi,rbx
  411dbf:	mov    rax,QWORD PTR [rax]
  411dc2:	mov    rdi,QWORD PTR [rax+0x8]
  411dc6:	call   42d540 <strcmp@plt+0x29d88>
  411dcb:	mov    rax,QWORD PTR [r15+0x70]
  411dcf:	mov    rdx,QWORD PTR [rax]
  411dd2:	mov    rcx,QWORD PTR [rdx+0x10]
  411dd6:	mov    rsi,QWORD PTR [rcx]
  411dd9:	mov    edi,DWORD PTR [rsi]
  411ddb:	test   edi,edi
  411ddd:	je     411e29 <strcmp@plt+0xe671>
  411ddf:	xor    ebx,ebx
  411de1:	mov    r8,QWORD PTR [rsi+0x10]
  411de5:	lea    edx,[rbx+rbx*1]
  411de8:	mov    edi,ebx
  411dea:	shr    edi,0x4
  411ded:	mov    ecx,edx
  411def:	mov    edx,DWORD PTR [r8+rdi*4]
  411df3:	and    ecx,0x1e
  411df6:	shrx   edx,edx,ecx
  411dfb:	and    edx,0x3
  411dfe:	jne    411e18 <strcmp@plt+0xe660>
  411e00:	mov    rdx,QWORD PTR [rsi+0x20]
  411e04:	mov    eax,ebx
  411e06:	mov    rsi,QWORD PTR [rsp+0x20]
  411e0b:	mov    rdi,QWORD PTR [rdx+rax*8]
  411e0f:	call   42d540 <strcmp@plt+0x29d88>
  411e14:	mov    rax,QWORD PTR [r15+0x70]
  411e18:	mov    rdx,QWORD PTR [rax]
  411e1b:	add    ebx,0x1
  411e1e:	mov    rcx,QWORD PTR [rdx+0x10]
  411e22:	mov    rsi,QWORD PTR [rcx]
  411e25:	cmp    DWORD PTR [rsi],ebx
  411e27:	jne    411de1 <strcmp@plt+0xe629>
  411e29:	mov    rcx,QWORD PTR [rdx+0x18]
  411e2d:	mov    rsi,QWORD PTR [rcx]
  411e30:	mov    ecx,DWORD PTR [rsi]
  411e32:	test   ecx,ecx
  411e34:	je     411e80 <strcmp@plt+0xe6c8>
  411e36:	xor    ebx,ebx
  411e38:	mov    r8,QWORD PTR [rsi+0x10]
  411e3c:	lea    edx,[rbx+rbx*1]
  411e3f:	mov    edi,ebx
  411e41:	shr    edi,0x4
  411e44:	mov    ecx,edx
  411e46:	mov    edx,DWORD PTR [r8+rdi*4]
  411e4a:	and    ecx,0x1e
  411e4d:	shrx   edx,edx,ecx
  411e52:	and    edx,0x3
  411e55:	jne    411e6f <strcmp@plt+0xe6b7>
  411e57:	mov    rdx,QWORD PTR [rsi+0x20]
  411e5b:	mov    eax,ebx
  411e5d:	mov    rsi,QWORD PTR [rsp+0x20]
  411e62:	mov    rdi,QWORD PTR [rdx+rax*8]
  411e66:	call   42d540 <strcmp@plt+0x29d88>
  411e6b:	mov    rax,QWORD PTR [r15+0x70]
  411e6f:	mov    rdx,QWORD PTR [rax]
  411e72:	add    ebx,0x1
  411e75:	mov    rcx,QWORD PTR [rdx+0x18]
  411e79:	mov    rsi,QWORD PTR [rcx]
  411e7c:	cmp    DWORD PTR [rsi],ebx
  411e7e:	jne    411e38 <strcmp@plt+0xe680>
  411e80:	mov    rbx,QWORD PTR [rsp+0x20]
  411e85:	mov    rdi,QWORD PTR [rdx+0x20]
  411e89:	mov    rsi,rbx
  411e8c:	call   42d540 <strcmp@plt+0x29d88>
  411e91:	mov    rax,QWORD PTR [r15+0x70]
  411e95:	mov    rsi,rbx
  411e98:	mov    rax,QWORD PTR [rax]
  411e9b:	mov    rdi,QWORD PTR [rax+0x20]
  411e9f:	call   42d540 <strcmp@plt+0x29d88>
  411ea4:	mov    rcx,QWORD PTR [rbx+0x8]
  411ea8:	mov    DWORD PTR [rsp+0x8],0x0
  411eb0:	cmp    rbx,rcx
  411eb3:	mov    QWORD PTR [rsp+0x30],rcx
  411eb8:	je     412109 <strcmp@plt+0xe951>
  411ebe:	lea    rax,[rsp+0x80]
  411ec6:	mov    QWORD PTR [rsp+0x58],r15
  411ecb:	mov    QWORD PTR [rsp+0x50],rax
  411ed0:	lea    rax,[rsp+0x490]
  411ed8:	mov    QWORD PTR [rsp+0x48],rax
  411edd:	mov    rax,QWORD PTR [rsp+0x30]
  411ee2:	mov    rax,QWORD PTR [rax+0x10]
  411ee6:	mov    rax,QWORD PTR [rax]
  411ee9:	test   rax,rax
  411eec:	mov    QWORD PTR [rsp+0x18],rax
  411ef1:	je     4120eb <strcmp@plt+0xe933>
  411ef7:	mov    rax,QWORD PTR [rsp+0x50]
  411efc:	mov    QWORD PTR [rsp+0x28],rax
  411f01:	mov    rax,QWORD PTR [rsp+0x18]
  411f06:	cmp    QWORD PTR [rax+0x8],0x0
  411f0b:	je     412075 <strcmp@plt+0xe8bd>
  411f11:	mov    rax,QWORD PTR [rax+0x28]
  411f15:	mov    rbp,QWORD PTR [rax]
  411f18:	test   rbp,rbp
  411f1b:	je     412075 <strcmp@plt+0xe8bd>
  411f21:	mov    r12,QWORD PTR [rsp+0x48]
  411f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411f30:	cmp    QWORD PTR [rbp+0x8],0x0
  411f35:	je     412031 <strcmp@plt+0xe879>
  411f3b:	mov    rbx,QWORD PTR [rbp+0x28]
  411f3f:	test   rbx,rbx
  411f42:	je     412031 <strcmp@plt+0xe879>
  411f48:	add    DWORD PTR [rsp+0x8],0x1
  411f4d:	mov    eax,DWORD PTR [rsp+0x8]
  411f51:	cmp    eax,0x1
  411f54:	je     411f70 <strcmp@plt+0xe7b8>
  411f56:	lea    rsi,[rip+0x37f7b]        # 449ed8 <strcmp@plt+0x46720>
  411f5d:	xor    eax,eax
  411f5f:	mov    edi,0x2
  411f64:	call   4306a0 <strcmp@plt+0x2cee8>
  411f69:	xor    eax,eax
  411f6b:	call   43f160 <strcmp@plt+0x3b9a8>
  411f70:	mov    rdi,rbx
  411f73:	call   434230 <strcmp@plt+0x30a78>
  411f78:	mov    rax,QWORD PTR [rax+0x28]
  411f7c:	mov    rdi,rbx
  411f7f:	mov    r14,QWORD PTR [rax+0x8]
  411f83:	call   434230 <strcmp@plt+0x30a78>
  411f88:	cmp    r14,QWORD PTR [rax+0x28]
  411f8c:	je     412002 <strcmp@plt+0xe84a>
  411f8e:	xchg   ax,ax
  411f90:	mov    r15,QWORD PTR [r14+0x10]
  411f94:	mov    eax,DWORD PTR [r15+0x18]
  411f98:	test   eax,eax
  411f9a:	je     411ff0 <strcmp@plt+0xe838>
  411f9c:	mov    r13,QWORD PTR [r15+0x8]
  411fa0:	cmp    r13,r15
  411fa3:	jne    411fb9 <strcmp@plt+0xe801>
  411fa5:	jmp    411ff0 <strcmp@plt+0xe838>
  411fa7:	nop    WORD PTR [rax+rax*1+0x0]
  411fb0:	mov    r13,QWORD PTR [r13+0x8]
  411fb4:	cmp    r13,r15
  411fb7:	je     411ff0 <strcmp@plt+0xe838>
  411fb9:	mov    rax,QWORD PTR [r13+0x10]
  411fbd:	mov    BYTE PTR [rax+0xa],0x0
  411fc1:	mov    rax,QWORD PTR [rax]
  411fc4:	cmp    DWORD PTR [rax+0x18],0x3
  411fc8:	jne    411fb0 <strcmp@plt+0xe7f8>
  411fca:	lea    rsi,[rip+0x37f37]        # 449f08 <strcmp@plt+0x46750>
  411fd1:	xor    eax,eax
  411fd3:	mov    edi,0x2
  411fd8:	call   4306a0 <strcmp@plt+0x2cee8>
  411fdd:	xor    eax,eax
  411fdf:	call   43f160 <strcmp@plt+0x3b9a8>
  411fe4:	mov    r13,QWORD PTR [r13+0x8]
  411fe8:	cmp    r13,r15
  411feb:	jne    411fb9 <strcmp@plt+0xe801>
  411fed:	nop    DWORD PTR [rax]
  411ff0:	mov    rdi,rbx
  411ff3:	mov    r14,QWORD PTR [r14+0x8]
  411ff7:	call   434230 <strcmp@plt+0x30a78>
  411ffc:	cmp    r14,QWORD PTR [rax+0x28]
  412000:	jne    411f90 <strcmp@plt+0xe7d8>
  412002:	lea    rsi,[rip+0x37f4f]        # 449f58 <strcmp@plt+0x467a0>
  412009:	mov    edi,0x2
  41200e:	xor    eax,eax
  412010:	call   4306a0 <strcmp@plt+0x2cee8>
  412015:	mov    rax,QWORD PTR [rsp+0x38]
  41201a:	mov    rdi,QWORD PTR [rax+0x8]
  41201e:	call   42a990 <strcmp@plt+0x271d8>
  412023:	mov    rax,QWORD PTR [rsp+0x40]
  412028:	mov    rdi,QWORD PTR [rax+0x8]
  41202c:	call   42a990 <strcmp@plt+0x271d8>
  412031:	mov    rax,QWORD PTR [rbp+0x10]
  412035:	test   rax,rax
  412038:	je     412053 <strcmp@plt+0xe89b>
  41203a:	mov    rdx,QWORD PTR [rbp+0x18]
  41203e:	test   rdx,rdx
  412041:	je     4120ab <strcmp@plt+0xe8f3>
  412043:	mov    QWORD PTR [r12],rdx
  412047:	mov    rbp,rax
  41204a:	add    r12,0x8
  41204e:	jmp    411f30 <strcmp@plt+0xe778>
  412053:	mov    rbp,QWORD PTR [rbp+0x18]
  412057:	test   rbp,rbp
  41205a:	jne    411f30 <strcmp@plt+0xe778>
  412060:	cmp    r12,QWORD PTR [rsp+0x48]
  412065:	je     412075 <strcmp@plt+0xe8bd>
  412067:	mov    rbp,QWORD PTR [r12-0x8]
  41206c:	test   rbp,rbp
  41206f:	jne    412195 <strcmp@plt+0xe9dd>
  412075:	mov    rcx,QWORD PTR [rsp+0x18]
  41207a:	mov    rax,QWORD PTR [rcx+0x10]
  41207e:	test   rax,rax
  412081:	je     4120b3 <strcmp@plt+0xe8fb>
  412083:	mov    rdx,QWORD PTR [rcx+0x18]
  412087:	test   rdx,rdx
  41208a:	je     412180 <strcmp@plt+0xe9c8>
  412090:	mov    rcx,QWORD PTR [rsp+0x28]
  412095:	mov    QWORD PTR [rsp+0x18],rax
  41209a:	lea    rax,[rcx+0x8]
  41209e:	mov    QWORD PTR [rcx],rdx
  4120a1:	mov    QWORD PTR [rsp+0x28],rax
  4120a6:	jmp    411f01 <strcmp@plt+0xe749>
  4120ab:	mov    rbp,rax
  4120ae:	jmp    411f30 <strcmp@plt+0xe778>
  4120b3:	mov    rax,QWORD PTR [rsp+0x18]
  4120b8:	mov    rax,QWORD PTR [rax+0x18]
  4120bc:	test   rax,rax
  4120bf:	mov    QWORD PTR [rsp+0x18],rax
  4120c4:	jne    411f01 <strcmp@plt+0xe749>
  4120ca:	mov    rax,QWORD PTR [rsp+0x28]
  4120cf:	mov    rcx,QWORD PTR [rsp+0x50]
  4120d4:	cmp    rax,rcx
  4120d7:	je     4120eb <strcmp@plt+0xe933>
  4120d9:	mov    rax,QWORD PTR [rax-0x8]
  4120dd:	test   rax,rax
  4120e0:	mov    QWORD PTR [rsp+0x18],rax
  4120e5:	jne    41218a <strcmp@plt+0xe9d2>
  4120eb:	mov    rax,QWORD PTR [rsp+0x30]
  4120f0:	mov    rax,QWORD PTR [rax+0x8]
  4120f4:	cmp    QWORD PTR [rsp+0x20],rax
  4120f9:	mov    QWORD PTR [rsp+0x30],rax
  4120fe:	jne    411edd <strcmp@plt+0xe725>
  412104:	mov    r15,QWORD PTR [rsp+0x58]
  412109:	mov    rdi,QWORD PTR [rsp+0x20]
  41210e:	call   42dac0 <strcmp@plt+0x2a308>
  412113:	cmp    DWORD PTR [r15],0x3
  412117:	jne    41171d <strcmp@plt+0xdf65>
  41211d:	mov    rdi,QWORD PTR [r15+0x70]
  412121:	mov    esi,0x2
  412126:	call   408d70 <strcmp@plt+0x55b8>
  41212b:	cmp    eax,0x1
  41212e:	jle    41214a <strcmp@plt+0xe992>
  412130:	lea    rsi,[rip+0x37e41]        # 449f78 <strcmp@plt+0x467c0>
  412137:	xor    eax,eax
  412139:	mov    edi,0x2
  41213e:	call   4306a0 <strcmp@plt+0x2cee8>
  412143:	xor    eax,eax
  412145:	call   43f160 <strcmp@plt+0x3b9a8>
  41214a:	mov    rdi,QWORD PTR [r15+0x70]
  41214e:	mov    esi,0xa
  412153:	call   408d70 <strcmp@plt+0x55b8>
  412158:	cmp    eax,0x1
  41215b:	jle    41171d <strcmp@plt+0xdf65>
  412161:	lea    rsi,[rip+0x37e10]        # 449f78 <strcmp@plt+0x467c0>
  412168:	xor    eax,eax
  41216a:	mov    edi,0x2
  41216f:	call   4306a0 <strcmp@plt+0x2cee8>
  412174:	xor    eax,eax
  412176:	call   43f160 <strcmp@plt+0x3b9a8>
  41217b:	jmp    41171d <strcmp@plt+0xdf65>
  412180:	mov    QWORD PTR [rsp+0x18],rax
  412185:	jmp    411f01 <strcmp@plt+0xe749>
  41218a:	sub    QWORD PTR [rsp+0x28],0x8
  412190:	jmp    411f01 <strcmp@plt+0xe749>
  412195:	sub    r12,0x8
  412199:	jmp    411f30 <strcmp@plt+0xe778>
  41219e:	mov    rax,QWORD PTR [rax+0x8]
  4121a2:	mov    rax,QWORD PTR [rax+0x10]
  4121a6:	mov    rdi,QWORD PTR [rax]
  4121a9:	call   4251c0 <strcmp@plt+0x21a08>
  4121ae:	cmp    ax,0x2
  4121b2:	je     411d4c <strcmp@plt+0xe594>
  4121b8:	lea    rsi,[rip+0x37c79]        # 449e38 <strcmp@plt+0x46680>
  4121bf:	xor    eax,eax
  4121c1:	mov    edi,0x2
  4121c6:	call   4306a0 <strcmp@plt+0x2cee8>
  4121cb:	xor    eax,eax
  4121cd:	call   43f160 <strcmp@plt+0x3b9a8>
  4121d2:	jmp    411d4c <strcmp@plt+0xe594>
  4121d7:	mov    rax,0x468e3c
  4121de:	mov    ebp,DWORD PTR [rax]
  4121e0:	mov    QWORD PTR [rsp+0x10],rax
  4121e5:	test   ebp,ebp
  4121e7:	jle    411641 <strcmp@plt+0xde89>
  4121ed:	lea    rsi,[rip+0x38023]        # 44a217 <strcmp@plt+0x46a5f>
  4121f4:	xor    eax,eax
  4121f6:	mov    edi,0x5
  4121fb:	call   4306a0 <strcmp@plt+0x2cee8>
  412200:	mov    eax,DWORD PTR [r15]
  412203:	jmp    41161f <strcmp@plt+0xde67>
  412208:	lea    rdx,[rip+0x36e59]        # 449068 <strcmp@plt+0x458b0>
  41220f:	lea    rsi,[rip+0x3809a]        # 44a2b0 <strcmp@plt+0x46af8>
  412216:	lea    rdi,[rip+0x37eb3]        # 44a0d0 <strcmp@plt+0x46918>
  41221d:	call   434880 <strcmp@plt+0x310c8>
  412222:	lea    rsi,[rip+0x37b2f]        # 449d58 <strcmp@plt+0x465a0>
  412229:	mov    edi,0x3
  41222e:	call   4306a0 <strcmp@plt+0x2cee8>
  412233:	mov    edi,0x2
  412238:	call   43ae90 <strcmp@plt+0x376d8>
  41223d:	jmp    411705 <strcmp@plt+0xdf4d>
  412242:	mov    rcx,QWORD PTR [rdx+0x18]
  412246:	mov    rsi,QWORD PTR [rcx]
  412249:	mov    r8d,DWORD PTR [rsi]
  41224c:	test   r8d,r8d
  41224f:	je     4122a2 <strcmp@plt+0xeaea>
  412251:	xor    ebx,ebx
  412253:	jmp    412269 <strcmp@plt+0xeab1>
  412255:	nop    DWORD PTR [rax]
  412258:	mov    rdx,QWORD PTR [rax]
  41225b:	add    ebx,0x1
  41225e:	mov    rcx,QWORD PTR [rdx+0x18]
  412262:	mov    rsi,QWORD PTR [rcx]
  412265:	cmp    ebx,DWORD PTR [rsi]
  412267:	je     4122a2 <strcmp@plt+0xeaea>
  412269:	mov    r8,QWORD PTR [rsi+0x10]
  41226d:	lea    edx,[rbx+rbx*1]
  412270:	mov    edi,ebx
  412272:	shr    edi,0x4
  412275:	mov    ecx,edx
  412277:	mov    edx,DWORD PTR [r8+rdi*4]
  41227b:	and    ecx,0x1e
  41227e:	shrx   edx,edx,ecx
  412283:	and    edx,0x3
  412286:	jne    412258 <strcmp@plt+0xeaa0>
  412288:	mov    rdx,QWORD PTR [rsi+0x20]
  41228c:	mov    eax,ebx
  41228e:	mov    rsi,QWORD PTR [rsp+0x50]
  412293:	mov    rdi,QWORD PTR [rdx+rax*8]
  412297:	call   42d540 <strcmp@plt+0x29d88>
  41229c:	mov    rax,QWORD PTR [r15+0x70]
  4122a0:	jmp    412258 <strcmp@plt+0xeaa0>
  4122a2:	mov    rbx,QWORD PTR [rsp+0x50]
  4122a7:	mov    rdi,QWORD PTR [rdx+0x20]
  4122ab:	mov    rsi,rbx
  4122ae:	call   42d540 <strcmp@plt+0x29d88>
  4122b3:	mov    rax,QWORD PTR [r15+0x70]
  4122b7:	mov    rsi,rbx
  4122ba:	mov    rax,QWORD PTR [rax]
  4122bd:	mov    rdi,QWORD PTR [rax+0x20]
  4122c1:	call   42d540 <strcmp@plt+0x29d88>
  4122c6:	mov    rcx,QWORD PTR [rbx+0x8]
  4122ca:	cmp    rbx,rcx
  4122cd:	mov    QWORD PTR [rsp+0x60],rcx
  4122d2:	je     4125dc <strcmp@plt+0xee24>
  4122d8:	lea    rax,[rsp+0x80]
  4122e0:	mov    QWORD PTR [rsp+0x70],rax
  4122e5:	lea    rax,[rsp+0x490]
  4122ed:	mov    QWORD PTR [rsp+0x78],rax
  4122f2:	mov    rax,QWORD PTR [rsp+0x60]
  4122f7:	mov    rax,QWORD PTR [rax+0x10]
  4122fb:	mov    rax,QWORD PTR [rax]
  4122fe:	test   rax,rax
  412301:	mov    QWORD PTR [rsp+0x48],rax
  412306:	je     4125c3 <strcmp@plt+0xee0b>
  41230c:	mov    rax,QWORD PTR [rsp+0x70]
  412311:	mov    QWORD PTR [rsp+0x58],rax
  412316:	mov    rax,QWORD PTR [rsp+0x48]
  41231b:	cmp    QWORD PTR [rax+0x8],0x0
  412320:	je     412548 <strcmp@plt+0xed90>
  412326:	mov    rax,QWORD PTR [rax+0x28]
  41232a:	mov    rax,QWORD PTR [rax]
  41232d:	test   rax,rax
  412330:	mov    QWORD PTR [rsp+0x28],rax
  412335:	je     412548 <strcmp@plt+0xed90>
  41233b:	mov    rax,QWORD PTR [rsp+0x78]
  412340:	mov    QWORD PTR [rsp+0x30],rax
  412345:	nop    DWORD PTR [rax]
  412348:	mov    rax,QWORD PTR [rsp+0x28]
  41234d:	cmp    QWORD PTR [rax+0x8],0x0
  412352:	je     4124d5 <strcmp@plt+0xed1d>
  412358:	mov    rax,QWORD PTR [rsp+0x28]
  41235d:	mov    rbx,QWORD PTR [rax+0x28]
  412361:	test   rbx,rbx
  412364:	je     4124d5 <strcmp@plt+0xed1d>
  41236a:	mov    rdi,rbx
  41236d:	call   434230 <strcmp@plt+0x30a78>
  412372:	mov    r14,rax
  412375:	mov    QWORD PTR [rsp+0x20],rax
  41237a:	mov    rax,0x474860
  412381:	mov    esi,0x8
  412386:	mov    rdi,rbx
  412389:	mov    rcx,QWORD PTR [rax]
  41238c:	mov    rax,0x474858
  412393:	mov    rdx,QWORD PTR [rax]
  412396:	call   43b1d0 <strcmp@plt+0x37a18>
  41239b:	mov    rax,QWORD PTR [r14+0x28]
  41239f:	mov    rcx,QWORD PTR [rax+0x8]
  4123a3:	cmp    rax,rcx
  4123a6:	mov    QWORD PTR [rsp+0x18],rcx
  4123ab:	je     4124d5 <strcmp@plt+0xed1d>
  4123b1:	nop    DWORD PTR [rax+0x0]
  4123b8:	mov    rax,QWORD PTR [rsp+0x18]
  4123bd:	mov    rax,QWORD PTR [rax+0x10]
  4123c1:	mov    edi,DWORD PTR [rax+0x18]
  4123c4:	mov    QWORD PTR [rsp+0x10],rax
  4123c9:	test   edi,edi
  4123cb:	je     4124b8 <strcmp@plt+0xed00>
  4123d1:	mov    rcx,QWORD PTR [rsp+0x10]
  4123d6:	mov    r12,QWORD PTR [rcx+0x8]
  4123da:	mov    rbp,QWORD PTR [r12+0x10]
  4123df:	mov    rax,QWORD PTR [rbp+0x0]
  4123e3:	mov    esi,DWORD PTR [rax+0x18]
  4123e6:	test   esi,esi
  4123e8:	je     4124b8 <strcmp@plt+0xed00>
  4123ee:	cmp    rcx,r12
  4123f1:	je     4124b8 <strcmp@plt+0xed00>
  4123f7:	mov    QWORD PTR [rsp+0x8],r12
  4123fc:	nop    DWORD PTR [rax+0x0]
  412400:	cmp    BYTE PTR [rbp+0x9],0x0
  412404:	je     412491 <strcmp@plt+0xecd9>
  41240a:	mov    rax,QWORD PTR [r15+0x78]
  41240e:	mov    r14,QWORD PTR [rax+0x8]
  412412:	cmp    rax,r14
  412415:	je     412491 <strcmp@plt+0xecd9>
  412417:	nop    WORD PTR [rax+rax*1+0x0]
  412420:	mov    r13,QWORD PTR [r14+0x10]
  412424:	mov    edi,0x18
  412429:	call   4347a0 <strcmp@plt+0x30fe8>
  41242e:	mov    esi,0x4
  412433:	mov    QWORD PTR [rax],rbx
  412436:	mov    QWORD PTR [rax+0x8],rbp
  41243a:	mov    QWORD PTR [rax+0x10],r13
  41243e:	mov    rdi,rbx
  412441:	mov    r12,rax
  412444:	call   434480 <strcmp@plt+0x30cc8>
  412449:	lea    r8,[rip+0xffffffffffffae50]        # 40d2a0 <strcmp@plt+0x9ae8>
  412450:	lea    rdx,[rip+0xffffffffffffc3f9]        # 40e850 <strcmp@plt+0xb098>
  412457:	mov    rcx,r12
  41245a:	mov    rsi,r15
  41245d:	mov    edi,0x8
  412462:	call   43af50 <strcmp@plt+0x37798>
  412467:	mov    rdx,rax
  41246a:	mov    r12,rax
  41246d:	mov    rax,0x474858
  412474:	mov    rsi,rbx
  412477:	mov    rdi,QWORD PTR [rax]
  41247a:	call   43afa0 <strcmp@plt+0x377e8>
  41247f:	mov    rdi,r12
  412482:	call   40e850 <strcmp@plt+0xb098>
  412487:	mov    r14,QWORD PTR [r14+0x8]
  41248b:	cmp    r14,QWORD PTR [r15+0x78]
  41248f:	jne    412420 <strcmp@plt+0xec68>
  412491:	mov    rax,QWORD PTR [rsp+0x8]
  412496:	mov    rax,QWORD PTR [rax+0x8]
  41249a:	cmp    QWORD PTR [rsp+0x10],rax
  41249f:	mov    QWORD PTR [rsp+0x8],rax
  4124a4:	je     4124b8 <strcmp@plt+0xed00>
  4124a6:	mov    rax,QWORD PTR [rsp+0x8]
  4124ab:	mov    rbp,QWORD PTR [rax+0x10]
  4124af:	jmp    412400 <strcmp@plt+0xec48>
  4124b4:	nop    DWORD PTR [rax+0x0]
  4124b8:	mov    rax,QWORD PTR [rsp+0x18]
  4124bd:	mov    rcx,QWORD PTR [rsp+0x20]
  4124c2:	mov    rax,QWORD PTR [rax+0x8]
  4124c6:	cmp    rax,QWORD PTR [rcx+0x28]
  4124ca:	mov    QWORD PTR [rsp+0x18],rax
  4124cf:	jne    4123b8 <strcmp@plt+0xec00>
  4124d5:	mov    rax,QWORD PTR [rsp+0x28]
  4124da:	mov    rax,QWORD PTR [rax+0x10]
  4124de:	test   rax,rax
  4124e1:	je     412510 <strcmp@plt+0xed58>
  4124e3:	mov    rcx,QWORD PTR [rsp+0x28]
  4124e8:	mov    rdx,QWORD PTR [rcx+0x18]
  4124ec:	test   rdx,rdx
  4124ef:	je     41257e <strcmp@plt+0xedc6>
  4124f5:	mov    rcx,QWORD PTR [rsp+0x30]
  4124fa:	mov    QWORD PTR [rsp+0x28],rax
  4124ff:	lea    rax,[rcx+0x8]
  412503:	mov    QWORD PTR [rcx],rdx
  412506:	mov    QWORD PTR [rsp+0x30],rax
  41250b:	jmp    412348 <strcmp@plt+0xeb90>
  412510:	mov    rax,QWORD PTR [rsp+0x28]
  412515:	mov    rax,QWORD PTR [rax+0x18]
  412519:	test   rax,rax
  41251c:	mov    QWORD PTR [rsp+0x28],rax
  412521:	jne    412348 <strcmp@plt+0xeb90>
  412527:	mov    rax,QWORD PTR [rsp+0x30]
  41252c:	mov    rcx,QWORD PTR [rsp+0x78]
  412531:	cmp    rax,rcx
  412534:	je     412548 <strcmp@plt+0xed90>
  412536:	mov    rax,QWORD PTR [rax-0x8]
  41253a:	test   rax,rax
  41253d:	mov    QWORD PTR [rsp+0x28],rax
  412542:	jne    4125fa <strcmp@plt+0xee42>
  412548:	mov    rcx,QWORD PTR [rsp+0x48]
  41254d:	mov    rax,QWORD PTR [rcx+0x10]
  412551:	test   rax,rax
  412554:	je     412588 <strcmp@plt+0xedd0>
  412556:	mov    rdx,QWORD PTR [rcx+0x18]
  41255a:	test   rdx,rdx
  41255d:	je     4125f0 <strcmp@plt+0xee38>
  412563:	mov    rcx,QWORD PTR [rsp+0x58]
  412568:	mov    QWORD PTR [rsp+0x48],rax
  41256d:	lea    rax,[rcx+0x8]
  412571:	mov    QWORD PTR [rcx],rdx
  412574:	mov    QWORD PTR [rsp+0x58],rax
  412579:	jmp    412316 <strcmp@plt+0xeb5e>
  41257e:	mov    QWORD PTR [rsp+0x28],rax
  412583:	jmp    412348 <strcmp@plt+0xeb90>
  412588:	mov    rax,QWORD PTR [rsp+0x48]
  41258d:	mov    rax,QWORD PTR [rax+0x18]
  412591:	test   rax,rax
  412594:	mov    QWORD PTR [rsp+0x48],rax
  412599:	jne    412316 <strcmp@plt+0xeb5e>
  41259f:	mov    rax,QWORD PTR [rsp+0x58]
  4125a4:	mov    rcx,QWORD PTR [rsp+0x70]
  4125a9:	cmp    rax,rcx
  4125ac:	je     4125c3 <strcmp@plt+0xee0b>
  4125ae:	mov    rcx,rax
  4125b1:	sub    rax,0x8
  4125b5:	mov    rcx,QWORD PTR [rcx-0x8]
  4125b9:	test   rcx,rcx
  4125bc:	mov    QWORD PTR [rsp+0x48],rcx
  4125c1:	jne    412605 <strcmp@plt+0xee4d>
  4125c3:	mov    rax,QWORD PTR [rsp+0x60]
  4125c8:	mov    rax,QWORD PTR [rax+0x8]
  4125cc:	cmp    QWORD PTR [rsp+0x50],rax
  4125d1:	mov    QWORD PTR [rsp+0x60],rax
  4125d6:	jne    4122f2 <strcmp@plt+0xeb3a>
  4125dc:	mov    rdi,QWORD PTR [rsp+0x50]
  4125e1:	call   42dac0 <strcmp@plt+0x2a308>
  4125e6:	jmp    411a9a <strcmp@plt+0xe2e2>
  4125eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4125f0:	mov    QWORD PTR [rsp+0x48],rax
  4125f5:	jmp    412316 <strcmp@plt+0xeb5e>
  4125fa:	sub    QWORD PTR [rsp+0x30],0x8
  412600:	jmp    412348 <strcmp@plt+0xeb90>
  412605:	mov    QWORD PTR [rsp+0x58],rax
  41260a:	jmp    412316 <strcmp@plt+0xeb5e>
  41260f:	nop
  412610:	push   r14
  412612:	push   r13
  412614:	mov    r14,rdi
  412617:	push   r12
  412619:	push   rbp
  41261a:	mov    edi,0x20
  41261f:	push   rbx
  412620:	mov    r13d,esi
  412623:	mov    r12,rdx
  412626:	mov    ebp,ecx
  412628:	call   434790 <strcmp@plt+0x30fd8>
  41262d:	test   rax,rax
  412630:	mov    rbx,rax
  412633:	je     412660 <strcmp@plt+0xeea8>
  412635:	mov    rdi,r14
  412638:	call   424b80 <strcmp@plt+0x213c8>
  41263d:	mov    BYTE PTR [rbx+0x8],r13b
  412641:	mov    QWORD PTR [rbx],rax
  412644:	mov    rdi,r12
  412647:	call   403730 <strdup@plt>
  41264c:	mov    BYTE PTR [rbx+0x18],bpl
  412650:	mov    QWORD PTR [rbx+0x10],rax
  412654:	mov    rax,rbx
  412657:	pop    rbx
  412658:	pop    rbp
  412659:	pop    r12
  41265b:	pop    r13
  41265d:	pop    r14
  41265f:	ret    
  412660:	lea    rsi,[rip+0x37a31]        # 44a098 <strcmp@plt+0x468e0>
  412667:	mov    edi,0x3
  41266c:	xor    eax,eax
  41266e:	call   4306a0 <strcmp@plt+0x2cee8>
  412673:	jmp    412654 <strcmp@plt+0xee9c>
  412675:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41267f:	nop
  412680:	mov    eax,0x1
  412685:	ret    
  412686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412690:	mov    eax,0x1
  412695:	ret    
  412696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4126a0:	mov    eax,0x1
  4126a5:	ret    
  4126a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4126b0:	xor    eax,eax
  4126b2:	ret    
  4126b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4126be:	xchg   ax,ax
  4126c0:	sub    rsp,0x8
  4126c4:	mov    edi,0x48
  4126c9:	call   434790 <strcmp@plt+0x30fd8>
  4126ce:	add    rsp,0x8
  4126d2:	ret    
  4126d3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4126de:	xchg   ax,ax
  4126e0:	push   rbx
  4126e1:	mov    rbx,rdi
  4126e4:	mov    rdi,QWORD PTR [rdi]
  4126e7:	call   4037b0 <free@plt>
  4126ec:	mov    rdi,QWORD PTR [rbx+0x10]
  4126f0:	call   42dac0 <strcmp@plt+0x2a308>
  4126f5:	mov    rdi,rbx
  4126f8:	pop    rbx
  4126f9:	jmp    4037b0 <free@plt>
  4126fe:	xchg   ax,ax
  412700:	push   rbx
  412701:	mov    rbx,rdi
  412704:	mov    rdi,QWORD PTR [rdi+0x8]
  412708:	call   424750 <strcmp@plt+0x20f98>
  41270d:	mov    rdi,QWORD PTR [rbx]
  412710:	call   4037b0 <free@plt>
  412715:	mov    rdi,QWORD PTR [rbx+0x18]
  412719:	call   4037b0 <free@plt>
  41271e:	mov    rdi,rbx
  412721:	pop    rbx
  412722:	jmp    4037b0 <free@plt>
  412727:	nop    WORD PTR [rax+rax*1+0x0]
  412730:	push   r15
  412732:	push   r14
  412734:	push   r13
  412736:	push   r12
  412738:	mov    r13,rdi
  41273b:	push   rbp
  41273c:	push   rbx
  41273d:	mov    r12d,esi
  412740:	sub    rsp,0x28
  412744:	mov    rax,QWORD PTR fs:0x28
  41274d:	mov    QWORD PTR [rsp+0x18],rax
  412752:	xor    eax,eax
  412754:	mov    rax,QWORD PTR [rdi+0x28]
  412758:	lea    rcx,[rsp+0x14]
  41275d:	mov    DWORD PTR [rsp+0x10],0x0
  412765:	mov    DWORD PTR [rsp+0x14],0x0
  41276d:	mov    QWORD PTR [rsp],rcx
  412771:	lea    rcx,[rsp+0x10]
  412776:	mov    rbp,QWORD PTR [rax+0x8]
  41277a:	mov    QWORD PTR [rsp+0x8],rcx
  41277f:	cmp    rbp,rax
  412782:	je     41282e <strcmp@plt+0xf076>
  412788:	nop    DWORD PTR [rax+rax*1+0x0]
  412790:	mov    r15,QWORD PTR [rbp+0x10]
  412794:	mov    rdx,QWORD PTR [rsp]
  412798:	mov    rsi,QWORD PTR [rsp+0x8]
  41279d:	mov    rdi,r15
  4127a0:	call   42a230 <strcmp@plt+0x26a78>
  4127a5:	mov    eax,DWORD PTR [rsp+0x10]
  4127a9:	test   eax,eax
  4127ab:	je     412820 <strcmp@plt+0xf068>
  4127ad:	cmp    eax,0x1
  4127b0:	je     412810 <strcmp@plt+0xf058>
  4127b2:	mov    rbx,QWORD PTR [r15+0x8]
  4127b6:	cmp    rbx,r15
  4127b9:	jne    4127c9 <strcmp@plt+0xf011>
  4127bb:	jmp    412820 <strcmp@plt+0xf068>
  4127bd:	nop    DWORD PTR [rax]
  4127c0:	mov    rbx,QWORD PTR [rbx+0x8]
  4127c4:	cmp    rbx,r15
  4127c7:	je     412820 <strcmp@plt+0xf068>
  4127c9:	mov    r14,QWORD PTR [rbx+0x10]
  4127cd:	cmp    BYTE PTR [r14+0x8],0x0
  4127d2:	je     4127c0 <strcmp@plt+0xf008>
  4127d4:	mov    rdi,QWORD PTR [r14]
  4127d7:	call   425050 <strcmp@plt+0x21898>
  4127dc:	mov    rdi,rax
  4127df:	call   4251c0 <strcmp@plt+0x21a08>
  4127e4:	movzx  eax,ax
  4127e7:	cmp    r12d,eax
  4127ea:	jne    4127c0 <strcmp@plt+0xf008>
  4127ec:	mov    rax,r14
  4127ef:	mov    rcx,QWORD PTR [rsp+0x18]
  4127f4:	xor    rcx,QWORD PTR fs:0x28
  4127fd:	jne    412832 <strcmp@plt+0xf07a>
  4127ff:	add    rsp,0x28
  412803:	pop    rbx
  412804:	pop    rbp
  412805:	pop    r12
  412807:	pop    r13
  412809:	pop    r14
  41280b:	pop    r15
  41280d:	ret    
  41280e:	xchg   ax,ax
  412810:	cmp    DWORD PTR [rsp+0x14],r12d
  412815:	je     4127b2 <strcmp@plt+0xeffa>
  412817:	nop    WORD PTR [rax+rax*1+0x0]
  412820:	mov    rbp,QWORD PTR [rbp+0x8]
  412824:	cmp    rbp,QWORD PTR [r13+0x28]
  412828:	jne    412790 <strcmp@plt+0xefd8>
  41282e:	xor    eax,eax
  412830:	jmp    4127ef <strcmp@plt+0xf037>
  412832:	call   403460 <__stack_chk_fail@plt>
  412837:	nop    WORD PTR [rax+rax*1+0x0]
  412840:	push   rbx
  412841:	mov    rax,0x468660
  412848:	cmp    QWORD PTR [rdi+0x8],rax
  41284c:	jne    412880 <strcmp@plt+0xf0c8>
  41284e:	mov    rax,0x468e3c
  412855:	mov    rbx,rdi
  412858:	mov    eax,DWORD PTR [rax]
  41285a:	test   eax,eax
  41285c:	jle    412871 <strcmp@plt+0xf0b9>
  41285e:	lea    rsi,[rip+0x38354]        # 44abb9 <strcmp@plt+0x47401>
  412865:	mov    edi,0x5
  41286a:	xor    eax,eax
  41286c:	call   4306a0 <strcmp@plt+0x2cee8>
  412871:	mov    rdi,rbx
  412874:	pop    rbx
  412875:	jmp    4037b0 <free@plt>
  41287a:	nop    WORD PTR [rax+rax*1+0x0]
  412880:	lea    rdx,[rip+0x37a39]        # 44a2c0 <strcmp@plt+0x46b08>
  412887:	lea    rsi,[rip+0x384da]        # 44ad68 <strcmp@plt+0x475b0>
  41288e:	lea    rdi,[rip+0x3830e]        # 44aba3 <strcmp@plt+0x473eb>
  412895:	call   434880 <strcmp@plt+0x310c8>
  41289a:	nop    WORD PTR [rax+rax*1+0x0]
  4128a0:	push   rbx
  4128a1:	mov    rax,0x468660
  4128a8:	cmp    QWORD PTR [rdi+0x8],rax
  4128ac:	jne    4128f0 <strcmp@plt+0xf138>
  4128ae:	mov    rbx,rdi
  4128b1:	mov    rsi,0x430630
  4128b8:	mov    rdi,QWORD PTR [rdi+0x18]
  4128bc:	call   431200 <strcmp@plt+0x2da48>
  4128c1:	mov    rdi,QWORD PTR [rbx+0x20]
  4128c5:	mov    rsi,0x430670
  4128cc:	call   431200 <strcmp@plt+0x2da48>
  4128d1:	mov    rdi,QWORD PTR [rbx+0x28]
  4128d5:	call   43a5a0 <strcmp@plt+0x36de8>
  4128da:	mov    rdi,QWORD PTR [rbx+0x30]
  4128de:	call   43a5a0 <strcmp@plt+0x36de8>
  4128e3:	mov    rdi,QWORD PTR [rbx+0x38]
  4128e7:	pop    rbx
  4128e8:	jmp    43a5a0 <strcmp@plt+0x36de8>
  4128ed:	nop    DWORD PTR [rax]
  4128f0:	lea    rdx,[rip+0x379c9]        # 44a2c0 <strcmp@plt+0x46b08>
  4128f7:	lea    rsi,[rip+0x3846a]        # 44ad68 <strcmp@plt+0x475b0>
  4128fe:	lea    rdi,[rip+0x3829e]        # 44aba3 <strcmp@plt+0x473eb>
  412905:	call   434880 <strcmp@plt+0x310c8>
  41290a:	nop    WORD PTR [rax+rax*1+0x0]
  412910:	push   rbx
  412911:	mov    rax,0x468660
  412918:	cmp    QWORD PTR [rdi+0x8],rax
  41291c:	jne    4129b8 <strcmp@plt+0xf200>
  412922:	mov    rbx,rdi
  412925:	xor    eax,eax
  412927:	call   431690 <strcmp@plt+0x2ded8>
  41292c:	mov    QWORD PTR [rbx+0x20],rax
  412930:	xor    eax,eax
  412932:	call   431690 <strcmp@plt+0x2ded8>
  412937:	mov    rdi,0x4126e0
  41293e:	mov    QWORD PTR [rbx+0x18],rax
  412942:	call   4397c0 <strcmp@plt+0x36008>
  412947:	mov    rdi,0x412700
  41294e:	mov    QWORD PTR [rbx+0x28],rax
  412952:	call   4397c0 <strcmp@plt+0x36008>
  412957:	mov    QWORD PTR [rbx+0x30],rax
  41295b:	xor    eax,eax
  41295d:	call   439790 <strcmp@plt+0x35fd8>
  412962:	cmp    QWORD PTR [rbx+0x20],0x0
  412967:	mov    QWORD PTR [rbx+0x38],rax
  41296b:	mov    QWORD PTR [rbx+0x40],0x0
  412973:	je     4129b0 <strcmp@plt+0xf1f8>
  412975:	cmp    QWORD PTR [rbx+0x18],0x0
  41297a:	je     4129b0 <strcmp@plt+0xf1f8>
  41297c:	mov    rax,0x468e3c
  412983:	mov    eax,DWORD PTR [rax]
  412985:	test   eax,eax
  412987:	jg     412990 <strcmp@plt+0xf1d8>
  412989:	mov    eax,0x1
  41298e:	pop    rbx
  41298f:	ret    
  412990:	lea    rsi,[rip+0x37951]        # 44a2e8 <strcmp@plt+0x46b30>
  412997:	xor    eax,eax
  412999:	mov    edi,0x5
  41299e:	call   4306a0 <strcmp@plt+0x2cee8>
  4129a3:	mov    eax,0x1
  4129a8:	jmp    41298e <strcmp@plt+0xf1d6>
  4129aa:	nop    WORD PTR [rax+rax*1+0x0]
  4129b0:	xor    eax,eax
  4129b2:	pop    rbx
  4129b3:	ret    
  4129b4:	nop    DWORD PTR [rax+0x0]
  4129b8:	lea    rdx,[rip+0x37901]        # 44a2c0 <strcmp@plt+0x46b08>
  4129bf:	lea    rsi,[rip+0x383a2]        # 44ad68 <strcmp@plt+0x475b0>
  4129c6:	lea    rdi,[rip+0x381d6]        # 44aba3 <strcmp@plt+0x473eb>
  4129cd:	call   434880 <strcmp@plt+0x310c8>
  4129d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4129dd:	nop    DWORD PTR [rax]
  4129e0:	push   r15
  4129e2:	push   r14
  4129e4:	push   r13
  4129e6:	push   r12
  4129e8:	mov    r12,rdi
  4129eb:	push   rbp
  4129ec:	push   rbx
  4129ed:	mov    ebx,esi
  4129ef:	lea    rsi,[rip+0x3791a]        # 44a310 <strcmp@plt+0x46b58>
  4129f6:	mov    edi,ebx
  4129f8:	sub    rsp,0x848
  4129ff:	mov    rax,QWORD PTR fs:0x28
  412a08:	mov    QWORD PTR [rsp+0x838],rax
  412a10:	xor    eax,eax
  412a12:	call   4306a0 <strcmp@plt+0x2cee8>
  412a17:	call   42d4e0 <strcmp@plt+0x29d28>
  412a1c:	mov    r15,rax
  412a1f:	mov    QWORD PTR [rsp+0x10],rax
  412a24:	mov    rax,QWORD PTR [r12+0x20]
  412a29:	mov    rsi,r15
  412a2c:	mov    rdi,QWORD PTR [rax]
  412a2f:	call   42d540 <strcmp@plt+0x29d88>
  412a34:	mov    rax,QWORD PTR [r12+0x20]
  412a39:	mov    rsi,r15
  412a3c:	mov    rdi,QWORD PTR [rax+0x8]
  412a40:	call   42d540 <strcmp@plt+0x29d88>
  412a45:	mov    rsi,QWORD PTR [r12+0x20]
  412a4a:	mov    rax,QWORD PTR [rsi+0x10]
  412a4e:	mov    rdi,QWORD PTR [rax]
  412a51:	mov    edx,DWORD PTR [rdi]
  412a53:	test   edx,edx
  412a55:	je     412aaf <strcmp@plt+0xf2f7>
  412a57:	xor    ebp,ebp
  412a59:	jmp    412a69 <strcmp@plt+0xf2b1>
  412a5b:	mov    rax,QWORD PTR [rsi+0x10]
  412a5f:	add    ebp,0x1
  412a62:	mov    rdi,QWORD PTR [rax]
  412a65:	cmp    ebp,DWORD PTR [rdi]
  412a67:	je     412aaf <strcmp@plt+0xf2f7>
  412a69:	mov    r8,QWORD PTR [rdi+0x10]
  412a6d:	lea    eax,[rbp+rbp*1+0x0]
  412a71:	mov    ecx,ebp
  412a73:	shr    ecx,0x4
  412a76:	and    eax,0x1e
  412a79:	mov    edx,eax
  412a7b:	mov    eax,DWORD PTR [r8+rcx*4]
  412a7f:	shrx   eax,eax,edx
  412a84:	test   al,0x3
  412a86:	jne    412a5b <strcmp@plt+0xf2a3>
  412a88:	mov    rdx,QWORD PTR [rdi+0x20]
  412a8c:	mov    eax,ebp
  412a8e:	mov    rsi,QWORD PTR [rsp+0x10]
  412a93:	add    ebp,0x1
  412a96:	mov    rdi,QWORD PTR [rdx+rax*8]
  412a9a:	call   42d540 <strcmp@plt+0x29d88>
  412a9f:	mov    rsi,QWORD PTR [r12+0x20]
  412aa4:	mov    rax,QWORD PTR [rsi+0x10]
  412aa8:	mov    rdi,QWORD PTR [rax]
  412aab:	cmp    ebp,DWORD PTR [rdi]
  412aad:	jne    412a69 <strcmp@plt+0xf2b1>
  412aaf:	mov    rax,QWORD PTR [rsi+0x18]
  412ab3:	mov    rdi,QWORD PTR [rax]
  412ab6:	mov    eax,DWORD PTR [rdi]
  412ab8:	test   eax,eax
  412aba:	je     412b14 <strcmp@plt+0xf35c>
  412abc:	xor    ebp,ebp
  412abe:	jmp    412ace <strcmp@plt+0xf316>
  412ac0:	mov    rax,QWORD PTR [rsi+0x18]
  412ac4:	add    ebp,0x1
  412ac7:	mov    rdi,QWORD PTR [rax]
  412aca:	cmp    ebp,DWORD PTR [rdi]
  412acc:	je     412b14 <strcmp@plt+0xf35c>
  412ace:	mov    r8,QWORD PTR [rdi+0x10]
  412ad2:	lea    eax,[rbp+rbp*1+0x0]
  412ad6:	mov    ecx,ebp
  412ad8:	shr    ecx,0x4
  412adb:	and    eax,0x1e
  412ade:	mov    edx,eax
  412ae0:	mov    eax,DWORD PTR [r8+rcx*4]
  412ae4:	shrx   eax,eax,edx
  412ae9:	test   al,0x3
  412aeb:	jne    412ac0 <strcmp@plt+0xf308>
  412aed:	mov    rdx,QWORD PTR [rdi+0x20]
  412af1:	mov    eax,ebp
  412af3:	mov    rsi,QWORD PTR [rsp+0x10]
  412af8:	add    ebp,0x1
  412afb:	mov    rdi,QWORD PTR [rdx+rax*8]
  412aff:	call   42d540 <strcmp@plt+0x29d88>
  412b04:	mov    rsi,QWORD PTR [r12+0x20]
  412b09:	mov    rax,QWORD PTR [rsi+0x18]
  412b0d:	mov    rdi,QWORD PTR [rax]
  412b10:	cmp    ebp,DWORD PTR [rdi]
  412b12:	jne    412ace <strcmp@plt+0xf316>
  412b14:	mov    r15,QWORD PTR [rsp+0x10]
  412b19:	mov    rdi,QWORD PTR [rsi+0x20]
  412b1d:	mov    rsi,r15
  412b20:	call   42d540 <strcmp@plt+0x29d88>
  412b25:	mov    rax,QWORD PTR [r12+0x20]
  412b2a:	mov    rsi,r15
  412b2d:	mov    rdi,QWORD PTR [rax+0x20]
  412b31:	call   42d540 <strcmp@plt+0x29d88>
  412b36:	mov    rcx,QWORD PTR [r15+0x8]
  412b3a:	cmp    r15,rcx
  412b3d:	mov    QWORD PTR [rsp+0x8],rcx
  412b42:	je     412caa <strcmp@plt+0xf4f2>
  412b48:	lea    rax,[rsp+0x20]
  412b4d:	lea    r12,[rip+0x34b64]        # 4476b8 <strcmp@plt+0x43f00>
  412b54:	mov    QWORD PTR [rsp+0x18],rax
  412b59:	lea    rax,[rsp+0x430]
  412b61:	mov    QWORD PTR [rsp],rax
  412b65:	nop    DWORD PTR [rax]
  412b68:	mov    rax,QWORD PTR [rsp+0x8]
  412b6d:	mov    rax,QWORD PTR [rax+0x10]
  412b71:	mov    rbp,QWORD PTR [rax]
  412b74:	test   rbp,rbp
  412b77:	je     412c91 <strcmp@plt+0xf4d9>
  412b7d:	mov    r13,QWORD PTR [rsp+0x18]
  412b82:	nop    WORD PTR [rax+rax*1+0x0]
  412b88:	cmp    QWORD PTR [rbp+0x8],0x0
  412b8d:	je     412c1c <strcmp@plt+0xf464>
  412b93:	mov    rax,QWORD PTR [rbp+0x28]
  412b97:	mov    r14,QWORD PTR [rax]
  412b9a:	test   r14,r14
  412b9d:	je     412c1c <strcmp@plt+0xf464>
  412b9f:	mov    r15,QWORD PTR [rsp]
  412ba3:	cmp    QWORD PTR [r14+0x8],0x0
  412ba8:	je     412bcc <strcmp@plt+0xf414>
  412baa:	mov    rax,QWORD PTR [r14+0x28]
  412bae:	test   rax,rax
  412bb1:	je     412bcc <strcmp@plt+0xf414>
  412bb3:	cmp    ebx,0x4
  412bb6:	jle    412c48 <strcmp@plt+0xf490>
  412bbc:	mov    rdx,0x468e3c
  412bc3:	mov    edx,DWORD PTR [rdx]
  412bc5:	add    edx,0x4
  412bc8:	cmp    ebx,edx
  412bca:	jle    412c48 <strcmp@plt+0xf490>
  412bcc:	mov    rax,QWORD PTR [r14+0x10]
  412bd0:	test   rax,rax
  412bd3:	je     412c00 <strcmp@plt+0xf448>
  412bd5:	mov    rdx,QWORD PTR [r14+0x18]
  412bd9:	test   rdx,rdx
  412bdc:	je     412c68 <strcmp@plt+0xf4b0>
  412be2:	mov    r14,rax
  412be5:	mov    QWORD PTR [r15],rdx
  412be8:	add    r15,0x8
  412bec:	cmp    QWORD PTR [r14+0x8],0x0
  412bf1:	jne    412baa <strcmp@plt+0xf3f2>
  412bf3:	mov    rax,QWORD PTR [r14+0x10]
  412bf7:	test   rax,rax
  412bfa:	jne    412bd5 <strcmp@plt+0xf41d>
  412bfc:	nop    DWORD PTR [rax+0x0]
  412c00:	mov    r14,QWORD PTR [r14+0x18]
  412c04:	test   r14,r14
  412c07:	jne    412ba3 <strcmp@plt+0xf3eb>
  412c09:	cmp    r15,QWORD PTR [rsp]
  412c0d:	je     412c1c <strcmp@plt+0xf464>
  412c0f:	mov    r14,QWORD PTR [r15-0x8]
  412c13:	test   r14,r14
  412c16:	jne    412d3e <strcmp@plt+0xf586>
  412c1c:	mov    rax,QWORD PTR [rbp+0x10]
  412c20:	test   rax,rax
  412c23:	je     412c70 <strcmp@plt+0xf4b8>
  412c25:	mov    rdx,QWORD PTR [rbp+0x18]
  412c29:	test   rdx,rdx
  412c2c:	je     412d28 <strcmp@plt+0xf570>
  412c32:	mov    QWORD PTR [r13+0x0],rdx
  412c36:	mov    rbp,rax
  412c39:	add    r13,0x8
  412c3d:	jmp    412b88 <strcmp@plt+0xf3d0>
  412c42:	nop    WORD PTR [rax+rax*1+0x0]
  412c48:	mov    rdi,QWORD PTR [rax]
  412c4b:	call   42a820 <strcmp@plt+0x27068>
  412c50:	mov    rsi,r12
  412c53:	mov    rdx,rax
  412c56:	mov    edi,ebx
  412c58:	xor    eax,eax
  412c5a:	call   4306a0 <strcmp@plt+0x2cee8>
  412c5f:	jmp    412bcc <strcmp@plt+0xf414>
  412c64:	nop    DWORD PTR [rax+0x0]
  412c68:	mov    r14,rax
  412c6b:	jmp    412ba3 <strcmp@plt+0xf3eb>
  412c70:	mov    rbp,QWORD PTR [rbp+0x18]
  412c74:	test   rbp,rbp
  412c77:	jne    412b88 <strcmp@plt+0xf3d0>
  412c7d:	cmp    r13,QWORD PTR [rsp+0x18]
  412c82:	je     412c91 <strcmp@plt+0xf4d9>
  412c84:	mov    rbp,QWORD PTR [r13-0x8]
  412c88:	test   rbp,rbp
  412c8b:	jne    412d30 <strcmp@plt+0xf578>
  412c91:	mov    rax,QWORD PTR [rsp+0x8]
  412c96:	mov    rax,QWORD PTR [rax+0x8]
  412c9a:	cmp    QWORD PTR [rsp+0x10],rax
  412c9f:	mov    QWORD PTR [rsp+0x8],rax
  412ca4:	jne    412b68 <strcmp@plt+0xf3b0>
  412caa:	mov    rdi,QWORD PTR [rsp+0x10]
  412caf:	call   42dac0 <strcmp@plt+0x2a308>
  412cb4:	cmp    ebx,0x4
  412cb7:	jle    412cee <strcmp@plt+0xf536>
  412cb9:	mov    rax,0x468e3c
  412cc0:	mov    eax,DWORD PTR [rax]
  412cc2:	add    eax,0x4
  412cc5:	cmp    ebx,eax
  412cc7:	jle    412cee <strcmp@plt+0xf536>
  412cc9:	mov    rax,QWORD PTR [rsp+0x838]
  412cd1:	xor    rax,QWORD PTR fs:0x28
  412cda:	jne    412d39 <strcmp@plt+0xf581>
  412cdc:	add    rsp,0x848
  412ce3:	pop    rbx
  412ce4:	pop    rbp
  412ce5:	pop    r12
  412ce7:	pop    r13
  412ce9:	pop    r14
  412ceb:	pop    r15
  412ced:	ret    
  412cee:	mov    rax,QWORD PTR [rsp+0x838]
  412cf6:	xor    rax,QWORD PTR fs:0x28
  412cff:	jne    412d39 <strcmp@plt+0xf581>
  412d01:	add    rsp,0x848
  412d08:	mov    edi,ebx
  412d0a:	lea    rsi,[rip+0x34e97]        # 447ba8 <strcmp@plt+0x443f0>
  412d11:	pop    rbx
  412d12:	pop    rbp
  412d13:	pop    r12
  412d15:	pop    r13
  412d17:	pop    r14
  412d19:	pop    r15
  412d1b:	xor    eax,eax
  412d1d:	jmp    4306a0 <strcmp@plt+0x2cee8>
  412d22:	nop    WORD PTR [rax+rax*1+0x0]
  412d28:	mov    rbp,rax
  412d2b:	jmp    412b88 <strcmp@plt+0xf3d0>
  412d30:	sub    r13,0x8
  412d34:	jmp    412b88 <strcmp@plt+0xf3d0>
  412d39:	call   403460 <__stack_chk_fail@plt>
  412d3e:	sub    r15,0x8
  412d42:	jmp    412ba3 <strcmp@plt+0xf3eb>
  412d47:	nop    WORD PTR [rax+rax*1+0x0]
  412d50:	push   r15
  412d52:	push   r14
  412d54:	mov    r14d,esi
  412d57:	push   r13
  412d59:	push   r12
  412d5b:	lea    rsi,[rip+0x375ee]        # 44a350 <strcmp@plt+0x46b98>
  412d62:	push   rbp
  412d63:	push   rbx
  412d64:	mov    rbx,rdi
  412d67:	mov    edi,r14d
  412d6a:	sub    rsp,0x878
  412d71:	mov    rax,QWORD PTR fs:0x28
  412d7a:	mov    QWORD PTR [rsp+0x868],rax
  412d82:	xor    eax,eax
  412d84:	call   4306a0 <strcmp@plt+0x2cee8>
  412d89:	call   42d4e0 <strcmp@plt+0x29d28>
  412d8e:	mov    r12,rax
  412d91:	mov    QWORD PTR [rsp+0x40],rax
  412d96:	mov    rax,QWORD PTR [rbx+0x18]
  412d9a:	mov    rsi,r12
  412d9d:	mov    rdi,QWORD PTR [rax]
  412da0:	call   42d540 <strcmp@plt+0x29d88>
  412da5:	mov    rax,QWORD PTR [rbx+0x18]
  412da9:	mov    rsi,r12
  412dac:	mov    rdi,QWORD PTR [rax+0x8]
  412db0:	call   42d540 <strcmp@plt+0x29d88>
  412db5:	mov    rcx,QWORD PTR [rbx+0x18]
  412db9:	mov    rax,QWORD PTR [rcx+0x10]
  412dbd:	mov    rsi,QWORD PTR [rax]
  412dc0:	mov    r8d,DWORD PTR [rsi]
  412dc3:	test   r8d,r8d
  412dc6:	je     412e1d <strcmp@plt+0xf665>
  412dc8:	xor    ebp,ebp
  412dca:	jmp    412dda <strcmp@plt+0xf622>
  412dcc:	mov    rax,QWORD PTR [rcx+0x10]
  412dd0:	add    ebp,0x1
  412dd3:	mov    rsi,QWORD PTR [rax]
  412dd6:	cmp    ebp,DWORD PTR [rsi]
  412dd8:	je     412e1d <strcmp@plt+0xf665>
  412dda:	mov    r8,QWORD PTR [rsi+0x10]
  412dde:	lea    eax,[rbp+rbp*1+0x0]
  412de2:	mov    edi,ebp
  412de4:	shr    edi,0x4
  412de7:	and    eax,0x1e
  412dea:	mov    edx,eax
  412dec:	mov    eax,DWORD PTR [r8+rdi*4]
  412df0:	shrx   eax,eax,edx
  412df5:	test   al,0x3
  412df7:	jne    412dcc <strcmp@plt+0xf614>
  412df9:	mov    rdx,QWORD PTR [rsi+0x20]
  412dfd:	mov    eax,ebp
  412dff:	mov    rsi,r12
  412e02:	add    ebp,0x1
  412e05:	mov    rdi,QWORD PTR [rdx+rax*8]
  412e09:	call   42d540 <strcmp@plt+0x29d88>
  412e0e:	mov    rcx,QWORD PTR [rbx+0x18]
  412e12:	mov    rax,QWORD PTR [rcx+0x10]
  412e16:	mov    rsi,QWORD PTR [rax]
  412e19:	cmp    ebp,DWORD PTR [rsi]
  412e1b:	jne    412dda <strcmp@plt+0xf622>
  412e1d:	mov    rax,QWORD PTR [rcx+0x18]
  412e21:	mov    rsi,QWORD PTR [rax]
  412e24:	mov    edi,DWORD PTR [rsi]
  412e26:	test   edi,edi
  412e28:	je     412e84 <strcmp@plt+0xf6cc>
  412e2a:	xor    ebp,ebp
  412e2c:	mov    r12,QWORD PTR [rsp+0x40]
  412e31:	jmp    412e41 <strcmp@plt+0xf689>
  412e33:	mov    rax,QWORD PTR [rcx+0x18]
  412e37:	add    ebp,0x1
  412e3a:	mov    rsi,QWORD PTR [rax]
  412e3d:	cmp    ebp,DWORD PTR [rsi]
  412e3f:	je     412e84 <strcmp@plt+0xf6cc>
  412e41:	mov    r8,QWORD PTR [rsi+0x10]
  412e45:	lea    eax,[rbp+rbp*1+0x0]
  412e49:	mov    edi,ebp
  412e4b:	shr    edi,0x4
  412e4e:	and    eax,0x1e
  412e51:	mov    edx,eax
  412e53:	mov    eax,DWORD PTR [r8+rdi*4]
  412e57:	shrx   eax,eax,edx
  412e5c:	test   al,0x3
  412e5e:	jne    412e33 <strcmp@plt+0xf67b>
  412e60:	mov    rdx,QWORD PTR [rsi+0x20]
  412e64:	mov    eax,ebp
  412e66:	mov    rsi,r12
  412e69:	add    ebp,0x1
  412e6c:	mov    rdi,QWORD PTR [rdx+rax*8]
  412e70:	call   42d540 <strcmp@plt+0x29d88>
  412e75:	mov    rcx,QWORD PTR [rbx+0x18]
  412e79:	mov    rax,QWORD PTR [rcx+0x18]
  412e7d:	mov    rsi,QWORD PTR [rax]
  412e80:	cmp    ebp,DWORD PTR [rsi]
  412e82:	jne    412e41 <strcmp@plt+0xf689>
  412e84:	mov    r15,QWORD PTR [rsp+0x40]
  412e89:	mov    rdi,QWORD PTR [rcx+0x20]
  412e8d:	mov    rsi,r15
  412e90:	call   42d540 <strcmp@plt+0x29d88>
  412e95:	mov    rax,QWORD PTR [rbx+0x18]
  412e99:	mov    rsi,r15
  412e9c:	mov    rdi,QWORD PTR [rax+0x20]
  412ea0:	call   42d540 <strcmp@plt+0x29d88>
  412ea5:	mov    rsi,QWORD PTR [r15+0x8]
  412ea9:	cmp    r15,rsi
  412eac:	mov    QWORD PTR [rsp+0x38],rsi
  412eb1:	je     413184 <strcmp@plt+0xf9cc>
  412eb7:	lea    rax,[rsp+0x50]
  412ebc:	mov    r15d,r14d
  412ebf:	mov    QWORD PTR [rsp+0x48],rax
  412ec4:	lea    rax,[rsp+0x460]
  412ecc:	mov    QWORD PTR [rsp+0x30],rax
  412ed1:	nop    DWORD PTR [rax+0x0]
  412ed8:	mov    rax,QWORD PTR [rsp+0x38]
  412edd:	mov    rax,QWORD PTR [rax+0x10]
  412ee1:	mov    rax,QWORD PTR [rax]
  412ee4:	test   rax,rax
  412ee7:	mov    QWORD PTR [rsp+0x20],rax
  412eec:	je     413168 <strcmp@plt+0xf9b0>
  412ef2:	mov    rax,QWORD PTR [rsp+0x48]
  412ef7:	lea    r13,[rip+0x37cd2]        # 44abd0 <strcmp@plt+0x47418>
  412efe:	mov    QWORD PTR [rsp+0x28],rax
  412f03:	nop    DWORD PTR [rax+rax*1+0x0]
  412f08:	mov    rax,QWORD PTR [rsp+0x20]
  412f0d:	cmp    QWORD PTR [rax+0x8],0x0
  412f12:	je     412fd9 <strcmp@plt+0xf821>
  412f18:	mov    rax,QWORD PTR [rax+0x28]
  412f1c:	mov    r14,QWORD PTR [rax]
  412f1f:	test   r14,r14
  412f22:	je     412fd9 <strcmp@plt+0xf821>
  412f28:	mov    rbp,QWORD PTR [rsp+0x30]
  412f2d:	lea    r12,[rip+0x415a5]        # 4544d9 <strcmp@plt+0x50d21>
  412f34:	cmp    QWORD PTR [r14+0x8],0x0
  412f39:	je     412f81 <strcmp@plt+0xf7c9>
  412f3b:	mov    rbx,QWORD PTR [r14+0x28]
  412f3f:	test   rbx,rbx
  412f42:	je     412f81 <strcmp@plt+0xf7c9>
  412f44:	cmp    r15d,0x4
  412f48:	jle    413018 <strcmp@plt+0xf860>
  412f4e:	mov    rdx,0x468e3c
  412f55:	mov    eax,DWORD PTR [rdx]
  412f57:	add    eax,0x4
  412f5a:	cmp    r15d,eax
  412f5d:	jle    413018 <strcmp@plt+0xf860>
  412f63:	mov    rdi,QWORD PTR [rbx+0x20]
  412f67:	mov    eax,DWORD PTR [rdi+0x18]
  412f6a:	test   eax,eax
  412f6c:	jle    413117 <strcmp@plt+0xf95f>
  412f72:	mov    rsi,0x424890
  412f79:	mov    edx,r15d
  412f7c:	call   42d820 <strcmp@plt+0x2a068>
  412f81:	mov    rax,QWORD PTR [r14+0x10]
  412f85:	test   rax,rax
  412f88:	je     412fb8 <strcmp@plt+0xf800>
  412f8a:	mov    rdx,QWORD PTR [r14+0x18]
  412f8e:	test   rdx,rdx
  412f91:	je     4130e0 <strcmp@plt+0xf928>
  412f97:	mov    r14,rax
  412f9a:	mov    QWORD PTR [rbp+0x0],rdx
  412f9e:	add    rbp,0x8
  412fa2:	cmp    QWORD PTR [r14+0x8],0x0
  412fa7:	jne    412f3b <strcmp@plt+0xf783>
  412fa9:	mov    rax,QWORD PTR [r14+0x10]
  412fad:	test   rax,rax
  412fb0:	jne    412f8a <strcmp@plt+0xf7d2>
  412fb2:	nop    WORD PTR [rax+rax*1+0x0]
  412fb8:	mov    r14,QWORD PTR [r14+0x18]
  412fbc:	test   r14,r14
  412fbf:	jne    412f34 <strcmp@plt+0xf77c>
  412fc5:	cmp    rbp,QWORD PTR [rsp+0x30]
  412fca:	je     412fd9 <strcmp@plt+0xf821>
  412fcc:	mov    r14,QWORD PTR [rbp-0x8]
  412fd0:	test   r14,r14
  412fd3:	jne    41321a <strcmp@plt+0xfa62>
  412fd9:	mov    rsi,QWORD PTR [rsp+0x20]
  412fde:	mov    rax,QWORD PTR [rsi+0x10]
  412fe2:	test   rax,rax
  412fe5:	je     413130 <strcmp@plt+0xf978>
  412feb:	mov    rdx,QWORD PTR [rsi+0x18]
  412fef:	test   rdx,rdx
  412ff2:	je     413200 <strcmp@plt+0xfa48>
  412ff8:	mov    rsi,QWORD PTR [rsp+0x28]
  412ffd:	mov    QWORD PTR [rsp+0x20],rax
  413002:	lea    rax,[rsi+0x8]
  413006:	mov    QWORD PTR [rsi],rdx
  413009:	mov    QWORD PTR [rsp+0x28],rax
  41300e:	jmp    412f08 <strcmp@plt+0xf750>
  413013:	nop    DWORD PTR [rax+rax*1+0x0]
  413018:	cmp    BYTE PTR [rbx+0x8],0x0
  41301c:	mov    r9,r12
  41301f:	mov    r8,r12
  413022:	mov    rdi,QWORD PTR [rbx]
  413025:	mov    rcx,r12
  413028:	cmove  r9,r13
  41302c:	cmp    BYTE PTR [rbx+0x18],0x0
  413030:	mov    QWORD PTR [rsp+0x18],r9
  413035:	cmove  r8,r13
  413039:	cmp    BYTE PTR [rbx+0x9],0x0
  41303d:	mov    QWORD PTR [rsp+0x10],r8
  413042:	cmove  rcx,r13
  413046:	mov    QWORD PTR [rsp+0x8],rcx
  41304b:	call   424890 <strcmp@plt+0x210d8>
  413050:	mov    r9,QWORD PTR [rsp+0x18]
  413055:	mov    r8,QWORD PTR [rsp+0x10]
  41305a:	lea    rsi,[rip+0x3732f]        # 44a390 <strcmp@plt+0x46bd8>
  413061:	mov    rcx,QWORD PTR [rsp+0x8]
  413066:	mov    rdx,rax
  413069:	mov    edi,r15d
  41306c:	xor    eax,eax
  41306e:	call   4306a0 <strcmp@plt+0x2cee8>
  413073:	mov    rdi,QWORD PTR [rbx+0x20]
  413077:	mov    edx,DWORD PTR [rdi+0x18]
  41307a:	test   edx,edx
  41307c:	jle    4130b0 <strcmp@plt+0xf8f8>
  41307e:	cmp    r15d,0x4
  413082:	jg     4130f0 <strcmp@plt+0xf938>
  413084:	mov    rdi,QWORD PTR [rbx]
  413087:	call   424890 <strcmp@plt+0x210d8>
  41308c:	lea    rsi,[rip+0x37b41]        # 44abd4 <strcmp@plt+0x4741c>
  413093:	mov    rdx,rax
  413096:	mov    edi,r15d
  413099:	xor    eax,eax
  41309b:	call   4306a0 <strcmp@plt+0x2cee8>
  4130a0:	mov    rdi,QWORD PTR [rbx+0x20]
  4130a4:	jmp    412f72 <strcmp@plt+0xf7ba>
  4130a9:	nop    DWORD PTR [rax+0x0]
  4130b0:	cmp    r15d,0x4
  4130b4:	jg     413110 <strcmp@plt+0xf958>
  4130b6:	mov    rdi,QWORD PTR [rbx]
  4130b9:	call   424890 <strcmp@plt+0x210d8>
  4130be:	lea    rsi,[rip+0x37b28]        # 44abed <strcmp@plt+0x47435>
  4130c5:	mov    rdx,rax
  4130c8:	mov    edi,r15d
  4130cb:	xor    eax,eax
  4130cd:	call   4306a0 <strcmp@plt+0x2cee8>
  4130d2:	jmp    412f81 <strcmp@plt+0xf7c9>
  4130d7:	nop    WORD PTR [rax+rax*1+0x0]
  4130e0:	mov    r14,rax
  4130e3:	jmp    412f34 <strcmp@plt+0xf77c>
  4130e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4130f0:	mov    rdx,0x468e3c
  4130f7:	mov    eax,DWORD PTR [rdx]
  4130f9:	add    eax,0x4
  4130fc:	cmp    r15d,eax
  4130ff:	jle    413084 <strcmp@plt+0xf8cc>
  413101:	jmp    412f72 <strcmp@plt+0xf7ba>
  413106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413110:	mov    rdx,0x468e3c
  413117:	mov    eax,DWORD PTR [rdx]
  413119:	add    eax,0x4
  41311c:	cmp    r15d,eax
  41311f:	jg     412f81 <strcmp@plt+0xf7c9>
  413125:	jmp    4130b6 <strcmp@plt+0xf8fe>
  413127:	nop    WORD PTR [rax+rax*1+0x0]
  413130:	mov    rax,QWORD PTR [rsp+0x20]
  413135:	mov    rax,QWORD PTR [rax+0x18]
  413139:	test   rax,rax
  41313c:	mov    QWORD PTR [rsp+0x20],rax
  413141:	jne    412f08 <strcmp@plt+0xf750>
  413147:	mov    rax,QWORD PTR [rsp+0x28]
  41314c:	mov    rsi,QWORD PTR [rsp+0x48]
  413151:	cmp    rax,rsi
  413154:	je     413168 <strcmp@plt+0xf9b0>
  413156:	mov    rax,QWORD PTR [rax-0x8]
  41315a:	test   rax,rax
  41315d:	mov    QWORD PTR [rsp+0x20],rax
  413162:	jne    41320a <strcmp@plt+0xfa52>
  413168:	mov    rax,QWORD PTR [rsp+0x38]
  41316d:	mov    rax,QWORD PTR [rax+0x8]
  413171:	cmp    QWORD PTR [rsp+0x40],rax
  413176:	mov    QWORD PTR [rsp+0x38],rax
  41317b:	jne    412ed8 <strcmp@plt+0xf720>
  413181:	mov    r14d,r15d
  413184:	mov    rdi,QWORD PTR [rsp+0x40]
  413189:	call   42dac0 <strcmp@plt+0x2a308>
  41318e:	cmp    r14d,0x4
  413192:	jle    4131ca <strcmp@plt+0xfa12>
  413194:	mov    rax,0x468e3c
  41319b:	mov    eax,DWORD PTR [rax]
  41319d:	add    eax,0x4
  4131a0:	cmp    r14d,eax
  4131a3:	jle    4131ca <strcmp@plt+0xfa12>
  4131a5:	mov    rax,QWORD PTR [rsp+0x868]
  4131ad:	xor    rax,QWORD PTR fs:0x28
  4131b6:	jne    413215 <strcmp@plt+0xfa5d>
  4131b8:	add    rsp,0x878
  4131bf:	pop    rbx
  4131c0:	pop    rbp
  4131c1:	pop    r12
  4131c3:	pop    r13
  4131c5:	pop    r14
  4131c7:	pop    r15
  4131c9:	ret    
  4131ca:	mov    rax,QWORD PTR [rsp+0x868]
  4131d2:	xor    rax,QWORD PTR fs:0x28
  4131db:	jne    413215 <strcmp@plt+0xfa5d>
  4131dd:	add    rsp,0x878
  4131e4:	mov    edi,r14d
  4131e7:	lea    rsi,[rip+0x349ba]        # 447ba8 <strcmp@plt+0x443f0>
  4131ee:	pop    rbx
  4131ef:	pop    rbp
  4131f0:	pop    r12
  4131f2:	pop    r13
  4131f4:	pop    r14
  4131f6:	pop    r15
  4131f8:	xor    eax,eax
  4131fa:	jmp    4306a0 <strcmp@plt+0x2cee8>
  4131ff:	nop
  413200:	mov    QWORD PTR [rsp+0x20],rax
  413205:	jmp    412f08 <strcmp@plt+0xf750>
  41320a:	sub    QWORD PTR [rsp+0x28],0x8
  413210:	jmp    412f08 <strcmp@plt+0xf750>
  413215:	call   403460 <__stack_chk_fail@plt>
  41321a:	sub    rbp,0x8
  41321e:	jmp    412f34 <strcmp@plt+0xf77c>
  413223:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41322e:	xchg   ax,ax
  413230:	test   rsi,rsi
  413233:	je     413258 <strcmp@plt+0xfaa0>
  413235:	sub    rsp,0x8
  413239:	mov    rdx,rsi
  41323c:	mov    rdi,QWORD PTR [rdi+0x18]
  413240:	mov    rsi,QWORD PTR [rsi]
  413243:	call   431a10 <strcmp@plt+0x2e258>
  413248:	test   eax,eax
  41324a:	setne  al
  41324d:	add    rsp,0x8
  413251:	movzx  eax,al
  413254:	ret    
  413255:	nop    DWORD PTR [rax]
  413258:	xor    eax,eax
  41325a:	ret    
  41325b:	nop    DWORD PTR [rax+rax*1+0x0]
  413260:	test   rsi,rsi
  413263:	je     4132a0 <strcmp@plt+0xfae8>
  413265:	push   rbp
  413266:	push   rbx
  413267:	mov    rbp,rdi
  41326a:	mov    edi,0x10
  41326f:	mov    rbx,rsi
  413272:	sub    rsp,0x8
  413276:	call   434790 <strcmp@plt+0x30fd8>
  41327b:	mov    rdi,QWORD PTR [rbp+0x20]
  41327f:	mov    QWORD PTR [rax],rbx
  413282:	mov    rsi,rbx
  413285:	mov    rdx,rax
  413288:	call   431a10 <strcmp@plt+0x2e258>
  41328d:	test   eax,eax
  41328f:	setne  al
  413292:	add    rsp,0x8
  413296:	movzx  eax,al
  413299:	pop    rbx
  41329a:	pop    rbp
  41329b:	ret    
  41329c:	nop    DWORD PTR [rax+0x0]
  4132a0:	xor    eax,eax
  4132a2:	ret    
  4132a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4132ae:	xchg   ax,ax
  4132b0:	cmp    esi,0x4
  4132b3:	jle    4132d0 <strcmp@plt+0xfb18>
  4132b5:	mov    rax,0x468e3c
  4132bc:	mov    eax,DWORD PTR [rax]
  4132be:	add    eax,0x4
  4132c1:	cmp    esi,eax
  4132c3:	jle    4132d0 <strcmp@plt+0xfb18>
  4132c5:	repz ret 
  4132c7:	nop    WORD PTR [rax+rax*1+0x0]
  4132d0:	jmp    412d50 <strcmp@plt+0xf598>
  4132d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4132e0:	cmp    esi,0x4
  4132e3:	jle    413300 <strcmp@plt+0xfb48>
  4132e5:	mov    rax,0x468e3c
  4132ec:	mov    eax,DWORD PTR [rax]
  4132ee:	add    eax,0x4
  4132f1:	cmp    esi,eax
  4132f3:	jle    413300 <strcmp@plt+0xfb48>
  4132f5:	repz ret 
  4132f7:	nop    WORD PTR [rax+rax*1+0x0]
  413300:	jmp    4129e0 <strcmp@plt+0xf228>
  413305:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  413310:	push   r15
  413312:	push   r14
  413314:	push   r13
  413316:	push   r12
  413318:	push   rbp
  413319:	push   rbx
  41331a:	sub    rsp,0x1d8
  413321:	mov    rax,QWORD PTR fs:0x28
  41332a:	mov    QWORD PTR [rsp+0x1c8],rax
  413332:	xor    eax,eax
  413334:	mov    rax,0x468660
  41333b:	cmp    QWORD PTR [rdi+0x8],rax
  41333f:	mov    QWORD PTR [rsp+0x20],rdx
  413344:	jne    413c90 <strcmp@plt+0x104d8>
  41334a:	mov    r14,rdi
  41334d:	mov    rdi,rsi
  413350:	mov    rbp,rsi
  413353:	call   422770 <strcmp@plt+0x1efb8>
  413358:	cmp    eax,0x8
  41335b:	mov    ebx,eax
  41335d:	je     413c49 <strcmp@plt+0x10491>
  413363:	cmp    eax,0x7
  413366:	ja     41337a <strcmp@plt+0xfbc2>
  413368:	lea    rdx,[rip+0x379b9]        # 44ad28 <strcmp@plt+0x47570>
  41336f:	mov    eax,eax
  413371:	movsxd rax,DWORD PTR [rdx+rax*4]
  413375:	add    rax,rdx
  413378:	jmp    rax
  41337a:	mov    r15,0x468e3c
  413381:	cmp    DWORD PTR [r15],0x2
  413385:	jg     41389f <strcmp@plt+0x100e7>
  41338b:	mov    eax,DWORD PTR [r15]
  41338e:	test   eax,eax
  413390:	jle    4133a5 <strcmp@plt+0xfbed>
  413392:	lea    rsi,[rip+0x37707]        # 44aaa0 <strcmp@plt+0x472e8>
  413399:	mov    edi,0x5
  41339e:	xor    eax,eax
  4133a0:	call   4306a0 <strcmp@plt+0x2cee8>
  4133a5:	mov    DWORD PTR [rsp+0x8],0x0
  4133ad:	mov    rbx,QWORD PTR [rsp+0x1c8]
  4133b5:	xor    rbx,QWORD PTR fs:0x28
  4133be:	mov    eax,DWORD PTR [rsp+0x8]
  4133c2:	jne    4149f4 <strcmp@plt+0x1123c>
  4133c8:	add    rsp,0x1d8
  4133cf:	pop    rbx
  4133d0:	pop    rbp
  4133d1:	pop    r12
  4133d3:	pop    r13
  4133d5:	pop    r14
  4133d7:	pop    r15
  4133d9:	ret    
  4133da:	mov    rax,QWORD PTR [rbp+0x0]
  4133de:	mov    QWORD PTR [rsp+0x88],0x0
  4133ea:	mov    QWORD PTR [rsp+0x90],rax
  4133f2:	mov    rax,QWORD PTR [rbp+0x8]
  4133f6:	mov    QWORD PTR [rsp+0x98],rax
  4133fe:	mov    rax,QWORD PTR [rbp+0x10]
  413402:	mov    QWORD PTR [rsp+0xa0],rax
  41340a:	mov    rax,QWORD PTR [rbp+0x18]
  41340e:	mov    QWORD PTR [rsp+0xa8],rax
  413416:	mov    rax,QWORD PTR [rbp+0x20]
  41341a:	mov    QWORD PTR [rsp+0xb0],rax
  413422:	mov    rax,QWORD PTR [rbp+0x28]
  413426:	mov    QWORD PTR [rsp+0xb8],rax
  41342e:	mov    rax,QWORD PTR [rbp+0x30]
  413432:	mov    QWORD PTR [rsp+0xc0],rax
  41343a:	mov    rax,QWORD PTR [rbp+0x38]
  41343e:	mov    QWORD PTR [rsp+0xc8],rax
  413446:	lea    rax,[rsp+0x90]
  41344e:	mov    rdi,rax
  413451:	mov    QWORD PTR [rsp+0x18],rax
  413456:	call   423110 <strcmp@plt+0x1f958>
  41345b:	mov    QWORD PTR [rsp+0x48],0x0
  413464:	mov    QWORD PTR [rsp+0x8],rax
  413469:	mov    rax,QWORD PTR [rsp+0x20]
  41346e:	mov    QWORD PTR [rsp+0x58],rax
  413473:	mov    rax,QWORD PTR [rsp+0x8]
  413478:	mov    QWORD PTR [rsp+0x10],0x0
  413481:	test   BYTE PTR [rax+0x2],0x1
  413485:	jne    413dfc <strcmp@plt+0x10644>
  41348b:	mov    rdi,QWORD PTR [rsp+0x18]
  413490:	call   424150 <strcmp@plt+0x20998>
  413495:	mov    QWORD PTR [rsp+0x50],rax
  41349a:	mov    rax,QWORD PTR [rsp+0x8]
  41349f:	cmp    BYTE PTR [rax+0x3],0x0
  4134a3:	je     4149e2 <strcmp@plt+0x1122a>
  4134a9:	mov    r15,0x468e3c
  4134b0:	lea    rax,[rsp+0x88]
  4134b8:	xor    ebx,ebx
  4134ba:	mov    QWORD PTR [rsp+0x60],rbp
  4134bf:	mov    DWORD PTR [rsp+0x40],0x0
  4134c7:	xor    r13d,r13d
  4134ca:	mov    QWORD PTR [rsp+0x30],rax
  4134cf:	mov    ebp,ebx
  4134d1:	mov    QWORD PTR [rsp+0x28],r15
  4134d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4134e0:	xor    eax,eax
  4134e2:	call   42a550 <strcmp@plt+0x26d98>
  4134e7:	mov    rdx,QWORD PTR [rsp+0x30]
  4134ec:	mov    rdi,QWORD PTR [rsp+0x18]
  4134f1:	mov    rsi,rax
  4134f4:	mov    rbx,rax
  4134f7:	call   422d90 <strcmp@plt+0x1f5d8>
  4134fc:	cmp    eax,0x1
  4134ff:	jne    413d6f <strcmp@plt+0x105b7>
  413505:	mov    rdi,QWORD PTR [rbx+0x28]
  413509:	mov    rsi,QWORD PTR [rdi+0x8]
  41350d:	cmp    rdi,rsi
  413510:	je     41354e <strcmp@plt+0xfd96>
  413512:	nop    WORD PTR [rax+rax*1+0x0]
  413518:	mov    rcx,QWORD PTR [rsi+0x10]
  41351c:	mov    eax,DWORD PTR [rcx+0x18]
  41351f:	test   eax,eax
  413521:	je     413545 <strcmp@plt+0xfd8d>
  413523:	mov    rax,QWORD PTR [rcx+0x8]
  413527:	cmp    rcx,rax
  41352a:	je     413545 <strcmp@plt+0xfd8d>
  41352c:	nop    DWORD PTR [rax+0x0]
  413530:	mov    rdx,QWORD PTR [rax+0x10]
  413534:	mov    BYTE PTR [rdx+0x9],0x0
  413538:	mov    BYTE PTR [rdx+0x8],0x1
  41353c:	mov    rax,QWORD PTR [rax+0x8]
  413540:	cmp    rcx,rax
  413543:	jne    413530 <strcmp@plt+0xfd78>
  413545:	mov    rsi,QWORD PTR [rsi+0x8]
  413549:	cmp    rdi,rsi
  41354c:	jne    413518 <strcmp@plt+0xfd60>
  41354e:	cmp    BYTE PTR [rbx+0x35],0x0
  413552:	je     4139f0 <strcmp@plt+0x10238>
  413558:	mov    rdi,rbx
  41355b:	call   437250 <strcmp@plt+0x33a98>
  413560:	mov    rdi,QWORD PTR [r14+0x18]
  413564:	mov    rsi,rbx
  413567:	call   432570 <strcmp@plt+0x2edb8>
  41356c:	test   rax,rax
  41356f:	mov    r12,rax
  413572:	je     413a6c <strcmp@plt+0x102b4>
  413578:	test   r13,r13
  41357b:	je     413bd8 <strcmp@plt+0x10420>
  413581:	mov    rdi,r13
  413584:	call   4031d0 <strlen@plt>
  413589:	mov    rsi,QWORD PTR [r12+0x10]
  41358e:	mov    rdx,rax
  413591:	mov    rdi,r13
  413594:	call   403210 <strncmp@plt>
  413599:	test   eax,eax
  41359b:	jne    413dcd <strcmp@plt+0x10615>
  4135a1:	cmp    BYTE PTR [r12+0x9],0x1
  4135a7:	je     413a13 <strcmp@plt+0x1025b>
  4135ad:	mov    rdi,QWORD PTR [r12]
  4135b1:	mov    rsi,rbx
  4135b4:	call   424df0 <strcmp@plt+0x21638>
  4135b9:	test   eax,eax
  4135bb:	je     4138f0 <strcmp@plt+0x10138>
  4135c1:	mov    rax,QWORD PTR [rsp+0x28]
  4135c6:	mov    eax,DWORD PTR [rax]
  4135c8:	test   eax,eax
  4135ca:	jle    413600 <strcmp@plt+0xfe48>
  4135cc:	mov    rdi,QWORD PTR [r12]
  4135d0:	call   424890 <strcmp@plt+0x210d8>
  4135d5:	mov    rdi,rbx
  4135d8:	mov    r12,rax
  4135db:	call   424890 <strcmp@plt+0x210d8>
  4135e0:	lea    rsi,[rip+0x37199]        # 44a780 <strcmp@plt+0x46fc8>
  4135e7:	mov    rdx,rax
  4135ea:	mov    rcx,r12
  4135ed:	mov    edi,0x5
  4135f2:	xor    eax,eax
  4135f4:	call   4306a0 <strcmp@plt+0x2cee8>
  4135f9:	nop    DWORD PTR [rax+0x0]
  413600:	mov    rdi,rbx
  413603:	xor    ebx,ebx
  413605:	call   42a650 <strcmp@plt+0x26e98>
  41360a:	mov    rax,QWORD PTR [rsp+0x8]
  41360f:	add    ebp,0x1
  413612:	movzx  eax,BYTE PTR [rax+0x3]
  413616:	cmp    ebp,eax
  413618:	jl     4134e0 <strcmp@plt+0xfd28>
  41361e:	mov    r12,r13
  413621:	mov    rax,QWORD PTR [rsp+0x8]
  413626:	test   BYTE PTR [rax],0x2
  413629:	jne    41404e <strcmp@plt+0x10896>
  41362f:	cmp    QWORD PTR [rsp+0x10],0x0
  413635:	je     414c57 <strcmp@plt+0x1149f>
  41363b:	test   r12,r12
  41363e:	je     413e78 <strcmp@plt+0x106c0>
  413644:	mov    r11d,DWORD PTR [rsp+0x40]
  413649:	test   r11d,r11d
  41364c:	je     413e78 <strcmp@plt+0x106c0>
  413652:	mov    rdi,QWORD PTR [rsp+0x10]
  413657:	movzx  eax,WORD PTR [rdi+0x24]
  41365b:	cmp    ax,0xffff
  41365f:	je     414040 <strcmp@plt+0x10888>
  413665:	add    rax,QWORD PTR [rdi+0x30]
  413669:	mov    rdi,QWORD PTR [rsp+0x8]
  41366e:	movzx  edx,BYTE PTR [rdi]
  413671:	mov    rbp,rax
  413674:	mov    rax,QWORD PTR [rdi+0x4]
  413678:	mov    QWORD PTR [rbp+0x4],rax
  41367c:	lea    eax,[rdx*4+0x0]
  413683:	and    eax,0x8
  413686:	mov    ecx,eax
  413688:	movzx  eax,BYTE PTR [rbp+0x0]
  41368c:	and    eax,0xfffffff7
  41368f:	or     eax,ecx
  413691:	cmp    QWORD PTR [rsp+0x48],0x0
  413697:	mov    BYTE PTR [rbp+0x0],al
  41369a:	je     414c44 <strcmp@plt+0x1148c>
  4136a0:	mov    rdi,QWORD PTR [rsp+0x10]
  4136a5:	lea    rsi,[rbp+0xc]
  4136a9:	mov    rcx,r12
  4136ac:	mov    edx,0x1
  4136b1:	call   423dd0 <strcmp@plt+0x20618>
  4136b6:	mov    rax,QWORD PTR [rsp+0x8]
  4136bb:	test   BYTE PTR [rax],0x2
  4136be:	je     413738 <strcmp@plt+0xff80>
  4136c0:	cmp    QWORD PTR [r14+0x40],0x0
  4136c5:	je     413738 <strcmp@plt+0xff80>
  4136c7:	mov    rax,QWORD PTR [rsp+0x20]
  4136cc:	lea    r13,[rax+0x20]
  4136d0:	mov    rdi,r13
  4136d3:	call   424890 <strcmp@plt+0x210d8>
  4136d8:	mov    rdi,QWORD PTR [r14+0x38]
  4136dc:	mov    rsi,rax
  4136df:	call   43a470 <strcmp@plt+0x36cb8>
  4136e4:	test   rax,rax
  4136e7:	mov    r12,rax
  4136ea:	je     4149ac <strcmp@plt+0x111f4>
  4136f0:	cmp    QWORD PTR [rax+0x18],0x0
  4136f5:	je     413738 <strcmp@plt+0xff80>
  4136f7:	mov    rax,QWORD PTR [rsp+0x48]
  4136fc:	test   rax,rax
  4136ff:	je     41370b <strcmp@plt+0xff53>
  413701:	test   BYTE PTR [rax+0x1],0x20
  413705:	jne    414953 <strcmp@plt+0x1119b>
  41370b:	test   BYTE PTR [rbp+0x0],0x4
  41370f:	je     413738 <strcmp@plt+0xff80>
  413711:	mov    rbx,QWORD PTR [rsp+0x10]
  413716:	mov    esi,0x1
  41371b:	mov    rdi,rbx
  41371e:	call   424060 <strcmp@plt+0x208a8>
  413723:	mov    rcx,QWORD PTR [r12+0x18]
  413728:	mov    edx,DWORD PTR [r12+0x10]
  41372d:	mov    rsi,rax
  413730:	mov    rdi,rbx
  413733:	call   423dd0 <strcmp@plt+0x20618>
  413738:	mov    r15,0x468e3c
  41373f:	mov    r9d,DWORD PTR [r15]
  413742:	test   r9d,r9d
  413745:	jle    41379e <strcmp@plt+0xffe6>
  413747:	mov    rbx,QWORD PTR [rsp+0x20]
  41374c:	lea    rdi,[rbx+0x20]
  413750:	movzx  r13d,WORD PTR [rbx+0x42]
  413755:	movzx  r12d,WORD PTR [rbx+0x40]
  41375a:	call   424890 <strcmp@plt+0x210d8>
  41375f:	mov    rdi,rbx
  413762:	mov    rbp,rax
  413765:	call   424890 <strcmp@plt+0x210d8>
  41376a:	mov    rdi,QWORD PTR [rsp+0x10]
  41376f:	mov    rbx,rax
  413772:	call   423a90 <strcmp@plt+0x202d8>
  413777:	sub    rsp,0x8
  41377b:	lea    rsi,[rip+0x3716e]        # 44a8f0 <strcmp@plt+0x47138>
  413782:	mov    rdx,rax
  413785:	push   r13
  413787:	xor    eax,eax
  413789:	mov    r9d,r12d
  41378c:	mov    r8,rbp
  41378f:	mov    rcx,rbx
  413792:	mov    edi,0x5
  413797:	call   4306a0 <strcmp@plt+0x2cee8>
  41379c:	pop    rax
  41379d:	pop    rdx
  41379e:	mov    rbx,QWORD PTR [rsp+0x10]
  4137a3:	mov    rdx,QWORD PTR [rsp+0x20]
  4137a8:	mov    rdi,r14
  4137ab:	mov    rsi,rbx
  4137ae:	call   4083b0 <strcmp@plt+0x4bf8>
  4137b3:	mov    rdi,rbx
  4137b6:	call   4300b0 <strcmp@plt+0x2c8f8>
  4137bb:	mov    DWORD PTR [rsp+0x8],0x1
  4137c3:	jmp    413d9e <strcmp@plt+0x105e6>
  4137c8:	mov    r15,0x468e3c
  4137cf:	cmp    DWORD PTR [r15],0x2
  4137d3:	jle    41338b <strcmp@plt+0xfbd3>
  4137d9:	lea    rsi,[rip+0x37130]        # 44a910 <strcmp@plt+0x47158>
  4137e0:	xor    eax,eax
  4137e2:	mov    edx,ebx
  4137e4:	mov    edi,0x7
  4137e9:	call   4306a0 <strcmp@plt+0x2cee8>
  4137ee:	mov    eax,DWORD PTR [r15]
  4137f1:	jmp    41338e <strcmp@plt+0xfbd6>
  4137f6:	mov    rax,QWORD PTR [rbp+0x0]
  4137fa:	lea    r13,[rsp+0x90]
  413802:	mov    rdi,r13
  413805:	mov    QWORD PTR [rsp+0x90],rax
  41380d:	mov    rax,QWORD PTR [rbp+0x8]
  413811:	mov    QWORD PTR [rsp+0x98],rax
  413819:	mov    rax,QWORD PTR [rbp+0x10]
  41381d:	mov    QWORD PTR [rsp+0xa0],rax
  413825:	mov    rax,QWORD PTR [rbp+0x18]
  413829:	mov    QWORD PTR [rsp+0xa8],rax
  413831:	mov    rax,QWORD PTR [rbp+0x20]
  413835:	mov    QWORD PTR [rsp+0xb0],rax
  41383d:	mov    rax,QWORD PTR [rbp+0x28]
  413841:	mov    QWORD PTR [rsp+0xb8],rax
  413849:	mov    rax,QWORD PTR [rbp+0x30]
  41384d:	mov    QWORD PTR [rsp+0xc0],rax
  413855:	mov    rax,QWORD PTR [rbp+0x38]
  413859:	mov    QWORD PTR [rsp+0xc8],rax
  413861:	call   423110 <strcmp@plt+0x1f958>
  413866:	test   BYTE PTR [rax],0x8
  413869:	mov    QWORD PTR [rsp+0x10],rax
  41386e:	je     413e1f <strcmp@plt+0x10667>
  413874:	mov    rbx,0x468e3c
  41387b:	mov    eax,DWORD PTR [rbx]
  41387d:	test   eax,eax
  41387f:	jle    41338e <strcmp@plt+0xfbd6>
  413885:	lea    rsi,[rip+0x370c4]        # 44a950 <strcmp@plt+0x47198>
  41388c:	xor    eax,eax
  41388e:	mov    edi,0x5
  413893:	call   4306a0 <strcmp@plt+0x2cee8>
  413898:	mov    eax,DWORD PTR [rbx]
  41389a:	jmp    41338e <strcmp@plt+0xfbd6>
  41389f:	lea    rsi,[rip+0x371ba]        # 44aa60 <strcmp@plt+0x472a8>
  4138a6:	xor    eax,eax
  4138a8:	mov    edx,ebx
  4138aa:	mov    edi,0x7
  4138af:	call   4306a0 <strcmp@plt+0x2cee8>
  4138b4:	mov    eax,DWORD PTR [r15]
  4138b7:	jmp    41338e <strcmp@plt+0xfbd6>
  4138bc:	mov    r15,0x468e3c
  4138c3:	mov    eax,DWORD PTR [r15]
  4138c6:	test   eax,eax
  4138c8:	jle    41338e <strcmp@plt+0xfbd6>
  4138ce:	lea    rsi,[rip+0x36b73]        # 44a448 <strcmp@plt+0x46c90>
  4138d5:	xor    eax,eax
  4138d7:	mov    edi,0x5
  4138dc:	call   4306a0 <strcmp@plt+0x2cee8>
  4138e1:	mov    eax,DWORD PTR [r15]
  4138e4:	jmp    41338e <strcmp@plt+0xfbd6>
  4138e9:	nop    DWORD PTR [rax+0x0]
  4138f0:	mov    rdi,QWORD PTR [r14+0x20]
  4138f4:	mov    rsi,rbx
  4138f7:	call   4325a0 <strcmp@plt+0x2ede8>
  4138fc:	test   rax,rax
  4138ff:	mov    r15,rax
  413902:	je     413af9 <strcmp@plt+0x10341>
  413908:	mov    rdi,QWORD PTR [rax]
  41390b:	mov    rsi,rbx
  41390e:	call   42a680 <strcmp@plt+0x26ec8>
  413913:	test   eax,eax
  413915:	je     413964 <strcmp@plt+0x101ac>
  413917:	cmp    BYTE PTR [r12+0x18],0x0
  41391d:	jne    413c26 <strcmp@plt+0x1046e>
  413923:	mov    rax,QWORD PTR [rsp+0x28]
  413928:	cmp    DWORD PTR [rax],0x2
  41392b:	jle    41394b <strcmp@plt+0x10193>
  41392d:	mov    rdi,rbx
  413930:	call   424890 <strcmp@plt+0x210d8>
  413935:	lea    rsi,[rip+0x36e9c]        # 44a7d8 <strcmp@plt+0x47020>
  41393c:	mov    rdx,rax
  41393f:	mov    edi,0x7
  413944:	xor    eax,eax
  413946:	call   4306a0 <strcmp@plt+0x2cee8>
  41394b:	mov    rsi,QWORD PTR [rbx+0x28]
  41394f:	mov    rdi,QWORD PTR [r15]
  413952:	call   42a9b0 <strcmp@plt+0x271f8>
  413957:	mov    esi,0x7
  41395c:	mov    rdi,r14
  41395f:	call   4132e0 <strcmp@plt+0xfb28>
  413964:	mov    rax,QWORD PTR [rsp+0x8]
  413969:	mov    edx,0xb
  41396e:	mov    rsi,r15
  413971:	movzx  eax,BYTE PTR [rax]
  413974:	mov    BYTE PTR [rsp+0x38],al
  413978:	shr    al,0x3
  41397b:	and    eax,0x1
  41397e:	mov    BYTE PTR [r15+0x8],al
  413982:	mov    rax,0x474858
  413989:	mov    rdi,QWORD PTR [rax]
  41398c:	call   43b020 <strcmp@plt+0x37868>
  413991:	mov    edx,DWORD PTR [rax+0x18]
  413994:	mov    r12,rax
  413997:	cmp    edx,0x1
  41399a:	je     413a9e <strcmp@plt+0x102e6>
  4139a0:	mov    rax,QWORD PTR [rsp+0x28]
  4139a5:	mov    r15d,DWORD PTR [rax]
  4139a8:	test   r15d,r15d
  4139ab:	jle    4139c0 <strcmp@plt+0x10208>
  4139ad:	lea    rsi,[rip+0x36e54]        # 44a808 <strcmp@plt+0x47050>
  4139b4:	mov    edi,0x5
  4139b9:	xor    eax,eax
  4139bb:	call   4306a0 <strcmp@plt+0x2cee8>
  4139c0:	mov    rdi,r12
  4139c3:	call   42dac0 <strcmp@plt+0x2a308>
  4139c8:	cmp    QWORD PTR [rsp+0x10],0x0
  4139ce:	je     413600 <strcmp@plt+0xfe48>
  4139d4:	mov    rdi,QWORD PTR [rsp+0x10]
  4139d9:	xor    edx,edx
  4139db:	mov    rsi,rbx
  4139de:	call   423280 <strcmp@plt+0x1fac8>
  4139e3:	mov    DWORD PTR [rsp+0x40],0x1
  4139eb:	jmp    413600 <strcmp@plt+0xfe48>
  4139f0:	mov    rdi,rbx
  4139f3:	call   424890 <strcmp@plt+0x210d8>
  4139f8:	lea    rsi,[rip+0x369c9]        # 44a3c8 <strcmp@plt+0x46c10>
  4139ff:	mov    rdx,rax
  413a02:	mov    edi,0x3
  413a07:	xor    eax,eax
  413a09:	call   4306a0 <strcmp@plt+0x2cee8>
  413a0e:	jmp    413558 <strcmp@plt+0xfda0>
  413a13:	mov    rdi,rbx
  413a16:	call   425110 <strcmp@plt+0x21958>
  413a1b:	mov    rdi,QWORD PTR [r12]
  413a1f:	mov    r15,rax
  413a22:	call   425110 <strcmp@plt+0x21958>
  413a27:	mov    rsi,r15
  413a2a:	mov    rdi,rax
  413a2d:	call   437130 <strcmp@plt+0x33978>
  413a32:	test   eax,eax
  413a34:	jne    4138f0 <strcmp@plt+0x10138>
  413a3a:	mov    rax,QWORD PTR [rsp+0x28]
  413a3f:	mov    eax,DWORD PTR [rax]
  413a41:	test   eax,eax
  413a43:	jle    413600 <strcmp@plt+0xfe48>
  413a49:	mov    rdi,rbx
  413a4c:	call   424890 <strcmp@plt+0x210d8>
  413a51:	lea    rsi,[rip+0x36ce8]        # 44a740 <strcmp@plt+0x46f88>
  413a58:	mov    rdx,rax
  413a5b:	mov    edi,0x5
  413a60:	xor    eax,eax
  413a62:	call   4306a0 <strcmp@plt+0x2cee8>
  413a67:	jmp    413600 <strcmp@plt+0xfe48>
  413a6c:	mov    rax,QWORD PTR [rsp+0x28]
  413a71:	mov    eax,DWORD PTR [rax]
  413a73:	test   eax,eax
  413a75:	jle    413600 <strcmp@plt+0xfe48>
  413a7b:	mov    rdi,rbx
  413a7e:	call   424890 <strcmp@plt+0x210d8>
  413a83:	lea    rsi,[rip+0x36bb6]        # 44a640 <strcmp@plt+0x46e88>
  413a8a:	mov    rdx,rax
  413a8d:	mov    edi,0x5
  413a92:	xor    eax,eax
  413a94:	call   4306a0 <strcmp@plt+0x2cee8>
  413a99:	jmp    413600 <strcmp@plt+0xfe48>
  413a9e:	mov    rax,QWORD PTR [r12+0x8]
  413aa3:	mov    rdi,r12
  413aa6:	mov    rax,QWORD PTR [rax+0x10]
  413aaa:	mov    QWORD PTR [rsp+0x38],rax
  413aaf:	call   42dac0 <strcmp@plt+0x2a308>
  413ab4:	mov    rdi,QWORD PTR [rsp+0x38]
  413ab9:	mov    esi,0xb6
  413abe:	call   43ac60 <strcmp@plt+0x374a8>
  413ac3:	mov    rax,QWORD PTR [rsp+0x28]
  413ac8:	cmp    DWORD PTR [rax],0x1
  413acb:	jle    4139c8 <strcmp@plt+0x10210>
  413ad1:	mov    rdi,QWORD PTR [r15]
  413ad4:	call   424890 <strcmp@plt+0x210d8>
  413ad9:	lea    rsi,[rip+0x36d80]        # 44a860 <strcmp@plt+0x470a8>
  413ae0:	mov    rdx,rax
  413ae3:	mov    ecx,0xb4
  413ae8:	mov    edi,0x6
  413aed:	xor    eax,eax
  413aef:	call   4306a0 <strcmp@plt+0x2cee8>
  413af4:	jmp    4139c8 <strcmp@plt+0x10210>
  413af9:	mov    edi,0x10
  413afe:	call   434790 <strcmp@plt+0x30fd8>
  413b03:	mov    rdi,QWORD PTR [r14+0x20]
  413b07:	mov    rdx,rax
  413b0a:	mov    rsi,rbx
  413b0d:	mov    QWORD PTR [rax],rbx
  413b10:	mov    r12,rax
  413b13:	call   431a10 <strcmp@plt+0x2e258>
  413b18:	lea    rdx,[rip+0x11a1]        # 414cc0 <strcmp@plt+0x11508>
  413b1f:	xor    r8d,r8d
  413b22:	mov    rcx,r12
  413b25:	mov    rsi,r14
  413b28:	mov    edi,0xb
  413b2d:	call   43af00 <strcmp@plt+0x37748>
  413b32:	mov    rdx,rax
  413b35:	mov    r15,rax
  413b38:	mov    rax,0x474858
  413b3f:	mov    rsi,r12
  413b42:	mov    rdi,QWORD PTR [rax]
  413b45:	call   43afa0 <strcmp@plt+0x377e8>
  413b4a:	mov    esi,0xb6
  413b4f:	mov    rdi,r15
  413b52:	call   43ac60 <strcmp@plt+0x374a8>
  413b57:	mov    rax,QWORD PTR [rsp+0x28]
  413b5c:	cmp    DWORD PTR [rax],0x1
  413b5f:	jle    413b85 <strcmp@plt+0x103cd>
  413b61:	mov    rdi,QWORD PTR [r12]
  413b65:	call   424890 <strcmp@plt+0x210d8>
  413b6a:	lea    rsi,[rip+0x36cef]        # 44a860 <strcmp@plt+0x470a8>
  413b71:	mov    rdx,rax
  413b74:	mov    ecx,0xb4
  413b79:	mov    edi,0x6
  413b7e:	xor    eax,eax
  413b80:	call   4306a0 <strcmp@plt+0x2cee8>
  413b85:	mov    rax,QWORD PTR [rsp+0x8]
  413b8a:	mov    esi,0x7
  413b8f:	mov    rdi,r14
  413b92:	movzx  eax,BYTE PTR [rax]
  413b95:	mov    BYTE PTR [rsp+0x38],al
  413b99:	shr    al,0x3
  413b9c:	and    eax,0x1
  413b9f:	mov    BYTE PTR [r12+0x8],al
  413ba4:	call   4132e0 <strcmp@plt+0xfb28>
  413ba9:	cmp    QWORD PTR [rsp+0x10],0x0
  413baf:	je     41360a <strcmp@plt+0xfe52>
  413bb5:	mov    rdi,QWORD PTR [rsp+0x10]
  413bba:	xor    edx,edx
  413bbc:	mov    rsi,rbx
  413bbf:	call   423280 <strcmp@plt+0x1fac8>
  413bc4:	mov    DWORD PTR [rsp+0x40],0x1
  413bcc:	jmp    41360a <strcmp@plt+0xfe52>
  413bd1:	nop    DWORD PTR [rax+0x0]
  413bd8:	mov    rdx,QWORD PTR [rax+0x10]
  413bdc:	mov    rsi,QWORD PTR [rsp+0x50]
  413be1:	mov    rdi,QWORD PTR [rsp+0x60]
  413be6:	call   423ef0 <strcmp@plt+0x20738>
  413beb:	cmp    eax,0x1
  413bee:	jne    414a03 <strcmp@plt+0x1124b>
  413bf4:	mov    rax,QWORD PTR [rsp+0x28]
  413bf9:	cmp    DWORD PTR [rax],0x1
  413bfc:	jle    413c1c <strcmp@plt+0x10464>
  413bfe:	mov    rdi,rbx
  413c01:	call   424890 <strcmp@plt+0x210d8>
  413c06:	lea    rsi,[rip+0x36abb]        # 44a6c8 <strcmp@plt+0x46f10>
  413c0d:	mov    rdx,rax
  413c10:	mov    edi,0x6
  413c15:	xor    eax,eax
  413c17:	call   4306a0 <strcmp@plt+0x2cee8>
  413c1c:	mov    r13,QWORD PTR [r12+0x10]
  413c21:	jmp    4135a1 <strcmp@plt+0xfde9>
  413c26:	mov    rdi,rbx
  413c29:	call   424890 <strcmp@plt+0x210d8>
  413c2e:	lea    rsi,[rip+0x36fd2]        # 44ac07 <strcmp@plt+0x4744f>
  413c35:	mov    rdx,rax
  413c38:	mov    edi,0x3
  413c3d:	xor    eax,eax
  413c3f:	call   4306a0 <strcmp@plt+0x2cee8>
  413c44:	jmp    413957 <strcmp@plt+0x1019f>
  413c49:	mov    rdi,rbp
  413c4c:	call   4227d0 <strcmp@plt+0x1f018>
  413c51:	test   BYTE PTR [rax],0x8
  413c54:	mov    rdi,rbp
  413c57:	je     413caa <strcmp@plt+0x104f2>
  413c59:	call   423cc0 <strcmp@plt+0x20508>
  413c5e:	mov    rax,0x468e3c
  413c65:	cmp    DWORD PTR [rax],0x1
  413c68:	jle    4133a5 <strcmp@plt+0xfbed>
  413c6e:	mov    rdi,rbp
  413c71:	call   423cc0 <strcmp@plt+0x20508>
  413c76:	lea    rsi,[rip+0x359cb]        # 449648 <strcmp@plt+0x45e90>
  413c7d:	mov    edx,eax
  413c7f:	mov    edi,0x6
  413c84:	xor    eax,eax
  413c86:	call   4306a0 <strcmp@plt+0x2cee8>
  413c8b:	jmp    4133a5 <strcmp@plt+0xfbed>
  413c90:	lea    rdx,[rip+0x36629]        # 44a2c0 <strcmp@plt+0x46b08>
  413c97:	lea    rsi,[rip+0x370ca]        # 44ad68 <strcmp@plt+0x475b0>
  413c9e:	lea    rdi,[rip+0x36efe]        # 44aba3 <strcmp@plt+0x473eb>
  413ca5:	call   434880 <strcmp@plt+0x310c8>
  413caa:	call   422810 <strcmp@plt+0x1f058>
  413caf:	cmp    eax,0x1
  413cb2:	jne    4133a5 <strcmp@plt+0xfbed>
  413cb8:	lea    rax,[rsp+0x170]
  413cc0:	mov    rdi,rbp
  413cc3:	mov    rsi,rax
  413cc6:	mov    rbx,rax
  413cc9:	mov    QWORD PTR [rsp+0x50],rax
  413cce:	call   435ec0 <strcmp@plt+0x32708>
  413cd3:	movzx  edx,WORD PTR [rsp+0x1b0]
  413cdb:	movzx  esi,WORD PTR [rsp+0x1b2]
  413ce3:	mov    rax,rbx
  413ce6:	lea    rcx,[rbx+0x20]
  413cea:	lea    rbx,[rsp+0xd0]
  413cf2:	mov    r8,rax
  413cf5:	mov    rdi,rbx
  413cf8:	mov    QWORD PTR [rsp+0x40],rbx
  413cfd:	call   438840 <strcmp@plt+0x35088>
  413d02:	movzx  eax,WORD PTR [rbp+0x1e]
  413d06:	mov    QWORD PTR [rsp+0x48],0x0
  413d0f:	cmp    ax,0xffff
  413d13:	je     413d1e <strcmp@plt+0x10566>
  413d15:	add    rax,QWORD PTR [rbp+0x30]
  413d19:	mov    QWORD PTR [rsp+0x48],rax
  413d1e:	mov    rdi,rbp
  413d21:	call   422770 <strcmp@plt+0x1efb8>
  413d26:	mov    r15,0x468e3c
  413d2d:	mov    ebx,eax
  413d2f:	mov    ecx,DWORD PTR [r15]
  413d32:	test   ecx,ecx
  413d34:	jle    413d54 <strcmp@plt+0x1059c>
  413d36:	mov    rdi,rbp
  413d39:	call   423a90 <strcmp@plt+0x202d8>
  413d3e:	lea    rsi,[rip+0x366db]        # 44a420 <strcmp@plt+0x46c68>
  413d45:	mov    rdx,rax
  413d48:	mov    edi,0x5
  413d4d:	xor    eax,eax
  413d4f:	call   4306a0 <strcmp@plt+0x2cee8>
  413d54:	cmp    ebx,0x7
  413d57:	ja     413381 <strcmp@plt+0xfbc9>
  413d5d:	lea    rdx,[rip+0x36fe4]        # 44ad48 <strcmp@plt+0x47590>
  413d64:	mov    eax,ebx
  413d66:	movsxd rax,DWORD PTR [rdx+rax*4]
  413d6a:	add    rax,rdx
  413d6d:	jmp    rax
  413d6f:	mov    r15,QWORD PTR [rsp+0x28]
  413d74:	mov    rdi,rbx
  413d77:	call   42a650 <strcmp@plt+0x26e98>
  413d7c:	cmp    QWORD PTR [rsp+0x10],0x0
  413d82:	mov    DWORD PTR [rsp+0x8],0x0
  413d8a:	je     413d9e <strcmp@plt+0x105e6>
  413d8c:	mov    rdi,QWORD PTR [rsp+0x10]
  413d91:	call   4300b0 <strcmp@plt+0x2c8f8>
  413d96:	mov    DWORD PTR [rsp+0x8],0x0
  413d9e:	cmp    DWORD PTR [rsp+0x8],0x1
  413da3:	mov    eax,DWORD PTR [r15]
  413da6:	jne    41338e <strcmp@plt+0xfbd6>
  413dac:	cmp    eax,0x2
  413daf:	jle    4133ad <strcmp@plt+0xfbf5>
  413db5:	lea    rsi,[rip+0x36d14]        # 44aad0 <strcmp@plt+0x47318>
  413dbc:	mov    edi,0x7
  413dc1:	xor    eax,eax
  413dc3:	call   4306a0 <strcmp@plt+0x2cee8>
  413dc8:	jmp    4133ad <strcmp@plt+0xfbf5>
  413dcd:	mov    r15,QWORD PTR [rsp+0x28]
  413dd2:	mov    eax,DWORD PTR [r15]
  413dd5:	test   eax,eax
  413dd7:	jle    413d74 <strcmp@plt+0x105bc>
  413dd9:	mov    rdi,rbx
  413ddc:	call   424890 <strcmp@plt+0x210d8>
  413de1:	lea    rsi,[rip+0x36910]        # 44a6f8 <strcmp@plt+0x46f40>
  413de8:	mov    rdx,rax
  413deb:	mov    edi,0x5
  413df0:	xor    eax,eax
  413df2:	call   4306a0 <strcmp@plt+0x2cee8>
  413df7:	jmp    413d74 <strcmp@plt+0x105bc>
  413dfc:	mov    edi,0x4
  413e01:	xor    eax,eax
  413e03:	call   423800 <strcmp@plt+0x20048>
  413e08:	mov    esi,0x1
  413e0d:	mov    rdi,rax
  413e10:	mov    QWORD PTR [rsp+0x10],rax
  413e15:	call   424060 <strcmp@plt+0x208a8>
  413e1a:	jmp    41348b <strcmp@plt+0xfcd3>
  413e1f:	mov    rdi,r13
  413e22:	call   424150 <strcmp@plt+0x20998>
  413e27:	mov    r12,rax
  413e2a:	xor    eax,eax
  413e2c:	call   424740 <strcmp@plt+0x20f88>
  413e31:	lea    rdx,[rsp+0x88]
  413e39:	mov    rsi,rax
  413e3c:	mov    rdi,r13
  413e3f:	mov    rbx,rax
  413e42:	call   423050 <strcmp@plt+0x1f898>
  413e47:	cmp    eax,0x1
  413e4a:	je     413e8c <strcmp@plt+0x106d4>
  413e4c:	mov    r15,0x468e3c
  413e53:	xor    ebp,ebp
  413e55:	xor    r12d,r12d
  413e58:	mov    rdi,rbp
  413e5b:	call   42dac0 <strcmp@plt+0x2a308>
  413e60:	mov    rdi,rbx
  413e63:	call   424750 <strcmp@plt+0x20f98>
  413e68:	mov    rdi,r12
  413e6b:	call   424750 <strcmp@plt+0x20f98>
  413e70:	mov    eax,DWORD PTR [r15]
  413e73:	jmp    41338e <strcmp@plt+0xfbd6>
  413e78:	mov    r15,0x468e3c
  413e7f:	mov    rdi,rbx
  413e82:	call   42a650 <strcmp@plt+0x26e98>
  413e87:	jmp    413d8c <strcmp@plt+0x105d4>
  413e8c:	mov    rdi,QWORD PTR [r14+0x18]
  413e90:	mov    rsi,rbx
  413e93:	call   432570 <strcmp@plt+0x2edb8>
  413e98:	test   rax,rax
  413e9b:	mov    r13,rax
  413e9e:	je     414b6c <strcmp@plt+0x113b4>
  413ea4:	mov    rdx,QWORD PTR [rax+0x10]
  413ea8:	mov    rsi,r12
  413eab:	mov    rdi,rbp
  413eae:	call   423ef0 <strcmp@plt+0x20738>
  413eb3:	cmp    eax,0x1
  413eb6:	mov    DWORD PTR [rsp+0x8],eax
  413eba:	je     414a3e <strcmp@plt+0x11286>
  413ec0:	mov    r15,0x468e3c
  413ec7:	mov    edi,DWORD PTR [r15]
  413eca:	test   edi,edi
  413ecc:	jle    413e53 <strcmp@plt+0x1069b>
  413ece:	mov    rbp,QWORD PTR [r13+0x10]
  413ed2:	mov    rdi,rbx
  413ed5:	xor    r12d,r12d
  413ed8:	call   424890 <strcmp@plt+0x210d8>
  413edd:	lea    rsi,[rip+0x36aec]        # 44a9d0 <strcmp@plt+0x47218>
  413ee4:	mov    rdx,rax
  413ee7:	mov    edi,0x5
  413eec:	mov    rcx,rbp
  413eef:	xor    eax,eax
  413ef1:	xor    ebp,ebp
  413ef3:	call   4306a0 <strcmp@plt+0x2cee8>
  413ef8:	jmp    413e58 <strcmp@plt+0x106a0>
  413efd:	nop    DWORD PTR [rax]
  413f00:	cmp    QWORD PTR [rsp+0x48],0x0
  413f06:	je     4138c3 <strcmp@plt+0x1010b>
  413f0c:	mov    rax,QWORD PTR [rbp+0x0]
  413f10:	mov    QWORD PTR [rsp+0x90],rax
  413f18:	mov    rax,QWORD PTR [rbp+0x8]
  413f1c:	mov    QWORD PTR [rsp+0x98],rax
  413f24:	mov    rax,QWORD PTR [rbp+0x10]
  413f28:	mov    QWORD PTR [rsp+0xa0],rax
  413f30:	mov    rax,QWORD PTR [rbp+0x18]
  413f34:	mov    QWORD PTR [rsp+0xa8],rax
  413f3c:	mov    rax,QWORD PTR [rbp+0x20]
  413f40:	mov    QWORD PTR [rsp+0xb0],rax
  413f48:	mov    rax,QWORD PTR [rbp+0x28]
  413f4c:	mov    QWORD PTR [rsp+0xb8],rax
  413f54:	mov    rax,QWORD PTR [rbp+0x30]
  413f58:	mov    QWORD PTR [rsp+0xc0],rax
  413f60:	mov    rax,QWORD PTR [rbp+0x38]
  413f64:	mov    QWORD PTR [rsp+0xc8],rax
  413f6c:	mov    rax,QWORD PTR [rsp+0x48]
  413f71:	movzx  ebx,BYTE PTR [rax]
  413f74:	xor    eax,eax
  413f76:	call   424740 <strcmp@plt+0x20f88>
  413f7b:	lea    rdi,[rsp+0x90]
  413f83:	mov    QWORD PTR [rsp+0x58],rax
  413f88:	mov    r12,rdi
  413f8b:	mov    QWORD PTR [rsp+0x18],rdi
  413f90:	shr    bl,0x2
  413f93:	call   423110 <strcmp@plt+0x1f958>
  413f98:	mov    rsi,QWORD PTR [rsp+0x58]
  413f9d:	mov    rdi,r12
  413fa0:	and    ebx,0x1
  413fa3:	mov    r13,rax
  413fa6:	mov    QWORD PTR [rsp+0x30],rax
  413fab:	call   4229d0 <strcmp@plt+0x1f218>
  413fb0:	cmp    eax,0x1
  413fb3:	mov    DWORD PTR [rsp+0x8],eax
  413fb7:	jne    413fe9 <strcmp@plt+0x10831>
  413fb9:	movzx  eax,BYTE PTR [r13+0x0]
  413fbe:	test   al,0x2
  413fc0:	je     41400c <strcmp@plt+0x10854>
  413fc2:	mov    eax,DWORD PTR [r15]
  413fc5:	cmp    eax,0x1
  413fc8:	jle    41338e <strcmp@plt+0xfbd6>
  413fce:	lea    rsi,[rip+0x36c50]        # 44ac25 <strcmp@plt+0x4746d>
  413fd5:	xor    eax,eax
  413fd7:	mov    edi,0x6
  413fdc:	call   4306a0 <strcmp@plt+0x2cee8>
  413fe1:	mov    eax,DWORD PTR [r15]
  413fe4:	jmp    41338e <strcmp@plt+0xfbd6>
  413fe9:	xor    edi,edi
  413feb:	xor    ebx,ebx
  413fed:	call   42dac0 <strcmp@plt+0x2a308>
  413ff2:	mov    rdi,rbx
  413ff5:	call   424750 <strcmp@plt+0x20f98>
  413ffa:	mov    rdi,QWORD PTR [rsp+0x58]
  413fff:	call   424750 <strcmp@plt+0x20f98>
  414004:	mov    eax,DWORD PTR [r15]
  414007:	jmp    41338e <strcmp@plt+0xfbd6>
  41400c:	test   al,0x1
  41400e:	je     4140a9 <strcmp@plt+0x108f1>
  414014:	mov    eax,DWORD PTR [r15]
  414017:	cmp    eax,0x1
  41401a:	jle    41338e <strcmp@plt+0xfbd6>
  414020:	lea    rsi,[rip+0x36c19]        # 44ac40 <strcmp@plt+0x47488>
  414027:	xor    eax,eax
  414029:	mov    edi,0x6
  41402e:	call   4306a0 <strcmp@plt+0x2cee8>
  414033:	mov    eax,DWORD PTR [r15]
  414036:	jmp    41338e <strcmp@plt+0xfbd6>
  41403b:	nop    DWORD PTR [rax+rax*1+0x0]
  414040:	mov    QWORD PTR ds:0x4,0x0
  41404c:	ud2    
  41404e:	lea    rax,[rsp+0x170]
  414056:	lea    rbp,[rsp+0x80]
  41405e:	mov    rdi,QWORD PTR [rsp+0x18]
  414063:	mov    rdx,rbp
  414066:	mov    rsi,rax
  414069:	mov    QWORD PTR [rsp+0x50],rax
  41406e:	call   423090 <strcmp@plt+0x1f8d8>
  414073:	mov    r15,0x468e3c
  41407a:	mov    r13d,DWORD PTR [r15]
  41407d:	test   r13d,r13d
  414080:	jg     414c8d <strcmp@plt+0x114d5>
  414086:	cmp    QWORD PTR [rsp+0x10],0x0
  41408c:	je     4137bb <strcmp@plt+0x10003>
  414092:	mov    rsi,QWORD PTR [rsp+0x50]
  414097:	mov    rdi,QWORD PTR [rsp+0x10]
  41409c:	mov    rdx,rbp
  41409f:	call   423770 <strcmp@plt+0x1ffb8>
  4140a4:	jmp    41363b <strcmp@plt+0xfe83>
  4140a9:	mov    rdi,0x424750
  4140b0:	call   42d4f0 <strcmp@plt+0x29d38>
  4140b5:	mov    rdi,QWORD PTR [rsp+0x18]
  4140ba:	mov    rsi,rax
  4140bd:	mov    QWORD PTR [rsp+0x10],rax
  4140c2:	call   422a60 <strcmp@plt+0x1f2a8>
  4140c7:	mov    rax,QWORD PTR [rsp+0x30]
  4140cc:	cmp    BYTE PTR [rax+0x3],0x0
  4140d0:	je     414301 <strcmp@plt+0x10b49>
  4140d6:	movzx  eax,bl
  4140d9:	mov    QWORD PTR [rsp+0x68],rbp
  4140de:	mov    rbp,QWORD PTR [rsp+0x30]
  4140e3:	mov    DWORD PTR [rsp+0x48],eax
  4140e7:	lea    rax,[rsp+0x120]
  4140ef:	mov    DWORD PTR [rsp+0x60],0x0
  4140f7:	xor    r13d,r13d
  4140fa:	mov    QWORD PTR [rsp+0x28],rax
  4140ff:	xor    eax,eax
  414101:	call   424740 <strcmp@plt+0x20f88>
  414106:	mov    rdi,QWORD PTR [rsp+0x18]
  41410b:	mov    rsi,rax
  41410e:	mov    rbx,rax
  414111:	call   422a10 <strcmp@plt+0x1f258>
  414116:	cmp    eax,0x1
  414119:	jne    4141dd <strcmp@plt+0x10a25>
  41411f:	mov    rdi,QWORD PTR [r14+0x18]
  414123:	mov    rsi,rbx
  414126:	call   432570 <strcmp@plt+0x2edb8>
  41412b:	mov    rdi,QWORD PTR [r14+0x20]
  41412f:	mov    r12,rax
  414132:	mov    rsi,rbx
  414135:	call   432570 <strcmp@plt+0x2edb8>
  41413a:	test   r12,r12
  41413d:	mov    QWORD PTR [rsp+0x30],rax
  414142:	jne    4141fd <strcmp@plt+0x10a45>
  414148:	test   rax,rax
  41414b:	jne    4141fd <strcmp@plt+0x10a45>
  414151:	cmp    DWORD PTR [rsp+0x48],0x1
  414156:	je     414334 <strcmp@plt+0x10b7c>
  41415c:	mov    rdi,QWORD PTR [r14+0x18]
  414160:	mov    rsi,rbx
  414163:	call   432940 <strcmp@plt+0x2f188>
  414168:	mov    rdi,rbx
  41416b:	mov    r12,rax
  41416e:	call   428fc0 <strcmp@plt+0x25808>
  414173:	mov    r8,QWORD PTR [rbp+0x4]
  414177:	xor    edx,edx
  414179:	test   eax,eax
  41417b:	sete   dl
  41417e:	mov    esi,0xf
  414183:	mov    ecx,0x1
  414188:	mov    rdi,r12
  41418b:	call   423990 <strcmp@plt+0x201d8>
  414190:	mov    esi,DWORD PTR [r15]
  414193:	mov    r13,rax
  414196:	test   esi,esi
  414198:	jg     4147c2 <strcmp@plt+0x1100a>
  41419e:	mov    r8,QWORD PTR [rsp+0x28]
  4141a3:	mov    rcx,QWORD PTR [rsp+0x20]
  4141a8:	mov    rdi,r14
  4141ab:	mov    rdx,QWORD PTR [rsp+0x40]
  4141b0:	mov    rsi,QWORD PTR [rsp+0x10]
  4141b5:	call   4085b0 <strcmp@plt+0x4df8>
  4141ba:	cmp    eax,0x1
  4141bd:	je     414779 <strcmp@plt+0x10fc1>
  4141c3:	mov    edi,DWORD PTR [r15]
  4141c6:	test   edi,edi
  4141c8:	jle    4141dd <strcmp@plt+0x10a25>
  4141ca:	lea    rsi,[rip+0x3404f]        # 448220 <strcmp@plt+0x44a68>
  4141d1:	mov    edi,0x5
  4141d6:	xor    eax,eax
  4141d8:	call   4306a0 <strcmp@plt+0x2cee8>
  4141dd:	mov    rdi,QWORD PTR [rsp+0x10]
  4141e2:	call   42dac0 <strcmp@plt+0x2a308>
  4141e7:	test   r13,r13
  4141ea:	je     413ff2 <strcmp@plt+0x1083a>
  4141f0:	mov    rdi,r13
  4141f3:	call   4300b0 <strcmp@plt+0x2c8f8>
  4141f8:	jmp    413ff2 <strcmp@plt+0x1083a>
  4141fd:	cmp    QWORD PTR [rsp+0x30],0x0
  414203:	je     414541 <strcmp@plt+0x10d89>
  414209:	cmp    DWORD PTR [rsp+0x48],0x1
  41420e:	mov    rax,QWORD PTR [rsp+0x30]
  414213:	mov    rax,QWORD PTR [rax]
  414216:	je     414443 <strcmp@plt+0x10c8b>
  41421c:	test   r12,r12
  41421f:	mov    QWORD PTR [rsp+0x38],rax
  414224:	je     41423d <strcmp@plt+0x10a85>
  414226:	cmp    BYTE PTR [r12+0x8],0x0
  41422c:	jne    41423d <strcmp@plt+0x10a85>
  41422e:	mov    rax,QWORD PTR [rsp+0x30]
  414233:	cmp    BYTE PTR [rax+0x8],0x0
  414237:	je     41472a <strcmp@plt+0x10f72>
  41423d:	mov    esi,DWORD PTR [r15]
  414240:	test   esi,esi
  414242:	jg     414410 <strcmp@plt+0x10c58>
  414248:	mov    edi,0x2
  41424d:	xor    eax,eax
  41424f:	call   423800 <strcmp@plt+0x20048>
  414254:	mov    rsi,QWORD PTR [rsp+0x38]
  414259:	mov    r13,rax
  41425c:	xor    edx,edx
  41425e:	mov    rdi,rax
  414261:	call   423280 <strcmp@plt+0x1fac8>
  414266:	and    BYTE PTR [rax+0x6],0xef
  41426a:	movzx  eax,WORD PTR [r13+0x24]
  41426f:	cmp    ax,0xffff
  414273:	je     414320 <strcmp@plt+0x10b68>
  414279:	add    rax,QWORD PTR [r13+0x30]
  41427d:	mov    r8,QWORD PTR [rsp+0x28]
  414282:	mov    rdi,r14
  414285:	mov    rcx,QWORD PTR [rsp+0x20]
  41428a:	mov    rsi,QWORD PTR [rsp+0x10]
  41428f:	and    BYTE PTR [rax],0xf7
  414292:	mov    rdx,QWORD PTR [rbp+0x4]
  414296:	mov    QWORD PTR [rax+0x4],rdx
  41429a:	mov    rdx,QWORD PTR [rsp+0x40]
  41429f:	call   4085b0 <strcmp@plt+0x4df8>
  4142a4:	cmp    eax,0x1
  4142a7:	jne    41437f <strcmp@plt+0x10bc7>
  4142ad:	mov    rdx,QWORD PTR [rsp+0x28]
  4142b2:	mov    rsi,r13
  4142b5:	mov    rdi,r14
  4142b8:	call   4083b0 <strcmp@plt+0x4bf8>
  4142bd:	cmp    eax,0x1
  4142c0:	je     4142dc <strcmp@plt+0x10b24>
  4142c2:	mov    edx,DWORD PTR [r15]
  4142c5:	test   edx,edx
  4142c7:	jle    4142dc <strcmp@plt+0x10b24>
  4142c9:	lea    rsi,[rip+0x3699f]        # 44ac6f <strcmp@plt+0x474b7>
  4142d0:	mov    edi,0x5
  4142d5:	xor    eax,eax
  4142d7:	call   4306a0 <strcmp@plt+0x2cee8>
  4142dc:	mov    rdi,r13
  4142df:	call   4300b0 <strcmp@plt+0x2c8f8>
  4142e4:	mov    rdi,rbx
  4142e7:	call   424750 <strcmp@plt+0x20f98>
  4142ec:	add    DWORD PTR [rsp+0x60],0x1
  4142f1:	movzx  eax,BYTE PTR [rbp+0x3]
  4142f5:	mov    ebx,DWORD PTR [rsp+0x60]
  4142f9:	cmp    ebx,eax
  4142fb:	jl     4140ff <strcmp@plt+0x10947>
  414301:	mov    rdi,QWORD PTR [rsp+0x10]
  414306:	call   42dac0 <strcmp@plt+0x2a308>
  41430b:	mov    rdi,QWORD PTR [rsp+0x58]
  414310:	call   424750 <strcmp@plt+0x20f98>
  414315:	mov    eax,DWORD PTR [r15]
  414318:	jmp    413dac <strcmp@plt+0x105f4>
  41431d:	nop    DWORD PTR [rax]
  414320:	movzx  eax,BYTE PTR ds:0x0
  414328:	and    eax,0xfffffff7
  41432b:	mov    BYTE PTR ds:0x0,al
  414332:	ud2    
  414334:	mov    r9,QWORD PTR [rbp+0x4]
  414338:	xor    ecx,ecx
  41433a:	xor    esi,esi
  41433c:	mov    rdi,rbx
  41433f:	mov    r8d,0x1
  414345:	mov    edx,0x5
  41434a:	call   423a10 <strcmp@plt+0x20258>
  41434f:	mov    edi,DWORD PTR [r15]
  414352:	mov    r12,rax
  414355:	test   edi,edi
  414357:	jg     414395 <strcmp@plt+0x10bdd>
  414359:	mov    rdx,QWORD PTR [rsp+0x20]
  41435e:	mov    rsi,r12
  414361:	mov    rdi,r14
  414364:	call   4083b0 <strcmp@plt+0x4bf8>
  414369:	test   r12,r12
  41436c:	je     4142e4 <strcmp@plt+0x10b2c>
  414372:	mov    rdi,r12
  414375:	call   4300b0 <strcmp@plt+0x2c8f8>
  41437a:	jmp    4142e4 <strcmp@plt+0x10b2c>
  41437f:	mov    ecx,DWORD PTR [r15]
  414382:	test   ecx,ecx
  414384:	jg     4143ee <strcmp@plt+0x10c36>
  414386:	mov    rdi,QWORD PTR [rsp+0x10]
  41438b:	call   42dac0 <strcmp@plt+0x2a308>
  414390:	jmp    4141f0 <strcmp@plt+0x10a38>
  414395:	mov    rdi,rbx
  414398:	call   424890 <strcmp@plt+0x210d8>
  41439d:	lea    rsi,[rip+0x360dc]        # 44a480 <strcmp@plt+0x46cc8>
  4143a4:	mov    rdx,rax
  4143a7:	mov    edi,0x5
  4143ac:	xor    eax,eax
  4143ae:	call   4306a0 <strcmp@plt+0x2cee8>
  4143b3:	cmp    DWORD PTR [r15],0x1
  4143b7:	jle    414359 <strcmp@plt+0x10ba1>
  4143b9:	mov    rdi,rbx
  4143bc:	call   424890 <strcmp@plt+0x210d8>
  4143c1:	mov    rdi,r12
  4143c4:	mov    QWORD PTR [rsp+0x30],rax
  4143c9:	call   423a90 <strcmp@plt+0x202d8>
  4143ce:	mov    rcx,QWORD PTR [rsp+0x30]
  4143d3:	lea    rsi,[rip+0x3687f]        # 44ac59 <strcmp@plt+0x474a1>
  4143da:	mov    rdx,rax
  4143dd:	mov    edi,0x6
  4143e2:	xor    eax,eax
  4143e4:	call   4306a0 <strcmp@plt+0x2cee8>
  4143e9:	jmp    414359 <strcmp@plt+0x10ba1>
  4143ee:	lea    rsi,[rip+0x33e2b]        # 448220 <strcmp@plt+0x44a68>
  4143f5:	mov    edi,0x5
  4143fa:	xor    eax,eax
  4143fc:	call   4306a0 <strcmp@plt+0x2cee8>
  414401:	mov    rdi,QWORD PTR [rsp+0x10]
  414406:	call   42dac0 <strcmp@plt+0x2a308>
  41440b:	jmp    4141f0 <strcmp@plt+0x10a38>
  414410:	mov    rdi,QWORD PTR [rsp+0x38]
  414415:	call   424890 <strcmp@plt+0x210d8>
  41441a:	mov    rdi,rbx
  41441d:	mov    r12,rax
  414420:	call   424890 <strcmp@plt+0x210d8>
  414425:	lea    rsi,[rip+0x361c4]        # 44a5f0 <strcmp@plt+0x46e38>
  41442c:	mov    rdx,rax
  41442f:	mov    rcx,r12
  414432:	mov    edi,0x5
  414437:	xor    eax,eax
  414439:	call   4306a0 <strcmp@plt+0x2cee8>
  41443e:	jmp    414248 <strcmp@plt+0x10a90>
  414443:	xor    r8d,r8d
  414446:	cmp    BYTE PTR [r12+0x19],0x0
  41444c:	mov    QWORD PTR [rsp+0x70],rax
  414451:	mov    edi,0x6
  414456:	sete   r8b
  41445a:	xor    eax,eax
  41445c:	mov    DWORD PTR [rsp+0x7c],r8d
  414461:	call   423800 <strcmp@plt+0x20048>
  414466:	mov    QWORD PTR [rsp+0x38],rax
  41446b:	push   QWORD PTR [rsp+0x20]
  41446f:	mov    ecx,0x1
  414474:	push   0x0
  414476:	mov    r8d,DWORD PTR [rsp+0x8c]
  41447e:	mov    edx,0x2
  414483:	mov    rdi,QWORD PTR [rsp+0x80]
  41448b:	mov    r9,QWORD PTR [r12+0x20]
  414490:	mov    esi,0x5a0
  414495:	call   42bab0 <strcmp@plt+0x282f8>
  41449a:	mov    rdi,QWORD PTR [rsp+0x48]
  41449f:	mov    rsi,rax
  4144a2:	mov    QWORD PTR [rsp+0x80],rax
  4144aa:	call   423480 <strcmp@plt+0x1fcc8>
  4144af:	mov    rsi,QWORD PTR [rsp+0x48]
  4144b4:	pop    rdx
  4144b5:	pop    rcx
  4144b6:	movzx  eax,WORD PTR [rsi+0x24]
  4144ba:	cmp    ax,0xffff
  4144be:	je     414040 <strcmp@plt+0x10888>
  4144c4:	mov    rdx,QWORD PTR [rsi+0x30]
  4144c8:	mov    rcx,QWORD PTR [rbp+0x4]
  4144cc:	mov    rdi,r14
  4144cf:	mov    QWORD PTR [rdx+rax*1+0x4],rcx
  4144d4:	mov    rdx,QWORD PTR [rsp+0x20]
  4144d9:	call   4083b0 <strcmp@plt+0x4bf8>
  4144de:	cmp    eax,0x1
  4144e1:	je     414524 <strcmp@plt+0x10d6c>
  4144e3:	mov    r11d,DWORD PTR [r15]
  4144e6:	test   r11d,r11d
  4144e9:	jle    4144fe <strcmp@plt+0x10d46>
  4144eb:	lea    rsi,[rip+0x36796]        # 44ac88 <strcmp@plt+0x474d0>
  4144f2:	mov    edi,0x5
  4144f7:	xor    eax,eax
  4144f9:	call   4306a0 <strcmp@plt+0x2cee8>
  4144fe:	mov    rdi,QWORD PTR [rsp+0x70]
  414503:	call   42b280 <strcmp@plt+0x27ac8>
  414508:	mov    rdi,QWORD PTR [rsp+0x38]
  41450d:	call   4300b0 <strcmp@plt+0x2c8f8>
  414512:	mov    rax,QWORD PTR [rsp+0x30]
  414517:	mov    rax,QWORD PTR [rax]
  41451a:	mov    QWORD PTR [rsp+0x38],rax
  41451f:	jmp    414226 <strcmp@plt+0x10a6e>
  414524:	mov    r10d,DWORD PTR [r15]
  414527:	test   r10d,r10d
  41452a:	jle    4144fe <strcmp@plt+0x10d46>
  41452c:	lea    rsi,[rip+0x36771]        # 44aca4 <strcmp@plt+0x474ec>
  414533:	mov    edi,0x5
  414538:	xor    eax,eax
  41453a:	call   4306a0 <strcmp@plt+0x2cee8>
  41453f:	jmp    4144fe <strcmp@plt+0x10d46>
  414541:	cmp    BYTE PTR [r12+0x9],0x0
  414547:	mov    QWORD PTR [rsp+0x30],rbx
  41454c:	jne    414557 <strcmp@plt+0x10d9f>
  41454e:	mov    rax,QWORD PTR [r12]
  414552:	mov    QWORD PTR [rsp+0x30],rax
  414557:	cmp    DWORD PTR [rsp+0x48],0x1
  41455c:	je     414647 <strcmp@plt+0x10e8f>
  414562:	mov    r8,QWORD PTR [rbp+0x4]
  414566:	mov    rdi,QWORD PTR [rsp+0x30]
  41456b:	mov    ecx,0x1
  414570:	mov    edx,0x1
  414575:	mov    esi,0x1
  41457a:	call   423990 <strcmp@plt+0x201d8>
  41457f:	mov    r8d,DWORD PTR [r15]
  414582:	mov    r13,rax
  414585:	test   r8d,r8d
  414588:	jg     4145ec <strcmp@plt+0x10e34>
  41458a:	mov    r8,QWORD PTR [rsp+0x28]
  41458f:	mov    rcx,QWORD PTR [rsp+0x20]
  414594:	mov    rdi,r14
  414597:	mov    rdx,QWORD PTR [rsp+0x40]
  41459c:	mov    rsi,QWORD PTR [rsp+0x10]
  4145a1:	call   4085b0 <strcmp@plt+0x4df8>
  4145a6:	cmp    eax,0x1
  4145a9:	jne    4141c3 <strcmp@plt+0x10a0b>
  4145af:	mov    rdx,QWORD PTR [rsp+0x28]
  4145b4:	mov    rsi,r13
  4145b7:	mov    rdi,r14
  4145ba:	call   4083b0 <strcmp@plt+0x4bf8>
  4145bf:	cmp    eax,0x1
  4145c2:	je     4145de <strcmp@plt+0x10e26>
  4145c4:	mov    esi,DWORD PTR [r15]
  4145c7:	test   esi,esi
  4145c9:	jle    4145de <strcmp@plt+0x10e26>
  4145cb:	lea    rsi,[rip+0x3669d]        # 44ac6f <strcmp@plt+0x474b7>
  4145d2:	mov    edi,0x5
  4145d7:	xor    eax,eax
  4145d9:	call   4306a0 <strcmp@plt+0x2cee8>
  4145de:	test   r13,r13
  4145e1:	jne    4142dc <strcmp@plt+0x10b24>
  4145e7:	jmp    4142e4 <strcmp@plt+0x10b2c>
  4145ec:	mov    rdi,rbx
  4145ef:	call   424890 <strcmp@plt+0x210d8>
  4145f4:	lea    rsi,[rip+0x35f1d]        # 44a518 <strcmp@plt+0x46d60>
  4145fb:	mov    rdx,rax
  4145fe:	mov    edi,0x5
  414603:	xor    eax,eax
  414605:	call   4306a0 <strcmp@plt+0x2cee8>
  41460a:	cmp    DWORD PTR [r15],0x1
  41460e:	jle    41458a <strcmp@plt+0x10dd2>
  414614:	mov    rdi,QWORD PTR [rsp+0x30]
  414619:	call   424890 <strcmp@plt+0x210d8>
  41461e:	mov    rdi,r13
  414621:	mov    r12,rax
  414624:	call   423a90 <strcmp@plt+0x202d8>
  414629:	lea    rsi,[rip+0x36629]        # 44ac59 <strcmp@plt+0x474a1>
  414630:	mov    rdx,rax
  414633:	mov    rcx,r12
  414636:	mov    edi,0x6
  41463b:	xor    eax,eax
  41463d:	call   4306a0 <strcmp@plt+0x2cee8>
  414642:	jmp    41458a <strcmp@plt+0x10dd2>
  414647:	xor    r8d,r8d
  41464a:	cmp    BYTE PTR [r12+0x19],0x0
  414650:	mov    edi,0x6
  414655:	sete   r8b
  414659:	xor    eax,eax
  41465b:	mov    DWORD PTR [rsp+0x70],r8d
  414660:	call   423800 <strcmp@plt+0x20048>
  414665:	mov    QWORD PTR [rsp+0x38],rax
  41466a:	push   QWORD PTR [rsp+0x20]
  41466e:	mov    edx,0x3
  414673:	push   0x0
  414675:	mov    r8d,DWORD PTR [rsp+0x80]
  41467d:	mov    ecx,0x1
  414682:	mov    rdi,QWORD PTR [rsp+0x40]
  414687:	mov    r9,QWORD PTR [r12+0x20]
  41468c:	mov    esi,0xf
  414691:	call   42bab0 <strcmp@plt+0x282f8>
  414696:	mov    rdi,QWORD PTR [rsp+0x48]
  41469b:	mov    rsi,rax
  41469e:	mov    r12,rax
  4146a1:	call   423480 <strcmp@plt+0x1fcc8>
  4146a6:	mov    rsi,QWORD PTR [rsp+0x48]
  4146ab:	pop    r11
  4146ad:	pop    rdx
  4146ae:	movzx  eax,WORD PTR [rsi+0x24]
  4146b2:	cmp    ax,0xffff
  4146b6:	je     414040 <strcmp@plt+0x10888>
  4146bc:	mov    rdx,QWORD PTR [rsi+0x30]
  4146c0:	mov    rcx,QWORD PTR [rbp+0x4]
  4146c4:	mov    rdi,r14
  4146c7:	mov    QWORD PTR [rdx+rax*1+0x4],rcx
  4146cc:	mov    rdx,QWORD PTR [rsp+0x20]
  4146d1:	call   4083b0 <strcmp@plt+0x4bf8>
  4146d6:	cmp    eax,0x1
  4146d9:	je     41470d <strcmp@plt+0x10f55>
  4146db:	mov    r10d,DWORD PTR [r15]
  4146de:	test   r10d,r10d
  4146e1:	jle    4146f6 <strcmp@plt+0x10f3e>
  4146e3:	lea    rsi,[rip+0x3659e]        # 44ac88 <strcmp@plt+0x474d0>
  4146ea:	mov    edi,0x5
  4146ef:	xor    eax,eax
  4146f1:	call   4306a0 <strcmp@plt+0x2cee8>
  4146f6:	mov    rdi,r12
  4146f9:	call   42b280 <strcmp@plt+0x27ac8>
  4146fe:	mov    rdi,QWORD PTR [rsp+0x38]
  414703:	call   4300b0 <strcmp@plt+0x2c8f8>
  414708:	jmp    4142e4 <strcmp@plt+0x10b2c>
  41470d:	mov    r9d,DWORD PTR [r15]
  414710:	test   r9d,r9d
  414713:	jle    4146f6 <strcmp@plt+0x10f3e>
  414715:	lea    rsi,[rip+0x36588]        # 44aca4 <strcmp@plt+0x474ec>
  41471c:	mov    edi,0x5
  414721:	xor    eax,eax
  414723:	call   4306a0 <strcmp@plt+0x2cee8>
  414728:	jmp    4146f6 <strcmp@plt+0x10f3e>
  41472a:	mov    rdi,r14
  41472d:	call   408350 <strcmp@plt+0x4b98>
  414732:	mov    rdi,rax
  414735:	mov    r12,rax
  414738:	call   408160 <strcmp@plt+0x49a8>
  41473d:	test   al,0x1
  41473f:	jne    4148d4 <strcmp@plt+0x1111c>
  414745:	mov    rdi,r12
  414748:	call   408160 <strcmp@plt+0x49a8>
  41474d:	test   al,0x2
  41474f:	jne    41481f <strcmp@plt+0x11067>
  414755:	mov    r9d,DWORD PTR [r15]
  414758:	test   r9d,r9d
  41475b:	jle    4145de <strcmp@plt+0x10e26>
  414761:	lea    rsi,[rip+0x35dd8]        # 44a540 <strcmp@plt+0x46d88>
  414768:	mov    edi,0x5
  41476d:	xor    eax,eax
  41476f:	call   4306a0 <strcmp@plt+0x2cee8>
  414774:	jmp    4145de <strcmp@plt+0x10e26>
  414779:	mov    rdx,QWORD PTR [rsp+0x28]
  41477e:	mov    rsi,r13
  414781:	mov    rdi,r14
  414784:	call   4083b0 <strcmp@plt+0x4bf8>
  414789:	cmp    eax,0x1
  41478c:	je     4147a8 <strcmp@plt+0x10ff0>
  41478e:	mov    ecx,DWORD PTR [r15]
  414791:	test   ecx,ecx
  414793:	jle    4147a8 <strcmp@plt+0x10ff0>
  414795:	lea    rsi,[rip+0x364d3]        # 44ac6f <strcmp@plt+0x474b7>
  41479c:	mov    edi,0x5
  4147a1:	xor    eax,eax
  4147a3:	call   4306a0 <strcmp@plt+0x2cee8>
  4147a8:	test   r13,r13
  4147ab:	je     4147b5 <strcmp@plt+0x10ffd>
  4147ad:	mov    rdi,r13
  4147b0:	call   4300b0 <strcmp@plt+0x2c8f8>
  4147b5:	mov    rdi,r12
  4147b8:	call   424750 <strcmp@plt+0x20f98>
  4147bd:	jmp    4142e4 <strcmp@plt+0x10b2c>
  4147c2:	mov    rdi,rbx
  4147c5:	call   424890 <strcmp@plt+0x210d8>
  4147ca:	lea    rsi,[rip+0x35d0f]        # 44a4e0 <strcmp@plt+0x46d28>
  4147d1:	mov    rdx,rax
  4147d4:	mov    edi,0x5
  4147d9:	xor    eax,eax
  4147db:	call   4306a0 <strcmp@plt+0x2cee8>
  4147e0:	cmp    DWORD PTR [r15],0x1
  4147e4:	jle    41419e <strcmp@plt+0x109e6>
  4147ea:	mov    rdi,rbx
  4147ed:	call   424890 <strcmp@plt+0x210d8>
  4147f2:	mov    rdi,r13
  4147f5:	mov    QWORD PTR [rsp+0x30],rax
  4147fa:	call   423a90 <strcmp@plt+0x202d8>
  4147ff:	mov    rcx,QWORD PTR [rsp+0x30]
  414804:	lea    rsi,[rip+0x3644e]        # 44ac59 <strcmp@plt+0x474a1>
  41480b:	mov    rdx,rax
  41480e:	mov    edi,0x6
  414813:	xor    eax,eax
  414815:	call   4306a0 <strcmp@plt+0x2cee8>
  41481a:	jmp    41419e <strcmp@plt+0x109e6>
  41481f:	mov    rdi,QWORD PTR [rsp+0x38]
  414824:	mov    esi,0xa
  414829:	call   412730 <strcmp@plt+0xef78>
  41482e:	test   rax,rax
  414831:	je     414755 <strcmp@plt+0x10f9d>
  414837:	mov    rdi,QWORD PTR [rax]
  41483a:	call   425050 <strcmp@plt+0x21898>
  41483f:	cmp    DWORD PTR [rax+0x18],0x3
  414843:	mov    r12,rax
  414846:	je     4148bb <strcmp@plt+0x11103>
  414848:	mov    eax,DWORD PTR [r15]
  41484b:	cmp    eax,0x2
  41484e:	jle    41486e <strcmp@plt+0x110b6>
  414850:	mov    rdi,r12
  414853:	call   424890 <strcmp@plt+0x210d8>
  414858:	lea    rsi,[rip+0x35d59]        # 44a5b8 <strcmp@plt+0x46e00>
  41485f:	mov    rdx,rax
  414862:	mov    edi,0x7
  414867:	xor    eax,eax
  414869:	call   4306a0 <strcmp@plt+0x2cee8>
  41486e:	mov    rdi,QWORD PTR [rsp+0x68]
  414873:	movzx  eax,WORD PTR [rdi+0x1e]
  414877:	cmp    ax,0xffff
  41487b:	je     4148f1 <strcmp@plt+0x11139>
  41487d:	mov    rdx,QWORD PTR [rdi+0x30]
  414881:	and    BYTE PTR [rdx+rax*1],0xfb
  414885:	call   4303e0 <strcmp@plt+0x2cc28>
  41488a:	mov    r8,r12
  41488d:	mov    r12,QWORD PTR [rsp+0x50]
  414892:	xor    ecx,ecx
  414894:	mov    edx,0x10f6
  414899:	mov    esi,0x10f6
  41489e:	mov    rdi,r12
  4148a1:	call   438840 <strcmp@plt+0x35088>
  4148a6:	mov    rsi,QWORD PTR [rsp+0x68]
  4148ab:	mov    rdx,r12
  4148ae:	mov    rdi,r14
  4148b1:	call   4083b0 <strcmp@plt+0x4bf8>
  4148b6:	jmp    4145de <strcmp@plt+0x10e26>
  4148bb:	mov    rdi,rax
  4148be:	call   428310 <strcmp@plt+0x24b58>
  4148c3:	cmp    eax,0xa
  4148c6:	je     41492e <strcmp@plt+0x11176>
  4148c8:	mov    edi,DWORD PTR [r15]
  4148cb:	test   edi,edi
  4148cd:	jg     414906 <strcmp@plt+0x1114e>
  4148cf:	xor    r12d,r12d
  4148d2:	jmp    41486e <strcmp@plt+0x110b6>
  4148d4:	mov    rdi,QWORD PTR [rsp+0x38]
  4148d9:	mov    esi,0x2
  4148de:	call   412730 <strcmp@plt+0xef78>
  4148e3:	test   rax,rax
  4148e6:	jne    414837 <strcmp@plt+0x1107f>
  4148ec:	jmp    414745 <strcmp@plt+0x10f8d>
  4148f1:	movzx  eax,WORD PTR ds:0x0
  4148f9:	and    eax,0xfffffffb
  4148fc:	mov    WORD PTR ds:0x0,ax
  414904:	ud2    
  414906:	mov    rdi,r12
  414909:	xor    r12d,r12d
  41490c:	call   428310 <strcmp@plt+0x24b58>
  414911:	lea    rsi,[rip+0x35c70]        # 44a588 <strcmp@plt+0x46dd0>
  414918:	mov    edx,eax
  41491a:	mov    edi,0x5
  41491f:	xor    eax,eax
  414921:	call   4306a0 <strcmp@plt+0x2cee8>
  414926:	mov    eax,DWORD PTR [r15]
  414929:	jmp    41484b <strcmp@plt+0x11093>
  41492e:	mov    rdi,r12
  414931:	call   4299e0 <strcmp@plt+0x26228>
  414936:	mov    r8d,DWORD PTR [rax+0x18]
  41493a:	test   r8d,r8d
  41493d:	je     4149f9 <strcmp@plt+0x11241>
  414943:	mov    rax,QWORD PTR [rax]
  414946:	mov    rax,QWORD PTR [rax+0x10]
  41494a:	mov    r12,QWORD PTR [rax+0x8]
  41494e:	jmp    414848 <strcmp@plt+0x11090>
  414953:	mov    rax,QWORD PTR [rsp+0x58]
  414958:	mov    rbx,QWORD PTR [rsp+0x10]
  41495d:	mov    edx,0x10f6
  414962:	mov    esi,0x10f6
  414967:	lea    r8,[rax+0x20]
  41496b:	mov    rcx,rax
  41496e:	mov    rdi,rbx
  414971:	call   435b50 <strcmp@plt+0x32398>
  414976:	mov    esi,DWORD PTR [r12+0x10]
  41497b:	mov    rdi,rbx
  41497e:	call   423d00 <strcmp@plt+0x20548>
  414983:	mov    rcx,QWORD PTR [r12+0x18]
  414988:	mov    edx,DWORD PTR [r12+0x10]
  41498d:	mov    rsi,rax
  414990:	mov    rdi,rbx
  414993:	call   423e40 <strcmp@plt+0x20688>
  414998:	mov    rdi,rbx
  41499b:	call   4237a0 <strcmp@plt+0x1ffe8>
  4149a0:	or     BYTE PTR [rax+0x1],0x40
  4149a4:	or     BYTE PTR [rax],0x8
  4149a7:	jmp    413738 <strcmp@plt+0xff80>
  4149ac:	mov    r15,0x468e3c
  4149b3:	mov    r10d,DWORD PTR [r15]
  4149b6:	test   r10d,r10d
  4149b9:	jle    413e7f <strcmp@plt+0x106c7>
  4149bf:	mov    rdi,r13
  4149c2:	call   424890 <strcmp@plt+0x210d8>
  4149c7:	lea    rsi,[rip+0x35ed2]        # 44a8a0 <strcmp@plt+0x470e8>
  4149ce:	mov    rdx,rax
  4149d1:	mov    edi,0x5
  4149d6:	xor    eax,eax
  4149d8:	call   4306a0 <strcmp@plt+0x2cee8>
  4149dd:	jmp    413e7f <strcmp@plt+0x106c7>
  4149e2:	xor    ebx,ebx
  4149e4:	mov    DWORD PTR [rsp+0x40],0x0
  4149ec:	xor    r12d,r12d
  4149ef:	jmp    413621 <strcmp@plt+0xfe69>
  4149f4:	call   403460 <__stack_chk_fail@plt>
  4149f9:	mov    rax,QWORD PTR ds:0x10
  414a01:	ud2    
  414a03:	mov    r15,QWORD PTR [rsp+0x28]
  414a08:	mov    eax,DWORD PTR [r15]
  414a0b:	test   eax,eax
  414a0d:	jle    413d74 <strcmp@plt+0x105bc>
  414a13:	mov    rbp,QWORD PTR [r12+0x10]
  414a18:	mov    rdi,rbx
  414a1b:	call   424890 <strcmp@plt+0x210d8>
  414a20:	lea    rsi,[rip+0x35c59]        # 44a680 <strcmp@plt+0x46ec8>
  414a27:	mov    rdx,rax
  414a2a:	mov    edi,0x5
  414a2f:	mov    rcx,rbp
  414a32:	xor    eax,eax
  414a34:	call   4306a0 <strcmp@plt+0x2cee8>
  414a39:	jmp    413d74 <strcmp@plt+0x105bc>
  414a3e:	call   42d4e0 <strcmp@plt+0x29d28>
  414a43:	mov    rbp,rax
  414a46:	mov    rax,QWORD PTR [r14+0x40]
  414a4a:	mov    rax,QWORD PTR [rax+0x10]
  414a4e:	mov    r12,QWORD PTR [rax+0x8]
  414a52:	cmp    rax,r12
  414a55:	je     414a77 <strcmp@plt+0x112bf>
  414a57:	mov    rax,QWORD PTR [r12+0x10]
  414a5c:	mov    rsi,rbp
  414a5f:	mov    rdi,QWORD PTR [rax+0x8]
  414a63:	call   42d540 <strcmp@plt+0x29d88>
  414a68:	mov    rax,QWORD PTR [r14+0x40]
  414a6c:	mov    r12,QWORD PTR [r12+0x8]
  414a71:	cmp    r12,QWORD PTR [rax+0x10]
  414a75:	jne    414a57 <strcmp@plt+0x1129f>
  414a77:	lea    r12,[rsp+0x120]
  414a7f:	xor    esi,esi
  414a81:	mov    rdi,r12
  414a84:	call   424910 <strcmp@plt+0x21158>
  414a89:	mov    rax,QWORD PTR [rsp+0x20]
  414a8e:	mov    r8,r12
  414a91:	mov    r9,rbp
  414a94:	movzx  edx,WORD PTR [rax+0x42]
  414a98:	lea    rdi,[rax+0x20]
  414a9c:	mov    rsi,rax
  414a9f:	mov    rcx,rdi
  414aa2:	mov    QWORD PTR [rsp+0x18],rdi
  414aa7:	mov    edi,0x10f6
  414aac:	call   429600 <strcmp@plt+0x25e48>
  414ab1:	mov    r12,rax
  414ab4:	mov    rax,QWORD PTR [r14+0x40]
  414ab8:	mov    edx,DWORD PTR [r13+0xc]
  414abc:	mov    rsi,r12
  414abf:	mov    rdi,rbx
  414ac2:	mov    ecx,DWORD PTR [rax+0x8]
  414ac5:	call   4242c0 <strcmp@plt+0x20b08>
  414aca:	test   rax,rax
  414acd:	mov    r15,rax
  414ad0:	je     414c63 <strcmp@plt+0x114ab>
  414ad6:	mov    rdi,rbp
  414ad9:	call   42dac0 <strcmp@plt+0x2a308>
  414ade:	mov    rdi,r12
  414ae1:	call   424750 <strcmp@plt+0x20f98>
  414ae6:	mov    rdi,rbx
  414ae9:	call   424750 <strcmp@plt+0x20f98>
  414aee:	movzx  eax,WORD PTR [r15+0x24]
  414af3:	cmp    ax,0xffff
  414af7:	je     414040 <strcmp@plt+0x10888>
  414afd:	mov    rbx,QWORD PTR [rsp+0x10]
  414b02:	add    rax,QWORD PTR [r15+0x30]
  414b06:	mov    rdi,r15
  414b09:	mov    rcx,QWORD PTR [r13+0x10]
  414b0d:	mov    rdx,QWORD PTR [rbx+0x4]
  414b11:	lea    rbx,[rsp+0x170]
  414b19:	lea    rsi,[rax+0xc]
  414b1d:	mov    QWORD PTR [rax+0x4],rdx
  414b21:	mov    edx,DWORD PTR [r13+0xc]
  414b25:	call   423dd0 <strcmp@plt+0x20618>
  414b2a:	mov    rax,QWORD PTR [rsp+0x20]
  414b2f:	mov    r8,QWORD PTR [rsp+0x18]
  414b34:	mov    esi,0x10f6
  414b39:	mov    rdi,rbx
  414b3c:	movzx  edx,WORD PTR [rax+0x42]
  414b40:	mov    rcx,rax
  414b43:	call   438840 <strcmp@plt+0x35088>
  414b48:	mov    rdx,rbx
  414b4b:	mov    rsi,r15
  414b4e:	mov    rdi,r14
  414b51:	call   4083b0 <strcmp@plt+0x4bf8>
  414b56:	mov    rdi,r15
  414b59:	call   4300b0 <strcmp@plt+0x2c8f8>
  414b5e:	mov    rax,0x468e3c
  414b65:	mov    eax,DWORD PTR [rax]
  414b67:	jmp    413dac <strcmp@plt+0x105f4>
  414b6c:	mov    r15,0x468e3c
  414b73:	mov    r8d,DWORD PTR [r15]
  414b76:	test   r8d,r8d
  414b79:	jle    413e53 <strcmp@plt+0x1069b>
  414b7f:	mov    rdi,rbx
  414b82:	xor    ebp,ebp
  414b84:	xor    r12d,r12d
  414b87:	call   424890 <strcmp@plt+0x210d8>
  414b8c:	lea    rsi,[rip+0x35df5]        # 44a988 <strcmp@plt+0x471d0>
  414b93:	mov    rdx,rax
  414b96:	mov    edi,0x5
  414b9b:	xor    eax,eax
  414b9d:	call   4306a0 <strcmp@plt+0x2cee8>
  414ba2:	jmp    413e58 <strcmp@plt+0x106a0>
  414ba7:	mov    rax,QWORD PTR [rbp+0x0]
  414bab:	mov    QWORD PTR [rsp+0x88],0x0
  414bb7:	mov    QWORD PTR [rsp+0x90],rax
  414bbf:	mov    rax,QWORD PTR [rbp+0x8]
  414bc3:	mov    QWORD PTR [rsp+0x98],rax
  414bcb:	mov    rax,QWORD PTR [rbp+0x10]
  414bcf:	mov    QWORD PTR [rsp+0xa0],rax
  414bd7:	mov    rax,QWORD PTR [rbp+0x18]
  414bdb:	mov    QWORD PTR [rsp+0xa8],rax
  414be3:	mov    rax,QWORD PTR [rbp+0x20]
  414be7:	mov    QWORD PTR [rsp+0xb0],rax
  414bef:	mov    rax,QWORD PTR [rbp+0x28]
  414bf3:	mov    QWORD PTR [rsp+0xb8],rax
  414bfb:	mov    rax,QWORD PTR [rbp+0x30]
  414bff:	mov    QWORD PTR [rsp+0xc0],rax
  414c07:	mov    rax,QWORD PTR [rbp+0x38]
  414c0b:	mov    QWORD PTR [rsp+0xc8],rax
  414c13:	lea    rax,[rsp+0x90]
  414c1b:	mov    rdi,rax
  414c1e:	mov    QWORD PTR [rsp+0x18],rax
  414c23:	call   423110 <strcmp@plt+0x1f958>
  414c28:	cmp    QWORD PTR [rsp+0x48],0x0
  414c2e:	mov    QWORD PTR [rsp+0x8],rax
  414c33:	mov    rax,QWORD PTR [rsp+0x40]
  414c38:	je     414cb2 <strcmp@plt+0x114fa>
  414c3a:	mov    QWORD PTR [rsp+0x58],rax
  414c3f:	jmp    413473 <strcmp@plt+0xfcbb>
  414c44:	and    edx,0x1
  414c47:	and    eax,0xfffffffb
  414c4a:	shl    edx,0x2
  414c4d:	or     eax,edx
  414c4f:	mov    BYTE PTR [rbp+0x0],al
  414c52:	jmp    4136a0 <strcmp@plt+0xfee8>
  414c57:	mov    r15,0x468e3c
  414c5e:	jmp    4137bb <strcmp@plt+0x10003>
  414c63:	mov    r15,0x468e3c
  414c6a:	mov    esi,DWORD PTR [r15]
  414c6d:	test   esi,esi
  414c6f:	jle    413e58 <strcmp@plt+0x106a0>
  414c75:	lea    rsi,[rip+0x35da4]        # 44aa20 <strcmp@plt+0x47268>
  414c7c:	mov    edi,0x5
  414c81:	xor    eax,eax
  414c83:	call   4306a0 <strcmp@plt+0x2cee8>
  414c88:	jmp    413e58 <strcmp@plt+0x106a0>
  414c8d:	mov    rdi,QWORD PTR [rsp+0x50]
  414c92:	call   43b3c0 <strcmp@plt+0x37c08>
  414c97:	lea    rsi,[rip+0x36019]        # 44acb7 <strcmp@plt+0x474ff>
  414c9e:	mov    rdx,rax
  414ca1:	mov    edi,0x5
  414ca6:	xor    eax,eax
  414ca8:	call   4306a0 <strcmp@plt+0x2cee8>
  414cad:	jmp    414086 <strcmp@plt+0x108ce>
  414cb2:	mov    QWORD PTR [rsp+0x20],rax
  414cb7:	jmp    413469 <strcmp@plt+0xfcb1>
  414cbc:	nop    DWORD PTR [rax+0x0]
  414cc0:	push   r12
  414cc2:	push   rbp
  414cc3:	push   rbx
  414cc4:	mov    rbx,QWORD PTR [rdi+0x30]
  414cc8:	call   43ac30 <strcmp@plt+0x37478>
  414ccd:	mov    rbp,rax
  414cd0:	mov    r12,QWORD PTR [rax]
  414cd3:	mov    rax,0x468e3c
  414cda:	mov    eax,DWORD PTR [rax]
  414cdc:	test   eax,eax
  414cde:	jle    414cfe <strcmp@plt+0x11546>
  414ce0:	mov    rdi,r12
  414ce3:	call   424890 <strcmp@plt+0x210d8>
  414ce8:	lea    rsi,[rip+0x35e19]        # 44ab08 <strcmp@plt+0x47350>
  414cef:	mov    rdx,rax
  414cf2:	mov    edi,0x5
  414cf7:	xor    eax,eax
  414cf9:	call   4306a0 <strcmp@plt+0x2cee8>
  414cfe:	mov    rdi,QWORD PTR [rbx+0x20]
  414d02:	mov    rsi,r12
  414d05:	call   432790 <strcmp@plt+0x2efd8>
  414d0a:	mov    rdi,rbp
  414d0d:	call   430670 <strcmp@plt+0x2ceb8>
  414d12:	mov    rdi,rbx
  414d15:	mov    esi,0x7
  414d1a:	call   4132e0 <strcmp@plt+0xfb28>
  414d1f:	pop    rbx
  414d20:	mov    eax,0x1
  414d25:	pop    rbp
  414d26:	pop    r12
  414d28:	ret    
  414d29:	nop    DWORD PTR [rax+0x0]
  414d30:	mov    rax,0x468660
  414d37:	cmp    QWORD PTR [rdi+0x8],rax
  414d3b:	jne    414d48 <strcmp@plt+0x11590>
  414d3d:	mov    rax,rdi
  414d40:	ret    
  414d41:	nop    DWORD PTR [rax+0x0]
  414d48:	lea    rdx,[rip+0x35571]        # 44a2c0 <strcmp@plt+0x46b08>
  414d4f:	lea    rsi,[rip+0x36012]        # 44ad68 <strcmp@plt+0x475b0>
  414d56:	lea    rdi,[rip+0x35e46]        # 44aba3 <strcmp@plt+0x473eb>
  414d5d:	sub    rsp,0x8
  414d61:	call   434880 <strcmp@plt+0x310c8>
  414d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d70:	push   r13
  414d72:	push   r12
  414d74:	mov    r13,rdi
  414d77:	push   rbp
  414d78:	push   rbx
  414d79:	mov    edi,0x20
  414d7e:	mov    r12,rsi
  414d81:	mov    rbp,rdx
  414d84:	sub    rsp,0x8
  414d88:	call   434790 <strcmp@plt+0x30fd8>
  414d8d:	test   rax,rax
  414d90:	mov    rbx,rax
  414d93:	je     414dd0 <strcmp@plt+0x11618>
  414d95:	mov    rdi,r13
  414d98:	call   403730 <strdup@plt>
  414d9d:	mov    rdi,r12
  414da0:	mov    QWORD PTR [rbx],rax
  414da3:	call   424b80 <strcmp@plt+0x213c8>
  414da8:	mov    rdi,rbp
  414dab:	mov    QWORD PTR [rbx+0x8],rax
  414daf:	call   403730 <strdup@plt>
  414db4:	mov    DWORD PTR [rbx+0x10],0x1
  414dbb:	mov    QWORD PTR [rbx+0x18],rax
  414dbf:	add    rsp,0x8
  414dc3:	mov    rax,rbx
  414dc6:	pop    rbx
  414dc7:	pop    rbp
  414dc8:	pop    r12
  414dca:	pop    r13
  414dcc:	ret    
  414dcd:	nop    DWORD PTR [rax]
  414dd0:	mov    rax,0x468e3c
  414dd7:	mov    eax,DWORD PTR [rax]
  414dd9:	test   eax,eax
  414ddb:	jle    414dbf <strcmp@plt+0x11607>
  414ddd:	lea    rsi,[rip+0x35d54]        # 44ab38 <strcmp@plt+0x47380>
  414de4:	xor    eax,eax
  414de6:	mov    edi,0x5
  414deb:	call   4306a0 <strcmp@plt+0x2cee8>
  414df0:	add    rsp,0x8
  414df4:	mov    rax,rbx
  414df7:	pop    rbx
  414df8:	pop    rbp
  414df9:	pop    r12
  414dfb:	pop    r13
  414dfd:	ret    
  414dfe:	xchg   ax,ax
  414e00:	push   r12
  414e02:	push   rbp
  414e03:	mov    r12,rdi
  414e06:	push   rbx
  414e07:	mov    edi,0x18
  414e0c:	mov    ebp,esi
  414e0e:	call   434790 <strcmp@plt+0x30fd8>
  414e13:	test   rax,rax
  414e16:	mov    rbx,rax
  414e19:	je     414e40 <strcmp@plt+0x11688>
  414e1b:	mov    rdi,r12
  414e1e:	call   403730 <strdup@plt>
  414e23:	mov    DWORD PTR [rbx+0x8],ebp
  414e26:	mov    QWORD PTR [rbx],rax
  414e29:	call   42d4e0 <strcmp@plt+0x29d28>
  414e2e:	mov    QWORD PTR [rbx+0x10],rax
  414e32:	mov    rax,rbx
  414e35:	pop    rbx
  414e36:	pop    rbp
  414e37:	pop    r12
  414e39:	ret    
  414e3a:	nop    WORD PTR [rax+rax*1+0x0]
  414e40:	mov    rax,0x468e3c
  414e47:	mov    eax,DWORD PTR [rax]
  414e49:	test   eax,eax
  414e4b:	jle    414e32 <strcmp@plt+0x1167a>
  414e4d:	lea    rsi,[rip+0x35d04]        # 44ab58 <strcmp@plt+0x473a0>
  414e54:	xor    eax,eax
  414e56:	mov    edi,0x5
  414e5b:	call   4306a0 <strcmp@plt+0x2cee8>
  414e60:	mov    rax,rbx
  414e63:	pop    rbx
  414e64:	pop    rbp
  414e65:	pop    r12
  414e67:	ret    
  414e68:	nop    DWORD PTR [rax+rax*1+0x0]
  414e70:	cmp    esi,0x4
  414e73:	jle    414e90 <strcmp@plt+0x116d8>
  414e75:	mov    rax,0x468e3c
  414e7c:	mov    eax,DWORD PTR [rax]
  414e7e:	add    eax,0x4
  414e81:	cmp    esi,eax
  414e83:	jle    414e90 <strcmp@plt+0x116d8>
  414e85:	ret    
  414e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414e90:	push   r14
  414e92:	push   r13
  414e94:	xor    eax,eax
  414e96:	push   r12
  414e98:	push   rbp
  414e99:	mov    ebp,esi
  414e9b:	push   rbx
  414e9c:	mov    ecx,DWORD PTR [rdi+0x8]
  414e9f:	lea    rsi,[rip+0x35e1e]        # 44acc4 <strcmp@plt+0x4750c>
  414ea6:	mov    rdx,QWORD PTR [rdi]
  414ea9:	mov    r13,rdi
  414eac:	mov    edi,ebp
  414eae:	xor    r12d,r12d
  414eb1:	lea    r14,[rip+0x35e29]        # 44ace1 <strcmp@plt+0x47529>
  414eb8:	call   4306a0 <strcmp@plt+0x2cee8>
  414ebd:	mov    rax,QWORD PTR [r13+0x10]
  414ec1:	mov    rbx,QWORD PTR [rax+0x8]
  414ec5:	cmp    rax,rbx
  414ec8:	jne    414eea <strcmp@plt+0x11732>
  414eca:	jmp    414f1c <strcmp@plt+0x11764>
  414ecc:	nop    DWORD PTR [rax+0x0]
  414ed0:	mov    rax,0x468e3c
  414ed7:	mov    eax,DWORD PTR [rax]
  414ed9:	add    eax,0x4
  414edc:	cmp    ebp,eax
  414ede:	jle    414ef3 <strcmp@plt+0x1173b>
  414ee0:	mov    rbx,QWORD PTR [rbx+0x8]
  414ee4:	cmp    rbx,QWORD PTR [r13+0x10]
  414ee8:	je     414f1c <strcmp@plt+0x11764>
  414eea:	add    r12d,0x1
  414eee:	cmp    ebp,0x4
  414ef1:	jg     414ed0 <strcmp@plt+0x11718>
  414ef3:	mov    rax,QWORD PTR [rbx+0x10]
  414ef7:	mov    rdi,QWORD PTR [rax+0x8]
  414efb:	call   424890 <strcmp@plt+0x210d8>
  414f00:	mov    edx,r12d
  414f03:	mov    rcx,rax
  414f06:	mov    rsi,r14
  414f09:	xor    eax,eax
  414f0b:	mov    edi,ebp
  414f0d:	call   4306a0 <strcmp@plt+0x2cee8>
  414f12:	mov    rbx,QWORD PTR [rbx+0x8]
  414f16:	cmp    rbx,QWORD PTR [r13+0x10]
  414f1a:	jne    414eea <strcmp@plt+0x11732>
  414f1c:	pop    rbx
  414f1d:	pop    rbp
  414f1e:	pop    r12
  414f20:	pop    r13
  414f22:	pop    r14
  414f24:	ret    
  414f25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  414f30:	push   rbp
  414f31:	push   rbx
  414f32:	sub    rsp,0x8
  414f36:	mov    rax,0x468660
  414f3d:	cmp    QWORD PTR [rdi+0x8],rax
  414f41:	jne    414ff0 <strcmp@plt+0x11838>
  414f47:	mov    rbp,0x468e3c
  414f4e:	mov    rbx,rdi
  414f51:	mov    ecx,DWORD PTR [rbp+0x0]
  414f54:	test   ecx,ecx
  414f56:	jle    414f6b <strcmp@plt+0x117b3>
  414f58:	lea    rsi,[rip+0x35c19]        # 44ab78 <strcmp@plt+0x473c0>
  414f5f:	mov    edi,0x5
  414f64:	xor    eax,eax
  414f66:	call   4306a0 <strcmp@plt+0x2cee8>
  414f6b:	mov    esi,0x5
  414f70:	mov    rdi,rbx
  414f73:	call   4132b0 <strcmp@plt+0xfaf8>
  414f78:	mov    rdi,rbx
  414f7b:	mov    esi,0x5
  414f80:	call   4132e0 <strcmp@plt+0xfb28>
  414f85:	mov    rdi,QWORD PTR [rbx+0x40]
  414f89:	test   rdi,rdi
  414f8c:	je     414f9f <strcmp@plt+0x117e7>
  414f8e:	mov    edx,DWORD PTR [rbp+0x0]
  414f91:	test   edx,edx
  414f93:	jg     414fb0 <strcmp@plt+0x117f8>
  414f95:	mov    esi,0x5
  414f9a:	call   414e70 <strcmp@plt+0x116b8>
  414f9f:	mov    eax,DWORD PTR [rbp+0x0]
  414fa2:	test   eax,eax
  414fa4:	jg     414fd0 <strcmp@plt+0x11818>
  414fa6:	add    rsp,0x8
  414faa:	pop    rbx
  414fab:	pop    rbp
  414fac:	ret    
  414fad:	nop    DWORD PTR [rax]
  414fb0:	lea    rsi,[rip+0x35d3a]        # 44acf1 <strcmp@plt+0x47539>
  414fb7:	mov    edi,0x5
  414fbc:	xor    eax,eax
  414fbe:	call   4306a0 <strcmp@plt+0x2cee8>
  414fc3:	mov    rdi,QWORD PTR [rbx+0x40]
  414fc7:	jmp    414f95 <strcmp@plt+0x117dd>
  414fc9:	nop    DWORD PTR [rax+0x0]
  414fd0:	add    rsp,0x8
  414fd4:	lea    rsi,[rip+0x35d31]        # 44ad0c <strcmp@plt+0x47554>
  414fdb:	mov    edi,0x5
  414fe0:	pop    rbx
  414fe1:	pop    rbp
  414fe2:	xor    eax,eax
  414fe4:	jmp    4306a0 <strcmp@plt+0x2cee8>
  414fe9:	nop    DWORD PTR [rax+0x0]
  414ff0:	lea    rdx,[rip+0x352c9]        # 44a2c0 <strcmp@plt+0x46b08>
  414ff7:	lea    rsi,[rip+0x35d6a]        # 44ad68 <strcmp@plt+0x475b0>
  414ffe:	lea    rdi,[rip+0x35b9e]        # 44aba3 <strcmp@plt+0x473eb>
  415005:	call   434880 <strcmp@plt+0x310c8>
  41500a:	nop    WORD PTR [rax+rax*1+0x0]
  415010:	mov    eax,0x1
  415015:	ret    
  415016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415020:	mov    eax,0x1
  415025:	ret    
  415026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415030:	mov    eax,0x1
  415035:	ret    
  415036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415040:	xor    eax,eax
  415042:	ret    
  415043:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41504e:	xchg   ax,ax
  415050:	sub    rsp,0x8
  415054:	mov    edi,0x28
  415059:	call   434790 <strcmp@plt+0x30fd8>
  41505e:	add    rsp,0x8
  415062:	ret    
  415063:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41506e:	xchg   ax,ax
  415070:	test   rdi,rdi
  415073:	je     415090 <strcmp@plt+0x118d8>
  415075:	push   rbx
  415076:	mov    rbx,rdi
  415079:	mov    rdi,QWORD PTR [rdi]
  41507c:	call   424750 <strcmp@plt+0x20f98>
  415081:	mov    rdi,rbx
  415084:	pop    rbx
  415085:	jmp    4037b0 <free@plt>
  41508a:	nop    WORD PTR [rax+rax*1+0x0]
  415090:	repz ret 
  415092:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41509d:	nop    DWORD PTR [rax]
  4150a0:	test   rdi,rdi
  4150a3:	je     4150c0 <strcmp@plt+0x11908>
  4150a5:	push   rbx
  4150a6:	mov    rbx,rdi
  4150a9:	mov    rdi,QWORD PTR [rdi]
  4150ac:	call   42b280 <strcmp@plt+0x27ac8>
  4150b1:	mov    rdi,rbx
  4150b4:	pop    rbx
  4150b5:	jmp    4037b0 <free@plt>
  4150ba:	nop    WORD PTR [rax+rax*1+0x0]
  4150c0:	repz ret 
  4150c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4150cd:	nop    DWORD PTR [rax]
  4150d0:	push   rbx
  4150d1:	mov    rax,0x4686c0
  4150d8:	cmp    QWORD PTR [rdi+0x8],rax
  4150dc:	jne    415108 <strcmp@plt+0x11950>
  4150de:	mov    rbx,rdi
  4150e1:	mov    rsi,0x4150a0
  4150e8:	mov    rdi,QWORD PTR [rdi+0x20]
  4150ec:	call   431200 <strcmp@plt+0x2da48>
  4150f1:	mov    rdi,QWORD PTR [rbx+0x18]
  4150f5:	mov    rsi,0x415070
  4150fc:	pop    rbx
  4150fd:	jmp    431200 <strcmp@plt+0x2da48>
  415102:	nop    WORD PTR [rax+rax*1+0x0]
  415108:	lea    rdx,[rip+0x35c69]        # 44ad78 <strcmp@plt+0x475c0>
  41510f:	lea    rsi,[rip+0x3605a]        # 44b170 <strcmp@plt+0x479b8>
  415116:	lea    rdi,[rip+0x35fd2]        # 44b0ef <strcmp@plt+0x47937>
  41511d:	call   434880 <strcmp@plt+0x310c8>
  415122:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41512d:	nop    DWORD PTR [rax]
  415130:	push   rbx
  415131:	mov    rax,0x4686c0
  415138:	cmp    QWORD PTR [rdi+0x8],rax
  41513c:	jne    415170 <strcmp@plt+0x119b8>
  41513e:	mov    rax,0x468e3c
  415145:	mov    rbx,rdi
  415148:	mov    eax,DWORD PTR [rax]
  41514a:	test   eax,eax
  41514c:	jle    415161 <strcmp@plt+0x119a9>
  41514e:	lea    rsi,[rip+0x35fb6]        # 44b10b <strcmp@plt+0x47953>
  415155:	mov    edi,0x5
  41515a:	xor    eax,eax
  41515c:	call   4306a0 <strcmp@plt+0x2cee8>
  415161:	mov    rdi,rbx
  415164:	pop    rbx
  415165:	jmp    4037b0 <free@plt>
  41516a:	nop    WORD PTR [rax+rax*1+0x0]
  415170:	lea    rdx,[rip+0x35c01]        # 44ad78 <strcmp@plt+0x475c0>
  415177:	lea    rsi,[rip+0x35ff2]        # 44b170 <strcmp@plt+0x479b8>
  41517e:	lea    rdi,[rip+0x35f6a]        # 44b0ef <strcmp@plt+0x47937>
  415185:	call   434880 <strcmp@plt+0x310c8>
  41518a:	nop    WORD PTR [rax+rax*1+0x0]
  415190:	push   rbx
  415191:	mov    rax,0x4686c0
  415198:	cmp    QWORD PTR [rdi+0x8],rax
  41519c:	jne    415200 <strcmp@plt+0x11a48>
  41519e:	mov    rbx,rdi
  4151a1:	xor    eax,eax
  4151a3:	call   431690 <strcmp@plt+0x2ded8>
  4151a8:	mov    QWORD PTR [rbx+0x18],rax
  4151ac:	xor    eax,eax
  4151ae:	call   431690 <strcmp@plt+0x2ded8>
  4151b3:	cmp    QWORD PTR [rbx+0x18],0x0
  4151b8:	mov    QWORD PTR [rbx+0x20],rax
  4151bc:	je     415220 <strcmp@plt+0x11a68>
  4151be:	test   rax,rax
  4151c1:	je     415220 <strcmp@plt+0x11a68>
  4151c3:	mov    rax,0x468e3c
  4151ca:	mov    eax,DWORD PTR [rax]
  4151cc:	test   eax,eax
  4151ce:	jg     4151e0 <strcmp@plt+0x11a28>
  4151d0:	mov    eax,0x1
  4151d5:	pop    rbx
  4151d6:	ret    
  4151d7:	nop    WORD PTR [rax+rax*1+0x0]
  4151e0:	lea    rsi,[rip+0x35bb9]        # 44ada0 <strcmp@plt+0x475e8>
  4151e7:	xor    eax,eax
  4151e9:	mov    edi,0x5
  4151ee:	call   4306a0 <strcmp@plt+0x2cee8>
  4151f3:	mov    eax,0x1
  4151f8:	jmp    4151d5 <strcmp@plt+0x11a1d>
  4151fa:	nop    WORD PTR [rax+rax*1+0x0]
  415200:	lea    rdx,[rip+0x35b71]        # 44ad78 <strcmp@plt+0x475c0>
  415207:	lea    rsi,[rip+0x35f62]        # 44b170 <strcmp@plt+0x479b8>
  41520e:	lea    rdi,[rip+0x35eda]        # 44b0ef <strcmp@plt+0x47937>
  415215:	call   434880 <strcmp@plt+0x310c8>
  41521a:	nop    WORD PTR [rax+rax*1+0x0]
  415220:	xor    eax,eax
  415222:	pop    rbx
  415223:	ret    
  415224:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41522f:	nop
  415230:	push   r15
  415232:	push   r14
  415234:	push   r13
  415236:	push   r12
  415238:	mov    r12,rdi
  41523b:	push   rbp
  41523c:	push   rbx
  41523d:	mov    ebx,esi
  41523f:	lea    rsi,[rip+0x35b7a]        # 44adc0 <strcmp@plt+0x47608>
  415246:	mov    edi,ebx
  415248:	sub    rsp,0x848
  41524f:	mov    rax,QWORD PTR fs:0x28
  415258:	mov    QWORD PTR [rsp+0x838],rax
  415260:	xor    eax,eax
  415262:	call   4306a0 <strcmp@plt+0x2cee8>
  415267:	call   42d4e0 <strcmp@plt+0x29d28>
  41526c:	mov    r15,rax
  41526f:	mov    QWORD PTR [rsp+0x10],rax
  415274:	mov    rax,QWORD PTR [r12+0x18]
  415279:	mov    rsi,r15
  41527c:	mov    rdi,QWORD PTR [rax]
  41527f:	call   42d540 <strcmp@plt+0x29d88>
  415284:	mov    rax,QWORD PTR [r12+0x18]
  415289:	mov    rsi,r15
  41528c:	mov    rdi,QWORD PTR [rax+0x8]
  415290:	call   42d540 <strcmp@plt+0x29d88>
  415295:	mov    rsi,QWORD PTR [r12+0x18]
  41529a:	mov    rax,QWORD PTR [rsi+0x10]
  41529e:	mov    rdi,QWORD PTR [rax]
  4152a1:	mov    edx,DWORD PTR [rdi]
  4152a3:	test   edx,edx
  4152a5:	je     4152ff <strcmp@plt+0x11b47>
  4152a7:	xor    ebp,ebp
  4152a9:	jmp    4152b9 <strcmp@plt+0x11b01>
  4152ab:	mov    rax,QWORD PTR [rsi+0x10]
  4152af:	add    ebp,0x1
  4152b2:	mov    rdi,QWORD PTR [rax]
  4152b5:	cmp    ebp,DWORD PTR [rdi]
  4152b7:	je     4152ff <strcmp@plt+0x11b47>
  4152b9:	mov    r8,QWORD PTR [rdi+0x10]
  4152bd:	lea    eax,[rbp+rbp*1+0x0]
  4152c1:	mov    ecx,ebp
  4152c3:	shr    ecx,0x4
  4152c6:	and    eax,0x1e
  4152c9:	mov    edx,eax
  4152cb:	mov    eax,DWORD PTR [r8+rcx*4]
  4152cf:	shrx   eax,eax,edx
  4152d4:	test   al,0x3
  4152d6:	jne    4152ab <strcmp@plt+0x11af3>
  4152d8:	mov    rdx,QWORD PTR [rdi+0x20]
  4152dc:	mov    eax,ebp
  4152de:	mov    rsi,QWORD PTR [rsp+0x10]
  4152e3:	add    ebp,0x1
  4152e6:	mov    rdi,QWORD PTR [rdx+rax*8]
  4152ea:	call   42d540 <strcmp@plt+0x29d88>
  4152ef:	mov    rsi,QWORD PTR [r12+0x18]
  4152f4:	mov    rax,QWORD PTR [rsi+0x10]
  4152f8:	mov    rdi,QWORD PTR [rax]
  4152fb:	cmp    ebp,DWORD PTR [rdi]
  4152fd:	jne    4152b9 <strcmp@plt+0x11b01>
  4152ff:	mov    rax,QWORD PTR [rsi+0x18]
  415303:	mov    rdi,QWORD PTR [rax]
  415306:	mov    eax,DWORD PTR [rdi]
  415308:	test   eax,eax
  41530a:	je     415364 <strcmp@plt+0x11bac>
  41530c:	xor    ebp,ebp
  41530e:	jmp    41531e <strcmp@plt+0x11b66>
  415310:	mov    rax,QWORD PTR [rsi+0x18]
  415314:	add    ebp,0x1
  415317:	mov    rdi,QWORD PTR [rax]
  41531a:	cmp    ebp,DWORD PTR [rdi]
  41531c:	je     415364 <strcmp@plt+0x11bac>
  41531e:	mov    r8,QWORD PTR [rdi+0x10]
  415322:	lea    eax,[rbp+rbp*1+0x0]
  415326:	mov    ecx,ebp
  415328:	shr    ecx,0x4
  41532b:	and    eax,0x1e
  41532e:	mov    edx,eax
  415330:	mov    eax,DWORD PTR [r8+rcx*4]
  415334:	shrx   eax,eax,edx
  415339:	test   al,0x3
  41533b:	jne    415310 <strcmp@plt+0x11b58>
  41533d:	mov    rdx,QWORD PTR [rdi+0x20]
  415341:	mov    eax,ebp
  415343:	mov    rsi,QWORD PTR [rsp+0x10]
  415348:	add    ebp,0x1
  41534b:	mov    rdi,QWORD PTR [rdx+rax*8]
  41534f:	call   42d540 <strcmp@plt+0x29d88>
  415354:	mov    rsi,QWORD PTR [r12+0x18]
  415359:	mov    rax,QWORD PTR [rsi+0x18]
  41535d:	mov    rdi,QWORD PTR [rax]
  415360:	cmp    ebp,DWORD PTR [rdi]
  415362:	jne    41531e <strcmp@plt+0x11b66>
  415364:	mov    r15,QWORD PTR [rsp+0x10]
  415369:	mov    rdi,QWORD PTR [rsi+0x20]
  41536d:	mov    rsi,r15
  415370:	call   42d540 <strcmp@plt+0x29d88>
  415375:	mov    rax,QWORD PTR [r12+0x18]
  41537a:	mov    rsi,r15
  41537d:	mov    rdi,QWORD PTR [rax+0x20]
  415381:	call   42d540 <strcmp@plt+0x29d88>
  415386:	mov    rcx,QWORD PTR [r15+0x8]
  41538a:	cmp    r15,rcx
  41538d:	mov    QWORD PTR [rsp+0x8],rcx
  415392:	je     4154fa <strcmp@plt+0x11d42>
  415398:	lea    rax,[rsp+0x20]
  41539d:	lea    r12,[rip+0x35d7c]        # 44b120 <strcmp@plt+0x47968>
  4153a4:	mov    QWORD PTR [rsp+0x18],rax
  4153a9:	lea    rax,[rsp+0x430]
  4153b1:	mov    QWORD PTR [rsp],rax
  4153b5:	nop    DWORD PTR [rax]
  4153b8:	mov    rax,QWORD PTR [rsp+0x8]
  4153bd:	mov    rax,QWORD PTR [rax+0x10]
  4153c1:	mov    rbp,QWORD PTR [rax]
  4153c4:	test   rbp,rbp
  4153c7:	je     4154e1 <strcmp@plt+0x11d29>
  4153cd:	mov    r13,QWORD PTR [rsp+0x18]
  4153d2:	nop    WORD PTR [rax+rax*1+0x0]
  4153d8:	cmp    QWORD PTR [rbp+0x8],0x0
  4153dd:	je     41546c <strcmp@plt+0x11cb4>
  4153e3:	mov    rax,QWORD PTR [rbp+0x28]
  4153e7:	mov    r14,QWORD PTR [rax]
  4153ea:	test   r14,r14
  4153ed:	je     41546c <strcmp@plt+0x11cb4>
  4153ef:	mov    r15,QWORD PTR [rsp]
  4153f3:	cmp    QWORD PTR [r14+0x8],0x0
  4153f8:	je     41541c <strcmp@plt+0x11c64>
  4153fa:	mov    rax,QWORD PTR [r14+0x28]
  4153fe:	test   rax,rax
  415401:	je     41541c <strcmp@plt+0x11c64>
  415403:	cmp    ebx,0x4
  415406:	jle    415498 <strcmp@plt+0x11ce0>
  41540c:	mov    rdx,0x468e3c
  415413:	mov    edx,DWORD PTR [rdx]
  415415:	add    edx,0x4
  415418:	cmp    ebx,edx
  41541a:	jle    415498 <strcmp@plt+0x11ce0>
  41541c:	mov    rax,QWORD PTR [r14+0x10]
  415420:	test   rax,rax
  415423:	je     415450 <strcmp@plt+0x11c98>
  415425:	mov    rdx,QWORD PTR [r14+0x18]
  415429:	test   rdx,rdx
  41542c:	je     4154b8 <strcmp@plt+0x11d00>
  415432:	mov    r14,rax
  415435:	mov    QWORD PTR [r15],rdx
  415438:	add    r15,0x8
  41543c:	cmp    QWORD PTR [r14+0x8],0x0
  415441:	jne    4153fa <strcmp@plt+0x11c42>
  415443:	mov    rax,QWORD PTR [r14+0x10]
  415447:	test   rax,rax
  41544a:	jne    415425 <strcmp@plt+0x11c6d>
  41544c:	nop    DWORD PTR [rax+0x0]
  415450:	mov    r14,QWORD PTR [r14+0x18]
  415454:	test   r14,r14
  415457:	jne    4153f3 <strcmp@plt+0x11c3b>
  415459:	cmp    r15,QWORD PTR [rsp]
  41545d:	je     41546c <strcmp@plt+0x11cb4>
  41545f:	mov    r14,QWORD PTR [r15-0x8]
  415463:	test   r14,r14
  415466:	jne    41558e <strcmp@plt+0x11dd6>
  41546c:	mov    rax,QWORD PTR [rbp+0x10]
  415470:	test   rax,rax
  415473:	je     4154c0 <strcmp@plt+0x11d08>
  415475:	mov    rdx,QWORD PTR [rbp+0x18]
  415479:	test   rdx,rdx
  41547c:	je     415578 <strcmp@plt+0x11dc0>
  415482:	mov    QWORD PTR [r13+0x0],rdx
  415486:	mov    rbp,rax
  415489:	add    r13,0x8
  41548d:	jmp    4153d8 <strcmp@plt+0x11c20>
  415492:	nop    WORD PTR [rax+rax*1+0x0]
  415498:	mov    rdi,QWORD PTR [rax]
  41549b:	call   424890 <strcmp@plt+0x210d8>
  4154a0:	mov    rsi,r12
  4154a3:	mov    rdx,rax
  4154a6:	mov    edi,ebx
  4154a8:	xor    eax,eax
  4154aa:	call   4306a0 <strcmp@plt+0x2cee8>
  4154af:	jmp    41541c <strcmp@plt+0x11c64>
  4154b4:	nop    DWORD PTR [rax+0x0]
  4154b8:	mov    r14,rax
  4154bb:	jmp    4153f3 <strcmp@plt+0x11c3b>
  4154c0:	mov    rbp,QWORD PTR [rbp+0x18]
  4154c4:	test   rbp,rbp
  4154c7:	jne    4153d8 <strcmp@plt+0x11c20>
  4154cd:	cmp    r13,QWORD PTR [rsp+0x18]
  4154d2:	je     4154e1 <strcmp@plt+0x11d29>
  4154d4:	mov    rbp,QWORD PTR [r13-0x8]
  4154d8:	test   rbp,rbp
  4154db:	jne    415580 <strcmp@plt+0x11dc8>
  4154e1:	mov    rax,QWORD PTR [rsp+0x8]
  4154e6:	mov    rax,QWORD PTR [rax+0x8]
  4154ea:	cmp    QWORD PTR [rsp+0x10],rax
  4154ef:	mov    QWORD PTR [rsp+0x8],rax
  4154f4:	jne    4153b8 <strcmp@plt+0x11c00>
  4154fa:	mov    rdi,QWORD PTR [rsp+0x10]
  4154ff:	call   42dac0 <strcmp@plt+0x2a308>
  415504:	cmp    ebx,0x4
  415507:	jle    41553e <strcmp@plt+0x11d86>
  415509:	mov    rax,0x468e3c
  415510:	mov    eax,DWORD PTR [rax]
  415512:	add    eax,0x4
  415515:	cmp    ebx,eax
  415517:	jle    41553e <strcmp@plt+0x11d86>
  415519:	mov    rax,QWORD PTR [rsp+0x838]
  415521:	xor    rax,QWORD PTR fs:0x28
  41552a:	jne    415589 <strcmp@plt+0x11dd1>
  41552c:	add    rsp,0x848
  415533:	pop    rbx
  415534:	pop    rbp
  415535:	pop    r12
  415537:	pop    r13
  415539:	pop    r14
  41553b:	pop    r15
  41553d:	ret    
  41553e:	mov    rax,QWORD PTR [rsp+0x838]
  415546:	xor    rax,QWORD PTR fs:0x28
  41554f:	jne    415589 <strcmp@plt+0x11dd1>
  415551:	add    rsp,0x848
  415558:	mov    edi,ebx
  41555a:	lea    rsi,[rip+0x32647]        # 447ba8 <strcmp@plt+0x443f0>
  415561:	pop    rbx
  415562:	pop    rbp
  415563:	pop    r12
  415565:	pop    r13
  415567:	pop    r14
  415569:	pop    r15
  41556b:	xor    eax,eax
  41556d:	jmp    4306a0 <strcmp@plt+0x2cee8>
  415572:	nop    WORD PTR [rax+rax*1+0x0]
  415578:	mov    rbp,rax
  41557b:	jmp    4153d8 <strcmp@plt+0x11c20>
  415580:	sub    r13,0x8
  415584:	jmp    4153d8 <strcmp@plt+0x11c20>
  415589:	call   403460 <__stack_chk_fail@plt>
  41558e:	sub    r15,0x8
  415592:	jmp    4153f3 <strcmp@plt+0x11c3b>
  415597:	nop    WORD PTR [rax+rax*1+0x0]
  4155a0:	push   r15
  4155a2:	push   r14
  4155a4:	push   r13
  4155a6:	push   r12
  4155a8:	push   rbp
  4155a9:	push   rbx
  4155aa:	sub    rsp,0x138
  4155b1:	mov    rax,QWORD PTR fs:0x28
  4155ba:	mov    QWORD PTR [rsp+0x128],rax
  4155c2:	xor    eax,eax
  4155c4:	mov    rax,0x4686c0
  4155cb:	cmp    QWORD PTR [rdi+0x8],rax
  4155cf:	jne    415820 <strcmp@plt+0x12068>
  4155d5:	mov    rbx,rdi
  4155d8:	mov    rdi,rsi
  4155db:	mov    r12,rsi
  4155de:	mov    r13,rdx
  4155e1:	call   422770 <strcmp@plt+0x1efb8>
  4155e6:	cmp    eax,0x8
  4155e9:	mov    r14d,eax
  4155ec:	je     4157d0 <strcmp@plt+0x12018>
  4155f2:	mov    rbp,0x468e3c
  4155f9:	xor    r13d,r13d
  4155fc:	cmp    r14d,0x4
  415600:	ja     415710 <strcmp@plt+0x11f58>
  415606:	cmp    r14d,0x2
  41560a:	jae    415716 <strcmp@plt+0x11f5e>
  415610:	cmp    r14d,0x1
  415614:	jne    415740 <strcmp@plt+0x11f88>
  41561a:	mov    rax,QWORD PTR [r12]
  41561e:	lea    r15,[rsp+0x40]
  415623:	mov    QWORD PTR [rsp+0x40],rax
  415628:	mov    rax,QWORD PTR [r12+0x8]
  41562d:	mov    QWORD PTR [rsp+0x48],rax
  415632:	mov    rax,QWORD PTR [r12+0x10]
  415637:	mov    QWORD PTR [rsp+0x50],rax
  41563c:	mov    rax,QWORD PTR [r12+0x18]
  415641:	mov    QWORD PTR [rsp+0x58],rax
  415646:	mov    rax,QWORD PTR [r12+0x20]
  41564b:	mov    QWORD PTR [rsp+0x60],rax
  415650:	mov    rax,QWORD PTR [r12+0x28]
  415655:	mov    QWORD PTR [rsp+0x68],rax
  41565a:	mov    rax,QWORD PTR [r12+0x30]
  41565f:	mov    QWORD PTR [rsp+0x70],rax
  415664:	mov    rax,QWORD PTR [r12+0x38]
  415669:	mov    QWORD PTR [rsp+0x78],rax
  41566e:	xor    eax,eax
  415670:	call   424740 <strcmp@plt+0x20f88>
  415675:	mov    rdi,r15
  415678:	mov    r14,rax
  41567b:	mov    QWORD PTR [rsp],rax
  41567f:	mov    QWORD PTR [rsp+0x8],r15
  415684:	call   423110 <strcmp@plt+0x1f958>
  415689:	mov    rsi,r14
  41568c:	mov    rdi,r15
  41568f:	mov    QWORD PTR [rsp+0x10],rax
  415694:	call   4229d0 <strcmp@plt+0x1f218>
  415699:	cmp    eax,0x1
  41569c:	mov    r12d,eax
  41569f:	je     415770 <strcmp@plt+0x11fb8>
  4156a5:	xor    edi,edi
  4156a7:	xor    r15d,r15d
  4156aa:	call   42dac0 <strcmp@plt+0x2a308>
  4156af:	mov    rdi,r15
  4156b2:	call   424750 <strcmp@plt+0x20f98>
  4156b7:	mov    rdi,QWORD PTR [rsp]
  4156bb:	call   424750 <strcmp@plt+0x20f98>
  4156c0:	mov    eax,DWORD PTR [rbp+0x0]
  4156c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4156c8:	test   eax,eax
  4156ca:	jle    4156df <strcmp@plt+0x11f27>
  4156cc:	lea    rsi,[rip+0x3583d]        # 44af10 <strcmp@plt+0x47758>
  4156d3:	mov    edi,0x5
  4156d8:	xor    eax,eax
  4156da:	call   4306a0 <strcmp@plt+0x2cee8>
  4156df:	xor    r12d,r12d
  4156e2:	mov    rcx,QWORD PTR [rsp+0x128]
  4156ea:	xor    rcx,QWORD PTR fs:0x28
  4156f3:	mov    eax,r12d
  4156f6:	jne    415c3a <strcmp@plt+0x12482>
  4156fc:	add    rsp,0x138
  415703:	pop    rbx
  415704:	pop    rbp
  415705:	pop    r12
  415707:	pop    r13
  415709:	pop    r14
  41570b:	pop    r15
  41570d:	ret    
  41570e:	xchg   ax,ax
  415710:	cmp    r14d,0x7
  415714:	jne    415740 <strcmp@plt+0x11f88>
  415716:	mov    eax,DWORD PTR [rbp+0x0]
  415719:	cmp    eax,0x2
  41571c:	jle    4156c8 <strcmp@plt+0x11f10>
  41571e:	lea    rsi,[rip+0x3576b]        # 44ae90 <strcmp@plt+0x476d8>
  415725:	xor    eax,eax
  415727:	mov    edx,r14d
  41572a:	mov    edi,0x7
  41572f:	call   4306a0 <strcmp@plt+0x2cee8>
  415734:	mov    eax,DWORD PTR [rbp+0x0]
  415737:	jmp    4156c8 <strcmp@plt+0x11f10>
  415739:	nop    DWORD PTR [rax+0x0]
  415740:	mov    eax,DWORD PTR [rbp+0x0]
  415743:	cmp    eax,0x2
  415746:	jle    4156c8 <strcmp@plt+0x11f10>
  415748:	lea    rsi,[rip+0x35781]        # 44aed0 <strcmp@plt+0x47718>
  41574f:	xor    eax,eax
  415751:	mov    edx,r14d
  415754:	mov    edi,0x7
  415759:	call   4306a0 <strcmp@plt+0x2cee8>
  41575e:	mov    eax,DWORD PTR [rbp+0x0]
  415761:	jmp    4156c8 <strcmp@plt+0x11f10>
  415766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415770:	mov    edi,DWORD PTR [rbp+0x0]
  415773:	test   edi,edi
  415775:	jle    415796 <strcmp@plt+0x11fde>
  415777:	mov    rdi,QWORD PTR [rsp]
  41577b:	call   424890 <strcmp@plt+0x210d8>
  415780:	lea    rsi,[rip+0x359a2]        # 44b129 <strcmp@plt+0x47971>
  415787:	mov    rdx,rax
  41578a:	mov    edi,0x5
  41578f:	xor    eax,eax
  415791:	call   4306a0 <strcmp@plt+0x2cee8>
  415796:	mov    rax,QWORD PTR [rsp+0x10]
  41579b:	movzx  eax,BYTE PTR [rax]
  41579e:	test   al,0x2
  4157a0:	je     415840 <strcmp@plt+0x12088>
  4157a6:	mov    eax,DWORD PTR [rbp+0x0]
  4157a9:	cmp    eax,0x1
  4157ac:	jle    4156c8 <strcmp@plt+0x11f10>
  4157b2:	lea    rsi,[rip+0x3546c]        # 44ac25 <strcmp@plt+0x4746d>
  4157b9:	xor    eax,eax
  4157bb:	mov    edi,0x6
  4157c0:	call   4306a0 <strcmp@plt+0x2cee8>
  4157c5:	mov    eax,DWORD PTR [rbp+0x0]
  4157c8:	jmp    4156c8 <strcmp@plt+0x11f10>
  4157cd:	nop    DWORD PTR [rax]
  4157d0:	mov    rdi,r12
  4157d3:	call   4227d0 <strcmp@plt+0x1f018>
  4157d8:	test   BYTE PTR [rax],0x8
  4157db:	mov    rdi,r12
  4157de:	je     415870 <strcmp@plt+0x120b8>
  4157e4:	call   423cc0 <strcmp@plt+0x20508>
  4157e9:	mov    rax,0x468e3c
  4157f0:	cmp    DWORD PTR [rax],0x1
  4157f3:	jle    4156df <strcmp@plt+0x11f27>
  4157f9:	mov    rdi,r12
  4157fc:	call   423cc0 <strcmp@plt+0x20508>
  415801:	lea    rsi,[rip+0x33e40]        # 449648 <strcmp@plt+0x45e90>
  415808:	mov    edx,eax
  41580a:	mov    edi,0x6
  41580f:	xor    eax,eax
  415811:	call   4306a0 <strcmp@plt+0x2cee8>
  415816:	jmp    4156df <strcmp@plt+0x11f27>
  41581b:	nop    DWORD PTR [rax+rax*1+0x0]
  415820:	lea    rdx,[rip+0x35551]        # 44ad78 <strcmp@plt+0x475c0>
  415827:	lea    rsi,[rip+0x35942]        # 44b170 <strcmp@plt+0x479b8>
  41582e:	lea    rdi,[rip+0x358ba]        # 44b0ef <strcmp@plt+0x47937>
  415835:	call   434880 <strcmp@plt+0x310c8>
  41583a:	nop    WORD PTR [rax+rax*1+0x0]
  415840:	test   al,0x1
  415842:	je     415900 <strcmp@plt+0x12148>
  415848:	mov    eax,DWORD PTR [rbp+0x0]
  41584b:	cmp    eax,0x1
  41584e:	jle    4156c8 <strcmp@plt+0x11f10>
  415854:	lea    rsi,[rip+0x353e5]        # 44ac40 <strcmp@plt+0x47488>
  41585b:	xor    eax,eax
  41585d:	mov    edi,0x6
  415862:	call   4306a0 <strcmp@plt+0x2cee8>
  415867:	mov    eax,DWORD PTR [rbp+0x0]
  41586a:	jmp    4156c8 <strcmp@plt+0x11f10>
  41586f:	nop
  415870:	call   422810 <strcmp@plt+0x1f058>
  415875:	cmp    eax,0x1
  415878:	jne    4156df <strcmp@plt+0x11f27>
  41587e:	lea    rbp,[rsp+0xd0]
  415886:	mov    rdi,r12
  415889:	mov    rsi,rbp
  41588c:	call   435ec0 <strcmp@plt+0x32708>
  415891:	movzx  edx,WORD PTR [rsp+0x110]
  415899:	movzx  esi,WORD PTR [rsp+0x112]
  4158a1:	lea    rcx,[rbp+0x20]
  4158a5:	lea    rdi,[rsp+0x80]
  4158ad:	mov    r8,rbp
  4158b0:	call   438840 <strcmp@plt+0x35088>
  4158b5:	mov    rdi,r12
  4158b8:	call   422770 <strcmp@plt+0x1efb8>
  4158bd:	mov    rbp,0x468e3c
  4158c4:	mov    r14d,eax
  4158c7:	mov    r8d,DWORD PTR [rbp+0x0]
  4158cb:	test   r8d,r8d
  4158ce:	jle    4155fc <strcmp@plt+0x11e44>
  4158d4:	mov    rdi,r12
  4158d7:	call   423a90 <strcmp@plt+0x202d8>
  4158dc:	lea    rsi,[rip+0x35525]        # 44ae08 <strcmp@plt+0x47650>
  4158e3:	mov    rdx,rax
  4158e6:	mov    edi,0x5
  4158eb:	xor    eax,eax
  4158ed:	call   4306a0 <strcmp@plt+0x2cee8>
  4158f2:	jmp    4155fc <strcmp@plt+0x11e44>
  4158f7:	nop    WORD PTR [rax+rax*1+0x0]
  415900:	mov    rdi,0x424750
  415907:	xor    r14d,r14d
  41590a:	call   42d4f0 <strcmp@plt+0x29d38>
  41590f:	mov    rdi,QWORD PTR [rsp+0x8]
  415914:	mov    rsi,rax
  415917:	mov    QWORD PTR [rsp+0x18],rax
  41591c:	call   422a60 <strcmp@plt+0x1f2a8>
  415921:	mov    rax,QWORD PTR [rsp+0x10]
  415926:	xor    ecx,ecx
  415928:	cmp    BYTE PTR [rax+0x3],0x0
  41592c:	je     415a4c <strcmp@plt+0x12294>
  415932:	mov    QWORD PTR [rsp+0x28],r13
  415937:	mov    QWORD PTR [rsp+0x20],rbp
  41593c:	mov    ebp,ecx
  41593e:	mov    DWORD PTR [rsp+0x3c],r12d
  415943:	mov    r13,QWORD PTR [rsp+0x10]
  415948:	jmp    4159b4 <strcmp@plt+0x121fc>
  41594a:	nop    WORD PTR [rax+rax*1+0x0]
  415950:	mov    rdx,QWORD PTR [r14+0x30]
  415954:	mov    rcx,QWORD PTR [r13+0x4]
  415958:	mov    rsi,r14
  41595b:	mov    rdi,rbx
  41595e:	mov    QWORD PTR [rdx+rax*1+0x4],rcx
  415963:	mov    rdx,QWORD PTR [rsp+0x28]
  415968:	call   4083b0 <strcmp@plt+0x4bf8>
  41596d:	cmp    eax,0x1
  415970:	mov    rax,QWORD PTR [rsp+0x20]
  415975:	je     415a88 <strcmp@plt+0x122d0>
  41597b:	mov    ecx,DWORD PTR [rax]
  41597d:	test   ecx,ecx
  41597f:	jle    415994 <strcmp@plt+0x121dc>
  415981:	lea    rsi,[rip+0x35300]        # 44ac88 <strcmp@plt+0x474d0>
  415988:	mov    edi,0x5
  41598d:	xor    eax,eax
  41598f:	call   4306a0 <strcmp@plt+0x2cee8>
  415994:	mov    rdi,r14
  415997:	call   4300b0 <strcmp@plt+0x2c8f8>
  41599c:	mov    rdi,r15
  41599f:	add    ebp,0x1
  4159a2:	call   424750 <strcmp@plt+0x20f98>
  4159a7:	movzx  eax,BYTE PTR [r13+0x3]
  4159ac:	cmp    ebp,eax
  4159ae:	jge    415a42 <strcmp@plt+0x1228a>
  4159b4:	xor    eax,eax
  4159b6:	call   424740 <strcmp@plt+0x20f88>
  4159bb:	mov    rdi,QWORD PTR [rsp+0x8]
  4159c0:	mov    rsi,rax
  4159c3:	mov    r15,rax
  4159c6:	call   422a10 <strcmp@plt+0x1f258>
  4159cb:	cmp    eax,0x1
  4159ce:	jne    415c15 <strcmp@plt+0x1245d>
  4159d4:	mov    rdi,QWORD PTR [rbx+0x18]
  4159d8:	mov    rsi,r15
  4159db:	call   432570 <strcmp@plt+0x2edb8>
  4159e0:	test   rax,rax
  4159e3:	mov    r12,rax
  4159e6:	je     415ab0 <strcmp@plt+0x122f8>
  4159ec:	mov    rdi,QWORD PTR [rbx+0x20]
  4159f0:	mov    rsi,r15
  4159f3:	call   432570 <strcmp@plt+0x2edb8>
  4159f8:	test   rax,rax
  4159fb:	mov    QWORD PTR [rsp+0x10],rax
  415a00:	je     415b00 <strcmp@plt+0x12348>
  415a06:	mov    edi,0x6
  415a0b:	xor    eax,eax
  415a0d:	call   423800 <strcmp@plt+0x20048>
  415a12:	mov    rdx,QWORD PTR [rsp+0x10]
  415a17:	mov    r14,rax
  415a1a:	mov    rdi,rax
  415a1d:	mov    rsi,QWORD PTR [rdx]
  415a20:	call   423480 <strcmp@plt+0x1fcc8>
  415a25:	movzx  eax,WORD PTR [r14+0x24]
  415a2a:	cmp    ax,0xffff
  415a2e:	jne    415950 <strcmp@plt+0x12198>
  415a34:	mov    QWORD PTR ds:0x4,0x0
  415a40:	ud2    
  415a42:	mov    r12d,DWORD PTR [rsp+0x3c]
  415a47:	mov    rbp,QWORD PTR [rsp+0x20]
  415a4c:	mov    rdi,QWORD PTR [rsp+0x18]
  415a51:	call   42dac0 <strcmp@plt+0x2a308>
  415a56:	mov    rdi,QWORD PTR [rsp]
  415a5a:	call   424750 <strcmp@plt+0x20f98>
  415a5f:	cmp    DWORD PTR [rbp+0x0],0x2
  415a63:	jle    4156e2 <strcmp@plt+0x11f2a>
  415a69:	lea    rsi,[rip+0x354d0]        # 44af40 <strcmp@plt+0x47788>
  415a70:	mov    edi,0x7
  415a75:	xor    eax,eax
  415a77:	call   4306a0 <strcmp@plt+0x2cee8>
  415a7c:	jmp    4156e2 <strcmp@plt+0x11f2a>
  415a81:	nop    DWORD PTR [rax+0x0]
  415a88:	mov    edx,DWORD PTR [rax]
  415a8a:	test   edx,edx
  415a8c:	jle    415994 <strcmp@plt+0x121dc>
  415a92:	lea    rsi,[rip+0x3520b]        # 44aca4 <strcmp@plt+0x474ec>
  415a99:	mov    edi,0x5
  415a9e:	xor    eax,eax
  415aa0:	call   4306a0 <strcmp@plt+0x2cee8>
  415aa5:	jmp    415994 <strcmp@plt+0x121dc>
  415aaa:	nop    WORD PTR [rax+rax*1+0x0]
  415ab0:	mov    r9,QWORD PTR [r13+0x4]
  415ab4:	xor    esi,esi
  415ab6:	xor    ecx,ecx
  415ab8:	mov    r8d,0x1
  415abe:	mov    edx,0x5
  415ac3:	mov    rdi,r15
  415ac6:	call   423a10 <strcmp@plt+0x20258>
  415acb:	mov    r14,rax
  415ace:	mov    rax,QWORD PTR [rsp+0x20]
  415ad3:	mov    esi,DWORD PTR [rax]
  415ad5:	test   esi,esi
  415ad7:	jg     415bb8 <strcmp@plt+0x12400>
  415add:	mov    rdx,QWORD PTR [rsp+0x28]
  415ae2:	mov    rsi,r14
  415ae5:	mov    rdi,rbx
  415ae8:	call   4083b0 <strcmp@plt+0x4bf8>
  415aed:	test   r14,r14
  415af0:	je     41599c <strcmp@plt+0x121e4>
  415af6:	jmp    415994 <strcmp@plt+0x121dc>
  415afb:	nop    DWORD PTR [rax+rax*1+0x0]
  415b00:	mov    rdi,QWORD PTR [rbx+0x20]
  415b04:	mov    rsi,r15
  415b07:	call   432940 <strcmp@plt+0x2f188>
  415b0c:	mov    rdi,rax
  415b0f:	mov    QWORD PTR [rsp+0x10],rax
  415b14:	call   425170 <strcmp@plt+0x219b8>
  415b19:	mov    rdi,QWORD PTR [r12]
  415b1d:	mov    r14d,eax
  415b20:	call   425170 <strcmp@plt+0x219b8>
  415b25:	cmp    r14w,ax
  415b29:	mov    r10,QWORD PTR [rsp+0x10]
  415b2e:	jae    415b34 <strcmp@plt+0x1237c>
  415b30:	mov    r10,QWORD PTR [r12]
  415b34:	mov    r9,QWORD PTR [r13+0x4]
  415b38:	xor    r8d,r8d
  415b3b:	mov    rdi,r10
  415b3e:	mov    ecx,0x1
  415b43:	mov    edx,0x4
  415b48:	mov    esi,0xf
  415b4d:	mov    QWORD PTR [rsp+0x30],r10
  415b52:	call   423a10 <strcmp@plt+0x20258>
  415b57:	mov    r14,rax
  415b5a:	mov    rax,QWORD PTR [rsp+0x20]
  415b5f:	mov    r10,QWORD PTR [rsp+0x30]
  415b64:	mov    eax,DWORD PTR [rax]
  415b66:	test   eax,eax
  415b68:	jle    415b96 <strcmp@plt+0x123de>
  415b6a:	mov    rdi,r10
  415b6d:	call   424890 <strcmp@plt+0x210d8>
  415b72:	mov    rdi,r15
  415b75:	mov    r12,rax
  415b78:	call   424890 <strcmp@plt+0x210d8>
  415b7d:	lea    rsi,[rip+0x352ac]        # 44ae30 <strcmp@plt+0x47678>
  415b84:	mov    rdx,rax
  415b87:	mov    rcx,r12
  415b8a:	mov    edi,0x5
  415b8f:	xor    eax,eax
  415b91:	call   4306a0 <strcmp@plt+0x2cee8>
  415b96:	mov    rdx,QWORD PTR [rsp+0x28]
  415b9b:	mov    rdi,rbx
  415b9e:	mov    rsi,r14
  415ba1:	call   4083b0 <strcmp@plt+0x4bf8>
  415ba6:	mov    rdi,QWORD PTR [rsp+0x10]
  415bab:	call   424750 <strcmp@plt+0x20f98>
  415bb0:	jmp    415aed <strcmp@plt+0x12335>
  415bb5:	nop    DWORD PTR [rax]
  415bb8:	mov    rdi,r15
  415bbb:	call   424890 <strcmp@plt+0x210d8>
  415bc0:	lea    rsi,[rip+0x348b9]        # 44a480 <strcmp@plt+0x46cc8>
  415bc7:	mov    rdx,rax
  415bca:	mov    edi,0x5
  415bcf:	xor    eax,eax
  415bd1:	call   4306a0 <strcmp@plt+0x2cee8>
  415bd6:	mov    rax,QWORD PTR [rsp+0x20]
  415bdb:	cmp    DWORD PTR [rax],0x1
  415bde:	jle    415add <strcmp@plt+0x12325>
  415be4:	mov    rdi,r15
  415be7:	call   424890 <strcmp@plt+0x210d8>
  415bec:	mov    rdi,r14
  415bef:	mov    r12,rax
  415bf2:	call   423a90 <strcmp@plt+0x202d8>
  415bf7:	lea    rsi,[rip+0x3505b]        # 44ac59 <strcmp@plt+0x474a1>
  415bfe:	mov    rdx,rax
  415c01:	mov    rcx,r12
  415c04:	mov    edi,0x6
  415c09:	xor    eax,eax
  415c0b:	call   4306a0 <strcmp@plt+0x2cee8>
  415c10:	jmp    415add <strcmp@plt+0x12325>
  415c15:	mov    rdi,QWORD PTR [rsp+0x18]
  415c1a:	mov    rbp,QWORD PTR [rsp+0x20]
  415c1f:	call   42dac0 <strcmp@plt+0x2a308>
  415c24:	test   r14,r14
  415c27:	je     4156af <strcmp@plt+0x11ef7>
  415c2d:	mov    rdi,r14
  415c30:	call   4300b0 <strcmp@plt+0x2c8f8>
  415c35:	jmp    4156af <strcmp@plt+0x11ef7>
  415c3a:	call   403460 <__stack_chk_fail@plt>
  415c3f:	nop
  415c40:	test   rsi,rsi
  415c43:	je     415c68 <strcmp@plt+0x124b0>
  415c45:	sub    rsp,0x8
  415c49:	mov    rdx,rsi
  415c4c:	mov    rdi,QWORD PTR [rdi+0x18]
  415c50:	mov    rsi,QWORD PTR [rsi]
  415c53:	call   431a10 <strcmp@plt+0x2e258>
  415c58:	test   eax,eax
  415c5a:	setne  al
  415c5d:	add    rsp,0x8
  415c61:	movzx  eax,al
  415c64:	ret    
  415c65:	nop    DWORD PTR [rax]
  415c68:	xor    eax,eax
  415c6a:	ret    
  415c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  415c70:	mov    rdi,QWORD PTR [rdi+0x18]
  415c74:	jmp    432790 <strcmp@plt+0x2efd8>
  415c79:	nop    DWORD PTR [rax+0x0]
  415c80:	test   rsi,rsi
  415c83:	je     415ca8 <strcmp@plt+0x124f0>
  415c85:	sub    rsp,0x8
  415c89:	mov    rdx,rsi
  415c8c:	mov    rdi,QWORD PTR [rdi+0x20]
  415c90:	mov    rsi,QWORD PTR [rsi]
  415c93:	call   431a10 <strcmp@plt+0x2e258>
  415c98:	test   eax,eax
  415c9a:	setne  al
  415c9d:	add    rsp,0x8
  415ca1:	movzx  eax,al
  415ca4:	ret    
  415ca5:	nop    DWORD PTR [rax]
  415ca8:	xor    eax,eax
  415caa:	ret    
  415cab:	nop    DWORD PTR [rax+rax*1+0x0]
  415cb0:	mov    rdi,QWORD PTR [rdi+0x20]
  415cb4:	jmp    432790 <strcmp@plt+0x2efd8>
  415cb9:	nop    DWORD PTR [rax+0x0]
  415cc0:	cmp    esi,0x4
  415cc3:	jle    415ce0 <strcmp@plt+0x12528>
  415cc5:	mov    rax,0x468e3c
  415ccc:	mov    eax,DWORD PTR [rax]
  415cce:	add    eax,0x4
  415cd1:	cmp    esi,eax
  415cd3:	jle    415ce0 <strcmp@plt+0x12528>
  415cd5:	repz ret 
  415cd7:	nop    WORD PTR [rax+rax*1+0x0]
  415ce0:	jmp    415230 <strcmp@plt+0x11a78>
  415ce5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  415cf0:	push   r15
  415cf2:	push   r14
  415cf4:	push   r13
  415cf6:	push   r12
  415cf8:	push   rbp
  415cf9:	push   rbx
  415cfa:	mov    rbp,rdi
  415cfd:	mov    ebx,esi
  415cff:	sub    rsp,0x868
  415d06:	mov    rax,QWORD PTR fs:0x28
  415d0f:	mov    QWORD PTR [rsp+0x858],rax
  415d17:	xor    eax,eax
  415d19:	cmp    esi,0x4
  415d1c:	jle    415d57 <strcmp@plt+0x1259f>
  415d1e:	mov    rax,0x468e3c
  415d25:	mov    eax,DWORD PTR [rax]
  415d27:	add    eax,0x4
  415d2a:	cmp    esi,eax
  415d2c:	jle    415d57 <strcmp@plt+0x1259f>
  415d2e:	mov    rax,QWORD PTR [rsp+0x858]
  415d36:	xor    rax,QWORD PTR fs:0x28
  415d3f:	jne    416120 <strcmp@plt+0x12968>
  415d45:	add    rsp,0x868
  415d4c:	pop    rbx
  415d4d:	pop    rbp
  415d4e:	pop    r12
  415d50:	pop    r13
  415d52:	pop    r14
  415d54:	pop    r15
  415d56:	ret    
  415d57:	lea    rsi,[rip+0x3524a]        # 44afa8 <strcmp@plt+0x477f0>
  415d5e:	mov    edi,ebx
  415d60:	xor    eax,eax
  415d62:	xor    r12d,r12d
  415d65:	call   4306a0 <strcmp@plt+0x2cee8>
  415d6a:	call   42d4e0 <strcmp@plt+0x29d28>
  415d6f:	mov    r15,rax
  415d72:	mov    QWORD PTR [rsp+0x20],rax
  415d77:	mov    rax,QWORD PTR [rbp+0x20]
  415d7b:	mov    rsi,r15
  415d7e:	mov    rdi,QWORD PTR [rax]
  415d81:	call   42d540 <strcmp@plt+0x29d88>
  415d86:	mov    rax,QWORD PTR [rbp+0x20]
  415d8a:	mov    rsi,r15
  415d8d:	mov    rdi,QWORD PTR [rax+0x8]
  415d91:	call   42d540 <strcmp@plt+0x29d88>
  415d96:	mov    rax,QWORD PTR [rbp+0x20]
  415d9a:	mov    rdx,QWORD PTR [rax+0x10]
  415d9e:	mov    rsi,QWORD PTR [rdx]
  415da1:	mov    edx,DWORD PTR [rsi]
  415da3:	test   edx,edx
  415da5:	je     415df1 <strcmp@plt+0x12639>
  415da7:	mov    r8,QWORD PTR [rsi+0x10]
  415dab:	lea    edx,[r12+r12*1]
  415daf:	mov    edi,r12d
  415db2:	shr    edi,0x4
  415db5:	mov    ecx,edx
  415db7:	mov    edx,DWORD PTR [r8+rdi*4]
  415dbb:	and    ecx,0x1e
  415dbe:	shrx   edx,edx,ecx
  415dc3:	and    edx,0x3
  415dc6:	jne    415de1 <strcmp@plt+0x12629>
  415dc8:	mov    rdx,QWORD PTR [rsi+0x20]
  415dcc:	mov    eax,r12d
  415dcf:	mov    rsi,QWORD PTR [rsp+0x20]
  415dd4:	mov    rdi,QWORD PTR [rdx+rax*8]
  415dd8:	call   42d540 <strcmp@plt+0x29d88>
  415ddd:	mov    rax,QWORD PTR [rbp+0x20]
  415de1:	mov    rdx,QWORD PTR [rax+0x10]
  415de5:	add    r12d,0x1
  415de9:	mov    rsi,QWORD PTR [rdx]
  415dec:	cmp    DWORD PTR [rsi],r12d
  415def:	jne    415da7 <strcmp@plt+0x125ef>
  415df1:	mov    rdx,QWORD PTR [rax+0x18]
  415df5:	mov    rsi,QWORD PTR [rdx]
  415df8:	mov    edi,DWORD PTR [rsi]
  415dfa:	test   edi,edi
  415dfc:	je     415e4b <strcmp@plt+0x12693>
  415dfe:	xor    r12d,r12d
  415e01:	mov    r8,QWORD PTR [rsi+0x10]
  415e05:	lea    edx,[r12+r12*1]
  415e09:	mov    edi,r12d
  415e0c:	shr    edi,0x4
  415e0f:	mov    ecx,edx
  415e11:	mov    edx,DWORD PTR [r8+rdi*4]
  415e15:	and    ecx,0x1e
  415e18:	shrx   edx,edx,ecx
  415e1d:	and    edx,0x3
  415e20:	jne    415e3b <strcmp@plt+0x12683>
  415e22:	mov    rdx,QWORD PTR [rsi+0x20]
  415e26:	mov    eax,r12d
  415e29:	mov    rsi,QWORD PTR [rsp+0x20]
  415e2e:	mov    rdi,QWORD PTR [rdx+rax*8]
  415e32:	call   42d540 <strcmp@plt+0x29d88>
  415e37:	mov    rax,QWORD PTR [rbp+0x20]
  415e3b:	mov    rdx,QWORD PTR [rax+0x18]
  415e3f:	add    r12d,0x1
  415e43:	mov    rsi,QWORD PTR [rdx]
  415e46:	cmp    DWORD PTR [rsi],r12d
  415e49:	jne    415e01 <strcmp@plt+0x12649>
  415e4b:	mov    r15,QWORD PTR [rsp+0x20]
  415e50:	mov    rdi,QWORD PTR [rax+0x20]
  415e54:	mov    r14d,ebx
  415e57:	mov    rsi,r15
  415e5a:	call   42d540 <strcmp@plt+0x29d88>
  415e5f:	mov    rax,QWORD PTR [rbp+0x20]
  415e63:	mov    rsi,r15
  415e66:	mov    rdi,QWORD PTR [rax+0x20]
  415e6a:	call   42d540 <strcmp@plt+0x29d88>
  415e6f:	mov    rcx,QWORD PTR [r15+0x8]
  415e73:	mov    rax,r15
  415e76:	lea    r15,[rip+0x352cf]        # 44b14c <strcmp@plt+0x47994>
  415e7d:	cmp    rax,rcx
  415e80:	mov    QWORD PTR [rsp+0x28],rcx
  415e85:	je     4160dd <strcmp@plt+0x12925>
  415e8b:	mov    rax,QWORD PTR [rsp+0x28]
  415e90:	mov    rax,QWORD PTR [rax+0x10]
  415e94:	mov    rax,QWORD PTR [rax]
  415e97:	test   rax,rax
  415e9a:	mov    QWORD PTR [rsp+0x10],rax
  415e9f:	je     4160c1 <strcmp@plt+0x12909>
  415ea5:	lea    rax,[rsp+0x40]
  415eaa:	mov    QWORD PTR [rsp+0x38],rax
  415eaf:	mov    QWORD PTR [rsp+0x18],rax
  415eb4:	lea    rax,[rsp+0x450]
  415ebc:	mov    QWORD PTR [rsp+0x30],rax
  415ec1:	mov    rax,QWORD PTR [rsp+0x10]
  415ec6:	cmp    QWORD PTR [rax+0x8],0x0
  415ecb:	je     416060 <strcmp@plt+0x128a8>
  415ed1:	mov    rax,QWORD PTR [rax+0x28]
  415ed5:	mov    rax,QWORD PTR [rax]
  415ed8:	test   rax,rax
  415edb:	mov    QWORD PTR [rsp],rax
  415edf:	je     416060 <strcmp@plt+0x128a8>
  415ee5:	mov    rax,QWORD PTR [rsp+0x30]
  415eea:	mov    QWORD PTR [rsp+0x8],rax
  415eef:	nop
  415ef0:	mov    rax,QWORD PTR [rsp]
  415ef4:	cmp    QWORD PTR [rax+0x8],0x0
  415ef9:	je     415fb3 <strcmp@plt+0x127fb>
  415eff:	mov    rax,QWORD PTR [rsp]
  415f03:	mov    r12,QWORD PTR [rax+0x28]
  415f07:	test   r12,r12
  415f0a:	je     415fb3 <strcmp@plt+0x127fb>
  415f10:	cmp    r14d,0x4
  415f14:	jle    415ff0 <strcmp@plt+0x12838>
  415f1a:	mov    rax,0x468e3c
  415f21:	mov    eax,DWORD PTR [rax]
  415f23:	add    eax,0x4
  415f26:	cmp    r14d,eax
  415f29:	jle    415ff0 <strcmp@plt+0x12838>
  415f2f:	mov    rax,QWORD PTR [r12]
  415f33:	mov    rdx,QWORD PTR [rax+0x28]
  415f37:	mov    rbp,QWORD PTR [rdx+0x8]
  415f3b:	cmp    rdx,rbp
  415f3e:	je     415fb3 <strcmp@plt+0x127fb>
  415f40:	mov    r13,QWORD PTR [rbp+0x10]
  415f44:	mov    ecx,DWORD PTR [r13+0x18]
  415f48:	test   ecx,ecx
  415f4a:	je     415fa9 <strcmp@plt+0x127f1>
  415f4c:	mov    rbx,QWORD PTR [r13+0x8]
  415f50:	cmp    rbx,r13
  415f53:	jne    415f7a <strcmp@plt+0x127c2>
  415f55:	jmp    415fa9 <strcmp@plt+0x127f1>
  415f57:	nop    WORD PTR [rax+rax*1+0x0]
  415f60:	mov    rax,0x468e3c
  415f67:	mov    eax,DWORD PTR [rax]
  415f69:	add    eax,0x4
  415f6c:	cmp    r14d,eax
  415f6f:	jle    415f80 <strcmp@plt+0x127c8>
  415f71:	mov    rbx,QWORD PTR [rbx+0x8]
  415f75:	cmp    rbx,r13
  415f78:	je     415fa5 <strcmp@plt+0x127ed>
  415f7a:	cmp    r14d,0x4
  415f7e:	jg     415f60 <strcmp@plt+0x127a8>
  415f80:	mov    rax,QWORD PTR [rbx+0x10]
  415f84:	mov    rdi,QWORD PTR [rax]
  415f87:	call   424890 <strcmp@plt+0x210d8>
  415f8c:	mov    rsi,r15
  415f8f:	mov    rdx,rax
  415f92:	mov    edi,r14d
  415f95:	xor    eax,eax
  415f97:	call   4306a0 <strcmp@plt+0x2cee8>
  415f9c:	mov    rbx,QWORD PTR [rbx+0x8]
  415fa0:	cmp    rbx,r13
  415fa3:	jne    415f7a <strcmp@plt+0x127c2>
  415fa5:	mov    rax,QWORD PTR [r12]
  415fa9:	mov    rbp,QWORD PTR [rbp+0x8]
  415fad:	cmp    QWORD PTR [rax+0x28],rbp
  415fb1:	jne    415f40 <strcmp@plt+0x12788>
  415fb3:	mov    rax,QWORD PTR [rsp]
  415fb7:	mov    rax,QWORD PTR [rax+0x10]
  415fbb:	test   rax,rax
  415fbe:	je     41602b <strcmp@plt+0x12873>
  415fc0:	mov    rcx,QWORD PTR [rsp]
  415fc4:	mov    rdx,QWORD PTR [rcx+0x18]
  415fc8:	test   rdx,rdx
  415fcb:	je     416092 <strcmp@plt+0x128da>
  415fd1:	mov    rcx,QWORD PTR [rsp+0x8]
  415fd6:	mov    QWORD PTR [rsp],rax
  415fda:	lea    rax,[rcx+0x8]
  415fde:	mov    QWORD PTR [rcx],rdx
  415fe1:	mov    QWORD PTR [rsp+0x8],rax
  415fe6:	jmp    415ef0 <strcmp@plt+0x12738>
  415feb:	nop    DWORD PTR [rax+rax*1+0x0]
  415ff0:	mov    rdi,QWORD PTR [r12]
  415ff4:	lea    rax,[rip+0x35146]        # 44b141 <strcmp@plt+0x47989>
  415ffb:	lea    rbx,[rip+0x35134]        # 44b136 <strcmp@plt+0x4797e>
  416002:	cmp    BYTE PTR [rdi+0x3c],0x0
  416006:	cmovne rbx,rax
  41600a:	call   424890 <strcmp@plt+0x210d8>
  41600f:	lea    rsi,[rip+0x34f62]        # 44af78 <strcmp@plt+0x477c0>
  416016:	mov    rdx,rax
  416019:	mov    rcx,rbx
  41601c:	mov    edi,r14d
  41601f:	xor    eax,eax
  416021:	call   4306a0 <strcmp@plt+0x2cee8>
  416026:	jmp    415f2f <strcmp@plt+0x12777>
  41602b:	mov    rax,QWORD PTR [rsp]
  41602f:	mov    rax,QWORD PTR [rax+0x18]
  416033:	test   rax,rax
  416036:	mov    QWORD PTR [rsp],rax
  41603a:	jne    415ef0 <strcmp@plt+0x12738>
  416040:	mov    rax,QWORD PTR [rsp+0x8]
  416045:	mov    rcx,QWORD PTR [rsp+0x30]
  41604a:	cmp    rax,rcx
  41604d:	je     416060 <strcmp@plt+0x128a8>
  41604f:	mov    rax,QWORD PTR [rax-0x8]
  416053:	test   rax,rax
  416056:	mov    QWORD PTR [rsp],rax
  41605a:	jne    416146 <strcmp@plt+0x1298e>
  416060:	mov    rcx,QWORD PTR [rsp+0x10]
  416065:	mov    rax,QWORD PTR [rcx+0x10]
  416069:	test   rax,rax
  41606c:	je     41609b <strcmp@plt+0x128e3>
  41606e:	mov    rdx,QWORD PTR [rcx+0x18]
  416072:	test   rdx,rdx
  416075:	je     416088 <strcmp@plt+0x128d0>
  416077:	mov    rcx,QWORD PTR [rsp+0x18]
  41607c:	mov    QWORD PTR [rcx],rdx
  41607f:	add    rcx,0x8
  416083:	mov    QWORD PTR [rsp+0x18],rcx
  416088:	mov    QWORD PTR [rsp+0x10],rax
  41608d:	jmp    415ec1 <strcmp@plt+0x12709>
  416092:	mov    QWORD PTR [rsp],rax
  416096:	jmp    415ef0 <strcmp@plt+0x12738>
  41609b:	mov    rax,QWORD PTR [rsp+0x10]
  4160a0:	mov    rax,QWORD PTR [rax+0x18]
  4160a4:	test   rax,rax
  4160a7:	jne    416088 <strcmp@plt+0x128d0>
  4160a9:	mov    rax,QWORD PTR [rsp+0x18]
  4160ae:	mov    rcx,QWORD PTR [rsp+0x38]
  4160b3:	cmp    rax,rcx
  4160b6:	je     4160c1 <strcmp@plt+0x12909>
  4160b8:	mov    rax,QWORD PTR [rax-0x8]
  4160bc:	test   rax,rax
  4160bf:	jne    416125 <strcmp@plt+0x1296d>
  4160c1:	mov    rax,QWORD PTR [rsp+0x28]
  4160c6:	mov    rax,QWORD PTR [rax+0x8]
  4160ca:	cmp    QWORD PTR [rsp+0x20],rax
  4160cf:	mov    QWORD PTR [rsp+0x28],rax
  4160d4:	jne    415e8b <strcmp@plt+0x126d3>
  4160da:	mov    ebx,r14d
  4160dd:	mov    rdi,QWORD PTR [rsp+0x20]
  4160e2:	call   42dac0 <strcmp@plt+0x2a308>
  4160e7:	cmp    ebx,0x4
  4160ea:	jg     416130 <strcmp@plt+0x12978>
  4160ec:	mov    rax,QWORD PTR [rsp+0x858]
  4160f4:	xor    rax,QWORD PTR fs:0x28
  4160fd:	jne    416120 <strcmp@plt+0x12968>
  4160ff:	add    rsp,0x868
  416106:	mov    edi,ebx
  416108:	lea    rsi,[rip+0x31a99]        # 447ba8 <strcmp@plt+0x443f0>
  41610f:	pop    rbx
  416110:	pop    rbp
  416111:	pop    r12
  416113:	pop    r13
  416115:	pop    r14
  416117:	pop    r15
  416119:	xor    eax,eax
  41611b:	jmp    4306a0 <strcmp@plt+0x2cee8>
  416120:	call   403460 <__stack_chk_fail@plt>
  416125:	sub    QWORD PTR [rsp+0x18],0x8
  41612b:	jmp    416088 <strcmp@plt+0x128d0>
  416130:	mov    rax,0x468e3c
  416137:	mov    eax,DWORD PTR [rax]
  416139:	add    eax,0x4
  41613c:	cmp    ebx,eax
  41613e:	jg     415d2e <strcmp@plt+0x12576>
  416144:	jmp    4160ec <strcmp@plt+0x12934>
  416146:	sub    QWORD PTR [rsp+0x8],0x8
  41614c:	jmp    415ef0 <strcmp@plt+0x12738>
  416151:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41615c:	nop    DWORD PTR [rax+0x0]
  416160:	push   r15
  416162:	push   r14
  416164:	push   r13
  416166:	push   r12
  416168:	push   rbp
  416169:	push   rbx
  41616a:	sub    rsp,0x878
  416171:	mov    rdx,QWORD PTR fs:0x28
  41617a:	mov    QWORD PTR [rsp+0x868],rdx
  416182:	xor    edx,edx
  416184:	mov    rdx,0x4686c0
  41618b:	cmp    QWORD PTR [rdi+0x8],rdx
  41618f:	mov    QWORD PTR [rsp+0x10],rdi
  416194:	jne    4169e9 <strcmp@plt+0x13231>
  41619a:	call   42d4e0 <strcmp@plt+0x29d28>
  41619f:	mov    r15,rax
  4161a2:	call   42d4e0 <strcmp@plt+0x29d28>
  4161a7:	mov    QWORD PTR [rsp+0x40],rax
  4161ac:	call   42d4e0 <strcmp@plt+0x29d28>
  4161b1:	mov    rbx,QWORD PTR [rsp+0x10]
  4161b6:	mov    r14,rax
  4161b9:	mov    QWORD PTR [rsp+0x30],rax
  4161be:	mov    rsi,r14
  4161c1:	mov    rax,QWORD PTR [rbx+0x18]
  4161c5:	mov    rdi,QWORD PTR [rax]
  4161c8:	call   42d540 <strcmp@plt+0x29d88>
  4161cd:	mov    rax,QWORD PTR [rbx+0x18]
  4161d1:	mov    rsi,r14
  4161d4:	mov    rdi,QWORD PTR [rax+0x8]
  4161d8:	call   42d540 <strcmp@plt+0x29d88>
  4161dd:	mov    rax,QWORD PTR [rbx+0x18]
  4161e1:	mov    rdx,QWORD PTR [rax+0x10]
  4161e5:	mov    rsi,QWORD PTR [rdx]
  4161e8:	mov    r9d,DWORD PTR [rsi]
  4161eb:	test   r9d,r9d
  4161ee:	je     41624c <strcmp@plt+0x12a94>
  4161f0:	xor    ebx,ebx
  4161f2:	jmp    416202 <strcmp@plt+0x12a4a>
  4161f4:	mov    rdx,QWORD PTR [rax+0x10]
  4161f8:	add    ebx,0x1
  4161fb:	mov    rsi,QWORD PTR [rdx]
  4161fe:	cmp    DWORD PTR [rsi],ebx
  416200:	je     41624c <strcmp@plt+0x12a94>
  416202:	mov    r8,QWORD PTR [rsi+0x10]
  416206:	lea    edx,[rbx+rbx*1]
  416209:	mov    edi,ebx
  41620b:	shr    edi,0x4
  41620e:	and    edx,0x1e
  416211:	mov    ecx,edx
  416213:	mov    edx,DWORD PTR [r8+rdi*4]
  416217:	shrx   edx,edx,ecx
  41621c:	and    edx,0x3
  41621f:	jne    4161f4 <strcmp@plt+0x12a3c>
  416221:	mov    rdx,QWORD PTR [rsi+0x20]
  416225:	mov    eax,ebx
  416227:	mov    rsi,QWORD PTR [rsp+0x30]
  41622c:	add    ebx,0x1
  41622f:	mov    rdi,QWORD PTR [rdx+rax*8]
  416233:	call   42d540 <strcmp@plt+0x29d88>
  416238:	mov    rax,QWORD PTR [rsp+0x10]
  41623d:	mov    rax,QWORD PTR [rax+0x18]
  416241:	mov    rdx,QWORD PTR [rax+0x10]
  416245:	mov    rsi,QWORD PTR [rdx]
  416248:	cmp    DWORD PTR [rsi],ebx
  41624a:	jne    416202 <strcmp@plt+0x12a4a>
  41624c:	mov    rdx,QWORD PTR [rax+0x18]
  416250:	mov    rsi,QWORD PTR [rdx]
  416253:	mov    r8d,DWORD PTR [rsi]
  416256:	test   r8d,r8d
  416259:	je     4162b7 <strcmp@plt+0x12aff>
  41625b:	xor    ebx,ebx
  41625d:	jmp    41626d <strcmp@plt+0x12ab5>
  41625f:	mov    rdx,QWORD PTR [rax+0x18]
  416263:	add    ebx,0x1
  416266:	mov    rsi,QWORD PTR [rdx]
  416269:	cmp    DWORD PTR [rsi],ebx
  41626b:	je     4162b7 <strcmp@plt+0x12aff>
  41626d:	mov    r8,QWORD PTR [rsi+0x10]
  416271:	lea    edx,[rbx+rbx*1]
  416274:	mov    edi,ebx
  416276:	shr    edi,0x4
  416279:	and    edx,0x1e
  41627c:	mov    ecx,edx
  41627e:	mov    edx,DWORD PTR [r8+rdi*4]
  416282:	shrx   edx,edx,ecx
  416287:	and    edx,0x3
  41628a:	jne    41625f <strcmp@plt+0x12aa7>
  41628c:	mov    rdx,QWORD PTR [rsi+0x20]
  416290:	mov    eax,ebx
  416292:	mov    rsi,QWORD PTR [rsp+0x30]
  416297:	add    ebx,0x1
  41629a:	mov    rdi,QWORD PTR [rdx+rax*8]
  41629e:	call   42d540 <strcmp@plt+0x29d88>
  4162a3:	mov    rax,QWORD PTR [rsp+0x10]
  4162a8:	mov    rax,QWORD PTR [rax+0x18]
  4162ac:	mov    rdx,QWORD PTR [rax+0x18]
  4162b0:	mov    rsi,QWORD PTR [rdx]
  4162b3:	cmp    DWORD PTR [rsi],ebx
  4162b5:	jne    41626d <strcmp@plt+0x12ab5>
  4162b7:	mov    rbx,QWORD PTR [rsp+0x30]
  4162bc:	mov    rdi,QWORD PTR [rax+0x20]
  4162c0:	mov    rsi,rbx
  4162c3:	call   42d540 <strcmp@plt+0x29d88>
  4162c8:	mov    rax,QWORD PTR [rsp+0x10]
  4162cd:	mov    rsi,rbx
  4162d0:	mov    rax,QWORD PTR [rax+0x18]
  4162d4:	mov    rdi,QWORD PTR [rax+0x20]
  4162d8:	call   42d540 <strcmp@plt+0x29d88>
  4162dd:	mov    rdx,QWORD PTR [rbx+0x8]
  4162e1:	mov    BYTE PTR [rsp+0xf],0x0
  4162e6:	cmp    rbx,rdx
  4162e9:	mov    QWORD PTR [rsp+0x38],rdx
  4162ee:	je     416509 <strcmp@plt+0x12d51>
  4162f4:	lea    rax,[rsp+0x50]
  4162f9:	mov    QWORD PTR [rsp+0x48],rax
  4162fe:	lea    rax,[rsp+0x460]
  416306:	mov    QWORD PTR [rsp+0x28],rax
  41630b:	mov    rax,QWORD PTR [rsp+0x38]
  416310:	mov    rax,QWORD PTR [rax+0x10]
  416314:	mov    rax,QWORD PTR [rax]
  416317:	test   rax,rax
  41631a:	mov    QWORD PTR [rsp+0x18],rax
  41631f:	je     4164f0 <strcmp@plt+0x12d38>
  416325:	mov    rax,QWORD PTR [rsp+0x48]
  41632a:	mov    QWORD PTR [rsp+0x20],rax
  41632f:	nop
  416330:	mov    rax,QWORD PTR [rsp+0x18]
  416335:	cmp    QWORD PTR [rax+0x8],0x0
  41633a:	je     416474 <strcmp@plt+0x12cbc>
  416340:	mov    rax,QWORD PTR [rax+0x28]
  416344:	mov    r14,QWORD PTR [rax]
  416347:	test   r14,r14
  41634a:	je     416474 <strcmp@plt+0x12cbc>
  416350:	mov    rax,QWORD PTR [rsp+0x28]
  416355:	mov    QWORD PTR [rsp],rax
  416359:	nop    DWORD PTR [rax+0x0]
  416360:	cmp    QWORD PTR [r14+0x8],0x0
  416365:	je     416405 <strcmp@plt+0x12c4d>
  41636b:	mov    rax,QWORD PTR [r14+0x28]
  41636f:	test   rax,rax
  416372:	je     416405 <strcmp@plt+0x12c4d>
  416378:	mov    r12,QWORD PTR [rax]
  41637b:	mov    rdi,r12
  41637e:	call   424a20 <strcmp@plt+0x21268>
  416383:	mov    rbx,QWORD PTR [r15+0x8]
  416387:	mov    r13d,eax
  41638a:	cmp    r15,rbx
  41638d:	jne    4163b4 <strcmp@plt+0x12bfc>
  41638f:	jmp    416438 <strcmp@plt+0x12c80>
  416394:	nop    DWORD PTR [rax+0x0]
  416398:	mov    rsi,rbp
  41639b:	mov    rdi,r12
  41639e:	call   437130 <strcmp@plt+0x33978>
  4163a3:	cmp    al,0x1
  4163a5:	je     4163d4 <strcmp@plt+0x12c1c>
  4163a7:	mov    rbx,QWORD PTR [rbx+0x8]
  4163ab:	cmp    r15,rbx
  4163ae:	je     416438 <strcmp@plt+0x12c80>
  4163b4:	mov    rbp,QWORD PTR [rbx+0x10]
  4163b8:	mov    rdi,rbp
  4163bb:	call   424a20 <strcmp@plt+0x21268>
  4163c0:	cmp    r13b,al
  4163c3:	jb     416398 <strcmp@plt+0x12be0>
  4163c5:	mov    rsi,r12
  4163c8:	mov    rdi,rbp
  4163cb:	call   437130 <strcmp@plt+0x33978>
  4163d0:	cmp    al,0x1
  4163d2:	jne    4163a7 <strcmp@plt+0x12bef>
  4163d4:	mov    rdi,rbp
  4163d7:	call   424890 <strcmp@plt+0x210d8>
  4163dc:	mov    rdi,r12
  4163df:	mov    rbx,rax
  4163e2:	call   424890 <strcmp@plt+0x210d8>
  4163e7:	lea    rsi,[rip+0x34bfa]        # 44afe8 <strcmp@plt+0x47830>
  4163ee:	mov    rdx,rax
  4163f1:	mov    rcx,rbx
  4163f4:	mov    edi,0x2
  4163f9:	xor    eax,eax
  4163fb:	call   4306a0 <strcmp@plt+0x2cee8>
  416400:	mov    BYTE PTR [rsp+0xf],0x1
  416405:	mov    rax,QWORD PTR [r14+0x10]
  416409:	test   rax,rax
  41640c:	je     41644c <strcmp@plt+0x12c94>
  41640e:	mov    rdx,QWORD PTR [r14+0x18]
  416412:	test   rdx,rdx
  416415:	je     4164b0 <strcmp@plt+0x12cf8>
  41641b:	mov    rcx,QWORD PTR [rsp]
  41641f:	mov    r14,rax
  416422:	lea    rax,[rcx+0x8]
  416426:	mov    QWORD PTR [rcx],rdx
  416429:	mov    QWORD PTR [rsp],rax
  41642d:	jmp    416360 <strcmp@plt+0x12ba8>
  416432:	nop    WORD PTR [rax+rax*1+0x0]
  416438:	mov    rsi,r15
  41643b:	mov    rdi,r12
  41643e:	call   42d540 <strcmp@plt+0x29d88>
  416443:	mov    rax,QWORD PTR [r14+0x10]
  416447:	test   rax,rax
  41644a:	jne    41640e <strcmp@plt+0x12c56>
  41644c:	mov    r14,QWORD PTR [r14+0x18]
  416450:	test   r14,r14
  416453:	jne    416360 <strcmp@plt+0x12ba8>
  416459:	mov    rax,QWORD PTR [rsp]
  41645d:	mov    rdx,QWORD PTR [rsp+0x28]
  416462:	cmp    rax,rdx
  416465:	je     416474 <strcmp@plt+0x12cbc>
  416467:	mov    r14,QWORD PTR [rax-0x8]
  41646b:	test   r14,r14
  41646e:	jne    416a34 <strcmp@plt+0x1327c>
  416474:	mov    rdx,QWORD PTR [rsp+0x18]
  416479:	mov    rax,QWORD PTR [rdx+0x10]
  41647d:	test   rax,rax
  416480:	je     4164b8 <strcmp@plt+0x12d00>
  416482:	mov    rdx,QWORD PTR [rdx+0x18]
  416486:	test   rdx,rdx
  416489:	je     4167e2 <strcmp@plt+0x1302a>
  41648f:	mov    rcx,QWORD PTR [rsp+0x20]
  416494:	mov    QWORD PTR [rsp+0x18],rax
  416499:	lea    rax,[rcx+0x8]
  41649d:	mov    QWORD PTR [rcx],rdx
  4164a0:	mov    QWORD PTR [rsp+0x20],rax
  4164a5:	jmp    416330 <strcmp@plt+0x12b78>
  4164aa:	nop    WORD PTR [rax+rax*1+0x0]
  4164b0:	mov    r14,rax
  4164b3:	jmp    416360 <strcmp@plt+0x12ba8>
  4164b8:	mov    rax,QWORD PTR [rsp+0x18]
  4164bd:	mov    rax,QWORD PTR [rax+0x18]
  4164c1:	test   rax,rax
  4164c4:	mov    QWORD PTR [rsp+0x18],rax
  4164c9:	jne    416330 <strcmp@plt+0x12b78>
  4164cf:	mov    rax,QWORD PTR [rsp+0x20]
  4164d4:	mov    rdx,QWORD PTR [rsp+0x48]
  4164d9:	cmp    rax,rdx
  4164dc:	je     4164f0 <strcmp@plt+0x12d38>
  4164de:	mov    rax,QWORD PTR [rax-0x8]
  4164e2:	test   rax,rax
  4164e5:	mov    QWORD PTR [rsp+0x18],rax
  4164ea:	jne    416a29 <strcmp@plt+0x13271>
  4164f0:	mov    rax,QWORD PTR [rsp+0x38]
  4164f5:	mov    rax,QWORD PTR [rax+0x8]
  4164f9:	cmp    QWORD PTR [rsp+0x30],rax
  4164fe:	mov    QWORD PTR [rsp+0x38],rax
  416503:	jne    41630b <strcmp@plt+0x12b53>
  416509:	mov    rdi,QWORD PTR [rsp+0x30]
  41650e:	call   42dac0 <strcmp@plt+0x2a308>
  416513:	mov    rdi,r15
  416516:	call   42dac0 <strcmp@plt+0x2a308>
  41651b:	call   42d4e0 <strcmp@plt+0x29d28>
  416520:	mov    rbx,QWORD PTR [rsp+0x10]
  416525:	mov    r14,rax
  416528:	mov    QWORD PTR [rsp+0x30],rax
  41652d:	mov    rsi,r14
  416530:	mov    rax,QWORD PTR [rbx+0x20]
  416534:	mov    rdi,QWORD PTR [rax]
  416537:	call   42d540 <strcmp@plt+0x29d88>
  41653c:	mov    rax,QWORD PTR [rbx+0x20]
  416540:	mov    rsi,r14
  416543:	mov    rdi,QWORD PTR [rax+0x8]
  416547:	call   42d540 <strcmp@plt+0x29d88>
  41654c:	mov    rax,QWORD PTR [rbx+0x20]
  416550:	mov    rdx,QWORD PTR [rax+0x10]
  416554:	mov    rsi,QWORD PTR [rdx]
  416557:	mov    edi,DWORD PTR [rsi]
  416559:	test   edi,edi
  41655b:	je     4165b9 <strcmp@plt+0x12e01>
  41655d:	xor    ebx,ebx
  41655f:	jmp    41656f <strcmp@plt+0x12db7>
  416561:	mov    rdx,QWORD PTR [rax+0x10]
  416565:	add    ebx,0x1
  416568:	mov    rsi,QWORD PTR [rdx]
  41656b:	cmp    DWORD PTR [rsi],ebx
  41656d:	je     4165b9 <strcmp@plt+0x12e01>
  41656f:	mov    r8,QWORD PTR [rsi+0x10]
  416573:	lea    edx,[rbx+rbx*1]
  416576:	mov    edi,ebx
  416578:	shr    edi,0x4
  41657b:	and    edx,0x1e
  41657e:	mov    ecx,edx
  416580:	mov    edx,DWORD PTR [r8+rdi*4]
  416584:	shrx   edx,edx,ecx
  416589:	and    edx,0x3
  41658c:	jne    416561 <strcmp@plt+0x12da9>
  41658e:	mov    rdx,QWORD PTR [rsi+0x20]
  416592:	mov    eax,ebx
  416594:	mov    rsi,QWORD PTR [rsp+0x30]
  416599:	add    ebx,0x1
  41659c:	mov    rdi,QWORD PTR [rdx+rax*8]
  4165a0:	call   42d540 <strcmp@plt+0x29d88>
  4165a5:	mov    rax,QWORD PTR [rsp+0x10]
  4165aa:	mov    rax,QWORD PTR [rax+0x20]
  4165ae:	mov    rdx,QWORD PTR [rax+0x10]
  4165b2:	mov    rsi,QWORD PTR [rdx]
  4165b5:	cmp    DWORD PTR [rsi],ebx
  4165b7:	jne    41656f <strcmp@plt+0x12db7>
  4165b9:	mov    rdx,QWORD PTR [rax+0x18]
  4165bd:	mov    rsi,QWORD PTR [rdx]
  4165c0:	mov    ecx,DWORD PTR [rsi]
  4165c2:	test   ecx,ecx
  4165c4:	je     416622 <strcmp@plt+0x12e6a>
  4165c6:	xor    ebx,ebx
  4165c8:	jmp    4165d8 <strcmp@plt+0x12e20>
  4165ca:	mov    rdx,QWORD PTR [rax+0x18]
  4165ce:	add    ebx,0x1
  4165d1:	mov    rsi,QWORD PTR [rdx]
  4165d4:	cmp    DWORD PTR [rsi],ebx
  4165d6:	je     416622 <strcmp@plt+0x12e6a>
  4165d8:	mov    r8,QWORD PTR [rsi+0x10]
  4165dc:	lea    edx,[rbx+rbx*1]
  4165df:	mov    edi,ebx
  4165e1:	shr    edi,0x4
  4165e4:	and    edx,0x1e
  4165e7:	mov    ecx,edx
  4165e9:	mov    edx,DWORD PTR [r8+rdi*4]
  4165ed:	shrx   edx,edx,ecx
  4165f2:	and    edx,0x3
  4165f5:	jne    4165ca <strcmp@plt+0x12e12>
  4165f7:	mov    rdx,QWORD PTR [rsi+0x20]
  4165fb:	mov    eax,ebx
  4165fd:	mov    rsi,QWORD PTR [rsp+0x30]
  416602:	add    ebx,0x1
  416605:	mov    rdi,QWORD PTR [rdx+rax*8]
  416609:	call   42d540 <strcmp@plt+0x29d88>
  41660e:	mov    rax,QWORD PTR [rsp+0x10]
  416613:	mov    rax,QWORD PTR [rax+0x20]
  416617:	mov    rdx,QWORD PTR [rax+0x18]
  41661b:	mov    rsi,QWORD PTR [rdx]
  41661e:	cmp    DWORD PTR [rsi],ebx
  416620:	jne    4165d8 <strcmp@plt+0x12e20>
  416622:	mov    rbx,QWORD PTR [rsp+0x30]
  416627:	mov    rdi,QWORD PTR [rax+0x20]
  41662b:	mov    rsi,rbx
  41662e:	call   42d540 <strcmp@plt+0x29d88>
  416633:	mov    rax,QWORD PTR [rsp+0x10]
  416638:	mov    rsi,rbx
  41663b:	mov    rax,QWORD PTR [rax+0x20]
  41663f:	mov    rdi,QWORD PTR [rax+0x20]
  416643:	call   42d540 <strcmp@plt+0x29d88>
  416648:	mov    rdx,QWORD PTR [rbx+0x8]
  41664c:	cmp    rbx,rdx
  41664f:	mov    QWORD PTR [rsp+0x38],rdx
  416654:	je     416919 <strcmp@plt+0x13161>
  41665a:	lea    rax,[rsp+0x50]
  41665f:	mov    r15,QWORD PTR [rsp+0x40]
  416664:	mov    QWORD PTR [rsp+0x48],rax
  416669:	lea    rax,[rsp+0x460]
  416671:	mov    QWORD PTR [rsp+0x28],rax
  416676:	mov    rax,QWORD PTR [rsp+0x38]
  41667b:	mov    rax,QWORD PTR [rax+0x10]
  41667f:	mov    rax,QWORD PTR [rax]
  416682:	test   rax,rax
  416685:	mov    QWORD PTR [rsp+0x18],rax
  41668a:	je     416900 <strcmp@plt+0x13148>
  416690:	mov    rax,QWORD PTR [rsp+0x48]
  416695:	mov    QWORD PTR [rsp+0x20],rax
  41669a:	nop    WORD PTR [rax+rax*1+0x0]
  4166a0:	mov    rax,QWORD PTR [rsp+0x18]
  4166a5:	cmp    QWORD PTR [rax+0x8],0x0
  4166aa:	je     4167a8 <strcmp@plt+0x12ff0>
  4166b0:	mov    rax,QWORD PTR [rax+0x28]
  4166b4:	mov    r13,QWORD PTR [rax]
  4166b7:	test   r13,r13
  4166ba:	je     4167a8 <strcmp@plt+0x12ff0>
  4166c0:	mov    rax,QWORD PTR [rsp+0x28]
  4166c5:	mov    QWORD PTR [rsp],rax
  4166c9:	cmp    QWORD PTR [r13+0x8],0x0
  4166ce:	je     41673d <strcmp@plt+0x12f85>
  4166d0:	mov    rax,QWORD PTR [r13+0x28]
  4166d4:	test   rax,rax
  4166d7:	je     41673d <strcmp@plt+0x12f85>
  4166d9:	mov    r12,QWORD PTR [rax]
  4166dc:	mov    rax,QWORD PTR [rsp+0x10]
  4166e1:	mov    rdi,QWORD PTR [rax+0x18]
  4166e5:	mov    rsi,r12
  4166e8:	call   432570 <strcmp@plt+0x2edb8>
  4166ed:	test   rax,rax
  4166f0:	je     4168a0 <strcmp@plt+0x130e8>
  4166f6:	mov    rbx,QWORD PTR [rax]
  4166f9:	mov    rdi,r12
  4166fc:	mov    rsi,rbx
  4166ff:	call   424df0 <strcmp@plt+0x21638>
  416704:	test   eax,eax
  416706:	jne    4167f0 <strcmp@plt+0x13038>
  41670c:	mov    rdi,rbx
  41670f:	call   424890 <strcmp@plt+0x210d8>
  416714:	mov    rdi,r12
  416717:	mov    rbx,rax
  41671a:	call   424890 <strcmp@plt+0x210d8>
  41671f:	lea    rsi,[rip+0x3494a]        # 44b070 <strcmp@plt+0x478b8>
  416726:	mov    rdx,rax
  416729:	mov    rcx,rbx
  41672c:	mov    edi,0x2
  416731:	xor    eax,eax
  416733:	call   4306a0 <strcmp@plt+0x2cee8>
  416738:	mov    BYTE PTR [rsp+0xf],0x1
  41673d:	mov    rax,QWORD PTR [r13+0x10]
  416741:	test   rax,rax
  416744:	je     416780 <strcmp@plt+0x12fc8>
  416746:	mov    rdx,QWORD PTR [r13+0x18]
  41674a:	test   rdx,rdx
  41674d:	je     416890 <strcmp@plt+0x130d8>
  416753:	mov    rcx,QWORD PTR [rsp]
  416757:	mov    r13,rax
  41675a:	cmp    QWORD PTR [r13+0x8],0x0
  41675f:	lea    rax,[rcx+0x8]
  416763:	mov    QWORD PTR [rcx],rdx
  416766:	mov    QWORD PTR [rsp],rax
  41676a:	jne    4166d0 <strcmp@plt+0x12f18>
  416770:	mov    rax,QWORD PTR [r13+0x10]
  416774:	test   rax,rax
  416777:	jne    416746 <strcmp@plt+0x12f8e>
  416779:	nop    DWORD PTR [rax+0x0]
  416780:	mov    r13,QWORD PTR [r13+0x18]
  416784:	test   r13,r13
  416787:	jne    4166c9 <strcmp@plt+0x12f11>
  41678d:	mov    rax,QWORD PTR [rsp]
  416791:	mov    rdx,QWORD PTR [rsp+0x28]
  416796:	cmp    rax,rdx
  416799:	je     4167a8 <strcmp@plt+0x12ff0>
  41679b:	mov    r13,QWORD PTR [rax-0x8]
  41679f:	test   r13,r13
  4167a2:	jne    416a1f <strcmp@plt+0x13267>
  4167a8:	mov    rdx,QWORD PTR [rsp+0x18]
  4167ad:	mov    rax,QWORD PTR [rdx+0x10]
  4167b1:	test   rax,rax
  4167b4:	je     4168c8 <strcmp@plt+0x13110>
  4167ba:	mov    rdx,QWORD PTR [rdx+0x18]
  4167be:	test   rdx,rdx
  4167c1:	je     4169a8 <strcmp@plt+0x131f0>
  4167c7:	mov    rcx,QWORD PTR [rsp+0x20]
  4167cc:	mov    QWORD PTR [rsp+0x18],rax
  4167d1:	lea    rax,[rcx+0x8]
  4167d5:	mov    QWORD PTR [rcx],rdx
  4167d8:	mov    QWORD PTR [rsp+0x20],rax
  4167dd:	jmp    4166a0 <strcmp@plt+0x12ee8>
  4167e2:	mov    QWORD PTR [rsp+0x18],rax
  4167e7:	jmp    416330 <strcmp@plt+0x12b78>
  4167ec:	nop    DWORD PTR [rax+0x0]
  4167f0:	mov    rdi,r12
  4167f3:	call   424a20 <strcmp@plt+0x21268>
  4167f8:	mov    rbx,QWORD PTR [r15+0x8]
  4167fc:	mov    r14d,eax
  4167ff:	cmp    r15,rbx
  416802:	jne    416828 <strcmp@plt+0x13070>
  416804:	jmp    416880 <strcmp@plt+0x130c8>
  416806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416810:	mov    rsi,rbp
  416813:	mov    rdi,r12
  416816:	call   437130 <strcmp@plt+0x33978>
  41681b:	cmp    al,0x1
  41681d:	je     416848 <strcmp@plt+0x13090>
  41681f:	mov    rbx,QWORD PTR [rbx+0x8]
  416823:	cmp    r15,rbx
  416826:	je     416880 <strcmp@plt+0x130c8>
  416828:	mov    rbp,QWORD PTR [rbx+0x10]
  41682c:	mov    rdi,rbp
  41682f:	call   424a20 <strcmp@plt+0x21268>
  416834:	cmp    r14b,al
  416837:	jb     416810 <strcmp@plt+0x13058>
  416839:	mov    rsi,r12
  41683c:	mov    rdi,rbp
  41683f:	call   437130 <strcmp@plt+0x33978>
  416844:	cmp    al,0x1
  416846:	jne    41681f <strcmp@plt+0x13067>
  416848:	mov    rdi,rbp
  41684b:	call   424890 <strcmp@plt+0x210d8>
  416850:	mov    rdi,r12
  416853:	mov    rbx,rax
  416856:	call   424890 <strcmp@plt+0x210d8>
  41685b:	lea    rsi,[rip+0x34856]        # 44b0b8 <strcmp@plt+0x47900>
  416862:	mov    rdx,rax
  416865:	mov    rcx,rbx
  416868:	mov    edi,0x2
  41686d:	xor    eax,eax
  41686f:	call   4306a0 <strcmp@plt+0x2cee8>
  416874:	mov    BYTE PTR [rsp+0xf],0x1
  416879:	jmp    41673d <strcmp@plt+0x12f85>
  41687e:	xchg   ax,ax
  416880:	mov    rsi,r15
  416883:	mov    rdi,r12
  416886:	call   42d540 <strcmp@plt+0x29d88>
  41688b:	jmp    41673d <strcmp@plt+0x12f85>
  416890:	mov    r13,rax
  416893:	jmp    4166c9 <strcmp@plt+0x12f11>
  416898:	nop    DWORD PTR [rax+rax*1+0x0]
  4168a0:	mov    rdi,r12
  4168a3:	call   424890 <strcmp@plt+0x210d8>
  4168a8:	lea    rsi,[rip+0x34779]        # 44b028 <strcmp@plt+0x47870>
  4168af:	mov    rdx,rax
  4168b2:	mov    edi,0x2
  4168b7:	xor    eax,eax
  4168b9:	call   4306a0 <strcmp@plt+0x2cee8>
  4168be:	mov    BYTE PTR [rsp+0xf],0x1
  4168c3:	jmp    41673d <strcmp@plt+0x12f85>
  4168c8:	mov    rax,QWORD PTR [rsp+0x18]
  4168cd:	mov    rax,QWORD PTR [rax+0x18]
  4168d1:	test   rax,rax
  4168d4:	mov    QWORD PTR [rsp+0x18],rax
  4168d9:	jne    4166a0 <strcmp@plt+0x12ee8>
  4168df:	mov    rax,QWORD PTR [rsp+0x20]
  4168e4:	mov    rdx,QWORD PTR [rsp+0x48]
  4168e9:	cmp    rax,rdx
  4168ec:	je     416900 <strcmp@plt+0x13148>
  4168ee:	mov    rax,QWORD PTR [rax-0x8]
  4168f2:	test   rax,rax
  4168f5:	mov    QWORD PTR [rsp+0x18],rax
  4168fa:	jne    416a14 <strcmp@plt+0x1325c>
  416900:	mov    rax,QWORD PTR [rsp+0x38]
  416905:	mov    rax,QWORD PTR [rax+0x8]
  416909:	cmp    QWORD PTR [rsp+0x30],rax
  41690e:	mov    QWORD PTR [rsp+0x38],rax
  416913:	jne    416676 <strcmp@plt+0x12ebe>
  416919:	mov    rdi,QWORD PTR [rsp+0x30]
  41691e:	call   42dac0 <strcmp@plt+0x2a308>
  416923:	mov    rdi,QWORD PTR [rsp+0x40]
  416928:	call   42dac0 <strcmp@plt+0x2a308>
  41692d:	cmp    BYTE PTR [rsp+0xf],0x0
  416932:	jne    416a08 <strcmp@plt+0x13250>
  416938:	mov    rbx,0x468e3c
  41693f:	mov    edx,DWORD PTR [rbx]
  416941:	test   edx,edx
  416943:	jle    416958 <strcmp@plt+0x131a0>
  416945:	lea    rsi,[rip+0x3422c]        # 44ab78 <strcmp@plt+0x473c0>
  41694c:	mov    edi,0x5
  416951:	xor    eax,eax
  416953:	call   4306a0 <strcmp@plt+0x2cee8>
  416958:	mov    r14,QWORD PTR [rsp+0x10]
  41695d:	mov    esi,0x5
  416962:	mov    rdi,r14
  416965:	call   415cc0 <strcmp@plt+0x12508>
  41696a:	mov    esi,0x5
  41696f:	mov    rdi,r14
  416972:	call   415cf0 <strcmp@plt+0x12538>
  416977:	mov    eax,DWORD PTR [rbx]
  416979:	test   eax,eax
  41697b:	jg     4169b2 <strcmp@plt+0x131fa>
  41697d:	mov    rax,QWORD PTR [rsp+0x868]
  416985:	xor    rax,QWORD PTR fs:0x28
  41698e:	jne    416a03 <strcmp@plt+0x1324b>
  416990:	add    rsp,0x878
  416997:	pop    rbx
  416998:	pop    rbp
  416999:	pop    r12
  41699b:	pop    r13
  41699d:	pop    r14
  41699f:	pop    r15
  4169a1:	ret    
  4169a2:	nop    WORD PTR [rax+rax*1+0x0]
  4169a8:	mov    QWORD PTR [rsp+0x18],rax
  4169ad:	jmp    4166a0 <strcmp@plt+0x12ee8>
  4169b2:	mov    rax,QWORD PTR [rsp+0x868]
  4169ba:	xor    rax,QWORD PTR fs:0x28
  4169c3:	jne    416a03 <strcmp@plt+0x1324b>
  4169c5:	add    rsp,0x878
  4169cc:	lea    rsi,[rip+0x34782]        # 44b155 <strcmp@plt+0x4799d>
  4169d3:	mov    edi,0x5
  4169d8:	pop    rbx
  4169d9:	pop    rbp
  4169da:	pop    r12
  4169dc:	pop    r13
  4169de:	pop    r14
  4169e0:	pop    r15
  4169e2:	xor    eax,eax
  4169e4:	jmp    4306a0 <strcmp@plt+0x2cee8>
  4169e9:	lea    rdx,[rip+0x34388]        # 44ad78 <strcmp@plt+0x475c0>
  4169f0:	lea    rsi,[rip+0x34779]        # 44b170 <strcmp@plt+0x479b8>
  4169f7:	lea    rdi,[rip+0x346f1]        # 44b0ef <strcmp@plt+0x47937>
  4169fe:	call   434880 <strcmp@plt+0x310c8>
  416a03:	call   403460 <__stack_chk_fail@plt>
  416a08:	xor    eax,eax
  416a0a:	call   43f160 <strcmp@plt+0x3b9a8>
  416a0f:	jmp    416938 <strcmp@plt+0x13180>
  416a14:	sub    QWORD PTR [rsp+0x20],0x8
  416a1a:	jmp    4166a0 <strcmp@plt+0x12ee8>
  416a1f:	sub    QWORD PTR [rsp],0x8
  416a24:	jmp    4166c9 <strcmp@plt+0x12f11>
  416a29:	sub    QWORD PTR [rsp+0x20],0x8
  416a2f:	jmp    416330 <strcmp@plt+0x12b78>
  416a34:	sub    QWORD PTR [rsp],0x8
  416a39:	jmp    416360 <strcmp@plt+0x12ba8>
  416a3e:	xchg   ax,ax
  416a40:	push   r12
  416a42:	push   rbp
  416a43:	mov    r12d,esi
  416a46:	push   rbx
  416a47:	mov    rbp,rdi
  416a4a:	mov    edi,0x8
  416a4f:	call   434790 <strcmp@plt+0x30fd8>
  416a54:	test   r12d,r12d
  416a57:	mov    rbx,rax
  416a5a:	mov    rdi,rbp
  416a5d:	je     416a90 <strcmp@plt+0x132d8>
  416a5f:	call   4251c0 <strcmp@plt+0x21a08>
  416a64:	mov    edx,0x20
  416a69:	cmp    ax,0x2
  416a6d:	mov    eax,0x80
  416a72:	mov    rsi,rbp
  416a75:	mov    edi,r12d
  416a78:	cmovne edx,eax
  416a7b:	call   429040 <strcmp@plt+0x25888>
  416a80:	mov    QWORD PTR [rbx],rax
  416a83:	mov    rax,rbx
  416a86:	pop    rbx
  416a87:	pop    rbp
  416a88:	pop    r12
  416a8a:	ret    
  416a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  416a90:	call   424b80 <strcmp@plt+0x213c8>
  416a95:	mov    QWORD PTR [rbx],rax
  416a98:	mov    rax,rbx
  416a9b:	pop    rbx
  416a9c:	pop    rbp
  416a9d:	pop    r12
  416a9f:	ret    
  416aa0:	push   r14
  416aa2:	push   r13
  416aa4:	mov    r14,rcx
  416aa7:	push   r12
  416aa9:	push   rbp
  416aaa:	mov    r12d,esi
  416aad:	push   rbx
  416aae:	mov    rbp,rdi
  416ab1:	mov    edi,0x8
  416ab6:	mov    r13d,edx
  416ab9:	call   434790 <strcmp@plt+0x30fd8>
  416abe:	test   r12d,r12d
  416ac1:	mov    rbx,rax
  416ac4:	mov    rdi,rbp
  416ac7:	je     416b28 <strcmp@plt+0x13370>
  416ac9:	call   4251c0 <strcmp@plt+0x21a08>
  416ace:	mov    edx,0x20
  416ad3:	cmp    ax,0x2
  416ad7:	mov    eax,0x80
  416adc:	mov    rsi,rbp
  416adf:	cmovne edx,eax
  416ae2:	mov    edi,r12d
  416ae5:	call   429040 <strcmp@plt+0x25888>
  416aea:	mov    rbp,rax
  416aed:	push   0x0
  416aef:	push   0x0
  416af1:	mov    edx,r13d
  416af4:	mov    r9,r14
  416af7:	mov    rdi,rbp
  416afa:	xor    r8d,r8d
  416afd:	mov    ecx,0x1
  416b02:	mov    esi,0x5a0
  416b07:	call   42bab0 <strcmp@plt+0x282f8>
  416b0c:	mov    rdi,rbp
  416b0f:	mov    QWORD PTR [rbx],rax
  416b12:	call   424750 <strcmp@plt+0x20f98>
  416b17:	pop    rax
  416b18:	mov    rax,rbx
  416b1b:	pop    rdx
  416b1c:	pop    rbx
  416b1d:	pop    rbp
  416b1e:	pop    r12
  416b20:	pop    r13
  416b22:	pop    r14
  416b24:	ret    
  416b25:	nop    DWORD PTR [rax]
  416b28:	call   424b80 <strcmp@plt+0x213c8>
  416b2d:	mov    rbp,rax
  416b30:	jmp    416aed <strcmp@plt+0x13335>
  416b32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416b3c:	nop    DWORD PTR [rax+0x0]
  416b40:	mov    eax,0x1
  416b45:	ret    
  416b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416b50:	mov    eax,0x1
  416b55:	ret    
  416b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416b60:	mov    eax,0x1
  416b65:	ret    
  416b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416b70:	xor    eax,eax
  416b72:	ret    
  416b73:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  416b7e:	xchg   ax,ax
  416b80:	sub    rsp,0x8
  416b84:	mov    edi,0x30
  416b89:	call   434790 <strcmp@plt+0x30fd8>
  416b8e:	add    rsp,0x8
  416b92:	ret    
  416b93:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  416b9e:	xchg   ax,ax
  416ba0:	test   rdi,rdi
  416ba3:	je     416bb0 <strcmp@plt+0x133f8>
  416ba5:	jmp    433330 <strcmp@plt+0x2fb78>
  416baa:	nop    WORD PTR [rax+rax*1+0x0]
  416bb0:	repz ret 
  416bb2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  416bbd:	nop    DWORD PTR [rax]
  416bc0:	push   rbx
  416bc1:	mov    rbx,rdi
  416bc4:	mov    rdi,QWORD PTR [rdi+0x10]
  416bc8:	call   424750 <strcmp@plt+0x20f98>
  416bcd:	mov    rdi,rbx
  416bd0:	pop    rbx
  416bd1:	jmp    4037b0 <free@plt>
  416bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416be0:	push   rbx
  416be1:	mov    rbx,rdi
  416be4:	mov    rdi,QWORD PTR [rdi+0x8]
  416be8:	call   424750 <strcmp@plt+0x20f98>
  416bed:	mov    rdi,QWORD PTR [rbx+0x10]
  416bf1:	call   424750 <strcmp@plt+0x20f98>
  416bf6:	mov    rdi,QWORD PTR [rbx+0x18]
  416bfa:	call   42dac0 <strcmp@plt+0x2a308>
  416bff:	mov    rdi,rbx
  416c02:	pop    rbx
  416c03:	jmp    4037b0 <free@plt>
  416c08:	nop    DWORD PTR [rax+rax*1+0x0]
  416c10:	test   rdi,rdi
  416c13:	je     416c60 <strcmp@plt+0x134a8>
  416c15:	mov    rax,0x474860
  416c1c:	push   rbx
  416c1d:	mov    rbx,rdi
  416c20:	mov    rdx,QWORD PTR [rax]
  416c23:	mov    rax,0x474858
  416c2a:	mov    rsi,QWORD PTR [rax]
  416c2d:	call   43b0b0 <strcmp@plt+0x378f8>
  416c32:	mov    rdi,QWORD PTR [rbx]
  416c35:	call   424750 <strcmp@plt+0x20f98>
  416c3a:	mov    rdi,QWORD PTR [rbx+0x8]
  416c3e:	call   42dac0 <strcmp@plt+0x2a308>
  416c43:	mov    rdi,QWORD PTR [rbx+0x18]
  416c47:	call   433330 <strcmp@plt+0x2fb78>
  416c4c:	mov    rdi,QWORD PTR [rbx+0x28]
  416c50:	call   42dac0 <strcmp@plt+0x2a308>
  416c55:	mov    rdi,rbx
  416c58:	pop    rbx
  416c59:	jmp    4037b0 <free@plt>
  416c5e:	xchg   ax,ax
  416c60:	repz ret 
  416c62:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  416c6d:	nop    DWORD PTR [rax]
  416c70:	push   rbx
  416c71:	mov    rax,0x468720
  416c78:	cmp    QWORD PTR [rdi+0x8],rax
  416c7c:	jne    416cb0 <strcmp@plt+0x134f8>
  416c7e:	mov    rax,0x468e3c
  416c85:	mov    rbx,rdi
  416c88:	mov    eax,DWORD PTR [rax]
  416c8a:	test   eax,eax
  416c8c:	jle    416ca1 <strcmp@plt+0x134e9>
  416c8e:	lea    rsi,[rip+0x34baf]        # 44b844 <strcmp@plt+0x4808c>
  416c95:	mov    edi,0x5
  416c9a:	xor    eax,eax
  416c9c:	call   4306a0 <strcmp@plt+0x2cee8>
  416ca1:	mov    rdi,rbx
  416ca4:	pop    rbx
  416ca5:	jmp    4037b0 <free@plt>
  416caa:	nop    WORD PTR [rax+rax*1+0x0]
  416cb0:	lea    rdx,[rip+0x344d1]        # 44b188 <strcmp@plt+0x479d0>
  416cb7:	lea    rsi,[rip+0x34c22]        # 44b8e0 <strcmp@plt+0x48128>
  416cbe:	lea    rdi,[rip+0x34b65]        # 44b82a <strcmp@plt+0x48072>
  416cc5:	call   434880 <strcmp@plt+0x310c8>
  416cca:	nop    WORD PTR [rax+rax*1+0x0]
  416cd0:	push   rbx
  416cd1:	mov    rax,0x468720
  416cd8:	cmp    QWORD PTR [rdi+0x8],rax
  416cdc:	jne    416d10 <strcmp@plt+0x13558>
  416cde:	mov    rbx,rdi
  416ce1:	mov    rsi,0x416ba0
  416ce8:	mov    rdi,QWORD PTR [rdi+0x18]
  416cec:	call   431200 <strcmp@plt+0x2da48>
  416cf1:	mov    rdi,QWORD PTR [rbx+0x20]
  416cf5:	mov    rsi,0x416c10
  416cfc:	call   431200 <strcmp@plt+0x2da48>
  416d01:	mov    rdi,QWORD PTR [rbx+0x28]
  416d05:	pop    rbx
  416d06:	jmp    416ba0 <strcmp@plt+0x133e8>
  416d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  416d10:	lea    rdx,[rip+0x34471]        # 44b188 <strcmp@plt+0x479d0>
  416d17:	lea    rsi,[rip+0x34bc2]        # 44b8e0 <strcmp@plt+0x48128>
  416d1e:	lea    rdi,[rip+0x34b05]        # 44b82a <strcmp@plt+0x48072>
  416d25:	call   434880 <strcmp@plt+0x310c8>
  416d2a:	nop    WORD PTR [rax+rax*1+0x0]
  416d30:	push   rbx
  416d31:	mov    rax,0x468720
  416d38:	cmp    QWORD PTR [rdi+0x8],rax
  416d3c:	jne    416da0 <strcmp@plt+0x135e8>
  416d3e:	mov    rbx,rdi
  416d41:	xor    eax,eax
  416d43:	call   431690 <strcmp@plt+0x2ded8>
  416d48:	mov    QWORD PTR [rbx+0x18],rax
  416d4c:	xor    eax,eax
  416d4e:	call   431690 <strcmp@plt+0x2ded8>
  416d53:	cmp    QWORD PTR [rbx+0x18],0x0
  416d58:	mov    QWORD PTR [rbx+0x20],rax
  416d5c:	je     416dc0 <strcmp@plt+0x13608>
  416d5e:	test   rax,rax
  416d61:	je     416dc0 <strcmp@plt+0x13608>
  416d63:	mov    rax,0x468e3c
  416d6a:	mov    eax,DWORD PTR [rax]
  416d6c:	test   eax,eax
  416d6e:	jg     416d80 <strcmp@plt+0x135c8>
  416d70:	mov    eax,0x1
  416d75:	pop    rbx
  416d76:	ret    
  416d77:	nop    WORD PTR [rax+rax*1+0x0]
  416d80:	lea    rsi,[rip+0x34429]        # 44b1b0 <strcmp@plt+0x479f8>
  416d87:	xor    eax,eax
  416d89:	mov    edi,0x5
  416d8e:	call   4306a0 <strcmp@plt+0x2cee8>
  416d93:	mov    eax,0x1
  416d98:	jmp    416d75 <strcmp@plt+0x135bd>
  416d9a:	nop    WORD PTR [rax+rax*1+0x0]
  416da0:	lea    rdx,[rip+0x343e1]        # 44b188 <strcmp@plt+0x479d0>
  416da7:	lea    rsi,[rip+0x34b32]        # 44b8e0 <strcmp@plt+0x48128>
  416dae:	lea    rdi,[rip+0x34a75]        # 44b82a <strcmp@plt+0x48072>
  416db5:	call   434880 <strcmp@plt+0x310c8>
  416dba:	nop    WORD PTR [rax+rax*1+0x0]
  416dc0:	xor    eax,eax
  416dc2:	pop    rbx
  416dc3:	ret    
  416dc4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  416dcf:	nop
  416dd0:	push   r15
  416dd2:	push   r14
  416dd4:	push   r13
  416dd6:	push   r12
  416dd8:	mov    r12,rdi
  416ddb:	push   rbp
  416ddc:	push   rbx
  416ddd:	mov    ebp,esi
  416ddf:	lea    rsi,[rip+0x343f2]        # 44b1d8 <strcmp@plt+0x47a20>
  416de6:	mov    edi,ebp
  416de8:	sub    rsp,0x848
  416def:	mov    rax,QWORD PTR fs:0x28
  416df8:	mov    QWORD PTR [rsp+0x838],rax
  416e00:	xor    eax,eax
  416e02:	call   4306a0 <strcmp@plt+0x2cee8>
  416e07:	call   42d4e0 <strcmp@plt+0x29d28>
  416e0c:	mov    rdi,QWORD PTR [r12]
  416e10:	mov    rsi,rax
  416e13:	mov    rbx,rax
  416e16:	mov    QWORD PTR [rsp+0x10],rax
  416e1b:	call   42d540 <strcmp@plt+0x29d88>
  416e20:	mov    rdi,QWORD PTR [r12+0x8]
  416e25:	mov    rsi,rbx
  416e28:	xor    ebx,ebx
  416e2a:	call   42d540 <strcmp@plt+0x29d88>
  416e2f:	mov    r8,QWORD PTR [r12+0x10]
  416e34:	mov    rsi,QWORD PTR [r8]
  416e37:	mov    edx,DWORD PTR [rsi]
  416e39:	test   edx,edx
  416e3b:	jne    416e4a <strcmp@plt+0x13692>
  416e3d:	jmp    416e8a <strcmp@plt+0x136d2>
  416e3f:	nop
  416e40:	mov    rsi,QWORD PTR [r8]
  416e43:	add    ebx,0x1
  416e46:	cmp    ebx,DWORD PTR [rsi]
  416e48:	je     416e8a <strcmp@plt+0x136d2>
  416e4a:	mov    rdi,QWORD PTR [rsi+0x10]
  416e4e:	lea    eax,[rbx+rbx*1]
  416e51:	mov    ecx,ebx
  416e53:	shr    ecx,0x4
  416e56:	and    eax,0x1e
  416e59:	mov    edx,eax
  416e5b:	mov    eax,DWORD PTR [rdi+rcx*4]
  416e5e:	shrx   eax,eax,edx
  416e63:	test   al,0x3
  416e65:	jne    416e40 <strcmp@plt+0x13688>
  416e67:	mov    rdx,QWORD PTR [rsi+0x20]
  416e6b:	mov    eax,ebx
  416e6d:	mov    rsi,QWORD PTR [rsp+0x10]
  416e72:	add    ebx,0x1
  416e75:	mov    rdi,QWORD PTR [rdx+rax*8]
  416e79:	call   42d540 <strcmp@plt+0x29d88>
  416e7e:	mov    r8,QWORD PTR [r12+0x10]
  416e83:	mov    rsi,QWORD PTR [r8]
  416e86:	cmp    ebx,DWORD PTR [rsi]
  416e88:	jne    416e4a <strcmp@plt+0x13692>
  416e8a:	mov    r8,QWORD PTR [r12+0x18]
  416e8f:	xor    ebx,ebx
  416e91:	mov    rsi,QWORD PTR [r8]
  416e94:	mov    eax,DWORD PTR [rsi]
  416e96:	test   eax,eax
  416e98:	jne    416eaa <strcmp@plt+0x136f2>
  416e9a:	jmp    416eea <strcmp@plt+0x13732>
  416e9c:	nop    DWORD PTR [rax+0x0]
  416ea0:	mov    rsi,QWORD PTR [r8]
  416ea3:	add    ebx,0x1
  416ea6:	cmp    ebx,DWORD PTR [rsi]
  416ea8:	je     416eea <strcmp@plt+0x13732>
  416eaa:	mov    rdi,QWORD PTR [rsi+0x10]
  416eae:	lea    eax,[rbx+rbx*1]
  416eb1:	mov    ecx,ebx
  416eb3:	shr    ecx,0x4
  416eb6:	and    eax,0x1e
  416eb9:	mov    edx,eax
  416ebb:	mov    eax,DWORD PTR [rdi+rcx*4]
  416ebe:	shrx   eax,eax,edx
  416ec3:	test   al,0x3
  416ec5:	jne    416ea0 <strcmp@plt+0x136e8>
  416ec7:	mov    rdx,QWORD PTR [rsi+0x20]
  416ecb:	mov    eax,ebx
  416ecd:	mov    rsi,QWORD PTR [rsp+0x10]
  416ed2:	add    ebx,0x1
  416ed5:	mov    rdi,QWORD PTR [rdx+rax*8]
  416ed9:	call   42d540 <strcmp@plt+0x29d88>
  416ede:	mov    r8,QWORD PTR [r12+0x18]
  416ee3:	mov    rsi,QWORD PTR [r8]
  416ee6:	cmp    ebx,DWORD PTR [rsi]
  416ee8:	jne    416eaa <strcmp@plt+0x136f2>
  416eea:	mov    rbx,QWORD PTR [rsp+0x10]
  416eef:	mov    rdi,QWORD PTR [r12+0x20]
  416ef4:	lea    r13,[rsp+0x430]
  416efc:	mov    rsi,rbx
  416eff:	call   42d540 <strcmp@plt+0x29d88>
  416f04:	mov    rdi,QWORD PTR [r12+0x20]
  416f09:	mov    rsi,rbx
  416f0c:	call   42d540 <strcmp@plt+0x29d88>
  416f11:	mov    rcx,QWORD PTR [rbx+0x8]
  416f15:	lea    rax,[rsp+0x20]
  416f1a:	mov    QWORD PTR [rsp+0x18],rax
  416f1f:	cmp    rbx,rcx
  416f22:	mov    QWORD PTR [rsp+0x8],rcx
  416f27:	je     41703b <strcmp@plt+0x13883>
  416f2d:	nop    DWORD PTR [rax]
  416f30:	mov    rax,QWORD PTR [rsp+0x8]
  416f35:	mov    rax,QWORD PTR [rax+0x10]
  416f39:	mov    rbx,QWORD PTR [rax]
  416f3c:	test   rbx,rbx
  416f3f:	je     417022 <strcmp@plt+0x1386a>
  416f45:	mov    r12,QWORD PTR [rsp+0x18]
  416f4a:	nop    WORD PTR [rax+rax*1+0x0]
  416f50:	cmp    QWORD PTR [rbx+0x8],0x0
  416f55:	je     416fcb <strcmp@plt+0x13813>
  416f57:	mov    rax,QWORD PTR [rbx+0x28]
  416f5b:	mov    r14,QWORD PTR [rax]
  416f5e:	test   r14,r14
  416f61:	je     416fcb <strcmp@plt+0x13813>
  416f63:	mov    r15,r13
  416f66:	cmp    QWORD PTR [r14+0x8],0x0
  416f6b:	je     416f7d <strcmp@plt+0x137c5>
  416f6d:	mov    rdi,QWORD PTR [r14+0x28]
  416f71:	test   rdi,rdi
  416f74:	je     416f7d <strcmp@plt+0x137c5>
  416f76:	mov    esi,ebp
  416f78:	call   433410 <strcmp@plt+0x2fc58>
  416f7d:	mov    rdx,QWORD PTR [r14+0x10]
  416f81:	test   rdx,rdx
  416f84:	je     416fb0 <strcmp@plt+0x137f8>
  416f86:	mov    rax,QWORD PTR [r14+0x18]
  416f8a:	test   rax,rax
  416f8d:	je     416ff8 <strcmp@plt+0x13840>
  416f8f:	mov    r14,rdx
  416f92:	mov    QWORD PTR [r15],rax
  416f95:	add    r15,0x8
  416f99:	cmp    QWORD PTR [r14+0x8],0x0
  416f9e:	jne    416f6d <strcmp@plt+0x137b5>
  416fa0:	mov    rdx,QWORD PTR [r14+0x10]
  416fa4:	test   rdx,rdx
  416fa7:	jne    416f86 <strcmp@plt+0x137ce>
  416fa9:	nop    DWORD PTR [rax+0x0]
  416fb0:	mov    r14,QWORD PTR [r14+0x18]
  416fb4:	test   r14,r14
  416fb7:	jne    416f66 <strcmp@plt+0x137ae>
  416fb9:	cmp    r15,r13
  416fbc:	je     416fcb <strcmp@plt+0x13813>
  416fbe:	mov    r14,QWORD PTR [r15-0x8]
  416fc2:	test   r14,r14
  416fc5:	jne    4170ce <strcmp@plt+0x13916>
  416fcb:	mov    rax,QWORD PTR [rbx+0x10]
  416fcf:	test   rax,rax
  416fd2:	je     417000 <strcmp@plt+0x13848>
  416fd4:	mov    rdx,QWORD PTR [rbx+0x18]
  416fd8:	test   rdx,rdx
  416fdb:	je     4170b8 <strcmp@plt+0x13900>
  416fe1:	mov    QWORD PTR [r12],rdx
  416fe5:	mov    rbx,rax
  416fe8:	add    r12,0x8
  416fec:	jmp    416f50 <strcmp@plt+0x13798>
  416ff1:	nop    DWORD PTR [rax+0x0]
  416ff8:	mov    r14,rdx
  416ffb:	jmp    416f66 <strcmp@plt+0x137ae>
  417000:	mov    rbx,QWORD PTR [rbx+0x18]
  417004:	test   rbx,rbx
  417007:	jne    416f50 <strcmp@plt+0x13798>
  41700d:	cmp    r12,QWORD PTR [rsp+0x18]
  417012:	je     417022 <strcmp@plt+0x1386a>
  417014:	mov    rbx,QWORD PTR [r12-0x8]
  417019:	test   rbx,rbx
  41701c:	jne    4170c0 <strcmp@plt+0x13908>
  417022:	mov    rax,QWORD PTR [rsp+0x8]
  417027:	mov    rax,QWORD PTR [rax+0x8]
  41702b:	cmp    QWORD PTR [rsp+0x10],rax
  417030:	mov    QWORD PTR [rsp+0x8],rax
  417035:	jne    416f30 <strcmp@plt+0x13778>
  41703b:	mov    rdi,QWORD PTR [rsp+0x10]
  417040:	call   42dac0 <strcmp@plt+0x2a308>
  417045:	cmp    ebp,0x4
  417048:	jle    41707f <strcmp@plt+0x138c7>
  41704a:	mov    rax,0x468e3c
  417051:	mov    eax,DWORD PTR [rax]
  417053:	add    eax,0x4
  417056:	cmp    ebp,eax
  417058:	jle    41707f <strcmp@plt+0x138c7>
  41705a:	mov    rax,QWORD PTR [rsp+0x838]
  417062:	xor    rax,QWORD PTR fs:0x28
  41706b:	jne    4170c9 <strcmp@plt+0x13911>
  41706d:	add    rsp,0x848
  417074:	pop    rbx
  417075:	pop    rbp
  417076:	pop    r12
  417078:	pop    r13
  41707a:	pop    r14
  41707c:	pop    r15
  41707e:	ret    
  41707f:	mov    rax,QWORD PTR [rsp+0x838]
  417087:	xor    rax,QWORD PTR fs:0x28
  417090:	jne    4170c9 <strcmp@plt+0x13911>
  417092:	add    rsp,0x848
  417099:	mov    edi,ebp
  41709b:	lea    rsi,[rip+0x30b06]        # 447ba8 <strcmp@plt+0x443f0>
  4170a2:	pop    rbx
  4170a3:	pop    rbp
  4170a4:	pop    r12
  4170a6:	pop    r13
  4170a8:	pop    r14
  4170aa:	pop    r15
  4170ac:	xor    eax,eax
  4170ae:	jmp    4306a0 <strcmp@plt+0x2cee8>
  4170b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4170b8:	mov    rbx,rax
  4170bb:	jmp    416f50 <strcmp@plt+0x13798>
  4170c0:	sub    r12,0x8
  4170c4:	jmp    416f50 <strcmp@plt+0x13798>
  4170c9:	call   403460 <__stack_chk_fail@plt>
  4170ce:	sub    r15,0x8
  4170d2:	jmp    416f66 <strcmp@plt+0x137ae>
  4170d7:	nop    WORD PTR [rax+rax*1+0x0]
  4170e0:	test   rsi,rsi
  4170e3:	je     417108 <strcmp@plt+0x13950>
  4170e5:	sub    rsp,0x8
  4170e9:	mov    rdx,rsi
  4170ec:	mov    rdi,QWORD PTR [rdi+0x20]
  4170f0:	mov    rsi,QWORD PTR [rsi]
  4170f3:	call   431a10 <strcmp@plt+0x2e258>
  4170f8:	test   eax,eax
  4170fa:	setne  al
  4170fd:	add    rsp,0x8
  417101:	movzx  eax,al
  417104:	ret    
  417105:	nop    DWORD PTR [rax]
  417108:	xor    eax,eax
  41710a:	ret    
  41710b:	nop    DWORD PTR [rax+rax*1+0x0]
  417110:	mov    QWORD PTR [rdi+0x28],rsi
  417114:	mov    eax,0x1
  417119:	ret    
  41711a:	nop    WORD PTR [rax+rax*1+0x0]
  417120:	cmp    esi,0x4
  417123:	push   r12
  417125:	push   rbp
  417126:	mov    rbp,rdi
  417129:	push   rbx
  41712a:	mov    ebx,esi
  41712c:	jle    417148 <strcmp@plt+0x13990>
  41712e:	mov    r12,0x468e3c
  417135:	mov    eax,DWORD PTR [r12]
  417139:	add    eax,0x4
  41713c:	cmp    esi,eax
  41713e:	jle    417190 <strcmp@plt+0x139d8>
  417140:	pop    rbx
  417141:	pop    rbp
  417142:	pop    r12
  417144:	ret    
  417145:	nop    DWORD PTR [rax]
  417148:	lea    rsi,[rip+0x340c9]        # 44b218 <strcmp@plt+0x47a60>
  41714f:	mov    edi,ebx
  417151:	xor    eax,eax
  417153:	call   4306a0 <strcmp@plt+0x2cee8>
  417158:	lea    rsi,[rip+0x340f9]        # 44b258 <strcmp@plt+0x47aa0>
  41715f:	mov    edi,ebx
  417161:	xor    eax,eax
  417163:	call   4306a0 <strcmp@plt+0x2cee8>
  417168:	mov    rdi,QWORD PTR [rbp+0x28]
  41716c:	mov    esi,ebx
  41716e:	call   433410 <strcmp@plt+0x2fc58>
  417173:	mov    edi,ebx
  417175:	lea    rsi,[rip+0x30a2c]        # 447ba8 <strcmp@plt+0x443f0>
  41717c:	xor    eax,eax
  41717e:	pop    rbx
  41717f:	pop    rbp
  417180:	pop    r12
  417182:	jmp    4306a0 <strcmp@plt+0x2cee8>
  417187:	nop    WORD PTR [rax+rax*1+0x0]
  417190:	lea    rsi,[rip+0x34081]        # 44b218 <strcmp@plt+0x47a60>
  417197:	xor    eax,eax
  417199:	mov    edi,ebx
  41719b:	call   4306a0 <strcmp@plt+0x2cee8>
  4171a0:	mov    eax,DWORD PTR [r12]
  4171a4:	add    eax,0x4
  4171a7:	cmp    ebx,eax
  4171a9:	jg     4171bb <strcmp@plt+0x13a03>
  4171ab:	lea    rsi,[rip+0x340a6]        # 44b258 <strcmp@plt+0x47aa0>
  4171b2:	mov    edi,ebx
  4171b4:	xor    eax,eax
  4171b6:	call   4306a0 <strcmp@plt+0x2cee8>
  4171bb:	mov    rdi,QWORD PTR [rbp+0x28]
  4171bf:	mov    esi,ebx
  4171c1:	call   433410 <strcmp@plt+0x2fc58>
  4171c6:	mov    eax,DWORD PTR [r12]
  4171ca:	add    eax,0x4
  4171cd:	cmp    ebx,eax
  4171cf:	jle    417173 <strcmp@plt+0x139bb>
  4171d1:	pop    rbx
  4171d2:	pop    rbp
  4171d3:	pop    r12
  4171d5:	ret    
  4171d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4171e0:	push   rbp
  4171e1:	push   rbx
  4171e2:	sub    rsp,0x8
  4171e6:	mov    rax,0x468720
  4171ed:	cmp    QWORD PTR [rdi+0x8],rax
  4171f1:	jne    417258 <strcmp@plt+0x13aa0>
  4171f3:	mov    rbp,0x468e3c
  4171fa:	mov    rbx,rdi
  4171fd:	mov    edx,DWORD PTR [rbp+0x0]
  417200:	test   edx,edx
  417202:	jle    417217 <strcmp@plt+0x13a5f>
  417204:	lea    rsi,[rip+0x3396d]        # 44ab78 <strcmp@plt+0x473c0>
  41720b:	mov    edi,0x5
  417210:	xor    eax,eax
  417212:	call   4306a0 <strcmp@plt+0x2cee8>
  417217:	mov    esi,0x5
  41721c:	mov    rdi,rbx
  41721f:	call   417120 <strcmp@plt+0x13968>
  417224:	mov    eax,DWORD PTR [rbp+0x0]
  417227:	test   eax,eax
  417229:	jg     417238 <strcmp@plt+0x13a80>
  41722b:	add    rsp,0x8
  41722f:	pop    rbx
  417230:	pop    rbp
  417231:	ret    
  417232:	nop    WORD PTR [rax+rax*1+0x0]
  417238:	add    rsp,0x8
  41723c:	lea    rsi,[rip+0x3461e]        # 44b861 <strcmp@plt+0x480a9>
  417243:	mov    edi,0x5
  417248:	pop    rbx
  417249:	pop    rbp
  41724a:	xor    eax,eax
  41724c:	jmp    4306a0 <strcmp@plt+0x2cee8>
  417251:	nop    DWORD PTR [rax+0x0]
  417258:	lea    rdx,[rip+0x33f29]        # 44b188 <strcmp@plt+0x479d0>
  41725f:	lea    rsi,[rip+0x3467a]        # 44b8e0 <strcmp@plt+0x48128>
  417266:	lea    rdi,[rip+0x345bd]        # 44b82a <strcmp@plt+0x48072>
  41726d:	call   434880 <strcmp@plt+0x310c8>
  417272:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41727d:	nop    DWORD PTR [rax]
  417280:	cmp    esi,0x4
  417283:	jle    4172a0 <strcmp@plt+0x13ae8>
  417285:	mov    rax,0x468e3c
  41728c:	mov    eax,DWORD PTR [rax]
  41728e:	add    eax,0x4
  417291:	cmp    esi,eax
  417293:	jle    4172a0 <strcmp@plt+0x13ae8>
  417295:	repz ret 
  417297:	nop    WORD PTR [rax+rax*1+0x0]
  4172a0:	jmp    416dd0 <strcmp@plt+0x13618>
  4172a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4172b0:	test   rsi,rsi
  4172b3:	je     417408 <strcmp@plt+0x13c50>
  4172b9:	push   r13
  4172bb:	push   r12
  4172bd:	push   rbp
  4172be:	push   rbx
  4172bf:	mov    rbp,rdi
  4172c2:	mov    rdi,rsi
  4172c5:	mov    rbx,rsi
  4172c8:	sub    rsp,0x8
  4172cc:	call   4333f0 <strcmp@plt+0x2fc38>
  4172d1:	mov    rdi,QWORD PTR [rbp+0x18]
  4172d5:	mov    rdx,rbx
  4172d8:	mov    rsi,rax
  4172db:	call   431a10 <strcmp@plt+0x2e258>
  4172e0:	test   eax,eax
  4172e2:	jne    4172f8 <strcmp@plt+0x13b40>
  4172e4:	add    rsp,0x8
  4172e8:	xor    eax,eax
  4172ea:	pop    rbx
  4172eb:	pop    rbp
  4172ec:	pop    r12
  4172ee:	pop    r13
  4172f0:	ret    
  4172f1:	nop    DWORD PTR [rax+0x0]
  4172f8:	mov    rax,QWORD PTR [rbx+0x8]
  4172fc:	xor    edi,edi
  4172fe:	imul   r12d,DWORD PTR [rax+0x38],0x3c
  417303:	call   43abd0 <strcmp@plt+0x37418>
  417308:	lea    rdx,[rip+0x101]        # 417410 <strcmp@plt+0x13c58>
  41730f:	xor    r9d,r9d
  417312:	xor    r8d,r8d
  417315:	mov    rcx,rbx
  417318:	mov    rdi,rax
  41731b:	mov    rsi,rbp
  41731e:	mov    r13,rax
  417321:	call   43ac00 <strcmp@plt+0x37448>
  417326:	mov    rax,0x474858
  41732d:	mov    rsi,rbx
  417330:	mov    rdx,r13
  417333:	mov    rdi,QWORD PTR [rax]
  417336:	call   43afa0 <strcmp@plt+0x377e8>
  41733b:	mov    esi,r12d
  41733e:	mov    rdi,r13
  417341:	call   43ac60 <strcmp@plt+0x374a8>
  417346:	cmp    r12d,0x3c
  41734a:	mov    rbx,QWORD PTR [rbx+0x8]
  41734e:	mov    rax,0x468e3c
  417355:	jg     4173b0 <strcmp@plt+0x13bf8>
  417357:	mov    eax,DWORD PTR [rax]
  417359:	test   eax,eax
  41735b:	jle    41738d <strcmp@plt+0x13bd5>
  41735d:	movzx  edi,BYTE PTR [rbx+0x3c]
  417361:	call   42cd00 <strcmp@plt+0x29548>
  417366:	mov    rdi,rbx
  417369:	mov    r13,rax
  41736c:	call   424890 <strcmp@plt+0x210d8>
  417371:	lea    rsi,[rip+0x33f70]        # 44b2e8 <strcmp@plt+0x47b30>
  417378:	mov    rdx,rax
  41737b:	mov    r8d,r12d
  41737e:	mov    rcx,r13
  417381:	mov    edi,0x5
  417386:	xor    eax,eax
  417388:	call   4306a0 <strcmp@plt+0x2cee8>
  41738d:	mov    rdi,QWORD PTR [rbp+0x18]
  417391:	mov    esi,0x7
  417396:	call   417280 <strcmp@plt+0x13ac8>
  41739b:	add    rsp,0x8
  41739f:	mov    eax,0x1
  4173a4:	pop    rbx
  4173a5:	pop    rbp
  4173a6:	pop    r12
  4173a8:	pop    r13
  4173aa:	ret    
  4173ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4173b0:	mov    edx,DWORD PTR [rax]
  4173b2:	test   edx,edx
  4173b4:	jle    41738d <strcmp@plt+0x13bd5>
  4173b6:	movzx  edi,BYTE PTR [rbx+0x3c]
  4173ba:	call   42cd00 <strcmp@plt+0x29548>
  4173bf:	mov    rdi,rbx
  4173c2:	mov    r13,rax
  4173c5:	call   424890 <strcmp@plt+0x210d8>
  4173ca:	mov    edx,0x88888889
  4173cf:	mov    rsi,rax
  4173d2:	mov    eax,r12d
  4173d5:	imul   edx
  4173d7:	mov    rcx,r13
  4173da:	mov    edi,0x5
  4173df:	xor    eax,eax
  4173e1:	add    edx,r12d
  4173e4:	sar    r12d,0x1f
  4173e8:	sar    edx,0x5
  4173eb:	mov    r8d,edx
  4173ee:	mov    rdx,rsi
  4173f1:	lea    rsi,[rip+0x33ea8]        # 44b2a0 <strcmp@plt+0x47ae8>
  4173f8:	sub    r8d,r12d
  4173fb:	call   4306a0 <strcmp@plt+0x2cee8>
  417400:	jmp    41738d <strcmp@plt+0x13bd5>
  417402:	nop    WORD PTR [rax+rax*1+0x0]
  417408:	xor    eax,eax
  41740a:	ret    
  41740b:	nop    DWORD PTR [rax+rax*1+0x0]
  417410:	push   r12
  417412:	push   rbp
  417413:	mov    rbp,rdi
  417416:	push   rbx
  417417:	call   43ac30 <strcmp@plt+0x37478>
  41741c:	mov    rdi,rbp
  41741f:	mov    rbx,rax
  417422:	mov    r12,QWORD PTR [rax+0x8]
  417426:	call   43ac20 <strcmp@plt+0x37468>
  41742b:	mov    rbp,rax
  41742e:	mov    rax,0x468e3c
  417435:	mov    eax,DWORD PTR [rax]
  417437:	test   eax,eax
  417439:	jle    417459 <strcmp@plt+0x13ca1>
  41743b:	mov    rdi,r12
  41743e:	call   424890 <strcmp@plt+0x210d8>
  417443:	lea    rsi,[rip+0x33ee6]        # 44b330 <strcmp@plt+0x47b78>
  41744a:	mov    rdx,rax
  41744d:	mov    edi,0x5
  417452:	xor    eax,eax
  417454:	call   4306a0 <strcmp@plt+0x2cee8>
  417459:	mov    rdi,rbx
  41745c:	call   4333f0 <strcmp@plt+0x2fc38>
  417461:	mov    rdi,QWORD PTR [rbp+0x18]
  417465:	mov    rdx,0x433330
  41746c:	mov    rsi,rax
  41746f:	call   432370 <strcmp@plt+0x2ebb8>
  417474:	mov    rdi,QWORD PTR [rbp+0x18]
  417478:	mov    esi,0x7
  41747d:	call   417280 <strcmp@plt+0x13ac8>
  417482:	pop    rbx
  417483:	mov    eax,0x1
  417488:	pop    rbp
  417489:	pop    r12
  41748b:	ret    
  41748c:	nop    DWORD PTR [rax+0x0]
  417490:	test   rsi,rsi
  417493:	je     4174d0 <strcmp@plt+0x13d18>
  417495:	push   rbx
  417496:	mov    rbx,rdi
  417499:	mov    rdi,rsi
  41749c:	call   4333f0 <strcmp@plt+0x2fc38>
  4174a1:	mov    rdi,QWORD PTR [rbx+0x18]
  4174a5:	mov    rsi,rax
  4174a8:	call   432790 <strcmp@plt+0x2efd8>
  4174ad:	mov    rdi,rax
  4174b0:	call   433330 <strcmp@plt+0x2fb78>
  4174b5:	mov    rdi,QWORD PTR [rbx+0x18]
  4174b9:	mov    esi,0x7
  4174be:	call   417280 <strcmp@plt+0x13ac8>
  4174c3:	mov    eax,0x1
  4174c8:	pop    rbx
  4174c9:	ret    
  4174ca:	nop    WORD PTR [rax+rax*1+0x0]
  4174d0:	xor    eax,eax
  4174d2:	ret    
  4174d3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4174de:	xchg   ax,ax
  4174e0:	test   rsi,rsi
  4174e3:	je     4175e8 <strcmp@plt+0x13e30>
  4174e9:	push   r12
  4174eb:	push   rbp
  4174ec:	mov    rbp,rdi
  4174ef:	push   rbx
  4174f0:	mov    rdi,rsi
  4174f3:	mov    rbx,rsi
  4174f6:	call   4333f0 <strcmp@plt+0x2fc38>
  4174fb:	mov    rdi,QWORD PTR [rbp+0x18]
  4174ff:	mov    rsi,rax
  417502:	call   4325a0 <strcmp@plt+0x2ede8>
  417507:	test   rax,rax
  41750a:	mov    r12,rax
  41750d:	je     4175d6 <strcmp@plt+0x13e1e>
  417513:	mov    rsi,QWORD PTR [rax+0x8]
  417517:	mov    rdi,QWORD PTR [rbx+0x8]
  41751b:	call   42b2c0 <strcmp@plt+0x27b08>
  417520:	test   eax,eax
  417522:	mov    rax,0x468e3c
  417529:	jne    4175a0 <strcmp@plt+0x13de8>
  41752b:	cmp    DWORD PTR [rax],0x1
  41752e:	jle    417556 <strcmp@plt+0x13d9e>
  417530:	mov    rdi,rbx
  417533:	call   4333f0 <strcmp@plt+0x2fc38>
  417538:	mov    rdi,rax
  41753b:	call   424890 <strcmp@plt+0x210d8>
  417540:	lea    rsi,[rip+0x33e41]        # 44b388 <strcmp@plt+0x47bd0>
  417547:	mov    rdx,rax
  41754a:	mov    edi,0x6
  41754f:	xor    eax,eax
  417551:	call   4306a0 <strcmp@plt+0x2cee8>
  417556:	mov    rax,0x474858
  41755d:	xor    edx,edx
  41755f:	mov    rsi,r12
  417562:	mov    rdi,QWORD PTR [rax]
  417565:	call   43b140 <strcmp@plt+0x37988>
  41756a:	mov    rbp,rax
  41756d:	mov    rax,QWORD PTR [rbx+0x8]
  417571:	xor    edi,edi
  417573:	mov    esi,DWORD PTR [rax+0x38]
  417576:	mov    eax,DWORD PTR [rbp+0x18]
  417579:	test   eax,eax
  41757b:	je     417585 <strcmp@plt+0x13dcd>
  41757d:	mov    rax,QWORD PTR [rbp+0x8]
  417581:	mov    rdi,QWORD PTR [rax+0x10]
  417585:	call   43ac60 <strcmp@plt+0x374a8>
  41758a:	mov    rdi,rbp
  41758d:	call   42dac0 <strcmp@plt+0x2a308>
  417592:	pop    rbx
  417593:	mov    eax,0x1
  417598:	pop    rbp
  417599:	pop    r12
  41759b:	ret    
  41759c:	nop    DWORD PTR [rax+0x0]
  4175a0:	cmp    DWORD PTR [rax],0x1
  4175a3:	jle    4175cb <strcmp@plt+0x13e13>
  4175a5:	mov    rdi,rbx
  4175a8:	call   4333f0 <strcmp@plt+0x2fc38>
  4175ad:	mov    rdi,rax
  4175b0:	call   424890 <strcmp@plt+0x210d8>
  4175b5:	lea    rsi,[rip+0x33e1c]        # 44b3d8 <strcmp@plt+0x47c20>
  4175bc:	mov    rdx,rax
  4175bf:	mov    edi,0x6
  4175c4:	xor    eax,eax
  4175c6:	call   4306a0 <strcmp@plt+0x2cee8>
  4175cb:	mov    rsi,r12
  4175ce:	mov    rdi,rbp
  4175d1:	call   417490 <strcmp@plt+0x13cd8>
  4175d6:	mov    rsi,rbx
  4175d9:	mov    rdi,rbp
  4175dc:	pop    rbx
  4175dd:	pop    rbp
  4175de:	pop    r12
  4175e0:	jmp    4172b0 <strcmp@plt+0x13af8>
  4175e5:	nop    DWORD PTR [rax]
  4175e8:	xor    eax,eax
  4175ea:	ret    
  4175eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4175f0:	push   rbp
  4175f1:	push   rbx
  4175f2:	mov    rbp,rdi
  4175f5:	mov    edi,0x40
  4175fa:	sub    rsp,0x8
  4175fe:	call   434790 <strcmp@plt+0x30fd8>
  417603:	mov    rdi,rbp
  417606:	mov    rbx,rax
  417609:	call   424b80 <strcmp@plt+0x213c8>
  41760e:	mov    rdi,0x416be0
  417615:	mov    QWORD PTR [rbx],rax
  417618:	call   42d4f0 <strcmp@plt+0x29d38>
  41761d:	mov    DWORD PTR [rbx+0x10],0x0
  417624:	mov    QWORD PTR [rbx+0x8],rax
  417628:	add    rsp,0x8
  41762c:	mov    rax,rbx
  41762f:	pop    rbx
  417630:	pop    rbp
  417631:	ret    
  417632:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41763d:	nop    DWORD PTR [rax]
  417640:	push   rbp
  417641:	push   rbx
  417642:	mov    rbx,rdi
  417645:	mov    rbp,rsi
  417648:	sub    rsp,0x8
  41764c:	mov    rdi,QWORD PTR [rdi+0x28]
  417650:	test   rdi,rdi
  417653:	je     41765a <strcmp@plt+0x13ea2>
  417655:	call   42dac0 <strcmp@plt+0x2a308>
  41765a:	mov    rdi,QWORD PTR [rbp+0x8]
  41765e:	mov    QWORD PTR [rbx+0x20],rbp
  417662:	call   42bcf0 <strcmp@plt+0x28538>
  417667:	mov    QWORD PTR [rbx+0x30],0x0
  41766f:	mov    QWORD PTR [rbx+0x28],rax
  417673:	mov    DWORD PTR [rbx+0x14],0x0
  41767a:	mov    QWORD PTR [rbx+0x18],0x0
  417682:	mov    DWORD PTR [rbx+0x38],0x0
  417689:	add    rsp,0x8
  41768d:	pop    rbx
  41768e:	pop    rbp
  41768f:	ret    
  417690:	push   rbx
  417691:	mov    rbx,rdi
  417694:	call   417640 <strcmp@plt+0x13e88>
  417699:	mov    DWORD PTR [rbx+0x10],0x1
  4176a0:	pop    rbx
  4176a1:	ret    
  4176a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4176ad:	nop    DWORD PTR [rax]
  4176b0:	push   r13
  4176b2:	push   r12
  4176b4:	mov    r12,rsi
  4176b7:	push   rbp
  4176b8:	push   rbx
  4176b9:	sub    rsp,0x8
  4176bd:	mov    rsi,QWORD PTR [rdi+0x8]
  4176c1:	mov    rbx,QWORD PTR [rsi+0x8]
  4176c5:	cmp    rsi,rbx
  4176c8:	je     41771e <strcmp@plt+0x13f66>
  4176ca:	mov    r13,rdi
  4176cd:	jmp    4176dd <strcmp@plt+0x13f25>
  4176cf:	nop
  4176d0:	mov    rbx,QWORD PTR [rbx+0x8]
  4176d4:	mov    rsi,QWORD PTR [r13+0x8]
  4176d8:	cmp    rsi,rbx
  4176db:	je     41771e <strcmp@plt+0x13f66>
  4176dd:	mov    rbp,QWORD PTR [rbx+0x10]
  4176e1:	mov    rsi,QWORD PTR [r12+0x8]
  4176e6:	mov    rdi,QWORD PTR [rbp+0x8]
  4176ea:	call   424df0 <strcmp@plt+0x21638>
  4176ef:	test   eax,eax
  4176f1:	jne    4176d0 <strcmp@plt+0x13f18>
  4176f3:	mov    rsi,QWORD PTR [r12+0x10]
  4176f8:	mov    rdi,QWORD PTR [rbp+0x10]
  4176fc:	call   424df0 <strcmp@plt+0x21638>
  417701:	test   eax,eax
  417703:	jne    4176d0 <strcmp@plt+0x13f18>
  417705:	mov    rsi,QWORD PTR [r13+0x8]
  417709:	mov    rdi,rbx
  41770c:	call   42d950 <strcmp@plt+0x2a198>
  417711:	mov    rbx,QWORD PTR [rbx+0x8]
  417715:	mov    rsi,QWORD PTR [r13+0x8]
  417719:	cmp    rsi,rbx
  41771c:	jne    4176dd <strcmp@plt+0x13f25>
  41771e:	add    rsp,0x8
  417722:	mov    rdi,r12
  417725:	pop    rbx
  417726:	pop    rbp
  417727:	pop    r12
  417729:	pop    r13
  41772b:	jmp    42d540 <strcmp@plt+0x29d88>
  417730:	test   rsi,rsi
  417733:	je     417750 <strcmp@plt+0x13f98>
  417735:	push   rbx
  417736:	mov    rbx,rsi
  417739:	mov    rdi,QWORD PTR [rdi+0x20]
  41773d:	mov    rsi,QWORD PTR [rsi]
  417740:	call   432790 <strcmp@plt+0x2efd8>
  417745:	mov    rdi,rbx
  417748:	pop    rbx
  417749:	jmp    416c10 <strcmp@plt+0x13458>
  41774e:	xchg   ax,ax
  417750:	repz ret 
  417752:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41775d:	nop    DWORD PTR [rax]
  417760:	push   r13
  417762:	push   r12
  417764:	mov    r13,rdi
  417767:	push   rbp
  417768:	push   rbx
  417769:	mov    r12,rsi
  41776c:	mov    rbp,rdx
  41776f:	mov    edi,0x18
  417774:	sub    rsp,0x8
  417778:	call   4347a0 <strcmp@plt+0x30fe8>
  41777d:	mov    rdi,rbp
  417780:	mov    rbx,rax
  417783:	mov    QWORD PTR [rax],r13
  417786:	mov    QWORD PTR [rax+0x8],r12
  41778a:	call   424b80 <strcmp@plt+0x213c8>
  41778f:	mov    QWORD PTR [rbx+0x10],rax
  417793:	add    rsp,0x8
  417797:	mov    rax,rbx
  41779a:	pop    rbx
  41779b:	pop    rbp
  41779c:	pop    r12
  41779e:	pop    r13
  4177a0:	ret    
  4177a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4177ac:	nop    DWORD PTR [rax+0x0]
  4177b0:	push   r15
  4177b2:	push   r14
  4177b4:	push   r13
  4177b6:	push   r12
  4177b8:	push   rbp
  4177b9:	push   rbx
  4177ba:	sub    rsp,0x68
  4177be:	mov    rax,QWORD PTR fs:0x28
  4177c7:	mov    QWORD PTR [rsp+0x58],rax
  4177cc:	xor    eax,eax
  4177ce:	mov    rax,QWORD PTR [rsi+0x8]
  4177d2:	mov    QWORD PTR [rsp+0x8],rdx
  4177d7:	mov    rbx,QWORD PTR [rax+0x8]
  4177db:	cmp    rax,rbx
  4177de:	je     417878 <strcmp@plt+0x140c0>
  4177e4:	mov    r15,rdi
  4177e7:	mov    r13,rsi
  4177ea:	lea    r12,[rsp+0x10]
  4177ef:	jmp    417841 <strcmp@plt+0x14089>
  4177f1:	nop    DWORD PTR [rax+0x0]
  4177f8:	mov    rax,QWORD PTR [rax+0x8]
  4177fc:	mov    rdi,QWORD PTR [rax+0x10]
  417800:	call   425050 <strcmp@plt+0x21898>
  417805:	xor    ecx,ecx
  417807:	mov    r8,rax
  41780a:	mov    edx,0x10f6
  41780f:	mov    esi,0x10f6
  417814:	mov    rdi,r12
  417817:	call   438840 <strcmp@plt+0x35088>
  41781c:	mov    rdx,r12
  41781f:	mov    rsi,rbp
  417822:	mov    rdi,r15
  417825:	call   4083b0 <strcmp@plt+0x4bf8>
  41782a:	test   rbp,rbp
  41782d:	je     417837 <strcmp@plt+0x1407f>
  41782f:	mov    rdi,rbp
  417832:	call   4300b0 <strcmp@plt+0x2c8f8>
  417837:	mov    rbx,QWORD PTR [rbx+0x8]
  41783b:	cmp    QWORD PTR [r13+0x8],rbx
  41783f:	je     417878 <strcmp@plt+0x140c0>
  417841:	mov    r14,QWORD PTR [rbx+0x10]
  417845:	mov    rdi,QWORD PTR [rsp+0x8]
  41784a:	xor    edx,edx
  41784c:	xor    ecx,ecx
  41784e:	mov    esi,0xf
  417853:	mov    r8,QWORD PTR [r14]
  417856:	call   423990 <strcmp@plt+0x201d8>
  41785b:	mov    rbp,rax
  41785e:	mov    rax,QWORD PTR [r14+0x18]
  417862:	mov    edx,DWORD PTR [rax+0x18]
  417865:	test   edx,edx
  417867:	jne    4177f8 <strcmp@plt+0x14040>
  417869:	mov    rax,QWORD PTR ds:0x10
  417871:	ud2    
  417873:	nop    DWORD PTR [rax+rax*1+0x0]
  417878:	mov    rax,QWORD PTR [rsp+0x58]
  41787d:	xor    rax,QWORD PTR fs:0x28
  417886:	jne    417897 <strcmp@plt+0x140df>
  417888:	add    rsp,0x68
  41788c:	pop    rbx
  41788d:	pop    rbp
  41788e:	pop    r12
  417890:	pop    r13
  417892:	pop    r14
  417894:	pop    r15
  417896:	ret    
  417897:	call   403460 <__stack_chk_fail@plt>
  41789c:	nop    DWORD PTR [rax+0x0]
  4178a0:	push   r15
  4178a2:	push   r14
  4178a4:	push   r13
  4178a6:	push   r12
  4178a8:	push   rbp
  4178a9:	push   rbx
  4178aa:	mov    rbx,rdi
  4178ad:	sub    rsp,0x68
  4178b1:	mov    rax,QWORD PTR fs:0x28
  4178ba:	mov    QWORD PTR [rsp+0x58],rax
  4178bf:	xor    eax,eax
  4178c1:	call   43ac30 <strcmp@plt+0x37478>
  4178c6:	mov    rdi,rbx
  4178c9:	mov    rbp,rax
  4178cc:	call   43ac50 <strcmp@plt+0x37498>
  4178d1:	mov    r15,QWORD PTR [rbp+0x0]
  4178d5:	mov    r13,rax
  4178d8:	mov    rax,QWORD PTR [r15+0x8]
  4178dc:	mov    r8d,DWORD PTR [rax+0x18]
  4178e0:	test   r8d,r8d
  4178e3:	je     417990 <strcmp@plt+0x141d8>
  4178e9:	mov    rax,QWORD PTR [rax]
  4178ec:	mov    r12,QWORD PTR [rbp+0x8]
  4178f0:	mov    rdx,QWORD PTR [r15+0x28]
  4178f4:	mov    r14,QWORD PTR [rax+0x10]
  4178f8:	mov    rax,QWORD PTR [r15+0x30]
  4178fc:	test   rax,rax
  4178ff:	je     417b90 <strcmp@plt+0x143d8>
  417905:	mov    esi,DWORD PTR [rdx+0x18]
  417908:	test   esi,esi
  41790a:	jne    4179a0 <strcmp@plt+0x141e8>
  417910:	mov    rax,QWORD PTR [rax+0x8]
  417914:	mov    QWORD PTR [r15+0x30],rax
  417918:	mov    eax,DWORD PTR [r15+0x38]
  41791c:	cmp    eax,0x2
  41791f:	jle    417a20 <strcmp@plt+0x14268>
  417925:	cmp    DWORD PTR [r15+0x10],0x1
  41792a:	je     417bd8 <strcmp@plt+0x14420>
  417930:	mov    rax,0x468e3c
  417937:	mov    edx,DWORD PTR [rax]
  417939:	test   edx,edx
  41793b:	jg     417a00 <strcmp@plt+0x14248>
  417941:	mov    rsi,QWORD PTR [r12+0x28]
  417946:	mov    rdi,r15
  417949:	call   417690 <strcmp@plt+0x13ed8>
  41794e:	mov    rax,0x474860
  417955:	mov    rsi,r13
  417958:	mov    rdi,QWORD PTR [rax]
  41795b:	call   4352c0 <strcmp@plt+0x31b08>
  417960:	mov    rdi,rbx
  417963:	call   4178a0 <strcmp@plt+0x140e8>
  417968:	mov    rcx,QWORD PTR [rsp+0x58]
  41796d:	xor    rcx,QWORD PTR fs:0x28
  417976:	mov    eax,0x1
  41797b:	jne    417c18 <strcmp@plt+0x14460>
  417981:	add    rsp,0x68
  417985:	pop    rbx
  417986:	pop    rbp
  417987:	pop    r12
  417989:	pop    r13
  41798b:	pop    r14
  41798d:	pop    r15
  41798f:	ret    
  417990:	mov    rax,QWORD PTR ds:0x10
  417998:	ud2    
  41799a:	nop    WORD PTR [rax+rax*1+0x0]
  4179a0:	cmp    rax,QWORD PTR [rdx]
  4179a3:	jne    417910 <strcmp@plt+0x14158>
  4179a9:	mov    ecx,DWORD PTR [r15+0x14]
  4179ad:	test   ecx,ecx
  4179af:	je     417c00 <strcmp@plt+0x14448>
  4179b5:	mov    rdi,QWORD PTR [r15+0x18]
  4179b9:	test   rdi,rdi
  4179bc:	je     417ba8 <strcmp@plt+0x143f0>
  4179c2:	mov    rax,QWORD PTR [rdi+0x8]
  4179c6:	mov    DWORD PTR [rax+0x38],0x1
  4179cd:	call   433640 <strcmp@plt+0x2fe88>
  4179d2:	mov    rdi,r12
  4179d5:	mov    rsi,rax
  4179d8:	call   4174e0 <strcmp@plt+0x13d28>
  4179dd:	mov    rdi,QWORD PTR [r15+0x18]
  4179e1:	call   4333f0 <strcmp@plt+0x2fc38>
  4179e6:	mov    rsi,r15
  4179e9:	mov    rdx,rax
  4179ec:	mov    rdi,r12
  4179ef:	call   4177b0 <strcmp@plt+0x13ff8>
  4179f4:	jmp    417be6 <strcmp@plt+0x1442e>
  4179f9:	nop    DWORD PTR [rax+0x0]
  417a00:	lea    rsi,[rip+0x33a79]        # 44b480 <strcmp@plt+0x47cc8>
  417a07:	mov    edi,0x5
  417a0c:	xor    eax,eax
  417a0e:	call   4306a0 <strcmp@plt+0x2cee8>
  417a13:	jmp    417941 <strcmp@plt+0x14189>
  417a18:	nop    DWORD PTR [rax+rax*1+0x0]
  417a20:	mov    rsi,QWORD PTR [r14+0x18]
  417a24:	mov    rdi,QWORD PTR [r14+0x8]
  417a28:	mov    rdx,QWORD PTR [r15]
  417a2b:	call   423920 <strcmp@plt+0x20168>
  417a30:	mov    rbp,rax
  417a33:	movzx  eax,WORD PTR [rax+0x24]
  417a37:	cmp    ax,0xffff
  417a3b:	je     417b50 <strcmp@plt+0x14398>
  417a41:	add    rax,QWORD PTR [rbp+0x30]
  417a45:	mov    QWORD PTR [rsp+0x8],rax
  417a4a:	xor    eax,eax
  417a4c:	call   435450 <strcmp@plt+0x31c98>
  417a51:	mov    rdx,QWORD PTR [rsp+0x8]
  417a56:	mov    rcx,QWORD PTR [r14+0x10]
  417a5a:	mov    rdi,QWORD PTR [r15]
  417a5d:	mov    QWORD PTR [rsp],rax
  417a61:	mov    QWORD PTR [rdx+0x4],rax
  417a65:	mov    QWORD PTR [rsp+0x8],rcx
  417a6a:	call   425110 <strcmp@plt+0x21958>
  417a6f:	mov    rdi,rax
  417a72:	call   424b80 <strcmp@plt+0x213c8>
  417a77:	mov    esi,0x1
  417a7c:	mov    rdi,rax
  417a7f:	mov    r14,rax
  417a82:	call   424910 <strcmp@plt+0x21158>
  417a87:	mov    rcx,QWORD PTR [rsp+0x8]
  417a8c:	mov    r8,r14
  417a8f:	mov    edx,0x10f6
  417a94:	mov    esi,0x10f6
  417a99:	mov    rdi,rbp
  417a9c:	call   423bc0 <strcmp@plt+0x20408>
  417aa1:	movzx  eax,WORD PTR [rbp+0x1e]
  417aa5:	cmp    ax,0xffff
  417aa9:	je     417b38 <strcmp@plt+0x14380>
  417aaf:	mov    rdx,QWORD PTR [rbp+0x30]
  417ab3:	or     BYTE PTR [rdx+rax*1],0x4
  417ab7:	mov    rax,QWORD PTR [r15+0x30]
  417abb:	mov    rdi,QWORD PTR [rax+0x10]
  417abf:	call   425050 <strcmp@plt+0x21898>
  417ac4:	lea    rdi,[rsp+0x10]
  417ac9:	xor    ecx,ecx
  417acb:	mov    r8,rax
  417ace:	mov    edx,0x10f6
  417ad3:	mov    esi,0x10f6
  417ad8:	mov    r15,rdi
  417adb:	call   438840 <strcmp@plt+0x35088>
  417ae0:	mov    rax,0x468e3c
  417ae7:	mov    eax,DWORD PTR [rax]
  417ae9:	test   eax,eax
  417aeb:	jg     417b68 <strcmp@plt+0x143b0>
  417aed:	mov    rdx,r15
  417af0:	mov    rsi,rbp
  417af3:	mov    rdi,r12
  417af6:	call   4083b0 <strcmp@plt+0x4bf8>
  417afb:	mov    rdi,r14
  417afe:	call   424750 <strcmp@plt+0x20f98>
  417b03:	mov    rax,0x474860
  417b0a:	mov    rsi,QWORD PTR [rsp]
  417b0e:	mov    rdx,r13
  417b11:	mov    rdi,QWORD PTR [rax]
  417b14:	call   434960 <strcmp@plt+0x311a8>
  417b19:	mov    rdi,rbx
  417b1c:	mov    esi,0x2
  417b21:	call   43ac60 <strcmp@plt+0x374a8>
  417b26:	mov    rdi,rbp
  417b29:	call   4300b0 <strcmp@plt+0x2c8f8>
  417b2e:	jmp    417968 <strcmp@plt+0x141b0>
  417b33:	nop    DWORD PTR [rax+rax*1+0x0]
  417b38:	movzx  eax,WORD PTR ds:0x0
  417b40:	and    eax,0xfffffffb
  417b43:	mov    WORD PTR ds:0x0,ax
  417b4b:	ud2    
  417b4d:	nop    DWORD PTR [rax]
  417b50:	xor    eax,eax
  417b52:	call   435450 <strcmp@plt+0x31c98>
  417b57:	mov    QWORD PTR ds:0x4,0x0
  417b63:	ud2    
  417b65:	nop    DWORD PTR [rax]
  417b68:	mov    rdi,rbp
  417b6b:	call   423a90 <strcmp@plt+0x202d8>
  417b70:	lea    rsi,[rip+0x33d08]        # 44b87f <strcmp@plt+0x480c7>
  417b77:	mov    rdx,rax
  417b7a:	mov    edi,0x5
  417b7f:	xor    eax,eax
  417b81:	call   4306a0 <strcmp@plt+0x2cee8>
  417b86:	jmp    417aed <strcmp@plt+0x14335>
  417b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  417b90:	mov    edi,DWORD PTR [rdx+0x18]
  417b93:	test   edi,edi
  417b95:	je     417914 <strcmp@plt+0x1415c>
  417b9b:	mov    rax,QWORD PTR [rdx+0x8]
  417b9f:	jmp    417914 <strcmp@plt+0x1415c>
  417ba4:	nop    DWORD PTR [rax+0x0]
  417ba8:	mov    rax,0x468e3c
  417baf:	cmp    DWORD PTR [rax],0x2
  417bb2:	jle    417bd8 <strcmp@plt+0x14420>
  417bb4:	mov    rdi,QWORD PTR [r15]
  417bb7:	call   424890 <strcmp@plt+0x210d8>
  417bbc:	lea    rsi,[rip+0x3388d]        # 44b450 <strcmp@plt+0x47c98>
  417bc3:	mov    rdx,rax
  417bc6:	mov    edi,0x7
  417bcb:	xor    eax,eax
  417bcd:	call   4306a0 <strcmp@plt+0x2cee8>
  417bd2:	nop    WORD PTR [rax+rax*1+0x0]
  417bd8:	mov    rdx,QWORD PTR [r15]
  417bdb:	mov    rsi,r15
  417bde:	mov    rdi,r12
  417be1:	call   4177b0 <strcmp@plt+0x13ff8>
  417be6:	mov    rsi,r15
  417be9:	mov    rdi,r12
  417bec:	call   417730 <strcmp@plt+0x13f78>
  417bf1:	jmp    417968 <strcmp@plt+0x141b0>
  417bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417c00:	mov    eax,DWORD PTR [r15+0x38]
  417c04:	mov    rdx,QWORD PTR [rdx+0x8]
  417c08:	add    eax,0x1
  417c0b:	mov    QWORD PTR [r15+0x30],rdx
  417c0f:	mov    DWORD PTR [r15+0x38],eax
  417c13:	jmp    41791c <strcmp@plt+0x14164>
  417c18:	call   403460 <__stack_chk_fail@plt>
  417c1d:	nop    DWORD PTR [rax]
  417c20:	mov    edi,0x20
  417c25:	jmp    434790 <strcmp@plt+0x30fd8>
  417c2a:	nop    WORD PTR [rax+rax*1+0x0]
  417c30:	push   r15
  417c32:	push   r14
  417c34:	push   r13
  417c36:	push   r12
  417c38:	push   rbp
  417c39:	push   rbx
  417c3a:	sub    rsp,0x158
  417c41:	mov    rax,QWORD PTR fs:0x28
  417c4a:	mov    QWORD PTR [rsp+0x148],rax
  417c52:	xor    eax,eax
  417c54:	mov    rax,0x468720
  417c5b:	cmp    QWORD PTR [rdi+0x8],rax
  417c5f:	jne    418060 <strcmp@plt+0x148a8>
  417c65:	mov    r15,rdi
  417c68:	mov    rdi,rsi
  417c6b:	mov    rbp,rsi
  417c6e:	mov    rbx,rdx
  417c71:	call   422770 <strcmp@plt+0x1efb8>
  417c76:	cmp    eax,0x8
  417c79:	mov    r13d,eax
  417c7c:	mov    QWORD PTR [rsp+0x8],0x0
  417c85:	je     418018 <strcmp@plt+0x14860>
  417c8b:	cmp    r13d,0x7
  417c8f:	ja     417f00 <strcmp@plt+0x14748>
  417c95:	lea    rcx,[rip+0x33bf4]        # 44b890 <strcmp@plt+0x480d8>
  417c9c:	mov    edx,r13d
  417c9f:	movsxd rax,DWORD PTR [rcx+rdx*4]
  417ca3:	add    rax,rcx
  417ca6:	jmp    rax
  417ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  417cb0:	mov    rax,QWORD PTR [rbp+0x0]
  417cb4:	mov    QWORD PTR [rsp+0x60],rax
  417cb9:	mov    rax,QWORD PTR [rbp+0x8]
  417cbd:	mov    QWORD PTR [rsp+0x68],rax
  417cc2:	mov    rax,QWORD PTR [rbp+0x10]
  417cc6:	mov    QWORD PTR [rsp+0x70],rax
  417ccb:	mov    rax,QWORD PTR [rbp+0x18]
  417ccf:	mov    QWORD PTR [rsp+0x78],rax
  417cd4:	mov    rax,QWORD PTR [rbp+0x20]
  417cd8:	mov    QWORD PTR [rsp+0x80],rax
  417ce0:	mov    rax,QWORD PTR [rbp+0x28]
  417ce4:	mov    QWORD PTR [rsp+0x88],rax
  417cec:	mov    rax,QWORD PTR [rbp+0x30]
  417cf0:	mov    QWORD PTR [rsp+0x90],rax
  417cf8:	mov    rax,QWORD PTR [rbp+0x38]
  417cfc:	lea    rbp,[rsp+0x60]
  417d01:	mov    rdi,rbp
  417d04:	mov    QWORD PTR [rsp+0x98],rax
  417d0c:	call   423110 <strcmp@plt+0x1f958>
  417d11:	mov    rsi,QWORD PTR [rax+0x4]
  417d15:	mov    r14,rax
  417d18:	mov    rax,0x474860
  417d1f:	mov    rdi,QWORD PTR [rax]
  417d22:	call   435210 <strcmp@plt+0x31a58>
  417d27:	test   rax,rax
  417d2a:	mov    r12,rax
  417d2d:	je     418130 <strcmp@plt+0x14978>
  417d33:	cmp    BYTE PTR [r14+0x3],0x1
  417d38:	jbe    417d4d <strcmp@plt+0x14595>
  417d3a:	lea    rsi,[rip+0x33767]        # 44b4a8 <strcmp@plt+0x47cf0>
  417d41:	mov    edi,0x4
  417d46:	xor    eax,eax
  417d48:	call   4306a0 <strcmp@plt+0x2cee8>
  417d4d:	xor    eax,eax
  417d4f:	call   42b180 <strcmp@plt+0x279c8>
  417d54:	mov    rdi,rbp
  417d57:	mov    rsi,rax
  417d5a:	mov    QWORD PTR [rsp+0x28],rax
  417d5f:	call   422f70 <strcmp@plt+0x1f7b8>
  417d64:	cmp    eax,0x1
  417d67:	mov    DWORD PTR [rsp+0x40],eax
  417d6b:	jne    418998 <strcmp@plt+0x151e0>
  417d71:	mov    rdi,r12
  417d74:	call   435480 <strcmp@plt+0x31cc8>
  417d79:	mov    rdi,rax
  417d7c:	mov    r13,rax
  417d7f:	call   43ac30 <strcmp@plt+0x37478>
  417d84:	mov    rbp,QWORD PTR [rax]
  417d87:	mov    rdi,QWORD PTR [rbp+0x20]
  417d8b:	cmp    rdi,QWORD PTR [r15+0x28]
  417d8f:	je     4184c0 <strcmp@plt+0x14d08>
  417d95:	call   4333f0 <strcmp@plt+0x2fc38>
  417d9a:	mov    rsi,QWORD PTR [rsp+0x28]
  417d9f:	mov    rdi,rax
  417da2:	call   437130 <strcmp@plt+0x33978>
  417da7:	test   eax,eax
  417da9:	je     4189f8 <strcmp@plt+0x15240>
  417daf:	mov    rax,QWORD PTR [rsp+0x28]
  417db4:	cmp    BYTE PTR [rax+0x3c],0x5
  417db8:	ja     4184df <strcmp@plt+0x14d27>
  417dbe:	movzx  eax,BYTE PTR [rax+0x3c]
  417dc2:	lea    rdx,[rip+0x33ae7]        # 44b8b0 <strcmp@plt+0x480f8>
  417dc9:	movsxd rax,DWORD PTR [rdx+rax*4]
  417dcd:	add    rax,rdx
  417dd0:	jmp    rax
  417dd2:	nop    WORD PTR [rax+rax*1+0x0]
  417dd8:	mov    rbx,0x468e3c
  417ddf:	mov    eax,DWORD PTR [rbx]
  417de1:	cmp    eax,0x2
  417de4:	jg     417ff8 <strcmp@plt+0x14840>
  417dea:	nop    WORD PTR [rax+rax*1+0x0]
  417df0:	test   eax,eax
  417df2:	jle    417e07 <strcmp@plt+0x1464f>
  417df4:	lea    rsi,[rip+0x339bd]        # 44b7b8 <strcmp@plt+0x48000>
  417dfb:	mov    edi,0x5
  417e00:	xor    eax,eax
  417e02:	call   4306a0 <strcmp@plt+0x2cee8>
  417e07:	mov    DWORD PTR [rsp+0x40],0x0
  417e0f:	mov    rbx,QWORD PTR [rsp+0x148]
  417e17:	xor    rbx,QWORD PTR fs:0x28
  417e20:	mov    eax,DWORD PTR [rsp+0x40]
  417e24:	jne    418aae <strcmp@plt+0x152f6>
  417e2a:	add    rsp,0x158
  417e31:	pop    rbx
  417e32:	pop    rbp
  417e33:	pop    r12
  417e35:	pop    r13
  417e37:	pop    r14
  417e39:	pop    r15
  417e3b:	ret    
  417e3c:	nop    DWORD PTR [rax+0x0]
  417e40:	mov    rax,QWORD PTR [rbp+0x0]
  417e44:	mov    QWORD PTR [rsp+0x60],rax
  417e49:	mov    rax,QWORD PTR [rbp+0x8]
  417e4d:	mov    QWORD PTR [rsp+0x68],rax
  417e52:	mov    rax,QWORD PTR [rbp+0x10]
  417e56:	mov    QWORD PTR [rsp+0x70],rax
  417e5b:	mov    rax,QWORD PTR [rbp+0x18]
  417e5f:	mov    QWORD PTR [rsp+0x78],rax
  417e64:	mov    rax,QWORD PTR [rbp+0x20]
  417e68:	mov    QWORD PTR [rsp+0x80],rax
  417e70:	mov    rax,QWORD PTR [rbp+0x28]
  417e74:	mov    QWORD PTR [rsp+0x88],rax
  417e7c:	mov    rax,QWORD PTR [rbp+0x30]
  417e80:	mov    QWORD PTR [rsp+0x90],rax
  417e88:	mov    rax,QWORD PTR [rbp+0x38]
  417e8c:	mov    QWORD PTR [rsp+0x98],rax
  417e94:	xor    eax,eax
  417e96:	call   424740 <strcmp@plt+0x20f88>
  417e9b:	mov    r14,rax
  417e9e:	mov    rax,0x468e3c
  417ea5:	mov    r8d,DWORD PTR [rax]
  417ea8:	mov    QWORD PTR [rsp+0x10],rax
  417ead:	test   r8d,r8d
  417eb0:	jg     417fa0 <strcmp@plt+0x147e8>
  417eb6:	lea    rbp,[rsp+0x60]
  417ebb:	mov    rdi,rbp
  417ebe:	call   423110 <strcmp@plt+0x1f958>
  417ec3:	mov    rsi,r14
  417ec6:	mov    rdi,rbp
  417ec9:	mov    r13,rax
  417ecc:	call   4229d0 <strcmp@plt+0x1f218>
  417ed1:	cmp    eax,0x1
  417ed4:	mov    DWORD PTR [rsp+0x40],eax
  417ed8:	je     417f30 <strcmp@plt+0x14778>
  417eda:	xor    edi,edi
  417edc:	xor    ebx,ebx
  417ede:	call   42dac0 <strcmp@plt+0x2a308>
  417ee3:	mov    rdi,rbx
  417ee6:	call   424750 <strcmp@plt+0x20f98>
  417eeb:	mov    rdi,r14
  417eee:	call   424750 <strcmp@plt+0x20f98>
  417ef3:	mov    rax,QWORD PTR [rsp+0x10]
  417ef8:	mov    eax,DWORD PTR [rax]
  417efa:	jmp    417df0 <strcmp@plt+0x14638>
  417eff:	nop
  417f00:	mov    rbx,0x468e3c
  417f07:	mov    eax,DWORD PTR [rbx]
  417f09:	cmp    eax,0x2
  417f0c:	jle    417df0 <strcmp@plt+0x14638>
  417f12:	lea    rsi,[rip+0x33857]        # 44b770 <strcmp@plt+0x47fb8>
  417f19:	xor    eax,eax
  417f1b:	mov    edx,r13d
  417f1e:	mov    edi,0x7
  417f23:	call   4306a0 <strcmp@plt+0x2cee8>
  417f28:	mov    eax,DWORD PTR [rbx]
  417f2a:	jmp    417df0 <strcmp@plt+0x14638>
  417f2f:	nop
  417f30:	mov    rax,QWORD PTR [rsp+0x10]
  417f35:	mov    edi,DWORD PTR [rax]
  417f37:	test   edi,edi
  417f39:	jle    417f59 <strcmp@plt+0x147a1>
  417f3b:	mov    rdi,r14
  417f3e:	call   424890 <strcmp@plt+0x210d8>
  417f43:	lea    rsi,[rip+0x331df]        # 44b129 <strcmp@plt+0x47971>
  417f4a:	mov    rdx,rax
  417f4d:	mov    edi,0x5
  417f52:	xor    eax,eax
  417f54:	call   4306a0 <strcmp@plt+0x2cee8>
  417f59:	movzx  eax,BYTE PTR [r13+0x0]
  417f5e:	test   al,0x2
  417f60:	jne    418110 <strcmp@plt+0x14958>
  417f66:	test   al,0x1
  417f68:	je     41854b <strcmp@plt+0x14d93>
  417f6e:	mov    rax,QWORD PTR [rsp+0x10]
  417f73:	mov    eax,DWORD PTR [rax]
  417f75:	cmp    eax,0x1
  417f78:	jle    417df0 <strcmp@plt+0x14638>
  417f7e:	lea    rsi,[rip+0x32cbb]        # 44ac40 <strcmp@plt+0x47488>
  417f85:	xor    eax,eax
  417f87:	mov    edi,0x6
  417f8c:	call   4306a0 <strcmp@plt+0x2cee8>
  417f91:	mov    rax,QWORD PTR [rsp+0x10]
  417f96:	mov    eax,DWORD PTR [rax]
  417f98:	jmp    417df0 <strcmp@plt+0x14638>
  417f9d:	nop    DWORD PTR [rax]
  417fa0:	mov    rbp,QWORD PTR [rsp+0x8]
  417fa5:	lea    rdi,[rbp+0x20]
  417fa9:	call   424890 <strcmp@plt+0x210d8>
  417fae:	mov    rdi,rbp
  417fb1:	mov    r12,rax
  417fb4:	call   424890 <strcmp@plt+0x210d8>
  417fb9:	lea    rdi,[rbx+0x20]
  417fbd:	mov    r13,rax
  417fc0:	call   424890 <strcmp@plt+0x210d8>
  417fc5:	mov    rdi,rbx
  417fc8:	mov    rbp,rax
  417fcb:	call   424890 <strcmp@plt+0x210d8>
  417fd0:	lea    rsi,[rip+0x335b9]        # 44b590 <strcmp@plt+0x47dd8>
  417fd7:	mov    rdx,rax
  417fda:	mov    r9,r12
  417fdd:	mov    r8,r13
  417fe0:	mov    rcx,rbp
  417fe3:	mov    edi,0x5
  417fe8:	xor    eax,eax
  417fea:	call   4306a0 <strcmp@plt+0x2cee8>
  417fef:	jmp    417eb6 <strcmp@plt+0x146fe>
  417ff4:	nop    DWORD PTR [rax+0x0]
  417ff8:	lea    rsi,[rip+0x33729]        # 44b728 <strcmp@plt+0x47f70>
  417fff:	xor    eax,eax
  418001:	mov    edx,r13d
  418004:	mov    edi,0x7
  418009:	call   4306a0 <strcmp@plt+0x2cee8>
  41800e:	mov    eax,DWORD PTR [rbx]
  418010:	jmp    417df0 <strcmp@plt+0x14638>
  418015:	nop    DWORD PTR [rax]
  418018:	mov    rdi,rbp
  41801b:	call   4227d0 <strcmp@plt+0x1f018>
  418020:	test   BYTE PTR [rax],0x8
  418023:	mov    rdi,rbp
  418026:	je     418080 <strcmp@plt+0x148c8>
  418028:	call   423cc0 <strcmp@plt+0x20508>
  41802d:	mov    rax,0x468e3c
  418034:	cmp    DWORD PTR [rax],0x1
  418037:	jle    417e07 <strcmp@plt+0x1464f>
  41803d:	mov    rdi,rbp
  418040:	call   423cc0 <strcmp@plt+0x20508>
  418045:	lea    rsi,[rip+0x315fc]        # 449648 <strcmp@plt+0x45e90>
  41804c:	mov    edx,eax
  41804e:	mov    edi,0x6
  418053:	xor    eax,eax
  418055:	call   4306a0 <strcmp@plt+0x2cee8>
  41805a:	jmp    417e07 <strcmp@plt+0x1464f>
  41805f:	nop
  418060:	lea    rdx,[rip+0x33121]        # 44b188 <strcmp@plt+0x479d0>
  418067:	lea    rsi,[rip+0x33872]        # 44b8e0 <strcmp@plt+0x48128>
  41806e:	lea    rdi,[rip+0x337b5]        # 44b82a <strcmp@plt+0x48072>
  418075:	call   434880 <strcmp@plt+0x310c8>
  41807a:	nop    WORD PTR [rax+rax*1+0x0]
  418080:	call   422810 <strcmp@plt+0x1f058>
  418085:	cmp    eax,0x1
  418088:	jne    417e07 <strcmp@plt+0x1464f>
  41808e:	lea    r13,[rsp+0xf0]
  418096:	mov    rdi,rbp
  418099:	lea    r12,[rsp+0xa0]
  4180a1:	mov    rsi,r13
  4180a4:	call   435ec0 <strcmp@plt+0x32708>
  4180a9:	movzx  edx,WORD PTR [rsp+0x130]
  4180b1:	movzx  esi,WORD PTR [rsp+0x132]
  4180b9:	lea    rcx,[r13+0x20]
  4180bd:	mov    r8,r13
  4180c0:	mov    rdi,r12
  4180c3:	call   438840 <strcmp@plt+0x35088>
  4180c8:	mov    rdi,rbp
  4180cb:	call   422770 <strcmp@plt+0x1efb8>
  4180d0:	mov    r13d,eax
  4180d3:	mov    rax,0x468e3c
  4180da:	mov    r9d,DWORD PTR [rax]
  4180dd:	test   r9d,r9d
  4180e0:	jle    418100 <strcmp@plt+0x14948>
  4180e2:	mov    rdi,rbp
  4180e5:	call   423a90 <strcmp@plt+0x202d8>
  4180ea:	lea    rsi,[rip+0x33477]        # 44b568 <strcmp@plt+0x47db0>
  4180f1:	mov    rdx,rax
  4180f4:	mov    edi,0x5
  4180f9:	xor    eax,eax
  4180fb:	call   4306a0 <strcmp@plt+0x2cee8>
  418100:	mov    QWORD PTR [rsp+0x8],rbx
  418105:	mov    rbx,r12
  418108:	jmp    417c8b <strcmp@plt+0x144d3>
  41810d:	nop    DWORD PTR [rax]
  418110:	mov    rax,QWORD PTR [rsp+0x10]
  418115:	mov    eax,DWORD PTR [rax]
  418117:	cmp    eax,0x1
  41811a:	jle    417df0 <strcmp@plt+0x14638>
  418120:	lea    rsi,[rip+0x32afe]        # 44ac25 <strcmp@plt+0x4746d>
  418127:	jmp    417f85 <strcmp@plt+0x147cd>
  41812c:	nop    DWORD PTR [rax+0x0]
  418130:	mov    rbx,0x468e3c
  418137:	mov    eax,DWORD PTR [rbx]
  418139:	cmp    eax,0x1
  41813c:	jle    417df0 <strcmp@plt+0x14638>
  418142:	mov    rdx,QWORD PTR [r14+0x4]
  418146:	lea    rsi,[rip+0x334bb]        # 44b608 <strcmp@plt+0x47e50>
  41814d:	xor    eax,eax
  41814f:	mov    edi,0x6
  418154:	call   4306a0 <strcmp@plt+0x2cee8>
  418159:	mov    eax,DWORD PTR [rbx]
  41815b:	jmp    417df0 <strcmp@plt+0x14638>
  418160:	xor    eax,eax
  418162:	call   4332f0 <strcmp@plt+0x2fb38>
  418167:	mov    rsi,QWORD PTR [rsp+0x28]
  41816c:	mov    rbx,rax
  41816f:	mov    rdi,rax
  418172:	call   433310 <strcmp@plt+0x2fb58>
  418177:	mov    rsi,rbx
  41817a:	mov    rdi,r15
  41817d:	call   4174e0 <strcmp@plt+0x13d28>
  418182:	mov    rdi,rbx
  418185:	call   4333f0 <strcmp@plt+0x2fc38>
  41818a:	mov    rsi,rbp
  41818d:	mov    rdx,rax
  418190:	mov    rdi,r15
  418193:	call   4177b0 <strcmp@plt+0x13ff8>
  418198:	mov    rsi,rbp
  41819b:	mov    rdi,r15
  41819e:	call   417730 <strcmp@plt+0x13f78>
  4181a3:	mov    rax,0x468e3c
  4181aa:	mov    eax,DWORD PTR [rax]
  4181ac:	nop    DWORD PTR [rax+0x0]
  4181b0:	cmp    eax,0x2
  4181b3:	jle    417e0f <strcmp@plt+0x14657>
  4181b9:	lea    rsi,[rip+0x33630]        # 44b7f0 <strcmp@plt+0x48038>
  4181c0:	mov    edi,0x7
  4181c5:	xor    eax,eax
  4181c7:	call   4306a0 <strcmp@plt+0x2cee8>
  4181cc:	jmp    417e0f <strcmp@plt+0x14657>
  4181d1:	mov    r14,QWORD PTR [rsp+0x28]
  4181d6:	mov    DWORD PTR [rbp+0x14],0x1
  4181dd:	cmp    BYTE PTR [r14+0x3e],0x0
  4181e2:	jne    418230 <strcmp@plt+0x14a78>
  4181e4:	mov    rdi,QWORD PTR [rbp+0x18]
  4181e8:	test   rdi,rdi
  4181eb:	je     418a75 <strcmp@plt+0x152bd>
  4181f1:	call   4333f0 <strcmp@plt+0x2fc38>
  4181f6:	mov    rsi,r14
  4181f9:	mov    rdi,rax
  4181fc:	call   437130 <strcmp@plt+0x33978>
  418201:	test   eax,eax
  418203:	je     418802 <strcmp@plt+0x1504a>
  418209:	mov    rdi,QWORD PTR [rbp+0x18]
  41820d:	call   433330 <strcmp@plt+0x2fb78>
  418212:	xor    eax,eax
  418214:	call   4332f0 <strcmp@plt+0x2fb38>
  418219:	mov    rsi,r14
  41821c:	mov    rbx,rax
  41821f:	mov    rdi,rax
  418222:	call   433310 <strcmp@plt+0x2fb58>
  418227:	mov    QWORD PTR [rbp+0x18],rbx
  41822b:	nop    DWORD PTR [rax+rax*1+0x0]
  418230:	mov    rdi,r13
  418233:	call   4178a0 <strcmp@plt+0x140e8>
  418238:	mov    rax,0x468e3c
  41823f:	mov    eax,DWORD PTR [rax]
  418241:	jmp    4181b0 <strcmp@plt+0x149f8>
  418246:	call   42d4e0 <strcmp@plt+0x29d28>
  41824b:	cmp    QWORD PTR [rsp+0x8],0x0
  418251:	mov    QWORD PTR [rsp+0x10],rax
  418256:	je     418987 <strcmp@plt+0x151cf>
  41825c:	mov    rdi,QWORD PTR [rsp+0x8]
  418261:	mov    rsi,QWORD PTR [rsp+0x10]
  418266:	add    rdi,0x20
  41826a:	call   42d540 <strcmp@plt+0x29d88>
  41826f:	mov    rax,QWORD PTR [rbp+0x8]
  418273:	lea    r12,[rsp+0xf0]
  41827b:	mov    rbx,QWORD PTR [rax+0x8]
  41827f:	cmp    rax,rbx
  418282:	mov    QWORD PTR [rsp+0x20],rbx
  418287:	je     41849d <strcmp@plt+0x14ce5>
  41828d:	mov    QWORD PTR [rsp+0x18],r15
  418292:	nop    WORD PTR [rax+rax*1+0x0]
  418298:	mov    rax,QWORD PTR [rsp+0x20]
  41829d:	mov    r14,QWORD PTR [rax+0x10]
  4182a1:	mov    rax,QWORD PTR [rsp+0x10]
  4182a6:	mov    rbx,QWORD PTR [rax+0x8]
  4182aa:	cmp    rax,rbx
  4182ad:	jne    418354 <strcmp@plt+0x14b9c>
  4182b3:	jmp    418480 <strcmp@plt+0x14cc8>
  4182b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4182c0:	mov    rdx,QWORD PTR [r15+0x30]
  4182c4:	mov    rcx,QWORD PTR [r14]
  4182c7:	mov    rdi,QWORD PTR [rbp+0x0]
  4182cb:	mov    r13,QWORD PTR [r14+0x10]
  4182cf:	mov    QWORD PTR [rdx+rax*1+0x4],rcx
  4182d4:	call   425110 <strcmp@plt+0x21958>
  4182d9:	mov    rdi,rax
  4182dc:	call   424b80 <strcmp@plt+0x213c8>
  4182e1:	mov    esi,0x1
  4182e6:	mov    rdi,rax
  4182e9:	mov    QWORD PTR [rsp+0x8],rax
  4182ee:	call   424910 <strcmp@plt+0x21158>
  4182f3:	mov    r8,QWORD PTR [rsp+0x8]
  4182f8:	mov    rcx,r13
  4182fb:	mov    edx,0x10f6
  418300:	mov    esi,0x10f6
  418305:	mov    rdi,r15
  418308:	call   423bc0 <strcmp@plt+0x20408>
  41830d:	mov    rdi,QWORD PTR [rbx+0x10]
  418311:	call   425050 <strcmp@plt+0x21898>
  418316:	xor    ecx,ecx
  418318:	mov    r8,rax
  41831b:	mov    edx,0x10f6
  418320:	mov    esi,0x10f6
  418325:	mov    rdi,r12
  418328:	call   438840 <strcmp@plt+0x35088>
  41832d:	mov    rdi,QWORD PTR [rsp+0x18]
  418332:	mov    rdx,r12
  418335:	mov    rsi,r15
  418338:	call   4083b0 <strcmp@plt+0x4bf8>
  41833d:	mov    rdi,r15
  418340:	call   4300b0 <strcmp@plt+0x2c8f8>
  418345:	mov    rbx,QWORD PTR [rbx+0x8]
  418349:	cmp    QWORD PTR [rsp+0x10],rbx
  41834e:	je     418480 <strcmp@plt+0x14cc8>
  418354:	mov    rsi,QWORD PTR [r14+0x18]
  418358:	mov    rdi,QWORD PTR [r14+0x8]
  41835c:	mov    rdx,QWORD PTR [rbp+0x0]
  418360:	call   423920 <strcmp@plt+0x20168>
  418365:	mov    r15,rax
  418368:	movzx  eax,WORD PTR [rax+0x24]
  41836c:	cmp    ax,0xffff
  418370:	jne    4182c0 <strcmp@plt+0x14b08>
  418376:	mov    QWORD PTR ds:0x4,0x0
  418382:	ud2    
  418384:	mov    rdi,QWORD PTR [rbp+0x0]
  418388:	call   424890 <strcmp@plt+0x210d8>
  41838d:	lea    rsi,[rip+0x3318c]        # 44b520 <strcmp@plt+0x47d68>
  418394:	mov    rdx,rax
  418397:	mov    edi,0x3
  41839c:	xor    eax,eax
  41839e:	call   4306a0 <strcmp@plt+0x2cee8>
  4183a3:	cmp    DWORD PTR [rbp+0x10],0x1
  4183a7:	je     418760 <strcmp@plt+0x14fa8>
  4183ad:	mov    rax,0x468e3c
  4183b4:	mov    QWORD PTR [rsp+0x10],rax
  4183b9:	mov    eax,DWORD PTR [rax]
  4183bb:	test   eax,eax
  4183bd:	jle    4183d2 <strcmp@plt+0x14c1a>
  4183bf:	lea    rsi,[rip+0x330ba]        # 44b480 <strcmp@plt+0x47cc8>
  4183c6:	mov    edi,0x5
  4183cb:	xor    eax,eax
  4183cd:	call   4306a0 <strcmp@plt+0x2cee8>
  4183d2:	mov    rsi,QWORD PTR [r15+0x28]
  4183d6:	mov    rdi,rbp
  4183d9:	call   417690 <strcmp@plt+0x13ed8>
  4183de:	mov    rax,0x474860
  4183e5:	mov    rsi,r12
  4183e8:	mov    rdi,QWORD PTR [rax]
  4183eb:	call   4352c0 <strcmp@plt+0x31b08>
  4183f0:	mov    rdi,r13
  4183f3:	call   4178a0 <strcmp@plt+0x140e8>
  4183f8:	mov    rdi,QWORD PTR [rsp+0x28]
  4183fd:	call   42b280 <strcmp@plt+0x27ac8>
  418402:	mov    rax,QWORD PTR [rsp+0x10]
  418407:	mov    eax,DWORD PTR [rax]
  418409:	jmp    4181b0 <strcmp@plt+0x149f8>
  41840e:	mov    rdi,QWORD PTR [rbp+0x20]
  418412:	cmp    rdi,QWORD PTR [r15+0x28]
  418416:	je     418432 <strcmp@plt+0x14c7a>
  418418:	call   4333f0 <strcmp@plt+0x2fc38>
  41841d:	mov    rdi,QWORD PTR [rsp+0x28]
  418422:	mov    rsi,rax
  418425:	call   437130 <strcmp@plt+0x33978>
  41842a:	test   eax,eax
  41842c:	jne    4184f7 <strcmp@plt+0x14d3f>
  418432:	xor    eax,eax
  418434:	call   4332f0 <strcmp@plt+0x2fb38>
  418439:	mov    rsi,QWORD PTR [rsp+0x28]
  41843e:	mov    rbx,rax
  418441:	mov    rdi,rax
  418444:	call   433310 <strcmp@plt+0x2fb58>
  418449:	mov    rsi,rbx
  41844c:	mov    rdi,r15
  41844f:	call   4174e0 <strcmp@plt+0x13d28>
  418454:	mov    rsi,rbx
  418457:	mov    rdi,rbp
  41845a:	call   417640 <strcmp@plt+0x13e88>
  41845f:	mov    rax,0x474860
  418466:	mov    rsi,r12
  418469:	mov    rdi,QWORD PTR [rax]
  41846c:	call   4352c0 <strcmp@plt+0x31b08>
  418471:	jmp    418230 <strcmp@plt+0x14a78>
  418476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418480:	mov    rax,QWORD PTR [rsp+0x20]
  418485:	mov    rax,QWORD PTR [rax+0x8]
  418489:	cmp    rax,QWORD PTR [rbp+0x8]
  41848d:	mov    QWORD PTR [rsp+0x20],rax
  418492:	jne    418298 <strcmp@plt+0x14ae0>
  418498:	mov    r15,QWORD PTR [rsp+0x18]
  41849d:	mov    rsi,rbp
  4184a0:	mov    rdi,r15
  4184a3:	call   417730 <strcmp@plt+0x13f78>
  4184a8:	mov    rdi,QWORD PTR [rsp+0x28]
  4184ad:	call   42b280 <strcmp@plt+0x27ac8>
  4184b2:	mov    rax,0x468e3c
  4184b9:	mov    eax,DWORD PTR [rax]
  4184bb:	jmp    4181b0 <strcmp@plt+0x149f8>
  4184c0:	mov    rax,QWORD PTR [rsp+0x28]
  4184c5:	cmp    BYTE PTR [rax+0x3c],0x5
  4184c9:	ja     4184df <strcmp@plt+0x14d27>
  4184cb:	movzx  eax,BYTE PTR [rax+0x3c]
  4184cf:	lea    rdx,[rip+0x333f2]        # 44b8c8 <strcmp@plt+0x48110>
  4184d6:	movsxd rax,DWORD PTR [rdx+rax*4]
  4184da:	add    rax,rdx
  4184dd:	jmp    rax
  4184df:	mov    rdi,QWORD PTR [rsp+0x28]
  4184e4:	call   42b280 <strcmp@plt+0x27ac8>
  4184e9:	mov    rax,0x468e3c
  4184f0:	mov    eax,DWORD PTR [rax]
  4184f2:	jmp    4181b0 <strcmp@plt+0x149f8>
  4184f7:	mov    rdi,QWORD PTR [rbp+0x0]
  4184fb:	call   424890 <strcmp@plt+0x210d8>
  418500:	lea    rsi,[rip+0x33199]        # 44b6a0 <strcmp@plt+0x47ee8>
  418507:	mov    rdx,rax
  41850a:	mov    edi,0x3
  41850f:	xor    eax,eax
  418511:	call   4306a0 <strcmp@plt+0x2cee8>
  418516:	cmp    DWORD PTR [rbp+0x10],0x1
  41851a:	jne    4183ad <strcmp@plt+0x14bf5>
  418520:	mov    rdx,QWORD PTR [rbp+0x0]
  418524:	mov    rsi,rbp
  418527:	mov    rdi,r15
  41852a:	call   4177b0 <strcmp@plt+0x13ff8>
  41852f:	mov    rsi,rbp
  418532:	mov    rdi,r15
  418535:	call   417730 <strcmp@plt+0x13f78>
  41853a:	mov    rax,0x468e3c
  418541:	mov    QWORD PTR [rsp+0x10],rax
  418546:	jmp    4183f8 <strcmp@plt+0x14c40>
  41854b:	mov    rdi,0x424750
  418552:	call   42d4f0 <strcmp@plt+0x29d38>
  418557:	mov    rdi,rbp
  41855a:	mov    rsi,rax
  41855d:	mov    QWORD PTR [rsp+0x20],rax
  418562:	call   422a60 <strcmp@plt+0x1f2a8>
  418567:	cmp    BYTE PTR [r13+0x3],0x0
  41856c:	je     418aa7 <strcmp@plt+0x152ef>
  418572:	lea    rax,[rbx+0x20]
  418576:	xor    ecx,ecx
  418578:	mov    QWORD PTR [rsp+0x28],r14
  41857d:	mov    QWORD PTR [rsp+0x38],0x0
  418586:	mov    DWORD PTR [rsp+0x44],0x0
  41858e:	mov    r14d,ecx
  418591:	mov    QWORD PTR [rsp+0x30],rax
  418596:	lea    rax,[rsp+0xf0]
  41859e:	mov    QWORD PTR [rsp+0x18],rbp
  4185a3:	mov    QWORD PTR [rsp+0x48],rax
  4185a8:	jmp    41860f <strcmp@plt+0x14e57>
  4185aa:	nop    WORD PTR [rax+rax*1+0x0]
  4185b0:	xor    eax,eax
  4185b2:	call   417c20 <strcmp@plt+0x14468>
  4185b7:	mov    rbx,rax
  4185ba:	mov    rax,QWORD PTR [r13+0x4]
  4185be:	mov    rdi,QWORD PTR [rsp+0x28]
  4185c3:	mov    QWORD PTR [rbx],rax
  4185c6:	call   424b80 <strcmp@plt+0x213c8>
  4185cb:	mov    rdi,QWORD PTR [rsp+0x30]
  4185d0:	mov    QWORD PTR [rbx+0x8],rax
  4185d4:	call   424b80 <strcmp@plt+0x213c8>
  4185d9:	mov    rsi,0x424b80
  4185e0:	mov    rdi,QWORD PTR [rsp+0x20]
  4185e5:	mov    QWORD PTR [rbx+0x10],rax
  4185e9:	call   42d670 <strcmp@plt+0x29eb8>
  4185ee:	mov    rsi,rbx
  4185f1:	mov    QWORD PTR [rbx+0x18],rax
  4185f5:	mov    rdi,rbp
  4185f8:	call   4176b0 <strcmp@plt+0x13ef8>
  4185fd:	movzx  eax,BYTE PTR [r13+0x3]
  418602:	add    r14d,0x1
  418606:	cmp    r14d,eax
  418609:	jge    4187d4 <strcmp@plt+0x1501c>
  41860f:	xor    eax,eax
  418611:	call   424740 <strcmp@plt+0x20f88>
  418616:	mov    rdi,QWORD PTR [rsp+0x18]
  41861b:	mov    rsi,rax
  41861e:	mov    r12,rax
  418621:	call   422a10 <strcmp@plt+0x1f258>
  418626:	cmp    eax,0x1
  418629:	jne    4187aa <strcmp@plt+0x14ff2>
  41862f:	mov    rdi,QWORD PTR [r15+0x20]
  418633:	mov    rsi,r12
  418636:	call   4325a0 <strcmp@plt+0x2ede8>
  41863b:	test   rax,rax
  41863e:	mov    rbp,rax
  418641:	jne    4185b0 <strcmp@plt+0x14df8>
  418647:	mov    rdi,QWORD PTR [r15+0x18]
  41864b:	mov    rsi,r12
  41864e:	call   432570 <strcmp@plt+0x2edb8>
  418653:	test   rax,rax
  418656:	mov    r9,rax
  418659:	je     4189b0 <strcmp@plt+0x151f8>
  41865f:	mov    rdi,QWORD PTR [rax+0x8]
  418663:	movzx  eax,BYTE PTR [rdi+0x3c]
  418667:	cmp    al,0x3
  418669:	je     41891b <strcmp@plt+0x15163>
  41866f:	cmp    al,0x4
  418671:	je     4188a8 <strcmp@plt+0x150f0>
  418677:	cmp    al,0x2
  418679:	je     418819 <strcmp@plt+0x15061>
  41867f:	mov    rdi,r12
  418682:	mov    QWORD PTR [rsp+0x50],r9
  418687:	call   4175f0 <strcmp@plt+0x13e38>
  41868c:	cmp    DWORD PTR [rsp+0x44],0x1
  418691:	mov    rbx,rax
  418694:	mov    r9,QWORD PTR [rsp+0x50]
  418699:	je     4189df <strcmp@plt+0x15227>
  41869f:	mov    rsi,r9
  4186a2:	mov    rdi,rax
  4186a5:	call   417640 <strcmp@plt+0x13e88>
  4186aa:	mov    edi,0x20
  4186af:	call   434790 <strcmp@plt+0x30fd8>
  4186b4:	mov    rbp,rax
  4186b7:	mov    rax,QWORD PTR [r13+0x4]
  4186bb:	mov    rdi,QWORD PTR [rsp+0x28]
  4186c0:	mov    QWORD PTR [rbp+0x0],rax
  4186c4:	call   424b80 <strcmp@plt+0x213c8>
  4186c9:	mov    rdi,QWORD PTR [rsp+0x30]
  4186ce:	mov    QWORD PTR [rbp+0x8],rax
  4186d2:	call   424b80 <strcmp@plt+0x213c8>
  4186d7:	mov    rdi,QWORD PTR [rsp+0x20]
  4186dc:	mov    rsi,0x424b80
  4186e3:	mov    QWORD PTR [rbp+0x10],rax
  4186e7:	call   42d670 <strcmp@plt+0x29eb8>
  4186ec:	mov    rsi,rbp
  4186ef:	mov    QWORD PTR [rbp+0x18],rax
  4186f3:	mov    rdi,rbx
  4186f6:	call   4176b0 <strcmp@plt+0x13ef8>
  4186fb:	mov    rsi,rbx
  4186fe:	mov    rdi,r15
  418701:	call   4170e0 <strcmp@plt+0x13928>
  418706:	mov    rdx,QWORD PTR [rsp+0x8]
  41870b:	mov    rsi,r15
  41870e:	mov    rdi,rbx
  418711:	call   417760 <strcmp@plt+0x13fa8>
  418716:	mov    r8,0x416bc0
  41871d:	lea    rdx,[rip+0xfffffffffffff17c]        # 4178a0 <strcmp@plt+0x140e8>
  418724:	mov    rcx,rax
  418727:	mov    rsi,r15
  41872a:	mov    edi,0xc
  41872f:	call   43af50 <strcmp@plt+0x37798>
  418734:	mov    rdx,rax
  418737:	mov    QWORD PTR [rsp+0x50],rax
  41873c:	mov    rax,0x474858
  418743:	mov    rsi,rbx
  418746:	mov    rdi,QWORD PTR [rax]
  418749:	call   43afa0 <strcmp@plt+0x377e8>
  41874e:	mov    rcx,QWORD PTR [rsp+0x50]
  418753:	mov    rdi,rcx
  418756:	call   4178a0 <strcmp@plt+0x140e8>
  41875b:	jmp    4185fd <strcmp@plt+0x14e45>
  418760:	mov    rdx,QWORD PTR [rbp+0x28]
  418764:	xor    eax,eax
  418766:	mov    rcx,QWORD PTR [rbp+0x30]
  41876a:	mov    esi,DWORD PTR [rdx+0x18]
  41876d:	test   esi,esi
  41876f:	je     418774 <strcmp@plt+0x14fbc>
  418771:	mov    rax,QWORD PTR [rdx]
  418774:	cmp    rcx,rax
  418777:	je     418520 <strcmp@plt+0x14d68>
  41877d:	mov    rax,0x468e3c
  418784:	cmp    DWORD PTR [rax],0x1
  418787:	mov    QWORD PTR [rsp+0x10],rax
  41878c:	jle    4183f0 <strcmp@plt+0x14c38>
  418792:	lea    rsi,[rip+0x32f4f]        # 44b6e8 <strcmp@plt+0x47f30>
  418799:	mov    edi,0x6
  41879e:	xor    eax,eax
  4187a0:	call   4306a0 <strcmp@plt+0x2cee8>
  4187a5:	jmp    4183f0 <strcmp@plt+0x14c38>
  4187aa:	mov    rdi,QWORD PTR [rsp+0x20]
  4187af:	mov    r14,QWORD PTR [rsp+0x28]
  4187b4:	mov    rbx,r12
  4187b7:	call   42dac0 <strcmp@plt+0x2a308>
  4187bc:	mov    rdi,QWORD PTR [rsp+0x38]
  4187c1:	test   rdi,rdi
  4187c4:	je     417ee3 <strcmp@plt+0x1472b>
  4187ca:	call   4300b0 <strcmp@plt+0x2c8f8>
  4187cf:	jmp    417ee3 <strcmp@plt+0x1472b>
  4187d4:	mov    r14,QWORD PTR [rsp+0x28]
  4187d9:	mov    rbx,r12
  4187dc:	mov    rdi,QWORD PTR [rsp+0x20]
  4187e1:	call   42dac0 <strcmp@plt+0x2a308>
  4187e6:	mov    rdi,r14
  4187e9:	call   424750 <strcmp@plt+0x20f98>
  4187ee:	mov    rdi,rbx
  4187f1:	call   424750 <strcmp@plt+0x20f98>
  4187f6:	mov    rax,QWORD PTR [rsp+0x10]
  4187fb:	mov    eax,DWORD PTR [rax]
  4187fd:	jmp    4181b0 <strcmp@plt+0x149f8>
  418802:	mov    rdi,QWORD PTR [rsp+0x28]
  418807:	call   42b280 <strcmp@plt+0x27ac8>
  41880c:	jmp    418230 <strcmp@plt+0x14a78>
  418811:	mov    DWORD PTR [rsp+0x44],0x1
  418819:	call   42bcf0 <strcmp@plt+0x28538>
  41881e:	mov    rdi,QWORD PTR [rsp+0x18]
  418823:	mov    rbp,rax
  418826:	call   4303e0 <strcmp@plt+0x2cc28>
  41882b:	mov    rbx,QWORD PTR [rbp+0x8]
  41882f:	cmp    rbp,rbx
  418832:	je     418893 <strcmp@plt+0x150db>
  418834:	mov    QWORD PTR [rsp+0x50],r13
  418839:	mov    QWORD PTR [rsp+0x58],r12
  41883e:	mov    r12,rbx
  418841:	mov    r13,QWORD PTR [rsp+0x48]
  418846:	mov    rbx,QWORD PTR [rsp+0x18]
  41884b:	nop    DWORD PTR [rax+rax*1+0x0]
  418850:	mov    rdi,QWORD PTR [r12+0x10]
  418855:	call   425050 <strcmp@plt+0x21898>
  41885a:	xor    ecx,ecx
  41885c:	mov    r8,rax
  41885f:	mov    edx,0x10f6
  418864:	mov    esi,0x10f6
  418869:	mov    rdi,r13
  41886c:	call   438840 <strcmp@plt+0x35088>
  418871:	mov    rdx,r13
  418874:	mov    rsi,rbx
  418877:	mov    rdi,r15
  41887a:	call   4083b0 <strcmp@plt+0x4bf8>
  41887f:	mov    r12,QWORD PTR [r12+0x8]
  418884:	cmp    rbp,r12
  418887:	jne    418850 <strcmp@plt+0x15098>
  418889:	mov    r13,QWORD PTR [rsp+0x50]
  41888e:	mov    r12,QWORD PTR [rsp+0x58]
  418893:	mov    rdi,rbp
  418896:	call   42dac0 <strcmp@plt+0x2a308>
  41889b:	jmp    4185fd <strcmp@plt+0x14e45>
  4188a0:	mov    DWORD PTR [rsp+0x44],0x1
  4188a8:	mov    rbx,QWORD PTR [r13+0x4]
  4188ac:	mov    rdi,r9
  4188af:	mov    QWORD PTR [rsp+0x50],r9
  4188b4:	call   4333f0 <strcmp@plt+0x2fc38>
  4188b9:	xor    edx,edx
  4188bb:	mov    ecx,0x1
  4188c0:	mov    esi,0xf
  4188c5:	mov    r8,rbx
  4188c8:	mov    rdi,rax
  4188cb:	call   423990 <strcmp@plt+0x201d8>
  4188d0:	mov    QWORD PTR [rsp+0x38],rax
  4188d5:	mov    rax,QWORD PTR [rsp+0x10]
  4188da:	mov    r9,QWORD PTR [rsp+0x50]
  4188df:	cmp    DWORD PTR [rax],0x1
  4188e2:	jg     418a95 <strcmp@plt+0x152dd>
  4188e8:	mov    rbx,QWORD PTR [rsp+0x38]
  4188ed:	mov    rdx,QWORD PTR [rsp+0x8]
  4188f2:	mov    rdi,r15
  4188f5:	mov    rsi,rbx
  4188f8:	call   4083b0 <strcmp@plt+0x4bf8>
  4188fd:	test   rbx,rbx
  418900:	je     4185fd <strcmp@plt+0x14e45>
  418906:	mov    rdi,rbx
  418909:	call   4300b0 <strcmp@plt+0x2c8f8>
  41890e:	jmp    4185fd <strcmp@plt+0x14e45>
  418913:	mov    DWORD PTR [rsp+0x44],0x1
  41891b:	mov    rbx,QWORD PTR [r13+0x4]
  41891f:	mov    rdi,r9
  418922:	mov    QWORD PTR [rsp+0x50],r9
  418927:	call   4333f0 <strcmp@plt+0x2fc38>
  41892c:	xor    edx,edx
  41892e:	mov    ecx,0x1
  418933:	mov    esi,0x1
  418938:	mov    r8,rbx
  41893b:	mov    rdi,rax
  41893e:	call   423990 <strcmp@plt+0x201d8>
  418943:	mov    QWORD PTR [rsp+0x38],rax
  418948:	mov    rax,QWORD PTR [rsp+0x10]
  41894d:	mov    r9,QWORD PTR [rsp+0x50]
  418952:	cmp    DWORD PTR [rax],0x1
  418955:	jle    4188e8 <strcmp@plt+0x15130>
  418957:	mov    rdi,r9
  41895a:	call   4333f0 <strcmp@plt+0x2fc38>
  41895f:	mov    rdi,rax
  418962:	call   424890 <strcmp@plt+0x210d8>
  418967:	mov    ecx,0x1
  41896c:	lea    rsi,[rip+0x32c65]        # 44b5d8 <strcmp@plt+0x47e20>
  418973:	mov    rdx,rax
  418976:	mov    edi,0x6
  41897b:	xor    eax,eax
  41897d:	call   4306a0 <strcmp@plt+0x2cee8>
  418982:	jmp    4188e8 <strcmp@plt+0x15130>
  418987:	lea    rdi,[rbx+0x20]
  41898b:	mov    rsi,rax
  41898e:	call   42d540 <strcmp@plt+0x29d88>
  418993:	jmp    41826f <strcmp@plt+0x14ab7>
  418998:	mov    rdi,QWORD PTR [rsp+0x28]
  41899d:	call   42b280 <strcmp@plt+0x27ac8>
  4189a2:	mov    rax,0x468e3c
  4189a9:	mov    eax,DWORD PTR [rax]
  4189ab:	jmp    417df0 <strcmp@plt+0x14638>
  4189b0:	mov    r9,QWORD PTR [r15+0x28]
  4189b4:	mov    rdi,QWORD PTR [r9+0x8]
  4189b8:	movzx  eax,BYTE PTR [rdi+0x3c]
  4189bc:	cmp    al,0x3
  4189be:	je     418913 <strcmp@plt+0x1515b>
  4189c4:	cmp    al,0x4
  4189c6:	je     4188a0 <strcmp@plt+0x150e8>
  4189cc:	cmp    al,0x2
  4189ce:	je     418811 <strcmp@plt+0x15059>
  4189d4:	mov    rdi,r12
  4189d7:	call   4175f0 <strcmp@plt+0x13e38>
  4189dc:	mov    rbx,rax
  4189df:	mov    rsi,QWORD PTR [r15+0x28]
  4189e3:	mov    rdi,rbx
  4189e6:	call   417690 <strcmp@plt+0x13ed8>
  4189eb:	mov    DWORD PTR [rsp+0x44],0x1
  4189f3:	jmp    4186aa <strcmp@plt+0x14ef2>
  4189f8:	mov    rax,0x468e3c
  4189ff:	cmp    DWORD PTR [rax],0x1
  418a02:	mov    QWORD PTR [rsp+0x10],rax
  418a07:	jle    418a40 <strcmp@plt+0x15288>
  418a09:	mov    rdi,QWORD PTR [rbp+0x20]
  418a0d:	call   4333f0 <strcmp@plt+0x2fc38>
  418a12:	mov    rdi,rax
  418a15:	call   424890 <strcmp@plt+0x210d8>
  418a1a:	mov    rdi,QWORD PTR [rsp+0x28]
  418a1f:	mov    rbx,rax
  418a22:	call   424890 <strcmp@plt+0x210d8>
  418a27:	lea    rsi,[rip+0x32c22]        # 44b650 <strcmp@plt+0x47e98>
  418a2e:	mov    rdx,rax
  418a31:	mov    rcx,rbx
  418a34:	mov    edi,0x6
  418a39:	xor    eax,eax
  418a3b:	call   4306a0 <strcmp@plt+0x2cee8>
  418a40:	mov    rdi,QWORD PTR [rbp+0x0]
  418a44:	call   424890 <strcmp@plt+0x210d8>
  418a49:	lea    rsi,[rip+0x32aa8]        # 44b4f8 <strcmp@plt+0x47d40>
  418a50:	mov    rdx,rax
  418a53:	mov    edi,0x3
  418a58:	xor    eax,eax
  418a5a:	call   4306a0 <strcmp@plt+0x2cee8>
  418a5f:	mov    rdi,QWORD PTR [rsp+0x28]
  418a64:	call   42b280 <strcmp@plt+0x27ac8>
  418a69:	mov    rax,QWORD PTR [rsp+0x10]
  418a6e:	mov    eax,DWORD PTR [rax]
  418a70:	jmp    417df0 <strcmp@plt+0x14638>
  418a75:	xor    eax,eax
  418a77:	call   4332f0 <strcmp@plt+0x2fb38>
  418a7c:	mov    rsi,QWORD PTR [rsp+0x28]
  418a81:	mov    rbx,rax
  418a84:	mov    rdi,rax
  418a87:	call   433310 <strcmp@plt+0x2fb58>
  418a8c:	mov    QWORD PTR [rbp+0x18],rbx
  418a90:	jmp    418230 <strcmp@plt+0x14a78>
  418a95:	mov    rdi,r9
  418a98:	call   4333f0 <strcmp@plt+0x2fc38>
  418a9d:	mov    ecx,0xf
  418aa2:	jmp    41896c <strcmp@plt+0x151b4>
  418aa7:	xor    ebx,ebx
  418aa9:	jmp    4187dc <strcmp@plt+0x15024>
  418aae:	call   403460 <__stack_chk_fail@plt>
  418ab3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418abd:	nop    DWORD PTR [rax]
  418ac0:	mov    rax,0x468780
  418ac7:	ret    
  418ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  418ad0:	mov    eax,0x1
  418ad5:	ret    
  418ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418ae0:	mov    eax,0x1
  418ae5:	ret    
  418ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418af0:	mov    rax,QWORD PTR [rdi+0x28]
  418af4:	mov    rdi,QWORD PTR [rax+0x50]
  418af8:	jmp    4037b0 <free@plt>
  418afd:	nop    DWORD PTR [rax]
  418b00:	push   r15
  418b02:	push   r14
  418b04:	push   r13
  418b06:	push   r12
  418b08:	xor    r13d,r13d
  418b0b:	push   rbp
  418b0c:	push   rbx
  418b0d:	mov    rbx,rdi
  418b10:	sub    rsp,0x68
  418b14:	mov    rax,QWORD PTR fs:0x28
  418b1d:	mov    QWORD PTR [rsp+0x58],rax
  418b22:	xor    eax,eax
  418b24:	mov    rax,QWORD PTR [rdi+0x10]
  418b28:	mov    rax,QWORD PTR [rax]
  418b2b:	mov    r8d,DWORD PTR [rax+0x18]
  418b2f:	test   r8d,r8d
  418b32:	je     418b3c <strcmp@plt+0x15384>
  418b34:	mov    rax,QWORD PTR [rax+0x8]
  418b38:	mov    r13,QWORD PTR [rax+0x10]
  418b3c:	mov    edi,0x10f6
  418b41:	xor    eax,eax
  418b43:	lea    r12,[rsp+0x10]
  418b48:	mov    WORD PTR [rsp+0x50],di
  418b4d:	call   4237d0 <strcmp@plt+0x20018>
  418b52:	mov    edi,DWORD PTR [rbx+0x18]
  418b55:	mov    rdx,r12
  418b58:	mov    rsi,rax
  418b5b:	mov    rbp,rax
  418b5e:	call   4383c0 <strcmp@plt+0x34c08>
  418b63:	cmp    eax,0x1
  418b66:	mov    ebx,eax
  418b68:	je     418bc8 <strcmp@plt+0x15410>
  418b6a:	mov    rax,0x468e3c
  418b71:	mov    esi,DWORD PTR [rax]
  418b73:	test   esi,esi
  418b75:	jg     418bb0 <strcmp@plt+0x153f8>
  418b77:	mov    rdi,rbp
  418b7a:	xor    ebx,ebx
  418b7c:	call   4300b0 <strcmp@plt+0x2c8f8>
  418b81:	mov    rcx,QWORD PTR [rsp+0x58]
  418b86:	xor    rcx,QWORD PTR fs:0x28
  418b8f:	mov    eax,ebx
  418b91:	jne    418c9a <strcmp@plt+0x154e2>
  418b97:	add    rsp,0x68
  418b9b:	pop    rbx
  418b9c:	pop    rbp
  418b9d:	pop    r12
  418b9f:	pop    r13
  418ba1:	pop    r14
  418ba3:	pop    r15
  418ba5:	ret    
  418ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418bb0:	lea    rsi,[rip+0x32d41]        # 44b8f8 <strcmp@plt+0x48140>
  418bb7:	mov    edi,0x5
  418bbc:	xor    eax,eax
  418bbe:	call   4306a0 <strcmp@plt+0x2cee8>
  418bc3:	jmp    418b77 <strcmp@plt+0x153bf>
  418bc5:	nop    DWORD PTR [rax]
  418bc8:	cmp    DWORD PTR [rbp+0x14],0x3
  418bcc:	jbe    418c68 <strcmp@plt+0x154b0>
  418bd2:	mov    rax,QWORD PTR [rbp+0x38]
  418bd6:	sub    rax,QWORD PTR [rbp+0x30]
  418bda:	mov    WORD PTR [rbp+0x24],ax
  418bde:	mov    rax,0x468e3c
  418be5:	mov    ecx,DWORD PTR [rax]
  418be7:	test   ecx,ecx
  418be9:	jle    418c48 <strcmp@plt+0x15490>
  418beb:	movzx  r9d,WORD PTR [rsp+0x52]
  418bf1:	mov    rdi,r12
  418bf4:	movzx  r14d,WORD PTR [rsp+0x50]
  418bfa:	mov    DWORD PTR [rsp+0xc],r9d
  418bff:	call   424890 <strcmp@plt+0x210d8>
  418c04:	lea    rdi,[r12+0x20]
  418c09:	mov    r15,rax
  418c0c:	call   424890 <strcmp@plt+0x210d8>
  418c11:	mov    rdi,rbp
  418c14:	mov    QWORD PTR [rsp],rax
  418c18:	call   423a90 <strcmp@plt+0x202d8>
  418c1d:	sub    rsp,0x8
  418c21:	lea    rsi,[rip+0x32d68]        # 44b990 <strcmp@plt+0x481d8>
  418c28:	mov    rdx,rax
  418c2b:	push   r14
  418c2d:	mov    r9d,DWORD PTR [rsp+0x1c]
  418c32:	xor    eax,eax
  418c34:	mov    rcx,QWORD PTR [rsp+0x10]
  418c39:	mov    r8,r15
  418c3c:	mov    edi,0x5
  418c41:	call   4306a0 <strcmp@plt+0x2cee8>
  418c46:	pop    rax
  418c47:	pop    rdx
  418c48:	mov    rdi,r13
  418c4b:	mov    rdx,r12
  418c4e:	mov    rsi,rbp
  418c51:	call   408360 <strcmp@plt+0x4ba8>
  418c56:	mov    rdi,rbp
  418c59:	call   4300b0 <strcmp@plt+0x2c8f8>
  418c5e:	jmp    418b81 <strcmp@plt+0x153c9>
  418c63:	nop    DWORD PTR [rax+rax*1+0x0]
  418c68:	mov    rax,0x468e3c
  418c6f:	cmp    DWORD PTR [rax],0x2
  418c72:	jg     418c80 <strcmp@plt+0x154c8>
  418c74:	xor    ebx,ebx
  418c76:	jmp    418b81 <strcmp@plt+0x153c9>
  418c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  418c80:	lea    rsi,[rip+0x32cc1]        # 44b948 <strcmp@plt+0x48190>
  418c87:	mov    edi,0x7
  418c8c:	xor    eax,eax
  418c8e:	xor    ebx,ebx
  418c90:	call   4306a0 <strcmp@plt+0x2cee8>
  418c95:	jmp    418b81 <strcmp@plt+0x153c9>
  418c9a:	call   403460 <__stack_chk_fail@plt>
  418c9f:	nop
  418ca0:	mov    rax,QWORD PTR [rdi+0x28]
  418ca4:	cmp    esi,0x2
  418ca7:	mov    rax,QWORD PTR [rax+0x50]
  418cab:	je     418cd0 <strcmp@plt+0x15518>
  418cad:	cmp    esi,0xa
  418cb0:	jne    418cc0 <strcmp@plt+0x15508>
  418cb2:	mov    rax,QWORD PTR [rax+0x8]
  418cb6:	test   rax,rax
  418cb9:	je     418ccc <strcmp@plt+0x15514>
  418cbb:	mov    rax,QWORD PTR [rax+0x18]
  418cbf:	ret    
  418cc0:	mov    rax,0x468e3c
  418cc7:	cmp    DWORD PTR [rax],0x1
  418cca:	jg     418ce0 <strcmp@plt+0x15528>
  418ccc:	xor    eax,eax
  418cce:	ret    
  418ccf:	nop
  418cd0:	mov    rax,QWORD PTR [rax]
  418cd3:	test   rax,rax
  418cd6:	je     418ccc <strcmp@plt+0x15514>
  418cd8:	mov    rax,QWORD PTR [rax+0x10]
  418cdc:	ret    
  418cdd:	nop    DWORD PTR [rax]
  418ce0:	mov    edx,esi
  418ce2:	lea    rsi,[rip+0x32cd7]        # 44b9c0 <strcmp@plt+0x48208>
  418ce9:	sub    rsp,0x8
  418ced:	xor    eax,eax
  418cef:	mov    edi,0x6
  418cf4:	call   4306a0 <strcmp@plt+0x2cee8>
  418cf9:	xor    eax,eax
  418cfb:	add    rsp,0x8
  418cff:	ret    
  418d00:	push   rbx
  418d01:	mov    rbx,rdi
  418d04:	mov    edi,0x2
  418d09:	call   43eaf0 <strcmp@plt+0x3b338>
  418d0e:	test   rax,rax
  418d11:	mov    QWORD PTR [rbx],rax
  418d14:	je     418d47 <strcmp@plt+0x1558f>
  418d16:	mov    rdx,0x468e3c
  418d1d:	cmp    DWORD PTR [rdx],0x1
  418d20:	jle    418d47 <strcmp@plt+0x1558f>
  418d22:	mov    rdi,QWORD PTR [rax+0x10]
  418d26:	call   424890 <strcmp@plt+0x210d8>
  418d2b:	mov    rdx,QWORD PTR [rbx]
  418d2e:	lea    rsi,[rip+0x32cfb]        # 44ba30 <strcmp@plt+0x48278>
  418d35:	mov    rcx,rax
  418d38:	mov    edi,0x6
  418d3d:	xor    eax,eax
  418d3f:	mov    rdx,QWORD PTR [rdx]
  418d42:	call   4306a0 <strcmp@plt+0x2cee8>
  418d47:	mov    edi,0xa
  418d4c:	call   43eaf0 <strcmp@plt+0x3b338>
  418d51:	test   rax,rax
  418d54:	mov    QWORD PTR [rbx+0x8],rax
  418d58:	je     418dc0 <strcmp@plt+0x15608>
  418d5a:	mov    rdx,0x468e3c
  418d61:	cmp    DWORD PTR [rdx],0x1
  418d64:	jg     418d70 <strcmp@plt+0x155b8>
  418d66:	pop    rbx
  418d67:	ret    
  418d68:	nop    DWORD PTR [rax+rax*1+0x0]
  418d70:	mov    rdi,QWORD PTR [rax+0x18]
  418d74:	call   424890 <strcmp@plt+0x210d8>
  418d79:	mov    rdx,QWORD PTR [rbx+0x8]
  418d7d:	lea    rsi,[rip+0x32cd4]        # 44ba58 <strcmp@plt+0x482a0>
  418d84:	mov    rcx,rax
  418d87:	mov    edi,0x6
  418d8c:	xor    eax,eax
  418d8e:	mov    rdx,QWORD PTR [rdx]
  418d91:	call   4306a0 <strcmp@plt+0x2cee8>
  418d96:	cmp    QWORD PTR [rbx],0x0
  418d9a:	jne    418d66 <strcmp@plt+0x155ae>
  418d9c:	cmp    QWORD PTR [rbx+0x8],0x0
  418da1:	jne    418d66 <strcmp@plt+0x155ae>
  418da3:	pop    rbx
  418da4:	lea    rsi,[rip+0x32c55]        # 44ba00 <strcmp@plt+0x48248>
  418dab:	mov    edi,0x2
  418db0:	xor    eax,eax
  418db2:	jmp    4306a0 <strcmp@plt+0x2cee8>
  418db7:	nop    WORD PTR [rax+rax*1+0x0]
  418dc0:	cmp    QWORD PTR [rbx],0x0
  418dc4:	je     418da3 <strcmp@plt+0x155eb>
  418dc6:	pop    rbx
  418dc7:	ret    
  418dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  418dd0:	push   r13
  418dd2:	push   r12
  418dd4:	push   rbp
  418dd5:	push   rbx
  418dd6:	mov    rbx,rdi
  418dd9:	sub    rsp,0x8
  418ddd:	mov    rbp,0x4747c0
  418de4:	cmp    DWORD PTR [rbp+0x0],0xa
  418de8:	je     418e48 <strcmp@plt+0x15690>
  418dea:	mov    edi,0x2
  418def:	call   438100 <strcmp@plt+0x34948>
  418df4:	mov    r12,0x4747a8
  418dfb:	mov    r13,0x418b00
  418e02:	mov    ecx,eax
  418e04:	mov    rdx,rbx
  418e07:	mov    rdi,QWORD PTR [r12]
  418e0b:	mov    rsi,r13
  418e0e:	call   437e60 <strcmp@plt+0x346a8>
  418e13:	cmp    DWORD PTR [rbp+0x0],0x2
  418e17:	jne    418e56 <strcmp@plt+0x1569e>
  418e19:	mov    edi,0x10
  418e1e:	call   4347a0 <strcmp@plt+0x30fe8>
  418e23:	mov    rdx,QWORD PTR [rbx+0x28]
  418e27:	mov    rdi,rax
  418e2a:	mov    QWORD PTR [rdx+0x50],rax
  418e2e:	call   418d00 <strcmp@plt+0x15548>
  418e33:	add    rsp,0x8
  418e37:	mov    eax,0x1
  418e3c:	pop    rbx
  418e3d:	pop    rbp
  418e3e:	pop    r12
  418e40:	pop    r13
  418e42:	ret    
  418e43:	nop    DWORD PTR [rax+rax*1+0x0]
  418e48:	mov    r12,0x4747a8
  418e4f:	mov    r13,0x418b00
  418e56:	mov    edi,0xa
  418e5b:	call   438100 <strcmp@plt+0x34948>
  418e60:	mov    rdi,QWORD PTR [r12]
  418e64:	mov    ecx,eax
  418e66:	mov    rdx,rbx
  418e69:	mov    rsi,r13
  418e6c:	call   437e60 <strcmp@plt+0x346a8>
  418e71:	jmp    418e19 <strcmp@plt+0x15661>
  418e73:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  418e7e:	xchg   ax,ax
  418e80:	sub    rsp,0x8
  418e84:	mov    rax,0x468780
  418e8b:	cmp    edx,0x2
  418e8e:	mov    rdi,QWORD PTR [rax+0x50]
  418e92:	je     418eb0 <strcmp@plt+0x156f8>
  418e94:	cmp    edx,0xa
  418e97:	jne    418ea5 <strcmp@plt+0x156ed>
  418e99:	test   rdi,rdi
  418e9c:	je     418ea5 <strcmp@plt+0x156ed>
  418e9e:	cmp    QWORD PTR [rdi+0x8],0x0
  418ea3:	je     418ebb <strcmp@plt+0x15703>
  418ea5:	mov    eax,0x1
  418eaa:	add    rsp,0x8
  418eae:	ret    
  418eaf:	nop
  418eb0:	test   rdi,rdi
  418eb3:	je     418ea5 <strcmp@plt+0x156ed>
  418eb5:	cmp    QWORD PTR [rdi],0x0
  418eb9:	jne    418ea5 <strcmp@plt+0x156ed>
  418ebb:	call   418d00 <strcmp@plt+0x15548>
  418ec0:	jmp    418ea5 <strcmp@plt+0x156ed>
  418ec2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  418ecd:	nop    DWORD PTR [rax]
  418ed0:	push   rbx
  418ed1:	sub    rsp,0x10
  418ed5:	mov    rax,QWORD PTR [rdi+0x28]
  418ed9:	mov    rbx,QWORD PTR [rax+0x50]
  418edd:	mov    eax,DWORD PTR [rcx+0x18]
  418ee0:	test   eax,eax
  418ee2:	je     418ef8 <strcmp@plt+0x15740>
  418ee4:	cmp    BYTE PTR [rsi+0xc],0x1
  418ee8:	je     418f38 <strcmp@plt+0x15780>
  418eea:	add    rsp,0x10
  418eee:	mov    eax,0x1
  418ef3:	pop    rbx
  418ef4:	ret    
  418ef5:	nop    DWORD PTR [rax]
  418ef8:	mov    rdi,rdx
  418efb:	mov    QWORD PTR [rsp+0x8],rsi
  418f00:	call   4251c0 <strcmp@plt+0x21a08>
  418f05:	mov    rdx,QWORD PTR [rbx+0x8]
  418f09:	cmp    ax,0x2
  418f0d:	cmove  rdx,QWORD PTR [rbx]
  418f11:	mov    rsi,QWORD PTR [rsp+0x8]
  418f16:	cmp    rdx,rsi
  418f19:	jne    418eea <strcmp@plt+0x15732>
  418f1b:	mov    rax,0x468e3c
  418f22:	cmp    DWORD PTR [rax],0x1
  418f25:	jg     418f80 <strcmp@plt+0x157c8>
  418f27:	mov    rdi,rbx
  418f2a:	call   418d00 <strcmp@plt+0x15548>
  418f2f:	jmp    418eea <strcmp@plt+0x15732>
  418f31:	nop    DWORD PTR [rax+0x0]
  418f38:	mov    rdi,rcx
  418f3b:	call   4251c0 <strcmp@plt+0x21a08>
  418f40:	cmp    QWORD PTR [rbx],0x0
  418f44:	movzx  eax,ax
  418f47:	jne    418f4e <strcmp@plt+0x15796>
  418f49:	cmp    eax,0x2
  418f4c:	je     418f5a <strcmp@plt+0x157a2>
  418f4e:	cmp    QWORD PTR [rbx+0x8],0x0
  418f53:	jne    418eea <strcmp@plt+0x15732>
  418f55:	cmp    eax,0xa
  418f58:	jne    418eea <strcmp@plt+0x15732>
  418f5a:	mov    rax,0x468e3c
  418f61:	cmp    DWORD PTR [rax],0x1
  418f64:	jle    418f27 <strcmp@plt+0x1576f>
  418f66:	lea    rsi,[rip+0x32b6b]        # 44bad8 <strcmp@plt+0x48320>
  418f6d:	mov    edi,0x6
  418f72:	xor    eax,eax
  418f74:	call   4306a0 <strcmp@plt+0x2cee8>
  418f79:	jmp    418f27 <strcmp@plt+0x1576f>
  418f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  418f80:	lea    rsi,[rip+0x32af9]        # 44ba80 <strcmp@plt+0x482c8>
  418f87:	mov    edi,0x6
  418f8c:	xor    eax,eax
  418f8e:	call   4306a0 <strcmp@plt+0x2cee8>
  418f93:	jmp    418f27 <strcmp@plt+0x1576f>
  418f95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  418fa0:	push   rbx
  418fa1:	mov    rax,QWORD PTR [rdi+0x28]
  418fa5:	mov    rbx,QWORD PTR [rax+0x50]
  418fa9:	mov    rax,QWORD PTR [rbx]
  418fac:	cmp    rax,rsi
  418faf:	je     418fd8 <strcmp@plt+0x15820>
  418fb1:	mov    rdx,QWORD PTR [rbx+0x8]
  418fb5:	cmp    rsi,rdx
  418fb8:	sete   cl
  418fbb:	test   rax,rax
  418fbe:	sete   al
  418fc1:	or     cl,al
  418fc3:	jne    418fd8 <strcmp@plt+0x15820>
  418fc5:	test   rdx,rdx
  418fc8:	je     418fd8 <strcmp@plt+0x15820>
  418fca:	mov    eax,0x1
  418fcf:	pop    rbx
  418fd0:	ret    
  418fd1:	nop    DWORD PTR [rax+0x0]
  418fd8:	mov    rax,0x468e3c
  418fdf:	cmp    DWORD PTR [rax],0x1
  418fe2:	jg     418ff8 <strcmp@plt+0x15840>
  418fe4:	mov    rdi,rbx
  418fe7:	call   418d00 <strcmp@plt+0x15548>
  418fec:	mov    eax,0x1
  418ff1:	pop    rbx
  418ff2:	ret    
  418ff3:	nop    DWORD PTR [rax+rax*1+0x0]
  418ff8:	lea    rsi,[rip+0x32b19]        # 44bb18 <strcmp@plt+0x48360>
  418fff:	mov    edi,0x6
  419004:	xor    eax,eax
  419006:	call   4306a0 <strcmp@plt+0x2cee8>
  41900b:	mov    rdi,rbx
  41900e:	call   418d00 <strcmp@plt+0x15548>
  419013:	jmp    418fec <strcmp@plt+0x15834>
  419015:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  419020:	cmp    esi,0x2
  419023:	je     419038 <strcmp@plt+0x15880>
  419025:	cmp    esi,0xa
  419028:	jne    419030 <strcmp@plt+0x15878>
  41902a:	mov    rax,QWORD PTR [rdi+0x8]
  41902e:	ret    
  41902f:	nop
  419030:	xor    eax,eax
  419032:	ret    
  419033:	nop    DWORD PTR [rax+rax*1+0x0]
  419038:	mov    rax,QWORD PTR [rdi]
  41903b:	ret    
  41903c:	nop    DWORD PTR [rax+0x0]
  419040:	cmp    esi,0x2
  419043:	je     419070 <strcmp@plt+0x158b8>
  419045:	cmp    esi,0xa
  419048:	jne    419060 <strcmp@plt+0x158a8>
  41904a:	mov    rax,QWORD PTR [rdi+0x8]
  41904e:	test   rax,rax
  419051:	je     41906c <strcmp@plt+0x158b4>
  419053:	mov    rax,QWORD PTR [rax+0x18]
  419057:	ret    
  419058:	nop    DWORD PTR [rax+rax*1+0x0]
  419060:	mov    rax,0x468e3c
  419067:	cmp    DWORD PTR [rax],0x1
  41906a:	jg     419080 <strcmp@plt+0x158c8>
  41906c:	xor    eax,eax
  41906e:	ret    
  41906f:	nop
  419070:	mov    rax,QWORD PTR [rdi]
  419073:	test   rax,rax
  419076:	je     41906c <strcmp@plt+0x158b4>
  419078:	mov    rax,QWORD PTR [rax+0x10]
  41907c:	ret    
  41907d:	nop    DWORD PTR [rax]
  419080:	mov    edx,esi
  419082:	lea    rsi,[rip+0x32937]        # 44b9c0 <strcmp@plt+0x48208>
  419089:	sub    rsp,0x8
  41908d:	xor    eax,eax
  41908f:	mov    edi,0x6
  419094:	call   4306a0 <strcmp@plt+0x2cee8>
  419099:	xor    eax,eax
  41909b:	add    rsp,0x8
  41909f:	ret    
  4190a0:	cmp    esi,0x2
  4190a3:	je     4190d0 <strcmp@plt+0x15918>
  4190a5:	cmp    esi,0xa
  4190a8:	jne    4190c0 <strcmp@plt+0x15908>
  4190aa:	mov    rax,QWORD PTR [rdi+0x8]
  4190ae:	test   rax,rax
  4190b1:	je     4190dc <strcmp@plt+0x15924>
  4190b3:	mov    eax,DWORD PTR [rax+0x34]
  4190b6:	ret    
  4190b7:	nop    WORD PTR [rax+rax*1+0x0]
  4190c0:	mov    eax,0xffffffff
  4190c5:	ret    
  4190c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4190d0:	mov    rax,QWORD PTR [rdi]
  4190d3:	test   rax,rax
  4190d6:	je     4190dc <strcmp@plt+0x15924>
  4190d8:	mov    eax,DWORD PTR [rax+0x30]
  4190db:	ret    
  4190dc:	mov    eax,0xfffffff7
  4190e1:	ret    
  4190e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4190ed:	nop    DWORD PTR [rax]
  4190f0:	push   r14
  4190f2:	push   r13
  4190f4:	mov    r13,rdi
  4190f7:	push   r12
  4190f9:	lea    rdi,[rsi+0x20]
  4190fd:	push   rbp
  4190fe:	push   rbx
  4190ff:	mov    rbx,rsi
  419102:	call   4251c0 <strcmp@plt+0x21a08>
  419107:	movzx  r12d,ax
  41910b:	mov    eax,DWORD PTR [rbx+0x18]
  41910e:	mov    ebp,r12d
  419111:	test   eax,eax
  419113:	jne    4191a2 <strcmp@plt+0x159ea>
  419119:	cmp    r12w,0x2
  41911e:	je     419180 <strcmp@plt+0x159c8>
  419120:	cmp    r12w,0xa
  419125:	je     419220 <strcmp@plt+0x15a68>
  41912b:	mov    rax,0x468e3c
  419132:	cmp    DWORD PTR [rax],0x1
  419135:	jle    41914d <strcmp@plt+0x15995>
  419137:	lea    rsi,[rip+0x32882]        # 44b9c0 <strcmp@plt+0x48208>
  41913e:	mov    edx,r12d
  419141:	mov    edi,0x6
  419146:	xor    eax,eax
  419148:	call   4306a0 <strcmp@plt+0x2cee8>
  41914d:	cmp    r12d,0x2
  419151:	je     419303 <strcmp@plt+0x15b4b>
  419157:	lea    rdx,[rip+0x2e7c7]        # 447925 <strcmp@plt+0x4416d>
  41915e:	lea    rsi,[rip+0x329fb]        # 44bb60 <strcmp@plt+0x483a8>
  419165:	xor    eax,eax
  419167:	mov    edi,0x2
  41916c:	call   4306a0 <strcmp@plt+0x2cee8>
  419171:	mov    eax,0xfffffff7
  419176:	jmp    4191c2 <strcmp@plt+0x15a0a>
  419178:	nop    DWORD PTR [rax+rax*1+0x0]
  419180:	mov    rax,QWORD PTR [r13+0x0]
  419184:	test   rax,rax
  419187:	je     419303 <strcmp@plt+0x15b4b>
  41918d:	mov    rsi,QWORD PTR [rax+0x10]
  419191:	test   rsi,rsi
  419194:	je     419303 <strcmp@plt+0x15b4b>
  41919a:	mov    rdi,rbx
  41919d:	call   424b00 <strcmp@plt+0x21348>
  4191a2:	mov    rdi,rbx
  4191a5:	call   43e770 <strcmp@plt+0x3afb8>
  4191aa:	test   rax,rax
  4191ad:	je     4191d0 <strcmp@plt+0x15a18>
  4191af:	mov    esi,r12d
  4191b2:	mov    rdi,rax
  4191b5:	call   43efa0 <strcmp@plt+0x3b7e8>
  4191ba:	test   eax,eax
  4191bc:	js     4192e6 <strcmp@plt+0x15b2e>
  4191c2:	pop    rbx
  4191c3:	pop    rbp
  4191c4:	pop    r12
  4191c6:	pop    r13
  4191c8:	pop    r14
  4191ca:	ret    
  4191cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4191d0:	mov    r14,0x468e3c
  4191d7:	cmp    DWORD PTR [r14],0x1
  4191db:	jg     419240 <strcmp@plt+0x15a88>
  4191dd:	cmp    bp,0x2
  4191e1:	je     4192c8 <strcmp@plt+0x15b10>
  4191e7:	cmp    bp,0xa
  4191eb:	je     419290 <strcmp@plt+0x15ad8>
  4191f1:	cmp    r12d,0x2
  4191f5:	je     4192da <strcmp@plt+0x15b22>
  4191fb:	lea    rdx,[rip+0x2e723]        # 447925 <strcmp@plt+0x4416d>
  419202:	lea    rsi,[rip+0x329a7]        # 44bbb0 <strcmp@plt+0x483f8>
  419209:	xor    eax,eax
  41920b:	mov    edi,0x2
  419210:	call   4306a0 <strcmp@plt+0x2cee8>
  419215:	mov    eax,0xfffffff7
  41921a:	jmp    4191c2 <strcmp@plt+0x15a0a>
  41921c:	nop    DWORD PTR [rax+0x0]
  419220:	mov    rax,QWORD PTR [r13+0x8]
  419224:	test   rax,rax
  419227:	je     419157 <strcmp@plt+0x1599f>
  41922d:	mov    rsi,QWORD PTR [rax+0x18]
  419231:	test   rsi,rsi
  419234:	jne    41919a <strcmp@plt+0x159e2>
  41923a:	jmp    419157 <strcmp@plt+0x1599f>
  41923f:	nop
  419240:	mov    rdi,rbx
  419243:	call   424890 <strcmp@plt+0x210d8>
  419248:	lea    rsi,[rip+0x329e1]        # 44bc30 <strcmp@plt+0x48478>
  41924f:	mov    rdx,rax
  419252:	mov    edi,0x6
  419257:	xor    eax,eax
  419259:	call   4306a0 <strcmp@plt+0x2cee8>
  41925e:	cmp    bp,0x2
  419262:	je     4192c8 <strcmp@plt+0x15b10>
  419264:	cmp    bp,0xa
  419268:	je     419290 <strcmp@plt+0x15ad8>
  41926a:	cmp    DWORD PTR [r14],0x1
  41926e:	jle    4191f1 <strcmp@plt+0x15a39>
  419270:	lea    rsi,[rip+0x32749]        # 44b9c0 <strcmp@plt+0x48208>
  419277:	mov    edx,r12d
  41927a:	mov    edi,0x6
  41927f:	xor    eax,eax
  419281:	call   4306a0 <strcmp@plt+0x2cee8>
  419286:	jmp    4191f1 <strcmp@plt+0x15a39>
  41928b:	nop    DWORD PTR [rax+rax*1+0x0]
  419290:	mov    rax,QWORD PTR [r13+0x8]
  419294:	test   rax,rax
  419297:	je     4191fb <strcmp@plt+0x15a43>
  41929d:	mov    rsi,QWORD PTR [rax+0x18]
  4192a1:	test   rsi,rsi
  4192a4:	je     4191fb <strcmp@plt+0x15a43>
  4192aa:	mov    rdi,rbx
  4192ad:	call   424b00 <strcmp@plt+0x21348>
  4192b2:	mov    esi,r12d
  4192b5:	mov    rdi,r13
  4192b8:	call   4190a0 <strcmp@plt+0x158e8>
  4192bd:	jmp    4191ba <strcmp@plt+0x15a02>
  4192c2:	nop    WORD PTR [rax+rax*1+0x0]
  4192c8:	mov    rax,QWORD PTR [r13+0x0]
  4192cc:	test   rax,rax
  4192cf:	je     4192da <strcmp@plt+0x15b22>
  4192d1:	mov    rsi,QWORD PTR [rax+0x10]
  4192d5:	test   rsi,rsi
  4192d8:	jne    4192aa <strcmp@plt+0x15af2>
  4192da:	lea    rdx,[rip+0x2e63f]        # 447920 <strcmp@plt+0x44168>
  4192e1:	jmp    419202 <strcmp@plt+0x15a4a>
  4192e6:	lea    rsi,[rip+0x3291b]        # 44bc08 <strcmp@plt+0x48450>
  4192ed:	xor    eax,eax
  4192ef:	mov    edi,0x2
  4192f4:	call   4306a0 <strcmp@plt+0x2cee8>
  4192f9:	mov    eax,0xfffffff7
  4192fe:	jmp    4191c2 <strcmp@plt+0x15a0a>
  419303:	lea    rdx,[rip+0x2e616]        # 447920 <strcmp@plt+0x44168>
  41930a:	jmp    41915e <strcmp@plt+0x159a6>
  41930f:	nop
  419310:	push   r14
  419312:	push   r13
  419314:	push   r12
  419316:	push   rbp
  419317:	push   rbx
  419318:	cmp    DWORD PTR [rdx+0x38],0x1
  41931c:	mov    rbx,rdx
  41931f:	je     419368 <strcmp@plt+0x15bb0>
  419321:	mov    rax,0x468e3c
  419328:	cmp    DWORD PTR [rax],0x1
  41932b:	jg     419340 <strcmp@plt+0x15b88>
  41932d:	xor    ebp,ebp
  41932f:	pop    rbx
  419330:	mov    eax,ebp
  419332:	pop    rbp
  419333:	pop    r12
  419335:	pop    r13
  419337:	pop    r14
  419339:	ret    
  41933a:	nop    WORD PTR [rax+rax*1+0x0]
  419340:	lea    rdi,[rdx+0x20]
  419344:	call   424890 <strcmp@plt+0x210d8>
  419349:	lea    rsi,[rip+0x32988]        # 44bcd8 <strcmp@plt+0x48520>
  419350:	mov    rdx,rax
  419353:	mov    edi,0x6
  419358:	xor    eax,eax
  41935a:	call   4306a0 <strcmp@plt+0x2cee8>
  41935f:	jmp    41932d <strcmp@plt+0x15b75>
  419361:	nop    DWORD PTR [rax+0x0]
  419368:	cmp    DWORD PTR [rdx+0x18],0x1
  41936c:	mov    rbp,rdi
  41936f:	mov    r13,rsi
  419372:	je     4193a7 <strcmp@plt+0x15bef>
  419374:	mov    rax,0x473da8
  41937b:	lea    r14,[rdx+0x20]
  41937f:	mov    rdi,r14
  419382:	mov    rax,QWORD PTR [rax]
  419385:	call   QWORD PTR [rax+0x20]
  419388:	test   rax,rax
  41938b:	mov    r12,rax
  41938e:	je     4194e6 <strcmp@plt+0x15d2e>
  419394:	mov    rdi,rbx
  419397:	mov    rsi,rax
  41939a:	call   424b00 <strcmp@plt+0x21348>
  41939f:	mov    rdi,r12
  4193a2:	call   424750 <strcmp@plt+0x20f98>
  4193a7:	mov    rax,QWORD PTR [rbp+0x28]
  4193ab:	mov    rsi,rbx
  4193ae:	mov    rdi,QWORD PTR [rax+0x50]
  4193b2:	call   4190f0 <strcmp@plt+0x15938>
  4193b7:	cmp    eax,0xfffffff7
  4193ba:	mov    ebp,eax
  4193bc:	je     41932d <strcmp@plt+0x15b75>
  4193c2:	lea    r12,[rbx+0x20]
  4193c6:	mov    rdi,rbx
  4193c9:	call   4257c0 <strcmp@plt+0x22008>
  4193ce:	mov    rdi,r12
  4193d1:	mov    r14d,eax
  4193d4:	call   4257c0 <strcmp@plt+0x22008>
  4193d9:	cmp    r14d,eax
  4193dc:	je     419428 <strcmp@plt+0x15c70>
  4193de:	mov    rax,0x468e3c
  4193e5:	cmp    DWORD PTR [rax],0x1
  4193e8:	jle    41932d <strcmp@plt+0x15b75>
  4193ee:	mov    rdi,r12
  4193f1:	call   425f90 <strcmp@plt+0x227d8>
  4193f6:	mov    rdi,rbx
  4193f9:	mov    rbp,rax
  4193fc:	call   425f90 <strcmp@plt+0x227d8>
  419401:	lea    rsi,[rip+0x32930]        # 44bd38 <strcmp@plt+0x48580>
  419408:	mov    rcx,rbp
  41940b:	mov    rdx,rax
  41940e:	mov    edi,0x6
  419413:	xor    eax,eax
  419415:	xor    ebp,ebp
  419417:	call   4306a0 <strcmp@plt+0x2cee8>
  41941c:	jmp    41932f <strcmp@plt+0x15b77>
  419421:	nop    DWORD PTR [rax+0x0]
  419428:	movzx  edx,WORD PTR [rbx+0x42]
  41942c:	movzx  esi,WORD PTR [rbx+0x40]
  419430:	mov    r8,r12
  419433:	mov    rcx,rbx
  419436:	mov    rdi,r13
  419439:	call   435a10 <strcmp@plt+0x32258>
  41943e:	mov    edx,DWORD PTR [r13+0x14]
  419442:	mov    rsi,QWORD PTR [r13+0x38]
  419446:	mov    edi,ebp
  419448:	mov    rcx,r12
  41944b:	call   439300 <strcmp@plt+0x35b48>
  419450:	mov    ebp,eax
  419452:	mov    rax,0x468e3c
  419459:	cmp    ebp,0x1
  41945c:	je     41949b <strcmp@plt+0x15ce3>
  41945e:	mov    edx,DWORD PTR [rax]
  419460:	test   edx,edx
  419462:	jle    41932d <strcmp@plt+0x15b75>
  419468:	mov    rdi,r12
  41946b:	call   424890 <strcmp@plt+0x210d8>
  419470:	mov    rdi,rbx
  419473:	mov    rbp,rax
  419476:	call   424890 <strcmp@plt+0x210d8>
  41947b:	lea    rsi,[rip+0x32916]        # 44bd98 <strcmp@plt+0x485e0>
  419482:	mov    rcx,rbp
  419485:	mov    rdx,rax
  419488:	mov    edi,0x5
  41948d:	xor    eax,eax
  41948f:	xor    ebp,ebp
  419491:	call   4306a0 <strcmp@plt+0x2cee8>
  419496:	jmp    41932f <strcmp@plt+0x15b77>
  41949b:	mov    eax,DWORD PTR [rax]
  41949d:	test   eax,eax
  41949f:	jle    41932f <strcmp@plt+0x15b77>
  4194a5:	movzx  r14d,WORD PTR [rbx+0x42]
  4194aa:	movzx  r13d,WORD PTR [rbx+0x40]
  4194af:	mov    rdi,r12
  4194b2:	call   424890 <strcmp@plt+0x210d8>
  4194b7:	mov    rdi,rbx
  4194ba:	mov    r12,rax
  4194bd:	call   424890 <strcmp@plt+0x210d8>
  4194c2:	lea    rsi,[rip+0x32907]        # 44bdd0 <strcmp@plt+0x48618>
  4194c9:	mov    rdx,rax
  4194cc:	mov    r9d,r14d
  4194cf:	mov    r8d,r13d
  4194d2:	mov    rcx,r12
  4194d5:	mov    edi,0x5
  4194da:	xor    eax,eax
  4194dc:	call   4306a0 <strcmp@plt+0x2cee8>
  4194e1:	jmp    41932f <strcmp@plt+0x15b77>
  4194e6:	mov    rdi,r14
  4194e9:	mov    ebp,0xfffffff7
  4194ee:	call   424890 <strcmp@plt+0x210d8>
  4194f3:	lea    rsi,[rip+0x3279e]        # 44bc98 <strcmp@plt+0x484e0>
  4194fa:	mov    rdx,rax
  4194fd:	mov    edi,0x2
  419502:	xor    eax,eax
  419504:	call   4306a0 <strcmp@plt+0x2cee8>
  419509:	jmp    41932f <strcmp@plt+0x15b77>
  41950e:	xchg   ax,ax
  419510:	sub    rsp,0x8
  419514:	call   4251c0 <strcmp@plt+0x21a08>
  419519:	cmp    ax,0x2
  41951d:	setne  al
  419520:	add    rsp,0x8
  419524:	movzx  eax,al
  419527:	add    eax,0x1
  41952a:	ret    
  41952b:	nop    DWORD PTR [rax+rax*1+0x0]
  419530:	push   rbp
  419531:	push   rbx
  419532:	mov    rbx,rdi
  419535:	lea    rdi,[rdi+0x4]
  419539:	mov    ebp,edx
  41953b:	sub    rsp,0x8
  41953f:	mov    QWORD PTR [rdi-0x4],0x0
  419547:	mov    BYTE PTR [rdi-0x4],0x8
  41954b:	call   436dc0 <strcmp@plt+0x33608>
  419550:	mov    BYTE PTR [rbx+0x3],bpl
  419554:	or     BYTE PTR [rbx],0x4
  419557:	add    rsp,0x8
  41955b:	pop    rbx
  41955c:	pop    rbp
  41955d:	ret    
  41955e:	xchg   ax,ax
  419560:	push   r12
  419562:	push   rbp
  419563:	mov    r12d,edx
  419566:	push   rbx
  419567:	mov    ebp,esi
  419569:	mov    esi,0x8
  41956e:	call   4301c0 <strcmp@plt+0x2ca08>
  419573:	mov    edx,r12d
  419576:	mov    rbx,rax
  419579:	mov    esi,ebp
  41957b:	mov    rdi,rax
  41957e:	call   419530 <strcmp@plt+0x15d78>
  419583:	mov    rax,rbx
  419586:	pop    rbx
  419587:	pop    rbp
  419588:	pop    r12
  41958a:	ret    
  41958b:	nop    DWORD PTR [rax+rax*1+0x0]
  419590:	push   r15
  419592:	push   r14
  419594:	mov    r14,r8
  419597:	push   r13
  419599:	push   r12
  41959b:	mov    r12d,edx
  41959e:	push   rbp
  41959f:	push   rbx
  4195a0:	mov    rbx,rdi
  4195a3:	mov    ebp,esi
  4195a5:	mov    r13,rcx
  4195a8:	sub    rsp,0x28
  4195ac:	mov    rdi,QWORD PTR [rdi+0x38]
  4195b0:	mov    r15,QWORD PTR [rsp+0x60]
  4195b5:	lea    rdx,[rsp+0x14]
  4195ba:	lea    rsi,[rsp+0x10]
  4195bf:	mov    DWORD PTR [rsp+0xc],r9d
  4195c4:	mov    DWORD PTR [rsp+0x10],0x0
  4195cc:	mov    rax,QWORD PTR fs:0x28
  4195d5:	mov    QWORD PTR [rsp+0x18],rax
  4195da:	xor    eax,eax
  4195dc:	mov    DWORD PTR [rsp+0x14],0x0
  4195e4:	call   436930 <strcmp@plt+0x33178>
  4195e9:	mov    rdi,r15
  4195ec:	call   4251c0 <strcmp@plt+0x21a08>
  4195f1:	cmp    ax,0x2
  4195f5:	mov    r9d,DWORD PTR [rsp+0xc]
  4195fa:	je     419630 <strcmp@plt+0x15e78>
  4195fc:	cmp    ax,0xa
  419600:	mov    edx,0x2
  419605:	je     419635 <strcmp@plt+0x15e7d>
  419607:	mov    rax,0x468e3c
  41960e:	mov    eax,DWORD PTR [rax]
  419610:	test   eax,eax
  419612:	jle    419627 <strcmp@plt+0x15e6f>
  419614:	lea    rsi,[rip+0x327e5]        # 44be00 <strcmp@plt+0x48648>
  41961b:	mov    edi,0x5
  419620:	xor    eax,eax
  419622:	call   4306a0 <strcmp@plt+0x2cee8>
  419627:	xor    eax,eax
  419629:	jmp    419679 <strcmp@plt+0x15ec1>
  41962b:	nop    DWORD PTR [rax+rax*1+0x0]
  419630:	mov    edx,0x1
  419635:	mov    esi,r9d
  419638:	mov    rdi,rbx
  41963b:	call   419560 <strcmp@plt+0x15da8>
  419640:	movzx  edx,r12w
  419644:	movzx  esi,bp
  419647:	mov    rdi,rbx
  41964a:	mov    r8,r14
  41964d:	mov    rcx,r13
  419650:	call   435a10 <strcmp@plt+0x32258>
  419655:	movzx  eax,WORD PTR [rbx+0x1a]
  419659:	xor    edi,edi
  41965b:	mov    edx,DWORD PTR [rsp+0x14]
  41965f:	mov    esi,DWORD PTR [rsp+0x10]
  419663:	cmp    ax,0xffff
  419667:	je     419670 <strcmp@plt+0x15eb8>
  419669:	add    rax,QWORD PTR [rbx+0x30]
  41966d:	mov    rdi,rax
  419670:	call   4368c0 <strcmp@plt+0x33108>
  419675:	mov    rax,QWORD PTR [rbx+0x38]
  419679:	mov    rcx,QWORD PTR [rsp+0x18]
  41967e:	xor    rcx,QWORD PTR fs:0x28
  419687:	jne    419698 <strcmp@plt+0x15ee0>
  419689:	add    rsp,0x28
  41968d:	pop    rbx
  41968e:	pop    rbp
  41968f:	pop    r12
  419691:	pop    r13
  419693:	pop    r14
  419695:	pop    r15
  419697:	ret    
  419698:	call   403460 <__stack_chk_fail@plt>
  41969d:	nop    DWORD PTR [rax]
  4196a0:	mov    edx,DWORD PTR [rdi+0x14]
  4196a3:	cmp    edx,0x7
  4196a6:	jbe    4196c0 <strcmp@plt+0x15f08>
  4196a8:	mov    rax,QWORD PTR [rdi+0x38]
  4196ac:	sub    edx,0x8
  4196af:	mov    DWORD PTR [rdi+0x14],edx
  4196b2:	lea    rcx,[rax+0x8]
  4196b6:	mov    QWORD PTR [rdi+0x38],rcx
  4196ba:	ret    
  4196bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4196c0:	xor    eax,eax
  4196c2:	ret    
  4196c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4196ce:	xchg   ax,ax
  4196d0:	add    rdi,0x4
  4196d4:	jmp    436e10 <strcmp@plt+0x33658>
  4196d9:	nop    DWORD PTR [rax+0x0]
  4196e0:	mov    rdx,0x4687e0
  4196e7:	mov    rax,0x46c558
  4196ee:	mov    QWORD PTR [rax],rdx
  4196f1:	ret    
  4196f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4196fc:	nop    DWORD PTR [rax+0x0]
  419700:	push   rbx
  419701:	mov    esi,0x28
  419706:	mov    rbx,rdi
  419709:	mov    edi,0x1
  41970e:	call   4032e0 <calloc@plt>
  419713:	mov    QWORD PTR [rbx],rax
  419716:	lea    rax,[rbx+0x8]
  41971a:	mov    QWORD PTR [rbx+0x8],rax
  41971e:	mov    QWORD PTR [rbx+0x10],rax
  419722:	pop    rbx
  419723:	ret    
  419724:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41972f:	nop
  419730:	push   r12
  419732:	push   rbp
  419733:	push   rbx
  419734:	mov    r12,QWORD PTR [rdi]
  419737:	mov    eax,DWORD PTR [r12]
  41973b:	test   eax,eax
  41973d:	je     419794 <strcmp@plt+0x15fdc>
  41973f:	mov    rbp,rdi
  419742:	xor    ebx,ebx
  419744:	jmp    419759 <strcmp@plt+0x15fa1>
  419746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419750:	add    ebx,0x1
  419753:	cmp    DWORD PTR [r12],ebx
  419757:	je     419794 <strcmp@plt+0x15fdc>
  419759:	mov    rsi,QWORD PTR [r12+0x10]
  41975e:	lea    eax,[rbx+rbx*1]
  419761:	mov    ecx,ebx
  419763:	shr    ecx,0x4
  419766:	and    eax,0x1e
  419769:	mov    edx,eax
  41976b:	mov    eax,DWORD PTR [rsi+rcx*4]
  41976e:	shrx   eax,eax,edx
  419773:	test   al,0x3
  419775:	jne    419750 <strcmp@plt+0x15f98>
  419777:	mov    rdx,QWORD PTR [r12+0x20]
  41977c:	mov    eax,ebx
  41977e:	add    ebx,0x1
  419781:	mov    rdi,QWORD PTR [rdx+rax*8]
  419785:	call   421b40 <strcmp@plt+0x1e388>
  41978a:	mov    r12,QWORD PTR [rbp+0x0]
  41978e:	cmp    DWORD PTR [r12],ebx
  419792:	jne    419759 <strcmp@plt+0x15fa1>
  419794:	mov    rdi,QWORD PTR [r12+0x18]
  419799:	call   4037b0 <free@plt>
  41979e:	mov    rdi,QWORD PTR [r12+0x10]
  4197a3:	call   4037b0 <free@plt>
  4197a8:	mov    rdi,QWORD PTR [r12+0x20]
  4197ad:	call   4037b0 <free@plt>
  4197b2:	pop    rbx
  4197b3:	mov    rdi,r12
  4197b6:	pop    rbp
  4197b7:	pop    r12
  4197b9:	jmp    4037b0 <free@plt>
  4197be:	xchg   ax,ax
  4197c0:	push   rbx
  4197c1:	mov    edi,0x18
  4197c6:	call   434790 <strcmp@plt+0x30fd8>
  4197cb:	mov    rbx,rax
  4197ce:	mov    rdi,rax
  4197d1:	call   419700 <strcmp@plt+0x15f48>
  4197d6:	mov    rax,rbx
  4197d9:	pop    rbx
  4197da:	ret    
  4197db:	nop    DWORD PTR [rax+rax*1+0x0]
  4197e0:	push   rbx
  4197e1:	mov    rbx,rdi
  4197e4:	call   419730 <strcmp@plt+0x15f78>
  4197e9:	mov    rdi,rbx
  4197ec:	pop    rbx
  4197ed:	jmp    4037b0 <free@plt>
  4197f2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4197fd:	nop    DWORD PTR [rax]
  419800:	push   r15
  419802:	push   r14
  419804:	push   r13
  419806:	push   r12
  419808:	push   rbp
  419809:	push   rbx
  41980a:	sub    rsp,0x38
  41980e:	mov    r15,QWORD PTR [rdi]
  419811:	mov    QWORD PTR [rsp+0x18],rdi
  419816:	mov    QWORD PTR [rsp+0x8],rsi
  41981b:	mov    QWORD PTR [rsp+0x20],rdx
  419820:	mov    eax,DWORD PTR [r15+0x4]
  419824:	cmp    eax,0x270f
  419829:	jbe    419860 <strcmp@plt+0x160a8>
  41982b:	mov    rax,0x468e3c
  419832:	mov    ecx,DWORD PTR [rax]
  419834:	test   ecx,ecx
  419836:	jg     419849 <strcmp@plt+0x16091>
  419838:	add    rsp,0x38
  41983c:	xor    eax,eax
  41983e:	pop    rbx
  41983f:	pop    rbp
  419840:	pop    r12
  419842:	pop    r13
  419844:	pop    r14
  419846:	pop    r15
  419848:	ret    
  419849:	lea    rsi,[rip+0x325e8]        # 44be38 <strcmp@plt+0x48680>
  419850:	mov    edi,0x5
  419855:	xor    eax,eax
  419857:	call   4306a0 <strcmp@plt+0x2cee8>
  41985c:	jmp    419838 <strcmp@plt+0x16080>
  41985e:	xchg   ax,ax
  419860:	mov    ebx,DWORD PTR [r15+0xc]
  419864:	cmp    DWORD PTR [r15+0x8],ebx
  419868:	jae    419938 <strcmp@plt+0x16180>
  41986e:	mov    eax,DWORD PTR [r15]
  419871:	lea    ebx,[rax-0x1]
  419874:	mov    DWORD PTR [rsp+0x28],eax
  419878:	mov    rdi,QWORD PTR [rsp+0x8]
  41987d:	call   436140 <strcmp@plt+0x32988>
  419882:	mov    r14d,eax
  419885:	mov    rsi,QWORD PTR [r15+0x10]
  419889:	and    r14d,ebx
  41988c:	mov    r13d,r14d
  41988f:	lea    r12d,[r14+r14*1]
  419893:	shr    r13d,0x4
  419897:	shl    r13,0x2
  41989b:	and    r12d,0x1e
  41989f:	lea    rcx,[rsi+r13*1]
  4198a3:	mov    edi,DWORD PTR [rcx]
  4198a5:	shrx   edx,edi,r12d
  4198aa:	test   dl,0x2
  4198ad:	je     419b06 <strcmp@plt+0x1634e>
  4198b3:	mov    rdx,QWORD PTR [r15+0x18]
  4198b7:	mov    rbx,QWORD PTR [rsp+0x8]
  4198bc:	lea    rax,[r14*8+0x0]
  4198c4:	mov    QWORD PTR [rdx+r14*8],rbx
  4198c8:	mov    edx,0x3
  4198cd:	shlx   r12,rdx,r12
  4198d2:	andn   edi,r12d,edi
  4198d7:	mov    DWORD PTR [rcx],edi
  4198d9:	add    DWORD PTR [r15+0x4],0x1
  4198de:	add    DWORD PTR [r15+0x8],0x1
  4198e3:	mov    rbx,QWORD PTR [rsp+0x18]
  4198e8:	mov    rdx,QWORD PTR [rbx]
  4198eb:	mov    rbx,QWORD PTR [rsp+0x20]
  4198f0:	mov    rdx,QWORD PTR [rdx+0x20]
  4198f4:	mov    QWORD PTR [rdx+rax*1],rbx
  4198f8:	mov    rax,0x468e3c
  4198ff:	cmp    DWORD PTR [rax],0x2
  419902:	jle    419924 <strcmp@plt+0x1616c>
  419904:	mov    rdi,QWORD PTR [rsp+0x8]
  419909:	call   436380 <strcmp@plt+0x32bc8>
  41990e:	lea    rsi,[rip+0x3255b]        # 44be70 <strcmp@plt+0x486b8>
  419915:	mov    rdx,rax
  419918:	mov    edi,0x7
  41991d:	xor    eax,eax
  41991f:	call   4306a0 <strcmp@plt+0x2cee8>
  419924:	add    rsp,0x38
  419928:	mov    eax,0x1
  41992d:	pop    rbx
  41992e:	pop    rbp
  41992f:	pop    r12
  419931:	pop    r13
  419933:	pop    r14
  419935:	pop    r15
  419937:	ret    
  419938:	mov    ebx,DWORD PTR [r15]
  41993b:	lea    edx,[rax+rax*1]
  41993e:	cmp    ebx,edx
  419940:	mov    DWORD PTR [rsp+0x28],ebx
  419944:	mov    esi,ebx
  419946:	jbe    419bc3 <strcmp@plt+0x1640b>
  41994c:	sub    ebx,0x2
  41994f:	mov    edx,ebx
  419951:	shr    edx,1
  419953:	or     ebx,edx
  419955:	mov    edx,ebx
  419957:	shr    edx,0x2
  41995a:	or     ebx,edx
  41995c:	mov    edx,ebx
  41995e:	shr    edx,0x4
  419961:	or     ebx,edx
  419963:	mov    edx,ebx
  419965:	shr    edx,0x8
  419968:	or     ebx,edx
  41996a:	mov    edx,ebx
  41996c:	shr    edx,0x10
  41996f:	or     ebx,edx
  419971:	lea    edx,[rbx+0x1]
  419974:	cmp    edx,0x3
  419977:	jbe    419e44 <strcmp@plt+0x1668c>
  41997d:	vxorpd xmm0,xmm0,xmm0
  419981:	mov    ecx,edx
  419983:	vmovsd xmm1,QWORD PTR [rip+0x3256d]        # 44bef8 <strcmp@plt+0x48740>
  41998b:	vcvtsi2sd xmm0,xmm0,rcx
  419990:	vfmadd132sd xmm0,xmm1,QWORD PTR [rip+0x32557]        # 44bef0 <strcmp@plt+0x48738>
  419999:	vcvttsd2si rcx,xmm0
  41999e:	cmp    eax,ecx
  4199a0:	mov    DWORD PTR [rsp+0x2c],ecx
  4199a4:	jae    419f32 <strcmp@plt+0x1677a>
  4199aa:	cmp    edx,0xf
  4199ad:	jbe    41a011 <strcmp@plt+0x16859>
  4199b3:	mov    ebp,edx
  4199b5:	mov    DWORD PTR [rsp+0x28],edx
  4199b9:	shr    ebp,0x4
  4199bc:	shl    rbp,0x2
  4199c0:	mov    rdi,rbp
  4199c3:	call   403530 <malloc@plt>
  4199c8:	mov    rdx,rbp
  4199cb:	mov    esi,0xaa
  4199d0:	mov    rdi,rax
  4199d3:	mov    r13,rax
  4199d6:	call   403250 <memset@plt>
  4199db:	mov    eax,DWORD PTR [rsp+0x28]
  4199df:	cmp    DWORD PTR [r15],eax
  4199e2:	jb     419f8e <strcmp@plt+0x167d6>
  4199e8:	mov    DWORD PTR [rsp+0x10],0x0
  4199f0:	jmp    419a07 <strcmp@plt+0x1624f>
  4199f2:	mov    r8d,DWORD PTR [r15]
  4199f5:	add    DWORD PTR [rsp+0x10],0x1
  4199fa:	mov    eax,DWORD PTR [rsp+0x10]
  4199fe:	cmp    eax,r8d
  419a01:	je     419e9a <strcmp@plt+0x166e2>
  419a07:	mov    esi,DWORD PTR [rsp+0x10]
  419a0b:	mov    rdx,QWORD PTR [r15+0x10]
  419a0f:	mov    eax,esi
  419a11:	shr    eax,0x4
  419a14:	lea    rcx,[rdx+rax*4]
  419a18:	mov    eax,esi
  419a1a:	add    eax,eax
  419a1c:	mov    edx,DWORD PTR [rcx]
  419a1e:	and    eax,0x1e
  419a21:	shrx   esi,edx,eax
  419a26:	and    esi,0x3
  419a29:	jne    4199f2 <strcmp@plt+0x1623a>
  419a2b:	mov    edi,DWORD PTR [rsp+0x10]
  419a2f:	mov    rsi,QWORD PTR [r15+0x18]
  419a33:	mov    r14d,0x2
  419a39:	mov    r8,QWORD PTR [r15+0x20]
  419a3d:	mov    r12,QWORD PTR [rsi+rdi*8]
  419a41:	mov    esi,0x1
  419a46:	mov    rbp,QWORD PTR [r8+rdi*8]
  419a4a:	shlx   rax,rsi,rax
  419a4f:	or     eax,edx
  419a51:	mov    DWORD PTR [rcx],eax
  419a53:	nop    DWORD PTR [rax+rax*1+0x0]
  419a58:	mov    rdi,r12
  419a5b:	call   436140 <strcmp@plt+0x32988>
  419a60:	mov    r9d,eax
  419a63:	mov    edx,eax
  419a65:	shl    eax,0x3
  419a68:	shr    r9d,0x3
  419a6c:	and    edx,ebx
  419a6e:	xor    r9d,eax
  419a71:	or     r9d,0x1
  419a75:	and    r9d,ebx
  419a78:	jmp    419a85 <strcmp@plt+0x162cd>
  419a7a:	nop    WORD PTR [rax+rax*1+0x0]
  419a80:	add    edx,r9d
  419a83:	and    edx,ebx
  419a85:	mov    eax,edx
  419a87:	lea    ecx,[rdx+rdx*1]
  419a8a:	shr    eax,0x4
  419a8d:	shl    rax,0x2
  419a91:	and    ecx,0x1e
  419a94:	lea    rsi,[r13+rax*1+0x0]
  419a99:	mov    edi,DWORD PTR [rsi]
  419a9b:	shrx   r8d,edi,ecx
  419aa0:	and    r8d,0x2
  419aa4:	je     419a80 <strcmp@plt+0x162c8>
  419aa6:	shlx   r8,r14,rcx
  419aab:	andn   edi,r8d,edi
  419ab0:	mov    DWORD PTR [rsi],edi
  419ab2:	mov    r8d,DWORD PTR [r15]
  419ab5:	cmp    r8d,edx
  419ab8:	jbe    419e85 <strcmp@plt+0x166cd>
  419abe:	add    rax,QWORD PTR [r15+0x10]
  419ac2:	mov    esi,DWORD PTR [rax]
  419ac4:	shrx   edi,esi,ecx
  419ac9:	and    edi,0x3
  419acc:	jne    419e85 <strcmp@plt+0x166cd>
  419ad2:	shl    rdx,0x3
  419ad6:	mov    rdi,rdx
  419ad9:	add    rdx,QWORD PTR [r15+0x20]
  419add:	add    rdi,QWORD PTR [r15+0x18]
  419ae1:	mov    r8,QWORD PTR [rdi]
  419ae4:	mov    QWORD PTR [rdi],r12
  419ae7:	mov    rdi,QWORD PTR [rdx]
  419aea:	mov    QWORD PTR [rdx],rbp
  419aed:	mov    edx,0x1
  419af2:	shlx   rcx,rdx,rcx
  419af7:	or     ecx,esi
  419af9:	mov    r12,r8
  419afc:	mov    DWORD PTR [rax],ecx
  419afe:	mov    rbp,rdi
  419b01:	jmp    419a58 <strcmp@plt+0x162a0>
  419b06:	mov    ecx,eax
  419b08:	shl    eax,0x3
  419b0b:	mov    r8d,DWORD PTR [rsp+0x28]
  419b10:	shr    ecx,0x3
  419b13:	mov    r9,r13
  419b16:	mov    ebp,r14d
  419b19:	xor    eax,ecx
  419b1b:	or     eax,0x1
  419b1e:	mov    r13d,r8d
  419b21:	mov    ecx,eax
  419b23:	mov    eax,ebx
  419b25:	and    ecx,ebx
  419b27:	mov    rbx,r15
  419b2a:	mov    r15d,ecx
  419b2d:	mov    ecx,eax
  419b2f:	jmp    419b73 <strcmp@plt+0x163bb>
  419b31:	nop    DWORD PTR [rax+0x0]
  419b38:	mov    rax,rsi
  419b3b:	mov    r13d,ebp
  419b3e:	add    ebp,r15d
  419b41:	and    ebp,ecx
  419b43:	cmp    r14d,ebp
  419b46:	je     419e0c <strcmp@plt+0x16654>
  419b4c:	mov    edx,ebp
  419b4e:	lea    r12d,[rbp+rbp*1+0x0]
  419b53:	shr    edx,0x4
  419b56:	lea    r9,[rdx*4+0x0]
  419b5e:	mov    edx,DWORD PTR [rsi+rdx*4]
  419b61:	and    r12d,0x1e
  419b65:	shrx   edx,edx,r12d
  419b6a:	test   dl,0x2
  419b6d:	jne    419d8e <strcmp@plt+0x165d6>
  419b73:	and    edx,0x1
  419b76:	jne    419b38 <strcmp@plt+0x16380>
  419b78:	mov    rdx,QWORD PTR [rbx+0x18]
  419b7c:	mov    eax,ebp
  419b7e:	mov    rsi,QWORD PTR [rsp+0x8]
  419b83:	mov    DWORD PTR [rsp+0x2c],ecx
  419b87:	mov    QWORD PTR [rsp+0x10],r9
  419b8c:	mov    rdi,QWORD PTR [rdx+rax*8]
  419b90:	call   4362b0 <strcmp@plt+0x32af8>
  419b95:	test   eax,eax
  419b97:	mov    r9,QWORD PTR [rsp+0x10]
  419b9c:	mov    ecx,DWORD PTR [rsp+0x2c]
  419ba0:	jne    419f7f <strcmp@plt+0x167c7>
  419ba6:	mov    rsi,QWORD PTR [rbx+0x10]
  419baa:	mov    edx,DWORD PTR [rsi+r9*1]
  419bae:	mov    rax,rsi
  419bb1:	shrx   r12d,edx,r12d
  419bb6:	and    r12d,0x1
  419bba:	cmovne r13d,ebp
  419bbe:	jmp    419b3e <strcmp@plt+0x16386>
  419bc3:	mov    esi,DWORD PTR [rsp+0x28]
  419bc7:	mov    ebx,esi
  419bc9:	shr    ebx,1
  419bcb:	or     ebx,esi
  419bcd:	mov    edx,ebx
  419bcf:	shr    edx,0x2
  419bd2:	or     ebx,edx
  419bd4:	mov    edx,ebx
  419bd6:	shr    edx,0x4
  419bd9:	or     ebx,edx
  419bdb:	mov    edx,ebx
  419bdd:	shr    edx,0x8
  419be0:	or     ebx,edx
  419be2:	lea    edx,[rbx+0x1]
  419be5:	cmp    edx,0x3
  419be8:	jbe    419e1c <strcmp@plt+0x16664>
  419bee:	vxorpd xmm0,xmm0,xmm0
  419bf2:	vmovsd xmm2,QWORD PTR [rip+0x322fe]        # 44bef8 <strcmp@plt+0x48740>
  419bfa:	vcvtsi2sd xmm0,xmm0,edx
  419bfe:	vfmadd132sd xmm0,xmm2,QWORD PTR [rip+0x322e9]        # 44bef0 <strcmp@plt+0x48738>
  419c07:	vcvttsd2si rcx,xmm0
  419c0c:	cmp    eax,ecx
  419c0e:	mov    DWORD PTR [rsp+0x2c],ecx
  419c12:	jae    419f32 <strcmp@plt+0x1677a>
  419c18:	cmp    edx,0xf
  419c1b:	jbe    41a029 <strcmp@plt+0x16871>
  419c21:	mov    ebp,edx
  419c23:	mov    DWORD PTR [rsp+0x28],edx
  419c27:	shr    ebp,0x4
  419c2a:	shl    rbp,0x2
  419c2e:	mov    rdi,rbp
  419c31:	call   403530 <malloc@plt>
  419c36:	cmp    ebp,0x8
  419c39:	mov    r13,rax
  419c3c:	mov    edx,ebp
  419c3e:	movabs rax,0xaaaaaaaaaaaaaaaa
  419c48:	jae    419f67 <strcmp@plt+0x167af>
  419c4e:	and    ebp,0x4
  419c51:	jne    41a003 <strcmp@plt+0x1684b>
  419c57:	test   edx,edx
  419c59:	je     419c68 <strcmp@plt+0x164b0>
  419c5b:	test   dl,0x2
  419c5e:	mov    BYTE PTR [r13+0x0],al
  419c62:	jne    41a037 <strcmp@plt+0x1687f>
  419c68:	mov    eax,DWORD PTR [rsp+0x28]
  419c6c:	cmp    DWORD PTR [r15],eax
  419c6f:	jb     419fcd <strcmp@plt+0x16815>
  419c75:	mov    DWORD PTR [rsp+0x10],0x0
  419c7d:	jmp    419c94 <strcmp@plt+0x164dc>
  419c7f:	mov    r8d,DWORD PTR [r15]
  419c82:	add    DWORD PTR [rsp+0x10],0x1
  419c87:	mov    eax,DWORD PTR [rsp+0x10]
  419c8b:	cmp    eax,r8d
  419c8e:	je     419e9a <strcmp@plt+0x166e2>
  419c94:	mov    esi,DWORD PTR [rsp+0x10]
  419c98:	mov    rdx,QWORD PTR [r15+0x10]
  419c9c:	mov    eax,esi
  419c9e:	shr    eax,0x4
  419ca1:	lea    rcx,[rdx+rax*4]
  419ca5:	mov    eax,esi
  419ca7:	add    eax,eax
  419ca9:	mov    edx,DWORD PTR [rcx]
  419cab:	and    eax,0x1e
  419cae:	shrx   esi,edx,eax
  419cb3:	and    esi,0x3
  419cb6:	jne    419c7f <strcmp@plt+0x164c7>
  419cb8:	mov    edi,DWORD PTR [rsp+0x10]
  419cbc:	mov    rsi,QWORD PTR [r15+0x18]
  419cc0:	mov    r14d,0x2
  419cc6:	mov    r8,QWORD PTR [r15+0x20]
  419cca:	mov    r12,QWORD PTR [rsi+rdi*8]
  419cce:	mov    esi,0x1
  419cd3:	mov    rbp,QWORD PTR [r8+rdi*8]
  419cd7:	shlx   rax,rsi,rax
  419cdc:	or     eax,edx
  419cde:	mov    DWORD PTR [rcx],eax
  419ce0:	mov    rdi,r12
  419ce3:	call   436140 <strcmp@plt+0x32988>
  419ce8:	mov    r9d,eax
  419ceb:	mov    edx,eax
  419ced:	shl    eax,0x3
  419cf0:	shr    r9d,0x3
  419cf4:	and    edx,ebx
  419cf6:	xor    r9d,eax
  419cf9:	or     r9d,0x1
  419cfd:	and    r9d,ebx
  419d00:	jmp    419d0d <strcmp@plt+0x16555>
  419d02:	nop    WORD PTR [rax+rax*1+0x0]
  419d08:	add    edx,r9d
  419d0b:	and    edx,ebx
  419d0d:	mov    eax,edx
  419d0f:	lea    ecx,[rdx+rdx*1]
  419d12:	shr    eax,0x4
  419d15:	shl    rax,0x2
  419d19:	and    ecx,0x1e
  419d1c:	lea    rsi,[r13+rax*1+0x0]
  419d21:	mov    edi,DWORD PTR [rsi]
  419d23:	shrx   r8d,edi,ecx
  419d28:	and    r8d,0x2
  419d2c:	je     419d08 <strcmp@plt+0x16550>
  419d2e:	shlx   r8,r14,rcx
  419d33:	andn   edi,r8d,edi
  419d38:	mov    DWORD PTR [rsi],edi
  419d3a:	mov    r8d,DWORD PTR [r15]
  419d3d:	cmp    edx,r8d
  419d40:	jae    419e70 <strcmp@plt+0x166b8>
  419d46:	add    rax,QWORD PTR [r15+0x10]
  419d4a:	mov    esi,DWORD PTR [rax]
  419d4c:	shrx   edi,esi,ecx
  419d51:	and    edi,0x3
  419d54:	jne    419e70 <strcmp@plt+0x166b8>
  419d5a:	shl    rdx,0x3
  419d5e:	mov    rdi,rdx
  419d61:	add    rdx,QWORD PTR [r15+0x20]
  419d65:	add    rdi,QWORD PTR [r15+0x18]
  419d69:	mov    r8,QWORD PTR [rdi]
  419d6c:	mov    QWORD PTR [rdi],r12
  419d6f:	mov    rdi,QWORD PTR [rdx]
  419d72:	mov    QWORD PTR [rdx],rbp
  419d75:	mov    edx,0x1
  419d7a:	shlx   rcx,rdx,rcx
  419d7f:	or     ecx,esi
  419d81:	mov    r12,r8
  419d84:	mov    DWORD PTR [rax],ecx
  419d86:	mov    rbp,rdi
  419d89:	jmp    419ce0 <strcmp@plt+0x16528>
  419d8e:	mov    r15,rbx
  419d91:	mov    r8d,r13d
  419d94:	mov    ebx,DWORD PTR [rsp+0x28]
  419d98:	cmp    DWORD PTR [r15],ebx
  419d9b:	je     419edb <strcmp@plt+0x16723>
  419da1:	mov    edx,ebx
  419da3:	lea    r12d,[rbx+rbx*1]
  419da7:	shr    edx,0x4
  419daa:	lea    rcx,[rax+rdx*4]
  419dae:	and    r12d,0x1e
  419db2:	mov    edi,DWORD PTR [rcx]
  419db4:	shrx   edx,edi,r12d
  419db9:	mov    esi,edx
  419dbb:	and    esi,0x2
  419dbe:	test   esi,esi
  419dc0:	jne    41a01f <strcmp@plt+0x16867>
  419dc6:	and    edx,0x1
  419dc9:	jne    419dd8 <strcmp@plt+0x16620>
  419dcb:	mov    eax,DWORD PTR [rsp+0x28]
  419dcf:	shl    rax,0x3
  419dd3:	jmp    4198e3 <strcmp@plt+0x1612b>
  419dd8:	mov    edx,DWORD PTR [rsp+0x28]
  419ddc:	mov    rsi,QWORD PTR [r15+0x18]
  419de0:	mov    rbx,QWORD PTR [rsp+0x8]
  419de5:	lea    rax,[rdx*8+0x0]
  419ded:	mov    QWORD PTR [rsi+rdx*8],rbx
  419df1:	mov    edx,0x3
  419df6:	shlx   r12,rdx,r12
  419dfb:	andn   edi,r12d,edi
  419e00:	mov    DWORD PTR [rcx],edi
  419e02:	add    DWORD PTR [r15+0x4],0x1
  419e07:	jmp    4198e3 <strcmp@plt+0x1612b>
  419e0c:	mov    r15,rbx
  419e0f:	mov    r8d,r13d
  419e12:	mov    DWORD PTR [rsp+0x28],r13d
  419e17:	jmp    419d94 <strcmp@plt+0x165dc>
  419e1c:	cmp    eax,0x2
  419e1f:	ja     419ecf <strcmp@plt+0x16717>
  419e25:	mov    ebx,0x3
  419e2a:	mov    DWORD PTR [rsp+0x2c],0x3
  419e32:	mov    DWORD PTR [rsp+0x28],0x4
  419e3a:	mov    ebp,0x4
  419e3f:	jmp    419c2e <strcmp@plt+0x16476>
  419e44:	cmp    eax,0x2
  419e47:	ja     419ecf <strcmp@plt+0x16717>
  419e4d:	mov    ebx,0x3
  419e52:	mov    DWORD PTR [rsp+0x2c],0x3
  419e5a:	mov    DWORD PTR [rsp+0x28],0x4
  419e62:	mov    ebp,0x4
  419e67:	jmp    4199c0 <strcmp@plt+0x16208>
  419e6c:	nop    DWORD PTR [rax+0x0]
  419e70:	mov    rax,QWORD PTR [r15+0x18]
  419e74:	mov    QWORD PTR [rax+rdx*8],r12
  419e78:	mov    rax,QWORD PTR [r15+0x20]
  419e7c:	mov    QWORD PTR [rax+rdx*8],rbp
  419e80:	jmp    419c82 <strcmp@plt+0x164ca>
  419e85:	mov    rax,QWORD PTR [r15+0x18]
  419e89:	mov    QWORD PTR [rax+rdx*8],r12
  419e8d:	mov    rax,QWORD PTR [r15+0x20]
  419e91:	mov    QWORD PTR [rax+rdx*8],rbp
  419e95:	jmp    4199f5 <strcmp@plt+0x1623d>
  419e9a:	mov    esi,DWORD PTR [rsp+0x28]
  419e9e:	cmp    eax,esi
  419ea0:	ja     419f3c <strcmp@plt+0x16784>
  419ea6:	mov    rdi,QWORD PTR [r15+0x10]
  419eaa:	call   4037b0 <free@plt>
  419eaf:	mov    eax,DWORD PTR [rsp+0x28]
  419eb3:	mov    QWORD PTR [r15+0x10],r13
  419eb7:	mov    DWORD PTR [r15],eax
  419eba:	mov    eax,DWORD PTR [r15+0x4]
  419ebe:	mov    DWORD PTR [r15+0x8],eax
  419ec2:	mov    eax,DWORD PTR [rsp+0x2c]
  419ec6:	mov    DWORD PTR [r15+0xc],eax
  419eca:	jmp    419878 <strcmp@plt+0x160c0>
  419ecf:	mov    eax,DWORD PTR [rsp+0x28]
  419ed3:	lea    ebx,[rax-0x1]
  419ed6:	jmp    419878 <strcmp@plt+0x160c0>
  419edb:	mov    edx,ebp
  419edd:	lea    r12d,[rbp+rbp*1+0x0]
  419ee2:	shr    edx,0x4
  419ee5:	lea    rcx,[rax+rdx*4]
  419ee9:	and    r12d,0x1e
  419eed:	mov    edi,DWORD PTR [rcx]
  419eef:	shrx   edx,edi,r12d
  419ef4:	mov    esi,edx
  419ef6:	and    esi,0x2
  419ef9:	je     419fc4 <strcmp@plt+0x1680c>
  419eff:	cmp    DWORD PTR [rsp+0x28],r8d
  419f04:	je     419fc4 <strcmp@plt+0x1680c>
  419f0a:	mov    edx,r8d
  419f0d:	lea    r12d,[r8+r8*1]
  419f11:	mov    DWORD PTR [rsp+0x28],r8d
  419f16:	shr    edx,0x4
  419f19:	lea    rcx,[rax+rdx*4]
  419f1d:	and    r12d,0x1e
  419f21:	mov    edi,DWORD PTR [rcx]
  419f23:	shrx   edx,edi,r12d
  419f28:	mov    esi,edx
  419f2a:	and    esi,0x2
  419f2d:	jmp    419dbe <strcmp@plt+0x16606>
  419f32:	mov    ebx,esi
  419f34:	sub    ebx,0x1
  419f37:	jmp    419878 <strcmp@plt+0x160c0>
  419f3c:	mov    ebp,esi
  419f3e:	mov    rdi,QWORD PTR [r15+0x18]
  419f42:	shl    rbp,0x3
  419f46:	mov    rsi,rbp
  419f49:	call   403670 <realloc@plt>
  419f4e:	mov    rdi,QWORD PTR [r15+0x20]
  419f52:	mov    QWORD PTR [r15+0x18],rax
  419f56:	mov    rsi,rbp
  419f59:	call   403670 <realloc@plt>
  419f5e:	mov    QWORD PTR [r15+0x20],rax
  419f62:	jmp    419ea6 <strcmp@plt+0x166ee>
  419f67:	lea    edx,[rbp-0x1]
  419f6a:	mov    rdi,r13
  419f6d:	mov    QWORD PTR [r13+rbp*1-0x8],rax
  419f72:	shr    edx,0x3
  419f75:	mov    ecx,edx
  419f77:	rep stos QWORD PTR es:[rdi],rax
  419f7a:	jmp    419c68 <strcmp@plt+0x164b0>
  419f7f:	mov    r15,rbx
  419f82:	mov    r8d,r13d
  419f85:	mov    rax,QWORD PTR [rbx+0x10]
  419f89:	jmp    419d94 <strcmp@plt+0x165dc>
  419f8e:	mov    ebp,eax
  419f90:	mov    rdi,QWORD PTR [r15+0x18]
  419f94:	shl    rbp,0x3
  419f98:	mov    rsi,rbp
  419f9b:	call   403670 <realloc@plt>
  419fa0:	mov    rdi,QWORD PTR [r15+0x20]
  419fa4:	mov    QWORD PTR [r15+0x18],rax
  419fa8:	mov    rsi,rbp
  419fab:	call   403670 <realloc@plt>
  419fb0:	mov    edx,DWORD PTR [r15]
  419fb3:	mov    QWORD PTR [r15+0x20],rax
  419fb7:	test   edx,edx
  419fb9:	jne    4199e8 <strcmp@plt+0x16230>
  419fbf:	jmp    419ea6 <strcmp@plt+0x166ee>
  419fc4:	mov    DWORD PTR [rsp+0x28],ebp
  419fc8:	jmp    419dbe <strcmp@plt+0x16606>
  419fcd:	mov    ebp,eax
  419fcf:	mov    rdi,QWORD PTR [r15+0x18]
  419fd3:	shl    rbp,0x3
  419fd7:	mov    rsi,rbp
  419fda:	call   403670 <realloc@plt>
  419fdf:	mov    rdi,QWORD PTR [r15+0x20]
  419fe3:	mov    QWORD PTR [r15+0x18],rax
  419fe7:	mov    rsi,rbp
  419fea:	call   403670 <realloc@plt>
  419fef:	mov    QWORD PTR [r15+0x20],rax
  419ff3:	mov    eax,DWORD PTR [r15]
  419ff6:	test   eax,eax
  419ff8:	jne    419c75 <strcmp@plt+0x164bd>
  419ffe:	jmp    419ea6 <strcmp@plt+0x166ee>
  41a003:	mov    DWORD PTR [r13+0x0],eax
  41a007:	mov    DWORD PTR [r13+rdx*1-0x4],eax
  41a00c:	jmp    419c68 <strcmp@plt+0x164b0>
  41a011:	mov    DWORD PTR [rsp+0x28],edx
  41a015:	mov    ebp,0x4
  41a01a:	jmp    4199c0 <strcmp@plt+0x16208>
  41a01f:	mov    r14d,DWORD PTR [rsp+0x28]
  41a024:	jmp    4198b3 <strcmp@plt+0x160fb>
  41a029:	mov    DWORD PTR [rsp+0x28],edx
  41a02d:	mov    ebp,0x4
  41a032:	jmp    419c2e <strcmp@plt+0x16476>
  41a037:	mov    WORD PTR [r13+rdx*1-0x2],ax
  41a03d:	jmp    419c68 <strcmp@plt+0x164b0>
  41a042:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41a04d:	nop    DWORD PTR [rax]
  41a050:	push   r15
  41a052:	push   r14
  41a054:	push   r13
  41a056:	push   r12
  41a058:	push   rbp
  41a059:	push   rbx
  41a05a:	sub    rsp,0x28
  41a05e:	mov    r14,QWORD PTR [rdi]
  41a061:	mov    r15d,DWORD PTR [r14]
  41a064:	test   r15d,r15d
  41a067:	jne    41a080 <strcmp@plt+0x168c8>
  41a069:	add    rsp,0x28
  41a06d:	pop    rbx
  41a06e:	pop    rbp
  41a06f:	pop    r12
  41a071:	pop    r13
  41a073:	pop    r14
  41a075:	pop    r15
  41a077:	ret    
  41a078:	nop    DWORD PTR [rax+rax*1+0x0]
  41a080:	mov    QWORD PTR [rsp+0x18],rdi
  41a085:	sub    r15d,0x1
  41a089:	mov    rdi,rsi
  41a08c:	mov    QWORD PTR [rsp+0x10],rsi
  41a091:	mov    ebp,r15d
  41a094:	call   436140 <strcmp@plt+0x32988>
  41a099:	mov    edx,eax
  41a09b:	and    ebp,eax
  41a09d:	shl    eax,0x3
  41a0a0:	shr    edx,0x3
  41a0a3:	mov    ebx,ebp
  41a0a5:	xor    edx,eax
  41a0a7:	or     edx,0x1
  41a0aa:	and    edx,r15d
  41a0ad:	jmp    41a0b9 <strcmp@plt+0x16901>
  41a0af:	nop
  41a0b0:	add    ebx,edx
  41a0b2:	and    ebx,r15d
  41a0b5:	cmp    ebp,ebx
  41a0b7:	je     41a113 <strcmp@plt+0x1695b>
  41a0b9:	mov    rsi,QWORD PTR [r14+0x10]
  41a0bd:	mov    eax,ebx
  41a0bf:	lea    r13d,[rbx+rbx*1]
  41a0c3:	shr    eax,0x4
  41a0c6:	lea    r12,[rax*4+0x0]
  41a0ce:	and    r13d,0x1e
  41a0d2:	mov    eax,DWORD PTR [rsi+rax*4]
  41a0d5:	shrx   eax,eax,r13d
  41a0da:	test   al,0x2
  41a0dc:	jne    41a10f <strcmp@plt+0x16957>
  41a0de:	test   al,0x1
  41a0e0:	jne    41a0b0 <strcmp@plt+0x168f8>
  41a0e2:	mov    rsi,QWORD PTR [r14+0x18]
  41a0e6:	mov    eax,ebx
  41a0e8:	mov    DWORD PTR [rsp+0xc],edx
  41a0ec:	mov    rdi,QWORD PTR [rsi+rax*8]
  41a0f0:	mov    rsi,QWORD PTR [rsp+0x10]
  41a0f5:	call   4362b0 <strcmp@plt+0x32af8>
  41a0fa:	test   eax,eax
  41a0fc:	mov    edx,DWORD PTR [rsp+0xc]
  41a100:	je     41a0b0 <strcmp@plt+0x168f8>
  41a102:	mov    rax,QWORD PTR [r14+0x10]
  41a106:	mov    eax,DWORD PTR [rax+r12*1]
  41a10a:	shrx   eax,eax,r13d
  41a10f:	test   al,0x3
  41a111:	je     41a116 <strcmp@plt+0x1695e>
  41a113:	mov    ebx,DWORD PTR [r14]
  41a116:	mov    rax,QWORD PTR [rsp+0x18]
  41a11b:	mov    rdx,QWORD PTR [rax]
  41a11e:	cmp    DWORD PTR [rdx],ebx
  41a120:	je     41a069 <strcmp@plt+0x168b1>
  41a126:	mov    rdx,QWORD PTR [rdx+0x20]
  41a12a:	mov    eax,ebx
  41a12c:	mov    r13,QWORD PTR [rdx+rax*8]
  41a130:	mov    rax,0x468e3c
  41a137:	cmp    DWORD PTR [rax],0x2
  41a13a:	jle    41a15c <strcmp@plt+0x169a4>
  41a13c:	mov    rdi,QWORD PTR [rsp+0x10]
  41a141:	call   436380 <strcmp@plt+0x32bc8>
  41a146:	lea    rsi,[rip+0x31d4b]        # 44be98 <strcmp@plt+0x486e0>
  41a14d:	mov    rdx,rax
  41a150:	mov    edi,0x7
  41a155:	xor    eax,eax
  41a157:	call   4306a0 <strcmp@plt+0x2cee8>
  41a15c:	mov    rdi,r13
  41a15f:	call   421b40 <strcmp@plt+0x1e388>
  41a164:	mov    rax,QWORD PTR [rsp+0x18]
  41a169:	mov    rax,QWORD PTR [rax]
  41a16c:	cmp    ebx,DWORD PTR [rax]
  41a16e:	je     41a069 <strcmp@plt+0x168b1>
  41a174:	mov    rcx,QWORD PTR [rax+0x10]
  41a178:	mov    edx,ebx
  41a17a:	add    ebx,ebx
  41a17c:	shr    edx,0x4
  41a17f:	and    ebx,0x1e
  41a182:	lea    rcx,[rcx+rdx*4]
  41a186:	mov    edx,DWORD PTR [rcx]
  41a188:	shrx   esi,edx,ebx
  41a18d:	and    esi,0x3
  41a190:	jne    41a069 <strcmp@plt+0x168b1>
  41a196:	mov    esi,0x1
  41a19b:	shlx   rbx,rsi,rbx
  41a1a0:	or     edx,ebx
  41a1a2:	mov    DWORD PTR [rcx],edx
  41a1a4:	sub    DWORD PTR [rax+0x4],0x1
  41a1a8:	add    rsp,0x28
  41a1ac:	pop    rbx
  41a1ad:	pop    rbp
  41a1ae:	pop    r12
  41a1b0:	pop    r13
  41a1b2:	pop    r14
  41a1b4:	pop    r15
  41a1b6:	ret    
  41a1b7:	nop    WORD PTR [rax+rax*1+0x0]
  41a1c0:	push   r12
  41a1c2:	push   rbp
  41a1c3:	mov    edx,esi
  41a1c5:	push   rbx
  41a1c6:	mov    rax,QWORD PTR [rdi]
  41a1c9:	mov    rbp,rdi
  41a1cc:	mov    rbx,rdx
  41a1cf:	mov    rax,QWORD PTR [rax+0x20]
  41a1d3:	mov    r12,QWORD PTR [rax+rdx*8]
  41a1d7:	mov    rax,0x468e3c
  41a1de:	cmp    DWORD PTR [rax],0x2
  41a1e1:	jle    41a203 <strcmp@plt+0x16a4b>
  41a1e3:	mov    rdi,QWORD PTR [r12+0x8]
  41a1e8:	call   436380 <strcmp@plt+0x32bc8>
  41a1ed:	lea    rsi,[rip+0x31ccc]        # 44bec0 <strcmp@plt+0x48708>
  41a1f4:	mov    rdx,rax
  41a1f7:	mov    edi,0x7
  41a1fc:	xor    eax,eax
  41a1fe:	call   4306a0 <strcmp@plt+0x2cee8>
  41a203:	mov    rdi,r12
  41a206:	call   421b40 <strcmp@plt+0x1e388>
  41a20b:	mov    rax,QWORD PTR [rbp+0x0]
  41a20f:	cmp    ebx,DWORD PTR [rax]
  41a211:	je     41a243 <strcmp@plt+0x16a8b>
  41a213:	mov    rcx,QWORD PTR [rax+0x10]
  41a217:	mov    edx,ebx
  41a219:	add    ebx,ebx
  41a21b:	shr    edx,0x4
  41a21e:	and    ebx,0x1e
  41a221:	lea    rcx,[rcx+rdx*4]
  41a225:	mov    edx,DWORD PTR [rcx]
  41a227:	shrx   esi,edx,ebx
  41a22c:	and    esi,0x3
  41a22f:	jne    41a243 <strcmp@plt+0x16a8b>
  41a231:	mov    esi,0x1
  41a236:	shlx   rbx,rsi,rbx
  41a23b:	or     edx,ebx
  41a23d:	mov    DWORD PTR [rcx],edx
  41a23f:	sub    DWORD PTR [rax+0x4],0x1
  41a243:	pop    rbx
  41a244:	pop    rbp
  41a245:	pop    r12
  41a247:	ret    
  41a248:	nop    DWORD PTR [rax+rax*1+0x0]
  41a250:	push   r15
  41a252:	push   r14
  41a254:	push   r13
  41a256:	push   r12
  41a258:	push   rbp
  41a259:	push   rbx
  41a25a:	sub    rsp,0x28
  41a25e:	mov    r14,QWORD PTR [rdi]
  41a261:	mov    r15d,DWORD PTR [r14]
  41a264:	test   r15d,r15d
  41a267:	jne    41a280 <strcmp@plt+0x16ac8>
  41a269:	add    rsp,0x28
  41a26d:	xor    eax,eax
  41a26f:	pop    rbx
  41a270:	pop    rbp
  41a271:	pop    r12
  41a273:	pop    r13
  41a275:	pop    r14
  41a277:	pop    r15
  41a279:	ret    
  41a27a:	nop    WORD PTR [rax+rax*1+0x0]
  41a280:	mov    QWORD PTR [rsp+0x18],rdi
  41a285:	sub    r15d,0x1
  41a289:	mov    rdi,rsi
  41a28c:	mov    QWORD PTR [rsp+0x10],rsi
  41a291:	mov    r12d,r15d
  41a294:	call   436140 <strcmp@plt+0x32988>
  41a299:	mov    edx,eax
  41a29b:	and    r12d,eax
  41a29e:	shl    eax,0x3
  41a2a1:	shr    edx,0x3
  41a2a4:	mov    ebx,r12d
  41a2a7:	xor    edx,eax
  41a2a9:	or     edx,0x1
  41a2ac:	and    edx,r15d
  41a2af:	jmp    41a2c2 <strcmp@plt+0x16b0a>
  41a2b1:	nop    DWORD PTR [rax+0x0]
  41a2b8:	add    ebx,edx
  41a2ba:	and    ebx,r15d
  41a2bd:	cmp    r12d,ebx
  41a2c0:	je     41a31b <strcmp@plt+0x16b63>
  41a2c2:	mov    rsi,QWORD PTR [r14+0x10]
  41a2c6:	mov    eax,ebx
  41a2c8:	lea    r13d,[rbx+rbx*1]
  41a2cc:	shr    eax,0x4
  41a2cf:	lea    rbp,[rax*4+0x0]
  41a2d7:	and    r13d,0x1e
  41a2db:	mov    eax,DWORD PTR [rsi+rax*4]
  41a2de:	shrx   eax,eax,r13d
  41a2e3:	test   al,0x2
  41a2e5:	jne    41a317 <strcmp@plt+0x16b5f>
  41a2e7:	test   al,0x1
  41a2e9:	jne    41a2b8 <strcmp@plt+0x16b00>
  41a2eb:	mov    rsi,QWORD PTR [r14+0x18]
  41a2ef:	mov    eax,ebx
  41a2f1:	mov    DWORD PTR [rsp+0xc],edx
  41a2f5:	mov    rdi,QWORD PTR [rsi+rax*8]
  41a2f9:	mov    rsi,QWORD PTR [rsp+0x10]
  41a2fe:	call   4362b0 <strcmp@plt+0x32af8>
  41a303:	test   eax,eax
  41a305:	mov    edx,DWORD PTR [rsp+0xc]
  41a309:	je     41a2b8 <strcmp@plt+0x16b00>
  41a30b:	mov    rax,QWORD PTR [r14+0x10]
  41a30f:	mov    eax,DWORD PTR [rax+rbp*1]
  41a312:	shrx   eax,eax,r13d
  41a317:	test   al,0x3
  41a319:	je     41a31e <strcmp@plt+0x16b66>
  41a31b:	mov    ebx,DWORD PTR [r14]
  41a31e:	mov    rax,QWORD PTR [rsp+0x18]
  41a323:	mov    rax,QWORD PTR [rax]
  41a326:	cmp    DWORD PTR [rax],ebx
  41a328:	je     41a269 <strcmp@plt+0x16ab1>
  41a32e:	mov    rax,QWORD PTR [rax+0x20]
  41a332:	mov    rax,QWORD PTR [rax+rbx*8]
  41a336:	add    rsp,0x28
  41a33a:	pop    rbx
  41a33b:	pop    rbp
  41a33c:	pop    r12
  41a33e:	pop    r13
  41a340:	pop    r14
  41a342:	pop    r15
  41a344:	ret    
  41a345:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a34f:	nop
  41a350:	push   r13
  41a352:	push   r12
  41a354:	mov    r12,rdx
  41a357:	push   rbp
  41a358:	push   rbx
  41a359:	xor    ebp,ebp
  41a35b:	mov    rbx,rsi
  41a35e:	sub    rsp,0x18
  41a362:	lea    rcx,[rsp+0x2]
  41a367:	lea    rdx,[rsp+0x4]
  41a36c:	lea    r8,[rsp+0x3]
  41a371:	mov    rax,QWORD PTR fs:0x28
  41a37a:	mov    QWORD PTR [rsp+0x8],rax
  41a37f:	xor    eax,eax
  41a381:	mov    BYTE PTR [rsp+0x2],0x0
  41a386:	mov    BYTE PTR [rsp+0x3],0x0
  41a38b:	call   438600 <strcmp@plt+0x34e48>
  41a390:	cmp    eax,0x1
  41a393:	je     41a3c0 <strcmp@plt+0x16c08>
  41a395:	mov    rsi,QWORD PTR [rsp+0x8]
  41a39a:	xor    rsi,QWORD PTR fs:0x28
  41a3a3:	mov    eax,ebp
  41a3a5:	jne    41a51f <strcmp@plt+0x16d67>
  41a3ab:	add    rsp,0x18
  41a3af:	pop    rbx
  41a3b0:	pop    rbp
  41a3b1:	pop    r12
  41a3b3:	pop    r13
  41a3b5:	ret    
  41a3b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a3c0:	mov    ebp,eax
  41a3c2:	mov    rax,QWORD PTR [rbx+0x38]
  41a3c6:	sub    rax,QWORD PTR [rbx+0x30]
  41a3ca:	cmp    DWORD PTR [rsp+0x4],0x2
  41a3cf:	je     41a4c0 <strcmp@plt+0x16d08>
  41a3d5:	mov    WORD PTR [rbx+0x1c],ax
  41a3d9:	mov    rdi,rbx
  41a3dc:	call   435790 <strcmp@plt+0x31fd8>
  41a3e1:	movzx  edx,WORD PTR [rax+0x4]
  41a3e5:	rol    dx,0x8
  41a3e9:	cmp    dx,0xf
  41a3ed:	jbe    41a490 <strcmp@plt+0x16cd8>
  41a3f3:	movzx  eax,WORD PTR [rax+0x2]
  41a3f7:	rol    ax,0x8
  41a3fb:	cmp    ax,0x10f5
  41a3ff:	je     41a4a0 <strcmp@plt+0x16ce8>
  41a405:	cmp    ax,0x12b6
  41a409:	jne    41a490 <strcmp@plt+0x16cd8>
  41a40f:	mov    rdi,rbx
  41a412:	mov    r13d,0x12b6
  41a418:	call   4196a0 <strcmp@plt+0x15ee8>
  41a41d:	test   BYTE PTR [rax],0x8
  41a420:	jne    41a4f0 <strcmp@plt+0x16d38>
  41a426:	mov    rdi,QWORD PTR [rbx+0x38]
  41a42a:	movzx  edx,BYTE PTR [rsp+0x3]
  41a42f:	movzx  esi,BYTE PTR [rsp+0x2]
  41a434:	mov    rax,rdi
  41a437:	sub    rax,QWORD PTR [rbx+0x30]
  41a43b:	mov    WORD PTR [rbx+0x20],ax
  41a43f:	call   4368c0 <strcmp@plt+0x33108>
  41a444:	mov    rax,0x468e3c
  41a44b:	cmp    DWORD PTR [rax],0x2
  41a44e:	jle    41a395 <strcmp@plt+0x16bdd>
  41a454:	movzx  edi,WORD PTR [rbx+0x20]
  41a458:	cmp    di,0xffff
  41a45c:	je     41a4e0 <strcmp@plt+0x16d28>
  41a462:	add    rdi,QWORD PTR [rbx+0x30]
  41a466:	lea    rsi,[rip+0x31a93]        # 44bf00 <strcmp@plt+0x48748>
  41a46d:	call   436d10 <strcmp@plt+0x33558>
  41a472:	lea    rsi,[rip+0x31a9a]        # 44bf13 <strcmp@plt+0x4875b>
  41a479:	mov    rcx,rax
  41a47c:	mov    edx,r13d
  41a47f:	mov    edi,0x7
  41a484:	xor    eax,eax
  41a486:	call   4306a0 <strcmp@plt+0x2cee8>
  41a48b:	jmp    41a395 <strcmp@plt+0x16bdd>
  41a490:	mov    ebp,0xfffffff8
  41a495:	jmp    41a395 <strcmp@plt+0x16bdd>
  41a49a:	nop    WORD PTR [rax+rax*1+0x0]
  41a4a0:	mov    rdi,rbx
  41a4a3:	call   424440 <strcmp@plt+0x20c88>
  41a4a8:	test   BYTE PTR [rax],0x8
  41a4ab:	jne    41a508 <strcmp@plt+0x16d50>
  41a4ad:	mov    DWORD PTR [r12],0x0
  41a4b5:	mov    r13d,0x10f5
  41a4bb:	jmp    41a426 <strcmp@plt+0x16c6e>
  41a4c0:	mov    WORD PTR [rbx+0x1a],ax
  41a4c4:	mov    rdi,rbx
  41a4c7:	call   435740 <strcmp@plt+0x31f88>
  41a4cc:	mov    rax,QWORD PTR [rbx+0x38]
  41a4d0:	sub    rax,QWORD PTR [rbx+0x30]
  41a4d4:	mov    WORD PTR [rbx+0x1c],ax
  41a4d8:	jmp    41a3d9 <strcmp@plt+0x16c21>
  41a4dd:	nop    DWORD PTR [rax]
  41a4e0:	xor    edi,edi
  41a4e2:	jmp    41a466 <strcmp@plt+0x16cae>
  41a4e7:	nop    WORD PTR [rax+rax*1+0x0]
  41a4f0:	mov    rdi,rax
  41a4f3:	call   4196d0 <strcmp@plt+0x15f18>
  41a4f8:	mov    DWORD PTR [r12],eax
  41a4fc:	jmp    41a426 <strcmp@plt+0x16c6e>
  41a501:	nop    DWORD PTR [rax+0x0]
  41a508:	mov    rdi,rax
  41a50b:	mov    r13d,0x10f5
  41a511:	call   425730 <strcmp@plt+0x21f78>
  41a516:	mov    DWORD PTR [r12],eax
  41a51a:	jmp    41a426 <strcmp@plt+0x16c6e>
  41a51f:	call   403460 <__stack_chk_fail@plt>
  41a524:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41a52f:	nop
  41a530:	push   rbx
  41a531:	lea    rsi,[rip+0x52068]        # 46c5a0 <strcmp@plt+0x68de8>
  41a538:	mov    rbx,rdi
  41a53b:	lea    rdi,[rip+0x5201e]        # 46c560 <strcmp@plt+0x68da8>
  41a542:	mov    edx,0x1000
  41a547:	sub    rsp,0x10
  41a54b:	mov    rax,QWORD PTR fs:0x28
  41a554:	mov    QWORD PTR [rsp+0x8],rax
  41a559:	xor    eax,eax
  41a55b:	call   42ffd0 <strcmp@plt+0x2c818>
  41a560:	mov    edi,DWORD PTR [rbx+0x18]
  41a563:	lea    rdx,[rsp+0x4]
  41a568:	lea    rsi,[rip+0x51ff1]        # 46c560 <strcmp@plt+0x68da8>
  41a56f:	xor    ebx,ebx
  41a571:	call   41a350 <strcmp@plt+0x16b98>
  41a576:	cmp    eax,0x1
  41a579:	je     41a598 <strcmp@plt+0x16de0>
  41a57b:	mov    rcx,QWORD PTR [rsp+0x8]
  41a580:	xor    rcx,QWORD PTR fs:0x28
  41a589:	mov    eax,ebx
  41a58b:	jne    41a5ff <strcmp@plt+0x16e47>
  41a58d:	add    rsp,0x10
  41a591:	pop    rbx
  41a592:	ret    
  41a593:	nop    DWORD PTR [rax+rax*1+0x0]
  41a598:	mov    ebx,eax
  41a59a:	movzx  eax,WORD PTR [rip+0x51fdf]        # 46c580 <strcmp@plt+0x68dc8>
  41a5a1:	xor    esi,esi
  41a5a3:	mov    edx,DWORD PTR [rip+0x51fcb]        # 46c574 <strcmp@plt+0x68dbc>
  41a5a9:	cmp    ax,0xffff
  41a5ad:	je     41a5b9 <strcmp@plt+0x16e01>
  41a5af:	add    rax,QWORD PTR [rip+0x51fda]        # 46c590 <strcmp@plt+0x68dd8>
  41a5b6:	mov    rsi,rax
  41a5b9:	mov    rax,0x4747dc
  41a5c0:	mov    edi,DWORD PTR [rax]
  41a5c2:	call   403180 <write@plt>
  41a5c7:	test   rax,rax
  41a5ca:	jns    41a57b <strcmp@plt+0x16dc3>
  41a5cc:	mov    rax,0x468e3c
  41a5d3:	cmp    DWORD PTR [rax],0x1
  41a5d6:	jle    41a57b <strcmp@plt+0x16dc3>
  41a5d8:	call   403050 <__errno_location@plt>
  41a5dd:	mov    edi,DWORD PTR [rax]
  41a5df:	call   403170 <strerror@plt>
  41a5e4:	lea    rsi,[rip+0x31937]        # 44bf22 <strcmp@plt+0x4876a>
  41a5eb:	mov    rdx,rax
  41a5ee:	mov    edi,0x6
  41a5f3:	xor    eax,eax
  41a5f5:	call   4306a0 <strcmp@plt+0x2cee8>
  41a5fa:	jmp    41a57b <strcmp@plt+0x16dc3>
  41a5ff:	call   403460 <__stack_chk_fail@plt>
  41a604:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41a60f:	nop
  41a610:	push   rbp
  41a611:	push   rbx
  41a612:	lea    rsi,[rip+0x51f87]        # 46c5a0 <strcmp@plt+0x68de8>
  41a619:	mov    rbx,rdi
  41a61c:	lea    rdi,[rip+0x51f3d]        # 46c560 <strcmp@plt+0x68da8>
  41a623:	mov    edx,0x1000
  41a628:	sub    rsp,0x68
  41a62c:	mov    rax,QWORD PTR fs:0x28
  41a635:	mov    QWORD PTR [rsp+0x58],rax
  41a63a:	xor    eax,eax
  41a63c:	call   42ffd0 <strcmp@plt+0x2c818>
  41a641:	lea    rdi,[rip+0x51f18]        # 46c560 <strcmp@plt+0x68da8>
  41a648:	mov    esi,0x64
  41a64d:	call   430220 <strcmp@plt+0x2ca68>
  41a652:	mov    edi,DWORD PTR [rbx+0x18]
  41a655:	lea    rdx,[rsp+0x48]
  41a65a:	lea    rsi,[rip+0x51eff]        # 46c560 <strcmp@plt+0x68da8>
  41a661:	call   41a350 <strcmp@plt+0x16b98>
  41a666:	cmp    eax,0x1
  41a669:	je     41a690 <strcmp@plt+0x16ed8>
  41a66b:	xor    ebx,ebx
  41a66d:	mov    rcx,QWORD PTR [rsp+0x58]
  41a672:	xor    rcx,QWORD PTR fs:0x28
  41a67b:	mov    eax,ebx
  41a67d:	jne    41a6fd <strcmp@plt+0x16f45>
  41a67f:	add    rsp,0x68
  41a683:	pop    rbx
  41a684:	pop    rbp
  41a685:	ret    
  41a686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a690:	mov    rax,0x468e3c
  41a697:	mov    rbp,rsp
  41a69a:	cmp    DWORD PTR [rax],0x2
  41a69d:	jle    41a6b2 <strcmp@plt+0x16efa>
  41a69f:	lea    rsi,[rip+0x3189a]        # 44bf40 <strcmp@plt+0x48788>
  41a6a6:	mov    edi,0x7
  41a6ab:	xor    eax,eax
  41a6ad:	call   4306a0 <strcmp@plt+0x2cee8>
  41a6b2:	lea    rdi,[rip+0x51ea7]        # 46c560 <strcmp@plt+0x68da8>
  41a6b9:	call   430440 <strcmp@plt+0x2cc88>
  41a6be:	mov    rax,QWORD PTR [rip+0x51ed3]        # 46c598 <strcmp@plt+0x68de0>
  41a6c5:	sub    rax,QWORD PTR [rip+0x51ec4]        # 46c590 <strcmp@plt+0x68dd8>
  41a6cc:	lea    rdi,[rip+0x51e8d]        # 46c560 <strcmp@plt+0x68da8>
  41a6d3:	mov    rsi,rbp
  41a6d6:	mov    WORD PTR [rip+0x51e9d],ax        # 46c57a <strcmp@plt+0x68dc2>
  41a6dd:	call   435c90 <strcmp@plt+0x324d8>
  41a6e2:	cmp    eax,0x1
  41a6e5:	mov    ebx,eax
  41a6e7:	jne    41a66b <strcmp@plt+0x16eb3>
  41a6e9:	lea    rdi,[rip+0x51e70]        # 46c560 <strcmp@plt+0x68da8>
  41a6f0:	mov    rsi,rbp
  41a6f3:	call   41a7d0 <strcmp@plt+0x17018>
  41a6f8:	jmp    41a66d <strcmp@plt+0x16eb5>
  41a6fd:	call   403460 <__stack_chk_fail@plt>
  41a702:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a70c:	nop    DWORD PTR [rax+0x0]
  41a710:	push   rbx
  41a711:	xor    eax,eax
  41a713:	mov    rbx,rdi
  41a716:	call   41b0e0 <strcmp@plt+0x17928>
  41a71b:	mov    rsi,rbx
  41a71e:	lea    rdi,[rax+0x20]
  41a722:	pop    rbx
  41a723:	jmp    41a050 <strcmp@plt+0x16898>
  41a728:	nop    DWORD PTR [rax+rax*1+0x0]
  41a730:	push   r13
  41a732:	push   r12
  41a734:	mov    r13,rdi
  41a737:	push   rbp
  41a738:	push   rbx
  41a739:	mov    rbp,rsi
  41a73c:	sub    rsp,0x8
  41a740:	mov    r12,0x468e3c
  41a747:	cmp    DWORD PTR [r12],0x2
  41a74c:	jle    41a76c <strcmp@plt+0x16fb4>
  41a74e:	mov    rdi,rsi
  41a751:	call   424890 <strcmp@plt+0x210d8>
  41a756:	lea    rsi,[rip+0x31813]        # 44bf70 <strcmp@plt+0x487b8>
  41a75d:	mov    rdx,rax
  41a760:	mov    edi,0x7
  41a765:	xor    eax,eax
  41a767:	call   4306a0 <strcmp@plt+0x2cee8>
  41a76c:	mov    rdi,rbp
  41a76f:	call   4251c0 <strcmp@plt+0x21a08>
  41a774:	movzx  ebx,ax
  41a777:	mov    edi,ebx
  41a779:	call   41bf60 <strcmp@plt+0x187a8>
  41a77e:	cmp    eax,0xfffffff7
  41a781:	je     41a7a0 <strcmp@plt+0x16fe8>
  41a783:	mov    edx,DWORD PTR [r13+0x14]
  41a787:	mov    rsi,QWORD PTR [r13+0x38]
  41a78b:	add    rsp,0x8
  41a78f:	pop    rbx
  41a790:	mov    rcx,rbp
  41a793:	mov    edi,eax
  41a795:	pop    rbp
  41a796:	pop    r12
  41a798:	pop    r13
  41a79a:	jmp    439300 <strcmp@plt+0x35b48>
  41a79f:	nop
  41a7a0:	cmp    DWORD PTR [r12],0x1
  41a7a5:	jle    41a7bc <strcmp@plt+0x17004>
  41a7a7:	lea    rsi,[rip+0x317ea]        # 44bf98 <strcmp@plt+0x487e0>
  41a7ae:	mov    edx,ebx
  41a7b0:	mov    edi,0x6
  41a7b5:	xor    eax,eax
  41a7b7:	call   4306a0 <strcmp@plt+0x2cee8>
  41a7bc:	add    rsp,0x8
  41a7c0:	xor    eax,eax
  41a7c2:	pop    rbx
  41a7c3:	pop    rbp
  41a7c4:	pop    r12
  41a7c6:	pop    r13
  41a7c8:	ret    
  41a7c9:	nop    DWORD PTR [rax+0x0]
  41a7d0:	push   r15
  41a7d2:	push   r14
  41a7d4:	push   r13
  41a7d6:	push   r12
  41a7d8:	mov    r13,rdi
  41a7db:	push   rbp
  41a7dc:	push   rbx
  41a7dd:	mov    rbx,rsi
  41a7e0:	sub    rsp,0x28
  41a7e4:	mov    rbp,0x468e3c
  41a7eb:	cmp    DWORD PTR [rbp+0x0],0x2
  41a7ef:	jg     41a840 <strcmp@plt+0x17088>
  41a7f1:	mov    rdi,rbx
  41a7f4:	lea    r12,[rsi+0x20]
  41a7f8:	call   436880 <strcmp@plt+0x330c8>
  41a7fd:	test   eax,eax
  41a7ff:	je     41a8a8 <strcmp@plt+0x170f0>
  41a805:	cmp    DWORD PTR [rbp+0x0],0x2
  41a809:	jg     41a828 <strcmp@plt+0x17070>
  41a80b:	add    rsp,0x28
  41a80f:	mov    rsi,r12
  41a812:	mov    rdi,r13
  41a815:	pop    rbx
  41a816:	pop    rbp
  41a817:	pop    r12
  41a819:	pop    r13
  41a81b:	pop    r14
  41a81d:	pop    r15
  41a81f:	jmp    41a730 <strcmp@plt+0x16f78>
  41a824:	nop    DWORD PTR [rax+0x0]
  41a828:	lea    rsi,[rip+0x317e1]        # 44c010 <strcmp@plt+0x48858>
  41a82f:	mov    edi,0x7
  41a834:	xor    eax,eax
  41a836:	call   4306a0 <strcmp@plt+0x2cee8>
  41a83b:	jmp    41a80b <strcmp@plt+0x17053>
  41a83d:	nop    DWORD PTR [rax]
  41a840:	movzx  r9d,WORD PTR [rsi+0x40]
  41a845:	lea    r12,[rsi+0x20]
  41a849:	movzx  r14d,WORD PTR [rsi+0x42]
  41a84e:	movzx  r15d,BYTE PTR [rsi+0x44]
  41a853:	mov    rdi,r12
  41a856:	mov    DWORD PTR [rsp+0x10],r9d
  41a85b:	call   424890 <strcmp@plt+0x210d8>
  41a860:	mov    rdi,rbx
  41a863:	mov    QWORD PTR [rsp+0x8],rax
  41a868:	call   424890 <strcmp@plt+0x210d8>
  41a86d:	sub    rsp,0x8
  41a871:	lea    rsi,[rip+0x31758]        # 44bfd0 <strcmp@plt+0x48818>
  41a878:	mov    rdx,rax
  41a87b:	push   r14
  41a87d:	mov    r9d,DWORD PTR [rsp+0x20]
  41a882:	xor    eax,eax
  41a884:	mov    rcx,QWORD PTR [rsp+0x18]
  41a889:	mov    r8d,r15d
  41a88c:	mov    edi,0x7
  41a891:	call   4306a0 <strcmp@plt+0x2cee8>
  41a896:	pop    rax
  41a897:	pop    rdx
  41a898:	mov    rdi,rbx
  41a89b:	call   436880 <strcmp@plt+0x330c8>
  41a8a0:	test   eax,eax
  41a8a2:	jne    41a805 <strcmp@plt+0x1704d>
  41a8a8:	mov    rdi,r12
  41a8ab:	call   4262b0 <strcmp@plt+0x22af8>
  41a8b0:	test   al,al
  41a8b2:	jne    41a998 <strcmp@plt+0x171e0>
  41a8b8:	mov    eax,DWORD PTR [rbx+0x48]
  41a8bb:	mov    DWORD PTR [rsp+0x10],eax
  41a8bf:	xor    eax,eax
  41a8c1:	call   41b0e0 <strcmp@plt+0x17928>
  41a8c6:	mov    r14,rax
  41a8c9:	lea    rax,[rax+0x20]
  41a8cd:	mov    rsi,rbx
  41a8d0:	mov    rdi,rax
  41a8d3:	mov    QWORD PTR [rsp+0x8],rax
  41a8d8:	call   41a250 <strcmp@plt+0x16a98>
  41a8dd:	test   rax,rax
  41a8e0:	mov    r9,rax
  41a8e3:	je     41aa50 <strcmp@plt+0x17298>
  41a8e9:	mov    r15,QWORD PTR [rax+0x8]
  41a8ed:	cmp    QWORD PTR [r15+0x8],0x0
  41a8f2:	je     41a9d0 <strcmp@plt+0x17218>
  41a8f8:	mov    r8,QWORD PTR [r15+0x10]
  41a8fc:	test   r8,r8
  41a8ff:	je     41a9d0 <strcmp@plt+0x17218>
  41a905:	cmp    DWORD PTR [rbp+0x0],0x2
  41a909:	jle    41a946 <strcmp@plt+0x1718e>
  41a90b:	mov    rdi,r8
  41a90e:	mov    QWORD PTR [rsp+0x8],r9
  41a913:	call   424890 <strcmp@plt+0x210d8>
  41a918:	mov    rdi,QWORD PTR [r15+0x8]
  41a91c:	mov    rbx,rax
  41a91f:	call   424890 <strcmp@plt+0x210d8>
  41a924:	lea    rsi,[rip+0x31815]        # 44c140 <strcmp@plt+0x48988>
  41a92b:	mov    rdx,rax
  41a92e:	mov    rcx,rbx
  41a931:	mov    edi,0x7
  41a936:	xor    eax,eax
  41a938:	call   4306a0 <strcmp@plt+0x2cee8>
  41a93d:	mov    r8,QWORD PTR [r15+0x10]
  41a941:	mov    r9,QWORD PTR [rsp+0x8]
  41a946:	mov    eax,DWORD PTR [r9+0x14]
  41a94a:	test   eax,eax
  41a94c:	je     41a9f0 <strcmp@plt+0x17238>
  41a952:	cmp    eax,0x1
  41a955:	jne    41a97d <strcmp@plt+0x171c5>
  41a957:	sub    rsp,0x8
  41a95b:	mov    rcx,QWORD PTR [r15+0x8]
  41a95f:	mov    esi,0x12b6
  41a964:	push   r12
  41a966:	mov    r9d,DWORD PTR [r15+0x28]
  41a96a:	mov    edx,0x12b6
  41a96f:	mov    rdi,r13
  41a972:	call   419590 <strcmp@plt+0x15dd8>
  41a977:	pop    rcx
  41a978:	pop    rsi
  41a979:	mov    r8,QWORD PTR [r15+0x10]
  41a97d:	mov    rax,QWORD PTR [r15+0x20]
  41a981:	mov    edx,DWORD PTR [r13+0x14]
  41a985:	mov    rcx,r8
  41a988:	mov    rsi,QWORD PTR [r13+0x38]
  41a98c:	mov    edi,DWORD PTR [rax]
  41a98e:	call   439300 <strcmp@plt+0x35b48>
  41a993:	jmp    41a9b2 <strcmp@plt+0x171fa>
  41a995:	nop    DWORD PTR [rax]
  41a998:	mov    edi,DWORD PTR [rbp+0x0]
  41a99b:	test   edi,edi
  41a99d:	jle    41a9b2 <strcmp@plt+0x171fa>
  41a99f:	lea    rsi,[rip+0x316a2]        # 44c048 <strcmp@plt+0x48890>
  41a9a6:	mov    edi,0x5
  41a9ab:	xor    eax,eax
  41a9ad:	call   4306a0 <strcmp@plt+0x2cee8>
  41a9b2:	add    rsp,0x28
  41a9b6:	mov    eax,0x1
  41a9bb:	pop    rbx
  41a9bc:	pop    rbp
  41a9bd:	pop    r12
  41a9bf:	pop    r13
  41a9c1:	pop    r14
  41a9c3:	pop    r15
  41a9c5:	ret    
  41a9c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a9d0:	mov    eax,DWORD PTR [r9+0x10]
  41a9d4:	cmp    eax,0x1
  41a9d7:	je     41aa40 <strcmp@plt+0x17288>
  41a9d9:	jb     41aa18 <strcmp@plt+0x17260>
  41a9db:	cmp    eax,0x3
  41a9de:	jbe    41aa18 <strcmp@plt+0x17260>
  41a9e0:	mov    r8,QWORD PTR [r15+0x10]
  41a9e4:	jmp    41a905 <strcmp@plt+0x1714d>
  41a9e9:	nop    DWORD PTR [rax+0x0]
  41a9f0:	movzx  edx,WORD PTR [r15+0x1a]
  41a9f5:	movzx  esi,WORD PTR [r15+0x18]
  41a9fa:	mov    rdi,r13
  41a9fd:	mov    rcx,QWORD PTR [r15+0x8]
  41aa01:	mov    r9d,DWORD PTR [r15+0x28]
  41aa05:	call   424390 <strcmp@plt+0x20bd8>
  41aa0a:	mov    r8,QWORD PTR [r15+0x10]
  41aa0e:	jmp    41a97d <strcmp@plt+0x171c5>
  41aa13:	nop    DWORD PTR [rax+rax*1+0x0]
  41aa18:	cmp    DWORD PTR [rbp+0x0],0x2
  41aa1c:	jle    41a9b2 <strcmp@plt+0x171fa>
  41aa1e:	lea    rsi,[rip+0x316f3]        # 44c118 <strcmp@plt+0x48960>
  41aa25:	mov    edi,0x7
  41aa2a:	xor    eax,eax
  41aa2c:	call   4306a0 <strcmp@plt+0x2cee8>
  41aa31:	jmp    41a9b2 <strcmp@plt+0x171fa>
  41aa36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aa40:	mov    rsi,r12
  41aa43:	mov    rdi,r13
  41aa46:	call   41a730 <strcmp@plt+0x16f78>
  41aa4b:	jmp    41a9b2 <strcmp@plt+0x171fa>
  41aa50:	mov    rdi,rbx
  41aa53:	call   408170 <strcmp@plt+0x49b8>
  41aa58:	test   rax,rax
  41aa5b:	mov    r9,rax
  41aa5e:	je     41a9b2 <strcmp@plt+0x171fa>
  41aa64:	mov    r15,QWORD PTR [rax+0x8]
  41aa68:	test   r15,r15
  41aa6b:	je     41a9b2 <strcmp@plt+0x171fa>
  41aa71:	mov    rdi,QWORD PTR [r15+0x8]
  41aa75:	test   rdi,rdi
  41aa78:	je     41aa94 <strcmp@plt+0x172dc>
  41aa7a:	cmp    QWORD PTR [r15+0x10],0x0
  41aa7f:	je     41aa94 <strcmp@plt+0x172dc>
  41aa81:	mov    QWORD PTR [rsp+0x18],rax
  41aa86:	call   43eff0 <strcmp@plt+0x3b838>
  41aa8b:	mov    r9,QWORD PTR [rsp+0x18]
  41aa90:	mov    QWORD PTR [r15+0x20],rax
  41aa94:	mov    eax,DWORD PTR [rsp+0x10]
  41aa98:	mov    rsi,QWORD PTR [r15]
  41aa9b:	mov    rdx,r9
  41aa9e:	mov    rdi,QWORD PTR [rsp+0x8]
  41aaa3:	mov    QWORD PTR [rsp+0x10],r9
  41aaa8:	mov    DWORD PTR [rsi+0x48],eax
  41aaab:	call   419800 <strcmp@plt+0x16048>
  41aab0:	cmp    eax,0x1
  41aab3:	mov    r9,QWORD PTR [rsp+0x10]
  41aab8:	je     41aadb <strcmp@plt+0x17323>
  41aaba:	xor    eax,eax
  41aabc:	call   41ae10 <strcmp@plt+0x17658>
  41aac1:	mov    r9,QWORD PTR [rsp+0x10]
  41aac6:	mov    rsi,QWORD PTR [r15]
  41aac9:	mov    rdi,QWORD PTR [rsp+0x8]
  41aace:	mov    rdx,r9
  41aad1:	call   419800 <strcmp@plt+0x16048>
  41aad6:	mov    r9,QWORD PTR [rsp+0x10]
  41aadb:	mov    rdi,QWORD PTR [r9]
  41aade:	mov    QWORD PTR [rsp+0x8],r9
  41aae3:	call   424890 <strcmp@plt+0x210d8>
  41aae8:	mov    rdi,QWORD PTR [r14+0x18]
  41aaec:	mov    rsi,rax
  41aaef:	call   43a470 <strcmp@plt+0x36cb8>
  41aaf4:	test   rax,rax
  41aaf7:	mov    rcx,rax
  41aafa:	mov    r9,QWORD PTR [rsp+0x8]
  41aaff:	je     41abf2 <strcmp@plt+0x1743a>
  41ab05:	mov    rdi,QWORD PTR [r15]
  41ab08:	mov    rsi,rcx
  41ab0b:	mov    QWORD PTR [rsp+0x8],r9
  41ab10:	call   42d540 <strcmp@plt+0x29d88>
  41ab15:	cmp    DWORD PTR [rbp+0x0],0x2
  41ab19:	mov    r9,QWORD PTR [rsp+0x8]
  41ab1e:	jle    41ab5a <strcmp@plt+0x173a2>
  41ab20:	mov    rdi,QWORD PTR [r9]
  41ab23:	mov    QWORD PTR [rsp+0x10],r9
  41ab28:	call   424890 <strcmp@plt+0x210d8>
  41ab2d:	mov    rdi,rbx
  41ab30:	mov    QWORD PTR [rsp+0x8],rax
  41ab35:	call   436380 <strcmp@plt+0x32bc8>
  41ab3a:	mov    rcx,QWORD PTR [rsp+0x8]
  41ab3f:	lea    rsi,[rip+0x31532]        # 44c078 <strcmp@plt+0x488c0>
  41ab46:	mov    rdx,rax
  41ab49:	mov    edi,0x7
  41ab4e:	xor    eax,eax
  41ab50:	call   4306a0 <strcmp@plt+0x2cee8>
  41ab55:	mov    r9,QWORD PTR [rsp+0x10]
  41ab5a:	cmp    DWORD PTR [r9+0x10],0x1
  41ab5f:	jne    41a8ed <strcmp@plt+0x17135>
  41ab65:	mov    rdi,QWORD PTR [r9]
  41ab68:	mov    QWORD PTR [rsp+0x8],r9
  41ab6d:	call   4251c0 <strcmp@plt+0x21a08>
  41ab72:	cmp    ax,0x2
  41ab76:	mov    r9,QWORD PTR [rsp+0x8]
  41ab7b:	je     41ac62 <strcmp@plt+0x174aa>
  41ab81:	cmp    ax,0xa
  41ab85:	jne    41ac40 <strcmp@plt+0x17488>
  41ab8b:	mov    rdi,QWORD PTR [r14+0x18]
  41ab8f:	lea    rsi,[rip+0x2d083]        # 447c19 <strcmp@plt+0x44461>
  41ab96:	mov    QWORD PTR [rsp+0x8],r9
  41ab9b:	call   43a470 <strcmp@plt+0x36cb8>
  41aba0:	test   rax,rax
  41aba3:	mov    rbx,rax
  41aba6:	mov    r9,QWORD PTR [rsp+0x8]
  41abab:	je     41acb5 <strcmp@plt+0x174fd>
  41abb1:	mov    rdi,QWORD PTR [r15]
  41abb4:	mov    rsi,rbx
  41abb7:	mov    QWORD PTR [rsp+0x8],r9
  41abbc:	call   42d540 <strcmp@plt+0x29d88>
  41abc1:	cmp    DWORD PTR [rbp+0x0],0x2
  41abc5:	mov    r9,QWORD PTR [rsp+0x8]
  41abca:	jle    41a8ed <strcmp@plt+0x17135>
  41abd0:	lea    rsi,[rip+0x315c7]        # 44c19e <strcmp@plt+0x489e6>
  41abd7:	mov    edi,0x7
  41abdc:	xor    eax,eax
  41abde:	mov    QWORD PTR [rsp+0x8],r9
  41abe3:	call   4306a0 <strcmp@plt+0x2cee8>
  41abe8:	mov    r9,QWORD PTR [rsp+0x8]
  41abed:	jmp    41a8ed <strcmp@plt+0x17135>
  41abf2:	mov    rdi,0x41a710
  41abf9:	mov    QWORD PTR [rsp+0x10],r9
  41abfe:	call   42d4f0 <strcmp@plt+0x29d38>
  41ac03:	mov    r9,QWORD PTR [rsp+0x10]
  41ac08:	mov    QWORD PTR [rsp+0x8],rax
  41ac0d:	mov    rdi,QWORD PTR [r9]
  41ac10:	call   424890 <strcmp@plt+0x210d8>
  41ac15:	mov    rdi,rax
  41ac18:	call   403730 <strdup@plt>
  41ac1d:	mov    rcx,QWORD PTR [rsp+0x8]
  41ac22:	mov    rdi,QWORD PTR [r14+0x18]
  41ac26:	mov    rsi,rax
  41ac29:	mov    rdx,rcx
  41ac2c:	call   439800 <strcmp@plt+0x36048>
  41ac31:	mov    r9,QWORD PTR [rsp+0x10]
  41ac36:	mov    rcx,QWORD PTR [rsp+0x8]
  41ac3b:	jmp    41ab05 <strcmp@plt+0x1734d>
  41ac40:	cmp    DWORD PTR [rbp+0x0],0x2
  41ac44:	jle    41a9b2 <strcmp@plt+0x171fa>
  41ac4a:	lea    rsi,[rip+0x3146f]        # 44c0c0 <strcmp@plt+0x48908>
  41ac51:	mov    edi,0x7
  41ac56:	xor    eax,eax
  41ac58:	call   4306a0 <strcmp@plt+0x2cee8>
  41ac5d:	jmp    41a9b2 <strcmp@plt+0x171fa>
  41ac62:	mov    rdi,QWORD PTR [r14+0x18]
  41ac66:	lea    rsi,[rip+0x2caa6]        # 447713 <strcmp@plt+0x43f5b>
  41ac6d:	mov    QWORD PTR [rsp+0x8],r9
  41ac72:	call   43a470 <strcmp@plt+0x36cb8>
  41ac77:	test   rax,rax
  41ac7a:	mov    rbx,rax
  41ac7d:	mov    r9,QWORD PTR [rsp+0x8]
  41ac82:	jne    41abb1 <strcmp@plt+0x173f9>
  41ac88:	call   42d4e0 <strcmp@plt+0x29d28>
  41ac8d:	lea    rdi,[rip+0x2ca7f]        # 447713 <strcmp@plt+0x43f5b>
  41ac94:	mov    rbx,rax
  41ac97:	call   403730 <strdup@plt>
  41ac9c:	mov    rdi,QWORD PTR [r14+0x18]
  41aca0:	mov    rdx,rbx
  41aca3:	mov    rsi,rax
  41aca6:	call   439800 <strcmp@plt+0x36048>
  41acab:	mov    r9,QWORD PTR [rsp+0x8]
  41acb0:	jmp    41abb1 <strcmp@plt+0x173f9>
  41acb5:	call   42d4e0 <strcmp@plt+0x29d28>
  41acba:	lea    rdi,[rip+0x2cf58]        # 447c19 <strcmp@plt+0x44461>
  41acc1:	mov    rbx,rax
  41acc4:	jmp    41ac97 <strcmp@plt+0x174df>
  41acc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41acd0:	push   rbp
  41acd1:	push   rbx
  41acd2:	lea    rsi,[rip+0x52927]        # 46d600 <strcmp@plt+0x69e48>
  41acd9:	mov    rbx,rdi
  41acdc:	lea    rdi,[rip+0x528dd]        # 46d5c0 <strcmp@plt+0x69e08>
  41ace3:	mov    edx,0x800
  41ace8:	sub    rsp,0x68
  41acec:	mov    rax,QWORD PTR fs:0x28
  41acf5:	mov    QWORD PTR [rsp+0x58],rax
  41acfa:	xor    eax,eax
  41acfc:	call   42ffd0 <strcmp@plt+0x2c818>
  41ad01:	lea    rdi,[rip+0x528b8]        # 46d5c0 <strcmp@plt+0x69e08>
  41ad08:	mov    esi,0x64
  41ad0d:	call   430220 <strcmp@plt+0x2ca68>
  41ad12:	mov    edi,DWORD PTR [rbx+0x18]
  41ad15:	lea    rsi,[rip+0x528a4]        # 46d5c0 <strcmp@plt+0x69e08>
  41ad1c:	call   438350 <strcmp@plt+0x34b98>
  41ad21:	cmp    eax,0x1
  41ad24:	je     41ad58 <strcmp@plt+0x175a0>
  41ad26:	lea    rsi,[rip+0x3144b]        # 44c178 <strcmp@plt+0x489c0>
  41ad2d:	mov    edi,0x3
  41ad32:	xor    eax,eax
  41ad34:	xor    ebx,ebx
  41ad36:	call   4306a0 <strcmp@plt+0x2cee8>
  41ad3b:	mov    rcx,QWORD PTR [rsp+0x58]
  41ad40:	xor    rcx,QWORD PTR fs:0x28
  41ad49:	mov    eax,ebx
  41ad4b:	jne    41ada9 <strcmp@plt+0x175f1>
  41ad4d:	add    rsp,0x68
  41ad51:	pop    rbx
  41ad52:	pop    rbp
  41ad53:	ret    
  41ad54:	nop    DWORD PTR [rax+0x0]
  41ad58:	mov    rax,QWORD PTR [rip+0x52899]        # 46d5f8 <strcmp@plt+0x69e40>
  41ad5f:	sub    rax,QWORD PTR [rip+0x5288a]        # 46d5f0 <strcmp@plt+0x69e38>
  41ad66:	lea    rdi,[rip+0x52853]        # 46d5c0 <strcmp@plt+0x69e08>
  41ad6d:	mov    rsi,rsp
  41ad70:	mov    WORD PTR [rip+0x52863],ax        # 46d5da <strcmp@plt+0x69e22>
  41ad77:	call   435c90 <strcmp@plt+0x324d8>
  41ad7c:	cmp    eax,0x1
  41ad7f:	mov    ebx,eax
  41ad81:	je     41ad90 <strcmp@plt+0x175d8>
  41ad83:	xor    ebx,ebx
  41ad85:	jmp    41ad3b <strcmp@plt+0x17583>
  41ad87:	nop    WORD PTR [rax+rax*1+0x0]
  41ad90:	lea    rdi,[rip+0x52829]        # 46d5c0 <strcmp@plt+0x69e08>
  41ad97:	mov    rsi,rsp
  41ad9a:	mov    DWORD PTR [rsp+0x48],0x0
  41ada2:	call   41a7d0 <strcmp@plt+0x17018>
  41ada7:	jmp    41ad3b <strcmp@plt+0x17583>
  41ada9:	call   403460 <__stack_chk_fail@plt>
  41adae:	xchg   ax,ax
  41adb0:	push   r12
  41adb2:	push   rbp
  41adb3:	mov    ebp,esi
  41adb5:	push   rbx
  41adb6:	mov    rbx,rdi
  41adb9:	mov    r12d,DWORD PTR [rdi+0x8]
  41adbd:	call   43ebd0 <strcmp@plt+0x3b418>
  41adc2:	test   rax,rax
  41adc5:	je     41ae00 <strcmp@plt+0x17648>
  41adc7:	mov    r8,rax
  41adca:	xor    eax,eax
  41adcc:	mov    ecx,DWORD PTR [r8+0x18]
  41add0:	test   ecx,ecx
  41add2:	je     41adf9 <strcmp@plt+0x17641>
  41add4:	sub    rsp,0x8
  41add8:	mov    esi,DWORD PTR [rbx+0x8]
  41addb:	add    r12d,0xa
  41addf:	push   r12
  41ade1:	xor    edx,edx
  41ade3:	mov    r9d,0x64
  41ade9:	xor    ecx,ecx
  41adeb:	mov    edi,ebp
  41aded:	call   437b50 <strcmp@plt+0x34398>
  41adf2:	pop    rax
  41adf3:	pop    rdx
  41adf4:	mov    eax,0x1
  41adf9:	pop    rbx
  41adfa:	pop    rbp
  41adfb:	pop    r12
  41adfd:	ret    
  41adfe:	xchg   ax,ax
  41ae00:	pop    rbx
  41ae01:	xor    eax,eax
  41ae03:	pop    rbp
  41ae04:	pop    r12
  41ae06:	ret    
  41ae07:	nop    WORD PTR [rax+rax*1+0x0]
  41ae10:	mov    rax,0x4687e0
  41ae17:	push   rbx
  41ae18:	mov    rbx,QWORD PTR [rax+0x70]
  41ae1c:	mov    rdi,QWORD PTR [rbx+0x18]
  41ae20:	call   43a5a0 <strcmp@plt+0x36de8>
  41ae25:	mov    rdi,0x42dac0
  41ae2c:	call   4397c0 <strcmp@plt+0x36008>
  41ae31:	mov    QWORD PTR [rbx+0x18],rax
  41ae35:	mov    eax,0x1
  41ae3a:	pop    rbx
  41ae3b:	ret    
  41ae3c:	nop    DWORD PTR [rax+0x0]
  41ae40:	push   r14
  41ae42:	push   r13
  41ae44:	push   r12
  41ae46:	push   rbp
  41ae47:	mov    ebp,esi
  41ae49:	push   rbx
  41ae4a:	call   424890 <strcmp@plt+0x210d8>
  41ae4f:	test   bpl,bpl
  41ae52:	jne    41af80 <strcmp@plt+0x177c8>
  41ae58:	mov    rbx,rax
  41ae5b:	lea    rdi,[rip+0x2c8b1]        # 447713 <strcmp@plt+0x43f5b>
  41ae62:	mov    rax,0x4687e0
  41ae69:	mov    ecx,0xa
  41ae6e:	mov    rsi,rbx
  41ae71:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41ae73:	mov    rbp,QWORD PTR [rax+0x70]
  41ae77:	jne    41aef0 <strcmp@plt+0x17738>
  41ae79:	mov    rax,0x468e3c
  41ae80:	cmp    DWORD PTR [rax],0x2
  41ae83:	jle    41ae98 <strcmp@plt+0x176e0>
  41ae85:	lea    rsi,[rip+0x3132c]        # 44c1b8 <strcmp@plt+0x48a00>
  41ae8c:	mov    edi,0x7
  41ae91:	xor    eax,eax
  41ae93:	call   4306a0 <strcmp@plt+0x2cee8>
  41ae98:	mov    rdi,QWORD PTR [rbp+0x18]
  41ae9c:	lea    rsi,[rip+0x2c870]        # 447713 <strcmp@plt+0x43f5b>
  41aea3:	call   43a470 <strcmp@plt+0x36cb8>
  41aea8:	test   rax,rax
  41aeab:	mov    rbx,rax
  41aeae:	je     41aee1 <strcmp@plt+0x17729>
  41aeb0:	mov    r8d,DWORD PTR [rax+0x18]
  41aeb4:	test   r8d,r8d
  41aeb7:	jle    41aee1 <strcmp@plt+0x17729>
  41aeb9:	add    rbp,0x20
  41aebd:	nop    DWORD PTR [rax]
  41aec0:	mov    rax,QWORD PTR [rbx+0x8]
  41aec4:	mov    rdi,rbp
  41aec7:	mov    rsi,QWORD PTR [rax+0x10]
  41aecb:	call   41a250 <strcmp@plt+0x16a98>
  41aed0:	mov    rdi,QWORD PTR [rax]
  41aed3:	xor    esi,esi
  41aed5:	call   41ae40 <strcmp@plt+0x17688>
  41aeda:	mov    edi,DWORD PTR [rbx+0x18]
  41aedd:	test   edi,edi
  41aedf:	jg     41aec0 <strcmp@plt+0x17708>
  41aee1:	mov    eax,0x1
  41aee6:	pop    rbx
  41aee7:	pop    rbp
  41aee8:	pop    r12
  41aeea:	pop    r13
  41aeec:	pop    r14
  41aeee:	ret    
  41aeef:	nop
  41aef0:	lea    rdi,[rip+0x2cd22]        # 447c19 <strcmp@plt+0x44461>
  41aef7:	mov    ecx,0x5
  41aefc:	mov    rsi,rbx
  41aeff:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41af01:	je     41af90 <strcmp@plt+0x177d8>
  41af07:	mov    r12,0x468e3c
  41af0e:	cmp    DWORD PTR [r12],0x2
  41af13:	jle    41af2b <strcmp@plt+0x17773>
  41af15:	lea    rsi,[rip+0x3136c]        # 44c288 <strcmp@plt+0x48ad0>
  41af1c:	mov    rdx,rbx
  41af1f:	mov    edi,0x7
  41af24:	xor    eax,eax
  41af26:	call   4306a0 <strcmp@plt+0x2cee8>
  41af2b:	mov    rdi,QWORD PTR [rbp+0x18]
  41af2f:	mov    rsi,rbx
  41af32:	call   43a470 <strcmp@plt+0x36cb8>
  41af37:	test   rax,rax
  41af3a:	mov    r13,rax
  41af3d:	je     41b06c <strcmp@plt+0x178b4>
  41af43:	mov    edx,DWORD PTR [rax+0x18]
  41af46:	xor    esi,esi
  41af48:	test   edx,edx
  41af4a:	je     41af54 <strcmp@plt+0x1779c>
  41af4c:	mov    rax,QWORD PTR [rax+0x8]
  41af50:	mov    rsi,QWORD PTR [rax+0x10]
  41af54:	lea    rdi,[rbp+0x20]
  41af58:	call   41a250 <strcmp@plt+0x16a98>
  41af5d:	cmp    DWORD PTR [rax+0x10],0x1
  41af61:	je     41b010 <strcmp@plt+0x17858>
  41af67:	mov    rdi,QWORD PTR [rbp+0x18]
  41af6b:	mov    rsi,rbx
  41af6e:	call   43a2e0 <strcmp@plt+0x36b28>
  41af73:	jmp    41aee1 <strcmp@plt+0x17729>
  41af78:	nop    DWORD PTR [rax+rax*1+0x0]
  41af80:	pop    rbx
  41af81:	pop    rbp
  41af82:	pop    r12
  41af84:	pop    r13
  41af86:	pop    r14
  41af88:	xor    eax,eax
  41af8a:	jmp    41ae10 <strcmp@plt+0x17658>
  41af8f:	nop
  41af90:	mov    rax,0x468e3c
  41af97:	cmp    DWORD PTR [rax],0x2
  41af9a:	jle    41afaf <strcmp@plt+0x177f7>
  41af9c:	lea    rsi,[rip+0x3127d]        # 44c220 <strcmp@plt+0x48a68>
  41afa3:	mov    edi,0x7
  41afa8:	xor    eax,eax
  41afaa:	call   4306a0 <strcmp@plt+0x2cee8>
  41afaf:	mov    rdi,QWORD PTR [rbp+0x18]
  41afb3:	lea    rsi,[rip+0x2cc5f]        # 447c19 <strcmp@plt+0x44461>
  41afba:	call   43a470 <strcmp@plt+0x36cb8>
  41afbf:	test   rax,rax
  41afc2:	mov    rbx,rax
  41afc5:	je     41aee1 <strcmp@plt+0x17729>
  41afcb:	mov    esi,DWORD PTR [rax+0x18]
  41afce:	test   esi,esi
  41afd0:	jle    41aee1 <strcmp@plt+0x17729>
  41afd6:	add    rbp,0x20
  41afda:	nop    WORD PTR [rax+rax*1+0x0]
  41afe0:	mov    rax,QWORD PTR [rbx+0x8]
  41afe4:	mov    rdi,rbp
  41afe7:	mov    rsi,QWORD PTR [rax+0x10]
  41afeb:	call   41a250 <strcmp@plt+0x16a98>
  41aff0:	mov    rdi,QWORD PTR [rax]
  41aff3:	xor    esi,esi
  41aff5:	call   41ae40 <strcmp@plt+0x17688>
  41affa:	mov    ecx,DWORD PTR [rbx+0x18]
  41affd:	test   ecx,ecx
  41afff:	jg     41afe0 <strcmp@plt+0x17828>
  41b001:	jmp    41aee1 <strcmp@plt+0x17729>
  41b006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b010:	mov    rdi,QWORD PTR [rax]
  41b013:	call   4251c0 <strcmp@plt+0x21a08>
  41b018:	cmp    ax,0x2
  41b01c:	je     41b0b9 <strcmp@plt+0x17901>
  41b022:	cmp    ax,0xa
  41b026:	jne    41b097 <strcmp@plt+0x178df>
  41b028:	mov    rdi,QWORD PTR [rbp+0x18]
  41b02c:	lea    rsi,[rip+0x2cbe6]        # 447c19 <strcmp@plt+0x44461>
  41b033:	call   43a470 <strcmp@plt+0x36cb8>
  41b038:	mov    r14,rax
  41b03b:	mov    r12,QWORD PTR [r13+0x8]
  41b03f:	cmp    r13,r12
  41b042:	je     41af67 <strcmp@plt+0x177af>
  41b048:	nop    DWORD PTR [rax+rax*1+0x0]
  41b050:	mov    rdi,QWORD PTR [r12+0x10]
  41b055:	mov    rsi,r14
  41b058:	call   42d9a0 <strcmp@plt+0x2a1e8>
  41b05d:	mov    r12,QWORD PTR [r12+0x8]
  41b062:	cmp    r13,r12
  41b065:	jne    41b050 <strcmp@plt+0x17898>
  41b067:	jmp    41af67 <strcmp@plt+0x177af>
  41b06c:	cmp    DWORD PTR [r12],0x1
  41b071:	jg     41b07a <strcmp@plt+0x178c2>
  41b073:	xor    eax,eax
  41b075:	jmp    41aee6 <strcmp@plt+0x1772e>
  41b07a:	lea    rsi,[rip+0x3125f]        # 44c2e0 <strcmp@plt+0x48b28>
  41b081:	xor    eax,eax
  41b083:	mov    rdx,rbx
  41b086:	mov    edi,0x6
  41b08b:	call   4306a0 <strcmp@plt+0x2cee8>
  41b090:	xor    eax,eax
  41b092:	jmp    41aee6 <strcmp@plt+0x1772e>
  41b097:	mov    eax,DWORD PTR [r12]
  41b09b:	test   eax,eax
  41b09d:	jle    41b073 <strcmp@plt+0x178bb>
  41b09f:	lea    rsi,[rip+0x3127a]        # 44c320 <strcmp@plt+0x48b68>
  41b0a6:	xor    eax,eax
  41b0a8:	mov    edi,0x5
  41b0ad:	call   4306a0 <strcmp@plt+0x2cee8>
  41b0b2:	xor    eax,eax
  41b0b4:	jmp    41aee6 <strcmp@plt+0x1772e>
  41b0b9:	mov    rdi,QWORD PTR [rbp+0x18]
  41b0bd:	lea    rsi,[rip+0x2c64f]        # 447713 <strcmp@plt+0x43f5b>
  41b0c4:	call   43a470 <strcmp@plt+0x36cb8>
  41b0c9:	mov    r14,rax
  41b0cc:	jmp    41b03b <strcmp@plt+0x17883>
  41b0d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41b0dc:	nop    DWORD PTR [rax+0x0]
  41b0e0:	mov    rax,0x4687e0
  41b0e7:	mov    rax,QWORD PTR [rax+0x70]
  41b0eb:	ret    
  41b0ec:	nop    DWORD PTR [rax+0x0]
  41b0f0:	push   r15
  41b0f2:	push   r14
  41b0f4:	mov    r15,rdi
  41b0f7:	push   r13
  41b0f9:	push   r12
  41b0fb:	push   rbp
  41b0fc:	push   rbx
  41b0fd:	sub    rsp,0x8
  41b101:	mov    rax,0x4687e0
  41b108:	mov    r13,QWORD PTR [rax+0x70]
  41b10c:	call   4251c0 <strcmp@plt+0x21a08>
  41b111:	movzx  ebp,ax
  41b114:	test   ebp,ebp
  41b116:	jne    41b130 <strcmp@plt+0x17978>
  41b118:	xor    r14d,r14d
  41b11b:	add    rsp,0x8
  41b11f:	mov    eax,r14d
  41b122:	pop    rbx
  41b123:	pop    rbp
  41b124:	pop    r12
  41b126:	pop    r13
  41b128:	pop    r14
  41b12a:	pop    r15
  41b12c:	ret    
  41b12d:	nop    DWORD PTR [rax]
  41b130:	lea    rdi,[rip+0x31078]        # 44c1af <strcmp@plt+0x489f7>
  41b137:	mov    rsi,r15
  41b13a:	call   42fc90 <strcmp@plt+0x2c4d8>
  41b13f:	cmp    eax,0x1
  41b142:	mov    r14d,eax
  41b145:	jne    41b118 <strcmp@plt+0x17960>
  41b147:	mov    rax,QWORD PTR [r13+0x38]
  41b14b:	mov    rbx,QWORD PTR [rax+0x8]
  41b14f:	cmp    rax,rbx
  41b152:	jne    41b16a <strcmp@plt+0x179b2>
  41b154:	jmp    41b11b <strcmp@plt+0x17963>
  41b156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b160:	mov    rbx,QWORD PTR [rbx+0x8]
  41b164:	cmp    QWORD PTR [r13+0x38],rbx
  41b168:	je     41b11b <strcmp@plt+0x17963>
  41b16a:	mov    r12,QWORD PTR [rbx+0x10]
  41b16e:	mov    rdi,r12
  41b171:	call   4251c0 <strcmp@plt+0x21a08>
  41b176:	movzx  eax,ax
  41b179:	cmp    ebp,eax
  41b17b:	jne    41b160 <strcmp@plt+0x179a8>
  41b17d:	mov    rax,0x4747d8
  41b184:	sub    rsp,0x8
  41b188:	xor    ecx,ecx
  41b18a:	push   0xfe
  41b18f:	xor    r9d,r9d
  41b192:	xor    r8d,r8d
  41b195:	mov    rdx,r12
  41b198:	mov    edi,ebp
  41b19a:	mov    esi,DWORD PTR [rax]
  41b19c:	call   437c30 <strcmp@plt+0x34478>
  41b1a1:	cmp    eax,0x1
  41b1a4:	pop    rdx
  41b1a5:	pop    rcx
  41b1a6:	je     41b160 <strcmp@plt+0x179a8>
  41b1a8:	mov    rdi,r15
  41b1ab:	call   41b0f0 <strcmp@plt+0x17938>
  41b1b0:	jmp    41b118 <strcmp@plt+0x17960>
  41b1b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41b1c0:	push   r14
  41b1c2:	push   r13
  41b1c4:	push   r12
  41b1c6:	push   rbp
  41b1c7:	push   rbx
  41b1c8:	mov    ebx,edi
  41b1ca:	mov    rdi,rsi
  41b1cd:	call   425110 <strcmp@plt+0x21958>
  41b1d2:	mov    rdi,rax
  41b1d5:	mov    r14,rax
  41b1d8:	call   4251c0 <strcmp@plt+0x21a08>
  41b1dd:	movzx  ebp,ax
  41b1e0:	test   ebp,ebp
  41b1e2:	je     41b284 <strcmp@plt+0x17acc>
  41b1e8:	test   ebx,ebx
  41b1ea:	je     41b210 <strcmp@plt+0x17a58>
  41b1ec:	cmp    ebx,0x3
  41b1ef:	jne    41b290 <strcmp@plt+0x17ad8>
  41b1f5:	mov    rdi,r14
  41b1f8:	call   41b0f0 <strcmp@plt+0x17938>
  41b1fd:	pop    rbx
  41b1fe:	mov    eax,0x1
  41b203:	pop    rbp
  41b204:	pop    r12
  41b206:	pop    r13
  41b208:	pop    r14
  41b20a:	ret    
  41b20b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b210:	mov    rax,0x4687e0
  41b217:	mov    r13,QWORD PTR [rax+0x70]
  41b21b:	mov    rax,QWORD PTR [r13+0x38]
  41b21f:	mov    r10d,DWORD PTR [rax+0x18]
  41b223:	test   r10d,r10d
  41b226:	je     41b2a0 <strcmp@plt+0x17ae8>
  41b228:	mov    rbx,QWORD PTR [rax+0x8]
  41b22c:	cmp    rax,rbx
  41b22f:	jne    41b24a <strcmp@plt+0x17a92>
  41b231:	jmp    41b2c9 <strcmp@plt+0x17b11>
  41b236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b240:	mov    rbx,QWORD PTR [rbx+0x8]
  41b244:	cmp    QWORD PTR [r13+0x38],rbx
  41b248:	je     41b2c9 <strcmp@plt+0x17b11>
  41b24a:	mov    r12,QWORD PTR [rbx+0x10]
  41b24e:	mov    rdi,r12
  41b251:	call   4251c0 <strcmp@plt+0x21a08>
  41b256:	movzx  eax,ax
  41b259:	cmp    ebp,eax
  41b25b:	jne    41b240 <strcmp@plt+0x17a88>
  41b25d:	push   0x0
  41b25f:	push   r12
  41b261:	mov    ecx,0x64
  41b266:	mov    edx,0x64
  41b26b:	xor    esi,esi
  41b26d:	mov    r9,r14
  41b270:	mov    r8d,0x1
  41b276:	mov    edi,ebp
  41b278:	call   437700 <strcmp@plt+0x33f48>
  41b27d:	cmp    eax,0x1
  41b280:	pop    rdx
  41b281:	pop    rcx
  41b282:	je     41b240 <strcmp@plt+0x17a88>
  41b284:	pop    rbx
  41b285:	xor    eax,eax
  41b287:	pop    rbp
  41b288:	pop    r12
  41b28a:	pop    r13
  41b28c:	pop    r14
  41b28e:	ret    
  41b28f:	nop
  41b290:	pop    rbx
  41b291:	mov    eax,0x1
  41b296:	pop    rbp
  41b297:	pop    r12
  41b299:	pop    r13
  41b29b:	pop    r14
  41b29d:	ret    
  41b29e:	xchg   ax,ax
  41b2a0:	push   0x0
  41b2a2:	push   0x0
  41b2a4:	mov    r9,r14
  41b2a7:	mov    r8d,0x1
  41b2ad:	xor    esi,esi
  41b2af:	mov    ecx,0x64
  41b2b4:	mov    edx,0x64
  41b2b9:	mov    edi,ebp
  41b2bb:	call   437700 <strcmp@plt+0x33f48>
  41b2c0:	cmp    eax,0x1
  41b2c3:	pop    r8
  41b2c5:	pop    r9
  41b2c7:	jne    41b284 <strcmp@plt+0x17acc>
  41b2c9:	push   0x0
  41b2cb:	push   r14
  41b2cd:	xor    esi,esi
  41b2cf:	mov    edi,ebp
  41b2d1:	xor    r9d,r9d
  41b2d4:	mov    r8d,0x1
  41b2da:	mov    ecx,0x63
  41b2df:	mov    edx,0xfe
  41b2e4:	call   437700 <strcmp@plt+0x33f48>
  41b2e9:	cmp    eax,0x1
  41b2ec:	sete   al
  41b2ef:	pop    rsi
  41b2f0:	movzx  eax,al
  41b2f3:	pop    rdi
  41b2f4:	pop    rbx
  41b2f5:	pop    rbp
  41b2f6:	pop    r12
  41b2f8:	pop    r13
  41b2fa:	pop    r14
  41b2fc:	ret    
  41b2fd:	nop    DWORD PTR [rax]
  41b300:	push   r15
  41b302:	push   r14
  41b304:	mov    r15,rdi
  41b307:	push   r13
  41b309:	push   r12
  41b30b:	push   rbp
  41b30c:	push   rbx
  41b30d:	sub    rsp,0x8
  41b311:	mov    rax,0x4687e0
  41b318:	mov    r13,QWORD PTR [rax+0x70]
  41b31c:	call   4251c0 <strcmp@plt+0x21a08>
  41b321:	movzx  ebp,ax
  41b324:	test   ebp,ebp
  41b326:	jne    41b340 <strcmp@plt+0x17b88>
  41b328:	xor    r14d,r14d
  41b32b:	add    rsp,0x8
  41b32f:	mov    eax,r14d
  41b332:	pop    rbx
  41b333:	pop    rbp
  41b334:	pop    r12
  41b336:	pop    r13
  41b338:	pop    r14
  41b33a:	pop    r15
  41b33c:	ret    
  41b33d:	nop    DWORD PTR [rax]
  41b340:	lea    rdi,[rip+0x30e68]        # 44c1af <strcmp@plt+0x489f7>
  41b347:	mov    rsi,r15
  41b34a:	call   42faa0 <strcmp@plt+0x2c2e8>
  41b34f:	cmp    eax,0x1
  41b352:	mov    r14d,eax
  41b355:	jne    41b328 <strcmp@plt+0x17b70>
  41b357:	mov    rax,QWORD PTR [r13+0x38]
  41b35b:	mov    rbx,QWORD PTR [rax+0x8]
  41b35f:	cmp    rax,rbx
  41b362:	jne    41b37a <strcmp@plt+0x17bc2>
  41b364:	jmp    41b32b <strcmp@plt+0x17b73>
  41b366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b370:	mov    rbx,QWORD PTR [rbx+0x8]
  41b374:	cmp    QWORD PTR [r13+0x38],rbx
  41b378:	je     41b32b <strcmp@plt+0x17b73>
  41b37a:	mov    r12,QWORD PTR [rbx+0x10]
  41b37e:	mov    rdi,r12
  41b381:	call   4251c0 <strcmp@plt+0x21a08>
  41b386:	movzx  eax,ax
  41b389:	cmp    ebp,eax
  41b38b:	jne    41b370 <strcmp@plt+0x17bb8>
  41b38d:	mov    rax,0x4747d8
  41b394:	sub    rsp,0x8
  41b398:	xor    ecx,ecx
  41b39a:	push   0xfe
  41b39f:	xor    r9d,r9d
  41b3a2:	xor    r8d,r8d
  41b3a5:	mov    rdx,r12
  41b3a8:	mov    edi,ebp
  41b3aa:	mov    esi,DWORD PTR [rax]
  41b3ac:	call   437b50 <strcmp@plt+0x34398>
  41b3b1:	cmp    eax,0x1
  41b3b4:	pop    rdx
  41b3b5:	pop    rcx
  41b3b6:	je     41b370 <strcmp@plt+0x17bb8>
  41b3b8:	mov    rdi,r15
  41b3bb:	call   41b0f0 <strcmp@plt+0x17938>
  41b3c0:	jmp    41b328 <strcmp@plt+0x17b70>
  41b3c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41b3d0:	push   r14
  41b3d2:	push   r13
  41b3d4:	push   r12
  41b3d6:	push   rbp
  41b3d7:	push   rbx
  41b3d8:	mov    ebx,edi
  41b3da:	mov    rdi,rsi
  41b3dd:	call   425110 <strcmp@plt+0x21958>
  41b3e2:	mov    rdi,rax
  41b3e5:	mov    r14,rax
  41b3e8:	call   4251c0 <strcmp@plt+0x21a08>
  41b3ed:	movzx  ebp,ax
  41b3f0:	test   ebp,ebp
  41b3f2:	je     41b494 <strcmp@plt+0x17cdc>
  41b3f8:	test   ebx,ebx
  41b3fa:	je     41b420 <strcmp@plt+0x17c68>
  41b3fc:	cmp    ebx,0x3
  41b3ff:	jne    41b4a0 <strcmp@plt+0x17ce8>
  41b405:	mov    rdi,r14
  41b408:	call   41b300 <strcmp@plt+0x17b48>
  41b40d:	pop    rbx
  41b40e:	mov    eax,0x1
  41b413:	pop    rbp
  41b414:	pop    r12
  41b416:	pop    r13
  41b418:	pop    r14
  41b41a:	ret    
  41b41b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b420:	mov    rax,0x4687e0
  41b427:	mov    r13,QWORD PTR [rax+0x70]
  41b42b:	mov    rax,QWORD PTR [r13+0x38]
  41b42f:	mov    r10d,DWORD PTR [rax+0x18]
  41b433:	test   r10d,r10d
  41b436:	je     41b4b0 <strcmp@plt+0x17cf8>
  41b438:	mov    rbx,QWORD PTR [rax+0x8]
  41b43c:	cmp    rax,rbx
  41b43f:	jne    41b45a <strcmp@plt+0x17ca2>
  41b441:	jmp    41b4d9 <strcmp@plt+0x17d21>
  41b446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b450:	mov    rbx,QWORD PTR [rbx+0x8]
  41b454:	cmp    QWORD PTR [r13+0x38],rbx
  41b458:	je     41b4d9 <strcmp@plt+0x17d21>
  41b45a:	mov    r12,QWORD PTR [rbx+0x10]
  41b45e:	mov    rdi,r12
  41b461:	call   4251c0 <strcmp@plt+0x21a08>
  41b466:	movzx  eax,ax
  41b469:	cmp    ebp,eax
  41b46b:	jne    41b450 <strcmp@plt+0x17c98>
  41b46d:	push   0x0
  41b46f:	push   r12
  41b471:	mov    ecx,0x64
  41b476:	mov    edx,0x64
  41b47b:	xor    esi,esi
  41b47d:	mov    r9,r14
  41b480:	mov    r8d,0x1
  41b486:	mov    edi,ebp
  41b488:	call   437660 <strcmp@plt+0x33ea8>
  41b48d:	cmp    eax,0x1
  41b490:	pop    rdx
  41b491:	pop    rcx
  41b492:	je     41b450 <strcmp@plt+0x17c98>
  41b494:	pop    rbx
  41b495:	xor    eax,eax
  41b497:	pop    rbp
  41b498:	pop    r12
  41b49a:	pop    r13
  41b49c:	pop    r14
  41b49e:	ret    
  41b49f:	nop
  41b4a0:	pop    rbx
  41b4a1:	mov    eax,0x1
  41b4a6:	pop    rbp
  41b4a7:	pop    r12
  41b4a9:	pop    r13
  41b4ab:	pop    r14
  41b4ad:	ret    
  41b4ae:	xchg   ax,ax
  41b4b0:	push   0x0
  41b4b2:	push   0x0
  41b4b4:	mov    r9,r14
  41b4b7:	mov    r8d,0x1
  41b4bd:	xor    esi,esi
  41b4bf:	mov    ecx,0x64
  41b4c4:	mov    edx,0x64
  41b4c9:	mov    edi,ebp
  41b4cb:	call   437660 <strcmp@plt+0x33ea8>
  41b4d0:	cmp    eax,0x1
  41b4d3:	pop    r8
  41b4d5:	pop    r9
  41b4d7:	jne    41b494 <strcmp@plt+0x17cdc>
  41b4d9:	push   0x0
  41b4db:	push   r14
  41b4dd:	xor    esi,esi
  41b4df:	mov    edi,ebp
  41b4e1:	xor    r9d,r9d
  41b4e4:	mov    r8d,0x1
  41b4ea:	mov    ecx,0x63
  41b4ef:	mov    edx,0xfe
  41b4f4:	call   437660 <strcmp@plt+0x33ea8>
  41b4f9:	cmp    eax,0x1
  41b4fc:	sete   al
  41b4ff:	pop    rsi
  41b500:	movzx  eax,al
  41b503:	pop    rdi
  41b504:	pop    rbx
  41b505:	pop    rbp
  41b506:	pop    r12
  41b508:	pop    r13
  41b50a:	pop    r14
  41b50c:	ret    
  41b50d:	nop    DWORD PTR [rax]
  41b510:	push   rbx
  41b511:	mov    ebx,edi
  41b513:	lea    rdi,[rip+0x30c95]        # 44c1af <strcmp@plt+0x489f7>
  41b51a:	call   4030b0 <if_nametoindex@plt>
  41b51f:	sub    rsp,0x8
  41b523:	xor    ecx,ecx
  41b525:	xor    edx,edx
  41b527:	push   0x64
  41b529:	mov    edi,ebx
  41b52b:	mov    r9d,0x64
  41b531:	xor    r8d,r8d
  41b534:	mov    esi,eax
  41b536:	call   437b50 <strcmp@plt+0x34398>
  41b53b:	pop    rdx
  41b53c:	pop    rcx
  41b53d:	pop    rbx
  41b53e:	ret    
  41b53f:	nop
  41b540:	push   r14
  41b542:	push   r13
  41b544:	push   r12
  41b546:	push   rbp
  41b547:	mov    rbp,rsi
  41b54a:	push   rbx
  41b54b:	mov    rbx,rdi
  41b54e:	mov    r12d,DWORD PTR [rdi+0x8]
  41b552:	mov    rdi,rsi
  41b555:	call   4251c0 <strcmp@plt+0x21a08>
  41b55a:	cmp    ax,0x2
  41b55e:	je     41b5d0 <strcmp@plt+0x17e18>
  41b560:	cmp    ax,0xa
  41b564:	jne    41b5be <strcmp@plt+0x17e06>
  41b566:	mov    rdi,QWORD PTR [rbx+0x28]
  41b56a:	lea    r14,[rbx+0x28]
  41b56e:	mov    r13d,0xa
  41b574:	test   rdi,rdi
  41b577:	je     41b580 <strcmp@plt+0x17dc8>
  41b579:	mov    ecx,DWORD PTR [rdi+0x18]
  41b57c:	test   ecx,ecx
  41b57e:	jne    41b5e0 <strcmp@plt+0x17e28>
  41b580:	call   424750 <strcmp@plt+0x20f98>
  41b585:	xor    eax,eax
  41b587:	call   424740 <strcmp@plt+0x20f88>
  41b58c:	mov    rsi,rbp
  41b58f:	mov    QWORD PTR [r14],rax
  41b592:	mov    rdi,rax
  41b595:	call   424b00 <strcmp@plt+0x21348>
  41b59a:	sub    rsp,0x8
  41b59e:	mov    esi,DWORD PTR [rbx+0x8]
  41b5a1:	add    r12d,0xa
  41b5a5:	push   r12
  41b5a7:	xor    edx,edx
  41b5a9:	mov    r9d,0x64
  41b5af:	mov    r8,rbp
  41b5b2:	xor    ecx,ecx
  41b5b4:	mov    edi,r13d
  41b5b7:	call   437b50 <strcmp@plt+0x34398>
  41b5bc:	pop    rax
  41b5bd:	pop    rdx
  41b5be:	pop    rbx
  41b5bf:	pop    rbp
  41b5c0:	pop    r12
  41b5c2:	pop    r13
  41b5c4:	pop    r14
  41b5c6:	ret    
  41b5c7:	nop    WORD PTR [rax+rax*1+0x0]
  41b5d0:	lea    r14,[rbx+0x20]
  41b5d4:	mov    rdi,QWORD PTR [rbx+0x20]
  41b5d8:	mov    r13d,0x2
  41b5de:	jmp    41b574 <strcmp@plt+0x17dbc>
  41b5e0:	mov    rsi,rbp
  41b5e3:	call   424df0 <strcmp@plt+0x21638>
  41b5e8:	test   eax,eax
  41b5ea:	jne    41b620 <strcmp@plt+0x17e68>
  41b5ec:	mov    rax,0x468e3c
  41b5f3:	cmp    DWORD PTR [rax],0x2
  41b5f6:	jle    41b59a <strcmp@plt+0x17de2>
  41b5f8:	mov    rdi,rbp
  41b5fb:	call   424890 <strcmp@plt+0x210d8>
  41b600:	lea    rsi,[rip+0x30d51]        # 44c358 <strcmp@plt+0x48ba0>
  41b607:	mov    rdx,rax
  41b60a:	mov    edi,0x7
  41b60f:	xor    eax,eax
  41b611:	call   4306a0 <strcmp@plt+0x2cee8>
  41b616:	jmp    41b59a <strcmp@plt+0x17de2>
  41b618:	nop    DWORD PTR [rax+rax*1+0x0]
  41b620:	mov    rdi,QWORD PTR [r14]
  41b623:	mov    rsi,rbp
  41b626:	call   424b00 <strcmp@plt+0x21348>
  41b62b:	jmp    41b59a <strcmp@plt+0x17de2>
  41b630:	push   r13
  41b632:	push   r12
  41b634:	push   rbp
  41b635:	push   rbx
  41b636:	mov    rbx,rdi
  41b639:	mov    rbp,rsi
  41b63c:	sub    rsp,0x8
  41b640:	mov    r12d,DWORD PTR [rdi+0x8]
  41b644:	mov    rdi,rsi
  41b647:	call   4251c0 <strcmp@plt+0x21a08>
  41b64c:	cmp    ax,0x2
  41b650:	je     41b6b8 <strcmp@plt+0x17f00>
  41b652:	cmp    ax,0xa
  41b656:	jne    41b6a6 <strcmp@plt+0x17eee>
  41b658:	mov    rax,QWORD PTR [rbx+0x28]
  41b65c:	lea    r13,[rbx+0x28]
  41b660:	mov    edi,0xa
  41b665:	test   rax,rax
  41b668:	je     41b6a6 <strcmp@plt+0x17eee>
  41b66a:	mov    ecx,DWORD PTR [rax+0x18]
  41b66d:	test   ecx,ecx
  41b66f:	je     41b6a6 <strcmp@plt+0x17eee>
  41b671:	sub    rsp,0x8
  41b675:	mov    esi,DWORD PTR [rbx+0x8]
  41b678:	add    r12d,0xa
  41b67c:	push   r12
  41b67e:	xor    edx,edx
  41b680:	mov    r9d,0x64
  41b686:	mov    r8,rbp
  41b689:	xor    ecx,ecx
  41b68b:	call   437c30 <strcmp@plt+0x34478>
  41b690:	mov    rdi,QWORD PTR [r13+0x0]
  41b694:	call   424750 <strcmp@plt+0x20f98>
  41b699:	xor    edi,edi
  41b69b:	call   424670 <strcmp@plt+0x20eb8>
  41b6a0:	mov    QWORD PTR [r13+0x0],rax
  41b6a4:	pop    rax
  41b6a5:	pop    rdx
  41b6a6:	add    rsp,0x8
  41b6aa:	pop    rbx
  41b6ab:	pop    rbp
  41b6ac:	pop    r12
  41b6ae:	pop    r13
  41b6b0:	ret    
  41b6b1:	nop    DWORD PTR [rax+0x0]
  41b6b8:	lea    r13,[rbx+0x20]
  41b6bc:	mov    rax,QWORD PTR [rbx+0x20]
  41b6c0:	mov    edi,0x2
  41b6c5:	jmp    41b665 <strcmp@plt+0x17ead>
  41b6c7:	nop    WORD PTR [rax+rax*1+0x0]
  41b6d0:	cmp    edi,0x1
  41b6d3:	push   r12
  41b6d5:	mov    rdi,r8
  41b6d8:	push   rbp
  41b6d9:	mov    r12,rsi
  41b6dc:	push   rbx
  41b6dd:	mov    rbp,rcx
  41b6e0:	mov    rbx,r8
  41b6e3:	je     41b740 <strcmp@plt+0x17f88>
  41b6e5:	call   4251c0 <strcmp@plt+0x21a08>
  41b6ea:	test   ax,ax
  41b6ed:	jne    41b700 <strcmp@plt+0x17f48>
  41b6ef:	pop    rbx
  41b6f0:	mov    eax,0x1
  41b6f5:	pop    rbp
  41b6f6:	pop    r12
  41b6f8:	ret    
  41b6f9:	nop    DWORD PTR [rax+0x0]
  41b700:	mov    rdi,rbp
  41b703:	call   4251c0 <strcmp@plt+0x21a08>
  41b708:	test   ax,ax
  41b70b:	jne    41b6ef <strcmp@plt+0x17f37>
  41b70d:	mov    rdi,rbx
  41b710:	call   4263c0 <strcmp@plt+0x22c08>
  41b715:	cmp    eax,0x1
  41b718:	mov    rax,0x468e3c
  41b71f:	je     41b7d0 <strcmp@plt+0x18018>
  41b725:	mov    eax,DWORD PTR [rax]
  41b727:	test   eax,eax
  41b729:	jg     41b7a8 <strcmp@plt+0x17ff0>
  41b72b:	mov    rsi,rbx
  41b72e:	mov    rdi,r12
  41b731:	call   41b630 <strcmp@plt+0x17e78>
  41b736:	jmp    41b6ef <strcmp@plt+0x17f37>
  41b738:	nop    DWORD PTR [rax+rax*1+0x0]
  41b740:	call   4251c0 <strcmp@plt+0x21a08>
  41b745:	test   ax,ax
  41b748:	je     41b6ef <strcmp@plt+0x17f37>
  41b74a:	mov    rdi,rbp
  41b74d:	call   4251c0 <strcmp@plt+0x21a08>
  41b752:	test   ax,ax
  41b755:	jne    41b6ef <strcmp@plt+0x17f37>
  41b757:	mov    rdi,rbx
  41b75a:	call   4263c0 <strcmp@plt+0x22c08>
  41b75f:	cmp    eax,0x1
  41b762:	mov    rax,0x468e3c
  41b769:	je     41b7d0 <strcmp@plt+0x18018>
  41b76b:	mov    edx,DWORD PTR [rax]
  41b76d:	test   edx,edx
  41b76f:	jle    41b793 <strcmp@plt+0x17fdb>
  41b771:	mov    rdi,rbx
  41b774:	call   424890 <strcmp@plt+0x210d8>
  41b779:	mov    rdx,QWORD PTR [r12]
  41b77d:	lea    rsi,[rip+0x30c94]        # 44c418 <strcmp@plt+0x48c60>
  41b784:	mov    rcx,rax
  41b787:	mov    edi,0x5
  41b78c:	xor    eax,eax
  41b78e:	call   4306a0 <strcmp@plt+0x2cee8>
  41b793:	mov    rsi,rbx
  41b796:	mov    rdi,r12
  41b799:	call   41b540 <strcmp@plt+0x17d88>
  41b79e:	jmp    41b6ef <strcmp@plt+0x17f37>
  41b7a3:	nop    DWORD PTR [rax+rax*1+0x0]
  41b7a8:	mov    rdi,rbx
  41b7ab:	call   424890 <strcmp@plt+0x210d8>
  41b7b0:	mov    rdx,QWORD PTR [r12]
  41b7b4:	lea    rsi,[rip+0x30cad]        # 44c468 <strcmp@plt+0x48cb0>
  41b7bb:	mov    rcx,rax
  41b7be:	mov    edi,0x5
  41b7c3:	xor    eax,eax
  41b7c5:	call   4306a0 <strcmp@plt+0x2cee8>
  41b7ca:	jmp    41b72b <strcmp@plt+0x17f73>
  41b7cf:	nop
  41b7d0:	cmp    DWORD PTR [rax],0x2
  41b7d3:	jle    41b6ef <strcmp@plt+0x17f37>
  41b7d9:	mov    rdi,rbx
  41b7dc:	call   424890 <strcmp@plt+0x210d8>
  41b7e1:	lea    rsi,[rip+0x30bc8]        # 44c3b0 <strcmp@plt+0x48bf8>
  41b7e8:	mov    rdx,rax
  41b7eb:	mov    edi,0x7
  41b7f0:	xor    eax,eax
  41b7f2:	call   4306a0 <strcmp@plt+0x2cee8>
  41b7f7:	jmp    41b6ef <strcmp@plt+0x17f37>
  41b7fc:	nop    DWORD PTR [rax+0x0]
  41b800:	mov    rax,0x4687e0
  41b807:	push   rbx
  41b808:	mov    edi,0x2
  41b80d:	mov    rbx,QWORD PTR [rax+0x70]
  41b811:	call   43eaf0 <strcmp@plt+0x3b338>
  41b816:	test   rax,rax
  41b819:	mov    QWORD PTR [rbx+0x8],rax
  41b81d:	je     41b851 <strcmp@plt+0x18099>
  41b81f:	mov    rdx,0x468e3c
  41b826:	cmp    DWORD PTR [rdx],0x1
  41b829:	jle    41b851 <strcmp@plt+0x18099>
  41b82b:	mov    rdi,QWORD PTR [rax+0x10]
  41b82f:	call   424890 <strcmp@plt+0x210d8>
  41b834:	mov    rdx,QWORD PTR [rbx+0x8]
  41b838:	lea    rsi,[rip+0x30ca9]        # 44c4e8 <strcmp@plt+0x48d30>
  41b83f:	mov    rcx,rax
  41b842:	mov    edi,0x6
  41b847:	xor    eax,eax
  41b849:	mov    rdx,QWORD PTR [rdx]
  41b84c:	call   4306a0 <strcmp@plt+0x2cee8>
  41b851:	mov    edi,0xa
  41b856:	call   43eaf0 <strcmp@plt+0x3b338>
  41b85b:	test   rax,rax
  41b85e:	mov    QWORD PTR [rbx+0x10],rax
  41b862:	je     41b8c0 <strcmp@plt+0x18108>
  41b864:	mov    rdx,0x468e3c
  41b86b:	cmp    DWORD PTR [rdx],0x1
  41b86e:	jg     41b878 <strcmp@plt+0x180c0>
  41b870:	pop    rbx
  41b871:	ret    
  41b872:	nop    WORD PTR [rax+rax*1+0x0]
  41b878:	mov    rdi,QWORD PTR [rax+0x18]
  41b87c:	call   424890 <strcmp@plt+0x210d8>
  41b881:	mov    rdx,QWORD PTR [rbx+0x10]
  41b885:	lea    rsi,[rip+0x30c7c]        # 44c508 <strcmp@plt+0x48d50>
  41b88c:	mov    rcx,rax
  41b88f:	mov    edi,0x6
  41b894:	xor    eax,eax
  41b896:	mov    rdx,QWORD PTR [rdx]
  41b899:	call   4306a0 <strcmp@plt+0x2cee8>
  41b89e:	cmp    QWORD PTR [rbx+0x8],0x0
  41b8a3:	jne    41b870 <strcmp@plt+0x180b8>
  41b8a5:	cmp    QWORD PTR [rbx+0x10],0x0
  41b8aa:	jne    41b870 <strcmp@plt+0x180b8>
  41b8ac:	pop    rbx
  41b8ad:	lea    rsi,[rip+0x30c04]        # 44c4b8 <strcmp@plt+0x48d00>
  41b8b4:	mov    edi,0x1
  41b8b9:	xor    eax,eax
  41b8bb:	jmp    4306a0 <strcmp@plt+0x2cee8>
  41b8c0:	cmp    QWORD PTR [rbx+0x8],0x0
  41b8c5:	je     41b8ac <strcmp@plt+0x180f4>
  41b8c7:	pop    rbx
  41b8c8:	ret    
  41b8c9:	nop    DWORD PTR [rax+0x0]
  41b8d0:	push   r15
  41b8d2:	push   r14
  41b8d4:	push   r13
  41b8d6:	push   r12
  41b8d8:	mov    r12,rdi
  41b8db:	push   rbp
  41b8dc:	push   rbx
  41b8dd:	mov    ebx,esi
  41b8df:	sub    rsp,0x8
  41b8e3:	mov    rax,0x4687e0
  41b8ea:	mov    r13d,DWORD PTR [rdi+0x8]
  41b8ee:	mov    r14,QWORD PTR [rax+0x70]
  41b8f2:	call   43ebb0 <strcmp@plt+0x3b3f8>
  41b8f7:	test   rax,rax
  41b8fa:	je     41b9b8 <strcmp@plt+0x18200>
  41b900:	mov    rbp,rax
  41b903:	xor    eax,eax
  41b905:	mov    ecx,DWORD PTR [rbp+0x18]
  41b908:	test   ecx,ecx
  41b90a:	jne    41b920 <strcmp@plt+0x18168>
  41b90c:	add    rsp,0x8
  41b910:	pop    rbx
  41b911:	pop    rbp
  41b912:	pop    r12
  41b914:	pop    r13
  41b916:	pop    r14
  41b918:	pop    r15
  41b91a:	ret    
  41b91b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b920:	mov    edi,ebx
  41b922:	add    r13d,0xa
  41b926:	call   438980 <strcmp@plt+0x351c8>
  41b92b:	xor    ecx,ecx
  41b92d:	mov    rdx,rbp
  41b930:	mov    esi,ebx
  41b932:	mov    edi,eax
  41b934:	mov    r15d,eax
  41b937:	call   439130 <strcmp@plt+0x35978>
  41b93c:	push   0x0
  41b93e:	push   0x0
  41b940:	movzx  edx,r13b
  41b944:	xor    esi,esi
  41b946:	mov    r9,rbp
  41b949:	mov    r8d,0x1
  41b94f:	mov    ecx,r13d
  41b952:	mov    edi,ebx
  41b954:	call   437660 <strcmp@plt+0x33ea8>
  41b959:	cmp    ebx,0x2
  41b95c:	pop    rax
  41b95d:	pop    rdx
  41b95e:	je     41b990 <strcmp@plt+0x181d8>
  41b960:	cmp    ebx,0xa
  41b963:	jne    41b976 <strcmp@plt+0x181be>
  41b965:	test   r14,r14
  41b968:	mov    DWORD PTR [r12+0x34],r15d
  41b96d:	je     41b976 <strcmp@plt+0x181be>
  41b96f:	cmp    QWORD PTR [r14+0x10],0x0
  41b974:	je     41b9a1 <strcmp@plt+0x181e9>
  41b976:	add    rsp,0x8
  41b97a:	mov    eax,0x1
  41b97f:	pop    rbx
  41b980:	pop    rbp
  41b981:	pop    r12
  41b983:	pop    r13
  41b985:	pop    r14
  41b987:	pop    r15
  41b989:	ret    
  41b98a:	nop    WORD PTR [rax+rax*1+0x0]
  41b990:	test   r14,r14
  41b993:	mov    DWORD PTR [r12+0x30],r15d
  41b998:	je     41b976 <strcmp@plt+0x181be>
  41b99a:	cmp    QWORD PTR [r14+0x8],0x0
  41b99f:	jne    41b976 <strcmp@plt+0x181be>
  41b9a1:	xor    eax,eax
  41b9a3:	call   41b800 <strcmp@plt+0x18048>
  41b9a8:	mov    eax,0x1
  41b9ad:	jmp    41b90c <strcmp@plt+0x18154>
  41b9b2:	nop    WORD PTR [rax+rax*1+0x0]
  41b9b8:	add    rsp,0x8
  41b9bc:	xor    eax,eax
  41b9be:	pop    rbx
  41b9bf:	pop    rbp
  41b9c0:	pop    r12
  41b9c2:	pop    r13
  41b9c4:	pop    r14
  41b9c6:	pop    r15
  41b9c8:	ret    
  41b9c9:	nop    DWORD PTR [rax+0x0]
  41b9d0:	push   r15
  41b9d2:	push   r14
  41b9d4:	push   r13
  41b9d6:	push   r12
  41b9d8:	mov    r12,rsi
  41b9db:	push   rbp
  41b9dc:	push   rbx
  41b9dd:	mov    rbp,rdi
  41b9e0:	sub    rsp,0x18
  41b9e4:	mov    rax,0x4687e0
  41b9eb:	mov    r10d,DWORD PTR [rdx+0x18]
  41b9ef:	mov    r13,QWORD PTR [rax+0x70]
  41b9f3:	mov    eax,DWORD PTR [rdi+0x8]
  41b9f6:	test   r10d,r10d
  41b9f9:	lea    ebx,[rax+0xa]
  41b9fc:	jne    41ba60 <strcmp@plt+0x182a8>
  41b9fe:	mov    rdi,rsi
  41ba01:	call   4251c0 <strcmp@plt+0x21a08>
  41ba06:	cmp    ax,0x2
  41ba0a:	movzx  r15d,ax
  41ba0e:	je     41bb40 <strcmp@plt+0x18388>
  41ba14:	cmp    ax,0xa
  41ba18:	je     41bb90 <strcmp@plt+0x183d8>
  41ba1e:	cmp    r14,rbp
  41ba21:	je     41bb5c <strcmp@plt+0x183a4>
  41ba27:	push   0x0
  41ba29:	push   0x0
  41ba2b:	mov    r9,r12
  41ba2e:	mov    r8d,0x1
  41ba34:	movzx  edx,bl
  41ba37:	mov    ecx,ebx
  41ba39:	xor    esi,esi
  41ba3b:	mov    edi,r15d
  41ba3e:	call   437700 <strcmp@plt+0x33f48>
  41ba43:	pop    r8
  41ba45:	pop    r9
  41ba47:	mov    eax,0x1
  41ba4c:	add    rsp,0x18
  41ba50:	pop    rbx
  41ba51:	pop    rbp
  41ba52:	pop    r12
  41ba54:	pop    r13
  41ba56:	pop    r14
  41ba58:	pop    r15
  41ba5a:	ret    
  41ba5b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ba60:	mov    eax,DWORD PTR [rsi+0x18]
  41ba63:	mov    r15,rdx
  41ba66:	mov    rdi,rdx
  41ba69:	mov    DWORD PTR [rsp+0x8],eax
  41ba6d:	call   4251c0 <strcmp@plt+0x21a08>
  41ba72:	mov    rsi,r15
  41ba75:	mov    rdi,r12
  41ba78:	mov    r14d,eax
  41ba7b:	call   424df0 <strcmp@plt+0x21638>
  41ba80:	test   eax,eax
  41ba82:	jne    41bac8 <strcmp@plt+0x18310>
  41ba84:	mov    rax,0x468e3c
  41ba8b:	cmp    DWORD PTR [rax],0x1
  41ba8e:	jg     41bc30 <strcmp@plt+0x18478>
  41ba94:	cmp    r14w,0x2
  41ba99:	je     41bc60 <strcmp@plt+0x184a8>
  41ba9f:	cmp    r14w,0xa
  41baa4:	jne    41bc90 <strcmp@plt+0x184d8>
  41baaa:	mov    edi,DWORD PTR [rbp+0x34]
  41baad:	xor    ecx,ecx
  41baaf:	mov    rdx,r15
  41bab2:	mov    esi,0xa
  41bab7:	call   439130 <strcmp@plt+0x35978>
  41babc:	mov    eax,0x1
  41bac1:	jmp    41ba4c <strcmp@plt+0x18294>
  41bac3:	nop    DWORD PTR [rax+rax*1+0x0]
  41bac8:	mov    edi,DWORD PTR [rsp+0x8]
  41bacc:	movzx  eax,r14w
  41bad0:	mov    DWORD PTR [rsp+0xc],eax
  41bad4:	test   edi,edi
  41bad6:	jne    41bbb0 <strcmp@plt+0x183f8>
  41badc:	mov    r12,0x468e3c
  41bae3:	cmp    DWORD PTR [r12],0x1
  41bae8:	jle    41bb08 <strcmp@plt+0x18350>
  41baea:	mov    rdi,r15
  41baed:	call   424890 <strcmp@plt+0x210d8>
  41baf2:	lea    rsi,[rip+0x30ad7]        # 44c5d0 <strcmp@plt+0x48e18>
  41baf9:	mov    rdx,rax
  41bafc:	mov    edi,0x6
  41bb01:	xor    eax,eax
  41bb03:	call   4306a0 <strcmp@plt+0x2cee8>
  41bb08:	cmp    r14w,0x2
  41bb0d:	je     41bcb0 <strcmp@plt+0x184f8>
  41bb13:	cmp    r14w,0xa
  41bb18:	jne    41bc80 <strcmp@plt+0x184c8>
  41bb1e:	mov    edi,0xa
  41bb23:	call   438980 <strcmp@plt+0x351c8>
  41bb28:	cmp    BYTE PTR [rbp+0xc],0x1
  41bb2c:	mov    r14d,eax
  41bb2f:	mov    DWORD PTR [rbp+0x34],eax
  41bb32:	je     41bd00 <strcmp@plt+0x18548>
  41bb38:	movzx  ebp,bl
  41bb3b:	jmp    41bbeb <strcmp@plt+0x18433>
  41bb40:	mov    edi,DWORD PTR [rbp+0x30]
  41bb43:	call   403790 <close@plt>
  41bb48:	mov    r14,QWORD PTR [r13+0x8]
  41bb4c:	mov    DWORD PTR [rbp+0x30],0x0
  41bb53:	cmp    r14,rbp
  41bb56:	jne    41ba27 <strcmp@plt+0x1826f>
  41bb5c:	mov    rax,0x468e3c
  41bb63:	cmp    DWORD PTR [rax],0x1
  41bb66:	jle    41bb7b <strcmp@plt+0x183c3>
  41bb68:	lea    rsi,[rip+0x309b9]        # 44c528 <strcmp@plt+0x48d70>
  41bb6f:	mov    edi,0x6
  41bb74:	xor    eax,eax
  41bb76:	call   4306a0 <strcmp@plt+0x2cee8>
  41bb7b:	xor    eax,eax
  41bb7d:	call   41b800 <strcmp@plt+0x18048>
  41bb82:	jmp    41ba27 <strcmp@plt+0x1826f>
  41bb87:	nop    WORD PTR [rax+rax*1+0x0]
  41bb90:	mov    edi,DWORD PTR [rbp+0x34]
  41bb93:	call   403790 <close@plt>
  41bb98:	mov    DWORD PTR [rbp+0x34],0x0
  41bb9f:	mov    r14,QWORD PTR [r13+0x10]
  41bba3:	jmp    41ba1e <strcmp@plt+0x18266>
  41bba8:	nop    DWORD PTR [rax+rax*1+0x0]
  41bbb0:	cmp    r14w,0x2
  41bbb5:	je     41bca0 <strcmp@plt+0x184e8>
  41bbbb:	cmp    r14w,0xa
  41bbc0:	jne    41bc80 <strcmp@plt+0x184c8>
  41bbc6:	mov    r14d,DWORD PTR [rbp+0x34]
  41bbca:	push   0x0
  41bbcc:	push   0x0
  41bbce:	movzx  ebp,bl
  41bbd1:	mov    edi,DWORD PTR [rsp+0x1c]
  41bbd5:	mov    ecx,ebx
  41bbd7:	xor    esi,esi
  41bbd9:	mov    r9,r12
  41bbdc:	mov    r8d,0x1
  41bbe2:	mov    edx,ebp
  41bbe4:	call   437700 <strcmp@plt+0x33f48>
  41bbe9:	pop    rcx
  41bbea:	pop    rsi
  41bbeb:	push   0x0
  41bbed:	mov    ecx,ebx
  41bbef:	push   0x0
  41bbf1:	mov    ebx,DWORD PTR [rsp+0x1c]
  41bbf5:	mov    r9,r15
  41bbf8:	mov    edx,ebp
  41bbfa:	mov    r8d,0x1
  41bc00:	xor    esi,esi
  41bc02:	mov    edi,ebx
  41bc04:	call   437660 <strcmp@plt+0x33ea8>
  41bc09:	mov    rdx,r15
  41bc0c:	mov    esi,ebx
  41bc0e:	mov    edi,r14d
  41bc11:	xor    ecx,ecx
  41bc13:	call   439130 <strcmp@plt+0x35978>
  41bc18:	pop    rax
  41bc19:	pop    rdx
  41bc1a:	mov    eax,0x1
  41bc1f:	add    rsp,0x18
  41bc23:	pop    rbx
  41bc24:	pop    rbp
  41bc25:	pop    r12
  41bc27:	pop    r13
  41bc29:	pop    r14
  41bc2b:	pop    r15
  41bc2d:	ret    
  41bc2e:	xchg   ax,ax
  41bc30:	mov    rdi,r15
  41bc33:	call   424890 <strcmp@plt+0x210d8>
  41bc38:	mov    rdx,QWORD PTR [rbp+0x0]
  41bc3c:	lea    rsi,[rip+0x30935]        # 44c578 <strcmp@plt+0x48dc0>
  41bc43:	mov    rcx,rax
  41bc46:	mov    edi,0x6
  41bc4b:	xor    eax,eax
  41bc4d:	call   4306a0 <strcmp@plt+0x2cee8>
  41bc52:	jmp    41ba94 <strcmp@plt+0x182dc>
  41bc57:	nop    WORD PTR [rax+rax*1+0x0]
  41bc60:	mov    edi,DWORD PTR [rbp+0x30]
  41bc63:	xor    ecx,ecx
  41bc65:	mov    rdx,r15
  41bc68:	mov    esi,0x2
  41bc6d:	call   439130 <strcmp@plt+0x35978>
  41bc72:	mov    eax,0x1
  41bc77:	jmp    41ba4c <strcmp@plt+0x18294>
  41bc7c:	nop    DWORD PTR [rax+0x0]
  41bc80:	xor    eax,eax
  41bc82:	jmp    41ba4c <strcmp@plt+0x18294>
  41bc87:	nop    WORD PTR [rax+rax*1+0x0]
  41bc90:	mov    eax,0x1
  41bc95:	jmp    41ba4c <strcmp@plt+0x18294>
  41bc9a:	nop    WORD PTR [rax+rax*1+0x0]
  41bca0:	mov    r14d,DWORD PTR [rbp+0x30]
  41bca4:	jmp    41bbca <strcmp@plt+0x18412>
  41bca9:	nop    DWORD PTR [rax+0x0]
  41bcb0:	mov    edi,0x2
  41bcb5:	call   438980 <strcmp@plt+0x351c8>
  41bcba:	cmp    BYTE PTR [rbp+0xc],0x1
  41bcbe:	mov    r14d,eax
  41bcc1:	mov    DWORD PTR [rbp+0x30],eax
  41bcc4:	jne    41bb38 <strcmp@plt+0x18380>
  41bcca:	cmp    QWORD PTR [r13+0x8],0x0
  41bccf:	jne    41bb38 <strcmp@plt+0x18380>
  41bcd5:	cmp    DWORD PTR [r12],0x1
  41bcda:	jle    41bcef <strcmp@plt+0x18537>
  41bcdc:	lea    rsi,[rip+0x30935]        # 44c618 <strcmp@plt+0x48e60>
  41bce3:	mov    edi,0x6
  41bce8:	xor    eax,eax
  41bcea:	call   4306a0 <strcmp@plt+0x2cee8>
  41bcef:	xor    eax,eax
  41bcf1:	call   41b800 <strcmp@plt+0x18048>
  41bcf6:	jmp    41bb38 <strcmp@plt+0x18380>
  41bcfb:	nop    DWORD PTR [rax+rax*1+0x0]
  41bd00:	cmp    QWORD PTR [r13+0x10],0x0
  41bd05:	jne    41bb38 <strcmp@plt+0x18380>
  41bd0b:	jmp    41bcd5 <strcmp@plt+0x1851d>
  41bd0d:	nop    DWORD PTR [rax]
  41bd10:	push   r13
  41bd12:	push   r12
  41bd14:	push   rbp
  41bd15:	push   rbx
  41bd16:	mov    rbx,rdi
  41bd19:	sub    rsp,0x8
  41bd1d:	mov    rax,0x4687e0
  41bd24:	cmp    esi,edx
  41bd26:	mov    r13,QWORD PTR [rax+0x70]
  41bd2a:	je     41bd72 <strcmp@plt+0x185ba>
  41bd2c:	mov    rax,0x468e3c
  41bd33:	mov    ebp,esi
  41bd35:	mov    r12d,edx
  41bd38:	cmp    DWORD PTR [rax],0x1
  41bd3b:	jg     41bdd0 <strcmp@plt+0x18618>
  41bd41:	mov    r9,QWORD PTR [rbx+0x10]
  41bd45:	add    ebp,0xa
  41bd48:	add    r12d,0xa
  41bd4c:	test   r9,r9
  41bd4f:	je     41bd5d <strcmp@plt+0x185a5>
  41bd51:	mov    edx,DWORD PTR [r9+0x18]
  41bd55:	test   edx,edx
  41bd57:	jne    41be80 <strcmp@plt+0x186c8>
  41bd5d:	mov    r9,QWORD PTR [rbx+0x18]
  41bd61:	test   r9,r9
  41bd64:	je     41bd72 <strcmp@plt+0x185ba>
  41bd66:	mov    eax,DWORD PTR [r9+0x18]
  41bd6a:	test   eax,eax
  41bd6c:	jne    41be10 <strcmp@plt+0x18658>
  41bd72:	mov    rax,QWORD PTR [r13+0x8]
  41bd76:	cmp    rbx,rax
  41bd79:	je     41bda8 <strcmp@plt+0x185f0>
  41bd7b:	mov    rdx,QWORD PTR [r13+0x10]
  41bd7f:	test   rdx,rdx
  41bd82:	sete   cl
  41bd85:	test   rax,rax
  41bd88:	sete   al
  41bd8b:	or     cl,al
  41bd8d:	jne    41bda8 <strcmp@plt+0x185f0>
  41bd8f:	cmp    rbx,rdx
  41bd92:	je     41bda8 <strcmp@plt+0x185f0>
  41bd94:	add    rsp,0x8
  41bd98:	mov    eax,0x1
  41bd9d:	pop    rbx
  41bd9e:	pop    rbp
  41bd9f:	pop    r12
  41bda1:	pop    r13
  41bda3:	ret    
  41bda4:	nop    DWORD PTR [rax+0x0]
  41bda8:	mov    rax,0x468e3c
  41bdaf:	cmp    DWORD PTR [rax],0x1
  41bdb2:	jg     41bdf0 <strcmp@plt+0x18638>
  41bdb4:	xor    eax,eax
  41bdb6:	call   41b800 <strcmp@plt+0x18048>
  41bdbb:	add    rsp,0x8
  41bdbf:	mov    eax,0x1
  41bdc4:	pop    rbx
  41bdc5:	pop    rbp
  41bdc6:	pop    r12
  41bdc8:	pop    r13
  41bdca:	ret    
  41bdcb:	nop    DWORD PTR [rax+rax*1+0x0]
  41bdd0:	mov    ecx,DWORD PTR [rdi+0x8]
  41bdd3:	mov    rdx,QWORD PTR [rdi]
  41bdd6:	lea    rsi,[rip+0x3087b]        # 44c658 <strcmp@plt+0x48ea0>
  41bddd:	mov    edi,0x6
  41bde2:	xor    eax,eax
  41bde4:	call   4306a0 <strcmp@plt+0x2cee8>
  41bde9:	jmp    41bd41 <strcmp@plt+0x18589>
  41bdee:	xchg   ax,ax
  41bdf0:	lea    rsi,[rip+0x308b1]        # 44c6a8 <strcmp@plt+0x48ef0>
  41bdf7:	xor    eax,eax
  41bdf9:	mov    edi,0x6
  41bdfe:	call   4306a0 <strcmp@plt+0x2cee8>
  41be03:	xor    eax,eax
  41be05:	call   41b800 <strcmp@plt+0x18048>
  41be0a:	jmp    41bdbb <strcmp@plt+0x18603>
  41be0c:	nop    DWORD PTR [rax+0x0]
  41be10:	push   0x0
  41be12:	push   0x0
  41be14:	movzx  edx,bpl
  41be18:	mov    ecx,ebp
  41be1a:	xor    esi,esi
  41be1c:	mov    r8d,0x1
  41be22:	mov    edi,0xa
  41be27:	call   437700 <strcmp@plt+0x33f48>
  41be2c:	mov    r9,QWORD PTR [rbx+0x18]
  41be30:	push   0x0
  41be32:	movzx  edx,r12b
  41be36:	push   0x0
  41be38:	mov    ecx,r12d
  41be3b:	xor    esi,esi
  41be3d:	mov    r8d,0x1
  41be43:	mov    edi,0xa
  41be48:	call   437660 <strcmp@plt+0x33ea8>
  41be4d:	mov    edi,DWORD PTR [rbx+0x34]
  41be50:	add    rsp,0x20
  41be54:	call   403790 <close@plt>
  41be59:	mov    edi,0xa
  41be5e:	call   438980 <strcmp@plt+0x351c8>
  41be63:	mov    rdx,QWORD PTR [rbx+0x18]
  41be67:	mov    DWORD PTR [rbx+0x34],eax
  41be6a:	xor    ecx,ecx
  41be6c:	mov    esi,0xa
  41be71:	mov    edi,eax
  41be73:	call   439130 <strcmp@plt+0x35978>
  41be78:	jmp    41bd72 <strcmp@plt+0x185ba>
  41be7d:	nop    DWORD PTR [rax]
  41be80:	push   0x0
  41be82:	push   0x0
  41be84:	movzx  edx,bpl
  41be88:	mov    ecx,ebp
  41be8a:	xor    esi,esi
  41be8c:	mov    r8d,0x1
  41be92:	mov    edi,0x2
  41be97:	call   437700 <strcmp@plt+0x33f48>
  41be9c:	mov    r9,QWORD PTR [rbx+0x10]
  41bea0:	push   0x0
  41bea2:	movzx  edx,r12b
  41bea6:	push   0x0
  41bea8:	mov    ecx,r12d
  41beab:	xor    esi,esi
  41bead:	mov    r8d,0x1
  41beb3:	mov    edi,0x2
  41beb8:	call   437660 <strcmp@plt+0x33ea8>
  41bebd:	mov    edi,DWORD PTR [rbx+0x30]
  41bec0:	add    rsp,0x20
  41bec4:	call   403790 <close@plt>
  41bec9:	mov    edi,0x2
  41bece:	call   438980 <strcmp@plt+0x351c8>
  41bed3:	mov    rdx,QWORD PTR [rbx+0x10]
  41bed7:	mov    DWORD PTR [rbx+0x30],eax
  41beda:	xor    ecx,ecx
  41bedc:	mov    esi,0x2
  41bee1:	mov    edi,eax
  41bee3:	call   439130 <strcmp@plt+0x35978>
  41bee8:	jmp    41bd5d <strcmp@plt+0x185a5>
  41beed:	nop    DWORD PTR [rax]
  41bef0:	mov    rax,0x4687e0
  41bef7:	cmp    edi,0x2
  41befa:	mov    rax,QWORD PTR [rax+0x70]
  41befe:	je     41bf30 <strcmp@plt+0x18778>
  41bf00:	cmp    edi,0xa
  41bf03:	jne    41bf18 <strcmp@plt+0x18760>
  41bf05:	mov    rax,QWORD PTR [rax+0x10]
  41bf09:	test   rax,rax
  41bf0c:	je     41bf24 <strcmp@plt+0x1876c>
  41bf0e:	mov    rax,QWORD PTR [rax+0x18]
  41bf12:	ret    
  41bf13:	nop    DWORD PTR [rax+rax*1+0x0]
  41bf18:	mov    rax,0x468e3c
  41bf1f:	cmp    DWORD PTR [rax],0x1
  41bf22:	jg     41bf40 <strcmp@plt+0x18788>
  41bf24:	xor    eax,eax
  41bf26:	ret    
  41bf27:	nop    WORD PTR [rax+rax*1+0x0]
  41bf30:	mov    rax,QWORD PTR [rax+0x8]
  41bf34:	test   rax,rax
  41bf37:	je     41bf24 <strcmp@plt+0x1876c>
  41bf39:	mov    rax,QWORD PTR [rax+0x10]
  41bf3d:	ret    
  41bf3e:	xchg   ax,ax
  41bf40:	lea    rsi,[rip+0x307a1]        # 44c6e8 <strcmp@plt+0x48f30>
  41bf47:	sub    rsp,0x8
  41bf4b:	mov    edx,edi
  41bf4d:	xor    eax,eax
  41bf4f:	mov    edi,0x6
  41bf54:	call   4306a0 <strcmp@plt+0x2cee8>
  41bf59:	xor    eax,eax
  41bf5b:	add    rsp,0x8
  41bf5f:	ret    
  41bf60:	mov    rax,0x4687e0
  41bf67:	cmp    edi,0x2
  41bf6a:	mov    rax,QWORD PTR [rax+0x70]
  41bf6e:	je     41bfa0 <strcmp@plt+0x187e8>
  41bf70:	cmp    edi,0xa
  41bf73:	jne    41bf88 <strcmp@plt+0x187d0>
  41bf75:	mov    rax,QWORD PTR [rax+0x10]
  41bf79:	test   rax,rax
  41bf7c:	je     41bf94 <strcmp@plt+0x187dc>
  41bf7e:	mov    eax,DWORD PTR [rax+0x34]
  41bf81:	ret    
  41bf82:	nop    WORD PTR [rax+rax*1+0x0]
  41bf88:	mov    rax,0x468e3c
  41bf8f:	cmp    DWORD PTR [rax],0x1
  41bf92:	jg     41bfb0 <strcmp@plt+0x187f8>
  41bf94:	mov    eax,0xfffffff7
  41bf99:	ret    
  41bf9a:	nop    WORD PTR [rax+rax*1+0x0]
  41bfa0:	mov    rax,QWORD PTR [rax+0x8]
  41bfa4:	test   rax,rax
  41bfa7:	je     41bf94 <strcmp@plt+0x187dc>
  41bfa9:	mov    eax,DWORD PTR [rax+0x30]
  41bfac:	ret    
  41bfad:	nop    DWORD PTR [rax]
  41bfb0:	lea    rsi,[rip+0x30769]        # 44c720 <strcmp@plt+0x48f68>
  41bfb7:	sub    rsp,0x8
  41bfbb:	mov    edx,edi
  41bfbd:	xor    eax,eax
  41bfbf:	mov    edi,0x6
  41bfc4:	call   4306a0 <strcmp@plt+0x2cee8>
  41bfc9:	mov    eax,0xfffffff7
  41bfce:	add    rsp,0x8
  41bfd2:	ret    
  41bfd3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41bfde:	xchg   ax,ax
  41bfe0:	push   rbp
  41bfe1:	push   rbx
  41bfe2:	mov    rbx,rdi
  41bfe5:	sub    rsp,0x8
  41bfe9:	mov    r9,QWORD PTR [rdi+0x10]
  41bfed:	mov    esi,DWORD PTR [rdi+0x8]
  41bff0:	test   r9,r9
  41bff3:	lea    ebp,[rsi+0xa]
  41bff6:	je     41c035 <strcmp@plt+0x1887d>
  41bff8:	mov    eax,DWORD PTR [r9+0x18]
  41bffc:	test   eax,eax
  41bffe:	je     41c035 <strcmp@plt+0x1887d>
  41c000:	mov    r8,QWORD PTR [rdi+0x20]
  41c004:	test   r8,r8
  41c007:	je     41c015 <strcmp@plt+0x1885d>
  41c009:	mov    eax,DWORD PTR [r8+0x18]
  41c00d:	test   eax,eax
  41c00f:	jne    41c0a8 <strcmp@plt+0x188f0>
  41c015:	push   0x0
  41c017:	push   0x0
  41c019:	movzx  edx,bpl
  41c01d:	mov    r8d,0x1
  41c023:	mov    ecx,ebp
  41c025:	xor    esi,esi
  41c027:	mov    edi,0x2
  41c02c:	call   437700 <strcmp@plt+0x33f48>
  41c031:	pop    r9
  41c033:	pop    r10
  41c035:	mov    r9,QWORD PTR [rbx+0x18]
  41c039:	test   r9,r9
  41c03c:	je     41c076 <strcmp@plt+0x188be>
  41c03e:	mov    r8d,DWORD PTR [r9+0x18]
  41c042:	test   r8d,r8d
  41c045:	je     41c076 <strcmp@plt+0x188be>
  41c047:	mov    r8,QWORD PTR [rbx+0x28]
  41c04b:	test   r8,r8
  41c04e:	je     41c058 <strcmp@plt+0x188a0>
  41c050:	mov    edi,DWORD PTR [r8+0x18]
  41c054:	test   edi,edi
  41c056:	jne    41c080 <strcmp@plt+0x188c8>
  41c058:	push   0x0
  41c05a:	push   0x0
  41c05c:	movzx  edx,bpl
  41c060:	mov    r8d,0x1
  41c066:	mov    ecx,ebp
  41c068:	xor    esi,esi
  41c06a:	mov    edi,0xa
  41c06f:	call   437700 <strcmp@plt+0x33f48>
  41c074:	pop    rax
  41c075:	pop    rdx
  41c076:	add    rsp,0x8
  41c07a:	pop    rbx
  41c07b:	pop    rbp
  41c07c:	ret    
  41c07d:	nop    DWORD PTR [rax]
  41c080:	sub    rsp,0x8
  41c084:	mov    esi,DWORD PTR [rbx+0x8]
  41c087:	xor    r9d,r9d
  41c08a:	push   rbp
  41c08b:	xor    ecx,ecx
  41c08d:	xor    edx,edx
  41c08f:	mov    edi,0xa
  41c094:	call   437c30 <strcmp@plt+0x34478>
  41c099:	pop    rcx
  41c09a:	mov    r9,QWORD PTR [rbx+0x18]
  41c09e:	pop    rsi
  41c09f:	jmp    41c058 <strcmp@plt+0x188a0>
  41c0a1:	nop    DWORD PTR [rax+0x0]
  41c0a8:	sub    rsp,0x8
  41c0ac:	xor    r9d,r9d
  41c0af:	xor    ecx,ecx
  41c0b1:	push   rbp
  41c0b2:	xor    edx,edx
  41c0b4:	mov    edi,0x2
  41c0b9:	call   437c30 <strcmp@plt+0x34478>
  41c0be:	pop    r11
  41c0c0:	mov    r9,QWORD PTR [rbx+0x10]
  41c0c4:	pop    rax
  41c0c5:	jmp    41c015 <strcmp@plt+0x1885d>
  41c0ca:	nop    WORD PTR [rax+rax*1+0x0]
  41c0d0:	push   r12
  41c0d2:	push   rbp
  41c0d3:	mov    r12d,edi
  41c0d6:	push   rbx
  41c0d7:	mov    edi,0x40
  41c0dc:	mov    rbp,rsi
  41c0df:	call   4347a0 <strcmp@plt+0x30fe8>
  41c0e4:	test   rax,rax
  41c0e7:	mov    rbx,rax
  41c0ea:	je     41c11b <strcmp@plt+0x18963>
  41c0ec:	mov    rdi,0x42dac0
  41c0f3:	mov    DWORD PTR [rax],r12d
  41c0f6:	call   4397c0 <strcmp@plt+0x36008>
  41c0fb:	mov    rsi,0x424b80
  41c102:	mov    rdi,rbp
  41c105:	mov    QWORD PTR [rbx+0x18],rax
  41c109:	call   42d670 <strcmp@plt+0x29eb8>
  41c10e:	lea    rdi,[rbx+0x20]
  41c112:	mov    QWORD PTR [rbx+0x38],rax
  41c116:	call   419700 <strcmp@plt+0x15f48>
  41c11b:	mov    rax,rbx
  41c11e:	pop    rbx
  41c11f:	pop    rbp
  41c120:	pop    r12
  41c122:	ret    
  41c123:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41c12e:	xchg   ax,ax
  41c130:	push   r15
  41c132:	push   r14
  41c134:	mov    r14,rdx
  41c137:	push   r13
  41c139:	push   r12
  41c13b:	mov    r13d,esi
  41c13e:	push   rbp
  41c13f:	push   rbx
  41c140:	lea    rsi,[rip+0x30068]        # 44c1af <strcmp@plt+0x489f7>
  41c147:	mov    ebp,edi
  41c149:	xor    edi,edi
  41c14b:	xor    ebx,ebx
  41c14d:	sub    rsp,0x58
  41c151:	mov    rax,QWORD PTR fs:0x28
  41c15a:	mov    QWORD PTR [rsp+0x18],rax
  41c15f:	xor    eax,eax
  41c161:	lea    rax,[rsp+0x90]
  41c169:	mov    QWORD PTR [rsp+0x30],rdx
  41c16e:	mov    edx,0x5a0
  41c173:	mov    DWORD PTR [rsp],0x10
  41c17a:	mov    QWORD PTR [rsp+0x8],rax
  41c17f:	lea    rax,[rsp+0x20]
  41c184:	mov    QWORD PTR [rsp+0x10],rax
  41c189:	call   42f7d0 <strcmp@plt+0x2c018>
  41c18e:	mov    r12,0x4747dc
  41c195:	test   eax,eax
  41c197:	mov    DWORD PTR [r12],eax
  41c19b:	jle    41c1c4 <strcmp@plt+0x18a0c>
  41c19d:	lea    rdi,[rip+0x3000b]        # 44c1af <strcmp@plt+0x489f7>
  41c1a4:	call   4030b0 <if_nametoindex@plt>
  41c1a9:	mov    rdx,0x4747d8
  41c1b0:	cmp    ebp,0x2
  41c1b3:	mov    DWORD PTR [rdx],eax
  41c1b5:	je     41c2a8 <strcmp@plt+0x18af0>
  41c1bb:	cmp    ebp,0x3
  41c1be:	je     41c204 <strcmp@plt+0x18a4c>
  41c1c0:	test   ebp,ebp
  41c1c2:	je     41c1f0 <strcmp@plt+0x18a38>
  41c1c4:	mov    rcx,QWORD PTR [rsp+0x18]
  41c1c9:	xor    rcx,QWORD PTR fs:0x28
  41c1d2:	mov    eax,ebx
  41c1d4:	jne    41c2dd <strcmp@plt+0x18b25>
  41c1da:	add    rsp,0x58
  41c1de:	pop    rbx
  41c1df:	pop    rbp
  41c1e0:	pop    r12
  41c1e2:	pop    r13
  41c1e4:	pop    r14
  41c1e6:	pop    r15
  41c1e8:	ret    
  41c1e9:	nop    DWORD PTR [rax+0x0]
  41c1f0:	mov    edi,0x2
  41c1f5:	call   41b510 <strcmp@plt+0x17d58>
  41c1fa:	mov    edi,0xa
  41c1ff:	call   41b510 <strcmp@plt+0x17d58>
  41c204:	mov    rbx,0x4747a8
  41c20b:	mov    ecx,DWORD PTR [r12]
  41c20f:	xor    edx,edx
  41c211:	mov    rsi,0x41acd0
  41c218:	mov    rdi,QWORD PTR [rbx]
  41c21b:	call   437e60 <strcmp@plt+0x346a8>
  41c220:	mov    rbp,0x41a530
  41c227:	test   r13d,r13d
  41c22a:	je     41c240 <strcmp@plt+0x18a88>
  41c22c:	cmp    r13d,0x1
  41c230:	mov    r15d,0x12b6
  41c236:	je     41c246 <strcmp@plt+0x18a8e>
  41c238:	xor    ebx,ebx
  41c23a:	jmp    41c1c4 <strcmp@plt+0x18a0c>
  41c23c:	nop    DWORD PTR [rax+0x0]
  41c240:	mov    r15d,0x10f5
  41c246:	mov    r12,0x4747c0
  41c24d:	cmp    DWORD PTR [r12],0xa
  41c252:	je     41c2b8 <strcmp@plt+0x18b00>
  41c254:	mov    esi,r15d
  41c257:	mov    edi,0x2
  41c25c:	call   438210 <strcmp@plt+0x34a58>
  41c261:	mov    rbx,0x4747a8
  41c268:	xor    edx,edx
  41c26a:	mov    ecx,eax
  41c26c:	mov    rsi,rbp
  41c26f:	mov    rdi,QWORD PTR [rbx]
  41c272:	call   437e60 <strcmp@plt+0x346a8>
  41c277:	cmp    DWORD PTR [r12],0x2
  41c27c:	jne    41c2bf <strcmp@plt+0x18b07>
  41c27e:	mov    rsi,r14
  41c281:	mov    edi,r13d
  41c284:	mov    ebx,0x1
  41c289:	call   41c0d0 <strcmp@plt+0x18918>
  41c28e:	mov    rdx,0x4687e0
  41c295:	mov    QWORD PTR [rdx+0x70],rax
  41c299:	xor    eax,eax
  41c29b:	call   41b800 <strcmp@plt+0x18048>
  41c2a0:	jmp    41c1c4 <strcmp@plt+0x18a0c>
  41c2a5:	nop    DWORD PTR [rax]
  41c2a8:	mov    rbp,0x41a610
  41c2af:	jmp    41c227 <strcmp@plt+0x18a6f>
  41c2b4:	nop    DWORD PTR [rax+0x0]
  41c2b8:	mov    rbx,0x4747a8
  41c2bf:	mov    esi,r15d
  41c2c2:	mov    edi,0xa
  41c2c7:	call   438210 <strcmp@plt+0x34a58>
  41c2cc:	mov    rdi,QWORD PTR [rbx]
  41c2cf:	mov    ecx,eax
  41c2d1:	xor    edx,edx
  41c2d3:	mov    rsi,rbp
  41c2d6:	call   437e60 <strcmp@plt+0x346a8>
  41c2db:	jmp    41c27e <strcmp@plt+0x18ac6>
  41c2dd:	call   403460 <__stack_chk_fail@plt>
  41c2e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41c2ed:	nop    DWORD PTR [rax]
  41c2f0:	test   rdi,rdi
  41c2f3:	je     41c320 <strcmp@plt+0x18b68>
  41c2f5:	push   rbx
  41c2f6:	mov    rbx,rdi
  41c2f9:	mov    rdi,QWORD PTR [rdi+0x18]
  41c2fd:	call   43a5a0 <strcmp@plt+0x36de8>
  41c302:	mov    rdi,QWORD PTR [rbx+0x38]
  41c306:	call   42dac0 <strcmp@plt+0x2a308>
  41c30b:	lea    rdi,[rbx+0x20]
  41c30f:	call   419730 <strcmp@plt+0x15f78>
  41c314:	mov    rdi,rbx
  41c317:	pop    rbx
  41c318:	jmp    4037b0 <free@plt>
  41c31d:	nop    DWORD PTR [rax]
  41c320:	repz ret 
  41c322:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41c32d:	nop    DWORD PTR [rax]
  41c330:	mov    rax,0x4687e0
  41c337:	push   r12
  41c339:	push   rbp
  41c33a:	push   rbx
  41c33b:	mov    r12,QWORD PTR [rax+0x70]
  41c33f:	test   r12,r12
  41c342:	je     41c380 <strcmp@plt+0x18bc8>
  41c344:	mov    rbp,0x473dd0
  41c34b:	mov    rax,QWORD PTR [rbp+0x0]
  41c34f:	mov    rbx,QWORD PTR [rax+0x8]
  41c353:	cmp    rax,rbx
  41c356:	je     41c373 <strcmp@plt+0x18bbb>
  41c358:	nop    DWORD PTR [rax+rax*1+0x0]
  41c360:	mov    rdi,QWORD PTR [rbx+0x10]
  41c364:	call   41bfe0 <strcmp@plt+0x18828>
  41c369:	mov    rbx,QWORD PTR [rbx+0x8]
  41c36d:	cmp    QWORD PTR [rbp+0x0],rbx
  41c371:	jne    41c360 <strcmp@plt+0x18ba8>
  41c373:	pop    rbx
  41c374:	mov    rdi,r12
  41c377:	pop    rbp
  41c378:	pop    r12
  41c37a:	jmp    41c2f0 <strcmp@plt+0x18b38>
  41c37f:	nop
  41c380:	pop    rbx
  41c381:	pop    rbp
  41c382:	pop    r12
  41c384:	ret    
  41c385:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c38f:	nop
  41c390:	lea    rax,[rip+0x303d9]        # 44c770 <strcmp@plt+0x48fb8>
  41c397:	ret    
  41c398:	nop    DWORD PTR [rax+rax*1+0x0]
  41c3a0:	cmp    edi,0x5
  41c3a3:	je     41c3d0 <strcmp@plt+0x18c18>
  41c3a5:	cmp    edi,0x6
  41c3a8:	je     41c3c0 <strcmp@plt+0x18c08>
  41c3aa:	cmp    edi,0x4
  41c3ad:	je     41c3b8 <strcmp@plt+0x18c00>
  41c3af:	xor    eax,eax
  41c3b1:	ret    
  41c3b2:	nop    WORD PTR [rax+rax*1+0x0]
  41c3b8:	mov    rax,0x467d40
  41c3bf:	ret    
  41c3c0:	mov    rax,0x467c40
  41c3c7:	ret    
  41c3c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c3d0:	mov    rax,0x467ca0
  41c3d7:	ret    
  41c3d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c3e0:	test   rdi,rdi
  41c3e3:	mov    rax,rdi
  41c3e6:	je     41c450 <strcmp@plt+0x18c98>
  41c3e8:	lea    rsi,[rip+0x30361]        # 44c750 <strcmp@plt+0x48f98>
  41c3ef:	mov    ecx,0x5
  41c3f4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41c3f6:	je     41c440 <strcmp@plt+0x18c88>
  41c3f8:	lea    rsi,[rip+0x30356]        # 44c755 <strcmp@plt+0x48f9d>
  41c3ff:	mov    ecx,0x4
  41c404:	mov    rdi,rax
  41c407:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41c409:	je     41c440 <strcmp@plt+0x18c88>
  41c40b:	lea    rsi,[rip+0x30347]        # 44c759 <strcmp@plt+0x48fa1>
  41c412:	mov    ecx,0x7
  41c417:	mov    rdi,rax
  41c41a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41c41c:	je     41c458 <strcmp@plt+0x18ca0>
  41c41e:	lea    rsi,[rip+0x3033b]        # 44c760 <strcmp@plt+0x48fa8>
  41c425:	mov    ecx,0x7
  41c42a:	mov    rdi,rax
  41c42d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41c42f:	jne    41c450 <strcmp@plt+0x18c98>
  41c431:	mov    edi,0x6
  41c436:	jmp    41c3a0 <strcmp@plt+0x18be8>
  41c43b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c440:	mov    edi,0x4
  41c445:	jmp    41c3a0 <strcmp@plt+0x18be8>
  41c44a:	nop    WORD PTR [rax+rax*1+0x0]
  41c450:	xor    eax,eax
  41c452:	ret    
  41c453:	nop    DWORD PTR [rax+rax*1+0x0]
  41c458:	mov    edi,0x5
  41c45d:	jmp    41c3a0 <strcmp@plt+0x18be8>
  41c462:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41c46d:	nop    DWORD PTR [rax]
  41c470:	mov    QWORD PTR [rdi],0x0
  41c477:	mov    QWORD PTR [rdi+0x8],0x0
  41c47f:	mov    QWORD PTR [rdi+0x10],0x0
  41c487:	ret    
  41c488:	nop    DWORD PTR [rax+rax*1+0x0]
  41c490:	test   rdi,rdi
  41c493:	je     41c4fd <strcmp@plt+0x18d45>
  41c495:	mov    rax,QWORD PTR [rdi]
  41c498:	test   rax,rax
  41c49b:	je     41c4fd <strcmp@plt+0x18d45>
  41c49d:	push   rbx
  41c49e:	mov    rbx,rdi
  41c4a1:	mov    rdi,QWORD PTR [rdi+0x8]
  41c4a5:	test   rdi,rdi
  41c4a8:	je     41c4ad <strcmp@plt+0x18cf5>
  41c4aa:	call   QWORD PTR [rax+0x40]
  41c4ad:	mov    rdi,QWORD PTR [rbx+0x10]
  41c4b1:	test   rdi,rdi
  41c4b4:	je     41c4e5 <strcmp@plt+0x18d2d>
  41c4b6:	mov    rax,QWORD PTR [rbx]
  41c4b9:	mov    eax,DWORD PTR [rax+0x14]
  41c4bc:	add    eax,eax
  41c4be:	cdqe   
  41c4c0:	test   rax,rax
  41c4c3:	je     41c4e0 <strcmp@plt+0x18d28>
  41c4c5:	add    rax,rdi
  41c4c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c4d0:	mov    BYTE PTR [rdi],0x0
  41c4d3:	add    rdi,0x1
  41c4d7:	cmp    rdi,rax
  41c4da:	jne    41c4d0 <strcmp@plt+0x18d18>
  41c4dc:	mov    rdi,QWORD PTR [rbx+0x10]
  41c4e0:	call   4037b0 <free@plt>
  41c4e5:	lea    rax,[rbx+0x18]
  41c4e9:	mov    rdi,rbx
  41c4ec:	nop    DWORD PTR [rax+0x0]
  41c4f0:	mov    BYTE PTR [rdi],0x0
  41c4f3:	add    rdi,0x1
  41c4f7:	cmp    rax,rdi
  41c4fa:	jne    41c4f0 <strcmp@plt+0x18d38>
  41c4fc:	pop    rbx
  41c4fd:	repz ret 
  41c4ff:	nop
  41c500:	test   rdi,rdi
  41c503:	je     41c538 <strcmp@plt+0x18d80>
  41c505:	test   rsi,rsi
  41c508:	mov    rax,QWORD PTR [rdi]
  41c50b:	je     41c538 <strcmp@plt+0x18d80>
  41c50d:	test   rax,rax
  41c510:	je     41c538 <strcmp@plt+0x18d80>
  41c512:	mov    rdx,QWORD PTR [rsi]
  41c515:	test   rdx,rdx
  41c518:	je     41c538 <strcmp@plt+0x18d80>
  41c51a:	cmp    rax,rdx
  41c51d:	jne    41c538 <strcmp@plt+0x18d80>
  41c51f:	sub    rsp,0x8
  41c523:	mov    rsi,QWORD PTR [rsi+0x8]
  41c527:	mov    rdi,QWORD PTR [rdi+0x8]
  41c52b:	call   QWORD PTR [rax+0x48]
  41c52e:	xor    eax,eax
  41c530:	add    rsp,0x8
  41c534:	ret    
  41c535:	nop    DWORD PTR [rax]
  41c538:	mov    eax,0xffffaf00
  41c53d:	ret    
  41c53e:	xchg   ax,ax
  41c540:	test   rsi,rsi
  41c543:	je     41c5b0 <strcmp@plt+0x18df8>
  41c545:	test   rdi,rdi
  41c548:	je     41c5b0 <strcmp@plt+0x18df8>
  41c54a:	push   r13
  41c54c:	push   r12
  41c54e:	mov    r12d,edx
  41c551:	push   rbp
  41c552:	push   rbx
  41c553:	mov    rbp,rdi
  41c556:	mov    rbx,rsi
  41c559:	sub    rsp,0x8
  41c55d:	call   QWORD PTR [rsi+0x38]
  41c560:	test   rax,rax
  41c563:	mov    r13,rax
  41c566:	mov    QWORD PTR [rbp+0x8],rax
  41c56a:	je     41c5b6 <strcmp@plt+0x18dfe>
  41c56c:	test   r12d,r12d
  41c56f:	jne    41c588 <strcmp@plt+0x18dd0>
  41c571:	mov    QWORD PTR [rbp+0x0],rbx
  41c575:	xor    eax,eax
  41c577:	add    rsp,0x8
  41c57b:	pop    rbx
  41c57c:	pop    rbp
  41c57d:	pop    r12
  41c57f:	pop    r13
  41c581:	ret    
  41c582:	nop    WORD PTR [rax+rax*1+0x0]
  41c588:	movsxd rsi,DWORD PTR [rbx+0x14]
  41c58c:	mov    edi,0x2
  41c591:	call   4032e0 <calloc@plt>
  41c596:	test   rax,rax
  41c599:	mov    QWORD PTR [rbp+0x10],rax
  41c59d:	jne    41c571 <strcmp@plt+0x18db9>
  41c59f:	mov    rdi,r13
  41c5a2:	call   QWORD PTR [rbx+0x40]
  41c5a5:	mov    eax,0xffffae80
  41c5aa:	jmp    41c577 <strcmp@plt+0x18dbf>
  41c5ac:	nop    DWORD PTR [rax+0x0]
  41c5b0:	mov    eax,0xffffaf00
  41c5b5:	ret    
  41c5b6:	mov    eax,0xffffae80
  41c5bb:	jmp    41c577 <strcmp@plt+0x18dbf>
  41c5bd:	nop    DWORD PTR [rax]
  41c5c0:	mov    edx,0x1
  41c5c5:	jmp    41c540 <strcmp@plt+0x18d88>
  41c5ca:	nop    WORD PTR [rax+rax*1+0x0]
  41c5d0:	test   rdi,rdi
  41c5d3:	je     41c5f0 <strcmp@plt+0x18e38>
  41c5d5:	mov    rax,QWORD PTR [rdi]
  41c5d8:	test   rax,rax
  41c5db:	je     41c5f0 <strcmp@plt+0x18e38>
  41c5dd:	sub    rsp,0x8
  41c5e1:	mov    rdi,QWORD PTR [rdi+0x8]
  41c5e5:	call   QWORD PTR [rax+0x18]
  41c5e8:	xor    eax,eax
  41c5ea:	add    rsp,0x8
  41c5ee:	ret    
  41c5ef:	nop
  41c5f0:	mov    eax,0xffffaf00
  41c5f5:	ret    
  41c5f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c600:	test   rdi,rdi
  41c603:	je     41c620 <strcmp@plt+0x18e68>
  41c605:	mov    rax,QWORD PTR [rdi]
  41c608:	test   rax,rax
  41c60b:	je     41c620 <strcmp@plt+0x18e68>
  41c60d:	sub    rsp,0x8
  41c611:	mov    rdi,QWORD PTR [rdi+0x8]
  41c615:	call   QWORD PTR [rax+0x20]
  41c618:	xor    eax,eax
  41c61a:	add    rsp,0x8
  41c61e:	ret    
  41c61f:	nop
  41c620:	mov    eax,0xffffaf00
  41c625:	ret    
  41c626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c630:	test   rdi,rdi
  41c633:	je     41c650 <strcmp@plt+0x18e98>
  41c635:	mov    rax,QWORD PTR [rdi]
  41c638:	test   rax,rax
  41c63b:	je     41c650 <strcmp@plt+0x18e98>
  41c63d:	sub    rsp,0x8
  41c641:	mov    rdi,QWORD PTR [rdi+0x8]
  41c645:	call   QWORD PTR [rax+0x28]
  41c648:	xor    eax,eax
  41c64a:	add    rsp,0x8
  41c64e:	ret    
  41c64f:	nop
  41c650:	mov    eax,0xffffaf00
  41c655:	ret    
  41c656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c660:	test   rdi,rdi
  41c663:	mov    rax,rdi
  41c666:	je     41c680 <strcmp@plt+0x18ec8>
  41c668:	sub    rsp,0x8
  41c66c:	mov    rdi,rsi
  41c66f:	mov    rsi,rdx
  41c672:	mov    rdx,rcx
  41c675:	call   QWORD PTR [rax+0x30]
  41c678:	xor    eax,eax
  41c67a:	add    rsp,0x8
  41c67e:	ret    
  41c67f:	nop
  41c680:	mov    eax,0xffffaf00
  41c685:	ret    
  41c686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c690:	push   r15
  41c692:	push   r14
  41c694:	push   r13
  41c696:	push   r12
  41c698:	push   rbp
  41c699:	push   rbx
  41c69a:	sub    rsp,0x38
  41c69e:	mov    rax,QWORD PTR fs:0x28
  41c6a7:	mov    QWORD PTR [rsp+0x28],rax
  41c6ac:	xor    eax,eax
  41c6ae:	test   rdi,rdi
  41c6b1:	je     41c7cb <strcmp@plt+0x19013>
  41c6b7:	mov    rax,QWORD PTR [rdi]
  41c6ba:	mov    r15,rdi
  41c6bd:	test   rax,rax
  41c6c0:	je     41c7cb <strcmp@plt+0x19013>
  41c6c6:	mov    rbp,QWORD PTR [rdi+0x10]
  41c6ca:	test   rbp,rbp
  41c6cd:	je     41c7cb <strcmp@plt+0x19013>
  41c6d3:	mov    r14,rdx
  41c6d6:	movsxd rdx,DWORD PTR [rax+0x14]
  41c6da:	mov    r13,rsi
  41c6dd:	mov    rbx,rsp
  41c6e0:	cmp    rdx,r14
  41c6e3:	jb     41c790 <strcmp@plt+0x18fd8>
  41c6e9:	mov    esi,0x36
  41c6ee:	mov    rdi,rbp
  41c6f1:	lea    r12,[rbp+rdx*1+0x0]
  41c6f6:	call   403250 <memset@plt>
  41c6fb:	mov    rax,QWORD PTR [r15]
  41c6fe:	mov    esi,0x5c
  41c703:	mov    rdi,r12
  41c706:	movsxd rdx,DWORD PTR [rax+0x14]
  41c70a:	call   403250 <memset@plt>
  41c70f:	xor    eax,eax
  41c711:	test   r14,r14
  41c714:	je     41c73d <strcmp@plt+0x18f85>
  41c716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c720:	movzx  edx,BYTE PTR [r13+rax*1+0x0]
  41c726:	xor    BYTE PTR [rbp+rax*1+0x0],dl
  41c72a:	movzx  edx,BYTE PTR [r13+rax*1+0x0]
  41c730:	xor    BYTE PTR [r12+rax*1],dl
  41c734:	add    rax,0x1
  41c738:	cmp    r14,rax
  41c73b:	jne    41c720 <strcmp@plt+0x18f68>
  41c73d:	lea    rax,[rbx+0x20]
  41c741:	mov    rsi,rbx
  41c744:	nop    DWORD PTR [rax+0x0]
  41c748:	mov    BYTE PTR [rsi],0x0
  41c74b:	add    rsi,0x1
  41c74f:	cmp    rsi,rax
  41c752:	jne    41c748 <strcmp@plt+0x18f90>
  41c754:	mov    rax,QWORD PTR [r15]
  41c757:	mov    rdi,QWORD PTR [r15+0x8]
  41c75b:	call   QWORD PTR [rax+0x18]
  41c75e:	mov    rax,QWORD PTR [r15]
  41c761:	mov    rdi,QWORD PTR [r15+0x8]
  41c765:	mov    rsi,rbp
  41c768:	movsxd rdx,DWORD PTR [rax+0x14]
  41c76c:	call   QWORD PTR [rax+0x20]
  41c76f:	xor    eax,eax
  41c771:	mov    rcx,QWORD PTR [rsp+0x28]
  41c776:	xor    rcx,QWORD PTR fs:0x28
  41c77f:	jne    41c7d2 <strcmp@plt+0x1901a>
  41c781:	add    rsp,0x38
  41c785:	pop    rbx
  41c786:	pop    rbp
  41c787:	pop    r12
  41c789:	pop    r13
  41c78b:	pop    r14
  41c78d:	pop    r15
  41c78f:	ret    
  41c790:	mov    rdi,QWORD PTR [rdi+0x8]
  41c794:	call   QWORD PTR [rax+0x18]
  41c797:	mov    rax,QWORD PTR [r15]
  41c79a:	mov    rdx,r14
  41c79d:	mov    rsi,r13
  41c7a0:	mov    rdi,QWORD PTR [r15+0x8]
  41c7a4:	mov    r13,rsp
  41c7a7:	call   QWORD PTR [rax+0x20]
  41c7aa:	mov    rax,QWORD PTR [r15]
  41c7ad:	mov    rdi,QWORD PTR [r15+0x8]
  41c7b1:	mov    rsi,rsp
  41c7b4:	call   QWORD PTR [rax+0x28]
  41c7b7:	mov    rax,QWORD PTR [r15]
  41c7ba:	mov    rbp,QWORD PTR [r15+0x10]
  41c7be:	movsxd r14,DWORD PTR [rax+0x10]
  41c7c2:	movsxd rdx,DWORD PTR [rax+0x14]
  41c7c6:	jmp    41c6e9 <strcmp@plt+0x18f31>
  41c7cb:	mov    eax,0xffffaf00
  41c7d0:	jmp    41c771 <strcmp@plt+0x18fb9>
  41c7d2:	call   403460 <__stack_chk_fail@plt>
  41c7d7:	nop    WORD PTR [rax+rax*1+0x0]
  41c7e0:	test   rdi,rdi
  41c7e3:	je     41c810 <strcmp@plt+0x19058>
  41c7e5:	mov    rax,QWORD PTR [rdi]
  41c7e8:	test   rax,rax
  41c7eb:	je     41c810 <strcmp@plt+0x19058>
  41c7ed:	cmp    QWORD PTR [rdi+0x10],0x0
  41c7f2:	je     41c810 <strcmp@plt+0x19058>
  41c7f4:	sub    rsp,0x8
  41c7f8:	mov    rdi,QWORD PTR [rdi+0x8]
  41c7fc:	call   QWORD PTR [rax+0x20]
  41c7ff:	xor    eax,eax
  41c801:	add    rsp,0x8
  41c805:	ret    
  41c806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c810:	mov    eax,0xffffaf00
  41c815:	ret    
  41c816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c820:	push   r13
  41c822:	push   r12
  41c824:	push   rbp
  41c825:	push   rbx
  41c826:	sub    rsp,0x38
  41c82a:	mov    rax,QWORD PTR fs:0x28
  41c833:	mov    QWORD PTR [rsp+0x28],rax
  41c838:	xor    eax,eax
  41c83a:	test   rdi,rdi
  41c83d:	je     41c8c8 <strcmp@plt+0x19110>
  41c843:	mov    rax,QWORD PTR [rdi]
  41c846:	mov    rbx,rdi
  41c849:	test   rax,rax
  41c84c:	je     41c8c8 <strcmp@plt+0x19110>
  41c84e:	mov    rdx,QWORD PTR [rdi+0x10]
  41c852:	test   rdx,rdx
  41c855:	je     41c8c8 <strcmp@plt+0x19110>
  41c857:	movsxd rbp,DWORD PTR [rax+0x14]
  41c85b:	mov    r12,rsi
  41c85e:	mov    rdi,QWORD PTR [rdi+0x8]
  41c862:	mov    rsi,rsp
  41c865:	add    rbp,rdx
  41c868:	call   QWORD PTR [rax+0x28]
  41c86b:	mov    rax,QWORD PTR [rbx]
  41c86e:	mov    rdi,QWORD PTR [rbx+0x8]
  41c872:	call   QWORD PTR [rax+0x18]
  41c875:	mov    rax,QWORD PTR [rbx]
  41c878:	mov    rdi,QWORD PTR [rbx+0x8]
  41c87c:	mov    rsi,rbp
  41c87f:	movsxd rdx,DWORD PTR [rax+0x14]
  41c883:	call   QWORD PTR [rax+0x20]
  41c886:	mov    rax,QWORD PTR [rbx]
  41c889:	mov    rdi,QWORD PTR [rbx+0x8]
  41c88d:	mov    rsi,rsp
  41c890:	movsxd rdx,DWORD PTR [rax+0x10]
  41c894:	call   QWORD PTR [rax+0x20]
  41c897:	mov    rax,QWORD PTR [rbx]
  41c89a:	mov    rdi,QWORD PTR [rbx+0x8]
  41c89e:	mov    rsi,r12
  41c8a1:	call   QWORD PTR [rax+0x28]
  41c8a4:	xor    eax,eax
  41c8a6:	mov    rcx,QWORD PTR [rsp+0x28]
  41c8ab:	xor    rcx,QWORD PTR fs:0x28
  41c8b4:	jne    41c8cf <strcmp@plt+0x19117>
  41c8b6:	add    rsp,0x38
  41c8ba:	pop    rbx
  41c8bb:	pop    rbp
  41c8bc:	pop    r12
  41c8be:	pop    r13
  41c8c0:	ret    
  41c8c1:	nop    DWORD PTR [rax+0x0]
  41c8c8:	mov    eax,0xffffaf00
  41c8cd:	jmp    41c8a6 <strcmp@plt+0x190ee>
  41c8cf:	call   403460 <__stack_chk_fail@plt>
  41c8d4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41c8df:	nop
  41c8e0:	test   rdi,rdi
  41c8e3:	je     41c930 <strcmp@plt+0x19178>
  41c8e5:	mov    rax,QWORD PTR [rdi]
  41c8e8:	test   rax,rax
  41c8eb:	je     41c930 <strcmp@plt+0x19178>
  41c8ed:	push   rbp
  41c8ee:	push   rbx
  41c8ef:	sub    rsp,0x8
  41c8f3:	mov    rbp,QWORD PTR [rdi+0x10]
  41c8f7:	test   rbp,rbp
  41c8fa:	je     41c920 <strcmp@plt+0x19168>
  41c8fc:	mov    rbx,rdi
  41c8ff:	mov    rdi,QWORD PTR [rdi+0x8]
  41c903:	call   QWORD PTR [rax+0x18]
  41c906:	mov    rax,QWORD PTR [rbx]
  41c909:	mov    rdi,QWORD PTR [rbx+0x8]
  41c90d:	mov    rsi,rbp
  41c910:	movsxd rdx,DWORD PTR [rax+0x14]
  41c914:	call   QWORD PTR [rax+0x20]
  41c917:	xor    eax,eax
  41c919:	add    rsp,0x8
  41c91d:	pop    rbx
  41c91e:	pop    rbp
  41c91f:	ret    
  41c920:	mov    eax,0xffffaf00
  41c925:	jmp    41c919 <strcmp@plt+0x19161>
  41c927:	nop    WORD PTR [rax+rax*1+0x0]
  41c930:	mov    eax,0xffffaf00
  41c935:	ret    
  41c936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c940:	push   r15
  41c942:	push   r14
  41c944:	push   r13
  41c946:	push   r12
  41c948:	push   rbp
  41c949:	push   rbx
  41c94a:	sub    rsp,0x38
  41c94e:	mov    rax,QWORD PTR fs:0x28
  41c957:	mov    QWORD PTR [rsp+0x28],rax
  41c95c:	xor    eax,eax
  41c95e:	test   rdi,rdi
  41c961:	mov    QWORD PTR [rsp],r9
  41c965:	je     41ca00 <strcmp@plt+0x19248>
  41c96b:	lea    rbx,[rsp+0x10]
  41c970:	mov    rbp,rdi
  41c973:	mov    r12,rcx
  41c976:	mov    r14,rsi
  41c979:	mov    r15,rdx
  41c97c:	mov    r13,r8
  41c97f:	mov    rdi,rbx
  41c982:	call   41c470 <strcmp@plt+0x18cb8>
  41c987:	mov    edx,0x1
  41c98c:	mov    rsi,rbp
  41c98f:	mov    rdi,rbx
  41c992:	call   41c540 <strcmp@plt+0x18d88>
  41c997:	test   eax,eax
  41c999:	mov    ecx,eax
  41c99b:	jne    41c9d5 <strcmp@plt+0x1921d>
  41c99d:	mov    rdx,r15
  41c9a0:	mov    rsi,r14
  41c9a3:	mov    rdi,rbx
  41c9a6:	mov    DWORD PTR [rsp+0xc],eax
  41c9aa:	call   41c690 <strcmp@plt+0x18ed8>
  41c9af:	mov    rdx,r13
  41c9b2:	mov    rsi,r12
  41c9b5:	mov    rdi,rbx
  41c9b8:	call   41c7e0 <strcmp@plt+0x19028>
  41c9bd:	mov    rsi,QWORD PTR [rsp]
  41c9c1:	mov    rdi,rbx
  41c9c4:	call   41c820 <strcmp@plt+0x19068>
  41c9c9:	mov    rdi,rbx
  41c9cc:	call   41c490 <strcmp@plt+0x18cd8>
  41c9d1:	mov    ecx,DWORD PTR [rsp+0xc]
  41c9d5:	mov    rdx,QWORD PTR [rsp+0x28]
  41c9da:	xor    rdx,QWORD PTR fs:0x28
  41c9e3:	mov    eax,ecx
  41c9e5:	jne    41ca07 <strcmp@plt+0x1924f>
  41c9e7:	add    rsp,0x38
  41c9eb:	pop    rbx
  41c9ec:	pop    rbp
  41c9ed:	pop    r12
  41c9ef:	pop    r13
  41c9f1:	pop    r14
  41c9f3:	pop    r15
  41c9f5:	ret    
  41c9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ca00:	mov    ecx,0xffffaf00
  41ca05:	jmp    41c9d5 <strcmp@plt+0x1921d>
  41ca07:	call   403460 <__stack_chk_fail@plt>
  41ca0c:	nop    DWORD PTR [rax+0x0]
  41ca10:	test   rdi,rdi
  41ca13:	je     41ca30 <strcmp@plt+0x19278>
  41ca15:	mov    rax,QWORD PTR [rdi]
  41ca18:	test   rax,rax
  41ca1b:	je     41ca30 <strcmp@plt+0x19278>
  41ca1d:	sub    rsp,0x8
  41ca21:	mov    rdi,QWORD PTR [rdi+0x8]
  41ca25:	call   QWORD PTR [rax+0x50]
  41ca28:	xor    eax,eax
  41ca2a:	add    rsp,0x8
  41ca2e:	ret    
  41ca2f:	nop
  41ca30:	mov    eax,0xffffaf00
  41ca35:	ret    
  41ca36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ca40:	test   rdi,rdi
  41ca43:	je     41ca50 <strcmp@plt+0x19298>
  41ca45:	mov    eax,DWORD PTR [rdi+0x10]
  41ca48:	ret    
  41ca49:	nop    DWORD PTR [rax+0x0]
  41ca50:	xor    eax,eax
  41ca52:	ret    
  41ca53:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41ca5e:	xchg   ax,ax
  41ca60:	test   rdi,rdi
  41ca63:	je     41ca70 <strcmp@plt+0x192b8>
  41ca65:	mov    eax,DWORD PTR [rdi]
  41ca67:	ret    
  41ca68:	nop    DWORD PTR [rax+rax*1+0x0]
  41ca70:	xor    eax,eax
  41ca72:	ret    
  41ca73:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41ca7e:	xchg   ax,ax
  41ca80:	test   rdi,rdi
  41ca83:	je     41ca90 <strcmp@plt+0x192d8>
  41ca85:	mov    rax,QWORD PTR [rdi+0x8]
  41ca89:	ret    
  41ca8a:	nop    WORD PTR [rax+rax*1+0x0]
  41ca90:	xor    eax,eax
  41ca92:	ret    
  41ca93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ca9d:	nop    DWORD PTR [rax]
  41caa0:	mov    QWORD PTR [rdi],0x0
  41caa7:	mov    QWORD PTR [rdi+0x54],0x0
  41caaf:	mov    rcx,rdi
  41cab2:	lea    rdi,[rdi+0x8]
  41cab6:	xor    eax,eax
  41cab8:	and    rdi,0xfffffffffffffff8
  41cabc:	sub    rcx,rdi
  41cabf:	add    ecx,0x5c
  41cac2:	shr    ecx,0x3
  41cac5:	rep stos QWORD PTR es:[rdi],rax
  41cac8:	ret    
  41cac9:	nop    DWORD PTR [rax+0x0]
  41cad0:	test   rdi,rdi
  41cad3:	lea    rax,[rdi+0x5c]
  41cad7:	je     41caec <strcmp@plt+0x19334>
  41cad9:	nop    DWORD PTR [rax+0x0]
  41cae0:	mov    BYTE PTR [rdi],0x0
  41cae3:	add    rdi,0x1
  41cae7:	cmp    rax,rdi
  41caea:	jne    41cae0 <strcmp@plt+0x19328>
  41caec:	repz ret 
  41caee:	xchg   ax,ax
  41caf0:	mov    rax,QWORD PTR [rsi]
  41caf3:	mov    QWORD PTR [rdi],rax
  41caf6:	mov    rax,QWORD PTR [rsi+0x8]
  41cafa:	mov    QWORD PTR [rdi+0x8],rax
  41cafe:	mov    rax,QWORD PTR [rsi+0x10]
  41cb02:	mov    QWORD PTR [rdi+0x10],rax
  41cb06:	mov    rax,QWORD PTR [rsi+0x18]
  41cb0a:	mov    QWORD PTR [rdi+0x18],rax
  41cb0e:	mov    rax,QWORD PTR [rsi+0x20]
  41cb12:	mov    QWORD PTR [rdi+0x20],rax
  41cb16:	mov    rax,QWORD PTR [rsi+0x28]
  41cb1a:	mov    QWORD PTR [rdi+0x28],rax
  41cb1e:	mov    rax,QWORD PTR [rsi+0x30]
  41cb22:	mov    QWORD PTR [rdi+0x30],rax
  41cb26:	mov    rax,QWORD PTR [rsi+0x38]
  41cb2a:	mov    QWORD PTR [rdi+0x38],rax
  41cb2e:	mov    rax,QWORD PTR [rsi+0x40]
  41cb32:	mov    QWORD PTR [rdi+0x40],rax
  41cb36:	mov    rax,QWORD PTR [rsi+0x48]
  41cb3a:	mov    QWORD PTR [rdi+0x48],rax
  41cb3e:	mov    rax,QWORD PTR [rsi+0x50]
  41cb42:	mov    QWORD PTR [rdi+0x50],rax
  41cb46:	mov    eax,DWORD PTR [rsi+0x58]
  41cb49:	mov    DWORD PTR [rdi+0x58],eax
  41cb4c:	ret    
  41cb4d:	nop    DWORD PTR [rax]
  41cb50:	mov    DWORD PTR [rdi],0x0
  41cb56:	mov    DWORD PTR [rdi+0x4],0x0
  41cb5d:	mov    DWORD PTR [rdi+0x8],0x67452301
  41cb64:	mov    DWORD PTR [rdi+0xc],0xefcdab89
  41cb6b:	mov    DWORD PTR [rdi+0x10],0x98badcfe
  41cb72:	mov    DWORD PTR [rdi+0x14],0x10325476
  41cb79:	mov    DWORD PTR [rdi+0x18],0xc3d2e1f0
  41cb80:	ret    
  41cb81:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41cb8c:	nop    DWORD PTR [rax+0x0]
  41cb90:	push   r15
  41cb92:	mov    rax,rdi
  41cb95:	push   r14
  41cb97:	push   r13
  41cb99:	push   r12
  41cb9b:	push   rbp
  41cb9c:	push   rbx
  41cb9d:	movbe  edi,DWORD PTR [rsi+0x4]
  41cba2:	movbe  ebx,DWORD PTR [rsi+0x2c]
  41cba7:	movbe  ecx,DWORD PTR [rsi+0x10]
  41cbac:	movbe  edx,DWORD PTR [rsi+0x14]
  41cbb1:	movbe  r12d,DWORD PTR [rsi+0x20]
  41cbb7:	movbe  r15d,DWORD PTR [rsi+0x24]
  41cbbd:	mov    DWORD PTR [rsp-0x4c],edi
  41cbc1:	movbe  edi,DWORD PTR [rsi+0x1c]
  41cbc6:	mov    DWORD PTR [rsp-0x48],ebx
  41cbca:	movbe  ebx,DWORD PTR [rsi+0x38]
  41cbcf:	mov    DWORD PTR [rsp-0x44],ecx
  41cbd3:	mov    ecx,DWORD PTR [rax+0x8]
  41cbd6:	mov    DWORD PTR [rsp-0x3c],edi
  41cbda:	movbe  edi,DWORD PTR [rsi+0x28]
  41cbdf:	mov    ebp,ebx
  41cbe1:	mov    DWORD PTR [rsp-0x40],edx
  41cbe5:	movbe  ebx,DWORD PTR [rsi+0x3c]
  41cbea:	movbe  edx,DWORD PTR [rsi+0x30]
  41cbef:	movbe  r10d,DWORD PTR [rsi+0x8]
  41cbf5:	mov    DWORD PTR [rsp-0x38],edi
  41cbf9:	movbe  edi,DWORD PTR [rsi+0x34]
  41cbfe:	movbe  r9d,DWORD PTR [rsi+0xc]
  41cc04:	movbe  r14d,DWORD PTR [rsi+0x18]
  41cc0a:	mov    r8d,ebx
  41cc0d:	movbe  r11d,DWORD PTR [rsi]
  41cc12:	mov    esi,ecx
  41cc14:	mov    ecx,DWORD PTR [rax+0xc]
  41cc17:	mov    DWORD PTR [rsp-0x28],edx
  41cc1b:	mov    DWORD PTR [rsp-0x34],edi
  41cc1f:	mov    edi,DWORD PTR [rax+0x10]
  41cc22:	mov    ebx,DWORD PTR [rax+0x18]
  41cc25:	mov    edx,ecx
  41cc27:	mov    ecx,DWORD PTR [rax+0x14]
  41cc2a:	mov    QWORD PTR [rsp-0x8],rax
  41cc2f:	mov    DWORD PTR [rsp-0x18],esi
  41cc33:	mov    DWORD PTR [rsp-0x30],ebp
  41cc37:	mov    DWORD PTR [rsp-0x20],ebx
  41cc3b:	mov    ebx,edi
  41cc3d:	mov    DWORD PTR [rsp-0x10],edi
  41cc41:	xor    ebx,ecx
  41cc43:	mov    r13d,ecx
  41cc46:	mov    DWORD PTR [rsp-0x2c],r8d
  41cc4b:	mov    eax,ebx
  41cc4d:	mov    ebx,edx
  41cc4f:	mov    DWORD PTR [rsp-0xc],r13d
  41cc54:	and    eax,edx
  41cc56:	rorx   edx,esi,0x1b
  41cc5c:	mov    DWORD PTR [rsp-0x14],ebx
  41cc60:	xor    eax,ecx
  41cc62:	mov    ecx,DWORD PTR [rsp-0x20]
  41cc66:	lea    edx,[rcx+rdx*1+0x5a827999]
  41cc6d:	rorx   ecx,ebx,0x2
  41cc73:	mov    ebx,ecx
  41cc75:	add    eax,edx
  41cc77:	mov    edx,edi
  41cc79:	xor    edx,ecx
  41cc7b:	add    eax,r11d
  41cc7e:	and    edx,esi
  41cc80:	xor    edx,edi
  41cc82:	lea    r13d,[r13+rdx*1+0x5a827999]
  41cc8a:	add    r13d,DWORD PTR [rsp-0x4c]
  41cc8f:	rorx   edx,eax,0x1b
  41cc95:	add    r13d,edx
  41cc98:	rorx   edx,esi,0x2
  41cc9e:	lea    esi,[r10+rdi*1+0x5a827999]
  41cca6:	xor    ebx,edx
  41cca8:	and    ebx,eax
  41ccaa:	rorx   eax,eax,0x2
  41ccb0:	xor    ebx,ecx
  41ccb2:	lea    ecx,[r9+rcx*1+0x5a827999]
  41ccba:	add    ebx,esi
  41ccbc:	rorx   esi,r13d,0x1b
  41ccc2:	add    ebx,esi
  41ccc4:	mov    esi,edx
  41ccc6:	xor    esi,eax
  41ccc8:	mov    edi,esi
  41ccca:	mov    esi,eax
  41cccc:	and    edi,r13d
  41cccf:	rorx   r13d,r13d,0x2
  41ccd5:	xor    edi,edx
  41ccd7:	xor    esi,r13d
  41ccda:	add    edi,ecx
  41ccdc:	rorx   ecx,ebx,0x1b
  41cce2:	and    esi,ebx
  41cce4:	add    edi,ecx
  41cce6:	mov    ecx,DWORD PTR [rsp-0x44]
  41ccea:	xor    esi,eax
  41ccec:	rorx   ebx,ebx,0x2
  41ccf2:	lea    edx,[rcx+rdx*1+0x5a827999]
  41ccf9:	mov    ecx,r13d
  41ccfc:	xor    ecx,ebx
  41ccfe:	add    esi,edx
  41cd00:	rorx   edx,edi,0x1b
  41cd06:	and    ecx,edi
  41cd08:	add    esi,edx
  41cd0a:	mov    edx,DWORD PTR [rsp-0x40]
  41cd0e:	rorx   edi,edi,0x2
  41cd14:	xor    ecx,r13d
  41cd17:	lea    eax,[rdx+rax*1+0x5a827999]
  41cd1e:	mov    edx,ebx
  41cd20:	xor    edx,edi
  41cd22:	add    ecx,eax
  41cd24:	rorx   eax,esi,0x1b
  41cd2a:	and    edx,esi
  41cd2c:	add    ecx,eax
  41cd2e:	lea    eax,[r14+r13*1+0x5a827999]
  41cd36:	xor    edx,ebx
  41cd38:	mov    r13d,DWORD PTR [rsp-0x3c]
  41cd3d:	rorx   esi,esi,0x2
  41cd43:	add    edx,eax
  41cd45:	rorx   eax,ecx,0x1b
  41cd4b:	add    edx,eax
  41cd4d:	mov    eax,edi
  41cd4f:	xor    eax,esi
  41cd51:	lea    ebx,[r13+rbx*1+0x5a827999]
  41cd59:	mov    r13d,DWORD PTR [rsp-0x38]
  41cd5e:	and    eax,ecx
  41cd60:	rorx   ecx,ecx,0x2
  41cd66:	xor    eax,edi
  41cd68:	lea    edi,[r12+rdi*1+0x5a827999]
  41cd70:	add    eax,ebx
  41cd72:	rorx   ebx,edx,0x1b
  41cd78:	add    eax,ebx
  41cd7a:	mov    ebx,esi
  41cd7c:	xor    ebx,ecx
  41cd7e:	and    ebx,edx
  41cd80:	rorx   edx,edx,0x2
  41cd86:	xor    ebx,esi
  41cd88:	lea    esi,[r15+rsi*1+0x5a827999]
  41cd90:	add    ebx,edi
  41cd92:	rorx   edi,eax,0x1b
  41cd98:	add    ebx,edi
  41cd9a:	mov    edi,ecx
  41cd9c:	xor    edi,edx
  41cd9e:	and    edi,eax
  41cda0:	rorx   eax,eax,0x2
  41cda6:	xor    edi,ecx
  41cda8:	lea    ecx,[r13+rcx*1+0x5a827999]
  41cdb0:	mov    r13d,DWORD PTR [rsp-0x48]
  41cdb5:	add    edi,esi
  41cdb7:	rorx   esi,ebx,0x1b
  41cdbd:	add    edi,esi
  41cdbf:	mov    esi,edx
  41cdc1:	xor    esi,eax
  41cdc3:	and    esi,ebx
  41cdc5:	rorx   ebx,ebx,0x2
  41cdcb:	xor    esi,edx
  41cdcd:	lea    edx,[r13+rdx*1+0x5a827999]
  41cdd5:	mov    r13d,DWORD PTR [rsp-0x28]
  41cdda:	add    esi,ecx
  41cddc:	rorx   ecx,edi,0x1b
  41cde2:	add    esi,ecx
  41cde4:	mov    ecx,eax
  41cde6:	xor    ecx,ebx
  41cde8:	and    ecx,edi
  41cdea:	rorx   edi,edi,0x2
  41cdf0:	xor    ecx,eax
  41cdf2:	lea    eax,[r13+rax*1+0x5a827999]
  41cdfa:	mov    r13d,DWORD PTR [rsp-0x34]
  41cdff:	add    ecx,edx
  41ce01:	rorx   edx,esi,0x1b
  41ce07:	add    ecx,edx
  41ce09:	mov    edx,ebx
  41ce0b:	xor    edx,edi
  41ce0d:	and    edx,esi
  41ce0f:	rorx   esi,esi,0x2
  41ce15:	xor    edx,ebx
  41ce17:	lea    ebx,[r13+rbx*1+0x5a827999]
  41ce1f:	add    edx,eax
  41ce21:	rorx   eax,ecx,0x1b
  41ce27:	add    edx,eax
  41ce29:	mov    eax,edi
  41ce2b:	xor    r11d,r10d
  41ce2e:	xor    eax,esi
  41ce30:	xor    r11d,r12d
  41ce33:	and    eax,ecx
  41ce35:	rorx   ecx,ecx,0x2
  41ce3b:	xor    r11d,r13d
  41ce3e:	xor    eax,edi
  41ce40:	lea    edi,[rbp+rdi*1+0x5a827999]
  41ce47:	rorx   r11d,r11d,0x1f
  41ce4d:	add    eax,ebx
  41ce4f:	rorx   ebx,edx,0x1b
  41ce55:	add    eax,ebx
  41ce57:	mov    ebx,esi
  41ce59:	xor    ebx,ecx
  41ce5b:	and    ebx,edx
  41ce5d:	rorx   edx,edx,0x2
  41ce63:	xor    ebx,esi
  41ce65:	lea    esi,[r8+rsi*1+0x5a827999]
  41ce6d:	add    ebx,edi
  41ce6f:	rorx   edi,eax,0x1b
  41ce75:	add    ebx,edi
  41ce77:	mov    edi,ecx
  41ce79:	xor    edi,edx
  41ce7b:	and    edi,eax
  41ce7d:	rorx   eax,eax,0x2
  41ce83:	xor    edi,ecx
  41ce85:	lea    ecx,[rcx+r11*1+0x5a827999]
  41ce8d:	add    edi,esi
  41ce8f:	rorx   esi,ebx,0x1b
  41ce95:	add    edi,esi
  41ce97:	mov    esi,edx
  41ce99:	xor    esi,eax
  41ce9b:	and    esi,ebx
  41ce9d:	rorx   ebx,ebx,0x2
  41cea3:	xor    esi,edx
  41cea5:	add    esi,ecx
  41cea7:	rorx   ecx,edi,0x1b
  41cead:	add    esi,ecx
  41ceaf:	mov    ecx,DWORD PTR [rsp-0x4c]
  41ceb3:	xor    ecx,r9d
  41ceb6:	xor    ecx,r15d
  41ceb9:	xor    ecx,ebp
  41cebb:	rorx   ecx,ecx,0x1f
  41cec1:	mov    ebp,ecx
  41cec3:	mov    ecx,eax
  41cec5:	xor    ecx,ebx
  41cec7:	lea    edx,[rdx+rbp*1+0x5a827999]
  41cece:	and    ecx,edi
  41ced0:	rorx   edi,edi,0x2
  41ced6:	xor    ecx,eax
  41ced8:	add    ecx,edx
  41ceda:	rorx   edx,esi,0x1b
  41cee0:	add    ecx,edx
  41cee2:	xor    r10d,DWORD PTR [rsp-0x44]
  41cee7:	xor    r9d,DWORD PTR [rsp-0x40]
  41ceec:	xor    r10d,DWORD PTR [rsp-0x38]
  41cef1:	xor    r10d,r8d
  41cef4:	rorx   r8d,r10d,0x1f
  41cefa:	mov    r10d,ebx
  41cefd:	xor    r10d,edi
  41cf00:	lea    eax,[rax+r8*1+0x5a827999]
  41cf08:	mov    DWORD PTR [rsp-0x4c],r8d
  41cf0d:	mov    edx,r10d
  41cf10:	mov    r10d,DWORD PTR [rsp-0x48]
  41cf15:	and    edx,esi
  41cf17:	rorx   esi,esi,0x2
  41cf1d:	xor    edx,ebx
  41cf1f:	xor    r9d,r10d
  41cf22:	add    edx,eax
  41cf24:	rorx   eax,ecx,0x1b
  41cf2a:	xor    r9d,r11d
  41cf2d:	add    edx,eax
  41cf2f:	rorx   r9d,r9d,0x1f
  41cf35:	mov    r8d,r9d
  41cf38:	mov    r9d,edi
  41cf3b:	xor    r9d,esi
  41cf3e:	lea    ebx,[rbx+r8*1+0x5a827999]
  41cf46:	mov    DWORD PTR [rsp-0x48],r8d
  41cf4b:	mov    eax,r9d
  41cf4e:	mov    r9d,DWORD PTR [rsp-0x28]
  41cf53:	mov    DWORD PTR [rsp-0x28],ebp
  41cf57:	and    eax,ecx
  41cf59:	rorx   ecx,ecx,0x2
  41cf5f:	xor    eax,edi
  41cf61:	add    eax,ebx
  41cf63:	rorx   ebx,edx,0x1b
  41cf69:	add    eax,ebx
  41cf6b:	mov    ebx,DWORD PTR [rsp-0x44]
  41cf6f:	xor    ebx,r14d
  41cf72:	xor    r14d,r12d
  41cf75:	mov    r8d,ebx
  41cf78:	mov    ebx,esi
  41cf7a:	xor    r8d,r9d
  41cf7d:	xor    ebx,ecx
  41cf7f:	xor    r8d,ebp
  41cf82:	mov    ebp,DWORD PTR [rsp-0x40]
  41cf86:	xor    ebp,DWORD PTR [rsp-0x3c]
  41cf8a:	rorx   r8d,r8d,0x1f
  41cf90:	xor    ebx,edx
  41cf92:	rorx   edx,edx,0x2
  41cf98:	lea    edi,[rdi+r8*1+0x6ed9eba1]
  41cfa0:	add    ebx,edi
  41cfa2:	rorx   edi,eax,0x1b
  41cfa8:	add    ebx,edi
  41cfaa:	mov    edi,ebp
  41cfac:	xor    edi,r13d
  41cfaf:	xor    edi,DWORD PTR [rsp-0x4c]
  41cfb3:	mov    r13d,ecx
  41cfb6:	xor    r13d,edx
  41cfb9:	mov    ebp,r13d
  41cfbc:	xor    ebp,eax
  41cfbe:	rorx   eax,eax,0x2
  41cfc4:	rorx   edi,edi,0x1f
  41cfca:	lea    esi,[rsi+rdi*1+0x6ed9eba1]
  41cfd1:	add    ebp,esi
  41cfd3:	rorx   esi,ebx,0x1b
  41cfd9:	add    ebp,esi
  41cfdb:	mov    esi,DWORD PTR [rsp-0x30]
  41cfdf:	xor    esi,r14d
  41cfe2:	xor    esi,DWORD PTR [rsp-0x48]
  41cfe6:	mov    r14d,edx
  41cfe9:	xor    r14d,eax
  41cfec:	xor    r14d,ebx
  41cfef:	rorx   ebx,ebx,0x2
  41cff5:	rorx   esi,esi,0x1f
  41cffb:	lea    ecx,[rcx+rsi*1+0x6ed9eba1]
  41d002:	mov    DWORD PTR [rsp-0x40],esi
  41d006:	mov    esi,DWORD PTR [rsp-0x3c]
  41d00a:	add    r14d,ecx
  41d00d:	rorx   ecx,ebp,0x1b
  41d013:	add    r14d,ecx
  41d016:	mov    ecx,DWORD PTR [rsp-0x2c]
  41d01a:	xor    esi,r15d
  41d01d:	xor    r15d,r10d
  41d020:	xor    ecx,esi
  41d022:	mov    esi,eax
  41d024:	xor    ecx,r8d
  41d027:	xor    esi,ebx
  41d029:	rorx   ecx,ecx,0x1f
  41d02f:	mov    r13d,esi
  41d032:	lea    edx,[rdx+rcx*1+0x6ed9eba1]
  41d039:	mov    esi,ecx
  41d03b:	mov    ecx,DWORD PTR [rsp-0x38]
  41d03f:	xor    r13d,ebp
  41d042:	rorx   ebp,ebp,0x2
  41d048:	mov    DWORD PTR [rsp-0x3c],esi
  41d04c:	add    r13d,edx
  41d04f:	rorx   edx,r14d,0x1b
  41d055:	xor    r12d,ecx
  41d058:	add    r13d,edx
  41d05b:	xor    ecx,r9d
  41d05e:	mov    edx,r12d
  41d061:	mov    r12d,ebx
  41d064:	xor    edx,r11d
  41d067:	xor    r12d,ebp
  41d06a:	xor    edx,edi
  41d06c:	xor    r12d,r14d
  41d06f:	rorx   r14d,r14d,0x2
  41d075:	rorx   edx,edx,0x1f
  41d07b:	lea    eax,[rax+rdx*1+0x6ed9eba1]
  41d082:	mov    DWORD PTR [rsp-0x44],edx
  41d086:	mov    edx,r14d
  41d089:	add    r12d,eax
  41d08c:	rorx   eax,r13d,0x1b
  41d092:	add    r12d,eax
  41d095:	mov    eax,DWORD PTR [rsp-0x28]
  41d099:	xor    eax,r15d
  41d09c:	xor    eax,DWORD PTR [rsp-0x40]
  41d0a0:	mov    r15d,ebp
  41d0a3:	xor    r15d,r14d
  41d0a6:	xor    r15d,r13d
  41d0a9:	rorx   r13d,r13d,0x2
  41d0af:	xor    edx,r13d
  41d0b2:	rorx   eax,eax,0x1f
  41d0b8:	lea    ebx,[rbx+rax*1+0x6ed9eba1]
  41d0bf:	add    r15d,ebx
  41d0c2:	rorx   ebx,r12d,0x1b
  41d0c8:	add    r15d,ebx
  41d0cb:	mov    ebx,DWORD PTR [rsp-0x4c]
  41d0cf:	xor    ebx,ecx
  41d0d1:	mov    ecx,DWORD PTR [rsp-0x34]
  41d0d5:	xor    ebx,esi
  41d0d7:	rorx   ebx,ebx,0x1f
  41d0dd:	mov    esi,ebx
  41d0df:	mov    ebx,edx
  41d0e1:	lea    ebp,[rbp+rsi*1+0x6ed9eba1]
  41d0e8:	xor    ebx,r12d
  41d0eb:	rorx   r12d,r12d,0x2
  41d0f1:	add    ebx,ebp
  41d0f3:	rorx   ebp,r15d,0x1b
  41d0f9:	add    ebx,ebp
  41d0fb:	mov    ebp,DWORD PTR [rsp-0x48]
  41d0ff:	xor    r10d,ecx
  41d102:	xor    r9d,DWORD PTR [rsp-0x30]
  41d107:	xor    ebp,r10d
  41d10a:	xor    ebp,DWORD PTR [rsp-0x44]
  41d10e:	mov    r10d,r13d
  41d111:	xor    r10d,r12d
  41d114:	rorx   ebp,ebp,0x1f
  41d11a:	mov    edx,ebp
  41d11c:	mov    ebp,r10d
  41d11f:	mov    r10d,r12d
  41d122:	lea    r14d,[r14+rdx*1+0x6ed9eba1]
  41d12a:	xor    ebp,r15d
  41d12d:	rorx   r15d,r15d,0x2
  41d133:	xor    r10d,r15d
  41d136:	add    r14d,ebp
  41d139:	rorx   ebp,ebx,0x1b
  41d13f:	add    r14d,ebp
  41d142:	mov    ebp,r9d
  41d145:	xor    ebp,r8d
  41d148:	xor    ebp,eax
  41d14a:	rorx   ebp,ebp,0x1f
  41d150:	mov    r9d,ebp
  41d153:	mov    ebp,r10d
  41d156:	mov    r10d,r15d
  41d159:	lea    r13d,[r13+r9*1+0x6ed9eba1]
  41d161:	xor    ebp,ebx
  41d163:	rorx   ebx,ebx,0x2
  41d169:	xor    r10d,ebx
  41d16c:	mov    DWORD PTR [rsp-0x38],r9d
  41d171:	add    r13d,ebp
  41d174:	rorx   ebp,r14d,0x1b
  41d17a:	add    r13d,ebp
  41d17d:	mov    ebp,DWORD PTR [rsp-0x2c]
  41d181:	xor    ebp,ecx
  41d183:	xor    ebp,edi
  41d185:	xor    ebp,esi
  41d187:	rorx   ebp,ebp,0x1f
  41d18d:	mov    ecx,ebp
  41d18f:	mov    ebp,r10d
  41d192:	lea    r12d,[r12+rcx*1+0x6ed9eba1]
  41d19a:	xor    ebp,r14d
  41d19d:	rorx   r14d,r14d,0x2
  41d1a3:	add    ebp,r12d
  41d1a6:	rorx   r12d,r13d,0x1b
  41d1ac:	add    r12d,ebp
  41d1af:	mov    ebp,DWORD PTR [rsp-0x30]
  41d1b3:	xor    ebp,r11d
  41d1b6:	xor    ebp,DWORD PTR [rsp-0x40]
  41d1ba:	xor    ebp,edx
  41d1bc:	rorx   ebp,ebp,0x1f
  41d1c2:	mov    r10d,ebp
  41d1c5:	mov    ebp,ebx
  41d1c7:	xor    ebp,r14d
  41d1ca:	lea    r15d,[r15+r10*1+0x6ed9eba1]
  41d1d2:	mov    DWORD PTR [rsp-0x24],r10d
  41d1d7:	xor    ebp,r13d
  41d1da:	rorx   r13d,r13d,0x2
  41d1e0:	add    ebp,r15d
  41d1e3:	rorx   r15d,r12d,0x1b
  41d1e9:	add    ebp,r15d
  41d1ec:	mov    r15d,DWORD PTR [rsp-0x2c]
  41d1f1:	xor    r15d,DWORD PTR [rsp-0x28]
  41d1f6:	xor    r15d,DWORD PTR [rsp-0x3c]
  41d1fb:	xor    r15d,r9d
  41d1fe:	rorx   r15d,r15d,0x1f
  41d204:	mov    r9d,r15d
  41d207:	mov    r15d,r14d
  41d20a:	xor    r15d,r13d
  41d20d:	xor    r11d,DWORD PTR [rsp-0x4c]
  41d212:	lea    ebx,[rbx+r9*1+0x6ed9eba1]
  41d21a:	xor    r11d,DWORD PTR [rsp-0x44]
  41d21f:	xor    r15d,r12d
  41d222:	rorx   r12d,r12d,0x2
  41d228:	add    ebx,r15d
  41d22b:	rorx   r15d,ebp,0x1b
  41d231:	mov    DWORD PTR [rsp-0x34],r9d
  41d236:	add    ebx,r15d
  41d239:	xor    r11d,ecx
  41d23c:	rorx   r15d,r11d,0x1f
  41d242:	mov    r11d,r13d
  41d245:	xor    r11d,r12d
  41d248:	lea    r14d,[r14+r15*1+0x6ed9eba1]
  41d250:	xor    r11d,ebp
  41d253:	rorx   ebp,ebp,0x2
  41d259:	add    r11d,r14d
  41d25c:	rorx   r14d,ebx,0x1b
  41d262:	add    r11d,r14d
  41d265:	mov    r14d,DWORD PTR [rsp-0x28]
  41d26a:	xor    r14d,DWORD PTR [rsp-0x48]
  41d26f:	xor    r14d,eax
  41d272:	xor    r14d,r10d
  41d275:	rorx   r14d,r14d,0x1f
  41d27b:	mov    r10d,r14d
  41d27e:	mov    r14d,r12d
  41d281:	xor    r14d,ebp
  41d284:	lea    r13d,[r13+r10*1+0x6ed9eba1]
  41d28c:	mov    DWORD PTR [rsp-0x30],r10d
  41d291:	xor    r14d,ebx
  41d294:	rorx   ebx,ebx,0x2
  41d29a:	add    r13d,r14d
  41d29d:	rorx   r14d,r11d,0x1b
  41d2a3:	add    r13d,r14d
  41d2a6:	mov    r14d,DWORD PTR [rsp-0x4c]
  41d2ab:	mov    DWORD PTR [rsp-0x4c],esi
  41d2af:	xor    r14d,r8d
  41d2b2:	mov    r10d,r14d
  41d2b5:	xor    r10d,esi
  41d2b8:	xor    r10d,r9d
  41d2bb:	mov    r9d,DWORD PTR [rsp-0x48]
  41d2c0:	mov    esi,DWORD PTR [rsp-0x40]
  41d2c4:	rorx   r14d,r10d,0x1f
  41d2ca:	mov    r10d,ebp
  41d2cd:	mov    DWORD PTR [rsp-0x48],edx
  41d2d1:	xor    r10d,ebx
  41d2d4:	lea    r12d,[r12+r14*1+0x6ed9eba1]
  41d2dc:	mov    DWORD PTR [rsp-0x40],ecx
  41d2e0:	xor    r9d,edi
  41d2e3:	xor    r10d,r11d
  41d2e6:	rorx   r11d,r11d,0x2
  41d2ec:	xor    r9d,edx
  41d2ef:	add    r10d,r12d
  41d2f2:	rorx   r12d,r13d,0x1b
  41d2f8:	xor    r9d,r15d
  41d2fb:	add    r10d,r12d
  41d2fe:	rorx   r12d,r9d,0x1f
  41d304:	mov    r9d,ebx
  41d307:	xor    r9d,r11d
  41d30a:	lea    ebp,[rbp+r12*1+0x6ed9eba1]
  41d312:	mov    edx,r12d
  41d315:	xor    r9d,r13d
  41d318:	rorx   r12d,r13d,0x2
  41d31e:	mov    DWORD PTR [rsp-0x1c],edx
  41d322:	add    r9d,ebp
  41d325:	rorx   ebp,r10d,0x1b
  41d32b:	add    r9d,ebp
  41d32e:	xor    r8d,esi
  41d331:	xor    r8d,DWORD PTR [rsp-0x38]
  41d336:	xor    r8d,DWORD PTR [rsp-0x30]
  41d33b:	xor    edi,DWORD PTR [rsp-0x3c]
  41d33f:	xor    esi,DWORD PTR [rsp-0x44]
  41d343:	xor    esi,DWORD PTR [rsp-0x24]
  41d347:	rorx   ebp,r8d,0x1f
  41d34d:	mov    r8d,r11d
  41d350:	xor    edi,ecx
  41d352:	xor    r8d,r12d
  41d355:	lea    ebx,[rbx+rbp*1+0x6ed9eba1]
  41d35c:	xor    edi,r14d
  41d35f:	xor    r8d,r10d
  41d362:	rorx   r10d,r10d,0x2
  41d368:	mov    ecx,DWORD PTR [rsp-0x3c]
  41d36c:	add    r8d,ebx
  41d36f:	rorx   ebx,r9d,0x1b
  41d375:	xor    esi,edx
  41d377:	add    r8d,ebx
  41d37a:	rorx   ebx,edi,0x1f
  41d380:	mov    edi,r12d
  41d383:	xor    edi,r10d
  41d386:	lea    r11d,[r11+rbx*1+0x6ed9eba1]
  41d38e:	rorx   r13d,esi,0x1f
  41d394:	xor    edi,r9d
  41d397:	rorx   r9d,r9d,0x2
  41d39d:	xor    ecx,eax
  41d39f:	add    edi,r11d
  41d3a2:	rorx   r11d,r8d,0x1b
  41d3a8:	xor    ecx,DWORD PTR [rsp-0x34]
  41d3ac:	add    edi,r11d
  41d3af:	mov    r11d,r10d
  41d3b2:	mov    edx,DWORD PTR [rsp-0x44]
  41d3b6:	xor    r11d,r9d
  41d3b9:	mov    DWORD PTR [rsp-0x2c],ebx
  41d3bd:	mov    esi,r11d
  41d3c0:	lea    r11d,[r12+r13*1+0x6ed9eba1]
  41d3c8:	xor    esi,r8d
  41d3cb:	rorx   r8d,r8d,0x2
  41d3d1:	xor    ecx,ebp
  41d3d3:	add    esi,r11d
  41d3d6:	rorx   r11d,edi,0x1b
  41d3dc:	rorx   r12d,ecx,0x1f
  41d3e2:	add    esi,r11d
  41d3e5:	mov    r11d,r9d
  41d3e8:	lea    r10d,[r10+r12*1+0x6ed9eba1]
  41d3f0:	xor    r11d,r8d
  41d3f3:	mov    DWORD PTR [rsp-0x3c],r12d
  41d3f8:	mov    ecx,r11d
  41d3fb:	mov    r11d,DWORD PTR [rsp-0x4c]
  41d400:	xor    ecx,edi
  41d402:	rorx   edi,edi,0x2
  41d408:	add    ecx,r10d
  41d40b:	rorx   r10d,esi,0x1b
  41d411:	xor    edx,r11d
  41d414:	add    ecx,r10d
  41d417:	mov    r10d,esi
  41d41a:	xor    edx,r15d
  41d41d:	xor    edx,DWORD PTR [rsp-0x2c]
  41d421:	rorx   r12d,edx,0x1f
  41d427:	rorx   edx,ecx,0x1b
  41d42d:	lea    r9d,[r9+r12*1-0x70e44324]
  41d435:	add    r9d,edx
  41d438:	or     r10d,edi
  41d43b:	xor    r11d,DWORD PTR [rsp-0x38]
  41d440:	mov    edx,r10d
  41d443:	mov    r10d,esi
  41d446:	rorx   esi,esi,0x2
  41d44c:	and    r10d,edi
  41d44f:	and    edx,r8d
  41d452:	or     edx,r10d
  41d455:	mov    r10d,DWORD PTR [rsp-0x48]
  41d45a:	add    r9d,edx
  41d45d:	xor    eax,r10d
  41d460:	xor    eax,DWORD PTR [rsp-0x30]
  41d464:	xor    eax,r13d
  41d467:	rorx   edx,eax,0x1f
  41d46d:	mov    eax,ecx
  41d46f:	mov    ebx,edx
  41d471:	mov    edx,ecx
  41d473:	and    eax,esi
  41d475:	or     edx,esi
  41d477:	mov    DWORD PTR [rsp-0x28],ebx
  41d47b:	rorx   ecx,ecx,0x2
  41d481:	and    edx,edi
  41d483:	or     eax,edx
  41d485:	lea    edx,[r8+rbx*1-0x70e44324]
  41d48d:	mov    ebx,r11d
  41d490:	xor    ebx,r14d
  41d493:	xor    ebx,DWORD PTR [rsp-0x3c]
  41d497:	mov    r11d,r9d
  41d49a:	add    eax,edx
  41d49c:	rorx   edx,r9d,0x1b
  41d4a2:	or     r11d,ecx
  41d4a5:	add    eax,edx
  41d4a7:	rorx   edx,eax,0x1b
  41d4ad:	rorx   r8d,ebx,0x1f
  41d4b3:	rorx   ebx,eax,0x2
  41d4b9:	mov    DWORD PTR [rsp-0x4c],r8d
  41d4be:	lea    edi,[rdi+r8*1-0x70e44324]
  41d4c6:	mov    r8d,DWORD PTR [rsp-0x40]
  41d4cb:	add    edx,edi
  41d4cd:	mov    edi,r11d
  41d4d0:	mov    r11d,r9d
  41d4d3:	xor    r8d,r10d
  41d4d6:	xor    r8d,DWORD PTR [rsp-0x1c]
  41d4db:	and    r11d,ecx
  41d4de:	and    edi,esi
  41d4e0:	rorx   r9d,r9d,0x2
  41d4e6:	or     edi,r11d
  41d4e9:	mov    r11d,eax
  41d4ec:	or     r11d,r9d
  41d4ef:	add    edx,edi
  41d4f1:	mov    edi,eax
  41d4f3:	xor    r8d,r12d
  41d4f6:	and    edi,r9d
  41d4f9:	rorx   r10d,r8d,0x1f
  41d4ff:	mov    r8d,r11d
  41d502:	and    r8d,ecx
  41d505:	lea    r11d,[rsi+r10*1-0x70e44324]
  41d50d:	mov    esi,DWORD PTR [rsp-0x38]
  41d511:	or     edi,r8d
  41d514:	mov    DWORD PTR [rsp-0x48],r10d
  41d519:	add    edi,r11d
  41d51c:	rorx   r11d,edx,0x1b
  41d522:	add    r11d,edi
  41d525:	mov    edi,DWORD PTR [rsp-0x24]
  41d529:	rorx   eax,r11d,0x1b
  41d52f:	mov    r8d,r11d
  41d532:	xor    esi,edi
  41d534:	xor    esi,ebp
  41d536:	xor    esi,DWORD PTR [rsp-0x28]
  41d53a:	rorx   esi,esi,0x1f
  41d540:	lea    r10d,[rcx+rsi*1-0x70e44324]
  41d548:	mov    DWORD PTR [rsp-0x38],esi
  41d54c:	mov    esi,DWORD PTR [rsp-0x40]
  41d550:	xor    esi,DWORD PTR [rsp-0x34]
  41d554:	mov    ecx,edx
  41d556:	xor    esi,DWORD PTR [rsp-0x2c]
  41d55a:	add    eax,r10d
  41d55d:	mov    r10d,edx
  41d560:	xor    esi,DWORD PTR [rsp-0x4c]
  41d564:	or     r10d,ebx
  41d567:	and    ecx,ebx
  41d569:	and    r10d,r9d
  41d56c:	rorx   edx,edx,0x2
  41d572:	or     r10d,ecx
  41d575:	and    r8d,edx
  41d578:	add    r10d,eax
  41d57b:	mov    eax,r8d
  41d57e:	rorx   r8d,r11d,0x2
  41d584:	rorx   ecx,esi,0x1f
  41d58a:	mov    esi,r11d
  41d58d:	or     esi,edx
  41d58f:	mov    DWORD PTR [rsp-0x24],ecx
  41d593:	and    esi,ebx
  41d595:	or     eax,esi
  41d597:	lea    esi,[r9+rcx*1-0x70e44324]
  41d59f:	mov    ecx,edi
  41d5a1:	xor    ecx,r15d
  41d5a4:	xor    ecx,r13d
  41d5a7:	xor    ecx,DWORD PTR [rsp-0x48]
  41d5ab:	add    eax,esi
  41d5ad:	rorx   esi,r10d,0x1b
  41d5b3:	add    esi,eax
  41d5b5:	rorx   eax,esi,0x1b
  41d5bb:	rorx   r11d,ecx,0x1f
  41d5c1:	mov    ecx,DWORD PTR [rsp-0x34]
  41d5c5:	mov    r9d,r11d
  41d5c8:	lea    edi,[rbx+r11*1-0x70e44324]
  41d5d0:	mov    r11d,r10d
  41d5d3:	or     r11d,r8d
  41d5d6:	add    eax,edi
  41d5d8:	mov    edi,r11d
  41d5db:	mov    r11d,r10d
  41d5de:	and    r11d,r8d
  41d5e1:	and    edi,edx
  41d5e3:	rorx   r10d,r10d,0x2
  41d5e9:	or     edi,r11d
  41d5ec:	mov    r11d,DWORD PTR [rsp-0x30]
  41d5f1:	mov    DWORD PTR [rsp-0x30],r9d
  41d5f6:	add    edi,eax
  41d5f8:	mov    eax,DWORD PTR [rsp-0x3c]
  41d5fc:	xor    ecx,r11d
  41d5ff:	xor    eax,ecx
  41d601:	xor    eax,DWORD PTR [rsp-0x38]
  41d605:	rorx   ebx,eax,0x1f
  41d60b:	mov    ecx,ebx
  41d60d:	mov    ebx,esi
  41d60f:	or     ebx,r10d
  41d612:	mov    DWORD PTR [rsp-0x34],ecx
  41d616:	mov    eax,ebx
  41d618:	mov    ebx,esi
  41d61a:	and    eax,r8d
  41d61d:	and    ebx,r10d
  41d620:	xor    r15d,r14d
  41d623:	or     ebx,eax
  41d625:	lea    eax,[rdx+rcx*1-0x70e44324]
  41d62c:	mov    ecx,r15d
  41d62f:	xor    ecx,r12d
  41d632:	xor    ecx,DWORD PTR [rsp-0x24]
  41d636:	mov    r15d,edi
  41d639:	add    ebx,eax
  41d63b:	rorx   eax,edi,0x1b
  41d641:	xor    r14d,ebp
  41d644:	add    ebx,eax
  41d646:	rorx   eax,esi,0x2
  41d64c:	or     r15d,eax
  41d64f:	rorx   edx,ecx,0x1f
  41d655:	lea    ecx,[r8+rdx*1-0x70e44324]
  41d65d:	mov    DWORD PTR [rsp-0x44],edx
  41d661:	rorx   edx,ebx,0x1b
  41d667:	lea    esi,[rcx+rdx*1]
  41d66a:	mov    edx,r15d
  41d66d:	mov    r15d,edi
  41d670:	and    r15d,eax
  41d673:	and    edx,r10d
  41d676:	rorx   edi,edi,0x2
  41d67c:	mov    ecx,r15d
  41d67f:	mov    r15d,DWORD PTR [rsp-0x1c]
  41d684:	or     ecx,edx
  41d686:	mov    edx,r11d
  41d689:	add    ecx,esi
  41d68b:	xor    edx,r15d
  41d68e:	xor    edx,DWORD PTR [rsp-0x28]
  41d692:	mov    r8d,r15d
  41d695:	mov    r15d,DWORD PTR [rsp-0x2c]
  41d69a:	xor    edx,r9d
  41d69d:	mov    r9d,ebx
  41d6a0:	xor    r8d,r15d
  41d6a3:	or     r9d,edi
  41d6a6:	rorx   r11d,edx,0x1f
  41d6ac:	xor    r8d,DWORD PTR [rsp-0x48]
  41d6b1:	mov    edx,r9d
  41d6b4:	mov    r9d,ebx
  41d6b7:	mov    DWORD PTR [rsp-0x40],r11d
  41d6bc:	and    r9d,edi
  41d6bf:	and    edx,eax
  41d6c1:	rorx   ebx,ebx,0x2
  41d6c7:	mov    esi,r9d
  41d6ca:	mov    r9d,DWORD PTR [rsp-0x4c]
  41d6cf:	or     esi,edx
  41d6d1:	lea    edx,[r10+r11*1-0x70e44324]
  41d6d9:	xor    r9d,r14d
  41d6dc:	xor    r9d,DWORD PTR [rsp-0x34]
  41d6e1:	add    esi,edx
  41d6e3:	rorx   edx,ecx,0x1b
  41d6e9:	mov    r14d,ecx
  41d6ec:	add    esi,edx
  41d6ee:	or     r14d,ebx
  41d6f1:	rorx   r11d,r9d,0x1f
  41d6f7:	lea    edx,[rax+r11*1-0x70e44324]
  41d6ff:	rorx   eax,esi,0x1b
  41d705:	add    edx,eax
  41d707:	mov    eax,r14d
  41d70a:	mov    r14d,ecx
  41d70d:	and    r14d,ebx
  41d710:	and    eax,edi
  41d712:	or     eax,r14d
  41d715:	mov    r14d,esi
  41d718:	add    eax,edx
  41d71a:	xor    r8d,DWORD PTR [rsp-0x44]
  41d71f:	rorx   edx,ecx,0x2
  41d725:	and    r14d,edx
  41d728:	xor    ebp,r13d
  41d72b:	xor    r13d,r12d
  41d72e:	mov    ecx,r14d
  41d731:	rorx   r10d,r8d,0x1f
  41d737:	mov    r8d,esi
  41d73a:	or     r8d,edx
  41d73d:	mov    DWORD PTR [rsp-0x2c],r10d
  41d742:	and    r8d,ebx
  41d745:	or     ecx,r8d
  41d748:	lea    r8d,[rdi+r10*1-0x70e44324]
  41d750:	rorx   edi,eax,0x1b
  41d756:	rorx   r10d,esi,0x2
  41d75c:	add    ecx,r8d
  41d75f:	add    ecx,edi
  41d761:	mov    edi,DWORD PTR [rsp-0x38]
  41d765:	rorx   esi,ecx,0x1b
  41d76b:	mov    r8d,ecx
  41d76e:	xor    edi,ebp
  41d770:	xor    edi,DWORD PTR [rsp-0x40]
  41d774:	mov    ebp,eax
  41d776:	or     ebp,r10d
  41d779:	rorx   r14d,edi,0x1f
  41d77f:	mov    edi,ebp
  41d781:	mov    ebp,eax
  41d783:	lea    r9d,[rbx+r14*1-0x70e44324]
  41d78b:	and    ebp,r10d
  41d78e:	and    edi,edx
  41d790:	rorx   eax,eax,0x2
  41d796:	rorx   ebx,ecx,0x2
  41d79c:	add    esi,r9d
  41d79f:	mov    r9d,ebp
  41d7a2:	mov    ebp,DWORD PTR [rsp-0x3c]
  41d7a6:	or     r9d,edi
  41d7a9:	or     r8d,eax
  41d7ac:	add    r9d,esi
  41d7af:	mov    esi,r15d
  41d7b2:	xor    esi,ebp
  41d7b4:	xor    esi,DWORD PTR [rsp-0x24]
  41d7b8:	mov    edi,r9d
  41d7bb:	or     edi,ebx
  41d7bd:	xor    esi,r11d
  41d7c0:	rorx   r15d,esi,0x1f
  41d7c6:	mov    esi,r8d
  41d7c9:	mov    r8d,ecx
  41d7cc:	mov    ecx,DWORD PTR [rsp-0x30]
  41d7d0:	and    esi,r10d
  41d7d3:	and    r8d,eax
  41d7d6:	or     r8d,esi
  41d7d9:	lea    esi,[rdx+r15*1-0x70e44324]
  41d7e1:	rorx   edx,r9d,0x1b
  41d7e7:	xor    ecx,r13d
  41d7ea:	xor    ecx,DWORD PTR [rsp-0x2c]
  41d7ee:	add    r8d,esi
  41d7f1:	add    r8d,edx
  41d7f4:	rorx   edx,r8d,0x1b
  41d7fa:	rorx   r13d,ecx,0x1f
  41d800:	lea    esi,[r10+r13*1-0x70e44324]
  41d808:	mov    r10d,r8d
  41d80b:	add    edx,esi
  41d80d:	mov    esi,edi
  41d80f:	mov    edi,r9d
  41d812:	and    edi,ebx
  41d814:	and    esi,eax
  41d816:	or     esi,edi
  41d818:	rorx   edi,r9d,0x2
  41d81e:	mov    r9d,r8d
  41d821:	add    esi,edx
  41d823:	mov    edx,ebp
  41d825:	mov    ebp,DWORD PTR [rsp-0x28]
  41d829:	or     r9d,edi
  41d82c:	and    r10d,edi
  41d82f:	xor    r12d,DWORD PTR [rsp-0x4c]
  41d834:	and    r9d,ebx
  41d837:	xor    r12d,DWORD PTR [rsp-0x44]
  41d83c:	rorx   r8d,r8d,0x2
  41d842:	xor    edx,ebp
  41d844:	xor    edx,DWORD PTR [rsp-0x34]
  41d848:	or     r10d,r9d
  41d84b:	xor    r12d,r15d
  41d84e:	xor    edx,r14d
  41d851:	rorx   r12d,r12d,0x1f
  41d857:	rorx   ecx,edx,0x1f
  41d85d:	lea    r9d,[rax+rcx*1-0x70e44324]
  41d865:	mov    DWORD PTR [rsp-0x3c],ecx
  41d869:	lea    ecx,[rbx+r12*1-0x70e44324]
  41d871:	mov    ebx,esi
  41d873:	add    r10d,r9d
  41d876:	rorx   r9d,esi,0x1b
  41d87c:	or     ebx,r8d
  41d87f:	add    r9d,r10d
  41d882:	mov    r10d,DWORD PTR [rsp-0x48]
  41d887:	rorx   eax,r9d,0x1b
  41d88d:	add    eax,ecx
  41d88f:	mov    ecx,ebx
  41d891:	mov    ebx,esi
  41d893:	xor    r10d,ebp
  41d896:	xor    r10d,DWORD PTR [rsp-0x40]
  41d89b:	rorx   esi,esi,0x2
  41d8a1:	and    ebx,r8d
  41d8a4:	and    ecx,edi
  41d8a6:	or     ecx,ebx
  41d8a8:	add    ecx,eax
  41d8aa:	xor    r10d,r13d
  41d8ad:	rorx   ebp,r10d,0x1f
  41d8b3:	mov    r10d,r9d
  41d8b6:	or     r10d,esi
  41d8b9:	mov    edx,r10d
  41d8bc:	mov    r10d,r9d
  41d8bf:	and    r10d,esi
  41d8c2:	and    edx,r8d
  41d8c5:	mov    eax,r10d
  41d8c8:	rorx   r10d,r9d,0x2
  41d8ce:	mov    r9d,DWORD PTR [rsp-0x38]
  41d8d3:	or     eax,edx
  41d8d5:	lea    edx,[rdi+rbp*1-0x70e44324]
  41d8dc:	add    eax,edx
  41d8de:	rorx   edx,ecx,0x1b
  41d8e4:	add    eax,edx
  41d8e6:	mov    edx,DWORD PTR [rsp-0x4c]
  41d8ea:	xor    edx,r9d
  41d8ed:	mov    ebx,edx
  41d8ef:	xor    ebx,r11d
  41d8f2:	xor    ebx,DWORD PTR [rsp-0x3c]
  41d8f6:	rorx   edx,ebx,0x1f
  41d8fc:	mov    ebx,DWORD PTR [rsp-0x24]
  41d900:	lea    edi,[r8+rdx*1-0x70e44324]
  41d908:	mov    DWORD PTR [rsp-0x38],edx
  41d90c:	mov    r8d,ecx
  41d90f:	rorx   edx,eax,0x1b
  41d915:	add    edx,edi
  41d917:	or     r8d,r10d
  41d91a:	mov    edi,r8d
  41d91d:	mov    r8d,ecx
  41d920:	rorx   ecx,ecx,0x2
  41d926:	and    r8d,r10d
  41d929:	and    edi,esi
  41d92b:	or     edi,r8d
  41d92e:	mov    r8d,DWORD PTR [rsp-0x48]
  41d933:	add    edi,edx
  41d935:	mov    edx,eax
  41d937:	and    edx,ecx
  41d939:	xor    r8d,ebx
  41d93c:	xor    r8d,DWORD PTR [rsp-0x2c]
  41d941:	xor    r8d,r12d
  41d944:	rorx   r8d,r8d,0x1f
  41d94a:	mov    DWORD PTR [rsp-0x4c],r8d
  41d94f:	mov    r8d,eax
  41d952:	rorx   eax,eax,0x2
  41d958:	or     r8d,ecx
  41d95b:	and    r8d,r10d
  41d95e:	or     edx,r8d
  41d961:	mov    r8d,DWORD PTR [rsp-0x4c]
  41d966:	lea    r8d,[rsi+r8*1-0x70e44324]
  41d96e:	rorx   esi,edi,0x1b
  41d974:	add    edx,r8d
  41d977:	mov    r8d,eax
  41d97a:	add    edx,esi
  41d97c:	mov    esi,DWORD PTR [rsp-0x30]
  41d980:	xor    esi,r9d
  41d983:	mov    r9d,ecx
  41d986:	xor    esi,r14d
  41d989:	xor    r9d,eax
  41d98c:	xor    esi,ebp
  41d98e:	xor    r9d,edi
  41d991:	rorx   edi,edi,0x2
  41d997:	rorx   esi,esi,0x1f
  41d99d:	xor    r8d,edi
  41d9a0:	mov    DWORD PTR [rsp-0x48],esi
  41d9a4:	lea    esi,[r10+rsi*1-0x359d3e2a]
  41d9ac:	mov    r10d,DWORD PTR [rsp-0x34]
  41d9b1:	xor    r8d,edx
  41d9b4:	add    r9d,esi
  41d9b7:	rorx   esi,edx,0x1b
  41d9bd:	rorx   edx,edx,0x2
  41d9c3:	add    r9d,esi
  41d9c6:	mov    esi,ebx
  41d9c8:	xor    esi,r10d
  41d9cb:	xor    esi,r15d
  41d9ce:	xor    esi,DWORD PTR [rsp-0x38]
  41d9d2:	rorx   ebx,esi,0x1f
  41d9d8:	lea    ecx,[rcx+rbx*1-0x359d3e2a]
  41d9df:	mov    DWORD PTR [rsp-0x34],ebx
  41d9e3:	mov    ebx,edi
  41d9e5:	add    r8d,ecx
  41d9e8:	rorx   ecx,r9d,0x1b
  41d9ee:	add    r8d,ecx
  41d9f1:	mov    ecx,DWORD PTR [rsp-0x30]
  41d9f5:	xor    ecx,DWORD PTR [rsp-0x44]
  41d9f9:	xor    ecx,r13d
  41d9fc:	xor    ecx,DWORD PTR [rsp-0x4c]
  41da00:	xor    ebx,edx
  41da02:	xor    ebx,r9d
  41da05:	xor    r10d,DWORD PTR [rsp-0x40]
  41da0a:	rorx   r9d,r9d,0x2
  41da10:	rorx   ecx,ecx,0x1f
  41da16:	lea    eax,[rax+rcx*1-0x359d3e2a]
  41da1d:	mov    DWORD PTR [rsp-0x30],ecx
  41da21:	add    ebx,eax
  41da23:	rorx   eax,r8d,0x1b
  41da29:	add    ebx,eax
  41da2b:	mov    eax,DWORD PTR [rsp-0x3c]
  41da2f:	xor    eax,r10d
  41da32:	xor    eax,DWORD PTR [rsp-0x48]
  41da36:	mov    r10d,edx
  41da39:	xor    r10d,r9d
  41da3c:	mov    esi,r10d
  41da3f:	mov    r10d,r9d
  41da42:	xor    esi,r8d
  41da45:	rorx   r8d,r8d,0x2
  41da4b:	rorx   eax,eax,0x1f
  41da51:	xor    r10d,r8d
  41da54:	lea    ecx,[rdi+rax*1-0x359d3e2a]
  41da5b:	add    esi,ecx
  41da5d:	rorx   ecx,ebx,0x1b
  41da63:	add    esi,ecx
  41da65:	mov    ecx,DWORD PTR [rsp-0x44]
  41da69:	xor    ecx,r11d
  41da6c:	xor    r11d,r14d
  41da6f:	xor    ecx,r12d
  41da72:	xor    ecx,DWORD PTR [rsp-0x34]
  41da76:	rorx   edi,ecx,0x1f
  41da7c:	mov    ecx,r10d
  41da7f:	mov    r10d,DWORD PTR [rsp-0x2c]
  41da84:	lea    edx,[rdx+rdi*1-0x359d3e2a]
  41da8b:	xor    ecx,ebx
  41da8d:	mov    DWORD PTR [rsp-0x44],edi
  41da91:	rorx   ebx,ebx,0x2
  41da97:	add    ecx,edx
  41da99:	rorx   edx,esi,0x1b
  41da9f:	add    ecx,edx
  41daa1:	mov    edx,DWORD PTR [rsp-0x40]
  41daa5:	xor    edx,r10d
  41daa8:	xor    edx,ebp
  41daaa:	xor    edx,DWORD PTR [rsp-0x30]
  41daae:	rorx   edx,edx,0x1f
  41dab4:	mov    edi,edx
  41dab6:	mov    edx,r8d
  41dab9:	mov    DWORD PTR [rsp-0x40],edi
  41dabd:	lea    edi,[r9+rdi*1-0x359d3e2a]
  41dac5:	mov    r9d,DWORD PTR [rsp-0x38]
  41daca:	xor    edx,ebx
  41dacc:	xor    edx,esi
  41dace:	rorx   esi,esi,0x2
  41dad4:	xor    r9d,r11d
  41dad7:	add    edx,edi
  41dad9:	mov    r11d,ebx
  41dadc:	xor    r9d,eax
  41dadf:	rorx   edi,ecx,0x1b
  41dae5:	xor    r11d,esi
  41dae8:	rorx   r9d,r9d,0x1f
  41daee:	add    edx,edi
  41daf0:	xor    r11d,ecx
  41daf3:	lea    edi,[r8+r9*1-0x359d3e2a]
  41dafb:	mov    r8d,r10d
  41dafe:	rorx   ecx,ecx,0x2
  41db04:	mov    r10d,esi
  41db07:	add    r11d,edi
  41db0a:	rorx   edi,edx,0x1b
  41db10:	add    r11d,edi
  41db13:	xor    r8d,r15d
  41db16:	xor    r8d,DWORD PTR [rsp-0x4c]
  41db1b:	xor    r8d,DWORD PTR [rsp-0x44]
  41db20:	xor    r10d,ecx
  41db23:	xor    r14d,r13d
  41db26:	xor    r10d,edx
  41db29:	rorx   edx,edx,0x2
  41db2f:	xor    r15d,DWORD PTR [rsp-0x3c]
  41db34:	xor    r13d,r12d
  41db37:	rorx   r8d,r8d,0x1f
  41db3d:	lea    edi,[rbx+r8*1-0x359d3e2a]
  41db45:	add    r10d,edi
  41db48:	rorx   edi,r11d,0x1b
  41db4e:	add    r10d,edi
  41db51:	mov    edi,DWORD PTR [rsp-0x48]
  41db55:	xor    edi,r14d
  41db58:	xor    edi,DWORD PTR [rsp-0x40]
  41db5c:	mov    r14d,ecx
  41db5f:	xor    r14d,edx
  41db62:	mov    ebx,r14d
  41db65:	xor    ebx,r11d
  41db68:	rorx   r11d,r11d,0x2
  41db6e:	rorx   edi,edi,0x1f
  41db74:	mov    r14d,r11d
  41db77:	lea    esi,[rsi+rdi*1-0x359d3e2a]
  41db7e:	add    ebx,esi
  41db80:	rorx   esi,r10d,0x1b
  41db86:	add    ebx,esi
  41db88:	mov    esi,DWORD PTR [rsp-0x34]
  41db8c:	xor    esi,r15d
  41db8f:	mov    r15d,edx
  41db92:	xor    esi,r9d
  41db95:	xor    r15d,r11d
  41db98:	rorx   esi,esi,0x1f
  41db9e:	xor    r15d,r10d
  41dba1:	rorx   r10d,r10d,0x2
  41dba7:	lea    ecx,[rcx+rsi*1-0x359d3e2a]
  41dbae:	xor    r14d,r10d
  41dbb1:	xor    r14d,ebx
  41dbb4:	add    r15d,ecx
  41dbb7:	rorx   ecx,ebx,0x1b
  41dbbd:	rorx   ebx,ebx,0x2
  41dbc3:	add    r15d,ecx
  41dbc6:	mov    ecx,DWORD PTR [rsp-0x30]
  41dbca:	xor    ecx,r13d
  41dbcd:	mov    r13d,r10d
  41dbd0:	xor    ecx,r8d
  41dbd3:	xor    r13d,ebx
  41dbd6:	rorx   ecx,ecx,0x1f
  41dbdc:	lea    edx,[rdx+rcx*1-0x359d3e2a]
  41dbe3:	add    r14d,edx
  41dbe6:	rorx   edx,r15d,0x1b
  41dbec:	add    r14d,edx
  41dbef:	mov    edx,DWORD PTR [rsp-0x3c]
  41dbf3:	xor    edx,ebp
  41dbf5:	xor    edx,eax
  41dbf7:	xor    edx,edi
  41dbf9:	xor    r13d,r15d
  41dbfc:	xor    r12d,DWORD PTR [rsp-0x38]
  41dc01:	rorx   edx,edx,0x1f
  41dc07:	rorx   r15d,r15d,0x2
  41dc0d:	xor    ebp,DWORD PTR [rsp-0x4c]
  41dc11:	lea    r11d,[r11+rdx*1-0x359d3e2a]
  41dc19:	add    r13d,r11d
  41dc1c:	rorx   r11d,r14d,0x1b
  41dc22:	add    r13d,r11d
  41dc25:	mov    r11d,DWORD PTR [rsp-0x44]
  41dc2a:	xor    r11d,r12d
  41dc2d:	mov    r12d,ebx
  41dc30:	xor    r11d,esi
  41dc33:	xor    r12d,r15d
  41dc36:	rorx   r11d,r11d,0x1f
  41dc3c:	xor    r12d,r14d
  41dc3f:	rorx   r14d,r14d,0x2
  41dc45:	lea    r10d,[r10+r11*1-0x359d3e2a]
  41dc4d:	add    r10d,r12d
  41dc50:	rorx   r12d,r13d,0x1b
  41dc56:	add    r12d,r10d
  41dc59:	mov    r10d,DWORD PTR [rsp-0x40]
  41dc5e:	xor    r10d,ebp
  41dc61:	mov    ebp,r15d
  41dc64:	xor    r10d,ecx
  41dc67:	xor    ebp,r14d
  41dc6a:	rorx   r10d,r10d,0x1f
  41dc70:	xor    ebp,r13d
  41dc73:	rorx   r13d,r13d,0x2
  41dc79:	lea    ebx,[rbx+r10*1-0x359d3e2a]
  41dc81:	add    ebx,ebp
  41dc83:	rorx   ebp,r12d,0x1b
  41dc89:	add    ebp,ebx
  41dc8b:	mov    ebx,DWORD PTR [rsp-0x38]
  41dc8f:	xor    ebx,DWORD PTR [rsp-0x48]
  41dc93:	xor    r9d,ebx
  41dc96:	mov    ebx,r14d
  41dc99:	xor    r9d,edx
  41dc9c:	xor    ebx,r13d
  41dc9f:	rorx   r9d,r9d,0x1f
  41dca5:	xor    ebx,r12d
  41dca8:	rorx   r12d,r12d,0x2
  41dcae:	lea    r15d,[r15+r9*1-0x359d3e2a]
  41dcb6:	add    ebx,r15d
  41dcb9:	rorx   r15d,ebp,0x1b
  41dcbf:	add    ebx,r15d
  41dcc2:	mov    r15d,DWORD PTR [rsp-0x4c]
  41dcc7:	xor    r15d,DWORD PTR [rsp-0x34]
  41dccc:	xor    r8d,r15d
  41dccf:	mov    r15d,DWORD PTR [rsp-0x30]
  41dcd4:	xor    r8d,r11d
  41dcd7:	mov    r11d,r13d
  41dcda:	rorx   r8d,r8d,0x1f
  41dce0:	xor    r11d,r12d
  41dce3:	lea    r14d,[r14+r8*1-0x359d3e2a]
  41dceb:	xor    r11d,ebp
  41dcee:	rorx   ebp,ebp,0x2
  41dcf4:	add    r14d,r11d
  41dcf7:	rorx   r11d,ebx,0x1b
  41dcfd:	add    r14d,r11d
  41dd00:	mov    r11d,DWORD PTR [rsp-0x48]
  41dd05:	xor    r11d,r15d
  41dd08:	xor    edi,r11d
  41dd0b:	mov    r11d,r12d
  41dd0e:	xor    edi,r10d
  41dd11:	xor    r11d,ebp
  41dd14:	rorx   edi,edi,0x1f
  41dd1a:	mov    r10d,r11d
  41dd1d:	mov    r11d,ebp
  41dd20:	lea    r13d,[r13+rdi*1-0x359d3e2a]
  41dd28:	xor    r10d,ebx
  41dd2b:	rorx   ebx,ebx,0x2
  41dd31:	xor    r11d,ebx
  41dd34:	add    r13d,r10d
  41dd37:	rorx   r10d,r14d,0x1b
  41dd3d:	add    r13d,r10d
  41dd40:	mov    r10d,DWORD PTR [rsp-0x34]
  41dd45:	xor    r10d,eax
  41dd48:	xor    eax,DWORD PTR [rsp-0x40]
  41dd4c:	xor    esi,r10d
  41dd4f:	xor    esi,r9d
  41dd52:	rorx   esi,esi,0x1f
  41dd58:	lea    r9d,[r12+rsi*1-0x359d3e2a]
  41dd60:	mov    esi,r11d
  41dd63:	mov    r11d,DWORD PTR [rsp-0x44]
  41dd68:	xor    edx,eax
  41dd6a:	xor    esi,r14d
  41dd6d:	rorx   r14d,r14d,0x2
  41dd73:	xor    edi,edx
  41dd75:	mov    edx,DWORD PTR [rsp-0x18]
  41dd79:	add    esi,r9d
  41dd7c:	xor    r11d,r15d
  41dd7f:	mov    r15d,ebx
  41dd82:	rorx   r9d,r13d,0x1b
  41dd88:	xor    ecx,r11d
  41dd8b:	xor    r15d,r14d
  41dd8e:	rorx   edi,edi,0x1f
  41dd94:	xor    ecx,r8d
  41dd97:	add    esi,r9d
  41dd9a:	mov    r9d,r14d
  41dd9d:	rorx   ecx,ecx,0x1f
  41dda3:	add    r14d,DWORD PTR [rsp-0x20]
  41dda8:	lea    r8d,[rbp+rcx*1-0x359d3e2a]
  41ddb0:	mov    ecx,r15d
  41ddb3:	lea    r15d,[rdx+rdi*1-0x359d3e2a]
  41ddbb:	xor    ecx,r13d
  41ddbe:	rorx   r13d,r13d,0x2
  41ddc4:	xor    r9d,r13d
  41ddc7:	add    r15d,ebx
  41ddca:	add    ecx,r8d
  41ddcd:	mov    ebx,r9d
  41ddd0:	rorx   r8d,esi,0x1b
  41ddd6:	add    r13d,DWORD PTR [rsp-0xc]
  41dddb:	add    ecx,r8d
  41ddde:	xor    ebx,esi
  41dde0:	rorx   esi,esi,0x2
  41dde6:	rorx   eax,ecx,0x1b
  41ddec:	add    esi,DWORD PTR [rsp-0x10]
  41ddf0:	add    ecx,DWORD PTR [rsp-0x14]
  41ddf4:	add    ebx,r15d
  41ddf7:	add    ebx,eax
  41ddf9:	mov    rax,QWORD PTR [rsp-0x8]
  41ddfe:	mov    DWORD PTR [rax+0x14],r13d
  41de02:	mov    DWORD PTR [rax+0x18],r14d
  41de06:	mov    DWORD PTR [rax+0x8],ebx
  41de09:	mov    DWORD PTR [rax+0xc],ecx
  41de0c:	mov    DWORD PTR [rax+0x10],esi
  41de0f:	pop    rbx
  41de10:	pop    rbp
  41de11:	pop    r12
  41de13:	pop    r13
  41de15:	pop    r14
  41de17:	pop    r15
  41de19:	ret    
  41de1a:	nop    WORD PTR [rax+rax*1+0x0]
  41de20:	test   rdx,rdx
  41de23:	je     41debd <strcmp@plt+0x1a705>
  41de29:	push   r15
  41de2b:	push   r14
  41de2d:	mov    r15,rsi
  41de30:	push   r13
  41de32:	push   r12
  41de34:	mov    r13,rdx
  41de37:	push   rbp
  41de38:	push   rbx
  41de39:	mov    edx,0x40
  41de3e:	mov    r12,rdi
  41de41:	sub    rsp,0x8
  41de45:	mov    eax,DWORD PTR [rdi]
  41de47:	mov    r14d,eax
  41de4a:	and    r14d,0x3f
  41de4e:	sub    edx,r14d
  41de51:	add    eax,r13d
  41de54:	mov    ebx,edx
  41de56:	mov    DWORD PTR [rdi],eax
  41de58:	jae    41de5e <strcmp@plt+0x1a6a6>
  41de5a:	add    DWORD PTR [rdi+0x4],0x1
  41de5e:	test   r14d,r14d
  41de61:	je     41de6c <strcmp@plt+0x1a6b4>
  41de63:	cmp    r13,rbx
  41de66:	jae    41df50 <strcmp@plt+0x1a798>
  41de6c:	cmp    r13,0x3f
  41de70:	jbe    41dec0 <strcmp@plt+0x1a708>
  41de72:	mov    rbp,r13
  41de75:	mov    rbx,r15
  41de78:	nop    DWORD PTR [rax+rax*1+0x0]
  41de80:	mov    rsi,rbx
  41de83:	mov    rdi,r12
  41de86:	sub    rbp,0x40
  41de8a:	call   41cb90 <strcmp@plt+0x193d8>
  41de8f:	add    rbx,0x40
  41de93:	cmp    rbp,0x3f
  41de97:	ja     41de80 <strcmp@plt+0x1a6c8>
  41de99:	lea    rax,[r13-0x40]
  41de9d:	and    r13d,0x3f
  41dea1:	and    rax,0xffffffffffffffc0
  41dea5:	lea    r15,[r15+rax*1+0x40]
  41deaa:	test   r13,r13
  41dead:	jne    41dec0 <strcmp@plt+0x1a708>
  41deaf:	add    rsp,0x8
  41deb3:	pop    rbx
  41deb4:	pop    rbp
  41deb5:	pop    r12
  41deb7:	pop    r13
  41deb9:	pop    r14
  41debb:	pop    r15
  41debd:	repz ret 
  41debf:	nop
  41dec0:	cmp    r13d,0x8
  41dec4:	lea    rcx,[r12+r14*1+0x1c]
  41dec9:	mov    eax,r13d
  41decc:	jb     41df18 <strcmp@plt+0x1a760>
  41dece:	mov    rax,QWORD PTR [r15]
  41ded1:	mov    QWORD PTR [rcx],rax
  41ded4:	mov    eax,r13d
  41ded7:	mov    rdx,QWORD PTR [r15+rax*1-0x8]
  41dedc:	mov    QWORD PTR [rcx+rax*1-0x8],rdx
  41dee1:	lea    rdx,[rcx+0x8]
  41dee5:	and    rdx,0xfffffffffffffff8
  41dee9:	sub    rcx,rdx
  41deec:	lea    eax,[r13+rcx*1+0x0]
  41def1:	sub    r15,rcx
  41def4:	and    eax,0xfffffff8
  41def7:	cmp    eax,0x8
  41defa:	jb     41deaf <strcmp@plt+0x1a6f7>
  41defc:	and    eax,0xfffffff8
  41deff:	xor    ecx,ecx
  41df01:	mov    esi,ecx
  41df03:	add    ecx,0x8
  41df06:	mov    rdi,QWORD PTR [r15+rsi*1]
  41df0a:	cmp    ecx,eax
  41df0c:	mov    QWORD PTR [rdx+rsi*1],rdi
  41df10:	jb     41df01 <strcmp@plt+0x1a749>
  41df12:	jmp    41deaf <strcmp@plt+0x1a6f7>
  41df14:	nop    DWORD PTR [rax+0x0]
  41df18:	and    r13d,0x4
  41df1c:	jne    41dff4 <strcmp@plt+0x1a83c>
  41df22:	test   eax,eax
  41df24:	je     41deaf <strcmp@plt+0x1a6f7>
  41df26:	movzx  edx,BYTE PTR [r15]
  41df2a:	test   al,0x2
  41df2c:	mov    BYTE PTR [rcx],dl
  41df2e:	je     41deaf <strcmp@plt+0x1a6f7>
  41df34:	mov    edx,eax
  41df36:	movzx  eax,WORD PTR [r15+rdx*1-0x2]
  41df3c:	mov    WORD PTR [rcx+rdx*1-0x2],ax
  41df41:	jmp    41deaf <strcmp@plt+0x1a6f7>
  41df46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41df50:	lea    rsi,[r12+0x1c]
  41df55:	add    r14,rsi
  41df58:	cmp    edx,0x8
  41df5b:	jae    41dfb0 <strcmp@plt+0x1a7f8>
  41df5d:	test   dl,0x4
  41df60:	jne    41e009 <strcmp@plt+0x1a851>
  41df66:	test   edx,edx
  41df68:	je     41df88 <strcmp@plt+0x1a7d0>
  41df6a:	movzx  eax,BYTE PTR [r15]
  41df6e:	and    edx,0x2
  41df71:	mov    BYTE PTR [r14],al
  41df74:	je     41df88 <strcmp@plt+0x1a7d0>
  41df76:	movzx  eax,WORD PTR [r15+rbx*1-0x2]
  41df7c:	mov    WORD PTR [r14+rbx*1-0x2],ax
  41df82:	nop    WORD PTR [rax+rax*1+0x0]
  41df88:	mov    rdi,r12
  41df8b:	sub    r13,rbx
  41df8e:	add    r15,rbx
  41df91:	call   41cb90 <strcmp@plt+0x193d8>
  41df96:	xor    r14d,r14d
  41df99:	cmp    r13,0x3f
  41df9d:	ja     41de72 <strcmp@plt+0x1a6ba>
  41dfa3:	jmp    41deaa <strcmp@plt+0x1a6f2>
  41dfa8:	nop    DWORD PTR [rax+rax*1+0x0]
  41dfb0:	mov    rax,QWORD PTR [r15]
  41dfb3:	mov    r8,r15
  41dfb6:	mov    QWORD PTR [r14],rax
  41dfb9:	mov    rax,QWORD PTR [r15+rbx*1-0x8]
  41dfbe:	mov    QWORD PTR [r14+rbx*1-0x8],rax
  41dfc3:	lea    rax,[r14+0x8]
  41dfc7:	and    rax,0xfffffffffffffff8
  41dfcb:	sub    r14,rax
  41dfce:	add    edx,r14d
  41dfd1:	sub    r8,r14
  41dfd4:	and    edx,0xfffffff8
  41dfd7:	cmp    edx,0x8
  41dfda:	jb     41df88 <strcmp@plt+0x1a7d0>
  41dfdc:	and    edx,0xfffffff8
  41dfdf:	xor    ecx,ecx
  41dfe1:	mov    edi,ecx
  41dfe3:	add    ecx,0x8
  41dfe6:	mov    r9,QWORD PTR [r8+rdi*1]
  41dfea:	cmp    ecx,edx
  41dfec:	mov    QWORD PTR [rax+rdi*1],r9
  41dff0:	jb     41dfe1 <strcmp@plt+0x1a829>
  41dff2:	jmp    41df88 <strcmp@plt+0x1a7d0>
  41dff4:	mov    edx,DWORD PTR [r15]
  41dff7:	mov    DWORD PTR [rcx],edx
  41dff9:	mov    edx,eax
  41dffb:	mov    eax,DWORD PTR [r15+rdx*1-0x4]
  41e000:	mov    DWORD PTR [rcx+rdx*1-0x4],eax
  41e004:	jmp    41deaf <strcmp@plt+0x1a6f7>
  41e009:	mov    eax,DWORD PTR [r15]
  41e00c:	mov    DWORD PTR [r14],eax
  41e00f:	mov    eax,DWORD PTR [r15+rbx*1-0x4]
  41e014:	mov    DWORD PTR [r14+rbx*1-0x4],eax
  41e019:	jmp    41df88 <strcmp@plt+0x1a7d0>
  41e01e:	xchg   ax,ax
  41e020:	push   rbp
  41e021:	push   rbx
  41e022:	mov    rbp,rsi
  41e025:	mov    rbx,rdi
  41e028:	sub    rsp,0x18
  41e02c:	mov    edx,DWORD PTR [rdi]
  41e02e:	mov    rax,QWORD PTR fs:0x28
  41e037:	mov    QWORD PTR [rsp+0x8],rax
  41e03c:	xor    eax,eax
  41e03e:	mov    eax,DWORD PTR [rdi+0x4]
  41e041:	mov    ecx,edx
  41e043:	shr    ecx,0x1d
  41e046:	shl    eax,0x3
  41e049:	or     eax,ecx
  41e04b:	lea    ecx,[rdx*8+0x0]
  41e052:	mov    esi,eax
  41e054:	mov    BYTE PTR [rsp+0x3],al
  41e058:	shr    esi,0x18
  41e05b:	mov    BYTE PTR [rsp+0x7],cl
  41e05f:	mov    BYTE PTR [rsp],sil
  41e063:	mov    esi,eax
  41e065:	shr    esi,0x10
  41e068:	mov    BYTE PTR [rsp+0x1],sil
  41e06d:	mov    esi,eax
  41e06f:	mov    eax,ecx
  41e071:	shr    eax,0x18
  41e074:	shr    esi,0x8
  41e077:	mov    BYTE PTR [rsp+0x4],al
  41e07b:	mov    eax,ecx
  41e07d:	mov    BYTE PTR [rsp+0x2],sil
  41e082:	shr    eax,0x10
  41e085:	lea    rsi,[rip+0x2e6f4]        # 44c780 <strcmp@plt+0x48fc8>
  41e08c:	mov    BYTE PTR [rsp+0x5],al
  41e090:	mov    eax,ecx
  41e092:	shr    eax,0x8
  41e095:	mov    BYTE PTR [rsp+0x6],al
  41e099:	mov    eax,edx
  41e09b:	mov    edx,0x38
  41e0a0:	and    eax,0x3f
  41e0a3:	mov    ecx,edx
  41e0a5:	mov    edx,0x78
  41e0aa:	sub    ecx,eax
  41e0ac:	sub    edx,eax
  41e0ae:	cmp    eax,0x37
  41e0b1:	cmovbe rdx,rcx
  41e0b5:	call   41de20 <strcmp@plt+0x1a668>
  41e0ba:	mov    rsi,rsp
  41e0bd:	mov    edx,0x8
  41e0c2:	mov    rdi,rbx
  41e0c5:	call   41de20 <strcmp@plt+0x1a668>
  41e0ca:	movzx  eax,BYTE PTR [rbx+0xb]
  41e0ce:	mov    BYTE PTR [rbp+0x0],al
  41e0d1:	movzx  eax,WORD PTR [rbx+0xa]
  41e0d5:	mov    BYTE PTR [rbp+0x1],al
  41e0d8:	mov    eax,0x8
  41e0dd:	shrx   eax,DWORD PTR [rbx+0x8],eax
  41e0e3:	mov    BYTE PTR [rbp+0x2],al
  41e0e6:	mov    eax,DWORD PTR [rbx+0x8]
  41e0e9:	mov    BYTE PTR [rbp+0x3],al
  41e0ec:	movzx  eax,BYTE PTR [rbx+0xf]
  41e0f0:	mov    BYTE PTR [rbp+0x4],al
  41e0f3:	movzx  eax,WORD PTR [rbx+0xe]
  41e0f7:	mov    BYTE PTR [rbp+0x5],al
  41e0fa:	mov    eax,0x8
  41e0ff:	shrx   eax,DWORD PTR [rbx+0xc],eax
  41e105:	mov    BYTE PTR [rbp+0x6],al
  41e108:	mov    eax,DWORD PTR [rbx+0xc]
  41e10b:	mov    BYTE PTR [rbp+0x7],al
  41e10e:	movzx  eax,BYTE PTR [rbx+0x13]
  41e112:	mov    BYTE PTR [rbp+0x8],al
  41e115:	movzx  eax,WORD PTR [rbx+0x12]
  41e119:	mov    BYTE PTR [rbp+0x9],al
  41e11c:	mov    eax,0x8
  41e121:	shrx   eax,DWORD PTR [rbx+0x10],eax
  41e127:	mov    BYTE PTR [rbp+0xa],al
  41e12a:	mov    eax,DWORD PTR [rbx+0x10]
  41e12d:	mov    BYTE PTR [rbp+0xb],al
  41e130:	movzx  eax,BYTE PTR [rbx+0x17]
  41e134:	mov    BYTE PTR [rbp+0xc],al
  41e137:	movzx  eax,WORD PTR [rbx+0x16]
  41e13b:	mov    BYTE PTR [rbp+0xd],al
  41e13e:	mov    eax,0x8
  41e143:	shrx   eax,DWORD PTR [rbx+0x14],eax
  41e149:	mov    BYTE PTR [rbp+0xe],al
  41e14c:	mov    eax,DWORD PTR [rbx+0x14]
  41e14f:	mov    BYTE PTR [rbp+0xf],al
  41e152:	movzx  eax,BYTE PTR [rbx+0x1b]
  41e156:	mov    BYTE PTR [rbp+0x10],al
  41e159:	movzx  eax,WORD PTR [rbx+0x1a]
  41e15d:	mov    BYTE PTR [rbp+0x11],al
  41e160:	mov    eax,0x8
  41e165:	shrx   eax,DWORD PTR [rbx+0x18],eax
  41e16b:	mov    BYTE PTR [rbp+0x12],al
  41e16e:	mov    eax,DWORD PTR [rbx+0x18]
  41e171:	mov    BYTE PTR [rbp+0x13],al
  41e174:	mov    rax,QWORD PTR [rsp+0x8]
  41e179:	xor    rax,QWORD PTR fs:0x28
  41e182:	jne    41e18b <strcmp@plt+0x1a9d3>
  41e184:	add    rsp,0x18
  41e188:	pop    rbx
  41e189:	pop    rbp
  41e18a:	ret    
  41e18b:	call   403460 <__stack_chk_fail@plt>
  41e190:	push   r13
  41e192:	push   r12
  41e194:	mov    r12,rdi
  41e197:	push   rbp
  41e198:	push   rbx
  41e199:	mov    r13,rsi
  41e19c:	mov    rbp,rdx
  41e19f:	sub    rsp,0x78
  41e1a3:	mov    rdi,rsp
  41e1a6:	mov    rax,QWORD PTR fs:0x28
  41e1af:	mov    QWORD PTR [rsp+0x68],rax
  41e1b4:	xor    eax,eax
  41e1b6:	call   41caa0 <strcmp@plt+0x192e8>
  41e1bb:	mov    rdi,rsp
  41e1be:	call   41cb50 <strcmp@plt+0x19398>
  41e1c3:	mov    rdx,r13
  41e1c6:	mov    rsi,r12
  41e1c9:	mov    rdi,rsp
  41e1cc:	call   41de20 <strcmp@plt+0x1a668>
  41e1d1:	mov    rsi,rbp
  41e1d4:	mov    rdi,rsp
  41e1d7:	call   41e020 <strcmp@plt+0x1a868>
  41e1dc:	mov    rdi,rsp
  41e1df:	call   41cad0 <strcmp@plt+0x19318>
  41e1e4:	mov    rax,QWORD PTR [rsp+0x68]
  41e1e9:	xor    rax,QWORD PTR fs:0x28
  41e1f2:	jne    41e1ff <strcmp@plt+0x1aa47>
  41e1f4:	add    rsp,0x78
  41e1f8:	pop    rbx
  41e1f9:	pop    rbp
  41e1fa:	pop    r12
  41e1fc:	pop    r13
  41e1fe:	ret    
  41e1ff:	call   403460 <__stack_chk_fail@plt>
  41e204:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e20e:	xchg   ax,ax
  41e210:	mov    QWORD PTR [rdi],0x0
  41e217:	mov    QWORD PTR [rdi+0x64],0x0
  41e21f:	mov    rcx,rdi
  41e222:	lea    rdi,[rdi+0x8]
  41e226:	xor    eax,eax
  41e228:	and    rdi,0xfffffffffffffff8
  41e22c:	sub    rcx,rdi
  41e22f:	add    ecx,0x6c
  41e232:	shr    ecx,0x3
  41e235:	rep stos QWORD PTR es:[rdi],rax
  41e238:	ret    
  41e239:	nop    DWORD PTR [rax+0x0]
  41e240:	test   rdi,rdi
  41e243:	lea    rax,[rdi+0x6c]
  41e247:	je     41e25c <strcmp@plt+0x1aaa4>
  41e249:	nop    DWORD PTR [rax+0x0]
  41e250:	mov    BYTE PTR [rdi],0x0
  41e253:	add    rdi,0x1
  41e257:	cmp    rax,rdi
  41e25a:	jne    41e250 <strcmp@plt+0x1aa98>
  41e25c:	repz ret 
  41e25e:	xchg   ax,ax
  41e260:	mov    rax,QWORD PTR [rsi]
  41e263:	mov    QWORD PTR [rdi],rax
  41e266:	mov    rax,QWORD PTR [rsi+0x8]
  41e26a:	mov    QWORD PTR [rdi+0x8],rax
  41e26e:	mov    rax,QWORD PTR [rsi+0x10]
  41e272:	mov    QWORD PTR [rdi+0x10],rax
  41e276:	mov    rax,QWORD PTR [rsi+0x18]
  41e27a:	mov    QWORD PTR [rdi+0x18],rax
  41e27e:	mov    rax,QWORD PTR [rsi+0x20]
  41e282:	mov    QWORD PTR [rdi+0x20],rax
  41e286:	mov    rax,QWORD PTR [rsi+0x28]
  41e28a:	mov    QWORD PTR [rdi+0x28],rax
  41e28e:	mov    rax,QWORD PTR [rsi+0x30]
  41e292:	mov    QWORD PTR [rdi+0x30],rax
  41e296:	mov    rax,QWORD PTR [rsi+0x38]
  41e29a:	mov    QWORD PTR [rdi+0x38],rax
  41e29e:	mov    rax,QWORD PTR [rsi+0x40]
  41e2a2:	mov    QWORD PTR [rdi+0x40],rax
  41e2a6:	mov    rax,QWORD PTR [rsi+0x48]
  41e2aa:	mov    QWORD PTR [rdi+0x48],rax
  41e2ae:	mov    rax,QWORD PTR [rsi+0x50]
  41e2b2:	mov    QWORD PTR [rdi+0x50],rax
  41e2b6:	mov    rax,QWORD PTR [rsi+0x58]
  41e2ba:	mov    QWORD PTR [rdi+0x58],rax
  41e2be:	mov    rax,QWORD PTR [rsi+0x60]
  41e2c2:	mov    QWORD PTR [rdi+0x60],rax
  41e2c6:	mov    eax,DWORD PTR [rsi+0x68]
  41e2c9:	mov    DWORD PTR [rdi+0x68],eax
  41e2cc:	ret    
  41e2cd:	nop    DWORD PTR [rax]
  41e2d0:	test   esi,esi
  41e2d2:	mov    DWORD PTR [rdi],0x0
  41e2d8:	mov    DWORD PTR [rdi+0x4],0x0
  41e2df:	je     41e320 <strcmp@plt+0x1ab68>
  41e2e1:	mov    DWORD PTR [rdi+0x8],0xc1059ed8
  41e2e8:	mov    DWORD PTR [rdi+0xc],0x367cd507
  41e2ef:	mov    DWORD PTR [rdi+0x10],0x3070dd17
  41e2f6:	mov    DWORD PTR [rdi+0x14],0xf70e5939
  41e2fd:	mov    DWORD PTR [rdi+0x18],0xffc00b31
  41e304:	mov    DWORD PTR [rdi+0x1c],0x68581511
  41e30b:	mov    DWORD PTR [rdi+0x20],0x64f98fa7
  41e312:	mov    DWORD PTR [rdi+0x24],0xbefa4fa4
  41e319:	mov    DWORD PTR [rdi+0x68],esi
  41e31c:	ret    
  41e31d:	nop    DWORD PTR [rax]
  41e320:	mov    DWORD PTR [rdi+0x8],0x6a09e667
  41e327:	mov    DWORD PTR [rdi+0xc],0xbb67ae85
  41e32e:	mov    DWORD PTR [rdi+0x10],0x3c6ef372
  41e335:	mov    DWORD PTR [rdi+0x14],0xa54ff53a
  41e33c:	mov    DWORD PTR [rdi+0x18],0x510e527f
  41e343:	mov    DWORD PTR [rdi+0x1c],0x9b05688c
  41e34a:	mov    DWORD PTR [rdi+0x20],0x1f83d9ab
  41e351:	mov    DWORD PTR [rdi+0x24],0x5be0cd19
  41e358:	mov    DWORD PTR [rdi+0x68],esi
  41e35b:	ret    
  41e35c:	nop    DWORD PTR [rax+0x0]
  41e360:	push   r15
  41e362:	push   r14
  41e364:	mov    rcx,rdi
  41e367:	push   r13
  41e369:	push   r12
  41e36b:	push   rbp
  41e36c:	push   rbx
  41e36d:	sub    rsp,0x188
  41e374:	mov    QWORD PTR [rsp+0x40],rdi
  41e379:	lea    rdi,[rsp+0x50]
  41e37e:	mov    rax,QWORD PTR fs:0x28
  41e387:	mov    QWORD PTR [rsp+0x178],rax
  41e38f:	xor    eax,eax
  41e391:	mov    QWORD PTR [rsp+0x48],rdi
  41e396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e3a0:	mov    edx,DWORD PTR [rcx+rax*1+0x8]
  41e3a4:	mov    DWORD PTR [rdi+rax*1],edx
  41e3a7:	add    rax,0x4
  41e3ab:	cmp    rax,0x20
  41e3af:	jne    41e3a0 <strcmp@plt+0x1abe8>
  41e3b1:	lea    rax,[rsp+0x70]
  41e3b6:	lea    rdi,[rsp+0xb0]
  41e3be:	mov    QWORD PTR [rsp+0x20],rax
  41e3c3:	mov    r8,rax
  41e3c6:	mov    rcx,rax
  41e3c9:	nop    DWORD PTR [rax+0x0]
  41e3d0:	movzx  eax,BYTE PTR [rsi]
  41e3d3:	movzx  edx,BYTE PTR [rsi+0x1]
  41e3d7:	add    rcx,0x4
  41e3db:	add    rsi,0x4
  41e3df:	shl    edx,0x10
  41e3e2:	shl    eax,0x18
  41e3e5:	or     eax,edx
  41e3e7:	movzx  edx,BYTE PTR [rsi-0x1]
  41e3eb:	or     eax,edx
  41e3ed:	movzx  edx,BYTE PTR [rsi-0x2]
  41e3f1:	shl    edx,0x8
  41e3f4:	or     eax,edx
  41e3f6:	mov    DWORD PTR [rcx-0x4],eax
  41e3f9:	cmp    rdi,rcx
  41e3fc:	jne    41e3d0 <strcmp@plt+0x1ac18>
  41e3fe:	mov    eax,DWORD PTR [rsp+0x6c]
  41e402:	lea    rbx,[rip+0x2e3f7]        # 44c800 <strcmp@plt+0x49048>
  41e409:	mov    r11d,DWORD PTR [rsp+0x68]
  41e40e:	mov    r14d,DWORD PTR [rsp+0x64]
  41e413:	mov    r13d,DWORD PTR [rsp+0x50]
  41e418:	mov    ecx,0x71374491
  41e41d:	mov    r15d,DWORD PTR [rsp+0x54]
  41e422:	mov    r12d,DWORD PTR [rsp+0x58]
  41e427:	mov    rsi,rbx
  41e42a:	mov    edi,eax
  41e42c:	mov    ebp,DWORD PTR [rsp+0x5c]
  41e430:	mov    eax,DWORD PTR [rsp+0x60]
  41e434:	mov    rdx,QWORD PTR [rsp+0x20]
  41e439:	mov    QWORD PTR [rsp+0x8],rbx
  41e43e:	mov    r10d,0x428a2f98
  41e444:	mov    QWORD PTR [rsp+0x28],r8
  41e449:	mov    DWORD PTR [rsp+0x30],0xab1c5ed5
  41e451:	mov    ebx,0xb5c0fbcf
  41e456:	mov    DWORD PTR [rsp+0x1c],0x923f82a4
  41e45e:	mov    DWORD PTR [rsp+0x18],0x59f111f1
  41e466:	mov    r8,rsi
  41e469:	mov    DWORD PTR [rsp+0x14],0x3956c25b
  41e471:	mov    DWORD PTR [rsp+0x10],0xe9b5dba5
  41e479:	rorx   r9d,eax,0x6
  41e47f:	rorx   esi,eax,0xb
  41e485:	xor    esi,r9d
  41e488:	rorx   r9d,eax,0x19
  41e48e:	xor    esi,r9d
  41e491:	mov    r9d,r11d
  41e494:	xor    r9d,r14d
  41e497:	and    r9d,eax
  41e49a:	xor    r9d,r11d
  41e49d:	add    r11d,DWORD PTR [rdx+0x4]
  41e4a1:	add    esi,r9d
  41e4a4:	add    esi,DWORD PTR [rdx]
  41e4a6:	mov    r9d,r13d
  41e4a9:	and    r9d,r15d
  41e4ac:	add    edi,esi
  41e4ae:	rorx   esi,r13d,0xd
  41e4b4:	add    r10d,edi
  41e4b7:	rorx   edi,r13d,0x2
  41e4bd:	xor    esi,edi
  41e4bf:	rorx   edi,r13d,0x16
  41e4c5:	add    ebp,r10d
  41e4c8:	xor    esi,edi
  41e4ca:	mov    edi,r13d
  41e4cd:	or     edi,r15d
  41e4d0:	and    edi,r12d
  41e4d3:	or     edi,r9d
  41e4d6:	rorx   r9d,ebp,0x6
  41e4dc:	add    edi,esi
  41e4de:	mov    esi,eax
  41e4e0:	xor    esi,r14d
  41e4e3:	add    edi,r10d
  41e4e6:	and    esi,ebp
  41e4e8:	mov    r10d,edi
  41e4eb:	xor    esi,r14d
  41e4ee:	add    r11d,esi
  41e4f1:	rorx   esi,ebp,0xb
  41e4f7:	xor    esi,r9d
  41e4fa:	rorx   r9d,ebp,0x19
  41e500:	xor    esi,r9d
  41e503:	rorx   r9d,edi,0xd
  41e509:	add    esi,r11d
  41e50c:	add    esi,ecx
  41e50e:	rorx   ecx,edi,0x2
  41e514:	xor    r9d,ecx
  41e517:	rorx   ecx,edi,0x16
  41e51d:	add    r12d,esi
  41e520:	xor    r9d,ecx
  41e523:	mov    ecx,edi
  41e525:	or     ecx,r13d
  41e528:	and    ecx,r15d
  41e52b:	and    r10d,r13d
  41e52e:	add    r14d,DWORD PTR [rdx+0x8]
  41e532:	or     ecx,r10d
  41e535:	mov    r10d,edi
  41e538:	add    ecx,r9d
  41e53b:	mov    r9d,ebp
  41e53e:	xor    r9d,eax
  41e541:	add    ecx,esi
  41e543:	rorx   esi,r12d,0xb
  41e549:	and    r9d,r12d
  41e54c:	and    r10d,ecx
  41e54f:	mov    r11d,ecx
  41e552:	xor    r9d,eax
  41e555:	add    eax,DWORD PTR [rdx+0xc]
  41e558:	add    r14d,r9d
  41e55b:	rorx   r9d,r12d,0x6
  41e561:	xor    esi,r9d
  41e564:	rorx   r9d,r12d,0x19
  41e56a:	xor    esi,r9d
  41e56d:	rorx   r9d,ecx,0xd
  41e573:	add    esi,r14d
  41e576:	add    ebx,esi
  41e578:	rorx   esi,ecx,0x2
  41e57e:	xor    r9d,esi
  41e581:	rorx   esi,ecx,0x16
  41e587:	add    r15d,ebx
  41e58a:	xor    r9d,esi
  41e58d:	mov    esi,edi
  41e58f:	or     esi,ecx
  41e591:	and    esi,r13d
  41e594:	or     esi,r10d
  41e597:	mov    r10d,ebp
  41e59a:	xor    r10d,r12d
  41e59d:	add    esi,r9d
  41e5a0:	rorx   r9d,r15d,0x6
  41e5a6:	and    r10d,r15d
  41e5a9:	add    esi,ebx
  41e5ab:	lea    rbx,[rip+0x2e28e]        # 44c840 <strcmp@plt+0x49088>
  41e5b2:	xor    r10d,ebp
  41e5b5:	add    r10d,eax
  41e5b8:	rorx   eax,r15d,0xb
  41e5be:	xor    eax,r9d
  41e5c1:	rorx   r9d,r15d,0x19
  41e5c7:	xor    eax,r9d
  41e5ca:	mov    r9d,DWORD PTR [rsp+0x10]
  41e5cf:	add    eax,r10d
  41e5d2:	rorx   r10d,esi,0xd
  41e5d8:	add    r9d,eax
  41e5db:	rorx   eax,esi,0x2
  41e5e1:	add    r13d,r9d
  41e5e4:	xor    r10d,eax
  41e5e7:	rorx   eax,esi,0x16
  41e5ed:	xor    r10d,eax
  41e5f0:	mov    eax,ecx
  41e5f2:	and    r11d,esi
  41e5f5:	or     eax,esi
  41e5f7:	add    ebp,DWORD PTR [rdx+0x10]
  41e5fa:	and    eax,edi
  41e5fc:	or     eax,r11d
  41e5ff:	mov    r11d,esi
  41e602:	add    eax,r10d
  41e605:	mov    r10d,r12d
  41e608:	xor    r10d,r15d
  41e60b:	add    eax,r9d
  41e60e:	rorx   r9d,r13d,0xb
  41e614:	and    r10d,r13d
  41e617:	and    r11d,eax
  41e61a:	xor    r10d,r12d
  41e61d:	add    r12d,DWORD PTR [rdx+0x14]
  41e621:	add    r10d,ebp
  41e624:	rorx   ebp,r13d,0x6
  41e62a:	xor    r9d,ebp
  41e62d:	rorx   ebp,r13d,0x19
  41e633:	xor    r9d,ebp
  41e636:	rorx   ebp,eax,0x2
  41e63c:	add    r9d,r10d
  41e63f:	rorx   r10d,eax,0xd
  41e645:	add    r9d,DWORD PTR [rsp+0x14]
  41e64a:	xor    r10d,ebp
  41e64d:	rorx   ebp,eax,0x16
  41e653:	xor    r10d,ebp
  41e656:	mov    ebp,esi
  41e658:	or     ebp,eax
  41e65a:	and    ebp,ecx
  41e65c:	add    edi,r9d
  41e65f:	or     ebp,r11d
  41e662:	add    ebp,r10d
  41e665:	mov    r10d,r15d
  41e668:	xor    r10d,r13d
  41e66b:	add    ebp,r9d
  41e66e:	rorx   r9d,edi,0xb
  41e674:	and    r10d,edi
  41e677:	xor    r10d,r15d
  41e67a:	add    r10d,r12d
  41e67d:	rorx   r12d,edi,0x6
  41e683:	xor    r9d,r12d
  41e686:	rorx   r12d,edi,0x19
  41e68c:	xor    r9d,r12d
  41e68f:	add    r15d,DWORD PTR [rdx+0x18]
  41e693:	lea    r12d,[r10+r9*1]
  41e697:	mov    r9d,DWORD PTR [rsp+0x18]
  41e69c:	mov    r10d,eax
  41e69f:	and    r10d,ebp
  41e6a2:	add    r9d,r12d
  41e6a5:	rorx   r12d,ebp,0xd
  41e6ab:	lea    r11d,[rcx+r9*1]
  41e6af:	rorx   ecx,ebp,0x2
  41e6b5:	xor    ecx,r12d
  41e6b8:	rorx   r12d,ebp,0x16
  41e6be:	xor    ecx,r12d
  41e6c1:	mov    r12d,eax
  41e6c4:	or     r12d,ebp
  41e6c7:	and    r12d,esi
  41e6ca:	or     r12d,r10d
  41e6cd:	add    r12d,ecx
  41e6d0:	mov    ecx,r13d
  41e6d3:	xor    ecx,edi
  41e6d5:	add    r12d,r9d
  41e6d8:	rorx   r9d,r11d,0xb
  41e6de:	and    ecx,r11d
  41e6e1:	xor    ecx,r13d
  41e6e4:	add    r13d,DWORD PTR [rdx+0x1c]
  41e6e8:	add    r15d,ecx
  41e6eb:	rorx   ecx,r11d,0x6
  41e6f1:	xor    ecx,r9d
  41e6f4:	rorx   r9d,r11d,0x19
  41e6fa:	xor    ecx,r9d
  41e6fd:	mov    r9d,ebp
  41e700:	add    r15d,ecx
  41e703:	mov    ecx,DWORD PTR [rsp+0x1c]
  41e707:	and    r9d,r12d
  41e70a:	add    ecx,r15d
  41e70d:	rorx   r15d,r12d,0xd
  41e713:	lea    r14d,[rsi+rcx*1]
  41e717:	rorx   esi,r12d,0x2
  41e71d:	xor    esi,r15d
  41e720:	rorx   r15d,r12d,0x16
  41e726:	xor    esi,r15d
  41e729:	mov    r15d,ebp
  41e72c:	or     r15d,r12d
  41e72f:	and    r15d,eax
  41e732:	or     r15d,r9d
  41e735:	mov    r9d,r12d
  41e738:	add    r15d,esi
  41e73b:	rorx   esi,r14d,0xb
  41e741:	add    r15d,ecx
  41e744:	mov    ecx,edi
  41e746:	xor    ecx,r11d
  41e749:	and    ecx,r14d
  41e74c:	xor    ecx,edi
  41e74e:	add    r13d,ecx
  41e751:	rorx   ecx,r14d,0x6
  41e757:	xor    ecx,esi
  41e759:	rorx   esi,r14d,0x19
  41e75f:	and    r9d,r15d
  41e762:	xor    ecx,esi
  41e764:	rorx   esi,r15d,0xd
  41e76a:	add    r8,0x20
  41e76e:	add    ecx,r13d
  41e771:	rorx   r13d,r15d,0x2
  41e777:	add    ecx,DWORD PTR [rsp+0x30]
  41e77b:	xor    r13d,esi
  41e77e:	rorx   esi,r15d,0x16
  41e784:	add    rdx,0x20
  41e788:	xor    r13d,esi
  41e78b:	mov    esi,r12d
  41e78e:	or     esi,r15d
  41e791:	and    esi,ebp
  41e793:	add    eax,ecx
  41e795:	or     esi,r9d
  41e798:	add    r13d,esi
  41e79b:	add    r13d,ecx
  41e79e:	cmp    rbx,r8
  41e7a1:	jne    41ee10 <strcmp@plt+0x1b658>
  41e7a7:	mov    r10d,edi
  41e7aa:	mov    DWORD PTR [rsp+0x6c],edi
  41e7ae:	mov    rdi,QWORD PTR [rsp+0x20]
  41e7b3:	mov    r8,QWORD PTR [rsp+0x28]
  41e7b8:	mov    DWORD PTR [rsp+0x5c],ebp
  41e7bc:	mov    DWORD PTR [rsp+0x68],r11d
  41e7c1:	mov    DWORD PTR [rsp+0x58],r12d
  41e7c6:	add    rdi,0xc0
  41e7cd:	mov    DWORD PTR [rsp+0x64],r14d
  41e7d2:	mov    DWORD PTR [rsp+0x54],r15d
  41e7d7:	mov    QWORD PTR [rsp+0x38],rdi
  41e7dc:	mov    edi,0xe49b69c1
  41e7e1:	mov    DWORD PTR [rsp+0x60],eax
  41e7e5:	mov    DWORD PTR [rsp+0x50],r13d
  41e7ea:	mov    DWORD PTR [rsp+0x34],0x76f988da
  41e7f2:	mov    r9d,edi
  41e7f5:	mov    DWORD PTR [rsp+0x28],0x5cb0a9dc
  41e7fd:	mov    DWORD PTR [rsp+0x20],0x4a7484aa
  41e805:	mov    DWORD PTR [rsp+0x30],0x2de92c6f
  41e80d:	mov    DWORD PTR [rsp+0x1c],0x240ca1cc
  41e815:	mov    DWORD PTR [rsp+0x18],0xfc19dc6
  41e81d:	mov    DWORD PTR [rsp+0x14],0xefbe4786
  41e825:	jmp    41e86a <strcmp@plt+0x1b0b2>
  41e827:	nop    WORD PTR [rax+rax*1+0x0]
  41e830:	mov    rdi,QWORD PTR [rsp+0x8]
  41e835:	mov    ebx,DWORD PTR [rdi+0x44]
  41e838:	mov    r9d,DWORD PTR [rdi+0x40]
  41e83c:	mov    DWORD PTR [rsp+0x14],ebx
  41e840:	mov    ebx,DWORD PTR [rdi+0x48]
  41e843:	mov    DWORD PTR [rsp+0x18],ebx
  41e847:	mov    ebx,DWORD PTR [rdi+0x4c]
  41e84a:	mov    DWORD PTR [rsp+0x1c],ebx
  41e84e:	mov    ebx,DWORD PTR [rdi+0x50]
  41e851:	mov    DWORD PTR [rsp+0x30],ebx
  41e855:	mov    ebx,DWORD PTR [rdi+0x54]
  41e858:	mov    DWORD PTR [rsp+0x20],ebx
  41e85c:	mov    ebx,DWORD PTR [rdi+0x58]
  41e85f:	mov    edi,DWORD PTR [rdi+0x5c]
  41e862:	mov    DWORD PTR [rsp+0x28],ebx
  41e866:	mov    DWORD PTR [rsp+0x34],edi
  41e86a:	rorx   ecx,DWORD PTR [r8+0x38],0x13
  41e871:	rorx   edi,DWORD PTR [r8+0x38],0x11
  41e878:	mov    ebx,0xa
  41e87d:	mov    esi,DWORD PTR [r8]
  41e880:	add    esi,DWORD PTR [r8+0x24]
  41e884:	mov    edx,DWORD PTR [r8+0x4]
  41e888:	xor    edi,ecx
  41e88a:	shrx   ecx,DWORD PTR [r8+0x38],ebx
  41e890:	xor    ecx,edi
  41e892:	rorx   edi,edx,0x12
  41e898:	add    ecx,esi
  41e89a:	rorx   esi,edx,0x7
  41e8a0:	xor    edi,esi
  41e8a2:	mov    esi,edx
  41e8a4:	add    edx,DWORD PTR [r8+0x28]
  41e8a8:	shr    esi,0x3
  41e8ab:	xor    edi,esi
  41e8ad:	mov    esi,r11d
  41e8b0:	add    edi,ecx
  41e8b2:	xor    esi,r14d
  41e8b5:	rorx   ecx,eax,0xb
  41e8bb:	mov    ebx,edi
  41e8bd:	mov    DWORD PTR [r8+0x40],edi
  41e8c1:	rorx   edi,eax,0x6
  41e8c7:	xor    ecx,edi
  41e8c9:	and    esi,eax
  41e8cb:	rorx   edi,eax,0x19
  41e8d1:	xor    esi,r11d
  41e8d4:	xor    ecx,edi
  41e8d6:	mov    DWORD PTR [rsp+0x10],ebx
  41e8da:	add    ecx,esi
  41e8dc:	add    ecx,ebx
  41e8de:	mov    ebx,r13d
  41e8e1:	add    r10d,ecx
  41e8e4:	rorx   ecx,r13d,0xd
  41e8ea:	and    ebx,r15d
  41e8ed:	lea    edi,[r10+r9*1]
  41e8f1:	rorx   r10d,r13d,0x2
  41e8f7:	mov    r9d,DWORD PTR [r8+0x8]
  41e8fb:	xor    ecx,r10d
  41e8fe:	rorx   r10d,r13d,0x16
  41e904:	xor    ecx,r10d
  41e907:	mov    r10d,r13d
  41e90a:	add    ebp,edi
  41e90c:	or     r10d,r15d
  41e90f:	and    r10d,r12d
  41e912:	or     r10d,ebx
  41e915:	rorx   ebx,DWORD PTR [r8+0x3c],0x11
  41e91c:	add    r10d,ecx
  41e91f:	rorx   ecx,DWORD PTR [r8+0x3c],0x13
  41e926:	add    r10d,edi
  41e929:	xor    ecx,ebx
  41e92b:	mov    ebx,0xa
  41e930:	shrx   ebx,DWORD PTR [r8+0x3c],ebx
  41e936:	xor    ebx,ecx
  41e938:	rorx   ecx,r9d,0x7
  41e93e:	add    edx,ebx
  41e940:	rorx   ebx,r9d,0x12
  41e946:	xor    ebx,ecx
  41e948:	mov    ecx,r9d
  41e94b:	shr    ecx,0x3
  41e94e:	xor    ebx,ecx
  41e950:	mov    ecx,r10d
  41e953:	add    ebx,edx
  41e955:	mov    edx,eax
  41e957:	or     ecx,r13d
  41e95a:	xor    edx,r14d
  41e95d:	add    r9d,DWORD PTR [r8+0x2c]
  41e961:	mov    DWORD PTR [r8+0x44],ebx
  41e965:	mov    edi,edx
  41e967:	and    edi,ebp
  41e969:	mov    edx,edi
  41e96b:	lea    edi,[rbx+r11*1]
  41e96f:	rorx   r11d,ebp,0xb
  41e975:	xor    edx,r14d
  41e978:	add    edi,edx
  41e97a:	rorx   edx,ebp,0x6
  41e980:	xor    r11d,edx
  41e983:	rorx   edx,ebp,0x19
  41e989:	xor    r11d,edx
  41e98c:	rorx   edx,r10d,0xd
  41e992:	add    r11d,edi
  41e995:	rorx   edi,r10d,0x2
  41e99b:	add    r11d,DWORD PTR [rsp+0x14]
  41e9a0:	xor    edx,edi
  41e9a2:	rorx   edi,r10d,0x16
  41e9a8:	xor    edx,edi
  41e9aa:	mov    edi,ecx
  41e9ac:	mov    ecx,r10d
  41e9af:	and    ecx,r13d
  41e9b2:	and    edi,r15d
  41e9b5:	or     edi,ecx
  41e9b7:	add    r12d,r11d
  41e9ba:	add    edi,edx
  41e9bc:	mov    edx,DWORD PTR [r8+0xc]
  41e9c0:	add    edi,r11d
  41e9c3:	mov    r11d,DWORD PTR [rsp+0x10]
  41e9c8:	rorx   ecx,r11d,0x11
  41e9ce:	rorx   esi,r11d,0x13
  41e9d4:	xor    esi,ecx
  41e9d6:	mov    ecx,r11d
  41e9d9:	mov    r11d,edx
  41e9dc:	shr    ecx,0xa
  41e9df:	shr    r11d,0x3
  41e9e3:	xor    ecx,esi
  41e9e5:	rorx   esi,edx,0x7
  41e9eb:	add    r9d,ecx
  41e9ee:	rorx   ecx,edx,0x12
  41e9f4:	xor    ecx,esi
  41e9f6:	xor    ecx,r11d
  41e9f9:	mov    r11d,r10d
  41e9fc:	add    ecx,r9d
  41e9ff:	mov    r9d,ebp
  41ea02:	xor    r9d,eax
  41ea05:	mov    DWORD PTR [r8+0x48],ecx
  41ea09:	and    r9d,r12d
  41ea0c:	xor    r9d,eax
  41ea0f:	mov    esi,r9d
  41ea12:	lea    r9d,[rcx+r14*1]
  41ea16:	rorx   r14d,r12d,0xb
  41ea1c:	add    r9d,esi
  41ea1f:	rorx   esi,r12d,0x6
  41ea25:	xor    r14d,esi
  41ea28:	rorx   esi,r12d,0x19
  41ea2e:	xor    r14d,esi
  41ea31:	rorx   esi,edi,0xd
  41ea37:	and    r11d,edi
  41ea3a:	add    r14d,r9d
  41ea3d:	rorx   r9d,edi,0x2
  41ea43:	add    r14d,DWORD PTR [rsp+0x18]
  41ea48:	xor    esi,r9d
  41ea4b:	rorx   r9d,edi,0x16
  41ea51:	add    edx,DWORD PTR [r8+0x30]
  41ea55:	xor    esi,r9d
  41ea58:	mov    r9d,r10d
  41ea5b:	or     r9d,edi
  41ea5e:	and    r9d,r13d
  41ea61:	add    r15d,r14d
  41ea64:	or     r9d,r11d
  41ea67:	mov    r11d,DWORD PTR [r8+0x10]
  41ea6b:	add    r9d,esi
  41ea6e:	rorx   esi,ebx,0x13
  41ea74:	add    r9d,r14d
  41ea77:	rorx   r14d,ebx,0x11
  41ea7d:	shr    ebx,0xa
  41ea80:	xor    esi,r14d
  41ea83:	mov    r14d,edi
  41ea86:	xor    esi,ebx
  41ea88:	rorx   ebx,r11d,0x7
  41ea8e:	add    edx,esi
  41ea90:	rorx   esi,r11d,0x12
  41ea96:	xor    esi,ebx
  41ea98:	mov    ebx,r11d
  41ea9b:	shr    ebx,0x3
  41ea9e:	xor    esi,ebx
  41eaa0:	rorx   ebx,r15d,0x6
  41eaa6:	add    esi,edx
  41eaa8:	rorx   edx,r15d,0xb
  41eaae:	xor    edx,ebx
  41eab0:	rorx   ebx,r15d,0x19
  41eab6:	add    eax,esi
  41eab8:	xor    edx,ebx
  41eaba:	mov    ebx,ebp
  41eabc:	mov    DWORD PTR [r8+0x4c],esi
  41eac0:	xor    ebx,r12d
  41eac3:	and    ebx,r15d
  41eac6:	xor    ebx,ebp
  41eac8:	add    eax,ebx
  41eaca:	rorx   ebx,r9d,0xd
  41ead0:	add    eax,edx
  41ead2:	mov    edx,DWORD PTR [rsp+0x1c]
  41ead6:	add    edx,eax
  41ead8:	rorx   eax,r9d,0x2
  41eade:	xor    ebx,eax
  41eae0:	rorx   eax,r9d,0x16
  41eae6:	add    r13d,edx
  41eae9:	xor    ebx,eax
  41eaeb:	mov    eax,edi
  41eaed:	and    r14d,r9d
  41eaf0:	or     eax,r9d
  41eaf3:	add    r11d,DWORD PTR [r8+0x34]
  41eaf7:	and    eax,r10d
  41eafa:	or     eax,r14d
  41eafd:	rorx   r14d,ecx,0x11
  41eb03:	add    eax,ebx
  41eb05:	mov    ebx,DWORD PTR [r8+0x14]
  41eb09:	add    eax,edx
  41eb0b:	rorx   edx,ecx,0x13
  41eb11:	shr    ecx,0xa
  41eb14:	xor    edx,r14d
  41eb17:	mov    r14d,r9d
  41eb1a:	xor    edx,ecx
  41eb1c:	rorx   ecx,ebx,0x7
  41eb22:	and    r14d,eax
  41eb25:	add    r11d,edx
  41eb28:	rorx   edx,ebx,0x12
  41eb2e:	xor    edx,ecx
  41eb30:	mov    ecx,ebx
  41eb32:	shr    ecx,0x3
  41eb35:	xor    edx,ecx
  41eb37:	mov    ecx,r12d
  41eb3a:	xor    ecx,r15d
  41eb3d:	add    edx,r11d
  41eb40:	rorx   r11d,r13d,0x6
  41eb46:	and    ecx,r13d
  41eb49:	add    ebp,edx
  41eb4b:	mov    DWORD PTR [r8+0x50],edx
  41eb4f:	xor    ecx,r12d
  41eb52:	add    ebp,ecx
  41eb54:	rorx   ecx,r13d,0xb
  41eb5a:	xor    ecx,r11d
  41eb5d:	rorx   r11d,r13d,0x19
  41eb63:	xor    ecx,r11d
  41eb66:	rorx   r11d,eax,0xd
  41eb6c:	add    ecx,ebp
  41eb6e:	rorx   ebp,eax,0x2
  41eb74:	add    ecx,DWORD PTR [rsp+0x30]
  41eb78:	xor    r11d,ebp
  41eb7b:	rorx   ebp,eax,0x16
  41eb81:	xor    r11d,ebp
  41eb84:	mov    ebp,r9d
  41eb87:	or     ebp,eax
  41eb89:	and    ebp,edi
  41eb8b:	add    r10d,ecx
  41eb8e:	or     ebp,r14d
  41eb91:	rorx   r14d,esi,0x11
  41eb97:	add    ebp,r11d
  41eb9a:	add    ebx,DWORD PTR [r8+0x38]
  41eb9e:	rorx   r11d,esi,0x13
  41eba4:	add    ebp,ecx
  41eba6:	xor    r11d,r14d
  41eba9:	mov    ecx,DWORD PTR [r8+0x18]
  41ebad:	mov    r14d,esi
  41ebb0:	shr    r14d,0xa
  41ebb4:	xor    r11d,r14d
  41ebb7:	mov    r14d,ebx
  41ebba:	rorx   esi,ecx,0x12
  41ebc0:	add    r14d,r11d
  41ebc3:	rorx   r11d,ecx,0x7
  41ebc9:	mov    ebx,r15d
  41ebcc:	xor    esi,r11d
  41ebcf:	mov    r11d,ecx
  41ebd2:	xor    ebx,r13d
  41ebd5:	shr    r11d,0x3
  41ebd9:	and    ebx,r10d
  41ebdc:	xor    esi,r11d
  41ebdf:	xor    ebx,r15d
  41ebe2:	rorx   r11d,r10d,0x6
  41ebe8:	add    esi,r14d
  41ebeb:	mov    r14d,eax
  41ebee:	add    r12d,esi
  41ebf1:	and    r14d,ebp
  41ebf4:	mov    DWORD PTR [r8+0x54],esi
  41ebf8:	add    r12d,ebx
  41ebfb:	rorx   ebx,r10d,0xb
  41ec01:	xor    ebx,r11d
  41ec04:	rorx   r11d,r10d,0x19
  41ec0a:	xor    ebx,r11d
  41ec0d:	add    ebx,r12d
  41ec10:	add    ebx,DWORD PTR [rsp+0x20]
  41ec14:	rorx   r12d,ebp,0x2
  41ec1a:	lea    r11d,[rdi+rbx*1]
  41ec1e:	rorx   edi,ebp,0xd
  41ec24:	xor    edi,r12d
  41ec27:	rorx   r12d,ebp,0x16
  41ec2d:	xor    edi,r12d
  41ec30:	mov    r12d,eax
  41ec33:	or     r12d,ebp
  41ec36:	and    r12d,r9d
  41ec39:	or     r12d,r14d
  41ec3c:	rorx   r14d,edx,0x11
  41ec42:	add    r12d,edi
  41ec45:	mov    edi,DWORD PTR [r8+0x1c]
  41ec49:	add    ecx,DWORD PTR [r8+0x3c]
  41ec4d:	add    r12d,ebx
  41ec50:	rorx   ebx,edx,0x13
  41ec56:	shr    edx,0xa
  41ec59:	xor    ebx,r14d
  41ec5c:	xor    ebx,edx
  41ec5e:	rorx   edx,edi,0x7
  41ec64:	add    ebx,ecx
  41ec66:	rorx   ecx,edi,0x12
  41ec6c:	xor    ecx,edx
  41ec6e:	mov    edx,edi
  41ec70:	add    edi,DWORD PTR [rsp+0x10]
  41ec74:	shr    edx,0x3
  41ec77:	xor    ecx,edx
  41ec79:	rorx   edx,r11d,0xb
  41ec7f:	add    ecx,ebx
  41ec81:	rorx   ebx,r11d,0x6
  41ec87:	xor    edx,ebx
  41ec89:	rorx   ebx,r11d,0x19
  41ec8f:	add    r15d,ecx
  41ec92:	xor    edx,ebx
  41ec94:	mov    ebx,r13d
  41ec97:	mov    DWORD PTR [r8+0x58],ecx
  41ec9b:	xor    ebx,r10d
  41ec9e:	rorx   ecx,esi,0x13
  41eca4:	and    ebx,r11d
  41eca7:	xor    ebx,r13d
  41ecaa:	add    r15d,ebx
  41ecad:	mov    ebx,ebp
  41ecaf:	add    r15d,edx
  41ecb2:	mov    edx,DWORD PTR [rsp+0x28]
  41ecb6:	and    ebx,r12d
  41ecb9:	add    edx,r15d
  41ecbc:	rorx   r15d,r12d,0x2
  41ecc2:	lea    r14d,[r9+rdx*1]
  41ecc6:	rorx   r9d,r12d,0xd
  41eccc:	xor    r9d,r15d
  41eccf:	rorx   r15d,r12d,0x16
  41ecd5:	xor    r9d,r15d
  41ecd8:	mov    r15d,ebp
  41ecdb:	or     r15d,r12d
  41ecde:	and    r15d,eax
  41ece1:	or     r15d,ebx
  41ece4:	rorx   ebx,r14d,0x6
  41ecea:	add    r15d,r9d
  41eced:	rorx   r9d,esi,0x11
  41ecf3:	add    r15d,edx
  41ecf6:	xor    ecx,r9d
  41ecf9:	mov    edx,DWORD PTR [r8+0x20]
  41ecfd:	mov    r9d,esi
  41ed00:	shr    r9d,0xa
  41ed04:	xor    ecx,r9d
  41ed07:	rorx   esi,edx,0x7
  41ed0d:	lea    r9d,[rcx+rdi*1]
  41ed11:	rorx   ecx,edx,0x12
  41ed17:	xor    ecx,esi
  41ed19:	mov    esi,edx
  41ed1b:	rorx   edx,r14d,0xb
  41ed21:	shr    esi,0x3
  41ed24:	xor    ebx,edx
  41ed26:	rorx   edx,r14d,0x19
  41ed2c:	xor    ecx,esi
  41ed2e:	xor    ebx,edx
  41ed30:	mov    edx,r10d
  41ed33:	add    r9d,ecx
  41ed36:	xor    edx,r11d
  41ed39:	rorx   ecx,r15d,0xd
  41ed3f:	and    edx,r14d
  41ed42:	add    r13d,r9d
  41ed45:	mov    esi,r12d
  41ed48:	xor    edx,r10d
  41ed4b:	and    esi,r15d
  41ed4e:	mov    DWORD PTR [r8+0x5c],r9d
  41ed52:	add    r13d,edx
  41ed55:	mov    edx,DWORD PTR [rsp+0x34]
  41ed59:	add    r8,0x20
  41ed5d:	add    r13d,ebx
  41ed60:	add    QWORD PTR [rsp+0x8],0x20
  41ed66:	add    edx,r13d
  41ed69:	rorx   r13d,r15d,0x2
  41ed6f:	xor    r13d,ecx
  41ed72:	rorx   ecx,r15d,0x16
  41ed78:	add    eax,edx
  41ed7a:	xor    r13d,ecx
  41ed7d:	mov    ecx,r12d
  41ed80:	or     ecx,r15d
  41ed83:	and    ecx,ebp
  41ed85:	or     ecx,esi
  41ed87:	add    r13d,ecx
  41ed8a:	add    r13d,edx
  41ed8d:	cmp    r8,QWORD PTR [rsp+0x38]
  41ed92:	jne    41e830 <strcmp@plt+0x1b078>
  41ed98:	mov    DWORD PTR [rsp+0x60],eax
  41ed9c:	mov    DWORD PTR [rsp+0x6c],r10d
  41eda1:	xor    eax,eax
  41eda3:	mov    DWORD PTR [rsp+0x5c],ebp
  41eda7:	mov    DWORD PTR [rsp+0x68],r11d
  41edac:	mov    DWORD PTR [rsp+0x58],r12d
  41edb1:	mov    DWORD PTR [rsp+0x64],r14d
  41edb6:	mov    DWORD PTR [rsp+0x54],r15d
  41edbb:	mov    DWORD PTR [rsp+0x50],r13d
  41edc0:	mov    rdx,QWORD PTR [rsp+0x40]
  41edc5:	mov    rcx,QWORD PTR [rsp+0x48]
  41edca:	jmp    41edd4 <strcmp@plt+0x1b61c>
  41edcc:	nop    DWORD PTR [rax+0x0]
  41edd0:	mov    r13d,DWORD PTR [rcx+rax*1]
  41edd4:	add    DWORD PTR [rdx+rax*1+0x8],r13d
  41edd9:	add    rax,0x4
  41eddd:	cmp    rax,0x20
  41ede1:	jne    41edd0 <strcmp@plt+0x1b618>
  41ede3:	mov    rax,QWORD PTR [rsp+0x178]
  41edeb:	xor    rax,QWORD PTR fs:0x28
  41edf4:	jne    41ee48 <strcmp@plt+0x1b690>
  41edf6:	add    rsp,0x188
  41edfd:	pop    rbx
  41edfe:	pop    rbp
  41edff:	pop    r12
  41ee01:	pop    r13
  41ee03:	pop    r14
  41ee05:	pop    r15
  41ee07:	ret    
  41ee08:	nop    DWORD PTR [rax+rax*1+0x0]
  41ee10:	mov    esi,DWORD PTR [r8+0xc]
  41ee14:	mov    r10d,DWORD PTR [r8]
  41ee17:	mov    ecx,DWORD PTR [r8+0x4]
  41ee1b:	mov    ebx,DWORD PTR [r8+0x8]
  41ee1f:	mov    DWORD PTR [rsp+0x10],esi
  41ee23:	mov    esi,DWORD PTR [r8+0x10]
  41ee27:	mov    DWORD PTR [rsp+0x14],esi
  41ee2b:	mov    esi,DWORD PTR [r8+0x14]
  41ee2f:	mov    DWORD PTR [rsp+0x18],esi
  41ee33:	mov    esi,DWORD PTR [r8+0x18]
  41ee37:	mov    DWORD PTR [rsp+0x1c],esi
  41ee3b:	mov    esi,DWORD PTR [r8+0x1c]
  41ee3f:	mov    DWORD PTR [rsp+0x30],esi
  41ee43:	jmp    41e479 <strcmp@plt+0x1acc1>
  41ee48:	call   403460 <__stack_chk_fail@plt>
  41ee4d:	nop    DWORD PTR [rax]
  41ee50:	test   rdx,rdx
  41ee53:	je     41eeed <strcmp@plt+0x1b735>
  41ee59:	push   r15
  41ee5b:	push   r14
  41ee5d:	mov    r15,rsi
  41ee60:	push   r13
  41ee62:	push   r12
  41ee64:	mov    r13,rdx
  41ee67:	push   rbp
  41ee68:	push   rbx
  41ee69:	mov    edx,0x40
  41ee6e:	mov    r12,rdi
  41ee71:	sub    rsp,0x8
  41ee75:	mov    eax,DWORD PTR [rdi]
  41ee77:	mov    r14d,eax
  41ee7a:	and    r14d,0x3f
  41ee7e:	sub    edx,r14d
  41ee81:	add    eax,r13d
  41ee84:	mov    ebx,edx
  41ee86:	mov    DWORD PTR [rdi],eax
  41ee88:	jae    41ee8e <strcmp@plt+0x1b6d6>
  41ee8a:	add    DWORD PTR [rdi+0x4],0x1
  41ee8e:	test   r14d,r14d
  41ee91:	je     41ee9c <strcmp@plt+0x1b6e4>
  41ee93:	cmp    r13,rbx
  41ee96:	jae    41ef80 <strcmp@plt+0x1b7c8>
  41ee9c:	cmp    r13,0x3f
  41eea0:	jbe    41eef0 <strcmp@plt+0x1b738>
  41eea2:	mov    rbp,r13
  41eea5:	mov    rbx,r15
  41eea8:	nop    DWORD PTR [rax+rax*1+0x0]
  41eeb0:	mov    rsi,rbx
  41eeb3:	mov    rdi,r12
  41eeb6:	sub    rbp,0x40
  41eeba:	call   41e360 <strcmp@plt+0x1aba8>
  41eebf:	add    rbx,0x40
  41eec3:	cmp    rbp,0x3f
  41eec7:	ja     41eeb0 <strcmp@plt+0x1b6f8>
  41eec9:	lea    rax,[r13-0x40]
  41eecd:	and    r13d,0x3f
  41eed1:	and    rax,0xffffffffffffffc0
  41eed5:	lea    r15,[r15+rax*1+0x40]
  41eeda:	test   r13,r13
  41eedd:	jne    41eef0 <strcmp@plt+0x1b738>
  41eedf:	add    rsp,0x8
  41eee3:	pop    rbx
  41eee4:	pop    rbp
  41eee5:	pop    r12
  41eee7:	pop    r13
  41eee9:	pop    r14
  41eeeb:	pop    r15
  41eeed:	repz ret 
  41eeef:	nop
  41eef0:	cmp    r13d,0x8
  41eef4:	lea    rcx,[r12+r14*1+0x28]
  41eef9:	mov    eax,r13d
  41eefc:	jb     41ef48 <strcmp@plt+0x1b790>
  41eefe:	mov    rax,QWORD PTR [r15]
  41ef01:	mov    QWORD PTR [rcx],rax
  41ef04:	mov    eax,r13d
  41ef07:	mov    rdx,QWORD PTR [r15+rax*1-0x8]
  41ef0c:	mov    QWORD PTR [rcx+rax*1-0x8],rdx
  41ef11:	lea    rdx,[rcx+0x8]
  41ef15:	and    rdx,0xfffffffffffffff8
  41ef19:	sub    rcx,rdx
  41ef1c:	lea    eax,[r13+rcx*1+0x0]
  41ef21:	sub    r15,rcx
  41ef24:	and    eax,0xfffffff8
  41ef27:	cmp    eax,0x8
  41ef2a:	jb     41eedf <strcmp@plt+0x1b727>
  41ef2c:	and    eax,0xfffffff8
  41ef2f:	xor    ecx,ecx
  41ef31:	mov    esi,ecx
  41ef33:	add    ecx,0x8
  41ef36:	mov    rdi,QWORD PTR [r15+rsi*1]
  41ef3a:	cmp    ecx,eax
  41ef3c:	mov    QWORD PTR [rdx+rsi*1],rdi
  41ef40:	jb     41ef31 <strcmp@plt+0x1b779>
  41ef42:	jmp    41eedf <strcmp@plt+0x1b727>
  41ef44:	nop    DWORD PTR [rax+0x0]
  41ef48:	and    r13d,0x4
  41ef4c:	jne    41f024 <strcmp@plt+0x1b86c>
  41ef52:	test   eax,eax
  41ef54:	je     41eedf <strcmp@plt+0x1b727>
  41ef56:	movzx  edx,BYTE PTR [r15]
  41ef5a:	test   al,0x2
  41ef5c:	mov    BYTE PTR [rcx],dl
  41ef5e:	je     41eedf <strcmp@plt+0x1b727>
  41ef64:	mov    edx,eax
  41ef66:	movzx  eax,WORD PTR [r15+rdx*1-0x2]
  41ef6c:	mov    WORD PTR [rcx+rdx*1-0x2],ax
  41ef71:	jmp    41eedf <strcmp@plt+0x1b727>
  41ef76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ef80:	lea    rsi,[r12+0x28]
  41ef85:	add    r14,rsi
  41ef88:	cmp    edx,0x8
  41ef8b:	jae    41efe0 <strcmp@plt+0x1b828>
  41ef8d:	test   dl,0x4
  41ef90:	jne    41f039 <strcmp@plt+0x1b881>
  41ef96:	test   edx,edx
  41ef98:	je     41efb8 <strcmp@plt+0x1b800>
  41ef9a:	movzx  eax,BYTE PTR [r15]
  41ef9e:	and    edx,0x2
  41efa1:	mov    BYTE PTR [r14],al
  41efa4:	je     41efb8 <strcmp@plt+0x1b800>
  41efa6:	movzx  eax,WORD PTR [r15+rbx*1-0x2]
  41efac:	mov    WORD PTR [r14+rbx*1-0x2],ax
  41efb2:	nop    WORD PTR [rax+rax*1+0x0]
  41efb8:	mov    rdi,r12
  41efbb:	sub    r13,rbx
  41efbe:	add    r15,rbx
  41efc1:	call   41e360 <strcmp@plt+0x1aba8>
  41efc6:	xor    r14d,r14d
  41efc9:	cmp    r13,0x3f
  41efcd:	ja     41eea2 <strcmp@plt+0x1b6ea>
  41efd3:	jmp    41eeda <strcmp@plt+0x1b722>
  41efd8:	nop    DWORD PTR [rax+rax*1+0x0]
  41efe0:	mov    rax,QWORD PTR [r15]
  41efe3:	mov    r8,r15
  41efe6:	mov    QWORD PTR [r14],rax
  41efe9:	mov    rax,QWORD PTR [r15+rbx*1-0x8]
  41efee:	mov    QWORD PTR [r14+rbx*1-0x8],rax
  41eff3:	lea    rax,[r14+0x8]
  41eff7:	and    rax,0xfffffffffffffff8
  41effb:	sub    r14,rax
  41effe:	add    edx,r14d
  41f001:	sub    r8,r14
  41f004:	and    edx,0xfffffff8
  41f007:	cmp    edx,0x8
  41f00a:	jb     41efb8 <strcmp@plt+0x1b800>
  41f00c:	and    edx,0xfffffff8
  41f00f:	xor    ecx,ecx
  41f011:	mov    edi,ecx
  41f013:	add    ecx,0x8
  41f016:	mov    r9,QWORD PTR [r8+rdi*1]
  41f01a:	cmp    ecx,edx
  41f01c:	mov    QWORD PTR [rax+rdi*1],r9
  41f020:	jb     41f011 <strcmp@plt+0x1b859>
  41f022:	jmp    41efb8 <strcmp@plt+0x1b800>
  41f024:	mov    edx,DWORD PTR [r15]
  41f027:	mov    DWORD PTR [rcx],edx
  41f029:	mov    edx,eax
  41f02b:	mov    eax,DWORD PTR [r15+rdx*1-0x4]
  41f030:	mov    DWORD PTR [rcx+rdx*1-0x4],eax
  41f034:	jmp    41eedf <strcmp@plt+0x1b727>
  41f039:	mov    eax,DWORD PTR [r15]
  41f03c:	mov    DWORD PTR [r14],eax
  41f03f:	mov    eax,DWORD PTR [r15+rbx*1-0x4]
  41f044:	mov    DWORD PTR [r14+rbx*1-0x4],eax
  41f049:	jmp    41efb8 <strcmp@plt+0x1b800>
  41f04e:	xchg   ax,ax
  41f050:	push   rbp
  41f051:	push   rbx
  41f052:	mov    rbp,rsi
  41f055:	mov    rbx,rdi
  41f058:	sub    rsp,0x18
  41f05c:	mov    edx,DWORD PTR [rdi]
  41f05e:	mov    rax,QWORD PTR fs:0x28
  41f067:	mov    QWORD PTR [rsp+0x8],rax
  41f06c:	xor    eax,eax
  41f06e:	mov    eax,DWORD PTR [rdi+0x4]
  41f071:	mov    ecx,edx
  41f073:	shr    ecx,0x1d
  41f076:	shl    eax,0x3
  41f079:	or     eax,ecx
  41f07b:	lea    ecx,[rdx*8+0x0]
  41f082:	mov    esi,eax
  41f084:	mov    BYTE PTR [rsp+0x3],al
  41f088:	shr    esi,0x18
  41f08b:	mov    BYTE PTR [rsp+0x7],cl
  41f08f:	mov    BYTE PTR [rsp],sil
  41f093:	mov    esi,eax
  41f095:	shr    esi,0x10
  41f098:	mov    BYTE PTR [rsp+0x1],sil
  41f09d:	mov    esi,eax
  41f09f:	mov    eax,ecx
  41f0a1:	shr    eax,0x18
  41f0a4:	shr    esi,0x8
  41f0a7:	mov    BYTE PTR [rsp+0x4],al
  41f0ab:	mov    eax,ecx
  41f0ad:	mov    BYTE PTR [rsp+0x2],sil
  41f0b2:	shr    eax,0x10
  41f0b5:	lea    rsi,[rip+0x2d704]        # 44c7c0 <strcmp@plt+0x49008>
  41f0bc:	mov    BYTE PTR [rsp+0x5],al
  41f0c0:	mov    eax,ecx
  41f0c2:	shr    eax,0x8
  41f0c5:	mov    BYTE PTR [rsp+0x6],al
  41f0c9:	mov    eax,edx
  41f0cb:	mov    edx,0x38
  41f0d0:	and    eax,0x3f
  41f0d3:	mov    ecx,edx
  41f0d5:	mov    edx,0x78
  41f0da:	sub    ecx,eax
  41f0dc:	sub    edx,eax
  41f0de:	cmp    eax,0x37
  41f0e1:	cmovbe rdx,rcx
  41f0e5:	call   41ee50 <strcmp@plt+0x1b698>
  41f0ea:	mov    rsi,rsp
  41f0ed:	mov    edx,0x8
  41f0f2:	mov    rdi,rbx
  41f0f5:	call   41ee50 <strcmp@plt+0x1b698>
  41f0fa:	movzx  eax,BYTE PTR [rbx+0xb]
  41f0fe:	mov    BYTE PTR [rbp+0x0],al
  41f101:	movzx  eax,WORD PTR [rbx+0xa]
  41f105:	mov    BYTE PTR [rbp+0x1],al
  41f108:	mov    eax,0x8
  41f10d:	shrx   eax,DWORD PTR [rbx+0x8],eax
  41f113:	mov    BYTE PTR [rbp+0x2],al
  41f116:	mov    eax,DWORD PTR [rbx+0x8]
  41f119:	mov    BYTE PTR [rbp+0x3],al
  41f11c:	movzx  eax,BYTE PTR [rbx+0xf]
  41f120:	mov    BYTE PTR [rbp+0x4],al
  41f123:	movzx  eax,WORD PTR [rbx+0xe]
  41f127:	mov    BYTE PTR [rbp+0x5],al
  41f12a:	mov    eax,0x8
  41f12f:	shrx   eax,DWORD PTR [rbx+0xc],eax
  41f135:	mov    BYTE PTR [rbp+0x6],al
  41f138:	mov    eax,DWORD PTR [rbx+0xc]
  41f13b:	mov    BYTE PTR [rbp+0x7],al
  41f13e:	movzx  eax,BYTE PTR [rbx+0x13]
  41f142:	mov    BYTE PTR [rbp+0x8],al
  41f145:	movzx  eax,WORD PTR [rbx+0x12]
  41f149:	mov    BYTE PTR [rbp+0x9],al
  41f14c:	mov    eax,0x8
  41f151:	shrx   eax,DWORD PTR [rbx+0x10],eax
  41f157:	mov    BYTE PTR [rbp+0xa],al
  41f15a:	mov    eax,DWORD PTR [rbx+0x10]
  41f15d:	mov    BYTE PTR [rbp+0xb],al
  41f160:	movzx  eax,BYTE PTR [rbx+0x17]
  41f164:	mov    BYTE PTR [rbp+0xc],al
  41f167:	movzx  eax,WORD PTR [rbx+0x16]
  41f16b:	mov    BYTE PTR [rbp+0xd],al
  41f16e:	mov    eax,0x8
  41f173:	shrx   eax,DWORD PTR [rbx+0x14],eax
  41f179:	mov    BYTE PTR [rbp+0xe],al
  41f17c:	mov    eax,DWORD PTR [rbx+0x14]
  41f17f:	mov    BYTE PTR [rbp+0xf],al
  41f182:	movzx  eax,BYTE PTR [rbx+0x1b]
  41f186:	mov    BYTE PTR [rbp+0x10],al
  41f189:	movzx  eax,WORD PTR [rbx+0x1a]
  41f18d:	mov    BYTE PTR [rbp+0x11],al
  41f190:	mov    eax,0x8
  41f195:	shrx   eax,DWORD PTR [rbx+0x18],eax
  41f19b:	mov    BYTE PTR [rbp+0x12],al
  41f19e:	mov    eax,DWORD PTR [rbx+0x18]
  41f1a1:	mov    BYTE PTR [rbp+0x13],al
  41f1a4:	movzx  eax,BYTE PTR [rbx+0x1f]
  41f1a8:	mov    BYTE PTR [rbp+0x14],al
  41f1ab:	movzx  eax,WORD PTR [rbx+0x1e]
  41f1af:	mov    BYTE PTR [rbp+0x15],al
  41f1b2:	mov    eax,0x8
  41f1b7:	shrx   eax,DWORD PTR [rbx+0x1c],eax
  41f1bd:	mov    BYTE PTR [rbp+0x16],al
  41f1c0:	mov    eax,DWORD PTR [rbx+0x1c]
  41f1c3:	mov    BYTE PTR [rbp+0x17],al
  41f1c6:	movzx  eax,BYTE PTR [rbx+0x23]
  41f1ca:	mov    BYTE PTR [rbp+0x18],al
  41f1cd:	movzx  eax,WORD PTR [rbx+0x22]
  41f1d1:	mov    BYTE PTR [rbp+0x19],al
  41f1d4:	mov    eax,0x8
  41f1d9:	shrx   eax,DWORD PTR [rbx+0x20],eax
  41f1df:	mov    BYTE PTR [rbp+0x1a],al
  41f1e2:	mov    eax,DWORD PTR [rbx+0x20]
  41f1e5:	mov    BYTE PTR [rbp+0x1b],al
  41f1e8:	mov    eax,DWORD PTR [rbx+0x68]
  41f1eb:	test   eax,eax
  41f1ed:	jne    41f211 <strcmp@plt+0x1ba59>
  41f1ef:	movzx  eax,BYTE PTR [rbx+0x27]
  41f1f3:	mov    BYTE PTR [rbp+0x1c],al
  41f1f6:	movzx  eax,WORD PTR [rbx+0x26]
  41f1fa:	mov    BYTE PTR [rbp+0x1d],al
  41f1fd:	mov    eax,0x8
  41f202:	shrx   eax,DWORD PTR [rbx+0x24],eax
  41f208:	mov    BYTE PTR [rbp+0x1e],al
  41f20b:	mov    eax,DWORD PTR [rbx+0x24]
  41f20e:	mov    BYTE PTR [rbp+0x1f],al
  41f211:	mov    rax,QWORD PTR [rsp+0x8]
  41f216:	xor    rax,QWORD PTR fs:0x28
  41f21f:	jne    41f228 <strcmp@plt+0x1ba70>
  41f221:	add    rsp,0x18
  41f225:	pop    rbx
  41f226:	pop    rbp
  41f227:	ret    
  41f228:	call   403460 <__stack_chk_fail@plt>
  41f22d:	nop    DWORD PTR [rax]
  41f230:	push   r14
  41f232:	push   r13
  41f234:	mov    r14d,ecx
  41f237:	push   r12
  41f239:	push   rbp
  41f23a:	mov    r12,rdi
  41f23d:	push   rbx
  41f23e:	mov    rbp,rdx
  41f241:	mov    r13,rsi
  41f244:	add    rsp,0xffffffffffffff80
  41f248:	mov    rdi,rsp
  41f24b:	mov    rax,QWORD PTR fs:0x28
  41f254:	mov    QWORD PTR [rsp+0x78],rax
  41f259:	xor    eax,eax
  41f25b:	call   41e210 <strcmp@plt+0x1aa58>
  41f260:	mov    esi,r14d
  41f263:	mov    rdi,rsp
  41f266:	call   41e2d0 <strcmp@plt+0x1ab18>
  41f26b:	mov    rdx,r13
  41f26e:	mov    rsi,r12
  41f271:	mov    rdi,rsp
  41f274:	call   41ee50 <strcmp@plt+0x1b698>
  41f279:	mov    rsi,rbp
  41f27c:	mov    rdi,rsp
  41f27f:	call   41f050 <strcmp@plt+0x1b898>
  41f284:	mov    rdi,rsp
  41f287:	call   41e240 <strcmp@plt+0x1aa88>
  41f28c:	mov    rax,QWORD PTR [rsp+0x78]
  41f291:	xor    rax,QWORD PTR fs:0x28
  41f29a:	jne    41f2a9 <strcmp@plt+0x1baf1>
  41f29c:	sub    rsp,0xffffffffffffff80
  41f2a0:	pop    rbx
  41f2a1:	pop    rbp
  41f2a2:	pop    r12
  41f2a4:	pop    r13
  41f2a6:	pop    r14
  41f2a8:	ret    
  41f2a9:	call   403460 <__stack_chk_fail@plt>
  41f2ae:	xchg   ax,ax
  41f2b0:	jmp    41cb90 <strcmp@plt+0x193d8>
  41f2b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f2c0:	jmp    41caf0 <strcmp@plt+0x19338>
  41f2c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f2d0:	push   rbx
  41f2d1:	mov    rbx,rdi
  41f2d4:	call   41cad0 <strcmp@plt+0x19318>
  41f2d9:	mov    rdi,rbx
  41f2dc:	pop    rbx
  41f2dd:	jmp    4037b0 <free@plt>
  41f2e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f2ed:	nop    DWORD PTR [rax]
  41f2f0:	push   rbx
  41f2f1:	mov    esi,0x5c
  41f2f6:	mov    edi,0x1
  41f2fb:	call   4032e0 <calloc@plt>
  41f300:	test   rax,rax
  41f303:	mov    rbx,rax
  41f306:	je     41f310 <strcmp@plt+0x1bb58>
  41f308:	mov    rdi,rax
  41f30b:	call   41caa0 <strcmp@plt+0x192e8>
  41f310:	mov    rax,rbx
  41f313:	pop    rbx
  41f314:	ret    
  41f315:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f320:	jmp    41e020 <strcmp@plt+0x1a868>
  41f325:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f330:	jmp    41de20 <strcmp@plt+0x1a668>
  41f335:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f340:	jmp    41cb50 <strcmp@plt+0x19398>
  41f345:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f350:	jmp    41e360 <strcmp@plt+0x1aba8>
  41f355:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f360:	jmp    41e260 <strcmp@plt+0x1aaa8>
  41f365:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f370:	push   rbx
  41f371:	mov    rbx,rdi
  41f374:	call   41e240 <strcmp@plt+0x1aa88>
  41f379:	mov    rdi,rbx
  41f37c:	pop    rbx
  41f37d:	jmp    4037b0 <free@plt>
  41f382:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f38d:	nop    DWORD PTR [rax]
  41f390:	push   rbx
  41f391:	mov    esi,0x6c
  41f396:	mov    edi,0x1
  41f39b:	call   4032e0 <calloc@plt>
  41f3a0:	test   rax,rax
  41f3a3:	mov    rbx,rax
  41f3a6:	je     41f3b0 <strcmp@plt+0x1bbf8>
  41f3a8:	mov    rdi,rax
  41f3ab:	call   41e210 <strcmp@plt+0x1aa58>
  41f3b0:	mov    rax,rbx
  41f3b3:	pop    rbx
  41f3b4:	ret    
  41f3b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f3c0:	mov    ecx,0x1
  41f3c5:	jmp    41f230 <strcmp@plt+0x1ba78>
  41f3ca:	nop    WORD PTR [rax+rax*1+0x0]
  41f3d0:	xor    ecx,ecx
  41f3d2:	jmp    41f230 <strcmp@plt+0x1ba78>
  41f3d7:	nop    WORD PTR [rax+rax*1+0x0]
  41f3e0:	jmp    41f050 <strcmp@plt+0x1b898>
  41f3e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f3f0:	jmp    41ee50 <strcmp@plt+0x1b698>
  41f3f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f400:	mov    esi,0x1
  41f405:	jmp    41e2d0 <strcmp@plt+0x1ab18>
  41f40a:	nop    WORD PTR [rax+rax*1+0x0]
  41f410:	xor    esi,esi
  41f412:	jmp    41e2d0 <strcmp@plt+0x1ab18>
  41f417:	nop    WORD PTR [rax+rax*1+0x0]
  41f420:	test   rdi,rdi
  41f423:	je     41f430 <strcmp@plt+0x1bc78>
  41f425:	lea    rax,[rdi+0x8]
  41f429:	ret    
  41f42a:	nop    WORD PTR [rax+rax*1+0x0]
  41f430:	xor    eax,eax
  41f432:	ret    
  41f433:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f43e:	xchg   ax,ax
  41f440:	push   r13
  41f442:	push   r12
  41f444:	mov    r13,rdi
  41f447:	push   rbp
  41f448:	push   rbx
  41f449:	mov    ebx,edx
  41f44b:	shr    ebx,0x3
  41f44e:	mov    ebp,edx
  41f450:	mov    r12,rsi
  41f453:	sub    rsp,0x8
  41f457:	mov    rdx,rbx
  41f45a:	call   4031f0 <memcmp@plt>
  41f45f:	xor    edx,edx
  41f461:	test   eax,eax
  41f463:	jne    41f497 <strcmp@plt+0x1bcdf>
  41f465:	and    ebp,0x7
  41f468:	mov    edx,0x1
  41f46d:	je     41f497 <strcmp@plt+0x1bcdf>
  41f46f:	movzx  eax,BYTE PTR [r13+rbx*1+0x0]
  41f475:	mov    edx,0x8
  41f47a:	xor    al,BYTE PTR [r12+rbx*1]
  41f47e:	mov    ecx,edx
  41f480:	mov    edx,0xffffffff
  41f485:	sub    ecx,ebp
  41f487:	shlx   edx,edx,ecx
  41f48c:	movzx  eax,al
  41f48f:	test   eax,edx
  41f491:	sete   dl
  41f494:	movzx  edx,dl
  41f497:	add    rsp,0x8
  41f49b:	mov    eax,edx
  41f49d:	pop    rbx
  41f49e:	pop    rbp
  41f49f:	pop    r12
  41f4a1:	pop    r13
  41f4a3:	ret    
  41f4a4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f4af:	nop
  41f4b0:	sub    rsp,0x28
  41f4b4:	mov    rax,QWORD PTR fs:0x28
  41f4bd:	mov    QWORD PTR [rsp+0x18],rax
  41f4c2:	xor    eax,eax
  41f4c4:	cmp    edi,0x2
  41f4c7:	je     41f4f8 <strcmp@plt+0x1bd40>
  41f4c9:	cmp    edi,0xa
  41f4cc:	jne    41f5b8 <strcmp@plt+0x1be00>
  41f4d2:	mov    rax,QWORD PTR [rsp+0x18]
  41f4d7:	xor    rax,QWORD PTR fs:0x28
  41f4e0:	jne    41f5bf <strcmp@plt+0x1be07>
  41f4e6:	mov    edi,0xa
  41f4eb:	add    rsp,0x28
  41f4ef:	jmp    403780 <inet_pton@plt>
  41f4f4:	nop    DWORD PTR [rax+0x0]
  41f4f8:	mov    QWORD PTR [rsp+0x8],rdx
  41f4fd:	mov    QWORD PTR [rsp],rsi
  41f501:	mov    BYTE PTR [rsp+0x14],0x0
  41f506:	mov    BYTE PTR [rsp+0x15],0x0
  41f50b:	mov    BYTE PTR [rsp+0x16],0x0
  41f510:	mov    BYTE PTR [rsp+0x17],0x0
  41f515:	call   403420 <__ctype_b_loc@plt>
  41f51a:	mov    rdx,QWORD PTR [rsp+0x8]
  41f51f:	mov    r8,QWORD PTR [rax]
  41f522:	xor    r9d,r9d
  41f525:	mov    rsi,QWORD PTR [rsp]
  41f529:	lea    rdi,[rsi+0x1]
  41f52d:	movsx  rsi,BYTE PTR [rsi]
  41f531:	movsxd r10,r9d
  41f534:	test   BYTE PTR [r8+rsi*2+0x1],0x8
  41f53a:	je     41f5b8 <strcmp@plt+0x1be00>
  41f53c:	xor    ecx,ecx
  41f53e:	jmp    41f555 <strcmp@plt+0x1bd9d>
  41f540:	add    rdi,0x1
  41f544:	movsx  rsi,BYTE PTR [rdi-0x1]
  41f549:	test   esi,esi
  41f54b:	je     41f5a0 <strcmp@plt+0x1bde8>
  41f54d:	test   BYTE PTR [r8+rsi*2+0x1],0x8
  41f553:	je     41f580 <strcmp@plt+0x1bdc8>
  41f555:	lea    eax,[rcx+rcx*4]
  41f558:	lea    ecx,[rsi+rax*2-0x30]
  41f55c:	cmp    ecx,0xff
  41f562:	jle    41f540 <strcmp@plt+0x1bd88>
  41f564:	xor    eax,eax
  41f566:	mov    rdx,QWORD PTR [rsp+0x18]
  41f56b:	xor    rdx,QWORD PTR fs:0x28
  41f574:	jne    41f5bf <strcmp@plt+0x1be07>
  41f576:	add    rsp,0x28
  41f57a:	ret    
  41f57b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f580:	mov    BYTE PTR [rsp+r9*1+0x14],cl
  41f585:	add    r9,0x1
  41f589:	cmp    r10d,0x3
  41f58d:	je     41f564 <strcmp@plt+0x1bdac>
  41f58f:	cmp    esi,0x2e
  41f592:	jne    41f564 <strcmp@plt+0x1bdac>
  41f594:	mov    rsi,rdi
  41f597:	jmp    41f529 <strcmp@plt+0x1bd71>
  41f599:	nop    DWORD PTR [rax+0x0]
  41f5a0:	mov    BYTE PTR [rsp+r10*1+0x14],cl
  41f5a5:	mov    eax,DWORD PTR [rsp+0x14]
  41f5a9:	mov    DWORD PTR [rdx],eax
  41f5ab:	mov    eax,0x1
  41f5b0:	jmp    41f566 <strcmp@plt+0x1bdae>
  41f5b2:	nop    WORD PTR [rax+rax*1+0x0]
  41f5b8:	mov    eax,0xffffffff
  41f5bd:	jmp    41f566 <strcmp@plt+0x1bdae>
  41f5bf:	call   403460 <__stack_chk_fail@plt>
  41f5c4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f5cf:	nop
  41f5d0:	test   rdi,rdi
  41f5d3:	je     41f750 <strcmp@plt+0x1bf98>
  41f5d9:	push   r12
  41f5db:	push   rbp
  41f5dc:	mov    rbp,rdi
  41f5df:	push   rbx
  41f5e0:	mov    ecx,DWORD PTR [rdi+0x4]
  41f5e3:	test   ecx,ecx
  41f5e5:	js     41f758 <strcmp@plt+0x1bfa0>
  41f5eb:	test   rsi,rsi
  41f5ee:	mov    rbx,rsi
  41f5f1:	mov    r12d,edx
  41f5f4:	je     41f720 <strcmp@plt+0x1bf68>
  41f5fa:	movzx  eax,WORD PTR [rbp+0x0]
  41f5fe:	cmp    ax,0x2
  41f602:	je     41f680 <strcmp@plt+0x1bec8>
  41f604:	cmp    ax,0xa
  41f608:	jne    41f678 <strcmp@plt+0x1bec0>
  41f60a:	lea    rsi,[rbp+0x8]
  41f60e:	mov    ecx,0x30
  41f613:	mov    rdx,rbx
  41f616:	mov    edi,0xa
  41f61b:	call   4033f0 <inet_ntop@plt>
  41f620:	test   rax,rax
  41f623:	je     41f718 <strcmp@plt+0x1bf60>
  41f629:	test   r12d,r12d
  41f62c:	je     41f718 <strcmp@plt+0x1bf60>
  41f632:	movzx  ebp,WORD PTR [rbp+0x2]
  41f636:	cmp    bp,0x80
  41f63b:	ja     41f777 <strcmp@plt+0x1bfbf>
  41f641:	mov    rdi,rbx
  41f644:	call   4031d0 <strlen@plt>
  41f649:	lea    rcx,[rip+0x2f181]        # 44e7d1 <strcmp@plt+0x4b019>
  41f650:	lea    rdi,[rbx+rax*1]
  41f654:	movzx  r8d,bp
  41f658:	mov    rdx,0xffffffffffffffff
  41f65f:	mov    esi,0x1
  41f664:	xor    eax,eax
  41f666:	call   403290 <__sprintf_chk@plt>
  41f66b:	mov    rax,rbx
  41f66e:	pop    rbx
  41f66f:	pop    rbp
  41f670:	pop    r12
  41f672:	ret    
  41f673:	nop    DWORD PTR [rax+rax*1+0x0]
  41f678:	pop    rbx
  41f679:	xor    eax,eax
  41f67b:	pop    rbp
  41f67c:	pop    r12
  41f67e:	ret    
  41f67f:	nop
  41f680:	movzx  eax,WORD PTR [rbp+0x2]
  41f684:	cmp    ax,0x20
  41f688:	ja     41f796 <strcmp@plt+0x1bfde>
  41f68e:	test   r12d,r12d
  41f691:	je     41f6d8 <strcmp@plt+0x1bf20>
  41f693:	sub    rsp,0x8
  41f697:	lea    rcx,[rip+0x2d29a]        # 44c938 <strcmp@plt+0x49180>
  41f69e:	mov    rdi,rbx
  41f6a1:	push   rax
  41f6a2:	movzx  eax,BYTE PTR [rbp+0xb]
  41f6a6:	mov    rdx,0xffffffffffffffff
  41f6ad:	mov    esi,0x1
  41f6b2:	push   rax
  41f6b3:	movzx  eax,BYTE PTR [rbp+0xa]
  41f6b7:	push   rax
  41f6b8:	movzx  r9d,BYTE PTR [rbp+0x9]
  41f6bd:	xor    eax,eax
  41f6bf:	movzx  r8d,BYTE PTR [rbp+0x8]
  41f6c4:	call   403290 <__sprintf_chk@plt>
  41f6c9:	add    rsp,0x20
  41f6cd:	mov    rax,rbx
  41f6d0:	pop    rbx
  41f6d1:	pop    rbp
  41f6d2:	pop    r12
  41f6d4:	ret    
  41f6d5:	nop    DWORD PTR [rax]
  41f6d8:	movzx  eax,BYTE PTR [rbp+0xb]
  41f6dc:	lea    rcx,[rip+0x2d264]        # 44c947 <strcmp@plt+0x4918f>
  41f6e3:	mov    rdx,0xffffffffffffffff
  41f6ea:	mov    rdi,rbx
  41f6ed:	mov    esi,0x1
  41f6f2:	push   rax
  41f6f3:	movzx  eax,BYTE PTR [rbp+0xa]
  41f6f7:	push   rax
  41f6f8:	movzx  r9d,BYTE PTR [rbp+0x9]
  41f6fd:	xor    eax,eax
  41f6ff:	movzx  r8d,BYTE PTR [rbp+0x8]
  41f704:	call   403290 <__sprintf_chk@plt>
  41f709:	pop    rax
  41f70a:	mov    rax,rbx
  41f70d:	pop    rdx
  41f70e:	pop    rbx
  41f70f:	pop    rbp
  41f710:	pop    r12
  41f712:	ret    
  41f713:	nop    DWORD PTR [rax+rax*1+0x0]
  41f718:	mov    rax,rbx
  41f71b:	pop    rbx
  41f71c:	pop    rbp
  41f71d:	pop    r12
  41f71f:	ret    
  41f720:	mov    eax,DWORD PTR [rip+0x4ea2a]        # 46e150 <strcmp@plt+0x6a998>
  41f726:	lea    edx,[rax+0x1]
  41f729:	and    eax,0xf
  41f72c:	mov    DWORD PTR [rip+0x4ea1e],edx        # 46e150 <strcmp@plt+0x6a998>
  41f732:	lea    rdx,[rax+rax*2]
  41f736:	lea    rdx,[rax+rdx*4]
  41f73a:	lea    rbx,[rax+rdx*4]
  41f73e:	lea    rax,[rip+0x4e6bb]        # 46de00 <strcmp@plt+0x6a648>
  41f745:	add    rbx,rax
  41f748:	jmp    41f5fa <strcmp@plt+0x1be42>
  41f74d:	nop    DWORD PTR [rax]
  41f750:	lea    rax,[rip+0x2d1a9]        # 44c900 <strcmp@plt+0x49148>
  41f757:	ret    
  41f758:	lea    rcx,[rip+0x2d549]        # 44cca8 <strcmp@plt+0x494f0>
  41f75f:	lea    rsi,[rip+0x2d1a1]        # 44c907 <strcmp@plt+0x4914f>
  41f766:	lea    rdi,[rip+0x2d1b4]        # 44c921 <strcmp@plt+0x49169>
  41f76d:	mov    edx,0x71
  41f772:	call   4032c0 <__assert_fail@plt>
  41f777:	lea    rcx,[rip+0x2d52a]        # 44cca8 <strcmp@plt+0x494f0>
  41f77e:	lea    rsi,[rip+0x2d182]        # 44c907 <strcmp@plt+0x4914f>
  41f785:	lea    rdi,[rip+0x2d37c]        # 44cb08 <strcmp@plt+0x49350>
  41f78c:	mov    edx,0x9b
  41f791:	call   4032c0 <__assert_fail@plt>
  41f796:	lea    rcx,[rip+0x2d50b]        # 44cca8 <strcmp@plt+0x494f0>
  41f79d:	lea    rsi,[rip+0x2d163]        # 44c907 <strcmp@plt+0x4914f>
  41f7a4:	lea    rdi,[rip+0x2d32d]        # 44cad8 <strcmp@plt+0x49320>
  41f7ab:	mov    edx,0x8b
  41f7b0:	call   4032c0 <__assert_fail@plt>
  41f7b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f7c0:	mov    edx,0x1
  41f7c5:	jmp    41f5d0 <strcmp@plt+0x1be18>
  41f7ca:	nop    WORD PTR [rax+rax*1+0x0]
  41f7d0:	xor    esi,esi
  41f7d2:	jmp    41f7c0 <strcmp@plt+0x1c008>
  41f7d7:	nop    WORD PTR [rax+rax*1+0x0]
  41f7e0:	push   rbx
  41f7e1:	mov    ebx,edi
  41f7e3:	xor    edi,edi
  41f7e5:	sub    rsp,0x10
  41f7e9:	test   rcx,rcx
  41f7ec:	je     41f870 <strcmp@plt+0x1c0b8>
  41f7f2:	cmp    ebx,0x2
  41f7f5:	je     41f840 <strcmp@plt+0x1c088>
  41f7f7:	cmp    ebx,0xa
  41f7fa:	jne    41f830 <strcmp@plt+0x1c078>
  41f7fc:	mov    r9,QWORD PTR [rsi]
  41f7ff:	mov    r10,QWORD PTR [rsi+0x8]
  41f803:	test   edx,edx
  41f805:	mov    eax,0x80
  41f80a:	mov    WORD PTR [rcx],bx
  41f80d:	cmovs  edx,eax
  41f810:	test   edi,edi
  41f812:	mov    QWORD PTR [rcx+0x8],r9
  41f816:	mov    QWORD PTR [rcx+0x10],r10
  41f81a:	mov    WORD PTR [rcx+0x2],dx
  41f81e:	je     41f85a <strcmp@plt+0x1c0a2>
  41f820:	mov    DWORD PTR [rcx+0x4],0x1
  41f827:	add    rsp,0x10
  41f82b:	mov    rax,rcx
  41f82e:	pop    rbx
  41f82f:	ret    
  41f830:	mov    rdi,rcx
  41f833:	call   4037b0 <free@plt>
  41f838:	xor    eax,eax
  41f83a:	add    rsp,0x10
  41f83e:	pop    rbx
  41f83f:	ret    
  41f840:	mov    eax,DWORD PTR [rsi]
  41f842:	test   edx,edx
  41f844:	mov    WORD PTR [rcx],bx
  41f847:	mov    DWORD PTR [rcx+0x8],eax
  41f84a:	mov    eax,0x20
  41f84f:	cmovs  edx,eax
  41f852:	test   edi,edi
  41f854:	mov    WORD PTR [rcx+0x2],dx
  41f858:	jne    41f820 <strcmp@plt+0x1c068>
  41f85a:	mov    DWORD PTR [rcx+0x4],0x0
  41f861:	add    rsp,0x10
  41f865:	mov    rax,rcx
  41f868:	pop    rbx
  41f869:	ret    
  41f86a:	nop    WORD PTR [rax+rax*1+0x0]
  41f870:	mov    edi,0x18
  41f875:	mov    DWORD PTR [rsp+0xc],edx
  41f879:	mov    QWORD PTR [rsp],rsi
  41f87d:	call   4347a0 <strcmp@plt+0x30fe8>
  41f882:	test   rax,rax
  41f885:	mov    rcx,rax
  41f888:	mov    rsi,QWORD PTR [rsp]
  41f88c:	mov    edx,DWORD PTR [rsp+0xc]
  41f890:	je     41f8b3 <strcmp@plt+0x1c0fb>
  41f892:	mov    QWORD PTR [rax],0x0
  41f899:	mov    QWORD PTR [rax+0x8],0x0
  41f8a1:	mov    edi,0x1
  41f8a6:	mov    QWORD PTR [rax+0x10],0x0
  41f8ae:	jmp    41f7f2 <strcmp@plt+0x1c03a>
  41f8b3:	lea    rdx,[rip+0x2d27e]        # 44cb38 <strcmp@plt+0x49380>
  41f8ba:	xor    eax,eax
  41f8bc:	mov    esi,0x1
  41f8c1:	mov    edi,0x18
  41f8c6:	call   403450 <__syslog_chk@plt>
  41f8cb:	xor    eax,eax
  41f8cd:	jmp    41f83a <strcmp@plt+0x1c082>
  41f8d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f8dd:	nop    DWORD PTR [rax]
  41f8e0:	xor    ecx,ecx
  41f8e2:	jmp    41f7e0 <strcmp@plt+0x1c028>
  41f8e7:	nop    WORD PTR [rax+rax*1+0x0]
  41f8f0:	push   r14
  41f8f2:	push   r13
  41f8f4:	push   r12
  41f8f6:	push   rbp
  41f8f7:	push   rbx
  41f8f8:	sub    rsp,0x430
  41f8ff:	mov    rax,QWORD PTR fs:0x28
  41f908:	mov    QWORD PTR [rsp+0x428],rax
  41f910:	xor    eax,eax
  41f912:	test   rsi,rsi
  41f915:	je     41f9ad <strcmp@plt+0x1c1f5>
  41f91b:	cmp    edi,0x2
  41f91e:	mov    r12d,edi
  41f921:	mov    rbx,rsi
  41f924:	je     41fa08 <strcmp@plt+0x1c250>
  41f92a:	cmp    edi,0xa
  41f92d:	jne    41f9e0 <strcmp@plt+0x1c228>
  41f933:	mov    esi,0x2f
  41f938:	mov    rdi,rbx
  41f93b:	call   403190 <strchr@plt>
  41f940:	test   rax,rax
  41f943:	mov    rbp,rax
  41f946:	je     41faa0 <strcmp@plt+0x1c2e8>
  41f94c:	mov    r14d,0x80
  41f952:	lea    rdi,[rbp+0x1]
  41f956:	xor    esi,esi
  41f958:	mov    edx,0xa
  41f95d:	sub    rbp,rbx
  41f960:	call   403580 <strtol@plt>
  41f965:	cmp    rbp,0x3ff
  41f96c:	mov    r13,rax
  41f96f:	jg     41faad <strcmp@plt+0x1c2f5>
  41f975:	lea    r8,[rsp+0x20]
  41f97a:	mov    ecx,0x400
  41f97f:	mov    rdx,rbp
  41f982:	mov    rsi,rbx
  41f985:	mov    rdi,r8
  41f988:	call   4036d0 <__memcpy_chk@plt>
  41f98d:	cmp    r13,r14
  41f990:	mov    BYTE PTR [rsp+rbp*1+0x20],0x0
  41f995:	cmova  r13,r14
  41f999:	cmp    r12d,0x2
  41f99d:	je     41fa98 <strcmp@plt+0x1c2e0>
  41f9a3:	cmp    r12d,0xa
  41f9a7:	je     41fa60 <strcmp@plt+0x1c2a8>
  41f9ad:	xor    eax,eax
  41f9af:	mov    rcx,QWORD PTR [rsp+0x428]
  41f9b7:	xor    rcx,QWORD PTR fs:0x28
  41f9c0:	jne    41faa8 <strcmp@plt+0x1c2f0>
  41f9c6:	add    rsp,0x430
  41f9cd:	pop    rbx
  41f9ce:	pop    rbp
  41f9cf:	pop    r12
  41f9d1:	pop    r13
  41f9d3:	pop    r14
  41f9d5:	ret    
  41f9d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f9e0:	mov    rax,QWORD PTR [rip+0x485e1]        # 467fc8 <strcmp@plt+0x64810>
  41f9e7:	mov    ecx,edi
  41f9e9:	lea    rdx,[rip+0x2cf63]        # 44c953 <strcmp@plt+0x4919b>
  41f9f0:	mov    esi,0x1
  41f9f5:	mov    rdi,QWORD PTR [rax]
  41f9f8:	xor    eax,eax
  41f9fa:	call   403680 <__fprintf_chk@plt>
  41f9ff:	jmp    41f9ad <strcmp@plt+0x1c1f5>
  41fa01:	nop    DWORD PTR [rax+0x0]
  41fa08:	mov    esi,0x2f
  41fa0d:	mov    rdi,rbx
  41fa10:	mov    r14d,0x20
  41fa16:	call   403190 <strchr@plt>
  41fa1b:	test   rax,rax
  41fa1e:	mov    rbp,rax
  41fa21:	mov    r13d,0x20
  41fa27:	jne    41f952 <strcmp@plt+0x1c19a>
  41fa2d:	lea    rbp,[rsp+0xc]
  41fa32:	mov    rsi,rbx
  41fa35:	mov    edi,0x2
  41fa3a:	mov    rdx,rbp
  41fa3d:	call   41f4b0 <strcmp@plt+0x1bcf8>
  41fa42:	test   eax,eax
  41fa44:	jle    41f9ad <strcmp@plt+0x1c1f5>
  41fa4a:	mov    edx,r13d
  41fa4d:	mov    rsi,rbp
  41fa50:	mov    edi,0x2
  41fa55:	call   41f8e0 <strcmp@plt+0x1c128>
  41fa5a:	jmp    41f9af <strcmp@plt+0x1c1f7>
  41fa5f:	nop
  41fa60:	mov    rbx,rax
  41fa63:	lea    rbp,[rsp+0x10]
  41fa68:	mov    rsi,rbx
  41fa6b:	mov    edi,0xa
  41fa70:	mov    rdx,rbp
  41fa73:	call   403780 <inet_pton@plt>
  41fa78:	test   eax,eax
  41fa7a:	jle    41f9ad <strcmp@plt+0x1c1f5>
  41fa80:	mov    edx,r13d
  41fa83:	mov    rsi,rbp
  41fa86:	mov    edi,0xa
  41fa8b:	call   41f8e0 <strcmp@plt+0x1c128>
  41fa90:	jmp    41f9af <strcmp@plt+0x1c1f7>
  41fa95:	nop    DWORD PTR [rax]
  41fa98:	mov    rbx,rax
  41fa9b:	jmp    41fa2d <strcmp@plt+0x1c275>
  41fa9d:	nop    DWORD PTR [rax]
  41faa0:	mov    r13d,0x80
  41faa6:	jmp    41fa63 <strcmp@plt+0x1c2ab>
  41faa8:	call   403460 <__stack_chk_fail@plt>
  41faad:	lea    rcx,[rip+0x2d1e4]        # 44cc98 <strcmp@plt+0x494e0>
  41fab4:	lea    rsi,[rip+0x2ce4c]        # 44c907 <strcmp@plt+0x4914f>
  41fabb:	lea    rdi,[rip+0x2cea3]        # 44c965 <strcmp@plt+0x491ad>
  41fac2:	mov    edx,0xfe
  41fac7:	call   4032c0 <__assert_fail@plt>
  41facc:	nop    DWORD PTR [rax+0x0]
  41fad0:	test   rdi,rdi
  41fad3:	je     41fb08 <strcmp@plt+0x1c350>
  41fad5:	mov    eax,DWORD PTR [rdi+0x4]
  41fad8:	test   eax,eax
  41fada:	je     41faf0 <strcmp@plt+0x1c338>
  41fadc:	add    eax,0x1
  41fadf:	mov    DWORD PTR [rdi+0x4],eax
  41fae2:	mov    rax,rdi
  41fae5:	ret    
  41fae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41faf0:	movzx  edx,WORD PTR [rdi+0x2]
  41faf4:	lea    rsi,[rdi+0x8]
  41faf8:	movzx  edi,WORD PTR [rdi]
  41fafb:	xor    ecx,ecx
  41fafd:	jmp    41f7e0 <strcmp@plt+0x1c028>
  41fb02:	nop    WORD PTR [rax+rax*1+0x0]
  41fb08:	xor    eax,eax
  41fb0a:	ret    
  41fb0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41fb10:	test   rdi,rdi
  41fb13:	je     41fb28 <strcmp@plt+0x1c370>
  41fb15:	mov    eax,DWORD PTR [rdi+0x4]
  41fb18:	test   eax,eax
  41fb1a:	jle    41fb35 <strcmp@plt+0x1c37d>
  41fb1c:	sub    eax,0x1
  41fb1f:	je     41fb30 <strcmp@plt+0x1c378>
  41fb21:	mov    DWORD PTR [rdi+0x4],eax
  41fb24:	ret    
  41fb25:	nop    DWORD PTR [rax]
  41fb28:	repz ret 
  41fb2a:	nop    WORD PTR [rax+rax*1+0x0]
  41fb30:	jmp    4037b0 <free@plt>
  41fb35:	lea    rcx,[rip+0x2d14c]        # 44cc88 <strcmp@plt+0x494d0>
  41fb3c:	lea    rsi,[rip+0x2cdc4]        # 44c907 <strcmp@plt+0x4914f>
  41fb43:	lea    rdi,[rip+0x2ce31]        # 44c97b <strcmp@plt+0x491c3>
  41fb4a:	sub    rsp,0x8
  41fb4e:	mov    edx,0x12d
  41fb53:	call   4032c0 <__assert_fail@plt>
  41fb58:	nop    DWORD PTR [rax+rax*1+0x0]
  41fb60:	push   rbx
  41fb61:	mov    esi,0x10
  41fb66:	mov    ebx,edi
  41fb68:	mov    edi,0x1
  41fb6d:	call   434750 <strcmp@plt+0x30f98>
  41fb72:	cmp    ebx,0x80
  41fb78:	mov    DWORD PTR [rax+0x8],ebx
  41fb7b:	mov    QWORD PTR [rax],0x0
  41fb82:	mov    DWORD PTR [rax+0xc],0x0
  41fb89:	ja     41fb94 <strcmp@plt+0x1c3dc>
  41fb8b:	add    DWORD PTR [rip+0x4e5c2],0x1        # 46e154 <strcmp@plt+0x6a99c>
  41fb92:	pop    rbx
  41fb93:	ret    
  41fb94:	lea    rcx,[rip+0x2d0dd]        # 44cc78 <strcmp@plt+0x494c0>
  41fb9b:	lea    rsi,[rip+0x2cd65]        # 44c907 <strcmp@plt+0x4914f>
  41fba2:	lea    rdi,[rip+0x2cde8]        # 44c991 <strcmp@plt+0x491d9>
  41fba9:	mov    edx,0x147
  41fbae:	call   4032c0 <__assert_fail@plt>
  41fbb3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41fbbe:	xchg   ax,ax
  41fbc0:	push   r15
  41fbc2:	push   r14
  41fbc4:	push   r13
  41fbc6:	push   r12
  41fbc8:	push   rbp
  41fbc9:	push   rbx
  41fbca:	sub    rsp,0x428
  41fbd1:	mov    rax,QWORD PTR fs:0x28
  41fbda:	mov    QWORD PTR [rsp+0x418],rax
  41fbe2:	xor    eax,eax
  41fbe4:	test   rdi,rdi
  41fbe7:	je     41fcff <strcmp@plt+0x1c547>
  41fbed:	mov    r15,QWORD PTR [rdi]
  41fbf0:	mov    r13,rdi
  41fbf3:	test   r15,r15
  41fbf6:	je     41fcd2 <strcmp@plt+0x1c51a>
  41fbfc:	lea    r12,[rsp+0x10]
  41fc01:	mov    r14,rsi
  41fc04:	mov    QWORD PTR [rsp+0x8],r12
  41fc09:	jmp    41fc50 <strcmp@plt+0x1c498>
  41fc0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41fc10:	call   41fb10 <strcmp@plt+0x1c358>
  41fc15:	mov    rdi,QWORD PTR [r15+0x28]
  41fc19:	test   rdi,rdi
  41fc1c:	je     41fc28 <strcmp@plt+0x1c470>
  41fc1e:	test   r14,r14
  41fc21:	je     41fc28 <strcmp@plt+0x1c470>
  41fc23:	xor    eax,eax
  41fc25:	call   r14
  41fc28:	mov    rdi,r15
  41fc2b:	call   4037b0 <free@plt>
  41fc30:	mov    eax,DWORD PTR [r13+0xc]
  41fc34:	sub    eax,0x1
  41fc37:	test   rbx,rbx
  41fc3a:	mov    DWORD PTR [r13+0xc],eax
  41fc3e:	je     41fc90 <strcmp@plt+0x1c4d8>
  41fc40:	test   rbp,rbp
  41fc43:	je     41fc4d <strcmp@plt+0x1c495>
  41fc45:	mov    QWORD PTR [r12],rbp
  41fc49:	add    r12,0x8
  41fc4d:	mov    r15,rbx
  41fc50:	mov    rdi,QWORD PTR [r15+0x8]
  41fc54:	mov    rbx,QWORD PTR [r15+0x10]
  41fc58:	mov    rbp,QWORD PTR [r15+0x18]
  41fc5c:	test   rdi,rdi
  41fc5f:	jne    41fc10 <strcmp@plt+0x1c458>
  41fc61:	cmp    QWORD PTR [r15+0x28],0x0
  41fc66:	je     41fc28 <strcmp@plt+0x1c470>
  41fc68:	lea    rcx,[rip+0x2cff9]        # 44cc68 <strcmp@plt+0x494b0>
  41fc6f:	lea    rsi,[rip+0x2cc91]        # 44c907 <strcmp@plt+0x4914f>
  41fc76:	lea    rdi,[rip+0x2cd39]        # 44c9b6 <strcmp@plt+0x491fe>
  41fc7d:	mov    edx,0x164
  41fc82:	call   4032c0 <__assert_fail@plt>
  41fc87:	nop    WORD PTR [rax+rax*1+0x0]
  41fc90:	test   rbp,rbp
  41fc93:	mov    rbx,rbp
  41fc96:	jne    41fc4d <strcmp@plt+0x1c495>
  41fc98:	cmp    r12,QWORD PTR [rsp+0x8]
  41fc9d:	je     41fca9 <strcmp@plt+0x1c4f1>
  41fc9f:	mov    rbx,QWORD PTR [r12-0x8]
  41fca4:	test   rbx,rbx
  41fca7:	jne    41fcd7 <strcmp@plt+0x1c51f>
  41fca9:	test   eax,eax
  41fcab:	jne    41fce0 <strcmp@plt+0x1c528>
  41fcad:	mov    rax,QWORD PTR [rsp+0x418]
  41fcb5:	xor    rax,QWORD PTR fs:0x28
  41fcbe:	jne    41fd1e <strcmp@plt+0x1c566>
  41fcc0:	add    rsp,0x428
  41fcc7:	pop    rbx
  41fcc8:	pop    rbp
  41fcc9:	pop    r12
  41fccb:	pop    r13
  41fccd:	pop    r14
  41fccf:	pop    r15
  41fcd1:	ret    
  41fcd2:	mov    eax,DWORD PTR [rdi+0xc]
  41fcd5:	jmp    41fca9 <strcmp@plt+0x1c4f1>
  41fcd7:	sub    r12,0x8
  41fcdb:	jmp    41fc4d <strcmp@plt+0x1c495>
  41fce0:	lea    rcx,[rip+0x2cf81]        # 44cc68 <strcmp@plt+0x494b0>
  41fce7:	lea    rsi,[rip+0x2cc19]        # 44c907 <strcmp@plt+0x4914f>
  41fcee:	lea    rdi,[rip+0x2ce6b]        # 44cb60 <strcmp@plt+0x493a8>
  41fcf5:	mov    edx,0x177
  41fcfa:	call   4032c0 <__assert_fail@plt>
  41fcff:	lea    rcx,[rip+0x2cf62]        # 44cc68 <strcmp@plt+0x494b0>
  41fd06:	lea    rsi,[rip+0x2cbfa]        # 44c907 <strcmp@plt+0x4914f>
  41fd0d:	lea    rdi,[rip+0x2cc99]        # 44c9ad <strcmp@plt+0x491f5>
  41fd14:	mov    edx,0x154
  41fd19:	call   4032c0 <__assert_fail@plt>
  41fd1e:	call   403460 <__stack_chk_fail@plt>
  41fd23:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41fd2e:	xchg   ax,ax
  41fd30:	push   rbx
  41fd31:	mov    rbx,rdi
  41fd34:	call   41fbc0 <strcmp@plt+0x1c408>
  41fd39:	mov    rdi,rbx
  41fd3c:	call   4037b0 <free@plt>
  41fd41:	sub    DWORD PTR [rip+0x4e40c],0x1        # 46e154 <strcmp@plt+0x6a99c>
  41fd48:	pop    rbx
  41fd49:	ret    
  41fd4a:	nop    WORD PTR [rax+rax*1+0x0]
  41fd50:	push   r13
  41fd52:	push   r12
  41fd54:	push   rbp
  41fd55:	push   rbx
  41fd56:	sub    rsp,0x418
  41fd5d:	mov    rax,QWORD PTR fs:0x28
  41fd66:	mov    QWORD PTR [rsp+0x408],rax
  41fd6e:	xor    eax,eax
  41fd70:	test   rsi,rsi
  41fd73:	je     41fe19 <strcmp@plt+0x1c661>
  41fd79:	mov    rbx,QWORD PTR [rdi]
  41fd7c:	test   rbx,rbx
  41fd7f:	je     41fde1 <strcmp@plt+0x1c629>
  41fd81:	mov    rbp,rsi
  41fd84:	mov    r12,rsp
  41fd87:	mov    r13,rsp
  41fd8a:	mov    rdi,QWORD PTR [rbx+0x8]
  41fd8e:	test   rdi,rdi
  41fd91:	je     41fd9b <strcmp@plt+0x1c5e3>
  41fd93:	mov    rsi,QWORD PTR [rbx+0x28]
  41fd97:	xor    eax,eax
  41fd99:	call   rbp
  41fd9b:	mov    rax,QWORD PTR [rbx+0x10]
  41fd9f:	test   rax,rax
  41fda2:	je     41fdca <strcmp@plt+0x1c612>
  41fda4:	mov    rdx,QWORD PTR [rbx+0x18]
  41fda8:	test   rdx,rdx
  41fdab:	je     41fe08 <strcmp@plt+0x1c650>
  41fdad:	mov    rbx,rax
  41fdb0:	mov    QWORD PTR [r13+0x0],rdx
  41fdb4:	add    r13,0x8
  41fdb8:	mov    rdi,QWORD PTR [rbx+0x8]
  41fdbc:	test   rdi,rdi
  41fdbf:	jne    41fd93 <strcmp@plt+0x1c5db>
  41fdc1:	mov    rax,QWORD PTR [rbx+0x10]
  41fdc5:	test   rax,rax
  41fdc8:	jne    41fda4 <strcmp@plt+0x1c5ec>
  41fdca:	mov    rbx,QWORD PTR [rbx+0x18]
  41fdce:	test   rbx,rbx
  41fdd1:	jne    41fd8a <strcmp@plt+0x1c5d2>
  41fdd3:	cmp    r13,r12
  41fdd6:	je     41fde1 <strcmp@plt+0x1c629>
  41fdd8:	mov    rbx,QWORD PTR [r13-0x8]
  41fddc:	test   rbx,rbx
  41fddf:	jne    41fe10 <strcmp@plt+0x1c658>
  41fde1:	mov    rax,QWORD PTR [rsp+0x408]
  41fde9:	xor    rax,QWORD PTR fs:0x28
  41fdf2:	jne    41fe38 <strcmp@plt+0x1c680>
  41fdf4:	add    rsp,0x418
  41fdfb:	pop    rbx
  41fdfc:	pop    rbp
  41fdfd:	pop    r12
  41fdff:	pop    r13
  41fe01:	ret    
  41fe02:	nop    WORD PTR [rax+rax*1+0x0]
  41fe08:	mov    rbx,rax
  41fe0b:	jmp    41fd8a <strcmp@plt+0x1c5d2>
  41fe10:	sub    r13,0x8
  41fe14:	jmp    41fd8a <strcmp@plt+0x1c5d2>
  41fe19:	lea    rcx,[rip+0x2ce30]        # 44cc50 <strcmp@plt+0x49498>
  41fe20:	lea    rsi,[rip+0x2cae0]        # 44c907 <strcmp@plt+0x4914f>
  41fe27:	lea    rdi,[rip+0x2cb9a]        # 44c9c8 <strcmp@plt+0x49210>
  41fe2e:	mov    edx,0x18d
  41fe33:	call   4032c0 <__assert_fail@plt>
  41fe38:	call   403460 <__stack_chk_fail@plt>
  41fe3d:	nop    DWORD PTR [rax]
  41fe40:	push   r13
  41fe42:	push   r12
  41fe44:	push   rbp
  41fe45:	push   rbx
  41fe46:	sub    rsp,0x8
  41fe4a:	test   rsi,rsi
  41fe4d:	je     41fea8 <strcmp@plt+0x1c6f0>
  41fe4f:	mov    rbx,rdi
  41fe52:	mov    r13,rsi
  41fe55:	xor    r12d,r12d
  41fe58:	jmp    41fe63 <strcmp@plt+0x1c6ab>
  41fe5a:	nop    WORD PTR [rax+rax*1+0x0]
  41fe60:	add    r12,rbp
  41fe63:	mov    rdi,QWORD PTR [rbx+0x10]
  41fe67:	xor    ebp,ebp
  41fe69:	test   rdi,rdi
  41fe6c:	je     41fe79 <strcmp@plt+0x1c6c1>
  41fe6e:	mov    rsi,r13
  41fe71:	call   41fe40 <strcmp@plt+0x1c688>
  41fe76:	mov    rbp,rax
  41fe79:	mov    rdi,QWORD PTR [rbx+0x8]
  41fe7d:	test   rdi,rdi
  41fe80:	je     41fe8f <strcmp@plt+0x1c6d7>
  41fe82:	add    rbp,0x1
  41fe86:	mov    rsi,QWORD PTR [rbx+0x28]
  41fe8a:	xor    eax,eax
  41fe8c:	call   r13
  41fe8f:	mov    rbx,QWORD PTR [rbx+0x18]
  41fe93:	test   rbx,rbx
  41fe96:	jne    41fe60 <strcmp@plt+0x1c6a8>
  41fe98:	add    rsp,0x8
  41fe9c:	lea    rax,[rbp+r12*1+0x0]
  41fea1:	pop    rbx
  41fea2:	pop    rbp
  41fea3:	pop    r12
  41fea5:	pop    r13
  41fea7:	ret    
  41fea8:	lea    rcx,[rip+0x2cd81]        # 44cc30 <strcmp@plt+0x49478>
  41feaf:	lea    rsi,[rip+0x2ca51]        # 44c907 <strcmp@plt+0x4914f>
  41feb6:	lea    rdi,[rip+0x2cb0b]        # 44c9c8 <strcmp@plt+0x49210>
  41febd:	mov    edx,0x198
  41fec2:	call   4032c0 <__assert_fail@plt>
  41fec7:	nop    WORD PTR [rax+rax*1+0x0]
  41fed0:	test   rdi,rdi
  41fed3:	push   r12
  41fed5:	push   rbp
  41fed6:	push   rbx
  41fed7:	je     420006 <strcmp@plt+0x1c84e>
  41fedd:	test   rsi,rsi
  41fee0:	je     41ffe7 <strcmp@plt+0x1c82f>
  41fee6:	movzx  ebp,WORD PTR [rsi+0x2]
  41feea:	cmp    ebp,DWORD PTR [rdi+0x8]
  41feed:	ja     41ffc8 <strcmp@plt+0x1c810>
  41fef3:	mov    rbx,QWORD PTR [rdi]
  41fef6:	test   rbx,rbx
  41fef9:	je     41ff80 <strcmp@plt+0x1c7c8>
  41feff:	lea    r9,[rsi+0x8]
  41ff03:	mov    edx,0x80
  41ff08:	jmp    41ff35 <strcmp@plt+0x1c77d>
  41ff0a:	nop    WORD PTR [rax+rax*1+0x0]
  41ff10:	mov    ecx,eax
  41ff12:	and    eax,0x7
  41ff15:	mov    r8,QWORD PTR [rbx+0x10]
  41ff19:	shr    ecx,0x3
  41ff1c:	sarx   eax,edx,eax
  41ff21:	movzx  ecx,BYTE PTR [r9+rcx*1]
  41ff26:	test   ecx,eax
  41ff28:	cmovne r8,QWORD PTR [rbx+0x18]
  41ff2d:	test   r8,r8
  41ff30:	mov    rbx,r8
  41ff33:	je     41ff80 <strcmp@plt+0x1c7c8>
  41ff35:	mov    eax,DWORD PTR [rbx]
  41ff37:	cmp    ebp,eax
  41ff39:	ja     41ff10 <strcmp@plt+0x1c758>
  41ff3b:	jb     41ff80 <strcmp@plt+0x1c7c8>
  41ff3d:	mov    rdx,QWORD PTR [rbx+0x8]
  41ff41:	test   rdx,rdx
  41ff44:	je     41ff80 <strcmp@plt+0x1c7c8>
  41ff46:	cmp    ebp,eax
  41ff48:	jne    41ff8a <strcmp@plt+0x1c7d2>
  41ff4a:	movzx  eax,WORD PTR [rdx+0x2]
  41ff4e:	cmp    ebp,eax
  41ff50:	jne    41ffa9 <strcmp@plt+0x1c7f1>
  41ff52:	mov    rdi,rsi
  41ff55:	call   41f420 <strcmp@plt+0x1bc68>
  41ff5a:	mov    rdi,QWORD PTR [rbx+0x8]
  41ff5e:	mov    r12,rax
  41ff61:	call   41f420 <strcmp@plt+0x1bc68>
  41ff66:	mov    edx,ebp
  41ff68:	mov    rsi,r12
  41ff6b:	mov    rdi,rax
  41ff6e:	call   41f440 <strcmp@plt+0x1bc88>
  41ff73:	test   eax,eax
  41ff75:	jne    41ff82 <strcmp@plt+0x1c7ca>
  41ff77:	nop    WORD PTR [rax+rax*1+0x0]
  41ff80:	xor    ebx,ebx
  41ff82:	mov    rax,rbx
  41ff85:	pop    rbx
  41ff86:	pop    rbp
  41ff87:	pop    r12
  41ff89:	ret    
  41ff8a:	lea    rcx,[rip+0x2cc7f]        # 44cc10 <strcmp@plt+0x49458>
  41ff91:	lea    rsi,[rip+0x2c96f]        # 44c907 <strcmp@plt+0x4914f>
  41ff98:	lea    rdi,[rip+0x2ca2e]        # 44c9cd <strcmp@plt+0x49215>
  41ff9f:	mov    edx,0x1e1
  41ffa4:	call   4032c0 <__assert_fail@plt>
  41ffa9:	lea    rcx,[rip+0x2cc60]        # 44cc10 <strcmp@plt+0x49458>
  41ffb0:	lea    rsi,[rip+0x2c950]        # 44c907 <strcmp@plt+0x4914f>
  41ffb7:	lea    rdi,[rip+0x2cbea]        # 44cba8 <strcmp@plt+0x493f0>
  41ffbe:	mov    edx,0x1e2
  41ffc3:	call   4032c0 <__assert_fail@plt>
  41ffc8:	lea    rcx,[rip+0x2cc41]        # 44cc10 <strcmp@plt+0x49458>
  41ffcf:	lea    rsi,[rip+0x2c931]        # 44c907 <strcmp@plt+0x4914f>
  41ffd6:	lea    rdi,[rip+0x2cba3]        # 44cb80 <strcmp@plt+0x493c8>
  41ffdd:	mov    edx,0x1b3
  41ffe2:	call   4032c0 <__assert_fail@plt>
  41ffe7:	lea    rcx,[rip+0x2cc22]        # 44cc10 <strcmp@plt+0x49458>
  41ffee:	lea    rsi,[rip+0x2c912]        # 44c907 <strcmp@plt+0x4914f>
  41fff5:	lea    rdi,[rip+0x34315]        # 454311 <strcmp@plt+0x50b59>
  41fffc:	mov    edx,0x1b2
  420001:	call   4032c0 <__assert_fail@plt>
  420006:	lea    rcx,[rip+0x2cc03]        # 44cc10 <strcmp@plt+0x49458>
  42000d:	lea    rsi,[rip+0x2c8f3]        # 44c907 <strcmp@plt+0x4914f>
  420014:	lea    rdi,[rip+0x2c992]        # 44c9ad <strcmp@plt+0x491f5>
  42001b:	mov    edx,0x1b1
  420020:	call   4032c0 <__assert_fail@plt>
  420025:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  420030:	push   r15
  420032:	push   r14
  420034:	push   r13
  420036:	push   r12
  420038:	push   rbp
  420039:	push   rbx
  42003a:	sub    rsp,0x428
  420041:	mov    rax,QWORD PTR fs:0x28
  42004a:	mov    QWORD PTR [rsp+0x418],rax
  420052:	xor    eax,eax
  420054:	test   rdi,rdi
  420057:	je     4201bb <strcmp@plt+0x1ca03>
  42005d:	test   rsi,rsi
  420060:	mov    rbp,rsi
  420063:	je     42019c <strcmp@plt+0x1c9e4>
  420069:	movzx  ebx,WORD PTR [rsi+0x2]
  42006d:	cmp    ebx,DWORD PTR [rdi+0x8]
  420070:	ja     42017d <strcmp@plt+0x1c9c5>
  420076:	mov    rcx,QWORD PTR [rdi]
  420079:	test   rcx,rcx
  42007c:	je     420152 <strcmp@plt+0x1c99a>
  420082:	lea    r10,[rsi+0x8]
  420086:	xor    edi,edi
  420088:	mov    r9d,0x80
  42008e:	jmp    4200c7 <strcmp@plt+0x1c90f>
  420090:	cmp    QWORD PTR [rcx+0x8],0x0
  420095:	je     4200a2 <strcmp@plt+0x1c8ea>
  420097:	movsxd rsi,edi
  42009a:	add    edi,0x1
  42009d:	mov    QWORD PTR [rsp+rsi*8+0x10],rcx
  4200a2:	mov    esi,eax
  4200a4:	and    eax,0x7
  4200a7:	mov    r8,QWORD PTR [rcx+0x10]
  4200ab:	shr    esi,0x3
  4200ae:	sarx   eax,r9d,eax
  4200b3:	movzx  esi,BYTE PTR [r10+rsi*1]
  4200b8:	test   esi,eax
  4200ba:	cmovne r8,QWORD PTR [rcx+0x18]
  4200bf:	test   r8,r8
  4200c2:	mov    rcx,r8
  4200c5:	je     4200e8 <strcmp@plt+0x1c930>
  4200c7:	mov    eax,DWORD PTR [rcx]
  4200c9:	cmp    ebx,eax
  4200cb:	ja     420090 <strcmp@plt+0x1c8d8>
  4200cd:	test   edx,edx
  4200cf:	je     4200e8 <strcmp@plt+0x1c930>
  4200d1:	cmp    QWORD PTR [rcx+0x8],0x0
  4200d6:	je     4200e8 <strcmp@plt+0x1c930>
  4200d8:	movsxd rax,edi
  4200db:	add    edi,0x1
  4200de:	mov    QWORD PTR [rsp+rax*8+0x10],rcx
  4200e3:	jmp    4200ec <strcmp@plt+0x1c934>
  4200e5:	nop    DWORD PTR [rax]
  4200e8:	test   edi,edi
  4200ea:	je     420152 <strcmp@plt+0x1c99a>
  4200ec:	sub    edi,0x1
  4200ef:	lea    rax,[rsp+0x8]
  4200f4:	movsxd rdi,edi
  4200f7:	lea    r12,[rsp+rdi*8+0x10]
  4200fc:	mov    QWORD PTR [rsp+0x8],rax
  420101:	jmp    42014b <strcmp@plt+0x1c993>
  420103:	nop    DWORD PTR [rax+rax*1+0x0]
  420108:	mov    r13,QWORD PTR [r12]
  42010c:	mov    rdi,rbp
  42010f:	mov    rax,QWORD PTR [r13+0x8]
  420113:	movzx  r14d,WORD PTR [rax+0x2]
  420118:	call   41f420 <strcmp@plt+0x1bc68>
  42011d:	mov    rdi,QWORD PTR [r13+0x8]
  420121:	mov    r15,rax
  420124:	call   41f420 <strcmp@plt+0x1bc68>
  420129:	mov    edx,r14d
  42012c:	mov    rsi,r15
  42012f:	mov    rdi,rax
  420132:	call   41f440 <strcmp@plt+0x1bc88>
  420137:	test   eax,eax
  420139:	je     420147 <strcmp@plt+0x1c98f>
  42013b:	mov    rax,QWORD PTR [r13+0x8]
  42013f:	movzx  eax,WORD PTR [rax+0x2]
  420143:	cmp    ebx,eax
  420145:	jae    420155 <strcmp@plt+0x1c99d>
  420147:	sub    r12,0x8
  42014b:	cmp    r12,QWORD PTR [rsp+0x8]
  420150:	jne    420108 <strcmp@plt+0x1c950>
  420152:	xor    r13d,r13d
  420155:	mov    rdx,QWORD PTR [rsp+0x418]
  42015d:	xor    rdx,QWORD PTR fs:0x28
  420166:	mov    rax,r13
  420169:	jne    4201da <strcmp@plt+0x1ca22>
  42016b:	add    rsp,0x428
  420172:	pop    rbx
  420173:	pop    rbp
  420174:	pop    r12
  420176:	pop    r13
  420178:	pop    r14
  42017a:	pop    r15
  42017c:	ret    
  42017d:	lea    rcx,[rip+0x2ca6c]        # 44cbf0 <strcmp@plt+0x49438>
  420184:	lea    rsi,[rip+0x2c77c]        # 44c907 <strcmp@plt+0x4914f>
  42018b:	lea    rdi,[rip+0x2c9ee]        # 44cb80 <strcmp@plt+0x493c8>
  420192:	mov    edx,0x1fb
  420197:	call   4032c0 <__assert_fail@plt>
  42019c:	lea    rcx,[rip+0x2ca4d]        # 44cbf0 <strcmp@plt+0x49438>
  4201a3:	lea    rsi,[rip+0x2c75d]        # 44c907 <strcmp@plt+0x4914f>
  4201aa:	lea    rdi,[rip+0x34160]        # 454311 <strcmp@plt+0x50b59>
  4201b1:	mov    edx,0x1fa
  4201b6:	call   4032c0 <__assert_fail@plt>
  4201bb:	lea    rcx,[rip+0x2ca2e]        # 44cbf0 <strcmp@plt+0x49438>
  4201c2:	lea    rsi,[rip+0x2c73e]        # 44c907 <strcmp@plt+0x4914f>
  4201c9:	lea    rdi,[rip+0x2c7dd]        # 44c9ad <strcmp@plt+0x491f5>
  4201d0:	mov    edx,0x1f9
  4201d5:	call   4032c0 <__assert_fail@plt>
  4201da:	call   403460 <__stack_chk_fail@plt>
  4201df:	nop
  4201e0:	mov    edx,0x1
  4201e5:	jmp    420030 <strcmp@plt+0x1c878>
  4201ea:	nop    WORD PTR [rax+rax*1+0x0]
  4201f0:	push   r15
  4201f2:	push   r14
  4201f4:	push   r13
  4201f6:	push   r12
  4201f8:	push   rbp
  4201f9:	push   rbx
  4201fa:	sub    rsp,0x18
  4201fe:	test   rdi,rdi
  420201:	je     420755 <strcmp@plt+0x1cf9d>
  420207:	test   rsi,rsi
  42020a:	mov    r12,rsi
  42020d:	je     420736 <strcmp@plt+0x1cf7e>
  420213:	movzx  ebx,WORD PTR [rsi+0x2]
  420217:	mov    esi,DWORD PTR [rdi+0x8]
  42021a:	mov    rbp,rdi
  42021d:	cmp    ebx,esi
  42021f:	mov    r13d,ebx
  420222:	ja     4206ba <strcmp@plt+0x1cf02>
  420228:	mov    rdx,QWORD PTR [rdi]
  42022b:	mov    r8d,0x80
  420231:	lea    rdi,[r12+0x8]
  420236:	test   rdx,rdx
  420239:	jne    420265 <strcmp@plt+0x1caad>
  42023b:	jmp    4205f8 <strcmp@plt+0x1ce40>
  420240:	mov    ecx,eax
  420242:	shr    ecx,0x3
  420245:	movzx  r9d,BYTE PTR [rdi+rcx*1]
  42024a:	mov    ecx,eax
  42024c:	and    ecx,0x7
  42024f:	sarx   ecx,r8d,ecx
  420254:	test   r9d,ecx
  420257:	je     420278 <strcmp@plt+0x1cac0>
  420259:	mov    rcx,QWORD PTR [rdx+0x18]
  42025d:	test   rcx,rcx
  420260:	je     420281 <strcmp@plt+0x1cac9>
  420262:	mov    rdx,rcx
  420265:	mov    eax,DWORD PTR [rdx]
  420267:	cmp    ebx,eax
  420269:	ja     420274 <strcmp@plt+0x1cabc>
  42026b:	mov    rcx,QWORD PTR [rdx+0x8]
  42026f:	test   rcx,rcx
  420272:	jne    42028e <strcmp@plt+0x1cad6>
  420274:	cmp    esi,eax
  420276:	ja     420240 <strcmp@plt+0x1ca88>
  420278:	mov    rcx,QWORD PTR [rdx+0x10]
  42027c:	test   rcx,rcx
  42027f:	jne    420262 <strcmp@plt+0x1caaa>
  420281:	mov    rcx,QWORD PTR [rdx+0x8]
  420285:	test   rcx,rcx
  420288:	je     4206d9 <strcmp@plt+0x1cf21>
  42028e:	cmp    ebx,eax
  420290:	lea    r11,[rcx+0x8]
  420294:	cmovbe eax,ebx
  420297:	test   eax,eax
  420299:	je     4205e0 <strcmp@plt+0x1ce28>
  42029f:	movzx  esi,BYTE PTR [r12+0x8]
  4202a5:	movzx  ecx,BYTE PTR [rcx+0x8]
  4202a9:	cmp    sil,cl
  4202ac:	jne    4202e0 <strcmp@plt+0x1cb28>
  4202ae:	mov    ecx,0x8
  4202b3:	mov    r9d,0x1
  4202b9:	cmp    eax,ecx
  4202bb:	mov    r8d,ecx
  4202be:	jbe    42032b <strcmp@plt+0x1cb73>
  4202c0:	movzx  esi,BYTE PTR [rdi+r9*1]
  4202c5:	movzx  r10d,BYTE PTR [r11+r9*1]
  4202ca:	add    r9,0x1
  4202ce:	lea    ecx,[r8+0x8]
  4202d2:	cmp    sil,r10b
  4202d5:	je     4202b9 <strcmp@plt+0x1cb01>
  4202d7:	xor    esi,r10d
  4202da:	movzx  esi,sil
  4202de:	jmp    4202e9 <strcmp@plt+0x1cb31>
  4202e0:	xor    esi,ecx
  4202e2:	xor    r8d,r8d
  4202e5:	movzx  esi,sil
  4202e9:	xor    ecx,ecx
  4202eb:	mov    r9d,0x80
  4202f1:	nop    DWORD PTR [rax+0x0]
  4202f8:	sarx   edi,r9d,ecx
  4202fd:	test   edi,esi
  4202ff:	jne    420328 <strcmp@plt+0x1cb70>
  420301:	add    ecx,0x1
  420304:	cmp    ecx,0x8
  420307:	jne    4202f8 <strcmp@plt+0x1cb40>
  420309:	lea    rcx,[rip+0x2c8d0]        # 44cbe0 <strcmp@plt+0x49428>
  420310:	lea    rsi,[rip+0x2c5f0]        # 44c907 <strcmp@plt+0x4914f>
  420317:	lea    rdi,[rip+0x2c71a]        # 44ca38 <strcmp@plt+0x49280>
  42031e:	mov    edx,0x2a8
  420323:	call   4032c0 <__assert_fail@plt>
  420328:	add    ecx,r8d
  42032b:	mov    r8,QWORD PTR [rdx+0x20]
  42032f:	cmp    ecx,eax
  420331:	cmovbe eax,ecx
  420334:	mov    r14d,eax
  420337:	test   r8,r8
  42033a:	je     4205f0 <strcmp@plt+0x1ce38>
  420340:	cmp    eax,DWORD PTR [r8]
  420343:	jbe    420358 <strcmp@plt+0x1cba0>
  420345:	jmp    4205f0 <strcmp@plt+0x1ce38>
  42034a:	nop    WORD PTR [rax+rax*1+0x0]
  420350:	cmp    DWORD PTR [rax],r14d
  420353:	jb     420361 <strcmp@plt+0x1cba9>
  420355:	mov    r8,rax
  420358:	mov    rax,QWORD PTR [r8+0x20]
  42035c:	test   rax,rax
  42035f:	jne    420350 <strcmp@plt+0x1cb98>
  420361:	cmp    ebx,r14d
  420364:	jne    420420 <strcmp@plt+0x1cc68>
  42036a:	cmp    ebx,DWORD PTR [r8]
  42036d:	je     420590 <strcmp@plt+0x1cdd8>
  420373:	mov    esi,0x38
  420378:	mov    edi,0x1
  42037d:	mov    QWORD PTR [rsp+0x8],r8
  420382:	mov    QWORD PTR [rsp],r11
  420386:	call   434750 <strcmp@plt+0x30f98>
  42038b:	mov    r15,rax
  42038e:	movzx  eax,WORD PTR [r12+0x2]
  420394:	mov    rdi,r12
  420397:	mov    DWORD PTR [r15],eax
  42039a:	call   41fad0 <strcmp@plt+0x1c318>
  42039f:	mov    r8,QWORD PTR [rsp+0x8]
  4203a4:	mov    QWORD PTR [r15+0x8],rax
  4203a8:	mov    QWORD PTR [r15+0x20],0x0
  4203b0:	mov    QWORD PTR [r15+0x18],0x0
  4203b8:	mov    QWORD PTR [r15+0x10],0x0
  4203c0:	mov    QWORD PTR [r15+0x28],0x0
  4203c8:	add    DWORD PTR [rbp+0xc],0x1
  4203cc:	cmp    ebx,DWORD PTR [r8]
  4203cf:	mov    r11,QWORD PTR [rsp]
  4203d3:	je     4204e4 <strcmp@plt+0x1cd2c>
  4203d9:	cmp    ebx,DWORD PTR [rbp+0x8]
  4203dc:	jb     420553 <strcmp@plt+0x1cd9b>
  4203e2:	mov    QWORD PTR [r15+0x10],r8
  4203e6:	mov    rax,QWORD PTR [r8+0x20]
  4203ea:	mov    QWORD PTR [r15+0x20],rax
  4203ee:	mov    rax,QWORD PTR [r8+0x20]
  4203f2:	test   rax,rax
  4203f5:	je     42065b <strcmp@plt+0x1cea3>
  4203fb:	cmp    QWORD PTR [rax+0x18],r8
  4203ff:	je     420673 <strcmp@plt+0x1cebb>
  420405:	mov    QWORD PTR [rax+0x10],r15
  420409:	mov    QWORD PTR [r8+0x20],r15
  42040d:	add    rsp,0x18
  420411:	mov    rax,r15
  420414:	pop    rbx
  420415:	pop    rbp
  420416:	pop    r12
  420418:	pop    r13
  42041a:	pop    r14
  42041c:	pop    r15
  42041e:	ret    
  42041f:	nop
  420420:	mov    esi,0x38
  420425:	mov    edi,0x1
  42042a:	mov    QWORD PTR [rsp],r8
  42042e:	call   434750 <strcmp@plt+0x30f98>
  420433:	mov    r15,rax
  420436:	movzx  eax,WORD PTR [r12+0x2]
  42043c:	mov    rdi,r12
  42043f:	mov    DWORD PTR [r15],eax
  420442:	call   41fad0 <strcmp@plt+0x1c318>
  420447:	mov    r8,QWORD PTR [rsp]
  42044b:	mov    QWORD PTR [r15+0x8],rax
  42044f:	mov    QWORD PTR [r15+0x20],0x0
  420457:	mov    QWORD PTR [r15+0x18],0x0
  42045f:	mov    QWORD PTR [r15+0x10],0x0
  420467:	mov    QWORD PTR [r15+0x28],0x0
  42046f:	add    DWORD PTR [rbp+0xc],0x1
  420473:	cmp    r14d,DWORD PTR [r8]
  420476:	je     4204e4 <strcmp@plt+0x1cd2c>
  420478:	mov    esi,0x38
  42047d:	mov    edi,0x1
  420482:	mov    QWORD PTR [rsp],r8
  420486:	call   434750 <strcmp@plt+0x30f98>
  42048b:	mov    r8,QWORD PTR [rsp]
  42048f:	mov    DWORD PTR [rax],r14d
  420492:	mov    QWORD PTR [rax+0x8],0x0
  42049a:	mov    rcx,QWORD PTR [r8+0x20]
  42049e:	mov    QWORD PTR [rax+0x28],0x0
  4204a6:	mov    QWORD PTR [rax+0x20],rcx
  4204aa:	add    DWORD PTR [rbp+0xc],0x1
  4204ae:	cmp    DWORD PTR [rbp+0x8],r14d
  4204b2:	ja     420524 <strcmp@plt+0x1cd6c>
  4204b4:	mov    QWORD PTR [rax+0x18],r8
  4204b8:	mov    QWORD PTR [rax+0x10],r15
  4204bc:	mov    QWORD PTR [r15+0x20],rax
  4204c0:	mov    rcx,QWORD PTR [r8+0x20]
  4204c4:	test   rcx,rcx
  4204c7:	je     42064c <strcmp@plt+0x1ce94>
  4204cd:	cmp    QWORD PTR [rcx+0x18],r8
  4204d1:	je     42066a <strcmp@plt+0x1ceb2>
  4204d7:	mov    QWORD PTR [rcx+0x10],rax
  4204db:	mov    QWORD PTR [r8+0x20],rax
  4204df:	jmp    42040d <strcmp@plt+0x1cc55>
  4204e4:	cmp    DWORD PTR [rbp+0x8],r14d
  4204e8:	mov    QWORD PTR [r15+0x20],r8
  4204ec:	jbe    42057c <strcmp@plt+0x1cdc4>
  4204f2:	mov    eax,r14d
  4204f5:	and    r14d,0x7
  4204f9:	shr    eax,0x3
  4204fc:	movzx  esi,BYTE PTR [r12+rax*1+0x8]
  420502:	mov    eax,0x80
  420507:	sarx   eax,eax,r14d
  42050c:	test   esi,eax
  42050e:	je     42057c <strcmp@plt+0x1cdc4>
  420510:	cmp    QWORD PTR [r8+0x18],0x0
  420515:	jne    4206f8 <strcmp@plt+0x1cf40>
  42051b:	mov    QWORD PTR [r8+0x18],r15
  42051f:	jmp    42040d <strcmp@plt+0x1cc55>
  420524:	mov    ecx,r14d
  420527:	and    r14d,0x7
  42052b:	shr    ecx,0x3
  42052e:	movzx  esi,BYTE PTR [r12+rcx*1+0x8]
  420534:	mov    ecx,0x80
  420539:	sarx   ecx,ecx,r14d
  42053e:	test   esi,ecx
  420540:	je     4204b4 <strcmp@plt+0x1ccfc>
  420546:	mov    QWORD PTR [rax+0x18],r15
  42054a:	mov    QWORD PTR [rax+0x10],r8
  42054e:	jmp    4204bc <strcmp@plt+0x1cd04>
  420553:	mov    eax,ebx
  420555:	and    r13d,0x7
  420559:	shr    eax,0x3
  42055c:	movzx  ecx,BYTE PTR [r11+rax*1]
  420561:	mov    eax,0x80
  420566:	sarx   eax,eax,r13d
  42056b:	test   ecx,eax
  42056d:	je     4203e2 <strcmp@plt+0x1cc2a>
  420573:	mov    QWORD PTR [r15+0x18],r8
  420577:	jmp    4203e6 <strcmp@plt+0x1cc2e>
  42057c:	cmp    QWORD PTR [r8+0x10],0x0
  420581:	jne    420717 <strcmp@plt+0x1cf5f>
  420587:	mov    QWORD PTR [r8+0x10],r15
  42058b:	jmp    42040d <strcmp@plt+0x1cc55>
  420590:	cmp    QWORD PTR [r8+0x8],0x0
  420595:	mov    r15,r8
  420598:	jne    42040d <strcmp@plt+0x1cc55>
  42059e:	mov    rdi,r12
  4205a1:	mov    QWORD PTR [rsp],r8
  4205a5:	call   41fad0 <strcmp@plt+0x1c318>
  4205aa:	mov    r8,QWORD PTR [rsp]
  4205ae:	cmp    QWORD PTR [r8+0x28],0x0
  4205b3:	mov    QWORD PTR [r8+0x8],rax
  4205b7:	je     42040d <strcmp@plt+0x1cc55>
  4205bd:	lea    rcx,[rip+0x2c61c]        # 44cbe0 <strcmp@plt+0x49428>
  4205c4:	lea    rsi,[rip+0x2c33c]        # 44c907 <strcmp@plt+0x4914f>
  4205cb:	lea    rdi,[rip+0x2c41c]        # 44c9ee <strcmp@plt+0x49236>
  4205d2:	mov    edx,0x2cc
  4205d7:	call   4032c0 <__assert_fail@plt>
  4205dc:	nop    DWORD PTR [rax+0x0]
  4205e0:	mov    r8,QWORD PTR [rdx+0x20]
  4205e4:	xor    r14d,r14d
  4205e7:	test   r8,r8
  4205ea:	jne    420358 <strcmp@plt+0x1cba0>
  4205f0:	mov    r8,rdx
  4205f3:	jmp    420361 <strcmp@plt+0x1cba9>
  4205f8:	mov    esi,0x38
  4205fd:	mov    edi,0x1
  420602:	call   434750 <strcmp@plt+0x30f98>
  420607:	mov    r15,rax
  42060a:	movzx  eax,WORD PTR [r12+0x2]
  420610:	mov    rdi,r12
  420613:	mov    DWORD PTR [r15],eax
  420616:	call   41fad0 <strcmp@plt+0x1c318>
  42061b:	mov    QWORD PTR [r15+0x20],0x0
  420623:	mov    QWORD PTR [r15+0x8],rax
  420627:	mov    QWORD PTR [r15+0x18],0x0
  42062f:	mov    QWORD PTR [r15+0x10],0x0
  420637:	mov    QWORD PTR [r15+0x28],0x0
  42063f:	mov    QWORD PTR [rbp+0x0],r15
  420643:	add    DWORD PTR [rbp+0xc],0x1
  420647:	jmp    42040d <strcmp@plt+0x1cc55>
  42064c:	cmp    QWORD PTR [rbp+0x0],r8
  420650:	jne    42067c <strcmp@plt+0x1cec4>
  420652:	mov    QWORD PTR [rbp+0x0],rax
  420656:	jmp    4204db <strcmp@plt+0x1cd23>
  42065b:	cmp    QWORD PTR [rbp+0x0],r8
  42065f:	jne    42069b <strcmp@plt+0x1cee3>
  420661:	mov    QWORD PTR [rbp+0x0],r15
  420665:	jmp    420409 <strcmp@plt+0x1cc51>
  42066a:	mov    QWORD PTR [rcx+0x18],rax
  42066e:	jmp    4204db <strcmp@plt+0x1cd23>
  420673:	mov    QWORD PTR [rax+0x18],r15
  420677:	jmp    420409 <strcmp@plt+0x1cc51>
  42067c:	lea    rcx,[rip+0x2c55d]        # 44cbe0 <strcmp@plt+0x49428>
  420683:	lea    rsi,[rip+0x2c27d]        # 44c907 <strcmp@plt+0x4914f>
  42068a:	lea    rdi,[rip+0x2c390]        # 44ca21 <strcmp@plt+0x49269>
  420691:	mov    edx,0x316
  420696:	call   4032c0 <__assert_fail@plt>
  42069b:	lea    rcx,[rip+0x2c53e]        # 44cbe0 <strcmp@plt+0x49428>
  4206a2:	lea    rsi,[rip+0x2c25e]        # 44c907 <strcmp@plt+0x4914f>
  4206a9:	lea    rdi,[rip+0x2c371]        # 44ca21 <strcmp@plt+0x49269>
  4206b0:	mov    edx,0x2f4
  4206b5:	call   4032c0 <__assert_fail@plt>
  4206ba:	lea    rcx,[rip+0x2c51f]        # 44cbe0 <strcmp@plt+0x49428>
  4206c1:	lea    rsi,[rip+0x2c23f]        # 44c907 <strcmp@plt+0x4914f>
  4206c8:	lea    rdi,[rip+0x2c4b1]        # 44cb80 <strcmp@plt+0x493c8>
  4206cf:	mov    edx,0x25e
  4206d4:	call   4032c0 <__assert_fail@plt>
  4206d9:	lea    rcx,[rip+0x2c500]        # 44cbe0 <strcmp@plt+0x49428>
  4206e0:	lea    rsi,[rip+0x2c220]        # 44c907 <strcmp@plt+0x4914f>
  4206e7:	lea    rdi,[rip+0x2c2f3]        # 44c9e1 <strcmp@plt+0x49229>
  4206ee:	mov    edx,0x293
  4206f3:	call   4032c0 <__assert_fail@plt>
  4206f8:	lea    rcx,[rip+0x2c4e1]        # 44cbe0 <strcmp@plt+0x49428>
  4206ff:	lea    rsi,[rip+0x2c201]        # 44c907 <strcmp@plt+0x4914f>
  420706:	lea    rdi,[rip+0x2c2f4]        # 44ca01 <strcmp@plt+0x49249>
  42070d:	mov    edx,0x2dc
  420712:	call   4032c0 <__assert_fail@plt>
  420717:	lea    rcx,[rip+0x2c4c2]        # 44cbe0 <strcmp@plt+0x49428>
  42071e:	lea    rsi,[rip+0x2c1e2]        # 44c907 <strcmp@plt+0x4914f>
  420725:	lea    rdi,[rip+0x2c2e5]        # 44ca11 <strcmp@plt+0x49259>
  42072c:	mov    edx,0x2e0
  420731:	call   4032c0 <__assert_fail@plt>
  420736:	lea    rcx,[rip+0x2c4a3]        # 44cbe0 <strcmp@plt+0x49428>
  42073d:	lea    rsi,[rip+0x2c1c3]        # 44c907 <strcmp@plt+0x4914f>
  420744:	lea    rdi,[rip+0x33bc6]        # 454311 <strcmp@plt+0x50b59>
  42074b:	mov    edx,0x25d
  420750:	call   4032c0 <__assert_fail@plt>
  420755:	lea    rcx,[rip+0x2c484]        # 44cbe0 <strcmp@plt+0x49428>
  42075c:	lea    rsi,[rip+0x2c1a4]        # 44c907 <strcmp@plt+0x4914f>
  420763:	lea    rdi,[rip+0x2c243]        # 44c9ad <strcmp@plt+0x491f5>
  42076a:	mov    edx,0x25c
  42076f:	call   4032c0 <__assert_fail@plt>
  420774:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42077f:	nop
  420780:	push   r13
  420782:	push   r12
  420784:	push   rbp
  420785:	push   rbx
  420786:	sub    rsp,0x8
  42078a:	test   rdi,rdi
  42078d:	je     420908 <strcmp@plt+0x1d150>
  420793:	test   rsi,rsi
  420796:	mov    rbx,rsi
  420799:	je     4208e9 <strcmp@plt+0x1d131>
  42079f:	mov    r12,QWORD PTR [rsi+0x18]
  4207a3:	mov    rbp,rdi
  4207a6:	test   r12,r12
  4207a9:	je     420830 <strcmp@plt+0x1d078>
  4207af:	cmp    QWORD PTR [rsi+0x10],0x0
  4207b4:	je     4207e0 <strcmp@plt+0x1d028>
  4207b6:	mov    rdi,QWORD PTR [rsi+0x8]
  4207ba:	test   rdi,rdi
  4207bd:	je     4207c4 <strcmp@plt+0x1d00c>
  4207bf:	call   41fb10 <strcmp@plt+0x1c358>
  4207c4:	mov    QWORD PTR [rbx+0x8],0x0
  4207cc:	mov    QWORD PTR [rbx+0x28],0x0
  4207d4:	add    rsp,0x8
  4207d8:	pop    rbx
  4207d9:	pop    rbp
  4207da:	pop    r12
  4207dc:	pop    r13
  4207de:	ret    
  4207df:	nop
  4207e0:	mov    r13,QWORD PTR [rbx+0x20]
  4207e4:	mov    rdi,QWORD PTR [rbx+0x8]
  4207e8:	mov    QWORD PTR [r12+0x20],r13
  4207ed:	call   41fb10 <strcmp@plt+0x1c358>
  4207f2:	mov    rdi,rbx
  4207f5:	call   4037b0 <free@plt>
  4207fa:	sub    DWORD PTR [rbp+0xc],0x1
  4207fe:	test   r13,r13
  420801:	je     4208c8 <strcmp@plt+0x1d110>
  420807:	cmp    rbx,QWORD PTR [r13+0x18]
  42080b:	je     4208e0 <strcmp@plt+0x1d128>
  420811:	cmp    rbx,QWORD PTR [r13+0x10]
  420815:	jne    420964 <strcmp@plt+0x1d1ac>
  42081b:	mov    QWORD PTR [r13+0x10],r12
  42081f:	add    rsp,0x8
  420823:	pop    rbx
  420824:	pop    rbp
  420825:	pop    r12
  420827:	pop    r13
  420829:	ret    
  42082a:	nop    WORD PTR [rax+rax*1+0x0]
  420830:	mov    r12,QWORD PTR [rsi+0x10]
  420834:	test   r12,r12
  420837:	jne    4207e0 <strcmp@plt+0x1d028>
  420839:	mov    rdi,QWORD PTR [rsi+0x8]
  42083d:	mov    r12,QWORD PTR [rsi+0x20]
  420841:	call   41fb10 <strcmp@plt+0x1c358>
  420846:	mov    rdi,rbx
  420849:	call   4037b0 <free@plt>
  42084e:	sub    DWORD PTR [rbp+0xc],0x1
  420852:	test   r12,r12
  420855:	je     42093a <strcmp@plt+0x1d182>
  42085b:	mov    rax,QWORD PTR [r12+0x18]
  420860:	cmp    rbx,rax
  420863:	je     420927 <strcmp@plt+0x1d16f>
  420869:	cmp    rbx,QWORD PTR [r12+0x10]
  42086e:	jne    4209ab <strcmp@plt+0x1d1f3>
  420874:	mov    QWORD PTR [r12+0x10],0x0
  42087d:	cmp    QWORD PTR [r12+0x8],0x0
  420883:	jne    4207d4 <strcmp@plt+0x1d01c>
  420889:	mov    rdx,QWORD PTR [r12+0x20]
  42088e:	test   rdx,rdx
  420891:	je     420951 <strcmp@plt+0x1d199>
  420897:	cmp    r12,QWORD PTR [rdx+0x18]
  42089b:	je     420983 <strcmp@plt+0x1d1cb>
  4208a1:	cmp    r12,QWORD PTR [rdx+0x10]
  4208a5:	jne    42098c <strcmp@plt+0x1d1d4>
  4208ab:	mov    QWORD PTR [rdx+0x10],rax
  4208af:	mov    QWORD PTR [rax+0x20],rdx
  4208b3:	mov    rdi,r12
  4208b6:	call   4037b0 <free@plt>
  4208bb:	sub    DWORD PTR [rbp+0xc],0x1
  4208bf:	jmp    4207d4 <strcmp@plt+0x1d01c>
  4208c4:	nop    DWORD PTR [rax+0x0]
  4208c8:	cmp    rbx,QWORD PTR [rbp+0x0]
  4208cc:	jne    4209e9 <strcmp@plt+0x1d231>
  4208d2:	mov    QWORD PTR [rbp+0x0],r12
  4208d6:	jmp    4207d4 <strcmp@plt+0x1d01c>
  4208db:	nop    DWORD PTR [rax+rax*1+0x0]
  4208e0:	mov    QWORD PTR [r13+0x18],r12
  4208e4:	jmp    4207d4 <strcmp@plt+0x1d01c>
  4208e9:	lea    rcx,[rip+0x2c2e0]        # 44cbd0 <strcmp@plt+0x49418>
  4208f0:	lea    rsi,[rip+0x2c010]        # 44c907 <strcmp@plt+0x4914f>
  4208f7:	lea    rdi,[rip+0x2c135]        # 44ca33 <strcmp@plt+0x4927b>
  4208fe:	mov    edx,0x32f
  420903:	call   4032c0 <__assert_fail@plt>
  420908:	lea    rcx,[rip+0x2c2c1]        # 44cbd0 <strcmp@plt+0x49418>
  42090f:	lea    rsi,[rip+0x2bff1]        # 44c907 <strcmp@plt+0x4914f>
  420916:	lea    rdi,[rip+0x2c090]        # 44c9ad <strcmp@plt+0x491f5>
  42091d:	mov    edx,0x32e
  420922:	call   4032c0 <__assert_fail@plt>
  420927:	mov    QWORD PTR [r12+0x18],0x0
  420930:	mov    rax,QWORD PTR [r12+0x10]
  420935:	jmp    42087d <strcmp@plt+0x1d0c5>
  42093a:	cmp    rbx,QWORD PTR [rbp+0x0]
  42093e:	jne    4209ca <strcmp@plt+0x1d212>
  420944:	mov    QWORD PTR [rbp+0x0],0x0
  42094c:	jmp    4207d4 <strcmp@plt+0x1d01c>
  420951:	cmp    r12,QWORD PTR [rbp+0x0]
  420955:	jne    420a08 <strcmp@plt+0x1d250>
  42095b:	mov    QWORD PTR [rbp+0x0],rax
  42095f:	jmp    4208af <strcmp@plt+0x1d0f7>
  420964:	lea    rcx,[rip+0x2c265]        # 44cbd0 <strcmp@plt+0x49418>
  42096b:	lea    rsi,[rip+0x2bf95]        # 44c907 <strcmp@plt+0x4914f>
  420972:	lea    rdi,[rip+0x2c0c5]        # 44ca3e <strcmp@plt+0x49286>
  420979:	mov    edx,0x38d
  42097e:	call   4032c0 <__assert_fail@plt>
  420983:	mov    QWORD PTR [rdx+0x18],rax
  420987:	jmp    4208af <strcmp@plt+0x1d0f7>
  42098c:	lea    rcx,[rip+0x2c23d]        # 44cbd0 <strcmp@plt+0x49418>
  420993:	lea    rsi,[rip+0x2bf6d]        # 44c907 <strcmp@plt+0x4914f>
  42099a:	lea    rdi,[rip+0x2c0c8]        # 44ca69 <strcmp@plt+0x492b1>
  4209a1:	mov    edx,0x368
  4209a6:	call   4032c0 <__assert_fail@plt>
  4209ab:	lea    rcx,[rip+0x2c21e]        # 44cbd0 <strcmp@plt+0x49418>
  4209b2:	lea    rsi,[rip+0x2bf4e]        # 44c907 <strcmp@plt+0x4914f>
  4209b9:	lea    rdi,[rip+0x2c07e]        # 44ca3e <strcmp@plt+0x49286>
  4209c0:	mov    edx,0x356
  4209c5:	call   4032c0 <__assert_fail@plt>
  4209ca:	lea    rcx,[rip+0x2c1ff]        # 44cbd0 <strcmp@plt+0x49418>
  4209d1:	lea    rsi,[rip+0x2bf2f]        # 44c907 <strcmp@plt+0x4914f>
  4209d8:	lea    rdi,[rip+0x2c042]        # 44ca21 <strcmp@plt+0x49269>
  4209df:	mov    edx,0x34c
  4209e4:	call   4032c0 <__assert_fail@plt>
  4209e9:	lea    rcx,[rip+0x2c1e0]        # 44cbd0 <strcmp@plt+0x49418>
  4209f0:	lea    rsi,[rip+0x2bf10]        # 44c907 <strcmp@plt+0x4914f>
  4209f7:	lea    rdi,[rip+0x2c023]        # 44ca21 <strcmp@plt+0x49269>
  4209fe:	mov    edx,0x384
  420a03:	call   4032c0 <__assert_fail@plt>
  420a08:	lea    rcx,[rip+0x2c1c1]        # 44cbd0 <strcmp@plt+0x49418>
  420a0f:	lea    rsi,[rip+0x2bef1]        # 44c907 <strcmp@plt+0x4914f>
  420a16:	lea    rdi,[rip+0x2c033]        # 44ca50 <strcmp@plt+0x49298>
  420a1d:	mov    edx,0x361
  420a22:	call   4032c0 <__assert_fail@plt>
  420a27:	nop    WORD PTR [rax+rax*1+0x0]
  420a30:	push   rbp
  420a31:	push   rbx
  420a32:	mov    rbp,rdi
  420a35:	mov    edi,esi
  420a37:	mov    rsi,rdx
  420a3a:	sub    rsp,0x8
  420a3e:	call   41f8f0 <strcmp@plt+0x1c138>
  420a43:	mov    rdi,rbp
  420a46:	mov    rbx,rax
  420a49:	mov    rsi,rax
  420a4c:	call   4201f0 <strcmp@plt+0x1ca38>
  420a51:	mov    rdi,rbx
  420a54:	mov    rbp,rax
  420a57:	call   41fb10 <strcmp@plt+0x1c358>
  420a5c:	add    rsp,0x8
  420a60:	mov    rax,rbp
  420a63:	pop    rbx
  420a64:	pop    rbp
  420a65:	ret    
  420a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420a70:	push   rbp
  420a71:	push   rbx
  420a72:	mov    rbp,rdi
  420a75:	mov    edi,esi
  420a77:	mov    rsi,rdx
  420a7a:	sub    rsp,0x8
  420a7e:	call   41f8f0 <strcmp@plt+0x1c138>
  420a83:	mov    rdi,rbp
  420a86:	mov    rbx,rax
  420a89:	mov    rsi,rax
  420a8c:	call   41fed0 <strcmp@plt+0x1c718>
  420a91:	mov    rdi,rbx
  420a94:	mov    rbp,rax
  420a97:	call   41fb10 <strcmp@plt+0x1c358>
  420a9c:	add    rsp,0x8
  420aa0:	mov    rax,rbp
  420aa3:	pop    rbx
  420aa4:	pop    rbp
  420aa5:	ret    
  420aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420ab0:	push   rbx
  420ab1:	mov    rbx,rdi
  420ab4:	call   420a70 <strcmp@plt+0x1d2b8>
  420ab9:	test   rax,rax
  420abc:	je     420ad0 <strcmp@plt+0x1d318>
  420abe:	mov    rdi,rbx
  420ac1:	mov    rsi,rax
  420ac4:	pop    rbx
  420ac5:	jmp    420780 <strcmp@plt+0x1cfc8>
  420aca:	nop    WORD PTR [rax+rax*1+0x0]
  420ad0:	pop    rbx
  420ad1:	ret    
  420ad2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  420add:	nop    DWORD PTR [rax]
  420ae0:	push   r12
  420ae2:	push   rbp
  420ae3:	mov    rbp,rdi
  420ae6:	push   rbx
  420ae7:	mov    edi,esi
  420ae9:	mov    rsi,rdx
  420aec:	call   41f8f0 <strcmp@plt+0x1c138>
  420af1:	movzx  r12d,WORD PTR [rax+0x2]
  420af6:	mov    rdi,rax
  420af9:	mov    rbx,rax
  420afc:	call   41f7d0 <strcmp@plt+0x1c018>
  420b01:	lea    rsi,[rip+0x2bf7d]        # 44ca85 <strcmp@plt+0x492cd>
  420b08:	mov    rdx,rax
  420b0b:	mov    edi,0x1
  420b10:	xor    eax,eax
  420b12:	mov    ecx,r12d
  420b15:	call   403030 <__printf_chk@plt>
  420b1a:	mov    rdi,rbp
  420b1d:	mov    rsi,rbx
  420b20:	call   4201e0 <strcmp@plt+0x1ca28>
  420b25:	test   rax,rax
  420b28:	mov    rbp,rax
  420b2b:	je     420b68 <strcmp@plt+0x1d3b0>
  420b2d:	mov    rdi,QWORD PTR [rax+0x8]
  420b31:	movzx  r12d,WORD PTR [rdi+0x2]
  420b36:	call   41f7d0 <strcmp@plt+0x1c018>
  420b3b:	lea    rsi,[rip+0x2bf76]        # 44cab8 <strcmp@plt+0x49300>
  420b42:	mov    rdx,rax
  420b45:	mov    edi,0x1
  420b4a:	xor    eax,eax
  420b4c:	mov    ecx,r12d
  420b4f:	call   403030 <__printf_chk@plt>
  420b54:	mov    rdi,rbx
  420b57:	call   41fb10 <strcmp@plt+0x1c358>
  420b5c:	mov    rax,rbp
  420b5f:	pop    rbx
  420b60:	pop    rbp
  420b61:	pop    r12
  420b63:	ret    
  420b64:	nop    DWORD PTR [rax+0x0]
  420b68:	lea    rdi,[rip+0x2bf2e]        # 44ca9d <strcmp@plt+0x492e5>
  420b6f:	call   403600 <puts@plt>
  420b74:	mov    rdi,rbx
  420b77:	call   41fb10 <strcmp@plt+0x1c358>
  420b7c:	mov    rax,rbp
  420b7f:	pop    rbx
  420b80:	pop    rbp
  420b81:	pop    r12
  420b83:	ret    
  420b84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420b8e:	xchg   ax,ax
  420b90:	push   rbx
  420b91:	mov    rbx,rdi
  420b94:	mov    rdi,QWORD PTR [rdi+0x10]
  420b98:	test   rdi,rdi
  420b9b:	je     420bb0 <strcmp@plt+0x1d3f8>
  420b9d:	mov    rax,QWORD PTR [rbx]
  420ba0:	cmp    rdi,rax
  420ba3:	je     420bb8 <strcmp@plt+0x1d400>
  420ba5:	cmp    rdi,QWORD PTR [rbx+0x8]
  420ba9:	je     420c00 <strcmp@plt+0x1d448>
  420bab:	call   4037b0 <free@plt>
  420bb0:	mov    rax,QWORD PTR [rbx]
  420bb3:	test   rax,rax
  420bb6:	je     420bc0 <strcmp@plt+0x1d408>
  420bb8:	mov    rdi,rax
  420bbb:	call   4037b0 <free@plt>
  420bc0:	mov    rdi,QWORD PTR [rbx+0x8]
  420bc4:	test   rdi,rdi
  420bc7:	je     420bce <strcmp@plt+0x1d416>
  420bc9:	call   4037b0 <free@plt>
  420bce:	mov    QWORD PTR [rbx],0x0
  420bd5:	mov    DWORD PTR [rbx+0x18],0x0
  420bdc:	mov    QWORD PTR [rbx+0x8],0x0
  420be4:	mov    DWORD PTR [rbx+0x1c],0x0
  420beb:	mov    QWORD PTR [rbx+0x10],0x0
  420bf3:	mov    DWORD PTR [rbx+0x20],0x0
  420bfa:	pop    rbx
  420bfb:	ret    
  420bfc:	nop    DWORD PTR [rax+0x0]
  420c00:	test   rax,rax
  420c03:	jne    420bb8 <strcmp@plt+0x1d400>
  420c05:	jmp    420bc9 <strcmp@plt+0x1d411>
  420c07:	nop    WORD PTR [rax+rax*1+0x0]
  420c10:	test   esi,esi
  420c12:	push   r14
  420c14:	mov    r14,rcx
  420c17:	push   r13
  420c19:	push   r12
  420c1b:	mov    r12d,edx
  420c1e:	push   rbp
  420c1f:	mov    ebp,esi
  420c21:	push   rbx
  420c22:	mov    rbx,rdi
  420c25:	jne    420cc7 <strcmp@plt+0x1d50f>
  420c2b:	xor    r13d,r13d
  420c2e:	xor    edi,edi
  420c30:	cmp    QWORD PTR [rbx],0x0
  420c34:	mov    eax,0x1
  420c39:	je     420c57 <strcmp@plt+0x1d49f>
  420c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  420c40:	mov    r13d,eax
  420c43:	lea    rdi,[rax*8+0x0]
  420c4b:	add    rax,0x1
  420c4f:	cmp    QWORD PTR [rbx+rax*8-0x8],0x0
  420c55:	jne    420c40 <strcmp@plt+0x1d488>
  420c57:	call   4347a0 <strcmp@plt+0x30fe8>
  420c5c:	mov    rsi,rax
  420c5f:	mov    rax,QWORD PTR [rbx]
  420c62:	xor    edi,edi
  420c64:	mov    DWORD PTR [r14],r13d
  420c67:	test   rax,rax
  420c6a:	je     420cae <strcmp@plt+0x1d4f6>
  420c6c:	nop    DWORD PTR [rax+0x0]
  420c70:	test   ebp,ebp
  420c72:	je     420cc0 <strcmp@plt+0x1d508>
  420c74:	movzx  eax,BYTE PTR [rax+0xc]
  420c78:	cdq    
  420c79:	idiv   r12d
  420c7c:	test   eax,eax
  420c7e:	jle    420ca2 <strcmp@plt+0x1d4ea>
  420c80:	movsxd rdx,edi
  420c83:	xor    ecx,ecx
  420c85:	lea    rdx,[rsi+rdx*8]
  420c89:	nop    DWORD PTR [rax+0x0]
  420c90:	mov    r8,QWORD PTR [rbx]
  420c93:	add    edi,0x1
  420c96:	mov    QWORD PTR [rdx+rcx*8],r8
  420c9a:	add    rcx,0x1
  420c9e:	cmp    eax,ecx
  420ca0:	jg     420c90 <strcmp@plt+0x1d4d8>
  420ca2:	add    rbx,0x8
  420ca6:	mov    rax,QWORD PTR [rbx]
  420ca9:	test   rax,rax
  420cac:	jne    420c70 <strcmp@plt+0x1d4b8>
  420cae:	pop    rbx
  420caf:	mov    rax,rsi
  420cb2:	pop    rbp
  420cb3:	pop    r12
  420cb5:	pop    r13
  420cb7:	pop    r14
  420cb9:	ret    
  420cba:	nop    WORD PTR [rax+rax*1+0x0]
  420cc0:	mov    eax,0x1
  420cc5:	jmp    420c80 <strcmp@plt+0x1d4c8>
  420cc7:	mov    eax,esi
  420cc9:	cdq    
  420cca:	idiv   r12d
  420ccd:	movsxd rdi,eax
  420cd0:	mov    r13,rdi
  420cd3:	shl    rdi,0x3
  420cd7:	jmp    420c57 <strcmp@plt+0x1d49f>
  420cdc:	nop    DWORD PTR [rax+0x0]
  420ce0:	mov    rcx,QWORD PTR [rdi+0x8]
  420ce4:	cmp    rdi,rcx
  420ce7:	je     420d7b <strcmp@plt+0x1d5c3>
  420ced:	xor    r10d,r10d
  420cf0:	mov    eax,0xff
  420cf5:	jmp    420d31 <strcmp@plt+0x1d579>
  420cf7:	nop    WORD PTR [rax+rax*1+0x0]
  420d00:	cmp    BYTE PTR [r8+0xa],0x0
  420d05:	je     420d28 <strcmp@plt+0x1d570>
  420d07:	cmp    r9d,eax
  420d0a:	je     420d60 <strcmp@plt+0x1d5a8>
  420d0c:	cmp    eax,r9d
  420d0f:	jle    420d28 <strcmp@plt+0x1d570>
  420d11:	mov    QWORD PTR [rsi],r8
  420d14:	mov    QWORD PTR [rsi+0x8],0x0
  420d1c:	mov    eax,r9d
  420d1f:	mov    r10d,0x1
  420d25:	nop    DWORD PTR [rax]
  420d28:	mov    rcx,QWORD PTR [rcx+0x8]
  420d2c:	cmp    rdi,rcx
  420d2f:	je     420d5b <strcmp@plt+0x1d5a3>
  420d31:	mov    r8,QWORD PTR [rcx+0x10]
  420d35:	cmp    BYTE PTR [r8+0x8],0x0
  420d3a:	je     420d28 <strcmp@plt+0x1d570>
  420d3c:	movzx  r9d,BYTE PTR [r8+0xb]
  420d41:	cmp    r9b,0xff
  420d45:	je     420d28 <strcmp@plt+0x1d570>
  420d47:	test   dl,dl
  420d49:	jne    420d00 <strcmp@plt+0x1d548>
  420d4b:	cmp    BYTE PTR [r8+0x9],0x0
  420d50:	jne    420d07 <strcmp@plt+0x1d54f>
  420d52:	mov    rcx,QWORD PTR [rcx+0x8]
  420d56:	cmp    rdi,rcx
  420d59:	jne    420d31 <strcmp@plt+0x1d579>
  420d5b:	repz ret 
  420d5d:	nop    DWORD PTR [rax]
  420d60:	movsxd r9,r10d
  420d63:	add    r10d,0x1
  420d67:	mov    QWORD PTR [rsi+r9*8],r8
  420d6b:	mov    QWORD PTR [rsi+r9*8+0x8],0x0
  420d74:	movzx  r9d,BYTE PTR [r8+0xb]
  420d79:	jmp    420d0c <strcmp@plt+0x1d554>
  420d7b:	mov    eax,0xff
  420d80:	ret    
  420d81:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  420d8c:	nop    DWORD PTR [rax+0x0]
  420d90:	push   rbx
  420d91:	mov    rbx,rdi
  420d94:	call   420b90 <strcmp@plt+0x1d3d8>
  420d99:	mov    rdi,rbx
  420d9c:	pop    rbx
  420d9d:	jmp    4037b0 <free@plt>
  420da2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  420dad:	nop    DWORD PTR [rax]
  420db0:	push   r15
  420db2:	push   r14
  420db4:	push   r13
  420db6:	push   r12
  420db8:	mov    r12d,esi
  420dbb:	push   rbp
  420dbc:	push   rbx
  420dbd:	sub    rsp,0xbc8
  420dc4:	mov    rax,QWORD PTR fs:0x28
  420dcd:	mov    QWORD PTR [rsp+0xbb8],rax
  420dd5:	xor    eax,eax
  420dd7:	cmp    esi,0x4
  420dda:	mov    r13d,DWORD PTR [rsp+0xc18]
  420de2:	mov    r14d,DWORD PTR [rsp+0xc1c]
  420dea:	mov    r15d,DWORD PTR [rsp+0xc20]
  420df2:	jle    420e38 <strcmp@plt+0x1d680>
  420df4:	mov    rbp,0x468e3c
  420dfb:	mov    eax,DWORD PTR [rbp+0x0]
  420dfe:	add    eax,0x4
  420e01:	cmp    esi,eax
  420e03:	jle    4211b8 <strcmp@plt+0x1da00>
  420e09:	mov    rax,QWORD PTR [rsp+0xbb8]
  420e11:	xor    rax,QWORD PTR fs:0x28
  420e1a:	jne    4212bc <strcmp@plt+0x1db04>
  420e20:	add    rsp,0xbc8
  420e27:	pop    rbx
  420e28:	pop    rbp
  420e29:	pop    r12
  420e2b:	pop    r13
  420e2d:	pop    r14
  420e2f:	pop    r15
  420e31:	ret    
  420e32:	nop    WORD PTR [rax+rax*1+0x0]
  420e38:	call   424890 <strcmp@plt+0x210d8>
  420e3d:	lea    rsi,[rip+0x2bed4]        # 44cd18 <strcmp@plt+0x49560>
  420e44:	mov    rdx,rax
  420e47:	mov    edi,r12d
  420e4a:	xor    eax,eax
  420e4c:	mov    rbx,rsp
  420e4f:	call   4306a0 <strcmp@plt+0x2cee8>
  420e54:	lea    rcx,[rip+0x2bee5]        # 44cd40 <strcmp@plt+0x49588>
  420e5b:	xor    eax,eax
  420e5d:	mov    r8d,r13d
  420e60:	mov    edx,0xbb8
  420e65:	mov    esi,0x1
  420e6a:	mov    rdi,rsp
  420e6d:	call   403290 <__sprintf_chk@plt>
  420e72:	test   r13d,r13d
  420e75:	jle    420f80 <strcmp@plt+0x1d7c8>
  420e7b:	xor    ebp,ebp
  420e7d:	mov    rdx,rbx
  420e80:	mov    ecx,DWORD PTR [rdx]
  420e82:	add    rdx,0x4
  420e86:	lea    eax,[rcx-0x1010101]
  420e8c:	andn   eax,ecx,eax
  420e91:	and    eax,0x80808080
  420e96:	je     420e80 <strcmp@plt+0x1d6c8>
  420e98:	mov    ecx,eax
  420e9a:	shr    ecx,0x10
  420e9d:	test   eax,0x8080
  420ea2:	cmove  eax,ecx
  420ea5:	lea    rcx,[rdx+0x2]
  420ea9:	mov    esi,eax
  420eab:	cmove  rdx,rcx
  420eaf:	add    sil,al
  420eb2:	sbb    rdx,0x3
  420eb6:	sub    rdx,rbx
  420eb9:	cmp    rdx,0xb22
  420ec0:	ja     4212a0 <strcmp@plt+0x1dae8>
  420ec6:	mov    rax,QWORD PTR [rsp+0xc00]
  420ece:	mov    rax,QWORD PTR [rax+rbp*8]
  420ed2:	mov    rdi,QWORD PTR [rax]
  420ed5:	call   424890 <strcmp@plt+0x210d8>
  420eda:	mov    rdi,rbx
  420edd:	mov    ecx,DWORD PTR [rdi]
  420edf:	add    rdi,0x4
  420ee3:	lea    edx,[rcx-0x1010101]
  420ee9:	andn   edx,ecx,edx
  420eee:	and    edx,0x80808080
  420ef4:	je     420edd <strcmp@plt+0x1d725>
  420ef6:	mov    ecx,edx
  420ef8:	mov    r8,rax
  420efb:	shr    ecx,0x10
  420efe:	test   edx,0x8080
  420f04:	cmove  edx,ecx
  420f07:	lea    rcx,[rdi+0x2]
  420f0b:	mov    esi,edx
  420f0d:	cmove  rdi,rcx
  420f11:	add    sil,dl
  420f14:	lea    rcx,[rip+0x2bd9a]        # 44ccb5 <strcmp@plt+0x494fd>
  420f1b:	sbb    rdi,0x3
  420f1f:	mov    rdx,0xffffffffffffffff
  420f26:	xor    eax,eax
  420f28:	mov    esi,0x1
  420f2d:	add    rbp,0x1
  420f31:	call   403290 <__sprintf_chk@plt>
  420f36:	cmp    r13d,ebp
  420f39:	jg     420e7d <strcmp@plt+0x1d6c5>
  420f3f:	cmp    r12d,0x4
  420f43:	jle    420f80 <strcmp@plt+0x1d7c8>
  420f45:	mov    rbp,0x468e3c
  420f4c:	mov    eax,DWORD PTR [rbp+0x0]
  420f4f:	add    eax,0x4
  420f52:	cmp    r12d,eax
  420f55:	jle    420f80 <strcmp@plt+0x1d7c8>
  420f57:	lea    rcx,[rip+0x2bd62]        # 44ccc0 <strcmp@plt+0x49508>
  420f5e:	xor    eax,eax
  420f60:	mov    r8d,r14d
  420f63:	mov    edx,0xbb8
  420f68:	mov    esi,0x1
  420f6d:	mov    rdi,rbx
  420f70:	call   403290 <__sprintf_chk@plt>
  420f75:	test   r14d,r14d
  420f78:	jg     420fbb <strcmp@plt+0x1d803>
  420f7a:	jmp    421227 <strcmp@plt+0x1da6f>
  420f7f:	nop
  420f80:	lea    rsi,[rip+0x26731]        # 4476b8 <strcmp@plt+0x43f00>
  420f87:	xor    eax,eax
  420f89:	mov    rdx,rbx
  420f8c:	mov    edi,r12d
  420f8f:	call   4306a0 <strcmp@plt+0x2cee8>
  420f94:	lea    rcx,[rip+0x2bd25]        # 44ccc0 <strcmp@plt+0x49508>
  420f9b:	xor    eax,eax
  420f9d:	mov    r8d,r14d
  420fa0:	mov    edx,0xbb8
  420fa5:	mov    esi,0x1
  420faa:	mov    rdi,rbx
  420fad:	call   403290 <__sprintf_chk@plt>
  420fb2:	test   r14d,r14d
  420fb5:	jle    421086 <strcmp@plt+0x1d8ce>
  420fbb:	lea    r13,[rip+0x2bcf3]        # 44ccb5 <strcmp@plt+0x494fd>
  420fc2:	xor    ebp,ebp
  420fc4:	nop    DWORD PTR [rax+0x0]
  420fc8:	mov    rdx,rbx
  420fcb:	mov    ecx,DWORD PTR [rdx]
  420fcd:	add    rdx,0x4
  420fd1:	lea    eax,[rcx-0x1010101]
  420fd7:	andn   eax,ecx,eax
  420fdc:	and    eax,0x80808080
  420fe1:	je     420fcb <strcmp@plt+0x1d813>
  420fe3:	mov    ecx,eax
  420fe5:	shr    ecx,0x10
  420fe8:	test   eax,0x8080
  420fed:	cmove  eax,ecx
  420ff0:	lea    rcx,[rdx+0x2]
  420ff4:	mov    esi,eax
  420ff6:	cmove  rdx,rcx
  420ffa:	add    sil,al
  420ffd:	sbb    rdx,0x3
  421001:	sub    rdx,rbx
  421004:	cmp    rdx,0xb54
  42100b:	ja     421260 <strcmp@plt+0x1daa8>
  421011:	mov    rax,QWORD PTR [rsp+0xc08]
  421019:	mov    rax,QWORD PTR [rax+rbp*8]
  42101d:	mov    rdi,QWORD PTR [rax]
  421020:	call   424890 <strcmp@plt+0x210d8>
  421025:	mov    rdi,rbx
  421028:	mov    ecx,DWORD PTR [rdi]
  42102a:	add    rdi,0x4
  42102e:	lea    edx,[rcx-0x1010101]
  421034:	andn   edx,ecx,edx
  421039:	and    edx,0x80808080
  42103f:	je     421028 <strcmp@plt+0x1d870>
  421041:	mov    ecx,edx
  421043:	mov    r8,rax
  421046:	shr    ecx,0x10
  421049:	test   edx,0x8080
  42104f:	cmove  edx,ecx
  421052:	lea    rcx,[rdi+0x2]
  421056:	mov    esi,edx
  421058:	cmove  rdi,rcx
  42105c:	add    sil,dl
  42105f:	mov    rcx,r13
  421062:	sbb    rdi,0x3
  421066:	mov    rdx,0xffffffffffffffff
  42106d:	xor    eax,eax
  42106f:	mov    esi,0x1
  421074:	add    rbp,0x1
  421078:	call   403290 <__sprintf_chk@plt>
  42107d:	cmp    r14d,ebp
  421080:	jg     420fc8 <strcmp@plt+0x1d810>
  421086:	cmp    r12d,0x4
  42108a:	jg     421220 <strcmp@plt+0x1da68>
  421090:	lea    rsi,[rip+0x26621]        # 4476b8 <strcmp@plt+0x43f00>
  421097:	xor    eax,eax
  421099:	mov    rdx,rbx
  42109c:	mov    edi,r12d
  42109f:	call   4306a0 <strcmp@plt+0x2cee8>
  4210a4:	lea    rcx,[rip+0x2bc3d]        # 44cce8 <strcmp@plt+0x49530>
  4210ab:	xor    eax,eax
  4210ad:	mov    r8d,r15d
  4210b0:	mov    edx,0xbb8
  4210b5:	mov    esi,0x1
  4210ba:	mov    rdi,rbx
  4210bd:	call   403290 <__sprintf_chk@plt>
  4210c2:	test   r15d,r15d
  4210c5:	jle    421196 <strcmp@plt+0x1d9de>
  4210cb:	lea    r13,[rip+0x2bbe3]        # 44ccb5 <strcmp@plt+0x494fd>
  4210d2:	xor    ebp,ebp
  4210d4:	nop    DWORD PTR [rax+0x0]
  4210d8:	mov    rdx,rbx
  4210db:	mov    ecx,DWORD PTR [rdx]
  4210dd:	add    rdx,0x4
  4210e1:	lea    eax,[rcx-0x1010101]
  4210e7:	andn   eax,ecx,eax
  4210ec:	and    eax,0x80808080
  4210f1:	je     4210db <strcmp@plt+0x1d923>
  4210f3:	mov    ecx,eax
  4210f5:	shr    ecx,0x10
  4210f8:	test   eax,0x8080
  4210fd:	cmove  eax,ecx
  421100:	lea    rcx,[rdx+0x2]
  421104:	mov    esi,eax
  421106:	cmove  rdx,rcx
  42110a:	add    sil,al
  42110d:	sbb    rdx,0x3
  421111:	sub    rdx,rbx
  421114:	cmp    rdx,0xb86
  42111b:	ja     421280 <strcmp@plt+0x1dac8>
  421121:	mov    rax,QWORD PTR [rsp+0xc10]
  421129:	mov    rax,QWORD PTR [rax+rbp*8]
  42112d:	mov    rdi,QWORD PTR [rax]
  421130:	call   424890 <strcmp@plt+0x210d8>
  421135:	mov    rdi,rbx
  421138:	mov    ecx,DWORD PTR [rdi]
  42113a:	add    rdi,0x4
  42113e:	lea    edx,[rcx-0x1010101]
  421144:	andn   edx,ecx,edx
  421149:	and    edx,0x80808080
  42114f:	je     421138 <strcmp@plt+0x1d980>
  421151:	mov    ecx,edx
  421153:	mov    r8,rax
  421156:	shr    ecx,0x10
  421159:	test   edx,0x8080
  42115f:	cmove  edx,ecx
  421162:	lea    rcx,[rdi+0x2]
  421166:	mov    esi,edx
  421168:	cmove  rdi,rcx
  42116c:	add    sil,dl
  42116f:	mov    rcx,r13
  421172:	sbb    rdi,0x3
  421176:	mov    rdx,0xffffffffffffffff
  42117d:	xor    eax,eax
  42117f:	mov    esi,0x1
  421184:	add    rbp,0x1
  421188:	call   403290 <__sprintf_chk@plt>
  42118d:	cmp    r15d,ebp
  421190:	jg     4210d8 <strcmp@plt+0x1d920>
  421196:	cmp    r12d,0x4
  42119a:	jg     421200 <strcmp@plt+0x1da48>
  42119c:	lea    rsi,[rip+0x26515]        # 4476b8 <strcmp@plt+0x43f00>
  4211a3:	mov    rdx,rbx
  4211a6:	mov    edi,r12d
  4211a9:	xor    eax,eax
  4211ab:	call   4306a0 <strcmp@plt+0x2cee8>
  4211b0:	jmp    420e09 <strcmp@plt+0x1d651>
  4211b5:	nop    DWORD PTR [rax]
  4211b8:	call   424890 <strcmp@plt+0x210d8>
  4211bd:	lea    rsi,[rip+0x2bb54]        # 44cd18 <strcmp@plt+0x49560>
  4211c4:	mov    rdx,rax
  4211c7:	mov    edi,r12d
  4211ca:	xor    eax,eax
  4211cc:	mov    rbx,rsp
  4211cf:	call   4306a0 <strcmp@plt+0x2cee8>
  4211d4:	lea    rcx,[rip+0x2bb65]        # 44cd40 <strcmp@plt+0x49588>
  4211db:	xor    eax,eax
  4211dd:	mov    r8d,r13d
  4211e0:	mov    edx,0xbb8
  4211e5:	mov    esi,0x1
  4211ea:	mov    rdi,rsp
  4211ed:	call   403290 <__sprintf_chk@plt>
  4211f2:	test   r13d,r13d
  4211f5:	jg     420e7b <strcmp@plt+0x1d6c3>
  4211fb:	jmp    420f4c <strcmp@plt+0x1d794>
  421200:	mov    rbp,0x468e3c
  421207:	mov    eax,DWORD PTR [rbp+0x0]
  42120a:	add    eax,0x4
  42120d:	cmp    r12d,eax
  421210:	jg     420e09 <strcmp@plt+0x1d651>
  421216:	jmp    42119c <strcmp@plt+0x1d9e4>
  421218:	nop    DWORD PTR [rax+rax*1+0x0]
  421220:	mov    rbp,0x468e3c
  421227:	mov    eax,DWORD PTR [rbp+0x0]
  42122a:	add    eax,0x4
  42122d:	cmp    r12d,eax
  421230:	jle    421090 <strcmp@plt+0x1d8d8>
  421236:	lea    rcx,[rip+0x2baab]        # 44cce8 <strcmp@plt+0x49530>
  42123d:	xor    eax,eax
  42123f:	mov    r8d,r15d
  421242:	mov    edx,0xbb8
  421247:	mov    esi,0x1
  42124c:	mov    rdi,rbx
  42124f:	call   403290 <__sprintf_chk@plt>
  421254:	test   r15d,r15d
  421257:	jg     4210cb <strcmp@plt+0x1d913>
  42125d:	jmp    421207 <strcmp@plt+0x1da4f>
  42125f:	nop
  421260:	add    rdx,rbx
  421263:	cmp    r12d,0x4
  421267:	mov    DWORD PTR [rdx],0x2e2e2e20
  42126d:	mov    BYTE PTR [rdx+0x4],0x0
  421271:	jle    421090 <strcmp@plt+0x1d8d8>
  421277:	jmp    421220 <strcmp@plt+0x1da68>
  421279:	nop    DWORD PTR [rax+0x0]
  421280:	add    rdx,rbx
  421283:	cmp    r12d,0x4
  421287:	mov    DWORD PTR [rdx],0x2e2e2e20
  42128d:	mov    BYTE PTR [rdx+0x4],0x0
  421291:	jle    42119c <strcmp@plt+0x1d9e4>
  421297:	jmp    421200 <strcmp@plt+0x1da48>
  42129c:	nop    DWORD PTR [rax+0x0]
  4212a0:	add    rdx,rbx
  4212a3:	cmp    r12d,0x4
  4212a7:	mov    DWORD PTR [rdx],0x2e2e2e20
  4212ad:	mov    BYTE PTR [rdx+0x4],0x0
  4212b1:	jg     420f45 <strcmp@plt+0x1d78d>
  4212b7:	jmp    420f80 <strcmp@plt+0x1d7c8>
  4212bc:	call   403460 <__stack_chk_fail@plt>
  4212c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4212cc:	nop    DWORD PTR [rax+0x0]
  4212d0:	push   r15
  4212d2:	push   r14
  4212d4:	mov    r15,rdi
  4212d7:	push   r13
  4212d9:	push   r12
  4212db:	mov    r14,rsi
  4212de:	push   rbp
  4212df:	push   rbx
  4212e0:	mov    ebp,ecx
  4212e2:	mov    rbx,rdx
  4212e5:	sub    rsp,0x338
  4212ec:	mov    rax,QWORD PTR fs:0x28
  4212f5:	mov    QWORD PTR [rsp+0x328],rax
  4212fd:	xor    eax,eax
  4212ff:	call   42d4e0 <strcmp@plt+0x29d28>
  421304:	mov    r13,rax
  421307:	call   42d4e0 <strcmp@plt+0x29d28>
  42130c:	mov    rdi,r15
  42130f:	mov    r12,rax
  421312:	mov    QWORD PTR [rsp+0x10],0x0
  42131b:	mov    QWORD PTR [rsp+0x118],0x0
  421327:	call   420b90 <strcmp@plt+0x1d3d8>
  42132c:	mov    r8,0x421860
  421333:	mov    rdx,r13
  421336:	mov    rcx,r12
  421339:	mov    rsi,rbx
  42133c:	mov    rdi,r14
  42133f:	call   421b70 <strcmp@plt+0x1e3b8>
  421344:	mov    edx,DWORD PTR [r13+0x18]
  421348:	test   edx,edx
  42134a:	jne    4215b0 <strcmp@plt+0x1ddf8>
  421350:	xor    ebx,ebx
  421352:	xor    r9d,r9d
  421355:	mov    DWORD PTR [rsp],0xff
  42135c:	mov    eax,DWORD PTR [r12+0x18]
  421361:	test   eax,eax
  421363:	jne    4214d0 <strcmp@plt+0x1dd18>
  421369:	xor    ebp,ebp
  42136b:	xor    r8d,r8d
  42136e:	mov    r10d,0xff
  421374:	mov    rax,QWORD PTR [r15]
  421377:	test   rax,rax
  42137a:	je     42144e <strcmp@plt+0x1dc96>
  421380:	mov    rdx,QWORD PTR [r15+0x8]
  421384:	test   rdx,rdx
  421387:	je     42144e <strcmp@plt+0x1dc96>
  42138d:	cmp    DWORD PTR [rsp],r10d
  421391:	jl     4214b8 <strcmp@plt+0x1dd00>
  421397:	jg     421658 <strcmp@plt+0x1dea0>
  42139d:	test   ebp,ebp
  42139f:	jne    421690 <strcmp@plt+0x1ded8>
  4213a5:	mov    rdx,QWORD PTR [rsp+0x10]
  4213aa:	lea    esi,[r8+r9*1]
  4213ae:	mov    eax,0x1
  4213b3:	lea    r11,[rsp+0x10]
  4213b8:	test   rdx,rdx
  4213bb:	je     4216cb <strcmp@plt+0x1df13>
  4213c1:	nop    DWORD PTR [rax+0x0]
  4213c8:	mov    QWORD PTR [r11+rax*8+0x208],rdx
  4213d0:	movsxd rcx,eax
  4213d3:	add    rax,0x1
  4213d7:	mov    rdx,QWORD PTR [r11+rax*8-0x8]
  4213dc:	test   rdx,rdx
  4213df:	jne    4213c8 <strcmp@plt+0x1dc10>
  4213e1:	mov    rdx,QWORD PTR [rsp+0x118]
  4213e9:	test   rdx,rdx
  4213ec:	je     42142c <strcmp@plt+0x1dc74>
  4213ee:	lea    eax,[rcx+0x1]
  4213f1:	cdqe   
  4213f3:	mov    rdi,rax
  4213f6:	neg    rdi
  4213f9:	shl    rdi,0x3
  4213fd:	lea    r8,[rdi+rcx*8]
  421401:	add    rdi,r11
  421404:	add    r8,r11
  421407:	nop    WORD PTR [rax+rax*1+0x0]
  421410:	mov    QWORD PTR [r8+rax*8+0x210],rdx
  421418:	movsxd rcx,eax
  42141b:	add    rax,0x1
  42141f:	mov    rdx,QWORD PTR [rdi+rax*8+0x108]
  421427:	test   rdx,rdx
  42142a:	jne    421410 <strcmp@plt+0x1dc58>
  42142c:	mov    QWORD PTR [rsp+rcx*8+0x220],0x0
  421438:	lea    rdi,[r11+0x210]
  42143f:	lea    rcx,[r15+0x20]
  421443:	mov    edx,ebx
  421445:	call   420c10 <strcmp@plt+0x1d458>
  42144a:	mov    QWORD PTR [r15+0x10],rax
  42144e:	sub    rsp,0x8
  421452:	push   QWORD PTR [r15+0x20]
  421456:	push   QWORD PTR [r15+0x18]
  42145a:	push   QWORD PTR [r15+0x10]
  42145e:	push   QWORD PTR [r15+0x8]
  421462:	mov    esi,0x5
  421467:	push   QWORD PTR [r15]
  42146a:	mov    rdi,r14
  42146d:	call   420db0 <strcmp@plt+0x1d5f8>
  421472:	add    rsp,0x30
  421476:	mov    rdi,r13
  421479:	call   42dac0 <strcmp@plt+0x2a308>
  42147e:	mov    rdi,r12
  421481:	call   42dac0 <strcmp@plt+0x2a308>
  421486:	mov    rsi,QWORD PTR [rsp+0x328]
  42148e:	xor    rsi,QWORD PTR fs:0x28
  421497:	mov    eax,0x1
  42149c:	jne    4216d2 <strcmp@plt+0x1df1a>
  4214a2:	add    rsp,0x338
  4214a9:	pop    rbx
  4214aa:	pop    rbp
  4214ab:	pop    r12
  4214ad:	pop    r13
  4214af:	pop    r14
  4214b1:	pop    r15
  4214b3:	ret    
  4214b4:	nop    DWORD PTR [rax+0x0]
  4214b8:	mov    QWORD PTR [r15+0x10],rax
  4214bc:	mov    eax,DWORD PTR [r15+0x18]
  4214c0:	mov    DWORD PTR [r15+0x20],eax
  4214c4:	jmp    42144e <strcmp@plt+0x1dc96>
  4214c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4214d0:	lea    r11,[rsp+0x10]
  4214d5:	movzx  edx,bpl
  4214d9:	mov    rdi,r12
  4214dc:	mov    DWORD PTR [rsp+0x4],r9d
  4214e1:	lea    rsi,[r11+0x108]
  4214e8:	call   420ce0 <strcmp@plt+0x1d528>
  4214ed:	cmp    eax,0xff
  4214f2:	mov    r10d,eax
  4214f5:	mov    r9d,DWORD PTR [rsp+0x4]
  4214fa:	je     421369 <strcmp@plt+0x1dbb1>
  421500:	mov    rax,QWORD PTR [rsp+0x118]
  421508:	test   rax,rax
  42150b:	je     4216b7 <strcmp@plt+0x1deff>
  421511:	movzx  edx,BYTE PTR [rax+0xc]
  421515:	mov    rcx,r11
  421518:	xor    r8d,r8d
  42151b:	mov    ebp,edx
  42151d:	jmp    421534 <strcmp@plt+0x1dd7c>
  42151f:	nop
  421520:	add    rcx,0x8
  421524:	mov    rax,QWORD PTR [rcx+0x108]
  42152b:	test   rax,rax
  42152e:	je     421570 <strcmp@plt+0x1ddb8>
  421530:	movzx  edx,BYTE PTR [rax+0xc]
  421534:	add    r8d,edx
  421537:	test   edx,edx
  421539:	je     421520 <strcmp@plt+0x1dd68>
  42153b:	test   ebp,ebp
  42153d:	je     421680 <strcmp@plt+0x1dec8>
  421543:	mov    eax,ebp
  421545:	mov    ebp,edx
  421547:	jmp    421552 <strcmp@plt+0x1dd9a>
  421549:	nop    DWORD PTR [rax+0x0]
  421550:	mov    ebp,edx
  421552:	cdq    
  421553:	idiv   ebp
  421555:	mov    eax,ebp
  421557:	test   edx,edx
  421559:	jne    421550 <strcmp@plt+0x1dd98>
  42155b:	add    rcx,0x8
  42155f:	mov    rax,QWORD PTR [rcx+0x108]
  421566:	test   rax,rax
  421569:	jne    421530 <strcmp@plt+0x1dd78>
  42156b:	nop    DWORD PTR [rax+rax*1+0x0]
  421570:	lea    rcx,[r15+0x1c]
  421574:	lea    rdi,[r11+0x108]
  42157b:	mov    esi,r8d
  42157e:	mov    edx,ebp
  421580:	mov    DWORD PTR [rsp+0xc],r10d
  421585:	mov    DWORD PTR [rsp+0x8],r9d
  42158a:	mov    DWORD PTR [rsp+0x4],r8d
  42158f:	call   420c10 <strcmp@plt+0x1d458>
  421594:	mov    r10d,DWORD PTR [rsp+0xc]
  421599:	mov    QWORD PTR [r15+0x8],rax
  42159d:	mov    r9d,DWORD PTR [rsp+0x8]
  4215a2:	mov    r8d,DWORD PTR [rsp+0x4]
  4215a7:	jmp    421374 <strcmp@plt+0x1dbbc>
  4215ac:	nop    DWORD PTR [rax+0x0]
  4215b0:	lea    r11,[rsp+0x10]
  4215b5:	movzx  edx,bpl
  4215b9:	mov    rdi,r13
  4215bc:	mov    rsi,r11
  4215bf:	call   420ce0 <strcmp@plt+0x1d528>
  4215c4:	cmp    eax,0xff
  4215c9:	mov    DWORD PTR [rsp],eax
  4215cc:	je     421350 <strcmp@plt+0x1db98>
  4215d2:	mov    rax,QWORD PTR [rsp+0x10]
  4215d7:	test   rax,rax
  4215da:	je     4216c1 <strcmp@plt+0x1df09>
  4215e0:	movzx  edx,BYTE PTR [rax+0xc]
  4215e4:	mov    rcx,r11
  4215e7:	xor    r9d,r9d
  4215ea:	mov    ebx,edx
  4215ec:	jmp    421600 <strcmp@plt+0x1de48>
  4215ee:	xchg   ax,ax
  4215f0:	add    rcx,0x8
  4215f4:	mov    rax,QWORD PTR [rcx]
  4215f7:	test   rax,rax
  4215fa:	je     421630 <strcmp@plt+0x1de78>
  4215fc:	movzx  edx,BYTE PTR [rax+0xc]
  421600:	add    r9d,edx
  421603:	test   edx,edx
  421605:	je     4215f0 <strcmp@plt+0x1de38>
  421607:	test   ebx,ebx
  421609:	je     421670 <strcmp@plt+0x1deb8>
  42160b:	mov    eax,ebx
  42160d:	mov    ebx,edx
  42160f:	jmp    42161a <strcmp@plt+0x1de62>
  421611:	nop    DWORD PTR [rax+0x0]
  421618:	mov    ebx,edx
  42161a:	cdq    
  42161b:	idiv   ebx
  42161d:	mov    eax,ebx
  42161f:	test   edx,edx
  421621:	jne    421618 <strcmp@plt+0x1de60>
  421623:	add    rcx,0x8
  421627:	mov    rax,QWORD PTR [rcx]
  42162a:	test   rax,rax
  42162d:	jne    4215fc <strcmp@plt+0x1de44>
  42162f:	nop
  421630:	lea    rcx,[r15+0x18]
  421634:	mov    esi,r9d
  421637:	mov    edx,ebx
  421639:	mov    rdi,r11
  42163c:	mov    DWORD PTR [rsp+0x4],r9d
  421641:	call   420c10 <strcmp@plt+0x1d458>
  421646:	mov    r9d,DWORD PTR [rsp+0x4]
  42164b:	mov    QWORD PTR [r15],rax
  42164e:	jmp    42135c <strcmp@plt+0x1dba4>
  421653:	nop    DWORD PTR [rax+rax*1+0x0]
  421658:	mov    eax,DWORD PTR [r15+0x1c]
  42165c:	mov    QWORD PTR [r15+0x10],rdx
  421660:	mov    DWORD PTR [r15+0x20],eax
  421664:	jmp    42144e <strcmp@plt+0x1dc96>
  421669:	nop    DWORD PTR [rax+0x0]
  421670:	mov    ebx,edx
  421672:	jmp    4215f0 <strcmp@plt+0x1de38>
  421677:	nop    WORD PTR [rax+rax*1+0x0]
  421680:	mov    ebp,edx
  421682:	jmp    421520 <strcmp@plt+0x1dd68>
  421687:	nop    WORD PTR [rax+rax*1+0x0]
  421690:	test   ebx,ebx
  421692:	je     4216b0 <strcmp@plt+0x1def8>
  421694:	mov    eax,ebx
  421696:	mov    ebx,ebp
  421698:	jmp    4216a2 <strcmp@plt+0x1deea>
  42169a:	nop    WORD PTR [rax+rax*1+0x0]
  4216a0:	mov    ebx,edx
  4216a2:	cdq    
  4216a3:	idiv   ebx
  4216a5:	mov    eax,ebx
  4216a7:	test   edx,edx
  4216a9:	jne    4216a0 <strcmp@plt+0x1dee8>
  4216ab:	jmp    4213a5 <strcmp@plt+0x1dbed>
  4216b0:	mov    ebx,ebp
  4216b2:	jmp    4213a5 <strcmp@plt+0x1dbed>
  4216b7:	xor    ebp,ebp
  4216b9:	xor    r8d,r8d
  4216bc:	jmp    421570 <strcmp@plt+0x1ddb8>
  4216c1:	xor    ebx,ebx
  4216c3:	xor    r9d,r9d
  4216c6:	jmp    421630 <strcmp@plt+0x1de78>
  4216cb:	xor    ecx,ecx
  4216cd:	jmp    4213e1 <strcmp@plt+0x1dc29>
  4216d2:	call   403460 <__stack_chk_fail@plt>
  4216d7:	nop    WORD PTR [rax+rax*1+0x0]
  4216e0:	push   r13
  4216e2:	push   r12
  4216e4:	mov    r12,rdi
  4216e7:	push   rbp
  4216e8:	push   rbx
  4216e9:	mov    edi,0x28
  4216ee:	mov    r13,rsi
  4216f1:	mov    ebp,edx
  4216f3:	sub    rsp,0x8
  4216f7:	call   434790 <strcmp@plt+0x30fd8>
  4216fc:	test   rax,rax
  4216ff:	je     421770 <strcmp@plt+0x1dfb8>
  421701:	movzx  ecx,bpl
  421705:	mov    rdx,r13
  421708:	mov    rsi,r12
  42170b:	mov    rdi,rax
  42170e:	mov    rbx,rax
  421711:	call   4212d0 <strcmp@plt+0x1db18>
  421716:	cmp    eax,0x1
  421719:	je     421758 <strcmp@plt+0x1dfa0>
  42171b:	mov    rdi,rbx
  42171e:	call   420d90 <strcmp@plt+0x1d5d8>
  421723:	mov    rax,0x468e3c
  42172a:	cmp    DWORD PTR [rax],0x1
  42172d:	jg     421740 <strcmp@plt+0x1df88>
  42172f:	add    rsp,0x8
  421733:	xor    eax,eax
  421735:	pop    rbx
  421736:	pop    rbp
  421737:	pop    r12
  421739:	pop    r13
  42173b:	ret    
  42173c:	nop    DWORD PTR [rax+0x0]
  421740:	lea    rsi,[rip+0x2b679]        # 44cdc0 <strcmp@plt+0x49608>
  421747:	mov    edi,0x6
  42174c:	xor    eax,eax
  42174e:	call   4306a0 <strcmp@plt+0x2cee8>
  421753:	jmp    42172f <strcmp@plt+0x1df77>
  421755:	nop    DWORD PTR [rax]
  421758:	add    rsp,0x8
  42175c:	mov    rax,rbx
  42175f:	pop    rbx
  421760:	pop    rbp
  421761:	pop    r12
  421763:	pop    r13
  421765:	ret    
  421766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421770:	lea    rsi,[rip+0x2b5f1]        # 44cd68 <strcmp@plt+0x495b0>
  421777:	xor    eax,eax
  421779:	mov    edi,0x3
  42177e:	call   4306a0 <strcmp@plt+0x2cee8>
  421783:	add    rsp,0x8
  421787:	xor    eax,eax
  421789:	pop    rbx
  42178a:	pop    rbp
  42178b:	pop    r12
  42178d:	pop    r13
  42178f:	ret    
  421790:	mov    r8,QWORD PTR [rdi]
  421793:	mov    rdx,QWORD PTR [r8+0x8]
  421797:	cmp    r8,rdx
  42179a:	je     4217c4 <strcmp@plt+0x1e00c>
  42179c:	mov    edi,0xffffffff
  4217a1:	xor    eax,eax
  4217a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4217a8:	mov    rsi,QWORD PTR [rdx+0x10]
  4217ac:	movzx  ecx,BYTE PTR [rsi+0x8]
  4217b0:	cmp    ecx,edi
  4217b2:	jle    4217b9 <strcmp@plt+0x1e001>
  4217b4:	mov    rax,QWORD PTR [rsi]
  4217b7:	mov    edi,ecx
  4217b9:	mov    rdx,QWORD PTR [rdx+0x8]
  4217bd:	cmp    r8,rdx
  4217c0:	jne    4217a8 <strcmp@plt+0x1dff0>
  4217c2:	repz ret 
  4217c4:	xor    eax,eax
  4217c6:	ret    
  4217c7:	nop    WORD PTR [rax+rax*1+0x0]
  4217d0:	push   r12
  4217d2:	push   rbp
  4217d3:	mov    r12,rsi
  4217d6:	push   rbx
  4217d7:	mov    rbx,rdi
  4217da:	call   428310 <strcmp@plt+0x24b58>
  4217df:	mov    rbp,0x468860
  4217e6:	mov    eax,eax
  4217e8:	cmp    QWORD PTR [rbp+rax*8+0x0],0x0
  4217ee:	je     421820 <strcmp@plt+0x1e068>
  4217f0:	mov    rdi,rbx
  4217f3:	call   428310 <strcmp@plt+0x24b58>
  4217f8:	mov    eax,eax
  4217fa:	mov    rdi,rbx
  4217fd:	mov    rbp,QWORD PTR [rbp+rax*8+0x0]
  421802:	call   4283f0 <strcmp@plt+0x24c38>
  421807:	pop    rbx
  421808:	mov    rsi,r12
  42180b:	mov    rdi,rax
  42180e:	mov    rax,rbp
  421811:	pop    rbp
  421812:	pop    r12
  421814:	jmp    rax
  421816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421820:	mov    rax,0x468e3c
  421827:	mov    eax,DWORD PTR [rax]
  421829:	test   eax,eax
  42182b:	jg     421838 <strcmp@plt+0x1e080>
  42182d:	pop    rbx
  42182e:	xor    eax,eax
  421830:	pop    rbp
  421831:	pop    r12
  421833:	ret    
  421834:	nop    DWORD PTR [rax+0x0]
  421838:	mov    rdi,rbx
  42183b:	call   428310 <strcmp@plt+0x24b58>
  421840:	lea    rsi,[rip+0x2b5c1]        # 44ce08 <strcmp@plt+0x49650>
  421847:	mov    edx,eax
  421849:	mov    edi,0x5
  42184e:	xor    eax,eax
  421850:	call   4306a0 <strcmp@plt+0x2cee8>
  421855:	pop    rbx
  421856:	xor    eax,eax
  421858:	pop    rbp
  421859:	pop    r12
  42185b:	ret    
  42185c:	nop    DWORD PTR [rax+0x0]
  421860:	mov    eax,DWORD PTR [rdi+0x18]
  421863:	cmp    eax,0x2
  421866:	je     421880 <strcmp@plt+0x1e0c8>
  421868:	cmp    eax,0x3
  42186b:	je     4218a0 <strcmp@plt+0x1e0e8>
  42186d:	cmp    eax,0x1
  421870:	mov    eax,0x0
  421875:	cmove  rax,rdi
  421879:	ret    
  42187a:	nop    WORD PTR [rax+rax*1+0x0]
  421880:	lea    rsi,[rip+0x2b5b9]        # 44ce40 <strcmp@plt+0x49688>
  421887:	sub    rsp,0x8
  42188b:	xor    eax,eax
  42188d:	mov    edi,0x3
  421892:	call   4306a0 <strcmp@plt+0x2cee8>
  421897:	xor    eax,eax
  421899:	add    rsp,0x8
  42189d:	ret    
  42189e:	xchg   ax,ax
  4218a0:	jmp    4217d0 <strcmp@plt+0x1e018>
  4218a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4218b0:	push   r15
  4218b2:	push   r14
  4218b4:	push   r13
  4218b6:	push   r12
  4218b8:	push   rbp
  4218b9:	push   rbx
  4218ba:	sub    rsp,0x8
  4218be:	mov    r13,QWORD PTR [rdi]
  4218c1:	mov    rbx,QWORD PTR [r13+0x8]
  4218c5:	mov    r15d,DWORD PTR [r13+0x18]
  4218c9:	cmp    r13,rbx
  4218cc:	je     421964 <strcmp@plt+0x1e1ac>
  4218d2:	mov    r14,rsi
  4218d5:	xor    r12d,r12d
  4218d8:	jmp    42190e <strcmp@plt+0x1e156>
  4218da:	nop    WORD PTR [rax+rax*1+0x0]
  4218e0:	mov    rdi,rbp
  4218e3:	call   425050 <strcmp@plt+0x21898>
  4218e8:	mov    rdx,0x424df0
  4218ef:	mov    rsi,r14
  4218f2:	mov    rdi,rax
  4218f5:	mov    rbp,rax
  4218f8:	call   42d7a0 <strcmp@plt+0x29fe8>
  4218fd:	cmp    al,0x1
  4218ff:	je     421990 <strcmp@plt+0x1e1d8>
  421905:	mov    rbx,QWORD PTR [rbx+0x8]
  421909:	cmp    r13,rbx
  42190c:	je     421960 <strcmp@plt+0x1e1a8>
  42190e:	mov    rdi,QWORD PTR [rbx+0x10]
  421912:	add    r12d,0x1
  421916:	call   429980 <strcmp@plt+0x261c8>
  42191b:	cmp    DWORD PTR [rax+0x18],0x3
  42191f:	mov    rbp,rax
  421922:	jne    4218e0 <strcmp@plt+0x1e128>
  421924:	mov    rdi,rax
  421927:	call   424f30 <strcmp@plt+0x21778>
  42192c:	cmp    eax,0xa
  42192f:	jne    4218e0 <strcmp@plt+0x1e128>
  421931:	mov    rdi,rbp
  421934:	mov    rsi,r14
  421937:	call   421860 <strcmp@plt+0x1e0a8>
  42193c:	test   rax,rax
  42193f:	mov    rbp,rax
  421942:	je     421905 <strcmp@plt+0x1e14d>
  421944:	add    rsp,0x8
  421948:	mov    rax,rbp
  42194b:	pop    rbx
  42194c:	pop    rbp
  42194d:	pop    r12
  42194f:	pop    r13
  421951:	pop    r14
  421953:	pop    r15
  421955:	ret    
  421956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421960:	mov    r15d,DWORD PTR [r13+0x18]
  421964:	xor    edi,edi
  421966:	test   r15d,r15d
  421969:	je     421973 <strcmp@plt+0x1e1bb>
  42196b:	mov    rax,QWORD PTR [r13+0x8]
  42196f:	mov    rdi,QWORD PTR [rax+0x10]
  421973:	call   429980 <strcmp@plt+0x261c8>
  421978:	add    rsp,0x8
  42197c:	mov    rdi,rax
  42197f:	pop    rbx
  421980:	pop    rbp
  421981:	pop    r12
  421983:	pop    r13
  421985:	pop    r14
  421987:	pop    r15
  421989:	jmp    425050 <strcmp@plt+0x21898>
  42198e:	xchg   ax,ax
  421990:	cmp    r12d,r15d
  421993:	je     421944 <strcmp@plt+0x1e18c>
  421995:	mov    rax,QWORD PTR [rbx+0x8]
  421999:	jmp    42196f <strcmp@plt+0x1e1b7>
  42199b:	nop    DWORD PTR [rax+rax*1+0x0]
  4219a0:	push   rbx
  4219a1:	mov    rbx,rdi
  4219a4:	mov    rdi,QWORD PTR [rdi]
  4219a7:	call   424750 <strcmp@plt+0x20f98>
  4219ac:	mov    rdi,QWORD PTR [rbx+0x8]
  4219b0:	call   43a5a0 <strcmp@plt+0x36de8>
  4219b5:	mov    rdi,rbx
  4219b8:	pop    rbx
  4219b9:	jmp    4037b0 <free@plt>
  4219be:	xchg   ax,ax
  4219c0:	mov    rdx,rdi
  4219c3:	lea    rdi,[rip+0x2b4a8]        # 44ce72 <strcmp@plt+0x496ba>
  4219ca:	mov    ecx,0xf
  4219cf:	mov    rsi,rdx
  4219d2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4219d4:	je     4219f8 <strcmp@plt+0x1e240>
  4219d6:	lea    rdi,[rip+0x2b4a4]        # 44ce81 <strcmp@plt+0x496c9>
  4219dd:	mov    ecx,0xe
  4219e2:	mov    rsi,rdx
  4219e5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4219e7:	jne    421a00 <strcmp@plt+0x1e248>
  4219e9:	mov    rax,0x4747e0
  4219f0:	ret    
  4219f1:	nop    DWORD PTR [rax+0x0]
  4219f8:	mov    rax,0x4688e0
  4219ff:	ret    
  421a00:	lea    rsi,[rip+0x2b489]        # 44ce90 <strcmp@plt+0x496d8>
  421a07:	sub    rsp,0x8
  421a0b:	xor    eax,eax
  421a0d:	mov    edi,0x2
  421a12:	call   4306a0 <strcmp@plt+0x2cee8>
  421a17:	xor    eax,eax
  421a19:	add    rsp,0x8
  421a1d:	ret    
  421a1e:	xchg   ax,ax
  421a20:	push   rbx
  421a21:	mov    edi,0x8
  421a26:	call   434790 <strcmp@plt+0x30fd8>
  421a2b:	mov    rdi,QWORD PTR [rip+0x4658e]        # 467fc0 <strcmp@plt+0x64808>
  421a32:	mov    rbx,rax
  421a35:	call   4397c0 <strcmp@plt+0x36008>
  421a3a:	mov    QWORD PTR [rbx],rax
  421a3d:	mov    rax,rbx
  421a40:	pop    rbx
  421a41:	ret    
  421a42:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  421a4d:	nop    DWORD PTR [rax]
  421a50:	push   rbx
  421a51:	mov    rbx,rdi
  421a54:	mov    rdi,QWORD PTR [rdi]
  421a57:	call   43a5a0 <strcmp@plt+0x36de8>
  421a5c:	mov    rdi,rbx
  421a5f:	pop    rbx
  421a60:	jmp    4037b0 <free@plt>
  421a65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  421a70:	push   rbp
  421a71:	push   rbx
  421a72:	mov    rbp,rdi
  421a75:	mov    edi,0x18
  421a7a:	sub    rsp,0x8
  421a7e:	call   434790 <strcmp@plt+0x30fd8>
  421a83:	mov    rdi,rbp
  421a86:	mov    rbx,rax
  421a89:	call   424b80 <strcmp@plt+0x213c8>
  421a8e:	mov    QWORD PTR [rbx],rax
  421a91:	xor    eax,eax
  421a93:	call   439790 <strcmp@plt+0x35fd8>
  421a98:	mov    rdi,0x4219a0
  421a9f:	mov    QWORD PTR [rbx+0x8],rax
  421aa3:	call   42d4f0 <strcmp@plt+0x29d38>
  421aa8:	mov    QWORD PTR [rbx+0x10],rax
  421aac:	add    rsp,0x8
  421ab0:	mov    rax,rbx
  421ab3:	pop    rbx
  421ab4:	pop    rbp
  421ab5:	ret    
  421ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421ac0:	push   rbx
  421ac1:	mov    rbx,rdi
  421ac4:	mov    rdi,QWORD PTR [rdi]
  421ac7:	call   424750 <strcmp@plt+0x20f98>
  421acc:	mov    rdi,QWORD PTR [rbx+0x8]
  421ad0:	call   43a5a0 <strcmp@plt+0x36de8>
  421ad5:	mov    rdi,QWORD PTR [rbx+0x10]
  421ad9:	call   42dac0 <strcmp@plt+0x2a308>
  421ade:	mov    rdi,rbx
  421ae1:	pop    rbx
  421ae2:	jmp    4037b0 <free@plt>
  421ae7:	nop    WORD PTR [rax+rax*1+0x0]
  421af0:	push   rbp
  421af1:	push   rbx
  421af2:	mov    rbp,rdi
  421af5:	mov    edi,0x10
  421afa:	sub    rsp,0x8
  421afe:	call   434790 <strcmp@plt+0x30fd8>
  421b03:	mov    rdi,rbp
  421b06:	mov    rbx,rax
  421b09:	call   424b80 <strcmp@plt+0x213c8>
  421b0e:	mov    QWORD PTR [rbx],rax
  421b11:	xor    eax,eax
  421b13:	call   439790 <strcmp@plt+0x35fd8>
  421b18:	mov    QWORD PTR [rbx+0x8],rax
  421b1c:	add    rsp,0x8
  421b20:	mov    rax,rbx
  421b23:	pop    rbx
  421b24:	pop    rbp
  421b25:	ret    
  421b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421b30:	mov    edi,0x20
  421b35:	jmp    434790 <strcmp@plt+0x30fd8>
  421b3a:	nop    WORD PTR [rax+rax*1+0x0]
  421b40:	push   rbx
  421b41:	mov    rax,QWORD PTR [rdi+0x18]
  421b45:	mov    rbx,rdi
  421b48:	test   rax,rax
  421b4b:	je     421b53 <strcmp@plt+0x1e39b>
  421b4d:	mov    rdi,QWORD PTR [rdi+0x8]
  421b51:	call   rax
  421b53:	mov    rdi,QWORD PTR [rbx]
  421b56:	test   rdi,rdi
  421b59:	je     421b60 <strcmp@plt+0x1e3a8>
  421b5b:	call   424750 <strcmp@plt+0x20f98>
  421b60:	mov    rdi,rbx
  421b63:	pop    rbx
  421b64:	jmp    4037b0 <free@plt>
  421b69:	nop    DWORD PTR [rax+0x0]
  421b70:	push   r15
  421b72:	push   r14
  421b74:	push   r13
  421b76:	push   r12
  421b78:	push   rbp
  421b79:	push   rbx
  421b7a:	sub    rsp,0x28
  421b7e:	mov    rax,QWORD PTR [rdi+0x28]
  421b82:	mov    QWORD PTR [rsp+0x8],rcx
  421b87:	mov    QWORD PTR [rsp+0x10],rdi
  421b8c:	mov    QWORD PTR [rsp],rsi
  421b90:	mov    QWORD PTR [rsp+0x18],rdx
  421b95:	mov    ecx,DWORD PTR [rax+0x18]
  421b98:	test   ecx,ecx
  421b9a:	jne    421bc0 <strcmp@plt+0x1e408>
  421b9c:	mov    rax,0x468e3c
  421ba3:	cmp    DWORD PTR [rax],0x2
  421ba6:	jg     421cc0 <strcmp@plt+0x1e508>
  421bac:	add    rsp,0x28
  421bb0:	pop    rbx
  421bb1:	pop    rbp
  421bb2:	pop    r12
  421bb4:	pop    r13
  421bb6:	pop    r14
  421bb8:	pop    r15
  421bba:	ret    
  421bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  421bc0:	mov    r13,QWORD PTR [rax+0x8]
  421bc4:	mov    r15,r8
  421bc7:	cmp    rax,r13
  421bca:	je     421bac <strcmp@plt+0x1e3f4>
  421bcc:	nop    DWORD PTR [rax+0x0]
  421bd0:	mov    r12,QWORD PTR [r13+0x10]
  421bd4:	mov    edx,DWORD PTR [r12+0x18]
  421bd9:	test   edx,edx
  421bdb:	je     421c80 <strcmp@plt+0x1e4c8>
  421be1:	mov    rbx,QWORD PTR [r12+0x8]
  421be6:	mov    rbp,QWORD PTR [rbx+0x10]
  421bea:	mov    r14,QWORD PTR [rbp+0x0]
  421bee:	mov    eax,DWORD PTR [r14+0x18]
  421bf2:	test   eax,eax
  421bf4:	je     421c80 <strcmp@plt+0x1e4c8>
  421bfa:	cmp    r12,rbx
  421bfd:	jne    421c38 <strcmp@plt+0x1e480>
  421bff:	jmp    421c80 <strcmp@plt+0x1e4c8>
  421c01:	nop    DWORD PTR [rax+0x0]
  421c08:	mov    rdi,rax
  421c0b:	call   4251c0 <strcmp@plt+0x21a08>
  421c10:	cmp    ax,0x2
  421c14:	je     421ca8 <strcmp@plt+0x1e4f0>
  421c1a:	mov    rsi,QWORD PTR [rsp+0x8]
  421c1f:	mov    rdi,rbp
  421c22:	call   42d540 <strcmp@plt+0x29d88>
  421c27:	mov    rbx,QWORD PTR [rbx+0x8]
  421c2b:	cmp    rbx,r12
  421c2e:	je     421c80 <strcmp@plt+0x1e4c8>
  421c30:	mov    rbp,QWORD PTR [rbx+0x10]
  421c34:	mov    r14,QWORD PTR [rbp+0x0]
  421c38:	mov    rsi,QWORD PTR [rsp]
  421c3c:	mov    rdi,r14
  421c3f:	call   r15
  421c42:	test   rax,rax
  421c45:	jne    421c08 <strcmp@plt+0x1e450>
  421c47:	mov    rax,0x468e3c
  421c4e:	cmp    DWORD PTR [rax],0x1
  421c51:	jle    421c27 <strcmp@plt+0x1e46f>
  421c53:	mov    rdi,r14
  421c56:	call   424890 <strcmp@plt+0x210d8>
  421c5b:	lea    rsi,[rip+0x2b2b6]        # 44cf18 <strcmp@plt+0x49760>
  421c62:	mov    rdx,rax
  421c65:	mov    edi,0x6
  421c6a:	xor    eax,eax
  421c6c:	call   4306a0 <strcmp@plt+0x2cee8>
  421c71:	mov    rbx,QWORD PTR [rbx+0x8]
  421c75:	cmp    rbx,r12
  421c78:	jne    421c30 <strcmp@plt+0x1e478>
  421c7a:	nop    WORD PTR [rax+rax*1+0x0]
  421c80:	mov    rax,QWORD PTR [rsp+0x10]
  421c85:	mov    r13,QWORD PTR [r13+0x8]
  421c89:	cmp    QWORD PTR [rax+0x28],r13
  421c8d:	jne    421bd0 <strcmp@plt+0x1e418>
  421c93:	add    rsp,0x28
  421c97:	pop    rbx
  421c98:	pop    rbp
  421c99:	pop    r12
  421c9b:	pop    r13
  421c9d:	pop    r14
  421c9f:	pop    r15
  421ca1:	ret    
  421ca2:	nop    WORD PTR [rax+rax*1+0x0]
  421ca8:	mov    rsi,QWORD PTR [rsp+0x18]
  421cad:	mov    rdi,rbp
  421cb0:	call   42d540 <strcmp@plt+0x29d88>
  421cb5:	jmp    421c27 <strcmp@plt+0x1e46f>
  421cba:	nop    WORD PTR [rax+rax*1+0x0]
  421cc0:	mov    rdi,QWORD PTR [rsp+0x10]
  421cc5:	call   424890 <strcmp@plt+0x210d8>
  421cca:	add    rsp,0x28
  421cce:	lea    rsi,[rip+0x2b1f3]        # 44cec8 <strcmp@plt+0x49710>
  421cd5:	mov    rdx,rax
  421cd8:	pop    rbx
  421cd9:	pop    rbp
  421cda:	pop    r12
  421cdc:	pop    r13
  421cde:	pop    r14
  421ce0:	pop    r15
  421ce2:	mov    edi,0x7
  421ce7:	xor    eax,eax
  421ce9:	jmp    4306a0 <strcmp@plt+0x2cee8>
  421cee:	xchg   ax,ax
  421cf0:	jmp    4037b0 <free@plt>
  421cf5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  421d00:	push   rbx
  421d01:	mov    rbx,rsi
  421d04:	mov    rsi,QWORD PTR [rdi+0x8]
  421d08:	mov    rdi,QWORD PTR [rbx+0x8]
  421d0c:	mov    edx,0x1
  421d11:	call   4216e0 <strcmp@plt+0x1df28>
  421d16:	test   rax,rax
  421d19:	je     421d38 <strcmp@plt+0x1e580>
  421d1b:	mov    QWORD PTR [rbx+0x20],rax
  421d1f:	mov    rax,0x420d90
  421d26:	mov    QWORD PTR [rbx+0x28],rax
  421d2a:	mov    eax,0x1
  421d2f:	pop    rbx
  421d30:	ret    
  421d31:	nop    DWORD PTR [rax+0x0]
  421d38:	xor    eax,eax
  421d3a:	pop    rbx
  421d3b:	ret    
  421d3c:	nop    DWORD PTR [rax+0x0]
  421d40:	push   rbp
  421d41:	push   rbx
  421d42:	mov    rbx,rsi
  421d45:	sub    rsp,0x8
  421d49:	mov    rbp,QWORD PTR [rdi+0x8]
  421d4d:	mov    rdi,rsi
  421d50:	call   434230 <strcmp@plt+0x30a78>
  421d55:	xor    edx,edx
  421d57:	mov    rdi,rax
  421d5a:	mov    rsi,rbp
  421d5d:	call   4216e0 <strcmp@plt+0x1df28>
  421d62:	mov    rsi,rax
  421d65:	xor    eax,eax
  421d67:	test   rsi,rsi
  421d6a:	je     421d80 <strcmp@plt+0x1e5c8>
  421d6c:	mov    rdx,0x420d90
  421d73:	mov    rdi,rbx
  421d76:	call   434260 <strcmp@plt+0x30aa8>
  421d7b:	mov    eax,0x1
  421d80:	add    rsp,0x8
  421d84:	pop    rbx
  421d85:	pop    rbp
  421d86:	ret    
  421d87:	nop    WORD PTR [rax+rax*1+0x0]
  421d90:	push   r12
  421d92:	push   rbp
  421d93:	push   rbx
  421d94:	mov    r12,QWORD PTR [rdi+0x8]
  421d98:	mov    rbx,rsi
  421d9b:	mov    rdi,rsi
  421d9e:	call   434230 <strcmp@plt+0x30a78>
  421da3:	mov    rdi,rbx
  421da6:	mov    rbp,rax
  421da9:	call   434250 <strcmp@plt+0x30a98>
  421dae:	pop    rbx
  421daf:	mov    rdx,r12
  421db2:	mov    rsi,rbp
  421db5:	xor    ecx,ecx
  421db7:	pop    rbp
  421db8:	pop    r12
  421dba:	mov    rdi,rax
  421dbd:	jmp    4212d0 <strcmp@plt+0x1db18>
  421dc2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  421dcd:	nop    DWORD PTR [rax]
  421dd0:	mov    rax,rsi
  421dd3:	mov    rdx,QWORD PTR [rdi+0x8]
  421dd7:	mov    rsi,QWORD PTR [rsi+0x8]
  421ddb:	mov    rdi,QWORD PTR [rax+0x20]
  421ddf:	mov    ecx,0x1
  421de4:	jmp    4212d0 <strcmp@plt+0x1db18>
  421de9:	nop    DWORD PTR [rax+0x0]
  421df0:	push   rbx
  421df1:	mov    edi,0x10
  421df6:	call   434790 <strcmp@plt+0x30fd8>
  421dfb:	test   rax,rax
  421dfe:	mov    rbx,rax
  421e01:	je     421e10 <strcmp@plt+0x1e658>
  421e03:	mov    rax,rbx
  421e06:	pop    rbx
  421e07:	ret    
  421e08:	nop    DWORD PTR [rax+rax*1+0x0]
  421e10:	lea    rsi,[rip+0x2b131]        # 44cf48 <strcmp@plt+0x49790>
  421e17:	xor    eax,eax
  421e19:	mov    edi,0x3
  421e1e:	call   4306a0 <strcmp@plt+0x2cee8>
  421e23:	mov    rax,rbx
  421e26:	pop    rbx
  421e27:	ret    
  421e28:	nop    DWORD PTR [rax+rax*1+0x0]
  421e30:	push   rbp
  421e31:	push   rbx
  421e32:	xor    eax,eax
  421e34:	mov    rbp,rdi
  421e37:	sub    rsp,0x8
  421e3b:	call   421df0 <strcmp@plt+0x1e638>
  421e40:	test   rax,rax
  421e43:	mov    rbx,rax
  421e46:	je     421e66 <strcmp@plt+0x1e6ae>
  421e48:	mov    rdi,rbp
  421e4b:	call   408340 <strcmp@plt+0x4b88>
  421e50:	mov    rdi,rbp
  421e53:	mov    DWORD PTR [rbx],eax
  421e55:	call   408350 <strcmp@plt+0x4b98>
  421e5a:	mov    rdi,rax
  421e5d:	call   408130 <strcmp@plt+0x4978>
  421e62:	mov    QWORD PTR [rbx+0x8],rax
  421e66:	add    rsp,0x8
  421e6a:	mov    rax,rbx
  421e6d:	pop    rbx
  421e6e:	pop    rbp
  421e6f:	ret    
  421e70:	push   r15
  421e72:	push   r14
  421e74:	push   r13
  421e76:	push   r12
  421e78:	mov    r13,rdi
  421e7b:	push   rbp
  421e7c:	push   rbx
  421e7d:	mov    r12,rdx
  421e80:	mov    rdi,rsi
  421e83:	mov    rbp,rcx
  421e86:	mov    rbx,r8
  421e89:	sub    rsp,0x28
  421e8d:	call   434250 <strcmp@plt+0x30a98>
  421e92:	mov    rdx,QWORD PTR [r12+0x8]
  421e97:	cmp    WORD PTR [rdx+0x20],0x0
  421e9c:	jne    421f18 <strcmp@plt+0x1e760>
  421e9e:	movzx  eax,BYTE PTR [rdx+0x34]
  421ea2:	mov    DWORD PTR [rbx+0x10],eax
  421ea5:	mov    rax,0x468e3c
  421eac:	cmp    DWORD PTR [rax],0x2
  421eaf:	jg     421f68 <strcmp@plt+0x1e7b0>
  421eb5:	mov    r14d,0xfffffff6
  421ebb:	xor    r13d,r13d
  421ebe:	xor    r12d,r12d
  421ec1:	mov    rdi,QWORD PTR [rbx+0x8]
  421ec5:	test   rdi,rdi
  421ec8:	je     421ecf <strcmp@plt+0x1e717>
  421eca:	call   422730 <strcmp@plt+0x1ef78>
  421ecf:	sub    rsp,0x8
  421ed3:	mov    r9d,DWORD PTR [rbp+0x48]
  421ed7:	mov    rdx,r13
  421eda:	push   0x0
  421edc:	mov    rsi,r12
  421edf:	mov    rdi,rbp
  421ee2:	mov    r8d,0x10f5
  421ee8:	mov    ecx,0x10f5
  421eed:	call   4226a0 <strcmp@plt+0x1eee8>
  421ef2:	mov    QWORD PTR [rbx+0x8],rax
  421ef6:	mov    rax,0x422730
  421efd:	mov    QWORD PTR [rbx+0x18],rax
  421f01:	add    rsp,0x38
  421f05:	mov    eax,r14d
  421f08:	pop    rbx
  421f09:	pop    rbp
  421f0a:	pop    r12
  421f0c:	pop    r13
  421f0e:	pop    r14
  421f10:	pop    r15
  421f12:	ret    
  421f13:	nop    DWORD PTR [rax+rax*1+0x0]
  421f18:	mov    r15,QWORD PTR [r12+0x20]
  421f1d:	mov    r12,QWORD PTR [rax+0x10]
  421f21:	test   r12,r12
  421f24:	je     421f80 <strcmp@plt+0x1e7c8>
  421f26:	cmp    QWORD PTR [r15+0x10],0x0
  421f2b:	je     421f80 <strcmp@plt+0x1e7c8>
  421f2d:	mov    eax,DWORD PTR [rax+0x20]
  421f30:	mov    DWORD PTR [rsp+0x8],eax
  421f34:	mov    rdi,rbp
  421f37:	call   436140 <strcmp@plt+0x32988>
  421f3c:	test   eax,eax
  421f3e:	mov    r14d,eax
  421f41:	jne    421fae <strcmp@plt+0x1e7f6>
  421f43:	mov    rax,0x468e3c
  421f4a:	mov    eax,DWORD PTR [rax]
  421f4c:	test   eax,eax
  421f4e:	jle    421eb5 <strcmp@plt+0x1e6fd>
  421f54:	lea    rsi,[rip+0x2b0f5]        # 44d050 <strcmp@plt+0x49898>
  421f5b:	mov    edi,0x5
  421f60:	jmp    421f74 <strcmp@plt+0x1e7bc>
  421f62:	nop    WORD PTR [rax+rax*1+0x0]
  421f68:	lea    rsi,[rip+0x2b019]        # 44cf88 <strcmp@plt+0x497d0>
  421f6f:	mov    edi,0x7
  421f74:	xor    eax,eax
  421f76:	call   4306a0 <strcmp@plt+0x2cee8>
  421f7b:	jmp    421eb5 <strcmp@plt+0x1e6fd>
  421f80:	mov    r12,QWORD PTR [rax+0x8]
  421f84:	test   r12,r12
  421f87:	je     422110 <strcmp@plt+0x1e958>
  421f8d:	cmp    QWORD PTR [r15+0x8],0x0
  421f92:	je     422130 <strcmp@plt+0x1e978>
  421f98:	mov    eax,DWORD PTR [rax+0x1c]
  421f9b:	mov    rdi,rbp
  421f9e:	mov    DWORD PTR [rsp+0x8],eax
  421fa2:	call   436140 <strcmp@plt+0x32988>
  421fa7:	test   eax,eax
  421fa9:	mov    r14d,eax
  421fac:	je     421f43 <strcmp@plt+0x1e78b>
  421fae:	xor    edx,edx
  421fb0:	mov    rsi,QWORD PTR [r13+0x8]
  421fb4:	div    DWORD PTR [rsp+0x8]
  421fb8:	mov    edx,edx
  421fba:	mov    rax,QWORD PTR [r12+rdx*8]
  421fbe:	mov    rax,QWORD PTR [rax]
  421fc1:	mov    rdi,rax
  421fc4:	mov    QWORD PTR [rsp+0x8],rax
  421fc9:	call   421860 <strcmp@plt+0x1e0a8>
  421fce:	mov    rdi,rax
  421fd1:	mov    r12,rax
  421fd4:	call   4251c0 <strcmp@plt+0x21a08>
  421fd9:	cmp    ax,0x2
  421fdd:	je     422070 <strcmp@plt+0x1e8b8>
  421fe3:	cmp    ax,0xa
  421fe7:	jne    422028 <strcmp@plt+0x1e870>
  421fe9:	mov    rdi,QWORD PTR [r15+0x8]
  421fed:	mov    ecx,DWORD PTR [r15+0x1c]
  421ff1:	xor    edx,edx
  421ff3:	mov    eax,r14d
  421ff6:	mov    rsi,QWORD PTR [r13+0x8]
  421ffa:	div    ecx
  421ffc:	mov    edx,edx
  421ffe:	mov    rax,QWORD PTR [rdi+rdx*8]
  422002:	mov    rdi,QWORD PTR [rax]
  422005:	call   421860 <strcmp@plt+0x1e0a8>
  42200a:	mov    r13,rax
  42200d:	mov    rax,0x468e3c
  422014:	cmp    DWORD PTR [rax],0x2
  422017:	jg     422080 <strcmp@plt+0x1e8c8>
  422019:	mov    r14d,0x1
  42201f:	jmp    421ec1 <strcmp@plt+0x1e709>
  422024:	nop    DWORD PTR [rax+0x0]
  422028:	mov    rax,0x468e3c
  42202f:	cmp    DWORD PTR [rax],0x1
  422032:	jle    421eb5 <strcmp@plt+0x1e6fd>
  422038:	mov    rdi,QWORD PTR [rsp+0x8]
  42203d:	mov    r14d,0xfffffff6
  422043:	xor    r13d,r13d
  422046:	xor    r12d,r12d
  422049:	call   4251c0 <strcmp@plt+0x21a08>
  42204e:	lea    rsi,[rip+0x2b063]        # 44d0b8 <strcmp@plt+0x49900>
  422055:	movzx  edx,ax
  422058:	mov    edi,0x6
  42205d:	xor    eax,eax
  42205f:	call   4306a0 <strcmp@plt+0x2cee8>
  422064:	jmp    421ec1 <strcmp@plt+0x1e709>
  422069:	nop    DWORD PTR [rax+0x0]
  422070:	mov    rdi,QWORD PTR [r15]
  422073:	mov    ecx,DWORD PTR [r15+0x18]
  422077:	jmp    421ff1 <strcmp@plt+0x1e839>
  42207c:	nop    DWORD PTR [rax+0x0]
  422080:	mov    rdi,r13
  422083:	call   424890 <strcmp@plt+0x210d8>
  422088:	mov    rdi,r12
  42208b:	mov    QWORD PTR [rsp+0x18],rax
  422090:	call   424890 <strcmp@plt+0x210d8>
  422095:	movzx  r9d,WORD PTR [rbp+0x40]
  42209a:	movzx  r8d,BYTE PTR [rbp+0x44]
  42209f:	lea    rdi,[rbp+0x20]
  4220a3:	movzx  r14d,WORD PTR [rbp+0x42]
  4220a8:	mov    r15,rax
  4220ab:	mov    DWORD PTR [rsp+0x14],r9d
  4220b0:	mov    DWORD PTR [rsp+0x10],r8d
  4220b5:	call   424890 <strcmp@plt+0x210d8>
  4220ba:	mov    rdi,rbp
  4220bd:	mov    QWORD PTR [rsp+0x8],rax
  4220c2:	call   424890 <strcmp@plt+0x210d8>
  4220c7:	sub    rsp,0x8
  4220cb:	mov    rdx,rax
  4220ce:	mov    edi,0x7
  4220d3:	mov    rsi,QWORD PTR [rsp+0x20]
  4220d8:	xor    eax,eax
  4220da:	push   rsi
  4220db:	push   r15
  4220dd:	lea    rsi,[rip+0x2b004]        # 44d0e8 <strcmp@plt+0x49930>
  4220e4:	push   r14
  4220e6:	mov    r9d,DWORD PTR [rsp+0x34]
  4220eb:	mov    r14d,0x1
  4220f1:	mov    r8d,DWORD PTR [rsp+0x30]
  4220f6:	mov    rcx,QWORD PTR [rsp+0x28]
  4220fb:	call   4306a0 <strcmp@plt+0x2cee8>
  422100:	add    rsp,0x20
  422104:	jmp    421ec1 <strcmp@plt+0x1e709>
  422109:	nop    DWORD PTR [rax+0x0]
  422110:	mov    r12,QWORD PTR [rax]
  422113:	test   r12,r12
  422116:	je     42218b <strcmp@plt+0x1e9d3>
  422118:	cmp    QWORD PTR [r15],0x0
  42211c:	je     422182 <strcmp@plt+0x1e9ca>
  42211e:	mov    eax,DWORD PTR [rax+0x18]
  422121:	mov    DWORD PTR [rsp+0x8],eax
  422125:	jmp    421f34 <strcmp@plt+0x1e77c>
  42212a:	nop    WORD PTR [rax+rax*1+0x0]
  422130:	mov    r12,QWORD PTR [rax]
  422133:	test   r12,r12
  422136:	je     422160 <strcmp@plt+0x1e9a8>
  422138:	cmp    QWORD PTR [r15],0x0
  42213c:	jne    42211e <strcmp@plt+0x1e966>
  42213e:	mov    rax,0x468e3c
  422145:	cmp    DWORD PTR [rax],0x2
  422148:	jle    421eb5 <strcmp@plt+0x1e6fd>
  42214e:	lea    rsi,[rip+0x2ae83]        # 44cfd8 <strcmp@plt+0x49820>
  422155:	jmp    421f6f <strcmp@plt+0x1e7b7>
  42215a:	nop    WORD PTR [rax+rax*1+0x0]
  422160:	cmp    QWORD PTR [r15],0x0
  422164:	je     42213e <strcmp@plt+0x1e986>
  422166:	mov    rax,0x468e3c
  42216d:	cmp    DWORD PTR [rax],0x2
  422170:	jle    421eb5 <strcmp@plt+0x1e6fd>
  422176:	lea    rsi,[rip+0x2ae8b]        # 44d008 <strcmp@plt+0x49850>
  42217d:	jmp    421f6f <strcmp@plt+0x1e7b7>
  422182:	cmp    QWORD PTR [r15+0x8],0x0
  422187:	jne    422166 <strcmp@plt+0x1e9ae>
  422189:	jmp    42213e <strcmp@plt+0x1e986>
  42218b:	mov    rax,0x468e3c
  422192:	cmp    DWORD PTR [rax],0x2
  422195:	jle    421eb5 <strcmp@plt+0x1e6fd>
  42219b:	lea    rsi,[rip+0x2ae06]        # 44cfa8 <strcmp@plt+0x497f0>
  4221a2:	jmp    421f6f <strcmp@plt+0x1e7b7>
  4221a7:	nop    WORD PTR [rax+rax*1+0x0]
  4221b0:	push   r15
  4221b2:	push   r14
  4221b4:	mov    rdi,rsi
  4221b7:	push   r13
  4221b9:	push   r12
  4221bb:	mov    r12,rdx
  4221be:	push   rbp
  4221bf:	push   rbx
  4221c0:	mov    rbp,rcx
  4221c3:	mov    rbx,r8
  4221c6:	sub    rsp,0x28
  4221ca:	mov    rax,QWORD PTR [rdx+0x30]
  4221ce:	mov    r13,QWORD PTR [rax]
  4221d1:	call   434250 <strcmp@plt+0x30a98>
  4221d6:	mov    rdx,QWORD PTR [r12+0x8]
  4221db:	cmp    WORD PTR [rdx+0x20],0x0
  4221e0:	jne    422250 <strcmp@plt+0x1ea98>
  4221e2:	mov    rax,0x468e3c
  4221e9:	cmp    DWORD PTR [rax],0x2
  4221ec:	jg     422298 <strcmp@plt+0x1eae0>
  4221f2:	xor    r12d,r12d
  4221f5:	mov    r14d,0xfffffff6
  4221fb:	xor    r13d,r13d
  4221fe:	xor    r15d,r15d
  422201:	mov    rdi,QWORD PTR [rbx+0x8]
  422205:	test   rdi,rdi
  422208:	je     42220f <strcmp@plt+0x1ea57>
  42220a:	call   422730 <strcmp@plt+0x1ef78>
  42220f:	sub    rsp,0x8
  422213:	mov    r9d,DWORD PTR [rbp+0x48]
  422217:	mov    r8d,r12d
  42221a:	push   0x0
  42221c:	mov    rdx,r13
  42221f:	mov    rsi,r15
  422222:	mov    rdi,rbp
  422225:	mov    ecx,0x10f6
  42222a:	call   4226a0 <strcmp@plt+0x1eee8>
  42222f:	mov    QWORD PTR [rbx+0x8],rax
  422233:	mov    rax,0x422730
  42223a:	mov    QWORD PTR [rbx+0x18],rax
  42223e:	add    rsp,0x38
  422242:	mov    eax,r14d
  422245:	pop    rbx
  422246:	pop    rbp
  422247:	pop    r12
  422249:	pop    r13
  42224b:	pop    r14
  42224d:	pop    r15
  42224f:	ret    
  422250:	cmp    QWORD PTR [rax+0x10],0x0
  422255:	mov    rdx,QWORD PTR [r12+0x20]
  42225a:	je     4222b0 <strcmp@plt+0x1eaf8>
  42225c:	mov    r15,QWORD PTR [rdx+0x10]
  422260:	test   r15,r15
  422263:	je     4222b0 <strcmp@plt+0x1eaf8>
  422265:	mov    r14d,DWORD PTR [rdx+0x20]
  422269:	mov    rdi,rbp
  42226c:	call   436140 <strcmp@plt+0x32988>
  422271:	test   eax,eax
  422273:	jne    4222da <strcmp@plt+0x1eb22>
  422275:	mov    rax,0x468e3c
  42227c:	mov    edx,DWORD PTR [rax]
  42227e:	test   edx,edx
  422280:	jle    4221f2 <strcmp@plt+0x1ea3a>
  422286:	lea    rsi,[rip+0x2afb3]        # 44d240 <strcmp@plt+0x49a88>
  42228d:	mov    edi,0x5
  422292:	jmp    4222a4 <strcmp@plt+0x1eaec>
  422294:	nop    DWORD PTR [rax+0x0]
  422298:	lea    rsi,[rip+0x2aea1]        # 44d140 <strcmp@plt+0x49988>
  42229f:	mov    edi,0x7
  4222a4:	xor    eax,eax
  4222a6:	call   4306a0 <strcmp@plt+0x2cee8>
  4222ab:	jmp    4221f2 <strcmp@plt+0x1ea3a>
  4222b0:	mov    rcx,QWORD PTR [rax+0x8]
  4222b4:	test   rcx,rcx
  4222b7:	je     4223b0 <strcmp@plt+0x1ebf8>
  4222bd:	mov    r15,QWORD PTR [rdx+0x8]
  4222c1:	test   r15,r15
  4222c4:	je     4223b0 <strcmp@plt+0x1ebf8>
  4222ca:	mov    rdi,rbp
  4222cd:	mov    r14d,DWORD PTR [rdx+0x1c]
  4222d1:	call   436140 <strcmp@plt+0x32988>
  4222d6:	test   eax,eax
  4222d8:	je     422275 <strcmp@plt+0x1eabd>
  4222da:	xor    edx,edx
  4222dc:	mov    rdi,QWORD PTR [r13+0x8]
  4222e0:	div    r14d
  4222e3:	mov    eax,edx
  4222e5:	mov    r15,QWORD PTR [r15+rax*8]
  4222e9:	mov    rsi,r15
  4222ec:	call   42e5d0 <strcmp@plt+0x2ae18>
  4222f1:	test   rax,rax
  4222f4:	mov    r14,rax
  4222f7:	je     4223d0 <strcmp@plt+0x1ec18>
  4222fd:	mov    r15,QWORD PTR [rax+0x18]
  422301:	mov    r13,QWORD PTR [rax]
  422304:	movzx  r12d,WORD PTR [rax+0x8]
  422309:	mov    rax,0x468e3c
  422310:	cmp    DWORD PTR [rax],0x2
  422313:	jg     422320 <strcmp@plt+0x1eb68>
  422315:	mov    r14d,0x1
  42231b:	jmp    422201 <strcmp@plt+0x1ea49>
  422320:	mov    rdi,r13
  422323:	call   424890 <strcmp@plt+0x210d8>
  422328:	mov    rdi,QWORD PTR [r14+0x18]
  42232c:	mov    QWORD PTR [rsp+0x18],rax
  422331:	call   424890 <strcmp@plt+0x210d8>
  422336:	movzx  r9d,WORD PTR [rbp+0x40]
  42233b:	movzx  r8d,BYTE PTR [rbp+0x44]
  422340:	lea    rdi,[rbp+0x20]
  422344:	mov    QWORD PTR [rsp+0x10],rax
  422349:	movzx  r14d,WORD PTR [rbp+0x42]
  42234e:	mov    DWORD PTR [rsp+0xc],r9d
  422353:	mov    DWORD PTR [rsp+0x8],r8d
  422358:	call   424890 <strcmp@plt+0x210d8>
  42235d:	mov    rdi,rbp
  422360:	mov    QWORD PTR [rsp],rax
  422364:	call   424890 <strcmp@plt+0x210d8>
  422369:	sub    rsp,0x8
  42236d:	mov    rdx,rax
  422370:	mov    edi,0x7
  422375:	mov    rsi,QWORD PTR [rsp+0x20]
  42237a:	xor    eax,eax
  42237c:	push   rsi
  42237d:	mov    rcx,QWORD PTR [rsp+0x20]
  422382:	lea    rsi,[rip+0x2ad5f]        # 44d0e8 <strcmp@plt+0x49930>
  422389:	push   rcx
  42238a:	push   r14
  42238c:	mov    r14d,0x1
  422392:	mov    r9d,DWORD PTR [rsp+0x2c]
  422397:	mov    r8d,DWORD PTR [rsp+0x28]
  42239c:	mov    rcx,QWORD PTR [rsp+0x20]
  4223a1:	call   4306a0 <strcmp@plt+0x2cee8>
  4223a6:	add    rsp,0x20
  4223aa:	jmp    422201 <strcmp@plt+0x1ea49>
  4223af:	nop
  4223b0:	cmp    QWORD PTR [rax],0x0
  4223b4:	je     422423 <strcmp@plt+0x1ec6b>
  4223b6:	mov    r15,QWORD PTR [rdx]
  4223b9:	test   r15,r15
  4223bc:	je     422445 <strcmp@plt+0x1ec8d>
  4223c2:	mov    r14d,DWORD PTR [rdx+0x18]
  4223c6:	jmp    422269 <strcmp@plt+0x1eab1>
  4223cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4223d0:	mov    rax,0x468e3c
  4223d7:	mov    eax,DWORD PTR [rax]
  4223d9:	test   eax,eax
  4223db:	jle    4221f2 <strcmp@plt+0x1ea3a>
  4223e1:	mov    rdi,QWORD PTR [r12+0x8]
  4223e6:	mov    r14d,0xfffffff6
  4223ec:	xor    r13d,r13d
  4223ef:	call   42a820 <strcmp@plt+0x27068>
  4223f4:	mov    rdi,QWORD PTR [r15]
  4223f7:	mov    r12,rax
  4223fa:	xor    r15d,r15d
  4223fd:	call   424890 <strcmp@plt+0x210d8>
  422402:	lea    rsi,[rip+0x2ae9f]        # 44d2a8 <strcmp@plt+0x49af0>
  422409:	mov    rcx,r12
  42240c:	mov    rdx,rax
  42240f:	mov    edi,0x5
  422414:	xor    eax,eax
  422416:	xor    r12d,r12d
  422419:	call   4306a0 <strcmp@plt+0x2cee8>
  42241e:	jmp    422201 <strcmp@plt+0x1ea49>
  422423:	cmp    QWORD PTR [rdx],0x0
  422427:	je     422445 <strcmp@plt+0x1ec8d>
  422429:	mov    rax,0x468e3c
  422430:	cmp    DWORD PTR [rax],0x2
  422433:	jle    4221f2 <strcmp@plt+0x1ea3a>
  422439:	lea    rsi,[rip+0x2adb0]        # 44d1f0 <strcmp@plt+0x49a38>
  422440:	jmp    42229f <strcmp@plt+0x1eae7>
  422445:	test   rcx,rcx
  422448:	je     42246d <strcmp@plt+0x1ecb5>
  42244a:	cmp    QWORD PTR [rdx+0x8],0x0
  42244f:	jne    422429 <strcmp@plt+0x1ec71>
  422451:	mov    rax,0x468e3c
  422458:	cmp    DWORD PTR [rax],0x2
  42245b:	jle    4221f2 <strcmp@plt+0x1ea3a>
  422461:	lea    rsi,[rip+0x2ad50]        # 44d1b8 <strcmp@plt+0x49a00>
  422468:	jmp    42229f <strcmp@plt+0x1eae7>
  42246d:	mov    rax,0x468e3c
  422474:	cmp    DWORD PTR [rax],0x2
  422477:	jle    4221f2 <strcmp@plt+0x1ea3a>
  42247d:	lea    rsi,[rip+0x2acfc]        # 44d180 <strcmp@plt+0x499c8>
  422484:	jmp    42229f <strcmp@plt+0x1eae7>
  422489:	nop    DWORD PTR [rax+0x0]
  422490:	push   r15
  422492:	push   r14
  422494:	mov    r14,r9
  422497:	push   r13
  422499:	push   r12
  42249b:	mov    r12,rdi
  42249e:	push   rbp
  42249f:	push   rbx
  4224a0:	mov    rdi,rsi
  4224a3:	mov    rbx,rdx
  4224a6:	mov    rbp,rsi
  4224a9:	sub    rsp,0x18
  4224ad:	mov    QWORD PTR [rsp+0x8],rcx
  4224b2:	mov    QWORD PTR [rsp],r8
  4224b6:	call   4342b0 <strcmp@plt+0x30af8>
  4224bb:	mov    rdi,rbx
  4224be:	mov    r13,rax
  4224c1:	call   433030 <strcmp@plt+0x2f878>
  4224c6:	mov    rdi,r13
  4224c9:	mov    rsi,rax
  4224cc:	mov    r15,rax
  4224cf:	call   425440 <strcmp@plt+0x21c88>
  4224d4:	test   eax,eax
  4224d6:	je     4224e4 <strcmp@plt+0x1ed2c>
  4224d8:	mov    eax,DWORD PTR [r13+0x18]
  4224dc:	test   eax,eax
  4224de:	jne    4225e8 <strcmp@plt+0x1ee30>
  4224e4:	cmp    DWORD PTR [r12],0x2
  4224e9:	je     422590 <strcmp@plt+0x1edd8>
  4224ef:	mov    rcx,QWORD PTR [rsp]
  4224f3:	mov    r8,r14
  4224f6:	mov    rdx,rbx
  4224f9:	mov    rsi,rbp
  4224fc:	mov    rdi,r12
  4224ff:	call   421e70 <strcmp@plt+0x1e6b8>
  422504:	cmp    eax,0xfffffff6
  422507:	je     422520 <strcmp@plt+0x1ed68>
  422509:	mov    eax,0x1
  42250e:	add    rsp,0x18
  422512:	pop    rbx
  422513:	pop    rbp
  422514:	pop    r12
  422516:	pop    r13
  422518:	pop    r14
  42251a:	pop    r15
  42251c:	ret    
  42251d:	nop    DWORD PTR [rax]
  422520:	mov    rax,QWORD PTR [rbx+0x8]
  422524:	cmp    DWORD PTR [rax+0x18],0x3
  422528:	je     4225c5 <strcmp@plt+0x1ee0d>
  42252e:	cmp    BYTE PTR [rax+0x34],0x1
  422532:	jne    422509 <strcmp@plt+0x1ed51>
  422534:	mov    rax,QWORD PTR [rsp+0x8]
  422539:	test   rax,rax
  42253c:	je     422670 <strcmp@plt+0x1eeb8>
  422542:	mov    rcx,QWORD PTR [rsp]
  422546:	mov    r8,r14
  422549:	mov    rdx,rax
  42254c:	mov    rsi,rbp
  42254f:	mov    rdi,r12
  422552:	call   421e70 <strcmp@plt+0x1e6b8>
  422557:	cmp    eax,0xfffffff6
  42255a:	je     422642 <strcmp@plt+0x1ee8a>
  422560:	mov    rax,0x468e3c
  422567:	mov    DWORD PTR [r14+0x10],0x1
  42256f:	cmp    DWORD PTR [rax],0x2
  422572:	jle    422509 <strcmp@plt+0x1ed51>
  422574:	lea    rsi,[rip+0x2ae74]        # 44d3ef <strcmp@plt+0x49c37>
  42257b:	mov    edi,0x7
  422580:	xor    eax,eax
  422582:	call   4306a0 <strcmp@plt+0x2cee8>
  422587:	jmp    422509 <strcmp@plt+0x1ed51>
  422589:	nop    DWORD PTR [rax+0x0]
  422590:	mov    rax,QWORD PTR [rbx+0x30]
  422594:	test   rax,rax
  422597:	je     4224ef <strcmp@plt+0x1ed37>
  42259d:	cmp    QWORD PTR [rax],0x0
  4225a1:	je     4224ef <strcmp@plt+0x1ed37>
  4225a7:	mov    rcx,QWORD PTR [rsp]
  4225ab:	mov    r8,r14
  4225ae:	mov    rdx,rbx
  4225b1:	mov    rsi,rbp
  4225b4:	mov    rdi,r12
  4225b7:	call   4221b0 <strcmp@plt+0x1e9f8>
  4225bc:	cmp    eax,0xfffffff6
  4225bf:	jne    422509 <strcmp@plt+0x1ed51>
  4225c5:	mov    DWORD PTR [r14+0x10],0x3
  4225cd:	add    rsp,0x18
  4225d1:	mov    eax,0x1
  4225d6:	pop    rbx
  4225d7:	pop    rbp
  4225d8:	pop    r12
  4225da:	pop    r13
  4225dc:	pop    r14
  4225de:	pop    r15
  4225e0:	ret    
  4225e1:	nop    DWORD PTR [rax+0x0]
  4225e8:	mov    rdi,r15
  4225eb:	call   43b770 <strcmp@plt+0x37fb8>
  4225f0:	test   al,al
  4225f2:	jne    4224e4 <strcmp@plt+0x1ed2c>
  4225f8:	mov    rax,0x468e3c
  4225ff:	cmp    DWORD PTR [rax],0x2
  422602:	jle    422630 <strcmp@plt+0x1ee78>
  422604:	mov    rdi,r15
  422607:	call   424890 <strcmp@plt+0x210d8>
  42260c:	mov    rdi,r13
  42260f:	mov    rbx,rax
  422612:	call   424890 <strcmp@plt+0x210d8>
  422617:	lea    rsi,[rip+0x2ad02]        # 44d320 <strcmp@plt+0x49b68>
  42261e:	mov    rdx,rax
  422621:	mov    rcx,rbx
  422624:	mov    edi,0x7
  422629:	xor    eax,eax
  42262b:	call   4306a0 <strcmp@plt+0x2cee8>
  422630:	mov    DWORD PTR [r14+0x10],0x0
  422638:	mov    eax,0xfffffff6
  42263d:	jmp    42250e <strcmp@plt+0x1ed56>
  422642:	mov    rdi,QWORD PTR [rsp+0x8]
  422647:	call   433040 <strcmp@plt+0x2f888>
  42264c:	cmp    al,0x1
  42264e:	mov    rax,0x468e3c
  422655:	je     422682 <strcmp@plt+0x1eeca>
  422657:	cmp    DWORD PTR [rax],0x2
  42265a:	jle    422670 <strcmp@plt+0x1eeb8>
  42265c:	lea    rsi,[rip+0x2ad45]        # 44d3a8 <strcmp@plt+0x49bf0>
  422663:	mov    edi,0x7
  422668:	xor    eax,eax
  42266a:	call   4306a0 <strcmp@plt+0x2cee8>
  42266f:	nop
  422670:	mov    DWORD PTR [r14+0x10],0x0
  422678:	mov    eax,0x1
  42267d:	jmp    42250e <strcmp@plt+0x1ed56>
  422682:	cmp    DWORD PTR [rax],0x2
  422685:	jle    422670 <strcmp@plt+0x1eeb8>
  422687:	lea    rsi,[rip+0x2acda]        # 44d368 <strcmp@plt+0x49bb0>
  42268e:	mov    edi,0x7
  422693:	xor    eax,eax
  422695:	call   4306a0 <strcmp@plt+0x2cee8>
  42269a:	jmp    422670 <strcmp@plt+0x1eeb8>
  42269c:	nop    DWORD PTR [rax+0x0]
  4226a0:	push   r15
  4226a2:	push   r14
  4226a4:	mov    r15,rdi
  4226a7:	push   r13
  4226a9:	push   r12
  4226ab:	mov    edi,0x30
  4226b0:	push   rbp
  4226b1:	push   rbx
  4226b2:	mov    r14,rsi
  4226b5:	mov    r12d,ecx
  4226b8:	mov    ebp,r8d
  4226bb:	mov    ebx,r9d
  4226be:	sub    rsp,0x18
  4226c2:	mov    QWORD PTR [rsp+0x8],rdx
  4226c7:	call   434790 <strcmp@plt+0x30fd8>
  4226cc:	test   rax,rax
  4226cf:	mov    r13,rax
  4226d2:	je     422711 <strcmp@plt+0x1ef59>
  4226d4:	mov    rdi,r15
  4226d7:	call   436300 <strcmp@plt+0x32b48>
  4226dc:	mov    rdi,r14
  4226df:	mov    QWORD PTR [r13+0x0],rax
  4226e3:	call   424b80 <strcmp@plt+0x213c8>
  4226e8:	mov    rdi,QWORD PTR [rsp+0x8]
  4226ed:	mov    QWORD PTR [r13+0x8],rax
  4226f1:	call   424b80 <strcmp@plt+0x213c8>
  4226f6:	mov    QWORD PTR [r13+0x10],rax
  4226fa:	mov    rax,QWORD PTR [rsp+0x50]
  4226ff:	mov    WORD PTR [r13+0x18],r12w
  422704:	mov    WORD PTR [r13+0x1a],bp
  422709:	mov    DWORD PTR [r13+0x28],ebx
  42270d:	mov    QWORD PTR [r13+0x20],rax
  422711:	add    rsp,0x18
  422715:	mov    rax,r13
  422718:	pop    rbx
  422719:	pop    rbp
  42271a:	pop    r12
  42271c:	pop    r13
  42271e:	pop    r14
  422720:	pop    r15
  422722:	ret    
  422723:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42272e:	xchg   ax,ax
  422730:	test   rdi,rdi
  422733:	je     422760 <strcmp@plt+0x1efa8>
  422735:	push   rbx
  422736:	mov    rbx,rdi
  422739:	mov    rdi,QWORD PTR [rdi]
  42273c:	call   436360 <strcmp@plt+0x32ba8>
  422741:	mov    rdi,QWORD PTR [rbx+0x8]
  422745:	call   424750 <strcmp@plt+0x20f98>
  42274a:	mov    rdi,QWORD PTR [rbx+0x10]
  42274e:	call   424750 <strcmp@plt+0x20f98>
  422753:	mov    rdi,rbx
  422756:	pop    rbx
  422757:	jmp    4037b0 <free@plt>
  42275c:	nop    DWORD PTR [rax+0x0]
  422760:	repz ret 
  422762:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42276c:	nop    DWORD PTR [rax+0x0]
  422770:	movzx  edx,WORD PTR [rdi+0x24]
  422774:	xor    eax,eax
  422776:	cmp    dx,0xffff
  42277a:	je     42278b <strcmp@plt+0x1efd3>
  42277c:	add    rdx,QWORD PTR [rdi+0x30]
  422780:	je     42278b <strcmp@plt+0x1efd3>
  422782:	movzx  eax,BYTE PTR [rdx]
  422785:	shr    al,0x4
  422788:	movzx  eax,al
  42278b:	repz ret 
  42278d:	nop    DWORD PTR [rax]
  422790:	movzx  eax,WORD PTR [rdi+0x24]
  422794:	push   rbx
  422795:	xor    ebx,ebx
  422797:	cmp    ax,0xffff
  42279b:	je     4227a4 <strcmp@plt+0x1efec>
  42279d:	add    rax,QWORD PTR [rdi+0x30]
  4227a1:	mov    rbx,rax
  4227a4:	call   422770 <strcmp@plt+0x1efb8>
  4227a9:	cmp    eax,0x6
  4227ac:	ja     4227c4 <strcmp@plt+0x1f00c>
  4227ae:	lea    rdx,[rip+0x2ac57]        # 44d40c <strcmp@plt+0x49c54>
  4227b5:	mov    eax,eax
  4227b7:	movsxd rax,DWORD PTR [rdx+rax*4]
  4227bb:	add    rax,rdx
  4227be:	jmp    rax
  4227c0:	add    BYTE PTR [rbx+0x3],0x1
  4227c4:	pop    rbx
  4227c5:	ret    
  4227c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4227d0:	mov    rax,QWORD PTR [rdi+0x38]
  4227d4:	mov    rdx,rax
  4227d7:	sub    rdx,QWORD PTR [rdi+0x30]
  4227db:	mov    WORD PTR [rdi+0x1e],dx
  4227df:	mov    edx,DWORD PTR [rdi+0x14]
  4227e2:	cmp    edx,0x3
  4227e5:	jbe    422800 <strcmp@plt+0x1f048>
  4227e7:	lea    rcx,[rax+0x4]
  4227eb:	sub    edx,0x4
  4227ee:	mov    DWORD PTR [rdi+0x14],edx
  4227f1:	mov    QWORD PTR [rdi+0x38],rcx
  4227f5:	ret    
  4227f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422800:	xor    eax,eax
  422802:	ret    
  422803:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42280e:	xchg   ax,ax
  422810:	push   r13
  422812:	push   r12
  422814:	push   rbp
  422815:	push   rbx
  422816:	mov    rbx,rdi
  422819:	sub    rsp,0x8
  42281d:	mov    rax,QWORD PTR [rdi+0x38]
  422821:	sub    rax,QWORD PTR [rdi+0x30]
  422825:	mov    WORD PTR [rdi+0x20],ax
  422829:	call   435740 <strcmp@plt+0x31f88>
  42282e:	test   rax,rax
  422831:	je     42299d <strcmp@plt+0x1f1e5>
  422837:	mov    rbp,rax
  42283a:	mov    rax,QWORD PTR [rbx+0x38]
  42283e:	sub    rax,QWORD PTR [rbx+0x30]
  422842:	mov    rdi,rbx
  422845:	mov    WORD PTR [rbx+0x22],ax
  422849:	call   435790 <strcmp@plt+0x31fd8>
  42284e:	mov    r12,rax
  422851:	mov    rax,QWORD PTR [rbx+0x38]
  422855:	sub    rax,QWORD PTR [rbx+0x30]
  422859:	mov    WORD PTR [rbx+0x24],ax
  42285d:	movzx  eax,BYTE PTR [rbp+0x0]
  422861:	movzx  esi,WORD PTR [r12+0x4]
  422867:	and    eax,0xfffffff0
  42286a:	mov    ebx,esi
  42286c:	rol    bx,0x8
  422870:	cmp    al,0x40
  422872:	je     422920 <strcmp@plt+0x1f168>
  422878:	mov    r13,0x468e3c
  42287f:	cmp    WORD PTR [r12+0x6],0x0
  422886:	jne    422958 <strcmp@plt+0x1f1a0>
  42288c:	cmp    DWORD PTR [r13+0x0],0x1
  422891:	jg     4228a8 <strcmp@plt+0x1f0f0>
  422893:	add    rsp,0x8
  422897:	mov    eax,0x1
  42289c:	pop    rbx
  42289d:	pop    rbp
  42289e:	pop    r12
  4228a0:	pop    r13
  4228a2:	ret    
  4228a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4228a8:	movzx  edi,BYTE PTR [rbp+0x0]
  4228ac:	movzx  ebx,WORD PTR [r12+0x2]
  4228b2:	movzx  r12d,WORD PTR [r12]
  4228b7:	shr    dil,0x4
  4228bb:	rol    bx,0x8
  4228bf:	movzx  edi,dil
  4228c3:	rol    r12w,0x8
  4228c8:	call   4262c0 <strcmp@plt+0x22b08>
  4228cd:	lea    rdi,[rbp+0x10]
  4228d1:	movzx  esi,al
  4228d4:	call   425f00 <strcmp@plt+0x22748>
  4228d9:	movzx  edi,BYTE PTR [rbp+0x0]
  4228dd:	mov    r13,rax
  4228e0:	shr    dil,0x4
  4228e4:	movzx  edi,dil
  4228e8:	call   4262c0 <strcmp@plt+0x22b08>
  4228ed:	lea    rdi,[rbp+0xc]
  4228f1:	movzx  esi,al
  4228f4:	call   425f00 <strcmp@plt+0x22748>
  4228f9:	lea    rsi,[rip+0x2ac00]        # 44d500 <strcmp@plt+0x49d48>
  422900:	mov    rdx,rax
  422903:	movzx  r9d,bx
  422907:	movzx  r8d,r12w
  42290b:	mov    rcx,r13
  42290e:	mov    edi,0x6
  422913:	xor    eax,eax
  422915:	call   4306a0 <strcmp@plt+0x2cee8>
  42291a:	jmp    422893 <strcmp@plt+0x1f0db>
  42291f:	nop
  422920:	mov    esi,0x14
  422925:	mov    rdi,rbp
  422928:	call   42d230 <strcmp@plt+0x29a78>
  42292d:	test   ax,ax
  422930:	mov    r13,0x468e3c
  422937:	je     42287f <strcmp@plt+0x1f0c7>
  42293d:	cmp    DWORD PTR [r13+0x0],0x1
  422942:	jg     4229b0 <strcmp@plt+0x1f1f8>
  422944:	cmp    WORD PTR [r12+0x6],0x0
  42294b:	je     422893 <strcmp@plt+0x1f0db>
  422951:	nop    DWORD PTR [rax+0x0]
  422958:	movzx  edi,BYTE PTR [rbp+0x0]
  42295c:	shr    dil,0x4
  422960:	movzx  edi,dil
  422964:	call   4262c0 <strcmp@plt+0x22b08>
  422969:	movzx  esi,bx
  42296c:	movzx  ecx,al
  42296f:	mov    rdx,rbp
  422972:	mov    rdi,r12
  422975:	call   42d400 <strcmp@plt+0x29c48>
  42297a:	test   ax,ax
  42297d:	je     42288c <strcmp@plt+0x1f0d4>
  422983:	cmp    DWORD PTR [r13+0x0],0x1
  422988:	jle    42299d <strcmp@plt+0x1f1e5>
  42298a:	lea    rsi,[rip+0x2aaf3]        # 44d484 <strcmp@plt+0x49ccc>
  422991:	mov    edi,0x6
  422996:	xor    eax,eax
  422998:	call   4306a0 <strcmp@plt+0x2cee8>
  42299d:	add    rsp,0x8
  4229a1:	xor    eax,eax
  4229a3:	pop    rbx
  4229a4:	pop    rbp
  4229a5:	pop    r12
  4229a7:	pop    r13
  4229a9:	ret    
  4229aa:	nop    WORD PTR [rax+rax*1+0x0]
  4229b0:	lea    rsi,[rip+0x2aab9]        # 44d470 <strcmp@plt+0x49cb8>
  4229b7:	mov    edi,0x6
  4229bc:	xor    eax,eax
  4229be:	call   4306a0 <strcmp@plt+0x2cee8>
  4229c3:	jmp    42287f <strcmp@plt+0x1f0c7>
  4229c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4229d0:	push   rbx
  4229d1:	mov    rbx,rdi
  4229d4:	mov    rdi,QWORD PTR [rdi+0x38]
  4229d8:	call   424d30 <strcmp@plt+0x21578>
  4229dd:	test   eax,eax
  4229df:	js     422a00 <strcmp@plt+0x1f248>
  4229e1:	mov    ecx,DWORD PTR [rbx+0x14]
  4229e4:	mov    edx,eax
  4229e6:	mov    eax,0x1
  4229eb:	cmp    edx,ecx
  4229ed:	ja     4229fa <strcmp@plt+0x1f242>
  4229ef:	mov    esi,edx
  4229f1:	add    QWORD PTR [rbx+0x38],rsi
  4229f5:	sub    ecx,edx
  4229f7:	mov    DWORD PTR [rbx+0x14],ecx
  4229fa:	pop    rbx
  4229fb:	ret    
  4229fc:	nop    DWORD PTR [rax+0x0]
  422a00:	xor    eax,eax
  422a02:	pop    rbx
  422a03:	ret    
  422a04:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  422a0f:	nop
  422a10:	push   r12
  422a12:	push   rbp
  422a13:	mov    rbp,rsi
  422a16:	push   rbx
  422a17:	mov    r12,QWORD PTR [rdi+0x38]
  422a1b:	mov    rbx,rdi
  422a1e:	lea    rdi,[r12+0x2]
  422a23:	call   424d30 <strcmp@plt+0x21578>
  422a28:	mov    edx,DWORD PTR [rbx+0x14]
  422a2b:	cmp    edx,eax
  422a2d:	jb     422a3a <strcmp@plt+0x1f282>
  422a2f:	mov    ecx,eax
  422a31:	add    QWORD PTR [rbx+0x38],rcx
  422a35:	sub    edx,eax
  422a37:	mov    DWORD PTR [rbx+0x14],edx
  422a3a:	movzx  esi,BYTE PTR [r12+0x1]
  422a40:	mov    rdi,rbp
  422a43:	call   425300 <strcmp@plt+0x21b48>
  422a48:	pop    rbx
  422a49:	mov    eax,0x1
  422a4e:	pop    rbp
  422a4f:	pop    r12
  422a51:	ret    
  422a52:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  422a5d:	nop    DWORD PTR [rax]
  422a60:	push   r15
  422a62:	push   r14
  422a64:	push   r13
  422a66:	push   r12
  422a68:	push   rbp
  422a69:	push   rbx
  422a6a:	sub    rsp,0x8
  422a6e:	movzx  r13d,WORD PTR [rdi+0x24]
  422a73:	cmp    r13w,0xffff
  422a78:	je     422b08 <strcmp@plt+0x1f350>
  422a7e:	xor    eax,eax
  422a80:	mov    r14,rdi
  422a83:	mov    r15,rsi
  422a86:	add    r13,QWORD PTR [rdi+0x30]
  422a8a:	xor    ebx,ebx
  422a8c:	call   424740 <strcmp@plt+0x20f88>
  422a91:	mov    rbp,rax
  422a94:	jmp    422aed <strcmp@plt+0x1f335>
  422a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422aa0:	mov    rdi,rbp
  422aa3:	call   424b80 <strcmp@plt+0x213c8>
  422aa8:	mov    rsi,r15
  422aab:	mov    rdi,rax
  422aae:	call   42d540 <strcmp@plt+0x29d88>
  422ab3:	mov    rax,0x468e3c
  422aba:	mov    eax,DWORD PTR [rax]
  422abc:	test   eax,eax
  422abe:	jle    422ade <strcmp@plt+0x1f326>
  422ac0:	mov    rdi,rbp
  422ac3:	call   424890 <strcmp@plt+0x210d8>
  422ac8:	lea    rsi,[rip+0x2a9ca]        # 44d499 <strcmp@plt+0x49ce1>
  422acf:	mov    rdx,rax
  422ad2:	mov    edi,0x5
  422ad7:	xor    eax,eax
  422ad9:	call   4306a0 <strcmp@plt+0x2cee8>
  422ade:	movzx  eax,BYTE PTR [r13+0x2]
  422ae3:	add    ebx,0x1
  422ae6:	and    eax,0x1f
  422ae9:	cmp    eax,ebx
  422aeb:	jl     422b20 <strcmp@plt+0x1f368>
  422aed:	mov    rsi,rbp
  422af0:	mov    rdi,r14
  422af3:	call   4229d0 <strcmp@plt+0x1f218>
  422af8:	cmp    eax,0x1
  422afb:	mov    r12d,eax
  422afe:	je     422aa0 <strcmp@plt+0x1f2e8>
  422b00:	xor    r12d,r12d
  422b03:	jmp    422b28 <strcmp@plt+0x1f370>
  422b05:	nop    DWORD PTR [rax]
  422b08:	xor    eax,eax
  422b0a:	call   424740 <strcmp@plt+0x20f88>
  422b0f:	mov    rax,QWORD PTR ds:0x0
  422b17:	ud2    
  422b19:	nop    DWORD PTR [rax+0x0]
  422b20:	mov    rdi,rbp
  422b23:	call   424750 <strcmp@plt+0x20f98>
  422b28:	add    rsp,0x8
  422b2c:	mov    eax,r12d
  422b2f:	pop    rbx
  422b30:	pop    rbp
  422b31:	pop    r12
  422b33:	pop    r13
  422b35:	pop    r14
  422b37:	pop    r15
  422b39:	ret    
  422b3a:	nop    WORD PTR [rax+rax*1+0x0]
  422b40:	push   r12
  422b42:	push   rbp
  422b43:	mov    r12,rsi
  422b46:	push   rbx
  422b47:	mov    rbp,QWORD PTR [rdi+0x38]
  422b4b:	mov    rbx,rdi
  422b4e:	mov    rdi,rbp
  422b51:	call   42a100 <strcmp@plt+0x26948>
  422b56:	test   eax,eax
  422b58:	jle    422bd0 <strcmp@plt+0x1f418>
  422b5a:	mov    edx,DWORD PTR [rbx+0x14]
  422b5d:	cmp    eax,edx
  422b5f:	jbe    422b80 <strcmp@plt+0x1f3c8>
  422b61:	mov    rax,0x468e3c
  422b68:	mov    eax,DWORD PTR [rax]
  422b6a:	test   eax,eax
  422b6c:	jg     422b98 <strcmp@plt+0x1f3e0>
  422b6e:	pop    rbx
  422b6f:	mov    eax,0x1
  422b74:	pop    rbp
  422b75:	pop    r12
  422b77:	ret    
  422b78:	nop    DWORD PTR [rax+rax*1+0x0]
  422b80:	sub    edx,eax
  422b82:	mov    ecx,eax
  422b84:	mov    rax,0x468e3c
  422b8b:	add    QWORD PTR [rbx+0x38],rcx
  422b8f:	mov    DWORD PTR [rbx+0x14],edx
  422b92:	mov    eax,DWORD PTR [rax]
  422b94:	test   eax,eax
  422b96:	jle    422b6e <strcmp@plt+0x1f3b6>
  422b98:	mov    rdi,QWORD PTR [r12]
  422b9c:	call   424890 <strcmp@plt+0x210d8>
  422ba1:	mov    rdi,rbp
  422ba4:	mov    rbx,rax
  422ba7:	call   42d190 <strcmp@plt+0x299d8>
  422bac:	lea    rsi,[rip+0x2a8f4]        # 44d4a7 <strcmp@plt+0x49cef>
  422bb3:	mov    rdx,rax
  422bb6:	mov    rcx,rbx
  422bb9:	mov    edi,0x5
  422bbe:	xor    eax,eax
  422bc0:	call   4306a0 <strcmp@plt+0x2cee8>
  422bc5:	jmp    422b6e <strcmp@plt+0x1f3b6>
  422bc7:	nop    WORD PTR [rax+rax*1+0x0]
  422bd0:	pop    rbx
  422bd1:	xor    eax,eax
  422bd3:	pop    rbp
  422bd4:	pop    r12
  422bd6:	ret    
  422bd7:	nop    WORD PTR [rax+rax*1+0x0]
  422be0:	push   r15
  422be2:	push   r14
  422be4:	mov    r15,rdx
  422be7:	push   r13
  422be9:	push   r12
  422beb:	mov    r12,rdi
  422bee:	push   rbp
  422bef:	push   rbx
  422bf0:	mov    rbx,rsi
  422bf3:	sub    rsp,0x18
  422bf7:	mov    eax,DWORD PTR [rdi+0x14]
  422bfa:	mov    r14,QWORD PTR [rdi+0x38]
  422bfe:	mov    QWORD PTR [rsp+0x8],rcx
  422c03:	cmp    eax,0x9
  422c06:	mov    rdi,r14
  422c09:	jbe    422c1c <strcmp@plt+0x1f464>
  422c0b:	lea    rdi,[r14+0xa]
  422c0f:	sub    eax,0xa
  422c12:	mov    DWORD PTR [r12+0x14],eax
  422c17:	mov    QWORD PTR [r12+0x38],rdi
  422c1c:	mov    rsi,rbx
  422c1f:	call   424d30 <strcmp@plt+0x21578>
  422c24:	test   eax,eax
  422c26:	jle    422d20 <strcmp@plt+0x1f568>
  422c2c:	mov    edx,DWORD PTR [r12+0x14]
  422c31:	cmp    eax,edx
  422c33:	jbe    422d38 <strcmp@plt+0x1f580>
  422c39:	movzx  esi,BYTE PTR [r14+0x5]
  422c3e:	mov    rdi,rbx
  422c41:	call   425300 <strcmp@plt+0x21b48>
  422c46:	mov    rax,0x468e3c
  422c4d:	mov    edx,DWORD PTR [rax]
  422c4f:	test   edx,edx
  422c51:	jg     422d50 <strcmp@plt+0x1f598>
  422c57:	xor    ebp,ebp
  422c59:	cmp    BYTE PTR [r14+0x4],0x0
  422c5e:	mov    QWORD PTR [rsp],0x0
  422c66:	jne    422cac <strcmp@plt+0x1f4f4>
  422c68:	jmp    422cf8 <strcmp@plt+0x1f540>
  422c6d:	nop    DWORD PTR [rax]
  422c70:	mov    rax,0x468e3c
  422c77:	mov    eax,DWORD PTR [rax]
  422c79:	test   eax,eax
  422c7b:	jle    422ca0 <strcmp@plt+0x1f4e8>
  422c7d:	mov    rdi,QWORD PTR [rbx]
  422c80:	call   424890 <strcmp@plt+0x210d8>
  422c85:	lea    rsi,[rip+0x2a89c]        # 44d528 <strcmp@plt+0x49d70>
  422c8c:	mov    rdx,rax
  422c8f:	mov    edi,0x5
  422c94:	xor    eax,eax
  422c96:	call   4306a0 <strcmp@plt+0x2cee8>
  422c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  422ca0:	movzx  eax,BYTE PTR [r14+0x4]
  422ca5:	add    ebp,0x1
  422ca8:	cmp    eax,ebp
  422caa:	jle    422cf8 <strcmp@plt+0x1f540>
  422cac:	xor    eax,eax
  422cae:	mov    r13,QWORD PTR [r12+0x38]
  422cb3:	call   429d80 <strcmp@plt+0x265c8>
  422cb8:	mov    rdi,r12
  422cbb:	mov    rsi,rax
  422cbe:	mov    rbx,rax
  422cc1:	call   422b40 <strcmp@plt+0x1f388>
  422cc6:	cmp    eax,0x1
  422cc9:	jne    422d20 <strcmp@plt+0x1f568>
  422ccb:	mov    rsi,r15
  422cce:	mov    rdi,rbx
  422cd1:	call   42d540 <strcmp@plt+0x29d88>
  422cd6:	test   BYTE PTR [r13+0x5],0x2
  422cdb:	je     422ca0 <strcmp@plt+0x1f4e8>
  422cdd:	cmp    QWORD PTR [rsp],0x0
  422ce2:	jne    422c70 <strcmp@plt+0x1f4b8>
  422ce4:	movzx  eax,BYTE PTR [r14+0x4]
  422ce9:	add    ebp,0x1
  422cec:	mov    QWORD PTR [rsp],rbx
  422cf0:	cmp    eax,ebp
  422cf2:	jg     422cac <strcmp@plt+0x1f4f4>
  422cf4:	nop    DWORD PTR [rax+0x0]
  422cf8:	mov    rax,QWORD PTR [rsp+0x8]
  422cfd:	test   rax,rax
  422d00:	je     422d81 <strcmp@plt+0x1f5c9>
  422d02:	mov    rcx,QWORD PTR [rsp]
  422d06:	mov    QWORD PTR [rax],rcx
  422d09:	add    rsp,0x18
  422d0d:	mov    eax,0x1
  422d12:	pop    rbx
  422d13:	pop    rbp
  422d14:	pop    r12
  422d16:	pop    r13
  422d18:	pop    r14
  422d1a:	pop    r15
  422d1c:	ret    
  422d1d:	nop    DWORD PTR [rax]
  422d20:	xor    eax,eax
  422d22:	add    rsp,0x18
  422d26:	pop    rbx
  422d27:	pop    rbp
  422d28:	pop    r12
  422d2a:	pop    r13
  422d2c:	pop    r14
  422d2e:	pop    r15
  422d30:	ret    
  422d31:	nop    DWORD PTR [rax+0x0]
  422d38:	sub    edx,eax
  422d3a:	mov    ecx,eax
  422d3c:	add    QWORD PTR [r12+0x38],rcx
  422d41:	mov    DWORD PTR [r12+0x14],edx
  422d46:	jmp    422c39 <strcmp@plt+0x1f481>
  422d4b:	nop    DWORD PTR [rax+rax*1+0x0]
  422d50:	mov    rdi,rbx
  422d53:	call   424890 <strcmp@plt+0x210d8>
  422d58:	mov    rdi,r14
  422d5b:	mov    rbx,rax
  422d5e:	call   42ce90 <strcmp@plt+0x296d8>
  422d63:	lea    rsi,[rip+0x2a74e]        # 44d4b8 <strcmp@plt+0x49d00>
  422d6a:	mov    rdx,rax
  422d6d:	mov    rcx,rbx
  422d70:	mov    edi,0x5
  422d75:	xor    eax,eax
  422d77:	call   4306a0 <strcmp@plt+0x2cee8>
  422d7c:	jmp    422c57 <strcmp@plt+0x1f49f>
  422d81:	mov    eax,0x1
  422d86:	jmp    422d22 <strcmp@plt+0x1f56a>
  422d88:	nop    DWORD PTR [rax+rax*1+0x0]
  422d90:	push   r15
  422d92:	push   r14
  422d94:	xor    r15d,r15d
  422d97:	push   r13
  422d99:	push   r12
  422d9b:	push   rbp
  422d9c:	push   rbx
  422d9d:	sub    rsp,0x8
  422da1:	test   rsi,rsi
  422da4:	je     422dfd <strcmp@plt+0x1f645>
  422da6:	mov    rax,QWORD PTR [rdi+0x38]
  422daa:	mov    rbp,rdx
  422dad:	mov    r13,rsi
  422db0:	mov    rbx,rdi
  422db3:	movbe  edx,DWORD PTR [rax]
  422db7:	mov    DWORD PTR [rsi+0x30],edx
  422dba:	movzx  edx,BYTE PTR [rax+0x6]
  422dbe:	shr    dl,0x5
  422dc1:	mov    BYTE PTR [rsi+0x34],dl
  422dc4:	movzx  eax,BYTE PTR [rax+0x6]
  422dc8:	shr    al,0x4
  422dcb:	and    eax,0x1
  422dce:	mov    BYTE PTR [rsi+0x35],al
  422dd1:	call   42d4e0 <strcmp@plt+0x29d28>
  422dd6:	mov    rcx,rbp
  422dd9:	mov    rdx,rax
  422ddc:	mov    rsi,r13
  422ddf:	mov    rdi,rbx
  422de2:	mov    r14,rax
  422de5:	call   422be0 <strcmp@plt+0x1f428>
  422dea:	cmp    eax,0x1
  422ded:	mov    r15d,eax
  422df0:	je     422e10 <strcmp@plt+0x1f658>
  422df2:	mov    rdi,r14
  422df5:	xor    r15d,r15d
  422df8:	call   42dac0 <strcmp@plt+0x2a308>
  422dfd:	add    rsp,0x8
  422e01:	mov    eax,r15d
  422e04:	pop    rbx
  422e05:	pop    rbp
  422e06:	pop    r12
  422e08:	pop    r13
  422e0a:	pop    r14
  422e0c:	pop    r15
  422e0e:	ret    
  422e0f:	nop
  422e10:	mov    rbx,QWORD PTR [r14+0x8]
  422e14:	cmp    r14,rbx
  422e17:	je     422e4c <strcmp@plt+0x1f694>
  422e19:	nop    DWORD PTR [rax+0x0]
  422e20:	mov    r12,QWORD PTR [rbx+0x10]
  422e24:	mov    rdi,r13
  422e27:	mov    rsi,r12
  422e2a:	call   42acb0 <strcmp@plt+0x274f8>
  422e2f:	cmp    eax,0x1
  422e32:	mov    ebp,eax
  422e34:	je     422e43 <strcmp@plt+0x1f68b>
  422e36:	mov    rdi,r12
  422e39:	call   429d50 <strcmp@plt+0x26598>
  422e3e:	cmp    ebp,0xfffffffb
  422e41:	jne    422df2 <strcmp@plt+0x1f63a>
  422e43:	mov    rbx,QWORD PTR [rbx+0x8]
  422e47:	cmp    r14,rbx
  422e4a:	jne    422e20 <strcmp@plt+0x1f668>
  422e4c:	mov    rdi,r14
  422e4f:	call   42dac0 <strcmp@plt+0x2a308>
  422e54:	jmp    422dfd <strcmp@plt+0x1f645>
  422e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422e60:	push   r14
  422e62:	push   r13
  422e64:	mov    r14,rdx
  422e67:	push   r12
  422e69:	push   rbp
  422e6a:	mov    r12,rdi
  422e6d:	push   rbx
  422e6e:	mov    eax,DWORD PTR [rdi+0x14]
  422e71:	mov    rbx,rsi
  422e74:	mov    r13,QWORD PTR [rdi+0x38]
  422e78:	cmp    eax,0x9
  422e7b:	mov    rdi,r13
  422e7e:	jbe    422e91 <strcmp@plt+0x1f6d9>
  422e80:	lea    rdi,[r13+0xa]
  422e84:	sub    eax,0xa
  422e87:	mov    DWORD PTR [r12+0x14],eax
  422e8c:	mov    QWORD PTR [r12+0x38],rdi
  422e91:	mov    rsi,rbx
  422e94:	call   424d30 <strcmp@plt+0x21578>
  422e99:	test   eax,eax
  422e9b:	jle    422f01 <strcmp@plt+0x1f749>
  422e9d:	mov    edx,DWORD PTR [r12+0x14]
  422ea2:	cmp    eax,edx
  422ea4:	jbe    422f10 <strcmp@plt+0x1f758>
  422ea6:	movzx  esi,BYTE PTR [r13+0x5]
  422eab:	mov    rdi,rbx
  422eae:	call   425300 <strcmp@plt+0x21b48>
  422eb3:	mov    rax,0x468e3c
  422eba:	mov    eax,DWORD PTR [rax]
  422ebc:	test   eax,eax
  422ebe:	jg     422f20 <strcmp@plt+0x1f768>
  422ec0:	xor    ebx,ebx
  422ec2:	cmp    BYTE PTR [r13+0x4],0x0
  422ec7:	jne    422ee7 <strcmp@plt+0x1f72f>
  422ec9:	jmp    422f58 <strcmp@plt+0x1f7a0>
  422ece:	xchg   ax,ax
  422ed0:	mov    rsi,r14
  422ed3:	mov    rdi,rbp
  422ed6:	add    ebx,0x1
  422ed9:	call   42d540 <strcmp@plt+0x29d88>
  422ede:	movzx  eax,BYTE PTR [r13+0x4]
  422ee3:	cmp    eax,ebx
  422ee5:	jle    422f58 <strcmp@plt+0x1f7a0>
  422ee7:	xor    eax,eax
  422ee9:	call   429d80 <strcmp@plt+0x265c8>
  422eee:	mov    rdi,r12
  422ef1:	mov    rsi,rax
  422ef4:	mov    rbp,rax
  422ef7:	call   422b40 <strcmp@plt+0x1f388>
  422efc:	cmp    eax,0x1
  422eff:	je     422ed0 <strcmp@plt+0x1f718>
  422f01:	pop    rbx
  422f02:	xor    eax,eax
  422f04:	pop    rbp
  422f05:	pop    r12
  422f07:	pop    r13
  422f09:	pop    r14
  422f0b:	ret    
  422f0c:	nop    DWORD PTR [rax+0x0]
  422f10:	sub    edx,eax
  422f12:	mov    ecx,eax
  422f14:	add    QWORD PTR [r12+0x38],rcx
  422f19:	mov    DWORD PTR [r12+0x14],edx
  422f1e:	jmp    422ea6 <strcmp@plt+0x1f6ee>
  422f20:	mov    rdi,rbx
  422f23:	call   424890 <strcmp@plt+0x210d8>
  422f28:	mov    rdi,r13
  422f2b:	mov    rbx,rax
  422f2e:	call   42cf20 <strcmp@plt+0x29768>
  422f33:	lea    rsi,[rip+0x2a57e]        # 44d4b8 <strcmp@plt+0x49d00>
  422f3a:	mov    rdx,rax
  422f3d:	mov    rcx,rbx
  422f40:	mov    edi,0x5
  422f45:	xor    eax,eax
  422f47:	call   4306a0 <strcmp@plt+0x2cee8>
  422f4c:	jmp    422ec0 <strcmp@plt+0x1f708>
  422f51:	nop    DWORD PTR [rax+0x0]
  422f58:	pop    rbx
  422f59:	mov    eax,0x1
  422f5e:	pop    rbp
  422f5f:	pop    r12
  422f61:	pop    r13
  422f63:	pop    r14
  422f65:	ret    
  422f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422f70:	push   r15
  422f72:	push   r14
  422f74:	xor    r15d,r15d
  422f77:	push   r13
  422f79:	push   r12
  422f7b:	push   rbp
  422f7c:	push   rbx
  422f7d:	sub    rsp,0x8
  422f81:	test   rsi,rsi
  422f84:	je     422fe4 <strcmp@plt+0x1f82c>
  422f86:	mov    rdx,QWORD PTR [rdi+0x38]
  422f8a:	mov    r13,rsi
  422f8d:	mov    rbx,rdi
  422f90:	movbe  eax,DWORD PTR [rdx]
  422f94:	mov    DWORD PTR [rsi+0x38],eax
  422f97:	movzx  eax,BYTE PTR [rdx+0x6]
  422f9b:	shr    al,0x5
  422f9e:	mov    BYTE PTR [rsi+0x3c],al
  422fa1:	movzx  eax,BYTE PTR [rdx+0x6]
  422fa5:	shr    al,0x4
  422fa8:	and    eax,0x1
  422fab:	mov    BYTE PTR [rsi+0x3d],al
  422fae:	movzx  eax,BYTE PTR [rdx+0x6]
  422fb2:	shr    al,0x3
  422fb5:	and    eax,0x1
  422fb8:	mov    BYTE PTR [rsi+0x3e],al
  422fbb:	call   42d4e0 <strcmp@plt+0x29d28>
  422fc0:	mov    rsi,r13
  422fc3:	mov    rdx,rax
  422fc6:	mov    rdi,rbx
  422fc9:	mov    r14,rax
  422fcc:	call   422e60 <strcmp@plt+0x1f6a8>
  422fd1:	cmp    eax,0x1
  422fd4:	mov    r15d,eax
  422fd7:	je     423000 <strcmp@plt+0x1f848>
  422fd9:	mov    rdi,r14
  422fdc:	xor    r15d,r15d
  422fdf:	call   42dac0 <strcmp@plt+0x2a308>
  422fe4:	add    rsp,0x8
  422fe8:	mov    eax,r15d
  422feb:	pop    rbx
  422fec:	pop    rbp
  422fed:	pop    r12
  422fef:	pop    r13
  422ff1:	pop    r14
  422ff3:	pop    r15
  422ff5:	ret    
  422ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423000:	mov    rbx,QWORD PTR [r14+0x8]
  423004:	cmp    r14,rbx
  423007:	je     42303c <strcmp@plt+0x1f884>
  423009:	nop    DWORD PTR [rax+0x0]
  423010:	mov    r12,QWORD PTR [rbx+0x10]
  423014:	mov    rdi,r13
  423017:	mov    rsi,r12
  42301a:	call   42b900 <strcmp@plt+0x28148>
  42301f:	cmp    eax,0x1
  423022:	mov    ebp,eax
  423024:	je     423033 <strcmp@plt+0x1f87b>
  423026:	mov    rdi,r12
  423029:	call   429d50 <strcmp@plt+0x26598>
  42302e:	cmp    ebp,0xfffffffb
  423031:	jne    422fd9 <strcmp@plt+0x1f821>
  423033:	mov    rbx,QWORD PTR [rbx+0x8]
  423037:	cmp    r14,rbx
  42303a:	jne    423010 <strcmp@plt+0x1f858>
  42303c:	mov    rdi,r14
  42303f:	call   42dac0 <strcmp@plt+0x2a308>
  423044:	jmp    422fe4 <strcmp@plt+0x1f82c>
  423046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423050:	sub    rsp,0x8
  423054:	mov    rcx,QWORD PTR [rdi+0x38]
  423058:	movbe  eax,DWORD PTR [rcx]
  42305c:	mov    DWORD PTR [rdx],eax
  42305e:	mov    eax,DWORD PTR [rdi+0x14]
  423061:	cmp    eax,0x3
  423064:	jbe    423074 <strcmp@plt+0x1f8bc>
  423066:	add    rcx,0x4
  42306a:	sub    eax,0x4
  42306d:	mov    QWORD PTR [rdi+0x38],rcx
  423071:	mov    DWORD PTR [rdi+0x14],eax
  423074:	call   422a10 <strcmp@plt+0x1f258>
  423079:	cmp    eax,0x1
  42307c:	sete   al
  42307f:	add    rsp,0x8
  423083:	movzx  eax,al
  423086:	ret    
  423087:	nop    WORD PTR [rax+rax*1+0x0]
  423090:	mov    eax,DWORD PTR [rdi+0x14]
  423093:	cmp    eax,0xf
  423096:	jbe    4230e0 <strcmp@plt+0x1f928>
  423098:	mov    rcx,QWORD PTR [rdi+0x38]
  42309c:	sub    eax,0x10
  42309f:	mov    DWORD PTR [rdi+0x14],eax
  4230a2:	lea    r8,[rcx+0x10]
  4230a6:	mov    QWORD PTR [rdi+0x38],r8
  4230aa:	mov    r9,QWORD PTR [rcx]
  4230ad:	mov    r10,QWORD PTR [rcx+0x8]
  4230b1:	mov    QWORD PTR [rsi],r9
  4230b4:	mov    QWORD PTR [rsi+0x8],r10
  4230b8:	mov    eax,DWORD PTR [rdi+0x14]
  4230bb:	cmp    eax,0x7
  4230be:	jbe    4230f8 <strcmp@plt+0x1f940>
  4230c0:	mov    rcx,QWORD PTR [rdi+0x38]
  4230c4:	sub    eax,0x8
  4230c7:	mov    DWORD PTR [rdi+0x14],eax
  4230ca:	lea    rsi,[rcx+0x8]
  4230ce:	mov    QWORD PTR [rdi+0x38],rsi
  4230d2:	mov    rax,QWORD PTR [rcx]
  4230d5:	mov    QWORD PTR [rdx],rax
  4230d8:	mov    eax,0x1
  4230dd:	ret    
  4230de:	xchg   ax,ax
  4230e0:	mov    rax,QWORD PTR ds:0x0
  4230e8:	mov    rdx,QWORD PTR ds:0x8
  4230f0:	ud2    
  4230f2:	nop    WORD PTR [rax+rax*1+0x0]
  4230f8:	mov    rax,QWORD PTR ds:0x0
  423100:	ud2    
  423102:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42310d:	nop    DWORD PTR [rax]
  423110:	push   rbx
  423111:	mov    rbx,rdi
  423114:	call   422770 <strcmp@plt+0x1efb8>
  423119:	cmp    eax,0x7
  42311c:	ja     42312c <strcmp@plt+0x1f974>
  42311e:	mov    edx,0x1
  423123:	shlx   rax,rdx,rax
  423128:	test   al,0xde
  42312a:	jne    423148 <strcmp@plt+0x1f990>
  42312c:	mov    edx,DWORD PTR [rbx+0x14]
  42312f:	xor    ecx,ecx
  423131:	xor    esi,esi
  423133:	mov    rax,QWORD PTR [rbx+0x38]
  423137:	sub    edx,esi
  423139:	mov    DWORD PTR [rbx+0x14],edx
  42313c:	add    rcx,rax
  42313f:	mov    QWORD PTR [rbx+0x38],rcx
  423143:	pop    rbx
  423144:	ret    
  423145:	nop    DWORD PTR [rax]
  423148:	mov    edx,DWORD PTR [rbx+0x14]
  42314b:	xor    eax,eax
  42314d:	cmp    edx,0xb
  423150:	jbe    423143 <strcmp@plt+0x1f98b>
  423152:	mov    ecx,0xc
  423157:	mov    esi,0xc
  42315c:	jmp    423133 <strcmp@plt+0x1f97b>
  42315e:	xchg   ax,ax
  423160:	push   rbp
  423161:	push   rbx
  423162:	mov    rbx,rdi
  423165:	mov    rdi,rsi
  423168:	mov    rbp,rsi
  42316b:	sub    rsp,0x8
  42316f:	call   424810 <strcmp@plt+0x21058>
  423174:	mov    rdi,rbx
  423177:	mov    esi,eax
  423179:	call   430160 <strcmp@plt+0x2c9a8>
  42317e:	mov    rsi,rbp
  423181:	mov    rdi,rax
  423184:	mov    rbx,rax
  423187:	call   424ca0 <strcmp@plt+0x214e8>
  42318c:	test   eax,eax
  42318e:	jle    4231a0 <strcmp@plt+0x1f9e8>
  423190:	add    rsp,0x8
  423194:	mov    rax,rbx
  423197:	pop    rbx
  423198:	pop    rbp
  423199:	ret    
  42319a:	nop    WORD PTR [rax+rax*1+0x0]
  4231a0:	mov    rax,0x468e3c
  4231a7:	cmp    DWORD PTR [rax],0x2
  4231aa:	jg     4231c0 <strcmp@plt+0x1fa08>
  4231ac:	xor    ebx,ebx
  4231ae:	add    rsp,0x8
  4231b2:	mov    rax,rbx
  4231b5:	pop    rbx
  4231b6:	pop    rbp
  4231b7:	ret    
  4231b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4231c0:	mov    rdi,rbp
  4231c3:	xor    ebx,ebx
  4231c5:	call   424890 <strcmp@plt+0x210d8>
  4231ca:	lea    rsi,[rip+0x2a397]        # 44d568 <strcmp@plt+0x49db0>
  4231d1:	mov    rdx,rax
  4231d4:	mov    edi,0x7
  4231d9:	xor    eax,eax
  4231db:	call   4306a0 <strcmp@plt+0x2cee8>
  4231e0:	jmp    4231ae <strcmp@plt+0x1f9f6>
  4231e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4231ed:	nop    DWORD PTR [rax]
  4231f0:	push   r12
  4231f2:	push   rbp
  4231f3:	mov    rbp,rsi
  4231f6:	push   rbx
  4231f7:	mov    esi,0x6
  4231fc:	mov    r12,rdi
  4231ff:	call   430160 <strcmp@plt+0x2c9a8>
  423204:	mov    rbx,rax
  423207:	movzx  eax,BYTE PTR [rbp+0xb]
  42320b:	mov    rdi,r12
  42320e:	mov    BYTE PTR [rbx],al
  423210:	movzx  eax,BYTE PTR [rbp+0xc]
  423214:	mov    BYTE PTR [rbx+0x1],al
  423217:	movzx  eax,BYTE PTR [rbp+0xd]
  42321b:	mov    BYTE PTR [rbx+0x2],al
  42321e:	movzx  eax,BYTE PTR [rbp+0xe]
  423222:	mov    BYTE PTR [rbx+0x3],al
  423225:	movzx  eax,BYTE PTR [rbp+0x9]
  423229:	mov    rsi,QWORD PTR [rbp+0x0]
  42322d:	and    eax,0x1
  423230:	lea    edx,[rax*4+0x0]
  423237:	movzx  eax,BYTE PTR [rbx+0x5]
  42323b:	and    eax,0xfffffffb
  42323e:	or     eax,edx
  423240:	mov    BYTE PTR [rbx+0x5],al
  423243:	movzx  edx,BYTE PTR [rbp+0xa]
  423247:	and    eax,0xfffffffe
  42324a:	and    edx,0x1
  42324d:	or     eax,edx
  42324f:	mov    BYTE PTR [rbx+0x5],al
  423252:	call   423160 <strcmp@plt+0x1f9a8>
  423257:	mov    rax,rbx
  42325a:	pop    rbx
  42325b:	pop    rbp
  42325c:	pop    r12
  42325e:	ret    
  42325f:	nop
  423260:	push   rbx
  423261:	mov    esi,0xa
  423266:	call   430160 <strcmp@plt+0x2c9a8>
  42326b:	mov    rbx,rax
  42326e:	mov    rdi,rax
  423271:	call   42cba0 <strcmp@plt+0x293e8>
  423276:	mov    rax,rbx
  423279:	pop    rbx
  42327a:	ret    
  42327b:	nop    DWORD PTR [rax+rax*1+0x0]
  423280:	push   r15
  423282:	push   r14
  423284:	mov    r15,rdi
  423287:	push   r13
  423289:	push   r12
  42328b:	mov    r12,rsi
  42328e:	push   rbp
  42328f:	push   rbx
  423290:	sub    rsp,0x28
  423294:	mov    QWORD PTR [rsp],rdx
  423298:	mov    QWORD PTR [rsp+0x10],rdi
  42329d:	call   423260 <strcmp@plt+0x1faa8>
  4232a2:	mov    rdi,r12
  4232a5:	mov    rbx,rax
  4232a8:	mov    QWORD PTR [rsp+0x18],rax
  4232ad:	call   425170 <strcmp@plt+0x219b8>
  4232b2:	mov    BYTE PTR [rbx+0x5],al
  4232b5:	movbe  eax,DWORD PTR [r12+0x30]
  4232bc:	mov    rsi,r12
  4232bf:	mov    rdi,r15
  4232c2:	mov    DWORD PTR [rbx],eax
  4232c4:	movzx  eax,BYTE PTR [r12+0x35]
  4232ca:	and    eax,0x1
  4232cd:	shl    eax,0x4
  4232d0:	mov    edx,eax
  4232d2:	movzx  eax,BYTE PTR [rbx+0x6]
  4232d6:	mov    BYTE PTR [rsp+0x8],al
  4232da:	and    eax,0xffffffef
  4232dd:	or     eax,edx
  4232df:	mov    BYTE PTR [rbx+0x6],al
  4232e2:	call   423160 <strcmp@plt+0x1f9a8>
  4232e7:	test   rax,rax
  4232ea:	je     4233b5 <strcmp@plt+0x1fbfd>
  4232f0:	mov    rax,QWORD PTR [r12+0x28]
  4232f5:	mov    r15,QWORD PTR [rax+0x8]
  4232f9:	cmp    rax,r15
  4232fc:	je     4233c4 <strcmp@plt+0x1fc0c>
  423302:	xor    ebp,ebp
  423304:	nop    DWORD PTR [rax+0x0]
  423308:	mov    r13,QWORD PTR [r15+0x10]
  42330c:	mov    edx,DWORD PTR [r13+0x18]
  423310:	test   edx,edx
  423312:	je     423390 <strcmp@plt+0x1fbd8>
  423314:	mov    rbx,QWORD PTR [r13+0x8]
  423318:	mov    r14,QWORD PTR [rbx+0x10]
  42331c:	mov    rax,QWORD PTR [r14]
  42331f:	mov    eax,DWORD PTR [rax+0x18]
  423322:	test   eax,eax
  423324:	je     423390 <strcmp@plt+0x1fbd8>
  423326:	cmp    r13,rbx
  423329:	jne    42333d <strcmp@plt+0x1fb85>
  42332b:	jmp    423390 <strcmp@plt+0x1fbd8>
  42332d:	nop    DWORD PTR [rax]
  423330:	mov    rbx,QWORD PTR [rbx+0x8]
  423334:	cmp    rbx,r13
  423337:	je     423390 <strcmp@plt+0x1fbd8>
  423339:	mov    r14,QWORD PTR [rbx+0x10]
  42333d:	cmp    BYTE PTR [r14+0x8],0x0
  423342:	je     423330 <strcmp@plt+0x1fb78>
  423344:	mov    rdi,QWORD PTR [rsp+0x10]
  423349:	mov    rsi,r14
  42334c:	call   4231f0 <strcmp@plt+0x1fa38>
  423351:	cmp    QWORD PTR [rsp],0x0
  423356:	mov    QWORD PTR [rsp+0x8],rax
  42335b:	je     42337f <strcmp@plt+0x1fbc7>
  42335d:	mov    rdi,QWORD PTR [r14]
  423360:	call   425050 <strcmp@plt+0x21898>
  423365:	mov    rsi,QWORD PTR [rsp]
  423369:	mov    rdi,rax
  42336c:	call   424df0 <strcmp@plt+0x21638>
  423371:	test   eax,eax
  423373:	jne    42337f <strcmp@plt+0x1fbc7>
  423375:	mov    r9,QWORD PTR [rsp+0x8]
  42337a:	or     BYTE PTR [r9+0x5],0x2
  42337f:	mov    rbx,QWORD PTR [rbx+0x8]
  423383:	add    ebp,0x1
  423386:	cmp    rbx,r13
  423389:	jne    423339 <strcmp@plt+0x1fb81>
  42338b:	nop    DWORD PTR [rax+rax*1+0x0]
  423390:	mov    r15,QWORD PTR [r15+0x8]
  423394:	cmp    QWORD PTR [r12+0x28],r15
  423399:	jne    423308 <strcmp@plt+0x1fb50>
  42339f:	mov    rbx,QWORD PTR [rsp+0x18]
  4233a4:	mov    rdi,QWORD PTR [rsp+0x10]
  4233a9:	mov    BYTE PTR [rbx+0x4],bpl
  4233ad:	call   422790 <strcmp@plt+0x1efd8>
  4233b2:	mov    rax,rbx
  4233b5:	add    rsp,0x28
  4233b9:	pop    rbx
  4233ba:	pop    rbp
  4233bb:	pop    r12
  4233bd:	pop    r13
  4233bf:	pop    r14
  4233c1:	pop    r15
  4233c3:	ret    
  4233c4:	xor    ebp,ebp
  4233c6:	jmp    42339f <strcmp@plt+0x1fbe7>
  4233c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4233d0:	push   r15
  4233d2:	push   r14
  4233d4:	mov    r15d,edx
  4233d7:	push   r13
  4233d9:	push   r12
  4233db:	mov    r13,rsi
  4233de:	push   rbp
  4233df:	push   rbx
  4233e0:	mov    r14d,ecx
  4233e3:	mov    ebp,r8d
  4233e6:	mov    r12,rdi
  4233e9:	shl    r14d,0x5
  4233ed:	sub    rsp,0x8
  4233f1:	and    ebp,0x1
  4233f4:	call   423260 <strcmp@plt+0x1faa8>
  4233f9:	mov    rdi,r13
  4233fc:	mov    rbx,rax
  4233ff:	shl    ebp,0x4
  423402:	call   425170 <strcmp@plt+0x219b8>
  423407:	movzx  ecx,BYTE PTR [rbx+0x6]
  42340b:	mov    BYTE PTR [rbx+0x5],al
  42340e:	mov    rsi,r13
  423411:	mov    BYTE PTR [rbx+0x4],0x0
  423415:	movbe  DWORD PTR [rbx],r15d
  42341a:	mov    rdi,r12
  42341d:	and    ecx,0xf
  423420:	or     ecx,r14d
  423423:	or     ecx,ebp
  423425:	mov    BYTE PTR [rbx+0x6],cl
  423428:	call   423160 <strcmp@plt+0x1f9a8>
  42342d:	test   rax,rax
  423430:	je     423450 <strcmp@plt+0x1fc98>
  423432:	mov    rdi,r12
  423435:	call   422790 <strcmp@plt+0x1efd8>
  42343a:	add    rsp,0x8
  42343e:	mov    rax,rbx
  423441:	pop    rbx
  423442:	pop    rbp
  423443:	pop    r12
  423445:	pop    r13
  423447:	pop    r14
  423449:	pop    r15
  42344b:	ret    
  42344c:	nop    DWORD PTR [rax+0x0]
  423450:	xor    ebx,ebx
  423452:	jmp    42343a <strcmp@plt+0x1fc82>
  423454:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42345f:	nop
  423460:	push   rbx
  423461:	mov    esi,0xa
  423466:	call   430160 <strcmp@plt+0x2c9a8>
  42346b:	mov    rbx,rax
  42346e:	mov    rdi,rax
  423471:	call   42cbc0 <strcmp@plt+0x29408>
  423476:	mov    rax,rbx
  423479:	pop    rbx
  42347a:	ret    
  42347b:	nop    DWORD PTR [rax+rax*1+0x0]
  423480:	push   r15
  423482:	push   r14
  423484:	push   r13
  423486:	push   r12
  423488:	mov    r13,rsi
  42348b:	push   rbp
  42348c:	push   rbx
  42348d:	mov    r12,rdi
  423490:	sub    rsp,0x18
  423494:	call   423460 <strcmp@plt+0x1fca8>
  423499:	mov    rdi,r13
  42349c:	mov    rbx,rax
  42349f:	mov    QWORD PTR [rsp+0x8],rax
  4234a4:	call   425170 <strcmp@plt+0x219b8>
  4234a9:	mov    BYTE PTR [rbx+0x5],al
  4234ac:	movbe  eax,DWORD PTR [r13+0x38]
  4234b2:	mov    rsi,r13
  4234b5:	movzx  edx,BYTE PTR [rbx+0x6]
  4234b9:	mov    rdi,r12
  4234bc:	mov    DWORD PTR [rbx],eax
  4234be:	movzx  eax,BYTE PTR [r13+0x3c]
  4234c3:	mov    BYTE PTR [rsp+0x7],dl
  4234c7:	and    edx,0x1f
  4234ca:	shl    eax,0x5
  4234cd:	or     edx,eax
  4234cf:	mov    BYTE PTR [rbx+0x6],dl
  4234d2:	movzx  eax,BYTE PTR [r13+0x3d]
  4234d7:	and    edx,0xffffffef
  4234da:	and    eax,0x1
  4234dd:	shl    eax,0x4
  4234e0:	or     eax,edx
  4234e2:	mov    BYTE PTR [rbx+0x6],al
  4234e5:	movzx  edx,BYTE PTR [r13+0x3e]
  4234ea:	and    eax,0xfffffff7
  4234ed:	and    edx,0x1
  4234f0:	shl    edx,0x3
  4234f3:	or     eax,edx
  4234f5:	mov    BYTE PTR [rbx+0x6],al
  4234f8:	call   423160 <strcmp@plt+0x1f9a8>
  4234fd:	test   rax,rax
  423500:	je     423582 <strcmp@plt+0x1fdca>
  423506:	mov    rax,QWORD PTR [r13+0x28]
  42350a:	mov    r14,QWORD PTR [rax+0x8]
  42350e:	cmp    rax,r14
  423511:	je     423591 <strcmp@plt+0x1fdd9>
  423513:	xor    ebp,ebp
  423515:	nop    DWORD PTR [rax]
  423518:	mov    r15,QWORD PTR [r14+0x10]
  42351c:	mov    eax,DWORD PTR [r15+0x18]
  423520:	test   eax,eax
  423522:	je     423560 <strcmp@plt+0x1fda8>
  423524:	mov    rbx,QWORD PTR [r15+0x8]
  423528:	cmp    rbx,r15
  42352b:	jne    423539 <strcmp@plt+0x1fd81>
  42352d:	jmp    423560 <strcmp@plt+0x1fda8>
  42352f:	nop
  423530:	mov    rbx,QWORD PTR [rbx+0x8]
  423534:	cmp    rbx,r15
  423537:	je     423560 <strcmp@plt+0x1fda8>
  423539:	mov    rsi,QWORD PTR [rbx+0x10]
  42353d:	cmp    BYTE PTR [rsi+0x8],0x0
  423541:	je     423530 <strcmp@plt+0x1fd78>
  423543:	mov    rdi,r12
  423546:	add    ebp,0x1
  423549:	call   4231f0 <strcmp@plt+0x1fa38>
  42354e:	mov    rbx,QWORD PTR [rbx+0x8]
  423552:	cmp    rbx,r15
  423555:	jne    423539 <strcmp@plt+0x1fd81>
  423557:	nop    WORD PTR [rax+rax*1+0x0]
  423560:	mov    r14,QWORD PTR [r14+0x8]
  423564:	cmp    QWORD PTR [r13+0x28],r14
  423568:	jne    423518 <strcmp@plt+0x1fd60>
  42356a:	mov    rbx,QWORD PTR [rsp+0x8]
  42356f:	mov    rdi,r12
  423572:	and    BYTE PTR [rbx+0x8],0xf
  423576:	mov    BYTE PTR [rbx+0x4],bpl
  42357a:	call   422790 <strcmp@plt+0x1efd8>
  42357f:	mov    rax,rbx
  423582:	add    rsp,0x18
  423586:	pop    rbx
  423587:	pop    rbp
  423588:	pop    r12
  42358a:	pop    r13
  42358c:	pop    r14
  42358e:	pop    r15
  423590:	ret    
  423591:	xor    ebp,ebp
  423593:	jmp    42356a <strcmp@plt+0x1fdb2>
  423595:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4235a0:	push   r15
  4235a2:	push   r14
  4235a4:	mov    r15d,ecx
  4235a7:	push   r13
  4235a9:	push   r12
  4235ab:	mov    r14d,r8d
  4235ae:	push   rbp
  4235af:	push   rbx
  4235b0:	mov    rbp,rsi
  4235b3:	mov    r13d,r9d
  4235b6:	mov    rbx,rdi
  4235b9:	shl    r15d,0x5
  4235bd:	sub    rsp,0x18
  4235c1:	and    r13d,0x1
  4235c5:	mov    DWORD PTR [rsp+0xc],edx
  4235c9:	shl    r13d,0x3
  4235cd:	call   423460 <strcmp@plt+0x1fca8>
  4235d2:	mov    rdi,rbp
  4235d5:	mov    r12,rax
  4235d8:	call   425170 <strcmp@plt+0x219b8>
  4235dd:	movzx  ecx,BYTE PTR [r12+0x6]
  4235e3:	mov    r9d,r14d
  4235e6:	mov    edx,DWORD PTR [rsp+0xc]
  4235ea:	and    r9d,0x1
  4235ee:	and    BYTE PTR [r12+0x8],0xf
  4235f4:	mov    BYTE PTR [r12+0x5],al
  4235f9:	shl    r9d,0x4
  4235fd:	mov    BYTE PTR [r12+0x4],0x0
  423603:	mov    rsi,rbp
  423606:	movbe  DWORD PTR [r12],edx
  42360c:	mov    rdi,rbx
  42360f:	and    ecx,0xf
  423612:	or     ecx,r15d
  423615:	or     ecx,r9d
  423618:	and    ecx,0xfffffff7
  42361b:	mov    r9d,ecx
  42361e:	or     r9d,r13d
  423621:	mov    BYTE PTR [r12+0x6],r9b
  423626:	call   423160 <strcmp@plt+0x1f9a8>
  42362b:	test   rax,rax
  42362e:	je     423650 <strcmp@plt+0x1fe98>
  423630:	mov    rdi,rbx
  423633:	call   422790 <strcmp@plt+0x1efd8>
  423638:	add    rsp,0x18
  42363c:	mov    rax,r12
  42363f:	pop    rbx
  423640:	pop    rbp
  423641:	pop    r12
  423643:	pop    r13
  423645:	pop    r14
  423647:	pop    r15
  423649:	ret    
  42364a:	nop    WORD PTR [rax+rax*1+0x0]
  423650:	xor    r12d,r12d
  423653:	jmp    423638 <strcmp@plt+0x1fe80>
  423655:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  423660:	push   r13
  423662:	push   r12
  423664:	push   rbp
  423665:	push   rbx
  423666:	sub    rsp,0x8
  42366a:	mov    eax,DWORD PTR [rsi+0x18]
  42366d:	mov    r13,QWORD PTR [rdi+0x38]
  423671:	test   eax,eax
  423673:	je     4236aa <strcmp@plt+0x1fef2>
  423675:	mov    rbx,QWORD PTR [rsi+0x8]
  423679:	mov    rbp,rsi
  42367c:	mov    r12,rdi
  42367f:	cmp    rsi,rbx
  423682:	jne    423699 <strcmp@plt+0x1fee1>
  423684:	jmp    4236c0 <strcmp@plt+0x1ff08>
  423686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423690:	mov    rbx,QWORD PTR [rbx+0x8]
  423694:	cmp    rbp,rbx
  423697:	je     4236c0 <strcmp@plt+0x1ff08>
  423699:	mov    rsi,QWORD PTR [rbx+0x10]
  42369d:	mov    rdi,r12
  4236a0:	call   423160 <strcmp@plt+0x1f9a8>
  4236a5:	test   rax,rax
  4236a8:	jne    423690 <strcmp@plt+0x1fed8>
  4236aa:	add    rsp,0x8
  4236ae:	xor    r13d,r13d
  4236b1:	pop    rbx
  4236b2:	mov    rax,r13
  4236b5:	pop    rbp
  4236b6:	pop    r12
  4236b8:	pop    r13
  4236ba:	ret    
  4236bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4236c0:	movzx  eax,WORD PTR [r12+0x24]
  4236c6:	cmp    ax,0xffff
  4236ca:	je     423700 <strcmp@plt+0x1ff48>
  4236cc:	mov    edx,DWORD PTR [rbp+0x18]
  4236cf:	mov    rsi,QWORD PTR [r12+0x30]
  4236d4:	sub    edx,0x1
  4236d7:	mov    ecx,edx
  4236d9:	movzx  edx,BYTE PTR [rsi+rax*1+0x2]
  4236de:	and    ecx,0x1f
  4236e1:	and    edx,0xffffffe0
  4236e4:	or     edx,ecx
  4236e6:	mov    BYTE PTR [rsi+rax*1+0x2],dl
  4236ea:	add    rsp,0x8
  4236ee:	mov    rax,r13
  4236f1:	pop    rbx
  4236f2:	pop    rbp
  4236f3:	pop    r12
  4236f5:	pop    r13
  4236f7:	ret    
  4236f8:	nop    DWORD PTR [rax+rax*1+0x0]
  423700:	movzx  eax,BYTE PTR ds:0x2
  423708:	and    eax,0xffffffe0
  42370b:	mov    BYTE PTR ds:0x2,al
  423712:	ud2    
  423714:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42371f:	nop
  423720:	push   r12
  423722:	push   rbp
  423723:	mov    r12,rsi
  423726:	push   rbx
  423727:	mov    esi,0x2
  42372c:	mov    rbp,rdi
  42372f:	call   430160 <strcmp@plt+0x2c9a8>
  423734:	mov    rdi,rax
  423737:	mov    rbx,rax
  42373a:	call   42d220 <strcmp@plt+0x29a68>
  42373f:	mov    rdi,r12
  423742:	call   425170 <strcmp@plt+0x219b8>
  423747:	mov    rsi,r12
  42374a:	mov    rdi,rbp
  42374d:	mov    BYTE PTR [rbx+0x1],al
  423750:	call   423160 <strcmp@plt+0x1f9a8>
  423755:	mov    rdi,rbp
  423758:	call   422790 <strcmp@plt+0x1efd8>
  42375d:	mov    rax,rbx
  423760:	pop    rbx
  423761:	pop    rbp
  423762:	pop    r12
  423764:	ret    
  423765:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  423770:	push   r12
  423772:	push   rbp
  423773:	mov    r12,rdx
  423776:	push   rbx
  423777:	mov    edx,0x10
  42377c:	mov    rbx,rdi
  42377f:	call   430190 <strcmp@plt+0x2c9d8>
  423784:	mov    rsi,r12
  423787:	mov    rbp,rax
  42378a:	mov    rdi,rbx
  42378d:	mov    edx,0x8
  423792:	call   430190 <strcmp@plt+0x2c9d8>
  423797:	mov    rax,rbp
  42379a:	pop    rbx
  42379b:	pop    rbp
  42379c:	pop    r12
  42379e:	ret    
  42379f:	nop
  4237a0:	push   rbx
  4237a1:	mov    esi,0x4
  4237a6:	mov    rbx,rdi
  4237a9:	call   4301c0 <strcmp@plt+0x2ca08>
  4237ae:	mov    rdi,rax
  4237b1:	call   42be00 <strcmp@plt+0x28648>
  4237b6:	mov    rax,QWORD PTR [rbx+0x38]
  4237ba:	mov    rdx,rax
  4237bd:	sub    rdx,QWORD PTR [rbx+0x30]
  4237c1:	mov    WORD PTR [rbx+0x1e],dx
  4237c5:	pop    rbx
  4237c6:	ret    
  4237c7:	nop    WORD PTR [rax+rax*1+0x0]
  4237d0:	sub    rsp,0x8
  4237d4:	mov    esi,0x64
  4237d9:	mov    edi,0x1000
  4237de:	call   430250 <strcmp@plt+0x2ca98>
  4237e3:	mov    rdx,QWORD PTR [rax+0x38]
  4237e7:	sub    rdx,QWORD PTR [rax+0x30]
  4237eb:	mov    WORD PTR [rax+0x24],dx
  4237ef:	add    rsp,0x8
  4237f3:	ret    
  4237f4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4237ff:	nop
  423800:	push   rbp
  423801:	push   rbx
  423802:	xor    eax,eax
  423804:	mov    ebx,edi
  423806:	sub    rsp,0x8
  42380a:	call   4237d0 <strcmp@plt+0x20018>
  42380f:	cmp    ebx,0x8
  423812:	mov    rbp,rax
  423815:	ja     423830 <strcmp@plt+0x20078>
  423817:	lea    rdx,[rip+0x29c0a]        # 44d428 <strcmp@plt+0x49c70>
  42381e:	mov    ecx,ebx
  423820:	movsxd rax,DWORD PTR [rdx+rcx*4]
  423824:	add    rax,rdx
  423827:	jmp    rax
  423829:	nop    DWORD PTR [rax+0x0]
  423830:	mov    rax,0x468e3c
  423837:	cmp    DWORD PTR [rax],0x2
  42383a:	jle    423851 <strcmp@plt+0x20099>
  42383c:	lea    rsi,[rip+0x29d55]        # 44d598 <strcmp@plt+0x49de0>
  423843:	mov    edx,ebx
  423845:	mov    edi,0x7
  42384a:	xor    eax,eax
  42384c:	call   4306a0 <strcmp@plt+0x2cee8>
  423851:	add    rsp,0x8
  423855:	mov    rax,rbp
  423858:	pop    rbx
  423859:	pop    rbp
  42385a:	ret    
  42385b:	nop    DWORD PTR [rax+rax*1+0x0]
  423860:	mov    rdi,rbp
  423863:	mov    esi,0xc
  423868:	call   430160 <strcmp@plt+0x2c9a8>
  42386d:	mov    rdi,rax
  423870:	call   42be10 <strcmp@plt+0x28658>
  423875:	add    rsp,0x8
  423879:	mov    rax,rbp
  42387c:	pop    rbx
  42387d:	pop    rbp
  42387e:	ret    
  42387f:	nop
  423880:	mov    rdi,rbp
  423883:	mov    esi,0xc
  423888:	call   430160 <strcmp@plt+0x2c9a8>
  42388d:	mov    rdi,rax
  423890:	call   42bd70 <strcmp@plt+0x285b8>
  423895:	add    rsp,0x8
  423899:	mov    rax,rbp
  42389c:	pop    rbx
  42389d:	pop    rbp
  42389e:	ret    
  42389f:	nop
  4238a0:	mov    rdi,rbp
  4238a3:	mov    esi,0xc
  4238a8:	call   430160 <strcmp@plt+0x2c9a8>
  4238ad:	mov    rdi,rax
  4238b0:	call   42bd90 <strcmp@plt+0x285d8>
  4238b5:	add    rsp,0x8
  4238b9:	mov    rax,rbp
  4238bc:	pop    rbx
  4238bd:	pop    rbp
  4238be:	ret    
  4238bf:	nop
  4238c0:	mov    rdi,rbp
  4238c3:	mov    esi,0xc
  4238c8:	call   430160 <strcmp@plt+0x2c9a8>
  4238cd:	mov    rdi,rax
  4238d0:	call   42bdb0 <strcmp@plt+0x285f8>
  4238d5:	add    rsp,0x8
  4238d9:	mov    rax,rbp
  4238dc:	pop    rbx
  4238dd:	pop    rbp
  4238de:	ret    
  4238df:	nop
  4238e0:	mov    rdi,rbp
  4238e3:	mov    esi,0xc
  4238e8:	call   430160 <strcmp@plt+0x2c9a8>
  4238ed:	mov    rdi,rax
  4238f0:	call   42bde0 <strcmp@plt+0x28628>
  4238f5:	add    rsp,0x8
  4238f9:	mov    rax,rbp
  4238fc:	pop    rbx
  4238fd:	pop    rbp
  4238fe:	ret    
  4238ff:	nop
  423900:	mov    rdi,rbp
  423903:	mov    esi,0xc
  423908:	call   430160 <strcmp@plt+0x2c9a8>
  42390d:	mov    rdi,rax
  423910:	call   42be40 <strcmp@plt+0x28688>
  423915:	add    rsp,0x8
  423919:	mov    rax,rbp
  42391c:	pop    rbx
  42391d:	pop    rbp
  42391e:	ret    
  42391f:	nop
  423920:	push   r13
  423922:	push   r12
  423924:	mov    r13,rdx
  423927:	push   rbp
  423928:	push   rbx
  423929:	mov    rbp,rdi
  42392c:	mov    edi,0x1
  423931:	mov    r12,rsi
  423934:	sub    rsp,0x8
  423938:	call   423800 <strcmp@plt+0x20048>
  42393d:	mov    rsi,rbp
  423940:	mov    rdi,rax
  423943:	mov    rbx,rax
  423946:	call   423160 <strcmp@plt+0x1f9a8>
  42394b:	test   rax,rax
  42394e:	je     423980 <strcmp@plt+0x201c8>
  423950:	mov    rsi,r12
  423953:	mov    rdi,rbx
  423956:	call   423660 <strcmp@plt+0x1fea8>
  42395b:	test   rax,rax
  42395e:	je     423980 <strcmp@plt+0x201c8>
  423960:	mov    rsi,r13
  423963:	mov    rdi,rbx
  423966:	call   423720 <strcmp@plt+0x1ff68>
  42396b:	test   rax,rax
  42396e:	je     423980 <strcmp@plt+0x201c8>
  423970:	add    rsp,0x8
  423974:	mov    rax,rbx
  423977:	pop    rbx
  423978:	pop    rbp
  423979:	pop    r12
  42397b:	pop    r13
  42397d:	ret    
  42397e:	xchg   ax,ax
  423980:	mov    rdi,rbx
  423983:	xor    ebx,ebx
  423985:	call   4300b0 <strcmp@plt+0x2c8f8>
  42398a:	jmp    423970 <strcmp@plt+0x201b8>
  42398c:	nop    DWORD PTR [rax+0x0]
  423990:	push   r15
  423992:	push   r14
  423994:	mov    r15d,ecx
  423997:	push   r13
  423999:	push   r12
  42399b:	mov    r13d,esi
  42399e:	push   rbp
  42399f:	push   rbx
  4239a0:	mov    r14d,edx
  4239a3:	mov    r12,rdi
  4239a6:	mov    edi,0x2
  4239ab:	mov    rbp,r8
  4239ae:	sub    rsp,0x8
  4239b2:	call   423800 <strcmp@plt+0x20048>
  4239b7:	mov    r8d,r15d
  4239ba:	mov    rbx,rax
  4239bd:	mov    ecx,r14d
  4239c0:	mov    edx,r13d
  4239c3:	mov    rsi,r12
  4239c6:	mov    rdi,rax
  4239c9:	call   4233d0 <strcmp@plt+0x1fc18>
  4239ce:	movzx  eax,WORD PTR [rbx+0x24]
  4239d2:	cmp    ax,0xffff
  4239d6:	je     4239f8 <strcmp@plt+0x20240>
  4239d8:	mov    rdx,QWORD PTR [rbx+0x30]
  4239dc:	mov    QWORD PTR [rdx+rax*1+0x4],rbp
  4239e1:	add    rsp,0x8
  4239e5:	mov    rax,rbx
  4239e8:	pop    rbx
  4239e9:	pop    rbp
  4239ea:	pop    r12
  4239ec:	pop    r13
  4239ee:	pop    r14
  4239f0:	pop    r15
  4239f2:	ret    
  4239f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4239f8:	mov    QWORD PTR ds:0x4,0x0
  423a04:	ud2    
  423a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423a10:	push   r15
  423a12:	push   r14
  423a14:	mov    r15d,ecx
  423a17:	push   r13
  423a19:	push   r12
  423a1b:	mov    r12,rdi
  423a1e:	push   rbp
  423a1f:	push   rbx
  423a20:	mov    edi,0x6
  423a25:	mov    r13d,esi
  423a28:	mov    r14d,edx
  423a2b:	mov    rbp,r9
  423a2e:	sub    rsp,0x18
  423a32:	mov    DWORD PTR [rsp+0xc],r8d
  423a37:	call   423800 <strcmp@plt+0x20048>
  423a3c:	mov    r8d,DWORD PTR [rsp+0xc]
  423a41:	mov    rbx,rax
  423a44:	mov    ecx,r14d
  423a47:	mov    edx,r13d
  423a4a:	mov    rsi,r12
  423a4d:	mov    rdi,rax
  423a50:	mov    r9d,r8d
  423a53:	mov    r8d,r15d
  423a56:	call   4235a0 <strcmp@plt+0x1fde8>
  423a5b:	movzx  eax,WORD PTR [rbx+0x24]
  423a5f:	cmp    ax,0xffff
  423a63:	je     423a80 <strcmp@plt+0x202c8>
  423a65:	mov    rdx,QWORD PTR [rbx+0x30]
  423a69:	mov    QWORD PTR [rdx+rax*1+0x4],rbp
  423a6e:	add    rsp,0x18
  423a72:	mov    rax,rbx
  423a75:	pop    rbx
  423a76:	pop    rbp
  423a77:	pop    r12
  423a79:	pop    r13
  423a7b:	pop    r14
  423a7d:	pop    r15
  423a7f:	ret    
  423a80:	mov    QWORD PTR ds:0x4,0x0
  423a8c:	ud2    
  423a8e:	xchg   ax,ax
  423a90:	movzx  eax,WORD PTR [rdi+0x24]
  423a94:	cmp    ax,0xffff
  423a98:	je     423b88 <strcmp@plt+0x203d0>
  423a9e:	push   rbp
  423a9f:	push   rbx
  423aa0:	sub    rsp,0x8
  423aa4:	add    rax,QWORD PTR [rdi+0x30]
  423aa8:	mov    rbx,rax
  423aab:	je     423b79 <strcmp@plt+0x203c1>
  423ab1:	mov    rbp,rdi
  423ab4:	call   422770 <strcmp@plt+0x1efb8>
  423ab9:	cmp    eax,0x8
  423abc:	ja     423b50 <strcmp@plt+0x20398>
  423ac2:	lea    rdx,[rip+0x29983]        # 44d44c <strcmp@plt+0x49c94>
  423ac9:	mov    eax,eax
  423acb:	movsxd rax,DWORD PTR [rdx+rax*4]
  423acf:	add    rax,rdx
  423ad2:	jmp    rax
  423ad4:	nop    DWORD PTR [rax+0x0]
  423ad8:	add    rsp,0x8
  423adc:	mov    rdi,rbx
  423adf:	pop    rbx
  423ae0:	pop    rbp
  423ae1:	jmp    42ca20 <strcmp@plt+0x29268>
  423ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423af0:	add    rsp,0x8
  423af4:	mov    rdi,rbx
  423af7:	pop    rbx
  423af8:	pop    rbp
  423af9:	jmp    42c240 <strcmp@plt+0x28a88>
  423afe:	xchg   ax,ax
  423b00:	add    rsp,0x8
  423b04:	mov    rdi,rbx
  423b07:	pop    rbx
  423b08:	pop    rbp
  423b09:	jmp    42c480 <strcmp@plt+0x28cc8>
  423b0e:	xchg   ax,ax
  423b10:	add    rsp,0x8
  423b14:	mov    rdi,rbx
  423b17:	pop    rbx
  423b18:	pop    rbp
  423b19:	jmp    42c650 <strcmp@plt+0x28e98>
  423b1e:	xchg   ax,ax
  423b20:	add    rsp,0x8
  423b24:	mov    rdi,rbx
  423b27:	pop    rbx
  423b28:	pop    rbp
  423b29:	jmp    42c740 <strcmp@plt+0x28f88>
  423b2e:	xchg   ax,ax
  423b30:	add    rsp,0x8
  423b34:	mov    rdi,rbx
  423b37:	pop    rbx
  423b38:	pop    rbp
  423b39:	jmp    42ca70 <strcmp@plt+0x292b8>
  423b3e:	xchg   ax,ax
  423b40:	add    rsp,0x8
  423b44:	mov    rdi,rbx
  423b47:	pop    rbx
  423b48:	pop    rbp
  423b49:	jmp    42c4f0 <strcmp@plt+0x28d38>
  423b4e:	xchg   ax,ax
  423b50:	mov    rax,0x468e3c
  423b57:	cmp    DWORD PTR [rax],0x2
  423b5a:	jle    423b79 <strcmp@plt+0x203c1>
  423b5c:	mov    rdi,rbp
  423b5f:	call   422770 <strcmp@plt+0x1efb8>
  423b64:	lea    rsi,[rip+0x2995a]        # 44d4c5 <strcmp@plt+0x49d0d>
  423b6b:	mov    edx,eax
  423b6d:	mov    edi,0x7
  423b72:	xor    eax,eax
  423b74:	call   4306a0 <strcmp@plt+0x2cee8>
  423b79:	add    rsp,0x8
  423b7d:	xor    eax,eax
  423b7f:	pop    rbx
  423b80:	pop    rbp
  423b81:	ret    
  423b82:	nop    WORD PTR [rax+rax*1+0x0]
  423b88:	xor    eax,eax
  423b8a:	ret    
  423b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  423b90:	movzx  eax,WORD PTR [rdi+0x1e]
  423b94:	cmp    ax,0xffff
  423b98:	je     423bb0 <strcmp@plt+0x203f8>
  423b9a:	add    rax,QWORD PTR [rdi+0x30]
  423b9e:	mov    rdi,rax
  423ba1:	je     423bb0 <strcmp@plt+0x203f8>
  423ba3:	jmp    42ca20 <strcmp@plt+0x29268>
  423ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  423bb0:	xor    eax,eax
  423bb2:	ret    
  423bb3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  423bbe:	xchg   ax,ax
  423bc0:	push   r15
  423bc2:	push   r14
  423bc4:	mov    r14,r8
  423bc7:	push   r13
  423bc9:	push   r12
  423bcb:	mov    r13,rcx
  423bce:	push   rbp
  423bcf:	push   rbx
  423bd0:	mov    rbx,rdi
  423bd3:	mov    ebp,esi
  423bd5:	mov    r12d,edx
  423bd8:	sub    rsp,0x8
  423bdc:	mov    rax,QWORD PTR [rdi+0x38]
  423be0:	sub    rax,QWORD PTR [rdi+0x30]
  423be4:	mov    WORD PTR [rdi+0x24],ax
  423be8:	mov    rdi,rcx
  423beb:	call   425050 <strcmp@plt+0x21898>
  423bf0:	test   rax,rax
  423bf3:	mov    r15,rax
  423bf6:	je     423cb0 <strcmp@plt+0x204f8>
  423bfc:	mov    rdi,r14
  423bff:	call   425050 <strcmp@plt+0x21898>
  423c04:	test   rax,rax
  423c07:	mov    r8,rax
  423c0a:	je     423c98 <strcmp@plt+0x204e0>
  423c10:	mov    rcx,r15
  423c13:	movzx  edx,r12w
  423c17:	movzx  esi,bp
  423c1a:	mov    rdi,rbx
  423c1d:	call   435b50 <strcmp@plt+0x32398>
  423c22:	mov    rdi,rbx
  423c25:	call   4237a0 <strcmp@plt+0x1ffe8>
  423c2a:	mov    rax,0x468e3c
  423c31:	mov    ecx,DWORD PTR [rax]
  423c33:	test   ecx,ecx
  423c35:	jle    423c82 <strcmp@plt+0x204ca>
  423c37:	mov    rdi,r14
  423c3a:	call   424890 <strcmp@plt+0x210d8>
  423c3f:	mov    rdi,r13
  423c42:	mov    r12,rax
  423c45:	call   424890 <strcmp@plt+0x210d8>
  423c4a:	mov    rdi,rbx
  423c4d:	mov    rbp,rax
  423c50:	call   423b90 <strcmp@plt+0x203d8>
  423c55:	sub    rsp,0x8
  423c59:	lea    rsi,[rip+0x29968]        # 44d5c8 <strcmp@plt+0x49e10>
  423c60:	mov    rdx,rax
  423c63:	push   0x10f6
  423c68:	xor    eax,eax
  423c6a:	mov    r9d,0x10f6
  423c70:	mov    r8,r12
  423c73:	mov    rcx,rbp
  423c76:	mov    edi,0x5
  423c7b:	call   4306a0 <strcmp@plt+0x2cee8>
  423c80:	pop    rax
  423c81:	pop    rdx
  423c82:	mov    rax,QWORD PTR [rbx+0x38]
  423c86:	add    rsp,0x8
  423c8a:	pop    rbx
  423c8b:	pop    rbp
  423c8c:	pop    r12
  423c8e:	pop    r13
  423c90:	pop    r14
  423c92:	pop    r15
  423c94:	ret    
  423c95:	nop    DWORD PTR [rax]
  423c98:	mov    rdi,r14
  423c9b:	call   425110 <strcmp@plt+0x21958>
  423ca0:	mov    r8,rax
  423ca3:	jmp    423c10 <strcmp@plt+0x20458>
  423ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  423cb0:	mov    rdi,r13
  423cb3:	call   425110 <strcmp@plt+0x21958>
  423cb8:	mov    r15,rax
  423cbb:	jmp    423bfc <strcmp@plt+0x20444>
  423cc0:	movzx  eax,WORD PTR [rdi+0x1e]
  423cc4:	cmp    ax,0xffff
  423cc8:	je     423ce0 <strcmp@plt+0x20528>
  423cca:	add    rax,QWORD PTR [rdi+0x30]
  423cce:	test   BYTE PTR [rax],0x8
  423cd1:	je     423cf0 <strcmp@plt+0x20538>
  423cd3:	movzx  eax,BYTE PTR [rax+0x4]
  423cd7:	ret    
  423cd8:	nop    DWORD PTR [rax+rax*1+0x0]
  423ce0:	movzx  eax,BYTE PTR ds:0x0
  423ce8:	ud2    
  423cea:	nop    WORD PTR [rax+rax*1+0x0]
  423cf0:	mov    eax,0xffffffff
  423cf5:	ret    
  423cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423d00:	push   r12
  423d02:	push   rbp
  423d03:	mov    r12d,esi
  423d06:	push   rbx
  423d07:	mov    rbx,rdi
  423d0a:	mov    edi,esi
  423d0c:	rol    r12w,0x8
  423d11:	call   42d210 <strcmp@plt+0x29a58>
  423d16:	movzx  esi,ax
  423d19:	mov    rdi,rbx
  423d1c:	mov    ebp,esi
  423d1e:	add    esi,0x8
  423d21:	call   4301c0 <strcmp@plt+0x2ca08>
  423d26:	movzx  edx,bp
  423d29:	mov    rbx,rax
  423d2c:	rol    bp,0x8
  423d30:	add    rdx,0x8
  423d34:	xor    esi,esi
  423d36:	mov    rdi,rax
  423d39:	call   403250 <memset@plt>
  423d3e:	mov    BYTE PTR [rbx],0x2
  423d41:	mov    WORD PTR [rbx+0x4],r12w
  423d46:	mov    rax,rbx
  423d49:	mov    WORD PTR [rbx+0x6],bp
  423d4d:	pop    rbx
  423d4e:	pop    rbp
  423d4f:	pop    r12
  423d51:	ret    
  423d52:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  423d5d:	nop    DWORD PTR [rax]
  423d60:	mov    eax,DWORD PTR [rdi+0x14]
  423d63:	cmp    eax,0x7
  423d66:	jbe    423db8 <strcmp@plt+0x20600>
  423d68:	push   rbp
  423d69:	push   rbx
  423d6a:	sub    eax,0x8
  423d6d:	mov    rbx,rdi
  423d70:	sub    rsp,0x8
  423d74:	mov    rbp,QWORD PTR [rdi+0x38]
  423d78:	mov    DWORD PTR [rdi+0x14],eax
  423d7b:	lea    rdx,[rbp+0x8]
  423d7f:	mov    QWORD PTR [rdi+0x38],rdx
  423d83:	movzx  edi,WORD PTR [rbp+0x4]
  423d87:	rol    di,0x8
  423d8b:	movzx  edi,di
  423d8e:	call   42d210 <strcmp@plt+0x29a58>
  423d93:	mov    edx,DWORD PTR [rbx+0x14]
  423d96:	movzx  ecx,ax
  423d99:	cmp    edx,ecx
  423d9b:	jb     423da9 <strcmp@plt+0x205f1>
  423d9d:	movzx  eax,ax
  423da0:	add    QWORD PTR [rbx+0x38],rax
  423da4:	sub    edx,ecx
  423da6:	mov    DWORD PTR [rbx+0x14],edx
  423da9:	add    rsp,0x8
  423dad:	mov    rax,rbp
  423db0:	pop    rbx
  423db1:	pop    rbp
  423db2:	ret    
  423db3:	nop    DWORD PTR [rax+rax*1+0x0]
  423db8:	movzx  eax,WORD PTR ds:0x4
  423dc0:	ud2    
  423dc2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  423dcd:	nop    DWORD PTR [rax]
  423dd0:	push   r13
  423dd2:	mov    eax,edx
  423dd4:	push   r12
  423dd6:	push   rbp
  423dd7:	push   rbx
  423dd8:	rol    ax,0x8
  423ddc:	mov    r13,rdi
  423ddf:	mov    edi,edx
  423de1:	mov    rbp,rsi
  423de4:	sub    rsp,0x8
  423de8:	mov    WORD PTR [rsi],ax
  423deb:	mov    ebx,edx
  423ded:	mov    r12,rcx
  423df0:	call   42d210 <strcmp@plt+0x29a58>
  423df5:	rol    ax,0x8
  423df9:	xor    edx,edx
  423dfb:	lea    r8,[rbp+0x4]
  423dff:	mov    WORD PTR [rbp+0x2],ax
  423e03:	movzx  eax,WORD PTR [r13+0x24]
  423e08:	mov    ecx,DWORD PTR [r13+0x14]
  423e0c:	cmp    ax,0xffff
  423e10:	je     423e19 <strcmp@plt+0x20661>
  423e12:	add    rax,QWORD PTR [r13+0x30]
  423e16:	mov    rdx,rax
  423e19:	movzx  edi,bl
  423e1c:	mov    rsi,r12
  423e1f:	call   42daf0 <strcmp@plt+0x2a338>
  423e24:	cmp    eax,0x1
  423e27:	sete   al
  423e2a:	add    rsp,0x8
  423e2e:	pop    rbx
  423e2f:	movzx  eax,al
  423e32:	pop    rbp
  423e33:	pop    r12
  423e35:	pop    r13
  423e37:	ret    
  423e38:	nop    DWORD PTR [rax+rax*1+0x0]
  423e40:	push   r13
  423e42:	push   r12
  423e44:	mov    r13,rcx
  423e47:	push   rbp
  423e48:	push   rbx
  423e49:	mov    rbx,rsi
  423e4c:	mov    r12d,edx
  423e4f:	sub    rsp,0x58
  423e53:	mov    rax,QWORD PTR fs:0x28
  423e5c:	mov    QWORD PTR [rsp+0x48],rax
  423e61:	xor    eax,eax
  423e63:	mov    rax,QWORD PTR [rdi]
  423e66:	mov    QWORD PTR [rsp],rax
  423e6a:	mov    rax,QWORD PTR [rdi+0x8]
  423e6e:	mov    QWORD PTR [rsp+0x8],rax
  423e73:	mov    rax,QWORD PTR [rdi+0x10]
  423e77:	mov    QWORD PTR [rsp+0x10],rax
  423e7c:	mov    rax,QWORD PTR [rdi+0x18]
  423e80:	mov    QWORD PTR [rsp+0x18],rax
  423e85:	mov    rax,QWORD PTR [rdi+0x20]
  423e89:	mov    QWORD PTR [rsp+0x20],rax
  423e8e:	mov    rax,QWORD PTR [rdi+0x28]
  423e92:	mov    QWORD PTR [rsp+0x28],rax
  423e97:	mov    rax,QWORD PTR [rdi+0x30]
  423e9b:	mov    QWORD PTR [rsp+0x30],rax
  423ea0:	mov    rax,QWORD PTR [rdi+0x38]
  423ea4:	mov    rdi,rsp
  423ea7:	mov    QWORD PTR [rsp+0x38],rax
  423eac:	call   430500 <strcmp@plt+0x2cd48>
  423eb1:	lea    rsi,[rbx+0x4]
  423eb5:	mov    edx,r12d
  423eb8:	mov    rcx,r13
  423ebb:	mov    rdi,rsp
  423ebe:	call   423dd0 <strcmp@plt+0x20618>
  423ec3:	mov    rdx,QWORD PTR [rsp+0x48]
  423ec8:	xor    rdx,QWORD PTR fs:0x28
  423ed1:	jne    423ede <strcmp@plt+0x20726>
  423ed3:	add    rsp,0x58
  423ed7:	pop    rbx
  423ed8:	pop    rbp
  423ed9:	pop    r12
  423edb:	pop    r13
  423edd:	ret    
  423ede:	call   403460 <__stack_chk_fail@plt>
  423ee3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  423eee:	xchg   ax,ax
  423ef0:	push   r13
  423ef2:	push   r12
  423ef4:	mov    r12,rdi
  423ef7:	push   rbp
  423ef8:	push   rbx
  423ef9:	mov    rbp,rsi
  423efc:	mov    r13,rdx
  423eff:	sub    rsp,0x8
  423f03:	movzx  ebx,WORD PTR [rsi]
  423f06:	rol    bx,0x8
  423f0a:	movzx  edi,bx
  423f0d:	call   42d210 <strcmp@plt+0x29a58>
  423f12:	movzx  edx,WORD PTR [rbp+0x2]
  423f16:	rol    dx,0x8
  423f1a:	cmp    ax,dx
  423f1d:	je     423f60 <strcmp@plt+0x207a8>
  423f1f:	mov    rcx,0x468e3c
  423f26:	cmp    DWORD PTR [rcx],0x2
  423f29:	jg     423f40 <strcmp@plt+0x20788>
  423f2b:	xor    ebx,ebx
  423f2d:	add    rsp,0x8
  423f31:	mov    eax,ebx
  423f33:	pop    rbx
  423f34:	pop    rbp
  423f35:	pop    r12
  423f37:	pop    r13
  423f39:	ret    
  423f3a:	nop    WORD PTR [rax+rax*1+0x0]
  423f40:	lea    rsi,[rip+0x296b1]        # 44d5f8 <strcmp@plt+0x49e40>
  423f47:	movzx  ecx,ax
  423f4a:	movzx  edx,dx
  423f4d:	mov    edi,0x7
  423f52:	xor    eax,eax
  423f54:	call   4306a0 <strcmp@plt+0x2cee8>
  423f59:	jmp    423f2b <strcmp@plt+0x20773>
  423f5b:	nop    DWORD PTR [rax+rax*1+0x0]
  423f60:	movzx  eax,WORD PTR [r12+0x24]
  423f66:	xor    edx,edx
  423f68:	lea    r8,[rbp+0x4]
  423f6c:	mov    ecx,DWORD PTR [r12+0x14]
  423f71:	cmp    ax,0xffff
  423f75:	je     423f7f <strcmp@plt+0x207c7>
  423f77:	add    rax,QWORD PTR [r12+0x30]
  423f7c:	mov    rdx,rax
  423f7f:	movzx  edi,bl
  423f82:	mov    rsi,r13
  423f85:	call   42dbe0 <strcmp@plt+0x2a428>
  423f8a:	cmp    eax,0x1
  423f8d:	mov    ebx,eax
  423f8f:	je     423f2d <strcmp@plt+0x20775>
  423f91:	mov    rax,0x468e3c
  423f98:	cmp    DWORD PTR [rax],0x2
  423f9b:	jle    423f2d <strcmp@plt+0x20775>
  423f9d:	lea    rsi,[rip+0x2953e]        # 44d4e2 <strcmp@plt+0x49d2a>
  423fa4:	mov    edi,0x7
  423fa9:	xor    eax,eax
  423fab:	call   4306a0 <strcmp@plt+0x2cee8>
  423fb0:	jmp    423f2d <strcmp@plt+0x20775>
  423fb5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  423fc0:	push   r12
  423fc2:	push   rbp
  423fc3:	mov    r12,rdx
  423fc6:	push   rbx
  423fc7:	mov    rbx,rsi
  423fca:	sub    rsp,0x50
  423fce:	mov    rax,QWORD PTR fs:0x28
  423fd7:	mov    QWORD PTR [rsp+0x48],rax
  423fdc:	xor    eax,eax
  423fde:	mov    rax,QWORD PTR [rdi]
  423fe1:	mov    QWORD PTR [rsp],rax
  423fe5:	mov    rax,QWORD PTR [rdi+0x8]
  423fe9:	mov    QWORD PTR [rsp+0x8],rax
  423fee:	mov    rax,QWORD PTR [rdi+0x10]
  423ff2:	mov    QWORD PTR [rsp+0x10],rax
  423ff7:	mov    rax,QWORD PTR [rdi+0x18]
  423ffb:	mov    QWORD PTR [rsp+0x18],rax
  424000:	mov    rax,QWORD PTR [rdi+0x20]
  424004:	mov    QWORD PTR [rsp+0x20],rax
  424009:	mov    rax,QWORD PTR [rdi+0x28]
  42400d:	mov    QWORD PTR [rsp+0x28],rax
  424012:	mov    rax,QWORD PTR [rdi+0x30]
  424016:	mov    QWORD PTR [rsp+0x30],rax
  42401b:	mov    rax,QWORD PTR [rdi+0x38]
  42401f:	mov    rdi,rsp
  424022:	mov    QWORD PTR [rsp+0x38],rax
  424027:	call   430500 <strcmp@plt+0x2cd48>
  42402c:	lea    rsi,[rbx+0x4]
  424030:	mov    rdx,r12
  424033:	mov    rdi,rsp
  424036:	call   423ef0 <strcmp@plt+0x20738>
  42403b:	mov    rcx,QWORD PTR [rsp+0x48]
  424040:	xor    rcx,QWORD PTR fs:0x28
  424049:	jne    424054 <strcmp@plt+0x2089c>
  42404b:	add    rsp,0x50
  42404f:	pop    rbx
  424050:	pop    rbp
  424051:	pop    r12
  424053:	ret    
  424054:	call   403460 <__stack_chk_fail@plt>
  424059:	nop    DWORD PTR [rax+0x0]
  424060:	push   r12
  424062:	push   rbp
  424063:	mov    rbp,rdi
  424066:	push   rbx
  424067:	mov    edi,esi
  424069:	mov    r12d,esi
  42406c:	rol    r12w,0x8
  424071:	call   42d210 <strcmp@plt+0x29a58>
  424076:	movzx  esi,ax
  424079:	mov    rdi,rbp
  42407c:	mov    ebx,esi
  42407e:	add    esi,0x4
  424081:	call   430160 <strcmp@plt+0x2c9a8>
  424086:	mov    rbp,rax
  424089:	mov    WORD PTR [rax],r12w
  42408d:	mov    eax,ebx
  42408f:	rol    ax,0x8
  424093:	lea    rdi,[rbp+0x4]
  424097:	movzx  edx,bx
  42409a:	mov    WORD PTR [rbp+0x2],ax
  42409e:	xor    esi,esi
  4240a0:	call   403250 <memset@plt>
  4240a5:	mov    rax,rbp
  4240a8:	pop    rbx
  4240a9:	pop    rbp
  4240aa:	pop    r12
  4240ac:	ret    
  4240ad:	nop    DWORD PTR [rax]
  4240b0:	push   r12
  4240b2:	push   rbp
  4240b3:	mov    r12,rdi
  4240b6:	push   rbx
  4240b7:	mov    ebp,esi
  4240b9:	mov    edi,0x3
  4240be:	call   423800 <strcmp@plt+0x20048>
  4240c3:	mov    esi,ebp
  4240c5:	mov    rdi,rax
  4240c8:	mov    rbx,rax
  4240cb:	call   424060 <strcmp@plt+0x208a8>
  4240d0:	test   rax,rax
  4240d3:	je     4240f0 <strcmp@plt+0x20938>
  4240d5:	xor    edx,edx
  4240d7:	mov    rsi,r12
  4240da:	mov    rdi,rbx
  4240dd:	call   423280 <strcmp@plt+0x1fac8>
  4240e2:	test   rax,rax
  4240e5:	je     4240f0 <strcmp@plt+0x20938>
  4240e7:	mov    rax,rbx
  4240ea:	pop    rbx
  4240eb:	pop    rbp
  4240ec:	pop    r12
  4240ee:	ret    
  4240ef:	nop
  4240f0:	mov    rdi,rbx
  4240f3:	xor    ebx,ebx
  4240f5:	call   4300b0 <strcmp@plt+0x2c8f8>
  4240fa:	jmp    4240e7 <strcmp@plt+0x2092f>
  4240fc:	nop    DWORD PTR [rax+0x0]
  424100:	push   r12
  424102:	push   rbp
  424103:	mov    rbp,rdi
  424106:	push   rbx
  424107:	mov    edi,esi
  424109:	mov    r12d,esi
  42410c:	rol    r12w,0x8
  424111:	call   42d210 <strcmp@plt+0x29a58>
  424116:	movzx  esi,ax
  424119:	mov    rdi,rbp
  42411c:	mov    ebx,esi
  42411e:	add    esi,0x4
  424121:	call   4301c0 <strcmp@plt+0x2ca08>
  424126:	mov    rbp,rax
  424129:	mov    WORD PTR [rax],r12w
  42412d:	mov    eax,ebx
  42412f:	rol    ax,0x8
  424133:	lea    rdi,[rbp+0x4]
  424137:	movzx  edx,bx
  42413a:	mov    WORD PTR [rbp+0x2],ax
  42413e:	xor    esi,esi
  424140:	call   403250 <memset@plt>
  424145:	mov    rax,rbp
  424148:	pop    rbx
  424149:	pop    rbp
  42414a:	pop    r12
  42414c:	ret    
  42414d:	nop    DWORD PTR [rax]
  424150:	mov    eax,DWORD PTR [rdi+0x14]
  424153:	cmp    eax,0x3
  424156:	jbe    4241a8 <strcmp@plt+0x209f0>
  424158:	push   rbp
  424159:	push   rbx
  42415a:	sub    eax,0x4
  42415d:	mov    rbx,rdi
  424160:	sub    rsp,0x8
  424164:	mov    rbp,QWORD PTR [rdi+0x38]
  424168:	mov    DWORD PTR [rdi+0x14],eax
  42416b:	lea    rdx,[rbp+0x4]
  42416f:	mov    QWORD PTR [rdi+0x38],rdx
  424173:	movzx  edi,WORD PTR [rbp+0x0]
  424177:	rol    di,0x8
  42417b:	movzx  edi,di
  42417e:	call   42d210 <strcmp@plt+0x29a58>
  424183:	mov    edx,DWORD PTR [rbx+0x14]
  424186:	movzx  ecx,ax
  424189:	cmp    edx,ecx
  42418b:	jb     424199 <strcmp@plt+0x209e1>
  42418d:	movzx  eax,ax
  424190:	add    QWORD PTR [rbx+0x38],rax
  424194:	sub    edx,ecx
  424196:	mov    DWORD PTR [rbx+0x14],edx
  424199:	add    rsp,0x8
  42419d:	mov    rax,rbp
  4241a0:	pop    rbx
  4241a1:	pop    rbp
  4241a2:	ret    
  4241a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4241a8:	movzx  eax,WORD PTR ds:0x0
  4241b0:	ud2    
  4241b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4241bd:	nop    DWORD PTR [rax]
  4241c0:	push   r13
  4241c2:	push   r12
  4241c4:	mov    r13,rsi
  4241c7:	push   rbp
  4241c8:	push   rbx
  4241c9:	mov    ebp,edx
  4241cb:	mov    esi,0x6
  4241d0:	movzx  ebp,bpl
  4241d4:	mov    r12,rdi
  4241d7:	sub    rsp,0x8
  4241db:	call   430160 <strcmp@plt+0x2c9a8>
  4241e0:	mov    rdi,r13
  4241e3:	movbe  DWORD PTR [rax],ebp
  4241e7:	mov    rbx,rax
  4241ea:	call   425110 <strcmp@plt+0x21958>
  4241ef:	mov    rdi,rax
  4241f2:	call   424a20 <strcmp@plt+0x21268>
  4241f7:	mov    rsi,r13
  4241fa:	mov    BYTE PTR [rbx+0x5],al
  4241fd:	mov    rdi,r12
  424200:	call   423160 <strcmp@plt+0x1f9a8>
  424205:	test   rax,rax
  424208:	mov    eax,0x0
  42420d:	cmove  rbx,rax
  424211:	add    rsp,0x8
  424215:	mov    rax,rbx
  424218:	pop    rbx
  424219:	pop    rbp
  42421a:	pop    r12
  42421c:	pop    r13
  42421e:	ret    
  42421f:	nop
  424220:	push   r12
  424222:	push   rbp
  424223:	mov    r12,rdi
  424226:	push   rbx
  424227:	mov    ebp,esi
  424229:	mov    edi,0x7
  42422e:	sub    rsp,0x30
  424232:	mov    rax,QWORD PTR fs:0x28
  42423b:	mov    QWORD PTR [rsp+0x28],rax
  424240:	xor    eax,eax
  424242:	call   423800 <strcmp@plt+0x20048>
  424247:	mov    esi,ebp
  424249:	mov    rdi,rax
  42424c:	mov    rbx,rax
  42424f:	call   424060 <strcmp@plt+0x208a8>
  424254:	test   rax,rax
  424257:	je     4242a8 <strcmp@plt+0x20af0>
  424259:	xor    edx,edx
  42425b:	mov    rsi,r12
  42425e:	mov    rdi,rbx
  424261:	call   4241c0 <strcmp@plt+0x20a08>
  424266:	test   rax,rax
  424269:	je     4242a8 <strcmp@plt+0x20af0>
  42426b:	xor    esi,esi
  42426d:	mov    rdi,rsp
  424270:	call   424910 <strcmp@plt+0x21158>
  424275:	mov    rsi,rsp
  424278:	mov    rdi,rbx
  42427b:	call   423160 <strcmp@plt+0x1f9a8>
  424280:	test   rax,rax
  424283:	je     4242a8 <strcmp@plt+0x20af0>
  424285:	mov    rcx,QWORD PTR [rsp+0x28]
  42428a:	xor    rcx,QWORD PTR fs:0x28
  424293:	mov    rax,rbx
  424296:	jne    4242b4 <strcmp@plt+0x20afc>
  424298:	add    rsp,0x30
  42429c:	pop    rbx
  42429d:	pop    rbp
  42429e:	pop    r12
  4242a0:	ret    
  4242a1:	nop    DWORD PTR [rax+0x0]
  4242a8:	mov    rdi,rbx
  4242ab:	xor    ebx,ebx
  4242ad:	call   4300b0 <strcmp@plt+0x2c8f8>
  4242b2:	jmp    424285 <strcmp@plt+0x20acd>
  4242b4:	call   403460 <__stack_chk_fail@plt>
  4242b9:	nop    DWORD PTR [rax+0x0]
  4242c0:	push   r14
  4242c2:	push   r13
  4242c4:	mov    r14d,edx
  4242c7:	push   r12
  4242c9:	push   rbp
  4242ca:	mov    r12,rdi
  4242cd:	push   rbx
  4242ce:	mov    edi,0x7
  4242d3:	mov    r13,rsi
  4242d6:	mov    ebp,ecx
  4242d8:	call   423800 <strcmp@plt+0x20048>
  4242dd:	mov    esi,r14d
  4242e0:	mov    rdi,rax
  4242e3:	mov    rbx,rax
  4242e6:	call   424060 <strcmp@plt+0x208a8>
  4242eb:	test   rax,rax
  4242ee:	je     424350 <strcmp@plt+0x20b98>
  4242f0:	movzx  edx,bpl
  4242f4:	mov    rsi,r12
  4242f7:	mov    rdi,rbx
  4242fa:	call   4241c0 <strcmp@plt+0x20a08>
  4242ff:	test   rax,rax
  424302:	je     424350 <strcmp@plt+0x20b98>
  424304:	mov    rsi,r13
  424307:	mov    rdi,rbx
  42430a:	call   423160 <strcmp@plt+0x1f9a8>
  42430f:	test   rax,rax
  424312:	je     424350 <strcmp@plt+0x20b98>
  424314:	movzx  eax,WORD PTR [rbx+0x24]
  424318:	cmp    ax,0xffff
  42431c:	je     424338 <strcmp@plt+0x20b80>
  42431e:	mov    rdx,QWORD PTR [rbx+0x30]
  424322:	or     BYTE PTR [rdx+rax*1],0x8
  424326:	mov    rax,rbx
  424329:	pop    rbx
  42432a:	pop    rbp
  42432b:	pop    r12
  42432d:	pop    r13
  42432f:	pop    r14
  424331:	ret    
  424332:	nop    WORD PTR [rax+rax*1+0x0]
  424338:	movzx  eax,BYTE PTR ds:0x0
  424340:	and    eax,0xfffffff7
  424343:	mov    BYTE PTR ds:0x0,al
  42434a:	ud2    
  42434c:	nop    DWORD PTR [rax+0x0]
  424350:	mov    rdi,rbx
  424353:	xor    ebx,ebx
  424355:	call   4300b0 <strcmp@plt+0x2c8f8>
  42435a:	jmp    424326 <strcmp@plt+0x20b6e>
  42435c:	nop    DWORD PTR [rax+0x0]
  424360:	push   rbp
  424361:	push   rbx
  424362:	mov    ebp,esi
  424364:	mov    esi,0x8
  424369:	sub    rsp,0x8
  42436d:	call   4301c0 <strcmp@plt+0x2ca08>
  424372:	mov    esi,ebp
  424374:	mov    rdi,rax
  424377:	mov    rbx,rax
  42437a:	call   425740 <strcmp@plt+0x21f88>
  42437f:	add    rsp,0x8
  424383:	mov    rax,rbx
  424386:	pop    rbx
  424387:	pop    rbp
  424388:	ret    
  424389:	nop    DWORD PTR [rax+0x0]
  424390:	push   r14
  424392:	push   r13
  424394:	mov    r14d,r9d
  424397:	push   r12
  424399:	push   rbp
  42439a:	mov    r12d,edx
  42439d:	push   rbx
  42439e:	mov    rbx,rdi
  4243a1:	mov    ebp,esi
  4243a3:	mov    r13,rcx
  4243a6:	sub    rsp,0x20
  4243aa:	mov    rdi,QWORD PTR [rdi+0x38]
  4243ae:	lea    rdx,[rsp+0x14]
  4243b3:	lea    rsi,[rsp+0x10]
  4243b8:	mov    QWORD PTR [rsp+0x8],r8
  4243bd:	mov    rax,QWORD PTR fs:0x28
  4243c6:	mov    QWORD PTR [rsp+0x18],rax
  4243cb:	xor    eax,eax
  4243cd:	mov    DWORD PTR [rsp+0x10],0x0
  4243d5:	mov    DWORD PTR [rsp+0x14],0x0
  4243dd:	call   436930 <strcmp@plt+0x33178>
  4243e2:	mov    esi,r14d
  4243e5:	mov    rdi,rbx
  4243e8:	call   424360 <strcmp@plt+0x20ba8>
  4243ed:	mov    r8,QWORD PTR [rsp+0x8]
  4243f2:	mov    rcx,r13
  4243f5:	movzx  edx,r12w
  4243f9:	movzx  esi,bp
  4243fc:	mov    rdi,rbx
  4243ff:	call   435a10 <strcmp@plt+0x32258>
  424404:	mov    rdi,QWORD PTR [rbx+0x38]
  424408:	mov    edx,DWORD PTR [rsp+0x14]
  42440c:	mov    esi,DWORD PTR [rsp+0x10]
  424410:	call   4368c0 <strcmp@plt+0x33108>
  424415:	mov    rcx,QWORD PTR [rsp+0x18]
  42441a:	xor    rcx,QWORD PTR fs:0x28
  424423:	mov    rax,QWORD PTR [rbx+0x38]
  424427:	jne    424436 <strcmp@plt+0x20c7e>
  424429:	add    rsp,0x20
  42442d:	pop    rbx
  42442e:	pop    rbp
  42442f:	pop    r12
  424431:	pop    r13
  424433:	pop    r14
  424435:	ret    
  424436:	call   403460 <__stack_chk_fail@plt>
  42443b:	nop    DWORD PTR [rax+rax*1+0x0]
  424440:	mov    edx,DWORD PTR [rdi+0x14]
  424443:	cmp    edx,0x7
  424446:	jbe    424460 <strcmp@plt+0x20ca8>
  424448:	mov    rax,QWORD PTR [rdi+0x38]
  42444c:	sub    edx,0x8
  42444f:	mov    DWORD PTR [rdi+0x14],edx
  424452:	lea    rcx,[rax+0x8]
  424456:	mov    QWORD PTR [rdi+0x38],rcx
  42445a:	ret    
  42445b:	nop    DWORD PTR [rax+rax*1+0x0]
  424460:	xor    eax,eax
  424462:	ret    
  424463:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42446e:	xchg   ax,ax
  424470:	test   rsi,rsi
  424473:	je     4244c0 <strcmp@plt+0x20d08>
  424475:	push   r12
  424477:	push   rbp
  424478:	mov    r12,rsi
  42447b:	push   rbx
  42447c:	mov    rbx,QWORD PTR [rdi+0x8]
  424480:	mov    rbp,rdi
  424483:	cmp    rdi,rbx
  424486:	jne    424499 <strcmp@plt+0x20ce1>
  424488:	jmp    4244b8 <strcmp@plt+0x20d00>
  42448a:	nop    WORD PTR [rax+rax*1+0x0]
  424490:	mov    rbx,QWORD PTR [rbx+0x8]
  424494:	cmp    rbp,rbx
  424497:	je     4244b8 <strcmp@plt+0x20d00>
  424499:	mov    rsi,QWORD PTR [rbx+0x10]
  42449d:	mov    rdi,r12
  4244a0:	call   424df0 <strcmp@plt+0x21638>
  4244a5:	test   eax,eax
  4244a7:	jne    424490 <strcmp@plt+0x20cd8>
  4244a9:	pop    rbx
  4244aa:	mov    eax,0x1
  4244af:	pop    rbp
  4244b0:	pop    r12
  4244b2:	ret    
  4244b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4244b8:	pop    rbx
  4244b9:	xor    eax,eax
  4244bb:	pop    rbp
  4244bc:	pop    r12
  4244be:	ret    
  4244bf:	nop
  4244c0:	xor    eax,eax
  4244c2:	ret    
  4244c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4244ce:	xchg   ax,ax
  4244d0:	push   r13
  4244d2:	push   r12
  4244d4:	mov    r13d,esi
  4244d7:	push   rbp
  4244d8:	push   rbx
  4244d9:	mov    r12,rdi
  4244dc:	sub    rsp,0x8
  4244e0:	mov    rbx,QWORD PTR [rdi+0x8]
  4244e4:	cmp    rdi,rbx
  4244e7:	jne    4244f9 <strcmp@plt+0x20d41>
  4244e9:	jmp    424520 <strcmp@plt+0x20d68>
  4244eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4244f0:	mov    rbx,QWORD PTR [rbx+0x8]
  4244f4:	cmp    r12,rbx
  4244f7:	je     424520 <strcmp@plt+0x20d68>
  4244f9:	mov    rbp,QWORD PTR [rbx+0x10]
  4244fd:	mov    rdi,rbp
  424500:	call   4251c0 <strcmp@plt+0x21a08>
  424505:	movzx  eax,ax
  424508:	cmp    eax,r13d
  42450b:	jne    4244f0 <strcmp@plt+0x20d38>
  42450d:	add    rsp,0x8
  424511:	mov    rax,rbp
  424514:	pop    rbx
  424515:	pop    rbp
  424516:	pop    r12
  424518:	pop    r13
  42451a:	ret    
  42451b:	nop    DWORD PTR [rax+rax*1+0x0]
  424520:	add    rsp,0x8
  424524:	xor    eax,eax
  424526:	pop    rbx
  424527:	pop    rbp
  424528:	pop    r12
  42452a:	pop    r13
  42452c:	ret    
  42452d:	nop    DWORD PTR [rax]
  424530:	push   r14
  424532:	push   r13
  424534:	push   r12
  424536:	push   rbp
  424537:	push   rbx
  424538:	mov    r12d,DWORD PTR [rdi+0x18]
  42453c:	mov    BYTE PTR [rip+0x49c1d],0x0        # 46e160 <strcmp@plt+0x6a9a8>
  424543:	mov    r14,QWORD PTR [rdi+0x8]
  424547:	cmp    rdi,r14
  42454a:	je     42465f <strcmp@plt+0x20ea7>
  424550:	mov    rbp,rdi
  424553:	mov    ebx,0x1
  424558:	lea    r13,[rip+0x49c01]        # 46e160 <strcmp@plt+0x6a9a8>
  42455f:	jmp    4245e3 <strcmp@plt+0x20e2b>
  424564:	nop    DWORD PTR [rax+0x0]
  424568:	call   424890 <strcmp@plt+0x210d8>
  42456d:	lea    rdi,[rip+0x49bec]        # 46e160 <strcmp@plt+0x6a9a8>
  424574:	mov    ecx,DWORD PTR [rdi]
  424576:	add    rdi,0x4
  42457a:	lea    edx,[rcx-0x1010101]
  424580:	andn   edx,ecx,edx
  424585:	and    edx,0x80808080
  42458b:	je     424574 <strcmp@plt+0x20dbc>
  42458d:	mov    ecx,edx
  42458f:	lea    r8,[rip+0x236d2]        # 447c68 <strcmp@plt+0x444b0>
  424596:	mov    r9,rax
  424599:	shr    ecx,0x10
  42459c:	test   edx,0x8080
  4245a2:	cmove  edx,ecx
  4245a5:	lea    rcx,[rdi+0x2]
  4245a9:	mov    esi,edx
  4245ab:	cmove  rdi,rcx
  4245af:	add    sil,dl
  4245b2:	mov    esi,0x8fc
  4245b7:	sbb    rdi,0x3
  4245bb:	mov    rcx,0xffffffffffffffff
  4245c2:	xor    eax,eax
  4245c4:	sub    rdi,r13
  4245c7:	mov    edx,0x1
  4245cc:	add    ebx,0x1
  4245cf:	sub    rsi,rdi
  4245d2:	add    rdi,r13
  4245d5:	call   4032a0 <__snprintf_chk@plt>
  4245da:	mov    r14,QWORD PTR [r14+0x8]
  4245de:	cmp    rbp,r14
  4245e1:	je     42465f <strcmp@plt+0x20ea7>
  4245e3:	cmp    r12d,ebx
  4245e6:	mov    rdi,QWORD PTR [r14+0x10]
  4245ea:	jg     424568 <strcmp@plt+0x20db0>
  4245f0:	call   424890 <strcmp@plt+0x210d8>
  4245f5:	lea    rdi,[rip+0x49b64]        # 46e160 <strcmp@plt+0x6a9a8>
  4245fc:	mov    esi,DWORD PTR [rdi]
  4245fe:	add    rdi,0x4
  424602:	lea    edx,[rsi-0x1010101]
  424608:	andn   edx,esi,edx
  42460d:	and    edx,0x80808080
  424613:	je     4245fc <strcmp@plt+0x20e44>
  424615:	mov    ecx,edx
  424617:	shr    ecx,0x10
  42461a:	test   edx,0x8080
  424620:	cmove  edx,ecx
  424623:	lea    rcx,[rdi+0x2]
  424627:	mov    esi,edx
  424629:	cmove  rdi,rcx
  42462d:	add    sil,dl
  424630:	mov    esi,0x8fc
  424635:	sbb    rdi,0x3
  424639:	lea    rdx,[rip+0x23078]        # 4476b8 <strcmp@plt+0x43f00>
  424640:	mov    rcx,rax
  424643:	sub    rdi,r13
  424646:	xor    eax,eax
  424648:	add    ebx,0x1
  42464b:	sub    rsi,rdi
  42464e:	add    rdi,r13
  424651:	call   403640 <snprintf@plt>
  424656:	mov    r14,QWORD PTR [r14+0x8]
  42465a:	cmp    rbp,r14
  42465d:	jne    4245e3 <strcmp@plt+0x20e2b>
  42465f:	pop    rbx
  424660:	lea    rax,[rip+0x49af9]        # 46e160 <strcmp@plt+0x6a9a8>
  424667:	pop    rbp
  424668:	pop    r12
  42466a:	pop    r13
  42466c:	pop    r14
  42466e:	ret    
  42466f:	nop
  424670:	cmp    dil,0x1
  424674:	push   rbx
  424675:	je     424710 <strcmp@plt+0x20f58>
  42467b:	jb     4246f0 <strcmp@plt+0x20f38>
  42467d:	cmp    dil,0x2
  424681:	je     4246a8 <strcmp@plt+0x20ef0>
  424683:	cmp    dil,0x3
  424687:	jne    4246c8 <strcmp@plt+0x20f10>
  424689:	mov    edi,0x20
  42468e:	call   434790 <strcmp@plt+0x30fd8>
  424693:	mov    rbx,rax
  424696:	mov    DWORD PTR [rax+0x18],0x3
  42469d:	mov    rax,rbx
  4246a0:	pop    rbx
  4246a1:	ret    
  4246a2:	nop    WORD PTR [rax+rax*1+0x0]
  4246a8:	mov    edi,0x20
  4246ad:	call   434790 <strcmp@plt+0x30fd8>
  4246b2:	mov    rbx,rax
  4246b5:	mov    DWORD PTR [rax+0x18],0x2
  4246bc:	mov    rax,rbx
  4246bf:	pop    rbx
  4246c0:	ret    
  4246c1:	nop    DWORD PTR [rax+0x0]
  4246c8:	lea    rsi,[rip+0x28f61]        # 44d630 <strcmp@plt+0x49e78>
  4246cf:	movzx  edx,dil
  4246d3:	xor    eax,eax
  4246d5:	xor    ebx,ebx
  4246d7:	mov    edi,0x3
  4246dc:	call   4306a0 <strcmp@plt+0x2cee8>
  4246e1:	mov    rax,rbx
  4246e4:	pop    rbx
  4246e5:	ret    
  4246e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4246f0:	mov    edi,0x20
  4246f5:	call   434790 <strcmp@plt+0x30fd8>
  4246fa:	mov    rbx,rax
  4246fd:	mov    DWORD PTR [rax+0x18],0x0
  424704:	mov    rax,rbx
  424707:	pop    rbx
  424708:	ret    
  424709:	nop    DWORD PTR [rax+0x0]
  424710:	mov    edi,0x20
  424715:	call   434790 <strcmp@plt+0x30fd8>
  42471a:	xor    esi,esi
  42471c:	mov    rbx,rax
  42471f:	mov    DWORD PTR [rax+0x18],0x1
  424726:	mov    rdi,rax
  424729:	call   4258f0 <strcmp@plt+0x22138>
  42472e:	mov    rax,rbx
  424731:	pop    rbx
  424732:	ret    
  424733:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42473e:	xchg   ax,ax
  424740:	mov    edi,0x20
  424745:	jmp    434790 <strcmp@plt+0x30fd8>
  42474a:	nop    WORD PTR [rax+rax*1+0x0]
  424750:	test   rdi,rdi
  424753:	je     424790 <strcmp@plt+0x20fd8>
  424755:	mov    edx,DWORD PTR [rdi+0x18]
  424758:	cmp    edx,0x2
  42475b:	jbe    42476f <strcmp@plt+0x20fb7>
  42475d:	cmp    edx,0x3
  424760:	jne    424778 <strcmp@plt+0x20fc0>
  424762:	push   rbx
  424763:	mov    rbx,rdi
  424766:	call   428160 <strcmp@plt+0x249a8>
  42476b:	mov    rdi,rbx
  42476e:	pop    rbx
  42476f:	jmp    4037b0 <free@plt>
  424774:	nop    DWORD PTR [rax+0x0]
  424778:	lea    rsi,[rip+0x28ee1]        # 44d660 <strcmp@plt+0x49ea8>
  42477f:	mov    edi,0x3
  424784:	xor    eax,eax
  424786:	jmp    4306a0 <strcmp@plt+0x2cee8>
  42478b:	nop    DWORD PTR [rax+rax*1+0x0]
  424790:	repz ret 
  424792:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42479d:	nop    DWORD PTR [rax]
  4247a0:	mov    edx,DWORD PTR [rdi+0x18]
  4247a3:	cmp    edx,0x1
  4247a6:	je     4247dc <strcmp@plt+0x21024>
  4247a8:	jb     4247e8 <strcmp@plt+0x21030>
  4247aa:	sub    rsp,0x8
  4247ae:	cmp    edx,0x2
  4247b1:	je     4247d0 <strcmp@plt+0x21018>
  4247b3:	cmp    edx,0x3
  4247b6:	mov    eax,0x4003
  4247bb:	je     4247cb <strcmp@plt+0x21013>
  4247bd:	mov    rax,0x468e3c
  4247c4:	cmp    DWORD PTR [rax],0x1
  4247c7:	jg     4247f0 <strcmp@plt+0x21038>
  4247c9:	xor    eax,eax
  4247cb:	add    rsp,0x8
  4247cf:	ret    
  4247d0:	call   425e50 <strcmp@plt+0x22698>
  4247d5:	add    rsp,0x8
  4247d9:	mov    rdi,rax
  4247dc:	jmp    4258a0 <strcmp@plt+0x220e8>
  4247e1:	nop    DWORD PTR [rax+0x0]
  4247e8:	xor    eax,eax
  4247ea:	ret    
  4247eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4247f0:	lea    rsi,[rip+0x28e99]        # 44d690 <strcmp@plt+0x49ed8>
  4247f7:	mov    edi,0x6
  4247fc:	xor    eax,eax
  4247fe:	call   4306a0 <strcmp@plt+0x2cee8>
  424803:	jmp    4247c9 <strcmp@plt+0x21011>
  424805:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424810:	sub    rsp,0x8
  424814:	mov    edx,DWORD PTR [rdi+0x18]
  424817:	cmp    edx,0x1
  42481a:	je     424840 <strcmp@plt+0x21088>
  42481c:	jb     424868 <strcmp@plt+0x210b0>
  42481e:	cmp    edx,0x2
  424821:	je     424838 <strcmp@plt+0x21080>
  424823:	cmp    edx,0x3
  424826:	jne    424850 <strcmp@plt+0x21098>
  424828:	add    rsp,0x8
  42482c:	jmp    4284f0 <strcmp@plt+0x24d38>
  424831:	nop    DWORD PTR [rax+0x0]
  424838:	call   425e50 <strcmp@plt+0x22698>
  42483d:	mov    rdi,rax
  424840:	call   425850 <strcmp@plt+0x22098>
  424845:	add    rsp,0x8
  424849:	movzx  eax,al
  42484c:	ret    
  42484d:	nop    DWORD PTR [rax]
  424850:	mov    rax,0x468e3c
  424857:	cmp    DWORD PTR [rax],0x2
  42485a:	jg     424878 <strcmp@plt+0x210c0>
  42485c:	xor    eax,eax
  42485e:	add    rsp,0x8
  424862:	ret    
  424863:	nop    DWORD PTR [rax+rax*1+0x0]
  424868:	mov    eax,0x2
  42486d:	add    rsp,0x8
  424871:	ret    
  424872:	nop    WORD PTR [rax+rax*1+0x0]
  424878:	lea    rsi,[rip+0x28e41]        # 44d6c0 <strcmp@plt+0x49f08>
  42487f:	xor    eax,eax
  424881:	mov    edi,0x7
  424886:	call   4306a0 <strcmp@plt+0x2cee8>
  42488b:	xor    eax,eax
  42488d:	jmp    42485e <strcmp@plt+0x210a6>
  42488f:	nop
  424890:	test   rdi,rdi
  424893:	je     4248e8 <strcmp@plt+0x21130>
  424895:	mov    edx,DWORD PTR [rdi+0x18]
  424898:	cmp    edx,0x1
  42489b:	je     4248e0 <strcmp@plt+0x21128>
  42489d:	jb     4248d0 <strcmp@plt+0x21118>
  42489f:	cmp    edx,0x2
  4248a2:	je     4248c8 <strcmp@plt+0x21110>
  4248a4:	cmp    edx,0x3
  4248a7:	je     4248c0 <strcmp@plt+0x21108>
  4248a9:	mov    rax,0x468e3c
  4248b0:	cmp    DWORD PTR [rax],0x2
  4248b3:	jg     4248f0 <strcmp@plt+0x21138>
  4248b5:	xor    eax,eax
  4248b7:	ret    
  4248b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4248c0:	jmp    4282c0 <strcmp@plt+0x24b08>
  4248c5:	nop    DWORD PTR [rax]
  4248c8:	jmp    425fa0 <strcmp@plt+0x227e8>
  4248cd:	nop    DWORD PTR [rax]
  4248d0:	lea    rax,[rip+0x29375]        # 44dc4c <strcmp@plt+0x4a494>
  4248d7:	ret    
  4248d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4248e0:	jmp    425f90 <strcmp@plt+0x227d8>
  4248e5:	nop    DWORD PTR [rax]
  4248e8:	lea    rax,[rip+0x29356]        # 44dc45 <strcmp@plt+0x4a48d>
  4248ef:	ret    
  4248f0:	lea    rsi,[rip+0x28e01]        # 44d6f8 <strcmp@plt+0x49f40>
  4248f7:	sub    rsp,0x8
  4248fb:	xor    eax,eax
  4248fd:	mov    edi,0x7
  424902:	call   4306a0 <strcmp@plt+0x2cee8>
  424907:	xor    eax,eax
  424909:	add    rsp,0x8
  42490d:	ret    
  42490e:	xchg   ax,ax
  424910:	mov    DWORD PTR [rdi+0x18],esi
  424913:	ret    
  424914:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42491f:	nop
  424920:	mov    edx,DWORD PTR [rdi+0x18]
  424923:	lea    eax,[rdx-0x1]
  424926:	cmp    eax,0x1
  424929:	jbe    424958 <strcmp@plt+0x211a0>
  42492b:	mov    rax,0x468e3c
  424932:	cmp    DWORD PTR [rax],0x2
  424935:	jg     424940 <strcmp@plt+0x21188>
  424937:	repz ret 
  424939:	nop    DWORD PTR [rax+0x0]
  424940:	lea    rsi,[rip+0x28df9]        # 44d740 <strcmp@plt+0x49f88>
  424947:	mov    edi,0x7
  42494c:	xor    eax,eax
  42494e:	jmp    4306a0 <strcmp@plt+0x2cee8>
  424953:	nop    DWORD PTR [rax+rax*1+0x0]
  424958:	push   rbx
  424959:	mov    rbx,rdi
  42495c:	mov    DWORD PTR [rdi+0x18],0x2
  424963:	call   426300 <strcmp@plt+0x22b48>
  424968:	mov    rdi,rbx
  42496b:	movzx  esi,al
  42496e:	pop    rbx
  42496f:	jmp    425ea0 <strcmp@plt+0x226e8>
  424974:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42497f:	nop
  424980:	mov    edx,DWORD PTR [rdi+0x18]
  424983:	cmp    edx,0x1
  424986:	je     4249b0 <strcmp@plt+0x211f8>
  424988:	cmp    edx,0x2
  42498b:	jne    424998 <strcmp@plt+0x211e0>
  42498d:	jmp    425eb0 <strcmp@plt+0x226f8>
  424992:	nop    WORD PTR [rax+rax*1+0x0]
  424998:	lea    rsi,[rip+0x28dd9]        # 44d778 <strcmp@plt+0x49fc0>
  42499f:	mov    edi,0x3
  4249a4:	xor    eax,eax
  4249a6:	jmp    4306a0 <strcmp@plt+0x2cee8>
  4249ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4249b0:	jmp    4258f0 <strcmp@plt+0x22138>
  4249b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4249c0:	mov    edx,DWORD PTR [rdi+0x18]
  4249c3:	lea    eax,[rdx-0x1]
  4249c6:	cmp    eax,0x1
  4249c9:	jbe    424a00 <strcmp@plt+0x21248>
  4249cb:	mov    rax,0x468e3c
  4249d2:	cmp    DWORD PTR [rax],0x2
  4249d5:	jg     4249e0 <strcmp@plt+0x21228>
  4249d7:	xor    eax,eax
  4249d9:	ret    
  4249da:	nop    WORD PTR [rax+rax*1+0x0]
  4249e0:	lea    rsi,[rip+0x28dc1]        # 44d7a8 <strcmp@plt+0x49ff0>
  4249e7:	sub    rsp,0x8
  4249eb:	xor    eax,eax
  4249ed:	mov    edi,0x7
  4249f2:	call   4306a0 <strcmp@plt+0x2cee8>
  4249f7:	xor    eax,eax
  4249f9:	add    rsp,0x8
  4249fd:	ret    
  4249fe:	xchg   ax,ax
  424a00:	cmp    edx,0x2
  424a03:	jne    424a10 <strcmp@plt+0x21258>
  424a05:	jmp    425e50 <strcmp@plt+0x22698>
  424a0a:	nop    WORD PTR [rax+rax*1+0x0]
  424a10:	mov    rax,rdi
  424a13:	ret    
  424a14:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424a1f:	nop
  424a20:	push   rbx
  424a21:	mov    eax,DWORD PTR [rdi+0x18]
  424a24:	mov    rbx,rdi
  424a27:	cmp    eax,0x1
  424a2a:	je     424a50 <strcmp@plt+0x21298>
  424a2c:	cmp    eax,0x2
  424a2f:	jne    424a40 <strcmp@plt+0x21288>
  424a31:	pop    rbx
  424a32:	jmp    425e40 <strcmp@plt+0x22688>
  424a37:	nop    WORD PTR [rax+rax*1+0x0]
  424a40:	mov    rax,0x468e3c
  424a47:	cmp    DWORD PTR [rax],0x2
  424a4a:	jg     424a78 <strcmp@plt+0x212c0>
  424a4c:	xor    eax,eax
  424a4e:	pop    rbx
  424a4f:	ret    
  424a50:	call   4257c0 <strcmp@plt+0x22008>
  424a55:	test   eax,eax
  424a57:	je     424a90 <strcmp@plt+0x212d8>
  424a59:	mov    rdi,rbx
  424a5c:	call   4257c0 <strcmp@plt+0x22008>
  424a61:	mov    edx,0xffffff80
  424a66:	cmp    eax,0x2
  424a69:	mov    eax,0x20
  424a6e:	cmovne eax,edx
  424a71:	pop    rbx
  424a72:	ret    
  424a73:	nop    DWORD PTR [rax+rax*1+0x0]
  424a78:	lea    rsi,[rip+0x28d91]        # 44d810 <strcmp@plt+0x4a058>
  424a7f:	xor    eax,eax
  424a81:	mov    edi,0x7
  424a86:	call   4306a0 <strcmp@plt+0x2cee8>
  424a8b:	xor    eax,eax
  424a8d:	jmp    424a4e <strcmp@plt+0x21296>
  424a8f:	nop
  424a90:	lea    rsi,[rip+0x28d49]        # 44d7e0 <strcmp@plt+0x4a028>
  424a97:	mov    edi,0x3
  424a9c:	call   4306a0 <strcmp@plt+0x2cee8>
  424aa1:	xor    eax,eax
  424aa3:	pop    rbx
  424aa4:	ret    
  424aa5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424ab0:	mov    edx,DWORD PTR [rdi+0x18]
  424ab3:	cmp    edx,0x1
  424ab6:	je     424ad8 <strcmp@plt+0x21320>
  424ab8:	cmp    edx,0x2
  424abb:	je     424ad0 <strcmp@plt+0x21318>
  424abd:	mov    rax,0x468e3c
  424ac4:	cmp    DWORD PTR [rax],0x2
  424ac7:	jg     424ae0 <strcmp@plt+0x21328>
  424ac9:	repz ret 
  424acb:	nop    DWORD PTR [rax+rax*1+0x0]
  424ad0:	jmp    425eb0 <strcmp@plt+0x226f8>
  424ad5:	nop    DWORD PTR [rax]
  424ad8:	jmp    4258f0 <strcmp@plt+0x22138>
  424add:	nop    DWORD PTR [rax]
  424ae0:	lea    rsi,[rip+0x28d61]        # 44d848 <strcmp@plt+0x4a090>
  424ae7:	mov    edi,0x7
  424aec:	xor    eax,eax
  424aee:	jmp    4306a0 <strcmp@plt+0x2cee8>
  424af3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424afe:	xchg   ax,ax
  424b00:	mov    edx,DWORD PTR [rsi+0x18]
  424b03:	mov    DWORD PTR [rdi+0x18],edx
  424b06:	mov    eax,DWORD PTR [rsi+0x18]
  424b09:	cmp    eax,0x1
  424b0c:	je     424b60 <strcmp@plt+0x213a8>
  424b0e:	jb     424b40 <strcmp@plt+0x21388>
  424b10:	cmp    eax,0x2
  424b13:	je     424b20 <strcmp@plt+0x21368>
  424b15:	cmp    eax,0x3
  424b18:	jne    424b28 <strcmp@plt+0x21370>
  424b1a:	jmp    428540 <strcmp@plt+0x24d88>
  424b1f:	nop
  424b20:	jmp    425ee0 <strcmp@plt+0x22728>
  424b25:	nop    DWORD PTR [rax]
  424b28:	mov    rax,0x468e3c
  424b2f:	cmp    DWORD PTR [rax],0x1
  424b32:	jg     424b68 <strcmp@plt+0x213b0>
  424b34:	repz ret 
  424b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424b40:	mov    rax,0x468e3c
  424b47:	cmp    DWORD PTR [rax],0x2
  424b4a:	jle    424b34 <strcmp@plt+0x2137c>
  424b4c:	lea    rsi,[rip+0x28d25]        # 44d878 <strcmp@plt+0x4a0c0>
  424b53:	mov    edi,0x7
  424b58:	xor    eax,eax
  424b5a:	jmp    4306a0 <strcmp@plt+0x2cee8>
  424b5f:	nop
  424b60:	jmp    4259b0 <strcmp@plt+0x221f8>
  424b65:	nop    DWORD PTR [rax]
  424b68:	lea    rsi,[rip+0x28d39]        # 44d8a8 <strcmp@plt+0x4a0f0>
  424b6f:	mov    edi,0x6
  424b74:	xor    eax,eax
  424b76:	jmp    4306a0 <strcmp@plt+0x2cee8>
  424b7b:	nop    DWORD PTR [rax+rax*1+0x0]
  424b80:	push   rbp
  424b81:	push   rbx
  424b82:	sub    rsp,0x8
  424b86:	test   rdi,rdi
  424b89:	je     424bb0 <strcmp@plt+0x213f8>
  424b8b:	mov    rbx,rdi
  424b8e:	mov    edi,0x20
  424b93:	call   434790 <strcmp@plt+0x30fd8>
  424b98:	mov    rsi,rbx
  424b9b:	mov    rdi,rax
  424b9e:	mov    rbp,rax
  424ba1:	call   424b00 <strcmp@plt+0x21348>
  424ba6:	add    rsp,0x8
  424baa:	mov    rax,rbp
  424bad:	pop    rbx
  424bae:	pop    rbp
  424baf:	ret    
  424bb0:	xor    ebp,ebp
  424bb2:	jmp    424ba6 <strcmp@plt+0x213ee>
  424bb4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424bbf:	nop
  424bc0:	push   rbp
  424bc1:	push   rbx
  424bc2:	mov    rbp,rdi
  424bc5:	mov    rbx,rsi
  424bc8:	sub    rsp,0x8
  424bcc:	mov    edx,DWORD PTR [rsi+0x18]
  424bcf:	cmp    edx,0x2
  424bd2:	je     424c50 <strcmp@plt+0x21498>
  424bd4:	cmp    edx,0x3
  424bd7:	je     424c20 <strcmp@plt+0x21468>
  424bd9:	cmp    edx,0x1
  424bdc:	je     424c00 <strcmp@plt+0x21448>
  424bde:	mov    rax,0x468e3c
  424be5:	cmp    DWORD PTR [rax],0x2
  424be8:	jg     424c80 <strcmp@plt+0x214c8>
  424bee:	xor    eax,eax
  424bf0:	add    rsp,0x8
  424bf4:	pop    rbx
  424bf5:	pop    rbp
  424bf6:	ret    
  424bf7:	nop    WORD PTR [rax+rax*1+0x0]
  424c00:	call   4259d0 <strcmp@plt+0x22218>
  424c05:	mov    rdi,rbx
  424c08:	call   425800 <strcmp@plt+0x22048>
  424c0d:	movzx  eax,al
  424c10:	add    rsp,0x8
  424c14:	pop    rbx
  424c15:	pop    rbp
  424c16:	ret    
  424c17:	nop    WORD PTR [rax+rax*1+0x0]
  424c20:	mov    rax,0x468e3c
  424c27:	cmp    DWORD PTR [rax],0x2
  424c2a:	jle    424bee <strcmp@plt+0x21436>
  424c2c:	mov    rdi,rsi
  424c2f:	call   424890 <strcmp@plt+0x210d8>
  424c34:	lea    rsi,[rip+0x28c9d]        # 44d8d8 <strcmp@plt+0x4a120>
  424c3b:	mov    rdx,rax
  424c3e:	mov    edi,0x7
  424c43:	xor    eax,eax
  424c45:	call   4306a0 <strcmp@plt+0x2cee8>
  424c4a:	xor    eax,eax
  424c4c:	jmp    424c10 <strcmp@plt+0x21458>
  424c4e:	xchg   ax,ax
  424c50:	mov    rdi,rsi
  424c53:	call   425e50 <strcmp@plt+0x22698>
  424c58:	mov    rdi,rbp
  424c5b:	mov    rsi,rax
  424c5e:	call   4259d0 <strcmp@plt+0x22218>
  424c63:	mov    rdi,rbx
  424c66:	call   425e50 <strcmp@plt+0x22698>
  424c6b:	mov    rdi,rax
  424c6e:	call   425800 <strcmp@plt+0x22048>
  424c73:	add    rsp,0x8
  424c77:	movzx  eax,al
  424c7a:	pop    rbx
  424c7b:	pop    rbp
  424c7c:	ret    
  424c7d:	nop    DWORD PTR [rax]
  424c80:	lea    rsi,[rip+0x28c91]        # 44d918 <strcmp@plt+0x4a160>
  424c87:	xor    eax,eax
  424c89:	mov    edi,0x7
  424c8e:	call   4306a0 <strcmp@plt+0x2cee8>
  424c93:	xor    eax,eax
  424c95:	jmp    424bf0 <strcmp@plt+0x21438>
  424c9a:	nop    WORD PTR [rax+rax*1+0x0]
  424ca0:	mov    edx,DWORD PTR [rsi+0x18]
  424ca3:	cmp    edx,0x1
  424ca6:	je     424d00 <strcmp@plt+0x21548>
  424ca8:	jb     424cf0 <strcmp@plt+0x21538>
  424caa:	cmp    edx,0x2
  424cad:	push   rbx
  424cae:	mov    rbx,rdi
  424cb1:	je     424cc0 <strcmp@plt+0x21508>
  424cb3:	cmp    edx,0x3
  424cb6:	jne    424ce0 <strcmp@plt+0x21528>
  424cb8:	pop    rbx
  424cb9:	jmp    4285e0 <strcmp@plt+0x24e28>
  424cbe:	xchg   ax,ax
  424cc0:	mov    rdi,rsi
  424cc3:	call   425e50 <strcmp@plt+0x22698>
  424cc8:	mov    rdi,rbx
  424ccb:	xor    edx,edx
  424ccd:	mov    rsi,rax
  424cd0:	pop    rbx
  424cd1:	jmp    425ae0 <strcmp@plt+0x22328>
  424cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424ce0:	mov    rax,0x468e3c
  424ce7:	cmp    DWORD PTR [rax],0x2
  424cea:	jg     424d10 <strcmp@plt+0x21558>
  424cec:	xor    eax,eax
  424cee:	pop    rbx
  424cef:	ret    
  424cf0:	xor    eax,eax
  424cf2:	mov    WORD PTR [rdi],ax
  424cf5:	mov    eax,0x2
  424cfa:	ret    
  424cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  424d00:	xor    edx,edx
  424d02:	jmp    425ae0 <strcmp@plt+0x22328>
  424d07:	nop    WORD PTR [rax+rax*1+0x0]
  424d10:	lea    rsi,[rip+0x28c31]        # 44d948 <strcmp@plt+0x4a190>
  424d17:	mov    edi,0x7
  424d1c:	xor    eax,eax
  424d1e:	call   4306a0 <strcmp@plt+0x2cee8>
  424d23:	jmp    424cec <strcmp@plt+0x21534>
  424d25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424d30:	test   rsi,rsi
  424d33:	push   rbx
  424d34:	je     424dc0 <strcmp@plt+0x21608>
  424d3a:	mov    rbx,rsi
  424d3d:	movzx  esi,WORD PTR [rdi]
  424d40:	rol    si,0x8
  424d44:	cmp    si,0x2
  424d48:	ja     424d78 <strcmp@plt+0x215c0>
  424d4a:	cmp    si,0x1
  424d4e:	jae    424d60 <strcmp@plt+0x215a8>
  424d50:	mov    DWORD PTR [rbx+0x18],0x0
  424d57:	mov    eax,0x2
  424d5c:	pop    rbx
  424d5d:	ret    
  424d5e:	xchg   ax,ax
  424d60:	mov    rdx,rbx
  424d63:	movzx  esi,si
  424d66:	call   425d40 <strcmp@plt+0x22588>
  424d6b:	mov    DWORD PTR [rbx+0x18],0x1
  424d72:	pop    rbx
  424d73:	ret    
  424d74:	nop    DWORD PTR [rax+0x0]
  424d78:	cmp    si,0x4003
  424d7d:	jne    424d90 <strcmp@plt+0x215d8>
  424d7f:	mov    rsi,rbx
  424d82:	call   4281f0 <strcmp@plt+0x24a38>
  424d87:	mov    DWORD PTR [rbx+0x18],0x3
  424d8e:	pop    rbx
  424d8f:	ret    
  424d90:	mov    rax,0x468e3c
  424d97:	cmp    DWORD PTR [rax],0x1
  424d9a:	jg     424da0 <strcmp@plt+0x215e8>
  424d9c:	xor    eax,eax
  424d9e:	pop    rbx
  424d9f:	ret    
  424da0:	movzx  edx,si
  424da3:	lea    rsi,[rip+0x28bfe]        # 44d9a8 <strcmp@plt+0x4a1f0>
  424daa:	xor    eax,eax
  424dac:	mov    edi,0x6
  424db1:	call   4306a0 <strcmp@plt+0x2cee8>
  424db6:	xor    eax,eax
  424db8:	jmp    424d9e <strcmp@plt+0x215e6>
  424dba:	nop    WORD PTR [rax+rax*1+0x0]
  424dc0:	mov    rax,0x468e3c
  424dc7:	cmp    DWORD PTR [rax],0x2
  424dca:	jle    424d9c <strcmp@plt+0x215e4>
  424dcc:	lea    rsi,[rip+0x28b9d]        # 44d970 <strcmp@plt+0x4a1b8>
  424dd3:	xor    eax,eax
  424dd5:	mov    edi,0x7
  424dda:	call   4306a0 <strcmp@plt+0x2cee8>
  424ddf:	xor    eax,eax
  424de1:	pop    rbx
  424de2:	ret    
  424de3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424dee:	xchg   ax,ax
  424df0:	test   rdi,rdi
  424df3:	push   r12
  424df5:	push   rbp
  424df6:	push   rbx
  424df7:	je     424e28 <strcmp@plt+0x21670>
  424df9:	test   rsi,rsi
  424dfc:	mov    rbp,rsi
  424dff:	je     424e28 <strcmp@plt+0x21670>
  424e01:	mov    edx,DWORD PTR [rdi+0x18]
  424e04:	mov    ecx,DWORD PTR [rsi+0x18]
  424e07:	mov    rbx,rdi
  424e0a:	cmp    edx,ecx
  424e0c:	je     424e70 <strcmp@plt+0x216b8>
  424e0e:	mov    rax,0x468e3c
  424e15:	cmp    DWORD PTR [rax],0x2
  424e18:	jg     424e58 <strcmp@plt+0x216a0>
  424e1a:	mov    eax,0xffffffff
  424e1f:	pop    rbx
  424e20:	pop    rbp
  424e21:	pop    r12
  424e23:	ret    
  424e24:	nop    DWORD PTR [rax+0x0]
  424e28:	mov    rax,0x468e3c
  424e2f:	cmp    DWORD PTR [rax],0x2
  424e32:	jle    424e1a <strcmp@plt+0x21662>
  424e34:	lea    rsi,[rip+0x28ba5]        # 44d9e0 <strcmp@plt+0x4a228>
  424e3b:	xor    eax,eax
  424e3d:	mov    edi,0x7
  424e42:	call   4306a0 <strcmp@plt+0x2cee8>
  424e47:	pop    rbx
  424e48:	mov    eax,0xffffffff
  424e4d:	pop    rbp
  424e4e:	pop    r12
  424e50:	ret    
  424e51:	nop    DWORD PTR [rax+0x0]
  424e58:	lea    rsi,[rip+0x28bb9]        # 44da18 <strcmp@plt+0x4a260>
  424e5f:	mov    edi,0x7
  424e64:	xor    eax,eax
  424e66:	call   4306a0 <strcmp@plt+0x2cee8>
  424e6b:	jmp    424e1a <strcmp@plt+0x21662>
  424e6d:	nop    DWORD PTR [rax]
  424e70:	cmp    edx,0x1
  424e73:	je     424f00 <strcmp@plt+0x21748>
  424e79:	jb     424ef0 <strcmp@plt+0x21738>
  424e7b:	cmp    edx,0x2
  424e7e:	je     424e90 <strcmp@plt+0x216d8>
  424e80:	cmp    edx,0x3
  424e83:	jne    424e1a <strcmp@plt+0x21662>
  424e85:	pop    rbx
  424e86:	pop    rbp
  424e87:	pop    r12
  424e89:	jmp    428650 <strcmp@plt+0x24e98>
  424e8e:	xchg   ax,ax
  424e90:	mov    rdi,rsi
  424e93:	call   425e50 <strcmp@plt+0x22698>
  424e98:	mov    rdi,rbx
  424e9b:	mov    r12,rax
  424e9e:	call   425e50 <strcmp@plt+0x22698>
  424ea3:	mov    rsi,r12
  424ea6:	mov    rdi,rax
  424ea9:	call   425ca0 <strcmp@plt+0x224e8>
  424eae:	test   eax,eax
  424eb0:	jne    424e1f <strcmp@plt+0x21667>
  424eb6:	mov    rdi,rbx
  424eb9:	call   425e40 <strcmp@plt+0x22688>
  424ebe:	mov    rdi,rbp
  424ec1:	movzx  ebx,al
  424ec4:	call   425e40 <strcmp@plt+0x22688>
  424ec9:	movzx  edx,al
  424ecc:	mov    eax,0x1
  424ed1:	cmp    ebx,edx
  424ed3:	jl     424e1f <strcmp@plt+0x21667>
  424ed9:	jle    424ef5 <strcmp@plt+0x2173d>
  424edb:	nop    DWORD PTR [rax+rax*1+0x0]
  424ee0:	mov    eax,0x2
  424ee5:	jmp    424e1f <strcmp@plt+0x21667>
  424eea:	nop    WORD PTR [rax+rax*1+0x0]
  424ef0:	cmp    rdi,rsi
  424ef3:	jne    424ee0 <strcmp@plt+0x21728>
  424ef5:	xor    eax,eax
  424ef7:	jmp    424e1f <strcmp@plt+0x21667>
  424efc:	nop    DWORD PTR [rax+0x0]
  424f00:	pop    rbx
  424f01:	pop    rbp
  424f02:	pop    r12
  424f04:	jmp    425ca0 <strcmp@plt+0x224e8>
  424f09:	nop    DWORD PTR [rax+0x0]
  424f10:	mov    QWORD PTR [rdi+0x8],rsi
  424f14:	ret    
  424f15:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424f20:	mov    rax,QWORD PTR [rdi+0x8]
  424f24:	ret    
  424f25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424f30:	mov    eax,DWORD PTR [rdi]
  424f32:	ret    
  424f33:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424f3e:	xchg   ax,ax
  424f40:	mov    DWORD PTR [rdi],esi
  424f42:	ret    
  424f43:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424f4e:	xchg   ax,ax
  424f50:	mov    DWORD PTR [rdi+0x18],0x1
  424f57:	movzx  edx,dl
  424f5a:	jmp    425960 <strcmp@plt+0x221a8>
  424f5f:	nop
  424f60:	sub    rsp,0x8
  424f64:	mov    DWORD PTR [rdi+0x18],0x1
  424f6b:	call   4259b0 <strcmp@plt+0x221f8>
  424f70:	mov    eax,0x1
  424f75:	add    rsp,0x8
  424f79:	ret    
  424f7a:	nop    WORD PTR [rax+rax*1+0x0]
  424f80:	sub    rsp,0x8
  424f84:	movzx  edx,dl
  424f87:	mov    DWORD PTR [rdi+0x18],0x2
  424f8e:	call   425e70 <strcmp@plt+0x226b8>
  424f93:	mov    eax,0x1
  424f98:	add    rsp,0x8
  424f9c:	ret    
  424f9d:	nop    DWORD PTR [rax]
  424fa0:	sub    rsp,0x8
  424fa4:	mov    DWORD PTR [rdi+0x18],0x3
  424fab:	call   428540 <strcmp@plt+0x24d88>
  424fb0:	mov    eax,0x1
  424fb5:	add    rsp,0x8
  424fb9:	ret    
  424fba:	nop    WORD PTR [rax+rax*1+0x0]
  424fc0:	cmp    di,0x1
  424fc4:	jb     424fe0 <strcmp@plt+0x21828>
  424fc6:	cmp    di,0x2
  424fca:	mov    eax,0x1
  424fcf:	jbe    424fdd <strcmp@plt+0x21825>
  424fd1:	cmp    di,0x4003
  424fd6:	mov    eax,0x3
  424fdb:	jne    424fe0 <strcmp@plt+0x21828>
  424fdd:	ret    
  424fde:	xchg   ax,ax
  424fe0:	lea    rsi,[rip+0x28a69]        # 44da50 <strcmp@plt+0x4a298>
  424fe7:	sub    rsp,0x8
  424feb:	movzx  edx,di
  424fee:	xor    eax,eax
  424ff0:	mov    edi,0x3
  424ff5:	call   4306a0 <strcmp@plt+0x2cee8>
  424ffa:	xor    eax,eax
  424ffc:	add    rsp,0x8
  425000:	ret    
  425001:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42500c:	nop    DWORD PTR [rax+0x0]
  425010:	xor    eax,eax
  425012:	test   rdi,rdi
  425015:	je     425040 <strcmp@plt+0x21888>
  425017:	cmp    DWORD PTR [rdi+0x18],0x3
  42501b:	je     425020 <strcmp@plt+0x21868>
  42501d:	repz ret 
  42501f:	nop
  425020:	sub    rsp,0x8
  425024:	call   428410 <strcmp@plt+0x24c58>
  425029:	test   eax,eax
  42502b:	setne  al
  42502e:	add    rsp,0x8
  425032:	movzx  eax,al
  425035:	ret    
  425036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425040:	repz ret 
  425042:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42504d:	nop    DWORD PTR [rax]
  425050:	mov    eax,DWORD PTR [rdi+0x18]
  425053:	cmp    eax,0x2
  425056:	je     425070 <strcmp@plt+0x218b8>
  425058:	cmp    eax,0x3
  42505b:	je     425080 <strcmp@plt+0x218c8>
  42505d:	cmp    eax,0x1
  425060:	mov    eax,0x0
  425065:	cmove  rax,rdi
  425069:	ret    
  42506a:	nop    WORD PTR [rax+rax*1+0x0]
  425070:	mov    rax,0x468e3c
  425077:	cmp    DWORD PTR [rax],0x2
  42507a:	jg     425088 <strcmp@plt+0x218d0>
  42507c:	xor    eax,eax
  42507e:	ret    
  42507f:	nop
  425080:	jmp    429b60 <strcmp@plt+0x263a8>
  425085:	nop    DWORD PTR [rax]
  425088:	lea    rsi,[rip+0x289f9]        # 44da88 <strcmp@plt+0x4a2d0>
  42508f:	sub    rsp,0x8
  425093:	xor    eax,eax
  425095:	mov    edi,0x7
  42509a:	call   4306a0 <strcmp@plt+0x2cee8>
  42509f:	xor    eax,eax
  4250a1:	add    rsp,0x8
  4250a5:	ret    
  4250a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4250b0:	sub    rsp,0x18
  4250b4:	cmp    DWORD PTR [rsi+0x18],0x1
  4250b8:	je     4250e8 <strcmp@plt+0x21930>
  4250ba:	mov    rax,0x468e3c
  4250c1:	cmp    DWORD PTR [rax],0x1
  4250c4:	jg     4250d0 <strcmp@plt+0x21918>
  4250c6:	xor    eax,eax
  4250c8:	add    rsp,0x18
  4250cc:	ret    
  4250cd:	nop    DWORD PTR [rax]
  4250d0:	lea    rsi,[rip+0x289e9]        # 44dac0 <strcmp@plt+0x4a308>
  4250d7:	mov    edi,0x6
  4250dc:	xor    eax,eax
  4250de:	call   4306a0 <strcmp@plt+0x2cee8>
  4250e3:	jmp    4250c6 <strcmp@plt+0x2190e>
  4250e5:	nop    DWORD PTR [rax]
  4250e8:	mov    QWORD PTR [rsp+0x8],rsi
  4250ed:	call   425050 <strcmp@plt+0x21898>
  4250f2:	test   rax,rax
  4250f5:	je     4250c6 <strcmp@plt+0x2190e>
  4250f7:	mov    rsi,QWORD PTR [rsp+0x8]
  4250fc:	mov    rdi,rax
  4250ff:	call   4259b0 <strcmp@plt+0x221f8>
  425104:	mov    eax,0x1
  425109:	add    rsp,0x18
  42510d:	ret    
  42510e:	xchg   ax,ax
  425110:	mov    eax,DWORD PTR [rdi+0x18]
  425113:	cmp    eax,0x2
  425116:	je     425160 <strcmp@plt+0x219a8>
  425118:	cmp    eax,0x3
  42511b:	je     425158 <strcmp@plt+0x219a0>
  42511d:	cmp    eax,0x1
  425120:	je     425128 <strcmp@plt+0x21970>
  425122:	xor    eax,eax
  425124:	ret    
  425125:	nop    DWORD PTR [rax]
  425128:	mov    rax,0x468e3c
  42512f:	cmp    DWORD PTR [rax],0x2
  425132:	jle    425122 <strcmp@plt+0x2196a>
  425134:	lea    rsi,[rip+0x289bd]        # 44daf8 <strcmp@plt+0x4a340>
  42513b:	sub    rsp,0x8
  42513f:	xor    eax,eax
  425141:	mov    edi,0x7
  425146:	call   4306a0 <strcmp@plt+0x2cee8>
  42514b:	xor    eax,eax
  42514d:	add    rsp,0x8
  425151:	ret    
  425152:	nop    WORD PTR [rax+rax*1+0x0]
  425158:	jmp    429bd0 <strcmp@plt+0x26418>
  42515d:	nop    DWORD PTR [rax]
  425160:	mov    rax,rdi
  425163:	ret    
  425164:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42516f:	nop
  425170:	sub    rsp,0x8
  425174:	mov    eax,DWORD PTR [rdi+0x18]
  425177:	cmp    eax,0x2
  42517a:	je     4251af <strcmp@plt+0x219f7>
  42517c:	cmp    eax,0x3
  42517f:	je     4251a0 <strcmp@plt+0x219e8>
  425181:	cmp    eax,0x1
  425184:	je     425190 <strcmp@plt+0x219d8>
  425186:	xor    eax,eax
  425188:	add    rsp,0x8
  42518c:	ret    
  42518d:	nop    DWORD PTR [rax]
  425190:	call   426300 <strcmp@plt+0x22b48>
  425195:	add    rsp,0x8
  425199:	movzx  eax,al
  42519c:	ret    
  42519d:	nop    DWORD PTR [rax]
  4251a0:	call   425110 <strcmp@plt+0x21958>
  4251a5:	mov    rdi,rax
  4251a8:	xor    eax,eax
  4251aa:	test   rdi,rdi
  4251ad:	je     425188 <strcmp@plt+0x219d0>
  4251af:	call   425e40 <strcmp@plt+0x22688>
  4251b4:	add    rsp,0x8
  4251b8:	movzx  eax,al
  4251bb:	ret    
  4251bc:	nop    DWORD PTR [rax+0x0]
  4251c0:	push   rbx
  4251c1:	mov    rbx,rdi
  4251c4:	mov    edx,DWORD PTR [rbx+0x18]
  4251c7:	cmp    edx,0x1
  4251ca:	je     4251f0 <strcmp@plt+0x21a38>
  4251cc:	jb     425220 <strcmp@plt+0x21a68>
  4251ce:	cmp    edx,0x2
  4251d1:	je     425228 <strcmp@plt+0x21a70>
  4251d3:	cmp    edx,0x3
  4251d6:	jne    425200 <strcmp@plt+0x21a48>
  4251d8:	mov    rdi,rbx
  4251db:	call   425110 <strcmp@plt+0x21958>
  4251e0:	test   rax,rax
  4251e3:	je     425238 <strcmp@plt+0x21a80>
  4251e5:	mov    rbx,rax
  4251e8:	mov    edx,DWORD PTR [rbx+0x18]
  4251eb:	cmp    edx,0x1
  4251ee:	jne    4251cc <strcmp@plt+0x21a14>
  4251f0:	mov    rdi,rbx
  4251f3:	call   4257c0 <strcmp@plt+0x22008>
  4251f8:	pop    rbx
  4251f9:	ret    
  4251fa:	nop    WORD PTR [rax+rax*1+0x0]
  425200:	mov    rax,0x468e3c
  425207:	mov    eax,DWORD PTR [rax]
  425209:	test   eax,eax
  42520b:	jle    425220 <strcmp@plt+0x21a68>
  42520d:	lea    rsi,[rip+0x2895c]        # 44db70 <strcmp@plt+0x4a3b8>
  425214:	mov    edi,0x5
  425219:	xor    eax,eax
  42521b:	call   4306a0 <strcmp@plt+0x2cee8>
  425220:	xor    eax,eax
  425222:	pop    rbx
  425223:	ret    
  425224:	nop    DWORD PTR [rax+0x0]
  425228:	mov    rdi,rbx
  42522b:	call   425e60 <strcmp@plt+0x226a8>
  425230:	pop    rbx
  425231:	movzx  eax,al
  425234:	ret    
  425235:	nop    DWORD PTR [rax]
  425238:	mov    rdi,rbx
  42523b:	call   425050 <strcmp@plt+0x21898>
  425240:	test   rax,rax
  425243:	jne    4251e5 <strcmp@plt+0x21a2d>
  425245:	mov    rax,0x468e3c
  42524c:	mov    edx,DWORD PTR [rax]
  42524e:	test   edx,edx
  425250:	jle    425220 <strcmp@plt+0x21a68>
  425252:	mov    edx,DWORD PTR [rbx]
  425254:	lea    rsi,[rip+0x288dd]        # 44db38 <strcmp@plt+0x4a380>
  42525b:	xor    eax,eax
  42525d:	mov    edi,0x5
  425262:	call   4306a0 <strcmp@plt+0x2cee8>
  425267:	xor    eax,eax
  425269:	pop    rbx
  42526a:	ret    
  42526b:	nop    DWORD PTR [rax+rax*1+0x0]
  425270:	push   rbx
  425271:	sub    rsp,0x10
  425275:	cmp    DWORD PTR [rsi+0x18],0x2
  425279:	je     4252a8 <strcmp@plt+0x21af0>
  42527b:	mov    rax,0x468e3c
  425282:	cmp    DWORD PTR [rax],0x1
  425285:	jg     425290 <strcmp@plt+0x21ad8>
  425287:	add    rsp,0x10
  42528b:	xor    eax,eax
  42528d:	pop    rbx
  42528e:	ret    
  42528f:	nop
  425290:	lea    rsi,[rip+0x28909]        # 44dba0 <strcmp@plt+0x4a3e8>
  425297:	mov    edi,0x6
  42529c:	xor    eax,eax
  42529e:	call   4306a0 <strcmp@plt+0x2cee8>
  4252a3:	jmp    425287 <strcmp@plt+0x21acf>
  4252a5:	nop    DWORD PTR [rax]
  4252a8:	mov    QWORD PTR [rsp+0x8],rsi
  4252ad:	mov    rbx,rdi
  4252b0:	call   425110 <strcmp@plt+0x21958>
  4252b5:	test   rax,rax
  4252b8:	mov    rsi,QWORD PTR [rsp+0x8]
  4252bd:	je     4252d8 <strcmp@plt+0x21b20>
  4252bf:	mov    rdi,rax
  4252c2:	call   425ee0 <strcmp@plt+0x22728>
  4252c7:	add    rsp,0x10
  4252cb:	mov    eax,0x1
  4252d0:	pop    rbx
  4252d1:	ret    
  4252d2:	nop    WORD PTR [rax+rax*1+0x0]
  4252d8:	mov    rdi,rbx
  4252db:	call   425050 <strcmp@plt+0x21898>
  4252e0:	test   rax,rax
  4252e3:	je     425287 <strcmp@plt+0x21acf>
  4252e5:	mov    DWORD PTR [rax+0x18],0x2
  4252ec:	mov    rsi,QWORD PTR [rsp+0x8]
  4252f1:	jmp    4252bf <strcmp@plt+0x21b07>
  4252f3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4252fe:	xchg   ax,ax
  425300:	mov    edx,DWORD PTR [rdi+0x18]
  425303:	cmp    edx,0x2
  425306:	je     425370 <strcmp@plt+0x21bb8>
  425308:	cmp    edx,0x3
  42530b:	je     425330 <strcmp@plt+0x21b78>
  42530d:	cmp    edx,0x1
  425310:	je     425320 <strcmp@plt+0x21b68>
  425312:	mov    rax,0x468e3c
  425319:	cmp    DWORD PTR [rax],0x1
  42531c:	jg     425380 <strcmp@plt+0x21bc8>
  42531e:	ret    
  42531f:	nop
  425320:	mov    DWORD PTR [rdi+0x18],0x2
  425327:	movzx  esi,sil
  42532b:	jmp    425ea0 <strcmp@plt+0x226e8>
  425330:	push   r12
  425332:	push   rbp
  425333:	mov    rbp,rdi
  425336:	push   rbx
  425337:	mov    ebx,esi
  425339:	call   425110 <strcmp@plt+0x21958>
  42533e:	test   rax,rax
  425341:	mov    r12,rax
  425344:	je     4253b0 <strcmp@plt+0x21bf8>
  425346:	mov    edx,DWORD PTR [r12+0x18]
  42534b:	movzx  ebx,bl
  42534e:	cmp    edx,0x2
  425351:	je     4253a1 <strcmp@plt+0x21be9>
  425353:	cmp    edx,0x3
  425356:	je     4253c8 <strcmp@plt+0x21c10>
  425358:	cmp    edx,0x1
  42535b:	je     425398 <strcmp@plt+0x21be0>
  42535d:	mov    rax,0x468e3c
  425364:	cmp    DWORD PTR [rax],0x1
  425367:	jg     4253e8 <strcmp@plt+0x21c30>
  425369:	pop    rbx
  42536a:	pop    rbp
  42536b:	pop    r12
  42536d:	ret    
  42536e:	xchg   ax,ax
  425370:	movzx  esi,sil
  425374:	jmp    425ea0 <strcmp@plt+0x226e8>
  425379:	nop    DWORD PTR [rax+0x0]
  425380:	lea    rsi,[rip+0x28891]        # 44dc18 <strcmp@plt+0x4a460>
  425387:	mov    edi,0x6
  42538c:	xor    eax,eax
  42538e:	jmp    4306a0 <strcmp@plt+0x2cee8>
  425393:	nop    DWORD PTR [rax+rax*1+0x0]
  425398:	mov    DWORD PTR [r12+0x18],0x2
  4253a1:	mov    esi,ebx
  4253a3:	mov    rdi,r12
  4253a6:	pop    rbx
  4253a7:	pop    rbp
  4253a8:	pop    r12
  4253aa:	jmp    425ea0 <strcmp@plt+0x226e8>
  4253af:	nop
  4253b0:	mov    rdi,rbp
  4253b3:	call   425050 <strcmp@plt+0x21898>
  4253b8:	test   rax,rax
  4253bb:	mov    r12,rax
  4253be:	jne    425346 <strcmp@plt+0x21b8e>
  4253c0:	jmp    425410 <strcmp@plt+0x21c58>
  4253c2:	nop    WORD PTR [rax+rax*1+0x0]
  4253c8:	mov    rdi,r12
  4253cb:	call   425110 <strcmp@plt+0x21958>
  4253d0:	test   rax,rax
  4253d3:	je     425400 <strcmp@plt+0x21c48>
  4253d5:	mov    esi,ebx
  4253d7:	mov    rdi,rax
  4253da:	pop    rbx
  4253db:	pop    rbp
  4253dc:	pop    r12
  4253de:	jmp    425300 <strcmp@plt+0x21b48>
  4253e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4253e8:	pop    rbx
  4253e9:	pop    rbp
  4253ea:	pop    r12
  4253ec:	lea    rsi,[rip+0x28825]        # 44dc18 <strcmp@plt+0x4a460>
  4253f3:	mov    edi,0x6
  4253f8:	xor    eax,eax
  4253fa:	jmp    4306a0 <strcmp@plt+0x2cee8>
  4253ff:	nop
  425400:	mov    rdi,r12
  425403:	call   425050 <strcmp@plt+0x21898>
  425408:	test   rax,rax
  42540b:	jne    4253d5 <strcmp@plt+0x21c1d>
  42540d:	nop    DWORD PTR [rax]
  425410:	mov    rax,0x468e3c
  425417:	cmp    DWORD PTR [rax],0x1
  42541a:	jle    425369 <strcmp@plt+0x21bb1>
  425420:	pop    rbx
  425421:	pop    rbp
  425422:	pop    r12
  425424:	lea    rsi,[rip+0x287b5]        # 44dbe0 <strcmp@plt+0x4a428>
  42542b:	mov    edi,0x6
  425430:	xor    eax,eax
  425432:	jmp    4306a0 <strcmp@plt+0x2cee8>
  425437:	nop    WORD PTR [rax+rax*1+0x0]
  425440:	test   rdi,rdi
  425443:	je     425670 <strcmp@plt+0x21eb8>
  425449:	push   rbp
  42544a:	push   rbx
  42544b:	mov    rbx,rsi
  42544e:	sub    rsp,0x8
  425452:	test   rsi,rsi
  425455:	je     425555 <strcmp@plt+0x21d9d>
  42545b:	mov    edx,DWORD PTR [rdi+0x18]
  42545e:	cmp    edx,DWORD PTR [rsi+0x18]
  425461:	mov    rbp,rdi
  425464:	jg     425478 <strcmp@plt+0x21cc0>
  425466:	jge    425488 <strcmp@plt+0x21cd0>
  425468:	mov    eax,0x2
  42546d:	add    rsp,0x8
  425471:	pop    rbx
  425472:	pop    rbp
  425473:	ret    
  425474:	nop    DWORD PTR [rax+0x0]
  425478:	add    rsp,0x8
  42547c:	mov    eax,0x1
  425481:	pop    rbx
  425482:	pop    rbp
  425483:	ret    
  425484:	nop    DWORD PTR [rax+0x0]
  425488:	cmp    edx,0x2
  42548b:	ja     425530 <strcmp@plt+0x21d78>
  425491:	cmp    edx,0x1
  425494:	jae    4254cf <strcmp@plt+0x21d17>
  425496:	xor    eax,eax
  425498:	jmp    42546d <strcmp@plt+0x21cb5>
  42549a:	nop    WORD PTR [rax+rax*1+0x0]
  4254a0:	jb     4255b0 <strcmp@plt+0x21df8>
  4254a6:	cmp    edx,0x2
  4254a9:	je     425600 <strcmp@plt+0x21e48>
  4254af:	cmp    edx,0x3
  4254b2:	jne    425610 <strcmp@plt+0x21e58>
  4254b8:	mov    rdi,rbp
  4254bb:	call   425110 <strcmp@plt+0x21958>
  4254c0:	test   rax,rax
  4254c3:	je     425579 <strcmp@plt+0x21dc1>
  4254c9:	mov    edx,DWORD PTR [rax+0x18]
  4254cc:	mov    rbp,rax
  4254cf:	cmp    edx,0x1
  4254d2:	jne    4254a0 <strcmp@plt+0x21ce8>
  4254d4:	mov    rdi,rbp
  4254d7:	call   4257c0 <strcmp@plt+0x22008>
  4254dc:	movzx  ebp,ax
  4254df:	mov    edx,DWORD PTR [rbx+0x18]
  4254e2:	cmp    edx,0x1
  4254e5:	je     425520 <strcmp@plt+0x21d68>
  4254e7:	jb     4255e0 <strcmp@plt+0x21e28>
  4254ed:	cmp    edx,0x2
  4254f0:	je     4255e8 <strcmp@plt+0x21e30>
  4254f6:	cmp    edx,0x3
  4254f9:	jne    4255c0 <strcmp@plt+0x21e08>
  4254ff:	mov    rdi,rbx
  425502:	call   425110 <strcmp@plt+0x21958>
  425507:	test   rax,rax
  42550a:	je     425637 <strcmp@plt+0x21e7f>
  425510:	mov    rbx,rax
  425513:	mov    edx,DWORD PTR [rbx+0x18]
  425516:	cmp    edx,0x1
  425519:	jne    4254e7 <strcmp@plt+0x21d2f>
  42551b:	nop    DWORD PTR [rax+rax*1+0x0]
  425520:	mov    rdi,rbx
  425523:	call   4257c0 <strcmp@plt+0x22008>
  425528:	movzx  eax,ax
  42552b:	jmp    425564 <strcmp@plt+0x21dac>
  42552d:	nop    DWORD PTR [rax]
  425530:	cmp    edx,0x3
  425533:	je     425560 <strcmp@plt+0x21da8>
  425535:	mov    rax,0x468e3c
  42553c:	mov    eax,DWORD PTR [rax]
  42553e:	test   eax,eax
  425540:	jle    425555 <strcmp@plt+0x21d9d>
  425542:	lea    rsi,[rip+0x2870d]        # 44dc56 <strcmp@plt+0x4a49e>
  425549:	mov    edi,0x5
  42554e:	xor    eax,eax
  425550:	call   4306a0 <strcmp@plt+0x2cee8>
  425555:	mov    eax,0xfffffffe
  42555a:	jmp    42546d <strcmp@plt+0x21cb5>
  42555f:	nop
  425560:	mov    ebp,DWORD PTR [rdi]
  425562:	mov    eax,DWORD PTR [rsi]
  425564:	cmp    ebp,eax
  425566:	jg     425478 <strcmp@plt+0x21cc0>
  42556c:	jl     425468 <strcmp@plt+0x21cb0>
  425572:	xor    eax,eax
  425574:	jmp    42546d <strcmp@plt+0x21cb5>
  425579:	mov    rdi,rbp
  42557c:	call   425050 <strcmp@plt+0x21898>
  425581:	test   rax,rax
  425584:	jne    4254c9 <strcmp@plt+0x21d11>
  42558a:	mov    rax,0x468e3c
  425591:	cmp    DWORD PTR [rax],0x0
  425594:	jle    4255b0 <strcmp@plt+0x21df8>
  425596:	mov    edx,DWORD PTR [rbp+0x0]
  425599:	lea    rsi,[rip+0x28598]        # 44db38 <strcmp@plt+0x4a380>
  4255a0:	mov    edi,0x5
  4255a5:	xor    eax,eax
  4255a7:	call   4306a0 <strcmp@plt+0x2cee8>
  4255ac:	nop    DWORD PTR [rax+0x0]
  4255b0:	xor    ebp,ebp
  4255b2:	jmp    4254df <strcmp@plt+0x21d27>
  4255b7:	nop    WORD PTR [rax+rax*1+0x0]
  4255c0:	mov    rax,0x468e3c
  4255c7:	mov    ecx,DWORD PTR [rax]
  4255c9:	test   ecx,ecx
  4255cb:	jle    4255e0 <strcmp@plt+0x21e28>
  4255cd:	lea    rsi,[rip+0x2859c]        # 44db70 <strcmp@plt+0x4a3b8>
  4255d4:	mov    edi,0x5
  4255d9:	xor    eax,eax
  4255db:	call   4306a0 <strcmp@plt+0x2cee8>
  4255e0:	xor    eax,eax
  4255e2:	jmp    425564 <strcmp@plt+0x21dac>
  4255e4:	nop    DWORD PTR [rax+0x0]
  4255e8:	mov    rdi,rbx
  4255eb:	call   425e60 <strcmp@plt+0x226a8>
  4255f0:	movzx  eax,al
  4255f3:	jmp    425564 <strcmp@plt+0x21dac>
  4255f8:	nop    DWORD PTR [rax+rax*1+0x0]
  425600:	mov    rdi,rbp
  425603:	call   425e60 <strcmp@plt+0x226a8>
  425608:	movzx  ebp,al
  42560b:	jmp    4254df <strcmp@plt+0x21d27>
  425610:	mov    rax,0x468e3c
  425617:	mov    esi,DWORD PTR [rax]
  425619:	test   esi,esi
  42561b:	jle    4255b0 <strcmp@plt+0x21df8>
  42561d:	lea    rsi,[rip+0x2854c]        # 44db70 <strcmp@plt+0x4a3b8>
  425624:	mov    edi,0x5
  425629:	xor    eax,eax
  42562b:	xor    ebp,ebp
  42562d:	call   4306a0 <strcmp@plt+0x2cee8>
  425632:	jmp    4254df <strcmp@plt+0x21d27>
  425637:	mov    rdi,rbx
  42563a:	call   425050 <strcmp@plt+0x21898>
  42563f:	test   rax,rax
  425642:	jne    425510 <strcmp@plt+0x21d58>
  425648:	mov    rax,0x468e3c
  42564f:	cmp    DWORD PTR [rax],0x0
  425652:	jle    4255e0 <strcmp@plt+0x21e28>
  425654:	mov    edx,DWORD PTR [rbx]
  425656:	lea    rsi,[rip+0x284db]        # 44db38 <strcmp@plt+0x4a380>
  42565d:	xor    eax,eax
  42565f:	mov    edi,0x5
  425664:	call   4306a0 <strcmp@plt+0x2cee8>
  425669:	xor    eax,eax
  42566b:	jmp    425564 <strcmp@plt+0x21dac>
  425670:	mov    eax,0xfffffffe
  425675:	ret    
  425676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425680:	cmp    DWORD PTR [rdi+0x18],0x3
  425684:	jne    425690 <strcmp@plt+0x21ed8>
  425686:	jmp    428160 <strcmp@plt+0x249a8>
  42568b:	nop    DWORD PTR [rax+rax*1+0x0]
  425690:	repz ret 
  425692:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42569d:	nop    DWORD PTR [rax]
  4256a0:	push   rbx
  4256a1:	mov    rbx,rsi
  4256a4:	call   426450 <strcmp@plt+0x22c98>
  4256a9:	cmp    eax,0x1
  4256ac:	je     4256c0 <strcmp@plt+0x21f08>
  4256ae:	mov    DWORD PTR [rbx+0x18],0x0
  4256b5:	xor    eax,eax
  4256b7:	pop    rbx
  4256b8:	ret    
  4256b9:	nop    DWORD PTR [rax+0x0]
  4256c0:	mov    DWORD PTR [rbx+0x18],0x1
  4256c7:	pop    rbx
  4256c8:	ret    
  4256c9:	nop    DWORD PTR [rax+0x0]
  4256d0:	push   rbx
  4256d1:	mov    rbx,rsi
  4256d4:	call   4264c0 <strcmp@plt+0x22d08>
  4256d9:	cmp    eax,0x1
  4256dc:	je     4256f0 <strcmp@plt+0x21f38>
  4256de:	mov    DWORD PTR [rbx+0x18],0x0
  4256e5:	xor    eax,eax
  4256e7:	pop    rbx
  4256e8:	ret    
  4256e9:	nop    DWORD PTR [rax+0x0]
  4256f0:	mov    DWORD PTR [rbx+0x18],0x2
  4256f7:	pop    rbx
  4256f8:	ret    
  4256f9:	nop    DWORD PTR [rax+0x0]
  425700:	mov    edx,DWORD PTR [rdi+0x18]
  425703:	cmp    edx,0x1
  425706:	je     425720 <strcmp@plt+0x21f68>
  425708:	mov    eax,0x0
  42570d:	jb     425722 <strcmp@plt+0x21f6a>
  42570f:	cmp    edx,0x2
  425712:	je     425720 <strcmp@plt+0x21f68>
  425714:	cmp    edx,0x3
  425717:	je     425720 <strcmp@plt+0x21f68>
  425719:	mov    eax,0xffffffff
  42571e:	ret    
  42571f:	nop
  425720:	mov    eax,DWORD PTR [rdi]
  425722:	repz ret 
  425724:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42572e:	xchg   ax,ax
  425730:	add    rdi,0x4
  425734:	jmp    436e10 <strcmp@plt+0x33658>
  425739:	nop    DWORD PTR [rax+0x0]
  425740:	push   rbx
  425741:	movzx  eax,BYTE PTR [rdi]
  425744:	mov    rbx,rdi
  425747:	mov    BYTE PTR [rdi+0x7],0x0
  42574b:	mov    BYTE PTR [rdi+0x1],0x0
  42574f:	mov    BYTE PTR [rdi+0x2],0x0
  425753:	mov    BYTE PTR [rdi+0x3],0x0
  425757:	mov    edx,eax
  425759:	and    edx,0xffffff8f
  42575c:	test   esi,esi
  42575e:	mov    BYTE PTR [rdi],dl
  425760:	jne    425780 <strcmp@plt+0x21fc8>
  425762:	and    eax,0xffffff87
  425765:	mov    BYTE PTR [rdi+0x4],0x0
  425769:	mov    BYTE PTR [rdi+0x5],0x0
  42576d:	mov    BYTE PTR [rdi],al
  42576f:	mov    BYTE PTR [rdi+0x6],0x0
  425773:	and    BYTE PTR [rbx],0x78
  425776:	pop    rbx
  425777:	ret    
  425778:	nop    DWORD PTR [rax+rax*1+0x0]
  425780:	or     edx,0x8
  425783:	lea    rdi,[rdi+0x4]
  425787:	mov    BYTE PTR [rdi-0x4],dl
  42578a:	call   436dc0 <strcmp@plt+0x33608>
  42578f:	and    BYTE PTR [rbx],0x78
  425792:	pop    rbx
  425793:	ret    
  425794:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42579e:	xchg   ax,ax
  4257a0:	mov    edi,0x14
  4257a5:	jmp    434790 <strcmp@plt+0x30fd8>
  4257aa:	nop    WORD PTR [rax+rax*1+0x0]
  4257b0:	jmp    4037b0 <free@plt>
  4257b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4257c0:	mov    eax,DWORD PTR [rdi]
  4257c2:	ret    
  4257c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4257ce:	xchg   ax,ax
  4257d0:	lea    rax,[rdi+0x4]
  4257d4:	ret    
  4257d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4257e0:	lea    rax,[rdi+0x4]
  4257e4:	ret    
  4257e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4257f0:	lea    rax,[rdi+0x4]
  4257f4:	ret    
  4257f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425800:	mov    edx,DWORD PTR [rdi]
  425802:	mov    eax,0x4
  425807:	cmp    dx,0x2
  42580b:	je     425818 <strcmp@plt+0x22060>
  42580d:	cmp    dx,0xa
  425811:	mov    eax,0x10
  425816:	jne    425820 <strcmp@plt+0x22068>
  425818:	repz ret 
  42581a:	nop    WORD PTR [rax+rax*1+0x0]
  425820:	lea    rsi,[rip+0x28451]        # 44dc78 <strcmp@plt+0x4a4c0>
  425827:	sub    rsp,0x8
  42582b:	xor    eax,eax
  42582d:	movzx  edx,dx
  425830:	mov    edi,0x3
  425835:	call   4306a0 <strcmp@plt+0x2cee8>
  42583a:	xor    eax,eax
  42583c:	add    rsp,0x8
  425840:	ret    
  425841:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42584c:	nop    DWORD PTR [rax+0x0]
  425850:	mov    edx,DWORD PTR [rdi]
  425852:	mov    eax,0x6
  425857:	cmp    dx,0x2
  42585b:	je     425868 <strcmp@plt+0x220b0>
  42585d:	cmp    dx,0xa
  425861:	mov    eax,0x12
  425866:	jne    425870 <strcmp@plt+0x220b8>
  425868:	repz ret 
  42586a:	nop    WORD PTR [rax+rax*1+0x0]
  425870:	lea    rsi,[rip+0x28401]        # 44dc78 <strcmp@plt+0x4a4c0>
  425877:	sub    rsp,0x8
  42587b:	xor    eax,eax
  42587d:	movzx  edx,dx
  425880:	mov    edi,0x3
  425885:	call   4306a0 <strcmp@plt+0x2cee8>
  42588a:	mov    eax,0x2
  42588f:	add    rsp,0x8
  425893:	ret    
  425894:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42589f:	nop
  4258a0:	mov    edx,DWORD PTR [rdi]
  4258a2:	mov    eax,0x1
  4258a7:	cmp    dx,0x2
  4258ab:	je     4258b8 <strcmp@plt+0x22100>
  4258ad:	cmp    dx,0xa
  4258b1:	mov    eax,0x2
  4258b6:	jne    4258c0 <strcmp@plt+0x22108>
  4258b8:	repz ret 
  4258ba:	nop    WORD PTR [rax+rax*1+0x0]
  4258c0:	lea    rsi,[rip+0x283e1]        # 44dca8 <strcmp@plt+0x4a4f0>
  4258c7:	sub    rsp,0x8
  4258cb:	xor    eax,eax
  4258cd:	movzx  edx,dx
  4258d0:	mov    edi,0x3
  4258d5:	call   4306a0 <strcmp@plt+0x2cee8>
  4258da:	xor    eax,eax
  4258dc:	add    rsp,0x8
  4258e0:	ret    
  4258e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4258ec:	nop    DWORD PTR [rax+0x0]
  4258f0:	test   esi,0xfffffffd
  4258f6:	je     4258fd <strcmp@plt+0x22145>
  4258f8:	cmp    esi,0xa
  4258fb:	jne    425908 <strcmp@plt+0x22150>
  4258fd:	mov    DWORD PTR [rdi],esi
  4258ff:	mov    eax,0x1
  425904:	ret    
  425905:	nop    DWORD PTR [rax]
  425908:	mov    edx,esi
  42590a:	lea    rsi,[rip+0x283c7]        # 44dcd8 <strcmp@plt+0x4a520>
  425911:	sub    rsp,0x8
  425915:	xor    eax,eax
  425917:	mov    edi,0x3
  42591c:	call   4306a0 <strcmp@plt+0x2cee8>
  425921:	xor    eax,eax
  425923:	add    rsp,0x8
  425927:	ret    
  425928:	nop    DWORD PTR [rax+rax*1+0x0]
  425930:	mov    DWORD PTR [rdi],0x2
  425936:	mov    eax,DWORD PTR [rsi]
  425938:	mov    DWORD PTR [rdi+0x4],eax
  42593b:	ret    
  42593c:	nop    DWORD PTR [rax+0x0]
  425940:	mov    DWORD PTR [rdi],0xa
  425946:	mov    rax,QWORD PTR [rsi]
  425949:	mov    rdx,QWORD PTR [rsi+0x8]
  42594d:	mov    QWORD PTR [rdi+0x4],rax
  425951:	mov    QWORD PTR [rdi+0xc],rdx
  425955:	ret    
  425956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425960:	cmp    dl,0x2
  425963:	je     4259a0 <strcmp@plt+0x221e8>
  425965:	cmp    dl,0xa
  425968:	jne    425980 <strcmp@plt+0x221c8>
  42596a:	mov    DWORD PTR [rdi],0xa
  425970:	mov    rax,QWORD PTR [rsi]
  425973:	mov    rdx,QWORD PTR [rsi+0x8]
  425977:	mov    QWORD PTR [rdi+0x4],rax
  42597b:	mov    QWORD PTR [rdi+0xc],rdx
  42597f:	ret    
  425980:	lea    rsi,[rip+0x28379]        # 44dd00 <strcmp@plt+0x4a548>
  425987:	movzx  edx,dl
  42598a:	mov    edi,0x3
  42598f:	xor    eax,eax
  425991:	jmp    4306a0 <strcmp@plt+0x2cee8>
  425996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4259a0:	jmp    425930 <strcmp@plt+0x22178>
  4259a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4259b0:	test   rdi,rdi
  4259b3:	je     4259ce <strcmp@plt+0x22216>
  4259b5:	test   rsi,rsi
  4259b8:	je     4259ce <strcmp@plt+0x22216>
  4259ba:	mov    rax,QWORD PTR [rsi]
  4259bd:	mov    QWORD PTR [rdi],rax
  4259c0:	mov    rax,QWORD PTR [rsi+0x8]
  4259c4:	mov    QWORD PTR [rdi+0x8],rax
  4259c8:	mov    eax,DWORD PTR [rsi+0x10]
  4259cb:	mov    DWORD PTR [rdi+0x10],eax
  4259ce:	repz ret 
  4259d0:	test   rdi,rdi
  4259d3:	je     425a30 <strcmp@plt+0x22278>
  4259d5:	test   rsi,rsi
  4259d8:	je     425a30 <strcmp@plt+0x22278>
  4259da:	push   rbp
  4259db:	push   rbx
  4259dc:	mov    rbp,rdi
  4259df:	mov    rbx,rsi
  4259e2:	mov    eax,0x4
  4259e7:	sub    rsp,0x8
  4259eb:	mov    edx,DWORD PTR [rsi]
  4259ed:	cmp    dx,0x2
  4259f1:	je     425a02 <strcmp@plt+0x2224a>
  4259f3:	cmp    dx,0xa
  4259f7:	mov    eax,0x10
  4259fc:	jne    425a80 <strcmp@plt+0x222c8>
  425a02:	cmp    eax,0x8
  425a05:	lea    rdx,[rbx+0x4]
  425a09:	mov    edi,eax
  425a0b:	jae    425a38 <strcmp@plt+0x22280>
  425a0d:	test   al,0x4
  425a0f:	jne    425ab0 <strcmp@plt+0x222f8>
  425a15:	test   edi,edi
  425a17:	je     425a2a <strcmp@plt+0x22272>
  425a19:	movzx  eax,BYTE PTR [rbx+0x4]
  425a1d:	test   dil,0x2
  425a21:	mov    BYTE PTR [rbp+0x0],al
  425a24:	jne    425ac3 <strcmp@plt+0x2230b>
  425a2a:	add    rsp,0x8
  425a2e:	pop    rbx
  425a2f:	pop    rbp
  425a30:	repz ret 
  425a32:	nop    WORD PTR [rax+rax*1+0x0]
  425a38:	mov    rcx,QWORD PTR [rbx+0x4]
  425a3c:	mov    rdi,rbp
  425a3f:	mov    QWORD PTR [rbp+0x0],rcx
  425a43:	mov    ecx,eax
  425a45:	mov    rsi,QWORD PTR [rdx+rcx*1-0x8]
  425a4a:	mov    QWORD PTR [rbp+rcx*1-0x8],rsi
  425a4f:	lea    rcx,[rbp+0x8]
  425a53:	and    rcx,0xfffffffffffffff8
  425a57:	sub    rdi,rcx
  425a5a:	sub    rdx,rdi
  425a5d:	add    edi,eax
  425a5f:	and    edi,0xfffffff8
  425a62:	cmp    edi,0x8
  425a65:	jb     425a2a <strcmp@plt+0x22272>
  425a67:	and    edi,0xfffffff8
  425a6a:	xor    eax,eax
  425a6c:	mov    esi,eax
  425a6e:	add    eax,0x8
  425a71:	mov    r8,QWORD PTR [rdx+rsi*1]
  425a75:	cmp    eax,edi
  425a77:	mov    QWORD PTR [rcx+rsi*1],r8
  425a7b:	jb     425a6c <strcmp@plt+0x222b4>
  425a7d:	jmp    425a2a <strcmp@plt+0x22272>
  425a7f:	nop
  425a80:	lea    rsi,[rip+0x281f1]        # 44dc78 <strcmp@plt+0x4a4c0>
  425a87:	xor    eax,eax
  425a89:	movzx  edx,dx
  425a8c:	mov    edi,0x3
  425a91:	call   4306a0 <strcmp@plt+0x2cee8>
  425a96:	xor    eax,eax
  425a98:	lea    rdx,[rbx+0x4]
  425a9c:	cmp    eax,0x8
  425a9f:	mov    edi,eax
  425aa1:	jae    425a38 <strcmp@plt+0x22280>
  425aa3:	jmp    425a0d <strcmp@plt+0x22255>
  425aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  425ab0:	mov    eax,DWORD PTR [rbx+0x4]
  425ab3:	mov    DWORD PTR [rbp+0x0],eax
  425ab6:	mov    eax,DWORD PTR [rdx+rdi*1-0x4]
  425aba:	mov    DWORD PTR [rbp+rdi*1-0x4],eax
  425abe:	jmp    425a2a <strcmp@plt+0x22272>
  425ac3:	movzx  eax,WORD PTR [rdx+rdi*1-0x2]
  425ac8:	mov    WORD PTR [rbp+rdi*1-0x2],ax
  425acd:	jmp    425a2a <strcmp@plt+0x22272>
  425ad2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425add:	nop    DWORD PTR [rax]
  425ae0:	push   r13
  425ae2:	push   r12
  425ae4:	mov    r13d,edx
  425ae7:	push   rbp
  425ae8:	push   rbx
  425ae9:	mov    rbp,rdi
  425aec:	mov    rbx,rsi
  425aef:	sub    rsp,0x8
  425af3:	mov    edx,DWORD PTR [rsi]
  425af5:	cmp    dx,0x2
  425af9:	je     425c38 <strcmp@plt+0x22480>
  425aff:	cmp    dx,0xa
  425b03:	je     425bc0 <strcmp@plt+0x22408>
  425b09:	lea    rsi,[rip+0x28198]        # 44dca8 <strcmp@plt+0x4a4f0>
  425b10:	movzx  edx,dx
  425b13:	xor    eax,eax
  425b15:	mov    edi,0x3
  425b1a:	call   4306a0 <strcmp@plt+0x2cee8>
  425b1f:	mov    edx,DWORD PTR [rbx]
  425b21:	xor    eax,eax
  425b23:	test   r13b,r13b
  425b26:	mov    WORD PTR [rbp+0x0],ax
  425b2a:	lea    r12,[rbp+0x2]
  425b2e:	je     425b39 <strcmp@plt+0x22381>
  425b30:	cmp    edx,0x2
  425b33:	je     425c70 <strcmp@plt+0x224b8>
  425b39:	cmp    dx,0x2
  425b3d:	mov    ecx,0x4
  425b42:	je     425b66 <strcmp@plt+0x223ae>
  425b44:	cmp    dx,0xa
  425b48:	je     425bd5 <strcmp@plt+0x2241d>
  425b4e:	lea    rsi,[rip+0x28123]        # 44dc78 <strcmp@plt+0x4a4c0>
  425b55:	movzx  edx,dx
  425b58:	mov    edi,0x3
  425b5d:	xor    eax,eax
  425b5f:	call   4306a0 <strcmp@plt+0x2cee8>
  425b64:	xor    ecx,ecx
  425b66:	cmp    ecx,0x8
  425b69:	lea    rdx,[rbx+0x4]
  425b6d:	mov    eax,ecx
  425b6f:	jae    425be5 <strcmp@plt+0x2242d>
  425b71:	and    ecx,0x4
  425b74:	jne    425c80 <strcmp@plt+0x224c8>
  425b7a:	test   eax,eax
  425b7c:	jne    425c48 <strcmp@plt+0x22490>
  425b82:	mov    edx,DWORD PTR [rbx]
  425b84:	mov    eax,0x6
  425b89:	cmp    dx,0x2
  425b8d:	je     425bb5 <strcmp@plt+0x223fd>
  425b8f:	cmp    dx,0xa
  425b93:	mov    eax,0x12
  425b98:	je     425bb5 <strcmp@plt+0x223fd>
  425b9a:	lea    rsi,[rip+0x280d7]        # 44dc78 <strcmp@plt+0x4a4c0>
  425ba1:	xor    eax,eax
  425ba3:	movzx  edx,dx
  425ba6:	mov    edi,0x3
  425bab:	call   4306a0 <strcmp@plt+0x2cee8>
  425bb0:	mov    eax,0x2
  425bb5:	add    rsp,0x8
  425bb9:	pop    rbx
  425bba:	pop    rbp
  425bbb:	pop    r12
  425bbd:	pop    r13
  425bbf:	ret    
  425bc0:	mov    eax,0x200
  425bc5:	test   r13b,r13b
  425bc8:	lea    r12,[rdi+0x2]
  425bcc:	mov    WORD PTR [rdi],ax
  425bcf:	jne    425b39 <strcmp@plt+0x22381>
  425bd5:	mov    ecx,0x10
  425bda:	lea    rdx,[rbx+0x4]
  425bde:	cmp    ecx,0x8
  425be1:	mov    eax,ecx
  425be3:	jb     425b71 <strcmp@plt+0x223b9>
  425be5:	mov    rax,QWORD PTR [rbx+0x4]
  425be9:	mov    QWORD PTR [r12],rax
  425bed:	mov    eax,ecx
  425bef:	mov    rsi,QWORD PTR [rdx+rax*1-0x8]
  425bf4:	mov    QWORD PTR [r12+rax*1-0x8],rsi
  425bf9:	lea    rsi,[r12+0x8]
  425bfe:	mov    rax,r12
  425c01:	and    rsi,0xfffffffffffffff8
  425c05:	sub    rax,rsi
  425c08:	sub    rdx,rax
  425c0b:	add    eax,ecx
  425c0d:	and    eax,0xfffffff8
  425c10:	cmp    eax,0x8
  425c13:	jb     425b82 <strcmp@plt+0x223ca>
  425c19:	and    eax,0xfffffff8
  425c1c:	xor    ecx,ecx
  425c1e:	mov    edi,ecx
  425c20:	add    ecx,0x8
  425c23:	mov    r8,QWORD PTR [rdx+rdi*1]
  425c27:	cmp    ecx,eax
  425c29:	mov    QWORD PTR [rsi+rdi*1],r8
  425c2d:	jb     425c1e <strcmp@plt+0x22466>
  425c2f:	jmp    425b82 <strcmp@plt+0x223ca>
  425c34:	nop    DWORD PTR [rax+0x0]
  425c38:	mov    eax,0x100
  425c3d:	jmp    425b23 <strcmp@plt+0x2236b>
  425c42:	nop    WORD PTR [rax+rax*1+0x0]
  425c48:	movzx  ecx,BYTE PTR [rbx+0x4]
  425c4c:	test   al,0x2
  425c4e:	mov    BYTE PTR [r12],cl
  425c52:	je     425b82 <strcmp@plt+0x223ca>
  425c58:	movzx  edx,WORD PTR [rdx+rax*1-0x2]
  425c5d:	mov    WORD PTR [r12+rax*1-0x2],dx
  425c63:	jmp    425b82 <strcmp@plt+0x223ca>
  425c68:	nop    DWORD PTR [rax+rax*1+0x0]
  425c70:	movbe  eax,DWORD PTR [rbx+0x4]
  425c75:	mov    DWORD PTR [rbp+0x2],eax
  425c78:	jmp    425b82 <strcmp@plt+0x223ca>
  425c7d:	nop    DWORD PTR [rax]
  425c80:	mov    ecx,DWORD PTR [rbx+0x4]
  425c83:	mov    DWORD PTR [r12],ecx
  425c87:	mov    edx,DWORD PTR [rdx+rax*1-0x4]
  425c8b:	mov    DWORD PTR [r12+rax*1-0x4],edx
  425c90:	jmp    425b82 <strcmp@plt+0x223ca>
  425c95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425ca0:	sub    rsp,0x8
  425ca4:	mov    edx,DWORD PTR [rdi]
  425ca6:	mov    ecx,DWORD PTR [rsi]
  425ca8:	cmp    edx,ecx
  425caa:	je     425cd8 <strcmp@plt+0x22520>
  425cac:	mov    rax,0x468e3c
  425cb3:	cmp    DWORD PTR [rax],0x2
  425cb6:	jle    425ccb <strcmp@plt+0x22513>
  425cb8:	lea    rsi,[rip+0x28069]        # 44dd28 <strcmp@plt+0x4a570>
  425cbf:	mov    edi,0x7
  425cc4:	xor    eax,eax
  425cc6:	call   4306a0 <strcmp@plt+0x2cee8>
  425ccb:	mov    eax,0xffffffff
  425cd0:	add    rsp,0x8
  425cd4:	ret    
  425cd5:	nop    DWORD PTR [rax]
  425cd8:	cmp    dx,0x2
  425cdc:	je     425d30 <strcmp@plt+0x22578>
  425cde:	cmp    dx,0xa
  425ce2:	jne    425d10 <strcmp@plt+0x22558>
  425ce4:	mov    edx,0x10
  425ce9:	add    rsi,0x4
  425ced:	add    rdi,0x4
  425cf1:	call   4031f0 <memcmp@plt>
  425cf6:	xor    edx,edx
  425cf8:	test   eax,eax
  425cfa:	mov    eax,0x2
  425cff:	setne  dl
  425d02:	cmovns eax,edx
  425d05:	jmp    425cd0 <strcmp@plt+0x22518>
  425d07:	nop    WORD PTR [rax+rax*1+0x0]
  425d10:	lea    rsi,[rip+0x27f61]        # 44dc78 <strcmp@plt+0x4a4c0>
  425d17:	xor    eax,eax
  425d19:	movzx  edx,dx
  425d1c:	mov    edi,0x3
  425d21:	call   4306a0 <strcmp@plt+0x2cee8>
  425d26:	xor    eax,eax
  425d28:	jmp    425cd0 <strcmp@plt+0x22518>
  425d2a:	nop    WORD PTR [rax+rax*1+0x0]
  425d30:	mov    edx,0x4
  425d35:	jmp    425ce9 <strcmp@plt+0x22531>
  425d37:	nop    WORD PTR [rax+rax*1+0x0]
  425d40:	push   r13
  425d42:	push   r12
  425d44:	mov    r13,rdi
  425d47:	push   rbp
  425d48:	push   rbx
  425d49:	mov    rbp,rdx
  425d4c:	mov    ebx,esi
  425d4e:	movzx  r12d,si
  425d52:	mov    eax,0x2
  425d57:	sub    rsp,0x8
  425d5b:	cmp    si,0x1
  425d5f:	je     425d6c <strcmp@plt+0x225b4>
  425d61:	cmp    si,0x2
  425d65:	mov    eax,0xa
  425d6a:	jne    425de0 <strcmp@plt+0x22628>
  425d6c:	cmp    bx,0x1
  425d70:	mov    DWORD PTR [rbp+0x0],eax
  425d73:	je     425e05 <strcmp@plt+0x2264d>
  425d79:	cmp    bx,0x2
  425d7d:	je     425e20 <strcmp@plt+0x22668>
  425d83:	mov    rbp,0x468e3c
  425d8a:	cmp    DWORD PTR [rbp+0x0],0x2
  425d8e:	jle    425da6 <strcmp@plt+0x225ee>
  425d90:	lea    rsi,[rip+0x27ff9]        # 44dd90 <strcmp@plt+0x4a5d8>
  425d97:	mov    edx,r12d
  425d9a:	mov    edi,0x7
  425d9f:	xor    eax,eax
  425da1:	call   4306a0 <strcmp@plt+0x2cee8>
  425da6:	cmp    bx,0x1
  425daa:	je     425e0c <strcmp@plt+0x22654>
  425dac:	cmp    bx,0x2
  425db0:	je     425e30 <strcmp@plt+0x22678>
  425db2:	cmp    DWORD PTR [rbp+0x0],0x2
  425db6:	jle    425dce <strcmp@plt+0x22616>
  425db8:	lea    rsi,[rip+0x27fd1]        # 44dd90 <strcmp@plt+0x4a5d8>
  425dbf:	mov    edx,r12d
  425dc2:	mov    edi,0x7
  425dc7:	xor    eax,eax
  425dc9:	call   4306a0 <strcmp@plt+0x2cee8>
  425dce:	add    rsp,0x8
  425dd2:	mov    eax,0x2
  425dd7:	pop    rbx
  425dd8:	pop    rbp
  425dd9:	pop    r12
  425ddb:	pop    r13
  425ddd:	ret    
  425dde:	xchg   ax,ax
  425de0:	lea    rsi,[rip+0x27f79]        # 44dd60 <strcmp@plt+0x4a5a8>
  425de7:	xor    eax,eax
  425de9:	mov    edx,r12d
  425dec:	mov    edi,0x3
  425df1:	call   4306a0 <strcmp@plt+0x2cee8>
  425df6:	xor    eax,eax
  425df8:	cmp    bx,0x1
  425dfc:	mov    DWORD PTR [rbp+0x0],eax
  425dff:	jne    425d79 <strcmp@plt+0x225c1>
  425e05:	mov    eax,DWORD PTR [r13+0x2]
  425e09:	mov    DWORD PTR [rbp+0x4],eax
  425e0c:	add    rsp,0x8
  425e10:	mov    eax,0x6
  425e15:	pop    rbx
  425e16:	pop    rbp
  425e17:	pop    r12
  425e19:	pop    r13
  425e1b:	ret    
  425e1c:	nop    DWORD PTR [rax+0x0]
  425e20:	mov    rax,QWORD PTR [r13+0x2]
  425e24:	mov    rdx,QWORD PTR [r13+0xa]
  425e28:	mov    QWORD PTR [rbp+0x4],rax
  425e2c:	mov    QWORD PTR [rbp+0xc],rdx
  425e30:	add    rsp,0x8
  425e34:	mov    eax,0x12
  425e39:	pop    rbx
  425e3a:	pop    rbp
  425e3b:	pop    r12
  425e3d:	pop    r13
  425e3f:	ret    
  425e40:	movzx  eax,BYTE PTR [rdi+0x14]
  425e44:	ret    
  425e45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425e50:	mov    rax,rdi
  425e53:	ret    
  425e54:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425e5f:	nop
  425e60:	mov    eax,DWORD PTR [rdi]
  425e62:	ret    
  425e63:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425e6e:	xchg   ax,ax
  425e70:	test   rdi,rdi
  425e73:	je     425e8e <strcmp@plt+0x226d6>
  425e75:	test   rsi,rsi
  425e78:	je     425e8e <strcmp@plt+0x226d6>
  425e7a:	mov    rax,QWORD PTR [rsi]
  425e7d:	mov    QWORD PTR [rdi],rax
  425e80:	mov    rax,QWORD PTR [rsi+0x8]
  425e84:	mov    QWORD PTR [rdi+0x8],rax
  425e88:	mov    eax,DWORD PTR [rsi+0x10]
  425e8b:	mov    DWORD PTR [rdi+0x10],eax
  425e8e:	mov    BYTE PTR [rdi+0x14],dl
  425e91:	ret    
  425e92:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425e9d:	nop    DWORD PTR [rax]
  425ea0:	mov    BYTE PTR [rdi+0x14],sil
  425ea4:	ret    
  425ea5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425eb0:	test   esi,0xfffffffd
  425eb6:	je     425ebd <strcmp@plt+0x22705>
  425eb8:	cmp    esi,0xa
  425ebb:	jne    425ec0 <strcmp@plt+0x22708>
  425ebd:	mov    DWORD PTR [rdi],esi
  425ebf:	ret    
  425ec0:	mov    edx,esi
  425ec2:	lea    rsi,[rip+0x27e0f]        # 44dcd8 <strcmp@plt+0x4a520>
  425ec9:	mov    edi,0x3
  425ece:	xor    eax,eax
  425ed0:	jmp    4306a0 <strcmp@plt+0x2cee8>
  425ed5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425ee0:	movzx  eax,BYTE PTR [rsi+0x14]
  425ee4:	mov    BYTE PTR [rdi+0x14],al
  425ee7:	mov    rax,QWORD PTR [rsi]
  425eea:	mov    QWORD PTR [rdi],rax
  425eed:	mov    rax,QWORD PTR [rsi+0x8]
  425ef1:	mov    QWORD PTR [rdi+0x8],rax
  425ef5:	mov    eax,DWORD PTR [rsi+0x10]
  425ef8:	mov    DWORD PTR [rdi+0x10],eax
  425efb:	ret    
  425efc:	nop    DWORD PTR [rax+0x0]
  425f00:	mov    eax,DWORD PTR [rip+0x48d32]        # 46ec38 <strcmp@plt+0x6b480>
  425f06:	mov    edx,0xcccccccd
  425f0b:	push   rbx
  425f0c:	lea    ecx,[rax+0x1]
  425f0f:	mov    eax,ecx
  425f11:	mul    edx
  425f13:	shr    edx,0x3
  425f16:	lea    eax,[rdx+rdx*4]
  425f19:	add    eax,eax
  425f1b:	sub    ecx,eax
  425f1d:	mov    edx,ecx
  425f1f:	lea    rbx,[rdx+rdx*2]
  425f23:	mov    DWORD PTR [rip+0x48d0f],edx        # 46ec38 <strcmp@plt+0x6b480>
  425f29:	shl    rbx,0x4
  425f2d:	mov    rax,rbx
  425f30:	lea    rbx,[rip+0x48b29]        # 46ea60 <strcmp@plt+0x6b2a8>
  425f37:	sub    rax,rdx
  425f3a:	add    rbx,rax
  425f3d:	cmp    esi,0x2
  425f40:	mov    BYTE PTR [rbx],0x0
  425f43:	je     425f70 <strcmp@plt+0x227b8>
  425f45:	cmp    esi,0xa
  425f48:	jne    425f68 <strcmp@plt+0x227b0>
  425f4a:	mov    rdx,rbx
  425f4d:	mov    rsi,rdi
  425f50:	mov    ecx,0x2e
  425f55:	mov    edi,0xa
  425f5a:	call   4033f0 <inet_ntop@plt>
  425f5f:	mov    rax,rbx
  425f62:	pop    rbx
  425f63:	ret    
  425f64:	nop    DWORD PTR [rax+0x0]
  425f68:	xor    eax,eax
  425f6a:	pop    rbx
  425f6b:	ret    
  425f6c:	nop    DWORD PTR [rax+0x0]
  425f70:	mov    rdx,rbx
  425f73:	mov    rsi,rdi
  425f76:	mov    ecx,0x10
  425f7b:	mov    edi,0x2
  425f80:	call   4033f0 <inet_ntop@plt>
  425f85:	mov    rax,rbx
  425f88:	pop    rbx
  425f89:	ret    
  425f8a:	nop    WORD PTR [rax+rax*1+0x0]
  425f90:	mov    rax,rdi
  425f93:	lea    rdi,[rdi+0x4]
  425f97:	mov    esi,DWORD PTR [rax]
  425f99:	jmp    425f00 <strcmp@plt+0x22748>
  425f9e:	xchg   ax,ax
  425fa0:	push   rbp
  425fa1:	push   rbx
  425fa2:	mov    edx,0xcccccccd
  425fa7:	lea    rbx,[rip+0x48c92]        # 46ec40 <strcmp@plt+0x6b488>
  425fae:	sub    rsp,0x8
  425fb2:	mov    eax,DWORD PTR [rip+0x48e88]        # 46ee40 <strcmp@plt+0x6b688>
  425fb8:	lea    ecx,[rax+0x1]
  425fbb:	mov    eax,ecx
  425fbd:	mul    edx
  425fbf:	shr    edx,0x3
  425fc2:	lea    eax,[rdx+rdx*4]
  425fc5:	add    eax,eax
  425fc7:	sub    ecx,eax
  425fc9:	mov    edx,ecx
  425fcb:	lea    rax,[rdx+rdx*2]
  425fcf:	mov    DWORD PTR [rip+0x48e6b],edx        # 46ee40 <strcmp@plt+0x6b688>
  425fd5:	mov    rdx,rax
  425fd8:	shl    rdx,0x4
  425fdc:	add    rax,rdx
  425fdf:	mov    BYTE PTR [rbx+rax*1],0x0
  425fe3:	movzx  ebp,BYTE PTR [rdi+0x14]
  425fe7:	call   425f90 <strcmp@plt+0x227d8>
  425fec:	mov    edx,DWORD PTR [rip+0x48e4e]        # 46ee40 <strcmp@plt+0x6b688>
  425ff2:	mov    r8,rax
  425ff5:	lea    rcx,[rip+0x27ec3]        # 44debf <strcmp@plt+0x4a707>
  425ffc:	mov    esi,0x1
  426001:	mov    r9d,ebp
  426004:	lea    rdi,[rdx+rdx*2]
  426008:	mov    rdx,0xffffffffffffffff
  42600f:	mov    rax,rdi
  426012:	shl    rax,0x4
  426016:	add    rdi,rax
  426019:	xor    eax,eax
  42601b:	add    rdi,rbx
  42601e:	call   403290 <__sprintf_chk@plt>
  426023:	mov    eax,DWORD PTR [rip+0x48e17]        # 46ee40 <strcmp@plt+0x6b688>
  426029:	add    rsp,0x8
  42602d:	lea    rdx,[rax+rax*2]
  426031:	mov    rax,rdx
  426034:	shl    rax,0x4
  426038:	add    rax,rdx
  42603b:	add    rax,rbx
  42603e:	pop    rbx
  42603f:	pop    rbp
  426040:	ret    
  426041:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42604c:	nop    DWORD PTR [rax+0x0]
  426050:	cmp    di,0x2
  426054:	mov    eax,0x1
  426059:	je     426066 <strcmp@plt+0x228ae>
  42605b:	cmp    di,0xa
  42605f:	mov    eax,0x2
  426064:	jne    426070 <strcmp@plt+0x228b8>
  426066:	repz ret 
  426068:	nop    DWORD PTR [rax+rax*1+0x0]
  426070:	lea    rsi,[rip+0x27c31]        # 44dca8 <strcmp@plt+0x4a4f0>
  426077:	sub    rsp,0x8
  42607b:	movzx  edx,di
  42607e:	xor    eax,eax
  426080:	mov    edi,0x3
  426085:	call   4306a0 <strcmp@plt+0x2cee8>
  42608a:	xor    eax,eax
  42608c:	add    rsp,0x8
  426090:	ret    
  426091:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42609c:	nop    DWORD PTR [rax+0x0]
  4260a0:	cmp    di,0x1
  4260a4:	mov    eax,0x2
  4260a9:	je     4260b6 <strcmp@plt+0x228fe>
  4260ab:	cmp    di,0x2
  4260af:	mov    eax,0xa
  4260b4:	jne    4260c0 <strcmp@plt+0x22908>
  4260b6:	repz ret 
  4260b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4260c0:	lea    rsi,[rip+0x27c99]        # 44dd60 <strcmp@plt+0x4a5a8>
  4260c7:	sub    rsp,0x8
  4260cb:	movzx  edx,di
  4260ce:	xor    eax,eax
  4260d0:	mov    edi,0x3
  4260d5:	call   4306a0 <strcmp@plt+0x2cee8>
  4260da:	xor    eax,eax
  4260dc:	add    rsp,0x8
  4260e0:	ret    
  4260e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4260ec:	nop    DWORD PTR [rax+0x0]
  4260f0:	cmp    di,0x2
  4260f4:	mov    eax,0x4
  4260f9:	je     426106 <strcmp@plt+0x2294e>
  4260fb:	cmp    di,0xa
  4260ff:	mov    eax,0x10
  426104:	jne    426110 <strcmp@plt+0x22958>
  426106:	repz ret 
  426108:	nop    DWORD PTR [rax+rax*1+0x0]
  426110:	lea    rsi,[rip+0x27b61]        # 44dc78 <strcmp@plt+0x4a4c0>
  426117:	sub    rsp,0x8
  42611b:	movzx  edx,di
  42611e:	xor    eax,eax
  426120:	mov    edi,0x3
  426125:	call   4306a0 <strcmp@plt+0x2cee8>
  42612a:	xor    eax,eax
  42612c:	add    rsp,0x8
  426130:	ret    
  426131:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42613c:	nop    DWORD PTR [rax+0x0]
  426140:	cmp    edi,0x2
  426143:	mov    eax,0x14
  426148:	je     426192 <strcmp@plt+0x229da>
  42614a:	cmp    edi,0xa
  42614d:	mov    eax,0x28
  426152:	je     426192 <strcmp@plt+0x229da>
  426154:	mov    rax,0x468e3c
  42615b:	cmp    DWORD PTR [rax],0x1
  42615e:	jg     426170 <strcmp@plt+0x229b8>
  426160:	mov    eax,0xfffffffe
  426165:	ret    
  426166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426170:	lea    rsi,[rip+0x27c41]        # 44ddb8 <strcmp@plt+0x4a600>
  426177:	sub    rsp,0x8
  42617b:	mov    edx,edi
  42617d:	xor    eax,eax
  42617f:	mov    edi,0x6
  426184:	call   4306a0 <strcmp@plt+0x2cee8>
  426189:	add    rsp,0x8
  42618d:	mov    eax,0xfffffffe
  426192:	repz ret 
  426194:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42619f:	nop
  4261a0:	cmp    di,0x1
  4261a4:	mov    eax,0x4
  4261a9:	je     4261e8 <strcmp@plt+0x22a30>
  4261ab:	cmp    di,0x2
  4261af:	mov    eax,0x10
  4261b4:	je     4261e8 <strcmp@plt+0x22a30>
  4261b6:	mov    rax,0x468e3c
  4261bd:	cmp    DWORD PTR [rax],0x2
  4261c0:	jg     4261c8 <strcmp@plt+0x22a10>
  4261c2:	xor    eax,eax
  4261c4:	ret    
  4261c5:	nop    DWORD PTR [rax]
  4261c8:	lea    rsi,[rip+0x27bc1]        # 44dd90 <strcmp@plt+0x4a5d8>
  4261cf:	sub    rsp,0x8
  4261d3:	movzx  edx,di
  4261d6:	xor    eax,eax
  4261d8:	mov    edi,0x7
  4261dd:	call   4306a0 <strcmp@plt+0x2cee8>
  4261e2:	add    rsp,0x8
  4261e6:	xor    eax,eax
  4261e8:	repz ret 
  4261ea:	nop    WORD PTR [rax+rax*1+0x0]
  4261f0:	mov    eax,DWORD PTR [rdi]
  4261f2:	cmp    eax,0x2
  4261f5:	je     426228 <strcmp@plt+0x22a70>
  4261f7:	cmp    eax,0xa
  4261fa:	jne    426220 <strcmp@plt+0x22a68>
  4261fc:	mov    r8d,DWORD PTR [rdi+0x4]
  426200:	xor    eax,eax
  426202:	test   r8d,r8d
  426205:	jne    426222 <strcmp@plt+0x22a6a>
  426207:	mov    esi,DWORD PTR [rdi+0x8]
  42620a:	test   esi,esi
  42620c:	jne    426222 <strcmp@plt+0x22a6a>
  42620e:	mov    ecx,DWORD PTR [rdi+0xc]
  426211:	test   ecx,ecx
  426213:	jne    426222 <strcmp@plt+0x22a6a>
  426215:	mov    edx,DWORD PTR [rdi+0x10]
  426218:	xor    eax,eax
  42621a:	test   edx,edx
  42621c:	sete   al
  42621f:	ret    
  426220:	xor    eax,eax
  426222:	repz ret 
  426224:	nop    DWORD PTR [rax+0x0]
  426228:	mov    r9d,DWORD PTR [rdi+0x4]
  42622c:	xor    eax,eax
  42622e:	test   r9d,r9d
  426231:	sete   al
  426234:	ret    
  426235:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426240:	movbe  eax,DWORD PTR [rdi]
  426244:	add    eax,0x20000000
  426249:	cmp    eax,0xfffffff
  42624e:	setbe  al
  426251:	ret    
  426252:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42625d:	nop    DWORD PTR [rax]
  426260:	cmp    BYTE PTR [rdi],0xff
  426263:	sete   al
  426266:	ret    
  426267:	nop    WORD PTR [rax+rax*1+0x0]
  426270:	cmp    esi,0x2
  426273:	je     4262a0 <strcmp@plt+0x22ae8>
  426275:	cmp    esi,0xa
  426278:	jne    426280 <strcmp@plt+0x22ac8>
  42627a:	jmp    426260 <strcmp@plt+0x22aa8>
  42627f:	nop
  426280:	mov    edx,esi
  426282:	lea    rsi,[rip+0x27b57]        # 44dde0 <strcmp@plt+0x4a628>
  426289:	sub    rsp,0x8
  42628d:	xor    eax,eax
  42628f:	mov    edi,0x3
  426294:	call   4306a0 <strcmp@plt+0x2cee8>
  426299:	xor    eax,eax
  42629b:	add    rsp,0x8
  42629f:	ret    
  4262a0:	jmp    426240 <strcmp@plt+0x22a88>
  4262a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4262b0:	mov    rax,rdi
  4262b3:	lea    rdi,[rdi+0x4]
  4262b7:	mov    esi,DWORD PTR [rax]
  4262b9:	jmp    426270 <strcmp@plt+0x22ab8>
  4262be:	xchg   ax,ax
  4262c0:	cmp    dil,0x4
  4262c4:	mov    eax,0x2
  4262c9:	je     4262dc <strcmp@plt+0x22b24>
  4262cb:	cmp    dil,0x6
  4262cf:	mov    edx,0x0
  4262d4:	mov    eax,0xa
  4262d9:	cmovne eax,edx
  4262dc:	repz ret 
  4262de:	xchg   ax,ax
  4262e0:	cmp    edi,0x2
  4262e3:	mov    eax,0x20
  4262e8:	je     4262f5 <strcmp@plt+0x22b3d>
  4262ea:	xor    eax,eax
  4262ec:	cmp    edi,0xa
  4262ef:	sete   al
  4262f2:	shl    eax,0x7
  4262f5:	repz ret 
  4262f7:	nop    WORD PTR [rax+rax*1+0x0]
  426300:	sub    rsp,0x8
  426304:	mov    edi,DWORD PTR [rdi]
  426306:	call   4262e0 <strcmp@plt+0x22b28>
  42630b:	add    rsp,0x8
  42630f:	ret    
  426310:	push   rbx
  426311:	mov    rbx,rdi
  426314:	sub    rsp,0x10
  426318:	mov    rax,QWORD PTR fs:0x28
  426321:	mov    QWORD PTR [rsp+0x8],rax
  426326:	xor    eax,eax
  426328:	cmp    esi,0x2
  42632b:	mov    DWORD PTR [rsp],0x0
  426332:	mov    DWORD PTR [rsp+0x4],0x0
  42633a:	je     426378 <strcmp@plt+0x22bc0>
  42633c:	cmp    esi,0xa
  42633f:	je     426360 <strcmp@plt+0x22ba8>
  426341:	xor    eax,eax
  426343:	mov    rcx,QWORD PTR [rsp+0x8]
  426348:	xor    rcx,QWORD PTR fs:0x28
  426351:	jne    4263b0 <strcmp@plt+0x22bf8>
  426353:	add    rsp,0x10
  426357:	pop    rbx
  426358:	ret    
  426359:	nop    DWORD PTR [rax+0x0]
  426360:	mov    eax,DWORD PTR [rdi]
  426362:	and    eax,0xc0ff
  426367:	cmp    eax,0x80fe
  42636c:	sete   al
  42636f:	jmp    426343 <strcmp@plt+0x22b8b>
  426371:	nop    DWORD PTR [rax+0x0]
  426378:	lea    rsi,[rip+0x27b46]        # 44dec5 <strcmp@plt+0x4a70d>
  42637f:	mov    rdx,rsp
  426382:	mov    edi,0x2
  426387:	call   403780 <inet_pton@plt>
  42638c:	lea    rdx,[rsp+0x4]
  426391:	lea    rsi,[rip+0x27b39]        # 44ded1 <strcmp@plt+0x4a719>
  426398:	mov    edi,0x2
  42639d:	call   403780 <inet_pton@plt>
  4263a2:	mov    eax,DWORD PTR [rbx]
  4263a4:	and    eax,DWORD PTR [rsp+0x4]
  4263a8:	cmp    eax,DWORD PTR [rsp]
  4263ab:	sete   al
  4263ae:	jmp    426343 <strcmp@plt+0x22b8b>
  4263b0:	call   403460 <__stack_chk_fail@plt>
  4263b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4263c0:	mov    rax,rdi
  4263c3:	sub    rsp,0x8
  4263c7:	lea    rdi,[rdi+0x4]
  4263cb:	mov    esi,DWORD PTR [rax]
  4263cd:	call   426310 <strcmp@plt+0x22b58>
  4263d2:	add    rsp,0x8
  4263d6:	movzx  eax,al
  4263d9:	ret    
  4263da:	nop    WORD PTR [rax+rax*1+0x0]
  4263e0:	cmp    edi,0x4
  4263e3:	mov    eax,0x14
  4263e8:	je     426427 <strcmp@plt+0x22c6f>
  4263ea:	cmp    edi,0x6
  4263ed:	mov    eax,0x28
  4263f2:	je     426427 <strcmp@plt+0x22c6f>
  4263f4:	mov    rax,0x468e3c
  4263fb:	cmp    DWORD PTR [rax],0x1
  4263fe:	jg     426408 <strcmp@plt+0x22c50>
  426400:	xor    eax,eax
  426402:	ret    
  426403:	nop    DWORD PTR [rax+rax*1+0x0]
  426408:	lea    rsi,[rip+0x279f9]        # 44de08 <strcmp@plt+0x4a650>
  42640f:	sub    rsp,0x8
  426413:	mov    edx,edi
  426415:	xor    eax,eax
  426417:	mov    edi,0x6
  42641c:	call   4306a0 <strcmp@plt+0x2cee8>
  426421:	add    rsp,0x8
  426425:	xor    eax,eax
  426427:	repz ret 
  426429:	nop    DWORD PTR [rax+0x0]
  426430:	sub    rsp,0x8
  426434:	mov    esi,0x3a
  426439:	call   403190 <strchr@plt>
  42643e:	cmp    rax,0x1
  426442:	sbb    eax,eax
  426444:	add    rsp,0x8
  426448:	and    eax,0xfffffff8
  42644b:	add    eax,0xa
  42644e:	ret    
  42644f:	nop
  426450:	push   r12
  426452:	push   rbp
  426453:	mov    r12,rsi
  426456:	push   rbx
  426457:	mov    rbx,rdi
  42645a:	call   426430 <strcmp@plt+0x22c78>
  42645f:	lea    rdx,[r12+0x4]
  426464:	mov    rsi,rbx
  426467:	mov    edi,eax
  426469:	mov    ebp,eax
  42646b:	xor    ebx,ebx
  42646d:	call   403780 <inet_pton@plt>
  426472:	cmp    eax,0x1
  426475:	je     426480 <strcmp@plt+0x22cc8>
  426477:	mov    eax,ebx
  426479:	pop    rbx
  42647a:	pop    rbp
  42647b:	pop    r12
  42647d:	ret    
  42647e:	xchg   ax,ax
  426480:	test   ebp,0xfffffffd
  426486:	mov    ebx,eax
  426488:	je     42648f <strcmp@plt+0x22cd7>
  42648a:	cmp    ebp,0xa
  42648d:	jne    4264a0 <strcmp@plt+0x22ce8>
  42648f:	mov    DWORD PTR [r12],ebp
  426493:	mov    eax,ebx
  426495:	pop    rbx
  426496:	pop    rbp
  426497:	pop    r12
  426499:	ret    
  42649a:	nop    WORD PTR [rax+rax*1+0x0]
  4264a0:	lea    rsi,[rip+0x27831]        # 44dcd8 <strcmp@plt+0x4a520>
  4264a7:	mov    edx,ebp
  4264a9:	mov    edi,0x3
  4264ae:	xor    eax,eax
  4264b0:	call   4306a0 <strcmp@plt+0x2cee8>
  4264b5:	jmp    426477 <strcmp@plt+0x22cbf>
  4264b7:	nop    WORD PTR [rax+rax*1+0x0]
  4264c0:	push   r13
  4264c2:	push   r12
  4264c4:	mov    r12,rsi
  4264c7:	push   rbp
  4264c8:	push   rbx
  4264c9:	mov    rbp,rdi
  4264cc:	sub    rsp,0x18
  4264d0:	call   403730 <strdup@plt>
  4264d5:	lea    rsi,[rip+0x27a01]        # 44dedd <strcmp@plt+0x4a725>
  4264dc:	mov    rdi,rax
  4264df:	mov    rbx,rax
  4264e2:	call   403610 <strtok@plt>
  4264e7:	test   rax,rax
  4264ea:	je     4265a0 <strcmp@plt+0x22de8>
  4264f0:	mov    rsi,r12
  4264f3:	mov    rdi,rax
  4264f6:	call   426450 <strcmp@plt+0x22c98>
  4264fb:	test   eax,eax
  4264fd:	je     426580 <strcmp@plt+0x22dc8>
  426503:	lea    rsi,[rip+0x279d3]        # 44dedd <strcmp@plt+0x4a725>
  42650a:	xor    edi,edi
  42650c:	call   403610 <strtok@plt>
  426511:	test   rax,rax
  426514:	je     426610 <strcmp@plt+0x22e58>
  42651a:	xor    esi,esi
  42651c:	mov    edx,0xa
  426521:	mov    rdi,rax
  426524:	call   403580 <strtol@plt>
  426529:	mov    rdi,rbx
  42652c:	mov    r13,rax
  42652f:	call   4037b0 <free@plt>
  426534:	cmp    DWORD PTR [r12],0x2
  426539:	je     4265f0 <strcmp@plt+0x22e38>
  42653f:	cmp    r13d,0x80
  426546:	jbe    4265fa <strcmp@plt+0x22e42>
  42654c:	mov    rax,0x468e3c
  426553:	cmp    DWORD PTR [rax],0x1
  426556:	jle    42656e <strcmp@plt+0x22db6>
  426558:	lea    rsi,[rip+0x27939]        # 44de98 <strcmp@plt+0x4a6e0>
  42655f:	mov    rdx,rbp
  426562:	mov    edi,0x6
  426567:	xor    eax,eax
  426569:	call   4306a0 <strcmp@plt+0x2cee8>
  42656e:	add    rsp,0x18
  426572:	xor    eax,eax
  426574:	pop    rbx
  426575:	pop    rbp
  426576:	pop    r12
  426578:	pop    r13
  42657a:	ret    
  42657b:	nop    DWORD PTR [rax+rax*1+0x0]
  426580:	mov    rdi,rbx
  426583:	mov    DWORD PTR [rsp+0xc],eax
  426587:	call   4037b0 <free@plt>
  42658c:	mov    eax,DWORD PTR [rsp+0xc]
  426590:	add    rsp,0x18
  426594:	pop    rbx
  426595:	pop    rbp
  426596:	pop    r12
  426598:	pop    r13
  42659a:	ret    
  42659b:	nop    DWORD PTR [rax+rax*1+0x0]
  4265a0:	mov    rax,0x468e3c
  4265a7:	mov    edx,DWORD PTR [rax]
  4265a9:	test   edx,edx
  4265ab:	jg     4265c8 <strcmp@plt+0x22e10>
  4265ad:	mov    rdi,rbx
  4265b0:	call   4037b0 <free@plt>
  4265b5:	xor    eax,eax
  4265b7:	add    rsp,0x18
  4265bb:	pop    rbx
  4265bc:	pop    rbp
  4265bd:	pop    r12
  4265bf:	pop    r13
  4265c1:	ret    
  4265c2:	nop    WORD PTR [rax+rax*1+0x0]
  4265c8:	lea    rsi,[rip+0x27869]        # 44de38 <strcmp@plt+0x4a680>
  4265cf:	xor    eax,eax
  4265d1:	mov    rdx,rbp
  4265d4:	mov    edi,0x5
  4265d9:	call   4306a0 <strcmp@plt+0x2cee8>
  4265de:	mov    rdi,rbx
  4265e1:	call   4037b0 <free@plt>
  4265e6:	xor    eax,eax
  4265e8:	jmp    4265b7 <strcmp@plt+0x22dff>
  4265ea:	nop    WORD PTR [rax+rax*1+0x0]
  4265f0:	cmp    r13d,0x20
  4265f4:	ja     42654c <strcmp@plt+0x22d94>
  4265fa:	mov    BYTE PTR [r12+0x14],r13b
  4265ff:	add    rsp,0x18
  426603:	mov    eax,0x1
  426608:	pop    rbx
  426609:	pop    rbp
  42660a:	pop    r12
  42660c:	pop    r13
  42660e:	ret    
  42660f:	nop
  426610:	mov    rax,0x468e3c
  426617:	mov    eax,DWORD PTR [rax]
  426619:	test   eax,eax
  42661b:	jle    4265ad <strcmp@plt+0x22df5>
  42661d:	call   403050 <__errno_location@plt>
  426622:	mov    edi,DWORD PTR [rax]
  426624:	call   403170 <strerror@plt>
  426629:	lea    rsi,[rip+0x27848]        # 44de78 <strcmp@plt+0x4a6c0>
  426630:	mov    rdx,rax
  426633:	mov    edi,0x5
  426638:	xor    eax,eax
  42663a:	call   4306a0 <strcmp@plt+0x2cee8>
  42663f:	jmp    4265ad <strcmp@plt+0x22df5>
  426644:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42664e:	xchg   ax,ax
  426650:	push   rbx
  426651:	mov    rbx,rdi
  426654:	mov    rdi,QWORD PTR [rdi+0x8]
  426658:	call   424750 <strcmp@plt+0x20f98>
  42665d:	mov    rdi,rbx
  426660:	pop    rbx
  426661:	jmp    4037b0 <free@plt>
  426666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426670:	push   rbx
  426671:	mov    rbx,rdi
  426674:	mov    rdi,QWORD PTR [rdi]
  426677:	call   424750 <strcmp@plt+0x20f98>
  42667c:	mov    rdi,rbx
  42667f:	pop    rbx
  426680:	jmp    4037b0 <free@plt>
  426685:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426690:	push   rbx
  426691:	mov    rbx,rdi
  426694:	mov    rdi,QWORD PTR [rdi+0x10]
  426698:	call   424750 <strcmp@plt+0x20f98>
  42669d:	mov    rdi,rbx
  4266a0:	pop    rbx
  4266a1:	jmp    4037b0 <free@plt>
  4266a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4266b0:	push   r13
  4266b2:	push   r12
  4266b4:	push   rbp
  4266b5:	push   rbx
  4266b6:	xor    ebx,ebx
  4266b8:	sub    rsp,0x8
  4266bc:	mov    rax,QWORD PTR [rdi]
  4266bf:	mov    ecx,DWORD PTR [rax+0x18]
  4266c2:	test   ecx,ecx
  4266c4:	je     4266ca <strcmp@plt+0x22f12>
  4266c6:	mov    rbx,QWORD PTR [rax+0x8]
  4266ca:	mov    rcx,QWORD PTR [rsi]
  4266cd:	mov    edx,DWORD PTR [rcx+0x18]
  4266d0:	test   edx,edx
  4266d2:	je     426760 <strcmp@plt+0x22fa8>
  4266d8:	cmp    rbx,rax
  4266db:	mov    rdx,QWORD PTR [rcx+0x8]
  4266df:	je     42674f <strcmp@plt+0x22f97>
  4266e1:	cmp    rdx,rcx
  4266e4:	je     42674f <strcmp@plt+0x22f97>
  4266e6:	mov    rbp,rdx
  4266e9:	mov    r12,rdi
  4266ec:	mov    rcx,QWORD PTR [rbp+0x10]
  4266f0:	mov    rdi,QWORD PTR [rbx+0x10]
  4266f4:	mov    r13,rsi
  4266f7:	movzx  r8d,BYTE PTR [rdi+0x8]
  4266fc:	movzx  esi,BYTE PTR [rcx+0x8]
  426700:	cmp    r8b,sil
  426703:	je     426732 <strcmp@plt+0x22f7a>
  426705:	jmp    426770 <strcmp@plt+0x22fb8>
  426707:	nop    WORD PTR [rax+rax*1+0x0]
  426710:	cmp    rdx,QWORD PTR [r13+0x0]
  426714:	je     42674f <strcmp@plt+0x22f97>
  426716:	mov    rdi,QWORD PTR [rax+0x10]
  42671a:	mov    rcx,QWORD PTR [rdx+0x10]
  42671e:	mov    rbx,rax
  426721:	mov    rbp,rdx
  426724:	movzx  r8d,BYTE PTR [rdi+0x8]
  426729:	movzx  esi,BYTE PTR [rcx+0x8]
  42672d:	cmp    r8b,sil
  426730:	jne    426770 <strcmp@plt+0x22fb8>
  426732:	mov    rsi,QWORD PTR [rcx]
  426735:	mov    rdi,QWORD PTR [rdi]
  426738:	call   424df0 <strcmp@plt+0x21638>
  42673d:	test   eax,eax
  42673f:	jne    426751 <strcmp@plt+0x22f99>
  426741:	mov    rax,QWORD PTR [rbx+0x8]
  426745:	cmp    rax,QWORD PTR [r12]
  426749:	mov    rdx,QWORD PTR [rbp+0x8]
  42674d:	jne    426710 <strcmp@plt+0x22f58>
  42674f:	xor    eax,eax
  426751:	add    rsp,0x8
  426755:	pop    rbx
  426756:	pop    rbp
  426757:	pop    r12
  426759:	pop    r13
  42675b:	ret    
  42675c:	nop    DWORD PTR [rax+0x0]
  426760:	xor    ebp,ebp
  426762:	cmp    rbx,rax
  426765:	jne    4266e9 <strcmp@plt+0x22f31>
  426767:	jmp    42674f <strcmp@plt+0x22f97>
  426769:	nop    DWORD PTR [rax+0x0]
  426770:	xor    eax,eax
  426772:	cmp    r8b,sil
  426775:	setae  al
  426778:	add    rsp,0x8
  42677c:	pop    rbx
  42677d:	add    eax,0x1
  426780:	pop    rbp
  426781:	pop    r12
  426783:	pop    r13
  426785:	ret    
  426786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426790:	mov    rdx,QWORD PTR [rdi]
  426793:	mov    rsi,QWORD PTR [rsi]
  426796:	mov    eax,0x1
  42679b:	mov    ecx,DWORD PTR [rsi+0x18]
  42679e:	cmp    DWORD PTR [rdx+0x18],ecx
  4267a1:	jg     4267aa <strcmp@plt+0x22ff2>
  4267a3:	mov    eax,0x2
  4267a8:	jge    4267b0 <strcmp@plt+0x22ff8>
  4267aa:	ret    
  4267ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4267b0:	push   r12
  4267b2:	push   rbp
  4267b3:	xor    ebp,ebp
  4267b5:	test   ecx,ecx
  4267b7:	push   rbx
  4267b8:	jne    426808 <strcmp@plt+0x23050>
  4267ba:	mov    rbx,QWORD PTR [rdx+0x8]
  4267be:	mov    r12,rdi
  4267c1:	cmp    rdx,rbx
  4267c4:	jne    4267ee <strcmp@plt+0x23036>
  4267c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4267d0:	xor    eax,eax
  4267d2:	pop    rbx
  4267d3:	pop    rbp
  4267d4:	pop    r12
  4267d6:	ret    
  4267d7:	nop    WORD PTR [rax+rax*1+0x0]
  4267e0:	mov    rbx,QWORD PTR [rbx+0x8]
  4267e4:	cmp    QWORD PTR [r12],rbx
  4267e8:	mov    rbp,QWORD PTR [rbp+0x8]
  4267ec:	je     4267d0 <strcmp@plt+0x23018>
  4267ee:	mov    rsi,QWORD PTR [rbp+0x10]
  4267f2:	mov    rdi,QWORD PTR [rbx+0x10]
  4267f6:	call   424df0 <strcmp@plt+0x21638>
  4267fb:	test   eax,eax
  4267fd:	je     4267e0 <strcmp@plt+0x23028>
  4267ff:	jmp    4267d2 <strcmp@plt+0x2301a>
  426801:	nop    DWORD PTR [rax+0x0]
  426808:	mov    rbx,QWORD PTR [rdx+0x8]
  42680c:	mov    rbp,QWORD PTR [rsi+0x8]
  426810:	mov    r12,rdi
  426813:	cmp    rdx,rbx
  426816:	jne    4267ee <strcmp@plt+0x23036>
  426818:	jmp    4267d0 <strcmp@plt+0x23018>
  42681a:	nop    WORD PTR [rax+rax*1+0x0]
  426820:	push   r12
  426822:	mov    r12,rdi
  426825:	push   rbp
  426826:	push   rbx
  426827:	mov    rdi,QWORD PTR [rdi+0x8]
  42682b:	call   424810 <strcmp@plt+0x21058>
  426830:	mov    rdi,QWORD PTR [r12+0x18]
  426835:	mov    ebx,eax
  426837:	call   424810 <strcmp@plt+0x21058>
  42683c:	mov    rdi,QWORD PTR [r12+0x20]
  426841:	lea    ebp,[rbx+rax*1+0xc]
  426845:	call   424810 <strcmp@plt+0x21058>
  42684a:	add    ebp,eax
  42684c:	mov    rax,QWORD PTR [r12+0x28]
  426851:	mov    rbx,QWORD PTR [rax+0x8]
  426855:	cmp    rax,rbx
  426858:	je     426876 <strcmp@plt+0x230be>
  42685a:	nop    WORD PTR [rax+rax*1+0x0]
  426860:	mov    rdi,QWORD PTR [rbx+0x10]
  426864:	call   424810 <strcmp@plt+0x21058>
  426869:	mov    rbx,QWORD PTR [rbx+0x8]
  42686d:	add    ebp,eax
  42686f:	cmp    QWORD PTR [r12+0x28],rbx
  426874:	jne    426860 <strcmp@plt+0x230a8>
  426876:	mov    eax,ebp
  426878:	pop    rbx
  426879:	pop    rbp
  42687a:	pop    r12
  42687c:	ret    
  42687d:	nop    DWORD PTR [rax]
  426880:	push   r12
  426882:	push   rbp
  426883:	push   rbx
  426884:	mov    rax,QWORD PTR [rdi]
  426887:	mov    rbx,QWORD PTR [rax+0x8]
  42688b:	cmp    rax,rbx
  42688e:	je     4268c2 <strcmp@plt+0x2310a>
  426890:	mov    r12,rdi
  426893:	mov    ebp,0x8
  426898:	nop    DWORD PTR [rax+rax*1+0x0]
  4268a0:	mov    rax,QWORD PTR [rbx+0x10]
  4268a4:	mov    rdi,QWORD PTR [rax+0x8]
  4268a8:	call   424810 <strcmp@plt+0x21058>
  4268ad:	mov    rbx,QWORD PTR [rbx+0x8]
  4268b1:	cmp    QWORD PTR [r12],rbx
  4268b5:	lea    ebp,[rax+rbp*1+0x2]
  4268b9:	jne    4268a0 <strcmp@plt+0x230e8>
  4268bb:	mov    eax,ebp
  4268bd:	pop    rbx
  4268be:	pop    rbp
  4268bf:	pop    r12
  4268c1:	ret    
  4268c2:	mov    eax,0x8
  4268c7:	jmp    4268bd <strcmp@plt+0x23105>
  4268c9:	nop    DWORD PTR [rax+0x0]
  4268d0:	push   r12
  4268d2:	push   rbp
  4268d3:	push   rbx
  4268d4:	mov    rax,QWORD PTR [rdi]
  4268d7:	mov    rbx,QWORD PTR [rax+0x8]
  4268db:	cmp    rax,rbx
  4268de:	je     426911 <strcmp@plt+0x23159>
  4268e0:	mov    r12,rdi
  4268e3:	mov    ebp,0x8
  4268e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4268f0:	mov    rax,QWORD PTR [rbx+0x10]
  4268f4:	mov    rdi,QWORD PTR [rax]
  4268f7:	call   424810 <strcmp@plt+0x21058>
  4268fc:	mov    rbx,QWORD PTR [rbx+0x8]
  426900:	cmp    QWORD PTR [r12],rbx
  426904:	lea    ebp,[rax+rbp*1+0x4]
  426908:	jne    4268f0 <strcmp@plt+0x23138>
  42690a:	mov    eax,ebp
  42690c:	pop    rbx
  42690d:	pop    rbp
  42690e:	pop    r12
  426910:	ret    
  426911:	mov    eax,0x8
  426916:	jmp    42690c <strcmp@plt+0x23154>
  426918:	nop    DWORD PTR [rax+rax*1+0x0]
  426920:	push   r12
  426922:	push   rbp
  426923:	push   rbx
  426924:	mov    rax,QWORD PTR [rdi]
  426927:	mov    rbx,QWORD PTR [rax+0x8]
  42692b:	cmp    rax,rbx
  42692e:	je     42695c <strcmp@plt+0x231a4>
  426930:	mov    r12,rdi
  426933:	mov    ebp,0x8
  426938:	nop    DWORD PTR [rax+rax*1+0x0]
  426940:	mov    rdi,QWORD PTR [rbx+0x10]
  426944:	call   424810 <strcmp@plt+0x21058>
  426949:	mov    rbx,QWORD PTR [rbx+0x8]
  42694d:	add    ebp,eax
  42694f:	cmp    QWORD PTR [r12],rbx
  426953:	jne    426940 <strcmp@plt+0x23188>
  426955:	mov    eax,ebp
  426957:	pop    rbx
  426958:	pop    rbp
  426959:	pop    r12
  42695b:	ret    
  42695c:	mov    ebp,0x8
  426961:	jmp    426955 <strcmp@plt+0x2319d>
  426963:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42696e:	xchg   ax,ax
  426970:	mov    eax,0x340
  426975:	push   r14
  426977:	push   r13
  426979:	push   r12
  42697b:	push   rbp
  42697c:	mov    r14,rsi
  42697f:	push   rbx
  426980:	mov    BYTE PTR [rdi+0x3],0x0
  426984:	lea    r12,[rdi+0xc]
  426988:	mov    BYTE PTR [rdi+0x2],0x0
  42698c:	mov    BYTE PTR [rdi+0x5],0x0
  426990:	mov    rbx,rdi
  426993:	mov    BYTE PTR [rdi+0x4],0x7
  426997:	mov    WORD PTR [rdi],ax
  42699a:	movzx  eax,WORD PTR [rsi+0x10]
  42699e:	rol    ax,0x8
  4269a2:	mov    WORD PTR [rdi+0x8],ax
  4269a6:	movzx  eax,WORD PTR [rsi]
  4269a9:	mov    rsi,QWORD PTR [rsi+0x8]
  4269ad:	rol    ax,0x8
  4269b1:	mov    WORD PTR [rdi+0xa],ax
  4269b5:	mov    rdi,r12
  4269b8:	call   424ca0 <strcmp@plt+0x214e8>
  4269bd:	test   eax,eax
  4269bf:	jne    4269d0 <strcmp@plt+0x23218>
  4269c1:	xor    eax,eax
  4269c3:	pop    rbx
  4269c4:	pop    rbp
  4269c5:	pop    r12
  4269c7:	pop    r13
  4269c9:	pop    r14
  4269cb:	ret    
  4269cc:	nop    DWORD PTR [rax+0x0]
  4269d0:	mov    ebp,eax
  4269d2:	mov    rsi,QWORD PTR [r14+0x18]
  4269d6:	mov    eax,eax
  4269d8:	add    r12,rax
  4269db:	mov    rdi,r12
  4269de:	call   424ca0 <strcmp@plt+0x214e8>
  4269e3:	test   eax,eax
  4269e5:	mov    r13d,eax
  4269e8:	je     4269c1 <strcmp@plt+0x23209>
  4269ea:	mov    eax,eax
  4269ec:	mov    rsi,QWORD PTR [r14+0x20]
  4269f0:	add    r12,rax
  4269f3:	mov    rdi,r12
  4269f6:	call   424ca0 <strcmp@plt+0x214e8>
  4269fb:	test   eax,eax
  4269fd:	je     4269c1 <strcmp@plt+0x23209>
  4269ff:	lea    r13d,[rbp+r13*1+0xc]
  426a04:	add    r13d,eax
  426a07:	mov    eax,eax
  426a09:	add    r12,rax
  426a0c:	mov    rax,QWORD PTR [r14+0x28]
  426a10:	mov    rbp,QWORD PTR [rax+0x8]
  426a14:	cmp    rax,rbp
  426a17:	jne    426a32 <strcmp@plt+0x2327a>
  426a19:	jmp    426a50 <strcmp@plt+0x23298>
  426a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  426a20:	add    r13d,eax
  426a23:	mov    eax,eax
  426a25:	mov    rbp,QWORD PTR [rbp+0x8]
  426a29:	add    r12,rax
  426a2c:	cmp    QWORD PTR [r14+0x28],rbp
  426a30:	je     426a50 <strcmp@plt+0x23298>
  426a32:	mov    rsi,QWORD PTR [rbp+0x10]
  426a36:	mov    rdi,r12
  426a39:	call   424ca0 <strcmp@plt+0x214e8>
  426a3e:	test   eax,eax
  426a40:	jne    426a20 <strcmp@plt+0x23268>
  426a42:	jmp    4269c1 <strcmp@plt+0x23209>
  426a47:	nop    WORD PTR [rax+rax*1+0x0]
  426a50:	lea    eax,[r13-0x8]
  426a54:	rol    ax,0x8
  426a58:	mov    WORD PTR [rbx+0x6],ax
  426a5c:	mov    eax,r13d
  426a5f:	jmp    4269c3 <strcmp@plt+0x2320b>
  426a64:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426a6f:	nop
  426a70:	mov    eax,0x340
  426a75:	push   r14
  426a77:	push   r13
  426a79:	push   r12
  426a7b:	push   rbp
  426a7c:	mov    rbp,rdi
  426a7f:	push   rbx
  426a80:	mov    BYTE PTR [rdi+0x3],0x0
  426a84:	mov    BYTE PTR [rdi+0x2],0x0
  426a88:	mov    BYTE PTR [rdi+0x5],0x0
  426a8c:	mov    BYTE PTR [rdi+0x4],0xa
  426a90:	mov    WORD PTR [rdi],ax
  426a93:	mov    rax,QWORD PTR [rsi]
  426a96:	mov    r13,QWORD PTR [rax+0x8]
  426a9a:	cmp    rax,r13
  426a9d:	je     426b28 <strcmp@plt+0x23370>
  426aa3:	mov    rbx,rsi
  426aa6:	add    rdi,0x8
  426aaa:	mov    r14d,0x8
  426ab0:	jmp    426acb <strcmp@plt+0x23313>
  426ab2:	nop    WORD PTR [rax+rax*1+0x0]
  426ab8:	mov    edi,eax
  426aba:	mov    r13,QWORD PTR [r13+0x8]
  426abe:	lea    r14d,[rax+r14*1+0x2]
  426ac3:	add    rdi,r12
  426ac6:	cmp    QWORD PTR [rbx],r13
  426ac9:	je     426b10 <strcmp@plt+0x23358>
  426acb:	mov    rax,QWORD PTR [r13+0x10]
  426acf:	lea    r12,[rdi+0x2]
  426ad3:	movzx  edx,BYTE PTR [rax]
  426ad6:	movzx  esi,BYTE PTR [rax]
  426ad9:	movzx  ecx,BYTE PTR [rax]
  426adc:	mov    BYTE PTR [rdi],0x0
  426adf:	and    edx,0x1
  426ae2:	and    esi,0x2
  426ae5:	shl    edx,0x2
  426ae8:	shr    cl,0x2
  426aeb:	and    ecx,0x1
  426aee:	or     edx,esi
  426af0:	mov    rsi,QWORD PTR [rax+0x8]
  426af4:	or     edx,ecx
  426af6:	mov    BYTE PTR [rdi+0x1],dl
  426af9:	mov    rdi,r12
  426afc:	call   424ca0 <strcmp@plt+0x214e8>
  426b01:	test   eax,eax
  426b03:	jne    426ab8 <strcmp@plt+0x23300>
  426b05:	pop    rbx
  426b06:	xor    eax,eax
  426b08:	pop    rbp
  426b09:	pop    r12
  426b0b:	pop    r13
  426b0d:	pop    r14
  426b0f:	ret    
  426b10:	lea    edx,[r14-0x8]
  426b14:	mov    eax,r14d
  426b17:	rol    dx,0x8
  426b1b:	mov    WORD PTR [rbp+0x6],dx
  426b1f:	pop    rbx
  426b20:	pop    rbp
  426b21:	pop    r12
  426b23:	pop    r13
  426b25:	pop    r14
  426b27:	ret    
  426b28:	xor    edx,edx
  426b2a:	mov    eax,0x8
  426b2f:	jmp    426b1b <strcmp@plt+0x23363>
  426b31:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426b3c:	nop    DWORD PTR [rax+0x0]
  426b40:	push   r13
  426b42:	push   r12
  426b44:	mov    eax,0x340
  426b49:	push   rbp
  426b4a:	push   rbx
  426b4b:	mov    r13,rdi
  426b4e:	lea    rbp,[rdi+0x8]
  426b52:	sub    rsp,0x8
  426b56:	mov    BYTE PTR [rdi+0x3],0x0
  426b5a:	mov    BYTE PTR [rdi+0x2],0x0
  426b5e:	mov    BYTE PTR [rdi+0x5],0x0
  426b62:	mov    BYTE PTR [rdi+0x4],0x1
  426b66:	mov    WORD PTR [rdi],ax
  426b69:	mov    rax,QWORD PTR [rsi]
  426b6c:	mov    rbx,QWORD PTR [rax+0x8]
  426b70:	cmp    rax,rbx
  426b73:	je     426bb0 <strcmp@plt+0x233f8>
  426b75:	mov    r12,rsi
  426b78:	jmp    426b8f <strcmp@plt+0x233d7>
  426b7a:	nop    WORD PTR [rax+rax*1+0x0]
  426b80:	cdqe   
  426b82:	mov    rbx,QWORD PTR [rbx+0x8]
  426b86:	add    rbp,rax
  426b89:	cmp    QWORD PTR [r12],rbx
  426b8d:	je     426bb0 <strcmp@plt+0x233f8>
  426b8f:	mov    rsi,QWORD PTR [rbx+0x10]
  426b93:	mov    rdi,rbp
  426b96:	call   424ca0 <strcmp@plt+0x214e8>
  426b9b:	test   eax,eax
  426b9d:	jg     426b80 <strcmp@plt+0x233c8>
  426b9f:	add    rsp,0x8
  426ba3:	xor    eax,eax
  426ba5:	pop    rbx
  426ba6:	pop    rbp
  426ba7:	pop    r12
  426ba9:	pop    r13
  426bab:	ret    
  426bac:	nop    DWORD PTR [rax+0x0]
  426bb0:	mov    rdx,rbp
  426bb3:	sub    rdx,r13
  426bb6:	mov    eax,edx
  426bb8:	sub    edx,0x8
  426bbb:	rol    dx,0x8
  426bbf:	mov    WORD PTR [rbp+0x6],dx
  426bc3:	add    rsp,0x8
  426bc7:	pop    rbx
  426bc8:	pop    rbp
  426bc9:	pop    r12
  426bcb:	pop    r13
  426bcd:	ret    
  426bce:	xchg   ax,ax
  426bd0:	mov    rdi,QWORD PTR [rdi+0x8]
  426bd4:	jmp    425050 <strcmp@plt+0x21898>
  426bd9:	nop    DWORD PTR [rax+0x0]
  426be0:	mov    rdi,QWORD PTR [rdi+0x20]
  426be4:	jmp    425050 <strcmp@plt+0x21898>
  426be9:	nop    DWORD PTR [rax+0x0]
  426bf0:	mov    rax,QWORD PTR [rdi]
  426bf3:	mov    edx,DWORD PTR [rax+0x18]
  426bf6:	test   edx,edx
  426bf8:	je     426c10 <strcmp@plt+0x23458>
  426bfa:	mov    rax,QWORD PTR [rax]
  426bfd:	mov    rax,QWORD PTR [rax+0x10]
  426c01:	test   rax,rax
  426c04:	je     426c20 <strcmp@plt+0x23468>
  426c06:	mov    rdi,QWORD PTR [rax+0x8]
  426c0a:	jmp    425050 <strcmp@plt+0x21898>
  426c0f:	nop
  426c10:	mov    rax,QWORD PTR ds:0x10
  426c18:	ud2    
  426c1a:	nop    WORD PTR [rax+rax*1+0x0]
  426c20:	xor    eax,eax
  426c22:	ret    
  426c23:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426c2e:	xchg   ax,ax
  426c30:	push   rbp
  426c31:	push   rbx
  426c32:	mov    rbp,rdi
  426c35:	sub    rsp,0x8
  426c39:	mov    rax,QWORD PTR [rdi]
  426c3c:	mov    rbx,QWORD PTR [rax+0x8]
  426c40:	cmp    rax,rbx
  426c43:	jne    426c5a <strcmp@plt+0x234a2>
  426c45:	jmp    426c70 <strcmp@plt+0x234b8>
  426c47:	nop    WORD PTR [rax+rax*1+0x0]
  426c50:	mov    rbx,QWORD PTR [rbx+0x8]
  426c54:	cmp    QWORD PTR [rbp+0x0],rbx
  426c58:	je     426c70 <strcmp@plt+0x234b8>
  426c5a:	mov    rdi,QWORD PTR [rbx+0x10]
  426c5e:	call   425050 <strcmp@plt+0x21898>
  426c63:	test   rax,rax
  426c66:	je     426c50 <strcmp@plt+0x23498>
  426c68:	add    rsp,0x8
  426c6c:	pop    rbx
  426c6d:	pop    rbp
  426c6e:	ret    
  426c6f:	nop
  426c70:	add    rsp,0x8
  426c74:	xor    eax,eax
  426c76:	pop    rbx
  426c77:	pop    rbp
  426c78:	ret    
  426c79:	nop    DWORD PTR [rax+0x0]
  426c80:	mov    rdi,QWORD PTR [rdi+0x8]
  426c84:	jmp    425110 <strcmp@plt+0x21958>
  426c89:	nop    DWORD PTR [rax+0x0]
  426c90:	mov    rdi,QWORD PTR [rdi+0x20]
  426c94:	jmp    425110 <strcmp@plt+0x21958>
  426c99:	nop    DWORD PTR [rax+0x0]
  426ca0:	push   rbp
  426ca1:	push   rbx
  426ca2:	mov    rbp,rdi
  426ca5:	sub    rsp,0x8
  426ca9:	mov    rax,QWORD PTR [rdi]
  426cac:	mov    rbx,QWORD PTR [rax+0x8]
  426cb0:	cmp    rax,rbx
  426cb3:	jne    426cca <strcmp@plt+0x23512>
  426cb5:	jmp    426ce0 <strcmp@plt+0x23528>
  426cb7:	nop    WORD PTR [rax+rax*1+0x0]
  426cc0:	mov    rbx,QWORD PTR [rbx+0x8]
  426cc4:	cmp    QWORD PTR [rbp+0x0],rbx
  426cc8:	je     426ce0 <strcmp@plt+0x23528>
  426cca:	mov    rdi,QWORD PTR [rbx+0x10]
  426cce:	call   425110 <strcmp@plt+0x21958>
  426cd3:	test   rax,rax
  426cd6:	je     426cc0 <strcmp@plt+0x23508>
  426cd8:	add    rsp,0x8
  426cdc:	pop    rbx
  426cdd:	pop    rbp
  426cde:	ret    
  426cdf:	nop
  426ce0:	add    rsp,0x8
  426ce4:	xor    eax,eax
  426ce6:	pop    rbx
  426ce7:	pop    rbp
  426ce8:	ret    
  426ce9:	nop    DWORD PTR [rax+0x0]
  426cf0:	push   rbx
  426cf1:	mov    rbx,rdi
  426cf4:	mov    rdi,QWORD PTR [rdi+0x18]
  426cf8:	call   424750 <strcmp@plt+0x20f98>
  426cfd:	mov    rdi,QWORD PTR [rbx+0x8]
  426d01:	call   424750 <strcmp@plt+0x20f98>
  426d06:	mov    rdi,QWORD PTR [rbx+0x20]
  426d0a:	call   424750 <strcmp@plt+0x20f98>
  426d0f:	mov    rdi,QWORD PTR [rbx+0x28]
  426d13:	call   42dac0 <strcmp@plt+0x2a308>
  426d18:	mov    rdi,rbx
  426d1b:	pop    rbx
  426d1c:	jmp    4037b0 <free@plt>
  426d21:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426d2c:	nop    DWORD PTR [rax+0x0]
  426d30:	push   rbx
  426d31:	mov    rbx,rdi
  426d34:	mov    rdi,QWORD PTR [rdi]
  426d37:	call   42dac0 <strcmp@plt+0x2a308>
  426d3c:	mov    rdi,rbx
  426d3f:	pop    rbx
  426d40:	jmp    4037b0 <free@plt>
  426d45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426d50:	test   rdi,rdi
  426d53:	je     426d70 <strcmp@plt+0x235b8>
  426d55:	push   rbx
  426d56:	mov    rbx,rdi
  426d59:	mov    rdi,QWORD PTR [rdi]
  426d5c:	call   42dac0 <strcmp@plt+0x2a308>
  426d61:	mov    rdi,rbx
  426d64:	pop    rbx
  426d65:	jmp    4037b0 <free@plt>
  426d6a:	nop    WORD PTR [rax+rax*1+0x0]
  426d70:	repz ret 
  426d72:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426d7d:	nop    DWORD PTR [rax]
  426d80:	mov    rdi,QWORD PTR [rdi]
  426d83:	jmp    42dac0 <strcmp@plt+0x2a308>
  426d88:	nop    DWORD PTR [rax+rax*1+0x0]
  426d90:	push   r15
  426d92:	push   r14
  426d94:	mov    edx,0xcccccccd
  426d99:	push   r13
  426d9b:	push   r12
  426d9d:	mov    r12,rdi
  426da0:	push   rbp
  426da1:	push   rbx
  426da2:	lea    rbp,[rip+0x49657]        # 470400 <strcmp@plt+0x6cc48>
  426da9:	sub    rsp,0x8
  426dad:	mov    eax,DWORD PTR [rip+0x4a011]        # 470dc4 <strcmp@plt+0x6d60c>
  426db3:	lea    ecx,[rax+0x1]
  426db6:	mov    eax,ecx
  426db8:	mul    edx
  426dba:	shr    edx,0x2
  426dbd:	lea    eax,[rdx+rdx*4]
  426dc0:	mov    edx,ecx
  426dc2:	sub    edx,eax
  426dc4:	mov    DWORD PTR [rip+0x49ffa],edx        # 470dc4 <strcmp@plt+0x6d60c>
  426dca:	imul   rdx,rdx,0x1f4
  426dd1:	mov    BYTE PTR [rbp+rdx*1+0x0],0x0
  426dd6:	movzx  r15d,WORD PTR [rdi+0x10]
  426ddb:	mov    rdi,QWORD PTR [rdi+0x18]
  426ddf:	call   424890 <strcmp@plt+0x210d8>
  426de4:	mov    rdi,QWORD PTR [r12+0x20]
  426de9:	mov    r14,rax
  426dec:	call   424890 <strcmp@plt+0x210d8>
  426df1:	mov    rdi,QWORD PTR [r12+0x8]
  426df6:	mov    r13,rax
  426df9:	movzx  ebx,WORD PTR [r12]
  426dfe:	call   424890 <strcmp@plt+0x210d8>
  426e03:	mov    edi,DWORD PTR [rip+0x49fbb]        # 470dc4 <strcmp@plt+0x6d60c>
  426e09:	push   r15
  426e0b:	lea    r8,[rip+0x270ce]        # 44dee0 <strcmp@plt+0x4a728>
  426e12:	push   r14
  426e14:	push   r13
  426e16:	mov    r9,rax
  426e19:	push   rbx
  426e1a:	xor    eax,eax
  426e1c:	mov    rcx,0xffffffffffffffff
  426e23:	mov    edx,0x1
  426e28:	mov    esi,0x1f4
  426e2d:	imul   rdi,rdi,0x1f4
  426e34:	add    rdi,rbp
  426e37:	call   4032a0 <__snprintf_chk@plt>
  426e3c:	mov    rax,QWORD PTR [r12+0x28]
  426e41:	add    rsp,0x20
  426e45:	mov    r14,QWORD PTR [rax+0x8]
  426e49:	cmp    rax,r14
  426e4c:	je     426ef6 <strcmp@plt+0x2373e>
  426e52:	xor    ebx,ebx
  426e54:	mov    r13d,0x1f4
  426e5a:	nop    WORD PTR [rax+rax*1+0x0]
  426e60:	mov    rdi,QWORD PTR [r14+0x10]
  426e64:	add    ebx,0x1
  426e67:	call   424890 <strcmp@plt+0x210d8>
  426e6c:	mov    ecx,DWORD PTR [rip+0x49f52]        # 470dc4 <strcmp@plt+0x6d60c>
  426e72:	imul   rcx,rcx,0x1f4
  426e79:	add    rcx,rbp
  426e7c:	mov    rdi,rcx
  426e7f:	mov    esi,DWORD PTR [rdi]
  426e81:	add    rdi,0x4
  426e85:	lea    edx,[rsi-0x1010101]
  426e8b:	andn   edx,esi,edx
  426e90:	and    edx,0x80808080
  426e96:	je     426e7f <strcmp@plt+0x236c7>
  426e98:	mov    esi,edx
  426e9a:	lea    r8,[rip+0x27381]        # 44e222 <strcmp@plt+0x4aa6a>
  426ea1:	mov    r9d,ebx
  426ea4:	shr    esi,0x10
  426ea7:	test   edx,0x8080
  426ead:	cmove  edx,esi
  426eb0:	lea    rsi,[rdi+0x2]
  426eb4:	cmove  rdi,rsi
  426eb8:	mov    esi,edx
  426eba:	add    sil,dl
  426ebd:	mov    rsi,r13
  426ec0:	mov    edx,0x1
  426ec5:	sbb    rdi,0x3
  426ec9:	sub    rsp,0x8
  426ecd:	sub    rdi,rcx
  426ed0:	push   rax
  426ed1:	xor    eax,eax
  426ed3:	sub    rsi,rdi
  426ed6:	add    rdi,rcx
  426ed9:	mov    rcx,0xffffffffffffffff
  426ee0:	call   4032a0 <__snprintf_chk@plt>
  426ee5:	mov    r14,QWORD PTR [r14+0x8]
  426ee9:	cmp    QWORD PTR [r12+0x28],r14
  426eee:	pop    rax
  426eef:	pop    rdx
  426ef0:	jne    426e60 <strcmp@plt+0x236a8>
  426ef6:	mov    eax,DWORD PTR [rip+0x49ec8]        # 470dc4 <strcmp@plt+0x6d60c>
  426efc:	add    rsp,0x8
  426f00:	pop    rbx
  426f01:	imul   rax,rax,0x1f4
  426f08:	add    rax,rbp
  426f0b:	pop    rbp
  426f0c:	pop    r12
  426f0e:	pop    r13
  426f10:	pop    r14
  426f12:	pop    r15
  426f14:	ret    
  426f15:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426f20:	mov    eax,DWORD PTR [rip+0x48516]        # 46f43c <strcmp@plt+0x6bc84>
  426f26:	mov    edx,0x66666667
  426f2b:	push   r14
  426f2d:	push   r13
  426f2f:	push   r12
  426f31:	push   rbp
  426f32:	lea    rbp,[rip+0x47f27]        # 46ee60 <strcmp@plt+0x6b6a8>
  426f39:	push   rbx
  426f3a:	lea    ecx,[rax+0x1]
  426f3d:	mov    eax,ecx
  426f3f:	imul   edx
  426f41:	mov    eax,ecx
  426f43:	sar    eax,0x1f
  426f46:	sar    edx,0x2
  426f49:	sub    edx,eax
  426f4b:	lea    eax,[rdx+rdx*4]
  426f4e:	add    eax,eax
  426f50:	sub    ecx,eax
  426f52:	movsxd rdx,ecx
  426f55:	imul   rax,rdx,0x1f4
  426f5c:	mov    DWORD PTR [rip+0x484da],edx        # 46f43c <strcmp@plt+0x6bc84>
  426f62:	mov    BYTE PTR [rbp+rax*1+0x0],0x0
  426f67:	mov    rax,QWORD PTR [rdi]
  426f6a:	mov    r14,QWORD PTR [rax+0x8]
  426f6e:	cmp    rax,r14
  426f71:	je     427025 <strcmp@plt+0x2386d>
  426f77:	mov    r12,rdi
  426f7a:	xor    ebx,ebx
  426f7c:	mov    r13d,0x1f4
  426f82:	nop    WORD PTR [rax+rax*1+0x0]
  426f88:	mov    rdi,QWORD PTR [r14+0x10]
  426f8c:	call   424890 <strcmp@plt+0x210d8>
  426f91:	movsxd rdi,DWORD PTR [rip+0x484a4]        # 46f43c <strcmp@plt+0x6bc84>
  426f98:	imul   rdi,rdi,0x1f4
  426f9f:	add    rdi,rbp
  426fa2:	mov    rcx,rdi
  426fa5:	mov    esi,DWORD PTR [rcx]
  426fa7:	add    rcx,0x4
  426fab:	lea    edx,[rsi-0x1010101]
  426fb1:	andn   edx,esi,edx
  426fb6:	and    edx,0x80808080
  426fbc:	je     426fa5 <strcmp@plt+0x237ed>
  426fbe:	mov    esi,edx
  426fc0:	lea    r8,[rip+0x27264]        # 44e22b <strcmp@plt+0x4aa73>
  426fc7:	mov    r9d,ebx
  426fca:	shr    esi,0x10
  426fcd:	test   edx,0x8080
  426fd3:	cmove  edx,esi
  426fd6:	lea    rsi,[rcx+0x2]
  426fda:	cmove  rcx,rsi
  426fde:	mov    esi,edx
  426fe0:	add    sil,dl
  426fe3:	mov    rsi,r13
  426fe6:	mov    edx,0x1
  426feb:	sbb    rcx,0x3
  426fef:	sub    rsp,0x8
  426ff3:	add    ebx,0x1
  426ff6:	sub    rcx,rdi
  426ff9:	push   rax
  426ffa:	xor    eax,eax
  426ffc:	sub    rsi,rcx
  426fff:	add    rdi,rcx
  427002:	mov    rcx,0xffffffffffffffff
  427009:	call   4032a0 <__snprintf_chk@plt>
  42700e:	mov    r14,QWORD PTR [r14+0x8]
  427012:	cmp    QWORD PTR [r12],r14
  427016:	pop    rax
  427017:	pop    rdx
  427018:	jne    426f88 <strcmp@plt+0x237d0>
  42701e:	movsxd rdx,DWORD PTR [rip+0x48417]        # 46f43c <strcmp@plt+0x6bc84>
  427025:	imul   rdx,rdx,0x1f4
  42702c:	pop    rbx
  42702d:	lea    rax,[rbp+rdx*1+0x0]
  427032:	pop    rbp
  427033:	pop    r12
  427035:	pop    r13
  427037:	pop    r14
  427039:	ret    
  42703a:	nop    WORD PTR [rax+rax*1+0x0]
  427040:	mov    eax,DWORD PTR [rip+0x4939e]        # 4703e4 <strcmp@plt+0x6cc2c>
  427046:	mov    edx,0xcccccccd
  42704b:	push   r14
  42704d:	push   r13
  42704f:	push   r12
  427051:	push   rbp
  427052:	lea    rbp,[rip+0x489c7]        # 46fa20 <strcmp@plt+0x6c268>
  427059:	push   rbx
  42705a:	lea    ecx,[rax+0x1]
  42705d:	mov    eax,ecx
  42705f:	mul    edx
  427061:	shr    edx,0x2
  427064:	lea    eax,[rdx+rdx*4]
  427067:	sub    ecx,eax
  427069:	mov    eax,ecx
  42706b:	mov    DWORD PTR [rip+0x49373],eax        # 4703e4 <strcmp@plt+0x6cc2c>
  427071:	imul   rax,rax,0x1f4
  427078:	add    rax,rbp
  42707b:	mov    DWORD PTR [rax],0x3a504c45
  427081:	mov    BYTE PTR [rax+0x4],0x0
  427085:	mov    rdx,QWORD PTR [rdi]
  427088:	mov    r14,QWORD PTR [rdx+0x8]
  42708c:	cmp    rdx,r14
  42708f:	je     427149 <strcmp@plt+0x23991>
  427095:	mov    r12,rdi
  427098:	xor    ebx,ebx
  42709a:	mov    r13d,0x1f4
  4270a0:	mov    rax,QWORD PTR [r14+0x10]
  4270a4:	add    ebx,0x1
  4270a7:	mov    rdi,QWORD PTR [rax+0x8]
  4270ab:	call   424890 <strcmp@plt+0x210d8>
  4270b0:	mov    edi,DWORD PTR [rip+0x4932e]        # 4703e4 <strcmp@plt+0x6cc2c>
  4270b6:	imul   rdi,rdi,0x1f4
  4270bd:	add    rdi,rbp
  4270c0:	mov    rcx,rdi
  4270c3:	mov    esi,DWORD PTR [rcx]
  4270c5:	add    rcx,0x4
  4270c9:	lea    edx,[rsi-0x1010101]
  4270cf:	andn   edx,esi,edx
  4270d4:	and    edx,0x80808080
  4270da:	je     4270c3 <strcmp@plt+0x2390b>
  4270dc:	mov    esi,edx
  4270de:	lea    r8,[rip+0x2713d]        # 44e222 <strcmp@plt+0x4aa6a>
  4270e5:	mov    r9d,ebx
  4270e8:	shr    esi,0x10
  4270eb:	test   edx,0x8080
  4270f1:	cmove  edx,esi
  4270f4:	lea    rsi,[rcx+0x2]
  4270f8:	cmove  rcx,rsi
  4270fc:	mov    esi,edx
  4270fe:	add    sil,dl
  427101:	mov    rsi,r13
  427104:	mov    edx,0x1
  427109:	sbb    rcx,0x3
  42710d:	sub    rsp,0x8
  427111:	sub    rcx,rdi
  427114:	push   rax
  427115:	xor    eax,eax
  427117:	sub    rsi,rcx
  42711a:	add    rdi,rcx
  42711d:	mov    rcx,0xffffffffffffffff
  427124:	call   4032a0 <__snprintf_chk@plt>
  427129:	mov    r14,QWORD PTR [r14+0x8]
  42712d:	cmp    QWORD PTR [r12],r14
  427131:	pop    rax
  427132:	pop    rdx
  427133:	jne    4270a0 <strcmp@plt+0x238e8>
  427139:	mov    eax,DWORD PTR [rip+0x492a5]        # 4703e4 <strcmp@plt+0x6cc2c>
  42713f:	imul   rax,rax,0x1f4
  427146:	add    rax,rbp
  427149:	pop    rbx
  42714a:	pop    rbp
  42714b:	pop    r12
  42714d:	pop    r13
  42714f:	pop    r14
  427151:	ret    
  427152:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42715d:	nop    DWORD PTR [rax]
  427160:	mov    eax,DWORD PTR [rip+0x488b6]        # 46fa1c <strcmp@plt+0x6c264>
  427166:	mov    edx,0xcccccccd
  42716b:	push   r14
  42716d:	push   r13
  42716f:	push   r12
  427171:	push   rbp
  427172:	lea    rbp,[rip+0x482c7]        # 46f440 <strcmp@plt+0x6bc88>
  427179:	push   rbx
  42717a:	lea    ecx,[rax+0x1]
  42717d:	mov    eax,ecx
  42717f:	mul    edx
  427181:	shr    edx,0x3
  427184:	lea    eax,[rdx+rdx*4]
  427187:	add    eax,eax
  427189:	sub    ecx,eax
  42718b:	mov    eax,ecx
  42718d:	mov    DWORD PTR [rip+0x48889],eax        # 46fa1c <strcmp@plt+0x6c264>
  427193:	imul   rax,rax,0x1f4
  42719a:	add    rax,rbp
  42719d:	mov    DWORD PTR [rax],0x3a454c52
  4271a3:	mov    BYTE PTR [rax+0x4],0x0
  4271a7:	mov    rdx,QWORD PTR [rdi]
  4271aa:	mov    rbx,QWORD PTR [rdx+0x8]
  4271ae:	cmp    rdx,rbx
  4271b1:	je     427267 <strcmp@plt+0x23aaf>
  4271b7:	mov    r12,rdi
  4271ba:	mov    r13d,0x1f4
  4271c0:	mov    r14,QWORD PTR [rbx+0x10]
  4271c4:	mov    rdi,QWORD PTR [r14]
  4271c7:	call   424890 <strcmp@plt+0x210d8>
  4271cc:	mov    edi,DWORD PTR [rip+0x4884a]        # 46fa1c <strcmp@plt+0x6c264>
  4271d2:	imul   rdi,rdi,0x1f4
  4271d9:	add    rdi,rbp
  4271dc:	mov    rcx,rdi
  4271df:	mov    esi,DWORD PTR [rcx]
  4271e1:	add    rcx,0x4
  4271e5:	lea    edx,[rsi-0x1010101]
  4271eb:	andn   edx,esi,edx
  4271f0:	and    edx,0x80808080
  4271f6:	je     4271df <strcmp@plt+0x23a27>
  4271f8:	mov    esi,edx
  4271fa:	lea    r8,[rip+0x27021]        # 44e222 <strcmp@plt+0x4aa6a>
  427201:	shr    esi,0x10
  427204:	test   edx,0x8080
  42720a:	cmove  edx,esi
  42720d:	lea    rsi,[rcx+0x2]
  427211:	cmove  rcx,rsi
  427215:	mov    esi,edx
  427217:	add    sil,dl
  42721a:	mov    rsi,r13
  42721d:	mov    edx,0x1
  427222:	sbb    rcx,0x3
  427226:	sub    rsp,0x8
  42722a:	push   rax
  42722b:	movzx  r9d,BYTE PTR [r14+0x8]
  427230:	sub    rcx,rdi
  427233:	sub    rsi,rcx
  427236:	add    rdi,rcx
  427239:	xor    eax,eax
  42723b:	mov    rcx,0xffffffffffffffff
  427242:	call   4032a0 <__snprintf_chk@plt>
  427247:	mov    rbx,QWORD PTR [rbx+0x8]
  42724b:	cmp    QWORD PTR [r12],rbx
  42724f:	pop    rax
  427250:	pop    rdx
  427251:	jne    4271c0 <strcmp@plt+0x23a08>
  427257:	mov    eax,DWORD PTR [rip+0x487bf]        # 46fa1c <strcmp@plt+0x6c264>
  42725d:	imul   rax,rax,0x1f4
  427264:	add    rax,rbp
  427267:	pop    rbx
  427268:	pop    rbp
  427269:	pop    r12
  42726b:	pop    r13
  42726d:	pop    r14
  42726f:	ret    
  427270:	push   r15
  427272:	push   r14
  427274:	push   r13
  427276:	push   r12
  427278:	mov    r13,rsi
  42727b:	push   rbp
  42727c:	push   rbx
  42727d:	xor    ebx,ebx
  42727f:	mov    r12,rdi
  427282:	sub    rsp,0x8
  427286:	mov    rax,QWORD PTR [rdi]
  427289:	mov    esi,DWORD PTR [rax+0x18]
  42728c:	test   esi,esi
  42728e:	je     427294 <strcmp@plt+0x23adc>
  427290:	mov    rbx,QWORD PTR [rax+0x8]
  427294:	mov    rdx,QWORD PTR [r13+0x0]
  427298:	mov    ecx,DWORD PTR [rdx+0x18]
  42729b:	test   ecx,ecx
  42729d:	je     4272c8 <strcmp@plt+0x23b10>
  42729f:	cmp    rbx,rax
  4272a2:	mov    rbp,QWORD PTR [rdx+0x8]
  4272a6:	je     4272b0 <strcmp@plt+0x23af8>
  4272a8:	cmp    rbp,rdx
  4272ab:	jne    4272f6 <strcmp@plt+0x23b3e>
  4272ad:	nop    DWORD PTR [rax]
  4272b0:	xor    eax,eax
  4272b2:	add    rsp,0x8
  4272b6:	pop    rbx
  4272b7:	pop    rbp
  4272b8:	pop    r12
  4272ba:	pop    r13
  4272bc:	pop    r14
  4272be:	pop    r15
  4272c0:	ret    
  4272c1:	nop    DWORD PTR [rax+0x0]
  4272c8:	xor    ebp,ebp
  4272ca:	cmp    rbx,rax
  4272cd:	jne    4272f6 <strcmp@plt+0x23b3e>
  4272cf:	jmp    4272b0 <strcmp@plt+0x23af8>
  4272d1:	nop    DWORD PTR [rax+0x0]
  4272d8:	movzx  eax,BYTE PTR [r14]
  4272dc:	xor    al,BYTE PTR [r15]
  4272df:	test   al,0x7
  4272e1:	jne    427330 <strcmp@plt+0x23b78>
  4272e3:	mov    rbx,QWORD PTR [rbx]
  4272e6:	cmp    rbx,QWORD PTR [r12]
  4272ea:	mov    rbp,QWORD PTR [rbp+0x0]
  4272ee:	je     4272b0 <strcmp@plt+0x23af8>
  4272f0:	cmp    rbp,QWORD PTR [r13+0x0]
  4272f4:	je     4272b0 <strcmp@plt+0x23af8>
  4272f6:	mov    r14,QWORD PTR [rbx+0x10]
  4272fa:	mov    r15,QWORD PTR [rbp+0x10]
  4272fe:	mov    rdi,QWORD PTR [r14+0x8]
  427302:	mov    rsi,QWORD PTR [r15+0x8]
  427306:	call   424df0 <strcmp@plt+0x21638>
  42730b:	test   eax,eax
  42730d:	je     4272d8 <strcmp@plt+0x23b20>
  42730f:	jns    4272b2 <strcmp@plt+0x23afa>
  427311:	mov    rsi,QWORD PTR [r15+0x8]
  427315:	mov    rdi,QWORD PTR [r14+0x8]
  427319:	add    rsp,0x8
  42731d:	pop    rbx
  42731e:	pop    rbp
  42731f:	pop    r12
  427321:	pop    r13
  427323:	pop    r14
  427325:	pop    r15
  427327:	jmp    425440 <strcmp@plt+0x21c88>
  42732c:	nop    DWORD PTR [rax+0x0]
  427330:	add    rsp,0x8
  427334:	mov    eax,0x1
  427339:	pop    rbx
  42733a:	pop    rbp
  42733b:	pop    r12
  42733d:	pop    r13
  42733f:	pop    r14
  427341:	pop    r15
  427343:	ret    
  427344:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42734f:	nop
  427350:	push   r14
  427352:	push   r13
  427354:	mov    edx,0x340
  427359:	push   r12
  42735b:	push   rbp
  42735c:	mov    r13,rdi
  42735f:	push   rbx
  427360:	mov    BYTE PTR [rdi+0x3],0x0
  427364:	mov    BYTE PTR [rdi+0x2],0x0
  427368:	mov    BYTE PTR [rdi+0x5],0x0
  42736c:	mov    BYTE PTR [rdi+0x4],0xd
  427370:	mov    rax,QWORD PTR [rsi]
  427373:	mov    WORD PTR [rdi],dx
  427376:	mov    rbp,QWORD PTR [rax+0x8]
  42737a:	cmp    rax,rbp
  42737d:	je     4273f9 <strcmp@plt+0x23c41>
  42737f:	mov    r12,rsi
  427382:	add    rdi,0x8
  427386:	mov    r14d,0x8
  42738c:	jmp    4273a4 <strcmp@plt+0x23bec>
  42738e:	xchg   ax,ax
  427390:	mov    edi,eax
  427392:	mov    rbp,QWORD PTR [rbp+0x8]
  427396:	lea    r14d,[rax+r14*1+0x4]
  42739b:	add    rdi,rbx
  42739e:	cmp    QWORD PTR [r12],rbp
  4273a2:	je     4273e0 <strcmp@plt+0x23c28>
  4273a4:	mov    rdx,QWORD PTR [rbp+0x10]
  4273a8:	lea    rbx,[rdi+0x4]
  4273ac:	movzx  eax,BYTE PTR [rdx+0x8]
  4273b0:	mov    BYTE PTR [rdi+0x2],0x0
  4273b4:	mov    BYTE PTR [rdi+0x3],al
  4273b7:	xor    eax,eax
  4273b9:	mov    WORD PTR [rdi],ax
  4273bc:	mov    rsi,QWORD PTR [rdx]
  4273bf:	mov    rdi,rbx
  4273c2:	call   424ca0 <strcmp@plt+0x214e8>
  4273c7:	test   eax,eax
  4273c9:	jne    427390 <strcmp@plt+0x23bd8>
  4273cb:	pop    rbx
  4273cc:	xor    eax,eax
  4273ce:	pop    rbp
  4273cf:	pop    r12
  4273d1:	pop    r13
  4273d3:	pop    r14
  4273d5:	ret    
  4273d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4273e0:	lea    edx,[r14-0x8]
  4273e4:	mov    eax,r14d
  4273e7:	rol    dx,0x8
  4273eb:	pop    rbx
  4273ec:	pop    rbp
  4273ed:	mov    WORD PTR [r13+0x6],dx
  4273f2:	pop    r12
  4273f4:	pop    r13
  4273f6:	pop    r14
  4273f8:	ret    
  4273f9:	xor    edx,edx
  4273fb:	mov    eax,0x8
  427400:	jmp    4273eb <strcmp@plt+0x23c33>
  427402:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42740d:	nop    DWORD PTR [rax]
  427410:	push   r14
  427412:	push   r13
  427414:	push   r12
  427416:	mov    r12,rsi
  427419:	push   rbp
  42741a:	mov    rbp,rdi
  42741d:	push   rbx
  42741e:	mov    rsi,QWORD PTR [rsi+0x8]
  427422:	mov    rdi,QWORD PTR [rdi+0x8]
  427426:	call   424df0 <strcmp@plt+0x21638>
  42742b:	test   eax,eax
  42742d:	mov    ebx,eax
  42742f:	je     427440 <strcmp@plt+0x23c88>
  427431:	mov    eax,ebx
  427433:	pop    rbx
  427434:	pop    rbp
  427435:	pop    r12
  427437:	pop    r13
  427439:	pop    r14
  42743b:	ret    
  42743c:	nop    DWORD PTR [rax+0x0]
  427440:	mov    rsi,QWORD PTR [r12+0x20]
  427445:	mov    rdi,QWORD PTR [rbp+0x20]
  427449:	call   424df0 <strcmp@plt+0x21638>
  42744e:	test   eax,eax
  427450:	mov    ebx,eax
  427452:	jne    427431 <strcmp@plt+0x23c79>
  427454:	mov    rsi,QWORD PTR [r12+0x18]
  427459:	mov    rdi,QWORD PTR [rbp+0x18]
  42745d:	call   424df0 <strcmp@plt+0x21638>
  427462:	test   eax,eax
  427464:	mov    ebx,eax
  427466:	jne    427431 <strcmp@plt+0x23c79>
  427468:	movzx  eax,WORD PTR [r12]
  42746d:	cmp    WORD PTR [rbp+0x0],ax
  427471:	je     427480 <strcmp@plt+0x23cc8>
  427473:	ja     427498 <strcmp@plt+0x23ce0>
  427475:	mov    ebx,0x2
  42747a:	jmp    427431 <strcmp@plt+0x23c79>
  42747c:	nop    DWORD PTR [rax+0x0]
  427480:	mov    rsi,QWORD PTR [rbp+0x28]
  427484:	mov    rax,QWORD PTR [r12+0x28]
  427489:	mov    eax,DWORD PTR [rax+0x18]
  42748c:	cmp    DWORD PTR [rsi+0x18],eax
  42748f:	je     42749f <strcmp@plt+0x23ce7>
  427491:	jle    427475 <strcmp@plt+0x23cbd>
  427493:	nop    DWORD PTR [rax+rax*1+0x0]
  427498:	mov    ebx,0x1
  42749d:	jmp    427431 <strcmp@plt+0x23c79>
  42749f:	mov    r13,QWORD PTR [rsi+0x8]
  4274a3:	cmp    rsi,r13
  4274a6:	je     4274cd <strcmp@plt+0x23d15>
  4274a8:	mov    r14,0x424df0
  4274af:	nop
  4274b0:	mov    rdi,QWORD PTR [r13+0x10]
  4274b4:	mov    rdx,r14
  4274b7:	call   42d7a0 <strcmp@plt+0x29fe8>
  4274bc:	test   al,al
  4274be:	jne    427498 <strcmp@plt+0x23ce0>
  4274c0:	mov    r13,QWORD PTR [r13+0x8]
  4274c4:	mov    rsi,QWORD PTR [rbp+0x28]
  4274c8:	cmp    rsi,r13
  4274cb:	jne    4274b0 <strcmp@plt+0x23cf8>
  4274cd:	movzx  eax,WORD PTR [r12+0x10]
  4274d3:	cmp    WORD PTR [rbp+0x10],ax
  4274d7:	je     427431 <strcmp@plt+0x23c79>
  4274dd:	jbe    427475 <strcmp@plt+0x23cbd>
  4274df:	jmp    427498 <strcmp@plt+0x23ce0>
  4274e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4274ec:	nop    DWORD PTR [rax+0x0]
  4274f0:	test   rdi,rdi
  4274f3:	je     4274fe <strcmp@plt+0x23d46>
  4274f5:	mov    rdi,QWORD PTR [rdi+0x8]
  4274f9:	jmp    425110 <strcmp@plt+0x21958>
  4274fe:	sub    rsp,0x8
  427502:	call   4038d8 <strcmp@plt+0x120>
  427507:	nop    WORD PTR [rax+rax*1+0x0]
  427510:	test   rdi,rdi
  427513:	je     42751e <strcmp@plt+0x23d66>
  427515:	mov    rdi,QWORD PTR [rdi+0x8]
  427519:	jmp    425050 <strcmp@plt+0x21898>
  42751e:	sub    rsp,0x8
  427522:	call   4038d8 <strcmp@plt+0x120>
  427527:	nop    WORD PTR [rax+rax*1+0x0]
  427530:	push   rbp
  427531:	push   rbx
  427532:	sub    rsp,0x8
  427536:	test   rdi,rdi
  427539:	je     42755d <strcmp@plt+0x23da5>
  42753b:	mov    rbx,rdi
  42753e:	mov    rdi,QWORD PTR [rdi+0x8]
  427542:	call   424810 <strcmp@plt+0x21058>
  427547:	mov    rdi,QWORD PTR [rbx+0x10]
  42754b:	mov    ebp,eax
  42754d:	call   424810 <strcmp@plt+0x21058>
  427552:	add    rsp,0x8
  427556:	lea    eax,[rbp+rax*1+0x10]
  42755a:	pop    rbx
  42755b:	pop    rbp
  42755c:	ret    
  42755d:	call   4038d8 <strcmp@plt+0x120>
  427562:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42756d:	nop    DWORD PTR [rax]
  427570:	test   rdi,rdi
  427573:	push   rbx
  427574:	je     427594 <strcmp@plt+0x23ddc>
  427576:	mov    rbx,rdi
  427579:	mov    rdi,QWORD PTR [rdi+0x8]
  42757d:	call   424750 <strcmp@plt+0x20f98>
  427582:	mov    rdi,QWORD PTR [rbx+0x10]
  427586:	call   424750 <strcmp@plt+0x20f98>
  42758b:	mov    rdi,rbx
  42758e:	pop    rbx
  42758f:	jmp    4037b0 <free@plt>
  427594:	call   4038d8 <strcmp@plt+0x120>
  427599:	nop    DWORD PTR [rax+0x0]
  4275a0:	push   r13
  4275a2:	push   r12
  4275a4:	mov    edx,0x340
  4275a9:	push   rbp
  4275aa:	push   rbx
  4275ab:	sub    rsp,0x8
  4275af:	test   rsi,rsi
  4275b2:	mov    WORD PTR [rdi],dx
  4275b5:	mov    BYTE PTR [rdi+0x2],0x0
  4275b9:	mov    BYTE PTR [rdi+0x3],0x0
  4275bd:	mov    BYTE PTR [rdi+0x4],0x9
  4275c1:	mov    BYTE PTR [rdi+0x5],0x0
  4275c5:	je     427627 <strcmp@plt+0x23e6f>
  4275c7:	movbe  eax,DWORD PTR [rsi+0x4]
  4275cc:	mov    rbp,rsi
  4275cf:	lea    r12,[rdi+0x10]
  4275d3:	mov    rbx,rdi
  4275d6:	mov    DWORD PTR [rdi+0x8],eax
  4275d9:	xor    eax,eax
  4275db:	mov    WORD PTR [rdi+0xc],ax
  4275df:	movzx  eax,BYTE PTR [rsi]
  4275e2:	mov    BYTE PTR [rdi+0xe],al
  4275e5:	movzx  eax,BYTE PTR [rsi+0x1]
  4275e9:	mov    BYTE PTR [rdi+0xf],al
  4275ec:	mov    rsi,QWORD PTR [rsi+0x8]
  4275f0:	mov    rdi,r12
  4275f3:	call   424ca0 <strcmp@plt+0x214e8>
  4275f8:	mov    rsi,QWORD PTR [rbp+0x10]
  4275fc:	movsxd rdi,eax
  4275ff:	mov    r13,rdi
  427602:	add    rdi,r12
  427605:	call   424ca0 <strcmp@plt+0x214e8>
  42760a:	lea    edx,[r13+rax*1+0x8]
  42760f:	lea    eax,[r13+rax*1+0x10]
  427614:	rol    dx,0x8
  427618:	mov    WORD PTR [rbx+0x6],dx
  42761c:	add    rsp,0x8
  427620:	pop    rbx
  427621:	pop    rbp
  427622:	pop    r12
  427624:	pop    r13
  427626:	ret    
  427627:	call   403987 <strcmp@plt+0x1cf>
  42762c:	nop    DWORD PTR [rax+0x0]
  427630:	mov    eax,DWORD PTR [rip+0x4a38a]        # 4719c0 <strcmp@plt+0x6e208>
  427636:	mov    edx,0xcccccccd
  42763b:	push   r14
  42763d:	push   r13
  42763f:	push   r12
  427641:	push   rbp
  427642:	lea    rbp,[rip+0x49fb7]        # 471600 <strcmp@plt+0x6de48>
  427649:	push   rbx
  42764a:	lea    ecx,[rax+0x1]
  42764d:	mov    eax,ecx
  42764f:	mul    edx
  427651:	shr    edx,0x3
  427654:	lea    eax,[rdx+rdx*4]
  427657:	add    eax,eax
  427659:	sub    ecx,eax
  42765b:	mov    edx,ecx
  42765d:	lea    rax,[rdx+rdx*2]
  427661:	mov    DWORD PTR [rip+0x4a359],edx        # 4719c0 <strcmp@plt+0x6e208>
  427667:	shl    rax,0x5
  42766b:	test   rdi,rdi
  42766e:	mov    BYTE PTR [rbp+rax*1+0x0],0x0
  427673:	je     4276f0 <strcmp@plt+0x23f38>
  427675:	mov    rbx,rdi
  427678:	movzx  r14d,BYTE PTR [rdi]
  42767c:	mov    rdi,QWORD PTR [rdi+0x10]
  427680:	call   424890 <strcmp@plt+0x210d8>
  427685:	mov    rdi,QWORD PTR [rbx+0x8]
  427689:	movzx  r12d,BYTE PTR [rbx]
  42768d:	mov    r13,rax
  427690:	call   424890 <strcmp@plt+0x210d8>
  427695:	mov    edx,DWORD PTR [rip+0x4a325]        # 4719c0 <strcmp@plt+0x6e208>
  42769b:	sub    rsp,0x8
  42769f:	lea    r8,[rip+0x26bb4]        # 44e25a <strcmp@plt+0x4aaa2>
  4276a6:	push   r14
  4276a8:	push   r13
  4276aa:	mov    r9,rax
  4276ad:	push   r12
  4276af:	mov    rcx,0xffffffffffffffff
  4276b6:	mov    esi,0x60
  4276bb:	xor    eax,eax
  4276bd:	lea    rdi,[rdx+rdx*2]
  4276c1:	mov    edx,0x1
  4276c6:	shl    rdi,0x5
  4276ca:	add    rdi,rbp
  4276cd:	call   4032a0 <__snprintf_chk@plt>
  4276d2:	mov    eax,DWORD PTR [rip+0x4a2e8]        # 4719c0 <strcmp@plt+0x6e208>
  4276d8:	add    rsp,0x20
  4276dc:	pop    rbx
  4276dd:	lea    rax,[rax+rax*2]
  4276e1:	shl    rax,0x5
  4276e5:	add    rax,rbp
  4276e8:	pop    rbp
  4276e9:	pop    r12
  4276eb:	pop    r13
  4276ed:	pop    r14
  4276ef:	ret    
  4276f0:	call   4039aa <strcmp@plt+0x1f2>
  4276f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427700:	push   rbp
  427701:	push   rbx
  427702:	sub    rsp,0x8
  427706:	test   rdi,rdi
  427709:	je     427774 <strcmp@plt+0x23fbc>
  42770b:	test   rsi,rsi
  42770e:	mov    rbx,rdi
  427711:	mov    rbp,rsi
  427714:	mov    eax,DWORD PTR [rdi+0x4]
  427717:	je     427774 <strcmp@plt+0x23fbc>
  427719:	cmp    eax,DWORD PTR [rsi+0x4]
  42771c:	jne    427768 <strcmp@plt+0x23fb0>
  42771e:	movzx  eax,BYTE PTR [rsi]
  427721:	cmp    BYTE PTR [rdi],al
  427723:	jne    427768 <strcmp@plt+0x23fb0>
  427725:	movzx  eax,BYTE PTR [rsi+0x1]
  427729:	cmp    BYTE PTR [rdi+0x1],al
  42772c:	jne    427768 <strcmp@plt+0x23fb0>
  42772e:	mov    rsi,QWORD PTR [rsi+0x8]
  427732:	mov    rdi,QWORD PTR [rdi+0x8]
  427736:	call   424df0 <strcmp@plt+0x21638>
  42773b:	test   eax,eax
  42773d:	je     427750 <strcmp@plt+0x23f98>
  42773f:	add    rsp,0x8
  427743:	pop    rbx
  427744:	pop    rbp
  427745:	ret    
  427746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427750:	mov    rsi,QWORD PTR [rbp+0x10]
  427754:	mov    rdi,QWORD PTR [rbx+0x10]
  427758:	add    rsp,0x8
  42775c:	pop    rbx
  42775d:	pop    rbp
  42775e:	jmp    424df0 <strcmp@plt+0x21638>
  427763:	nop    DWORD PTR [rax+rax*1+0x0]
  427768:	add    rsp,0x8
  42776c:	mov    eax,0xffffffff
  427771:	pop    rbx
  427772:	pop    rbp
  427773:	ret    
  427774:	call   403987 <strcmp@plt+0x1cf>
  427779:	nop    DWORD PTR [rax+0x0]
  427780:	mov    eax,0x340
  427785:	test   rsi,rsi
  427788:	push   rbx
  427789:	mov    WORD PTR [rdi],ax
  42778c:	mov    BYTE PTR [rdi+0x2],0x0
  427790:	mov    BYTE PTR [rdi+0x3],0x0
  427794:	mov    BYTE PTR [rdi+0x4],0x2
  427798:	je     4277c8 <strcmp@plt+0x24010>
  42779a:	movzx  eax,BYTE PTR [rsi+0x4]
  42779e:	mov    rbx,rdi
  4277a1:	lea    rdi,[rdi+0xc]
  4277a5:	mov    BYTE PTR [rdi-0x7],al
  4277a8:	movbe  eax,DWORD PTR [rsi]
  4277ac:	mov    rsi,QWORD PTR [rsi+0x8]
  4277b0:	mov    DWORD PTR [rdi-0x4],eax
  4277b3:	call   424ca0 <strcmp@plt+0x214e8>
  4277b8:	lea    edx,[rax+0x4]
  4277bb:	add    eax,0xc
  4277be:	rol    dx,0x8
  4277c2:	mov    WORD PTR [rbx+0x6],dx
  4277c6:	pop    rbx
  4277c7:	ret    
  4277c8:	call   4039f0 <strcmp@plt+0x238>
  4277cd:	nop    DWORD PTR [rax]
  4277d0:	push   rbp
  4277d1:	push   rbx
  4277d2:	mov    edx,0xcccccccd
  4277d7:	lea    rbx,[rip+0x49a42]        # 471220 <strcmp@plt+0x6da68>
  4277de:	sub    rsp,0x8
  4277e2:	mov    eax,DWORD PTR [rip+0x49df8]        # 4715e0 <strcmp@plt+0x6de28>
  4277e8:	lea    ecx,[rax+0x1]
  4277eb:	mov    eax,ecx
  4277ed:	mul    edx
  4277ef:	shr    edx,0x3
  4277f2:	lea    eax,[rdx+rdx*4]
  4277f5:	add    eax,eax
  4277f7:	sub    ecx,eax
  4277f9:	mov    edx,ecx
  4277fb:	lea    rax,[rdx+rdx*2]
  4277ff:	mov    DWORD PTR [rip+0x49ddb],edx        # 4715e0 <strcmp@plt+0x6de28>
  427805:	shl    rax,0x5
  427809:	test   rdi,rdi
  42780c:	mov    BYTE PTR [rbx+rax*1],0x0
  427810:	je     427870 <strcmp@plt+0x240b8>
  427812:	mov    rbp,rdi
  427815:	mov    rdi,QWORD PTR [rdi+0x8]
  427819:	call   424890 <strcmp@plt+0x210d8>
  42781e:	mov    edx,DWORD PTR [rip+0x49dbc]        # 4715e0 <strcmp@plt+0x6de28>
  427824:	push   rax
  427825:	lea    r8,[rip+0x26a40]        # 44e26c <strcmp@plt+0x4aab4>
  42782c:	movzx  eax,BYTE PTR [rbp+0x4]
  427830:	mov    rcx,0xffffffffffffffff
  427837:	mov    esi,0x60
  42783c:	lea    rdi,[rdx+rdx*2]
  427840:	mov    edx,0x1
  427845:	push   rax
  427846:	mov    r9d,DWORD PTR [rbp+0x0]
  42784a:	xor    eax,eax
  42784c:	shl    rdi,0x5
  427850:	add    rdi,rbx
  427853:	call   4032a0 <__snprintf_chk@plt>
  427858:	mov    eax,DWORD PTR [rip+0x49d82]        # 4715e0 <strcmp@plt+0x6de28>
  42785e:	add    rsp,0x18
  427862:	lea    rax,[rax+rax*2]
  427866:	shl    rax,0x5
  42786a:	add    rax,rbx
  42786d:	pop    rbx
  42786e:	pop    rbp
  42786f:	ret    
  427870:	call   403a36 <strcmp@plt+0x27e>
  427875:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427880:	sub    rsp,0x8
  427884:	test   rdi,rdi
  427887:	je     42789a <strcmp@plt+0x240e2>
  427889:	mov    rdi,QWORD PTR [rdi+0x8]
  42788d:	call   424810 <strcmp@plt+0x21058>
  427892:	add    rsp,0x8
  427896:	add    eax,0xc
  427899:	ret    
  42789a:	call   403a36 <strcmp@plt+0x27e>
  42789f:	nop
  4278a0:	test   rdi,rdi
  4278a3:	push   rbx
  4278a4:	je     4278bb <strcmp@plt+0x24103>
  4278a6:	mov    rbx,rdi
  4278a9:	mov    rdi,QWORD PTR [rdi+0x8]
  4278ad:	call   424750 <strcmp@plt+0x20f98>
  4278b2:	mov    rdi,rbx
  4278b5:	pop    rbx
  4278b6:	jmp    4037b0 <free@plt>
  4278bb:	call   403a36 <strcmp@plt+0x27e>
  4278c0:	test   rdi,rdi
  4278c3:	je     4278f6 <strcmp@plt+0x2413e>
  4278c5:	test   rsi,rsi
  4278c8:	mov    eax,DWORD PTR [rdi]
  4278ca:	je     4278f6 <strcmp@plt+0x2413e>
  4278cc:	cmp    eax,DWORD PTR [rsi]
  4278ce:	je     4278e0 <strcmp@plt+0x24128>
  4278d0:	setbe  al
  4278d3:	movzx  eax,al
  4278d6:	add    eax,0x1
  4278d9:	ret    
  4278da:	nop    WORD PTR [rax+rax*1+0x0]
  4278e0:	movzx  eax,BYTE PTR [rsi+0x4]
  4278e4:	cmp    BYTE PTR [rdi+0x4],al
  4278e7:	jne    4278d0 <strcmp@plt+0x24118>
  4278e9:	mov    rsi,QWORD PTR [rsi+0x8]
  4278ed:	mov    rdi,QWORD PTR [rdi+0x8]
  4278f1:	jmp    424df0 <strcmp@plt+0x21638>
  4278f6:	sub    rsp,0x8
  4278fa:	call   403a13 <strcmp@plt+0x25b>
  4278ff:	nop
  427900:	push   r12
  427902:	push   rbp
  427903:	mov    r12,rsi
  427906:	push   rbx
  427907:	mov    rbx,rdi
  42790a:	mov    edi,0x10
  42790f:	call   434790 <strcmp@plt+0x30fd8>
  427914:	mov    rbp,rax
  427917:	xor    eax,eax
  427919:	call   424740 <strcmp@plt+0x20f88>
  42791e:	mov    QWORD PTR [rbp+0x8],rax
  427922:	mov    QWORD PTR [r12],rbp
  427926:	movzx  eax,BYTE PTR [rbx+0x5]
  42792a:	mov    BYTE PTR [rbp+0x4],al
  42792d:	mov    rax,QWORD PTR [r12]
  427931:	movbe  edx,DWORD PTR [rbx+0x8]
  427936:	test   rax,rax
  427939:	je     427952 <strcmp@plt+0x2419a>
  42793b:	mov    rsi,QWORD PTR [rax+0x8]
  42793f:	lea    rdi,[rbx+0xc]
  427943:	mov    DWORD PTR [rax],edx
  427945:	call   424d30 <strcmp@plt+0x21578>
  42794a:	pop    rbx
  42794b:	add    eax,0xc
  42794e:	pop    rbp
  42794f:	pop    r12
  427951:	ret    
  427952:	call   403a59 <strcmp@plt+0x2a1>
  427957:	nop    WORD PTR [rax+rax*1+0x0]
  427960:	push   r12
  427962:	push   rbp
  427963:	mov    r12,rsi
  427966:	push   rbx
  427967:	mov    esi,0x18
  42796c:	mov    rbx,rdi
  42796f:	mov    edi,0x1
  427974:	call   4032e0 <calloc@plt>
  427979:	mov    rbp,rax
  42797c:	xor    eax,eax
  42797e:	call   424740 <strcmp@plt+0x20f88>
  427983:	movzx  edx,BYTE PTR [rbx+0x9]
  427987:	movzx  ecx,BYTE PTR [rbx+0x8]
  42798b:	mov    QWORD PTR [r12],rbp
  42798f:	movzx  edi,BYTE PTR [rbx+0xa]
  427993:	movzx  esi,BYTE PTR [rbx+0xb]
  427997:	mov    QWORD PTR [rbp+0x10],rax
  42799b:	and    edx,0x7f
  42799e:	shl    rdx,0x8
  4279a2:	mov    BYTE PTR [rbp+0x4],dil
  4279a6:	movzx  edi,BYTE PTR [rbx+0xe]
  4279aa:	or     rdx,rcx
  4279ad:	movzx  ecx,BYTE PTR [rbx+0x9]
  4279b1:	mov    BYTE PTR [rbp+0x5],sil
  4279b5:	mov    WORD PTR [rbp+0x2],dx
  4279b9:	movzx  edx,BYTE PTR [rbx+0xd]
  4279bd:	movzx  esi,BYTE PTR [rbx+0xf]
  4279c1:	mov    BYTE PTR [rbp+0xa],dil
  4279c5:	lea    rdi,[rbx+0x14]
  4279c9:	shr    cl,0x7
  4279cc:	mov    BYTE PTR [rbp+0x0],cl
  4279cf:	movzx  ecx,BYTE PTR [rbx+0xc]
  4279d3:	and    edx,0x7f
  4279d6:	shl    rdx,0x8
  4279da:	mov    BYTE PTR [rbp+0xb],sil
  4279de:	mov    rsi,rax
  4279e1:	or     rdx,rcx
  4279e4:	movzx  ecx,BYTE PTR [rbx+0xd]
  4279e8:	mov    WORD PTR [rbp+0x8],dx
  4279ec:	mov    edx,DWORD PTR [rbx+0x10]
  4279ef:	shr    cl,0x7
  4279f2:	mov    DWORD PTR [rbp+0xc],edx
  4279f5:	mov    BYTE PTR [rbp+0x6],cl
  4279f8:	call   424d30 <strcmp@plt+0x21578>
  4279fd:	pop    rbx
  4279fe:	add    eax,0x14
  427a01:	pop    rbp
  427a02:	pop    r12
  427a04:	ret    
  427a05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427a10:	push   r14
  427a12:	push   r13
  427a14:	mov    r13d,0x8
  427a1a:	push   r12
  427a1c:	push   rbp
  427a1d:	mov    rbp,rdi
  427a20:	push   rbx
  427a21:	mov    edi,0x8
  427a26:	mov    rbx,rsi
  427a29:	add    rbp,0x8
  427a2d:	call   434790 <strcmp@plt+0x30fd8>
  427a32:	mov    rdi,0x426670
  427a39:	mov    r14,rax
  427a3c:	call   42d4f0 <strcmp@plt+0x29d38>
  427a41:	mov    QWORD PTR [r14],rax
  427a44:	mov    QWORD PTR [rbx],r14
  427a47:	movzx  ebx,WORD PTR [rbp-0x2]
  427a4b:	rol    bx,0x8
  427a4f:	movzx  ebx,bx
  427a52:	test   ebx,ebx
  427a54:	jne    427a80 <strcmp@plt+0x242c8>
  427a56:	jmp    427abf <strcmp@plt+0x24307>
  427a58:	nop    DWORD PTR [rax+rax*1+0x0]
  427a60:	mov    rsi,QWORD PTR [r14]
  427a63:	sub    ebx,0x4
  427a66:	movsxd rdx,eax
  427a69:	sub    ebx,eax
  427a6b:	mov    rdi,r12
  427a6e:	add    rbp,rdx
  427a71:	lea    r13d,[rax+r13*1+0x4]
  427a76:	call   42d6d0 <strcmp@plt+0x29f18>
  427a7b:	cmp    ebx,0x0
  427a7e:	jle    427ad0 <strcmp@plt+0x24318>
  427a80:	mov    edi,0x10
  427a85:	add    rbp,0x4
  427a89:	call   434790 <strcmp@plt+0x30fd8>
  427a8e:	mov    r12,rax
  427a91:	movzx  eax,BYTE PTR [rbp-0x1]
  427a95:	mov    BYTE PTR [r12+0x8],al
  427a9a:	xor    eax,eax
  427a9c:	call   424740 <strcmp@plt+0x20f88>
  427aa1:	mov    rdi,rbp
  427aa4:	mov    QWORD PTR [r12],rax
  427aa8:	mov    rsi,rax
  427aab:	call   424d30 <strcmp@plt+0x21578>
  427ab0:	test   eax,eax
  427ab2:	jg     427a60 <strcmp@plt+0x242a8>
  427ab4:	mov    rdi,QWORD PTR [r14]
  427ab7:	xor    r13d,r13d
  427aba:	call   42dac0 <strcmp@plt+0x2a308>
  427abf:	pop    rbx
  427ac0:	mov    eax,r13d
  427ac3:	pop    rbp
  427ac4:	pop    r12
  427ac6:	pop    r13
  427ac8:	pop    r14
  427aca:	ret    
  427acb:	nop    DWORD PTR [rax+rax*1+0x0]
  427ad0:	je     427abf <strcmp@plt+0x24307>
  427ad2:	mov    rax,0x468e3c
  427ad9:	mov    eax,DWORD PTR [rax]
  427adb:	test   eax,eax
  427add:	jle    427abf <strcmp@plt+0x24307>
  427adf:	lea    rsi,[rip+0x26432]        # 44df18 <strcmp@plt+0x4a760>
  427ae6:	xor    eax,eax
  427ae8:	mov    edi,0x5
  427aed:	call   4306a0 <strcmp@plt+0x2cee8>
  427af2:	pop    rbx
  427af3:	mov    eax,r13d
  427af6:	pop    rbp
  427af7:	pop    r12
  427af9:	pop    r13
  427afb:	pop    r14
  427afd:	ret    
  427afe:	xchg   ax,ax
  427b00:	push   r12
  427b02:	push   rbp
  427b03:	mov    r12,rsi
  427b06:	push   rbx
  427b07:	cmp    QWORD PTR [rdi],0x0
  427b0b:	mov    rbp,rdi
  427b0e:	je     427b47 <strcmp@plt+0x2438f>
  427b10:	mov    rax,QWORD PTR [r12]
  427b14:	mov    rbx,QWORD PTR [rax+0x8]
  427b18:	cmp    rax,rbx
  427b1b:	je     427b42 <strcmp@plt+0x2438a>
  427b1d:	nop    DWORD PTR [rax]
  427b20:	mov    rdi,QWORD PTR [rbx+0x10]
  427b24:	call   424b80 <strcmp@plt+0x213c8>
  427b29:	mov    rdx,QWORD PTR [rbp+0x0]
  427b2d:	mov    rdi,rax
  427b30:	mov    rsi,QWORD PTR [rdx]
  427b33:	call   42d6d0 <strcmp@plt+0x29f18>
  427b38:	mov    rbx,QWORD PTR [rbx+0x8]
  427b3c:	cmp    QWORD PTR [r12],rbx
  427b40:	jne    427b20 <strcmp@plt+0x24368>
  427b42:	pop    rbx
  427b43:	pop    rbp
  427b44:	pop    r12
  427b46:	ret    
  427b47:	mov    edi,0x8
  427b4c:	call   434790 <strcmp@plt+0x30fd8>
  427b51:	mov    rdi,0x424750
  427b58:	mov    rbx,rax
  427b5b:	call   42d4f0 <strcmp@plt+0x29d38>
  427b60:	mov    QWORD PTR [rbx],rax
  427b63:	mov    QWORD PTR [rbp+0x0],rbx
  427b67:	jmp    427b10 <strcmp@plt+0x24358>
  427b69:	nop    DWORD PTR [rax+0x0]
  427b70:	push   r15
  427b72:	push   r14
  427b74:	mov    r15,rdi
  427b77:	push   r13
  427b79:	push   r12
  427b7b:	push   rbp
  427b7c:	push   rbx
  427b7d:	sub    rsp,0x8
  427b81:	mov    r14,QWORD PTR [rsi]
  427b84:	test   r14,r14
  427b87:	je     427c1d <strcmp@plt+0x24465>
  427b8d:	movzx  r12d,WORD PTR [r15+0x6]
  427b92:	lea    r13,[r15+0x8]
  427b96:	rol    r12w,0x8
  427b9b:	movzx  r12d,r12w
  427b9f:	test   r12d,r12d
  427ba2:	jne    427bda <strcmp@plt+0x24422>
  427ba4:	jmp    427c08 <strcmp@plt+0x24450>
  427ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427bb0:	mov    rsi,rax
  427bb3:	mov    rdi,r13
  427bb6:	call   424d30 <strcmp@plt+0x21578>
  427bbb:	mov    rsi,QWORD PTR [r14]
  427bbe:	mov    ebp,eax
  427bc0:	mov    rdi,rbx
  427bc3:	call   42d6d0 <strcmp@plt+0x29f18>
  427bc8:	test   ebp,ebp
  427bca:	jle    427be9 <strcmp@plt+0x24431>
  427bcc:	movsxd rax,ebp
  427bcf:	sub    r12d,ebp
  427bd2:	add    r13,rax
  427bd5:	test   r12d,r12d
  427bd8:	jle    427c08 <strcmp@plt+0x24450>
  427bda:	xor    eax,eax
  427bdc:	call   424740 <strcmp@plt+0x20f88>
  427be1:	test   rax,rax
  427be4:	mov    rbx,rax
  427be7:	jne    427bb0 <strcmp@plt+0x243f8>
  427be9:	mov    rdi,r14
  427bec:	call   426d80 <strcmp@plt+0x235c8>
  427bf1:	add    rsp,0x8
  427bf5:	xor    eax,eax
  427bf7:	pop    rbx
  427bf8:	pop    rbp
  427bf9:	pop    r12
  427bfb:	pop    r13
  427bfd:	pop    r14
  427bff:	pop    r15
  427c01:	ret    
  427c02:	nop    WORD PTR [rax+rax*1+0x0]
  427c08:	add    rsp,0x8
  427c0c:	mov    eax,r13d
  427c0f:	pop    rbx
  427c10:	sub    eax,r15d
  427c13:	pop    rbp
  427c14:	pop    r12
  427c16:	pop    r13
  427c18:	pop    r14
  427c1a:	pop    r15
  427c1c:	ret    
  427c1d:	mov    edi,0x8
  427c22:	call   434790 <strcmp@plt+0x30fd8>
  427c27:	mov    rdi,0x424750
  427c2e:	mov    r14,rax
  427c31:	call   42d4f0 <strcmp@plt+0x29d38>
  427c36:	mov    QWORD PTR [r14],rax
  427c39:	jmp    427b8d <strcmp@plt+0x243d5>
  427c3e:	xchg   ax,ax
  427c40:	push   r12
  427c42:	push   rbp
  427c43:	mov    r12,rsi
  427c46:	push   rbx
  427c47:	mov    esi,0x18
  427c4c:	mov    rbx,rdi
  427c4f:	mov    edi,0x1
  427c54:	add    rbx,0x10
  427c58:	call   4032e0 <calloc@plt>
  427c5d:	mov    rbp,rax
  427c60:	xor    eax,eax
  427c62:	call   424740 <strcmp@plt+0x20f88>
  427c67:	mov    QWORD PTR [rbp+0x8],rax
  427c6b:	xor    eax,eax
  427c6d:	call   424740 <strcmp@plt+0x20f88>
  427c72:	mov    QWORD PTR [rbp+0x10],rax
  427c76:	movbe  eax,DWORD PTR [rbx-0x8]
  427c7b:	mov    QWORD PTR [r12],rbp
  427c7f:	mov    rsi,QWORD PTR [rbp+0x8]
  427c83:	mov    DWORD PTR [rbp+0x4],eax
  427c86:	movzx  eax,BYTE PTR [rbx-0x2]
  427c8a:	mov    BYTE PTR [rbp+0x0],al
  427c8d:	movzx  eax,BYTE PTR [rbx-0x1]
  427c91:	mov    rdi,rbx
  427c94:	mov    BYTE PTR [rbp+0x1],al
  427c97:	call   424d30 <strcmp@plt+0x21578>
  427c9c:	movsxd rdi,eax
  427c9f:	mov    rax,QWORD PTR [r12]
  427ca3:	mov    rbp,rdi
  427ca6:	add    rdi,rbx
  427ca9:	test   rax,rax
  427cac:	je     427cc0 <strcmp@plt+0x24508>
  427cae:	mov    rsi,QWORD PTR [rax+0x10]
  427cb2:	call   424d30 <strcmp@plt+0x21578>
  427cb7:	pop    rbx
  427cb8:	lea    eax,[rbp+rax*1+0x10]
  427cbc:	pop    rbp
  427cbd:	pop    r12
  427cbf:	ret    
  427cc0:	call   40391e <strcmp@plt+0x166>
  427cc5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427cd0:	test   rsi,rsi
  427cd3:	push   r12
  427cd5:	push   rbp
  427cd6:	push   rbx
  427cd7:	je     427d7e <strcmp@plt+0x245c6>
  427cdd:	mov    rax,QWORD PTR [rdi]
  427ce0:	mov    r12,rdi
  427ce3:	mov    rbx,rsi
  427ce6:	test   rax,rax
  427ce9:	je     427d50 <strcmp@plt+0x24598>
  427ceb:	movzx  edx,BYTE PTR [rbx]
  427cee:	mov    BYTE PTR [rax],dl
  427cf0:	movzx  edx,WORD PTR [rbx+0x2]
  427cf4:	mov    WORD PTR [rax+0x2],dx
  427cf8:	movzx  edx,BYTE PTR [rbx+0x4]
  427cfc:	mov    BYTE PTR [rax+0x4],dl
  427cff:	movzx  edx,BYTE PTR [rbx+0x5]
  427d03:	mov    BYTE PTR [rax+0x5],dl
  427d06:	mov    rax,QWORD PTR [r12]
  427d0a:	test   rax,rax
  427d0d:	je     427d79 <strcmp@plt+0x245c1>
  427d0f:	movzx  edx,BYTE PTR [rbx+0x6]
  427d13:	mov    BYTE PTR [rax+0x6],dl
  427d16:	movzx  edx,WORD PTR [rbx+0x8]
  427d1a:	mov    WORD PTR [rax+0x8],dx
  427d1e:	movzx  edx,BYTE PTR [rbx+0xa]
  427d22:	mov    BYTE PTR [rax+0xa],dl
  427d25:	movzx  edx,BYTE PTR [rbx+0xb]
  427d29:	mov    BYTE PTR [rax+0xb],dl
  427d2c:	mov    rax,QWORD PTR [r12]
  427d30:	mov    edx,DWORD PTR [rbx+0xc]
  427d33:	test   rax,rax
  427d36:	je     427d9d <strcmp@plt+0x245e5>
  427d38:	mov    DWORD PTR [rax+0xc],edx
  427d3b:	mov    rsi,QWORD PTR [rbx+0x10]
  427d3f:	pop    rbx
  427d40:	pop    rbp
  427d41:	pop    r12
  427d43:	mov    rdi,QWORD PTR [rax+0x10]
  427d47:	jmp    424b00 <strcmp@plt+0x21348>
  427d4c:	nop    DWORD PTR [rax+0x0]
  427d50:	mov    esi,0x18
  427d55:	mov    edi,0x1
  427d5a:	call   4032e0 <calloc@plt>
  427d5f:	mov    rbp,rax
  427d62:	xor    eax,eax
  427d64:	call   424740 <strcmp@plt+0x20f88>
  427d69:	mov    QWORD PTR [r12],rbp
  427d6d:	mov    QWORD PTR [rbp+0x10],rax
  427d71:	mov    rax,rbp
  427d74:	jmp    427ceb <strcmp@plt+0x24533>
  427d79:	call   403b08 <strcmp@plt+0x350>
  427d7e:	lea    rcx,[rip+0x2654b]        # 44e2d0 <strcmp@plt+0x4ab18>
  427d85:	lea    rsi,[rip+0x264aa]        # 44e236 <strcmp@plt+0x4aa7e>
  427d8c:	lea    rdi,[rip+0x264bf]        # 44e252 <strcmp@plt+0x4aa9a>
  427d93:	mov    edx,0x43e
  427d98:	call   4032c0 <__assert_fail@plt>
  427d9d:	call   403b2b <strcmp@plt+0x373>
  427da2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427dad:	nop    DWORD PTR [rax]
  427db0:	push   r14
  427db2:	push   r13
  427db4:	push   r12
  427db6:	push   rbp
  427db7:	mov    r12,rsi
  427dba:	push   rbx
  427dbb:	mov    rbx,rdi
  427dbe:	mov    edi,0x30
  427dc3:	add    rbx,0xc
  427dc7:	call   434790 <strcmp@plt+0x30fd8>
  427dcc:	mov    rbp,rax
  427dcf:	xor    eax,eax
  427dd1:	call   424740 <strcmp@plt+0x20f88>
  427dd6:	mov    QWORD PTR [rbp+0x18],rax
  427dda:	xor    eax,eax
  427ddc:	call   424740 <strcmp@plt+0x20f88>
  427de1:	mov    QWORD PTR [rbp+0x8],rax
  427de5:	xor    eax,eax
  427de7:	call   424740 <strcmp@plt+0x20f88>
  427dec:	mov    rdi,0x424750
  427df3:	mov    QWORD PTR [rbp+0x20],rax
  427df7:	call   42d4f0 <strcmp@plt+0x29d38>
  427dfc:	mov    QWORD PTR [rbp+0x28],rax
  427e00:	movzx  eax,WORD PTR [rbx-0x4]
  427e04:	movzx  r13d,WORD PTR [rbx-0x6]
  427e09:	mov    QWORD PTR [r12],rbp
  427e0d:	mov    rsi,QWORD PTR [rbp+0x8]
  427e11:	mov    WORD PTR [rbp+0x10],ax
  427e15:	movzx  eax,WORD PTR [rbx-0x2]
  427e19:	mov    rdi,rbx
  427e1c:	rol    r13w,0x8
  427e21:	mov    WORD PTR [rbp+0x0],ax
  427e25:	call   424d30 <strcmp@plt+0x21578>
  427e2a:	test   eax,eax
  427e2c:	jle    427eb8 <strcmp@plt+0x24700>
  427e32:	mov    r12d,eax
  427e35:	mov    rsi,QWORD PTR [rbp+0x18]
  427e39:	cdqe   
  427e3b:	add    rbx,rax
  427e3e:	mov    rdi,rbx
  427e41:	call   424d30 <strcmp@plt+0x21578>
  427e46:	test   eax,eax
  427e48:	mov    r14d,eax
  427e4b:	jle    427eb8 <strcmp@plt+0x24700>
  427e4d:	cdqe   
  427e4f:	mov    rsi,QWORD PTR [rbp+0x20]
  427e53:	add    rbx,rax
  427e56:	mov    rdi,rbx
  427e59:	call   424d30 <strcmp@plt+0x21578>
  427e5e:	test   eax,eax
  427e60:	jle    427eb8 <strcmp@plt+0x24700>
  427e62:	lea    r12d,[r12+r14*1+0xc]
  427e67:	movzx  r13d,r13w
  427e6b:	add    r13d,0x8
  427e6f:	add    r12d,eax
  427e72:	cdqe   
  427e74:	add    rbx,rax
  427e77:	cmp    r13d,r12d
  427e7a:	jg     427e99 <strcmp@plt+0x246e1>
  427e7c:	jmp    427ee7 <strcmp@plt+0x2472f>
  427e7e:	xchg   ax,ax
  427e80:	mov    rsi,QWORD PTR [rbp+0x28]
  427e84:	add    r12d,eax
  427e87:	mov    rdi,r14
  427e8a:	cdqe   
  427e8c:	add    rbx,rax
  427e8f:	call   42d6d0 <strcmp@plt+0x29f18>
  427e94:	cmp    r13d,r12d
  427e97:	jle    427ee7 <strcmp@plt+0x2472f>
  427e99:	xor    eax,eax
  427e9b:	call   424740 <strcmp@plt+0x20f88>
  427ea0:	mov    rdi,rbx
  427ea3:	mov    rsi,rax
  427ea6:	mov    r14,rax
  427ea9:	call   424d30 <strcmp@plt+0x21578>
  427eae:	test   eax,eax
  427eb0:	jg     427e80 <strcmp@plt+0x246c8>
  427eb2:	nop    WORD PTR [rax+rax*1+0x0]
  427eb8:	mov    rdi,QWORD PTR [rbp+0x18]
  427ebc:	xor    r12d,r12d
  427ebf:	call   424750 <strcmp@plt+0x20f98>
  427ec4:	mov    rdi,QWORD PTR [rbp+0x8]
  427ec8:	call   424750 <strcmp@plt+0x20f98>
  427ecd:	mov    rdi,QWORD PTR [rbp+0x20]
  427ed1:	call   424750 <strcmp@plt+0x20f98>
  427ed6:	mov    rdi,QWORD PTR [rbp+0x28]
  427eda:	call   42dac0 <strcmp@plt+0x2a308>
  427edf:	mov    rdi,rbp
  427ee2:	call   4037b0 <free@plt>
  427ee7:	pop    rbx
  427ee8:	mov    eax,r12d
  427eeb:	pop    rbp
  427eec:	pop    r12
  427eee:	pop    r13
  427ef0:	pop    r14
  427ef2:	ret    
  427ef3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427efe:	xchg   ax,ax
  427f00:	push   r12
  427f02:	push   rbp
  427f03:	mov    rbp,rdi
  427f06:	push   rbx
  427f07:	mov    rax,QWORD PTR [rdi]
  427f0a:	mov    rbx,rsi
  427f0d:	test   rax,rax
  427f10:	je     427f70 <strcmp@plt+0x247b8>
  427f12:	test   rsi,rsi
  427f15:	je     427fae <strcmp@plt+0x247f6>
  427f1b:	mov    edx,DWORD PTR [rbx+0x4]
  427f1e:	mov    DWORD PTR [rax+0x4],edx
  427f21:	movzx  edx,BYTE PTR [rbx]
  427f24:	mov    BYTE PTR [rax],dl
  427f26:	mov    rax,QWORD PTR [rbp+0x0]
  427f2a:	movzx  edx,BYTE PTR [rbx+0x1]
  427f2e:	test   rax,rax
  427f31:	je     427fbd <strcmp@plt+0x24805>
  427f37:	mov    BYTE PTR [rax+0x1],dl
  427f3a:	mov    rax,QWORD PTR [rbp+0x0]
  427f3e:	mov    rsi,QWORD PTR [rbx+0x8]
  427f42:	test   rax,rax
  427f45:	je     427fb8 <strcmp@plt+0x24800>
  427f47:	mov    rdi,QWORD PTR [rax+0x8]
  427f4b:	call   424b00 <strcmp@plt+0x21348>
  427f50:	mov    rax,QWORD PTR [rbp+0x0]
  427f54:	mov    rsi,QWORD PTR [rbx+0x10]
  427f58:	test   rax,rax
  427f5b:	je     427fb3 <strcmp@plt+0x247fb>
  427f5d:	pop    rbx
  427f5e:	pop    rbp
  427f5f:	pop    r12
  427f61:	mov    rdi,QWORD PTR [rax+0x10]
  427f65:	jmp    424b00 <strcmp@plt+0x21348>
  427f6a:	nop    WORD PTR [rax+rax*1+0x0]
  427f70:	mov    esi,0x18
  427f75:	mov    edi,0x1
  427f7a:	call   4032e0 <calloc@plt>
  427f7f:	mov    r12,rax
  427f82:	xor    eax,eax
  427f84:	call   424740 <strcmp@plt+0x20f88>
  427f89:	mov    QWORD PTR [r12+0x8],rax
  427f8e:	xor    eax,eax
  427f90:	call   424740 <strcmp@plt+0x20f88>
  427f95:	test   rbx,rbx
  427f98:	mov    QWORD PTR [r12+0x10],rax
  427f9d:	mov    QWORD PTR [rbp+0x0],r12
  427fa1:	je     427fae <strcmp@plt+0x247f6>
  427fa3:	mov    edx,DWORD PTR [rbx+0x4]
  427fa6:	mov    rax,r12
  427fa9:	jmp    427f1e <strcmp@plt+0x24766>
  427fae:	call   403987 <strcmp@plt+0x1cf>
  427fb3:	call   40391e <strcmp@plt+0x166>
  427fb8:	call   4038d8 <strcmp@plt+0x120>
  427fbd:	call   403892 <strcmp@plt+0xda>
  427fc2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427fcd:	nop    DWORD PTR [rax]
  427fd0:	push   r12
  427fd2:	push   rbp
  427fd3:	mov    r12,rsi
  427fd6:	push   rbx
  427fd7:	mov    rbp,QWORD PTR [rdi]
  427fda:	test   rbp,rbp
  427fdd:	je     42805d <strcmp@plt+0x248a5>
  427fdf:	movzx  eax,WORD PTR [r12]
  427fe4:	mov    rsi,QWORD PTR [r12+0x8]
  427fe9:	mov    rdi,QWORD PTR [rbp+0x8]
  427fed:	mov    WORD PTR [rbp+0x0],ax
  427ff1:	movzx  eax,WORD PTR [r12+0x10]
  427ff7:	mov    WORD PTR [rbp+0x10],ax
  427ffb:	call   424b00 <strcmp@plt+0x21348>
  428000:	mov    rsi,QWORD PTR [r12+0x18]
  428005:	mov    rdi,QWORD PTR [rbp+0x18]
  428009:	call   424b00 <strcmp@plt+0x21348>
  42800e:	mov    rsi,QWORD PTR [r12+0x20]
  428013:	mov    rdi,QWORD PTR [rbp+0x20]
  428017:	call   424b00 <strcmp@plt+0x21348>
  42801c:	mov    rdi,QWORD PTR [rbp+0x28]
  428020:	call   42da80 <strcmp@plt+0x2a2c8>
  428025:	mov    rax,QWORD PTR [r12+0x28]
  42802a:	mov    rbx,QWORD PTR [rax+0x8]
  42802e:	cmp    rax,rbx
  428031:	je     428058 <strcmp@plt+0x248a0>
  428033:	nop    DWORD PTR [rax+rax*1+0x0]
  428038:	mov    rdi,QWORD PTR [rbx+0x10]
  42803c:	call   424b80 <strcmp@plt+0x213c8>
  428041:	mov    rsi,QWORD PTR [rbp+0x28]
  428045:	mov    rdi,rax
  428048:	call   42d540 <strcmp@plt+0x29d88>
  42804d:	mov    rbx,QWORD PTR [rbx+0x8]
  428051:	cmp    QWORD PTR [r12+0x28],rbx
  428056:	jne    428038 <strcmp@plt+0x24880>
  428058:	pop    rbx
  428059:	pop    rbp
  42805a:	pop    r12
  42805c:	ret    
  42805d:	mov    rbx,rdi
  428060:	mov    edi,0x30
  428065:	call   434790 <strcmp@plt+0x30fd8>
  42806a:	mov    rbp,rax
  42806d:	xor    eax,eax
  42806f:	call   424740 <strcmp@plt+0x20f88>
  428074:	mov    QWORD PTR [rbp+0x18],rax
  428078:	xor    eax,eax
  42807a:	call   424740 <strcmp@plt+0x20f88>
  42807f:	mov    QWORD PTR [rbp+0x8],rax
  428083:	xor    eax,eax
  428085:	call   424740 <strcmp@plt+0x20f88>
  42808a:	mov    rdi,0x424750
  428091:	mov    QWORD PTR [rbp+0x20],rax
  428095:	call   42d4f0 <strcmp@plt+0x29d38>
  42809a:	mov    QWORD PTR [rbp+0x28],rax
  42809e:	mov    QWORD PTR [rbx],rbp
  4280a1:	jmp    427fdf <strcmp@plt+0x24827>
  4280a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4280b0:	mov    edi,0x10
  4280b5:	jmp    434790 <strcmp@plt+0x30fd8>
  4280ba:	nop    WORD PTR [rax+rax*1+0x0]
  4280c0:	push   rbp
  4280c1:	push   rbx
  4280c2:	mov    ebp,edi
  4280c4:	mov    edi,0x10
  4280c9:	sub    rsp,0x8
  4280cd:	call   434790 <strcmp@plt+0x30fd8>
  4280d2:	test   rax,rax
  4280d5:	je     42814e <strcmp@plt+0x24996>
  4280d7:	mov    rbx,rax
  4280da:	cmp    bpl,0x2
  4280de:	movzx  eax,bpl
  4280e2:	mov    DWORD PTR [rbx],eax
  4280e4:	je     428128 <strcmp@plt+0x24970>
  4280e6:	cmp    bpl,0x9
  4280ea:	jne    428118 <strcmp@plt+0x24960>
  4280ec:	mov    esi,0x18
  4280f1:	mov    edi,0x1
  4280f6:	call   4032e0 <calloc@plt>
  4280fb:	mov    rbp,rax
  4280fe:	xor    eax,eax
  428100:	call   424740 <strcmp@plt+0x20f88>
  428105:	mov    QWORD PTR [rbp+0x8],rax
  428109:	xor    eax,eax
  42810b:	call   424740 <strcmp@plt+0x20f88>
  428110:	mov    QWORD PTR [rbp+0x10],rax
  428114:	mov    QWORD PTR [rbx+0x8],rbp
  428118:	add    rsp,0x8
  42811c:	mov    rax,rbx
  42811f:	pop    rbx
  428120:	pop    rbp
  428121:	ret    
  428122:	nop    WORD PTR [rax+rax*1+0x0]
  428128:	mov    edi,0x10
  42812d:	call   434790 <strcmp@plt+0x30fd8>
  428132:	mov    rbp,rax
  428135:	xor    eax,eax
  428137:	call   424740 <strcmp@plt+0x20f88>
  42813c:	mov    QWORD PTR [rbp+0x8],rax
  428140:	mov    QWORD PTR [rbx+0x8],rbp
  428144:	add    rsp,0x8
  428148:	mov    rax,rbx
  42814b:	pop    rbx
  42814c:	pop    rbp
  42814d:	ret    
  42814e:	call   40386f <strcmp@plt+0xb7>
  428153:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42815e:	xchg   ax,ax
  428160:	mov    rax,rdi
  428163:	mov    rdi,QWORD PTR [rdi+0x8]
  428167:	test   rdi,rdi
  42816a:	je     428180 <strcmp@plt+0x249c8>
  42816c:	mov    edx,DWORD PTR [rax]
  42816e:	mov    rax,0x468d40
  428175:	mov    rax,QWORD PTR [rax+rdx*8]
  428179:	test   rax,rax
  42817c:	je     428180 <strcmp@plt+0x249c8>
  42817e:	jmp    rax
  428180:	repz ret 
  428182:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42818d:	nop    DWORD PTR [rax]
  428190:	test   rdi,rdi
  428193:	push   rbx
  428194:	je     4281c2 <strcmp@plt+0x24a0a>
  428196:	mov    edx,DWORD PTR [rdi]
  428198:	mov    rax,0x468d40
  42819f:	mov    rbx,rdi
  4281a2:	mov    rax,QWORD PTR [rax+rdx*8]
  4281a6:	test   rax,rax
  4281a9:	je     4281c0 <strcmp@plt+0x24a08>
  4281ab:	mov    rdi,QWORD PTR [rdi+0x8]
  4281af:	call   rax
  4281b1:	mov    rdi,rbx
  4281b4:	pop    rbx
  4281b5:	jmp    4037b0 <free@plt>
  4281ba:	nop    WORD PTR [rax+rax*1+0x0]
  4281c0:	pop    rbx
  4281c1:	ret    
  4281c2:	lea    rcx,[rip+0x265bf]        # 44e788 <strcmp@plt+0x4afd0>
  4281c9:	lea    rsi,[rip+0x26066]        # 44e236 <strcmp@plt+0x4aa7e>
  4281d0:	lea    rdi,[rip+0x26073]        # 44e24a <strcmp@plt+0x4aa92>
  4281d7:	mov    edx,0xa4
  4281dc:	call   4032c0 <__assert_fail@plt>
  4281e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4281ec:	nop    DWORD PTR [rax+0x0]
  4281f0:	push   rbp
  4281f1:	push   rbx
  4281f2:	sub    rsp,0x8
  4281f6:	test   rsi,rsi
  4281f9:	je     4282b0 <strcmp@plt+0x24af8>
  4281ff:	cmp    QWORD PTR [rsi+0x8],0x0
  428204:	mov    rbp,rdi
  428207:	mov    rbx,rsi
  42820a:	je     428214 <strcmp@plt+0x24a5c>
  42820c:	mov    rdi,rsi
  42820f:	call   428160 <strcmp@plt+0x249a8>
  428214:	movzx  ecx,BYTE PTR [rbp+0x4]
  428218:	mov    rax,0x468cc0
  42821f:	mov    rax,QWORD PTR [rax+rcx*8]
  428223:	mov    rdx,rcx
  428226:	mov    DWORD PTR [rbx],ecx
  428228:	test   rax,rax
  42822b:	je     428288 <strcmp@plt+0x24ad0>
  42822d:	lea    rsi,[rbx+0x8]
  428231:	mov    rdi,rbp
  428234:	call   rax
  428236:	movzx  edx,WORD PTR [rbp+0x6]
  42823a:	movsxd rsi,eax
  42823d:	rol    dx,0x8
  428241:	movzx  ecx,dx
  428244:	add    rcx,0x8
  428248:	cmp    rsi,rcx
  42824b:	je     42825b <strcmp@plt+0x24aa3>
  42824d:	mov    rcx,0x468e3c
  428254:	cmp    DWORD PTR [rcx],0x2
  428257:	jg     428268 <strcmp@plt+0x24ab0>
  428259:	xor    eax,eax
  42825b:	add    rsp,0x8
  42825f:	pop    rbx
  428260:	pop    rbp
  428261:	ret    
  428262:	nop    WORD PTR [rax+rax*1+0x0]
  428268:	lea    rsi,[rip+0x25d11]        # 44df80 <strcmp@plt+0x4a7c8>
  42826f:	mov    ecx,eax
  428271:	movzx  edx,dx
  428274:	mov    edi,0x7
  428279:	xor    eax,eax
  42827b:	call   4306a0 <strcmp@plt+0x2cee8>
  428280:	jmp    428259 <strcmp@plt+0x24aa1>
  428282:	nop    WORD PTR [rax+rax*1+0x0]
  428288:	mov    rax,0x468e3c
  42828f:	cmp    DWORD PTR [rax],0x2
  428292:	jle    428259 <strcmp@plt+0x24aa1>
  428294:	lea    rsi,[rip+0x25cad]        # 44df48 <strcmp@plt+0x4a790>
  42829b:	xor    eax,eax
  42829d:	mov    edi,0x7
  4282a2:	call   4306a0 <strcmp@plt+0x2cee8>
  4282a7:	add    rsp,0x8
  4282ab:	xor    eax,eax
  4282ad:	pop    rbx
  4282ae:	pop    rbp
  4282af:	ret    
  4282b0:	call   4037e3 <strcmp@plt+0x2b>
  4282b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4282c0:	test   rdi,rdi
  4282c3:	je     4282e8 <strcmp@plt+0x24b30>
  4282c5:	mov    edx,DWORD PTR [rdi]
  4282c7:	mov    rax,0x468c40
  4282ce:	mov    rax,QWORD PTR [rax+rdx*8]
  4282d2:	test   rax,rax
  4282d5:	je     4282e0 <strcmp@plt+0x24b28>
  4282d7:	mov    rdi,QWORD PTR [rdi+0x8]
  4282db:	jmp    rax
  4282dd:	nop    DWORD PTR [rax]
  4282e0:	lea    rax,[rip+0x25fa2]        # 44e289 <strcmp@plt+0x4aad1>
  4282e7:	ret    
  4282e8:	lea    rcx,[rip+0x26481]        # 44e770 <strcmp@plt+0x4afb8>
  4282ef:	lea    rsi,[rip+0x25f40]        # 44e236 <strcmp@plt+0x4aa7e>
  4282f6:	lea    rdi,[rip+0x25f4d]        # 44e24a <strcmp@plt+0x4aa92>
  4282fd:	sub    rsp,0x8
  428301:	mov    edx,0xd0
  428306:	call   4032c0 <__assert_fail@plt>
  42830b:	nop    DWORD PTR [rax+rax*1+0x0]
  428310:	test   rdi,rdi
  428313:	je     428318 <strcmp@plt+0x24b60>
  428315:	mov    eax,DWORD PTR [rdi]
  428317:	ret    
  428318:	sub    rsp,0x8
  42831c:	call   403806 <strcmp@plt+0x4e>
  428321:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42832c:	nop    DWORD PTR [rax+0x0]
  428330:	test   rdi,rdi
  428333:	je     42833a <strcmp@plt+0x24b82>
  428335:	mov    rax,QWORD PTR [rdi+0x8]
  428339:	ret    
  42833a:	lea    rcx,[rip+0x263ef]        # 44e730 <strcmp@plt+0x4af78>
  428341:	lea    rsi,[rip+0x25eee]        # 44e236 <strcmp@plt+0x4aa7e>
  428348:	lea    rdi,[rip+0x25efb]        # 44e24a <strcmp@plt+0x4aa92>
  42834f:	sub    rsp,0x8
  428353:	mov    edx,0xe2
  428358:	call   4032c0 <__assert_fail@plt>
  42835d:	nop    DWORD PTR [rax]
  428360:	test   rdi,rdi
  428363:	je     42836a <strcmp@plt+0x24bb2>
  428365:	mov    rax,QWORD PTR [rdi+0x8]
  428369:	ret    
  42836a:	lea    rcx,[rip+0x2639f]        # 44e710 <strcmp@plt+0x4af58>
  428371:	lea    rsi,[rip+0x25ebe]        # 44e236 <strcmp@plt+0x4aa7e>
  428378:	lea    rdi,[rip+0x25ecb]        # 44e24a <strcmp@plt+0x4aa92>
  42837f:	sub    rsp,0x8
  428383:	mov    edx,0xe9
  428388:	call   4032c0 <__assert_fail@plt>
  42838d:	nop    DWORD PTR [rax]
  428390:	test   rdi,rdi
  428393:	je     42839a <strcmp@plt+0x24be2>
  428395:	mov    rax,QWORD PTR [rdi+0x8]
  428399:	ret    
  42839a:	lea    rcx,[rip+0x2634f]        # 44e6f0 <strcmp@plt+0x4af38>
  4283a1:	lea    rsi,[rip+0x25e8e]        # 44e236 <strcmp@plt+0x4aa7e>
  4283a8:	lea    rdi,[rip+0x25e9b]        # 44e24a <strcmp@plt+0x4aa92>
  4283af:	sub    rsp,0x8
  4283b3:	mov    edx,0xf0
  4283b8:	call   4032c0 <__assert_fail@plt>
  4283bd:	nop    DWORD PTR [rax]
  4283c0:	test   rdi,rdi
  4283c3:	je     4283ca <strcmp@plt+0x24c12>
  4283c5:	mov    rax,QWORD PTR [rdi+0x8]
  4283c9:	ret    
  4283ca:	lea    rcx,[rip+0x262ff]        # 44e6d0 <strcmp@plt+0x4af18>
  4283d1:	lea    rsi,[rip+0x25e5e]        # 44e236 <strcmp@plt+0x4aa7e>
  4283d8:	lea    rdi,[rip+0x25e6b]        # 44e24a <strcmp@plt+0x4aa92>
  4283df:	sub    rsp,0x8
  4283e3:	mov    edx,0xf7
  4283e8:	call   4032c0 <__assert_fail@plt>
  4283ed:	nop    DWORD PTR [rax]
  4283f0:	test   rdi,rdi
  4283f3:	je     4283fa <strcmp@plt+0x24c42>
  4283f5:	mov    rax,QWORD PTR [rdi+0x8]
  4283f9:	ret    
  4283fa:	sub    rsp,0x8
  4283fe:	call   403829 <strcmp@plt+0x71>
  428403:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42840e:	xchg   ax,ax
  428410:	test   rdi,rdi
  428413:	je     42841e <strcmp@plt+0x24c66>
  428415:	xor    eax,eax
  428417:	cmp    DWORD PTR [rdi],0x9
  42841a:	sete   al
  42841d:	ret    
  42841e:	sub    rsp,0x8
  428422:	call   403806 <strcmp@plt+0x4e>
  428427:	nop    WORD PTR [rax+rax*1+0x0]
  428430:	test   rdi,rdi
  428433:	je     42843e <strcmp@plt+0x24c86>
  428435:	xor    eax,eax
  428437:	cmp    DWORD PTR [rdi],0x2
  42843a:	sete   al
  42843d:	ret    
  42843e:	sub    rsp,0x8
  428442:	call   403806 <strcmp@plt+0x4e>
  428447:	nop    WORD PTR [rax+rax*1+0x0]
  428450:	test   rdi,rdi
  428453:	push   r12
  428455:	push   rbp
  428456:	push   rbx
  428457:	je     428483 <strcmp@plt+0x24ccb>
  428459:	mov    rbx,rdi
  42845c:	mov    rdi,QWORD PTR [rdi+0x8]
  428460:	mov    r12,rsi
  428463:	mov    ebp,edx
  428465:	test   rdi,rdi
  428468:	je     42846f <strcmp@plt+0x24cb7>
  42846a:	call   428160 <strcmp@plt+0x249a8>
  42846f:	movzx  ebp,bpl
  428473:	test   r12,r12
  428476:	mov    DWORD PTR [rbx],ebp
  428478:	je     428488 <strcmp@plt+0x24cd0>
  42847a:	mov    QWORD PTR [rbx+0x8],r12
  42847e:	pop    rbx
  42847f:	pop    rbp
  428480:	pop    r12
  428482:	ret    
  428483:	call   403829 <strcmp@plt+0x71>
  428488:	call   40384c <strcmp@plt+0x94>
  42848d:	nop    DWORD PTR [rax]
  428490:	sub    rsp,0x8
  428494:	test   rdi,rdi
  428497:	je     4284a7 <strcmp@plt+0x24cef>
  428499:	test   rsi,rsi
  42849c:	je     4284c6 <strcmp@plt+0x24d0e>
  42849e:	mov    QWORD PTR [rdi+0x8],rsi
  4284a2:	add    rsp,0x8
  4284a6:	ret    
  4284a7:	lea    rcx,[rip+0x261e2]        # 44e690 <strcmp@plt+0x4aed8>
  4284ae:	lea    rsi,[rip+0x25d81]        # 44e236 <strcmp@plt+0x4aa7e>
  4284b5:	lea    rdi,[rip+0x25d8e]        # 44e24a <strcmp@plt+0x4aa92>
  4284bc:	mov    edx,0x123
  4284c1:	call   4032c0 <__assert_fail@plt>
  4284c6:	call   40384c <strcmp@plt+0x94>
  4284cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4284d0:	test   rdi,rdi
  4284d3:	je     4284dc <strcmp@plt+0x24d24>
  4284d5:	movzx  esi,sil
  4284d9:	mov    DWORD PTR [rdi],esi
  4284db:	ret    
  4284dc:	sub    rsp,0x8
  4284e0:	call   40386f <strcmp@plt+0xb7>
  4284e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4284f0:	sub    rsp,0x8
  4284f4:	test   rdi,rdi
  4284f7:	je     42853a <strcmp@plt+0x24d82>
  4284f9:	mov    ecx,DWORD PTR [rdi]
  4284fb:	mov    rax,0x468a40
  428502:	mov    rax,QWORD PTR [rax+rcx*8]
  428506:	mov    rdx,rcx
  428509:	test   rax,rax
  42850c:	je     428520 <strcmp@plt+0x24d68>
  42850e:	mov    rdi,QWORD PTR [rdi+0x8]
  428512:	add    rsp,0x8
  428516:	jmp    rax
  428518:	nop    DWORD PTR [rax+rax*1+0x0]
  428520:	lea    rsi,[rip+0x25ac9]        # 44dff0 <strcmp@plt+0x4a838>
  428527:	xor    eax,eax
  428529:	mov    edi,0x3
  42852e:	call   4306a0 <strcmp@plt+0x2cee8>
  428533:	xor    eax,eax
  428535:	add    rsp,0x8
  428539:	ret    
  42853a:	call   4037c0 <strcmp@plt+0x8>
  42853f:	nop
  428540:	test   rsi,rsi
  428543:	push   r12
  428545:	push   rbp
  428546:	push   rbx
  428547:	je     4285b7 <strcmp@plt+0x24dff>
  428549:	mov    eax,DWORD PTR [rsi]
  42854b:	mov    r12,0x468b40
  428552:	mov    rbp,rsi
  428555:	cmp    QWORD PTR [r12+rax*8],0x0
  42855a:	mov    rdx,rax
  42855d:	je     4285a0 <strcmp@plt+0x24de8>
  42855f:	test   rdi,rdi
  428562:	mov    rbx,rdi
  428565:	je     4285d6 <strcmp@plt+0x24e1e>
  428567:	cmp    QWORD PTR [rdi+0x8],0x0
  42856c:	je     428576 <strcmp@plt+0x24dbe>
  42856e:	call   428160 <strcmp@plt+0x249a8>
  428573:	mov    edx,DWORD PTR [rbp+0x0]
  428576:	and    edx,0xff
  42857c:	mov    rsi,QWORD PTR [rbp+0x8]
  428580:	lea    rdi,[rbx+0x8]
  428584:	mov    DWORD PTR [rbx],edx
  428586:	mov    eax,DWORD PTR [rbp+0x0]
  428589:	call   QWORD PTR [r12+rax*8]
  42858d:	mov    eax,0x1
  428592:	pop    rbx
  428593:	pop    rbp
  428594:	pop    r12
  428596:	ret    
  428597:	nop    WORD PTR [rax+rax*1+0x0]
  4285a0:	lea    rsi,[rip+0x25a91]        # 44e038 <strcmp@plt+0x4a880>
  4285a7:	xor    eax,eax
  4285a9:	mov    edi,0x3
  4285ae:	call   4306a0 <strcmp@plt+0x2cee8>
  4285b3:	xor    eax,eax
  4285b5:	jmp    428592 <strcmp@plt+0x24dda>
  4285b7:	lea    rcx,[rip+0x260a2]        # 44e660 <strcmp@plt+0x4aea8>
  4285be:	lea    rsi,[rip+0x25c71]        # 44e236 <strcmp@plt+0x4aa7e>
  4285c5:	lea    rdi,[rip+0x25c86]        # 44e252 <strcmp@plt+0x4aa9a>
  4285cc:	mov    edx,0x13f
  4285d1:	call   4032c0 <__assert_fail@plt>
  4285d6:	call   4037e3 <strcmp@plt+0x2b>
  4285db:	nop    DWORD PTR [rax+rax*1+0x0]
  4285e0:	sub    rsp,0x8
  4285e4:	test   rsi,rsi
  4285e7:	je     42862a <strcmp@plt+0x24e72>
  4285e9:	mov    ecx,DWORD PTR [rsi]
  4285eb:	mov    rax,0x468bc0
  4285f2:	mov    rax,QWORD PTR [rax+rcx*8]
  4285f6:	mov    rdx,rcx
  4285f9:	test   rax,rax
  4285fc:	je     428610 <strcmp@plt+0x24e58>
  4285fe:	mov    rsi,QWORD PTR [rsi+0x8]
  428602:	add    rsp,0x8
  428606:	jmp    rax
  428608:	nop    DWORD PTR [rax+rax*1+0x0]
  428610:	lea    rsi,[rip+0x25a59]        # 44e070 <strcmp@plt+0x4a8b8>
  428617:	xor    eax,eax
  428619:	mov    edi,0x3
  42861e:	call   4306a0 <strcmp@plt+0x2cee8>
  428623:	xor    eax,eax
  428625:	add    rsp,0x8
  428629:	ret    
  42862a:	lea    rcx,[rip+0x2601f]        # 44e650 <strcmp@plt+0x4ae98>
  428631:	lea    rsi,[rip+0x25bfe]        # 44e236 <strcmp@plt+0x4aa7e>
  428638:	lea    rdi,[rip+0x25c0b]        # 44e24a <strcmp@plt+0x4aa92>
  42863f:	mov    edx,0x153
  428644:	call   4032c0 <__assert_fail@plt>
  428649:	nop    DWORD PTR [rax+0x0]
  428650:	sub    rsp,0x8
  428654:	test   rdi,rdi
  428657:	je     4286f2 <strcmp@plt+0x24f3a>
  42865d:	test   rsi,rsi
  428660:	mov    edx,DWORD PTR [rdi]
  428662:	je     4286f2 <strcmp@plt+0x24f3a>
  428668:	mov    ecx,DWORD PTR [rsi]
  42866a:	cmp    edx,ecx
  42866c:	je     4286a8 <strcmp@plt+0x24ef0>
  42866e:	mov    rax,0x468e3c
  428675:	mov    esi,DWORD PTR [rax]
  428677:	test   esi,esi
  428679:	jg     428688 <strcmp@plt+0x24ed0>
  42867b:	mov    eax,0xffffffff
  428680:	add    rsp,0x8
  428684:	ret    
  428685:	nop    DWORD PTR [rax]
  428688:	lea    rsi,[rip+0x25a21]        # 44e0b0 <strcmp@plt+0x4a8f8>
  42868f:	xor    eax,eax
  428691:	mov    edi,0x5
  428696:	call   4306a0 <strcmp@plt+0x2cee8>
  42869b:	mov    eax,0xffffffff
  4286a0:	add    rsp,0x8
  4286a4:	ret    
  4286a5:	nop    DWORD PTR [rax]
  4286a8:	mov    rcx,0x468ac0
  4286af:	mov    eax,edx
  4286b1:	mov    rax,QWORD PTR [rcx+rax*8]
  4286b5:	test   rax,rax
  4286b8:	je     4286d0 <strcmp@plt+0x24f18>
  4286ba:	mov    rsi,QWORD PTR [rsi+0x8]
  4286be:	mov    rdi,QWORD PTR [rdi+0x8]
  4286c2:	add    rsp,0x8
  4286c6:	jmp    rax
  4286c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4286d0:	mov    rax,0x468e3c
  4286d7:	mov    eax,DWORD PTR [rax]
  4286d9:	test   eax,eax
  4286db:	jle    42867b <strcmp@plt+0x24ec3>
  4286dd:	lea    rsi,[rip+0x25a0c]        # 44e0f0 <strcmp@plt+0x4a938>
  4286e4:	mov    edi,0x5
  4286e9:	xor    eax,eax
  4286eb:	call   4306a0 <strcmp@plt+0x2cee8>
  4286f0:	jmp    42867b <strcmp@plt+0x24ec3>
  4286f2:	call   403806 <strcmp@plt+0x4e>
  4286f7:	nop    WORD PTR [rax+rax*1+0x0]
  428700:	sub    rsp,0x8
  428704:	test   rdi,rdi
  428707:	je     428766 <strcmp@plt+0x24fae>
  428709:	test   rsi,rsi
  42870c:	mov    edx,DWORD PTR [rdi]
  42870e:	je     428766 <strcmp@plt+0x24fae>
  428710:	xor    eax,eax
  428712:	cmp    edx,DWORD PTR [rsi]
  428714:	je     428720 <strcmp@plt+0x24f68>
  428716:	add    rsp,0x8
  42871a:	ret    
  42871b:	nop    DWORD PTR [rax+rax*1+0x0]
  428720:	cmp    edx,0x2
  428723:	je     428748 <strcmp@plt+0x24f90>
  428725:	cmp    edx,0x9
  428728:	jne    428716 <strcmp@plt+0x24f5e>
  42872a:	mov    rax,QWORD PTR [rdi+0x8]
  42872e:	test   rax,rax
  428731:	je     428770 <strcmp@plt+0x24fb8>
  428733:	mov    ecx,DWORD PTR [rsi+0x4]
  428736:	cmp    DWORD PTR [rax+0x4],ecx
  428739:	sete   al
  42873c:	add    rsp,0x8
  428740:	ret    
  428741:	nop    DWORD PTR [rax+0x0]
  428748:	mov    rax,QWORD PTR [rdi+0x8]
  42874c:	test   rax,rax
  42874f:	je     42876b <strcmp@plt+0x24fb3>
  428751:	mov    edx,DWORD PTR [rax]
  428753:	mov    rax,QWORD PTR [rsi+0x8]
  428757:	test   rax,rax
  42875a:	je     42876b <strcmp@plt+0x24fb3>
  42875c:	cmp    DWORD PTR [rax],edx
  42875e:	sete   al
  428761:	add    rsp,0x8
  428765:	ret    
  428766:	call   4037c0 <strcmp@plt+0x8>
  42876b:	call   403a13 <strcmp@plt+0x25b>
  428770:	call   403987 <strcmp@plt+0x1cf>
  428775:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428780:	sub    rsp,0x8
  428784:	test   rdi,rdi
  428787:	je     4287a7 <strcmp@plt+0x24fef>
  428789:	cmp    DWORD PTR [rdi],0x9
  42878c:	jne    4287a0 <strcmp@plt+0x24fe8>
  42878e:	mov    rax,QWORD PTR [rdi+0x8]
  428792:	test   rax,rax
  428795:	je     4287c6 <strcmp@plt+0x2500e>
  428797:	mov    rax,QWORD PTR [rax+0x8]
  42879b:	add    rsp,0x8
  42879f:	ret    
  4287a0:	xor    eax,eax
  4287a2:	add    rsp,0x8
  4287a6:	ret    
  4287a7:	lea    rcx,[rip+0x25e92]        # 44e640 <strcmp@plt+0x4ae88>
  4287ae:	lea    rsi,[rip+0x25a81]        # 44e236 <strcmp@plt+0x4aa7e>
  4287b5:	lea    rdi,[rip+0x25a93]        # 44e24f <strcmp@plt+0x4aa97>
  4287bc:	mov    edx,0x185
  4287c1:	call   4032c0 <__assert_fail@plt>
  4287c6:	call   4038d8 <strcmp@plt+0x120>
  4287cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4287d0:	sub    rsp,0x8
  4287d4:	test   rdi,rdi
  4287d7:	je     4287f7 <strcmp@plt+0x2503f>
  4287d9:	cmp    DWORD PTR [rdi],0x9
  4287dc:	jne    4287f0 <strcmp@plt+0x25038>
  4287de:	mov    rax,QWORD PTR [rdi+0x8]
  4287e2:	test   rax,rax
  4287e5:	je     428816 <strcmp@plt+0x2505e>
  4287e7:	mov    rax,QWORD PTR [rax+0x10]
  4287eb:	add    rsp,0x8
  4287ef:	ret    
  4287f0:	xor    eax,eax
  4287f2:	add    rsp,0x8
  4287f6:	ret    
  4287f7:	lea    rcx,[rip+0x25e32]        # 44e630 <strcmp@plt+0x4ae78>
  4287fe:	lea    rsi,[rip+0x25a31]        # 44e236 <strcmp@plt+0x4aa7e>
  428805:	lea    rdi,[rip+0x25a43]        # 44e24f <strcmp@plt+0x4aa97>
  42880c:	mov    edx,0x18e
  428811:	call   4032c0 <__assert_fail@plt>
  428816:	call   40391e <strcmp@plt+0x166>
  42881b:	nop    DWORD PTR [rax+rax*1+0x0]
  428820:	sub    rsp,0x8
  428824:	test   rdi,rdi
  428827:	je     42883a <strcmp@plt+0x25082>
  428829:	mov    rax,QWORD PTR [rdi+0x8]
  42882d:	test   rax,rax
  428830:	je     428859 <strcmp@plt+0x250a1>
  428832:	mov    eax,DWORD PTR [rax+0x4]
  428835:	add    rsp,0x8
  428839:	ret    
  42883a:	lea    rcx,[rip+0x25ddf]        # 44e620 <strcmp@plt+0x4ae68>
  428841:	lea    rsi,[rip+0x259ee]        # 44e236 <strcmp@plt+0x4aa7e>
  428848:	lea    rdi,[rip+0x25a00]        # 44e24f <strcmp@plt+0x4aa97>
  42884f:	mov    edx,0x197
  428854:	call   4032c0 <__assert_fail@plt>
  428859:	call   403987 <strcmp@plt+0x1cf>
  42885e:	xchg   ax,ax
  428860:	sub    rsp,0x8
  428864:	test   rdi,rdi
  428867:	je     42887a <strcmp@plt+0x250c2>
  428869:	mov    rax,QWORD PTR [rdi+0x8]
  42886d:	test   rax,rax
  428870:	je     428899 <strcmp@plt+0x250e1>
  428872:	movzx  eax,BYTE PTR [rax]
  428875:	add    rsp,0x8
  428879:	ret    
  42887a:	lea    rcx,[rip+0x25d7f]        # 44e600 <strcmp@plt+0x4ae48>
  428881:	lea    rsi,[rip+0x259ae]        # 44e236 <strcmp@plt+0x4aa7e>
  428888:	lea    rdi,[rip+0x259c0]        # 44e24f <strcmp@plt+0x4aa97>
  42888f:	mov    edx,0x19e
  428894:	call   4032c0 <__assert_fail@plt>
  428899:	call   4039aa <strcmp@plt+0x1f2>
  42889e:	xchg   ax,ax
  4288a0:	sub    rsp,0x8
  4288a4:	test   rdi,rdi
  4288a7:	je     4288bb <strcmp@plt+0x25103>
  4288a9:	mov    rax,QWORD PTR [rdi+0x8]
  4288ad:	test   rax,rax
  4288b0:	je     4288da <strcmp@plt+0x25122>
  4288b2:	movzx  eax,BYTE PTR [rax+0x1]
  4288b6:	add    rsp,0x8
  4288ba:	ret    
  4288bb:	lea    rcx,[rip+0x25d1e]        # 44e5e0 <strcmp@plt+0x4ae28>
  4288c2:	lea    rsi,[rip+0x2596d]        # 44e236 <strcmp@plt+0x4aa7e>
  4288c9:	lea    rdi,[rip+0x2597f]        # 44e24f <strcmp@plt+0x4aa97>
  4288d0:	mov    edx,0x1a5
  4288d5:	call   4032c0 <__assert_fail@plt>
  4288da:	call   4039cd <strcmp@plt+0x215>
  4288df:	nop
  4288e0:	sub    rsp,0x8
  4288e4:	test   rdi,rdi
  4288e7:	je     428900 <strcmp@plt+0x25148>
  4288e9:	mov    rax,QWORD PTR [rdi+0x8]
  4288ed:	test   rax,rax
  4288f0:	je     42891f <strcmp@plt+0x25167>
  4288f2:	mov    rdi,QWORD PTR [rax+0x10]
  4288f6:	call   4251c0 <strcmp@plt+0x21a08>
  4288fb:	add    rsp,0x8
  4288ff:	ret    
  428900:	lea    rcx,[rip+0x25cc9]        # 44e5d0 <strcmp@plt+0x4ae18>
  428907:	lea    rsi,[rip+0x25928]        # 44e236 <strcmp@plt+0x4aa7e>
  42890e:	lea    rdi,[rip+0x2593a]        # 44e24f <strcmp@plt+0x4aa97>
  428915:	mov    edx,0x1ac
  42891a:	call   4032c0 <__assert_fail@plt>
  42891f:	call   403964 <strcmp@plt+0x1ac>
  428924:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42892f:	nop
  428930:	push   rbx
  428931:	mov    esi,0x18
  428936:	mov    edi,0x1
  42893b:	call   4032e0 <calloc@plt>
  428940:	mov    rbx,rax
  428943:	xor    eax,eax
  428945:	call   424740 <strcmp@plt+0x20f88>
  42894a:	mov    QWORD PTR [rbx+0x8],rax
  42894e:	xor    eax,eax
  428950:	call   424740 <strcmp@plt+0x20f88>
  428955:	mov    QWORD PTR [rbx+0x10],rax
  428959:	mov    rax,rbx
  42895c:	pop    rbx
  42895d:	ret    
  42895e:	xchg   ax,ax
  428960:	test   rdi,rdi
  428963:	je     428969 <strcmp@plt+0x251b1>
  428965:	mov    BYTE PTR [rdi],sil
  428968:	ret    
  428969:	lea    rcx,[rip+0x25c40]        # 44e5b0 <strcmp@plt+0x4adf8>
  428970:	lea    rsi,[rip+0x258bf]        # 44e236 <strcmp@plt+0x4aa7e>
  428977:	lea    rdi,[rip+0x258d1]        # 44e24f <strcmp@plt+0x4aa97>
  42897e:	sub    rsp,0x8
  428982:	mov    edx,0x1c9
  428987:	call   4032c0 <__assert_fail@plt>
  42898c:	nop    DWORD PTR [rax+0x0]
  428990:	test   rdi,rdi
  428993:	je     42899a <strcmp@plt+0x251e2>
  428995:	mov    BYTE PTR [rdi+0x1],sil
  428999:	ret    
  42899a:	sub    rsp,0x8
  42899e:	call   403892 <strcmp@plt+0xda>
  4289a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4289ae:	xchg   ax,ax
  4289b0:	test   rdi,rdi
  4289b3:	je     4289b9 <strcmp@plt+0x25201>
  4289b5:	mov    DWORD PTR [rdi+0x4],esi
  4289b8:	ret    
  4289b9:	sub    rsp,0x8
  4289bd:	call   4038b5 <strcmp@plt+0xfd>
  4289c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4289cd:	nop    DWORD PTR [rax]
  4289d0:	sub    rsp,0x8
  4289d4:	test   rdi,rdi
  4289d7:	je     4289eb <strcmp@plt+0x25233>
  4289d9:	test   rsi,rsi
  4289dc:	je     428a0a <strcmp@plt+0x25252>
  4289de:	mov    rdi,QWORD PTR [rdi+0x8]
  4289e2:	add    rsp,0x8
  4289e6:	jmp    424b00 <strcmp@plt+0x21348>
  4289eb:	lea    rcx,[rip+0x25b7e]        # 44e570 <strcmp@plt+0x4adb8>
  4289f2:	lea    rsi,[rip+0x2583d]        # 44e236 <strcmp@plt+0x4aa7e>
  4289f9:	lea    rdi,[rip+0x2584f]        # 44e24f <strcmp@plt+0x4aa97>
  428a00:	mov    edx,0x1de
  428a05:	call   4032c0 <__assert_fail@plt>
  428a0a:	call   4038fb <strcmp@plt+0x143>
  428a0f:	nop
  428a10:	sub    rsp,0x8
  428a14:	test   rdi,rdi
  428a17:	je     428a2b <strcmp@plt+0x25273>
  428a19:	test   rsi,rsi
  428a1c:	je     428a4a <strcmp@plt+0x25292>
  428a1e:	mov    rdi,QWORD PTR [rdi+0x10]
  428a22:	add    rsp,0x8
  428a26:	jmp    424b00 <strcmp@plt+0x21348>
  428a2b:	lea    rcx,[rip+0x25b2e]        # 44e560 <strcmp@plt+0x4ada8>
  428a32:	lea    rsi,[rip+0x257fd]        # 44e236 <strcmp@plt+0x4aa7e>
  428a39:	lea    rdi,[rip+0x2580f]        # 44e24f <strcmp@plt+0x4aa97>
  428a40:	mov    edx,0x1e6
  428a45:	call   4032c0 <__assert_fail@plt>
  428a4a:	call   403941 <strcmp@plt+0x189>
  428a4f:	nop
  428a50:	test   rsi,rsi
  428a53:	push   r14
  428a55:	push   r13
  428a57:	push   r12
  428a59:	push   rbp
  428a5a:	push   rbx
  428a5b:	je     428a9f <strcmp@plt+0x252e7>
  428a5d:	test   rdi,rdi
  428a60:	mov    rbx,rdi
  428a63:	je     428add <strcmp@plt+0x25325>
  428a65:	test   rdx,rdx
  428a68:	mov    rbp,rdx
  428a6b:	je     428abe <strcmp@plt+0x25306>
  428a6d:	mov    rdi,QWORD PTR [rdi+0x8]
  428a71:	mov    r14d,ecx
  428a74:	mov    r13d,r8d
  428a77:	mov    r12d,r9d
  428a7a:	call   424b00 <strcmp@plt+0x21348>
  428a7f:	mov    rdi,QWORD PTR [rbx+0x10]
  428a83:	mov    rsi,rbp
  428a86:	call   424b00 <strcmp@plt+0x21348>
  428a8b:	mov    BYTE PTR [rbx],r14b
  428a8e:	mov    BYTE PTR [rbx+0x1],r13b
  428a92:	mov    DWORD PTR [rbx+0x4],r12d
  428a96:	pop    rbx
  428a97:	pop    rbp
  428a98:	pop    r12
  428a9a:	pop    r13
  428a9c:	pop    r14
  428a9e:	ret    
  428a9f:	lea    rcx,[rip+0x25aaa]        # 44e550 <strcmp@plt+0x4ad98>
  428aa6:	lea    rsi,[rip+0x25789]        # 44e236 <strcmp@plt+0x4aa7e>
  428aad:	lea    rdi,[rip+0x2579e]        # 44e252 <strcmp@plt+0x4aa9a>
  428ab4:	mov    edx,0x20e
  428ab9:	call   4032c0 <__assert_fail@plt>
  428abe:	lea    rcx,[rip+0x25a8b]        # 44e550 <strcmp@plt+0x4ad98>
  428ac5:	lea    rsi,[rip+0x2576a]        # 44e236 <strcmp@plt+0x4aa7e>
  428acc:	lea    rdi,[rip+0x25783]        # 44e256 <strcmp@plt+0x4aa9e>
  428ad3:	mov    edx,0x210
  428ad8:	call   4032c0 <__assert_fail@plt>
  428add:	lea    rcx,[rip+0x25a6c]        # 44e550 <strcmp@plt+0x4ad98>
  428ae4:	lea    rsi,[rip+0x2574b]        # 44e236 <strcmp@plt+0x4aa7e>
  428aeb:	lea    rdi,[rip+0x257aa]        # 44e29c <strcmp@plt+0x4aae4>
  428af2:	mov    edx,0x20f
  428af7:	call   4032c0 <__assert_fail@plt>
  428afc:	nop    DWORD PTR [rax+0x0]
  428b00:	push   r15
  428b02:	push   r14
  428b04:	push   r13
  428b06:	push   r12
  428b08:	push   rbp
  428b09:	push   rbx
  428b0a:	sub    rsp,0x8
  428b0e:	test   rdi,rdi
  428b11:	je     428b88 <strcmp@plt+0x253d0>
  428b13:	test   rsi,rsi
  428b16:	mov    r12,rsi
  428b19:	je     428ba7 <strcmp@plt+0x253ef>
  428b1f:	mov    esi,0x18
  428b24:	mov    rbp,rdi
  428b27:	mov    edi,0x1
  428b2c:	mov    r15d,edx
  428b2f:	mov    r14d,ecx
  428b32:	mov    r13d,r8d
  428b35:	call   4032e0 <calloc@plt>
  428b3a:	mov    rbx,rax
  428b3d:	xor    eax,eax
  428b3f:	call   424740 <strcmp@plt+0x20f88>
  428b44:	mov    QWORD PTR [rbx+0x8],rax
  428b48:	xor    eax,eax
  428b4a:	call   424740 <strcmp@plt+0x20f88>
  428b4f:	mov    rdi,QWORD PTR [rbx+0x8]
  428b53:	mov    rsi,rbp
  428b56:	mov    QWORD PTR [rbx+0x10],rax
  428b5a:	call   424b00 <strcmp@plt+0x21348>
  428b5f:	mov    rdi,QWORD PTR [rbx+0x10]
  428b63:	mov    rsi,r12
  428b66:	call   424b00 <strcmp@plt+0x21348>
  428b6b:	mov    BYTE PTR [rbx],r15b
  428b6e:	mov    BYTE PTR [rbx+0x1],r14b
  428b72:	mov    rax,rbx
  428b75:	mov    DWORD PTR [rbx+0x4],r13d
  428b79:	add    rsp,0x8
  428b7d:	pop    rbx
  428b7e:	pop    rbp
  428b7f:	pop    r12
  428b81:	pop    r13
  428b83:	pop    r14
  428b85:	pop    r15
  428b87:	ret    
  428b88:	lea    rcx,[rip+0x259b1]        # 44e540 <strcmp@plt+0x4ad88>
  428b8f:	lea    rsi,[rip+0x256a0]        # 44e236 <strcmp@plt+0x4aa7e>
  428b96:	lea    rdi,[rip+0x256b5]        # 44e252 <strcmp@plt+0x4aa9a>
  428b9d:	mov    edx,0x226
  428ba2:	call   4032c0 <__assert_fail@plt>
  428ba7:	lea    rcx,[rip+0x25992]        # 44e540 <strcmp@plt+0x4ad88>
  428bae:	lea    rsi,[rip+0x25681]        # 44e236 <strcmp@plt+0x4aa7e>
  428bb5:	lea    rdi,[rip+0x2569a]        # 44e256 <strcmp@plt+0x4aa9e>
  428bbc:	mov    edx,0x227
  428bc1:	call   4032c0 <__assert_fail@plt>
  428bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428bd0:	test   rdi,rdi
  428bd3:	je     428bda <strcmp@plt+0x25422>
  428bd5:	mov    rax,QWORD PTR [rdi+0x8]
  428bd9:	ret    
  428bda:	sub    rsp,0x8
  428bde:	call   4038d8 <strcmp@plt+0x120>
  428be3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428bee:	xchg   ax,ax
  428bf0:	test   rdi,rdi
  428bf3:	je     428bfa <strcmp@plt+0x25442>
  428bf5:	mov    rax,QWORD PTR [rdi+0x10]
  428bf9:	ret    
  428bfa:	sub    rsp,0x8
  428bfe:	call   40391e <strcmp@plt+0x166>
  428c03:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428c0e:	xchg   ax,ax
  428c10:	sub    rsp,0x8
  428c14:	test   rdi,rdi
  428c17:	je     428c27 <strcmp@plt+0x2546f>
  428c19:	mov    rdi,QWORD PTR [rdi+0x10]
  428c1d:	call   4251c0 <strcmp@plt+0x21a08>
  428c22:	add    rsp,0x8
  428c26:	ret    
  428c27:	call   403964 <strcmp@plt+0x1ac>
  428c2c:	nop    DWORD PTR [rax+0x0]
  428c30:	test   rdi,rdi
  428c33:	je     428c39 <strcmp@plt+0x25481>
  428c35:	mov    eax,DWORD PTR [rdi+0x4]
  428c38:	ret    
  428c39:	sub    rsp,0x8
  428c3d:	call   403987 <strcmp@plt+0x1cf>
  428c42:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428c4d:	nop    DWORD PTR [rax]
  428c50:	test   rdi,rdi
  428c53:	je     428c59 <strcmp@plt+0x254a1>
  428c55:	movzx  eax,BYTE PTR [rdi]
  428c58:	ret    
  428c59:	sub    rsp,0x8
  428c5d:	call   4039aa <strcmp@plt+0x1f2>
  428c62:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428c6d:	nop    DWORD PTR [rax]
  428c70:	test   rdi,rdi
  428c73:	je     428c7a <strcmp@plt+0x254c2>
  428c75:	movzx  eax,BYTE PTR [rdi+0x1]
  428c79:	ret    
  428c7a:	sub    rsp,0x8
  428c7e:	call   4039cd <strcmp@plt+0x215>
  428c83:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428c8e:	xchg   ax,ax
  428c90:	push   r15
  428c92:	push   r14
  428c94:	push   r13
  428c96:	push   r12
  428c98:	push   rbp
  428c99:	push   rbx
  428c9a:	sub    rsp,0x8
  428c9e:	test   rdi,rdi
  428ca1:	je     428cf9 <strcmp@plt+0x25541>
  428ca3:	cmp    QWORD PTR [rdi+0x8],0x0
  428ca8:	mov    rbx,rdi
  428cab:	mov    r13,rsi
  428cae:	mov    r14,rdx
  428cb1:	mov    ebp,ecx
  428cb3:	mov    r12d,r8d
  428cb6:	mov    r15d,r9d
  428cb9:	je     428cc0 <strcmp@plt+0x25508>
  428cbb:	call   428160 <strcmp@plt+0x249a8>
  428cc0:	movzx  ecx,r12b
  428cc4:	movzx  edx,bpl
  428cc8:	mov    r8d,r15d
  428ccb:	mov    rsi,r14
  428cce:	mov    rdi,r13
  428cd1:	call   428b00 <strcmp@plt+0x25348>
  428cd6:	test   rax,rax
  428cd9:	mov    DWORD PTR [rbx],0x9
  428cdf:	je     428cfe <strcmp@plt+0x25546>
  428ce1:	mov    QWORD PTR [rbx+0x8],rax
  428ce5:	add    rsp,0x8
  428ce9:	mov    eax,0x1
  428cee:	pop    rbx
  428cef:	pop    rbp
  428cf0:	pop    r12
  428cf2:	pop    r13
  428cf4:	pop    r14
  428cf6:	pop    r15
  428cf8:	ret    
  428cf9:	call   4037e3 <strcmp@plt+0x2b>
  428cfe:	call   40384c <strcmp@plt+0x94>
  428d03:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428d0e:	xchg   ax,ax
  428d10:	push   r13
  428d12:	push   r12
  428d14:	mov    r13,rsi
  428d17:	push   rbp
  428d18:	push   rbx
  428d19:	mov    r12,rdi
  428d1c:	mov    ebx,0x80
  428d21:	sub    rsp,0x8
  428d25:	call   4251c0 <strcmp@plt+0x21a08>
  428d2a:	mov    ecx,0x20
  428d2f:	cmp    ax,0x2
  428d33:	mov    edi,0x3
  428d38:	cmove  ebx,ecx
  428d3b:	call   424670 <strcmp@plt+0x20eb8>
  428d40:	mov    r8d,ebx
  428d43:	mov    ecx,ebx
  428d45:	mov    rdx,r13
  428d48:	mov    rsi,r12
  428d4b:	xor    r9d,r9d
  428d4e:	mov    rdi,rax
  428d51:	mov    rbp,rax
  428d54:	call   428c90 <strcmp@plt+0x254d8>
  428d59:	add    rsp,0x8
  428d5d:	mov    rax,rbp
  428d60:	pop    rbx
  428d61:	pop    rbp
  428d62:	pop    r12
  428d64:	pop    r13
  428d66:	ret    
  428d67:	nop    WORD PTR [rax+rax*1+0x0]
  428d70:	cmp    DWORD PTR [rdi+0x18],0x3
  428d74:	je     428d80 <strcmp@plt+0x255c8>
  428d76:	xor    eax,eax
  428d78:	ret    
  428d79:	nop    DWORD PTR [rax+0x0]
  428d80:	sub    rsp,0x8
  428d84:	call   424f30 <strcmp@plt+0x21778>
  428d89:	cmp    eax,0x9
  428d8c:	sete   al
  428d8f:	add    rsp,0x8
  428d93:	movzx  eax,al
  428d96:	ret    
  428d97:	nop    WORD PTR [rax+rax*1+0x0]
  428da0:	push   rbx
  428da1:	mov    edi,0x10
  428da6:	call   434790 <strcmp@plt+0x30fd8>
  428dab:	mov    rbx,rax
  428dae:	xor    eax,eax
  428db0:	call   424740 <strcmp@plt+0x20f88>
  428db5:	mov    QWORD PTR [rbx+0x8],rax
  428db9:	mov    rax,rbx
  428dbc:	pop    rbx
  428dbd:	ret    
  428dbe:	xchg   ax,ax
  428dc0:	push   r13
  428dc2:	push   r12
  428dc4:	mov    r13d,edi
  428dc7:	push   rbp
  428dc8:	push   rbx
  428dc9:	mov    edi,0x10
  428dce:	mov    ebp,edx
  428dd0:	mov    r12,rsi
  428dd3:	sub    rsp,0x8
  428dd7:	call   434790 <strcmp@plt+0x30fd8>
  428ddc:	mov    rbx,rax
  428ddf:	xor    eax,eax
  428de1:	call   424740 <strcmp@plt+0x20f88>
  428de6:	mov    DWORD PTR [rbx],r13d
  428de9:	mov    QWORD PTR [rbx+0x8],rax
  428ded:	mov    rsi,r12
  428df0:	mov    rdi,rax
  428df3:	call   424b00 <strcmp@plt+0x21348>
  428df8:	mov    BYTE PTR [rbx+0x4],bpl
  428dfc:	add    rsp,0x8
  428e00:	mov    rax,rbx
  428e03:	pop    rbx
  428e04:	pop    rbp
  428e05:	pop    r12
  428e07:	pop    r13
  428e09:	ret    
  428e0a:	nop    WORD PTR [rax+rax*1+0x0]
  428e10:	push   rbp
  428e11:	push   rbx
  428e12:	mov    rbp,rdi
  428e15:	mov    rbx,rsi
  428e18:	sub    rsp,0x8
  428e1c:	mov    rax,QWORD PTR [rdi]
  428e1f:	test   rax,rax
  428e22:	je     428e58 <strcmp@plt+0x256a0>
  428e24:	test   rsi,rsi
  428e27:	je     428e77 <strcmp@plt+0x256bf>
  428e29:	mov    rdi,QWORD PTR [rax+0x8]
  428e2d:	mov    rsi,QWORD PTR [rsi+0x8]
  428e31:	call   424b00 <strcmp@plt+0x21348>
  428e36:	mov    rax,QWORD PTR [rbp+0x0]
  428e3a:	mov    edx,DWORD PTR [rbx]
  428e3c:	test   rax,rax
  428e3f:	je     428e7c <strcmp@plt+0x256c4>
  428e41:	mov    DWORD PTR [rax],edx
  428e43:	movzx  edx,BYTE PTR [rbx+0x4]
  428e47:	mov    BYTE PTR [rax+0x4],dl
  428e4a:	add    rsp,0x8
  428e4e:	pop    rbx
  428e4f:	pop    rbp
  428e50:	ret    
  428e51:	nop    DWORD PTR [rax+0x0]
  428e58:	test   rsi,rsi
  428e5b:	je     428e81 <strcmp@plt+0x256c9>
  428e5d:	movzx  edx,BYTE PTR [rsi+0x4]
  428e61:	mov    edi,DWORD PTR [rbx]
  428e63:	mov    rsi,QWORD PTR [rsi+0x8]
  428e67:	call   428dc0 <strcmp@plt+0x25608>
  428e6c:	mov    QWORD PTR [rbp+0x0],rax
  428e70:	add    rsp,0x8
  428e74:	pop    rbx
  428e75:	pop    rbp
  428e76:	ret    
  428e77:	call   403a36 <strcmp@plt+0x27e>
  428e7c:	call   403a59 <strcmp@plt+0x2a1>
  428e81:	call   4039f0 <strcmp@plt+0x238>
  428e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428e90:	test   rdi,rdi
  428e93:	je     428e9a <strcmp@plt+0x256e2>
  428e95:	movzx  eax,BYTE PTR [rdi+0x4]
  428e99:	ret    
  428e9a:	sub    rsp,0x8
  428e9e:	call   4039f0 <strcmp@plt+0x238>
  428ea3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428eae:	xchg   ax,ax
  428eb0:	sub    rsp,0x8
  428eb4:	test   rdi,rdi
  428eb7:	je     428ec9 <strcmp@plt+0x25711>
  428eb9:	mov    rax,QWORD PTR [rdi+0x8]
  428ebd:	test   rax,rax
  428ec0:	je     428ece <strcmp@plt+0x25716>
  428ec2:	mov    eax,DWORD PTR [rax]
  428ec4:	add    rsp,0x8
  428ec8:	ret    
  428ec9:	call   4037e3 <strcmp@plt+0x2b>
  428ece:	call   403a13 <strcmp@plt+0x25b>
  428ed3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428ede:	xchg   ax,ax
  428ee0:	test   rdi,rdi
  428ee3:	je     428ee8 <strcmp@plt+0x25730>
  428ee5:	mov    eax,DWORD PTR [rdi]
  428ee7:	ret    
  428ee8:	sub    rsp,0x8
  428eec:	call   403a13 <strcmp@plt+0x25b>
  428ef1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428efc:	nop    DWORD PTR [rax+0x0]
  428f00:	test   rdi,rdi
  428f03:	je     428f0a <strcmp@plt+0x25752>
  428f05:	mov    rax,QWORD PTR [rdi+0x8]
  428f09:	ret    
  428f0a:	sub    rsp,0x8
  428f0e:	call   403a36 <strcmp@plt+0x27e>
  428f13:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428f1e:	xchg   ax,ax
  428f20:	test   rdi,rdi
  428f23:	je     428f28 <strcmp@plt+0x25770>
  428f25:	mov    DWORD PTR [rdi],esi
  428f27:	ret    
  428f28:	sub    rsp,0x8
  428f2c:	call   403a59 <strcmp@plt+0x2a1>
  428f31:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428f3c:	nop    DWORD PTR [rax+0x0]
  428f40:	sub    rsp,0x8
  428f44:	test   rdi,rdi
  428f47:	je     428f5b <strcmp@plt+0x257a3>
  428f49:	test   rsi,rsi
  428f4c:	je     428f7a <strcmp@plt+0x257c2>
  428f4e:	mov    rdi,QWORD PTR [rdi+0x8]
  428f52:	add    rsp,0x8
  428f56:	jmp    424b00 <strcmp@plt+0x21348>
  428f5b:	lea    rcx,[rip+0x254be]        # 44e420 <strcmp@plt+0x4ac68>
  428f62:	lea    rsi,[rip+0x252cd]        # 44e236 <strcmp@plt+0x4aa7e>
  428f69:	lea    rdi,[rip+0x25310]        # 44e280 <strcmp@plt+0x4aac8>
  428f70:	mov    edx,0x318
  428f75:	call   4032c0 <__assert_fail@plt>
  428f7a:	lea    rcx,[rip+0x2549f]        # 44e420 <strcmp@plt+0x4ac68>
  428f81:	lea    rsi,[rip+0x252ae]        # 44e236 <strcmp@plt+0x4aa7e>
  428f88:	lea    rdi,[rip+0x25311]        # 44e2a0 <strcmp@plt+0x4aae8>
  428f8f:	mov    edx,0x319
  428f94:	call   4032c0 <__assert_fail@plt>
  428f99:	nop    DWORD PTR [rax+0x0]
  428fa0:	test   rdi,rdi
  428fa3:	je     428faa <strcmp@plt+0x257f2>
  428fa5:	mov    BYTE PTR [rdi+0x4],sil
  428fa9:	ret    
  428faa:	sub    rsp,0x8
  428fae:	call   403a7c <strcmp@plt+0x2c4>
  428fb3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428fbe:	xchg   ax,ax
  428fc0:	cmp    DWORD PTR [rdi+0x18],0x3
  428fc4:	je     428fd0 <strcmp@plt+0x25818>
  428fc6:	xor    eax,eax
  428fc8:	ret    
  428fc9:	nop    DWORD PTR [rax+0x0]
  428fd0:	sub    rsp,0x8
  428fd4:	call   424f30 <strcmp@plt+0x21778>
  428fd9:	cmp    eax,0x2
  428fdc:	sete   al
  428fdf:	add    rsp,0x8
  428fe3:	movzx  eax,al
  428fe6:	ret    
  428fe7:	nop    WORD PTR [rax+rax*1+0x0]
  428ff0:	push   rbp
  428ff1:	push   rbx
  428ff2:	mov    ebp,esi
  428ff4:	mov    rbx,rdi
  428ff7:	mov    rsi,rdx
  428ffa:	sub    rsp,0x18
  428ffe:	cmp    QWORD PTR [rdi+0x8],0x0
  429003:	je     429020 <strcmp@plt+0x25868>
  429005:	mov    DWORD PTR [rbx],0x2
  42900b:	mov    edi,ebp
  42900d:	movzx  edx,cl
  429010:	call   428dc0 <strcmp@plt+0x25608>
  429015:	mov    QWORD PTR [rbx+0x8],rax
  429019:	add    rsp,0x18
  42901d:	pop    rbx
  42901e:	pop    rbp
  42901f:	ret    
  429020:	mov    DWORD PTR [rsp+0xc],ecx
  429024:	mov    QWORD PTR [rsp],rdx
  429028:	call   428160 <strcmp@plt+0x249a8>
  42902d:	mov    ecx,DWORD PTR [rsp+0xc]
  429031:	mov    rsi,QWORD PTR [rsp]
  429035:	jmp    429005 <strcmp@plt+0x2584d>
  429037:	nop    WORD PTR [rax+rax*1+0x0]
  429040:	push   r13
  429042:	push   r12
  429044:	mov    r13,rsi
  429047:	push   rbp
  429048:	push   rbx
  429049:	mov    r12d,edi
  42904c:	mov    ebx,edx
  42904e:	mov    edi,0x3
  429053:	sub    rsp,0x8
  429057:	call   424670 <strcmp@plt+0x20eb8>
  42905c:	movzx  ecx,bl
  42905f:	mov    rdx,r13
  429062:	mov    esi,r12d
  429065:	mov    rdi,rax
  429068:	mov    rbp,rax
  42906b:	call   428ff0 <strcmp@plt+0x25838>
  429070:	add    rsp,0x8
  429074:	mov    rax,rbp
  429077:	pop    rbx
  429078:	pop    rbp
  429079:	pop    r12
  42907b:	pop    r13
  42907d:	ret    
  42907e:	xchg   ax,ax
  429080:	push   rbx
  429081:	mov    esi,0x18
  429086:	mov    edi,0x1
  42908b:	call   4032e0 <calloc@plt>
  429090:	mov    rbx,rax
  429093:	xor    eax,eax
  429095:	call   424740 <strcmp@plt+0x20f88>
  42909a:	mov    QWORD PTR [rbx+0x10],rax
  42909e:	mov    rax,rbx
  4290a1:	pop    rbx
  4290a2:	ret    
  4290a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4290ae:	xchg   ax,ax
  4290b0:	sub    rsp,0x8
  4290b4:	test   rsi,rsi
  4290b7:	je     4290cb <strcmp@plt+0x25913>
  4290b9:	test   rdi,rdi
  4290bc:	je     4290ea <strcmp@plt+0x25932>
  4290be:	mov    rdi,QWORD PTR [rdi+0x10]
  4290c2:	add    rsp,0x8
  4290c6:	jmp    424b00 <strcmp@plt+0x21348>
  4290cb:	lea    rcx,[rip+0x2530e]        # 44e3e0 <strcmp@plt+0x4ac28>
  4290d2:	lea    rsi,[rip+0x2515d]        # 44e236 <strcmp@plt+0x4aa7e>
  4290d9:	lea    rdi,[rip+0x251c3]        # 44e2a3 <strcmp@plt+0x4aaeb>
  4290e0:	mov    edx,0x3b9
  4290e5:	call   4032c0 <__assert_fail@plt>
  4290ea:	lea    rcx,[rip+0x252ef]        # 44e3e0 <strcmp@plt+0x4ac28>
  4290f1:	lea    rsi,[rip+0x2513e]        # 44e236 <strcmp@plt+0x4aa7e>
  4290f8:	lea    rdi,[rip+0x25186]        # 44e285 <strcmp@plt+0x4aacd>
  4290ff:	mov    edx,0x3ba
  429104:	call   4032c0 <__assert_fail@plt>
  429109:	nop    DWORD PTR [rax+0x0]
  429110:	test   rdi,rdi
  429113:	je     429124 <strcmp@plt+0x2596c>
  429115:	mov    BYTE PTR [rdi],sil
  429118:	mov    WORD PTR [rdi+0x2],dx
  42911c:	mov    BYTE PTR [rdi+0x4],cl
  42911f:	mov    BYTE PTR [rdi+0x5],r8b
  429123:	ret    
  429124:	sub    rsp,0x8
  429128:	call   403a9f <strcmp@plt+0x2e7>
  42912d:	nop    DWORD PTR [rax]
  429130:	test   rdi,rdi
  429133:	je     429145 <strcmp@plt+0x2598d>
  429135:	mov    BYTE PTR [rdi+0x6],sil
  429139:	mov    WORD PTR [rdi+0x8],dx
  42913d:	mov    BYTE PTR [rdi+0xa],cl
  429140:	mov    BYTE PTR [rdi+0xb],r8b
  429144:	ret    
  429145:	sub    rsp,0x8
  429149:	call   403ac2 <strcmp@plt+0x30a>
  42914e:	xchg   ax,ax
  429150:	test   rdi,rdi
  429153:	je     429171 <strcmp@plt+0x259b9>
  429155:	movzx  eax,BYTE PTR [rsi]
  429158:	mov    BYTE PTR [rdi],al
  42915a:	movzx  eax,WORD PTR [rsi+0x2]
  42915e:	mov    WORD PTR [rdi+0x2],ax
  429162:	movzx  eax,BYTE PTR [rsi+0x4]
  429166:	mov    BYTE PTR [rdi+0x4],al
  429169:	movzx  eax,BYTE PTR [rsi+0x5]
  42916d:	mov    BYTE PTR [rdi+0x5],al
  429170:	ret    
  429171:	sub    rsp,0x8
  429175:	call   403ae5 <strcmp@plt+0x32d>
  42917a:	nop    WORD PTR [rax+rax*1+0x0]
  429180:	test   rdi,rdi
  429183:	je     4291a2 <strcmp@plt+0x259ea>
  429185:	movzx  eax,BYTE PTR [rsi]
  429188:	mov    BYTE PTR [rdi+0x6],al
  42918b:	movzx  eax,WORD PTR [rsi+0x2]
  42918f:	mov    WORD PTR [rdi+0x8],ax
  429193:	movzx  eax,BYTE PTR [rsi+0x4]
  429197:	mov    BYTE PTR [rdi+0xa],al
  42919a:	movzx  eax,BYTE PTR [rsi+0x5]
  42919e:	mov    BYTE PTR [rdi+0xb],al
  4291a1:	ret    
  4291a2:	sub    rsp,0x8
  4291a6:	call   403b08 <strcmp@plt+0x350>
  4291ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4291b0:	test   rdi,rdi
  4291b3:	je     4291b9 <strcmp@plt+0x25a01>
  4291b5:	mov    DWORD PTR [rdi+0xc],esi
  4291b8:	ret    
  4291b9:	sub    rsp,0x8
  4291bd:	call   403b2b <strcmp@plt+0x373>
  4291c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4291cd:	nop    DWORD PTR [rax]
  4291d0:	test   rdi,rdi
  4291d3:	je     4291d9 <strcmp@plt+0x25a21>
  4291d5:	mov    rax,rdi
  4291d8:	ret    
  4291d9:	lea    rcx,[rip+0x25140]        # 44e320 <strcmp@plt+0x4ab68>
  4291e0:	lea    rsi,[rip+0x2504f]        # 44e236 <strcmp@plt+0x4aa7e>
  4291e7:	lea    rdi,[rip+0x25097]        # 44e285 <strcmp@plt+0x4aacd>
  4291ee:	sub    rsp,0x8
  4291f2:	mov    edx,0x3f2
  4291f7:	call   4032c0 <__assert_fail@plt>
  4291fc:	nop    DWORD PTR [rax+0x0]
  429200:	test   rdi,rdi
  429203:	je     42920a <strcmp@plt+0x25a52>
  429205:	lea    rax,[rdi+0x6]
  429209:	ret    
  42920a:	lea    rcx,[rip+0x250ef]        # 44e300 <strcmp@plt+0x4ab48>
  429211:	lea    rsi,[rip+0x2501e]        # 44e236 <strcmp@plt+0x4aa7e>
  429218:	lea    rdi,[rip+0x25066]        # 44e285 <strcmp@plt+0x4aacd>
  42921f:	sub    rsp,0x8
  429223:	mov    edx,0x3f9
  429228:	call   4032c0 <__assert_fail@plt>
  42922d:	nop    DWORD PTR [rax]
  429230:	test   rdi,rdi
  429233:	je     429239 <strcmp@plt+0x25a81>
  429235:	mov    eax,DWORD PTR [rdi+0xc]
  429238:	ret    
  429239:	sub    rsp,0x8
  42923d:	call   403b4e <strcmp@plt+0x396>
  429242:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42924d:	nop    DWORD PTR [rax]
  429250:	mov    rax,QWORD PTR [rdi+0x10]
  429254:	ret    
  429255:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429260:	push   rbx
  429261:	mov    BYTE PTR [rip+0x47b78],0x0        # 470de0 <strcmp@plt+0x6d628>
  429268:	lea    rbx,[rip+0x47b71]        # 470de0 <strcmp@plt+0x6d628>
  42926f:	movzx  eax,BYTE PTR [rdi+0x5]
  429273:	lea    r8,[rip+0x2502e]        # 44e2a8 <strcmp@plt+0x4aaf0>
  42927a:	mov    ecx,0x60
  42927f:	sub    rsp,0x8
  429283:	mov    edx,0x1
  429288:	mov    esi,0x60
  42928d:	push   rax
  42928e:	movzx  eax,BYTE PTR [rdi+0x4]
  429292:	push   rax
  429293:	movzx  eax,WORD PTR [rdi+0x2]
  429297:	push   rax
  429298:	movzx  r9d,BYTE PTR [rdi]
  42929c:	xor    eax,eax
  42929e:	mov    rdi,rbx
  4292a1:	call   4032a0 <__snprintf_chk@plt>
  4292a6:	add    rsp,0x20
  4292aa:	mov    rax,rbx
  4292ad:	pop    rbx
  4292ae:	ret    
  4292af:	nop
  4292b0:	mov    eax,DWORD PTR [rip+0x47f4a]        # 471200 <strcmp@plt+0x6da48>
  4292b6:	mov    edx,0xcccccccd
  4292bb:	push   r14
  4292bd:	push   r13
  4292bf:	push   r12
  4292c1:	push   rbp
  4292c2:	push   rbx
  4292c3:	lea    rbx,[rip+0x47b76]        # 470e40 <strcmp@plt+0x6d688>
  4292ca:	lea    ecx,[rax+0x1]
  4292cd:	mov    rbp,rdi
  4292d0:	mov    eax,ecx
  4292d2:	mul    edx
  4292d4:	shr    edx,0x3
  4292d7:	lea    eax,[rdx+rdx*4]
  4292da:	add    eax,eax
  4292dc:	sub    ecx,eax
  4292de:	mov    edx,ecx
  4292e0:	lea    rax,[rdx+rdx*2]
  4292e4:	mov    DWORD PTR [rip+0x47f16],edx        # 471200 <strcmp@plt+0x6da48>
  4292ea:	shl    rax,0x5
  4292ee:	mov    BYTE PTR [rbx+rax*1],0x0
  4292f2:	mov    rdi,QWORD PTR [rdi+0x10]
  4292f6:	call   424890 <strcmp@plt+0x210d8>
  4292fb:	lea    rdi,[rbp+0x6]
  4292ff:	mov    r13d,DWORD PTR [rbp+0xc]
  429303:	mov    r14,rax
  429306:	call   429260 <strcmp@plt+0x25aa8>
  42930b:	mov    rdi,rbp
  42930e:	mov    r12,rax
  429311:	call   429260 <strcmp@plt+0x25aa8>
  429316:	mov    edx,DWORD PTR [rip+0x47ee4]        # 471200 <strcmp@plt+0x6da48>
  42931c:	sub    rsp,0x8
  429320:	lea    r8,[rip+0x24df9]        # 44e120 <strcmp@plt+0x4a968>
  429327:	push   r14
  429329:	push   r13
  42932b:	mov    r9,rax
  42932e:	push   r12
  429330:	mov    rcx,0xffffffffffffffff
  429337:	mov    esi,0x60
  42933c:	xor    eax,eax
  42933e:	lea    rdi,[rdx+rdx*2]
  429342:	mov    edx,0x1
  429347:	shl    rdi,0x5
  42934b:	add    rdi,rbx
  42934e:	call   4032a0 <__snprintf_chk@plt>
  429353:	mov    eax,DWORD PTR [rip+0x47ea7]        # 471200 <strcmp@plt+0x6da48>
  429359:	add    rsp,0x20
  42935d:	lea    rax,[rax+rax*2]
  429361:	shl    rax,0x5
  429365:	add    rax,rbx
  429368:	pop    rbx
  429369:	pop    rbp
  42936a:	pop    r12
  42936c:	pop    r13
  42936e:	pop    r14
  429370:	ret    
  429371:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42937c:	nop    DWORD PTR [rax+0x0]
  429380:	push   rbx
  429381:	mov    edi,0x30
  429386:	call   434790 <strcmp@plt+0x30fd8>
  42938b:	mov    rbx,rax
  42938e:	xor    eax,eax
  429390:	call   424740 <strcmp@plt+0x20f88>
  429395:	mov    QWORD PTR [rbx+0x18],rax
  429399:	xor    eax,eax
  42939b:	call   424740 <strcmp@plt+0x20f88>
  4293a0:	mov    QWORD PTR [rbx+0x8],rax
  4293a4:	xor    eax,eax
  4293a6:	call   424740 <strcmp@plt+0x20f88>
  4293ab:	mov    rdi,0x424750
  4293b2:	mov    QWORD PTR [rbx+0x20],rax
  4293b6:	call   42d4f0 <strcmp@plt+0x29d38>
  4293bb:	mov    QWORD PTR [rbx+0x28],rax
  4293bf:	mov    rax,rbx
  4293c2:	pop    rbx
  4293c3:	ret    
  4293c4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4293cf:	nop
  4293d0:	push   r15
  4293d2:	push   r14
  4293d4:	mov    r15d,edx
  4293d7:	push   r13
  4293d9:	push   r12
  4293db:	mov    r14,rsi
  4293de:	push   rbp
  4293df:	push   rbx
  4293e0:	mov    ebp,edi
  4293e2:	mov    edi,0x30
  4293e7:	mov    r13,rcx
  4293ea:	mov    r12,r8
  4293ed:	sub    rsp,0x18
  4293f1:	mov    QWORD PTR [rsp+0x8],r9
  4293f6:	call   434790 <strcmp@plt+0x30fd8>
  4293fb:	mov    rdi,r14
  4293fe:	mov    rbx,rax
  429401:	mov    WORD PTR [rax+0x10],bp
  429405:	mov    WORD PTR [rax],r15w
  429409:	call   424b80 <strcmp@plt+0x213c8>
  42940e:	mov    rdi,r13
  429411:	mov    QWORD PTR [rbx+0x18],rax
  429415:	call   424b80 <strcmp@plt+0x213c8>
  42941a:	mov    rdi,r12
  42941d:	mov    QWORD PTR [rbx+0x8],rax
  429421:	call   424b80 <strcmp@plt+0x213c8>
  429426:	mov    r9,QWORD PTR [rsp+0x8]
  42942b:	mov    rsi,0x424b80
  429432:	mov    QWORD PTR [rbx+0x20],rax
  429436:	mov    rdi,r9
  429439:	call   42d670 <strcmp@plt+0x29eb8>
  42943e:	mov    rsi,0x424750
  429445:	mov    QWORD PTR [rbx+0x28],rax
  429449:	mov    rdi,rax
  42944c:	call   42d530 <strcmp@plt+0x29d78>
  429451:	add    rsp,0x18
  429455:	mov    rax,rbx
  429458:	pop    rbx
  429459:	pop    rbp
  42945a:	pop    r12
  42945c:	pop    r13
  42945e:	pop    r14
  429460:	pop    r15
  429462:	ret    
  429463:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42946e:	xchg   ax,ax
  429470:	movzx  eax,WORD PTR [rdi+0x10]
  429474:	ret    
  429475:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429480:	movzx  eax,WORD PTR [rdi]
  429483:	ret    
  429484:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42948f:	nop
  429490:	mov    rax,QWORD PTR [rdi+0x18]
  429494:	ret    
  429495:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4294a0:	mov    rax,QWORD PTR [rdi+0x8]
  4294a4:	ret    
  4294a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4294b0:	mov    rax,QWORD PTR [rdi+0x20]
  4294b4:	ret    
  4294b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4294c0:	mov    rax,QWORD PTR [rdi+0x28]
  4294c4:	ret    
  4294c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4294d0:	mov    WORD PTR [rdi+0x10],si
  4294d4:	ret    
  4294d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4294e0:	mov    WORD PTR [rdi],si
  4294e3:	ret    
  4294e4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4294ef:	nop
  4294f0:	mov    rdi,QWORD PTR [rdi+0x18]
  4294f4:	jmp    424b00 <strcmp@plt+0x21348>
  4294f9:	nop    DWORD PTR [rax+0x0]
  429500:	mov    rdi,QWORD PTR [rdi+0x8]
  429504:	jmp    424b00 <strcmp@plt+0x21348>
  429509:	nop    DWORD PTR [rax+0x0]
  429510:	mov    rdi,QWORD PTR [rdi+0x20]
  429514:	jmp    424b00 <strcmp@plt+0x21348>
  429519:	nop    DWORD PTR [rax+0x0]
  429520:	push   rbp
  429521:	push   rbx
  429522:	mov    rbx,rdi
  429525:	mov    rbp,rsi
  429528:	sub    rsp,0x8
  42952c:	mov    rdi,QWORD PTR [rdi+0x28]
  429530:	call   42dac0 <strcmp@plt+0x2a308>
  429535:	mov    rsi,0x424b80
  42953c:	mov    rdi,rbp
  42953f:	call   42d670 <strcmp@plt+0x29eb8>
  429544:	mov    rsi,0x424750
  42954b:	mov    QWORD PTR [rbx+0x28],rax
  42954f:	add    rsp,0x8
  429553:	pop    rbx
  429554:	pop    rbp
  429555:	mov    rdi,rax
  429558:	jmp    42d530 <strcmp@plt+0x29d78>
  42955d:	nop    DWORD PTR [rax]
  429560:	push   r12
  429562:	push   rbp
  429563:	mov    r12,rdx
  429566:	push   rbx
  429567:	mov    ebp,ecx
  429569:	mov    rbx,rdi
  42956c:	mov    rcx,r8
  42956f:	mov    r8,r9
  429572:	sub    rsp,0x20
  429576:	cmp    QWORD PTR [rdi+0x8],0x0
  42957b:	je     4295a8 <strcmp@plt+0x25df0>
  42957d:	mov    r9,QWORD PTR [rsp+0x40]
  429582:	mov    DWORD PTR [rbx],0x7
  429588:	movzx  edx,bp
  42958b:	movzx  edi,si
  42958e:	mov    rsi,r12
  429591:	call   4293d0 <strcmp@plt+0x25c18>
  429596:	mov    QWORD PTR [rbx+0x8],rax
  42959a:	add    rsp,0x20
  42959e:	pop    rbx
  42959f:	pop    rbp
  4295a0:	pop    r12
  4295a2:	ret    
  4295a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4295a8:	mov    QWORD PTR [rsp+0x10],rcx
  4295ad:	mov    DWORD PTR [rsp+0xc],esi
  4295b1:	mov    QWORD PTR [rsp+0x18],r9
  4295b6:	call   428160 <strcmp@plt+0x249a8>
  4295bb:	mov    r8,QWORD PTR [rsp+0x18]
  4295c0:	mov    rcx,QWORD PTR [rsp+0x10]
  4295c5:	mov    esi,DWORD PTR [rsp+0xc]
  4295c9:	jmp    42957d <strcmp@plt+0x25dc5>
  4295cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4295d0:	cmp    DWORD PTR [rdi+0x18],0x3
  4295d4:	je     4295e0 <strcmp@plt+0x25e28>
  4295d6:	xor    eax,eax
  4295d8:	ret    
  4295d9:	nop    DWORD PTR [rax+0x0]
  4295e0:	sub    rsp,0x8
  4295e4:	call   424f30 <strcmp@plt+0x21778>
  4295e9:	cmp    eax,0x7
  4295ec:	sete   al
  4295ef:	add    rsp,0x8
  4295f3:	movzx  eax,al
  4295f6:	ret    
  4295f7:	nop    WORD PTR [rax+rax*1+0x0]
  429600:	push   r15
  429602:	push   r14
  429604:	mov    r15,r8
  429607:	push   r13
  429609:	push   r12
  42960b:	mov    r13,rsi
  42960e:	push   rbp
  42960f:	push   rbx
  429610:	mov    ebx,edi
  429612:	mov    edi,0x3
  429617:	mov    ebp,edx
  429619:	mov    r14,rcx
  42961c:	sub    rsp,0x18
  429620:	mov    QWORD PTR [rsp+0x8],r9
  429625:	call   424670 <strcmp@plt+0x20eb8>
  42962a:	sub    rsp,0x8
  42962e:	movzx  ecx,bp
  429631:	movzx  esi,bx
  429634:	mov    r9,QWORD PTR [rsp+0x10]
  429639:	mov    r8,r14
  42963c:	mov    rdx,r13
  42963f:	mov    rdi,rax
  429642:	mov    r12,rax
  429645:	push   r9
  429647:	mov    r9,r15
  42964a:	call   429560 <strcmp@plt+0x25da8>
  42964f:	add    rsp,0x28
  429653:	mov    rax,r12
  429656:	pop    rbx
  429657:	pop    rbp
  429658:	pop    r12
  42965a:	pop    r13
  42965c:	pop    r14
  42965e:	pop    r15
  429660:	ret    
  429661:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42966c:	nop    DWORD PTR [rax+0x0]
  429670:	test   rdi,rdi
  429673:	je     42967a <strcmp@plt+0x25ec2>
  429675:	mov    rax,QWORD PTR [rdi+0x8]
  429679:	ret    
  42967a:	sub    rsp,0x8
  42967e:	call   4037e3 <strcmp@plt+0x2b>
  429683:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42968e:	xchg   ax,ax
  429690:	push   rbx
  429691:	mov    edi,0x8
  429696:	call   434790 <strcmp@plt+0x30fd8>
  42969b:	mov    rdi,0x426650
  4296a2:	mov    rbx,rax
  4296a5:	call   42d4f0 <strcmp@plt+0x29d38>
  4296aa:	mov    QWORD PTR [rbx],rax
  4296ad:	mov    rax,rbx
  4296b0:	pop    rbx
  4296b1:	ret    
  4296b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4296bd:	nop    DWORD PTR [rax]
  4296c0:	push   rbp
  4296c1:	push   rbx
  4296c2:	xor    eax,eax
  4296c4:	sub    rsp,0x8
  4296c8:	call   429690 <strcmp@plt+0x25ed8>
  4296cd:	test   rax,rax
  4296d0:	je     429710 <strcmp@plt+0x25f58>
  4296d2:	mov    edi,0x3
  4296d7:	mov    rbp,rax
  4296da:	call   424670 <strcmp@plt+0x20eb8>
  4296df:	test   rax,rax
  4296e2:	mov    rbx,rax
  4296e5:	je     429718 <strcmp@plt+0x25f60>
  4296e7:	mov    esi,0xa
  4296ec:	mov    rdi,rax
  4296ef:	call   424f40 <strcmp@plt+0x21788>
  4296f4:	mov    rsi,rbp
  4296f7:	mov    rdi,rbx
  4296fa:	call   424f10 <strcmp@plt+0x21758>
  4296ff:	add    rsp,0x8
  429703:	mov    rax,rbx
  429706:	pop    rbx
  429707:	pop    rbp
  429708:	ret    
  429709:	nop    DWORD PTR [rax+0x0]
  429710:	xor    ebx,ebx
  429712:	jmp    4296ff <strcmp@plt+0x25f47>
  429714:	nop    DWORD PTR [rax+0x0]
  429718:	mov    rdi,rbp
  42971b:	call   426d30 <strcmp@plt+0x23578>
  429720:	jmp    4296ff <strcmp@plt+0x25f47>
  429722:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42972d:	nop    DWORD PTR [rax]
  429730:	push   r14
  429732:	push   r13
  429734:	xor    eax,eax
  429736:	push   r12
  429738:	push   rbp
  429739:	mov    rbp,rsi
  42973c:	push   rbx
  42973d:	mov    rbx,rdi
  429740:	add    rbx,0x8
  429744:	call   429690 <strcmp@plt+0x25ed8>
  429749:	mov    QWORD PTR [rbp+0x0],rax
  42974d:	movzx  ebp,WORD PTR [rbx-0x2]
  429751:	rol    bp,0x8
  429755:	movzx  ebp,bp
  429758:	test   ebp,ebp
  42975a:	je     429836 <strcmp@plt+0x2607e>
  429760:	mov    r13,rax
  429763:	mov    r12d,0x8
  429769:	jmp    429791 <strcmp@plt+0x25fd9>
  42976b:	nop    DWORD PTR [rax+rax*1+0x0]
  429770:	mov    rsi,QWORD PTR [r13+0x0]
  429774:	movsxd rdi,eax
  429777:	sub    ebp,0x2
  42977a:	add    rbx,rdi
  42977d:	sub    ebp,eax
  42977f:	mov    rdi,r14
  429782:	lea    r12d,[rax+r12*1+0x2]
  429787:	call   42d6d0 <strcmp@plt+0x29f18>
  42978c:	cmp    ebp,0x0
  42978f:	jle    429808 <strcmp@plt+0x26050>
  429791:	mov    edi,0x1
  429796:	mov    esi,0x10
  42979b:	add    rbx,0x2
  42979f:	call   4032e0 <calloc@plt>
  4297a4:	movzx  edx,BYTE PTR [rbx-0x1]
  4297a8:	mov    r14,rax
  4297ab:	mov    eax,edx
  4297ad:	mov    esi,edx
  4297af:	and    edx,0x1
  4297b2:	shr    al,0x2
  4297b5:	and    esi,0x2
  4297b8:	shl    edx,0x2
  4297bb:	and    eax,0x1
  4297be:	mov    ecx,eax
  4297c0:	movzx  eax,BYTE PTR [r14]
  4297c4:	and    eax,0xfffffffc
  4297c7:	or     eax,ecx
  4297c9:	or     eax,esi
  4297cb:	and    eax,0xfffffffb
  4297ce:	or     eax,edx
  4297d0:	mov    BYTE PTR [r14],al
  4297d3:	xor    eax,eax
  4297d5:	call   424740 <strcmp@plt+0x20f88>
  4297da:	mov    rdi,rbx
  4297dd:	mov    rsi,rax
  4297e0:	mov    QWORD PTR [r14+0x8],rax
  4297e4:	call   424d30 <strcmp@plt+0x21578>
  4297e9:	test   eax,eax
  4297eb:	jg     429770 <strcmp@plt+0x25fb8>
  4297ed:	mov    rdi,QWORD PTR [r13+0x0]
  4297f1:	xor    r12d,r12d
  4297f4:	call   42dac0 <strcmp@plt+0x2a308>
  4297f9:	pop    rbx
  4297fa:	mov    eax,r12d
  4297fd:	pop    rbp
  4297fe:	pop    r12
  429800:	pop    r13
  429802:	pop    r14
  429804:	ret    
  429805:	nop    DWORD PTR [rax]
  429808:	je     4297f9 <strcmp@plt+0x26041>
  42980a:	mov    rax,0x468e3c
  429811:	mov    eax,DWORD PTR [rax]
  429813:	test   eax,eax
  429815:	jle    4297f9 <strcmp@plt+0x26041>
  429817:	lea    rsi,[rip+0x2493a]        # 44e158 <strcmp@plt+0x4a9a0>
  42981e:	xor    eax,eax
  429820:	mov    edi,0x5
  429825:	call   4306a0 <strcmp@plt+0x2cee8>
  42982a:	pop    rbx
  42982b:	mov    eax,r12d
  42982e:	pop    rbp
  42982f:	pop    r12
  429831:	pop    r13
  429833:	pop    r14
  429835:	ret    
  429836:	mov    r12d,0x8
  42983c:	jmp    4297f9 <strcmp@plt+0x26041>
  42983e:	xchg   ax,ax
  429840:	push   rbp
  429841:	push   rbx
  429842:	mov    rbp,rdi
  429845:	mov    edi,0x10
  42984a:	sub    rsp,0x8
  42984e:	call   434790 <strcmp@plt+0x30fd8>
  429853:	movzx  edx,BYTE PTR [rbp+0x0]
  429857:	mov    rbx,rax
  42985a:	movzx  eax,BYTE PTR [rax]
  42985d:	and    edx,0x1
  429860:	and    eax,0xfffffffe
  429863:	or     eax,edx
  429865:	mov    BYTE PTR [rbx],al
  429867:	movzx  edx,BYTE PTR [rbp+0x0]
  42986b:	and    eax,0xfffffffd
  42986e:	and    edx,0x2
  429871:	or     eax,edx
  429873:	mov    BYTE PTR [rbx],al
  429875:	movzx  edx,BYTE PTR [rbp+0x0]
  429879:	and    eax,0xfffffffb
  42987c:	and    edx,0x4
  42987f:	or     eax,edx
  429881:	mov    BYTE PTR [rbx],al
  429883:	mov    rdi,QWORD PTR [rbp+0x8]
  429887:	call   424b80 <strcmp@plt+0x213c8>
  42988c:	mov    QWORD PTR [rbx+0x8],rax
  429890:	add    rsp,0x8
  429894:	mov    rax,rbx
  429897:	pop    rbx
  429898:	pop    rbp
  429899:	ret    
  42989a:	nop    WORD PTR [rax+rax*1+0x0]
  4298a0:	push   r12
  4298a2:	push   rbp
  4298a3:	mov    r12,rsi
  4298a6:	push   rbx
  4298a7:	sub    rsp,0x10
  4298ab:	mov    rbp,QWORD PTR [rdi]
  4298ae:	test   rbp,rbp
  4298b1:	je     4298e8 <strcmp@plt+0x26130>
  4298b3:	mov    rax,QWORD PTR [r12]
  4298b7:	mov    rbx,QWORD PTR [rax+0x8]
  4298bb:	cmp    rax,rbx
  4298be:	je     4298df <strcmp@plt+0x26127>
  4298c0:	mov    rdi,QWORD PTR [rbx+0x10]
  4298c4:	call   429840 <strcmp@plt+0x26088>
  4298c9:	mov    rsi,QWORD PTR [rbp+0x0]
  4298cd:	mov    rdi,rax
  4298d0:	call   42d6d0 <strcmp@plt+0x29f18>
  4298d5:	mov    rbx,QWORD PTR [rbx+0x8]
  4298d9:	cmp    QWORD PTR [r12],rbx
  4298dd:	jne    4298c0 <strcmp@plt+0x26108>
  4298df:	add    rsp,0x10
  4298e3:	pop    rbx
  4298e4:	pop    rbp
  4298e5:	pop    r12
  4298e7:	ret    
  4298e8:	xor    eax,eax
  4298ea:	mov    QWORD PTR [rsp+0x8],rdi
  4298ef:	call   429690 <strcmp@plt+0x25ed8>
  4298f4:	mov    rdi,QWORD PTR [rsp+0x8]
  4298f9:	mov    rbp,rax
  4298fc:	mov    QWORD PTR [rdi],rax
  4298ff:	jmp    4298b3 <strcmp@plt+0x260fb>
  429901:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42990c:	nop    DWORD PTR [rax+0x0]
  429910:	push   r14
  429912:	push   r13
  429914:	mov    r14,rdi
  429917:	push   r12
  429919:	push   rbp
  42991a:	mov    edi,0x10
  42991f:	push   rbx
  429920:	mov    r13d,esi
  429923:	mov    r12d,edx
  429926:	mov    ebp,ecx
  429928:	call   434790 <strcmp@plt+0x30fd8>
  42992d:	test   rax,rax
  429930:	mov    rbx,rax
  429933:	je     429965 <strcmp@plt+0x261ad>
  429935:	mov    rdi,r14
  429938:	and    r13d,0x1
  42993c:	and    r12d,0x1
  429940:	call   424b80 <strcmp@plt+0x213c8>
  429945:	movzx  ecx,BYTE PTR [rbx]
  429948:	add    r12d,r12d
  42994b:	and    ebp,0x1
  42994e:	shl    ebp,0x2
  429951:	mov    QWORD PTR [rbx+0x8],rax
  429955:	and    ecx,0xfffffffc
  429958:	or     ecx,r13d
  42995b:	or     ecx,r12d
  42995e:	and    ecx,0xfffffffb
  429961:	or     ecx,ebp
  429963:	mov    BYTE PTR [rbx],cl
  429965:	mov    rax,rbx
  429968:	pop    rbx
  429969:	pop    rbp
  42996a:	pop    r12
  42996c:	pop    r13
  42996e:	pop    r14
  429970:	ret    
  429971:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42997c:	nop    DWORD PTR [rax+0x0]
  429980:	mov    rax,QWORD PTR [rdi+0x8]
  429984:	ret    
  429985:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429990:	push   rbp
  429991:	push   rbx
  429992:	mov    rbp,rsi
  429995:	sub    rsp,0x8
  429999:	mov    rsi,QWORD PTR [rdi]
  42999c:	test   rsi,rsi
  42999f:	je     4299b0 <strcmp@plt+0x261f8>
  4299a1:	add    rsp,0x8
  4299a5:	mov    rdi,rbp
  4299a8:	pop    rbx
  4299a9:	pop    rbp
  4299aa:	jmp    42d6d0 <strcmp@plt+0x29f18>
  4299af:	nop
  4299b0:	mov    rbx,rdi
  4299b3:	mov    rdi,0x426650
  4299ba:	call   42d4f0 <strcmp@plt+0x29d38>
  4299bf:	mov    QWORD PTR [rbx],rax
  4299c2:	add    rsp,0x8
  4299c6:	mov    rdi,rbp
  4299c9:	pop    rbx
  4299ca:	pop    rbp
  4299cb:	mov    rsi,rax
  4299ce:	jmp    42d6d0 <strcmp@plt+0x29f18>
  4299d3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4299de:	xchg   ax,ax
  4299e0:	mov    rax,QWORD PTR [rdi+0x8]
  4299e4:	mov    rax,QWORD PTR [rax]
  4299e7:	ret    
  4299e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4299f0:	cmp    DWORD PTR [rdi+0x18],0x3
  4299f4:	je     429a00 <strcmp@plt+0x26248>
  4299f6:	xor    eax,eax
  4299f8:	ret    
  4299f9:	nop    DWORD PTR [rax+0x0]
  429a00:	sub    rsp,0x8
  429a04:	call   424f30 <strcmp@plt+0x21778>
  429a09:	cmp    eax,0xa
  429a0c:	sete   al
  429a0f:	add    rsp,0x8
  429a13:	movzx  eax,al
  429a16:	ret    
  429a17:	nop    WORD PTR [rax+rax*1+0x0]
  429a20:	push   rbx
  429a21:	mov    edi,0x8
  429a26:	call   434790 <strcmp@plt+0x30fd8>
  429a2b:	mov    rdi,0x426670
  429a32:	mov    rbx,rax
  429a35:	call   42d4f0 <strcmp@plt+0x29d38>
  429a3a:	mov    QWORD PTR [rbx],rax
  429a3d:	mov    rax,rbx
  429a40:	pop    rbx
  429a41:	ret    
  429a42:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429a4d:	nop    DWORD PTR [rax]
  429a50:	push   rbp
  429a51:	push   rbx
  429a52:	mov    rbp,rdi
  429a55:	mov    edi,0x10
  429a5a:	sub    rsp,0x8
  429a5e:	call   434790 <strcmp@plt+0x30fd8>
  429a63:	mov    rbx,rax
  429a66:	movzx  eax,BYTE PTR [rbp+0x8]
  429a6a:	mov    BYTE PTR [rbx+0x8],al
  429a6d:	mov    rdi,QWORD PTR [rbp+0x0]
  429a71:	call   424b80 <strcmp@plt+0x213c8>
  429a76:	mov    QWORD PTR [rbx],rax
  429a79:	add    rsp,0x8
  429a7d:	mov    rax,rbx
  429a80:	pop    rbx
  429a81:	pop    rbp
  429a82:	ret    
  429a83:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429a8e:	xchg   ax,ax
  429a90:	push   r12
  429a92:	push   rbp
  429a93:	mov    r12,rsi
  429a96:	push   rbx
  429a97:	mov    rbp,QWORD PTR [rdi]
  429a9a:	test   rbp,rbp
  429a9d:	je     429ad4 <strcmp@plt+0x2631c>
  429a9f:	mov    rax,QWORD PTR [r12]
  429aa3:	mov    rbx,QWORD PTR [rax+0x8]
  429aa7:	cmp    rax,rbx
  429aaa:	je     429acf <strcmp@plt+0x26317>
  429aac:	nop    DWORD PTR [rax+0x0]
  429ab0:	mov    rdi,QWORD PTR [rbx+0x10]
  429ab4:	call   429a50 <strcmp@plt+0x26298>
  429ab9:	mov    rsi,QWORD PTR [rbp+0x0]
  429abd:	mov    rdi,rax
  429ac0:	call   42d6d0 <strcmp@plt+0x29f18>
  429ac5:	mov    rbx,QWORD PTR [rbx+0x8]
  429ac9:	cmp    QWORD PTR [r12],rbx
  429acd:	jne    429ab0 <strcmp@plt+0x262f8>
  429acf:	pop    rbx
  429ad0:	pop    rbp
  429ad1:	pop    r12
  429ad3:	ret    
  429ad4:	mov    rbx,rdi
  429ad7:	mov    edi,0x8
  429adc:	call   434790 <strcmp@plt+0x30fd8>
  429ae1:	mov    rdi,0x426670
  429ae8:	mov    rbp,rax
  429aeb:	call   42d4f0 <strcmp@plt+0x29d38>
  429af0:	mov    QWORD PTR [rbp+0x0],rax
  429af4:	mov    QWORD PTR [rbx],rbp
  429af7:	jmp    429a9f <strcmp@plt+0x262e7>
  429af9:	nop    DWORD PTR [rax+0x0]
  429b00:	push   rbx
  429b01:	mov    edi,0x10
  429b06:	call   434790 <strcmp@plt+0x30fd8>
  429b0b:	mov    rbx,rax
  429b0e:	xor    eax,eax
  429b10:	call   424740 <strcmp@plt+0x20f88>
  429b15:	mov    QWORD PTR [rbx],rax
  429b18:	mov    rax,rbx
  429b1b:	pop    rbx
  429b1c:	ret    
  429b1d:	nop    DWORD PTR [rax]
  429b20:	mov    rax,QWORD PTR [rdi+0x8]
  429b24:	mov    rax,QWORD PTR [rax]
  429b27:	ret    
  429b28:	nop    DWORD PTR [rax+rax*1+0x0]
  429b30:	push   rbx
  429b31:	mov    edi,0x8
  429b36:	call   434790 <strcmp@plt+0x30fd8>
  429b3b:	mov    rdi,0x424750
  429b42:	mov    rbx,rax
  429b45:	call   42d4f0 <strcmp@plt+0x29d38>
  429b4a:	mov    QWORD PTR [rbx],rax
  429b4d:	mov    rax,rbx
  429b50:	pop    rbx
  429b51:	ret    
  429b52:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429b5d:	nop    DWORD PTR [rax]
  429b60:	sub    rsp,0x8
  429b64:	test   rdi,rdi
  429b67:	je     429bc2 <strcmp@plt+0x2640a>
  429b69:	mov    ecx,DWORD PTR [rdi]
  429b6b:	mov    rax,0x4689c0
  429b72:	mov    rax,QWORD PTR [rax+rcx*8]
  429b76:	mov    rdx,rcx
  429b79:	test   rax,rax
  429b7c:	je     429b90 <strcmp@plt+0x263d8>
  429b7e:	mov    rdi,QWORD PTR [rdi+0x8]
  429b82:	add    rsp,0x8
  429b86:	jmp    rax
  429b88:	nop    DWORD PTR [rax+rax*1+0x0]
  429b90:	mov    rax,0x468e3c
  429b97:	mov    eax,DWORD PTR [rax]
  429b99:	test   eax,eax
  429b9b:	jg     429ba8 <strcmp@plt+0x263f0>
  429b9d:	xor    eax,eax
  429b9f:	add    rsp,0x8
  429ba3:	ret    
  429ba4:	nop    DWORD PTR [rax+0x0]
  429ba8:	lea    rsi,[rip+0x245d9]        # 44e188 <strcmp@plt+0x4a9d0>
  429baf:	xor    eax,eax
  429bb1:	mov    edi,0x5
  429bb6:	call   4306a0 <strcmp@plt+0x2cee8>
  429bbb:	xor    eax,eax
  429bbd:	add    rsp,0x8
  429bc1:	ret    
  429bc2:	call   4037c0 <strcmp@plt+0x8>
  429bc7:	nop    WORD PTR [rax+rax*1+0x0]
  429bd0:	sub    rsp,0x8
  429bd4:	test   rdi,rdi
  429bd7:	je     429c32 <strcmp@plt+0x2647a>
  429bd9:	mov    ecx,DWORD PTR [rdi]
  429bdb:	mov    rax,0x468940
  429be2:	mov    rax,QWORD PTR [rax+rcx*8]
  429be6:	mov    rdx,rcx
  429be9:	test   rax,rax
  429bec:	je     429c00 <strcmp@plt+0x26448>
  429bee:	mov    rdi,QWORD PTR [rdi+0x8]
  429bf2:	add    rsp,0x8
  429bf6:	jmp    rax
  429bf8:	nop    DWORD PTR [rax+rax*1+0x0]
  429c00:	mov    rax,0x468e3c
  429c07:	mov    eax,DWORD PTR [rax]
  429c09:	test   eax,eax
  429c0b:	jg     429c18 <strcmp@plt+0x26460>
  429c0d:	xor    eax,eax
  429c0f:	add    rsp,0x8
  429c13:	ret    
  429c14:	nop    DWORD PTR [rax+0x0]
  429c18:	lea    rsi,[rip+0x24599]        # 44e1b8 <strcmp@plt+0x4aa00>
  429c1f:	xor    eax,eax
  429c21:	mov    edi,0x5
  429c26:	call   4306a0 <strcmp@plt+0x2cee8>
  429c2b:	xor    eax,eax
  429c2d:	add    rsp,0x8
  429c31:	ret    
  429c32:	call   4037c0 <strcmp@plt+0x8>
  429c37:	nop    WORD PTR [rax+rax*1+0x0]
  429c40:	push   r13
  429c42:	push   r12
  429c44:	push   rbp
  429c45:	push   rbx
  429c46:	sub    rsp,0x8
  429c4a:	test   rdi,rdi
  429c4d:	je     429d2f <strcmp@plt+0x26577>
  429c53:	mov    edx,DWORD PTR [rdi]
  429c55:	mov    r12,rdi
  429c58:	mov    r13,rsi
  429c5b:	cmp    edx,0xa
  429c5e:	je     429cd0 <strcmp@plt+0x26518>
  429c60:	cmp    edx,0xd
  429c63:	jne    429cb0 <strcmp@plt+0x264f8>
  429c65:	mov    rax,QWORD PTR [rdi+0x8]
  429c69:	mov    rax,QWORD PTR [rax]
  429c6c:	mov    rbx,QWORD PTR [rax+0x8]
  429c70:	cmp    rbx,rax
  429c73:	je     429c97 <strcmp@plt+0x264df>
  429c75:	nop    DWORD PTR [rax]
  429c78:	mov    rbp,QWORD PTR [rbx+0x10]
  429c7c:	mov    rdi,QWORD PTR [rbp+0x0]
  429c80:	call   424750 <strcmp@plt+0x20f98>
  429c85:	mov    rax,QWORD PTR [r12+0x8]
  429c8a:	mov    rbx,QWORD PTR [rbx+0x8]
  429c8e:	mov    QWORD PTR [rbp+0x0],r13
  429c92:	cmp    rbx,QWORD PTR [rax]
  429c95:	jne    429c78 <strcmp@plt+0x264c0>
  429c97:	add    rsp,0x8
  429c9b:	mov    eax,0x1
  429ca0:	pop    rbx
  429ca1:	pop    rbp
  429ca2:	pop    r12
  429ca4:	pop    r13
  429ca6:	ret    
  429ca7:	nop    WORD PTR [rax+rax*1+0x0]
  429cb0:	mov    rax,0x468e3c
  429cb7:	mov    eax,DWORD PTR [rax]
  429cb9:	test   eax,eax
  429cbb:	jg     429d18 <strcmp@plt+0x26560>
  429cbd:	xor    eax,eax
  429cbf:	add    rsp,0x8
  429cc3:	pop    rbx
  429cc4:	pop    rbp
  429cc5:	pop    r12
  429cc7:	pop    r13
  429cc9:	ret    
  429cca:	nop    WORD PTR [rax+rax*1+0x0]
  429cd0:	mov    rax,QWORD PTR [rdi+0x8]
  429cd4:	mov    rax,QWORD PTR [rax]
  429cd7:	mov    edx,DWORD PTR [rax+0x18]
  429cda:	test   edx,edx
  429cdc:	je     429d08 <strcmp@plt+0x26550>
  429cde:	mov    rax,QWORD PTR [rax]
  429ce1:	mov    rbx,QWORD PTR [rax+0x10]
  429ce5:	mov    rdi,QWORD PTR [rbx+0x8]
  429ce9:	call   424750 <strcmp@plt+0x20f98>
  429cee:	mov    QWORD PTR [rbx+0x8],r13
  429cf2:	add    rsp,0x8
  429cf6:	mov    eax,0x1
  429cfb:	pop    rbx
  429cfc:	pop    rbp
  429cfd:	pop    r12
  429cff:	pop    r13
  429d01:	ret    
  429d02:	nop    WORD PTR [rax+rax*1+0x0]
  429d08:	mov    rax,QWORD PTR ds:0x10
  429d10:	ud2    
  429d12:	nop    WORD PTR [rax+rax*1+0x0]
  429d18:	lea    rsi,[rip+0x244d1]        # 44e1f0 <strcmp@plt+0x4aa38>
  429d1f:	xor    eax,eax
  429d21:	mov    edi,0x5
  429d26:	call   4306a0 <strcmp@plt+0x2cee8>
  429d2b:	xor    eax,eax
  429d2d:	jmp    429cbf <strcmp@plt+0x26507>
  429d2f:	call   403806 <strcmp@plt+0x4e>
  429d34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429d3e:	xchg   ax,ax
  429d40:	mov    rsi,QWORD PTR [rsi]
  429d43:	mov    rdi,QWORD PTR [rdi]
  429d46:	jmp    424df0 <strcmp@plt+0x21638>
  429d4b:	nop    DWORD PTR [rax+rax*1+0x0]
  429d50:	test   rdi,rdi
  429d53:	je     429d70 <strcmp@plt+0x265b8>
  429d55:	push   rbx
  429d56:	mov    rbx,rdi
  429d59:	mov    rdi,QWORD PTR [rdi]
  429d5c:	call   424750 <strcmp@plt+0x20f98>
  429d61:	mov    rdi,rbx
  429d64:	pop    rbx
  429d65:	jmp    4037b0 <free@plt>
  429d6a:	nop    WORD PTR [rax+rax*1+0x0]
  429d70:	repz ret 
  429d72:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429d7d:	nop    DWORD PTR [rax]
  429d80:	mov    edi,0x10
  429d85:	jmp    434790 <strcmp@plt+0x30fd8>
  429d8a:	nop    WORD PTR [rax+rax*1+0x0]
  429d90:	push   r15
  429d92:	push   r14
  429d94:	mov    r15d,esi
  429d97:	push   r13
  429d99:	push   r12
  429d9b:	mov    r14d,edx
  429d9e:	push   rbp
  429d9f:	push   rbx
  429da0:	mov    r13d,ecx
  429da3:	mov    r12d,r8d
  429da6:	mov    ebp,r9d
  429da9:	sub    rsp,0x28
  429dad:	mov    eax,DWORD PTR [rsp+0x68]
  429db1:	mov    QWORD PTR [rsp+0x10],rdi
  429db6:	mov    ebx,DWORD PTR [rsp+0x60]
  429dba:	mov    DWORD PTR [rsp+0xc],eax
  429dbe:	xor    eax,eax
  429dc0:	call   429d80 <strcmp@plt+0x265c8>
  429dc5:	test   rax,rax
  429dc8:	mov    rdx,rax
  429dcb:	je     429e03 <strcmp@plt+0x2664b>
  429dcd:	mov    rdi,QWORD PTR [rsp+0x10]
  429dd2:	mov    QWORD PTR [rsp+0x18],rax
  429dd7:	call   424b80 <strcmp@plt+0x213c8>
  429ddc:	mov    rdx,QWORD PTR [rsp+0x18]
  429de1:	mov    QWORD PTR [rdx],rax
  429de4:	movzx  eax,BYTE PTR [rsp+0xc]
  429de9:	mov    BYTE PTR [rdx+0x8],r15b
  429ded:	mov    BYTE PTR [rdx+0x9],r14b
  429df1:	mov    BYTE PTR [rdx+0xa],r13b
  429df5:	mov    BYTE PTR [rdx+0xb],r12b
  429df9:	mov    BYTE PTR [rdx+0xc],bpl
  429dfd:	mov    BYTE PTR [rdx+0xd],bl
  429e00:	mov    BYTE PTR [rdx+0xe],al
  429e03:	add    rsp,0x28
  429e07:	mov    rax,rdx
  429e0a:	pop    rbx
  429e0b:	pop    rbp
  429e0c:	pop    r12
  429e0e:	pop    r13
  429e10:	pop    r14
  429e12:	pop    r15
  429e14:	ret    
  429e15:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429e20:	push   rbp
  429e21:	mov    rbp,rsp
  429e24:	push   rbx
  429e25:	sub    rsp,0x8
  429e29:	test   rdi,rdi
  429e2c:	je     42a0c0 <strcmp@plt+0x26908>
  429e32:	mov    eax,DWORD PTR [rip+0x4856c]        # 4723a4 <strcmp@plt+0x6ebec>
  429e38:	mov    edx,0x66666667
  429e3d:	mov    rbx,rdi
  429e40:	lea    ecx,[rax+0x1]
  429e43:	mov    eax,ecx
  429e45:	imul   edx
  429e47:	mov    eax,ecx
  429e49:	sar    eax,0x1f
  429e4c:	sar    edx,1
  429e4e:	sub    edx,eax
  429e50:	lea    eax,[rdx+rdx*4]
  429e53:	sub    ecx,eax
  429e55:	lea    rax,[rip+0x47b84]        # 4719e0 <strcmp@plt+0x6e228>
  429e5c:	movsxd rdx,ecx
  429e5f:	mov    DWORD PTR [rip+0x4853f],edx        # 4723a4 <strcmp@plt+0x6ebec>
  429e65:	imul   rdx,rdx,0x1f4
  429e6c:	mov    BYTE PTR [rax+rdx*1],0x0
  429e70:	mov    rdi,QWORD PTR [rdi]
  429e73:	call   424890 <strcmp@plt+0x210d8>
  429e78:	movsxd rcx,DWORD PTR [rip+0x48525]        # 4723a4 <strcmp@plt+0x6ebec>
  429e7f:	lea    rsi,[rip+0x47b5a]        # 4719e0 <strcmp@plt+0x6e228>
  429e86:	imul   rcx,rcx,0x1f4
  429e8d:	add    rcx,rsi
  429e90:	mov    rdi,rcx
  429e93:	mov    esi,DWORD PTR [rdi]
  429e95:	add    rdi,0x4
  429e99:	lea    edx,[rsi-0x1010101]
  429e9f:	andn   edx,esi,edx
  429ea4:	and    edx,0x80808080
  429eaa:	je     429e93 <strcmp@plt+0x266db>
  429eac:	mov    esi,edx
  429eae:	lea    r8,[rip+0x1ddb3]        # 447c68 <strcmp@plt+0x444b0>
  429eb5:	mov    r9,rax
  429eb8:	shr    esi,0x10
  429ebb:	test   edx,0x8080
  429ec1:	cmove  edx,esi
  429ec4:	lea    rsi,[rdi+0x2]
  429ec8:	cmove  rdi,rsi
  429ecc:	mov    esi,edx
  429ece:	add    sil,dl
  429ed1:	mov    esi,0x1f4
  429ed6:	mov    edx,0x1
  429edb:	sbb    rdi,0x3
  429edf:	xor    eax,eax
  429ee1:	sub    rdi,rcx
  429ee4:	sub    rsi,rdi
  429ee7:	add    rdi,rcx
  429eea:	mov    rcx,0xffffffffffffffff
  429ef1:	call   4032a0 <__snprintf_chk@plt>
  429ef6:	cmp    BYTE PTR [rbx+0x8],0x0
  429efa:	lea    rax,[rip+0x248b4]        # 44e7b5 <strcmp@plt+0x4affd>
  429f01:	lea    r9,[rip+0x248aa]        # 44e7b2 <strcmp@plt+0x4affa>
  429f08:	lea    rsi,[rip+0x47ad1]        # 4719e0 <strcmp@plt+0x6e228>
  429f0f:	cmove  r9,rax
  429f13:	movsxd rax,DWORD PTR [rip+0x4848a]        # 4723a4 <strcmp@plt+0x6ebec>
  429f1a:	imul   rax,rax,0x1f4
  429f21:	add    rax,rsi
  429f24:	mov    rdi,rax
  429f27:	mov    ecx,DWORD PTR [rdi]
  429f29:	add    rdi,0x4
  429f2d:	lea    edx,[rcx-0x1010101]
  429f33:	andn   edx,ecx,edx
  429f38:	and    edx,0x80808080
  429f3e:	je     429f27 <strcmp@plt+0x2676f>
  429f40:	mov    ecx,edx
  429f42:	lea    r8,[rip+0x1dd1f]        # 447c68 <strcmp@plt+0x444b0>
  429f49:	shr    ecx,0x10
  429f4c:	test   edx,0x8080
  429f52:	cmove  edx,ecx
  429f55:	lea    rcx,[rdi+0x2]
  429f59:	mov    esi,edx
  429f5b:	cmove  rdi,rcx
  429f5f:	add    sil,dl
  429f62:	mov    esi,0x1f4
  429f67:	sbb    rdi,0x3
  429f6b:	mov    edx,0x1
  429f70:	mov    rcx,0xffffffffffffffff
  429f77:	sub    rdi,rax
  429f7a:	sub    rsi,rdi
  429f7d:	add    rdi,rax
  429f80:	xor    eax,eax
  429f82:	call   4032a0 <__snprintf_chk@plt>
  429f87:	movsxd rdx,DWORD PTR [rip+0x48416]        # 4723a4 <strcmp@plt+0x6ebec>
  429f8e:	lea    rax,[rip+0x47a4b]        # 4719e0 <strcmp@plt+0x6e228>
  429f95:	imul   rdx,rdx,0x1f4
  429f9c:	add    rdx,rax
  429f9f:	mov    rdi,rdx
  429fa2:	mov    ecx,DWORD PTR [rdi]
  429fa4:	add    rdi,0x4
  429fa8:	lea    eax,[rcx-0x1010101]
  429fae:	andn   eax,ecx,eax
  429fb3:	and    eax,0x80808080
  429fb8:	je     429fa2 <strcmp@plt+0x267ea>
  429fba:	mov    ecx,eax
  429fbc:	lea    r8,[rip+0x247f7]        # 44e7ba <strcmp@plt+0x4b002>
  429fc3:	shr    ecx,0x10
  429fc6:	test   eax,0x8080
  429fcb:	cmove  eax,ecx
  429fce:	lea    rcx,[rdi+0x2]
  429fd2:	mov    esi,eax
  429fd4:	cmove  rdi,rcx
  429fd8:	add    sil,al
  429fdb:	movzx  eax,BYTE PTR [rbx+0xa]
  429fdf:	sbb    rdi,0x3
  429fe3:	sub    rsp,0x8
  429fe7:	mov    esi,0x1f4
  429fec:	sub    rdi,rdx
  429fef:	mov    rcx,0xffffffffffffffff
  429ff6:	sub    rsi,rdi
  429ff9:	add    rdi,rdx
  429ffc:	mov    edx,0x1
  42a001:	push   rax
  42a002:	movzx  r9d,BYTE PTR [rbx+0x9]
  42a007:	xor    eax,eax
  42a009:	call   4032a0 <__snprintf_chk@plt>
  42a00e:	movsxd rdx,DWORD PTR [rip+0x4838f]        # 4723a4 <strcmp@plt+0x6ebec>
  42a015:	lea    rax,[rip+0x479c4]        # 4719e0 <strcmp@plt+0x6e228>
  42a01c:	imul   rdx,rdx,0x1f4
  42a023:	add    rdx,rax
  42a026:	mov    rdi,rdx
  42a029:	mov    ecx,DWORD PTR [rdi]
  42a02b:	add    rdi,0x4
  42a02f:	lea    eax,[rcx-0x1010101]
  42a035:	andn   eax,ecx,eax
  42a03a:	and    eax,0x80808080
  42a03f:	je     42a029 <strcmp@plt+0x26871>
  42a041:	mov    ecx,eax
  42a043:	lea    r8,[rip+0x2477d]        # 44e7c7 <strcmp@plt+0x4b00f>
  42a04a:	shr    ecx,0x10
  42a04d:	test   eax,0x8080
  42a052:	cmove  eax,ecx
  42a055:	lea    rcx,[rdi+0x2]
  42a059:	mov    esi,eax
  42a05b:	cmove  rdi,rcx
  42a05f:	add    sil,al
  42a062:	movzx  eax,BYTE PTR [rbx+0xe]
  42a066:	sbb    rdi,0x3
  42a06a:	mov    esi,0x1f4
  42a06f:	mov    rcx,0xffffffffffffffff
  42a076:	sub    rdi,rdx
  42a079:	sub    rsi,rdi
  42a07c:	add    rdi,rdx
  42a07f:	mov    edx,0x1
  42a084:	mov    DWORD PTR [rsp],eax
  42a087:	movzx  eax,BYTE PTR [rbx+0xd]
  42a08b:	push   rax
  42a08c:	movzx  eax,BYTE PTR [rbx+0xc]
  42a090:	push   rax
  42a091:	movzx  r9d,BYTE PTR [rbx+0xb]
  42a096:	xor    eax,eax
  42a098:	lea    rbx,[rip+0x47941]        # 4719e0 <strcmp@plt+0x6e228>
  42a09f:	call   4032a0 <__snprintf_chk@plt>
  42a0a4:	movsxd rax,DWORD PTR [rip+0x482f9]        # 4723a4 <strcmp@plt+0x6ebec>
  42a0ab:	add    rsp,0x20
  42a0af:	imul   rax,rax,0x1f4
  42a0b6:	add    rax,rbx
  42a0b9:	mov    rbx,QWORD PTR [rbp-0x8]
  42a0bd:	leave  
  42a0be:	ret    
  42a0bf:	nop
  42a0c0:	movsxd rax,DWORD PTR [rip+0x482dd]        # 4723a4 <strcmp@plt+0x6ebec>
  42a0c7:	lea    rbx,[rip+0x47912]        # 4719e0 <strcmp@plt+0x6e228>
  42a0ce:	mov    edx,0x5f4c
  42a0d3:	imul   rax,rax,0x1f4
  42a0da:	add    rax,rbx
  42a0dd:	mov    DWORD PTR [rax],0x4c554e5f
  42a0e3:	mov    WORD PTR [rax+0x4],dx
  42a0e7:	mov    BYTE PTR [rax+0x6],0x0
  42a0eb:	mov    rbx,QWORD PTR [rbp-0x8]
  42a0ef:	leave  
  42a0f0:	ret    
  42a0f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a0fc:	nop    DWORD PTR [rax+0x0]
  42a100:	push   r12
  42a102:	push   rbp
  42a103:	mov    rbp,rsi
  42a106:	push   rbx
  42a107:	movzx  eax,BYTE PTR [rdi+0x5]
  42a10b:	mov    rbx,rdi
  42a10e:	mov    rsi,QWORD PTR [rsi]
  42a111:	and    eax,0x5
  42a114:	cmp    al,0x4
  42a116:	setne  r12b
  42a11a:	test   rsi,rsi
  42a11d:	je     42a180 <strcmp@plt+0x269c8>
  42a11f:	lea    rdi,[rbx+0x6]
  42a123:	call   424d30 <strcmp@plt+0x21578>
  42a128:	test   eax,eax
  42a12a:	jle    42a170 <strcmp@plt+0x269b8>
  42a12c:	mov    BYTE PTR [rbp+0x8],r12b
  42a130:	movzx  edx,BYTE PTR [rbx+0x5]
  42a134:	add    eax,0x6
  42a137:	shr    dl,0x2
  42a13a:	and    edx,0x1
  42a13d:	mov    BYTE PTR [rbp+0x9],dl
  42a140:	movzx  edx,BYTE PTR [rbx+0x5]
  42a144:	and    edx,0x1
  42a147:	mov    BYTE PTR [rbp+0xa],dl
  42a14a:	movzx  edx,BYTE PTR [rbx]
  42a14d:	mov    BYTE PTR [rbp+0xb],dl
  42a150:	movzx  edx,BYTE PTR [rbx+0x1]
  42a154:	mov    BYTE PTR [rbp+0xc],dl
  42a157:	movzx  edx,BYTE PTR [rbx+0x2]
  42a15b:	mov    BYTE PTR [rbp+0xd],dl
  42a15e:	movzx  edx,BYTE PTR [rbx+0x3]
  42a162:	mov    BYTE PTR [rbp+0xe],dl
  42a165:	pop    rbx
  42a166:	pop    rbp
  42a167:	pop    r12
  42a169:	ret    
  42a16a:	nop    WORD PTR [rax+rax*1+0x0]
  42a170:	pop    rbx
  42a171:	xor    eax,eax
  42a173:	pop    rbp
  42a174:	pop    r12
  42a176:	ret    
  42a177:	nop    WORD PTR [rax+rax*1+0x0]
  42a180:	xor    eax,eax
  42a182:	call   424740 <strcmp@plt+0x20f88>
  42a187:	mov    rsi,rax
  42a18a:	mov    QWORD PTR [rbp+0x0],rax
  42a18e:	jmp    42a11f <strcmp@plt+0x26967>
  42a190:	push   rbp
  42a191:	push   rbx
  42a192:	mov    rbp,rdi
  42a195:	mov    rbx,rsi
  42a198:	sub    rsp,0x8
  42a19c:	mov    rsi,QWORD PTR [rsi]
  42a19f:	mov    rdi,QWORD PTR [rdi]
  42a1a2:	call   424df0 <strcmp@plt+0x21638>
  42a1a7:	test   eax,eax
  42a1a9:	mov    edx,0x1
  42a1ae:	jne    42a1b9 <strcmp@plt+0x26a01>
  42a1b0:	movzx  eax,BYTE PTR [rbx+0xb]
  42a1b4:	cmp    BYTE PTR [rbp+0xb],al
  42a1b7:	je     42a1c8 <strcmp@plt+0x26a10>
  42a1b9:	add    rsp,0x8
  42a1bd:	mov    eax,edx
  42a1bf:	pop    rbx
  42a1c0:	pop    rbp
  42a1c1:	ret    
  42a1c2:	nop    WORD PTR [rax+rax*1+0x0]
  42a1c8:	movzx  eax,BYTE PTR [rbx+0xc]
  42a1cc:	cmp    BYTE PTR [rbp+0xc],al
  42a1cf:	jne    42a1b9 <strcmp@plt+0x26a01>
  42a1d1:	movzx  eax,BYTE PTR [rbx+0xd]
  42a1d5:	cmp    BYTE PTR [rbp+0xd],al
  42a1d8:	jne    42a1b9 <strcmp@plt+0x26a01>
  42a1da:	movzx  eax,BYTE PTR [rbx+0xe]
  42a1de:	xor    edx,edx
  42a1e0:	cmp    BYTE PTR [rbp+0xe],al
  42a1e3:	setne  dl
  42a1e6:	jmp    42a1b9 <strcmp@plt+0x26a01>
  42a1e8:	nop    DWORD PTR [rax+rax*1+0x0]
  42a1f0:	sub    rsp,0x8
  42a1f4:	movzx  eax,BYTE PTR [rdi+0xe]
  42a1f8:	movzx  ecx,BYTE PTR [rdi+0xa]
  42a1fc:	movzx  edx,BYTE PTR [rdi+0x9]
  42a200:	movzx  esi,BYTE PTR [rdi+0x8]
  42a204:	push   rax
  42a205:	movzx  eax,BYTE PTR [rdi+0xd]
  42a209:	push   rax
  42a20a:	movzx  r9d,BYTE PTR [rdi+0xc]
  42a20f:	movzx  r8d,BYTE PTR [rdi+0xb]
  42a214:	mov    rdi,QWORD PTR [rdi]
  42a217:	call   429d90 <strcmp@plt+0x265d8>
  42a21c:	add    rsp,0x18
  42a220:	ret    
  42a221:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a22c:	nop    DWORD PTR [rax+0x0]
  42a230:	test   rdi,rdi
  42a233:	mov    DWORD PTR [rsi],0x0
  42a239:	mov    DWORD PTR [rdx],0x0
  42a23f:	je     42a275 <strcmp@plt+0x26abd>
  42a241:	mov    eax,DWORD PTR [rdi+0x18]
  42a244:	test   eax,eax
  42a246:	je     42a275 <strcmp@plt+0x26abd>
  42a248:	push   rbx
  42a249:	mov    rax,QWORD PTR [rdi+0x8]
  42a24d:	mov    rbx,rdx
  42a250:	mov    rax,QWORD PTR [rax+0x10]
  42a254:	mov    rdi,QWORD PTR [rax]
  42a257:	mov    eax,DWORD PTR [rdi+0x18]
  42a25a:	cmp    eax,0x1
  42a25d:	mov    DWORD PTR [rsi],eax
  42a25f:	je     42a280 <strcmp@plt+0x26ac8>
  42a261:	jb     42a2b0 <strcmp@plt+0x26af8>
  42a263:	cmp    eax,0x2
  42a266:	je     42a290 <strcmp@plt+0x26ad8>
  42a268:	cmp    eax,0x3
  42a26b:	jne    42a274 <strcmp@plt+0x26abc>
  42a26d:	call   424f30 <strcmp@plt+0x21778>
  42a272:	mov    DWORD PTR [rbx],eax
  42a274:	pop    rbx
  42a275:	repz ret 
  42a277:	nop    WORD PTR [rax+rax*1+0x0]
  42a280:	call   4251c0 <strcmp@plt+0x21a08>
  42a285:	movzx  eax,ax
  42a288:	mov    DWORD PTR [rbx],eax
  42a28a:	pop    rbx
  42a28b:	jmp    42a275 <strcmp@plt+0x26abd>
  42a28d:	nop    DWORD PTR [rax]
  42a290:	mov    rax,0x468e3c
  42a297:	cmp    DWORD PTR [rax],0x1
  42a29a:	jle    42a274 <strcmp@plt+0x26abc>
  42a29c:	pop    rbx
  42a29d:	lea    rsi,[rip+0x24534]        # 44e7d8 <strcmp@plt+0x4b020>
  42a2a4:	mov    edi,0x6
  42a2a9:	xor    eax,eax
  42a2ab:	jmp    4306a0 <strcmp@plt+0x2cee8>
  42a2b0:	mov    DWORD PTR [rdx],0x0
  42a2b6:	pop    rbx
  42a2b7:	jmp    42a275 <strcmp@plt+0x26abd>
  42a2b9:	nop    DWORD PTR [rax+0x0]
  42a2c0:	test   rdi,rdi
  42a2c3:	je     42a32d <strcmp@plt+0x26b75>
  42a2c5:	mov    eax,DWORD PTR [rdi+0x18]
  42a2c8:	test   eax,eax
  42a2ca:	je     42a32d <strcmp@plt+0x26b75>
  42a2cc:	test   rsi,rsi
  42a2cf:	je     42a32d <strcmp@plt+0x26b75>
  42a2d1:	push   r13
  42a2d3:	push   r12
  42a2d5:	mov    r13,rsi
  42a2d8:	push   rbp
  42a2d9:	push   rbx
  42a2da:	mov    r12,rdi
  42a2dd:	sub    rsp,0x8
  42a2e1:	mov    rbx,QWORD PTR [rdi+0x8]
  42a2e5:	cmp    rdi,rbx
  42a2e8:	jne    42a2f9 <strcmp@plt+0x26b41>
  42a2ea:	jmp    42a320 <strcmp@plt+0x26b68>
  42a2ec:	nop    DWORD PTR [rax+0x0]
  42a2f0:	mov    rbx,QWORD PTR [rbx+0x8]
  42a2f4:	cmp    r12,rbx
  42a2f7:	je     42a320 <strcmp@plt+0x26b68>
  42a2f9:	mov    rbp,QWORD PTR [rbx+0x10]
  42a2fd:	mov    rsi,r13
  42a300:	mov    rdi,QWORD PTR [rbp+0x0]
  42a304:	call   424df0 <strcmp@plt+0x21638>
  42a309:	test   eax,eax
  42a30b:	jne    42a2f0 <strcmp@plt+0x26b38>
  42a30d:	add    rsp,0x8
  42a311:	mov    rax,rbp
  42a314:	pop    rbx
  42a315:	pop    rbp
  42a316:	pop    r12
  42a318:	pop    r13
  42a31a:	ret    
  42a31b:	nop    DWORD PTR [rax+rax*1+0x0]
  42a320:	add    rsp,0x8
  42a324:	xor    eax,eax
  42a326:	pop    rbx
  42a327:	pop    rbp
  42a328:	pop    r12
  42a32a:	pop    r13
  42a32c:	ret    
  42a32d:	xor    eax,eax
  42a32f:	ret    
  42a330:	test   rdi,rdi
  42a333:	je     42a3ad <strcmp@plt+0x26bf5>
  42a335:	mov    eax,DWORD PTR [rdi+0x18]
  42a338:	test   eax,eax
  42a33a:	je     42a3ad <strcmp@plt+0x26bf5>
  42a33c:	test   rsi,rsi
  42a33f:	je     42a3ad <strcmp@plt+0x26bf5>
  42a341:	push   r13
  42a343:	push   r12
  42a345:	mov    r13,rsi
  42a348:	push   rbp
  42a349:	push   rbx
  42a34a:	mov    r12,rdi
  42a34d:	sub    rsp,0x8
  42a351:	mov    rbx,QWORD PTR [rdi+0x8]
  42a355:	cmp    rdi,rbx
  42a358:	jne    42a369 <strcmp@plt+0x26bb1>
  42a35a:	jmp    42a3a0 <strcmp@plt+0x26be8>
  42a35c:	nop    DWORD PTR [rax+0x0]
  42a360:	mov    rbx,QWORD PTR [rbx+0x8]
  42a364:	cmp    r12,rbx
  42a367:	je     42a3a0 <strcmp@plt+0x26be8>
  42a369:	mov    rbp,QWORD PTR [rbx+0x10]
  42a36d:	mov    rsi,r13
  42a370:	mov    rdi,QWORD PTR [rbp+0x0]
  42a374:	call   424df0 <strcmp@plt+0x21638>
  42a379:	test   eax,eax
  42a37b:	jne    42a360 <strcmp@plt+0x26ba8>
  42a37d:	mov    rsi,r12
  42a380:	mov    rdi,rbx
  42a383:	call   42d8a0 <strcmp@plt+0x2a0e8>
  42a388:	add    rsp,0x8
  42a38c:	mov    rax,rbp
  42a38f:	pop    rbx
  42a390:	pop    rbp
  42a391:	pop    r12
  42a393:	pop    r13
  42a395:	ret    
  42a396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a3a0:	add    rsp,0x8
  42a3a4:	xor    eax,eax
  42a3a6:	pop    rbx
  42a3a7:	pop    rbp
  42a3a8:	pop    r12
  42a3aa:	pop    r13
  42a3ac:	ret    
  42a3ad:	xor    eax,eax
  42a3af:	ret    
  42a3b0:	test   rdi,rdi
  42a3b3:	je     42a410 <strcmp@plt+0x26c58>
  42a3b5:	mov    eax,DWORD PTR [rdi+0x18]
  42a3b8:	test   eax,eax
  42a3ba:	je     42a410 <strcmp@plt+0x26c58>
  42a3bc:	test   rsi,rsi
  42a3bf:	je     42a410 <strcmp@plt+0x26c58>
  42a3c1:	mov    rdx,QWORD PTR [rdi+0x8]
  42a3c5:	mov    eax,0xfffffffa
  42a3ca:	cmp    rdi,rdx
  42a3cd:	jne    42a3d9 <strcmp@plt+0x26c21>
  42a3cf:	ret    
  42a3d0:	mov    rdx,QWORD PTR [rdx+0x8]
  42a3d4:	cmp    rdi,rdx
  42a3d7:	je     42a400 <strcmp@plt+0x26c48>
  42a3d9:	cmp    rsi,QWORD PTR [rdx+0x10]
  42a3dd:	jne    42a3d0 <strcmp@plt+0x26c18>
  42a3df:	sub    rsp,0x8
  42a3e3:	mov    rsi,rdi
  42a3e6:	mov    rdi,rdx
  42a3e9:	call   42d8a0 <strcmp@plt+0x2a0e8>
  42a3ee:	mov    eax,0x1
  42a3f3:	add    rsp,0x8
  42a3f7:	ret    
  42a3f8:	nop    DWORD PTR [rax+rax*1+0x0]
  42a400:	mov    eax,0xfffffffa
  42a405:	ret    
  42a406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a410:	xor    eax,eax
  42a412:	ret    
  42a413:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a41e:	xchg   ax,ax
  42a420:	push   r12
  42a422:	xor    r12d,r12d
  42a425:	test   rdi,rdi
  42a428:	push   rbp
  42a429:	push   rbx
  42a42a:	je     42a475 <strcmp@plt+0x26cbd>
  42a42c:	mov    eax,DWORD PTR [rdi+0x18]
  42a42f:	test   eax,eax
  42a431:	je     42a475 <strcmp@plt+0x26cbd>
  42a433:	mov    rbp,rdi
  42a436:	mov    rsi,0x429d50
  42a43d:	mov    rdi,0x429d40
  42a444:	call   42d4b0 <strcmp@plt+0x29cf8>
  42a449:	mov    rbx,QWORD PTR [rbp+0x8]
  42a44d:	mov    r12,rax
  42a450:	cmp    rbp,rbx
  42a453:	je     42a475 <strcmp@plt+0x26cbd>
  42a455:	nop    DWORD PTR [rax]
  42a458:	mov    rdi,QWORD PTR [rbx+0x10]
  42a45c:	call   42a1f0 <strcmp@plt+0x26a38>
  42a461:	mov    rsi,r12
  42a464:	mov    rdi,rax
  42a467:	call   42d540 <strcmp@plt+0x29d88>
  42a46c:	mov    rbx,QWORD PTR [rbx+0x8]
  42a470:	cmp    rbp,rbx
  42a473:	jne    42a458 <strcmp@plt+0x26ca0>
  42a475:	mov    rax,r12
  42a478:	pop    rbx
  42a479:	pop    rbp
  42a47a:	pop    r12
  42a47c:	ret    
  42a47d:	nop    DWORD PTR [rax]
  42a480:	test   rdi,rdi
  42a483:	je     42a49d <strcmp@plt+0x26ce5>
  42a485:	test   rsi,rsi
  42a488:	je     42a49d <strcmp@plt+0x26ce5>
  42a48a:	mov    edx,DWORD PTR [rdi+0x18]
  42a48d:	test   edx,edx
  42a48f:	jne    42a4a8 <strcmp@plt+0x26cf0>
  42a491:	mov    rax,0x468e3c
  42a498:	cmp    DWORD PTR [rax],0x1
  42a49b:	jg     42a4d0 <strcmp@plt+0x26d18>
  42a49d:	mov    eax,0xfffffffe
  42a4a2:	ret    
  42a4a3:	nop    DWORD PTR [rax+rax*1+0x0]
  42a4a8:	mov    eax,DWORD PTR [rsi+0x18]
  42a4ab:	test   eax,eax
  42a4ad:	je     42a491 <strcmp@plt+0x26cd9>
  42a4af:	mov    rax,QWORD PTR [rsi+0x8]
  42a4b3:	mov    rdx,QWORD PTR [rax+0x10]
  42a4b7:	mov    rax,QWORD PTR [rdi+0x8]
  42a4bb:	mov    rax,QWORD PTR [rax+0x10]
  42a4bf:	mov    rsi,QWORD PTR [rdx]
  42a4c2:	mov    rdi,QWORD PTR [rax]
  42a4c5:	jmp    425440 <strcmp@plt+0x21c88>
  42a4ca:	nop    WORD PTR [rax+rax*1+0x0]
  42a4d0:	lea    rsi,[rip+0x24349]        # 44e820 <strcmp@plt+0x4b068>
  42a4d7:	sub    rsp,0x8
  42a4db:	xor    eax,eax
  42a4dd:	mov    edi,0x6
  42a4e2:	call   4306a0 <strcmp@plt+0x2cee8>
  42a4e7:	mov    eax,0xfffffffe
  42a4ec:	add    rsp,0x8
  42a4f0:	ret    
  42a4f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a4fc:	nop    DWORD PTR [rax+0x0]
  42a500:	jmp    42a480 <strcmp@plt+0x26cc8>
  42a505:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a510:	mov    rax,QWORD PTR [rdi]
  42a513:	test   rax,rax
  42a516:	je     42a520 <strcmp@plt+0x26d68>
  42a518:	mov    rdi,rax
  42a51b:	jmp    424b00 <strcmp@plt+0x21348>
  42a520:	sub    rsp,0x18
  42a524:	mov    QWORD PTR [rsp+0x8],rsi
  42a529:	mov    QWORD PTR [rsp],rdi
  42a52d:	call   424740 <strcmp@plt+0x20f88>
  42a532:	mov    rdi,QWORD PTR [rsp]
  42a536:	mov    rsi,QWORD PTR [rsp+0x8]
  42a53b:	mov    QWORD PTR [rdi],rax
  42a53e:	mov    rdi,rax
  42a541:	add    rsp,0x18
  42a545:	jmp    424b00 <strcmp@plt+0x21348>
  42a54a:	nop    WORD PTR [rax+rax*1+0x0]
  42a550:	push   rbx
  42a551:	mov    edi,0x40
  42a556:	call   434790 <strcmp@plt+0x30fd8>
  42a55b:	test   rax,rax
  42a55e:	mov    rbx,rax
  42a561:	je     42a57f <strcmp@plt+0x26dc7>
  42a563:	mov    rsi,0x42dac0
  42a56a:	mov    rdi,0x42a480
  42a571:	call   42d4b0 <strcmp@plt+0x29cf8>
  42a576:	test   rax,rax
  42a579:	mov    QWORD PTR [rbx+0x28],rax
  42a57d:	je     42a584 <strcmp@plt+0x26dcc>
  42a57f:	mov    rax,rbx
  42a582:	pop    rbx
  42a583:	ret    
  42a584:	mov    rdi,rbx
  42a587:	xor    ebx,ebx
  42a589:	call   4037b0 <free@plt>
  42a58e:	jmp    42a57f <strcmp@plt+0x26dc7>
  42a590:	push   rbp
  42a591:	push   rbx
  42a592:	mov    rbp,rdi
  42a595:	sub    rsp,0x8
  42a599:	call   425110 <strcmp@plt+0x21958>
  42a59e:	test   rax,rax
  42a5a1:	je     42a5f0 <strcmp@plt+0x26e38>
  42a5a3:	mov    edi,0x40
  42a5a8:	call   434790 <strcmp@plt+0x30fd8>
  42a5ad:	test   rax,rax
  42a5b0:	mov    rbx,rax
  42a5b3:	je     42a610 <strcmp@plt+0x26e58>
  42a5b5:	mov    rsi,0x42dac0
  42a5bc:	mov    rdi,0x42a480
  42a5c3:	call   42d4b0 <strcmp@plt+0x29cf8>
  42a5c8:	test   rax,rax
  42a5cb:	mov    QWORD PTR [rbx+0x28],rax
  42a5cf:	je     42a607 <strcmp@plt+0x26e4f>
  42a5d1:	mov    rsi,rbp
  42a5d4:	mov    rdi,rbx
  42a5d7:	call   424b00 <strcmp@plt+0x21348>
  42a5dc:	add    rsp,0x8
  42a5e0:	mov    rax,rbx
  42a5e3:	pop    rbx
  42a5e4:	pop    rbp
  42a5e5:	ret    
  42a5e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a5f0:	mov    rdi,rbp
  42a5f3:	call   425050 <strcmp@plt+0x21898>
  42a5f8:	test   rax,rax
  42a5fb:	je     42a627 <strcmp@plt+0x26e6f>
  42a5fd:	mov    rdi,rax
  42a600:	call   424920 <strcmp@plt+0x21168>
  42a605:	jmp    42a5a3 <strcmp@plt+0x26deb>
  42a607:	mov    rdi,rbx
  42a60a:	call   4037b0 <free@plt>
  42a60f:	nop
  42a610:	lea    rsi,[rip+0x24279]        # 44e890 <strcmp@plt+0x4b0d8>
  42a617:	mov    edi,0x3
  42a61c:	xor    eax,eax
  42a61e:	xor    ebx,ebx
  42a620:	call   4306a0 <strcmp@plt+0x2cee8>
  42a625:	jmp    42a5dc <strcmp@plt+0x26e24>
  42a627:	mov    rdi,rbp
  42a62a:	xor    ebx,ebx
  42a62c:	call   424890 <strcmp@plt+0x210d8>
  42a631:	lea    rsi,[rip+0x24220]        # 44e858 <strcmp@plt+0x4b0a0>
  42a638:	mov    rdx,rax
  42a63b:	mov    edi,0x3
  42a640:	xor    eax,eax
  42a642:	call   4306a0 <strcmp@plt+0x2cee8>
  42a647:	jmp    42a5dc <strcmp@plt+0x26e24>
  42a649:	nop    DWORD PTR [rax+0x0]
  42a650:	test   rdi,rdi
  42a653:	je     42a678 <strcmp@plt+0x26ec0>
  42a655:	push   rbx
  42a656:	mov    rbx,rdi
  42a659:	mov    rdi,QWORD PTR [rdi+0x28]
  42a65d:	call   42dac0 <strcmp@plt+0x2a308>
  42a662:	mov    rdi,rbx
  42a665:	call   425680 <strcmp@plt+0x21ec8>
  42a66a:	mov    rdi,rbx
  42a66d:	pop    rbx
  42a66e:	jmp    4037b0 <free@plt>
  42a673:	nop    DWORD PTR [rax+rax*1+0x0]
  42a678:	repz ret 
  42a67a:	nop    WORD PTR [rax+rax*1+0x0]
  42a680:	push   r15
  42a682:	push   r14
  42a684:	push   r13
  42a686:	push   r12
  42a688:	mov    r12,rdi
  42a68b:	push   rbp
  42a68c:	push   rbx
  42a68d:	mov    rbx,rsi
  42a690:	sub    rsp,0x18
  42a694:	call   424df0 <strcmp@plt+0x21638>
  42a699:	test   eax,eax
  42a69b:	jne    42a6ac <strcmp@plt+0x26ef4>
  42a69d:	mov    r15d,eax
  42a6a0:	movzx  eax,WORD PTR [rbx+0x20]
  42a6a4:	cmp    WORD PTR [r12+0x20],ax
  42a6aa:	je     42a6c8 <strcmp@plt+0x26f10>
  42a6ac:	mov    r15d,0x1
  42a6b2:	add    rsp,0x18
  42a6b6:	mov    eax,r15d
  42a6b9:	pop    rbx
  42a6ba:	pop    rbp
  42a6bb:	pop    r12
  42a6bd:	pop    r13
  42a6bf:	pop    r14
  42a6c1:	pop    r15
  42a6c3:	ret    
  42a6c4:	nop    DWORD PTR [rax+0x0]
  42a6c8:	mov    rax,QWORD PTR [r12+0x28]
  42a6cd:	mov    rsi,QWORD PTR [rbx+0x28]
  42a6d1:	mov    ecx,DWORD PTR [rax+0x18]
  42a6d4:	cmp    ecx,DWORD PTR [rsi+0x18]
  42a6d7:	jne    42a6ac <strcmp@plt+0x26ef4>
  42a6d9:	xor    r14d,r14d
  42a6dc:	test   ecx,ecx
  42a6de:	jne    42a780 <strcmp@plt+0x26fc8>
  42a6e4:	mov    rdx,QWORD PTR [rax+0x8]
  42a6e8:	cmp    rax,rdx
  42a6eb:	mov    QWORD PTR [rsp+0x8],rdx
  42a6f0:	je     42a6b2 <strcmp@plt+0x26efa>
  42a6f2:	mov    r13,QWORD PTR [rdx+0x10]
  42a6f6:	mov    rcx,QWORD PTR [r14+0x10]
  42a6fa:	mov    eax,DWORD PTR [rcx+0x18]
  42a6fd:	cmp    eax,DWORD PTR [r13+0x18]
  42a701:	jne    42a6ac <strcmp@plt+0x26ef4>
  42a703:	xor    ebp,ebp
  42a705:	test   eax,eax
  42a707:	je     42a70d <strcmp@plt+0x26f55>
  42a709:	mov    rbp,QWORD PTR [rcx+0x8]
  42a70d:	mov    rbx,QWORD PTR [r13+0x8]
  42a711:	cmp    rbx,r13
  42a714:	jne    42a72d <strcmp@plt+0x26f75>
  42a716:	jmp    42a748 <strcmp@plt+0x26f90>
  42a718:	nop    DWORD PTR [rax+rax*1+0x0]
  42a720:	mov    rbx,QWORD PTR [rbx+0x8]
  42a724:	mov    rbp,QWORD PTR [rbp+0x8]
  42a728:	cmp    rbx,r13
  42a72b:	je     42a748 <strcmp@plt+0x26f90>
  42a72d:	mov    rsi,QWORD PTR [rbp+0x10]
  42a731:	mov    rdi,QWORD PTR [rbx+0x10]
  42a735:	call   42a190 <strcmp@plt+0x269d8>
  42a73a:	test   eax,eax
  42a73c:	je     42a720 <strcmp@plt+0x26f68>
  42a73e:	jmp    42a6ac <strcmp@plt+0x26ef4>
  42a743:	nop    DWORD PTR [rax+rax*1+0x0]
  42a748:	mov    rax,QWORD PTR [rsp+0x8]
  42a74d:	mov    r14,QWORD PTR [r14+0x8]
  42a751:	mov    rax,QWORD PTR [rax+0x8]
  42a755:	cmp    QWORD PTR [r12+0x28],rax
  42a75a:	mov    QWORD PTR [rsp+0x8],rax
  42a75f:	je     42a6b2 <strcmp@plt+0x26efa>
  42a765:	mov    rax,QWORD PTR [rsp+0x8]
  42a76a:	mov    rcx,QWORD PTR [r14+0x10]
  42a76e:	mov    r13,QWORD PTR [rax+0x10]
  42a772:	mov    eax,DWORD PTR [r13+0x18]
  42a776:	cmp    eax,DWORD PTR [rcx+0x18]
  42a779:	je     42a703 <strcmp@plt+0x26f4b>
  42a77b:	jmp    42a6ac <strcmp@plt+0x26ef4>
  42a780:	mov    r14,QWORD PTR [rsi+0x8]
  42a784:	jmp    42a6e4 <strcmp@plt+0x26f2c>
  42a789:	nop    DWORD PTR [rax+0x0]
  42a790:	push   rbp
  42a791:	push   rbx
  42a792:	mov    rbp,rdi
  42a795:	mov    edi,0x40
  42a79a:	sub    rsp,0x8
  42a79e:	call   434790 <strcmp@plt+0x30fd8>
  42a7a3:	test   rax,rax
  42a7a6:	je     42a800 <strcmp@plt+0x27048>
  42a7a8:	mov    rsi,0x42dac0
  42a7af:	mov    rdi,0x42a480
  42a7b6:	mov    rbx,rax
  42a7b9:	call   42d4b0 <strcmp@plt+0x29cf8>
  42a7be:	test   rax,rax
  42a7c1:	mov    QWORD PTR [rbx+0x28],rax
  42a7c5:	je     42a7f6 <strcmp@plt+0x2703e>
  42a7c7:	mov    rsi,rbp
  42a7ca:	mov    rdi,rbx
  42a7cd:	call   424b00 <strcmp@plt+0x21348>
  42a7d2:	movzx  eax,BYTE PTR [rbp+0x34]
  42a7d6:	mov    BYTE PTR [rbx+0x34],al
  42a7d9:	movzx  eax,BYTE PTR [rbp+0x35]
  42a7dd:	mov    BYTE PTR [rbx+0x35],al
  42a7e0:	mov    eax,DWORD PTR [rbp+0x30]
  42a7e3:	mov    DWORD PTR [rbx+0x30],eax
  42a7e6:	xor    eax,eax
  42a7e8:	mov    WORD PTR [rbx+0x20],ax
  42a7ec:	add    rsp,0x8
  42a7f0:	mov    rax,rbx
  42a7f3:	pop    rbx
  42a7f4:	pop    rbp
  42a7f5:	ret    
  42a7f6:	mov    rdi,rbx
  42a7f9:	call   4037b0 <free@plt>
  42a7fe:	xchg   ax,ax
  42a800:	mov    rsi,rbp
  42a803:	xor    edi,edi
  42a805:	call   424b00 <strcmp@plt+0x21348>
  42a80a:	mov    BYTE PTR ds:0x34,0x0
  42a812:	ud2    
  42a814:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a81f:	nop
  42a820:	push   r14
  42a822:	mov    BYTE PTR [rip+0x47b97],0x0        # 4723c0 <strcmp@plt+0x6ec08>
  42a829:	mov    r14,rdi
  42a82c:	push   r13
  42a82e:	push   r12
  42a830:	push   rbp
  42a831:	push   rbx
  42a832:	movzx  r13d,BYTE PTR [rdi+0x35]
  42a837:	movzx  edi,BYTE PTR [rdi+0x34]
  42a83b:	call   42cbe0 <strcmp@plt+0x29428>
  42a840:	movzx  ebp,WORD PTR [r14+0x20]
  42a845:	mov    ebx,DWORD PTR [r14+0x30]
  42a849:	mov    r12,rax
  42a84c:	mov    rdi,r14
  42a84f:	call   424890 <strcmp@plt+0x210d8>
  42a854:	push   r13
  42a856:	lea    r8,[rip+0x2406b]        # 44e8c8 <strcmp@plt+0x4b110>
  42a85d:	push   r12
  42a85f:	lea    rdi,[rip+0x47b5a]        # 4723c0 <strcmp@plt+0x6ec08>
  42a866:	push   rbp
  42a867:	push   rbx
  42a868:	mov    r9,rax
  42a86b:	mov    ecx,0x3e8
  42a870:	xor    eax,eax
  42a872:	mov    edx,0x1
  42a877:	mov    esi,0x3e8
  42a87c:	call   4032a0 <__snprintf_chk@plt>
  42a881:	add    rsp,0x20
  42a885:	cmp    WORD PTR [r14+0x20],0x0
  42a88b:	je     42a976 <strcmp@plt+0x271be>
  42a891:	mov    rax,QWORD PTR [r14+0x28]
  42a895:	mov    rbp,QWORD PTR [rax+0x8]
  42a899:	cmp    rax,rbp
  42a89c:	je     42a976 <strcmp@plt+0x271be>
  42a8a2:	lea    r13,[rip+0x47b17]        # 4723c0 <strcmp@plt+0x6ec08>
  42a8a9:	nop    DWORD PTR [rax+0x0]
  42a8b0:	mov    r12,QWORD PTR [rbp+0x10]
  42a8b4:	mov    edx,DWORD PTR [r12+0x18]
  42a8b9:	test   edx,edx
  42a8bb:	je     42a968 <strcmp@plt+0x271b0>
  42a8c1:	mov    rbx,QWORD PTR [r12+0x8]
  42a8c6:	mov    rdi,QWORD PTR [rbx+0x10]
  42a8ca:	mov    rax,QWORD PTR [rdi]
  42a8cd:	mov    eax,DWORD PTR [rax+0x18]
  42a8d0:	test   eax,eax
  42a8d2:	je     42a968 <strcmp@plt+0x271b0>
  42a8d8:	cmp    r12,rbx
  42a8db:	jne    42a8ec <strcmp@plt+0x27134>
  42a8dd:	jmp    42a968 <strcmp@plt+0x271b0>
  42a8e2:	nop    WORD PTR [rax+rax*1+0x0]
  42a8e8:	mov    rdi,QWORD PTR [rbx+0x10]
  42a8ec:	call   429e20 <strcmp@plt+0x26668>
  42a8f1:	lea    rdi,[rip+0x47ac8]        # 4723c0 <strcmp@plt+0x6ec08>
  42a8f8:	mov    ecx,DWORD PTR [rdi]
  42a8fa:	add    rdi,0x4
  42a8fe:	lea    edx,[rcx-0x1010101]
  42a904:	andn   edx,ecx,edx
  42a909:	and    edx,0x80808080
  42a90f:	je     42a8f8 <strcmp@plt+0x27140>
  42a911:	mov    ecx,edx
  42a913:	lea    r8,[rip+0x243bf]        # 44ecd9 <strcmp@plt+0x4b521>
  42a91a:	mov    r9,rax
  42a91d:	shr    ecx,0x10
  42a920:	test   edx,0x8080
  42a926:	cmove  edx,ecx
  42a929:	lea    rcx,[rdi+0x2]
  42a92d:	mov    esi,edx
  42a92f:	cmove  rdi,rcx
  42a933:	add    sil,dl
  42a936:	mov    esi,0x3e8
  42a93b:	sbb    rdi,0x3
  42a93f:	mov    rcx,0xffffffffffffffff
  42a946:	xor    eax,eax
  42a948:	sub    rdi,r13
  42a94b:	mov    edx,0x1
  42a950:	sub    rsi,rdi
  42a953:	add    rdi,r13
  42a956:	call   4032a0 <__snprintf_chk@plt>
  42a95b:	mov    rbx,QWORD PTR [rbx+0x8]
  42a95f:	cmp    r12,rbx
  42a962:	jne    42a8e8 <strcmp@plt+0x27130>
  42a964:	nop    DWORD PTR [rax+0x0]
  42a968:	mov    rbp,QWORD PTR [rbp+0x8]
  42a96c:	cmp    rbp,QWORD PTR [r14+0x28]
  42a970:	jne    42a8b0 <strcmp@plt+0x270f8>
  42a976:	pop    rbx
  42a977:	lea    rax,[rip+0x47a42]        # 4723c0 <strcmp@plt+0x6ec08>
  42a97e:	pop    rbp
  42a97f:	pop    r12
  42a981:	pop    r13
  42a983:	pop    r14
  42a985:	ret    
  42a986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a990:	push   rbx
  42a991:	mov    rbx,rdi
  42a994:	mov    rdi,QWORD PTR [rdi+0x28]
  42a998:	call   42da80 <strcmp@plt+0x2a2c8>
  42a99d:	xor    eax,eax
  42a99f:	mov    WORD PTR [rbx+0x20],ax
  42a9a3:	pop    rbx
  42a9a4:	ret    
  42a9a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a9b0:	test   rdi,rdi
  42a9b3:	je     42aa4e <strcmp@plt+0x27296>
  42a9b9:	test   rsi,rsi
  42a9bc:	je     42aa4e <strcmp@plt+0x27296>
  42a9c2:	push   r14
  42a9c4:	push   r13
  42a9c6:	mov    r13,rsi
  42a9c9:	push   r12
  42a9cb:	mov    r12,rdi
  42a9ce:	push   rbp
  42a9cf:	push   rbx
  42a9d0:	mov    rdi,QWORD PTR [rdi+0x28]
  42a9d4:	call   42da80 <strcmp@plt+0x2a2c8>
  42a9d9:	mov    rbx,QWORD PTR [r13+0x8]
  42a9dd:	cmp    r13,rbx
  42a9e0:	je     42aa3a <strcmp@plt+0x27282>
  42a9e2:	xor    r14d,r14d
  42a9e5:	jmp    42aa10 <strcmp@plt+0x27258>
  42a9e7:	nop    WORD PTR [rax+rax*1+0x0]
  42a9f0:	mov    rdx,QWORD PTR [rbp+0x8]
  42a9f4:	mov    rbx,QWORD PTR [rbx+0x8]
  42a9f8:	add    eax,r14d
  42a9fb:	mov    rdx,QWORD PTR [rdx+0x10]
  42a9ff:	mov    rdx,QWORD PTR [rdx]
  42aa02:	mov    edx,DWORD PTR [rdx+0x18]
  42aa05:	test   edx,edx
  42aa07:	cmovne r14d,eax
  42aa0b:	cmp    r13,rbx
  42aa0e:	je     42aa40 <strcmp@plt+0x27288>
  42aa10:	mov    rdi,QWORD PTR [rbx+0x10]
  42aa14:	call   42a420 <strcmp@plt+0x26c68>
  42aa19:	mov    rsi,QWORD PTR [r12+0x28]
  42aa1e:	mov    rbp,rax
  42aa21:	mov    rdi,rax
  42aa24:	call   42d540 <strcmp@plt+0x29d88>
  42aa29:	mov    eax,DWORD PTR [rbp+0x18]
  42aa2c:	test   eax,eax
  42aa2e:	jne    42a9f0 <strcmp@plt+0x27238>
  42aa30:	mov    rax,QWORD PTR ds:0x0
  42aa38:	ud2    
  42aa3a:	xor    r14d,r14d
  42aa3d:	nop    DWORD PTR [rax]
  42aa40:	mov    WORD PTR [r12+0x20],r14w
  42aa46:	pop    rbx
  42aa47:	pop    rbp
  42aa48:	pop    r12
  42aa4a:	pop    r13
  42aa4c:	pop    r14
  42aa4e:	repz ret 
  42aa50:	push   r14
  42aa52:	push   r13
  42aa54:	mov    r14d,edx
  42aa57:	push   r12
  42aa59:	push   rbp
  42aa5a:	mov    r12d,esi
  42aa5d:	push   rbx
  42aa5e:	mov    rax,QWORD PTR [rdi+0x28]
  42aa62:	mov    rbx,QWORD PTR [rax+0x8]
  42aa66:	cmp    rax,rbx
  42aa69:	je     42ab20 <strcmp@plt+0x27368>
  42aa6f:	mov    r13,rdi
  42aa72:	jmp    42aa97 <strcmp@plt+0x272df>
  42aa74:	nop    DWORD PTR [rax+0x0]
  42aa78:	mov    rax,QWORD PTR [rbp+0x8]
  42aa7c:	mov    rax,QWORD PTR [rax+0x10]
  42aa80:	mov    rdi,QWORD PTR [rax]
  42aa83:	cmp    r12d,DWORD PTR [rdi+0x18]
  42aa87:	je     42aab0 <strcmp@plt+0x272f8>
  42aa89:	mov    rbx,QWORD PTR [rbx+0x8]
  42aa8d:	cmp    QWORD PTR [r13+0x28],rbx
  42aa91:	je     42ab20 <strcmp@plt+0x27368>
  42aa97:	mov    rbp,QWORD PTR [rbx+0x10]
  42aa9b:	mov    edx,DWORD PTR [rbp+0x18]
  42aa9e:	test   edx,edx
  42aaa0:	jne    42aa78 <strcmp@plt+0x272c0>
  42aaa2:	mov    rax,QWORD PTR ds:0x0
  42aaaa:	ud2    
  42aaac:	nop    DWORD PTR [rax+0x0]
  42aab0:	cmp    r12d,0x1
  42aab4:	je     42ab00 <strcmp@plt+0x27348>
  42aab6:	jb     42aace <strcmp@plt+0x27316>
  42aab8:	cmp    r12d,0x2
  42aabc:	je     42aae0 <strcmp@plt+0x27328>
  42aabe:	cmp    r12d,0x3
  42aac2:	jne    42aa89 <strcmp@plt+0x272d1>
  42aac4:	call   424f30 <strcmp@plt+0x21778>
  42aac9:	cmp    eax,r14d
  42aacc:	jne    42aa89 <strcmp@plt+0x272d1>
  42aace:	pop    rbx
  42aacf:	mov    rax,rbp
  42aad2:	pop    rbp
  42aad3:	pop    r12
  42aad5:	pop    r13
  42aad7:	pop    r14
  42aad9:	ret    
  42aada:	nop    WORD PTR [rax+rax*1+0x0]
  42aae0:	mov    rax,0x468e3c
  42aae7:	mov    eax,DWORD PTR [rax]
  42aae9:	test   eax,eax
  42aaeb:	jg     42ab50 <strcmp@plt+0x27398>
  42aaed:	xor    eax,eax
  42aaef:	pop    rbx
  42aaf0:	pop    rbp
  42aaf1:	pop    r12
  42aaf3:	pop    r13
  42aaf5:	pop    r14
  42aaf7:	ret    
  42aaf8:	nop    DWORD PTR [rax+rax*1+0x0]
  42ab00:	call   4251c0 <strcmp@plt+0x21a08>
  42ab05:	movzx  eax,ax
  42ab08:	cmp    eax,r14d
  42ab0b:	je     42aace <strcmp@plt+0x27316>
  42ab0d:	mov    rbx,QWORD PTR [rbx+0x8]
  42ab11:	cmp    QWORD PTR [r13+0x28],rbx
  42ab15:	jne    42aa97 <strcmp@plt+0x272df>
  42ab1b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ab20:	mov    rax,0x468e3c
  42ab27:	cmp    DWORD PTR [rax],0x2
  42ab2a:	jle    42aaed <strcmp@plt+0x27335>
  42ab2c:	lea    rsi,[rip+0x23e0d]        # 44e940 <strcmp@plt+0x4b188>
  42ab33:	xor    eax,eax
  42ab35:	mov    ecx,r14d
  42ab38:	mov    edx,r12d
  42ab3b:	mov    edi,0x7
  42ab40:	call   4306a0 <strcmp@plt+0x2cee8>
  42ab45:	xor    eax,eax
  42ab47:	jmp    42aaef <strcmp@plt+0x27337>
  42ab49:	nop    DWORD PTR [rax+0x0]
  42ab50:	lea    rsi,[rip+0x23da9]        # 44e900 <strcmp@plt+0x4b148>
  42ab57:	xor    eax,eax
  42ab59:	mov    edi,0x5
  42ab5e:	call   4306a0 <strcmp@plt+0x2cee8>
  42ab63:	pop    rbx
  42ab64:	xor    eax,eax
  42ab66:	pop    rbp
  42ab67:	pop    r12
  42ab69:	pop    r13
  42ab6b:	pop    r14
  42ab6d:	ret    
  42ab6e:	xchg   ax,ax
  42ab70:	push   rbp
  42ab71:	push   rbx
  42ab72:	mov    rbx,rdi
  42ab75:	mov    rdi,rsi
  42ab78:	sub    rsp,0x8
  42ab7c:	mov    ebp,DWORD PTR [rsi+0x18]
  42ab7f:	call   425700 <strcmp@plt+0x21f48>
  42ab84:	add    rsp,0x8
  42ab88:	mov    rdi,rbx
  42ab8b:	mov    edx,eax
  42ab8d:	mov    esi,ebp
  42ab8f:	pop    rbx
  42ab90:	pop    rbp
  42ab91:	jmp    42aa50 <strcmp@plt+0x27298>
  42ab96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aba0:	push   r13
  42aba2:	push   r12
  42aba4:	mov    r12,rdi
  42aba7:	push   rbp
  42aba8:	push   rbx
  42aba9:	mov    rbx,rsi
  42abac:	sub    rsp,0x8
  42abb0:	mov    r13,QWORD PTR [rsi]
  42abb3:	mov    rsi,r13
  42abb6:	call   42ab70 <strcmp@plt+0x273b8>
  42abbb:	test   rax,rax
  42abbe:	je     42abd3 <strcmp@plt+0x2741b>
  42abc0:	mov    rsi,rbx
  42abc3:	mov    rdi,rax
  42abc6:	mov    rbp,rax
  42abc9:	call   42a3b0 <strcmp@plt+0x26bf8>
  42abce:	cmp    eax,0x1
  42abd1:	je     42ac20 <strcmp@plt+0x27468>
  42abd3:	mov    rax,0x468e3c
  42abda:	cmp    DWORD PTR [rax],0x1
  42abdd:	jg     42abf0 <strcmp@plt+0x27438>
  42abdf:	add    rsp,0x8
  42abe3:	mov    eax,0x1
  42abe8:	pop    rbx
  42abe9:	pop    rbp
  42abea:	pop    r12
  42abec:	pop    r13
  42abee:	ret    
  42abef:	nop
  42abf0:	mov    rdi,QWORD PTR [rbx]
  42abf3:	call   424890 <strcmp@plt+0x210d8>
  42abf8:	lea    rsi,[rip+0x23d91]        # 44e990 <strcmp@plt+0x4b1d8>
  42abff:	mov    rdx,rax
  42ac02:	mov    edi,0x6
  42ac07:	xor    eax,eax
  42ac09:	call   4306a0 <strcmp@plt+0x2cee8>
  42ac0e:	add    rsp,0x8
  42ac12:	mov    eax,0x1
  42ac17:	pop    rbx
  42ac18:	pop    rbp
  42ac19:	pop    r12
  42ac1b:	pop    r13
  42ac1d:	ret    
  42ac1e:	xchg   ax,ax
  42ac20:	mov    edx,DWORD PTR [rbp+0x18]
  42ac23:	test   edx,edx
  42ac25:	je     42ac78 <strcmp@plt+0x274c0>
  42ac27:	mov    eax,DWORD PTR [r13+0x18]
  42ac2b:	test   eax,eax
  42ac2d:	je     42ac36 <strcmp@plt+0x2747e>
  42ac2f:	sub    WORD PTR [r12+0x20],0x1
  42ac36:	mov    rax,0x468e3c
  42ac3d:	cmp    DWORD PTR [rax],0x1
  42ac40:	jle    42abdf <strcmp@plt+0x27427>
  42ac42:	mov    rdi,r12
  42ac45:	call   424890 <strcmp@plt+0x210d8>
  42ac4a:	mov    rdi,QWORD PTR [rbx]
  42ac4d:	mov    rbp,rax
  42ac50:	call   424890 <strcmp@plt+0x210d8>
  42ac55:	lea    rsi,[rip+0x23d84]        # 44e9e0 <strcmp@plt+0x4b228>
  42ac5c:	mov    rdx,rax
  42ac5f:	mov    rcx,rbp
  42ac62:	mov    edi,0x6
  42ac67:	xor    eax,eax
  42ac69:	call   4306a0 <strcmp@plt+0x2cee8>
  42ac6e:	jmp    42abdf <strcmp@plt+0x27427>
  42ac73:	nop    DWORD PTR [rax+rax*1+0x0]
  42ac78:	mov    rsi,QWORD PTR [r12+0x28]
  42ac7d:	mov    rdi,rbp
  42ac80:	call   42da30 <strcmp@plt+0x2a278>
  42ac85:	jmp    42ac27 <strcmp@plt+0x2746f>
  42ac87:	nop    WORD PTR [rax+rax*1+0x0]
  42ac90:	push   rbx
  42ac91:	mov    rbx,rsi
  42ac94:	call   42ab70 <strcmp@plt+0x273b8>
  42ac99:	mov    rsi,rbx
  42ac9c:	mov    rdi,rax
  42ac9f:	pop    rbx
  42aca0:	jmp    42a2c0 <strcmp@plt+0x26b08>
  42aca5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42acb0:	push   r14
  42acb2:	push   r13
  42acb4:	push   r12
  42acb6:	push   rbp
  42acb7:	mov    rbp,rsi
  42acba:	push   rbx
  42acbb:	mov    r14,QWORD PTR [rsi]
  42acbe:	mov    r12,rdi
  42acc1:	mov    rsi,r14
  42acc4:	call   42ab70 <strcmp@plt+0x273b8>
  42acc9:	test   rax,rax
  42accc:	je     42ae00 <strcmp@plt+0x27648>
  42acd2:	mov    rsi,rax
  42acd5:	mov    rdi,rbp
  42acd8:	mov    rbx,rax
  42acdb:	call   42d730 <strcmp@plt+0x29f78>
  42ace0:	cmp    al,0x1
  42ace2:	je     42ad20 <strcmp@plt+0x27568>
  42ace4:	mov    rsi,rbx
  42ace7:	mov    rdi,rbp
  42acea:	call   42d540 <strcmp@plt+0x29d88>
  42acef:	mov    r13d,eax
  42acf2:	cmp    r13d,0x1
  42acf6:	je     42adb0 <strcmp@plt+0x275f8>
  42acfc:	mov    r13d,DWORD PTR [rbx+0x18]
  42ad00:	test   r13d,r13d
  42ad03:	je     42ad90 <strcmp@plt+0x275d8>
  42ad09:	xor    r13d,r13d
  42ad0c:	pop    rbx
  42ad0d:	mov    eax,r13d
  42ad10:	pop    rbp
  42ad11:	pop    r12
  42ad13:	pop    r13
  42ad15:	pop    r14
  42ad17:	ret    
  42ad18:	nop    DWORD PTR [rax+rax*1+0x0]
  42ad20:	mov    rax,0x468e3c
  42ad27:	cmp    DWORD PTR [rax],0x1
  42ad2a:	jle    42ad59 <strcmp@plt+0x275a1>
  42ad2c:	mov    rdi,r12
  42ad2f:	call   424890 <strcmp@plt+0x210d8>
  42ad34:	mov    rdi,QWORD PTR [rbp+0x0]
  42ad38:	mov    r13,rax
  42ad3b:	call   424890 <strcmp@plt+0x210d8>
  42ad40:	lea    rsi,[rip+0x23ce9]        # 44ea30 <strcmp@plt+0x4b278>
  42ad47:	mov    rdx,rax
  42ad4a:	mov    rcx,r13
  42ad4d:	mov    edi,0x6
  42ad52:	xor    eax,eax
  42ad54:	call   4306a0 <strcmp@plt+0x2cee8>
  42ad59:	mov    rsi,QWORD PTR [rbp+0x0]
  42ad5d:	mov    rdi,r12
  42ad60:	call   42ac90 <strcmp@plt+0x274d8>
  42ad65:	movzx  edx,BYTE PTR [rbp+0xb]
  42ad69:	cmp    BYTE PTR [rax+0xb],dl
  42ad6c:	jbe    42ae40 <strcmp@plt+0x27688>
  42ad72:	mov    rsi,rbx
  42ad75:	mov    rdi,rax
  42ad78:	call   42da30 <strcmp@plt+0x2a278>
  42ad7d:	mov    rsi,rbx
  42ad80:	mov    rdi,rbp
  42ad83:	pop    rbx
  42ad84:	pop    rbp
  42ad85:	pop    r12
  42ad87:	pop    r13
  42ad89:	pop    r14
  42ad8b:	jmp    42d540 <strcmp@plt+0x29d88>
  42ad90:	mov    rsi,QWORD PTR [r12+0x28]
  42ad95:	mov    rdi,rbx
  42ad98:	call   42da30 <strcmp@plt+0x2a278>
  42ad9d:	pop    rbx
  42ad9e:	mov    eax,r13d
  42ada1:	pop    rbp
  42ada2:	pop    r12
  42ada4:	pop    r13
  42ada6:	pop    r14
  42ada8:	ret    
  42ada9:	nop    DWORD PTR [rax+0x0]
  42adb0:	mov    rax,0x468e3c
  42adb7:	cmp    DWORD PTR [rax],0x1
  42adba:	jle    42ade8 <strcmp@plt+0x27630>
  42adbc:	mov    rdi,r12
  42adbf:	call   424890 <strcmp@plt+0x210d8>
  42adc4:	mov    rdi,rbp
  42adc7:	mov    rbx,rax
  42adca:	call   429e20 <strcmp@plt+0x26668>
  42adcf:	lea    rsi,[rip+0x23cca]        # 44eaa0 <strcmp@plt+0x4b2e8>
  42add6:	mov    rdx,rax
  42add9:	mov    rcx,rbx
  42addc:	mov    edi,0x6
  42ade1:	xor    eax,eax
  42ade3:	call   4306a0 <strcmp@plt+0x2cee8>
  42ade8:	mov    eax,DWORD PTR [r14+0x18]
  42adec:	test   eax,eax
  42adee:	je     42ad0c <strcmp@plt+0x27554>
  42adf4:	add    WORD PTR [r12+0x20],0x1
  42adfb:	jmp    42ad0c <strcmp@plt+0x27554>
  42ae00:	mov    rsi,0x429d50
  42ae07:	mov    rdi,0x429d40
  42ae0e:	call   42d4b0 <strcmp@plt+0x29cf8>
  42ae13:	mov    rdi,rbp
  42ae16:	mov    rsi,rax
  42ae19:	mov    rbx,rax
  42ae1c:	call   42d540 <strcmp@plt+0x29d88>
  42ae21:	cmp    eax,0x1
  42ae24:	jne    42acfc <strcmp@plt+0x27544>
  42ae2a:	mov    rsi,QWORD PTR [r12+0x28]
  42ae2f:	mov    rdi,rbx
  42ae32:	call   42d540 <strcmp@plt+0x29d88>
  42ae37:	mov    r13d,eax
  42ae3a:	jmp    42acf2 <strcmp@plt+0x2753a>
  42ae3f:	nop
  42ae40:	mov    r13d,0xfffffffb
  42ae46:	jmp    42ad0c <strcmp@plt+0x27554>
  42ae4b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ae50:	push   rbp
  42ae51:	push   rbx
  42ae52:	mov    rbx,rsi
  42ae55:	sub    rsp,0x8
  42ae59:	mov    rbp,QWORD PTR [rsi]
  42ae5c:	mov    rsi,rbp
  42ae5f:	call   42ab70 <strcmp@plt+0x273b8>
  42ae64:	test   rax,rax
  42ae67:	je     42ae7e <strcmp@plt+0x276c6>
  42ae69:	mov    edx,DWORD PTR [rax+0x18]
  42ae6c:	test   edx,edx
  42ae6e:	je     42ae7e <strcmp@plt+0x276c6>
  42ae70:	test   rbp,rbp
  42ae73:	je     42ae7e <strcmp@plt+0x276c6>
  42ae75:	mov    rdx,QWORD PTR [rax+0x8]
  42ae79:	cmp    rax,rdx
  42ae7c:	jne    42ae99 <strcmp@plt+0x276e1>
  42ae7e:	add    rsp,0x8
  42ae82:	xor    eax,eax
  42ae84:	pop    rbx
  42ae85:	pop    rbp
  42ae86:	ret    
  42ae87:	nop    WORD PTR [rax+rax*1+0x0]
  42ae90:	mov    rdx,QWORD PTR [rdx+0x8]
  42ae94:	cmp    rax,rdx
  42ae97:	je     42ae7e <strcmp@plt+0x276c6>
  42ae99:	cmp    rbx,QWORD PTR [rdx+0x10]
  42ae9d:	jne    42ae90 <strcmp@plt+0x276d8>
  42ae9f:	add    rsp,0x8
  42aea3:	mov    eax,0x1
  42aea8:	pop    rbx
  42aea9:	pop    rbp
  42aeaa:	ret    
  42aeab:	nop    DWORD PTR [rax+rax*1+0x0]
  42aeb0:	push   rbp
  42aeb1:	push   rbx
  42aeb2:	mov    rbx,rsi
  42aeb5:	sub    rsp,0x8
  42aeb9:	call   42ab70 <strcmp@plt+0x273b8>
  42aebe:	mov    rsi,rbx
  42aec1:	mov    rdi,rax
  42aec4:	mov    rbp,rax
  42aec7:	call   42a330 <strcmp@plt+0x26b78>
  42aecc:	test   rax,rax
  42aecf:	je     42aee8 <strcmp@plt+0x27730>
  42aed1:	add    rsp,0x8
  42aed5:	mov    rsi,rbp
  42aed8:	mov    rdi,rax
  42aedb:	pop    rbx
  42aedc:	pop    rbp
  42aedd:	jmp    42d540 <strcmp@plt+0x29d88>
  42aee2:	nop    WORD PTR [rax+rax*1+0x0]
  42aee8:	add    rsp,0x8
  42aeec:	xor    eax,eax
  42aeee:	pop    rbx
  42aeef:	pop    rbp
  42aef0:	ret    
  42aef1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42aefc:	nop    DWORD PTR [rax+0x0]
  42af00:	push   r14
  42af02:	push   r13
  42af04:	push   r12
  42af06:	push   rbp
  42af07:	mov    r12,rdx
  42af0a:	push   rbx
  42af0b:	mov    rbx,rsi
  42af0e:	mov    rbp,rdi
  42af11:	call   42aba0 <strcmp@plt+0x273e8>
  42af16:	mov    rsi,r12
  42af19:	mov    rdi,rbx
  42af1c:	call   42a510 <strcmp@plt+0x26d58>
  42af21:	mov    rsi,rbx
  42af24:	mov    rdi,rbp
  42af27:	call   42acb0 <strcmp@plt+0x274f8>
  42af2c:	cmp    eax,0x1
  42af2f:	mov    r12d,eax
  42af32:	je     42af58 <strcmp@plt+0x277a0>
  42af34:	mov    rdi,rbx
  42af37:	call   429d50 <strcmp@plt+0x26598>
  42af3c:	mov    rax,0x468e3c
  42af43:	mov    eax,DWORD PTR [rax]
  42af45:	test   eax,eax
  42af47:	jg     42afc8 <strcmp@plt+0x27810>
  42af49:	pop    rbx
  42af4a:	mov    eax,r12d
  42af4d:	pop    rbp
  42af4e:	pop    r12
  42af50:	pop    r13
  42af52:	pop    r14
  42af54:	ret    
  42af55:	nop    DWORD PTR [rax]
  42af58:	mov    r13,0x468e3c
  42af5f:	mov    edx,DWORD PTR [r13+0x0]
  42af63:	test   edx,edx
  42af65:	jle    42af49 <strcmp@plt+0x27791>
  42af67:	mov    rdi,rbp
  42af6a:	call   424890 <strcmp@plt+0x210d8>
  42af6f:	mov    rdi,QWORD PTR [rbx]
  42af72:	mov    r14,rax
  42af75:	call   424890 <strcmp@plt+0x210d8>
  42af7a:	lea    rsi,[rip+0x23b67]        # 44eae8 <strcmp@plt+0x4b330>
  42af81:	mov    rdx,rax
  42af84:	mov    rcx,r14
  42af87:	xor    eax,eax
  42af89:	mov    edi,0x5
  42af8e:	call   4306a0 <strcmp@plt+0x2cee8>
  42af93:	cmp    DWORD PTR [r13+0x0],0x1
  42af98:	jle    42af49 <strcmp@plt+0x27791>
  42af9a:	mov    rdi,rbp
  42af9d:	call   42a820 <strcmp@plt+0x27068>
  42afa2:	lea    rsi,[rip+0x23b8f]        # 44eb38 <strcmp@plt+0x4b380>
  42afa9:	mov    rdx,rax
  42afac:	mov    edi,0x6
  42afb1:	xor    eax,eax
  42afb3:	call   4306a0 <strcmp@plt+0x2cee8>
  42afb8:	pop    rbx
  42afb9:	mov    eax,r12d
  42afbc:	pop    rbp
  42afbd:	pop    r12
  42afbf:	pop    r13
  42afc1:	pop    r14
  42afc3:	ret    
  42afc4:	nop    DWORD PTR [rax+0x0]
  42afc8:	mov    rdi,rbp
  42afcb:	call   424890 <strcmp@plt+0x210d8>
  42afd0:	mov    rdi,QWORD PTR [rbx]
  42afd3:	mov    rbp,rax
  42afd6:	call   424890 <strcmp@plt+0x210d8>
  42afdb:	lea    rsi,[rip+0x23b86]        # 44eb68 <strcmp@plt+0x4b3b0>
  42afe2:	mov    rcx,rbp
  42afe5:	mov    rdx,rax
  42afe8:	mov    edi,0x5
  42afed:	xor    eax,eax
  42afef:	call   4306a0 <strcmp@plt+0x2cee8>
  42aff4:	pop    rbx
  42aff5:	mov    eax,r12d
  42aff8:	pop    rbp
  42aff9:	pop    r12
  42affb:	pop    r13
  42affd:	pop    r14
  42afff:	ret    
  42b000:	push   r14
  42b002:	push   r13
  42b004:	push   r12
  42b006:	push   rbp
  42b007:	mov    rbp,rdi
  42b00a:	push   rbx
  42b00b:	mov    rbx,rsi
  42b00e:	call   42aba0 <strcmp@plt+0x273e8>
  42b013:	xor    edi,edi
  42b015:	mov    r13,QWORD PTR [rbx]
  42b018:	call   424670 <strcmp@plt+0x20eb8>
  42b01d:	mov    rsi,rbx
  42b020:	mov    QWORD PTR [rbx],rax
  42b023:	mov    rdi,rbp
  42b026:	call   42acb0 <strcmp@plt+0x274f8>
  42b02b:	cmp    eax,0x1
  42b02e:	mov    r12d,eax
  42b031:	je     42b060 <strcmp@plt+0x278a8>
  42b033:	mov    rdi,rbx
  42b036:	call   429d50 <strcmp@plt+0x26598>
  42b03b:	mov    rax,0x468e3c
  42b042:	mov    eax,DWORD PTR [rax]
  42b044:	test   eax,eax
  42b046:	jg     42b0c0 <strcmp@plt+0x27908>
  42b048:	mov    rdi,r13
  42b04b:	call   424750 <strcmp@plt+0x20f98>
  42b050:	pop    rbx
  42b051:	mov    eax,r12d
  42b054:	pop    rbp
  42b055:	pop    r12
  42b057:	pop    r13
  42b059:	pop    r14
  42b05b:	ret    
  42b05c:	nop    DWORD PTR [rax+0x0]
  42b060:	mov    rbx,0x468e3c
  42b067:	mov    edx,DWORD PTR [rbx]
  42b069:	test   edx,edx
  42b06b:	jle    42b048 <strcmp@plt+0x27890>
  42b06d:	mov    rdi,rbp
  42b070:	call   424890 <strcmp@plt+0x210d8>
  42b075:	mov    rdi,r13
  42b078:	mov    r14,rax
  42b07b:	call   424890 <strcmp@plt+0x210d8>
  42b080:	lea    rsi,[rip+0x23b51]        # 44ebd8 <strcmp@plt+0x4b420>
  42b087:	mov    rdx,rax
  42b08a:	mov    rcx,r14
  42b08d:	xor    eax,eax
  42b08f:	mov    edi,0x5
  42b094:	call   4306a0 <strcmp@plt+0x2cee8>
  42b099:	cmp    DWORD PTR [rbx],0x1
  42b09c:	jle    42b048 <strcmp@plt+0x27890>
  42b09e:	mov    rdi,rbp
  42b0a1:	call   42a820 <strcmp@plt+0x27068>
  42b0a6:	lea    rsi,[rip+0x23b83]        # 44ec30 <strcmp@plt+0x4b478>
  42b0ad:	mov    rdx,rax
  42b0b0:	mov    edi,0x6
  42b0b5:	xor    eax,eax
  42b0b7:	call   4306a0 <strcmp@plt+0x2cee8>
  42b0bc:	jmp    42b048 <strcmp@plt+0x27890>
  42b0be:	xchg   ax,ax
  42b0c0:	mov    rdi,rbp
  42b0c3:	call   424890 <strcmp@plt+0x210d8>
  42b0c8:	mov    rdi,r13
  42b0cb:	mov    rbx,rax
  42b0ce:	call   424890 <strcmp@plt+0x210d8>
  42b0d3:	lea    rsi,[rip+0x23b8e]        # 44ec68 <strcmp@plt+0x4b4b0>
  42b0da:	mov    rdx,rax
  42b0dd:	mov    rcx,rbx
  42b0e0:	mov    edi,0x5
  42b0e5:	xor    eax,eax
  42b0e7:	call   4306a0 <strcmp@plt+0x2cee8>
  42b0ec:	jmp    42b048 <strcmp@plt+0x27890>
  42b0f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b0fc:	nop    DWORD PTR [rax+0x0]
  42b100:	push   rbp
  42b101:	push   rbx
  42b102:	mov    edx,0xa
  42b107:	mov    esi,0x3
  42b10c:	sub    rsp,0x8
  42b110:	call   42aa50 <strcmp@plt+0x27298>
  42b115:	test   rax,rax
  42b118:	je     42b169 <strcmp@plt+0x279b1>
  42b11a:	mov    rbx,QWORD PTR [rax+0x8]
  42b11e:	mov    rbp,rax
  42b121:	cmp    rax,rbx
  42b124:	je     42b169 <strcmp@plt+0x279b1>
  42b126:	mov    rax,QWORD PTR [rbx+0x10]
  42b12a:	mov    rdi,QWORD PTR [rax]
  42b12d:	call   424f20 <strcmp@plt+0x21768>
  42b132:	mov    rcx,QWORD PTR [rax]
  42b135:	mov    rax,QWORD PTR [rcx+0x8]
  42b139:	cmp    rcx,rax
  42b13c:	jne    42b149 <strcmp@plt+0x27991>
  42b13e:	jmp    42b160 <strcmp@plt+0x279a8>
  42b140:	mov    rax,QWORD PTR [rax+0x8]
  42b144:	cmp    rcx,rax
  42b147:	je     42b160 <strcmp@plt+0x279a8>
  42b149:	mov    rdx,QWORD PTR [rax+0x10]
  42b14d:	test   BYTE PTR [rdx],0x1
  42b150:	je     42b140 <strcmp@plt+0x27988>
  42b152:	add    rsp,0x8
  42b156:	mov    eax,0x1
  42b15b:	pop    rbx
  42b15c:	pop    rbp
  42b15d:	ret    
  42b15e:	xchg   ax,ax
  42b160:	mov    rbx,QWORD PTR [rbx+0x8]
  42b164:	cmp    rbp,rbx
  42b167:	jne    42b126 <strcmp@plt+0x2796e>
  42b169:	add    rsp,0x8
  42b16d:	xor    eax,eax
  42b16f:	pop    rbx
  42b170:	pop    rbp
  42b171:	ret    
  42b172:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b17c:	nop    DWORD PTR [rax+0x0]
  42b180:	push   rbx
  42b181:	mov    edi,0x48
  42b186:	call   434790 <strcmp@plt+0x30fd8>
  42b18b:	test   rax,rax
  42b18e:	mov    rbx,rax
  42b191:	je     42b1af <strcmp@plt+0x279f7>
  42b193:	mov    rsi,0x42dac0
  42b19a:	mov    rdi,0x42a480
  42b1a1:	call   42d4b0 <strcmp@plt+0x29cf8>
  42b1a6:	test   rax,rax
  42b1a9:	mov    QWORD PTR [rbx+0x28],rax
  42b1ad:	je     42b1b4 <strcmp@plt+0x279fc>
  42b1af:	mov    rax,rbx
  42b1b2:	pop    rbx
  42b1b3:	ret    
  42b1b4:	mov    rdi,rbx
  42b1b7:	xor    ebx,ebx
  42b1b9:	call   4037b0 <free@plt>
  42b1be:	jmp    42b1af <strcmp@plt+0x279f7>
  42b1c0:	push   rbp
  42b1c1:	push   rbx
  42b1c2:	mov    rbp,rdi
  42b1c5:	sub    rsp,0x8
  42b1c9:	call   425110 <strcmp@plt+0x21958>
  42b1ce:	test   rax,rax
  42b1d1:	je     42b220 <strcmp@plt+0x27a68>
  42b1d3:	mov    edi,0x48
  42b1d8:	call   434790 <strcmp@plt+0x30fd8>
  42b1dd:	test   rax,rax
  42b1e0:	mov    rbx,rax
  42b1e3:	je     42b240 <strcmp@plt+0x27a88>
  42b1e5:	mov    rsi,0x42dac0
  42b1ec:	mov    rdi,0x42a480
  42b1f3:	call   42d4b0 <strcmp@plt+0x29cf8>
  42b1f8:	test   rax,rax
  42b1fb:	mov    QWORD PTR [rbx+0x28],rax
  42b1ff:	je     42b237 <strcmp@plt+0x27a7f>
  42b201:	mov    rsi,rbp
  42b204:	mov    rdi,rbx
  42b207:	call   424b00 <strcmp@plt+0x21348>
  42b20c:	add    rsp,0x8
  42b210:	mov    rax,rbx
  42b213:	pop    rbx
  42b214:	pop    rbp
  42b215:	ret    
  42b216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b220:	mov    rdi,rbp
  42b223:	call   425050 <strcmp@plt+0x21898>
  42b228:	test   rax,rax
  42b22b:	je     42b257 <strcmp@plt+0x27a9f>
  42b22d:	mov    rdi,rax
  42b230:	call   424920 <strcmp@plt+0x21168>
  42b235:	jmp    42b1d3 <strcmp@plt+0x27a1b>
  42b237:	mov    rdi,rbx
  42b23a:	call   4037b0 <free@plt>
  42b23f:	nop
  42b240:	lea    rsi,[rip+0x23ad9]        # 44ed20 <strcmp@plt+0x4b568>
  42b247:	mov    edi,0x3
  42b24c:	xor    eax,eax
  42b24e:	xor    ebx,ebx
  42b250:	call   4306a0 <strcmp@plt+0x2cee8>
  42b255:	jmp    42b20c <strcmp@plt+0x27a54>
  42b257:	mov    rdi,rbp
  42b25a:	xor    ebx,ebx
  42b25c:	call   424890 <strcmp@plt+0x210d8>
  42b261:	lea    rsi,[rip+0x23a80]        # 44ece8 <strcmp@plt+0x4b530>
  42b268:	mov    rdx,rax
  42b26b:	mov    edi,0x3
  42b270:	xor    eax,eax
  42b272:	call   4306a0 <strcmp@plt+0x2cee8>
  42b277:	jmp    42b20c <strcmp@plt+0x27a54>
  42b279:	nop    DWORD PTR [rax+0x0]
  42b280:	test   rdi,rdi
  42b283:	je     42b2b0 <strcmp@plt+0x27af8>
  42b285:	push   rbx
  42b286:	mov    rbx,rdi
  42b289:	mov    rdi,QWORD PTR [rdi+0x28]
  42b28d:	call   42dac0 <strcmp@plt+0x2a308>
  42b292:	mov    rdi,QWORD PTR [rbx+0x30]
  42b296:	call   42dac0 <strcmp@plt+0x2a308>
  42b29b:	mov    rdi,rbx
  42b29e:	call   425680 <strcmp@plt+0x21ec8>
  42b2a3:	mov    rdi,rbx
  42b2a6:	pop    rbx
  42b2a7:	jmp    4037b0 <free@plt>
  42b2ac:	nop    DWORD PTR [rax+0x0]
  42b2b0:	repz ret 
  42b2b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b2bd:	nop    DWORD PTR [rax]
  42b2c0:	push   r15
  42b2c2:	push   r14
  42b2c4:	push   r13
  42b2c6:	push   r12
  42b2c8:	mov    r12,rdi
  42b2cb:	push   rbp
  42b2cc:	push   rbx
  42b2cd:	mov    rbx,rsi
  42b2d0:	sub    rsp,0x18
  42b2d4:	call   424df0 <strcmp@plt+0x21638>
  42b2d9:	test   eax,eax
  42b2db:	jne    42b2ec <strcmp@plt+0x27b34>
  42b2dd:	mov    r15d,eax
  42b2e0:	movzx  eax,WORD PTR [rbx+0x20]
  42b2e4:	cmp    WORD PTR [r12+0x20],ax
  42b2ea:	je     42b308 <strcmp@plt+0x27b50>
  42b2ec:	mov    r15d,0x1
  42b2f2:	add    rsp,0x18
  42b2f6:	mov    eax,r15d
  42b2f9:	pop    rbx
  42b2fa:	pop    rbp
  42b2fb:	pop    r12
  42b2fd:	pop    r13
  42b2ff:	pop    r14
  42b301:	pop    r15
  42b303:	ret    
  42b304:	nop    DWORD PTR [rax+0x0]
  42b308:	mov    rax,QWORD PTR [r12+0x28]
  42b30d:	mov    rsi,QWORD PTR [rbx+0x28]
  42b311:	mov    ecx,DWORD PTR [rax+0x18]
  42b314:	cmp    ecx,DWORD PTR [rsi+0x18]
  42b317:	jne    42b2ec <strcmp@plt+0x27b34>
  42b319:	xor    r14d,r14d
  42b31c:	test   ecx,ecx
  42b31e:	jne    42b3c0 <strcmp@plt+0x27c08>
  42b324:	mov    rdx,QWORD PTR [rax+0x8]
  42b328:	cmp    rax,rdx
  42b32b:	mov    QWORD PTR [rsp+0x8],rdx
  42b330:	je     42b2f2 <strcmp@plt+0x27b3a>
  42b332:	mov    r13,QWORD PTR [rdx+0x10]
  42b336:	mov    rcx,QWORD PTR [r14+0x10]
  42b33a:	mov    eax,DWORD PTR [rcx+0x18]
  42b33d:	cmp    eax,DWORD PTR [r13+0x18]
  42b341:	jne    42b2ec <strcmp@plt+0x27b34>
  42b343:	xor    ebp,ebp
  42b345:	test   eax,eax
  42b347:	je     42b34d <strcmp@plt+0x27b95>
  42b349:	mov    rbp,QWORD PTR [rcx+0x8]
  42b34d:	mov    rbx,QWORD PTR [r13+0x8]
  42b351:	cmp    rbx,r13
  42b354:	jne    42b36d <strcmp@plt+0x27bb5>
  42b356:	jmp    42b388 <strcmp@plt+0x27bd0>
  42b358:	nop    DWORD PTR [rax+rax*1+0x0]
  42b360:	mov    rbx,QWORD PTR [rbx+0x8]
  42b364:	mov    rbp,QWORD PTR [rbp+0x8]
  42b368:	cmp    rbx,r13
  42b36b:	je     42b388 <strcmp@plt+0x27bd0>
  42b36d:	mov    rsi,QWORD PTR [rbp+0x10]
  42b371:	mov    rdi,QWORD PTR [rbx+0x10]
  42b375:	call   42a190 <strcmp@plt+0x269d8>
  42b37a:	test   eax,eax
  42b37c:	je     42b360 <strcmp@plt+0x27ba8>
  42b37e:	jmp    42b2ec <strcmp@plt+0x27b34>
  42b383:	nop    DWORD PTR [rax+rax*1+0x0]
  42b388:	mov    rax,QWORD PTR [rsp+0x8]
  42b38d:	mov    r14,QWORD PTR [r14+0x8]
  42b391:	mov    rax,QWORD PTR [rax+0x8]
  42b395:	cmp    QWORD PTR [r12+0x28],rax
  42b39a:	mov    QWORD PTR [rsp+0x8],rax
  42b39f:	je     42b2f2 <strcmp@plt+0x27b3a>
  42b3a5:	mov    rax,QWORD PTR [rsp+0x8]
  42b3aa:	mov    rcx,QWORD PTR [r14+0x10]
  42b3ae:	mov    r13,QWORD PTR [rax+0x10]
  42b3b2:	mov    eax,DWORD PTR [r13+0x18]
  42b3b6:	cmp    eax,DWORD PTR [rcx+0x18]
  42b3b9:	je     42b343 <strcmp@plt+0x27b8b>
  42b3bb:	jmp    42b2ec <strcmp@plt+0x27b34>
  42b3c0:	mov    r14,QWORD PTR [rsi+0x8]
  42b3c4:	jmp    42b324 <strcmp@plt+0x27b6c>
  42b3c9:	nop    DWORD PTR [rax+0x0]
  42b3d0:	push   rbp
  42b3d1:	push   rbx
  42b3d2:	mov    rbp,rdi
  42b3d5:	mov    edi,0x48
  42b3da:	sub    rsp,0x8
  42b3de:	call   434790 <strcmp@plt+0x30fd8>
  42b3e3:	test   rax,rax
  42b3e6:	je     42b450 <strcmp@plt+0x27c98>
  42b3e8:	mov    rsi,0x42dac0
  42b3ef:	mov    rdi,0x42a480
  42b3f6:	mov    rbx,rax
  42b3f9:	call   42d4b0 <strcmp@plt+0x29cf8>
  42b3fe:	test   rax,rax
  42b401:	mov    QWORD PTR [rbx+0x28],rax
  42b405:	je     42b43f <strcmp@plt+0x27c87>
  42b407:	mov    rsi,rbp
  42b40a:	mov    rdi,rbx
  42b40d:	call   424b00 <strcmp@plt+0x21348>
  42b412:	movzx  eax,BYTE PTR [rbp+0x3c]
  42b416:	mov    BYTE PTR [rbx+0x3c],al
  42b419:	movzx  eax,BYTE PTR [rbp+0x3d]
  42b41d:	mov    BYTE PTR [rbx+0x3d],al
  42b420:	movzx  eax,BYTE PTR [rbp+0x3e]
  42b424:	mov    BYTE PTR [rbx+0x3e],al
  42b427:	movzx  eax,WORD PTR [rbp+0x20]
  42b42b:	mov    WORD PTR [rbx+0x20],ax
  42b42f:	mov    eax,DWORD PTR [rbp+0x38]
  42b432:	mov    DWORD PTR [rbx+0x38],eax
  42b435:	add    rsp,0x8
  42b439:	mov    rax,rbx
  42b43c:	pop    rbx
  42b43d:	pop    rbp
  42b43e:	ret    
  42b43f:	mov    rdi,rbx
  42b442:	call   4037b0 <free@plt>
  42b447:	nop    WORD PTR [rax+rax*1+0x0]
  42b450:	mov    rsi,rbp
  42b453:	xor    edi,edi
  42b455:	call   424b00 <strcmp@plt+0x21348>
  42b45a:	mov    BYTE PTR ds:0x3c,0x0
  42b462:	ud2    
  42b464:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b46f:	nop
  42b470:	push   r15
  42b472:	push   r14
  42b474:	push   r13
  42b476:	push   r12
  42b478:	mov    r13,rdi
  42b47b:	push   rbp
  42b47c:	push   rbx
  42b47d:	sub    rsp,0x8
  42b481:	mov    BYTE PTR [rip+0x47338],0x0        # 4727c0 <strcmp@plt+0x6f008>
  42b488:	movzx  r15d,BYTE PTR [rdi+0x3e]
  42b48d:	movzx  r14d,BYTE PTR [rdi+0x3d]
  42b492:	movzx  edi,BYTE PTR [rdi+0x3c]
  42b496:	call   42cd00 <strcmp@plt+0x29548>
  42b49b:	movzx  ebp,WORD PTR [r13+0x20]
  42b4a0:	mov    ebx,DWORD PTR [r13+0x38]
  42b4a4:	mov    rdi,r13
  42b4a7:	mov    r12,rax
  42b4aa:	call   424890 <strcmp@plt+0x210d8>
  42b4af:	sub    rsp,0x8
  42b4b3:	lea    r8,[rip+0x238ae]        # 44ed68 <strcmp@plt+0x4b5b0>
  42b4ba:	lea    rdi,[rip+0x472ff]        # 4727c0 <strcmp@plt+0x6f008>
  42b4c1:	push   r15
  42b4c3:	push   r14
  42b4c5:	mov    r9,rax
  42b4c8:	push   r12
  42b4ca:	push   rbp
  42b4cb:	xor    eax,eax
  42b4cd:	push   rbx
  42b4ce:	mov    ecx,0x1f4
  42b4d3:	mov    edx,0x1
  42b4d8:	mov    esi,0x1f4
  42b4dd:	call   4032a0 <__snprintf_chk@plt>
  42b4e2:	add    rsp,0x30
  42b4e6:	cmp    WORD PTR [r13+0x20],0x0
  42b4ec:	je     42b5bb <strcmp@plt+0x27e03>
  42b4f2:	mov    rax,QWORD PTR [r13+0x28]
  42b4f6:	mov    r12,QWORD PTR [rax+0x8]
  42b4fa:	cmp    rax,r12
  42b4fd:	je     42b5bb <strcmp@plt+0x27e03>
  42b503:	lea    rbp,[rip+0x472b6]        # 4727c0 <strcmp@plt+0x6f008>
  42b50a:	nop    WORD PTR [rax+rax*1+0x0]
  42b510:	mov    rbx,QWORD PTR [r12+0x10]
  42b515:	mov    eax,DWORD PTR [rbx+0x18]
  42b518:	test   eax,eax
  42b51a:	je     42b5ac <strcmp@plt+0x27df4>
  42b520:	mov    r14,QWORD PTR [rbx+0x8]
  42b524:	cmp    r14,rbx
  42b527:	je     42b5ac <strcmp@plt+0x27df4>
  42b52d:	nop    DWORD PTR [rax]
  42b530:	mov    rdi,QWORD PTR [r14+0x10]
  42b534:	call   429e20 <strcmp@plt+0x26668>
  42b539:	lea    rdi,[rip+0x47280]        # 4727c0 <strcmp@plt+0x6f008>
  42b540:	mov    ecx,DWORD PTR [rdi]
  42b542:	add    rdi,0x4
  42b546:	lea    edx,[rcx-0x1010101]
  42b54c:	andn   edx,ecx,edx
  42b551:	and    edx,0x80808080
  42b557:	je     42b540 <strcmp@plt+0x27d88>
  42b559:	mov    ecx,edx
  42b55b:	lea    r8,[rip+0x23777]        # 44ecd9 <strcmp@plt+0x4b521>
  42b562:	mov    r9,rax
  42b565:	shr    ecx,0x10
  42b568:	test   edx,0x8080
  42b56e:	cmove  edx,ecx
  42b571:	lea    rcx,[rdi+0x2]
  42b575:	mov    esi,edx
  42b577:	cmove  rdi,rcx
  42b57b:	add    sil,dl
  42b57e:	mov    esi,0x1f4
  42b583:	sbb    rdi,0x3
  42b587:	mov    rcx,0xffffffffffffffff
  42b58e:	xor    eax,eax
  42b590:	sub    rdi,rbp
  42b593:	mov    edx,0x1
  42b598:	sub    rsi,rdi
  42b59b:	add    rdi,rbp
  42b59e:	call   4032a0 <__snprintf_chk@plt>
  42b5a3:	mov    r14,QWORD PTR [r14+0x8]
  42b5a7:	cmp    r14,rbx
  42b5aa:	jne    42b530 <strcmp@plt+0x27d78>
  42b5ac:	mov    r12,QWORD PTR [r12+0x8]
  42b5b1:	cmp    QWORD PTR [r13+0x28],r12
  42b5b5:	jne    42b510 <strcmp@plt+0x27d58>
  42b5bb:	add    rsp,0x8
  42b5bf:	lea    rax,[rip+0x471fa]        # 4727c0 <strcmp@plt+0x6f008>
  42b5c6:	pop    rbx
  42b5c7:	pop    rbp
  42b5c8:	pop    r12
  42b5ca:	pop    r13
  42b5cc:	pop    r14
  42b5ce:	pop    r15
  42b5d0:	ret    
  42b5d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b5dc:	nop    DWORD PTR [rax+0x0]
  42b5e0:	push   rbx
  42b5e1:	mov    rbx,rdi
  42b5e4:	mov    rdi,QWORD PTR [rdi+0x28]
  42b5e8:	call   42da80 <strcmp@plt+0x2a2c8>
  42b5ed:	xor    eax,eax
  42b5ef:	mov    WORD PTR [rbx+0x20],ax
  42b5f3:	pop    rbx
  42b5f4:	ret    
  42b5f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b600:	test   rdi,rdi
  42b603:	je     42b69e <strcmp@plt+0x27ee6>
  42b609:	test   rsi,rsi
  42b60c:	je     42b69e <strcmp@plt+0x27ee6>
  42b612:	push   r14
  42b614:	push   r13
  42b616:	mov    r13,rsi
  42b619:	push   r12
  42b61b:	mov    r12,rdi
  42b61e:	push   rbp
  42b61f:	push   rbx
  42b620:	mov    rdi,QWORD PTR [rdi+0x28]
  42b624:	call   42da80 <strcmp@plt+0x2a2c8>
  42b629:	mov    rbx,QWORD PTR [r13+0x8]
  42b62d:	cmp    r13,rbx
  42b630:	je     42b68a <strcmp@plt+0x27ed2>
  42b632:	xor    r14d,r14d
  42b635:	jmp    42b660 <strcmp@plt+0x27ea8>
  42b637:	nop    WORD PTR [rax+rax*1+0x0]
  42b640:	mov    rdx,QWORD PTR [rbp+0x8]
  42b644:	mov    rbx,QWORD PTR [rbx+0x8]
  42b648:	add    eax,r14d
  42b64b:	mov    rdx,QWORD PTR [rdx+0x10]
  42b64f:	mov    rdx,QWORD PTR [rdx]
  42b652:	mov    edx,DWORD PTR [rdx+0x18]
  42b655:	test   edx,edx
  42b657:	cmovne r14d,eax
  42b65b:	cmp    r13,rbx
  42b65e:	je     42b690 <strcmp@plt+0x27ed8>
  42b660:	mov    rdi,QWORD PTR [rbx+0x10]
  42b664:	call   42a420 <strcmp@plt+0x26c68>
  42b669:	mov    rsi,QWORD PTR [r12+0x28]
  42b66e:	mov    rbp,rax
  42b671:	mov    rdi,rax
  42b674:	call   42d540 <strcmp@plt+0x29d88>
  42b679:	mov    eax,DWORD PTR [rbp+0x18]
  42b67c:	test   eax,eax
  42b67e:	jne    42b640 <strcmp@plt+0x27e88>
  42b680:	mov    rax,QWORD PTR ds:0x0
  42b688:	ud2    
  42b68a:	xor    r14d,r14d
  42b68d:	nop    DWORD PTR [rax]
  42b690:	mov    WORD PTR [r12+0x20],r14w
  42b696:	pop    rbx
  42b697:	pop    rbp
  42b698:	pop    r12
  42b69a:	pop    r13
  42b69c:	pop    r14
  42b69e:	repz ret 
  42b6a0:	push   r14
  42b6a2:	push   r13
  42b6a4:	mov    r14d,edx
  42b6a7:	push   r12
  42b6a9:	push   rbp
  42b6aa:	mov    r12d,esi
  42b6ad:	push   rbx
  42b6ae:	mov    rax,QWORD PTR [rdi+0x28]
  42b6b2:	mov    rbx,QWORD PTR [rax+0x8]
  42b6b6:	cmp    rax,rbx
  42b6b9:	je     42b770 <strcmp@plt+0x27fb8>
  42b6bf:	mov    r13,rdi
  42b6c2:	jmp    42b6e7 <strcmp@plt+0x27f2f>
  42b6c4:	nop    DWORD PTR [rax+0x0]
  42b6c8:	mov    rax,QWORD PTR [rbp+0x8]
  42b6cc:	mov    rax,QWORD PTR [rax+0x10]
  42b6d0:	mov    rdi,QWORD PTR [rax]
  42b6d3:	cmp    r12d,DWORD PTR [rdi+0x18]
  42b6d7:	je     42b700 <strcmp@plt+0x27f48>
  42b6d9:	mov    rbx,QWORD PTR [rbx+0x8]
  42b6dd:	cmp    QWORD PTR [r13+0x28],rbx
  42b6e1:	je     42b770 <strcmp@plt+0x27fb8>
  42b6e7:	mov    rbp,QWORD PTR [rbx+0x10]
  42b6eb:	mov    edx,DWORD PTR [rbp+0x18]
  42b6ee:	test   edx,edx
  42b6f0:	jne    42b6c8 <strcmp@plt+0x27f10>
  42b6f2:	mov    rax,QWORD PTR ds:0x0
  42b6fa:	ud2    
  42b6fc:	nop    DWORD PTR [rax+0x0]
  42b700:	cmp    r12d,0x1
  42b704:	je     42b750 <strcmp@plt+0x27f98>
  42b706:	jb     42b71e <strcmp@plt+0x27f66>
  42b708:	cmp    r12d,0x2
  42b70c:	je     42b730 <strcmp@plt+0x27f78>
  42b70e:	cmp    r12d,0x3
  42b712:	jne    42b6d9 <strcmp@plt+0x27f21>
  42b714:	call   424f30 <strcmp@plt+0x21778>
  42b719:	cmp    eax,r14d
  42b71c:	jne    42b6d9 <strcmp@plt+0x27f21>
  42b71e:	pop    rbx
  42b71f:	mov    rax,rbp
  42b722:	pop    rbp
  42b723:	pop    r12
  42b725:	pop    r13
  42b727:	pop    r14
  42b729:	ret    
  42b72a:	nop    WORD PTR [rax+rax*1+0x0]
  42b730:	mov    rax,0x468e3c
  42b737:	mov    eax,DWORD PTR [rax]
  42b739:	test   eax,eax
  42b73b:	jg     42b7a0 <strcmp@plt+0x27fe8>
  42b73d:	xor    eax,eax
  42b73f:	pop    rbx
  42b740:	pop    rbp
  42b741:	pop    r12
  42b743:	pop    r13
  42b745:	pop    r14
  42b747:	ret    
  42b748:	nop    DWORD PTR [rax+rax*1+0x0]
  42b750:	call   4251c0 <strcmp@plt+0x21a08>
  42b755:	movzx  eax,ax
  42b758:	cmp    eax,r14d
  42b75b:	je     42b71e <strcmp@plt+0x27f66>
  42b75d:	mov    rbx,QWORD PTR [rbx+0x8]
  42b761:	cmp    QWORD PTR [r13+0x28],rbx
  42b765:	jne    42b6e7 <strcmp@plt+0x27f2f>
  42b76b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b770:	mov    rax,0x468e3c
  42b777:	cmp    DWORD PTR [rax],0x2
  42b77a:	jle    42b73d <strcmp@plt+0x27f85>
  42b77c:	lea    rsi,[rip+0x231bd]        # 44e940 <strcmp@plt+0x4b188>
  42b783:	xor    eax,eax
  42b785:	mov    ecx,r14d
  42b788:	mov    edx,r12d
  42b78b:	mov    edi,0x7
  42b790:	call   4306a0 <strcmp@plt+0x2cee8>
  42b795:	xor    eax,eax
  42b797:	jmp    42b73f <strcmp@plt+0x27f87>
  42b799:	nop    DWORD PTR [rax+0x0]
  42b7a0:	lea    rsi,[rip+0x23609]        # 44edb0 <strcmp@plt+0x4b5f8>
  42b7a7:	xor    eax,eax
  42b7a9:	mov    edi,0x5
  42b7ae:	call   4306a0 <strcmp@plt+0x2cee8>
  42b7b3:	pop    rbx
  42b7b4:	xor    eax,eax
  42b7b6:	pop    rbp
  42b7b7:	pop    r12
  42b7b9:	pop    r13
  42b7bb:	pop    r14
  42b7bd:	ret    
  42b7be:	xchg   ax,ax
  42b7c0:	push   rbp
  42b7c1:	push   rbx
  42b7c2:	mov    rbx,rdi
  42b7c5:	mov    rdi,rsi
  42b7c8:	sub    rsp,0x8
  42b7cc:	mov    ebp,DWORD PTR [rsi+0x18]
  42b7cf:	call   425700 <strcmp@plt+0x21f48>
  42b7d4:	add    rsp,0x8
  42b7d8:	mov    rdi,rbx
  42b7db:	mov    edx,eax
  42b7dd:	mov    esi,ebp
  42b7df:	pop    rbx
  42b7e0:	pop    rbp
  42b7e1:	jmp    42b6a0 <strcmp@plt+0x27ee8>
  42b7e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b7f0:	push   r13
  42b7f2:	push   r12
  42b7f4:	mov    r12,rdi
  42b7f7:	push   rbp
  42b7f8:	push   rbx
  42b7f9:	mov    rbx,rsi
  42b7fc:	sub    rsp,0x8
  42b800:	mov    r13,QWORD PTR [rsi]
  42b803:	mov    rsi,r13
  42b806:	call   42b7c0 <strcmp@plt+0x28008>
  42b80b:	test   rax,rax
  42b80e:	je     42b823 <strcmp@plt+0x2806b>
  42b810:	mov    rsi,rbx
  42b813:	mov    rdi,rax
  42b816:	mov    rbp,rax
  42b819:	call   42a3b0 <strcmp@plt+0x26bf8>
  42b81e:	cmp    eax,0x1
  42b821:	je     42b870 <strcmp@plt+0x280b8>
  42b823:	mov    rax,0x468e3c
  42b82a:	cmp    DWORD PTR [rax],0x1
  42b82d:	jg     42b840 <strcmp@plt+0x28088>
  42b82f:	add    rsp,0x8
  42b833:	mov    eax,0x1
  42b838:	pop    rbx
  42b839:	pop    rbp
  42b83a:	pop    r12
  42b83c:	pop    r13
  42b83e:	ret    
  42b83f:	nop
  42b840:	mov    rdi,QWORD PTR [rbx]
  42b843:	call   424890 <strcmp@plt+0x210d8>
  42b848:	lea    rsi,[rip+0x235a1]        # 44edf0 <strcmp@plt+0x4b638>
  42b84f:	mov    rdx,rax
  42b852:	mov    edi,0x6
  42b857:	xor    eax,eax
  42b859:	call   4306a0 <strcmp@plt+0x2cee8>
  42b85e:	add    rsp,0x8
  42b862:	mov    eax,0x1
  42b867:	pop    rbx
  42b868:	pop    rbp
  42b869:	pop    r12
  42b86b:	pop    r13
  42b86d:	ret    
  42b86e:	xchg   ax,ax
  42b870:	mov    edx,DWORD PTR [rbp+0x18]
  42b873:	test   edx,edx
  42b875:	je     42b8c8 <strcmp@plt+0x28110>
  42b877:	mov    eax,DWORD PTR [r13+0x18]
  42b87b:	test   eax,eax
  42b87d:	je     42b886 <strcmp@plt+0x280ce>
  42b87f:	sub    WORD PTR [r12+0x20],0x1
  42b886:	mov    rax,0x468e3c
  42b88d:	cmp    DWORD PTR [rax],0x1
  42b890:	jle    42b82f <strcmp@plt+0x28077>
  42b892:	mov    rdi,r12
  42b895:	call   424890 <strcmp@plt+0x210d8>
  42b89a:	mov    rdi,QWORD PTR [rbx]
  42b89d:	mov    rbp,rax
  42b8a0:	call   424890 <strcmp@plt+0x210d8>
  42b8a5:	lea    rsi,[rip+0x2359c]        # 44ee48 <strcmp@plt+0x4b690>
  42b8ac:	mov    rdx,rax
  42b8af:	mov    rcx,rbp
  42b8b2:	mov    edi,0x6
  42b8b7:	xor    eax,eax
  42b8b9:	call   4306a0 <strcmp@plt+0x2cee8>
  42b8be:	jmp    42b82f <strcmp@plt+0x28077>
  42b8c3:	nop    DWORD PTR [rax+rax*1+0x0]
  42b8c8:	mov    rsi,QWORD PTR [r12+0x28]
  42b8cd:	mov    rdi,rbp
  42b8d0:	call   42da30 <strcmp@plt+0x2a278>
  42b8d5:	jmp    42b877 <strcmp@plt+0x280bf>
  42b8d7:	nop    WORD PTR [rax+rax*1+0x0]
  42b8e0:	push   rbx
  42b8e1:	mov    rbx,rsi
  42b8e4:	call   42b7c0 <strcmp@plt+0x28008>
  42b8e9:	mov    rsi,rbx
  42b8ec:	mov    rdi,rax
  42b8ef:	pop    rbx
  42b8f0:	jmp    42a2c0 <strcmp@plt+0x26b08>
  42b8f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b900:	push   r14
  42b902:	push   r13
  42b904:	push   r12
  42b906:	push   rbp
  42b907:	mov    rbp,rsi
  42b90a:	push   rbx
  42b90b:	mov    r14,QWORD PTR [rsi]
  42b90e:	mov    r12,rdi
  42b911:	mov    rsi,r14
  42b914:	call   42b7c0 <strcmp@plt+0x28008>
  42b919:	test   rax,rax
  42b91c:	je     42ba58 <strcmp@plt+0x282a0>
  42b922:	mov    rsi,rax
  42b925:	mov    rdi,rbp
  42b928:	mov    rbx,rax
  42b92b:	call   42d730 <strcmp@plt+0x29f78>
  42b930:	cmp    al,0x1
  42b932:	je     42b970 <strcmp@plt+0x281b8>
  42b934:	mov    rsi,rbx
  42b937:	mov    rdi,rbp
  42b93a:	call   42d540 <strcmp@plt+0x29d88>
  42b93f:	mov    r13d,eax
  42b942:	cmp    r13d,0x1
  42b946:	je     42ba00 <strcmp@plt+0x28248>
  42b94c:	mov    r13d,DWORD PTR [rbx+0x18]
  42b950:	test   r13d,r13d
  42b953:	je     42b9e0 <strcmp@plt+0x28228>
  42b959:	xor    r13d,r13d
  42b95c:	pop    rbx
  42b95d:	mov    eax,r13d
  42b960:	pop    rbp
  42b961:	pop    r12
  42b963:	pop    r13
  42b965:	pop    r14
  42b967:	ret    
  42b968:	nop    DWORD PTR [rax+rax*1+0x0]
  42b970:	mov    rax,0x468e3c
  42b977:	cmp    DWORD PTR [rax],0x1
  42b97a:	jle    42b9a9 <strcmp@plt+0x281f1>
  42b97c:	mov    rdi,r12
  42b97f:	call   424890 <strcmp@plt+0x210d8>
  42b984:	mov    rdi,QWORD PTR [rbp+0x0]
  42b988:	mov    r13,rax
  42b98b:	call   424890 <strcmp@plt+0x210d8>
  42b990:	lea    rsi,[rip+0x23509]        # 44eea0 <strcmp@plt+0x4b6e8>
  42b997:	mov    rdx,rax
  42b99a:	mov    rcx,r13
  42b99d:	mov    edi,0x6
  42b9a2:	xor    eax,eax
  42b9a4:	call   4306a0 <strcmp@plt+0x2cee8>
  42b9a9:	mov    rsi,QWORD PTR [rbp+0x0]
  42b9ad:	mov    rdi,r12
  42b9b0:	call   42b8e0 <strcmp@plt+0x28128>
  42b9b5:	movzx  edx,BYTE PTR [rbp+0xb]
  42b9b9:	cmp    BYTE PTR [rax+0xb],dl
  42b9bc:	jbe    42baa0 <strcmp@plt+0x282e8>
  42b9c2:	mov    rsi,rbx
  42b9c5:	mov    rdi,rax
  42b9c8:	call   42da30 <strcmp@plt+0x2a278>
  42b9cd:	mov    rsi,rbx
  42b9d0:	mov    rdi,rbp
  42b9d3:	pop    rbx
  42b9d4:	pop    rbp
  42b9d5:	pop    r12
  42b9d7:	pop    r13
  42b9d9:	pop    r14
  42b9db:	jmp    42d540 <strcmp@plt+0x29d88>
  42b9e0:	mov    rsi,QWORD PTR [r12+0x28]
  42b9e5:	mov    rdi,rbx
  42b9e8:	call   42da30 <strcmp@plt+0x2a278>
  42b9ed:	pop    rbx
  42b9ee:	mov    eax,r13d
  42b9f1:	pop    rbp
  42b9f2:	pop    r12
  42b9f4:	pop    r13
  42b9f6:	pop    r14
  42b9f8:	ret    
  42b9f9:	nop    DWORD PTR [rax+0x0]
  42ba00:	mov    rax,0x468e3c
  42ba07:	cmp    DWORD PTR [rax],0x1
  42ba0a:	jle    42ba39 <strcmp@plt+0x28281>
  42ba0c:	mov    rdi,r12
  42ba0f:	call   424890 <strcmp@plt+0x210d8>
  42ba14:	mov    rdi,QWORD PTR [rbp+0x0]
  42ba18:	mov    rbx,rax
  42ba1b:	call   424890 <strcmp@plt+0x210d8>
  42ba20:	lea    rsi,[rip+0x234e9]        # 44ef10 <strcmp@plt+0x4b758>
  42ba27:	mov    rdx,rax
  42ba2a:	mov    rcx,rbx
  42ba2d:	mov    edi,0x6
  42ba32:	xor    eax,eax
  42ba34:	call   4306a0 <strcmp@plt+0x2cee8>
  42ba39:	mov    eax,DWORD PTR [r14+0x18]
  42ba3d:	test   eax,eax
  42ba3f:	je     42b95c <strcmp@plt+0x281a4>
  42ba45:	add    WORD PTR [r12+0x20],0x1
  42ba4c:	jmp    42b95c <strcmp@plt+0x281a4>
  42ba51:	nop    DWORD PTR [rax+0x0]
  42ba58:	mov    rsi,0x429d50
  42ba5f:	mov    rdi,0x429d40
  42ba66:	call   42d4b0 <strcmp@plt+0x29cf8>
  42ba6b:	mov    rdi,rbp
  42ba6e:	mov    rsi,rax
  42ba71:	mov    rbx,rax
  42ba74:	call   42d540 <strcmp@plt+0x29d88>
  42ba79:	cmp    eax,0x1
  42ba7c:	jne    42b94c <strcmp@plt+0x28194>
  42ba82:	mov    rsi,QWORD PTR [r12+0x28]
  42ba87:	mov    rdi,rbx
  42ba8a:	call   42d540 <strcmp@plt+0x29d88>
  42ba8f:	mov    r13d,eax
  42ba92:	jmp    42b942 <strcmp@plt+0x2818a>
  42ba97:	nop    WORD PTR [rax+rax*1+0x0]
  42baa0:	mov    r13d,0xfffffffb
  42baa6:	jmp    42b95c <strcmp@plt+0x281a4>
  42baab:	nop    DWORD PTR [rax+rax*1+0x0]
  42bab0:	push   r15
  42bab2:	push   r14
  42bab4:	mov    r15d,esi
  42bab7:	push   r13
  42bab9:	push   r12
  42babb:	mov    r13,rdi
  42babe:	push   rbp
  42babf:	push   rbx
  42bac0:	mov    r12d,edx
  42bac3:	mov    r14d,ecx
  42bac6:	mov    rbp,r9
  42bac9:	sub    rsp,0x18
  42bacd:	mov    DWORD PTR [rsp+0xc],r8d
  42bad2:	call   425110 <strcmp@plt+0x21958>
  42bad7:	test   rax,rax
  42bada:	je     42bba0 <strcmp@plt+0x283e8>
  42bae0:	mov    edi,0x48
  42bae5:	call   434790 <strcmp@plt+0x30fd8>
  42baea:	test   rax,rax
  42baed:	mov    rbx,rax
  42baf0:	je     42bbfd <strcmp@plt+0x28445>
  42baf6:	mov    rsi,0x42dac0
  42bafd:	mov    rdi,0x42a480
  42bb04:	call   42d4b0 <strcmp@plt+0x29cf8>
  42bb09:	test   rax,rax
  42bb0c:	mov    QWORD PTR [rbx+0x28],rax
  42bb10:	je     42bbf5 <strcmp@plt+0x2843d>
  42bb16:	mov    rsi,r13
  42bb19:	mov    rdi,rbx
  42bb1c:	call   424b00 <strcmp@plt+0x21348>
  42bb21:	movzx  eax,BYTE PTR [rsp+0xc]
  42bb26:	mov    BYTE PTR [rbx+0x3c],r12b
  42bb2a:	sub    r12d,0x2
  42bb2e:	cmp    r12d,0x1
  42bb32:	mov    DWORD PTR [rbx+0x38],r15d
  42bb36:	mov    BYTE PTR [rbx+0x3d],r14b
  42bb3a:	mov    BYTE PTR [rbx+0x3e],al
  42bb3d:	jbe    42bbc0 <strcmp@plt+0x28408>
  42bb43:	mov    r12,QWORD PTR [rbp+0x8]
  42bb47:	cmp    rbp,r12
  42bb4a:	je     42bb87 <strcmp@plt+0x283cf>
  42bb4c:	nop    DWORD PTR [rax+0x0]
  42bb50:	mov    rdi,QWORD PTR [r12+0x10]
  42bb55:	push   0x0
  42bb57:	xor    edx,edx
  42bb59:	push   0x0
  42bb5b:	xor    r9d,r9d
  42bb5e:	xor    r8d,r8d
  42bb61:	mov    ecx,0x1
  42bb66:	mov    esi,0x1
  42bb6b:	call   429d90 <strcmp@plt+0x265d8>
  42bb70:	mov    rdi,rbx
  42bb73:	mov    rsi,rax
  42bb76:	call   42b900 <strcmp@plt+0x28148>
  42bb7b:	mov    r12,QWORD PTR [r12+0x8]
  42bb80:	pop    rax
  42bb81:	pop    rdx
  42bb82:	cmp    rbp,r12
  42bb85:	jne    42bb50 <strcmp@plt+0x28398>
  42bb87:	add    rsp,0x18
  42bb8b:	mov    rax,rbx
  42bb8e:	pop    rbx
  42bb8f:	pop    rbp
  42bb90:	pop    r12
  42bb92:	pop    r13
  42bb94:	pop    r14
  42bb96:	pop    r15
  42bb98:	ret    
  42bb99:	nop    DWORD PTR [rax+0x0]
  42bba0:	mov    rdi,r13
  42bba3:	call   425050 <strcmp@plt+0x21898>
  42bba8:	test   rax,rax
  42bbab:	je     42bc17 <strcmp@plt+0x2845f>
  42bbad:	mov    rdi,rax
  42bbb0:	call   424920 <strcmp@plt+0x21168>
  42bbb5:	jmp    42bae0 <strcmp@plt+0x28328>
  42bbba:	nop    WORD PTR [rax+rax*1+0x0]
  42bbc0:	push   0x0
  42bbc2:	push   0x0
  42bbc4:	mov    ecx,0x1
  42bbc9:	mov    rdi,QWORD PTR [rsp+0x68]
  42bbce:	xor    r9d,r9d
  42bbd1:	xor    r8d,r8d
  42bbd4:	mov    edx,0x1
  42bbd9:	mov    esi,0x1
  42bbde:	call   429d90 <strcmp@plt+0x265d8>
  42bbe3:	mov    rdi,rbx
  42bbe6:	mov    rsi,rax
  42bbe9:	call   42b900 <strcmp@plt+0x28148>
  42bbee:	pop    rcx
  42bbef:	pop    rsi
  42bbf0:	jmp    42bb43 <strcmp@plt+0x2838b>
  42bbf5:	mov    rdi,rbx
  42bbf8:	call   4037b0 <free@plt>
  42bbfd:	lea    rsi,[rip+0x2339c]        # 44efa0 <strcmp@plt+0x4b7e8>
  42bc04:	mov    edi,0x3
  42bc09:	xor    eax,eax
  42bc0b:	xor    ebx,ebx
  42bc0d:	call   4306a0 <strcmp@plt+0x2cee8>
  42bc12:	jmp    42bb87 <strcmp@plt+0x283cf>
  42bc17:	mov    rdi,r13
  42bc1a:	xor    ebx,ebx
  42bc1c:	call   424890 <strcmp@plt+0x210d8>
  42bc21:	lea    rsi,[rip+0x23338]        # 44ef60 <strcmp@plt+0x4b7a8>
  42bc28:	mov    rdx,rax
  42bc2b:	mov    edi,0x3
  42bc30:	xor    eax,eax
  42bc32:	call   4306a0 <strcmp@plt+0x2cee8>
  42bc37:	jmp    42bb87 <strcmp@plt+0x283cf>
  42bc3c:	nop    DWORD PTR [rax+0x0]
  42bc40:	push   rbp
  42bc41:	push   rbx
  42bc42:	mov    rbx,rsi
  42bc45:	sub    rsp,0x8
  42bc49:	mov    rbp,QWORD PTR [rsi]
  42bc4c:	mov    rsi,rbp
  42bc4f:	call   42b7c0 <strcmp@plt+0x28008>
  42bc54:	test   rax,rax
  42bc57:	je     42bc6e <strcmp@plt+0x284b6>
  42bc59:	mov    edx,DWORD PTR [rax+0x18]
  42bc5c:	test   edx,edx
  42bc5e:	je     42bc6e <strcmp@plt+0x284b6>
  42bc60:	test   rbp,rbp
  42bc63:	je     42bc6e <strcmp@plt+0x284b6>
  42bc65:	mov    rdx,QWORD PTR [rax+0x8]
  42bc69:	cmp    rax,rdx
  42bc6c:	jne    42bc89 <strcmp@plt+0x284d1>
  42bc6e:	add    rsp,0x8
  42bc72:	xor    eax,eax
  42bc74:	pop    rbx
  42bc75:	pop    rbp
  42bc76:	ret    
  42bc77:	nop    WORD PTR [rax+rax*1+0x0]
  42bc80:	mov    rdx,QWORD PTR [rdx+0x8]
  42bc84:	cmp    rax,rdx
  42bc87:	je     42bc6e <strcmp@plt+0x284b6>
  42bc89:	cmp    rbx,QWORD PTR [rdx+0x10]
  42bc8d:	jne    42bc80 <strcmp@plt+0x284c8>
  42bc8f:	add    rsp,0x8
  42bc93:	mov    eax,0x1
  42bc98:	pop    rbx
  42bc99:	pop    rbp
  42bc9a:	ret    
  42bc9b:	nop    DWORD PTR [rax+rax*1+0x0]
  42bca0:	push   rbp
  42bca1:	push   rbx
  42bca2:	mov    rbx,rsi
  42bca5:	sub    rsp,0x8
  42bca9:	call   42b7c0 <strcmp@plt+0x28008>
  42bcae:	mov    rsi,rbx
  42bcb1:	mov    rdi,rax
  42bcb4:	mov    rbp,rax
  42bcb7:	call   42a330 <strcmp@plt+0x26b78>
  42bcbc:	test   rax,rax
  42bcbf:	je     42bcd8 <strcmp@plt+0x28520>
  42bcc1:	add    rsp,0x8
  42bcc5:	mov    rsi,rbp
  42bcc8:	mov    rdi,rax
  42bccb:	pop    rbx
  42bccc:	pop    rbp
  42bccd:	jmp    42d540 <strcmp@plt+0x29d88>
  42bcd2:	nop    WORD PTR [rax+rax*1+0x0]
  42bcd8:	add    rsp,0x8
  42bcdc:	xor    eax,eax
  42bcde:	pop    rbx
  42bcdf:	pop    rbp
  42bce0:	ret    
  42bce1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42bcec:	nop    DWORD PTR [rax+0x0]
  42bcf0:	push   r14
  42bcf2:	mov    r14,rdi
  42bcf5:	mov    rdi,0x424750
  42bcfc:	push   r13
  42bcfe:	push   r12
  42bd00:	push   rbp
  42bd01:	push   rbx
  42bd02:	call   42d4f0 <strcmp@plt+0x29d38>
  42bd07:	mov    r12,rax
  42bd0a:	mov    rax,QWORD PTR [r14+0x28]
  42bd0e:	mov    r13,QWORD PTR [rax+0x8]
  42bd12:	cmp    rax,r13
  42bd15:	je     42bd62 <strcmp@plt+0x285aa>
  42bd17:	nop    WORD PTR [rax+rax*1+0x0]
  42bd20:	mov    rbp,QWORD PTR [r13+0x10]
  42bd24:	mov    eax,DWORD PTR [rbp+0x18]
  42bd27:	test   eax,eax
  42bd29:	je     42bd58 <strcmp@plt+0x285a0>
  42bd2b:	mov    rbx,QWORD PTR [rbp+0x8]
  42bd2f:	cmp    rbx,rbp
  42bd32:	je     42bd58 <strcmp@plt+0x285a0>
  42bd34:	nop    DWORD PTR [rax+0x0]
  42bd38:	mov    rax,QWORD PTR [rbx+0x10]
  42bd3c:	mov    rdi,QWORD PTR [rax]
  42bd3f:	call   424b80 <strcmp@plt+0x213c8>
  42bd44:	mov    rsi,r12
  42bd47:	mov    rdi,rax
  42bd4a:	call   42d6d0 <strcmp@plt+0x29f18>
  42bd4f:	mov    rbx,QWORD PTR [rbx+0x8]
  42bd53:	cmp    rbx,rbp
  42bd56:	jne    42bd38 <strcmp@plt+0x28580>
  42bd58:	mov    r13,QWORD PTR [r13+0x8]
  42bd5c:	cmp    QWORD PTR [r14+0x28],r13
  42bd60:	jne    42bd20 <strcmp@plt+0x28568>
  42bd62:	pop    rbx
  42bd63:	mov    rax,r12
  42bd66:	pop    rbp
  42bd67:	pop    r12
  42bd69:	pop    r13
  42bd6b:	pop    r14
  42bd6d:	ret    
  42bd6e:	xchg   ax,ax
  42bd70:	mov    BYTE PTR [rdi],0x10
  42bd73:	mov    BYTE PTR [rdi+0x3],0x0
  42bd77:	mov    QWORD PTR [rdi+0x4],0x0
  42bd7f:	mov    BYTE PTR [rdi+0x1],0x0
  42bd83:	mov    BYTE PTR [rdi+0x2],0x0
  42bd87:	ret    
  42bd88:	nop    DWORD PTR [rax+rax*1+0x0]
  42bd90:	mov    BYTE PTR [rdi+0x3],0x0
  42bd94:	mov    QWORD PTR [rdi+0x4],0x0
  42bd9c:	mov    BYTE PTR [rdi],0x20
  42bd9f:	mov    BYTE PTR [rdi+0x1],0x0
  42bda3:	mov    BYTE PTR [rdi+0x2],0x0
  42bda7:	ret    
  42bda8:	nop    DWORD PTR [rax+rax*1+0x0]
  42bdb0:	movzx  eax,BYTE PTR [rdi+0x2]
  42bdb4:	mov    QWORD PTR [rdi+0x4],0x0
  42bdbc:	mov    BYTE PTR [rdi+0x3],0x0
  42bdc0:	mov    BYTE PTR [rdi],0x30
  42bdc3:	mov    BYTE PTR [rdi+0x1],0x0
  42bdc7:	or     eax,0x1
  42bdca:	and    eax,0x3
  42bdcd:	mov    BYTE PTR [rdi+0x2],al
  42bdd0:	ret    
  42bdd1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42bddc:	nop    DWORD PTR [rax+0x0]
  42bde0:	xor    eax,eax
  42bde2:	mov    BYTE PTR [rdi+0x3],0x0
  42bde6:	mov    QWORD PTR [rdi+0x4],0x0
  42bdee:	mov    BYTE PTR [rdi],0x40
  42bdf1:	mov    WORD PTR [rdi+0x1],ax
  42bdf5:	ret    
  42bdf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42be00:	mov    DWORD PTR [rdi],0x0
  42be06:	mov    BYTE PTR [rdi],0x80
  42be09:	ret    
  42be0a:	nop    WORD PTR [rax+rax*1+0x0]
  42be10:	mov    QWORD PTR [rdi+0x4],0x0
  42be18:	mov    BYTE PTR [rdi],0x70
  42be1b:	mov    BYTE PTR [rdi+0x1],0x0
  42be1f:	mov    BYTE PTR [rdi+0x2],0x0
  42be23:	mov    BYTE PTR [rdi+0x3],0x0
  42be27:	ret    
  42be28:	nop    DWORD PTR [rax+rax*1+0x0]
  42be30:	mov    BYTE PTR [rdi+0x5],0x0
  42be34:	mov    DWORD PTR [rdi],0x0
  42be3a:	mov    BYTE PTR [rdi+0x4],0x0
  42be3e:	ret    
  42be3f:	nop
  42be40:	mov    BYTE PTR [rdi+0x3],0x0
  42be44:	mov    QWORD PTR [rdi+0x4],0x0
  42be4c:	mov    BYTE PTR [rdi],0x60
  42be4f:	mov    BYTE PTR [rdi+0x1],0x0
  42be53:	mov    BYTE PTR [rdi+0x2],0x0
  42be57:	ret    
  42be58:	nop    DWORD PTR [rax+rax*1+0x0]
  42be60:	mov    BYTE PTR [rip+0x46eb9],0x0        # 472d20 <strcmp@plt+0x6f568>
  42be67:	test   BYTE PTR [rdi],0x8
  42be6a:	je     42c0c8 <strcmp@plt+0x28910>
  42be70:	mov    DWORD PTR [rip+0x46ea6],0x2c313d61        # 472d20 <strcmp@plt+0x6f568>
  42be7a:	mov    BYTE PTR [rip+0x46ea3],0x0        # 472d24 <strcmp@plt+0x6f56c>
  42be81:	test   BYTE PTR [rdi],0x4
  42be84:	lea    rsi,[rip+0x46e95]        # 472d20 <strcmp@plt+0x6f568>
  42be8b:	mov    rax,rsi
  42be8e:	mov    rdx,rsi
  42be91:	je     42bee8 <strcmp@plt+0x28730>
  42be93:	mov    r8d,DWORD PTR [rdx]
  42be96:	add    rdx,0x4
  42be9a:	lea    ecx,[r8-0x1010101]
  42bea1:	andn   ecx,r8d,ecx
  42bea6:	and    ecx,0x80808080
  42beac:	je     42be93 <strcmp@plt+0x286db>
  42beae:	mov    r8d,ecx
  42beb1:	shr    r8d,0x10
  42beb5:	test   ecx,0x8080
  42bebb:	cmove  ecx,r8d
  42bebf:	lea    r8,[rdx+0x2]
  42bec3:	mov    r10d,ecx
  42bec6:	cmove  rdx,r8
  42beca:	add    r10b,cl
  42becd:	sbb    rdx,0x3
  42bed1:	sub    rdx,rsi
  42bed4:	add    rax,rdx
  42bed7:	mov    DWORD PTR [rax],0x2c313d6d
  42bedd:	mov    BYTE PTR [rax+0x4],0x0
  42bee1:	jmp    42bf36 <strcmp@plt+0x2877e>
  42bee3:	nop    DWORD PTR [rax+rax*1+0x0]
  42bee8:	mov    r8d,DWORD PTR [rdx]
  42beeb:	add    rdx,0x4
  42beef:	lea    ecx,[r8-0x1010101]
  42bef6:	andn   ecx,r8d,ecx
  42befb:	and    ecx,0x80808080
  42bf01:	je     42bee8 <strcmp@plt+0x28730>
  42bf03:	mov    r8d,ecx
  42bf06:	shr    r8d,0x10
  42bf0a:	test   ecx,0x8080
  42bf10:	cmove  ecx,r8d
  42bf14:	lea    r8,[rdx+0x2]
  42bf18:	mov    r11d,ecx
  42bf1b:	cmove  rdx,r8
  42bf1f:	add    r11b,cl
  42bf22:	sbb    rdx,0x3
  42bf26:	sub    rdx,rsi
  42bf29:	add    rax,rdx
  42bf2c:	mov    DWORD PTR [rax],0x2c303d6d
  42bf32:	mov    BYTE PTR [rax+0x4],0x0
  42bf36:	test   BYTE PTR [rdi],0x2
  42bf39:	lea    rsi,[rip+0x46de0]        # 472d20 <strcmp@plt+0x6f568>
  42bf40:	mov    rax,rsi
  42bf43:	mov    rdx,rsi
  42bf46:	je     42c0e0 <strcmp@plt+0x28928>
  42bf4c:	mov    r8d,DWORD PTR [rdx]
  42bf4f:	add    rdx,0x4
  42bf53:	lea    ecx,[r8-0x1010101]
  42bf5a:	andn   ecx,r8d,ecx
  42bf5f:	and    ecx,0x80808080
  42bf65:	je     42bf4c <strcmp@plt+0x28794>
  42bf67:	mov    r8d,ecx
  42bf6a:	shr    r8d,0x10
  42bf6e:	test   ecx,0x8080
  42bf74:	cmove  ecx,r8d
  42bf78:	lea    r8,[rdx+0x2]
  42bf7c:	mov    r10d,ecx
  42bf7f:	cmove  rdx,r8
  42bf83:	add    r10b,cl
  42bf86:	sbb    rdx,0x3
  42bf8a:	sub    rdx,rsi
  42bf8d:	add    rax,rdx
  42bf90:	mov    DWORD PTR [rax],0x2c313d70
  42bf96:	mov    BYTE PTR [rax+0x4],0x0
  42bf9a:	test   BYTE PTR [rdi],0x1
  42bf9d:	lea    rsi,[rip+0x46d7c]        # 472d20 <strcmp@plt+0x6f568>
  42bfa4:	mov    rax,rsi
  42bfa7:	mov    rdx,rsi
  42bfaa:	je     42c138 <strcmp@plt+0x28980>
  42bfb0:	mov    r8d,DWORD PTR [rdx]
  42bfb3:	add    rdx,0x4
  42bfb7:	lea    ecx,[r8-0x1010101]
  42bfbe:	andn   ecx,r8d,ecx
  42bfc3:	and    ecx,0x80808080
  42bfc9:	je     42bfb0 <strcmp@plt+0x287f8>
  42bfcb:	mov    r8d,ecx
  42bfce:	shr    r8d,0x10
  42bfd2:	test   ecx,0x8080
  42bfd8:	cmove  ecx,r8d
  42bfdc:	lea    r8,[rdx+0x2]
  42bfe0:	mov    r9d,ecx
  42bfe3:	cmove  rdx,r8
  42bfe7:	add    r9b,cl
  42bfea:	sbb    rdx,0x3
  42bfee:	sub    rdx,rsi
  42bff1:	add    rax,rdx
  42bff4:	mov    DWORD PTR [rax],0x2c313d73
  42bffa:	mov    BYTE PTR [rax+0x4],0x0
  42bffe:	cmp    BYTE PTR [rdi+0x1],0x0
  42c002:	lea    rsi,[rip+0x46d17]        # 472d20 <strcmp@plt+0x6f568>
  42c009:	mov    rax,rsi
  42c00c:	mov    rdx,rsi
  42c00f:	js     42c1e0 <strcmp@plt+0x28a28>
  42c015:	mov    r8d,DWORD PTR [rdx]
  42c018:	add    rdx,0x4
  42c01c:	lea    ecx,[r8-0x1010101]
  42c023:	andn   ecx,r8d,ecx
  42c028:	and    ecx,0x80808080
  42c02e:	je     42c015 <strcmp@plt+0x2885d>
  42c030:	mov    r8d,ecx
  42c033:	shr    r8d,0x10
  42c037:	test   ecx,0x8080
  42c03d:	cmove  ecx,r8d
  42c041:	lea    r8,[rdx+0x2]
  42c045:	mov    r9d,ecx
  42c048:	cmove  rdx,r8
  42c04c:	add    r9b,cl
  42c04f:	sbb    rdx,0x3
  42c053:	sub    rdx,rsi
  42c056:	add    rax,rdx
  42c059:	mov    DWORD PTR [rax],0x2c303d50
  42c05f:	mov    BYTE PTR [rax+0x4],0x0
  42c063:	test   BYTE PTR [rdi+0x1],0x40
  42c067:	lea    rsi,[rip+0x46cb2]        # 472d20 <strcmp@plt+0x6f568>
  42c06e:	mov    rax,rsi
  42c071:	mov    rcx,rsi
  42c074:	jne    42c190 <strcmp@plt+0x289d8>
  42c07a:	mov    edi,DWORD PTR [rcx]
  42c07c:	add    rcx,0x4
  42c080:	lea    edx,[rdi-0x1010101]
  42c086:	andn   edx,edi,edx
  42c08b:	and    edx,0x80808080
  42c091:	je     42c07a <strcmp@plt+0x288c2>
  42c093:	mov    edi,edx
  42c095:	shr    edi,0x10
  42c098:	test   edx,0x8080
  42c09e:	cmove  edx,edi
  42c0a1:	lea    rdi,[rcx+0x2]
  42c0a5:	cmove  rcx,rdi
  42c0a9:	mov    edi,edx
  42c0ab:	add    dil,dl
  42c0ae:	sbb    rcx,0x3
  42c0b2:	sub    rcx,rsi
  42c0b5:	mov    DWORD PTR [rax+rcx*1],0x303d53
  42c0bc:	lea    rax,[rip+0x46c5d]        # 472d20 <strcmp@plt+0x6f568>
  42c0c3:	ret    
  42c0c4:	nop    DWORD PTR [rax+0x0]
  42c0c8:	mov    DWORD PTR [rip+0x46c4e],0x2c303d61        # 472d20 <strcmp@plt+0x6f568>
  42c0d2:	mov    BYTE PTR [rip+0x46c4b],0x0        # 472d24 <strcmp@plt+0x6f56c>
  42c0d9:	jmp    42be81 <strcmp@plt+0x286c9>
  42c0de:	xchg   ax,ax
  42c0e0:	mov    r8d,DWORD PTR [rdx]
  42c0e3:	add    rdx,0x4
  42c0e7:	lea    ecx,[r8-0x1010101]
  42c0ee:	andn   ecx,r8d,ecx
  42c0f3:	and    ecx,0x80808080
  42c0f9:	je     42c0e0 <strcmp@plt+0x28928>
  42c0fb:	mov    r8d,ecx
  42c0fe:	shr    r8d,0x10
  42c102:	test   ecx,0x8080
  42c108:	cmove  ecx,r8d
  42c10c:	lea    r8,[rdx+0x2]
  42c110:	mov    r11d,ecx
  42c113:	cmove  rdx,r8
  42c117:	add    r11b,cl
  42c11a:	sbb    rdx,0x3
  42c11e:	sub    rdx,rsi
  42c121:	add    rax,rdx
  42c124:	mov    DWORD PTR [rax],0x2c303d70
  42c12a:	mov    BYTE PTR [rax+0x4],0x0
  42c12e:	jmp    42bf9a <strcmp@plt+0x287e2>
  42c133:	nop    DWORD PTR [rax+rax*1+0x0]
  42c138:	mov    r8d,DWORD PTR [rdx]
  42c13b:	add    rdx,0x4
  42c13f:	lea    ecx,[r8-0x1010101]
  42c146:	andn   ecx,r8d,ecx
  42c14b:	and    ecx,0x80808080
  42c151:	je     42c138 <strcmp@plt+0x28980>
  42c153:	mov    r8d,ecx
  42c156:	shr    r8d,0x10
  42c15a:	test   ecx,0x8080
  42c160:	cmove  ecx,r8d
  42c164:	lea    r8,[rdx+0x2]
  42c168:	mov    r10d,ecx
  42c16b:	cmove  rdx,r8
  42c16f:	add    r10b,cl
  42c172:	sbb    rdx,0x3
  42c176:	sub    rdx,rsi
  42c179:	add    rax,rdx
  42c17c:	mov    DWORD PTR [rax],0x2c303d73
  42c182:	mov    BYTE PTR [rax+0x4],0x0
  42c186:	jmp    42bffe <strcmp@plt+0x28846>
  42c18b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c190:	mov    edi,DWORD PTR [rcx]
  42c192:	add    rcx,0x4
  42c196:	lea    edx,[rdi-0x1010101]
  42c19c:	andn   edx,edi,edx
  42c1a1:	and    edx,0x80808080
  42c1a7:	je     42c190 <strcmp@plt+0x289d8>
  42c1a9:	mov    edi,edx
  42c1ab:	shr    edi,0x10
  42c1ae:	test   edx,0x8080
  42c1b4:	cmove  edx,edi
  42c1b7:	lea    rdi,[rcx+0x2]
  42c1bb:	cmove  rcx,rdi
  42c1bf:	mov    edi,edx
  42c1c1:	add    dil,dl
  42c1c4:	sbb    rcx,0x3
  42c1c8:	sub    rcx,rsi
  42c1cb:	mov    DWORD PTR [rax+rcx*1],0x313d53
  42c1d2:	lea    rax,[rip+0x46b47]        # 472d20 <strcmp@plt+0x6f568>
  42c1d9:	ret    
  42c1da:	nop    WORD PTR [rax+rax*1+0x0]
  42c1e0:	mov    r8d,DWORD PTR [rdx]
  42c1e3:	add    rdx,0x4
  42c1e7:	lea    ecx,[r8-0x1010101]
  42c1ee:	andn   ecx,r8d,ecx
  42c1f3:	and    ecx,0x80808080
  42c1f9:	je     42c1e0 <strcmp@plt+0x28a28>
  42c1fb:	mov    r8d,ecx
  42c1fe:	shr    r8d,0x10
  42c202:	test   ecx,0x8080
  42c208:	cmove  ecx,r8d
  42c20c:	lea    r8,[rdx+0x2]
  42c210:	mov    r11d,ecx
  42c213:	cmove  rdx,r8
  42c217:	add    r11b,cl
  42c21a:	sbb    rdx,0x3
  42c21e:	sub    rdx,rsi
  42c221:	add    rax,rdx
  42c224:	mov    DWORD PTR [rax],0x2c313d50
  42c22a:	mov    BYTE PTR [rax+0x4],0x0
  42c22e:	jmp    42c063 <strcmp@plt+0x288ab>
  42c233:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42c23e:	xchg   ax,ax
  42c240:	test   rdi,rdi
  42c243:	je     42c2c0 <strcmp@plt+0x28b08>
  42c245:	push   r13
  42c247:	push   r12
  42c249:	push   rbp
  42c24a:	push   rbx
  42c24b:	mov    rbx,rdi
  42c24e:	sub    rsp,0x8
  42c252:	mov    BYTE PTR [rip+0x46a47],0x0        # 472ca0 <strcmp@plt+0x6f4e8>
  42c259:	mov    rdi,QWORD PTR [rdi+0x4]
  42c25d:	call   4348f0 <strcmp@plt+0x31138>
  42c262:	movzx  ebp,BYTE PTR [rbx+0x2]
  42c266:	movzx  r12d,BYTE PTR [rbx+0x3]
  42c26b:	mov    rdi,rbx
  42c26e:	mov    r13,rax
  42c271:	call   42be60 <strcmp@plt+0x286a8>
  42c276:	sub    rsp,0x8
  42c27a:	lea    r8,[rip+0x22d67]        # 44efe8 <strcmp@plt+0x4b830>
  42c281:	lea    rdi,[rip+0x46a18]        # 472ca0 <strcmp@plt+0x6f4e8>
  42c288:	and    ebp,0x1f
  42c28b:	push   r13
  42c28d:	push   r12
  42c28f:	push   rbp
  42c290:	mov    r9,rax
  42c293:	mov    ecx,0x78
  42c298:	mov    edx,0x1
  42c29d:	mov    esi,0x78
  42c2a2:	xor    eax,eax
  42c2a4:	call   4032a0 <__snprintf_chk@plt>
  42c2a9:	add    rsp,0x20
  42c2ad:	lea    rax,[rip+0x469ec]        # 472ca0 <strcmp@plt+0x6f4e8>
  42c2b4:	add    rsp,0x8
  42c2b8:	pop    rbx
  42c2b9:	pop    rbp
  42c2ba:	pop    r12
  42c2bc:	pop    r13
  42c2be:	ret    
  42c2bf:	nop
  42c2c0:	xor    eax,eax
  42c2c2:	ret    
  42c2c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42c2ce:	xchg   ax,ax
  42c2d0:	mov    BYTE PTR [rip+0x469b1],0x0        # 472c88 <strcmp@plt+0x6f4d0>
  42c2d7:	test   BYTE PTR [rdi],0x8
  42c2da:	je     42c3b0 <strcmp@plt+0x28bf8>
  42c2e0:	mov    DWORD PTR [rip+0x4699e],0x2c313d50        # 472c88 <strcmp@plt+0x6f4d0>
  42c2ea:	mov    BYTE PTR [rip+0x4699b],0x0        # 472c8c <strcmp@plt+0x6f4d4>
  42c2f1:	test   BYTE PTR [rdi],0x4
  42c2f4:	je     42c3ca <strcmp@plt+0x28c12>
  42c2fa:	lea    rax,[rip+0x46987]        # 472c88 <strcmp@plt+0x6f4d0>
  42c301:	mov    r8,rax
  42c304:	mov    rdx,rax
  42c307:	mov    esi,DWORD PTR [rdx]
  42c309:	add    rdx,0x4
  42c30d:	lea    ecx,[rsi-0x1010101]
  42c313:	andn   ecx,esi,ecx
  42c318:	and    ecx,0x80808080
  42c31e:	je     42c307 <strcmp@plt+0x28b4f>
  42c320:	mov    esi,ecx
  42c322:	shr    esi,0x10
  42c325:	test   ecx,0x8080
  42c32b:	cmove  ecx,esi
  42c32e:	lea    rsi,[rdx+0x2]
  42c332:	cmove  rdx,rsi
  42c336:	mov    esi,ecx
  42c338:	add    sil,cl
  42c33b:	sbb    rdx,0x3
  42c33f:	sub    rdx,rax
  42c342:	add    rdx,r8
  42c345:	mov    DWORD PTR [rdx],0x2c313d45
  42c34b:	mov    BYTE PTR [rdx+0x4],0x0
  42c34f:	test   BYTE PTR [rdi],0x2
  42c352:	je     42c428 <strcmp@plt+0x28c70>
  42c358:	lea    rax,[rip+0x46929]        # 472c88 <strcmp@plt+0x6f4d0>
  42c35f:	mov    r8,rax
  42c362:	mov    rsi,rax
  42c365:	mov    edx,DWORD PTR [rsi]
  42c367:	add    rsi,0x4
  42c36b:	lea    ecx,[rdx-0x1010101]
  42c371:	andn   ecx,edx,ecx
  42c376:	and    ecx,0x80808080
  42c37c:	je     42c365 <strcmp@plt+0x28bad>
  42c37e:	mov    edx,ecx
  42c380:	shr    edx,0x10
  42c383:	test   ecx,0x8080
  42c389:	cmove  ecx,edx
  42c38c:	lea    rdx,[rsi+0x2]
  42c390:	mov    edi,ecx
  42c392:	cmove  rsi,rdx
  42c396:	add    dil,cl
  42c399:	sbb    rsi,0x3
  42c39d:	sub    rsi,rax
  42c3a0:	lea    rax,[rip+0x468e1]        # 472c88 <strcmp@plt+0x6f4d0>
  42c3a7:	mov    DWORD PTR [r8+rsi*1],0x313d53
  42c3af:	ret    
  42c3b0:	mov    DWORD PTR [rip+0x468ce],0x2c303d50        # 472c88 <strcmp@plt+0x6f4d0>
  42c3ba:	mov    BYTE PTR [rip+0x468cb],0x0        # 472c8c <strcmp@plt+0x6f4d4>
  42c3c1:	test   BYTE PTR [rdi],0x4
  42c3c4:	jne    42c2fa <strcmp@plt+0x28b42>
  42c3ca:	lea    rcx,[rip+0x468b7]        # 472c88 <strcmp@plt+0x6f4d0>
  42c3d1:	mov    r8,rcx
  42c3d4:	mov    rax,rcx
  42c3d7:	mov    esi,DWORD PTR [rax]
  42c3d9:	add    rax,0x4
  42c3dd:	lea    edx,[rsi-0x1010101]
  42c3e3:	andn   edx,esi,edx
  42c3e8:	and    edx,0x80808080
  42c3ee:	je     42c3d7 <strcmp@plt+0x28c1f>
  42c3f0:	mov    esi,edx
  42c3f2:	shr    esi,0x10
  42c3f5:	test   edx,0x8080
  42c3fb:	cmove  edx,esi
  42c3fe:	lea    rsi,[rax+0x2]
  42c402:	cmove  rax,rsi
  42c406:	mov    esi,edx
  42c408:	add    sil,dl
  42c40b:	sbb    rax,0x3
  42c40f:	sub    rax,rcx
  42c412:	add    rax,r8
  42c415:	mov    DWORD PTR [rax],0x2c303d45
  42c41b:	mov    BYTE PTR [rax+0x4],0x0
  42c41f:	test   BYTE PTR [rdi],0x2
  42c422:	jne    42c358 <strcmp@plt+0x28ba0>
  42c428:	lea    rcx,[rip+0x46859]        # 472c88 <strcmp@plt+0x6f4d0>
  42c42f:	mov    r8,rcx
  42c432:	mov    rdx,rcx
  42c435:	mov    esi,DWORD PTR [rdx]
  42c437:	add    rdx,0x4
  42c43b:	lea    eax,[rsi-0x1010101]
  42c441:	andn   eax,esi,eax
  42c446:	and    eax,0x80808080
  42c44b:	je     42c435 <strcmp@plt+0x28c7d>
  42c44d:	mov    esi,eax
  42c44f:	shr    esi,0x10
  42c452:	test   eax,0x8080
  42c457:	cmove  eax,esi
  42c45a:	lea    rsi,[rdx+0x2]
  42c45e:	mov    edi,eax
  42c460:	cmove  rdx,rsi
  42c464:	add    dil,al
  42c467:	lea    rax,[rip+0x4681a]        # 472c88 <strcmp@plt+0x6f4d0>
  42c46e:	sbb    rdx,0x3
  42c472:	sub    rdx,rcx
  42c475:	mov    DWORD PTR [r8+rdx*1],0x303d53
  42c47d:	ret    
  42c47e:	xchg   ax,ax
  42c480:	test   rdi,rdi
  42c483:	je     42c4e0 <strcmp@plt+0x28d28>
  42c485:	push   r12
  42c487:	push   rbp
  42c488:	push   rbx
  42c489:	mov    rbx,rdi
  42c48c:	mov    rdi,QWORD PTR [rdi+0x4]
  42c490:	call   4348f0 <strcmp@plt+0x31138>
  42c495:	movzx  ebp,BYTE PTR [rbx+0x3]
  42c499:	mov    r12,rax
  42c49c:	mov    rdi,rbx
  42c49f:	call   42c2d0 <strcmp@plt+0x28b18>
  42c4a4:	push   r12
  42c4a6:	lea    r8,[rip+0x22b8b]        # 44f038 <strcmp@plt+0x4b880>
  42c4ad:	lea    rdi,[rip+0x4676c]        # 472c20 <strcmp@plt+0x6f468>
  42c4b4:	mov    r9,rax
  42c4b7:	mov    edx,0x1
  42c4bc:	mov    ecx,0x64
  42c4c1:	push   rbp
  42c4c2:	mov    esi,0x64
  42c4c7:	xor    eax,eax
  42c4c9:	call   4032a0 <__snprintf_chk@plt>
  42c4ce:	pop    rax
  42c4cf:	lea    rax,[rip+0x4674a]        # 472c20 <strcmp@plt+0x6f468>
  42c4d6:	pop    rdx
  42c4d7:	pop    rbx
  42c4d8:	pop    rbp
  42c4d9:	pop    r12
  42c4db:	ret    
  42c4dc:	nop    DWORD PTR [rax+0x0]
  42c4e0:	xor    eax,eax
  42c4e2:	ret    
  42c4e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42c4ee:	xchg   ax,ax
  42c4f0:	test   rdi,rdi
  42c4f3:	je     42c558 <strcmp@plt+0x28da0>
  42c4f5:	sub    rsp,0x8
  42c4f9:	mov    BYTE PTR [rip+0x466a0],0x0        # 472ba0 <strcmp@plt+0x6f3e8>
  42c500:	test   BYTE PTR [rdi],0x8
  42c503:	mov    rdi,QWORD PTR [rdi+0x4]
  42c507:	je     42c540 <strcmp@plt+0x28d88>
  42c509:	call   4348f0 <strcmp@plt+0x31138>
  42c50e:	lea    rcx,[rip+0x22b8b]        # 44f0a0 <strcmp@plt+0x4b8e8>
  42c515:	mov    r8,rax
  42c518:	lea    rdi,[rip+0x46681]        # 472ba0 <strcmp@plt+0x6f3e8>
  42c51f:	mov    edx,0x64
  42c524:	mov    esi,0x1
  42c529:	xor    eax,eax
  42c52b:	call   403290 <__sprintf_chk@plt>
  42c530:	lea    rax,[rip+0x46669]        # 472ba0 <strcmp@plt+0x6f3e8>
  42c537:	add    rsp,0x8
  42c53b:	ret    
  42c53c:	nop    DWORD PTR [rax+0x0]
  42c540:	call   4348f0 <strcmp@plt+0x31138>
  42c545:	lea    rcx,[rip+0x22b2c]        # 44f078 <strcmp@plt+0x4b8c0>
  42c54c:	mov    r8,rax
  42c54f:	jmp    42c518 <strcmp@plt+0x28d60>
  42c551:	nop    DWORD PTR [rax+0x0]
  42c558:	xor    eax,eax
  42c55a:	ret    
  42c55b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c560:	push   rbp
  42c561:	push   rbx
  42c562:	mov    rbx,rdi
  42c565:	sub    rsp,0x8
  42c569:	mov    BYTE PTR [rip+0x46614],0x0        # 472b84 <strcmp@plt+0x6f3cc>
  42c570:	movzx  eax,BYTE PTR [rdi]
  42c573:	and    eax,0x8
  42c576:	cmp    al,0x1
  42c578:	sbb    eax,eax
  42c57a:	and    eax,0x20
  42c57d:	add    eax,0x50
  42c580:	mov    WORD PTR [rip+0x465fd],ax        # 472b84 <strcmp@plt+0x6f3cc>
  42c587:	test   BYTE PTR [rdi],0x2
  42c58a:	lea    rdi,[rip+0x465f3]        # 472b84 <strcmp@plt+0x6f3cc>
  42c591:	je     42c5f0 <strcmp@plt+0x28e38>
  42c593:	lea    rbp,[rip+0x465ea]        # 472b84 <strcmp@plt+0x6f3cc>
  42c59a:	call   4031d0 <strlen@plt>
  42c59f:	mov    r9d,0x49
  42c5a5:	lea    rdi,[rip+0x465d8]        # 472b84 <strcmp@plt+0x6f3cc>
  42c5ac:	mov    WORD PTR [rbp+rax*1+0x0],r9w
  42c5b2:	test   BYTE PTR [rbx],0x1
  42c5b5:	je     42c614 <strcmp@plt+0x28e5c>
  42c5b7:	call   4031d0 <strlen@plt>
  42c5bc:	mov    edi,0x52
  42c5c1:	mov    WORD PTR [rbp+rax*1+0x0],di
  42c5c6:	test   BYTE PTR [rbx+0x2],0x1
  42c5ca:	lea    rdi,[rip+0x465b3]        # 472b84 <strcmp@plt+0x6f3cc>
  42c5d1:	jne    42c630 <strcmp@plt+0x28e78>
  42c5d3:	call   4031d0 <strlen@plt>
  42c5d8:	mov    edx,0x6d
  42c5dd:	mov    WORD PTR [rbp+rax*1+0x0],dx
  42c5e2:	add    rsp,0x8
  42c5e6:	lea    rax,[rip+0x46597]        # 472b84 <strcmp@plt+0x6f3cc>
  42c5ed:	pop    rbx
  42c5ee:	pop    rbp
  42c5ef:	ret    
  42c5f0:	lea    rbp,[rip+0x4658d]        # 472b84 <strcmp@plt+0x6f3cc>
  42c5f7:	call   4031d0 <strlen@plt>
  42c5fc:	mov    r8d,0x69
  42c602:	lea    rdi,[rip+0x4657b]        # 472b84 <strcmp@plt+0x6f3cc>
  42c609:	mov    WORD PTR [rbp+rax*1+0x0],r8w
  42c60f:	test   BYTE PTR [rbx],0x1
  42c612:	jne    42c5b7 <strcmp@plt+0x28dff>
  42c614:	call   4031d0 <strlen@plt>
  42c619:	mov    esi,0x72
  42c61e:	lea    rdi,[rip+0x4655f]        # 472b84 <strcmp@plt+0x6f3cc>
  42c625:	mov    WORD PTR [rbp+rax*1+0x0],si
  42c62a:	test   BYTE PTR [rbx+0x2],0x1
  42c62e:	je     42c5d3 <strcmp@plt+0x28e1b>
  42c630:	call   4031d0 <strlen@plt>
  42c635:	mov    ecx,0x4d
  42c63a:	mov    WORD PTR [rbp+rax*1+0x0],cx
  42c63f:	add    rsp,0x8
  42c643:	lea    rax,[rip+0x4653a]        # 472b84 <strcmp@plt+0x6f3cc>
  42c64a:	pop    rbx
  42c64b:	pop    rbp
  42c64c:	ret    
  42c64d:	nop    DWORD PTR [rax]
  42c650:	test   rdi,rdi
  42c653:	je     42c6b8 <strcmp@plt+0x28f00>
  42c655:	push   r12
  42c657:	mov    BYTE PTR [rip+0x464c2],0x0        # 472b20 <strcmp@plt+0x6f368>
  42c65e:	push   rbp
  42c65f:	push   rbx
  42c660:	mov    rbx,rdi
  42c663:	mov    rdi,QWORD PTR [rdi+0x4]
  42c667:	call   4348f0 <strcmp@plt+0x31138>
  42c66c:	movzx  ebp,BYTE PTR [rbx+0x3]
  42c670:	mov    r12,rax
  42c673:	mov    rdi,rbx
  42c676:	call   42c560 <strcmp@plt+0x28da8>
  42c67b:	push   r12
  42c67d:	lea    r8,[rip+0x22a3c]        # 44f0c0 <strcmp@plt+0x4b908>
  42c684:	lea    rdi,[rip+0x46495]        # 472b20 <strcmp@plt+0x6f368>
  42c68b:	mov    r9,rax
  42c68e:	mov    edx,0x1
  42c693:	mov    ecx,0x64
  42c698:	push   rbp
  42c699:	mov    esi,0x64
  42c69e:	xor    eax,eax
  42c6a0:	call   4032a0 <__snprintf_chk@plt>
  42c6a5:	pop    rax
  42c6a6:	lea    rax,[rip+0x46473]        # 472b20 <strcmp@plt+0x6f368>
  42c6ad:	pop    rdx
  42c6ae:	pop    rbx
  42c6af:	pop    rbp
  42c6b0:	pop    r12
  42c6b2:	ret    
  42c6b3:	nop    DWORD PTR [rax+rax*1+0x0]
  42c6b8:	xor    eax,eax
  42c6ba:	ret    
  42c6bb:	nop    DWORD PTR [rax+rax*1+0x0]
  42c6c0:	sub    rsp,0x8
  42c6c4:	movzx  eax,BYTE PTR [rdi]
  42c6c7:	and    eax,0x8
  42c6ca:	cmp    al,0x1
  42c6cc:	sbb    eax,eax
  42c6ce:	and    eax,0x20
  42c6d1:	add    eax,0x49
  42c6d4:	mov    WORD PTR [rip+0x46429],ax        # 472b04 <strcmp@plt+0x6f34c>
  42c6db:	test   BYTE PTR [rdi],0x4
  42c6de:	lea    rdi,[rip+0x4641f]        # 472b04 <strcmp@plt+0x6f34c>
  42c6e5:	jne    42c710 <strcmp@plt+0x28f58>
  42c6e7:	call   4031d0 <strlen@plt>
  42c6ec:	lea    rdx,[rip+0x46411]        # 472b04 <strcmp@plt+0x6f34c>
  42c6f3:	mov    ecx,0x72
  42c6f8:	mov    WORD PTR [rdx+rax*1],cx
  42c6fc:	lea    rax,[rip+0x46401]        # 472b04 <strcmp@plt+0x6f34c>
  42c703:	add    rsp,0x8
  42c707:	ret    
  42c708:	nop    DWORD PTR [rax+rax*1+0x0]
  42c710:	call   4031d0 <strlen@plt>
  42c715:	lea    rdx,[rip+0x463e8]        # 472b04 <strcmp@plt+0x6f34c>
  42c71c:	mov    esi,0x52
  42c721:	mov    WORD PTR [rdx+rax*1],si
  42c725:	lea    rax,[rip+0x463d8]        # 472b04 <strcmp@plt+0x6f34c>
  42c72c:	add    rsp,0x8
  42c730:	ret    
  42c731:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42c73c:	nop    DWORD PTR [rax+0x0]
  42c740:	test   rdi,rdi
  42c743:	je     42c7a8 <strcmp@plt+0x28ff0>
  42c745:	push   r12
  42c747:	mov    BYTE PTR [rip+0x46352],0x0        # 472aa0 <strcmp@plt+0x6f2e8>
  42c74e:	push   rbp
  42c74f:	push   rbx
  42c750:	mov    rbx,rdi
  42c753:	mov    rdi,QWORD PTR [rdi+0x4]
  42c757:	call   4348f0 <strcmp@plt+0x31138>
  42c75c:	movzx  ebp,BYTE PTR [rbx+0x3]
  42c760:	mov    r12,rax
  42c763:	mov    rdi,rbx
  42c766:	call   42c6c0 <strcmp@plt+0x28f08>
  42c76b:	push   r12
  42c76d:	lea    r8,[rip+0x2298c]        # 44f100 <strcmp@plt+0x4b948>
  42c774:	lea    rdi,[rip+0x46325]        # 472aa0 <strcmp@plt+0x6f2e8>
  42c77b:	mov    r9,rax
  42c77e:	mov    edx,0x1
  42c783:	mov    ecx,0x64
  42c788:	push   rbp
  42c789:	mov    esi,0x64
  42c78e:	xor    eax,eax
  42c790:	call   4032a0 <__snprintf_chk@plt>
  42c795:	pop    rax
  42c796:	lea    rax,[rip+0x46303]        # 472aa0 <strcmp@plt+0x6f2e8>
  42c79d:	pop    rdx
  42c79e:	pop    rbx
  42c79f:	pop    rbp
  42c7a0:	pop    r12
  42c7a2:	ret    
  42c7a3:	nop    DWORD PTR [rax+rax*1+0x0]
  42c7a8:	xor    eax,eax
  42c7aa:	ret    
  42c7ab:	nop    DWORD PTR [rax+rax*1+0x0]
  42c7b0:	mov    BYTE PTR [rip+0x462c9],0x0        # 472a80 <strcmp@plt+0x6f2c8>
  42c7b7:	test   BYTE PTR [rdi],0x8
  42c7ba:	je     42c8a0 <strcmp@plt+0x290e8>
  42c7c0:	mov    DWORD PTR [rip+0x462b6],0x2c313d53        # 472a80 <strcmp@plt+0x6f2c8>
  42c7ca:	mov    BYTE PTR [rip+0x462b3],0x0        # 472a84 <strcmp@plt+0x6f2cc>
  42c7d1:	lea    rax,[rip+0x462a8]        # 472a80 <strcmp@plt+0x6f2c8>
  42c7d8:	test   BYTE PTR [rdi],0x4
  42c7db:	mov    r9,rax
  42c7de:	je     42c8c4 <strcmp@plt+0x2910c>
  42c7e4:	mov    rsi,rax
  42c7e7:	mov    edx,DWORD PTR [rsi]
  42c7e9:	add    rsi,0x4
  42c7ed:	lea    r8d,[rdx-0x1010101]
  42c7f4:	andn   r8d,edx,r8d
  42c7f9:	and    r8d,0x80808080
  42c800:	je     42c7e7 <strcmp@plt+0x2902f>
  42c802:	mov    edx,r8d
  42c805:	shr    edx,0x10
  42c808:	test   r8d,0x8080
  42c80f:	cmove  r8d,edx
  42c813:	lea    rdx,[rsi+0x2]
  42c817:	mov    ecx,r8d
  42c81a:	cmove  rsi,rdx
  42c81e:	add    cl,r8b
  42c821:	sbb    rsi,0x3
  42c825:	sub    rsi,rax
  42c828:	add    rsi,r9
  42c82b:	mov    DWORD PTR [rsi],0x2c313d44
  42c831:	mov    BYTE PTR [rsi+0x4],0x0
  42c835:	test   BYTE PTR [rdi+0x1],0x40
  42c839:	jne    42c919 <strcmp@plt+0x29161>
  42c83f:	lea    rcx,[rip+0x4623a]        # 472a80 <strcmp@plt+0x6f2c8>
  42c846:	mov    r9,rcx
  42c849:	mov    rax,rcx
  42c84c:	mov    esi,DWORD PTR [rax]
  42c84e:	add    rax,0x4
  42c852:	lea    edx,[rsi-0x1010101]
  42c858:	andn   edx,esi,edx
  42c85d:	and    edx,0x80808080
  42c863:	je     42c84c <strcmp@plt+0x29094>
  42c865:	mov    esi,edx
  42c867:	shr    esi,0x10
  42c86a:	test   edx,0x8080
  42c870:	cmove  edx,esi
  42c873:	lea    rsi,[rax+0x2]
  42c877:	cmove  rax,rsi
  42c87b:	mov    esi,edx
  42c87d:	add    sil,dl
  42c880:	sbb    rax,0x3
  42c884:	sub    rax,rcx
  42c887:	add    rax,r9
  42c88a:	mov    DWORD PTR [rax],0x2c303d52
  42c890:	mov    BYTE PTR [rax+0x4],0x0
  42c894:	jmp    42c96e <strcmp@plt+0x291b6>
  42c899:	nop    DWORD PTR [rax+0x0]
  42c8a0:	mov    DWORD PTR [rip+0x461d6],0x2c303d53        # 472a80 <strcmp@plt+0x6f2c8>
  42c8aa:	mov    BYTE PTR [rip+0x461d3],0x0        # 472a84 <strcmp@plt+0x6f2cc>
  42c8b1:	lea    rax,[rip+0x461c8]        # 472a80 <strcmp@plt+0x6f2c8>
  42c8b8:	test   BYTE PTR [rdi],0x4
  42c8bb:	mov    r9,rax
  42c8be:	jne    42c7e4 <strcmp@plt+0x2902c>
  42c8c4:	mov    rcx,rax
  42c8c7:	mov    edx,DWORD PTR [rcx]
  42c8c9:	add    rcx,0x4
  42c8cd:	lea    esi,[rdx-0x1010101]
  42c8d3:	andn   esi,edx,esi
  42c8d8:	and    esi,0x80808080
  42c8de:	je     42c8c7 <strcmp@plt+0x2910f>
  42c8e0:	mov    edx,esi
  42c8e2:	shr    edx,0x10
  42c8e5:	test   esi,0x8080
  42c8eb:	cmove  esi,edx
  42c8ee:	lea    rdx,[rcx+0x2]
  42c8f2:	cmove  rcx,rdx
  42c8f6:	mov    edx,esi
  42c8f8:	add    dl,sil
  42c8fb:	sbb    rcx,0x3
  42c8ff:	sub    rcx,rax
  42c902:	add    rcx,r9
  42c905:	mov    DWORD PTR [rcx],0x2c303d44
  42c90b:	mov    BYTE PTR [rcx+0x4],0x0
  42c90f:	test   BYTE PTR [rdi+0x1],0x40
  42c913:	je     42c83f <strcmp@plt+0x29087>
  42c919:	lea    rax,[rip+0x46160]        # 472a80 <strcmp@plt+0x6f2c8>
  42c920:	mov    r9,rax
  42c923:	mov    rdx,rax
  42c926:	mov    esi,DWORD PTR [rdx]
  42c928:	add    rdx,0x4
  42c92c:	lea    ecx,[rsi-0x1010101]
  42c932:	andn   ecx,esi,ecx
  42c937:	and    ecx,0x80808080
  42c93d:	je     42c926 <strcmp@plt+0x2916e>
  42c93f:	mov    esi,ecx
  42c941:	shr    esi,0x10
  42c944:	test   ecx,0x8080
  42c94a:	cmove  ecx,esi
  42c94d:	lea    rsi,[rdx+0x2]
  42c951:	cmove  rdx,rsi
  42c955:	mov    esi,ecx
  42c957:	add    sil,cl
  42c95a:	sbb    rdx,0x3
  42c95e:	sub    rdx,rax
  42c961:	add    rdx,r9
  42c964:	mov    DWORD PTR [rdx],0x2c313d52
  42c96a:	mov    BYTE PTR [rdx+0x4],0x0
  42c96e:	test   BYTE PTR [rdi+0x1],0x20
  42c972:	lea    rcx,[rip+0x46107]        # 472a80 <strcmp@plt+0x6f2c8>
  42c979:	mov    r9,rcx
  42c97c:	mov    rdx,rcx
  42c97f:	jne    42c9d0 <strcmp@plt+0x29218>
  42c981:	mov    esi,DWORD PTR [rdx]
  42c983:	add    rdx,0x4
  42c987:	lea    eax,[rsi-0x1010101]
  42c98d:	andn   eax,esi,eax
  42c992:	and    eax,0x80808080
  42c997:	je     42c981 <strcmp@plt+0x291c9>
  42c999:	mov    esi,eax
  42c99b:	shr    esi,0x10
  42c99e:	test   eax,0x8080
  42c9a3:	cmove  eax,esi
  42c9a6:	lea    rsi,[rdx+0x2]
  42c9aa:	mov    edi,eax
  42c9ac:	cmove  rdx,rsi
  42c9b0:	add    dil,al
  42c9b3:	lea    rax,[rip+0x460c6]        # 472a80 <strcmp@plt+0x6f2c8>
  42c9ba:	sbb    rdx,0x3
  42c9be:	sub    rdx,rcx
  42c9c1:	mov    DWORD PTR [r9+rdx*1],0x303d4e
  42c9c9:	ret    
  42c9ca:	nop    WORD PTR [rax+rax*1+0x0]
  42c9d0:	mov    esi,DWORD PTR [rdx]
  42c9d2:	add    rdx,0x4
  42c9d6:	lea    eax,[rsi-0x1010101]
  42c9dc:	andn   eax,esi,eax
  42c9e1:	and    eax,0x80808080
  42c9e6:	je     42c9d0 <strcmp@plt+0x29218>
  42c9e8:	mov    esi,eax
  42c9ea:	shr    esi,0x10
  42c9ed:	test   eax,0x8080
  42c9f2:	cmove  eax,esi
  42c9f5:	lea    rsi,[rdx+0x2]
  42c9f9:	mov    edi,eax
  42c9fb:	cmove  rdx,rsi
  42c9ff:	add    dil,al
  42ca02:	lea    rax,[rip+0x46077]        # 472a80 <strcmp@plt+0x6f2c8>
  42ca09:	sbb    rdx,0x3
  42ca0d:	sub    rdx,rcx
  42ca10:	mov    DWORD PTR [r9+rdx*1],0x313d4e
  42ca18:	ret    
  42ca19:	nop    DWORD PTR [rax+0x0]
  42ca20:	test   rdi,rdi
  42ca23:	je     42ca68 <strcmp@plt+0x292b0>
  42ca25:	sub    rsp,0x8
  42ca29:	call   42c7b0 <strcmp@plt+0x28ff8>
  42ca2e:	lea    r8,[rip+0x2273f]        # 44f174 <strcmp@plt+0x4b9bc>
  42ca35:	lea    rdi,[rip+0x46004]        # 472a40 <strcmp@plt+0x6f288>
  42ca3c:	mov    r9,rax
  42ca3f:	mov    ecx,0x32
  42ca44:	mov    edx,0x1
  42ca49:	mov    esi,0x32
  42ca4e:	xor    eax,eax
  42ca50:	call   4032a0 <__snprintf_chk@plt>
  42ca55:	lea    rax,[rip+0x45fe4]        # 472a40 <strcmp@plt+0x6f288>
  42ca5c:	add    rsp,0x8
  42ca60:	ret    
  42ca61:	nop    DWORD PTR [rax+0x0]
  42ca68:	xor    eax,eax
  42ca6a:	ret    
  42ca6b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ca70:	test   rdi,rdi
  42ca73:	je     42cac0 <strcmp@plt+0x29308>
  42ca75:	sub    rsp,0x10
  42ca79:	mov    BYTE PTR [rip+0x45f40],0x0        # 4729c0 <strcmp@plt+0x6f208>
  42ca80:	push   QWORD PTR [rdi+0x4]
  42ca83:	movzx  r9d,BYTE PTR [rdi+0x3]
  42ca88:	lea    r8,[rip+0x226b1]        # 44f140 <strcmp@plt+0x4b988>
  42ca8f:	lea    rdi,[rip+0x45f2a]        # 4729c0 <strcmp@plt+0x6f208>
  42ca96:	mov    edx,0x1
  42ca9b:	mov    ecx,0x64
  42caa0:	mov    esi,0x64
  42caa5:	xor    eax,eax
  42caa7:	call   4032a0 <__snprintf_chk@plt>
  42caac:	pop    rax
  42caad:	pop    rdx
  42caae:	lea    rax,[rip+0x45f0b]        # 4729c0 <strcmp@plt+0x6f208>
  42cab5:	add    rsp,0x8
  42cab9:	ret    
  42caba:	nop    WORD PTR [rax+rax*1+0x0]
  42cac0:	xor    eax,eax
  42cac2:	ret    
  42cac3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42cace:	xchg   ax,ax
  42cad0:	xor    eax,eax
  42cad2:	cmp    WORD PTR [rdi],0x340
  42cad7:	je     42cae0 <strcmp@plt+0x29328>
  42cad9:	repz ret 
  42cadb:	nop    DWORD PTR [rax+rax*1+0x0]
  42cae0:	cmp    BYTE PTR [rdi+0x4],0x9
  42cae4:	jne    42cad9 <strcmp@plt+0x29321>
  42cae6:	test   BYTE PTR [rdi+0x5],0x3
  42caea:	setne  al
  42caed:	ret    
  42caee:	xchg   ax,ax
  42caf0:	push   rbx
  42caf1:	mov    rbx,rdi
  42caf4:	sub    rsp,0x10
  42caf8:	call   42cad0 <strcmp@plt+0x29318>
  42cafd:	test   al,al
  42caff:	je     42cb30 <strcmp@plt+0x29378>
  42cb01:	movzx  eax,BYTE PTR [rbx+0x5]
  42cb05:	mov    edx,eax
  42cb07:	and    edx,0x3
  42cb0a:	cmp    dl,0x3
  42cb0d:	je     42cb30 <strcmp@plt+0x29378>
  42cb0f:	mov    edx,eax
  42cb11:	mov    ecx,eax
  42cb13:	shr    al,0x2
  42cb16:	shr    dl,1
  42cb18:	and    ecx,0x1
  42cb1b:	and    eax,0x1
  42cb1e:	and    edx,0x1
  42cb21:	mov    BYTE PTR [rsp+0xd],al
  42cb25:	mov    BYTE PTR [rsp+0xe],cl
  42cb29:	mov    BYTE PTR [rsp+0xf],dl
  42cb2d:	jmp    42cb3f <strcmp@plt+0x29387>
  42cb2f:	nop
  42cb30:	mov    BYTE PTR [rsp+0xd],0x0
  42cb35:	mov    BYTE PTR [rsp+0xe],0x0
  42cb3a:	mov    BYTE PTR [rsp+0xf],0x0
  42cb3f:	movzx  edx,BYTE PTR [rsp+0xe]
  42cb44:	movzx  eax,BYTE PTR [rsp+0xd]
  42cb49:	mov    ah,dl
  42cb4b:	movzx  edx,BYTE PTR [rsp+0xf]
  42cb50:	add    rsp,0x10
  42cb54:	pop    rbx
  42cb55:	shl    rdx,0x10
  42cb59:	or     rax,rdx
  42cb5c:	ret    
  42cb5d:	nop    DWORD PTR [rax]
  42cb60:	movzx  edx,BYTE PTR [rsi+0x1]
  42cb64:	movzx  eax,BYTE PTR [rdi+0x5]
  42cb68:	and    edx,0x1
  42cb6b:	and    eax,0xfffffffe
  42cb6e:	or     eax,edx
  42cb70:	mov    BYTE PTR [rdi+0x5],al
  42cb73:	movzx  edx,BYTE PTR [rsi+0x2]
  42cb77:	and    eax,0xfffffffd
  42cb7a:	and    edx,0x1
  42cb7d:	add    edx,edx
  42cb7f:	or     eax,edx
  42cb81:	mov    BYTE PTR [rdi+0x5],al
  42cb84:	movzx  edx,BYTE PTR [rsi]
  42cb87:	and    eax,0xfffffffb
  42cb8a:	and    edx,0x1
  42cb8d:	shl    edx,0x2
  42cb90:	or     eax,edx
  42cb92:	mov    BYTE PTR [rdi+0x5],al
  42cb95:	ret    
  42cb96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cba0:	mov    DWORD PTR [rdi],0xa000000
  42cba6:	mov    BYTE PTR [rdi+0x4],0x1
  42cbaa:	mov    BYTE PTR [rdi+0x5],0x0
  42cbae:	mov    BYTE PTR [rdi+0x9],0x0
  42cbb2:	mov    BYTE PTR [rdi+0x6],0x10
  42cbb6:	mov    BYTE PTR [rdi+0x7],0x0
  42cbba:	mov    BYTE PTR [rdi+0x8],0x0
  42cbbe:	ret    
  42cbbf:	nop
  42cbc0:	mov    DWORD PTR [rdi],0xa000000
  42cbc6:	mov    BYTE PTR [rdi+0x4],0x1
  42cbca:	mov    BYTE PTR [rdi+0x5],0x0
  42cbce:	mov    BYTE PTR [rdi+0x8],0x0
  42cbd2:	mov    BYTE PTR [rdi+0x9],0x0
  42cbd6:	mov    BYTE PTR [rdi+0x6],0x10
  42cbda:	mov    BYTE PTR [rdi+0x7],0x0
  42cbde:	ret    
  42cbdf:	nop
  42cbe0:	cmp    edi,0x1
  42cbe3:	je     42ccc0 <strcmp@plt+0x29508>
  42cbe9:	jle    42cc50 <strcmp@plt+0x29498>
  42cbeb:	cmp    edi,0x2
  42cbee:	je     42cc18 <strcmp@plt+0x29460>
  42cbf0:	cmp    edi,0x3
  42cbf3:	jne    42cc80 <strcmp@plt+0x294c8>
  42cbf9:	mov    DWORD PTR [rip+0x462cd],0x706f7264        # 472ed0 <strcmp@plt+0x6f718>
  42cc03:	mov    BYTE PTR [rip+0x462ca],0x0        # 472ed4 <strcmp@plt+0x6f71c>
  42cc0a:	lea    rax,[rip+0x462bf]        # 472ed0 <strcmp@plt+0x6f718>
  42cc11:	ret    
  42cc12:	nop    WORD PTR [rax+rax*1+0x0]
  42cc18:	movabs rax,0x70616d2d646e6573
  42cc22:	mov    BYTE PTR [rip+0x462b7],0x0        # 472ee0 <strcmp@plt+0x6f728>
  42cc29:	mov    QWORD PTR [rip+0x462a0],rax        # 472ed0 <strcmp@plt+0x6f718>
  42cc30:	movabs rax,0x747365757165722d
  42cc3a:	mov    QWORD PTR [rip+0x46297],rax        # 472ed8 <strcmp@plt+0x6f720>
  42cc41:	lea    rax,[rip+0x46288]        # 472ed0 <strcmp@plt+0x6f718>
  42cc48:	ret    
  42cc49:	nop    DWORD PTR [rax+0x0]
  42cc50:	test   edi,edi
  42cc52:	jne    42cc80 <strcmp@plt+0x294c8>
  42cc54:	movabs rax,0x6f697463612d6f6e
  42cc5e:	mov    ecx,0x6e
  42cc63:	mov    QWORD PTR [rip+0x46266],rax        # 472ed0 <strcmp@plt+0x6f718>
  42cc6a:	mov    WORD PTR [rip+0x46267],cx        # 472ed8 <strcmp@plt+0x6f720>
  42cc71:	lea    rax,[rip+0x46258]        # 472ed0 <strcmp@plt+0x6f718>
  42cc78:	ret    
  42cc79:	nop    DWORD PTR [rax+0x0]
  42cc80:	movabs rax,0x2d6e776f6e6b6e75
  42cc8a:	mov    DWORD PTR [rip+0x46244],0x69746361        # 472ed8 <strcmp@plt+0x6f720>
  42cc94:	mov    BYTE PTR [rip+0x46243],0x0        # 472ede <strcmp@plt+0x6f726>
  42cc9b:	mov    QWORD PTR [rip+0x4622e],rax        # 472ed0 <strcmp@plt+0x6f718>
  42cca2:	mov    eax,0x6e6f
  42cca7:	mov    WORD PTR [rip+0x4622e],ax        # 472edc <strcmp@plt+0x6f724>
  42ccae:	lea    rax,[rip+0x4621b]        # 472ed0 <strcmp@plt+0x6f718>
  42ccb5:	ret    
  42ccb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ccc0:	movabs rax,0x662d65766974616e
  42ccca:	mov    edx,0x6472
  42cccf:	mov    DWORD PTR [rip+0x461ff],0x6177726f        # 472ed8 <strcmp@plt+0x6f720>
  42ccd9:	mov    QWORD PTR [rip+0x461f0],rax        # 472ed0 <strcmp@plt+0x6f718>
  42cce0:	mov    WORD PTR [rip+0x461f5],dx        # 472edc <strcmp@plt+0x6f724>
  42cce7:	lea    rax,[rip+0x461e2]        # 472ed0 <strcmp@plt+0x6f718>
  42ccee:	mov    BYTE PTR [rip+0x461e9],0x0        # 472ede <strcmp@plt+0x6f726>
  42ccf5:	ret    
  42ccf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cd00:	cmp    edi,0x5
  42cd03:	ja     42ce50 <strcmp@plt+0x29698>
  42cd09:	lea    rdx,[rip+0x2247c]        # 44f18c <strcmp@plt+0x4b9d4>
  42cd10:	mov    edi,edi
  42cd12:	movsxd rax,DWORD PTR [rdx+rdi*4]
  42cd16:	add    rax,rdx
  42cd19:	jmp    rax
  42cd1b:	nop    DWORD PTR [rax+rax*1+0x0]
  42cd20:	movabs rax,0x69746167656c6564
  42cd2a:	mov    QWORD PTR [rip+0x4617f],rax        # 472eb0 <strcmp@plt+0x6f6f8>
  42cd31:	movabs rax,0x656c6f682d6e6f
  42cd3b:	mov    QWORD PTR [rip+0x46176],rax        # 472eb8 <strcmp@plt+0x6f700>
  42cd42:	lea    rax,[rip+0x46167]        # 472eb0 <strcmp@plt+0x6f6f8>
  42cd49:	ret    
  42cd4a:	nop    WORD PTR [rax+rax*1+0x0]
  42cd50:	movabs rax,0x687475612d746f6e
  42cd5a:	mov    edx,0x65
  42cd5f:	mov    QWORD PTR [rip+0x4614a],rax        # 472eb0 <strcmp@plt+0x6f6f8>
  42cd66:	movabs rax,0x766974617469726f
  42cd70:	mov    WORD PTR [rip+0x46149],dx        # 472ec0 <strcmp@plt+0x6f708>
  42cd77:	mov    QWORD PTR [rip+0x4613a],rax        # 472eb8 <strcmp@plt+0x6f700>
  42cd7e:	lea    rax,[rip+0x4612b]        # 472eb0 <strcmp@plt+0x6f6f8>
  42cd85:	ret    
  42cd86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cd90:	movabs rax,0x6665722d65646f6e
  42cd9a:	mov    edi,0x6c
  42cd9f:	mov    DWORD PTR [rip+0x4610f],0x61727265        # 472eb8 <strcmp@plt+0x6f700>
  42cda9:	mov    QWORD PTR [rip+0x46100],rax        # 472eb0 <strcmp@plt+0x6f6f8>
  42cdb0:	mov    WORD PTR [rip+0x46105],di        # 472ebc <strcmp@plt+0x6f704>
  42cdb7:	lea    rax,[rip+0x460f2]        # 472eb0 <strcmp@plt+0x6f6f8>
  42cdbe:	ret    
  42cdbf:	nop
  42cdc0:	movabs rax,0x72656665722d736d
  42cdca:	mov    DWORD PTR [rip+0x460e4],0x6c6172        # 472eb8 <strcmp@plt+0x6f700>
  42cdd4:	mov    QWORD PTR [rip+0x460d5],rax        # 472eb0 <strcmp@plt+0x6f6f8>
  42cddb:	lea    rax,[rip+0x460ce]        # 472eb0 <strcmp@plt+0x6f6f8>
  42cde2:	ret    
  42cde3:	nop    DWORD PTR [rax+rax*1+0x0]
  42cde8:	mov    esi,0x6b63
  42cded:	mov    DWORD PTR [rip+0x460b9],0x612d736d        # 472eb0 <strcmp@plt+0x6f6f8>
  42cdf7:	mov    BYTE PTR [rip+0x460b8],0x0        # 472eb6 <strcmp@plt+0x6f6fe>
  42cdfe:	mov    WORD PTR [rip+0x460af],si        # 472eb4 <strcmp@plt+0x6f6fc>
  42ce05:	lea    rax,[rip+0x460a4]        # 472eb0 <strcmp@plt+0x6f6f8>
  42ce0c:	ret    
  42ce0d:	nop    DWORD PTR [rax]
  42ce10:	movabs rax,0x722d746f6e2d736d
  42ce1a:	mov    ecx,0x64
  42ce1f:	mov    QWORD PTR [rip+0x4608a],rax        # 472eb0 <strcmp@plt+0x6f6f8>
  42ce26:	movabs rax,0x6572657473696765
  42ce30:	mov    WORD PTR [rip+0x46089],cx        # 472ec0 <strcmp@plt+0x6f708>
  42ce37:	mov    QWORD PTR [rip+0x4607a],rax        # 472eb8 <strcmp@plt+0x6f700>
  42ce3e:	lea    rax,[rip+0x4606b]        # 472eb0 <strcmp@plt+0x6f6f8>
  42ce45:	ret    
  42ce46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ce50:	movabs rax,0x2d6e776f6e6b6e75
  42ce5a:	mov    DWORD PTR [rip+0x46054],0x69746361        # 472eb8 <strcmp@plt+0x6f700>
  42ce64:	mov    BYTE PTR [rip+0x46053],0x0        # 472ebe <strcmp@plt+0x6f706>
  42ce6b:	mov    QWORD PTR [rip+0x4603e],rax        # 472eb0 <strcmp@plt+0x6f6f8>
  42ce72:	mov    eax,0x6e6f
  42ce77:	mov    WORD PTR [rip+0x4603e],ax        # 472ebc <strcmp@plt+0x6f704>
  42ce7e:	lea    rax,[rip+0x4602b]        # 472eb0 <strcmp@plt+0x6f6f8>
  42ce85:	ret    
  42ce86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ce90:	test   rdi,rdi
  42ce93:	je     42cf18 <strcmp@plt+0x29760>
  42ce99:	push   r12
  42ce9b:	mov    BYTE PTR [rip+0x45f9e],0x0        # 472e40 <strcmp@plt+0x6f688>
  42cea2:	push   rbp
  42cea3:	push   rbx
  42cea4:	mov    rbx,rdi
  42cea7:	movzx  ebp,BYTE PTR [rdi+0x8]
  42ceab:	movzx  eax,BYTE PTR [rdi+0x9]
  42ceaf:	movzx  edi,BYTE PTR [rdi+0x6]
  42ceb3:	and    ebp,0xf
  42ceb6:	mov    r12d,edi
  42ceb9:	shl    ebp,0x8
  42cebc:	shr    dil,0x5
  42cec0:	shr    r12b,0x4
  42cec4:	or     ebp,eax
  42cec6:	movzx  edi,dil
  42ceca:	and    r12d,0x1
  42cece:	call   42cbe0 <strcmp@plt+0x29428>
  42ced3:	push   rbp
  42ced4:	push   r12
  42ced6:	lea    r8,[rip+0x222cb]        # 44f1a8 <strcmp@plt+0x4b9f0>
  42cedd:	push   rax
  42cede:	movzx  eax,BYTE PTR [rbx+0x4]
  42cee2:	lea    rdi,[rip+0x45f57]        # 472e40 <strcmp@plt+0x6f688>
  42cee9:	mov    ecx,0x64
  42ceee:	mov    edx,0x1
  42cef3:	mov    esi,0x64
  42cef8:	push   rax
  42cef9:	movbe  r9d,DWORD PTR [rbx]
  42cefe:	xor    eax,eax
  42cf00:	call   4032a0 <__snprintf_chk@plt>
  42cf05:	add    rsp,0x20
  42cf09:	lea    rax,[rip+0x45f30]        # 472e40 <strcmp@plt+0x6f688>
  42cf10:	pop    rbx
  42cf11:	pop    rbp
  42cf12:	pop    r12
  42cf14:	ret    
  42cf15:	nop    DWORD PTR [rax]
  42cf18:	xor    eax,eax
  42cf1a:	ret    
  42cf1b:	nop    DWORD PTR [rax+rax*1+0x0]
  42cf20:	test   rdi,rdi
  42cf23:	je     42cfc8 <strcmp@plt+0x29810>
  42cf29:	push   r13
  42cf2b:	push   r12
  42cf2d:	push   rbp
  42cf2e:	push   rbx
  42cf2f:	mov    rbx,rdi
  42cf32:	sub    rsp,0x8
  42cf36:	mov    BYTE PTR [rip+0x45e83],0x0        # 472dc0 <strcmp@plt+0x6f608>
  42cf3d:	movzx  ebp,BYTE PTR [rdi+0x8]
  42cf41:	movzx  eax,BYTE PTR [rdi+0x9]
  42cf45:	movzx  edi,BYTE PTR [rdi+0x6]
  42cf49:	and    ebp,0xf
  42cf4c:	mov    r13d,edi
  42cf4f:	mov    r12d,edi
  42cf52:	shr    dil,0x5
  42cf56:	movzx  edi,dil
  42cf5a:	shl    ebp,0x8
  42cf5d:	shr    r13b,0x3
  42cf61:	shr    r12b,0x4
  42cf65:	or     ebp,eax
  42cf67:	and    r13d,0x1
  42cf6b:	call   42cd00 <strcmp@plt+0x29548>
  42cf70:	and    r12d,0x1
  42cf74:	sub    rsp,0x8
  42cf78:	lea    r8,[rip+0x22279]        # 44f1f8 <strcmp@plt+0x4ba40>
  42cf7f:	push   rbp
  42cf80:	push   r13
  42cf82:	lea    rdi,[rip+0x45e37]        # 472dc0 <strcmp@plt+0x6f608>
  42cf89:	push   r12
  42cf8b:	push   rax
  42cf8c:	mov    ecx,0x64
  42cf91:	movzx  eax,BYTE PTR [rbx+0x4]
  42cf95:	mov    edx,0x1
  42cf9a:	mov    esi,0x64
  42cf9f:	push   rax
  42cfa0:	movbe  r9d,DWORD PTR [rbx]
  42cfa5:	xor    eax,eax
  42cfa7:	call   4032a0 <__snprintf_chk@plt>
  42cfac:	add    rsp,0x30
  42cfb0:	lea    rax,[rip+0x45e09]        # 472dc0 <strcmp@plt+0x6f608>
  42cfb7:	add    rsp,0x8
  42cfbb:	pop    rbx
  42cfbc:	pop    rbp
  42cfbd:	pop    r12
  42cfbf:	pop    r13
  42cfc1:	ret    
  42cfc2:	nop    WORD PTR [rax+rax*1+0x0]
  42cfc8:	xor    eax,eax
  42cfca:	ret    
  42cfcb:	nop    DWORD PTR [rax+rax*1+0x0]
  42cfd0:	mov    BYTE PTR [rip+0x45dd1],0x0        # 472da8 <strcmp@plt+0x6f5f0>
  42cfd7:	test   BYTE PTR [rdi+0x5],0x4
  42cfdb:	je     42d0b8 <strcmp@plt+0x29900>
  42cfe1:	mov    BYTE PTR [rip+0x45dc4],0x0        # 472dac <strcmp@plt+0x6f5f4>
  42cfe8:	test   BYTE PTR [rdi+0x5],0x2
  42cfec:	mov    DWORD PTR [rip+0x45db2],0x2c313d4c        # 472da8 <strcmp@plt+0x6f5f0>
  42cff6:	je     42d0d3 <strcmp@plt+0x2991b>
  42cffc:	lea    rax,[rip+0x45da5]        # 472da8 <strcmp@plt+0x6f5f0>
  42d003:	mov    r8,rax
  42d006:	mov    rdx,rax
  42d009:	mov    esi,DWORD PTR [rdx]
  42d00b:	add    rdx,0x4
  42d00f:	lea    ecx,[rsi-0x1010101]
  42d015:	andn   ecx,esi,ecx
  42d01a:	and    ecx,0x80808080
  42d020:	je     42d009 <strcmp@plt+0x29851>
  42d022:	mov    esi,ecx
  42d024:	shr    esi,0x10
  42d027:	test   ecx,0x8080
  42d02d:	cmove  ecx,esi
  42d030:	lea    rsi,[rdx+0x2]
  42d034:	cmove  rdx,rsi
  42d038:	mov    esi,ecx
  42d03a:	add    sil,cl
  42d03d:	sbb    rdx,0x3
  42d041:	sub    rdx,rax
  42d044:	add    rdx,r8
  42d047:	mov    DWORD PTR [rdx],0x2c313d70
  42d04d:	mov    BYTE PTR [rdx+0x4],0x0
  42d051:	test   BYTE PTR [rdi+0x5],0x1
  42d055:	je     42d132 <strcmp@plt+0x2997a>
  42d05b:	lea    rax,[rip+0x45d46]        # 472da8 <strcmp@plt+0x6f5f0>
  42d062:	mov    r8,rax
  42d065:	mov    rsi,rax
  42d068:	mov    edx,DWORD PTR [rsi]
  42d06a:	add    rsi,0x4
  42d06e:	lea    ecx,[rdx-0x1010101]
  42d074:	andn   ecx,edx,ecx
  42d079:	and    ecx,0x80808080
  42d07f:	je     42d068 <strcmp@plt+0x298b0>
  42d081:	mov    edx,ecx
  42d083:	shr    edx,0x10
  42d086:	test   ecx,0x8080
  42d08c:	cmove  ecx,edx
  42d08f:	lea    rdx,[rsi+0x2]
  42d093:	mov    edi,ecx
  42d095:	cmove  rsi,rdx
  42d099:	add    dil,cl
  42d09c:	sbb    rsi,0x3
  42d0a0:	sub    rsi,rax
  42d0a3:	lea    rax,[rip+0x45cfe]        # 472da8 <strcmp@plt+0x6f5f0>
  42d0aa:	mov    DWORD PTR [r8+rsi*1],0x313d52
  42d0b2:	ret    
  42d0b3:	nop    DWORD PTR [rax+rax*1+0x0]
  42d0b8:	mov    BYTE PTR [rip+0x45ced],0x0        # 472dac <strcmp@plt+0x6f5f4>
  42d0bf:	test   BYTE PTR [rdi+0x5],0x2
  42d0c3:	mov    DWORD PTR [rip+0x45cdb],0x2c303d4c        # 472da8 <strcmp@plt+0x6f5f0>
  42d0cd:	jne    42cffc <strcmp@plt+0x29844>
  42d0d3:	lea    rcx,[rip+0x45cce]        # 472da8 <strcmp@plt+0x6f5f0>
  42d0da:	mov    r8,rcx
  42d0dd:	mov    rax,rcx
  42d0e0:	mov    esi,DWORD PTR [rax]
  42d0e2:	add    rax,0x4
  42d0e6:	lea    edx,[rsi-0x1010101]
  42d0ec:	andn   edx,esi,edx
  42d0f1:	and    edx,0x80808080
  42d0f7:	je     42d0e0 <strcmp@plt+0x29928>
  42d0f9:	mov    esi,edx
  42d0fb:	shr    esi,0x10
  42d0fe:	test   edx,0x8080
  42d104:	cmove  edx,esi
  42d107:	lea    rsi,[rax+0x2]
  42d10b:	cmove  rax,rsi
  42d10f:	mov    esi,edx
  42d111:	add    sil,dl
  42d114:	sbb    rax,0x3
  42d118:	sub    rax,rcx
  42d11b:	add    rax,r8
  42d11e:	mov    DWORD PTR [rax],0x2c303d70
  42d124:	mov    BYTE PTR [rax+0x4],0x0
  42d128:	test   BYTE PTR [rdi+0x5],0x1
  42d12c:	jne    42d05b <strcmp@plt+0x298a3>
  42d132:	lea    rcx,[rip+0x45c6f]        # 472da8 <strcmp@plt+0x6f5f0>
  42d139:	mov    r8,rcx
  42d13c:	mov    rdx,rcx
  42d13f:	mov    esi,DWORD PTR [rdx]
  42d141:	add    rdx,0x4
  42d145:	lea    eax,[rsi-0x1010101]
  42d14b:	andn   eax,esi,eax
  42d150:	and    eax,0x80808080
  42d155:	je     42d13f <strcmp@plt+0x29987>
  42d157:	mov    esi,eax
  42d159:	shr    esi,0x10
  42d15c:	test   eax,0x8080
  42d161:	cmove  eax,esi
  42d164:	lea    rsi,[rdx+0x2]
  42d168:	mov    edi,eax
  42d16a:	cmove  rdx,rsi
  42d16e:	add    dil,al
  42d171:	lea    rax,[rip+0x45c30]        # 472da8 <strcmp@plt+0x6f5f0>
  42d178:	sbb    rdx,0x3
  42d17c:	sub    rdx,rcx
  42d17f:	mov    DWORD PTR [r8+rdx*1],0x303d52
  42d187:	ret    
  42d188:	nop    DWORD PTR [rax+rax*1+0x0]
  42d190:	test   rdi,rdi
  42d193:	je     42d200 <strcmp@plt+0x29a48>
  42d195:	push   r13
  42d197:	push   r12
  42d199:	push   rbp
  42d19a:	push   rbx
  42d19b:	sub    rsp,0x8
  42d19f:	mov    BYTE PTR [rip+0x45b9a],0x0        # 472d40 <strcmp@plt+0x6f588>
  42d1a6:	movzx  r13d,BYTE PTR [rdi+0x3]
  42d1ab:	movzx  r12d,BYTE PTR [rdi+0x2]
  42d1b0:	movzx  ebp,BYTE PTR [rdi+0x1]
  42d1b4:	movzx  ebx,BYTE PTR [rdi]
  42d1b7:	call   42cfd0 <strcmp@plt+0x29818>
  42d1bc:	push   r13
  42d1be:	lea    r8,[rip+0x22093]        # 44f258 <strcmp@plt+0x4baa0>
  42d1c5:	lea    rdi,[rip+0x45b74]        # 472d40 <strcmp@plt+0x6f588>
  42d1cc:	push   r12
  42d1ce:	push   rbp
  42d1cf:	mov    r9,rax
  42d1d2:	push   rbx
  42d1d3:	mov    ecx,0x64
  42d1d8:	mov    edx,0x1
  42d1dd:	mov    esi,0x64
  42d1e2:	xor    eax,eax
  42d1e4:	call   4032a0 <__snprintf_chk@plt>
  42d1e9:	add    rsp,0x20
  42d1ed:	lea    rax,[rip+0x45b4c]        # 472d40 <strcmp@plt+0x6f588>
  42d1f4:	add    rsp,0x8
  42d1f8:	pop    rbx
  42d1f9:	pop    rbp
  42d1fa:	pop    r12
  42d1fc:	pop    r13
  42d1fe:	ret    
  42d1ff:	nop
  42d200:	xor    eax,eax
  42d202:	ret    
  42d203:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42d20e:	xchg   ax,ax
  42d210:	cmp    edi,0x1
  42d213:	sbb    eax,eax
  42d215:	not    eax
  42d217:	and    eax,0x14
  42d21a:	ret    
  42d21b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d220:	mov    BYTE PTR [rdi+0x1],0x0
  42d224:	mov    BYTE PTR [rdi],0x0
  42d227:	ret    
  42d228:	nop    DWORD PTR [rax+rax*1+0x0]
  42d230:	cmp    esi,0x1
  42d233:	jle    42d284 <strcmp@plt+0x29acc>
  42d235:	lea    r8d,[rsi-0x2]
  42d239:	shr    r8d,1
  42d23c:	mov    eax,r8d
  42d23f:	lea    rcx,[rdi+rax*2+0x2]
  42d244:	xor    eax,eax
  42d246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d250:	add    rdi,0x2
  42d254:	movzx  edx,WORD PTR [rdi-0x2]
  42d258:	add    eax,edx
  42d25a:	cmp    rdi,rcx
  42d25d:	jne    42d250 <strcmp@plt+0x29a98>
  42d25f:	neg    r8d
  42d262:	lea    esi,[rsi+r8*2-0x2]
  42d267:	test   esi,esi
  42d269:	je     42d270 <strcmp@plt+0x29ab8>
  42d26b:	movzx  edx,BYTE PTR [rdi]
  42d26e:	add    eax,edx
  42d270:	mov    edx,eax
  42d272:	movzx  eax,ax
  42d275:	shr    edx,0x10
  42d278:	add    eax,edx
  42d27a:	mov    edx,eax
  42d27c:	shr    edx,0x10
  42d27f:	add    eax,edx
  42d281:	not    eax
  42d283:	ret    
  42d284:	xor    eax,eax
  42d286:	jmp    42d267 <strcmp@plt+0x29aaf>
  42d288:	nop    DWORD PTR [rax+rax*1+0x0]
  42d290:	cmp    esi,0x1
  42d293:	mov    DWORD PTR [rsp-0x4],edx
  42d297:	mov    DWORD PTR [rsp-0x8],ecx
  42d29b:	jbe    42d321 <strcmp@plt+0x29b69>
  42d2a1:	lea    eax,[rsi-0x2]
  42d2a4:	shr    eax,1
  42d2a6:	lea    r8,[rdi+rax*2+0x2]
  42d2ab:	xor    eax,eax
  42d2ad:	nop    DWORD PTR [rax]
  42d2b0:	add    rdi,0x2
  42d2b4:	movzx  edx,WORD PTR [rdi-0x2]
  42d2b8:	add    eax,edx
  42d2ba:	mov    ecx,eax
  42d2bc:	movzx  edx,ax
  42d2bf:	shr    ecx,0x10
  42d2c2:	add    edx,ecx
  42d2c4:	test   eax,eax
  42d2c6:	cmovs  eax,edx
  42d2c9:	cmp    rdi,r8
  42d2cc:	jne    42d2b0 <strcmp@plt+0x29af8>
  42d2ce:	mov    edx,esi
  42d2d0:	and    edx,0x1
  42d2d3:	test   edx,edx
  42d2d5:	je     42d2dc <strcmp@plt+0x29b24>
  42d2d7:	movzx  edx,BYTE PTR [rdi]
  42d2da:	add    eax,edx
  42d2dc:	movzx  ecx,WORD PTR [rsp-0x4]
  42d2e1:	movzx  edx,WORD PTR [rsp-0x2]
  42d2e6:	rol    si,0x8
  42d2ea:	lea    edx,[rcx+rdx*1+0x1100]
  42d2f1:	movzx  ecx,WORD PTR [rsp-0x8]
  42d2f6:	add    edx,ecx
  42d2f8:	movzx  ecx,WORD PTR [rsp-0x6]
  42d2fd:	add    edx,ecx
  42d2ff:	add    edx,eax
  42d301:	movzx  eax,si
  42d304:	jmp    42d313 <strcmp@plt+0x29b5b>
  42d306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d310:	movzx  eax,ax
  42d313:	add    eax,edx
  42d315:	mov    edx,eax
  42d317:	shr    edx,0x10
  42d31a:	test   edx,edx
  42d31c:	jne    42d310 <strcmp@plt+0x29b58>
  42d31e:	not    eax
  42d320:	ret    
  42d321:	mov    edx,esi
  42d323:	xor    eax,eax
  42d325:	jmp    42d2d3 <strcmp@plt+0x29b1b>
  42d327:	nop    WORD PTR [rax+rax*1+0x0]
  42d330:	sub    rsp,0x38
  42d334:	mov    r9,QWORD PTR [rdi+0x8]
  42d338:	mov    r10,QWORD PTR [rdi+0x10]
  42d33c:	mov    rax,QWORD PTR fs:0x28
  42d345:	mov    QWORD PTR [rsp+0x28],rax
  42d34a:	xor    eax,eax
  42d34c:	lea    r8,[rsp+0x28]
  42d351:	mov    QWORD PTR [rsp+0x20],0x0
  42d35a:	mov    rcx,rsp
  42d35d:	mov    QWORD PTR [rsp],r9
  42d361:	mov    QWORD PTR [rsp+0x8],r10
  42d366:	mov    r9,QWORD PTR [rdi+0x18]
  42d36a:	mov    r10,QWORD PTR [rdi+0x20]
  42d36e:	movbe  DWORD PTR [rsp+0x20],edx
  42d374:	mov    BYTE PTR [rsp+0x27],0x11
  42d379:	mov    QWORD PTR [rsp+0x10],r9
  42d37e:	mov    QWORD PTR [rsp+0x18],r10
  42d383:	nop    DWORD PTR [rax+rax*1+0x0]
  42d388:	movzx  edi,WORD PTR [rcx]
  42d38b:	add    rcx,0x2
  42d38f:	add    eax,edi
  42d391:	cmp    r8,rcx
  42d394:	jne    42d388 <strcmp@plt+0x29bd0>
  42d396:	mov    ecx,edx
  42d398:	and    ecx,0xfffffffe
  42d39b:	test   ecx,ecx
  42d39d:	mov    r8d,ecx
  42d3a0:	je     42d3ba <strcmp@plt+0x29c02>
  42d3a2:	xor    ecx,ecx
  42d3a4:	nop    DWORD PTR [rax+0x0]
  42d3a8:	movzx  edi,WORD PTR [rsi+rcx*1]
  42d3ac:	add    rcx,0x2
  42d3b0:	add    eax,edi
  42d3b2:	cmp    rcx,r8
  42d3b5:	jb     42d3a8 <strcmp@plt+0x29bf0>
  42d3b7:	add    rsi,r8
  42d3ba:	and    edx,0x1
  42d3bd:	je     42d3d8 <strcmp@plt+0x29c20>
  42d3bf:	movzx  edx,BYTE PTR [rsi]
  42d3c2:	add    eax,edx
  42d3c4:	jmp    42d3d8 <strcmp@plt+0x29c20>
  42d3c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d3d0:	movzx  edx,ax
  42d3d3:	shr    eax,0x10
  42d3d6:	add    eax,edx
  42d3d8:	cmp    eax,0xffff
  42d3dd:	ja     42d3d0 <strcmp@plt+0x29c18>
  42d3df:	mov    rsi,QWORD PTR [rsp+0x28]
  42d3e4:	xor    rsi,QWORD PTR fs:0x28
  42d3ed:	not    eax
  42d3ef:	jne    42d3f6 <strcmp@plt+0x29c3e>
  42d3f1:	add    rsp,0x38
  42d3f5:	ret    
  42d3f6:	call   403460 <__stack_chk_fail@plt>
  42d3fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42d400:	cmp    ecx,0x2
  42d403:	mov    rax,rdx
  42d406:	je     42d450 <strcmp@plt+0x29c98>
  42d408:	cmp    ecx,0xa
  42d40b:	je     42d440 <strcmp@plt+0x29c88>
  42d40d:	mov    rax,0x468e3c
  42d414:	cmp    DWORD PTR [rax],0x1
  42d417:	jle    42d460 <strcmp@plt+0x29ca8>
  42d419:	lea    rsi,[rip+0x21e66]        # 44f286 <strcmp@plt+0x4bace>
  42d420:	sub    rsp,0x8
  42d424:	xor    eax,eax
  42d426:	mov    edi,0x6
  42d42b:	call   4306a0 <strcmp@plt+0x2cee8>
  42d430:	mov    eax,0xffffffff
  42d435:	add    rsp,0x8
  42d439:	ret    
  42d43a:	nop    WORD PTR [rax+rax*1+0x0]
  42d440:	mov    edx,esi
  42d442:	mov    rsi,rdi
  42d445:	mov    rdi,rax
  42d448:	jmp    42d330 <strcmp@plt+0x29b78>
  42d44d:	nop    DWORD PTR [rax]
  42d450:	mov    ecx,DWORD PTR [rdx+0x10]
  42d453:	mov    edx,DWORD PTR [rdx+0xc]
  42d456:	jmp    42d290 <strcmp@plt+0x29ad8>
  42d45b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d460:	mov    eax,0xffffffff
  42d465:	ret    
  42d466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d470:	mov    QWORD PTR [rdi+0x20],rsi
  42d474:	mov    QWORD PTR [rdi+0x28],rdx
  42d478:	mov    DWORD PTR [rdi+0x18],0x0
  42d47f:	mov    QWORD PTR [rdi],rdi
  42d482:	mov    QWORD PTR [rdi+0x8],rdi
  42d486:	ret    
  42d487:	nop    WORD PTR [rax+rax*1+0x0]
  42d490:	xor    edx,edx
  42d492:	xor    esi,esi
  42d494:	jmp    42d470 <strcmp@plt+0x29cb8>
  42d499:	nop    DWORD PTR [rax+0x0]
  42d4a0:	mov    rdx,rsi
  42d4a3:	xor    esi,esi
  42d4a5:	jmp    42d470 <strcmp@plt+0x29cb8>
  42d4aa:	nop    WORD PTR [rax+rax*1+0x0]
  42d4b0:	push   r12
  42d4b2:	push   rbp
  42d4b3:	mov    r12,rsi
  42d4b6:	push   rbx
  42d4b7:	mov    rbp,rdi
  42d4ba:	mov    edi,0x30
  42d4bf:	call   434790 <strcmp@plt+0x30fd8>
  42d4c4:	mov    rdx,r12
  42d4c7:	mov    rbx,rax
  42d4ca:	mov    rsi,rbp
  42d4cd:	mov    rdi,rax
  42d4d0:	call   42d470 <strcmp@plt+0x29cb8>
  42d4d5:	mov    rax,rbx
  42d4d8:	pop    rbx
  42d4d9:	pop    rbp
  42d4da:	pop    r12
  42d4dc:	ret    
  42d4dd:	nop    DWORD PTR [rax]
  42d4e0:	xor    esi,esi
  42d4e2:	xor    edi,edi
  42d4e4:	jmp    42d4b0 <strcmp@plt+0x29cf8>
  42d4e9:	nop    DWORD PTR [rax+0x0]
  42d4f0:	mov    rsi,rdi
  42d4f3:	xor    edi,edi
  42d4f5:	jmp    42d4b0 <strcmp@plt+0x29cf8>
  42d4fa:	nop    WORD PTR [rax+rax*1+0x0]
  42d500:	mov    rax,QWORD PTR [rdi+0x20]
  42d504:	ret    
  42d505:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42d510:	mov    rax,QWORD PTR [rdi+0x28]
  42d514:	ret    
  42d515:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42d520:	mov    QWORD PTR [rdi+0x20],rsi
  42d524:	ret    
  42d525:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42d530:	mov    QWORD PTR [rdi+0x28],rsi
  42d534:	ret    
  42d535:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42d540:	push   r14
  42d542:	push   r13
  42d544:	mov    r14,rdi
  42d547:	push   r12
  42d549:	push   rbp
  42d54a:	mov    edi,0x18
  42d54f:	push   rbx
  42d550:	mov    rbp,rsi
  42d553:	call   434790 <strcmp@plt+0x30fd8>
  42d558:	cmp    QWORD PTR [rbp+0x20],0x0
  42d55d:	mov    r13,rax
  42d560:	mov    QWORD PTR [rax+0x10],r14
  42d564:	mov    QWORD PTR [rax],rax
  42d567:	mov    QWORD PTR [rax+0x8],rax
  42d56b:	je     42d620 <strcmp@plt+0x29e68>
  42d571:	mov    eax,DWORD PTR [rbp+0x18]
  42d574:	test   eax,eax
  42d576:	je     42d5e0 <strcmp@plt+0x29e28>
  42d578:	mov    rbx,QWORD PTR [rbp+0x8]
  42d57c:	cmp    rbp,rbx
  42d57f:	je     42d610 <strcmp@plt+0x29e58>
  42d585:	xor    r12d,r12d
  42d588:	jmp    42d5a9 <strcmp@plt+0x29df1>
  42d58a:	nop    WORD PTR [rax+rax*1+0x0]
  42d590:	test   eax,eax
  42d592:	js     42d640 <strcmp@plt+0x29e88>
  42d598:	mov    rbx,QWORD PTR [rbx+0x8]
  42d59c:	add    r12d,0x1
  42d5a0:	cmp    rbp,rbx
  42d5a3:	je     42d658 <strcmp@plt+0x29ea0>
  42d5a9:	mov    rsi,QWORD PTR [rbx+0x10]
  42d5ad:	mov    rdi,r14
  42d5b0:	call   QWORD PTR [rbp+0x20]
  42d5b3:	cmp    eax,0x2
  42d5b6:	jne    42d590 <strcmp@plt+0x29dd8>
  42d5b8:	mov    eax,DWORD PTR [rbp+0x18]
  42d5bb:	cmp    eax,r12d
  42d5be:	jne    42d610 <strcmp@plt+0x29e58>
  42d5c0:	mov    rdx,QWORD PTR [rbp+0x0]
  42d5c4:	mov    QWORD PTR [r13+0x8],rbp
  42d5c8:	mov    QWORD PTR [r13+0x0],rdx
  42d5cc:	mov    rdx,QWORD PTR [rbp+0x0]
  42d5d0:	mov    QWORD PTR [rdx+0x8],r13
  42d5d4:	mov    QWORD PTR [rbp+0x0],r13
  42d5d8:	jmp    42d5f9 <strcmp@plt+0x29e41>
  42d5da:	nop    WORD PTR [rax+rax*1+0x0]
  42d5e0:	mov    rdx,QWORD PTR [rbp+0x8]
  42d5e4:	mov    rcx,QWORD PTR [rdx]
  42d5e7:	mov    QWORD PTR [r13+0x8],rdx
  42d5eb:	mov    QWORD PTR [r13+0x0],rcx
  42d5ef:	mov    rcx,QWORD PTR [rdx]
  42d5f2:	mov    QWORD PTR [rcx+0x8],r13
  42d5f6:	mov    QWORD PTR [rdx],r13
  42d5f9:	add    eax,0x1
  42d5fc:	mov    DWORD PTR [rbp+0x18],eax
  42d5ff:	mov    eax,0x1
  42d604:	pop    rbx
  42d605:	pop    rbp
  42d606:	pop    r12
  42d608:	pop    r13
  42d60a:	pop    r14
  42d60c:	ret    
  42d60d:	nop    DWORD PTR [rax]
  42d610:	mov    rdx,QWORD PTR [rbx]
  42d613:	mov    rdx,QWORD PTR [rdx+0x8]
  42d617:	jmp    42d5e4 <strcmp@plt+0x29e2c>
  42d619:	nop    DWORD PTR [rax+0x0]
  42d620:	mov    rax,QWORD PTR [rbp+0x8]
  42d624:	mov    rdx,QWORD PTR [rax]
  42d627:	mov    QWORD PTR [r13+0x8],rax
  42d62b:	mov    QWORD PTR [r13+0x0],rdx
  42d62f:	mov    rdx,QWORD PTR [rax]
  42d632:	mov    QWORD PTR [rdx+0x8],r13
  42d636:	mov    QWORD PTR [rax],r13
  42d639:	mov    eax,DWORD PTR [rbp+0x18]
  42d63c:	jmp    42d5f9 <strcmp@plt+0x29e41>
  42d63e:	xchg   ax,ax
  42d640:	mov    rdi,r13
  42d643:	call   4037b0 <free@plt>
  42d648:	pop    rbx
  42d649:	xor    eax,eax
  42d64b:	pop    rbp
  42d64c:	pop    r12
  42d64e:	pop    r13
  42d650:	pop    r14
  42d652:	ret    
  42d653:	nop    DWORD PTR [rax+rax*1+0x0]
  42d658:	mov    eax,DWORD PTR [rbp+0x18]
  42d65b:	mov    rbx,rbp
  42d65e:	jmp    42d5bb <strcmp@plt+0x29e03>
  42d663:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42d66e:	xchg   ax,ax
  42d670:	push   r13
  42d672:	push   r12
  42d674:	mov    r13,rsi
  42d677:	push   rbp
  42d678:	push   rbx
  42d679:	mov    rbp,rdi
  42d67c:	sub    rsp,0x8
  42d680:	mov    rsi,QWORD PTR [rdi+0x28]
  42d684:	mov    rdi,QWORD PTR [rdi+0x20]
  42d688:	call   42d4b0 <strcmp@plt+0x29cf8>
  42d68d:	mov    rbx,QWORD PTR [rbp+0x8]
  42d691:	mov    r12,rax
  42d694:	cmp    rbp,rbx
  42d697:	je     42d6bb <strcmp@plt+0x29f03>
  42d699:	nop    DWORD PTR [rax+0x0]
  42d6a0:	mov    rdi,QWORD PTR [rbx+0x10]
  42d6a4:	call   r13
  42d6a7:	mov    rsi,r12
  42d6aa:	mov    rdi,rax
  42d6ad:	call   42d540 <strcmp@plt+0x29d88>
  42d6b2:	mov    rbx,QWORD PTR [rbx+0x8]
  42d6b6:	cmp    rbp,rbx
  42d6b9:	jne    42d6a0 <strcmp@plt+0x29ee8>
  42d6bb:	add    rsp,0x8
  42d6bf:	mov    rax,r12
  42d6c2:	pop    rbx
  42d6c3:	pop    rbp
  42d6c4:	pop    r12
  42d6c6:	pop    r13
  42d6c8:	ret    
  42d6c9:	nop    DWORD PTR [rax+0x0]
  42d6d0:	cmp    QWORD PTR [rsi+0x20],0x0
  42d6d5:	je     42d6e0 <strcmp@plt+0x29f28>
  42d6d7:	xor    eax,eax
  42d6d9:	ret    
  42d6da:	nop    WORD PTR [rax+rax*1+0x0]
  42d6e0:	push   rbp
  42d6e1:	push   rbx
  42d6e2:	mov    rbp,rdi
  42d6e5:	mov    rbx,rsi
  42d6e8:	mov    edi,0x18
  42d6ed:	sub    rsp,0x8
  42d6f1:	call   434790 <strcmp@plt+0x30fd8>
  42d6f6:	mov    QWORD PTR [rax],rax
  42d6f9:	mov    rdx,QWORD PTR [rbx]
  42d6fc:	mov    QWORD PTR [rax+0x10],rbp
  42d700:	mov    QWORD PTR [rax+0x8],rbx
  42d704:	mov    QWORD PTR [rax],rdx
  42d707:	mov    rdx,QWORD PTR [rbx]
  42d70a:	mov    QWORD PTR [rdx+0x8],rax
  42d70e:	mov    QWORD PTR [rbx],rax
  42d711:	mov    eax,0x1
  42d716:	add    DWORD PTR [rbx+0x18],0x1
  42d71a:	add    rsp,0x8
  42d71e:	pop    rbx
  42d71f:	pop    rbp
  42d720:	ret    
  42d721:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42d72c:	nop    DWORD PTR [rax+0x0]
  42d730:	mov    eax,DWORD PTR [rsi+0x18]
  42d733:	test   eax,eax
  42d735:	je     42d790 <strcmp@plt+0x29fd8>
  42d737:	push   r12
  42d739:	push   rbp
  42d73a:	mov    r12,rdi
  42d73d:	push   rbx
  42d73e:	mov    rbx,QWORD PTR [rsi+0x8]
  42d742:	mov    rbp,rsi
  42d745:	cmp    rsi,rbx
  42d748:	jne    42d766 <strcmp@plt+0x29fae>
  42d74a:	jmp    42d780 <strcmp@plt+0x29fc8>
  42d74c:	nop    DWORD PTR [rax+0x0]
  42d750:	mov    rsi,QWORD PTR [rbx+0x10]
  42d754:	mov    rdi,r12
  42d757:	call   rax
  42d759:	test   eax,eax
  42d75b:	je     42d775 <strcmp@plt+0x29fbd>
  42d75d:	mov    rbx,QWORD PTR [rbx+0x8]
  42d761:	cmp    rbp,rbx
  42d764:	je     42d780 <strcmp@plt+0x29fc8>
  42d766:	mov    rax,QWORD PTR [rbp+0x20]
  42d76a:	test   rax,rax
  42d76d:	jne    42d750 <strcmp@plt+0x29f98>
  42d76f:	cmp    QWORD PTR [rbx+0x10],r12
  42d773:	jne    42d75d <strcmp@plt+0x29fa5>
  42d775:	pop    rbx
  42d776:	mov    eax,0x1
  42d77b:	pop    rbp
  42d77c:	pop    r12
  42d77e:	ret    
  42d77f:	nop
  42d780:	pop    rbx
  42d781:	xor    eax,eax
  42d783:	pop    rbp
  42d784:	pop    r12
  42d786:	ret    
  42d787:	nop    WORD PTR [rax+rax*1+0x0]
  42d790:	xor    eax,eax
  42d792:	ret    
  42d793:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42d79e:	xchg   ax,ax
  42d7a0:	mov    eax,DWORD PTR [rsi+0x18]
  42d7a3:	test   eax,eax
  42d7a5:	je     42d810 <strcmp@plt+0x2a058>
  42d7a7:	push   r13
  42d7a9:	push   r12
  42d7ab:	mov    r13,rdi
  42d7ae:	push   rbp
  42d7af:	push   rbx
  42d7b0:	mov    rbp,rdx
  42d7b3:	mov    r12,rsi
  42d7b6:	sub    rsp,0x8
  42d7ba:	mov    rbx,QWORD PTR [rsi+0x8]
  42d7be:	cmp    rsi,rbx
  42d7c1:	jne    42d7de <strcmp@plt+0x2a026>
  42d7c3:	jmp    42d800 <strcmp@plt+0x2a048>
  42d7c5:	nop    DWORD PTR [rax]
  42d7c8:	mov    rsi,QWORD PTR [rbx+0x10]
  42d7cc:	mov    rdi,r13
  42d7cf:	call   rbp
  42d7d1:	test   eax,eax
  42d7d3:	je     42d7e9 <strcmp@plt+0x2a031>
  42d7d5:	mov    rbx,QWORD PTR [rbx+0x8]
  42d7d9:	cmp    r12,rbx
  42d7dc:	je     42d800 <strcmp@plt+0x2a048>
  42d7de:	test   rbp,rbp
  42d7e1:	jne    42d7c8 <strcmp@plt+0x2a010>
  42d7e3:	cmp    QWORD PTR [rbx+0x10],r13
  42d7e7:	jne    42d7d5 <strcmp@plt+0x2a01d>
  42d7e9:	add    rsp,0x8
  42d7ed:	mov    eax,0x1
  42d7f2:	pop    rbx
  42d7f3:	pop    rbp
  42d7f4:	pop    r12
  42d7f6:	pop    r13
  42d7f8:	ret    
  42d7f9:	nop    DWORD PTR [rax+0x0]
  42d800:	add    rsp,0x8
  42d804:	xor    eax,eax
  42d806:	pop    rbx
  42d807:	pop    rbp
  42d808:	pop    r12
  42d80a:	pop    r13
  42d80c:	ret    
  42d80d:	nop    DWORD PTR [rax]
  42d810:	xor    eax,eax
  42d812:	ret    
  42d813:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42d81e:	xchg   ax,ax
  42d820:	push   r15
  42d822:	push   r14
  42d824:	push   r13
  42d826:	push   r12
  42d828:	push   rbp
  42d829:	push   rbx
  42d82a:	sub    rsp,0x8
  42d82e:	mov    rbx,QWORD PTR [rdi+0x8]
  42d832:	cmp    rdi,rbx
  42d835:	je     42d88c <strcmp@plt+0x2a0d4>
  42d837:	lea    r14,[rip+0x1d4a7]        # 44ace5 <strcmp@plt+0x4752d>
  42d83e:	mov    r13,rdi
  42d841:	mov    r15,rsi
  42d844:	mov    r12d,edx
  42d847:	xor    ebp,ebp
  42d849:	nop    DWORD PTR [rax+0x0]
  42d850:	add    ebp,0x1
  42d853:	cmp    r12d,0x4
  42d857:	jle    42d86a <strcmp@plt+0x2a0b2>
  42d859:	mov    rax,0x468e3c
  42d860:	mov    eax,DWORD PTR [rax]
  42d862:	add    eax,0x4
  42d865:	cmp    eax,r12d
  42d868:	jl     42d883 <strcmp@plt+0x2a0cb>
  42d86a:	mov    rdi,QWORD PTR [rbx+0x10]
  42d86e:	call   r15
  42d871:	mov    edx,ebp
  42d873:	mov    rcx,rax
  42d876:	mov    rsi,r14
  42d879:	mov    edi,r12d
  42d87c:	xor    eax,eax
  42d87e:	call   4306a0 <strcmp@plt+0x2cee8>
  42d883:	mov    rbx,QWORD PTR [rbx+0x8]
  42d887:	cmp    r13,rbx
  42d88a:	jne    42d850 <strcmp@plt+0x2a098>
  42d88c:	add    rsp,0x8
  42d890:	pop    rbx
  42d891:	pop    rbp
  42d892:	pop    r12
  42d894:	pop    r13
  42d896:	pop    r14
  42d898:	pop    r15
  42d89a:	ret    
  42d89b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d8a0:	test   rdi,rdi
  42d8a3:	je     42d8ca <strcmp@plt+0x2a112>
  42d8a5:	test   rsi,rsi
  42d8a8:	je     42d8ca <strcmp@plt+0x2a112>
  42d8aa:	mov    rdx,QWORD PTR [rdi+0x8]
  42d8ae:	mov    rax,QWORD PTR [rdi]
  42d8b1:	push   rbx
  42d8b2:	mov    rbx,rsi
  42d8b5:	mov    QWORD PTR [rax+0x8],rdx
  42d8b9:	mov    rdx,QWORD PTR [rdi+0x8]
  42d8bd:	mov    QWORD PTR [rdx],rax
  42d8c0:	call   4037b0 <free@plt>
  42d8c5:	sub    DWORD PTR [rbx+0x18],0x1
  42d8c9:	pop    rbx
  42d8ca:	repz ret 
  42d8cc:	nop    DWORD PTR [rax+0x0]
  42d8d0:	push   rbp
  42d8d1:	push   rbx
  42d8d2:	xor    ebp,ebp
  42d8d4:	sub    rsp,0x8
  42d8d8:	mov    eax,DWORD PTR [rdi+0x18]
  42d8db:	test   eax,eax
  42d8dd:	je     42d905 <strcmp@plt+0x2a14d>
  42d8df:	mov    rbx,rdi
  42d8e2:	mov    rdi,QWORD PTR [rdi+0x8]
  42d8e6:	mov    rdx,QWORD PTR [rdi+0x8]
  42d8ea:	mov    rax,QWORD PTR [rdi]
  42d8ed:	mov    rbp,QWORD PTR [rdi+0x10]
  42d8f1:	mov    QWORD PTR [rax+0x8],rdx
  42d8f5:	mov    rdx,QWORD PTR [rdi+0x8]
  42d8f9:	mov    QWORD PTR [rdx],rax
  42d8fc:	call   4037b0 <free@plt>
  42d901:	sub    DWORD PTR [rbx+0x18],0x1
  42d905:	add    rsp,0x8
  42d909:	mov    rax,rbp
  42d90c:	pop    rbx
  42d90d:	pop    rbp
  42d90e:	ret    
  42d90f:	nop
  42d910:	push   rbp
  42d911:	push   rbx
  42d912:	xor    ebp,ebp
  42d914:	sub    rsp,0x8
  42d918:	mov    eax,DWORD PTR [rdi+0x18]
  42d91b:	test   eax,eax
  42d91d:	je     42d944 <strcmp@plt+0x2a18c>
  42d91f:	mov    rbx,rdi
  42d922:	mov    rdi,QWORD PTR [rdi]
  42d925:	mov    rdx,QWORD PTR [rdi+0x8]
  42d929:	mov    rax,QWORD PTR [rdi]
  42d92c:	mov    rbp,QWORD PTR [rdi+0x10]
  42d930:	mov    QWORD PTR [rax+0x8],rdx
  42d934:	mov    rdx,QWORD PTR [rdi+0x8]
  42d938:	mov    QWORD PTR [rdx],rax
  42d93b:	call   4037b0 <free@plt>
  42d940:	sub    DWORD PTR [rbx+0x18],0x1
  42d944:	add    rsp,0x8
  42d948:	mov    rax,rbp
  42d94b:	pop    rbx
  42d94c:	pop    rbp
  42d94d:	ret    
  42d94e:	xchg   ax,ax
  42d950:	test   rdi,rdi
  42d953:	je     42d999 <strcmp@plt+0x2a1e1>
  42d955:	test   rsi,rsi
  42d958:	je     42d999 <strcmp@plt+0x2a1e1>
  42d95a:	push   rbp
  42d95b:	push   rbx
  42d95c:	mov    rbp,rsi
  42d95f:	mov    rbx,rdi
  42d962:	sub    rsp,0x8
  42d966:	mov    rax,QWORD PTR [rdi]
  42d969:	mov    rdx,QWORD PTR [rdi+0x8]
  42d96d:	mov    QWORD PTR [rax+0x8],rdx
  42d971:	mov    rdx,QWORD PTR [rdi+0x8]
  42d975:	mov    QWORD PTR [rdx],rax
  42d978:	mov    rax,QWORD PTR [rsi+0x28]
  42d97c:	test   rax,rax
  42d97f:	je     42d987 <strcmp@plt+0x2a1cf>
  42d981:	mov    rdi,QWORD PTR [rdi+0x10]
  42d985:	call   rax
  42d987:	mov    rdi,rbx
  42d98a:	call   4037b0 <free@plt>
  42d98f:	sub    DWORD PTR [rbp+0x18],0x1
  42d993:	add    rsp,0x8
  42d997:	pop    rbx
  42d998:	pop    rbp
  42d999:	repz ret 
  42d99b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d9a0:	test   rsi,rsi
  42d9a3:	je     42da24 <strcmp@plt+0x2a26c>
  42d9a5:	mov    eax,DWORD PTR [rsi+0x18]
  42d9a8:	test   eax,eax
  42d9aa:	je     42da24 <strcmp@plt+0x2a26c>
  42d9ac:	push   r12
  42d9ae:	push   rbp
  42d9af:	mov    r12,rdi
  42d9b2:	push   rbx
  42d9b3:	mov    rax,QWORD PTR [rsi+0x20]
  42d9b7:	mov    rbp,rsi
  42d9ba:	mov    rbx,QWORD PTR [rsi+0x8]
  42d9be:	test   rax,rax
  42d9c1:	je     42da00 <strcmp@plt+0x2a248>
  42d9c3:	cmp    rsi,rbx
  42d9c6:	jne    42d9dd <strcmp@plt+0x2a225>
  42d9c8:	jmp    42da20 <strcmp@plt+0x2a268>
  42d9ca:	nop    WORD PTR [rax+rax*1+0x0]
  42d9d0:	mov    rbx,QWORD PTR [rbx+0x8]
  42d9d4:	cmp    rbp,rbx
  42d9d7:	je     42da20 <strcmp@plt+0x2a268>
  42d9d9:	mov    rax,QWORD PTR [rbp+0x20]
  42d9dd:	mov    rsi,QWORD PTR [rbx+0x10]
  42d9e1:	mov    rdi,r12
  42d9e4:	call   rax
  42d9e6:	test   eax,eax
  42d9e8:	jne    42d9d0 <strcmp@plt+0x2a218>
  42d9ea:	mov    rsi,rbp
  42d9ed:	mov    rdi,rbx
  42d9f0:	pop    rbx
  42d9f1:	pop    rbp
  42d9f2:	pop    r12
  42d9f4:	jmp    42d950 <strcmp@plt+0x2a198>
  42d9f9:	nop    DWORD PTR [rax+0x0]
  42da00:	cmp    rsi,rbx
  42da03:	je     42da20 <strcmp@plt+0x2a268>
  42da05:	cmp    QWORD PTR [rbx+0x10],rdi
  42da09:	jne    42da16 <strcmp@plt+0x2a25e>
  42da0b:	jmp    42d9ea <strcmp@plt+0x2a232>
  42da0d:	nop    DWORD PTR [rax]
  42da10:	cmp    r12,QWORD PTR [rbx+0x10]
  42da14:	je     42d9ea <strcmp@plt+0x2a232>
  42da16:	mov    rbx,QWORD PTR [rbx+0x8]
  42da1a:	cmp    rbp,rbx
  42da1d:	jne    42da10 <strcmp@plt+0x2a258>
  42da1f:	nop
  42da20:	pop    rbx
  42da21:	pop    rbp
  42da22:	pop    r12
  42da24:	repz ret 
  42da26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42da30:	test   rsi,rsi
  42da33:	je     42da68 <strcmp@plt+0x2a2b0>
  42da35:	mov    eax,DWORD PTR [rsi+0x18]
  42da38:	test   eax,eax
  42da3a:	je     42da68 <strcmp@plt+0x2a2b0>
  42da3c:	mov    rax,QWORD PTR [rsi+0x8]
  42da40:	cmp    rsi,rax
  42da43:	je     42da68 <strcmp@plt+0x2a2b0>
  42da45:	cmp    rdi,QWORD PTR [rax+0x10]
  42da49:	jne    42da56 <strcmp@plt+0x2a29e>
  42da4b:	jmp    42da70 <strcmp@plt+0x2a2b8>
  42da4d:	nop    DWORD PTR [rax]
  42da50:	cmp    QWORD PTR [rax+0x10],rdi
  42da54:	je     42da70 <strcmp@plt+0x2a2b8>
  42da56:	mov    rax,QWORD PTR [rax+0x8]
  42da5a:	cmp    rsi,rax
  42da5d:	jne    42da50 <strcmp@plt+0x2a298>
  42da5f:	repz ret 
  42da61:	nop    DWORD PTR [rax+0x0]
  42da68:	repz ret 
  42da6a:	nop    WORD PTR [rax+rax*1+0x0]
  42da70:	mov    rdi,rax
  42da73:	jmp    42d950 <strcmp@plt+0x2a198>
  42da78:	nop    DWORD PTR [rax+rax*1+0x0]
  42da80:	test   rdi,rdi
  42da83:	je     42daba <strcmp@plt+0x2a302>
  42da85:	mov    eax,DWORD PTR [rdi+0x18]
  42da88:	test   eax,eax
  42da8a:	je     42daba <strcmp@plt+0x2a302>
  42da8c:	push   rbp
  42da8d:	push   rbx
  42da8e:	mov    rbx,rdi
  42da91:	sub    rsp,0x8
  42da95:	mov    rdi,QWORD PTR [rdi+0x8]
  42da99:	cmp    rbx,rdi
  42da9c:	je     42dab4 <strcmp@plt+0x2a2fc>
  42da9e:	xchg   ax,ax
  42daa0:	mov    rbp,QWORD PTR [rdi+0x8]
  42daa4:	mov    rsi,rbx
  42daa7:	call   42d950 <strcmp@plt+0x2a198>
  42daac:	cmp    rbx,rbp
  42daaf:	mov    rdi,rbp
  42dab2:	jne    42daa0 <strcmp@plt+0x2a2e8>
  42dab4:	add    rsp,0x8
  42dab8:	pop    rbx
  42dab9:	pop    rbp
  42daba:	repz ret 
  42dabc:	nop    DWORD PTR [rax+0x0]
  42dac0:	test   rdi,rdi
  42dac3:	je     42dae0 <strcmp@plt+0x2a328>
  42dac5:	push   rbx
  42dac6:	mov    rbx,rdi
  42dac9:	call   42da80 <strcmp@plt+0x2a2c8>
  42dace:	mov    rdi,rbx
  42dad1:	pop    rbx
  42dad2:	jmp    4037b0 <free@plt>
  42dad7:	nop    WORD PTR [rax+rax*1+0x0]
  42dae0:	repz ret 
  42dae2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42daec:	nop    DWORD PTR [rax+0x0]
  42daf0:	push   r15
  42daf2:	push   r14
  42daf4:	push   r13
  42daf6:	push   r12
  42daf8:	mov    r12d,0x1
  42dafe:	push   rbp
  42daff:	push   rbx
  42db00:	sub    rsp,0x8
  42db04:	test   dil,dil
  42db07:	je     42db9f <strcmp@plt+0x2a3e7>
  42db0d:	cmp    dil,0x1
  42db11:	mov    rbx,r8
  42db14:	mov    r13,rcx
  42db17:	mov    rbp,rdx
  42db1a:	mov    r14,rsi
  42db1d:	jne    42db90 <strcmp@plt+0x2a3d8>
  42db1f:	mov    edi,0x4
  42db24:	call   41c3a0 <strcmp@plt+0x18be8>
  42db29:	mov    rdi,r14
  42db2c:	mov    r15,rax
  42db2f:	mov    QWORD PTR [rbx],0x0
  42db36:	mov    QWORD PTR [rbx+0x8],0x0
  42db3e:	mov    DWORD PTR [rbx+0x10],0x0
  42db45:	call   4031d0 <strlen@plt>
  42db4a:	mov    r9,rbx
  42db4d:	mov    r8,r13
  42db50:	mov    rcx,rbp
  42db53:	mov    rdx,rax
  42db56:	mov    rsi,r14
  42db59:	mov    rdi,r15
  42db5c:	call   41c940 <strcmp@plt+0x19188>
  42db61:	test   eax,eax
  42db63:	je     42db9f <strcmp@plt+0x2a3e7>
  42db65:	mov    rax,0x468e3c
  42db6c:	cmp    DWORD PTR [rax],0x1
  42db6f:	jle    42db9c <strcmp@plt+0x2a3e4>
  42db71:	lea    rsi,[rip+0x21758]        # 44f2d0 <strcmp@plt+0x4bb18>
  42db78:	mov    edi,0x6
  42db7d:	xor    eax,eax
  42db7f:	call   4306a0 <strcmp@plt+0x2cee8>
  42db84:	jmp    42db9c <strcmp@plt+0x2a3e4>
  42db86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42db90:	mov    rax,0x468e3c
  42db97:	cmp    DWORD PTR [rax],0x1
  42db9a:	jg     42dbb8 <strcmp@plt+0x2a400>
  42db9c:	xor    r12d,r12d
  42db9f:	add    rsp,0x8
  42dba3:	mov    eax,r12d
  42dba6:	pop    rbx
  42dba7:	pop    rbp
  42dba8:	pop    r12
  42dbaa:	pop    r13
  42dbac:	pop    r14
  42dbae:	pop    r15
  42dbb0:	ret    
  42dbb1:	nop    DWORD PTR [rax+0x0]
  42dbb8:	lea    rsi,[rip+0x216e1]        # 44f2a0 <strcmp@plt+0x4bae8>
  42dbbf:	movzx  edx,dil
  42dbc3:	xor    eax,eax
  42dbc5:	mov    edi,0x6
  42dbca:	xor    r12d,r12d
  42dbcd:	call   4306a0 <strcmp@plt+0x2cee8>
  42dbd2:	jmp    42db9f <strcmp@plt+0x2a3e7>
  42dbd4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42dbdf:	nop
  42dbe0:	push   r15
  42dbe2:	push   r14
  42dbe4:	push   r13
  42dbe6:	push   r12
  42dbe8:	push   rbp
  42dbe9:	push   rbx
  42dbea:	sub    rsp,0x8
  42dbee:	cmp    dil,0x1
  42dbf2:	je     42dc38 <strcmp@plt+0x2a480>
  42dbf4:	mov    rax,0x468e3c
  42dbfb:	cmp    DWORD PTR [rax],0x1
  42dbfe:	jg     42dc18 <strcmp@plt+0x2a460>
  42dc00:	xor    ebp,ebp
  42dc02:	add    rsp,0x8
  42dc06:	mov    eax,ebp
  42dc08:	pop    rbx
  42dc09:	pop    rbp
  42dc0a:	pop    r12
  42dc0c:	pop    r13
  42dc0e:	pop    r14
  42dc10:	pop    r15
  42dc12:	ret    
  42dc13:	nop    DWORD PTR [rax+rax*1+0x0]
  42dc18:	lea    rsi,[rip+0x21681]        # 44f2a0 <strcmp@plt+0x4bae8>
  42dc1f:	movzx  edx,dil
  42dc23:	xor    eax,eax
  42dc25:	mov    edi,0x6
  42dc2a:	xor    ebp,ebp
  42dc2c:	call   4306a0 <strcmp@plt+0x2cee8>
  42dc31:	jmp    42dc02 <strcmp@plt+0x2a44a>
  42dc33:	nop    DWORD PTR [rax+rax*1+0x0]
  42dc38:	mov    edi,0x14
  42dc3d:	mov    rbp,rsi
  42dc40:	mov    r13,rdx
  42dc43:	mov    r14,rcx
  42dc46:	mov    rbx,r8
  42dc49:	call   4347a0 <strcmp@plt+0x30fe8>
  42dc4e:	test   rax,rax
  42dc51:	mov    r12,rax
  42dc54:	je     42dd1f <strcmp@plt+0x2a567>
  42dc5a:	mov    rax,QWORD PTR [rbx]
  42dc5d:	mov    edi,0x4
  42dc62:	mov    QWORD PTR [r12],rax
  42dc66:	mov    rax,QWORD PTR [rbx+0x8]
  42dc6a:	mov    QWORD PTR [r12+0x8],rax
  42dc6f:	mov    eax,DWORD PTR [rbx+0x10]
  42dc72:	mov    DWORD PTR [r12+0x10],eax
  42dc77:	mov    QWORD PTR [rbx],0x0
  42dc7e:	mov    QWORD PTR [rbx+0x8],0x0
  42dc86:	mov    DWORD PTR [rbx+0x10],0x0
  42dc8d:	call   41c3a0 <strcmp@plt+0x18be8>
  42dc92:	mov    rdi,rbp
  42dc95:	mov    r15,rax
  42dc98:	call   4031d0 <strlen@plt>
  42dc9d:	mov    rsi,rbp
  42dca0:	mov    r9,rbx
  42dca3:	mov    r8,r14
  42dca6:	mov    rcx,r13
  42dca9:	mov    rdx,rax
  42dcac:	mov    rdi,r15
  42dcaf:	call   41c940 <strcmp@plt+0x19188>
  42dcb4:	test   eax,eax
  42dcb6:	mov    ebp,eax
  42dcb8:	je     42dce8 <strcmp@plt+0x2a530>
  42dcba:	mov    rax,0x468e3c
  42dcc1:	cmp    DWORD PTR [rax],0x1
  42dcc4:	jle    42dc00 <strcmp@plt+0x2a448>
  42dcca:	lea    rsi,[rip+0x21657]        # 44f328 <strcmp@plt+0x4bb70>
  42dcd1:	mov    edi,0x6
  42dcd6:	xor    eax,eax
  42dcd8:	call   4306a0 <strcmp@plt+0x2cee8>
  42dcdd:	jmp    42dc00 <strcmp@plt+0x2a448>
  42dce2:	nop    WORD PTR [rax+rax*1+0x0]
  42dce8:	mov    rdi,rbx
  42dceb:	mov    edx,0x14
  42dcf0:	mov    rsi,r12
  42dcf3:	call   403210 <strncmp@plt>
  42dcf8:	test   eax,eax
  42dcfa:	mov    rdi,r12
  42dcfd:	je     42dd10 <strcmp@plt+0x2a558>
  42dcff:	call   4037b0 <free@plt>
  42dd04:	jmp    42dc02 <strcmp@plt+0x2a44a>
  42dd09:	nop    DWORD PTR [rax+0x0]
  42dd10:	call   4037b0 <free@plt>
  42dd15:	mov    ebp,0x1
  42dd1a:	jmp    42dc02 <strcmp@plt+0x2a44a>
  42dd1f:	lea    rsi,[rip+0x215da]        # 44f300 <strcmp@plt+0x4bb48>
  42dd26:	mov    edi,0x2
  42dd2b:	xor    eax,eax
  42dd2d:	mov    ebp,0xfffffffc
  42dd32:	call   4306a0 <strcmp@plt+0x2cee8>
  42dd37:	jmp    42dc02 <strcmp@plt+0x2a44a>
  42dd3c:	nop    DWORD PTR [rax+0x0]
  42dd40:	push   rbx
  42dd41:	mov    edi,0x10
  42dd46:	call   434790 <strcmp@plt+0x30fd8>
  42dd4b:	mov    esi,0x28
  42dd50:	mov    rbx,rax
  42dd53:	mov    edi,0x1
  42dd58:	call   4032e0 <calloc@plt>
  42dd5d:	mov    QWORD PTR [rbx],rax
  42dd60:	mov    rax,rbx
  42dd63:	pop    rbx
  42dd64:	ret    
  42dd65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42dd70:	push   rbp
  42dd71:	push   rbx
  42dd72:	mov    rbp,rdi
  42dd75:	mov    edi,0x10
  42dd7a:	sub    rsp,0x8
  42dd7e:	call   434790 <strcmp@plt+0x30fd8>
  42dd83:	mov    esi,0x28
  42dd88:	mov    rbx,rax
  42dd8b:	mov    edi,0x1
  42dd90:	call   4032e0 <calloc@plt>
  42dd95:	mov    QWORD PTR [rbx+0x8],rbp
  42dd99:	mov    QWORD PTR [rbx],rax
  42dd9c:	add    rsp,0x8
  42dda0:	mov    rax,rbx
  42dda3:	pop    rbx
  42dda4:	pop    rbp
  42dda5:	ret    
  42dda6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ddb0:	push   r15
  42ddb2:	push   r14
  42ddb4:	push   r13
  42ddb6:	push   r12
  42ddb8:	push   rbp
  42ddb9:	push   rbx
  42ddba:	sub    rsp,0x28
  42ddbe:	mov    r12,QWORD PTR [rdi]
  42ddc1:	mov    QWORD PTR [rsp+0x8],rdi
  42ddc6:	mov    QWORD PTR [rsp],rsi
  42ddca:	mov    QWORD PTR [rsp+0x10],rdx
  42ddcf:	mov    eax,DWORD PTR [r12+0xc]
  42ddd4:	cmp    DWORD PTR [r12+0x8],eax
  42ddd9:	mov    eax,DWORD PTR [r12]
  42dddd:	jae    42df6c <strcmp@plt+0x2a7b4>
  42dde3:	mov    rbp,QWORD PTR [r12+0x10]
  42dde8:	lea    ebx,[rax-0x1]
  42ddeb:	mov    DWORD PTR [rsp+0x18],eax
  42ddef:	mov    r14,QWORD PTR [rsp]
  42ddf3:	mov    rdx,r14
  42ddf6:	mov    eax,r14d
  42ddf9:	shr    rdx,0x21
  42ddfd:	shl    eax,0xb
  42de00:	xor    eax,edx
  42de02:	xor    eax,r14d
  42de05:	mov    esi,eax
  42de07:	and    esi,ebx
  42de09:	mov    edx,esi
  42de0b:	lea    r10d,[rsi+rsi*1]
  42de0f:	shr    edx,0x4
  42de12:	mov    r8d,DWORD PTR [rbp+rdx*4+0x0]
  42de17:	and    r10d,0x1e
  42de1b:	lea    r13,[rdx*4+0x0]
  42de23:	shrx   r8d,r8d,r10d
  42de28:	test   r8b,0x2
  42de2c:	jne    42df35 <strcmp@plt+0x2a77d>
  42de32:	mov    edi,eax
  42de34:	shl    eax,0x3
  42de37:	mov    r11d,DWORD PTR [rsp+0x18]
  42de3c:	shr    edi,0x3
  42de3f:	mov    edx,r8d
  42de42:	xor    eax,edi
  42de44:	or     eax,0x1
  42de47:	mov    edi,eax
  42de49:	mov    eax,esi
  42de4b:	and    edi,ebx
  42de4d:	jmp    42de96 <strcmp@plt+0x2a6de>
  42de4f:	nop
  42de50:	mov    r9,QWORD PTR [r12+0x18]
  42de55:	mov    ecx,eax
  42de57:	lea    rdx,[rcx*8+0x0]
  42de5f:	cmp    r14,QWORD PTR [r9+rcx*8]
  42de63:	je     42e404 <strcmp@plt+0x2ac4c>
  42de69:	add    eax,edi
  42de6b:	and    eax,ebx
  42de6d:	cmp    esi,eax
  42de6f:	je     42dea6 <strcmp@plt+0x2a6ee>
  42de71:	mov    edx,eax
  42de73:	lea    ecx,[rax+rax*1]
  42de76:	shr    edx,0x4
  42de79:	lea    r9,[rdx*4+0x0]
  42de81:	mov    edx,DWORD PTR [rbp+rdx*4+0x0]
  42de85:	and    ecx,0x1e
  42de88:	shrx   edx,edx,ecx
  42de8d:	test   dl,0x2
  42de90:	jne    42e46a <strcmp@plt+0x2acb2>
  42de96:	and    edx,0x1
  42de99:	je     42de50 <strcmp@plt+0x2a698>
  42de9b:	mov    r11d,eax
  42de9e:	add    eax,edi
  42dea0:	and    eax,ebx
  42dea2:	cmp    esi,eax
  42dea4:	jne    42de71 <strcmp@plt+0x2a6b9>
  42dea6:	cmp    r11d,DWORD PTR [rsp+0x18]
  42deab:	je     42e4ea <strcmp@plt+0x2ad32>
  42deb1:	mov    eax,r11d
  42deb4:	lea    r10d,[r11+r11*1]
  42deb8:	mov    edx,r11d
  42debb:	shr    eax,0x4
  42debe:	shl    rdx,0x3
  42dec2:	mov    r8d,DWORD PTR [rbp+rax*4+0x0]
  42dec7:	and    r10d,0x1e
  42decb:	lea    r13,[rax*4+0x0]
  42ded3:	shrx   r8d,r8d,r10d
  42ded8:	mov    eax,r8d
  42dedb:	and    eax,0x2
  42dede:	test   eax,eax
  42dee0:	jne    42df3b <strcmp@plt+0x2a783>
  42dee2:	and    r8d,0x1
  42dee6:	je     42df11 <strcmp@plt+0x2a759>
  42dee8:	mov    rax,QWORD PTR [r12+0x18]
  42deed:	mov    rbx,QWORD PTR [rsp]
  42def1:	mov    QWORD PTR [rax+rdx*1],rbx
  42def5:	add    r13,QWORD PTR [r12+0x10]
  42defa:	mov    eax,0x3
  42deff:	shlx   r10,rax,r10
  42df04:	not    r10d
  42df07:	and    DWORD PTR [r13+0x0],r10d
  42df0b:	add    DWORD PTR [r12+0x4],0x1
  42df11:	mov    rax,QWORD PTR [rsp+0x8]
  42df16:	mov    rbx,QWORD PTR [rsp+0x10]
  42df1b:	mov    rax,QWORD PTR [rax]
  42df1e:	mov    rax,QWORD PTR [rax+0x20]
  42df22:	mov    QWORD PTR [rax+rdx*1],rbx
  42df26:	add    rsp,0x28
  42df2a:	pop    rbx
  42df2b:	pop    rbp
  42df2c:	pop    r12
  42df2e:	pop    r13
  42df30:	pop    r14
  42df32:	pop    r15
  42df34:	ret    
  42df35:	mov    edx,esi
  42df37:	shl    rdx,0x3
  42df3b:	mov    rax,QWORD PTR [r12+0x18]
  42df40:	mov    rbx,QWORD PTR [rsp]
  42df44:	mov    QWORD PTR [rax+rdx*1],rbx
  42df48:	add    r13,QWORD PTR [r12+0x10]
  42df4d:	mov    eax,0x3
  42df52:	shlx   r10,rax,r10
  42df57:	not    r10d
  42df5a:	and    DWORD PTR [r13+0x0],r10d
  42df5e:	add    DWORD PTR [r12+0x4],0x1
  42df64:	add    DWORD PTR [r12+0x8],0x1
  42df6a:	jmp    42df11 <strcmp@plt+0x2a759>
  42df6c:	mov    ebx,eax
  42df6e:	mov    DWORD PTR [rsp+0x18],eax
  42df72:	mov    eax,DWORD PTR [r12+0x4]
  42df77:	mov    edi,ebx
  42df79:	lea    edx,[rax+rax*1]
  42df7c:	cmp    ebx,edx
  42df7e:	jbe    42e141 <strcmp@plt+0x2a989>
  42df84:	sub    ebx,0x2
  42df87:	mov    edx,ebx
  42df89:	shr    edx,1
  42df8b:	or     ebx,edx
  42df8d:	mov    edx,ebx
  42df8f:	shr    edx,0x2
  42df92:	or     ebx,edx
  42df94:	mov    edx,ebx
  42df96:	shr    edx,0x4
  42df99:	or     ebx,edx
  42df9b:	mov    edx,ebx
  42df9d:	shr    edx,0x8
  42dfa0:	or     ebx,edx
  42dfa2:	mov    edx,ebx
  42dfa4:	shr    edx,0x10
  42dfa7:	or     ebx,edx
  42dfa9:	lea    edx,[rbx+0x1]
  42dfac:	cmp    edx,0x3
  42dfaf:	jbe    42e2e1 <strcmp@plt+0x2ab29>
  42dfb5:	vxorpd xmm0,xmm0,xmm0
  42dfb9:	mov    ecx,edx
  42dfbb:	vmovsd xmm1,QWORD PTR [rip+0x1df35]        # 44bef8 <strcmp@plt+0x48740>
  42dfc3:	vcvtsi2sd xmm0,xmm0,rcx
  42dfc8:	vfmadd132sd xmm0,xmm1,QWORD PTR [rip+0x1df1f]        # 44bef0 <strcmp@plt+0x48738>
  42dfd1:	vcvttsd2si rcx,xmm0
  42dfd6:	cmp    eax,ecx
  42dfd8:	mov    DWORD PTR [rsp+0x1c],ecx
  42dfdc:	jae    42e3b2 <strcmp@plt+0x2abfa>
  42dfe2:	cmp    edx,0xf
  42dfe5:	jbe    42e4db <strcmp@plt+0x2ad23>
  42dfeb:	mov    r13d,edx
  42dfee:	mov    DWORD PTR [rsp+0x18],edx
  42dff2:	shr    r13d,0x4
  42dff6:	shl    r13,0x2
  42dffa:	mov    rdi,r13
  42dffd:	call   403530 <malloc@plt>
  42e002:	mov    rdx,r13
  42e005:	mov    esi,0xaa
  42e00a:	mov    rdi,rax
  42e00d:	mov    rbp,rax
  42e010:	call   403250 <memset@plt>
  42e015:	mov    eax,DWORD PTR [rsp+0x18]
  42e019:	cmp    DWORD PTR [r12],eax
  42e01d:	jb     42e42e <strcmp@plt+0x2ac76>
  42e023:	xor    r15d,r15d
  42e026:	jmp    42e039 <strcmp@plt+0x2a881>
  42e028:	mov    edi,DWORD PTR [r12]
  42e02c:	add    r15d,0x1
  42e030:	cmp    r15d,edi
  42e033:	je     42e36a <strcmp@plt+0x2abb2>
  42e039:	mov    r11,QWORD PTR [r12+0x10]
  42e03e:	mov    eax,r15d
  42e041:	shr    eax,0x4
  42e044:	lea    rcx,[r11+rax*4]
  42e048:	lea    eax,[r15+r15*1]
  42e04c:	mov    edx,DWORD PTR [rcx]
  42e04e:	and    eax,0x1e
  42e051:	shrx   esi,edx,eax
  42e056:	and    esi,0x3
  42e059:	jne    42e028 <strcmp@plt+0x2a870>
  42e05b:	mov    r9,QWORD PTR [r12+0x18]
  42e060:	mov    rdi,QWORD PTR [r12+0x20]
  42e065:	mov    esi,r15d
  42e068:	mov    r8,QWORD PTR [r9+rsi*8]
  42e06c:	mov    r10,QWORD PTR [rdi+rsi*8]
  42e070:	mov    esi,0x1
  42e075:	shlx   rax,rsi,rax
  42e07a:	or     eax,edx
  42e07c:	mov    DWORD PTR [rcx],eax
  42e07e:	xchg   ax,ax
  42e080:	mov    rax,r8
  42e083:	mov    edx,r8d
  42e086:	shr    rax,0x21
  42e08a:	shl    edx,0xb
  42e08d:	xor    edx,eax
  42e08f:	xor    edx,r8d
  42e092:	mov    edi,edx
  42e094:	mov    eax,edx
  42e096:	shl    edx,0x3
  42e099:	shr    edi,0x3
  42e09c:	and    eax,ebx
  42e09e:	xor    edx,edi
  42e0a0:	mov    edi,edx
  42e0a2:	or     edi,0x1
  42e0a5:	and    edi,ebx
  42e0a7:	jmp    42e0b4 <strcmp@plt+0x2a8fc>
  42e0a9:	nop    DWORD PTR [rax+0x0]
  42e0b0:	add    eax,edi
  42e0b2:	and    eax,ebx
  42e0b4:	mov    edx,eax
  42e0b6:	lea    ecx,[rax+rax*1]
  42e0b9:	shr    edx,0x4
  42e0bc:	shl    rdx,0x2
  42e0c0:	and    ecx,0x1e
  42e0c3:	lea    rsi,[rbp+rdx*1+0x0]
  42e0c8:	mov    r13d,DWORD PTR [rsi]
  42e0cb:	shrx   r14d,r13d,ecx
  42e0d0:	and    r14d,0x2
  42e0d4:	je     42e0b0 <strcmp@plt+0x2a8f8>
  42e0d6:	mov    edi,0x2
  42e0db:	shlx   rdi,rdi,rcx
  42e0e0:	andn   r13d,edi,r13d
  42e0e5:	mov    DWORD PTR [rsi],r13d
  42e0e8:	mov    edi,DWORD PTR [r12]
  42e0ec:	cmp    edi,eax
  42e0ee:	jbe    42e350 <strcmp@plt+0x2ab98>
  42e0f4:	mov    esi,DWORD PTR [r11+rdx*1]
  42e0f8:	shrx   esi,esi,ecx
  42e0fd:	and    esi,0x3
  42e100:	jne    42e350 <strcmp@plt+0x2ab98>
  42e106:	shl    rax,0x3
  42e10a:	add    r9,rax
  42e10d:	mov    rsi,QWORD PTR [r9]
  42e110:	mov    QWORD PTR [r9],r8
  42e113:	add    rax,QWORD PTR [r12+0x20]
  42e118:	mov    r8,rsi
  42e11b:	mov    rdi,QWORD PTR [rax]
  42e11e:	mov    QWORD PTR [rax],r10
  42e121:	mov    eax,0x1
  42e126:	mov    r11,QWORD PTR [r12+0x10]
  42e12b:	shlx   rcx,rax,rcx
  42e130:	mov    r9,QWORD PTR [r12+0x18]
  42e135:	mov    r10,rdi
  42e138:	or     DWORD PTR [r11+rdx*1],ecx
  42e13c:	jmp    42e080 <strcmp@plt+0x2a8c8>
  42e141:	mov    edi,DWORD PTR [rsp+0x18]
  42e145:	mov    ebx,edi
  42e147:	shr    ebx,1
  42e149:	or     ebx,edi
  42e14b:	mov    edx,ebx
  42e14d:	shr    edx,0x2
  42e150:	or     ebx,edx
  42e152:	mov    edx,ebx
  42e154:	shr    edx,0x4
  42e157:	or     ebx,edx
  42e159:	mov    edx,ebx
  42e15b:	shr    edx,0x8
  42e15e:	or     ebx,edx
  42e160:	mov    edx,ebx
  42e162:	shr    edx,0x10
  42e165:	or     ebx,edx
  42e167:	lea    edx,[rbx+0x1]
  42e16a:	cmp    edx,0x3
  42e16d:	ja     42e30a <strcmp@plt+0x2ab52>
  42e173:	cmp    eax,0x2
  42e176:	ja     42e3c1 <strcmp@plt+0x2ac09>
  42e17c:	mov    ebx,0x3
  42e181:	mov    DWORD PTR [rsp+0x1c],0x3
  42e189:	mov    DWORD PTR [rsp+0x18],0x4
  42e191:	mov    r13d,0x4
  42e197:	mov    rdi,r13
  42e19a:	call   403530 <malloc@plt>
  42e19f:	mov    rdx,r13
  42e1a2:	mov    esi,0xaa
  42e1a7:	mov    rdi,rax
  42e1aa:	mov    rbp,rax
  42e1ad:	call   403250 <memset@plt>
  42e1b2:	mov    eax,DWORD PTR [rsp+0x18]
  42e1b6:	cmp    DWORD PTR [r12],eax
  42e1ba:	jb     42e490 <strcmp@plt+0x2acd8>
  42e1c0:	xor    r15d,r15d
  42e1c3:	jmp    42e1d6 <strcmp@plt+0x2aa1e>
  42e1c5:	mov    edi,DWORD PTR [r12]
  42e1c9:	add    r15d,0x1
  42e1cd:	cmp    r15d,edi
  42e1d0:	je     42e36a <strcmp@plt+0x2abb2>
  42e1d6:	mov    r11,QWORD PTR [r12+0x10]
  42e1db:	mov    eax,r15d
  42e1de:	shr    eax,0x4
  42e1e1:	lea    rcx,[r11+rax*4]
  42e1e5:	lea    eax,[r15+r15*1]
  42e1e9:	mov    edx,DWORD PTR [rcx]
  42e1eb:	and    eax,0x1e
  42e1ee:	shrx   esi,edx,eax
  42e1f3:	and    esi,0x3
  42e1f6:	jne    42e1c5 <strcmp@plt+0x2aa0d>
  42e1f8:	mov    r9,QWORD PTR [r12+0x18]
  42e1fd:	mov    rdi,QWORD PTR [r12+0x20]
  42e202:	mov    esi,r15d
  42e205:	mov    r8,QWORD PTR [r9+rsi*8]
  42e209:	mov    r10,QWORD PTR [rdi+rsi*8]
  42e20d:	mov    esi,0x1
  42e212:	shlx   rax,rsi,rax
  42e217:	or     eax,edx
  42e219:	mov    DWORD PTR [rcx],eax
  42e21b:	nop    DWORD PTR [rax+rax*1+0x0]
  42e220:	mov    rax,r8
  42e223:	mov    edx,r8d
  42e226:	shr    rax,0x21
  42e22a:	shl    edx,0xb
  42e22d:	xor    edx,eax
  42e22f:	xor    edx,r8d
  42e232:	mov    edi,edx
  42e234:	mov    eax,edx
  42e236:	shl    edx,0x3
  42e239:	shr    edi,0x3
  42e23c:	and    eax,ebx
  42e23e:	xor    edx,edi
  42e240:	mov    edi,edx
  42e242:	or     edi,0x1
  42e245:	and    edi,ebx
  42e247:	jmp    42e254 <strcmp@plt+0x2aa9c>
  42e249:	nop    DWORD PTR [rax+0x0]
  42e250:	add    eax,edi
  42e252:	and    eax,ebx
  42e254:	mov    edx,eax
  42e256:	lea    ecx,[rax+rax*1]
  42e259:	shr    edx,0x4
  42e25c:	shl    rdx,0x2
  42e260:	and    ecx,0x1e
  42e263:	lea    rsi,[rbp+rdx*1+0x0]
  42e268:	mov    r13d,DWORD PTR [rsi]
  42e26b:	shrx   r14d,r13d,ecx
  42e270:	and    r14d,0x2
  42e274:	je     42e250 <strcmp@plt+0x2aa98>
  42e276:	mov    edi,0x2
  42e27b:	shlx   rdi,rdi,rcx
  42e280:	andn   r13d,edi,r13d
  42e285:	mov    DWORD PTR [rsi],r13d
  42e288:	mov    edi,DWORD PTR [r12]
  42e28c:	cmp    eax,edi
  42e28e:	jae    42e3a0 <strcmp@plt+0x2abe8>
  42e294:	mov    esi,DWORD PTR [r11+rdx*1]
  42e298:	shrx   esi,esi,ecx
  42e29d:	and    esi,0x3
  42e2a0:	jne    42e3a0 <strcmp@plt+0x2abe8>
  42e2a6:	shl    rax,0x3
  42e2aa:	add    r9,rax
  42e2ad:	mov    rsi,QWORD PTR [r9]
  42e2b0:	mov    QWORD PTR [r9],r8
  42e2b3:	add    rax,QWORD PTR [r12+0x20]
  42e2b8:	mov    r8,rsi
  42e2bb:	mov    rdi,QWORD PTR [rax]
  42e2be:	mov    QWORD PTR [rax],r10
  42e2c1:	mov    eax,0x1
  42e2c6:	mov    r11,QWORD PTR [r12+0x10]
  42e2cb:	shlx   rcx,rax,rcx
  42e2d0:	mov    r9,QWORD PTR [r12+0x18]
  42e2d5:	mov    r10,rdi
  42e2d8:	or     DWORD PTR [r11+rdx*1],ecx
  42e2dc:	jmp    42e220 <strcmp@plt+0x2aa68>
  42e2e1:	cmp    eax,0x2
  42e2e4:	ja     42e3c1 <strcmp@plt+0x2ac09>
  42e2ea:	mov    ebx,0x3
  42e2ef:	mov    DWORD PTR [rsp+0x1c],0x3
  42e2f7:	mov    DWORD PTR [rsp+0x18],0x4
  42e2ff:	mov    r13d,0x4
  42e305:	jmp    42dffa <strcmp@plt+0x2a842>
  42e30a:	vxorpd xmm0,xmm0,xmm0
  42e30e:	mov    ecx,edx
  42e310:	vmovsd xmm2,QWORD PTR [rip+0x1dbe0]        # 44bef8 <strcmp@plt+0x48740>
  42e318:	vcvtsi2sd xmm0,xmm0,rcx
  42e31d:	vfmadd132sd xmm0,xmm2,QWORD PTR [rip+0x1dbca]        # 44bef0 <strcmp@plt+0x48738>
  42e326:	vcvttsd2si rcx,xmm0
  42e32b:	cmp    eax,ecx
  42e32d:	mov    DWORD PTR [rsp+0x1c],ecx
  42e331:	jae    42e3b2 <strcmp@plt+0x2abfa>
  42e333:	cmp    edx,0xf
  42e336:	jbe    42e4cc <strcmp@plt+0x2ad14>
  42e33c:	mov    r13d,edx
  42e33f:	mov    DWORD PTR [rsp+0x18],edx
  42e343:	shr    r13d,0x4
  42e347:	shl    r13,0x2
  42e34b:	jmp    42e197 <strcmp@plt+0x2a9df>
  42e350:	mov    QWORD PTR [r9+rax*8],r8
  42e354:	mov    rdx,QWORD PTR [r12+0x20]
  42e359:	add    r15d,0x1
  42e35d:	cmp    r15d,edi
  42e360:	mov    QWORD PTR [rdx+rax*8],r10
  42e364:	jne    42e039 <strcmp@plt+0x2a881>
  42e36a:	cmp    r15d,DWORD PTR [rsp+0x18]
  42e36f:	ja     42e3d2 <strcmp@plt+0x2ac1a>
  42e371:	mov    rdi,QWORD PTR [r12+0x10]
  42e376:	call   4037b0 <free@plt>
  42e37b:	mov    eax,DWORD PTR [rsp+0x18]
  42e37f:	mov    QWORD PTR [r12+0x10],rbp
  42e384:	mov    DWORD PTR [r12],eax
  42e388:	mov    eax,DWORD PTR [r12+0x4]
  42e38d:	mov    DWORD PTR [r12+0x8],eax
  42e392:	mov    eax,DWORD PTR [rsp+0x1c]
  42e396:	mov    DWORD PTR [r12+0xc],eax
  42e39b:	jmp    42ddef <strcmp@plt+0x2a637>
  42e3a0:	mov    QWORD PTR [r9+rax*8],r8
  42e3a4:	mov    rdx,QWORD PTR [r12+0x20]
  42e3a9:	mov    QWORD PTR [rdx+rax*8],r10
  42e3ad:	jmp    42e1c9 <strcmp@plt+0x2aa11>
  42e3b2:	mov    ebx,edi
  42e3b4:	mov    rbp,QWORD PTR [r12+0x10]
  42e3b9:	sub    ebx,0x1
  42e3bc:	jmp    42ddef <strcmp@plt+0x2a637>
  42e3c1:	mov    eax,DWORD PTR [rsp+0x18]
  42e3c5:	mov    rbp,QWORD PTR [r12+0x10]
  42e3ca:	lea    ebx,[rax-0x1]
  42e3cd:	jmp    42ddef <strcmp@plt+0x2a637>
  42e3d2:	mov    r13d,DWORD PTR [rsp+0x18]
  42e3d7:	mov    rdi,QWORD PTR [r12+0x18]
  42e3dc:	shl    r13,0x3
  42e3e0:	mov    rsi,r13
  42e3e3:	call   403670 <realloc@plt>
  42e3e8:	mov    rdi,QWORD PTR [r12+0x20]
  42e3ed:	mov    QWORD PTR [r12+0x18],rax
  42e3f2:	mov    rsi,r13
  42e3f5:	call   403670 <realloc@plt>
  42e3fa:	mov    QWORD PTR [r12+0x20],rax
  42e3ff:	jmp    42e371 <strcmp@plt+0x2abb9>
  42e404:	mov    ecx,eax
  42e406:	add    eax,eax
  42e408:	shr    ecx,0x4
  42e40b:	and    eax,0x1e
  42e40e:	mov    r8d,DWORD PTR [rbp+rcx*4+0x0]
  42e413:	mov    r10d,eax
  42e416:	lea    r13,[rcx*4+0x0]
  42e41e:	shrx   r8d,r8d,eax
  42e423:	mov    eax,r8d
  42e426:	and    eax,0x2
  42e429:	jmp    42dede <strcmp@plt+0x2a726>
  42e42e:	mov    r13d,eax
  42e431:	mov    rdi,QWORD PTR [r12+0x18]
  42e436:	shl    r13,0x3
  42e43a:	mov    rsi,r13
  42e43d:	call   403670 <realloc@plt>
  42e442:	mov    rdi,QWORD PTR [r12+0x20]
  42e447:	mov    QWORD PTR [r12+0x18],rax
  42e44c:	mov    rsi,r13
  42e44f:	call   403670 <realloc@plt>
  42e454:	mov    edx,DWORD PTR [r12]
  42e458:	mov    QWORD PTR [r12+0x20],rax
  42e45d:	test   edx,edx
  42e45f:	jne    42e023 <strcmp@plt+0x2a86b>
  42e465:	jmp    42e371 <strcmp@plt+0x2abb9>
  42e46a:	cmp    r11d,DWORD PTR [rsp+0x18]
  42e46f:	jne    42deb1 <strcmp@plt+0x2a6f9>
  42e475:	lea    rdx,[rax*8+0x0]
  42e47d:	mov    r10d,ecx
  42e480:	mov    r13,r9
  42e483:	jmp    42df3b <strcmp@plt+0x2a783>
  42e488:	nop    DWORD PTR [rax+rax*1+0x0]
  42e490:	mov    r13d,eax
  42e493:	mov    rdi,QWORD PTR [r12+0x18]
  42e498:	shl    r13,0x3
  42e49c:	mov    rsi,r13
  42e49f:	call   403670 <realloc@plt>
  42e4a4:	mov    rdi,QWORD PTR [r12+0x20]
  42e4a9:	mov    QWORD PTR [r12+0x18],rax
  42e4ae:	mov    rsi,r13
  42e4b1:	call   403670 <realloc@plt>
  42e4b6:	mov    QWORD PTR [r12+0x20],rax
  42e4bb:	mov    eax,DWORD PTR [r12]
  42e4bf:	test   eax,eax
  42e4c1:	jne    42e1c0 <strcmp@plt+0x2aa08>
  42e4c7:	jmp    42e371 <strcmp@plt+0x2abb9>
  42e4cc:	mov    DWORD PTR [rsp+0x18],edx
  42e4d0:	mov    r13d,0x4
  42e4d6:	jmp    42e197 <strcmp@plt+0x2a9df>
  42e4db:	mov    DWORD PTR [rsp+0x18],edx
  42e4df:	mov    r13d,0x4
  42e4e5:	jmp    42dffa <strcmp@plt+0x2a842>
  42e4ea:	mov    edx,esi
  42e4ec:	shl    rdx,0x3
  42e4f0:	jmp    42dee2 <strcmp@plt+0x2a72a>
  42e4f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42e500:	push   r14
  42e502:	push   r13
  42e504:	xor    eax,eax
  42e506:	push   r12
  42e508:	push   rbp
  42e509:	push   rbx
  42e50a:	mov    r11,QWORD PTR [rdi]
  42e50d:	mov    r12d,DWORD PTR [r11]
  42e510:	test   r12d,r12d
  42e513:	je     42e5b7 <strcmp@plt+0x2adff>
  42e519:	mov    rdx,rsi
  42e51c:	mov    eax,esi
  42e51e:	lea    r10d,[r12-0x1]
  42e523:	shr    rdx,0x21
  42e527:	shl    eax,0xb
  42e52a:	mov    rbp,QWORD PTR [r11+0x10]
  42e52e:	xor    eax,edx
  42e530:	mov    ebx,r10d
  42e533:	xor    eax,esi
  42e535:	mov    r9d,eax
  42e538:	and    ebx,eax
  42e53a:	shl    eax,0x3
  42e53d:	shr    r9d,0x3
  42e541:	xor    eax,r9d
  42e544:	or     eax,0x1
  42e547:	mov    r9d,eax
  42e54a:	mov    eax,ebx
  42e54c:	and    r9d,r10d
  42e54f:	jmp    42e574 <strcmp@plt+0x2adbc>
  42e551:	nop    DWORD PTR [rax+0x0]
  42e558:	test   cl,0x1
  42e55b:	jne    42e56a <strcmp@plt+0x2adb2>
  42e55d:	mov    r14,QWORD PTR [r11+0x18]
  42e561:	mov    r13d,eax
  42e564:	cmp    rsi,QWORD PTR [r14+r13*8]
  42e568:	je     42e591 <strcmp@plt+0x2add9>
  42e56a:	add    eax,r9d
  42e56d:	and    eax,r10d
  42e570:	cmp    ebx,eax
  42e572:	je     42e5c0 <strcmp@plt+0x2ae08>
  42e574:	mov    edx,eax
  42e576:	shr    edx,0x4
  42e579:	lea    r8,[rbp+rdx*4+0x0]
  42e57e:	lea    edx,[rax+rax*1]
  42e581:	mov    edi,DWORD PTR [r8]
  42e584:	and    edx,0x1e
  42e587:	shrx   ecx,edi,edx
  42e58c:	test   cl,0x2
  42e58f:	je     42e558 <strcmp@plt+0x2ada0>
  42e591:	and    ecx,0x3
  42e594:	jne    42e5c0 <strcmp@plt+0x2ae08>
  42e596:	cmp    r12d,eax
  42e599:	je     42e5c0 <strcmp@plt+0x2ae08>
  42e59b:	mov    rcx,QWORD PTR [r11+0x20]
  42e59f:	mov    rax,QWORD PTR [rcx+rax*8]
  42e5a3:	mov    ecx,0x1
  42e5a8:	shlx   rdx,rcx,rdx
  42e5ad:	or     edx,edi
  42e5af:	mov    DWORD PTR [r8],edx
  42e5b2:	sub    DWORD PTR [r11+0x4],0x1
  42e5b7:	pop    rbx
  42e5b8:	pop    rbp
  42e5b9:	pop    r12
  42e5bb:	pop    r13
  42e5bd:	pop    r14
  42e5bf:	ret    
  42e5c0:	pop    rbx
  42e5c1:	xor    eax,eax
  42e5c3:	pop    rbp
  42e5c4:	pop    r12
  42e5c6:	pop    r13
  42e5c8:	pop    r14
  42e5ca:	ret    
  42e5cb:	nop    DWORD PTR [rax+rax*1+0x0]
  42e5d0:	push   rbp
  42e5d1:	push   rbx
  42e5d2:	xor    eax,eax
  42e5d4:	mov    rbx,QWORD PTR [rdi]
  42e5d7:	mov    ebp,DWORD PTR [rbx]
  42e5d9:	test   ebp,ebp
  42e5db:	je     42e668 <strcmp@plt+0x2aeb0>
  42e5e1:	mov    rdx,rsi
  42e5e4:	mov    eax,esi
  42e5e6:	lea    r9d,[rbp-0x1]
  42e5ea:	shr    rdx,0x21
  42e5ee:	shl    eax,0xb
  42e5f1:	mov    r11,QWORD PTR [rbx+0x10]
  42e5f5:	xor    eax,edx
  42e5f7:	mov    r10d,r9d
  42e5fa:	xor    eax,esi
  42e5fc:	mov    r8d,eax
  42e5ff:	and    r10d,eax
  42e602:	shl    eax,0x3
  42e605:	shr    r8d,0x3
  42e609:	xor    eax,r8d
  42e60c:	or     eax,0x1
  42e60f:	mov    r8d,eax
  42e612:	mov    eax,r10d
  42e615:	and    r8d,r9d
  42e618:	jmp    42e63c <strcmp@plt+0x2ae84>
  42e61a:	nop    WORD PTR [rax+rax*1+0x0]
  42e620:	test   dl,0x1
  42e623:	jne    42e631 <strcmp@plt+0x2ae79>
  42e625:	mov    rdi,QWORD PTR [rbx+0x18]
  42e629:	mov    ecx,eax
  42e62b:	cmp    rsi,QWORD PTR [rdi+rcx*8]
  42e62f:	je     42e657 <strcmp@plt+0x2ae9f>
  42e631:	add    eax,r8d
  42e634:	and    eax,r9d
  42e637:	cmp    r10d,eax
  42e63a:	je     42e670 <strcmp@plt+0x2aeb8>
  42e63c:	lea    edx,[rax+rax*1]
  42e63f:	mov    edi,eax
  42e641:	shr    edi,0x4
  42e644:	mov    ecx,edx
  42e646:	mov    edx,DWORD PTR [r11+rdi*4]
  42e64a:	and    ecx,0x1e
  42e64d:	shrx   edx,edx,ecx
  42e652:	test   dl,0x2
  42e655:	je     42e620 <strcmp@plt+0x2ae68>
  42e657:	and    edx,0x3
  42e65a:	jne    42e670 <strcmp@plt+0x2aeb8>
  42e65c:	cmp    ebp,eax
  42e65e:	je     42e670 <strcmp@plt+0x2aeb8>
  42e660:	mov    rdx,QWORD PTR [rbx+0x20]
  42e664:	mov    rax,QWORD PTR [rdx+rax*8]
  42e668:	pop    rbx
  42e669:	pop    rbp
  42e66a:	ret    
  42e66b:	nop    DWORD PTR [rax+rax*1+0x0]
  42e670:	xor    eax,eax
  42e672:	pop    rbx
  42e673:	pop    rbp
  42e674:	ret    
  42e675:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42e680:	test   rdi,rdi
  42e683:	je     42e710 <strcmp@plt+0x2af58>
  42e689:	push   r12
  42e68b:	push   rbp
  42e68c:	mov    r12,rdi
  42e68f:	push   rbx
  42e690:	mov    rbp,QWORD PTR [rdi]
  42e693:	mov    eax,DWORD PTR [rbp+0x0]
  42e696:	test   eax,eax
  42e698:	je     42e6df <strcmp@plt+0x2af27>
  42e69a:	xor    ebx,ebx
  42e69c:	nop    DWORD PTR [rax+0x0]
  42e6a0:	mov    rsi,QWORD PTR [rbp+0x10]
  42e6a4:	lea    eax,[rbx+rbx*1]
  42e6a7:	mov    ecx,ebx
  42e6a9:	shr    ecx,0x4
  42e6ac:	and    eax,0x1e
  42e6af:	mov    edx,eax
  42e6b1:	mov    eax,DWORD PTR [rsi+rcx*4]
  42e6b4:	shrx   eax,eax,edx
  42e6b9:	test   al,0x3
  42e6bb:	jne    42e6d7 <strcmp@plt+0x2af1f>
  42e6bd:	mov    rdx,QWORD PTR [r12+0x8]
  42e6c2:	test   rdx,rdx
  42e6c5:	je     42e6d7 <strcmp@plt+0x2af1f>
  42e6c7:	mov    rcx,QWORD PTR [rbp+0x20]
  42e6cb:	mov    eax,ebx
  42e6cd:	mov    rdi,QWORD PTR [rcx+rax*8]
  42e6d1:	call   rdx
  42e6d3:	mov    rbp,QWORD PTR [r12]
  42e6d7:	add    ebx,0x1
  42e6da:	cmp    DWORD PTR [rbp+0x0],ebx
  42e6dd:	jne    42e6a0 <strcmp@plt+0x2aee8>
  42e6df:	mov    rdi,QWORD PTR [rbp+0x18]
  42e6e3:	call   4037b0 <free@plt>
  42e6e8:	mov    rdi,QWORD PTR [rbp+0x10]
  42e6ec:	call   4037b0 <free@plt>
  42e6f1:	mov    rdi,QWORD PTR [rbp+0x20]
  42e6f5:	call   4037b0 <free@plt>
  42e6fa:	mov    rdi,rbp
  42e6fd:	call   4037b0 <free@plt>
  42e702:	pop    rbx
  42e703:	mov    rdi,r12
  42e706:	pop    rbp
  42e707:	pop    r12
  42e709:	jmp    4037b0 <free@plt>
  42e70e:	xchg   ax,ax
  42e710:	repz ret 
  42e712:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42e71d:	nop    DWORD PTR [rax]
  42e720:	push   r12
  42e722:	push   rbp
  42e723:	mov    r12,rdi
  42e726:	push   rbx
  42e727:	call   42d4e0 <strcmp@plt+0x29d28>
  42e72c:	mov    rsi,QWORD PTR [r12]
  42e730:	mov    rbp,rax
  42e733:	mov    eax,DWORD PTR [rsi]
  42e735:	test   eax,eax
  42e737:	je     42e781 <strcmp@plt+0x2afc9>
  42e739:	xor    ebx,ebx
  42e73b:	jmp    42e747 <strcmp@plt+0x2af8f>
  42e73d:	nop    DWORD PTR [rax]
  42e740:	add    ebx,0x1
  42e743:	cmp    DWORD PTR [rsi],ebx
  42e745:	je     42e781 <strcmp@plt+0x2afc9>
  42e747:	mov    rdi,QWORD PTR [rsi+0x10]
  42e74b:	lea    eax,[rbx+rbx*1]
  42e74e:	mov    ecx,ebx
  42e750:	shr    ecx,0x4
  42e753:	and    eax,0x1e
  42e756:	mov    edx,eax
  42e758:	mov    eax,DWORD PTR [rdi+rcx*4]
  42e75b:	shrx   eax,eax,edx
  42e760:	test   al,0x3
  42e762:	jne    42e740 <strcmp@plt+0x2af88>
  42e764:	mov    rdx,QWORD PTR [rsi+0x18]
  42e768:	mov    eax,ebx
  42e76a:	mov    rsi,rbp
  42e76d:	add    ebx,0x1
  42e770:	mov    rdi,QWORD PTR [rdx+rax*8]
  42e774:	call   42d540 <strcmp@plt+0x29d88>
  42e779:	mov    rsi,QWORD PTR [r12]
  42e77d:	cmp    DWORD PTR [rsi],ebx
  42e77f:	jne    42e747 <strcmp@plt+0x2af8f>
  42e781:	mov    rax,rbp
  42e784:	pop    rbx
  42e785:	pop    rbp
  42e786:	pop    r12
  42e788:	ret    
  42e789:	nop    DWORD PTR [rax+0x0]
  42e790:	push   r12
  42e792:	push   rbp
  42e793:	mov    r12,rdi
  42e796:	push   rbx
  42e797:	call   42d4e0 <strcmp@plt+0x29d28>
  42e79c:	mov    rsi,QWORD PTR [r12]
  42e7a0:	mov    rbp,rax
  42e7a3:	mov    eax,DWORD PTR [rsi]
  42e7a5:	test   eax,eax
  42e7a7:	je     42e7f1 <strcmp@plt+0x2b039>
  42e7a9:	xor    ebx,ebx
  42e7ab:	jmp    42e7b7 <strcmp@plt+0x2afff>
  42e7ad:	nop    DWORD PTR [rax]
  42e7b0:	add    ebx,0x1
  42e7b3:	cmp    DWORD PTR [rsi],ebx
  42e7b5:	je     42e7f1 <strcmp@plt+0x2b039>
  42e7b7:	mov    rdi,QWORD PTR [rsi+0x10]
  42e7bb:	lea    eax,[rbx+rbx*1]
  42e7be:	mov    ecx,ebx
  42e7c0:	shr    ecx,0x4
  42e7c3:	and    eax,0x1e
  42e7c6:	mov    edx,eax
  42e7c8:	mov    eax,DWORD PTR [rdi+rcx*4]
  42e7cb:	shrx   eax,eax,edx
  42e7d0:	test   al,0x3
  42e7d2:	jne    42e7b0 <strcmp@plt+0x2aff8>
  42e7d4:	mov    rdx,QWORD PTR [rsi+0x20]
  42e7d8:	mov    eax,ebx
  42e7da:	mov    rsi,rbp
  42e7dd:	add    ebx,0x1
  42e7e0:	mov    rdi,QWORD PTR [rdx+rax*8]
  42e7e4:	call   42d540 <strcmp@plt+0x29d88>
  42e7e9:	mov    rsi,QWORD PTR [r12]
  42e7ed:	cmp    DWORD PTR [rsi],ebx
  42e7ef:	jne    42e7b7 <strcmp@plt+0x2afff>
  42e7f1:	mov    rax,rbp
  42e7f4:	pop    rbx
  42e7f5:	pop    rbp
  42e7f6:	pop    r12
  42e7f8:	ret    
  42e7f9:	nop    DWORD PTR [rax+0x0]
  42e800:	push   rbp
  42e801:	push   rbx
  42e802:	mov    rbp,rdi
  42e805:	mov    edi,0x38
  42e80a:	sub    rsp,0x8
  42e80e:	call   434790 <strcmp@plt+0x30fd8>
  42e813:	mov    rdi,rbp
  42e816:	mov    rbx,rax
  42e819:	call   434860 <strcmp@plt+0x310a8>
  42e81e:	mov    QWORD PTR [rbx],rax
  42e821:	call   42d4e0 <strcmp@plt+0x29d28>
  42e826:	mov    QWORD PTR [rbx+0x8],rax
  42e82a:	call   42d4e0 <strcmp@plt+0x29d28>
  42e82f:	mov    QWORD PTR [rbx+0x10],rax
  42e833:	call   42d4e0 <strcmp@plt+0x29d28>
  42e838:	mov    BYTE PTR [rbx+0x20],0x1
  42e83c:	mov    QWORD PTR [rbx+0x18],rax
  42e840:	mov    rax,rbx
  42e843:	mov    QWORD PTR [rbx+0x28],0x0
  42e84b:	mov    QWORD PTR [rbx+0x30],0x0
  42e853:	add    rsp,0x8
  42e857:	pop    rbx
  42e858:	pop    rbp
  42e859:	ret    
  42e85a:	nop    WORD PTR [rax+rax*1+0x0]
  42e860:	push   rbx
  42e861:	mov    rbx,rdi
  42e864:	mov    rdi,QWORD PTR [rdi]
  42e867:	call   4037b0 <free@plt>
  42e86c:	mov    rdi,QWORD PTR [rbx+0x8]
  42e870:	call   42dac0 <strcmp@plt+0x2a308>
  42e875:	mov    rdi,QWORD PTR [rbx+0x10]
  42e879:	call   42dac0 <strcmp@plt+0x2a308>
  42e87e:	mov    rdi,QWORD PTR [rbx+0x18]
  42e882:	call   42dac0 <strcmp@plt+0x2a308>
  42e887:	mov    rdi,QWORD PTR [rbx+0x28]
  42e88b:	test   rdi,rdi
  42e88e:	je     42e895 <strcmp@plt+0x2b0dd>
  42e890:	call   424750 <strcmp@plt+0x20f98>
  42e895:	mov    rdi,QWORD PTR [rbx+0x30]
  42e899:	test   rdi,rdi
  42e89c:	je     42e8a3 <strcmp@plt+0x2b0eb>
  42e89e:	call   424750 <strcmp@plt+0x20f98>
  42e8a3:	mov    rdi,rbx
  42e8a6:	pop    rbx
  42e8a7:	jmp    4037b0 <free@plt>
  42e8ac:	nop    DWORD PTR [rax+0x0]
  42e8b0:	push   r12
  42e8b2:	push   rbp
  42e8b3:	mov    r12,rdi
  42e8b6:	push   rbx
  42e8b7:	sub    rsp,0x20
  42e8bb:	mov    rbp,QWORD PTR [rsi]
  42e8be:	mov    rax,QWORD PTR fs:0x28
  42e8c7:	mov    QWORD PTR [rsp+0x18],rax
  42e8cc:	xor    eax,eax
  42e8ce:	mov    eax,DWORD PTR [rbp+0x18]
  42e8d1:	test   eax,eax
  42e8d3:	je     42e920 <strcmp@plt+0x2b168>
  42e8d5:	mov    rdi,rbp
  42e8d8:	call   425050 <strcmp@plt+0x21898>
  42e8dd:	test   rax,rax
  42e8e0:	je     42e9af <strcmp@plt+0x2b1f7>
  42e8e6:	mov    rdi,rax
  42e8e9:	call   43f030 <strcmp@plt+0x3b878>
  42e8ee:	test   rax,rax
  42e8f1:	je     42e9da <strcmp@plt+0x2b222>
  42e8f7:	mov    rsi,QWORD PTR [rsp+0x18]
  42e8fc:	xor    rsi,QWORD PTR fs:0x28
  42e905:	jne    42e9ff <strcmp@plt+0x2b247>
  42e90b:	add    rsp,0x20
  42e90f:	mov    rdi,r12
  42e912:	mov    rsi,rax
  42e915:	pop    rbx
  42e916:	pop    rbp
  42e917:	pop    r12
  42e919:	jmp    43a470 <strcmp@plt+0x36cb8>
  42e91e:	xchg   ax,ax
  42e920:	mov    rbx,rsi
  42e923:	call   43a6e0 <strcmp@plt+0x36f28>
  42e928:	mov    rsi,QWORD PTR [rax+0x8]
  42e92c:	cmp    rax,rsi
  42e92f:	je     42e9a3 <strcmp@plt+0x2b1eb>
  42e931:	mov    rbp,QWORD PTR [rsi+0x10]
  42e935:	xor    edi,edi
  42e937:	mov    rcx,QWORD PTR [rbp+0x10]
  42e93b:	mov    rdx,QWORD PTR [rbp+0x18]
  42e93f:	mov    QWORD PTR [rsp],rcx
  42e943:	mov    QWORD PTR [rsp+0x8],rdx
  42e948:	mov    rdx,QWORD PTR [rcx+0x8]
  42e94c:	cmp    rcx,rdx
  42e94f:	jne    42e961 <strcmp@plt+0x2b1a9>
  42e951:	jmp    42e990 <strcmp@plt+0x2b1d8>
  42e953:	nop    DWORD PTR [rax+rax*1+0x0]
  42e958:	mov    rdx,QWORD PTR [rdx+0x8]
  42e95c:	cmp    rcx,rdx
  42e95f:	je     42e990 <strcmp@plt+0x2b1d8>
  42e961:	cmp    rbx,QWORD PTR [rdx+0x10]
  42e965:	jne    42e958 <strcmp@plt+0x2b1a0>
  42e967:	mov    rdi,rax
  42e96a:	call   42dac0 <strcmp@plt+0x2a308>
  42e96f:	mov    rax,rbp
  42e972:	mov    rsi,QWORD PTR [rsp+0x18]
  42e977:	xor    rsi,QWORD PTR fs:0x28
  42e980:	jne    42e9ff <strcmp@plt+0x2b247>
  42e982:	add    rsp,0x20
  42e986:	pop    rbx
  42e987:	pop    rbp
  42e988:	pop    r12
  42e98a:	ret    
  42e98b:	nop    DWORD PTR [rax+rax*1+0x0]
  42e990:	add    rdi,0x8
  42e994:	cmp    rdi,0x10
  42e998:	jne    42e9d1 <strcmp@plt+0x2b219>
  42e99a:	mov    rsi,QWORD PTR [rsi+0x8]
  42e99e:	cmp    rax,rsi
  42e9a1:	jne    42e931 <strcmp@plt+0x2b179>
  42e9a3:	mov    rdi,rax
  42e9a6:	call   42dac0 <strcmp@plt+0x2a308>
  42e9ab:	xor    eax,eax
  42e9ad:	jmp    42e972 <strcmp@plt+0x2b1ba>
  42e9af:	mov    rdi,rbp
  42e9b2:	call   424890 <strcmp@plt+0x210d8>
  42e9b7:	lea    rsi,[rip+0x20992]        # 44f350 <strcmp@plt+0x4bb98>
  42e9be:	mov    rdx,rax
  42e9c1:	mov    edi,0x2
  42e9c6:	xor    eax,eax
  42e9c8:	call   4306a0 <strcmp@plt+0x2cee8>
  42e9cd:	xor    eax,eax
  42e9cf:	jmp    42e972 <strcmp@plt+0x2b1ba>
  42e9d1:	mov    rcx,QWORD PTR [rsp+rdi*1]
  42e9d5:	jmp    42e948 <strcmp@plt+0x2b190>
  42e9da:	mov    rdi,rbp
  42e9dd:	call   424890 <strcmp@plt+0x210d8>
  42e9e2:	lea    rsi,[rip+0x209b7]        # 44f3a0 <strcmp@plt+0x4bbe8>
  42e9e9:	mov    rdx,rax
  42e9ec:	mov    edi,0x2
  42e9f1:	xor    eax,eax
  42e9f3:	call   4306a0 <strcmp@plt+0x2cee8>
  42e9f8:	xor    eax,eax
  42e9fa:	jmp    42e972 <strcmp@plt+0x2b1ba>
  42e9ff:	call   403460 <__stack_chk_fail@plt>
  42ea04:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42ea0f:	nop
  42ea10:	push   r15
  42ea12:	push   r14
  42ea14:	push   r13
  42ea16:	push   r12
  42ea18:	mov    r12,rdi
  42ea1b:	push   rbp
  42ea1c:	push   rbx
  42ea1d:	mov    rdi,rsi
  42ea20:	mov    r13,rsi
  42ea23:	sub    rsp,0x18
  42ea27:	call   434230 <strcmp@plt+0x30a78>
  42ea2c:	mov    QWORD PTR [rsp+0x8],rax
  42ea31:	mov    rax,QWORD PTR [rax+0x28]
  42ea35:	mov    r14,QWORD PTR [rax+0x8]
  42ea39:	cmp    rax,r14
  42ea3c:	je     42eab7 <strcmp@plt+0x2b2ff>
  42ea3e:	xchg   ax,ax
  42ea40:	mov    rbp,QWORD PTR [r14+0x10]
  42ea44:	mov    eax,DWORD PTR [rbp+0x18]
  42ea47:	test   eax,eax
  42ea49:	je     42eaa8 <strcmp@plt+0x2b2f0>
  42ea4b:	mov    rbx,QWORD PTR [rbp+0x8]
  42ea4f:	cmp    rbx,rbp
  42ea52:	jne    42ea69 <strcmp@plt+0x2b2b1>
  42ea54:	jmp    42eaa8 <strcmp@plt+0x2b2f0>
  42ea56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ea60:	mov    rbx,QWORD PTR [rbx+0x8]
  42ea64:	cmp    rbx,rbp
  42ea67:	je     42eaa8 <strcmp@plt+0x2b2f0>
  42ea69:	mov    rsi,QWORD PTR [rbx+0x10]
  42ea6d:	mov    rdi,r12
  42ea70:	call   42e8b0 <strcmp@plt+0x2b0f8>
  42ea75:	test   rax,rax
  42ea78:	mov    r15,rax
  42ea7b:	je     42ea60 <strcmp@plt+0x2b2a8>
  42ea7d:	mov    rsi,QWORD PTR [rax+0x8]
  42ea81:	mov    rdi,r13
  42ea84:	call   42d730 <strcmp@plt+0x29f78>
  42ea89:	test   al,al
  42ea8b:	jne    42ea60 <strcmp@plt+0x2b2a8>
  42ea8d:	mov    rsi,QWORD PTR [r15+0x8]
  42ea91:	mov    rdi,r13
  42ea94:	call   42d540 <strcmp@plt+0x29d88>
  42ea99:	mov    rbx,QWORD PTR [rbx+0x8]
  42ea9d:	cmp    rbx,rbp
  42eaa0:	jne    42ea69 <strcmp@plt+0x2b2b1>
  42eaa2:	nop    WORD PTR [rax+rax*1+0x0]
  42eaa8:	mov    rax,QWORD PTR [rsp+0x8]
  42eaad:	mov    r14,QWORD PTR [r14+0x8]
  42eab1:	cmp    QWORD PTR [rax+0x28],r14
  42eab5:	jne    42ea40 <strcmp@plt+0x2b288>
  42eab7:	add    rsp,0x18
  42eabb:	pop    rbx
  42eabc:	pop    rbp
  42eabd:	pop    r12
  42eabf:	pop    r13
  42eac1:	pop    r14
  42eac3:	pop    r15
  42eac5:	ret    
  42eac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ead0:	push   r12
  42ead2:	push   rbp
  42ead3:	push   rbx
  42ead4:	mov    rbx,rsi
  42ead7:	mov    r12,QWORD PTR [rsi]
  42eada:	call   42e8b0 <strcmp@plt+0x2b0f8>
  42eadf:	test   rax,rax
  42eae2:	je     42eb57 <strcmp@plt+0x2b39f>
  42eae4:	mov    rbp,rax
  42eae7:	mov    eax,DWORD PTR [r12+0x18]
  42eaec:	test   eax,eax
  42eaee:	jne    42eb60 <strcmp@plt+0x2b3a8>
  42eaf0:	mov    rdx,QWORD PTR [rbp+0x10]
  42eaf4:	mov    rsi,QWORD PTR [rbp+0x18]
  42eaf8:	mov    rax,QWORD PTR [rdx+0x8]
  42eafc:	cmp    rdx,rax
  42eaff:	jne    42eb11 <strcmp@plt+0x2b359>
  42eb01:	jmp    42eb30 <strcmp@plt+0x2b378>
  42eb03:	nop    DWORD PTR [rax+rax*1+0x0]
  42eb08:	mov    rax,QWORD PTR [rax+0x8]
  42eb0c:	cmp    rdx,rax
  42eb0f:	je     42eb30 <strcmp@plt+0x2b378>
  42eb11:	cmp    rbx,QWORD PTR [rax+0x10]
  42eb15:	jne    42eb08 <strcmp@plt+0x2b350>
  42eb17:	mov    rsi,rdx
  42eb1a:	mov    rdi,rbx
  42eb1d:	pop    rbx
  42eb1e:	pop    rbp
  42eb1f:	pop    r12
  42eb21:	jmp    42d9a0 <strcmp@plt+0x2a1e8>
  42eb26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42eb30:	mov    rax,QWORD PTR [rsi+0x8]
  42eb34:	cmp    rsi,rax
  42eb37:	je     42eb57 <strcmp@plt+0x2b39f>
  42eb39:	cmp    QWORD PTR [rax+0x10],rbx
  42eb3d:	jne    42eb4e <strcmp@plt+0x2b396>
  42eb3f:	jmp    42eb1a <strcmp@plt+0x2b362>
  42eb41:	nop    DWORD PTR [rax+0x0]
  42eb48:	cmp    rbx,QWORD PTR [rax+0x10]
  42eb4c:	je     42eb1a <strcmp@plt+0x2b362>
  42eb4e:	mov    rax,QWORD PTR [rax+0x8]
  42eb52:	cmp    rsi,rax
  42eb55:	jne    42eb48 <strcmp@plt+0x2b390>
  42eb57:	pop    rbx
  42eb58:	pop    rbp
  42eb59:	pop    r12
  42eb5b:	ret    
  42eb5c:	nop    DWORD PTR [rax+0x0]
  42eb60:	mov    rdi,r12
  42eb63:	call   425050 <strcmp@plt+0x21898>
  42eb68:	test   rax,rax
  42eb6b:	je     42eb96 <strcmp@plt+0x2b3de>
  42eb6d:	mov    rdi,rax
  42eb70:	call   4251c0 <strcmp@plt+0x21a08>
  42eb75:	cmp    ax,0x2
  42eb79:	je     42eb90 <strcmp@plt+0x2b3d8>
  42eb7b:	cmp    ax,0xa
  42eb7f:	jne    42eb57 <strcmp@plt+0x2b39f>
  42eb81:	mov    rsi,QWORD PTR [rbp+0x18]
  42eb85:	jmp    42eb1a <strcmp@plt+0x2b362>
  42eb87:	nop    WORD PTR [rax+rax*1+0x0]
  42eb90:	mov    rdx,QWORD PTR [rbp+0x10]
  42eb94:	jmp    42eb17 <strcmp@plt+0x2b35f>
  42eb96:	mov    rdi,r12
  42eb99:	call   424890 <strcmp@plt+0x210d8>
  42eb9e:	pop    rbx
  42eb9f:	pop    rbp
  42eba0:	pop    r12
  42eba2:	lea    rsi,[rip+0x20847]        # 44f3f0 <strcmp@plt+0x4bc38>
  42eba9:	mov    rdx,rax
  42ebac:	mov    edi,0x2
  42ebb1:	xor    eax,eax
  42ebb3:	jmp    4306a0 <strcmp@plt+0x2cee8>
  42ebb8:	nop    DWORD PTR [rax+rax*1+0x0]
  42ebc0:	push   r15
  42ebc2:	push   r14
  42ebc4:	mov    r14,rsi
  42ebc7:	push   r13
  42ebc9:	push   r12
  42ebcb:	mov    r12,rdi
  42ebce:	push   rbp
  42ebcf:	push   rbx
  42ebd0:	mov    rdi,rsi
  42ebd3:	sub    rsp,0x8
  42ebd7:	call   434230 <strcmp@plt+0x30a78>
  42ebdc:	mov    r15,rax
  42ebdf:	mov    rax,QWORD PTR [rax+0x28]
  42ebe3:	mov    r13,QWORD PTR [rax+0x8]
  42ebe7:	cmp    rax,r13
  42ebea:	je     42ec27 <strcmp@plt+0x2b46f>
  42ebec:	nop    DWORD PTR [rax+0x0]
  42ebf0:	mov    rbp,QWORD PTR [r13+0x10]
  42ebf4:	mov    eax,DWORD PTR [rbp+0x18]
  42ebf7:	test   eax,eax
  42ebf9:	je     42ec1d <strcmp@plt+0x2b465>
  42ebfb:	mov    rbx,QWORD PTR [rbp+0x8]
  42ebff:	cmp    rbx,rbp
  42ec02:	je     42ec1d <strcmp@plt+0x2b465>
  42ec04:	nop    DWORD PTR [rax+0x0]
  42ec08:	mov    rsi,QWORD PTR [rbx+0x10]
  42ec0c:	mov    rdi,r12
  42ec0f:	call   42ead0 <strcmp@plt+0x2b318>
  42ec14:	mov    rbx,QWORD PTR [rbx+0x8]
  42ec18:	cmp    rbx,rbp
  42ec1b:	jne    42ec08 <strcmp@plt+0x2b450>
  42ec1d:	mov    r13,QWORD PTR [r13+0x8]
  42ec21:	cmp    QWORD PTR [r15+0x28],r13
  42ec25:	jne    42ebf0 <strcmp@plt+0x2b438>
  42ec27:	mov    rdi,r12
  42ec2a:	call   43a6e0 <strcmp@plt+0x36f28>
  42ec2f:	mov    rbx,QWORD PTR [rax+0x8]
  42ec33:	mov    rbp,rax
  42ec36:	cmp    rax,rbx
  42ec39:	je     42ec59 <strcmp@plt+0x2b4a1>
  42ec3b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ec40:	mov    rax,QWORD PTR [rbx+0x10]
  42ec44:	mov    rdi,r14
  42ec47:	mov    rsi,QWORD PTR [rax+0x8]
  42ec4b:	call   42d9a0 <strcmp@plt+0x2a1e8>
  42ec50:	mov    rbx,QWORD PTR [rbx+0x8]
  42ec54:	cmp    rbp,rbx
  42ec57:	jne    42ec40 <strcmp@plt+0x2b488>
  42ec59:	add    rsp,0x8
  42ec5d:	pop    rbx
  42ec5e:	pop    rbp
  42ec5f:	pop    r12
  42ec61:	pop    r13
  42ec63:	pop    r14
  42ec65:	pop    r15
  42ec67:	ret    
  42ec68:	nop    DWORD PTR [rax+rax*1+0x0]
  42ec70:	push   rbx
  42ec71:	mov    esi,0x10
  42ec76:	mov    edi,0x1
  42ec7b:	call   434750 <strcmp@plt+0x30f98>
  42ec80:	mov    esi,0x28
  42ec85:	mov    rbx,rax
  42ec88:	mov    edi,0x1
  42ec8d:	call   4032e0 <calloc@plt>
  42ec92:	mov    QWORD PTR [rbx],rax
  42ec95:	mov    rax,rbx
  42ec98:	pop    rbx
  42ec99:	ret    
  42ec9a:	nop    WORD PTR [rax+rax*1+0x0]
  42eca0:	push   rbp
  42eca1:	push   rbx
  42eca2:	mov    rbp,rdi
  42eca5:	mov    esi,0x10
  42ecaa:	mov    edi,0x1
  42ecaf:	sub    rsp,0x8
  42ecb3:	call   434750 <strcmp@plt+0x30f98>
  42ecb8:	mov    esi,0x28
  42ecbd:	mov    rbx,rax
  42ecc0:	mov    edi,0x1
  42ecc5:	call   4032e0 <calloc@plt>
  42ecca:	mov    QWORD PTR [rbx+0x8],rbp
  42ecce:	mov    QWORD PTR [rbx],rax
  42ecd1:	add    rsp,0x8
  42ecd5:	mov    rax,rbx
  42ecd8:	pop    rbx
  42ecd9:	pop    rbp
  42ecda:	ret    
  42ecdb:	nop    DWORD PTR [rax+rax*1+0x0]
  42ece0:	push   r15
  42ece2:	push   r14
  42ece4:	push   r13
  42ece6:	push   r12
  42ece8:	push   rbp
  42ece9:	push   rbx
  42ecea:	sub    rsp,0x28
  42ecee:	mov    r12,QWORD PTR [rdi]
  42ecf1:	mov    QWORD PTR [rsp+0x10],rdi
  42ecf6:	mov    DWORD PTR [rsp+0x18],esi
  42ecfa:	mov    QWORD PTR [rsp+0x8],rdx
  42ecff:	mov    eax,DWORD PTR [r12+0xc]
  42ed04:	cmp    DWORD PTR [r12+0x8],eax
  42ed09:	mov    eax,DWORD PTR [r12]
  42ed0d:	jae    42ee64 <strcmp@plt+0x2b6ac>
  42ed13:	mov    rbp,QWORD PTR [r12+0x10]
  42ed18:	lea    ebx,[rax-0x1]
  42ed1b:	mov    DWORD PTR [rsp+0x4],eax
  42ed1f:	mov    r14,r12
  42ed22:	mov    r15d,DWORD PTR [rsp+0x18]
  42ed27:	mov    edi,r15d
  42ed2a:	and    edi,ebx
  42ed2c:	mov    eax,edi
  42ed2e:	lea    r10d,[rdi+rdi*1]
  42ed32:	shr    eax,0x4
  42ed35:	lea    r13,[rbp+rax*4+0x0]
  42ed3a:	and    r10d,0x1e
  42ed3e:	shrx   r9d,DWORD PTR [r13+0x0],r10d
  42ed44:	test   r9b,0x2
  42ed48:	jne    42ee37 <strcmp@plt+0x2b67f>
  42ed4e:	mov    r8d,r15d
  42ed51:	mov    eax,r15d
  42ed54:	mov    r11d,DWORD PTR [rsp+0x4]
  42ed59:	shl    eax,0x3
  42ed5c:	shr    r8d,0x3
  42ed60:	mov    edx,r9d
  42ed63:	xor    r8d,eax
  42ed66:	mov    eax,edi
  42ed68:	or     r8d,0x1
  42ed6c:	and    r8d,ebx
  42ed6f:	jmp    42edb0 <strcmp@plt+0x2b5f8>
  42ed71:	nop    DWORD PTR [rax+0x0]
  42ed78:	mov    rcx,QWORD PTR [r12+0x18]
  42ed7d:	mov    edx,eax
  42ed7f:	cmp    r15d,DWORD PTR [rcx+rdx*4]
  42ed83:	je     42f2f9 <strcmp@plt+0x2bb41>
  42ed89:	add    eax,r8d
  42ed8c:	and    eax,ebx
  42ed8e:	cmp    edi,eax
  42ed90:	je     42edc1 <strcmp@plt+0x2b609>
  42ed92:	mov    edx,eax
  42ed94:	lea    ecx,[rax+rax*1]
  42ed97:	shr    edx,0x4
  42ed9a:	lea    rsi,[rbp+rdx*4+0x0]
  42ed9f:	and    ecx,0x1e
  42eda2:	shrx   edx,DWORD PTR [rsi],ecx
  42eda7:	test   dl,0x2
  42edaa:	jne    42f35e <strcmp@plt+0x2bba6>
  42edb0:	and    edx,0x1
  42edb3:	je     42ed78 <strcmp@plt+0x2b5c0>
  42edb5:	mov    r11d,eax
  42edb8:	add    eax,r8d
  42edbb:	and    eax,ebx
  42edbd:	cmp    edi,eax
  42edbf:	jne    42ed92 <strcmp@plt+0x2b5da>
  42edc1:	cmp    r11d,DWORD PTR [rsp+0x4]
  42edc6:	je     42f3e0 <strcmp@plt+0x2bc28>
  42edcc:	mov    eax,r11d
  42edcf:	lea    r10d,[r11+r11*1]
  42edd3:	mov    edx,r11d
  42edd6:	shr    eax,0x4
  42edd9:	lea    r13,[rbp+rax*4+0x0]
  42edde:	and    r10d,0x1e
  42ede2:	shrx   r9d,DWORD PTR [r13+0x0],r10d
  42ede8:	mov    eax,r9d
  42edeb:	and    eax,0x2
  42edee:	test   eax,eax
  42edf0:	jne    42ee39 <strcmp@plt+0x2b681>
  42edf2:	and    r9d,0x1
  42edf6:	je     42ee1b <strcmp@plt+0x2b663>
  42edf8:	mov    rax,QWORD PTR [r12+0x18]
  42edfd:	mov    ebx,DWORD PTR [rsp+0x18]
  42ee01:	mov    DWORD PTR [rax+rdx*4],ebx
  42ee04:	mov    eax,0x3
  42ee09:	shlx   r10,rax,r10
  42ee0e:	not    r10d
  42ee11:	and    DWORD PTR [r13+0x0],r10d
  42ee15:	add    DWORD PTR [r12+0x4],0x1
  42ee1b:	mov    rax,QWORD PTR [r14+0x20]
  42ee1f:	mov    rbx,QWORD PTR [rsp+0x8]
  42ee24:	mov    QWORD PTR [rax+rdx*8],rbx
  42ee28:	add    rsp,0x28
  42ee2c:	pop    rbx
  42ee2d:	pop    rbp
  42ee2e:	pop    r12
  42ee30:	pop    r13
  42ee32:	pop    r14
  42ee34:	pop    r15
  42ee36:	ret    
  42ee37:	mov    edx,edi
  42ee39:	mov    rax,QWORD PTR [r12+0x18]
  42ee3e:	mov    ebx,DWORD PTR [rsp+0x18]
  42ee42:	mov    DWORD PTR [rax+rdx*4],ebx
  42ee45:	mov    eax,0x3
  42ee4a:	shlx   r10,rax,r10
  42ee4f:	not    r10d
  42ee52:	and    DWORD PTR [r13+0x0],r10d
  42ee56:	add    DWORD PTR [r12+0x4],0x1
  42ee5c:	add    DWORD PTR [r12+0x8],0x1
  42ee62:	jmp    42ee1b <strcmp@plt+0x2b663>
  42ee64:	mov    ebx,eax
  42ee66:	mov    DWORD PTR [rsp+0x4],eax
  42ee6a:	mov    eax,DWORD PTR [r12+0x4]
  42ee6f:	mov    edi,ebx
  42ee71:	lea    edx,[rax+rax*1]
  42ee74:	cmp    ebx,edx
  42ee76:	jbe    42f028 <strcmp@plt+0x2b870>
  42ee7c:	sub    ebx,0x2
  42ee7f:	mov    edx,ebx
  42ee81:	shr    edx,1
  42ee83:	or     ebx,edx
  42ee85:	mov    edx,ebx
  42ee87:	shr    edx,0x2
  42ee8a:	or     ebx,edx
  42ee8c:	mov    edx,ebx
  42ee8e:	shr    edx,0x4
  42ee91:	or     ebx,edx
  42ee93:	mov    edx,ebx
  42ee95:	shr    edx,0x8
  42ee98:	or     ebx,edx
  42ee9a:	mov    edx,ebx
  42ee9c:	shr    edx,0x10
  42ee9f:	or     ebx,edx
  42eea1:	lea    edx,[rbx+0x1]
  42eea4:	cmp    edx,0x3
  42eea7:	jbe    42f1b0 <strcmp@plt+0x2b9f8>
  42eead:	vxorpd xmm0,xmm0,xmm0
  42eeb1:	mov    ecx,edx
  42eeb3:	vmovsd xmm1,QWORD PTR [rip+0x1d03d]        # 44bef8 <strcmp@plt+0x48740>
  42eebb:	vcvtsi2sd xmm0,xmm0,rcx
  42eec0:	vfmadd132sd xmm0,xmm1,QWORD PTR [rip+0x1d027]        # 44bef0 <strcmp@plt+0x48738>
  42eec9:	vcvttsd2si rcx,xmm0
  42eece:	cmp    eax,ecx
  42eed0:	mov    DWORD PTR [rsp+0x1c],ecx
  42eed4:	jae    42f29d <strcmp@plt+0x2bae5>
  42eeda:	cmp    edx,0xf
  42eedd:	jbe    42f3d1 <strcmp@plt+0x2bc19>
  42eee3:	mov    r13d,edx
  42eee6:	mov    DWORD PTR [rsp+0x4],edx
  42eeea:	shr    r13d,0x4
  42eeee:	shl    r13,0x2
  42eef2:	mov    rdi,r13
  42eef5:	call   403530 <malloc@plt>
  42eefa:	mov    rdx,r13
  42eefd:	mov    esi,0xaa
  42ef02:	mov    rdi,rax
  42ef05:	mov    rbp,rax
  42ef08:	call   403250 <memset@plt>
  42ef0d:	mov    eax,DWORD PTR [rsp+0x4]
  42ef11:	cmp    DWORD PTR [r12],eax
  42ef15:	jb     42f31c <strcmp@plt+0x2bb64>
  42ef1b:	mov    DWORD PTR [rsp],0x0
  42ef22:	nop    WORD PTR [rax+rax*1+0x0]
  42ef28:	mov    edi,DWORD PTR [rsp]
  42ef2b:	mov    r11,QWORD PTR [r12+0x10]
  42ef30:	mov    eax,edi
  42ef32:	shr    eax,0x4
  42ef35:	lea    rcx,[r11+rax*4]
  42ef39:	mov    eax,edi
  42ef3b:	add    eax,eax
  42ef3d:	mov    edx,DWORD PTR [rcx]
  42ef3f:	and    eax,0x1e
  42ef42:	shrx   esi,edx,eax
  42ef47:	and    esi,0x3
  42ef4a:	jne    42f28a <strcmp@plt+0x2bad2>
  42ef50:	mov    esi,edi
  42ef52:	mov    r14,QWORD PTR [r12+0x18]
  42ef57:	mov    r13,QWORD PTR [r12+0x20]
  42ef5c:	mov    edi,0x1
  42ef61:	shlx   rax,rdi,rax
  42ef66:	or     eax,edx
  42ef68:	mov    r10d,DWORD PTR [r14+rsi*4]
  42ef6c:	mov    r15,QWORD PTR [r13+rsi*8+0x0]
  42ef71:	mov    DWORD PTR [rcx],eax
  42ef73:	nop    DWORD PTR [rax+rax*1+0x0]
  42ef78:	mov    edi,r10d
  42ef7b:	lea    eax,[r10*8+0x0]
  42ef83:	mov    edx,r10d
  42ef86:	shr    edi,0x3
  42ef89:	and    edx,ebx
  42ef8b:	xor    edi,eax
  42ef8d:	or     edi,0x1
  42ef90:	and    edi,ebx
  42ef92:	jmp    42ef9c <strcmp@plt+0x2b7e4>
  42ef94:	nop    DWORD PTR [rax+0x0]
  42ef98:	add    edx,edi
  42ef9a:	and    edx,ebx
  42ef9c:	mov    eax,edx
  42ef9e:	lea    ecx,[rdx+rdx*1]
  42efa1:	shr    eax,0x4
  42efa4:	shl    rax,0x2
  42efa8:	and    ecx,0x1e
  42efab:	lea    rsi,[rbp+rax*1+0x0]
  42efb0:	mov    r8d,DWORD PTR [rsi]
  42efb3:	shrx   r9d,r8d,ecx
  42efb8:	and    r9d,0x2
  42efbc:	je     42ef98 <strcmp@plt+0x2b7e0>
  42efbe:	mov    edi,0x2
  42efc3:	shlx   rdi,rdi,rcx
  42efc8:	andn   r8d,edi,r8d
  42efcd:	mov    DWORD PTR [rsi],r8d
  42efd0:	cmp    DWORD PTR [r12],edx
  42efd4:	jbe    42f281 <strcmp@plt+0x2bac9>
  42efda:	mov    esi,DWORD PTR [r11+rax*1]
  42efde:	shrx   esi,esi,ecx
  42efe3:	and    esi,0x3
  42efe6:	jne    42f281 <strcmp@plt+0x2bac9>
  42efec:	lea    rsi,[r14+rdx*4]
  42eff0:	lea    rdx,[r13+rdx*8+0x0]
  42eff5:	mov    edi,DWORD PTR [rsi]
  42eff7:	mov    DWORD PTR [rsi],r10d
  42effa:	mov    rsi,QWORD PTR [rdx]
  42effd:	mov    QWORD PTR [rdx],r15
  42f000:	mov    edx,0x1
  42f005:	mov    r11,QWORD PTR [r12+0x10]
  42f00a:	shlx   rcx,rdx,rcx
  42f00f:	mov    r14,QWORD PTR [r12+0x18]
  42f014:	mov    r13,QWORD PTR [r12+0x20]
  42f019:	mov    r10d,edi
  42f01c:	mov    r15,rsi
  42f01f:	or     DWORD PTR [r11+rax*1],ecx
  42f023:	jmp    42ef78 <strcmp@plt+0x2b7c0>
  42f028:	mov    edi,DWORD PTR [rsp+0x4]
  42f02c:	mov    ebx,edi
  42f02e:	shr    ebx,1
  42f030:	or     ebx,edi
  42f032:	mov    edx,ebx
  42f034:	shr    edx,0x2
  42f037:	or     ebx,edx
  42f039:	mov    edx,ebx
  42f03b:	shr    edx,0x4
  42f03e:	or     ebx,edx
  42f040:	mov    edx,ebx
  42f042:	shr    edx,0x8
  42f045:	or     ebx,edx
  42f047:	mov    edx,ebx
  42f049:	shr    edx,0x10
  42f04c:	or     ebx,edx
  42f04e:	lea    edx,[rbx+0x1]
  42f051:	cmp    edx,0x3
  42f054:	ja     42f1d9 <strcmp@plt+0x2ba21>
  42f05a:	cmp    eax,0x2
  42f05d:	ja     42f2af <strcmp@plt+0x2baf7>
  42f063:	mov    ebx,0x3
  42f068:	mov    DWORD PTR [rsp+0x1c],0x3
  42f070:	mov    DWORD PTR [rsp+0x4],0x4
  42f078:	mov    r13d,0x4
  42f07e:	mov    rdi,r13
  42f081:	call   403530 <malloc@plt>
  42f086:	mov    rdx,r13
  42f089:	mov    esi,0xaa
  42f08e:	mov    rdi,rax
  42f091:	mov    rbp,rax
  42f094:	call   403250 <memset@plt>
  42f099:	mov    eax,DWORD PTR [rsp+0x4]
  42f09d:	cmp    DWORD PTR [r12],eax
  42f0a1:	jb     42f380 <strcmp@plt+0x2bbc8>
  42f0a7:	mov    DWORD PTR [rsp],0x0
  42f0ae:	xchg   ax,ax
  42f0b0:	mov    edi,DWORD PTR [rsp]
  42f0b3:	mov    r11,QWORD PTR [r12+0x10]
  42f0b8:	mov    eax,edi
  42f0ba:	shr    eax,0x4
  42f0bd:	lea    rcx,[r11+rax*4]
  42f0c1:	mov    eax,edi
  42f0c3:	add    eax,eax
  42f0c5:	mov    edx,DWORD PTR [rcx]
  42f0c7:	and    eax,0x1e
  42f0ca:	shrx   esi,edx,eax
  42f0cf:	and    esi,0x3
  42f0d2:	jne    42f231 <strcmp@plt+0x2ba79>
  42f0d8:	mov    esi,edi
  42f0da:	mov    r14,QWORD PTR [r12+0x18]
  42f0df:	mov    r13,QWORD PTR [r12+0x20]
  42f0e4:	mov    edi,0x1
  42f0e9:	shlx   rax,rdi,rax
  42f0ee:	or     eax,edx
  42f0f0:	mov    r10d,DWORD PTR [r14+rsi*4]
  42f0f4:	mov    r15,QWORD PTR [r13+rsi*8+0x0]
  42f0f9:	mov    DWORD PTR [rcx],eax
  42f0fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42f100:	mov    edi,r10d
  42f103:	lea    eax,[r10*8+0x0]
  42f10b:	mov    edx,r10d
  42f10e:	shr    edi,0x3
  42f111:	and    edx,ebx
  42f113:	xor    edi,eax
  42f115:	or     edi,0x1
  42f118:	and    edi,ebx
  42f11a:	jmp    42f124 <strcmp@plt+0x2b96c>
  42f11c:	nop    DWORD PTR [rax+0x0]
  42f120:	add    edx,edi
  42f122:	and    edx,ebx
  42f124:	mov    eax,edx
  42f126:	lea    ecx,[rdx+rdx*1]
  42f129:	shr    eax,0x4
  42f12c:	shl    rax,0x2
  42f130:	and    ecx,0x1e
  42f133:	lea    rsi,[rbp+rax*1+0x0]
  42f138:	mov    r8d,DWORD PTR [rsi]
  42f13b:	shrx   r9d,r8d,ecx
  42f140:	and    r9d,0x2
  42f144:	je     42f120 <strcmp@plt+0x2b968>
  42f146:	mov    edi,0x2
  42f14b:	shlx   rdi,rdi,rcx
  42f150:	andn   r8d,edi,r8d
  42f155:	mov    DWORD PTR [rsi],r8d
  42f158:	cmp    edx,DWORD PTR [r12]
  42f15c:	jae    42f228 <strcmp@plt+0x2ba70>
  42f162:	mov    esi,DWORD PTR [r11+rax*1]
  42f166:	shrx   esi,esi,ecx
  42f16b:	and    esi,0x3
  42f16e:	jne    42f228 <strcmp@plt+0x2ba70>
  42f174:	lea    rsi,[r14+rdx*4]
  42f178:	lea    rdx,[r13+rdx*8+0x0]
  42f17d:	mov    edi,DWORD PTR [rsi]
  42f17f:	mov    DWORD PTR [rsi],r10d
  42f182:	mov    rsi,QWORD PTR [rdx]
  42f185:	mov    QWORD PTR [rdx],r15
  42f188:	mov    edx,0x1
  42f18d:	mov    r11,QWORD PTR [r12+0x10]
  42f192:	shlx   rcx,rdx,rcx
  42f197:	mov    r14,QWORD PTR [r12+0x18]
  42f19c:	mov    r13,QWORD PTR [r12+0x20]
  42f1a1:	mov    r10d,edi
  42f1a4:	mov    r15,rsi
  42f1a7:	or     DWORD PTR [r11+rax*1],ecx
  42f1ab:	jmp    42f100 <strcmp@plt+0x2b948>
  42f1b0:	cmp    eax,0x2
  42f1b3:	ja     42f2af <strcmp@plt+0x2baf7>
  42f1b9:	mov    ebx,0x3
  42f1be:	mov    DWORD PTR [rsp+0x1c],0x3
  42f1c6:	mov    DWORD PTR [rsp+0x4],0x4
  42f1ce:	mov    r13d,0x4
  42f1d4:	jmp    42eef2 <strcmp@plt+0x2b73a>
  42f1d9:	vxorpd xmm0,xmm0,xmm0
  42f1dd:	mov    ecx,edx
  42f1df:	vmovsd xmm2,QWORD PTR [rip+0x1cd11]        # 44bef8 <strcmp@plt+0x48740>
  42f1e7:	vcvtsi2sd xmm0,xmm0,rcx
  42f1ec:	vfmadd132sd xmm0,xmm2,QWORD PTR [rip+0x1ccfb]        # 44bef0 <strcmp@plt+0x48738>
  42f1f5:	vcvttsd2si rcx,xmm0
  42f1fa:	cmp    eax,ecx
  42f1fc:	mov    DWORD PTR [rsp+0x1c],ecx
  42f200:	jae    42f29d <strcmp@plt+0x2bae5>
  42f206:	cmp    edx,0xf
  42f209:	jbe    42f3c2 <strcmp@plt+0x2bc0a>
  42f20f:	mov    r13d,edx
  42f212:	mov    DWORD PTR [rsp+0x4],edx
  42f216:	shr    r13d,0x4
  42f21a:	shl    r13,0x2
  42f21e:	jmp    42f07e <strcmp@plt+0x2b8c6>
  42f223:	nop    DWORD PTR [rax+rax*1+0x0]
  42f228:	mov    DWORD PTR [r14+rdx*4],r10d
  42f22c:	mov    QWORD PTR [r13+rdx*8+0x0],r15
  42f231:	add    DWORD PTR [rsp],0x1
  42f235:	mov    eax,DWORD PTR [rsp]
  42f238:	cmp    eax,DWORD PTR [r12]
  42f23c:	jne    42f0b0 <strcmp@plt+0x2b8f8>
  42f242:	mov    edi,DWORD PTR [rsp+0x4]
  42f246:	cmp    eax,edi
  42f248:	ja     42f2c3 <strcmp@plt+0x2bb0b>
  42f24a:	mov    rdi,QWORD PTR [r12+0x10]
  42f24f:	call   4037b0 <free@plt>
  42f254:	mov    eax,DWORD PTR [rsp+0x4]
  42f258:	mov    QWORD PTR [r12+0x10],rbp
  42f25d:	mov    DWORD PTR [r12],eax
  42f261:	mov    eax,DWORD PTR [r12+0x4]
  42f266:	mov    DWORD PTR [r12+0x8],eax
  42f26b:	mov    eax,DWORD PTR [rsp+0x1c]
  42f26f:	mov    DWORD PTR [r12+0xc],eax
  42f274:	mov    rax,QWORD PTR [rsp+0x10]
  42f279:	mov    r14,QWORD PTR [rax]
  42f27c:	jmp    42ed22 <strcmp@plt+0x2b56a>
  42f281:	mov    DWORD PTR [r14+rdx*4],r10d
  42f285:	mov    QWORD PTR [r13+rdx*8+0x0],r15
  42f28a:	add    DWORD PTR [rsp],0x1
  42f28e:	mov    eax,DWORD PTR [rsp]
  42f291:	cmp    eax,DWORD PTR [r12]
  42f295:	jne    42ef28 <strcmp@plt+0x2b770>
  42f29b:	jmp    42f242 <strcmp@plt+0x2ba8a>
  42f29d:	mov    ebx,edi
  42f29f:	mov    rbp,QWORD PTR [r12+0x10]
  42f2a4:	mov    r14,r12
  42f2a7:	sub    ebx,0x1
  42f2aa:	jmp    42ed22 <strcmp@plt+0x2b56a>
  42f2af:	mov    eax,DWORD PTR [rsp+0x4]
  42f2b3:	mov    rbp,QWORD PTR [r12+0x10]
  42f2b8:	mov    r14,r12
  42f2bb:	lea    ebx,[rax-0x1]
  42f2be:	jmp    42ed22 <strcmp@plt+0x2b56a>
  42f2c3:	mov    r13d,edi
  42f2c6:	mov    rdi,QWORD PTR [r12+0x18]
  42f2cb:	lea    rsi,[r13*4+0x0]
  42f2d3:	call   403670 <realloc@plt>
  42f2d8:	mov    rdi,QWORD PTR [r12+0x20]
  42f2dd:	lea    rsi,[r13*8+0x0]
  42f2e5:	mov    QWORD PTR [r12+0x18],rax
  42f2ea:	call   403670 <realloc@plt>
  42f2ef:	mov    QWORD PTR [r12+0x20],rax
  42f2f4:	jmp    42f24a <strcmp@plt+0x2ba92>
  42f2f9:	mov    ecx,eax
  42f2fb:	add    eax,eax
  42f2fd:	shr    ecx,0x4
  42f300:	and    eax,0x1e
  42f303:	lea    r13,[rbp+rcx*4+0x0]
  42f308:	mov    r10d,eax
  42f30b:	shrx   r9d,DWORD PTR [r13+0x0],eax
  42f311:	mov    eax,r9d
  42f314:	and    eax,0x2
  42f317:	jmp    42edee <strcmp@plt+0x2b636>
  42f31c:	mov    r13d,eax
  42f31f:	mov    rdi,QWORD PTR [r12+0x18]
  42f324:	lea    rsi,[r13*4+0x0]
  42f32c:	call   403670 <realloc@plt>
  42f331:	mov    rdi,QWORD PTR [r12+0x20]
  42f336:	lea    rsi,[r13*8+0x0]
  42f33e:	mov    QWORD PTR [r12+0x18],rax
  42f343:	call   403670 <realloc@plt>
  42f348:	mov    edx,DWORD PTR [r12]
  42f34c:	mov    QWORD PTR [r12+0x20],rax
  42f351:	test   edx,edx
  42f353:	jne    42ef1b <strcmp@plt+0x2b763>
  42f359:	jmp    42f24a <strcmp@plt+0x2ba92>
  42f35e:	cmp    r11d,DWORD PTR [rsp+0x4]
  42f363:	jne    42edcc <strcmp@plt+0x2b614>
  42f369:	mov    edx,eax
  42f36b:	mov    r10d,ecx
  42f36e:	mov    r13,rsi
  42f371:	jmp    42ee39 <strcmp@plt+0x2b681>
  42f376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f380:	mov    r13d,eax
  42f383:	mov    rdi,QWORD PTR [r12+0x18]
  42f388:	lea    rsi,[r13*4+0x0]
  42f390:	call   403670 <realloc@plt>
  42f395:	mov    rdi,QWORD PTR [r12+0x20]
  42f39a:	lea    rsi,[r13*8+0x0]
  42f3a2:	mov    QWORD PTR [r12+0x18],rax
  42f3a7:	call   403670 <realloc@plt>
  42f3ac:	mov    QWORD PTR [r12+0x20],rax
  42f3b1:	mov    eax,DWORD PTR [r12]
  42f3b5:	test   eax,eax
  42f3b7:	jne    42f0a7 <strcmp@plt+0x2b8ef>
  42f3bd:	jmp    42f24a <strcmp@plt+0x2ba92>
  42f3c2:	mov    DWORD PTR [rsp+0x4],edx
  42f3c6:	mov    r13d,0x4
  42f3cc:	jmp    42f07e <strcmp@plt+0x2b8c6>
  42f3d1:	mov    DWORD PTR [rsp+0x4],edx
  42f3d5:	mov    r13d,0x4
  42f3db:	jmp    42eef2 <strcmp@plt+0x2b73a>
  42f3e0:	mov    edx,edi
  42f3e2:	jmp    42edf2 <strcmp@plt+0x2b63a>
  42f3e7:	nop    WORD PTR [rax+rax*1+0x0]
  42f3f0:	mov    r8,QWORD PTR [rdi]
  42f3f3:	mov    r11d,DWORD PTR [r8]
  42f3f6:	test   r11d,r11d
  42f3f9:	je     42f4c3 <strcmp@plt+0x2bd0b>
  42f3ff:	lea    ecx,[r11-0x1]
  42f403:	mov    edx,esi
  42f405:	lea    eax,[rsi*8+0x0]
  42f40c:	shr    edx,0x3
  42f40f:	push   r14
  42f411:	push   r13
  42f413:	mov    r9d,ecx
  42f416:	xor    edx,eax
  42f418:	push   r12
  42f41a:	and    r9d,esi
  42f41d:	or     edx,0x1
  42f420:	push   rbp
  42f421:	and    edx,ecx
  42f423:	push   rbx
  42f424:	mov    ebx,r9d
  42f427:	mov    r10,QWORD PTR [r8+0x10]
  42f42b:	jmp    42f44a <strcmp@plt+0x2bc92>
  42f42d:	nop    DWORD PTR [rax]
  42f430:	test   al,0x1
  42f432:	jne    42f441 <strcmp@plt+0x2bc89>
  42f434:	mov    r14,QWORD PTR [r8+0x18]
  42f438:	mov    r13d,ebx
  42f43b:	cmp    esi,DWORD PTR [r14+r13*4]
  42f43f:	je     42f46a <strcmp@plt+0x2bcb2>
  42f441:	add    ebx,edx
  42f443:	and    ebx,ecx
  42f445:	cmp    r9d,ebx
  42f448:	je     42f4bb <strcmp@plt+0x2bd03>
  42f44a:	mov    eax,ebx
  42f44c:	lea    ebp,[rbx+rbx*1]
  42f44f:	shr    eax,0x4
  42f452:	lea    r12,[rax*4+0x0]
  42f45a:	mov    eax,DWORD PTR [r10+rax*4]
  42f45e:	and    ebp,0x1e
  42f461:	shrx   eax,eax,ebp
  42f466:	test   al,0x2
  42f468:	je     42f430 <strcmp@plt+0x2bc78>
  42f46a:	test   al,0x3
  42f46c:	jne    42f4bb <strcmp@plt+0x2bd03>
  42f46e:	cmp    r11d,ebx
  42f471:	je     42f4bb <strcmp@plt+0x2bd03>
  42f473:	mov    rax,QWORD PTR [rdi+0x8]
  42f477:	test   rax,rax
  42f47a:	je     42f494 <strcmp@plt+0x2bcdc>
  42f47c:	mov    rdx,QWORD PTR [r8+0x20]
  42f480:	mov    r13,rdi
  42f483:	mov    ecx,ebx
  42f485:	mov    rdi,QWORD PTR [rdx+rcx*8]
  42f489:	call   rax
  42f48b:	mov    r8,QWORD PTR [r13+0x0]
  42f48f:	cmp    ebx,DWORD PTR [r8]
  42f492:	je     42f4bb <strcmp@plt+0x2bd03>
  42f494:	add    r12,QWORD PTR [r8+0x10]
  42f498:	mov    eax,DWORD PTR [r12]
  42f49c:	shrx   edx,eax,ebp
  42f4a1:	and    edx,0x3
  42f4a4:	jne    42f4bb <strcmp@plt+0x2bd03>
  42f4a6:	mov    edx,0x1
  42f4ab:	shlx   rbp,rdx,rbp
  42f4b0:	or     eax,ebp
  42f4b2:	mov    DWORD PTR [r12],eax
  42f4b6:	sub    DWORD PTR [r8+0x4],0x1
  42f4bb:	pop    rbx
  42f4bc:	pop    rbp
  42f4bd:	pop    r12
  42f4bf:	pop    r13
  42f4c1:	pop    r14
  42f4c3:	repz ret 
  42f4c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42f4d0:	push   rbp
  42f4d1:	push   rbx
  42f4d2:	xor    eax,eax
  42f4d4:	mov    rbx,QWORD PTR [rdi]
  42f4d7:	mov    ebp,DWORD PTR [rbx]
  42f4d9:	test   ebp,ebp
  42f4db:	je     42f557 <strcmp@plt+0x2bd9f>
  42f4dd:	lea    r9d,[rbp-0x1]
  42f4e1:	lea    eax,[rsi*8+0x0]
  42f4e8:	mov    r8d,esi
  42f4eb:	shr    r8d,0x3
  42f4ef:	mov    r11,QWORD PTR [rbx+0x10]
  42f4f3:	xor    r8d,eax
  42f4f6:	mov    r10d,r9d
  42f4f9:	and    r10d,esi
  42f4fc:	or     r8d,0x1
  42f500:	and    r8d,r9d
  42f503:	mov    eax,r10d
  42f506:	jmp    42f52b <strcmp@plt+0x2bd73>
  42f508:	nop    DWORD PTR [rax+rax*1+0x0]
  42f510:	test   dl,0x1
  42f513:	jne    42f520 <strcmp@plt+0x2bd68>
  42f515:	mov    rdi,QWORD PTR [rbx+0x18]
  42f519:	mov    ecx,eax
  42f51b:	cmp    esi,DWORD PTR [rdi+rcx*4]
  42f51e:	je     42f546 <strcmp@plt+0x2bd8e>
  42f520:	add    eax,r8d
  42f523:	and    eax,r9d
  42f526:	cmp    r10d,eax
  42f529:	je     42f560 <strcmp@plt+0x2bda8>
  42f52b:	lea    edx,[rax+rax*1]
  42f52e:	mov    edi,eax
  42f530:	shr    edi,0x4
  42f533:	mov    ecx,edx
  42f535:	mov    edx,DWORD PTR [r11+rdi*4]
  42f539:	and    ecx,0x1e
  42f53c:	shrx   edx,edx,ecx
  42f541:	test   dl,0x2
  42f544:	je     42f510 <strcmp@plt+0x2bd58>
  42f546:	and    edx,0x3
  42f549:	jne    42f560 <strcmp@plt+0x2bda8>
  42f54b:	cmp    ebp,eax
  42f54d:	je     42f560 <strcmp@plt+0x2bda8>
  42f54f:	mov    rdx,QWORD PTR [rbx+0x20]
  42f553:	mov    rax,QWORD PTR [rdx+rax*8]
  42f557:	pop    rbx
  42f558:	pop    rbp
  42f559:	ret    
  42f55a:	nop    WORD PTR [rax+rax*1+0x0]
  42f560:	xor    eax,eax
  42f562:	pop    rbx
  42f563:	pop    rbp
  42f564:	ret    
  42f565:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42f570:	test   rdi,rdi
  42f573:	je     42f600 <strcmp@plt+0x2be48>
  42f579:	push   r12
  42f57b:	push   rbp
  42f57c:	mov    r12,rdi
  42f57f:	push   rbx
  42f580:	mov    rbp,QWORD PTR [rdi]
  42f583:	mov    eax,DWORD PTR [rbp+0x0]
  42f586:	test   eax,eax
  42f588:	je     42f5cf <strcmp@plt+0x2be17>
  42f58a:	xor    ebx,ebx
  42f58c:	nop    DWORD PTR [rax+0x0]
  42f590:	mov    rsi,QWORD PTR [rbp+0x10]
  42f594:	lea    eax,[rbx+rbx*1]
  42f597:	mov    ecx,ebx
  42f599:	shr    ecx,0x4
  42f59c:	and    eax,0x1e
  42f59f:	mov    edx,eax
  42f5a1:	mov    eax,DWORD PTR [rsi+rcx*4]
  42f5a4:	shrx   eax,eax,edx
  42f5a9:	test   al,0x3
  42f5ab:	jne    42f5c7 <strcmp@plt+0x2be0f>
  42f5ad:	mov    rdx,QWORD PTR [r12+0x8]
  42f5b2:	test   rdx,rdx
  42f5b5:	je     42f5c7 <strcmp@plt+0x2be0f>
  42f5b7:	mov    rcx,QWORD PTR [rbp+0x20]
  42f5bb:	mov    eax,ebx
  42f5bd:	mov    rdi,QWORD PTR [rcx+rax*8]
  42f5c1:	call   rdx
  42f5c3:	mov    rbp,QWORD PTR [r12]
  42f5c7:	add    ebx,0x1
  42f5ca:	cmp    DWORD PTR [rbp+0x0],ebx
  42f5cd:	jne    42f590 <strcmp@plt+0x2bdd8>
  42f5cf:	mov    rdi,QWORD PTR [rbp+0x18]
  42f5d3:	call   4037b0 <free@plt>
  42f5d8:	mov    rdi,QWORD PTR [rbp+0x10]
  42f5dc:	call   4037b0 <free@plt>
  42f5e1:	mov    rdi,QWORD PTR [rbp+0x20]
  42f5e5:	call   4037b0 <free@plt>
  42f5ea:	mov    rdi,rbp
  42f5ed:	call   4037b0 <free@plt>
  42f5f2:	pop    rbx
  42f5f3:	mov    rdi,r12
  42f5f6:	pop    rbp
  42f5f7:	pop    r12
  42f5f9:	jmp    4037b0 <free@plt>
  42f5fe:	xchg   ax,ax
  42f600:	repz ret 
  42f602:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42f60d:	nop    DWORD PTR [rax]
  42f610:	push   r12
  42f612:	push   rbp
  42f613:	mov    r12,rdi
  42f616:	push   rbx
  42f617:	call   42d4e0 <strcmp@plt+0x29d28>
  42f61c:	mov    rsi,QWORD PTR [r12]
  42f620:	mov    rbp,rax
  42f623:	mov    eax,DWORD PTR [rsi]
  42f625:	test   eax,eax
  42f627:	je     42f671 <strcmp@plt+0x2beb9>
  42f629:	xor    ebx,ebx
  42f62b:	jmp    42f637 <strcmp@plt+0x2be7f>
  42f62d:	nop    DWORD PTR [rax]
  42f630:	add    ebx,0x1
  42f633:	cmp    DWORD PTR [rsi],ebx
  42f635:	je     42f671 <strcmp@plt+0x2beb9>
  42f637:	mov    rdi,QWORD PTR [rsi+0x10]
  42f63b:	lea    eax,[rbx+rbx*1]
  42f63e:	mov    ecx,ebx
  42f640:	shr    ecx,0x4
  42f643:	and    eax,0x1e
  42f646:	mov    edx,eax
  42f648:	mov    eax,DWORD PTR [rdi+rcx*4]
  42f64b:	shrx   eax,eax,edx
  42f650:	test   al,0x3
  42f652:	jne    42f630 <strcmp@plt+0x2be78>
  42f654:	mov    rdx,QWORD PTR [rsi+0x20]
  42f658:	mov    eax,ebx
  42f65a:	mov    rsi,rbp
  42f65d:	add    ebx,0x1
  42f660:	mov    rdi,QWORD PTR [rdx+rax*8]
  42f664:	call   42d540 <strcmp@plt+0x29d88>
  42f669:	mov    rsi,QWORD PTR [r12]
  42f66d:	cmp    DWORD PTR [rsi],ebx
  42f66f:	jne    42f637 <strcmp@plt+0x2be7f>
  42f671:	mov    rax,rbp
  42f674:	pop    rbx
  42f675:	pop    rbp
  42f676:	pop    r12
  42f678:	ret    
  42f679:	nop    DWORD PTR [rax+0x0]
  42f680:	push   r12
  42f682:	push   rbp
  42f683:	mov    rbp,rdi
  42f686:	push   rbx
  42f687:	sub    rsp,0x1010
  42f68e:	mov    rax,QWORD PTR fs:0x28
  42f697:	mov    QWORD PTR [rsp+0x1008],rax
  42f69f:	xor    eax,eax
  42f6a1:	call   4030b0 <if_nametoindex@plt>
  42f6a6:	xor    edx,edx
  42f6a8:	mov    esi,0x2
  42f6ad:	mov    edi,0x10
  42f6b2:	mov    r12d,eax
  42f6b5:	call   4030e0 <socket@plt>
  42f6ba:	test   eax,eax
  42f6bc:	js     42f770 <strcmp@plt+0x2bfb8>
  42f6c2:	mov    ebx,eax
  42f6c4:	mov    ecx,0x200
  42f6c9:	xor    eax,eax
  42f6cb:	mov    rdi,rsp
  42f6ce:	mov    edx,0x501
  42f6d3:	mov    rsi,rsp
  42f6d6:	rep stos QWORD PTR es:[rdi],rax
  42f6d9:	mov    edi,0x13
  42f6de:	mov    WORD PTR [rsp+0x6],dx
  42f6e3:	mov    edx,0x20
  42f6e8:	mov    WORD PTR [rsp+0x4],di
  42f6ed:	mov    edi,ebx
  42f6ef:	mov    DWORD PTR [rsp],0x20
  42f6f6:	mov    DWORD PTR [rsp+0x14],r12d
  42f6fb:	mov    DWORD PTR [rsp+0x18],0x41
  42f703:	mov    DWORD PTR [rsp+0x1c],0xffffffff
  42f70b:	call   403220 <send@plt>
  42f710:	test   eax,eax
  42f712:	js     42f790 <strcmp@plt+0x2bfd8>
  42f714:	mov    rax,0x468e3c
  42f71b:	mov    eax,DWORD PTR [rax]
  42f71d:	test   eax,eax
  42f71f:	jg     42f750 <strcmp@plt+0x2bf98>
  42f721:	mov    edi,ebx
  42f723:	call   403790 <close@plt>
  42f728:	mov    eax,0x1
  42f72d:	mov    rdx,QWORD PTR [rsp+0x1008]
  42f735:	xor    rdx,QWORD PTR fs:0x28
  42f73e:	jne    42f7c0 <strcmp@plt+0x2c008>
  42f744:	add    rsp,0x1010
  42f74b:	pop    rbx
  42f74c:	pop    rbp
  42f74d:	pop    r12
  42f74f:	ret    
  42f750:	lea    rsi,[rip+0x1ff9f]        # 44f6f6 <strcmp@plt+0x4bf3e>
  42f757:	mov    rdx,rbp
  42f75a:	mov    edi,0x5
  42f75f:	xor    eax,eax
  42f761:	call   4306a0 <strcmp@plt+0x2cee8>
  42f766:	jmp    42f721 <strcmp@plt+0x2bf69>
  42f768:	nop    DWORD PTR [rax+rax*1+0x0]
  42f770:	lea    rsi,[rip+0x1fcc1]        # 44f438 <strcmp@plt+0x4bc80>
  42f777:	xor    eax,eax
  42f779:	mov    edi,0x2
  42f77e:	call   4306a0 <strcmp@plt+0x2cee8>
  42f783:	xor    eax,eax
  42f785:	jmp    42f72d <strcmp@plt+0x2bf75>
  42f787:	nop    WORD PTR [rax+rax*1+0x0]
  42f790:	call   403050 <__errno_location@plt>
  42f795:	mov    edi,DWORD PTR [rax]
  42f797:	call   403170 <strerror@plt>
  42f79c:	lea    rsi,[rip+0x1fccd]        # 44f470 <strcmp@plt+0x4bcb8>
  42f7a3:	mov    rdx,rax
  42f7a6:	mov    edi,0x2
  42f7ab:	xor    eax,eax
  42f7ad:	call   4306a0 <strcmp@plt+0x2cee8>
  42f7b2:	mov    edi,ebx
  42f7b4:	call   403790 <close@plt>
  42f7b9:	xor    eax,eax
  42f7bb:	jmp    42f72d <strcmp@plt+0x2bf75>
  42f7c0:	call   403460 <__stack_chk_fail@plt>
  42f7c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42f7d0:	push   r15
  42f7d2:	push   r14
  42f7d4:	mov    r14d,edx
  42f7d7:	push   r13
  42f7d9:	push   r12
  42f7db:	mov    r12,rsi
  42f7de:	push   rbp
  42f7df:	push   rbx
  42f7e0:	sub    rsp,0x38
  42f7e4:	mov    rax,QWORD PTR fs:0x28
  42f7ed:	mov    QWORD PTR [rsp+0x28],rax
  42f7f2:	xor    eax,eax
  42f7f4:	test   edi,edi
  42f7f6:	je     42f840 <strcmp@plt+0x2c088>
  42f7f8:	cmp    edi,0x1
  42f7fb:	mov    r13d,0x1002
  42f801:	je     42f846 <strcmp@plt+0x2c08e>
  42f803:	lea    rsi,[rip+0x1fc8e]        # 44f498 <strcmp@plt+0x4bce0>
  42f80a:	mov    edi,0x1
  42f80f:	xor    eax,eax
  42f811:	xor    ebx,ebx
  42f813:	call   4306a0 <strcmp@plt+0x2cee8>
  42f818:	mov    rcx,QWORD PTR [rsp+0x28]
  42f81d:	xor    rcx,QWORD PTR fs:0x28
  42f826:	mov    eax,ebx
  42f828:	jne    42fa8c <strcmp@plt+0x2c2d4>
  42f82e:	add    rsp,0x38
  42f832:	pop    rbx
  42f833:	pop    rbp
  42f834:	pop    r12
  42f836:	pop    r13
  42f838:	pop    r14
  42f83a:	pop    r15
  42f83c:	ret    
  42f83d:	nop    DWORD PTR [rax]
  42f840:	mov    r13d,0x1003
  42f846:	lea    rdi,[rip+0x1feba]        # 44f707 <strcmp@plt+0x4bf4f>
  42f84d:	xor    eax,eax
  42f84f:	mov    esi,0x2
  42f854:	call   403300 <open@plt>
  42f859:	test   eax,eax
  42f85b:	mov    ebx,eax
  42f85d:	js     42fa10 <strcmp@plt+0x2c258>
  42f863:	mov    edx,0xf
  42f868:	mov    rsi,r12
  42f86b:	mov    rdi,rsp
  42f86e:	mov    QWORD PTR [rsp+0x10],0x0
  42f877:	mov    QWORD PTR [rsp],0x0
  42f87f:	mov    rbp,rsp
  42f882:	mov    QWORD PTR [rsp+0x8],0x0
  42f88b:	mov    QWORD PTR [rsp+0x18],0x0
  42f894:	mov    QWORD PTR [rsp+0x20],0x0
  42f89d:	mov    WORD PTR [rsp+0x10],r13w
  42f8a3:	call   403240 <strncpy@plt>
  42f8a8:	xor    eax,eax
  42f8aa:	mov    rdx,rsp
  42f8ad:	mov    esi,0x400454ca
  42f8b2:	mov    edi,ebx
  42f8b4:	call   403590 <ioctl@plt>
  42f8b9:	test   eax,eax
  42f8bb:	js     42f968 <strcmp@plt+0x2c1b0>
  42f8c1:	xor    edx,edx
  42f8c3:	mov    esi,0x2
  42f8c8:	mov    edi,0x2
  42f8cd:	call   4030e0 <socket@plt>
  42f8d2:	mov    rdx,rsp
  42f8d5:	mov    edi,eax
  42f8d7:	mov    r13d,eax
  42f8da:	mov    esi,0x8933
  42f8df:	xor    eax,eax
  42f8e1:	call   403590 <ioctl@plt>
  42f8e6:	test   eax,eax
  42f8e8:	js     42fa30 <strcmp@plt+0x2c278>
  42f8ee:	mov    r15,0x468e3c
  42f8f5:	cmp    DWORD PTR [r15],0x2
  42f8f9:	jle    42f912 <strcmp@plt+0x2c15a>
  42f8fb:	mov    edx,DWORD PTR [rsp+0x10]
  42f8ff:	lea    rsi,[rip+0x1fe0e]        # 44f714 <strcmp@plt+0x4bf5c>
  42f906:	mov    edi,0x7
  42f90b:	xor    eax,eax
  42f90d:	call   4306a0 <strcmp@plt+0x2cee8>
  42f912:	xor    eax,eax
  42f914:	mov    rdx,rbp
  42f917:	mov    esi,0x8922
  42f91c:	mov    edi,r13d
  42f91f:	mov    DWORD PTR [rsp+0x10],r14d
  42f924:	call   403590 <ioctl@plt>
  42f929:	test   eax,eax
  42f92b:	js     42fa60 <strcmp@plt+0x2c2a8>
  42f931:	mov    eax,DWORD PTR [r15]
  42f934:	test   eax,eax
  42f936:	jg     42f9e0 <strcmp@plt+0x2c228>
  42f93c:	mov    edi,r13d
  42f93f:	call   403790 <close@plt>
  42f944:	cmp    DWORD PTR [r15],0x1
  42f948:	jg     42f9b8 <strcmp@plt+0x2c200>
  42f94a:	mov    rdi,r12
  42f94d:	call   42f680 <strcmp@plt+0x2bec8>
  42f952:	cmp    eax,0x1
  42f955:	je     42f818 <strcmp@plt+0x2c060>
  42f95b:	xor    ebx,ebx
  42f95d:	jmp    42f818 <strcmp@plt+0x2c060>
  42f962:	nop    WORD PTR [rax+rax*1+0x0]
  42f968:	mov    edi,ebx
  42f96a:	call   403790 <close@plt>
  42f96f:	call   403050 <__errno_location@plt>
  42f974:	mov    edi,DWORD PTR [rax]
  42f976:	mov    rbx,rax
  42f979:	call   403170 <strerror@plt>
  42f97e:	lea    rsi,[rip+0x1fb63]        # 44f4e8 <strcmp@plt+0x4bd30>
  42f985:	mov    rdx,rax
  42f988:	mov    edi,0x1
  42f98d:	xor    eax,eax
  42f98f:	call   4306a0 <strcmp@plt+0x2cee8>
  42f994:	cmp    DWORD PTR [rbx],0x10
  42f997:	jne    42f95b <strcmp@plt+0x2c1a3>
  42f999:	lea    rsi,[rip+0x1fb78]        # 44f518 <strcmp@plt+0x4bd60>
  42f9a0:	mov    edi,0x1
  42f9a5:	xor    eax,eax
  42f9a7:	xor    ebx,ebx
  42f9a9:	call   4306a0 <strcmp@plt+0x2cee8>
  42f9ae:	jmp    42f818 <strcmp@plt+0x2c060>
  42f9b3:	nop    DWORD PTR [rax+rax*1+0x0]
  42f9b8:	lea    rsi,[rip+0x1fd82]        # 44f741 <strcmp@plt+0x4bf89>
  42f9bf:	xor    eax,eax
  42f9c1:	mov    edx,ebx
  42f9c3:	mov    edi,0x6
  42f9c8:	call   4306a0 <strcmp@plt+0x2cee8>
  42f9cd:	mov    rdi,r12
  42f9d0:	call   42f680 <strcmp@plt+0x2bec8>
  42f9d5:	cmp    eax,0x1
  42f9d8:	jne    42f95b <strcmp@plt+0x2c1a3>
  42f9da:	jmp    42f818 <strcmp@plt+0x2c060>
  42f9df:	nop
  42f9e0:	lea    rsi,[rip+0x1fd44]        # 44f72b <strcmp@plt+0x4bf73>
  42f9e7:	xor    eax,eax
  42f9e9:	mov    edx,r14d
  42f9ec:	mov    edi,0x5
  42f9f1:	call   4306a0 <strcmp@plt+0x2cee8>
  42f9f6:	mov    edi,r13d
  42f9f9:	call   403790 <close@plt>
  42f9fe:	cmp    DWORD PTR [r15],0x1
  42fa02:	jle    42f94a <strcmp@plt+0x2c192>
  42fa08:	jmp    42f9b8 <strcmp@plt+0x2c200>
  42fa0a:	nop    WORD PTR [rax+rax*1+0x0]
  42fa10:	lea    rsi,[rip+0x1faa9]        # 44f4c0 <strcmp@plt+0x4bd08>
  42fa17:	mov    edi,0x1
  42fa1c:	xor    eax,eax
  42fa1e:	xor    ebx,ebx
  42fa20:	call   4306a0 <strcmp@plt+0x2cee8>
  42fa25:	jmp    42f818 <strcmp@plt+0x2c060>
  42fa2a:	nop    WORD PTR [rax+rax*1+0x0]
  42fa30:	mov    edi,ebx
  42fa32:	xor    ebx,ebx
  42fa34:	call   403790 <close@plt>
  42fa39:	mov    edi,r13d
  42fa3c:	call   403790 <close@plt>
  42fa41:	call   403050 <__errno_location@plt>
  42fa46:	mov    edx,DWORD PTR [rax]
  42fa48:	lea    rsi,[rip+0x1fb01]        # 44f550 <strcmp@plt+0x4bd98>
  42fa4f:	mov    edi,0x1
  42fa54:	xor    eax,eax
  42fa56:	call   4306a0 <strcmp@plt+0x2cee8>
  42fa5b:	jmp    42f818 <strcmp@plt+0x2c060>
  42fa60:	mov    edi,r13d
  42fa63:	xor    ebx,ebx
  42fa65:	call   403790 <close@plt>
  42fa6a:	call   403050 <__errno_location@plt>
  42fa6f:	mov    ecx,DWORD PTR [rax]
  42fa71:	lea    rsi,[rip+0x1fb20]        # 44f598 <strcmp@plt+0x4bde0>
  42fa78:	mov    edx,r14d
  42fa7b:	mov    edi,0x1
  42fa80:	xor    eax,eax
  42fa82:	call   4306a0 <strcmp@plt+0x2cee8>
  42fa87:	jmp    42f818 <strcmp@plt+0x2c060>
  42fa8c:	call   403460 <__stack_chk_fail@plt>
  42fa91:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42fa9c:	nop    DWORD PTR [rax+0x0]
  42faa0:	push   r15
  42faa2:	push   r14
  42faa4:	push   r13
  42faa6:	push   r12
  42faa8:	mov    r13,rdi
  42faab:	push   rbp
  42faac:	push   rbx
  42faad:	mov    rbx,rsi
  42fab0:	sub    rsp,0x1018
  42fab7:	mov    rax,QWORD PTR fs:0x28
  42fac0:	mov    QWORD PTR [rsp+0x1008],rax
  42fac8:	xor    eax,eax
  42faca:	call   4030b0 <if_nametoindex@plt>
  42facf:	xor    edx,edx
  42fad1:	mov    esi,0x2
  42fad6:	mov    edi,0x10
  42fadb:	mov    r14d,eax
  42fade:	call   4030e0 <socket@plt>
  42fae3:	test   eax,eax
  42fae5:	js     42fc30 <strcmp@plt+0x2c478>
  42faeb:	mov    rdi,rbx
  42faee:	mov    ebp,eax
  42faf0:	call   4251c0 <strcmp@plt+0x21a08>
  42faf5:	cmp    ax,0x2
  42faf9:	je     42fc18 <strcmp@plt+0x2c460>
  42faff:	cmp    ax,0xa
  42fb03:	jne    42fbd0 <strcmp@plt+0x2c418>
  42fb09:	mov    r15d,0x14
  42fb0f:	mov    edx,0xffffff80
  42fb14:	mov    esi,0x2c
  42fb19:	xor    eax,eax
  42fb1b:	mov    ecx,0x200
  42fb20:	mov    rdi,rsp
  42fb23:	rep stos QWORD PTR es:[rdi],rax
  42fb26:	mov    ecx,0x501
  42fb2b:	mov    DWORD PTR [rsp],esi
  42fb2e:	mov    rdi,rbx
  42fb31:	mov    esi,0x14
  42fb36:	mov    WORD PTR [rsp+0x6],cx
  42fb3b:	mov    BYTE PTR [rsp+0x11],dl
  42fb3f:	mov    WORD PTR [rsp+0x4],si
  42fb44:	call   4251c0 <strcmp@plt+0x21a08>
  42fb49:	mov    edi,0x2
  42fb4e:	mov    rsi,rbx
  42fb51:	mov    BYTE PTR [rsp+0x10],al
  42fb55:	mov    WORD PTR [rsp+0x1a],di
  42fb5a:	lea    rdi,[rsp+0x1c]
  42fb5f:	mov    DWORD PTR [rsp+0x14],r14d
  42fb64:	mov    BYTE PTR [rsp+0x13],0x0
  42fb69:	mov    BYTE PTR [rsp+0x12],0x0
  42fb6e:	mov    WORD PTR [rsp+0x18],r15w
  42fb74:	call   424bc0 <strcmp@plt+0x21408>
  42fb79:	mov    edx,DWORD PTR [rsp]
  42fb7c:	xor    ecx,ecx
  42fb7e:	mov    rsi,rsp
  42fb81:	mov    edi,ebp
  42fb83:	call   403220 <send@plt>
  42fb88:	test   eax,eax
  42fb8a:	js     42fc50 <strcmp@plt+0x2c498>
  42fb90:	mov    rax,0x468e3c
  42fb97:	mov    eax,DWORD PTR [rax]
  42fb99:	test   eax,eax
  42fb9b:	jle    42fbbe <strcmp@plt+0x2c406>
  42fb9d:	mov    rdi,rbx
  42fba0:	call   424890 <strcmp@plt+0x210d8>
  42fba5:	lea    rsi,[rip+0x1fbb1]        # 44f75d <strcmp@plt+0x4bfa5>
  42fbac:	mov    rdx,rax
  42fbaf:	mov    rcx,r13
  42fbb2:	mov    edi,0x5
  42fbb7:	xor    eax,eax
  42fbb9:	call   4306a0 <strcmp@plt+0x2cee8>
  42fbbe:	mov    edi,ebp
  42fbc0:	call   403790 <close@plt>
  42fbc5:	mov    eax,0x1
  42fbca:	jmp    42fbf0 <strcmp@plt+0x2c438>
  42fbcc:	nop    DWORD PTR [rax+0x0]
  42fbd0:	mov    rdi,rbx
  42fbd3:	call   424890 <strcmp@plt+0x210d8>
  42fbd8:	lea    rsi,[rip+0x1fa29]        # 44f608 <strcmp@plt+0x4be50>
  42fbdf:	mov    rdx,rax
  42fbe2:	mov    edi,0x2
  42fbe7:	xor    eax,eax
  42fbe9:	call   4306a0 <strcmp@plt+0x2cee8>
  42fbee:	xor    eax,eax
  42fbf0:	mov    rcx,QWORD PTR [rsp+0x1008]
  42fbf8:	xor    rcx,QWORD PTR fs:0x28
  42fc01:	jne    42fc80 <strcmp@plt+0x2c4c8>
  42fc03:	add    rsp,0x1018
  42fc0a:	pop    rbx
  42fc0b:	pop    rbp
  42fc0c:	pop    r12
  42fc0e:	pop    r13
  42fc10:	pop    r14
  42fc12:	pop    r15
  42fc14:	ret    
  42fc15:	nop    DWORD PTR [rax]
  42fc18:	mov    r15d,0x8
  42fc1e:	mov    edx,0x20
  42fc23:	mov    esi,0x20
  42fc28:	jmp    42fb19 <strcmp@plt+0x2c361>
  42fc2d:	nop    DWORD PTR [rax]
  42fc30:	lea    rsi,[rip+0x1f999]        # 44f5d0 <strcmp@plt+0x4be18>
  42fc37:	xor    eax,eax
  42fc39:	mov    edi,0x2
  42fc3e:	call   4306a0 <strcmp@plt+0x2cee8>
  42fc43:	xor    eax,eax
  42fc45:	jmp    42fbf0 <strcmp@plt+0x2c438>
  42fc47:	nop    WORD PTR [rax+rax*1+0x0]
  42fc50:	call   403050 <__errno_location@plt>
  42fc55:	mov    edi,DWORD PTR [rax]
  42fc57:	call   403170 <strerror@plt>
  42fc5c:	lea    rsi,[rip+0x1f9d5]        # 44f638 <strcmp@plt+0x4be80>
  42fc63:	mov    rdx,rax
  42fc66:	mov    edi,0x2
  42fc6b:	xor    eax,eax
  42fc6d:	call   4306a0 <strcmp@plt+0x2cee8>
  42fc72:	mov    edi,ebp
  42fc74:	call   403790 <close@plt>
  42fc79:	xor    eax,eax
  42fc7b:	jmp    42fbf0 <strcmp@plt+0x2c438>
  42fc80:	call   403460 <__stack_chk_fail@plt>
  42fc85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42fc90:	push   r15
  42fc92:	push   r14
  42fc94:	push   r13
  42fc96:	push   r12
  42fc98:	mov    r13,rdi
  42fc9b:	push   rbp
  42fc9c:	push   rbx
  42fc9d:	mov    rbx,rsi
  42fca0:	sub    rsp,0x1018
  42fca7:	mov    rax,QWORD PTR fs:0x28
  42fcb0:	mov    QWORD PTR [rsp+0x1008],rax
  42fcb8:	xor    eax,eax
  42fcba:	call   4030b0 <if_nametoindex@plt>
  42fcbf:	xor    edx,edx
  42fcc1:	mov    esi,0x2
  42fcc6:	mov    edi,0x10
  42fccb:	mov    r14d,eax
  42fcce:	call   4030e0 <socket@plt>
  42fcd3:	test   eax,eax
  42fcd5:	js     42fe20 <strcmp@plt+0x2c668>
  42fcdb:	mov    rdi,rbx
  42fcde:	mov    ebp,eax
  42fce0:	call   4251c0 <strcmp@plt+0x21a08>
  42fce5:	cmp    ax,0x2
  42fce9:	je     42fe08 <strcmp@plt+0x2c650>
  42fcef:	cmp    ax,0xa
  42fcf3:	jne    42fdc0 <strcmp@plt+0x2c608>
  42fcf9:	mov    r15d,0x14
  42fcff:	mov    edx,0xffffff80
  42fd04:	mov    esi,0x2c
  42fd09:	xor    eax,eax
  42fd0b:	mov    ecx,0x200
  42fd10:	mov    rdi,rsp
  42fd13:	rep stos QWORD PTR es:[rdi],rax
  42fd16:	mov    ecx,0x501
  42fd1b:	mov    DWORD PTR [rsp],esi
  42fd1e:	mov    rdi,rbx
  42fd21:	mov    esi,0x15
  42fd26:	mov    WORD PTR [rsp+0x6],cx
  42fd2b:	mov    BYTE PTR [rsp+0x11],dl
  42fd2f:	mov    WORD PTR [rsp+0x4],si
  42fd34:	call   4251c0 <strcmp@plt+0x21a08>
  42fd39:	mov    edi,0x2
  42fd3e:	mov    rsi,rbx
  42fd41:	mov    BYTE PTR [rsp+0x10],al
  42fd45:	mov    WORD PTR [rsp+0x1a],di
  42fd4a:	lea    rdi,[rsp+0x1c]
  42fd4f:	mov    DWORD PTR [rsp+0x14],r14d
  42fd54:	mov    BYTE PTR [rsp+0x13],0x0
  42fd59:	mov    BYTE PTR [rsp+0x12],0x0
  42fd5e:	mov    WORD PTR [rsp+0x18],r15w
  42fd64:	call   424bc0 <strcmp@plt+0x21408>
  42fd69:	mov    edx,DWORD PTR [rsp]
  42fd6c:	xor    ecx,ecx
  42fd6e:	mov    rsi,rsp
  42fd71:	mov    edi,ebp
  42fd73:	call   403220 <send@plt>
  42fd78:	test   eax,eax
  42fd7a:	js     42fe40 <strcmp@plt+0x2c688>
  42fd80:	mov    rax,0x468e3c
  42fd87:	mov    eax,DWORD PTR [rax]
  42fd89:	test   eax,eax
  42fd8b:	jle    42fdae <strcmp@plt+0x2c5f6>
  42fd8d:	mov    rdi,rbx
  42fd90:	call   424890 <strcmp@plt+0x210d8>
  42fd95:	lea    rsi,[rip+0x1f9db]        # 44f777 <strcmp@plt+0x4bfbf>
  42fd9c:	mov    rdx,rax
  42fd9f:	mov    rcx,r13
  42fda2:	mov    edi,0x5
  42fda7:	xor    eax,eax
  42fda9:	call   4306a0 <strcmp@plt+0x2cee8>
  42fdae:	mov    edi,ebp
  42fdb0:	call   403790 <close@plt>
  42fdb5:	mov    eax,0x1
  42fdba:	jmp    42fde0 <strcmp@plt+0x2c628>
  42fdbc:	nop    DWORD PTR [rax+0x0]
  42fdc0:	mov    rdi,rbx
  42fdc3:	call   424890 <strcmp@plt+0x210d8>
  42fdc8:	lea    rsi,[rip+0x1f8d1]        # 44f6a0 <strcmp@plt+0x4bee8>
  42fdcf:	mov    rdx,rax
  42fdd2:	mov    edi,0x2
  42fdd7:	xor    eax,eax
  42fdd9:	call   4306a0 <strcmp@plt+0x2cee8>
  42fdde:	xor    eax,eax
  42fde0:	mov    rcx,QWORD PTR [rsp+0x1008]
  42fde8:	xor    rcx,QWORD PTR fs:0x28
  42fdf1:	jne    42fe70 <strcmp@plt+0x2c6b8>
  42fdf3:	add    rsp,0x1018
  42fdfa:	pop    rbx
  42fdfb:	pop    rbp
  42fdfc:	pop    r12
  42fdfe:	pop    r13
  42fe00:	pop    r14
  42fe02:	pop    r15
  42fe04:	ret    
  42fe05:	nop    DWORD PTR [rax]
  42fe08:	mov    r15d,0x8
  42fe0e:	mov    edx,0x20
  42fe13:	mov    esi,0x20
  42fe18:	jmp    42fd09 <strcmp@plt+0x2c551>
  42fe1d:	nop    DWORD PTR [rax]
  42fe20:	lea    rsi,[rip+0x1f839]        # 44f660 <strcmp@plt+0x4bea8>
  42fe27:	xor    eax,eax
  42fe29:	mov    edi,0x2
  42fe2e:	call   4306a0 <strcmp@plt+0x2cee8>
  42fe33:	xor    eax,eax
  42fe35:	jmp    42fde0 <strcmp@plt+0x2c628>
  42fe37:	nop    WORD PTR [rax+rax*1+0x0]
  42fe40:	call   403050 <__errno_location@plt>
  42fe45:	mov    edi,DWORD PTR [rax]
  42fe47:	call   403170 <strerror@plt>
  42fe4c:	lea    rsi,[rip+0x1f87d]        # 44f6d0 <strcmp@plt+0x4bf18>
  42fe53:	mov    rdx,rax
  42fe56:	mov    edi,0x2
  42fe5b:	xor    eax,eax
  42fe5d:	call   4306a0 <strcmp@plt+0x2cee8>
  42fe62:	mov    edi,ebp
  42fe64:	call   403790 <close@plt>
  42fe69:	xor    eax,eax
  42fe6b:	jmp    42fde0 <strcmp@plt+0x2c628>
  42fe70:	call   403460 <__stack_chk_fail@plt>
  42fe75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fe7f:	nop
  42fe80:	push   r14
  42fe82:	push   r13
  42fe84:	push   r12
  42fe86:	push   rbp
  42fe87:	mov    ebp,esi
  42fe89:	push   rbx
  42fe8a:	mov    rbx,rdi
  42fe8d:	lea    r13d,[rbp+rdx*1+0x0]
  42fe92:	mov    r12,QWORD PTR [rbx+0x38]
  42fe96:	add    r13d,DWORD PTR [rdi+0x14]
  42fe9a:	mov    r14d,ebp
  42fe9d:	mov    rdi,QWORD PTR [rdi+0x30]
  42fea1:	sub    r12,rdi
  42fea4:	sub    r14d,r12d
  42fea7:	cmp    ebp,r12d
  42feaa:	je     42ff58 <strcmp@plt+0x2c7a0>
  42feb0:	mov    edi,r13d
  42feb3:	call   4347a0 <strcmp@plt+0x30fe8>
  42feb8:	mov    edx,DWORD PTR [rbx+0x14]
  42febb:	mov    rsi,QWORD PTR [rbx+0x38]
  42febf:	add    rbp,rax
  42fec2:	mov    rdi,rbp
  42fec5:	mov    r12,rax
  42fec8:	call   403340 <memcpy@plt>
  42fecd:	mov    rdi,QWORD PTR [rbx+0x30]
  42fed1:	call   4037b0 <free@plt>
  42fed6:	movzx  eax,WORD PTR [rbx+0x1a]
  42feda:	mov    QWORD PTR [rbx+0x30],r12
  42fede:	cmp    ax,0xffff
  42fee2:	je     42feeb <strcmp@plt+0x2c733>
  42fee4:	add    eax,r14d
  42fee7:	mov    WORD PTR [rbx+0x1a],ax
  42feeb:	movzx  eax,WORD PTR [rbx+0x1c]
  42feef:	cmp    ax,0xffff
  42fef3:	je     42fefc <strcmp@plt+0x2c744>
  42fef5:	add    eax,r14d
  42fef8:	mov    WORD PTR [rbx+0x1c],ax
  42fefc:	movzx  eax,WORD PTR [rbx+0x1e]
  42ff00:	cmp    ax,0xffff
  42ff04:	je     42ff0d <strcmp@plt+0x2c755>
  42ff06:	add    eax,r14d
  42ff09:	mov    WORD PTR [rbx+0x1e],ax
  42ff0d:	movzx  eax,WORD PTR [rbx+0x20]
  42ff11:	cmp    ax,0xffff
  42ff15:	je     42ff1e <strcmp@plt+0x2c766>
  42ff17:	add    eax,r14d
  42ff1a:	mov    WORD PTR [rbx+0x20],ax
  42ff1e:	movzx  eax,WORD PTR [rbx+0x22]
  42ff22:	cmp    ax,0xffff
  42ff26:	je     42ff2f <strcmp@plt+0x2c777>
  42ff28:	add    eax,r14d
  42ff2b:	mov    WORD PTR [rbx+0x22],ax
  42ff2f:	movzx  eax,WORD PTR [rbx+0x24]
  42ff33:	cmp    ax,0xffff
  42ff37:	je     42ff41 <strcmp@plt+0x2c789>
  42ff39:	add    r14d,eax
  42ff3c:	mov    WORD PTR [rbx+0x24],r14w
  42ff41:	mov    DWORD PTR [rbx+0x10],r13d
  42ff45:	mov    QWORD PTR [rbx+0x38],rbp
  42ff49:	pop    rbx
  42ff4a:	pop    rbp
  42ff4b:	pop    r12
  42ff4d:	pop    r13
  42ff4f:	pop    r14
  42ff51:	ret    
  42ff52:	nop    WORD PTR [rax+rax*1+0x0]
  42ff58:	mov    esi,r13d
  42ff5b:	mov    r12d,r12d
  42ff5e:	call   4347d0 <strcmp@plt+0x31018>
  42ff63:	mov    QWORD PTR [rbx+0x30],rax
  42ff67:	lea    rbp,[rax+r12*1]
  42ff6b:	jmp    42ff41 <strcmp@plt+0x2c789>
  42ff6d:	nop    DWORD PTR [rax]
  42ff70:	mov    QWORD PTR [rdi+0x30],rsi
  42ff74:	mov    QWORD PTR [rdi+0x38],rsi
  42ff78:	mov    eax,0xffffffff
  42ff7d:	mov    DWORD PTR [rdi+0x10],edx
  42ff80:	mov    ecx,0xffffffff
  42ff85:	mov    edx,0xffffffff
  42ff8a:	mov    esi,0xffffffff
  42ff8f:	mov    r8d,0xffffffff
  42ff95:	mov    r9d,0xffffffff
  42ff9b:	mov    DWORD PTR [rdi+0x28],0x0
  42ffa2:	mov    DWORD PTR [rdi+0x14],0x0
  42ffa9:	mov    WORD PTR [rdi+0x22],ax
  42ffad:	mov    WORD PTR [rdi+0x20],dx
  42ffb1:	mov    WORD PTR [rdi+0x1e],cx
  42ffb5:	mov    WORD PTR [rdi+0x1c],si
  42ffb9:	mov    WORD PTR [rdi+0x1a],r8w
  42ffbe:	mov    WORD PTR [rdi+0x24],r9w
  42ffc3:	ret    
  42ffc4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42ffcf:	nop
  42ffd0:	mov    QWORD PTR [rdi+0x30],rsi
  42ffd4:	mov    QWORD PTR [rdi+0x38],rsi
  42ffd8:	mov    eax,0xffffffff
  42ffdd:	mov    DWORD PTR [rdi+0x10],edx
  42ffe0:	mov    ecx,0xffffffff
  42ffe5:	mov    edx,0xffffffff
  42ffea:	mov    esi,0xffffffff
  42ffef:	mov    r8d,0xffffffff
  42fff5:	mov    r9d,0xffffffff
  42fffb:	mov    DWORD PTR [rdi+0x28],0x1
  430002:	mov    DWORD PTR [rdi+0x14],0x0
  430009:	mov    WORD PTR [rdi+0x22],ax
  43000d:	mov    WORD PTR [rdi+0x20],dx
  430011:	mov    WORD PTR [rdi+0x1e],cx
  430015:	mov    WORD PTR [rdi+0x1c],si
  430019:	mov    WORD PTR [rdi+0x1a],r8w
  43001e:	mov    WORD PTR [rdi+0x24],r9w
  430023:	ret    
  430024:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43002f:	nop
  430030:	push   rbp
  430031:	push   rbx
  430032:	mov    ebx,esi
  430034:	xor    esi,esi
  430036:	mov    rbp,rdi
  430039:	sub    rsp,0x8
  43003d:	test   ebx,ebx
  43003f:	je     43004b <strcmp@plt+0x2c893>
  430041:	mov    edi,ebx
  430043:	call   434790 <strcmp@plt+0x30fd8>
  430048:	mov    rsi,rax
  43004b:	add    rsp,0x8
  43004f:	mov    edx,ebx
  430051:	mov    rdi,rbp
  430054:	pop    rbx
  430055:	pop    rbp
  430056:	jmp    42ff70 <strcmp@plt+0x2c7b8>
  43005b:	nop    DWORD PTR [rax+rax*1+0x0]
  430060:	test   rdi,rdi
  430063:	je     43006c <strcmp@plt+0x2c8b4>
  430065:	mov    eax,DWORD PTR [rdi+0x28]
  430068:	test   eax,eax
  43006a:	je     430070 <strcmp@plt+0x2c8b8>
  43006c:	repz ret 
  43006e:	xchg   ax,ax
  430070:	mov    rdi,QWORD PTR [rdi+0x30]
  430074:	jmp    4037b0 <free@plt>
  430079:	nop    DWORD PTR [rax+0x0]
  430080:	push   rbp
  430081:	push   rbx
  430082:	mov    ebp,edi
  430084:	mov    edi,0x40
  430089:	sub    rsp,0x8
  43008d:	call   434790 <strcmp@plt+0x30fd8>
  430092:	mov    esi,ebp
  430094:	mov    rdi,rax
  430097:	mov    rbx,rax
  43009a:	call   430030 <strcmp@plt+0x2c878>
  43009f:	add    rsp,0x8
  4300a3:	mov    rax,rbx
  4300a6:	pop    rbx
  4300a7:	pop    rbp
  4300a8:	ret    
  4300a9:	nop    DWORD PTR [rax+0x0]
  4300b0:	test   rdi,rdi
  4300b3:	je     4300d0 <strcmp@plt+0x2c918>
  4300b5:	push   rbx
  4300b6:	mov    rbx,rdi
  4300b9:	call   430060 <strcmp@plt+0x2c8a8>
  4300be:	mov    rdi,rbx
  4300c1:	pop    rbx
  4300c2:	jmp    4037b0 <free@plt>
  4300c7:	nop    WORD PTR [rax+rax*1+0x0]
  4300d0:	repz ret 
  4300d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4300dd:	nop    DWORD PTR [rax]
  4300e0:	mov    eax,DWORD PTR [rdi+0x10]
  4300e3:	mov    edx,DWORD PTR [rdi+0x14]
  4300e6:	mov    r8,QWORD PTR [rdi+0x30]
  4300ea:	mov    rcx,QWORD PTR [rdi+0x38]
  4300ee:	add    rax,r8
  4300f1:	add    rdx,rcx
  4300f4:	sub    rax,rdx
  4300f7:	cmp    esi,eax
  4300f9:	ja     430100 <strcmp@plt+0x2c948>
  4300fb:	repz ret 
  4300fd:	nop    DWORD PTR [rax]
  430100:	cmp    esi,0x40
  430103:	mov    edx,0x40
  430108:	cmovae edx,esi
  43010b:	sub    rcx,r8
  43010e:	mov    edx,edx
  430110:	mov    rsi,rcx
  430113:	jmp    42fe80 <strcmp@plt+0x2c6c8>
  430118:	nop    DWORD PTR [rax+rax*1+0x0]
  430120:	mov    rax,QWORD PTR [rdi+0x38]
  430124:	mov    rdx,QWORD PTR [rdi+0x30]
  430128:	mov    rcx,rax
  43012b:	sub    rcx,rdx
  43012e:	cmp    esi,ecx
  430130:	ja     430138 <strcmp@plt+0x2c980>
  430132:	repz ret 
  430134:	nop    DWORD PTR [rax+0x0]
  430138:	mov    ecx,DWORD PTR [rdi+0x10]
  43013b:	add    rdx,rcx
  43013e:	sub    edx,DWORD PTR [rdi+0x14]
  430141:	sub    edx,eax
  430143:	cmp    esi,0x40
  430146:	mov    eax,0x40
  43014b:	cmovb  esi,eax
  43014e:	jmp    42fe80 <strcmp@plt+0x2c6c8>
  430153:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43015e:	xchg   ax,ax
  430160:	push   rbp
  430161:	push   rbx
  430162:	mov    rbx,rdi
  430165:	mov    ebp,esi
  430167:	sub    rsp,0x8
  43016b:	call   4300e0 <strcmp@plt+0x2c928>
  430170:	mov    eax,DWORD PTR [rbx+0x14]
  430173:	mov    rdx,rax
  430176:	add    rax,QWORD PTR [rbx+0x38]
  43017a:	add    ebp,edx
  43017c:	mov    DWORD PTR [rbx+0x14],ebp
  43017f:	add    rsp,0x8
  430183:	pop    rbx
  430184:	pop    rbp
  430185:	ret    
  430186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430190:	push   rbp
  430191:	push   rbx
  430192:	mov    rbp,rsi
  430195:	mov    ebx,edx
  430197:	mov    esi,edx
  430199:	sub    rsp,0x8
  43019d:	call   430160 <strcmp@plt+0x2c9a8>
  4301a2:	mov    edx,ebx
  4301a4:	mov    rsi,rbp
  4301a7:	mov    rdi,rax
  4301aa:	call   403340 <memcpy@plt>
  4301af:	add    rsp,0x8
  4301b3:	pop    rbx
  4301b4:	pop    rbp
  4301b5:	ret    
  4301b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4301c0:	push   rbp
  4301c1:	push   rbx
  4301c2:	mov    rbx,rdi
  4301c5:	mov    ebp,esi
  4301c7:	sub    rsp,0x8
  4301cb:	call   430120 <strcmp@plt+0x2c968>
  4301d0:	mov    rdx,QWORD PTR [rbx+0x38]
  4301d4:	mov    eax,ebp
  4301d6:	add    DWORD PTR [rbx+0x14],ebp
  4301d9:	sub    rdx,rax
  4301dc:	mov    QWORD PTR [rbx+0x38],rdx
  4301e0:	add    rsp,0x8
  4301e4:	mov    rax,rdx
  4301e7:	pop    rbx
  4301e8:	pop    rbp
  4301e9:	ret    
  4301ea:	nop    WORD PTR [rax+rax*1+0x0]
  4301f0:	push   rbp
  4301f1:	push   rbx
  4301f2:	mov    rbp,rsi
  4301f5:	mov    ebx,edx
  4301f7:	mov    esi,edx
  4301f9:	sub    rsp,0x8
  4301fd:	call   4301c0 <strcmp@plt+0x2ca08>
  430202:	mov    edx,ebx
  430204:	mov    rsi,rbp
  430207:	mov    rdi,rax
  43020a:	call   403340 <memcpy@plt>
  43020f:	add    rsp,0x8
  430213:	pop    rbx
  430214:	pop    rbp
  430215:	ret    
  430216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430220:	push   rbp
  430221:	push   rbx
  430222:	mov    ebx,esi
  430224:	mov    rbp,rdi
  430227:	mov    esi,ebx
  430229:	sub    rsp,0x8
  43022d:	call   4300e0 <strcmp@plt+0x2c928>
  430232:	add    rbx,QWORD PTR [rbp+0x30]
  430236:	mov    QWORD PTR [rbp+0x38],rbx
  43023a:	add    rsp,0x8
  43023e:	pop    rbx
  43023f:	pop    rbp
  430240:	ret    
  430241:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43024c:	nop    DWORD PTR [rax+0x0]
  430250:	push   rbp
  430251:	push   rbx
  430252:	mov    ebp,esi
  430254:	add    edi,esi
  430256:	sub    rsp,0x8
  43025a:	call   430080 <strcmp@plt+0x2c8c8>
  43025f:	mov    esi,ebp
  430261:	mov    rdi,rax
  430264:	mov    rbx,rax
  430267:	call   430220 <strcmp@plt+0x2ca68>
  43026c:	add    rsp,0x8
  430270:	mov    rax,rbx
  430273:	pop    rbx
  430274:	pop    rbp
  430275:	ret    
  430276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430280:	push   rbp
  430281:	push   rbx
  430282:	mov    rbx,rdi
  430285:	sub    rsp,0x8
  430289:	mov    edi,DWORD PTR [rdi+0x14]
  43028c:	call   430080 <strcmp@plt+0x2c8c8>
  430291:	mov    edx,DWORD PTR [rbx+0x14]
  430294:	mov    rsi,QWORD PTR [rbx+0x38]
  430298:	mov    rbp,rax
  43029b:	mov    rdi,QWORD PTR [rax+0x38]
  43029f:	call   430190 <strcmp@plt+0x2c9d8>
  4302a4:	movzx  eax,WORD PTR [rbx+0x24]
  4302a8:	mov    WORD PTR [rbp+0x24],ax
  4302ac:	add    rsp,0x8
  4302b0:	mov    rax,rbp
  4302b3:	pop    rbx
  4302b4:	pop    rbp
  4302b5:	ret    
  4302b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4302c0:	movzx  eax,WORD PTR [rdi+0x18]
  4302c4:	cmp    ax,0xffff
  4302c8:	je     4302e8 <strcmp@plt+0x2cb30>
  4302ca:	mov    edx,DWORD PTR [rdi+0x14]
  4302cd:	add    rax,QWORD PTR [rdi+0x30]
  4302d1:	add    rdx,QWORD PTR [rdi+0x38]
  4302d5:	mov    QWORD PTR [rdi+0x38],rax
  4302d9:	sub    rdx,rax
  4302dc:	mov    eax,0x1
  4302e1:	mov    DWORD PTR [rdi+0x14],edx
  4302e4:	ret    
  4302e5:	nop    DWORD PTR [rax]
  4302e8:	mov    rax,0x468e3c
  4302ef:	cmp    DWORD PTR [rax],0x1
  4302f2:	jg     430300 <strcmp@plt+0x2cb48>
  4302f4:	xor    eax,eax
  4302f6:	ret    
  4302f7:	nop    WORD PTR [rax+rax*1+0x0]
  430300:	lea    rsi,[rip+0x1f491]        # 44f798 <strcmp@plt+0x4bfe0>
  430307:	sub    rsp,0x8
  43030b:	xor    eax,eax
  43030d:	mov    edi,0x6
  430312:	call   4306a0 <strcmp@plt+0x2cee8>
  430317:	xor    eax,eax
  430319:	add    rsp,0x8
  43031d:	ret    
  43031e:	xchg   ax,ax
  430320:	movzx  eax,WORD PTR [rdi+0x1a]
  430324:	cmp    ax,0xffff
  430328:	je     430348 <strcmp@plt+0x2cb90>
  43032a:	mov    edx,DWORD PTR [rdi+0x14]
  43032d:	add    rax,QWORD PTR [rdi+0x30]
  430331:	add    rdx,QWORD PTR [rdi+0x38]
  430335:	mov    QWORD PTR [rdi+0x38],rax
  430339:	sub    rdx,rax
  43033c:	mov    eax,0x1
  430341:	mov    DWORD PTR [rdi+0x14],edx
  430344:	ret    
  430345:	nop    DWORD PTR [rax]
  430348:	mov    rax,0x468e3c
  43034f:	cmp    DWORD PTR [rax],0x1
  430352:	jg     430360 <strcmp@plt+0x2cba8>
  430354:	xor    eax,eax
  430356:	ret    
  430357:	nop    WORD PTR [rax+rax*1+0x0]
  430360:	lea    rsi,[rip+0x1f471]        # 44f7d8 <strcmp@plt+0x4c020>
  430367:	sub    rsp,0x8
  43036b:	xor    eax,eax
  43036d:	mov    edi,0x6
  430372:	call   4306a0 <strcmp@plt+0x2cee8>
  430377:	xor    eax,eax
  430379:	add    rsp,0x8
  43037d:	ret    
  43037e:	xchg   ax,ax
  430380:	movzx  eax,WORD PTR [rdi+0x1c]
  430384:	cmp    ax,0xffff
  430388:	je     4303a8 <strcmp@plt+0x2cbf0>
  43038a:	mov    edx,DWORD PTR [rdi+0x14]
  43038d:	add    rax,QWORD PTR [rdi+0x30]
  430391:	add    rdx,QWORD PTR [rdi+0x38]
  430395:	mov    QWORD PTR [rdi+0x38],rax
  430399:	sub    rdx,rax
  43039c:	mov    eax,0x1
  4303a1:	mov    DWORD PTR [rdi+0x14],edx
  4303a4:	ret    
  4303a5:	nop    DWORD PTR [rax]
  4303a8:	mov    rax,0x468e3c
  4303af:	cmp    DWORD PTR [rax],0x1
  4303b2:	jg     4303c0 <strcmp@plt+0x2cc08>
  4303b4:	xor    eax,eax
  4303b6:	ret    
  4303b7:	nop    WORD PTR [rax+rax*1+0x0]
  4303c0:	lea    rsi,[rip+0x1f449]        # 44f810 <strcmp@plt+0x4c058>
  4303c7:	sub    rsp,0x8
  4303cb:	xor    eax,eax
  4303cd:	mov    edi,0x6
  4303d2:	call   4306a0 <strcmp@plt+0x2cee8>
  4303d7:	xor    eax,eax
  4303d9:	add    rsp,0x8
  4303dd:	ret    
  4303de:	xchg   ax,ax
  4303e0:	movzx  eax,WORD PTR [rdi+0x1e]
  4303e4:	cmp    ax,0xffff
  4303e8:	je     430408 <strcmp@plt+0x2cc50>
  4303ea:	mov    edx,DWORD PTR [rdi+0x14]
  4303ed:	add    rax,QWORD PTR [rdi+0x30]
  4303f1:	add    rdx,QWORD PTR [rdi+0x38]
  4303f5:	mov    QWORD PTR [rdi+0x38],rax
  4303f9:	sub    rdx,rax
  4303fc:	mov    eax,0x1
  430401:	mov    DWORD PTR [rdi+0x14],edx
  430404:	ret    
  430405:	nop    DWORD PTR [rax]
  430408:	mov    rax,0x468e3c
  43040f:	cmp    DWORD PTR [rax],0x1
  430412:	jg     430420 <strcmp@plt+0x2cc68>
  430414:	xor    eax,eax
  430416:	ret    
  430417:	nop    WORD PTR [rax+rax*1+0x0]
  430420:	lea    rsi,[rip+0x1f421]        # 44f848 <strcmp@plt+0x4c090>
  430427:	sub    rsp,0x8
  43042b:	xor    eax,eax
  43042d:	mov    edi,0x6
  430432:	call   4306a0 <strcmp@plt+0x2cee8>
  430437:	xor    eax,eax
  430439:	add    rsp,0x8
  43043d:	ret    
  43043e:	xchg   ax,ax
  430440:	movzx  eax,WORD PTR [rdi+0x20]
  430444:	cmp    ax,0xffff
  430448:	je     430468 <strcmp@plt+0x2ccb0>
  43044a:	mov    edx,DWORD PTR [rdi+0x14]
  43044d:	add    rax,QWORD PTR [rdi+0x30]
  430451:	add    rdx,QWORD PTR [rdi+0x38]
  430455:	mov    QWORD PTR [rdi+0x38],rax
  430459:	sub    rdx,rax
  43045c:	mov    eax,0x1
  430461:	mov    DWORD PTR [rdi+0x14],edx
  430464:	ret    
  430465:	nop    DWORD PTR [rax]
  430468:	mov    rax,0x468e3c
  43046f:	cmp    DWORD PTR [rax],0x1
  430472:	jg     430480 <strcmp@plt+0x2ccc8>
  430474:	xor    eax,eax
  430476:	ret    
  430477:	nop    WORD PTR [rax+rax*1+0x0]
  430480:	lea    rsi,[rip+0x1f409]        # 44f890 <strcmp@plt+0x4c0d8>
  430487:	sub    rsp,0x8
  43048b:	xor    eax,eax
  43048d:	mov    edi,0x6
  430492:	call   4306a0 <strcmp@plt+0x2cee8>
  430497:	xor    eax,eax
  430499:	add    rsp,0x8
  43049d:	ret    
  43049e:	xchg   ax,ax
  4304a0:	movzx  eax,WORD PTR [rdi+0x22]
  4304a4:	cmp    ax,0xffff
  4304a8:	je     4304c8 <strcmp@plt+0x2cd10>
  4304aa:	mov    edx,DWORD PTR [rdi+0x14]
  4304ad:	add    rax,QWORD PTR [rdi+0x30]
  4304b1:	add    rdx,QWORD PTR [rdi+0x38]
  4304b5:	mov    QWORD PTR [rdi+0x38],rax
  4304b9:	sub    rdx,rax
  4304bc:	mov    eax,0x1
  4304c1:	mov    DWORD PTR [rdi+0x14],edx
  4304c4:	ret    
  4304c5:	nop    DWORD PTR [rax]
  4304c8:	mov    rax,0x468e3c
  4304cf:	cmp    DWORD PTR [rax],0x1
  4304d2:	jg     4304e0 <strcmp@plt+0x2cd28>
  4304d4:	xor    eax,eax
  4304d6:	ret    
  4304d7:	nop    WORD PTR [rax+rax*1+0x0]
  4304e0:	lea    rsi,[rip+0x1f3e9]        # 44f8d0 <strcmp@plt+0x4c118>
  4304e7:	sub    rsp,0x8
  4304eb:	xor    eax,eax
  4304ed:	mov    edi,0x6
  4304f2:	call   4306a0 <strcmp@plt+0x2cee8>
  4304f7:	xor    eax,eax
  4304f9:	add    rsp,0x8
  4304fd:	ret    
  4304fe:	xchg   ax,ax
  430500:	movzx  eax,WORD PTR [rdi+0x24]
  430504:	cmp    ax,0xffff
  430508:	je     430528 <strcmp@plt+0x2cd70>
  43050a:	mov    edx,DWORD PTR [rdi+0x14]
  43050d:	add    rax,QWORD PTR [rdi+0x30]
  430511:	add    rdx,QWORD PTR [rdi+0x38]
  430515:	mov    QWORD PTR [rdi+0x38],rax
  430519:	sub    rdx,rax
  43051c:	mov    eax,0x1
  430521:	mov    DWORD PTR [rdi+0x14],edx
  430524:	ret    
  430525:	nop    DWORD PTR [rax]
  430528:	mov    rax,0x468e3c
  43052f:	cmp    DWORD PTR [rax],0x1
  430532:	jg     430540 <strcmp@plt+0x2cd88>
  430534:	xor    eax,eax
  430536:	ret    
  430537:	nop    WORD PTR [rax+rax*1+0x0]
  430540:	lea    rsi,[rip+0x1f3c9]        # 44f910 <strcmp@plt+0x4c158>
  430547:	sub    rsp,0x8
  43054b:	xor    eax,eax
  43054d:	mov    edi,0x6
  430552:	call   4306a0 <strcmp@plt+0x2cee8>
  430557:	xor    eax,eax
  430559:	add    rsp,0x8
  43055d:	ret    
  43055e:	xchg   ax,ax
  430560:	push   r15
  430562:	push   r14
  430564:	mov    r15d,esi
  430567:	push   r13
  430569:	push   r12
  43056b:	mov    r14d,edx
  43056e:	push   rbp
  43056f:	push   rbx
  430570:	mov    r12d,r8d
  430573:	mov    ebp,r9d
  430576:	sub    rsp,0x18
  43057a:	mov    QWORD PTR [rsp],rdi
  43057e:	mov    edi,0x28
  430583:	mov    QWORD PTR [rsp+0x8],rcx
  430588:	mov    ebx,DWORD PTR [rsp+0x50]
  43058c:	call   434790 <strcmp@plt+0x30fd8>
  430591:	test   r15d,r15d
  430594:	mov    r13,rax
  430597:	jne    4305f0 <strcmp@plt+0x2ce38>
  430599:	mov    rdi,QWORD PTR [rsp]
  43059d:	call   424b80 <strcmp@plt+0x213c8>
  4305a2:	mov    QWORD PTR [r13+0x0],rax
  4305a6:	mov    rdi,QWORD PTR [rsp+0x8]
  4305ab:	mov    DWORD PTR [r13+0xc],r14d
  4305af:	call   403730 <strdup@plt>
  4305b4:	mov    rdi,0x424750
  4305bb:	mov    BYTE PTR [r13+0x9],r12b
  4305bf:	mov    BYTE PTR [r13+0x8],bpl
  4305c3:	mov    BYTE PTR [r13+0x18],bl
  4305c7:	mov    QWORD PTR [r13+0x10],rax
  4305cb:	mov    BYTE PTR [r13+0x19],0x1
  4305d0:	call   42d4f0 <strcmp@plt+0x29d38>
  4305d5:	mov    QWORD PTR [r13+0x20],rax
  4305d9:	add    rsp,0x18
  4305dd:	mov    rax,r13
  4305e0:	pop    rbx
  4305e1:	pop    rbp
  4305e2:	pop    r12
  4305e4:	pop    r13
  4305e6:	pop    r14
  4305e8:	pop    r15
  4305ea:	ret    
  4305eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4305f0:	mov    rsi,QWORD PTR [rsp]
  4305f4:	mov    edx,0x20
  4305f9:	mov    edi,r15d
  4305fc:	call   429040 <strcmp@plt+0x25888>
  430601:	mov    QWORD PTR [r13+0x0],rax
  430605:	jmp    4305a6 <strcmp@plt+0x2cdee>
  430607:	nop    WORD PTR [rax+rax*1+0x0]
  430610:	push   rbx
  430611:	mov    rbx,QWORD PTR [rdi+0x20]
  430615:	mov    rdi,rsi
  430618:	call   424b80 <strcmp@plt+0x213c8>
  43061d:	mov    rsi,rbx
  430620:	mov    rdi,rax
  430623:	pop    rbx
  430624:	jmp    42d540 <strcmp@plt+0x29d88>
  430629:	nop    DWORD PTR [rax+0x0]
  430630:	test   rdi,rdi
  430633:	je     430668 <strcmp@plt+0x2ceb0>
  430635:	push   rbx
  430636:	mov    rbx,rdi
  430639:	mov    rdi,QWORD PTR [rdi]
  43063c:	call   424750 <strcmp@plt+0x20f98>
  430641:	mov    rdi,QWORD PTR [rbx+0x10]
  430645:	test   rdi,rdi
  430648:	je     43064f <strcmp@plt+0x2ce97>
  43064a:	call   4037b0 <free@plt>
  43064f:	mov    rdi,QWORD PTR [rbx+0x20]
  430653:	call   42dac0 <strcmp@plt+0x2a308>
  430658:	mov    rdi,rbx
  43065b:	pop    rbx
  43065c:	jmp    4037b0 <free@plt>
  430661:	nop    DWORD PTR [rax+0x0]
  430668:	repz ret 
  43066a:	nop    WORD PTR [rax+rax*1+0x0]
  430670:	mov    rax,0x474860
  430677:	push   rbx
  430678:	mov    rbx,rdi
  43067b:	mov    rdx,QWORD PTR [rax]
  43067e:	mov    rax,0x474858
  430685:	mov    rsi,QWORD PTR [rax]
  430688:	call   43b0b0 <strcmp@plt+0x378f8>
  43068d:	mov    rdi,QWORD PTR [rbx]
  430690:	call   42a650 <strcmp@plt+0x26e98>
  430695:	mov    rdi,rbx
  430698:	pop    rbx
  430699:	jmp    4037b0 <free@plt>
  43069e:	xchg   ax,ax
  4306a0:	push   rbp
  4306a1:	push   rbx
  4306a2:	mov    rbx,rsi
  4306a5:	sub    rsp,0xe8
  4306ac:	test   al,al
  4306ae:	mov    QWORD PTR [rsp+0x40],rdx
  4306b3:	mov    QWORD PTR [rsp+0x48],rcx
  4306b8:	mov    QWORD PTR [rsp+0x50],r8
  4306bd:	mov    QWORD PTR [rsp+0x58],r9
  4306c2:	je     430706 <strcmp@plt+0x2cf4e>
  4306c4:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  4306ca:	vmovaps XMMWORD PTR [rsp+0x70],xmm1
  4306d0:	vmovaps XMMWORD PTR [rsp+0x80],xmm2
  4306d9:	vmovaps XMMWORD PTR [rsp+0x90],xmm3
  4306e2:	vmovaps XMMWORD PTR [rsp+0xa0],xmm4
  4306eb:	vmovaps XMMWORD PTR [rsp+0xb0],xmm5
  4306f4:	vmovaps XMMWORD PTR [rsp+0xc0],xmm6
  4306fd:	vmovaps XMMWORD PTR [rsp+0xd0],xmm7
  430706:	mov    rax,QWORD PTR fs:0x28
  43070f:	mov    QWORD PTR [rsp+0x28],rax
  430714:	xor    eax,eax
  430716:	lea    rax,[rsp+0x100]
  43071e:	cmp    edi,0x7
  430721:	mov    QWORD PTR [rsp+0x18],rax
  430726:	lea    rax,[rsp+0x30]
  43072b:	mov    DWORD PTR [rsp+0x10],0x10
  430733:	mov    DWORD PTR [rsp+0x14],0x30
  43073b:	mov    QWORD PTR [rsp+0x20],rax
  430740:	ja     430a78 <strcmp@plt+0x2d2c0>
  430746:	lea    rdx,[rip+0x1f243]        # 44f990 <strcmp@plt+0x4c1d8>
  43074d:	mov    edi,edi
  43074f:	movsxd rax,DWORD PTR [rdx+rdi*4]
  430753:	add    rax,rdx
  430756:	jmp    rax
  430758:	nop    DWORD PTR [rax+rax*1+0x0]
  430760:	mov    rax,0x468e3c
  430767:	cmp    DWORD PTR [rax],0x2
  43076a:	jg     430bc0 <strcmp@plt+0x2d408>
  430770:	mov    rax,QWORD PTR [rsp+0x28]
  430775:	xor    rax,QWORD PTR fs:0x28
  43077e:	jne    430d2d <strcmp@plt+0x2d575>
  430784:	add    rsp,0xe8
  43078b:	pop    rbx
  43078c:	pop    rbp
  43078d:	ret    
  43078e:	xchg   ax,ax
  430790:	xor    edi,edi
  430792:	call   403380 <time@plt>
  430797:	lea    rdi,[rsp+0x8]
  43079c:	mov    QWORD PTR [rsp+0x8],rax
  4307a1:	call   403310 <localtime@plt>
  4307a6:	mov    r11d,DWORD PTR [rax]
  4307a9:	mov    r10d,DWORD PTR [rax+0x4]
  4307ad:	mov    r9d,DWORD PTR [rax+0x8]
  4307b1:	mov    r8d,DWORD PTR [rax+0xc]
  4307b5:	mov    esi,DWORD PTR [rax+0x10]
  4307b8:	mov    edx,DWORD PTR [rax+0x14]
  4307bb:	mov    rax,0x4747bc
  4307c2:	mov    eax,DWORD PTR [rax]
  4307c4:	test   eax,eax
  4307c6:	je     430c50 <strcmp@plt+0x2d498>
  4307cc:	mov    rbp,0x472ef0
  4307d3:	mov    rdi,QWORD PTR [rbp+0x0]
  4307d7:	test   rdi,rdi
  4307da:	je     430cd0 <strcmp@plt+0x2d518>
  4307e0:	lea    ecx,[rdx+0x76c]
  4307e6:	lea    rax,[rip+0x1f173]        # 44f960 <strcmp@plt+0x4c1a8>
  4307ed:	nop    DWORD PTR [rax]
  4307f0:	push   rax
  4307f1:	push   r11
  4307f3:	push   r10
  4307f5:	push   r9
  4307f7:	mov    r9d,r8d
  4307fa:	lea    r8d,[rsi+0x1]
  4307fe:	lea    rdx,[rip+0x1f142]        # 44f947 <strcmp@plt+0x4c18f>
  430805:	mov    esi,0x1
  43080a:	xor    eax,eax
  43080c:	call   403680 <__fprintf_chk@plt>
  430811:	add    rsp,0x20
  430815:	mov    rdi,QWORD PTR [rbp+0x0]
  430819:	mov    rdx,rbx
  43081c:	lea    rcx,[rsp+0x10]
  430821:	mov    esi,0x1
  430826:	call   403120 <__vfprintf_chk@plt>
  43082b:	mov    rsi,QWORD PTR [rbp+0x0]
  43082f:	mov    edi,0xa
  430834:	call   4034e0 <fputc@plt>
  430839:	mov    rdi,QWORD PTR [rbp+0x0]
  43083d:	call   403480 <fflush@plt>
  430842:	jmp    430770 <strcmp@plt+0x2cfb8>
  430847:	nop    WORD PTR [rax+rax*1+0x0]
  430850:	xor    edi,edi
  430852:	call   403380 <time@plt>
  430857:	lea    rdi,[rsp+0x8]
  43085c:	mov    QWORD PTR [rsp+0x8],rax
  430861:	call   403310 <localtime@plt>
  430866:	mov    r11d,DWORD PTR [rax]
  430869:	mov    r10d,DWORD PTR [rax+0x4]
  43086d:	mov    r9d,DWORD PTR [rax+0x8]
  430871:	mov    r8d,DWORD PTR [rax+0xc]
  430875:	mov    esi,DWORD PTR [rax+0x10]
  430878:	mov    edx,DWORD PTR [rax+0x14]
  43087b:	mov    rax,0x4747bc
  430882:	mov    eax,DWORD PTR [rax]
  430884:	test   eax,eax
  430886:	je     430c30 <strcmp@plt+0x2d478>
  43088c:	mov    rbp,0x472ef0
  430893:	mov    rdi,QWORD PTR [rbp+0x0]
  430897:	test   rdi,rdi
  43089a:	je     430cb0 <strcmp@plt+0x2d4f8>
  4308a0:	lea    ecx,[rdx+0x76c]
  4308a6:	lea    rax,[rip+0x1f0b8]        # 44f965 <strcmp@plt+0x4c1ad>
  4308ad:	jmp    4307f0 <strcmp@plt+0x2d038>
  4308b2:	nop    WORD PTR [rax+rax*1+0x0]
  4308b8:	xor    edi,edi
  4308ba:	call   403380 <time@plt>
  4308bf:	lea    rdi,[rsp+0x8]
  4308c4:	mov    QWORD PTR [rsp+0x8],rax
  4308c9:	call   403310 <localtime@plt>
  4308ce:	mov    r11d,DWORD PTR [rax]
  4308d1:	mov    r10d,DWORD PTR [rax+0x4]
  4308d5:	mov    r9d,DWORD PTR [rax+0x8]
  4308d9:	mov    r8d,DWORD PTR [rax+0xc]
  4308dd:	mov    esi,DWORD PTR [rax+0x10]
  4308e0:	mov    edx,DWORD PTR [rax+0x14]
  4308e3:	mov    rax,0x4747bc
  4308ea:	mov    eax,DWORD PTR [rax]
  4308ec:	test   eax,eax
  4308ee:	je     430b80 <strcmp@plt+0x2d3c8>
  4308f4:	mov    rbp,0x472ef0
  4308fb:	mov    rdi,QWORD PTR [rbp+0x0]
  4308ff:	test   rdi,rdi
  430902:	je     430cf0 <strcmp@plt+0x2d538>
  430908:	lea    ecx,[rdx+0x76c]
  43090e:	lea    rax,[rip+0x1f054]        # 44f969 <strcmp@plt+0x4c1b1>
  430915:	jmp    4307f0 <strcmp@plt+0x2d038>
  43091a:	nop    WORD PTR [rax+rax*1+0x0]
  430920:	xor    edi,edi
  430922:	call   403380 <time@plt>
  430927:	lea    rdi,[rsp+0x8]
  43092c:	mov    QWORD PTR [rsp+0x8],rax
  430931:	call   403310 <localtime@plt>
  430936:	mov    r11d,DWORD PTR [rax]
  430939:	mov    r10d,DWORD PTR [rax+0x4]
  43093d:	mov    r9d,DWORD PTR [rax+0x8]
  430941:	mov    r8d,DWORD PTR [rax+0xc]
  430945:	mov    esi,DWORD PTR [rax+0x10]
  430948:	mov    edx,DWORD PTR [rax+0x14]
  43094b:	mov    rax,0x4747bc
  430952:	mov    eax,DWORD PTR [rax]
  430954:	test   eax,eax
  430956:	je     430b60 <strcmp@plt+0x2d3a8>
  43095c:	mov    rbp,0x472ef0
  430963:	mov    rdi,QWORD PTR [rbp+0x0]
  430967:	test   rdi,rdi
  43096a:	je     430c70 <strcmp@plt+0x2d4b8>
  430970:	lea    ecx,[rdx+0x76c]
  430976:	lea    rax,[rip+0x1eff4]        # 44f971 <strcmp@plt+0x4c1b9>
  43097d:	jmp    4307f0 <strcmp@plt+0x2d038>
  430982:	nop    WORD PTR [rax+rax*1+0x0]
  430988:	mov    rax,0x468e3c
  43098f:	mov    eax,DWORD PTR [rax]
  430991:	test   eax,eax
  430993:	jle    430770 <strcmp@plt+0x2cfb8>
  430999:	xor    edi,edi
  43099b:	call   403380 <time@plt>
  4309a0:	lea    rdi,[rsp+0x8]
  4309a5:	mov    QWORD PTR [rsp+0x8],rax
  4309aa:	call   403310 <localtime@plt>
  4309af:	mov    r11d,DWORD PTR [rax]
  4309b2:	mov    r10d,DWORD PTR [rax+0x4]
  4309b6:	mov    r9d,DWORD PTR [rax+0x8]
  4309ba:	mov    r8d,DWORD PTR [rax+0xc]
  4309be:	mov    esi,DWORD PTR [rax+0x10]
  4309c1:	mov    edx,DWORD PTR [rax+0x14]
  4309c4:	mov    rax,0x4747bc
  4309cb:	mov    ebp,DWORD PTR [rax]
  4309cd:	test   ebp,ebp
  4309cf:	je     430ae0 <strcmp@plt+0x2d328>
  4309d5:	mov    rbp,0x472ef0
  4309dc:	mov    rdi,QWORD PTR [rbp+0x0]
  4309e0:	test   rdi,rdi
  4309e3:	je     430c90 <strcmp@plt+0x2d4d8>
  4309e9:	lea    ecx,[rdx+0x76c]
  4309ef:	lea    rax,[rip+0x1ef80]        # 44f976 <strcmp@plt+0x4c1be>
  4309f6:	jmp    4307f0 <strcmp@plt+0x2d038>
  4309fb:	nop    DWORD PTR [rax+rax*1+0x0]
  430a00:	mov    rax,0x468e3c
  430a07:	cmp    DWORD PTR [rax],0x1
  430a0a:	jle    430770 <strcmp@plt+0x2cfb8>
  430a10:	xor    edi,edi
  430a12:	call   403380 <time@plt>
  430a17:	lea    rdi,[rsp+0x8]
  430a1c:	mov    QWORD PTR [rsp+0x8],rax
  430a21:	call   403310 <localtime@plt>
  430a26:	mov    r11d,DWORD PTR [rax]
  430a29:	mov    r10d,DWORD PTR [rax+0x4]
  430a2d:	mov    r9d,DWORD PTR [rax+0x8]
  430a31:	mov    r8d,DWORD PTR [rax+0xc]
  430a35:	mov    esi,DWORD PTR [rax+0x10]
  430a38:	mov    edx,DWORD PTR [rax+0x14]
  430a3b:	mov    rax,0x4747bc
  430a42:	mov    edi,DWORD PTR [rax]
  430a44:	test   edi,edi
  430a46:	je     430b40 <strcmp@plt+0x2d388>
  430a4c:	mov    rbp,0x472ef0
  430a53:	mov    rdi,QWORD PTR [rbp+0x0]
  430a57:	test   rdi,rdi
  430a5a:	je     430c90 <strcmp@plt+0x2d4d8>
  430a60:	lea    ecx,[rdx+0x76c]
  430a66:	lea    rax,[rip+0x1ef0f]        # 44f97c <strcmp@plt+0x4c1c4>
  430a6d:	jmp    4307f0 <strcmp@plt+0x2d038>
  430a72:	nop    WORD PTR [rax+rax*1+0x0]
  430a78:	xor    edi,edi
  430a7a:	call   403380 <time@plt>
  430a7f:	lea    rdi,[rsp+0x8]
  430a84:	mov    QWORD PTR [rsp+0x8],rax
  430a89:	call   403310 <localtime@plt>
  430a8e:	mov    r11d,DWORD PTR [rax]
  430a91:	mov    r10d,DWORD PTR [rax+0x4]
  430a95:	mov    r9d,DWORD PTR [rax+0x8]
  430a99:	mov    r8d,DWORD PTR [rax+0xc]
  430a9d:	mov    esi,DWORD PTR [rax+0x10]
  430aa0:	mov    edx,DWORD PTR [rax+0x14]
  430aa3:	mov    rax,0x4747bc
  430aaa:	mov    eax,DWORD PTR [rax]
  430aac:	test   eax,eax
  430aae:	je     430ba0 <strcmp@plt+0x2d3e8>
  430ab4:	mov    rbp,0x472ef0
  430abb:	mov    rdi,QWORD PTR [rbp+0x0]
  430abf:	test   rdi,rdi
  430ac2:	je     430c70 <strcmp@plt+0x2d4b8>
  430ac8:	lea    ecx,[rdx+0x76c]
  430ace:	lea    rax,[rip+0x1eeb7]        # 44f98c <strcmp@plt+0x4c1d4>
  430ad5:	jmp    4307f0 <strcmp@plt+0x2d038>
  430ada:	nop    WORD PTR [rax+rax*1+0x0]
  430ae0:	lea    ecx,[rsi+0x1]
  430ae3:	lea    rax,[rip+0x1ee8c]        # 44f976 <strcmp@plt+0x4c1be>
  430aea:	add    edx,0x76c
  430af0:	sub    rsp,0x8
  430af4:	nop    DWORD PTR [rax+0x0]
  430af8:	push   rax
  430af9:	push   r11
  430afb:	push   r10
  430afd:	lea    rsi,[rip+0x1ee43]        # 44f947 <strcmp@plt+0x4c18f>
  430b04:	mov    edi,0x1
  430b09:	xor    eax,eax
  430b0b:	call   403030 <__printf_chk@plt>
  430b10:	mov    rax,QWORD PTR [rip+0x37491]        # 467fa8 <strcmp@plt+0x647f0>
  430b17:	add    rsp,0x20
  430b1b:	mov    rdx,rbx
  430b1e:	lea    rcx,[rsp+0x10]
  430b23:	mov    esi,0x1
  430b28:	mov    rdi,QWORD PTR [rax]
  430b2b:	call   403120 <__vfprintf_chk@plt>
  430b30:	mov    edi,0xa
  430b35:	call   403570 <putchar@plt>
  430b3a:	jmp    430770 <strcmp@plt+0x2cfb8>
  430b3f:	nop
  430b40:	lea    ecx,[rsi+0x1]
  430b43:	add    edx,0x76c
  430b49:	sub    rsp,0x8
  430b4d:	lea    rax,[rip+0x1ee28]        # 44f97c <strcmp@plt+0x4c1c4>
  430b54:	jmp    430af8 <strcmp@plt+0x2d340>
  430b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430b60:	lea    ecx,[rsi+0x1]
  430b63:	add    edx,0x76c
  430b69:	sub    rsp,0x8
  430b6d:	lea    rax,[rip+0x1edfd]        # 44f971 <strcmp@plt+0x4c1b9>
  430b74:	jmp    430af8 <strcmp@plt+0x2d340>
  430b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430b80:	lea    ecx,[rsi+0x1]
  430b83:	add    edx,0x76c
  430b89:	sub    rsp,0x8
  430b8d:	lea    rax,[rip+0x1edd5]        # 44f969 <strcmp@plt+0x4c1b1>
  430b94:	jmp    430af8 <strcmp@plt+0x2d340>
  430b99:	nop    DWORD PTR [rax+0x0]
  430ba0:	lea    ecx,[rsi+0x1]
  430ba3:	add    edx,0x76c
  430ba9:	sub    rsp,0x8
  430bad:	lea    rax,[rip+0x1edd8]        # 44f98c <strcmp@plt+0x4c1d4>
  430bb4:	jmp    430af8 <strcmp@plt+0x2d340>
  430bb9:	nop    DWORD PTR [rax+0x0]
  430bc0:	xor    edi,edi
  430bc2:	call   403380 <time@plt>
  430bc7:	lea    rdi,[rsp+0x8]
  430bcc:	mov    QWORD PTR [rsp+0x8],rax
  430bd1:	call   403310 <localtime@plt>
  430bd6:	mov    rcx,0x4747bc
  430bdd:	mov    r10d,DWORD PTR [rax]
  430be0:	mov    esi,DWORD PTR [rax+0x4]
  430be3:	mov    r9d,DWORD PTR [rax+0x8]
  430be7:	mov    r8d,DWORD PTR [rax+0xc]
  430beb:	mov    edx,DWORD PTR [rax+0x10]
  430bee:	mov    ecx,DWORD PTR [rcx]
  430bf0:	mov    eax,DWORD PTR [rax+0x14]
  430bf3:	test   ecx,ecx
  430bf5:	je     430d10 <strcmp@plt+0x2d558>
  430bfb:	mov    rbp,0x472ef0
  430c02:	mov    rdi,QWORD PTR [rbp+0x0]
  430c06:	test   rdi,rdi
  430c09:	je     430c90 <strcmp@plt+0x2d4d8>
  430c0f:	lea    ecx,[rax+0x76c]
  430c15:	lea    rax,[rip+0x1ed68]        # 44f984 <strcmp@plt+0x4c1cc>
  430c1c:	push   rax
  430c1d:	push   r10
  430c1f:	push   rsi
  430c20:	push   r9
  430c22:	mov    r9d,r8d
  430c25:	lea    r8d,[rdx+0x1]
  430c29:	jmp    4307fe <strcmp@plt+0x2d046>
  430c2e:	xchg   ax,ax
  430c30:	lea    ecx,[rsi+0x1]
  430c33:	add    edx,0x76c
  430c39:	sub    rsp,0x8
  430c3d:	lea    rax,[rip+0x1ed21]        # 44f965 <strcmp@plt+0x4c1ad>
  430c44:	jmp    430af8 <strcmp@plt+0x2d340>
  430c49:	nop    DWORD PTR [rax+0x0]
  430c50:	lea    ecx,[rsi+0x1]
  430c53:	add    edx,0x76c
  430c59:	sub    rsp,0x8
  430c5d:	lea    rax,[rip+0x1ecfc]        # 44f960 <strcmp@plt+0x4c1a8>
  430c64:	jmp    430af8 <strcmp@plt+0x2d340>
  430c69:	nop    DWORD PTR [rax+0x0]
  430c70:	lea    rcx,[rsp+0x10]
  430c75:	mov    rdx,rbx
  430c78:	mov    esi,0x1
  430c7d:	mov    edi,0x6
  430c82:	call   4030a0 <__vsyslog_chk@plt>
  430c87:	jmp    430770 <strcmp@plt+0x2cfb8>
  430c8c:	nop    DWORD PTR [rax+0x0]
  430c90:	lea    rcx,[rsp+0x10]
  430c95:	mov    rdx,rbx
  430c98:	mov    esi,0x1
  430c9d:	mov    edi,0x7
  430ca2:	call   4030a0 <__vsyslog_chk@plt>
  430ca7:	jmp    430770 <strcmp@plt+0x2cfb8>
  430cac:	nop    DWORD PTR [rax+0x0]
  430cb0:	lea    rcx,[rsp+0x10]
  430cb5:	mov    rdx,rbx
  430cb8:	mov    esi,0x1
  430cbd:	mov    edi,0x3
  430cc2:	call   4030a0 <__vsyslog_chk@plt>
  430cc7:	jmp    430770 <strcmp@plt+0x2cfb8>
  430ccc:	nop    DWORD PTR [rax+0x0]
  430cd0:	lea    rcx,[rsp+0x10]
  430cd5:	mov    rdx,rbx
  430cd8:	mov    esi,0x1
  430cdd:	mov    edi,0x2
  430ce2:	call   4030a0 <__vsyslog_chk@plt>
  430ce7:	jmp    430770 <strcmp@plt+0x2cfb8>
  430cec:	nop    DWORD PTR [rax+0x0]
  430cf0:	lea    rcx,[rsp+0x10]
  430cf5:	mov    rdx,rbx
  430cf8:	mov    esi,0x1
  430cfd:	mov    edi,0x4
  430d02:	call   4030a0 <__vsyslog_chk@plt>
  430d07:	jmp    430770 <strcmp@plt+0x2cfb8>
  430d0c:	nop    DWORD PTR [rax+0x0]
  430d10:	lea    ecx,[rdx+0x1]
  430d13:	lea    edx,[rax+0x76c]
  430d19:	lea    rax,[rip+0x1ec64]        # 44f984 <strcmp@plt+0x4c1cc>
  430d20:	sub    rsp,0x8
  430d24:	push   rax
  430d25:	push   r10
  430d27:	push   rsi
  430d28:	jmp    430afd <strcmp@plt+0x2d345>
  430d2d:	call   403460 <__stack_chk_fail@plt>
  430d32:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  430d3d:	nop    DWORD PTR [rax]
  430d40:	push   r14
  430d42:	push   r13
  430d44:	mov    r13d,edi
  430d47:	push   r12
  430d49:	push   rbp
  430d4a:	xor    edi,edi
  430d4c:	push   rbx
  430d4d:	mov    r14,rsi
  430d50:	mov    rbp,rdx
  430d53:	mov    r12,rcx
  430d56:	sub    rsp,0x10
  430d5a:	mov    rax,QWORD PTR fs:0x28
  430d63:	mov    QWORD PTR [rsp+0x8],rax
  430d68:	xor    eax,eax
  430d6a:	call   403380 <time@plt>
  430d6f:	mov    rdi,rsp
  430d72:	mov    QWORD PTR [rsp],rax
  430d76:	call   403310 <localtime@plt>
  430d7b:	mov    r11d,DWORD PTR [rax]
  430d7e:	mov    r10d,DWORD PTR [rax+0x4]
  430d82:	mov    r9d,DWORD PTR [rax+0x8]
  430d86:	mov    r8d,DWORD PTR [rax+0xc]
  430d8a:	mov    esi,DWORD PTR [rax+0x10]
  430d8d:	mov    edx,DWORD PTR [rax+0x14]
  430d90:	mov    rax,0x4747bc
  430d97:	mov    eax,DWORD PTR [rax]
  430d99:	test   eax,eax
  430d9b:	je     430e30 <strcmp@plt+0x2d678>
  430da1:	mov    rbx,0x472ef0
  430da8:	mov    rdi,QWORD PTR [rbx]
  430dab:	test   rdi,rdi
  430dae:	je     430e80 <strcmp@plt+0x2d6c8>
  430db4:	push   r14
  430db6:	lea    ecx,[rdx+0x76c]
  430dbc:	push   r11
  430dbe:	lea    rdx,[rip+0x1eb82]        # 44f947 <strcmp@plt+0x4c18f>
  430dc5:	push   r10
  430dc7:	push   r9
  430dc9:	mov    r9d,r8d
  430dcc:	lea    r8d,[rsi+0x1]
  430dd0:	xor    eax,eax
  430dd2:	mov    esi,0x1
  430dd7:	call   403680 <__fprintf_chk@plt>
  430ddc:	mov    rdi,QWORD PTR [rbx]
  430ddf:	add    rsp,0x20
  430de3:	mov    rcx,r12
  430de6:	mov    rdx,rbp
  430de9:	mov    esi,0x1
  430dee:	call   403120 <__vfprintf_chk@plt>
  430df3:	mov    rsi,QWORD PTR [rbx]
  430df6:	mov    edi,0xa
  430dfb:	call   4034e0 <fputc@plt>
  430e00:	mov    rdi,QWORD PTR [rbx]
  430e03:	call   403480 <fflush@plt>
  430e08:	mov    rax,QWORD PTR [rsp+0x8]
  430e0d:	xor    rax,QWORD PTR fs:0x28
  430e16:	jne    430e98 <strcmp@plt+0x2d6e0>
  430e1c:	add    rsp,0x10
  430e20:	pop    rbx
  430e21:	pop    rbp
  430e22:	pop    r12
  430e24:	pop    r13
  430e26:	pop    r14
  430e28:	ret    
  430e29:	nop    DWORD PTR [rax+0x0]
  430e30:	sub    rsp,0x8
  430e34:	lea    ecx,[rsi+0x1]
  430e37:	lea    rsi,[rip+0x1eb09]        # 44f947 <strcmp@plt+0x4c18f>
  430e3e:	push   r14
  430e40:	push   r11
  430e42:	add    edx,0x76c
  430e48:	push   r10
  430e4a:	mov    edi,0x1
  430e4f:	xor    eax,eax
  430e51:	call   403030 <__printf_chk@plt>
  430e56:	mov    rax,QWORD PTR [rip+0x3714b]        # 467fa8 <strcmp@plt+0x647f0>
  430e5d:	add    rsp,0x20
  430e61:	mov    rcx,r12
  430e64:	mov    rdx,rbp
  430e67:	mov    esi,0x1
  430e6c:	mov    rdi,QWORD PTR [rax]
  430e6f:	call   403120 <__vfprintf_chk@plt>
  430e74:	mov    edi,0xa
  430e79:	call   403570 <putchar@plt>
  430e7e:	jmp    430e08 <strcmp@plt+0x2d650>
  430e80:	mov    rcx,r12
  430e83:	mov    rdx,rbp
  430e86:	mov    esi,0x1
  430e8b:	mov    edi,r13d
  430e8e:	call   4030a0 <__vsyslog_chk@plt>
  430e93:	jmp    430e08 <strcmp@plt+0x2d650>
  430e98:	call   403460 <__stack_chk_fail@plt>
  430e9d:	nop    DWORD PTR [rax]
  430ea0:	test   rdi,rdi
  430ea3:	je     430ecf <strcmp@plt+0x2d717>
  430ea5:	mov    rax,QWORD PTR [rip+0x3711c]        # 467fc8 <strcmp@plt+0x64810>
  430eac:	push   rbx
  430ead:	lea    rsi,[rip+0x151a0]        # 446054 <strcmp@plt+0x4289c>
  430eb4:	mov    rbx,rdi
  430eb7:	mov    rdx,QWORD PTR [rax]
  430eba:	call   403410 <freopen@plt>
  430ebf:	mov    rdx,0x472ef0
  430ec6:	test   rax,rax
  430ec9:	mov    QWORD PTR [rdx],rax
  430ecc:	je     430ed8 <strcmp@plt+0x2d720>
  430ece:	pop    rbx
  430ecf:	repz ret 
  430ed1:	nop    DWORD PTR [rax+0x0]
  430ed8:	call   403050 <__errno_location@plt>
  430edd:	mov    edi,DWORD PTR [rax]
  430edf:	call   403170 <strerror@plt>
  430ee4:	mov    rdx,rbx
  430ee7:	lea    rsi,[rip+0x1eac2]        # 44f9b0 <strcmp@plt+0x4c1f8>
  430eee:	mov    rcx,rax
  430ef1:	pop    rbx
  430ef2:	mov    edi,0x2
  430ef7:	xor    eax,eax
  430ef9:	jmp    4306a0 <strcmp@plt+0x2cee8>
  430efe:	xchg   ax,ax
  430f00:	mov    rax,0x472ef0
  430f07:	mov    rdi,QWORD PTR [rax]
  430f0a:	test   rdi,rdi
  430f0d:	je     430f18 <strcmp@plt+0x2d760>
  430f0f:	jmp    4033e0 <fclose@plt>
  430f14:	nop    DWORD PTR [rax+0x0]
  430f18:	repz ret 
  430f1a:	nop    WORD PTR [rax+rax*1+0x0]
  430f20:	push   rbp
  430f21:	push   rbx
  430f22:	mov    rbp,rdi
  430f25:	mov    rdi,rdx
  430f28:	mov    rbx,rsi
  430f2b:	sub    rsp,0x8
  430f2f:	call   4288e0 <strcmp@plt+0x25128>
  430f34:	cmp    al,0x2
  430f36:	je     430f70 <strcmp@plt+0x2d7b8>
  430f38:	cmp    al,0xa
  430f3a:	jne    430f50 <strcmp@plt+0x2d798>
  430f3c:	mov    rax,QWORD PTR [rbx]
  430f3f:	add    rsp,0x8
  430f43:	pop    rbx
  430f44:	pop    rbp
  430f45:	ret    
  430f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430f50:	mov    rdx,0x468e3c
  430f57:	mov    edx,DWORD PTR [rdx]
  430f59:	test   edx,edx
  430f5b:	jg     430f80 <strcmp@plt+0x2d7c8>
  430f5d:	xor    eax,eax
  430f5f:	add    rsp,0x8
  430f63:	pop    rbx
  430f64:	pop    rbp
  430f65:	ret    
  430f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430f70:	mov    rax,QWORD PTR [rbp+0x0]
  430f74:	add    rsp,0x8
  430f78:	pop    rbx
  430f79:	pop    rbp
  430f7a:	ret    
  430f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  430f80:	lea    rsi,[rip+0x1ea61]        # 44f9e8 <strcmp@plt+0x4c230>
  430f87:	movzx  edx,al
  430f8a:	mov    edi,0x5
  430f8f:	xor    eax,eax
  430f91:	call   4306a0 <strcmp@plt+0x2cee8>
  430f96:	xor    eax,eax
  430f98:	jmp    430f5f <strcmp@plt+0x2d7a7>
  430f9a:	nop    WORD PTR [rax+rax*1+0x0]
  430fa0:	cmp    si,0x2
  430fa4:	je     430fd0 <strcmp@plt+0x2d818>
  430fa6:	cmp    si,0xa
  430faa:	je     430fc0 <strcmp@plt+0x2d808>
  430fac:	mov    rax,0x468e3c
  430fb3:	mov    eax,DWORD PTR [rax]
  430fb5:	test   eax,eax
  430fb7:	jg     430fe0 <strcmp@plt+0x2d828>
  430fb9:	xor    eax,eax
  430fbb:	ret    
  430fbc:	nop    DWORD PTR [rax+0x0]
  430fc0:	mov    rax,QWORD PTR [rdi+0x8]
  430fc4:	mov    rax,QWORD PTR [rax]
  430fc7:	mov    rax,QWORD PTR [rax+0x28]
  430fcb:	ret    
  430fcc:	nop    DWORD PTR [rax+0x0]
  430fd0:	mov    rax,QWORD PTR [rdi]
  430fd3:	mov    rax,QWORD PTR [rax]
  430fd6:	mov    rax,QWORD PTR [rax+0x28]
  430fda:	ret    
  430fdb:	nop    DWORD PTR [rax+rax*1+0x0]
  430fe0:	movzx  edx,si
  430fe3:	lea    rsi,[rip+0x1ea2e]        # 44fa18 <strcmp@plt+0x4c260>
  430fea:	sub    rsp,0x8
  430fee:	xor    eax,eax
  430ff0:	mov    edi,0x5
  430ff5:	call   4306a0 <strcmp@plt+0x2cee8>
  430ffa:	xor    eax,eax
  430ffc:	add    rsp,0x8
  431000:	ret    
  431001:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43100c:	nop    DWORD PTR [rax+0x0]
  431010:	push   r13
  431012:	push   r12
  431014:	mov    r12,rdi
  431017:	push   rbp
  431018:	push   rbx
  431019:	mov    rdi,rdx
  43101c:	mov    rbx,rdx
  43101f:	mov    rbp,rsi
  431022:	sub    rsp,0x8
  431026:	call   428390 <strcmp@plt+0x24bd8>
  43102b:	mov    rdi,rax
  43102e:	call   428ee0 <strcmp@plt+0x25728>
  431033:	mov    rdi,rbx
  431036:	mov    r13d,eax
  431039:	call   428390 <strcmp@plt+0x24bd8>
  43103e:	mov    rdi,rax
  431041:	call   428f00 <strcmp@plt+0x25748>
  431046:	cmp    DWORD PTR [rax+0x18],0x3
  43104a:	je     431090 <strcmp@plt+0x2d8d8>
  43104c:	mov    rdi,rax
  43104f:	call   4251c0 <strcmp@plt+0x21a08>
  431054:	cmp    ax,0x2
  431058:	je     4310f8 <strcmp@plt+0x2d940>
  43105e:	cmp    ax,0xa
  431062:	jne    4310d0 <strcmp@plt+0x2d918>
  431064:	mov    rdi,QWORD PTR [rbp+0x0]
  431068:	mov    esi,r13d
  43106b:	call   42f4d0 <strcmp@plt+0x2bd18>
  431070:	test   rax,rax
  431073:	je     43109d <strcmp@plt+0x2d8e5>
  431075:	mov    rax,QWORD PTR [rax]
  431078:	mov    rax,QWORD PTR [rax+0x28]
  43107c:	add    rsp,0x8
  431080:	pop    rbx
  431081:	pop    rbp
  431082:	pop    r12
  431084:	pop    r13
  431086:	ret    
  431087:	nop    WORD PTR [rax+rax*1+0x0]
  431090:	mov    rax,0x468e3c
  431097:	mov    ecx,DWORD PTR [rax]
  431099:	test   ecx,ecx
  43109b:	jg     4310b0 <strcmp@plt+0x2d8f8>
  43109d:	add    rsp,0x8
  4310a1:	xor    eax,eax
  4310a3:	pop    rbx
  4310a4:	pop    rbp
  4310a5:	pop    r12
  4310a7:	pop    r13
  4310a9:	ret    
  4310aa:	nop    WORD PTR [rax+rax*1+0x0]
  4310b0:	lea    rsi,[rip+0x1e991]        # 44fa48 <strcmp@plt+0x4c290>
  4310b7:	xor    eax,eax
  4310b9:	mov    edi,0x5
  4310be:	call   4306a0 <strcmp@plt+0x2cee8>
  4310c3:	add    rsp,0x8
  4310c7:	xor    eax,eax
  4310c9:	pop    rbx
  4310ca:	pop    rbp
  4310cb:	pop    r12
  4310cd:	pop    r13
  4310cf:	ret    
  4310d0:	mov    rdx,0x468e3c
  4310d7:	mov    edx,DWORD PTR [rdx]
  4310d9:	test   edx,edx
  4310db:	jle    43109d <strcmp@plt+0x2d8e5>
  4310dd:	lea    rsi,[rip+0x1e9a4]        # 44fa88 <strcmp@plt+0x4c2d0>
  4310e4:	movzx  edx,ax
  4310e7:	mov    edi,0x5
  4310ec:	xor    eax,eax
  4310ee:	call   4306a0 <strcmp@plt+0x2cee8>
  4310f3:	jmp    43109d <strcmp@plt+0x2d8e5>
  4310f5:	nop    DWORD PTR [rax]
  4310f8:	mov    rdi,QWORD PTR [r12]
  4310fc:	jmp    431068 <strcmp@plt+0x2d8b0>
  431101:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43110c:	nop    DWORD PTR [rax+0x0]
  431110:	push   rbp
  431111:	push   rbx
  431112:	mov    rbx,rdi
  431115:	mov    rdi,rsi
  431118:	mov    rbp,rsi
  43111b:	sub    rsp,0x8
  43111f:	call   428310 <strcmp@plt+0x24b58>
  431124:	cmp    eax,0x2
  431127:	je     431180 <strcmp@plt+0x2d9c8>
  431129:	cmp    eax,0x9
  43112c:	je     431160 <strcmp@plt+0x2d9a8>
  43112e:	mov    rax,0x468e3c
  431135:	cmp    DWORD PTR [rax],0x2
  431138:	jle    431157 <strcmp@plt+0x2d99f>
  43113a:	mov    rdi,rbp
  43113d:	call   428310 <strcmp@plt+0x24b58>
  431142:	lea    rsi,[rip+0x1e96f]        # 44fab8 <strcmp@plt+0x4c300>
  431149:	mov    edx,eax
  43114b:	mov    edi,0x7
  431150:	xor    eax,eax
  431152:	call   4306a0 <strcmp@plt+0x2cee8>
  431157:	add    rsp,0x8
  43115b:	xor    eax,eax
  43115d:	pop    rbx
  43115e:	pop    rbp
  43115f:	ret    
  431160:	add    rsp,0x8
  431164:	lea    rsi,[rbx+0x28]
  431168:	lea    rdi,[rbx+0x20]
  43116c:	mov    rdx,rbp
  43116f:	pop    rbx
  431170:	pop    rbp
  431171:	jmp    430f20 <strcmp@plt+0x2d768>
  431176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431180:	add    rsp,0x8
  431184:	lea    rsi,[rbx+0x18]
  431188:	lea    rdi,[rbx+0x10]
  43118c:	mov    rdx,rbp
  43118f:	pop    rbx
  431190:	pop    rbp
  431191:	jmp    431010 <strcmp@plt+0x2d858>
  431196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4311a0:	push   rbx
  4311a1:	mov    edx,DWORD PTR [rsi+0x18]
  4311a4:	cmp    edx,0x1
  4311a7:	jb     4311c0 <strcmp@plt+0x2da08>
  4311a9:	cmp    edx,0x2
  4311ac:	mov    rbx,rdi
  4311af:	jbe    4311e8 <strcmp@plt+0x2da30>
  4311b1:	cmp    edx,0x3
  4311b4:	jne    4311c0 <strcmp@plt+0x2da08>
  4311b6:	pop    rbx
  4311b7:	jmp    431110 <strcmp@plt+0x2d958>
  4311bc:	nop    DWORD PTR [rax+0x0]
  4311c0:	mov    rax,0x468e3c
  4311c7:	cmp    DWORD PTR [rax],0x2
  4311ca:	jle    4311df <strcmp@plt+0x2da27>
  4311cc:	lea    rsi,[rip+0x1e925]        # 44faf8 <strcmp@plt+0x4c340>
  4311d3:	mov    edi,0x7
  4311d8:	xor    eax,eax
  4311da:	call   4306a0 <strcmp@plt+0x2cee8>
  4311df:	xor    eax,eax
  4311e1:	pop    rbx
  4311e2:	ret    
  4311e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4311e8:	mov    rdi,rsi
  4311eb:	call   4251c0 <strcmp@plt+0x21a08>
  4311f0:	mov    rdi,rbx
  4311f3:	movzx  esi,ax
  4311f6:	pop    rbx
  4311f7:	jmp    430fa0 <strcmp@plt+0x2d7e8>
  4311fc:	nop    DWORD PTR [rax+0x0]
  431200:	push   r14
  431202:	push   r13
  431204:	push   r12
  431206:	push   rbp
  431207:	mov    r12,rdi
  43120a:	push   rbx
  43120b:	mov    rbp,rsi
  43120e:	sub    rsp,0x410
  431215:	mov    rax,QWORD PTR fs:0x28
  43121e:	mov    QWORD PTR [rsp+0x408],rax
  431226:	xor    eax,eax
  431228:	mov    rax,QWORD PTR [rdi]
  43122b:	mov    rax,QWORD PTR [rax]
  43122e:	mov    rdi,QWORD PTR [rax+0x28]
  431232:	call   41fd30 <strcmp@plt+0x1c578>
  431237:	mov    rdi,QWORD PTR [r12]
  43123b:	xor    esi,esi
  43123d:	call   41fd30 <strcmp@plt+0x1c578>
  431242:	mov    rax,QWORD PTR [r12+0x8]
  431247:	mov    rsi,rbp
  43124a:	mov    rax,QWORD PTR [rax]
  43124d:	mov    rdi,QWORD PTR [rax+0x28]
  431251:	call   41fd30 <strcmp@plt+0x1c578>
  431256:	mov    rdi,QWORD PTR [r12+0x8]
  43125b:	xor    esi,esi
  43125d:	call   41fd30 <strcmp@plt+0x1c578>
  431262:	mov    rdi,QWORD PTR [r12+0x10]
  431267:	mov    rsi,QWORD PTR [rdi]
  43126a:	mov    edx,DWORD PTR [rsi]
  43126c:	test   edx,edx
  43126e:	je     4312d3 <strcmp@plt+0x2db1b>
  431270:	xor    ebx,ebx
  431272:	jmp    431282 <strcmp@plt+0x2daca>
  431274:	nop    DWORD PTR [rax+0x0]
  431278:	mov    rsi,QWORD PTR [rdi]
  43127b:	add    ebx,0x1
  43127e:	cmp    DWORD PTR [rsi],ebx
  431280:	je     4312d3 <strcmp@plt+0x2db1b>
  431282:	mov    r8,QWORD PTR [rsi+0x10]
  431286:	lea    eax,[rbx+rbx*1]
  431289:	mov    ecx,ebx
  43128b:	shr    ecx,0x4
  43128e:	and    eax,0x1e
  431291:	mov    edx,eax
  431293:	mov    eax,DWORD PTR [r8+rcx*4]
  431297:	shrx   eax,eax,edx
  43129c:	test   al,0x3
  43129e:	jne    431278 <strcmp@plt+0x2dac0>
  4312a0:	mov    rdx,QWORD PTR [rsi+0x20]
  4312a4:	mov    eax,ebx
  4312a6:	mov    rsi,rbp
  4312a9:	add    ebx,0x1
  4312ac:	mov    r13,QWORD PTR [rdx+rax*8]
  4312b0:	mov    rax,QWORD PTR [r13+0x0]
  4312b4:	mov    rdi,QWORD PTR [rax+0x28]
  4312b8:	call   41fd30 <strcmp@plt+0x1c578>
  4312bd:	xor    esi,esi
  4312bf:	mov    rdi,r13
  4312c2:	call   41fd30 <strcmp@plt+0x1c578>
  4312c7:	mov    rdi,QWORD PTR [r12+0x10]
  4312cc:	mov    rsi,QWORD PTR [rdi]
  4312cf:	cmp    DWORD PTR [rsi],ebx
  4312d1:	jne    431282 <strcmp@plt+0x2daca>
  4312d3:	call   42f570 <strcmp@plt+0x2bdb8>
  4312d8:	mov    rdi,QWORD PTR [r12+0x18]
  4312dd:	mov    rsi,QWORD PTR [rdi]
  4312e0:	mov    eax,DWORD PTR [rsi]
  4312e2:	test   eax,eax
  4312e4:	je     43134b <strcmp@plt+0x2db93>
  4312e6:	xor    ebx,ebx
  4312e8:	jmp    4312fa <strcmp@plt+0x2db42>
  4312ea:	nop    WORD PTR [rax+rax*1+0x0]
  4312f0:	mov    rsi,QWORD PTR [rdi]
  4312f3:	add    ebx,0x1
  4312f6:	cmp    DWORD PTR [rsi],ebx
  4312f8:	je     43134b <strcmp@plt+0x2db93>
  4312fa:	mov    r8,QWORD PTR [rsi+0x10]
  4312fe:	lea    eax,[rbx+rbx*1]
  431301:	mov    ecx,ebx
  431303:	shr    ecx,0x4
  431306:	and    eax,0x1e
  431309:	mov    edx,eax
  43130b:	mov    eax,DWORD PTR [r8+rcx*4]
  43130f:	shrx   eax,eax,edx
  431314:	test   al,0x3
  431316:	jne    4312f0 <strcmp@plt+0x2db38>
  431318:	mov    rdx,QWORD PTR [rsi+0x20]
  43131c:	mov    eax,ebx
  43131e:	mov    rsi,rbp
  431321:	add    ebx,0x1
  431324:	mov    r13,QWORD PTR [rdx+rax*8]
  431328:	mov    rax,QWORD PTR [r13+0x0]
  43132c:	mov    rdi,QWORD PTR [rax+0x28]
  431330:	call   41fd30 <strcmp@plt+0x1c578>
  431335:	xor    esi,esi
  431337:	mov    rdi,r13
  43133a:	call   41fd30 <strcmp@plt+0x1c578>
  43133f:	mov    rdi,QWORD PTR [r12+0x18]
  431344:	mov    rsi,QWORD PTR [rdi]
  431347:	cmp    DWORD PTR [rsi],ebx
  431349:	jne    4312fa <strcmp@plt+0x2db42>
  43134b:	call   42f570 <strcmp@plt+0x2bdb8>
  431350:	mov    rdi,QWORD PTR [r12+0x20]
  431355:	mov    rbx,QWORD PTR [rdi]
  431358:	test   rbx,rbx
  43135b:	je     4313c6 <strcmp@plt+0x2dc0e>
  43135d:	mov    r13,rsp
  431360:	mov    r14,rsp
  431363:	cmp    QWORD PTR [rbx+0x8],0x0
  431368:	je     431376 <strcmp@plt+0x2dbbe>
  43136a:	mov    rdi,QWORD PTR [rbx+0x28]
  43136e:	mov    rsi,rbp
  431371:	call   41fd30 <strcmp@plt+0x1c578>
  431376:	mov    rax,QWORD PTR [rbx+0x10]
  43137a:	test   rax,rax
  43137d:	je     4313a6 <strcmp@plt+0x2dbee>
  43137f:	mov    rdx,QWORD PTR [rbx+0x18]
  431383:	test   rdx,rdx
  431386:	je     431470 <strcmp@plt+0x2dcb8>
  43138c:	mov    rbx,rax
  43138f:	mov    QWORD PTR [r14],rdx
  431392:	add    r14,0x8
  431396:	cmp    QWORD PTR [rbx+0x8],0x0
  43139b:	jne    43136a <strcmp@plt+0x2dbb2>
  43139d:	mov    rax,QWORD PTR [rbx+0x10]
  4313a1:	test   rax,rax
  4313a4:	jne    43137f <strcmp@plt+0x2dbc7>
  4313a6:	mov    rbx,QWORD PTR [rbx+0x18]
  4313aa:	test   rbx,rbx
  4313ad:	jne    431363 <strcmp@plt+0x2dbab>
  4313af:	cmp    r14,r13
  4313b2:	je     4313c1 <strcmp@plt+0x2dc09>
  4313b4:	mov    rbx,QWORD PTR [r14-0x8]
  4313b8:	test   rbx,rbx
  4313bb:	jne    431488 <strcmp@plt+0x2dcd0>
  4313c1:	mov    rdi,QWORD PTR [r12+0x20]
  4313c6:	xor    esi,esi
  4313c8:	call   41fd30 <strcmp@plt+0x1c578>
  4313cd:	mov    rdi,QWORD PTR [r12+0x28]
  4313d2:	mov    rbx,QWORD PTR [rdi]
  4313d5:	test   rbx,rbx
  4313d8:	je     43143b <strcmp@plt+0x2dc83>
  4313da:	mov    r13,rsp
  4313dd:	mov    r14,rsp
  4313e0:	cmp    QWORD PTR [rbx+0x8],0x0
  4313e5:	je     4313f3 <strcmp@plt+0x2dc3b>
  4313e7:	mov    rdi,QWORD PTR [rbx+0x28]
  4313eb:	mov    rsi,rbp
  4313ee:	call   41fd30 <strcmp@plt+0x1c578>
  4313f3:	mov    rax,QWORD PTR [rbx+0x10]
  4313f7:	test   rax,rax
  4313fa:	je     43141f <strcmp@plt+0x2dc67>
  4313fc:	mov    rdx,QWORD PTR [rbx+0x18]
  431400:	test   rdx,rdx
  431403:	je     431480 <strcmp@plt+0x2dcc8>
  431405:	mov    rbx,rax
  431408:	mov    QWORD PTR [r14],rdx
  43140b:	add    r14,0x8
  43140f:	cmp    QWORD PTR [rbx+0x8],0x0
  431414:	jne    4313e7 <strcmp@plt+0x2dc2f>
  431416:	mov    rax,QWORD PTR [rbx+0x10]
  43141a:	test   rax,rax
  43141d:	jne    4313fc <strcmp@plt+0x2dc44>
  43141f:	mov    rbx,QWORD PTR [rbx+0x18]
  431423:	test   rbx,rbx
  431426:	jne    4313e0 <strcmp@plt+0x2dc28>
  431428:	cmp    r14,r13
  43142b:	je     431436 <strcmp@plt+0x2dc7e>
  43142d:	mov    rbx,QWORD PTR [r14-0x8]
  431431:	test   rbx,rbx
  431434:	jne    431496 <strcmp@plt+0x2dcde>
  431436:	mov    rdi,QWORD PTR [r12+0x28]
  43143b:	xor    esi,esi
  43143d:	call   41fd30 <strcmp@plt+0x1c578>
  431442:	mov    rax,QWORD PTR [rsp+0x408]
  43144a:	xor    rax,QWORD PTR fs:0x28
  431453:	jne    431491 <strcmp@plt+0x2dcd9>
  431455:	add    rsp,0x410
  43145c:	mov    rdi,r12
  43145f:	pop    rbx
  431460:	pop    rbp
  431461:	pop    r12
  431463:	pop    r13
  431465:	pop    r14
  431467:	jmp    4037b0 <free@plt>
  43146c:	nop    DWORD PTR [rax+0x0]
  431470:	mov    rbx,rax
  431473:	jmp    431363 <strcmp@plt+0x2dbab>
  431478:	nop    DWORD PTR [rax+rax*1+0x0]
  431480:	mov    rbx,rax
  431483:	jmp    4313e0 <strcmp@plt+0x2dc28>
  431488:	sub    r14,0x8
  43148c:	jmp    431363 <strcmp@plt+0x2dbab>
  431491:	call   403460 <__stack_chk_fail@plt>
  431496:	sub    r14,0x8
  43149a:	jmp    4313e0 <strcmp@plt+0x2dc28>
  43149f:	nop
  4314a0:	mov    eax,DWORD PTR [rdi+0x30]
  4314a3:	ret    
  4314a4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4314af:	nop
  4314b0:	jmp    420780 <strcmp@plt+0x1cfc8>
  4314b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4314c0:	mov    eax,DWORD PTR [rdi+0xc]
  4314c3:	test   eax,eax
  4314c5:	setle  al
  4314c8:	ret    
  4314c9:	nop    DWORD PTR [rax+0x0]
  4314d0:	push   r12
  4314d2:	push   rbp
  4314d3:	mov    r12,rdi
  4314d6:	push   rbx
  4314d7:	mov    ebx,esi
  4314d9:	call   4257c0 <strcmp@plt+0x22008>
  4314de:	mov    ebp,eax
  4314e0:	and    eax,0xfffffff7
  4314e3:	cmp    eax,0x2
  4314e6:	jne    431548 <strcmp@plt+0x2dd90>
  4314e8:	cmp    ebp,0x2
  4314eb:	je     431520 <strcmp@plt+0x2dd68>
  4314ed:	cmp    bl,0x80
  4314f0:	ja     431596 <strcmp@plt+0x2ddde>
  4314f6:	mov    rdi,r12
  4314f9:	call   4257d0 <strcmp@plt+0x22018>
  4314fe:	movzx  edx,bl
  431501:	mov    rsi,rax
  431504:	mov    edi,ebp
  431506:	call   41f8e0 <strcmp@plt+0x1c128>
  43150b:	test   rax,rax
  43150e:	mov    rbx,rax
  431511:	je     431561 <strcmp@plt+0x2dda9>
  431513:	mov    rax,rbx
  431516:	pop    rbx
  431517:	pop    rbp
  431518:	pop    r12
  43151a:	ret    
  43151b:	nop    DWORD PTR [rax+rax*1+0x0]
  431520:	cmp    bl,0x20
  431523:	jbe    4314f6 <strcmp@plt+0x2dd3e>
  431525:	lea    rcx,[rip+0x1eef4]        # 450420 <strcmp@plt+0x4cc68>
  43152c:	lea    rsi,[rip+0x1ee87]        # 4503ba <strcmp@plt+0x4cc02>
  431533:	lea    rdi,[rip+0x1ee91]        # 4503cb <strcmp@plt+0x4cc13>
  43153a:	mov    edx,0x3e8
  43153f:	call   4032c0 <__assert_fail@plt>
  431544:	nop    DWORD PTR [rax+0x0]
  431548:	lea    rsi,[rip+0x1e5e1]        # 44fb30 <strcmp@plt+0x4c378>
  43154f:	mov    edx,ebp
  431551:	mov    edi,0x3
  431556:	xor    eax,eax
  431558:	xor    ebx,ebx
  43155a:	call   4306a0 <strcmp@plt+0x2cee8>
  43155f:	jmp    431513 <strcmp@plt+0x2dd5b>
  431561:	call   403050 <__errno_location@plt>
  431566:	mov    edi,DWORD PTR [rax]
  431568:	call   403170 <strerror@plt>
  43156d:	mov    rdi,r12
  431570:	mov    rbp,rax
  431573:	call   425f90 <strcmp@plt+0x227d8>
  431578:	lea    rsi,[rip+0x1e5e1]        # 44fb60 <strcmp@plt+0x4c3a8>
  43157f:	mov    rdx,rax
  431582:	mov    rcx,rbp
  431585:	mov    edi,0x3
  43158a:	xor    eax,eax
  43158c:	call   4306a0 <strcmp@plt+0x2cee8>
  431591:	jmp    431513 <strcmp@plt+0x2dd5b>
  431596:	lea    rcx,[rip+0x1ee83]        # 450420 <strcmp@plt+0x4cc68>
  43159d:	lea    rsi,[rip+0x1ee16]        # 4503ba <strcmp@plt+0x4cc02>
  4315a4:	lea    rdi,[rip+0x1ee30]        # 4503db <strcmp@plt+0x4cc23>
  4315ab:	mov    edx,0x3e8
  4315b0:	call   4032c0 <__assert_fail@plt>
  4315b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4315c0:	push   r13
  4315c2:	push   r12
  4315c4:	mov    r12,rsi
  4315c7:	push   rbp
  4315c8:	push   rbx
  4315c9:	movzx  esi,dl
  4315cc:	mov    rbx,rdi
  4315cf:	mov    rdi,r12
  4315d2:	mov    r13,rcx
  4315d5:	sub    rsp,0x8
  4315d9:	call   4314d0 <strcmp@plt+0x2dd18>
  4315de:	mov    rdi,rbx
  4315e1:	mov    rbp,rax
  4315e4:	mov    rsi,rax
  4315e7:	call   4201f0 <strcmp@plt+0x1ca38>
  4315ec:	mov    rdi,rbp
  4315ef:	mov    rbx,rax
  4315f2:	call   41fb10 <strcmp@plt+0x1c358>
  4315f7:	test   rbx,rbx
  4315fa:	je     431650 <strcmp@plt+0x2de98>
  4315fc:	cmp    QWORD PTR [rbx+0x28],0x0
  431601:	je     431678 <strcmp@plt+0x2dec0>
  431603:	mov    rax,0x468e3c
  43160a:	cmp    DWORD PTR [rax],0x2
  43160d:	jg     431620 <strcmp@plt+0x2de68>
  43160f:	add    rsp,0x8
  431613:	mov    rax,rbx
  431616:	pop    rbx
  431617:	pop    rbp
  431618:	pop    r12
  43161a:	pop    r13
  43161c:	ret    
  43161d:	nop    DWORD PTR [rax]
  431620:	mov    rdi,r12
  431623:	call   425f90 <strcmp@plt+0x227d8>
  431628:	lea    rsi,[rip+0x1e5b1]        # 44fbe0 <strcmp@plt+0x4c428>
  43162f:	mov    rdx,rax
  431632:	mov    edi,0x7
  431637:	xor    eax,eax
  431639:	call   4306a0 <strcmp@plt+0x2cee8>
  43163e:	add    rsp,0x8
  431642:	mov    rax,rbx
  431645:	pop    rbx
  431646:	pop    rbp
  431647:	pop    r12
  431649:	pop    r13
  43164b:	ret    
  43164c:	nop    DWORD PTR [rax+0x0]
  431650:	mov    rax,0x468e3c
  431657:	cmp    DWORD PTR [rax],0x2
  43165a:	jle    43160f <strcmp@plt+0x2de57>
  43165c:	lea    rsi,[rip+0x1e545]        # 44fba8 <strcmp@plt+0x4c3f0>
  431663:	mov    edi,0x7
  431668:	xor    eax,eax
  43166a:	call   4306a0 <strcmp@plt+0x2cee8>
  43166f:	jmp    43160f <strcmp@plt+0x2de57>
  431671:	nop    DWORD PTR [rax+0x0]
  431678:	mov    QWORD PTR [rbx+0x28],r13
  43167c:	add    rsp,0x8
  431680:	mov    rax,rbx
  431683:	pop    rbx
  431684:	pop    rbp
  431685:	pop    r12
  431687:	pop    r13
  431689:	ret    
  43168a:	nop    WORD PTR [rax+rax*1+0x0]
  431690:	push   r12
  431692:	push   rbp
  431693:	mov    edi,0x38
  431698:	push   rbx
  431699:	sub    rsp,0x40
  43169d:	mov    rax,QWORD PTR fs:0x28
  4316a6:	mov    QWORD PTR [rsp+0x38],rax
  4316ab:	xor    eax,eax
  4316ad:	call   434790 <strcmp@plt+0x30fd8>
  4316b2:	mov    rbx,rax
  4316b5:	mov    rax,0x468e3c
  4316bc:	cmp    DWORD PTR [rax],0x2
  4316bf:	jle    4316d4 <strcmp@plt+0x2df1c>
  4316c1:	lea    rsi,[rip+0x1ed24]        # 4503ec <strcmp@plt+0x4cc34>
  4316c8:	mov    edi,0x7
  4316cd:	xor    eax,eax
  4316cf:	call   4306a0 <strcmp@plt+0x2cee8>
  4316d4:	mov    edi,0x20
  4316d9:	lea    rbp,[rsp+0x20]
  4316de:	call   41fb60 <strcmp@plt+0x1c3a8>
  4316e3:	mov    edi,0x80
  4316e8:	mov    QWORD PTR [rbx],rax
  4316eb:	call   41fb60 <strcmp@plt+0x1c3a8>
  4316f0:	mov    QWORD PTR [rbx+0x8],rax
  4316f4:	xor    eax,eax
  4316f6:	call   42ec70 <strcmp@plt+0x2b4b8>
  4316fb:	mov    QWORD PTR [rbx+0x10],rax
  4316ff:	xor    eax,eax
  431701:	call   42ec70 <strcmp@plt+0x2b4b8>
  431706:	mov    esi,0x2
  43170b:	mov    QWORD PTR [rbx+0x18],rax
  43170f:	mov    rdi,rsp
  431712:	mov    QWORD PTR [rsp],0x0
  43171a:	mov    QWORD PTR [rsp+0x8],0x0
  431723:	mov    DWORD PTR [rsp+0x10],0x0
  43172b:	call   4258f0 <strcmp@plt+0x22138>
  431730:	mov    esi,0xa
  431735:	mov    rdi,rbp
  431738:	mov    QWORD PTR [rsp+0x20],0x0
  431741:	mov    QWORD PTR [rsp+0x28],0x0
  43174a:	mov    DWORD PTR [rsp+0x30],0x0
  431752:	call   4258f0 <strcmp@plt+0x22138>
  431757:	mov    edi,0x20
  43175c:	call   41fb60 <strcmp@plt+0x1c3a8>
  431761:	mov    rdi,QWORD PTR [rbx]
  431764:	xor    edx,edx
  431766:	mov    rcx,rax
  431769:	mov    rsi,rsp
  43176c:	call   4315c0 <strcmp@plt+0x2de08>
  431771:	mov    edi,0x80
  431776:	call   41fb60 <strcmp@plt+0x1c3a8>
  43177b:	mov    rdi,QWORD PTR [rbx+0x8]
  43177f:	xor    edx,edx
  431781:	mov    rcx,rax
  431784:	mov    rsi,rbp
  431787:	call   4315c0 <strcmp@plt+0x2de08>
  43178c:	mov    edi,0x20
  431791:	call   41fb60 <strcmp@plt+0x1c3a8>
  431796:	mov    edi,0x80
  43179b:	mov    QWORD PTR [rbx+0x20],rax
  43179f:	call   41fb60 <strcmp@plt+0x1c3a8>
  4317a4:	mov    rdx,QWORD PTR [rbx]
  4317a7:	mov    QWORD PTR [rbx+0x28],rax
  4317ab:	mov    rdx,QWORD PTR [rdx]
  4317ae:	cmp    QWORD PTR [rdx+0x28],0x0
  4317b3:	je     4317f8 <strcmp@plt+0x2e040>
  4317b5:	mov    rdx,QWORD PTR [rbx+0x8]
  4317b9:	mov    rdx,QWORD PTR [rdx]
  4317bc:	cmp    QWORD PTR [rdx+0x28],0x0
  4317c1:	je     4317f8 <strcmp@plt+0x2e040>
  4317c3:	cmp    QWORD PTR [rbx+0x20],0x0
  4317c8:	je     4317f8 <strcmp@plt+0x2e040>
  4317ca:	test   rax,rax
  4317cd:	je     4317f8 <strcmp@plt+0x2e040>
  4317cf:	mov    DWORD PTR [rbx+0x30],0x0
  4317d6:	mov    rcx,QWORD PTR [rsp+0x38]
  4317db:	xor    rcx,QWORD PTR fs:0x28
  4317e4:	mov    rax,rbx
  4317e7:	jne    43180f <strcmp@plt+0x2e057>
  4317e9:	add    rsp,0x40
  4317ed:	pop    rbx
  4317ee:	pop    rbp
  4317ef:	pop    r12
  4317f1:	ret    
  4317f2:	nop    WORD PTR [rax+rax*1+0x0]
  4317f8:	lea    rsi,[rip+0x1e421]        # 44fc20 <strcmp@plt+0x4c468>
  4317ff:	mov    edi,0x1
  431804:	xor    eax,eax
  431806:	xor    ebx,ebx
  431808:	call   4306a0 <strcmp@plt+0x2cee8>
  43180d:	jmp    4317d6 <strcmp@plt+0x2e01e>
  43180f:	call   403460 <__stack_chk_fail@plt>
  431814:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43181f:	nop
  431820:	push   r13
  431822:	push   r12
  431824:	mov    r12,rdi
  431827:	push   rbp
  431828:	push   rbx
  431829:	mov    rbp,rsi
  43182c:	mov    rdi,rsi
  43182f:	mov    r13,rdx
  431832:	sub    rsp,0x8
  431836:	call   425e40 <strcmp@plt+0x22688>
  43183b:	mov    rdi,rbp
  43183e:	mov    ebx,eax
  431840:	call   425e50 <strcmp@plt+0x22698>
  431845:	movzx  edx,bl
  431848:	mov    rcx,r13
  43184b:	mov    rdi,r12
  43184e:	mov    rsi,rax
  431851:	call   4315c0 <strcmp@plt+0x2de08>
  431856:	test   rax,rax
  431859:	setne  al
  43185c:	add    rsp,0x8
  431860:	pop    rbx
  431861:	movzx  eax,al
  431864:	pop    rbp
  431865:	pop    r12
  431867:	pop    r13
  431869:	ret    
  43186a:	nop    WORD PTR [rax+rax*1+0x0]
  431870:	push   r15
  431872:	push   r14
  431874:	mov    r14,rdx
  431877:	push   r13
  431879:	push   r12
  43187b:	mov    r13,rdi
  43187e:	push   rbp
  43187f:	push   rbx
  431880:	mov    rdi,rsi
  431883:	mov    rbx,rsi
  431886:	sub    rsp,0x8
  43188a:	call   428780 <strcmp@plt+0x24fc8>
  43188f:	mov    rdi,rbx
  431892:	mov    rbp,rax
  431895:	call   4287d0 <strcmp@plt+0x25018>
  43189a:	cmp    DWORD PTR [rbp+0x18],0x1
  43189e:	mov    r12,rax
  4318a1:	jne    4318a9 <strcmp@plt+0x2e0f1>
  4318a3:	cmp    DWORD PTR [rax+0x18],0x1
  4318a7:	je     4318f0 <strcmp@plt+0x2e138>
  4318a9:	mov    rdi,r12
  4318ac:	call   424890 <strcmp@plt+0x210d8>
  4318b1:	mov    rdi,rbp
  4318b4:	mov    rbx,rax
  4318b7:	call   424890 <strcmp@plt+0x210d8>
  4318bc:	lea    rsi,[rip+0x1e38d]        # 44fc50 <strcmp@plt+0x4c498>
  4318c3:	mov    rdx,rax
  4318c6:	mov    rcx,rbx
  4318c9:	xor    eax,eax
  4318cb:	mov    edi,0x3
  4318d0:	call   4306a0 <strcmp@plt+0x2cee8>
  4318d5:	xor    eax,eax
  4318d7:	add    rsp,0x8
  4318db:	pop    rbx
  4318dc:	pop    rbp
  4318dd:	pop    r12
  4318df:	pop    r13
  4318e1:	pop    r14
  4318e3:	pop    r15
  4318e5:	ret    
  4318e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4318f0:	mov    rdi,rbx
  4318f3:	call   428860 <strcmp@plt+0x250a8>
  4318f8:	mov    rdi,rbx
  4318fb:	movzx  r15d,al
  4318ff:	call   4288a0 <strcmp@plt+0x250e8>
  431904:	xor    ecx,ecx
  431906:	mov    rdi,r13
  431909:	mov    edx,r15d
  43190c:	mov    rsi,rbp
  43190f:	movzx  ebx,al
  431912:	call   4315c0 <strcmp@plt+0x2de08>
  431917:	test   rax,rax
  43191a:	mov    r13,rax
  43191d:	je     431980 <strcmp@plt+0x2e1c8>
  43191f:	mov    rdi,QWORD PTR [rax+0x28]
  431923:	test   rdi,rdi
  431926:	je     4319b8 <strcmp@plt+0x2e200>
  43192c:	mov    edx,ebx
  43192e:	mov    rcx,r14
  431931:	mov    rsi,r12
  431934:	call   4315c0 <strcmp@plt+0x2de08>
  431939:	mov    rdx,rax
  43193c:	mov    eax,0x1
  431941:	test   rdx,rdx
  431944:	jne    4318d7 <strcmp@plt+0x2e11f>
  431946:	mov    rax,0x468e3c
  43194d:	cmp    DWORD PTR [rax],0x2
  431950:	jg     431956 <strcmp@plt+0x2e19e>
  431952:	xor    eax,eax
  431954:	jmp    4318d7 <strcmp@plt+0x2e11f>
  431956:	mov    rdi,r12
  431959:	call   425f90 <strcmp@plt+0x227d8>
  43195e:	lea    rsi,[rip+0x1e3a3]        # 44fd08 <strcmp@plt+0x4c550>
  431965:	mov    rdx,rax
  431968:	mov    ecx,ebx
  43196a:	xor    eax,eax
  43196c:	mov    edi,0x7
  431971:	call   4306a0 <strcmp@plt+0x2cee8>
  431976:	xor    eax,eax
  431978:	jmp    4318d7 <strcmp@plt+0x2e11f>
  43197d:	nop    DWORD PTR [rax]
  431980:	mov    rax,0x468e3c
  431987:	cmp    DWORD PTR [rax],0x2
  43198a:	jle    431952 <strcmp@plt+0x2e19a>
  43198c:	mov    rdi,rbp
  43198f:	call   425f90 <strcmp@plt+0x227d8>
  431994:	lea    rsi,[rip+0x1e2fd]        # 44fc98 <strcmp@plt+0x4c4e0>
  43199b:	mov    rdx,rax
  43199e:	mov    ecx,r15d
  4319a1:	xor    eax,eax
  4319a3:	mov    edi,0x7
  4319a8:	call   4306a0 <strcmp@plt+0x2cee8>
  4319ad:	xor    eax,eax
  4319af:	jmp    4318d7 <strcmp@plt+0x2e11f>
  4319b4:	nop    DWORD PTR [rax+0x0]
  4319b8:	mov    rdi,r12
  4319bb:	call   425800 <strcmp@plt+0x22048>
  4319c0:	movzx  edi,al
  4319c3:	shl    edi,0x3
  4319c6:	call   41fb60 <strcmp@plt+0x1c3a8>
  4319cb:	test   rax,rax
  4319ce:	mov    QWORD PTR [r13+0x28],rax
  4319d2:	mov    rdi,rax
  4319d5:	jne    43192c <strcmp@plt+0x2e174>
  4319db:	mov    rax,0x468e3c
  4319e2:	cmp    DWORD PTR [rax],0x2
  4319e5:	jle    431952 <strcmp@plt+0x2e19a>
  4319eb:	lea    rsi,[rip+0x1e2ee]        # 44fce0 <strcmp@plt+0x4c528>
  4319f2:	xor    eax,eax
  4319f4:	mov    edi,0x7
  4319f9:	call   4306a0 <strcmp@plt+0x2cee8>
  4319fe:	xor    eax,eax
  431a00:	jmp    4318d7 <strcmp@plt+0x2e11f>
  431a05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  431a10:	push   r15
  431a12:	push   r14
  431a14:	push   r13
  431a16:	push   r12
  431a18:	mov    r12,rdx
  431a1b:	push   rbp
  431a1c:	push   rbx
  431a1d:	mov    rbp,rdi
  431a20:	mov    rbx,rsi
  431a23:	sub    rsp,0x48
  431a27:	mov    edx,DWORD PTR [rsi+0x18]
  431a2a:	mov    rax,QWORD PTR fs:0x28
  431a33:	mov    QWORD PTR [rsp+0x38],rax
  431a38:	xor    eax,eax
  431a3a:	cmp    edx,0x2
  431a3d:	je     431b58 <strcmp@plt+0x2e3a0>
  431a43:	cmp    edx,0x3
  431a46:	je     431ae0 <strcmp@plt+0x2e328>
  431a4c:	cmp    edx,0x1
  431a4f:	je     431ab8 <strcmp@plt+0x2e300>
  431a51:	lea    rsi,[rip+0x1e338]        # 44fd90 <strcmp@plt+0x4c5d8>
  431a58:	mov    edi,0x3
  431a5d:	xor    eax,eax
  431a5f:	call   4306a0 <strcmp@plt+0x2cee8>
  431a64:	mov    rax,0x468e3c
  431a6b:	mov    eax,DWORD PTR [rax]
  431a6d:	cmp    eax,0x2
  431a70:	jle    431ad7 <strcmp@plt+0x2e31f>
  431a72:	mov    rdi,rbx
  431a75:	call   424890 <strcmp@plt+0x210d8>
  431a7a:	lea    rsi,[rip+0x1e53f]        # 44ffc0 <strcmp@plt+0x4c808>
  431a81:	mov    rdx,rax
  431a84:	mov    edi,0x7
  431a89:	xor    eax,eax
  431a8b:	call   4306a0 <strcmp@plt+0x2cee8>
  431a90:	xor    eax,eax
  431a92:	mov    rcx,QWORD PTR [rsp+0x38]
  431a97:	xor    rcx,QWORD PTR fs:0x28
  431aa0:	jne    431e8d <strcmp@plt+0x2e6d5>
  431aa6:	add    rsp,0x48
  431aaa:	pop    rbx
  431aab:	pop    rbp
  431aac:	pop    r12
  431aae:	pop    r13
  431ab0:	pop    r14
  431ab2:	pop    r15
  431ab4:	ret    
  431ab5:	nop    DWORD PTR [rax]
  431ab8:	lea    rsi,[rip+0x1e299]        # 44fd58 <strcmp@plt+0x4c5a0>
  431abf:	mov    edi,0x3
  431ac4:	call   4306a0 <strcmp@plt+0x2cee8>
  431ac9:	mov    rax,0x468e3c
  431ad0:	mov    eax,DWORD PTR [rax]
  431ad2:	cmp    eax,0x2
  431ad5:	jg     431a72 <strcmp@plt+0x2e2ba>
  431ad7:	xor    eax,eax
  431ad9:	jmp    431a92 <strcmp@plt+0x2e2da>
  431adb:	nop    DWORD PTR [rax+rax*1+0x0]
  431ae0:	mov    rdi,rsi
  431ae3:	call   428310 <strcmp@plt+0x24b58>
  431ae8:	cmp    eax,0x2
  431aeb:	je     431bc0 <strcmp@plt+0x2e408>
  431af1:	cmp    eax,0x9
  431af4:	jne    431c80 <strcmp@plt+0x2e4c8>
  431afa:	lea    rsi,[rbp+0x28]
  431afe:	lea    rdi,[rbp+0x20]
  431b02:	mov    rdx,rbx
  431b05:	call   430f20 <strcmp@plt+0x2d768>
  431b0a:	mov    rdx,r12
  431b0d:	mov    rsi,rbx
  431b10:	mov    rdi,rax
  431b13:	call   431870 <strcmp@plt+0x2e0b8>
  431b18:	cmp    eax,0x1
  431b1b:	je     431d50 <strcmp@plt+0x2e598>
  431b21:	mov    rbp,0x468e3c
  431b28:	cmp    DWORD PTR [rbp+0x0],0x1
  431b2c:	jle    431ad7 <strcmp@plt+0x2e31f>
  431b2e:	mov    rdi,rbx
  431b31:	call   427630 <strcmp@plt+0x23e78>
  431b36:	lea    rsi,[rip+0x1e3e3]        # 44ff20 <strcmp@plt+0x4c768>
  431b3d:	mov    rdx,rax
  431b40:	mov    edi,0x6
  431b45:	xor    eax,eax
  431b47:	call   4306a0 <strcmp@plt+0x2cee8>
  431b4c:	mov    eax,DWORD PTR [rbp+0x0]
  431b4f:	jmp    431a6d <strcmp@plt+0x2e2b5>
  431b54:	nop    DWORD PTR [rax+0x0]
  431b58:	mov    rdi,rsi
  431b5b:	call   425e60 <strcmp@plt+0x226a8>
  431b60:	mov    rdi,rbp
  431b63:	movzx  esi,al
  431b66:	call   430fa0 <strcmp@plt+0x2d7e8>
  431b6b:	mov    rdx,r12
  431b6e:	mov    rsi,rbx
  431b71:	mov    rdi,rax
  431b74:	call   431820 <strcmp@plt+0x2e068>
  431b79:	cmp    eax,0x1
  431b7c:	je     431c60 <strcmp@plt+0x2e4a8>
  431b82:	mov    rbp,0x468e3c
  431b89:	cmp    DWORD PTR [rbp+0x0],0x2
  431b8d:	jle    431ad7 <strcmp@plt+0x2e31f>
  431b93:	mov    rdi,rbx
  431b96:	call   425fa0 <strcmp@plt+0x227e8>
  431b9b:	lea    rsi,[rip+0x1e21e]        # 44fdc0 <strcmp@plt+0x4c608>
  431ba2:	mov    rdx,rax
  431ba5:	mov    edi,0x7
  431baa:	xor    eax,eax
  431bac:	call   4306a0 <strcmp@plt+0x2cee8>
  431bb1:	mov    eax,DWORD PTR [rbp+0x0]
  431bb4:	jmp    431a6d <strcmp@plt+0x2e2b5>
  431bb9:	nop    DWORD PTR [rax+0x0]
  431bc0:	mov    rdi,rbx
  431bc3:	call   428eb0 <strcmp@plt+0x256f8>
  431bc8:	mov    rdi,rbx
  431bcb:	mov    DWORD PTR [rsp+0x4],eax
  431bcf:	call   429bd0 <strcmp@plt+0x26418>
  431bd4:	test   rax,rax
  431bd7:	mov    r15,rax
  431bda:	je     431a64 <strcmp@plt+0x2e2ac>
  431be0:	lea    r13,[rbp+0x10]
  431be4:	lea    r14,[rbp+0x18]
  431be8:	mov    rdi,rax
  431beb:	call   4251c0 <strcmp@plt+0x21a08>
  431bf0:	mov    rdx,rbx
  431bf3:	mov    rsi,r14
  431bf6:	mov    rdi,r13
  431bf9:	mov    WORD PTR [rsp+0x8],ax
  431bfe:	call   431010 <strcmp@plt+0x2d858>
  431c03:	test   rax,rax
  431c06:	je     431d89 <strcmp@plt+0x2e5d1>
  431c0c:	mov    rdx,r12
  431c0f:	mov    rsi,r15
  431c12:	mov    rdi,rax
  431c15:	call   431820 <strcmp@plt+0x2e068>
  431c1a:	cmp    eax,0x1
  431c1d:	je     431d18 <strcmp@plt+0x2e560>
  431c23:	mov    rbp,0x468e3c
  431c2a:	cmp    DWORD PTR [rbp+0x0],0x2
  431c2e:	jle    431ad7 <strcmp@plt+0x2e31f>
  431c34:	mov    rdi,rbx
  431c37:	call   4282c0 <strcmp@plt+0x24b08>
  431c3c:	lea    rsi,[rip+0x1e23d]        # 44fe80 <strcmp@plt+0x4c6c8>
  431c43:	mov    rdx,rax
  431c46:	mov    edi,0x7
  431c4b:	xor    eax,eax
  431c4d:	call   4306a0 <strcmp@plt+0x2cee8>
  431c52:	mov    eax,DWORD PTR [rbp+0x0]
  431c55:	jmp    431a6d <strcmp@plt+0x2e2b5>
  431c5a:	nop    WORD PTR [rax+rax*1+0x0]
  431c60:	mov    r12,0x468e3c
  431c67:	cmp    DWORD PTR [r12],0x2
  431c6c:	jg     431cc0 <strcmp@plt+0x2e508>
  431c6e:	add    DWORD PTR [rbp+0x30],0x1
  431c72:	mov    eax,0x1
  431c77:	jmp    431a92 <strcmp@plt+0x2e2da>
  431c7c:	nop    DWORD PTR [rax+0x0]
  431c80:	mov    rbp,0x468e3c
  431c87:	cmp    DWORD PTR [rbp+0x0],0x2
  431c8b:	jle    431ad7 <strcmp@plt+0x2e31f>
  431c91:	mov    rdi,rbx
  431c94:	call   428310 <strcmp@plt+0x24b58>
  431c99:	lea    rsi,[rip+0x1e2f0]        # 44ff90 <strcmp@plt+0x4c7d8>
  431ca0:	mov    edx,eax
  431ca2:	mov    edi,0x7
  431ca7:	xor    eax,eax
  431ca9:	call   4306a0 <strcmp@plt+0x2cee8>
  431cae:	mov    eax,DWORD PTR [rbp+0x0]
  431cb1:	jmp    431a6d <strcmp@plt+0x2e2b5>
  431cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431cc0:	mov    rdi,rbx
  431cc3:	call   425fa0 <strcmp@plt+0x227e8>
  431cc8:	lea    rsi,[rip+0x1e159]        # 44fe28 <strcmp@plt+0x4c670>
  431ccf:	mov    rdx,rax
  431cd2:	mov    edi,0x7
  431cd7:	xor    eax,eax
  431cd9:	call   4306a0 <strcmp@plt+0x2cee8>
  431cde:	mov    eax,DWORD PTR [r12]
  431ce2:	cmp    eax,0x2
  431ce5:	jle    431c6e <strcmp@plt+0x2e4b6>
  431ce7:	mov    rdi,rbx
  431cea:	call   424890 <strcmp@plt+0x210d8>
  431cef:	lea    rsi,[rip+0x1e707]        # 4503fd <strcmp@plt+0x4cc45>
  431cf6:	mov    rdx,rax
  431cf9:	mov    edi,0x7
  431cfe:	xor    eax,eax
  431d00:	call   4306a0 <strcmp@plt+0x2cee8>
  431d05:	add    DWORD PTR [rbp+0x30],0x1
  431d09:	mov    eax,0x1
  431d0e:	jmp    431a92 <strcmp@plt+0x2e2da>
  431d13:	nop    DWORD PTR [rax+rax*1+0x0]
  431d18:	mov    r12,0x468e3c
  431d1f:	cmp    DWORD PTR [r12],0x2
  431d24:	jle    431c6e <strcmp@plt+0x2e4b6>
  431d2a:	mov    rdi,rbx
  431d2d:	call   4282c0 <strcmp@plt+0x24b08>
  431d32:	lea    rsi,[rip+0x1e1b7]        # 44fef0 <strcmp@plt+0x4c738>
  431d39:	mov    rdx,rax
  431d3c:	mov    edi,0x7
  431d41:	xor    eax,eax
  431d43:	call   4306a0 <strcmp@plt+0x2cee8>
  431d48:	mov    eax,DWORD PTR [r12]
  431d4c:	jmp    431ce2 <strcmp@plt+0x2e52a>
  431d4e:	xchg   ax,ax
  431d50:	mov    r12,0x468e3c
  431d57:	cmp    DWORD PTR [r12],0x2
  431d5c:	jle    431c6e <strcmp@plt+0x2e4b6>
  431d62:	mov    rdi,rbx
  431d65:	call   4282c0 <strcmp@plt+0x24b08>
  431d6a:	lea    rsi,[rip+0x1e1f7]        # 44ff68 <strcmp@plt+0x4c7b0>
  431d71:	mov    rdx,rax
  431d74:	mov    edi,0x7
  431d79:	xor    eax,eax
  431d7b:	call   4306a0 <strcmp@plt+0x2cee8>
  431d80:	mov    eax,DWORD PTR [r12]
  431d84:	jmp    431ce2 <strcmp@plt+0x2e52a>
  431d89:	lea    rax,[rsp+0x20]
  431d8e:	mov    QWORD PTR [rsp+0x20],0x0
  431d97:	mov    QWORD PTR [rsp+0x28],0x0
  431da0:	mov    DWORD PTR [rsp+0x30],0x0
  431da8:	mov    QWORD PTR [rsp+0x10],rax
  431dad:	movzx  eax,WORD PTR [rsp+0x8]
  431db2:	cmp    ax,0x2
  431db6:	je     431e2d <strcmp@plt+0x2e675>
  431db8:	cmp    ax,0xa
  431dbc:	jne    431e5b <strcmp@plt+0x2e6a3>
  431dc2:	mov    rdi,QWORD PTR [rsp+0x10]
  431dc7:	mov    esi,0xa
  431dcc:	call   4258f0 <strcmp@plt+0x22138>
  431dd1:	mov    edi,0x80
  431dd6:	call   41fb60 <strcmp@plt+0x1c3a8>
  431ddb:	mov    QWORD PTR [rsp+0x8],rax
  431de0:	mov    rax,QWORD PTR [rbp+0x18]
  431de4:	mov    edi,0x80
  431de9:	mov    QWORD PTR [rsp+0x18],rax
  431dee:	call   41fb60 <strcmp@plt+0x1c3a8>
  431df3:	mov    rsi,QWORD PTR [rsp+0x10]
  431df8:	mov    rdi,QWORD PTR [rsp+0x8]
  431dfd:	mov    rcx,rax
  431e00:	xor    edx,edx
  431e02:	call   4315c0 <strcmp@plt+0x2de08>
  431e07:	mov    rdx,QWORD PTR [rsp+0x8]
  431e0c:	mov    esi,DWORD PTR [rsp+0x4]
  431e10:	mov    rdi,QWORD PTR [rsp+0x18]
  431e15:	call   42ece0 <strcmp@plt+0x2b528>
  431e1a:	mov    rdx,rbx
  431e1d:	mov    rsi,r14
  431e20:	mov    rdi,r13
  431e23:	call   431010 <strcmp@plt+0x2d858>
  431e28:	jmp    431c0c <strcmp@plt+0x2e454>
  431e2d:	mov    rdi,QWORD PTR [rsp+0x10]
  431e32:	mov    esi,0x2
  431e37:	call   4258f0 <strcmp@plt+0x22138>
  431e3c:	mov    edi,0x20
  431e41:	call   41fb60 <strcmp@plt+0x1c3a8>
  431e46:	mov    QWORD PTR [rsp+0x8],rax
  431e4b:	mov    rax,QWORD PTR [rbp+0x10]
  431e4f:	mov    edi,0x20
  431e54:	mov    QWORD PTR [rsp+0x18],rax
  431e59:	jmp    431dee <strcmp@plt+0x2e636>
  431e5b:	mov    rbp,0x468e3c
  431e62:	mov    eax,DWORD PTR [rbp+0x0]
  431e65:	test   eax,eax
  431e67:	jle    431ad7 <strcmp@plt+0x2e31f>
  431e6d:	movzx  edx,WORD PTR [rsp+0x8]
  431e72:	lea    rsi,[rip+0x1dfdf]        # 44fe58 <strcmp@plt+0x4c6a0>
  431e79:	xor    eax,eax
  431e7b:	mov    edi,0x5
  431e80:	call   4306a0 <strcmp@plt+0x2cee8>
  431e85:	mov    eax,DWORD PTR [rbp+0x0]
  431e88:	jmp    431a6d <strcmp@plt+0x2e2b5>
  431e8d:	call   403460 <__stack_chk_fail@plt>
  431e92:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  431e9d:	nop    DWORD PTR [rax]
  431ea0:	push   rbp
  431ea1:	push   rbx
  431ea2:	mov    rbp,rdi
  431ea5:	mov    rdi,rsi
  431ea8:	mov    rbx,rsi
  431eab:	sub    rsp,0x8
  431eaf:	call   4257c0 <strcmp@plt+0x22008>
  431eb4:	mov    esi,0x80
  431eb9:	cmp    eax,0x2
  431ebc:	mov    eax,0x20
  431ec1:	cmove  esi,eax
  431ec4:	mov    rdi,rbx
  431ec7:	call   4314d0 <strcmp@plt+0x2dd18>
  431ecc:	mov    rdi,rbp
  431ecf:	mov    rbx,rax
  431ed2:	mov    rsi,rax
  431ed5:	call   4201e0 <strcmp@plt+0x1ca28>
  431eda:	mov    rdi,rbx
  431edd:	mov    rbp,rax
  431ee0:	call   41fb10 <strcmp@plt+0x1c358>
  431ee5:	add    rsp,0x8
  431ee9:	mov    rax,rbp
  431eec:	pop    rbx
  431eed:	pop    rbp
  431eee:	ret    
  431eef:	nop
  431ef0:	push   rbp
  431ef1:	push   rbx
  431ef2:	mov    rbp,rdi
  431ef5:	mov    rdi,rsi
  431ef8:	movzx  esi,dl
  431efb:	sub    rsp,0x8
  431eff:	call   4314d0 <strcmp@plt+0x2dd18>
  431f04:	mov    rdi,rbp
  431f07:	mov    rbx,rax
  431f0a:	mov    rsi,rax
  431f0d:	call   41fed0 <strcmp@plt+0x1c718>
  431f12:	mov    rdi,rbx
  431f15:	mov    rbp,rax
  431f18:	call   41fb10 <strcmp@plt+0x1c358>
  431f1d:	add    rsp,0x8
  431f21:	mov    rax,rbp
  431f24:	pop    rbx
  431f25:	pop    rbp
  431f26:	ret    
  431f27:	nop    WORD PTR [rax+rax*1+0x0]
  431f30:	push   r12
  431f32:	push   rbp
  431f33:	mov    r12,rdi
  431f36:	push   rbx
  431f37:	mov    rbp,rsi
  431f3a:	mov    rdi,rsi
  431f3d:	call   425e40 <strcmp@plt+0x22688>
  431f42:	mov    rdi,rbp
  431f45:	mov    ebx,eax
  431f47:	call   425e50 <strcmp@plt+0x22698>
  431f4c:	movzx  edx,bl
  431f4f:	mov    rsi,rax
  431f52:	mov    rdi,r12
  431f55:	call   431ef0 <strcmp@plt+0x2e738>
  431f5a:	test   rax,rax
  431f5d:	je     431fa8 <strcmp@plt+0x2e7f0>
  431f5f:	mov    rbx,rax
  431f62:	mov    rax,0x468e3c
  431f69:	cmp    DWORD PTR [rax],0x2
  431f6c:	jle    431f8c <strcmp@plt+0x2e7d4>
  431f6e:	mov    rdi,rbp
  431f71:	call   425fa0 <strcmp@plt+0x227e8>
  431f76:	lea    rsi,[rip+0x1e0b3]        # 450030 <strcmp@plt+0x4c878>
  431f7d:	mov    rdx,rax
  431f80:	mov    edi,0x7
  431f85:	xor    eax,eax
  431f87:	call   4306a0 <strcmp@plt+0x2cee8>
  431f8c:	mov    rbp,QWORD PTR [rbx+0x28]
  431f90:	mov    rsi,rbx
  431f93:	mov    rdi,r12
  431f96:	call   420780 <strcmp@plt+0x1cfc8>
  431f9b:	pop    rbx
  431f9c:	mov    rax,rbp
  431f9f:	pop    rbp
  431fa0:	pop    r12
  431fa2:	ret    
  431fa3:	nop    DWORD PTR [rax+rax*1+0x0]
  431fa8:	mov    rax,0x468e3c
  431faf:	cmp    DWORD PTR [rax],0x2
  431fb2:	jg     431fc0 <strcmp@plt+0x2e808>
  431fb4:	xor    ebp,ebp
  431fb6:	mov    rax,rbp
  431fb9:	pop    rbx
  431fba:	pop    rbp
  431fbb:	pop    r12
  431fbd:	ret    
  431fbe:	xchg   ax,ax
  431fc0:	mov    rdi,rbp
  431fc3:	xor    ebp,ebp
  431fc5:	call   425fa0 <strcmp@plt+0x227e8>
  431fca:	lea    rsi,[rip+0x1e01f]        # 44fff0 <strcmp@plt+0x4c838>
  431fd1:	mov    rdx,rax
  431fd4:	mov    edi,0x7
  431fd9:	xor    eax,eax
  431fdb:	call   4306a0 <strcmp@plt+0x2cee8>
  431fe0:	jmp    431fb6 <strcmp@plt+0x2e7fe>
  431fe2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  431fed:	nop    DWORD PTR [rax]
  431ff0:	push   r13
  431ff2:	push   r12
  431ff4:	mov    r13,rdi
  431ff7:	push   rbp
  431ff8:	push   rbx
  431ff9:	mov    rdi,rsi
  431ffc:	mov    rbp,rsi
  431fff:	mov    r12d,edx
  432002:	sub    rsp,0x8
  432006:	call   428780 <strcmp@plt+0x24fc8>
  43200b:	cmp    DWORD PTR [rax+0x18],0x1
  43200f:	je     432050 <strcmp@plt+0x2e898>
  432011:	mov    rax,0x468e3c
  432018:	cmp    DWORD PTR [rax],0x2
  43201b:	jg     432030 <strcmp@plt+0x2e878>
  43201d:	add    rsp,0x8
  432021:	xor    eax,eax
  432023:	pop    rbx
  432024:	pop    rbp
  432025:	pop    r12
  432027:	pop    r13
  432029:	ret    
  43202a:	nop    WORD PTR [rax+rax*1+0x0]
  432030:	lea    rsi,[rip+0x1e029]        # 450060 <strcmp@plt+0x4c8a8>
  432037:	xor    eax,eax
  432039:	mov    edi,0x7
  43203e:	call   4306a0 <strcmp@plt+0x2cee8>
  432043:	add    rsp,0x8
  432047:	xor    eax,eax
  432049:	pop    rbx
  43204a:	pop    rbp
  43204b:	pop    r12
  43204d:	pop    r13
  43204f:	ret    
  432050:	mov    rdi,rbp
  432053:	mov    rbx,rax
  432056:	call   428860 <strcmp@plt+0x250a8>
  43205b:	test   r12b,r12b
  43205e:	mov    ebp,eax
  432060:	je     432088 <strcmp@plt+0x2e8d0>
  432062:	movzx  edx,al
  432065:	mov    rsi,rbx
  432068:	mov    rdi,r13
  43206b:	call   431ef0 <strcmp@plt+0x2e738>
  432070:	test   rax,rax
  432073:	je     432098 <strcmp@plt+0x2e8e0>
  432075:	mov    rax,QWORD PTR [rax+0x28]
  432079:	add    rsp,0x8
  43207d:	pop    rbx
  43207e:	pop    rbp
  43207f:	pop    r12
  432081:	pop    r13
  432083:	ret    
  432084:	nop    DWORD PTR [rax+0x0]
  432088:	mov    rsi,rbx
  43208b:	mov    rdi,r13
  43208e:	call   431ea0 <strcmp@plt+0x2e6e8>
  432093:	jmp    432070 <strcmp@plt+0x2e8b8>
  432095:	nop    DWORD PTR [rax]
  432098:	mov    rax,0x468e3c
  43209f:	cmp    DWORD PTR [rax],0x2
  4320a2:	jle    43201d <strcmp@plt+0x2e865>
  4320a8:	mov    rdi,rbx
  4320ab:	call   425f90 <strcmp@plt+0x227d8>
  4320b0:	lea    rsi,[rip+0x1dfe1]        # 450098 <strcmp@plt+0x4c8e0>
  4320b7:	mov    rdx,rax
  4320ba:	movzx  ecx,bpl
  4320be:	mov    edi,0x7
  4320c3:	xor    eax,eax
  4320c5:	call   4306a0 <strcmp@plt+0x2cee8>
  4320ca:	jmp    43201d <strcmp@plt+0x2e865>
  4320cf:	nop
  4320d0:	test   rdi,rdi
  4320d3:	push   r14
  4320d5:	push   r13
  4320d7:	push   r12
  4320d9:	push   rbp
  4320da:	push   rbx
  4320db:	je     432140 <strcmp@plt+0x2e988>
  4320dd:	mov    rbx,rsi
  4320e0:	mov    rbp,rdi
  4320e3:	mov    rdi,rsi
  4320e6:	mov    r13d,edx
  4320e9:	call   428780 <strcmp@plt+0x24fc8>
  4320ee:	mov    rdi,rbx
  4320f1:	mov    r12,rax
  4320f4:	call   4287d0 <strcmp@plt+0x25018>
  4320f9:	cmp    DWORD PTR [r12+0x18],0x1
  4320ff:	mov    r14,rax
  432102:	je     432170 <strcmp@plt+0x2e9b8>
  432104:	mov    rax,0x468e3c
  43210b:	cmp    DWORD PTR [rax],0x2
  43210e:	jg     432120 <strcmp@plt+0x2e968>
  432110:	pop    rbx
  432111:	xor    eax,eax
  432113:	pop    rbp
  432114:	pop    r12
  432116:	pop    r13
  432118:	pop    r14
  43211a:	ret    
  43211b:	nop    DWORD PTR [rax+rax*1+0x0]
  432120:	lea    rsi,[rip+0x1df39]        # 450060 <strcmp@plt+0x4c8a8>
  432127:	xor    eax,eax
  432129:	mov    edi,0x7
  43212e:	call   4306a0 <strcmp@plt+0x2cee8>
  432133:	pop    rbx
  432134:	xor    eax,eax
  432136:	pop    rbp
  432137:	pop    r12
  432139:	pop    r13
  43213b:	pop    r14
  43213d:	ret    
  43213e:	xchg   ax,ax
  432140:	mov    rax,0x468e3c
  432147:	cmp    DWORD PTR [rax],0x2
  43214a:	jle    432110 <strcmp@plt+0x2e958>
  43214c:	lea    rsi,[rip+0x1df95]        # 4500e8 <strcmp@plt+0x4c930>
  432153:	xor    eax,eax
  432155:	mov    edi,0x7
  43215a:	call   4306a0 <strcmp@plt+0x2cee8>
  43215f:	pop    rbx
  432160:	xor    eax,eax
  432162:	pop    rbp
  432163:	pop    r12
  432165:	pop    r13
  432167:	pop    r14
  432169:	ret    
  43216a:	nop    WORD PTR [rax+rax*1+0x0]
  432170:	cmp    DWORD PTR [rax+0x18],0x1
  432174:	jne    432104 <strcmp@plt+0x2e94c>
  432176:	movzx  edx,r13b
  43217a:	mov    rsi,rbx
  43217d:	mov    rdi,rbp
  432180:	call   431ff0 <strcmp@plt+0x2e838>
  432185:	test   rax,rax
  432188:	je     43219d <strcmp@plt+0x2e9e5>
  43218a:	pop    rbx
  43218b:	mov    rsi,r14
  43218e:	mov    rdi,rax
  432191:	pop    rbp
  432192:	pop    r12
  432194:	pop    r13
  432196:	pop    r14
  432198:	jmp    431ea0 <strcmp@plt+0x2e6e8>
  43219d:	mov    rax,0x468e3c
  4321a4:	cmp    DWORD PTR [rax],0x2
  4321a7:	jle    432110 <strcmp@plt+0x2e958>
  4321ad:	mov    rdi,rbx
  4321b0:	call   4282c0 <strcmp@plt+0x24b08>
  4321b5:	lea    rsi,[rip+0x1df54]        # 450110 <strcmp@plt+0x4c958>
  4321bc:	mov    rdx,rax
  4321bf:	mov    edi,0x7
  4321c4:	xor    eax,eax
  4321c6:	call   4306a0 <strcmp@plt+0x2cee8>
  4321cb:	jmp    432110 <strcmp@plt+0x2e958>
  4321d0:	push   r12
  4321d2:	mov    r12d,edx
  4321d5:	push   rbp
  4321d6:	push   rbx
  4321d7:	mov    edx,DWORD PTR [rsi+0x18]
  4321da:	cmp    edx,0x1
  4321dd:	jb     432230 <strcmp@plt+0x2ea78>
  4321df:	cmp    edx,0x2
  4321e2:	mov    rbp,rdi
  4321e5:	mov    rbx,rsi
  4321e8:	jbe    432250 <strcmp@plt+0x2ea98>
  4321ea:	cmp    edx,0x3
  4321ed:	jne    432230 <strcmp@plt+0x2ea78>
  4321ef:	mov    rdi,rsi
  4321f2:	call   428310 <strcmp@plt+0x24b58>
  4321f7:	cmp    eax,0x2
  4321fa:	je     4322b0 <strcmp@plt+0x2eaf8>
  432200:	cmp    eax,0x9
  432203:	jne    432288 <strcmp@plt+0x2ead0>
  432209:	lea    rsi,[rbp+0x28]
  43220d:	lea    rdi,[rbp+0x20]
  432211:	mov    rdx,rbx
  432214:	call   430f20 <strcmp@plt+0x2d768>
  432219:	movzx  edx,r12b
  43221d:	mov    rsi,rbx
  432220:	mov    rdi,rax
  432223:	pop    rbx
  432224:	pop    rbp
  432225:	pop    r12
  432227:	jmp    4320d0 <strcmp@plt+0x2e918>
  43222c:	nop    DWORD PTR [rax+0x0]
  432230:	lea    rsi,[rip+0x1df41]        # 450178 <strcmp@plt+0x4c9c0>
  432237:	mov    edi,0x3
  43223c:	xor    eax,eax
  43223e:	call   4306a0 <strcmp@plt+0x2cee8>
  432243:	pop    rbx
  432244:	xor    eax,eax
  432246:	pop    rbp
  432247:	pop    r12
  432249:	ret    
  43224a:	nop    WORD PTR [rax+rax*1+0x0]
  432250:	mov    rdi,rsi
  432253:	call   4251c0 <strcmp@plt+0x21a08>
  432258:	mov    rdi,rbp
  43225b:	movzx  esi,ax
  43225e:	call   430fa0 <strcmp@plt+0x2d7e8>
  432263:	test   r12b,r12b
  432266:	mov    rbp,rax
  432269:	mov    rdi,rbx
  43226c:	jne    4322e4 <strcmp@plt+0x2eb2c>
  43226e:	call   4249c0 <strcmp@plt+0x21208>
  432273:	pop    rbx
  432274:	mov    rdi,rbp
  432277:	mov    rsi,rax
  43227a:	pop    rbp
  43227b:	pop    r12
  43227d:	jmp    431ea0 <strcmp@plt+0x2e6e8>
  432282:	nop    WORD PTR [rax+rax*1+0x0]
  432288:	mov    rdi,rbx
  43228b:	call   428310 <strcmp@plt+0x24b58>
  432290:	lea    rsi,[rip+0x1deb9]        # 450150 <strcmp@plt+0x4c998>
  432297:	mov    edx,eax
  432299:	mov    edi,0x3
  43229e:	xor    eax,eax
  4322a0:	call   4306a0 <strcmp@plt+0x2cee8>
  4322a5:	pop    rbx
  4322a6:	xor    eax,eax
  4322a8:	pop    rbp
  4322a9:	pop    r12
  4322ab:	ret    
  4322ac:	nop    DWORD PTR [rax+0x0]
  4322b0:	lea    rsi,[rbp+0x18]
  4322b4:	lea    rdi,[rbp+0x10]
  4322b8:	mov    rdx,rbx
  4322bb:	call   431010 <strcmp@plt+0x2d858>
  4322c0:	test   rax,rax
  4322c3:	mov    rbp,rax
  4322c6:	je     432328 <strcmp@plt+0x2eb70>
  4322c8:	test   r12b,r12b
  4322cb:	mov    rdi,rbx
  4322ce:	je     432310 <strcmp@plt+0x2eb58>
  4322d0:	call   429bd0 <strcmp@plt+0x26418>
  4322d5:	test   rax,rax
  4322d8:	mov    rbx,rax
  4322db:	je     432243 <strcmp@plt+0x2ea8b>
  4322e1:	mov    rdi,rax
  4322e4:	call   424a20 <strcmp@plt+0x21268>
  4322e9:	mov    rdi,rbx
  4322ec:	mov    r12d,eax
  4322ef:	call   4249c0 <strcmp@plt+0x21208>
  4322f4:	pop    rbx
  4322f5:	movzx  edx,r12b
  4322f9:	mov    rdi,rbp
  4322fc:	mov    rsi,rax
  4322ff:	pop    rbp
  432300:	pop    r12
  432302:	jmp    431ef0 <strcmp@plt+0x2e738>
  432307:	nop    WORD PTR [rax+rax*1+0x0]
  432310:	call   429b60 <strcmp@plt+0x263a8>
  432315:	test   rax,rax
  432318:	je     43235b <strcmp@plt+0x2eba3>
  43231a:	mov    rdi,rax
  43231d:	jmp    43226e <strcmp@plt+0x2eab6>
  432322:	nop    WORD PTR [rax+rax*1+0x0]
  432328:	mov    rax,0x468e3c
  43232f:	cmp    DWORD PTR [rax],0x2
  432332:	jle    432243 <strcmp@plt+0x2ea8b>
  432338:	mov    rdi,rbx
  43233b:	call   4282c0 <strcmp@plt+0x24b08>
  432340:	lea    rsi,[rip+0x1de51]        # 450198 <strcmp@plt+0x4c9e0>
  432347:	mov    rdx,rax
  43234a:	mov    edi,0x7
  43234f:	xor    eax,eax
  432351:	call   4306a0 <strcmp@plt+0x2cee8>
  432356:	jmp    432243 <strcmp@plt+0x2ea8b>
  43235b:	mov    rdi,rbx
  43235e:	call   429bd0 <strcmp@plt+0x26418>
  432363:	test   rax,rax
  432366:	jne    43231a <strcmp@plt+0x2eb62>
  432368:	jmp    432243 <strcmp@plt+0x2ea8b>
  43236d:	nop    DWORD PTR [rax]
  432370:	push   r15
  432372:	push   r14
  432374:	mov    r14,rdi
  432377:	push   r13
  432379:	push   r12
  43237b:	mov    r13,rsi
  43237e:	push   rbp
  43237f:	push   rbx
  432380:	mov    r12,rdx
  432383:	sub    rsp,0x428
  43238a:	mov    rax,QWORD PTR fs:0x28
  432393:	mov    QWORD PTR [rsp+0x418],rax
  43239b:	xor    eax,eax
  43239d:	call   42d4e0 <strcmp@plt+0x29d28>
  4323a2:	mov    edx,0x1
  4323a7:	mov    rsi,r13
  4323aa:	mov    rdi,r14
  4323ad:	mov    rbp,rax
  4323b0:	call   4321d0 <strcmp@plt+0x2ea18>
  4323b5:	test   rax,rax
  4323b8:	je     4324e0 <strcmp@plt+0x2ed28>
  4323be:	mov    rdi,r14
  4323c1:	lea    r14,[rsp+0x10]
  4323c6:	mov    rsi,r13
  4323c9:	mov    rbx,rax
  4323cc:	mov    r15,r14
  4323cf:	call   4311a0 <strcmp@plt+0x2d9e8>
  4323d4:	mov    r13,rax
  4323d7:	cmp    QWORD PTR [rbx+0x8],0x0
  4323dc:	je     4323e9 <strcmp@plt+0x2ec31>
  4323de:	mov    rsi,rbp
  4323e1:	mov    rdi,rbx
  4323e4:	call   42d540 <strcmp@plt+0x29d88>
  4323e9:	mov    rax,QWORD PTR [rbx+0x10]
  4323ed:	test   rax,rax
  4323f0:	je     432419 <strcmp@plt+0x2ec61>
  4323f2:	mov    rdx,QWORD PTR [rbx+0x18]
  4323f6:	test   rdx,rdx
  4323f9:	je     4324d0 <strcmp@plt+0x2ed18>
  4323ff:	mov    rbx,rax
  432402:	mov    QWORD PTR [r15],rdx
  432405:	add    r15,0x8
  432409:	cmp    QWORD PTR [rbx+0x8],0x0
  43240e:	jne    4323de <strcmp@plt+0x2ec26>
  432410:	mov    rax,QWORD PTR [rbx+0x10]
  432414:	test   rax,rax
  432417:	jne    4323f2 <strcmp@plt+0x2ec3a>
  432419:	mov    rbx,QWORD PTR [rbx+0x18]
  43241d:	test   rbx,rbx
  432420:	jne    4323d7 <strcmp@plt+0x2ec1f>
  432422:	cmp    r15,r14
  432425:	je     432434 <strcmp@plt+0x2ec7c>
  432427:	mov    rbx,QWORD PTR [r15-0x8]
  43242b:	test   rbx,rbx
  43242e:	jne    43255f <strcmp@plt+0x2eda7>
  432434:	mov    r15,QWORD PTR [rbp+0x8]
  432438:	cmp    rbp,r15
  43243b:	je     432499 <strcmp@plt+0x2ece1>
  43243d:	mov    r14,0x468e3c
  432444:	nop    DWORD PTR [rax+0x0]
  432448:	cmp    DWORD PTR [r14],0x1
  43244c:	mov    r8,QWORD PTR [r15+0x10]
  432450:	jle    43247b <strcmp@plt+0x2ecc3>
  432452:	mov    rdi,QWORD PTR [r8+0x8]
  432456:	mov    QWORD PTR [rsp+0x8],r8
  43245b:	call   41f7d0 <strcmp@plt+0x1c018>
  432460:	lea    rsi,[rip+0x1ddb1]        # 450218 <strcmp@plt+0x4ca60>
  432467:	mov    rdx,rax
  43246a:	mov    edi,0x6
  43246f:	xor    eax,eax
  432471:	call   4306a0 <strcmp@plt+0x2cee8>
  432476:	mov    r8,QWORD PTR [rsp+0x8]
  43247b:	mov    rbx,QWORD PTR [r8+0x28]
  43247f:	mov    rsi,r8
  432482:	mov    rdi,r13
  432485:	call   420780 <strcmp@plt+0x1cfc8>
  43248a:	mov    rdi,rbx
  43248d:	call   r12
  432490:	mov    r15,QWORD PTR [r15+0x8]
  432494:	cmp    rbp,r15
  432497:	jne    432448 <strcmp@plt+0x2ec90>
  432499:	mov    rax,QWORD PTR [rsp+0x418]
  4324a1:	xor    rax,QWORD PTR fs:0x28
  4324aa:	jne    43255a <strcmp@plt+0x2eda2>
  4324b0:	add    rsp,0x428
  4324b7:	mov    rdi,rbp
  4324ba:	pop    rbx
  4324bb:	pop    rbp
  4324bc:	pop    r12
  4324be:	pop    r13
  4324c0:	pop    r14
  4324c2:	pop    r15
  4324c4:	jmp    42dac0 <strcmp@plt+0x2a308>
  4324c9:	nop    DWORD PTR [rax+0x0]
  4324d0:	mov    rbx,rax
  4324d3:	jmp    4323d7 <strcmp@plt+0x2ec1f>
  4324d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4324e0:	mov    rax,0x468e3c
  4324e7:	cmp    DWORD PTR [rax],0x1
  4324ea:	jg     432518 <strcmp@plt+0x2ed60>
  4324ec:	mov    rax,QWORD PTR [rsp+0x418]
  4324f4:	xor    rax,QWORD PTR fs:0x28
  4324fd:	jne    43255a <strcmp@plt+0x2eda2>
  4324ff:	add    rsp,0x428
  432506:	pop    rbx
  432507:	pop    rbp
  432508:	pop    r12
  43250a:	pop    r13
  43250c:	pop    r14
  43250e:	pop    r15
  432510:	ret    
  432511:	nop    DWORD PTR [rax+0x0]
  432518:	mov    rdi,r13
  43251b:	call   424890 <strcmp@plt+0x210d8>
  432520:	mov    rcx,QWORD PTR [rsp+0x418]
  432528:	xor    rcx,QWORD PTR fs:0x28
  432531:	jne    43255a <strcmp@plt+0x2eda2>
  432533:	add    rsp,0x428
  43253a:	lea    rsi,[rip+0x1dc97]        # 4501d8 <strcmp@plt+0x4ca20>
  432541:	mov    rdx,rax
  432544:	pop    rbx
  432545:	pop    rbp
  432546:	pop    r12
  432548:	pop    r13
  43254a:	pop    r14
  43254c:	pop    r15
  43254e:	mov    edi,0x6
  432553:	xor    eax,eax
  432555:	jmp    4306a0 <strcmp@plt+0x2cee8>
  43255a:	call   403460 <__stack_chk_fail@plt>
  43255f:	sub    r15,0x8
  432563:	jmp    4323d7 <strcmp@plt+0x2ec1f>
  432568:	nop    DWORD PTR [rax+rax*1+0x0]
  432570:	sub    rsp,0x8
  432574:	xor    edx,edx
  432576:	call   4321d0 <strcmp@plt+0x2ea18>
  43257b:	test   rax,rax
  43257e:	je     432590 <strcmp@plt+0x2edd8>
  432580:	mov    rax,QWORD PTR [rax+0x28]
  432584:	add    rsp,0x8
  432588:	ret    
  432589:	nop    DWORD PTR [rax+0x0]
  432590:	xor    eax,eax
  432592:	jmp    432584 <strcmp@plt+0x2edcc>
  432594:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43259f:	nop
  4325a0:	sub    rsp,0x8
  4325a4:	mov    edx,0x1
  4325a9:	call   4321d0 <strcmp@plt+0x2ea18>
  4325ae:	test   rax,rax
  4325b1:	je     4325c0 <strcmp@plt+0x2ee08>
  4325b3:	mov    rax,QWORD PTR [rax+0x28]
  4325b7:	add    rsp,0x8
  4325bb:	ret    
  4325bc:	nop    DWORD PTR [rax+0x0]
  4325c0:	xor    eax,eax
  4325c2:	jmp    4325b7 <strcmp@plt+0x2edff>
  4325c4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4325cf:	nop
  4325d0:	test   rdi,rdi
  4325d3:	push   r14
  4325d5:	push   r13
  4325d7:	push   r12
  4325d9:	push   rbp
  4325da:	push   rbx
  4325db:	mov    rbx,rsi
  4325de:	je     432648 <strcmp@plt+0x2ee90>
  4325e0:	mov    rbp,rdi
  4325e3:	mov    rdi,rsi
  4325e6:	call   428780 <strcmp@plt+0x24fc8>
  4325eb:	mov    rdi,rbx
  4325ee:	mov    r13,rax
  4325f1:	call   4287d0 <strcmp@plt+0x25018>
  4325f6:	cmp    DWORD PTR [r13+0x18],0x1
  4325fb:	mov    r12,rax
  4325fe:	je     432688 <strcmp@plt+0x2eed0>
  432604:	mov    rax,0x468e3c
  43260b:	cmp    DWORD PTR [rax],0x2
  43260e:	jg     432620 <strcmp@plt+0x2ee68>
  432610:	xor    r12d,r12d
  432613:	pop    rbx
  432614:	mov    rax,r12
  432617:	pop    rbp
  432618:	pop    r12
  43261a:	pop    r13
  43261c:	pop    r14
  43261e:	ret    
  43261f:	nop
  432620:	lea    rsi,[rip+0x1da39]        # 450060 <strcmp@plt+0x4c8a8>
  432627:	xor    eax,eax
  432629:	xor    r12d,r12d
  43262c:	mov    edi,0x7
  432631:	call   4306a0 <strcmp@plt+0x2cee8>
  432636:	pop    rbx
  432637:	mov    rax,r12
  43263a:	pop    rbp
  43263b:	pop    r12
  43263d:	pop    r13
  43263f:	pop    r14
  432641:	ret    
  432642:	nop    WORD PTR [rax+rax*1+0x0]
  432648:	mov    rax,0x468e3c
  43264f:	cmp    DWORD PTR [rax],0x2
  432652:	jle    432610 <strcmp@plt+0x2ee58>
  432654:	mov    rdi,rsi
  432657:	xor    r12d,r12d
  43265a:	call   4282c0 <strcmp@plt+0x24b08>
  43265f:	lea    rsi,[rip+0x1dbe2]        # 450248 <strcmp@plt+0x4ca90>
  432666:	mov    rdx,rax
  432669:	mov    edi,0x7
  43266e:	xor    eax,eax
  432670:	call   4306a0 <strcmp@plt+0x2cee8>
  432675:	pop    rbx
  432676:	mov    rax,r12
  432679:	pop    rbp
  43267a:	pop    r12
  43267c:	pop    r13
  43267e:	pop    r14
  432680:	ret    
  432681:	nop    DWORD PTR [rax+0x0]
  432688:	cmp    DWORD PTR [rax+0x18],0x1
  43268c:	jne    432604 <strcmp@plt+0x2ee4c>
  432692:	mov    edx,0x1
  432697:	mov    rsi,rbx
  43269a:	mov    rdi,rbp
  43269d:	call   431ff0 <strcmp@plt+0x2e838>
  4326a2:	test   rax,rax
  4326a5:	mov    r14,rax
  4326a8:	je     432718 <strcmp@plt+0x2ef60>
  4326aa:	mov    rdi,rbx
  4326ad:	call   4288a0 <strcmp@plt+0x250e8>
  4326b2:	mov    rsi,r12
  4326b5:	movzx  edx,al
  4326b8:	mov    rdi,r14
  4326bb:	call   431ef0 <strcmp@plt+0x2e738>
  4326c0:	test   rax,rax
  4326c3:	je     43274e <strcmp@plt+0x2ef96>
  4326c9:	mov    rsi,rax
  4326cc:	mov    rdi,r14
  4326cf:	mov    r12,QWORD PTR [rax+0x28]
  4326d3:	call   420780 <strcmp@plt+0x1cfc8>
  4326d8:	mov    rdi,r14
  4326db:	call   4314c0 <strcmp@plt+0x2dd08>
  4326e0:	test   al,al
  4326e2:	je     432613 <strcmp@plt+0x2ee5b>
  4326e8:	xor    esi,esi
  4326ea:	mov    rdi,r14
  4326ed:	call   41fd30 <strcmp@plt+0x1c578>
  4326f2:	mov    rdi,rbx
  4326f5:	call   428860 <strcmp@plt+0x250a8>
  4326fa:	mov    rsi,r13
  4326fd:	mov    rdi,rbp
  432700:	movzx  edx,al
  432703:	call   431ef0 <strcmp@plt+0x2e738>
  432708:	mov    rdi,rbp
  43270b:	mov    rsi,rax
  43270e:	call   420780 <strcmp@plt+0x1cfc8>
  432713:	jmp    432613 <strcmp@plt+0x2ee5b>
  432718:	mov    rax,0x468e3c
  43271f:	cmp    DWORD PTR [rax],0x2
  432722:	jle    432610 <strcmp@plt+0x2ee58>
  432728:	mov    rdi,rbx
  43272b:	xor    r12d,r12d
  43272e:	call   4282c0 <strcmp@plt+0x24b08>
  432733:	lea    rsi,[rip+0x1db4e]        # 450288 <strcmp@plt+0x4cad0>
  43273a:	mov    rdx,rax
  43273d:	mov    edi,0x7
  432742:	xor    eax,eax
  432744:	call   4306a0 <strcmp@plt+0x2cee8>
  432749:	jmp    432613 <strcmp@plt+0x2ee5b>
  43274e:	mov    rax,0x468e3c
  432755:	cmp    DWORD PTR [rax],0x2
  432758:	jle    432610 <strcmp@plt+0x2ee58>
  43275e:	mov    rdi,rbx
  432761:	call   4282c0 <strcmp@plt+0x24b08>
  432766:	lea    rsi,[rip+0x1db5b]        # 4502c8 <strcmp@plt+0x4cb10>
  43276d:	mov    rdx,rax
  432770:	mov    edi,0x7
  432775:	xor    eax,eax
  432777:	call   4306a0 <strcmp@plt+0x2cee8>
  43277c:	jmp    432610 <strcmp@plt+0x2ee58>
  432781:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43278c:	nop    DWORD PTR [rax+0x0]
  432790:	push   r12
  432792:	push   rbp
  432793:	mov    rbp,rsi
  432796:	push   rbx
  432797:	mov    rbx,rdi
  43279a:	sub    rsp,0x10
  43279e:	mov    edx,DWORD PTR [rsi+0x18]
  4327a1:	cmp    edx,0x2
  4327a4:	je     432870 <strcmp@plt+0x2f0b8>
  4327aa:	cmp    edx,0x3
  4327ad:	je     432838 <strcmp@plt+0x2f080>
  4327b3:	cmp    edx,0x1
  4327b6:	je     4327e0 <strcmp@plt+0x2f028>
  4327b8:	lea    rsi,[rip+0x1db49]        # 450308 <strcmp@plt+0x4cb50>
  4327bf:	xor    eax,eax
  4327c1:	mov    edi,0x3
  4327c6:	call   4306a0 <strcmp@plt+0x2cee8>
  4327cb:	xor    eax,eax
  4327cd:	add    rsp,0x10
  4327d1:	pop    rbx
  4327d2:	pop    rbp
  4327d3:	pop    r12
  4327d5:	ret    
  4327d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4327e0:	mov    rdi,rsi
  4327e3:	call   424b80 <strcmp@plt+0x213c8>
  4327e8:	mov    rbp,rax
  4327eb:	mov    rdi,rax
  4327ee:	call   424920 <strcmp@plt+0x21168>
  4327f3:	mov    rdi,rbp
  4327f6:	call   425e60 <strcmp@plt+0x226a8>
  4327fb:	mov    rdi,rbx
  4327fe:	movzx  esi,al
  432801:	call   430fa0 <strcmp@plt+0x2d7e8>
  432806:	mov    rsi,rbp
  432809:	mov    rdi,rax
  43280c:	call   431f30 <strcmp@plt+0x2e778>
  432811:	mov    rdi,rbp
  432814:	mov    QWORD PTR [rsp+0x8],rax
  432819:	call   424750 <strcmp@plt+0x20f98>
  43281e:	mov    rax,QWORD PTR [rsp+0x8]
  432823:	test   rax,rax
  432826:	je     4327cd <strcmp@plt+0x2f015>
  432828:	sub    DWORD PTR [rbx+0x30],0x1
  43282c:	add    rsp,0x10
  432830:	pop    rbx
  432831:	pop    rbp
  432832:	pop    r12
  432834:	ret    
  432835:	nop    DWORD PTR [rax]
  432838:	mov    rdi,rsi
  43283b:	call   428310 <strcmp@plt+0x24b58>
  432840:	cmp    eax,0x2
  432843:	je     432890 <strcmp@plt+0x2f0d8>
  432845:	cmp    eax,0x9
  432848:	jne    4328c8 <strcmp@plt+0x2f110>
  43284a:	lea    rsi,[rbx+0x28]
  43284e:	lea    rdi,[rbx+0x20]
  432852:	mov    rdx,rbp
  432855:	call   430f20 <strcmp@plt+0x2d768>
  43285a:	mov    rsi,rbp
  43285d:	mov    rdi,rax
  432860:	call   4325d0 <strcmp@plt+0x2ee18>
  432865:	jmp    432823 <strcmp@plt+0x2f06b>
  432867:	nop    WORD PTR [rax+rax*1+0x0]
  432870:	mov    rdi,rsi
  432873:	call   425e60 <strcmp@plt+0x226a8>
  432878:	mov    rdi,rbx
  43287b:	movzx  esi,al
  43287e:	call   430fa0 <strcmp@plt+0x2d7e8>
  432883:	mov    rsi,rbp
  432886:	mov    rdi,rax
  432889:	call   431f30 <strcmp@plt+0x2e778>
  43288e:	jmp    432823 <strcmp@plt+0x2f06b>
  432890:	lea    rsi,[rbx+0x18]
  432894:	lea    rdi,[rbx+0x10]
  432898:	mov    rdx,rbp
  43289b:	call   431010 <strcmp@plt+0x2d858>
  4328a0:	test   rax,rax
  4328a3:	mov    r12,rax
  4328a6:	je     432908 <strcmp@plt+0x2f150>
  4328a8:	mov    rdi,rbp
  4328ab:	call   429bd0 <strcmp@plt+0x26418>
  4328b0:	test   rax,rax
  4328b3:	je     4328d4 <strcmp@plt+0x2f11c>
  4328b5:	mov    rsi,rax
  4328b8:	mov    rdi,r12
  4328bb:	call   431f30 <strcmp@plt+0x2e778>
  4328c0:	jmp    432823 <strcmp@plt+0x2f06b>
  4328c5:	nop    DWORD PTR [rax]
  4328c8:	mov    rax,0x468e3c
  4328cf:	cmp    DWORD PTR [rax],0x2
  4328d2:	jg     4328e0 <strcmp@plt+0x2f128>
  4328d4:	xor    eax,eax
  4328d6:	jmp    4327cd <strcmp@plt+0x2f015>
  4328db:	nop    DWORD PTR [rax+rax*1+0x0]
  4328e0:	mov    rdi,rbp
  4328e3:	call   428310 <strcmp@plt+0x24b58>
  4328e8:	lea    rsi,[rip+0x1da99]        # 450388 <strcmp@plt+0x4cbd0>
  4328ef:	mov    edx,eax
  4328f1:	mov    edi,0x7
  4328f6:	xor    eax,eax
  4328f8:	call   4306a0 <strcmp@plt+0x2cee8>
  4328fd:	xor    eax,eax
  4328ff:	jmp    4327cd <strcmp@plt+0x2f015>
  432904:	nop    DWORD PTR [rax+0x0]
  432908:	mov    rax,0x468e3c
  43290f:	cmp    DWORD PTR [rax],0x2
  432912:	jle    4328d4 <strcmp@plt+0x2f11c>
  432914:	mov    rdi,rbp
  432917:	call   4282c0 <strcmp@plt+0x24b08>
  43291c:	lea    rsi,[rip+0x1da15]        # 450338 <strcmp@plt+0x4cb80>
  432923:	mov    rdx,rax
  432926:	mov    edi,0x7
  43292b:	xor    eax,eax
  43292d:	call   4306a0 <strcmp@plt+0x2cee8>
  432932:	xor    eax,eax
  432934:	jmp    4327cd <strcmp@plt+0x2f015>
  432939:	nop    DWORD PTR [rax+0x0]
  432940:	push   r14
  432942:	push   r13
  432944:	push   r12
  432946:	push   rbp
  432947:	mov    r12,rdi
  43294a:	push   rbx
  43294b:	mov    edi,0x2
  432950:	mov    rbx,rsi
  432953:	sub    rsp,0x20
  432957:	mov    rax,QWORD PTR fs:0x28
  432960:	mov    QWORD PTR [rsp+0x18],rax
  432965:	xor    eax,eax
  432967:	call   424670 <strcmp@plt+0x20eb8>
  43296c:	mov    rdi,rbx
  43296f:	mov    rbp,rax
  432972:	call   4251c0 <strcmp@plt+0x21a08>
  432977:	xor    edx,edx
  432979:	mov    rsi,rbx
  43297c:	mov    rdi,r12
  43297f:	mov    r13d,eax
  432982:	call   431a10 <strcmp@plt+0x2e258>
  432987:	cmp    eax,0x1
  43298a:	jne    432a60 <strcmp@plt+0x2f2a8>
  432990:	mov    edx,0x1
  432995:	mov    rsi,rbx
  432998:	mov    rdi,r12
  43299b:	call   4321d0 <strcmp@plt+0x2ea18>
  4329a0:	test   rax,rax
  4329a3:	movzx  r14d,r13w
  4329a7:	je     432a48 <strcmp@plt+0x2f290>
  4329ad:	mov    rdx,QWORD PTR [rax+0x20]
  4329b1:	test   rdx,rdx
  4329b4:	je     432a48 <strcmp@plt+0x2f290>
  4329ba:	mov    rcx,QWORD PTR [rax+0x8]
  4329be:	mov    rsi,rsp
  4329c1:	mov    rdi,QWORD PTR [rcx]
  4329c4:	mov    QWORD PTR [rsp],rdi
  4329c8:	mov    rdi,QWORD PTR [rcx+0x8]
  4329cc:	mov    QWORD PTR [rsp+0x8],rdi
  4329d1:	mov    rcx,QWORD PTR [rcx+0x10]
  4329d5:	mov    QWORD PTR [rsp+0x10],rcx
  4329da:	movzx  ecx,BYTE PTR [rdx]
  4329dd:	cmp    rax,QWORD PTR [rdx+0x18]
  4329e1:	lea    r14d,[rcx+0x1]
  4329e5:	je     432ab0 <strcmp@plt+0x2f2f8>
  4329eb:	movzx  edx,r13b
  4329ef:	add    rsi,0x8
  4329f3:	mov    rdi,rbp
  4329f6:	call   425960 <strcmp@plt+0x221a8>
  4329fb:	mov    rdi,rbp
  4329fe:	movzx  esi,r14b
  432a02:	call   425300 <strcmp@plt+0x21b48>
  432a07:	mov    rdi,rbp
  432a0a:	call   437250 <strcmp@plt+0x33a98>
  432a0f:	cmp    DWORD PTR [rbx+0x18],0x3
  432a13:	je     432a80 <strcmp@plt+0x2f2c8>
  432a15:	mov    rsi,rbx
  432a18:	mov    rdi,r12
  432a1b:	call   432790 <strcmp@plt+0x2efd8>
  432a20:	mov    rcx,QWORD PTR [rsp+0x18]
  432a25:	xor    rcx,QWORD PTR fs:0x28
  432a2e:	mov    rax,rbp
  432a31:	jne    432ad8 <strcmp@plt+0x2f320>
  432a37:	add    rsp,0x20
  432a3b:	pop    rbx
  432a3c:	pop    rbp
  432a3d:	pop    r12
  432a3f:	pop    r13
  432a41:	pop    r14
  432a43:	ret    
  432a44:	nop    DWORD PTR [rax+0x0]
  432a48:	cmp    r14d,0x2
  432a4c:	mov    rsi,rbp
  432a4f:	je     432a68 <strcmp@plt+0x2f2b0>
  432a51:	lea    rdi,[rip+0x151c1]        # 447c19 <strcmp@plt+0x44461>
  432a58:	call   4256d0 <strcmp@plt+0x21f18>
  432a5d:	jmp    432a0f <strcmp@plt+0x2f257>
  432a5f:	nop
  432a60:	xor    ebp,ebp
  432a62:	jmp    432a20 <strcmp@plt+0x2f268>
  432a64:	nop    DWORD PTR [rax+0x0]
  432a68:	lea    rdi,[rip+0x14ca4]        # 447713 <strcmp@plt+0x43f5b>
  432a6f:	call   4256d0 <strcmp@plt+0x21f18>
  432a74:	jmp    432a0f <strcmp@plt+0x2f257>
  432a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432a80:	mov    rdi,rbx
  432a83:	call   424b80 <strcmp@plt+0x213c8>
  432a88:	mov    rsi,rbp
  432a8b:	mov    rdi,rax
  432a8e:	mov    r13,rax
  432a91:	call   425270 <strcmp@plt+0x21ab8>
  432a96:	mov    rdi,rbp
  432a99:	mov    rbp,r13
  432a9c:	call   424750 <strcmp@plt+0x20f98>
  432aa1:	jmp    432a15 <strcmp@plt+0x2f25d>
  432aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432ab0:	mov    ecx,r14d
  432ab3:	mov    edx,0x20
  432ab8:	mov    eax,r14d
  432abb:	and    ecx,0x1f
  432abe:	shr    al,0x5
  432ac1:	sub    edx,ecx
  432ac3:	movzx  eax,al
  432ac6:	cmp    edx,0x1
  432ac9:	seta   dl
  432acc:	movzx  edx,dl
  432acf:	or     DWORD PTR [rsp+rax*4+0x8],edx
  432ad3:	jmp    4329eb <strcmp@plt+0x2f233>
  432ad8:	call   403460 <__stack_chk_fail@plt>
  432add:	nop    DWORD PTR [rax]
  432ae0:	push   r15
  432ae2:	push   r14
  432ae4:	mov    r15,rdi
  432ae7:	push   r13
  432ae9:	push   r12
  432aeb:	xor    r12d,r12d
  432aee:	push   rbp
  432aef:	push   rbx
  432af0:	mov    rbp,rdx
  432af3:	mov    rbx,rsi
  432af6:	sub    rsp,0x868
  432afd:	mov    QWORD PTR [rsp+0x28],rdi
  432b02:	mov    rax,QWORD PTR fs:0x28
  432b0b:	mov    QWORD PTR [rsp+0x858],rax
  432b13:	xor    eax,eax
  432b15:	call   42d4e0 <strcmp@plt+0x29d28>
  432b1a:	mov    rdi,QWORD PTR [r15]
  432b1d:	mov    rsi,rax
  432b20:	mov    r14,rax
  432b23:	mov    QWORD PTR [rsp+0x18],rax
  432b28:	call   42d540 <strcmp@plt+0x29d88>
  432b2d:	mov    rdi,QWORD PTR [r15+0x8]
  432b31:	mov    rsi,r14
  432b34:	call   42d540 <strcmp@plt+0x29d88>
  432b39:	mov    r8,QWORD PTR [r15+0x10]
  432b3d:	mov    rsi,QWORD PTR [r8]
  432b40:	mov    edx,DWORD PTR [rsi]
  432b42:	test   edx,edx
  432b44:	jne    432b5c <strcmp@plt+0x2f3a4>
  432b46:	jmp    432ba5 <strcmp@plt+0x2f3ed>
  432b48:	nop    DWORD PTR [rax+rax*1+0x0]
  432b50:	mov    rsi,QWORD PTR [r8]
  432b53:	add    r12d,0x1
  432b57:	cmp    DWORD PTR [rsi],r12d
  432b5a:	je     432ba5 <strcmp@plt+0x2f3ed>
  432b5c:	mov    rdi,QWORD PTR [rsi+0x10]
  432b60:	lea    eax,[r12+r12*1]
  432b64:	mov    ecx,r12d
  432b67:	shr    ecx,0x4
  432b6a:	and    eax,0x1e
  432b6d:	mov    edx,eax
  432b6f:	mov    eax,DWORD PTR [rdi+rcx*4]
  432b72:	shrx   eax,eax,edx
  432b77:	test   al,0x3
  432b79:	jne    432b50 <strcmp@plt+0x2f398>
  432b7b:	mov    rdx,QWORD PTR [rsi+0x20]
  432b7f:	mov    eax,r12d
  432b82:	mov    rsi,QWORD PTR [rsp+0x18]
  432b87:	add    r12d,0x1
  432b8b:	mov    rdi,QWORD PTR [rdx+rax*8]
  432b8f:	call   42d540 <strcmp@plt+0x29d88>
  432b94:	mov    rax,QWORD PTR [rsp+0x28]
  432b99:	mov    r8,QWORD PTR [rax+0x10]
  432b9d:	mov    rsi,QWORD PTR [r8]
  432ba0:	cmp    DWORD PTR [rsi],r12d
  432ba3:	jne    432b5c <strcmp@plt+0x2f3a4>
  432ba5:	mov    rax,QWORD PTR [rsp+0x28]
  432baa:	xor    r12d,r12d
  432bad:	mov    r8,QWORD PTR [rax+0x18]
  432bb1:	mov    rsi,QWORD PTR [r8]
  432bb4:	mov    eax,DWORD PTR [rsi]
  432bb6:	test   eax,eax
  432bb8:	jne    432bcc <strcmp@plt+0x2f414>
  432bba:	jmp    432c15 <strcmp@plt+0x2f45d>
  432bbc:	nop    DWORD PTR [rax+0x0]
  432bc0:	mov    rsi,QWORD PTR [r8]
  432bc3:	add    r12d,0x1
  432bc7:	cmp    DWORD PTR [rsi],r12d
  432bca:	je     432c15 <strcmp@plt+0x2f45d>
  432bcc:	mov    rdi,QWORD PTR [rsi+0x10]
  432bd0:	lea    eax,[r12+r12*1]
  432bd4:	mov    ecx,r12d
  432bd7:	shr    ecx,0x4
  432bda:	and    eax,0x1e
  432bdd:	mov    edx,eax
  432bdf:	mov    eax,DWORD PTR [rdi+rcx*4]
  432be2:	shrx   eax,eax,edx
  432be7:	test   al,0x3
  432be9:	jne    432bc0 <strcmp@plt+0x2f408>
  432beb:	mov    rdx,QWORD PTR [rsi+0x20]
  432bef:	mov    eax,r12d
  432bf2:	mov    rsi,QWORD PTR [rsp+0x18]
  432bf7:	add    r12d,0x1
  432bfb:	mov    rdi,QWORD PTR [rdx+rax*8]
  432bff:	call   42d540 <strcmp@plt+0x29d88>
  432c04:	mov    rax,QWORD PTR [rsp+0x28]
  432c09:	mov    r8,QWORD PTR [rax+0x18]
  432c0d:	mov    rsi,QWORD PTR [r8]
  432c10:	cmp    DWORD PTR [rsi],r12d
  432c13:	jne    432bcc <strcmp@plt+0x2f414>
  432c15:	mov    rax,QWORD PTR [rsp+0x18]
  432c1a:	lea    rsi,[rsp+0x40]
  432c1f:	mov    QWORD PTR [rsp+0x20],rsi
  432c24:	lea    rsi,[rsp+0x450]
  432c2c:	mov    rcx,QWORD PTR [rax+0x8]
  432c30:	mov    QWORD PTR [rsp+0x8],rsi
  432c35:	cmp    rax,rcx
  432c38:	mov    QWORD PTR [rsp+0x10],rcx
  432c3d:	je     432d5b <strcmp@plt+0x2f5a3>
  432c43:	nop    DWORD PTR [rax+rax*1+0x0]
  432c48:	mov    rax,QWORD PTR [rsp+0x10]
  432c4d:	mov    rax,QWORD PTR [rax+0x10]
  432c51:	mov    r12,QWORD PTR [rax]
  432c54:	test   r12,r12
  432c57:	je     432d42 <strcmp@plt+0x2f58a>
  432c5d:	mov    r13,QWORD PTR [rsp+0x20]
  432c62:	nop    WORD PTR [rax+rax*1+0x0]
  432c68:	cmp    QWORD PTR [r12+0x8],0x0
  432c6e:	je     432ce5 <strcmp@plt+0x2f52d>
  432c70:	mov    rax,QWORD PTR [r12+0x28]
  432c75:	mov    r14,QWORD PTR [rax]
  432c78:	test   r14,r14
  432c7b:	je     432ce5 <strcmp@plt+0x2f52d>
  432c7d:	mov    r15,QWORD PTR [rsp+0x8]
  432c82:	cmp    QWORD PTR [r14+0x8],0x0
  432c87:	je     432c97 <strcmp@plt+0x2f4df>
  432c89:	mov    rdi,QWORD PTR [r14+0x28]
  432c8d:	test   rdi,rdi
  432c90:	je     432c97 <strcmp@plt+0x2f4df>
  432c92:	mov    rsi,rbp
  432c95:	call   rbx
  432c97:	mov    rdx,QWORD PTR [r14+0x10]
  432c9b:	test   rdx,rdx
  432c9e:	je     432cc8 <strcmp@plt+0x2f510>
  432ca0:	mov    rax,QWORD PTR [r14+0x18]
  432ca4:	test   rax,rax
  432ca7:	je     432d10 <strcmp@plt+0x2f558>
  432ca9:	mov    r14,rdx
  432cac:	mov    QWORD PTR [r15],rax
  432caf:	add    r15,0x8
  432cb3:	cmp    QWORD PTR [r14+0x8],0x0
  432cb8:	jne    432c89 <strcmp@plt+0x2f4d1>
  432cba:	mov    rdx,QWORD PTR [r14+0x10]
  432cbe:	test   rdx,rdx
  432cc1:	jne    432ca0 <strcmp@plt+0x2f4e8>
  432cc3:	nop    DWORD PTR [rax+rax*1+0x0]
  432cc8:	mov    r14,QWORD PTR [r14+0x18]
  432ccc:	test   r14,r14
  432ccf:	jne    432c82 <strcmp@plt+0x2f4ca>
  432cd1:	cmp    r15,QWORD PTR [rsp+0x8]
  432cd6:	je     432ce5 <strcmp@plt+0x2f52d>
  432cd8:	mov    r14,QWORD PTR [r15-0x8]
  432cdc:	test   r14,r14
  432cdf:	jne    432ed5 <strcmp@plt+0x2f71d>
  432ce5:	mov    rax,QWORD PTR [r12+0x10]
  432cea:	test   rax,rax
  432ced:	je     432d20 <strcmp@plt+0x2f568>
  432cef:	mov    rdx,QWORD PTR [r12+0x18]
  432cf4:	test   rdx,rdx
  432cf7:	je     432e60 <strcmp@plt+0x2f6a8>
  432cfd:	mov    QWORD PTR [r13+0x0],rdx
  432d01:	mov    r12,rax
  432d04:	add    r13,0x8
  432d08:	jmp    432c68 <strcmp@plt+0x2f4b0>
  432d0d:	nop    DWORD PTR [rax]
  432d10:	mov    r14,rdx
  432d13:	jmp    432c82 <strcmp@plt+0x2f4ca>
  432d18:	nop    DWORD PTR [rax+rax*1+0x0]
  432d20:	mov    r12,QWORD PTR [r12+0x18]
  432d25:	test   r12,r12
  432d28:	jne    432c68 <strcmp@plt+0x2f4b0>
  432d2e:	cmp    r13,QWORD PTR [rsp+0x20]
  432d33:	je     432d42 <strcmp@plt+0x2f58a>
  432d35:	mov    r12,QWORD PTR [r13-0x8]
  432d39:	test   r12,r12
  432d3c:	jne    432ede <strcmp@plt+0x2f726>
  432d42:	mov    rax,QWORD PTR [rsp+0x10]
  432d47:	mov    rax,QWORD PTR [rax+0x8]
  432d4b:	cmp    QWORD PTR [rsp+0x18],rax
  432d50:	mov    QWORD PTR [rsp+0x10],rax
  432d55:	jne    432c48 <strcmp@plt+0x2f490>
  432d5b:	mov    rdi,QWORD PTR [rsp+0x18]
  432d60:	call   42dac0 <strcmp@plt+0x2a308>
  432d65:	mov    rcx,QWORD PTR [rsp+0x28]
  432d6a:	mov    QWORD PTR [rsp+0x10],0x0
  432d73:	mov    rax,QWORD PTR [rcx+0x20]
  432d77:	mov    rdx,QWORD PTR [rcx+0x28]
  432d7b:	lea    rcx,[rsp+0x40]
  432d80:	mov    QWORD PTR [rsp+0x18],rcx
  432d85:	lea    rcx,[rsp+0x450]
  432d8d:	mov    QWORD PTR [rsp+0x30],rax
  432d92:	mov    QWORD PTR [rsp+0x38],rdx
  432d97:	mov    QWORD PTR [rsp+0x8],rcx
  432d9c:	mov    r12,QWORD PTR [rax]
  432d9f:	test   r12,r12
  432da2:	je     432e82 <strcmp@plt+0x2f6ca>
  432da8:	mov    r13,QWORD PTR [rsp+0x18]
  432dad:	nop    DWORD PTR [rax]
  432db0:	cmp    QWORD PTR [r12+0x8],0x0
  432db6:	je     432e2d <strcmp@plt+0x2f675>
  432db8:	mov    rax,QWORD PTR [r12+0x28]
  432dbd:	mov    r14,QWORD PTR [rax]
  432dc0:	test   r14,r14
  432dc3:	je     432e2d <strcmp@plt+0x2f675>
  432dc5:	mov    r15,QWORD PTR [rsp+0x8]
  432dca:	cmp    QWORD PTR [r14+0x8],0x0
  432dcf:	je     432ddf <strcmp@plt+0x2f627>
  432dd1:	mov    rdi,QWORD PTR [r14+0x28]
  432dd5:	test   rdi,rdi
  432dd8:	je     432ddf <strcmp@plt+0x2f627>
  432dda:	mov    rsi,rbp
  432ddd:	call   rbx
  432ddf:	mov    rdx,QWORD PTR [r14+0x10]
  432de3:	test   rdx,rdx
  432de6:	je     432e10 <strcmp@plt+0x2f658>
  432de8:	mov    rax,QWORD PTR [r14+0x18]
  432dec:	test   rax,rax
  432def:	je     432e58 <strcmp@plt+0x2f6a0>
  432df1:	mov    r14,rdx
  432df4:	mov    QWORD PTR [r15],rax
  432df7:	add    r15,0x8
  432dfb:	cmp    QWORD PTR [r14+0x8],0x0
  432e00:	jne    432dd1 <strcmp@plt+0x2f619>
  432e02:	mov    rdx,QWORD PTR [r14+0x10]
  432e06:	test   rdx,rdx
  432e09:	jne    432de8 <strcmp@plt+0x2f630>
  432e0b:	nop    DWORD PTR [rax+rax*1+0x0]
  432e10:	mov    r14,QWORD PTR [r14+0x18]
  432e14:	test   r14,r14
  432e17:	jne    432dca <strcmp@plt+0x2f612>
  432e19:	cmp    r15,QWORD PTR [rsp+0x8]
  432e1e:	je     432e2d <strcmp@plt+0x2f675>
  432e20:	mov    r14,QWORD PTR [r15-0x8]
  432e24:	test   r14,r14
  432e27:	jne    432ee7 <strcmp@plt+0x2f72f>
  432e2d:	mov    rax,QWORD PTR [r12+0x10]
  432e32:	test   rax,rax
  432e35:	je     432e68 <strcmp@plt+0x2f6b0>
  432e37:	mov    rdx,QWORD PTR [r12+0x18]
  432e3c:	test   rdx,rdx
  432e3f:	je     432e49 <strcmp@plt+0x2f691>
  432e41:	mov    QWORD PTR [r13+0x0],rdx
  432e45:	add    r13,0x8
  432e49:	mov    r12,rax
  432e4c:	jmp    432db0 <strcmp@plt+0x2f5f8>
  432e51:	nop    DWORD PTR [rax+0x0]
  432e58:	mov    r14,rdx
  432e5b:	jmp    432dca <strcmp@plt+0x2f612>
  432e60:	mov    r12,rax
  432e63:	jmp    432c68 <strcmp@plt+0x2f4b0>
  432e68:	mov    rax,QWORD PTR [r12+0x18]
  432e6d:	test   rax,rax
  432e70:	jne    432e49 <strcmp@plt+0x2f691>
  432e72:	cmp    r13,QWORD PTR [rsp+0x18]
  432e77:	je     432e82 <strcmp@plt+0x2f6ca>
  432e79:	mov    rax,QWORD PTR [r13-0x8]
  432e7d:	test   rax,rax
  432e80:	jne    432ec7 <strcmp@plt+0x2f70f>
  432e82:	add    QWORD PTR [rsp+0x10],0x8
  432e88:	mov    rax,QWORD PTR [rsp+0x10]
  432e8d:	cmp    rax,0x10
  432e91:	je     432ea2 <strcmp@plt+0x2f6ea>
  432e93:	mov    rax,QWORD PTR [rsp+0x10]
  432e98:	mov    rax,QWORD PTR [rsp+rax*1+0x30]
  432e9d:	jmp    432d9c <strcmp@plt+0x2f5e4>
  432ea2:	mov    rax,QWORD PTR [rsp+0x858]
  432eaa:	xor    rax,QWORD PTR fs:0x28
  432eb3:	jne    432ed0 <strcmp@plt+0x2f718>
  432eb5:	add    rsp,0x868
  432ebc:	pop    rbx
  432ebd:	pop    rbp
  432ebe:	pop    r12
  432ec0:	pop    r13
  432ec2:	pop    r14
  432ec4:	pop    r15
  432ec6:	ret    
  432ec7:	sub    r13,0x8
  432ecb:	jmp    432e49 <strcmp@plt+0x2f691>
  432ed0:	call   403460 <__stack_chk_fail@plt>
  432ed5:	sub    r15,0x8
  432ed9:	jmp    432c82 <strcmp@plt+0x2f4ca>
  432ede:	sub    r13,0x8
  432ee2:	jmp    432c68 <strcmp@plt+0x2f4b0>
  432ee7:	sub    r15,0x8
  432eeb:	jmp    432dca <strcmp@plt+0x2f612>
  432ef0:	push   rbx
  432ef1:	mov    edi,0x48
  432ef6:	call   434790 <strcmp@plt+0x30fd8>
  432efb:	xor    edi,edi
  432efd:	mov    rbx,rax
  432f00:	mov    BYTE PTR [rax+0x10],0x0
  432f04:	call   403380 <time@plt>
  432f09:	mov    QWORD PTR [rbx+0x18],rax
  432f0d:	mov    rax,rbx
  432f10:	pop    rbx
  432f11:	ret    
  432f12:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  432f1d:	nop    DWORD PTR [rax]
  432f20:	mov    QWORD PTR [rdi+0x8],rsi
  432f24:	mov    BYTE PTR [rdi],0x1
  432f27:	ret    
  432f28:	nop    DWORD PTR [rax+rax*1+0x0]
  432f30:	mov    BYTE PTR [rdi+0x10],0x1
  432f34:	mov    QWORD PTR [rdi+0x8],rsi
  432f38:	mov    BYTE PTR [rdi],0x2
  432f3b:	ret    
  432f3c:	nop    DWORD PTR [rax+0x0]
  432f40:	push   r15
  432f42:	push   r14
  432f44:	push   r13
  432f46:	push   r12
  432f48:	push   rbp
  432f49:	push   rbx
  432f4a:	sub    rsp,0x8
  432f4e:	test   rdi,rdi
  432f51:	je     433009 <strcmp@plt+0x2f851>
  432f57:	mov    rax,QWORD PTR [rdi+0x8]
  432f5b:	mov    r15,rdi
  432f5e:	mov    r13,0x474860
  432f65:	mov    r12,0x474858
  432f6c:	mov    rdx,QWORD PTR [rax+0x28]
  432f70:	mov    r14,QWORD PTR [rdx+0x8]
  432f74:	cmp    rdx,r14
  432f77:	je     432fc0 <strcmp@plt+0x2f808>
  432f79:	nop    DWORD PTR [rax+0x0]
  432f80:	mov    rbp,QWORD PTR [r14+0x10]
  432f84:	mov    edx,DWORD PTR [rbp+0x18]
  432f87:	test   edx,edx
  432f89:	je     432fb6 <strcmp@plt+0x2f7fe>
  432f8b:	mov    rbx,QWORD PTR [rbp+0x8]
  432f8f:	cmp    rbx,rbp
  432f92:	je     432fb6 <strcmp@plt+0x2f7fe>
  432f94:	nop    DWORD PTR [rax+0x0]
  432f98:	mov    rdi,QWORD PTR [rbx+0x10]
  432f9c:	mov    rdx,QWORD PTR [r13+0x0]
  432fa0:	mov    rsi,QWORD PTR [r12]
  432fa4:	call   43b0b0 <strcmp@plt+0x378f8>
  432fa9:	mov    rbx,QWORD PTR [rbx+0x8]
  432fad:	cmp    rbx,rbp
  432fb0:	jne    432f98 <strcmp@plt+0x2f7e0>
  432fb2:	mov    rax,QWORD PTR [r15+0x8]
  432fb6:	mov    r14,QWORD PTR [r14+0x8]
  432fba:	cmp    QWORD PTR [rax+0x28],r14
  432fbe:	jne    432f80 <strcmp@plt+0x2f7c8>
  432fc0:	mov    rdx,QWORD PTR [r13+0x0]
  432fc4:	mov    rsi,QWORD PTR [r12]
  432fc8:	mov    rdi,r15
  432fcb:	call   43b0b0 <strcmp@plt+0x378f8>
  432fd0:	mov    rdi,QWORD PTR [r15+0x8]
  432fd4:	call   42a650 <strcmp@plt+0x26e98>
  432fd9:	mov    rdi,QWORD PTR [r15+0x20]
  432fdd:	test   rdi,rdi
  432fe0:	je     432fe6 <strcmp@plt+0x2f82e>
  432fe2:	call   QWORD PTR [r15+0x28]
  432fe6:	mov    rdi,QWORD PTR [r15+0x30]
  432fea:	test   rdi,rdi
  432fed:	je     432ff3 <strcmp@plt+0x2f83b>
  432fef:	call   QWORD PTR [r15+0x38]
  432ff3:	add    rsp,0x8
  432ff7:	mov    rdi,r15
  432ffa:	pop    rbx
  432ffb:	pop    rbp
  432ffc:	pop    r12
  432ffe:	pop    r13
  433000:	pop    r14
  433002:	pop    r15
  433004:	jmp    4037b0 <free@plt>
  433009:	lea    rcx,[rip+0x1d4a0]        # 4504b0 <strcmp@plt+0x4ccf8>
  433010:	lea    rsi,[rip+0x1d41b]        # 450432 <strcmp@plt+0x4cc7a>
  433017:	lea    rdi,[rip+0x1d42a]        # 450448 <strcmp@plt+0x4cc90>
  43301e:	mov    edx,0x40
  433023:	call   4032c0 <__assert_fail@plt>
  433028:	nop    DWORD PTR [rax+rax*1+0x0]
  433030:	mov    rax,QWORD PTR [rdi+0x8]
  433034:	ret    
  433035:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  433040:	mov    rax,QWORD PTR [rdi+0x8]
  433044:	cmp    WORD PTR [rax+0x20],0x0
  433049:	setne  al
  43304c:	ret    
  43304d:	nop    DWORD PTR [rax]
  433050:	push   r15
  433052:	push   r14
  433054:	push   r13
  433056:	push   r12
  433058:	push   rbp
  433059:	push   rbx
  43305a:	mov    ebp,esi
  43305c:	mov    rbx,rdi
  43305f:	sub    rsp,0x2f8
  433066:	mov    rax,QWORD PTR fs:0x28
  43306f:	mov    QWORD PTR [rsp+0x2e8],rax
  433077:	xor    eax,eax
  433079:	cmp    esi,0x4
  43307c:	jle    4330c0 <strcmp@plt+0x2f908>
  43307e:	mov    rax,0x468e3c
  433085:	mov    eax,DWORD PTR [rax]
  433087:	add    eax,0x4
  43308a:	cmp    esi,eax
  43308c:	jle    4330c0 <strcmp@plt+0x2f908>
  43308e:	mov    rax,QWORD PTR [rsp+0x2e8]
  433096:	xor    rax,QWORD PTR fs:0x28
  43309f:	jne    4332e6 <strcmp@plt+0x2fb2e>
  4330a5:	add    rsp,0x2f8
  4330ac:	pop    rbx
  4330ad:	pop    rbp
  4330ae:	pop    r12
  4330b0:	pop    r13
  4330b2:	pop    r14
  4330b4:	pop    r15
  4330b6:	ret    
  4330b7:	nop    WORD PTR [rax+rax*1+0x0]
  4330c0:	xor    edi,edi
  4330c2:	mov    BYTE PTR [rsp+0x50],0x0
  4330c7:	mov    BYTE PTR [rsp+0x10],0x0
  4330cc:	mov    BYTE PTR [rsp+0x150],0x0
  4330d4:	mov    r12,QWORD PTR [rbx+0x8]
  4330d8:	lea    r13,[rsp+0x50]
  4330dd:	call   403380 <time@plt>
  4330e2:	sub    rax,QWORD PTR [rbx+0x18]
  4330e6:	lea    rdi,[rsp+0x8]
  4330eb:	lea    r15,[rsp+0x10]
  4330f0:	mov    QWORD PTR [rsp+0x8],rax
  4330f5:	call   403310 <localtime@plt>
  4330fa:	lea    rdx,[rip+0x1d354]        # 450455 <strcmp@plt+0x4cc9d>
  433101:	mov    rcx,rax
  433104:	mov    esi,0x14
  433109:	mov    rdi,r13
  43310c:	call   403330 <strftime@plt>
  433111:	mov    rax,QWORD PTR [rbx+0x8]
  433115:	imul   eax,DWORD PTR [rax+0x30],0x3c
  433119:	sub    rax,QWORD PTR [rsp+0x8]
  43311e:	test   rax,rax
  433121:	mov    QWORD PTR [rsp],rax
  433125:	jle    43314b <strcmp@plt+0x2f993>
  433127:	mov    rdi,rsp
  43312a:	lea    r15,[rsp+0x10]
  43312f:	call   403310 <localtime@plt>
  433134:	lea    rdx,[rip+0x1d31a]        # 450455 <strcmp@plt+0x4cc9d>
  43313b:	mov    rcx,rax
  43313e:	mov    esi,0x14
  433143:	mov    rdi,r15
  433146:	call   403330 <strftime@plt>
  43314b:	lea    r14,[rsp+0x150]
  433153:	sub    rsp,0x8
  433157:	lea    r8,[rip+0x1d332]        # 450490 <strcmp@plt+0x4ccd8>
  43315e:	push   r15
  433160:	mov    edx,0x1
  433165:	xor    eax,eax
  433167:	mov    rdi,r14
  43316a:	mov    r9,r13
  43316d:	mov    ecx,0x190
  433172:	mov    esi,0x190
  433177:	call   4032a0 <__snprintf_chk@plt>
  43317c:	cmp    BYTE PTR [rbx],0x2
  43317f:	mov    rdi,r14
  433182:	pop    rax
  433183:	pop    rdx
  433184:	je     433290 <strcmp@plt+0x2fad8>
  43318a:	mov    edx,DWORD PTR [rdi]
  43318c:	add    rdi,0x4
  433190:	lea    eax,[rdx-0x1010101]
  433196:	andn   eax,edx,eax
  43319b:	and    eax,0x80808080
  4331a0:	je     43318a <strcmp@plt+0x2f9d2>
  4331a2:	mov    edx,eax
  4331a4:	mov    esi,0x190
  4331a9:	shr    edx,0x10
  4331ac:	test   eax,0x8080
  4331b1:	cmove  eax,edx
  4331b4:	lea    rdx,[rdi+0x2]
  4331b8:	mov    ecx,eax
  4331ba:	cmove  rdi,rdx
  4331be:	add    cl,al
  4331c0:	lea    rdx,[rip+0x1d2a6]        # 45046d <strcmp@plt+0x4ccb5>
  4331c7:	sbb    rdi,0x3
  4331cb:	xor    eax,eax
  4331cd:	sub    rdi,r14
  4331d0:	sub    rsi,rdi
  4331d3:	add    rdi,r14
  4331d6:	call   403640 <snprintf@plt>
  4331db:	cmp    BYTE PTR [rbx+0x10],0x1
  4331df:	lea    rax,[rip+0x1d26c]        # 450452 <strcmp@plt+0x4cc9a>
  4331e6:	lea    r9,[rip+0x1d261]        # 45044e <strcmp@plt+0x4cc96>
  4331ed:	mov    rdi,r14
  4331f0:	cmovne r9,rax
  4331f4:	mov    edx,DWORD PTR [rdi]
  4331f6:	add    rdi,0x4
  4331fa:	lea    eax,[rdx-0x1010101]
  433200:	andn   eax,edx,eax
  433205:	and    eax,0x80808080
  43320a:	je     4331f4 <strcmp@plt+0x2fa3c>
  43320c:	mov    edx,eax
  43320e:	mov    esi,0x190
  433213:	lea    r8,[rip+0x1d263]        # 45047d <strcmp@plt+0x4ccc5>
  43321a:	shr    edx,0x10
  43321d:	test   eax,0x8080
  433222:	cmove  eax,edx
  433225:	lea    rdx,[rdi+0x2]
  433229:	mov    ecx,eax
  43322b:	cmove  rdi,rdx
  43322f:	add    cl,al
  433231:	mov    edx,0x1
  433236:	sbb    rdi,0x3
  43323a:	mov    rcx,0xffffffffffffffff
  433241:	xor    eax,eax
  433243:	sub    rdi,r14
  433246:	sub    rsi,rdi
  433249:	add    rdi,r14
  43324c:	call   4032a0 <__snprintf_chk@plt>
  433251:	cmp    ebp,0x4
  433254:	jle    43326a <strcmp@plt+0x2fab2>
  433256:	mov    rax,0x468e3c
  43325d:	mov    eax,DWORD PTR [rax]
  43325f:	add    eax,0x4
  433262:	cmp    ebp,eax
  433264:	jg     43308e <strcmp@plt+0x2f8d6>
  43326a:	mov    rdi,r12
  43326d:	call   42a820 <strcmp@plt+0x27068>
  433272:	lea    rsi,[rip+0x1d20f]        # 450488 <strcmp@plt+0x4ccd0>
  433279:	mov    rcx,rax
  43327c:	mov    rdx,r14
  43327f:	mov    edi,ebp
  433281:	xor    eax,eax
  433283:	call   4306a0 <strcmp@plt+0x2cee8>
  433288:	jmp    43308e <strcmp@plt+0x2f8d6>
  43328d:	nop    DWORD PTR [rax]
  433290:	mov    edx,DWORD PTR [rdi]
  433292:	add    rdi,0x4
  433296:	lea    eax,[rdx-0x1010101]
  43329c:	andn   eax,edx,eax
  4332a1:	and    eax,0x80808080
  4332a6:	je     433290 <strcmp@plt+0x2fad8>
  4332a8:	mov    edx,eax
  4332aa:	mov    esi,0x190
  4332af:	shr    edx,0x10
  4332b2:	test   eax,0x8080
  4332b7:	cmove  eax,edx
  4332ba:	lea    rdx,[rdi+0x2]
  4332be:	mov    ecx,eax
  4332c0:	cmove  rdi,rdx
  4332c4:	add    cl,al
  4332c6:	lea    rdx,[rip+0x1d191]        # 45045e <strcmp@plt+0x4cca6>
  4332cd:	sbb    rdi,0x3
  4332d1:	xor    eax,eax
  4332d3:	sub    rdi,r14
  4332d6:	sub    rsi,rdi
  4332d9:	add    rdi,r14
  4332dc:	call   403640 <snprintf@plt>
  4332e1:	jmp    4331db <strcmp@plt+0x2fa23>
  4332e6:	call   403460 <__stack_chk_fail@plt>
  4332eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4332f0:	push   rbx
  4332f1:	mov    edi,0x18
  4332f6:	call   434790 <strcmp@plt+0x30fd8>
  4332fb:	xor    edi,edi
  4332fd:	mov    rbx,rax
  433300:	call   403380 <time@plt>
  433305:	mov    QWORD PTR [rbx+0x10],rax
  433309:	mov    rax,rbx
  43330c:	pop    rbx
  43330d:	ret    
  43330e:	xchg   ax,ax
  433310:	mov    QWORD PTR [rdi+0x8],rsi
  433314:	mov    BYTE PTR [rdi],0x1
  433317:	ret    
  433318:	nop    DWORD PTR [rax+rax*1+0x0]
  433320:	mov    QWORD PTR [rdi+0x8],rsi
  433324:	mov    BYTE PTR [rdi],0x2
  433327:	ret    
  433328:	nop    DWORD PTR [rax+rax*1+0x0]
  433330:	test   rdi,rdi
  433333:	je     4333df <strcmp@plt+0x2fc27>
  433339:	push   r15
  43333b:	push   r14
  43333d:	mov    r15,rdi
  433340:	push   r13
  433342:	push   r12
  433344:	push   rbp
  433345:	push   rbx
  433346:	sub    rsp,0x8
  43334a:	mov    rax,QWORD PTR [rdi+0x8]
  43334e:	mov    r12,0x474860
  433355:	mov    r13,0x474858
  43335c:	mov    rdx,QWORD PTR [rax+0x28]
  433360:	mov    r14,QWORD PTR [rdx+0x8]
  433364:	cmp    rdx,r14
  433367:	je     4333b0 <strcmp@plt+0x2fbf8>
  433369:	nop    DWORD PTR [rax+0x0]
  433370:	mov    rbp,QWORD PTR [r14+0x10]
  433374:	mov    edx,DWORD PTR [rbp+0x18]
  433377:	test   edx,edx
  433379:	je     4333a6 <strcmp@plt+0x2fbee>
  43337b:	mov    rbx,QWORD PTR [rbp+0x8]
  43337f:	cmp    rbx,rbp
  433382:	je     4333a6 <strcmp@plt+0x2fbee>
  433384:	nop    DWORD PTR [rax+0x0]
  433388:	mov    rdi,QWORD PTR [rbx+0x10]
  43338c:	mov    rdx,QWORD PTR [r12]
  433390:	mov    rsi,QWORD PTR [r13+0x0]
  433394:	call   43b0b0 <strcmp@plt+0x378f8>
  433399:	mov    rbx,QWORD PTR [rbx+0x8]
  43339d:	cmp    rbx,rbp
  4333a0:	jne    433388 <strcmp@plt+0x2fbd0>
  4333a2:	mov    rax,QWORD PTR [r15+0x8]
  4333a6:	mov    r14,QWORD PTR [r14+0x8]
  4333aa:	cmp    QWORD PTR [rax+0x28],r14
  4333ae:	jne    433370 <strcmp@plt+0x2fbb8>
  4333b0:	mov    rdx,QWORD PTR [r12]
  4333b4:	mov    rsi,QWORD PTR [r13+0x0]
  4333b8:	mov    rdi,r15
  4333bb:	call   43b0b0 <strcmp@plt+0x378f8>
  4333c0:	mov    rdi,QWORD PTR [r15+0x8]
  4333c4:	call   42b280 <strcmp@plt+0x27ac8>
  4333c9:	add    rsp,0x8
  4333cd:	mov    rdi,r15
  4333d0:	pop    rbx
  4333d1:	pop    rbp
  4333d2:	pop    r12
  4333d4:	pop    r13
  4333d6:	pop    r14
  4333d8:	pop    r15
  4333da:	jmp    4037b0 <free@plt>
  4333df:	repz ret 
  4333e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4333ec:	nop    DWORD PTR [rax+0x0]
  4333f0:	mov    rax,QWORD PTR [rdi+0x8]
  4333f4:	ret    
  4333f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  433400:	mov    rax,QWORD PTR [rdi+0x8]
  433404:	cmp    WORD PTR [rax+0x20],0x0
  433409:	setne  al
  43340c:	ret    
  43340d:	nop    DWORD PTR [rax]
  433410:	push   r15
  433412:	push   r14
  433414:	push   r13
  433416:	push   r12
  433418:	push   rbp
  433419:	push   rbx
  43341a:	mov    ebp,esi
  43341c:	mov    rbx,rdi
  43341f:	sub    rsp,0x2f8
  433426:	mov    rax,QWORD PTR fs:0x28
  43342f:	mov    QWORD PTR [rsp+0x2e8],rax
  433437:	xor    eax,eax
  433439:	cmp    esi,0x4
  43343c:	jle    433480 <strcmp@plt+0x2fcc8>
  43343e:	mov    rax,0x468e3c
  433445:	mov    eax,DWORD PTR [rax]
  433447:	add    eax,0x4
  43344a:	cmp    esi,eax
  43344c:	jle    433480 <strcmp@plt+0x2fcc8>
  43344e:	mov    rax,QWORD PTR [rsp+0x2e8]
  433456:	xor    rax,QWORD PTR fs:0x28
  43345f:	jne    433636 <strcmp@plt+0x2fe7e>
  433465:	add    rsp,0x2f8
  43346c:	pop    rbx
  43346d:	pop    rbp
  43346e:	pop    r12
  433470:	pop    r13
  433472:	pop    r14
  433474:	pop    r15
  433476:	ret    
  433477:	nop    WORD PTR [rax+rax*1+0x0]
  433480:	xor    edi,edi
  433482:	mov    BYTE PTR [rsp+0x50],0x0
  433487:	mov    BYTE PTR [rsp+0x10],0x0
  43348c:	mov    BYTE PTR [rsp+0x150],0x0
  433494:	mov    r12,QWORD PTR [rbx+0x8]
  433498:	lea    r13,[rsp+0x50]
  43349d:	call   403380 <time@plt>
  4334a2:	sub    rax,QWORD PTR [rbx+0x10]
  4334a6:	lea    rdi,[rsp+0x8]
  4334ab:	lea    r15,[rsp+0x10]
  4334b0:	mov    QWORD PTR [rsp+0x8],rax
  4334b5:	call   403310 <localtime@plt>
  4334ba:	lea    rdx,[rip+0x1cf94]        # 450455 <strcmp@plt+0x4cc9d>
  4334c1:	mov    rcx,rax
  4334c4:	mov    esi,0x14
  4334c9:	mov    rdi,r13
  4334cc:	call   403330 <strftime@plt>
  4334d1:	mov    rax,QWORD PTR [rbx+0x8]
  4334d5:	imul   eax,DWORD PTR [rax+0x38],0x3c
  4334d9:	sub    rax,QWORD PTR [rsp+0x8]
  4334de:	test   rax,rax
  4334e1:	mov    QWORD PTR [rsp],rax
  4334e5:	jle    43350b <strcmp@plt+0x2fd53>
  4334e7:	mov    rdi,rsp
  4334ea:	lea    r15,[rsp+0x10]
  4334ef:	call   403310 <localtime@plt>
  4334f4:	lea    rdx,[rip+0x1cf5a]        # 450455 <strcmp@plt+0x4cc9d>
  4334fb:	mov    rcx,rax
  4334fe:	mov    esi,0x14
  433503:	mov    rdi,r15
  433506:	call   403330 <strftime@plt>
  43350b:	lea    r14,[rsp+0x150]
  433513:	sub    rsp,0x8
  433517:	lea    r8,[rip+0x1cf72]        # 450490 <strcmp@plt+0x4ccd8>
  43351e:	push   r15
  433520:	mov    edx,0x1
  433525:	xor    eax,eax
  433527:	mov    rdi,r14
  43352a:	mov    r9,r13
  43352d:	mov    ecx,0x190
  433532:	mov    esi,0x190
  433537:	call   4032a0 <__snprintf_chk@plt>
  43353c:	cmp    BYTE PTR [rbx],0x2
  43353f:	mov    rdi,r14
  433542:	pop    rax
  433543:	pop    rdx
  433544:	je     4335e0 <strcmp@plt+0x2fe28>
  43354a:	mov    edx,DWORD PTR [rdi]
  43354c:	add    rdi,0x4
  433550:	lea    eax,[rdx-0x1010101]
  433556:	andn   eax,edx,eax
  43355b:	and    eax,0x80808080
  433560:	je     43354a <strcmp@plt+0x2fd92>
  433562:	mov    edx,eax
  433564:	mov    esi,0x190
  433569:	shr    edx,0x10
  43356c:	test   eax,0x8080
  433571:	cmove  eax,edx
  433574:	lea    rdx,[rdi+0x2]
  433578:	mov    ecx,eax
  43357a:	cmove  rdi,rdx
  43357e:	add    cl,al
  433580:	lea    rdx,[rip+0x1cee6]        # 45046d <strcmp@plt+0x4ccb5>
  433587:	sbb    rdi,0x3
  43358b:	xor    eax,eax
  43358d:	sub    rdi,r14
  433590:	sub    rsi,rdi
  433593:	add    rdi,r14
  433596:	call   403640 <snprintf@plt>
  43359b:	cmp    ebp,0x4
  43359e:	jle    4335b4 <strcmp@plt+0x2fdfc>
  4335a0:	mov    rax,0x468e3c
  4335a7:	mov    eax,DWORD PTR [rax]
  4335a9:	add    eax,0x4
  4335ac:	cmp    ebp,eax
  4335ae:	jg     43344e <strcmp@plt+0x2fc96>
  4335b4:	mov    rdi,r12
  4335b7:	call   42b470 <strcmp@plt+0x27cb8>
  4335bc:	lea    rsi,[rip+0x1cec5]        # 450488 <strcmp@plt+0x4ccd0>
  4335c3:	mov    rcx,rax
  4335c6:	mov    rdx,r14
  4335c9:	mov    edi,ebp
  4335cb:	xor    eax,eax
  4335cd:	call   4306a0 <strcmp@plt+0x2cee8>
  4335d2:	jmp    43344e <strcmp@plt+0x2fc96>
  4335d7:	nop    WORD PTR [rax+rax*1+0x0]
  4335e0:	mov    edx,DWORD PTR [rdi]
  4335e2:	add    rdi,0x4
  4335e6:	lea    eax,[rdx-0x1010101]
  4335ec:	andn   eax,edx,eax
  4335f1:	and    eax,0x80808080
  4335f6:	je     4335e0 <strcmp@plt+0x2fe28>
  4335f8:	mov    edx,eax
  4335fa:	mov    esi,0x190
  4335ff:	shr    edx,0x10
  433602:	test   eax,0x8080
  433607:	cmove  eax,edx
  43360a:	lea    rdx,[rdi+0x2]
  43360e:	mov    ecx,eax
  433610:	cmove  rdi,rdx
  433614:	add    cl,al
  433616:	lea    rdx,[rip+0x1ce41]        # 45045e <strcmp@plt+0x4cca6>
  43361d:	sbb    rdi,0x3
  433621:	xor    eax,eax
  433623:	sub    rdi,r14
  433626:	sub    rsi,rdi
  433629:	add    rdi,r14
  43362c:	call   403640 <snprintf@plt>
  433631:	jmp    43359b <strcmp@plt+0x2fde3>
  433636:	call   403460 <__stack_chk_fail@plt>
  43363b:	nop    DWORD PTR [rax+rax*1+0x0]
  433640:	push   rbp
  433641:	push   rbx
  433642:	mov    rbp,rdi
  433645:	mov    edi,0x18
  43364a:	sub    rsp,0x8
  43364e:	call   434790 <strcmp@plt+0x30fd8>
  433653:	xor    edi,edi
  433655:	mov    rbx,rax
  433658:	call   403380 <time@plt>
  43365d:	mov    QWORD PTR [rbx+0x10],rax
  433661:	movzx  eax,BYTE PTR [rbp+0x0]
  433665:	mov    BYTE PTR [rbx],al
  433667:	mov    rdi,QWORD PTR [rbp+0x8]
  43366b:	call   42b3d0 <strcmp@plt+0x27c18>
  433670:	mov    QWORD PTR [rbx+0x8],rax
  433674:	mov    rax,QWORD PTR [rbp+0x10]
  433678:	mov    QWORD PTR [rbx+0x10],rax
  43367c:	add    rsp,0x8
  433680:	mov    rax,rbx
  433683:	pop    rbx
  433684:	pop    rbp
  433685:	ret    
  433686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433690:	mov    rax,0x474860
  433697:	push   rbx
  433698:	mov    rbx,rdi
  43369b:	mov    rdx,QWORD PTR [rax]
  43369e:	mov    rax,0x474858
  4336a5:	mov    rsi,QWORD PTR [rax]
  4336a8:	call   43b0b0 <strcmp@plt+0x378f8>
  4336ad:	mov    rdi,QWORD PTR [rbx+0x10]
  4336b1:	call   424750 <strcmp@plt+0x20f98>
  4336b6:	mov    rdi,QWORD PTR [rbx]
  4336b9:	call   424750 <strcmp@plt+0x20f98>
  4336be:	mov    rdi,QWORD PTR [rbx+0x18]
  4336c2:	call   424750 <strcmp@plt+0x20f98>
  4336c7:	mov    rdi,rbx
  4336ca:	pop    rbx
  4336cb:	jmp    4037b0 <free@plt>
  4336d0:	push   r15
  4336d2:	push   r14
  4336d4:	mov    edx,0x55555556
  4336d9:	push   r13
  4336db:	push   r12
  4336dd:	push   rbp
  4336de:	push   rbx
  4336df:	lea    rbx,[rip+0x3f81a]        # 472f00 <strcmp@plt+0x6f748>
  4336e6:	sub    rsp,0x18
  4336ea:	mov    eax,DWORD PTR [rip+0x403c8]        # 473ab8 <strcmp@plt+0x70300>
  4336f0:	lea    ecx,[rax+0x1]
  4336f3:	mov    eax,ecx
  4336f5:	imul   edx
  4336f7:	mov    eax,ecx
  4336f9:	sar    eax,0x1f
  4336fc:	sub    edx,eax
  4336fe:	lea    eax,[rdx+rdx*2]
  433701:	sub    ecx,eax
  433703:	movsxd rax,ecx
  433706:	mov    DWORD PTR [rip+0x403ac],eax        # 473ab8 <strcmp@plt+0x70300>
  43370c:	imul   rax,rax,0x3e8
  433713:	add    rax,rbx
  433716:	test   rdi,rdi
  433719:	mov    BYTE PTR [rax],0x0
  43371c:	je     433808 <strcmp@plt+0x30050>
  433722:	mov    rbp,rdi
  433725:	movzx  r15d,BYTE PTR [rdi+0x31]
  43372a:	movzx  r14d,BYTE PTR [rdi+0x30]
  43372f:	mov    rdi,QWORD PTR [rdi+0x18]
  433733:	call   424890 <strcmp@plt+0x210d8>
  433738:	mov    rdi,QWORD PTR [rbp+0x0]
  43373c:	mov    r13,rax
  43373f:	movzx  r12d,WORD PTR [rbp+0x8]
  433744:	call   424890 <strcmp@plt+0x210d8>
  433749:	mov    rdi,QWORD PTR [rbp+0x10]
  43374d:	mov    QWORD PTR [rsp+0x8],rax
  433752:	call   424890 <strcmp@plt+0x210d8>
  433757:	movsxd rcx,DWORD PTR [rip+0x4035a]        # 473ab8 <strcmp@plt+0x70300>
  43375e:	imul   rcx,rcx,0x3e8
  433765:	add    rcx,rbx
  433768:	mov    rdi,rcx
  43376b:	mov    esi,DWORD PTR [rdi]
  43376d:	add    rdi,0x4
  433771:	lea    edx,[rsi-0x1010101]
  433777:	andn   edx,esi,edx
  43377c:	and    edx,0x80808080
  433782:	je     43376b <strcmp@plt+0x2ffb3>
  433784:	mov    esi,edx
  433786:	lea    r8,[rip+0x1cd3b]        # 4504c8 <strcmp@plt+0x4cd10>
  43378d:	mov    r9,rax
  433790:	shr    esi,0x10
  433793:	test   edx,0x8080
  433799:	cmove  edx,esi
  43379c:	lea    rsi,[rdi+0x2]
  4337a0:	cmove  rdi,rsi
  4337a4:	mov    esi,edx
  4337a6:	add    sil,dl
  4337a9:	mov    esi,0x3e8
  4337ae:	mov    edx,0x1
  4337b3:	sbb    rdi,0x3
  4337b7:	sub    rsp,0x8
  4337bb:	xor    eax,eax
  4337bd:	push   r15
  4337bf:	sub    rdi,rcx
  4337c2:	push   r14
  4337c4:	push   r13
  4337c6:	push   r12
  4337c8:	sub    rsi,rdi
  4337cb:	push   QWORD PTR [rsp+0x30]
  4337cf:	add    rdi,rcx
  4337d2:	mov    rcx,0xffffffffffffffff
  4337d9:	call   4032a0 <__snprintf_chk@plt>
  4337de:	movsxd rax,DWORD PTR [rip+0x402d3]        # 473ab8 <strcmp@plt+0x70300>
  4337e5:	add    rsp,0x30
  4337e9:	add    rsp,0x18
  4337ed:	imul   rax,rax,0x3e8
  4337f4:	add    rax,rbx
  4337f7:	pop    rbx
  4337f8:	pop    rbp
  4337f9:	pop    r12
  4337fb:	pop    r13
  4337fd:	pop    r14
  4337ff:	pop    r15
  433801:	ret    
  433802:	nop    WORD PTR [rax+rax*1+0x0]
  433808:	mov    edx,0x5f4c
  43380d:	mov    DWORD PTR [rax],0x4c554e5f
  433813:	mov    BYTE PTR [rax+0x6],0x0
  433817:	mov    WORD PTR [rax+0x4],dx
  43381b:	add    rsp,0x18
  43381f:	pop    rbx
  433820:	pop    rbp
  433821:	pop    r12
  433823:	pop    r13
  433825:	pop    r14
  433827:	pop    r15
  433829:	ret    
  43382a:	nop    WORD PTR [rax+rax*1+0x0]
  433830:	mov    edi,0x8
  433835:	jmp    434790 <strcmp@plt+0x30fd8>
  43383a:	nop    WORD PTR [rax+rax*1+0x0]
  433840:	push   rbp
  433841:	push   rbx
  433842:	mov    edi,0x8
  433847:	sub    rsp,0x8
  43384b:	call   434790 <strcmp@plt+0x30fd8>
  433850:	test   rax,rax
  433853:	je     433898 <strcmp@plt+0x300e0>
  433855:	mov    edi,0x10
  43385a:	mov    rbp,rax
  43385d:	call   434790 <strcmp@plt+0x30fd8>
  433862:	test   rax,rax
  433865:	mov    rbx,rax
  433868:	je     433898 <strcmp@plt+0x300e0>
  43386a:	mov    rdi,0x42dac0
  433871:	mov    QWORD PTR [rbp+0x0],rax
  433875:	call   4397c0 <strcmp@plt+0x36008>
  43387a:	mov    QWORD PTR [rbx],rax
  43387d:	xor    eax,eax
  43387f:	call   42dd40 <strcmp@plt+0x2a588>
  433884:	mov    QWORD PTR [rbx+0x8],rax
  433888:	add    rsp,0x8
  43388c:	mov    rax,rbp
  43388f:	pop    rbx
  433890:	pop    rbp
  433891:	ret    
  433892:	nop    WORD PTR [rax+rax*1+0x0]
  433898:	xor    ebp,ebp
  43389a:	jmp    433888 <strcmp@plt+0x300d0>
  43389c:	nop    DWORD PTR [rax+0x0]
  4338a0:	test   rdi,rdi
  4338a3:	je     4338e0 <strcmp@plt+0x30128>
  4338a5:	push   rbx
  4338a6:	mov    rax,QWORD PTR [rdi]
  4338a9:	mov    rbx,rdi
  4338ac:	test   rax,rax
  4338af:	je     4338cd <strcmp@plt+0x30115>
  4338b1:	mov    rdi,QWORD PTR [rax]
  4338b4:	call   43a5a0 <strcmp@plt+0x36de8>
  4338b9:	mov    rax,QWORD PTR [rbx]
  4338bc:	mov    rdi,QWORD PTR [rax+0x8]
  4338c0:	call   42e680 <strcmp@plt+0x2aec8>
  4338c5:	mov    rdi,QWORD PTR [rbx]
  4338c8:	call   4037b0 <free@plt>
  4338cd:	mov    rdi,rbx
  4338d0:	pop    rbx
  4338d1:	jmp    4037b0 <free@plt>
  4338d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4338e0:	repz ret 
  4338e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4338ed:	nop    DWORD PTR [rax]
  4338f0:	push   r15
  4338f2:	push   r14
  4338f4:	mov    r15,rcx
  4338f7:	push   r13
  4338f9:	push   r12
  4338fb:	mov    r13d,edx
  4338fe:	push   rbp
  4338ff:	push   rbx
  433900:	mov    r12,r8
  433903:	mov    ebp,r9d
  433906:	sub    rsp,0x18
  43390a:	mov    QWORD PTR [rsp],rdi
  43390e:	mov    edi,0x38
  433913:	mov    QWORD PTR [rsp+0x8],rsi
  433918:	mov    ebx,DWORD PTR [rsp+0x50]
  43391c:	call   434790 <strcmp@plt+0x30fd8>
  433921:	test   rax,rax
  433924:	mov    r14,rax
  433927:	je     433970 <strcmp@plt+0x301b8>
  433929:	mov    rsi,QWORD PTR [rsp+0x8]
  43392e:	mov    rdi,rsi
  433931:	call   424b80 <strcmp@plt+0x213c8>
  433936:	mov    rdi,r15
  433939:	mov    QWORD PTR [r14],rax
  43393c:	call   424b80 <strcmp@plt+0x213c8>
  433941:	mov    rdi,QWORD PTR [rsp]
  433945:	mov    QWORD PTR [r14+0x10],rax
  433949:	call   424b80 <strcmp@plt+0x213c8>
  43394e:	mov    WORD PTR [r14+0x8],r13w
  433953:	mov    QWORD PTR [r14+0x18],rax
  433957:	mov    rsi,QWORD PTR [r12]
  43395b:	mov    rdi,QWORD PTR [r12+0x8]
  433960:	mov    BYTE PTR [r14+0x30],bpl
  433964:	mov    BYTE PTR [r14+0x31],bl
  433968:	mov    QWORD PTR [r14+0x20],rsi
  43396c:	mov    QWORD PTR [r14+0x28],rdi
  433970:	add    rsp,0x18
  433974:	mov    rax,r14
  433977:	pop    rbx
  433978:	pop    rbp
  433979:	pop    r12
  43397b:	pop    r13
  43397d:	pop    r14
  43397f:	pop    r15
  433981:	ret    
  433982:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43398d:	nop    DWORD PTR [rax]
  433990:	push   r15
  433992:	push   r14
  433994:	push   r13
  433996:	push   r12
  433998:	push   rbp
  433999:	push   rbx
  43399a:	mov    ebx,r8d
  43399d:	sub    rsp,0x58
  4339a1:	mov    rbp,QWORD PTR [rdi+0x30]
  4339a5:	mov    rdi,QWORD PTR [rsp+0x90]
  4339ad:	mov    QWORD PTR [rsp+0x10],rsi
  4339b2:	mov    QWORD PTR [rsp+0x38],rdx
  4339b7:	mov    QWORD PTR [rsp+0x40],rcx
  4339bc:	mov    DWORD PTR [rsp+0x4c],r8d
  4339c1:	mov    QWORD PTR [rsp+0x18],r9
  4339c6:	call   43b3c0 <strcmp@plt+0x37c08>
  4339cb:	mov    rdx,QWORD PTR [rbp+0x0]
  4339cf:	mov    rsi,rax
  4339d2:	mov    rdi,QWORD PTR [rdx]
  4339d5:	call   43a470 <strcmp@plt+0x36cb8>
  4339da:	test   rax,rax
  4339dd:	mov    r12,rax
  4339e0:	je     433d03 <strcmp@plt+0x3054b>
  4339e6:	call   42d4e0 <strcmp@plt+0x29d28>
  4339eb:	mov    QWORD PTR [rsp+0x28],rax
  4339f0:	mov    rax,QWORD PTR [rsp+0x10]
  4339f5:	mov    rax,QWORD PTR [rax+0x28]
  4339f9:	mov    rdx,QWORD PTR [rax+0x8]
  4339fd:	cmp    rax,rdx
  433a00:	mov    QWORD PTR [rsp+0x8],rdx
  433a05:	je     433b2d <strcmp@plt+0x30375>
  433a0b:	movzx  eax,bx
  433a0e:	mov    QWORD PTR [rsp+0x30],0x0
  433a17:	mov    DWORD PTR [rsp+0x48],eax
  433a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  433a20:	mov    rax,QWORD PTR [rsp+0x8]
  433a25:	mov    r13,QWORD PTR [rax+0x10]
  433a29:	mov    r9d,DWORD PTR [r13+0x18]
  433a2d:	test   r9d,r9d
  433a30:	je     433afb <strcmp@plt+0x30343>
  433a36:	mov    rbp,QWORD PTR [r13+0x8]
  433a3a:	mov    rbx,QWORD PTR [rbp+0x10]
  433a3e:	mov    rax,QWORD PTR [rbx]
  433a41:	mov    r8d,DWORD PTR [rax+0x18]
  433a45:	test   r8d,r8d
  433a48:	je     433afb <strcmp@plt+0x30343>
  433a4e:	cmp    rbp,r13
  433a51:	jne    433a71 <strcmp@plt+0x302b9>
  433a53:	jmp    433afb <strcmp@plt+0x30343>
  433a58:	nop    DWORD PTR [rax+rax*1+0x0]
  433a60:	mov    rbp,QWORD PTR [rbp+0x8]
  433a64:	cmp    rbp,r13
  433a67:	je     433af8 <strcmp@plt+0x30340>
  433a6d:	mov    rbx,QWORD PTR [rbp+0x10]
  433a71:	cmp    BYTE PTR [rbx+0xa],0x0
  433a75:	jne    433a60 <strcmp@plt+0x302a8>
  433a77:	mov    rsi,QWORD PTR [rsp+0x18]
  433a7c:	mov    rdi,QWORD PTR [rbx]
  433a7f:	call   424df0 <strcmp@plt+0x21638>
  433a84:	test   eax,eax
  433a86:	mov    r15,QWORD PTR [r12+0x8]
  433a8b:	jne    433ba0 <strcmp@plt+0x303e8>
  433a91:	cmp    r12,r15
  433a94:	je     433bcc <strcmp@plt+0x30414>
  433a9a:	mov    QWORD PTR [rsp+0x20],rbx
  433a9f:	jmp    433ab5 <strcmp@plt+0x302fd>
  433aa1:	nop    DWORD PTR [rax+0x0]
  433aa8:	mov    r15,QWORD PTR [r15+0x8]
  433aac:	cmp    r12,r15
  433aaf:	je     433bc0 <strcmp@plt+0x30408>
  433ab5:	mov    r14,QWORD PTR [r15+0x10]
  433ab9:	mov    rdi,QWORD PTR [rbx]
  433abc:	mov    rsi,QWORD PTR [r14+0x10]
  433ac0:	call   424df0 <strcmp@plt+0x21638>
  433ac5:	test   eax,eax
  433ac7:	jne    433aa8 <strcmp@plt+0x302f0>
  433ac9:	movzx  eax,BYTE PTR [rbx+0xb]
  433acd:	mov    rsi,QWORD PTR [rsp+0x28]
  433ad2:	mov    rdi,r14
  433ad5:	mov    BYTE PTR [r14+0x30],al
  433ad9:	movzx  eax,BYTE PTR [rbx+0xc]
  433add:	mov    BYTE PTR [r14+0x31],al
  433ae1:	call   42d540 <strcmp@plt+0x29d88>
  433ae6:	mov    rbp,QWORD PTR [rbp+0x8]
  433aea:	cmp    rbp,r13
  433aed:	jne    433a6d <strcmp@plt+0x302b5>
  433af3:	nop    DWORD PTR [rax+rax*1+0x0]
  433af8:	mov    r15,rbx
  433afb:	mov    rax,QWORD PTR [rsp+0x8]
  433b00:	mov    rcx,QWORD PTR [rsp+0x10]
  433b05:	mov    rax,QWORD PTR [rax+0x8]
  433b09:	cmp    QWORD PTR [rcx+0x28],rax
  433b0d:	mov    QWORD PTR [rsp+0x8],rax
  433b12:	jne    433a20 <strcmp@plt+0x30268>
  433b18:	mov    rax,QWORD PTR [rsp+0x30]
  433b1d:	test   rax,rax
  433b20:	je     433b2d <strcmp@plt+0x30375>
  433b22:	mov    rsi,r12
  433b25:	mov    rdi,rax
  433b28:	call   42d540 <strcmp@plt+0x29d88>
  433b2d:	mov    rax,QWORD PTR [rsp+0x28]
  433b32:	mov    ecx,DWORD PTR [rax+0x18]
  433b35:	test   ecx,ecx
  433b37:	jne    433c43 <strcmp@plt+0x3048b>
  433b3d:	mov    rbx,QWORD PTR [r12+0x8]
  433b42:	cmp    r12,rbx
  433b45:	je     433c90 <strcmp@plt+0x304d8>
  433b4b:	mov    r13,QWORD PTR [rsp+0x18]
  433b50:	jmp    433b65 <strcmp@plt+0x303ad>
  433b52:	nop    WORD PTR [rax+rax*1+0x0]
  433b58:	mov    rbx,QWORD PTR [rbx+0x8]
  433b5c:	cmp    r12,rbx
  433b5f:	je     433c90 <strcmp@plt+0x304d8>
  433b65:	mov    rbp,QWORD PTR [rbx+0x10]
  433b69:	mov    rdi,r13
  433b6c:	mov    rsi,QWORD PTR [rbp+0x10]
  433b70:	call   424df0 <strcmp@plt+0x21638>
  433b75:	test   eax,eax
  433b77:	jne    433b58 <strcmp@plt+0x303a0>
  433b79:	mov    BYTE PTR [rbp+0x30],0x1
  433b7d:	mov    BYTE PTR [rbp+0x31],0x64
  433b81:	mov    rdi,QWORD PTR [rsp+0x28]
  433b86:	call   42dac0 <strcmp@plt+0x2a308>
  433b8b:	add    rsp,0x58
  433b8f:	mov    eax,0x1
  433b94:	pop    rbx
  433b95:	pop    rbp
  433b96:	pop    r12
  433b98:	pop    r13
  433b9a:	pop    r14
  433b9c:	pop    r15
  433b9e:	ret    
  433b9f:	nop
  433ba0:	cmp    r15,r12
  433ba3:	mov    QWORD PTR [rsp+0x20],0x0
  433bac:	jne    433ab5 <strcmp@plt+0x302fd>
  433bb2:	jmp    433a60 <strcmp@plt+0x302a8>
  433bb7:	nop    WORD PTR [rax+rax*1+0x0]
  433bc0:	cmp    QWORD PTR [rsp+0x20],0x0
  433bc6:	je     433a60 <strcmp@plt+0x302a8>
  433bcc:	movzx  eax,BYTE PTR [rbx+0xc]
  433bd0:	sub    rsp,0x8
  433bd4:	push   rax
  433bd5:	movzx  r9d,BYTE PTR [rbx+0xb]
  433bda:	mov    r8,QWORD PTR [rsp+0xa0]
  433be2:	mov    rcx,QWORD PTR [rsp+0x28]
  433be7:	mov    edx,DWORD PTR [rsp+0x58]
  433beb:	mov    rsi,QWORD PTR [rsp+0x50]
  433bf0:	mov    rdi,QWORD PTR [rsp+0x48]
  433bf5:	call   4338f0 <strcmp@plt+0x30138>
  433bfa:	mov    rsi,QWORD PTR [rsp+0x38]
  433bff:	mov    rdi,rax
  433c02:	mov    QWORD PTR [rsp+0x40],rax
  433c07:	call   42d540 <strcmp@plt+0x29d88>
  433c0c:	mov    rax,0x468e3c
  433c13:	pop    rsi
  433c14:	pop    rdi
  433c15:	cmp    DWORD PTR [rax],0x1
  433c18:	jle    433a60 <strcmp@plt+0x302a8>
  433c1e:	mov    rdi,QWORD PTR [rsp+0x30]
  433c23:	call   4336d0 <strcmp@plt+0x2ff18>
  433c28:	lea    rsi,[rip+0x1c929]        # 450558 <strcmp@plt+0x4cda0>
  433c2f:	mov    rdx,rax
  433c32:	mov    edi,0x6
  433c37:	xor    eax,eax
  433c39:	call   4306a0 <strcmp@plt+0x2cee8>
  433c3e:	jmp    433a60 <strcmp@plt+0x302a8>
  433c43:	mov    rax,QWORD PTR [r12+0x8]
  433c48:	mov    r13,QWORD PTR [rsp+0x28]
  433c4d:	cmp    r12,rax
  433c50:	jne    433c77 <strcmp@plt+0x304bf>
  433c52:	jmp    433b81 <strcmp@plt+0x303c9>
  433c57:	nop    WORD PTR [rax+rax*1+0x0]
  433c60:	mov    rsi,r12
  433c63:	mov    rdi,rbx
  433c66:	call   42d9a0 <strcmp@plt+0x2a1e8>
  433c6b:	cmp    r12,rbp
  433c6e:	mov    rax,rbp
  433c71:	je     433b81 <strcmp@plt+0x303c9>
  433c77:	mov    rbx,QWORD PTR [rax+0x10]
  433c7b:	mov    rsi,r13
  433c7e:	mov    rbp,QWORD PTR [rax+0x8]
  433c82:	mov    rdi,rbx
  433c85:	call   42d730 <strcmp@plt+0x29f78>
  433c8a:	test   al,al
  433c8c:	jne    433c6b <strcmp@plt+0x304b3>
  433c8e:	jmp    433c60 <strcmp@plt+0x304a8>
  433c90:	movzx  eax,BYTE PTR [r15+0xc]
  433c95:	movzx  edx,WORD PTR [rsp+0x4c]
  433c9a:	sub    rsp,0x8
  433c9e:	push   rax
  433c9f:	movzx  r9d,BYTE PTR [r15+0xb]
  433ca4:	mov    r8,QWORD PTR [rsp+0xa0]
  433cac:	mov    rcx,QWORD PTR [rsp+0x28]
  433cb1:	mov    rsi,QWORD PTR [rsp+0x50]
  433cb6:	mov    rdi,QWORD PTR [rsp+0x48]
  433cbb:	call   4338f0 <strcmp@plt+0x30138>
  433cc0:	mov    rsi,r12
  433cc3:	mov    rdi,rax
  433cc6:	mov    rbx,rax
  433cc9:	call   42d540 <strcmp@plt+0x29d88>
  433cce:	pop    rax
  433ccf:	mov    rax,0x468e3c
  433cd6:	pop    rdx
  433cd7:	cmp    DWORD PTR [rax],0x1
  433cda:	jle    433b81 <strcmp@plt+0x303c9>
  433ce0:	mov    rdi,rbx
  433ce3:	call   4336d0 <strcmp@plt+0x2ff18>
  433ce8:	lea    rsi,[rip+0x1c899]        # 450588 <strcmp@plt+0x4cdd0>
  433cef:	mov    rdx,rax
  433cf2:	mov    edi,0x6
  433cf7:	xor    eax,eax
  433cf9:	call   4306a0 <strcmp@plt+0x2cee8>
  433cfe:	jmp    433b81 <strcmp@plt+0x303c9>
  433d03:	mov    rax,0x468e3c
  433d0a:	cmp    DWORD PTR [rax],0x2
  433d0d:	jle    433d42 <strcmp@plt+0x3058a>
  433d0f:	mov    rdi,QWORD PTR [rsp+0x10]
  433d14:	call   424890 <strcmp@plt+0x210d8>
  433d19:	mov    rdi,QWORD PTR [rsp+0x90]
  433d21:	mov    r12,rax
  433d24:	call   43b3c0 <strcmp@plt+0x37c08>
  433d29:	lea    rsi,[rip+0x1c7e8]        # 450518 <strcmp@plt+0x4cd60>
  433d30:	mov    rdx,rax
  433d33:	mov    rcx,r12
  433d36:	mov    edi,0x7
  433d3b:	xor    eax,eax
  433d3d:	call   4306a0 <strcmp@plt+0x2cee8>
  433d42:	mov    rdi,0x433690
  433d49:	call   42d4f0 <strcmp@plt+0x29d38>
  433d4e:	mov    rdi,QWORD PTR [rsp+0x90]
  433d56:	mov    r12,rax
  433d59:	call   43b3c0 <strcmp@plt+0x37c08>
  433d5e:	mov    rdi,rax
  433d61:	call   403730 <strdup@plt>
  433d66:	mov    rcx,QWORD PTR [rbp+0x0]
  433d6a:	mov    rdx,r12
  433d6d:	mov    rsi,rax
  433d70:	mov    rdi,QWORD PTR [rcx]
  433d73:	call   439800 <strcmp@plt+0x36048>
  433d78:	mov    rdi,QWORD PTR [rsp+0x90]
  433d80:	call   43b3c0 <strcmp@plt+0x37c08>
  433d85:	mov    rdx,QWORD PTR [rbp+0x0]
  433d89:	mov    rsi,rax
  433d8c:	mov    rdi,QWORD PTR [rdx]
  433d8f:	call   43a470 <strcmp@plt+0x36cb8>
  433d94:	mov    r12,rax
  433d97:	jmp    4339e6 <strcmp@plt+0x3022e>
  433d9c:	nop    DWORD PTR [rax+0x0]
  433da0:	push   r15
  433da2:	push   r14
  433da4:	mov    r14,rdi
  433da7:	push   r13
  433da9:	push   r12
  433dab:	mov    r15,rdx
  433dae:	push   rbp
  433daf:	push   rbx
  433db0:	mov    rbx,rcx
  433db3:	mov    r13d,r8d
  433db6:	sub    rsp,0x38
  433dba:	mov    rax,QWORD PTR [rdi+0x8]
  433dbe:	mov    rcx,QWORD PTR [rdi+0x30]
  433dc2:	mov    QWORD PTR [rsp+0x28],rdi
  433dc7:	mov    QWORD PTR [rsp+0x8],rsi
  433dcc:	mov    QWORD PTR [rsp],r9
  433dd0:	mov    rdi,rax
  433dd3:	mov    QWORD PTR [rsp+0x18],rcx
  433dd8:	mov    QWORD PTR [rsp+0x20],rax
  433ddd:	call   42a790 <strcmp@plt+0x26fd8>
  433de2:	mov    rbp,rax
  433de5:	xor    eax,eax
  433de7:	call   42dd40 <strcmp@plt+0x2a588>
  433dec:	sub    rsp,0x8
  433df0:	mov    rcx,rbx
  433df3:	movzx  r8d,r13w
  433df7:	push   QWORD PTR [rsp+0x78]
  433dfb:	mov    r9,QWORD PTR [rsp+0x10]
  433e00:	mov    rdx,r15
  433e03:	mov    rsi,QWORD PTR [rsp+0x18]
  433e08:	mov    rdi,r14
  433e0b:	mov    r12,rax
  433e0e:	call   433990 <strcmp@plt+0x301d8>
  433e13:	cmp    eax,0x1
  433e16:	mov    DWORD PTR [rsp+0x18],eax
  433e1a:	pop    rcx
  433e1b:	pop    rsi
  433e1c:	je     433e39 <strcmp@plt+0x30681>
  433e1e:	mov    DWORD PTR [rsp+0x8],0x0
  433e26:	mov    eax,DWORD PTR [rsp+0x8]
  433e2a:	add    rsp,0x38
  433e2e:	pop    rbx
  433e2f:	pop    rbp
  433e30:	pop    r12
  433e32:	pop    r13
  433e34:	pop    r14
  433e36:	pop    r15
  433e38:	ret    
  433e39:	mov    rax,QWORD PTR [rsp+0x18]
  433e3e:	mov    rax,QWORD PTR [rax]
  433e41:	mov    rdi,QWORD PTR [rax]
  433e44:	call   43a6e0 <strcmp@plt+0x36f28>
  433e49:	mov    rcx,QWORD PTR [rax+0x8]
  433e4d:	mov    QWORD PTR [rsp+0x10],rax
  433e52:	cmp    rax,rcx
  433e55:	mov    QWORD PTR [rsp],rcx
  433e59:	je     433edc <strcmp@plt+0x30724>
  433e5f:	nop
  433e60:	mov    rax,QWORD PTR [rsp]
  433e64:	mov    r13,QWORD PTR [rax+0x10]
  433e68:	mov    r15,QWORD PTR [r13+0x8]
  433e6c:	cmp    r15,r13
  433e6f:	je     433ec9 <strcmp@plt+0x30711>
  433e71:	nop    DWORD PTR [rax+0x0]
  433e78:	mov    rbx,QWORD PTR [r15+0x10]
  433e7c:	xor    edx,edx
  433e7e:	mov    ecx,0x1
  433e83:	mov    esi,0x1
  433e88:	mov    rdi,QWORD PTR [rbx+0x10]
  433e8c:	push   0x0
  433e8e:	push   0xff
  433e93:	movzx  r9d,BYTE PTR [rbx+0x31]
  433e98:	movzx  r8d,BYTE PTR [rbx+0x30]
  433e9d:	call   429d90 <strcmp@plt+0x265d8>
  433ea2:	mov    rdi,rbp
  433ea5:	mov    r14,rax
  433ea8:	mov    rsi,rax
  433eab:	call   42acb0 <strcmp@plt+0x274f8>
  433eb0:	mov    rdx,rbx
  433eb3:	mov    rsi,r14
  433eb6:	mov    rdi,r12
  433eb9:	call   42ddb0 <strcmp@plt+0x2a5f8>
  433ebe:	mov    r15,QWORD PTR [r15+0x8]
  433ec2:	pop    rax
  433ec3:	pop    rdx
  433ec4:	cmp    r15,r13
  433ec7:	jne    433e78 <strcmp@plt+0x306c0>
  433ec9:	mov    rax,QWORD PTR [rsp]
  433ecd:	mov    rax,QWORD PTR [rax+0x8]
  433ed1:	cmp    QWORD PTR [rsp+0x10],rax
  433ed6:	mov    QWORD PTR [rsp],rax
  433eda:	jne    433e60 <strcmp@plt+0x306a8>
  433edc:	mov    rdi,QWORD PTR [rsp+0x10]
  433ee1:	call   42dac0 <strcmp@plt+0x2a308>
  433ee6:	mov    rsi,QWORD PTR [rsp+0x20]
  433eeb:	mov    rdi,rbp
  433eee:	call   42a680 <strcmp@plt+0x26ec8>
  433ef3:	test   eax,eax
  433ef5:	jne    433f2b <strcmp@plt+0x30773>
  433ef7:	mov    rax,0x468e3c
  433efe:	cmp    DWORD PTR [rax],0x1
  433f01:	jle    433f16 <strcmp@plt+0x3075e>
  433f03:	lea    rsi,[rip+0x1c746]        # 450650 <strcmp@plt+0x4ce98>
  433f0a:	mov    edi,0x6
  433f0f:	xor    eax,eax
  433f11:	call   4306a0 <strcmp@plt+0x2cee8>
  433f16:	mov    rdi,rbp
  433f19:	call   42a650 <strcmp@plt+0x26e98>
  433f1e:	mov    rdi,r12
  433f21:	call   42e680 <strcmp@plt+0x2aec8>
  433f26:	jmp    433e26 <strcmp@plt+0x3066e>
  433f2b:	mov    rbx,QWORD PTR [rsp+0x18]
  433f30:	mov    rax,QWORD PTR [rbx]
  433f33:	mov    rdi,QWORD PTR [rax+0x8]
  433f37:	call   42e680 <strcmp@plt+0x2aec8>
  433f3c:	mov    rdi,QWORD PTR [rsp+0x20]
  433f41:	call   42a650 <strcmp@plt+0x26e98>
  433f46:	mov    rax,QWORD PTR [rsp+0x28]
  433f4b:	mov    QWORD PTR [rax+0x8],rbp
  433f4f:	mov    rax,QWORD PTR [rbx]
  433f52:	mov    QWORD PTR [rax+0x8],r12
  433f56:	mov    r12,0x468e3c
  433f5d:	cmp    DWORD PTR [r12],0x1
  433f62:	jg     434018 <strcmp@plt+0x30860>
  433f68:	mov    rdi,QWORD PTR [rax]
  433f6b:	call   43a670 <strcmp@plt+0x36eb8>
  433f70:	mov    r15,QWORD PTR [rax+0x8]
  433f74:	mov    rbx,rax
  433f77:	cmp    rax,r15
  433f7a:	je     433fdc <strcmp@plt+0x30824>
  433f7c:	mov    r13,0x4336d0
  433f83:	mov    r14,QWORD PTR [rsp+0x18]
  433f88:	mov    QWORD PTR [rsp],rbp
  433f8c:	nop    DWORD PTR [rax+0x0]
  433f90:	cmp    DWORD PTR [r12],0x1
  433f95:	mov    rbp,QWORD PTR [r15+0x10]
  433f99:	jle    433fb1 <strcmp@plt+0x307f9>
  433f9b:	lea    rsi,[rip+0x1c64e]        # 4505f0 <strcmp@plt+0x4ce38>
  433fa2:	mov    rdx,rbp
  433fa5:	mov    edi,0x6
  433faa:	xor    eax,eax
  433fac:	call   4306a0 <strcmp@plt+0x2cee8>
  433fb1:	mov    rax,QWORD PTR [r14]
  433fb4:	mov    rsi,rbp
  433fb7:	mov    rdi,QWORD PTR [rax]
  433fba:	call   43a470 <strcmp@plt+0x36cb8>
  433fbf:	mov    edx,0x6
  433fc4:	mov    rsi,r13
  433fc7:	mov    rdi,rax
  433fca:	call   42d820 <strcmp@plt+0x2a068>
  433fcf:	mov    r15,QWORD PTR [r15+0x8]
  433fd3:	cmp    rbx,r15
  433fd6:	jne    433f90 <strcmp@plt+0x307d8>
  433fd8:	mov    rbp,QWORD PTR [rsp]
  433fdc:	mov    rdi,rbx
  433fdf:	call   42dac0 <strcmp@plt+0x2a308>
  433fe4:	cmp    DWORD PTR [r12],0x1
  433fe9:	jg     433ff8 <strcmp@plt+0x30840>
  433feb:	mov    DWORD PTR [rsp+0x8],0x2
  433ff3:	jmp    433e26 <strcmp@plt+0x3066e>
  433ff8:	mov    rdi,rbp
  433ffb:	call   42a820 <strcmp@plt+0x27068>
  434000:	lea    rsi,[rip+0x1c611]        # 450618 <strcmp@plt+0x4ce60>
  434007:	mov    rdx,rax
  43400a:	mov    edi,0x6
  43400f:	xor    eax,eax
  434011:	call   4306a0 <strcmp@plt+0x2cee8>
  434016:	jmp    433feb <strcmp@plt+0x30833>
  434018:	mov    rdi,rbp
  43401b:	call   424890 <strcmp@plt+0x210d8>
  434020:	lea    rsi,[rip+0x1c591]        # 4505b8 <strcmp@plt+0x4ce00>
  434027:	mov    rdx,rax
  43402a:	mov    edi,0x6
  43402f:	xor    eax,eax
  434031:	call   4306a0 <strcmp@plt+0x2cee8>
  434036:	mov    rax,QWORD PTR [rsp+0x18]
  43403b:	mov    rax,QWORD PTR [rax]
  43403e:	jmp    433f68 <strcmp@plt+0x307b0>
  434043:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43404e:	xchg   ax,ax
  434050:	push   r15
  434052:	push   r14
  434054:	push   r13
  434056:	push   r12
  434058:	mov    r13,rsi
  43405b:	push   rbp
  43405c:	push   rbx
  43405d:	sub    rsp,0x18
  434061:	mov    rax,QWORD PTR [rdi+0x8]
  434065:	mov    r12,QWORD PTR [rdi+0x30]
  434069:	mov    QWORD PTR [rsp+0x8],rax
  43406e:	mov    rax,0x468e3c
  434075:	cmp    DWORD PTR [rax],0x1
  434078:	jg     434128 <strcmp@plt+0x30970>
  43407e:	lea    r14,[rsi+0x20]
  434082:	mov    rax,QWORD PTR [r12]
  434086:	mov    rdi,QWORD PTR [rax+0x8]
  43408a:	call   42e720 <strcmp@plt+0x2af68>
  43408f:	mov    r15,QWORD PTR [rax+0x8]
  434093:	mov    rbp,rax
  434096:	cmp    rax,r15
  434099:	jne    4340a9 <strcmp@plt+0x308f1>
  43409b:	jmp    4340e7 <strcmp@plt+0x3092f>
  43409d:	nop    DWORD PTR [rax]
  4340a0:	mov    r15,QWORD PTR [r15+0x8]
  4340a4:	cmp    rbp,r15
  4340a7:	je     4340e7 <strcmp@plt+0x3092f>
  4340a9:	mov    rax,QWORD PTR [r12]
  4340ad:	mov    rbx,QWORD PTR [r15+0x10]
  4340b1:	mov    rdi,QWORD PTR [rax+0x8]
  4340b5:	mov    rsi,rbx
  4340b8:	call   42e5d0 <strcmp@plt+0x2ae18>
  4340bd:	cmp    r13,rax
  4340c0:	jne    4340a0 <strcmp@plt+0x308e8>
  4340c2:	mov    rax,QWORD PTR [r12]
  4340c6:	mov    rsi,rbx
  4340c9:	mov    rdi,QWORD PTR [rax+0x8]
  4340cd:	call   42e500 <strcmp@plt+0x2ad48>
  4340d2:	mov    rdi,QWORD PTR [rsp+0x8]
  4340d7:	mov    rsi,rbx
  4340da:	call   42aba0 <strcmp@plt+0x273e8>
  4340df:	mov    rdi,rbx
  4340e2:	call   429d50 <strcmp@plt+0x26598>
  4340e7:	mov    rdi,rbp
  4340ea:	call   42dac0 <strcmp@plt+0x2a308>
  4340ef:	mov    rdi,r14
  4340f2:	call   43b3c0 <strcmp@plt+0x37c08>
  4340f7:	mov    rdx,QWORD PTR [r12]
  4340fb:	mov    rsi,rax
  4340fe:	mov    rdi,QWORD PTR [rdx]
  434101:	call   43a470 <strcmp@plt+0x36cb8>
  434106:	mov    rdi,r13
  434109:	mov    rsi,rax
  43410c:	call   42da30 <strcmp@plt+0x2a278>
  434111:	add    rsp,0x18
  434115:	mov    eax,0x1
  43411a:	pop    rbx
  43411b:	pop    rbp
  43411c:	pop    r12
  43411e:	pop    r13
  434120:	pop    r14
  434122:	pop    r15
  434124:	ret    
  434125:	nop    DWORD PTR [rax]
  434128:	mov    rdi,QWORD PTR [rsp+0x8]
  43412d:	lea    r14,[r13+0x20]
  434131:	call   424890 <strcmp@plt+0x210d8>
  434136:	mov    rdi,QWORD PTR [r13+0x10]
  43413a:	mov    rbp,rax
  43413d:	call   424890 <strcmp@plt+0x210d8>
  434142:	mov    rdi,r14
  434145:	mov    rbx,rax
  434148:	call   43b3c0 <strcmp@plt+0x37c08>
  43414d:	lea    rsi,[rip+0x1c534]        # 450688 <strcmp@plt+0x4ced0>
  434154:	mov    rdx,rax
  434157:	mov    r8,rbp
  43415a:	mov    rcx,rbx
  43415d:	mov    edi,0x6
  434162:	xor    eax,eax
  434164:	call   4306a0 <strcmp@plt+0x2cee8>
  434169:	jmp    434082 <strcmp@plt+0x308ca>
  43416e:	xchg   ax,ax
  434170:	push   r14
  434172:	push   r13
  434174:	mov    r14,rsi
  434177:	push   r12
  434179:	push   rbp
  43417a:	mov    r13,rdx
  43417d:	push   rbx
  43417e:	mov    rbx,QWORD PTR [rdi+0x30]
  434182:	mov    rdi,rsi
  434185:	call   43b3c0 <strcmp@plt+0x37c08>
  43418a:	mov    rdx,QWORD PTR [rbx]
  43418d:	mov    rsi,rax
  434190:	mov    rdi,QWORD PTR [rdx]
  434193:	call   43a470 <strcmp@plt+0x36cb8>
  434198:	test   rax,rax
  43419b:	je     4341e0 <strcmp@plt+0x30a28>
  43419d:	mov    rbx,QWORD PTR [rax+0x8]
  4341a1:	mov    r12,rax
  4341a4:	cmp    rax,rbx
  4341a7:	jne    4341b9 <strcmp@plt+0x30a01>
  4341a9:	jmp    4341e0 <strcmp@plt+0x30a28>
  4341ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4341b0:	mov    rbx,QWORD PTR [rbx+0x8]
  4341b4:	cmp    r12,rbx
  4341b7:	je     4341e0 <strcmp@plt+0x30a28>
  4341b9:	mov    rbp,QWORD PTR [rbx+0x10]
  4341bd:	mov    rsi,r13
  4341c0:	mov    rdi,QWORD PTR [rbp+0x10]
  4341c4:	call   424df0 <strcmp@plt+0x21638>
  4341c9:	test   eax,eax
  4341cb:	jne    4341b0 <strcmp@plt+0x309f8>
  4341cd:	pop    rbx
  4341ce:	mov    rax,rbp
  4341d1:	pop    rbp
  4341d2:	pop    r12
  4341d4:	pop    r13
  4341d6:	pop    r14
  4341d8:	ret    
  4341d9:	nop    DWORD PTR [rax+0x0]
  4341e0:	mov    rax,0x468e3c
  4341e7:	cmp    DWORD PTR [rax],0x1
  4341ea:	jg     434200 <strcmp@plt+0x30a48>
  4341ec:	pop    rbx
  4341ed:	xor    eax,eax
  4341ef:	pop    rbp
  4341f0:	pop    r12
  4341f2:	pop    r13
  4341f4:	pop    r14
  4341f6:	ret    
  4341f7:	nop    WORD PTR [rax+rax*1+0x0]
  434200:	mov    rdi,r14
  434203:	call   43b3c0 <strcmp@plt+0x37c08>
  434208:	mov    rdi,r13
  43420b:	mov    rbx,rax
  43420e:	call   424890 <strcmp@plt+0x210d8>
  434213:	lea    rsi,[rip+0x1c4ce]        # 4506e8 <strcmp@plt+0x4cf30>
  43421a:	mov    rdx,rax
  43421d:	mov    rcx,rbx
  434220:	mov    edi,0x6
  434225:	xor    eax,eax
  434227:	call   4306a0 <strcmp@plt+0x2cee8>
  43422c:	jmp    4341ec <strcmp@plt+0x30a34>
  43422e:	xchg   ax,ax
  434230:	mov    rax,QWORD PTR [rdi]
  434233:	ret    
  434234:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43423f:	nop
  434240:	mov    QWORD PTR [rdi],rsi
  434243:	ret    
  434244:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43424f:	nop
  434250:	mov    rax,QWORD PTR [rdi+0x8]
  434254:	ret    
  434255:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  434260:	push   rbx
  434261:	mov    rbx,rdi
  434264:	sub    rsp,0x10
  434268:	test   rdx,rdx
  43426b:	mov    QWORD PTR [rdi+0x8],rsi
  43426f:	je     434280 <strcmp@plt+0x30ac8>
  434271:	mov    QWORD PTR [rbx+0x10],rdx
  434275:	add    rsp,0x10
  434279:	pop    rbx
  43427a:	ret    
  43427b:	nop    DWORD PTR [rax+rax*1+0x0]
  434280:	mov    rax,0x468e3c
  434287:	mov    eax,DWORD PTR [rax]
  434289:	test   eax,eax
  43428b:	jle    434271 <strcmp@plt+0x30ab9>
  43428d:	lea    rsi,[rip+0x1c48c]        # 450720 <strcmp@plt+0x4cf68>
  434294:	mov    edi,0x5
  434299:	xor    eax,eax
  43429b:	mov    QWORD PTR [rsp+0x8],rdx
  4342a0:	call   4306a0 <strcmp@plt+0x2cee8>
  4342a5:	mov    rdx,QWORD PTR [rsp+0x8]
  4342aa:	jmp    434271 <strcmp@plt+0x30ab9>
  4342ac:	nop    DWORD PTR [rax+0x0]
  4342b0:	mov    rax,QWORD PTR [rdi]
  4342b3:	ret    
  4342b4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4342bf:	nop
  4342c0:	mov    edi,0x20
  4342c5:	jmp    434790 <strcmp@plt+0x30fd8>
  4342ca:	nop    WORD PTR [rax+rax*1+0x0]
  4342d0:	push   r12
  4342d2:	push   rbp
  4342d3:	mov    rbp,rdi
  4342d6:	push   rbx
  4342d7:	mov    edi,0x20
  4342dc:	call   434790 <strcmp@plt+0x30fd8>
  4342e1:	test   rax,rax
  4342e4:	mov    rbx,rax
  4342e7:	je     434330 <strcmp@plt+0x30b78>
  4342e9:	mov    QWORD PTR [rax],rbp
  4342ec:	mov    edi,0x10
  4342f1:	call   4347a0 <strcmp@plt+0x30fe8>
  4342f6:	test   rax,rax
  4342f9:	mov    rbp,rax
  4342fc:	je     43431d <strcmp@plt+0x30b65>
  4342fe:	mov    r12,0x42dac0
  434305:	mov    rdi,r12
  434308:	call   4397c0 <strcmp@plt+0x36008>
  43430d:	mov    rdi,r12
  434310:	mov    QWORD PTR [rbp+0x0],rax
  434314:	call   4397c0 <strcmp@plt+0x36008>
  434319:	mov    QWORD PTR [rbp+0x8],rax
  43431d:	mov    QWORD PTR [rbx+0x18],rbp
  434321:	mov    rax,rbx
  434324:	pop    rbx
  434325:	pop    rbp
  434326:	pop    r12
  434328:	ret    
  434329:	nop    DWORD PTR [rax+0x0]
  434330:	mov    rax,0x468e3c
  434337:	mov    eax,DWORD PTR [rax]
  434339:	test   eax,eax
  43433b:	jle    434321 <strcmp@plt+0x30b69>
  43433d:	mov    rdi,rbp
  434340:	call   424890 <strcmp@plt+0x210d8>
  434345:	lea    rsi,[rip+0x1c41c]        # 450768 <strcmp@plt+0x4cfb0>
  43434c:	mov    rdx,rax
  43434f:	mov    edi,0x5
  434354:	xor    eax,eax
  434356:	call   4306a0 <strcmp@plt+0x2cee8>
  43435b:	mov    rax,rbx
  43435e:	pop    rbx
  43435f:	pop    rbp
  434360:	pop    r12
  434362:	ret    
  434363:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43436e:	xchg   ax,ax
  434370:	mov    QWORD PTR [rdi],rsi
  434373:	ret    
  434374:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43437f:	nop
  434380:	push   r15
  434382:	push   r14
  434384:	push   r13
  434386:	push   r12
  434388:	push   rbp
  434389:	push   rbx
  43438a:	sub    rsp,0x8
  43438e:	test   rdi,rdi
  434391:	je     434457 <strcmp@plt+0x30c9f>
  434397:	mov    rax,QWORD PTR [rdi]
  43439a:	mov    r15,rdi
  43439d:	mov    r13,0x474860
  4343a4:	mov    r12,0x474858
  4343ab:	mov    rdx,QWORD PTR [rax+0x28]
  4343af:	mov    r14,QWORD PTR [rdx+0x8]
  4343b3:	cmp    rdx,r14
  4343b6:	je     4343ff <strcmp@plt+0x30c47>
  4343b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4343c0:	mov    rbp,QWORD PTR [r14+0x10]
  4343c4:	mov    edx,DWORD PTR [rbp+0x18]
  4343c7:	test   edx,edx
  4343c9:	je     4343f5 <strcmp@plt+0x30c3d>
  4343cb:	mov    rbx,QWORD PTR [rbp+0x8]
  4343cf:	cmp    rbx,rbp
  4343d2:	je     4343f5 <strcmp@plt+0x30c3d>
  4343d4:	nop    DWORD PTR [rax+0x0]
  4343d8:	mov    rdi,QWORD PTR [rbx+0x10]
  4343dc:	mov    rdx,QWORD PTR [r13+0x0]
  4343e0:	mov    rsi,QWORD PTR [r12]
  4343e4:	call   43b0b0 <strcmp@plt+0x378f8>
  4343e9:	mov    rbx,QWORD PTR [rbx+0x8]
  4343ed:	cmp    rbx,rbp
  4343f0:	jne    4343d8 <strcmp@plt+0x30c20>
  4343f2:	mov    rax,QWORD PTR [r15]
  4343f5:	mov    r14,QWORD PTR [r14+0x8]
  4343f9:	cmp    QWORD PTR [rax+0x28],r14
  4343fd:	jne    4343c0 <strcmp@plt+0x30c08>
  4343ff:	mov    rdx,QWORD PTR [r13+0x0]
  434403:	mov    rsi,QWORD PTR [r12]
  434407:	mov    rdi,r15
  43440a:	call   43b0b0 <strcmp@plt+0x378f8>
  43440f:	mov    rdi,QWORD PTR [r15]
  434412:	call   42a650 <strcmp@plt+0x26e98>
  434417:	mov    rdi,QWORD PTR [r15+0x8]
  43441b:	test   rdi,rdi
  43441e:	je     434424 <strcmp@plt+0x30c6c>
  434420:	call   QWORD PTR [r15+0x10]
  434424:	mov    rbx,QWORD PTR [r15+0x18]
  434428:	mov    rdi,QWORD PTR [rbx]
  43442b:	call   43a5a0 <strcmp@plt+0x36de8>
  434430:	mov    rdi,QWORD PTR [rbx+0x8]
  434434:	call   43a5a0 <strcmp@plt+0x36de8>
  434439:	mov    rdi,rbx
  43443c:	call   4037b0 <free@plt>
  434441:	add    rsp,0x8
  434445:	mov    rdi,r15
  434448:	pop    rbx
  434449:	pop    rbp
  43444a:	pop    r12
  43444c:	pop    r13
  43444e:	pop    r14
  434450:	pop    r15
  434452:	jmp    4037b0 <free@plt>
  434457:	lea    rcx,[rip+0x1c382]        # 4507e0 <strcmp@plt+0x4d028>
  43445e:	lea    rsi,[rip+0x1c355]        # 4507ba <strcmp@plt+0x4d002>
  434465:	lea    rdi,[rip+0x1c364]        # 4507d0 <strcmp@plt+0x4d018>
  43446c:	mov    edx,0x66
  434471:	call   4032c0 <__assert_fail@plt>
  434476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434480:	cmp    esi,0x4
  434483:	jle    4344a0 <strcmp@plt+0x30ce8>
  434485:	mov    rax,0x468e3c
  43448c:	mov    eax,DWORD PTR [rax]
  43448e:	add    eax,0x4
  434491:	cmp    esi,eax
  434493:	jle    4344a0 <strcmp@plt+0x30ce8>
  434495:	repz ret 
  434497:	nop    WORD PTR [rax+rax*1+0x0]
  4344a0:	push   rbx
  4344a1:	mov    rdi,QWORD PTR [rdi]
  4344a4:	mov    ebx,esi
  4344a6:	call   42a820 <strcmp@plt+0x27068>
  4344ab:	mov    edi,ebx
  4344ad:	mov    rsi,rax
  4344b0:	xor    eax,eax
  4344b2:	pop    rbx
  4344b3:	jmp    4306a0 <strcmp@plt+0x2cee8>
  4344b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4344c0:	mov    rdi,QWORD PTR [rdi]
  4344c3:	jmp    42a820 <strcmp@plt+0x27068>
  4344c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4344d0:	push   r15
  4344d2:	push   r14
  4344d4:	push   r13
  4344d6:	push   r12
  4344d8:	mov    r12,rsi
  4344db:	push   rbp
  4344dc:	push   rbx
  4344dd:	sub    rsp,0x28
  4344e1:	mov    rax,QWORD PTR [rdi]
  4344e4:	mov    rbx,QWORD PTR [rdi+0x18]
  4344e8:	mov    QWORD PTR [rsp+0x18],rdx
  4344ed:	mov    QWORD PTR [rsp+0x8],rax
  4344f2:	mov    rax,QWORD PTR [rsi]
  4344f5:	mov    rdi,rax
  4344f8:	mov    QWORD PTR [rsp+0x10],rax
  4344fd:	call   424890 <strcmp@plt+0x210d8>
  434502:	mov    rdi,QWORD PTR [rbx]
  434505:	mov    rsi,rax
  434508:	call   43a470 <strcmp@plt+0x36cb8>
  43450d:	test   rax,rax
  434510:	je     4345b7 <strcmp@plt+0x30dff>
  434516:	mov    r15,QWORD PTR [rax+0x8]
  43451a:	mov    r13,rax
  43451d:	cmp    rax,r15
  434520:	jne    434531 <strcmp@plt+0x30d79>
  434522:	jmp    4345a2 <strcmp@plt+0x30dea>
  434524:	nop    DWORD PTR [rax+0x0]
  434528:	mov    r15,QWORD PTR [r15+0x8]
  43452c:	cmp    r13,r15
  43452f:	je     4345a2 <strcmp@plt+0x30dea>
  434531:	mov    rbp,QWORD PTR [r15+0x10]
  434535:	mov    rdi,rbp
  434538:	call   424890 <strcmp@plt+0x210d8>
  43453d:	mov    rdi,QWORD PTR [rbx+0x8]
  434541:	mov    rsi,rax
  434544:	call   43a470 <strcmp@plt+0x36cb8>
  434549:	mov    rdi,r12
  43454c:	mov    r14,rax
  43454f:	mov    rsi,rax
  434552:	call   42da30 <strcmp@plt+0x2a278>
  434557:	mov    ecx,DWORD PTR [r14+0x18]
  43455b:	test   ecx,ecx
  43455d:	jne    434528 <strcmp@plt+0x30d70>
  43455f:	mov    rdi,rbp
  434562:	call   424890 <strcmp@plt+0x210d8>
  434567:	mov    rdi,QWORD PTR [rbx+0x8]
  43456b:	mov    rsi,rax
  43456e:	call   43a2e0 <strcmp@plt+0x36b28>
  434573:	mov    r14,QWORD PTR [rsp+0x8]
  434578:	mov    rsi,rbp
  43457b:	mov    rdi,r14
  43457e:	call   42ac90 <strcmp@plt+0x274d8>
  434583:	mov    rdi,r14
  434586:	mov    rbp,rax
  434589:	mov    rsi,rax
  43458c:	call   42aba0 <strcmp@plt+0x273e8>
  434591:	mov    rdi,rbp
  434594:	call   429d50 <strcmp@plt+0x26598>
  434599:	mov    r15,QWORD PTR [r15+0x8]
  43459d:	cmp    r13,r15
  4345a0:	jne    434531 <strcmp@plt+0x30d79>
  4345a2:	mov    rdi,QWORD PTR [rsp+0x10]
  4345a7:	call   424890 <strcmp@plt+0x210d8>
  4345ac:	mov    rdi,QWORD PTR [rbx]
  4345af:	mov    rsi,rax
  4345b2:	call   43a2e0 <strcmp@plt+0x36b28>
  4345b7:	mov    rsi,0x424b80
  4345be:	mov    rdi,QWORD PTR [rsp+0x18]
  4345c3:	call   42d670 <strcmp@plt+0x29eb8>
  4345c8:	mov    rdi,QWORD PTR [rsp+0x10]
  4345cd:	mov    r13,rax
  4345d0:	call   424890 <strcmp@plt+0x210d8>
  4345d5:	mov    rdi,rax
  4345d8:	call   403730 <strdup@plt>
  4345dd:	mov    rdi,QWORD PTR [rbx]
  4345e0:	mov    rdx,r13
  4345e3:	mov    rsi,rax
  4345e6:	call   439800 <strcmp@plt+0x36048>
  4345eb:	mov    rbp,QWORD PTR [r13+0x8]
  4345ef:	cmp    r13,rbp
  4345f2:	je     43462c <strcmp@plt+0x30e74>
  4345f4:	nop    DWORD PTR [rax+0x0]
  4345f8:	mov    r15,QWORD PTR [rbp+0x10]
  4345fc:	mov    rdi,r15
  4345ff:	call   424890 <strcmp@plt+0x210d8>
  434604:	mov    rdi,QWORD PTR [rbx+0x8]
  434608:	mov    rsi,rax
  43460b:	call   43a470 <strcmp@plt+0x36cb8>
  434610:	test   rax,rax
  434613:	mov    r10,rax
  434616:	je     434640 <strcmp@plt+0x30e88>
  434618:	mov    rsi,r10
  43461b:	mov    rdi,r12
  43461e:	call   42d540 <strcmp@plt+0x29d88>
  434623:	mov    rbp,QWORD PTR [rbp+0x8]
  434627:	cmp    r13,rbp
  43462a:	jne    4345f8 <strcmp@plt+0x30e40>
  43462c:	add    rsp,0x28
  434630:	pop    rbx
  434631:	pop    rbp
  434632:	pop    r12
  434634:	pop    r13
  434636:	pop    r14
  434638:	pop    r15
  43463a:	ret    
  43463b:	nop    DWORD PTR [rax+rax*1+0x0]
  434640:	call   42d4e0 <strcmp@plt+0x29d28>
  434645:	mov    rdi,r15
  434648:	mov    QWORD PTR [rsp+0x10],rax
  43464d:	call   424890 <strcmp@plt+0x210d8>
  434652:	mov    rdi,rax
  434655:	call   403730 <strdup@plt>
  43465a:	mov    r10,QWORD PTR [rsp+0x10]
  43465f:	mov    rdi,QWORD PTR [rbx+0x8]
  434663:	mov    rsi,rax
  434666:	mov    rdx,r10
  434669:	call   439800 <strcmp@plt+0x36048>
  43466e:	push   0x0
  434670:	push   0xff
  434675:	xor    edx,edx
  434677:	mov    r9d,0x64
  43467d:	mov    r8d,0x1
  434683:	mov    ecx,0x1
  434688:	mov    esi,0x1
  43468d:	mov    rdi,r15
  434690:	call   429d90 <strcmp@plt+0x265d8>
  434695:	mov    rdi,QWORD PTR [rsp+0x18]
  43469a:	mov    rsi,rax
  43469d:	call   42acb0 <strcmp@plt+0x274f8>
  4346a2:	pop    rax
  4346a3:	pop    rdx
  4346a4:	mov    r10,QWORD PTR [rsp+0x10]
  4346a9:	jmp    434618 <strcmp@plt+0x30e60>
  4346ae:	xchg   ax,ax
  4346b0:	push   r14
  4346b2:	push   r13
  4346b4:	push   r12
  4346b6:	push   rbp
  4346b7:	push   rbx
  4346b8:	mov    rbx,rdi
  4346bb:	mov    rdi,0x424750
  4346c2:	call   42d4f0 <strcmp@plt+0x29d38>
  4346c7:	mov    r14,rax
  4346ca:	mov    rax,QWORD PTR [rbx+0x18]
  4346ce:	mov    rdi,QWORD PTR [rax+0x8]
  4346d2:	call   43a670 <strcmp@plt+0x36eb8>
  4346d7:	mov    rbx,QWORD PTR [rax+0x8]
  4346db:	mov    r13,rax
  4346de:	cmp    rax,rbx
  4346e1:	je     434715 <strcmp@plt+0x30f5d>
  4346e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4346e8:	mov    r12,QWORD PTR [rbx+0x10]
  4346ec:	xor    eax,eax
  4346ee:	call   424740 <strcmp@plt+0x20f88>
  4346f3:	mov    rbp,rax
  4346f6:	mov    rsi,rax
  4346f9:	mov    rdi,r12
  4346fc:	call   4256a0 <strcmp@plt+0x21ee8>
  434701:	mov    rsi,r14
  434704:	mov    rdi,rbp
  434707:	call   42d540 <strcmp@plt+0x29d88>
  43470c:	mov    rbx,QWORD PTR [rbx+0x8]
  434710:	cmp    r13,rbx
  434713:	jne    4346e8 <strcmp@plt+0x30f30>
  434715:	mov    rdi,r13
  434718:	call   42dac0 <strcmp@plt+0x2a308>
  43471d:	pop    rbx
  43471e:	mov    rax,r14
  434721:	pop    rbp
  434722:	pop    r12
  434724:	pop    r13
  434726:	pop    r14
  434728:	ret    
  434729:	nop    DWORD PTR [rax+0x0]
  434730:	push   rbx
  434731:	mov    rbx,rdi
  434734:	mov    rdi,rsi
  434737:	call   424890 <strcmp@plt+0x210d8>
  43473c:	mov    rdx,QWORD PTR [rbx+0x18]
  434740:	mov    rsi,rax
  434743:	pop    rbx
  434744:	mov    rdi,QWORD PTR [rdx]
  434747:	jmp    43a470 <strcmp@plt+0x36cb8>
  43474c:	nop    DWORD PTR [rax+0x0]
  434750:	sub    rsp,0x8
  434754:	test   rdi,rdi
  434757:	je     434770 <strcmp@plt+0x30fb8>
  434759:	test   rsi,rsi
  43475c:	je     434770 <strcmp@plt+0x30fb8>
  43475e:	call   4032e0 <calloc@plt>
  434763:	test   rax,rax
  434766:	je     43477c <strcmp@plt+0x30fc4>
  434768:	add    rsp,0x8
  43476c:	ret    
  43476d:	nop    DWORD PTR [rax]
  434770:	mov    edi,0x1
  434775:	call   403530 <malloc@plt>
  43477a:	jmp    434763 <strcmp@plt+0x30fab>
  43477c:	call   403b71 <strcmp@plt+0x3b9>
  434781:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43478c:	nop    DWORD PTR [rax+0x0]
  434790:	mov    rsi,rdi
  434793:	mov    edi,0x1
  434798:	jmp    434750 <strcmp@plt+0x30f98>
  43479d:	nop    DWORD PTR [rax]
  4347a0:	sub    rsp,0x8
  4347a4:	mov    eax,0x1
  4347a9:	test   rdi,rdi
  4347ac:	cmove  rdi,rax
  4347b0:	call   403530 <malloc@plt>
  4347b5:	test   rax,rax
  4347b8:	je     4347bf <strcmp@plt+0x31007>
  4347ba:	add    rsp,0x8
  4347be:	ret    
  4347bf:	call   403b71 <strcmp@plt+0x3b9>
  4347c4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4347cf:	nop
  4347d0:	sub    rsp,0x8
  4347d4:	mov    eax,0x1
  4347d9:	test   rsi,rsi
  4347dc:	cmove  rsi,rax
  4347e0:	call   403670 <realloc@plt>
  4347e5:	test   rax,rax
  4347e8:	je     4347ef <strcmp@plt+0x31037>
  4347ea:	add    rsp,0x8
  4347ee:	ret    
  4347ef:	call   403b71 <strcmp@plt+0x3b9>
  4347f4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4347ff:	nop
  434800:	push   rbp
  434801:	push   rbx
  434802:	mov    rbp,rdi
  434805:	mov    rbx,rsi
  434808:	mov    rdi,rsi
  43480b:	sub    rsp,0x8
  43480f:	call   4347a0 <strcmp@plt+0x30fe8>
  434814:	mov    rdx,rbx
  434817:	mov    rsi,rbp
  43481a:	mov    rdi,rax
  43481d:	call   403340 <memcpy@plt>
  434822:	add    rsp,0x8
  434826:	pop    rbx
  434827:	pop    rbp
  434828:	ret    
  434829:	nop    DWORD PTR [rax+0x0]
  434830:	push   rbp
  434831:	push   rbx
  434832:	mov    rbp,rdi
  434835:	lea    rdi,[rsi+0x1]
  434839:	mov    rbx,rsi
  43483c:	sub    rsp,0x8
  434840:	call   4347a0 <strcmp@plt+0x30fe8>
  434845:	mov    rdx,rbx
  434848:	mov    rsi,rbp
  43484b:	mov    rdi,rax
  43484e:	call   403340 <memcpy@plt>
  434853:	mov    BYTE PTR [rax+rbx*1],0x0
  434857:	add    rsp,0x8
  43485b:	pop    rbx
  43485c:	pop    rbp
  43485d:	ret    
  43485e:	xchg   ax,ax
  434860:	push   rbx
  434861:	mov    rbx,rdi
  434864:	call   4031d0 <strlen@plt>
  434869:	mov    rdi,rbx
  43486c:	mov    rsi,rax
  43486f:	pop    rbx
  434870:	jmp    434830 <strcmp@plt+0x31078>
  434875:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  434880:	sub    rsp,0x8
  434884:	mov    eax,DWORD PTR [rip+0x3f232]        # 473abc <strcmp@plt+0x70304>
  43488a:	lea    r10d,[rax+0x1]
  43488e:	test   eax,eax
  434890:	mov    DWORD PTR [rip+0x3f225],r10d        # 473abc <strcmp@plt+0x70304>
  434897:	je     4348ce <strcmp@plt+0x31116>
  434899:	cmp    eax,0x1
  43489c:	jne    4348c9 <strcmp@plt+0x31111>
  43489e:	mov    rax,QWORD PTR [rip+0x33723]        # 467fc8 <strcmp@plt+0x64810>
  4348a5:	mov    rcx,rdi
  4348a8:	mov    r8,rdx
  4348ab:	lea    rdx,[rip+0x1bf5e]        # 450810 <strcmp@plt+0x4d058>
  4348b2:	mov    r9,rsi
  4348b5:	mov    esi,0x1
  4348ba:	mov    rdi,QWORD PTR [rax]
  4348bd:	xor    eax,eax
  4348bf:	call   403680 <__fprintf_chk@plt>
  4348c4:	call   403260 <abort@plt>
  4348c9:	call   403260 <abort@plt>
  4348ce:	mov    r8,rsi
  4348d1:	lea    rsi,[rip+0x1bf38]        # 450810 <strcmp@plt+0x4d058>
  4348d8:	mov    rcx,rdx
  4348db:	xor    eax,eax
  4348dd:	mov    rdx,rdi
  4348e0:	mov    edi,0x1
  4348e5:	call   4306a0 <strcmp@plt+0x2cee8>
  4348ea:	call   403260 <abort@plt>
  4348ef:	nop
  4348f0:	mov    edx,edi
  4348f2:	mov    rax,rdi
  4348f5:	bswap  edx
  4348f7:	shr    rax,0x20
  4348fb:	mov    rdi,rdx
  4348fe:	bswap  eax
  434900:	shl    rdi,0x20
  434904:	mov    eax,eax
  434906:	add    rax,rdi
  434909:	ret    
  43490a:	nop    WORD PTR [rax+rax*1+0x0]
  434910:	mov    rax,QWORD PTR [rsi]
  434913:	cmp    QWORD PTR [rdi],rax
  434916:	sete   al
  434919:	movzx  eax,al
  43491c:	ret    
  43491d:	nop    DWORD PTR [rax]
  434920:	jmp    4037b0 <free@plt>
  434925:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  434930:	push   rbx
  434931:	mov    edi,0x8
  434936:	call   403530 <malloc@plt>
  43493b:	mov    esi,0x28
  434940:	mov    rbx,rax
  434943:	mov    edi,0x1
  434948:	call   4032e0 <calloc@plt>
  43494d:	mov    QWORD PTR [rbx],rax
  434950:	mov    rax,rbx
  434953:	pop    rbx
  434954:	ret    
  434955:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  434960:	push   r15
  434962:	push   r14
  434964:	mov    r15,rdx
  434967:	push   r13
  434969:	push   r12
  43496b:	mov    r14,rdi
  43496e:	push   rbp
  43496f:	push   rbx
  434970:	mov    rbx,rsi
  434973:	sub    rsp,0x38
  434977:	mov    QWORD PTR [rsp+0x20],rdi
  43497c:	mov    edi,0x8
  434981:	mov    QWORD PTR [rsp+0x10],rsi
  434986:	mov    QWORD PTR [rsp+0x18],rdx
  43498b:	call   4347a0 <strcmp@plt+0x30fe8>
  434990:	mov    rsi,QWORD PTR [r15]
  434993:	mov    QWORD PTR [rax],rbx
  434996:	mov    rdi,rax
  434999:	call   42d540 <strcmp@plt+0x29d88>
  43499e:	mov    r12,QWORD PTR [r14]
  4349a1:	mov    eax,DWORD PTR [r12+0xc]
  4349a6:	cmp    DWORD PTR [r12+0x8],eax
  4349ab:	mov    eax,DWORD PTR [r12]
  4349af:	jae    434b41 <strcmp@plt+0x31389>
  4349b5:	mov    rbp,QWORD PTR [r12+0x10]
  4349ba:	lea    ebx,[rax-0x1]
  4349bd:	mov    DWORD PTR [rsp+0x28],eax
  4349c1:	mov    QWORD PTR [rsp+0x8],r12
  4349c6:	mov    rdi,QWORD PTR [rsp+0x10]
  4349cb:	mov    rdx,rdi
  4349ce:	mov    eax,edi
  4349d0:	shr    rdx,0x21
  4349d4:	shl    eax,0xb
  4349d7:	xor    eax,edx
  4349d9:	xor    eax,edi
  4349db:	mov    esi,eax
  4349dd:	and    esi,ebx
  4349df:	mov    edx,esi
  4349e1:	lea    r10d,[rsi+rsi*1]
  4349e5:	shr    edx,0x4
  4349e8:	lea    r15,[rbp+rdx*4+0x0]
  4349ed:	and    r10d,0x1e
  4349f1:	mov    r14d,DWORD PTR [r15]
  4349f4:	shrx   r13d,r14d,r10d
  4349f9:	test   r13b,0x2
  4349fd:	jne    434b0d <strcmp@plt+0x31355>
  434a03:	mov    r9d,eax
  434a06:	shl    eax,0x3
  434a09:	mov    ecx,r13d
  434a0c:	shr    r9d,0x3
  434a10:	mov    DWORD PTR [rsp+0x20],r13d
  434a15:	mov    r11d,DWORD PTR [rsp+0x28]
  434a1a:	xor    eax,r9d
  434a1d:	mov    r13,rdi
  434a20:	or     eax,0x1
  434a23:	mov    r9d,eax
  434a26:	mov    eax,esi
  434a28:	and    r9d,ebx
  434a2b:	jmp    434a73 <strcmp@plt+0x312bb>
  434a2d:	nop    DWORD PTR [rax]
  434a30:	mov    rdi,QWORD PTR [r12+0x18]
  434a35:	mov    edx,eax
  434a37:	lea    rcx,[rdx*8+0x0]
  434a3f:	cmp    r13,QWORD PTR [rdi+rdx*8]
  434a43:	je     435003 <strcmp@plt+0x3184b>
  434a49:	add    eax,r9d
  434a4c:	and    eax,ebx
  434a4e:	cmp    esi,eax
  434a50:	je     434a84 <strcmp@plt+0x312cc>
  434a52:	mov    edx,eax
  434a54:	shr    edx,0x4
  434a57:	lea    rdi,[rbp+rdx*4+0x0]
  434a5c:	lea    edx,[rax+rax*1]
  434a5f:	mov    r8d,DWORD PTR [rdi]
  434a62:	and    edx,0x1e
  434a65:	shrx   ecx,r8d,edx
  434a6a:	test   cl,0x2
  434a6d:	jne    435061 <strcmp@plt+0x318a9>
  434a73:	and    ecx,0x1
  434a76:	je     434a30 <strcmp@plt+0x31278>
  434a78:	mov    r11d,eax
  434a7b:	add    eax,r9d
  434a7e:	and    eax,ebx
  434a80:	cmp    esi,eax
  434a82:	jne    434a52 <strcmp@plt+0x3129a>
  434a84:	cmp    r11d,DWORD PTR [rsp+0x28]
  434a89:	mov    r13d,DWORD PTR [rsp+0x20]
  434a8e:	je     4350e2 <strcmp@plt+0x3192a>
  434a94:	mov    eax,r11d
  434a97:	lea    r10d,[r11+r11*1]
  434a9b:	mov    ecx,r11d
  434a9e:	shr    eax,0x4
  434aa1:	shl    rcx,0x3
  434aa5:	lea    r15,[rbp+rax*4+0x0]
  434aaa:	and    r10d,0x1e
  434aae:	mov    r14d,DWORD PTR [r15]
  434ab1:	shrx   r13d,r14d,r10d
  434ab6:	mov    eax,r13d
  434ab9:	and    eax,0x2
  434abc:	test   eax,eax
  434abe:	jne    434b13 <strcmp@plt+0x3135b>
  434ac0:	and    r13d,0x1
  434ac4:	je     434aec <strcmp@plt+0x31334>
  434ac6:	mov    rax,QWORD PTR [r12+0x18]
  434acb:	mov    rdi,QWORD PTR [rsp+0x10]
  434ad0:	mov    QWORD PTR [rax+rcx*1],rdi
  434ad4:	mov    eax,0x3
  434ad9:	shlx   r10,rax,r10
  434ade:	andn   r14d,r10d,r14d
  434ae3:	mov    DWORD PTR [r15],r14d
  434ae6:	add    DWORD PTR [r12+0x4],0x1
  434aec:	mov    rax,QWORD PTR [rsp+0x8]
  434af1:	mov    rdi,QWORD PTR [rsp+0x18]
  434af6:	mov    rax,QWORD PTR [rax+0x20]
  434afa:	mov    QWORD PTR [rax+rcx*1],rdi
  434afe:	add    rsp,0x38
  434b02:	pop    rbx
  434b03:	pop    rbp
  434b04:	pop    r12
  434b06:	pop    r13
  434b08:	pop    r14
  434b0a:	pop    r15
  434b0c:	ret    
  434b0d:	mov    ecx,esi
  434b0f:	shl    rcx,0x3
  434b13:	mov    rax,QWORD PTR [r12+0x18]
  434b18:	mov    rdi,QWORD PTR [rsp+0x10]
  434b1d:	mov    QWORD PTR [rax+rcx*1],rdi
  434b21:	mov    eax,0x3
  434b26:	shlx   r10,rax,r10
  434b2b:	andn   r14d,r10d,r14d
  434b30:	mov    DWORD PTR [r15],r14d
  434b33:	add    DWORD PTR [r12+0x4],0x1
  434b39:	add    DWORD PTR [r12+0x8],0x1
  434b3f:	jmp    434aec <strcmp@plt+0x31334>
  434b41:	mov    edi,eax
  434b43:	mov    DWORD PTR [rsp+0x28],eax
  434b47:	mov    eax,DWORD PTR [r12+0x4]
  434b4c:	lea    edx,[rax+rax*1]
  434b4f:	cmp    edi,edx
  434b51:	jbe    434d1b <strcmp@plt+0x31563>
  434b57:	lea    ebx,[rdi-0x2]
  434b5a:	mov    edx,ebx
  434b5c:	shr    edx,1
  434b5e:	or     ebx,edx
  434b60:	mov    edx,ebx
  434b62:	shr    edx,0x2
  434b65:	or     ebx,edx
  434b67:	mov    edx,ebx
  434b69:	shr    edx,0x4
  434b6c:	or     ebx,edx
  434b6e:	mov    edx,ebx
  434b70:	shr    edx,0x8
  434b73:	or     ebx,edx
  434b75:	mov    edx,ebx
  434b77:	shr    edx,0x10
  434b7a:	or     ebx,edx
  434b7c:	lea    edx,[rbx+0x1]
  434b7f:	cmp    edx,0x3
  434b82:	jbe    434ecb <strcmp@plt+0x31713>
  434b88:	vxorpd xmm0,xmm0,xmm0
  434b8c:	mov    ecx,edx
  434b8e:	vmovsd xmm1,QWORD PTR [rip+0x17362]        # 44bef8 <strcmp@plt+0x48740>
  434b96:	vcvtsi2sd xmm0,xmm0,rcx
  434b9b:	vfmadd132sd xmm0,xmm1,QWORD PTR [rip+0x1734c]        # 44bef0 <strcmp@plt+0x48738>
  434ba4:	vcvttsd2si rcx,xmm0
  434ba9:	cmp    eax,ecx
  434bab:	mov    DWORD PTR [rsp+0x2c],ecx
  434baf:	jae    434fa6 <strcmp@plt+0x317ee>
  434bb5:	cmp    edx,0xf
  434bb8:	jbe    4350d3 <strcmp@plt+0x3191b>
  434bbe:	mov    r13d,edx
  434bc1:	mov    DWORD PTR [rsp+0x28],edx
  434bc5:	shr    r13d,0x4
  434bc9:	shl    r13,0x2
  434bcd:	mov    rdi,r13
  434bd0:	call   403530 <malloc@plt>
  434bd5:	mov    rdx,r13
  434bd8:	mov    esi,0xaa
  434bdd:	mov    rdi,rax
  434be0:	mov    rbp,rax
  434be3:	call   403250 <memset@plt>
  434be8:	mov    eax,DWORD PTR [rsp+0x28]
  434bec:	cmp    DWORD PTR [r12],eax
  434bf0:	jb     435028 <strcmp@plt+0x31870>
  434bf6:	mov    rdi,QWORD PTR [r12+0x10]
  434bfb:	mov    DWORD PTR [rsp+0x8],0x0
  434c03:	jmp    434c1b <strcmp@plt+0x31463>
  434c05:	add    DWORD PTR [rsp+0x8],0x1
  434c0a:	mov    r8d,DWORD PTR [r12]
  434c0e:	mov    eax,DWORD PTR [rsp+0x8]
  434c12:	cmp    eax,r8d
  434c15:	je     434f5a <strcmp@plt+0x317a2>
  434c1b:	mov    esi,DWORD PTR [rsp+0x8]
  434c1f:	mov    eax,esi
  434c21:	shr    eax,0x4
  434c24:	lea    rcx,[rdi+rax*4]
  434c28:	mov    eax,esi
  434c2a:	add    eax,eax
  434c2c:	mov    edx,DWORD PTR [rcx]
  434c2e:	and    eax,0x1e
  434c31:	shrx   esi,edx,eax
  434c36:	and    esi,0x3
  434c39:	jne    434c05 <strcmp@plt+0x3144d>
  434c3b:	mov    esi,DWORD PTR [rsp+0x8]
  434c3f:	mov    r15,QWORD PTR [r12+0x18]
  434c44:	mov    r14,QWORD PTR [r12+0x20]
  434c49:	mov    r11,QWORD PTR [r15+rsi*8]
  434c4d:	mov    r13,QWORD PTR [r14+rsi*8]
  434c51:	mov    esi,0x1
  434c56:	shlx   rax,rsi,rax
  434c5b:	or     eax,edx
  434c5d:	mov    DWORD PTR [rcx],eax
  434c5f:	nop
  434c60:	mov    rax,r11
  434c63:	mov    edx,r11d
  434c66:	shr    rax,0x21
  434c6a:	shl    edx,0xb
  434c6d:	xor    edx,eax
  434c6f:	xor    edx,r11d
  434c72:	mov    r8d,edx
  434c75:	mov    eax,edx
  434c77:	shl    edx,0x3
  434c7a:	shr    r8d,0x3
  434c7e:	and    eax,ebx
  434c80:	xor    edx,r8d
  434c83:	or     edx,0x1
  434c86:	mov    r8d,edx
  434c89:	and    r8d,ebx
  434c8c:	jmp    434c95 <strcmp@plt+0x314dd>
  434c8e:	xchg   ax,ax
  434c90:	add    eax,r8d
  434c93:	and    eax,ebx
  434c95:	mov    edx,eax
  434c97:	lea    ecx,[rax+rax*1]
  434c9a:	shr    edx,0x4
  434c9d:	shl    rdx,0x2
  434ca1:	and    ecx,0x1e
  434ca4:	lea    rsi,[rbp+rdx*1+0x0]
  434ca9:	mov    r9d,DWORD PTR [rsi]
  434cac:	shrx   r10d,r9d,ecx
  434cb1:	and    r10d,0x2
  434cb5:	je     434c90 <strcmp@plt+0x314d8>
  434cb7:	mov    r10d,0x2
  434cbd:	shlx   r8,r10,rcx
  434cc2:	andn   r9d,r8d,r9d
  434cc7:	mov    DWORD PTR [rsi],r9d
  434cca:	mov    r8d,DWORD PTR [r12]
  434cce:	cmp    r8d,eax
  434cd1:	jbe    434f40 <strcmp@plt+0x31788>
  434cd7:	add    rdx,rdi
  434cda:	mov    esi,DWORD PTR [rdx]
  434cdc:	shrx   r9d,esi,ecx
  434ce1:	and    r9d,0x3
  434ce5:	jne    434f40 <strcmp@plt+0x31788>
  434ceb:	shl    rax,0x3
  434cef:	lea    r9,[r15+rax*1]
  434cf3:	add    rax,r14
  434cf6:	mov    r8,QWORD PTR [r9]
  434cf9:	mov    QWORD PTR [r9],r11
  434cfc:	mov    r9,QWORD PTR [rax]
  434cff:	mov    QWORD PTR [rax],r13
  434d02:	mov    eax,0x1
  434d07:	shlx   rcx,rax,rcx
  434d0c:	or     ecx,esi
  434d0e:	mov    r11,r8
  434d11:	mov    DWORD PTR [rdx],ecx
  434d13:	mov    r13,r9
  434d16:	jmp    434c60 <strcmp@plt+0x314a8>
  434d1b:	mov    edi,DWORD PTR [rsp+0x28]
  434d1f:	mov    ebx,edi
  434d21:	shr    ebx,1
  434d23:	or     ebx,edi
  434d25:	mov    edx,ebx
  434d27:	shr    edx,0x2
  434d2a:	or     ebx,edx
  434d2c:	mov    edx,ebx
  434d2e:	shr    edx,0x4
  434d31:	or     ebx,edx
  434d33:	mov    edx,ebx
  434d35:	shr    edx,0x8
  434d38:	or     ebx,edx
  434d3a:	mov    edx,ebx
  434d3c:	shr    edx,0x10
  434d3f:	or     ebx,edx
  434d41:	lea    edx,[rbx+0x1]
  434d44:	cmp    edx,0x3
  434d47:	ja     434ef4 <strcmp@plt+0x3173c>
  434d4d:	cmp    eax,0x2
  434d50:	ja     434fb8 <strcmp@plt+0x31800>
  434d56:	mov    ebx,0x3
  434d5b:	mov    DWORD PTR [rsp+0x2c],0x3
  434d63:	mov    DWORD PTR [rsp+0x28],0x4
  434d6b:	mov    r13d,0x4
  434d71:	mov    rdi,r13
  434d74:	call   403530 <malloc@plt>
  434d79:	mov    rdx,r13
  434d7c:	mov    esi,0xaa
  434d81:	mov    rdi,rax
  434d84:	mov    rbp,rax
  434d87:	call   403250 <memset@plt>
  434d8c:	mov    eax,DWORD PTR [rsp+0x28]
  434d90:	cmp    DWORD PTR [r12],eax
  434d94:	jb     435088 <strcmp@plt+0x318d0>
  434d9a:	mov    rdi,QWORD PTR [r12+0x10]
  434d9f:	mov    DWORD PTR [rsp+0x8],0x0
  434da7:	jmp    434dbf <strcmp@plt+0x31607>
  434da9:	mov    r8d,DWORD PTR [r12]
  434dad:	add    DWORD PTR [rsp+0x8],0x1
  434db2:	mov    eax,DWORD PTR [rsp+0x8]
  434db6:	cmp    eax,r8d
  434db9:	je     434f5a <strcmp@plt+0x317a2>
  434dbf:	mov    esi,DWORD PTR [rsp+0x8]
  434dc3:	mov    eax,esi
  434dc5:	shr    eax,0x4
  434dc8:	lea    rcx,[rdi+rax*4]
  434dcc:	mov    eax,esi
  434dce:	add    eax,eax
  434dd0:	mov    edx,DWORD PTR [rcx]
  434dd2:	and    eax,0x1e
  434dd5:	shrx   esi,edx,eax
  434dda:	and    esi,0x3
  434ddd:	jne    434da9 <strcmp@plt+0x315f1>
  434ddf:	mov    esi,DWORD PTR [rsp+0x8]
  434de3:	mov    r15,QWORD PTR [r12+0x18]
  434de8:	mov    r14,QWORD PTR [r12+0x20]
  434ded:	mov    r11,QWORD PTR [r15+rsi*8]
  434df1:	mov    r13,QWORD PTR [r14+rsi*8]
  434df5:	mov    esi,0x1
  434dfa:	shlx   rax,rsi,rax
  434dff:	or     eax,edx
  434e01:	mov    DWORD PTR [rcx],eax
  434e03:	nop    DWORD PTR [rax+rax*1+0x0]
  434e08:	mov    rax,r11
  434e0b:	mov    edx,r11d
  434e0e:	shr    rax,0x21
  434e12:	shl    edx,0xb
  434e15:	xor    edx,eax
  434e17:	xor    edx,r11d
  434e1a:	mov    r8d,edx
  434e1d:	mov    eax,edx
  434e1f:	shl    edx,0x3
  434e22:	shr    r8d,0x3
  434e26:	and    eax,ebx
  434e28:	xor    edx,r8d
  434e2b:	or     edx,0x1
  434e2e:	mov    r8d,edx
  434e31:	and    r8d,ebx
  434e34:	jmp    434e45 <strcmp@plt+0x3168d>
  434e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434e40:	add    eax,r8d
  434e43:	and    eax,ebx
  434e45:	mov    edx,eax
  434e47:	lea    ecx,[rax+rax*1]
  434e4a:	shr    edx,0x4
  434e4d:	shl    rdx,0x2
  434e51:	and    ecx,0x1e
  434e54:	lea    rsi,[rbp+rdx*1+0x0]
  434e59:	mov    r9d,DWORD PTR [rsi]
  434e5c:	shrx   r10d,r9d,ecx
  434e61:	and    r10d,0x2
  434e65:	je     434e40 <strcmp@plt+0x31688>
  434e67:	mov    r10d,0x2
  434e6d:	shlx   r8,r10,rcx
  434e72:	andn   r9d,r8d,r9d
  434e77:	mov    DWORD PTR [rsi],r9d
  434e7a:	mov    r8d,DWORD PTR [r12]
  434e7e:	cmp    eax,r8d
  434e81:	jae    434f99 <strcmp@plt+0x317e1>
  434e87:	add    rdx,rdi
  434e8a:	mov    esi,DWORD PTR [rdx]
  434e8c:	shrx   r9d,esi,ecx
  434e91:	and    r9d,0x3
  434e95:	jne    434f99 <strcmp@plt+0x317e1>
  434e9b:	shl    rax,0x3
  434e9f:	lea    r9,[r15+rax*1]
  434ea3:	add    rax,r14
  434ea6:	mov    r8,QWORD PTR [r9]
  434ea9:	mov    QWORD PTR [r9],r11
  434eac:	mov    r9,QWORD PTR [rax]
  434eaf:	mov    QWORD PTR [rax],r13
  434eb2:	mov    eax,0x1
  434eb7:	shlx   rcx,rax,rcx
  434ebc:	or     ecx,esi
  434ebe:	mov    r11,r8
  434ec1:	mov    DWORD PTR [rdx],ecx
  434ec3:	mov    r13,r9
  434ec6:	jmp    434e08 <strcmp@plt+0x31650>
  434ecb:	cmp    eax,0x2
  434ece:	ja     434fb8 <strcmp@plt+0x31800>
  434ed4:	mov    ebx,0x3
  434ed9:	mov    DWORD PTR [rsp+0x2c],0x3
  434ee1:	mov    DWORD PTR [rsp+0x28],0x4
  434ee9:	mov    r13d,0x4
  434eef:	jmp    434bcd <strcmp@plt+0x31415>
  434ef4:	vxorpd xmm0,xmm0,xmm0
  434ef8:	mov    ecx,edx
  434efa:	vmovsd xmm2,QWORD PTR [rip+0x16ff6]        # 44bef8 <strcmp@plt+0x48740>
  434f02:	vcvtsi2sd xmm0,xmm0,rcx
  434f07:	vfmadd132sd xmm0,xmm2,QWORD PTR [rip+0x16fe0]        # 44bef0 <strcmp@plt+0x48738>
  434f10:	vcvttsd2si rcx,xmm0
  434f15:	cmp    eax,ecx
  434f17:	mov    DWORD PTR [rsp+0x2c],ecx
  434f1b:	jae    434fa6 <strcmp@plt+0x317ee>
  434f21:	cmp    edx,0xf
  434f24:	jbe    4350c4 <strcmp@plt+0x3190c>
  434f2a:	mov    r13d,edx
  434f2d:	mov    DWORD PTR [rsp+0x28],edx
  434f31:	shr    r13d,0x4
  434f35:	shl    r13,0x2
  434f39:	jmp    434d71 <strcmp@plt+0x315b9>
  434f3e:	xchg   ax,ax
  434f40:	add    DWORD PTR [rsp+0x8],0x1
  434f45:	mov    QWORD PTR [r15+rax*8],r11
  434f49:	mov    QWORD PTR [r14+rax*8],r13
  434f4d:	mov    eax,DWORD PTR [rsp+0x8]
  434f51:	cmp    eax,r8d
  434f54:	jne    434c1b <strcmp@plt+0x31463>
  434f5a:	mov    esi,DWORD PTR [rsp+0x28]
  434f5e:	cmp    eax,esi
  434f60:	ja     434fce <strcmp@plt+0x31816>
  434f62:	call   4037b0 <free@plt>
  434f67:	mov    eax,DWORD PTR [rsp+0x28]
  434f6b:	mov    QWORD PTR [r12+0x10],rbp
  434f70:	mov    DWORD PTR [r12],eax
  434f74:	mov    eax,DWORD PTR [r12+0x4]
  434f79:	mov    DWORD PTR [r12+0x8],eax
  434f7e:	mov    eax,DWORD PTR [rsp+0x2c]
  434f82:	mov    DWORD PTR [r12+0xc],eax
  434f87:	mov    rax,QWORD PTR [rsp+0x20]
  434f8c:	mov    rax,QWORD PTR [rax]
  434f8f:	mov    QWORD PTR [rsp+0x8],rax
  434f94:	jmp    4349c6 <strcmp@plt+0x3120e>
  434f99:	mov    QWORD PTR [r15+rax*8],r11
  434f9d:	mov    QWORD PTR [r14+rax*8],r13
  434fa1:	jmp    434dad <strcmp@plt+0x315f5>
  434fa6:	mov    rbp,QWORD PTR [r12+0x10]
  434fab:	lea    ebx,[rdi-0x1]
  434fae:	mov    QWORD PTR [rsp+0x8],r12
  434fb3:	jmp    4349c6 <strcmp@plt+0x3120e>
  434fb8:	mov    eax,DWORD PTR [rsp+0x28]
  434fbc:	mov    rbp,QWORD PTR [r12+0x10]
  434fc1:	mov    QWORD PTR [rsp+0x8],r12
  434fc6:	lea    ebx,[rax-0x1]
  434fc9:	jmp    4349c6 <strcmp@plt+0x3120e>
  434fce:	mov    r13d,esi
  434fd1:	mov    rdi,QWORD PTR [r12+0x18]
  434fd6:	shl    r13,0x3
  434fda:	mov    rsi,r13
  434fdd:	call   403670 <realloc@plt>
  434fe2:	mov    rdi,QWORD PTR [r12+0x20]
  434fe7:	mov    QWORD PTR [r12+0x18],rax
  434fec:	mov    rsi,r13
  434fef:	call   403670 <realloc@plt>
  434ff4:	mov    QWORD PTR [r12+0x20],rax
  434ff9:	mov    rdi,QWORD PTR [r12+0x10]
  434ffe:	jmp    434f62 <strcmp@plt+0x317aa>
  435003:	mov    edx,eax
  435005:	add    eax,eax
  435007:	shr    edx,0x4
  43500a:	and    eax,0x1e
  43500d:	lea    r15,[rbp+rdx*4+0x0]
  435012:	mov    r10d,eax
  435015:	mov    r14d,DWORD PTR [r15]
  435018:	shrx   r13d,r14d,eax
  43501d:	mov    eax,r13d
  435020:	and    eax,0x2
  435023:	jmp    434abc <strcmp@plt+0x31304>
  435028:	mov    r13d,eax
  43502b:	mov    rdi,QWORD PTR [r12+0x18]
  435030:	shl    r13,0x3
  435034:	mov    rsi,r13
  435037:	call   403670 <realloc@plt>
  43503c:	mov    rdi,QWORD PTR [r12+0x20]
  435041:	mov    QWORD PTR [r12+0x18],rax
  435046:	mov    rsi,r13
  435049:	call   403670 <realloc@plt>
  43504e:	mov    edx,DWORD PTR [r12]
  435052:	mov    QWORD PTR [r12+0x20],rax
  435057:	test   edx,edx
  435059:	jne    434bf6 <strcmp@plt+0x3143e>
  43505f:	jmp    434ff9 <strcmp@plt+0x31841>
  435061:	cmp    r11d,DWORD PTR [rsp+0x28]
  435066:	jne    434a94 <strcmp@plt+0x312dc>
  43506c:	lea    rcx,[rax*8+0x0]
  435074:	mov    r10d,edx
  435077:	mov    r14d,r8d
  43507a:	mov    r15,rdi
  43507d:	jmp    434b13 <strcmp@plt+0x3135b>
  435082:	nop    WORD PTR [rax+rax*1+0x0]
  435088:	mov    r13d,eax
  43508b:	mov    rdi,QWORD PTR [r12+0x18]
  435090:	shl    r13,0x3
  435094:	mov    rsi,r13
  435097:	call   403670 <realloc@plt>
  43509c:	mov    rdi,QWORD PTR [r12+0x20]
  4350a1:	mov    QWORD PTR [r12+0x18],rax
  4350a6:	mov    rsi,r13
  4350a9:	call   403670 <realloc@plt>
  4350ae:	mov    QWORD PTR [r12+0x20],rax
  4350b3:	mov    eax,DWORD PTR [r12]
  4350b7:	test   eax,eax
  4350b9:	jne    434d9a <strcmp@plt+0x315e2>
  4350bf:	jmp    434ff9 <strcmp@plt+0x31841>
  4350c4:	mov    DWORD PTR [rsp+0x28],edx
  4350c8:	mov    r13d,0x4
  4350ce:	jmp    434d71 <strcmp@plt+0x315b9>
  4350d3:	mov    DWORD PTR [rsp+0x28],edx
  4350d7:	mov    r13d,0x4
  4350dd:	jmp    434bcd <strcmp@plt+0x31415>
  4350e2:	mov    ecx,esi
  4350e4:	shl    rcx,0x3
  4350e8:	jmp    434ac0 <strcmp@plt+0x31308>
  4350ed:	nop    DWORD PTR [rax]
  4350f0:	push   r14
  4350f2:	push   r13
  4350f4:	xor    r14d,r14d
  4350f7:	push   r12
  4350f9:	push   rbp
  4350fa:	push   rbx
  4350fb:	sub    rsp,0x10
  4350ff:	mov    r9,QWORD PTR [rdi]
  435102:	mov    QWORD PTR [rsp+0x8],rsi
  435107:	mov    r11d,DWORD PTR [r9]
  43510a:	test   r11d,r11d
  43510d:	je     4351de <strcmp@plt+0x31a26>
  435113:	mov    rdx,rsi
  435116:	mov    eax,esi
  435118:	lea    ecx,[r11-0x1]
  43511c:	shr    rdx,0x21
  435120:	shl    eax,0xb
  435123:	mov    r10,rsi
  435126:	xor    eax,edx
  435128:	mov    r8,QWORD PTR [r9+0x10]
  43512c:	xor    eax,esi
  43512e:	mov    esi,ecx
  435130:	mov    edx,eax
  435132:	and    esi,eax
  435134:	shl    eax,0x3
  435137:	shr    edx,0x3
  43513a:	mov    ebx,esi
  43513c:	xor    eax,edx
  43513e:	or     eax,0x1
  435141:	mov    edx,eax
  435143:	and    edx,ecx
  435145:	jmp    43516d <strcmp@plt+0x319b5>
  435147:	nop    WORD PTR [rax+rax*1+0x0]
  435150:	test   al,0x1
  435152:	jne    435161 <strcmp@plt+0x319a9>
  435154:	mov    r14,QWORD PTR [r9+0x18]
  435158:	mov    r13d,ebx
  43515b:	cmp    r10,QWORD PTR [r14+r13*8]
  43515f:	je     43518d <strcmp@plt+0x319d5>
  435161:	add    ebx,edx
  435163:	and    ebx,ecx
  435165:	cmp    esi,ebx
  435167:	je     4351f0 <strcmp@plt+0x31a38>
  43516d:	mov    eax,ebx
  43516f:	lea    ebp,[rbx+rbx*1]
  435172:	shr    eax,0x4
  435175:	lea    r12,[rax*4+0x0]
  43517d:	mov    eax,DWORD PTR [r8+rax*4]
  435181:	and    ebp,0x1e
  435184:	shrx   eax,eax,ebp
  435189:	test   al,0x2
  43518b:	je     435150 <strcmp@plt+0x31998>
  43518d:	test   al,0x3
  43518f:	jne    4351f0 <strcmp@plt+0x31a38>
  435191:	cmp    r11d,ebx
  435194:	je     4351f0 <strcmp@plt+0x31a38>
  435196:	mov    rax,QWORD PTR [r9+0x20]
  43519a:	mov    edx,ebx
  43519c:	mov    r13,rdi
  43519f:	lea    rdi,[rsp+0x8]
  4351a4:	mov    r14,QWORD PTR [rax+rdx*8]
  4351a8:	mov    rsi,QWORD PTR [r14]
  4351ab:	call   42d9a0 <strcmp@plt+0x2a1e8>
  4351b0:	mov    rax,QWORD PTR [r13+0x0]
  4351b4:	cmp    ebx,DWORD PTR [rax]
  4351b6:	je     4351de <strcmp@plt+0x31a26>
  4351b8:	add    r12,QWORD PTR [rax+0x10]
  4351bc:	mov    edx,DWORD PTR [r12]
  4351c0:	shrx   ecx,edx,ebp
  4351c5:	and    ecx,0x3
  4351c8:	jne    4351de <strcmp@plt+0x31a26>
  4351ca:	mov    ecx,0x1
  4351cf:	shlx   rbp,rcx,rbp
  4351d4:	or     edx,ebp
  4351d6:	mov    DWORD PTR [r12],edx
  4351da:	sub    DWORD PTR [rax+0x4],0x1
  4351de:	add    rsp,0x10
  4351e2:	mov    rax,r14
  4351e5:	pop    rbx
  4351e6:	pop    rbp
  4351e7:	pop    r12
  4351e9:	pop    r13
  4351eb:	pop    r14
  4351ed:	ret    
  4351ee:	xchg   ax,ax
  4351f0:	add    rsp,0x10
  4351f4:	xor    r14d,r14d
  4351f7:	pop    rbx
  4351f8:	mov    rax,r14
  4351fb:	pop    rbp
  4351fc:	pop    r12
  4351fe:	pop    r13
  435200:	pop    r14
  435202:	ret    
  435203:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43520e:	xchg   ax,ax
  435210:	push   rbp
  435211:	push   rbx
  435212:	xor    eax,eax
  435214:	mov    rbx,QWORD PTR [rdi]
  435217:	mov    ebp,DWORD PTR [rbx]
  435219:	test   ebp,ebp
  43521b:	je     4352a8 <strcmp@plt+0x31af0>
  435221:	mov    rdx,rsi
  435224:	mov    eax,esi
  435226:	lea    r9d,[rbp-0x1]
  43522a:	shr    rdx,0x21
  43522e:	shl    eax,0xb
  435231:	mov    r11,QWORD PTR [rbx+0x10]
  435235:	xor    eax,edx
  435237:	mov    r10d,r9d
  43523a:	xor    eax,esi
  43523c:	mov    r8d,eax
  43523f:	and    r10d,eax
  435242:	shl    eax,0x3
  435245:	shr    r8d,0x3
  435249:	xor    eax,r8d
  43524c:	or     eax,0x1
  43524f:	mov    r8d,eax
  435252:	mov    eax,r10d
  435255:	and    r8d,r9d
  435258:	jmp    43527c <strcmp@plt+0x31ac4>
  43525a:	nop    WORD PTR [rax+rax*1+0x0]
  435260:	test   dl,0x1
  435263:	jne    435271 <strcmp@plt+0x31ab9>
  435265:	mov    rdi,QWORD PTR [rbx+0x18]
  435269:	mov    ecx,eax
  43526b:	cmp    rsi,QWORD PTR [rdi+rcx*8]
  43526f:	je     435297 <strcmp@plt+0x31adf>
  435271:	add    eax,r8d
  435274:	and    eax,r9d
  435277:	cmp    r10d,eax
  43527a:	je     4352b0 <strcmp@plt+0x31af8>
  43527c:	lea    edx,[rax+rax*1]
  43527f:	mov    edi,eax
  435281:	shr    edi,0x4
  435284:	mov    ecx,edx
  435286:	mov    edx,DWORD PTR [r11+rdi*4]
  43528a:	and    ecx,0x1e
  43528d:	shrx   edx,edx,ecx
  435292:	test   dl,0x2
  435295:	je     435260 <strcmp@plt+0x31aa8>
  435297:	and    edx,0x3
  43529a:	jne    4352b0 <strcmp@plt+0x31af8>
  43529c:	cmp    ebp,eax
  43529e:	je     4352b0 <strcmp@plt+0x31af8>
  4352a0:	mov    rdx,QWORD PTR [rbx+0x20]
  4352a4:	mov    rax,QWORD PTR [rdx+rax*8]
  4352a8:	pop    rbx
  4352a9:	pop    rbp
  4352aa:	ret    
  4352ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4352b0:	xor    eax,eax
  4352b2:	pop    rbx
  4352b3:	pop    rbp
  4352b4:	ret    
  4352b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4352c0:	push   r15
  4352c2:	push   r14
  4352c4:	mov    rax,rdi
  4352c7:	push   r13
  4352c9:	push   r12
  4352cb:	push   rbp
  4352cc:	push   rbx
  4352cd:	sub    rsp,0x18
  4352d1:	mov    r14,QWORD PTR [rsi]
  4352d4:	mov    rdi,QWORD PTR [r14+0x8]
  4352d8:	cmp    r14,rdi
  4352db:	je     4353d6 <strcmp@plt+0x31c1e>
  4352e1:	mov    r10,QWORD PTR [rax]
  4352e4:	mov    QWORD PTR [rsp+0x8],rax
  4352e9:	nop    DWORD PTR [rax+0x0]
  4352f0:	mov    r15d,DWORD PTR [r10]
  4352f3:	mov    r13,QWORD PTR [rdi+0x8]
  4352f7:	test   r15d,r15d
  4352fa:	je     4353ca <strcmp@plt+0x31c12>
  435300:	mov    rax,QWORD PTR [rdi+0x10]
  435304:	lea    esi,[r15-0x1]
  435308:	mov    r9,QWORD PTR [r10+0x10]
  43530c:	mov    QWORD PTR [rsp],rdi
  435310:	mov    r8d,esi
  435313:	mov    r11,QWORD PTR [rax]
  435316:	mov    rdx,r11
  435319:	mov    eax,r11d
  43531c:	shr    rdx,0x21
  435320:	shl    eax,0xb
  435323:	xor    eax,edx
  435325:	xor    eax,r11d
  435328:	mov    ecx,eax
  43532a:	and    r8d,eax
  43532d:	shl    eax,0x3
  435330:	shr    ecx,0x3
  435333:	mov    ebx,r8d
  435336:	xor    eax,ecx
  435338:	or     eax,0x1
  43533b:	mov    ecx,eax
  43533d:	and    ecx,esi
  43533f:	jmp    435361 <strcmp@plt+0x31ba9>
  435341:	nop    DWORD PTR [rax+0x0]
  435348:	test   al,0x1
  43534a:	jne    435358 <strcmp@plt+0x31ba0>
  43534c:	mov    rdi,QWORD PTR [r10+0x18]
  435350:	mov    edx,ebx
  435352:	cmp    r11,QWORD PTR [rdi+rdx*8]
  435356:	je     435381 <strcmp@plt+0x31bc9>
  435358:	add    ebx,ecx
  43535a:	and    ebx,esi
  43535c:	cmp    r8d,ebx
  43535f:	je     4353ca <strcmp@plt+0x31c12>
  435361:	mov    eax,ebx
  435363:	lea    ebp,[rbx+rbx*1]
  435366:	shr    eax,0x4
  435369:	lea    r12,[rax*4+0x0]
  435371:	mov    eax,DWORD PTR [r9+rax*4]
  435375:	and    ebp,0x1e
  435378:	shrx   eax,eax,ebp
  43537d:	test   al,0x2
  43537f:	je     435348 <strcmp@plt+0x31b90>
  435381:	test   al,0x3
  435383:	mov    rdi,QWORD PTR [rsp]
  435387:	jne    4353ca <strcmp@plt+0x31c12>
  435389:	cmp    r15d,ebx
  43538c:	je     4353ca <strcmp@plt+0x31c12>
  43538e:	mov    rsi,r14
  435391:	call   42d950 <strcmp@plt+0x2a198>
  435396:	mov    rax,QWORD PTR [rsp+0x8]
  43539b:	mov    r10,QWORD PTR [rax]
  43539e:	cmp    ebx,DWORD PTR [r10]
  4353a1:	je     4353ca <strcmp@plt+0x31c12>
  4353a3:	add    r12,QWORD PTR [r10+0x10]
  4353a7:	mov    eax,DWORD PTR [r12]
  4353ab:	shrx   edx,eax,ebp
  4353b0:	and    edx,0x3
  4353b3:	jne    4353ca <strcmp@plt+0x31c12>
  4353b5:	mov    esi,0x1
  4353ba:	shlx   rbp,rsi,rbp
  4353bf:	or     ebp,eax
  4353c1:	mov    DWORD PTR [r12],ebp
  4353c5:	sub    DWORD PTR [r10+0x4],0x1
  4353ca:	cmp    r14,r13
  4353cd:	mov    rdi,r13
  4353d0:	jne    4352f0 <strcmp@plt+0x31b38>
  4353d6:	add    rsp,0x18
  4353da:	pop    rbx
  4353db:	pop    rbp
  4353dc:	pop    r12
  4353de:	pop    r13
  4353e0:	pop    r14
  4353e2:	pop    r15
  4353e4:	ret    
  4353e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4353f0:	push   rbx
  4353f1:	mov    ebx,edi
  4353f3:	mov    edi,0x1
  4353f8:	sub    rsp,0x20
  4353fc:	mov    rsi,rsp
  4353ff:	mov    rax,QWORD PTR fs:0x28
  435408:	mov    QWORD PTR [rsp+0x18],rax
  43540d:	xor    eax,eax
  43540f:	call   403370 <clock_gettime@plt>
  435414:	mov    rcx,QWORD PTR [rsp+0x8]
  435419:	mov    eax,ecx
  43541b:	or     ebx,ecx
  43541d:	bswap  eax
  43541f:	mov    edx,eax
  435421:	xor    edx,DWORD PTR [rsp]
  435424:	mov    rax,rdx
  435427:	shl    rax,0x20
  43542b:	or     rax,rbx
  43542e:	mov    rdi,QWORD PTR [rsp+0x18]
  435433:	xor    rdi,QWORD PTR fs:0x28
  43543c:	jne    435444 <strcmp@plt+0x31c8c>
  43543e:	add    rsp,0x20
  435442:	pop    rbx
  435443:	ret    
  435444:	call   403460 <__stack_chk_fail@plt>
  435449:	nop    DWORD PTR [rax+0x0]
  435450:	sub    rsp,0x8
  435454:	xor    edi,edi
  435456:	call   403380 <time@plt>
  43545b:	add    rsp,0x8
  43545f:	mov    edi,eax
  435461:	jmp    4353f0 <strcmp@plt+0x31c38>
  435466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435470:	mov    rax,QWORD PTR [rdi]
  435473:	ret    
  435474:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43547f:	nop
  435480:	mov    rax,QWORD PTR [rdi+0x8]
  435484:	ret    
  435485:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  435490:	push   rbp
  435491:	push   rbx
  435492:	mov    rbp,rdi
  435495:	mov    edi,0x10
  43549a:	sub    rsp,0x8
  43549e:	call   434790 <strcmp@plt+0x30fd8>
  4354a3:	test   rax,rax
  4354a6:	mov    rbx,rax
  4354a9:	je     4354c5 <strcmp@plt+0x31d0d>
  4354ab:	mov    rsi,0x434920
  4354b2:	mov    rdi,0x434910
  4354b9:	mov    QWORD PTR [rax+0x8],rbp
  4354bd:	call   42d4b0 <strcmp@plt+0x29cf8>
  4354c2:	mov    QWORD PTR [rbx],rax
  4354c5:	add    rsp,0x8
  4354c9:	mov    rax,rbx
  4354cc:	pop    rbx
  4354cd:	pop    rbp
  4354ce:	ret    
  4354cf:	nop
  4354d0:	push   rbx
  4354d1:	mov    rbx,rdi
  4354d4:	mov    rdi,QWORD PTR [rdi]
  4354d7:	call   42dac0 <strcmp@plt+0x2a308>
  4354dc:	mov    rdi,rbx
  4354df:	pop    rbx
  4354e0:	jmp    4037b0 <free@plt>
  4354e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4354f0:	test   rdi,rdi
  4354f3:	je     435590 <strcmp@plt+0x31dd8>
  4354f9:	push   r12
  4354fb:	push   rbp
  4354fc:	mov    rbp,rdi
  4354ff:	push   rbx
  435500:	mov    r12,QWORD PTR [rdi]
  435503:	mov    eax,DWORD PTR [r12]
  435507:	test   eax,eax
  435509:	je     435554 <strcmp@plt+0x31d9c>
  43550b:	xor    ebx,ebx
  43550d:	jmp    435519 <strcmp@plt+0x31d61>
  43550f:	nop
  435510:	add    ebx,0x1
  435513:	cmp    DWORD PTR [r12],ebx
  435517:	je     435554 <strcmp@plt+0x31d9c>
  435519:	mov    rsi,QWORD PTR [r12+0x10]
  43551e:	lea    eax,[rbx+rbx*1]
  435521:	mov    ecx,ebx
  435523:	shr    ecx,0x4
  435526:	and    eax,0x1e
  435529:	mov    edx,eax
  43552b:	mov    eax,DWORD PTR [rsi+rcx*4]
  43552e:	shrx   eax,eax,edx
  435533:	test   al,0x3
  435535:	jne    435510 <strcmp@plt+0x31d58>
  435537:	mov    rdx,QWORD PTR [r12+0x20]
  43553c:	mov    eax,ebx
  43553e:	add    ebx,0x1
  435541:	mov    rdi,QWORD PTR [rdx+rax*8]
  435545:	call   4354d0 <strcmp@plt+0x31d18>
  43554a:	mov    r12,QWORD PTR [rbp+0x0]
  43554e:	cmp    DWORD PTR [r12],ebx
  435552:	jne    435519 <strcmp@plt+0x31d61>
  435554:	mov    rdi,QWORD PTR [r12+0x18]
  435559:	call   4037b0 <free@plt>
  43555e:	mov    rdi,QWORD PTR [r12+0x10]
  435563:	call   4037b0 <free@plt>
  435568:	mov    rdi,QWORD PTR [r12+0x20]
  43556d:	call   4037b0 <free@plt>
  435572:	mov    rdi,r12
  435575:	call   4037b0 <free@plt>
  43557a:	pop    rbx
  43557b:	mov    rdi,rbp
  43557e:	pop    rbp
  43557f:	pop    r12
  435581:	jmp    4037b0 <free@plt>
  435586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435590:	repz ret 
  435592:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43559d:	nop    DWORD PTR [rax]
  4355a0:	mov    rax,QWORD PTR [rdi]
  4355a3:	mov    eax,DWORD PTR [rax+0x18]
  4355a6:	ret    
  4355a7:	nop    WORD PTR [rax+rax*1+0x0]
  4355b0:	lea    r8d,[rdx+rsi*4-0x21524111]
  4355b8:	cmp    rsi,0x3
  4355bc:	mov    eax,r8d
  4355bf:	mov    edx,r8d
  4355c2:	jbe    435636 <strcmp@plt+0x31e7e>
  4355c4:	nop    DWORD PTR [rax+0x0]
  4355c8:	add    eax,DWORD PTR [rdi+0x8]
  4355cb:	mov    ecx,DWORD PTR [rdi]
  4355cd:	sub    rsi,0x3
  4355d1:	add    edx,DWORD PTR [rdi+0x4]
  4355d4:	add    rdi,0xc
  4355d8:	sub    ecx,eax
  4355da:	add    ecx,r8d
  4355dd:	rorx   r8d,eax,0x1c
  4355e3:	add    eax,edx
  4355e5:	xor    r8d,ecx
  4355e8:	sub    edx,r8d
  4355eb:	rorx   ecx,r8d,0x1a
  4355f1:	add    r8d,eax
  4355f4:	xor    edx,ecx
  4355f6:	sub    eax,edx
  4355f8:	rorx   ecx,edx,0x18
  4355fe:	add    edx,r8d
  435601:	xor    eax,ecx
  435603:	sub    r8d,eax
  435606:	rorx   ecx,eax,0x10
  43560c:	add    eax,edx
  43560e:	xor    r8d,ecx
  435611:	mov    ecx,edx
  435613:	sub    ecx,r8d
  435616:	rorx   edx,r8d,0xd
  43561c:	add    r8d,eax
  43561f:	xor    edx,ecx
  435621:	sub    eax,edx
  435623:	mov    ecx,eax
  435625:	rorx   eax,edx,0x1c
  43562b:	add    edx,r8d
  43562e:	xor    eax,ecx
  435630:	cmp    rsi,0x3
  435634:	ja     4355c8 <strcmp@plt+0x31e10>
  435636:	cmp    rsi,0x2
  43563a:	je     435653 <strcmp@plt+0x31e9b>
  43563c:	cmp    rsi,0x3
  435640:	je     435650 <strcmp@plt+0x31e98>
  435642:	cmp    rsi,0x1
  435646:	je     435656 <strcmp@plt+0x31e9e>
  435648:	repz ret 
  43564a:	nop    WORD PTR [rax+rax*1+0x0]
  435650:	add    eax,DWORD PTR [rdi+0x8]
  435653:	add    edx,DWORD PTR [rdi+0x4]
  435656:	add    r8d,DWORD PTR [rdi]
  435659:	xor    eax,edx
  43565b:	rorx   ecx,edx,0x12
  435661:	sub    eax,ecx
  435663:	rorx   ecx,eax,0x15
  435669:	xor    r8d,eax
  43566c:	sub    r8d,ecx
  43566f:	xor    edx,r8d
  435672:	rorx   ecx,r8d,0x7
  435678:	sub    edx,ecx
  43567a:	xor    eax,edx
  43567c:	rorx   ecx,edx,0x10
  435682:	sub    eax,ecx
  435684:	xor    r8d,eax
  435687:	rorx   ecx,eax,0x1c
  43568d:	sub    r8d,ecx
  435690:	xor    edx,r8d
  435693:	rorx   r8d,r8d,0x12
  435699:	sub    edx,r8d
  43569c:	xor    eax,edx
  43569e:	rorx   edx,edx,0x8
  4356a4:	sub    eax,edx
  4356a6:	ret    
  4356a7:	nop    WORD PTR [rax+rax*1+0x0]
  4356b0:	mov    edx,DWORD PTR [rdi+0x14]
  4356b3:	cmp    edx,0xd
  4356b6:	jbe    4356d0 <strcmp@plt+0x31f18>
  4356b8:	mov    rax,QWORD PTR [rdi+0x38]
  4356bc:	sub    edx,0xe
  4356bf:	mov    DWORD PTR [rdi+0x14],edx
  4356c2:	lea    rcx,[rax+0xe]
  4356c6:	mov    QWORD PTR [rdi+0x38],rcx
  4356ca:	ret    
  4356cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4356d0:	xor    eax,eax
  4356d2:	ret    
  4356d3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4356de:	xchg   ax,ax
  4356e0:	mov    edx,DWORD PTR [rdi+0x14]
  4356e3:	cmp    edx,0x13
  4356e6:	jbe    435700 <strcmp@plt+0x31f48>
  4356e8:	mov    rax,QWORD PTR [rdi+0x38]
  4356ec:	sub    edx,0x14
  4356ef:	mov    DWORD PTR [rdi+0x14],edx
  4356f2:	lea    rcx,[rax+0x14]
  4356f6:	mov    QWORD PTR [rdi+0x38],rcx
  4356fa:	ret    
  4356fb:	nop    DWORD PTR [rax+rax*1+0x0]
  435700:	xor    eax,eax
  435702:	ret    
  435703:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43570e:	xchg   ax,ax
  435710:	mov    edx,DWORD PTR [rdi+0x14]
  435713:	cmp    edx,0x27
  435716:	jbe    435730 <strcmp@plt+0x31f78>
  435718:	mov    rax,QWORD PTR [rdi+0x38]
  43571c:	sub    edx,0x28
  43571f:	mov    DWORD PTR [rdi+0x14],edx
  435722:	lea    rcx,[rax+0x28]
  435726:	mov    QWORD PTR [rdi+0x38],rcx
  43572a:	ret    
  43572b:	nop    DWORD PTR [rax+rax*1+0x0]
  435730:	xor    eax,eax
  435732:	ret    
  435733:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43573e:	xchg   ax,ax
  435740:	push   rbx
  435741:	mov    rax,QWORD PTR [rdi+0x38]
  435745:	mov    rbx,rdi
  435748:	movzx  edi,BYTE PTR [rax]
  43574b:	shr    dil,0x4
  43574f:	movzx  edi,dil
  435753:	call   4263e0 <strcmp@plt+0x22c28>
  435758:	test   eax,eax
  43575a:	jle    435780 <strcmp@plt+0x31fc8>
  43575c:	mov    ecx,DWORD PTR [rbx+0x14]
  43575f:	mov    edx,eax
  435761:	cmp    eax,ecx
  435763:	ja     435780 <strcmp@plt+0x31fc8>
  435765:	mov    rax,QWORD PTR [rbx+0x38]
  435769:	mov    esi,edx
  43576b:	sub    ecx,edx
  43576d:	mov    DWORD PTR [rbx+0x14],ecx
  435770:	add    rsi,rax
  435773:	mov    QWORD PTR [rbx+0x38],rsi
  435777:	pop    rbx
  435778:	ret    
  435779:	nop    DWORD PTR [rax+0x0]
  435780:	xor    eax,eax
  435782:	pop    rbx
  435783:	ret    
  435784:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43578f:	nop
  435790:	mov    edx,DWORD PTR [rdi+0x14]
  435793:	mov    rax,QWORD PTR [rdi+0x38]
  435797:	cmp    edx,0x7
  43579a:	jbe    4357aa <strcmp@plt+0x31ff2>
  43579c:	lea    rcx,[rax+0x8]
  4357a0:	sub    edx,0x8
  4357a3:	mov    DWORD PTR [rdi+0x14],edx
  4357a6:	mov    QWORD PTR [rdi+0x38],rcx
  4357aa:	repz ret 
  4357ac:	nop    DWORD PTR [rax+0x0]
  4357b0:	mov    eax,DWORD PTR [rdi+0x14]
  4357b3:	push   r12
  4357b5:	mov    r12d,esi
  4357b8:	push   rbp
  4357b9:	push   rbx
  4357ba:	mov    ebp,edx
  4357bc:	mov    esi,0x8
  4357c1:	rol    r12w,0x8
  4357c6:	rol    bp,0x8
  4357ca:	lea    ebx,[rax+0x8]
  4357cd:	call   4301c0 <strcmp@plt+0x2ca08>
  4357d2:	rol    bx,0x8
  4357d6:	xor    edx,edx
  4357d8:	mov    WORD PTR [rax],r12w
  4357dc:	mov    WORD PTR [rax+0x2],bp
  4357e0:	mov    WORD PTR [rax+0x4],bx
  4357e4:	mov    WORD PTR [rax+0x6],dx
  4357e8:	pop    rbx
  4357e9:	pop    rbp
  4357ea:	pop    r12
  4357ec:	ret    
  4357ed:	nop    DWORD PTR [rax]
  4357f0:	push   r12
  4357f2:	push   rbp
  4357f3:	mov    r12,rsi
  4357f6:	push   rbx
  4357f7:	mov    ebx,ecx
  4357f9:	mov    esi,0xe
  4357fe:	rol    bx,0x8
  435802:	mov    rbp,rdx
  435805:	call   4301c0 <strcmp@plt+0x2ca08>
  43580a:	mov    WORD PTR [rax+0xc],bx
  43580e:	mov    edx,DWORD PTR [r12]
  435812:	mov    DWORD PTR [rax],edx
  435814:	movzx  edx,WORD PTR [r12+0x4]
  43581a:	mov    WORD PTR [rax+0x4],dx
  43581e:	mov    edx,DWORD PTR [rbp+0x0]
  435821:	mov    DWORD PTR [rax+0x6],edx
  435824:	movzx  edx,WORD PTR [rbp+0x4]
  435828:	mov    WORD PTR [rax+0xa],dx
  43582c:	pop    rbx
  43582d:	pop    rbp
  43582e:	pop    r12
  435830:	ret    
  435831:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43583c:	nop    DWORD PTR [rax+0x0]
  435840:	push   r14
  435842:	push   r13
  435844:	mov    r13,rsi
  435847:	push   r12
  435849:	push   rbp
  43584a:	mov    esi,0x14
  43584f:	push   rbx
  435850:	mov    rbp,rdi
  435853:	mov    r12,rdx
  435856:	mov    r14d,ecx
  435859:	call   4301c0 <strcmp@plt+0x2ca08>
  43585e:	mov    BYTE PTR [rax],0x45
  435861:	mov    BYTE PTR [rax+0x1],0x0
  435865:	mov    rbx,rax
  435868:	movzx  eax,WORD PTR [rbp+0x14]
  43586c:	mov    rsi,0x473ac0
  435873:	mov    rdi,rbx
  435876:	mov    BYTE PTR [rbx+0x9],r14b
  43587a:	mov    BYTE PTR [rbx+0x8],0xff
  43587e:	rol    ax,0x8
  435882:	mov    WORD PTR [rbx+0x2],ax
  435886:	movzx  eax,WORD PTR [rsi]
  435889:	add    eax,0x1
  43588c:	mov    WORD PTR [rsi],ax
  43588f:	rol    ax,0x8
  435893:	mov    esi,0x14
  435898:	mov    WORD PTR [rbx+0x4],ax
  43589c:	mov    eax,0x40
  4358a1:	mov    WORD PTR [rbx+0x6],ax
  4358a5:	mov    eax,DWORD PTR [r13+0x0]
  4358a9:	mov    DWORD PTR [rbx+0xc],eax
  4358ac:	mov    eax,DWORD PTR [r12]
  4358b0:	mov    DWORD PTR [rbx+0x10],eax
  4358b3:	call   42d230 <strcmp@plt+0x29a78>
  4358b8:	mov    WORD PTR [rbx+0xa],ax
  4358bc:	mov    rax,rbx
  4358bf:	pop    rbx
  4358c0:	pop    rbp
  4358c1:	pop    r12
  4358c3:	pop    r13
  4358c5:	pop    r14
  4358c7:	ret    
  4358c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4358d0:	push   r13
  4358d2:	push   r12
  4358d4:	mov    r13d,ecx
  4358d7:	push   rbp
  4358d8:	push   rbx
  4358d9:	mov    r12,rsi
  4358dc:	mov    esi,0x28
  4358e1:	mov    rbp,rdx
  4358e4:	sub    rsp,0x8
  4358e8:	mov    ebx,DWORD PTR [rdi+0x14]
  4358eb:	call   4301c0 <strcmp@plt+0x2ca08>
  4358f0:	mov    BYTE PTR [rax+0x7],0xff
  4358f4:	mov    BYTE PTR [rax],0x60
  4358f7:	rol    bx,0x8
  4358fb:	mov    BYTE PTR [rax+0x6],r13b
  4358ff:	mov    WORD PTR [rax+0x4],bx
  435903:	mov    rcx,QWORD PTR [r12]
  435907:	mov    rbx,QWORD PTR [r12+0x8]
  43590c:	mov    QWORD PTR [rax+0x8],rcx
  435910:	mov    QWORD PTR [rax+0x10],rbx
  435914:	mov    rbx,QWORD PTR [rbp+0x8]
  435918:	mov    rcx,QWORD PTR [rbp+0x0]
  43591c:	mov    QWORD PTR [rax+0x20],rbx
  435920:	mov    QWORD PTR [rax+0x18],rcx
  435924:	add    rsp,0x8
  435928:	pop    rbx
  435929:	pop    rbp
  43592a:	pop    r12
  43592c:	pop    r13
  43592e:	ret    
  43592f:	nop
  435930:	push   r14
  435932:	push   r13
  435934:	mov    r13,rdi
  435937:	push   r12
  435939:	push   rbp
  43593a:	mov    rdi,rsi
  43593d:	push   rbx
  43593e:	mov    rbp,rdx
  435941:	mov    rbx,rsi
  435944:	mov    r14d,ecx
  435947:	call   4257c0 <strcmp@plt+0x22008>
  43594c:	mov    rdi,rbp
  43594f:	mov    r12d,eax
  435952:	call   4257c0 <strcmp@plt+0x22008>
  435957:	cmp    r12d,eax
  43595a:	je     4359a0 <strcmp@plt+0x321e8>
  43595c:	mov    rax,0x468e3c
  435963:	mov    eax,DWORD PTR [rax]
  435965:	test   eax,eax
  435967:	jle    435995 <strcmp@plt+0x321dd>
  435969:	mov    rdi,rbp
  43596c:	call   425f90 <strcmp@plt+0x227d8>
  435971:	mov    rdi,rbx
  435974:	mov    rbp,rax
  435977:	call   425f90 <strcmp@plt+0x227d8>
  43597c:	lea    rsi,[rip+0x1aead]        # 450830 <strcmp@plt+0x4d078>
  435983:	mov    rdx,rax
  435986:	mov    rcx,rbp
  435989:	mov    edi,0x5
  43598e:	xor    eax,eax
  435990:	call   4306a0 <strcmp@plt+0x2cee8>
  435995:	pop    rbx
  435996:	xor    eax,eax
  435998:	pop    rbp
  435999:	pop    r12
  43599b:	pop    r13
  43599d:	pop    r14
  43599f:	ret    
  4359a0:	mov    rdi,rbx
  4359a3:	call   4257c0 <strcmp@plt+0x22008>
  4359a8:	cmp    eax,0x2
  4359ab:	je     4359e0 <strcmp@plt+0x32228>
  4359ad:	cmp    eax,0xa
  4359b0:	jne    435995 <strcmp@plt+0x321dd>
  4359b2:	mov    rdi,rbp
  4359b5:	call   4257d0 <strcmp@plt+0x22018>
  4359ba:	mov    rdi,rbx
  4359bd:	mov    rbp,rax
  4359c0:	call   4257d0 <strcmp@plt+0x22018>
  4359c5:	pop    rbx
  4359c6:	mov    ecx,r14d
  4359c9:	mov    rdx,rbp
  4359cc:	mov    rdi,r13
  4359cf:	pop    rbp
  4359d0:	pop    r12
  4359d2:	pop    r13
  4359d4:	pop    r14
  4359d6:	mov    rsi,rax
  4359d9:	jmp    4358d0 <strcmp@plt+0x32118>
  4359de:	xchg   ax,ax
  4359e0:	mov    rdi,rbp
  4359e3:	call   4257d0 <strcmp@plt+0x22018>
  4359e8:	mov    rdi,rbx
  4359eb:	mov    rbp,rax
  4359ee:	call   4257d0 <strcmp@plt+0x22018>
  4359f3:	pop    rbx
  4359f4:	mov    ecx,r14d
  4359f7:	mov    rdx,rbp
  4359fa:	mov    rdi,r13
  4359fd:	pop    rbp
  4359fe:	pop    r12
  435a00:	pop    r13
  435a02:	pop    r14
  435a04:	mov    rsi,rax
  435a07:	jmp    435840 <strcmp@plt+0x32088>
  435a0c:	nop    DWORD PTR [rax+0x0]
  435a10:	push   r12
  435a12:	push   rbp
  435a13:	movzx  edx,dx
  435a16:	push   rbx
  435a17:	movzx  esi,si
  435a1a:	mov    rbx,rdi
  435a1d:	mov    r12,rcx
  435a20:	mov    rbp,r8
  435a23:	call   4357b0 <strcmp@plt+0x31ff8>
  435a28:	test   rax,rax
  435a2b:	je     435ac0 <strcmp@plt+0x32308>
  435a31:	mov    rax,QWORD PTR [rbx+0x38]
  435a35:	sub    rax,QWORD PTR [rbx+0x30]
  435a39:	mov    ecx,0x11
  435a3e:	mov    rdx,rbp
  435a41:	mov    rsi,r12
  435a44:	mov    rdi,rbx
  435a47:	mov    WORD PTR [rbx+0x1c],ax
  435a4b:	call   435930 <strcmp@plt+0x32178>
  435a50:	test   rax,rax
  435a53:	je     435b20 <strcmp@plt+0x32368>
  435a59:	movzx  edx,WORD PTR [rbx+0x1c]
  435a5d:	mov    rbp,QWORD PTR [rbx+0x30]
  435a61:	mov    rdi,r12
  435a64:	mov    rax,QWORD PTR [rbx+0x38]
  435a68:	sub    rax,rbp
  435a6b:	add    rbp,rdx
  435a6e:	cmp    dx,0xffff
  435a72:	mov    WORD PTR [rbx+0x1a],ax
  435a76:	mov    eax,0x0
  435a7b:	cmove  rbp,rax
  435a7f:	call   4257c0 <strcmp@plt+0x22008>
  435a84:	movzx  esi,WORD PTR [rbx+0x1a]
  435a88:	xor    edx,edx
  435a8a:	cmp    si,0xffff
  435a8e:	je     435a97 <strcmp@plt+0x322df>
  435a90:	mov    rdx,rsi
  435a93:	add    rdx,QWORD PTR [rbx+0x30]
  435a97:	movzx  esi,WORD PTR [rbp+0x4]
  435a9b:	mov    ecx,eax
  435a9d:	mov    rdi,rbp
  435aa0:	rol    si,0x8
  435aa4:	movzx  esi,si
  435aa7:	call   42d400 <strcmp@plt+0x29c48>
  435aac:	cmp    ax,0xffff
  435ab0:	je     435ad8 <strcmp@plt+0x32320>
  435ab2:	mov    WORD PTR [rbp+0x6],ax
  435ab6:	mov    eax,0x1
  435abb:	pop    rbx
  435abc:	pop    rbp
  435abd:	pop    r12
  435abf:	ret    
  435ac0:	mov    rax,0x468e3c
  435ac7:	mov    ecx,DWORD PTR [rax]
  435ac9:	test   ecx,ecx
  435acb:	jg     435b00 <strcmp@plt+0x32348>
  435acd:	xor    eax,eax
  435acf:	pop    rbx
  435ad0:	pop    rbp
  435ad1:	pop    r12
  435ad3:	ret    
  435ad4:	nop    DWORD PTR [rax+0x0]
  435ad8:	mov    rax,0x468e3c
  435adf:	mov    eax,DWORD PTR [rax]
  435ae1:	test   eax,eax
  435ae3:	jle    435acd <strcmp@plt+0x32315>
  435ae5:	lea    rsi,[rip+0x1adcc]        # 4508b8 <strcmp@plt+0x4d100>
  435aec:	xor    eax,eax
  435aee:	mov    edi,0x5
  435af3:	call   4306a0 <strcmp@plt+0x2cee8>
  435af8:	xor    eax,eax
  435afa:	jmp    435acf <strcmp@plt+0x32317>
  435afc:	nop    DWORD PTR [rax+0x0]
  435b00:	lea    rsi,[rip+0x1ad61]        # 450868 <strcmp@plt+0x4d0b0>
  435b07:	xor    eax,eax
  435b09:	mov    edi,0x5
  435b0e:	call   4306a0 <strcmp@plt+0x2cee8>
  435b13:	pop    rbx
  435b14:	xor    eax,eax
  435b16:	pop    rbp
  435b17:	pop    r12
  435b19:	ret    
  435b1a:	nop    WORD PTR [rax+rax*1+0x0]
  435b20:	mov    rax,0x468e3c
  435b27:	mov    edx,DWORD PTR [rax]
  435b29:	test   edx,edx
  435b2b:	jle    435acd <strcmp@plt+0x32315>
  435b2d:	lea    rsi,[rip+0x1ad5c]        # 450890 <strcmp@plt+0x4d0d8>
  435b34:	xor    eax,eax
  435b36:	mov    edi,0x5
  435b3b:	call   4306a0 <strcmp@plt+0x2cee8>
  435b40:	xor    eax,eax
  435b42:	jmp    435abb <strcmp@plt+0x32303>
  435b47:	nop    WORD PTR [rax+rax*1+0x0]
  435b50:	push   r12
  435b52:	push   rbp
  435b53:	movzx  edx,dx
  435b56:	push   rbx
  435b57:	movzx  esi,si
  435b5a:	mov    rbx,rdi
  435b5d:	mov    r12,rcx
  435b60:	mov    rbp,r8
  435b63:	call   4357b0 <strcmp@plt+0x31ff8>
  435b68:	test   rax,rax
  435b6b:	je     435c00 <strcmp@plt+0x32448>
  435b71:	mov    rax,QWORD PTR [rbx+0x38]
  435b75:	sub    rax,QWORD PTR [rbx+0x30]
  435b79:	mov    ecx,0x11
  435b7e:	mov    rdx,rbp
  435b81:	mov    rsi,r12
  435b84:	mov    rdi,rbx
  435b87:	mov    WORD PTR [rbx+0x22],ax
  435b8b:	call   435930 <strcmp@plt+0x32178>
  435b90:	test   rax,rax
  435b93:	je     435c60 <strcmp@plt+0x324a8>
  435b99:	movzx  edx,WORD PTR [rbx+0x22]
  435b9d:	mov    rbp,QWORD PTR [rbx+0x30]
  435ba1:	mov    rdi,r12
  435ba4:	mov    rax,QWORD PTR [rbx+0x38]
  435ba8:	sub    rax,rbp
  435bab:	add    rbp,rdx
  435bae:	cmp    dx,0xffff
  435bb2:	mov    WORD PTR [rbx+0x20],ax
  435bb6:	mov    eax,0x0
  435bbb:	cmove  rbp,rax
  435bbf:	call   4257c0 <strcmp@plt+0x22008>
  435bc4:	movzx  esi,WORD PTR [rbx+0x20]
  435bc8:	xor    edx,edx
  435bca:	cmp    si,0xffff
  435bce:	je     435bd7 <strcmp@plt+0x3241f>
  435bd0:	mov    rdx,rsi
  435bd3:	add    rdx,QWORD PTR [rbx+0x30]
  435bd7:	movzx  esi,WORD PTR [rbp+0x4]
  435bdb:	mov    ecx,eax
  435bdd:	mov    rdi,rbp
  435be0:	rol    si,0x8
  435be4:	movzx  esi,si
  435be7:	call   42d400 <strcmp@plt+0x29c48>
  435bec:	cmp    ax,0xffff
  435bf0:	je     435c18 <strcmp@plt+0x32460>
  435bf2:	mov    WORD PTR [rbp+0x6],ax
  435bf6:	mov    eax,0x1
  435bfb:	pop    rbx
  435bfc:	pop    rbp
  435bfd:	pop    r12
  435bff:	ret    
  435c00:	mov    rax,0x468e3c
  435c07:	mov    ecx,DWORD PTR [rax]
  435c09:	test   ecx,ecx
  435c0b:	jg     435c40 <strcmp@plt+0x32488>
  435c0d:	xor    eax,eax
  435c0f:	pop    rbx
  435c10:	pop    rbp
  435c11:	pop    r12
  435c13:	ret    
  435c14:	nop    DWORD PTR [rax+0x0]
  435c18:	mov    rax,0x468e3c
  435c1f:	mov    eax,DWORD PTR [rax]
  435c21:	test   eax,eax
  435c23:	jle    435c0d <strcmp@plt+0x32455>
  435c25:	lea    rsi,[rip+0x1ac8c]        # 4508b8 <strcmp@plt+0x4d100>
  435c2c:	xor    eax,eax
  435c2e:	mov    edi,0x5
  435c33:	call   4306a0 <strcmp@plt+0x2cee8>
  435c38:	xor    eax,eax
  435c3a:	jmp    435c0f <strcmp@plt+0x32457>
  435c3c:	nop    DWORD PTR [rax+0x0]
  435c40:	lea    rsi,[rip+0x1ac21]        # 450868 <strcmp@plt+0x4d0b0>
  435c47:	xor    eax,eax
  435c49:	mov    edi,0x5
  435c4e:	call   4306a0 <strcmp@plt+0x2cee8>
  435c53:	pop    rbx
  435c54:	xor    eax,eax
  435c56:	pop    rbp
  435c57:	pop    r12
  435c59:	ret    
  435c5a:	nop    WORD PTR [rax+rax*1+0x0]
  435c60:	mov    rax,0x468e3c
  435c67:	mov    edx,DWORD PTR [rax]
  435c69:	test   edx,edx
  435c6b:	jle    435c0d <strcmp@plt+0x32455>
  435c6d:	lea    rsi,[rip+0x1ac1c]        # 450890 <strcmp@plt+0x4d0d8>
  435c74:	xor    eax,eax
  435c76:	mov    edi,0x5
  435c7b:	call   4306a0 <strcmp@plt+0x2cee8>
  435c80:	xor    eax,eax
  435c82:	jmp    435bfb <strcmp@plt+0x32443>
  435c87:	nop    WORD PTR [rax+rax*1+0x0]
  435c90:	push   r12
  435c92:	push   rbp
  435c93:	push   rbx
  435c94:	mov    rbx,rsi
  435c97:	sub    rsp,0x60
  435c9b:	mov    rax,QWORD PTR fs:0x28
  435ca4:	mov    QWORD PTR [rsp+0x58],rax
  435ca9:	xor    eax,eax
  435cab:	mov    rax,QWORD PTR [rdi]
  435cae:	mov    QWORD PTR [rsp+0x10],rax
  435cb3:	mov    rax,QWORD PTR [rdi+0x8]
  435cb7:	mov    QWORD PTR [rsp+0x18],rax
  435cbc:	mov    rax,QWORD PTR [rdi+0x10]
  435cc0:	mov    QWORD PTR [rsp+0x20],rax
  435cc5:	mov    rax,QWORD PTR [rdi+0x18]
  435cc9:	mov    QWORD PTR [rsp+0x28],rax
  435cce:	mov    rax,QWORD PTR [rdi+0x20]
  435cd2:	mov    QWORD PTR [rsp+0x30],rax
  435cd7:	mov    rax,QWORD PTR [rdi+0x28]
  435cdb:	mov    QWORD PTR [rsp+0x38],rax
  435ce0:	mov    rax,QWORD PTR [rdi+0x30]
  435ce4:	mov    QWORD PTR [rsp+0x40],rax
  435ce9:	mov    rax,QWORD PTR [rdi+0x38]
  435ced:	lea    rdi,[rsp+0x10]
  435cf2:	mov    QWORD PTR [rsp+0x48],rax
  435cf7:	call   430320 <strcmp@plt+0x2cb68>
  435cfc:	cmp    eax,0x1
  435cff:	je     435d20 <strcmp@plt+0x32568>
  435d01:	xor    eax,eax
  435d03:	mov    rcx,QWORD PTR [rsp+0x58]
  435d08:	xor    rcx,QWORD PTR fs:0x28
  435d11:	jne    435eb1 <strcmp@plt+0x326f9>
  435d17:	add    rsp,0x60
  435d1b:	pop    rbx
  435d1c:	pop    rbp
  435d1d:	pop    r12
  435d1f:	ret    
  435d20:	movzx  ebp,WORD PTR [rsp+0x2a]
  435d25:	mov    DWORD PTR [rsp+0xc],eax
  435d29:	cmp    bp,0xffff
  435d2d:	je     435de0 <strcmp@plt+0x32628>
  435d33:	add    rbp,QWORD PTR [rsp+0x40]
  435d38:	lea    r12,[rbx+0x20]
  435d3c:	mov    esi,0x1
  435d41:	mov    rdi,rbx
  435d44:	call   424910 <strcmp@plt+0x21158>
  435d49:	mov    esi,0x1
  435d4e:	mov    rdi,r12
  435d51:	call   424910 <strcmp@plt+0x21158>
  435d56:	movzx  edx,BYTE PTR [rbp+0x0]
  435d5a:	mov    eax,DWORD PTR [rsp+0xc]
  435d5e:	shr    dl,0x4
  435d61:	cmp    dl,0x4
  435d64:	je     435e30 <strcmp@plt+0x32678>
  435d6a:	cmp    dl,0x6
  435d6d:	jne    435e08 <strcmp@plt+0x32650>
  435d73:	lea    rsi,[rbp+0x8]
  435d77:	mov    edx,0xa
  435d7c:	mov    rdi,rbx
  435d7f:	mov    DWORD PTR [rsp+0xc],eax
  435d83:	call   424f50 <strcmp@plt+0x21798>
  435d88:	lea    rsi,[rbp+0x18]
  435d8c:	mov    edx,0xa
  435d91:	mov    rdi,r12
  435d94:	call   424f50 <strcmp@plt+0x21798>
  435d99:	movzx  edx,BYTE PTR [rbp+0x6]
  435d9d:	mov    ecx,DWORD PTR [rsp+0x24]
  435da1:	mov    eax,DWORD PTR [rsp+0xc]
  435da5:	cmp    ecx,0x27
  435da8:	mov    BYTE PTR [rbx+0x44],dl
  435dab:	jbe    435dba <strcmp@plt+0x32602>
  435dad:	add    QWORD PTR [rsp+0x48],0x28
  435db3:	sub    ecx,0x28
  435db6:	mov    DWORD PTR [rsp+0x24],ecx
  435dba:	cmp    dl,0x11
  435dbd:	je     435e90 <strcmp@plt+0x326d8>
  435dc3:	cmp    dl,0x6
  435dc6:	je     435e90 <strcmp@plt+0x326d8>
  435dcc:	xor    edx,edx
  435dce:	xor    ecx,ecx
  435dd0:	mov    WORD PTR [rbx+0x40],dx
  435dd4:	mov    WORD PTR [rbx+0x42],cx
  435dd8:	jmp    435d03 <strcmp@plt+0x3254b>
  435ddd:	nop    DWORD PTR [rax]
  435de0:	mov    rdi,rbx
  435de3:	mov    esi,0x1
  435de8:	call   424910 <strcmp@plt+0x21158>
  435ded:	lea    rdi,[rbx+0x20]
  435df1:	mov    esi,0x1
  435df6:	call   424910 <strcmp@plt+0x21158>
  435dfb:	mov    rax,QWORD PTR ds:0x0
  435e03:	ud2    
  435e05:	nop    DWORD PTR [rax]
  435e08:	mov    rax,0x468e3c
  435e0f:	cmp    DWORD PTR [rax],0x1
  435e12:	jle    435d01 <strcmp@plt+0x32549>
  435e18:	lea    rsi,[rip+0x1aab9]        # 4508d8 <strcmp@plt+0x4d120>
  435e1f:	mov    edi,0x6
  435e24:	xor    eax,eax
  435e26:	call   4306a0 <strcmp@plt+0x2cee8>
  435e2b:	jmp    435d01 <strcmp@plt+0x32549>
  435e30:	lea    rsi,[rbp+0xc]
  435e34:	mov    edx,0x2
  435e39:	mov    rdi,rbx
  435e3c:	mov    DWORD PTR [rsp+0xc],eax
  435e40:	call   424f50 <strcmp@plt+0x21798>
  435e45:	lea    rsi,[rbp+0x10]
  435e49:	mov    edx,0x2
  435e4e:	mov    rdi,r12
  435e51:	call   424f50 <strcmp@plt+0x21798>
  435e56:	movzx  edx,BYTE PTR [rbp+0x9]
  435e5a:	mov    esi,DWORD PTR [rsp+0x24]
  435e5e:	mov    eax,DWORD PTR [rsp+0xc]
  435e62:	mov    BYTE PTR [rbx+0x44],dl
  435e65:	movzx  ecx,BYTE PTR [rbp+0x0]
  435e69:	and    ecx,0xf
  435e6c:	shl    ecx,0x2
  435e6f:	cmp    ecx,esi
  435e71:	ja     435dba <strcmp@plt+0x32602>
  435e77:	sub    esi,ecx
  435e79:	mov    edi,ecx
  435e7b:	add    QWORD PTR [rsp+0x48],rdi
  435e80:	mov    DWORD PTR [rsp+0x24],esi
  435e84:	jmp    435dba <strcmp@plt+0x32602>
  435e89:	nop    DWORD PTR [rax+0x0]
  435e90:	mov    rcx,QWORD PTR [rsp+0x48]
  435e95:	movzx  edx,WORD PTR [rcx]
  435e98:	rol    dx,0x8
  435e9c:	mov    WORD PTR [rbx+0x40],dx
  435ea0:	movzx  edx,WORD PTR [rcx+0x2]
  435ea4:	rol    dx,0x8
  435ea8:	mov    WORD PTR [rbx+0x42],dx
  435eac:	jmp    435d03 <strcmp@plt+0x3254b>
  435eb1:	call   403460 <__stack_chk_fail@plt>
  435eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435ec0:	push   r12
  435ec2:	push   rbp
  435ec3:	push   rbx
  435ec4:	mov    rbx,rsi
  435ec7:	sub    rsp,0x60
  435ecb:	mov    rax,QWORD PTR fs:0x28
  435ed4:	mov    QWORD PTR [rsp+0x58],rax
  435ed9:	xor    eax,eax
  435edb:	mov    rax,QWORD PTR [rdi]
  435ede:	mov    QWORD PTR [rsp+0x10],rax
  435ee3:	mov    rax,QWORD PTR [rdi+0x8]
  435ee7:	mov    QWORD PTR [rsp+0x18],rax
  435eec:	mov    rax,QWORD PTR [rdi+0x10]
  435ef0:	mov    QWORD PTR [rsp+0x20],rax
  435ef5:	mov    rax,QWORD PTR [rdi+0x18]
  435ef9:	mov    QWORD PTR [rsp+0x28],rax
  435efe:	mov    rax,QWORD PTR [rdi+0x20]
  435f02:	mov    QWORD PTR [rsp+0x30],rax
  435f07:	mov    rax,QWORD PTR [rdi+0x28]
  435f0b:	mov    QWORD PTR [rsp+0x38],rax
  435f10:	mov    rax,QWORD PTR [rdi+0x30]
  435f14:	mov    QWORD PTR [rsp+0x40],rax
  435f19:	mov    rax,QWORD PTR [rdi+0x38]
  435f1d:	lea    rdi,[rsp+0x10]
  435f22:	mov    QWORD PTR [rsp+0x48],rax
  435f27:	call   430440 <strcmp@plt+0x2cc88>
  435f2c:	cmp    eax,0x1
  435f2f:	je     435f50 <strcmp@plt+0x32798>
  435f31:	xor    eax,eax
  435f33:	mov    rcx,QWORD PTR [rsp+0x58]
  435f38:	xor    rcx,QWORD PTR fs:0x28
  435f41:	jne    4360e1 <strcmp@plt+0x32929>
  435f47:	add    rsp,0x60
  435f4b:	pop    rbx
  435f4c:	pop    rbp
  435f4d:	pop    r12
  435f4f:	ret    
  435f50:	movzx  ebp,WORD PTR [rsp+0x30]
  435f55:	mov    DWORD PTR [rsp+0xc],eax
  435f59:	cmp    bp,0xffff
  435f5d:	je     436010 <strcmp@plt+0x32858>
  435f63:	add    rbp,QWORD PTR [rsp+0x40]
  435f68:	lea    r12,[rbx+0x20]
  435f6c:	mov    esi,0x1
  435f71:	mov    rdi,rbx
  435f74:	call   424910 <strcmp@plt+0x21158>
  435f79:	mov    esi,0x1
  435f7e:	mov    rdi,r12
  435f81:	call   424910 <strcmp@plt+0x21158>
  435f86:	movzx  edx,BYTE PTR [rbp+0x0]
  435f8a:	mov    eax,DWORD PTR [rsp+0xc]
  435f8e:	shr    dl,0x4
  435f91:	cmp    dl,0x4
  435f94:	je     436060 <strcmp@plt+0x328a8>
  435f9a:	cmp    dl,0x6
  435f9d:	jne    436038 <strcmp@plt+0x32880>
  435fa3:	lea    rsi,[rbp+0x8]
  435fa7:	mov    edx,0xa
  435fac:	mov    rdi,rbx
  435faf:	mov    DWORD PTR [rsp+0xc],eax
  435fb3:	call   424f50 <strcmp@plt+0x21798>
  435fb8:	lea    rsi,[rbp+0x18]
  435fbc:	mov    edx,0xa
  435fc1:	mov    rdi,r12
  435fc4:	call   424f50 <strcmp@plt+0x21798>
  435fc9:	movzx  edx,BYTE PTR [rbp+0x6]
  435fcd:	mov    ecx,DWORD PTR [rsp+0x24]
  435fd1:	mov    eax,DWORD PTR [rsp+0xc]
  435fd5:	cmp    ecx,0x27
  435fd8:	mov    BYTE PTR [rbx+0x44],dl
  435fdb:	jbe    435fea <strcmp@plt+0x32832>
  435fdd:	add    QWORD PTR [rsp+0x48],0x28
  435fe3:	sub    ecx,0x28
  435fe6:	mov    DWORD PTR [rsp+0x24],ecx
  435fea:	cmp    dl,0x11
  435fed:	je     4360c0 <strcmp@plt+0x32908>
  435ff3:	cmp    dl,0x6
  435ff6:	je     4360c0 <strcmp@plt+0x32908>
  435ffc:	xor    edx,edx
  435ffe:	xor    ecx,ecx
  436000:	mov    WORD PTR [rbx+0x40],dx
  436004:	mov    WORD PTR [rbx+0x42],cx
  436008:	jmp    435f33 <strcmp@plt+0x3277b>
  43600d:	nop    DWORD PTR [rax]
  436010:	mov    rdi,rbx
  436013:	mov    esi,0x1
  436018:	call   424910 <strcmp@plt+0x21158>
  43601d:	lea    rdi,[rbx+0x20]
  436021:	mov    esi,0x1
  436026:	call   424910 <strcmp@plt+0x21158>
  43602b:	mov    rax,QWORD PTR ds:0x0
  436033:	ud2    
  436035:	nop    DWORD PTR [rax]
  436038:	mov    rax,0x468e3c
  43603f:	cmp    DWORD PTR [rax],0x1
  436042:	jle    435f31 <strcmp@plt+0x32779>
  436048:	lea    rsi,[rip+0x1a8b1]        # 450900 <strcmp@plt+0x4d148>
  43604f:	mov    edi,0x6
  436054:	xor    eax,eax
  436056:	call   4306a0 <strcmp@plt+0x2cee8>
  43605b:	jmp    435f31 <strcmp@plt+0x32779>
  436060:	lea    rsi,[rbp+0xc]
  436064:	mov    edx,0x2
  436069:	mov    rdi,rbx
  43606c:	mov    DWORD PTR [rsp+0xc],eax
  436070:	call   424f50 <strcmp@plt+0x21798>
  436075:	lea    rsi,[rbp+0x10]
  436079:	mov    edx,0x2
  43607e:	mov    rdi,r12
  436081:	call   424f50 <strcmp@plt+0x21798>
  436086:	movzx  edx,BYTE PTR [rbp+0x9]
  43608a:	mov    esi,DWORD PTR [rsp+0x24]
  43608e:	mov    eax,DWORD PTR [rsp+0xc]
  436092:	mov    BYTE PTR [rbx+0x44],dl
  436095:	movzx  ecx,BYTE PTR [rbp+0x0]
  436099:	and    ecx,0xf
  43609c:	shl    ecx,0x2
  43609f:	cmp    ecx,esi
  4360a1:	ja     435fea <strcmp@plt+0x32832>
  4360a7:	sub    esi,ecx
  4360a9:	mov    edi,ecx
  4360ab:	add    QWORD PTR [rsp+0x48],rdi
  4360b0:	mov    DWORD PTR [rsp+0x24],esi
  4360b4:	jmp    435fea <strcmp@plt+0x32832>
  4360b9:	nop    DWORD PTR [rax+0x0]
  4360c0:	mov    rcx,QWORD PTR [rsp+0x48]
  4360c5:	movzx  edx,WORD PTR [rcx]
  4360c8:	rol    dx,0x8
  4360cc:	mov    WORD PTR [rbx+0x40],dx
  4360d0:	movzx  edx,WORD PTR [rcx+0x2]
  4360d4:	rol    dx,0x8
  4360d8:	mov    WORD PTR [rbx+0x42],dx
  4360dc:	jmp    435f33 <strcmp@plt+0x3277b>
  4360e1:	call   403460 <__stack_chk_fail@plt>
  4360e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4360f0:	movzx  edx,BYTE PTR [rdi]
  4360f3:	mov    eax,0x2
  4360f8:	shr    dl,0x4
  4360fb:	cmp    dl,0x4
  4360fe:	je     43613d <strcmp@plt+0x32985>
  436100:	cmp    dl,0x6
  436103:	mov    eax,0xa
  436108:	je     43613d <strcmp@plt+0x32985>
  43610a:	mov    rax,0x468e3c
  436111:	cmp    DWORD PTR [rax],0x1
  436114:	jg     436120 <strcmp@plt+0x32968>
  436116:	xor    eax,eax
  436118:	ret    
  436119:	nop    DWORD PTR [rax+0x0]
  436120:	lea    rsi,[rip+0x1a92f]        # 450a56 <strcmp@plt+0x4d29e>
  436127:	sub    rsp,0x8
  43612b:	xor    eax,eax
  43612d:	mov    edi,0x6
  436132:	call   4306a0 <strcmp@plt+0x2cee8>
  436137:	add    rsp,0x8
  43613b:	xor    eax,eax
  43613d:	repz ret 
  43613f:	nop
  436140:	push   r12
  436142:	push   rbp
  436143:	push   rbx
  436144:	movzx  eax,WORD PTR [rdi+0x42]
  436148:	mov    rbx,rdi
  43614b:	movzx  r12d,WORD PTR [rdi+0x40]
  436150:	shl    eax,0x10
  436153:	add    r12d,eax
  436156:	call   4251c0 <strcmp@plt+0x21a08>
  43615b:	cmp    ax,0x2
  43615f:	je     4361d0 <strcmp@plt+0x32a18>
  436161:	cmp    ax,0xa
  436165:	je     436190 <strcmp@plt+0x329d8>
  436167:	xor    esi,esi
  436169:	xor    ebp,ebp
  43616b:	mov    rdi,rbp
  43616e:	mov    edx,0x7dd
  436173:	call   4355b0 <strcmp@plt+0x31df8>
  436178:	mov    rdi,rbp
  43617b:	mov    ebx,eax
  43617d:	call   4037b0 <free@plt>
  436182:	mov    eax,ebx
  436184:	pop    rbx
  436185:	pop    rbp
  436186:	pop    r12
  436188:	ret    
  436189:	nop    DWORD PTR [rax+0x0]
  436190:	mov    edi,0x2c
  436195:	call   4347a0 <strcmp@plt+0x30fe8>
  43619a:	mov    rsi,rbx
  43619d:	mov    rbp,rax
  4361a0:	mov    rdi,rax
  4361a3:	call   424bc0 <strcmp@plt+0x21408>
  4361a8:	lea    rsi,[rbx+0x20]
  4361ac:	lea    rdi,[rbp+0x10]
  4361b0:	call   424bc0 <strcmp@plt+0x21408>
  4361b5:	mov    DWORD PTR [rbp+0x20],r12d
  4361b9:	movzx  eax,BYTE PTR [rbx+0x44]
  4361bd:	mov    esi,0xb
  4361c2:	mov    DWORD PTR [rbp+0x24],eax
  4361c5:	mov    eax,DWORD PTR [rbx+0x48]
  4361c8:	mov    DWORD PTR [rbp+0x28],eax
  4361cb:	jmp    43616b <strcmp@plt+0x329b3>
  4361cd:	nop    DWORD PTR [rax]
  4361d0:	mov    edi,0x14
  4361d5:	call   4347a0 <strcmp@plt+0x30fe8>
  4361da:	mov    rsi,rbx
  4361dd:	mov    rbp,rax
  4361e0:	mov    rdi,rax
  4361e3:	call   424bc0 <strcmp@plt+0x21408>
  4361e8:	lea    rsi,[rbx+0x20]
  4361ec:	lea    rdi,[rbp+0x4]
  4361f0:	call   424bc0 <strcmp@plt+0x21408>
  4361f5:	mov    DWORD PTR [rbp+0x8],r12d
  4361f9:	movzx  eax,BYTE PTR [rbx+0x44]
  4361fd:	mov    esi,0x5
  436202:	mov    DWORD PTR [rbp+0xc],eax
  436205:	mov    eax,DWORD PTR [rbx+0x48]
  436208:	mov    DWORD PTR [rbp+0x10],eax
  43620b:	jmp    43616b <strcmp@plt+0x329b3>
  436210:	push   r12
  436212:	push   rbp
  436213:	mov    r12,rsi
  436216:	push   rbx
  436217:	mov    rbp,rdi
  43621a:	call   4251c0 <strcmp@plt+0x21a08>
  43621f:	cmp    ax,0x2
  436223:	je     436280 <strcmp@plt+0x32ac8>
  436225:	cmp    ax,0xa
  436229:	je     436250 <strcmp@plt+0x32a98>
  43622b:	xor    esi,esi
  43622d:	xor    ebx,ebx
  43622f:	mov    rdi,rbx
  436232:	mov    edx,0x7dd
  436237:	call   4355b0 <strcmp@plt+0x31df8>
  43623c:	mov    rdi,rbx
  43623f:	mov    ebp,eax
  436241:	call   4037b0 <free@plt>
  436246:	mov    eax,ebp
  436248:	pop    rbx
  436249:	pop    rbp
  43624a:	pop    r12
  43624c:	ret    
  43624d:	nop    DWORD PTR [rax]
  436250:	mov    edi,0x20
  436255:	call   4347a0 <strcmp@plt+0x30fe8>
  43625a:	mov    rsi,rbp
  43625d:	mov    rbx,rax
  436260:	mov    rdi,rax
  436263:	call   424bc0 <strcmp@plt+0x21408>
  436268:	lea    rdi,[rbx+0x10]
  43626c:	mov    rsi,r12
  43626f:	call   424bc0 <strcmp@plt+0x21408>
  436274:	mov    esi,0x8
  436279:	jmp    43622f <strcmp@plt+0x32a77>
  43627b:	nop    DWORD PTR [rax+rax*1+0x0]
  436280:	mov    edi,0x8
  436285:	call   4347a0 <strcmp@plt+0x30fe8>
  43628a:	mov    rsi,rbp
  43628d:	mov    rbx,rax
  436290:	mov    rdi,rax
  436293:	call   424bc0 <strcmp@plt+0x21408>
  436298:	lea    rdi,[rbx+0x4]
  43629c:	mov    rsi,r12
  43629f:	call   424bc0 <strcmp@plt+0x21408>
  4362a4:	mov    esi,0x2
  4362a9:	jmp    43622f <strcmp@plt+0x32a77>
  4362ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4362b0:	mov    eax,DWORD PTR [rsi+0x40]
  4362b3:	cmp    DWORD PTR [rdi+0x40],eax
  4362b6:	je     4362c0 <strcmp@plt+0x32b08>
  4362b8:	xor    eax,eax
  4362ba:	ret    
  4362bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4362c0:	push   rbp
  4362c1:	push   rbx
  4362c2:	mov    rbp,rsi
  4362c5:	mov    rbx,rdi
  4362c8:	sub    rsp,0x8
  4362cc:	call   424df0 <strcmp@plt+0x21638>
  4362d1:	test   eax,eax
  4362d3:	je     4362e0 <strcmp@plt+0x32b28>
  4362d5:	xor    eax,eax
  4362d7:	add    rsp,0x8
  4362db:	pop    rbx
  4362dc:	pop    rbp
  4362dd:	ret    
  4362de:	xchg   ax,ax
  4362e0:	lea    rsi,[rbp+0x20]
  4362e4:	lea    rdi,[rbx+0x20]
  4362e8:	call   424df0 <strcmp@plt+0x21638>
  4362ed:	test   eax,eax
  4362ef:	jne    4362d5 <strcmp@plt+0x32b1d>
  4362f1:	mov    eax,DWORD PTR [rbp+0x48]
  4362f4:	cmp    DWORD PTR [rbx+0x48],eax
  4362f7:	sete   al
  4362fa:	movzx  eax,al
  4362fd:	jmp    4362d7 <strcmp@plt+0x32b1f>
  4362ff:	nop
  436300:	push   rbp
  436301:	push   rbx
  436302:	mov    rbp,rdi
  436305:	mov    edi,0x50
  43630a:	sub    rsp,0x8
  43630e:	call   434790 <strcmp@plt+0x30fd8>
  436313:	mov    rbx,rax
  436316:	movzx  eax,WORD PTR [rbp+0x40]
  43631a:	mov    rsi,rbp
  43631d:	mov    rdi,rbx
  436320:	mov    WORD PTR [rbx+0x40],ax
  436324:	movzx  eax,WORD PTR [rbp+0x42]
  436328:	mov    WORD PTR [rbx+0x42],ax
  43632c:	movzx  eax,BYTE PTR [rbp+0x44]
  436330:	mov    BYTE PTR [rbx+0x44],al
  436333:	call   424b00 <strcmp@plt+0x21348>
  436338:	lea    rsi,[rbp+0x20]
  43633c:	lea    rdi,[rbx+0x20]
  436340:	call   424b00 <strcmp@plt+0x21348>
  436345:	mov    eax,DWORD PTR [rbp+0x48]
  436348:	mov    DWORD PTR [rbx+0x48],eax
  43634b:	add    rsp,0x8
  43634f:	mov    rax,rbx
  436352:	pop    rbx
  436353:	pop    rbp
  436354:	ret    
  436355:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  436360:	push   rbx
  436361:	mov    rbx,rdi
  436364:	lea    rdi,[rdi+0x20]
  436368:	call   425680 <strcmp@plt+0x21ec8>
  43636d:	mov    rdi,rbx
  436370:	call   425680 <strcmp@plt+0x21ec8>
  436375:	mov    rdi,rbx
  436378:	pop    rbx
  436379:	jmp    4037b0 <free@plt>
  43637e:	xchg   ax,ax
  436380:	push   rbp
  436381:	push   rbx
  436382:	lea    rbx,[rip+0x3d7f7]        # 473b80 <strcmp@plt+0x703c8>
  436389:	sub    rsp,0x8
  43638d:	mov    eax,DWORD PTR [rip+0x3d97d]        # 473d10 <strcmp@plt+0x70558>
  436393:	add    eax,0x1
  436396:	mov    edx,eax
  436398:	shr    edx,0x1f
  43639b:	add    eax,edx
  43639d:	and    eax,0x1
  4363a0:	sub    eax,edx
  4363a2:	test   rdi,rdi
  4363a5:	mov    DWORD PTR [rip+0x3d965],eax        # 473d10 <strcmp@plt+0x70558>
  4363ab:	cdqe   
  4363ad:	lea    rax,[rax+rax*4]
  4363b1:	lea    rax,[rax+rax*4]
  4363b5:	lea    rax,[rbx+rax*8]
  4363b9:	mov    BYTE PTR [rax],0x0
  4363bc:	je     436858 <strcmp@plt+0x330a0>
  4363c2:	mov    rbp,rdi
  4363c5:	call   424890 <strcmp@plt+0x210d8>
  4363ca:	movsxd rdx,DWORD PTR [rip+0x3d93f]        # 473d10 <strcmp@plt+0x70558>
  4363d1:	mov    r9,rax
  4363d4:	lea    r8,[rip+0x1a696]        # 450a71 <strcmp@plt+0x4d2b9>
  4363db:	mov    rcx,0xffffffffffffffff
  4363e2:	mov    esi,0xc8
  4363e7:	lea    rdx,[rdx+rdx*4]
  4363eb:	lea    rax,[rdx+rdx*4]
  4363ef:	mov    edx,0x1
  4363f4:	lea    rdi,[rbx+rax*8]
  4363f8:	xor    eax,eax
  4363fa:	call   4032a0 <__snprintf_chk@plt>
  4363ff:	lea    rdi,[rbp+0x20]
  436403:	call   424890 <strcmp@plt+0x210d8>
  436408:	movsxd rdx,DWORD PTR [rip+0x3d901]        # 473d10 <strcmp@plt+0x70558>
  43640f:	lea    rdx,[rdx+rdx*4]
  436413:	lea    rdx,[rdx+rdx*4]
  436417:	lea    rdi,[rbx+rdx*8]
  43641b:	mov    rcx,rdi
  43641e:	mov    esi,DWORD PTR [rcx]
  436420:	add    rcx,0x4
  436424:	lea    edx,[rsi-0x1010101]
  43642a:	andn   edx,esi,edx
  43642f:	and    edx,0x80808080
  436435:	je     43641e <strcmp@plt+0x32c66>
  436437:	mov    esi,edx
  436439:	lea    r8,[rip+0x1a640]        # 450a80 <strcmp@plt+0x4d2c8>
  436440:	mov    r9,rax
  436443:	shr    esi,0x10
  436446:	test   edx,0x8080
  43644c:	cmove  edx,esi
  43644f:	lea    rsi,[rcx+0x2]
  436453:	cmove  rcx,rsi
  436457:	mov    esi,edx
  436459:	add    sil,dl
  43645c:	mov    esi,0xc8
  436461:	mov    edx,0x1
  436466:	sbb    rcx,0x3
  43646a:	xor    eax,eax
  43646c:	sub    rcx,rdi
  43646f:	add    rdi,rcx
  436472:	sub    rsi,rcx
  436475:	mov    rcx,0xffffffffffffffff
  43647c:	call   4032a0 <__snprintf_chk@plt>
  436481:	movsxd rax,DWORD PTR [rip+0x3d888]        # 473d10 <strcmp@plt+0x70558>
  436488:	lea    rax,[rax+rax*4]
  43648c:	lea    rax,[rax+rax*4]
  436490:	lea    rdx,[rbx+rax*8]
  436494:	mov    rdi,rdx
  436497:	mov    ecx,DWORD PTR [rdi]
  436499:	add    rdi,0x4
  43649d:	lea    eax,[rcx-0x1010101]
  4364a3:	andn   eax,ecx,eax
  4364a8:	and    eax,0x80808080
  4364ad:	je     436497 <strcmp@plt+0x32cdf>
  4364af:	mov    ecx,eax
  4364b1:	shr    ecx,0x10
  4364b4:	test   eax,0x8080
  4364b9:	cmove  eax,ecx
  4364bc:	lea    rcx,[rdi+0x2]
  4364c0:	mov    esi,eax
  4364c2:	cmove  rdi,rcx
  4364c6:	add    sil,al
  4364c9:	mov    esi,0xc8
  4364ce:	sbb    rdi,0x3
  4364d2:	xor    eax,eax
  4364d4:	sub    rdi,rdx
  4364d7:	sub    rsi,rdi
  4364da:	add    rdi,rdx
  4364dd:	lea    rdx,[rip+0x1a5ab]        # 450a8f <strcmp@plt+0x4d2d7>
  4364e4:	call   403640 <snprintf@plt>
  4364e9:	movzx  r9d,BYTE PTR [rbp+0x44]
  4364ee:	cmp    r9b,0x6
  4364f2:	je     436708 <strcmp@plt+0x32f50>
  4364f8:	cmp    r9b,0x11
  4364fc:	je     4367e8 <strcmp@plt+0x33030>
  436502:	cmp    r9b,0x1
  436506:	je     436778 <strcmp@plt+0x32fc0>
  43650c:	movsxd rax,DWORD PTR [rip+0x3d7fd]        # 473d10 <strcmp@plt+0x70558>
  436513:	lea    rax,[rax+rax*4]
  436517:	lea    rax,[rax+rax*4]
  43651b:	lea    rdx,[rbx+rax*8]
  43651f:	mov    rdi,rdx
  436522:	mov    ecx,DWORD PTR [rdi]
  436524:	add    rdi,0x4
  436528:	lea    eax,[rcx-0x1010101]
  43652e:	andn   eax,ecx,eax
  436533:	and    eax,0x80808080
  436538:	je     436522 <strcmp@plt+0x32d6a>
  43653a:	mov    ecx,eax
  43653c:	lea    r8,[rip+0x1a571]        # 450ab4 <strcmp@plt+0x4d2fc>
  436543:	shr    ecx,0x10
  436546:	test   eax,0x8080
  43654b:	cmove  eax,ecx
  43654e:	lea    rcx,[rdi+0x2]
  436552:	mov    esi,eax
  436554:	cmove  rdi,rcx
  436558:	add    sil,al
  43655b:	mov    esi,0xc8
  436560:	sbb    rdi,0x3
  436564:	mov    rcx,0xffffffffffffffff
  43656b:	xor    eax,eax
  43656d:	sub    rdi,rdx
  436570:	sub    rsi,rdi
  436573:	add    rdi,rdx
  436576:	mov    edx,0x1
  43657b:	call   4032a0 <__snprintf_chk@plt>
  436580:	movsxd rax,DWORD PTR [rip+0x3d789]        # 473d10 <strcmp@plt+0x70558>
  436587:	lea    rax,[rax+rax*4]
  43658b:	lea    rax,[rax+rax*4]
  43658f:	lea    rdi,[rbx+rax*8]
  436593:	mov    rdx,rdi
  436596:	mov    ecx,DWORD PTR [rdx]
  436598:	add    rdx,0x4
  43659c:	lea    eax,[rcx-0x1010101]
  4365a2:	andn   eax,ecx,eax
  4365a7:	and    eax,0x80808080
  4365ac:	je     436596 <strcmp@plt+0x32dde>
  4365ae:	mov    ecx,eax
  4365b0:	movzx  r9d,WORD PTR [rbp+0x40]
  4365b5:	lea    r8,[rip+0x1a4ee]        # 450aaa <strcmp@plt+0x4d2f2>
  4365bc:	shr    ecx,0x10
  4365bf:	test   eax,0x8080
  4365c4:	cmove  eax,ecx
  4365c7:	lea    rcx,[rdx+0x2]
  4365cb:	mov    esi,eax
  4365cd:	cmove  rdx,rcx
  4365d1:	add    sil,al
  4365d4:	mov    esi,0xc8
  4365d9:	sbb    rdx,0x3
  4365dd:	mov    rcx,0xffffffffffffffff
  4365e4:	xor    eax,eax
  4365e6:	sub    rdx,rdi
  4365e9:	add    rdi,rdx
  4365ec:	sub    rsi,rdx
  4365ef:	mov    edx,0x1
  4365f4:	call   4032a0 <__snprintf_chk@plt>
  4365f9:	movsxd rax,DWORD PTR [rip+0x3d710]        # 473d10 <strcmp@plt+0x70558>
  436600:	lea    rax,[rax+rax*4]
  436604:	lea    rax,[rax+rax*4]
  436608:	lea    rdx,[rbx+rax*8]
  43660c:	mov    rdi,rdx
  43660f:	mov    ecx,DWORD PTR [rdi]
  436611:	add    rdi,0x4
  436615:	lea    eax,[rcx-0x1010101]
  43661b:	andn   eax,ecx,eax
  436620:	and    eax,0x80808080
  436625:	je     43660f <strcmp@plt+0x32e57>
  436627:	mov    ecx,eax
  436629:	movzx  r9d,WORD PTR [rbp+0x42]
  43662e:	lea    r8,[rip+0x1a484]        # 450ab9 <strcmp@plt+0x4d301>
  436635:	shr    ecx,0x10
  436638:	test   eax,0x8080
  43663d:	cmove  eax,ecx
  436640:	lea    rcx,[rdi+0x2]
  436644:	mov    esi,eax
  436646:	cmove  rdi,rcx
  43664a:	add    sil,al
  43664d:	mov    esi,0xc8
  436652:	sbb    rdi,0x3
  436656:	mov    rcx,0xffffffffffffffff
  43665d:	xor    eax,eax
  43665f:	sub    rdi,rdx
  436662:	sub    rsi,rdi
  436665:	add    rdi,rdx
  436668:	mov    edx,0x1
  43666d:	call   4032a0 <__snprintf_chk@plt>
  436672:	movsxd rax,DWORD PTR [rip+0x3d697]        # 473d10 <strcmp@plt+0x70558>
  436679:	lea    rax,[rax+rax*4]
  43667d:	lea    rax,[rax+rax*4]
  436681:	lea    rdx,[rbx+rax*8]
  436685:	mov    rdi,rdx
  436688:	mov    ecx,DWORD PTR [rdi]
  43668a:	add    rdi,0x4
  43668e:	lea    eax,[rcx-0x1010101]
  436694:	andn   eax,ecx,eax
  436699:	and    eax,0x80808080
  43669e:	je     436688 <strcmp@plt+0x32ed0>
  4366a0:	mov    ecx,eax
  4366a2:	mov    r9d,DWORD PTR [rbp+0x48]
  4366a6:	lea    r8,[rip+0x1a41a]        # 450ac7 <strcmp@plt+0x4d30f>
  4366ad:	shr    ecx,0x10
  4366b0:	test   eax,0x8080
  4366b5:	cmove  eax,ecx
  4366b8:	lea    rcx,[rdi+0x2]
  4366bc:	mov    esi,eax
  4366be:	cmove  rdi,rcx
  4366c2:	add    sil,al
  4366c5:	mov    esi,0xc8
  4366ca:	sbb    rdi,0x3
  4366ce:	mov    rcx,0xffffffffffffffff
  4366d5:	xor    eax,eax
  4366d7:	sub    rdi,rdx
  4366da:	sub    rsi,rdi
  4366dd:	add    rdi,rdx
  4366e0:	mov    edx,0x1
  4366e5:	call   4032a0 <__snprintf_chk@plt>
  4366ea:	movsxd rax,DWORD PTR [rip+0x3d61f]        # 473d10 <strcmp@plt+0x70558>
  4366f1:	add    rsp,0x8
  4366f5:	lea    rax,[rax+rax*4]
  4366f9:	lea    rax,[rax+rax*4]
  4366fd:	lea    rax,[rbx+rax*8]
  436701:	pop    rbx
  436702:	pop    rbp
  436703:	ret    
  436704:	nop    DWORD PTR [rax+0x0]
  436708:	movsxd rax,DWORD PTR [rip+0x3d601]        # 473d10 <strcmp@plt+0x70558>
  43670f:	lea    rax,[rax+rax*4]
  436713:	lea    rax,[rax+rax*4]
  436717:	lea    rdx,[rbx+rax*8]
  43671b:	mov    rdi,rdx
  43671e:	mov    ecx,DWORD PTR [rdi]
  436720:	add    rdi,0x4
  436724:	lea    eax,[rcx-0x1010101]
  43672a:	andn   eax,ecx,eax
  43672f:	and    eax,0x80808080
  436734:	je     43671e <strcmp@plt+0x32f66>
  436736:	mov    ecx,eax
  436738:	shr    ecx,0x10
  43673b:	test   eax,0x8080
  436740:	cmove  eax,ecx
  436743:	lea    rcx,[rdi+0x2]
  436747:	mov    esi,eax
  436749:	cmove  rdi,rcx
  43674d:	add    sil,al
  436750:	mov    esi,0xc8
  436755:	sbb    rdi,0x3
  436759:	xor    eax,eax
  43675b:	sub    rdi,rdx
  43675e:	sub    rsi,rdi
  436761:	add    rdi,rdx
  436764:	lea    rdx,[rip+0x1a332]        # 450a9d <strcmp@plt+0x4d2e5>
  43676b:	call   403640 <snprintf@plt>
  436770:	jmp    436580 <strcmp@plt+0x32dc8>
  436775:	nop    DWORD PTR [rax]
  436778:	movsxd rax,DWORD PTR [rip+0x3d591]        # 473d10 <strcmp@plt+0x70558>
  43677f:	lea    rax,[rax+rax*4]
  436783:	lea    rax,[rax+rax*4]
  436787:	lea    rdx,[rbx+rax*8]
  43678b:	mov    rdi,rdx
  43678e:	mov    ecx,DWORD PTR [rdi]
  436790:	add    rdi,0x4
  436794:	lea    eax,[rcx-0x1010101]
  43679a:	andn   eax,ecx,eax
  43679f:	and    eax,0x80808080
  4367a4:	je     43678e <strcmp@plt+0x32fd6>
  4367a6:	mov    ecx,eax
  4367a8:	shr    ecx,0x10
  4367ab:	test   eax,0x8080
  4367b0:	cmove  eax,ecx
  4367b3:	lea    rcx,[rdi+0x2]
  4367b7:	mov    esi,eax
  4367b9:	cmove  rdi,rcx
  4367bd:	add    sil,al
  4367c0:	mov    esi,0xc8
  4367c5:	sbb    rdi,0x3
  4367c9:	xor    eax,eax
  4367cb:	sub    rdi,rdx
  4367ce:	sub    rsi,rdi
  4367d1:	add    rdi,rdx
  4367d4:	lea    rdx,[rip+0x1a2c8]        # 450aa3 <strcmp@plt+0x4d2eb>
  4367db:	call   403640 <snprintf@plt>
  4367e0:	jmp    436580 <strcmp@plt+0x32dc8>
  4367e5:	nop    DWORD PTR [rax]
  4367e8:	movsxd rax,DWORD PTR [rip+0x3d521]        # 473d10 <strcmp@plt+0x70558>
  4367ef:	lea    rax,[rax+rax*4]
  4367f3:	lea    rax,[rax+rax*4]
  4367f7:	lea    rdx,[rbx+rax*8]
  4367fb:	mov    rdi,rdx
  4367fe:	mov    ecx,DWORD PTR [rdi]
  436800:	add    rdi,0x4
  436804:	lea    eax,[rcx-0x1010101]
  43680a:	andn   eax,ecx,eax
  43680f:	and    eax,0x80808080
  436814:	je     4367fe <strcmp@plt+0x33046>
  436816:	mov    ecx,eax
  436818:	shr    ecx,0x10
  43681b:	test   eax,0x8080
  436820:	cmove  eax,ecx
  436823:	lea    rcx,[rdi+0x2]
  436827:	mov    esi,eax
  436829:	cmove  rdi,rcx
  43682d:	add    sil,al
  436830:	mov    esi,0xc8
  436835:	sbb    rdi,0x3
  436839:	xor    eax,eax
  43683b:	sub    rdi,rdx
  43683e:	sub    rsi,rdi
  436841:	add    rdi,rdx
  436844:	lea    rdx,[rip+0x1a24c]        # 450a97 <strcmp@plt+0x4d2df>
  43684b:	call   403640 <snprintf@plt>
  436850:	jmp    436580 <strcmp@plt+0x32dc8>
  436855:	nop    DWORD PTR [rax]
  436858:	mov    edx,0x5f4c
  43685d:	mov    DWORD PTR [rax],0x4c554e5f
  436863:	mov    BYTE PTR [rax+0x6],0x0
  436867:	mov    WORD PTR [rax+0x4],dx
  43686b:	add    rsp,0x8
  43686f:	pop    rbx
  436870:	pop    rbp
  436871:	ret    
  436872:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43687d:	nop    DWORD PTR [rax]
  436880:	xor    eax,eax
  436882:	cmp    BYTE PTR [rdi+0x44],0x11
  436886:	je     436890 <strcmp@plt+0x330d8>
  436888:	repz ret 
  43688a:	nop    WORD PTR [rax+rax*1+0x0]
  436890:	movzx  edx,WORD PTR [rdi+0x42]
  436894:	mov    eax,0x1
  436899:	cmp    dx,0x10f6
  43689e:	je     436888 <strcmp@plt+0x330d0>
  4368a0:	movzx  eax,WORD PTR [rdi+0x40]
  4368a4:	sub    ax,0x10f5
  4368a8:	cmp    ax,0x1
  4368ac:	seta   al
  4368af:	cmp    dx,0x10f5
  4368b4:	setne  dl
  4368b7:	and    eax,edx
  4368b9:	xor    eax,0x1
  4368bc:	movzx  eax,al
  4368bf:	ret    
  4368c0:	movzx  ecx,BYTE PTR [rdi]
  4368c3:	and    ecx,0xfffffff0
  4368c6:	cmp    cl,0x40
  4368c9:	je     436900 <strcmp@plt+0x33148>
  4368cb:	xor    eax,eax
  4368cd:	cmp    cl,0x60
  4368d0:	je     4368d8 <strcmp@plt+0x33120>
  4368d2:	ret    
  4368d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4368d8:	test   esi,esi
  4368da:	je     4368e0 <strcmp@plt+0x33128>
  4368dc:	mov    BYTE PTR [rdi+0x7],sil
  4368e0:	mov    eax,DWORD PTR [rdi]
  4368e2:	shl    edx,0x14
  4368e5:	and    edx,0xff00000
  4368eb:	bswap  edx
  4368ed:	and    eax,0xffff0ff0
  4368f2:	or     edx,eax
  4368f4:	mov    eax,0x1
  4368f9:	mov    DWORD PTR [rdi],edx
  4368fb:	ret    
  4368fc:	nop    DWORD PTR [rax+0x0]
  436900:	test   esi,esi
  436902:	push   rbx
  436903:	je     436909 <strcmp@plt+0x33151>
  436905:	mov    BYTE PTR [rdi+0x8],sil
  436909:	xor    eax,eax
  43690b:	mov    rbx,rdi
  43690e:	mov    BYTE PTR [rdi+0x1],dl
  436911:	mov    WORD PTR [rdi+0xa],ax
  436915:	mov    esi,0x14
  43691a:	call   42d230 <strcmp@plt+0x29a78>
  43691f:	mov    WORD PTR [rbx+0xa],ax
  436923:	mov    eax,0x1
  436928:	pop    rbx
  436929:	ret    
  43692a:	nop    WORD PTR [rax+rax*1+0x0]
  436930:	movzx  eax,BYTE PTR [rdi]
  436933:	shr    al,0x4
  436936:	cmp    al,0x4
  436938:	je     436968 <strcmp@plt+0x331b0>
  43693a:	cmp    al,0x6
  43693c:	jne    436960 <strcmp@plt+0x331a8>
  43693e:	movzx  eax,BYTE PTR [rdi+0x7]
  436942:	mov    DWORD PTR [rsi],eax
  436944:	movbe  eax,DWORD PTR [rdi]
  436948:	shr    eax,0x14
  43694b:	and    eax,0xff
  436950:	mov    DWORD PTR [rdx],eax
  436952:	mov    eax,0x1
  436957:	ret    
  436958:	nop    DWORD PTR [rax+rax*1+0x0]
  436960:	xor    eax,eax
  436962:	ret    
  436963:	nop    DWORD PTR [rax+rax*1+0x0]
  436968:	movzx  eax,BYTE PTR [rdi+0x1]
  43696c:	mov    DWORD PTR [rdx],eax
  43696e:	movzx  eax,BYTE PTR [rdi+0x8]
  436972:	mov    DWORD PTR [rsi],eax
  436974:	mov    eax,0x1
  436979:	ret    
  43697a:	nop    WORD PTR [rax+rax*1+0x0]
  436980:	push   r13
  436982:	push   r12
  436984:	mov    r13,rsi
  436987:	push   rbp
  436988:	push   rbx
  436989:	mov    rbx,rdi
  43698c:	mov    rdi,rsi
  43698f:	mov    r12,rdx
  436992:	mov    ebp,ecx
  436994:	sub    rsp,0x8
  436998:	call   4251c0 <strcmp@plt+0x21a08>
  43699d:	cmp    ax,0x2
  4369a1:	je     436a20 <strcmp@plt+0x33268>
  4369a3:	cmp    ax,0xa
  4369a7:	jne    436a00 <strcmp@plt+0x33248>
  4369a9:	rol    bp,0x8
  4369ad:	mov    rdi,r13
  4369b0:	mov    BYTE PTR [rbx+0x7],0xff
  4369b4:	mov    WORD PTR [rbx+0x4],bp
  4369b8:	mov    BYTE PTR [rbx],0x60
  4369bb:	mov    BYTE PTR [rbx+0x6],0x11
  4369bf:	call   4257f0 <strcmp@plt+0x22038>
  4369c4:	mov    rdx,QWORD PTR [rax+0x8]
  4369c8:	mov    rax,QWORD PTR [rax]
  4369cb:	mov    rdi,r12
  4369ce:	mov    QWORD PTR [rbx+0x10],rdx
  4369d2:	mov    QWORD PTR [rbx+0x8],rax
  4369d6:	call   4257f0 <strcmp@plt+0x22038>
  4369db:	mov    rdx,QWORD PTR [rax+0x8]
  4369df:	mov    rax,QWORD PTR [rax]
  4369e2:	mov    QWORD PTR [rbx+0x20],rdx
  4369e6:	mov    QWORD PTR [rbx+0x18],rax
  4369ea:	add    rsp,0x8
  4369ee:	lea    rax,[rbx+0x28]
  4369f2:	pop    rbx
  4369f3:	pop    rbp
  4369f4:	pop    r12
  4369f6:	pop    r13
  4369f8:	ret    
  4369f9:	nop    DWORD PTR [rax+0x0]
  436a00:	mov    rax,0x468e3c
  436a07:	cmp    DWORD PTR [rax],0x1
  436a0a:	jg     436aa0 <strcmp@plt+0x332e8>
  436a10:	xor    eax,eax
  436a12:	add    rsp,0x8
  436a16:	pop    rbx
  436a17:	pop    rbp
  436a18:	pop    r12
  436a1a:	pop    r13
  436a1c:	ret    
  436a1d:	nop    DWORD PTR [rax]
  436a20:	mov    rdx,0x473ac0
  436a27:	mov    BYTE PTR [rbx],0x45
  436a2a:	add    ebp,0x14
  436a2d:	mov    BYTE PTR [rbx+0x1],0x0
  436a31:	rol    bp,0x8
  436a35:	mov    rdi,r13
  436a38:	mov    WORD PTR [rbx+0x2],bp
  436a3c:	mov    BYTE PTR [rbx+0x8],0xff
  436a40:	movzx  eax,WORD PTR [rdx]
  436a43:	mov    BYTE PTR [rbx+0x9],0x11
  436a47:	add    eax,0x1
  436a4a:	mov    WORD PTR [rdx],ax
  436a4d:	rol    ax,0x8
  436a51:	mov    WORD PTR [rbx+0x4],ax
  436a55:	xor    eax,eax
  436a57:	mov    WORD PTR [rbx+0x6],ax
  436a5b:	call   4257e0 <strcmp@plt+0x22028>
  436a60:	mov    eax,DWORD PTR [rax]
  436a62:	mov    rdi,r12
  436a65:	mov    DWORD PTR [rbx+0xc],eax
  436a68:	call   4257e0 <strcmp@plt+0x22028>
  436a6d:	mov    eax,DWORD PTR [rax]
  436a6f:	xor    edx,edx
  436a71:	mov    rdi,rbx
  436a74:	mov    WORD PTR [rbx+0xa],dx
  436a78:	mov    esi,0x14
  436a7d:	mov    DWORD PTR [rbx+0x10],eax
  436a80:	call   42d230 <strcmp@plt+0x29a78>
  436a85:	mov    WORD PTR [rbx+0xa],ax
  436a89:	add    rsp,0x8
  436a8d:	lea    rax,[rbx+0x14]
  436a91:	pop    rbx
  436a92:	pop    rbp
  436a93:	pop    r12
  436a95:	pop    r13
  436a97:	ret    
  436a98:	nop    DWORD PTR [rax+rax*1+0x0]
  436aa0:	mov    rdi,r13
  436aa3:	call   4251c0 <strcmp@plt+0x21a08>
  436aa8:	lea    rsi,[rip+0x19e81]        # 450930 <strcmp@plt+0x4d178>
  436aaf:	movzx  edx,ax
  436ab2:	mov    edi,0x6
  436ab7:	xor    eax,eax
  436ab9:	call   4306a0 <strcmp@plt+0x2cee8>
  436abe:	xor    eax,eax
  436ac0:	jmp    436a12 <strcmp@plt+0x3325a>
  436ac5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  436ad0:	push   r15
  436ad2:	push   r14
  436ad4:	mov    r15d,r8d
  436ad7:	push   r13
  436ad9:	push   r12
  436adb:	mov    r13d,esi
  436ade:	push   rbp
  436adf:	push   rbx
  436ae0:	mov    rbp,rcx
  436ae3:	mov    rbx,rdx
  436ae6:	mov    r14d,r9d
  436ae9:	sub    rsp,0x18
  436aed:	mov    QWORD PTR [rsp],rdi
  436af1:	mov    rdi,rdx
  436af4:	call   4251c0 <strcmp@plt+0x21a08>
  436af9:	mov    rdi,rbp
  436afc:	mov    r12d,eax
  436aff:	call   4251c0 <strcmp@plt+0x21a08>
  436b04:	cmp    r12w,ax
  436b08:	je     436b80 <strcmp@plt+0x333c8>
  436b0a:	mov    rax,0x468e3c
  436b11:	cmp    DWORD PTR [rax],0x1
  436b14:	jg     436b30 <strcmp@plt+0x33378>
  436b16:	xor    r12d,r12d
  436b19:	add    rsp,0x18
  436b1d:	mov    rax,r12
  436b20:	pop    rbx
  436b21:	pop    rbp
  436b22:	pop    r12
  436b24:	pop    r13
  436b26:	pop    r14
  436b28:	pop    r15
  436b2a:	ret    
  436b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  436b30:	mov    rdi,rbp
  436b33:	call   424890 <strcmp@plt+0x210d8>
  436b38:	mov    rdi,rbp
  436b3b:	mov    r13,rax
  436b3e:	call   4251c0 <strcmp@plt+0x21a08>
  436b43:	mov    rdi,rbx
  436b46:	mov    r12d,eax
  436b49:	call   424890 <strcmp@plt+0x210d8>
  436b4e:	mov    rdi,rbx
  436b51:	mov    rbp,rax
  436b54:	call   4251c0 <strcmp@plt+0x21a08>
  436b59:	lea    rsi,[rip+0x19e08]        # 450968 <strcmp@plt+0x4d1b0>
  436b60:	movzx  edx,ax
  436b63:	movzx  r8d,r12w
  436b67:	mov    r9,r13
  436b6a:	mov    rcx,rbp
  436b6d:	mov    edi,0x6
  436b72:	xor    eax,eax
  436b74:	xor    r12d,r12d
  436b77:	call   4306a0 <strcmp@plt+0x2cee8>
  436b7c:	jmp    436b19 <strcmp@plt+0x33361>
  436b7e:	xchg   ax,ax
  436b80:	mov    rdi,rbx
  436b83:	call   4251c0 <strcmp@plt+0x21a08>
  436b88:	cmp    ax,0x2
  436b8c:	je     436bd8 <strcmp@plt+0x33420>
  436b8e:	mov    rdi,rbx
  436b91:	call   4251c0 <strcmp@plt+0x21a08>
  436b96:	cmp    ax,0xa
  436b9a:	je     436bd8 <strcmp@plt+0x33420>
  436b9c:	mov    rax,0x468e3c
  436ba3:	cmp    DWORD PTR [rax],0x1
  436ba6:	jle    436b16 <strcmp@plt+0x3335e>
  436bac:	mov    rdi,rbx
  436baf:	xor    r12d,r12d
  436bb2:	call   4251c0 <strcmp@plt+0x21a08>
  436bb7:	lea    rsi,[rip+0x19dea]        # 4509a8 <strcmp@plt+0x4d1f0>
  436bbe:	movzx  edx,ax
  436bc1:	mov    edi,0x6
  436bc6:	xor    eax,eax
  436bc8:	call   4306a0 <strcmp@plt+0x2cee8>
  436bcd:	jmp    436b19 <strcmp@plt+0x33361>
  436bd2:	nop    WORD PTR [rax+rax*1+0x0]
  436bd8:	mov    rdi,rbx
  436bdb:	call   4251c0 <strcmp@plt+0x21a08>
  436be0:	movzx  edi,ax
  436be3:	call   426140 <strcmp@plt+0x22988>
  436be8:	lea    edi,[rax+r13*1+0x8]
  436bed:	mov    rax,QWORD PTR [rsp+0x50]
  436bf2:	mov    DWORD PTR [rax],edi
  436bf4:	movsxd rdi,edi
  436bf7:	call   403530 <malloc@plt>
  436bfc:	test   rax,rax
  436bff:	mov    r12,rax
  436c02:	je     436ca0 <strcmp@plt+0x334e8>
  436c08:	mov    rsi,QWORD PTR [rsp+0x50]
  436c0d:	lea    eax,[r13+0x8]
  436c11:	mov    rdi,r12
  436c14:	mov    DWORD PTR [rsp+0xc],eax
  436c18:	movsxd rdx,DWORD PTR [rsi]
  436c1b:	xor    esi,esi
  436c1d:	call   403250 <memset@plt>
  436c22:	lea    ecx,[r13+0x8]
  436c26:	mov    rdx,rbp
  436c29:	mov    rsi,rbx
  436c2c:	mov    rdi,r12
  436c2f:	call   436980 <strcmp@plt+0x331c8>
  436c34:	test   rax,rax
  436c37:	mov    rbp,rax
  436c3a:	je     436cd7 <strcmp@plt+0x3351f>
  436c40:	rol    r14w,0x8
  436c45:	rol    r15w,0x8
  436c4a:	mov    rsi,QWORD PTR [rsp]
  436c4e:	mov    WORD PTR [rax+0x2],r14w
  436c53:	lea    r14d,[r13+0x8]
  436c57:	mov    WORD PTR [rax],r15w
  436c5b:	lea    rdi,[rbp+0x8]
  436c5f:	movsxd rdx,r13d
  436c62:	mov    eax,r14d
  436c65:	rol    ax,0x8
  436c69:	mov    WORD PTR [rbp+0x4],ax
  436c6d:	xor    eax,eax
  436c6f:	mov    WORD PTR [rbp+0x6],ax
  436c73:	call   403340 <memcpy@plt>
  436c78:	mov    rdi,rbx
  436c7b:	call   4251c0 <strcmp@plt+0x21a08>
  436c80:	mov    rdx,r12
  436c83:	movzx  ecx,ax
  436c86:	mov    esi,r14d
  436c89:	mov    rdi,rbp
  436c8c:	call   42d400 <strcmp@plt+0x29c48>
  436c91:	cmp    ax,0xffff
  436c95:	je     436cf6 <strcmp@plt+0x3353e>
  436c97:	mov    WORD PTR [rbp+0x6],ax
  436c9b:	jmp    436b19 <strcmp@plt+0x33361>
  436ca0:	mov    rax,0x468e3c
  436ca7:	cmp    DWORD PTR [rax],0x1
  436caa:	jle    436b16 <strcmp@plt+0x3335e>
  436cb0:	call   403050 <__errno_location@plt>
  436cb5:	mov    edi,DWORD PTR [rax]
  436cb7:	call   403170 <strerror@plt>
  436cbc:	lea    rsi,[rip+0x19d0d]        # 4509d0 <strcmp@plt+0x4d218>
  436cc3:	mov    rdx,rax
  436cc6:	mov    edi,0x6
  436ccb:	xor    eax,eax
  436ccd:	call   4306a0 <strcmp@plt+0x2cee8>
  436cd2:	jmp    436b19 <strcmp@plt+0x33361>
  436cd7:	mov    rax,0x468e3c
  436cde:	cmp    DWORD PTR [rax],0x1
  436ce1:	jle    436cf6 <strcmp@plt+0x3353e>
  436ce3:	lea    rsi,[rip+0x19d36]        # 450a20 <strcmp@plt+0x4d268>
  436cea:	mov    edi,0x6
  436cef:	xor    eax,eax
  436cf1:	call   4306a0 <strcmp@plt+0x2cee8>
  436cf6:	mov    rdi,r12
  436cf9:	call   4037b0 <free@plt>
  436cfe:	jmp    436b16 <strcmp@plt+0x3335e>
  436d03:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  436d0e:	xchg   ax,ax
  436d10:	push   r12
  436d12:	mov    BYTE PTR [rip+0x3cdc7],0x0        # 473ae0 <strcmp@plt+0x70328>
  436d19:	push   rbp
  436d1a:	push   rbx
  436d1b:	mov    rbp,rsi
  436d1e:	movzx  eax,BYTE PTR [rdi]
  436d21:	mov    rbx,rdi
  436d24:	shr    al,0x4
  436d27:	cmp    al,0x4
  436d29:	je     436d90 <strcmp@plt+0x335d8>
  436d2b:	cmp    al,0x6
  436d2d:	je     436d60 <strcmp@plt+0x335a8>
  436d2f:	lea    r9,[rip+0x19d9e]        # 450ad4 <strcmp@plt+0x4d31c>
  436d36:	mov    r8,r9
  436d39:	lea    rdi,[rip+0x3cda0]        # 473ae0 <strcmp@plt+0x70328>
  436d40:	mov    rcx,rbp
  436d43:	mov    edx,0x96
  436d48:	mov    esi,0x1
  436d4d:	xor    eax,eax
  436d4f:	call   403290 <__sprintf_chk@plt>
  436d54:	pop    rbx
  436d55:	lea    rax,[rip+0x3cd84]        # 473ae0 <strcmp@plt+0x70328>
  436d5c:	pop    rbp
  436d5d:	pop    r12
  436d5f:	ret    
  436d60:	lea    rdi,[rdi+0x18]
  436d64:	mov    esi,0xa
  436d69:	call   425f00 <strcmp@plt+0x22748>
  436d6e:	lea    rdi,[rbx+0x8]
  436d72:	mov    r12,rax
  436d75:	mov    esi,0xa
  436d7a:	call   425f00 <strcmp@plt+0x22748>
  436d7f:	mov    r9,r12
  436d82:	mov    r8,rax
  436d85:	jmp    436d39 <strcmp@plt+0x33581>
  436d87:	nop    WORD PTR [rax+rax*1+0x0]
  436d90:	lea    rdi,[rdi+0x10]
  436d94:	mov    esi,0x2
  436d99:	call   425f00 <strcmp@plt+0x22748>
  436d9e:	lea    rdi,[rbx+0xc]
  436da2:	mov    r12,rax
  436da5:	mov    esi,0x2
  436daa:	call   425f00 <strcmp@plt+0x22748>
  436daf:	mov    r9,r12
  436db2:	mov    r8,rax
  436db5:	jmp    436d39 <strcmp@plt+0x33581>
  436db7:	nop    WORD PTR [rax+rax*1+0x0]
  436dc0:	sub    rsp,0x18
  436dc4:	bswap  esi
  436dc6:	mov    rax,QWORD PTR fs:0x28
  436dcf:	mov    QWORD PTR [rsp+0x8],rax
  436dd4:	xor    eax,eax
  436dd6:	mov    eax,esi
  436dd8:	mov    DWORD PTR [rsp+0x4],esi
  436ddc:	shr    ax,0x8
  436de0:	mov    BYTE PTR [rdi],al
  436de2:	mov    eax,esi
  436de4:	shr    esi,0x18
  436de7:	shr    eax,0x10
  436dea:	mov    BYTE PTR [rdi+0x2],sil
  436dee:	mov    BYTE PTR [rdi+0x1],al
  436df1:	mov    rax,QWORD PTR [rsp+0x8]
  436df6:	xor    rax,QWORD PTR fs:0x28
  436dff:	jne    436e06 <strcmp@plt+0x3364e>
  436e01:	add    rsp,0x18
  436e05:	ret    
  436e06:	call   403460 <__stack_chk_fail@plt>
  436e0b:	nop    DWORD PTR [rax+rax*1+0x0]
  436e10:	movzx  eax,BYTE PTR [rdi]
  436e13:	movzx  edx,BYTE PTR [rdi+0x1]
  436e17:	shl    eax,0x10
  436e1a:	shl    edx,0x8
  436e1d:	or     eax,edx
  436e1f:	movzx  edx,BYTE PTR [rdi+0x2]
  436e23:	or     eax,edx
  436e25:	ret    
  436e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436e30:	push   r12
  436e32:	push   rbp
  436e33:	push   rbx
  436e34:	mov    rbx,rdi
  436e37:	sub    rsp,0x40
  436e3b:	mov    rax,QWORD PTR fs:0x28
  436e44:	mov    QWORD PTR [rsp+0x38],rax
  436e49:	xor    eax,eax
  436e4b:	cmp    DWORD PTR [rdi+0x18],0x2
  436e4f:	je     436ea0 <strcmp@plt+0x336e8>
  436e51:	mov    rax,0x468e3c
  436e58:	cmp    DWORD PTR [rax],0x1
  436e5b:	jg     436e80 <strcmp@plt+0x336c8>
  436e5d:	xor    ebx,ebx
  436e5f:	mov    rsi,QWORD PTR [rsp+0x38]
  436e64:	xor    rsi,QWORD PTR fs:0x28
  436e6d:	mov    rax,rbx
  436e70:	jne    43701f <strcmp@plt+0x33867>
  436e76:	add    rsp,0x40
  436e7a:	pop    rbx
  436e7b:	pop    rbp
  436e7c:	pop    r12
  436e7e:	ret    
  436e7f:	nop
  436e80:	call   424890 <strcmp@plt+0x210d8>
  436e85:	lea    rsi,[rip+0x19c54]        # 450ae0 <strcmp@plt+0x4d328>
  436e8c:	mov    rdx,rax
  436e8f:	mov    edi,0x6
  436e94:	xor    eax,eax
  436e96:	xor    ebx,ebx
  436e98:	call   4306a0 <strcmp@plt+0x2cee8>
  436e9d:	jmp    436e5f <strcmp@plt+0x336a7>
  436e9f:	nop
  436ea0:	call   4251c0 <strcmp@plt+0x21a08>
  436ea5:	cmp    ax,0x2
  436ea9:	je     436fb0 <strcmp@plt+0x337f8>
  436eaf:	cmp    ax,0xa
  436eb3:	jne    436f78 <strcmp@plt+0x337c0>
  436eb9:	mov    rdi,rbx
  436ebc:	mov    QWORD PTR [rsp+0x20],0x0
  436ec5:	mov    QWORD PTR [rsp+0x28],0x0
  436ece:	call   425170 <strcmp@plt+0x219b8>
  436ed3:	movzx  esi,ax
  436ed6:	and    eax,0x7
  436ed9:	lea    rbp,[rsp+0x20]
  436ede:	sar    esi,0x3
  436ee1:	test   esi,esi
  436ee3:	je     436efc <strcmp@plt+0x33744>
  436ee5:	lea    ecx,[rsi-0x1]
  436ee8:	mov    rdx,rbp
  436eeb:	lea    rcx,[rbp+rcx*1+0x1]
  436ef0:	mov    BYTE PTR [rdx],0xff
  436ef3:	add    rdx,0x1
  436ef7:	cmp    rcx,rdx
  436efa:	jne    436ef0 <strcmp@plt+0x33738>
  436efc:	test   ax,ax
  436eff:	je     436f1c <strcmp@plt+0x33764>
  436f01:	movzx  eax,ax
  436f04:	mov    edx,0x8
  436f09:	movsxd rsi,esi
  436f0c:	sub    edx,eax
  436f0e:	mov    eax,0xff
  436f13:	shlx   eax,eax,edx
  436f18:	mov    BYTE PTR [rsp+rsi*1+0x20],al
  436f1c:	mov    rdi,rbx
  436f1f:	lea    r12,[rsp+0x10]
  436f24:	call   4249c0 <strcmp@plt+0x21208>
  436f29:	mov    rdi,rax
  436f2c:	call   4257f0 <strcmp@plt+0x22038>
  436f31:	xor    edx,edx
  436f33:	nop    DWORD PTR [rax+rax*1+0x0]
  436f38:	movzx  ecx,BYTE PTR [rax+rdx*1]
  436f3c:	and    cl,BYTE PTR [rbp+rdx*1+0x0]
  436f40:	mov    BYTE PTR [r12+rdx*1],cl
  436f44:	add    rdx,0x1
  436f48:	cmp    rdx,0x10
  436f4c:	jne    436f38 <strcmp@plt+0x33780>
  436f4e:	mov    edi,0x1
  436f53:	call   424670 <strcmp@plt+0x20eb8>
  436f58:	mov    rdi,rax
  436f5b:	mov    rbx,rax
  436f5e:	call   4249c0 <strcmp@plt+0x21208>
  436f63:	mov    rsi,r12
  436f66:	mov    rdi,rax
  436f69:	call   425940 <strcmp@plt+0x22188>
  436f6e:	jmp    436e5f <strcmp@plt+0x336a7>
  436f73:	nop    DWORD PTR [rax+rax*1+0x0]
  436f78:	mov    rax,0x468e3c
  436f7f:	cmp    DWORD PTR [rax],0x1
  436f82:	jle    436e5d <strcmp@plt+0x336a5>
  436f88:	mov    rdi,rbx
  436f8b:	call   4251c0 <strcmp@plt+0x21a08>
  436f90:	lea    rsi,[rip+0x19b81]        # 450b18 <strcmp@plt+0x4d360>
  436f97:	movzx  edx,ax
  436f9a:	mov    edi,0x6
  436f9f:	xor    eax,eax
  436fa1:	call   4306a0 <strcmp@plt+0x2cee8>
  436fa6:	jmp    436e5d <strcmp@plt+0x336a5>
  436fab:	nop    DWORD PTR [rax+rax*1+0x0]
  436fb0:	mov    rdi,rbx
  436fb3:	call   425170 <strcmp@plt+0x219b8>
  436fb8:	mov    rdi,rbx
  436fbb:	movzx  ebp,ax
  436fbe:	call   4249c0 <strcmp@plt+0x21208>
  436fc3:	mov    rdi,rax
  436fc6:	call   4257e0 <strcmp@plt+0x22028>
  436fcb:	xor    edx,edx
  436fcd:	test   ebp,ebp
  436fcf:	movbe  ecx,DWORD PTR [rax]
  436fd3:	je     436fea <strcmp@plt+0x33832>
  436fd5:	mov    edx,0x20
  436fda:	mov    eax,edx
  436fdc:	mov    edx,0xffffffff
  436fe1:	sub    eax,ebp
  436fe3:	shlx   edx,edx,eax
  436fe8:	and    edx,ecx
  436fea:	mov    edi,0x1
  436fef:	mov    DWORD PTR [rsp+0xc],edx
  436ff3:	call   424670 <strcmp@plt+0x20eb8>
  436ff8:	mov    rbx,rax
  436ffb:	movbe  eax,DWORD PTR [rsp+0xc]
  437001:	mov    rdi,rbx
  437004:	mov    DWORD PTR [rsp+0xc],eax
  437008:	call   4249c0 <strcmp@plt+0x21208>
  43700d:	lea    rsi,[rsp+0xc]
  437012:	mov    rdi,rax
  437015:	call   425930 <strcmp@plt+0x22178>
  43701a:	jmp    436e5f <strcmp@plt+0x336a7>
  43701f:	call   403460 <__stack_chk_fail@plt>
  437024:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43702f:	nop
  437030:	push   r13
  437032:	push   r12
  437034:	push   rbp
  437035:	push   rbx
  437036:	sub    rsp,0x48
  43703a:	mov    rax,QWORD PTR fs:0x28
  437043:	mov    QWORD PTR [rsp+0x38],rax
  437048:	xor    eax,eax
  43704a:	cmp    DWORD PTR [rsi+0x18],0x2
  43704e:	je     437078 <strcmp@plt+0x338c0>
  437050:	xor    eax,eax
  437052:	mov    rdx,QWORD PTR [rsp+0x38]
  437057:	xor    rdx,QWORD PTR fs:0x28
  437060:	jne    43711e <strcmp@plt+0x33966>
  437066:	add    rsp,0x48
  43706a:	pop    rbx
  43706b:	pop    rbp
  43706c:	pop    r12
  43706e:	pop    r13
  437070:	ret    
  437071:	nop    DWORD PTR [rax+0x0]
  437078:	cmp    DWORD PTR [rdi+0x18],0x1
  43707c:	mov    rbx,rdi
  43707f:	jne    437050 <strcmp@plt+0x33898>
  437081:	mov    QWORD PTR [rsp+0x8],rsi
  437086:	call   4251c0 <strcmp@plt+0x21a08>
  43708b:	mov    rsi,QWORD PTR [rsp+0x8]
  437090:	mov    ebp,eax
  437092:	mov    rdi,rsi
  437095:	call   4251c0 <strcmp@plt+0x21a08>
  43709a:	cmp    bp,ax
  43709d:	mov    rsi,QWORD PTR [rsp+0x8]
  4370a2:	jne    437050 <strcmp@plt+0x33898>
  4370a4:	mov    rdi,rsi
  4370a7:	lea    rbp,[rsp+0x10]
  4370ac:	call   436e30 <strcmp@plt+0x33678>
  4370b1:	mov    rsi,QWORD PTR [rsp+0x8]
  4370b6:	mov    r13,rax
  4370b9:	mov    rdi,rsi
  4370bc:	call   425170 <strcmp@plt+0x219b8>
  4370c1:	mov    rsi,rbx
  4370c4:	mov    rdi,rbp
  4370c7:	mov    r12d,eax
  4370ca:	call   424b00 <strcmp@plt+0x21348>
  4370cf:	mov    rdi,rbp
  4370d2:	call   424920 <strcmp@plt+0x21168>
  4370d7:	movzx  esi,r12b
  4370db:	mov    rdi,rbp
  4370de:	call   425300 <strcmp@plt+0x21b48>
  4370e3:	mov    rdi,rbp
  4370e6:	call   436e30 <strcmp@plt+0x33678>
  4370eb:	mov    rsi,r13
  4370ee:	mov    rdi,rax
  4370f1:	mov    rbx,rax
  4370f4:	call   424df0 <strcmp@plt+0x21638>
  4370f9:	test   eax,eax
  4370fb:	mov    rdi,r13
  4370fe:	sete   al
  437101:	movzx  eax,al
  437104:	mov    DWORD PTR [rsp+0x8],eax
  437108:	call   424750 <strcmp@plt+0x20f98>
  43710d:	mov    rdi,rbx
  437110:	call   424750 <strcmp@plt+0x20f98>
  437115:	mov    eax,DWORD PTR [rsp+0x8]
  437119:	jmp    437052 <strcmp@plt+0x3389a>
  43711e:	call   403460 <__stack_chk_fail@plt>
  437123:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43712e:	xchg   ax,ax
  437130:	mov    eax,DWORD PTR [rsi+0x18]
  437133:	cmp    DWORD PTR [rdi+0x18],eax
  437136:	je     437140 <strcmp@plt+0x33988>
  437138:	xor    eax,eax
  43713a:	ret    
  43713b:	nop    DWORD PTR [rax+rax*1+0x0]
  437140:	push   r13
  437142:	push   r12
  437144:	push   rbp
  437145:	push   rbx
  437146:	mov    rbx,rsi
  437149:	sub    rsp,0x18
  43714d:	call   425110 <strcmp@plt+0x21958>
  437152:	mov    rdi,rbx
  437155:	mov    rbp,rax
  437158:	call   425110 <strcmp@plt+0x21958>
  43715d:	test   rbp,rbp
  437160:	mov    rbx,rax
  437163:	je     437183 <strcmp@plt+0x339cb>
  437165:	test   rax,rax
  437168:	je     437183 <strcmp@plt+0x339cb>
  43716a:	mov    rdi,rbp
  43716d:	call   4251c0 <strcmp@plt+0x21a08>
  437172:	mov    rdi,rbx
  437175:	mov    r12d,eax
  437178:	call   4251c0 <strcmp@plt+0x21a08>
  43717d:	cmp    r12w,ax
  437181:	je     437190 <strcmp@plt+0x339d8>
  437183:	xor    eax,eax
  437185:	add    rsp,0x18
  437189:	pop    rbx
  43718a:	pop    rbp
  43718b:	pop    r12
  43718d:	pop    r13
  43718f:	ret    
  437190:	mov    rdi,rbp
  437193:	call   425170 <strcmp@plt+0x219b8>
  437198:	mov    rdi,rbx
  43719b:	mov    r13d,eax
  43719e:	call   425170 <strcmp@plt+0x219b8>
  4371a3:	cmp    ax,r13w
  4371a7:	mov    r12d,eax
  4371aa:	jb     437183 <strcmp@plt+0x339cb>
  4371ac:	mov    rdi,rbp
  4371af:	call   436e30 <strcmp@plt+0x33678>
  4371b4:	movzx  esi,r13b
  4371b8:	mov    rdi,rbx
  4371bb:	mov    rbp,rax
  4371be:	call   425300 <strcmp@plt+0x21b48>
  4371c3:	mov    rdi,rbx
  4371c6:	call   436e30 <strcmp@plt+0x33678>
  4371cb:	movzx  esi,r12b
  4371cf:	mov    r13,rax
  4371d2:	mov    rdi,rbx
  4371d5:	call   425300 <strcmp@plt+0x21b48>
  4371da:	mov    rsi,r13
  4371dd:	mov    rdi,rbp
  4371e0:	call   424df0 <strcmp@plt+0x21638>
  4371e5:	test   eax,eax
  4371e7:	mov    rdi,rbp
  4371ea:	sete   al
  4371ed:	movzx  eax,al
  4371f0:	mov    DWORD PTR [rsp+0xc],eax
  4371f4:	call   424750 <strcmp@plt+0x20f98>
  4371f9:	mov    rdi,r13
  4371fc:	call   424750 <strcmp@plt+0x20f98>
  437201:	mov    eax,DWORD PTR [rsp+0xc]
  437205:	jmp    437185 <strcmp@plt+0x339cd>
  43720a:	nop    WORD PTR [rax+rax*1+0x0]
  437210:	push   rbp
  437211:	push   rbx
  437212:	mov    rbp,rdi
  437215:	sub    rsp,0x8
  437219:	call   436e30 <strcmp@plt+0x33678>
  43721e:	test   rax,rax
  437221:	mov    rbx,rax
  437224:	je     437239 <strcmp@plt+0x33a81>
  437226:	mov    rdi,rbp
  437229:	call   425170 <strcmp@plt+0x219b8>
  43722e:	mov    rdi,rbx
  437231:	movzx  esi,al
  437234:	call   425300 <strcmp@plt+0x21b48>
  437239:	add    rsp,0x8
  43723d:	mov    rax,rbx
  437240:	pop    rbx
  437241:	pop    rbp
  437242:	ret    
  437243:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43724e:	xchg   ax,ax
  437250:	push   rbp
  437251:	push   rbx
  437252:	sub    rsp,0x8
  437256:	call   425110 <strcmp@plt+0x21958>
  43725b:	mov    rbx,rax
  43725e:	xor    eax,eax
  437260:	test   rbx,rbx
  437263:	je     437288 <strcmp@plt+0x33ad0>
  437265:	mov    rdi,rbx
  437268:	call   437210 <strcmp@plt+0x33a58>
  43726d:	mov    rdi,rbx
  437270:	mov    rbp,rax
  437273:	mov    rsi,rax
  437276:	call   424b00 <strcmp@plt+0x21348>
  43727b:	mov    rdi,rbp
  43727e:	call   424750 <strcmp@plt+0x20f98>
  437283:	mov    eax,0x1
  437288:	add    rsp,0x8
  43728c:	pop    rbx
  43728d:	pop    rbp
  43728e:	ret    
  43728f:	nop
  437290:	push   rbp
  437291:	push   rbx
  437292:	mov    rbp,rdi
  437295:	sub    rsp,0x8
  437299:	call   4251c0 <strcmp@plt+0x21a08>
  43729e:	movzx  eax,ax
  4372a1:	cmp    eax,0x2
  4372a4:	je     4372df <strcmp@plt+0x33b27>
  4372a6:	cmp    eax,0xa
  4372a9:	mov    ebx,0xffffffff
  4372ae:	jne    4372d6 <strcmp@plt+0x33b1e>
  4372b0:	mov    rdi,rbp
  4372b3:	call   4249c0 <strcmp@plt+0x21208>
  4372b8:	mov    rdi,rax
  4372bb:	call   4257f0 <strcmp@plt+0x22038>
  4372c0:	lea    rcx,[rax+0x10]
  4372c4:	nop    DWORD PTR [rax+0x0]
  4372c8:	movzx  edx,BYTE PTR [rax]
  4372cb:	add    rax,0x1
  4372cf:	add    ebx,edx
  4372d1:	cmp    rax,rcx
  4372d4:	jne    4372c8 <strcmp@plt+0x33b10>
  4372d6:	add    rsp,0x8
  4372da:	mov    eax,ebx
  4372dc:	pop    rbx
  4372dd:	pop    rbp
  4372de:	ret    
  4372df:	mov    rdi,rbp
  4372e2:	call   4257e0 <strcmp@plt+0x22028>
  4372e7:	mov    ebx,DWORD PTR [rax]
  4372e9:	jmp    4372d6 <strcmp@plt+0x33b1e>
  4372eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4372f0:	push   r15
  4372f2:	push   r14
  4372f4:	mov    r14d,ecx
  4372f7:	push   r13
  4372f9:	push   r12
  4372fb:	push   rbp
  4372fc:	push   rbx
  4372fd:	sub    rsp,0x1038
  437304:	mov    DWORD PTR [rsp+0x8],edi
  437308:	mov    DWORD PTR [rsp+0xc],esi
  43730c:	mov    edi,0x10
  437311:	mov    DWORD PTR [rsp+0x14],edx
  437315:	mov    esi,0x2
  43731a:	xor    edx,edx
  43731c:	mov    rax,QWORD PTR fs:0x28
  437325:	mov    QWORD PTR [rsp+0x1028],rax
  43732d:	xor    eax,eax
  43732f:	mov    DWORD PTR [rsp+0x10],r8d
  437334:	mov    DWORD PTR [rsp+0x18],r9d
  437339:	mov    r12,QWORD PTR [rsp+0x1070]
  437341:	mov    rbp,QWORD PTR [rsp+0x1078]
  437349:	call   4030e0 <socket@plt>
  43734e:	test   eax,eax
  437350:	mov    ebx,eax
  437352:	js     4375e8 <strcmp@plt+0x33e30>
  437358:	cmp    DWORD PTR [rsp+0x8],0x2
  43735d:	lea    r13,[rsp+0x20]
  437362:	mov    ecx,0x10
  437367:	mov    edx,0x4
  43736c:	mov    rdi,r13
  43736f:	cmovne edx,ecx
  437372:	xor    eax,eax
  437374:	mov    ecx,0x200
  437379:	test   r12,r12
  43737c:	rep stos QWORD PTR es:[rdi],rax
  43737f:	je     437560 <strcmp@plt+0x33da8>
  437385:	lea    ecx,[rdx+0x4]
  437388:	lea    rdi,[r13+0x20]
  43738c:	mov    r10d,0x2
  437392:	mov    rsi,r12
  437395:	mov    WORD PTR [rsp+0x3e],r10w
  43739b:	mov    WORD PTR [rsp+0x3c],cx
  4373a0:	mov    DWORD PTR [rsp+0x1c],ecx
  4373a4:	call   424bc0 <strcmp@plt+0x21408>
  4373a9:	movzx  edx,WORD PTR [rsp+0x3c]
  4373ae:	mov    rdi,r12
  4373b1:	lea    r12,[r13+0x1c]
  4373b5:	lea    r15d,[rdx+0xc]
  4373b9:	call   424a20 <strcmp@plt+0x21268>
  4373be:	mov    r9d,eax
  4373c1:	xor    eax,eax
  4373c3:	test   rbp,rbp
  4373c6:	mov    ecx,DWORD PTR [rsp+0x1c]
  4373ca:	je     437419 <strcmp@plt+0x33c61>
  4373cc:	cmp    r15d,0xc
  4373d0:	je     437575 <strcmp@plt+0x33dbd>
  4373d6:	movzx  eax,WORD PTR [rsp+0x3c]
  4373db:	lea    r12,[r13+rax*1+0x1c]
  4373e0:	mov    BYTE PTR [rsp+0x1c],r9b
  4373e5:	lea    rdi,[r12+0x4]
  4373ea:	mov    r9d,0x1
  4373f0:	mov    WORD PTR [r12+0x2],r9w
  4373f6:	mov    WORD PTR [r12],cx
  4373fb:	mov    rsi,rbp
  4373fe:	call   424bc0 <strcmp@plt+0x21408>
  437403:	movzx  eax,WORD PTR [r12]
  437408:	mov    rdi,rbp
  43740b:	add    r15d,eax
  43740e:	call   424a20 <strcmp@plt+0x21268>
  437413:	movzx  r9d,BYTE PTR [rsp+0x1c]
  437419:	mov    r8d,DWORD PTR [rsp+0x10]
  43741e:	test   r8d,r8d
  437421:	jne    437510 <strcmp@plt+0x33d58>
  437427:	mov    edx,DWORD PTR [rsp+0xc]
  43742b:	test   edx,edx
  43742d:	je     43745c <strcmp@plt+0x33ca4>
  43742f:	cmp    r15d,0xc
  437433:	jne    437550 <strcmp@plt+0x33d98>
  437439:	mov    esi,DWORD PTR [rsp+0xc]
  43743d:	mov    r11d,0x3
  437443:	mov    ebp,0x8
  437448:	mov    WORD PTR [r12+0x2],r11w
  43744e:	mov    WORD PTR [r12],bp
  437453:	add    r15d,0x8
  437457:	mov    DWORD PTR [r12+0x4],esi
  43745c:	cmp    DWORD PTR [rsp+0x14],0x20
  437461:	lea    edx,[r15+0x10]
  437465:	mov    r10d,0x5
  43746b:	mov    WORD PTR [rsp+0x26],r10w
  437471:	mov    DWORD PTR [rsp+0x20],edx
  437475:	je     437580 <strcmp@plt+0x33dc8>
  43747b:	mov    esi,0x21
  437480:	mov    WORD PTR [rsp+0x24],si
  437485:	test   r14b,r14b
  437488:	mov    BYTE PTR [rsp+0x31],al
  43748c:	mov    eax,0xfffffffe
  437491:	cmove  r14d,eax
  437495:	movzx  eax,BYTE PTR [rsp+0x18]
  43749a:	movzx  esi,BYTE PTR [rsp+0x8]
  43749f:	xor    ecx,ecx
  4374a1:	movsxd rdx,edx
  4374a4:	mov    edi,ebx
  4374a6:	mov    BYTE PTR [rsp+0x32],r9b
  4374ab:	mov    BYTE PTR [rsp+0x34],r14b
  4374b0:	mov    BYTE PTR [rsp+0x36],0x0
  4374b5:	mov    BYTE PTR [rsp+0x37],al
  4374b9:	mov    eax,DWORD PTR [rsp+0x1080]
  4374c0:	mov    BYTE PTR [rsp+0x30],sil
  4374c5:	mov    rsi,r13
  4374c8:	mov    DWORD PTR [rsp+0x38],eax
  4374cc:	call   403220 <send@plt>
  4374d1:	test   eax,eax
  4374d3:	js     4375b0 <strcmp@plt+0x33df8>
  4374d9:	mov    edi,ebx
  4374db:	call   403790 <close@plt>
  4374e0:	mov    rbx,QWORD PTR [rsp+0x1028]
  4374e8:	xor    rbx,QWORD PTR fs:0x28
  4374f1:	mov    eax,0x1
  4374f6:	jne    43764f <strcmp@plt+0x33e97>
  4374fc:	add    rsp,0x1038
  437503:	pop    rbx
  437504:	pop    rbp
  437505:	pop    r12
  437507:	pop    r13
  437509:	pop    r14
  43750b:	pop    r15
  43750d:	ret    
  43750e:	xchg   ax,ax
  437510:	cmp    r15d,0xc
  437514:	je     4375a0 <strcmp@plt+0x33de8>
  43751a:	movzx  ecx,WORD PTR [r12]
  43751f:	add    r15d,0x8
  437523:	add    r12,rcx
  437526:	mov    esi,0x8
  43752b:	mov    edi,DWORD PTR [rsp+0xc]
  43752f:	mov    ecx,0x6
  437534:	mov    WORD PTR [r12],si
  437539:	mov    esi,DWORD PTR [rsp+0x10]
  43753d:	mov    WORD PTR [r12+0x2],cx
  437543:	test   edi,edi
  437545:	mov    DWORD PTR [r12+0x4],esi
  43754a:	je     43745c <strcmp@plt+0x33ca4>
  437550:	movzx  ecx,WORD PTR [r12]
  437555:	add    r12,rcx
  437558:	jmp    437439 <strcmp@plt+0x33c81>
  43755d:	nop    DWORD PTR [rax]
  437560:	test   rbp,rbp
  437563:	je     437610 <strcmp@plt+0x33e58>
  437569:	lea    ecx,[rdx+0x4]
  43756c:	xor    r9d,r9d
  43756f:	mov    r15d,0xc
  437575:	lea    r12,[r13+0x1c]
  437579:	jmp    4373e0 <strcmp@plt+0x33c28>
  43757e:	xchg   ax,ax
  437580:	mov    edi,0x505
  437585:	mov    r8d,0x20
  43758b:	mov    WORD PTR [rsp+0x26],di
  437590:	mov    WORD PTR [rsp+0x24],r8w
  437596:	jmp    437485 <strcmp@plt+0x33ccd>
  43759b:	nop    DWORD PTR [rax+rax*1+0x0]
  4375a0:	mov    r15d,0x14
  4375a6:	jmp    437526 <strcmp@plt+0x33d6e>
  4375ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4375b0:	call   403050 <__errno_location@plt>
  4375b5:	mov    edi,DWORD PTR [rax]
  4375b7:	call   403170 <strerror@plt>
  4375bc:	lea    rsi,[rip+0x195dd]        # 450ba0 <strcmp@plt+0x4d3e8>
  4375c3:	mov    rdx,rax
  4375c6:	mov    edi,0x1
  4375cb:	xor    eax,eax
  4375cd:	call   4306a0 <strcmp@plt+0x2cee8>
  4375d2:	mov    edi,ebx
  4375d4:	call   403790 <close@plt>
  4375d9:	xor    eax,eax
  4375db:	call   43f160 <strcmp@plt+0x3b9a8>
  4375e0:	jmp    4374d9 <strcmp@plt+0x33d21>
  4375e5:	nop    DWORD PTR [rax]
  4375e8:	lea    rsi,[rip+0x19579]        # 450b68 <strcmp@plt+0x4d3b0>
  4375ef:	xor    eax,eax
  4375f1:	mov    edi,0x1
  4375f6:	call   4306a0 <strcmp@plt+0x2cee8>
  4375fb:	xor    eax,eax
  4375fd:	call   43f160 <strcmp@plt+0x3b9a8>
  437602:	jmp    437358 <strcmp@plt+0x33ba0>
  437607:	nop    WORD PTR [rax+rax*1+0x0]
  437610:	mov    ecx,DWORD PTR [rsp+0x10]
  437614:	xor    r9d,r9d
  437617:	xor    eax,eax
  437619:	test   ecx,ecx
  43761b:	jne    437640 <strcmp@plt+0x33e88>
  43761d:	mov    edx,DWORD PTR [rsp+0xc]
  437621:	mov    r15d,0xc
  437627:	test   edx,edx
  437629:	je     43745c <strcmp@plt+0x33ca4>
  43762f:	lea    r12,[r13+0x1c]
  437633:	jmp    437439 <strcmp@plt+0x33c81>
  437638:	nop    DWORD PTR [rax+rax*1+0x0]
  437640:	mov    r15d,0x14
  437646:	lea    r12,[r13+0x1c]
  43764a:	jmp    437526 <strcmp@plt+0x33d6e>
  43764f:	call   403460 <__stack_chk_fail@plt>
  437654:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43765f:	nop
  437660:	push   r14
  437662:	push   r13
  437664:	mov    r13,r9
  437667:	push   r12
  437669:	push   rbp
  43766a:	mov    r12d,ecx
  43766d:	push   rbx
  43766e:	mov    r14,QWORD PTR [rsp+0x30]
  437673:	movzx  ebx,dl
  437676:	mov    edx,0x20
  43767b:	sub    rsp,0x8
  43767f:	mov    eax,DWORD PTR [rsp+0x40]
  437683:	push   rax
  437684:	push   r14
  437686:	push   r9
  437688:	movzx  r9d,r8b
  43768c:	mov    r8d,ecx
  43768f:	mov    ecx,ebx
  437691:	call   4372f0 <strcmp@plt+0x33b38>
  437696:	add    rsp,0x20
  43769a:	cmp    eax,0x1
  43769d:	mov    ebp,eax
  43769f:	je     4376b0 <strcmp@plt+0x33ef8>
  4376a1:	pop    rbx
  4376a2:	mov    eax,ebp
  4376a4:	pop    rbp
  4376a5:	pop    r12
  4376a7:	pop    r13
  4376a9:	pop    r14
  4376ab:	ret    
  4376ac:	nop    DWORD PTR [rax+0x0]
  4376b0:	mov    rax,0x468e3c
  4376b7:	mov    eax,DWORD PTR [rax]
  4376b9:	test   eax,eax
  4376bb:	jle    4376a1 <strcmp@plt+0x33ee9>
  4376bd:	mov    rdi,r14
  4376c0:	call   424890 <strcmp@plt+0x210d8>
  4376c5:	mov    rdi,r13
  4376c8:	mov    r14,rax
  4376cb:	call   424890 <strcmp@plt+0x210d8>
  4376d0:	lea    rsi,[rip+0x194f9]        # 450bd0 <strcmp@plt+0x4d418>
  4376d7:	mov    r9d,r12d
  4376da:	mov    r8d,ebx
  4376dd:	mov    rcx,r14
  4376e0:	mov    rdx,rax
  4376e3:	mov    edi,0x5
  4376e8:	xor    eax,eax
  4376ea:	call   4306a0 <strcmp@plt+0x2cee8>
  4376ef:	pop    rbx
  4376f0:	mov    eax,ebp
  4376f2:	pop    rbp
  4376f3:	pop    r12
  4376f5:	pop    r13
  4376f7:	pop    r14
  4376f9:	ret    
  4376fa:	nop    WORD PTR [rax+rax*1+0x0]
  437700:	push   rbp
  437701:	push   rbx
  437702:	movzx  edx,dl
  437705:	mov    rbp,r9
  437708:	sub    rsp,0x10
  43770c:	mov    eax,DWORD PTR [rsp+0x30]
  437710:	push   rax
  437711:	push   QWORD PTR [rsp+0x30]
  437715:	push   r9
  437717:	movzx  r9d,r8b
  43771b:	mov    r8d,ecx
  43771e:	mov    ecx,edx
  437720:	mov    edx,0x21
  437725:	call   4372f0 <strcmp@plt+0x33b38>
  43772a:	add    rsp,0x20
  43772e:	cmp    eax,0x1
  437731:	mov    ebx,eax
  437733:	je     437740 <strcmp@plt+0x33f88>
  437735:	add    rsp,0x8
  437739:	mov    eax,ebx
  43773b:	pop    rbx
  43773c:	pop    rbp
  43773d:	ret    
  43773e:	xchg   ax,ax
  437740:	mov    rax,0x468e3c
  437747:	mov    eax,DWORD PTR [rax]
  437749:	test   eax,eax
  43774b:	jle    437735 <strcmp@plt+0x33f7d>
  43774d:	mov    rdi,rbp
  437750:	call   424890 <strcmp@plt+0x210d8>
  437755:	lea    rsi,[rip+0x194ec]        # 450c48 <strcmp@plt+0x4d490>
  43775c:	mov    rdx,rax
  43775f:	mov    edi,0x5
  437764:	xor    eax,eax
  437766:	call   4306a0 <strcmp@plt+0x2cee8>
  43776b:	add    rsp,0x8
  43776f:	mov    eax,ebx
  437771:	pop    rbx
  437772:	pop    rbp
  437773:	ret    
  437774:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43777f:	nop
  437780:	push   r15
  437782:	push   r14
  437784:	mov    r14d,esi
  437787:	push   r13
  437789:	push   r12
  43778b:	mov    r13,rcx
  43778e:	push   rbp
  43778f:	push   rbx
  437790:	sub    rsp,0x1038
  437797:	mov    DWORD PTR [rsp+0x14],edi
  43779b:	movzx  edi,si
  43779e:	mov    DWORD PTR [rsp+0x10],edx
  4377a2:	mov    QWORD PTR [rsp],r8
  4377a6:	mov    QWORD PTR [rsp+0x8],r9
  4377ab:	mov    rax,QWORD PTR fs:0x28
  4377b4:	mov    QWORD PTR [rsp+0x1028],rax
  4377bc:	xor    eax,eax
  4377be:	call   4260f0 <strcmp@plt+0x22938>
  4377c3:	xor    edx,edx
  4377c5:	mov    esi,0x2
  4377ca:	mov    edi,0x10
  4377cf:	mov    BYTE PTR [rsp+0x1a],al
  4377d3:	call   4030e0 <socket@plt>
  4377d8:	test   eax,eax
  4377da:	mov    r12d,eax
  4377dd:	js     437ac0 <strcmp@plt+0x34308>
  4377e3:	lea    rbx,[rsp+0x20]
  4377e8:	xor    eax,eax
  4377ea:	mov    ecx,0x200
  4377ef:	test   r13,r13
  4377f2:	mov    rdi,rbx
  4377f5:	rep stos QWORD PTR es:[rdi],rax
  4377f8:	je     437a20 <strcmp@plt+0x34268>
  4377fe:	movzx  ebp,BYTE PTR [rsp+0x1a]
  437803:	lea    rdi,[rbx+0x20]
  437807:	mov    rsi,r13
  43780a:	mov    eax,0x1
  43780f:	mov    WORD PTR [rsp+0x3e],ax
  437814:	lea    r8d,[rbp+0x4]
  437818:	mov    WORD PTR [rsp+0x3c],r8w
  43781e:	mov    DWORD PTR [rsp+0x1c],r8d
  437823:	call   424bc0 <strcmp@plt+0x21408>
  437828:	movzx  edx,WORD PTR [rsp+0x3c]
  43782d:	mov    rdi,r13
  437830:	lea    r13,[rbx+0x1c]
  437834:	lea    r15d,[rdx+0xc]
  437838:	call   424a20 <strcmp@plt+0x21268>
  43783d:	cmp    QWORD PTR [rsp],0x0
  437842:	mov    BYTE PTR [rsp+0x1b],al
  437846:	mov    r8d,DWORD PTR [rsp+0x1c]
  43784b:	je     437885 <strcmp@plt+0x340cd>
  43784d:	cmp    r15d,0xc
  437851:	je     437a3f <strcmp@plt+0x34287>
  437857:	movzx  eax,WORD PTR [rsp+0x3c]
  43785c:	lea    r13,[rbx+rax*1+0x1c]
  437861:	mov    rsi,QWORD PTR [rsp]
  437865:	mov    eax,0x7
  43786a:	lea    rdi,[r13+0x4]
  43786e:	mov    WORD PTR [r13+0x2],ax
  437873:	mov    WORD PTR [r13+0x0],r8w
  437878:	call   424bc0 <strcmp@plt+0x21408>
  43787d:	movzx  eax,WORD PTR [r13+0x0]
  437882:	add    r15d,eax
  437885:	mov    eax,DWORD PTR [rsp+0x10]
  437889:	test   eax,eax
  43788b:	jne    4379c8 <strcmp@plt+0x34210>
  437891:	cmp    QWORD PTR [rsp+0x8],0x0
  437897:	je     4378cb <strcmp@plt+0x34113>
  437899:	cmp    r15d,0xc
  43789d:	jne    437a0b <strcmp@plt+0x34253>
  4378a3:	mov    rsi,QWORD PTR [rsp+0x8]
  4378a8:	mov    eax,0x5
  4378ad:	add    ebp,0x4
  4378b0:	lea    rdi,[r13+0x4]
  4378b4:	mov    WORD PTR [r13+0x2],ax
  4378b9:	mov    WORD PTR [r13+0x0],bp
  4378be:	call   424bc0 <strcmp@plt+0x21408>
  4378c3:	movzx  eax,WORD PTR [r13+0x0]
  4378c8:	add    r15d,eax
  4378cb:	mov    ebp,DWORD PTR [rsp+0x1070]
  4378d2:	test   ebp,ebp
  4378d4:	je     437909 <strcmp@plt+0x34151>
  4378d6:	cmp    r15d,0xc
  4378da:	je     4378e4 <strcmp@plt+0x3412c>
  4378dc:	movzx  eax,WORD PTR [r13+0x0]
  4378e1:	add    r13,rax
  4378e4:	mov    eax,DWORD PTR [rsp+0x1070]
  4378eb:	mov    r10d,0x6
  4378f1:	mov    r11d,0x8
  4378f7:	mov    WORD PTR [r13+0x2],r10w
  4378fc:	mov    WORD PTR [r13+0x0],r11w
  437901:	add    r15d,0x8
  437905:	mov    DWORD PTR [r13+0x4],eax
  437909:	cmp    DWORD PTR [rsp+0x14],0x18
  43790e:	lea    edx,[r15+0x10]
  437912:	mov    DWORD PTR [rsp+0x20],edx
  437916:	je     437a50 <strcmp@plt+0x34298>
  43791c:	mov    esi,0x1
  437921:	mov    edi,0x19
  437926:	mov    WORD PTR [rsp+0x26],si
  43792b:	mov    WORD PTR [rsp+0x24],di
  437930:	mov    ecx,DWORD PTR [rsp+0x1078]
  437937:	mov    eax,0xfffffffe
  43793c:	movsxd rdx,edx
  43793f:	mov    rsi,rbx
  437942:	mov    edi,r12d
  437945:	mov    BYTE PTR [rsp+0x30],r14b
  43794a:	mov    BYTE PTR [rsp+0x35],0x4
  43794f:	mov    BYTE PTR [rsp+0x36],0x0
  437954:	test   ecx,ecx
  437956:	movzx  ecx,BYTE PTR [rsp+0x1078]
  43795e:	mov    BYTE PTR [rsp+0x37],0x1
  437963:	mov    BYTE PTR [rsp+0x32],0x0
  437968:	mov    BYTE PTR [rsp+0x33],0x0
  43796d:	cmovne eax,ecx
  437970:	xor    ecx,ecx
  437972:	mov    BYTE PTR [rsp+0x34],al
  437976:	movzx  eax,BYTE PTR [rsp+0x1b]
  43797b:	mov    BYTE PTR [rsp+0x31],al
  43797f:	call   403220 <send@plt>
  437984:	test   eax,eax
  437986:	js     437a80 <strcmp@plt+0x342c8>
  43798c:	mov    edi,r12d
  43798f:	call   403790 <close@plt>
  437994:	mov    rbx,QWORD PTR [rsp+0x1028]
  43799c:	xor    rbx,QWORD PTR fs:0x28
  4379a5:	mov    eax,0x1
  4379aa:	jne    437b47 <strcmp@plt+0x3438f>
  4379b0:	add    rsp,0x1038
  4379b7:	pop    rbx
  4379b8:	pop    rbp
  4379b9:	pop    r12
  4379bb:	pop    r13
  4379bd:	pop    r14
  4379bf:	pop    r15
  4379c1:	ret    
  4379c2:	nop    WORD PTR [rax+rax*1+0x0]
  4379c8:	cmp    r15d,0xc
  4379cc:	je     437a70 <strcmp@plt+0x342b8>
  4379d2:	movzx  eax,WORD PTR [r13+0x0]
  4379d7:	add    r15d,0x8
  4379db:	add    r13,rax
  4379de:	mov    eax,0x4
  4379e3:	cmp    QWORD PTR [rsp+0x8],0x0
  4379e9:	movzx  ebp,BYTE PTR [rsp+0x1a]
  4379ee:	mov    WORD PTR [r13+0x2],ax
  4379f3:	mov    eax,0x8
  4379f8:	mov    WORD PTR [r13+0x0],ax
  4379fd:	mov    eax,DWORD PTR [rsp+0x10]
  437a01:	mov    DWORD PTR [r13+0x4],eax
  437a05:	je     4378cb <strcmp@plt+0x34113>
  437a0b:	movzx  eax,WORD PTR [r13+0x0]
  437a10:	add    r13,rax
  437a13:	jmp    4378a3 <strcmp@plt+0x340eb>
  437a18:	nop    DWORD PTR [rax+rax*1+0x0]
  437a20:	cmp    QWORD PTR [rsp],0x0
  437a25:	je     437ae0 <strcmp@plt+0x34328>
  437a2b:	movzx  ebp,BYTE PTR [rsp+0x1a]
  437a30:	mov    BYTE PTR [rsp+0x1b],0x0
  437a35:	mov    r15d,0xc
  437a3b:	lea    r8d,[rbp+0x4]
  437a3f:	lea    r13,[rbx+0x1c]
  437a43:	jmp    437861 <strcmp@plt+0x340a9>
  437a48:	nop    DWORD PTR [rax+rax*1+0x0]
  437a50:	mov    r8d,0x501
  437a56:	mov    r9d,0x18
  437a5c:	mov    WORD PTR [rsp+0x26],r8w
  437a62:	mov    WORD PTR [rsp+0x24],r9w
  437a68:	jmp    437930 <strcmp@plt+0x34178>
  437a6d:	nop    DWORD PTR [rax]
  437a70:	mov    r15d,0x14
  437a76:	jmp    4379de <strcmp@plt+0x34226>
  437a7b:	nop    DWORD PTR [rax+rax*1+0x0]
  437a80:	call   403050 <__errno_location@plt>
  437a85:	mov    edi,DWORD PTR [rax]
  437a87:	call   403170 <strerror@plt>
  437a8c:	lea    rsi,[rip+0x1922d]        # 450cc0 <strcmp@plt+0x4d508>
  437a93:	mov    rdx,rax
  437a96:	mov    edi,0x1
  437a9b:	xor    eax,eax
  437a9d:	call   4306a0 <strcmp@plt+0x2cee8>
  437aa2:	mov    edi,r12d
  437aa5:	call   403790 <close@plt>
  437aaa:	xor    eax,eax
  437aac:	call   43f160 <strcmp@plt+0x3b9a8>
  437ab1:	jmp    43798c <strcmp@plt+0x341d4>
  437ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437ac0:	lea    rsi,[rip+0x191c1]        # 450c88 <strcmp@plt+0x4d4d0>
  437ac7:	xor    eax,eax
  437ac9:	mov    edi,0x1
  437ace:	call   4306a0 <strcmp@plt+0x2cee8>
  437ad3:	xor    eax,eax
  437ad5:	call   43f160 <strcmp@plt+0x3b9a8>
  437ada:	jmp    4377e3 <strcmp@plt+0x3402b>
  437adf:	nop
  437ae0:	mov    edx,DWORD PTR [rsp+0x10]
  437ae4:	test   edx,edx
  437ae6:	jne    437b10 <strcmp@plt+0x34358>
  437ae8:	cmp    QWORD PTR [rsp+0x8],0x0
  437aee:	je     437b24 <strcmp@plt+0x3436c>
  437af0:	mov    BYTE PTR [rsp+0x1b],0x0
  437af5:	mov    r15d,0xc
  437afb:	lea    r13,[rbx+0x1c]
  437aff:	movzx  ebp,BYTE PTR [rsp+0x1a]
  437b04:	jmp    4378a3 <strcmp@plt+0x340eb>
  437b09:	nop    DWORD PTR [rax+0x0]
  437b10:	mov    BYTE PTR [rsp+0x1b],0x0
  437b15:	mov    r15d,0x14
  437b1b:	lea    r13,[rbx+0x1c]
  437b1f:	jmp    4379de <strcmp@plt+0x34226>
  437b24:	mov    eax,DWORD PTR [rsp+0x1070]
  437b2b:	mov    BYTE PTR [rsp+0x1b],0x0
  437b30:	mov    r15d,0xc
  437b36:	test   eax,eax
  437b38:	je     437909 <strcmp@plt+0x34151>
  437b3e:	lea    r13,[rbx+0x1c]
  437b42:	jmp    4378e4 <strcmp@plt+0x3412c>
  437b47:	call   403460 <__stack_chk_fail@plt>
  437b4c:	nop    DWORD PTR [rax+0x0]
  437b50:	push   r15
  437b52:	push   r14
  437b54:	push   r13
  437b56:	push   r12
  437b58:	mov    r13,r8
  437b5b:	push   rbp
  437b5c:	push   rbx
  437b5d:	mov    rbp,rdx
  437b60:	mov    r12,rcx
  437b63:	sub    rsp,0x8
  437b67:	mov    r14d,DWORD PTR [rsp+0x40]
  437b6c:	push   r14
  437b6e:	push   r9
  437b70:	mov    r9,r8
  437b73:	mov    r8,rcx
  437b76:	mov    rcx,rdx
  437b79:	mov    edx,esi
  437b7b:	mov    esi,edi
  437b7d:	mov    edi,0x18
  437b82:	call   437780 <strcmp@plt+0x33fc8>
  437b87:	cmp    eax,0x1
  437b8a:	mov    ebx,eax
  437b8c:	pop    rdx
  437b8d:	pop    rcx
  437b8e:	je     437ba8 <strcmp@plt+0x343f0>
  437b90:	add    rsp,0x8
  437b94:	mov    eax,ebx
  437b96:	pop    rbx
  437b97:	pop    rbp
  437b98:	pop    r12
  437b9a:	pop    r13
  437b9c:	pop    r14
  437b9e:	pop    r15
  437ba0:	ret    
  437ba1:	nop    DWORD PTR [rax+0x0]
  437ba8:	mov    rax,0x468e3c
  437baf:	mov    eax,DWORD PTR [rax]
  437bb1:	test   eax,eax
  437bb3:	jle    437b90 <strcmp@plt+0x343d8>
  437bb5:	test   r13,r13
  437bb8:	je     437c18 <strcmp@plt+0x34460>
  437bba:	mov    rdi,r13
  437bbd:	call   424890 <strcmp@plt+0x210d8>
  437bc2:	mov    r13,rax
  437bc5:	test   rbp,rbp
  437bc8:	lea    r15,[rip+0x191d2]        # 450da1 <strcmp@plt+0x4d5e9>
  437bcf:	je     437bdc <strcmp@plt+0x34424>
  437bd1:	mov    rdi,rbp
  437bd4:	call   424890 <strcmp@plt+0x210d8>
  437bd9:	mov    r15,rax
  437bdc:	test   r12,r12
  437bdf:	lea    rdx,[rip+0x191bb]        # 450da1 <strcmp@plt+0x4d5e9>
  437be6:	je     437bf3 <strcmp@plt+0x3443b>
  437be8:	mov    rdi,r12
  437beb:	call   424890 <strcmp@plt+0x210d8>
  437bf0:	mov    rdx,rax
  437bf3:	lea    rsi,[rip+0x190f6]        # 450cf0 <strcmp@plt+0x4d538>
  437bfa:	mov    r9d,r14d
  437bfd:	mov    r8,r13
  437c00:	mov    rcx,r15
  437c03:	mov    edi,0x5
  437c08:	xor    eax,eax
  437c0a:	call   4306a0 <strcmp@plt+0x2cee8>
  437c0f:	jmp    437b90 <strcmp@plt+0x343d8>
  437c14:	nop    DWORD PTR [rax+0x0]
  437c18:	lea    r13,[rip+0x19182]        # 450da1 <strcmp@plt+0x4d5e9>
  437c1f:	jmp    437bc5 <strcmp@plt+0x3440d>
  437c21:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  437c2c:	nop    DWORD PTR [rax+0x0]
  437c30:	push   r15
  437c32:	push   r14
  437c34:	push   r13
  437c36:	push   r12
  437c38:	mov    r13,r8
  437c3b:	push   rbp
  437c3c:	push   rbx
  437c3d:	mov    rbp,rdx
  437c40:	mov    r12,rcx
  437c43:	sub    rsp,0x8
  437c47:	mov    r14d,DWORD PTR [rsp+0x40]
  437c4c:	push   r14
  437c4e:	push   r9
  437c50:	mov    r9,r8
  437c53:	mov    r8,rcx
  437c56:	mov    rcx,rdx
  437c59:	mov    edx,esi
  437c5b:	mov    esi,edi
  437c5d:	mov    edi,0x19
  437c62:	call   437780 <strcmp@plt+0x33fc8>
  437c67:	cmp    eax,0x1
  437c6a:	mov    ebx,eax
  437c6c:	pop    rdx
  437c6d:	pop    rcx
  437c6e:	je     437c88 <strcmp@plt+0x344d0>
  437c70:	add    rsp,0x8
  437c74:	mov    eax,ebx
  437c76:	pop    rbx
  437c77:	pop    rbp
  437c78:	pop    r12
  437c7a:	pop    r13
  437c7c:	pop    r14
  437c7e:	pop    r15
  437c80:	ret    
  437c81:	nop    DWORD PTR [rax+0x0]
  437c88:	mov    rax,0x468e3c
  437c8f:	mov    eax,DWORD PTR [rax]
  437c91:	test   eax,eax
  437c93:	jle    437c70 <strcmp@plt+0x344b8>
  437c95:	test   r13,r13
  437c98:	je     437cf8 <strcmp@plt+0x34540>
  437c9a:	mov    rdi,r13
  437c9d:	call   424890 <strcmp@plt+0x210d8>
  437ca2:	mov    r13,rax
  437ca5:	test   rbp,rbp
  437ca8:	lea    r15,[rip+0x190f2]        # 450da1 <strcmp@plt+0x4d5e9>
  437caf:	je     437cbc <strcmp@plt+0x34504>
  437cb1:	mov    rdi,rbp
  437cb4:	call   424890 <strcmp@plt+0x210d8>
  437cb9:	mov    r15,rax
  437cbc:	test   r12,r12
  437cbf:	lea    rdx,[rip+0x190db]        # 450da1 <strcmp@plt+0x4d5e9>
  437cc6:	je     437cd3 <strcmp@plt+0x3451b>
  437cc8:	mov    rdi,r12
  437ccb:	call   424890 <strcmp@plt+0x210d8>
  437cd0:	mov    rdx,rax
  437cd3:	lea    rsi,[rip+0x1906e]        # 450d48 <strcmp@plt+0x4d590>
  437cda:	mov    r9d,r14d
  437cdd:	mov    r8,r13
  437ce0:	mov    rcx,r15
  437ce3:	mov    edi,0x5
  437ce8:	xor    eax,eax
  437cea:	call   4306a0 <strcmp@plt+0x2cee8>
  437cef:	jmp    437c70 <strcmp@plt+0x344b8>
  437cf4:	nop    DWORD PTR [rax+0x0]
  437cf8:	lea    r13,[rip+0x190a2]        # 450da1 <strcmp@plt+0x4d5e9>
  437cff:	jmp    437ca5 <strcmp@plt+0x344ed>
  437d01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  437d10:	mov    edi,0x98
  437d15:	jmp    434790 <strcmp@plt+0x30fd8>
  437d1a:	nop    WORD PTR [rax+rax*1+0x0]
  437d20:	test   rdi,rdi
  437d23:	je     437d6d <strcmp@plt+0x345b5>
  437d25:	push   r12
  437d27:	push   rbp
  437d28:	mov    r12,rdi
  437d2b:	push   rbx
  437d2c:	mov    rbx,QWORD PTR [rdi]
  437d2f:	test   rbx,rbx
  437d32:	je     437d54 <strcmp@plt+0x3459c>
  437d34:	nop    DWORD PTR [rax+0x0]
  437d38:	mov    edi,DWORD PTR [rbx+0x18]
  437d3b:	mov    rbp,QWORD PTR [rbx+0x20]
  437d3f:	call   403790 <close@plt>
  437d44:	mov    rdi,rbx
  437d47:	mov    rbx,rbp
  437d4a:	call   4037b0 <free@plt>
  437d4f:	test   rbp,rbp
  437d52:	jne    437d38 <strcmp@plt+0x34580>
  437d54:	mov    rdi,r12
  437d57:	call   4037b0 <free@plt>
  437d5c:	mov    rax,0x468e3c
  437d63:	mov    eax,DWORD PTR [rax]
  437d65:	test   eax,eax
  437d67:	jg     437d70 <strcmp@plt+0x345b8>
  437d69:	pop    rbx
  437d6a:	pop    rbp
  437d6b:	pop    r12
  437d6d:	repz ret 
  437d6f:	nop
  437d70:	pop    rbx
  437d71:	pop    rbp
  437d72:	pop    r12
  437d74:	lea    rsi,[rip+0x19028]        # 450da3 <strcmp@plt+0x4d5eb>
  437d7b:	mov    edi,0x5
  437d80:	xor    eax,eax
  437d82:	jmp    4306a0 <strcmp@plt+0x2cee8>
  437d87:	nop    WORD PTR [rax+rax*1+0x0]
  437d90:	mov    rax,QWORD PTR [rdi]
  437d93:	test   rax,rax
  437d96:	je     437dae <strcmp@plt+0x345f6>
  437d98:	nop    DWORD PTR [rax+rax*1+0x0]
  437da0:	cmp    DWORD PTR [rax+0x18],esi
  437da3:	je     437dae <strcmp@plt+0x345f6>
  437da5:	mov    rax,QWORD PTR [rax+0x20]
  437da9:	test   rax,rax
  437dac:	jne    437da0 <strcmp@plt+0x345e8>
  437dae:	repz ret 
  437db0:	push   r14
  437db2:	push   r13
  437db4:	push   r12
  437db6:	push   rbp
  437db7:	push   rbx
  437db8:	sub    rsp,0x30
  437dbc:	mov    rbx,QWORD PTR [rdi]
  437dbf:	mov    rax,QWORD PTR fs:0x28
  437dc8:	mov    QWORD PTR [rsp+0x28],rax
  437dcd:	xor    eax,eax
  437dcf:	mov    DWORD PTR [rsp+0xc],0x10
  437dd7:	test   rbx,rbx
  437dda:	je     437e50 <strcmp@plt+0x34698>
  437ddc:	mov    r13d,esi
  437ddf:	mov    r14d,edx
  437de2:	lea    r12,[rsp+0x10]
  437de7:	lea    rbp,[rsp+0xc]
  437dec:	jmp    437dff <strcmp@plt+0x34647>
  437dee:	xchg   ax,ax
  437df0:	cmp    r13d,0xa
  437df4:	je     437e1f <strcmp@plt+0x34667>
  437df6:	mov    rbx,QWORD PTR [rbx+0x20]
  437dfa:	test   rbx,rbx
  437dfd:	je     437e50 <strcmp@plt+0x34698>
  437dff:	mov    edi,DWORD PTR [rbx+0x18]
  437e02:	mov    rdx,rbp
  437e05:	mov    rsi,r12
  437e08:	call   403390 <getsockname@plt>
  437e0d:	cmp    eax,0xffffffff
  437e10:	je     437df6 <strcmp@plt+0x3463e>
  437e12:	cmp    DWORD PTR [rsp+0xc],0x10
  437e17:	jne    437df0 <strcmp@plt+0x34638>
  437e19:	cmp    r13d,0x2
  437e1d:	jne    437df6 <strcmp@plt+0x3463e>
  437e1f:	movzx  eax,WORD PTR [rsp+0x12]
  437e24:	rol    ax,0x8
  437e28:	cmp    r14w,ax
  437e2c:	jne    437df6 <strcmp@plt+0x3463e>
  437e2e:	xchg   ax,ax
  437e30:	mov    rcx,QWORD PTR [rsp+0x28]
  437e35:	xor    rcx,QWORD PTR fs:0x28
  437e3e:	mov    rax,rbx
  437e41:	jne    437e54 <strcmp@plt+0x3469c>
  437e43:	add    rsp,0x30
  437e47:	pop    rbx
  437e48:	pop    rbp
  437e49:	pop    r12
  437e4b:	pop    r13
  437e4d:	pop    r14
  437e4f:	ret    
  437e50:	xor    ebx,ebx
  437e52:	jmp    437e30 <strcmp@plt+0x34678>
  437e54:	call   403460 <__stack_chk_fail@plt>
  437e59:	nop    DWORD PTR [rax+0x0]
  437e60:	push   r13
  437e62:	push   r12
  437e64:	mov    r13,rsi
  437e67:	push   rbp
  437e68:	push   rbx
  437e69:	mov    rbx,rdi
  437e6c:	mov    edi,0x30
  437e71:	mov    r12,rdx
  437e74:	mov    ebp,ecx
  437e76:	sub    rsp,0x8
  437e7a:	call   434790 <strcmp@plt+0x30fd8>
  437e7f:	mov    rdx,QWORD PTR [rbx+0x8]
  437e83:	mov    QWORD PTR [rax+0x8],r13
  437e87:	mov    DWORD PTR [rax],0x0
  437e8d:	mov    QWORD PTR [rax+0x10],r12
  437e91:	mov    DWORD PTR [rax+0x18],ebp
  437e94:	mov    QWORD PTR [rax+0x20],0x0
  437e9c:	test   rdx,rdx
  437e9f:	mov    QWORD PTR [rax+0x28],rdx
  437ea3:	je     437ec8 <strcmp@plt+0x34710>
  437ea5:	mov    QWORD PTR [rdx+0x20],rax
  437ea9:	add    DWORD PTR [rbx+0x10],0x1
  437ead:	cmp    ebp,DWORD PTR [rbx+0x14]
  437eb0:	mov    QWORD PTR [rbx+0x8],rax
  437eb4:	jle    437eb9 <strcmp@plt+0x34701>
  437eb6:	mov    DWORD PTR [rbx+0x14],ebp
  437eb9:	add    rsp,0x8
  437ebd:	pop    rbx
  437ebe:	pop    rbp
  437ebf:	pop    r12
  437ec1:	pop    r13
  437ec3:	ret    
  437ec4:	nop    DWORD PTR [rax+0x0]
  437ec8:	mov    QWORD PTR [rbx],rax
  437ecb:	jmp    437ea9 <strcmp@plt+0x346f1>
  437ecd:	nop    DWORD PTR [rax]
  437ed0:	mov    eax,DWORD PTR [rdi+0x18]
  437ed3:	ret    
  437ed4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  437edf:	nop
  437ee0:	mov    rax,QWORD PTR [rsi+0x28]
  437ee4:	push   r12
  437ee6:	mov    rdx,QWORD PTR [rsi+0x20]
  437eea:	push   rbp
  437eeb:	mov    rbp,rsi
  437eee:	push   rbx
  437eef:	mov    rbx,rdi
  437ef2:	test   rax,rax
  437ef5:	je     437f80 <strcmp@plt+0x347c8>
  437efb:	mov    QWORD PTR [rax+0x20],rdx
  437eff:	mov    rdx,QWORD PTR [rsi+0x20]
  437f03:	test   rdx,rdx
  437f06:	je     437f70 <strcmp@plt+0x347b8>
  437f08:	mov    QWORD PTR [rdx+0x28],rax
  437f0c:	mov    r12d,DWORD PTR [rbp+0x18]
  437f10:	mov    edi,r12d
  437f13:	call   403790 <close@plt>
  437f18:	mov    rdi,rbp
  437f1b:	call   4037b0 <free@plt>
  437f20:	mov    ecx,DWORD PTR [rbx+0x14]
  437f23:	sub    DWORD PTR [rbx+0x10],0x1
  437f27:	cmp    r12d,ecx
  437f2a:	je     437f40 <strcmp@plt+0x34788>
  437f2c:	pop    rbx
  437f2d:	mov    eax,0x1
  437f32:	pop    rbp
  437f33:	pop    r12
  437f35:	ret    
  437f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437f40:	mov    rax,QWORD PTR [rbx]
  437f43:	test   rax,rax
  437f46:	jne    437f53 <strcmp@plt+0x3479b>
  437f48:	jmp    437f98 <strcmp@plt+0x347e0>
  437f4a:	nop    WORD PTR [rax+rax*1+0x0]
  437f50:	mov    ecx,DWORD PTR [rbx+0x14]
  437f53:	mov    edx,DWORD PTR [rax+0x18]
  437f56:	cmp    ecx,edx
  437f58:	jge    437f5d <strcmp@plt+0x347a5>
  437f5a:	mov    DWORD PTR [rbx+0x14],edx
  437f5d:	mov    rax,QWORD PTR [rax+0x20]
  437f61:	test   rax,rax
  437f64:	jne    437f50 <strcmp@plt+0x34798>
  437f66:	pop    rbx
  437f67:	mov    eax,0x1
  437f6c:	pop    rbp
  437f6d:	pop    r12
  437f6f:	ret    
  437f70:	mov    QWORD PTR [rbx+0x8],rax
  437f74:	jmp    437f0c <strcmp@plt+0x34754>
  437f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437f80:	test   rdx,rdx
  437f83:	mov    QWORD PTR [rdi],rdx
  437f86:	je     437f70 <strcmp@plt+0x347b8>
  437f88:	mov    QWORD PTR [rdx+0x28],0x0
  437f90:	jmp    437f0c <strcmp@plt+0x34754>
  437f95:	nop    DWORD PTR [rax]
  437f98:	mov    DWORD PTR [rbx+0x14],0x0
  437f9f:	jmp    437f2c <strcmp@plt+0x34774>
  437fa1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  437fac:	nop    DWORD PTR [rax+0x0]
  437fb0:	push   r12
  437fb2:	push   rbp
  437fb3:	lea    r12,[rdi+0x18]
  437fb7:	push   rbx
  437fb8:	mov    rbx,rdi
  437fbb:	sub    rsp,0x20
  437fbf:	mov    rax,QWORD PTR fs:0x28
  437fc8:	mov    QWORD PTR [rsp+0x18],rax
  437fcd:	xor    eax,eax
  437fcf:	mov    QWORD PTR [rsp],0x0
  437fd7:	mov    QWORD PTR [rsp+0x8],0x3e8
  437fe0:	mov    rbp,rsp
  437fe3:	mov    eax,DWORD PTR [rbx+0x14]
  437fe6:	xor    ecx,ecx
  437fe8:	xor    edx,edx
  437fea:	mov    r8,rbp
  437fed:	mov    rsi,r12
  437ff0:	lea    edi,[rax+0x1]
  437ff3:	call   4033b0 <select@plt>
  437ff8:	cmp    eax,0xffffffff
  437ffb:	jne    438050 <strcmp@plt+0x34898>
  437ffd:	call   403050 <__errno_location@plt>
  438002:	mov    edi,DWORD PTR [rax]
  438004:	cmp    edi,0x4
  438007:	je     437fe3 <strcmp@plt+0x3482b>
  438009:	mov    rax,0x468e3c
  438010:	cmp    DWORD PTR [rax],0x1
  438013:	jle    438030 <strcmp@plt+0x34878>
  438015:	call   403170 <strerror@plt>
  43801a:	lea    rsi,[rip+0x18dcf]        # 450df0 <strcmp@plt+0x4d638>
  438021:	mov    rdx,rax
  438024:	mov    edi,0x6
  438029:	xor    eax,eax
  43802b:	call   4306a0 <strcmp@plt+0x2cee8>
  438030:	mov    rax,QWORD PTR [rsp+0x18]
  438035:	xor    rax,QWORD PTR fs:0x28
  43803e:	jne    43809e <strcmp@plt+0x348e6>
  438040:	add    rsp,0x20
  438044:	pop    rbx
  438045:	pop    rbp
  438046:	pop    r12
  438048:	ret    
  438049:	nop    DWORD PTR [rax+0x0]
  438050:	mov    r12,QWORD PTR [rbx]
  438053:	test   r12,r12
  438056:	je     438030 <strcmp@plt+0x34878>
  438058:	mov    ebp,0x1
  43805d:	jmp    43806a <strcmp@plt+0x348b2>
  43805f:	nop
  438060:	mov    r12,QWORD PTR [r12+0x20]
  438065:	test   r12,r12
  438068:	je     438030 <strcmp@plt+0x34878>
  43806a:	movsxd rdi,DWORD PTR [r12+0x18]
  43806f:	call   403630 <__fdelt_chk@plt>
  438074:	mov    edx,DWORD PTR [r12+0x18]
  438079:	mov    ecx,edx
  43807b:	sar    ecx,0x1f
  43807e:	shr    ecx,0x1a
  438081:	add    edx,ecx
  438083:	and    edx,0x3f
  438086:	sub    edx,ecx
  438088:	shlx   rdx,rbp,rdx
  43808d:	test   QWORD PTR [rbx+rax*8+0x18],rdx
  438092:	je     438060 <strcmp@plt+0x348a8>
  438094:	mov    rdi,r12
  438097:	call   QWORD PTR [r12+0x8]
  43809c:	jmp    438060 <strcmp@plt+0x348a8>
  43809e:	call   403460 <__stack_chk_fail@plt>
  4380a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4380ae:	xchg   ax,ax
  4380b0:	push   r12
  4380b2:	push   rbp
  4380b3:	push   rbx
  4380b4:	mov    rbp,QWORD PTR [rdi]
  4380b7:	test   rbp,rbp
  4380ba:	je     4380f6 <strcmp@plt+0x3493e>
  4380bc:	mov    r12,rdi
  4380bf:	mov    ebx,0x1
  4380c4:	nop    DWORD PTR [rax+0x0]
  4380c8:	movsxd rdi,DWORD PTR [rbp+0x18]
  4380cc:	call   403630 <__fdelt_chk@plt>
  4380d1:	mov    edx,DWORD PTR [rbp+0x18]
  4380d4:	mov    rbp,QWORD PTR [rbp+0x20]
  4380d8:	mov    ecx,edx
  4380da:	sar    ecx,0x1f
  4380dd:	shr    ecx,0x1a
  4380e0:	add    edx,ecx
  4380e2:	and    edx,0x3f
  4380e5:	sub    edx,ecx
  4380e7:	shlx   rdx,rbx,rdx
  4380ec:	or     QWORD PTR [r12+rax*8+0x18],rdx
  4380f1:	test   rbp,rbp
  4380f4:	jne    4380c8 <strcmp@plt+0x34910>
  4380f6:	pop    rbx
  4380f7:	pop    rbp
  4380f8:	pop    r12
  4380fa:	ret    
  4380fb:	nop    DWORD PTR [rax+rax*1+0x0]
  438100:	push   rbp
  438101:	push   rbx
  438102:	mov    ebp,edi
  438104:	sub    rsp,0x18
  438108:	mov    rax,QWORD PTR fs:0x28
  438111:	mov    QWORD PTR [rsp+0x8],rax
  438116:	xor    eax,eax
  438118:	mov    DWORD PTR [rsp+0x4],0x1
  438120:	call   438bd0 <strcmp@plt+0x35418>
  438125:	cmp    eax,0xfffffff7
  438128:	mov    ebx,eax
  43812a:	je     438166 <strcmp@plt+0x349ae>
  43812c:	xor    edx,edx
  43812e:	mov    ecx,0x10f6
  438133:	mov    esi,ebp
  438135:	mov    edi,eax
  438137:	call   439130 <strcmp@plt+0x35978>
  43813c:	cmp    ebp,0x2
  43813f:	je     438190 <strcmp@plt+0x349d8>
  438141:	cmp    ebp,0xa
  438144:	jne    438188 <strcmp@plt+0x349d0>
  438146:	lea    rcx,[rsp+0x4]
  43814b:	mov    r8d,0x4
  438151:	mov    edx,0x31
  438156:	mov    esi,0x29
  43815b:	mov    edi,ebx
  43815d:	call   403720 <setsockopt@plt>
  438162:	test   eax,eax
  438164:	js     4381d8 <strcmp@plt+0x34a20>
  438166:	mov    rdx,QWORD PTR [rsp+0x8]
  43816b:	xor    rdx,QWORD PTR fs:0x28
  438174:	mov    eax,ebx
  438176:	jne    4381ff <strcmp@plt+0x34a47>
  43817c:	add    rsp,0x18
  438180:	pop    rbx
  438181:	pop    rbp
  438182:	ret    
  438183:	nop    DWORD PTR [rax+rax*1+0x0]
  438188:	mov    ebx,0xfffffff7
  43818d:	jmp    438166 <strcmp@plt+0x349ae>
  43818f:	nop
  438190:	lea    rcx,[rsp+0x4]
  438195:	xor    esi,esi
  438197:	mov    r8d,0x4
  43819d:	mov    edx,0x8
  4381a2:	mov    edi,ebx
  4381a4:	call   403720 <setsockopt@plt>
  4381a9:	test   eax,eax
  4381ab:	jns    438166 <strcmp@plt+0x349ae>
  4381ad:	call   403050 <__errno_location@plt>
  4381b2:	mov    edi,DWORD PTR [rax]
  4381b4:	call   403170 <strerror@plt>
  4381b9:	lea    rsi,[rip+0x18bf2]        # 450db2 <strcmp@plt+0x4d5fa>
  4381c0:	mov    rdx,rax
  4381c3:	mov    edi,0x3
  4381c8:	xor    eax,eax
  4381ca:	call   4306a0 <strcmp@plt+0x2cee8>
  4381cf:	jmp    438166 <strcmp@plt+0x349ae>
  4381d1:	nop    DWORD PTR [rax+0x0]
  4381d8:	call   403050 <__errno_location@plt>
  4381dd:	mov    edi,DWORD PTR [rax]
  4381df:	call   403170 <strerror@plt>
  4381e4:	lea    rsi,[rip+0x18c2d]        # 450e18 <strcmp@plt+0x4d660>
  4381eb:	mov    rdx,rax
  4381ee:	mov    edi,0x3
  4381f3:	xor    eax,eax
  4381f5:	call   4306a0 <strcmp@plt+0x2cee8>
  4381fa:	jmp    438166 <strcmp@plt+0x349ae>
  4381ff:	call   403460 <__stack_chk_fail@plt>
  438204:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43820f:	nop
  438210:	push   r12
  438212:	push   rbp
  438213:	mov    r12d,esi
  438216:	push   rbx
  438217:	mov    ebx,edi
  438219:	call   438a80 <strcmp@plt+0x352c8>
  43821e:	cmp    eax,0xfffffff7
  438221:	mov    ebp,eax
  438223:	je     43824c <strcmp@plt+0x34a94>
  438225:	mov    edi,ebx
  438227:	call   438bd0 <strcmp@plt+0x35418>
  43822c:	movzx  ecx,r12w
  438230:	xor    edx,edx
  438232:	mov    esi,ebx
  438234:	mov    edi,eax
  438236:	call   439130 <strcmp@plt+0x35978>
  43823b:	mov    esi,ebx
  43823d:	mov    edi,ebp
  43823f:	mov    r12d,eax
  438242:	call   438e30 <strcmp@plt+0x35678>
  438247:	cmp    eax,0x1
  43824a:	jne    438258 <strcmp@plt+0x34aa0>
  43824c:	mov    eax,ebp
  43824e:	pop    rbx
  43824f:	pop    rbp
  438250:	pop    r12
  438252:	ret    
  438253:	nop    DWORD PTR [rax+rax*1+0x0]
  438258:	mov    edi,ebp
  43825a:	mov    ebp,0xfffffff7
  43825f:	call   403790 <close@plt>
  438264:	mov    edi,r12d
  438267:	call   403790 <close@plt>
  43826c:	jmp    43824c <strcmp@plt+0x34a94>
  43826e:	xchg   ax,ax
  438270:	push   r12
  438272:	push   rbp
  438273:	mov    r12d,esi
  438276:	push   rbx
  438277:	mov    ebp,edi
  438279:	sub    rsp,0x10
  43827d:	mov    rax,QWORD PTR fs:0x28
  438286:	mov    QWORD PTR [rsp+0x8],rax
  43828b:	xor    eax,eax
  43828d:	call   438bd0 <strcmp@plt+0x35418>
  438292:	test   eax,eax
  438294:	js     438340 <strcmp@plt+0x34b88>
  43829a:	cmp    ebp,0xa
  43829d:	mov    ebx,eax
  43829f:	mov    DWORD PTR [rsp+0x4],0x1
  4382a7:	je     4382e8 <strcmp@plt+0x34b30>
  4382a9:	xor    edx,edx
  4382ab:	mov    ecx,r12d
  4382ae:	mov    esi,ebp
  4382b0:	mov    edi,ebx
  4382b2:	call   439130 <strcmp@plt+0x35978>
  4382b7:	cmp    eax,0x1
  4382ba:	jne    438330 <strcmp@plt+0x34b78>
  4382bc:	mov    esi,ebp
  4382be:	mov    edi,ebx
  4382c0:	call   438e30 <strcmp@plt+0x35678>
  4382c5:	cmp    eax,0x1
  4382c8:	jne    438330 <strcmp@plt+0x34b78>
  4382ca:	mov    rdx,QWORD PTR [rsp+0x8]
  4382cf:	xor    rdx,QWORD PTR fs:0x28
  4382d8:	mov    eax,ebx
  4382da:	jne    438347 <strcmp@plt+0x34b8f>
  4382dc:	add    rsp,0x10
  4382e0:	pop    rbx
  4382e1:	pop    rbp
  4382e2:	pop    r12
  4382e4:	ret    
  4382e5:	nop    DWORD PTR [rax]
  4382e8:	lea    rcx,[rsp+0x4]
  4382ed:	mov    r8d,0x4
  4382f3:	mov    edx,0x66
  4382f8:	mov    esi,0x11
  4382fd:	mov    edi,eax
  4382ff:	call   403720 <setsockopt@plt>
  438304:	test   eax,eax
  438306:	jns    4382a9 <strcmp@plt+0x34af1>
  438308:	call   403050 <__errno_location@plt>
  43830d:	mov    edi,DWORD PTR [rax]
  43830f:	call   403170 <strerror@plt>
  438314:	lea    rsi,[rip+0x18b1d]        # 450e38 <strcmp@plt+0x4d680>
  43831b:	mov    rdx,rax
  43831e:	mov    edi,0x3
  438323:	xor    eax,eax
  438325:	call   4306a0 <strcmp@plt+0x2cee8>
  43832a:	jmp    4382a9 <strcmp@plt+0x34af1>
  43832f:	nop
  438330:	mov    edi,ebx
  438332:	mov    ebx,0xfffffff7
  438337:	call   403790 <close@plt>
  43833c:	jmp    4382ca <strcmp@plt+0x34b12>
  43833e:	xchg   ax,ax
  438340:	mov    ebx,0xfffffff7
  438345:	jmp    4382ca <strcmp@plt+0x34b12>
  438347:	call   403460 <__stack_chk_fail@plt>
  43834c:	nop    DWORD PTR [rax+0x0]
  438350:	push   rbp
  438351:	push   rbx
  438352:	mov    rbx,rsi
  438355:	sub    rsp,0x8
  438359:	mov    edx,DWORD PTR [rbx+0x10]
  43835c:	mov    rsi,QWORD PTR [rsi+0x38]
  438360:	add    rdx,QWORD PTR [rbx+0x30]
  438364:	sub    edx,DWORD PTR [rbx+0x14]
  438367:	sub    edx,esi
  438369:	call   4035a0 <read@plt>
  43836e:	test   eax,eax
  438370:	je     438388 <strcmp@plt+0x34bd0>
  438372:	add    DWORD PTR [rbx+0x14],eax
  438375:	mov    ebp,0x1
  43837a:	add    rsp,0x8
  43837e:	mov    eax,ebp
  438380:	pop    rbx
  438381:	pop    rbp
  438382:	ret    
  438383:	nop    DWORD PTR [rax+rax*1+0x0]
  438388:	mov    ebp,eax
  43838a:	call   403050 <__errno_location@plt>
  43838f:	mov    edi,DWORD PTR [rax]
  438391:	call   403170 <strerror@plt>
  438396:	lea    rsi,[rip+0x18a2f]        # 450dcc <strcmp@plt+0x4d614>
  43839d:	mov    rdx,rax
  4383a0:	mov    edi,0x3
  4383a5:	xor    eax,eax
  4383a7:	call   4306a0 <strcmp@plt+0x2cee8>
  4383ac:	add    rsp,0x8
  4383b0:	mov    eax,ebp
  4383b2:	pop    rbx
  4383b3:	pop    rbp
  4383b4:	ret    
  4383b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4383c0:	push   r12
  4383c2:	push   rbp
  4383c3:	mov    rbp,rdx
  4383c6:	push   rbx
  4383c7:	mov    r8d,edi
  4383ca:	mov    ecx,0x7
  4383cf:	mov    r12,rsi
  4383d2:	sub    rsp,0xa0
  4383d9:	mov    rdx,QWORD PTR [rsi+0x38]
  4383dd:	mov    rax,QWORD PTR fs:0x28
  4383e6:	mov    QWORD PTR [rsp+0x98],rax
  4383ee:	xor    eax,eax
  4383f0:	mov    eax,DWORD PTR [rsi+0x10]
  4383f3:	mov    rdi,rsp
  4383f6:	lea    rbx,[rsp+0x50]
  4383fb:	add    rax,QWORD PTR [rsi+0x30]
  4383ff:	mov    QWORD PTR [rsp+0x40],rdx
  438404:	sub    eax,DWORD PTR [rsi+0x14]
  438407:	mov    rsi,rsp
  43840a:	sub    eax,edx
  43840c:	xor    edx,edx
  43840e:	mov    QWORD PTR [rsp+0x48],rax
  438413:	xor    eax,eax
  438415:	rep stos QWORD PTR es:[rdi],rax
  438418:	lea    rax,[rsp+0x40]
  43841d:	mov    edi,r8d
  438420:	mov    QWORD PTR [rsp+0x18],0x1
  438429:	mov    QWORD PTR [rsp+0x28],0x28
  438432:	mov    QWORD PTR [rsp],rbx
  438436:	mov    QWORD PTR [rsp+0x10],rax
  43843b:	lea    rax,[rsp+0x70]
  438440:	mov    DWORD PTR [rsp+0x8],0x1c
  438448:	mov    QWORD PTR [rsp+0x20],rax
  43844d:	call   403130 <recvmsg@plt>
  438452:	cmp    eax,0xffffffff
  438455:	je     4385c8 <strcmp@plt+0x34e10>
  43845b:	add    DWORD PTR [r12+0x14],eax
  438460:	cmp    WORD PTR [rsp+0x50],0x2
  438466:	mov    rcx,QWORD PTR [rsp+0x28]
  43846b:	je     438530 <strcmp@plt+0x34d78>
  438471:	cmp    rcx,0xf
  438475:	jbe    4384cb <strcmp@plt+0x34d13>
  438477:	mov    rax,QWORD PTR [rsp+0x20]
  43847c:	movabs rsi,0x3200000029
  438486:	add    rcx,rax
  438489:	jmp    4384a3 <strcmp@plt+0x34ceb>
  43848b:	nop    DWORD PTR [rax+rax*1+0x0]
  438490:	mov    rdi,QWORD PTR [rax]
  438493:	lea    rdx,[rdi+0x7]
  438497:	and    rdx,0xfffffffffffffff8
  43849b:	add    rdx,rax
  43849e:	cmp    rdx,rcx
  4384a1:	ja     4384cb <strcmp@plt+0x34d13>
  4384a3:	test   rax,rax
  4384a6:	je     4384cb <strcmp@plt+0x34d13>
  4384a8:	cmp    QWORD PTR [rax+0x8],rsi
  4384ac:	je     438518 <strcmp@plt+0x34d60>
  4384ae:	mov    rdx,QWORD PTR [rax]
  4384b1:	cmp    rdx,0xf
  4384b5:	jbe    4384cb <strcmp@plt+0x34d13>
  4384b7:	add    rdx,0x7
  4384bb:	and    rdx,0xfffffffffffffff8
  4384bf:	add    rax,rdx
  4384c2:	lea    rdx,[rax+0x10]
  4384c6:	cmp    rcx,rdx
  4384c9:	jae    438490 <strcmp@plt+0x34cd8>
  4384cb:	lea    rsi,[rbx+0x8]
  4384cf:	lea    rdi,[rbp+0x20]
  4384d3:	mov    edx,0xa
  4384d8:	call   424f50 <strcmp@plt+0x21798>
  4384dd:	movzx  eax,WORD PTR [rsp+0x52]
  4384e2:	rol    ax,0x8
  4384e6:	mov    WORD PTR [rbp+0x42],ax
  4384ea:	mov    eax,0x1
  4384ef:	mov    rbx,QWORD PTR [rsp+0x98]
  4384f7:	xor    rbx,QWORD PTR fs:0x28
  438500:	jne    4385f1 <strcmp@plt+0x34e39>
  438506:	add    rsp,0xa0
  43850d:	pop    rbx
  43850e:	pop    rbp
  43850f:	pop    r12
  438511:	ret    
  438512:	nop    WORD PTR [rax+rax*1+0x0]
  438518:	lea    rsi,[rax+0x10]
  43851c:	mov    edx,0xa
  438521:	mov    rdi,rbp
  438524:	call   424f50 <strcmp@plt+0x21798>
  438529:	jmp    4384cb <strcmp@plt+0x34d13>
  43852b:	nop    DWORD PTR [rax+rax*1+0x0]
  438530:	cmp    rcx,0xf
  438534:	jbe    43858b <strcmp@plt+0x34dd3>
  438536:	mov    rax,QWORD PTR [rsp+0x20]
  43853b:	movabs rsi,0x800000000
  438545:	add    rcx,rax
  438548:	jmp    438563 <strcmp@plt+0x34dab>
  43854a:	nop    WORD PTR [rax+rax*1+0x0]
  438550:	mov    rdi,QWORD PTR [rax]
  438553:	lea    rdx,[rdi+0x7]
  438557:	and    rdx,0xfffffffffffffff8
  43855b:	add    rdx,rax
  43855e:	cmp    rdx,rcx
  438561:	ja     43858b <strcmp@plt+0x34dd3>
  438563:	test   rax,rax
  438566:	je     43858b <strcmp@plt+0x34dd3>
  438568:	cmp    QWORD PTR [rax+0x8],rsi
  43856c:	je     4385a0 <strcmp@plt+0x34de8>
  43856e:	mov    rdx,QWORD PTR [rax]
  438571:	cmp    rdx,0xf
  438575:	jbe    43858b <strcmp@plt+0x34dd3>
  438577:	add    rdx,0x7
  43857b:	and    rdx,0xfffffffffffffff8
  43857f:	add    rax,rdx
  438582:	lea    rdx,[rax+0x10]
  438586:	cmp    rcx,rdx
  438589:	jae    438550 <strcmp@plt+0x34d98>
  43858b:	lea    rsi,[rbx+0x4]
  43858f:	lea    rdi,[rbp+0x20]
  438593:	mov    edx,0x2
  438598:	jmp    4384d8 <strcmp@plt+0x34d20>
  43859d:	nop    DWORD PTR [rax]
  4385a0:	lea    rsi,[rax+0x18]
  4385a4:	mov    edx,0x2
  4385a9:	mov    rdi,rbp
  4385ac:	call   424f50 <strcmp@plt+0x21798>
  4385b1:	lea    rsi,[rbx+0x4]
  4385b5:	lea    rdi,[rbp+0x20]
  4385b9:	mov    edx,0x2
  4385be:	jmp    4384d8 <strcmp@plt+0x34d20>
  4385c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4385c8:	call   403050 <__errno_location@plt>
  4385cd:	mov    edi,DWORD PTR [rax]
  4385cf:	call   403170 <strerror@plt>
  4385d4:	lea    rsi,[rip+0x188a5]        # 450e80 <strcmp@plt+0x4d6c8>
  4385db:	mov    rdx,rax
  4385de:	mov    edi,0x3
  4385e3:	xor    eax,eax
  4385e5:	call   4306a0 <strcmp@plt+0x2cee8>
  4385ea:	xor    eax,eax
  4385ec:	jmp    4384ef <strcmp@plt+0x34d37>
  4385f1:	call   403460 <__stack_chk_fail@plt>
  4385f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438600:	push   r13
  438602:	push   r12
  438604:	mov    r9d,edi
  438607:	push   rbp
  438608:	push   rbx
  438609:	mov    rbx,rdx
  43860c:	mov    rbp,rcx
  43860f:	mov    ecx,0x7
  438614:	mov    r13,rsi
  438617:	sub    rsp,0xb8
  43861e:	mov    rdx,QWORD PTR [rsi+0x38]
  438622:	mov    r12,r8
  438625:	mov    rax,QWORD PTR fs:0x28
  43862e:	mov    QWORD PTR [rsp+0xa8],rax
  438636:	xor    eax,eax
  438638:	mov    eax,DWORD PTR [rsi+0x10]
  43863b:	mov    rdi,rsp
  43863e:	add    rax,QWORD PTR [rsi+0x30]
  438642:	mov    QWORD PTR [rsp+0x40],rdx
  438647:	sub    eax,DWORD PTR [rsi+0x14]
  43864a:	mov    rsi,rsp
  43864d:	sub    eax,edx
  43864f:	xor    edx,edx
  438651:	mov    QWORD PTR [rsp+0x48],rax
  438656:	xor    eax,eax
  438658:	rep stos QWORD PTR es:[rdi],rax
  43865b:	lea    rax,[rsp+0x40]
  438660:	mov    edi,r9d
  438663:	mov    QWORD PTR [rsp+0x18],0x1
  43866c:	mov    QWORD PTR [rsp+0x28],0x30
  438675:	mov    DWORD PTR [rsp+0x8],0x1c
  43867d:	mov    QWORD PTR [rsp+0x10],rax
  438682:	lea    rax,[rsp+0x70]
  438687:	mov    QWORD PTR [rsp+0x20],rax
  43868c:	lea    rax,[rsp+0x50]
  438691:	mov    QWORD PTR [rsp],rax
  438695:	call   403130 <recvmsg@plt>
  43869a:	cmp    eax,0xffffffff
  43869d:	je     438810 <strcmp@plt+0x35058>
  4386a3:	add    DWORD PTR [r13+0x14],eax
  4386a7:	cmp    WORD PTR [rsp+0x50],0x2
  4386ad:	mov    rdi,QWORD PTR [rsp+0x28]
  4386b2:	je     438770 <strcmp@plt+0x34fb8>
  4386b8:	cmp    rdi,0xf
  4386bc:	jbe    438720 <strcmp@plt+0x34f68>
  4386be:	mov    rax,QWORD PTR [rsp+0x20]
  4386c3:	test   rax,rax
  4386c6:	je     438720 <strcmp@plt+0x34f68>
  4386c8:	movabs rsi,0x3400000029
  4386d2:	movabs rcx,0x4300000029
  4386dc:	add    rdi,rax
  4386df:	mov    rdx,QWORD PTR [rax+0x8]
  4386e3:	cmp    rdx,rsi
  4386e6:	je     438750 <strcmp@plt+0x34f98>
  4386e8:	cmp    rdx,rcx
  4386eb:	je     438760 <strcmp@plt+0x34fa8>
  4386ed:	mov    rdx,QWORD PTR [rax]
  4386f0:	cmp    rdx,0xf
  4386f4:	jbe    438720 <strcmp@plt+0x34f68>
  4386f6:	add    rdx,0x7
  4386fa:	and    rdx,0xfffffffffffffff8
  4386fe:	add    rax,rdx
  438701:	lea    rdx,[rax+0x10]
  438705:	cmp    rdi,rdx
  438708:	jb     438720 <strcmp@plt+0x34f68>
  43870a:	mov    rdx,QWORD PTR [rax]
  43870d:	add    rdx,0x7
  438711:	and    rdx,0xfffffffffffffff8
  438715:	add    rdx,rax
  438718:	cmp    rdi,rdx
  43871b:	jae    4386df <strcmp@plt+0x34f27>
  43871d:	nop    DWORD PTR [rax]
  438720:	mov    DWORD PTR [rbx],0xa
  438726:	mov    eax,0x1
  43872b:	mov    rbx,QWORD PTR [rsp+0xa8]
  438733:	xor    rbx,QWORD PTR fs:0x28
  43873c:	jne    438839 <strcmp@plt+0x35081>
  438742:	add    rsp,0xb8
  438749:	pop    rbx
  43874a:	pop    rbp
  43874b:	pop    r12
  43874d:	pop    r13
  43874f:	ret    
  438750:	movzx  edx,BYTE PTR [rax+0x10]
  438754:	mov    BYTE PTR [rbp+0x0],dl
  438757:	mov    rdx,QWORD PTR [rax+0x8]
  43875b:	cmp    rdx,rcx
  43875e:	jne    4386ed <strcmp@plt+0x34f35>
  438760:	movzx  edx,BYTE PTR [rax+0x10]
  438764:	mov    BYTE PTR [r12],dl
  438768:	jmp    4386ed <strcmp@plt+0x34f35>
  43876a:	nop    WORD PTR [rax+rax*1+0x0]
  438770:	cmp    rdi,0xf
  438774:	jbe    4387d8 <strcmp@plt+0x35020>
  438776:	mov    rax,QWORD PTR [rsp+0x20]
  43877b:	test   rax,rax
  43877e:	je     4387d8 <strcmp@plt+0x35020>
  438780:	movabs rsi,0x200000000
  43878a:	movabs rcx,0x100000000
  438794:	add    rdi,rax
  438797:	mov    rdx,QWORD PTR [rax+0x8]
  43879b:	cmp    rdx,rsi
  43879e:	je     4387f0 <strcmp@plt+0x35038>
  4387a0:	cmp    rdx,rcx
  4387a3:	je     438800 <strcmp@plt+0x35048>
  4387a5:	mov    rdx,QWORD PTR [rax]
  4387a8:	cmp    rdx,0xf
  4387ac:	jbe    4387d8 <strcmp@plt+0x35020>
  4387ae:	add    rdx,0x7
  4387b2:	and    rdx,0xfffffffffffffff8
  4387b6:	add    rax,rdx
  4387b9:	lea    rdx,[rax+0x10]
  4387bd:	cmp    rdi,rdx
  4387c0:	jb     4387d8 <strcmp@plt+0x35020>
  4387c2:	mov    rdx,QWORD PTR [rax]
  4387c5:	add    rdx,0x7
  4387c9:	and    rdx,0xfffffffffffffff8
  4387cd:	add    rdx,rax
  4387d0:	cmp    rdi,rdx
  4387d3:	jae    438797 <strcmp@plt+0x34fdf>
  4387d5:	nop    DWORD PTR [rax]
  4387d8:	mov    DWORD PTR [rbx],0x2
  4387de:	mov    eax,0x1
  4387e3:	jmp    43872b <strcmp@plt+0x34f73>
  4387e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4387f0:	movzx  edx,BYTE PTR [rax+0x10]
  4387f4:	mov    BYTE PTR [rbp+0x0],dl
  4387f7:	mov    rdx,QWORD PTR [rax+0x8]
  4387fb:	cmp    rdx,rcx
  4387fe:	jne    4387a5 <strcmp@plt+0x34fed>
  438800:	movzx  edx,BYTE PTR [rax+0x10]
  438804:	mov    BYTE PTR [r12],dl
  438808:	jmp    4387a5 <strcmp@plt+0x34fed>
  43880a:	nop    WORD PTR [rax+rax*1+0x0]
  438810:	call   403050 <__errno_location@plt>
  438815:	mov    edi,DWORD PTR [rax]
  438817:	call   403170 <strerror@plt>
  43881c:	lea    rsi,[rip+0x18685]        # 450ea8 <strcmp@plt+0x4d6f0>
  438823:	mov    rdx,rax
  438826:	mov    edi,0x3
  43882b:	xor    eax,eax
  43882d:	call   4306a0 <strcmp@plt+0x2cee8>
  438832:	xor    eax,eax
  438834:	jmp    43872b <strcmp@plt+0x34f73>
  438839:	call   403460 <__stack_chk_fail@plt>
  43883e:	xchg   ax,ax
  438840:	push   rbp
  438841:	push   rbx
  438842:	mov    rbp,r8
  438845:	mov    rbx,rdi
  438848:	sub    rsp,0x8
  43884c:	test   rcx,rcx
  43884f:	mov    WORD PTR [rdi+0x40],si
  438853:	mov    WORD PTR [rdi+0x42],dx
  438857:	je     438898 <strcmp@plt+0x350e0>
  438859:	mov    rsi,rcx
  43885c:	call   424b00 <strcmp@plt+0x21348>
  438861:	test   rbp,rbp
  438864:	lea    rdi,[rbx+0x20]
  438868:	je     438880 <strcmp@plt+0x350c8>
  43886a:	mov    rsi,rbp
  43886d:	call   424b00 <strcmp@plt+0x21348>
  438872:	add    rsp,0x8
  438876:	mov    eax,0x1
  43887b:	pop    rbx
  43887c:	pop    rbp
  43887d:	ret    
  43887e:	xchg   ax,ax
  438880:	xor    esi,esi
  438882:	call   424910 <strcmp@plt+0x21158>
  438887:	add    rsp,0x8
  43888b:	mov    eax,0x1
  438890:	pop    rbx
  438891:	pop    rbp
  438892:	ret    
  438893:	nop    DWORD PTR [rax+rax*1+0x0]
  438898:	xor    esi,esi
  43889a:	call   424910 <strcmp@plt+0x21158>
  43889f:	jmp    438861 <strcmp@plt+0x350a9>
  4388a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4388ac:	nop    DWORD PTR [rax+0x0]
  4388b0:	push   rbx
  4388b1:	mov    rbx,rdi
  4388b4:	mov    edi,0x48
  4388b9:	call   4347a0 <strcmp@plt+0x30fe8>
  4388be:	mov    rdx,QWORD PTR [rbx]
  4388c1:	mov    QWORD PTR [rax],rdx
  4388c4:	mov    rdx,QWORD PTR [rbx+0x8]
  4388c8:	mov    QWORD PTR [rax+0x8],rdx
  4388cc:	mov    rdx,QWORD PTR [rbx+0x10]
  4388d0:	mov    QWORD PTR [rax+0x10],rdx
  4388d4:	mov    rdx,QWORD PTR [rbx+0x18]
  4388d8:	mov    QWORD PTR [rax+0x18],rdx
  4388dc:	mov    rdx,QWORD PTR [rbx+0x20]
  4388e0:	mov    QWORD PTR [rax+0x20],rdx
  4388e4:	mov    rdx,QWORD PTR [rbx+0x28]
  4388e8:	mov    QWORD PTR [rax+0x28],rdx
  4388ec:	mov    rdx,QWORD PTR [rbx+0x30]
  4388f0:	mov    QWORD PTR [rax+0x30],rdx
  4388f4:	mov    rdx,QWORD PTR [rbx+0x38]
  4388f8:	mov    QWORD PTR [rax+0x38],rdx
  4388fc:	mov    rdx,QWORD PTR [rbx+0x40]
  438900:	mov    QWORD PTR [rax+0x40],rdx
  438904:	pop    rbx
  438905:	ret    
  438906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438910:	push   rbp
  438911:	push   rbx
  438912:	mov    rbp,rdi
  438915:	mov    rbx,rsi
  438918:	sub    rsp,0x8
  43891c:	test   dl,dl
  43891e:	jne    438950 <strcmp@plt+0x35198>
  438920:	mov    rsi,rdi
  438923:	mov    rdi,rbx
  438926:	call   424b00 <strcmp@plt+0x21348>
  43892b:	lea    rsi,[rbp+0x20]
  43892f:	lea    rdi,[rbx+0x20]
  438933:	call   424b00 <strcmp@plt+0x21348>
  438938:	movzx  eax,WORD PTR [rbp+0x40]
  43893c:	mov    WORD PTR [rbx+0x40],ax
  438940:	movzx  eax,WORD PTR [rbp+0x42]
  438944:	mov    WORD PTR [rbx+0x42],ax
  438948:	add    rsp,0x8
  43894c:	pop    rbx
  43894d:	pop    rbp
  43894e:	ret    
  43894f:	nop
  438950:	lea    rsi,[rdi+0x20]
  438954:	mov    rdi,rbx
  438957:	call   424b00 <strcmp@plt+0x21348>
  43895c:	lea    rdi,[rbx+0x20]
  438960:	mov    rsi,rbp
  438963:	call   424b00 <strcmp@plt+0x21348>
  438968:	movzx  eax,WORD PTR [rbp+0x42]
  43896c:	mov    WORD PTR [rbx+0x40],ax
  438970:	movzx  eax,WORD PTR [rbp+0x40]
  438974:	mov    WORD PTR [rbx+0x42],ax
  438978:	add    rsp,0x8
  43897c:	pop    rbx
  43897d:	pop    rbp
  43897e:	ret    
  43897f:	nop
  438980:	push   rbp
  438981:	push   rbx
  438982:	mov    edx,0xff
  438987:	mov    esi,0x3
  43898c:	mov    ebp,edi
  43898e:	sub    rsp,0x18
  438992:	mov    rax,QWORD PTR fs:0x28
  43899b:	mov    QWORD PTR [rsp+0x8],rax
  4389a0:	xor    eax,eax
  4389a2:	mov    DWORD PTR [rsp+0x4],0x1
  4389aa:	call   4030e0 <socket@plt>
  4389af:	test   eax,eax
  4389b1:	js     438a18 <strcmp@plt+0x35260>
  4389b3:	lea    rcx,[rsp+0x4]
  4389b8:	mov    r8d,0x4
  4389be:	mov    edx,0x2
  4389c3:	mov    esi,0x1
  4389c8:	mov    edi,eax
  4389ca:	mov    ebx,eax
  4389cc:	call   403720 <setsockopt@plt>
  4389d1:	cmp    eax,0xffffffff
  4389d4:	je     438a41 <strcmp@plt+0x35289>
  4389d6:	mov    rax,0x468e3c
  4389dd:	cmp    DWORD PTR [rax],0x2
  4389e0:	jle    4389f9 <strcmp@plt+0x35241>
  4389e2:	lea    rsi,[rip+0x1853f]        # 450f28 <strcmp@plt+0x4d770>
  4389e9:	mov    ecx,ebp
  4389eb:	mov    edx,ebx
  4389ed:	mov    edi,0x7
  4389f2:	xor    eax,eax
  4389f4:	call   4306a0 <strcmp@plt+0x2cee8>
  4389f9:	mov    rdx,QWORD PTR [rsp+0x8]
  4389fe:	xor    rdx,QWORD PTR fs:0x28
  438a07:	mov    eax,ebx
  438a09:	jne    438a71 <strcmp@plt+0x352b9>
  438a0b:	add    rsp,0x18
  438a0f:	pop    rbx
  438a10:	pop    rbp
  438a11:	ret    
  438a12:	nop    WORD PTR [rax+rax*1+0x0]
  438a18:	call   403050 <__errno_location@plt>
  438a1d:	mov    edi,DWORD PTR [rax]
  438a1f:	mov    ebx,0xfffffff7
  438a24:	call   403170 <strerror@plt>
  438a29:	lea    rsi,[rip+0x18498]        # 450ec8 <strcmp@plt+0x4d710>
  438a30:	mov    rdx,rax
  438a33:	mov    edi,0x2
  438a38:	xor    eax,eax
  438a3a:	call   4306a0 <strcmp@plt+0x2cee8>
  438a3f:	jmp    4389f9 <strcmp@plt+0x35241>
  438a41:	call   403050 <__errno_location@plt>
  438a46:	mov    edi,DWORD PTR [rax]
  438a48:	call   403170 <strerror@plt>
  438a4d:	lea    rsi,[rip+0x184a4]        # 450ef8 <strcmp@plt+0x4d740>
  438a54:	mov    rdx,rax
  438a57:	mov    edi,0x3
  438a5c:	xor    eax,eax
  438a5e:	call   4306a0 <strcmp@plt+0x2cee8>
  438a63:	mov    edi,ebx
  438a65:	mov    ebx,0xfffffff7
  438a6a:	call   403790 <close@plt>
  438a6f:	jmp    4389f9 <strcmp@plt+0x35241>
  438a71:	call   403460 <__stack_chk_fail@plt>
  438a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438a80:	push   rbp
  438a81:	push   rbx
  438a82:	mov    ebp,edi
  438a84:	lea    rdi,[rip+0x18a39]        # 4514c4 <strcmp@plt+0x4dd0c>
  438a8b:	sub    rsp,0x18
  438a8f:	mov    rax,QWORD PTR fs:0x28
  438a98:	mov    QWORD PTR [rsp+0x8],rax
  438a9d:	xor    eax,eax
  438a9f:	mov    DWORD PTR [rsp+0x4],0x1
  438aa7:	call   4031b0 <getprotobyname@plt>
  438aac:	test   rax,rax
  438aaf:	je     438b42 <strcmp@plt+0x3538a>
  438ab5:	mov    edx,DWORD PTR [rax+0x10]
  438ab8:	mov    esi,0x3
  438abd:	mov    edi,ebp
  438abf:	call   4030e0 <socket@plt>
  438ac4:	test   eax,eax
  438ac6:	mov    ebx,eax
  438ac8:	js     438b9b <strcmp@plt+0x353e3>
  438ace:	mov    rax,0x468e3c
  438ad5:	cmp    DWORD PTR [rax],0x2
  438ad8:	jle    438b04 <strcmp@plt+0x3534c>
  438ada:	lea    rax,[rip+0xee44]        # 447925 <strcmp@plt+0x4416d>
  438ae1:	lea    rcx,[rip+0xee38]        # 447920 <strcmp@plt+0x44168>
  438ae8:	cmp    ebp,0x2
  438aeb:	lea    rsi,[rip+0x184ae]        # 450fa0 <strcmp@plt+0x4d7e8>
  438af2:	mov    edx,ebx
  438af4:	mov    edi,0x7
  438af9:	cmovne rcx,rax
  438afd:	xor    eax,eax
  438aff:	call   4306a0 <strcmp@plt+0x2cee8>
  438b04:	lea    rcx,[rsp+0x4]
  438b09:	mov    r8d,0x4
  438b0f:	mov    edx,0x2
  438b14:	mov    esi,0x1
  438b19:	mov    edi,ebx
  438b1b:	call   403720 <setsockopt@plt>
  438b20:	cmp    eax,0xffffffff
  438b23:	je     438b6b <strcmp@plt+0x353b3>
  438b25:	mov    rsi,QWORD PTR [rsp+0x8]
  438b2a:	xor    rsi,QWORD PTR fs:0x28
  438b33:	mov    eax,ebx
  438b35:	jne    438bc7 <strcmp@plt+0x3540f>
  438b3b:	add    rsp,0x18
  438b3f:	pop    rbx
  438b40:	pop    rbp
  438b41:	ret    
  438b42:	call   403050 <__errno_location@plt>
  438b47:	mov    edi,DWORD PTR [rax]
  438b49:	mov    ebx,0xffffffff
  438b4e:	call   403170 <strerror@plt>
  438b53:	lea    rsi,[rip+0x183fe]        # 450f58 <strcmp@plt+0x4d7a0>
  438b5a:	mov    rdx,rax
  438b5d:	mov    edi,0x2
  438b62:	xor    eax,eax
  438b64:	call   4306a0 <strcmp@plt+0x2cee8>
  438b69:	jmp    438b25 <strcmp@plt+0x3536d>
  438b6b:	call   403050 <__errno_location@plt>
  438b70:	mov    edi,DWORD PTR [rax]
  438b72:	call   403170 <strerror@plt>
  438b77:	lea    rsi,[rip+0x1846a]        # 450fe8 <strcmp@plt+0x4d830>
  438b7e:	mov    rdx,rax
  438b81:	mov    edi,0x3
  438b86:	xor    eax,eax
  438b88:	call   4306a0 <strcmp@plt+0x2cee8>
  438b8d:	mov    edi,ebx
  438b8f:	mov    ebx,0xfffffff7
  438b94:	call   403790 <close@plt>
  438b99:	jmp    438b25 <strcmp@plt+0x3536d>
  438b9b:	call   403050 <__errno_location@plt>
  438ba0:	mov    edi,DWORD PTR [rax]
  438ba2:	mov    ebx,0xfffffff7
  438ba7:	call   403170 <strerror@plt>
  438bac:	lea    rsi,[rip+0x183cd]        # 450f80 <strcmp@plt+0x4d7c8>
  438bb3:	mov    rdx,rax
  438bb6:	mov    edi,0x2
  438bbb:	xor    eax,eax
  438bbd:	call   4306a0 <strcmp@plt+0x2cee8>
  438bc2:	jmp    438b25 <strcmp@plt+0x3536d>
  438bc7:	call   403460 <__stack_chk_fail@plt>
  438bcc:	nop    DWORD PTR [rax+0x0]
  438bd0:	push   rbp
  438bd1:	push   rbx
  438bd2:	mov    ebp,edi
  438bd4:	lea    rdi,[rip+0x188e9]        # 4514c4 <strcmp@plt+0x4dd0c>
  438bdb:	sub    rsp,0x18
  438bdf:	mov    rax,QWORD PTR fs:0x28
  438be8:	mov    QWORD PTR [rsp+0x8],rax
  438bed:	xor    eax,eax
  438bef:	mov    DWORD PTR [rsp+0x4],0x1
  438bf7:	call   4031b0 <getprotobyname@plt>
  438bfc:	test   rax,rax
  438bff:	je     438c92 <strcmp@plt+0x354da>
  438c05:	mov    edx,DWORD PTR [rax+0x10]
  438c08:	mov    esi,0x2
  438c0d:	mov    edi,ebp
  438c0f:	call   4030e0 <socket@plt>
  438c14:	test   eax,eax
  438c16:	mov    ebx,eax
  438c18:	js     438ce4 <strcmp@plt+0x3552c>
  438c1e:	mov    rax,0x468e3c
  438c25:	cmp    DWORD PTR [rax],0x2
  438c28:	jle    438c54 <strcmp@plt+0x3549c>
  438c2a:	lea    rax,[rip+0xecf4]        # 447925 <strcmp@plt+0x4416d>
  438c31:	lea    rcx,[rip+0xece8]        # 447920 <strcmp@plt+0x44168>
  438c38:	cmp    ebp,0x2
  438c3b:	lea    rsi,[rip+0x18436]        # 451078 <strcmp@plt+0x4d8c0>
  438c42:	mov    edx,ebx
  438c44:	mov    edi,0x7
  438c49:	cmovne rcx,rax
  438c4d:	xor    eax,eax
  438c4f:	call   4306a0 <strcmp@plt+0x2cee8>
  438c54:	lea    rcx,[rsp+0x4]
  438c59:	mov    r8d,0x4
  438c5f:	mov    edx,0x2
  438c64:	mov    esi,0x1
  438c69:	mov    edi,ebx
  438c6b:	call   403720 <setsockopt@plt>
  438c70:	cmp    eax,0xffffffff
  438c73:	je     438cbb <strcmp@plt+0x35503>
  438c75:	mov    rsi,QWORD PTR [rsp+0x8]
  438c7a:	xor    rsi,QWORD PTR fs:0x28
  438c83:	mov    eax,ebx
  438c85:	jne    438d10 <strcmp@plt+0x35558>
  438c8b:	add    rsp,0x18
  438c8f:	pop    rbx
  438c90:	pop    rbp
  438c91:	ret    
  438c92:	call   403050 <__errno_location@plt>
  438c97:	mov    edi,DWORD PTR [rax]
  438c99:	mov    ebx,0xfffffff7
  438c9e:	call   403170 <strerror@plt>
  438ca3:	lea    rsi,[rip+0x18376]        # 451020 <strcmp@plt+0x4d868>
  438caa:	mov    rdx,rax
  438cad:	mov    edi,0x2
  438cb2:	xor    eax,eax
  438cb4:	call   4306a0 <strcmp@plt+0x2cee8>
  438cb9:	jmp    438c75 <strcmp@plt+0x354bd>
  438cbb:	call   403050 <__errno_location@plt>
  438cc0:	mov    edi,DWORD PTR [rax]
  438cc2:	mov    ebx,0xfffffff7
  438cc7:	call   403170 <strerror@plt>
  438ccc:	lea    rsi,[rip+0x183ed]        # 4510c0 <strcmp@plt+0x4d908>
  438cd3:	mov    rdx,rax
  438cd6:	mov    edi,0x3
  438cdb:	xor    eax,eax
  438cdd:	call   4306a0 <strcmp@plt+0x2cee8>
  438ce2:	jmp    438c75 <strcmp@plt+0x354bd>
  438ce4:	call   403050 <__errno_location@plt>
  438ce9:	mov    edi,DWORD PTR [rax]
  438ceb:	mov    ebx,0xfffffff7
  438cf0:	call   403170 <strerror@plt>
  438cf5:	lea    rsi,[rip+0x18354]        # 451050 <strcmp@plt+0x4d898>
  438cfc:	mov    rdx,rax
  438cff:	mov    edi,0x2
  438d04:	xor    eax,eax
  438d06:	call   4306a0 <strcmp@plt+0x2cee8>
  438d0b:	jmp    438c75 <strcmp@plt+0x354bd>
  438d10:	call   403460 <__stack_chk_fail@plt>
  438d15:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  438d20:	push   rbp
  438d21:	push   rbx
  438d22:	xor    edx,edx
  438d24:	mov    esi,0x3
  438d29:	mov    edi,0x10
  438d2e:	sub    rsp,0x28
  438d32:	mov    rax,QWORD PTR fs:0x28
  438d3b:	mov    QWORD PTR [rsp+0x18],rax
  438d40:	xor    eax,eax
  438d42:	mov    eax,0x10
  438d47:	mov    QWORD PTR [rsp+0xc],0x0
  438d50:	mov    DWORD PTR [rsp+0x14],0x771
  438d58:	mov    WORD PTR [rsp+0xc],ax
  438d5d:	call   4030e0 <socket@plt>
  438d62:	test   eax,eax
  438d64:	js     438d98 <strcmp@plt+0x355e0>
  438d66:	lea    rbp,[rsp+0xc]
  438d6b:	mov    edx,0xc
  438d70:	mov    edi,eax
  438d72:	mov    ebx,eax
  438d74:	mov    rsi,rbp
  438d77:	call   403080 <bind@plt>
  438d7c:	mov    rcx,QWORD PTR [rsp+0x18]
  438d81:	xor    rcx,QWORD PTR fs:0x28
  438d8a:	mov    eax,ebx
  438d8c:	jne    438db2 <strcmp@plt+0x355fa>
  438d8e:	add    rsp,0x28
  438d92:	pop    rbx
  438d93:	pop    rbp
  438d94:	ret    
  438d95:	nop    DWORD PTR [rax]
  438d98:	lea    rsi,[rip+0x18359]        # 4510f8 <strcmp@plt+0x4d940>
  438d9f:	mov    edi,0x2
  438da4:	xor    eax,eax
  438da6:	mov    ebx,0xfffffff7
  438dab:	call   4306a0 <strcmp@plt+0x2cee8>
  438db0:	jmp    438d7c <strcmp@plt+0x355c4>
  438db2:	call   403460 <__stack_chk_fail@plt>
  438db7:	nop    WORD PTR [rax+rax*1+0x0]
  438dc0:	push   rbp
  438dc1:	push   rbx
  438dc2:	mov    ebp,edi
  438dc4:	mov    rbx,rsi
  438dc7:	mov    rdi,rsi
  438dca:	sub    rsp,0x8
  438dce:	call   4031d0 <strlen@plt>
  438dd3:	mov    edx,0x19
  438dd8:	mov    r8d,eax
  438ddb:	mov    rcx,rbx
  438dde:	mov    esi,0x1
  438de3:	mov    edi,ebp
  438de5:	call   403720 <setsockopt@plt>
  438dea:	cmp    eax,0xffffffff
  438ded:	mov    edx,0x1
  438df2:	je     438e00 <strcmp@plt+0x35648>
  438df4:	add    rsp,0x8
  438df8:	mov    eax,edx
  438dfa:	pop    rbx
  438dfb:	pop    rbp
  438dfc:	ret    
  438dfd:	nop    DWORD PTR [rax]
  438e00:	call   403050 <__errno_location@plt>
  438e05:	mov    edi,DWORD PTR [rax]
  438e07:	call   403170 <strerror@plt>
  438e0c:	lea    rsi,[rip+0x18325]        # 451138 <strcmp@plt+0x4d980>
  438e13:	mov    rdx,rax
  438e16:	mov    edi,0x3
  438e1b:	xor    eax,eax
  438e1d:	call   4306a0 <strcmp@plt+0x2cee8>
  438e22:	add    rsp,0x8
  438e26:	xor    edx,edx
  438e28:	mov    eax,edx
  438e2a:	pop    rbx
  438e2b:	pop    rbp
  438e2c:	ret    
  438e2d:	nop    DWORD PTR [rax]
  438e30:	push   rbp
  438e31:	push   rbx
  438e32:	mov    ebx,edi
  438e34:	sub    rsp,0x18
  438e38:	mov    rax,QWORD PTR fs:0x28
  438e41:	mov    QWORD PTR [rsp+0x8],rax
  438e46:	xor    eax,eax
  438e48:	cmp    esi,0x2
  438e4b:	mov    DWORD PTR [rsp+0x4],0x1
  438e53:	je     438ed0 <strcmp@plt+0x35718>
  438e55:	cmp    esi,0xa
  438e58:	jne    438eb0 <strcmp@plt+0x356f8>
  438e5a:	lea    rbp,[rsp+0x4]
  438e5f:	mov    r8d,0x4
  438e65:	mov    edx,0x42
  438e6a:	mov    esi,0x29
  438e6f:	mov    rcx,rbp
  438e72:	call   403720 <setsockopt@plt>
  438e77:	test   eax,eax
  438e79:	js     438f60 <strcmp@plt+0x357a8>
  438e7f:	mov    r8d,0x4
  438e85:	mov    rcx,rbp
  438e88:	mov    edx,0x33
  438e8d:	mov    esi,0x29
  438e92:	mov    edi,ebx
  438e94:	call   403720 <setsockopt@plt>
  438e99:	test   eax,eax
  438e9b:	js     438f90 <strcmp@plt+0x357d8>
  438ea1:	mov    eax,0x1
  438ea6:	jmp    438eb2 <strcmp@plt+0x356fa>
  438ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  438eb0:	xor    eax,eax
  438eb2:	mov    rcx,QWORD PTR [rsp+0x8]
  438eb7:	xor    rcx,QWORD PTR fs:0x28
  438ec0:	jne    438fb9 <strcmp@plt+0x35801>
  438ec6:	add    rsp,0x18
  438eca:	pop    rbx
  438ecb:	pop    rbp
  438ecc:	ret    
  438ecd:	nop    DWORD PTR [rax]
  438ed0:	lea    rbp,[rsp+0x4]
  438ed5:	xor    esi,esi
  438ed7:	mov    r8d,0x4
  438edd:	mov    edx,0xd
  438ee2:	mov    rcx,rbp
  438ee5:	call   403720 <setsockopt@plt>
  438eea:	test   eax,eax
  438eec:	js     438f30 <strcmp@plt+0x35778>
  438eee:	xor    esi,esi
  438ef0:	mov    r8d,0x4
  438ef6:	mov    rcx,rbp
  438ef9:	mov    edx,0xc
  438efe:	mov    edi,ebx
  438f00:	call   403720 <setsockopt@plt>
  438f05:	test   eax,eax
  438f07:	jns    438ea1 <strcmp@plt+0x356e9>
  438f09:	call   403050 <__errno_location@plt>
  438f0e:	mov    edi,DWORD PTR [rax]
  438f10:	call   403170 <strerror@plt>
  438f15:	lea    rsi,[rip+0x1828c]        # 4511a8 <strcmp@plt+0x4d9f0>
  438f1c:	mov    rdx,rax
  438f1f:	mov    edi,0x3
  438f24:	xor    eax,eax
  438f26:	call   4306a0 <strcmp@plt+0x2cee8>
  438f2b:	xor    eax,eax
  438f2d:	jmp    438eb2 <strcmp@plt+0x356fa>
  438f2f:	nop
  438f30:	call   403050 <__errno_location@plt>
  438f35:	mov    edi,DWORD PTR [rax]
  438f37:	call   403170 <strerror@plt>
  438f3c:	lea    rsi,[rip+0x1822d]        # 451170 <strcmp@plt+0x4d9b8>
  438f43:	mov    rdx,rax
  438f46:	mov    edi,0x3
  438f4b:	xor    eax,eax
  438f4d:	call   4306a0 <strcmp@plt+0x2cee8>
  438f52:	xor    eax,eax
  438f54:	jmp    438eb2 <strcmp@plt+0x356fa>
  438f59:	nop    DWORD PTR [rax+0x0]
  438f60:	call   403050 <__errno_location@plt>
  438f65:	mov    edi,DWORD PTR [rax]
  438f67:	call   403170 <strerror@plt>
  438f6c:	lea    rsi,[rip+0x1826d]        # 4511e0 <strcmp@plt+0x4da28>
  438f73:	mov    rdx,rax
  438f76:	mov    edi,0x3
  438f7b:	xor    eax,eax
  438f7d:	call   4306a0 <strcmp@plt+0x2cee8>
  438f82:	xor    eax,eax
  438f84:	jmp    438eb2 <strcmp@plt+0x356fa>
  438f89:	nop    DWORD PTR [rax+0x0]
  438f90:	call   403050 <__errno_location@plt>
  438f95:	mov    edi,DWORD PTR [rax]
  438f97:	call   403170 <strerror@plt>
  438f9c:	lea    rsi,[rip+0x18275]        # 451218 <strcmp@plt+0x4da60>
  438fa3:	mov    rdx,rax
  438fa6:	mov    edi,0x3
  438fab:	xor    eax,eax
  438fad:	call   4306a0 <strcmp@plt+0x2cee8>
  438fb2:	xor    eax,eax
  438fb4:	jmp    438eb2 <strcmp@plt+0x356fa>
  438fb9:	call   403460 <__stack_chk_fail@plt>
  438fbe:	xchg   ax,ax
  438fc0:	push   rbx
  438fc1:	mov    ebx,edi
  438fc3:	sub    rsp,0x10
  438fc7:	cmp    esi,0x2
  438fca:	mov    DWORD PTR [rsp+0xc],edx
  438fce:	mov    DWORD PTR [rsp+0x8],ecx
  438fd2:	je     439040 <strcmp@plt+0x35888>
  438fd4:	cmp    esi,0xa
  438fd7:	jne    439030 <strcmp@plt+0x35878>
  438fd9:	lea    rcx,[rsp+0x8]
  438fde:	mov    r8d,0x4
  438fe4:	mov    edx,0x43
  438fe9:	mov    esi,0x29
  438fee:	call   403720 <setsockopt@plt>
  438ff3:	test   eax,eax
  438ff5:	js     4390d0 <strcmp@plt+0x35918>
  438ffb:	lea    rcx,[rsp+0xc]
  439000:	mov    r8d,0x4
  439006:	mov    edx,0x34
  43900b:	mov    esi,0x29
  439010:	mov    edi,ebx
  439012:	call   403720 <setsockopt@plt>
  439017:	test   eax,eax
  439019:	js     439100 <strcmp@plt+0x35948>
  43901f:	add    rsp,0x10
  439023:	mov    eax,0x1
  439028:	pop    rbx
  439029:	ret    
  43902a:	nop    WORD PTR [rax+rax*1+0x0]
  439030:	xor    eax,eax
  439032:	add    rsp,0x10
  439036:	pop    rbx
  439037:	ret    
  439038:	nop    DWORD PTR [rax+rax*1+0x0]
  439040:	lea    rcx,[rsp+0x8]
  439045:	xor    esi,esi
  439047:	mov    r8d,0x4
  43904d:	mov    edx,0x1
  439052:	call   403720 <setsockopt@plt>
  439057:	test   eax,eax
  439059:	js     4390a0 <strcmp@plt+0x358e8>
  43905b:	lea    rcx,[rsp+0xc]
  439060:	xor    esi,esi
  439062:	mov    r8d,0x4
  439068:	mov    edx,0x2
  43906d:	mov    edi,ebx
  43906f:	call   403720 <setsockopt@plt>
  439074:	test   eax,eax
  439076:	jns    43901f <strcmp@plt+0x35867>
  439078:	call   403050 <__errno_location@plt>
  43907d:	mov    edi,DWORD PTR [rax]
  43907f:	call   403170 <strerror@plt>
  439084:	lea    rsi,[rip+0x181fd]        # 451288 <strcmp@plt+0x4dad0>
  43908b:	mov    rdx,rax
  43908e:	mov    edi,0x3
  439093:	xor    eax,eax
  439095:	call   4306a0 <strcmp@plt+0x2cee8>
  43909a:	xor    eax,eax
  43909c:	jmp    439032 <strcmp@plt+0x3587a>
  43909e:	xchg   ax,ax
  4390a0:	call   403050 <__errno_location@plt>
  4390a5:	mov    edi,DWORD PTR [rax]
  4390a7:	call   403170 <strerror@plt>
  4390ac:	lea    rsi,[rip+0x181a5]        # 451258 <strcmp@plt+0x4daa0>
  4390b3:	mov    rdx,rax
  4390b6:	mov    edi,0x3
  4390bb:	xor    eax,eax
  4390bd:	call   4306a0 <strcmp@plt+0x2cee8>
  4390c2:	xor    eax,eax
  4390c4:	jmp    439032 <strcmp@plt+0x3587a>
  4390c9:	nop    DWORD PTR [rax+0x0]
  4390d0:	call   403050 <__errno_location@plt>
  4390d5:	mov    edi,DWORD PTR [rax]
  4390d7:	call   403170 <strerror@plt>
  4390dc:	lea    rsi,[rip+0x181dd]        # 4512c0 <strcmp@plt+0x4db08>
  4390e3:	mov    rdx,rax
  4390e6:	mov    edi,0x3
  4390eb:	xor    eax,eax
  4390ed:	call   4306a0 <strcmp@plt+0x2cee8>
  4390f2:	xor    eax,eax
  4390f4:	jmp    439032 <strcmp@plt+0x3587a>
  4390f9:	nop    DWORD PTR [rax+0x0]
  439100:	call   403050 <__errno_location@plt>
  439105:	mov    edi,DWORD PTR [rax]
  439107:	call   403170 <strerror@plt>
  43910c:	lea    rsi,[rip+0x181e5]        # 4512f8 <strcmp@plt+0x4db40>
  439113:	mov    rdx,rax
  439116:	mov    edi,0x3
  43911b:	xor    eax,eax
  43911d:	call   4306a0 <strcmp@plt+0x2cee8>
  439122:	xor    eax,eax
  439124:	jmp    439032 <strcmp@plt+0x3587a>
  439129:	nop    DWORD PTR [rax+0x0]
  439130:	push   r13
  439132:	push   r12
  439134:	mov    r13d,edi
  439137:	push   rbp
  439138:	push   rbx
  439139:	mov    rbp,rdx
  43913c:	mov    ebx,esi
  43913e:	mov    r12d,ecx
  439141:	sub    rsp,0x48
  439145:	mov    rax,QWORD PTR fs:0x28
  43914e:	mov    QWORD PTR [rsp+0x38],rax
  439153:	xor    eax,eax
  439155:	cmp    esi,0x2
  439158:	je     439230 <strcmp@plt+0x35a78>
  43915e:	cmp    esi,0xa
  439161:	je     439188 <strcmp@plt+0x359d0>
  439163:	xor    eax,eax
  439165:	mov    rcx,QWORD PTR [rsp+0x38]
  43916a:	xor    rcx,QWORD PTR fs:0x28
  439173:	jne    4392f1 <strcmp@plt+0x35b39>
  439179:	add    rsp,0x48
  43917d:	pop    rbx
  43917e:	pop    rbp
  43917f:	pop    r12
  439181:	pop    r13
  439183:	ret    
  439184:	nop    DWORD PTR [rax+0x0]
  439188:	mov    ecx,0xa
  43918d:	test   r12d,r12d
  439190:	mov    QWORD PTR [rsp+0x10],0x0
  439199:	mov    QWORD PTR [rsp+0x18],0x0
  4391a2:	mov    QWORD PTR [rsp+0x20],0x0
  4391ab:	mov    DWORD PTR [rsp+0x28],0x0
  4391b3:	mov    WORD PTR [rsp+0x10],cx
  4391b8:	jne    4392d0 <strcmp@plt+0x35b18>
  4391be:	test   rbp,rbp
  4391c1:	je     4392e5 <strcmp@plt+0x35b2d>
  4391c7:	mov    rdi,rbp
  4391ca:	call   4257f0 <strcmp@plt+0x22038>
  4391cf:	mov    rdx,QWORD PTR [rax+0x8]
  4391d3:	mov    rax,QWORD PTR [rax]
  4391d6:	lea    rsi,[rsp+0x10]
  4391db:	mov    QWORD PTR [rsp+0x20],rdx
  4391e0:	mov    QWORD PTR [rsp+0x18],rax
  4391e5:	mov    edx,0x1c
  4391ea:	mov    edi,r13d
  4391ed:	call   403080 <bind@plt>
  4391f2:	test   eax,eax
  4391f4:	mov    rax,0x468e3c
  4391fb:	je     439270 <strcmp@plt+0x35ab8>
  4391fd:	mov    edx,DWORD PTR [rax]
  4391ff:	test   edx,edx
  439201:	jle    439163 <strcmp@plt+0x359ab>
  439207:	call   403050 <__errno_location@plt>
  43920c:	mov    edi,DWORD PTR [rax]
  43920e:	call   403170 <strerror@plt>
  439213:	lea    rsi,[rip+0x182ae]        # 4514c8 <strcmp@plt+0x4dd10>
  43921a:	mov    rdx,rax
  43921d:	mov    edi,0x5
  439222:	xor    eax,eax
  439224:	call   4306a0 <strcmp@plt+0x2cee8>
  439229:	jmp    439163 <strcmp@plt+0x359ab>
  43922e:	xchg   ax,ax
  439230:	mov    esi,0x2
  439235:	test   ecx,ecx
  439237:	mov    QWORD PTR [rsp],0x0
  43923f:	mov    QWORD PTR [rsp+0x8],0x0
  439248:	mov    WORD PTR [rsp],si
  43924c:	jne    4392b0 <strcmp@plt+0x35af8>
  43924e:	test   rbp,rbp
  439251:	je     4392c0 <strcmp@plt+0x35b08>
  439253:	mov    rdi,rbp
  439256:	call   4257e0 <strcmp@plt+0x22028>
  43925b:	mov    eax,DWORD PTR [rax]
  43925d:	mov    edx,0x10
  439262:	mov    rsi,rsp
  439265:	mov    DWORD PTR [rsp+0x4],eax
  439269:	jmp    4391ea <strcmp@plt+0x35a32>
  43926e:	xchg   ax,ax
  439270:	mov    eax,DWORD PTR [rax]
  439272:	test   eax,eax
  439274:	jle    43929d <strcmp@plt+0x35ae5>
  439276:	mov    rdi,rbp
  439279:	call   424890 <strcmp@plt+0x210d8>
  43927e:	lea    rsi,[rip+0x180ab]        # 451330 <strcmp@plt+0x4db78>
  439285:	mov    rcx,rax
  439288:	mov    r9d,ebx
  43928b:	mov    r8d,r12d
  43928e:	mov    edx,r13d
  439291:	mov    edi,0x5
  439296:	xor    eax,eax
  439298:	call   4306a0 <strcmp@plt+0x2cee8>
  43929d:	mov    eax,0x1
  4392a2:	jmp    439165 <strcmp@plt+0x359ad>
  4392a7:	nop    WORD PTR [rax+rax*1+0x0]
  4392b0:	mov    eax,ecx
  4392b2:	rol    ax,0x8
  4392b6:	test   rbp,rbp
  4392b9:	mov    WORD PTR [rsp+0x2],ax
  4392be:	jne    439253 <strcmp@plt+0x35a9b>
  4392c0:	mov    edx,0x10
  4392c5:	mov    rsi,rsp
  4392c8:	jmp    4391ea <strcmp@plt+0x35a32>
  4392cd:	nop    DWORD PTR [rax]
  4392d0:	mov    eax,r12d
  4392d3:	rol    ax,0x8
  4392d7:	test   rbp,rbp
  4392da:	mov    WORD PTR [rsp+0x12],ax
  4392df:	jne    4391c7 <strcmp@plt+0x35a0f>
  4392e5:	mov    rax,QWORD PTR [rip+0x2ecf4]        # 467fe0 <strcmp@plt+0x64828>
  4392ec:	jmp    4391cf <strcmp@plt+0x35a17>
  4392f1:	call   403460 <__stack_chk_fail@plt>
  4392f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439300:	push   r14
  439302:	push   r13
  439304:	mov    r13d,edi
  439307:	push   r12
  439309:	push   rbp
  43930a:	mov    rdi,rcx
  43930d:	push   rbx
  43930e:	mov    r14,rsi
  439311:	mov    r12d,edx
  439314:	mov    rbp,rcx
  439317:	sub    rsp,0x40
  43931b:	mov    rax,QWORD PTR fs:0x28
  439324:	mov    QWORD PTR [rsp+0x38],rax
  439329:	xor    eax,eax
  43932b:	call   4257c0 <strcmp@plt+0x22008>
  439330:	cmp    eax,0x2
  439333:	je     439408 <strcmp@plt+0x35c50>
  439339:	cmp    eax,0xa
  43933c:	jne    4393e2 <strcmp@plt+0x35c2a>
  439342:	lea    rbx,[rsp+0x10]
  439347:	lea    rdi,[rsp+0x18]
  43934c:	mov    eax,0xa
  439351:	mov    rsi,rbp
  439354:	mov    QWORD PTR [rsp+0x10],0x0
  43935d:	mov    QWORD PTR [rsp+0x18],0x0
  439366:	mov    QWORD PTR [rsp+0x20],0x0
  43936f:	mov    DWORD PTR [rsp+0x28],0x0
  439377:	mov    WORD PTR [rsp+0x10],ax
  43937c:	call   4259d0 <strcmp@plt+0x22218>
  439381:	mov    r9d,0x1c
  439387:	mov    r8,rbx
  43938a:	xor    ecx,ecx
  43938c:	movsxd rdx,r12d
  43938f:	mov    rsi,r14
  439392:	mov    edi,r13d
  439395:	call   403060 <sendto@plt>
  43939a:	cmp    r12d,eax
  43939d:	je     439440 <strcmp@plt+0x35c88>
  4393a3:	mov    rax,0x468e3c
  4393aa:	cmp    DWORD PTR [rax],0x1
  4393ad:	jle    4393e2 <strcmp@plt+0x35c2a>
  4393af:	call   403050 <__errno_location@plt>
  4393b4:	mov    edi,DWORD PTR [rax]
  4393b6:	call   403170 <strerror@plt>
  4393bb:	mov    rdi,rbp
  4393be:	mov    rbx,rax
  4393c1:	call   425f90 <strcmp@plt+0x227d8>
  4393c6:	lea    rsi,[rip+0x17fb3]        # 451380 <strcmp@plt+0x4dbc8>
  4393cd:	mov    rdx,rax
  4393d0:	mov    r8,rbx
  4393d3:	mov    ecx,r13d
  4393d6:	mov    edi,0x6
  4393db:	xor    eax,eax
  4393dd:	call   4306a0 <strcmp@plt+0x2cee8>
  4393e2:	xor    eax,eax
  4393e4:	mov    rcx,QWORD PTR [rsp+0x38]
  4393e9:	xor    rcx,QWORD PTR fs:0x28
  4393f2:	jne    439447 <strcmp@plt+0x35c8f>
  4393f4:	add    rsp,0x40
  4393f8:	pop    rbx
  4393f9:	pop    rbp
  4393fa:	pop    r12
  4393fc:	pop    r13
  4393fe:	pop    r14
  439400:	ret    
  439401:	nop    DWORD PTR [rax+0x0]
  439408:	lea    rdi,[rsp+0x4]
  43940d:	mov    edx,0x2
  439412:	mov    rsi,rbp
  439415:	mov    QWORD PTR [rsp],0x0
  43941d:	mov    QWORD PTR [rsp+0x8],0x0
  439426:	mov    WORD PTR [rsp],dx
  43942a:	call   4259d0 <strcmp@plt+0x22218>
  43942f:	mov    r9d,0x10
  439435:	mov    r8,rsp
  439438:	jmp    43938a <strcmp@plt+0x35bd2>
  43943d:	nop    DWORD PTR [rax]
  439440:	mov    eax,0x1
  439445:	jmp    4393e4 <strcmp@plt+0x35c2c>
  439447:	call   403460 <__stack_chk_fail@plt>
  43944c:	nop    DWORD PTR [rax+0x0]
  439450:	push   r15
  439452:	push   r14
  439454:	mov    r14,rsi
  439457:	push   r13
  439459:	push   r12
  43945b:	mov    r13d,edi
  43945e:	push   rbp
  43945f:	push   rbx
  439460:	mov    rdi,rcx
  439463:	mov    ebx,edx
  439465:	mov    r12,rcx
  439468:	mov    ebp,r8d
  43946b:	sub    rsp,0x48
  43946f:	mov    rax,QWORD PTR fs:0x28
  439478:	mov    QWORD PTR [rsp+0x38],rax
  43947d:	xor    eax,eax
  43947f:	call   4251c0 <strcmp@plt+0x21a08>
  439484:	cmp    ax,0x2
  439488:	je     439558 <strcmp@plt+0x35da0>
  43948e:	cmp    ax,0xa
  439492:	jne    439540 <strcmp@plt+0x35d88>
  439498:	mov    eax,0xa
  43949d:	rol    bp,0x8
  4394a1:	mov    rdi,r12
  4394a4:	mov    QWORD PTR [rsp+0x10],0x0
  4394ad:	mov    QWORD PTR [rsp+0x18],0x0
  4394b6:	lea    r15,[rsp+0x10]
  4394bb:	mov    QWORD PTR [rsp+0x20],0x0
  4394c4:	mov    DWORD PTR [rsp+0x28],0x0
  4394cc:	mov    WORD PTR [rsp+0x10],ax
  4394d1:	mov    WORD PTR [rsp+0x12],bp
  4394d6:	call   4257f0 <strcmp@plt+0x22038>
  4394db:	mov    rdx,QWORD PTR [rax+0x8]
  4394df:	mov    rax,QWORD PTR [rax]
  4394e2:	mov    r9d,0x1c
  4394e8:	mov    r8,r15
  4394eb:	mov    QWORD PTR [rsp+0x18],rax
  4394f0:	mov    QWORD PTR [rsp+0x20],rdx
  4394f5:	movsxd rdx,ebx
  4394f8:	xor    ecx,ecx
  4394fa:	mov    rsi,r14
  4394fd:	mov    edi,r13d
  439500:	call   403060 <sendto@plt>
  439505:	test   rax,rax
  439508:	mov    edx,0x1
  43950d:	js     4395a0 <strcmp@plt+0x35de8>
  439513:	mov    rbx,QWORD PTR [rsp+0x38]
  439518:	xor    rbx,QWORD PTR fs:0x28
  439521:	mov    eax,edx
  439523:	jne    439605 <strcmp@plt+0x35e4d>
  439529:	add    rsp,0x48
  43952d:	pop    rbx
  43952e:	pop    rbp
  43952f:	pop    r12
  439531:	pop    r13
  439533:	pop    r14
  439535:	pop    r15
  439537:	ret    
  439538:	nop    DWORD PTR [rax+rax*1+0x0]
  439540:	mov    rax,0x468e3c
  439547:	cmp    DWORD PTR [rax],0x1
  43954a:	jg     4395e0 <strcmp@plt+0x35e28>
  439550:	xor    edx,edx
  439552:	jmp    439513 <strcmp@plt+0x35d5b>
  439554:	nop    DWORD PTR [rax+0x0]
  439558:	mov    edx,0x2
  43955d:	rol    bp,0x8
  439561:	mov    rdi,r12
  439564:	mov    QWORD PTR [rsp],0x0
  43956c:	mov    QWORD PTR [rsp+0x8],0x0
  439575:	mov    WORD PTR [rsp+0x2],bp
  43957a:	mov    WORD PTR [rsp],dx
  43957e:	call   4257e0 <strcmp@plt+0x22028>
  439583:	mov    eax,DWORD PTR [rax]
  439585:	mov    r9d,0x10
  43958b:	mov    r8,rsp
  43958e:	mov    DWORD PTR [rsp+0x4],eax
  439592:	jmp    4394f5 <strcmp@plt+0x35d3d>
  439597:	nop    WORD PTR [rax+rax*1+0x0]
  4395a0:	mov    rax,0x468e3c
  4395a7:	cmp    DWORD PTR [rax],0x1
  4395aa:	jle    439550 <strcmp@plt+0x35d98>
  4395ac:	call   403050 <__errno_location@plt>
  4395b1:	mov    edi,DWORD PTR [rax]
  4395b3:	call   403170 <strerror@plt>
  4395b8:	lea    rsi,[rip+0x17e39]        # 4513f8 <strcmp@plt+0x4dc40>
  4395bf:	mov    rdx,rax
  4395c2:	mov    ecx,r13d
  4395c5:	mov    edi,0x6
  4395ca:	xor    eax,eax
  4395cc:	call   4306a0 <strcmp@plt+0x2cee8>
  4395d1:	xor    edx,edx
  4395d3:	jmp    439513 <strcmp@plt+0x35d5b>
  4395d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4395e0:	mov    rdi,r12
  4395e3:	call   4251c0 <strcmp@plt+0x21a08>
  4395e8:	lea    rsi,[rip+0x17de1]        # 4513d0 <strcmp@plt+0x4dc18>
  4395ef:	movzx  edx,ax
  4395f2:	mov    edi,0x6
  4395f7:	xor    eax,eax
  4395f9:	call   4306a0 <strcmp@plt+0x2cee8>
  4395fe:	xor    edx,edx
  439600:	jmp    439513 <strcmp@plt+0x35d5b>
  439605:	call   403460 <__stack_chk_fail@plt>
  43960a:	nop    WORD PTR [rax+rax*1+0x0]
  439610:	push   rbx
  439611:	movzx  edx,WORD PTR [rdi]
  439614:	mov    rbx,rsi
  439617:	cmp    dx,0x2
  43961b:	je     439650 <strcmp@plt+0x35e98>
  43961d:	cmp    dx,0xa
  439621:	je     439678 <strcmp@plt+0x35ec0>
  439623:	mov    rax,0x468e3c
  43962a:	cmp    DWORD PTR [rax],0x2
  43962d:	jg     439638 <strcmp@plt+0x35e80>
  43962f:	xor    eax,eax
  439631:	pop    rbx
  439632:	ret    
  439633:	nop    DWORD PTR [rax+rax*1+0x0]
  439638:	lea    rsi,[rip+0x17de9]        # 451428 <strcmp@plt+0x4dc70>
  43963f:	xor    eax,eax
  439641:	mov    edi,0x7
  439646:	call   4306a0 <strcmp@plt+0x2cee8>
  43964b:	xor    eax,eax
  43964d:	jmp    439631 <strcmp@plt+0x35e79>
  43964f:	nop
  439650:	lea    rsi,[rdi+0x4]
  439654:	mov    edx,0x2
  439659:	mov    rdi,rbx
  43965c:	call   424f50 <strcmp@plt+0x21798>
  439661:	mov    rdi,rbx
  439664:	mov    esi,0x1
  439669:	call   424910 <strcmp@plt+0x21158>
  43966e:	mov    eax,0x1
  439673:	pop    rbx
  439674:	ret    
  439675:	nop    DWORD PTR [rax]
  439678:	lea    rsi,[rdi+0x8]
  43967c:	mov    edx,0xa
  439681:	mov    rdi,rbx
  439684:	call   424f50 <strcmp@plt+0x21798>
  439689:	jmp    439661 <strcmp@plt+0x35ea9>
  43968b:	nop    DWORD PTR [rax+rax*1+0x0]
  439690:	push   rbp
  439691:	push   rbx
  439692:	mov    rbx,rdi
  439695:	sub    rsp,0x8
  439699:	cmp    DWORD PTR [rdi+0x18],0x1
  43969d:	je     4396e0 <strcmp@plt+0x35f28>
  43969f:	mov    rax,0x468e3c
  4396a6:	cmp    DWORD PTR [rax],0x1
  4396a9:	jg     4396b8 <strcmp@plt+0x35f00>
  4396ab:	xor    eax,eax
  4396ad:	add    rsp,0x8
  4396b1:	pop    rbx
  4396b2:	pop    rbp
  4396b3:	ret    
  4396b4:	nop    DWORD PTR [rax+0x0]
  4396b8:	call   424890 <strcmp@plt+0x210d8>
  4396bd:	lea    rsi,[rip+0x17d8c]        # 451450 <strcmp@plt+0x4dc98>
  4396c4:	mov    rdx,rax
  4396c7:	mov    edi,0x6
  4396cc:	xor    eax,eax
  4396ce:	call   4306a0 <strcmp@plt+0x2cee8>
  4396d3:	add    rsp,0x8
  4396d7:	xor    eax,eax
  4396d9:	pop    rbx
  4396da:	pop    rbp
  4396db:	ret    
  4396dc:	nop    DWORD PTR [rax+0x0]
  4396e0:	call   4251c0 <strcmp@plt+0x21a08>
  4396e5:	cmp    ax,0x2
  4396e9:	je     439758 <strcmp@plt+0x35fa0>
  4396eb:	cmp    ax,0xa
  4396ef:	je     439720 <strcmp@plt+0x35f68>
  4396f1:	mov    rax,0x468e3c
  4396f8:	mov    eax,DWORD PTR [rax]
  4396fa:	test   eax,eax
  4396fc:	jle    4396ab <strcmp@plt+0x35ef3>
  4396fe:	mov    rdi,rbx
  439701:	call   424890 <strcmp@plt+0x210d8>
  439706:	lea    rsi,[rip+0x17d83]        # 451490 <strcmp@plt+0x4dcd8>
  43970d:	mov    rdx,rax
  439710:	mov    edi,0x5
  439715:	xor    eax,eax
  439717:	call   4306a0 <strcmp@plt+0x2cee8>
  43971c:	jmp    4396ab <strcmp@plt+0x35ef3>
  43971e:	xchg   ax,ax
  439720:	mov    edi,0x1c
  439725:	call   4347a0 <strcmp@plt+0x30fe8>
  43972a:	mov    edx,0xa
  43972f:	mov    rdi,rbx
  439732:	mov    rbp,rax
  439735:	mov    WORD PTR [rax],dx
  439738:	call   4257f0 <strcmp@plt+0x22038>
  43973d:	mov    rdx,QWORD PTR [rax+0x8]
  439741:	mov    rax,QWORD PTR [rax]
  439744:	mov    QWORD PTR [rbp+0x10],rdx
  439748:	mov    QWORD PTR [rbp+0x8],rax
  43974c:	mov    rax,rbp
  43974f:	jmp    4396ad <strcmp@plt+0x35ef5>
  439754:	nop    DWORD PTR [rax+0x0]
  439758:	mov    edi,0x10
  43975d:	call   4347a0 <strcmp@plt+0x30fe8>
  439762:	mov    ecx,0x2
  439767:	mov    rdi,rbx
  43976a:	mov    rbp,rax
  43976d:	mov    WORD PTR [rax],cx
  439770:	call   4257e0 <strcmp@plt+0x22028>
  439775:	mov    eax,DWORD PTR [rax]
  439777:	mov    DWORD PTR [rbp+0x4],eax
  43977a:	mov    rax,rbp
  43977d:	jmp    4396ad <strcmp@plt+0x35ef5>
  439782:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43978c:	nop    DWORD PTR [rax+0x0]
  439790:	push   rbx
  439791:	mov    esi,0x10
  439796:	mov    edi,0x1
  43979b:	call   434750 <strcmp@plt+0x30f98>
  4397a0:	mov    esi,0x28
  4397a5:	mov    rbx,rax
  4397a8:	mov    edi,0x1
  4397ad:	call   4032e0 <calloc@plt>
  4397b2:	mov    QWORD PTR [rbx],rax
  4397b5:	mov    rax,rbx
  4397b8:	pop    rbx
  4397b9:	ret    
  4397ba:	nop    WORD PTR [rax+rax*1+0x0]
  4397c0:	push   rbp
  4397c1:	push   rbx
  4397c2:	mov    rbp,rdi
  4397c5:	mov    esi,0x10
  4397ca:	mov    edi,0x1
  4397cf:	sub    rsp,0x8
  4397d3:	call   434750 <strcmp@plt+0x30f98>
  4397d8:	mov    esi,0x28
  4397dd:	mov    rbx,rax
  4397e0:	mov    edi,0x1
  4397e5:	call   4032e0 <calloc@plt>
  4397ea:	mov    QWORD PTR [rbx+0x8],rbp
  4397ee:	mov    QWORD PTR [rbx],rax
  4397f1:	add    rsp,0x8
  4397f5:	mov    rax,rbx
  4397f8:	pop    rbx
  4397f9:	pop    rbp
  4397fa:	ret    
  4397fb:	nop    DWORD PTR [rax+rax*1+0x0]
  439800:	push   r15
  439802:	push   r14
  439804:	push   r13
  439806:	push   r12
  439808:	push   rbp
  439809:	push   rbx
  43980a:	sub    rsp,0x58
  43980e:	mov    r14,QWORD PTR [rdi]
  439811:	mov    QWORD PTR [rsp+0x18],rdi
  439816:	mov    QWORD PTR [rsp+0x10],rsi
  43981b:	mov    QWORD PTR [rsp+0x20],rdx
  439820:	mov    eax,DWORD PTR [r14]
  439823:	test   eax,eax
  439825:	mov    DWORD PTR [rsp+0x48],eax
  439829:	je     439990 <strcmp@plt+0x361d8>
  43982f:	lea    ebp,[rax-0x1]
  439832:	movsx  eax,BYTE PTR [rsi]
  439835:	mov    ecx,ebp
  439837:	test   eax,eax
  439839:	mov    DWORD PTR [rsp+0x40],eax
  43983d:	mov    DWORD PTR [rsp+0x28],eax
  439841:	jne    439940 <strcmp@plt+0x36188>
  439847:	xor    r12d,r12d
  43984a:	mov    ebx,0x1
  43984f:	mov    r13,QWORD PTR [r14+0x10]
  439853:	and    ebx,ebp
  439855:	mov    DWORD PTR [rsp+0x30],ecx
  439859:	mov    DWORD PTR [rsp+0xc],ebx
  43985d:	mov    r8,r13
  439860:	mov    QWORD PTR [rsp+0x38],r13
  439865:	mov    r13,r14
  439868:	mov    r15,r8
  43986b:	mov    r14d,r12d
  43986e:	jmp    4398a4 <strcmp@plt+0x360ec>
  439870:	test   bl,0x1
  439873:	jne    43988e <strcmp@plt+0x360d6>
  439875:	mov    rsi,QWORD PTR [r13+0x18]
  439879:	mov    eax,r14d
  43987c:	mov    rdi,QWORD PTR [rsi+rax*8]
  439880:	mov    rsi,QWORD PTR [rsp+0x10]
  439885:	call   4037b8 <strcmp@plt>
  43988a:	test   eax,eax
  43988c:	je     4398bf <strcmp@plt+0x36107>
  43988e:	mov    eax,DWORD PTR [rsp+0xc]
  439892:	lea    edx,[rax+r14*1]
  439896:	and    edx,ebp
  439898:	cmp    edx,r12d
  43989b:	mov    r14d,edx
  43989e:	je     439a98 <strcmp@plt+0x362e0>
  4398a4:	mov    eax,r14d
  4398a7:	lea    ecx,[r14+r14*1]
  4398ab:	shr    eax,0x4
  4398ae:	mov    eax,DWORD PTR [r15+rax*4]
  4398b2:	and    ecx,0x1e
  4398b5:	shrx   ebx,eax,ecx
  4398ba:	test   bl,0x2
  4398bd:	je     439870 <strcmp@plt+0x360b8>
  4398bf:	mov    rax,r15
  4398c2:	and    ebx,0x3
  4398c5:	mov    r15d,r14d
  4398c8:	mov    ecx,DWORD PTR [rsp+0x30]
  4398cc:	mov    r14,r13
  4398cf:	mov    r8,QWORD PTR [rsp+0x38]
  4398d4:	mov    r13,rax
  4398d7:	jne    439aa7 <strcmp@plt+0x362ef>
  4398dd:	cmp    DWORD PTR [rsp+0x48],r15d
  4398e2:	je     439aa7 <strcmp@plt+0x362ef>
  4398e8:	mov    rdi,QWORD PTR [rsp+0x10]
  4398ed:	call   4037b0 <free@plt>
  4398f2:	mov    rax,QWORD PTR [rsp+0x18]
  4398f7:	mov    r10d,r15d
  4398fa:	lea    r12,[r10*8+0x0]
  439902:	mov    rax,QWORD PTR [rax+0x8]
  439906:	test   rax,rax
  439909:	je     439d46 <strcmp@plt+0x3658e>
  43990f:	mov    rbx,QWORD PTR [rsp+0x18]
  439914:	mov    rdx,QWORD PTR [rbx]
  439917:	mov    rdx,QWORD PTR [rdx+0x20]
  43991b:	mov    rdi,QWORD PTR [rdx+r10*8]
  43991f:	call   rax
  439921:	mov    r10,QWORD PTR [rbx]
  439924:	mov    rbx,QWORD PTR [rsp+0x20]
  439929:	mov    rax,QWORD PTR [r10+0x20]
  43992d:	mov    QWORD PTR [rax+r12*1],rbx
  439931:	add    rsp,0x58
  439935:	pop    rbx
  439936:	pop    rbp
  439937:	pop    r12
  439939:	pop    r13
  43993b:	pop    r14
  43993d:	pop    r15
  43993f:	ret    
  439940:	lea    rdi,[rsi+0x1]
  439944:	movsx  esi,BYTE PTR [rsi+0x1]
  439948:	mov    edx,eax
  43994a:	test   sil,sil
  43994d:	je     43a08a <strcmp@plt+0x368d2>
  439953:	nop    DWORD PTR [rax+rax*1+0x0]
  439958:	mov    eax,edx
  43995a:	add    rdi,0x1
  43995e:	shl    eax,0x5
  439961:	sub    eax,edx
  439963:	lea    edx,[rsi+rax*1]
  439966:	movsx  esi,BYTE PTR [rdi]
  439969:	test   sil,sil
  43996c:	jne    439958 <strcmp@plt+0x361a0>
  43996e:	mov    eax,edx
  439970:	mov    ebx,edx
  439972:	mov    r12d,ebp
  439975:	shr    ebx,0x3
  439978:	shl    eax,0x3
  43997b:	and    r12d,edx
  43997e:	xor    eax,ebx
  439980:	or     eax,0x1
  439983:	mov    ebx,eax
  439985:	jmp    43984f <strcmp@plt+0x36097>
  43998a:	nop    WORD PTR [rax+rax*1+0x0]
  439990:	mov    eax,DWORD PTR [r14+0xc]
  439994:	cmp    DWORD PTR [r14+0x8],eax
  439998:	jae    439d96 <strcmp@plt+0x365de>
  43999e:	mov    rax,QWORD PTR [rsp+0x10]
  4399a3:	mov    r8,QWORD PTR [r14+0x10]
  4399a7:	mov    r10,r14
  4399aa:	mov    ecx,0xffffffff
  4399af:	movsx  eax,BYTE PTR [rax]
  4399b2:	mov    DWORD PTR [rsp+0x28],eax
  4399b6:	mov    eax,DWORD PTR [rsp+0x28]
  4399ba:	test   eax,eax
  4399bc:	jne    439ced <strcmp@plt+0x36535>
  4399c2:	mov    DWORD PTR [rsp+0x30],0x0
  4399ca:	xor    ebp,ebp
  4399cc:	xor    eax,eax
  4399ce:	add    rax,r8
  4399d1:	movzx  ebx,BYTE PTR [rsp+0x30]
  4399d6:	mov    QWORD PTR [rsp+0x40],rax
  4399db:	mov    eax,DWORD PTR [rax]
  4399dd:	mov    DWORD PTR [rsp+0x38],eax
  4399e1:	shrx   eax,eax,ebx
  4399e6:	test   al,0x2
  4399e8:	mov    DWORD PTR [rsp+0x4c],eax
  4399ec:	jne    439d53 <strcmp@plt+0x3659b>
  4399f2:	mov    r13d,DWORD PTR [rsp+0x28]
  4399f7:	mov    r15,r14
  4399fa:	mov    r11d,eax
  4399fd:	mov    r12d,ecx
  439a00:	mov    edx,ebp
  439a02:	mov    r14,r8
  439a05:	mov    QWORD PTR [rsp+0x28],r10
  439a0a:	mov    ebx,r13d
  439a0d:	shl    r13d,0x3
  439a11:	shr    ebx,0x3
  439a14:	xor    ebx,r13d
  439a17:	mov    r13d,DWORD PTR [rsp+0x48]
  439a1c:	or     ebx,0x1
  439a1f:	and    ebx,ecx
  439a21:	jmp    439a86 <strcmp@plt+0x362ce>
  439a23:	nop    DWORD PTR [rax+rax*1+0x0]
  439a28:	mov    rsi,QWORD PTR [r15+0x18]
  439a2c:	mov    eax,edx
  439a2e:	mov    DWORD PTR [rsp+0xc],edx
  439a32:	lea    rcx,[rax*8+0x0]
  439a3a:	mov    rdi,QWORD PTR [rsi+rax*8]
  439a3e:	mov    rsi,QWORD PTR [rsp+0x10]
  439a43:	mov    QWORD PTR [rsp+0x18],rcx
  439a48:	call   4037b8 <strcmp@plt>
  439a4d:	test   eax,eax
  439a4f:	mov    edx,DWORD PTR [rsp+0xc]
  439a53:	je     43a0a2 <strcmp@plt+0x368ea>
  439a59:	add    edx,ebx
  439a5b:	and    edx,r12d
  439a5e:	cmp    edx,ebp
  439a60:	je     439ff3 <strcmp@plt+0x3683b>
  439a66:	mov    eax,edx
  439a68:	shr    eax,0x4
  439a6b:	lea    rsi,[r14+rax*4]
  439a6f:	lea    eax,[rdx+rdx*1]
  439a72:	mov    edi,DWORD PTR [rsi]
  439a74:	and    eax,0x1e
  439a77:	shrx   r11d,edi,eax
  439a7c:	test   r11b,0x2
  439a80:	jne    43a122 <strcmp@plt+0x3696a>
  439a86:	and    r11d,0x1
  439a8a:	je     439a28 <strcmp@plt+0x36270>
  439a8c:	mov    r13d,edx
  439a8f:	jmp    439a59 <strcmp@plt+0x362a1>
  439a91:	nop    DWORD PTR [rax+0x0]
  439a98:	mov    ecx,DWORD PTR [rsp+0x30]
  439a9c:	mov    r8,QWORD PTR [rsp+0x38]
  439aa1:	mov    r14,r13
  439aa4:	mov    r13,r15
  439aa7:	mov    eax,DWORD PTR [r14+0xc]
  439aab:	cmp    DWORD PTR [r14+0x8],eax
  439aaf:	mov    r10,r14
  439ab2:	jb     4399b6 <strcmp@plt+0x361fe>
  439ab8:	mov    edx,DWORD PTR [r14+0x4]
  439abc:	mov    ebx,DWORD PTR [rsp+0x48]
  439ac0:	lea    eax,[rdx+rdx*1]
  439ac3:	cmp    ebx,eax
  439ac5:	jbe    43a230 <strcmp@plt+0x36a78>
  439acb:	lea    eax,[rbx-0x2]
  439ace:	mov    esi,eax
  439ad0:	shr    esi,1
  439ad2:	or     eax,esi
  439ad4:	mov    esi,eax
  439ad6:	shr    esi,0x2
  439ad9:	or     eax,esi
  439adb:	mov    esi,eax
  439add:	shr    esi,0x4
  439ae0:	or     eax,esi
  439ae2:	mov    esi,eax
  439ae4:	shr    esi,0x8
  439ae7:	or     eax,esi
  439ae9:	mov    esi,eax
  439aeb:	shr    esi,0x10
  439aee:	or     eax,esi
  439af0:	lea    esi,[rax+0x1]
  439af3:	cmp    esi,0x3
  439af6:	jbe    43a1b1 <strcmp@plt+0x369f9>
  439afc:	vxorpd xmm0,xmm0,xmm0
  439b00:	mov    edi,esi
  439b02:	vmovsd xmm1,QWORD PTR [rip+0x123ee]        # 44bef8 <strcmp@plt+0x48740>
  439b0a:	vcvtsi2sd xmm0,xmm0,rdi
  439b0f:	vfmadd132sd xmm0,xmm1,QWORD PTR [rip+0x123d8]        # 44bef0 <strcmp@plt+0x48738>
  439b18:	vcvttsd2si rdi,xmm0
  439b1d:	cmp    edx,edi
  439b1f:	mov    DWORD PTR [rsp+0xc],edi
  439b23:	jae    4399b6 <strcmp@plt+0x361fe>
  439b29:	cmp    esi,0xf
  439b2c:	jbe    43a220 <strcmp@plt+0x36a68>
  439b32:	mov    ebx,esi
  439b34:	mov    ecx,eax
  439b36:	mov    DWORD PTR [rsp+0x48],esi
  439b3a:	shr    ebx,0x4
  439b3d:	shl    rbx,0x2
  439b41:	mov    rdi,rbx
  439b44:	mov    DWORD PTR [rsp+0x28],ecx
  439b48:	call   403530 <malloc@plt>
  439b4d:	mov    rdx,rbx
  439b50:	mov    esi,0xaa
  439b55:	mov    rdi,rax
  439b58:	call   403250 <memset@plt>
  439b5d:	mov    r8,rax
  439b60:	mov    eax,DWORD PTR [rsp+0x48]
  439b64:	cmp    DWORD PTR [r14],eax
  439b67:	mov    ecx,DWORD PTR [rsp+0x28]
  439b6b:	jb     43a1dc <strcmp@plt+0x36a24>
  439b71:	xor    r9d,r9d
  439b74:	jmp    439b86 <strcmp@plt+0x363ce>
  439b76:	mov    r12d,DWORD PTR [r14]
  439b79:	add    r9d,0x1
  439b7d:	cmp    r9d,r12d
  439b80:	je     439f99 <strcmp@plt+0x367e1>
  439b86:	mov    rbp,QWORD PTR [r14+0x10]
  439b8a:	mov    eax,r9d
  439b8d:	shr    eax,0x4
  439b90:	lea    rsi,[rbp+rax*4+0x0]
  439b95:	lea    eax,[r9+r9*1]
  439b99:	mov    edx,DWORD PTR [rsi]
  439b9b:	and    eax,0x1e
  439b9e:	shrx   edi,edx,eax
  439ba3:	and    edi,0x3
  439ba6:	jne    439b76 <strcmp@plt+0x363be>
  439ba8:	mov    r10,QWORD PTR [r14+0x18]
  439bac:	mov    rbx,QWORD PTR [r14+0x20]
  439bb0:	mov    edi,r9d
  439bb3:	mov    r11,QWORD PTR [r10+rdi*8]
  439bb7:	mov    rbx,QWORD PTR [rbx+rdi*8]
  439bbb:	mov    edi,0x1
  439bc0:	shlx   rax,rdi,rax
  439bc5:	or     eax,edx
  439bc7:	mov    DWORD PTR [rsi],eax
  439bc9:	movsx  eax,BYTE PTR [r11]
  439bcd:	test   eax,eax
  439bcf:	je     439cde <strcmp@plt+0x36526>
  439bd5:	nop    DWORD PTR [rax]
  439bd8:	movsx  edx,BYTE PTR [r11+0x1]
  439bdd:	lea    rdi,[r11+0x1]
  439be1:	test   dl,dl
  439be3:	je     439c07 <strcmp@plt+0x3644f>
  439be5:	mov    esi,eax
  439be7:	nop    WORD PTR [rax+rax*1+0x0]
  439bf0:	mov    eax,esi
  439bf2:	add    rdi,0x1
  439bf6:	shl    eax,0x5
  439bf9:	sub    eax,esi
  439bfb:	lea    esi,[rdx+rax*1]
  439bfe:	movsx  edx,BYTE PTR [rdi]
  439c01:	test   dl,dl
  439c03:	jne    439bf0 <strcmp@plt+0x36438>
  439c05:	mov    eax,esi
  439c07:	mov    edi,eax
  439c09:	mov    r12d,eax
  439c0c:	shl    eax,0x3
  439c0f:	and    edi,ecx
  439c11:	shr    r12d,0x3
  439c15:	lea    esi,[rdi+rdi*1]
  439c18:	mov    edx,edi
  439c1a:	xor    r12d,eax
  439c1d:	shr    edx,0x4
  439c20:	or     r12d,0x1
  439c24:	mov    eax,edi
  439c26:	and    esi,0x1e
  439c29:	shl    rdx,0x2
  439c2d:	lea    rdi,[r8+rdx*1]
  439c31:	and    r12d,ecx
  439c34:	mov    r13d,DWORD PTR [rdi]
  439c37:	shrx   r15d,r13d,esi
  439c3c:	and    r15d,0x2
  439c40:	jne    439c6e <strcmp@plt+0x364b6>
  439c42:	nop    WORD PTR [rax+rax*1+0x0]
  439c48:	add    eax,r12d
  439c4b:	and    eax,ecx
  439c4d:	mov    edx,eax
  439c4f:	lea    esi,[rax+rax*1]
  439c52:	shr    edx,0x4
  439c55:	shl    rdx,0x2
  439c59:	and    esi,0x1e
  439c5c:	lea    rdi,[r8+rdx*1]
  439c60:	mov    r13d,DWORD PTR [rdi]
  439c63:	shrx   r15d,r13d,esi
  439c68:	and    r15d,0x2
  439c6c:	je     439c48 <strcmp@plt+0x36490>
  439c6e:	mov    r15d,0x2
  439c74:	shlx   r12,r15,rsi
  439c79:	andn   r13d,r12d,r13d
  439c7e:	mov    DWORD PTR [rdi],r13d
  439c81:	mov    r12d,DWORD PTR [r14]
  439c84:	cmp    r12d,eax
  439c87:	jbe    43a1a0 <strcmp@plt+0x369e8>
  439c8d:	mov    edi,DWORD PTR [rbp+rdx*1+0x0]
  439c91:	shrx   edi,edi,esi
  439c96:	and    edi,0x3
  439c99:	jne    43a1a0 <strcmp@plt+0x369e8>
  439c9f:	shl    rax,0x3
  439ca3:	add    r10,rax
  439ca6:	mov    rdi,QWORD PTR [r10]
  439ca9:	mov    QWORD PTR [r10],r11
  439cac:	add    rax,QWORD PTR [r14+0x20]
  439cb0:	mov    r11,rdi
  439cb3:	mov    r12,QWORD PTR [rax]
  439cb6:	mov    QWORD PTR [rax],rbx
  439cb9:	mov    eax,0x1
  439cbe:	mov    rbp,QWORD PTR [r14+0x10]
  439cc2:	shlx   rsi,rax,rsi
  439cc7:	mov    r10,QWORD PTR [r14+0x18]
  439ccb:	mov    rbx,r12
  439cce:	or     DWORD PTR [rbp+rdx*1+0x0],esi
  439cd2:	movsx  eax,BYTE PTR [r11]
  439cd6:	test   eax,eax
  439cd8:	jne    439bd8 <strcmp@plt+0x36420>
  439cde:	xor    esi,esi
  439ce0:	xor    edx,edx
  439ce2:	mov    r12d,0x1
  439ce8:	jmp    439c2d <strcmp@plt+0x36475>
  439ced:	mov    rax,QWORD PTR [rsp+0x10]
  439cf2:	mov    ebp,DWORD PTR [rsp+0x28]
  439cf6:	lea    rsi,[rax+0x1]
  439cfa:	movsx  eax,BYTE PTR [rax+0x1]
  439cfe:	test   al,al
  439d00:	je     439d2b <strcmp@plt+0x36573>
  439d02:	mov    edi,DWORD PTR [rsp+0x28]
  439d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439d10:	mov    edx,edi
  439d12:	add    rsi,0x1
  439d16:	shl    edx,0x5
  439d19:	sub    edx,edi
  439d1b:	lea    edi,[rax+rdx*1]
  439d1e:	movsx  eax,BYTE PTR [rsi]
  439d21:	test   al,al
  439d23:	jne    439d10 <strcmp@plt+0x36558>
  439d25:	mov    DWORD PTR [rsp+0x28],edi
  439d29:	mov    ebp,edi
  439d2b:	and    ebp,ecx
  439d2d:	lea    edx,[rbp+rbp*1+0x0]
  439d31:	mov    eax,ebp
  439d33:	shr    eax,0x4
  439d36:	and    edx,0x1e
  439d39:	shl    rax,0x2
  439d3d:	mov    DWORD PTR [rsp+0x30],edx
  439d41:	jmp    4399ce <strcmp@plt+0x36216>
  439d46:	mov    rax,QWORD PTR [rsp+0x18]
  439d4b:	mov    r10,QWORD PTR [rax]
  439d4e:	jmp    439924 <strcmp@plt+0x3616c>
  439d53:	mov    edx,ebp
  439d55:	lea    r12,[rdx*8+0x0]
  439d5d:	mov    rax,QWORD PTR [r14+0x18]
  439d61:	mov    rbx,QWORD PTR [rsp+0x10]
  439d66:	mov    QWORD PTR [rax+r12*1],rbx
  439d6a:	movzx  ebx,BYTE PTR [rsp+0x30]
  439d6f:	mov    eax,0x3
  439d74:	shlx   rax,rax,rbx
  439d79:	mov    rbx,QWORD PTR [rsp+0x40]
  439d7e:	andn   eax,eax,DWORD PTR [rsp+0x38]
  439d85:	mov    DWORD PTR [rbx],eax
  439d87:	add    DWORD PTR [r14+0x4],0x1
  439d8c:	add    DWORD PTR [r14+0x8],0x1
  439d91:	jmp    439924 <strcmp@plt+0x3616c>
  439d96:	mov    edx,DWORD PTR [r14+0x4]
  439d9a:	cmp    edx,0x2
  439d9d:	ja     439f65 <strcmp@plt+0x367ad>
  439da3:	mov    ecx,0x3
  439da8:	mov    DWORD PTR [rsp+0xc],0x3
  439db0:	mov    DWORD PTR [rsp+0x48],0x4
  439db8:	mov    ebx,0x4
  439dbd:	mov    rdi,rbx
  439dc0:	mov    DWORD PTR [rsp+0x28],ecx
  439dc4:	call   403530 <malloc@plt>
  439dc9:	mov    rdx,rbx
  439dcc:	mov    esi,0xaa
  439dd1:	mov    rdi,rax
  439dd4:	call   403250 <memset@plt>
  439dd9:	mov    r8,rax
  439ddc:	mov    eax,DWORD PTR [rsp+0x48]
  439de0:	cmp    DWORD PTR [r14],eax
  439de3:	mov    ecx,DWORD PTR [rsp+0x28]
  439de7:	jb     43a158 <strcmp@plt+0x369a0>
  439ded:	xor    r9d,r9d
  439df0:	jmp    439e02 <strcmp@plt+0x3664a>
  439df2:	mov    r12d,DWORD PTR [r14]
  439df5:	add    r9d,0x1
  439df9:	cmp    r9d,r12d
  439dfc:	je     439f99 <strcmp@plt+0x367e1>
  439e02:	mov    rbp,QWORD PTR [r14+0x10]
  439e06:	mov    eax,r9d
  439e09:	shr    eax,0x4
  439e0c:	lea    rsi,[rbp+rax*4+0x0]
  439e11:	lea    eax,[r9+r9*1]
  439e15:	mov    edx,DWORD PTR [rsi]
  439e17:	and    eax,0x1e
  439e1a:	shrx   edi,edx,eax
  439e1f:	and    edi,0x3
  439e22:	jne    439df2 <strcmp@plt+0x3663a>
  439e24:	mov    r10,QWORD PTR [r14+0x18]
  439e28:	mov    rbx,QWORD PTR [r14+0x20]
  439e2c:	mov    edi,r9d
  439e2f:	mov    r11,QWORD PTR [r10+rdi*8]
  439e33:	mov    rbx,QWORD PTR [rbx+rdi*8]
  439e37:	mov    edi,0x1
  439e3c:	shlx   rax,rdi,rax
  439e41:	or     eax,edx
  439e43:	mov    DWORD PTR [rsi],eax
  439e45:	movsx  eax,BYTE PTR [r11]
  439e49:	test   eax,eax
  439e4b:	je     439f56 <strcmp@plt+0x3679e>
  439e51:	nop    DWORD PTR [rax+0x0]
  439e58:	movsx  edx,BYTE PTR [r11+0x1]
  439e5d:	lea    rdi,[r11+0x1]
  439e61:	test   dl,dl
  439e63:	je     439e87 <strcmp@plt+0x366cf>
  439e65:	mov    esi,eax
  439e67:	nop    WORD PTR [rax+rax*1+0x0]
  439e70:	mov    eax,esi
  439e72:	add    rdi,0x1
  439e76:	shl    eax,0x5
  439e79:	sub    eax,esi
  439e7b:	lea    esi,[rdx+rax*1]
  439e7e:	movsx  edx,BYTE PTR [rdi]
  439e81:	test   dl,dl
  439e83:	jne    439e70 <strcmp@plt+0x366b8>
  439e85:	mov    eax,esi
  439e87:	mov    edi,eax
  439e89:	mov    r12d,eax
  439e8c:	shl    eax,0x3
  439e8f:	and    edi,ecx
  439e91:	shr    r12d,0x3
  439e95:	lea    esi,[rdi+rdi*1]
  439e98:	mov    edx,edi
  439e9a:	xor    r12d,eax
  439e9d:	shr    edx,0x4
  439ea0:	or     r12d,0x1
  439ea4:	mov    eax,edi
  439ea6:	and    esi,0x1e
  439ea9:	shl    rdx,0x2
  439ead:	lea    rdi,[r8+rdx*1]
  439eb1:	and    r12d,ecx
  439eb4:	mov    r13d,DWORD PTR [rdi]
  439eb7:	shrx   r15d,r13d,esi
  439ebc:	and    r15d,0x2
  439ec0:	jne    439eee <strcmp@plt+0x36736>
  439ec2:	nop    WORD PTR [rax+rax*1+0x0]
  439ec8:	add    eax,r12d
  439ecb:	and    eax,ecx
  439ecd:	mov    edx,eax
  439ecf:	lea    esi,[rax+rax*1]
  439ed2:	shr    edx,0x4
  439ed5:	shl    rdx,0x2
  439ed9:	and    esi,0x1e
  439edc:	lea    rdi,[r8+rdx*1]
  439ee0:	mov    r13d,DWORD PTR [rdi]
  439ee3:	shrx   r15d,r13d,esi
  439ee8:	and    r15d,0x2
  439eec:	je     439ec8 <strcmp@plt+0x36710>
  439eee:	mov    r15d,0x2
  439ef4:	shlx   r12,r15,rsi
  439ef9:	andn   r13d,r12d,r13d
  439efe:	mov    DWORD PTR [rdi],r13d
  439f01:	mov    r12d,DWORD PTR [r14]
  439f04:	cmp    r12d,eax
  439f07:	jbe    439f88 <strcmp@plt+0x367d0>
  439f09:	mov    edi,DWORD PTR [rbp+rdx*1+0x0]
  439f0d:	shrx   edi,edi,esi
  439f12:	and    edi,0x3
  439f15:	jne    439f88 <strcmp@plt+0x367d0>
  439f17:	shl    rax,0x3
  439f1b:	add    r10,rax
  439f1e:	mov    rdi,QWORD PTR [r10]
  439f21:	mov    QWORD PTR [r10],r11
  439f24:	add    rax,QWORD PTR [r14+0x20]
  439f28:	mov    r11,rdi
  439f2b:	mov    r12,QWORD PTR [rax]
  439f2e:	mov    QWORD PTR [rax],rbx
  439f31:	mov    eax,0x1
  439f36:	mov    rbp,QWORD PTR [r14+0x10]
  439f3a:	shlx   rsi,rax,rsi
  439f3f:	mov    r10,QWORD PTR [r14+0x18]
  439f43:	mov    rbx,r12
  439f46:	or     DWORD PTR [rbp+rdx*1+0x0],esi
  439f4a:	movsx  eax,BYTE PTR [r11]
  439f4e:	test   eax,eax
  439f50:	jne    439e58 <strcmp@plt+0x366a0>
  439f56:	xor    esi,esi
  439f58:	xor    edx,edx
  439f5a:	mov    r12d,0x1
  439f60:	jmp    439ead <strcmp@plt+0x366f5>
  439f65:	mov    eax,DWORD PTR [rsp+0x48]
  439f69:	mov    r8,QWORD PTR [r14+0x10]
  439f6d:	mov    r10,r14
  439f70:	lea    ecx,[rax-0x1]
  439f73:	mov    rax,QWORD PTR [rsp+0x10]
  439f78:	movsx  eax,BYTE PTR [rax]
  439f7b:	mov    DWORD PTR [rsp+0x28],eax
  439f7f:	jmp    4399b6 <strcmp@plt+0x361fe>
  439f84:	nop    DWORD PTR [rax+0x0]
  439f88:	mov    QWORD PTR [r10+rax*8],r11
  439f8c:	mov    rdx,QWORD PTR [r14+0x20]
  439f90:	mov    QWORD PTR [rdx+rax*8],rbx
  439f94:	jmp    439df5 <strcmp@plt+0x3663d>
  439f99:	cmp    r9d,DWORD PTR [rsp+0x48]
  439f9e:	ja     43a0e3 <strcmp@plt+0x3692b>
  439fa4:	mov    rdi,QWORD PTR [r14+0x10]
  439fa8:	mov    QWORD PTR [rsp+0x28],r8
  439fad:	mov    DWORD PTR [rsp+0x30],ecx
  439fb1:	call   4037b0 <free@plt>
  439fb6:	mov    eax,DWORD PTR [rsp+0x48]
  439fba:	mov    r8,QWORD PTR [rsp+0x28]
  439fbf:	mov    ecx,DWORD PTR [rsp+0x30]
  439fc3:	mov    DWORD PTR [r14],eax
  439fc6:	mov    eax,DWORD PTR [r14+0x4]
  439fca:	mov    QWORD PTR [r14+0x10],r8
  439fce:	mov    DWORD PTR [r14+0x8],eax
  439fd2:	mov    eax,DWORD PTR [rsp+0xc]
  439fd6:	mov    DWORD PTR [r14+0xc],eax
  439fda:	mov    rax,QWORD PTR [rsp+0x10]
  439fdf:	movsx  eax,BYTE PTR [rax]
  439fe2:	mov    DWORD PTR [rsp+0x28],eax
  439fe6:	mov    rax,QWORD PTR [rsp+0x18]
  439feb:	mov    r10,QWORD PTR [rax]
  439fee:	jmp    4399b6 <strcmp@plt+0x361fe>
  439ff3:	cmp    r13d,DWORD PTR [rsp+0x48]
  439ff8:	mov    r8,r14
  439ffb:	mov    r10,QWORD PTR [rsp+0x28]
  43a000:	mov    r14,r15
  43a003:	je     43a2b7 <strcmp@plt+0x36aff>
  43a009:	mov    eax,r13d
  43a00c:	lea    ebp,[r13+r13*1+0x0]
  43a011:	mov    r11d,r13d
  43a014:	shr    eax,0x4
  43a017:	lea    r12,[r11*8+0x0]
  43a01f:	lea    rax,[r8+rax*4]
  43a023:	and    ebp,0x1e
  43a026:	mov    ebx,ebp
  43a028:	mov    QWORD PTR [rsp+0x40],rax
  43a02d:	mov    eax,DWORD PTR [rax]
  43a02f:	mov    DWORD PTR [rsp+0x30],ebp
  43a033:	mov    DWORD PTR [rsp+0x38],eax
  43a037:	shrx   eax,eax,ebx
  43a03c:	mov    DWORD PTR [rsp+0x4c],eax
  43a040:	and    eax,0x2
  43a043:	test   eax,eax
  43a045:	jne    439d5d <strcmp@plt+0x365a5>
  43a04b:	test   BYTE PTR [rsp+0x4c],0x1
  43a050:	je     439924 <strcmp@plt+0x3616c>
  43a056:	mov    rax,QWORD PTR [r14+0x18]
  43a05a:	mov    rbx,QWORD PTR [rsp+0x10]
  43a05f:	mov    QWORD PTR [rax+r12*1],rbx
  43a063:	movzx  ebx,BYTE PTR [rsp+0x30]
  43a068:	mov    eax,0x3
  43a06d:	shlx   rax,rax,rbx
  43a072:	mov    rbx,QWORD PTR [rsp+0x40]
  43a077:	andn   eax,eax,DWORD PTR [rsp+0x38]
  43a07e:	mov    DWORD PTR [rbx],eax
  43a080:	add    DWORD PTR [r14+0x4],0x1
  43a085:	jmp    439924 <strcmp@plt+0x3616c>
  43a08a:	mov    ebx,eax
  43a08c:	mov    r12d,eax
  43a08f:	shl    eax,0x3
  43a092:	shr    ebx,0x3
  43a095:	and    r12d,ebp
  43a098:	xor    ebx,eax
  43a09a:	or     ebx,0x1
  43a09d:	jmp    43984f <strcmp@plt+0x36097>
  43a0a2:	mov    eax,edx
  43a0a4:	mov    r8,r14
  43a0a7:	lea    ebp,[rdx+rdx*1]
  43a0aa:	shr    eax,0x4
  43a0ad:	mov    r12,QWORD PTR [rsp+0x18]
  43a0b2:	mov    r14,r15
  43a0b5:	lea    rax,[r8+rax*4]
  43a0b9:	and    ebp,0x1e
  43a0bc:	mov    r10,QWORD PTR [rsp+0x28]
  43a0c1:	mov    ebx,ebp
  43a0c3:	mov    DWORD PTR [rsp+0x30],ebp
  43a0c7:	mov    QWORD PTR [rsp+0x40],rax
  43a0cc:	mov    eax,DWORD PTR [rax]
  43a0ce:	mov    DWORD PTR [rsp+0x38],eax
  43a0d2:	shrx   eax,eax,ebx
  43a0d7:	mov    DWORD PTR [rsp+0x4c],eax
  43a0db:	and    eax,0x2
  43a0de:	jmp    43a043 <strcmp@plt+0x3688b>
  43a0e3:	mov    ebx,DWORD PTR [rsp+0x48]
  43a0e7:	mov    rdi,QWORD PTR [r14+0x18]
  43a0eb:	mov    QWORD PTR [rsp+0x30],r8
  43a0f0:	mov    DWORD PTR [rsp+0x28],ecx
  43a0f4:	shl    rbx,0x3
  43a0f8:	mov    rsi,rbx
  43a0fb:	call   403670 <realloc@plt>
  43a100:	mov    rdi,QWORD PTR [r14+0x20]
  43a104:	mov    QWORD PTR [r14+0x18],rax
  43a108:	mov    rsi,rbx
  43a10b:	call   403670 <realloc@plt>
  43a110:	mov    r8,QWORD PTR [rsp+0x30]
  43a115:	mov    QWORD PTR [r14+0x20],rax
  43a119:	mov    ecx,DWORD PTR [rsp+0x28]
  43a11d:	jmp    439fa4 <strcmp@plt+0x367ec>
  43a122:	cmp    r13d,DWORD PTR [rsp+0x48]
  43a127:	mov    r8,r14
  43a12a:	mov    r10,QWORD PTR [rsp+0x28]
  43a12f:	mov    r14,r15
  43a132:	jne    43a009 <strcmp@plt+0x36851>
  43a138:	mov    r11d,edx
  43a13b:	mov    DWORD PTR [rsp+0x30],eax
  43a13f:	mov    DWORD PTR [rsp+0x38],edi
  43a143:	lea    r12,[r11*8+0x0]
  43a14b:	mov    QWORD PTR [rsp+0x40],rsi
  43a150:	jmp    439d5d <strcmp@plt+0x365a5>
  43a155:	nop    DWORD PTR [rax]
  43a158:	mov    ebx,eax
  43a15a:	mov    rdi,QWORD PTR [r14+0x18]
  43a15e:	mov    QWORD PTR [rsp+0x30],r8
  43a163:	shl    rbx,0x3
  43a167:	mov    rsi,rbx
  43a16a:	call   403670 <realloc@plt>
  43a16f:	mov    rdi,QWORD PTR [r14+0x20]
  43a173:	mov    QWORD PTR [r14+0x18],rax
  43a177:	mov    rsi,rbx
  43a17a:	call   403670 <realloc@plt>
  43a17f:	mov    edx,DWORD PTR [r14]
  43a182:	mov    QWORD PTR [r14+0x20],rax
  43a186:	mov    ecx,DWORD PTR [rsp+0x28]
  43a18a:	mov    r8,QWORD PTR [rsp+0x30]
  43a18f:	test   edx,edx
  43a191:	jne    439ded <strcmp@plt+0x36635>
  43a197:	jmp    439fa4 <strcmp@plt+0x367ec>
  43a19c:	nop    DWORD PTR [rax+0x0]
  43a1a0:	mov    QWORD PTR [r10+rax*8],r11
  43a1a4:	mov    rdx,QWORD PTR [r14+0x20]
  43a1a8:	mov    QWORD PTR [rdx+rax*8],rbx
  43a1ac:	jmp    439b79 <strcmp@plt+0x363c1>
  43a1b1:	cmp    edx,0x2
  43a1b4:	mov    r10,r14
  43a1b7:	ja     4399b6 <strcmp@plt+0x361fe>
  43a1bd:	mov    ecx,0x3
  43a1c2:	mov    DWORD PTR [rsp+0xc],0x3
  43a1ca:	mov    DWORD PTR [rsp+0x48],0x4
  43a1d2:	mov    ebx,0x4
  43a1d7:	jmp    439b41 <strcmp@plt+0x36389>
  43a1dc:	mov    ebx,eax
  43a1de:	mov    rdi,QWORD PTR [r14+0x18]
  43a1e2:	mov    QWORD PTR [rsp+0x30],r8
  43a1e7:	shl    rbx,0x3
  43a1eb:	mov    rsi,rbx
  43a1ee:	call   403670 <realloc@plt>
  43a1f3:	mov    rdi,QWORD PTR [r14+0x20]
  43a1f7:	mov    QWORD PTR [r14+0x18],rax
  43a1fb:	mov    rsi,rbx
  43a1fe:	call   403670 <realloc@plt>
  43a203:	mov    ecx,DWORD PTR [r14]
  43a206:	mov    QWORD PTR [r14+0x20],rax
  43a20a:	mov    r8,QWORD PTR [rsp+0x30]
  43a20f:	test   ecx,ecx
  43a211:	mov    ecx,DWORD PTR [rsp+0x28]
  43a215:	jne    439b71 <strcmp@plt+0x363b9>
  43a21b:	jmp    439fa4 <strcmp@plt+0x367ec>
  43a220:	mov    ecx,eax
  43a222:	mov    DWORD PTR [rsp+0x48],esi
  43a226:	mov    ebx,0x4
  43a22b:	jmp    439b41 <strcmp@plt+0x36389>
  43a230:	mov    eax,DWORD PTR [rsp+0x48]
  43a234:	mov    ecx,eax
  43a236:	shr    ecx,1
  43a238:	or     ecx,eax
  43a23a:	mov    eax,ecx
  43a23c:	shr    eax,0x2
  43a23f:	or     ecx,eax
  43a241:	mov    eax,ecx
  43a243:	shr    eax,0x4
  43a246:	or     ecx,eax
  43a248:	mov    eax,ecx
  43a24a:	shr    eax,0x8
  43a24d:	or     ecx,eax
  43a24f:	mov    eax,ecx
  43a251:	shr    eax,0x10
  43a254:	or     ecx,eax
  43a256:	lea    esi,[rcx+0x1]
  43a259:	cmp    esi,0x3
  43a25c:	jbe    439d9a <strcmp@plt+0x365e2>
  43a262:	vxorpd xmm0,xmm0,xmm0
  43a266:	mov    eax,esi
  43a268:	vmovsd xmm2,QWORD PTR [rip+0x11c88]        # 44bef8 <strcmp@plt+0x48740>
  43a270:	vcvtsi2sd xmm0,xmm0,rax
  43a275:	vfmadd132sd xmm0,xmm2,QWORD PTR [rip+0x11c72]        # 44bef0 <strcmp@plt+0x48738>
  43a27e:	vcvttsd2si rax,xmm0
  43a283:	cmp    edx,eax
  43a285:	mov    DWORD PTR [rsp+0xc],eax
  43a289:	jae    43a2a2 <strcmp@plt+0x36aea>
  43a28b:	cmp    esi,0xf
  43a28e:	jbe    43a2c7 <strcmp@plt+0x36b0f>
  43a290:	mov    ebx,esi
  43a292:	mov    DWORD PTR [rsp+0x48],esi
  43a296:	shr    ebx,0x4
  43a299:	shl    rbx,0x2
  43a29d:	jmp    439dbd <strcmp@plt+0x36605>
  43a2a2:	mov    eax,DWORD PTR [rsp+0x40]
  43a2a6:	mov    ecx,ebp
  43a2a8:	mov    r8,r13
  43a2ab:	mov    r10,r14
  43a2ae:	mov    DWORD PTR [rsp+0x28],eax
  43a2b2:	jmp    4399b6 <strcmp@plt+0x361fe>
  43a2b7:	mov    r11d,edx
  43a2ba:	lea    r12,[r11*8+0x0]
  43a2c2:	jmp    43a04b <strcmp@plt+0x36893>
  43a2c7:	mov    DWORD PTR [rsp+0x48],esi
  43a2cb:	mov    ebx,0x4
  43a2d0:	jmp    439dbd <strcmp@plt+0x36605>
  43a2d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43a2e0:	push   r15
  43a2e2:	push   r14
  43a2e4:	push   r13
  43a2e6:	push   r12
  43a2e8:	push   rbp
  43a2e9:	push   rbx
  43a2ea:	sub    rsp,0x38
  43a2ee:	mov    r13,QWORD PTR [rdi]
  43a2f1:	mov    eax,DWORD PTR [r13+0x0]
  43a2f5:	test   eax,eax
  43a2f7:	mov    DWORD PTR [rsp+0x2c],eax
  43a2fb:	je     43a408 <strcmp@plt+0x36c50>
  43a301:	movsx  r12d,BYTE PTR [rsi]
  43a305:	sub    eax,0x1
  43a308:	mov    ebx,0x1
  43a30d:	mov    DWORD PTR [rsp+0xc],eax
  43a311:	test   r12d,r12d
  43a314:	jne    43a420 <strcmp@plt+0x36c68>
  43a31a:	and    ebx,DWORD PTR [rsp+0xc]
  43a31e:	mov    QWORD PTR [rsp+0x18],rsi
  43a323:	mov    r15d,r12d
  43a326:	mov    QWORD PTR [rsp+0x20],rdi
  43a32b:	mov    r10,QWORD PTR [r13+0x10]
  43a32f:	mov    DWORD PTR [rsp+0x28],ebx
  43a333:	jmp    43a378 <strcmp@plt+0x36bc0>
  43a335:	nop    DWORD PTR [rax]
  43a338:	test   bl,0x1
  43a33b:	jne    43a360 <strcmp@plt+0x36ba8>
  43a33d:	mov    rsi,QWORD PTR [r13+0x18]
  43a341:	mov    eax,r15d
  43a344:	mov    QWORD PTR [rsp+0x10],r10
  43a349:	mov    rdi,QWORD PTR [rsi+rax*8]
  43a34d:	mov    rsi,QWORD PTR [rsp+0x18]
  43a352:	call   4037b8 <strcmp@plt>
  43a357:	test   eax,eax
  43a359:	mov    r10,QWORD PTR [rsp+0x10]
  43a35e:	je     43a39f <strcmp@plt+0x36be7>
  43a360:	mov    eax,DWORD PTR [rsp+0x28]
  43a364:	lea    edx,[rax+r15*1]
  43a368:	and    edx,DWORD PTR [rsp+0xc]
  43a36c:	cmp    edx,r12d
  43a36f:	mov    r15d,edx
  43a372:	je     43a408 <strcmp@plt+0x36c50>
  43a378:	mov    eax,r15d
  43a37b:	lea    r8d,[r15+r15*1]
  43a37f:	shr    eax,0x4
  43a382:	mov    ecx,DWORD PTR [r10+rax*4]
  43a386:	and    r8d,0x1e
  43a38a:	lea    rbp,[rax*4+0x0]
  43a392:	mov    r14d,r8d
  43a395:	shrx   ebx,ecx,r8d
  43a39a:	test   bl,0x2
  43a39d:	je     43a338 <strcmp@plt+0x36b80>
  43a39f:	and    ebx,0x3
  43a3a2:	jne    43a408 <strcmp@plt+0x36c50>
  43a3a4:	cmp    DWORD PTR [rsp+0x2c],r15d
  43a3a9:	je     43a408 <strcmp@plt+0x36c50>
  43a3ab:	mov    rax,QWORD PTR [r13+0x18]
  43a3af:	mov    ebx,r15d
  43a3b2:	mov    rdi,QWORD PTR [rax+rbx*8]
  43a3b6:	call   4037b0 <free@plt>
  43a3bb:	mov    rsi,QWORD PTR [rsp+0x20]
  43a3c0:	mov    rax,QWORD PTR [rsi+0x8]
  43a3c4:	test   rax,rax
  43a3c7:	je     43a3d6 <strcmp@plt+0x36c1e>
  43a3c9:	mov    rcx,QWORD PTR [rsi]
  43a3cc:	mov    rcx,QWORD PTR [rcx+0x20]
  43a3d0:	mov    rdi,QWORD PTR [rcx+rbx*8]
  43a3d4:	call   rax
  43a3d6:	mov    rax,QWORD PTR [rsp+0x20]
  43a3db:	mov    rax,QWORD PTR [rax]
  43a3de:	cmp    r15d,DWORD PTR [rax]
  43a3e1:	je     43a408 <strcmp@plt+0x36c50>
  43a3e3:	add    rbp,QWORD PTR [rax+0x10]
  43a3e7:	mov    edx,DWORD PTR [rbp+0x0]
  43a3ea:	shrx   ecx,edx,r14d
  43a3ef:	and    ecx,0x3
  43a3f2:	jne    43a408 <strcmp@plt+0x36c50>
  43a3f4:	mov    ecx,0x1
  43a3f9:	shlx   r8,rcx,r14
  43a3fe:	or     edx,r8d
  43a401:	mov    DWORD PTR [rbp+0x0],edx
  43a404:	sub    DWORD PTR [rax+0x4],0x1
  43a408:	add    rsp,0x38
  43a40c:	pop    rbx
  43a40d:	pop    rbp
  43a40e:	pop    r12
  43a410:	pop    r13
  43a412:	pop    r14
  43a414:	pop    r15
  43a416:	ret    
  43a417:	nop    WORD PTR [rax+rax*1+0x0]
  43a420:	movsx  eax,BYTE PTR [rsi+0x1]
  43a424:	lea    rcx,[rsi+0x1]
  43a428:	test   al,al
  43a42a:	je     43a448 <strcmp@plt+0x36c90>
  43a42c:	nop    DWORD PTR [rax+0x0]
  43a430:	mov    edx,r12d
  43a433:	add    rcx,0x1
  43a437:	shl    edx,0x5
  43a43a:	sub    edx,r12d
  43a43d:	lea    r12d,[rax+rdx*1]
  43a441:	movsx  eax,BYTE PTR [rcx]
  43a444:	test   al,al
  43a446:	jne    43a430 <strcmp@plt+0x36c78>
  43a448:	mov    ebx,r12d
  43a44b:	lea    eax,[r12*8+0x0]
  43a453:	and    r12d,DWORD PTR [rsp+0xc]
  43a458:	shr    ebx,0x3
  43a45b:	xor    ebx,eax
  43a45d:	or     ebx,0x1
  43a460:	jmp    43a31a <strcmp@plt+0x36b62>
  43a465:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43a470:	push   r15
  43a472:	push   r14
  43a474:	push   r13
  43a476:	push   r12
  43a478:	push   rbp
  43a479:	push   rbx
  43a47a:	sub    rsp,0x18
  43a47e:	mov    r15,QWORD PTR [rdi]
  43a481:	mov    eax,DWORD PTR [r15]
  43a484:	mov    ecx,eax
  43a486:	mov    DWORD PTR [rsp+0xc],eax
  43a48a:	xor    eax,eax
  43a48c:	test   ecx,ecx
  43a48e:	je     43a51a <strcmp@plt+0x36d62>
  43a494:	movsx  r14d,BYTE PTR [rsi]
  43a498:	lea    r13d,[rcx-0x1]
  43a49c:	mov    r12d,0x1
  43a4a2:	test   r14d,r14d
  43a4a5:	jne    43a530 <strcmp@plt+0x36d78>
  43a4ab:	and    r12d,r13d
  43a4ae:	mov    QWORD PTR [rsp],rsi
  43a4b2:	mov    ebx,r14d
  43a4b5:	mov    DWORD PTR [rsp+0x8],r12d
  43a4ba:	mov    r12,QWORD PTR [r15+0x10]
  43a4be:	jmp    43a4ed <strcmp@plt+0x36d35>
  43a4c0:	test   bpl,0x1
  43a4c4:	jne    43a4dd <strcmp@plt+0x36d25>
  43a4c6:	mov    rsi,QWORD PTR [r15+0x18]
  43a4ca:	mov    eax,ebx
  43a4cc:	mov    rdi,QWORD PTR [rsi+rax*8]
  43a4d0:	mov    rsi,QWORD PTR [rsp]
  43a4d4:	call   4037b8 <strcmp@plt>
  43a4d9:	test   eax,eax
  43a4db:	je     43a507 <strcmp@plt+0x36d4f>
  43a4dd:	add    ebx,DWORD PTR [rsp+0x8]
  43a4e1:	and    ebx,r13d
  43a4e4:	cmp    ebx,r14d
  43a4e7:	je     43a580 <strcmp@plt+0x36dc8>
  43a4ed:	mov    eax,ebx
  43a4ef:	lea    ebp,[rbx+rbx*1]
  43a4f2:	shr    eax,0x4
  43a4f5:	mov    eax,DWORD PTR [r12+rax*4]
  43a4f9:	and    ebp,0x1e
  43a4fc:	shrx   ebp,eax,ebp
  43a501:	test   bpl,0x2
  43a505:	je     43a4c0 <strcmp@plt+0x36d08>
  43a507:	and    ebp,0x3
  43a50a:	jne    43a580 <strcmp@plt+0x36dc8>
  43a50c:	cmp    DWORD PTR [rsp+0xc],ebx
  43a510:	je     43a580 <strcmp@plt+0x36dc8>
  43a512:	mov    rax,QWORD PTR [r15+0x20]
  43a516:	mov    rax,QWORD PTR [rax+rbx*8]
  43a51a:	add    rsp,0x18
  43a51e:	pop    rbx
  43a51f:	pop    rbp
  43a520:	pop    r12
  43a522:	pop    r13
  43a524:	pop    r14
  43a526:	pop    r15
  43a528:	ret    
  43a529:	nop    DWORD PTR [rax+0x0]
  43a530:	movsx  eax,BYTE PTR [rsi+0x1]
  43a534:	lea    r8,[rsi+0x1]
  43a538:	test   al,al
  43a53a:	je     43a55b <strcmp@plt+0x36da3>
  43a53c:	nop    DWORD PTR [rax+0x0]
  43a540:	mov    edi,r14d
  43a543:	add    r8,0x1
  43a547:	shl    edi,0x5
  43a54a:	mov    edx,edi
  43a54c:	sub    edx,r14d
  43a54f:	lea    r14d,[rax+rdx*1]
  43a553:	movsx  eax,BYTE PTR [r8]
  43a557:	test   al,al
  43a559:	jne    43a540 <strcmp@plt+0x36d88>
  43a55b:	mov    r12d,r14d
  43a55e:	lea    eax,[r14*8+0x0]
  43a566:	and    r14d,r13d
  43a569:	shr    r12d,0x3
  43a56d:	xor    r12d,eax
  43a570:	or     r12d,0x1
  43a574:	jmp    43a4ab <strcmp@plt+0x36cf3>
  43a579:	nop    DWORD PTR [rax+0x0]
  43a580:	add    rsp,0x18
  43a584:	xor    eax,eax
  43a586:	pop    rbx
  43a587:	pop    rbp
  43a588:	pop    r12
  43a58a:	pop    r13
  43a58c:	pop    r14
  43a58e:	pop    r15
  43a590:	ret    
  43a591:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43a59c:	nop    DWORD PTR [rax+0x0]
  43a5a0:	test   rdi,rdi
  43a5a3:	je     43a660 <strcmp@plt+0x36ea8>
  43a5a9:	push   r13
  43a5ab:	push   r12
  43a5ad:	mov    r12,rdi
  43a5b0:	push   rbp
  43a5b1:	push   rbx
  43a5b2:	sub    rsp,0x8
  43a5b6:	mov    rbp,QWORD PTR [rdi]
  43a5b9:	mov    eax,DWORD PTR [rbp+0x0]
  43a5bc:	test   eax,eax
  43a5be:	je     43a621 <strcmp@plt+0x36e69>
  43a5c0:	xor    ebx,ebx
  43a5c2:	jmp    43a5d0 <strcmp@plt+0x36e18>
  43a5c4:	nop    DWORD PTR [rax+0x0]
  43a5c8:	add    ebx,0x1
  43a5cb:	cmp    DWORD PTR [rbp+0x0],ebx
  43a5ce:	je     43a621 <strcmp@plt+0x36e69>
  43a5d0:	mov    rsi,QWORD PTR [rbp+0x10]
  43a5d4:	lea    eax,[rbx+rbx*1]
  43a5d7:	mov    ecx,ebx
  43a5d9:	shr    ecx,0x4
  43a5dc:	and    eax,0x1e
  43a5df:	mov    edx,eax
  43a5e1:	mov    eax,DWORD PTR [rsi+rcx*4]
  43a5e4:	shrx   eax,eax,edx
  43a5e9:	test   al,0x3
  43a5eb:	jne    43a5c8 <strcmp@plt+0x36e10>
  43a5ed:	mov    rax,QWORD PTR [rbp+0x18]
  43a5f1:	mov    r13d,ebx
  43a5f4:	mov    rdi,QWORD PTR [rax+r13*8]
  43a5f8:	call   4037b0 <free@plt>
  43a5fd:	mov    rax,QWORD PTR [r12+0x8]
  43a602:	test   rax,rax
  43a605:	je     43a615 <strcmp@plt+0x36e5d>
  43a607:	mov    rdx,QWORD PTR [r12]
  43a60b:	mov    rdx,QWORD PTR [rdx+0x20]
  43a60f:	mov    rdi,QWORD PTR [rdx+r13*8]
  43a613:	call   rax
  43a615:	mov    rbp,QWORD PTR [r12]
  43a619:	add    ebx,0x1
  43a61c:	cmp    DWORD PTR [rbp+0x0],ebx
  43a61f:	jne    43a5d0 <strcmp@plt+0x36e18>
  43a621:	mov    rdi,QWORD PTR [rbp+0x18]
  43a625:	call   4037b0 <free@plt>
  43a62a:	mov    rdi,QWORD PTR [rbp+0x10]
  43a62e:	call   4037b0 <free@plt>
  43a633:	mov    rdi,QWORD PTR [rbp+0x20]
  43a637:	call   4037b0 <free@plt>
  43a63c:	mov    rdi,rbp
  43a63f:	call   4037b0 <free@plt>
  43a644:	add    rsp,0x8
  43a648:	mov    rdi,r12
  43a64b:	pop    rbx
  43a64c:	pop    rbp
  43a64d:	pop    r12
  43a64f:	pop    r13
  43a651:	jmp    4037b0 <free@plt>
  43a656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a660:	repz ret 
  43a662:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43a66d:	nop    DWORD PTR [rax]
  43a670:	push   r12
  43a672:	push   rbp
  43a673:	mov    r12,rdi
  43a676:	push   rbx
  43a677:	call   42d4e0 <strcmp@plt+0x29d28>
  43a67c:	mov    rsi,QWORD PTR [r12]
  43a680:	mov    rbp,rax
  43a683:	mov    eax,DWORD PTR [rsi]
  43a685:	test   eax,eax
  43a687:	je     43a6d1 <strcmp@plt+0x36f19>
  43a689:	xor    ebx,ebx
  43a68b:	jmp    43a697 <strcmp@plt+0x36edf>
  43a68d:	nop    DWORD PTR [rax]
  43a690:	add    ebx,0x1
  43a693:	cmp    DWORD PTR [rsi],ebx
  43a695:	je     43a6d1 <strcmp@plt+0x36f19>
  43a697:	mov    rdi,QWORD PTR [rsi+0x10]
  43a69b:	lea    eax,[rbx+rbx*1]
  43a69e:	mov    ecx,ebx
  43a6a0:	shr    ecx,0x4
  43a6a3:	and    eax,0x1e
  43a6a6:	mov    edx,eax
  43a6a8:	mov    eax,DWORD PTR [rdi+rcx*4]
  43a6ab:	shrx   eax,eax,edx
  43a6b0:	test   al,0x3
  43a6b2:	jne    43a690 <strcmp@plt+0x36ed8>
  43a6b4:	mov    rdx,QWORD PTR [rsi+0x18]
  43a6b8:	mov    eax,ebx
  43a6ba:	mov    rsi,rbp
  43a6bd:	add    ebx,0x1
  43a6c0:	mov    rdi,QWORD PTR [rdx+rax*8]
  43a6c4:	call   42d540 <strcmp@plt+0x29d88>
  43a6c9:	mov    rsi,QWORD PTR [r12]
  43a6cd:	cmp    DWORD PTR [rsi],ebx
  43a6cf:	jne    43a697 <strcmp@plt+0x36edf>
  43a6d1:	mov    rax,rbp
  43a6d4:	pop    rbx
  43a6d5:	pop    rbp
  43a6d6:	pop    r12
  43a6d8:	ret    
  43a6d9:	nop    DWORD PTR [rax+0x0]
  43a6e0:	push   r12
  43a6e2:	push   rbp
  43a6e3:	mov    r12,rdi
  43a6e6:	push   rbx
  43a6e7:	call   42d4e0 <strcmp@plt+0x29d28>
  43a6ec:	mov    rsi,QWORD PTR [r12]
  43a6f0:	mov    rbp,rax
  43a6f3:	mov    eax,DWORD PTR [rsi]
  43a6f5:	test   eax,eax
  43a6f7:	je     43a741 <strcmp@plt+0x36f89>
  43a6f9:	xor    ebx,ebx
  43a6fb:	jmp    43a707 <strcmp@plt+0x36f4f>
  43a6fd:	nop    DWORD PTR [rax]
  43a700:	add    ebx,0x1
  43a703:	cmp    DWORD PTR [rsi],ebx
  43a705:	je     43a741 <strcmp@plt+0x36f89>
  43a707:	mov    rdi,QWORD PTR [rsi+0x10]
  43a70b:	lea    eax,[rbx+rbx*1]
  43a70e:	mov    ecx,ebx
  43a710:	shr    ecx,0x4
  43a713:	and    eax,0x1e
  43a716:	mov    edx,eax
  43a718:	mov    eax,DWORD PTR [rdi+rcx*4]
  43a71b:	shrx   eax,eax,edx
  43a720:	test   al,0x3
  43a722:	jne    43a700 <strcmp@plt+0x36f48>
  43a724:	mov    rdx,QWORD PTR [rsi+0x20]
  43a728:	mov    eax,ebx
  43a72a:	mov    rsi,rbp
  43a72d:	add    ebx,0x1
  43a730:	mov    rdi,QWORD PTR [rdx+rax*8]
  43a734:	call   42d540 <strcmp@plt+0x29d88>
  43a739:	mov    rsi,QWORD PTR [r12]
  43a73d:	cmp    DWORD PTR [rsi],ebx
  43a73f:	jne    43a707 <strcmp@plt+0x36f4f>
  43a741:	mov    rax,rbp
  43a744:	pop    rbx
  43a745:	pop    rbp
  43a746:	pop    r12
  43a748:	ret    
  43a749:	nop    DWORD PTR [rax+0x0]
  43a750:	sub    rsp,0x18
  43a754:	mov    edx,0x4
  43a759:	mov    DWORD PTR [rsp+0xc],edi
  43a75d:	mov    edi,DWORD PTR [rip+0x39609]        # 473d6c <strcmp@plt+0x705b4>
  43a763:	lea    rsi,[rsp+0xc]
  43a768:	call   403180 <write@plt>
  43a76d:	cmp    rax,0x4
  43a771:	je     43a799 <strcmp@plt+0x36fe1>
  43a773:	call   403050 <__errno_location@plt>
  43a778:	mov    edi,DWORD PTR [rax]
  43a77a:	call   403170 <strerror@plt>
  43a77f:	mov    edx,DWORD PTR [rsp+0xc]
  43a783:	lea    rsi,[rip+0x16d4e]        # 4514d8 <strcmp@plt+0x4dd20>
  43a78a:	mov    rcx,rax
  43a78d:	mov    edi,0x3
  43a792:	xor    eax,eax
  43a794:	call   4306a0 <strcmp@plt+0x2cee8>
  43a799:	add    rsp,0x18
  43a79d:	ret    
  43a79e:	xchg   ax,ax
  43a7a0:	push   r12
  43a7a2:	push   rbp
  43a7a3:	mov    edx,0x4
  43a7a8:	push   rbx
  43a7a9:	sub    rsp,0x30
  43a7ad:	mov    edi,DWORD PTR [rdi+0x18]
  43a7b0:	lea    rsi,[rsp+0xc]
  43a7b5:	mov    rax,QWORD PTR fs:0x28
  43a7be:	mov    QWORD PTR [rsp+0x28],rax
  43a7c3:	xor    eax,eax
  43a7c5:	call   4035a0 <read@plt>
  43a7ca:	cmp    eax,0x4
  43a7cd:	jne    43a8a0 <strcmp@plt+0x370e8>
  43a7d3:	xor    eax,eax
  43a7d5:	cmp    DWORD PTR [rsp+0xc],0xc
  43a7da:	je     43a800 <strcmp@plt+0x37048>
  43a7dc:	mov    rcx,QWORD PTR [rsp+0x28]
  43a7e1:	xor    rcx,QWORD PTR fs:0x28
  43a7ea:	jne    43a8bd <strcmp@plt+0x37105>
  43a7f0:	add    rsp,0x30
  43a7f4:	pop    rbx
  43a7f5:	pop    rbp
  43a7f6:	pop    r12
  43a7f8:	ret    
  43a7f9:	nop    DWORD PTR [rax+0x0]
  43a800:	lea    rdi,[rsp+0x10]
  43a805:	xor    esi,esi
  43a807:	call   403660 <gettimeofday@plt>
  43a80c:	mov    r12,0x473d40
  43a813:	mov    eax,DWORD PTR [r12+0x4]
  43a818:	add    eax,0x1
  43a81b:	cdq    
  43a81c:	idiv   DWORD PTR [r12]
  43a820:	movsxd rbp,edx
  43a823:	mov    DWORD PTR [r12+0x4],edx
  43a828:	shl    rbp,0x4
  43a82c:	add    rbp,QWORD PTR [r12+0x8]
  43a831:	mov    rax,QWORD PTR [rbp+0x8]
  43a835:	cmp    rbp,rax
  43a838:	jne    43a84f <strcmp@plt+0x37097>
  43a83a:	jmp    43a890 <strcmp@plt+0x370d8>
  43a83c:	nop    DWORD PTR [rax+0x0]
  43a840:	sub    edx,0x1
  43a843:	mov    DWORD PTR [rax+0x14],edx
  43a846:	mov    rax,QWORD PTR [rbx+0x8]
  43a84a:	cmp    rbp,rax
  43a84d:	je     43a890 <strcmp@plt+0x370d8>
  43a84f:	mov    edx,DWORD PTR [rax+0x14]
  43a852:	mov    rbx,QWORD PTR [rax]
  43a855:	test   edx,edx
  43a857:	jg     43a840 <strcmp@plt+0x37088>
  43a859:	mov    rdx,QWORD PTR [rax+0x8]
  43a85d:	mov    rdi,rax
  43a860:	mov    QWORD PTR [rbx+0x8],rdx
  43a864:	mov    QWORD PTR [rdx],rbx
  43a867:	mov    QWORD PTR [rax+0x8],0x0
  43a86f:	mov    QWORD PTR [rax],0x0
  43a876:	sub    DWORD PTR [r12+0x18],0x1
  43a87c:	add    DWORD PTR [r12+0x1c],0x1
  43a882:	call   QWORD PTR [rax+0x18]
  43a885:	mov    rax,QWORD PTR [rbx+0x8]
  43a889:	cmp    rbp,rax
  43a88c:	jne    43a84f <strcmp@plt+0x37097>
  43a88e:	xchg   ax,ax
  43a890:	xor    eax,eax
  43a892:	jmp    43a7dc <strcmp@plt+0x37024>
  43a897:	nop    WORD PTR [rax+rax*1+0x0]
  43a8a0:	lea    rsi,[rip+0x16ca9]        # 451550 <strcmp@plt+0x4dd98>
  43a8a7:	xor    eax,eax
  43a8a9:	mov    edi,0x3
  43a8ae:	call   4306a0 <strcmp@plt+0x2cee8>
  43a8b3:	mov    eax,0xffffffff
  43a8b8:	jmp    43a7dc <strcmp@plt+0x37024>
  43a8bd:	call   403460 <__stack_chk_fail@plt>
  43a8c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43a8cd:	nop    DWORD PTR [rax]
  43a8d0:	push   rbp
  43a8d1:	push   rbx
  43a8d2:	sub    rsp,0xc8
  43a8d9:	mov    rax,QWORD PTR fs:0x28
  43a8e2:	mov    QWORD PTR [rsp+0xb8],rax
  43a8ea:	xor    eax,eax
  43a8ec:	mov    rax,0x468e3c
  43a8f3:	mov    eax,DWORD PTR [rax]
  43a8f5:	test   eax,eax
  43a8f7:	jle    43a90c <strcmp@plt+0x37154>
  43a8f9:	lea    rsi,[rip+0x16bff]        # 4514ff <strcmp@plt+0x4dd47>
  43a900:	mov    edi,0x5
  43a905:	xor    eax,eax
  43a907:	call   4306a0 <strcmp@plt+0x2cee8>
  43a90c:	lea    rdi,[rip+0x39455]        # 473d68 <strcmp@plt+0x705b0>
  43a913:	call   403540 <pipe@plt>
  43a918:	cmp    eax,0xffffffff
  43a91b:	je     43aaa0 <strcmp@plt+0x372e8>
  43a921:	mov    edi,DWORD PTR [rip+0x39441]        # 473d68 <strcmp@plt+0x705b0>
  43a927:	mov    rbx,0x473d20
  43a92e:	xor    edx,edx
  43a930:	xor    eax,eax
  43a932:	mov    esi,0x3
  43a937:	mov    DWORD PTR [rbx],edi
  43a939:	call   403280 <fcntl@plt>
  43a93e:	cmp    eax,0xffffffff
  43a941:	je     43ab43 <strcmp@plt+0x3738b>
  43a947:	mov    edi,DWORD PTR [rbx]
  43a949:	or     ah,0x8
  43a94c:	mov    esi,0x4
  43a951:	mov    edx,eax
  43a953:	xor    eax,eax
  43a955:	call   403280 <fcntl@plt>
  43a95a:	cmp    eax,0xffffffff
  43a95d:	je     43ab6a <strcmp@plt+0x373b2>
  43a963:	lea    rbp,[rsp+0x20]
  43a968:	xor    eax,eax
  43a96a:	mov    ecx,0x13
  43a96f:	mov    rdi,rbp
  43a972:	rep stos QWORD PTR es:[rdi],rax
  43a975:	lea    rax,[rip+0xfffffffffffffdd4]        # 43a750 <strcmp@plt+0x36f98>
  43a97c:	lea    rdi,[rbp+0x8]
  43a980:	mov    QWORD PTR [rsp+0x20],rax
  43a985:	call   4034f0 <sigemptyset@plt>
  43a98a:	xor    edx,edx
  43a98c:	mov    rsi,rbp
  43a98f:	mov    edi,0xc
  43a994:	call   403500 <sigaction@plt>
  43a999:	cmp    eax,0xffffffff
  43a99c:	je     43ab15 <strcmp@plt+0x3735d>
  43a9a2:	lea    rdx,[rip+0x393b7]        # 473d60 <strcmp@plt+0x705a8>
  43a9a9:	mov    rsi,rbp
  43a9ac:	mov    edi,0x1
  43a9b1:	mov    DWORD PTR [rsp+0x2c],0x0
  43a9b9:	mov    DWORD PTR [rsp+0x28],0xc
  43a9c1:	mov    QWORD PTR [rsp+0x20],rdx
  43a9c6:	call   4036b0 <timer_create@plt>
  43a9cb:	cmp    eax,0xffffffff
  43a9ce:	je     43aad9 <strcmp@plt+0x37321>
  43a9d4:	mov    rdi,QWORD PTR [rip+0x39385]        # 473d60 <strcmp@plt+0x705a8>
  43a9db:	xor    ecx,ecx
  43a9dd:	xor    esi,esi
  43a9df:	mov    rdx,rsp
  43a9e2:	mov    QWORD PTR [rsp+0x18],0x0
  43a9eb:	mov    QWORD PTR [rsp+0x10],0x1
  43a9f4:	mov    QWORD PTR [rsp+0x8],0x0
  43a9fd:	mov    QWORD PTR [rsp],0x1
  43aa05:	call   403350 <timer_settime@plt>
  43aa0a:	cmp    eax,0xffffffff
  43aa0d:	je     43ab91 <strcmp@plt+0x373d9>
  43aa13:	mov    rbp,0x473d40
  43aa1a:	mov    edi,0x10000
  43aa1f:	mov    DWORD PTR [rbp+0x0],0x1000
  43aa26:	call   4347a0 <strcmp@plt+0x30fe8>
  43aa2b:	lea    rdx,[rax+0x10000]
  43aa32:	mov    QWORD PTR [rbp+0x8],rax
  43aa36:	mov    DWORD PTR [rbp+0x4],0x0
  43aa3d:	mov    DWORD PTR [rbp+0x18],0x0
  43aa44:	mov    DWORD PTR [rbp+0x1c],0x0
  43aa4b:	nop    DWORD PTR [rax+rax*1+0x0]
  43aa50:	mov    QWORD PTR [rax+0x8],rax
  43aa54:	mov    QWORD PTR [rax],rax
  43aa57:	add    rax,0x10
  43aa5b:	cmp    rdx,rax
  43aa5e:	jne    43aa50 <strcmp@plt+0x37298>
  43aa60:	mov    rax,0x4747a8
  43aa67:	mov    ecx,DWORD PTR [rbx]
  43aa69:	lea    rsi,[rip+0xfffffffffffffd30]        # 43a7a0 <strcmp@plt+0x36fe8>
  43aa70:	xor    edx,edx
  43aa72:	mov    rdi,QWORD PTR [rax]
  43aa75:	call   437e60 <strcmp@plt+0x346a8>
  43aa7a:	mov    eax,0x1
  43aa7f:	mov    rcx,QWORD PTR [rsp+0xb8]
  43aa87:	xor    rcx,QWORD PTR fs:0x28
  43aa90:	jne    43abbf <strcmp@plt+0x37407>
  43aa96:	add    rsp,0xc8
  43aa9d:	pop    rbx
  43aa9e:	pop    rbp
  43aa9f:	ret    
  43aaa0:	call   403050 <__errno_location@plt>
  43aaa5:	mov    edi,DWORD PTR [rax]
  43aaa7:	call   403170 <strerror@plt>
  43aaac:	lea    rsi,[rip+0x16ac5]        # 451578 <strcmp@plt+0x4ddc0>
  43aab3:	mov    rdx,rax
  43aab6:	mov    edi,0x2
  43aabb:	xor    eax,eax
  43aabd:	call   4306a0 <strcmp@plt+0x2cee8>
  43aac2:	lea    rsi,[rip+0x16bcf]        # 451698 <strcmp@plt+0x4dee0>
  43aac9:	xor    eax,eax
  43aacb:	mov    edi,0x1
  43aad0:	call   4306a0 <strcmp@plt+0x2cee8>
  43aad5:	xor    eax,eax
  43aad7:	jmp    43aa7f <strcmp@plt+0x372c7>
  43aad9:	call   403050 <__errno_location@plt>
  43aade:	mov    edi,DWORD PTR [rax]
  43aae0:	call   403170 <strerror@plt>
  43aae5:	lea    rsi,[rip+0x16a00]        # 4514ec <strcmp@plt+0x4dd34>
  43aaec:	mov    rdx,rax
  43aaef:	mov    edi,0x4
  43aaf4:	xor    eax,eax
  43aaf6:	call   4306a0 <strcmp@plt+0x2cee8>
  43aafb:	lea    rsi,[rip+0x16a16]        # 451518 <strcmp@plt+0x4dd60>
  43ab02:	xor    eax,eax
  43ab04:	mov    edi,0x4
  43ab09:	call   4306a0 <strcmp@plt+0x2cee8>
  43ab0e:	xor    eax,eax
  43ab10:	jmp    43aa7f <strcmp@plt+0x372c7>
  43ab15:	call   403050 <__errno_location@plt>
  43ab1a:	mov    edi,DWORD PTR [rax]
  43ab1c:	call   403170 <strerror@plt>
  43ab21:	lea    rsi,[rip+0x16b00]        # 451628 <strcmp@plt+0x4de70>
  43ab28:	mov    rdx,rax
  43ab2b:	mov    edi,0x2
  43ab30:	xor    eax,eax
  43ab32:	call   4306a0 <strcmp@plt+0x2cee8>
  43ab37:	xor    eax,eax
  43ab39:	call   43f160 <strcmp@plt+0x3b9a8>
  43ab3e:	jmp    43a9a2 <strcmp@plt+0x371ea>
  43ab43:	call   403050 <__errno_location@plt>
  43ab48:	mov    edi,DWORD PTR [rax]
  43ab4a:	call   403170 <strerror@plt>
  43ab4f:	lea    rsi,[rip+0x16a5a]        # 4515b0 <strcmp@plt+0x4ddf8>
  43ab56:	mov    rdx,rax
  43ab59:	mov    edi,0x2
  43ab5e:	xor    eax,eax
  43ab60:	call   4306a0 <strcmp@plt+0x2cee8>
  43ab65:	jmp    43aac2 <strcmp@plt+0x3730a>
  43ab6a:	call   403050 <__errno_location@plt>
  43ab6f:	mov    edi,DWORD PTR [rax]
  43ab71:	call   403170 <strerror@plt>
  43ab76:	lea    rsi,[rip+0x16a6b]        # 4515e8 <strcmp@plt+0x4de30>
  43ab7d:	mov    rdx,rax
  43ab80:	mov    edi,0x2
  43ab85:	xor    eax,eax
  43ab87:	call   4306a0 <strcmp@plt+0x2cee8>
  43ab8c:	jmp    43aac2 <strcmp@plt+0x3730a>
  43ab91:	call   403050 <__errno_location@plt>
  43ab96:	mov    edi,DWORD PTR [rax]
  43ab98:	call   403170 <strerror@plt>
  43ab9d:	mov    rdx,QWORD PTR [rip+0x391bc]        # 473d60 <strcmp@plt+0x705a8>
  43aba4:	lea    rsi,[rip+0x16ab5]        # 451660 <strcmp@plt+0x4dea8>
  43abab:	mov    rcx,rax
  43abae:	mov    edi,0x4
  43abb3:	xor    eax,eax
  43abb5:	call   4306a0 <strcmp@plt+0x2cee8>
  43abba:	jmp    43aafb <strcmp@plt+0x37343>
  43abbf:	call   403460 <__stack_chk_fail@plt>
  43abc4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43abcf:	nop
  43abd0:	push   rbx
  43abd1:	mov    ebx,edi
  43abd3:	mov    edi,0x48
  43abd8:	call   434790 <strcmp@plt+0x30fd8>
  43abdd:	mov    DWORD PTR [rax+0x40],ebx
  43abe0:	mov    QWORD PTR [rax],0x0
  43abe7:	mov    QWORD PTR [rax+0x8],0x0
  43abef:	pop    rbx
  43abf0:	ret    
  43abf1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43abfc:	nop    DWORD PTR [rax+0x0]
  43ac00:	mov    QWORD PTR [rdi+0x18],rdx
  43ac04:	mov    QWORD PTR [rdi+0x20],r8
  43ac08:	mov    QWORD PTR [rdi+0x28],rcx
  43ac0c:	mov    QWORD PTR [rdi+0x30],rsi
  43ac10:	mov    QWORD PTR [rdi+0x38],r9
  43ac14:	ret    
  43ac15:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43ac20:	mov    rax,QWORD PTR [rdi+0x30]
  43ac24:	ret    
  43ac25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43ac30:	mov    rax,QWORD PTR [rdi+0x28]
  43ac34:	ret    
  43ac35:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43ac40:	mov    eax,DWORD PTR [rdi+0x40]
  43ac43:	ret    
  43ac44:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43ac4f:	nop
  43ac50:	mov    rax,QWORD PTR [rdi+0x38]
  43ac54:	ret    
  43ac55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43ac60:	mov    rdx,QWORD PTR [rdi+0x8]
  43ac64:	mov    eax,esi
  43ac66:	test   rdx,rdx
  43ac69:	je     43acc0 <strcmp@plt+0x37508>
  43ac6b:	mov    rcx,QWORD PTR [rdi]
  43ac6e:	mov    QWORD PTR [rdx],rcx
  43ac71:	mov    QWORD PTR [rcx+0x8],rdx
  43ac75:	mov    rcx,0x473d40
  43ac7c:	mov    esi,DWORD PTR [rcx+0x18]
  43ac7f:	lea    r8d,[rsi-0x1]
  43ac83:	mov    esi,DWORD PTR [rcx]
  43ac85:	xor    edx,edx
  43ac87:	mov    DWORD PTR [rdi+0x10],eax
  43ac8a:	div    esi
  43ac8c:	mov    DWORD PTR [rdi+0x14],eax
  43ac8f:	mov    eax,DWORD PTR [rcx+0x4]
  43ac92:	add    eax,edx
  43ac94:	xor    edx,edx
  43ac96:	div    esi
  43ac98:	mov    edx,edx
  43ac9a:	shl    rdx,0x4
  43ac9e:	add    rdx,QWORD PTR [rcx+0x8]
  43aca2:	mov    rax,QWORD PTR [rdx]
  43aca5:	mov    QWORD PTR [rdi+0x8],rdx
  43aca9:	mov    QWORD PTR [rdi],rax
  43acac:	mov    QWORD PTR [rax+0x8],rdi
  43acb0:	lea    eax,[r8+0x1]
  43acb4:	mov    QWORD PTR [rdx],rdi
  43acb7:	mov    DWORD PTR [rcx+0x18],eax
  43acba:	ret    
  43acbb:	nop    DWORD PTR [rax+rax*1+0x0]
  43acc0:	mov    rcx,0x473d40
  43acc7:	mov    r8d,DWORD PTR [rcx+0x18]
  43accb:	jmp    43ac83 <strcmp@plt+0x374cb>
  43accd:	nop    DWORD PTR [rax]
  43acd0:	test   rdi,rdi
  43acd3:	je     43ad40 <strcmp@plt+0x37588>
  43acd5:	push   rbx
  43acd6:	mov    rax,QWORD PTR [rdi+0x8]
  43acda:	mov    rdx,QWORD PTR [rdi]
  43acdd:	test   rax,rax
  43ace0:	je     43ad28 <strcmp@plt+0x37570>
  43ace2:	test   rdx,rdx
  43ace5:	mov    QWORD PTR [rax],rdx
  43ace8:	je     43acee <strcmp@plt+0x37536>
  43acea:	mov    QWORD PTR [rdx+0x8],rax
  43acee:	mov    rax,0x473d40
  43acf5:	mov    QWORD PTR [rdi+0x8],0x0
  43acfd:	mov    QWORD PTR [rdi],0x0
  43ad04:	sub    DWORD PTR [rax+0x18],0x1
  43ad08:	mov    rax,QWORD PTR [rdi+0x20]
  43ad0c:	mov    rbx,rdi
  43ad0f:	test   rax,rax
  43ad12:	je     43ad1a <strcmp@plt+0x37562>
  43ad14:	mov    rdi,QWORD PTR [rdi+0x28]
  43ad18:	call   rax
  43ad1a:	mov    rdi,rbx
  43ad1d:	pop    rbx
  43ad1e:	jmp    4037b0 <free@plt>
  43ad23:	nop    DWORD PTR [rax+rax*1+0x0]
  43ad28:	test   rdx,rdx
  43ad2b:	jne    43acea <strcmp@plt+0x37532>
  43ad2d:	mov    QWORD PTR [rdi+0x8],0x0
  43ad35:	mov    QWORD PTR [rdi],0x0
  43ad3c:	jmp    43ad08 <strcmp@plt+0x37550>
  43ad3e:	xchg   ax,ax
  43ad40:	repz ret 
  43ad42:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43ad4d:	nop    DWORD PTR [rax]
  43ad50:	push   r13
  43ad52:	push   r12
  43ad54:	push   rbp
  43ad55:	push   rbx
  43ad56:	sub    rsp,0xa8
  43ad5d:	mov    r13,0x473d40
  43ad64:	mov    rax,QWORD PTR fs:0x28
  43ad6d:	mov    QWORD PTR [rsp+0x98],rax
  43ad75:	xor    eax,eax
  43ad77:	cmp    QWORD PTR [r13+0x8],0x0
  43ad7c:	je     43ae37 <strcmp@plt+0x3767f>
  43ad82:	mov    rax,0x468e3c
  43ad89:	mov    eax,DWORD PTR [rax]
  43ad8b:	test   eax,eax
  43ad8d:	jle    43ada2 <strcmp@plt+0x375ea>
  43ad8f:	lea    rsi,[rip+0x1679b]        # 451531 <strcmp@plt+0x4dd79>
  43ad96:	mov    edi,0x5
  43ad9b:	xor    eax,eax
  43ad9d:	call   4306a0 <strcmp@plt+0x2cee8>
  43ada2:	xor    eax,eax
  43ada4:	mov    ecx,0x13
  43ada9:	mov    rdi,rsp
  43adac:	rep stos QWORD PTR es:[rdi],rax
  43adaf:	lea    rdi,[rsp+0x8]
  43adb4:	call   4034f0 <sigemptyset@plt>
  43adb9:	xor    edx,edx
  43adbb:	mov    rsi,rsp
  43adbe:	mov    edi,0xc
  43adc3:	call   403500 <sigaction@plt>
  43adc8:	cmp    eax,0xffffffff
  43adcb:	je     43ae58 <strcmp@plt+0x376a0>
  43add1:	mov    edi,DWORD PTR [rip+0x38f91]        # 473d68 <strcmp@plt+0x705b0>
  43add7:	call   403790 <close@plt>
  43addc:	mov    edi,DWORD PTR [rip+0x38f8a]        # 473d6c <strcmp@plt+0x705b4>
  43ade2:	call   403790 <close@plt>
  43ade7:	mov    rbp,QWORD PTR [r13+0x8]
  43adeb:	lea    r12,[rbp+0x10000]
  43adf2:	nop    WORD PTR [rax+rax*1+0x0]
  43adf8:	mov    rdi,QWORD PTR [rbp+0x8]
  43adfc:	cmp    rdi,rbp
  43adff:	je     43ae19 <strcmp@plt+0x37661>
  43ae01:	nop    DWORD PTR [rax+0x0]
  43ae08:	mov    rbx,QWORD PTR [rdi+0x8]
  43ae0c:	call   43acd0 <strcmp@plt+0x37518>
  43ae11:	cmp    rbx,rbp
  43ae14:	mov    rdi,rbx
  43ae17:	jne    43ae08 <strcmp@plt+0x37650>
  43ae19:	add    rbp,0x10
  43ae1d:	cmp    r12,rbp
  43ae20:	jne    43adf8 <strcmp@plt+0x37640>
  43ae22:	mov    rdi,QWORD PTR [r13+0x8]
  43ae26:	call   4037b0 <free@plt>
  43ae2b:	mov    rdi,QWORD PTR [rip+0x38f2e]        # 473d60 <strcmp@plt+0x705a8>
  43ae32:	call   4034d0 <timer_delete@plt>
  43ae37:	mov    rax,QWORD PTR [rsp+0x98]
  43ae3f:	xor    rax,QWORD PTR fs:0x28
  43ae48:	jne    43ae7f <strcmp@plt+0x376c7>
  43ae4a:	add    rsp,0xa8
  43ae51:	pop    rbx
  43ae52:	pop    rbp
  43ae53:	pop    r12
  43ae55:	pop    r13
  43ae57:	ret    
  43ae58:	call   403050 <__errno_location@plt>
  43ae5d:	mov    edi,DWORD PTR [rax]
  43ae5f:	call   403170 <strerror@plt>
  43ae64:	lea    rsi,[rip+0x1685d]        # 4516c8 <strcmp@plt+0x4df10>
  43ae6b:	mov    rdx,rax
  43ae6e:	mov    edi,0x2
  43ae73:	xor    eax,eax
  43ae75:	call   4306a0 <strcmp@plt+0x2cee8>
  43ae7a:	jmp    43add1 <strcmp@plt+0x37619>
  43ae7f:	call   403460 <__stack_chk_fail@plt>
  43ae84:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43ae8f:	nop
  43ae90:	push   rbx
  43ae91:	movsxd rdi,edi
  43ae94:	sub    rsp,0x20
  43ae98:	mov    rax,QWORD PTR fs:0x28
  43aea1:	mov    QWORD PTR [rsp+0x18],rax
  43aea6:	xor    eax,eax
  43aea8:	mov    QWORD PTR [rsp],rdi
  43aeac:	mov    QWORD PTR [rsp+0x8],0x0
  43aeb5:	mov    rbx,rsp
  43aeb8:	jmp    43aeca <strcmp@plt+0x37712>
  43aeba:	nop    WORD PTR [rax+rax*1+0x0]
  43aec0:	call   403050 <__errno_location@plt>
  43aec5:	cmp    DWORD PTR [rax],0x4
  43aec8:	jne    43aeda <strcmp@plt+0x37722>
  43aeca:	mov    rsi,rbx
  43aecd:	mov    rdi,rbx
  43aed0:	call   403140 <nanosleep@plt>
  43aed5:	cmp    eax,0xffffffff
  43aed8:	je     43aec0 <strcmp@plt+0x37708>
  43aeda:	mov    rax,QWORD PTR [rsp+0x18]
  43aedf:	xor    rax,QWORD PTR fs:0x28
  43aee8:	jne    43aef0 <strcmp@plt+0x37738>
  43aeea:	add    rsp,0x20
  43aeee:	pop    rbx
  43aeef:	ret    
  43aef0:	call   403460 <__stack_chk_fail@plt>
  43aef5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43aeff:	nop
  43af00:	push   r13
  43af02:	push   r12
  43af04:	mov    r13,rcx
  43af07:	push   rbp
  43af08:	push   rbx
  43af09:	mov    rbp,rsi
  43af0c:	mov    r12,rdx
  43af0f:	sub    rsp,0x18
  43af13:	mov    QWORD PTR [rsp+0x8],r8
  43af18:	call   43abd0 <strcmp@plt+0x37418>
  43af1d:	mov    r8,QWORD PTR [rsp+0x8]
  43af22:	mov    rcx,r13
  43af25:	mov    rdx,r12
  43af28:	mov    rsi,rbp
  43af2b:	mov    rdi,rax
  43af2e:	xor    r9d,r9d
  43af31:	mov    rbx,rax
  43af34:	call   43ac00 <strcmp@plt+0x37448>
  43af39:	add    rsp,0x18
  43af3d:	mov    rax,rbx
  43af40:	pop    rbx
  43af41:	pop    rbp
  43af42:	pop    r12
  43af44:	pop    r13
  43af46:	ret    
  43af47:	nop    WORD PTR [rax+rax*1+0x0]
  43af50:	push   r13
  43af52:	push   r12
  43af54:	mov    r13,rcx
  43af57:	push   rbp
  43af58:	push   rbx
  43af59:	mov    rbp,rsi
  43af5c:	mov    r12,rdx
  43af5f:	sub    rsp,0x18
  43af63:	mov    QWORD PTR [rsp+0x8],r8
  43af68:	call   43abd0 <strcmp@plt+0x37418>
  43af6d:	mov    rdi,rax
  43af70:	mov    rbx,rax
  43af73:	call   435490 <strcmp@plt+0x31cd8>
  43af78:	mov    r8,QWORD PTR [rsp+0x8]
  43af7d:	mov    r9,rax
  43af80:	mov    rcx,r13
  43af83:	mov    rdx,r12
  43af86:	mov    rsi,rbp
  43af89:	mov    rdi,rbx
  43af8c:	call   43ac00 <strcmp@plt+0x37448>
  43af91:	add    rsp,0x18
  43af95:	mov    rax,rbx
  43af98:	pop    rbx
  43af99:	pop    rbp
  43af9a:	pop    r12
  43af9c:	pop    r13
  43af9e:	ret    
  43af9f:	nop
  43afa0:	push   r12
  43afa2:	push   rbp
  43afa3:	mov    r12,rdx
  43afa6:	push   rbx
  43afa7:	mov    rbp,rsi
  43afaa:	mov    rbx,rdi
  43afad:	sub    rsp,0x10
  43afb1:	call   42e5d0 <strcmp@plt+0x2ae18>
  43afb6:	test   rax,rax
  43afb9:	je     43afd0 <strcmp@plt+0x37818>
  43afbb:	add    rsp,0x10
  43afbf:	mov    rdi,r12
  43afc2:	mov    rsi,rax
  43afc5:	pop    rbx
  43afc6:	pop    rbp
  43afc7:	pop    r12
  43afc9:	jmp    42d540 <strcmp@plt+0x29d88>
  43afce:	xchg   ax,ax
  43afd0:	call   42d4e0 <strcmp@plt+0x29d28>
  43afd5:	test   rax,rax
  43afd8:	je     43aff8 <strcmp@plt+0x37840>
  43afda:	mov    rdx,rax
  43afdd:	mov    rsi,rbp
  43afe0:	mov    rdi,rbx
  43afe3:	mov    QWORD PTR [rsp+0x8],rax
  43afe8:	call   42ddb0 <strcmp@plt+0x2a5f8>
  43afed:	mov    rax,QWORD PTR [rsp+0x8]
  43aff2:	jmp    43afbb <strcmp@plt+0x37803>
  43aff4:	nop    DWORD PTR [rax+0x0]
  43aff8:	add    rsp,0x10
  43affc:	xor    eax,eax
  43affe:	pop    rbx
  43afff:	pop    rbp
  43b000:	pop    r12
  43b002:	ret    
  43b003:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43b00e:	xchg   ax,ax
  43b010:	jmp    42e5d0 <strcmp@plt+0x2ae18>
  43b015:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43b020:	push   r14
  43b022:	push   r13
  43b024:	mov    r13d,edx
  43b027:	push   r12
  43b029:	push   rbp
  43b02a:	mov    rbp,rsi
  43b02d:	push   rbx
  43b02e:	mov    rbx,rdi
  43b031:	call   42d4e0 <strcmp@plt+0x29d28>
  43b036:	mov    rsi,rbp
  43b039:	mov    rdi,rbx
  43b03c:	mov    r14,rax
  43b03f:	call   42e5d0 <strcmp@plt+0x2ae18>
  43b044:	test   rax,rax
  43b047:	je     43b090 <strcmp@plt+0x378d8>
  43b049:	mov    r12,rax
  43b04c:	mov    rax,QWORD PTR [rax+0x8]
  43b050:	cmp    r12,rax
  43b053:	jne    43b068 <strcmp@plt+0x378b0>
  43b055:	jmp    43b090 <strcmp@plt+0x378d8>
  43b057:	nop    WORD PTR [rax+rax*1+0x0]
  43b060:	cmp    r12,rbp
  43b063:	mov    rax,rbp
  43b066:	je     43b090 <strcmp@plt+0x378d8>
  43b068:	mov    rbx,QWORD PTR [rax+0x10]
  43b06c:	mov    rbp,QWORD PTR [rax+0x8]
  43b070:	mov    rdi,rbx
  43b073:	call   43ac40 <strcmp@plt+0x37488>
  43b078:	cmp    eax,r13d
  43b07b:	jne    43b060 <strcmp@plt+0x378a8>
  43b07d:	mov    rsi,r14
  43b080:	mov    rdi,rbx
  43b083:	call   42d540 <strcmp@plt+0x29d88>
  43b088:	cmp    r12,rbp
  43b08b:	mov    rax,rbp
  43b08e:	jne    43b068 <strcmp@plt+0x378b0>
  43b090:	pop    rbx
  43b091:	mov    rax,r14
  43b094:	pop    rbp
  43b095:	pop    r12
  43b097:	pop    r13
  43b099:	pop    r14
  43b09b:	ret    
  43b09c:	nop    DWORD PTR [rax+0x0]
  43b0a0:	jmp    42e500 <strcmp@plt+0x2ad48>
  43b0a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43b0b0:	push   r14
  43b0b2:	mov    rax,rdi
  43b0b5:	push   r13
  43b0b7:	push   r12
  43b0b9:	push   rbp
  43b0ba:	mov    rdi,rsi
  43b0bd:	push   rbx
  43b0be:	mov    rsi,rax
  43b0c1:	mov    r14,rdx
  43b0c4:	call   43b0a0 <strcmp@plt+0x378e8>
  43b0c9:	test   rax,rax
  43b0cc:	je     43b130 <strcmp@plt+0x37978>
  43b0ce:	mov    rbx,QWORD PTR [rax+0x8]
  43b0d2:	mov    r13,rax
  43b0d5:	cmp    rax,rbx
  43b0d8:	je     43b118 <strcmp@plt+0x37960>
  43b0da:	nop    WORD PTR [rax+rax*1+0x0]
  43b0e0:	mov    r12,QWORD PTR [rbx+0x10]
  43b0e4:	mov    rdi,r12
  43b0e7:	call   43ac50 <strcmp@plt+0x37498>
  43b0ec:	test   rax,rax
  43b0ef:	mov    rbp,rax
  43b0f2:	je     43b107 <strcmp@plt+0x3794f>
  43b0f4:	mov    rdi,r14
  43b0f7:	mov    rsi,rax
  43b0fa:	call   4352c0 <strcmp@plt+0x31b08>
  43b0ff:	mov    rdi,rbp
  43b102:	call   4354d0 <strcmp@plt+0x31d18>
  43b107:	mov    rdi,r12
  43b10a:	call   43acd0 <strcmp@plt+0x37518>
  43b10f:	mov    rbx,QWORD PTR [rbx+0x8]
  43b113:	cmp    r13,rbx
  43b116:	jne    43b0e0 <strcmp@plt+0x37928>
  43b118:	mov    rdi,r13
  43b11b:	call   42dac0 <strcmp@plt+0x2a308>
  43b120:	pop    rbx
  43b121:	mov    eax,0x1
  43b126:	pop    rbp
  43b127:	pop    r12
  43b129:	pop    r13
  43b12b:	pop    r14
  43b12d:	ret    
  43b12e:	xchg   ax,ax
  43b130:	pop    rbx
  43b131:	xor    eax,eax
  43b133:	pop    rbp
  43b134:	pop    r12
  43b136:	pop    r13
  43b138:	pop    r14
  43b13a:	ret    
  43b13b:	nop    DWORD PTR [rax+rax*1+0x0]
  43b140:	push   r15
  43b142:	push   r14
  43b144:	mov    r14d,edx
  43b147:	push   r13
  43b149:	push   r12
  43b14b:	push   rbp
  43b14c:	push   rbx
  43b14d:	mov    rbp,rsi
  43b150:	mov    rbx,rdi
  43b153:	sub    rsp,0x8
  43b157:	call   42d4e0 <strcmp@plt+0x29d28>
  43b15c:	mov    rsi,rbp
  43b15f:	mov    rdi,rbx
  43b162:	mov    r15,rax
  43b165:	call   42e5d0 <strcmp@plt+0x2ae18>
  43b16a:	test   rax,rax
  43b16d:	je     43b1bb <strcmp@plt+0x37a03>
  43b16f:	mov    rbx,QWORD PTR [rax+0x8]
  43b173:	mov    r13,rax
  43b176:	cmp    rax,rbx
  43b179:	jne    43b188 <strcmp@plt+0x379d0>
  43b17b:	jmp    43b1bb <strcmp@plt+0x37a03>
  43b17d:	nop    DWORD PTR [rax]
  43b180:	cmp    r13,r12
  43b183:	mov    rbx,r12
  43b186:	je     43b1bb <strcmp@plt+0x37a03>
  43b188:	mov    rbp,QWORD PTR [rbx+0x10]
  43b18c:	mov    r12,QWORD PTR [rbx+0x8]
  43b190:	mov    rdi,rbp
  43b193:	call   43ac40 <strcmp@plt+0x37488>
  43b198:	cmp    eax,r14d
  43b19b:	jne    43b180 <strcmp@plt+0x379c8>
  43b19d:	mov    rsi,r15
  43b1a0:	mov    rdi,rbp
  43b1a3:	call   42d540 <strcmp@plt+0x29d88>
  43b1a8:	mov    rdi,rbx
  43b1ab:	mov    rsi,r13
  43b1ae:	mov    rbx,r12
  43b1b1:	call   42d950 <strcmp@plt+0x2a198>
  43b1b6:	cmp    r13,r12
  43b1b9:	jne    43b188 <strcmp@plt+0x379d0>
  43b1bb:	add    rsp,0x8
  43b1bf:	mov    rax,r15
  43b1c2:	pop    rbx
  43b1c3:	pop    rbp
  43b1c4:	pop    r12
  43b1c6:	pop    r13
  43b1c8:	pop    r14
  43b1ca:	pop    r15
  43b1cc:	ret    
  43b1cd:	nop    DWORD PTR [rax]
  43b1d0:	push   r14
  43b1d2:	mov    rax,rdi
  43b1d5:	push   r13
  43b1d7:	push   r12
  43b1d9:	push   rbp
  43b1da:	mov    rdi,rdx
  43b1dd:	push   rbx
  43b1de:	mov    edx,esi
  43b1e0:	mov    rsi,rax
  43b1e3:	mov    r14,rcx
  43b1e6:	call   43b140 <strcmp@plt+0x37988>
  43b1eb:	mov    rbx,QWORD PTR [rax+0x8]
  43b1ef:	mov    r13,rax
  43b1f2:	cmp    rax,rbx
  43b1f5:	je     43b238 <strcmp@plt+0x37a80>
  43b1f7:	nop    WORD PTR [rax+rax*1+0x0]
  43b200:	mov    r12,QWORD PTR [rbx+0x10]
  43b204:	mov    rdi,r12
  43b207:	call   43ac50 <strcmp@plt+0x37498>
  43b20c:	test   rax,rax
  43b20f:	mov    rbp,rax
  43b212:	je     43b227 <strcmp@plt+0x37a6f>
  43b214:	mov    rdi,r14
  43b217:	mov    rsi,rax
  43b21a:	call   4352c0 <strcmp@plt+0x31b08>
  43b21f:	mov    rdi,rbp
  43b222:	call   4354d0 <strcmp@plt+0x31d18>
  43b227:	mov    rdi,r12
  43b22a:	call   43acd0 <strcmp@plt+0x37518>
  43b22f:	mov    rbx,QWORD PTR [rbx+0x8]
  43b233:	cmp    r13,rbx
  43b236:	jne    43b200 <strcmp@plt+0x37a48>
  43b238:	mov    rdi,r13
  43b23b:	call   42dac0 <strcmp@plt+0x2a308>
  43b240:	pop    rbx
  43b241:	mov    eax,0x1
  43b246:	pop    rbp
  43b247:	pop    r12
  43b249:	pop    r13
  43b24b:	pop    r14
  43b24d:	ret    
  43b24e:	xchg   ax,ax
  43b250:	push   rbx
  43b251:	mov    rbx,rdx
  43b254:	call   42e5d0 <strcmp@plt+0x2ae18>
  43b259:	test   rax,rax
  43b25c:	je     43b270 <strcmp@plt+0x37ab8>
  43b25e:	mov    rsi,rax
  43b261:	mov    rdi,rbx
  43b264:	call   42d9a0 <strcmp@plt+0x2a1e8>
  43b269:	mov    eax,0x1
  43b26e:	pop    rbx
  43b26f:	ret    
  43b270:	mov    eax,0xfffffffa
  43b275:	pop    rbx
  43b276:	ret    
  43b277:	nop    WORD PTR [rax+rax*1+0x0]
  43b280:	push   r12
  43b282:	mov    rax,rdi
  43b285:	push   rbp
  43b286:	push   rbx
  43b287:	mov    rdi,rdx
  43b28a:	mov    rbx,rsi
  43b28d:	mov    rdx,rsi
  43b290:	mov    rsi,rax
  43b293:	mov    r12,rcx
  43b296:	call   43b250 <strcmp@plt+0x37a98>
  43b29b:	mov    rdi,rbx
  43b29e:	call   43ac50 <strcmp@plt+0x37498>
  43b2a3:	test   rax,rax
  43b2a6:	je     43b2be <strcmp@plt+0x37b06>
  43b2a8:	mov    rbp,rax
  43b2ab:	mov    rdi,r12
  43b2ae:	mov    rsi,rax
  43b2b1:	call   4352c0 <strcmp@plt+0x31b08>
  43b2b6:	mov    rdi,rbp
  43b2b9:	call   4354d0 <strcmp@plt+0x31d18>
  43b2be:	mov    rdi,rbx
  43b2c1:	call   43acd0 <strcmp@plt+0x37518>
  43b2c6:	pop    rbx
  43b2c7:	mov    eax,0x1
  43b2cc:	pop    rbp
  43b2cd:	pop    r12
  43b2cf:	ret    
  43b2d0:	cmp    BYTE PTR [rdi],0x0
  43b2d3:	je     43b2fb <strcmp@plt+0x37b43>
  43b2d5:	mov    ecx,edx
  43b2d7:	xor    eax,eax
  43b2d9:	add    ecx,ecx
  43b2db:	jns    43b2f4 <strcmp@plt+0x37b3c>
  43b2dd:	jmp    43b3b0 <strcmp@plt+0x37bf8>
  43b2e2:	nop    WORD PTR [rax+rax*1+0x0]
  43b2e8:	add    rax,0x1
  43b2ec:	cmp    ecx,eax
  43b2ee:	jl     43b3b0 <strcmp@plt+0x37bf8>
  43b2f4:	cmp    BYTE PTR [rdi+rax*1+0x1],0x0
  43b2f9:	jne    43b2e8 <strcmp@plt+0x37b30>
  43b2fb:	test   edx,edx
  43b2fd:	jle    43b3b3 <strcmp@plt+0x37bfb>
  43b303:	push   r12
  43b305:	push   rbp
  43b306:	mov    r12,rsi
  43b309:	push   rbx
  43b30a:	mov    ebp,edx
  43b30c:	mov    rbx,rdi
  43b30f:	call   403070 <__ctype_toupper_loc@plt>
  43b314:	lea    rdx,[rip+0x16425]        # 451740 <strcmp@plt+0x4df88>
  43b31b:	xor    ecx,ecx
  43b31d:	nop    DWORD PTR [rax]
  43b320:	movsx  r8,BYTE PTR [rbx+rcx*2]
  43b325:	mov    rsi,QWORD PTR [rax]
  43b328:	movsx  rdi,BYTE PTR [rbx+rcx*2+0x1]
  43b32e:	mov    r8d,DWORD PTR [rsi+r8*4]
  43b332:	sub    r8d,0x30
  43b336:	cmp    r8b,0x16
  43b33a:	jbe    43b368 <strcmp@plt+0x37bb0>
  43b33c:	mov    rax,0x468e3c
  43b343:	cmp    DWORD PTR [rax],0x1
  43b346:	jle    43b35b <strcmp@plt+0x37ba3>
  43b348:	lea    rsi,[rip+0x163b1]        # 451700 <strcmp@plt+0x4df48>
  43b34f:	mov    edi,0x6
  43b354:	xor    eax,eax
  43b356:	call   4306a0 <strcmp@plt+0x2cee8>
  43b35b:	pop    rbx
  43b35c:	xor    eax,eax
  43b35e:	pop    rbp
  43b35f:	pop    r12
  43b361:	ret    
  43b362:	nop    WORD PTR [rax+rax*1+0x0]
  43b368:	mov    edi,DWORD PTR [rsi+rdi*4]
  43b36b:	movzx  r8d,r8b
  43b36f:	mov    r8d,DWORD PTR [rdx+r8*4]
  43b373:	sub    edi,0x30
  43b376:	cmp    dil,0x16
  43b37a:	ja     43b33c <strcmp@plt+0x37b84>
  43b37c:	movzx  edi,dil
  43b380:	cmp    r8d,0xffffffff
  43b384:	mov    esi,DWORD PTR [rdx+rdi*4]
  43b387:	je     43b33c <strcmp@plt+0x37b84>
  43b389:	cmp    esi,0xffffffff
  43b38c:	je     43b33c <strcmp@plt+0x37b84>
  43b38e:	shl    r8d,0x4
  43b392:	add    r8d,esi
  43b395:	mov    BYTE PTR [r12+rcx*1],r8b
  43b399:	add    rcx,0x1
  43b39d:	cmp    ebp,ecx
  43b39f:	jg     43b320 <strcmp@plt+0x37b68>
  43b3a5:	pop    rbx
  43b3a6:	mov    eax,0x1
  43b3ab:	pop    rbp
  43b3ac:	pop    r12
  43b3ae:	ret    
  43b3af:	nop
  43b3b0:	xor    eax,eax
  43b3b2:	ret    
  43b3b3:	mov    eax,0x1
  43b3b8:	ret    
  43b3b9:	nop    DWORD PTR [rax+0x0]
  43b3c0:	push   rbp
  43b3c1:	push   rbx
  43b3c2:	lea    rbp,[rdi+0x10]
  43b3c6:	mov    rbx,rdi
  43b3c9:	sub    rsp,0x8
  43b3cd:	mov    QWORD PTR [rip+0x389a8],0x0        # 473d80 <strcmp@plt+0x705c8>
  43b3d8:	mov    QWORD PTR [rip+0x389a5],0x0        # 473d88 <strcmp@plt+0x705d0>
  43b3e3:	mov    QWORD PTR [rip+0x389a2],0x0        # 473d90 <strcmp@plt+0x705d8>
  43b3ee:	mov    QWORD PTR [rip+0x3899f],0x0        # 473d98 <strcmp@plt+0x705e0>
  43b3f9:	mov    BYTE PTR [rip+0x389a0],0x0        # 473da0 <strcmp@plt+0x705e8>
  43b400:	lea    rdi,[rip+0x38979]        # 473d80 <strcmp@plt+0x705c8>
  43b407:	mov    edx,DWORD PTR [rdi]
  43b409:	add    rdi,0x4
  43b40d:	lea    eax,[rdx-0x1010101]
  43b413:	andn   eax,edx,eax
  43b418:	and    eax,0x80808080
  43b41d:	je     43b407 <strcmp@plt+0x37c4f>
  43b41f:	mov    edx,eax
  43b421:	movzx  r8d,BYTE PTR [rbx]
  43b425:	mov    esi,0x1
  43b42a:	shr    edx,0x10
  43b42d:	test   eax,0x8080
  43b432:	cmove  eax,edx
  43b435:	lea    rdx,[rdi+0x2]
  43b439:	mov    ecx,eax
  43b43b:	cmove  rdi,rdx
  43b43f:	add    cl,al
  43b441:	lea    rcx,[rip+0x162f0]        # 451738 <strcmp@plt+0x4df80>
  43b448:	sbb    rdi,0x3
  43b44c:	mov    rdx,0xffffffffffffffff
  43b453:	xor    eax,eax
  43b455:	add    rbx,0x1
  43b459:	call   403290 <__sprintf_chk@plt>
  43b45e:	cmp    rbx,rbp
  43b461:	jne    43b400 <strcmp@plt+0x37c48>
  43b463:	add    rsp,0x8
  43b467:	lea    rax,[rip+0x38912]        # 473d80 <strcmp@plt+0x705c8>
  43b46e:	pop    rbx
  43b46f:	pop    rbp
  43b470:	ret    
  43b471:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43b47c:	nop    DWORD PTR [rax+0x0]
  43b480:	push   rbx
  43b481:	mov    ebx,esi
  43b483:	call   425050 <strcmp@plt+0x21898>
  43b488:	mov    rdi,rax
  43b48b:	call   4251c0 <strcmp@plt+0x21a08>
  43b490:	mov    esi,ebx
  43b492:	and    esi,0x1
  43b495:	cmp    ax,0x2
  43b499:	je     43b4ac <strcmp@plt+0x37cf4>
  43b49b:	shr    ebx,1
  43b49d:	mov    esi,0x0
  43b4a2:	and    ebx,0x1
  43b4a5:	cmp    ax,0xa
  43b4a9:	cmove  esi,ebx
  43b4ac:	mov    eax,esi
  43b4ae:	pop    rbx
  43b4af:	ret    
  43b4b0:	push   r13
  43b4b2:	push   r12
  43b4b4:	mov    r13d,esi
  43b4b7:	push   rbp
  43b4b8:	push   rbx
  43b4b9:	mov    r12,rdi
  43b4bc:	sub    rsp,0x8
  43b4c0:	mov    rbx,QWORD PTR [rdi+0x8]
  43b4c4:	cmp    rdi,rbx
  43b4c7:	jne    43b4d8 <strcmp@plt+0x37d20>
  43b4c9:	jmp    43b4ff <strcmp@plt+0x37d47>
  43b4cb:	nop    DWORD PTR [rax+rax*1+0x0]
  43b4d0:	cmp    r12,rbp
  43b4d3:	mov    rbx,rbp
  43b4d6:	je     43b4ff <strcmp@plt+0x37d47>
  43b4d8:	mov    rdi,QWORD PTR [rbx+0x10]
  43b4dc:	mov    esi,r13d
  43b4df:	mov    rbp,QWORD PTR [rbx+0x8]
  43b4e3:	call   43b480 <strcmp@plt+0x37cc8>
  43b4e8:	test   al,al
  43b4ea:	jne    43b4d0 <strcmp@plt+0x37d18>
  43b4ec:	mov    rdi,rbx
  43b4ef:	mov    rsi,r12
  43b4f2:	mov    rbx,rbp
  43b4f5:	call   42d950 <strcmp@plt+0x2a198>
  43b4fa:	cmp    r12,rbp
  43b4fd:	jne    43b4d8 <strcmp@plt+0x37d20>
  43b4ff:	add    rsp,0x8
  43b503:	pop    rbx
  43b504:	pop    rbp
  43b505:	pop    r12
  43b507:	pop    r13
  43b509:	ret    
  43b50a:	nop    WORD PTR [rax+rax*1+0x0]
  43b510:	movzx  eax,BYTE PTR [rdi]
  43b513:	test   al,al
  43b515:	je     43b541 <strcmp@plt+0x37d89>
  43b517:	add    rdi,0x1
  43b51b:	xor    edx,edx
  43b51d:	nop    DWORD PTR [rax]
  43b520:	cmp    al,0x20
  43b522:	je     43b52d <strcmp@plt+0x37d75>
  43b524:	movsxd rcx,edx
  43b527:	add    edx,0x1
  43b52a:	mov    BYTE PTR [rsi+rcx*1],al
  43b52d:	add    rdi,0x1
  43b531:	movzx  eax,BYTE PTR [rdi-0x1]
  43b535:	test   al,al
  43b537:	jne    43b520 <strcmp@plt+0x37d68>
  43b539:	movsxd rdx,edx
  43b53c:	mov    BYTE PTR [rsi+rdx*1],0x0
  43b540:	ret    
  43b541:	xor    edx,edx
  43b543:	jmp    43b53c <strcmp@plt+0x37d84>
  43b545:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43b550:	movzx  eax,BYTE PTR [rdi]
  43b553:	test   al,al
  43b555:	je     43b5b0 <strcmp@plt+0x37df8>
  43b557:	add    rdi,0x1
  43b55b:	xor    ecx,ecx
  43b55d:	xor    edx,edx
  43b55f:	jmp    43b57f <strcmp@plt+0x37dc7>
  43b561:	nop    DWORD PTR [rax+0x0]
  43b568:	movsxd rcx,edx
  43b56b:	add    edx,0x1
  43b56e:	mov    BYTE PTR [rsi+rcx*1],al
  43b571:	xor    ecx,ecx
  43b573:	add    rdi,0x1
  43b577:	movzx  eax,BYTE PTR [rdi-0x1]
  43b57b:	test   al,al
  43b57d:	je     43b5a8 <strcmp@plt+0x37df0>
  43b57f:	cmp    al,0x20
  43b581:	jne    43b568 <strcmp@plt+0x37db0>
  43b583:	test   cl,cl
  43b585:	jne    43b573 <strcmp@plt+0x37dbb>
  43b587:	movsxd rax,edx
  43b58a:	add    rdi,0x1
  43b58e:	add    edx,0x1
  43b591:	mov    BYTE PTR [rsi+rax*1],0x20
  43b595:	movzx  eax,BYTE PTR [rdi-0x1]
  43b599:	mov    ecx,0x1
  43b59e:	test   al,al
  43b5a0:	jne    43b57f <strcmp@plt+0x37dc7>
  43b5a2:	nop    WORD PTR [rax+rax*1+0x0]
  43b5a8:	movsxd rdx,edx
  43b5ab:	mov    BYTE PTR [rsi+rdx*1],0x0
  43b5af:	ret    
  43b5b0:	xor    edx,edx
  43b5b2:	jmp    43b5ab <strcmp@plt+0x37df3>
  43b5b4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43b5bf:	nop
  43b5c0:	push   r13
  43b5c2:	push   r12
  43b5c4:	push   rbp
  43b5c5:	push   rbx
  43b5c6:	mov    rbp,rdi
  43b5c9:	sub    rsp,0x8
  43b5cd:	call   4031d0 <strlen@plt>
  43b5d2:	lea    edi,[rax+0x1]
  43b5d5:	mov    r13,rax
  43b5d8:	mov    r12d,eax
  43b5db:	movsxd rdi,edi
  43b5de:	call   4347a0 <strcmp@plt+0x30fe8>
  43b5e3:	test   r13d,r13d
  43b5e6:	mov    rbx,rax
  43b5e9:	jle    43b626 <strcmp@plt+0x37e6e>
  43b5eb:	call   403090 <__ctype_tolower_loc@plt>
  43b5f0:	xor    edx,edx
  43b5f2:	nop    WORD PTR [rax+rax*1+0x0]
  43b5f8:	movsx  rsi,BYTE PTR [rbp+rdx*1+0x0]
  43b5fe:	mov    rcx,QWORD PTR [rax]
  43b601:	mov    ecx,DWORD PTR [rcx+rsi*4]
  43b604:	mov    BYTE PTR [rbx+rdx*1],cl
  43b607:	add    rdx,0x1
  43b60b:	cmp    r12d,edx
  43b60e:	jg     43b5f8 <strcmp@plt+0x37e40>
  43b610:	movsxd r13,r13d
  43b613:	mov    BYTE PTR [rbx+r13*1],0x0
  43b618:	add    rsp,0x8
  43b61c:	mov    rax,rbx
  43b61f:	pop    rbx
  43b620:	pop    rbp
  43b621:	pop    r12
  43b623:	pop    r13
  43b625:	ret    
  43b626:	xor    r13d,r13d
  43b629:	jmp    43b613 <strcmp@plt+0x37e5b>
  43b62b:	nop    DWORD PTR [rax+rax*1+0x0]
  43b630:	push   r12
  43b632:	push   rbp
  43b633:	mov    ebp,0x1
  43b638:	push   rbx
  43b639:	sub    rsp,0x20
  43b63d:	lea    rbx,[rsp+0xe]
  43b642:	mov    rax,QWORD PTR fs:0x28
  43b64b:	mov    QWORD PTR [rsp+0x18],rax
  43b650:	xor    eax,eax
  43b652:	call   43b5c0 <strcmp@plt+0x37e08>
  43b657:	mov    rsi,rbx
  43b65a:	mov    rdi,rax
  43b65d:	mov    r12,rax
  43b660:	call   43b510 <strcmp@plt+0x37d58>
  43b665:	lea    rdi,[rip+0x18e6d]        # 4544d9 <strcmp@plt+0x50d21>
  43b66c:	mov    ecx,0x3
  43b671:	mov    rsi,rbx
  43b674:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43b676:	seta   dl
  43b679:	setb   al
  43b67c:	cmp    dl,al
  43b67e:	je     43b6c7 <strcmp@plt+0x37f0f>
  43b680:	lea    rdi,[rip+0xc023]        # 4476aa <strcmp@plt+0x43ef2>
  43b687:	mov    ecx,0x5
  43b68c:	mov    rsi,rbx
  43b68f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43b691:	je     43b6c7 <strcmp@plt+0x37f0f>
  43b693:	lea    rdi,[rip+0xf536]        # 44abd0 <strcmp@plt+0x47418>
  43b69a:	mov    ecx,0x4
  43b69f:	mov    rsi,rbx
  43b6a2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43b6a4:	seta   dl
  43b6a7:	setb   al
  43b6aa:	xor    ebp,ebp
  43b6ac:	cmp    dl,al
  43b6ae:	je     43b6c7 <strcmp@plt+0x37f0f>
  43b6b0:	lea    rdi,[rip+0xbff8]        # 4476af <strcmp@plt+0x43ef7>
  43b6b7:	mov    ecx,0x6
  43b6bc:	mov    rsi,rbx
  43b6bf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  43b6c1:	setne  bpl
  43b6c5:	neg    ebp
  43b6c7:	mov    rdi,r12
  43b6ca:	call   4037b0 <free@plt>
  43b6cf:	mov    rbx,QWORD PTR [rsp+0x18]
  43b6d4:	xor    rbx,QWORD PTR fs:0x28
  43b6dd:	mov    eax,ebp
  43b6df:	jne    43b6ea <strcmp@plt+0x37f32>
  43b6e1:	add    rsp,0x20
  43b6e5:	pop    rbx
  43b6e6:	pop    rbp
  43b6e7:	pop    r12
  43b6e9:	ret    
  43b6ea:	call   403460 <__stack_chk_fail@plt>
  43b6ef:	nop
  43b6f0:	push   rbp
  43b6f1:	push   rbx
  43b6f2:	sub    rsp,0x8
  43b6f6:	call   424b80 <strcmp@plt+0x213c8>
  43b6fb:	mov    rdi,rax
  43b6fe:	mov    rbp,rax
  43b701:	call   425110 <strcmp@plt+0x21958>
  43b706:	test   rax,rax
  43b709:	je     43b760 <strcmp@plt+0x37fa8>
  43b70b:	mov    rdi,rax
  43b70e:	mov    rbx,rax
  43b711:	call   4251c0 <strcmp@plt+0x21a08>
  43b716:	cmp    ax,0x2
  43b71a:	je     43b740 <strcmp@plt+0x37f88>
  43b71c:	cmp    ax,0xa
  43b720:	jne    43b731 <strcmp@plt+0x37f79>
  43b722:	lea    rdi,[rip+0xc4f0]        # 447c19 <strcmp@plt+0x44461>
  43b729:	mov    rsi,rbx
  43b72c:	call   4256d0 <strcmp@plt+0x21f18>
  43b731:	add    rsp,0x8
  43b735:	mov    rax,rbp
  43b738:	pop    rbx
  43b739:	pop    rbp
  43b73a:	ret    
  43b73b:	nop    DWORD PTR [rax+rax*1+0x0]
  43b740:	lea    rdi,[rip+0xbfcc]        # 447713 <strcmp@plt+0x43f5b>
  43b747:	mov    rsi,rbx
  43b74a:	call   4256d0 <strcmp@plt+0x21f18>
  43b74f:	add    rsp,0x8
  43b753:	mov    rax,rbp
  43b756:	pop    rbx
  43b757:	pop    rbp
  43b758:	ret    
  43b759:	nop    DWORD PTR [rax+0x0]
  43b760:	xor    ebp,ebp
  43b762:	jmp    43b731 <strcmp@plt+0x37f79>
  43b764:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43b76f:	nop
  43b770:	cmp    DWORD PTR [rdi+0x18],0x2
  43b774:	je     43b780 <strcmp@plt+0x37fc8>
  43b776:	xor    eax,eax
  43b778:	ret    
  43b779:	nop    DWORD PTR [rax+0x0]
  43b780:	sub    rsp,0x8
  43b784:	call   425170 <strcmp@plt+0x219b8>
  43b789:	test   ax,ax
  43b78c:	sete   al
  43b78f:	add    rsp,0x8
  43b793:	ret    
  43b794:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b79e:	xchg   ax,ax
  43b7a0:	mov    rdx,0x468dc0
  43b7a7:	mov    rax,0x473da8
  43b7ae:	mov    QWORD PTR [rax],rdx
  43b7b1:	ret    
  43b7b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b7bc:	nop    DWORD PTR [rax+0x0]
  43b7c0:	push   r15
  43b7c2:	push   r14
  43b7c4:	push   r13
  43b7c6:	push   r12
  43b7c8:	mov    r13d,edi
  43b7cb:	push   rbp
  43b7cc:	push   rbx
  43b7cd:	mov    edi,esi
  43b7cf:	mov    r12d,esi
  43b7d2:	mov    rbp,rdx
  43b7d5:	sub    rsp,0x18
  43b7d9:	call   43e6f0 <strcmp@plt+0x3af38>
  43b7de:	test   rax,rax
  43b7e1:	je     43b948 <strcmp@plt+0x38190>
  43b7e7:	mov    rdi,rbp
  43b7ea:	mov    rbx,rax
  43b7ed:	call   4251c0 <strcmp@plt+0x21a08>
  43b7f2:	movzx  r14d,ax
  43b7f6:	mov    rdi,rbx
  43b7f9:	mov    esi,r14d
  43b7fc:	call   43ebb0 <strcmp@plt+0x3b3f8>
  43b801:	test   rax,rax
  43b804:	mov    r12,rax
  43b807:	je     43ba50 <strcmp@plt+0x38298>
  43b80d:	test   r13b,r13b
  43b810:	jne    43b980 <strcmp@plt+0x381c8>
  43b816:	mov    r13,0x468e3c
  43b81d:	cmp    DWORD PTR [r13+0x0],0x1
  43b822:	jle    43b848 <strcmp@plt+0x38090>
  43b824:	mov    r15,QWORD PTR [rbx]
  43b827:	mov    rdi,rbp
  43b82a:	call   424890 <strcmp@plt+0x210d8>
  43b82f:	lea    rsi,[rip+0x160a2]        # 4518d8 <strcmp@plt+0x4e120>
  43b836:	mov    rdx,rax
  43b839:	mov    edi,0x6
  43b83e:	mov    rcx,r15
  43b841:	xor    eax,eax
  43b843:	call   4306a0 <strcmp@plt+0x2cee8>
  43b848:	cmp    r14d,0xa
  43b84c:	je     43ba00 <strcmp@plt+0x38248>
  43b852:	xor    edi,edi
  43b854:	call   424670 <strcmp@plt+0x20eb8>
  43b859:	mov    BYTE PTR [rsp+0xf],0x1
  43b85e:	mov    rbp,rax
  43b861:	cmp    DWORD PTR [r13+0x0],0x1
  43b866:	jle    43b897 <strcmp@plt+0x380df>
  43b868:	mov    rdi,rbp
  43b86b:	call   424890 <strcmp@plt+0x210d8>
  43b870:	mov    rdi,r12
  43b873:	mov    r14,rax
  43b876:	call   424890 <strcmp@plt+0x210d8>
  43b87b:	mov    rdx,QWORD PTR [rbx]
  43b87e:	lea    rsi,[rip+0x1625b]        # 451ae0 <strcmp@plt+0x4e328>
  43b885:	mov    rcx,rax
  43b888:	mov    r8,r14
  43b88b:	mov    edi,0x6
  43b890:	xor    eax,eax
  43b892:	call   4306a0 <strcmp@plt+0x2cee8>
  43b897:	mov    rdi,r12
  43b89a:	call   424b80 <strcmp@plt+0x213c8>
  43b89f:	mov    rdi,rbp
  43b8a2:	mov    r14,rax
  43b8a5:	call   424b80 <strcmp@plt+0x213c8>
  43b8aa:	mov    rsi,rbp
  43b8ad:	mov    rdi,r12
  43b8b0:	mov    r15,rax
  43b8b3:	call   424b00 <strcmp@plt+0x21348>
  43b8b8:	cmp    DWORD PTR [r13+0x0],0x2
  43b8bd:	jle    43b8d2 <strcmp@plt+0x3811a>
  43b8bf:	lea    rsi,[rip+0x1627a]        # 451b40 <strcmp@plt+0x4e388>
  43b8c6:	mov    edi,0x7
  43b8cb:	xor    eax,eax
  43b8cd:	call   4306a0 <strcmp@plt+0x2cee8>
  43b8d2:	mov    rax,0x46c558
  43b8d9:	mov    rdx,r15
  43b8dc:	mov    rsi,r14
  43b8df:	mov    rdi,rbx
  43b8e2:	mov    rax,QWORD PTR [rax]
  43b8e5:	call   QWORD PTR [rax+0x50]
  43b8e8:	cmp    DWORD PTR [r13+0x0],0x2
  43b8ed:	jle    43b902 <strcmp@plt+0x3814a>
  43b8ef:	lea    rsi,[rip+0x1627a]        # 451b70 <strcmp@plt+0x4e3b8>
  43b8f6:	mov    edi,0x7
  43b8fb:	xor    eax,eax
  43b8fd:	call   4306a0 <strcmp@plt+0x2cee8>
  43b902:	mov    rax,0x474830
  43b909:	mov    rcx,r15
  43b90c:	mov    rdx,r14
  43b90f:	mov    rsi,rbx
  43b912:	mov    rdi,QWORD PTR [rax]
  43b915:	call   407f60 <strcmp@plt+0x47a8>
  43b91a:	mov    rdi,r14
  43b91d:	call   424750 <strcmp@plt+0x20f98>
  43b922:	mov    rdi,r15
  43b925:	call   424750 <strcmp@plt+0x20f98>
  43b92a:	cmp    BYTE PTR [rsp+0xf],0x0
  43b92f:	jne    43b9e0 <strcmp@plt+0x38228>
  43b935:	add    rsp,0x18
  43b939:	pop    rbx
  43b93a:	pop    rbp
  43b93b:	pop    r12
  43b93d:	pop    r13
  43b93f:	pop    r14
  43b941:	pop    r15
  43b943:	ret    
  43b944:	nop    DWORD PTR [rax+0x0]
  43b948:	mov    rax,0x468e3c
  43b94f:	cmp    DWORD PTR [rax],0x1
  43b952:	jle    43b935 <strcmp@plt+0x3817d>
  43b954:	add    rsp,0x18
  43b958:	mov    edx,r12d
  43b95b:	lea    rsi,[rip+0x15f0e]        # 451870 <strcmp@plt+0x4e0b8>
  43b962:	pop    rbx
  43b963:	pop    rbp
  43b964:	pop    r12
  43b966:	pop    r13
  43b968:	pop    r14
  43b96a:	pop    r15
  43b96c:	mov    edi,0x6
  43b971:	xor    eax,eax
  43b973:	jmp    4306a0 <strcmp@plt+0x2cee8>
  43b978:	nop    DWORD PTR [rax+rax*1+0x0]
  43b980:	mov    rdi,rbp
  43b983:	call   4263c0 <strcmp@plt+0x22c08>
  43b988:	cmp    eax,0x1
  43b98b:	je     43bac0 <strcmp@plt+0x38308>
  43b991:	mov    rax,0x4747c0
  43b998:	mov    eax,DWORD PTR [rax]
  43b99a:	cmp    r14d,eax
  43b99d:	je     43baa0 <strcmp@plt+0x382e8>
  43b9a3:	test   eax,eax
  43b9a5:	je     43baa0 <strcmp@plt+0x382e8>
  43b9ab:	mov    rax,0x468e3c
  43b9b2:	cmp    DWORD PTR [rax],0x1
  43b9b5:	jle    43b935 <strcmp@plt+0x3817d>
  43b9bb:	lea    rax,[rip+0xbf63]        # 447925 <strcmp@plt+0x4416d>
  43b9c2:	lea    rdx,[rip+0xbf57]        # 447920 <strcmp@plt+0x44168>
  43b9c9:	cmp    r14d,0x2
  43b9cd:	mov    rcx,QWORD PTR [rbx]
  43b9d0:	lea    rsi,[rip+0x15e39]        # 451810 <strcmp@plt+0x4e058>
  43b9d7:	cmovne rdx,rax
  43b9db:	jmp    43ba80 <strcmp@plt+0x382c8>
  43b9e0:	add    rsp,0x18
  43b9e4:	mov    rdi,rbp
  43b9e7:	pop    rbx
  43b9e8:	pop    rbp
  43b9e9:	pop    r12
  43b9eb:	pop    r13
  43b9ed:	pop    r14
  43b9ef:	pop    r15
  43b9f1:	jmp    424750 <strcmp@plt+0x20f98>
  43b9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ba00:	mov    rsi,rbp
  43ba03:	mov    rdi,r12
  43ba06:	call   424df0 <strcmp@plt+0x21638>
  43ba0b:	test   eax,eax
  43ba0d:	je     43baf0 <strcmp@plt+0x38338>
  43ba13:	cmp    DWORD PTR [r13+0x0],0x1
  43ba18:	jle    43b935 <strcmp@plt+0x3817d>
  43ba1e:	mov    rdi,rbp
  43ba21:	call   424890 <strcmp@plt+0x210d8>
  43ba26:	lea    rsi,[rip+0x15f2b]        # 451958 <strcmp@plt+0x4e1a0>
  43ba2d:	mov    rdx,rax
  43ba30:	add    rsp,0x18
  43ba34:	mov    edi,0x6
  43ba39:	xor    eax,eax
  43ba3b:	pop    rbx
  43ba3c:	pop    rbp
  43ba3d:	pop    r12
  43ba3f:	pop    r13
  43ba41:	pop    r14
  43ba43:	pop    r15
  43ba45:	jmp    4306a0 <strcmp@plt+0x2cee8>
  43ba4a:	nop    WORD PTR [rax+rax*1+0x0]
  43ba50:	mov    rax,0x468e3c
  43ba57:	cmp    DWORD PTR [rax],0x1
  43ba5a:	jle    43b935 <strcmp@plt+0x3817d>
  43ba60:	lea    rax,[rip+0xbebe]        # 447925 <strcmp@plt+0x4416d>
  43ba67:	lea    rdx,[rip+0xbeb2]        # 447920 <strcmp@plt+0x44168>
  43ba6e:	mov    rcx,QWORD PTR [rbx]
  43ba71:	cmp    r14d,0x2
  43ba75:	lea    rsi,[rip+0x15d3c]        # 4517b8 <strcmp@plt+0x4e000>
  43ba7c:	cmovne rdx,rax
  43ba80:	add    rsp,0x18
  43ba84:	mov    edi,0x6
  43ba89:	xor    eax,eax
  43ba8b:	pop    rbx
  43ba8c:	pop    rbp
  43ba8d:	pop    r12
  43ba8f:	pop    r13
  43ba91:	pop    r14
  43ba93:	pop    r15
  43ba95:	jmp    4306a0 <strcmp@plt+0x2cee8>
  43ba9a:	nop    WORD PTR [rax+rax*1+0x0]
  43baa0:	cmp    r14d,0xa
  43baa4:	je     43bb60 <strcmp@plt+0x383a8>
  43baaa:	mov    BYTE PTR [rsp+0xf],0x0
  43baaf:	mov    r13,0x468e3c
  43bab6:	jmp    43b861 <strcmp@plt+0x380a9>
  43babb:	nop    DWORD PTR [rax+rax*1+0x0]
  43bac0:	mov    rax,0x468e3c
  43bac7:	cmp    DWORD PTR [rax],0x1
  43baca:	jle    43b935 <strcmp@plt+0x3817d>
  43bad0:	mov    rdi,rbp
  43bad3:	call   424890 <strcmp@plt+0x210d8>
  43bad8:	lea    rsi,[rip+0x15ec9]        # 4519a8 <strcmp@plt+0x4e1f0>
  43badf:	mov    rdx,rax
  43bae2:	jmp    43ba30 <strcmp@plt+0x38278>
  43bae7:	nop    WORD PTR [rax+rax*1+0x0]
  43baf0:	mov    rax,0x473da8
  43baf7:	mov    rdx,0x473dc0
  43bafe:	mov    rdi,QWORD PTR [rbx]
  43bb01:	mov    rax,QWORD PTR [rax]
  43bb04:	mov    esi,DWORD PTR [rdx]
  43bb06:	call   QWORD PTR [rax+0x30]
  43bb09:	test   rax,rax
  43bb0c:	mov    rbp,rax
  43bb0f:	je     43b852 <strcmp@plt+0x3809a>
  43bb15:	cmp    DWORD PTR [r13+0x0],0x1
  43bb1a:	jg     43bb30 <strcmp@plt+0x38378>
  43bb1c:	mov    BYTE PTR [rsp+0xf],0x1
  43bb21:	jmp    43b897 <strcmp@plt+0x380df>
  43bb26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43bb30:	mov    rdi,rax
  43bb33:	call   424890 <strcmp@plt+0x210d8>
  43bb38:	lea    rsi,[rip+0x15dd9]        # 451918 <strcmp@plt+0x4e160>
  43bb3f:	mov    rdx,rax
  43bb42:	mov    edi,0x6
  43bb47:	xor    eax,eax
  43bb49:	call   4306a0 <strcmp@plt+0x2cee8>
  43bb4e:	mov    BYTE PTR [rsp+0xf],0x1
  43bb53:	jmp    43b861 <strcmp@plt+0x380a9>
  43bb58:	nop    DWORD PTR [rax+rax*1+0x0]
  43bb60:	mov    rax,0x473da8
  43bb67:	mov    esi,0xa
  43bb6c:	mov    rdi,QWORD PTR [rbx]
  43bb6f:	mov    rax,QWORD PTR [rax]
  43bb72:	call   QWORD PTR [rax+0x18]
  43bb75:	mov    rdi,QWORD PTR [rbx+0x18]
  43bb79:	mov    rdx,0x424df0
  43bb80:	mov    rsi,rax
  43bb83:	mov    r13,rax
  43bb86:	call   42d7a0 <strcmp@plt+0x29fe8>
  43bb8b:	test   al,al
  43bb8d:	je     43bbd6 <strcmp@plt+0x3841e>
  43bb8f:	mov    rax,0x468e3c
  43bb96:	cmp    DWORD PTR [rax],0x1
  43bb99:	jle    43bbc0 <strcmp@plt+0x38408>
  43bb9b:	mov    rdi,QWORD PTR [rbx+0x18]
  43bb9f:	mov    rbp,QWORD PTR [rbx]
  43bba2:	call   424890 <strcmp@plt+0x210d8>
  43bba7:	lea    rsi,[rip+0x15e4a]        # 4519f8 <strcmp@plt+0x4e240>
  43bbae:	mov    rdx,rax
  43bbb1:	mov    rcx,rbp
  43bbb4:	mov    edi,0x6
  43bbb9:	xor    eax,eax
  43bbbb:	call   4306a0 <strcmp@plt+0x2cee8>
  43bbc0:	add    rsp,0x18
  43bbc4:	mov    rdi,r13
  43bbc7:	pop    rbx
  43bbc8:	pop    rbp
  43bbc9:	pop    r12
  43bbcb:	pop    r13
  43bbcd:	pop    r14
  43bbcf:	pop    r15
  43bbd1:	jmp    42dac0 <strcmp@plt+0x2a308>
  43bbd6:	mov    rdi,r13
  43bbd9:	call   42dac0 <strcmp@plt+0x2a308>
  43bbde:	mov    rax,0x473dc0
  43bbe5:	mov    rdi,rbp
  43bbe8:	mov    eax,DWORD PTR [rax]
  43bbea:	test   eax,eax
  43bbec:	jne    43bc2a <strcmp@plt+0x38472>
  43bbee:	call   4257f0 <strcmp@plt+0x22038>
  43bbf3:	mov    eax,DWORD PTR [rax]
  43bbf5:	and    eax,0xe0
  43bbfa:	cmp    eax,0x20
  43bbfd:	je     43baaa <strcmp@plt+0x382f2>
  43bc03:	mov    rax,0x468e3c
  43bc0a:	cmp    DWORD PTR [rax],0x1
  43bc0d:	jle    43b935 <strcmp@plt+0x3817d>
  43bc13:	mov    rdi,rbp
  43bc16:	call   424890 <strcmp@plt+0x210d8>
  43bc1b:	lea    rsi,[rip+0x15e4e]        # 451a70 <strcmp@plt+0x4e2b8>
  43bc22:	mov    rdx,rax
  43bc25:	jmp    43ba30 <strcmp@plt+0x38278>
  43bc2a:	call   4257f0 <strcmp@plt+0x22038>
  43bc2f:	mov    eax,DWORD PTR [rax]
  43bc31:	mov    edx,eax
  43bc33:	and    edx,0xc0ff
  43bc39:	cmp    edx,0xc0fe
  43bc3f:	je     43baaa <strcmp@plt+0x382f2>
  43bc45:	and    eax,0xfe
  43bc4a:	cmp    eax,0xfc
  43bc4f:	jne    43bc03 <strcmp@plt+0x3844b>
  43bc51:	jmp    43baaa <strcmp@plt+0x382f2>
  43bc56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43bc60:	push   r14
  43bc62:	push   r13
  43bc64:	mov    r13d,esi
  43bc67:	push   r12
  43bc69:	push   rbp
  43bc6a:	mov    r12d,edi
  43bc6d:	push   rbx
  43bc6e:	mov    ebp,edx
  43bc70:	call   43e6f0 <strcmp@plt+0x3af38>
  43bc75:	test   rax,rax
  43bc78:	je     43bd98 <strcmp@plt+0x385e0>
  43bc7e:	cmp    BYTE PTR [rax+0xc],bpl
  43bc82:	mov    rbx,rax
  43bc85:	je     43bd60 <strcmp@plt+0x385a8>
  43bc8b:	mov    r14,0x468e3c
  43bc92:	cmp    DWORD PTR [r14],0x1
  43bc96:	jg     43bd00 <strcmp@plt+0x38548>
  43bc98:	mov    BYTE PTR [rax+0xc],bpl
  43bc9c:	mov    DWORD PTR [rax+0x8],r13d
  43bca0:	mov    rax,0x46c558
  43bca7:	movzx  ebp,bpl
  43bcab:	mov    edx,r13d
  43bcae:	mov    ecx,ebp
  43bcb0:	mov    esi,r12d
  43bcb3:	mov    rdi,rbx
  43bcb6:	mov    rax,QWORD PTR [rax]
  43bcb9:	call   QWORD PTR [rax+0x58]
  43bcbc:	cmp    DWORD PTR [r14],0x2
  43bcc0:	jle    43bcd5 <strcmp@plt+0x3851d>
  43bcc2:	lea    rsi,[rip+0x16007]        # 451cd0 <strcmp@plt+0x4e518>
  43bcc9:	mov    edi,0x7
  43bcce:	xor    eax,eax
  43bcd0:	call   4306a0 <strcmp@plt+0x2cee8>
  43bcd5:	mov    rax,0x474830
  43bcdc:	mov    r8d,ebp
  43bcdf:	mov    ecx,r13d
  43bce2:	mov    edx,r12d
  43bce5:	mov    rsi,rbx
  43bce8:	pop    rbx
  43bce9:	pop    rbp
  43bcea:	pop    r12
  43bcec:	pop    r13
  43bcee:	pop    r14
  43bcf0:	mov    rdi,QWORD PTR [rax]
  43bcf3:	jmp    407fd0 <strcmp@plt+0x4818>
  43bcf8:	nop    DWORD PTR [rax+rax*1+0x0]
  43bd00:	lea    rax,[rip+0x15a98]        # 45179f <strcmp@plt+0x4dfe7>
  43bd07:	lea    rcx,[rip+0x15a8e]        # 45179c <strcmp@plt+0x4dfe4>
  43bd0e:	mov    rdx,QWORD PTR [rbx]
  43bd11:	cmp    bpl,0x1
  43bd15:	lea    rsi,[rip+0x15e8c]        # 451ba8 <strcmp@plt+0x4e3f0>
  43bd1c:	mov    edi,0x6
  43bd21:	cmovne rcx,rax
  43bd25:	xor    eax,eax
  43bd27:	call   4306a0 <strcmp@plt+0x2cee8>
  43bd2c:	cmp    DWORD PTR [r14],0x2
  43bd30:	mov    BYTE PTR [rbx+0xc],bpl
  43bd34:	mov    DWORD PTR [rbx+0x8],r13d
  43bd38:	jle    43bca0 <strcmp@plt+0x384e8>
  43bd3e:	lea    rsi,[rip+0x15f5b]        # 451ca0 <strcmp@plt+0x4e4e8>
  43bd45:	mov    edi,0x7
  43bd4a:	xor    eax,eax
  43bd4c:	call   4306a0 <strcmp@plt+0x2cee8>
  43bd51:	jmp    43bca0 <strcmp@plt+0x384e8>
  43bd56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43bd60:	mov    rax,0x468e3c
  43bd67:	cmp    DWORD PTR [rax],0x1
  43bd6a:	jg     43bd78 <strcmp@plt+0x385c0>
  43bd6c:	pop    rbx
  43bd6d:	pop    rbp
  43bd6e:	pop    r12
  43bd70:	pop    r13
  43bd72:	pop    r14
  43bd74:	ret    
  43bd75:	nop    DWORD PTR [rax]
  43bd78:	lea    rsi,[rip+0x15ed9]        # 451c58 <strcmp@plt+0x4e4a0>
  43bd7f:	pop    rbx
  43bd80:	pop    rbp
  43bd81:	pop    r12
  43bd83:	pop    r13
  43bd85:	pop    r14
  43bd87:	mov    edi,0x6
  43bd8c:	xor    eax,eax
  43bd8e:	jmp    4306a0 <strcmp@plt+0x2cee8>
  43bd93:	nop    DWORD PTR [rax+rax*1+0x0]
  43bd98:	mov    rax,0x468e3c
  43bd9f:	cmp    DWORD PTR [rax],0x1
  43bda2:	jle    43bd6c <strcmp@plt+0x385b4>
  43bda4:	lea    rsi,[rip+0x15e45]        # 451bf0 <strcmp@plt+0x4e438>
  43bdab:	jmp    43bd7f <strcmp@plt+0x385c7>
  43bdad:	nop    DWORD PTR [rax]
  43bdb0:	push   r15
  43bdb2:	push   r14
  43bdb4:	mov    r15d,esi
  43bdb7:	push   r13
  43bdb9:	push   r12
  43bdbb:	mov    r13,rcx
  43bdbe:	push   rbp
  43bdbf:	push   rbx
  43bdc0:	mov    ebp,edi
  43bdc2:	mov    edi,esi
  43bdc4:	mov    r12,rdx
  43bdc7:	mov    r14,r8
  43bdca:	sub    rsp,0x18
  43bdce:	call   43e6f0 <strcmp@plt+0x3af38>
  43bdd3:	test   rax,rax
  43bdd6:	je     43bef0 <strcmp@plt+0x38738>
  43bddc:	mov    rdi,r12
  43bddf:	mov    rbx,rax
  43bde2:	call   4251c0 <strcmp@plt+0x21a08>
  43bde7:	test   ax,ax
  43bdea:	je     43bdff <strcmp@plt+0x38647>
  43bdec:	mov    r15,0x4747c0
  43bdf3:	mov    r8d,DWORD PTR [r15]
  43bdf6:	test   r8d,r8d
  43bdf9:	jne    43bf20 <strcmp@plt+0x38768>
  43bdff:	mov    rdi,r13
  43be02:	call   4251c0 <strcmp@plt+0x21a08>
  43be07:	test   ax,ax
  43be0a:	je     43be1e <strcmp@plt+0x38666>
  43be0c:	mov    r15,0x4747c0
  43be13:	mov    esi,DWORD PTR [r15]
  43be16:	test   esi,esi
  43be18:	jne    43bf90 <strcmp@plt+0x387d8>
  43be1e:	mov    rdi,r14
  43be21:	call   4251c0 <strcmp@plt+0x21a08>
  43be26:	test   ax,ax
  43be29:	jne    43bea0 <strcmp@plt+0x386e8>
  43be2b:	mov    r15,0x468e3c
  43be32:	cmp    DWORD PTR [r15],0x1
  43be36:	jg     43bfe8 <strcmp@plt+0x38830>
  43be3c:	mov    rax,0x46c558
  43be43:	movzx  ebp,bpl
  43be47:	mov    r8,r14
  43be4a:	mov    rcx,r13
  43be4d:	mov    rdx,r12
  43be50:	mov    rsi,rbx
  43be53:	mov    edi,ebp
  43be55:	mov    rax,QWORD PTR [rax]
  43be58:	call   QWORD PTR [rax+0x48]
  43be5b:	cmp    DWORD PTR [r15],0x2
  43be5f:	jle    43be74 <strcmp@plt+0x386bc>
  43be61:	lea    rsi,[rip+0x16080]        # 451ee8 <strcmp@plt+0x4e730>
  43be68:	mov    edi,0x7
  43be6d:	xor    eax,eax
  43be6f:	call   4306a0 <strcmp@plt+0x2cee8>
  43be74:	mov    rax,0x474830
  43be7b:	mov    r9,r14
  43be7e:	mov    r8,r13
  43be81:	mov    rcx,r12
  43be84:	mov    rdx,rbx
  43be87:	mov    esi,ebp
  43be89:	mov    rdi,QWORD PTR [rax]
  43be8c:	add    rsp,0x18
  43be90:	pop    rbx
  43be91:	pop    rbp
  43be92:	pop    r12
  43be94:	pop    r13
  43be96:	pop    r14
  43be98:	pop    r15
  43be9a:	jmp    408030 <strcmp@plt+0x4878>
  43be9f:	nop
  43bea0:	mov    r15,0x4747c0
  43bea7:	mov    edx,DWORD PTR [r15]
  43beaa:	test   edx,edx
  43beac:	je     43be2b <strcmp@plt+0x38673>
  43beb2:	mov    rdi,r14
  43beb5:	call   4251c0 <strcmp@plt+0x21a08>
  43beba:	movzx  eax,ax
  43bebd:	cmp    eax,DWORD PTR [r15]
  43bec0:	je     43be2b <strcmp@plt+0x38673>
  43bec6:	mov    rax,0x468e3c
  43becd:	mov    eax,DWORD PTR [rax]
  43becf:	test   eax,eax
  43bed1:	jg     43c060 <strcmp@plt+0x388a8>
  43bed7:	add    rsp,0x18
  43bedb:	pop    rbx
  43bedc:	pop    rbp
  43bedd:	pop    r12
  43bedf:	pop    r13
  43bee1:	pop    r14
  43bee3:	pop    r15
  43bee5:	ret    
  43bee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43bef0:	mov    rax,0x468e3c
  43bef7:	cmp    DWORD PTR [rax],0x1
  43befa:	jle    43bed7 <strcmp@plt+0x3871f>
  43befc:	add    rsp,0x18
  43bf00:	mov    edx,r15d
  43bf03:	lea    rsi,[rip+0x15f4e]        # 451e58 <strcmp@plt+0x4e6a0>
  43bf0a:	pop    rbx
  43bf0b:	pop    rbp
  43bf0c:	pop    r12
  43bf0e:	pop    r13
  43bf10:	pop    r14
  43bf12:	pop    r15
  43bf14:	mov    edi,0x6
  43bf19:	xor    eax,eax
  43bf1b:	jmp    4306a0 <strcmp@plt+0x2cee8>
  43bf20:	mov    rdi,r12
  43bf23:	call   4251c0 <strcmp@plt+0x21a08>
  43bf28:	movzx  eax,ax
  43bf2b:	cmp    eax,DWORD PTR [r15]
  43bf2e:	je     43bdff <strcmp@plt+0x38647>
  43bf34:	mov    rax,0x468e3c
  43bf3b:	mov    edi,DWORD PTR [rax]
  43bf3d:	test   edi,edi
  43bf3f:	jle    43bed7 <strcmp@plt+0x3871f>
  43bf41:	mov    rbx,QWORD PTR [rbx]
  43bf44:	mov    rdi,r12
  43bf47:	call   4251c0 <strcmp@plt+0x21a08>
  43bf4c:	lea    rdx,[rip+0xb9d2]        # 447925 <strcmp@plt+0x4416d>
  43bf53:	cmp    ax,0x2
  43bf57:	lea    rax,[rip+0xb9c2]        # 447920 <strcmp@plt+0x44168>
  43bf5e:	lea    rsi,[rip+0x15da3]        # 451d08 <strcmp@plt+0x4e550>
  43bf65:	mov    rcx,rbx
  43bf68:	cmove  rdx,rax
  43bf6c:	add    rsp,0x18
  43bf70:	mov    edi,0x5
  43bf75:	xor    eax,eax
  43bf77:	pop    rbx
  43bf78:	pop    rbp
  43bf79:	pop    r12
  43bf7b:	pop    r13
  43bf7d:	pop    r14
  43bf7f:	pop    r15
  43bf81:	jmp    4306a0 <strcmp@plt+0x2cee8>
  43bf86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43bf90:	mov    rdi,r13
  43bf93:	call   4251c0 <strcmp@plt+0x21a08>
  43bf98:	movzx  eax,ax
  43bf9b:	cmp    eax,DWORD PTR [r15]
  43bf9e:	je     43be1e <strcmp@plt+0x38666>
  43bfa4:	mov    rax,0x468e3c
  43bfab:	mov    ecx,DWORD PTR [rax]
  43bfad:	test   ecx,ecx
  43bfaf:	jle    43bed7 <strcmp@plt+0x3871f>
  43bfb5:	mov    rbx,QWORD PTR [rbx]
  43bfb8:	mov    rdi,r13
  43bfbb:	call   4251c0 <strcmp@plt+0x21a08>
  43bfc0:	lea    rdx,[rip+0xb95e]        # 447925 <strcmp@plt+0x4416d>
  43bfc7:	cmp    ax,0x2
  43bfcb:	lea    rax,[rip+0xb94e]        # 447920 <strcmp@plt+0x44168>
  43bfd2:	mov    rcx,rbx
  43bfd5:	lea    rsi,[rip+0x15d9c]        # 451d78 <strcmp@plt+0x4e5c0>
  43bfdc:	cmove  rdx,rax
  43bfe0:	jmp    43bf6c <strcmp@plt+0x387b4>
  43bfe2:	nop    WORD PTR [rax+rax*1+0x0]
  43bfe8:	mov    rdi,r14
  43bfeb:	call   424890 <strcmp@plt+0x210d8>
  43bff0:	mov    rdi,r13
  43bff3:	mov    QWORD PTR [rsp+0x8],rax
  43bff8:	call   424890 <strcmp@plt+0x210d8>
  43bffd:	mov    rdi,r12
  43c000:	mov    QWORD PTR [rsp],rax
  43c004:	call   424890 <strcmp@plt+0x210d8>
  43c009:	lea    rcx,[rip+0x1579a]        # 4517aa <strcmp@plt+0x4dff2>
  43c010:	lea    rdx,[rip+0x1578d]        # 4517a4 <strcmp@plt+0x4dfec>
  43c017:	mov    r9,QWORD PTR [rsp+0x8]
  43c01c:	mov    r8,QWORD PTR [rsp]
  43c020:	cmp    bpl,0x1
  43c024:	lea    rsi,[rip+0x15ded]        # 451e18 <strcmp@plt+0x4e660>
  43c02b:	cmovne rdx,rcx
  43c02f:	mov    edi,0x6
  43c034:	mov    rcx,rax
  43c037:	xor    eax,eax
  43c039:	call   4306a0 <strcmp@plt+0x2cee8>
  43c03e:	cmp    DWORD PTR [r15],0x2
  43c042:	jle    43be3c <strcmp@plt+0x38684>
  43c048:	lea    rsi,[rip+0x15e69]        # 451eb8 <strcmp@plt+0x4e700>
  43c04f:	mov    edi,0x7
  43c054:	xor    eax,eax
  43c056:	call   4306a0 <strcmp@plt+0x2cee8>
  43c05b:	jmp    43be3c <strcmp@plt+0x38684>
  43c060:	mov    rbx,QWORD PTR [rbx]
  43c063:	mov    rdi,r14
  43c066:	call   4251c0 <strcmp@plt+0x21a08>
  43c06b:	lea    rdx,[rip+0xb8b3]        # 447925 <strcmp@plt+0x4416d>
  43c072:	cmp    ax,0x2
  43c076:	lea    rax,[rip+0xb8a3]        # 447920 <strcmp@plt+0x44168>
  43c07d:	mov    rcx,rbx
  43c080:	lea    rsi,[rip+0x15d61]        # 451de8 <strcmp@plt+0x4e630>
  43c087:	cmove  rdx,rax
  43c08b:	jmp    43bf6c <strcmp@plt+0x387b4>
  43c090:	push   rbx
  43c091:	mov    edi,0x4
  43c096:	call   434790 <strcmp@plt+0x30fd8>
  43c09b:	mov    rbx,rax
  43c09e:	xor    eax,eax
  43c0a0:	test   rbx,rbx
  43c0a3:	je     43c0d8 <strcmp@plt+0x38920>
  43c0a5:	mov    rax,0x468dc0
  43c0ac:	mov    QWORD PTR [rax+0x68],rbx
  43c0b0:	xor    eax,eax
  43c0b2:	call   438d20 <strcmp@plt+0x35568>
  43c0b7:	mov    DWORD PTR [rbx],eax
  43c0b9:	mov    ecx,eax
  43c0bb:	mov    rax,0x4747a8
  43c0c2:	mov    rsi,0x43dce0
  43c0c9:	xor    edx,edx
  43c0cb:	mov    rdi,QWORD PTR [rax]
  43c0ce:	call   437e60 <strcmp@plt+0x346a8>
  43c0d3:	mov    eax,0x1
  43c0d8:	pop    rbx
  43c0d9:	ret    
  43c0da:	nop    WORD PTR [rax+rax*1+0x0]
  43c0e0:	mov    rax,0x468dc0
  43c0e7:	mov    rdi,QWORD PTR [rax+0x68]
  43c0eb:	jmp    4037b0 <free@plt>
  43c0f0:	jmp    4030b0 <if_nametoindex@plt>
  43c0f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43c100:	push   r15
  43c102:	push   r14
  43c104:	push   r13
  43c106:	push   r12
  43c108:	push   rbp
  43c109:	push   rbx
  43c10a:	sub    rsp,0x2028
  43c111:	mov    rdi,QWORD PTR [rip+0x2bea8]        # 467fc0 <strcmp@plt+0x64808>
  43c118:	mov    rax,QWORD PTR fs:0x28
  43c121:	mov    QWORD PTR [rsp+0x2018],rax
  43c129:	xor    eax,eax
  43c12b:	call   42d4f0 <strcmp@plt+0x29d38>
  43c130:	mov    r13,rax
  43c133:	xor    eax,eax
  43c135:	call   438d20 <strcmp@plt+0x35568>
  43c13a:	cmp    eax,0xfffffff7
  43c13d:	je     43c260 <strcmp@plt+0x38aa8>
  43c143:	lea    rsi,[rsp+0x10]
  43c148:	mov    r12d,eax
  43c14b:	mov    ecx,0x200
  43c150:	xor    eax,eax
  43c152:	mov    edx,0x12
  43c157:	mov    rdi,rsi
  43c15a:	rep stos QWORD PTR es:[rdi],rax
  43c15d:	mov    eax,0x301
  43c162:	mov    WORD PTR [rsp+0x14],dx
  43c167:	mov    edi,r12d
  43c16a:	mov    edx,0x20
  43c16f:	mov    DWORD PTR [rsp+0x10],0x20
  43c177:	mov    WORD PTR [rsp+0x16],ax
  43c17c:	mov    BYTE PTR [rsp+0x20],0x11
  43c181:	call   403220 <send@plt>
  43c186:	test   eax,eax
  43c188:	js     43c278 <strcmp@plt+0x38ac0>
  43c18e:	lea    rbp,[rsp+0x1010]
  43c196:	mov    rbx,rsp
  43c199:	nop    DWORD PTR [rax+0x0]
  43c1a0:	mov    ecx,0x40
  43c1a5:	mov    edx,0x1000
  43c1aa:	mov    rsi,rbp
  43c1ad:	mov    edi,r12d
  43c1b0:	call   403160 <recv@plt>
  43c1b5:	test   eax,eax
  43c1b7:	jle    43c230 <strcmp@plt+0x38a78>
  43c1b9:	cmp    eax,0xf
  43c1bc:	mov    r15d,eax
  43c1bf:	jbe    43c1a0 <strcmp@plt+0x389e8>
  43c1c1:	mov    edx,DWORD PTR [rsp+0x1010]
  43c1c8:	cmp    edx,eax
  43c1ca:	ja     43c1a0 <strcmp@plt+0x389e8>
  43c1cc:	cmp    edx,0xf
  43c1cf:	jbe    43c1a0 <strcmp@plt+0x389e8>
  43c1d1:	mov    r14,rbp
  43c1d4:	jmp    43c202 <strcmp@plt+0x38a4a>
  43c1d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c1e0:	mov    eax,DWORD PTR [r14]
  43c1e3:	add    eax,0x3
  43c1e6:	and    eax,0xfffffffc
  43c1e9:	sub    r15d,eax
  43c1ec:	add    r14,rax
  43c1ef:	cmp    r15d,0xf
  43c1f3:	jbe    43c1a0 <strcmp@plt+0x389e8>
  43c1f5:	mov    eax,DWORD PTR [r14]
  43c1f8:	cmp    eax,r15d
  43c1fb:	ja     43c1a0 <strcmp@plt+0x389e8>
  43c1fd:	cmp    eax,0xf
  43c200:	jbe    43c1a0 <strcmp@plt+0x389e8>
  43c202:	cmp    WORD PTR [r14+0x4],0x10
  43c208:	jne    43c1e0 <strcmp@plt+0x38a28>
  43c20a:	mov    edi,DWORD PTR [r14+0x14]
  43c20e:	mov    rsi,rbx
  43c211:	call   403760 <if_indextoname@plt>
  43c216:	test   rax,rax
  43c219:	je     43c1e0 <strcmp@plt+0x38a28>
  43c21b:	mov    rdi,rbx
  43c21e:	call   403730 <strdup@plt>
  43c223:	mov    rsi,r13
  43c226:	mov    rdi,rax
  43c229:	call   42d540 <strcmp@plt+0x29d88>
  43c22e:	jmp    43c1e0 <strcmp@plt+0x38a28>
  43c230:	mov    edi,r12d
  43c233:	call   403790 <close@plt>
  43c238:	mov    rcx,QWORD PTR [rsp+0x2018]
  43c240:	xor    rcx,QWORD PTR fs:0x28
  43c249:	mov    rax,r13
  43c24c:	jne    43c2a7 <strcmp@plt+0x38aef>
  43c24e:	add    rsp,0x2028
  43c255:	pop    rbx
  43c256:	pop    rbp
  43c257:	pop    r12
  43c259:	pop    r13
  43c25b:	pop    r14
  43c25d:	pop    r15
  43c25f:	ret    
  43c260:	lea    rsi,[rip+0x15cb9]        # 451f20 <strcmp@plt+0x4e768>
  43c267:	mov    edi,0x2
  43c26c:	xor    eax,eax
  43c26e:	xor    r13d,r13d
  43c271:	call   4306a0 <strcmp@plt+0x2cee8>
  43c276:	jmp    43c238 <strcmp@plt+0x38a80>
  43c278:	call   403050 <__errno_location@plt>
  43c27d:	mov    edi,DWORD PTR [rax]
  43c27f:	xor    r13d,r13d
  43c282:	call   403170 <strerror@plt>
  43c287:	lea    rsi,[rip+0x15cca]        # 451f58 <strcmp@plt+0x4e7a0>
  43c28e:	mov    rdx,rax
  43c291:	mov    edi,0x2
  43c296:	xor    eax,eax
  43c298:	call   4306a0 <strcmp@plt+0x2cee8>
  43c29d:	mov    edi,r12d
  43c2a0:	call   403790 <close@plt>
  43c2a5:	jmp    43c238 <strcmp@plt+0x38a80>
  43c2a7:	call   403460 <__stack_chk_fail@plt>
  43c2ac:	nop    DWORD PTR [rax+0x0]
  43c2b0:	push   r14
  43c2b2:	push   r13
  43c2b4:	push   r12
  43c2b6:	push   rbp
  43c2b7:	mov    r12,rdi
  43c2ba:	push   rbx
  43c2bb:	sub    rsp,0x2040
  43c2c2:	mov    rax,QWORD PTR fs:0x28
  43c2cb:	mov    QWORD PTR [rsp+0x2038],rax
  43c2d3:	xor    eax,eax
  43c2d5:	call   4251c0 <strcmp@plt+0x21a08>
  43c2da:	movzx  r13d,ax
  43c2de:	mov    r8d,0x10
  43c2e4:	mov    QWORD PTR [rsp+0x4],0x0
  43c2ed:	cmp    r13d,0x2
  43c2f1:	lea    rbp,[rsp+0x4]
  43c2f6:	mov    WORD PTR [rsp+0x4],r8w
  43c2fc:	je     43c4c0 <strcmp@plt+0x38d08>
  43c302:	xor    edx,edx
  43c304:	mov    esi,0x3
  43c309:	mov    edi,0x10
  43c30e:	mov    DWORD PTR [rsp+0xc],0x400
  43c316:	call   4030e0 <socket@plt>
  43c31b:	test   eax,eax
  43c31d:	mov    ebx,eax
  43c31f:	js     43c540 <strcmp@plt+0x38d88>
  43c325:	mov    rsi,rbp
  43c328:	lea    rbp,[rsp+0x30]
  43c32d:	mov    edi,eax
  43c32f:	mov    edx,0xc
  43c334:	call   403080 <bind@plt>
  43c339:	xor    eax,eax
  43c33b:	mov    ecx,0x200
  43c340:	mov    rdi,rbp
  43c343:	rep stos QWORD PTR es:[rdi],rax
  43c346:	mov    esi,0x1a
  43c34b:	mov    ecx,0x1
  43c350:	mov    BYTE PTR [rsp+0x40],r13b
  43c355:	mov    WORD PTR [rsp+0x36],cx
  43c35a:	mov    WORD PTR [rsp+0x34],si
  43c35f:	mov    eax,0xffffff80
  43c364:	mov    BYTE PTR [rsp+0x44],0xfe
  43c369:	mov    BYTE PTR [rsp+0x45],0x4
  43c36e:	mov    BYTE PTR [rsp+0x47],0x1
  43c373:	mov    edi,0x1
  43c378:	mov    BYTE PTR [rsp+0x41],al
  43c37c:	mov    WORD PTR [rsp+0x4e],di
  43c381:	mov    edi,r13d
  43c384:	call   4260f0 <strcmp@plt+0x22938>
  43c389:	lea    rdi,[rbp+0x20]
  43c38d:	movzx  eax,al
  43c390:	mov    rsi,r12
  43c393:	add    eax,0x4
  43c396:	mov    WORD PTR [rsp+0x4c],ax
  43c39b:	call   424bc0 <strcmp@plt+0x21408>
  43c3a0:	movzx  edx,WORD PTR [rsp+0x4c]
  43c3a5:	xor    ecx,ecx
  43c3a7:	mov    rsi,rbp
  43c3aa:	mov    edi,ebx
  43c3ac:	add    edx,0x1c
  43c3af:	mov    DWORD PTR [rsp+0x30],edx
  43c3b3:	call   403220 <send@plt>
  43c3b8:	test   eax,eax
  43c3ba:	js     43c55a <strcmp@plt+0x38da2>
  43c3c0:	lea    rbp,[rsp+0x1030]
  43c3c8:	mov    ecx,0x40
  43c3cd:	mov    edx,0x1000
  43c3d2:	mov    rsi,rbp
  43c3d5:	mov    edi,ebx
  43c3d7:	call   403160 <recv@plt>
  43c3dc:	test   eax,eax
  43c3de:	jle    43c532 <strcmp@plt+0x38d7a>
  43c3e4:	cmp    eax,0xf
  43c3e7:	mov    r8d,eax
  43c3ea:	jbe    43c3c8 <strcmp@plt+0x38c10>
  43c3ec:	mov    ecx,DWORD PTR [rsp+0x1030]
  43c3f3:	cmp    ecx,0xf
  43c3f6:	jbe    43c3c8 <strcmp@plt+0x38c10>
  43c3f8:	cmp    ecx,eax
  43c3fa:	ja     43c3c8 <strcmp@plt+0x38c10>
  43c3fc:	mov    rdi,rbp
  43c3ff:	jmp    43c426 <strcmp@plt+0x38c6e>
  43c401:	nop    DWORD PTR [rax+0x0]
  43c408:	add    ecx,0x3
  43c40b:	and    ecx,0xfffffffc
  43c40e:	sub    r8d,ecx
  43c411:	add    rdi,rcx
  43c414:	cmp    r8d,0xf
  43c418:	jbe    43c3c8 <strcmp@plt+0x38c10>
  43c41a:	mov    ecx,DWORD PTR [rdi]
  43c41c:	cmp    ecx,r8d
  43c41f:	ja     43c3c8 <strcmp@plt+0x38c10>
  43c421:	cmp    ecx,0xf
  43c424:	jbe    43c3c8 <strcmp@plt+0x38c10>
  43c426:	cmp    WORD PTR [rdi+0x4],0x18
  43c42b:	jne    43c408 <strcmp@plt+0x38c50>
  43c42d:	lea    edx,[rcx-0x1c]
  43c430:	lea    rsi,[rdi+0x1c]
  43c434:	cmp    edx,0x3
  43c437:	jle    43c408 <strcmp@plt+0x38c50>
  43c439:	movzx  eax,WORD PTR [rdi+0x1c]
  43c43d:	cmp    ax,0x3
  43c441:	jbe    43c408 <strcmp@plt+0x38c50>
  43c443:	cmp    edx,eax
  43c445:	jge    43c46d <strcmp@plt+0x38cb5>
  43c447:	jmp    43c408 <strcmp@plt+0x38c50>
  43c449:	nop    DWORD PTR [rax+0x0]
  43c450:	add    eax,0x3
  43c453:	and    eax,0xfffffffc
  43c456:	sub    edx,eax
  43c458:	add    rsi,rax
  43c45b:	cmp    edx,0x3
  43c45e:	jle    43c408 <strcmp@plt+0x38c50>
  43c460:	movzx  eax,WORD PTR [rsi]
  43c463:	cmp    ax,0x3
  43c467:	jbe    43c408 <strcmp@plt+0x38c50>
  43c469:	cmp    eax,edx
  43c46b:	jg     43c408 <strcmp@plt+0x38c50>
  43c46d:	cmp    WORD PTR [rsi+0x2],0x7
  43c472:	jne    43c450 <strcmp@plt+0x38c98>
  43c474:	movzx  edx,BYTE PTR [rsp+0x40]
  43c479:	lea    rbp,[rsp+0x10]
  43c47e:	add    rsi,0x4
  43c482:	mov    rdi,rbp
  43c485:	call   424f50 <strcmp@plt+0x21798>
  43c48a:	mov    edi,ebx
  43c48c:	call   403790 <close@plt>
  43c491:	mov    rdi,rbp
  43c494:	call   424b80 <strcmp@plt+0x213c8>
  43c499:	mov    rbx,QWORD PTR [rsp+0x2038]
  43c4a1:	xor    rbx,QWORD PTR fs:0x28
  43c4aa:	jne    43c58a <strcmp@plt+0x38dd2>
  43c4b0:	add    rsp,0x2040
  43c4b7:	pop    rbx
  43c4b8:	pop    rbp
  43c4b9:	pop    r12
  43c4bb:	pop    r13
  43c4bd:	pop    r14
  43c4bf:	ret    
  43c4c0:	xor    edx,edx
  43c4c2:	mov    esi,0x3
  43c4c7:	mov    edi,0x10
  43c4cc:	mov    DWORD PTR [rsp+0xc],0x40
  43c4d4:	call   4030e0 <socket@plt>
  43c4d9:	test   eax,eax
  43c4db:	mov    ebx,eax
  43c4dd:	js     43c540 <strcmp@plt+0x38d88>
  43c4df:	mov    rsi,rbp
  43c4e2:	lea    rbp,[rsp+0x30]
  43c4e7:	mov    edx,0xc
  43c4ec:	mov    edi,eax
  43c4ee:	call   403080 <bind@plt>
  43c4f3:	xor    eax,eax
  43c4f5:	mov    ecx,0x200
  43c4fa:	mov    rdi,rbp
  43c4fd:	rep stos QWORD PTR es:[rdi],rax
  43c500:	mov    edx,0x1a
  43c505:	mov    eax,0x1
  43c50a:	mov    BYTE PTR [rsp+0x40],0x2
  43c50f:	mov    WORD PTR [rsp+0x36],ax
  43c514:	mov    WORD PTR [rsp+0x34],dx
  43c519:	mov    eax,0x20
  43c51e:	mov    BYTE PTR [rsp+0x44],0xfe
  43c523:	mov    BYTE PTR [rsp+0x45],0x4
  43c528:	mov    BYTE PTR [rsp+0x47],0x1
  43c52d:	jmp    43c373 <strcmp@plt+0x38bbb>
  43c532:	mov    edi,ebx
  43c534:	call   403790 <close@plt>
  43c539:	xor    eax,eax
  43c53b:	jmp    43c499 <strcmp@plt+0x38ce1>
  43c540:	lea    rsi,[rip+0x15a49]        # 451f90 <strcmp@plt+0x4e7d8>
  43c547:	xor    eax,eax
  43c549:	mov    edi,0x2
  43c54e:	call   4306a0 <strcmp@plt+0x2cee8>
  43c553:	xor    eax,eax
  43c555:	jmp    43c499 <strcmp@plt+0x38ce1>
  43c55a:	call   403050 <__errno_location@plt>
  43c55f:	mov    edi,DWORD PTR [rax]
  43c561:	call   403170 <strerror@plt>
  43c566:	lea    rsi,[rip+0x15a63]        # 451fd0 <strcmp@plt+0x4e818>
  43c56d:	mov    rdx,rax
  43c570:	mov    edi,0x1
  43c575:	xor    eax,eax
  43c577:	call   4306a0 <strcmp@plt+0x2cee8>
  43c57c:	mov    edi,ebx
  43c57e:	call   403790 <close@plt>
  43c583:	xor    eax,eax
  43c585:	jmp    43c499 <strcmp@plt+0x38ce1>
  43c58a:	call   403460 <__stack_chk_fail@plt>
  43c58f:	nop
  43c590:	push   r13
  43c592:	push   r12
  43c594:	push   rbp
  43c595:	push   rbx
  43c596:	mov    rbx,rdi
  43c599:	sub    rsp,0x2018
  43c5a0:	mov    rax,QWORD PTR fs:0x28
  43c5a9:	mov    QWORD PTR [rsp+0x2008],rax
  43c5b1:	xor    eax,eax
  43c5b3:	call   4030b0 <if_nametoindex@plt>
  43c5b8:	test   eax,eax
  43c5ba:	jne    43c600 <strcmp@plt+0x38e48>
  43c5bc:	lea    rsi,[rip+0x15a45]        # 452008 <strcmp@plt+0x4e850>
  43c5c3:	mov    rdx,rbx
  43c5c6:	mov    edi,0x2
  43c5cb:	xor    eax,eax
  43c5cd:	mov    r12d,0xfffffffa
  43c5d3:	call   4306a0 <strcmp@plt+0x2cee8>
  43c5d8:	mov    rsi,QWORD PTR [rsp+0x2008]
  43c5e0:	xor    rsi,QWORD PTR fs:0x28
  43c5e9:	mov    eax,r12d
  43c5ec:	jne    43c739 <strcmp@plt+0x38f81>
  43c5f2:	add    rsp,0x2018
  43c5f9:	pop    rbx
  43c5fa:	pop    rbp
  43c5fb:	pop    r12
  43c5fd:	pop    r13
  43c5ff:	ret    
  43c600:	mov    r13d,eax
  43c603:	xor    eax,eax
  43c605:	call   438d20 <strcmp@plt+0x35568>
  43c60a:	cmp    eax,0xfffffff7
  43c60d:	mov    ebp,eax
  43c60f:	je     43c6de <strcmp@plt+0x38f26>
  43c615:	xor    eax,eax
  43c617:	mov    ecx,0x200
  43c61c:	mov    rdi,rsp
  43c61f:	rep stos QWORD PTR es:[rdi],rax
  43c622:	mov    edx,0x12
  43c627:	mov    eax,0x301
  43c62c:	mov    rsi,rsp
  43c62f:	mov    WORD PTR [rsp+0x4],dx
  43c634:	mov    edi,ebp
  43c636:	mov    edx,0x20
  43c63b:	mov    DWORD PTR [rsp],0x20
  43c642:	mov    WORD PTR [rsp+0x6],ax
  43c647:	mov    BYTE PTR [rsp+0x10],0x11
  43c64c:	call   403220 <send@plt>
  43c651:	test   eax,eax
  43c653:	js     43c705 <strcmp@plt+0x38f4d>
  43c659:	lea    rbx,[rsp+0x1000]
  43c661:	mov    r12d,0xfffffffa
  43c667:	nop    WORD PTR [rax+rax*1+0x0]
  43c670:	mov    ecx,0x40
  43c675:	mov    edx,0x1000
  43c67a:	mov    rsi,rbx
  43c67d:	mov    edi,ebp
  43c67f:	call   403160 <recv@plt>
  43c684:	test   eax,eax
  43c686:	jle    43c6f9 <strcmp@plt+0x38f41>
  43c688:	cmp    eax,0xf
  43c68b:	mov    ecx,eax
  43c68d:	jbe    43c670 <strcmp@plt+0x38eb8>
  43c68f:	mov    edx,DWORD PTR [rsp+0x1000]
  43c696:	cmp    edx,eax
  43c698:	ja     43c670 <strcmp@plt+0x38eb8>
  43c69a:	cmp    edx,0xf
  43c69d:	jbe    43c670 <strcmp@plt+0x38eb8>
  43c69f:	mov    rax,rbx
  43c6a2:	jmp    43c6c3 <strcmp@plt+0x38f0b>
  43c6a4:	nop    DWORD PTR [rax+0x0]
  43c6a8:	add    edx,0x3
  43c6ab:	and    edx,0xfffffffc
  43c6ae:	sub    ecx,edx
  43c6b0:	add    rax,rdx
  43c6b3:	cmp    ecx,0xf
  43c6b6:	jbe    43c670 <strcmp@plt+0x38eb8>
  43c6b8:	mov    edx,DWORD PTR [rax]
  43c6ba:	cmp    edx,ecx
  43c6bc:	ja     43c670 <strcmp@plt+0x38eb8>
  43c6be:	cmp    edx,0xf
  43c6c1:	jbe    43c670 <strcmp@plt+0x38eb8>
  43c6c3:	cmp    WORD PTR [rax+0x4],0x10
  43c6c8:	jne    43c6a8 <strcmp@plt+0x38ef0>
  43c6ca:	cmp    r13d,DWORD PTR [rax+0x14]
  43c6ce:	jne    43c6a8 <strcmp@plt+0x38ef0>
  43c6d0:	mov    r12d,DWORD PTR [rax+0x18]
  43c6d4:	shr    r12d,0x6
  43c6d8:	and    r12d,0x1
  43c6dc:	jmp    43c670 <strcmp@plt+0x38eb8>
  43c6de:	lea    rsi,[rip+0x15953]        # 452038 <strcmp@plt+0x4e880>
  43c6e5:	mov    edi,0x2
  43c6ea:	xor    eax,eax
  43c6ec:	mov    r12d,ebp
  43c6ef:	call   4306a0 <strcmp@plt+0x2cee8>
  43c6f4:	jmp    43c5d8 <strcmp@plt+0x38e20>
  43c6f9:	mov    edi,ebp
  43c6fb:	call   403790 <close@plt>
  43c700:	jmp    43c5d8 <strcmp@plt+0x38e20>
  43c705:	call   403050 <__errno_location@plt>
  43c70a:	mov    edi,DWORD PTR [rax]
  43c70c:	mov    r12d,0xfffffff7
  43c712:	call   403170 <strerror@plt>
  43c717:	lea    rsi,[rip+0x15952]        # 452070 <strcmp@plt+0x4e8b8>
  43c71e:	mov    rdx,rax
  43c721:	mov    edi,0x2
  43c726:	xor    eax,eax
  43c728:	call   4306a0 <strcmp@plt+0x2cee8>
  43c72d:	mov    edi,ebp
  43c72f:	call   403790 <close@plt>
  43c734:	jmp    43c5d8 <strcmp@plt+0x38e20>
  43c739:	call   403460 <__stack_chk_fail@plt>
  43c73e:	xchg   ax,ax
  43c740:	sub    rsp,0x1018
  43c747:	mov    edx,edi
  43c749:	mov    ecx,0x200
  43c74e:	mov    rax,QWORD PTR fs:0x28
  43c757:	mov    QWORD PTR [rsp+0x1008],rax
  43c75f:	xor    eax,eax
  43c761:	mov    rdi,rsp
  43c764:	test   edx,edx
  43c766:	rep stos QWORD PTR es:[rdi],rax
  43c769:	mov    eax,0x301
  43c76e:	mov    edi,0x1a
  43c773:	mov    BYTE PTR [rsp+0x10],sil
  43c778:	mov    WORD PTR [rsp+0x6],ax
  43c77d:	mov    eax,0xfffffffe
  43c782:	mov    WORD PTR [rsp+0x4],di
  43c787:	cmove  edx,eax
  43c78a:	mov    rax,0x468dc0
  43c791:	mov    BYTE PTR [rsp+0x15],0x4
  43c796:	mov    BYTE PTR [rsp+0x14],dl
  43c79a:	mov    BYTE PTR [rsp+0x17],0x1
  43c79f:	mov    edx,0x1c
  43c7a4:	mov    rsi,rsp
  43c7a7:	mov    DWORD PTR [rsp],0x1c
  43c7ae:	mov    rax,QWORD PTR [rax+0x68]
  43c7b2:	mov    edi,DWORD PTR [rax]
  43c7b4:	call   403220 <send@plt>
  43c7b9:	test   eax,eax
  43c7bb:	mov    edx,0x1
  43c7c0:	js     43c7e0 <strcmp@plt+0x39028>
  43c7c2:	mov    rcx,QWORD PTR [rsp+0x1008]
  43c7ca:	xor    rcx,QWORD PTR fs:0x28
  43c7d3:	mov    eax,edx
  43c7d5:	jne    43c806 <strcmp@plt+0x3904e>
  43c7d7:	add    rsp,0x1018
  43c7de:	ret    
  43c7df:	nop
  43c7e0:	call   403050 <__errno_location@plt>
  43c7e5:	mov    edi,DWORD PTR [rax]
  43c7e7:	call   403170 <strerror@plt>
  43c7ec:	lea    rsi,[rip+0x158b5]        # 4520a8 <strcmp@plt+0x4e8f0>
  43c7f3:	mov    rdx,rax
  43c7f6:	mov    edi,0x1
  43c7fb:	xor    eax,eax
  43c7fd:	call   4306a0 <strcmp@plt+0x2cee8>
  43c802:	xor    edx,edx
  43c804:	jmp    43c7c2 <strcmp@plt+0x3900a>
  43c806:	call   403460 <__stack_chk_fail@plt>
  43c80b:	nop    DWORD PTR [rax+rax*1+0x0]
  43c810:	push   r13
  43c812:	push   r12
  43c814:	mov    r13,rdi
  43c817:	push   rbp
  43c818:	push   rbx
  43c819:	xor    edx,edx
  43c81b:	mov    edi,0x2
  43c820:	mov    rbp,rsi
  43c823:	mov    esi,0x2
  43c828:	sub    rsp,0x38
  43c82c:	mov    rax,QWORD PTR fs:0x28
  43c835:	mov    QWORD PTR [rsp+0x28],rax
  43c83a:	xor    eax,eax
  43c83c:	call   4030e0 <socket@plt>
  43c841:	mov    edx,0xf
  43c846:	mov    r12d,eax
  43c849:	mov    rsi,r13
  43c84c:	mov    eax,0x2
  43c851:	mov    rdi,rsp
  43c854:	mov    QWORD PTR [rsp+0x10],0x0
  43c85d:	mov    QWORD PTR [rsp],0x0
  43c865:	mov    QWORD PTR [rsp+0x8],0x0
  43c86e:	mov    QWORD PTR [rsp+0x18],0x0
  43c877:	mov    QWORD PTR [rsp+0x20],0x0
  43c880:	mov    WORD PTR [rsp+0x10],ax
  43c885:	call   403240 <strncpy@plt>
  43c88a:	mov    rdx,rsp
  43c88d:	mov    esi,0x8927
  43c892:	mov    edi,r12d
  43c895:	xor    eax,eax
  43c897:	call   403590 <ioctl@plt>
  43c89c:	mov    edi,r12d
  43c89f:	call   403790 <close@plt>
  43c8a4:	lea    rdx,[rsp+0x12]
  43c8a9:	xor    eax,eax
  43c8ab:	nop    DWORD PTR [rax+rax*1+0x0]
  43c8b0:	movzx  ecx,BYTE PTR [rdx+rax*1]
  43c8b4:	mov    BYTE PTR [rbp+rax*1+0x0],cl
  43c8b8:	add    rax,0x1
  43c8bc:	cmp    rax,0x6
  43c8c0:	jne    43c8b0 <strcmp@plt+0x390f8>
  43c8c2:	mov    rax,QWORD PTR [rsp+0x28]
  43c8c7:	xor    rax,QWORD PTR fs:0x28
  43c8d0:	jne    43c8dd <strcmp@plt+0x39125>
  43c8d2:	add    rsp,0x38
  43c8d6:	pop    rbx
  43c8d7:	pop    rbp
  43c8d8:	pop    r12
  43c8da:	pop    r13
  43c8dc:	ret    
  43c8dd:	call   403460 <__stack_chk_fail@plt>
  43c8e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43c8ed:	nop    DWORD PTR [rax]
  43c8f0:	push   r14
  43c8f2:	push   r13
  43c8f4:	push   r12
  43c8f6:	push   rbp
  43c8f7:	push   rbx
  43c8f8:	sub    rsp,0x420
  43c8ff:	mov    r12,0x468e3c
  43c906:	mov    rax,QWORD PTR fs:0x28
  43c90f:	mov    QWORD PTR [rsp+0x418],rax
  43c917:	xor    eax,eax
  43c919:	mov    esi,DWORD PTR [r12]
  43c91d:	test   esi,esi
  43c91f:	jle    43c934 <strcmp@plt+0x3917c>
  43c921:	lea    rsi,[rip+0x15820]        # 452148 <strcmp@plt+0x4e990>
  43c928:	mov    edi,0x5
  43c92d:	xor    eax,eax
  43c92f:	call   4306a0 <strcmp@plt+0x2cee8>
  43c934:	lea    rdi,[rsp+0x8]
  43c939:	call   403770 <getifaddrs@plt>
  43c93e:	cmp    eax,0xffffffff
  43c941:	je     43ca68 <strcmp@plt+0x392b0>
  43c947:	mov    rdi,QWORD PTR [rip+0x2b672]        # 467fc0 <strcmp@plt+0x64808>
  43c94e:	call   4397c0 <strcmp@plt+0x36008>
  43c953:	mov    rbx,QWORD PTR [rsp+0x8]
  43c958:	mov    r13,rax
  43c95b:	test   rbx,rbx
  43c95e:	je     43ca35 <strcmp@plt+0x3927d>
  43c964:	lea    rbp,[rsp+0x10]
  43c969:	jmp    43c999 <strcmp@plt+0x391e1>
  43c96b:	nop    DWORD PTR [rax+rax*1+0x0]
  43c970:	mov    edi,eax
  43c972:	call   403560 <gai_strerror@plt>
  43c977:	lea    rsi,[rip+0x1579a]        # 452118 <strcmp@plt+0x4e960>
  43c97e:	mov    rdx,rax
  43c981:	mov    edi,0x3
  43c986:	xor    eax,eax
  43c988:	call   4306a0 <strcmp@plt+0x2cee8>
  43c98d:	mov    rbx,QWORD PTR [rbx]
  43c990:	test   rbx,rbx
  43c993:	je     43ca30 <strcmp@plt+0x39278>
  43c999:	mov    rdi,QWORD PTR [rbx+0x18]
  43c99d:	test   rdi,rdi
  43c9a0:	je     43c98d <strcmp@plt+0x391d5>
  43c9a2:	movzx  eax,WORD PTR [rdi]
  43c9a5:	mov    edx,eax
  43c9a7:	and    edx,0xfffffff7
  43c9aa:	cmp    dx,0x2
  43c9ae:	jne    43c98d <strcmp@plt+0x391d5>
  43c9b0:	cmp    ax,0x2
  43c9b4:	mov    esi,0x1c
  43c9b9:	mov    eax,0x10
  43c9be:	cmove  esi,eax
  43c9c1:	sub    rsp,0x8
  43c9c5:	xor    r9d,r9d
  43c9c8:	push   0x1
  43c9ca:	xor    r8d,r8d
  43c9cd:	mov    ecx,0x401
  43c9d2:	mov    rdx,rbp
  43c9d5:	call   4032b0 <getnameinfo@plt>
  43c9da:	test   eax,eax
  43c9dc:	pop    rdx
  43c9dd:	pop    rcx
  43c9de:	jne    43c970 <strcmp@plt+0x391b8>
  43c9e0:	mov    rdi,QWORD PTR [rbx+0x8]
  43c9e4:	call   403730 <strdup@plt>
  43c9e9:	mov    rdi,rbp
  43c9ec:	mov    r14,rax
  43c9ef:	call   403730 <strdup@plt>
  43c9f4:	mov    rdx,r14
  43c9f7:	mov    rsi,rax
  43c9fa:	mov    rdi,r13
  43c9fd:	call   439800 <strcmp@plt+0x36048>
  43ca02:	cmp    DWORD PTR [r12],0x1
  43ca07:	jle    43c98d <strcmp@plt+0x391d5>
  43ca09:	mov    rdx,QWORD PTR [rbx+0x8]
  43ca0d:	lea    rsi,[rip+0x15764]        # 452178 <strcmp@plt+0x4e9c0>
  43ca14:	xor    eax,eax
  43ca16:	mov    rcx,rbp
  43ca19:	mov    edi,0x6
  43ca1e:	call   4306a0 <strcmp@plt+0x2cee8>
  43ca23:	mov    rbx,QWORD PTR [rbx]
  43ca26:	test   rbx,rbx
  43ca29:	jne    43c999 <strcmp@plt+0x391e1>
  43ca2f:	nop
  43ca30:	mov    rbx,QWORD PTR [rsp+0x8]
  43ca35:	mov    rdi,rbx
  43ca38:	call   4036e0 <freeifaddrs@plt>
  43ca3d:	mov    rcx,QWORD PTR [rsp+0x418]
  43ca45:	xor    rcx,QWORD PTR fs:0x28
  43ca4e:	mov    rax,r13
  43ca51:	jne    43ca87 <strcmp@plt+0x392cf>
  43ca53:	add    rsp,0x420
  43ca5a:	pop    rbx
  43ca5b:	pop    rbp
  43ca5c:	pop    r12
  43ca5e:	pop    r13
  43ca60:	pop    r14
  43ca62:	ret    
  43ca63:	nop    DWORD PTR [rax+rax*1+0x0]
  43ca68:	lea    rsi,[rip+0x15671]        # 4520e0 <strcmp@plt+0x4e928>
  43ca6f:	xor    eax,eax
  43ca71:	mov    edi,0x1
  43ca76:	call   4306a0 <strcmp@plt+0x2cee8>
  43ca7b:	xor    eax,eax
  43ca7d:	call   43f160 <strcmp@plt+0x3b9a8>
  43ca82:	jmp    43c947 <strcmp@plt+0x3918f>
  43ca87:	call   403460 <__stack_chk_fail@plt>
  43ca8c:	nop    DWORD PTR [rax+0x0]
  43ca90:	push   r15
  43ca92:	push   r14
  43ca94:	push   r13
  43ca96:	push   r12
  43ca98:	push   rbp
  43ca99:	push   rbx
  43ca9a:	mov    ebx,esi
  43ca9c:	sub    rsp,0x2068
  43caa3:	mov    QWORD PTR [rsp+0x18],rdi
  43caa8:	mov    QWORD PTR [rsp+0x48],0x0
  43cab1:	mov    rax,QWORD PTR fs:0x28
  43caba:	mov    QWORD PTR [rsp+0x2058],rax
  43cac2:	xor    eax,eax
  43cac4:	mov    QWORD PTR [rsp+0x30],0x0
  43cacd:	mov    QWORD PTR [rsp+0x38],0x0
  43cad6:	mov    QWORD PTR [rsp+0x40],0x0
  43cadf:	mov    DWORD PTR [rsp+0x48],0x1
  43cae7:	call   4030b0 <if_nametoindex@plt>
  43caec:	cmp    ebx,0x2
  43caef:	mov    DWORD PTR [rsp+0x10],eax
  43caf3:	mov    edx,0x40
  43caf8:	mov    eax,0x400
  43cafd:	mov    ecx,0x10
  43cb02:	mov    esi,0x3
  43cb07:	cmove  eax,edx
  43cb0a:	mov    edi,0x10
  43cb0f:	xor    edx,edx
  43cb11:	mov    QWORD PTR [rsp+0x24],0x0
  43cb1a:	mov    DWORD PTR [rsp+0x2c],eax
  43cb1e:	mov    WORD PTR [rsp+0x24],cx
  43cb23:	call   4030e0 <socket@plt>
  43cb28:	test   eax,eax
  43cb2a:	mov    DWORD PTR [rsp+0x14],eax
  43cb2e:	js     43cd9e <strcmp@plt+0x395e6>
  43cb34:	mov    r15d,DWORD PTR [rsp+0x14]
  43cb39:	lea    rsi,[rsp+0x24]
  43cb3e:	mov    edx,0xc
  43cb43:	mov    edi,r15d
  43cb46:	call   403080 <bind@plt>
  43cb4b:	lea    rsi,[rsp+0x50]
  43cb50:	xor    eax,eax
  43cb52:	mov    ecx,0x200
  43cb57:	mov    edx,0x1a
  43cb5c:	mov    rdi,rsi
  43cb5f:	rep stos QWORD PTR es:[rdi],rax
  43cb62:	mov    eax,0x301
  43cb67:	mov    WORD PTR [rsp+0x54],dx
  43cb6c:	mov    edi,r15d
  43cb6f:	mov    edx,0x1c
  43cb74:	mov    WORD PTR [rsp+0x56],ax
  43cb79:	mov    DWORD PTR [rsp+0x50],0x1c
  43cb81:	mov    BYTE PTR [rsp+0x60],bl
  43cb85:	mov    BYTE PTR [rsp+0x64],0xfe
  43cb8a:	mov    BYTE PTR [rsp+0x65],0x4
  43cb8f:	mov    BYTE PTR [rsp+0x67],0x1
  43cb94:	call   403220 <send@plt>
  43cb99:	test   eax,eax
  43cb9b:	js     43cd75 <strcmp@plt+0x395bd>
  43cba1:	lea    rax,[rsp+0x1050]
  43cba9:	mov    QWORD PTR [rsp+0x8],rax
  43cbae:	lea    rax,[rsp+0x30]
  43cbb3:	mov    QWORD PTR [rsp],rax
  43cbb7:	nop    WORD PTR [rax+rax*1+0x0]
  43cbc0:	mov    rsi,QWORD PTR [rsp+0x8]
  43cbc5:	mov    edi,DWORD PTR [rsp+0x14]
  43cbc9:	mov    ecx,0x40
  43cbce:	mov    edx,0x1000
  43cbd3:	call   403160 <recv@plt>
  43cbd8:	test   eax,eax
  43cbda:	jle    43cd44 <strcmp@plt+0x3958c>
  43cbe0:	cmp    eax,0xf
  43cbe3:	mov    r15d,eax
  43cbe6:	jbe    43cbc0 <strcmp@plt+0x39408>
  43cbe8:	mov    r8d,DWORD PTR [rsp+0x1050]
  43cbf0:	cmp    r8d,eax
  43cbf3:	ja     43cbc0 <strcmp@plt+0x39408>
  43cbf5:	cmp    r8d,0xf
  43cbf9:	jbe    43cbc0 <strcmp@plt+0x39408>
  43cbfb:	mov    r14,QWORD PTR [rsp+0x8]
  43cc00:	jmp    43cc2b <strcmp@plt+0x39473>
  43cc02:	nop    WORD PTR [rax+rax*1+0x0]
  43cc08:	mov    eax,DWORD PTR [r14]
  43cc0b:	add    eax,0x3
  43cc0e:	and    eax,0xfffffffc
  43cc11:	sub    r15d,eax
  43cc14:	add    r14,rax
  43cc17:	cmp    r15d,0xf
  43cc1b:	jbe    43cbc0 <strcmp@plt+0x39408>
  43cc1d:	mov    r8d,DWORD PTR [r14]
  43cc20:	cmp    r8d,r15d
  43cc23:	ja     43cbc0 <strcmp@plt+0x39408>
  43cc25:	cmp    r8d,0xf
  43cc29:	jbe    43cbc0 <strcmp@plt+0x39408>
  43cc2b:	cmp    WORD PTR [r14+0x4],0x18
  43cc31:	jne    43cc08 <strcmp@plt+0x39450>
  43cc33:	lea    ebp,[r8-0x1c]
  43cc37:	lea    r12,[r14+0x1c]
  43cc3b:	cmp    ebp,0x3
  43cc3e:	jle    43cc08 <strcmp@plt+0x39450>
  43cc40:	movzx  eax,WORD PTR [r14+0x1c]
  43cc45:	cmp    ax,0x3
  43cc49:	jbe    43cc08 <strcmp@plt+0x39450>
  43cc4b:	cmp    ebp,eax
  43cc4d:	jl     43cc08 <strcmp@plt+0x39450>
  43cc4f:	xor    r13d,r13d
  43cc52:	xor    ebx,ebx
  43cc54:	jmp    43cca1 <strcmp@plt+0x394e9>
  43cc56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43cc60:	cmp    ax,0x5
  43cc64:	jne    43cc7d <strcmp@plt+0x394c5>
  43cc66:	movzx  edx,BYTE PTR [rsp+0x60]
  43cc6b:	mov    rdi,QWORD PTR [rsp]
  43cc6f:	lea    rsi,[r12+0x4]
  43cc74:	add    r13d,0x1
  43cc78:	call   424f50 <strcmp@plt+0x21798>
  43cc7d:	movzx  eax,WORD PTR [r12]
  43cc82:	add    eax,0x3
  43cc85:	and    eax,0xfffffffc
  43cc88:	sub    ebp,eax
  43cc8a:	add    r12,rax
  43cc8d:	cmp    ebp,0x3
  43cc90:	jle    43ccc0 <strcmp@plt+0x39508>
  43cc92:	movzx  eax,WORD PTR [r12]
  43cc97:	cmp    ax,0x3
  43cc9b:	jbe    43ccc0 <strcmp@plt+0x39508>
  43cc9d:	cmp    eax,ebp
  43cc9f:	jg     43ccc0 <strcmp@plt+0x39508>
  43cca1:	movzx  eax,WORD PTR [r12+0x2]
  43cca7:	cmp    ax,0x4
  43ccab:	jne    43cc60 <strcmp@plt+0x394a8>
  43ccad:	mov    ebx,DWORD PTR [r12+0x4]
  43ccb2:	add    r13d,0x1
  43ccb6:	jmp    43cc7d <strcmp@plt+0x394c5>
  43ccb8:	nop    DWORD PTR [rax+rax*1+0x0]
  43ccc0:	cmp    ebx,DWORD PTR [rsp+0x10]
  43ccc4:	jne    43cc08 <strcmp@plt+0x39450>
  43ccca:	cmp    r13d,0x2
  43ccce:	jne    43cc08 <strcmp@plt+0x39450>
  43ccd4:	mov    edi,DWORD PTR [rsp+0x14]
  43ccd8:	lea    rbx,[rsp+0x30]
  43ccdd:	call   403790 <close@plt>
  43cce2:	mov    rax,0x468e3c
  43cce9:	cmp    DWORD PTR [rax],0x2
  43ccec:	jg     43cd1f <strcmp@plt+0x39567>
  43ccee:	mov    rdi,rbx
  43ccf1:	call   424b80 <strcmp@plt+0x213c8>
  43ccf6:	mov    rcx,QWORD PTR [rsp+0x2058]
  43ccfe:	xor    rcx,QWORD PTR fs:0x28
  43cd07:	jne    43cdb8 <strcmp@plt+0x39600>
  43cd0d:	add    rsp,0x2068
  43cd14:	pop    rbx
  43cd15:	pop    rbp
  43cd16:	pop    r12
  43cd18:	pop    r13
  43cd1a:	pop    r14
  43cd1c:	pop    r15
  43cd1e:	ret    
  43cd1f:	mov    rdi,rbx
  43cd22:	call   424890 <strcmp@plt+0x210d8>
  43cd27:	mov    rdx,QWORD PTR [rsp+0x18]
  43cd2c:	lea    rsi,[rip+0x15515]        # 452248 <strcmp@plt+0x4ea90>
  43cd33:	mov    rcx,rax
  43cd36:	mov    edi,0x7
  43cd3b:	xor    eax,eax
  43cd3d:	call   4306a0 <strcmp@plt+0x2cee8>
  43cd42:	jmp    43ccee <strcmp@plt+0x39536>
  43cd44:	mov    rax,0x468e3c
  43cd4b:	cmp    DWORD PTR [rax],0x2
  43cd4e:	jle    43cd68 <strcmp@plt+0x395b0>
  43cd50:	mov    rdx,QWORD PTR [rsp+0x18]
  43cd55:	lea    rsi,[rip+0x154b4]        # 452210 <strcmp@plt+0x4ea58>
  43cd5c:	mov    edi,0x7
  43cd61:	xor    eax,eax
  43cd63:	call   4306a0 <strcmp@plt+0x2cee8>
  43cd68:	mov    edi,DWORD PTR [rsp+0x14]
  43cd6c:	call   403790 <close@plt>
  43cd71:	xor    eax,eax
  43cd73:	jmp    43ccf6 <strcmp@plt+0x3953e>
  43cd75:	call   403050 <__errno_location@plt>
  43cd7a:	mov    edi,DWORD PTR [rax]
  43cd7c:	call   403170 <strerror@plt>
  43cd81:	lea    rsi,[rip+0x15450]        # 4521d8 <strcmp@plt+0x4ea20>
  43cd88:	mov    rdx,rax
  43cd8b:	mov    edi,0x1
  43cd90:	xor    eax,eax
  43cd92:	call   4306a0 <strcmp@plt+0x2cee8>
  43cd97:	xor    eax,eax
  43cd99:	jmp    43ccf6 <strcmp@plt+0x3953e>
  43cd9e:	lea    rsi,[rip+0x153fb]        # 4521a0 <strcmp@plt+0x4e9e8>
  43cda5:	xor    eax,eax
  43cda7:	mov    edi,0x2
  43cdac:	call   4306a0 <strcmp@plt+0x2cee8>
  43cdb1:	xor    eax,eax
  43cdb3:	jmp    43ccf6 <strcmp@plt+0x3953e>
  43cdb8:	call   403460 <__stack_chk_fail@plt>
  43cdbd:	nop    DWORD PTR [rax]
  43cdc0:	push   r15
  43cdc2:	push   r14
  43cdc4:	mov    r14,rdi
  43cdc7:	push   r13
  43cdc9:	push   r12
  43cdcb:	mov    r12d,esi
  43cdce:	push   rbp
  43cdcf:	push   rbx
  43cdd0:	sub    rsp,0x48
  43cdd4:	mov    rdi,0x424750
  43cddb:	mov    rax,QWORD PTR fs:0x28
  43cde4:	mov    QWORD PTR [rsp+0x38],rax
  43cde9:	xor    eax,eax
  43cdeb:	call   42d4f0 <strcmp@plt+0x29d38>
  43cdf0:	lea    rdi,[rsp+0x18]
  43cdf5:	mov    r13,rax
  43cdf8:	call   403770 <getifaddrs@plt>
  43cdfd:	test   eax,eax
  43cdff:	je     43ce40 <strcmp@plt+0x39688>
  43ce01:	mov    rax,0x468e3c
  43ce08:	cmp    DWORD PTR [rax],0x1
  43ce0b:	jg     43cf60 <strcmp@plt+0x397a8>
  43ce11:	mov    rcx,QWORD PTR [rsp+0x38]
  43ce16:	xor    rcx,QWORD PTR fs:0x28
  43ce1f:	mov    rax,r13
  43ce22:	jne    43cfd8 <strcmp@plt+0x39820>
  43ce28:	add    rsp,0x48
  43ce2c:	pop    rbx
  43ce2d:	pop    rbp
  43ce2e:	pop    r12
  43ce30:	pop    r13
  43ce32:	pop    r14
  43ce34:	pop    r15
  43ce36:	ret    
  43ce37:	nop    WORD PTR [rax+rax*1+0x0]
  43ce40:	mov    rbx,QWORD PTR [rsp+0x18]
  43ce45:	test   rbx,rbx
  43ce48:	je     43cf05 <strcmp@plt+0x3974d>
  43ce4e:	lea    rax,[rsp+0x20]
  43ce53:	mov    QWORD PTR [rsp+0x8],rax
  43ce58:	jmp    43ce6c <strcmp@plt+0x396b4>
  43ce5a:	nop    WORD PTR [rax+rax*1+0x0]
  43ce60:	mov    rbx,QWORD PTR [rbx]
  43ce63:	test   rbx,rbx
  43ce66:	je     43cf00 <strcmp@plt+0x39748>
  43ce6c:	mov    rbp,QWORD PTR [rbx+0x18]
  43ce70:	test   rbp,rbp
  43ce73:	je     43ce60 <strcmp@plt+0x396a8>
  43ce75:	test   BYTE PTR [rbx+0x10],0x1
  43ce79:	je     43ce60 <strcmp@plt+0x396a8>
  43ce7b:	movzx  eax,WORD PTR [rbp+0x0]
  43ce7f:	cmp    eax,r12d
  43ce82:	mov    r15d,eax
  43ce85:	jne    43ce60 <strcmp@plt+0x396a8>
  43ce87:	mov    rdi,QWORD PTR [rbx+0x8]
  43ce8b:	mov    rsi,r14
  43ce8e:	call   4037b8 <strcmp@plt>
  43ce93:	test   eax,eax
  43ce95:	jne    43ce60 <strcmp@plt+0x396a8>
  43ce97:	cmp    r15w,0x2
  43ce9c:	je     43cf90 <strcmp@plt+0x397d8>
  43cea2:	cmp    r15w,0xa
  43cea7:	jne    43ce60 <strcmp@plt+0x396a8>
  43cea9:	lea    rsi,[rbp+0x8]
  43cead:	mov    edx,0xa
  43ceb2:	mov    r15,QWORD PTR [rsp+0x8]
  43ceb7:	mov    rdi,r15
  43ceba:	call   425960 <strcmp@plt+0x221a8>
  43cebf:	mov    rdi,r15
  43cec2:	call   4263c0 <strcmp@plt+0x22c08>
  43cec7:	cmp    eax,0x1
  43ceca:	je     43cfa0 <strcmp@plt+0x397e8>
  43ced0:	xor    eax,eax
  43ced2:	call   424740 <strcmp@plt+0x20f88>
  43ced7:	mov    rsi,QWORD PTR [rsp+0x8]
  43cedc:	mov    rbp,rax
  43cedf:	mov    rdi,rax
  43cee2:	call   424f60 <strcmp@plt+0x217a8>
  43cee7:	mov    rsi,r13
  43ceea:	mov    rdi,rbp
  43ceed:	call   42d540 <strcmp@plt+0x29d88>
  43cef2:	mov    rbx,QWORD PTR [rbx]
  43cef5:	test   rbx,rbx
  43cef8:	jne    43ce6c <strcmp@plt+0x396b4>
  43cefe:	xchg   ax,ax
  43cf00:	mov    rbx,QWORD PTR [rsp+0x18]
  43cf05:	mov    rdi,rbx
  43cf08:	call   4036e0 <freeifaddrs@plt>
  43cf0d:	mov    eax,DWORD PTR [r13+0x18]
  43cf11:	test   eax,eax
  43cf13:	jne    43ce11 <strcmp@plt+0x39659>
  43cf19:	mov    rax,0x468e3c
  43cf20:	cmp    DWORD PTR [rax],0x2
  43cf23:	jle    43ce11 <strcmp@plt+0x39659>
  43cf29:	lea    rax,[rip+0xa9f0]        # 447920 <strcmp@plt+0x44168>
  43cf30:	lea    rdx,[rip+0xa9ee]        # 447925 <strcmp@plt+0x4416d>
  43cf37:	cmp    r12d,0x2
  43cf3b:	lea    rsi,[rip+0x1533e]        # 452280 <strcmp@plt+0x4eac8>
  43cf42:	mov    rcx,r14
  43cf45:	mov    edi,0x7
  43cf4a:	cmove  rdx,rax
  43cf4e:	xor    eax,eax
  43cf50:	call   4306a0 <strcmp@plt+0x2cee8>
  43cf55:	jmp    43ce11 <strcmp@plt+0x39659>
  43cf5a:	nop    WORD PTR [rax+rax*1+0x0]
  43cf60:	call   403050 <__errno_location@plt>
  43cf65:	mov    edi,DWORD PTR [rax]
  43cf67:	call   403170 <strerror@plt>
  43cf6c:	lea    rsi,[rip+0x15355]        # 4522c8 <strcmp@plt+0x4eb10>
  43cf73:	mov    rdx,rax
  43cf76:	mov    edi,0x6
  43cf7b:	xor    eax,eax
  43cf7d:	call   4306a0 <strcmp@plt+0x2cee8>
  43cf82:	jmp    43ce11 <strcmp@plt+0x39659>
  43cf87:	nop    WORD PTR [rax+rax*1+0x0]
  43cf90:	lea    rsi,[rbp+0x4]
  43cf94:	mov    edx,0x2
  43cf99:	jmp    43ceb2 <strcmp@plt+0x396fa>
  43cf9e:	xchg   ax,ax
  43cfa0:	mov    rax,0x468e3c
  43cfa7:	cmp    DWORD PTR [rax],0x1
  43cfaa:	jle    43ce60 <strcmp@plt+0x396a8>
  43cfb0:	mov    rdi,QWORD PTR [rsp+0x8]
  43cfb5:	call   425f90 <strcmp@plt+0x227d8>
  43cfba:	lea    rsi,[rip+0x15337]        # 4522f8 <strcmp@plt+0x4eb40>
  43cfc1:	mov    rcx,rax
  43cfc4:	mov    rdx,r14
  43cfc7:	mov    edi,0x6
  43cfcc:	xor    eax,eax
  43cfce:	call   4306a0 <strcmp@plt+0x2cee8>
  43cfd3:	jmp    43ce60 <strcmp@plt+0x396a8>
  43cfd8:	call   403460 <__stack_chk_fail@plt>
  43cfdd:	nop    DWORD PTR [rax]
  43cfe0:	push   r13
  43cfe2:	push   r12
  43cfe4:	mov    esi,0xa
  43cfe9:	push   rbp
  43cfea:	push   rbx
  43cfeb:	sub    rsp,0x8
  43cfef:	call   43cdc0 <strcmp@plt+0x39608>
  43cff4:	mov    r13,0x473dc0
  43cffb:	mov    rbp,rax
  43cffe:	mov    eax,DWORD PTR [r13+0x0]
  43d002:	test   eax,eax
  43d004:	jne    43d0b0 <strcmp@plt+0x398f8>
  43d00a:	mov    rbx,QWORD PTR [rbp+0x8]
  43d00e:	cmp    rbp,rbx
  43d011:	jne    43d02d <strcmp@plt+0x39875>
  43d013:	xor    r12d,r12d
  43d016:	jmp    43d0b8 <strcmp@plt+0x39900>
  43d01b:	nop    DWORD PTR [rax+rax*1+0x0]
  43d020:	mov    rbx,QWORD PTR [rbx+0x8]
  43d024:	cmp    rbp,rbx
  43d027:	je     43d0d0 <strcmp@plt+0x39918>
  43d02d:	mov    r12,QWORD PTR [rbx+0x10]
  43d031:	mov    rdi,r12
  43d034:	call   4257f0 <strcmp@plt+0x22038>
  43d039:	mov    eax,DWORD PTR [rax]
  43d03b:	and    eax,0xe0
  43d040:	cmp    eax,0x20
  43d043:	jne    43d020 <strcmp@plt+0x39868>
  43d045:	mov    rdi,r12
  43d048:	call   424b80 <strcmp@plt+0x213c8>
  43d04d:	mov    r12,rax
  43d050:	mov    eax,DWORD PTR [r13+0x0]
  43d054:	cmp    eax,0x1
  43d057:	jne    43d0b8 <strcmp@plt+0x39900>
  43d059:	mov    rbx,QWORD PTR [rbp+0x8]
  43d05d:	cmp    rbp,rbx
  43d060:	jne    43d07d <strcmp@plt+0x398c5>
  43d062:	jmp    43d0b8 <strcmp@plt+0x39900>
  43d064:	nop    DWORD PTR [rax+0x0]
  43d068:	and    eax,0xfe
  43d06d:	cmp    eax,0xfc
  43d072:	je     43d09b <strcmp@plt+0x398e3>
  43d074:	mov    rbx,QWORD PTR [rbx+0x8]
  43d078:	cmp    rbp,rbx
  43d07b:	je     43d0b8 <strcmp@plt+0x39900>
  43d07d:	mov    r13,QWORD PTR [rbx+0x10]
  43d081:	mov    rdi,r13
  43d084:	call   4257f0 <strcmp@plt+0x22038>
  43d089:	mov    eax,DWORD PTR [rax]
  43d08b:	mov    edx,eax
  43d08d:	and    edx,0xc0ff
  43d093:	cmp    edx,0xc0fe
  43d099:	jne    43d068 <strcmp@plt+0x398b0>
  43d09b:	mov    rdi,r13
  43d09e:	call   424b80 <strcmp@plt+0x213c8>
  43d0a3:	mov    r12,rax
  43d0a6:	jmp    43d0b8 <strcmp@plt+0x39900>
  43d0a8:	nop    DWORD PTR [rax+rax*1+0x0]
  43d0b0:	xor    r12d,r12d
  43d0b3:	cmp    eax,0x1
  43d0b6:	je     43d059 <strcmp@plt+0x398a1>
  43d0b8:	mov    rdi,rbp
  43d0bb:	call   42dac0 <strcmp@plt+0x2a308>
  43d0c0:	add    rsp,0x8
  43d0c4:	mov    rax,r12
  43d0c7:	pop    rbx
  43d0c8:	pop    rbp
  43d0c9:	pop    r12
  43d0cb:	pop    r13
  43d0cd:	ret    
  43d0ce:	xchg   ax,ax
  43d0d0:	mov    eax,DWORD PTR [r13+0x0]
  43d0d4:	xor    r12d,r12d
  43d0d7:	jmp    43d0b3 <strcmp@plt+0x398fb>
  43d0d9:	nop    DWORD PTR [rax+0x0]
  43d0e0:	push   r14
  43d0e2:	push   r13
  43d0e4:	push   r12
  43d0e6:	push   rbp
  43d0e7:	push   rbx
  43d0e8:	sub    rsp,0x30
  43d0ec:	mov    ebp,DWORD PTR [rdi+0x14]
  43d0ef:	mov    rax,QWORD PTR fs:0x28
  43d0f8:	mov    QWORD PTR [rsp+0x28],rax
  43d0fd:	xor    eax,eax
  43d0ff:	mov    eax,DWORD PTR [rdi]
  43d101:	mov    QWORD PTR [rsp+0x18],0x0
  43d10a:	mov    QWORD PTR [rsp],0x0
  43d112:	mov    QWORD PTR [rsp+0x8],0x0
  43d11b:	mov    QWORD PTR [rsp+0x10],0x0
  43d124:	mov    DWORD PTR [rsp+0x18],0x1
  43d12c:	lea    r13d,[rax-0x18]
  43d130:	cmp    r13d,0x3
  43d134:	jle    43d200 <strcmp@plt+0x39a48>
  43d13a:	movzx  eax,WORD PTR [rdi+0x18]
  43d13e:	mov    r14,rdi
  43d141:	cmp    ax,0x3
  43d145:	jbe    43d200 <strcmp@plt+0x39a48>
  43d14b:	cmp    r13d,eax
  43d14e:	jl     43d200 <strcmp@plt+0x39a48>
  43d154:	lea    r12,[rdi+0x18]
  43d158:	mov    rbx,rsp
  43d15b:	jmp    43d18f <strcmp@plt+0x399d7>
  43d15d:	nop    DWORD PTR [rax]
  43d160:	cmp    al,0xa
  43d162:	je     43d1d0 <strcmp@plt+0x39a18>
  43d164:	movzx  eax,WORD PTR [r12]
  43d169:	add    eax,0x3
  43d16c:	and    eax,0xfffffffc
  43d16f:	sub    r13d,eax
  43d172:	add    r12,rax
  43d175:	cmp    r13d,0x3
  43d179:	jle    43d200 <strcmp@plt+0x39a48>
  43d17f:	movzx  eax,WORD PTR [r12]
  43d184:	cmp    ax,0x3
  43d188:	jbe    43d200 <strcmp@plt+0x39a48>
  43d18a:	cmp    eax,r13d
  43d18d:	jg     43d200 <strcmp@plt+0x39a48>
  43d18f:	movzx  eax,BYTE PTR [r14+0x10]
  43d194:	cmp    al,0x2
  43d196:	jne    43d160 <strcmp@plt+0x399a8>
  43d198:	cmp    WORD PTR [r12+0x2],0x2
  43d19f:	jne    43d164 <strcmp@plt+0x399ac>
  43d1a1:	lea    rsi,[r12+0x4]
  43d1a6:	mov    edx,0x2
  43d1ab:	mov    rdi,rbx
  43d1ae:	call   424f50 <strcmp@plt+0x21798>
  43d1b3:	mov    rdx,rbx
  43d1b6:	mov    esi,ebp
  43d1b8:	mov    edi,0x1
  43d1bd:	call   43b7c0 <strcmp@plt+0x38008>
  43d1c2:	movzx  eax,BYTE PTR [r14+0x10]
  43d1c7:	cmp    al,0xa
  43d1c9:	jne    43d164 <strcmp@plt+0x399ac>
  43d1cb:	nop    DWORD PTR [rax+rax*1+0x0]
  43d1d0:	cmp    WORD PTR [r12+0x2],0x1
  43d1d7:	jne    43d164 <strcmp@plt+0x399ac>
  43d1d9:	lea    rsi,[r12+0x4]
  43d1de:	mov    rdi,rbx
  43d1e1:	mov    edx,0xa
  43d1e6:	call   424f50 <strcmp@plt+0x21798>
  43d1eb:	mov    rdx,rbx
  43d1ee:	mov    esi,ebp
  43d1f0:	mov    edi,0x1
  43d1f5:	call   43b7c0 <strcmp@plt+0x38008>
  43d1fa:	jmp    43d164 <strcmp@plt+0x399ac>
  43d1ff:	nop
  43d200:	mov    rax,QWORD PTR [rsp+0x28]
  43d205:	xor    rax,QWORD PTR fs:0x28
  43d20e:	jne    43d21d <strcmp@plt+0x39a65>
  43d210:	add    rsp,0x30
  43d214:	pop    rbx
  43d215:	pop    rbp
  43d216:	pop    r12
  43d218:	pop    r13
  43d21a:	pop    r14
  43d21c:	ret    
  43d21d:	call   403460 <__stack_chk_fail@plt>
  43d222:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43d22d:	nop    DWORD PTR [rax]
  43d230:	push   rbp
  43d231:	push   rbx
  43d232:	sub    rsp,0x38
  43d236:	mov    ebx,DWORD PTR [rdi+0x14]
  43d239:	mov    rax,QWORD PTR fs:0x28
  43d242:	mov    QWORD PTR [rsp+0x28],rax
  43d247:	xor    eax,eax
  43d249:	mov    eax,DWORD PTR [rdi]
  43d24b:	mov    QWORD PTR [rsp],0x0
  43d253:	mov    QWORD PTR [rsp+0x8],0x0
  43d25c:	mov    QWORD PTR [rsp+0x10],0x0
  43d265:	mov    QWORD PTR [rsp+0x18],0x0
  43d26e:	lea    edx,[rax-0x18]
  43d271:	cmp    edx,0x3
  43d274:	jle    43d2f0 <strcmp@plt+0x39b38>
  43d276:	movzx  eax,WORD PTR [rdi+0x18]
  43d27a:	cmp    ax,0x3
  43d27e:	jbe    43d2f0 <strcmp@plt+0x39b38>
  43d280:	cmp    edx,eax
  43d282:	jl     43d2f0 <strcmp@plt+0x39b38>
  43d284:	lea    rcx,[rdi+0x18]
  43d288:	movzx  esi,BYTE PTR [rdi+0x10]
  43d28c:	jmp    43d2b3 <strcmp@plt+0x39afb>
  43d28e:	xchg   ax,ax
  43d290:	cmp    sil,0xa
  43d294:	je     43d2e0 <strcmp@plt+0x39b28>
  43d296:	add    eax,0x3
  43d299:	and    eax,0xfffffffc
  43d29c:	sub    edx,eax
  43d29e:	add    rcx,rax
  43d2a1:	cmp    edx,0x3
  43d2a4:	jle    43d2f0 <strcmp@plt+0x39b38>
  43d2a6:	movzx  eax,WORD PTR [rcx]
  43d2a9:	cmp    ax,0x3
  43d2ad:	jbe    43d2f0 <strcmp@plt+0x39b38>
  43d2af:	cmp    eax,edx
  43d2b1:	jg     43d2f0 <strcmp@plt+0x39b38>
  43d2b3:	cmp    sil,0x2
  43d2b7:	jne    43d290 <strcmp@plt+0x39ad8>
  43d2b9:	cmp    WORD PTR [rcx+0x2],0x2
  43d2be:	jne    43d296 <strcmp@plt+0x39ade>
  43d2c0:	mov    edx,0x2
  43d2c5:	lea    rsi,[rcx+0x4]
  43d2c9:	mov    rdi,rsp
  43d2cc:	mov    rbp,rsp
  43d2cf:	call   424f50 <strcmp@plt+0x21798>
  43d2d4:	jmp    43d2f3 <strcmp@plt+0x39b3b>
  43d2d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d2e0:	cmp    WORD PTR [rcx+0x2],0x1
  43d2e5:	jne    43d296 <strcmp@plt+0x39ade>
  43d2e7:	mov    edx,0xa
  43d2ec:	jmp    43d2c5 <strcmp@plt+0x39b0d>
  43d2ee:	xchg   ax,ax
  43d2f0:	mov    rbp,rsp
  43d2f3:	xor    edi,edi
  43d2f5:	mov    rdx,rbp
  43d2f8:	mov    esi,ebx
  43d2fa:	call   43b7c0 <strcmp@plt+0x38008>
  43d2ff:	mov    rax,QWORD PTR [rsp+0x28]
  43d304:	xor    rax,QWORD PTR fs:0x28
  43d30d:	jne    43d316 <strcmp@plt+0x39b5e>
  43d30f:	add    rsp,0x38
  43d313:	pop    rbx
  43d314:	pop    rbp
  43d315:	ret    
  43d316:	call   403460 <__stack_chk_fail@plt>
  43d31b:	nop    DWORD PTR [rax+rax*1+0x0]
  43d320:	push   r12
  43d322:	push   rbp
  43d323:	mov    rbp,rdi
  43d326:	push   rbx
  43d327:	sub    rsp,0x20
  43d32b:	mov    ebx,DWORD PTR [rdi+0x14]
  43d32e:	mov    rax,QWORD PTR fs:0x28
  43d337:	mov    QWORD PTR [rsp+0x18],rax
  43d33c:	xor    eax,eax
  43d33e:	mov    edi,ebx
  43d340:	call   43e6f0 <strcmp@plt+0x3af38>
  43d345:	test   rax,rax
  43d348:	je     43d378 <strcmp@plt+0x39bc0>
  43d34a:	mov    edi,ebx
  43d34c:	mov    edx,DWORD PTR [rbp+0x18]
  43d34f:	mov    esi,ebx
  43d351:	shr    edx,0x6
  43d354:	and    edx,0x1
  43d357:	call   43bc60 <strcmp@plt+0x384a8>
  43d35c:	mov    rax,QWORD PTR [rsp+0x18]
  43d361:	xor    rax,QWORD PTR fs:0x28
  43d36a:	jne    43d3c4 <strcmp@plt+0x39c0c>
  43d36c:	add    rsp,0x20
  43d370:	pop    rbx
  43d371:	pop    rbp
  43d372:	pop    r12
  43d374:	ret    
  43d375:	nop    DWORD PTR [rax]
  43d378:	mov    rsi,rsp
  43d37b:	mov    edi,ebx
  43d37d:	mov    r12,rsp
  43d380:	call   403760 <if_indextoname@plt>
  43d385:	test   rax,rax
  43d388:	je     43d3a0 <strcmp@plt+0x39be8>
  43d38a:	mov    rdi,rsp
  43d38d:	call   43e680 <strcmp@plt+0x3aec8>
  43d392:	test   rax,rax
  43d395:	je     43d3a0 <strcmp@plt+0x39be8>
  43d397:	mov    edi,DWORD PTR [rax+0x8]
  43d39a:	jmp    43d34c <strcmp@plt+0x39b94>
  43d39c:	nop    DWORD PTR [rax+0x0]
  43d3a0:	mov    rax,0x468e3c
  43d3a7:	cmp    DWORD PTR [rax],0x1
  43d3aa:	jle    43d35c <strcmp@plt+0x39ba4>
  43d3ac:	lea    rsi,[rip+0x14f8d]        # 452340 <strcmp@plt+0x4eb88>
  43d3b3:	mov    rdx,r12
  43d3b6:	mov    edi,0x6
  43d3bb:	xor    eax,eax
  43d3bd:	call   4306a0 <strcmp@plt+0x2cee8>
  43d3c2:	jmp    43d35c <strcmp@plt+0x39ba4>
  43d3c4:	call   403460 <__stack_chk_fail@plt>
  43d3c9:	nop    DWORD PTR [rax+0x0]
  43d3d0:	push   r15
  43d3d2:	push   r14
  43d3d4:	push   r13
  43d3d6:	push   r12
  43d3d8:	push   rbp
  43d3d9:	push   rbx
  43d3da:	sub    rsp,0x88
  43d3e1:	mov    rax,QWORD PTR fs:0x28
  43d3ea:	mov    QWORD PTR [rsp+0x78],rax
  43d3ef:	xor    eax,eax
  43d3f1:	cmp    BYTE PTR [rdi+0x4],0xfe
  43d3f5:	mov    QWORD PTR [rsp+0x10],0x0
  43d3fe:	mov    QWORD PTR [rsp+0x18],0x0
  43d407:	mov    QWORD PTR [rsp+0x20],0x0
  43d410:	mov    QWORD PTR [rsp+0x28],0x0
  43d419:	mov    QWORD PTR [rsp+0x30],0x0
  43d422:	mov    QWORD PTR [rsp+0x38],0x0
  43d42b:	mov    QWORD PTR [rsp+0x40],0x0
  43d434:	mov    QWORD PTR [rsp+0x48],0x0
  43d43d:	mov    QWORD PTR [rsp+0x50],0x0
  43d446:	mov    QWORD PTR [rsp+0x58],0x0
  43d44f:	mov    QWORD PTR [rsp+0x60],0x0
  43d458:	mov    QWORD PTR [rsp+0x68],0x0
  43d461:	je     43d490 <strcmp@plt+0x39cd8>
  43d463:	mov    rax,QWORD PTR [rsp+0x78]
  43d468:	xor    rax,QWORD PTR fs:0x28
  43d471:	jne    43d61e <strcmp@plt+0x39e66>
  43d477:	add    rsp,0x88
  43d47e:	pop    rbx
  43d47f:	pop    rbp
  43d480:	pop    r12
  43d482:	pop    r13
  43d484:	pop    r14
  43d486:	pop    r15
  43d488:	ret    
  43d489:	nop    DWORD PTR [rax+0x0]
  43d490:	movzx  edx,BYTE PTR [rdi]
  43d493:	mov    r15,rdi
  43d496:	mov    eax,edx
  43d498:	and    eax,0xfffffff7
  43d49b:	cmp    al,0x2
  43d49d:	jne    43d588 <strcmp@plt+0x39dd0>
  43d4a3:	movzx  eax,BYTE PTR [rdi+0x2]
  43d4a7:	cmp    esi,0x3
  43d4aa:	mov    r13d,esi
  43d4ad:	lea    r14,[rdi+0xc]
  43d4b1:	mov    DWORD PTR [rsp+0x8],eax
  43d4b5:	movzx  eax,BYTE PTR [rdi+0x1]
  43d4b9:	mov    DWORD PTR [rsp+0xc],eax
  43d4bd:	jle    43d604 <strcmp@plt+0x39e4c>
  43d4c3:	movzx  eax,WORD PTR [rdi+0xc]
  43d4c7:	cmp    ax,0x3
  43d4cb:	jbe    43d604 <strcmp@plt+0x39e4c>
  43d4d1:	cmp    esi,eax
  43d4d3:	jl     43d604 <strcmp@plt+0x39e4c>
  43d4d9:	lea    rax,[rsp+0x10]
  43d4de:	mov    r12d,0xffffffff
  43d4e4:	lea    rbx,[rsp+0x30]
  43d4e9:	lea    rbp,[rsp+0x50]
  43d4ee:	mov    QWORD PTR [rsp],rax
  43d4f2:	jmp    43d551 <strcmp@plt+0x39d99>
  43d4f4:	nop    DWORD PTR [rax+0x0]
  43d4f8:	cmp    ax,0x4
  43d4fc:	je     43d5b0 <strcmp@plt+0x39df8>
  43d502:	cmp    ax,0x5
  43d506:	jne    43d520 <strcmp@plt+0x39d68>
  43d508:	movzx  edx,BYTE PTR [r15]
  43d50c:	mov    rdi,QWORD PTR [rsp]
  43d510:	lea    rsi,[r14+0x4]
  43d514:	call   424f50 <strcmp@plt+0x21798>
  43d519:	nop    DWORD PTR [rax+0x0]
  43d520:	movzx  eax,WORD PTR [r14]
  43d524:	add    eax,0x3
  43d527:	and    eax,0xfffffffc
  43d52a:	sub    r13d,eax
  43d52d:	add    r14,rax
  43d530:	cmp    r13d,0x3
  43d534:	jle    43d5e8 <strcmp@plt+0x39e30>
  43d53a:	movzx  eax,WORD PTR [r14]
  43d53e:	cmp    ax,0x3
  43d542:	jbe    43d5e8 <strcmp@plt+0x39e30>
  43d548:	cmp    eax,r13d
  43d54b:	jg     43d5e8 <strcmp@plt+0x39e30>
  43d551:	movzx  eax,WORD PTR [r14+0x2]
  43d556:	cmp    ax,0x2
  43d55a:	je     43d5c0 <strcmp@plt+0x39e08>
  43d55c:	ja     43d4f8 <strcmp@plt+0x39d40>
  43d55e:	cmp    ax,0x1
  43d562:	jne    43d520 <strcmp@plt+0x39d68>
  43d564:	movzx  edx,BYTE PTR [r15]
  43d568:	lea    rsi,[r14+0x4]
  43d56c:	mov    rdi,rbp
  43d56f:	call   424f50 <strcmp@plt+0x21798>
  43d574:	mov    esi,DWORD PTR [rsp+0xc]
  43d578:	mov    rdi,rbp
  43d57b:	call   425300 <strcmp@plt+0x21b48>
  43d580:	jmp    43d520 <strcmp@plt+0x39d68>
  43d582:	nop    WORD PTR [rax+rax*1+0x0]
  43d588:	mov    rax,0x468e3c
  43d58f:	cmp    DWORD PTR [rax],0x2
  43d592:	jle    43d463 <strcmp@plt+0x39cab>
  43d598:	lea    rsi,[rip+0x14e01]        # 4523a0 <strcmp@plt+0x4ebe8>
  43d59f:	mov    edi,0x7
  43d5a4:	xor    eax,eax
  43d5a6:	call   4306a0 <strcmp@plt+0x2cee8>
  43d5ab:	jmp    43d463 <strcmp@plt+0x39cab>
  43d5b0:	mov    r12d,DWORD PTR [r14+0x4]
  43d5b4:	jmp    43d520 <strcmp@plt+0x39d68>
  43d5b9:	nop    DWORD PTR [rax+0x0]
  43d5c0:	movzx  edx,BYTE PTR [r15]
  43d5c4:	lea    rsi,[r14+0x4]
  43d5c8:	mov    rdi,rbx
  43d5cb:	call   424f50 <strcmp@plt+0x21798>
  43d5d0:	mov    esi,DWORD PTR [rsp+0x8]
  43d5d4:	mov    rdi,rbx
  43d5d7:	call   425300 <strcmp@plt+0x21b48>
  43d5dc:	jmp    43d520 <strcmp@plt+0x39d68>
  43d5e1:	nop    DWORD PTR [rax+0x0]
  43d5e8:	mov    esi,r12d
  43d5eb:	mov    r8,QWORD PTR [rsp]
  43d5ef:	mov    rcx,rbp
  43d5f2:	mov    rdx,rbx
  43d5f5:	mov    edi,0x1
  43d5fa:	call   43bdb0 <strcmp@plt+0x385f8>
  43d5ff:	jmp    43d463 <strcmp@plt+0x39cab>
  43d604:	lea    rax,[rsp+0x10]
  43d609:	mov    esi,0xffffffff
  43d60e:	lea    rbx,[rsp+0x30]
  43d613:	lea    rbp,[rsp+0x50]
  43d618:	mov    QWORD PTR [rsp],rax
  43d61c:	jmp    43d5eb <strcmp@plt+0x39e33>
  43d61e:	call   403460 <__stack_chk_fail@plt>
  43d623:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43d62e:	xchg   ax,ax
  43d630:	mov    rax,0x468e3c
  43d637:	mov    eax,DWORD PTR [rax]
  43d639:	test   eax,eax
  43d63b:	jg     43d640 <strcmp@plt+0x39e88>
  43d63d:	repz ret 
  43d63f:	nop
  43d640:	lea    rsi,[rip+0x14da9]        # 4523f0 <strcmp@plt+0x4ec38>
  43d647:	mov    edi,0x5
  43d64c:	xor    eax,eax
  43d64e:	jmp    4306a0 <strcmp@plt+0x2cee8>
  43d653:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43d65e:	xchg   ax,ax
  43d660:	mov    eax,DWORD PTR [rdi]
  43d662:	lea    rdx,[rdi+0x10]
  43d666:	lea    esi,[rax-0x1c]
  43d669:	movzx  eax,BYTE PTR [rdi+0x17]
  43d66d:	cmp    al,0x1
  43d66f:	je     43d690 <strcmp@plt+0x39ed8>
  43d671:	cmp    al,0x5
  43d673:	je     43d680 <strcmp@plt+0x39ec8>
  43d675:	repz ret 
  43d677:	nop    WORD PTR [rax+rax*1+0x0]
  43d680:	mov    rdi,rdx
  43d683:	jmp    43d630 <strcmp@plt+0x39e78>
  43d688:	nop    DWORD PTR [rax+rax*1+0x0]
  43d690:	mov    rdi,rdx
  43d693:	jmp    43d3d0 <strcmp@plt+0x39c18>
  43d698:	nop    DWORD PTR [rax+rax*1+0x0]
  43d6a0:	push   r15
  43d6a2:	push   r14
  43d6a4:	push   r13
  43d6a6:	push   r12
  43d6a8:	push   rbp
  43d6a9:	push   rbx
  43d6aa:	mov    rbx,rdi
  43d6ad:	sub    rsp,0x468
  43d6b4:	mov    rax,QWORD PTR fs:0x28
  43d6bd:	mov    QWORD PTR [rsp+0x458],rax
  43d6c5:	xor    eax,eax
  43d6c7:	lea    rax,[rsp+0x50]
  43d6cc:	mov    QWORD PTR [rsp+0x20],rdx
  43d6d1:	mov    QWORD PTR [rsp+0x18],rdi
  43d6d6:	mov    QWORD PTR [rsp+0x28],rcx
  43d6db:	mov    ecx,0x80
  43d6e0:	mov    DWORD PTR [rsp+0xc],esi
  43d6e4:	mov    rdx,rax
  43d6e7:	mov    QWORD PTR [rsp+0x10],rax
  43d6ec:	xor    eax,eax
  43d6ee:	mov    rdi,rdx
  43d6f1:	cmp    esi,0x3
  43d6f4:	rep stos QWORD PTR es:[rdi],rax
  43d6f7:	jle    43d915 <strcmp@plt+0x3a15d>
  43d6fd:	mov    rax,QWORD PTR [rsp+0x18]
  43d702:	lea    rbp,[rbx+0xc]
  43d706:	movzx  ebx,WORD PTR [rax+0xc]
  43d70a:	cmp    bx,0x3
  43d70e:	jbe    43d915 <strcmp@plt+0x3a15d>
  43d714:	cmp    DWORD PTR [rsp+0xc],ebx
  43d718:	jl     43d915 <strcmp@plt+0x3a15d>
  43d71e:	xor    r14d,r14d
  43d721:	lea    r12,[rsp+0x30]
  43d726:	jmp    43d776 <strcmp@plt+0x39fbe>
  43d728:	nop    DWORD PTR [rax+rax*1+0x0]
  43d730:	cmp    ax,0x9
  43d734:	je     43d7e0 <strcmp@plt+0x3a028>
  43d73a:	cmp    ax,0x1
  43d73e:	je     43d7b0 <strcmp@plt+0x39ff8>
  43d740:	movzx  eax,WORD PTR [rbp+0x0]
  43d744:	add    eax,0x3
  43d747:	and    eax,0xfffffffc
  43d74a:	sub    DWORD PTR [rsp+0xc],eax
  43d74e:	mov    ecx,DWORD PTR [rsp+0xc]
  43d752:	add    rbp,rax
  43d755:	cmp    ecx,0x3
  43d758:	jle    43d910 <strcmp@plt+0x3a158>
  43d75e:	movzx  ebx,WORD PTR [rbp+0x0]
  43d762:	cmp    bx,0x3
  43d766:	jbe    43d910 <strcmp@plt+0x3a158>
  43d76c:	cmp    ebx,DWORD PTR [rsp+0xc]
  43d770:	jg     43d910 <strcmp@plt+0x3a158>
  43d776:	movzx  eax,WORD PTR [rbp+0x2]
  43d77a:	cmp    ax,0x2
  43d77e:	jne    43d730 <strcmp@plt+0x39f78>
  43d780:	mov    rax,QWORD PTR [rsp+0x18]
  43d785:	movzx  eax,BYTE PTR [rax]
  43d788:	cmp    al,0x80
  43d78a:	je     43d8d0 <strcmp@plt+0x3a118>
  43d790:	cmp    al,0x81
  43d792:	jne    43d740 <strcmp@plt+0x39f88>
  43d794:	mov    rdi,QWORD PTR [rsp+0x20]
  43d799:	lea    rsi,[rbp+0x4]
  43d79d:	mov    edx,0xa
  43d7a2:	call   424f50 <strcmp@plt+0x21798>
  43d7a7:	jmp    43d740 <strcmp@plt+0x39f88>
  43d7a9:	nop    DWORD PTR [rax+0x0]
  43d7b0:	mov    rax,QWORD PTR [rsp+0x18]
  43d7b5:	movzx  eax,BYTE PTR [rax]
  43d7b8:	cmp    al,0x80
  43d7ba:	je     43d8f0 <strcmp@plt+0x3a138>
  43d7c0:	cmp    al,0x81
  43d7c2:	jne    43d740 <strcmp@plt+0x39f88>
  43d7c8:	mov    rdi,QWORD PTR [rsp+0x28]
  43d7cd:	lea    rsi,[rbp+0x4]
  43d7d1:	mov    edx,0xa
  43d7d6:	call   424f50 <strcmp@plt+0x21798>
  43d7db:	jmp    43d740 <strcmp@plt+0x39f88>
  43d7e0:	movzx  eax,WORD PTR [rbp+0x4]
  43d7e4:	sub    ebx,0x4
  43d7e7:	lea    r15,[rbp+0x4]
  43d7eb:	cmp    ax,0x7
  43d7ef:	jbe    43d740 <strcmp@plt+0x39f88>
  43d7f5:	cmp    ebx,eax
  43d7f7:	jl     43d740 <strcmp@plt+0x39f88>
  43d7fd:	mov    rax,r15
  43d800:	mov    r15d,ebx
  43d803:	mov    rbx,rax
  43d806:	jmp    43d863 <strcmp@plt+0x3a0ab>
  43d808:	nop    DWORD PTR [rax+rax*1+0x0]
  43d810:	mov    edi,DWORD PTR [rbx+0x4]
  43d813:	mov    rsi,r12
  43d816:	add    r14d,0x1
  43d81a:	call   403760 <if_indextoname@plt>
  43d81f:	mov    rdi,QWORD PTR [rsp+0x10]
  43d824:	lea    rcx,[rip+0x109fc]        # 44e227 <strcmp@plt+0x4aa6f>
  43d82b:	xor    eax,eax
  43d82d:	mov    r8,r12
  43d830:	mov    edx,0x400
  43d835:	mov    esi,0x1
  43d83a:	call   403290 <__sprintf_chk@plt>
  43d83f:	movzx  eax,WORD PTR [rbx]
  43d842:	add    eax,0x3
  43d845:	and    eax,0x1fffc
  43d84a:	add    rbx,rax
  43d84d:	movzx  eax,WORD PTR [rbx]
  43d850:	cmp    ax,0x7
  43d854:	jbe    43d740 <strcmp@plt+0x39f88>
  43d85a:	cmp    r15d,eax
  43d85d:	jl     43d740 <strcmp@plt+0x39f88>
  43d863:	mov    edi,DWORD PTR [rbx+0x4]
  43d866:	call   43e6f0 <strcmp@plt+0x3af38>
  43d86b:	mov    r13d,DWORD PTR [rbp+0x4]
  43d86f:	mov    edi,r13d
  43d872:	call   43e6f0 <strcmp@plt+0x3af38>
  43d877:	test   rax,rax
  43d87a:	je     43d810 <strcmp@plt+0x3a058>
  43d87c:	mov    rsi,r12
  43d87f:	mov    edi,r13d
  43d882:	call   403760 <if_indextoname@plt>
  43d887:	lea    rsi,[rip+0x14ba2]        # 452430 <strcmp@plt+0x4ec78>
  43d88e:	xor    eax,eax
  43d890:	mov    rdx,r12
  43d893:	mov    edi,0x4
  43d898:	call   4306a0 <strcmp@plt+0x2cee8>
  43d89d:	xor    eax,eax
  43d89f:	mov    rdx,QWORD PTR [rsp+0x458]
  43d8a7:	xor    rdx,QWORD PTR fs:0x28
  43d8b0:	jne    43d982 <strcmp@plt+0x3a1ca>
  43d8b6:	add    rsp,0x468
  43d8bd:	pop    rbx
  43d8be:	pop    rbp
  43d8bf:	pop    r12
  43d8c1:	pop    r13
  43d8c3:	pop    r14
  43d8c5:	pop    r15
  43d8c7:	ret    
  43d8c8:	nop    DWORD PTR [rax+rax*1+0x0]
  43d8d0:	mov    rdi,QWORD PTR [rsp+0x20]
  43d8d5:	lea    rsi,[rbp+0x4]
  43d8d9:	mov    edx,0x2
  43d8de:	call   424f50 <strcmp@plt+0x21798>
  43d8e3:	jmp    43d740 <strcmp@plt+0x39f88>
  43d8e8:	nop    DWORD PTR [rax+rax*1+0x0]
  43d8f0:	mov    rdi,QWORD PTR [rsp+0x28]
  43d8f5:	lea    rsi,[rbp+0x4]
  43d8f9:	mov    edx,0x2
  43d8fe:	call   424f50 <strcmp@plt+0x21798>
  43d903:	jmp    43d740 <strcmp@plt+0x39f88>
  43d908:	nop    DWORD PTR [rax+rax*1+0x0]
  43d910:	test   r14d,r14d
  43d913:	jne    43d943 <strcmp@plt+0x3a18b>
  43d915:	mov    rax,0x468e3c
  43d91c:	mov    eax,DWORD PTR [rax]
  43d91e:	test   eax,eax
  43d920:	jg     43d929 <strcmp@plt+0x3a171>
  43d922:	xor    eax,eax
  43d924:	jmp    43d89f <strcmp@plt+0x3a0e7>
  43d929:	lea    rsi,[rip+0x14bc0]        # 4524f0 <strcmp@plt+0x4ed38>
  43d930:	xor    eax,eax
  43d932:	mov    edi,0x5
  43d937:	call   4306a0 <strcmp@plt+0x2cee8>
  43d93c:	xor    eax,eax
  43d93e:	jmp    43d89f <strcmp@plt+0x3a0e7>
  43d943:	mov    rdi,QWORD PTR [rsp+0x28]
  43d948:	call   424890 <strcmp@plt+0x210d8>
  43d94d:	mov    rdi,QWORD PTR [rsp+0x20]
  43d952:	mov    rbx,rax
  43d955:	call   424890 <strcmp@plt+0x210d8>
  43d95a:	mov    r8,QWORD PTR [rsp+0x10]
  43d95f:	lea    rsi,[rip+0x14b4a]        # 4524b0 <strcmp@plt+0x4ecf8>
  43d966:	mov    rdx,rax
  43d969:	mov    rcx,rbx
  43d96c:	xor    eax,eax
  43d96e:	mov    edi,0x4
  43d973:	call   4306a0 <strcmp@plt+0x2cee8>
  43d978:	mov    eax,0x1
  43d97d:	jmp    43d89f <strcmp@plt+0x3a0e7>
  43d982:	call   403460 <__stack_chk_fail@plt>
  43d987:	nop    WORD PTR [rax+rax*1+0x0]
  43d990:	push   r15
  43d992:	push   r14
  43d994:	push   r13
  43d996:	push   r12
  43d998:	push   rbp
  43d999:	push   rbx
  43d99a:	sub    rsp,0x88
  43d9a1:	mov    rax,QWORD PTR fs:0x28
  43d9aa:	mov    QWORD PTR [rsp+0x78],rax
  43d9af:	xor    eax,eax
  43d9b1:	cmp    BYTE PTR [rdi+0x4],0xfe
  43d9b5:	mov    QWORD PTR [rsp+0x10],0x0
  43d9be:	mov    QWORD PTR [rsp+0x18],0x0
  43d9c7:	mov    QWORD PTR [rsp+0x20],0x0
  43d9d0:	mov    QWORD PTR [rsp+0x28],0x0
  43d9d9:	mov    QWORD PTR [rsp+0x30],0x0
  43d9e2:	mov    QWORD PTR [rsp+0x38],0x0
  43d9eb:	mov    QWORD PTR [rsp+0x40],0x0
  43d9f4:	mov    QWORD PTR [rsp+0x48],0x0
  43d9fd:	mov    QWORD PTR [rsp+0x50],0x0
  43da06:	mov    QWORD PTR [rsp+0x58],0x0
  43da0f:	mov    QWORD PTR [rsp+0x60],0x0
  43da18:	mov    QWORD PTR [rsp+0x68],0x0
  43da21:	je     43da50 <strcmp@plt+0x3a298>
  43da23:	mov    rax,QWORD PTR [rsp+0x78]
  43da28:	xor    rax,QWORD PTR fs:0x28
  43da31:	jne    43dbdb <strcmp@plt+0x3a423>
  43da37:	add    rsp,0x88
  43da3e:	pop    rbx
  43da3f:	pop    rbp
  43da40:	pop    r12
  43da42:	pop    r13
  43da44:	pop    r14
  43da46:	pop    r15
  43da48:	ret    
  43da49:	nop    DWORD PTR [rax+0x0]
  43da50:	movzx  edx,BYTE PTR [rdi]
  43da53:	mov    r15,rdi
  43da56:	mov    eax,edx
  43da58:	and    eax,0xfffffff7
  43da5b:	cmp    al,0x2
  43da5d:	jne    43db48 <strcmp@plt+0x3a390>
  43da63:	movzx  eax,BYTE PTR [rdi+0x2]
  43da67:	cmp    esi,0x3
  43da6a:	mov    r13d,esi
  43da6d:	lea    r14,[rdi+0xc]
  43da71:	mov    DWORD PTR [rsp+0x8],eax
  43da75:	movzx  eax,BYTE PTR [rdi+0x1]
  43da79:	mov    DWORD PTR [rsp+0xc],eax
  43da7d:	jle    43dbc1 <strcmp@plt+0x3a409>
  43da83:	movzx  eax,WORD PTR [rdi+0xc]
  43da87:	cmp    ax,0x3
  43da8b:	jbe    43dbc1 <strcmp@plt+0x3a409>
  43da91:	cmp    esi,eax
  43da93:	jl     43dbc1 <strcmp@plt+0x3a409>
  43da99:	lea    rax,[rsp+0x10]
  43da9e:	mov    r12d,0xffffffff
  43daa4:	lea    rbx,[rsp+0x30]
  43daa9:	lea    rbp,[rsp+0x50]
  43daae:	mov    QWORD PTR [rsp],rax
  43dab2:	jmp    43db11 <strcmp@plt+0x3a359>
  43dab4:	nop    DWORD PTR [rax+0x0]
  43dab8:	cmp    ax,0x4
  43dabc:	je     43db70 <strcmp@plt+0x3a3b8>
  43dac2:	cmp    ax,0x5
  43dac6:	jne    43dae0 <strcmp@plt+0x3a328>
  43dac8:	movzx  edx,BYTE PTR [r15]
  43dacc:	mov    rdi,QWORD PTR [rsp]
  43dad0:	lea    rsi,[r14+0x4]
  43dad4:	call   424f50 <strcmp@plt+0x21798>
  43dad9:	nop    DWORD PTR [rax+0x0]
  43dae0:	movzx  eax,WORD PTR [r14]
  43dae4:	add    eax,0x3
  43dae7:	and    eax,0xfffffffc
  43daea:	sub    r13d,eax
  43daed:	add    r14,rax
  43daf0:	cmp    r13d,0x3
  43daf4:	jle    43dba8 <strcmp@plt+0x3a3f0>
  43dafa:	movzx  eax,WORD PTR [r14]
  43dafe:	cmp    ax,0x3
  43db02:	jbe    43dba8 <strcmp@plt+0x3a3f0>
  43db08:	cmp    eax,r13d
  43db0b:	jg     43dba8 <strcmp@plt+0x3a3f0>
  43db11:	movzx  eax,WORD PTR [r14+0x2]
  43db16:	cmp    ax,0x2
  43db1a:	je     43db80 <strcmp@plt+0x3a3c8>
  43db1c:	ja     43dab8 <strcmp@plt+0x3a300>
  43db1e:	cmp    ax,0x1
  43db22:	jne    43dae0 <strcmp@plt+0x3a328>
  43db24:	movzx  edx,BYTE PTR [r15]
  43db28:	lea    rsi,[r14+0x4]
  43db2c:	mov    rdi,rbp
  43db2f:	call   424f50 <strcmp@plt+0x21798>
  43db34:	mov    esi,DWORD PTR [rsp+0xc]
  43db38:	mov    rdi,rbp
  43db3b:	call   425300 <strcmp@plt+0x21b48>
  43db40:	jmp    43dae0 <strcmp@plt+0x3a328>
  43db42:	nop    WORD PTR [rax+rax*1+0x0]
  43db48:	mov    rax,0x468e3c
  43db4f:	cmp    DWORD PTR [rax],0x2
  43db52:	jle    43da23 <strcmp@plt+0x3a26b>
  43db58:	lea    rsi,[rip+0x149f1]        # 452550 <strcmp@plt+0x4ed98>
  43db5f:	mov    edi,0x7
  43db64:	xor    eax,eax
  43db66:	call   4306a0 <strcmp@plt+0x2cee8>
  43db6b:	jmp    43da23 <strcmp@plt+0x3a26b>
  43db70:	mov    r12d,DWORD PTR [r14+0x4]
  43db74:	jmp    43dae0 <strcmp@plt+0x3a328>
  43db79:	nop    DWORD PTR [rax+0x0]
  43db80:	movzx  edx,BYTE PTR [r15]
  43db84:	lea    rsi,[r14+0x4]
  43db88:	mov    rdi,rbx
  43db8b:	call   424f50 <strcmp@plt+0x21798>
  43db90:	mov    esi,DWORD PTR [rsp+0x8]
  43db94:	mov    rdi,rbx
  43db97:	call   425300 <strcmp@plt+0x21b48>
  43db9c:	jmp    43dae0 <strcmp@plt+0x3a328>
  43dba1:	nop    DWORD PTR [rax+0x0]
  43dba8:	mov    esi,r12d
  43dbab:	mov    r8,QWORD PTR [rsp]
  43dbaf:	mov    rcx,rbp
  43dbb2:	mov    rdx,rbx
  43dbb5:	xor    edi,edi
  43dbb7:	call   43bdb0 <strcmp@plt+0x385f8>
  43dbbc:	jmp    43da23 <strcmp@plt+0x3a26b>
  43dbc1:	lea    rax,[rsp+0x10]
  43dbc6:	mov    esi,0xffffffff
  43dbcb:	lea    rbx,[rsp+0x30]
  43dbd0:	lea    rbp,[rsp+0x50]
  43dbd5:	mov    QWORD PTR [rsp],rax
  43dbd9:	jmp    43dbab <strcmp@plt+0x3a3f3>
  43dbdb:	call   403460 <__stack_chk_fail@plt>
  43dbe0:	sub    rsp,0x58
  43dbe4:	mov    rax,QWORD PTR fs:0x28
  43dbed:	mov    QWORD PTR [rsp+0x48],rax
  43dbf2:	xor    eax,eax
  43dbf4:	movzx  eax,BYTE PTR [rdi+0x4]
  43dbf8:	mov    QWORD PTR [rsp+0x18],0x0
  43dc01:	mov    QWORD PTR [rsp+0x38],0x0
  43dc0a:	mov    QWORD PTR [rsp],0x0
  43dc12:	mov    QWORD PTR [rsp+0x8],0x0
  43dc1b:	mov    QWORD PTR [rsp+0x10],0x0
  43dc24:	mov    DWORD PTR [rsp+0x18],0x1
  43dc2c:	mov    QWORD PTR [rsp+0x20],0x0
  43dc35:	cmp    al,0xfd
  43dc37:	mov    QWORD PTR [rsp+0x28],0x0
  43dc40:	mov    QWORD PTR [rsp+0x30],0x0
  43dc49:	mov    DWORD PTR [rsp+0x38],0x1
  43dc51:	je     43dc88 <strcmp@plt+0x3a4d0>
  43dc53:	cmp    al,0xfe
  43dc55:	je     43dc70 <strcmp@plt+0x3a4b8>
  43dc57:	mov    rax,QWORD PTR [rsp+0x48]
  43dc5c:	xor    rax,QWORD PTR fs:0x28
  43dc65:	jne    43dc8f <strcmp@plt+0x3a4d7>
  43dc67:	add    rsp,0x58
  43dc6b:	ret    
  43dc6c:	nop    DWORD PTR [rax+0x0]
  43dc70:	cmp    BYTE PTR [rdi],0x81
  43dc73:	jne    43dc57 <strcmp@plt+0x3a49f>
  43dc75:	lea    rdx,[rsp+0x20]
  43dc7a:	mov    rcx,rsp
  43dc7d:	call   43d6a0 <strcmp@plt+0x39ee8>
  43dc82:	jmp    43dc57 <strcmp@plt+0x3a49f>
  43dc84:	nop    DWORD PTR [rax+0x0]
  43dc88:	cmp    BYTE PTR [rdi],0x80
  43dc8b:	jne    43dc57 <strcmp@plt+0x3a49f>
  43dc8d:	jmp    43dc75 <strcmp@plt+0x3a4bd>
  43dc8f:	call   403460 <__stack_chk_fail@plt>
  43dc94:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43dc9f:	nop
  43dca0:	mov    eax,DWORD PTR [rdi]
  43dca2:	lea    rdx,[rdi+0x10]
  43dca6:	lea    esi,[rax-0x1c]
  43dca9:	movzx  eax,BYTE PTR [rdi+0x17]
  43dcad:	cmp    al,0x1
  43dcaf:	je     43dcd0 <strcmp@plt+0x3a518>
  43dcb1:	cmp    al,0x5
  43dcb3:	je     43dcc0 <strcmp@plt+0x3a508>
  43dcb5:	repz ret 
  43dcb7:	nop    WORD PTR [rax+rax*1+0x0]
  43dcc0:	mov    rdi,rdx
  43dcc3:	jmp    43dbe0 <strcmp@plt+0x3a428>
  43dcc8:	nop    DWORD PTR [rax+rax*1+0x0]
  43dcd0:	mov    rdi,rdx
  43dcd3:	jmp    43d990 <strcmp@plt+0x3a1d8>
  43dcd8:	nop    DWORD PTR [rax+rax*1+0x0]
  43dce0:	push   r14
  43dce2:	push   r13
  43dce4:	mov    ecx,0x7
  43dce9:	push   r12
  43dceb:	push   rbp
  43dcec:	mov    r12,rdi
  43dcef:	push   rbx
  43dcf0:	lea    rbx,[rip+0x14abd]        # 4527b4 <strcmp@plt+0x4effc>
  43dcf7:	sub    rsp,0x1070
  43dcfe:	lea    rdx,[rsp+0x20]
  43dd03:	lea    rsi,[rsp+0x10]
  43dd08:	lea    rbp,[rsp+0x60]
  43dd0d:	mov    rax,QWORD PTR fs:0x28
  43dd16:	mov    QWORD PTR [rsp+0x1068],rax
  43dd1e:	xor    eax,eax
  43dd20:	mov    rdi,rdx
  43dd23:	mov    QWORD PTR [rsp+0x10],rbp
  43dd28:	mov    QWORD PTR [rsp+0x18],0x8
  43dd31:	rep stos QWORD PTR es:[rdi],rax
  43dd34:	lea    rax,[rsp+0x4]
  43dd39:	mov    DWORD PTR [rsp+0x28],0xc
  43dd41:	mov    QWORD PTR [rsp+0x30],rsi
  43dd46:	mov    QWORD PTR [rsp+0x38],0x1
  43dd4f:	mov    QWORD PTR [rsp+0x20],rax
  43dd54:	nop    DWORD PTR [rax+0x0]
  43dd58:	mov    edi,DWORD PTR [r12+0x18]
  43dd5d:	mov    ecx,0x40
  43dd62:	mov    edx,0x1000
  43dd67:	mov    rsi,rbp
  43dd6a:	call   403160 <recv@plt>
  43dd6f:	test   eax,eax
  43dd71:	jle    43def4 <strcmp@plt+0x3a73c>
  43dd77:	cmp    eax,0xf
  43dd7a:	jle    43de1f <strcmp@plt+0x3a667>
  43dd80:	mov    edx,DWORD PTR [rsp+0x60]
  43dd84:	cmp    edx,0xf
  43dd87:	jbe    43de1f <strcmp@plt+0x3a667>
  43dd8d:	cmp    eax,edx
  43dd8f:	mov    r14d,eax
  43dd92:	jb     43de1f <strcmp@plt+0x3a667>
  43dd98:	movzx  eax,WORD PTR [rsp+0x64]
  43dd9d:	mov    r13,rbp
  43dda0:	cmp    ax,0x3
  43dda4:	je     43de1f <strcmp@plt+0x3a667>
  43dda6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ddb0:	sub    eax,0x10
  43ddb3:	cmp    ax,0x9
  43ddb7:	ja     43ddf0 <strcmp@plt+0x3a638>
  43ddb9:	movzx  eax,ax
  43ddbc:	movsxd rax,DWORD PTR [rbx+rax*4]
  43ddc0:	add    rax,rbx
  43ddc3:	jmp    rax
  43ddc5:	nop    DWORD PTR [rax]
  43ddc8:	mov    rax,0x468e3c
  43ddcf:	cmp    DWORD PTR [rax],0x1
  43ddd2:	jle    43dde7 <strcmp@plt+0x3a62f>
  43ddd4:	lea    rsi,[rip+0x1489d]        # 452678 <strcmp@plt+0x4eec0>
  43dddb:	mov    edi,0x6
  43dde0:	xor    eax,eax
  43dde2:	call   4306a0 <strcmp@plt+0x2cee8>
  43dde7:	mov    rdi,r13
  43ddea:	call   43dca0 <strcmp@plt+0x3a4e8>
  43ddef:	nop
  43ddf0:	mov    eax,DWORD PTR [r13+0x0]
  43ddf4:	add    eax,0x3
  43ddf7:	and    eax,0xfffffffc
  43ddfa:	sub    r14d,eax
  43ddfd:	add    r13,rax
  43de00:	cmp    r14d,0xf
  43de04:	jle    43de1f <strcmp@plt+0x3a667>
  43de06:	mov    eax,DWORD PTR [r13+0x0]
  43de0a:	cmp    eax,0xf
  43de0d:	jbe    43de1f <strcmp@plt+0x3a667>
  43de0f:	cmp    eax,r14d
  43de12:	ja     43de1f <strcmp@plt+0x3a667>
  43de14:	movzx  eax,WORD PTR [r13+0x4]
  43de19:	cmp    ax,0x3
  43de1d:	jne    43ddb0 <strcmp@plt+0x3a5f8>
  43de1f:	mov    ecx,0x200
  43de24:	xor    eax,eax
  43de26:	mov    rdi,rbp
  43de29:	rep stos QWORD PTR es:[rdi],rax
  43de2c:	jmp    43dd58 <strcmp@plt+0x3a5a0>
  43de31:	nop    DWORD PTR [rax+0x0]
  43de38:	mov    rax,0x468e3c
  43de3f:	cmp    DWORD PTR [rax],0x1
  43de42:	jle    43de57 <strcmp@plt+0x3a69f>
  43de44:	lea    rsi,[rip+0x147f5]        # 452640 <strcmp@plt+0x4ee88>
  43de4b:	mov    edi,0x6
  43de50:	xor    eax,eax
  43de52:	call   4306a0 <strcmp@plt+0x2cee8>
  43de57:	mov    rdi,r13
  43de5a:	call   43d660 <strcmp@plt+0x39ea8>
  43de5f:	jmp    43ddf0 <strcmp@plt+0x3a638>
  43de61:	nop    DWORD PTR [rax+0x0]
  43de68:	mov    rax,0x468e3c
  43de6f:	cmp    DWORD PTR [rax],0x1
  43de72:	jle    43de87 <strcmp@plt+0x3a6cf>
  43de74:	lea    rsi,[rip+0x14795]        # 452610 <strcmp@plt+0x4ee58>
  43de7b:	mov    edi,0x6
  43de80:	xor    eax,eax
  43de82:	call   4306a0 <strcmp@plt+0x2cee8>
  43de87:	mov    rdi,r13
  43de8a:	call   43d320 <strcmp@plt+0x39b68>
  43de8f:	jmp    43ddf0 <strcmp@plt+0x3a638>
  43de94:	nop    DWORD PTR [rax+0x0]
  43de98:	mov    rax,0x468e3c
  43de9f:	cmp    DWORD PTR [rax],0x1
  43dea2:	jle    43deb7 <strcmp@plt+0x3a6ff>
  43dea4:	lea    rsi,[rip+0x1472d]        # 4525d8 <strcmp@plt+0x4ee20>
  43deab:	mov    edi,0x6
  43deb0:	xor    eax,eax
  43deb2:	call   4306a0 <strcmp@plt+0x2cee8>
  43deb7:	mov    rdi,r13
  43deba:	call   43d230 <strcmp@plt+0x39a78>
  43debf:	jmp    43ddf0 <strcmp@plt+0x3a638>
  43dec4:	nop    DWORD PTR [rax+0x0]
  43dec8:	mov    rax,0x468e3c
  43decf:	cmp    DWORD PTR [rax],0x1
  43ded2:	jle    43dee7 <strcmp@plt+0x3a72f>
  43ded4:	lea    rsi,[rip+0x146c5]        # 4525a0 <strcmp@plt+0x4ede8>
  43dedb:	mov    edi,0x6
  43dee0:	xor    eax,eax
  43dee2:	call   4306a0 <strcmp@plt+0x2cee8>
  43dee7:	mov    rdi,r13
  43deea:	call   43d0e0 <strcmp@plt+0x39928>
  43deef:	jmp    43ddf0 <strcmp@plt+0x3a638>
  43def4:	mov    rcx,QWORD PTR [rsp+0x1068]
  43defc:	xor    rcx,QWORD PTR fs:0x28
  43df05:	mov    eax,0x1
  43df0a:	jne    43df1c <strcmp@plt+0x3a764>
  43df0c:	add    rsp,0x1070
  43df13:	pop    rbx
  43df14:	pop    rbp
  43df15:	pop    r12
  43df17:	pop    r13
  43df19:	pop    r14
  43df1b:	ret    
  43df1c:	call   403460 <__stack_chk_fail@plt>
  43df21:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43df2c:	nop    DWORD PTR [rax+0x0]
  43df30:	push   r13
  43df32:	push   r12
  43df34:	mov    r13,rdi
  43df37:	push   rbp
  43df38:	push   rbx
  43df39:	xor    edx,edx
  43df3b:	mov    edi,0x2
  43df40:	mov    rbp,rsi
  43df43:	mov    esi,0x2
  43df48:	sub    rsp,0x38
  43df4c:	mov    rax,QWORD PTR fs:0x28
  43df55:	mov    QWORD PTR [rsp+0x28],rax
  43df5a:	xor    eax,eax
  43df5c:	call   4030e0 <socket@plt>
  43df61:	mov    edx,0xf
  43df66:	mov    r12d,eax
  43df69:	mov    rsi,r13
  43df6c:	mov    eax,0x2
  43df71:	mov    rdi,rsp
  43df74:	mov    QWORD PTR [rsp+0x10],0x0
  43df7d:	mov    QWORD PTR [rsp],0x0
  43df85:	mov    QWORD PTR [rsp+0x8],0x0
  43df8e:	mov    QWORD PTR [rsp+0x18],0x0
  43df97:	mov    QWORD PTR [rsp+0x20],0x0
  43dfa0:	mov    WORD PTR [rsp+0x10],ax
  43dfa5:	call   403240 <strncpy@plt>
  43dfaa:	mov    rdx,rsp
  43dfad:	mov    esi,0x8927
  43dfb2:	mov    edi,r12d
  43dfb5:	xor    eax,eax
  43dfb7:	call   403590 <ioctl@plt>
  43dfbc:	mov    edi,r12d
  43dfbf:	call   403790 <close@plt>
  43dfc4:	lea    rdx,[rsp+0x12]
  43dfc9:	xor    eax,eax
  43dfcb:	nop    DWORD PTR [rax+rax*1+0x0]
  43dfd0:	movzx  ecx,BYTE PTR [rdx+rax*1]
  43dfd4:	mov    BYTE PTR [rbp+rax*1+0x0],cl
  43dfd8:	add    rax,0x1
  43dfdc:	cmp    rax,0x6
  43dfe0:	jne    43dfd0 <strcmp@plt+0x3a818>
  43dfe2:	mov    rax,QWORD PTR [rsp+0x28]
  43dfe7:	xor    rax,QWORD PTR fs:0x28
  43dff0:	jne    43dffd <strcmp@plt+0x3a845>
  43dff2:	add    rsp,0x38
  43dff6:	pop    rbx
  43dff7:	pop    rbp
  43dff8:	pop    r12
  43dffa:	pop    r13
  43dffc:	ret    
  43dffd:	call   403460 <__stack_chk_fail@plt>
  43e002:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43e00d:	nop    DWORD PTR [rax]
  43e010:	push   r15
  43e012:	push   r14
  43e014:	mov    ecx,0x10
  43e019:	push   r13
  43e01b:	push   r12
  43e01d:	push   rbp
  43e01e:	push   rbx
  43e01f:	mov    rbp,rdi
  43e022:	sub    rsp,0x2058
  43e029:	mov    rax,QWORD PTR fs:0x28
  43e032:	mov    QWORD PTR [rsp+0x2048],rax
  43e03a:	xor    eax,eax
  43e03c:	mov    QWORD PTR [rsp+0x38],0x0
  43e045:	mov    QWORD PTR [rsp+0x14],0x0
  43e04e:	mov    QWORD PTR [rsp+0x20],0x0
  43e057:	mov    QWORD PTR [rsp+0x28],0x0
  43e060:	mov    QWORD PTR [rsp+0x30],0x0
  43e069:	mov    DWORD PTR [rsp+0x38],0x1
  43e071:	mov    DWORD PTR [rsp+0x1c],0x0
  43e079:	mov    WORD PTR [rsp+0x14],cx
  43e07e:	call   4251c0 <strcmp@plt+0x21a08>
  43e083:	cmp    ax,0x2
  43e087:	je     43e2c6 <strcmp@plt+0x3ab0e>
  43e08d:	mov    DWORD PTR [rsp+0x1c],0x400
  43e095:	mov    ebx,0xa
  43e09a:	xor    edx,edx
  43e09c:	mov    esi,0x3
  43e0a1:	mov    edi,0x10
  43e0a6:	call   4030e0 <socket@plt>
  43e0ab:	test   eax,eax
  43e0ad:	mov    DWORD PTR [rsp+0xc],eax
  43e0b1:	js     43e313 <strcmp@plt+0x3ab5b>
  43e0b7:	mov    r15d,DWORD PTR [rsp+0xc]
  43e0bc:	lea    rsi,[rsp+0x14]
  43e0c1:	mov    edx,0xc
  43e0c6:	mov    edi,r15d
  43e0c9:	call   403080 <bind@plt>
  43e0ce:	lea    rsi,[rsp+0x40]
  43e0d3:	xor    eax,eax
  43e0d5:	mov    ecx,0x200
  43e0da:	mov    edx,0x1a
  43e0df:	mov    rdi,rsi
  43e0e2:	rep stos QWORD PTR es:[rdi],rax
  43e0e5:	mov    eax,0x301
  43e0ea:	mov    WORD PTR [rsp+0x44],dx
  43e0ef:	mov    edi,r15d
  43e0f2:	mov    edx,0x1c
  43e0f7:	mov    WORD PTR [rsp+0x46],ax
  43e0fc:	mov    DWORD PTR [rsp+0x40],0x1c
  43e104:	mov    BYTE PTR [rsp+0x50],bl
  43e108:	mov    BYTE PTR [rsp+0x54],0xfe
  43e10d:	mov    BYTE PTR [rsp+0x55],0x4
  43e112:	mov    BYTE PTR [rsp+0x57],0x1
  43e117:	call   403220 <send@plt>
  43e11c:	test   eax,eax
  43e11e:	js     43e32d <strcmp@plt+0x3ab75>
  43e124:	lea    rax,[rsp+0x1040]
  43e12c:	lea    rbx,[rsp+0x20]
  43e131:	mov    QWORD PTR [rsp],rax
  43e135:	mov    rsi,QWORD PTR [rsp]
  43e139:	mov    edi,DWORD PTR [rsp+0xc]
  43e13d:	mov    ecx,0x40
  43e142:	mov    edx,0x1000
  43e147:	call   403160 <recv@plt>
  43e14c:	test   eax,eax
  43e14e:	jle    43e2d8 <strcmp@plt+0x3ab20>
  43e154:	cmp    eax,0xf
  43e157:	mov    r13d,eax
  43e15a:	jbe    43e135 <strcmp@plt+0x3a97d>
  43e15c:	mov    r15d,DWORD PTR [rsp+0x1040]
  43e164:	cmp    r15d,eax
  43e167:	ja     43e135 <strcmp@plt+0x3a97d>
  43e169:	cmp    r15d,0xf
  43e16d:	jbe    43e135 <strcmp@plt+0x3a97d>
  43e16f:	mov    r12,QWORD PTR [rsp]
  43e173:	jmp    43e19d <strcmp@plt+0x3a9e5>
  43e175:	nop    DWORD PTR [rax]
  43e178:	mov    eax,DWORD PTR [r12]
  43e17c:	add    eax,0x3
  43e17f:	and    eax,0xfffffffc
  43e182:	sub    r13d,eax
  43e185:	add    r12,rax
  43e188:	cmp    r13d,0xf
  43e18c:	jbe    43e135 <strcmp@plt+0x3a97d>
  43e18e:	mov    r15d,DWORD PTR [r12]
  43e192:	cmp    r15d,r13d
  43e195:	ja     43e135 <strcmp@plt+0x3a97d>
  43e197:	cmp    r15d,0xf
  43e19b:	jbe    43e135 <strcmp@plt+0x3a97d>
  43e19d:	cmp    WORD PTR [r12+0x4],0x18
  43e1a4:	jne    43e178 <strcmp@plt+0x3a9c0>
  43e1a6:	sub    r15d,0x1c
  43e1aa:	lea    r14,[r12+0x1c]
  43e1af:	cmp    r15d,0x3
  43e1b3:	jle    43e178 <strcmp@plt+0x3a9c0>
  43e1b5:	movzx  eax,WORD PTR [r12+0x1c]
  43e1bb:	cmp    ax,0x3
  43e1bf:	jbe    43e178 <strcmp@plt+0x3a9c0>
  43e1c1:	cmp    r15d,eax
  43e1c4:	jge    43e238 <strcmp@plt+0x3aa80>
  43e1c6:	jmp    43e178 <strcmp@plt+0x3a9c0>
  43e1c8:	nop    DWORD PTR [rax+rax*1+0x0]
  43e1d0:	cmp    dl,0xa
  43e1d3:	jne    43e1dd <strcmp@plt+0x3aa25>
  43e1d5:	cmp    BYTE PTR [r12+0x11],0x80
  43e1db:	je     43e207 <strcmp@plt+0x3aa4f>
  43e1dd:	lea    rsi,[r14+0x4]
  43e1e1:	mov    rdi,rbx
  43e1e4:	call   424f50 <strcmp@plt+0x21798>
  43e1e9:	movzx  esi,BYTE PTR [r12+0x11]
  43e1ef:	mov    rdi,rbx
  43e1f2:	call   425300 <strcmp@plt+0x21b48>
  43e1f7:	mov    rsi,rbx
  43e1fa:	mov    rdi,rbp
  43e1fd:	call   437030 <strcmp@plt+0x33878>
  43e202:	cmp    eax,0x1
  43e205:	je     43e254 <strcmp@plt+0x3aa9c>
  43e207:	movzx  eax,WORD PTR [r14]
  43e20b:	add    eax,0x3
  43e20e:	and    eax,0xfffffffc
  43e211:	sub    r15d,eax
  43e214:	add    r14,rax
  43e217:	cmp    r15d,0x3
  43e21b:	jle    43e178 <strcmp@plt+0x3a9c0>
  43e221:	movzx  eax,WORD PTR [r14]
  43e225:	cmp    ax,0x3
  43e229:	jbe    43e178 <strcmp@plt+0x3a9c0>
  43e22f:	cmp    eax,r15d
  43e232:	jg     43e178 <strcmp@plt+0x3a9c0>
  43e238:	cmp    WORD PTR [r14+0x2],0x1
  43e23e:	jne    43e207 <strcmp@plt+0x3aa4f>
  43e240:	movzx  edx,BYTE PTR [rsp+0x50]
  43e245:	cmp    dl,0x2
  43e248:	jne    43e1d0 <strcmp@plt+0x3aa18>
  43e24a:	cmp    BYTE PTR [r12+0x11],0x20
  43e250:	jne    43e1dd <strcmp@plt+0x3aa25>
  43e252:	jmp    43e207 <strcmp@plt+0x3aa4f>
  43e254:	mov    edi,DWORD PTR [rsp+0xc]
  43e258:	call   403790 <close@plt>
  43e25d:	mov    rax,0x468e3c
  43e264:	cmp    DWORD PTR [rax],0x2
  43e267:	jle    43e295 <strcmp@plt+0x3aadd>
  43e269:	mov    rdi,rbx
  43e26c:	call   424890 <strcmp@plt+0x210d8>
  43e271:	mov    rdi,rbp
  43e274:	mov    r12,rax
  43e277:	call   424890 <strcmp@plt+0x210d8>
  43e27c:	lea    rsi,[rip+0x144f5]        # 452778 <strcmp@plt+0x4efc0>
  43e283:	mov    rdx,rax
  43e286:	mov    rcx,r12
  43e289:	mov    edi,0x7
  43e28e:	xor    eax,eax
  43e290:	call   4306a0 <strcmp@plt+0x2cee8>
  43e295:	mov    rdi,rbx
  43e298:	call   424b80 <strcmp@plt+0x213c8>
  43e29d:	mov    rcx,QWORD PTR [rsp+0x2048]
  43e2a5:	xor    rcx,QWORD PTR fs:0x28
  43e2ae:	jne    43e356 <strcmp@plt+0x3ab9e>
  43e2b4:	add    rsp,0x2058
  43e2bb:	pop    rbx
  43e2bc:	pop    rbp
  43e2bd:	pop    r12
  43e2bf:	pop    r13
  43e2c1:	pop    r14
  43e2c3:	pop    r15
  43e2c5:	ret    
  43e2c6:	mov    DWORD PTR [rsp+0x1c],0x40
  43e2ce:	mov    ebx,0x2
  43e2d3:	jmp    43e09a <strcmp@plt+0x3a8e2>
  43e2d8:	mov    edi,DWORD PTR [rsp+0xc]
  43e2dc:	call   403790 <close@plt>
  43e2e1:	mov    rax,0x468e3c
  43e2e8:	cmp    DWORD PTR [rax],0x2
  43e2eb:	jg     43e2f1 <strcmp@plt+0x3ab39>
  43e2ed:	xor    eax,eax
  43e2ef:	jmp    43e29d <strcmp@plt+0x3aae5>
  43e2f1:	mov    rdi,rbp
  43e2f4:	call   424890 <strcmp@plt+0x210d8>
  43e2f9:	lea    rsi,[rip+0x14438]        # 452738 <strcmp@plt+0x4ef80>
  43e300:	mov    rdx,rax
  43e303:	mov    edi,0x7
  43e308:	xor    eax,eax
  43e30a:	call   4306a0 <strcmp@plt+0x2cee8>
  43e30f:	xor    eax,eax
  43e311:	jmp    43e29d <strcmp@plt+0x3aae5>
  43e313:	lea    rsi,[rip+0x14396]        # 4526b0 <strcmp@plt+0x4eef8>
  43e31a:	xor    eax,eax
  43e31c:	mov    edi,0x2
  43e321:	call   4306a0 <strcmp@plt+0x2cee8>
  43e326:	xor    eax,eax
  43e328:	jmp    43e29d <strcmp@plt+0x3aae5>
  43e32d:	call   403050 <__errno_location@plt>
  43e332:	mov    edi,DWORD PTR [rax]
  43e334:	call   403170 <strerror@plt>
  43e339:	lea    rsi,[rip+0x143b8]        # 4526f8 <strcmp@plt+0x4ef40>
  43e340:	mov    rdx,rax
  43e343:	mov    edi,0x1
  43e348:	xor    eax,eax
  43e34a:	call   4306a0 <strcmp@plt+0x2cee8>
  43e34f:	xor    eax,eax
  43e351:	jmp    43e29d <strcmp@plt+0x3aae5>
  43e356:	call   403460 <__stack_chk_fail@plt>
  43e35b:	nop    DWORD PTR [rax+rax*1+0x0]
  43e360:	push   rbx
  43e361:	mov    rbx,rdi
  43e364:	mov    edi,DWORD PTR [rdi+0x30]
  43e367:	cmp    edi,0xffffffff
  43e36a:	je     43e371 <strcmp@plt+0x3abb9>
  43e36c:	call   403790 <close@plt>
  43e371:	mov    edi,DWORD PTR [rbx+0x34]
  43e374:	cmp    edi,0xffffffff
  43e377:	je     43e37e <strcmp@plt+0x3abc6>
  43e379:	call   403790 <close@plt>
  43e37e:	mov    rdi,QWORD PTR [rbx]
  43e381:	call   4037b0 <free@plt>
  43e386:	mov    rdi,QWORD PTR [rbx+0x10]
  43e38a:	call   424750 <strcmp@plt+0x20f98>
  43e38f:	mov    rdi,QWORD PTR [rbx+0x18]
  43e393:	call   424750 <strcmp@plt+0x20f98>
  43e398:	mov    rdi,QWORD PTR [rbx+0x20]
  43e39c:	call   424750 <strcmp@plt+0x20f98>
  43e3a1:	mov    rdi,QWORD PTR [rbx+0x28]
  43e3a5:	call   424750 <strcmp@plt+0x20f98>
  43e3aa:	mov    rdi,rbx
  43e3ad:	pop    rbx
  43e3ae:	jmp    4037b0 <free@plt>
  43e3b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43e3be:	xchg   ax,ax
  43e3c0:	sub    rsp,0x8
  43e3c4:	mov    rdi,0x43e360
  43e3cb:	call   42d4f0 <strcmp@plt+0x29d38>
  43e3d0:	mov    rdx,0x473dd0
  43e3d7:	mov    QWORD PTR [rdx],rax
  43e3da:	mov    rax,0x473da8
  43e3e1:	mov    rdx,QWORD PTR [rax]
  43e3e4:	xor    eax,eax
  43e3e6:	call   QWORD PTR [rdx+0x58]
  43e3e9:	mov    rdx,0x473dc8
  43e3f0:	test   rax,rax
  43e3f3:	mov    QWORD PTR [rdx],rax
  43e3f6:	setne  al
  43e3f9:	add    rsp,0x8
  43e3fd:	movzx  eax,al
  43e400:	ret    
  43e401:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43e40c:	nop    DWORD PTR [rax+0x0]
  43e410:	sub    rsp,0x8
  43e414:	mov    rax,0x473dd0
  43e41b:	mov    rdi,QWORD PTR [rax]
  43e41e:	call   42dac0 <strcmp@plt+0x2a308>
  43e423:	mov    rax,0x473dc8
  43e42a:	mov    rdi,QWORD PTR [rax]
  43e42d:	add    rsp,0x8
  43e431:	jmp    43a5a0 <strcmp@plt+0x36de8>
  43e436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e440:	test   rdi,rdi
  43e443:	je     43e540 <strcmp@plt+0x3ad88>
  43e449:	push   r15
  43e44b:	push   r14
  43e44d:	mov    edx,0x66666667
  43e452:	push   r13
  43e454:	push   r12
  43e456:	push   rbp
  43e457:	push   rbx
  43e458:	mov    rbx,rdi
  43e45b:	lea    rbp,[rip+0x3597e]        # 473de0 <strcmp@plt+0x70628>
  43e462:	sub    rsp,0x18
  43e466:	mov    eax,DWORD PTR [rip+0x36338]        # 4747a4 <strcmp@plt+0x70fec>
  43e46c:	lea    ecx,[rax+0x1]
  43e46f:	mov    eax,ecx
  43e471:	imul   edx
  43e473:	mov    eax,ecx
  43e475:	sar    eax,0x1f
  43e478:	sar    edx,1
  43e47a:	sub    edx,eax
  43e47c:	lea    eax,[rdx+rdx*4]
  43e47f:	sub    ecx,eax
  43e481:	mov    DWORD PTR [rip+0x3631d],ecx        # 4747a4 <strcmp@plt+0x70fec>
  43e487:	mov    ecx,DWORD PTR [rdi+0x34]
  43e48a:	mov    rdi,QWORD PTR [rdi+0x28]
  43e48e:	mov    DWORD PTR [rsp+0xc],ecx
  43e492:	call   424890 <strcmp@plt+0x210d8>
  43e497:	mov    rdi,QWORD PTR [rbx+0x18]
  43e49b:	mov    r15,rax
  43e49e:	call   424890 <strcmp@plt+0x210d8>
  43e4a3:	mov    rdi,QWORD PTR [rbx+0x20]
  43e4a7:	mov    r13d,DWORD PTR [rbx+0x30]
  43e4ab:	mov    r14,rax
  43e4ae:	call   424890 <strcmp@plt+0x210d8>
  43e4b3:	mov    rdi,QWORD PTR [rbx+0x10]
  43e4b7:	mov    r12,rax
  43e4ba:	call   424890 <strcmp@plt+0x210d8>
  43e4bf:	cmp    BYTE PTR [rbx+0xc],0x0
  43e4c3:	lea    rsi,[rip+0x102eb]        # 44e7b5 <strcmp@plt+0x4affd>
  43e4ca:	movsxd rdi,DWORD PTR [rip+0x362d3]        # 4747a4 <strcmp@plt+0x70fec>
  43e4d1:	lea    rdx,[rip+0x102da]        # 44e7b2 <strcmp@plt+0x4affa>
  43e4d8:	lea    r8,[rip+0x14361]        # 452840 <strcmp@plt+0x4f088>
  43e4df:	cmove  rdx,rsi
  43e4e3:	sub    rsp,0x8
  43e4e7:	mov    esi,0x1f4
  43e4ec:	mov    ecx,DWORD PTR [rsp+0x14]
  43e4f0:	imul   rdi,rdi,0x1f4
  43e4f7:	push   rcx
  43e4f8:	push   r15
  43e4fa:	mov    rcx,0xffffffffffffffff
  43e501:	push   r14
  43e503:	push   r13
  43e505:	push   r12
  43e507:	push   rax
  43e508:	add    rdi,rbp
  43e50b:	push   rdx
  43e50c:	mov    r9,QWORD PTR [rbx]
  43e50f:	mov    edx,0x1
  43e514:	xor    eax,eax
  43e516:	call   4032a0 <__snprintf_chk@plt>
  43e51b:	movsxd rax,DWORD PTR [rip+0x36282]        # 4747a4 <strcmp@plt+0x70fec>
  43e522:	add    rsp,0x58
  43e526:	pop    rbx
  43e527:	imul   rax,rax,0x1f4
  43e52e:	add    rax,rbp
  43e531:	pop    rbp
  43e532:	pop    r12
  43e534:	pop    r13
  43e536:	pop    r14
  43e538:	pop    r15
  43e53a:	ret    
  43e53b:	nop    DWORD PTR [rax+rax*1+0x0]
  43e540:	movsxd rax,DWORD PTR [rip+0x3625d]        # 4747a4 <strcmp@plt+0x70fec>
  43e547:	lea    rdx,[rip+0x35892]        # 473de0 <strcmp@plt+0x70628>
  43e54e:	imul   rax,rax,0x1f4
  43e555:	add    rax,rdx
  43e558:	mov    edx,0x5f4c
  43e55d:	mov    DWORD PTR [rax],0x4c554e5f
  43e563:	mov    WORD PTR [rax+0x4],dx
  43e567:	mov    BYTE PTR [rax+0x6],0x0
  43e56b:	ret    
  43e56c:	nop    DWORD PTR [rax+0x0]
  43e570:	push   r12
  43e572:	mov    r12,0x473da8
  43e579:	push   rbp
  43e57a:	push   rbx
  43e57b:	mov    rbp,rdi
  43e57e:	mov    rax,QWORD PTR [r12]
  43e582:	call   QWORD PTR [rax+0x40]
  43e585:	test   eax,eax
  43e587:	je     43e658 <strcmp@plt+0x3aea0>
  43e58d:	mov    edi,0x38
  43e592:	call   434790 <strcmp@plt+0x30fd8>
  43e597:	mov    rdi,rbp
  43e59a:	mov    rbx,rax
  43e59d:	call   403730 <strdup@plt>
  43e5a2:	mov    QWORD PTR [rbx],rax
  43e5a5:	mov    rax,QWORD PTR [r12]
  43e5a9:	mov    rdi,rbp
  43e5ac:	call   QWORD PTR [rax+0x40]
  43e5af:	mov    DWORD PTR [rbx+0x8],eax
  43e5b2:	mov    rax,QWORD PTR [r12]
  43e5b6:	mov    rdi,rbp
  43e5b9:	mov    QWORD PTR [rbx+0x10],0x0
  43e5c1:	mov    QWORD PTR [rbx+0x18],0x0
  43e5c9:	mov    DWORD PTR [rbx+0x30],0xfffffff7
  43e5d0:	mov    DWORD PTR [rbx+0x34],0xfffffff7
  43e5d7:	call   QWORD PTR [rax+0x38]
  43e5da:	mov    r12,0x468e3c
  43e5e1:	cmp    al,0x1
  43e5e3:	sete   BYTE PTR [rbx+0xc]
  43e5e7:	mov    eax,DWORD PTR [r12]
  43e5eb:	test   eax,eax
  43e5ed:	jle    43e608 <strcmp@plt+0x3ae50>
  43e5ef:	mov    ecx,DWORD PTR [rbx+0x8]
  43e5f2:	lea    rsi,[rip+0x142f7]        # 4528f0 <strcmp@plt+0x4f138>
  43e5f9:	mov    rdx,rbp
  43e5fc:	mov    edi,0x5
  43e601:	xor    eax,eax
  43e603:	call   4306a0 <strcmp@plt+0x2cee8>
  43e608:	mov    rax,0x473dd0
  43e60f:	mov    QWORD PTR [rbx+0x20],0x0
  43e617:	mov    rdi,rbx
  43e61a:	mov    QWORD PTR [rbx+0x28],0x0
  43e622:	mov    rsi,QWORD PTR [rax]
  43e625:	call   42d540 <strcmp@plt+0x29d88>
  43e62a:	cmp    DWORD PTR [r12],0x1
  43e62f:	jle    43e64a <strcmp@plt+0x3ae92>
  43e631:	mov    ecx,DWORD PTR [rbx+0x8]
  43e634:	lea    rsi,[rip+0x142e5]        # 452920 <strcmp@plt+0x4f168>
  43e63b:	mov    rdx,rbp
  43e63e:	mov    edi,0x6
  43e643:	xor    eax,eax
  43e645:	call   4306a0 <strcmp@plt+0x2cee8>
  43e64a:	mov    rax,rbx
  43e64d:	pop    rbx
  43e64e:	pop    rbp
  43e64f:	pop    r12
  43e651:	ret    
  43e652:	nop    WORD PTR [rax+rax*1+0x0]
  43e658:	lea    rsi,[rip+0x14241]        # 4528a0 <strcmp@plt+0x4f0e8>
  43e65f:	mov    rdx,rbp
  43e662:	xor    ebx,ebx
  43e664:	mov    edi,0x2
  43e669:	call   4306a0 <strcmp@plt+0x2cee8>
  43e66e:	mov    rax,rbx
  43e671:	pop    rbx
  43e672:	pop    rbp
  43e673:	pop    r12
  43e675:	ret    
  43e676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e680:	push   r13
  43e682:	push   r12
  43e684:	push   rbp
  43e685:	push   rbx
  43e686:	sub    rsp,0x8
  43e68a:	mov    rax,0x473dd0
  43e691:	mov    r12,QWORD PTR [rax]
  43e694:	mov    rbx,QWORD PTR [r12+0x8]
  43e699:	cmp    r12,rbx
  43e69c:	je     43e6d8 <strcmp@plt+0x3af20>
  43e69e:	mov    r13,rdi
  43e6a1:	jmp    43e6b1 <strcmp@plt+0x3aef9>
  43e6a3:	nop    DWORD PTR [rax+rax*1+0x0]
  43e6a8:	mov    rbx,QWORD PTR [rbx+0x8]
  43e6ac:	cmp    r12,rbx
  43e6af:	je     43e6d8 <strcmp@plt+0x3af20>
  43e6b1:	mov    rbp,QWORD PTR [rbx+0x10]
  43e6b5:	mov    rsi,r13
  43e6b8:	mov    rdi,QWORD PTR [rbp+0x0]
  43e6bc:	call   4037b8 <strcmp@plt>
  43e6c1:	test   eax,eax
  43e6c3:	jne    43e6a8 <strcmp@plt+0x3aef0>
  43e6c5:	add    rsp,0x8
  43e6c9:	mov    rax,rbp
  43e6cc:	pop    rbx
  43e6cd:	pop    rbp
  43e6ce:	pop    r12
  43e6d0:	pop    r13
  43e6d2:	ret    
  43e6d3:	nop    DWORD PTR [rax+rax*1+0x0]
  43e6d8:	add    rsp,0x8
  43e6dc:	xor    eax,eax
  43e6de:	pop    rbx
  43e6df:	pop    rbp
  43e6e0:	pop    r12
  43e6e2:	pop    r13
  43e6e4:	ret    
  43e6e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43e6f0:	push   r13
  43e6f2:	push   r12
  43e6f4:	mov    r13d,edi
  43e6f7:	push   rbp
  43e6f8:	push   rbx
  43e6f9:	sub    rsp,0x8
  43e6fd:	mov    r12,0x473dd0
  43e704:	mov    rax,QWORD PTR [r12]
  43e708:	mov    rbx,QWORD PTR [rax+0x8]
  43e70c:	cmp    rax,rbx
  43e70f:	jne    43e727 <strcmp@plt+0x3af6f>
  43e711:	jmp    43e760 <strcmp@plt+0x3afa8>
  43e713:	nop    DWORD PTR [rax+rax*1+0x0]
  43e718:	cmp    r13d,eax
  43e71b:	je     43e74b <strcmp@plt+0x3af93>
  43e71d:	mov    rbx,QWORD PTR [rbx+0x8]
  43e721:	cmp    QWORD PTR [r12],rbx
  43e725:	je     43e760 <strcmp@plt+0x3afa8>
  43e727:	mov    rbp,QWORD PTR [rbx+0x10]
  43e72b:	mov    eax,DWORD PTR [rbp+0x8]
  43e72e:	test   eax,eax
  43e730:	jne    43e718 <strcmp@plt+0x3af60>
  43e732:	mov    rax,0x473da8
  43e739:	mov    rdi,QWORD PTR [rbp+0x0]
  43e73d:	mov    rax,QWORD PTR [rax]
  43e740:	call   QWORD PTR [rax+0x40]
  43e743:	cmp    r13d,eax
  43e746:	mov    DWORD PTR [rbp+0x8],eax
  43e749:	jne    43e71d <strcmp@plt+0x3af65>
  43e74b:	add    rsp,0x8
  43e74f:	mov    rax,rbp
  43e752:	pop    rbx
  43e753:	pop    rbp
  43e754:	pop    r12
  43e756:	pop    r13
  43e758:	ret    
  43e759:	nop    DWORD PTR [rax+0x0]
  43e760:	add    rsp,0x8
  43e764:	xor    eax,eax
  43e766:	pop    rbx
  43e767:	pop    rbp
  43e768:	pop    r12
  43e76a:	pop    r13
  43e76c:	ret    
  43e76d:	nop    DWORD PTR [rax]
  43e770:	push   r13
  43e772:	push   r12
  43e774:	mov    r12,rdi
  43e777:	push   rbp
  43e778:	push   rbx
  43e779:	sub    rsp,0x8
  43e77d:	mov    r13,0x473dd0
  43e784:	mov    rax,QWORD PTR [r13+0x0]
  43e788:	mov    rbx,QWORD PTR [rax+0x8]
  43e78c:	cmp    rax,rbx
  43e78f:	jne    43e7bd <strcmp@plt+0x3b005>
  43e791:	jmp    43e7f8 <strcmp@plt+0x3b040>
  43e793:	nop    DWORD PTR [rax+rax*1+0x0]
  43e798:	cmp    ax,0xa
  43e79c:	jne    43e7b3 <strcmp@plt+0x3affb>
  43e79e:	mov    rsi,QWORD PTR [rbp+0x18]
  43e7a2:	test   rsi,rsi
  43e7a5:	je     43e7b3 <strcmp@plt+0x3affb>
  43e7a7:	mov    rdi,r12
  43e7aa:	call   424df0 <strcmp@plt+0x21638>
  43e7af:	test   eax,eax
  43e7b1:	je     43e7e4 <strcmp@plt+0x3b02c>
  43e7b3:	mov    rbx,QWORD PTR [rbx+0x8]
  43e7b7:	cmp    QWORD PTR [r13+0x0],rbx
  43e7bb:	je     43e7f8 <strcmp@plt+0x3b040>
  43e7bd:	mov    rdi,r12
  43e7c0:	mov    rbp,QWORD PTR [rbx+0x10]
  43e7c4:	call   4251c0 <strcmp@plt+0x21a08>
  43e7c9:	cmp    ax,0x2
  43e7cd:	jne    43e798 <strcmp@plt+0x3afe0>
  43e7cf:	mov    rsi,QWORD PTR [rbp+0x10]
  43e7d3:	test   rsi,rsi
  43e7d6:	je     43e7b3 <strcmp@plt+0x3affb>
  43e7d8:	mov    rdi,r12
  43e7db:	call   424df0 <strcmp@plt+0x21638>
  43e7e0:	test   eax,eax
  43e7e2:	jne    43e7b3 <strcmp@plt+0x3affb>
  43e7e4:	add    rsp,0x8
  43e7e8:	mov    rax,rbp
  43e7eb:	pop    rbx
  43e7ec:	pop    rbp
  43e7ed:	pop    r12
  43e7ef:	pop    r13
  43e7f1:	ret    
  43e7f2:	nop    WORD PTR [rax+rax*1+0x0]
  43e7f8:	mov    rax,0x468e3c
  43e7ff:	cmp    DWORD PTR [rax],0x1
  43e802:	jg     43e818 <strcmp@plt+0x3b060>
  43e804:	add    rsp,0x8
  43e808:	xor    eax,eax
  43e80a:	pop    rbx
  43e80b:	pop    rbp
  43e80c:	pop    r12
  43e80e:	pop    r13
  43e810:	ret    
  43e811:	nop    DWORD PTR [rax+0x0]
  43e818:	mov    rdi,r12
  43e81b:	call   424890 <strcmp@plt+0x210d8>
  43e820:	lea    rsi,[rip+0x14131]        # 452958 <strcmp@plt+0x4f1a0>
  43e827:	mov    rdx,rax
  43e82a:	mov    edi,0x6
  43e82f:	xor    eax,eax
  43e831:	call   4306a0 <strcmp@plt+0x2cee8>
  43e836:	jmp    43e804 <strcmp@plt+0x3b04c>
  43e838:	nop    DWORD PTR [rax+rax*1+0x0]
  43e840:	push   r15
  43e842:	push   r14
  43e844:	mov    r14d,edi
  43e847:	push   r13
  43e849:	push   r12
  43e84b:	push   rbp
  43e84c:	push   rbx
  43e84d:	sub    rsp,0xfb8
  43e854:	mov    r12,0x473dd0
  43e85b:	mov    rax,QWORD PTR fs:0x28
  43e864:	mov    QWORD PTR [rsp+0xfa8],rax
  43e86c:	xor    eax,eax
  43e86e:	mov    rax,QWORD PTR [r12]
  43e872:	test   rax,rax
  43e875:	je     43e8b0 <strcmp@plt+0x3b0f8>
  43e877:	mov    ecx,DWORD PTR [rax+0x18]
  43e87a:	test   ecx,ecx
  43e87c:	jne    43e8b0 <strcmp@plt+0x3b0f8>
  43e87e:	mov    rax,QWORD PTR [rsp+0xfa8]
  43e886:	xor    rax,QWORD PTR fs:0x28
  43e88f:	jne    43eae2 <strcmp@plt+0x3b32a>
  43e895:	add    rsp,0xfb8
  43e89c:	pop    rbx
  43e89d:	pop    rbp
  43e89e:	pop    r12
  43e8a0:	pop    r13
  43e8a2:	pop    r14
  43e8a4:	pop    r15
  43e8a6:	ret    
  43e8a7:	nop    WORD PTR [rax+rax*1+0x0]
  43e8b0:	cmp    r14d,0x4
  43e8b4:	jg     43eac8 <strcmp@plt+0x3b310>
  43e8ba:	movabs rsi,0x5053494c202a2a2a
  43e8c4:	mov    DWORD PTR [rsp+0x20],0xa0a2a
  43e8cc:	mov    rbx,rsp
  43e8cf:	mov    QWORD PTR [rsp],rsi
  43e8d3:	movabs rsi,0x6e4920434f4c5220
  43e8dd:	mov    r13d,0xfa0
  43e8e3:	mov    QWORD PTR [rsp+0x8],rsi
  43e8e8:	movabs rsi,0x7365636166726574
  43e8f2:	mov    QWORD PTR [rsp+0x10],rsi
  43e8f7:	movabs rsi,0x2a2a207473694c20
  43e901:	mov    QWORD PTR [rsp+0x18],rsi
  43e906:	mov    rbp,QWORD PTR [rax+0x8]
  43e90a:	cmp    rax,rbp
  43e90d:	je     43eaa9 <strcmp@plt+0x3b2f1>
  43e913:	nop    DWORD PTR [rax+rax*1+0x0]
  43e918:	mov    r15,QWORD PTR [rbp+0x10]
  43e91c:	lea    rcx,[rip+0xfe92]        # 44e7b5 <strcmp@plt+0x4affd>
  43e923:	lea    rax,[rip+0xfe88]        # 44e7b2 <strcmp@plt+0x4affa>
  43e92a:	mov    rdi,rbx
  43e92d:	cmp    BYTE PTR [r15+0xc],0x0
  43e932:	cmovne rcx,rax
  43e936:	mov    edx,DWORD PTR [rdi]
  43e938:	add    rdi,0x4
  43e93c:	lea    eax,[rdx-0x1010101]
  43e942:	andn   eax,edx,eax
  43e947:	and    eax,0x80808080
  43e94c:	je     43e936 <strcmp@plt+0x3b17e>
  43e94e:	mov    edx,eax
  43e950:	lea    r8,[rip+0x13e85]        # 4527dc <strcmp@plt+0x4f024>
  43e957:	shr    edx,0x10
  43e95a:	test   eax,0x8080
  43e95f:	cmove  eax,edx
  43e962:	lea    rdx,[rdi+0x2]
  43e966:	mov    esi,eax
  43e968:	cmove  rdi,rdx
  43e96c:	add    sil,al
  43e96f:	mov    rsi,r13
  43e972:	sbb    rdi,0x3
  43e976:	sub    rsp,0x8
  43e97a:	mov    edx,0x1
  43e97f:	push   rcx
  43e980:	mov    r9,QWORD PTR [r15]
  43e983:	sub    rdi,rbx
  43e986:	sub    rsi,rdi
  43e989:	xor    eax,eax
  43e98b:	add    rdi,rbx
  43e98e:	mov    rcx,0xffffffffffffffff
  43e995:	call   4032a0 <__snprintf_chk@plt>
  43e99a:	mov    rdi,QWORD PTR [r15+0x10]
  43e99e:	pop    rax
  43e99f:	pop    rdx
  43e9a0:	test   rdi,rdi
  43e9a3:	je     43ea0e <strcmp@plt+0x3b256>
  43e9a5:	call   424890 <strcmp@plt+0x210d8>
  43e9aa:	mov    rdi,rbx
  43e9ad:	mov    ecx,DWORD PTR [rdi]
  43e9af:	add    rdi,0x4
  43e9b3:	lea    edx,[rcx-0x1010101]
  43e9b9:	andn   edx,ecx,edx
  43e9be:	and    edx,0x80808080
  43e9c4:	je     43e9ad <strcmp@plt+0x3b1f5>
  43e9c6:	mov    ecx,edx
  43e9c8:	lea    r8,[rip+0x13e1d]        # 4527ec <strcmp@plt+0x4f034>
  43e9cf:	mov    r9,rax
  43e9d2:	shr    ecx,0x10
  43e9d5:	test   edx,0x8080
  43e9db:	cmove  edx,ecx
  43e9de:	lea    rcx,[rdi+0x2]
  43e9e2:	mov    esi,edx
  43e9e4:	cmove  rdi,rcx
  43e9e8:	add    sil,dl
  43e9eb:	mov    rsi,r13
  43e9ee:	sbb    rdi,0x3
  43e9f2:	mov    rcx,0xffffffffffffffff
  43e9f9:	mov    edx,0x1
  43e9fe:	sub    rdi,rbx
  43ea01:	xor    eax,eax
  43ea03:	sub    rsi,rdi
  43ea06:	add    rdi,rbx
  43ea09:	call   4032a0 <__snprintf_chk@plt>
  43ea0e:	mov    rdi,QWORD PTR [r15+0x18]
  43ea12:	test   rdi,rdi
  43ea15:	je     43ea80 <strcmp@plt+0x3b2c8>
  43ea17:	call   424890 <strcmp@plt+0x210d8>
  43ea1c:	mov    rdi,rbx
  43ea1f:	mov    ecx,DWORD PTR [rdi]
  43ea21:	add    rdi,0x4
  43ea25:	lea    edx,[rcx-0x1010101]
  43ea2b:	andn   edx,ecx,edx
  43ea30:	and    edx,0x80808080
  43ea36:	je     43ea1f <strcmp@plt+0x3b267>
  43ea38:	mov    ecx,edx
  43ea3a:	lea    r8,[rip+0x13dbd]        # 4527fe <strcmp@plt+0x4f046>
  43ea41:	mov    r9,rax
  43ea44:	shr    ecx,0x10
  43ea47:	test   edx,0x8080
  43ea4d:	cmove  edx,ecx
  43ea50:	lea    rcx,[rdi+0x2]
  43ea54:	mov    esi,edx
  43ea56:	cmove  rdi,rcx
  43ea5a:	add    sil,dl
  43ea5d:	mov    rsi,r13
  43ea60:	sbb    rdi,0x3
  43ea64:	mov    rcx,0xffffffffffffffff
  43ea6b:	mov    edx,0x1
  43ea70:	sub    rdi,rbx
  43ea73:	xor    eax,eax
  43ea75:	sub    rsi,rdi
  43ea78:	add    rdi,rbx
  43ea7b:	call   4032a0 <__snprintf_chk@plt>
  43ea80:	mov    rbp,QWORD PTR [rbp+0x8]
  43ea84:	cmp    QWORD PTR [r12],rbp
  43ea88:	jne    43e918 <strcmp@plt+0x3b160>
  43ea8e:	cmp    r14d,0x4
  43ea92:	jle    43eaa9 <strcmp@plt+0x3b2f1>
  43ea94:	mov    rax,0x468e3c
  43ea9b:	mov    eax,DWORD PTR [rax]
  43ea9d:	add    eax,0x4
  43eaa0:	cmp    r14d,eax
  43eaa3:	jg     43e87e <strcmp@plt+0x3b0c6>
  43eaa9:	lea    rsi,[rip+0x8c08]        # 4476b8 <strcmp@plt+0x43f00>
  43eab0:	mov    rdx,rbx
  43eab3:	mov    edi,r14d
  43eab6:	xor    eax,eax
  43eab8:	call   4306a0 <strcmp@plt+0x2cee8>
  43eabd:	jmp    43e87e <strcmp@plt+0x3b0c6>
  43eac2:	nop    WORD PTR [rax+rax*1+0x0]
  43eac8:	mov    rdx,0x468e3c
  43eacf:	mov    edx,DWORD PTR [rdx]
  43ead1:	add    edx,0x4
  43ead4:	cmp    r14d,edx
  43ead7:	jg     43e87e <strcmp@plt+0x3b0c6>
  43eadd:	jmp    43e8ba <strcmp@plt+0x3b102>
  43eae2:	call   403460 <__stack_chk_fail@plt>
  43eae7:	nop    WORD PTR [rax+rax*1+0x0]
  43eaf0:	cmp    edi,0x2
  43eaf3:	je     43eb50 <strcmp@plt+0x3b398>
  43eaf5:	cmp    edi,0xa
  43eaf8:	jne    43eb38 <strcmp@plt+0x3b380>
  43eafa:	mov    rax,0x473dd0
  43eb01:	mov    rsi,QWORD PTR [rax]
  43eb04:	mov    rdx,QWORD PTR [rsi+0x8]
  43eb08:	cmp    rsi,rdx
  43eb0b:	jne    43eb19 <strcmp@plt+0x3b361>
  43eb0d:	jmp    43eb44 <strcmp@plt+0x3b38c>
  43eb0f:	nop
  43eb10:	mov    rdx,QWORD PTR [rdx+0x8]
  43eb14:	cmp    rsi,rdx
  43eb17:	je     43eb44 <strcmp@plt+0x3b38c>
  43eb19:	mov    rax,QWORD PTR [rdx+0x10]
  43eb1d:	mov    rcx,QWORD PTR [rax+0x18]
  43eb21:	test   rcx,rcx
  43eb24:	je     43eb10 <strcmp@plt+0x3b358>
  43eb26:	mov    ecx,DWORD PTR [rcx+0x18]
  43eb29:	test   ecx,ecx
  43eb2b:	je     43eb10 <strcmp@plt+0x3b358>
  43eb2d:	cmp    BYTE PTR [rax+0xc],0x1
  43eb31:	jne    43eb10 <strcmp@plt+0x3b358>
  43eb33:	repz ret 
  43eb35:	nop    DWORD PTR [rax]
  43eb38:	mov    rax,0x468e3c
  43eb3f:	cmp    DWORD PTR [rax],0x1
  43eb42:	jg     43eb90 <strcmp@plt+0x3b3d8>
  43eb44:	xor    eax,eax
  43eb46:	ret    
  43eb47:	nop    WORD PTR [rax+rax*1+0x0]
  43eb50:	mov    rax,0x473dd0
  43eb57:	mov    rsi,QWORD PTR [rax]
  43eb5a:	mov    rdx,QWORD PTR [rsi+0x8]
  43eb5e:	cmp    rsi,rdx
  43eb61:	jne    43eb71 <strcmp@plt+0x3b3b9>
  43eb63:	jmp    43eb44 <strcmp@plt+0x3b38c>
  43eb65:	nop    DWORD PTR [rax]
  43eb68:	mov    rdx,QWORD PTR [rdx+0x8]
  43eb6c:	cmp    rsi,rdx
  43eb6f:	je     43eb44 <strcmp@plt+0x3b38c>
  43eb71:	mov    rax,QWORD PTR [rdx+0x10]
  43eb75:	mov    rcx,QWORD PTR [rax+0x10]
  43eb79:	test   rcx,rcx
  43eb7c:	je     43eb68 <strcmp@plt+0x3b3b0>
  43eb7e:	mov    edi,DWORD PTR [rcx+0x18]
  43eb81:	test   edi,edi
  43eb83:	je     43eb68 <strcmp@plt+0x3b3b0>
  43eb85:	cmp    BYTE PTR [rax+0xc],0x1
  43eb89:	jne    43eb68 <strcmp@plt+0x3b3b0>
  43eb8b:	repz ret 
  43eb8d:	nop    DWORD PTR [rax]
  43eb90:	lea    rsi,[rip+0x13e09]        # 4529a0 <strcmp@plt+0x4f1e8>
  43eb97:	sub    rsp,0x8
  43eb9b:	mov    edx,edi
  43eb9d:	xor    eax,eax
  43eb9f:	mov    edi,0x6
  43eba4:	call   4306a0 <strcmp@plt+0x2cee8>
  43eba9:	xor    eax,eax
  43ebab:	add    rsp,0x8
  43ebaf:	ret    
  43ebb0:	cmp    esi,0x2
  43ebb3:	je     43ebc8 <strcmp@plt+0x3b410>
  43ebb5:	cmp    esi,0xa
  43ebb8:	jne    43ebc0 <strcmp@plt+0x3b408>
  43ebba:	mov    rax,QWORD PTR [rdi+0x18]
  43ebbe:	ret    
  43ebbf:	nop
  43ebc0:	xor    eax,eax
  43ebc2:	ret    
  43ebc3:	nop    DWORD PTR [rax+rax*1+0x0]
  43ebc8:	mov    rax,QWORD PTR [rdi+0x10]
  43ebcc:	ret    
  43ebcd:	nop    DWORD PTR [rax]
  43ebd0:	cmp    esi,0x2
  43ebd3:	je     43ebe8 <strcmp@plt+0x3b430>
  43ebd5:	cmp    esi,0xa
  43ebd8:	jne    43ebe0 <strcmp@plt+0x3b428>
  43ebda:	mov    rax,QWORD PTR [rdi+0x28]
  43ebde:	ret    
  43ebdf:	nop
  43ebe0:	xor    eax,eax
  43ebe2:	ret    
  43ebe3:	nop    DWORD PTR [rax+rax*1+0x0]
  43ebe8:	mov    rax,QWORD PTR [rdi+0x20]
  43ebec:	ret    
  43ebed:	nop    DWORD PTR [rax]
  43ebf0:	cmp    esi,0x2
  43ebf3:	push   r12
  43ebf5:	push   rbp
  43ebf6:	mov    rbp,rdi
  43ebf9:	push   rbx
  43ebfa:	mov    ebx,esi
  43ebfc:	je     43ed10 <strcmp@plt+0x3b558>
  43ec02:	cmp    esi,0xa
  43ec05:	jne    43ec50 <strcmp@plt+0x3b498>
  43ec07:	mov    rax,0x4747c0
  43ec0e:	cmp    DWORD PTR [rax],0x2
  43ec11:	je     43edd8 <strcmp@plt+0x3b620>
  43ec17:	mov    esi,0xa
  43ec1c:	call   43ebd0 <strcmp@plt+0x3b418>
  43ec21:	test   rax,rax
  43ec24:	je     43ef78 <strcmp@plt+0x3b7c0>
  43ec2a:	mov    esi,ebx
  43ec2c:	mov    rdi,rbp
  43ec2f:	call   43ebb0 <strcmp@plt+0x3b3f8>
  43ec34:	test   rax,rax
  43ec37:	je     43ed50 <strcmp@plt+0x3b598>
  43ec3d:	pop    rbx
  43ec3e:	mov    eax,0x1
  43ec43:	pop    rbp
  43ec44:	pop    r12
  43ec46:	ret    
  43ec47:	nop    WORD PTR [rax+rax*1+0x0]
  43ec50:	call   43ebd0 <strcmp@plt+0x3b418>
  43ec55:	test   rax,rax
  43ec58:	jne    43ec2a <strcmp@plt+0x3b472>
  43ec5a:	mov    rax,0x473da8
  43ec61:	mov    esi,ebx
  43ec63:	mov    rdi,QWORD PTR [rbp+0x0]
  43ec67:	mov    rax,QWORD PTR [rax]
  43ec6a:	call   QWORD PTR [rax+0x28]
  43ec6d:	cmp    ebx,0x2
  43ec70:	jne    43ede0 <strcmp@plt+0x3b628>
  43ec76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ec80:	mov    QWORD PTR [rbp+0x20],rax
  43ec84:	test   rax,rax
  43ec87:	je     43ef30 <strcmp@plt+0x3b778>
  43ec8d:	mov    r11d,DWORD PTR [rax+0x18]
  43ec91:	test   r11d,r11d
  43ec94:	je     43ef30 <strcmp@plt+0x3b778>
  43ec9a:	mov    rdx,0x468e3c
  43eca1:	mov    r9d,DWORD PTR [rdx]
  43eca4:	test   r9d,r9d
  43eca7:	jle    43ece0 <strcmp@plt+0x3b528>
  43eca9:	mov    rdi,rax
  43ecac:	call   424890 <strcmp@plt+0x210d8>
  43ecb1:	lea    rdx,[rip+0x8c68]        # 447920 <strcmp@plt+0x44168>
  43ecb8:	mov    r8,rax
  43ecbb:	mov    rcx,QWORD PTR [rbp+0x0]
  43ecbf:	lea    rax,[rip+0x8c5f]        # 447925 <strcmp@plt+0x4416d>
  43ecc6:	cmp    ebx,0x2
  43ecc9:	lea    rsi,[rip+0x13d30]        # 452a00 <strcmp@plt+0x4f248>
  43ecd0:	mov    edi,0x5
  43ecd5:	cmovne rdx,rax
  43ecd9:	xor    eax,eax
  43ecdb:	call   4306a0 <strcmp@plt+0x2cee8>
  43ece0:	mov    rax,0x46c558
  43ece7:	mov    esi,ebx
  43ece9:	mov    rdi,rbp
  43ecec:	mov    rax,QWORD PTR [rax]
  43ecef:	call   QWORD PTR [rax+0x18]
  43ecf2:	mov    rax,0x474830
  43ecf9:	mov    edx,ebx
  43ecfb:	mov    rsi,rbp
  43ecfe:	mov    rdi,QWORD PTR [rax]
  43ed01:	mov    rax,QWORD PTR [rdi+0x28]
  43ed05:	call   QWORD PTR [rax+0x18]
  43ed08:	jmp    43ec2a <strcmp@plt+0x3b472>
  43ed0d:	nop    DWORD PTR [rax]
  43ed10:	mov    rax,0x4747c0
  43ed17:	cmp    DWORD PTR [rax],0xa
  43ed1a:	je     43edd8 <strcmp@plt+0x3b620>
  43ed20:	mov    esi,0x2
  43ed25:	call   43ebd0 <strcmp@plt+0x3b418>
  43ed2a:	test   rax,rax
  43ed2d:	jne    43ec2a <strcmp@plt+0x3b472>
  43ed33:	mov    rax,0x473da8
  43ed3a:	mov    esi,0x2
  43ed3f:	mov    rdi,QWORD PTR [rbp+0x0]
  43ed43:	mov    rax,QWORD PTR [rax]
  43ed46:	call   QWORD PTR [rax+0x28]
  43ed49:	jmp    43ec80 <strcmp@plt+0x3b4c8>
  43ed4e:	xchg   ax,ax
  43ed50:	cmp    ebx,0x2
  43ed53:	je     43ee10 <strcmp@plt+0x3b658>
  43ed59:	cmp    ebx,0xa
  43ed5c:	jne    43ede0 <strcmp@plt+0x3b628>
  43ed62:	mov    rax,0x473da8
  43ed69:	mov    r12,0x473dc0
  43ed70:	mov    rdi,QWORD PTR [rbp+0x0]
  43ed74:	mov    rax,QWORD PTR [rax]
  43ed77:	mov    esi,DWORD PTR [r12]
  43ed7b:	call   QWORD PTR [rax+0x30]
  43ed7e:	test   rax,rax
  43ed81:	mov    QWORD PTR [rbp+0x18],rax
  43ed85:	je     43eee2 <strcmp@plt+0x3b72a>
  43ed8b:	mov    ecx,DWORD PTR [rax+0x18]
  43ed8e:	test   ecx,ecx
  43ed90:	je     43ec3d <strcmp@plt+0x3b485>
  43ed96:	mov    rdx,0x468e3c
  43ed9d:	mov    edx,DWORD PTR [rdx]
  43ed9f:	test   edx,edx
  43eda1:	jg     43ee80 <strcmp@plt+0x3b6c8>
  43eda7:	mov    rax,0x46c558
  43edae:	mov    esi,ebx
  43edb0:	mov    rdi,rbp
  43edb3:	mov    rax,QWORD PTR [rax]
  43edb6:	call   QWORD PTR [rax+0x10]
  43edb9:	mov    rax,0x474830
  43edc0:	mov    edx,ebx
  43edc2:	mov    rsi,rbp
  43edc5:	mov    rdi,QWORD PTR [rax]
  43edc8:	mov    rax,QWORD PTR [rdi+0x28]
  43edcc:	call   QWORD PTR [rax+0x10]
  43edcf:	jmp    43ec3d <strcmp@plt+0x3b485>
  43edd4:	nop    DWORD PTR [rax+0x0]
  43edd8:	pop    rbx
  43edd9:	xor    eax,eax
  43eddb:	pop    rbp
  43eddc:	pop    r12
  43edde:	ret    
  43eddf:	nop
  43ede0:	mov    rax,0x468e3c
  43ede7:	cmp    DWORD PTR [rax],0x1
  43edea:	jle    43ee01 <strcmp@plt+0x3b649>
  43edec:	lea    rsi,[rip+0x13a2f]        # 452822 <strcmp@plt+0x4f06a>
  43edf3:	mov    edx,ebx
  43edf5:	mov    edi,0x6
  43edfa:	xor    eax,eax
  43edfc:	call   4306a0 <strcmp@plt+0x2cee8>
  43ee01:	pop    rbx
  43ee02:	mov    eax,0xfffffffe
  43ee07:	pop    rbp
  43ee08:	pop    r12
  43ee0a:	ret    
  43ee0b:	nop    DWORD PTR [rax+rax*1+0x0]
  43ee10:	mov    rax,0x473da8
  43ee17:	mov    esi,0x2
  43ee1c:	mov    rdi,QWORD PTR [rbp+0x0]
  43ee20:	mov    rax,QWORD PTR [rax]
  43ee23:	call   QWORD PTR [rax+0x18]
  43ee26:	mov    r8d,DWORD PTR [rax+0x18]
  43ee2a:	mov    r12,rax
  43ee2d:	test   r8d,r8d
  43ee30:	jne    43eec0 <strcmp@plt+0x3b708>
  43ee36:	mov    rax,0x468e3c
  43ee3d:	mov    edi,DWORD PTR [rax]
  43ee3f:	test   edi,edi
  43ee41:	jle    43ee5a <strcmp@plt+0x3b6a2>
  43ee43:	mov    rdx,QWORD PTR [rbp+0x0]
  43ee47:	lea    rsi,[rip+0x13c72]        # 452ac0 <strcmp@plt+0x4f308>
  43ee4e:	mov    edi,0x5
  43ee53:	xor    eax,eax
  43ee55:	call   4306a0 <strcmp@plt+0x2cee8>
  43ee5a:	xor    edi,edi
  43ee5c:	call   424670 <strcmp@plt+0x20eb8>
  43ee61:	mov    rdi,r12
  43ee64:	mov    QWORD PTR [rbp+0x10],rax
  43ee68:	call   42dac0 <strcmp@plt+0x2a308>
  43ee6d:	mov    rax,QWORD PTR [rbp+0x10]
  43ee71:	jmp    43ed8b <strcmp@plt+0x3b5d3>
  43ee76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ee80:	mov    rdi,rax
  43ee83:	call   424890 <strcmp@plt+0x210d8>
  43ee88:	lea    rdx,[rip+0x8a91]        # 447920 <strcmp@plt+0x44168>
  43ee8f:	mov    r8,rax
  43ee92:	mov    rcx,QWORD PTR [rbp+0x0]
  43ee96:	lea    rax,[rip+0x8a88]        # 447925 <strcmp@plt+0x4416d>
  43ee9d:	cmp    ebx,0x2
  43eea0:	lea    rsi,[rip+0x13bd9]        # 452a80 <strcmp@plt+0x4f2c8>
  43eea7:	mov    edi,0x5
  43eeac:	cmovne rdx,rax
  43eeb0:	xor    eax,eax
  43eeb2:	call   4306a0 <strcmp@plt+0x2cee8>
  43eeb7:	jmp    43eda7 <strcmp@plt+0x3b5ef>
  43eebc:	nop    DWORD PTR [rax+0x0]
  43eec0:	mov    rax,QWORD PTR [rax+0x8]
  43eec4:	mov    rdi,QWORD PTR [rax+0x10]
  43eec8:	call   424b80 <strcmp@plt+0x213c8>
  43eecd:	mov    rdi,r12
  43eed0:	mov    QWORD PTR [rbp+0x10],rax
  43eed4:	call   42dac0 <strcmp@plt+0x2a308>
  43eed9:	mov    rax,QWORD PTR [rbp+0x10]
  43eedd:	jmp    43ed8b <strcmp@plt+0x3b5d3>
  43eee2:	mov    rax,0x468e3c
  43eee9:	mov    esi,DWORD PTR [rax]
  43eeeb:	test   esi,esi
  43eeed:	jle    43ef1d <strcmp@plt+0x3b765>
  43eeef:	cmp    DWORD PTR [r12],0x1
  43eef4:	lea    rax,[rip+0x13915]        # 452810 <strcmp@plt+0x4f058>
  43eefb:	lea    rcx,[rip+0x13919]        # 45281b <strcmp@plt+0x4f063>
  43ef02:	mov    rdx,QWORD PTR [rbp+0x0]
  43ef06:	lea    rsi,[rip+0x13b2b]        # 452a38 <strcmp@plt+0x4f280>
  43ef0d:	mov    edi,0x5
  43ef12:	cmove  rcx,rax
  43ef16:	xor    eax,eax
  43ef18:	call   4306a0 <strcmp@plt+0x2cee8>
  43ef1d:	xor    edi,edi
  43ef1f:	call   424670 <strcmp@plt+0x20eb8>
  43ef24:	mov    QWORD PTR [rbp+0x18],rax
  43ef28:	jmp    43ed8b <strcmp@plt+0x3b5d3>
  43ef2d:	nop    DWORD PTR [rax]
  43ef30:	mov    rax,0x468e3c
  43ef37:	mov    r10d,DWORD PTR [rax]
  43ef3a:	test   r10d,r10d
  43ef3d:	jle    43ec2a <strcmp@plt+0x3b472>
  43ef43:	lea    rax,[rip+0x89db]        # 447925 <strcmp@plt+0x4416d>
  43ef4a:	mov    rcx,QWORD PTR [rbp+0x0]
  43ef4e:	lea    rdx,[rip+0x89cb]        # 447920 <strcmp@plt+0x44168>
  43ef55:	cmp    ebx,0x2
  43ef58:	lea    rsi,[rip+0x13a69]        # 4529c8 <strcmp@plt+0x4f210>
  43ef5f:	mov    edi,0x5
  43ef64:	cmovne rdx,rax
  43ef68:	xor    eax,eax
  43ef6a:	call   4306a0 <strcmp@plt+0x2cee8>
  43ef6f:	jmp    43ec2a <strcmp@plt+0x3b472>
  43ef74:	nop    DWORD PTR [rax+0x0]
  43ef78:	mov    rax,0x473da8
  43ef7f:	mov    esi,0xa
  43ef84:	mov    rdi,QWORD PTR [rbp+0x0]
  43ef88:	mov    rax,QWORD PTR [rax]
  43ef8b:	call   QWORD PTR [rax+0x28]
  43ef8e:	mov    QWORD PTR [rbp+0x28],rax
  43ef92:	jmp    43ec84 <strcmp@plt+0x3b4cc>
  43ef97:	nop    WORD PTR [rax+rax*1+0x0]
  43efa0:	cmp    esi,0x2
  43efa3:	je     43efc0 <strcmp@plt+0x3b808>
  43efa5:	cmp    esi,0xa
  43efa8:	jne    43efb0 <strcmp@plt+0x3b7f8>
  43efaa:	mov    eax,DWORD PTR [rdi+0x34]
  43efad:	ret    
  43efae:	xchg   ax,ax
  43efb0:	mov    eax,0xfffffff7
  43efb5:	ret    
  43efb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43efc0:	mov    eax,DWORD PTR [rdi+0x30]
  43efc3:	ret    
  43efc4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43efcf:	nop
  43efd0:	cmp    esi,0x2
  43efd3:	lea    rax,[rdi+0x30]
  43efd7:	je     43efe9 <strcmp@plt+0x3b831>
  43efd9:	add    rdi,0x34
  43efdd:	mov    eax,0x0
  43efe2:	cmp    esi,0xa
  43efe5:	cmove  rax,rdi
  43efe9:	repz ret 
  43efeb:	nop    DWORD PTR [rax+rax*1+0x0]
  43eff0:	push   rbp
  43eff1:	push   rbx
  43eff2:	mov    rbp,rdi
  43eff5:	sub    rsp,0x8
  43eff9:	call   4251c0 <strcmp@plt+0x21a08>
  43effe:	mov    rdi,rbp
  43f001:	movzx  ebx,ax
  43f004:	call   43e770 <strcmp@plt+0x3afb8>
  43f009:	test   rax,rax
  43f00c:	je     43f020 <strcmp@plt+0x3b868>
  43f00e:	add    rsp,0x8
  43f012:	mov    esi,ebx
  43f014:	mov    rdi,rax
  43f017:	pop    rbx
  43f018:	pop    rbp
  43f019:	jmp    43efd0 <strcmp@plt+0x3b818>
  43f01e:	xchg   ax,ax
  43f020:	add    rsp,0x8
  43f024:	xor    eax,eax
  43f026:	pop    rbx
  43f027:	pop    rbp
  43f028:	ret    
  43f029:	nop    DWORD PTR [rax+0x0]
  43f030:	sub    rsp,0x8
  43f034:	cmp    DWORD PTR [rdi+0x18],0x1
  43f038:	je     43f070 <strcmp@plt+0x3b8b8>
  43f03a:	mov    rax,0x468e3c
  43f041:	mov    eax,DWORD PTR [rax]
  43f043:	test   eax,eax
  43f045:	jle    43f062 <strcmp@plt+0x3b8aa>
  43f047:	call   424890 <strcmp@plt+0x210d8>
  43f04c:	lea    rsi,[rip+0x13aad]        # 452b00 <strcmp@plt+0x4f348>
  43f053:	mov    rdx,rax
  43f056:	mov    edi,0x5
  43f05b:	xor    eax,eax
  43f05d:	call   4306a0 <strcmp@plt+0x2cee8>
  43f062:	xor    eax,eax
  43f064:	add    rsp,0x8
  43f068:	ret    
  43f069:	nop    DWORD PTR [rax+0x0]
  43f070:	call   424890 <strcmp@plt+0x210d8>
  43f075:	mov    rsi,rax
  43f078:	mov    rax,0x473dc8
  43f07f:	mov    rdi,QWORD PTR [rax]
  43f082:	add    rsp,0x8
  43f086:	jmp    43a470 <strcmp@plt+0x36cb8>
  43f08b:	nop    DWORD PTR [rax+rax*1+0x0]
  43f090:	sub    rsp,0x28
  43f094:	mov    rax,QWORD PTR fs:0x28
  43f09d:	mov    QWORD PTR [rsp+0x18],rax
  43f0a2:	xor    eax,eax
  43f0a4:	call   4035c0 <getpid@plt>
  43f0a9:	lea    rsi,[rsp+0xc]
  43f0ae:	lea    rdi,[rsp+0x4]
  43f0b3:	mov    DWORD PTR [rsp+0x8],eax
  43f0b7:	mov    DWORD PTR [rsp+0x4],0x19980330
  43f0bf:	call   403490 <capget@plt>
  43f0c4:	test   eax,eax
  43f0c6:	js     43f138 <strcmp@plt+0x3b980>
  43f0c8:	mov    rax,0x468e3c
  43f0cf:	mov    eax,DWORD PTR [rax]
  43f0d1:	test   eax,eax
  43f0d3:	jle    43f0f0 <strcmp@plt+0x3b938>
  43f0d5:	mov    ecx,DWORD PTR [rsp+0x10]
  43f0d9:	mov    edx,DWORD PTR [rsp+0xc]
  43f0dd:	lea    rsi,[rip+0x13ae4]        # 452bc8 <strcmp@plt+0x4f410>
  43f0e4:	mov    edi,0x5
  43f0e9:	xor    eax,eax
  43f0eb:	call   4306a0 <strcmp@plt+0x2cee8>
  43f0f0:	mov    edx,DWORD PTR [rsp+0xc]
  43f0f4:	mov    eax,0x1
  43f0f9:	and    edx,0x3000
  43f0ff:	cmp    edx,0x3000
  43f105:	je     43f11c <strcmp@plt+0x3b964>
  43f107:	lea    rsi,[rip+0x13a72]        # 452b80 <strcmp@plt+0x4f3c8>
  43f10e:	xor    eax,eax
  43f110:	mov    edi,0x1
  43f115:	call   4306a0 <strcmp@plt+0x2cee8>
  43f11a:	xor    eax,eax
  43f11c:	mov    rcx,QWORD PTR [rsp+0x18]
  43f121:	xor    rcx,QWORD PTR fs:0x28
  43f12a:	jne    43f14f <strcmp@plt+0x3b997>
  43f12c:	add    rsp,0x28
  43f130:	ret    
  43f131:	nop    DWORD PTR [rax+0x0]
  43f138:	lea    rsi,[rip+0x13a21]        # 452b60 <strcmp@plt+0x4f3a8>
  43f13f:	xor    eax,eax
  43f141:	mov    edi,0x1
  43f146:	call   4306a0 <strcmp@plt+0x2cee8>
  43f14b:	xor    eax,eax
  43f14d:	jmp    43f11c <strcmp@plt+0x3b964>
  43f14f:	call   403460 <__stack_chk_fail@plt>
  43f154:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43f15f:	nop
  43f160:	sub    rsp,0x8
  43f164:	mov    rax,0x468e3c
  43f16b:	cmp    DWORD PTR [rax],0x1
  43f16e:	jle    43f183 <strcmp@plt+0x3b9cb>
  43f170:	lea    rsi,[rip+0x13be6]        # 452d5d <strcmp@plt+0x4f5a5>
  43f177:	mov    edi,0x6
  43f17c:	xor    eax,eax
  43f17e:	call   4306a0 <strcmp@plt+0x2cee8>
  43f183:	mov    rax,0x474830
  43f18a:	mov    rdi,QWORD PTR [rax]
  43f18d:	call   407d80 <strcmp@plt+0x45c8>
  43f192:	mov    rax,0x46c558
  43f199:	mov    rdx,QWORD PTR [rax]
  43f19c:	test   rdx,rdx
  43f19f:	je     43f1a6 <strcmp@plt+0x3b9ee>
  43f1a1:	xor    eax,eax
  43f1a3:	call   QWORD PTR [rdx+0x8]
  43f1a6:	mov    rax,0x473da8
  43f1ad:	mov    rdx,QWORD PTR [rax]
  43f1b0:	test   rdx,rdx
  43f1b3:	je     43f1ba <strcmp@plt+0x3ba02>
  43f1b5:	xor    eax,eax
  43f1b7:	call   QWORD PTR [rdx+0x8]
  43f1ba:	xor    eax,eax
  43f1bc:	call   43e410 <strcmp@plt+0x3ac58>
  43f1c1:	mov    rax,0x4747a8
  43f1c8:	mov    rdi,QWORD PTR [rax]
  43f1cb:	call   437d20 <strcmp@plt+0x34568>
  43f1d0:	xor    eax,eax
  43f1d2:	call   43ad50 <strcmp@plt+0x37598>
  43f1d7:	mov    rax,0x474858
  43f1de:	mov    rdi,QWORD PTR [rax]
  43f1e1:	call   42e680 <strcmp@plt+0x2aec8>
  43f1e6:	mov    rax,0x474860
  43f1ed:	mov    rdi,QWORD PTR [rax]
  43f1f0:	call   4354f0 <strcmp@plt+0x31d38>
  43f1f5:	xor    eax,eax
  43f1f7:	call   430f00 <strcmp@plt+0x2d748>
  43f1fc:	lea    rsi,[rip+0x13b4e]        # 452d51 <strcmp@plt+0x4f599>
  43f203:	mov    edi,0x4
  43f208:	xor    eax,eax
  43f20a:	call   4306a0 <strcmp@plt+0x2cee8>
  43f20f:	xor    edi,edi
  43f211:	call   4034c0 <exit@plt>
  43f216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43f220:	sub    rsp,0x8
  43f224:	cmp    edi,0x2
  43f227:	mov    rax,0x468e3c
  43f22e:	je     43f270 <strcmp@plt+0x3bab8>
  43f230:	cmp    edi,0xf
  43f233:	je     43f260 <strcmp@plt+0x3baa8>
  43f235:	cmp    edi,0x1
  43f238:	je     43f250 <strcmp@plt+0x3ba98>
  43f23a:	mov    eax,DWORD PTR [rax]
  43f23c:	test   eax,eax
  43f23e:	jg     43f2c0 <strcmp@plt+0x3bb08>
  43f244:	mov    edi,0x1
  43f249:	call   4034c0 <exit@plt>
  43f24e:	xchg   ax,ax
  43f250:	mov    esi,DWORD PTR [rax]
  43f252:	test   esi,esi
  43f254:	jg     43f2a8 <strcmp@plt+0x3baf0>
  43f256:	add    rsp,0x8
  43f25a:	ret    
  43f25b:	nop    DWORD PTR [rax+rax*1+0x0]
  43f260:	mov    ecx,DWORD PTR [rax]
  43f262:	test   ecx,ecx
  43f264:	jg     43f290 <strcmp@plt+0x3bad8>
  43f266:	add    rsp,0x8
  43f26a:	jmp    43f160 <strcmp@plt+0x3b9a8>
  43f26f:	nop
  43f270:	mov    edx,DWORD PTR [rax]
  43f272:	test   edx,edx
  43f274:	jle    43f266 <strcmp@plt+0x3baae>
  43f276:	lea    rsi,[rip+0x1399b]        # 452c18 <strcmp@plt+0x4f460>
  43f27d:	mov    edi,0x5
  43f282:	xor    eax,eax
  43f284:	call   4306a0 <strcmp@plt+0x2cee8>
  43f289:	jmp    43f266 <strcmp@plt+0x3baae>
  43f28b:	nop    DWORD PTR [rax+rax*1+0x0]
  43f290:	lea    rsi,[rip+0x13959]        # 452bf0 <strcmp@plt+0x4f438>
  43f297:	mov    edi,0x5
  43f29c:	xor    eax,eax
  43f29e:	call   4306a0 <strcmp@plt+0x2cee8>
  43f2a3:	jmp    43f266 <strcmp@plt+0x3baae>
  43f2a5:	nop    DWORD PTR [rax]
  43f2a8:	lea    rsi,[rip+0x13abb]        # 452d6a <strcmp@plt+0x4f5b2>
  43f2af:	mov    edi,0x5
  43f2b4:	xor    eax,eax
  43f2b6:	add    rsp,0x8
  43f2ba:	jmp    4306a0 <strcmp@plt+0x2cee8>
  43f2bf:	nop
  43f2c0:	lea    rsi,[rip+0x13abb]        # 452d82 <strcmp@plt+0x4f5ca>
  43f2c7:	mov    edx,edi
  43f2c9:	xor    eax,eax
  43f2cb:	mov    edi,0x5
  43f2d0:	call   4306a0 <strcmp@plt+0x2cee8>
  43f2d5:	jmp    43f244 <strcmp@plt+0x3ba8c>
  43f2da:	nop    WORD PTR [rax+rax*1+0x0]
  43f2e0:	push   rbx
  43f2e1:	mov    rbx,rdi
  43f2e4:	call   4036c0 <zmq_ctx_new@plt>
  43f2e9:	mov    esi,0x3
  43f2ee:	mov    rdi,rax
  43f2f1:	mov    QWORD PTR [rbx],rax
  43f2f4:	call   403710 <zmq_socket@plt>
  43f2f9:	lea    rsi,[rip+0x13b04]        # 452e04 <strcmp@plt+0x4f64c>
  43f300:	mov    QWORD PTR [rbx+0x8],rax
  43f304:	mov    rdi,rax
  43f307:	call   4033c0 <zmq_connect@plt>
  43f30c:	test   eax,eax
  43f30e:	je     43f338 <strcmp@plt+0x3bb80>
  43f310:	mov    rdx,0x468e3c
  43f317:	cmp    DWORD PTR [rdx],0x1
  43f31a:	jg     43f370 <strcmp@plt+0x3bbb8>
  43f31c:	lea    rsi,[rip+0x13b35]        # 452e58 <strcmp@plt+0x4f6a0>
  43f323:	xor    eax,eax
  43f325:	mov    edi,0x2
  43f32a:	call   4306a0 <strcmp@plt+0x2cee8>
  43f32f:	xor    eax,eax
  43f331:	pop    rbx
  43f332:	ret    
  43f333:	nop    DWORD PTR [rax+rax*1+0x0]
  43f338:	mov    rax,0x468e3c
  43f33f:	cmp    DWORD PTR [rax],0x1
  43f342:	jg     43f350 <strcmp@plt+0x3bb98>
  43f344:	mov    eax,0x1
  43f349:	pop    rbx
  43f34a:	ret    
  43f34b:	nop    DWORD PTR [rax+rax*1+0x0]
  43f350:	lea    rsi,[rip+0x13b61]        # 452eb8 <strcmp@plt+0x4f700>
  43f357:	xor    eax,eax
  43f359:	mov    edi,0x6
  43f35e:	call   4306a0 <strcmp@plt+0x2cee8>
  43f363:	mov    eax,0x1
  43f368:	jmp    43f349 <strcmp@plt+0x3bb91>
  43f36a:	nop    WORD PTR [rax+rax*1+0x0]
  43f370:	mov    edi,eax
  43f372:	call   4030f0 <zmq_strerror@plt>
  43f377:	lea    rsi,[rip+0x13b0a]        # 452e88 <strcmp@plt+0x4f6d0>
  43f37e:	mov    rdx,rax
  43f381:	mov    edi,0x6
  43f386:	xor    eax,eax
  43f388:	call   4306a0 <strcmp@plt+0x2cee8>
  43f38d:	jmp    43f31c <strcmp@plt+0x3bb64>
  43f38f:	nop
  43f390:	push   rbp
  43f391:	push   rbx
  43f392:	mov    rbx,rdi
  43f395:	sub    rsp,0x8
  43f399:	mov    rbp,0x468e3c
  43f3a0:	cmp    DWORD PTR [rbp+0x0],0x1
  43f3a4:	jle    43f3b9 <strcmp@plt+0x3bc01>
  43f3a6:	lea    rsi,[rip+0x13a6a]        # 452e17 <strcmp@plt+0x4f65f>
  43f3ad:	mov    edi,0x6
  43f3b2:	xor    eax,eax
  43f3b4:	call   4306a0 <strcmp@plt+0x2cee8>
  43f3b9:	mov    rdi,QWORD PTR [rbx+0x8]
  43f3bd:	call   4035d0 <zmq_close@plt>
  43f3c2:	mov    rdi,QWORD PTR [rbx]
  43f3c5:	call   403650 <zmq_ctx_destroy@plt>
  43f3ca:	cmp    DWORD PTR [rbp+0x0],0x1
  43f3ce:	jg     43f3e0 <strcmp@plt+0x3bc28>
  43f3d0:	add    rsp,0x8
  43f3d4:	pop    rbx
  43f3d5:	pop    rbp
  43f3d6:	ret    
  43f3d7:	nop    WORD PTR [rax+rax*1+0x0]
  43f3e0:	add    rsp,0x8
  43f3e4:	lea    rsi,[rip+0x13a4a]        # 452e35 <strcmp@plt+0x4f67d>
  43f3eb:	mov    edi,0x6
  43f3f0:	pop    rbx
  43f3f1:	pop    rbp
  43f3f2:	xor    eax,eax
  43f3f4:	jmp    4306a0 <strcmp@plt+0x2cee8>
  43f3f9:	nop    DWORD PTR [rax+0x0]
  43f400:	mov    rax,QWORD PTR [rsi]
  43f403:	mov    QWORD PTR [rdi],rax
  43f406:	lea    rax,[rdi+0x8]
  43f40a:	ret    
  43f40b:	nop    DWORD PTR [rax+rax*1+0x0]
  43f410:	mov    BYTE PTR [rdi],sil
  43f413:	mov    BYTE PTR [rdi+0x1],dl
  43f416:	mov    BYTE PTR [rdi+0x2],cl
  43f419:	mov    BYTE PTR [rdi+0x3],r8b
  43f41d:	mov    DWORD PTR [rdi+0x4],r9d
  43f421:	ret    
  43f422:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43f42d:	nop    DWORD PTR [rax]
  43f430:	push   r12
  43f432:	push   rbp
  43f433:	mov    r9d,0x4
  43f439:	push   rbx
  43f43a:	mov    r12,rdi
  43f43d:	mov    ebp,r8d
  43f440:	mov    r8d,0x1
  43f446:	sub    rsp,0x10
  43f44a:	mov    rdi,rsp
  43f44d:	mov    rax,QWORD PTR fs:0x28
  43f456:	mov    QWORD PTR [rsp+0x8],rax
  43f45b:	xor    eax,eax
  43f45d:	call   43f410 <strcmp@plt+0x3bc58>
  43f462:	mov    edi,0xc
  43f467:	call   434790 <strcmp@plt+0x30fd8>
  43f46c:	mov    rsi,rsp
  43f46f:	mov    QWORD PTR [r12],rax
  43f473:	mov    rdi,rax
  43f476:	call   43f400 <strcmp@plt+0x3bc48>
  43f47b:	mov    rbx,QWORD PTR [rsp+0x8]
  43f480:	xor    rbx,QWORD PTR fs:0x28
  43f489:	mov    DWORD PTR [rax],ebp
  43f48b:	jne    43f49b <strcmp@plt+0x3bce3>
  43f48d:	add    rsp,0x10
  43f491:	mov    eax,0xc
  43f496:	pop    rbx
  43f497:	pop    rbp
  43f498:	pop    r12
  43f49a:	ret    
  43f49b:	call   403460 <__stack_chk_fail@plt>
  43f4a0:	push   r13
  43f4a2:	push   r12
  43f4a4:	mov    r13,rsi
  43f4a7:	push   rbp
  43f4a8:	push   rbx
  43f4a9:	mov    rbp,rdi
  43f4ac:	sub    rsp,0x28
  43f4b0:	mov    rax,QWORD PTR fs:0x28
  43f4b9:	mov    QWORD PTR [rsp+0x18],rax
  43f4be:	xor    eax,eax
  43f4c0:	cmp    edx,0x1
  43f4c3:	je     43f570 <strcmp@plt+0x3bdb8>
  43f4c9:	mov    rdx,0xffffffffffffffff
  43f4d0:	xor    ebx,ebx
  43f4d2:	mov    rax,QWORD PTR [rbp+0x8]
  43f4d6:	mov    rdi,rsp
  43f4d9:	mov    esi,0x1
  43f4de:	mov    QWORD PTR [rsp],rax
  43f4e2:	mov    eax,0x1
  43f4e7:	mov    WORD PTR [rsp+0xc],ax
  43f4ec:	call   403400 <zmq_poll@plt>
  43f4f1:	test   eax,eax
  43f4f3:	je     43f580 <strcmp@plt+0x3bdc8>
  43f4f9:	mov    r12,0x468e3c
  43f500:	cmp    DWORD PTR [r12],0x2
  43f505:	jle    43f51a <strcmp@plt+0x3bd62>
  43f507:	lea    rsi,[rip+0x139fa]        # 452f08 <strcmp@plt+0x4f750>
  43f50e:	mov    edi,0x7
  43f513:	xor    eax,eax
  43f515:	call   4306a0 <strcmp@plt+0x2cee8>
  43f51a:	mov    rdi,QWORD PTR [rbp+0x8]
  43f51e:	mov    ecx,ebx
  43f520:	mov    edx,0x1000
  43f525:	mov    rsi,r13
  43f528:	call   403550 <zmq_recv@plt>
  43f52d:	cmp    DWORD PTR [r12],0x2
  43f532:	mov    ebx,eax
  43f534:	jle    43f54b <strcmp@plt+0x3bd93>
  43f536:	lea    rsi,[rip+0x139f3]        # 452f30 <strcmp@plt+0x4f778>
  43f53d:	mov    edx,eax
  43f53f:	mov    edi,0x7
  43f544:	xor    eax,eax
  43f546:	call   4306a0 <strcmp@plt+0x2cee8>
  43f54b:	cmp    ebx,0xffffffff
  43f54e:	je     43f587 <strcmp@plt+0x3bdcf>
  43f550:	mov    rcx,QWORD PTR [rsp+0x18]
  43f555:	xor    rcx,QWORD PTR fs:0x28
  43f55e:	mov    eax,ebx
  43f560:	jne    43f5ab <strcmp@plt+0x3bdf3>
  43f562:	add    rsp,0x28
  43f566:	pop    rbx
  43f567:	pop    rbp
  43f568:	pop    r12
  43f56a:	pop    r13
  43f56c:	ret    
  43f56d:	nop    DWORD PTR [rax]
  43f570:	mov    ebx,edx
  43f572:	xor    edx,edx
  43f574:	jmp    43f4d2 <strcmp@plt+0x3bd1a>
  43f579:	nop    DWORD PTR [rax+0x0]
  43f580:	mov    ebx,0xfffffffe
  43f585:	jmp    43f550 <strcmp@plt+0x3bd98>
  43f587:	call   403050 <__errno_location@plt>
  43f58c:	mov    edi,DWORD PTR [rax]
  43f58e:	call   4030f0 <zmq_strerror@plt>
  43f593:	lea    rsi,[rip+0x13946]        # 452ee0 <strcmp@plt+0x4f728>
  43f59a:	mov    rdx,rax
  43f59d:	mov    edi,0x2
  43f5a2:	xor    eax,eax
  43f5a4:	call   4306a0 <strcmp@plt+0x2cee8>
  43f5a9:	jmp    43f550 <strcmp@plt+0x3bd98>
  43f5ab:	call   403460 <__stack_chk_fail@plt>
  43f5b0:	push   r13
  43f5b2:	push   r12
  43f5b4:	mov    r13,rsi
  43f5b7:	push   rbp
  43f5b8:	push   rbx
  43f5b9:	mov    r12,rdi
  43f5bc:	mov    ebx,edx
  43f5be:	sub    rsp,0x8
  43f5c2:	mov    rbp,0x468e3c
  43f5c9:	cmp    DWORD PTR [rbp+0x0],0x2
  43f5cd:	jle    43f5e2 <strcmp@plt+0x3be2a>
  43f5cf:	lea    rsi,[rip+0x139aa]        # 452f80 <strcmp@plt+0x4f7c8>
  43f5d6:	mov    edi,0x7
  43f5db:	xor    eax,eax
  43f5dd:	call   4306a0 <strcmp@plt+0x2cee8>
  43f5e2:	mov    rdi,QWORD PTR [r12+0x8]
  43f5e7:	movsxd rdx,ebx
  43f5ea:	xor    ecx,ecx
  43f5ec:	mov    rsi,r13
  43f5ef:	call   4033d0 <zmq_send@plt>
  43f5f4:	cmp    DWORD PTR [rbp+0x0],0x2
  43f5f8:	mov    ebx,eax
  43f5fa:	jle    43f611 <strcmp@plt+0x3be59>
  43f5fc:	lea    rsi,[rip+0x139b5]        # 452fb8 <strcmp@plt+0x4f800>
  43f603:	mov    edx,eax
  43f605:	mov    edi,0x7
  43f60a:	xor    eax,eax
  43f60c:	call   4306a0 <strcmp@plt+0x2cee8>
  43f611:	cmp    ebx,0xffffffff
  43f614:	je     43f630 <strcmp@plt+0x3be78>
  43f616:	add    rsp,0x8
  43f61a:	mov    eax,0x1
  43f61f:	pop    rbx
  43f620:	pop    rbp
  43f621:	pop    r12
  43f623:	pop    r13
  43f625:	ret    
  43f626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43f630:	call   403050 <__errno_location@plt>
  43f635:	mov    edi,DWORD PTR [rax]
  43f637:	call   4030f0 <zmq_strerror@plt>
  43f63c:	lea    rsi,[rip+0x13915]        # 452f58 <strcmp@plt+0x4f7a0>
  43f643:	mov    rdx,rax
  43f646:	mov    edi,0x2
  43f64b:	xor    eax,eax
  43f64d:	call   4306a0 <strcmp@plt+0x2cee8>
  43f652:	add    rsp,0x8
  43f656:	mov    eax,0x1
  43f65b:	pop    rbx
  43f65c:	pop    rbp
  43f65d:	pop    r12
  43f65f:	pop    r13
  43f661:	ret    
  43f662:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  43f66d:	nop    DWORD PTR [rax]
  43f670:	push   r15
  43f672:	push   r14
  43f674:	mov    r15d,edx
  43f677:	push   r13
  43f679:	push   r12
  43f67b:	mov    r12,rdi
  43f67e:	push   rbp
  43f67f:	push   rbx
  43f680:	mov    edi,0x1000
  43f685:	mov    ebx,r9d
  43f688:	mov    r13,r8
  43f68b:	mov    r14d,esi
  43f68e:	sub    rsp,0x18
  43f692:	mov    DWORD PTR [rsp+0xc],ecx
  43f696:	call   434790 <strcmp@plt+0x30fd8>
  43f69b:	mov    ecx,DWORD PTR [rsp+0xc]
  43f69f:	mov    r9d,ebx
  43f6a2:	xor    r8d,r8d
  43f6a5:	mov    rbp,rax
  43f6a8:	mov    rdi,rax
  43f6ab:	mov    edx,r15d
  43f6ae:	mov    esi,r14d
  43f6b1:	call   43f410 <strcmp@plt+0x3bc58>
  43f6b6:	lea    rdi,[rbp+0x8]
  43f6ba:	movsxd rdx,ebx
  43f6bd:	mov    rsi,r13
  43f6c0:	call   403340 <memcpy@plt>
  43f6c5:	lea    edx,[rbx+0x8]
  43f6c8:	xor    ecx,ecx
  43f6ca:	mov    rsi,rbp
  43f6cd:	mov    rdi,r12
  43f6d0:	call   43f5b0 <strcmp@plt+0x3bdf8>
  43f6d5:	mov    rdi,rbp
  43f6d8:	call   4037b0 <free@plt>
  43f6dd:	mov    edi,0x1000
  43f6e2:	call   434790 <strcmp@plt+0x30fd8>
  43f6e7:	xor    edx,edx
  43f6e9:	mov    rbx,rax
  43f6ec:	mov    rsi,rax
  43f6ef:	mov    rdi,r12
  43f6f2:	call   43f4a0 <strcmp@plt+0x3bce8>
  43f6f7:	cmp    BYTE PTR [rbx+0x3],0x1
  43f6fb:	je     43f720 <strcmp@plt+0x3bf68>
  43f6fd:	mov    rdi,rbx
  43f700:	call   4037b0 <free@plt>
  43f705:	mov    eax,0x1
  43f70a:	add    rsp,0x18
  43f70e:	pop    rbx
  43f70f:	pop    rbp
  43f710:	pop    r12
  43f712:	pop    r13
  43f714:	pop    r14
  43f716:	pop    r15
  43f718:	ret    
  43f719:	nop    DWORD PTR [rax+0x0]
  43f720:	cmp    DWORD PTR [rbx+0x4],0x4
  43f724:	jne    43f6fd <strcmp@plt+0x3bf45>
  43f726:	cmp    BYTE PTR [rbx+0x8],0x0
  43f72a:	jne    43f6fd <strcmp@plt+0x3bf45>
  43f72c:	mov    rdi,rbx
  43f72f:	call   4037b0 <free@plt>
  43f734:	xor    eax,eax
  43f736:	jmp    43f70a <strcmp@plt+0x3bf52>
  43f738:	nop    DWORD PTR [rax+rax*1+0x0]
  43f740:	push   r13
  43f742:	push   r12
  43f744:	mov    r12,rdi
  43f747:	push   rbp
  43f748:	push   rbx
  43f749:	mov    rbx,rsi
  43f74c:	sub    rsp,0x18
  43f750:	mov    rax,QWORD PTR fs:0x28
  43f759:	mov    QWORD PTR [rsp+0x8],rax
  43f75e:	xor    eax,eax
  43f760:	mov    rax,0x468e3c
  43f767:	cmp    DWORD PTR [rax],0x1
  43f76a:	jle    43f77f <strcmp@plt+0x3bfc7>
  43f76c:	lea    rsi,[rip+0x13875]        # 452fe8 <strcmp@plt+0x4f830>
  43f773:	mov    edi,0x6
  43f778:	xor    eax,eax
  43f77a:	call   4306a0 <strcmp@plt+0x2cee8>
  43f77f:	mov    rax,0x474850
  43f786:	mov    rdi,QWORD PTR [rax]
  43f789:	call   410710 <strcmp@plt+0xcf58>
  43f78e:	mov    rdi,QWORD PTR [rax+0x30]
  43f792:	mov    rbp,rax
  43f795:	mov    esi,0x2
  43f79a:	call   4094a0 <strcmp@plt+0x5ce8>
  43f79f:	mov    rdi,QWORD PTR [rbp+0x30]
  43f7a3:	mov    esi,0xa
  43f7a8:	mov    r13,rax
  43f7ab:	call   4094a0 <strcmp@plt+0x5ce8>
  43f7b0:	mov    rbp,rax
  43f7b3:	mov    rax,QWORD PTR [r13+0x8]
  43f7b7:	mov    rdi,QWORD PTR [rax+0x28]
  43f7bb:	call   42da80 <strcmp@plt+0x2a2c8>
  43f7c0:	mov    rax,QWORD PTR [rbp+0x8]
  43f7c4:	mov    rdi,QWORD PTR [rax+0x28]
  43f7c8:	call   42da80 <strcmp@plt+0x2a2c8>
  43f7cd:	movzx  ecx,BYTE PTR [rbx+0x2]
  43f7d1:	movzx  edx,BYTE PTR [rbx+0x1]
  43f7d5:	xor    r8d,r8d
  43f7d8:	movzx  esi,BYTE PTR [rbx]
  43f7db:	mov    rdi,rsp
  43f7de:	call   43f430 <strcmp@plt+0x3bc78>
  43f7e3:	mov    rsi,QWORD PTR [rsp]
  43f7e7:	xor    ecx,ecx
  43f7e9:	mov    edx,eax
  43f7eb:	mov    rdi,r12
  43f7ee:	call   43f5b0 <strcmp@plt+0x3bdf8>
  43f7f3:	mov    rdx,QWORD PTR [rsp+0x8]
  43f7f8:	xor    rdx,QWORD PTR fs:0x28
  43f801:	mov    eax,0x1
  43f806:	jne    43f813 <strcmp@plt+0x3c05b>
  43f808:	add    rsp,0x18
  43f80c:	pop    rbx
  43f80d:	pop    rbp
  43f80e:	pop    r12
  43f810:	pop    r13
  43f812:	ret    
  43f813:	call   403460 <__stack_chk_fail@plt>
  43f818:	nop    DWORD PTR [rax+rax*1+0x0]
  43f820:	push   r13
  43f822:	push   r12
  43f824:	mov    r13,rdi
  43f827:	push   rbp
  43f828:	push   rbx
  43f829:	mov    rbx,rsi
  43f82c:	sub    rsp,0x18
  43f830:	mov    r12,0x468e3c
  43f837:	mov    rax,QWORD PTR fs:0x28
  43f840:	mov    QWORD PTR [rsp+0x8],rax
  43f845:	xor    eax,eax
  43f847:	cmp    DWORD PTR [r12],0x1
  43f84c:	jle    43f861 <strcmp@plt+0x3c0a9>
  43f84e:	lea    rsi,[rip+0x13803]        # 453058 <strcmp@plt+0x4f8a0>
  43f855:	mov    edi,0x6
  43f85a:	xor    eax,eax
  43f85c:	call   4306a0 <strcmp@plt+0x2cee8>
  43f861:	mov    rax,0x474850
  43f868:	mov    rdi,QWORD PTR [rax]
  43f86b:	call   410710 <strcmp@plt+0xcf58>
  43f870:	mov    rdi,QWORD PTR [rax+0x78]
  43f874:	mov    ebp,DWORD PTR [rdi+0x18]
  43f877:	test   ebp,ebp
  43f879:	je     43f8e8 <strcmp@plt+0x3c130>
  43f87b:	call   42da80 <strcmp@plt+0x2a2c8>
  43f880:	movzx  ecx,BYTE PTR [rbx+0x2]
  43f884:	movzx  edx,BYTE PTR [rbx+0x1]
  43f888:	xor    r8d,r8d
  43f88b:	movzx  esi,BYTE PTR [rbx]
  43f88e:	mov    rdi,rsp
  43f891:	call   43f430 <strcmp@plt+0x3bc78>
  43f896:	mov    rsi,QWORD PTR [rsp]
  43f89a:	xor    ecx,ecx
  43f89c:	mov    edx,eax
  43f89e:	mov    rdi,r13
  43f8a1:	call   43f5b0 <strcmp@plt+0x3bdf8>
  43f8a6:	mov    eax,DWORD PTR [r12]
  43f8aa:	test   eax,eax
  43f8ac:	jg     43f8d0 <strcmp@plt+0x3c118>
  43f8ae:	mov    ebp,0x1
  43f8b3:	mov    rdx,QWORD PTR [rsp+0x8]
  43f8b8:	xor    rdx,QWORD PTR fs:0x28
  43f8c1:	mov    eax,ebp
  43f8c3:	jne    43f926 <strcmp@plt+0x3c16e>
  43f8c5:	add    rsp,0x18
  43f8c9:	pop    rbx
  43f8ca:	pop    rbp
  43f8cb:	pop    r12
  43f8cd:	pop    r13
  43f8cf:	ret    
  43f8d0:	lea    rsi,[rip+0x137a9]        # 453080 <strcmp@plt+0x4f8c8>
  43f8d7:	mov    edi,0x5
  43f8dc:	xor    eax,eax
  43f8de:	call   4306a0 <strcmp@plt+0x2cee8>
  43f8e3:	jmp    43f8ae <strcmp@plt+0x3c0f6>
  43f8e5:	nop    DWORD PTR [rax]
  43f8e8:	movzx  ecx,BYTE PTR [rbx+0x2]
  43f8ec:	movzx  edx,BYTE PTR [rbx+0x1]
  43f8f0:	mov    rdi,rsp
  43f8f3:	movzx  esi,BYTE PTR [rbx]
  43f8f6:	mov    r8d,0x1
  43f8fc:	call   43f430 <strcmp@plt+0x3bc78>
  43f901:	mov    rsi,QWORD PTR [rsp]
  43f905:	mov    rdi,r13
  43f908:	xor    ecx,ecx
  43f90a:	mov    edx,eax
  43f90c:	call   43f5b0 <strcmp@plt+0x3bdf8>
  43f911:	lea    rsi,[rip+0x136f8]        # 453010 <strcmp@plt+0x4f858>
  43f918:	mov    edi,0x3
  43f91d:	xor    eax,eax
  43f91f:	call   4306a0 <strcmp@plt+0x2cee8>
  43f924:	jmp    43f8b3 <strcmp@plt+0x3c0fb>
  43f926:	call   403460 <__stack_chk_fail@plt>
  43f92b:	nop    DWORD PTR [rax+rax*1+0x0]
  43f930:	push   r13
  43f932:	push   r12
  43f934:	mov    r13,rdi
  43f937:	push   rbp
  43f938:	push   rbx
  43f939:	mov    rbx,rsi
  43f93c:	sub    rsp,0x18
  43f940:	mov    r12,0x468e3c
  43f947:	mov    rax,QWORD PTR fs:0x28
  43f950:	mov    QWORD PTR [rsp+0x8],rax
  43f955:	xor    eax,eax
  43f957:	cmp    DWORD PTR [r12],0x1
  43f95c:	jle    43f971 <strcmp@plt+0x3c1b9>
  43f95e:	lea    rsi,[rip+0x13743]        # 4530a8 <strcmp@plt+0x4f8f0>
  43f965:	mov    edi,0x6
  43f96a:	xor    eax,eax
  43f96c:	call   4306a0 <strcmp@plt+0x2cee8>
  43f971:	mov    rax,0x474850
  43f978:	mov    rdi,QWORD PTR [rax]
  43f97b:	call   410710 <strcmp@plt+0xcf58>
  43f980:	mov    rdi,QWORD PTR [rax+0x48]
  43f984:	mov    ebp,DWORD PTR [rdi+0x18]
  43f987:	test   ebp,ebp
  43f989:	je     43f9f8 <strcmp@plt+0x3c240>
  43f98b:	call   42da80 <strcmp@plt+0x2a2c8>
  43f990:	movzx  ecx,BYTE PTR [rbx+0x2]
  43f994:	movzx  edx,BYTE PTR [rbx+0x1]
  43f998:	xor    r8d,r8d
  43f99b:	movzx  esi,BYTE PTR [rbx]
  43f99e:	mov    rdi,rsp
  43f9a1:	call   43f430 <strcmp@plt+0x3bc78>
  43f9a6:	mov    rsi,QWORD PTR [rsp]
  43f9aa:	xor    ecx,ecx
  43f9ac:	mov    edx,eax
  43f9ae:	mov    rdi,r13
  43f9b1:	call   43f5b0 <strcmp@plt+0x3bdf8>
  43f9b6:	mov    eax,DWORD PTR [r12]
  43f9ba:	test   eax,eax
  43f9bc:	jg     43f9e0 <strcmp@plt+0x3c228>
  43f9be:	mov    ebp,0x1
  43f9c3:	mov    rdx,QWORD PTR [rsp+0x8]
  43f9c8:	xor    rdx,QWORD PTR fs:0x28
  43f9d1:	mov    eax,ebp
  43f9d3:	jne    43fa36 <strcmp@plt+0x3c27e>
  43f9d5:	add    rsp,0x18
  43f9d9:	pop    rbx
  43f9da:	pop    rbp
  43f9db:	pop    r12
  43f9dd:	pop    r13
  43f9df:	ret    
  43f9e0:	lea    rsi,[rip+0x136e9]        # 4530d0 <strcmp@plt+0x4f918>
  43f9e7:	mov    edi,0x5
  43f9ec:	xor    eax,eax
  43f9ee:	call   4306a0 <strcmp@plt+0x2cee8>
  43f9f3:	jmp    43f9be <strcmp@plt+0x3c206>
  43f9f5:	nop    DWORD PTR [rax]
  43f9f8:	movzx  ecx,BYTE PTR [rbx+0x2]
  43f9fc:	movzx  edx,BYTE PTR [rbx+0x1]
  43fa00:	mov    rdi,rsp
  43fa03:	movzx  esi,BYTE PTR [rbx]
  43fa06:	mov    r8d,0x1
  43fa0c:	call   43f430 <strcmp@plt+0x3bc78>
  43fa11:	mov    rsi,QWORD PTR [rsp]
  43fa15:	mov    rdi,r13
  43fa18:	xor    ecx,ecx
  43fa1a:	mov    edx,eax
  43fa1c:	call   43f5b0 <strcmp@plt+0x3bdf8>
  43fa21:	lea    rsi,[rip+0x135e8]        # 453010 <strcmp@plt+0x4f858>
  43fa28:	mov    edi,0x3
  43fa2d:	xor    eax,eax
  43fa2f:	call   4306a0 <strcmp@plt+0x2cee8>
  43fa34:	jmp    43f9c3 <strcmp@plt+0x3c20b>
  43fa36:	call   403460 <__stack_chk_fail@plt>
  43fa3b:	nop    DWORD PTR [rax+rax*1+0x0]
  43fa40:	push   r15
  43fa42:	push   r14
  43fa44:	push   r13
  43fa46:	push   r12
  43fa48:	push   rbp
  43fa49:	push   rbx
  43fa4a:	sub    rsp,0x868
  43fa51:	mov    rax,QWORD PTR fs:0x28
  43fa5a:	mov    QWORD PTR [rsp+0x858],rax
  43fa62:	xor    eax,eax
  43fa64:	mov    rax,0x468e3c
  43fa6b:	mov    QWORD PTR [rsp+0x20],rdi
  43fa70:	mov    QWORD PTR [rsp+0x28],rsi
  43fa75:	cmp    DWORD PTR [rax],0x1
  43fa78:	jle    43fa8d <strcmp@plt+0x3c2d5>
  43fa7a:	lea    rsi,[rip+0x13677]        # 4530f8 <strcmp@plt+0x4f940>
  43fa81:	mov    edi,0x6
  43fa86:	xor    eax,eax
  43fa88:	call   4306a0 <strcmp@plt+0x2cee8>
  43fa8d:	mov    rbp,0x474850
  43fa94:	mov    rdi,QWORD PTR [rbp+0x0]
  43fa98:	call   410710 <strcmp@plt+0xcf58>
  43fa9d:	mov    rbx,rax
  43faa0:	mov    QWORD PTR [rsp+0x18],rax
  43faa5:	call   42d4e0 <strcmp@plt+0x29d28>
  43faaa:	mov    r15,rax
  43faad:	mov    QWORD PTR [rsp+0x8],rax
  43fab2:	mov    rax,QWORD PTR [rbx+0x70]
  43fab6:	mov    rsi,r15
  43fab9:	mov    rax,QWORD PTR [rax]
  43fabc:	mov    rdi,QWORD PTR [rax]
  43fabf:	call   42d540 <strcmp@plt+0x29d88>
  43fac4:	mov    rax,QWORD PTR [rbx+0x70]
  43fac8:	mov    rsi,r15
  43facb:	mov    rax,QWORD PTR [rax]
  43face:	mov    rdi,QWORD PTR [rax+0x8]
  43fad2:	call   42d540 <strcmp@plt+0x29d88>
  43fad7:	mov    rsi,QWORD PTR [rbx+0x70]
  43fadb:	mov    rax,QWORD PTR [rsi]
  43fade:	mov    rdx,QWORD PTR [rax+0x10]
  43fae2:	mov    rdi,QWORD PTR [rdx]
  43fae5:	mov    ecx,DWORD PTR [rdi]
  43fae7:	test   ecx,ecx
  43fae9:	je     43fb3e <strcmp@plt+0x3c386>
  43faeb:	xor    ebx,ebx
  43faed:	jmp    43fb01 <strcmp@plt+0x3c349>
  43faef:	nop
  43faf0:	mov    rax,QWORD PTR [rsi]
  43faf3:	add    ebx,0x1
  43faf6:	mov    rdx,QWORD PTR [rax+0x10]
  43fafa:	mov    rdi,QWORD PTR [rdx]
  43fafd:	cmp    DWORD PTR [rdi],ebx
  43faff:	je     43fb3e <strcmp@plt+0x3c386>
  43fb01:	mov    r8,QWORD PTR [rdi+0x10]
  43fb05:	lea    eax,[rbx+rbx*1]
  43fb08:	mov    ecx,ebx
  43fb0a:	shr    ecx,0x4
  43fb0d:	and    eax,0x1e
  43fb10:	mov    edx,eax
  43fb12:	mov    eax,DWORD PTR [r8+rcx*4]
  43fb16:	shrx   eax,eax,edx
  43fb1b:	test   al,0x3
  43fb1d:	jne    43faf0 <strcmp@plt+0x3c338>
  43fb1f:	mov    rdx,QWORD PTR [rdi+0x20]
  43fb23:	mov    eax,ebx
  43fb25:	mov    rsi,QWORD PTR [rsp+0x8]
  43fb2a:	mov    rdi,QWORD PTR [rdx+rax*8]
  43fb2e:	call   42d540 <strcmp@plt+0x29d88>
  43fb33:	mov    rax,QWORD PTR [rsp+0x18]
  43fb38:	mov    rsi,QWORD PTR [rax+0x70]
  43fb3c:	jmp    43faf0 <strcmp@plt+0x3c338>
  43fb3e:	mov    rdx,QWORD PTR [rax+0x18]
  43fb42:	mov    rdi,QWORD PTR [rdx]
  43fb45:	mov    edx,DWORD PTR [rdi]
  43fb47:	test   edx,edx
  43fb49:	je     43fb9e <strcmp@plt+0x3c3e6>
  43fb4b:	xor    ebx,ebx
  43fb4d:	jmp    43fb61 <strcmp@plt+0x3c3a9>
  43fb4f:	nop
  43fb50:	mov    rax,QWORD PTR [rsi]
  43fb53:	add    ebx,0x1
  43fb56:	mov    rdx,QWORD PTR [rax+0x18]
  43fb5a:	mov    rdi,QWORD PTR [rdx]
  43fb5d:	cmp    DWORD PTR [rdi],ebx
  43fb5f:	je     43fb9e <strcmp@plt+0x3c3e6>
  43fb61:	mov    r8,QWORD PTR [rdi+0x10]
  43fb65:	lea    eax,[rbx+rbx*1]
  43fb68:	mov    ecx,ebx
  43fb6a:	shr    ecx,0x4
  43fb6d:	and    eax,0x1e
  43fb70:	mov    edx,eax
  43fb72:	mov    eax,DWORD PTR [r8+rcx*4]
  43fb76:	shrx   eax,eax,edx
  43fb7b:	test   al,0x3
  43fb7d:	jne    43fb50 <strcmp@plt+0x3c398>
  43fb7f:	mov    rdx,QWORD PTR [rdi+0x20]
  43fb83:	mov    eax,ebx
  43fb85:	mov    rsi,QWORD PTR [rsp+0x8]
  43fb8a:	mov    rdi,QWORD PTR [rdx+rax*8]
  43fb8e:	call   42d540 <strcmp@plt+0x29d88>
  43fb93:	mov    rax,QWORD PTR [rsp+0x18]
  43fb98:	mov    rsi,QWORD PTR [rax+0x70]
  43fb9c:	jmp    43fb50 <strcmp@plt+0x3c398>
  43fb9e:	mov    rbx,QWORD PTR [rsp+0x8]
  43fba3:	mov    rdi,QWORD PTR [rax+0x20]
  43fba7:	lea    r13,[rsp+0x450]
  43fbaf:	mov    rsi,rbx
  43fbb2:	call   42d540 <strcmp@plt+0x29d88>
  43fbb7:	mov    rax,QWORD PTR [rsp+0x18]
  43fbbc:	mov    rsi,rbx
  43fbbf:	mov    rax,QWORD PTR [rax+0x70]
  43fbc3:	mov    rax,QWORD PTR [rax]
  43fbc6:	mov    rdi,QWORD PTR [rax+0x20]
  43fbca:	call   42d540 <strcmp@plt+0x29d88>
  43fbcf:	mov    rcx,QWORD PTR [rbx+0x8]
  43fbd3:	lea    rsi,[rsp+0x40]
  43fbd8:	mov    QWORD PTR [rsp+0x10],rsi
  43fbdd:	cmp    rbx,rcx
  43fbe0:	mov    QWORD PTR [rsp],rcx
  43fbe4:	je     43fd09 <strcmp@plt+0x3c551>
  43fbea:	nop    WORD PTR [rax+rax*1+0x0]
  43fbf0:	mov    rax,QWORD PTR [rsp]
  43fbf4:	mov    rax,QWORD PTR [rax+0x10]
  43fbf8:	mov    rbx,QWORD PTR [rax]
  43fbfb:	test   rbx,rbx
  43fbfe:	je     43fcf2 <strcmp@plt+0x3c53a>
  43fc04:	mov    r12,QWORD PTR [rsp+0x10]
  43fc09:	nop    DWORD PTR [rax+0x0]
  43fc10:	cmp    QWORD PTR [rbx+0x8],0x0
  43fc15:	je     43fc93 <strcmp@plt+0x3c4db>
  43fc17:	mov    rax,QWORD PTR [rbx+0x28]
  43fc1b:	mov    r14,QWORD PTR [rax]
  43fc1e:	test   r14,r14
  43fc21:	je     43fc93 <strcmp@plt+0x3c4db>
  43fc23:	mov    r15,r13
  43fc26:	cmp    QWORD PTR [r14+0x8],0x0
  43fc2b:	je     43fc47 <strcmp@plt+0x3c48f>
  43fc2d:	mov    rdi,QWORD PTR [r14+0x28]
  43fc31:	test   rdi,rdi
  43fc34:	je     43fc47 <strcmp@plt+0x3c48f>
  43fc36:	call   434230 <strcmp@plt+0x30a78>
  43fc3b:	mov    rdi,QWORD PTR [rbp+0x0]
  43fc3f:	mov    rsi,rax
  43fc42:	call   408250 <strcmp@plt+0x4a98>
  43fc47:	mov    rax,QWORD PTR [r14+0x10]
  43fc4b:	test   rax,rax
  43fc4e:	je     43fc78 <strcmp@plt+0x3c4c0>
  43fc50:	mov    rdx,QWORD PTR [r14+0x18]
  43fc54:	test   rdx,rdx
  43fc57:	je     43fcc0 <strcmp@plt+0x3c508>
  43fc59:	mov    r14,rax
  43fc5c:	mov    QWORD PTR [r15],rdx
  43fc5f:	add    r15,0x8
  43fc63:	cmp    QWORD PTR [r14+0x8],0x0
  43fc68:	jne    43fc2d <strcmp@plt+0x3c475>
  43fc6a:	mov    rax,QWORD PTR [r14+0x10]
  43fc6e:	test   rax,rax
  43fc71:	jne    43fc50 <strcmp@plt+0x3c498>
  43fc73:	nop    DWORD PTR [rax+rax*1+0x0]
  43fc78:	mov    r14,QWORD PTR [r14+0x18]
  43fc7c:	test   r14,r14
  43fc7f:	jne    43fc26 <strcmp@plt+0x3c46e>
  43fc81:	cmp    r15,r13
  43fc84:	je     43fc93 <strcmp@plt+0x3c4db>
  43fc86:	mov    r14,QWORD PTR [r15-0x8]
  43fc8a:	test   r14,r14
  43fc8d:	jne    43fdc6 <strcmp@plt+0x3c60e>
  43fc93:	mov    rax,QWORD PTR [rbx+0x10]
  43fc97:	test   rax,rax
  43fc9a:	je     43fcd0 <strcmp@plt+0x3c518>
  43fc9c:	mov    rdx,QWORD PTR [rbx+0x18]
  43fca0:	test   rdx,rdx
  43fca3:	je     43fdb0 <strcmp@plt+0x3c5f8>
  43fca9:	mov    QWORD PTR [r12],rdx
  43fcad:	mov    rbx,rax
  43fcb0:	add    r12,0x8
  43fcb4:	jmp    43fc10 <strcmp@plt+0x3c458>
  43fcb9:	nop    DWORD PTR [rax+0x0]
  43fcc0:	mov    r14,rax
  43fcc3:	jmp    43fc26 <strcmp@plt+0x3c46e>
  43fcc8:	nop    DWORD PTR [rax+rax*1+0x0]
  43fcd0:	mov    rbx,QWORD PTR [rbx+0x18]
  43fcd4:	test   rbx,rbx
  43fcd7:	jne    43fc10 <strcmp@plt+0x3c458>
  43fcdd:	cmp    r12,QWORD PTR [rsp+0x10]
  43fce2:	je     43fcf2 <strcmp@plt+0x3c53a>
  43fce4:	mov    rbx,QWORD PTR [r12-0x8]
  43fce9:	test   rbx,rbx
  43fcec:	jne    43fdb8 <strcmp@plt+0x3c600>
  43fcf2:	mov    rax,QWORD PTR [rsp]
  43fcf6:	mov    rax,QWORD PTR [rax+0x8]
  43fcfa:	cmp    QWORD PTR [rsp+0x8],rax
  43fcff:	mov    QWORD PTR [rsp],rax
  43fd03:	jne    43fbf0 <strcmp@plt+0x3c438>
  43fd09:	mov    rdi,QWORD PTR [rsp+0x8]
  43fd0e:	call   42dac0 <strcmp@plt+0x2a308>
  43fd13:	mov    rbx,QWORD PTR [rsp+0x18]
  43fd18:	mov    rdi,QWORD PTR [rbx+0x70]
  43fd1c:	call   408740 <strcmp@plt+0x4f88>
  43fd21:	xor    eax,eax
  43fd23:	call   4086f0 <strcmp@plt+0x4f38>
  43fd28:	mov    QWORD PTR [rbx+0x70],rax
  43fd2c:	mov    rax,QWORD PTR [rsp+0x28]
  43fd31:	lea    rdi,[rsp+0x38]
  43fd36:	xor    r8d,r8d
  43fd39:	movzx  ecx,BYTE PTR [rax+0x2]
  43fd3d:	movzx  edx,BYTE PTR [rax+0x1]
  43fd41:	movzx  esi,BYTE PTR [rax]
  43fd44:	call   43f430 <strcmp@plt+0x3bc78>
  43fd49:	mov    rsi,QWORD PTR [rsp+0x38]
  43fd4e:	mov    rdi,QWORD PTR [rsp+0x20]
  43fd53:	xor    ecx,ecx
  43fd55:	mov    edx,eax
  43fd57:	call   43f5b0 <strcmp@plt+0x3bdf8>
  43fd5c:	mov    rax,0x468e3c
  43fd63:	mov    eax,DWORD PTR [rax]
  43fd65:	test   eax,eax
  43fd67:	jle    43fd7c <strcmp@plt+0x3c5c4>
  43fd69:	lea    rsi,[rip+0x133b8]        # 453128 <strcmp@plt+0x4f970>
  43fd70:	mov    edi,0x5
  43fd75:	xor    eax,eax
  43fd77:	call   4306a0 <strcmp@plt+0x2cee8>
  43fd7c:	mov    rcx,QWORD PTR [rsp+0x858]
  43fd84:	xor    rcx,QWORD PTR fs:0x28
  43fd8d:	mov    eax,0x1
  43fd92:	jne    43fdc1 <strcmp@plt+0x3c609>
  43fd94:	add    rsp,0x868
  43fd9b:	pop    rbx
  43fd9c:	pop    rbp
  43fd9d:	pop    r12
  43fd9f:	pop    r13
  43fda1:	pop    r14
  43fda3:	pop    r15
  43fda5:	ret    
  43fda6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43fdb0:	mov    rbx,rax
  43fdb3:	jmp    43fc10 <strcmp@plt+0x3c458>
  43fdb8:	sub    r12,0x8
  43fdbc:	jmp    43fc10 <strcmp@plt+0x3c458>
  43fdc1:	call   403460 <__stack_chk_fail@plt>
  43fdc6:	sub    r15,0x8
  43fdca:	jmp    43fc26 <strcmp@plt+0x3c46e>
  43fdcf:	nop
  43fdd0:	push   rbp
  43fdd1:	push   rbx
  43fdd2:	mov    rbx,rdi
  43fdd5:	mov    rdi,rsi
  43fdd8:	sub    rsp,0x8
  43fddc:	call   4035b0 <xmlCharStrdup@plt>
  43fde1:	mov    rdi,rbx
  43fde4:	mov    rbp,rax
  43fde7:	call   403320 <xmlFirstElementChild@plt>
  43fdec:	test   rax,rax
  43fdef:	mov    rbx,rax
  43fdf2:	jne    43fe10 <strcmp@plt+0x3c658>
  43fdf4:	jmp    43fe38 <strcmp@plt+0x3c680>
  43fdf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43fe00:	mov    rdi,rbx
  43fe03:	call   403200 <xmlNextElementSibling@plt>
  43fe08:	test   rax,rax
  43fe0b:	mov    rbx,rax
  43fe0e:	je     43fe38 <strcmp@plt+0x3c680>
  43fe10:	mov    rdi,QWORD PTR [rbx+0x10]
  43fe14:	mov    rsi,rbp
  43fe17:	call   4037a0 <xmlStrEqual@plt>
  43fe1c:	test   eax,eax
  43fe1e:	je     43fe00 <strcmp@plt+0x3c648>
  43fe20:	mov    rdi,rbp
  43fe23:	call   4037b0 <free@plt>
  43fe28:	add    rsp,0x8
  43fe2c:	mov    rax,rbx
  43fe2f:	pop    rbx
  43fe30:	pop    rbp
  43fe31:	ret    
  43fe32:	nop    WORD PTR [rax+rax*1+0x0]
  43fe38:	xor    ebx,ebx
  43fe3a:	jmp    43fe20 <strcmp@plt+0x3c668>
  43fe3c:	nop    DWORD PTR [rax+0x0]
  43fe40:	push   r15
  43fe42:	push   r14
  43fe44:	push   r13
  43fe46:	push   r12
  43fe48:	push   rbp
  43fe49:	push   rbx
  43fe4a:	mov    rbx,rdx
  43fe4d:	sub    rsp,0x38
  43fe51:	mov    rax,QWORD PTR fs:0x28
  43fe5a:	mov    QWORD PTR [rsp+0x28],rax
  43fe5f:	xor    eax,eax
  43fe61:	mov    rax,0x468e3c
  43fe68:	mov    QWORD PTR [rsp+0x10],rdi
  43fe6d:	mov    QWORD PTR [rsp],rsi
  43fe71:	mov    edi,DWORD PTR [rax]
  43fe73:	test   edi,edi
  43fe75:	jle    43fe8a <strcmp@plt+0x3c6d2>
  43fe77:	lea    rsi,[rip+0x133ca]        # 453248 <strcmp@plt+0x4fa90>
  43fe7e:	mov    edi,0x5
  43fe83:	xor    eax,eax
  43fe85:	call   4306a0 <strcmp@plt+0x2cee8>
  43fe8a:	mov    rax,0x474850
  43fe91:	mov    rdi,QWORD PTR [rax]
  43fe94:	call   410710 <strcmp@plt+0xcf58>
  43fe99:	mov    rdi,QWORD PTR [rip+0x28120]        # 467fc0 <strcmp@plt+0x64808>
  43fea0:	mov    QWORD PTR [rsp+0x18],rax
  43fea5:	call   42d4f0 <strcmp@plt+0x29d38>
  43feaa:	mov    r13,rax
  43fead:	mov    rax,QWORD PTR [rsp]
  43feb1:	lea    rcx,[rip+0x14228]        # 4540e0 <strcmp@plt+0x50928>
  43feb8:	xor    edx,edx
  43feba:	mov    r8d,0x2160
  43fec0:	mov    rdi,rbx
  43fec3:	mov    esi,DWORD PTR [rax+0x4]
  43fec6:	call   403040 <xmlReadMemory@plt>
  43fecb:	mov    rdi,rax
  43fece:	mov    QWORD PTR [rsp+0x8],rax
  43fed3:	call   4035f0 <xmlDocGetRootElement@plt>
  43fed8:	lea    rsi,[rip+0x14207]        # 4540e6 <strcmp@plt+0x5092e>
  43fedf:	mov    rdi,rax
  43fee2:	call   43fdd0 <strcmp@plt+0x3c618>
  43fee7:	lea    rsi,[rip+0x14203]        # 4540f1 <strcmp@plt+0x50939>
  43feee:	mov    rdi,rax
  43fef1:	call   43fdd0 <strcmp@plt+0x3c618>
  43fef6:	test   rax,rax
  43fef9:	mov    r14,rax
  43fefc:	je     43fff4 <strcmp@plt+0x3c83c>
  43ff02:	lea    rsi,[rip+0x141f2]        # 4540fb <strcmp@plt+0x50943>
  43ff09:	mov    rdi,r14
  43ff0c:	call   43fdd0 <strcmp@plt+0x3c618>
  43ff11:	test   rax,rax
  43ff14:	mov    r15,rax
  43ff17:	je     43ffc4 <strcmp@plt+0x3c80c>
  43ff1d:	nop    DWORD PTR [rax]
  43ff20:	mov    rdi,r15
  43ff23:	call   403430 <xmlNodeGetContent@plt>
  43ff28:	mov    rbx,rax
  43ff2b:	xor    eax,eax
  43ff2d:	call   424740 <strcmp@plt+0x20f88>
  43ff32:	mov    rdi,rbx
  43ff35:	mov    rsi,rax
  43ff38:	mov    rbp,rax
  43ff3b:	call   4256a0 <strcmp@plt+0x21ee8>
  43ff40:	cmp    eax,0x1
  43ff43:	jne    440130 <strcmp@plt+0x3c978>
  43ff49:	mov    r12,0x4747c0
  43ff50:	mov    ecx,DWORD PTR [r12]
  43ff54:	test   ecx,ecx
  43ff56:	je     43ff6d <strcmp@plt+0x3c7b5>
  43ff58:	mov    rdi,rbp
  43ff5b:	call   4251c0 <strcmp@plt+0x21a08>
  43ff60:	movzx  eax,ax
  43ff63:	cmp    eax,DWORD PTR [r12]
  43ff67:	jne    4401fa <strcmp@plt+0x3ca42>
  43ff6d:	mov    rdx,QWORD PTR [rip+0x28064]        # 467fd8 <strcmp@plt+0x64820>
  43ff74:	mov    rsi,r13
  43ff77:	mov    rdi,rbx
  43ff7a:	call   42d7a0 <strcmp@plt+0x29fe8>
  43ff7f:	test   al,al
  43ff81:	jne    4401df <strcmp@plt+0x3ca27>
  43ff87:	mov    rdi,rbx
  43ff8a:	mov    rsi,r13
  43ff8d:	call   42d6d0 <strcmp@plt+0x29f18>
  43ff92:	mov    rdi,rbp
  43ff95:	call   424750 <strcmp@plt+0x20f98>
  43ff9a:	mov    rbx,QWORD PTR [r15+0x10]
  43ff9e:	jmp    43ffb4 <strcmp@plt+0x3c7fc>
  43ffa0:	mov    rdi,QWORD PTR [rax+0x10]
  43ffa4:	mov    rsi,rbx
  43ffa7:	call   4037b8 <strcmp@plt>
  43ffac:	test   eax,eax
  43ffae:	je     43ff20 <strcmp@plt+0x3c768>
  43ffb4:	mov    rdi,r15
  43ffb7:	call   403200 <xmlNextElementSibling@plt>
  43ffbc:	test   rax,rax
  43ffbf:	mov    r15,rax
  43ffc2:	jne    43ffa0 <strcmp@plt+0x3c7e8>
  43ffc4:	mov    rbx,QWORD PTR [r14+0x10]
  43ffc8:	jmp    43ffe4 <strcmp@plt+0x3c82c>
  43ffca:	nop    WORD PTR [rax+rax*1+0x0]
  43ffd0:	mov    rdi,QWORD PTR [rax+0x10]
  43ffd4:	mov    rsi,rbx
  43ffd7:	call   4037b8 <strcmp@plt>
  43ffdc:	test   eax,eax
  43ffde:	je     43ff02 <strcmp@plt+0x3c74a>
  43ffe4:	mov    rdi,r14
  43ffe7:	call   403200 <xmlNextElementSibling@plt>
  43ffec:	test   rax,rax
  43ffef:	mov    r14,rax
  43fff2:	jne    43ffd0 <strcmp@plt+0x3c818>
  43fff4:	mov    rdi,QWORD PTR [rsp+0x8]
  43fff9:	call   403740 <xmlFreeDoc@plt>
  43fffe:	mov    r14,QWORD PTR [rsp+0x18]
  440003:	mov    esi,0x2
  440008:	mov    rdi,QWORD PTR [r14+0x30]
  44000c:	call   4094a0 <strcmp@plt+0x5ce8>
  440011:	mov    rdi,QWORD PTR [r14+0x30]
  440015:	mov    esi,0xa
  44001a:	mov    rbx,rax
  44001d:	call   4094a0 <strcmp@plt+0x5ce8>
  440022:	mov    rbp,rax
  440025:	mov    rax,QWORD PTR [rbx+0x8]
  440029:	mov    rdi,QWORD PTR [rax+0x28]
  44002d:	call   42da80 <strcmp@plt+0x2a2c8>
  440032:	mov    rax,QWORD PTR [rbp+0x8]
  440036:	mov    rdi,QWORD PTR [rax+0x28]
  44003a:	call   42da80 <strcmp@plt+0x2a2c8>
  44003f:	mov    r12,QWORD PTR [r13+0x8]
  440043:	cmp    r13,r12
  440046:	je     440081 <strcmp@plt+0x3c8c9>
  440048:	mov    r14,QWORD PTR [r12+0x10]
  44004d:	mov    ecx,0x64
  440052:	mov    edx,0x1
  440057:	mov    rdi,rbx
  44005a:	mov    rsi,r14
  44005d:	call   406620 <strcmp@plt+0x2e68>
  440062:	mov    ecx,0x64
  440067:	mov    edx,0x1
  44006c:	mov    rsi,r14
  44006f:	mov    rdi,rbp
  440072:	call   406620 <strcmp@plt+0x2e68>
  440077:	mov    r12,QWORD PTR [r12+0x8]
  44007c:	cmp    r13,r12
  44007f:	jne    440048 <strcmp@plt+0x3c890>
  440081:	mov    r14,QWORD PTR [rsp+0x18]
  440086:	mov    rsi,rbx
  440089:	mov    rax,QWORD PTR [r14+0x38]
  44008d:	mov    rdi,QWORD PTR [r14+0x40]
  440091:	call   QWORD PTR [rax+0x38]
  440094:	mov    rdi,rbx
  440097:	call   433030 <strcmp@plt+0x2f878>
  44009c:	xor    edx,edx
  44009e:	mov    rsi,rax
  4400a1:	mov    rdi,r14
  4400a4:	call   4083c0 <strcmp@plt+0x4c08>
  4400a9:	mov    rax,QWORD PTR [r14+0x38]
  4400ad:	mov    rsi,rbp
  4400b0:	mov    rdi,QWORD PTR [r14+0x40]
  4400b4:	call   QWORD PTR [rax+0x38]
  4400b7:	mov    rdi,rbp
  4400ba:	call   433030 <strcmp@plt+0x2f878>
  4400bf:	xor    edx,edx
  4400c1:	mov    rsi,rax
  4400c4:	mov    rdi,r14
  4400c7:	call   4083c0 <strcmp@plt+0x4c08>
  4400cc:	mov    rax,0x468e3c
  4400d3:	mov    edx,DWORD PTR [rax]
  4400d5:	test   edx,edx
  4400d7:	jg     440215 <strcmp@plt+0x3ca5d>
  4400dd:	mov    rdi,QWORD PTR [rbx+0x8]
  4400e1:	call   42a820 <strcmp@plt+0x27068>
  4400e6:	mov    rdi,QWORD PTR [rbp+0x8]
  4400ea:	call   42a820 <strcmp@plt+0x27068>
  4400ef:	mov    rax,QWORD PTR [rsp]
  4400f3:	lea    rdi,[rsp+0x20]
  4400f8:	xor    r8d,r8d
  4400fb:	movzx  ecx,BYTE PTR [rax+0x2]
  4400ff:	movzx  edx,BYTE PTR [rax+0x1]
  440103:	movzx  esi,BYTE PTR [rax]
  440106:	call   43f430 <strcmp@plt+0x3bc78>
  44010b:	mov    rsi,QWORD PTR [rsp+0x20]
  440110:	mov    rdi,QWORD PTR [rsp+0x10]
  440115:	xor    ecx,ecx
  440117:	mov    edx,eax
  440119:	call   43f5b0 <strcmp@plt+0x3bdf8>
  44011e:	mov    eax,0x1
  440123:	jmp    4401bc <strcmp@plt+0x3ca04>
  440128:	nop    DWORD PTR [rax+rax*1+0x0]
  440130:	mov    rax,0x468e3c
  440137:	mov    esi,DWORD PTR [rax]
  440139:	test   esi,esi
  44013b:	jle    440153 <strcmp@plt+0x3c99b>
  44013d:	lea    rsi,[rip+0x13134]        # 453278 <strcmp@plt+0x4fac0>
  440144:	mov    rdx,rbx
  440147:	mov    edi,0x5
  44014c:	xor    eax,eax
  44014e:	call   4306a0 <strcmp@plt+0x2cee8>
  440153:	mov    rdi,rbp
  440156:	call   424750 <strcmp@plt+0x20f98>
  44015b:	mov    rdi,rbx
  44015e:	call   4037b0 <free@plt>
  440163:	mov    rdi,QWORD PTR [rsp+0x8]
  440168:	call   403740 <xmlFreeDoc@plt>
  44016d:	lea    rsi,[rip+0x130a4]        # 453218 <strcmp@plt+0x4fa60>
  440174:	xor    eax,eax
  440176:	mov    edi,0x2
  44017b:	call   4306a0 <strcmp@plt+0x2cee8>
  440180:	mov    rdi,r13
  440183:	call   42dac0 <strcmp@plt+0x2a308>
  440188:	mov    rax,QWORD PTR [rsp]
  44018c:	lea    rdi,[rsp+0x20]
  440191:	mov    r8d,0x1
  440197:	movzx  ecx,BYTE PTR [rax+0x2]
  44019b:	movzx  edx,BYTE PTR [rax+0x1]
  44019f:	movzx  esi,BYTE PTR [rax]
  4401a2:	call   43f430 <strcmp@plt+0x3bc78>
  4401a7:	mov    rsi,QWORD PTR [rsp+0x20]
  4401ac:	mov    rdi,QWORD PTR [rsp+0x10]
  4401b1:	xor    ecx,ecx
  4401b3:	mov    edx,eax
  4401b5:	call   43f5b0 <strcmp@plt+0x3bdf8>
  4401ba:	xor    eax,eax
  4401bc:	mov    rcx,QWORD PTR [rsp+0x28]
  4401c1:	xor    rcx,QWORD PTR fs:0x28
  4401ca:	jne    440251 <strcmp@plt+0x3ca99>
  4401d0:	add    rsp,0x38
  4401d4:	pop    rbx
  4401d5:	pop    rbp
  4401d6:	pop    r12
  4401d8:	pop    r13
  4401da:	pop    r14
  4401dc:	pop    r15
  4401de:	ret    
  4401df:	lea    rsi,[rip+0x12fda]        # 4531c0 <strcmp@plt+0x4fa08>
  4401e6:	mov    rdx,rbx
  4401e9:	mov    edi,0x3
  4401ee:	xor    eax,eax
  4401f0:	call   4306a0 <strcmp@plt+0x2cee8>
  4401f5:	jmp    440153 <strcmp@plt+0x3c99b>
  4401fa:	lea    rsi,[rip+0x12f4f]        # 453150 <strcmp@plt+0x4f998>
  440201:	mov    rdx,rbx
  440204:	mov    edi,0x3
  440209:	xor    eax,eax
  44020b:	call   4306a0 <strcmp@plt+0x2cee8>
  440210:	jmp    440153 <strcmp@plt+0x3c99b>
  440215:	lea    rsi,[rip+0x1309c]        # 4532b8 <strcmp@plt+0x4fb00>
  44021c:	xor    eax,eax
  44021e:	mov    edi,0x5
  440223:	call   4306a0 <strcmp@plt+0x2cee8>
  440228:	mov    rax,0x468e3c
  44022f:	mov    eax,DWORD PTR [rax]
  440231:	test   eax,eax
  440233:	jle    4400dd <strcmp@plt+0x3c925>
  440239:	lea    rsi,[rip+0x130b0]        # 4532f0 <strcmp@plt+0x4fb38>
  440240:	mov    edi,0x5
  440245:	xor    eax,eax
  440247:	call   4306a0 <strcmp@plt+0x2cee8>
  44024c:	jmp    4400dd <strcmp@plt+0x3c925>
  440251:	call   403460 <__stack_chk_fail@plt>
  440256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  440260:	push   r15
  440262:	push   r14
  440264:	mov    r14,rsi
  440267:	push   r13
  440269:	push   r12
  44026b:	push   rbp
  44026c:	push   rbx
  44026d:	mov    rbx,rdx
  440270:	sub    rsp,0x38
  440274:	mov    rax,QWORD PTR fs:0x28
  44027d:	mov    QWORD PTR [rsp+0x28],rax
  440282:	xor    eax,eax
  440284:	mov    rax,0x468e3c
  44028b:	mov    QWORD PTR [rsp+0x10],rdi
  440290:	mov    esi,DWORD PTR [rax]
  440292:	test   esi,esi
  440294:	jle    4402a9 <strcmp@plt+0x3caf1>
  440296:	lea    rsi,[rip+0x13163]        # 453400 <strcmp@plt+0x4fc48>
  44029d:	mov    edi,0x5
  4402a2:	xor    eax,eax
  4402a4:	call   4306a0 <strcmp@plt+0x2cee8>
  4402a9:	mov    rax,0x474850
  4402b0:	mov    rdi,QWORD PTR [rax]
  4402b3:	call   410710 <strcmp@plt+0xcf58>
  4402b8:	mov    rdi,0x424750
  4402bf:	mov    QWORD PTR [rsp+0x18],rax
  4402c4:	call   42d4f0 <strcmp@plt+0x29d38>
  4402c9:	mov    esi,DWORD PTR [r14+0x4]
  4402cd:	lea    rcx,[rip+0x13e0c]        # 4540e0 <strcmp@plt+0x50928>
  4402d4:	xor    edx,edx
  4402d6:	mov    r8d,0x2160
  4402dc:	mov    rdi,rbx
  4402df:	mov    r12,rax
  4402e2:	call   403040 <xmlReadMemory@plt>
  4402e7:	mov    rdi,rax
  4402ea:	mov    QWORD PTR [rsp+0x8],rax
  4402ef:	call   4035f0 <xmlDocGetRootElement@plt>
  4402f4:	lea    rsi,[rip+0x13e12]        # 45410d <strcmp@plt+0x50955>
  4402fb:	mov    rdi,rax
  4402fe:	call   43fdd0 <strcmp@plt+0x3c618>
  440303:	lea    rsi,[rip+0x13e11]        # 45411b <strcmp@plt+0x50963>
  44030a:	mov    rdi,rax
  44030d:	call   43fdd0 <strcmp@plt+0x3c618>
  440312:	test   rax,rax
  440315:	mov    r13,rax
  440318:	je     440414 <strcmp@plt+0x3cc5c>
  44031e:	lea    rsi,[rip+0x13e03]        # 454128 <strcmp@plt+0x50970>
  440325:	mov    rdi,r13
  440328:	call   43fdd0 <strcmp@plt+0x3c618>
  44032d:	test   rax,rax
  440330:	mov    r15,rax
  440333:	je     4403e4 <strcmp@plt+0x3cc2c>
  440339:	nop    DWORD PTR [rax+0x0]
  440340:	xor    eax,eax
  440342:	call   424740 <strcmp@plt+0x20f88>
  440347:	mov    rdi,r15
  44034a:	mov    rbx,rax
  44034d:	call   403430 <xmlNodeGetContent@plt>
  440352:	mov    rsi,rbx
  440355:	mov    rdi,rax
  440358:	call   4256a0 <strcmp@plt+0x21ee8>
  44035d:	cmp    eax,0x1
  440360:	jne    440498 <strcmp@plt+0x3cce0>
  440366:	mov    rbp,0x4747c0
  44036d:	mov    edx,DWORD PTR [rbp+0x0]
  440370:	test   edx,edx
  440372:	je     440388 <strcmp@plt+0x3cbd0>
  440374:	mov    rdi,rbx
  440377:	call   4251c0 <strcmp@plt+0x21a08>
  44037c:	movzx  eax,ax
  44037f:	cmp    eax,DWORD PTR [rbp+0x0]
  440382:	jne    440566 <strcmp@plt+0x3cdae>
  440388:	mov    rdx,0x424df0
  44038f:	mov    rdi,rbx
  440392:	mov    rsi,r12
  440395:	call   42d7a0 <strcmp@plt+0x29fe8>
  44039a:	test   al,al
  44039c:	mov    rdi,rbx
  44039f:	jne    440546 <strcmp@plt+0x3cd8e>
  4403a5:	call   424b80 <strcmp@plt+0x213c8>
  4403aa:	mov    rsi,r12
  4403ad:	mov    rdi,rax
  4403b0:	call   42d6d0 <strcmp@plt+0x29f18>
  4403b5:	mov    rbx,QWORD PTR [r15+0x10]
  4403b9:	jmp    4403d4 <strcmp@plt+0x3cc1c>
  4403bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4403c0:	mov    rdi,QWORD PTR [rax+0x10]
  4403c4:	mov    rsi,rbx
  4403c7:	call   4037b8 <strcmp@plt>
  4403cc:	test   eax,eax
  4403ce:	je     440340 <strcmp@plt+0x3cb88>
  4403d4:	mov    rdi,r15
  4403d7:	call   403200 <xmlNextElementSibling@plt>
  4403dc:	test   rax,rax
  4403df:	mov    r15,rax
  4403e2:	jne    4403c0 <strcmp@plt+0x3cc08>
  4403e4:	mov    rbx,QWORD PTR [r13+0x10]
  4403e8:	jmp    440404 <strcmp@plt+0x3cc4c>
  4403ea:	nop    WORD PTR [rax+rax*1+0x0]
  4403f0:	mov    rdi,QWORD PTR [rax+0x10]
  4403f4:	mov    rsi,rbx
  4403f7:	call   4037b8 <strcmp@plt>
  4403fc:	test   eax,eax
  4403fe:	je     44031e <strcmp@plt+0x3cb66>
  440404:	mov    rdi,r13
  440407:	call   403200 <xmlNextElementSibling@plt>
  44040c:	test   rax,rax
  44040f:	mov    r13,rax
  440412:	jne    4403f0 <strcmp@plt+0x3cc38>
  440414:	mov    rdi,QWORD PTR [rsp+0x8]
  440419:	call   403740 <xmlFreeDoc@plt>
  44041e:	mov    rbx,QWORD PTR [rsp+0x18]
  440423:	mov    rdi,QWORD PTR [rbx+0x48]
  440427:	call   42dac0 <strcmp@plt+0x2a308>
  44042c:	mov    rax,0x468e3c
  440433:	mov    QWORD PTR [rbx+0x48],r12
  440437:	mov    eax,DWORD PTR [rax]
  440439:	test   eax,eax
  44043b:	jg     440589 <strcmp@plt+0x3cdd1>
  440441:	mov    rax,QWORD PTR [rsp+0x18]
  440446:	mov    rsi,0x424890
  44044d:	mov    edx,0x5
  440452:	mov    rdi,QWORD PTR [rax+0x48]
  440456:	call   42d820 <strcmp@plt+0x2a068>
  44045b:	movzx  ecx,BYTE PTR [r14+0x2]
  440460:	movzx  edx,BYTE PTR [r14+0x1]
  440465:	lea    rdi,[rsp+0x20]
  44046a:	movzx  esi,BYTE PTR [r14]
  44046e:	xor    r8d,r8d
  440471:	call   43f430 <strcmp@plt+0x3bc78>
  440476:	mov    rsi,QWORD PTR [rsp+0x20]
  44047b:	mov    rdi,QWORD PTR [rsp+0x10]
  440480:	xor    ecx,ecx
  440482:	mov    edx,eax
  440484:	call   43f5b0 <strcmp@plt+0x3bdf8>
  440489:	mov    eax,0x1
  44048e:	jmp    440523 <strcmp@plt+0x3cd6b>
  440493:	nop    DWORD PTR [rax+rax*1+0x0]
  440498:	mov    rax,0x468e3c
  44049f:	mov    ecx,DWORD PTR [rax]
  4404a1:	test   ecx,ecx
  4404a3:	jle    4404c3 <strcmp@plt+0x3cd0b>
  4404a5:	mov    rdi,r15
  4404a8:	call   403430 <xmlNodeGetContent@plt>
  4404ad:	lea    rsi,[rip+0x12f7c]        # 453430 <strcmp@plt+0x4fc78>
  4404b4:	mov    rdx,rax
  4404b7:	mov    edi,0x5
  4404bc:	xor    eax,eax
  4404be:	call   4306a0 <strcmp@plt+0x2cee8>
  4404c3:	lea    rsi,[rip+0x12d4e]        # 453218 <strcmp@plt+0x4fa60>
  4404ca:	xor    eax,eax
  4404cc:	mov    edi,0x2
  4404d1:	call   4306a0 <strcmp@plt+0x2cee8>
  4404d6:	mov    rdi,r12
  4404d9:	call   42dac0 <strcmp@plt+0x2a308>
  4404de:	mov    rax,QWORD PTR [rsp+0x8]
  4404e3:	test   rax,rax
  4404e6:	je     4404f0 <strcmp@plt+0x3cd38>
  4404e8:	mov    rdi,rax
  4404eb:	call   403740 <xmlFreeDoc@plt>
  4404f0:	movzx  ecx,BYTE PTR [r14+0x2]
  4404f5:	movzx  edx,BYTE PTR [r14+0x1]
  4404fa:	lea    rdi,[rsp+0x20]
  4404ff:	movzx  esi,BYTE PTR [r14]
  440503:	mov    r8d,0x1
  440509:	call   43f430 <strcmp@plt+0x3bc78>
  44050e:	mov    rsi,QWORD PTR [rsp+0x20]
  440513:	mov    rdi,QWORD PTR [rsp+0x10]
  440518:	xor    ecx,ecx
  44051a:	mov    edx,eax
  44051c:	call   43f5b0 <strcmp@plt+0x3bdf8>
  440521:	xor    eax,eax
  440523:	mov    rcx,QWORD PTR [rsp+0x28]
  440528:	xor    rcx,QWORD PTR fs:0x28
  440531:	jne    4405cb <strcmp@plt+0x3ce13>
  440537:	add    rsp,0x38
  44053b:	pop    rbx
  44053c:	pop    rbp
  44053d:	pop    r12
  44053f:	pop    r13
  440541:	pop    r14
  440543:	pop    r15
  440545:	ret    
  440546:	call   424890 <strcmp@plt+0x210d8>
  44054b:	lea    rsi,[rip+0x12e56]        # 4533a8 <strcmp@plt+0x4fbf0>
  440552:	mov    rdx,rax
  440555:	mov    edi,0x3
  44055a:	xor    eax,eax
  44055c:	call   4306a0 <strcmp@plt+0x2cee8>
  440561:	jmp    4404c3 <strcmp@plt+0x3cd0b>
  440566:	mov    rdi,rbx
  440569:	call   424890 <strcmp@plt+0x210d8>
  44056e:	lea    rsi,[rip+0x12dc3]        # 453338 <strcmp@plt+0x4fb80>
  440575:	mov    rdx,rax
  440578:	mov    edi,0x3
  44057d:	xor    eax,eax
  44057f:	call   4306a0 <strcmp@plt+0x2cee8>
  440584:	jmp    4404c3 <strcmp@plt+0x3cd0b>
  440589:	lea    rsi,[rip+0x12ed8]        # 453468 <strcmp@plt+0x4fcb0>
  440590:	xor    eax,eax
  440592:	mov    edi,0x5
  440597:	call   4306a0 <strcmp@plt+0x2cee8>
  44059c:	mov    rax,0x468e3c
  4405a3:	cmp    DWORD PTR [rax],0x1
  4405a6:	jle    440441 <strcmp@plt+0x3cc89>
  4405ac:	lea    rdx,[rip+0x9c8d]        # 44a240 <strcmp@plt+0x46a88>
  4405b3:	lea    rsi,[rip+0x9a86]        # 44a040 <strcmp@plt+0x46888>
  4405ba:	mov    edi,0x6
  4405bf:	xor    eax,eax
  4405c1:	call   4306a0 <strcmp@plt+0x2cee8>
  4405c6:	jmp    440441 <strcmp@plt+0x3cc89>
  4405cb:	call   403460 <__stack_chk_fail@plt>
  4405d0:	push   rbp
  4405d1:	push   rbx
  4405d2:	mov    rbx,rdi
  4405d5:	sub    rsp,0x8
  4405d9:	mov    rbp,QWORD PTR [rdi+0x10]
  4405dd:	jmp    4405f0 <strcmp@plt+0x3ce38>
  4405df:	nop
  4405e0:	mov    rdi,QWORD PTR [rax+0x10]
  4405e4:	mov    rsi,rbp
  4405e7:	call   4037b8 <strcmp@plt>
  4405ec:	test   eax,eax
  4405ee:	je     440600 <strcmp@plt+0x3ce48>
  4405f0:	mov    rdi,rbx
  4405f3:	call   403200 <xmlNextElementSibling@plt>
  4405f8:	test   rax,rax
  4405fb:	mov    rbx,rax
  4405fe:	jne    4405e0 <strcmp@plt+0x3ce28>
  440600:	add    rsp,0x8
  440604:	mov    rax,rbx
  440607:	pop    rbx
  440608:	pop    rbp
  440609:	ret    
  44060a:	nop    WORD PTR [rax+rax*1+0x0]
  440610:	push   r12
  440612:	lea    rsi,[rip+0x5a21]        # 44603a <strcmp@plt+0x42882>
  440619:	push   rbp
  44061a:	push   rbx
  44061b:	lea    r12,[rip+0x13d5e]        # 454380 <strcmp@plt+0x50bc8>
  440622:	mov    rbx,rdi
  440625:	call   43fdd0 <strcmp@plt+0x3c618>
  44062a:	mov    rdi,rax
  44062d:	call   403430 <xmlNodeGetContent@plt>
  440632:	mov    ecx,0x5
  440637:	mov    rsi,rax
  44063a:	mov    rdi,r12
  44063d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44063f:	je     4406f0 <strcmp@plt+0x3cf38>
  440645:	lea    r12,[rip+0x13d43]        # 45438f <strcmp@plt+0x50bd7>
  44064c:	mov    ecx,0x5
  440651:	mov    rsi,rax
  440654:	mov    rdi,r12
  440657:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  440659:	je     4406f0 <strcmp@plt+0x3cf38>
  44065f:	lea    rdi,[rip+0xdbe4]        # 44e24a <strcmp@plt+0x4aa92>
  440666:	mov    ecx,0x5
  44066b:	mov    rsi,rax
  44066e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  440670:	jne    4406d0 <strcmp@plt+0x3cf18>
  440672:	xor    ebp,ebp
  440674:	lea    rsi,[rip+0x13ac2]        # 45413d <strcmp@plt+0x50985>
  44067b:	mov    rdi,rbx
  44067e:	call   43fdd0 <strcmp@plt+0x3c618>
  440683:	test   rax,rax
  440686:	je     4406c4 <strcmp@plt+0x3cf0c>
  440688:	lea    rsi,[rip+0x13aae]        # 45413d <strcmp@plt+0x50985>
  44068f:	mov    rdi,rbx
  440692:	call   43fdd0 <strcmp@plt+0x3c618>
  440697:	mov    rdi,rax
  44069a:	call   403430 <xmlNodeGetContent@plt>
  44069f:	xor    esi,esi
  4406a1:	mov    edx,0xa
  4406a6:	mov    rdi,rax
  4406a9:	call   403580 <strtol@plt>
  4406ae:	mov    rdi,rbp
  4406b1:	mov    rbx,rax
  4406b4:	call   424920 <strcmp@plt+0x21168>
  4406b9:	movzx  esi,bl
  4406bc:	mov    rdi,rbp
  4406bf:	call   425ea0 <strcmp@plt+0x226e8>
  4406c4:	mov    rax,rbp
  4406c7:	pop    rbx
  4406c8:	pop    rbp
  4406c9:	pop    r12
  4406cb:	ret    
  4406cc:	nop    DWORD PTR [rax+0x0]
  4406d0:	mov    rdx,0x468e3c
  4406d7:	cmp    DWORD PTR [rdx],0x1
  4406da:	jg     440720 <strcmp@plt+0x3cf68>
  4406dc:	xor    ebp,ebp
  4406de:	mov    rax,rbp
  4406e1:	pop    rbx
  4406e2:	pop    rbp
  4406e3:	pop    r12
  4406e5:	ret    
  4406e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4406f0:	xor    eax,eax
  4406f2:	call   424740 <strcmp@plt+0x20f88>
  4406f7:	mov    rsi,r12
  4406fa:	mov    rdi,rbx
  4406fd:	mov    rbp,rax
  440700:	call   43fdd0 <strcmp@plt+0x3c618>
  440705:	mov    rdi,rax
  440708:	call   403430 <xmlNodeGetContent@plt>
  44070d:	mov    rsi,rbp
  440710:	mov    rdi,rax
  440713:	call   4256a0 <strcmp@plt+0x21ee8>
  440718:	jmp    440674 <strcmp@plt+0x3cebc>
  44071d:	nop    DWORD PTR [rax]
  440720:	lea    rsi,[rip+0x12d79]        # 4534a0 <strcmp@plt+0x4fce8>
  440727:	mov    rdx,rax
  44072a:	mov    edi,0x6
  44072f:	xor    eax,eax
  440731:	xor    ebp,ebp
  440733:	call   4306a0 <strcmp@plt+0x2cee8>
  440738:	jmp    4406de <strcmp@plt+0x3cf26>
  44073a:	nop    WORD PTR [rax+rax*1+0x0]
  440740:	push   rbx
  440741:	lea    rsi,[rip+0x139fa]        # 454142 <strcmp@plt+0x5098a>
  440748:	mov    rbx,rdi
  44074b:	call   43fdd0 <strcmp@plt+0x3c618>
  440750:	xor    edx,edx
  440752:	test   rax,rax
  440755:	je     44077f <strcmp@plt+0x3cfc7>
  440757:	lea    rsi,[rip+0x139e4]        # 454142 <strcmp@plt+0x5098a>
  44075e:	mov    rdi,rbx
  440761:	call   43fdd0 <strcmp@plt+0x3c618>
  440766:	mov    rdi,rax
  440769:	call   403430 <xmlNodeGetContent@plt>
  44076e:	mov    edx,0xa
  440773:	xor    esi,esi
  440775:	mov    rdi,rax
  440778:	call   403580 <strtol@plt>
  44077d:	mov    edx,eax
  44077f:	mov    eax,edx
  440781:	pop    rbx
  440782:	ret    
  440783:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  44078e:	xchg   ax,ax
  440790:	push   r15
  440792:	push   r14
  440794:	lea    rsi,[rip+0x139b3]        # 45414e <strcmp@plt+0x50996>
  44079b:	push   r13
  44079d:	push   r12
  44079f:	push   rbp
  4407a0:	push   rbx
  4407a1:	lea    rbp,[rip+0x139b0]        # 454158 <strcmp@plt+0x509a0>
  4407a8:	mov    rbx,rdi
  4407ab:	sub    rsp,0x28
  4407af:	call   43fdd0 <strcmp@plt+0x3c618>
  4407b4:	mov    rdi,rax
  4407b7:	call   403430 <xmlNodeGetContent@plt>
  4407bc:	mov    ecx,0x16
  4407c1:	mov    QWORD PTR [rsp+0x8],rax
  4407c6:	mov    rsi,rax
  4407c9:	mov    rdi,rbp
  4407cc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4407ce:	je     440813 <strcmp@plt+0x3d05b>
  4407d0:	mov    rax,0x468e3c
  4407d7:	cmp    DWORD PTR [rax],0x1
  4407da:	jg     4407f9 <strcmp@plt+0x3d041>
  4407dc:	mov    QWORD PTR [rsp+0x18],0x0
  4407e5:	mov    rax,QWORD PTR [rsp+0x18]
  4407ea:	add    rsp,0x28
  4407ee:	pop    rbx
  4407ef:	pop    rbp
  4407f0:	pop    r12
  4407f2:	pop    r13
  4407f4:	pop    r14
  4407f6:	pop    r15
  4407f8:	ret    
  4407f9:	mov    rdx,QWORD PTR [rsp+0x8]
  4407fe:	lea    rsi,[rip+0x12cd3]        # 4534d8 <strcmp@plt+0x4fd20>
  440805:	mov    edi,0x6
  44080a:	xor    eax,eax
  44080c:	call   4306a0 <strcmp@plt+0x2cee8>
  440811:	jmp    4407dc <strcmp@plt+0x3d024>
  440813:	xor    eax,eax
  440815:	call   4296c0 <strcmp@plt+0x25f08>
  44081a:	mov    rdi,rax
  44081d:	mov    QWORD PTR [rsp+0x18],rax
  440822:	call   424f20 <strcmp@plt+0x21768>
  440827:	mov    rsi,rbp
  44082a:	mov    rdi,rbx
  44082d:	mov    QWORD PTR [rsp+0x10],rax
  440832:	call   43fdd0 <strcmp@plt+0x3c618>
  440837:	lea    rsi,[rip+0x13930]        # 45416e <strcmp@plt+0x509b6>
  44083e:	mov    rdi,rax
  440841:	call   43fdd0 <strcmp@plt+0x3c618>
  440846:	test   rax,rax
  440849:	mov    r14,rax
  44084c:	je     440984 <strcmp@plt+0x3d1cc>
  440852:	mov    BYTE PTR [rsp+0x7],0x0
  440857:	mov    BYTE PTR [rsp+0x6],0x0
  44085c:	mov    BYTE PTR [rsp+0x5],0x0
  440861:	nop    DWORD PTR [rax+0x0]
  440868:	lea    rsi,[rip+0x13aae]        # 45431d <strcmp@plt+0x50b65>
  44086f:	mov    rdi,r14
  440872:	call   43fdd0 <strcmp@plt+0x3c618>
  440877:	mov    rdi,rax
  44087a:	call   403430 <xmlNodeGetContent@plt>
  44087f:	mov    rbx,rax
  440882:	xor    eax,eax
  440884:	call   424740 <strcmp@plt+0x20f88>
  440889:	mov    rdi,rbx
  44088c:	mov    rsi,rax
  44088f:	mov    rbp,rax
  440892:	call   4256a0 <strcmp@plt+0x21ee8>
  440897:	mov    rdi,rbx
  44089a:	call   4037b0 <free@plt>
  44089f:	lea    rsi,[rip+0x138cc]        # 454172 <strcmp@plt+0x509ba>
  4408a6:	mov    rdi,r14
  4408a9:	call   43fdd0 <strcmp@plt+0x3c618>
  4408ae:	mov    rdi,rax
  4408b1:	call   403430 <xmlNodeGetContent@plt>
  4408b6:	lea    rsi,[rip+0x138be]        # 45417b <strcmp@plt+0x509c3>
  4408bd:	mov    rdi,rax
  4408c0:	mov    rbx,rax
  4408c3:	call   4030c0 <strstr@plt>
  4408c8:	test   rax,rax
  4408cb:	je     440998 <strcmp@plt+0x3d1e0>
  4408d1:	mov    r12d,0x1
  4408d7:	mov    BYTE PTR [rsp+0x5],0x1
  4408dc:	lea    rsi,[rip+0x1389f]        # 454182 <strcmp@plt+0x509ca>
  4408e3:	mov    rdi,rbx
  4408e6:	call   4030c0 <strstr@plt>
  4408eb:	test   rax,rax
  4408ee:	je     4409b8 <strcmp@plt+0x3d200>
  4408f4:	mov    r13d,0x1
  4408fa:	mov    BYTE PTR [rsp+0x6],0x1
  4408ff:	lea    rsi,[rip+0x13887]        # 45418d <strcmp@plt+0x509d5>
  440906:	mov    rdi,rbx
  440909:	call   4030c0 <strstr@plt>
  44090e:	test   rax,rax
  440911:	je     4409a8 <strcmp@plt+0x3d1f0>
  440917:	mov    r15d,0x1
  44091d:	mov    BYTE PTR [rsp+0x7],0x1
  440922:	mov    rdi,rbx
  440925:	call   4037b0 <free@plt>
  44092a:	mov    ecx,r15d
  44092d:	mov    edx,r13d
  440930:	mov    esi,r12d
  440933:	mov    rdi,rbp
  440936:	call   429910 <strcmp@plt+0x26158>
  44093b:	test   rax,rax
  44093e:	je     44094d <strcmp@plt+0x3d195>
  440940:	mov    rdi,QWORD PTR [rsp+0x10]
  440945:	mov    rsi,rax
  440948:	call   429990 <strcmp@plt+0x261d8>
  44094d:	mov    rdi,rbp
  440950:	call   424750 <strcmp@plt+0x20f98>
  440955:	mov    rbx,QWORD PTR [r14+0x10]
  440959:	jmp    440974 <strcmp@plt+0x3d1bc>
  44095b:	nop    DWORD PTR [rax+rax*1+0x0]
  440960:	mov    rdi,QWORD PTR [rax+0x10]
  440964:	mov    rsi,rbx
  440967:	call   4037b8 <strcmp@plt>
  44096c:	test   eax,eax
  44096e:	je     440868 <strcmp@plt+0x3d0b0>
  440974:	mov    rdi,r14
  440977:	call   403200 <xmlNextElementSibling@plt>
  44097c:	test   rax,rax
  44097f:	mov    r14,rax
  440982:	jne    440960 <strcmp@plt+0x3d1a8>
  440984:	mov    rdi,QWORD PTR [rsp+0x8]
  440989:	call   4037b0 <free@plt>
  44098e:	jmp    4407e5 <strcmp@plt+0x3d02d>
  440993:	nop    DWORD PTR [rax+rax*1+0x0]
  440998:	movzx  r12d,BYTE PTR [rsp+0x5]
  44099e:	jmp    4408dc <strcmp@plt+0x3d124>
  4409a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4409a8:	movzx  r15d,BYTE PTR [rsp+0x7]
  4409ae:	jmp    440922 <strcmp@plt+0x3d16a>
  4409b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4409b8:	movzx  r13d,BYTE PTR [rsp+0x6]
  4409be:	jmp    4408ff <strcmp@plt+0x3d147>
  4409c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4409ce:	xchg   ax,ax
  4409d0:	push   r14
  4409d2:	push   r13
  4409d4:	mov    r13,rdx
  4409d7:	push   r12
  4409d9:	mov    r12,rsi
  4409dc:	push   rbp
  4409dd:	lea    rsi,[rip+0x5656]        # 44603a <strcmp@plt+0x42882>
  4409e4:	push   rbx
  4409e5:	mov    rbp,rdi
  4409e8:	call   43fdd0 <strcmp@plt+0x3c618>
  4409ed:	mov    rdi,rax
  4409f0:	call   403430 <xmlNodeGetContent@plt>
  4409f5:	mov    rbx,rax
  4409f8:	lea    rax,[rip+0x13981]        # 454380 <strcmp@plt+0x50bc8>
  4409ff:	mov    ecx,0x5
  440a04:	mov    rsi,rbx
  440a07:	mov    rdi,rax
  440a0a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  440a0c:	je     440a90 <strcmp@plt+0x3d2d8>
  440a12:	lea    rax,[rip+0x13976]        # 45438f <strcmp@plt+0x50bd7>
  440a19:	mov    ecx,0x5
  440a1e:	mov    rsi,rbx
  440a21:	mov    rdi,rax
  440a24:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  440a26:	je     440a90 <strcmp@plt+0x3d2d8>
  440a28:	lea    r14,[rip+0xd81b]        # 44e24a <strcmp@plt+0x4aa92>
  440a2f:	mov    ecx,0x5
  440a34:	mov    rsi,rbx
  440a37:	mov    rdi,r14
  440a3a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  440a3c:	jne    440b40 <strcmp@plt+0x3d388>
  440a42:	mov    rdi,rbx
  440a45:	call   4037b0 <free@plt>
  440a4a:	mov    rsi,r14
  440a4d:	mov    rdi,rbp
  440a50:	call   43fdd0 <strcmp@plt+0x3c618>
  440a55:	mov    rdi,rax
  440a58:	call   440790 <strcmp@plt+0x3cfd8>
  440a5d:	test   rax,rax
  440a60:	mov    rbx,rax
  440a63:	je     440b80 <strcmp@plt+0x3d3c8>
  440a69:	mov    rdi,r12
  440a6c:	call   403730 <strdup@plt>
  440a71:	mov    rdi,r13
  440a74:	mov    rdx,rbx
  440a77:	mov    rsi,rax
  440a7a:	call   439800 <strcmp@plt+0x36048>
  440a7f:	pop    rbx
  440a80:	mov    rdi,r12
  440a83:	pop    rbp
  440a84:	pop    r12
  440a86:	pop    r13
  440a88:	pop    r14
  440a8a:	jmp    403730 <strdup@plt>
  440a8f:	nop
  440a90:	mov    rsi,rax
  440a93:	mov    rdi,rbp
  440a96:	call   43fdd0 <strcmp@plt+0x3c618>
  440a9b:	mov    rdi,rax
  440a9e:	call   403430 <xmlNodeGetContent@plt>
  440aa3:	mov    rdi,rbx
  440aa6:	mov    r12,rax
  440aa9:	call   4037b0 <free@plt>
  440aae:	lea    rsi,[rip+0x13688]        # 45413d <strcmp@plt+0x50985>
  440ab5:	mov    rdi,rbp
  440ab8:	mov    rbx,r12
  440abb:	call   43fdd0 <strcmp@plt+0x3c618>
  440ac0:	test   rax,rax
  440ac3:	je     440b32 <strcmp@plt+0x3d37a>
  440ac5:	lea    rsi,[rip+0x13671]        # 45413d <strcmp@plt+0x50985>
  440acc:	mov    rdi,rbp
  440acf:	call   43fdd0 <strcmp@plt+0x3c618>
  440ad4:	mov    rdi,rax
  440ad7:	call   403430 <xmlNodeGetContent@plt>
  440adc:	mov    rdi,r12
  440adf:	mov    rbp,rax
  440ae2:	call   4031d0 <strlen@plt>
  440ae7:	mov    rdi,rbp
  440aea:	mov    rbx,rax
  440aed:	call   4031d0 <strlen@plt>
  440af2:	lea    rdi,[rbx+rax*1+0x2]
  440af7:	call   4347a0 <strcmp@plt+0x30fe8>
  440afc:	lea    rcx,[rip+0x6c68]        # 44776b <strcmp@plt+0x43fb3>
  440b03:	mov    rdi,rax
  440b06:	mov    r9,rbp
  440b09:	mov    r8,r12
  440b0c:	mov    rdx,0xffffffffffffffff
  440b13:	mov    esi,0x1
  440b18:	mov    rbx,rax
  440b1b:	xor    eax,eax
  440b1d:	call   403290 <__sprintf_chk@plt>
  440b22:	mov    rdi,r12
  440b25:	call   4037b0 <free@plt>
  440b2a:	mov    rdi,rbp
  440b2d:	call   4037b0 <free@plt>
  440b32:	mov    rax,rbx
  440b35:	pop    rbx
  440b36:	pop    rbp
  440b37:	pop    r12
  440b39:	pop    r13
  440b3b:	pop    r14
  440b3d:	ret    
  440b3e:	xchg   ax,ax
  440b40:	mov    rax,0x468e3c
  440b47:	cmp    DWORD PTR [rax],0x1
  440b4a:	jle    440b62 <strcmp@plt+0x3d3aa>
  440b4c:	lea    rsi,[rip+0x12a05]        # 453558 <strcmp@plt+0x4fda0>
  440b53:	mov    rdx,rbx
  440b56:	mov    edi,0x6
  440b5b:	xor    eax,eax
  440b5d:	call   4306a0 <strcmp@plt+0x2cee8>
  440b62:	mov    rdi,rbx
  440b65:	xor    ebx,ebx
  440b67:	call   4037b0 <free@plt>
  440b6c:	mov    rax,rbx
  440b6f:	pop    rbx
  440b70:	pop    rbp
  440b71:	pop    r12
  440b73:	pop    r13
  440b75:	pop    r14
  440b77:	ret    
  440b78:	nop    DWORD PTR [rax+rax*1+0x0]
  440b80:	mov    rax,0x468e3c
  440b87:	cmp    DWORD PTR [rax],0x1
  440b8a:	jle    440b32 <strcmp@plt+0x3d37a>
  440b8c:	lea    rsi,[rip+0x12985]        # 453518 <strcmp@plt+0x4fd60>
  440b93:	mov    edi,0x6
  440b98:	xor    eax,eax
  440b9a:	xor    ebx,ebx
  440b9c:	call   4306a0 <strcmp@plt+0x2cee8>
  440ba1:	jmp    440b32 <strcmp@plt+0x3d37a>
  440ba3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  440bae:	xchg   ax,ax
  440bb0:	push   r15
  440bb2:	push   r14
  440bb4:	mov    r14,rsi
  440bb7:	push   r13
  440bb9:	push   r12
  440bbb:	push   rbp
  440bbc:	push   rbx
  440bbd:	mov    rbx,rdi
  440bc0:	sub    rsp,0x28
  440bc4:	mov    QWORD PTR [rsp+0x18],rsi
  440bc9:	lea    rsi,[rip+0x1357b]        # 45414b <strcmp@plt+0x50993>
  440bd0:	call   43fdd0 <strcmp@plt+0x3c618>
  440bd5:	mov    rdi,rax
  440bd8:	call   403430 <xmlNodeGetContent@plt>
  440bdd:	lea    rsi,[rip+0x135b0]        # 454194 <strcmp@plt+0x509dc>
  440be4:	mov    rbp,rax
  440be7:	mov    rdi,rbx
  440bea:	call   43fdd0 <strcmp@plt+0x3c618>
  440bef:	mov    rdx,r14
  440bf2:	mov    rsi,rbp
  440bf5:	mov    rdi,rax
  440bf8:	call   4409d0 <strcmp@plt+0x3d218>
  440bfd:	mov    rdi,rbp
  440c00:	mov    r12,rax
  440c03:	call   4037b0 <free@plt>
  440c08:	test   r12,r12
  440c0b:	je     440f74 <strcmp@plt+0x3d7bc>
  440c11:	xor    eax,eax
  440c13:	call   404eb0 <strcmp@plt+0x16f8>
  440c18:	test   rax,rax
  440c1b:	mov    r15,rax
  440c1e:	je     440fce <strcmp@plt+0x3d816>
  440c24:	lea    rsi,[rip+0x13569]        # 454194 <strcmp@plt+0x509dc>
  440c2b:	mov    rdi,rbx
  440c2e:	mov    QWORD PTR [rax],r12
  440c31:	call   43fdd0 <strcmp@plt+0x3c618>
  440c36:	mov    rdi,rax
  440c39:	call   440740 <strcmp@plt+0x3cf88>
  440c3e:	lea    rsi,[rip+0x1355b]        # 4541a0 <strcmp@plt+0x509e8>
  440c45:	mov    DWORD PTR [r15+0xc],eax
  440c49:	mov    rdi,rbx
  440c4c:	call   43fdd0 <strcmp@plt+0x3c618>
  440c51:	test   rax,rax
  440c54:	je     440c80 <strcmp@plt+0x3d4c8>
  440c56:	lea    rsi,[rip+0x13543]        # 4541a0 <strcmp@plt+0x509e8>
  440c5d:	mov    rdi,rbx
  440c60:	call   43fdd0 <strcmp@plt+0x3c618>
  440c65:	mov    rdi,rax
  440c68:	call   403430 <xmlNodeGetContent@plt>
  440c6d:	mov    edx,0xa
  440c72:	xor    esi,esi
  440c74:	mov    rdi,rax
  440c77:	call   403580 <strtol@plt>
  440c7c:	mov    DWORD PTR [r15+0x8],eax
  440c80:	lea    rsi,[rip+0x13524]        # 4541ab <strcmp@plt+0x509f3>
  440c87:	mov    rdi,rbx
  440c8a:	call   43fdd0 <strcmp@plt+0x3c618>
  440c8f:	lea    rsi,[rip+0x1351b]        # 4541b1 <strcmp@plt+0x509f9>
  440c96:	mov    rdi,rax
  440c99:	call   43fdd0 <strcmp@plt+0x3c618>
  440c9e:	test   rax,rax
  440ca1:	mov    r12,rax
  440ca4:	je     440ea4 <strcmp@plt+0x3d6ec>
  440caa:	mov    DWORD PTR [rsp+0xc],0x0
  440cb2:	mov    DWORD PTR [rsp+0x8],0xff
  440cba:	mov    DWORD PTR [rsp+0x4],0x0
  440cc2:	mov    DWORD PTR [rsp],0xff
  440cc9:	nop    DWORD PTR [rax+0x0]
  440cd0:	lea    rsi,[rip+0x134f3]        # 4541ca <strcmp@plt+0x50a12>
  440cd7:	mov    rdi,r12
  440cda:	call   43fdd0 <strcmp@plt+0x3c618>
  440cdf:	test   rax,rax
  440ce2:	je     440d0d <strcmp@plt+0x3d555>
  440ce4:	lea    rsi,[rip+0x134df]        # 4541ca <strcmp@plt+0x50a12>
  440ceb:	mov    rdi,r12
  440cee:	call   43fdd0 <strcmp@plt+0x3c618>
  440cf3:	mov    rdi,rax
  440cf6:	call   403430 <xmlNodeGetContent@plt>
  440cfb:	mov    edx,0xa
  440d00:	xor    esi,esi
  440d02:	mov    rdi,rax
  440d05:	call   403580 <strtol@plt>
  440d0a:	mov    DWORD PTR [rsp],eax
  440d0d:	lea    rsi,[rip+0x134d1]        # 4541e5 <strcmp@plt+0x50a2d>
  440d14:	mov    rdi,r12
  440d17:	call   43fdd0 <strcmp@plt+0x3c618>
  440d1c:	test   rax,rax
  440d1f:	je     440d4b <strcmp@plt+0x3d593>
  440d21:	lea    rsi,[rip+0x134bd]        # 4541e5 <strcmp@plt+0x50a2d>
  440d28:	mov    rdi,r12
  440d2b:	call   43fdd0 <strcmp@plt+0x3c618>
  440d30:	mov    rdi,rax
  440d33:	call   403430 <xmlNodeGetContent@plt>
  440d38:	mov    edx,0xa
  440d3d:	xor    esi,esi
  440d3f:	mov    rdi,rax
  440d42:	call   403580 <strtol@plt>
  440d47:	mov    DWORD PTR [rsp+0x4],eax
  440d4b:	lea    rsi,[rip+0x13464]        # 4541b6 <strcmp@plt+0x509fe>
  440d52:	mov    rdi,r12
  440d55:	call   43fdd0 <strcmp@plt+0x3c618>
  440d5a:	test   rax,rax
  440d5d:	je     440d89 <strcmp@plt+0x3d5d1>
  440d5f:	lea    rsi,[rip+0x1345a]        # 4541c0 <strcmp@plt+0x50a08>
  440d66:	mov    rdi,r12
  440d69:	call   43fdd0 <strcmp@plt+0x3c618>
  440d6e:	mov    rdi,rax
  440d71:	call   403430 <xmlNodeGetContent@plt>
  440d76:	mov    edx,0xa
  440d7b:	xor    esi,esi
  440d7d:	mov    rdi,rax
  440d80:	call   403580 <strtol@plt>
  440d85:	mov    DWORD PTR [rsp+0x8],eax
  440d89:	lea    rsi,[rip+0x13443]        # 4541d3 <strcmp@plt+0x50a1b>
  440d90:	mov    rdi,r12
  440d93:	call   43fdd0 <strcmp@plt+0x3c618>
  440d98:	test   rax,rax
  440d9b:	je     440dc7 <strcmp@plt+0x3d60f>
  440d9d:	lea    rsi,[rip+0x13437]        # 4541db <strcmp@plt+0x50a23>
  440da4:	mov    rdi,r12
  440da7:	call   43fdd0 <strcmp@plt+0x3c618>
  440dac:	mov    rdi,rax
  440daf:	call   403430 <xmlNodeGetContent@plt>
  440db4:	mov    edx,0xa
  440db9:	xor    esi,esi
  440dbb:	mov    rdi,rax
  440dbe:	call   403580 <strtol@plt>
  440dc3:	mov    DWORD PTR [rsp+0xc],eax
  440dc7:	lea    rsi,[rip+0x1341e]        # 4541ec <strcmp@plt+0x50a34>
  440dce:	mov    rdi,r12
  440dd1:	call   43fdd0 <strcmp@plt+0x3c618>
  440dd6:	test   rax,rax
  440dd9:	je     440ec0 <strcmp@plt+0x3d708>
  440ddf:	lea    rsi,[rip+0x13406]        # 4541ec <strcmp@plt+0x50a34>
  440de6:	mov    rdi,r12
  440de9:	call   43fdd0 <strcmp@plt+0x3c618>
  440dee:	movzx  r14d,BYTE PTR [rsp+0xc]
  440df4:	movzx  r13d,BYTE PTR [rsp+0x8]
  440dfa:	mov    rdi,rax
  440dfd:	movzx  ebp,BYTE PTR [rsp+0x4]
  440e02:	movzx  ebx,BYTE PTR [rsp]
  440e06:	mov    QWORD PTR [rsp+0x10],rax
  440e0b:	call   403430 <xmlNodeGetContent@plt>
  440e10:	mov    r9d,r14d
  440e13:	mov    r8d,r13d
  440e16:	mov    esi,0x4
  440e1b:	mov    ecx,ebp
  440e1d:	mov    edx,ebx
  440e1f:	mov    rdi,rax
  440e22:	call   405190 <strcmp@plt+0x19d8>
  440e27:	test   rax,rax
  440e2a:	je     440f64 <strcmp@plt+0x3d7ac>
  440e30:	mov    rsi,QWORD PTR [r15+0x18]
  440e34:	mov    rdi,rax
  440e37:	call   42d540 <strcmp@plt+0x29d88>
  440e3c:	mov    rdi,QWORD PTR [rsp+0x10]
  440e41:	call   403430 <xmlNodeGetContent@plt>
  440e46:	mov    r9d,r14d
  440e49:	mov    r8d,r13d
  440e4c:	mov    ecx,ebp
  440e4e:	mov    edx,ebx
  440e50:	mov    esi,0x6
  440e55:	mov    rdi,rax
  440e58:	call   405190 <strcmp@plt+0x19d8>
  440e5d:	test   rax,rax
  440e60:	je     440f64 <strcmp@plt+0x3d7ac>
  440e66:	mov    rsi,QWORD PTR [r15+0x18]
  440e6a:	mov    rdi,rax
  440e6d:	call   42d540 <strcmp@plt+0x29d88>
  440e72:	mov    rbx,QWORD PTR [r12+0x10]
  440e77:	jmp    440e94 <strcmp@plt+0x3d6dc>
  440e79:	nop    DWORD PTR [rax+0x0]
  440e80:	mov    rdi,QWORD PTR [rax+0x10]
  440e84:	mov    rsi,rbx
  440e87:	call   4037b8 <strcmp@plt>
  440e8c:	test   eax,eax
  440e8e:	je     440cd0 <strcmp@plt+0x3d518>
  440e94:	mov    rdi,r12
  440e97:	call   403200 <xmlNextElementSibling@plt>
  440e9c:	test   rax,rax
  440e9f:	mov    r12,rax
  440ea2:	jne    440e80 <strcmp@plt+0x3d6c8>
  440ea4:	add    rsp,0x28
  440ea8:	mov    rax,r15
  440eab:	pop    rbx
  440eac:	pop    rbp
  440ead:	pop    r12
  440eaf:	pop    r13
  440eb1:	pop    r14
  440eb3:	pop    r15
  440eb5:	ret    
  440eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  440ec0:	lea    rsi,[rip+0x1332f]        # 4541f6 <strcmp@plt+0x50a3e>
  440ec7:	mov    rdi,r12
  440eca:	call   43fdd0 <strcmp@plt+0x3c618>
  440ecf:	test   rax,rax
  440ed2:	je     440fa4 <strcmp@plt+0x3d7ec>
  440ed8:	lea    rsi,[rip+0x133cc]        # 4542ab <strcmp@plt+0x50af3>
  440edf:	mov    rdi,r12
  440ee2:	call   43fdd0 <strcmp@plt+0x3c618>
  440ee7:	mov    rdi,rax
  440eea:	call   403430 <xmlNodeGetContent@plt>
  440eef:	lea    rsi,[rip+0x13300]        # 4541f6 <strcmp@plt+0x50a3e>
  440ef6:	mov    rdi,r12
  440ef9:	mov    rbp,rax
  440efc:	call   43fdd0 <strcmp@plt+0x3c618>
  440f01:	mov    rdx,QWORD PTR [rsp+0x18]
  440f06:	mov    rsi,rbp
  440f09:	mov    rdi,rax
  440f0c:	call   4409d0 <strcmp@plt+0x3d218>
  440f11:	mov    rdi,rbp
  440f14:	mov    rbx,rax
  440f17:	call   4037b0 <free@plt>
  440f1c:	test   rbx,rbx
  440f1f:	je     440f64 <strcmp@plt+0x3d7ac>
  440f21:	movzx  ecx,BYTE PTR [rsp+0x8]
  440f26:	movzx  edx,BYTE PTR [rsp+0x4]
  440f2b:	mov    r9d,0x1
  440f31:	movzx  esi,BYTE PTR [rsp]
  440f35:	movzx  r8d,BYTE PTR [rsp+0xc]
  440f3b:	mov    rdi,rbx
  440f3e:	call   404fd0 <strcmp@plt+0x1818>
  440f43:	mov    rdi,rbx
  440f46:	mov    rbp,rax
  440f49:	call   4037b0 <free@plt>
  440f4e:	test   rbp,rbp
  440f51:	je     440f64 <strcmp@plt+0x3d7ac>
  440f53:	mov    rsi,QWORD PTR [r15+0x10]
  440f57:	mov    rdi,rbp
  440f5a:	call   42d540 <strcmp@plt+0x29d88>
  440f5f:	jmp    440e72 <strcmp@plt+0x3d6ba>
  440f64:	mov    rdi,r15
  440f67:	xor    r15d,r15d
  440f6a:	call   404f10 <strcmp@plt+0x1758>
  440f6f:	jmp    440ea4 <strcmp@plt+0x3d6ec>
  440f74:	mov    rax,0x468e3c
  440f7b:	mov    edx,DWORD PTR [rax]
  440f7d:	test   edx,edx
  440f7f:	jg     440f89 <strcmp@plt+0x3d7d1>
  440f81:	xor    r15d,r15d
  440f84:	jmp    440ea4 <strcmp@plt+0x3d6ec>
  440f89:	lea    rsi,[rip+0x12600]        # 453590 <strcmp@plt+0x4fdd8>
  440f90:	mov    edi,0x5
  440f95:	xor    eax,eax
  440f97:	xor    r15d,r15d
  440f9a:	call   4306a0 <strcmp@plt+0x2cee8>
  440f9f:	jmp    440ea4 <strcmp@plt+0x3d6ec>
  440fa4:	mov    rdi,r15
  440fa7:	call   404f10 <strcmp@plt+0x1758>
  440fac:	mov    rax,0x468e3c
  440fb3:	mov    eax,DWORD PTR [rax]
  440fb5:	test   eax,eax
  440fb7:	jle    440f81 <strcmp@plt+0x3d7c9>
  440fb9:	lea    rsi,[rip+0x12608]        # 4535c8 <strcmp@plt+0x4fe10>
  440fc0:	mov    edi,0x5
  440fc5:	xor    eax,eax
  440fc7:	call   4306a0 <strcmp@plt+0x2cee8>
  440fcc:	jmp    440f81 <strcmp@plt+0x3d7c9>
  440fce:	mov    rdi,r12
  440fd1:	call   4037b0 <free@plt>
  440fd6:	jmp    440ea4 <strcmp@plt+0x3d6ec>
  440fdb:	nop    DWORD PTR [rax+rax*1+0x0]
  440fe0:	push   r15
  440fe2:	push   r14
  440fe4:	push   r13
  440fe6:	push   r12
  440fe8:	push   rbp
  440fe9:	push   rbx
  440fea:	mov    rbp,rdx
  440fed:	sub    rsp,0x888
  440ff4:	mov    rax,QWORD PTR fs:0x28
  440ffd:	mov    QWORD PTR [rsp+0x878],rax
  441005:	xor    eax,eax
  441007:	mov    rax,0x468e3c
  44100e:	mov    QWORD PTR [rsp+0x38],rdi
  441013:	mov    QWORD PTR [rsp+0x28],rsi
  441018:	mov    r9d,DWORD PTR [rax]
  44101b:	test   r9d,r9d
  44101e:	jle    441033 <strcmp@plt+0x3d87b>
  441020:	lea    rsi,[rip+0x126a9]        # 4536d0 <strcmp@plt+0x4ff18>
  441027:	mov    edi,0x5
  44102c:	xor    eax,eax
  44102e:	call   4306a0 <strcmp@plt+0x2cee8>
  441033:	mov    rdi,0x424750
  44103a:	call   4397c0 <strcmp@plt+0x36008>
  44103f:	mov    rdi,0x404f10
  441046:	mov    r15,rax
  441049:	mov    QWORD PTR [rsp+0x8],rax
  44104e:	call   42d4f0 <strcmp@plt+0x29d38>
  441053:	mov    QWORD PTR [rsp],rax
  441057:	call   42d4e0 <strcmp@plt+0x29d28>
  44105c:	mov    QWORD PTR [rsp+0x20],rax
  441061:	call   42d4e0 <strcmp@plt+0x29d28>
  441066:	mov    rbx,0x474850
  44106d:	mov    QWORD PTR [rsp+0x10],rax
  441072:	mov    rdi,QWORD PTR [rbx]
  441075:	call   410710 <strcmp@plt+0xcf58>
  44107a:	mov    r13,rax
  44107d:	mov    rax,QWORD PTR [rsp+0x28]
  441082:	lea    rcx,[rip+0x13057]        # 4540e0 <strcmp@plt+0x50928>
  441089:	xor    edx,edx
  44108b:	mov    r8d,0x2160
  441091:	mov    rdi,rbp
  441094:	mov    esi,DWORD PTR [rax+0x4]
  441097:	call   403040 <xmlReadMemory@plt>
  44109c:	mov    rdi,rax
  44109f:	mov    r12,rax
  4410a2:	call   4035f0 <xmlDocGetRootElement@plt>
  4410a7:	mov    rdi,rax
  4410aa:	call   403320 <xmlFirstElementChild@plt>
  4410af:	mov    rdi,rax
  4410b2:	call   403320 <xmlFirstElementChild@plt>
  4410b7:	test   rax,rax
  4410ba:	mov    r14,rax
  4410bd:	je     441110 <strcmp@plt+0x3d958>
  4410bf:	nop
  4410c0:	mov    rsi,r15
  4410c3:	mov    rdi,r14
  4410c6:	call   440bb0 <strcmp@plt+0x3d3f8>
  4410cb:	test   rax,rax
  4410ce:	je     4412ee <strcmp@plt+0x3db36>
  4410d4:	mov    rsi,QWORD PTR [rsp]
  4410d8:	mov    rdi,rax
  4410db:	call   42d540 <strcmp@plt+0x29d88>
  4410e0:	mov    rbp,QWORD PTR [r14+0x10]
  4410e4:	jmp    441100 <strcmp@plt+0x3d948>
  4410e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4410f0:	mov    rdi,QWORD PTR [rax+0x10]
  4410f4:	mov    rsi,rbp
  4410f7:	call   4037b8 <strcmp@plt>
  4410fc:	test   eax,eax
  4410fe:	je     4410c0 <strcmp@plt+0x3d908>
  441100:	mov    rdi,r14
  441103:	call   403200 <xmlNextElementSibling@plt>
  441108:	test   rax,rax
  44110b:	mov    r14,rax
  44110e:	jne    4410f0 <strcmp@plt+0x3d938>
  441110:	mov    rdi,r12
  441113:	call   403740 <xmlFreeDoc@plt>
  441118:	mov    rax,QWORD PTR [rsp]
  44111c:	mov    r12,QWORD PTR [rax+0x8]
  441120:	cmp    rax,r12
  441123:	je     44123f <strcmp@plt+0x3da87>
  441129:	mov    DWORD PTR [rsp+0x30],0x0
  441131:	mov    DWORD PTR [rsp+0x18],0x0
  441139:	jmp    4411b9 <strcmp@plt+0x3da01>
  44113b:	nop    DWORD PTR [rax+rax*1+0x0]
  441140:	mov    BYTE PTR [rbp+0x35],0x1
  441144:	mov    rdi,rbp
  441147:	call   4342d0 <strcmp@plt+0x30b18>
  44114c:	test   rax,rax
  44114f:	mov    r14,rax
  441152:	je     4416ab <strcmp@plt+0x3def3>
  441158:	mov    rax,QWORD PTR [r13+0x38]
  44115c:	xor    edx,edx
  44115e:	mov    rdi,QWORD PTR [r13+0x40]
  441162:	mov    rsi,r14
  441165:	call   QWORD PTR [rax+0x10]
  441168:	cmp    eax,0x1
  44116b:	jne    441660 <strcmp@plt+0x3dea8>
  441171:	mov    rdi,QWORD PTR [r13+0x70]
  441175:	mov    rsi,rbp
  441178:	call   408960 <strcmp@plt+0x51a8>
  44117d:	test   rax,rax
  441180:	je     44119d <strcmp@plt+0x3d9e5>
  441182:	mov    rdi,rax
  441185:	call   434230 <strcmp@plt+0x30a78>
  44118a:	mov    rsi,rbp
  44118d:	mov    rdi,rax
  441190:	call   42a680 <strcmp@plt+0x26ec8>
  441195:	test   eax,eax
  441197:	jne    4412dc <strcmp@plt+0x3db24>
  44119d:	mov    rsi,QWORD PTR [rsp+0x10]
  4411a2:	mov    rdi,r14
  4411a5:	call   42d540 <strcmp@plt+0x29d88>
  4411aa:	mov    r12,QWORD PTR [r12+0x8]
  4411af:	cmp    QWORD PTR [rsp],r12
  4411b3:	je     44123f <strcmp@plt+0x3da87>
  4411b9:	mov    r15,QWORD PTR [r12+0x10]
  4411be:	mov    rsi,QWORD PTR [rsp+0x8]
  4411c3:	mov    ecx,0x1
  4411c8:	mov    rdi,r13
  4411cb:	mov    rdx,r15
  4411ce:	call   4067a0 <strcmp@plt+0x2fe8>
  4411d3:	test   rax,rax
  4411d6:	mov    rbp,rax
  4411d9:	je     441684 <strcmp@plt+0x3decc>
  4411df:	mov    rdi,QWORD PTR [rbx]
  4411e2:	call   408340 <strcmp@plt+0x4b88>
  4411e7:	cmp    eax,0x3
  4411ea:	jne    441140 <strcmp@plt+0x3d988>
  4411f0:	mov    rdi,rbp
  4411f3:	call   425110 <strcmp@plt+0x21958>
  4411f8:	mov    rdi,rax
  4411fb:	call   4251c0 <strcmp@plt+0x21a08>
  441200:	movzx  eax,ax
  441203:	cmp    eax,0x2
  441206:	je     441393 <strcmp@plt+0x3dbdb>
  44120c:	cmp    eax,0xa
  44120f:	jne    441140 <strcmp@plt+0x3d988>
  441215:	add    DWORD PTR [rsp+0x30],0x1
  44121a:	cmp    DWORD PTR [rsp+0x18],0x1
  44121f:	jg     44122c <strcmp@plt+0x3da74>
  441221:	cmp    DWORD PTR [rsp+0x30],0x1
  441226:	jle    441140 <strcmp@plt+0x3d988>
  44122c:	lea    rsi,[rip+0x123d5]        # 453608 <strcmp@plt+0x4fe50>
  441233:	mov    edi,0x3
  441238:	xor    eax,eax
  44123a:	call   4306a0 <strcmp@plt+0x2cee8>
  44123f:	call   42d4e0 <strcmp@plt+0x29d28>
  441244:	mov    r12,rax
  441247:	mov    QWORD PTR [rsp+0x30],rax
  44124c:	mov    rax,QWORD PTR [r13+0x70]
  441250:	mov    rsi,r12
  441253:	mov    rax,QWORD PTR [rax]
  441256:	mov    rdi,QWORD PTR [rax]
  441259:	call   42d540 <strcmp@plt+0x29d88>
  44125e:	mov    rax,QWORD PTR [r13+0x70]
  441262:	mov    rsi,r12
  441265:	mov    rax,QWORD PTR [rax]
  441268:	mov    rdi,QWORD PTR [rax+0x8]
  44126c:	call   42d540 <strcmp@plt+0x29d88>
  441271:	mov    rcx,QWORD PTR [r13+0x70]
  441275:	mov    rax,QWORD PTR [rcx]
  441278:	mov    rdx,QWORD PTR [rax+0x10]
  44127c:	mov    rsi,QWORD PTR [rdx]
  44127f:	mov    r8d,DWORD PTR [rsi]
  441282:	test   r8d,r8d
  441285:	je     44139d <strcmp@plt+0x3dbe5>
  44128b:	xor    ebp,ebp
  44128d:	jmp    4412a5 <strcmp@plt+0x3daed>
  44128f:	nop
  441290:	mov    rax,QWORD PTR [rcx]
  441293:	add    ebp,0x1
  441296:	mov    rdx,QWORD PTR [rax+0x10]
  44129a:	mov    rsi,QWORD PTR [rdx]
  44129d:	cmp    DWORD PTR [rsi],ebp
  44129f:	je     44139d <strcmp@plt+0x3dbe5>
  4412a5:	mov    r8,QWORD PTR [rsi+0x10]
  4412a9:	lea    eax,[rbp+rbp*1+0x0]
  4412ad:	mov    edi,ebp
  4412af:	shr    edi,0x4
  4412b2:	and    eax,0x1e
  4412b5:	mov    edx,eax
  4412b7:	mov    eax,DWORD PTR [r8+rdi*4]
  4412bb:	shrx   eax,eax,edx
  4412c0:	test   al,0x3
  4412c2:	jne    441290 <strcmp@plt+0x3dad8>
  4412c4:	mov    rdx,QWORD PTR [rsi+0x20]
  4412c8:	mov    eax,ebp
  4412ca:	mov    rsi,r12
  4412cd:	mov    rdi,QWORD PTR [rdx+rax*8]
  4412d1:	call   42d540 <strcmp@plt+0x29d88>
  4412d6:	mov    rcx,QWORD PTR [r13+0x70]
  4412da:	jmp    441290 <strcmp@plt+0x3dad8>
  4412dc:	mov    rsi,QWORD PTR [rsp+0x20]
  4412e1:	mov    rdi,r14
  4412e4:	call   42d540 <strcmp@plt+0x29d88>
  4412e9:	jmp    44119d <strcmp@plt+0x3d9e5>
  4412ee:	mov    rdi,QWORD PTR [rsp]
  4412f2:	call   42dac0 <strcmp@plt+0x2a308>
  4412f7:	mov    rdi,QWORD PTR [rsp+0x20]
  4412fc:	call   42dac0 <strcmp@plt+0x2a308>
  441301:	mov    rdi,QWORD PTR [rsp+0x10]
  441306:	call   42dac0 <strcmp@plt+0x2a308>
  44130b:	mov    rdi,QWORD PTR [rsp+0x8]
  441310:	call   43a5a0 <strcmp@plt+0x36de8>
  441315:	test   r12,r12
  441318:	je     441322 <strcmp@plt+0x3db6a>
  44131a:	mov    rdi,r12
  44131d:	call   403740 <xmlFreeDoc@plt>
  441322:	mov    rax,QWORD PTR [rsp+0x28]
  441327:	lea    rdi,[rsp+0x58]
  44132c:	mov    r8d,0x1
  441332:	movzx  ecx,BYTE PTR [rax+0x2]
  441336:	movzx  edx,BYTE PTR [rax+0x1]
  44133a:	movzx  esi,BYTE PTR [rax]
  44133d:	call   43f430 <strcmp@plt+0x3bc78>
  441342:	mov    rsi,QWORD PTR [rsp+0x58]
  441347:	mov    rdi,QWORD PTR [rsp+0x38]
  44134c:	xor    ecx,ecx
  44134e:	mov    edx,eax
  441350:	call   43f5b0 <strcmp@plt+0x3bdf8>
  441355:	lea    rsi,[rip+0x12334]        # 453690 <strcmp@plt+0x4fed8>
  44135c:	xor    eax,eax
  44135e:	mov    edi,0x3
  441363:	call   4306a0 <strcmp@plt+0x2cee8>
  441368:	xor    eax,eax
  44136a:	mov    rcx,QWORD PTR [rsp+0x878]
  441372:	xor    rcx,QWORD PTR fs:0x28
  44137b:	jne    44182a <strcmp@plt+0x3e072>
  441381:	add    rsp,0x888
  441388:	pop    rbx
  441389:	pop    rbp
  44138a:	pop    r12
  44138c:	pop    r13
  44138e:	pop    r14
  441390:	pop    r15
  441392:	ret    
  441393:	add    DWORD PTR [rsp+0x18],0x1
  441398:	jmp    44121a <strcmp@plt+0x3da62>
  44139d:	mov    rdx,QWORD PTR [rax+0x18]
  4413a1:	mov    rsi,QWORD PTR [rdx]
  4413a4:	mov    edi,DWORD PTR [rsi]
  4413a6:	test   edi,edi
  4413a8:	je     441400 <strcmp@plt+0x3dc48>
  4413aa:	xor    ebp,ebp
  4413ac:	mov    r12,QWORD PTR [rsp+0x30]
  4413b1:	jmp    4413c9 <strcmp@plt+0x3dc11>
  4413b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4413b8:	mov    rax,QWORD PTR [rcx]
  4413bb:	add    ebp,0x1
  4413be:	mov    rdx,QWORD PTR [rax+0x18]
  4413c2:	mov    rsi,QWORD PTR [rdx]
  4413c5:	cmp    DWORD PTR [rsi],ebp
  4413c7:	je     441400 <strcmp@plt+0x3dc48>
  4413c9:	mov    r8,QWORD PTR [rsi+0x10]
  4413cd:	lea    eax,[rbp+rbp*1+0x0]
  4413d1:	mov    edi,ebp
  4413d3:	shr    edi,0x4
  4413d6:	and    eax,0x1e
  4413d9:	mov    edx,eax
  4413db:	mov    eax,DWORD PTR [r8+rdi*4]
  4413df:	shrx   eax,eax,edx
  4413e4:	test   al,0x3
  4413e6:	jne    4413b8 <strcmp@plt+0x3dc00>
  4413e8:	mov    rdx,QWORD PTR [rsi+0x20]
  4413ec:	mov    eax,ebp
  4413ee:	mov    rsi,r12
  4413f1:	mov    rdi,QWORD PTR [rdx+rax*8]
  4413f5:	call   42d540 <strcmp@plt+0x29d88>
  4413fa:	mov    rcx,QWORD PTR [r13+0x70]
  4413fe:	jmp    4413b8 <strcmp@plt+0x3dc00>
  441400:	mov    r15,QWORD PTR [rsp+0x30]
  441405:	mov    rdi,QWORD PTR [rax+0x20]
  441409:	mov    rsi,r15
  44140c:	call   42d540 <strcmp@plt+0x29d88>
  441411:	mov    rax,QWORD PTR [r13+0x70]
  441415:	mov    rsi,r15
  441418:	mov    rax,QWORD PTR [rax]
  44141b:	mov    rdi,QWORD PTR [rax+0x20]
  44141f:	call   42d540 <strcmp@plt+0x29d88>
  441424:	mov    rcx,QWORD PTR [r15+0x8]
  441428:	lea    rsi,[rsp+0x60]
  44142d:	mov    QWORD PTR [rsp+0x40],rsi
  441432:	lea    rsi,[rsp+0x470]
  44143a:	cmp    r15,rcx
  44143d:	mov    QWORD PTR [rsp+0x18],rcx
  441442:	je     441570 <strcmp@plt+0x3ddb8>
  441448:	mov    QWORD PTR [rsp+0x48],r13
  44144d:	mov    r13,rsi
  441450:	mov    rax,QWORD PTR [rsp+0x18]
  441455:	mov    rax,QWORD PTR [rax+0x10]
  441459:	mov    rbp,QWORD PTR [rax]
  44145c:	test   rbp,rbp
  44145f:	je     441552 <strcmp@plt+0x3dd9a>
  441465:	mov    r12,QWORD PTR [rsp+0x40]
  44146a:	nop    WORD PTR [rax+rax*1+0x0]
  441470:	cmp    QWORD PTR [rbp+0x8],0x0
  441475:	je     4414f3 <strcmp@plt+0x3dd3b>
  441477:	mov    rax,QWORD PTR [rbp+0x28]
  44147b:	mov    r14,QWORD PTR [rax]
  44147e:	test   r14,r14
  441481:	je     4414f3 <strcmp@plt+0x3dd3b>
  441483:	mov    r15,r13
  441486:	cmp    QWORD PTR [r14+0x8],0x0
  44148b:	je     4414a6 <strcmp@plt+0x3dcee>
  44148d:	mov    rdi,QWORD PTR [r14+0x28]
  441491:	test   rdi,rdi
  441494:	je     4414a6 <strcmp@plt+0x3dcee>
  441496:	call   434230 <strcmp@plt+0x30a78>
  44149b:	mov    rdi,QWORD PTR [rbx]
  44149e:	mov    rsi,rax
  4414a1:	call   408250 <strcmp@plt+0x4a98>
  4414a6:	mov    rax,QWORD PTR [r14+0x10]
  4414aa:	test   rax,rax
  4414ad:	je     4414d8 <strcmp@plt+0x3dd20>
  4414af:	mov    rdx,QWORD PTR [r14+0x18]
  4414b3:	test   rdx,rdx
  4414b6:	je     441520 <strcmp@plt+0x3dd68>
  4414b8:	mov    r14,rax
  4414bb:	mov    QWORD PTR [r15],rdx
  4414be:	add    r15,0x8
  4414c2:	cmp    QWORD PTR [r14+0x8],0x0
  4414c7:	jne    44148d <strcmp@plt+0x3dcd5>
  4414c9:	mov    rax,QWORD PTR [r14+0x10]
  4414cd:	test   rax,rax
  4414d0:	jne    4414af <strcmp@plt+0x3dcf7>
  4414d2:	nop    WORD PTR [rax+rax*1+0x0]
  4414d8:	mov    r14,QWORD PTR [r14+0x18]
  4414dc:	test   r14,r14
  4414df:	jne    441486 <strcmp@plt+0x3dcce>
  4414e1:	cmp    r15,r13
  4414e4:	je     4414f3 <strcmp@plt+0x3dd3b>
  4414e6:	mov    r14,QWORD PTR [r15-0x8]
  4414ea:	test   r14,r14
  4414ed:	jne    441838 <strcmp@plt+0x3e080>
  4414f3:	mov    rax,QWORD PTR [rbp+0x10]
  4414f7:	test   rax,rax
  4414fa:	je     441530 <strcmp@plt+0x3dd78>
  4414fc:	mov    rdx,QWORD PTR [rbp+0x18]
  441500:	test   rdx,rdx
  441503:	je     441658 <strcmp@plt+0x3dea0>
  441509:	mov    QWORD PTR [r12],rdx
  44150d:	mov    rbp,rax
  441510:	add    r12,0x8
  441514:	jmp    441470 <strcmp@plt+0x3dcb8>
  441519:	nop    DWORD PTR [rax+0x0]
  441520:	mov    r14,rax
  441523:	jmp    441486 <strcmp@plt+0x3dcce>
  441528:	nop    DWORD PTR [rax+rax*1+0x0]
  441530:	mov    rbp,QWORD PTR [rbp+0x18]
  441534:	test   rbp,rbp
  441537:	jne    441470 <strcmp@plt+0x3dcb8>
  44153d:	cmp    r12,QWORD PTR [rsp+0x40]
  441542:	je     441552 <strcmp@plt+0x3dd9a>
  441544:	mov    rbp,QWORD PTR [r12-0x8]
  441549:	test   rbp,rbp
  44154c:	jne    44182f <strcmp@plt+0x3e077>
  441552:	mov    rax,QWORD PTR [rsp+0x18]
  441557:	mov    rax,QWORD PTR [rax+0x8]
  44155b:	cmp    QWORD PTR [rsp+0x30],rax
  441560:	mov    QWORD PTR [rsp+0x18],rax
  441565:	jne    441450 <strcmp@plt+0x3dc98>
  44156b:	mov    r13,QWORD PTR [rsp+0x48]
  441570:	mov    rdi,QWORD PTR [rsp+0x30]
  441575:	lea    r14,[rip+0x12254]        # 4537d0 <strcmp@plt+0x50018>
  44157c:	call   42dac0 <strcmp@plt+0x2a308>
  441581:	mov    rdi,QWORD PTR [r13+0x70]
  441585:	call   408740 <strcmp@plt+0x4f88>
  44158a:	xor    eax,eax
  44158c:	call   4086f0 <strcmp@plt+0x4f38>
  441591:	mov    QWORD PTR [r13+0x70],rax
  441595:	mov    rax,QWORD PTR [rsp+0x10]
  44159a:	mov    r15,QWORD PTR [rsp+0x10]
  44159f:	mov    rbp,QWORD PTR [rax+0x8]
  4415a3:	cmp    rax,rbp
  4415a6:	jne    441601 <strcmp@plt+0x3de49>
  4415a8:	jmp    4416d6 <strcmp@plt+0x3df1e>
  4415ad:	nop    DWORD PTR [rax]
  4415b0:	mov    eax,DWORD PTR [rax]
  4415b2:	test   eax,eax
  4415b4:	jle    4415d8 <strcmp@plt+0x3de20>
  4415b6:	mov    rdi,r12
  4415b9:	call   4342b0 <strcmp@plt+0x30af8>
  4415be:	mov    rdi,rax
  4415c1:	call   424890 <strcmp@plt+0x210d8>
  4415c6:	mov    rsi,r14
  4415c9:	mov    rdx,rax
  4415cc:	mov    edi,0x5
  4415d1:	xor    eax,eax
  4415d3:	call   4306a0 <strcmp@plt+0x2cee8>
  4415d8:	mov    rdi,r12
  4415db:	call   434230 <strcmp@plt+0x30a78>
  4415e0:	mov    rdi,QWORD PTR [rbx]
  4415e3:	mov    rsi,rax
  4415e6:	call   4081f0 <strcmp@plt+0x4a38>
  4415eb:	cmp    eax,0x1
  4415ee:	jne    441792 <strcmp@plt+0x3dfda>
  4415f4:	mov    rbp,QWORD PTR [rbp+0x8]
  4415f8:	cmp    r15,rbp
  4415fb:	je     4416d6 <strcmp@plt+0x3df1e>
  441601:	mov    r12,QWORD PTR [rbp+0x10]
  441605:	mov    rsi,r13
  441608:	mov    rdi,r12
  44160b:	call   407240 <strcmp@plt+0x3a88>
  441610:	cmp    eax,0x1
  441613:	mov    rax,0x468e3c
  44161a:	je     4415b0 <strcmp@plt+0x3ddf8>
  44161c:	cmp    DWORD PTR [rax],0x1
  44161f:	jg     4417ff <strcmp@plt+0x3e047>
  441625:	mov    rdi,QWORD PTR [rsp]
  441629:	call   42dac0 <strcmp@plt+0x2a308>
  44162e:	mov    rdi,QWORD PTR [rsp+0x20]
  441633:	call   42dac0 <strcmp@plt+0x2a308>
  441638:	mov    rdi,QWORD PTR [rsp+0x10]
  44163d:	call   42dac0 <strcmp@plt+0x2a308>
  441642:	mov    rdi,QWORD PTR [rsp+0x8]
  441647:	call   43a5a0 <strcmp@plt+0x36de8>
  44164c:	jmp    441322 <strcmp@plt+0x3db6a>
  441651:	nop    DWORD PTR [rax+0x0]
  441658:	mov    rbp,rax
  44165b:	jmp    441470 <strcmp@plt+0x3dcb8>
  441660:	mov    rax,0x468e3c
  441667:	cmp    DWORD PTR [rax],0x1
  44166a:	jle    441625 <strcmp@plt+0x3de6d>
  44166c:	mov    rdx,QWORD PTR [r15]
  44166f:	lea    rsi,[rip+0x120da]        # 453750 <strcmp@plt+0x4ff98>
  441676:	mov    edi,0x6
  44167b:	xor    eax,eax
  44167d:	call   4306a0 <strcmp@plt+0x2cee8>
  441682:	jmp    441625 <strcmp@plt+0x3de6d>
  441684:	mov    rax,0x468e3c
  44168b:	cmp    DWORD PTR [rax],0x1
  44168e:	jle    441625 <strcmp@plt+0x3de6d>
  441690:	mov    rdx,QWORD PTR [r15]
  441693:	lea    rsi,[rip+0x1205e]        # 4536f8 <strcmp@plt+0x4ff40>
  44169a:	mov    edi,0x6
  44169f:	xor    eax,eax
  4416a1:	call   4306a0 <strcmp@plt+0x2cee8>
  4416a6:	jmp    441625 <strcmp@plt+0x3de6d>
  4416ab:	mov    rax,0x468e3c
  4416b2:	cmp    DWORD PTR [rax],0x1
  4416b5:	jle    441625 <strcmp@plt+0x3de6d>
  4416bb:	mov    rdx,QWORD PTR [r15]
  4416be:	lea    rsi,[rip+0x1205b]        # 453720 <strcmp@plt+0x4ff68>
  4416c5:	mov    edi,0x6
  4416ca:	xor    eax,eax
  4416cc:	call   4306a0 <strcmp@plt+0x2cee8>
  4416d1:	jmp    441625 <strcmp@plt+0x3de6d>
  4416d6:	mov    rax,QWORD PTR [rbx]
  4416d9:	mov    rdi,QWORD PTR [rax+0x10]
  4416dd:	call   407e70 <strcmp@plt+0x46b8>
  4416e2:	mov    rax,0x468e3c
  4416e9:	mov    edx,DWORD PTR [rax]
  4416eb:	test   edx,edx
  4416ed:	jg     4417bd <strcmp@plt+0x3e005>
  4416f3:	mov    rdi,QWORD PTR [r13+0x70]
  4416f7:	mov    esi,0x5
  4416fc:	call   409060 <strcmp@plt+0x58a8>
  441701:	mov    rdi,r13
  441704:	call   410750 <strcmp@plt+0xcf98>
  441709:	mov    rax,QWORD PTR [rsp+0x20]
  44170e:	mov    rbp,QWORD PTR [rsp+0x20]
  441713:	mov    rbx,QWORD PTR [rax+0x8]
  441717:	cmp    rax,rbx
  44171a:	je     441731 <strcmp@plt+0x3df79>
  44171c:	mov    rsi,QWORD PTR [rbx+0x10]
  441720:	mov    rdi,r13
  441723:	call   410af0 <strcmp@plt+0xd338>
  441728:	mov    rbx,QWORD PTR [rbx+0x8]
  44172c:	cmp    rbp,rbx
  44172f:	jne    44171c <strcmp@plt+0x3df64>
  441731:	mov    rax,QWORD PTR [rsp+0x28]
  441736:	lea    rdi,[rsp+0x58]
  44173b:	xor    r8d,r8d
  44173e:	movzx  ecx,BYTE PTR [rax+0x2]
  441742:	movzx  edx,BYTE PTR [rax+0x1]
  441746:	movzx  esi,BYTE PTR [rax]
  441749:	call   43f430 <strcmp@plt+0x3bc78>
  44174e:	mov    rsi,QWORD PTR [rsp+0x58]
  441753:	mov    rdi,QWORD PTR [rsp+0x38]
  441758:	xor    ecx,ecx
  44175a:	mov    edx,eax
  44175c:	call   43f5b0 <strcmp@plt+0x3bdf8>
  441761:	mov    rdi,QWORD PTR [rsp]
  441765:	call   42dac0 <strcmp@plt+0x2a308>
  44176a:	mov    rdi,QWORD PTR [rsp+0x20]
  44176f:	call   42dac0 <strcmp@plt+0x2a308>
  441774:	mov    rdi,QWORD PTR [rsp+0x10]
  441779:	call   42dac0 <strcmp@plt+0x2a308>
  44177e:	mov    rdi,QWORD PTR [rsp+0x8]
  441783:	call   43a5a0 <strcmp@plt+0x36de8>
  441788:	mov    eax,0x1
  44178d:	jmp    44136a <strcmp@plt+0x3dbb2>
  441792:	mov    rdi,r12
  441795:	call   4342b0 <strcmp@plt+0x30af8>
  44179a:	mov    rdi,rax
  44179d:	call   424890 <strcmp@plt+0x210d8>
  4417a2:	lea    rsi,[rip+0x11eaf]        # 453658 <strcmp@plt+0x4fea0>
  4417a9:	mov    rdx,rax
  4417ac:	mov    edi,0x2
  4417b1:	xor    eax,eax
  4417b3:	call   4306a0 <strcmp@plt+0x2cee8>
  4417b8:	jmp    441625 <strcmp@plt+0x3de6d>
  4417bd:	lea    rsi,[rip+0x1203c]        # 453800 <strcmp@plt+0x50048>
  4417c4:	xor    eax,eax
  4417c6:	mov    edi,0x5
  4417cb:	call   4306a0 <strcmp@plt+0x2cee8>
  4417d0:	mov    rax,0x468e3c
  4417d7:	cmp    DWORD PTR [rax],0x1
  4417da:	jle    4416f3 <strcmp@plt+0x3df3b>
  4417e0:	lea    rdx,[rip+0x12a1f]        # 454206 <strcmp@plt+0x50a4e>
  4417e7:	lea    rsi,[rip+0x1203a]        # 453828 <strcmp@plt+0x50070>
  4417ee:	mov    edi,0x6
  4417f3:	xor    eax,eax
  4417f5:	call   4306a0 <strcmp@plt+0x2cee8>
  4417fa:	jmp    4416f3 <strcmp@plt+0x3df3b>
  4417ff:	mov    rdi,r12
  441802:	call   4342b0 <strcmp@plt+0x30af8>
  441807:	mov    rdi,rax
  44180a:	call   424890 <strcmp@plt+0x210d8>
  44180f:	lea    rsi,[rip+0x11f82]        # 453798 <strcmp@plt+0x4ffe0>
  441816:	mov    rdx,rax
  441819:	mov    edi,0x6
  44181e:	xor    eax,eax
  441820:	call   4306a0 <strcmp@plt+0x2cee8>
  441825:	jmp    441625 <strcmp@plt+0x3de6d>
  44182a:	call   403460 <__stack_chk_fail@plt>
  44182f:	sub    r12,0x8
  441833:	jmp    441470 <strcmp@plt+0x3dcb8>
  441838:	sub    r15,0x8
  44183c:	jmp    441486 <strcmp@plt+0x3dcce>
  441841:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  44184c:	nop    DWORD PTR [rax+0x0]
  441850:	push   r15
  441852:	push   r14
  441854:	push   r13
  441856:	push   r12
  441858:	mov    r13,rdx
  44185b:	push   rbp
  44185c:	push   rbx
  44185d:	mov    ebx,esi
  44185f:	lea    rsi,[rip+0x129b3]        # 454219 <strcmp@plt+0x50a61>
  441866:	sub    rsp,0x18
  44186a:	call   43fdd0 <strcmp@plt+0x3c618>
  44186f:	test   rax,rax
  441872:	je     441ac4 <strcmp@plt+0x3e30c>
  441878:	mov    r15,rax
  44187b:	movzx  eax,bl
  44187e:	mov    DWORD PTR [rsp+0xc],eax
  441882:	lea    rsi,[rip+0x12a94]        # 45431d <strcmp@plt+0x50b65>
  441889:	mov    rdi,r15
  44188c:	call   43fdd0 <strcmp@plt+0x3c618>
  441891:	test   rax,rax
  441894:	mov    rbp,rax
  441897:	je     441b56 <strcmp@plt+0x3e39e>
  44189d:	lea    rsi,[rip+0x12980]        # 454224 <strcmp@plt+0x50a6c>
  4418a4:	mov    rdi,r15
  4418a7:	call   43fdd0 <strcmp@plt+0x3c618>
  4418ac:	test   rax,rax
  4418af:	mov    rbx,rax
  4418b2:	je     441b70 <strcmp@plt+0x3e3b8>
  4418b8:	lea    rsi,[rip+0x12973]        # 454232 <strcmp@plt+0x50a7a>
  4418bf:	mov    rdi,r15
  4418c2:	call   43fdd0 <strcmp@plt+0x3c618>
  4418c7:	test   rax,rax
  4418ca:	mov    r12,rax
  4418cd:	je     441b8a <strcmp@plt+0x3e3d2>
  4418d3:	mov    rdi,rbp
  4418d6:	call   403430 <xmlNodeGetContent@plt>
  4418db:	mov    rdi,r12
  4418de:	mov    QWORD PTR [rsp],rax
  4418e2:	call   403430 <xmlNodeGetContent@plt>
  4418e7:	mov    rdi,rbx
  4418ea:	mov    r14,rax
  4418ed:	call   403430 <xmlNodeGetContent@plt>
  4418f2:	lea    rdi,[rip+0x12942]        # 45423b <strcmp@plt+0x50a83>
  4418f9:	mov    ecx,0x5
  4418fe:	mov    rsi,rax
  441901:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  441903:	je     44192b <strcmp@plt+0x3e173>
  441905:	lea    rdi,[rip+0x12934]        # 454240 <strcmp@plt+0x50a88>
  44190c:	mov    ecx,0xe
  441911:	mov    rsi,rax
  441914:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  441916:	je     441970 <strcmp@plt+0x3e1b8>
  441918:	lea    rdi,[rip+0x1292f]        # 45424e <strcmp@plt+0x50a96>
  44191f:	mov    ecx,0x11
  441924:	mov    rsi,rax
  441927:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  441929:	jne    441970 <strcmp@plt+0x3e1b8>
  44192b:	mov    rdi,rax
  44192e:	call   4037b0 <free@plt>
  441933:	lea    rsi,[rip+0x525e]        # 446b98 <strcmp@plt+0x433e0>
  44193a:	mov    edi,0x2
  44193f:	xor    eax,eax
  441941:	call   4306a0 <strcmp@plt+0x2cee8>
  441946:	mov    rdi,QWORD PTR [rsp]
  44194a:	call   4037b0 <free@plt>
  44194f:	mov    rdi,r14
  441952:	call   4037b0 <free@plt>
  441957:	xor    eax,eax
  441959:	add    rsp,0x18
  44195d:	pop    rbx
  44195e:	pop    rbp
  44195f:	pop    r12
  441961:	pop    r13
  441963:	pop    r14
  441965:	pop    r15
  441967:	ret    
  441968:	nop    DWORD PTR [rax+rax*1+0x0]
  441970:	mov    rdi,rax
  441973:	call   4037b0 <free@plt>
  441978:	xor    eax,eax
  44197a:	call   424740 <strcmp@plt+0x20f88>
  44197f:	test   rax,rax
  441982:	mov    r12,rax
  441985:	je     441ba4 <strcmp@plt+0x3e3ec>
  44198b:	mov    rdi,QWORD PTR [rsp]
  44198f:	mov    rsi,r12
  441992:	call   4256a0 <strcmp@plt+0x21ee8>
  441997:	cmp    eax,0x1
  44199a:	jne    441bb5 <strcmp@plt+0x3e3fd>
  4419a0:	mov    rdi,QWORD PTR [rsp]
  4419a4:	call   4037b0 <free@plt>
  4419a9:	mov    rbx,QWORD PTR [r13+0x8]
  4419ad:	cmp    r13,rbx
  4419b0:	jne    4419cd <strcmp@plt+0x3e215>
  4419b2:	jmp    441a50 <strcmp@plt+0x3e298>
  4419b7:	nop    WORD PTR [rax+rax*1+0x0]
  4419c0:	mov    rbx,QWORD PTR [rbx+0x8]
  4419c4:	cmp    r13,rbx
  4419c7:	je     441a50 <strcmp@plt+0x3e298>
  4419cd:	mov    rax,QWORD PTR [rbx+0x10]
  4419d1:	mov    rsi,r12
  4419d4:	mov    rdi,QWORD PTR [rax]
  4419d7:	call   424df0 <strcmp@plt+0x21638>
  4419dc:	test   eax,eax
  4419de:	jne    4419c0 <strcmp@plt+0x3e208>
  4419e0:	mov    rdi,r12
  4419e3:	call   424750 <strcmp@plt+0x20f98>
  4419e8:	mov    rdi,r14
  4419eb:	call   4037b0 <free@plt>
  4419f0:	mov    rax,0x468e3c
  4419f7:	cmp    DWORD PTR [rax],0x1
  4419fa:	jle    441a1a <strcmp@plt+0x3e262>
  4419fc:	mov    rdi,r12
  4419ff:	call   424890 <strcmp@plt+0x210d8>
  441a04:	lea    rsi,[rip+0x11fa5]        # 4539b0 <strcmp@plt+0x501f8>
  441a0b:	mov    rdx,rax
  441a0e:	mov    edi,0x6
  441a13:	xor    eax,eax
  441a15:	call   4306a0 <strcmp@plt+0x2cee8>
  441a1a:	mov    rbp,QWORD PTR [r15+0x10]
  441a1e:	jmp    441a30 <strcmp@plt+0x3e278>
  441a20:	mov    rdi,QWORD PTR [rax+0x10]
  441a24:	mov    rsi,rbp
  441a27:	call   4037b8 <strcmp@plt>
  441a2c:	test   eax,eax
  441a2e:	je     4419c0 <strcmp@plt+0x3e208>
  441a30:	mov    rdi,r15
  441a33:	call   403200 <xmlNextElementSibling@plt>
  441a38:	test   rax,rax
  441a3b:	mov    r15,rax
  441a3e:	jne    441a20 <strcmp@plt+0x3e268>
  441a40:	mov    rbx,QWORD PTR [rbx+0x8]
  441a44:	cmp    r13,rbx
  441a47:	jne    4419cd <strcmp@plt+0x3e215>
  441a49:	nop    DWORD PTR [rax+0x0]
  441a50:	mov    rbx,0x4747c0
  441a57:	mov    eax,DWORD PTR [rbx]
  441a59:	test   eax,eax
  441a5b:	je     441ae0 <strcmp@plt+0x3e328>
  441a61:	mov    rdi,r12
  441a64:	call   4251c0 <strcmp@plt+0x21a08>
  441a69:	movzx  eax,ax
  441a6c:	cmp    eax,DWORD PTR [rbx]
  441a6e:	je     441ae0 <strcmp@plt+0x3e328>
  441a70:	mov    rdx,QWORD PTR [rsp]
  441a74:	lea    rsi,[rip+0x518d]        # 446c08 <strcmp@plt+0x43450>
  441a7b:	xor    eax,eax
  441a7d:	mov    edi,0x3
  441a82:	call   4306a0 <strcmp@plt+0x2cee8>
  441a87:	mov    rdi,r12
  441a8a:	call   424750 <strcmp@plt+0x20f98>
  441a8f:	mov    rdi,r14
  441a92:	call   4037b0 <free@plt>
  441a97:	mov    rbx,QWORD PTR [r15+0x10]
  441a9b:	jmp    441ab4 <strcmp@plt+0x3e2fc>
  441a9d:	nop    DWORD PTR [rax]
  441aa0:	mov    rdi,QWORD PTR [rax+0x10]
  441aa4:	mov    rsi,rbx
  441aa7:	call   4037b8 <strcmp@plt>
  441aac:	test   eax,eax
  441aae:	je     441882 <strcmp@plt+0x3e0ca>
  441ab4:	mov    rdi,r15
  441ab7:	call   403200 <xmlNextElementSibling@plt>
  441abc:	test   rax,rax
  441abf:	mov    r15,rax
  441ac2:	jne    441aa0 <strcmp@plt+0x3e2e8>
  441ac4:	mov    eax,0x1
  441ac9:	add    rsp,0x18
  441acd:	pop    rbx
  441ace:	pop    rbp
  441acf:	pop    r12
  441ad1:	pop    r13
  441ad3:	pop    r14
  441ad5:	pop    r15
  441ad7:	ret    
  441ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  441ae0:	mov    ecx,DWORD PTR [rsp+0xc]
  441ae4:	mov    rdx,r14
  441ae7:	mov    esi,0x1
  441aec:	mov    rdi,r12
  441aef:	call   412610 <strcmp@plt+0xee58>
  441af4:	mov    rdi,r14
  441af7:	mov    rbx,rax
  441afa:	call   4037b0 <free@plt>
  441aff:	mov    rdi,r12
  441b02:	call   424750 <strcmp@plt+0x20f98>
  441b07:	test   rbx,rbx
  441b0a:	je     441957 <strcmp@plt+0x3e19f>
  441b10:	mov    rdi,rbx
  441b13:	mov    rsi,r13
  441b16:	call   42d540 <strcmp@plt+0x29d88>
  441b1b:	mov    rbx,QWORD PTR [r15+0x10]
  441b1f:	jmp    441b3c <strcmp@plt+0x3e384>
  441b21:	nop    DWORD PTR [rax+0x0]
  441b28:	mov    rdi,QWORD PTR [rax+0x10]
  441b2c:	mov    rsi,rbx
  441b2f:	call   4037b8 <strcmp@plt>
  441b34:	test   eax,eax
  441b36:	je     441882 <strcmp@plt+0x3e0ca>
  441b3c:	mov    rdi,r15
  441b3f:	call   403200 <xmlNextElementSibling@plt>
  441b44:	test   rax,rax
  441b47:	mov    r15,rax
  441b4a:	jne    441b28 <strcmp@plt+0x3e370>
  441b4c:	mov    eax,0x1
  441b51:	jmp    441ac9 <strcmp@plt+0x3e311>
  441b56:	lea    rsi,[rip+0x11cf3]        # 453850 <strcmp@plt+0x50098>
  441b5d:	xor    eax,eax
  441b5f:	mov    edi,0x3
  441b64:	call   4306a0 <strcmp@plt+0x2cee8>
  441b69:	xor    eax,eax
  441b6b:	jmp    441959 <strcmp@plt+0x3e1a1>
  441b70:	lea    rsi,[rip+0x11d19]        # 453890 <strcmp@plt+0x500d8>
  441b77:	xor    eax,eax
  441b79:	mov    edi,0x3
  441b7e:	call   4306a0 <strcmp@plt+0x2cee8>
  441b83:	xor    eax,eax
  441b85:	jmp    441959 <strcmp@plt+0x3e1a1>
  441b8a:	lea    rsi,[rip+0x11d47]        # 4538d8 <strcmp@plt+0x50120>
  441b91:	xor    eax,eax
  441b93:	mov    edi,0x3
  441b98:	call   4306a0 <strcmp@plt+0x2cee8>
  441b9d:	xor    eax,eax
  441b9f:	jmp    441959 <strcmp@plt+0x3e1a1>
  441ba4:	lea    rsi,[rip+0x11d6d]        # 453918 <strcmp@plt+0x50160>
  441bab:	mov    edi,0x3
  441bb0:	jmp    44193f <strcmp@plt+0x3e187>
  441bb5:	mov    rbx,QWORD PTR [rsp]
  441bb9:	lea    rsi,[rip+0x11db0]        # 453970 <strcmp@plt+0x501b8>
  441bc0:	xor    eax,eax
  441bc2:	mov    edi,0x3
  441bc7:	mov    rdx,rbx
  441bca:	call   4306a0 <strcmp@plt+0x2cee8>
  441bcf:	mov    rdi,rbx
  441bd2:	call   4037b0 <free@plt>
  441bd7:	mov    rdi,r14
  441bda:	call   4037b0 <free@plt>
  441bdf:	xor    eax,eax
  441be1:	jmp    441959 <strcmp@plt+0x3e1a1>
  441be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  441bf0:	push   r15
  441bf2:	push   r14
  441bf4:	mov    r14,rdi
  441bf7:	push   r13
  441bf9:	push   r12
  441bfb:	push   rbp
  441bfc:	push   rbx
  441bfd:	mov    rbp,rdx
  441c00:	mov    rbx,rsi
  441c03:	sub    rsp,0x28
  441c07:	mov    rax,QWORD PTR fs:0x28
  441c10:	mov    QWORD PTR [rsp+0x18],rax
  441c15:	xor    eax,eax
  441c17:	mov    rax,0x468e3c
  441c1e:	mov    ecx,DWORD PTR [rax]
  441c20:	test   ecx,ecx
  441c22:	jle    441c37 <strcmp@plt+0x3e47f>
  441c24:	lea    rsi,[rip+0x11e0d]        # 453a38 <strcmp@plt+0x50280>
  441c2b:	mov    edi,0x5
  441c30:	xor    eax,eax
  441c32:	call   4306a0 <strcmp@plt+0x2cee8>
  441c37:	mov    rax,0x474850
  441c3e:	mov    rdi,QWORD PTR [rax]
  441c41:	call   410710 <strcmp@plt+0xcf58>
  441c46:	mov    esi,DWORD PTR [rbx+0x4]
  441c49:	lea    rcx,[rip+0x12490]        # 4540e0 <strcmp@plt+0x50928>
  441c50:	xor    edx,edx
  441c52:	mov    r8d,0x2160
  441c58:	mov    rdi,rbp
  441c5b:	mov    r15,rax
  441c5e:	call   403040 <xmlReadMemory@plt>
  441c63:	mov    rdi,rax
  441c66:	mov    rbp,rax
  441c69:	call   4035f0 <xmlDocGetRootElement@plt>
  441c6e:	mov    rdi,rax
  441c71:	call   403320 <xmlFirstElementChild@plt>
  441c76:	lea    rsi,[rip+0x125e2]        # 45425f <strcmp@plt+0x50aa7>
  441c7d:	mov    rdi,rax
  441c80:	mov    r12,rax
  441c83:	call   43fdd0 <strcmp@plt+0x3c618>
  441c88:	xor    esi,esi
  441c8a:	test   rax,rax
  441c8d:	je     441cb0 <strcmp@plt+0x3e4f8>
  441c8f:	mov    rdi,rax
  441c92:	call   403430 <xmlNodeGetContent@plt>
  441c97:	lea    rdi,[rip+0x5a0c]        # 4476aa <strcmp@plt+0x43ef2>
  441c9e:	mov    rsi,rax
  441ca1:	mov    ecx,0x5
  441ca6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  441ca8:	sete   sil
  441cac:	movzx  esi,sil
  441cb0:	mov    rdi,0x40d2e0
  441cb7:	mov    DWORD PTR [rsp+0xc],esi
  441cbb:	call   42d4f0 <strcmp@plt+0x29d38>
  441cc0:	mov    esi,DWORD PTR [rsp+0xc]
  441cc4:	mov    rdi,r12
  441cc7:	mov    rdx,rax
  441cca:	mov    r13,rax
  441ccd:	call   441850 <strcmp@plt+0x3e098>
  441cd2:	cmp    eax,0x1
  441cd5:	mov    r12d,eax
  441cd8:	je     441d80 <strcmp@plt+0x3e5c8>
  441cde:	mov    rax,0x468e3c
  441ce5:	mov    edx,DWORD PTR [rax]
  441ce7:	test   edx,edx
  441ce9:	jle    441cfe <strcmp@plt+0x3e546>
  441ceb:	lea    rsi,[rip+0x11d6e]        # 453a60 <strcmp@plt+0x502a8>
  441cf2:	mov    edi,0x5
  441cf7:	xor    eax,eax
  441cf9:	call   4306a0 <strcmp@plt+0x2cee8>
  441cfe:	mov    rdi,r13
  441d01:	call   42dac0 <strcmp@plt+0x2a308>
  441d06:	test   rbp,rbp
  441d09:	je     441d13 <strcmp@plt+0x3e55b>
  441d0b:	mov    rdi,rbp
  441d0e:	call   403740 <xmlFreeDoc@plt>
  441d13:	movzx  ecx,BYTE PTR [rbx+0x2]
  441d17:	movzx  edx,BYTE PTR [rbx+0x1]
  441d1b:	lea    rdi,[rsp+0x10]
  441d20:	movzx  esi,BYTE PTR [rbx]
  441d23:	mov    r8d,0x1
  441d29:	xor    r12d,r12d
  441d2c:	call   43f430 <strcmp@plt+0x3bc78>
  441d31:	mov    rsi,QWORD PTR [rsp+0x10]
  441d36:	xor    ecx,ecx
  441d38:	mov    edx,eax
  441d3a:	mov    rdi,r14
  441d3d:	call   43f5b0 <strcmp@plt+0x3bdf8>
  441d42:	lea    rsi,[rip+0x11cb7]        # 453a00 <strcmp@plt+0x50248>
  441d49:	mov    edi,0x3
  441d4e:	xor    eax,eax
  441d50:	call   4306a0 <strcmp@plt+0x2cee8>
  441d55:	mov    rbx,QWORD PTR [rsp+0x18]
  441d5a:	xor    rbx,QWORD PTR fs:0x28
  441d63:	mov    eax,r12d
  441d66:	jne    441df8 <strcmp@plt+0x3e640>
  441d6c:	add    rsp,0x28
  441d70:	pop    rbx
  441d71:	pop    rbp
  441d72:	pop    r12
  441d74:	pop    r13
  441d76:	pop    r14
  441d78:	pop    r15
  441d7a:	ret    
  441d7b:	nop    DWORD PTR [rax+rax*1+0x0]
  441d80:	mov    rdi,rbp
  441d83:	call   403740 <xmlFreeDoc@plt>
  441d88:	mov    rdi,QWORD PTR [r15+0x78]
  441d8c:	call   42dac0 <strcmp@plt+0x2a308>
  441d91:	mov    QWORD PTR [r15+0x78],r13
  441d95:	mov    rdi,r15
  441d98:	call   410750 <strcmp@plt+0xcf98>
  441d9d:	mov    rax,0x468e3c
  441da4:	mov    eax,DWORD PTR [rax]
  441da6:	test   eax,eax
  441da8:	jle    441dbd <strcmp@plt+0x3e605>
  441daa:	lea    rsi,[rip+0x11cdf]        # 453a90 <strcmp@plt+0x502d8>
  441db1:	mov    edi,0x5
  441db6:	xor    eax,eax
  441db8:	call   4306a0 <strcmp@plt+0x2cee8>
  441dbd:	mov    rdi,r15
  441dc0:	mov    esi,0x5
  441dc5:	call   4112f0 <strcmp@plt+0xdb38>
  441dca:	movzx  ecx,BYTE PTR [rbx+0x2]
  441dce:	movzx  edx,BYTE PTR [rbx+0x1]
  441dd2:	lea    rdi,[rsp+0x10]
  441dd7:	movzx  esi,BYTE PTR [rbx]
  441dda:	xor    r8d,r8d
  441ddd:	call   43f430 <strcmp@plt+0x3bc78>
  441de2:	mov    rsi,QWORD PTR [rsp+0x10]
  441de7:	xor    ecx,ecx
  441de9:	mov    edx,eax
  441deb:	mov    rdi,r14
  441dee:	call   43f5b0 <strcmp@plt+0x3bdf8>
  441df3:	jmp    441d55 <strcmp@plt+0x3e59d>
  441df8:	call   403460 <__stack_chk_fail@plt>
  441dfd:	nop    DWORD PTR [rax]
  441e00:	push   rbp
  441e01:	push   rbx
  441e02:	mov    rbp,rdi
  441e05:	sub    rsp,0x8
  441e09:	call   4036c0 <zmq_ctx_new@plt>
  441e0e:	mov    rbx,0x468e3c
  441e15:	mov    QWORD PTR [rbp+0x0],rax
  441e19:	cmp    DWORD PTR [rbx],0x2
  441e1c:	jle    441e44 <strcmp@plt+0x3e68c>
  441e1e:	call   403050 <__errno_location@plt>
  441e23:	mov    edi,DWORD PTR [rax]
  441e25:	call   4030f0 <zmq_strerror@plt>
  441e2a:	lea    rsi,[rip+0x11ccf]        # 453b00 <strcmp@plt+0x50348>
  441e31:	mov    rdx,rax
  441e34:	mov    edi,0x7
  441e39:	xor    eax,eax
  441e3b:	call   4306a0 <strcmp@plt+0x2cee8>
  441e40:	mov    rax,QWORD PTR [rbp+0x0]
  441e44:	mov    esi,0x4
  441e49:	mov    rdi,rax
  441e4c:	call   403710 <zmq_socket@plt>
  441e51:	cmp    DWORD PTR [rbx],0x2
  441e54:	mov    QWORD PTR [rbp+0x8],rax
  441e58:	jle    441e80 <strcmp@plt+0x3e6c8>
  441e5a:	call   403050 <__errno_location@plt>
  441e5f:	mov    edi,DWORD PTR [rax]
  441e61:	call   4030f0 <zmq_strerror@plt>
  441e66:	lea    rsi,[rip+0x123fe]        # 45426b <strcmp@plt+0x50ab3>
  441e6d:	mov    rdx,rax
  441e70:	mov    edi,0x7
  441e75:	xor    eax,eax
  441e77:	call   4306a0 <strcmp@plt+0x2cee8>
  441e7c:	mov    rax,QWORD PTR [rbp+0x8]
  441e80:	lea    rsi,[rip+0x10f7d]        # 452e04 <strcmp@plt+0x4f64c>
  441e87:	mov    rdi,rax
  441e8a:	call   4032f0 <zmq_bind@plt>
  441e8f:	test   eax,eax
  441e91:	je     441eb8 <strcmp@plt+0x3e700>
  441e93:	cmp    DWORD PTR [rbx],0x1
  441e96:	jg     441ef0 <strcmp@plt+0x3e738>
  441e98:	lea    rsi,[rip+0x11c29]        # 453ac8 <strcmp@plt+0x50310>
  441e9f:	xor    eax,eax
  441ea1:	mov    edi,0x2
  441ea6:	call   4306a0 <strcmp@plt+0x2cee8>
  441eab:	add    rsp,0x8
  441eaf:	xor    eax,eax
  441eb1:	pop    rbx
  441eb2:	pop    rbp
  441eb3:	ret    
  441eb4:	nop    DWORD PTR [rax+0x0]
  441eb8:	cmp    DWORD PTR [rbx],0x1
  441ebb:	jg     441ed0 <strcmp@plt+0x3e718>
  441ebd:	mov    eax,0x1
  441ec2:	add    rsp,0x8
  441ec6:	pop    rbx
  441ec7:	pop    rbp
  441ec8:	ret    
  441ec9:	nop    DWORD PTR [rax+0x0]
  441ed0:	lea    rsi,[rip+0x11c79]        # 453b50 <strcmp@plt+0x50398>
  441ed7:	xor    eax,eax
  441ed9:	mov    edi,0x6
  441ede:	call   4306a0 <strcmp@plt+0x2cee8>
  441ee3:	mov    eax,0x1
  441ee8:	jmp    441ec2 <strcmp@plt+0x3e70a>
  441eea:	nop    WORD PTR [rax+rax*1+0x0]
  441ef0:	mov    edi,eax
  441ef2:	call   4030f0 <zmq_strerror@plt>
  441ef7:	lea    rsi,[rip+0x11c22]        # 453b20 <strcmp@plt+0x50368>
  441efe:	mov    rdx,rax
  441f01:	mov    edi,0x6
  441f06:	xor    eax,eax
  441f08:	call   4306a0 <strcmp@plt+0x2cee8>
  441f0d:	jmp    441e98 <strcmp@plt+0x3e6e0>
  441f0f:	nop
  441f10:	push   r12
  441f12:	push   rbp
  441f13:	push   rbx
  441f14:	movzx  eax,BYTE PTR [rdi]
  441f17:	movzx  ebx,BYTE PTR [rdi+0x1]
  441f1b:	movzx  ebp,BYTE PTR [rdi+0x2]
  441f1f:	test   al,al
  441f21:	je     441f80 <strcmp@plt+0x3e7c8>
  441f23:	cmp    al,0x3
  441f25:	jne    441f60 <strcmp@plt+0x3e7a8>
  441f27:	mov    rax,0x474850
  441f2e:	mov    rdi,QWORD PTR [rax]
  441f31:	call   408340 <strcmp@plt+0x4b88>
  441f36:	cmp    eax,0x2
  441f39:	je     442060 <strcmp@plt+0x3e8a8>
  441f3f:	mov    rax,0x468e3c
  441f46:	mov    eax,DWORD PTR [rax]
  441f48:	test   eax,eax
  441f4a:	jg     441ff0 <strcmp@plt+0x3e838>
  441f50:	xor    eax,eax
  441f52:	pop    rbx
  441f53:	pop    rbp
  441f54:	pop    r12
  441f56:	ret    
  441f57:	nop    WORD PTR [rax+rax*1+0x0]
  441f60:	lea    rsi,[rip+0x11db1]        # 453d18 <strcmp@plt+0x50560>
  441f67:	xor    eax,eax
  441f69:	mov    edi,0x3
  441f6e:	call   4306a0 <strcmp@plt+0x2cee8>
  441f73:	xor    eax,eax
  441f75:	pop    rbx
  441f76:	pop    rbp
  441f77:	pop    r12
  441f79:	ret    
  441f7a:	nop    WORD PTR [rax+rax*1+0x0]
  441f80:	mov    r12,0x474850
  441f87:	mov    rdi,QWORD PTR [r12]
  441f8b:	call   408340 <strcmp@plt+0x4b88>
  441f90:	test   eax,eax
  441f92:	jne    442040 <strcmp@plt+0x3e888>
  441f98:	cmp    bl,0x1
  441f9b:	je     4420a0 <strcmp@plt+0x3e8e8>
  441fa1:	jb     442010 <strcmp@plt+0x3e858>
  441fa3:	cmp    bl,0x2
  441fa6:	je     442100 <strcmp@plt+0x3e948>
  441fac:	cmp    bl,0x4
  441faf:	jne    4420e0 <strcmp@plt+0x3e928>
  441fb5:	test   bpl,bpl
  441fb8:	je     442180 <strcmp@plt+0x3e9c8>
  441fbe:	cmp    bpl,0x3
  441fc2:	jne    442210 <strcmp@plt+0x3ea58>
  441fc8:	mov    rax,0x468e3c
  441fcf:	cmp    DWORD PTR [rax],0x1
  441fd2:	jle    441fe7 <strcmp@plt+0x3e82f>
  441fd4:	lea    rsi,[rip+0x11efd]        # 453ed8 <strcmp@plt+0x50720>
  441fdb:	mov    edi,0x6
  441fe0:	xor    eax,eax
  441fe2:	call   4306a0 <strcmp@plt+0x2cee8>
  441fe7:	mov    rax,0x43fa40
  441fee:	jmp    441f75 <strcmp@plt+0x3e7bd>
  441ff0:	lea    rsi,[rip+0x11d49]        # 453d40 <strcmp@plt+0x50588>
  441ff7:	xor    eax,eax
  441ff9:	mov    edi,0x5
  441ffe:	call   4306a0 <strcmp@plt+0x2cee8>
  442003:	pop    rbx
  442004:	xor    eax,eax
  442006:	pop    rbp
  442007:	pop    r12
  442009:	ret    
  44200a:	nop    WORD PTR [rax+rax*1+0x0]
  442010:	test   bpl,bpl
  442013:	je     442160 <strcmp@plt+0x3e9a8>
  442019:	cmp    bpl,0x3
  44201d:	jne    442280 <strcmp@plt+0x3eac8>
  442023:	mov    rax,0x468e3c
  44202a:	cmp    DWORD PTR [rax],0x1
  44202d:	jg     44229a <strcmp@plt+0x3eae2>
  442033:	mov    rax,0x43f930
  44203a:	jmp    441f75 <strcmp@plt+0x3e7bd>
  44203f:	nop
  442040:	mov    rdi,QWORD PTR [r12]
  442044:	call   408340 <strcmp@plt+0x4b88>
  442049:	cmp    eax,0x3
  44204c:	jne    441f3f <strcmp@plt+0x3e787>
  442052:	jmp    441f98 <strcmp@plt+0x3e7e0>
  442057:	nop    WORD PTR [rax+rax*1+0x0]
  442060:	test   bl,bl
  442062:	jne    4422d8 <strcmp@plt+0x3eb20>
  442068:	test   bpl,bpl
  44206b:	je     442230 <strcmp@plt+0x3ea78>
  442071:	cmp    bpl,0x3
  442075:	jne    442140 <strcmp@plt+0x3e988>
  44207b:	mov    rax,0x468e3c
  442082:	cmp    DWORD PTR [rax],0x1
  442085:	jle    442033 <strcmp@plt+0x3e87b>
  442087:	lea    rsi,[rip+0x11f6a]        # 453ff8 <strcmp@plt+0x50840>
  44208e:	mov    edi,0x6
  442093:	xor    eax,eax
  442095:	call   4306a0 <strcmp@plt+0x2cee8>
  44209a:	jmp    442033 <strcmp@plt+0x3e87b>
  44209c:	nop    DWORD PTR [rax+0x0]
  4420a0:	test   bpl,bpl
  4420a3:	je     4421b0 <strcmp@plt+0x3e9f8>
  4420a9:	cmp    bpl,0x3
  4420ad:	jne    442260 <strcmp@plt+0x3eaa8>
  4420b3:	mov    rax,0x468e3c
  4420ba:	cmp    DWORD PTR [rax],0x1
  4420bd:	jle    4420d2 <strcmp@plt+0x3e91a>
  4420bf:	lea    rsi,[rip+0x11d82]        # 453e48 <strcmp@plt+0x50690>
  4420c6:	mov    edi,0x6
  4420cb:	xor    eax,eax
  4420cd:	call   4306a0 <strcmp@plt+0x2cee8>
  4420d2:	mov    rax,0x43f820
  4420d9:	jmp    441f75 <strcmp@plt+0x3e7bd>
  4420de:	xchg   ax,ax
  4420e0:	lea    rsi,[rip+0x11b79]        # 453c60 <strcmp@plt+0x504a8>
  4420e7:	xor    eax,eax
  4420e9:	mov    edi,0x3
  4420ee:	call   4306a0 <strcmp@plt+0x2cee8>
  4420f3:	xor    eax,eax
  4420f5:	jmp    441f75 <strcmp@plt+0x3e7bd>
  4420fa:	nop    WORD PTR [rax+rax*1+0x0]
  442100:	test   bpl,bpl
  442103:	je     4421e0 <strcmp@plt+0x3ea28>
  442109:	cmp    bpl,0x3
  44210d:	jne    442210 <strcmp@plt+0x3ea58>
  442113:	mov    rax,0x468e3c
  44211a:	cmp    DWORD PTR [rax],0x1
  44211d:	jle    442132 <strcmp@plt+0x3e97a>
  44211f:	lea    rsi,[rip+0x11e42]        # 453f68 <strcmp@plt+0x507b0>
  442126:	mov    edi,0x6
  44212b:	xor    eax,eax
  44212d:	call   4306a0 <strcmp@plt+0x2cee8>
  442132:	mov    rax,0x43f740
  442139:	jmp    441f75 <strcmp@plt+0x3e7bd>
  44213e:	xchg   ax,ax
  442140:	lea    rsi,[rip+0x11b51]        # 453c98 <strcmp@plt+0x504e0>
  442147:	xor    eax,eax
  442149:	mov    edi,0x3
  44214e:	call   4306a0 <strcmp@plt+0x2cee8>
  442153:	xor    eax,eax
  442155:	jmp    441f75 <strcmp@plt+0x3e7bd>
  44215a:	nop    WORD PTR [rax+rax*1+0x0]
  442160:	mov    rax,0x468e3c
  442167:	cmp    DWORD PTR [rax],0x1
  44216a:	jg     4422b9 <strcmp@plt+0x3eb01>
  442170:	mov    rax,0x440260
  442177:	jmp    441f75 <strcmp@plt+0x3e7bd>
  44217c:	nop    DWORD PTR [rax+0x0]
  442180:	mov    rax,0x468e3c
  442187:	cmp    DWORD PTR [rax],0x1
  44218a:	jle    44219f <strcmp@plt+0x3e9e7>
  44218c:	lea    rsi,[rip+0x11cfd]        # 453e90 <strcmp@plt+0x506d8>
  442193:	mov    edi,0x6
  442198:	xor    eax,eax
  44219a:	call   4306a0 <strcmp@plt+0x2cee8>
  44219f:	mov    rax,0x440fe0
  4421a6:	jmp    441f75 <strcmp@plt+0x3e7bd>
  4421ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4421b0:	mov    rax,0x468e3c
  4421b7:	cmp    DWORD PTR [rax],0x1
  4421ba:	jle    4421cf <strcmp@plt+0x3ea17>
  4421bc:	lea    rsi,[rip+0x11c3d]        # 453e00 <strcmp@plt+0x50648>
  4421c3:	mov    edi,0x6
  4421c8:	xor    eax,eax
  4421ca:	call   4306a0 <strcmp@plt+0x2cee8>
  4421cf:	mov    rax,0x441bf0
  4421d6:	jmp    441f75 <strcmp@plt+0x3e7bd>
  4421db:	nop    DWORD PTR [rax+rax*1+0x0]
  4421e0:	mov    rax,0x468e3c
  4421e7:	cmp    DWORD PTR [rax],0x1
  4421ea:	jle    4421ff <strcmp@plt+0x3ea47>
  4421ec:	lea    rsi,[rip+0x11d2d]        # 453f20 <strcmp@plt+0x50768>
  4421f3:	mov    edi,0x6
  4421f8:	xor    eax,eax
  4421fa:	call   4306a0 <strcmp@plt+0x2cee8>
  4421ff:	mov    rax,0x43fe40
  442206:	jmp    441f75 <strcmp@plt+0x3e7bd>
  44220b:	nop    DWORD PTR [rax+rax*1+0x0]
  442210:	lea    rsi,[rip+0x119f9]        # 453c10 <strcmp@plt+0x50458>
  442217:	xor    eax,eax
  442219:	mov    edi,0x3
  44221e:	call   4306a0 <strcmp@plt+0x2cee8>
  442223:	xor    eax,eax
  442225:	jmp    441f75 <strcmp@plt+0x3e7bd>
  44222a:	nop    WORD PTR [rax+rax*1+0x0]
  442230:	mov    rax,0x468e3c
  442237:	cmp    DWORD PTR [rax],0x1
  44223a:	jle    442170 <strcmp@plt+0x3e9b8>
  442240:	lea    rsi,[rip+0x11d69]        # 453fb0 <strcmp@plt+0x507f8>
  442247:	mov    edi,0x6
  44224c:	xor    eax,eax
  44224e:	call   4306a0 <strcmp@plt+0x2cee8>
  442253:	jmp    442170 <strcmp@plt+0x3e9b8>
  442258:	nop    DWORD PTR [rax+rax*1+0x0]
  442260:	lea    rsi,[rip+0x11961]        # 453bc8 <strcmp@plt+0x50410>
  442267:	xor    eax,eax
  442269:	mov    edi,0x3
  44226e:	call   4306a0 <strcmp@plt+0x2cee8>
  442273:	xor    eax,eax
  442275:	jmp    441f75 <strcmp@plt+0x3e7bd>
  44227a:	nop    WORD PTR [rax+rax*1+0x0]
  442280:	lea    rsi,[rip+0x118f9]        # 453b80 <strcmp@plt+0x503c8>
  442287:	xor    eax,eax
  442289:	mov    edi,0x3
  44228e:	call   4306a0 <strcmp@plt+0x2cee8>
  442293:	xor    eax,eax
  442295:	jmp    441f52 <strcmp@plt+0x3e79a>
  44229a:	lea    rsi,[rip+0x11b17]        # 453db8 <strcmp@plt+0x50600>
  4422a1:	xor    eax,eax
  4422a3:	mov    edi,0x6
  4422a8:	call   4306a0 <strcmp@plt+0x2cee8>
  4422ad:	mov    rax,0x43f930
  4422b4:	jmp    441f75 <strcmp@plt+0x3e7bd>
  4422b9:	lea    rsi,[rip+0x11ab0]        # 453d70 <strcmp@plt+0x505b8>
  4422c0:	xor    eax,eax
  4422c2:	mov    edi,0x6
  4422c7:	call   4306a0 <strcmp@plt+0x2cee8>
  4422cc:	mov    rax,0x440260
  4422d3:	jmp    441f75 <strcmp@plt+0x3e7bd>
  4422d8:	lea    rsi,[rip+0x11a01]        # 453ce0 <strcmp@plt+0x50528>
  4422df:	xor    eax,eax
  4422e1:	mov    edi,0x3
  4422e6:	call   4306a0 <strcmp@plt+0x2cee8>
  4422eb:	xor    eax,eax
  4422ed:	jmp    441f75 <strcmp@plt+0x3e7bd>
  4422f2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4422fd:	nop    DWORD PTR [rax]
  442300:	push   rbp
  442301:	push   rbx
  442302:	mov    rbp,rdi
  442305:	mov    edi,0x1000
  44230a:	sub    rsp,0x18
  44230e:	mov    rax,QWORD PTR fs:0x28
  442317:	mov    QWORD PTR [rsp+0x8],rax
  44231c:	xor    eax,eax
  44231e:	call   434790 <strcmp@plt+0x30fd8>
  442323:	mov    edx,0x1
  442328:	mov    rsi,rax
  44232b:	mov    rdi,rbp
  44232e:	mov    rbx,rax
  442331:	call   43f4a0 <strcmp@plt+0x3bce8>
  442336:	cmp    eax,0xfffffffe
  442339:	je     44236b <strcmp@plt+0x3ebb3>
  44233b:	cmp    eax,0xffffffff
  44233e:	je     442400 <strcmp@plt+0x3ec48>
  442344:	sub    eax,0x8
  442347:	cmp    eax,DWORD PTR [rbx+0x4]
  44234a:	ja     442390 <strcmp@plt+0x3ebd8>
  44234c:	jb     4423e0 <strcmp@plt+0x3ec28>
  442352:	mov    rdi,rbx
  442355:	call   441f10 <strcmp@plt+0x3e758>
  44235a:	test   rax,rax
  44235d:	je     4423b0 <strcmp@plt+0x3ebf8>
  44235f:	lea    rdx,[rbx+0x8]
  442363:	mov    rsi,rbx
  442366:	mov    rdi,rbp
  442369:	call   rax
  44236b:	mov    rdi,rbx
  44236e:	call   4037b0 <free@plt>
  442373:	mov    rax,QWORD PTR [rsp+0x8]
  442378:	xor    rax,QWORD PTR fs:0x28
  442381:	jne    442418 <strcmp@plt+0x3ec60>
  442387:	add    rsp,0x18
  44238b:	pop    rbx
  44238c:	pop    rbp
  44238d:	ret    
  44238e:	xchg   ax,ax
  442390:	lea    rsi,[rip+0x11ce9]        # 454080 <strcmp@plt+0x508c8>
  442397:	xor    eax,eax
  442399:	mov    edi,0x3
  44239e:	call   4306a0 <strcmp@plt+0x2cee8>
  4423a3:	mov    rdi,rbx
  4423a6:	call   441f10 <strcmp@plt+0x3e758>
  4423ab:	test   rax,rax
  4423ae:	jne    44235f <strcmp@plt+0x3eba7>
  4423b0:	movzx  ecx,BYTE PTR [rbx+0x2]
  4423b4:	movzx  edx,BYTE PTR [rbx+0x1]
  4423b8:	mov    rdi,rsp
  4423bb:	movzx  esi,BYTE PTR [rbx]
  4423be:	mov    r8d,0x1
  4423c4:	call   43f430 <strcmp@plt+0x3bc78>
  4423c9:	mov    rsi,QWORD PTR [rsp]
  4423cd:	xor    ecx,ecx
  4423cf:	mov    edx,eax
  4423d1:	mov    rdi,rbp
  4423d4:	call   43f5b0 <strcmp@plt+0x3bdf8>
  4423d9:	jmp    44236b <strcmp@plt+0x3ebb3>
  4423db:	nop    DWORD PTR [rax+rax*1+0x0]
  4423e0:	lea    rsi,[rip+0x11cc9]        # 4540b0 <strcmp@plt+0x508f8>
  4423e7:	mov    edi,0x2
  4423ec:	xor    eax,eax
  4423ee:	call   4306a0 <strcmp@plt+0x2cee8>
  4423f3:	jmp    44236b <strcmp@plt+0x3ebb3>
  4423f8:	nop    DWORD PTR [rax+rax*1+0x0]
  442400:	lea    rsi,[rip+0x11c39]        # 454040 <strcmp@plt+0x50888>
  442407:	mov    edi,0x2
  44240c:	xor    eax,eax
  44240e:	call   4306a0 <strcmp@plt+0x2cee8>
  442413:	jmp    44236b <strcmp@plt+0x3ebb3>
  442418:	call   403460 <__stack_chk_fail@plt>
  44241d:	nop    DWORD PTR [rax]
  442420:	push   r15
  442422:	push   r14
  442424:	push   r13
  442426:	push   r12
  442428:	push   rbp
  442429:	push   rbx
  44242a:	sub    rsp,0x48
  44242e:	mov    QWORD PTR [rsp+0x18],rdi
  442433:	mov    rdi,0x424750
  44243a:	call   4397c0 <strcmp@plt+0x36008>
  44243f:	mov    DWORD PTR [rsp+0x8],0x0
  442447:	mov    QWORD PTR [rsp+0x30],rax
  44244c:	jmp    442466 <strcmp@plt+0x3ecae>
  44244e:	xchg   ax,ax
  442450:	lea    rsi,[rip+0x12309]        # 454760 <strcmp@plt+0x50fa8>
  442457:	mov    edi,0x3
  44245c:	call   4306a0 <strcmp@plt+0x2cee8>
  442461:	add    DWORD PTR [rsp+0x8],0x1
  442466:	mov    rdi,QWORD PTR [rsp+0x18]
  44246b:	lea    rsi,[rip+0x11ce6]        # 454158 <strcmp@plt+0x509a0>
  442472:	call   403750 <cfg_size@plt>
  442477:	cmp    DWORD PTR [rsp+0x8],eax
  44247b:	jae    4426c6 <strcmp@plt+0x3ef0e>
  442481:	mov    edx,DWORD PTR [rsp+0x8]
  442485:	mov    rdi,QWORD PTR [rsp+0x18]
  44248a:	lea    rsi,[rip+0x11cc7]        # 454158 <strcmp@plt+0x509a0>
  442491:	call   4031e0 <cfg_getnsec@plt>
  442496:	lea    rsi,[rip+0x11de7]        # 454284 <strcmp@plt+0x50acc>
  44249d:	mov    rdi,rax
  4424a0:	mov    r13,rax
  4424a3:	call   4032d0 <cfg_getstr@plt>
  4424a8:	test   rax,rax
  4424ab:	mov    QWORD PTR [rsp+0x20],rax
  4424b0:	je     4426b0 <strcmp@plt+0x3eef8>
  4424b6:	lea    rsi,[rip+0x11dd0]        # 45428d <strcmp@plt+0x50ad5>
  4424bd:	mov    rdi,r13
  4424c0:	call   403750 <cfg_size@plt>
  4424c5:	test   eax,eax
  4424c7:	je     442450 <strcmp@plt+0x3ec98>
  4424c9:	xor    eax,eax
  4424cb:	xor    r12d,r12d
  4424ce:	lea    r14,[rip+0x11db8]        # 45428d <strcmp@plt+0x50ad5>
  4424d5:	call   429690 <strcmp@plt+0x25ed8>
  4424da:	mov    QWORD PTR [rsp+0x10],rax
  4424df:	jmp    442519 <strcmp@plt+0x3ed61>
  4424e1:	nop    DWORD PTR [rax+0x0]
  4424e8:	mov    rdi,rbx
  4424eb:	call   426650 <strcmp@plt+0x22e98>
  4424f0:	lea    rsi,[rip+0x11e26]        # 45431d <strcmp@plt+0x50b65>
  4424f7:	mov    rdi,rbp
  4424fa:	call   4032d0 <cfg_getstr@plt>
  4424ff:	lea    rsi,[rip+0x12302]        # 454808 <strcmp@plt+0x51050>
  442506:	mov    rdx,rax
  442509:	mov    edi,0x3
  44250e:	xor    eax,eax
  442510:	call   4306a0 <strcmp@plt+0x2cee8>
  442515:	add    r12d,0x1
  442519:	mov    rsi,r14
  44251c:	mov    rdi,r13
  44251f:	call   403750 <cfg_size@plt>
  442524:	cmp    r12d,eax
  442527:	jae    442610 <strcmp@plt+0x3ee58>
  44252d:	mov    edx,r12d
  442530:	mov    rsi,r14
  442533:	mov    rdi,r13
  442536:	call   4031e0 <cfg_getnsec@plt>
  44253b:	lea    rsi,[rip+0x11ddb]        # 45431d <strcmp@plt+0x50b65>
  442542:	mov    rdi,rax
  442545:	mov    rbp,rax
  442548:	call   4032d0 <cfg_getstr@plt>
  44254d:	test   rax,rax
  442550:	je     442688 <strcmp@plt+0x3eed0>
  442556:	mov    edi,0x10
  44255b:	call   434790 <strcmp@plt+0x30fd8>
  442560:	mov    rbx,rax
  442563:	xor    eax,eax
  442565:	call   424740 <strcmp@plt+0x20f88>
  44256a:	lea    rsi,[rip+0x11dac]        # 45431d <strcmp@plt+0x50b65>
  442571:	mov    r15,rax
  442574:	mov    rdi,rbp
  442577:	mov    QWORD PTR [rbx+0x8],rax
  44257b:	call   4032d0 <cfg_getstr@plt>
  442580:	mov    rsi,r15
  442583:	mov    rdi,rax
  442586:	call   4256a0 <strcmp@plt+0x21ee8>
  44258b:	cmp    eax,0x1
  44258e:	jne    4424e8 <strcmp@plt+0x3ed30>
  442594:	lea    rsi,[rip+0x11be0]        # 45417b <strcmp@plt+0x509c3>
  44259b:	mov    rdi,rbp
  44259e:	call   403360 <cfg_getbool@plt>
  4425a3:	test   eax,eax
  4425a5:	movzx  eax,BYTE PTR [rbx]
  4425a8:	lea    rsi,[rip+0x11bd8]        # 454187 <strcmp@plt+0x509cf>
  4425af:	setne  dl
  4425b2:	mov    rdi,rbp
  4425b5:	and    eax,0xfffffffe
  4425b8:	or     eax,edx
  4425ba:	mov    BYTE PTR [rbx],al
  4425bc:	call   403360 <cfg_getbool@plt>
  4425c1:	test   eax,eax
  4425c3:	lea    rsi,[rip+0x11bc3]        # 45418d <strcmp@plt+0x509d5>
  4425ca:	mov    rdi,rbp
  4425cd:	setne  al
  4425d0:	lea    edx,[rax+rax*1]
  4425d3:	movzx  eax,BYTE PTR [rbx]
  4425d6:	and    eax,0xfffffffd
  4425d9:	or     eax,edx
  4425db:	mov    BYTE PTR [rbx],al
  4425dd:	call   403360 <cfg_getbool@plt>
  4425e2:	test   eax,eax
  4425e4:	mov    rdi,rbx
  4425e7:	setne  al
  4425ea:	lea    edx,[rax*4+0x0]
  4425f1:	movzx  eax,BYTE PTR [rbx]
  4425f4:	and    eax,0xfffffffb
  4425f7:	or     eax,edx
  4425f9:	mov    BYTE PTR [rbx],al
  4425fb:	mov    rax,QWORD PTR [rsp+0x10]
  442600:	mov    rsi,QWORD PTR [rax]
  442603:	call   42d6d0 <strcmp@plt+0x29f18>
  442608:	jmp    442515 <strcmp@plt+0x3ed5d>
  44260d:	nop    DWORD PTR [rax]
  442610:	mov    edi,0x3
  442615:	call   424670 <strcmp@plt+0x20eb8>
  44261a:	mov    esi,0xa
  44261f:	mov    rdi,rax
  442622:	mov    rbx,rax
  442625:	call   424f40 <strcmp@plt+0x21788>
  44262a:	mov    rsi,QWORD PTR [rsp+0x10]
  44262f:	mov    rdi,rbx
  442632:	call   424f10 <strcmp@plt+0x21758>
  442637:	mov    rax,0x468e3c
  44263e:	mov    eax,DWORD PTR [rax]
  442640:	test   eax,eax
  442642:	jle    442662 <strcmp@plt+0x3eeaa>
  442644:	mov    rdi,rbx
  442647:	call   424890 <strcmp@plt+0x210d8>
  44264c:	lea    rsi,[rip+0x1220d]        # 454860 <strcmp@plt+0x510a8>
  442653:	mov    rdx,rax
  442656:	mov    edi,0x5
  44265b:	xor    eax,eax
  44265d:	call   4306a0 <strcmp@plt+0x2cee8>
  442662:	mov    rdi,QWORD PTR [rsp+0x20]
  442667:	call   403730 <strdup@plt>
  44266c:	mov    rdi,QWORD PTR [rsp+0x30]
  442671:	mov    rdx,rbx
  442674:	mov    rsi,rax
  442677:	call   439800 <strcmp@plt+0x36048>
  44267c:	jmp    442461 <strcmp@plt+0x3eca9>
  442681:	nop    DWORD PTR [rax+0x0]
  442688:	lea    rsi,[rip+0x12129]        # 4547b8 <strcmp@plt+0x51000>
  44268f:	mov    edi,0x3
  442694:	call   4306a0 <strcmp@plt+0x2cee8>
  442699:	mov    rdi,QWORD PTR [rsp+0x10]
  44269e:	call   426d30 <strcmp@plt+0x23578>
  4426a3:	jmp    442461 <strcmp@plt+0x3eca9>
  4426a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4426b0:	lea    rsi,[rip+0x12059]        # 454710 <strcmp@plt+0x50f58>
  4426b7:	mov    edi,0x3
  4426bc:	call   4306a0 <strcmp@plt+0x2cee8>
  4426c1:	jmp    442461 <strcmp@plt+0x3eca9>
  4426c6:	lea    r15,[rip+0x11be3]        # 4542b0 <strcmp@plt+0x50af8>
  4426cd:	mov    DWORD PTR [rsp+0x2c],0x0
  4426d5:	nop    DWORD PTR [rax]
  4426d8:	mov    rdi,QWORD PTR [rsp+0x18]
  4426dd:	lea    rsi,[rip+0x11bb2]        # 454296 <strcmp@plt+0x50ade>
  4426e4:	call   403750 <cfg_size@plt>
  4426e9:	cmp    DWORD PTR [rsp+0x2c],eax
  4426ed:	jae    442870 <strcmp@plt+0x3f0b8>
  4426f3:	mov    edx,DWORD PTR [rsp+0x2c]
  4426f7:	mov    rdi,QWORD PTR [rsp+0x18]
  4426fc:	lea    rsi,[rip+0x11b93]        # 454296 <strcmp@plt+0x50ade>
  442703:	xor    ebp,ebp
  442705:	call   4031e0 <cfg_getnsec@plt>
  44270a:	lea    rsi,[rip+0x11b96]        # 4542a7 <strcmp@plt+0x50aef>
  442711:	mov    rdi,rax
  442714:	mov    r13,rax
  442717:	call   4032d0 <cfg_getstr@plt>
  44271c:	mov    edi,0x3
  442721:	mov    QWORD PTR [rsp+0x38],rax
  442726:	call   424670 <strcmp@plt+0x20eb8>
  44272b:	mov    esi,0xd
  442730:	mov    rdi,rax
  442733:	mov    QWORD PTR [rsp+0x20],rax
  442738:	call   424f40 <strcmp@plt+0x21788>
  44273d:	xor    eax,eax
  44273f:	call   429a20 <strcmp@plt+0x26268>
  442744:	mov    QWORD PTR [rsp+0x8],rax
  442749:	mov    rax,0x468e3c
  442750:	mov    QWORD PTR [rsp+0x10],rax
  442755:	jmp    4427fd <strcmp@plt+0x3f045>
  44275a:	nop    WORD PTR [rax+rax*1+0x0]
  442760:	mov    edx,ebp
  442762:	mov    rsi,r15
  442765:	mov    rdi,r13
  442768:	call   4031e0 <cfg_getnsec@plt>
  44276d:	mov    r12,rax
  442770:	xor    eax,eax
  442772:	call   429b00 <strcmp@plt+0x26348>
  442777:	mov    r14,QWORD PTR [rax]
  44277a:	lea    rsi,[rip+0x11b9c]        # 45431d <strcmp@plt+0x50b65>
  442781:	mov    rdi,r12
  442784:	mov    rbx,rax
  442787:	call   4032d0 <cfg_getstr@plt>
  44278c:	mov    rsi,r14
  44278f:	mov    rdi,rax
  442792:	call   4256a0 <strcmp@plt+0x21ee8>
  442797:	cmp    eax,0x1
  44279a:	je     4427d8 <strcmp@plt+0x3f020>
  44279c:	mov    rdi,rbx
  44279f:	call   426670 <strcmp@plt+0x22eb8>
  4427a4:	mov    rax,QWORD PTR [rsp+0x10]
  4427a9:	mov    esi,DWORD PTR [rax]
  4427ab:	test   esi,esi
  4427ad:	jle    4427d8 <strcmp@plt+0x3f020>
  4427af:	lea    rsi,[rip+0x11b67]        # 45431d <strcmp@plt+0x50b65>
  4427b6:	mov    rdi,r12
  4427b9:	call   4032d0 <cfg_getstr@plt>
  4427be:	lea    rsi,[rip+0x120d3]        # 454898 <strcmp@plt+0x510e0>
  4427c5:	mov    rdx,rax
  4427c8:	mov    edi,0x5
  4427cd:	xor    eax,eax
  4427cf:	call   4306a0 <strcmp@plt+0x2cee8>
  4427d4:	nop    DWORD PTR [rax+0x0]
  4427d8:	lea    rsi,[rip+0x11ada]        # 4542b9 <strcmp@plt+0x50b01>
  4427df:	mov    rdi,r12
  4427e2:	add    ebp,0x1
  4427e5:	call   4031a0 <cfg_getint@plt>
  4427ea:	mov    BYTE PTR [rbx+0x8],al
  4427ed:	mov    rax,QWORD PTR [rsp+0x8]
  4427f2:	mov    rdi,rbx
  4427f5:	mov    rsi,QWORD PTR [rax]
  4427f8:	call   42d6d0 <strcmp@plt+0x29f18>
  4427fd:	mov    rsi,r15
  442800:	mov    rdi,r13
  442803:	call   403750 <cfg_size@plt>
  442808:	cmp    ebp,eax
  44280a:	jb     442760 <strcmp@plt+0x3efa8>
  442810:	mov    rsi,QWORD PTR [rsp+0x8]
  442815:	mov    rdi,QWORD PTR [rsp+0x20]
  44281a:	call   424f10 <strcmp@plt+0x21758>
  44281f:	mov    rax,QWORD PTR [rsp+0x10]
  442824:	mov    ecx,DWORD PTR [rax]
  442826:	test   ecx,ecx
  442828:	jle    44284a <strcmp@plt+0x3f092>
  44282a:	mov    rdi,QWORD PTR [rsp+0x20]
  44282f:	call   424890 <strcmp@plt+0x210d8>
  442834:	lea    rsi,[rip+0x1208d]        # 4548c8 <strcmp@plt+0x51110>
  44283b:	mov    rdx,rax
  44283e:	mov    edi,0x5
  442843:	xor    eax,eax
  442845:	call   4306a0 <strcmp@plt+0x2cee8>
  44284a:	mov    rdi,QWORD PTR [rsp+0x38]
  44284f:	call   403730 <strdup@plt>
  442854:	mov    rdx,QWORD PTR [rsp+0x20]
  442859:	mov    rdi,QWORD PTR [rsp+0x30]
  44285e:	mov    rsi,rax
  442861:	call   439800 <strcmp@plt+0x36048>
  442866:	add    DWORD PTR [rsp+0x2c],0x1
  44286b:	jmp    4426d8 <strcmp@plt+0x3ef20>
  442870:	xor    r12d,r12d
  442873:	jmp    442994 <strcmp@plt+0x3f1dc>
  442878:	nop    DWORD PTR [rax+rax*1+0x0]
  442880:	mov    rdi,QWORD PTR [rsp+0x18]
  442885:	lea    rsi,[rip+0x11a33]        # 4542bf <strcmp@plt+0x50b07>
  44288c:	mov    edx,r12d
  44288f:	call   4031e0 <cfg_getnsec@plt>
  442894:	lea    rsi,[rip+0x11a33]        # 4542ce <strcmp@plt+0x50b16>
  44289b:	mov    rdi,rax
  44289e:	mov    rbx,rax
  4428a1:	call   4032d0 <cfg_getstr@plt>
  4428a6:	mov    edi,0x3
  4428ab:	mov    r14,rax
  4428ae:	call   424670 <strcmp@plt+0x20eb8>
  4428b3:	mov    esi,0x9
  4428b8:	mov    rdi,rax
  4428bb:	mov    rbp,rax
  4428be:	call   424f40 <strcmp@plt+0x21788>
  4428c3:	xor    eax,eax
  4428c5:	call   428930 <strcmp@plt+0x25178>
  4428ca:	mov    r15,QWORD PTR [rax+0x8]
  4428ce:	lea    rsi,[rip+0x11a06]        # 4542db <strcmp@plt+0x50b23>
  4428d5:	mov    rdi,rbx
  4428d8:	mov    r13,rax
  4428db:	call   4032d0 <cfg_getstr@plt>
  4428e0:	mov    rsi,r15
  4428e3:	mov    rdi,rax
  4428e6:	call   4256a0 <strcmp@plt+0x21ee8>
  4428eb:	lea    rsi,[rip+0x119f0]        # 4542e2 <strcmp@plt+0x50b2a>
  4428f2:	mov    rdi,rbx
  4428f5:	call   4031a0 <cfg_getint@plt>
  4428fa:	mov    r15,QWORD PTR [r13+0x10]
  4428fe:	lea    rsi,[rip+0x119f0]        # 4542f5 <strcmp@plt+0x50b3d>
  442905:	mov    rdi,rbx
  442908:	mov    BYTE PTR [r13+0x0],al
  44290c:	call   4032d0 <cfg_getstr@plt>
  442911:	mov    rsi,r15
  442914:	mov    rdi,rax
  442917:	call   4256a0 <strcmp@plt+0x21ee8>
  44291c:	lea    rsi,[rip+0x119d8]        # 4542fb <strcmp@plt+0x50b43>
  442923:	mov    rdi,rbx
  442926:	call   4031a0 <cfg_getint@plt>
  44292b:	lea    rsi,[rip+0xb936]        # 44e268 <strcmp@plt+0x4aab0>
  442932:	mov    rdi,rbx
  442935:	mov    BYTE PTR [r13+0x0],al
  442939:	call   4031a0 <cfg_getint@plt>
  44293e:	mov    rsi,r13
  442941:	mov    DWORD PTR [r13+0x4],eax
  442945:	mov    rdi,rbp
  442948:	call   424f10 <strcmp@plt+0x21758>
  44294d:	mov    rax,0x468e3c
  442954:	mov    edx,DWORD PTR [rax]
  442956:	test   edx,edx
  442958:	jle    442978 <strcmp@plt+0x3f1c0>
  44295a:	mov    rdi,rbp
  44295d:	call   424890 <strcmp@plt+0x210d8>
  442962:	lea    rsi,[rip+0x11f8f]        # 4548f8 <strcmp@plt+0x51140>
  442969:	mov    rdx,rax
  44296c:	mov    edi,0x5
  442971:	xor    eax,eax
  442973:	call   4306a0 <strcmp@plt+0x2cee8>
  442978:	mov    rdi,r14
  44297b:	add    r12d,0x1
  44297f:	call   403730 <strdup@plt>
  442984:	mov    rdi,QWORD PTR [rsp+0x30]
  442989:	mov    rdx,rbp
  44298c:	mov    rsi,rax
  44298f:	call   439800 <strcmp@plt+0x36048>
  442994:	mov    rdi,QWORD PTR [rsp+0x18]
  442999:	lea    rsi,[rip+0x1191f]        # 4542bf <strcmp@plt+0x50b07>
  4429a0:	call   403750 <cfg_size@plt>
  4429a5:	cmp    r12d,eax
  4429a8:	jb     442880 <strcmp@plt+0x3f0c8>
  4429ae:	test   r12d,r12d
  4429b1:	je     4429c6 <strcmp@plt+0x3f20e>
  4429b3:	lea    rsi,[rip+0x11e7e]        # 454838 <strcmp@plt+0x51080>
  4429ba:	mov    edi,0x4
  4429bf:	xor    eax,eax
  4429c1:	call   4306a0 <strcmp@plt+0x2cee8>
  4429c6:	mov    rax,QWORD PTR [rsp+0x30]
  4429cb:	add    rsp,0x48
  4429cf:	pop    rbx
  4429d0:	pop    rbp
  4429d1:	pop    r12
  4429d3:	pop    r13
  4429d5:	pop    r14
  4429d7:	pop    r15
  4429d9:	ret    
  4429da:	nop    WORD PTR [rax+rax*1+0x0]
  4429e0:	push   r15
  4429e2:	push   r14
  4429e4:	mov    r15,rsi
  4429e7:	push   r13
  4429e9:	push   r12
  4429eb:	lea    rsi,[rip+0x1191b]        # 45430d <strcmp@plt+0x50b55>
  4429f2:	push   rbp
  4429f3:	push   rbx
  4429f4:	mov    r14,rdi
  4429f7:	mov    ebx,ecx
  4429f9:	sub    rsp,0x18
  4429fd:	mov    DWORD PTR [rsp+0xc],edx
  442a01:	call   4032d0 <cfg_getstr@plt>
  442a06:	xor    edx,edx
  442a08:	test   rax,rax
  442a0b:	je     442bd9 <strcmp@plt+0x3f421>
  442a11:	lea    rsi,[rip+0x118f5]        # 45430d <strcmp@plt+0x50b55>
  442a18:	mov    rdi,r14
  442a1b:	call   4032d0 <cfg_getstr@plt>
  442a20:	mov    rdi,rax
  442a23:	call   403730 <strdup@plt>
  442a28:	lea    rsi,[rip+0xb839]        # 44e268 <strcmp@plt+0x4aab0>
  442a2f:	mov    QWORD PTR [r15],rax
  442a32:	mov    rdi,r14
  442a35:	call   4031a0 <cfg_getint@plt>
  442a3a:	test   bl,bl
  442a3c:	mov    DWORD PTR [r15+0xc],eax
  442a40:	je     442bf0 <strcmp@plt+0x3f438>
  442a46:	xor    ebp,ebp
  442a48:	jmp    442af4 <strcmp@plt+0x3f33c>
  442a4d:	nop    DWORD PTR [rax]
  442a50:	lea    rsi,[rip+0x118c1]        # 454318 <strcmp@plt+0x50b60>
  442a57:	mov    edx,ebp
  442a59:	mov    rdi,r14
  442a5c:	call   4031e0 <cfg_getnsec@plt>
  442a61:	lea    rsi,[rip+0x118b5]        # 45431d <strcmp@plt+0x50b65>
  442a68:	mov    rdi,rax
  442a6b:	mov    rbx,rax
  442a6e:	call   4032d0 <cfg_getstr@plt>
  442a73:	test   rax,rax
  442a76:	je     442c10 <strcmp@plt+0x3f458>
  442a7c:	lea    rsi,[rip+0x118a2]        # 454325 <strcmp@plt+0x50b6d>
  442a83:	mov    rdi,rbx
  442a86:	call   403360 <cfg_getbool@plt>
  442a8b:	lea    rsi,[rip+0x11753]        # 4541e5 <strcmp@plt+0x50a2d>
  442a92:	mov    rdi,rbx
  442a95:	mov    r12d,eax
  442a98:	call   4031a0 <cfg_getint@plt>
  442a9d:	lea    rsi,[rip+0x11726]        # 4541ca <strcmp@plt+0x50a12>
  442aa4:	mov    rdi,rbx
  442aa7:	mov    r13,rax
  442aaa:	call   4031a0 <cfg_getint@plt>
  442aaf:	lea    rsi,[rip+0x11867]        # 45431d <strcmp@plt+0x50b65>
  442ab6:	mov    rdi,rbx
  442ab9:	mov    QWORD PTR [rsp],rax
  442abd:	call   4032d0 <cfg_getstr@plt>
  442ac2:	movzx  esi,BYTE PTR [rsp]
  442ac6:	test   r12d,r12d
  442ac9:	movzx  edx,r13b
  442acd:	setne  r9b
  442ad1:	mov    ecx,0xff
  442ad6:	xor    r8d,r8d
  442ad9:	movzx  r9d,r9b
  442add:	mov    rdi,rax
  442ae0:	add    ebp,0x1
  442ae3:	call   404fd0 <strcmp@plt+0x1818>
  442ae8:	mov    rsi,QWORD PTR [r15+0x10]
  442aec:	mov    rdi,rax
  442aef:	call   42d6d0 <strcmp@plt+0x29f18>
  442af4:	lea    rsi,[rip+0x1181d]        # 454318 <strcmp@plt+0x50b60>
  442afb:	mov    rdi,r14
  442afe:	call   403750 <cfg_size@plt>
  442b03:	cmp    eax,ebp
  442b05:	ja     442a50 <strcmp@plt+0x3f298>
  442b0b:	xor    ebp,ebp
  442b0d:	cmp    BYTE PTR [rsp+0xc],0x0
  442b12:	jne    442bbd <strcmp@plt+0x3f405>
  442b18:	jmp    442bd4 <strcmp@plt+0x3f41c>
  442b1d:	nop    DWORD PTR [rax]
  442b20:	lea    rsi,[rip+0x11804]        # 45432b <strcmp@plt+0x50b73>
  442b27:	mov    edx,ebp
  442b29:	mov    rdi,r14
  442b2c:	call   4031e0 <cfg_getnsec@plt>
  442b31:	lea    rsi,[rip+0x117fe]        # 454336 <strcmp@plt+0x50b7e>
  442b38:	mov    rdi,rax
  442b3b:	mov    rbx,rax
  442b3e:	call   4031a0 <cfg_getint@plt>
  442b43:	lea    rsi,[rip+0x116a2]        # 4541ec <strcmp@plt+0x50a34>
  442b4a:	mov    rdi,rbx
  442b4d:	mov    r13,rax
  442b50:	call   4032d0 <cfg_getstr@plt>
  442b55:	test   rax,rax
  442b58:	je     442c30 <strcmp@plt+0x3f478>
  442b5e:	lea    rsi,[rip+0x11680]        # 4541e5 <strcmp@plt+0x50a2d>
  442b65:	mov    rdi,rbx
  442b68:	add    ebp,0x1
  442b6b:	call   4031a0 <cfg_getint@plt>
  442b70:	lea    rsi,[rip+0x11653]        # 4541ca <strcmp@plt+0x50a12>
  442b77:	mov    rdi,rbx
  442b7a:	mov    r12,rax
  442b7d:	call   4031a0 <cfg_getint@plt>
  442b82:	lea    rsi,[rip+0x11663]        # 4541ec <strcmp@plt+0x50a34>
  442b89:	mov    rdi,rbx
  442b8c:	mov    QWORD PTR [rsp],rax
  442b90:	call   4032d0 <cfg_getstr@plt>
  442b95:	movzx  edx,BYTE PTR [rsp]
  442b99:	movzx  ecx,r12b
  442b9d:	xor    r9d,r9d
  442ba0:	mov    r8d,0xff
  442ba6:	mov    esi,r13d
  442ba9:	mov    rdi,rax
  442bac:	call   405190 <strcmp@plt+0x19d8>
  442bb1:	mov    rsi,QWORD PTR [r15+0x18]
  442bb5:	mov    rdi,rax
  442bb8:	call   42d6d0 <strcmp@plt+0x29f18>
  442bbd:	lea    rsi,[rip+0x11767]        # 45432b <strcmp@plt+0x50b73>
  442bc4:	mov    rdi,r14
  442bc7:	call   403750 <cfg_size@plt>
  442bcc:	cmp    eax,ebp
  442bce:	ja     442b20 <strcmp@plt+0x3f368>
  442bd4:	mov    edx,0x1
  442bd9:	add    rsp,0x18
  442bdd:	mov    eax,edx
  442bdf:	pop    rbx
  442be0:	pop    rbp
  442be1:	pop    r12
  442be3:	pop    r13
  442be5:	pop    r14
  442be7:	pop    r15
  442be9:	ret    
  442bea:	nop    WORD PTR [rax+rax*1+0x0]
  442bf0:	lea    rsi,[rip+0x115b0]        # 4541a7 <strcmp@plt+0x509ef>
  442bf7:	mov    rdi,r14
  442bfa:	call   4031a0 <cfg_getint@plt>
  442bff:	mov    DWORD PTR [r15+0x8],eax
  442c03:	jmp    442a46 <strcmp@plt+0x3f28e>
  442c08:	nop    DWORD PTR [rax+rax*1+0x0]
  442c10:	mov    rdx,QWORD PTR [r15]
  442c13:	lea    rsi,[rip+0x11d0e]        # 454928 <strcmp@plt+0x51170>
  442c1a:	mov    edi,0x3
  442c1f:	call   4306a0 <strcmp@plt+0x2cee8>
  442c24:	xor    edx,edx
  442c26:	jmp    442bd9 <strcmp@plt+0x3f421>
  442c28:	nop    DWORD PTR [rax+rax*1+0x0]
  442c30:	mov    rdx,QWORD PTR [r15]
  442c33:	lea    rsi,[rip+0x11d2e]        # 454968 <strcmp@plt+0x511b0>
  442c3a:	mov    edi,0x3
  442c3f:	call   4306a0 <strcmp@plt+0x2cee8>
  442c44:	xor    edx,edx
  442c46:	jmp    442bd9 <strcmp@plt+0x3f421>
  442c48:	nop    DWORD PTR [rax+rax*1+0x0]
  442c50:	push   r15
  442c52:	push   r14
  442c54:	mov    r15,rdi
  442c57:	push   r13
  442c59:	push   r12
  442c5b:	xor    eax,eax
  442c5d:	push   rbp
  442c5e:	push   rbx
  442c5f:	mov    ebx,ecx
  442c61:	mov    ebp,r8d
  442c64:	movzx  ebx,bl
  442c67:	mov    r13,rsi
  442c6a:	sub    rsp,0x8
  442c6e:	mov    r14,rdx
  442c71:	call   404eb0 <strcmp@plt+0x16f8>
  442c76:	movzx  ecx,bpl
  442c7a:	mov    edx,ebx
  442c7c:	mov    rsi,rax
  442c7f:	mov    rdi,r15
  442c82:	mov    r12,rax
  442c85:	xor    ebp,ebp
  442c87:	call   4429e0 <strcmp@plt+0x3f228>
  442c8c:	cmp    eax,0x1
  442c8f:	jne    442cac <strcmp@plt+0x3f4f4>
  442c91:	mov    rdi,r13
  442c94:	mov    ecx,ebx
  442c96:	mov    rdx,r12
  442c99:	mov    rsi,r14
  442c9c:	call   4067a0 <strcmp@plt+0x2fe8>
  442ca1:	mov    rdi,r12
  442ca4:	mov    rbp,rax
  442ca7:	call   404f10 <strcmp@plt+0x1758>
  442cac:	add    rsp,0x8
  442cb0:	mov    rax,rbp
  442cb3:	pop    rbx
  442cb4:	pop    rbp
  442cb5:	pop    r12
  442cb7:	pop    r13
  442cb9:	pop    r14
  442cbb:	pop    r15
  442cbd:	ret    
  442cbe:	xchg   ax,ax
  442cc0:	push   r15
  442cc2:	push   r14
  442cc4:	mov    r15,rsi
  442cc7:	push   r13
  442cc9:	push   r12
  442ccb:	lea    rsi,[rip+0x11547]        # 454219 <strcmp@plt+0x50a61>
  442cd2:	push   rbp
  442cd3:	push   rbx
  442cd4:	sub    rsp,0x18
  442cd8:	mov    QWORD PTR [rsp+0x8],rdi
  442cdd:	call   403750 <cfg_size@plt>
  442ce2:	test   eax,eax
  442ce4:	mov    DWORD PTR [rsp+0x4],eax
  442ce8:	jle    442dea <strcmp@plt+0x3f632>
  442cee:	xor    ebp,ebp
  442cf0:	jmp    442d37 <strcmp@plt+0x3f57f>
  442cf2:	nop    WORD PTR [rax+rax*1+0x0]
  442cf8:	mov    rax,0x468e3c
  442cff:	mov    eax,DWORD PTR [rax]
  442d01:	test   eax,eax
  442d03:	jle    442d2a <strcmp@plt+0x3f572>
  442d05:	lea    rsi,[rip+0x11611]        # 45431d <strcmp@plt+0x50b65>
  442d0c:	mov    rdi,rbx
  442d0f:	call   4032d0 <cfg_getstr@plt>
  442d14:	lea    rsi,[rip+0x1163f]        # 45435a <strcmp@plt+0x50ba2>
  442d1b:	mov    rdx,rax
  442d1e:	mov    edi,0x5
  442d23:	xor    eax,eax
  442d25:	call   4306a0 <strcmp@plt+0x2cee8>
  442d2a:	add    ebp,0x1
  442d2d:	cmp    DWORD PTR [rsp+0x4],ebp
  442d31:	je     442dea <strcmp@plt+0x3f632>
  442d37:	mov    rdi,QWORD PTR [rsp+0x8]
  442d3c:	lea    rsi,[rip+0x114d6]        # 454219 <strcmp@plt+0x50a61>
  442d43:	mov    edx,ebp
  442d45:	call   4031e0 <cfg_getnsec@plt>
  442d4a:	lea    rsi,[rip+0x1150e]        # 45425f <strcmp@plt+0x50aa7>
  442d51:	mov    rdi,rax
  442d54:	mov    rbx,rax
  442d57:	call   403360 <cfg_getbool@plt>
  442d5c:	lea    rsi,[rip+0x114d4]        # 454237 <strcmp@plt+0x50a7f>
  442d63:	mov    rdi,rbx
  442d66:	mov    r13d,eax
  442d69:	call   4032d0 <cfg_getstr@plt>
  442d6e:	lea    rsi,[rip+0x114b4]        # 454229 <strcmp@plt+0x50a71>
  442d75:	mov    rdi,rbx
  442d78:	mov    r14,rax
  442d7b:	call   4031a0 <cfg_getint@plt>
  442d80:	lea    rsi,[rip+0x11596]        # 45431d <strcmp@plt+0x50b65>
  442d87:	mov    rdi,rbx
  442d8a:	mov    r12,rax
  442d8d:	call   4032d0 <cfg_getstr@plt>
  442d92:	test   r13d,r13d
  442d95:	mov    rdi,QWORD PTR [r15+0x78]
  442d99:	mov    rcx,r14
  442d9c:	setne  r8b
  442da0:	mov    edx,r12d
  442da3:	mov    rsi,rax
  442da6:	movzx  r8d,r8b
  442daa:	call   4064c0 <strcmp@plt+0x2d08>
  442daf:	cmp    eax,0x1
  442db2:	je     442cf8 <strcmp@plt+0x3f540>
  442db8:	lea    rsi,[rip+0x1155e]        # 45431d <strcmp@plt+0x50b65>
  442dbf:	mov    rdi,rbx
  442dc2:	add    ebp,0x1
  442dc5:	call   4032d0 <cfg_getstr@plt>
  442dca:	lea    rsi,[rip+0x11570]        # 454341 <strcmp@plt+0x50b89>
  442dd1:	mov    rdx,rax
  442dd4:	mov    edi,0x3
  442dd9:	xor    eax,eax
  442ddb:	call   4306a0 <strcmp@plt+0x2cee8>
  442de0:	cmp    DWORD PTR [rsp+0x4],ebp
  442de4:	jne    442d37 <strcmp@plt+0x3f57f>
  442dea:	add    rsp,0x18
  442dee:	mov    eax,0x1
  442df3:	pop    rbx
  442df4:	pop    rbp
  442df5:	pop    r12
  442df7:	pop    r13
  442df9:	pop    r14
  442dfb:	pop    r15
  442dfd:	ret    
  442dfe:	xchg   ax,ax
  442e00:	push   r15
  442e02:	push   r14
  442e04:	push   r13
  442e06:	push   r12
  442e08:	mov    r13,rdi
  442e0b:	push   rbp
  442e0c:	push   rbx
  442e0d:	mov    rbx,rsi
  442e10:	xor    ebp,ebp
  442e12:	sub    rsp,0x28
  442e16:	mov    rdi,QWORD PTR [rsi+0x30]
  442e1a:	mov    QWORD PTR [rsp+0x18],rsi
  442e1f:	mov    esi,0x2
  442e24:	call   4094a0 <strcmp@plt+0x5ce8>
  442e29:	mov    rdi,QWORD PTR [rbx+0x30]
  442e2d:	mov    esi,0xa
  442e32:	mov    QWORD PTR [rsp+0x8],rax
  442e37:	call   4094a0 <strcmp@plt+0x5ce8>
  442e3c:	lea    rsi,[rip+0x11533]        # 454376 <strcmp@plt+0x50bbe>
  442e43:	mov    rdi,r13
  442e46:	mov    QWORD PTR [rsp+0x10],rax
  442e4b:	call   403750 <cfg_size@plt>
  442e50:	test   eax,eax
  442e52:	mov    r14d,eax
  442e55:	jg     442e9e <strcmp@plt+0x3f6e6>
  442e57:	jmp    442f4a <strcmp@plt+0x3f792>
  442e5c:	nop    DWORD PTR [rax+0x0]
  442e60:	mov    rax,0x468e3c
  442e67:	mov    ecx,DWORD PTR [rax]
  442e69:	test   ecx,ecx
  442e6b:	jle    442e92 <strcmp@plt+0x3f6da>
  442e6d:	lea    rsi,[rip+0x114a9]        # 45431d <strcmp@plt+0x50b65>
  442e74:	mov    rdi,rbx
  442e77:	call   4032d0 <cfg_getstr@plt>
  442e7c:	lea    rsi,[rip+0x11bb5]        # 454a38 <strcmp@plt+0x51280>
  442e83:	mov    rdx,rax
  442e86:	mov    edi,0x5
  442e8b:	xor    eax,eax
  442e8d:	call   4306a0 <strcmp@plt+0x2cee8>
  442e92:	add    ebp,0x1
  442e95:	cmp    r14d,ebp
  442e98:	je     442f4a <strcmp@plt+0x3f792>
  442e9e:	lea    rsi,[rip+0x114d1]        # 454376 <strcmp@plt+0x50bbe>
  442ea5:	mov    edx,ebp
  442ea7:	mov    rdi,r13
  442eaa:	call   4031e0 <cfg_getnsec@plt>
  442eaf:	lea    rsi,[rip+0x11467]        # 45431d <strcmp@plt+0x50b65>
  442eb6:	mov    rdi,rax
  442eb9:	mov    rbx,rax
  442ebc:	call   4032d0 <cfg_getstr@plt>
  442ec1:	test   rax,rax
  442ec4:	je     4430a0 <strcmp@plt+0x3f8e8>
  442eca:	lea    rsi,[rip+0x11314]        # 4541e5 <strcmp@plt+0x50a2d>
  442ed1:	mov    rdi,rbx
  442ed4:	call   4031a0 <cfg_getint@plt>
  442ed9:	lea    rsi,[rip+0x112ea]        # 4541ca <strcmp@plt+0x50a12>
  442ee0:	mov    rdi,rbx
  442ee3:	mov    r15,rax
  442ee6:	call   4031a0 <cfg_getint@plt>
  442eeb:	lea    rsi,[rip+0x1142b]        # 45431d <strcmp@plt+0x50b65>
  442ef2:	mov    rdi,rbx
  442ef5:	mov    r12,rax
  442ef8:	call   4032d0 <cfg_getstr@plt>
  442efd:	mov    rdi,QWORD PTR [rsp+0x8]
  442f02:	mov    ecx,r15d
  442f05:	mov    edx,r12d
  442f08:	mov    rsi,rax
  442f0b:	call   406620 <strcmp@plt+0x2e68>
  442f10:	cmp    eax,0x1
  442f13:	je     442e60 <strcmp@plt+0x3f6a8>
  442f19:	lea    rsi,[rip+0x113fd]        # 45431d <strcmp@plt+0x50b65>
  442f20:	mov    rdi,rbx
  442f23:	add    ebp,0x1
  442f26:	call   4032d0 <cfg_getstr@plt>
  442f2b:	lea    rsi,[rip+0x11462]        # 454394 <strcmp@plt+0x50bdc>
  442f32:	mov    rdx,rax
  442f35:	mov    edi,0x2
  442f3a:	xor    eax,eax
  442f3c:	call   4306a0 <strcmp@plt+0x2cee8>
  442f41:	cmp    r14d,ebp
  442f44:	jne    442e9e <strcmp@plt+0x3f6e6>
  442f4a:	lea    rsi,[rip+0x11434]        # 454385 <strcmp@plt+0x50bcd>
  442f51:	mov    rdi,r13
  442f54:	xor    ebp,ebp
  442f56:	call   403750 <cfg_size@plt>
  442f5b:	test   eax,eax
  442f5d:	mov    r15d,eax
  442f60:	jg     442ff4 <strcmp@plt+0x3f83c>
  442f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  442f70:	mov    rax,QWORD PTR [rsp+0x18]
  442f75:	mov    rsi,QWORD PTR [rsp+0x8]
  442f7a:	mov    rdi,QWORD PTR [rax+0x40]
  442f7e:	mov    rax,QWORD PTR [rax+0x38]
  442f82:	call   QWORD PTR [rax+0x20]
  442f85:	cmp    eax,0x1
  442f88:	je     443102 <strcmp@plt+0x3f94a>
  442f8e:	mov    rax,0x468e3c
  442f95:	mov    eax,DWORD PTR [rax]
  442f97:	test   eax,eax
  442f99:	jg     4430ea <strcmp@plt+0x3f932>
  442f9f:	xor    eax,eax
  442fa1:	add    rsp,0x28
  442fa5:	pop    rbx
  442fa6:	pop    rbp
  442fa7:	pop    r12
  442fa9:	pop    r13
  442fab:	pop    r14
  442fad:	pop    r15
  442faf:	ret    
  442fb0:	mov    rax,0x468e3c
  442fb7:	mov    edx,DWORD PTR [rax]
  442fb9:	test   edx,edx
  442fbb:	jle    442fe8 <strcmp@plt+0x3f830>
  442fbd:	lea    rsi,[rip+0x11359]        # 45431d <strcmp@plt+0x50b65>
  442fc4:	mov    rdi,rbx
  442fc7:	call   4032d0 <cfg_getstr@plt>
  442fcc:	lea    rsi,[rip+0x11a95]        # 454a68 <strcmp@plt+0x512b0>
  442fd3:	mov    rdx,rax
  442fd6:	mov    edi,0x5
  442fdb:	xor    eax,eax
  442fdd:	call   4306a0 <strcmp@plt+0x2cee8>
  442fe2:	nop    WORD PTR [rax+rax*1+0x0]
  442fe8:	add    ebp,0x1
  442feb:	cmp    r15d,ebp
  442fee:	je     442f70 <strcmp@plt+0x3f7b8>
  442ff4:	lea    rsi,[rip+0x1138a]        # 454385 <strcmp@plt+0x50bcd>
  442ffb:	mov    edx,ebp
  442ffd:	mov    rdi,r13
  443000:	call   4031e0 <cfg_getnsec@plt>
  443005:	lea    rsi,[rip+0x11311]        # 45431d <strcmp@plt+0x50b65>
  44300c:	mov    rdi,rax
  44300f:	mov    rbx,rax
  443012:	call   4032d0 <cfg_getstr@plt>
  443017:	test   rax,rax
  44301a:	je     4430c8 <strcmp@plt+0x3f910>
  443020:	lea    rsi,[rip+0x111be]        # 4541e5 <strcmp@plt+0x50a2d>
  443027:	mov    rdi,rbx
  44302a:	call   4031a0 <cfg_getint@plt>
  44302f:	lea    rsi,[rip+0x11194]        # 4541ca <strcmp@plt+0x50a12>
  443036:	mov    rdi,rbx
  443039:	mov    r14,rax
  44303c:	call   4031a0 <cfg_getint@plt>
  443041:	lea    rsi,[rip+0x112d5]        # 45431d <strcmp@plt+0x50b65>
  443048:	mov    rdi,rbx
  44304b:	mov    r12,rax
  44304e:	call   4032d0 <cfg_getstr@plt>
  443053:	mov    rdi,QWORD PTR [rsp+0x10]
  443058:	mov    ecx,r14d
  44305b:	mov    edx,r12d
  44305e:	mov    rsi,rax
  443061:	call   406620 <strcmp@plt+0x2e68>
  443066:	cmp    eax,0x1
  443069:	je     442fb0 <strcmp@plt+0x3f7f8>
  44306f:	lea    rsi,[rip+0x112a7]        # 45431d <strcmp@plt+0x50b65>
  443076:	mov    rdi,rbx
  443079:	call   4032d0 <cfg_getstr@plt>
  44307e:	lea    rsi,[rip+0x1130f]        # 454394 <strcmp@plt+0x50bdc>
  443085:	mov    rdx,rax
  443088:	mov    edi,0x2
  44308d:	xor    eax,eax
  44308f:	call   4306a0 <strcmp@plt+0x2cee8>
  443094:	jmp    442fe8 <strcmp@plt+0x3f830>
  443099:	nop    DWORD PTR [rax+0x0]
  4430a0:	lea    rsi,[rip+0x11901]        # 4549a8 <strcmp@plt+0x511f0>
  4430a7:	mov    edi,0x2
  4430ac:	call   4306a0 <strcmp@plt+0x2cee8>
  4430b1:	add    rsp,0x28
  4430b5:	xor    eax,eax
  4430b7:	pop    rbx
  4430b8:	pop    rbp
  4430b9:	pop    r12
  4430bb:	pop    r13
  4430bd:	pop    r14
  4430bf:	pop    r15
  4430c1:	ret    
  4430c2:	nop    WORD PTR [rax+rax*1+0x0]
  4430c8:	lea    rsi,[rip+0x11921]        # 4549f0 <strcmp@plt+0x51238>
  4430cf:	mov    edi,0x2
  4430d4:	call   4306a0 <strcmp@plt+0x2cee8>
  4430d9:	add    rsp,0x28
  4430dd:	xor    eax,eax
  4430df:	pop    rbx
  4430e0:	pop    rbp
  4430e1:	pop    r12
  4430e3:	pop    r13
  4430e5:	pop    r14
  4430e7:	pop    r15
  4430e9:	ret    
  4430ea:	lea    rsi,[rip+0x119a7]        # 454a98 <strcmp@plt+0x512e0>
  4430f1:	mov    edi,0x5
  4430f6:	xor    eax,eax
  4430f8:	call   4306a0 <strcmp@plt+0x2cee8>
  4430fd:	jmp    442f9f <strcmp@plt+0x3f7e7>
  443102:	mov    rax,QWORD PTR [rsp+0x18]
  443107:	mov    rsi,QWORD PTR [rsp+0x10]
  44310c:	mov    rdi,QWORD PTR [rax+0x40]
  443110:	mov    rax,QWORD PTR [rax+0x38]
  443114:	call   QWORD PTR [rax+0x20]
  443117:	cmp    eax,0x1
  44311a:	jne    442f8e <strcmp@plt+0x3f7d6>
  443120:	jmp    442fa1 <strcmp@plt+0x3f7e9>
  443125:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  443130:	push   r15
  443132:	push   r14
  443134:	mov    r15,rsi
  443137:	push   r13
  443139:	push   r12
  44313b:	lea    rsi,[rip+0x11269]        # 4543ab <strcmp@plt+0x50bf3>
  443142:	push   rbp
  443143:	push   rbx
  443144:	mov    r13,rdi
  443147:	sub    rsp,0x8
  44314b:	call   403750 <cfg_size@plt>
  443150:	test   eax,eax
  443152:	jle    4431df <strcmp@plt+0x3fa27>
  443158:	mov    r12d,eax
  44315b:	xor    ebx,ebx
  44315d:	lea    r14,[rip+0x11247]        # 4543ab <strcmp@plt+0x50bf3>
  443164:	jmp    44319b <strcmp@plt+0x3f9e3>
  443166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  443170:	mov    rax,0x468e3c
  443177:	mov    eax,DWORD PTR [rax]
  443179:	test   eax,eax
  44317b:	jle    443193 <strcmp@plt+0x3f9db>
  44317d:	lea    rsi,[rip+0x11232]        # 4543b6 <strcmp@plt+0x50bfe>
  443184:	mov    rdx,rbp
  443187:	mov    edi,0x5
  44318c:	xor    eax,eax
  44318e:	call   4306a0 <strcmp@plt+0x2cee8>
  443193:	add    ebx,0x1
  443196:	cmp    r12d,ebx
  443199:	je     4431df <strcmp@plt+0x3fa27>
  44319b:	mov    edx,ebx
  44319d:	mov    rsi,r14
  4431a0:	mov    rdi,r13
  4431a3:	call   403110 <cfg_getnstr@plt>
  4431a8:	test   rax,rax
  4431ab:	mov    rbp,rax
  4431ae:	je     443193 <strcmp@plt+0x3f9db>
  4431b0:	mov    rsi,QWORD PTR [r15+0x68]
  4431b4:	mov    rdi,rax
  4431b7:	call   4063c0 <strcmp@plt+0x2c08>
  4431bc:	cmp    eax,0x1
  4431bf:	je     443170 <strcmp@plt+0x3f9b8>
  4431c1:	lea    rsi,[rip+0x11910]        # 454ad8 <strcmp@plt+0x51320>
  4431c8:	xor    eax,eax
  4431ca:	mov    rdx,rbp
  4431cd:	mov    edi,0x2
  4431d2:	add    ebx,0x1
  4431d5:	call   4306a0 <strcmp@plt+0x2cee8>
  4431da:	cmp    r12d,ebx
  4431dd:	jne    44319b <strcmp@plt+0x3f9e3>
  4431df:	add    rsp,0x8
  4431e3:	mov    eax,0x1
  4431e8:	pop    rbx
  4431e9:	pop    rbp
  4431ea:	pop    r12
  4431ec:	pop    r13
  4431ee:	pop    r14
  4431f0:	pop    r15
  4431f2:	ret    
  4431f3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4431fe:	xchg   ax,ax
  443200:	push   r15
  443202:	push   r14
  443204:	mov    r15,rsi
  443207:	push   r13
  443209:	push   r12
  44320b:	lea    rsi,[rip+0x111bf]        # 4543d1 <strcmp@plt+0x50c19>
  443212:	push   rbp
  443213:	push   rbx
  443214:	mov    r12,rdi
  443217:	xor    ebx,ebx
  443219:	sub    rsp,0x8
  44321d:	call   403750 <cfg_size@plt>
  443222:	test   eax,eax
  443224:	mov    r13d,eax
  443227:	jle    44329a <strcmp@plt+0x3fae2>
  443229:	nop    DWORD PTR [rax+0x0]
  443230:	lea    rsi,[rip+0x1119a]        # 4543d1 <strcmp@plt+0x50c19>
  443237:	mov    edx,ebx
  443239:	mov    rdi,r12
  44323c:	call   403110 <cfg_getnstr@plt>
  443241:	test   rax,rax
  443244:	mov    rbp,rax
  443247:	je     443292 <strcmp@plt+0x3fada>
  443249:	xor    eax,eax
  44324b:	call   424740 <strcmp@plt+0x20f88>
  443250:	mov    rdi,rbp
  443253:	mov    rsi,rax
  443256:	mov    r14,rax
  443259:	call   4256d0 <strcmp@plt+0x21f18>
  44325e:	cmp    eax,0x1
  443261:	jne    4432b0 <strcmp@plt+0x3faf8>
  443263:	mov    rsi,QWORD PTR [r15+0x48]
  443267:	mov    rdi,r14
  44326a:	call   42d540 <strcmp@plt+0x29d88>
  44326f:	mov    rax,0x468e3c
  443276:	mov    eax,DWORD PTR [rax]
  443278:	test   eax,eax
  44327a:	jle    443292 <strcmp@plt+0x3fada>
  44327c:	lea    rsi,[rip+0x118b5]        # 454b38 <strcmp@plt+0x51380>
  443283:	mov    rdx,rbp
  443286:	mov    edi,0x5
  44328b:	xor    eax,eax
  44328d:	call   4306a0 <strcmp@plt+0x2cee8>
  443292:	add    ebx,0x1
  443295:	cmp    r13d,ebx
  443298:	jne    443230 <strcmp@plt+0x3fa78>
  44329a:	add    rsp,0x8
  44329e:	mov    eax,0x1
  4432a3:	pop    rbx
  4432a4:	pop    rbp
  4432a5:	pop    r12
  4432a7:	pop    r13
  4432a9:	pop    r14
  4432ab:	pop    r15
  4432ad:	ret    
  4432ae:	xchg   ax,ax
  4432b0:	mov    rdi,r14
  4432b3:	call   424750 <strcmp@plt+0x20f98>
  4432b8:	lea    rsi,[rip+0x11849]        # 454b08 <strcmp@plt+0x51350>
  4432bf:	mov    rdx,rbp
  4432c2:	xor    eax,eax
  4432c4:	mov    edi,0x2
  4432c9:	call   4306a0 <strcmp@plt+0x2cee8>
  4432ce:	add    rsp,0x8
  4432d2:	xor    eax,eax
  4432d4:	pop    rbx
  4432d5:	pop    rbp
  4432d6:	pop    r12
  4432d8:	pop    r13
  4432da:	pop    r14
  4432dc:	pop    r15
  4432de:	ret    
  4432df:	nop
  4432e0:	push   r15
  4432e2:	push   r14
  4432e4:	mov    r14,rdi
  4432e7:	push   r13
  4432e9:	push   r12
  4432eb:	mov    r13,rsi
  4432ee:	push   rbp
  4432ef:	push   rbx
  4432f0:	lea    rsi,[rip+0x1132d]        # 454624 <strcmp@plt+0x50e6c>
  4432f7:	xor    ebx,ebx
  4432f9:	sub    rsp,0x18
  4432fd:	mov    QWORD PTR [rsp+0x8],rdx
  443302:	call   403750 <cfg_size@plt>
  443307:	test   eax,eax
  443309:	mov    r15d,eax
  44330c:	jg     443346 <strcmp@plt+0x3fb8e>
  44330e:	jmp    4433c0 <strcmp@plt+0x3fc08>
  443313:	nop    DWORD PTR [rax+rax*1+0x0]
  443318:	mov    rdi,rbp
  44331b:	call   424890 <strcmp@plt+0x210d8>
  443320:	lea    rsi,[rip+0x11839]        # 454b60 <strcmp@plt+0x513a8>
  443327:	mov    rdx,rax
  44332a:	mov    edi,0x2
  44332f:	xor    eax,eax
  443331:	call   4306a0 <strcmp@plt+0x2cee8>
  443336:	mov    rdi,r12
  443339:	call   434380 <strcmp@plt+0x30bc8>
  44333e:	add    ebx,0x1
  443341:	cmp    r15d,ebx
  443344:	je     4433c0 <strcmp@plt+0x3fc08>
  443346:	lea    rsi,[rip+0x112d7]        # 454624 <strcmp@plt+0x50e6c>
  44334d:	mov    edx,ebx
  44334f:	mov    rdi,r14
  443352:	call   4031e0 <cfg_getnsec@plt>
  443357:	mov    rdx,QWORD PTR [rsp+0x8]
  44335c:	xor    r8d,r8d
  44335f:	mov    ecx,0x1
  443364:	mov    rsi,r13
  443367:	mov    rdi,rax
  44336a:	call   442c50 <strcmp@plt+0x3f498>
  44336f:	test   rax,rax
  443372:	mov    rbp,rax
  443375:	je     4433e8 <strcmp@plt+0x3fc30>
  443377:	mov    rdi,rax
  44337a:	call   4342d0 <strcmp@plt+0x30b18>
  44337f:	test   rax,rax
  443382:	mov    r12,rax
  443385:	je     4433d8 <strcmp@plt+0x3fc20>
  443387:	mov    rax,QWORD PTR [r13+0x38]
  44338b:	xor    edx,edx
  44338d:	mov    rdi,QWORD PTR [r13+0x40]
  443391:	mov    rsi,r12
  443394:	call   QWORD PTR [rax+0x10]
  443397:	cmp    eax,0x1
  44339a:	jne    443318 <strcmp@plt+0x3fb60>
  4433a0:	mov    rsi,r13
  4433a3:	mov    rdi,r12
  4433a6:	call   407240 <strcmp@plt+0x3a88>
  4433ab:	cmp    eax,0x1
  4433ae:	je     44333e <strcmp@plt+0x3fb86>
  4433b0:	mov    rdi,r12
  4433b3:	add    ebx,0x1
  4433b6:	call   434380 <strcmp@plt+0x30bc8>
  4433bb:	cmp    r15d,ebx
  4433be:	jne    443346 <strcmp@plt+0x3fb8e>
  4433c0:	add    rsp,0x18
  4433c4:	mov    eax,0x1
  4433c9:	pop    rbx
  4433ca:	pop    rbp
  4433cb:	pop    r12
  4433cd:	pop    r13
  4433cf:	pop    r14
  4433d1:	pop    r15
  4433d3:	ret    
  4433d4:	nop    DWORD PTR [rax+0x0]
  4433d8:	mov    rdi,rbp
  4433db:	call   42a650 <strcmp@plt+0x26e98>
  4433e0:	jmp    44333e <strcmp@plt+0x3fb86>
  4433e5:	nop    DWORD PTR [rax]
  4433e8:	add    rsp,0x18
  4433ec:	xor    eax,eax
  4433ee:	pop    rbx
  4433ef:	pop    rbp
  4433f0:	pop    r12
  4433f2:	pop    r13
  4433f4:	pop    r14
  4433f6:	pop    r15
  4433f8:	ret    
  4433f9:	nop    DWORD PTR [rax+0x0]
  443400:	push   r15
  443402:	push   r14
  443404:	mov    r14,rdi
  443407:	push   r13
  443409:	push   r12
  44340b:	lea    rdi,[rip+0x9a60]        # 44ce72 <strcmp@plt+0x496ba>
  443412:	push   rbp
  443413:	push   rbx
  443414:	mov    r12,rdx
  443417:	sub    rsp,0x18
  44341b:	mov    QWORD PTR [rsp+0x8],rcx
  443420:	mov    QWORD PTR [rsp],rsi
  443424:	call   4219c0 <strcmp@plt+0x1e208>
  443429:	mov    rdx,0x474850
  443430:	xor    esi,esi
  443432:	mov    QWORD PTR [r12+0x20],rax
  443437:	mov    rdi,QWORD PTR [rdx]
  44343a:	call   QWORD PTR [rax]
  44343c:	lea    rsi,[rip+0x10f9f]        # 4543e2 <strcmp@plt+0x50c2a>
  443443:	mov    QWORD PTR [r12+0x28],rax
  443448:	mov    rdi,r14
  44344b:	call   4032d0 <cfg_getstr@plt>
  443450:	test   rax,rax
  443453:	je     4434aa <strcmp@plt+0x3fcf2>
  443455:	mov    rdi,rax
  443458:	call   43b5c0 <strcmp@plt+0x37e08>
  44345d:	lea    rdi,[rip+0x10f8c]        # 4543f0 <strcmp@plt+0x50c38>
  443464:	mov    ecx,0x5
  443469:	mov    rsi,rax
  44346c:	mov    rbx,rax
  44346f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  443471:	je     4436f0 <strcmp@plt+0x3ff38>
  443477:	lea    rdi,[rip+0x10f77]        # 4543f5 <strcmp@plt+0x50c3d>
  44347e:	mov    ecx,0xa
  443483:	mov    rsi,rax
  443486:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  443488:	jne    4437aa <strcmp@plt+0x3fff2>
  44348e:	mov    esi,0x12b6
  443493:	mov    DWORD PTR [r12+0x40],0x1
  44349c:	mov    WORD PTR [r12+0x44],si
  4434a2:	mov    rdi,rbx
  4434a5:	call   4037b0 <free@plt>
  4434aa:	lea    rsi,[rip+0x10f4e]        # 4543ff <strcmp@plt+0x50c47>
  4434b1:	mov    rdi,r14
  4434b4:	call   4031a0 <cfg_getint@plt>
  4434b9:	mov    edx,0x3
  4434be:	test   eax,eax
  4434c0:	lea    rsi,[rip+0x10f4c]        # 454413 <strcmp@plt+0x50c5b>
  4434c7:	cmove  eax,edx
  4434ca:	mov    rdi,r14
  4434cd:	xor    edx,edx
  4434cf:	mov    DWORD PTR [r12+0x8],eax
  4434d4:	call   4031e0 <cfg_getnsec@plt>
  4434d9:	test   rax,rax
  4434dc:	mov    rbx,rax
  4434df:	je     443750 <strcmp@plt+0x3ff98>
  4434e5:	lea    rsi,[rip+0x10f34]        # 454420 <strcmp@plt+0x50c68>
  4434ec:	mov    rdi,rax
  4434ef:	call   4031a0 <cfg_getint@plt>
  4434f4:	lea    rsi,[rip+0x10f39]        # 454434 <strcmp@plt+0x50c7c>
  4434fb:	mov    rdi,rbx
  4434fe:	mov    DWORD PTR [r12+0xc],eax
  443503:	call   4031a0 <cfg_getint@plt>
  443508:	lea    rsi,[rip+0x10f38]        # 454447 <strcmp@plt+0x50c8f>
  44350f:	mov    rdi,rbx
  443512:	mov    DWORD PTR [r12+0x10],eax
  443517:	call   4031a0 <cfg_getint@plt>
  44351c:	lea    rdx,[r12+0x14]
  443521:	lea    rsi,[r12+0x10]
  443526:	lea    rdi,[r12+0xc]
  44352b:	mov    DWORD PTR [r12+0x14],eax
  443530:	call   405660 <strcmp@plt+0x1ea8>
  443535:	lea    rsi,[rip+0x10bdf]        # 45411b <strcmp@plt+0x50963>
  44353c:	mov    rdi,r14
  44353f:	xor    ebx,ebx
  443541:	lea    r13,[rip+0x10bd3]        # 45411b <strcmp@plt+0x50963>
  443548:	call   403750 <cfg_size@plt>
  44354d:	test   eax,eax
  44354f:	mov    ebp,eax
  443551:	jg     443582 <strcmp@plt+0x3fdca>
  443553:	jmp    4435c6 <strcmp@plt+0x3fe0e>
  443555:	nop    DWORD PTR [rax]
  443558:	mov    rax,0x468e3c
  44355f:	mov    edx,DWORD PTR [rax]
  443561:	test   edx,edx
  443563:	jle    44357b <strcmp@plt+0x3fdc3>
  443565:	lea    rsi,[rip+0x10f23]        # 45448f <strcmp@plt+0x50cd7>
  44356c:	mov    rdx,r15
  44356f:	mov    edi,0x5
  443574:	xor    eax,eax
  443576:	call   4306a0 <strcmp@plt+0x2cee8>
  44357b:	add    ebx,0x1
  44357e:	cmp    ebp,ebx
  443580:	je     4435c6 <strcmp@plt+0x3fe0e>
  443582:	mov    edx,ebx
  443584:	mov    rsi,r13
  443587:	mov    rdi,r14
  44358a:	call   403110 <cfg_getnstr@plt>
  44358f:	test   rax,rax
  443592:	mov    r15,rax
  443595:	je     44357b <strcmp@plt+0x3fdc3>
  443597:	mov    rsi,QWORD PTR [r12+0x30]
  44359c:	mov    rdi,rax
  44359f:	call   4063c0 <strcmp@plt+0x2c08>
  4435a4:	cmp    eax,0x1
  4435a7:	je     443558 <strcmp@plt+0x3fda0>
  4435a9:	lea    rsi,[rip+0x10ec4]        # 454474 <strcmp@plt+0x50cbc>
  4435b0:	xor    eax,eax
  4435b2:	mov    rdx,r15
  4435b5:	mov    edi,0x1
  4435ba:	add    ebx,0x1
  4435bd:	call   4306a0 <strcmp@plt+0x2cee8>
  4435c2:	cmp    ebp,ebx
  4435c4:	jne    443582 <strcmp@plt+0x3fdca>
  4435c6:	lea    rsi,[rip+0x10e96]        # 454463 <strcmp@plt+0x50cab>
  4435cd:	mov    rdi,r14
  4435d0:	xor    ebp,ebp
  4435d2:	call   403750 <cfg_size@plt>
  4435d7:	test   eax,eax
  4435d9:	mov    r15d,eax
  4435dc:	jg     443621 <strcmp@plt+0x3fe69>
  4435de:	jmp    4436d8 <strcmp@plt+0x3ff20>
  4435e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4435e8:	lea    rsi,[rip+0x10d1e]        # 45430d <strcmp@plt+0x50b55>
  4435ef:	mov    rdi,r13
  4435f2:	call   4032d0 <cfg_getstr@plt>
  4435f7:	lea    rsi,[rip+0x11622]        # 454c20 <strcmp@plt+0x51468>
  4435fe:	mov    rdx,rax
  443601:	mov    edi,0x2
  443606:	xor    eax,eax
  443608:	call   4306a0 <strcmp@plt+0x2cee8>
  44360d:	mov    rdi,rbx
  443610:	call   42a650 <strcmp@plt+0x26e98>
  443615:	add    ebp,0x1
  443618:	cmp    r15d,ebp
  44361b:	je     4436d8 <strcmp@plt+0x3ff20>
  443621:	lea    rsi,[rip+0x10e3b]        # 454463 <strcmp@plt+0x50cab>
  443628:	mov    edx,ebp
  44362a:	mov    rdi,r14
  44362d:	call   4031e0 <cfg_getnsec@plt>
  443632:	mov    rdx,QWORD PTR [rsp+0x8]
  443637:	mov    rsi,QWORD PTR [rsp]
  44363b:	xor    ecx,ecx
  44363d:	mov    r8d,0x1
  443643:	mov    rdi,rax
  443646:	mov    r13,rax
  443649:	call   442c50 <strcmp@plt+0x3f498>
  44364e:	test   rax,rax
  443651:	mov    rbx,rax
  443654:	je     443710 <strcmp@plt+0x3ff58>
  44365a:	mov    rdi,QWORD PTR [r12+0x18]
  44365f:	mov    rsi,rax
  443662:	call   409490 <strcmp@plt+0x5cd8>
  443667:	test   rax,rax
  44366a:	jne    4435e8 <strcmp@plt+0x3fe30>
  443670:	mov    ecx,0x1
  443675:	mov    edx,0x2
  44367a:	mov    rsi,rbx
  44367d:	mov    rdi,r12
  443680:	call   40c0b0 <strcmp@plt+0x88f8>
  443685:	test   rax,rax
  443688:	je     443780 <strcmp@plt+0x3ffc8>
  44368e:	mov    rsi,rax
  443691:	mov    rdi,r12
  443694:	call   40c310 <strcmp@plt+0x8b58>
  443699:	mov    rax,0x468e3c
  4436a0:	mov    eax,DWORD PTR [rax]
  4436a2:	test   eax,eax
  4436a4:	jle    443615 <strcmp@plt+0x3fe5d>
  4436aa:	mov    rdi,rbx
  4436ad:	add    ebp,0x1
  4436b0:	call   424890 <strcmp@plt+0x210d8>
  4436b5:	lea    rsi,[rip+0x11624]        # 454ce0 <strcmp@plt+0x51528>
  4436bc:	mov    rdx,rax
  4436bf:	mov    edi,0x5
  4436c4:	xor    eax,eax
  4436c6:	call   4306a0 <strcmp@plt+0x2cee8>
  4436cb:	cmp    r15d,ebp
  4436ce:	jne    443621 <strcmp@plt+0x3fe69>
  4436d4:	nop    DWORD PTR [rax+0x0]
  4436d8:	mov    eax,0x1
  4436dd:	add    rsp,0x18
  4436e1:	pop    rbx
  4436e2:	pop    rbp
  4436e3:	pop    r12
  4436e5:	pop    r13
  4436e7:	pop    r14
  4436e9:	pop    r15
  4436eb:	ret    
  4436ec:	nop    DWORD PTR [rax+0x0]
  4436f0:	mov    edi,0x10f5
  4436f5:	mov    DWORD PTR [r12+0x40],0x0
  4436fe:	mov    WORD PTR [r12+0x44],di
  443704:	jmp    4434a2 <strcmp@plt+0x3fcea>
  443709:	nop    DWORD PTR [rax+0x0]
  443710:	lea    rsi,[rip+0x10bf6]        # 45430d <strcmp@plt+0x50b55>
  443717:	mov    rdi,r13
  44371a:	call   4032d0 <cfg_getstr@plt>
  44371f:	lea    rsi,[rip+0x114b2]        # 454bd8 <strcmp@plt+0x51420>
  443726:	mov    rdx,rax
  443729:	mov    edi,0x2
  44372e:	xor    eax,eax
  443730:	call   4306a0 <strcmp@plt+0x2cee8>
  443735:	add    rsp,0x18
  443739:	xor    eax,eax
  44373b:	pop    rbx
  44373c:	pop    rbp
  44373d:	pop    r12
  44373f:	pop    r13
  443741:	pop    r14
  443743:	pop    r15
  443745:	ret    
  443746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  443750:	mov    rax,0x468e3c
  443757:	mov    ecx,DWORD PTR [rax]
  443759:	test   ecx,ecx
  44375b:	jg     443790 <strcmp@plt+0x3ffd8>
  44375d:	mov    DWORD PTR [r12+0xc],0x1e
  443766:	mov    DWORD PTR [r12+0x10],0x2
  44376f:	mov    DWORD PTR [r12+0x14],0x5
  443778:	jmp    443535 <strcmp@plt+0x3fd7d>
  44377d:	nop    DWORD PTR [rax]
  443780:	mov    rdx,rbx
  443783:	lea    rsi,[rip+0x1144e]        # 454bd8 <strcmp@plt+0x51420>
  44378a:	jmp    443601 <strcmp@plt+0x3fe49>
  44378f:	nop
  443790:	lea    rsi,[rip+0x114e1]        # 454c78 <strcmp@plt+0x514c0>
  443797:	mov    edx,0x1e
  44379c:	mov    edi,0x5
  4437a1:	xor    eax,eax
  4437a3:	call   4306a0 <strcmp@plt+0x2cee8>
  4437a8:	jmp    44375d <strcmp@plt+0x3ffa5>
  4437aa:	lea    rsi,[rip+0x11407]        # 454bb8 <strcmp@plt+0x51400>
  4437b1:	mov    rdx,rax
  4437b4:	mov    edi,0x2
  4437b9:	xor    eax,eax
  4437bb:	call   4306a0 <strcmp@plt+0x2cee8>
  4437c0:	mov    rdi,rbx
  4437c3:	call   4037b0 <free@plt>
  4437c8:	xor    eax,eax
  4437ca:	jmp    4436dd <strcmp@plt+0x3ff25>
  4437cf:	nop
  4437d0:	push   r15
  4437d2:	push   r14
  4437d4:	push   r13
  4437d6:	push   r12
  4437d8:	push   rbp
  4437d9:	push   rbx
  4437da:	mov    rbp,rdi
  4437dd:	mov    edi,0x2
  4437e2:	sub    rsp,0x38
  4437e6:	mov    rbx,0x474850
  4437ed:	mov    rsi,rbx
  4437f0:	call   408440 <strcmp@plt+0x4c88>
  4437f5:	cmp    eax,0x1
  4437f8:	je     443820 <strcmp@plt+0x40068>
  4437fa:	lea    rsi,[rip+0x11527]        # 454d28 <strcmp@plt+0x51570>
  443801:	mov    edi,0x1
  443806:	xor    eax,eax
  443808:	xor    ebx,ebx
  44380a:	call   4306a0 <strcmp@plt+0x2cee8>
  44380f:	add    rsp,0x38
  443813:	mov    eax,ebx
  443815:	pop    rbx
  443816:	pop    rbp
  443817:	pop    r12
  443819:	pop    r13
  44381b:	pop    r14
  44381d:	pop    r15
  44381f:	ret    
  443820:	mov    rdi,rbp
  443823:	call   442420 <strcmp@plt+0x3ec68>
  443828:	mov    rdi,QWORD PTR [rbx]
  44382b:	mov    r14,rax
  44382e:	mov    QWORD PTR [rsp+0x28],rax
  443833:	call   40a5f0 <strcmp@plt+0x6e38>
  443838:	lea    rdx,[rax+0x18]
  44383c:	mov    rcx,r14
  44383f:	mov    rsi,rax
  443842:	mov    rdi,rbp
  443845:	mov    r13,rax
  443848:	call   443400 <strcmp@plt+0x3fc48>
  44384d:	cmp    eax,0x1
  443850:	mov    ebx,eax
  443852:	je     443860 <strcmp@plt+0x400a8>
  443854:	xor    ebx,ebx
  443856:	jmp    44380f <strcmp@plt+0x40057>
  443858:	nop    DWORD PTR [rax+rax*1+0x0]
  443860:	lea    rsi,[rip+0x10c46]        # 4544ad <strcmp@plt+0x50cf5>
  443867:	mov    rdi,rbp
  44386a:	call   403750 <cfg_size@plt>
  44386f:	test   eax,eax
  443871:	je     4439c8 <strcmp@plt+0x40210>
  443877:	lea    rsi,[rip+0x10c2f]        # 4544ad <strcmp@plt+0x50cf5>
  44387e:	mov    rdi,rbp
  443881:	call   403270 <cfg_getsec@plt>
  443886:	lea    rsi,[rip+0x10c2b]        # 4544b8 <strcmp@plt+0x50d00>
  44388d:	mov    rdi,rax
  443890:	mov    QWORD PTR [rsp+0x18],rax
  443895:	call   403750 <cfg_size@plt>
  44389a:	cmp    eax,0x0
  44389d:	mov    DWORD PTR [rsp+0x24],eax
  4438a1:	je     443a70 <strcmp@plt+0x402b8>
  4438a7:	jle    443a81 <strcmp@plt+0x402c9>
  4438ad:	xor    r15d,r15d
  4438b0:	jmp    4438ff <strcmp@plt+0x40147>
  4438b2:	nop    WORD PTR [rax+rax*1+0x0]
  4438b8:	mov    rax,0x468e3c
  4438bf:	mov    eax,DWORD PTR [rax]
  4438c1:	test   eax,eax
  4438c3:	jle    4438f0 <strcmp@plt+0x40138>
  4438c5:	lea    rsi,[rip+0x10dbd]        # 454689 <strcmp@plt+0x50ed1>
  4438cc:	mov    rdi,r12
  4438cf:	call   4032d0 <cfg_getstr@plt>
  4438d4:	lea    rsi,[rip+0x1155d]        # 454e38 <strcmp@plt+0x51680>
  4438db:	mov    rdx,rax
  4438de:	mov    edi,0x5
  4438e3:	xor    eax,eax
  4438e5:	call   4306a0 <strcmp@plt+0x2cee8>
  4438ea:	nop    WORD PTR [rax+rax*1+0x0]
  4438f0:	add    r15d,0x1
  4438f4:	cmp    DWORD PTR [rsp+0x24],r15d
  4438f9:	je     443a81 <strcmp@plt+0x402c9>
  4438ff:	mov    rdi,QWORD PTR [rsp+0x18]
  443904:	lea    rsi,[rip+0x10bad]        # 4544b8 <strcmp@plt+0x50d00>
  44390b:	mov    edx,r15d
  44390e:	call   4031e0 <cfg_getnsec@plt>
  443913:	lea    rsi,[rip+0x10d6f]        # 454689 <strcmp@plt+0x50ed1>
  44391a:	mov    rdi,rax
  44391d:	mov    r12,rax
  443920:	call   4032d0 <cfg_getstr@plt>
  443925:	test   rax,rax
  443928:	je     443ae0 <strcmp@plt+0x40328>
  44392e:	lea    rsi,[rip+0x108b0]        # 4541e5 <strcmp@plt+0x50a2d>
  443935:	mov    rdi,r12
  443938:	call   4031a0 <cfg_getint@plt>
  44393d:	lea    rsi,[rip+0x10886]        # 4541ca <strcmp@plt+0x50a12>
  443944:	mov    rdi,r12
  443947:	mov    QWORD PTR [rsp+0x10],rax
  44394c:	call   4031a0 <cfg_getint@plt>
  443951:	lea    rsi,[rip+0x109de]        # 454336 <strcmp@plt+0x50b7e>
  443958:	mov    rdi,r12
  44395b:	mov    QWORD PTR [rsp+0x8],rax
  443960:	call   4031a0 <cfg_getint@plt>
  443965:	lea    rsi,[rip+0x10d1d]        # 454689 <strcmp@plt+0x50ed1>
  44396c:	mov    rdi,r12
  44396f:	mov    r14,rax
  443972:	call   4032d0 <cfg_getstr@plt>
  443977:	mov    r8,QWORD PTR [rsp+0x10]
  44397c:	mov    rcx,QWORD PTR [rsp+0x8]
  443981:	mov    edx,r14d
  443984:	mov    rsi,rax
  443987:	mov    rdi,r13
  44398a:	call   405970 <strcmp@plt+0x21b8>
  44398f:	cmp    eax,0x1
  443992:	je     4438b8 <strcmp@plt+0x40100>
  443998:	lea    rsi,[rip+0x10cea]        # 454689 <strcmp@plt+0x50ed1>
  44399f:	mov    rdi,r12
  4439a2:	call   4032d0 <cfg_getstr@plt>
  4439a7:	lea    rsi,[rip+0x11412]        # 454dc0 <strcmp@plt+0x51608>
  4439ae:	mov    rdx,rax
  4439b1:	mov    edi,0x2
  4439b6:	xor    eax,eax
  4439b8:	call   4306a0 <strcmp@plt+0x2cee8>
  4439bd:	jmp    4438f0 <strcmp@plt+0x40138>
  4439c2:	nop    WORD PTR [rax+rax*1+0x0]
  4439c8:	lea    rsi,[rip+0x10af3]        # 4544c2 <strcmp@plt+0x50d0a>
  4439cf:	mov    rdi,rbp
  4439d2:	xor    r15d,r15d
  4439d5:	call   403750 <cfg_size@plt>
  4439da:	test   eax,eax
  4439dc:	mov    DWORD PTR [rsp+0x10],eax
  4439e0:	jg     4439f3 <strcmp@plt+0x4023b>
  4439e2:	jmp    443a60 <strcmp@plt+0x402a8>
  4439e4:	nop    DWORD PTR [rax+0x0]
  4439e8:	add    r15d,0x1
  4439ec:	cmp    DWORD PTR [rsp+0x10],r15d
  4439f1:	je     443a60 <strcmp@plt+0x402a8>
  4439f3:	lea    rsi,[rip+0x10ac8]        # 4544c2 <strcmp@plt+0x50d0a>
  4439fa:	mov    edx,r15d
  4439fd:	mov    rdi,rbp
  443a00:	call   4031e0 <cfg_getnsec@plt>
  443a05:	lea    rsi,[rip+0x10ac2]        # 4544ce <strcmp@plt+0x50d16>
  443a0c:	mov    rdi,rax
  443a0f:	mov    r12,rax
  443a12:	call   4032d0 <cfg_getstr@plt>
  443a17:	lea    rsi,[rip+0x10819]        # 454237 <strcmp@plt+0x50a7f>
  443a1e:	mov    rdi,r12
  443a21:	mov    QWORD PTR [rsp+0x8],rax
  443a26:	call   4032d0 <cfg_getstr@plt>
  443a2b:	lea    rsi,[rip+0x108eb]        # 45431d <strcmp@plt+0x50b65>
  443a32:	mov    rdi,r12
  443a35:	mov    r14,rax
  443a38:	call   4032d0 <cfg_getstr@plt>
  443a3d:	mov    rcx,QWORD PTR [rsp+0x8]
  443a42:	mov    rdx,r14
  443a45:	mov    rsi,rax
  443a48:	mov    rdi,r13
  443a4b:	call   407730 <strcmp@plt+0x3f78>
  443a50:	cmp    eax,0x1
  443a53:	je     4439e8 <strcmp@plt+0x40230>
  443a55:	xor    ebx,ebx
  443a57:	jmp    44380f <strcmp@plt+0x40057>
  443a5c:	nop    DWORD PTR [rax+0x0]
  443a60:	mov    rdi,QWORD PTR [rsp+0x28]
  443a65:	call   43a5a0 <strcmp@plt+0x36de8>
  443a6a:	jmp    44380f <strcmp@plt+0x40057>
  443a6f:	nop
  443a70:	lea    rsi,[rip+0x112d1]        # 454d48 <strcmp@plt+0x51590>
  443a77:	mov    edi,0x2
  443a7c:	call   4306a0 <strcmp@plt+0x2cee8>
  443a81:	mov    rax,QWORD PTR [r13+0x68]
  443a85:	cmp    QWORD PTR [rax+0x8],0x0
  443a8a:	jne    4439c8 <strcmp@plt+0x40210>
  443a90:	lea    rsi,[rip+0x11351]        # 454de8 <strcmp@plt+0x51630>
  443a97:	xor    eax,eax
  443a99:	mov    edi,0x2
  443a9e:	call   4306a0 <strcmp@plt+0x2cee8>
  443aa3:	mov    rax,QWORD PTR [r13+0x38]
  443aa7:	xor    edx,edx
  443aa9:	mov    rsi,QWORD PTR [r13+0x68]
  443aad:	mov    rdi,QWORD PTR [r13+0x40]
  443ab1:	call   QWORD PTR [rax+0x10]
  443ab4:	cmp    eax,0x1
  443ab7:	je     4439c8 <strcmp@plt+0x40210>
  443abd:	lea    rsi,[rip+0x2df4]        # 4468b8 <strcmp@plt+0x43100>
  443ac4:	mov    edi,0x2
  443ac9:	xor    eax,eax
  443acb:	xor    ebx,ebx
  443acd:	call   4306a0 <strcmp@plt+0x2cee8>
  443ad2:	mov    rdi,QWORD PTR [r13+0x68]
  443ad6:	call   434380 <strcmp@plt+0x30bc8>
  443adb:	jmp    44380f <strcmp@plt+0x40057>
  443ae0:	lea    rsi,[rip+0x11299]        # 454d80 <strcmp@plt+0x515c8>
  443ae7:	mov    edi,0x2
  443aec:	xor    ebx,ebx
  443aee:	call   4306a0 <strcmp@plt+0x2cee8>
  443af3:	jmp    44380f <strcmp@plt+0x40057>
  443af8:	nop    DWORD PTR [rax+rax*1+0x0]
  443b00:	push   r13
  443b02:	push   r12
  443b04:	push   rbp
  443b05:	push   rbx
  443b06:	mov    rbp,rdi
  443b09:	xor    edi,edi
  443b0b:	sub    rsp,0x18
  443b0f:	mov    rbx,0x474850
  443b16:	mov    rsi,rbx
  443b19:	call   408440 <strcmp@plt+0x4c88>
  443b1e:	cmp    eax,0x1
  443b21:	je     443b3d <strcmp@plt+0x40385>
  443b23:	lea    rsi,[rip+0x1132e]        # 454e58 <strcmp@plt+0x516a0>
  443b2a:	xor    eax,eax
  443b2c:	mov    edi,0x1
  443b31:	call   4306a0 <strcmp@plt+0x2cee8>
  443b36:	xor    eax,eax
  443b38:	call   43f160 <strcmp@plt+0x3b9a8>
  443b3d:	mov    rdi,rbp
  443b40:	call   442420 <strcmp@plt+0x3ec68>
  443b45:	mov    rdi,QWORD PTR [rbx]
  443b48:	mov    r12,rax
  443b4b:	call   410710 <strcmp@plt+0xcf58>
  443b50:	lea    rsi,[rip+0x10985]        # 4544dc <strcmp@plt+0x50d24>
  443b57:	mov    rdi,rbp
  443b5a:	mov    rbx,rax
  443b5d:	call   403360 <cfg_getbool@plt>
  443b62:	xor    edx,edx
  443b64:	test   eax,eax
  443b66:	setne  dl
  443b69:	mov    DWORD PTR [rbx+0x80],edx
  443b6f:	je     443b8f <strcmp@plt+0x403d7>
  443b71:	mov    rax,0x4747c0
  443b78:	mov    DWORD PTR [rax],0x2
  443b7e:	mov    rax,0x468e3c
  443b85:	mov    eax,DWORD PTR [rax]
  443b87:	test   eax,eax
  443b89:	jg     443c40 <strcmp@plt+0x40488>
  443b8f:	lea    r13,[rbx+0x18]
  443b93:	mov    rcx,r12
  443b96:	mov    rsi,rbx
  443b99:	mov    rdi,rbp
  443b9c:	mov    rdx,r13
  443b9f:	call   443400 <strcmp@plt+0x3fc48>
  443ba4:	cmp    eax,0x1
  443ba7:	je     443bc0 <strcmp@plt+0x40408>
  443ba9:	xor    eax,eax
  443bab:	add    rsp,0x18
  443baf:	pop    rbx
  443bb0:	pop    rbp
  443bb1:	pop    r12
  443bb3:	pop    r13
  443bb5:	ret    
  443bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  443bc0:	mov    rsi,rbx
  443bc3:	mov    rdi,rbp
  443bc6:	call   442cc0 <strcmp@plt+0x3f508>
  443bcb:	cmp    eax,0x1
  443bce:	jne    443ba9 <strcmp@plt+0x403f1>
  443bd0:	mov    rsi,rbx
  443bd3:	mov    rdi,rbp
  443bd6:	call   442e00 <strcmp@plt+0x3f648>
  443bdb:	cmp    eax,0x1
  443bde:	jne    443ba9 <strcmp@plt+0x403f1>
  443be0:	mov    rsi,rbx
  443be3:	mov    rdi,rbp
  443be6:	call   443130 <strcmp@plt+0x3f978>
  443beb:	cmp    eax,0x1
  443bee:	jne    443ba9 <strcmp@plt+0x403f1>
  443bf0:	mov    rsi,r13
  443bf3:	mov    rdi,rbp
  443bf6:	call   443200 <strcmp@plt+0x3fa48>
  443bfb:	cmp    eax,0x1
  443bfe:	jne    443ba9 <strcmp@plt+0x403f1>
  443c00:	mov    rdx,r12
  443c03:	mov    rsi,rbx
  443c06:	mov    rdi,rbp
  443c09:	call   4432e0 <strcmp@plt+0x3fb28>
  443c0e:	sub    eax,0x1
  443c11:	jne    443ba9 <strcmp@plt+0x403f1>
  443c13:	mov    rdi,rbx
  443c16:	call   4078c0 <strcmp@plt+0x4108>
  443c1b:	cmp    eax,0x1
  443c1e:	je     443c58 <strcmp@plt+0x404a0>
  443c20:	lea    rsi,[rip+0x108cb]        # 4544f2 <strcmp@plt+0x50d3a>
  443c27:	mov    edi,0x2
  443c2c:	xor    eax,eax
  443c2e:	call   4306a0 <strcmp@plt+0x2cee8>
  443c33:	jmp    443ba9 <strcmp@plt+0x403f1>
  443c38:	nop    DWORD PTR [rax+rax*1+0x0]
  443c40:	lea    rsi,[rip+0x11231]        # 454e78 <strcmp@plt+0x516c0>
  443c47:	mov    edi,0x5
  443c4c:	xor    eax,eax
  443c4e:	call   4306a0 <strcmp@plt+0x2cee8>
  443c53:	jmp    443b8f <strcmp@plt+0x403d7>
  443c58:	xor    esi,esi
  443c5a:	mov    rdi,rbx
  443c5d:	mov    DWORD PTR [rsp+0xc],eax
  443c61:	call   4078b0 <strcmp@plt+0x40f8>
  443c66:	mov    rdi,r12
  443c69:	call   43a5a0 <strcmp@plt+0x36de8>
  443c6e:	mov    eax,DWORD PTR [rsp+0xc]
  443c72:	jmp    443bab <strcmp@plt+0x403f3>
  443c77:	nop    WORD PTR [rax+rax*1+0x0]
  443c80:	push   r13
  443c82:	push   r12
  443c84:	push   rbp
  443c85:	push   rbx
  443c86:	mov    rbp,rdi
  443c89:	mov    edi,0x3
  443c8e:	sub    rsp,0x18
  443c92:	mov    rbx,0x474850
  443c99:	mov    rsi,rbx
  443c9c:	call   408440 <strcmp@plt+0x4c88>
  443ca1:	cmp    eax,0x1
  443ca4:	je     443cc0 <strcmp@plt+0x40508>
  443ca6:	lea    rsi,[rip+0x11203]        # 454eb0 <strcmp@plt+0x516f8>
  443cad:	xor    eax,eax
  443caf:	mov    edi,0x1
  443cb4:	call   4306a0 <strcmp@plt+0x2cee8>
  443cb9:	xor    eax,eax
  443cbb:	call   43f160 <strcmp@plt+0x3b9a8>
  443cc0:	mov    rdi,rbp
  443cc3:	call   442420 <strcmp@plt+0x3ec68>
  443cc8:	mov    rdi,QWORD PTR [rbx]
  443ccb:	mov    r12,rax
  443cce:	call   410710 <strcmp@plt+0xcf58>
  443cd3:	lea    rsi,[rip+0x10802]        # 4544dc <strcmp@plt+0x50d24>
  443cda:	mov    rdi,rbp
  443cdd:	mov    rbx,rax
  443ce0:	call   403360 <cfg_getbool@plt>
  443ce5:	xor    edx,edx
  443ce7:	test   eax,eax
  443ce9:	setne  dl
  443cec:	mov    DWORD PTR [rbx+0x80],edx
  443cf2:	je     443d12 <strcmp@plt+0x4055a>
  443cf4:	mov    rax,0x4747c0
  443cfb:	mov    DWORD PTR [rax],0x2
  443d01:	mov    rax,0x468e3c
  443d08:	mov    eax,DWORD PTR [rax]
  443d0a:	test   eax,eax
  443d0c:	jg     443dd0 <strcmp@plt+0x40618>
  443d12:	lea    r13,[rbx+0x18]
  443d16:	mov    rcx,r12
  443d19:	mov    rsi,rbx
  443d1c:	mov    rdi,rbp
  443d1f:	mov    rdx,r13
  443d22:	call   443400 <strcmp@plt+0x3fc48>
  443d27:	cmp    eax,0x1
  443d2a:	je     443d40 <strcmp@plt+0x40588>
  443d2c:	xor    eax,eax
  443d2e:	add    rsp,0x18
  443d32:	pop    rbx
  443d33:	pop    rbp
  443d34:	pop    r12
  443d36:	pop    r13
  443d38:	ret    
  443d39:	nop    DWORD PTR [rax+0x0]
  443d40:	mov    rsi,rbx
  443d43:	mov    rdi,rbp
  443d46:	call   442cc0 <strcmp@plt+0x3f508>
  443d4b:	cmp    eax,0x1
  443d4e:	jne    443d2c <strcmp@plt+0x40574>
  443d50:	mov    rsi,rbx
  443d53:	mov    rdi,rbp
  443d56:	call   442e00 <strcmp@plt+0x3f648>
  443d5b:	cmp    eax,0x1
  443d5e:	jne    443d2c <strcmp@plt+0x40574>
  443d60:	mov    rsi,rbx
  443d63:	mov    rdi,rbp
  443d66:	call   443130 <strcmp@plt+0x3f978>
  443d6b:	cmp    eax,0x1
  443d6e:	jne    443d2c <strcmp@plt+0x40574>
  443d70:	mov    rsi,r13
  443d73:	mov    rdi,rbp
  443d76:	call   443200 <strcmp@plt+0x3fa48>
  443d7b:	cmp    eax,0x1
  443d7e:	jne    443d2c <strcmp@plt+0x40574>
  443d80:	mov    rax,QWORD PTR [rbx+0x60]
  443d84:	cmp    DWORD PTR [rax+0x18],0x0
  443d88:	jne    443d92 <strcmp@plt+0x405da>
  443d8a:	mov    rdi,r13
  443d8d:	call   407b80 <strcmp@plt+0x43c8>
  443d92:	mov    rdx,r12
  443d95:	mov    rsi,rbx
  443d98:	mov    rdi,rbp
  443d9b:	call   4432e0 <strcmp@plt+0x3fb28>
  443da0:	sub    eax,0x1
  443da3:	jne    443d2c <strcmp@plt+0x40574>
  443da5:	mov    rdi,rbx
  443da8:	call   4078c0 <strcmp@plt+0x4108>
  443dad:	cmp    eax,0x1
  443db0:	je     443de8 <strcmp@plt+0x40630>
  443db2:	lea    rsi,[rip+0x10739]        # 4544f2 <strcmp@plt+0x50d3a>
  443db9:	mov    edi,0x2
  443dbe:	xor    eax,eax
  443dc0:	call   4306a0 <strcmp@plt+0x2cee8>
  443dc5:	jmp    443d2c <strcmp@plt+0x40574>
  443dca:	nop    WORD PTR [rax+rax*1+0x0]
  443dd0:	lea    rsi,[rip+0x110a1]        # 454e78 <strcmp@plt+0x516c0>
  443dd7:	mov    edi,0x5
  443ddc:	xor    eax,eax
  443dde:	call   4306a0 <strcmp@plt+0x2cee8>
  443de3:	jmp    443d12 <strcmp@plt+0x4055a>
  443de8:	xor    esi,esi
  443dea:	mov    rdi,rbx
  443ded:	mov    DWORD PTR [rsp+0xc],eax
  443df1:	call   4078b0 <strcmp@plt+0x40f8>
  443df6:	mov    rdi,r12
  443df9:	call   43a5a0 <strcmp@plt+0x36de8>
  443dfe:	mov    eax,DWORD PTR [rsp+0xc]
  443e02:	jmp    443d2e <strcmp@plt+0x40576>
  443e07:	nop    WORD PTR [rax+rax*1+0x0]
  443e10:	push   r15
  443e12:	push   r14
  443e14:	push   r13
  443e16:	push   r12
  443e18:	push   rbp
  443e19:	push   rbx
  443e1a:	sub    rsp,0x48
  443e1e:	mov    rbx,0x474850
  443e25:	mov    QWORD PTR [rsp+0x8],rdi
  443e2a:	mov    edi,0x1
  443e2f:	mov    rsi,rbx
  443e32:	call   408440 <strcmp@plt+0x4c88>
  443e37:	cmp    eax,0x1
  443e3a:	je     443e56 <strcmp@plt+0x4069e>
  443e3c:	lea    rsi,[rip+0x11095]        # 454ed8 <strcmp@plt+0x51720>
  443e43:	xor    eax,eax
  443e45:	mov    edi,0x1
  443e4a:	call   4306a0 <strcmp@plt+0x2cee8>
  443e4f:	xor    eax,eax
  443e51:	call   43f160 <strcmp@plt+0x3b9a8>
  443e56:	mov    rdi,QWORD PTR [rbx]
  443e59:	call   414d30 <strcmp@plt+0x11578>
  443e5e:	mov    rbx,QWORD PTR [rsp+0x8]
  443e63:	mov    r15,rax
  443e66:	mov    rdi,rbx
  443e69:	call   442420 <strcmp@plt+0x3ec68>
  443e6e:	lea    rsi,[rip+0x10697]        # 45450c <strcmp@plt+0x50d54>
  443e75:	mov    rdi,rbx
  443e78:	mov    QWORD PTR [rsp+0x38],rax
  443e7d:	call   4032d0 <cfg_getstr@plt>
  443e82:	test   rax,rax
  443e85:	je     4443ed <strcmp@plt+0x40c35>
  443e8b:	mov    rdi,rax
  443e8e:	call   43e570 <strcmp@plt+0x3adb8>
  443e93:	test   rax,rax
  443e96:	mov    rbx,rax
  443e99:	je     444411 <strcmp@plt+0x40c59>
  443e9f:	mov    esi,0x2
  443ea4:	mov    rdi,rax
  443ea7:	call   43ebf0 <strcmp@plt+0x3b438>
  443eac:	mov    esi,0xa
  443eb1:	mov    rdi,rbx
  443eb4:	call   43ebf0 <strcmp@plt+0x3b438>
  443eb9:	xor    eax,eax
  443ebb:	mov    QWORD PTR [rsp+0x10],r15
  443ec0:	mov    r15d,eax
  443ec3:	nop    DWORD PTR [rax+rax*1+0x0]
  443ec8:	mov    rdi,QWORD PTR [rsp+0x8]
  443ecd:	lea    rsi,[rip+0x10646]        # 45451a <strcmp@plt+0x50d62>
  443ed4:	call   403750 <cfg_size@plt>
  443ed9:	cmp    eax,r15d
  443edc:	jbe    444147 <strcmp@plt+0x4098f>
  443ee2:	mov    rdi,QWORD PTR [rsp+0x8]
  443ee7:	lea    rsi,[rip+0x1062c]        # 45451a <strcmp@plt+0x50d62>
  443eee:	mov    edx,r15d
  443ef1:	call   4031e0 <cfg_getnsec@plt>
  443ef6:	lea    rsi,[rip+0x10410]        # 45430d <strcmp@plt+0x50b55>
  443efd:	mov    rdi,rax
  443f00:	mov    rbp,rax
  443f03:	call   4032d0 <cfg_getstr@plt>
  443f08:	test   rax,rax
  443f0b:	je     444123 <strcmp@plt+0x4096b>
  443f11:	lea    rsi,[rip+0x1031f]        # 454237 <strcmp@plt+0x50a7f>
  443f18:	mov    rdi,rbp
  443f1b:	call   4032d0 <cfg_getstr@plt>
  443f20:	test   rax,rax
  443f23:	je     444123 <strcmp@plt+0x4096b>
  443f29:	call   42d4e0 <strcmp@plt+0x29d28>
  443f2e:	lea    rsi,[rip+0x105ef]        # 454524 <strcmp@plt+0x50d6c>
  443f35:	mov    rdi,rbp
  443f38:	mov    r14,rax
  443f3b:	xor    ebx,ebx
  443f3d:	lea    r13,[rip+0x105e0]        # 454524 <strcmp@plt+0x50d6c>
  443f44:	call   403750 <cfg_size@plt>
  443f49:	test   eax,eax
  443f4b:	mov    r12d,eax
  443f4e:	jle    443f75 <strcmp@plt+0x407bd>
  443f50:	mov    edx,ebx
  443f52:	mov    rsi,r13
  443f55:	mov    rdi,rbp
  443f58:	call   403110 <cfg_getnstr@plt>
  443f5d:	test   rax,rax
  443f60:	je     443f6d <strcmp@plt+0x407b5>
  443f62:	mov    rsi,r14
  443f65:	mov    rdi,rax
  443f68:	call   42d6d0 <strcmp@plt+0x29f18>
  443f6d:	add    ebx,0x1
  443f70:	cmp    r12d,ebx
  443f73:	jne    443f50 <strcmp@plt+0x40798>
  443f75:	lea    rsi,[rip+0x105b5]        # 454531 <strcmp@plt+0x50d79>
  443f7c:	mov    rdi,rbp
  443f7f:	call   403360 <cfg_getbool@plt>
  443f84:	lea    rsi,[rip+0x105bc]        # 454547 <strcmp@plt+0x50d8f>
  443f8b:	mov    rdi,rbp
  443f8e:	mov    r13d,eax
  443f91:	call   403360 <cfg_getbool@plt>
  443f96:	lea    rsi,[rip+0x102c2]        # 45425f <strcmp@plt+0x50aa7>
  443f9d:	mov    rdi,rbp
  443fa0:	mov    r12d,eax
  443fa3:	call   403360 <cfg_getbool@plt>
  443fa8:	lea    rsi,[rip+0x1059e]        # 45454d <strcmp@plt+0x50d95>
  443faf:	mov    rdi,rbp
  443fb2:	mov    ebx,eax
  443fb4:	call   403360 <cfg_getbool@plt>
  443fb9:	lea    rsi,[rip+0x10277]        # 454237 <strcmp@plt+0x50a7f>
  443fc0:	mov    rdi,rbp
  443fc3:	mov    DWORD PTR [rsp+0x34],eax
  443fc7:	call   4032d0 <cfg_getstr@plt>
  443fcc:	lea    rsi,[rip+0x10256]        # 454229 <strcmp@plt+0x50a71>
  443fd3:	mov    rdi,rbp
  443fd6:	mov    QWORD PTR [rsp+0x28],rax
  443fdb:	call   4031a0 <cfg_getint@plt>
  443fe0:	lea    rsi,[rip+0xa281]        # 44e268 <strcmp@plt+0x4aab0>
  443fe7:	mov    rdi,rbp
  443fea:	mov    QWORD PTR [rsp+0x18],rax
  443fef:	call   4031a0 <cfg_getint@plt>
  443ff4:	lea    rsi,[rip+0x10312]        # 45430d <strcmp@plt+0x50b55>
  443ffb:	mov    rdi,rbp
  443ffe:	mov    QWORD PTR [rsp+0x20],rax
  444003:	call   4032d0 <cfg_getstr@plt>
  444008:	mov    r9d,DWORD PTR [rsp+0x34]
  44400d:	test   r9d,r9d
  444010:	setne  r9b
  444014:	sub    rsp,0x8
  444018:	xor    esi,esi
  44401a:	test   r13d,r13d
  44401d:	push   QWORD PTR [rsp+0x40]
  444021:	push   r14
  444023:	setne  sil
  444027:	xor    ecx,ecx
  444029:	test   r12d,r12d
  44402c:	setne  cl
  44402f:	xor    edx,edx
  444031:	test   ebx,ebx
  444033:	setne  dl
  444036:	push   rsi
  444037:	push   rcx
  444038:	push   rdx
  444039:	mov    r8,QWORD PTR [rsp+0x58]
  44403e:	movzx  r9d,r9b
  444042:	mov    ecx,DWORD PTR [rsp+0x48]
  444046:	mov    edx,DWORD PTR [rsp+0x50]
  44404a:	mov    rsi,rax
  44404d:	mov    rdi,QWORD PTR [rsp+0x40]
  444052:	call   405ef0 <strcmp@plt+0x2738>
  444057:	add    rsp,0x30
  44405b:	mov    rbx,rax
  44405e:	mov    rdi,r14
  444061:	call   42dac0 <strcmp@plt+0x2a308>
  444066:	test   rbx,rbx
  444069:	je     4440c0 <strcmp@plt+0x40908>
  44406b:	mov    rax,QWORD PTR [rsp+0x10]
  444070:	mov    rsi,QWORD PTR [rbx]
  444073:	mov    rdi,QWORD PTR [rax+0x18]
  444077:	call   432570 <strcmp@plt+0x2edb8>
  44407c:	test   rax,rax
  44407f:	mov    rax,0x468e3c
  444086:	je     4440f0 <strcmp@plt+0x40938>
  444088:	mov    ecx,DWORD PTR [rax]
  44408a:	test   ecx,ecx
  44408c:	jle    4440ac <strcmp@plt+0x408f4>
  44408e:	mov    rdi,QWORD PTR [rbx]
  444091:	call   424890 <strcmp@plt+0x210d8>
  444096:	lea    rsi,[rip+0x11033]        # 4550d0 <strcmp@plt+0x51918>
  44409d:	mov    rdx,rax
  4440a0:	mov    edi,0x5
  4440a5:	xor    eax,eax
  4440a7:	call   4306a0 <strcmp@plt+0x2cee8>
  4440ac:	mov    rdi,rbx
  4440af:	call   430630 <strcmp@plt+0x2ce78>
  4440b4:	add    r15d,0x1
  4440b8:	jmp    443ec8 <strcmp@plt+0x40710>
  4440bd:	nop    DWORD PTR [rax]
  4440c0:	lea    rsi,[rip+0x10246]        # 45430d <strcmp@plt+0x50b55>
  4440c7:	mov    rdi,rbp
  4440ca:	call   4032d0 <cfg_getstr@plt>
  4440cf:	lea    rsi,[rip+0x10efa]        # 454fd0 <strcmp@plt+0x51818>
  4440d6:	mov    rdx,rax
  4440d9:	mov    edi,0x2
  4440de:	xor    eax,eax
  4440e0:	call   4306a0 <strcmp@plt+0x2cee8>
  4440e5:	jmp    4440b4 <strcmp@plt+0x408fc>
  4440e7:	nop    WORD PTR [rax+rax*1+0x0]
  4440f0:	mov    edx,DWORD PTR [rax]
  4440f2:	test   edx,edx
  4440f4:	jle    444114 <strcmp@plt+0x4095c>
  4440f6:	mov    rdi,QWORD PTR [rbx]
  4440f9:	call   424890 <strcmp@plt+0x210d8>
  4440fe:	lea    rsi,[rip+0x1100b]        # 455110 <strcmp@plt+0x51958>
  444105:	mov    rdx,rax
  444108:	mov    edi,0x5
  44410d:	xor    eax,eax
  44410f:	call   4306a0 <strcmp@plt+0x2cee8>
  444114:	mov    rdi,QWORD PTR [rsp+0x10]
  444119:	mov    rsi,rbx
  44411c:	call   413230 <strcmp@plt+0xfa78>
  444121:	jmp    4440b4 <strcmp@plt+0x408fc>
  444123:	lea    rsi,[rip+0x10e56]        # 454f80 <strcmp@plt+0x517c8>
  44412a:	xor    eax,eax
  44412c:	mov    edi,0x2
  444131:	call   4306a0 <strcmp@plt+0x2cee8>
  444136:	xor    eax,eax
  444138:	add    rsp,0x48
  44413c:	pop    rbx
  44413d:	pop    rbp
  44413e:	pop    r12
  444140:	pop    r13
  444142:	pop    r14
  444144:	pop    r15
  444146:	ret    
  444147:	mov    r15,QWORD PTR [rsp+0x10]
  44414c:	xor    ebp,ebp
  44414e:	lea    r13,[rip+0x1040e]        # 454563 <strcmp@plt+0x50dab>
  444155:	mov    r14,QWORD PTR [rsp+0x8]
  44415a:	jmp    444190 <strcmp@plt+0x409d8>
  44415c:	nop    DWORD PTR [rax+0x0]
  444160:	lea    rsi,[rip+0x101a6]        # 45430d <strcmp@plt+0x50b55>
  444167:	mov    rdi,r12
  44416a:	call   4032d0 <cfg_getstr@plt>
  44416f:	lea    rsi,[rip+0x10f0a]        # 455080 <strcmp@plt+0x518c8>
  444176:	mov    rdx,rax
  444179:	mov    edi,0x2
  44417e:	xor    eax,eax
  444180:	call   4306a0 <strcmp@plt+0x2cee8>
  444185:	mov    rdi,rbx
  444188:	call   42a650 <strcmp@plt+0x26e98>
  44418d:	add    ebp,0x1
  444190:	mov    rsi,r13
  444193:	mov    rdi,r14
  444196:	call   403750 <cfg_size@plt>
  44419b:	cmp    eax,ebp
  44419d:	jbe    444240 <strcmp@plt+0x40a88>
  4441a3:	mov    edx,ebp
  4441a5:	mov    rsi,r13
  4441a8:	mov    rdi,r14
  4441ab:	call   4031e0 <cfg_getnsec@plt>
  4441b0:	mov    rdx,QWORD PTR [rsp+0x38]
  4441b5:	xor    r8d,r8d
  4441b8:	xor    ecx,ecx
  4441ba:	mov    rsi,r15
  4441bd:	mov    rdi,rax
  4441c0:	mov    r12,rax
  4441c3:	call   442c50 <strcmp@plt+0x3f498>
  4441c8:	test   rax,rax
  4441cb:	mov    rbx,rax
  4441ce:	je     44439e <strcmp@plt+0x40be6>
  4441d4:	mov    rdi,QWORD PTR [r15+0x20]
  4441d8:	mov    rsi,rax
  4441db:	call   4325a0 <strcmp@plt+0x2ede8>
  4441e0:	test   rax,rax
  4441e3:	jne    444160 <strcmp@plt+0x409a8>
  4441e9:	mov    rsi,rbx
  4441ec:	mov    rdi,r15
  4441ef:	call   413260 <strcmp@plt+0xfaa8>
  4441f4:	cmp    eax,0x1
  4441f7:	jne    444229 <strcmp@plt+0x40a71>
  4441f9:	mov    rax,0x468e3c
  444200:	mov    eax,DWORD PTR [rax]
  444202:	test   eax,eax
  444204:	jle    44418d <strcmp@plt+0x409d5>
  444206:	mov    rdi,rbx
  444209:	call   424890 <strcmp@plt+0x210d8>
  44420e:	lea    rsi,[rip+0x10f33]        # 455148 <strcmp@plt+0x51990>
  444215:	mov    rdx,rax
  444218:	mov    edi,0x5
  44421d:	xor    eax,eax
  44421f:	call   4306a0 <strcmp@plt+0x2cee8>
  444224:	jmp    44418d <strcmp@plt+0x409d5>
  444229:	mov    rdi,rbx
  44422c:	call   424890 <strcmp@plt+0x210d8>
  444231:	lea    rsi,[rip+0x10df8]        # 455030 <strcmp@plt+0x51878>
  444238:	mov    rdx,rax
  44423b:	jmp    444179 <strcmp@plt+0x409c1>
  444240:	xor    ebx,ebx
  444242:	lea    r14,[rip+0x10334]        # 45457d <strcmp@plt+0x50dc5>
  444249:	mov    QWORD PTR [rsp+0x10],r15
  44424e:	mov    r12,QWORD PTR [rsp+0x8]
  444253:	jmp    4442ba <strcmp@plt+0x40b02>
  444255:	nop    DWORD PTR [rax]
  444258:	mov    edx,ebx
  44425a:	mov    rsi,r14
  44425d:	mov    rdi,r12
  444260:	call   4031e0 <cfg_getnsec@plt>
  444265:	lea    rsi,[rip+0xffcb]        # 454237 <strcmp@plt+0x50a7f>
  44426c:	mov    rdi,rax
  44426f:	mov    rbp,rax
  444272:	call   4032d0 <cfg_getstr@plt>
  444277:	lea    rsi,[rip+0x1009f]        # 45431d <strcmp@plt+0x50b65>
  44427e:	mov    rdi,rbp
  444281:	mov    r15,rax
  444284:	call   4032d0 <cfg_getstr@plt>
  444289:	lea    rsi,[rip+0x1001b]        # 4542ab <strcmp@plt+0x50af3>
  444290:	mov    rdi,rbp
  444293:	mov    r13,rax
  444296:	call   4032d0 <cfg_getstr@plt>
  44429b:	mov    rdi,QWORD PTR [rsp+0x10]
  4442a0:	mov    rcx,r15
  4442a3:	mov    rdx,r13
  4442a6:	mov    rsi,rax
  4442a9:	call   407350 <strcmp@plt+0x3b98>
  4442ae:	cmp    eax,0x1
  4442b1:	jne    4443dc <strcmp@plt+0x40c24>
  4442b7:	add    ebx,0x1
  4442ba:	mov    rsi,r14
  4442bd:	mov    rdi,r12
  4442c0:	call   403750 <cfg_size@plt>
  4442c5:	cmp    eax,ebx
  4442c7:	ja     444258 <strcmp@plt+0x40aa0>
  4442c9:	xor    eax,eax
  4442cb:	mov    r15d,eax
  4442ce:	mov    rdi,QWORD PTR [rsp+0x8]
  4442d3:	lea    rsi,[rip+0x102af]        # 454589 <strcmp@plt+0x50dd1>
  4442da:	call   403750 <cfg_size@plt>
  4442df:	cmp    eax,r15d
  4442e2:	jbe    444435 <strcmp@plt+0x40c7d>
  4442e8:	mov    rdi,QWORD PTR [rsp+0x8]
  4442ed:	lea    rsi,[rip+0x10295]        # 454589 <strcmp@plt+0x50dd1>
  4442f4:	mov    edx,r15d
  4442f7:	xor    ebx,ebx
  4442f9:	lea    r13,[rip+0x10295]        # 454595 <strcmp@plt+0x50ddd>
  444300:	call   4031e0 <cfg_getnsec@plt>
  444305:	mov    rbp,rax
  444308:	call   42d4e0 <strcmp@plt+0x29d28>
  44430d:	lea    rsi,[rip+0x10281]        # 454595 <strcmp@plt+0x50ddd>
  444314:	mov    rdi,rbp
  444317:	mov    r14,rax
  44431a:	call   403750 <cfg_size@plt>
  44431f:	test   eax,eax
  444321:	mov    r12d,eax
  444324:	jle    444355 <strcmp@plt+0x40b9d>
  444326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  444330:	mov    edx,ebx
  444332:	mov    rsi,r13
  444335:	mov    rdi,rbp
  444338:	call   403110 <cfg_getnstr@plt>
  44433d:	test   rax,rax
  444340:	je     44434d <strcmp@plt+0x40b95>
  444342:	mov    rsi,r14
  444345:	mov    rdi,rax
  444348:	call   42d540 <strcmp@plt+0x29d88>
  44434d:	add    ebx,0x1
  444350:	cmp    r12d,ebx
  444353:	jne    444330 <strcmp@plt+0x40b78>
  444355:	lea    rsi,[rip+0xfe4b]        # 4541a7 <strcmp@plt+0x509ef>
  44435c:	mov    rdi,rbp
  44435f:	call   4031a0 <cfg_getint@plt>
  444364:	lea    rsi,[rip+0xff40]        # 4542ab <strcmp@plt+0x50af3>
  44436b:	mov    rdi,rbp
  44436e:	mov    rbx,rax
  444371:	call   4032d0 <cfg_getstr@plt>
  444376:	mov    rdi,QWORD PTR [rsp+0x10]
  44437b:	mov    rcx,r14
  44437e:	mov    edx,ebx
  444380:	mov    rsi,rax
  444383:	call   407500 <strcmp@plt+0x3d48>
  444388:	cmp    eax,0x1
  44438b:	jne    4443d4 <strcmp@plt+0x40c1c>
  44438d:	mov    rdi,r14
  444390:	add    r15d,0x1
  444394:	call   42dac0 <strcmp@plt+0x2a308>
  444399:	jmp    4442ce <strcmp@plt+0x40b16>
  44439e:	lea    rsi,[rip+0xff68]        # 45430d <strcmp@plt+0x50b55>
  4443a5:	mov    rdi,r12
  4443a8:	call   4032d0 <cfg_getstr@plt>
  4443ad:	lea    rsi,[rip+0x10c4c]        # 455000 <strcmp@plt+0x51848>
  4443b4:	mov    rdx,rax
  4443b7:	mov    edi,0x2
  4443bc:	xor    eax,eax
  4443be:	call   4306a0 <strcmp@plt+0x2cee8>
  4443c3:	add    rsp,0x48
  4443c7:	xor    eax,eax
  4443c9:	pop    rbx
  4443ca:	pop    rbp
  4443cb:	pop    r12
  4443cd:	pop    r13
  4443cf:	pop    r14
  4443d1:	pop    r15
  4443d3:	ret    
  4443d4:	mov    rdi,r14
  4443d7:	call   42dac0 <strcmp@plt+0x2a308>
  4443dc:	add    rsp,0x48
  4443e0:	xor    eax,eax
  4443e2:	pop    rbx
  4443e3:	pop    rbp
  4443e4:	pop    r12
  4443e6:	pop    r13
  4443e8:	pop    r14
  4443ea:	pop    r15
  4443ec:	ret    
  4443ed:	lea    rsi,[rip+0x10b4c]        # 454f40 <strcmp@plt+0x51788>
  4443f4:	xor    eax,eax
  4443f6:	mov    edi,0x2
  4443fb:	call   4306a0 <strcmp@plt+0x2cee8>
  444400:	add    rsp,0x48
  444404:	xor    eax,eax
  444406:	pop    rbx
  444407:	pop    rbp
  444408:	pop    r12
  44440a:	pop    r13
  44440c:	pop    r14
  44440e:	pop    r15
  444410:	ret    
  444411:	lea    rsi,[rip+0x10ae0]        # 454ef8 <strcmp@plt+0x51740>
  444418:	xor    eax,eax
  44441a:	mov    edi,0x2
  44441f:	call   4306a0 <strcmp@plt+0x2cee8>
  444424:	add    rsp,0x48
  444428:	xor    eax,eax
  44442a:	pop    rbx
  44442b:	pop    rbp
  44442c:	pop    r12
  44442e:	pop    r13
  444430:	pop    r14
  444432:	pop    r15
  444434:	ret    
  444435:	mov    r15,QWORD PTR [rsp+0x10]
  44443a:	mov    rdi,QWORD PTR [rsp+0x8]
  44443f:	lea    rsi,[rip+0x10154]        # 45459a <strcmp@plt+0x50de2>
  444446:	call   4032d0 <cfg_getstr@plt>
  44444b:	mov    rdi,r15
  44444e:	mov    rsi,rax
  444451:	call   4076b0 <strcmp@plt+0x3ef8>
  444456:	cmp    eax,0x1
  444459:	jne    4443dc <strcmp@plt+0x40c24>
  44445b:	mov    rdi,QWORD PTR [rsp+0x38]
  444460:	mov    DWORD PTR [rsp+0x8],eax
  444464:	call   43a5a0 <strcmp@plt+0x36de8>
  444469:	mov    eax,DWORD PTR [rsp+0x8]
  44446d:	jmp    444138 <strcmp@plt+0x40980>
  444472:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  44447d:	nop    DWORD PTR [rax]
  444480:	push   r15
  444482:	push   r14
  444484:	push   r13
  444486:	push   r12
  444488:	push   rbp
  444489:	push   rbx
  44448a:	sub    rsp,0x28
  44448e:	mov    rbx,0x474850
  444495:	mov    QWORD PTR [rsp+0x10],rdi
  44449a:	mov    edi,0x4
  44449f:	mov    rsi,rbx
  4444a2:	call   408440 <strcmp@plt+0x4c88>
  4444a7:	cmp    eax,0x1
  4444aa:	je     4444c6 <strcmp@plt+0x40d0e>
  4444ac:	lea    rsi,[rip+0x10cdd]        # 455190 <strcmp@plt+0x519d8>
  4444b3:	xor    eax,eax
  4444b5:	mov    edi,0x1
  4444ba:	call   4306a0 <strcmp@plt+0x2cee8>
  4444bf:	xor    eax,eax
  4444c1:	call   43f160 <strcmp@plt+0x3b9a8>
  4444c6:	mov    r15,QWORD PTR [rbx]
  4444c9:	mov    rbx,QWORD PTR [rsp+0x10]
  4444ce:	mov    rdi,rbx
  4444d1:	call   442420 <strcmp@plt+0x3ec68>
  4444d6:	lea    rsi,[rip+0x1002f]        # 45450c <strcmp@plt+0x50d54>
  4444dd:	mov    rdi,rbx
  4444e0:	mov    QWORD PTR [rsp+0x8],rax
  4444e5:	call   4032d0 <cfg_getstr@plt>
  4444ea:	test   rax,rax
  4444ed:	je     4448d9 <strcmp@plt+0x41121>
  4444f3:	mov    rdi,rax
  4444f6:	call   43e570 <strcmp@plt+0x3adb8>
  4444fb:	test   rax,rax
  4444fe:	mov    rbx,rax
  444501:	je     44490e <strcmp@plt+0x41156>
  444507:	mov    esi,0x2
  44450c:	mov    rdi,rax
  44450f:	xor    ebp,ebp
  444511:	call   43ebf0 <strcmp@plt+0x3b438>
  444516:	mov    esi,0xa
  44451b:	mov    rdi,rbx
  44451e:	lea    r12,[rip+0x1008c]        # 4545b1 <strcmp@plt+0x50df9>
  444525:	call   43ebf0 <strcmp@plt+0x3b438>
  44452a:	mov    r13,QWORD PTR [rsp+0x10]
  44452f:	jmp    444583 <strcmp@plt+0x40dcb>
  444531:	nop    DWORD PTR [rax+0x0]
  444538:	mov    rdi,QWORD PTR [r15+0x18]
  44453c:	mov    rsi,QWORD PTR [rax]
  44453f:	call   432570 <strcmp@plt+0x2edb8>
  444544:	test   rax,rax
  444547:	mov    rax,0x468e3c
  44454e:	je     444630 <strcmp@plt+0x40e78>
  444554:	mov    esi,DWORD PTR [rax]
  444556:	test   esi,esi
  444558:	jle    444578 <strcmp@plt+0x40dc0>
  44455a:	mov    rdi,QWORD PTR [r14]
  44455d:	call   424890 <strcmp@plt+0x210d8>
  444562:	lea    rsi,[rip+0x10e27]        # 455390 <strcmp@plt+0x51bd8>
  444569:	mov    rdx,rax
  44456c:	mov    edi,0x5
  444571:	xor    eax,eax
  444573:	call   4306a0 <strcmp@plt+0x2cee8>
  444578:	mov    rdi,r14
  44457b:	call   415070 <strcmp@plt+0x118b8>
  444580:	add    ebp,0x1
  444583:	mov    rsi,r12
  444586:	mov    rdi,r13
  444589:	call   403750 <cfg_size@plt>
  44458e:	cmp    eax,ebp
  444590:	jbe    444664 <strcmp@plt+0x40eac>
  444596:	mov    edx,ebp
  444598:	mov    rsi,r12
  44459b:	mov    rdi,r13
  44459e:	call   4031e0 <cfg_getnsec@plt>
  4445a3:	lea    rsi,[rip+0xfd63]        # 45430d <strcmp@plt+0x50b55>
  4445aa:	mov    rdi,rax
  4445ad:	mov    rbx,rax
  4445b0:	call   4032d0 <cfg_getstr@plt>
  4445b5:	test   rax,rax
  4445b8:	je     444893 <strcmp@plt+0x410db>
  4445be:	lea    rsi,[rip+0x9ca3]        # 44e268 <strcmp@plt+0x4aab0>
  4445c5:	mov    rdi,rbx
  4445c8:	call   4031a0 <cfg_getint@plt>
  4445cd:	lea    rsi,[rip+0xfd39]        # 45430d <strcmp@plt+0x50b55>
  4445d4:	mov    rdi,rbx
  4445d7:	mov    r14,rax
  4445da:	call   4032d0 <cfg_getstr@plt>
  4445df:	mov    rcx,QWORD PTR [rsp+0x8]
  4445e4:	mov    edx,r14d
  4445e7:	mov    rsi,rax
  4445ea:	mov    rdi,r15
  4445ed:	call   405ba0 <strcmp@plt+0x23e8>
  4445f2:	test   rax,rax
  4445f5:	mov    r14,rax
  4445f8:	jne    444538 <strcmp@plt+0x40d80>
  4445fe:	lea    rsi,[rip+0xfd08]        # 45430d <strcmp@plt+0x50b55>
  444605:	mov    rdi,rbx
  444608:	call   4032d0 <cfg_getstr@plt>
  44460d:	lea    rsi,[rip+0x10c84]        # 455298 <strcmp@plt+0x51ae0>
  444614:	mov    rdx,rax
  444617:	mov    edi,0x2
  44461c:	xor    eax,eax
  44461e:	call   4306a0 <strcmp@plt+0x2cee8>
  444623:	jmp    444580 <strcmp@plt+0x40dc8>
  444628:	nop    DWORD PTR [rax+rax*1+0x0]
  444630:	mov    ecx,DWORD PTR [rax]
  444632:	test   ecx,ecx
  444634:	jle    444654 <strcmp@plt+0x40e9c>
  444636:	mov    rdi,QWORD PTR [r14]
  444639:	call   424890 <strcmp@plt+0x210d8>
  44463e:	lea    rsi,[rip+0x10d8b]        # 4553d0 <strcmp@plt+0x51c18>
  444645:	mov    rdx,rax
  444648:	mov    edi,0x5
  44464d:	xor    eax,eax
  44464f:	call   4306a0 <strcmp@plt+0x2cee8>
  444654:	mov    rsi,r14
  444657:	mov    rdi,r15
  44465a:	call   415c40 <strcmp@plt+0x12488>
  44465f:	jmp    444580 <strcmp@plt+0x40dc8>
  444664:	xor    eax,eax
  444666:	mov    QWORD PTR [rsp+0x18],r15
  44466b:	mov    r15d,eax
  44466e:	xchg   ax,ax
  444670:	mov    rdi,QWORD PTR [rsp+0x10]
  444675:	lea    rsi,[rip+0xff43]        # 4545bf <strcmp@plt+0x50e07>
  44467c:	call   403750 <cfg_size@plt>
  444681:	cmp    eax,r15d
  444684:	jbe    4448fd <strcmp@plt+0x41145>
  44468a:	mov    rdi,QWORD PTR [rsp+0x10]
  44468f:	lea    rsi,[rip+0xff29]        # 4545bf <strcmp@plt+0x50e07>
  444696:	mov    edx,r15d
  444699:	call   4031e0 <cfg_getnsec@plt>
  44469e:	mov    rbp,rax
  4446a1:	call   42d4e0 <strcmp@plt+0x29d28>
  4446a6:	lea    rsi,[rip+0xfc60]        # 45430d <strcmp@plt+0x50b55>
  4446ad:	mov    rdi,rbp
  4446b0:	mov    r14,rax
  4446b3:	call   4032d0 <cfg_getstr@plt>
  4446b8:	test   rax,rax
  4446bb:	je     4448b5 <strcmp@plt+0x410fd>
  4446c1:	lea    rsi,[rip+0xff06]        # 4545ce <strcmp@plt+0x50e16>
  4446c8:	mov    rdi,rbp
  4446cb:	call   4032d0 <cfg_getstr@plt>
  4446d0:	test   rax,rax
  4446d3:	je     4448b5 <strcmp@plt+0x410fd>
  4446d9:	lea    rsi,[rip+0xfefe]        # 4545de <strcmp@plt+0x50e26>
  4446e0:	mov    rdi,rbp
  4446e3:	xor    ebx,ebx
  4446e5:	lea    r13,[rip+0xfef2]        # 4545de <strcmp@plt+0x50e26>
  4446ec:	call   403750 <cfg_size@plt>
  4446f1:	test   eax,eax
  4446f3:	mov    r12d,eax
  4446f6:	jle    444725 <strcmp@plt+0x40f6d>
  4446f8:	nop    DWORD PTR [rax+rax*1+0x0]
  444700:	mov    edx,ebx
  444702:	mov    rsi,r13
  444705:	mov    rdi,rbp
  444708:	call   403110 <cfg_getnstr@plt>
  44470d:	test   rax,rax
  444710:	je     44471d <strcmp@plt+0x40f65>
  444712:	mov    rsi,r14
  444715:	mov    rdi,rax
  444718:	call   42d6d0 <strcmp@plt+0x29f18>
  44471d:	add    ebx,0x1
  444720:	cmp    r12d,ebx
  444723:	jne    444700 <strcmp@plt+0x40f48>
  444725:	lea    rsi,[rip+0xfea2]        # 4545ce <strcmp@plt+0x50e16>
  44472c:	mov    rdi,rbp
  44472f:	call   4032d0 <cfg_getstr@plt>
  444734:	test   rax,rax
  444737:	mov    r13,rax
  44473a:	je     444925 <strcmp@plt+0x4116d>
  444740:	mov    rdi,rax
  444743:	call   43b5c0 <strcmp@plt+0x37e08>
  444748:	lea    rdi,[rip+0xfe9b]        # 4545ea <strcmp@plt+0x50e32>
  44474f:	mov    ecx,0xf
  444754:	mov    rsi,rax
  444757:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  444759:	seta   r12b
  44475d:	setb   dl
  444760:	sub    r12d,edx
  444763:	movsx  r12d,r12b
  444767:	test   r12d,r12d
  44476a:	je     444789 <strcmp@plt+0x40fd1>
  44476c:	lea    rdi,[rip+0xfe86]        # 4545f9 <strcmp@plt+0x50e41>
  444773:	mov    ecx,0x14
  444778:	mov    rsi,rax
  44477b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44477d:	jne    444941 <strcmp@plt+0x41189>
  444783:	mov    r12d,0x1
  444789:	mov    rdi,rax
  44478c:	call   4037b0 <free@plt>
  444791:	lea    rsi,[rip+0x9ad0]        # 44e268 <strcmp@plt+0x4aab0>
  444798:	mov    rdi,rbp
  44479b:	call   4031a0 <cfg_getint@plt>
  4447a0:	lea    rsi,[rip+0xfb66]        # 45430d <strcmp@plt+0x50b55>
  4447a7:	mov    rdi,rbp
  4447aa:	mov    rbx,rax
  4447ad:	call   4032d0 <cfg_getstr@plt>
  4447b2:	mov    r13,QWORD PTR [rsp+0x18]
  4447b7:	mov    r9,QWORD PTR [rsp+0x8]
  4447bc:	mov    edx,ebx
  4447be:	mov    r8,r14
  4447c1:	mov    ecx,r12d
  4447c4:	mov    rsi,rax
  4447c7:	mov    rdi,r13
  4447ca:	call   406070 <strcmp@plt+0x28b8>
  4447cf:	mov    rdi,r14
  4447d2:	mov    rbx,rax
  4447d5:	call   42dac0 <strcmp@plt+0x2a308>
  4447da:	test   rbx,rbx
  4447dd:	je     444830 <strcmp@plt+0x41078>
  4447df:	mov    rdi,QWORD PTR [r13+0x20]
  4447e3:	mov    rsi,QWORD PTR [rbx]
  4447e6:	call   432570 <strcmp@plt+0x2edb8>
  4447eb:	test   rax,rax
  4447ee:	mov    rax,0x468e3c
  4447f5:	je     444860 <strcmp@plt+0x410a8>
  4447f7:	mov    edx,DWORD PTR [rax]
  4447f9:	test   edx,edx
  4447fb:	jle    44481b <strcmp@plt+0x41063>
  4447fd:	mov    rdi,QWORD PTR [rbx]
  444800:	call   424890 <strcmp@plt+0x210d8>
  444805:	lea    rsi,[rip+0x10c0c]        # 455418 <strcmp@plt+0x51c60>
  44480c:	mov    rdx,rax
  44480f:	mov    edi,0x5
  444814:	xor    eax,eax
  444816:	call   4306a0 <strcmp@plt+0x2cee8>
  44481b:	mov    rdi,rbx
  44481e:	call   4150a0 <strcmp@plt+0x118e8>
  444823:	add    r15d,0x1
  444827:	jmp    444670 <strcmp@plt+0x40eb8>
  44482c:	nop    DWORD PTR [rax+0x0]
  444830:	lea    rsi,[rip+0xfad6]        # 45430d <strcmp@plt+0x50b55>
  444837:	mov    rdi,rbp
  44483a:	call   4032d0 <cfg_getstr@plt>
  44483f:	lea    rsi,[rip+0x10b1a]        # 455360 <strcmp@plt+0x51ba8>
  444846:	mov    rdx,rax
  444849:	mov    edi,0x2
  44484e:	xor    eax,eax
  444850:	call   4306a0 <strcmp@plt+0x2cee8>
  444855:	jmp    444823 <strcmp@plt+0x4106b>
  444857:	nop    WORD PTR [rax+rax*1+0x0]
  444860:	mov    eax,DWORD PTR [rax]
  444862:	test   eax,eax
  444864:	jle    444884 <strcmp@plt+0x410cc>
  444866:	mov    rdi,QWORD PTR [rbx]
  444869:	call   424890 <strcmp@plt+0x210d8>
  44486e:	lea    rsi,[rip+0x10bf3]        # 455468 <strcmp@plt+0x51cb0>
  444875:	mov    rdx,rax
  444878:	mov    edi,0x5
  44487d:	xor    eax,eax
  44487f:	call   4306a0 <strcmp@plt+0x2cee8>
  444884:	mov    rdi,QWORD PTR [rsp+0x18]
  444889:	mov    rsi,rbx
  44488c:	call   415c80 <strcmp@plt+0x124c8>
  444891:	jmp    444823 <strcmp@plt+0x4106b>
  444893:	lea    rsi,[rip+0x109a6]        # 455240 <strcmp@plt+0x51a88>
  44489a:	mov    edi,0x2
  44489f:	call   4306a0 <strcmp@plt+0x2cee8>
  4448a4:	xor    eax,eax
  4448a6:	add    rsp,0x28
  4448aa:	pop    rbx
  4448ab:	pop    rbp
  4448ac:	pop    r12
  4448ae:	pop    r13
  4448b0:	pop    r14
  4448b2:	pop    r15
  4448b4:	ret    
  4448b5:	lea    rsi,[rip+0x10a0c]        # 4552c8 <strcmp@plt+0x51b10>
  4448bc:	xor    eax,eax
  4448be:	mov    edi,0x2
  4448c3:	call   4306a0 <strcmp@plt+0x2cee8>
  4448c8:	add    rsp,0x28
  4448cc:	xor    eax,eax
  4448ce:	pop    rbx
  4448cf:	pop    rbp
  4448d0:	pop    r12
  4448d2:	pop    r13
  4448d4:	pop    r14
  4448d6:	pop    r15
  4448d8:	ret    
  4448d9:	lea    rsi,[rip+0x10920]        # 455200 <strcmp@plt+0x51a48>
  4448e0:	xor    eax,eax
  4448e2:	mov    edi,0x2
  4448e7:	call   4306a0 <strcmp@plt+0x2cee8>
  4448ec:	add    rsp,0x28
  4448f0:	xor    eax,eax
  4448f2:	pop    rbx
  4448f3:	pop    rbp
  4448f4:	pop    r12
  4448f6:	pop    r13
  4448f8:	pop    r14
  4448fa:	pop    r15
  4448fc:	ret    
  4448fd:	mov    rdi,QWORD PTR [rsp+0x8]
  444902:	call   43a5a0 <strcmp@plt+0x36de8>
  444907:	mov    eax,0x1
  44490c:	jmp    4448a6 <strcmp@plt+0x410ee>
  44490e:	lea    rsi,[rip+0x108a3]        # 4551b8 <strcmp@plt+0x51a00>
  444915:	xor    eax,eax
  444917:	mov    edi,0x2
  44491c:	call   4306a0 <strcmp@plt+0x2cee8>
  444921:	xor    eax,eax
  444923:	jmp    4448a6 <strcmp@plt+0x410ee>
  444925:	lea    rsi,[rip+0x10a04]        # 455330 <strcmp@plt+0x51b78>
  44492c:	xor    eax,eax
  44492e:	xor    edx,edx
  444930:	mov    edi,0x1
  444935:	call   4306a0 <strcmp@plt+0x2cee8>
  44493a:	xor    eax,eax
  44493c:	jmp    4448a6 <strcmp@plt+0x410ee>
  444941:	lea    rsi,[rip+0x109e8]        # 455330 <strcmp@plt+0x51b78>
  444948:	mov    rbx,rax
  44494b:	mov    rdx,r13
  44494e:	xor    eax,eax
  444950:	mov    edi,0x1
  444955:	call   4306a0 <strcmp@plt+0x2cee8>
  44495a:	mov    rdi,rbx
  44495d:	call   4037b0 <free@plt>
  444962:	xor    eax,eax
  444964:	jmp    4448a6 <strcmp@plt+0x410ee>
  444969:	nop    DWORD PTR [rax+0x0]
  444970:	push   r15
  444972:	push   r14
  444974:	push   r13
  444976:	push   r12
  444978:	push   rbp
  444979:	push   rbx
  44497a:	mov    rbp,rdi
  44497d:	mov    edi,0x5
  444982:	sub    rsp,0x18
  444986:	mov    rbx,0x474850
  44498d:	mov    rsi,rbx
  444990:	call   408440 <strcmp@plt+0x4c88>
  444995:	cmp    eax,0x1
  444998:	je     4449b4 <strcmp@plt+0x411fc>
  44499a:	lea    rsi,[rip+0x10b07]        # 4554a8 <strcmp@plt+0x51cf0>
  4449a1:	xor    eax,eax
  4449a3:	mov    edi,0x1
  4449a8:	call   4306a0 <strcmp@plt+0x2cee8>
  4449ad:	xor    eax,eax
  4449af:	call   43f160 <strcmp@plt+0x3b9a8>
  4449b4:	mov    rax,QWORD PTR [rbx]
  4449b7:	mov    rdi,rbp
  4449ba:	mov    QWORD PTR [rsp+0x8],rax
  4449bf:	call   442420 <strcmp@plt+0x3ec68>
  4449c4:	lea    rsi,[rip+0xfb41]        # 45450c <strcmp@plt+0x50d54>
  4449cb:	mov    rdi,rbp
  4449ce:	mov    r15,rax
  4449d1:	call   4032d0 <cfg_getstr@plt>
  4449d6:	test   rax,rax
  4449d9:	je     444aa0 <strcmp@plt+0x412e8>
  4449df:	mov    rdi,rax
  4449e2:	call   43e570 <strcmp@plt+0x3adb8>
  4449e7:	test   rax,rax
  4449ea:	mov    rbx,rax
  4449ed:	je     444ac8 <strcmp@plt+0x41310>
  4449f3:	mov    esi,0x2
  4449f8:	mov    rdi,rax
  4449fb:	lea    r13,[rip+0xfc0b]        # 45460d <strcmp@plt+0x50e55>
  444a02:	call   43ebf0 <strcmp@plt+0x3b438>
  444a07:	mov    rdi,rbx
  444a0a:	mov    esi,0xa
  444a0f:	xor    ebx,ebx
  444a11:	call   43ebf0 <strcmp@plt+0x3b438>
  444a16:	call   42d4e0 <strcmp@plt+0x29d28>
  444a1b:	lea    rsi,[rip+0xfbeb]        # 45460d <strcmp@plt+0x50e55>
  444a22:	mov    rdi,rbp
  444a25:	mov    r14,rax
  444a28:	call   403750 <cfg_size@plt>
  444a2d:	test   eax,eax
  444a2f:	mov    r12d,eax
  444a32:	jle    444adf <strcmp@plt+0x41327>
  444a38:	nop    DWORD PTR [rax+rax*1+0x0]
  444a40:	mov    edx,ebx
  444a42:	mov    rsi,r13
  444a45:	mov    rdi,rbp
  444a48:	call   403110 <cfg_getnstr@plt>
  444a4d:	test   rax,rax
  444a50:	je     444a5d <strcmp@plt+0x412a5>
  444a52:	mov    rsi,r14
  444a55:	mov    rdi,rax
  444a58:	call   42d6d0 <strcmp@plt+0x29f18>
  444a5d:	add    ebx,0x1
  444a60:	cmp    r12d,ebx
  444a63:	jne    444a40 <strcmp@plt+0x41288>
  444a65:	mov    rdi,QWORD PTR [rsp+0x8]
  444a6a:	mov    rdx,r15
  444a6d:	mov    rsi,r14
  444a70:	call   4061e0 <strcmp@plt+0x2a28>
  444a75:	mov    rdi,r15
  444a78:	call   43a5a0 <strcmp@plt+0x36de8>
  444a7d:	mov    rdi,r14
  444a80:	call   42dac0 <strcmp@plt+0x2a308>
  444a85:	mov    eax,0x1
  444a8a:	add    rsp,0x18
  444a8e:	pop    rbx
  444a8f:	pop    rbp
  444a90:	pop    r12
  444a92:	pop    r13
  444a94:	pop    r14
  444a96:	pop    r15
  444a98:	ret    
  444a99:	nop    DWORD PTR [rax+0x0]
  444aa0:	lea    rsi,[rip+0x10a81]        # 455528 <strcmp@plt+0x51d70>
  444aa7:	xor    eax,eax
  444aa9:	mov    edi,0x2
  444aae:	call   4306a0 <strcmp@plt+0x2cee8>
  444ab3:	add    rsp,0x18
  444ab7:	xor    eax,eax
  444ab9:	pop    rbx
  444aba:	pop    rbp
  444abb:	pop    r12
  444abd:	pop    r13
  444abf:	pop    r14
  444ac1:	pop    r15
  444ac3:	ret    
  444ac4:	nop    DWORD PTR [rax+0x0]
  444ac8:	lea    rsi,[rip+0x10a09]        # 4554d8 <strcmp@plt+0x51d20>
  444acf:	xor    eax,eax
  444ad1:	mov    edi,0x2
  444ad6:	call   4306a0 <strcmp@plt+0x2cee8>
  444adb:	xor    eax,eax
  444add:	jmp    444a8a <strcmp@plt+0x412d2>
  444adf:	lea    rsi,[rip+0x10a8a]        # 455570 <strcmp@plt+0x51db8>
  444ae6:	xor    eax,eax
  444ae8:	mov    edi,0x2
  444aed:	call   4306a0 <strcmp@plt+0x2cee8>
  444af2:	xor    eax,eax
  444af4:	jmp    444a8a <strcmp@plt+0x412d2>
  444af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  444b00:	push   r14
  444b02:	push   r13
  444b04:	mov    ecx,0x276
  444b09:	push   r12
  444b0b:	push   rbp
  444b0c:	lea    rdx,[rip+0xf872]        # 454385 <strcmp@plt+0x50bcd>
  444b13:	push   rbx
  444b14:	lea    rbx,[rip+0xfa48]        # 454563 <strcmp@plt+0x50dab>
  444b1b:	lea    r14,[rip+0xfb94]        # 4546b6 <strcmp@plt+0x50efe>
  444b22:	mov    esi,0x4
  444b27:	sub    rsp,0x13c0
  444b2e:	mov    rax,QWORD PTR fs:0x28
  444b37:	mov    QWORD PTR [rsp+0x13b8],rax
  444b3f:	xor    eax,eax
  444b41:	mov    rdi,rsp
  444b44:	rep stos QWORD PTR es:[rdi],rax
  444b47:	lea    rax,[rip+0xfad6]        # 454624 <strcmp@plt+0x50e6c>
  444b4e:	mov    QWORD PTR [rsp+0x90],rbx
  444b56:	lea    rbx,[rip+0xfac3]        # 454620 <strcmp@plt+0x50e68>
  444b5d:	mov    DWORD PTR [rsp+0x10],0x5
  444b65:	mov    DWORD PTR [rsp+0x20],0x1
  444b6d:	mov    rdi,rsp
  444b70:	mov    QWORD PTR [rsp],rax
  444b74:	lea    rax,[rip+0x27345]        # 46bec0 <strcmp@plt+0x68708>
  444b7b:	mov    QWORD PTR [rsp+0x120],rbx
  444b83:	mov    DWORD PTR [rsp+0xa0],0x5
  444b8e:	mov    DWORD PTR [rsp+0xb0],0x1
  444b99:	mov    QWORD PTR [rsp+0x28],rax
  444b9e:	mov    QWORD PTR [rsp+0xb8],rax
  444ba6:	mov    QWORD PTR [rsp+0x148],rax
  444bae:	lea    rax,[rip+0xf8ae]        # 454463 <strcmp@plt+0x50cab>
  444bb5:	mov    DWORD PTR [rsp+0x130],0x5
  444bc0:	mov    DWORD PTR [rsp+0x140],0x1
  444bcb:	mov    DWORD PTR [rsp+0x1c0],0x5
  444bd6:	mov    QWORD PTR [rsp+0x1b0],rax
  444bde:	lea    rax,[rip+0x2709b]        # 46bc80 <strcmp@plt+0x684c8>
  444be5:	mov    DWORD PTR [rsp+0x1d0],0x1
  444bf0:	mov    DWORD PTR [rsp+0x250],0x5
  444bfb:	mov    DWORD PTR [rsp+0x260],0x1
  444c06:	mov    QWORD PTR [rsp+0x1d8],rax
  444c0e:	lea    rax,[rip+0xf604]        # 454219 <strcmp@plt+0x50a61>
  444c15:	mov    DWORD PTR [rsp+0x2e0],0x5
  444c20:	mov    DWORD PTR [rsp+0x2f0],0x1
  444c2b:	mov    QWORD PTR [rsp+0x240],rax
  444c33:	lea    rax,[rip+0x26d66]        # 46b9a0 <strcmp@plt+0x681e8>
  444c3a:	mov    QWORD PTR [rsp+0x268],rax
  444c42:	lea    rax,[rip+0xf864]        # 4544ad <strcmp@plt+0x50cf5>
  444c49:	mov    QWORD PTR [rsp+0x2d0],rax
  444c51:	lea    rax,[rip+0x26c28]        # 46b880 <strcmp@plt+0x680c8>
  444c58:	mov    QWORD PTR [rsp+0x2f8],rax
  444c60:	lea    rax,[rip+0xf70f]        # 454376 <strcmp@plt+0x50bbe>
  444c67:	mov    QWORD PTR [rsp+0x360],rax
  444c6f:	lea    rax,[rip+0x269ca]        # 46b640 <strcmp@plt+0x67e88>
  444c76:	mov    QWORD PTR [rsp+0x3f0],rdx
  444c7e:	mov    DWORD PTR [rsp+0x370],0x5
  444c89:	mov    DWORD PTR [rsp+0x380],0x1
  444c94:	mov    QWORD PTR [rsp+0x388],rax
  444c9c:	mov    QWORD PTR [rsp+0x418],rax
  444ca4:	lea    rax,[rip+0xf737]        # 4543e2 <strcmp@plt+0x50c2a>
  444cab:	mov    DWORD PTR [rsp+0x400],0x5
  444cb6:	mov    DWORD PTR [rsp+0x410],0x1
  444cc1:	mov    QWORD PTR [rsp+0x480],rax
  444cc9:	lea    rax,[rip+0xf965]        # 454635 <strcmp@plt+0x50e7d>
  444cd0:	mov    DWORD PTR [rsp+0x490],0x3
  444cdb:	mov    DWORD PTR [rsp+0x520],0x5
  444ce6:	mov    DWORD PTR [rsp+0x530],0x1
  444cf1:	mov    QWORD PTR [rsp+0x4c8],rax
  444cf9:	lea    rax,[rip+0xf713]        # 454413 <strcmp@plt+0x50c5b>
  444d00:	mov    DWORD PTR [rsp+0x5b0],0x1
  444d0b:	mov    DWORD PTR [rsp+0x640],0x1
  444d16:	mov    QWORD PTR [rsp+0x6c0],r14
  444d1e:	mov    QWORD PTR [rsp+0x510],rax
  444d26:	lea    rax,[rip+0x266d3]        # 46b400 <strcmp@plt+0x67c48>
  444d2d:	mov    DWORD PTR [rsp+0x6d0],0x1
  444d38:	mov    DWORD PTR [rsp+0x760],0x3
  444d43:	mov    DWORD PTR [rsp+0x7f0],0x3
  444d4e:	mov    QWORD PTR [rsp+0x538],rax
  444d56:	lea    rax,[rip+0xf6a2]        # 4543ff <strcmp@plt+0x50c47>
  444d5d:	mov    DWORD PTR [rsp+0x880],0x1
  444d68:	mov    DWORD PTR [rsp+0x910],0x3
  444d73:	mov    DWORD PTR [rsp+0x920],0x2
  444d7e:	mov    QWORD PTR [rsp+0x5a0],rax
  444d86:	lea    rax,[rip+0xf8ad]        # 45463a <strcmp@plt+0x50e82>
  444d8d:	mov    DWORD PTR [rsp+0x9a0],0x3
  444d98:	mov    QWORD PTR [rsp+0x630],rax
  444da0:	lea    rax,[rip+0xf8a0]        # 454647 <strcmp@plt+0x50e8f>
  444da7:	mov    QWORD PTR [rsp+0x750],rax
  444daf:	lea    rax,[rip+0xf89a]        # 454650 <strcmp@plt+0x50e98>
  444db6:	mov    QWORD PTR [rsp+0x7e0],rax
  444dbe:	lea    rax,[rip+0xda56]        # 45281b <strcmp@plt+0x4f063>
  444dc5:	mov    QWORD PTR [rsp+0x828],rax
  444dcd:	lea    rax,[rip+0xf887]        # 45465b <strcmp@plt+0x50ea3>
  444dd4:	mov    QWORD PTR [rsp+0x870],rax
  444ddc:	lea    rax,[rip+0xf338]        # 45411b <strcmp@plt+0x50963>
  444de3:	mov    QWORD PTR [rsp+0x900],rax
  444deb:	lea    rax,[rip+0xf5b9]        # 4543ab <strcmp@plt+0x50bf3>
  444df2:	mov    QWORD PTR [rsp+0x990],rax
  444dfa:	lea    rax,[rip+0xf5d0]        # 4543d1 <strcmp@plt+0x50c19>
  444e01:	mov    DWORD PTR [rsp+0x9b0],0x2
  444e0c:	mov    DWORD PTR [rsp+0xa30],0x3
  444e17:	mov    DWORD PTR [rsp+0xa40],0x2
  444e22:	mov    QWORD PTR [rsp+0xa20],rax
  444e2a:	lea    rax,[rip+0xf840]        # 454671 <strcmp@plt+0x50eb9>
  444e31:	mov    DWORD PTR [rsp+0xac0],0x3
  444e3c:	mov    DWORD PTR [rsp+0xb50],0x4
  444e47:	mov    DWORD PTR [rsp+0xbe0],0x3
  444e52:	mov    QWORD PTR [rsp+0xab0],rax
  444e5a:	lea    rax,[rip+0xf67b]        # 4544dc <strcmp@plt+0x50d24>
  444e61:	mov    DWORD PTR [rsp+0xc70],0x3
  444e6c:	mov    DWORD PTR [rsp+0xd00],0x5
  444e77:	mov    DWORD PTR [rsp+0xd10],0x1
  444e82:	mov    QWORD PTR [rsp+0xb40],rax
  444e8a:	lea    rax,[rip+0xf67b]        # 45450c <strcmp@plt+0x50d54>
  444e91:	mov    DWORD PTR [rsp+0xd90],0x5
  444e9c:	mov    DWORD PTR [rsp+0xda0],0x1
  444ea7:	mov    DWORD PTR [rsp+0xe20],0x5
  444eb2:	mov    QWORD PTR [rsp+0xbd0],rax
  444eba:	lea    rax,[rip+0xf7bf]        # 454680 <strcmp@plt+0x50ec8>
  444ec1:	mov    DWORD PTR [rsp+0xe30],0x1
  444ecc:	mov    DWORD PTR [rsp+0xeb0],0x5
  444ed7:	mov    DWORD PTR [rsp+0xec0],0x1
  444ee2:	mov    QWORD PTR [rsp+0xc60],rax
  444eea:	lea    rax,[rip+0xf629]        # 45451a <strcmp@plt+0x50d62>
  444ef1:	mov    DWORD PTR [rsp+0xf40],0x5
  444efc:	mov    DWORD PTR [rsp+0xf50],0x1
  444f07:	mov    QWORD PTR [rsp+0xcf0],rax
  444f0f:	lea    rax,[rip+0x25f4a]        # 46ae60 <strcmp@plt+0x676a8>
  444f16:	mov    QWORD PTR [rsp+0xd18],rax
  444f1e:	lea    rax,[rip+0xf233]        # 454158 <strcmp@plt+0x509a0>
  444f25:	mov    QWORD PTR [rsp+0xd80],rax
  444f2d:	lea    rax,[rip+0x25d6c]        # 46aca0 <strcmp@plt+0x674e8>
  444f34:	mov    QWORD PTR [rsp+0xda8],rax
  444f3c:	lea    rax,[rip+0xf353]        # 454296 <strcmp@plt+0x50ade>
  444f43:	mov    QWORD PTR [rsp+0xe10],rax
  444f4b:	lea    rax,[rip+0x25b8e]        # 46aae0 <strcmp@plt+0x67328>
  444f52:	mov    QWORD PTR [rsp+0xe38],rax
  444f5a:	lea    rax,[rip+0xf35e]        # 4542bf <strcmp@plt+0x50b07>
  444f61:	mov    QWORD PTR [rsp+0xea0],rax
  444f69:	lea    rax,[rip+0x25770]        # 46a6e0 <strcmp@plt+0x66f28>
  444f70:	mov    QWORD PTR [rsp+0xec8],rax
  444f78:	lea    rax,[rip+0xf632]        # 4545b1 <strcmp@plt+0x50df9>
  444f7f:	mov    QWORD PTR [rsp+0xf30],rax
  444f87:	lea    rax,[rip+0x25592]        # 46a520 <strcmp@plt+0x66d68>
  444f8e:	mov    QWORD PTR [rsp+0xf58],rax
  444f96:	lea    rax,[rip+0xf622]        # 4545bf <strcmp@plt+0x50e07>
  444f9d:	mov    QWORD PTR [rsp+0xfc0],rax
  444fa5:	lea    rax,[rip+0x25294]        # 46a240 <strcmp@plt+0x66a88>
  444fac:	mov    DWORD PTR [rsp+0xfd0],0x5
  444fb7:	mov    DWORD PTR [rsp+0xfe0],0x1
  444fc2:	mov    DWORD PTR [rsp+0x1060],0x3
  444fcd:	mov    QWORD PTR [rsp+0xfe8],rax
  444fd5:	lea    rax,[rip+0xf631]        # 45460d <strcmp@plt+0x50e55>
  444fdc:	mov    DWORD PTR [rsp+0x1070],0x2
  444fe7:	mov    DWORD PTR [rsp+0x10f0],0x5
  444ff2:	mov    DWORD PTR [rsp+0x1100],0x1
  444ffd:	mov    QWORD PTR [rsp+0x1050],rax
  445005:	lea    rax,[rip+0xf57d]        # 454589 <strcmp@plt+0x50dd1>
  44500c:	mov    DWORD PTR [rsp+0x1180],0x5
  445017:	mov    DWORD PTR [rsp+0x1190],0x1
  445022:	mov    DWORD PTR [rsp+0x1210],0x3
  44502d:	mov    QWORD PTR [rsp+0x10e0],rax
  445035:	lea    rax,[rip+0x24fc4]        # 46a000 <strcmp@plt+0x66848>
  44503c:	mov    DWORD PTR [rsp+0x12a0],0x5
  445047:	mov    DWORD PTR [rsp+0x12b0],0x1
  445052:	mov    QWORD PTR [rsp+0x1108],rax
  44505a:	lea    rax,[rip+0xf51c]        # 45457d <strcmp@plt+0x50dc5>
  445061:	mov    QWORD PTR [rsp+0x1170],rax
  445069:	lea    rax,[rip+0x24d50]        # 469dc0 <strcmp@plt+0x66608>
  445070:	mov    QWORD PTR [rsp+0x1198],rax
  445078:	lea    rax,[rip+0xf51b]        # 45459a <strcmp@plt+0x50de2>
  44507f:	mov    QWORD PTR [rsp+0x1200],rax
  445087:	lea    rax,[rip+0xf434]        # 4544c2 <strcmp@plt+0x50d0a>
  44508e:	mov    QWORD PTR [rsp+0x1290],rax
  445096:	lea    rax,[rip+0x24ae3]        # 469b80 <strcmp@plt+0x663c8>
  44509d:	mov    QWORD PTR [rsp+0x12b8],rax
  4450a5:	call   4033a0 <cfg_init@plt>
  4450aa:	mov    r12,0x4747c8
  4450b1:	mov    rdi,rax
  4450b4:	mov    rbx,rax
  4450b7:	mov    rsi,QWORD PTR [r12]
  4450bb:	call   4036f0 <cfg_parse@plt>
  4450c0:	cmp    eax,0xffffffff
  4450c3:	je     445390 <strcmp@plt+0x41bd8>
  4450c9:	cmp    eax,0x1
  4450cc:	mov    ebp,eax
  4450ce:	je     4453f8 <strcmp@plt+0x41c40>
  4450d4:	mov    r13,0x468e3c
  4450db:	mov    eax,DWORD PTR [r13+0x0]
  4450df:	cmp    eax,0xffffffff
  4450e2:	je     4452e0 <strcmp@plt+0x41b28>
  4450e8:	cmp    eax,0x1
  4450eb:	je     445340 <strcmp@plt+0x41b88>
  4450f1:	cmp    eax,0x2
  4450f4:	je     445370 <strcmp@plt+0x41bb8>
  4450fa:	cmp    eax,0x3
  4450fd:	je     445306 <strcmp@plt+0x41b4e>
  445103:	lea    rsi,[rip+0xf53d]        # 454647 <strcmp@plt+0x50e8f>
  44510a:	mov    rdi,rbx
  44510d:	call   4032d0 <cfg_getstr@plt>
  445112:	mov    rdx,0x4747bc
  445119:	cmp    DWORD PTR [rdx],0x1
  44511c:	je     445360 <strcmp@plt+0x41ba8>
  445122:	lea    rsi,[rip+0xf527]        # 454650 <strcmp@plt+0x50e98>
  445129:	mov    rdi,rbx
  44512c:	call   4032d0 <cfg_getstr@plt>
  445131:	mov    rdi,rax
  445134:	mov    r14,rax
  445137:	call   43b5c0 <strcmp@plt+0x37e08>
  44513c:	lea    rdi,[rip+0xf58f]        # 4546d2 <strcmp@plt+0x50f1a>
  445143:	mov    ecx,0x7
  445148:	mov    rsi,rax
  44514b:	mov    r12,rax
  44514e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  445150:	jne    445280 <strcmp@plt+0x41ac8>
  445156:	mov    edx,DWORD PTR [r13+0x0]
  44515a:	mov    rax,0x473dc0
  445161:	test   edx,edx
  445163:	mov    DWORD PTR [rax],0x0
  445169:	jle    44517e <strcmp@plt+0x419c6>
  44516b:	lea    rsi,[rip+0xf57c]        # 4546ee <strcmp@plt+0x50f36>
  445172:	mov    edi,0x5
  445177:	xor    eax,eax
  445179:	call   4306a0 <strcmp@plt+0x2cee8>
  44517e:	mov    rdi,r12
  445181:	call   4037b0 <free@plt>
  445186:	lea    rsi,[rip+0xf4e4]        # 454671 <strcmp@plt+0x50eb9>
  44518d:	mov    rdi,rbx
  445190:	call   4032d0 <cfg_getstr@plt>
  445195:	test   rax,rax
  445198:	je     445248 <strcmp@plt+0x41a90>
  44519e:	mov    rdi,rax
  4451a1:	call   43b5c0 <strcmp@plt+0x37e08>
  4451a6:	lea    rdi,[rip+0xf52c]        # 4546d9 <strcmp@plt+0x50f21>
  4451ad:	mov    ecx,0x4
  4451b2:	mov    rsi,rax
  4451b5:	mov    r12,rax
  4451b8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4451ba:	je     445320 <strcmp@plt+0x41b68>
  4451c0:	lea    rdi,[rip+0xf516]        # 4546dd <strcmp@plt+0x50f25>
  4451c7:	mov    ecx,0x3
  4451cc:	mov    rsi,rax
  4451cf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4451d1:	je     445330 <strcmp@plt+0x41b78>
  4451d7:	lea    rdi,[rip+0x2b1d]        # 447cfb <strcmp@plt+0x44543>
  4451de:	mov    ecx,0x4
  4451e3:	mov    rsi,rax
  4451e6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4451e8:	je     4453c0 <strcmp@plt+0x41c08>
  4451ee:	lea    rdi,[rip+0xf4eb]        # 4546e0 <strcmp@plt+0x50f28>
  4451f5:	mov    ecx,0x3
  4451fa:	mov    rsi,rax
  4451fd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4451ff:	je     4452d0 <strcmp@plt+0x41b18>
  445205:	lea    rdi,[rip+0xf4d7]        # 4546e3 <strcmp@plt+0x50f2b>
  44520c:	mov    ecx,0x4
  445211:	mov    rsi,rax
  445214:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  445216:	je     445408 <strcmp@plt+0x41c50>
  44521c:	lea    rdi,[rip+0xf4c4]        # 4546e7 <strcmp@plt+0x50f2f>
  445223:	mov    ecx,0x7
  445228:	mov    rsi,rax
  44522b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  44522d:	jne    445420 <strcmp@plt+0x41c68>
  445233:	mov    rdi,rbx
  445236:	call   444970 <strcmp@plt+0x411b8>
  44523b:	mov    ebp,eax
  44523d:	nop    DWORD PTR [rax]
  445240:	mov    rdi,r12
  445243:	call   4037b0 <free@plt>
  445248:	mov    rdi,rbx
  44524b:	call   403150 <cfg_free@plt>
  445250:	mov    rcx,QWORD PTR [rsp+0x13b8]
  445258:	xor    rcx,QWORD PTR fs:0x28
  445261:	mov    eax,ebp
  445263:	jne    445469 <strcmp@plt+0x41cb1>
  445269:	add    rsp,0x13c0
  445270:	pop    rbx
  445271:	pop    rbp
  445272:	pop    r12
  445274:	pop    r13
  445276:	pop    r14
  445278:	ret    
  445279:	nop    DWORD PTR [rax+0x0]
  445280:	lea    rdi,[rip+0xf2f1]        # 454578 <strcmp@plt+0x50dc0>
  445287:	mov    ecx,0x5
  44528c:	mov    rsi,rax
  44528f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  445291:	jne    4453d0 <strcmp@plt+0x41c18>
  445297:	mov    rax,0x473dc0
  44529e:	mov    DWORD PTR [rax],0x1
  4452a4:	mov    eax,DWORD PTR [r13+0x0]
  4452a8:	test   eax,eax
  4452aa:	jle    44517e <strcmp@plt+0x419c6>
  4452b0:	lea    rsi,[rip+0x103a1]        # 455658 <strcmp@plt+0x51ea0>
  4452b7:	mov    edi,0x5
  4452bc:	xor    eax,eax
  4452be:	call   4306a0 <strcmp@plt+0x2cee8>
  4452c3:	jmp    44517e <strcmp@plt+0x419c6>
  4452c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4452d0:	mov    rdi,rbx
  4452d3:	call   443c80 <strcmp@plt+0x404c8>
  4452d8:	mov    ebp,eax
  4452da:	jmp    445240 <strcmp@plt+0x41a88>
  4452df:	nop
  4452e0:	mov    rsi,r14
  4452e3:	mov    rdi,rbx
  4452e6:	call   4031a0 <cfg_getint@plt>
  4452eb:	test   eax,eax
  4452ed:	mov    ebp,eax
  4452ef:	jle    445450 <strcmp@plt+0x41c98>
  4452f5:	cmp    eax,0x3
  4452f8:	jle    445460 <strcmp@plt+0x41ca8>
  4452fe:	mov    DWORD PTR [r13+0x0],0x3
  445306:	lea    rsi,[rip+0xf3af]        # 4546bc <strcmp@plt+0x50f04>
  44530d:	mov    edi,0x4
  445312:	xor    eax,eax
  445314:	call   4306a0 <strcmp@plt+0x2cee8>
  445319:	jmp    445103 <strcmp@plt+0x4194b>
  44531e:	xchg   ax,ax
  445320:	mov    rdi,rbx
  445323:	call   443b00 <strcmp@plt+0x40348>
  445328:	mov    ebp,eax
  44532a:	jmp    445240 <strcmp@plt+0x41a88>
  44532f:	nop
  445330:	mov    rdi,rbx
  445333:	call   443e10 <strcmp@plt+0x40658>
  445338:	mov    ebp,eax
  44533a:	jmp    445240 <strcmp@plt+0x41a88>
  44533f:	nop
  445340:	lea    rsi,[rip+0xf348]        # 45468f <strcmp@plt+0x50ed7>
  445347:	mov    edi,0x4
  44534c:	xor    eax,eax
  44534e:	call   4306a0 <strcmp@plt+0x2cee8>
  445353:	jmp    445103 <strcmp@plt+0x4194b>
  445358:	nop    DWORD PTR [rax+rax*1+0x0]
  445360:	mov    rdi,rax
  445363:	call   430ea0 <strcmp@plt+0x2d6e8>
  445368:	jmp    445122 <strcmp@plt+0x4196a>
  44536d:	nop    DWORD PTR [rax]
  445370:	lea    rsi,[rip+0xf32d]        # 4546a4 <strcmp@plt+0x50eec>
  445377:	mov    edi,0x4
  44537c:	xor    eax,eax
  44537e:	call   4306a0 <strcmp@plt+0x2cee8>
  445383:	jmp    445103 <strcmp@plt+0x4194b>
  445388:	nop    DWORD PTR [rax+rax*1+0x0]
  445390:	mov    rdx,QWORD PTR [r12]
  445394:	lea    rsi,[rip+0xd8d5]        # 452c70 <strcmp@plt+0x4f4b8>
  44539b:	mov    edi,0x1
  4453a0:	xor    eax,eax
  4453a2:	xor    ebp,ebp
  4453a4:	call   4306a0 <strcmp@plt+0x2cee8>
  4453a9:	mov    rdi,rbx
  4453ac:	call   403150 <cfg_free@plt>
  4453b1:	jmp    445250 <strcmp@plt+0x41a98>
  4453b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4453c0:	mov    rdi,rbx
  4453c3:	call   4437d0 <strcmp@plt+0x40018>
  4453c8:	mov    ebp,eax
  4453ca:	jmp    445240 <strcmp@plt+0x41a88>
  4453cf:	nop
  4453d0:	lea    rsi,[rip+0x10221]        # 4555f8 <strcmp@plt+0x51e40>
  4453d7:	mov    rdx,r14
  4453da:	mov    edi,0x1
  4453df:	xor    eax,eax
  4453e1:	xor    ebp,ebp
  4453e3:	call   4306a0 <strcmp@plt+0x2cee8>
  4453e8:	mov    rdi,r12
  4453eb:	call   4037b0 <free@plt>
  4453f0:	jmp    445250 <strcmp@plt+0x41a98>
  4453f5:	nop    DWORD PTR [rax]
  4453f8:	mov    rdx,QWORD PTR [r12]
  4453fc:	lea    rsi,[rip+0x101ad]        # 4555b0 <strcmp@plt+0x51df8>
  445403:	jmp    44539b <strcmp@plt+0x41be3>
  445405:	nop    DWORD PTR [rax]
  445408:	mov    rdi,rbx
  44540b:	call   444480 <strcmp@plt+0x40cc8>
  445410:	mov    ebp,eax
  445412:	jmp    445240 <strcmp@plt+0x41a88>
  445417:	nop    WORD PTR [rax+rax*1+0x0]
  445420:	lea    rsi,[rip+0x10201]        # 455628 <strcmp@plt+0x51e70>
  445427:	mov    rdx,rax
  44542a:	mov    edi,0x1
  44542f:	xor    eax,eax
  445431:	xor    ebp,ebp
  445433:	call   4306a0 <strcmp@plt+0x2cee8>
  445438:	mov    rdi,rbx
  44543b:	call   403150 <cfg_free@plt>
  445440:	mov    rdi,r12
  445443:	call   4037b0 <free@plt>
  445448:	jmp    445250 <strcmp@plt+0x41a98>
  44544d:	nop    DWORD PTR [rax]
  445450:	mov    DWORD PTR [r13+0x0],0x0
  445458:	jmp    445103 <strcmp@plt+0x4194b>
  44545d:	nop    DWORD PTR [rax]
  445460:	mov    DWORD PTR [r13+0x0],eax
  445464:	jmp    4450e8 <strcmp@plt+0x41930>
  445469:	call   403460 <__stack_chk_fail@plt>
  44546e:	xchg   ax,ax
  445470:	endbr64 
  445474:	push   r15
  445476:	lea    r15,[rip+0x227ab]        # 467c28 <strcmp@plt+0x64470>
  44547d:	push   r14
  44547f:	mov    r14,rdx
  445482:	push   r13
  445484:	mov    r13,rsi
  445487:	push   r12
  445489:	mov    r12d,edi
  44548c:	push   rbp
  44548d:	lea    rbp,[rip+0x2279c]        # 467c30 <strcmp@plt+0x64478>
  445494:	push   rbx
  445495:	sub    rbp,r15
  445498:	sub    rsp,0x8
  44549c:	call   403000 <__printf_chk@plt-0x30>
  4454a1:	sar    rbp,0x3
  4454a5:	je     4454c6 <strcmp@plt+0x41d0e>
  4454a7:	xor    ebx,ebx
  4454a9:	nop    DWORD PTR [rax+0x0]
  4454b0:	mov    rdx,r14
  4454b3:	mov    rsi,r13
  4454b6:	mov    edi,r12d
  4454b9:	call   QWORD PTR [r15+rbx*8]
  4454bd:	add    rbx,0x1
  4454c1:	cmp    rbp,rbx
  4454c4:	jne    4454b0 <strcmp@plt+0x41cf8>
  4454c6:	add    rsp,0x8
  4454ca:	pop    rbx
  4454cb:	pop    rbp
  4454cc:	pop    r12
  4454ce:	pop    r13
  4454d0:	pop    r14
  4454d2:	pop    r15
  4454d4:	ret    
  4454d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4454e0:	endbr64 
  4454e4:	ret    

Disassembly of section .fini:

00000000004454e8 <.fini>:
  4454e8:	endbr64 
  4454ec:	sub    rsp,0x8
  4454f0:	add    rsp,0x8
  4454f4:	ret    
