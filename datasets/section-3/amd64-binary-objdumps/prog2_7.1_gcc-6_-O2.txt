
../repos/prog2/7.1:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x3fe9]        # 405ff8 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <free@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <free@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x3fe2]        # 406008 <_IO_stdin_used@@Base+0x2008>
  402026:	jmp    QWORD PTR [rip+0x3fe4]        # 406010 <_IO_stdin_used@@Base+0x2010>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <free@plt>:
  402030:	jmp    QWORD PTR [rip+0x3fe2]        # 406018 <free@GLIBC_2.2.5>
  402036:	push   0x0
  40203b:	jmp    402020 <free@plt-0x10>

0000000000402040 <putchar@plt>:
  402040:	jmp    QWORD PTR [rip+0x3fda]        # 406020 <putchar@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <free@plt-0x10>

0000000000402050 <strcpy@plt>:
  402050:	jmp    QWORD PTR [rip+0x3fd2]        # 406028 <strcpy@GLIBC_2.2.5>
  402056:	push   0x2
  40205b:	jmp    402020 <free@plt-0x10>

0000000000402060 <puts@plt>:
  402060:	jmp    QWORD PTR [rip+0x3fca]        # 406030 <puts@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <free@plt-0x10>

0000000000402070 <fclose@plt>:
  402070:	jmp    QWORD PTR [rip+0x3fc2]        # 406038 <fclose@GLIBC_2.2.5>
  402076:	push   0x4
  40207b:	jmp    402020 <free@plt-0x10>

0000000000402080 <strlen@plt>:
  402080:	jmp    QWORD PTR [rip+0x3fba]        # 406040 <strlen@GLIBC_2.2.5>
  402086:	push   0x5
  40208b:	jmp    402020 <free@plt-0x10>

0000000000402090 <__stack_chk_fail@plt>:
  402090:	jmp    QWORD PTR [rip+0x3fb2]        # 406048 <__stack_chk_fail@GLIBC_2.4>
  402096:	push   0x6
  40209b:	jmp    402020 <free@plt-0x10>

00000000004020a0 <fgets@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x3faa]        # 406050 <fgets@GLIBC_2.2.5>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <free@plt-0x10>

00000000004020b0 <strcmp@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x3fa2]        # 406058 <strcmp@GLIBC_2.2.5>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <free@plt-0x10>

00000000004020c0 <memcpy@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x3f9a]        # 406060 <memcpy@GLIBC_2.14>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <free@plt-0x10>

00000000004020d0 <__stpcpy_chk@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x3f92]        # 406068 <__stpcpy_chk@GLIBC_2.3.4>
  4020d6:	push   0xa
  4020db:	jmp    402020 <free@plt-0x10>

00000000004020e0 <malloc@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x3f8a]        # 406070 <malloc@GLIBC_2.2.5>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <free@plt-0x10>

00000000004020f0 <realloc@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x3f82]        # 406078 <realloc@GLIBC_2.2.5>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <free@plt-0x10>

0000000000402100 <__strcpy_chk@plt>:
  402100:	jmp    QWORD PTR [rip+0x3f7a]        # 406080 <__strcpy_chk@GLIBC_2.3.4>
  402106:	push   0xd
  40210b:	jmp    402020 <free@plt-0x10>

0000000000402110 <__printf_chk@plt>:
  402110:	jmp    QWORD PTR [rip+0x3f72]        # 406088 <__printf_chk@GLIBC_2.3.4>
  402116:	push   0xe
  40211b:	jmp    402020 <free@plt-0x10>

0000000000402120 <fopen@plt>:
  402120:	jmp    QWORD PTR [rip+0x3f6a]        # 406090 <fopen@GLIBC_2.2.5>
  402126:	push   0xf
  40212b:	jmp    402020 <free@plt-0x10>

0000000000402130 <strtok@plt>:
  402130:	jmp    QWORD PTR [rip+0x3f62]        # 406098 <strtok@GLIBC_2.2.5>
  402136:	push   0x10
  40213b:	jmp    402020 <free@plt-0x10>

Disassembly of section .text:

0000000000402140 <main@@Base>:
  402140:	push   r13
  402142:	push   r12
  402144:	lea    rdi,[rip+0x1ebb]        # 404006 <_IO_stdin_used@@Base+0x6>
  40214b:	push   rbp
  40214c:	push   rbx
  40214d:	lea    rbp,[rip+0x1eb0]        # 404004 <_IO_stdin_used@@Base+0x4>
  402154:	sub    rsp,0xc8
  40215b:	mov    rax,QWORD PTR fs:0x28
  402164:	mov    QWORD PTR [rsp+0xb8],rax
  40216c:	xor    eax,eax
  40216e:	call   402060 <puts@plt>
  402173:	lea    rax,[rip+0x1e90]        # 40400a <_IO_stdin_used@@Base+0xa>
  40217a:	mov    r12,rsp
  40217d:	mov    QWORD PTR [rsp],rbp
  402181:	lea    rbx,[rsp+0x8]
  402186:	add    r12,0x50
  40218a:	mov    QWORD PTR [rsp+0x8],rax
  40218f:	lea    rax,[rip+0x1e76]        # 40400c <_IO_stdin_used@@Base+0xc>
  402196:	mov    QWORD PTR [rsp+0x10],rax
  40219b:	lea    rax,[rip+0x1e6c]        # 40400e <_IO_stdin_used@@Base+0xe>
  4021a2:	mov    QWORD PTR [rsp+0x18],rax
  4021a7:	lea    rax,[rip+0x1e82]        # 404030 <_IO_stdin_used@@Base+0x30>
  4021ae:	mov    QWORD PTR [rsp+0x20],rax
  4021b3:	lea    rax,[rip+0x1e56]        # 404010 <_IO_stdin_used@@Base+0x10>
  4021ba:	mov    QWORD PTR [rsp+0x28],rax
  4021bf:	lea    rax,[rip+0x1e4c]        # 404012 <_IO_stdin_used@@Base+0x12>
  4021c6:	mov    QWORD PTR [rsp+0x30],rax
  4021cb:	lea    rax,[rip+0x1e42]        # 404014 <_IO_stdin_used@@Base+0x14>
  4021d2:	mov    QWORD PTR [rsp+0x38],rax
  4021d7:	lea    rax,[rip+0x1e38]        # 404016 <_IO_stdin_used@@Base+0x16>
  4021de:	mov    QWORD PTR [rsp+0x40],rax
  4021e3:	lea    rax,[rip+0x1e2e]        # 404018 <_IO_stdin_used@@Base+0x18>
  4021ea:	mov    QWORD PTR [rsp+0x48],rax
  4021ef:	xor    eax,eax
  4021f1:	call   402bb0 <bst_nova@@Base>
  4021f6:	mov    rsi,rbp
  4021f9:	mov    r13,rax
  4021fc:	jmp    402207 <main@@Base+0xc7>
  4021fe:	xchg   ax,ax
  402200:	mov    rsi,QWORD PTR [rbx]
  402203:	add    rbx,0x8
  402207:	mov    rdi,r13
  40220a:	call   402da0 <bst_insere@@Base>
  40220f:	cmp    rbx,r12
  402212:	jne    402200 <main@@Base+0xc0>
  402214:	mov    rdi,QWORD PTR [r13+0x0]
  402218:	lea    rbx,[rsp+0x50]
  40221d:	lea    rbp,[rip+0x1e1c]        # 404040 <_IO_stdin_used@@Base+0x40>
  402224:	call   402f80 <bst_altura@@Base>
  402229:	lea    rsi,[rip+0x1dea]        # 40401a <_IO_stdin_used@@Base+0x1a>
  402230:	mov    edx,eax
  402232:	mov    edi,0x1
  402237:	xor    eax,eax
  402239:	call   402110 <__printf_chk@plt>
  40223e:	mov    rdi,r13
  402241:	call   403050 <bst_imprime@@Base>
  402246:	lea    rdi,[rip+0x1de1]        # 40402e <_IO_stdin_used@@Base+0x2e>
  40224d:	call   402060 <puts@plt>
  402252:	xor    eax,eax
  402254:	call   4024a0 <avl_nova@@Base>
  402259:	lea    rsi,[rip+0x1dd2]        # 404032 <_IO_stdin_used@@Base+0x32>
  402260:	lea    rdi,[rip+0x1dcd]        # 404034 <_IO_stdin_used@@Base+0x34>
  402267:	mov    r12,rax
  40226a:	call   402120 <fopen@plt>
  40226f:	mov    r13,rax
  402272:	jmp    4022c0 <main@@Base+0x180>
  402274:	nop    DWORD PTR [rax+0x0]
  402278:	mov    rsi,rbp
  40227b:	mov    rdi,rbx
  40227e:	call   402130 <strtok@plt>
  402283:	mov    edx,0x64
  402288:	mov    rsi,rax
  40228b:	mov    rdi,rbx
  40228e:	call   402100 <__strcpy_chk@plt>
  402293:	mov    rsi,rbp
  402296:	xor    edi,edi
  402298:	call   402130 <strtok@plt>
  40229d:	mov    rdi,rbx
  4022a0:	mov    rsi,rax
  4022a3:	mov    edx,0x64
  4022a8:	call   4020d0 <__stpcpy_chk@plt>
  4022ad:	mov    rsi,rbx
  4022b0:	sub    rax,rbx
  4022b3:	mov    rdi,r12
  4022b6:	mov    BYTE PTR [rsp+rax*1+0x4f],0x0
  4022bb:	call   4027f0 <avl_insere@@Base>
  4022c0:	mov    rdx,r13
  4022c3:	mov    esi,0x64
  4022c8:	mov    rdi,rbx
  4022cb:	call   4020a0 <fgets@plt>
  4022d0:	test   rax,rax
  4022d3:	jne    402278 <main@@Base+0x138>
  4022d5:	mov    rdi,r13
  4022d8:	call   402070 <fclose@plt>
  4022dd:	lea    rsi,[rip+0x1d5e]        # 404042 <_IO_stdin_used@@Base+0x42>
  4022e4:	mov    rdi,r12
  4022e7:	call   4026b0 <avl_pesquisa@@Base>
  4022ec:	test   rax,rax
  4022ef:	je     40230a <main@@Base+0x1ca>
  4022f1:	mov    ecx,DWORD PTR [rax+0x1c]
  4022f4:	mov    rdx,QWORD PTR [rax]
  4022f7:	lea    rsi,[rip+0x1d4d]        # 40404b <_IO_stdin_used@@Base+0x4b>
  4022fe:	mov    edi,0x1
  402303:	xor    eax,eax
  402305:	call   402110 <__printf_chk@plt>
  40230a:	lea    rsi,[rip+0x1d43]        # 404054 <_IO_stdin_used@@Base+0x54>
  402311:	mov    rdi,r12
  402314:	call   4026b0 <avl_pesquisa@@Base>
  402319:	test   rax,rax
  40231c:	je     402337 <main@@Base+0x1f7>
  40231e:	mov    ecx,DWORD PTR [rax+0x1c]
  402321:	mov    rdx,QWORD PTR [rax]
  402324:	lea    rsi,[rip+0x1d20]        # 40404b <_IO_stdin_used@@Base+0x4b>
  40232b:	mov    edi,0x1
  402330:	xor    eax,eax
  402332:	call   402110 <__printf_chk@plt>
  402337:	lea    rsi,[rip+0x1d1c]        # 40405a <_IO_stdin_used@@Base+0x5a>
  40233e:	mov    rdi,r12
  402341:	call   4026b0 <avl_pesquisa@@Base>
  402346:	test   rax,rax
  402349:	je     402364 <main@@Base+0x224>
  40234b:	mov    ecx,DWORD PTR [rax+0x1c]
  40234e:	mov    rdx,QWORD PTR [rax]
  402351:	lea    rsi,[rip+0x1cf3]        # 40404b <_IO_stdin_used@@Base+0x4b>
  402358:	mov    edi,0x1
  40235d:	xor    eax,eax
  40235f:	call   402110 <__printf_chk@plt>
  402364:	xor    eax,eax
  402366:	mov    rcx,QWORD PTR [rsp+0xb8]
  40236e:	xor    rcx,QWORD PTR fs:0x28
  402377:	jne    402387 <main@@Base+0x247>
  402379:	add    rsp,0xc8
  402380:	pop    rbx
  402381:	pop    rbp
  402382:	pop    r12
  402384:	pop    r13
  402386:	ret    
  402387:	call   402090 <__stack_chk_fail@plt>
  40238c:	nop    DWORD PTR [rax+0x0]

0000000000402390 <_start@@Base>:
  402390:	endbr64 
  402394:	xor    ebp,ebp
  402396:	mov    r9,rdx
  402399:	pop    rsi
  40239a:	mov    rdx,rsp
  40239d:	and    rsp,0xfffffffffffffff0
  4023a1:	push   rax
  4023a2:	push   rsp
  4023a3:	mov    r8,0x403100
  4023aa:	mov    rcx,0x403090
  4023b1:	mov    rdi,0x402140
  4023b8:	call   QWORD PTR [rip+0x3c32]        # 405ff0 <__libc_start_main@GLIBC_2.2.5>
  4023be:	hlt    
  4023bf:	nop
  4023c0:	endbr64 
  4023c4:	ret    
  4023c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4023cf:	nop
  4023d0:	mov    eax,0x4060b7
  4023d5:	push   rbp
  4023d6:	sub    rax,0x4060b0
  4023dc:	cmp    rax,0xe
  4023e0:	mov    rbp,rsp
  4023e3:	jbe    402400 <_start@@Base+0x70>
  4023e5:	mov    eax,0x0
  4023ea:	test   rax,rax
  4023ed:	je     402400 <_start@@Base+0x70>
  4023ef:	pop    rbp
  4023f0:	mov    edi,0x4060b0
  4023f5:	jmp    rax
  4023f7:	nop    WORD PTR [rax+rax*1+0x0]
  402400:	pop    rbp
  402401:	ret    
  402402:	nop    DWORD PTR [rax+0x0]
  402406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402410:	mov    esi,0x4060b0
  402415:	push   rbp
  402416:	sub    rsi,0x4060b0
  40241d:	sar    rsi,0x3
  402421:	mov    rbp,rsp
  402424:	mov    rax,rsi
  402427:	shr    rax,0x3f
  40242b:	add    rsi,rax
  40242e:	sar    rsi,1
  402431:	je     402448 <_start@@Base+0xb8>
  402433:	mov    eax,0x0
  402438:	test   rax,rax
  40243b:	je     402448 <_start@@Base+0xb8>
  40243d:	pop    rbp
  40243e:	mov    edi,0x4060b0
  402443:	jmp    rax
  402445:	nop    DWORD PTR [rax]
  402448:	pop    rbp
  402449:	ret    
  40244a:	nop    WORD PTR [rax+rax*1+0x0]
  402450:	cmp    BYTE PTR [rip+0x3c59],0x0        # 4060b0 <__bss_start@@Base>
  402457:	jne    40246a <_start@@Base+0xda>
  402459:	push   rbp
  40245a:	mov    rbp,rsp
  40245d:	call   4023d0 <_start@@Base+0x40>
  402462:	pop    rbp
  402463:	mov    BYTE PTR [rip+0x3c46],0x1        # 4060b0 <__bss_start@@Base>
  40246a:	repz ret 
  40246c:	nop    DWORD PTR [rax+0x0]
  402470:	mov    edi,0x405e18
  402475:	cmp    QWORD PTR [rdi],0x0
  402479:	jne    402480 <_start@@Base+0xf0>
  40247b:	jmp    402410 <_start@@Base+0x80>
  40247d:	nop    DWORD PTR [rax]
  402480:	mov    eax,0x0
  402485:	test   rax,rax
  402488:	je     40247b <_start@@Base+0xeb>
  40248a:	push   rbp
  40248b:	mov    rbp,rsp
  40248e:	call   rax
  402490:	pop    rbp
  402491:	jmp    402410 <_start@@Base+0x80>
  402496:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004024a0 <avl_nova@@Base>:
  4024a0:	sub    rsp,0x8
  4024a4:	mov    edi,0x8
  4024a9:	call   4020e0 <malloc@plt>
  4024ae:	test   rax,rax
  4024b1:	je     4024ba <avl_nova@@Base+0x1a>
  4024b3:	mov    QWORD PTR [rax],0x0
  4024ba:	add    rsp,0x8
  4024be:	ret    
  4024bf:	nop

00000000004024c0 <avl_altura@@Base>:
  4024c0:	test   rdi,rdi
  4024c3:	je     4024c9 <avl_altura@@Base+0x9>
  4024c5:	mov    eax,DWORD PTR [rdi+0x18]
  4024c8:	ret    
  4024c9:	mov    eax,0xffffffff
  4024ce:	ret    
  4024cf:	nop

00000000004024d0 <max@@Base>:
  4024d0:	cmp    esi,edi
  4024d2:	mov    eax,edi
  4024d4:	cmovge eax,esi
  4024d7:	ret    
  4024d8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024e0 <avl_novo_no@@Base>:
  4024e0:	push   r12
  4024e2:	push   rbp
  4024e3:	mov    r12,rdi
  4024e6:	push   rbx
  4024e7:	mov    edi,0x20
  4024ec:	call   4020e0 <malloc@plt>
  4024f1:	mov    rdi,r12
  4024f4:	mov    rbx,rax
  4024f7:	call   402080 <strlen@plt>
  4024fc:	lea    rbp,[rax+0x1]
  402500:	mov    rdi,rbp
  402503:	call   4020e0 <malloc@plt>
  402508:	mov    rdx,rbp
  40250b:	mov    rsi,r12
  40250e:	mov    rdi,rax
  402511:	mov    QWORD PTR [rbx],rax
  402514:	call   4020c0 <memcpy@plt>
  402519:	mov    rax,rbx
  40251c:	mov    QWORD PTR [rbx+0x8],0x0
  402524:	mov    QWORD PTR [rbx+0x10],0x0
  40252c:	mov    DWORD PTR [rbx+0x18],0x0
  402533:	mov    DWORD PTR [rbx+0x1c],0x1
  40253a:	pop    rbx
  40253b:	pop    rbp
  40253c:	pop    r12
  40253e:	ret    
  40253f:	nop

0000000000402540 <roda_direita@@Base>:
  402540:	push   r12
  402542:	push   rbp
  402543:	mov    rbp,rdi
  402546:	push   rbx
  402547:	mov    rbx,QWORD PTR [rdi+0x8]
  40254b:	mov    rax,QWORD PTR [rbx+0x10]
  40254f:	mov    QWORD PTR [rbx+0x10],rdi
  402553:	mov    QWORD PTR [rdi+0x8],rax
  402557:	mov    rdi,QWORD PTR [rdi+0x10]
  40255b:	call   4024c0 <avl_altura@@Base>
  402560:	mov    rdi,QWORD PTR [rbp+0x8]
  402564:	mov    r12d,eax
  402567:	call   4024c0 <avl_altura@@Base>
  40256c:	mov    esi,r12d
  40256f:	mov    edi,eax
  402571:	call   4024d0 <max@@Base>
  402576:	mov    rdi,QWORD PTR [rbx+0x10]
  40257a:	add    eax,0x1
  40257d:	mov    DWORD PTR [rbp+0x18],eax
  402580:	call   4024c0 <avl_altura@@Base>
  402585:	mov    rdi,QWORD PTR [rbx+0x8]
  402589:	mov    ebp,eax
  40258b:	call   4024c0 <avl_altura@@Base>
  402590:	mov    esi,ebp
  402592:	mov    edi,eax
  402594:	call   4024d0 <max@@Base>
  402599:	add    eax,0x1
  40259c:	mov    DWORD PTR [rbx+0x18],eax
  40259f:	mov    rax,rbx
  4025a2:	pop    rbx
  4025a3:	pop    rbp
  4025a4:	pop    r12
  4025a6:	ret    
  4025a7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004025b0 <roda_esquerda@@Base>:
  4025b0:	push   r12
  4025b2:	push   rbp
  4025b3:	mov    rbp,rdi
  4025b6:	push   rbx
  4025b7:	mov    rbx,QWORD PTR [rdi+0x10]
  4025bb:	mov    rdi,QWORD PTR [rbx+0x8]
  4025bf:	mov    QWORD PTR [rbx+0x8],rbp
  4025c3:	mov    QWORD PTR [rbp+0x10],rdi
  4025c7:	call   4024c0 <avl_altura@@Base>
  4025cc:	mov    rdi,QWORD PTR [rbp+0x8]
  4025d0:	mov    r12d,eax
  4025d3:	call   4024c0 <avl_altura@@Base>
  4025d8:	mov    esi,r12d
  4025db:	mov    edi,eax
  4025dd:	call   4024d0 <max@@Base>
  4025e2:	mov    rdi,QWORD PTR [rbx+0x10]
  4025e6:	add    eax,0x1
  4025e9:	mov    DWORD PTR [rbp+0x18],eax
  4025ec:	call   4024c0 <avl_altura@@Base>
  4025f1:	mov    rdi,QWORD PTR [rbx+0x8]
  4025f5:	mov    ebp,eax
  4025f7:	call   4024c0 <avl_altura@@Base>
  4025fc:	mov    esi,ebp
  4025fe:	mov    edi,eax
  402600:	call   4024d0 <max@@Base>
  402605:	add    eax,0x1
  402608:	mov    DWORD PTR [rbx+0x18],eax
  40260b:	mov    rax,rbx
  40260e:	pop    rbx
  40260f:	pop    rbp
  402610:	pop    r12
  402612:	ret    
  402613:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40261e:	xchg   ax,ax

0000000000402620 <calc_balanceamento@@Base>:
  402620:	test   rdi,rdi
  402623:	je     402650 <calc_balanceamento@@Base+0x30>
  402625:	push   rbp
  402626:	push   rbx
  402627:	mov    rbx,rdi
  40262a:	sub    rsp,0x8
  40262e:	mov    rdi,QWORD PTR [rdi+0x10]
  402632:	call   4024c0 <avl_altura@@Base>
  402637:	mov    rdi,QWORD PTR [rbx+0x8]
  40263b:	mov    ebp,eax
  40263d:	call   4024c0 <avl_altura@@Base>
  402642:	add    rsp,0x8
  402646:	sub    ebp,eax
  402648:	mov    eax,ebp
  40264a:	pop    rbx
  40264b:	pop    rbp
  40264c:	ret    
  40264d:	nop    DWORD PTR [rax]
  402650:	xor    eax,eax
  402652:	ret    
  402653:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40265e:	xchg   ax,ax

0000000000402660 <avl_pesquisa_impl@@Base>:
  402660:	push   rbp
  402661:	push   rbx
  402662:	sub    rsp,0x8
  402666:	test   rdi,rdi
  402669:	je     4026a5 <avl_pesquisa_impl@@Base+0x45>
  40266b:	mov    rbp,rsi
  40266e:	mov    rbx,rdi
  402671:	jmp    402683 <avl_pesquisa_impl@@Base+0x23>
  402673:	nop    DWORD PTR [rax+rax*1+0x0]
  402678:	je     40269b <avl_pesquisa_impl@@Base+0x3b>
  40267a:	mov    rbx,QWORD PTR [rbx+0x10]
  40267e:	test   rbx,rbx
  402681:	je     40269b <avl_pesquisa_impl@@Base+0x3b>
  402683:	mov    rsi,QWORD PTR [rbx]
  402686:	mov    rdi,rbp
  402689:	call   4020b0 <strcmp@plt>
  40268e:	test   eax,eax
  402690:	jns    402678 <avl_pesquisa_impl@@Base+0x18>
  402692:	mov    rbx,QWORD PTR [rbx+0x8]
  402696:	test   rbx,rbx
  402699:	jne    402683 <avl_pesquisa_impl@@Base+0x23>
  40269b:	add    rsp,0x8
  40269f:	mov    rax,rbx
  4026a2:	pop    rbx
  4026a3:	pop    rbp
  4026a4:	ret    
  4026a5:	xor    ebx,ebx
  4026a7:	jmp    40269b <avl_pesquisa_impl@@Base+0x3b>
  4026a9:	nop    DWORD PTR [rax+0x0]

00000000004026b0 <avl_pesquisa@@Base>:
  4026b0:	test   rdi,rdi
  4026b3:	je     4026c8 <avl_pesquisa@@Base+0x18>
  4026b5:	test   rsi,rsi
  4026b8:	je     4026c8 <avl_pesquisa@@Base+0x18>
  4026ba:	mov    rdi,QWORD PTR [rdi]
  4026bd:	jmp    402660 <avl_pesquisa_impl@@Base>
  4026c2:	nop    WORD PTR [rax+rax*1+0x0]
  4026c8:	xor    eax,eax
  4026ca:	ret    
  4026cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026d0 <avl_insere_impl@@Base>:
  4026d0:	test   rdi,rdi
  4026d3:	je     4027e0 <avl_insere_impl@@Base+0x110>
  4026d9:	push   rbp
  4026da:	push   rbx
  4026db:	mov    rbp,rsi
  4026de:	mov    rbx,rdi
  4026e1:	sub    rsp,0x8
  4026e5:	mov    rsi,QWORD PTR [rdi]
  4026e8:	mov    rdi,rbp
  4026eb:	call   4020b0 <strcmp@plt>
  4026f0:	test   eax,eax
  4026f2:	js     402770 <avl_insere_impl@@Base+0xa0>
  4026f4:	je     402760 <avl_insere_impl@@Base+0x90>
  4026f6:	mov    rdi,QWORD PTR [rbx+0x10]
  4026fa:	mov    rsi,rbp
  4026fd:	call   4026d0 <avl_insere_impl@@Base>
  402702:	mov    rdi,rax
  402705:	mov    QWORD PTR [rbx+0x10],rax
  402709:	call   4024c0 <avl_altura@@Base>
  40270e:	mov    rdi,QWORD PTR [rbx+0x8]
  402712:	mov    ebp,eax
  402714:	call   4024c0 <avl_altura@@Base>
  402719:	mov    esi,ebp
  40271b:	mov    edi,eax
  40271d:	call   4024d0 <max@@Base>
  402722:	add    eax,0x1
  402725:	mov    rdi,rbx
  402728:	mov    DWORD PTR [rbx+0x18],eax
  40272b:	call   402620 <calc_balanceamento@@Base>
  402730:	cmp    eax,0x1
  402733:	jle    402750 <avl_insere_impl@@Base+0x80>
  402735:	mov    rdi,QWORD PTR [rbx+0x10]
  402739:	call   402620 <calc_balanceamento@@Base>
  40273e:	test   eax,eax
  402740:	js     402790 <avl_insere_impl@@Base+0xc0>
  402742:	add    rsp,0x8
  402746:	mov    rdi,rbx
  402749:	pop    rbx
  40274a:	pop    rbp
  40274b:	jmp    4025b0 <roda_esquerda@@Base>
  402750:	cmp    eax,0xffffffff
  402753:	jl     4027b0 <avl_insere_impl@@Base+0xe0>
  402755:	add    rsp,0x8
  402759:	mov    rax,rbx
  40275c:	pop    rbx
  40275d:	pop    rbp
  40275e:	ret    
  40275f:	nop
  402760:	add    DWORD PTR [rbx+0x1c],0x1
  402764:	add    rsp,0x8
  402768:	mov    rax,rbx
  40276b:	pop    rbx
  40276c:	pop    rbp
  40276d:	ret    
  40276e:	xchg   ax,ax
  402770:	mov    rdi,QWORD PTR [rbx+0x8]
  402774:	mov    rsi,rbp
  402777:	call   4026d0 <avl_insere_impl@@Base>
  40277c:	mov    rdi,QWORD PTR [rbx+0x10]
  402780:	mov    QWORD PTR [rbx+0x8],rax
  402784:	jmp    402709 <avl_insere_impl@@Base+0x39>
  402786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402790:	mov    rdi,QWORD PTR [rbx+0x10]
  402794:	call   402540 <roda_direita@@Base>
  402799:	mov    QWORD PTR [rbx+0x10],rax
  40279d:	add    rsp,0x8
  4027a1:	mov    rdi,rbx
  4027a4:	pop    rbx
  4027a5:	pop    rbp
  4027a6:	jmp    4025b0 <roda_esquerda@@Base>
  4027ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4027b0:	mov    rdi,QWORD PTR [rbx+0x8]
  4027b4:	call   402620 <calc_balanceamento@@Base>
  4027b9:	test   eax,eax
  4027bb:	jle    4027ca <avl_insere_impl@@Base+0xfa>
  4027bd:	mov    rdi,QWORD PTR [rbx+0x8]
  4027c1:	call   4025b0 <roda_esquerda@@Base>
  4027c6:	mov    QWORD PTR [rbx+0x8],rax
  4027ca:	add    rsp,0x8
  4027ce:	mov    rdi,rbx
  4027d1:	pop    rbx
  4027d2:	pop    rbp
  4027d3:	jmp    402540 <roda_direita@@Base>
  4027d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4027e0:	mov    rdi,rsi
  4027e3:	jmp    4024e0 <avl_novo_no@@Base>
  4027e8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027f0 <avl_insere@@Base>:
  4027f0:	test   rdi,rdi
  4027f3:	je     402810 <avl_insere@@Base+0x20>
  4027f5:	test   rsi,rsi
  4027f8:	je     402810 <avl_insere@@Base+0x20>
  4027fa:	push   rbx
  4027fb:	mov    rbx,rdi
  4027fe:	mov    rdi,QWORD PTR [rdi]
  402801:	call   4026d0 <avl_insere_impl@@Base>
  402806:	mov    QWORD PTR [rbx],rax
  402809:	xor    eax,eax
  40280b:	pop    rbx
  40280c:	ret    
  40280d:	nop    DWORD PTR [rax]
  402810:	mov    eax,0xffffffff
  402815:	ret    
  402816:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402820 <avl_no_valormin@@Base>:
  402820:	mov    rax,rdi
  402823:	jmp    40282b <avl_no_valormin@@Base+0xb>
  402825:	nop    DWORD PTR [rax]
  402828:	mov    rax,rdx
  40282b:	mov    rdx,QWORD PTR [rax+0x8]
  40282f:	test   rdx,rdx
  402832:	jne    402828 <avl_no_valormin@@Base+0x8>
  402834:	repz ret 
  402836:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402840 <avl_min@@Base>:
  402840:	test   rdi,rdi
  402843:	je     402860 <avl_min@@Base+0x20>
  402845:	sub    rsp,0x8
  402849:	mov    rdi,QWORD PTR [rdi]
  40284c:	call   402820 <avl_no_valormin@@Base>
  402851:	mov    rax,QWORD PTR [rax]
  402854:	add    rsp,0x8
  402858:	ret    
  402859:	nop    DWORD PTR [rax+0x0]
  402860:	xor    eax,eax
  402862:	ret    
  402863:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40286e:	xchg   ax,ax

0000000000402870 <avl_no_valormax@@Base>:
  402870:	mov    rax,rdi
  402873:	jmp    40287b <avl_no_valormax@@Base+0xb>
  402875:	nop    DWORD PTR [rax]
  402878:	mov    rax,rdx
  40287b:	mov    rdx,QWORD PTR [rax+0x10]
  40287f:	test   rdx,rdx
  402882:	jne    402878 <avl_no_valormax@@Base+0x8>
  402884:	repz ret 
  402886:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402890 <avl_max@@Base>:
  402890:	test   rdi,rdi
  402893:	je     4028b0 <avl_max@@Base+0x20>
  402895:	sub    rsp,0x8
  402899:	mov    rdi,QWORD PTR [rdi]
  40289c:	call   402870 <avl_no_valormax@@Base>
  4028a1:	mov    rax,QWORD PTR [rax]
  4028a4:	add    rsp,0x8
  4028a8:	ret    
  4028a9:	nop    DWORD PTR [rax+0x0]
  4028b0:	xor    eax,eax
  4028b2:	ret    
  4028b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4028be:	xchg   ax,ax

00000000004028c0 <avl_remove_impl@@Base>:
  4028c0:	test   rdi,rdi
  4028c3:	push   r12
  4028c5:	push   rbp
  4028c6:	push   rbx
  4028c7:	je     402a40 <avl_remove_impl@@Base+0x180>
  4028cd:	mov    r12,QWORD PTR [rdi]
  4028d0:	mov    rbp,rsi
  4028d3:	mov    rbx,rdi
  4028d6:	mov    rdi,rbp
  4028d9:	mov    rsi,r12
  4028dc:	call   4020b0 <strcmp@plt>
  4028e1:	test   eax,eax
  4028e3:	js     4029c8 <avl_remove_impl@@Base+0x108>
  4028e9:	je     402950 <avl_remove_impl@@Base+0x90>
  4028eb:	mov    rdi,QWORD PTR [rbx+0x10]
  4028ef:	mov    rsi,rbp
  4028f2:	call   4028c0 <avl_remove_impl@@Base>
  4028f7:	mov    rdi,rax
  4028fa:	mov    QWORD PTR [rbx+0x10],rax
  4028fe:	call   4024c0 <avl_altura@@Base>
  402903:	mov    rdi,QWORD PTR [rbx+0x8]
  402907:	mov    ebp,eax
  402909:	call   4024c0 <avl_altura@@Base>
  40290e:	mov    esi,ebp
  402910:	mov    edi,eax
  402912:	call   4024d0 <max@@Base>
  402917:	add    eax,0x1
  40291a:	mov    rdi,rbx
  40291d:	mov    DWORD PTR [rbx+0x18],eax
  402920:	call   402620 <calc_balanceamento@@Base>
  402925:	cmp    eax,0x1
  402928:	jle    4029b0 <avl_remove_impl@@Base+0xf0>
  40292e:	mov    rdi,QWORD PTR [rbx+0x10]
  402932:	call   402620 <calc_balanceamento@@Base>
  402937:	test   eax,eax
  402939:	js     402a50 <avl_remove_impl@@Base+0x190>
  40293f:	mov    rdi,rbx
  402942:	pop    rbx
  402943:	pop    rbp
  402944:	pop    r12
  402946:	jmp    4025b0 <roda_esquerda@@Base>
  40294b:	nop    DWORD PTR [rax+rax*1+0x0]
  402950:	mov    rbp,QWORD PTR [rbx+0x8]
  402954:	test   rbp,rbp
  402957:	je     402a90 <avl_remove_impl@@Base+0x1d0>
  40295d:	mov    rdi,QWORD PTR [rbx+0x10]
  402961:	test   rdi,rdi
  402964:	je     4029e8 <avl_remove_impl@@Base+0x128>
  40296a:	call   402820 <avl_no_valormin@@Base>
  40296f:	mov    rdi,QWORD PTR [rax]
  402972:	mov    rbp,rax
  402975:	call   402080 <strlen@plt>
  40297a:	mov    rdi,QWORD PTR [rbx]
  40297d:	lea    rsi,[rax+0x1]
  402981:	call   4020f0 <realloc@plt>
  402986:	mov    QWORD PTR [rbx],rax
  402989:	mov    rsi,QWORD PTR [rbp+0x0]
  40298d:	mov    rdi,rax
  402990:	call   402050 <strcpy@plt>
  402995:	mov    rdi,QWORD PTR [rbx+0x10]
  402999:	mov    rsi,QWORD PTR [rbp+0x0]
  40299d:	call   4028c0 <avl_remove_impl@@Base>
  4029a2:	mov    rdi,rax
  4029a5:	mov    QWORD PTR [rbx+0x10],rax
  4029a9:	jmp    4028fe <avl_remove_impl@@Base+0x3e>
  4029ae:	xchg   ax,ax
  4029b0:	cmp    eax,0xffffffff
  4029b3:	mov    rbp,rbx
  4029b6:	jl     402a68 <avl_remove_impl@@Base+0x1a8>
  4029bc:	mov    rax,rbp
  4029bf:	pop    rbx
  4029c0:	pop    rbp
  4029c1:	pop    r12
  4029c3:	ret    
  4029c4:	nop    DWORD PTR [rax+0x0]
  4029c8:	mov    rdi,QWORD PTR [rbx+0x8]
  4029cc:	mov    rsi,rbp
  4029cf:	call   4028c0 <avl_remove_impl@@Base>
  4029d4:	mov    rdi,QWORD PTR [rbx+0x10]
  4029d8:	mov    QWORD PTR [rbx+0x8],rax
  4029dc:	jmp    4028fe <avl_remove_impl@@Base+0x3e>
  4029e1:	nop    DWORD PTR [rax+0x0]
  4029e8:	mov    rdi,QWORD PTR [rbp+0x0]
  4029ec:	call   402080 <strlen@plt>
  4029f1:	lea    rsi,[rax+0x1]
  4029f5:	mov    rdi,r12
  4029f8:	call   4020f0 <realloc@plt>
  4029fd:	mov    QWORD PTR [rbx],rax
  402a00:	mov    rsi,QWORD PTR [rbp+0x0]
  402a04:	mov    rdi,rax
  402a07:	call   402050 <strcpy@plt>
  402a0c:	mov    rax,QWORD PTR [rbp+0x8]
  402a10:	mov    rdi,QWORD PTR [rbp+0x0]
  402a14:	mov    QWORD PTR [rbx+0x8],rax
  402a18:	mov    rax,QWORD PTR [rbp+0x10]
  402a1c:	mov    QWORD PTR [rbx+0x10],rax
  402a20:	mov    eax,DWORD PTR [rbp+0x18]
  402a23:	mov    DWORD PTR [rbx+0x18],eax
  402a26:	call   402030 <free@plt>
  402a2b:	mov    rdi,rbp
  402a2e:	call   402030 <free@plt>
  402a33:	mov    rdi,QWORD PTR [rbx+0x10]
  402a37:	jmp    4028fe <avl_remove_impl@@Base+0x3e>
  402a3c:	nop    DWORD PTR [rax+0x0]
  402a40:	xor    ebp,ebp
  402a42:	mov    rax,rbp
  402a45:	pop    rbx
  402a46:	pop    rbp
  402a47:	pop    r12
  402a49:	ret    
  402a4a:	nop    WORD PTR [rax+rax*1+0x0]
  402a50:	mov    rdi,QWORD PTR [rbx+0x10]
  402a54:	call   402540 <roda_direita@@Base>
  402a59:	mov    QWORD PTR [rbx+0x10],rax
  402a5d:	jmp    40293f <avl_remove_impl@@Base+0x7f>
  402a62:	nop    WORD PTR [rax+rax*1+0x0]
  402a68:	mov    rdi,QWORD PTR [rbx+0x8]
  402a6c:	call   402620 <calc_balanceamento@@Base>
  402a71:	test   eax,eax
  402a73:	jle    402a82 <avl_remove_impl@@Base+0x1c2>
  402a75:	mov    rdi,QWORD PTR [rbx+0x8]
  402a79:	call   4025b0 <roda_esquerda@@Base>
  402a7e:	mov    QWORD PTR [rbx+0x8],rax
  402a82:	mov    rdi,rbx
  402a85:	pop    rbx
  402a86:	pop    rbp
  402a87:	pop    r12
  402a89:	jmp    402540 <roda_direita@@Base>
  402a8e:	xchg   ax,ax
  402a90:	mov    rbp,QWORD PTR [rbx+0x10]
  402a94:	test   rbp,rbp
  402a97:	jne    4029e8 <avl_remove_impl@@Base+0x128>
  402a9d:	mov    rdi,r12
  402aa0:	call   402030 <free@plt>
  402aa5:	mov    rdi,rbx
  402aa8:	call   402030 <free@plt>
  402aad:	jmp    4029bc <avl_remove_impl@@Base+0xfc>
  402ab2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402abd:	nop    DWORD PTR [rax]

0000000000402ac0 <avl_apaga@@Base>:
  402ac0:	test   rdi,rdi
  402ac3:	je     402af8 <avl_apaga@@Base+0x38>
  402ac5:	push   rbx
  402ac6:	mov    rax,QWORD PTR [rdi]
  402ac9:	mov    rbx,rdi
  402acc:	test   rax,rax
  402acf:	je     402aeb <avl_apaga@@Base+0x2b>
  402ad1:	nop    DWORD PTR [rax+0x0]
  402ad8:	mov    rsi,QWORD PTR [rax]
  402adb:	mov    rdi,rax
  402ade:	call   4028c0 <avl_remove_impl@@Base>
  402ae3:	test   rax,rax
  402ae6:	mov    QWORD PTR [rbx],rax
  402ae9:	jne    402ad8 <avl_apaga@@Base+0x18>
  402aeb:	mov    rdi,rbx
  402aee:	pop    rbx
  402aef:	jmp    402030 <free@plt>
  402af4:	nop    DWORD PTR [rax+0x0]
  402af8:	repz ret 
  402afa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000402b00 <avl_remove@@Base>:
  402b00:	test   rdi,rdi
  402b03:	je     402b20 <avl_remove@@Base+0x20>
  402b05:	test   rsi,rsi
  402b08:	je     402b20 <avl_remove@@Base+0x20>
  402b0a:	push   rbx
  402b0b:	mov    rbx,rdi
  402b0e:	mov    rdi,QWORD PTR [rdi]
  402b11:	call   4028c0 <avl_remove_impl@@Base>
  402b16:	mov    QWORD PTR [rbx],rax
  402b19:	xor    eax,eax
  402b1b:	pop    rbx
  402b1c:	ret    
  402b1d:	nop    DWORD PTR [rax]
  402b20:	mov    eax,0xffffffff
  402b25:	ret    
  402b26:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402b30 <avl_preordem_impl@@Base>:
  402b30:	test   rdi,rdi
  402b33:	je     402b75 <avl_preordem_impl@@Base+0x45>
  402b35:	push   rbp
  402b36:	push   rbx
  402b37:	lea    rbp,[rip+0x1523]        # 404061 <_IO_stdin_used@@Base+0x61>
  402b3e:	mov    rbx,rdi
  402b41:	sub    rsp,0x8
  402b45:	nop    DWORD PTR [rax]
  402b48:	mov    ecx,DWORD PTR [rbx+0x1c]
  402b4b:	mov    rdx,QWORD PTR [rbx]
  402b4e:	mov    rsi,rbp
  402b51:	mov    edi,0x1
  402b56:	xor    eax,eax
  402b58:	call   402110 <__printf_chk@plt>
  402b5d:	mov    rdi,QWORD PTR [rbx+0x8]
  402b61:	call   402b30 <avl_preordem_impl@@Base>
  402b66:	mov    rbx,QWORD PTR [rbx+0x10]
  402b6a:	test   rbx,rbx
  402b6d:	jne    402b48 <avl_preordem_impl@@Base+0x18>
  402b6f:	add    rsp,0x8
  402b73:	pop    rbx
  402b74:	pop    rbp
  402b75:	repz ret 
  402b77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000402b80 <avl_imprime@@Base>:
  402b80:	test   rdi,rdi
  402b83:	je     402ba0 <avl_imprime@@Base+0x20>
  402b85:	sub    rsp,0x8
  402b89:	mov    rdi,QWORD PTR [rdi]
  402b8c:	call   402b30 <avl_preordem_impl@@Base>
  402b91:	mov    edi,0xa
  402b96:	add    rsp,0x8
  402b9a:	jmp    402040 <putchar@plt>
  402b9f:	nop
  402ba0:	repz ret 
  402ba2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402bac:	nop    DWORD PTR [rax+0x0]

0000000000402bb0 <bst_nova@@Base>:
  402bb0:	sub    rsp,0x8
  402bb4:	mov    edi,0x8
  402bb9:	call   4020e0 <malloc@plt>
  402bbe:	test   rax,rax
  402bc1:	je     402bca <bst_nova@@Base+0x1a>
  402bc3:	mov    QWORD PTR [rax],0x0
  402bca:	add    rsp,0x8
  402bce:	ret    
  402bcf:	nop

0000000000402bd0 <bst_novo_no@@Base>:
  402bd0:	push   r12
  402bd2:	push   rbp
  402bd3:	mov    r12,rdi
  402bd6:	push   rbx
  402bd7:	mov    edi,0x18
  402bdc:	call   4020e0 <malloc@plt>
  402be1:	mov    rdi,r12
  402be4:	mov    rbx,rax
  402be7:	call   402080 <strlen@plt>
  402bec:	lea    rbp,[rax+0x1]
  402bf0:	mov    rdi,rbp
  402bf3:	call   4020e0 <malloc@plt>
  402bf8:	mov    rdx,rbp
  402bfb:	mov    rsi,r12
  402bfe:	mov    rdi,rax
  402c01:	mov    QWORD PTR [rbx],rax
  402c04:	call   4020c0 <memcpy@plt>
  402c09:	mov    rax,rbx
  402c0c:	mov    QWORD PTR [rbx+0x8],0x0
  402c14:	mov    QWORD PTR [rbx+0x10],0x0
  402c1c:	pop    rbx
  402c1d:	pop    rbp
  402c1e:	pop    r12
  402c20:	ret    
  402c21:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402c2c:	nop    DWORD PTR [rax+0x0]

0000000000402c30 <bst_no_valormin@@Base>:
  402c30:	mov    rax,rdi
  402c33:	jmp    402c3b <bst_no_valormin@@Base+0xb>
  402c35:	nop    DWORD PTR [rax]
  402c38:	mov    rax,rdx
  402c3b:	mov    rdx,QWORD PTR [rax+0x8]
  402c3f:	test   rdx,rdx
  402c42:	jne    402c38 <bst_no_valormin@@Base+0x8>
  402c44:	repz ret 
  402c46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402c50 <bst_min@@Base>:
  402c50:	test   rdi,rdi
  402c53:	je     402c70 <bst_min@@Base+0x20>
  402c55:	sub    rsp,0x8
  402c59:	mov    rdi,QWORD PTR [rdi]
  402c5c:	call   402c30 <bst_no_valormin@@Base>
  402c61:	mov    rax,QWORD PTR [rax]
  402c64:	add    rsp,0x8
  402c68:	ret    
  402c69:	nop    DWORD PTR [rax+0x0]
  402c70:	xor    eax,eax
  402c72:	ret    
  402c73:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402c7e:	xchg   ax,ax

0000000000402c80 <bst_no_valormax@@Base>:
  402c80:	mov    rax,rdi
  402c83:	jmp    402c8b <bst_no_valormax@@Base+0xb>
  402c85:	nop    DWORD PTR [rax]
  402c88:	mov    rax,rdx
  402c8b:	mov    rdx,QWORD PTR [rax+0x10]
  402c8f:	test   rdx,rdx
  402c92:	jne    402c88 <bst_no_valormax@@Base+0x8>
  402c94:	repz ret 
  402c96:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402ca0 <bst_max@@Base>:
  402ca0:	test   rdi,rdi
  402ca3:	je     402cc0 <bst_max@@Base+0x20>
  402ca5:	sub    rsp,0x8
  402ca9:	mov    rdi,QWORD PTR [rdi]
  402cac:	call   402c80 <bst_no_valormax@@Base>
  402cb1:	mov    rax,QWORD PTR [rax]
  402cb4:	add    rsp,0x8
  402cb8:	ret    
  402cb9:	nop    DWORD PTR [rax+0x0]
  402cc0:	xor    eax,eax
  402cc2:	ret    
  402cc3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402cce:	xchg   ax,ax

0000000000402cd0 <bst_pesquisa_impl@@Base>:
  402cd0:	push   rbp
  402cd1:	push   rbx
  402cd2:	sub    rsp,0x8
  402cd6:	test   rdi,rdi
  402cd9:	je     402d15 <bst_pesquisa_impl@@Base+0x45>
  402cdb:	mov    rbp,rsi
  402cde:	mov    rbx,rdi
  402ce1:	jmp    402cf3 <bst_pesquisa_impl@@Base+0x23>
  402ce3:	nop    DWORD PTR [rax+rax*1+0x0]
  402ce8:	je     402d0b <bst_pesquisa_impl@@Base+0x3b>
  402cea:	mov    rbx,QWORD PTR [rbx+0x10]
  402cee:	test   rbx,rbx
  402cf1:	je     402d0b <bst_pesquisa_impl@@Base+0x3b>
  402cf3:	mov    rsi,QWORD PTR [rbx]
  402cf6:	mov    rdi,rbp
  402cf9:	call   4020b0 <strcmp@plt>
  402cfe:	test   eax,eax
  402d00:	jns    402ce8 <bst_pesquisa_impl@@Base+0x18>
  402d02:	mov    rbx,QWORD PTR [rbx+0x8]
  402d06:	test   rbx,rbx
  402d09:	jne    402cf3 <bst_pesquisa_impl@@Base+0x23>
  402d0b:	add    rsp,0x8
  402d0f:	mov    rax,rbx
  402d12:	pop    rbx
  402d13:	pop    rbp
  402d14:	ret    
  402d15:	xor    ebx,ebx
  402d17:	jmp    402d0b <bst_pesquisa_impl@@Base+0x3b>
  402d19:	nop    DWORD PTR [rax+0x0]

0000000000402d20 <bst_pesquisa@@Base>:
  402d20:	test   rdi,rdi
  402d23:	je     402d38 <bst_pesquisa@@Base+0x18>
  402d25:	test   rsi,rsi
  402d28:	je     402d38 <bst_pesquisa@@Base+0x18>
  402d2a:	mov    rdi,QWORD PTR [rdi]
  402d2d:	jmp    402cd0 <bst_pesquisa_impl@@Base>
  402d32:	nop    WORD PTR [rax+rax*1+0x0]
  402d38:	xor    eax,eax
  402d3a:	ret    
  402d3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402d40 <bst_insere_impl@@Base>:
  402d40:	test   rdi,rdi
  402d43:	je     402d98 <bst_insere_impl@@Base+0x58>
  402d45:	push   rbp
  402d46:	push   rbx
  402d47:	mov    rbp,rsi
  402d4a:	mov    rbx,rdi
  402d4d:	sub    rsp,0x8
  402d51:	mov    rsi,QWORD PTR [rdi]
  402d54:	mov    rdi,rbp
  402d57:	call   4020b0 <strcmp@plt>
  402d5c:	test   eax,eax
  402d5e:	js     402d80 <bst_insere_impl@@Base+0x40>
  402d60:	je     402d72 <bst_insere_impl@@Base+0x32>
  402d62:	mov    rdi,QWORD PTR [rbx+0x10]
  402d66:	mov    rsi,rbp
  402d69:	call   402d40 <bst_insere_impl@@Base>
  402d6e:	mov    QWORD PTR [rbx+0x10],rax
  402d72:	add    rsp,0x8
  402d76:	mov    rax,rbx
  402d79:	pop    rbx
  402d7a:	pop    rbp
  402d7b:	ret    
  402d7c:	nop    DWORD PTR [rax+0x0]
  402d80:	mov    rdi,QWORD PTR [rbx+0x8]
  402d84:	mov    rsi,rbp
  402d87:	call   402d40 <bst_insere_impl@@Base>
  402d8c:	mov    QWORD PTR [rbx+0x8],rax
  402d90:	jmp    402d72 <bst_insere_impl@@Base+0x32>
  402d92:	nop    WORD PTR [rax+rax*1+0x0]
  402d98:	mov    rdi,rsi
  402d9b:	jmp    402bd0 <bst_novo_no@@Base>

0000000000402da0 <bst_insere@@Base>:
  402da0:	test   rdi,rdi
  402da3:	je     402dc0 <bst_insere@@Base+0x20>
  402da5:	test   rsi,rsi
  402da8:	je     402dc0 <bst_insere@@Base+0x20>
  402daa:	push   rbx
  402dab:	mov    rbx,rdi
  402dae:	mov    rdi,QWORD PTR [rdi]
  402db1:	call   402d40 <bst_insere_impl@@Base>
  402db6:	mov    QWORD PTR [rbx],rax
  402db9:	xor    eax,eax
  402dbb:	pop    rbx
  402dbc:	ret    
  402dbd:	nop    DWORD PTR [rax]
  402dc0:	mov    eax,0xffffffff
  402dc5:	ret    
  402dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402dd0 <bst_remove_impl@@Base>:
  402dd0:	test   rdi,rdi
  402dd3:	je     402ee0 <bst_remove_impl@@Base+0x110>
  402dd9:	push   r12
  402ddb:	push   rbp
  402ddc:	mov    rbp,rsi
  402ddf:	push   rbx
  402de0:	mov    rbx,rdi
  402de3:	sub    rsp,0x10
  402de7:	mov    r12,QWORD PTR [rdi]
  402dea:	mov    rdi,rbp
  402ded:	mov    rsi,r12
  402df0:	call   4020b0 <strcmp@plt>
  402df5:	test   eax,eax
  402df7:	js     402ee8 <bst_remove_impl@@Base+0x118>
  402dfd:	jne    402e60 <bst_remove_impl@@Base+0x90>
  402dff:	mov    rbp,QWORD PTR [rbx+0x8]
  402e03:	test   rbp,rbp
  402e06:	je     402f00 <bst_remove_impl@@Base+0x130>
  402e0c:	mov    rdi,QWORD PTR [rbx+0x10]
  402e10:	test   rdi,rdi
  402e13:	je     402e80 <bst_remove_impl@@Base+0xb0>
  402e15:	call   402c30 <bst_no_valormin@@Base>
  402e1a:	mov    rdi,QWORD PTR [rax]
  402e1d:	mov    rbp,rax
  402e20:	call   402080 <strlen@plt>
  402e25:	mov    rdi,QWORD PTR [rbx]
  402e28:	lea    rsi,[rax+0x1]
  402e2c:	call   4020f0 <realloc@plt>
  402e31:	mov    QWORD PTR [rbx],rax
  402e34:	mov    rsi,QWORD PTR [rbp+0x0]
  402e38:	mov    rdi,rax
  402e3b:	call   402050 <strcpy@plt>
  402e40:	mov    rdi,QWORD PTR [rbx+0x10]
  402e44:	mov    rsi,QWORD PTR [rbp+0x0]
  402e48:	call   402dd0 <bst_remove_impl@@Base>
  402e4d:	mov    QWORD PTR [rbx+0x10],rax
  402e51:	mov    rax,rbx
  402e54:	add    rsp,0x10
  402e58:	pop    rbx
  402e59:	pop    rbp
  402e5a:	pop    r12
  402e5c:	ret    
  402e5d:	nop    DWORD PTR [rax]
  402e60:	mov    rdi,QWORD PTR [rbx+0x10]
  402e64:	mov    rsi,rbp
  402e67:	call   402dd0 <bst_remove_impl@@Base>
  402e6c:	mov    QWORD PTR [rbx+0x10],rax
  402e70:	add    rsp,0x10
  402e74:	mov    rax,rbx
  402e77:	pop    rbx
  402e78:	pop    rbp
  402e79:	pop    r12
  402e7b:	ret    
  402e7c:	mov    rbp,rax
  402e7f:	nop
  402e80:	mov    rdi,QWORD PTR [rbp+0x0]
  402e84:	call   402080 <strlen@plt>
  402e89:	lea    rsi,[rax+0x1]
  402e8d:	mov    rdi,r12
  402e90:	call   4020f0 <realloc@plt>
  402e95:	mov    QWORD PTR [rbx],rax
  402e98:	mov    rsi,QWORD PTR [rbp+0x0]
  402e9c:	mov    rdi,rax
  402e9f:	call   402050 <strcpy@plt>
  402ea4:	mov    rax,QWORD PTR [rbp+0x8]
  402ea8:	mov    r12,QWORD PTR [rbp+0x0]
  402eac:	mov    QWORD PTR [rbx+0x8],rax
  402eb0:	mov    rax,QWORD PTR [rbp+0x10]
  402eb4:	mov    QWORD PTR [rbx+0x10],rax
  402eb8:	mov    rax,rbx
  402ebb:	mov    rdi,r12
  402ebe:	mov    QWORD PTR [rsp+0x8],rax
  402ec3:	call   402030 <free@plt>
  402ec8:	mov    rdi,rbp
  402ecb:	call   402030 <free@plt>
  402ed0:	mov    rax,QWORD PTR [rsp+0x8]
  402ed5:	add    rsp,0x10
  402ed9:	pop    rbx
  402eda:	pop    rbp
  402edb:	pop    r12
  402edd:	ret    
  402ede:	xchg   ax,ax
  402ee0:	xor    eax,eax
  402ee2:	ret    
  402ee3:	nop    DWORD PTR [rax+rax*1+0x0]
  402ee8:	mov    rdi,QWORD PTR [rbx+0x8]
  402eec:	mov    rsi,rbp
  402eef:	call   402dd0 <bst_remove_impl@@Base>
  402ef4:	mov    QWORD PTR [rbx+0x8],rax
  402ef8:	mov    rax,rbx
  402efb:	jmp    402e54 <bst_remove_impl@@Base+0x84>
  402f00:	mov    rax,QWORD PTR [rbx+0x10]
  402f04:	test   rax,rax
  402f07:	jne    402e7c <bst_remove_impl@@Base+0xac>
  402f0d:	mov    rbp,rbx
  402f10:	jmp    402ebb <bst_remove_impl@@Base+0xeb>
  402f12:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402f1d:	nop    DWORD PTR [rax]

0000000000402f20 <bst_apaga@@Base>:
  402f20:	push   rbx
  402f21:	mov    rax,QWORD PTR [rdi]
  402f24:	mov    rbx,rdi
  402f27:	test   rax,rax
  402f2a:	je     402f43 <bst_apaga@@Base+0x23>
  402f2c:	nop    DWORD PTR [rax+0x0]
  402f30:	mov    rsi,QWORD PTR [rax]
  402f33:	mov    rdi,rax
  402f36:	call   402dd0 <bst_remove_impl@@Base>
  402f3b:	test   rax,rax
  402f3e:	mov    QWORD PTR [rbx],rax
  402f41:	jne    402f30 <bst_apaga@@Base+0x10>
  402f43:	mov    rdi,rbx
  402f46:	pop    rbx
  402f47:	jmp    402030 <free@plt>
  402f4c:	nop    DWORD PTR [rax+0x0]

0000000000402f50 <bst_remove@@Base>:
  402f50:	test   rdi,rdi
  402f53:	je     402f70 <bst_remove@@Base+0x20>
  402f55:	test   rsi,rsi
  402f58:	je     402f70 <bst_remove@@Base+0x20>
  402f5a:	push   rbx
  402f5b:	mov    rbx,rdi
  402f5e:	mov    rdi,QWORD PTR [rdi]
  402f61:	call   402dd0 <bst_remove_impl@@Base>
  402f66:	mov    QWORD PTR [rbx],rax
  402f69:	xor    eax,eax
  402f6b:	pop    rbx
  402f6c:	ret    
  402f6d:	nop    DWORD PTR [rax]
  402f70:	mov    eax,0xffffffff
  402f75:	ret    
  402f76:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402f80 <bst_altura@@Base>:
  402f80:	test   rdi,rdi
  402f83:	mov    eax,0xffffffff
  402f88:	je     402fe1 <bst_altura@@Base+0x61>
  402f8a:	push   r12
  402f8c:	push   rbp
  402f8d:	mov    ebp,0x1
  402f92:	push   rbx
  402f93:	mov    rbx,rdi
  402f96:	jmp    402fca <bst_altura@@Base+0x4a>
  402f98:	nop    DWORD PTR [rax+rax*1+0x0]
  402fa0:	call   402f80 <bst_altura@@Base>
  402fa5:	mov    rdi,QWORD PTR [rbx+0x10]
  402fa9:	mov    r12d,eax
  402fac:	call   402f80 <bst_altura@@Base>
  402fb1:	mov    rcx,QWORD PTR [rbx+0x8]
  402fb5:	cmp    r12d,eax
  402fb8:	cmovle rcx,QWORD PTR [rbx+0x10]
  402fbd:	mov    edx,ebp
  402fbf:	add    ebp,0x1
  402fc2:	test   rcx,rcx
  402fc5:	mov    rbx,rcx
  402fc8:	je     402fe8 <bst_altura@@Base+0x68>
  402fca:	cmp    QWORD PTR [rbx+0x10],0x0
  402fcf:	lea    eax,[rbp-0x1]
  402fd2:	mov    rdi,QWORD PTR [rbx+0x8]
  402fd6:	jne    402fa0 <bst_altura@@Base+0x20>
  402fd8:	test   rdi,rdi
  402fdb:	jne    402fa0 <bst_altura@@Base+0x20>
  402fdd:	pop    rbx
  402fde:	pop    rbp
  402fdf:	pop    r12
  402fe1:	repz ret 
  402fe3:	nop    DWORD PTR [rax+rax*1+0x0]
  402fe8:	pop    rbx
  402fe9:	lea    eax,[rdx-0x1]
  402fec:	pop    rbp
  402fed:	pop    r12
  402fef:	jmp    402fe1 <bst_altura@@Base+0x61>
  402ff1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402ffc:	nop    DWORD PTR [rax+0x0]

0000000000403000 <bst_preordem_impl@@Base>:
  403000:	test   rdi,rdi
  403003:	je     403042 <bst_preordem_impl@@Base+0x42>
  403005:	push   rbp
  403006:	push   rbx
  403007:	lea    rbp,[rip+0x105a]        # 404068 <_IO_stdin_used@@Base+0x68>
  40300e:	mov    rbx,rdi
  403011:	sub    rsp,0x8
  403015:	nop    DWORD PTR [rax]
  403018:	mov    rdx,QWORD PTR [rbx]
  40301b:	mov    rsi,rbp
  40301e:	mov    edi,0x1
  403023:	xor    eax,eax
  403025:	call   402110 <__printf_chk@plt>
  40302a:	mov    rdi,QWORD PTR [rbx+0x8]
  40302e:	call   403000 <bst_preordem_impl@@Base>
  403033:	mov    rbx,QWORD PTR [rbx+0x10]
  403037:	test   rbx,rbx
  40303a:	jne    403018 <bst_preordem_impl@@Base+0x18>
  40303c:	add    rsp,0x8
  403040:	pop    rbx
  403041:	pop    rbp
  403042:	repz ret 
  403044:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40304f:	nop

0000000000403050 <bst_imprime@@Base>:
  403050:	test   rdi,rdi
  403053:	je     403080 <bst_imprime@@Base+0x30>
  403055:	push   rbx
  403056:	lea    rsi,[rip+0x100f]        # 40406c <_IO_stdin_used@@Base+0x6c>
  40305d:	mov    rbx,rdi
  403060:	xor    eax,eax
  403062:	mov    edi,0x1
  403067:	call   402110 <__printf_chk@plt>
  40306c:	mov    rdi,QWORD PTR [rbx]
  40306f:	call   403000 <bst_preordem_impl@@Base>
  403074:	pop    rbx
  403075:	mov    edi,0xa
  40307a:	jmp    402040 <putchar@plt>
  40307f:	nop
  403080:	repz ret 
  403082:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40308c:	nop    DWORD PTR [rax+0x0]

0000000000403090 <__libc_csu_init@@Base>:
  403090:	endbr64 
  403094:	push   r15
  403096:	lea    r15,[rip+0x2d6b]        # 405e08 <_IO_stdin_used@@Base+0x1e08>
  40309d:	push   r14
  40309f:	mov    r14,rdx
  4030a2:	push   r13
  4030a4:	mov    r13,rsi
  4030a7:	push   r12
  4030a9:	mov    r12d,edi
  4030ac:	push   rbp
  4030ad:	lea    rbp,[rip+0x2d5c]        # 405e10 <_IO_stdin_used@@Base+0x1e10>
  4030b4:	push   rbx
  4030b5:	sub    rbp,r15
  4030b8:	sub    rsp,0x8
  4030bc:	call   402000 <free@plt-0x30>
  4030c1:	sar    rbp,0x3
  4030c5:	je     4030e6 <__libc_csu_init@@Base+0x56>
  4030c7:	xor    ebx,ebx
  4030c9:	nop    DWORD PTR [rax+0x0]
  4030d0:	mov    rdx,r14
  4030d3:	mov    rsi,r13
  4030d6:	mov    edi,r12d
  4030d9:	call   QWORD PTR [r15+rbx*8]
  4030dd:	add    rbx,0x1
  4030e1:	cmp    rbp,rbx
  4030e4:	jne    4030d0 <__libc_csu_init@@Base+0x40>
  4030e6:	add    rsp,0x8
  4030ea:	pop    rbx
  4030eb:	pop    rbp
  4030ec:	pop    r12
  4030ee:	pop    r13
  4030f0:	pop    r14
  4030f2:	pop    r15
  4030f4:	ret    
  4030f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000403100 <__libc_csu_fini@@Base>:
  403100:	endbr64 
  403104:	ret    

Disassembly of section .fini:

0000000000403108 <.fini>:
  403108:	endbr64 
  40310c:	sub    rsp,0x8
  403110:	add    rsp,0x8
  403114:	ret    
