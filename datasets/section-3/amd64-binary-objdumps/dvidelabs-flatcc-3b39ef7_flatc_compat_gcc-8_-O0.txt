
../repos/dvidelabs-flatcc-3b39ef7/test/flatc_compat/flatc_compat:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x9fe1]        # 40bff0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <free@plt-0x15a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <.plt>:
  402020:	push   QWORD PTR [rip+0x9fe2]        # 40c008 <_IO_stdin_used@@Base+0x4008>
  402026:	bnd jmp QWORD PTR [rip+0x9fe3]        # 40c010 <_IO_stdin_used@@Base+0x4010>
  40202d:	nop    DWORD PTR [rax]
  402030:	endbr64 
  402034:	push   0x0
  402039:	bnd jmp 402020 <free@plt-0x150>
  40203f:	nop
  402040:	endbr64 
  402044:	push   0x1
  402049:	bnd jmp 402020 <free@plt-0x150>
  40204f:	nop
  402050:	endbr64 
  402054:	push   0x2
  402059:	bnd jmp 402020 <free@plt-0x150>
  40205f:	nop
  402060:	endbr64 
  402064:	push   0x3
  402069:	bnd jmp 402020 <free@plt-0x150>
  40206f:	nop
  402070:	endbr64 
  402074:	push   0x4
  402079:	bnd jmp 402020 <free@plt-0x150>
  40207f:	nop
  402080:	endbr64 
  402084:	push   0x5
  402089:	bnd jmp 402020 <free@plt-0x150>
  40208f:	nop
  402090:	endbr64 
  402094:	push   0x6
  402099:	bnd jmp 402020 <free@plt-0x150>
  40209f:	nop
  4020a0:	endbr64 
  4020a4:	push   0x7
  4020a9:	bnd jmp 402020 <free@plt-0x150>
  4020af:	nop
  4020b0:	endbr64 
  4020b4:	push   0x8
  4020b9:	bnd jmp 402020 <free@plt-0x150>
  4020bf:	nop
  4020c0:	endbr64 
  4020c4:	push   0x9
  4020c9:	bnd jmp 402020 <free@plt-0x150>
  4020cf:	nop
  4020d0:	endbr64 
  4020d4:	push   0xa
  4020d9:	bnd jmp 402020 <free@plt-0x150>
  4020df:	nop
  4020e0:	endbr64 
  4020e4:	push   0xb
  4020e9:	bnd jmp 402020 <free@plt-0x150>
  4020ef:	nop
  4020f0:	endbr64 
  4020f4:	push   0xc
  4020f9:	bnd jmp 402020 <free@plt-0x150>
  4020ff:	nop
  402100:	endbr64 
  402104:	push   0xd
  402109:	bnd jmp 402020 <free@plt-0x150>
  40210f:	nop
  402110:	endbr64 
  402114:	push   0xe
  402119:	bnd jmp 402020 <free@plt-0x150>
  40211f:	nop
  402120:	endbr64 
  402124:	push   0xf
  402129:	bnd jmp 402020 <free@plt-0x150>
  40212f:	nop
  402130:	endbr64 
  402134:	push   0x10
  402139:	bnd jmp 402020 <free@plt-0x150>
  40213f:	nop
  402140:	endbr64 
  402144:	push   0x11
  402149:	bnd jmp 402020 <free@plt-0x150>
  40214f:	nop
  402150:	endbr64 
  402154:	push   0x12
  402159:	bnd jmp 402020 <free@plt-0x150>
  40215f:	nop
  402160:	endbr64 
  402164:	push   0x13
  402169:	bnd jmp 402020 <free@plt-0x150>
  40216f:	nop

Disassembly of section .plt.sec:

0000000000402170 <free@plt>:
  402170:	endbr64 
  402174:	bnd jmp QWORD PTR [rip+0x9e9d]        # 40c018 <free@GLIBC_2.2.5>
  40217b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402180 <strncpy@plt>:
  402180:	endbr64 
  402184:	bnd jmp QWORD PTR [rip+0x9e95]        # 40c020 <strncpy@GLIBC_2.2.5>
  40218b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402190 <puts@plt>:
  402190:	endbr64 
  402194:	bnd jmp QWORD PTR [rip+0x9e8d]        # 40c028 <puts@GLIBC_2.2.5>
  40219b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004021a0 <fread@plt>:
  4021a0:	endbr64 
  4021a4:	bnd jmp QWORD PTR [rip+0x9e85]        # 40c030 <fread@GLIBC_2.2.5>
  4021ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004021b0 <fclose@plt>:
  4021b0:	endbr64 
  4021b4:	bnd jmp QWORD PTR [rip+0x9e7d]        # 40c038 <fclose@GLIBC_2.2.5>
  4021bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004021c0 <__stack_chk_fail@plt>:
  4021c0:	endbr64 
  4021c4:	bnd jmp QWORD PTR [rip+0x9e75]        # 40c040 <__stack_chk_fail@GLIBC_2.4>
  4021cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004021d0 <printf@plt>:
  4021d0:	endbr64 
  4021d4:	bnd jmp QWORD PTR [rip+0x9e6d]        # 40c048 <printf@GLIBC_2.2.5>
  4021db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004021e0 <rewind@plt>:
  4021e0:	endbr64 
  4021e4:	bnd jmp QWORD PTR [rip+0x9e65]        # 40c050 <rewind@GLIBC_2.2.5>
  4021eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004021f0 <__assert_fail@plt>:
  4021f0:	endbr64 
  4021f4:	bnd jmp QWORD PTR [rip+0x9e5d]        # 40c058 <__assert_fail@GLIBC_2.2.5>
  4021fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402200 <fputc@plt>:
  402200:	endbr64 
  402204:	bnd jmp QWORD PTR [rip+0x9e55]        # 40c060 <fputc@GLIBC_2.2.5>
  40220b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402210 <strcmp@plt>:
  402210:	endbr64 
  402214:	bnd jmp QWORD PTR [rip+0x9e4d]        # 40c068 <strcmp@GLIBC_2.2.5>
  40221b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402220 <fprintf@plt>:
  402220:	endbr64 
  402224:	bnd jmp QWORD PTR [rip+0x9e45]        # 40c070 <fprintf@GLIBC_2.2.5>
  40222b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402230 <ftell@plt>:
  402230:	endbr64 
  402234:	bnd jmp QWORD PTR [rip+0x9e3d]        # 40c078 <ftell@GLIBC_2.2.5>
  40223b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402240 <memcpy@plt>:
  402240:	endbr64 
  402244:	bnd jmp QWORD PTR [rip+0x9e35]        # 40c080 <memcpy@GLIBC_2.14>
  40224b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402250 <malloc@plt>:
  402250:	endbr64 
  402254:	bnd jmp QWORD PTR [rip+0x9e2d]        # 40c088 <malloc@GLIBC_2.2.5>
  40225b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402260 <fseek@plt>:
  402260:	endbr64 
  402264:	bnd jmp QWORD PTR [rip+0x9e25]        # 40c090 <fseek@GLIBC_2.2.5>
  40226b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402270 <fopen@plt>:
  402270:	endbr64 
  402274:	bnd jmp QWORD PTR [rip+0x9e1d]        # 40c098 <fopen@GLIBC_2.2.5>
  40227b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402280 <exit@plt>:
  402280:	endbr64 
  402284:	bnd jmp QWORD PTR [rip+0x9e15]        # 40c0a0 <exit@GLIBC_2.2.5>
  40228b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402290 <fwrite@plt>:
  402290:	endbr64 
  402294:	bnd jmp QWORD PTR [rip+0x9e0d]        # 40c0a8 <fwrite@GLIBC_2.2.5>
  40229b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004022a0 <posix_memalign@plt>:
  4022a0:	endbr64 
  4022a4:	bnd jmp QWORD PTR [rip+0x9e05]        # 40c0b0 <posix_memalign@GLIBC_2.2.5>
  4022ab:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004022b0 <_start@@Base>:
  4022b0:	endbr64 
  4022b4:	xor    ebp,ebp
  4022b6:	mov    r9,rdx
  4022b9:	pop    rsi
  4022ba:	mov    rdx,rsp
  4022bd:	and    rsp,0xfffffffffffffff0
  4022c1:	push   rax
  4022c2:	push   rsp
  4022c3:	mov    r8,0x4074a0
  4022ca:	mov    rcx,0x407430
  4022d1:	mov    rdi,0x40550d
  4022d8:	call   QWORD PTR [rip+0x9d0a]        # 40bfe8 <__libc_start_main@GLIBC_2.2.5>
  4022de:	hlt    
  4022df:	nop
  4022e0:	endbr64 
  4022e4:	ret    
  4022e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4022ef:	nop
  4022f0:	mov    eax,0x40c0e0
  4022f5:	cmp    rax,0x40c0e0
  4022fb:	je     402310 <_start@@Base+0x60>
  4022fd:	mov    eax,0x0
  402302:	test   rax,rax
  402305:	je     402310 <_start@@Base+0x60>
  402307:	mov    edi,0x40c0e0
  40230c:	jmp    rax
  40230e:	xchg   ax,ax
  402310:	ret    
  402311:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40231c:	nop    DWORD PTR [rax+0x0]
  402320:	mov    esi,0x40c0e0
  402325:	sub    rsi,0x40c0e0
  40232c:	sar    rsi,0x3
  402330:	mov    rax,rsi
  402333:	shr    rax,0x3f
  402337:	add    rsi,rax
  40233a:	sar    rsi,1
  40233d:	je     402350 <_start@@Base+0xa0>
  40233f:	mov    eax,0x0
  402344:	test   rax,rax
  402347:	je     402350 <_start@@Base+0xa0>
  402349:	mov    edi,0x40c0e0
  40234e:	jmp    rax
  402350:	ret    
  402351:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40235c:	nop    DWORD PTR [rax+0x0]
  402360:	endbr64 
  402364:	cmp    BYTE PTR [rip+0x9d75],0x0        # 40c0e0 <__bss_start@@Base>
  40236b:	jne    402380 <_start@@Base+0xd0>
  40236d:	push   rbp
  40236e:	mov    rbp,rsp
  402371:	call   4022f0 <_start@@Base+0x40>
  402376:	mov    BYTE PTR [rip+0x9d63],0x1        # 40c0e0 <__bss_start@@Base>
  40237d:	pop    rbp
  40237e:	ret    
  40237f:	nop
  402380:	ret    
  402381:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40238c:	nop    DWORD PTR [rax+0x0]
  402390:	endbr64 
  402394:	jmp    402320 <_start@@Base+0x70>
  402396:	push   rbp
  402397:	mov    rbp,rsp
  40239a:	sub    rsp,0x30
  40239e:	mov    QWORD PTR [rbp-0x28],rdi
  4023a2:	mov    QWORD PTR [rbp-0x30],rsi
  4023a6:	mov    rax,QWORD PTR fs:0x28
  4023af:	mov    QWORD PTR [rbp-0x8],rax
  4023b3:	xor    eax,eax
  4023b5:	mov    QWORD PTR [rbp-0x10],0x0
  4023bd:	cmp    QWORD PTR [rbp-0x28],0x7
  4023c2:	ja     4023cc <_start@@Base+0x11c>
  4023c4:	mov    QWORD PTR [rbp-0x28],0x8
  4023cc:	mov    rdx,QWORD PTR [rbp-0x30]
  4023d0:	mov    rcx,QWORD PTR [rbp-0x28]
  4023d4:	lea    rax,[rbp-0x10]
  4023d8:	mov    rsi,rcx
  4023db:	mov    rdi,rax
  4023de:	call   4022a0 <posix_memalign@plt>
  4023e3:	mov    DWORD PTR [rbp-0x14],eax
  4023e6:	cmp    DWORD PTR [rbp-0x14],0x0
  4023ea:	je     402409 <_start@@Base+0x159>
  4023ec:	mov    rax,QWORD PTR [rbp-0x10]
  4023f0:	test   rax,rax
  4023f3:	je     402409 <_start@@Base+0x159>
  4023f5:	mov    rax,QWORD PTR [rbp-0x10]
  4023f9:	mov    rdi,rax
  4023fc:	call   402170 <free@plt>
  402401:	mov    QWORD PTR [rbp-0x10],0x0
  402409:	mov    rax,QWORD PTR [rbp-0x10]
  40240d:	mov    rcx,QWORD PTR [rbp-0x8]
  402411:	xor    rcx,QWORD PTR fs:0x28
  40241a:	je     402421 <_start@@Base+0x171>
  40241c:	call   4021c0 <__stack_chk_fail@plt>
  402421:	leave  
  402422:	ret    
  402423:	push   rbp
  402424:	mov    rbp,rsp
  402427:	mov    eax,edi
  402429:	mov    BYTE PTR [rbp-0x4],al
  40242c:	movzx  eax,BYTE PTR [rbp-0x4]
  402430:	pop    rbp
  402431:	ret    
  402432:	push   rbp
  402433:	mov    rbp,rsp
  402436:	sub    rsp,0x8
  40243a:	mov    QWORD PTR [rbp-0x8],rdi
  40243e:	mov    rax,QWORD PTR [rbp-0x8]
  402442:	movzx  eax,BYTE PTR [rax]
  402445:	movzx  eax,al
  402448:	mov    edi,eax
  40244a:	call   402423 <_start@@Base+0x173>
  40244f:	leave  
  402450:	ret    
  402451:	push   rbp
  402452:	mov    rbp,rsp
  402455:	mov    DWORD PTR [rbp-0x4],edi
  402458:	mov    eax,DWORD PTR [rbp-0x4]
  40245b:	pop    rbp
  40245c:	ret    
  40245d:	push   rbp
  40245e:	mov    rbp,rsp
  402461:	sub    rsp,0x8
  402465:	mov    QWORD PTR [rbp-0x8],rdi
  402469:	mov    rax,QWORD PTR [rbp-0x8]
  40246d:	mov    eax,DWORD PTR [rax]
  40246f:	mov    edi,eax
  402471:	call   402451 <_start@@Base+0x1a1>
  402476:	leave  
  402477:	ret    
  402478:	push   rbp
  402479:	mov    rbp,rsp
  40247c:	mov    QWORD PTR [rbp-0x8],rdi
  402480:	mov    rax,QWORD PTR [rbp-0x8]
  402484:	pop    rbp
  402485:	ret    
  402486:	push   rbp
  402487:	mov    rbp,rsp
  40248a:	sub    rsp,0x8
  40248e:	mov    QWORD PTR [rbp-0x8],rdi
  402492:	mov    rax,QWORD PTR [rbp-0x8]
  402496:	mov    rax,QWORD PTR [rax]
  402499:	mov    rdi,rax
  40249c:	call   402478 <_start@@Base+0x1c8>
  4024a1:	leave  
  4024a2:	ret    
  4024a3:	push   rbp
  4024a4:	mov    rbp,rsp
  4024a7:	mov    eax,edi
  4024a9:	mov    BYTE PTR [rbp-0x4],al
  4024ac:	movzx  eax,BYTE PTR [rbp-0x4]
  4024b0:	pop    rbp
  4024b1:	ret    
  4024b2:	push   rbp
  4024b3:	mov    rbp,rsp
  4024b6:	sub    rsp,0x8
  4024ba:	mov    QWORD PTR [rbp-0x8],rdi
  4024be:	mov    rax,QWORD PTR [rbp-0x8]
  4024c2:	movzx  eax,BYTE PTR [rax]
  4024c5:	movsx  eax,al
  4024c8:	mov    edi,eax
  4024ca:	call   4024a3 <_start@@Base+0x1f3>
  4024cf:	leave  
  4024d0:	ret    
  4024d1:	push   rbp
  4024d2:	mov    rbp,rsp
  4024d5:	mov    eax,edi
  4024d7:	mov    WORD PTR [rbp-0x4],ax
  4024db:	movzx  eax,WORD PTR [rbp-0x4]
  4024df:	pop    rbp
  4024e0:	ret    
  4024e1:	push   rbp
  4024e2:	mov    rbp,rsp
  4024e5:	sub    rsp,0x8
  4024e9:	mov    QWORD PTR [rbp-0x8],rdi
  4024ed:	mov    rax,QWORD PTR [rbp-0x8]
  4024f1:	movzx  eax,WORD PTR [rax]
  4024f4:	cwde   
  4024f5:	mov    edi,eax
  4024f7:	call   4024d1 <_start@@Base+0x221>
  4024fc:	leave  
  4024fd:	ret    
  4024fe:	push   rbp
  4024ff:	mov    rbp,rsp
  402502:	mov    DWORD PTR [rbp-0x4],edi
  402505:	mov    eax,DWORD PTR [rbp-0x4]
  402508:	pop    rbp
  402509:	ret    
  40250a:	push   rbp
  40250b:	mov    rbp,rsp
  40250e:	sub    rsp,0x8
  402512:	mov    QWORD PTR [rbp-0x8],rdi
  402516:	mov    rax,QWORD PTR [rbp-0x8]
  40251a:	mov    eax,DWORD PTR [rax]
  40251c:	mov    edi,eax
  40251e:	call   4024fe <_start@@Base+0x24e>
  402523:	leave  
  402524:	ret    
  402525:	push   rbp
  402526:	mov    rbp,rsp
  402529:	mov    QWORD PTR [rbp-0x8],rdi
  40252d:	mov    rax,QWORD PTR [rbp-0x8]
  402531:	pop    rbp
  402532:	ret    
  402533:	push   rbp
  402534:	mov    rbp,rsp
  402537:	sub    rsp,0x8
  40253b:	mov    QWORD PTR [rbp-0x8],rdi
  40253f:	mov    rax,QWORD PTR [rbp-0x8]
  402543:	mov    rax,QWORD PTR [rax]
  402546:	mov    rdi,rax
  402549:	call   402525 <_start@@Base+0x275>
  40254e:	leave  
  40254f:	ret    
  402550:	push   rbp
  402551:	mov    rbp,rsp
  402554:	vmovss DWORD PTR [rbp-0x14],xmm0
  402559:	vmovss xmm0,DWORD PTR [rbp-0x14]
  40255e:	vmovss DWORD PTR [rbp-0x4],xmm0
  402563:	mov    eax,DWORD PTR [rbp-0x4]
  402566:	mov    DWORD PTR [rbp-0x4],eax
  402569:	vmovss xmm0,DWORD PTR [rbp-0x4]
  40256e:	pop    rbp
  40256f:	ret    
  402570:	push   rbp
  402571:	mov    rbp,rsp
  402574:	sub    rsp,0x8
  402578:	mov    QWORD PTR [rbp-0x8],rdi
  40257c:	mov    rax,QWORD PTR [rbp-0x8]
  402580:	mov    eax,DWORD PTR [rax]
  402582:	vmovd  xmm0,eax
  402586:	call   402550 <_start@@Base+0x2a0>
  40258b:	leave  
  40258c:	ret    
  40258d:	push   rbp
  40258e:	mov    rbp,rsp
  402591:	vmovsd QWORD PTR [rbp-0x18],xmm0
  402596:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  40259b:	vmovsd QWORD PTR [rbp-0x8],xmm0
  4025a0:	mov    rax,QWORD PTR [rbp-0x8]
  4025a4:	mov    QWORD PTR [rbp-0x8],rax
  4025a8:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  4025ad:	vmovq  rax,xmm0
  4025b2:	vmovq  xmm0,rax
  4025b7:	pop    rbp
  4025b8:	ret    
  4025b9:	push   rbp
  4025ba:	mov    rbp,rsp
  4025bd:	sub    rsp,0x8
  4025c1:	mov    QWORD PTR [rbp-0x8],rdi
  4025c5:	mov    rax,QWORD PTR [rbp-0x8]
  4025c9:	mov    rax,QWORD PTR [rax]
  4025cc:	vmovq  xmm0,rax
  4025d1:	call   40258d <_start@@Base+0x2dd>
  4025d6:	vmovq  rax,xmm0
  4025db:	vmovq  xmm0,rax
  4025e0:	leave  
  4025e1:	ret    
  4025e2:	push   rbp
  4025e3:	mov    rbp,rsp
  4025e6:	mov    DWORD PTR [rbp-0x4],edi
  4025e9:	mov    eax,DWORD PTR [rbp-0x4]
  4025ec:	pop    rbp
  4025ed:	ret    
  4025ee:	push   rbp
  4025ef:	mov    rbp,rsp
  4025f2:	sub    rsp,0x8
  4025f6:	mov    QWORD PTR [rbp-0x8],rdi
  4025fa:	mov    rax,QWORD PTR [rbp-0x8]
  4025fe:	mov    eax,DWORD PTR [rax]
  402600:	mov    edi,eax
  402602:	call   4025e2 <_start@@Base+0x332>
  402607:	leave  
  402608:	ret    
  402609:	push   rbp
  40260a:	mov    rbp,rsp
  40260d:	mov    DWORD PTR [rbp-0x4],edi
  402610:	mov    eax,DWORD PTR [rbp-0x4]
  402613:	pop    rbp
  402614:	ret    
  402615:	push   rbp
  402616:	mov    rbp,rsp
  402619:	sub    rsp,0x8
  40261d:	mov    QWORD PTR [rbp-0x8],rdi
  402621:	mov    rax,QWORD PTR [rbp-0x8]
  402625:	mov    eax,DWORD PTR [rax]
  402627:	mov    edi,eax
  402629:	call   402609 <_start@@Base+0x359>
  40262e:	leave  
  40262f:	ret    
  402630:	push   rbp
  402631:	mov    rbp,rsp
  402634:	mov    eax,edi
  402636:	mov    WORD PTR [rbp-0x4],ax
  40263a:	movzx  eax,WORD PTR [rbp-0x4]
  40263e:	pop    rbp
  40263f:	ret    
  402640:	push   rbp
  402641:	mov    rbp,rsp
  402644:	sub    rsp,0x8
  402648:	mov    QWORD PTR [rbp-0x8],rdi
  40264c:	mov    rax,QWORD PTR [rbp-0x8]
  402650:	movzx  eax,WORD PTR [rax]
  402653:	movzx  eax,ax
  402656:	mov    edi,eax
  402658:	call   402630 <_start@@Base+0x380>
  40265d:	leave  
  40265e:	ret    
  40265f:	push   rbp
  402660:	mov    rbp,rsp
  402663:	mov    eax,edi
  402665:	mov    BYTE PTR [rbp-0x4],al
  402668:	movzx  eax,BYTE PTR [rbp-0x4]
  40266c:	pop    rbp
  40266d:	ret    
  40266e:	push   rbp
  40266f:	mov    rbp,rsp
  402672:	sub    rsp,0x8
  402676:	mov    QWORD PTR [rbp-0x8],rdi
  40267a:	mov    rax,QWORD PTR [rbp-0x8]
  40267e:	movzx  eax,BYTE PTR [rax]
  402681:	movzx  eax,al
  402684:	mov    edi,eax
  402686:	call   40265f <_start@@Base+0x3af>
  40268b:	leave  
  40268c:	ret    
  40268d:	push   rbp
  40268e:	mov    rbp,rsp
  402691:	mov    DWORD PTR [rbp-0x4],edi
  402694:	mov    eax,DWORD PTR [rbp-0x4]
  402697:	pop    rbp
  402698:	ret    
  402699:	push   rbp
  40269a:	mov    rbp,rsp
  40269d:	mov    DWORD PTR [rbp-0x4],edi
  4026a0:	mov    eax,DWORD PTR [rbp-0x4]
  4026a3:	pop    rbp
  4026a4:	ret    
  4026a5:	push   rbp
  4026a6:	mov    rbp,rsp
  4026a9:	sub    rsp,0x8
  4026ad:	mov    QWORD PTR [rbp-0x8],rdi
  4026b1:	mov    rax,QWORD PTR [rbp-0x8]
  4026b5:	mov    eax,DWORD PTR [rax]
  4026b7:	mov    edi,eax
  4026b9:	call   40268d <_start@@Base+0x3dd>
  4026be:	leave  
  4026bf:	ret    
  4026c0:	push   rbp
  4026c1:	mov    rbp,rsp
  4026c4:	sub    rsp,0x8
  4026c8:	mov    QWORD PTR [rbp-0x8],rdi
  4026cc:	cmp    QWORD PTR [rbp-0x8],0x0
  4026d1:	je     4026e7 <_start@@Base+0x437>
  4026d3:	mov    rax,QWORD PTR [rbp-0x8]
  4026d7:	sub    rax,0x4
  4026db:	mov    rdi,rax
  4026de:	call   4025ee <_start@@Base+0x33e>
  4026e3:	mov    eax,eax
  4026e5:	jmp    4026ec <_start@@Base+0x43c>
  4026e7:	mov    eax,0x0
  4026ec:	leave  
  4026ed:	ret    
  4026ee:	push   rbp
  4026ef:	mov    rbp,rsp
  4026f2:	sub    rsp,0x8
  4026f6:	mov    QWORD PTR [rbp-0x8],rdi
  4026fa:	cmp    QWORD PTR [rbp-0x8],0x0
  4026ff:	je     402715 <_start@@Base+0x465>
  402701:	mov    rax,QWORD PTR [rbp-0x8]
  402705:	sub    rax,0x4
  402709:	mov    rdi,rax
  40270c:	call   4025ee <_start@@Base+0x33e>
  402711:	mov    eax,eax
  402713:	jmp    40271a <_start@@Base+0x46a>
  402715:	mov    eax,0x0
  40271a:	leave  
  40271b:	ret    
  40271c:	push   rbp
  40271d:	mov    rbp,rsp
  402720:	sub    rsp,0x8
  402724:	mov    QWORD PTR [rbp-0x8],rdi
  402728:	cmp    QWORD PTR [rbp-0x8],0x0
  40272d:	je     402743 <_start@@Base+0x493>
  40272f:	mov    rax,QWORD PTR [rbp-0x8]
  402733:	sub    rax,0x4
  402737:	mov    rdi,rax
  40273a:	call   4025ee <_start@@Base+0x33e>
  40273f:	mov    eax,eax
  402741:	jmp    402748 <_start@@Base+0x498>
  402743:	mov    eax,0x0
  402748:	leave  
  402749:	ret    
  40274a:	push   rbp
  40274b:	mov    rbp,rsp
  40274e:	sub    rsp,0x20
  402752:	mov    QWORD PTR [rbp-0x18],rdi
  402756:	mov    QWORD PTR [rbp-0x20],rsi
  40275a:	mov    rax,QWORD PTR [rbp-0x20]
  40275e:	lea    rdx,[rax*4+0x0]
  402766:	mov    rax,QWORD PTR [rbp-0x18]
  40276a:	add    rax,rdx
  40276d:	mov    QWORD PTR [rbp-0x8],rax
  402771:	mov    rax,QWORD PTR [rbp-0x18]
  402775:	mov    rdi,rax
  402778:	call   4026c0 <_start@@Base+0x410>
  40277d:	cmp    QWORD PTR [rbp-0x20],rax
  402781:	jb     4027a2 <_start@@Base+0x4f2>
  402783:	lea    rcx,[rip+0x6186]        # 408910 <_IO_stdin_used@@Base+0x910>
  40278a:	mov    edx,0x6c
  40278f:	lea    rsi,[rip+0x5892]        # 408028 <_IO_stdin_used@@Base+0x28>
  402796:	lea    rdi,[rip+0x5913]        # 4080b0 <_IO_stdin_used@@Base+0xb0>
  40279d:	call   4021f0 <__assert_fail@plt>
  4027a2:	mov    rax,QWORD PTR [rbp-0x8]
  4027a6:	mov    rdi,rax
  4027a9:	call   4025ee <_start@@Base+0x33e>
  4027ae:	mov    eax,eax
  4027b0:	lea    rdx,[rax+0x4]
  4027b4:	mov    rax,QWORD PTR [rbp-0x8]
  4027b8:	add    rax,rdx
  4027bb:	leave  
  4027bc:	ret    
  4027bd:	push   rbp
  4027be:	mov    rbp,rsp
  4027c1:	sub    rsp,0x8
  4027c5:	mov    QWORD PTR [rbp-0x8],rdi
  4027c9:	mov    rax,QWORD PTR [rbp-0x8]
  4027cd:	mov    rdi,rax
  4027d0:	call   4026c0 <_start@@Base+0x410>
  4027d5:	leave  
  4027d6:	ret    
  4027d7:	push   rbp
  4027d8:	mov    rbp,rsp
  4027db:	sub    rsp,0x10
  4027df:	mov    QWORD PTR [rbp-0x8],rdi
  4027e3:	mov    QWORD PTR [rbp-0x10],rsi
  4027e7:	mov    rax,QWORD PTR [rbp-0x8]
  4027eb:	mov    rdi,rax
  4027ee:	call   4026c0 <_start@@Base+0x410>
  4027f3:	cmp    QWORD PTR [rbp-0x10],rax
  4027f7:	jb     402818 <_start@@Base+0x568>
  4027f9:	lea    rcx,[rip+0x60b0]        # 4088b0 <_IO_stdin_used@@Base+0x8b0>
  402800:	mov    edx,0x18b
  402805:	lea    rsi,[rip+0x581c]        # 408028 <_IO_stdin_used@@Base+0x28>
  40280c:	lea    rdi,[rip+0x589d]        # 4080b0 <_IO_stdin_used@@Base+0xb0>
  402813:	call   4021f0 <__assert_fail@plt>
  402818:	mov    rdx,QWORD PTR [rbp-0x8]
  40281c:	mov    rax,QWORD PTR [rbp-0x10]
  402820:	add    rax,rdx
  402823:	mov    rdi,rax
  402826:	call   402432 <_start@@Base+0x182>
  40282b:	leave  
  40282c:	ret    
  40282d:	push   rbp
  40282e:	mov    rbp,rsp
  402831:	sub    rsp,0x20
  402835:	mov    QWORD PTR [rbp-0x18],rdi
  402839:	mov    QWORD PTR [rbp-0x20],rsi
  40283d:	mov    rax,QWORD PTR fs:0x28
  402846:	mov    QWORD PTR [rbp-0x8],rax
  40284a:	xor    eax,eax
  40284c:	mov    DWORD PTR [rbp-0x10],0x0
  402853:	cmp    QWORD PTR [rbp-0x20],0x0
  402858:	jne    402861 <_start@@Base+0x5b1>
  40285a:	mov    eax,0x1
  40285f:	jmp    4028b4 <_start@@Base+0x604>
  402861:	mov    rcx,QWORD PTR [rbp-0x20]
  402865:	lea    rax,[rbp-0x10]
  402869:	mov    edx,0x4
  40286e:	mov    rsi,rcx
  402871:	mov    rdi,rax
  402874:	call   402180 <strncpy@plt>
  402879:	mov    eax,DWORD PTR [rbp-0x10]
  40287c:	mov    edi,eax
  40287e:	call   402699 <_start@@Base+0x3e9>
  402883:	mov    DWORD PTR [rbp-0x10],eax
  402886:	mov    rax,QWORD PTR [rbp-0x18]
  40288a:	add    rax,0x4
  40288e:	mov    rdi,rax
  402891:	call   4026a5 <_start@@Base+0x3f5>
  402896:	mov    DWORD PTR [rbp-0xc],eax
  402899:	mov    eax,DWORD PTR [rbp-0x10]
  40289c:	test   eax,eax
  40289e:	je     4028a8 <_start@@Base+0x5f8>
  4028a0:	mov    eax,DWORD PTR [rbp-0x10]
  4028a3:	cmp    DWORD PTR [rbp-0xc],eax
  4028a6:	jne    4028af <_start@@Base+0x5ff>
  4028a8:	mov    eax,0x1
  4028ad:	jmp    4028b4 <_start@@Base+0x604>
  4028af:	mov    eax,0x0
  4028b4:	mov    rdx,QWORD PTR [rbp-0x8]
  4028b8:	xor    rdx,QWORD PTR fs:0x28
  4028c1:	je     4028c8 <_start@@Base+0x618>
  4028c3:	call   4021c0 <__stack_chk_fail@plt>
  4028c8:	leave  
  4028c9:	ret    
  4028ca:	push   rbp
  4028cb:	mov    rbp,rsp
  4028ce:	mov    eax,edi
  4028d0:	mov    BYTE PTR [rbp-0x4],al
  4028d3:	movzx  eax,BYTE PTR [rbp-0x4]
  4028d7:	pop    rbp
  4028d8:	ret    
  4028d9:	push   rbp
  4028da:	mov    rbp,rsp
  4028dd:	sub    rsp,0x8
  4028e1:	mov    QWORD PTR [rbp-0x8],rdi
  4028e5:	mov    rax,QWORD PTR [rbp-0x8]
  4028e9:	movzx  eax,BYTE PTR [rax]
  4028ec:	movsx  eax,al
  4028ef:	mov    edi,eax
  4028f1:	call   4028ca <_start@@Base+0x61a>
  4028f6:	leave  
  4028f7:	ret    
  4028f8:	push   rbp
  4028f9:	mov    rbp,rsp
  4028fc:	sub    rsp,0x10
  402900:	mov    QWORD PTR [rbp-0x8],rdi
  402904:	mov    QWORD PTR [rbp-0x10],rsi
  402908:	mov    rax,QWORD PTR [rbp-0x8]
  40290c:	mov    rdi,rax
  40290f:	call   4026c0 <_start@@Base+0x410>
  402914:	cmp    QWORD PTR [rbp-0x10],rax
  402918:	jb     402939 <_start@@Base+0x689>
  40291a:	lea    rcx,[rip+0x60af]        # 4089d0 <_IO_stdin_used@@Base+0x9d0>
  402921:	mov    edx,0x17c
  402926:	lea    rsi,[rip+0x57bb]        # 4080e8 <_IO_stdin_used@@Base+0xe8>
  40292d:	lea    rdi,[rip+0x577c]        # 4080b0 <_IO_stdin_used@@Base+0xb0>
  402934:	call   4021f0 <__assert_fail@plt>
  402939:	mov    rax,QWORD PTR [rbp-0x10]
  40293d:	lea    rdx,[rax*4+0x0]
  402945:	mov    rax,QWORD PTR [rbp-0x8]
  402949:	add    rax,rdx
  40294c:	leave  
  40294d:	ret    
  40294e:	push   rbp
  40294f:	mov    rbp,rsp
  402952:	sub    rsp,0x8
  402956:	mov    QWORD PTR [rbp-0x8],rdi
  40295a:	cmp    QWORD PTR [rbp-0x8],0x0
  40295f:	je     402975 <_start@@Base+0x6c5>
  402961:	mov    rax,QWORD PTR [rbp-0x8]
  402965:	sub    rax,0x4
  402969:	mov    rdi,rax
  40296c:	call   4025ee <_start@@Base+0x33e>
  402971:	mov    eax,eax
  402973:	jmp    40297a <_start@@Base+0x6ca>
  402975:	mov    eax,0x0
  40297a:	leave  
  40297b:	ret    
  40297c:	push   rbp
  40297d:	mov    rbp,rsp
  402980:	sub    rsp,0x8
  402984:	mov    QWORD PTR [rbp-0x8],rdi
  402988:	cmp    QWORD PTR [rbp-0x8],0x0
  40298d:	je     40299d <_start@@Base+0x6ed>
  40298f:	mov    rax,QWORD PTR [rbp-0x8]
  402993:	mov    rdi,rax
  402996:	call   4024e1 <_start@@Base+0x231>
  40299b:	jmp    4029a2 <_start@@Base+0x6f2>
  40299d:	mov    eax,0x0
  4029a2:	leave  
  4029a3:	ret    
  4029a4:	push   rbp
  4029a5:	mov    rbp,rsp
  4029a8:	sub    rsp,0x8
  4029ac:	mov    QWORD PTR [rbp-0x8],rdi
  4029b0:	cmp    QWORD PTR [rbp-0x8],0x0
  4029b5:	je     4029c9 <_start@@Base+0x719>
  4029b7:	mov    rax,QWORD PTR [rbp-0x8]
  4029bb:	add    rax,0x2
  4029bf:	mov    rdi,rax
  4029c2:	call   4024b2 <_start@@Base+0x202>
  4029c7:	jmp    4029ce <_start@@Base+0x71e>
  4029c9:	mov    eax,0x0
  4029ce:	leave  
  4029cf:	ret    
  4029d0:	push   rbp
  4029d1:	mov    rbp,rsp
  4029d4:	sub    rsp,0x8
  4029d8:	mov    QWORD PTR [rbp-0x8],rdi
  4029dc:	cmp    QWORD PTR [rbp-0x8],0x0
  4029e1:	je     4029f5 <_start@@Base+0x745>
  4029e3:	mov    rax,QWORD PTR [rbp-0x8]
  4029e7:	mov    rdi,rax
  4029ea:	call   402570 <_start@@Base+0x2c0>
  4029ef:	vmovd  eax,xmm0
  4029f3:	jmp    4029fb <_start@@Base+0x74b>
  4029f5:	mov    eax,DWORD PTR [rip+0x61f1]        # 408bec <_IO_stdin_used@@Base+0xbec>
  4029fb:	vmovd  xmm0,eax
  4029ff:	leave  
  402a00:	ret    
  402a01:	push   rbp
  402a02:	mov    rbp,rsp
  402a05:	sub    rsp,0x8
  402a09:	mov    QWORD PTR [rbp-0x8],rdi
  402a0d:	cmp    QWORD PTR [rbp-0x8],0x0
  402a12:	je     402a2a <_start@@Base+0x77a>
  402a14:	mov    rax,QWORD PTR [rbp-0x8]
  402a18:	add    rax,0x4
  402a1c:	mov    rdi,rax
  402a1f:	call   402570 <_start@@Base+0x2c0>
  402a24:	vmovd  eax,xmm0
  402a28:	jmp    402a30 <_start@@Base+0x780>
  402a2a:	mov    eax,DWORD PTR [rip+0x61bc]        # 408bec <_IO_stdin_used@@Base+0xbec>
  402a30:	vmovd  xmm0,eax
  402a34:	leave  
  402a35:	ret    
  402a36:	push   rbp
  402a37:	mov    rbp,rsp
  402a3a:	sub    rsp,0x8
  402a3e:	mov    QWORD PTR [rbp-0x8],rdi
  402a42:	cmp    QWORD PTR [rbp-0x8],0x0
  402a47:	je     402a5f <_start@@Base+0x7af>
  402a49:	mov    rax,QWORD PTR [rbp-0x8]
  402a4d:	add    rax,0x8
  402a51:	mov    rdi,rax
  402a54:	call   402570 <_start@@Base+0x2c0>
  402a59:	vmovd  eax,xmm0
  402a5d:	jmp    402a65 <_start@@Base+0x7b5>
  402a5f:	mov    eax,DWORD PTR [rip+0x6187]        # 408bec <_IO_stdin_used@@Base+0xbec>
  402a65:	vmovd  xmm0,eax
  402a69:	leave  
  402a6a:	ret    
  402a6b:	push   rbp
  402a6c:	mov    rbp,rsp
  402a6f:	sub    rsp,0x8
  402a73:	mov    QWORD PTR [rbp-0x8],rdi
  402a77:	cmp    QWORD PTR [rbp-0x8],0x0
  402a7c:	je     402a95 <_start@@Base+0x7e5>
  402a7e:	mov    rax,QWORD PTR [rbp-0x8]
  402a82:	add    rax,0x10
  402a86:	mov    rdi,rax
  402a89:	call   4025b9 <_start@@Base+0x309>
  402a8e:	vmovq  rax,xmm0
  402a93:	jmp    402a9c <_start@@Base+0x7ec>
  402a95:	mov    rax,QWORD PTR [rip+0x6154]        # 408bf0 <_IO_stdin_used@@Base+0xbf0>
  402a9c:	vmovq  xmm0,rax
  402aa1:	leave  
  402aa2:	ret    
  402aa3:	push   rbp
  402aa4:	mov    rbp,rsp
  402aa7:	sub    rsp,0x8
  402aab:	mov    QWORD PTR [rbp-0x8],rdi
  402aaf:	cmp    QWORD PTR [rbp-0x8],0x0
  402ab4:	je     402ac8 <_start@@Base+0x818>
  402ab6:	mov    rax,QWORD PTR [rbp-0x8]
  402aba:	add    rax,0x18
  402abe:	mov    rdi,rax
  402ac1:	call   4028d9 <_start@@Base+0x629>
  402ac6:	jmp    402acd <_start@@Base+0x81d>
  402ac8:	mov    eax,0x0
  402acd:	leave  
  402ace:	ret    
  402acf:	push   rbp
  402ad0:	mov    rbp,rsp
  402ad3:	mov    QWORD PTR [rbp-0x8],rdi
  402ad7:	cmp    QWORD PTR [rbp-0x8],0x0
  402adc:	je     402ae8 <_start@@Base+0x838>
  402ade:	mov    rax,QWORD PTR [rbp-0x8]
  402ae2:	add    rax,0x1a
  402ae6:	jmp    402aed <_start@@Base+0x83d>
  402ae8:	mov    eax,0x0
  402aed:	pop    rbp
  402aee:	ret    
  402aef:	push   rbp
  402af0:	mov    rbp,rsp
  402af3:	sub    rsp,0x20
  402af7:	mov    QWORD PTR [rbp-0x18],rdi
  402afb:	lea    rax,[rip+0x5662]        # 408164 <_IO_stdin_used@@Base+0x164>
  402b02:	mov    QWORD PTR [rbp-0x8],rax
  402b06:	cmp    QWORD PTR [rbp-0x18],0x0
  402b0b:	je     402b3b <_start@@Base+0x88b>
  402b0d:	mov    rdx,QWORD PTR [rbp-0x8]
  402b11:	mov    rax,QWORD PTR [rbp-0x18]
  402b15:	mov    rsi,rdx
  402b18:	mov    rdi,rax
  402b1b:	call   40282d <_start@@Base+0x57d>
  402b20:	test   eax,eax
  402b22:	je     402b3b <_start@@Base+0x88b>
  402b24:	mov    rax,QWORD PTR [rbp-0x18]
  402b28:	mov    rdi,rax
  402b2b:	call   4025ee <_start@@Base+0x33e>
  402b30:	mov    edx,eax
  402b32:	mov    rax,QWORD PTR [rbp-0x18]
  402b36:	add    rax,rdx
  402b39:	jmp    402b40 <_start@@Base+0x890>
  402b3b:	mov    eax,0x0
  402b40:	leave  
  402b41:	ret    
  402b42:	push   rbp
  402b43:	mov    rbp,rsp
  402b46:	sub    rsp,0x20
  402b4a:	mov    QWORD PTR [rbp-0x18],rdi
  402b4e:	mov    WORD PTR [rbp-0xc],0x0
  402b54:	cmp    QWORD PTR [rbp-0x18],0x0
  402b59:	jne    402b7a <_start@@Base+0x8ca>
  402b5b:	lea    rcx,[rip+0x5cee]        # 408850 <_IO_stdin_used@@Base+0x850>
  402b62:	mov    edx,0x2b8
  402b67:	lea    rsi,[rip+0x557a]        # 4080e8 <_IO_stdin_used@@Base+0xe8>
  402b6e:	lea    rdi,[rip+0x55fb]        # 408170 <_IO_stdin_used@@Base+0x170>
  402b75:	call   4021f0 <__assert_fail@plt>
  402b7a:	mov    WORD PTR [rbp-0xa],0x0
  402b80:	mov    rax,QWORD PTR [rbp-0x18]
  402b84:	mov    rdi,rax
  402b87:	call   402615 <_start@@Base+0x365>
  402b8c:	cdqe   
  402b8e:	neg    rax
  402b91:	mov    rdx,rax
  402b94:	mov    rax,QWORD PTR [rbp-0x18]
  402b98:	add    rax,rdx
  402b9b:	mov    QWORD PTR [rbp-0x8],rax
  402b9f:	mov    rax,QWORD PTR [rbp-0x8]
  402ba3:	mov    rdi,rax
  402ba6:	call   402640 <_start@@Base+0x390>
  402bab:	movzx  eax,ax
  402bae:	movzx  edx,WORD PTR [rbp-0xa]
  402bb2:	add    edx,0x3
  402bb5:	movsxd rdx,edx
  402bb8:	add    rdx,rdx
  402bbb:	cmp    rax,rdx
  402bbe:	jb     402bdf <_start@@Base+0x92f>
  402bc0:	movzx  eax,WORD PTR [rbp-0xa]
  402bc4:	add    rax,0x2
  402bc8:	lea    rdx,[rax+rax*1]
  402bcc:	mov    rax,QWORD PTR [rbp-0x8]
  402bd0:	add    rax,rdx
  402bd3:	mov    rdi,rax
  402bd6:	call   402640 <_start@@Base+0x390>
  402bdb:	mov    WORD PTR [rbp-0xc],ax
  402bdf:	cmp    WORD PTR [rbp-0xc],0x0
  402be4:	je     402bf3 <_start@@Base+0x943>
  402be6:	movzx  edx,WORD PTR [rbp-0xc]
  402bea:	mov    rax,QWORD PTR [rbp-0x18]
  402bee:	add    rax,rdx
  402bf1:	jmp    402bf8 <_start@@Base+0x948>
  402bf3:	mov    eax,0x0
  402bf8:	leave  
  402bf9:	ret    
  402bfa:	push   rbp
  402bfb:	mov    rbp,rsp
  402bfe:	sub    rsp,0x20
  402c02:	mov    QWORD PTR [rbp-0x18],rdi
  402c06:	mov    WORD PTR [rbp-0xc],0x0
  402c0c:	cmp    QWORD PTR [rbp-0x18],0x0
  402c11:	jne    402c32 <_start@@Base+0x982>
  402c13:	lea    rcx,[rip+0x5c16]        # 408830 <_IO_stdin_used@@Base+0x830>
  402c1a:	mov    edx,0x2b9
  402c1f:	lea    rsi,[rip+0x54c2]        # 4080e8 <_IO_stdin_used@@Base+0xe8>
  402c26:	lea    rdi,[rip+0x5543]        # 408170 <_IO_stdin_used@@Base+0x170>
  402c2d:	call   4021f0 <__assert_fail@plt>
  402c32:	mov    WORD PTR [rbp-0xa],0x2
  402c38:	mov    rax,QWORD PTR [rbp-0x18]
  402c3c:	mov    rdi,rax
  402c3f:	call   402615 <_start@@Base+0x365>
  402c44:	cdqe   
  402c46:	neg    rax
  402c49:	mov    rdx,rax
  402c4c:	mov    rax,QWORD PTR [rbp-0x18]
  402c50:	add    rax,rdx
  402c53:	mov    QWORD PTR [rbp-0x8],rax
  402c57:	mov    rax,QWORD PTR [rbp-0x8]
  402c5b:	mov    rdi,rax
  402c5e:	call   402640 <_start@@Base+0x390>
  402c63:	movzx  eax,ax
  402c66:	movzx  edx,WORD PTR [rbp-0xa]
  402c6a:	add    edx,0x3
  402c6d:	movsxd rdx,edx
  402c70:	add    rdx,rdx
  402c73:	cmp    rax,rdx
  402c76:	jb     402c97 <_start@@Base+0x9e7>
  402c78:	movzx  eax,WORD PTR [rbp-0xa]
  402c7c:	add    rax,0x2
  402c80:	lea    rdx,[rax+rax*1]
  402c84:	mov    rax,QWORD PTR [rbp-0x8]
  402c88:	add    rax,rdx
  402c8b:	mov    rdi,rax
  402c8e:	call   402640 <_start@@Base+0x390>
  402c93:	mov    WORD PTR [rbp-0xc],ax
  402c97:	cmp    WORD PTR [rbp-0xc],0x0
  402c9c:	je     402cb3 <_start@@Base+0xa03>
  402c9e:	movzx  edx,WORD PTR [rbp-0xc]
  402ca2:	mov    rax,QWORD PTR [rbp-0x18]
  402ca6:	add    rax,rdx
  402ca9:	mov    rdi,rax
  402cac:	call   4024e1 <_start@@Base+0x231>
  402cb1:	jmp    402cb8 <_start@@Base+0xa08>
  402cb3:	mov    eax,0x64
  402cb8:	leave  
  402cb9:	ret    
  402cba:	push   rbp
  402cbb:	mov    rbp,rsp
  402cbe:	sub    rsp,0x30
  402cc2:	mov    QWORD PTR [rbp-0x28],rdi
  402cc6:	mov    WORD PTR [rbp-0x14],0x0
  402ccc:	cmp    QWORD PTR [rbp-0x28],0x0
  402cd1:	jne    402cf2 <_start@@Base+0xa42>
  402cd3:	lea    rcx,[rip+0x5cb6]        # 408990 <_IO_stdin_used@@Base+0x990>
  402cda:	mov    edx,0x2bb
  402cdf:	lea    rsi,[rip+0x5402]        # 4080e8 <_IO_stdin_used@@Base+0xe8>
  402ce6:	lea    rdi,[rip+0x5483]        # 408170 <_IO_stdin_used@@Base+0x170>
  402ced:	call   4021f0 <__assert_fail@plt>
  402cf2:	mov    WORD PTR [rbp-0x12],0x3
  402cf8:	mov    rax,QWORD PTR [rbp-0x28]
  402cfc:	mov    rdi,rax
  402cff:	call   402615 <_start@@Base+0x365>
  402d04:	cdqe   
  402d06:	neg    rax
  402d09:	mov    rdx,rax
  402d0c:	mov    rax,QWORD PTR [rbp-0x28]
  402d10:	add    rax,rdx
  402d13:	mov    QWORD PTR [rbp-0x10],rax
  402d17:	mov    rax,QWORD PTR [rbp-0x10]
  402d1b:	mov    rdi,rax
  402d1e:	call   402640 <_start@@Base+0x390>
  402d23:	movzx  eax,ax
  402d26:	movzx  edx,WORD PTR [rbp-0x12]
  402d2a:	add    edx,0x3
  402d2d:	movsxd rdx,edx
  402d30:	add    rdx,rdx
  402d33:	cmp    rax,rdx
  402d36:	jb     402d57 <_start@@Base+0xaa7>
  402d38:	movzx  eax,WORD PTR [rbp-0x12]
  402d3c:	add    rax,0x2
  402d40:	lea    rdx,[rax+rax*1]
  402d44:	mov    rax,QWORD PTR [rbp-0x10]
  402d48:	add    rax,rdx
  402d4b:	mov    rdi,rax
  402d4e:	call   402640 <_start@@Base+0x390>
  402d53:	mov    WORD PTR [rbp-0x14],ax
  402d57:	cmp    WORD PTR [rbp-0x14],0x0
  402d5c:	je     402d88 <_start@@Base+0xad8>
  402d5e:	movzx  edx,WORD PTR [rbp-0x14]
  402d62:	mov    rax,QWORD PTR [rbp-0x28]
  402d66:	add    rax,rdx
  402d69:	mov    QWORD PTR [rbp-0x8],rax
  402d6d:	mov    rax,QWORD PTR [rbp-0x8]
  402d71:	mov    rdi,rax
  402d74:	call   4025ee <_start@@Base+0x33e>
  402d79:	mov    eax,eax
  402d7b:	lea    rdx,[rax+0x4]
  402d7f:	mov    rax,QWORD PTR [rbp-0x8]
  402d83:	add    rax,rdx
  402d86:	jmp    402da7 <_start@@Base+0xaf7>
  402d88:	lea    rcx,[rip+0x5c01]        # 408990 <_IO_stdin_used@@Base+0x990>
  402d8f:	mov    edx,0x2bb
  402d94:	lea    rsi,[rip+0x534d]        # 4080e8 <_IO_stdin_used@@Base+0xe8>
  402d9b:	lea    rdi,[rip+0x53f6]        # 408198 <_IO_stdin_used@@Base+0x198>
  402da2:	call   4021f0 <__assert_fail@plt>
  402da7:	leave  
  402da8:	ret    
  402da9:	push   rbp
  402daa:	mov    rbp,rsp
  402dad:	sub    rsp,0x30
  402db1:	mov    QWORD PTR [rbp-0x28],rdi
  402db5:	mov    WORD PTR [rbp-0x14],0x0
  402dbb:	cmp    QWORD PTR [rbp-0x28],0x0
  402dc0:	jne    402de1 <_start@@Base+0xb31>
  402dc2:	lea    rcx,[rip+0x5ab7]        # 408880 <_IO_stdin_used@@Base+0x880>
  402dc9:	mov    edx,0x2c2
  402dce:	lea    rsi,[rip+0x5313]        # 4080e8 <_IO_stdin_used@@Base+0xe8>
  402dd5:	lea    rdi,[rip+0x5394]        # 408170 <_IO_stdin_used@@Base+0x170>
  402ddc:	call   4021f0 <__assert_fail@plt>
  402de1:	mov    WORD PTR [rbp-0x12],0x5
  402de7:	mov    rax,QWORD PTR [rbp-0x28]
  402deb:	mov    rdi,rax
  402dee:	call   402615 <_start@@Base+0x365>
  402df3:	cdqe   
  402df5:	neg    rax
  402df8:	mov    rdx,rax
  402dfb:	mov    rax,QWORD PTR [rbp-0x28]
  402dff:	add    rax,rdx
  402e02:	mov    QWORD PTR [rbp-0x10],rax
  402e06:	mov    rax,QWORD PTR [rbp-0x10]
  402e0a:	mov    rdi,rax
  402e0d:	call   402640 <_start@@Base+0x390>
  402e12:	movzx  eax,ax
  402e15:	movzx  edx,WORD PTR [rbp-0x12]
  402e19:	add    edx,0x3
  402e1c:	movsxd rdx,edx
  402e1f:	add    rdx,rdx
  402e22:	cmp    rax,rdx
  402e25:	jb     402e46 <_start@@Base+0xb96>
  402e27:	movzx  eax,WORD PTR [rbp-0x12]
  402e2b:	add    rax,0x2
  402e2f:	lea    rdx,[rax+rax*1]
  402e33:	mov    rax,QWORD PTR [rbp-0x10]
  402e37:	add    rax,rdx
  402e3a:	mov    rdi,rax
  402e3d:	call   402640 <_start@@Base+0x390>
  402e42:	mov    WORD PTR [rbp-0x14],ax
  402e46:	cmp    WORD PTR [rbp-0x14],0x0
  402e4b:	je     402e77 <_start@@Base+0xbc7>
  402e4d:	movzx  edx,WORD PTR [rbp-0x14]
  402e51:	mov    rax,QWORD PTR [rbp-0x28]
  402e55:	add    rax,rdx
  402e58:	mov    QWORD PTR [rbp-0x8],rax
  402e5c:	mov    rax,QWORD PTR [rbp-0x8]
  402e60:	mov    rdi,rax
  402e63:	call   4025ee <_start@@Base+0x33e>
  402e68:	mov    eax,eax
  402e6a:	lea    rdx,[rax+0x4]
  402e6e:	mov    rax,QWORD PTR [rbp-0x8]
  402e72:	add    rax,rdx
  402e75:	jmp    402e7c <_start@@Base+0xbcc>
  402e77:	mov    eax,0x0
  402e7c:	leave  
  402e7d:	ret    
  402e7e:	push   rbp
  402e7f:	mov    rbp,rsp
  402e82:	sub    rsp,0x30
  402e86:	mov    QWORD PTR [rbp-0x28],rdi
  402e8a:	mov    WORD PTR [rbp-0x14],0x0
  402e90:	cmp    QWORD PTR [rbp-0x28],0x0
  402e95:	jne    402eb6 <_start@@Base+0xc06>
  402e97:	lea    rcx,[rip+0x5a42]        # 4088e0 <_IO_stdin_used@@Base+0x8e0>
  402e9e:	mov    edx,0x2c8
  402ea3:	lea    rsi,[rip+0x523e]        # 4080e8 <_IO_stdin_used@@Base+0xe8>
  402eaa:	lea    rdi,[rip+0x52bf]        # 408170 <_IO_stdin_used@@Base+0x170>
  402eb1:	call   4021f0 <__assert_fail@plt>
  402eb6:	mov    WORD PTR [rbp-0x12],0xa
  402ebc:	mov    rax,QWORD PTR [rbp-0x28]
  402ec0:	mov    rdi,rax
  402ec3:	call   402615 <_start@@Base+0x365>
  402ec8:	cdqe   
  402eca:	neg    rax
  402ecd:	mov    rdx,rax
  402ed0:	mov    rax,QWORD PTR [rbp-0x28]
  402ed4:	add    rax,rdx
  402ed7:	mov    QWORD PTR [rbp-0x10],rax
  402edb:	mov    rax,QWORD PTR [rbp-0x10]
  402edf:	mov    rdi,rax
  402ee2:	call   402640 <_start@@Base+0x390>
  402ee7:	movzx  eax,ax
  402eea:	movzx  edx,WORD PTR [rbp-0x12]
  402eee:	add    edx,0x3
  402ef1:	movsxd rdx,edx
  402ef4:	add    rdx,rdx
  402ef7:	cmp    rax,rdx
  402efa:	jb     402f1b <_start@@Base+0xc6b>
  402efc:	movzx  eax,WORD PTR [rbp-0x12]
  402f00:	add    rax,0x2
  402f04:	lea    rdx,[rax+rax*1]
  402f08:	mov    rax,QWORD PTR [rbp-0x10]
  402f0c:	add    rax,rdx
  402f0f:	mov    rdi,rax
  402f12:	call   402640 <_start@@Base+0x390>
  402f17:	mov    WORD PTR [rbp-0x14],ax
  402f1b:	cmp    WORD PTR [rbp-0x14],0x0
  402f20:	je     402f4c <_start@@Base+0xc9c>
  402f22:	movzx  edx,WORD PTR [rbp-0x14]
  402f26:	mov    rax,QWORD PTR [rbp-0x28]
  402f2a:	add    rax,rdx
  402f2d:	mov    QWORD PTR [rbp-0x8],rax
  402f31:	mov    rax,QWORD PTR [rbp-0x8]
  402f35:	mov    rdi,rax
  402f38:	call   4025ee <_start@@Base+0x33e>
  402f3d:	mov    eax,eax
  402f3f:	lea    rdx,[rax+0x4]
  402f43:	mov    rax,QWORD PTR [rbp-0x8]
  402f47:	add    rax,rdx
  402f4a:	jmp    402f51 <_start@@Base+0xca1>
  402f4c:	mov    eax,0x0
  402f51:	leave  
  402f52:	ret    
  402f53:	push   rbp
  402f54:	mov    rbp,rsp
  402f57:	sub    rsp,0x20
  402f5b:	mov    QWORD PTR [rbp-0x18],rdi
  402f5f:	mov    WORD PTR [rbp-0xc],0x0
  402f65:	cmp    QWORD PTR [rbp-0x18],0x0
  402f6a:	jne    402f8b <_start@@Base+0xcdb>
  402f6c:	lea    rcx,[rip+0x59cd]        # 408940 <_IO_stdin_used@@Base+0x940>
  402f73:	mov    edx,0x2cd
  402f78:	lea    rsi,[rip+0x5169]        # 4080e8 <_IO_stdin_used@@Base+0xe8>
  402f7f:	lea    rdi,[rip+0x51ea]        # 408170 <_IO_stdin_used@@Base+0x170>
  402f86:	call   4021f0 <__assert_fail@plt>
  402f8b:	mov    WORD PTR [rbp-0xa],0x7
  402f91:	mov    rax,QWORD PTR [rbp-0x18]
  402f95:	mov    rdi,rax
  402f98:	call   402615 <_start@@Base+0x365>
  402f9d:	cdqe   
  402f9f:	neg    rax
  402fa2:	mov    rdx,rax
  402fa5:	mov    rax,QWORD PTR [rbp-0x18]
  402fa9:	add    rax,rdx
  402fac:	mov    QWORD PTR [rbp-0x8],rax
  402fb0:	mov    rax,QWORD PTR [rbp-0x8]
  402fb4:	mov    rdi,rax
  402fb7:	call   402640 <_start@@Base+0x390>
  402fbc:	movzx  eax,ax
  402fbf:	movzx  edx,WORD PTR [rbp-0xa]
  402fc3:	add    edx,0x3
  402fc6:	movsxd rdx,edx
  402fc9:	add    rdx,rdx
  402fcc:	cmp    rax,rdx
  402fcf:	jb     402ff0 <_start@@Base+0xd40>
  402fd1:	movzx  eax,WORD PTR [rbp-0xa]
  402fd5:	add    rax,0x2
  402fd9:	lea    rdx,[rax+rax*1]
  402fdd:	mov    rax,QWORD PTR [rbp-0x8]
  402fe1:	add    rax,rdx
  402fe4:	mov    rdi,rax
  402fe7:	call   402640 <_start@@Base+0x390>
  402fec:	mov    WORD PTR [rbp-0xc],ax
  402ff0:	cmp    WORD PTR [rbp-0xc],0x0
  402ff5:	je     40300c <_start@@Base+0xd5c>
  402ff7:	movzx  edx,WORD PTR [rbp-0xc]
  402ffb:	mov    rax,QWORD PTR [rbp-0x18]
  402fff:	add    rax,rdx
  403002:	mov    rdi,rax
  403005:	call   40266e <_start@@Base+0x3be>
  40300a:	jmp    403011 <_start@@Base+0xd61>
  40300c:	mov    eax,0x0
  403011:	leave  
  403012:	ret    
  403013:	push   rbp
  403014:	mov    rbp,rsp
  403017:	sub    rsp,0x30
  40301b:	mov    QWORD PTR [rbp-0x28],rdi
  40301f:	mov    WORD PTR [rbp-0x14],0x0
  403025:	cmp    QWORD PTR [rbp-0x28],0x0
  40302a:	jne    40304b <_start@@Base+0xd9b>
  40302c:	lea    rcx,[rip+0x593d]        # 408970 <_IO_stdin_used@@Base+0x970>
  403033:	mov    edx,0x2cd
  403038:	lea    rsi,[rip+0x50a9]        # 4080e8 <_IO_stdin_used@@Base+0xe8>
  40303f:	lea    rdi,[rip+0x512a]        # 408170 <_IO_stdin_used@@Base+0x170>
  403046:	call   4021f0 <__assert_fail@plt>
  40304b:	mov    WORD PTR [rbp-0x12],0x8
  403051:	mov    rax,QWORD PTR [rbp-0x28]
  403055:	mov    rdi,rax
  403058:	call   402615 <_start@@Base+0x365>
  40305d:	cdqe   
  40305f:	neg    rax
  403062:	mov    rdx,rax
  403065:	mov    rax,QWORD PTR [rbp-0x28]
  403069:	add    rax,rdx
  40306c:	mov    QWORD PTR [rbp-0x10],rax
  403070:	mov    rax,QWORD PTR [rbp-0x10]
  403074:	mov    rdi,rax
  403077:	call   402640 <_start@@Base+0x390>
  40307c:	movzx  eax,ax
  40307f:	movzx  edx,WORD PTR [rbp-0x12]
  403083:	add    edx,0x3
  403086:	movsxd rdx,edx
  403089:	add    rdx,rdx
  40308c:	cmp    rax,rdx
  40308f:	jb     4030b0 <_start@@Base+0xe00>
  403091:	movzx  eax,WORD PTR [rbp-0x12]
  403095:	add    rax,0x2
  403099:	lea    rdx,[rax+rax*1]
  40309d:	mov    rax,QWORD PTR [rbp-0x10]
  4030a1:	add    rax,rdx
  4030a4:	mov    rdi,rax
  4030a7:	call   402640 <_start@@Base+0x390>
  4030ac:	mov    WORD PTR [rbp-0x14],ax
  4030b0:	cmp    WORD PTR [rbp-0x14],0x0
  4030b5:	je     4030dd <_start@@Base+0xe2d>
  4030b7:	movzx  edx,WORD PTR [rbp-0x14]
  4030bb:	mov    rax,QWORD PTR [rbp-0x28]
  4030bf:	add    rax,rdx
  4030c2:	mov    QWORD PTR [rbp-0x8],rax
  4030c6:	mov    rax,QWORD PTR [rbp-0x8]
  4030ca:	mov    rdi,rax
  4030cd:	call   4025ee <_start@@Base+0x33e>
  4030d2:	mov    edx,eax
  4030d4:	mov    rax,QWORD PTR [rbp-0x8]
  4030d8:	add    rax,rdx
  4030db:	jmp    4030e2 <_start@@Base+0xe32>
  4030dd:	mov    eax,0x0
  4030e2:	leave  
  4030e3:	ret    
  4030e4:	push   rbp
  4030e5:	mov    rbp,rsp
  4030e8:	sub    rsp,0x30
  4030ec:	mov    QWORD PTR [rbp-0x28],rdi
  4030f0:	mov    WORD PTR [rbp-0x14],0x0
  4030f6:	cmp    QWORD PTR [rbp-0x28],0x0
  4030fb:	jne    40311c <_start@@Base+0xe6c>
  4030fd:	lea    rcx,[rip+0x58ac]        # 4089b0 <_IO_stdin_used@@Base+0x9b0>
  403104:	mov    edx,0x2ce
  403109:	lea    rsi,[rip+0x4fd8]        # 4080e8 <_IO_stdin_used@@Base+0xe8>
  403110:	lea    rdi,[rip+0x5059]        # 408170 <_IO_stdin_used@@Base+0x170>
  403117:	call   4021f0 <__assert_fail@plt>
  40311c:	mov    WORD PTR [rbp-0x12],0x9
  403122:	mov    rax,QWORD PTR [rbp-0x28]
  403126:	mov    rdi,rax
  403129:	call   402615 <_start@@Base+0x365>
  40312e:	cdqe   
  403130:	neg    rax
  403133:	mov    rdx,rax
  403136:	mov    rax,QWORD PTR [rbp-0x28]
  40313a:	add    rax,rdx
  40313d:	mov    QWORD PTR [rbp-0x10],rax
  403141:	mov    rax,QWORD PTR [rbp-0x10]
  403145:	mov    rdi,rax
  403148:	call   402640 <_start@@Base+0x390>
  40314d:	movzx  eax,ax
  403150:	movzx  edx,WORD PTR [rbp-0x12]
  403154:	add    edx,0x3
  403157:	movsxd rdx,edx
  40315a:	add    rdx,rdx
  40315d:	cmp    rax,rdx
  403160:	jb     403181 <_start@@Base+0xed1>
  403162:	movzx  eax,WORD PTR [rbp-0x12]
  403166:	add    rax,0x2
  40316a:	lea    rdx,[rax+rax*1]
  40316e:	mov    rax,QWORD PTR [rbp-0x10]
  403172:	add    rax,rdx
  403175:	mov    rdi,rax
  403178:	call   402640 <_start@@Base+0x390>
  40317d:	mov    WORD PTR [rbp-0x14],ax
  403181:	cmp    WORD PTR [rbp-0x14],0x0
  403186:	je     4031b2 <_start@@Base+0xf02>
  403188:	movzx  edx,WORD PTR [rbp-0x14]
  40318c:	mov    rax,QWORD PTR [rbp-0x28]
  403190:	add    rax,rdx
  403193:	mov    QWORD PTR [rbp-0x8],rax
  403197:	mov    rax,QWORD PTR [rbp-0x8]
  40319b:	mov    rdi,rax
  40319e:	call   4025ee <_start@@Base+0x33e>
  4031a3:	mov    eax,eax
  4031a5:	lea    rdx,[rax+0x4]
  4031a9:	mov    rax,QWORD PTR [rbp-0x8]
  4031ad:	add    rax,rdx
  4031b0:	jmp    4031b7 <_start@@Base+0xf07>
  4031b2:	mov    eax,0x0
  4031b7:	leave  
  4031b8:	ret    
  4031b9:	push   rbp
  4031ba:	mov    rbp,rsp
  4031bd:	sub    rsp,0x20
  4031c1:	mov    QWORD PTR [rbp-0x18],rdi
  4031c5:	mov    WORD PTR [rbp-0xc],0x0
  4031cb:	cmp    QWORD PTR [rbp-0x18],0x0
  4031d0:	jne    4031f1 <_start@@Base+0xf41>
  4031d2:	lea    rcx,[rip+0x5827]        # 408a00 <_IO_stdin_used@@Base+0xa00>
  4031d9:	mov    edx,0x2d4
  4031de:	lea    rsi,[rip+0x4f03]        # 4080e8 <_IO_stdin_used@@Base+0xe8>
  4031e5:	lea    rdi,[rip+0x4f84]        # 408170 <_IO_stdin_used@@Base+0x170>
  4031ec:	call   4021f0 <__assert_fail@plt>
  4031f1:	mov    WORD PTR [rbp-0xa],0x10
  4031f7:	mov    rax,QWORD PTR [rbp-0x18]
  4031fb:	mov    rdi,rax
  4031fe:	call   402615 <_start@@Base+0x365>
  403203:	cdqe   
  403205:	neg    rax
  403208:	mov    rdx,rax
  40320b:	mov    rax,QWORD PTR [rbp-0x18]
  40320f:	add    rax,rdx
  403212:	mov    QWORD PTR [rbp-0x8],rax
  403216:	mov    rax,QWORD PTR [rbp-0x8]
  40321a:	mov    rdi,rax
  40321d:	call   402640 <_start@@Base+0x390>
  403222:	movzx  eax,ax
  403225:	movzx  edx,WORD PTR [rbp-0xa]
  403229:	add    edx,0x3
  40322c:	movsxd rdx,edx
  40322f:	add    rdx,rdx
  403232:	cmp    rax,rdx
  403235:	jb     403256 <_start@@Base+0xfa6>
  403237:	movzx  eax,WORD PTR [rbp-0xa]
  40323b:	add    rax,0x2
  40323f:	lea    rdx,[rax+rax*1]
  403243:	mov    rax,QWORD PTR [rbp-0x8]
  403247:	add    rax,rdx
  40324a:	mov    rdi,rax
  40324d:	call   402640 <_start@@Base+0x390>
  403252:	mov    WORD PTR [rbp-0xc],ax
  403256:	cmp    WORD PTR [rbp-0xc],0x0
  40325b:	je     403272 <_start@@Base+0xfc2>
  40325d:	movzx  edx,WORD PTR [rbp-0xc]
  403261:	mov    rax,QWORD PTR [rbp-0x18]
  403265:	add    rax,rdx
  403268:	mov    rdi,rax
  40326b:	call   40250a <_start@@Base+0x25a>
  403270:	jmp    403277 <_start@@Base+0xfc7>
  403272:	mov    eax,0x0
  403277:	leave  
  403278:	ret    
  403279:	push   rbp
  40327a:	mov    rbp,rsp
  40327d:	sub    rsp,0x20
  403281:	mov    QWORD PTR [rbp-0x18],rdi
  403285:	mov    WORD PTR [rbp-0xc],0x0
  40328b:	cmp    QWORD PTR [rbp-0x18],0x0
  403290:	jne    4032b1 <_start@@Base+0x1001>
  403292:	lea    rcx,[rip+0x57a7]        # 408a40 <_IO_stdin_used@@Base+0xa40>
  403299:	mov    edx,0x2d5
  40329e:	lea    rsi,[rip+0x4e43]        # 4080e8 <_IO_stdin_used@@Base+0xe8>
  4032a5:	lea    rdi,[rip+0x4ec4]        # 408170 <_IO_stdin_used@@Base+0x170>
  4032ac:	call   4021f0 <__assert_fail@plt>
  4032b1:	mov    WORD PTR [rbp-0xa],0x11
  4032b7:	mov    rax,QWORD PTR [rbp-0x18]
  4032bb:	mov    rdi,rax
  4032be:	call   402615 <_start@@Base+0x365>
  4032c3:	cdqe   
  4032c5:	neg    rax
  4032c8:	mov    rdx,rax
  4032cb:	mov    rax,QWORD PTR [rbp-0x18]
  4032cf:	add    rax,rdx
  4032d2:	mov    QWORD PTR [rbp-0x8],rax
  4032d6:	mov    rax,QWORD PTR [rbp-0x8]
  4032da:	mov    rdi,rax
  4032dd:	call   402640 <_start@@Base+0x390>
  4032e2:	movzx  eax,ax
  4032e5:	movzx  edx,WORD PTR [rbp-0xa]
  4032e9:	add    edx,0x3
  4032ec:	movsxd rdx,edx
  4032ef:	add    rdx,rdx
  4032f2:	cmp    rax,rdx
  4032f5:	jb     403316 <_start@@Base+0x1066>
  4032f7:	movzx  eax,WORD PTR [rbp-0xa]
  4032fb:	add    rax,0x2
  4032ff:	lea    rdx,[rax+rax*1]
  403303:	mov    rax,QWORD PTR [rbp-0x8]
  403307:	add    rax,rdx
  40330a:	mov    rdi,rax
  40330d:	call   402640 <_start@@Base+0x390>
  403312:	mov    WORD PTR [rbp-0xc],ax
  403316:	cmp    WORD PTR [rbp-0xc],0x0
  40331b:	je     403332 <_start@@Base+0x1082>
  40331d:	movzx  edx,WORD PTR [rbp-0xc]
  403321:	mov    rax,QWORD PTR [rbp-0x18]
  403325:	add    rax,rdx
  403328:	mov    rdi,rax
  40332b:	call   40245d <_start@@Base+0x1ad>
  403330:	jmp    403337 <_start@@Base+0x1087>
  403332:	mov    eax,0x0
  403337:	leave  
  403338:	ret    
  403339:	push   rbp
  40333a:	mov    rbp,rsp
  40333d:	sub    rsp,0x20
  403341:	mov    QWORD PTR [rbp-0x18],rdi
  403345:	mov    WORD PTR [rbp-0xc],0x0
  40334b:	cmp    QWORD PTR [rbp-0x18],0x0
  403350:	jne    403371 <_start@@Base+0x10c1>
  403352:	lea    rcx,[rip+0x5727]        # 408a80 <_IO_stdin_used@@Base+0xa80>
  403359:	mov    edx,0x2d6
  40335e:	lea    rsi,[rip+0x4d83]        # 4080e8 <_IO_stdin_used@@Base+0xe8>
  403365:	lea    rdi,[rip+0x4e04]        # 408170 <_IO_stdin_used@@Base+0x170>
  40336c:	call   4021f0 <__assert_fail@plt>
  403371:	mov    WORD PTR [rbp-0xa],0x12
  403377:	mov    rax,QWORD PTR [rbp-0x18]
  40337b:	mov    rdi,rax
  40337e:	call   402615 <_start@@Base+0x365>
  403383:	cdqe   
  403385:	neg    rax
  403388:	mov    rdx,rax
  40338b:	mov    rax,QWORD PTR [rbp-0x18]
  40338f:	add    rax,rdx
  403392:	mov    QWORD PTR [rbp-0x8],rax
  403396:	mov    rax,QWORD PTR [rbp-0x8]
  40339a:	mov    rdi,rax
  40339d:	call   402640 <_start@@Base+0x390>
  4033a2:	movzx  eax,ax
  4033a5:	movzx  edx,WORD PTR [rbp-0xa]
  4033a9:	add    edx,0x3
  4033ac:	movsxd rdx,edx
  4033af:	add    rdx,rdx
  4033b2:	cmp    rax,rdx
  4033b5:	jb     4033d6 <_start@@Base+0x1126>
  4033b7:	movzx  eax,WORD PTR [rbp-0xa]
  4033bb:	add    rax,0x2
  4033bf:	lea    rdx,[rax+rax*1]
  4033c3:	mov    rax,QWORD PTR [rbp-0x8]
  4033c7:	add    rax,rdx
  4033ca:	mov    rdi,rax
  4033cd:	call   402640 <_start@@Base+0x390>
  4033d2:	mov    WORD PTR [rbp-0xc],ax
  4033d6:	cmp    WORD PTR [rbp-0xc],0x0
  4033db:	je     4033f2 <_start@@Base+0x1142>
  4033dd:	movzx  edx,WORD PTR [rbp-0xc]
  4033e1:	mov    rax,QWORD PTR [rbp-0x18]
  4033e5:	add    rax,rdx
  4033e8:	mov    rdi,rax
  4033eb:	call   402533 <_start@@Base+0x283>
  4033f0:	jmp    4033f7 <_start@@Base+0x1147>
  4033f2:	mov    eax,0x0
  4033f7:	leave  
  4033f8:	ret    
  4033f9:	push   rbp
  4033fa:	mov    rbp,rsp
  4033fd:	sub    rsp,0x20
  403401:	mov    QWORD PTR [rbp-0x18],rdi
  403405:	mov    WORD PTR [rbp-0xc],0x0
  40340b:	cmp    QWORD PTR [rbp-0x18],0x0
  403410:	jne    403431 <_start@@Base+0x1181>
  403412:	lea    rcx,[rip+0x56a7]        # 408ac0 <_IO_stdin_used@@Base+0xac0>
  403419:	mov    edx,0x2d7
  40341e:	lea    rsi,[rip+0x4cc3]        # 4080e8 <_IO_stdin_used@@Base+0xe8>
  403425:	lea    rdi,[rip+0x4d44]        # 408170 <_IO_stdin_used@@Base+0x170>
  40342c:	call   4021f0 <__assert_fail@plt>
  403431:	mov    WORD PTR [rbp-0xa],0x13
  403437:	mov    rax,QWORD PTR [rbp-0x18]
  40343b:	mov    rdi,rax
  40343e:	call   402615 <_start@@Base+0x365>
  403443:	cdqe   
  403445:	neg    rax
  403448:	mov    rdx,rax
  40344b:	mov    rax,QWORD PTR [rbp-0x18]
  40344f:	add    rax,rdx
  403452:	mov    QWORD PTR [rbp-0x8],rax
  403456:	mov    rax,QWORD PTR [rbp-0x8]
  40345a:	mov    rdi,rax
  40345d:	call   402640 <_start@@Base+0x390>
  403462:	movzx  eax,ax
  403465:	movzx  edx,WORD PTR [rbp-0xa]
  403469:	add    edx,0x3
  40346c:	movsxd rdx,edx
  40346f:	add    rdx,rdx
  403472:	cmp    rax,rdx
  403475:	jb     403496 <_start@@Base+0x11e6>
  403477:	movzx  eax,WORD PTR [rbp-0xa]
  40347b:	add    rax,0x2
  40347f:	lea    rdx,[rax+rax*1]
  403483:	mov    rax,QWORD PTR [rbp-0x8]
  403487:	add    rax,rdx
  40348a:	mov    rdi,rax
  40348d:	call   402640 <_start@@Base+0x390>
  403492:	mov    WORD PTR [rbp-0xc],ax
  403496:	cmp    WORD PTR [rbp-0xc],0x0
  40349b:	je     4034b2 <_start@@Base+0x1202>
  40349d:	movzx  edx,WORD PTR [rbp-0xc]
  4034a1:	mov    rax,QWORD PTR [rbp-0x18]
  4034a5:	add    rax,rdx
  4034a8:	mov    rdi,rax
  4034ab:	call   402486 <_start@@Base+0x1d6>
  4034b0:	jmp    4034b7 <_start@@Base+0x1207>
  4034b2:	mov    eax,0x0
  4034b7:	leave  
  4034b8:	ret    
  4034b9:	push   rbp
  4034ba:	mov    rbp,rsp
  4034bd:	sub    rsp,0x20
  4034c1:	mov    QWORD PTR [rbp-0x18],rdi
  4034c5:	mov    WORD PTR [rbp-0xc],0x0
  4034cb:	cmp    QWORD PTR [rbp-0x18],0x0
  4034d0:	jne    4034f1 <_start@@Base+0x1241>
  4034d2:	lea    rcx,[rip+0x5627]        # 408b00 <_IO_stdin_used@@Base+0xb00>
  4034d9:	mov    edx,0x2d8
  4034de:	lea    rsi,[rip+0x4c03]        # 4080e8 <_IO_stdin_used@@Base+0xe8>
  4034e5:	lea    rdi,[rip+0x4c84]        # 408170 <_IO_stdin_used@@Base+0x170>
  4034ec:	call   4021f0 <__assert_fail@plt>
  4034f1:	mov    WORD PTR [rbp-0xa],0x14
  4034f7:	mov    rax,QWORD PTR [rbp-0x18]
  4034fb:	mov    rdi,rax
  4034fe:	call   402615 <_start@@Base+0x365>
  403503:	cdqe   
  403505:	neg    rax
  403508:	mov    rdx,rax
  40350b:	mov    rax,QWORD PTR [rbp-0x18]
  40350f:	add    rax,rdx
  403512:	mov    QWORD PTR [rbp-0x8],rax
  403516:	mov    rax,QWORD PTR [rbp-0x8]
  40351a:	mov    rdi,rax
  40351d:	call   402640 <_start@@Base+0x390>
  403522:	movzx  eax,ax
  403525:	movzx  edx,WORD PTR [rbp-0xa]
  403529:	add    edx,0x3
  40352c:	movsxd rdx,edx
  40352f:	add    rdx,rdx
  403532:	cmp    rax,rdx
  403535:	jb     403556 <_start@@Base+0x12a6>
  403537:	movzx  eax,WORD PTR [rbp-0xa]
  40353b:	add    rax,0x2
  40353f:	lea    rdx,[rax+rax*1]
  403543:	mov    rax,QWORD PTR [rbp-0x8]
  403547:	add    rax,rdx
  40354a:	mov    rdi,rax
  40354d:	call   402640 <_start@@Base+0x390>
  403552:	mov    WORD PTR [rbp-0xc],ax
  403556:	cmp    WORD PTR [rbp-0xc],0x0
  40355b:	je     403572 <_start@@Base+0x12c2>
  40355d:	movzx  edx,WORD PTR [rbp-0xc]
  403561:	mov    rax,QWORD PTR [rbp-0x18]
  403565:	add    rax,rdx
  403568:	mov    rdi,rax
  40356b:	call   40250a <_start@@Base+0x25a>
  403570:	jmp    403577 <_start@@Base+0x12c7>
  403572:	mov    eax,0x0
  403577:	leave  
  403578:	ret    
  403579:	push   rbp
  40357a:	mov    rbp,rsp
  40357d:	sub    rsp,0x20
  403581:	mov    QWORD PTR [rbp-0x18],rdi
  403585:	mov    WORD PTR [rbp-0xc],0x0
  40358b:	cmp    QWORD PTR [rbp-0x18],0x0
  403590:	jne    4035b1 <_start@@Base+0x1301>
  403592:	lea    rcx,[rip+0x55a7]        # 408b40 <_IO_stdin_used@@Base+0xb40>
  403599:	mov    edx,0x2d9
  40359e:	lea    rsi,[rip+0x4b43]        # 4080e8 <_IO_stdin_used@@Base+0xe8>
  4035a5:	lea    rdi,[rip+0x4bc4]        # 408170 <_IO_stdin_used@@Base+0x170>
  4035ac:	call   4021f0 <__assert_fail@plt>
  4035b1:	mov    WORD PTR [rbp-0xa],0x15
  4035b7:	mov    rax,QWORD PTR [rbp-0x18]
  4035bb:	mov    rdi,rax
  4035be:	call   402615 <_start@@Base+0x365>
  4035c3:	cdqe   
  4035c5:	neg    rax
  4035c8:	mov    rdx,rax
  4035cb:	mov    rax,QWORD PTR [rbp-0x18]
  4035cf:	add    rax,rdx
  4035d2:	mov    QWORD PTR [rbp-0x8],rax
  4035d6:	mov    rax,QWORD PTR [rbp-0x8]
  4035da:	mov    rdi,rax
  4035dd:	call   402640 <_start@@Base+0x390>
  4035e2:	movzx  eax,ax
  4035e5:	movzx  edx,WORD PTR [rbp-0xa]
  4035e9:	add    edx,0x3
  4035ec:	movsxd rdx,edx
  4035ef:	add    rdx,rdx
  4035f2:	cmp    rax,rdx
  4035f5:	jb     403616 <_start@@Base+0x1366>
  4035f7:	movzx  eax,WORD PTR [rbp-0xa]
  4035fb:	add    rax,0x2
  4035ff:	lea    rdx,[rax+rax*1]
  403603:	mov    rax,QWORD PTR [rbp-0x8]
  403607:	add    rax,rdx
  40360a:	mov    rdi,rax
  40360d:	call   402640 <_start@@Base+0x390>
  403612:	mov    WORD PTR [rbp-0xc],ax
  403616:	cmp    WORD PTR [rbp-0xc],0x0
  40361b:	je     403632 <_start@@Base+0x1382>
  40361d:	movzx  edx,WORD PTR [rbp-0xc]
  403621:	mov    rax,QWORD PTR [rbp-0x18]
  403625:	add    rax,rdx
  403628:	mov    rdi,rax
  40362b:	call   40245d <_start@@Base+0x1ad>
  403630:	jmp    403637 <_start@@Base+0x1387>
  403632:	mov    eax,0x0
  403637:	leave  
  403638:	ret    
  403639:	push   rbp
  40363a:	mov    rbp,rsp
  40363d:	sub    rsp,0x20
  403641:	mov    QWORD PTR [rbp-0x18],rdi
  403645:	mov    WORD PTR [rbp-0xc],0x0
  40364b:	cmp    QWORD PTR [rbp-0x18],0x0
  403650:	jne    403671 <_start@@Base+0x13c1>
  403652:	lea    rcx,[rip+0x5527]        # 408b80 <_IO_stdin_used@@Base+0xb80>
  403659:	mov    edx,0x2da
  40365e:	lea    rsi,[rip+0x4a83]        # 4080e8 <_IO_stdin_used@@Base+0xe8>
  403665:	lea    rdi,[rip+0x4b04]        # 408170 <_IO_stdin_used@@Base+0x170>
  40366c:	call   4021f0 <__assert_fail@plt>
  403671:	mov    WORD PTR [rbp-0xa],0x16
  403677:	mov    rax,QWORD PTR [rbp-0x18]
  40367b:	mov    rdi,rax
  40367e:	call   402615 <_start@@Base+0x365>
  403683:	cdqe   
  403685:	neg    rax
  403688:	mov    rdx,rax
  40368b:	mov    rax,QWORD PTR [rbp-0x18]
  40368f:	add    rax,rdx
  403692:	mov    QWORD PTR [rbp-0x8],rax
  403696:	mov    rax,QWORD PTR [rbp-0x8]
  40369a:	mov    rdi,rax
  40369d:	call   402640 <_start@@Base+0x390>
  4036a2:	movzx  eax,ax
  4036a5:	movzx  edx,WORD PTR [rbp-0xa]
  4036a9:	add    edx,0x3
  4036ac:	movsxd rdx,edx
  4036af:	add    rdx,rdx
  4036b2:	cmp    rax,rdx
  4036b5:	jb     4036d6 <_start@@Base+0x1426>
  4036b7:	movzx  eax,WORD PTR [rbp-0xa]
  4036bb:	add    rax,0x2
  4036bf:	lea    rdx,[rax+rax*1]
  4036c3:	mov    rax,QWORD PTR [rbp-0x8]
  4036c7:	add    rax,rdx
  4036ca:	mov    rdi,rax
  4036cd:	call   402640 <_start@@Base+0x390>
  4036d2:	mov    WORD PTR [rbp-0xc],ax
  4036d6:	cmp    WORD PTR [rbp-0xc],0x0
  4036db:	je     4036f2 <_start@@Base+0x1442>
  4036dd:	movzx  edx,WORD PTR [rbp-0xc]
  4036e1:	mov    rax,QWORD PTR [rbp-0x18]
  4036e5:	add    rax,rdx
  4036e8:	mov    rdi,rax
  4036eb:	call   402533 <_start@@Base+0x283>
  4036f0:	jmp    4036f7 <_start@@Base+0x1447>
  4036f2:	mov    eax,0x0
  4036f7:	leave  
  4036f8:	ret    
  4036f9:	push   rbp
  4036fa:	mov    rbp,rsp
  4036fd:	sub    rsp,0x20
  403701:	mov    QWORD PTR [rbp-0x18],rdi
  403705:	mov    WORD PTR [rbp-0xc],0x0
  40370b:	cmp    QWORD PTR [rbp-0x18],0x0
  403710:	jne    403731 <_start@@Base+0x1481>
  403712:	lea    rcx,[rip+0x54a7]        # 408bc0 <_IO_stdin_used@@Base+0xbc0>
  403719:	mov    edx,0x2db
  40371e:	lea    rsi,[rip+0x49c3]        # 4080e8 <_IO_stdin_used@@Base+0xe8>
  403725:	lea    rdi,[rip+0x4a44]        # 408170 <_IO_stdin_used@@Base+0x170>
  40372c:	call   4021f0 <__assert_fail@plt>
  403731:	mov    WORD PTR [rbp-0xa],0x17
  403737:	mov    rax,QWORD PTR [rbp-0x18]
  40373b:	mov    rdi,rax
  40373e:	call   402615 <_start@@Base+0x365>
  403743:	cdqe   
  403745:	neg    rax
  403748:	mov    rdx,rax
  40374b:	mov    rax,QWORD PTR [rbp-0x18]
  40374f:	add    rax,rdx
  403752:	mov    QWORD PTR [rbp-0x8],rax
  403756:	mov    rax,QWORD PTR [rbp-0x8]
  40375a:	mov    rdi,rax
  40375d:	call   402640 <_start@@Base+0x390>
  403762:	movzx  eax,ax
  403765:	movzx  edx,WORD PTR [rbp-0xa]
  403769:	add    edx,0x3
  40376c:	movsxd rdx,edx
  40376f:	add    rdx,rdx
  403772:	cmp    rax,rdx
  403775:	jb     403796 <_start@@Base+0x14e6>
  403777:	movzx  eax,WORD PTR [rbp-0xa]
  40377b:	add    rax,0x2
  40377f:	lea    rdx,[rax+rax*1]
  403783:	mov    rax,QWORD PTR [rbp-0x8]
  403787:	add    rax,rdx
  40378a:	mov    rdi,rax
  40378d:	call   402640 <_start@@Base+0x390>
  403792:	mov    WORD PTR [rbp-0xc],ax
  403796:	cmp    WORD PTR [rbp-0xc],0x0
  40379b:	je     4037b2 <_start@@Base+0x1502>
  40379d:	movzx  edx,WORD PTR [rbp-0xc]
  4037a1:	mov    rax,QWORD PTR [rbp-0x18]
  4037a5:	add    rax,rdx
  4037a8:	mov    rdi,rax
  4037ab:	call   402486 <_start@@Base+0x1d6>
  4037b0:	jmp    4037b7 <_start@@Base+0x1507>
  4037b2:	mov    eax,0x0
  4037b7:	leave  
  4037b8:	ret    
  4037b9:	endbr64 
  4037bd:	push   rbp
  4037be:	mov    rbp,rsp
  4037c1:	sub    rsp,0x10
  4037c5:	mov    QWORD PTR [rbp-0x8],rdi
  4037c9:	mov    rax,QWORD PTR [rbp-0x8]
  4037cd:	movzx  eax,BYTE PTR [rax+0x10]
  4037d1:	movzx  eax,al
  4037d4:	cmp    eax,0x1
  4037d7:	jne    4037ee <_start@@Base+0x153e>
  4037d9:	mov    rax,QWORD PTR [rbp-0x8]
  4037dd:	lea    rsi,[rip+0x16b]        # 40394f <_start@@Base+0x169f>
  4037e4:	mov    rdi,rax
  4037e7:	call   406969 <flatcc_verify_union_table@@Base>
  4037ec:	jmp    4037f3 <_start@@Base+0x1543>
  4037ee:	mov    eax,0x0
  4037f3:	leave  
  4037f4:	ret    
  4037f5:	endbr64 
  4037f9:	push   rbp
  4037fa:	mov    rbp,rsp
  4037fd:	sub    rsp,0x10
  403801:	mov    QWORD PTR [rbp-0x8],rdi
  403805:	mov    rax,QWORD PTR [rbp-0x8]
  403809:	movzx  eax,BYTE PTR [rax+0x10]
  40380d:	movzx  eax,al
  403810:	cmp    eax,0x2
  403813:	je     403842 <_start@@Base+0x1592>
  403815:	cmp    eax,0x2
  403818:	jg     403821 <_start@@Base+0x1571>
  40381a:	cmp    eax,0x1
  40381d:	je     40382d <_start@@Base+0x157d>
  40381f:	jmp    403881 <_start@@Base+0x15d1>
  403821:	cmp    eax,0x3
  403824:	je     403857 <_start@@Base+0x15a7>
  403826:	cmp    eax,0x4
  403829:	je     40386c <_start@@Base+0x15bc>
  40382b:	jmp    403881 <_start@@Base+0x15d1>
  40382d:	mov    rax,QWORD PTR [rbp-0x8]
  403831:	lea    rsi,[rip+0x835]        # 40406d <_start@@Base+0x1dbd>
  403838:	mov    rdi,rax
  40383b:	call   406969 <flatcc_verify_union_table@@Base>
  403840:	jmp    403886 <_start@@Base+0x15d6>
  403842:	mov    rax,QWORD PTR [rbp-0x8]
  403846:	lea    rsi,[rip+0x17b]        # 4039c8 <_start@@Base+0x1718>
  40384d:	mov    rdi,rax
  403850:	call   406969 <flatcc_verify_union_table@@Base>
  403855:	jmp    403886 <_start@@Base+0x15d6>
  403857:	mov    rax,QWORD PTR [rbp-0x8]
  40385b:	lea    rsi,[rip+0x100]        # 403962 <_start@@Base+0x16b2>
  403862:	mov    rdi,rax
  403865:	call   406969 <flatcc_verify_union_table@@Base>
  40386a:	jmp    403886 <_start@@Base+0x15d6>
  40386c:	mov    rax,QWORD PTR [rbp-0x8]
  403870:	lea    rsi,[rip+0x3b2]        # 403c29 <_start@@Base+0x1979>
  403877:	mov    rdi,rax
  40387a:	call   406969 <flatcc_verify_union_table@@Base>
  40387f:	jmp    403886 <_start@@Base+0x15d6>
  403881:	mov    eax,0x0
  403886:	leave  
  403887:	ret    
  403888:	endbr64 
  40388c:	push   rbp
  40388d:	mov    rbp,rsp
  403890:	sub    rsp,0x10
  403894:	mov    QWORD PTR [rbp-0x8],rdi
  403898:	mov    rax,QWORD PTR [rbp-0x8]
  40389c:	movzx  eax,BYTE PTR [rax+0x10]
  4038a0:	movzx  eax,al
  4038a3:	cmp    eax,0x9
  4038a6:	je     4038fc <_start@@Base+0x164c>
  4038a8:	cmp    eax,0x9
  4038ab:	jg     4038bc <_start@@Base+0x160c>
  4038ad:	cmp    eax,0x2
  4038b0:	je     4038cf <_start@@Base+0x161f>
  4038b2:	cmp    eax,0x8
  4038b5:	je     4038e4 <_start@@Base+0x1634>
  4038b7:	jmp    403948 <_start@@Base+0x1698>
  4038bc:	cmp    eax,0xb
  4038bf:	je     40392c <_start@@Base+0x167c>
  4038c1:	cmp    eax,0xb
  4038c4:	jl     403914 <_start@@Base+0x1664>
  4038c6:	cmp    eax,0xff
  4038cb:	je     40393a <_start@@Base+0x168a>
  4038cd:	jmp    403948 <_start@@Base+0x1698>
  4038cf:	mov    rax,QWORD PTR [rbp-0x8]
  4038d3:	lea    rsi,[rip+0x107a]        # 404954 <_start@@Base+0x26a4>
  4038da:	mov    rdi,rax
  4038dd:	call   406969 <flatcc_verify_union_table@@Base>
  4038e2:	jmp    40394d <_start@@Base+0x169d>
  4038e4:	mov    rax,QWORD PTR [rbp-0x8]
  4038e8:	mov    edx,0x2
  4038ed:	mov    esi,0x2
  4038f2:	mov    rdi,rax
  4038f5:	call   4069b4 <flatcc_verify_union_struct@@Base>
  4038fa:	jmp    40394d <_start@@Base+0x169d>
  4038fc:	mov    rax,QWORD PTR [rbp-0x8]
  403900:	mov    edx,0x4
  403905:	mov    esi,0x4
  40390a:	mov    rdi,rax
  40390d:	call   4069b4 <flatcc_verify_union_struct@@Base>
  403912:	jmp    40394d <_start@@Base+0x169d>
  403914:	mov    rax,QWORD PTR [rbp-0x8]
  403918:	mov    edx,0x4
  40391d:	mov    esi,0x4
  403922:	mov    rdi,rax
  403925:	call   4069b4 <flatcc_verify_union_struct@@Base>
  40392a:	jmp    40394d <_start@@Base+0x169d>
  40392c:	mov    rax,QWORD PTR [rbp-0x8]
  403930:	mov    rdi,rax
  403933:	call   4069fb <flatcc_verify_union_string@@Base>
  403938:	jmp    40394d <_start@@Base+0x169d>
  40393a:	mov    rax,QWORD PTR [rbp-0x8]
  40393e:	mov    rdi,rax
  403941:	call   4069fb <flatcc_verify_union_string@@Base>
  403946:	jmp    40394d <_start@@Base+0x169d>
  403948:	mov    eax,0x0
  40394d:	leave  
  40394e:	ret    
  40394f:	endbr64 
  403953:	push   rbp
  403954:	mov    rbp,rsp
  403957:	mov    QWORD PTR [rbp-0x8],rdi
  40395b:	mov    eax,0x0
  403960:	pop    rbp
  403961:	ret    
  403962:	endbr64 
  403966:	push   rbp
  403967:	mov    rbp,rsp
  40396a:	mov    QWORD PTR [rbp-0x8],rdi
  40396e:	mov    eax,0x0
  403973:	pop    rbp
  403974:	ret    
  403975:	endbr64 
  403979:	push   rbp
  40397a:	mov    rbp,rsp
  40397d:	mov    QWORD PTR [rbp-0x8],rdi
  403981:	mov    eax,0x0
  403986:	pop    rbp
  403987:	ret    
  403988:	endbr64 
  40398c:	push   rbp
  40398d:	mov    rbp,rsp
  403990:	sub    rsp,0x20
  403994:	mov    QWORD PTR [rbp-0x18],rdi
  403998:	mov    rax,QWORD PTR [rbp-0x18]
  40399c:	mov    ecx,0x1
  4039a1:	mov    edx,0x0
  4039a6:	mov    esi,0x0
  4039ab:	mov    rdi,rax
  4039ae:	call   406584 <flatcc_verify_field@@Base>
  4039b3:	mov    DWORD PTR [rbp-0x4],eax
  4039b6:	cmp    DWORD PTR [rbp-0x4],0x0
  4039ba:	je     4039c1 <_start@@Base+0x1711>
  4039bc:	mov    eax,DWORD PTR [rbp-0x4]
  4039bf:	jmp    4039c6 <_start@@Base+0x1716>
  4039c1:	mov    eax,0x0
  4039c6:	leave  
  4039c7:	ret    
  4039c8:	endbr64 
  4039cc:	push   rbp
  4039cd:	mov    rbp,rsp
  4039d0:	sub    rsp,0x20
  4039d4:	mov    QWORD PTR [rbp-0x18],rdi
  4039d8:	mov    rax,QWORD PTR [rbp-0x18]
  4039dc:	mov    ecx,0x1
  4039e1:	mov    edx,0x1
  4039e6:	mov    esi,0x0
  4039eb:	mov    rdi,rax
  4039ee:	call   406584 <flatcc_verify_field@@Base>
  4039f3:	mov    DWORD PTR [rbp-0x4],eax
  4039f6:	cmp    DWORD PTR [rbp-0x4],0x0
  4039fa:	je     403a04 <_start@@Base+0x1754>
  4039fc:	mov    eax,DWORD PTR [rbp-0x4]
  4039ff:	jmp    403a84 <_start@@Base+0x17d4>
  403a04:	mov    rax,QWORD PTR [rbp-0x18]
  403a08:	mov    ecx,0x1
  403a0d:	mov    edx,0x1
  403a12:	mov    esi,0x1
  403a17:	mov    rdi,rax
  403a1a:	call   406584 <flatcc_verify_field@@Base>
  403a1f:	mov    DWORD PTR [rbp-0x4],eax
  403a22:	cmp    DWORD PTR [rbp-0x4],0x0
  403a26:	je     403a2d <_start@@Base+0x177d>
  403a28:	mov    eax,DWORD PTR [rbp-0x4]
  403a2b:	jmp    403a84 <_start@@Base+0x17d4>
  403a2d:	mov    rax,QWORD PTR [rbp-0x18]
  403a31:	mov    ecx,0x1
  403a36:	mov    edx,0x1
  403a3b:	mov    esi,0x2
  403a40:	mov    rdi,rax
  403a43:	call   406584 <flatcc_verify_field@@Base>
  403a48:	mov    DWORD PTR [rbp-0x4],eax
  403a4b:	cmp    DWORD PTR [rbp-0x4],0x0
  403a4f:	je     403a56 <_start@@Base+0x17a6>
  403a51:	mov    eax,DWORD PTR [rbp-0x4]
  403a54:	jmp    403a84 <_start@@Base+0x17d4>
  403a56:	mov    rax,QWORD PTR [rbp-0x18]
  403a5a:	mov    ecx,0x1
  403a5f:	mov    edx,0x1
  403a64:	mov    esi,0x3
  403a69:	mov    rdi,rax
  403a6c:	call   406584 <flatcc_verify_field@@Base>
  403a71:	mov    DWORD PTR [rbp-0x4],eax
  403a74:	cmp    DWORD PTR [rbp-0x4],0x0
  403a78:	je     403a7f <_start@@Base+0x17cf>
  403a7a:	mov    eax,DWORD PTR [rbp-0x4]
  403a7d:	jmp    403a84 <_start@@Base+0x17d4>
  403a7f:	mov    eax,0x0
  403a84:	leave  
  403a85:	ret    
  403a86:	endbr64 
  403a8a:	push   rbp
  403a8b:	mov    rbp,rsp
  403a8e:	sub    rsp,0x20
  403a92:	mov    QWORD PTR [rbp-0x18],rdi
  403a96:	mov    rax,QWORD PTR [rbp-0x18]
  403a9a:	mov    ecx,0x1
  403a9f:	mov    edx,0x0
  403aa4:	mov    esi,0x0
  403aa9:	mov    rdi,rax
  403aac:	call   406584 <flatcc_verify_field@@Base>
  403ab1:	mov    DWORD PTR [rbp-0x4],eax
  403ab4:	cmp    DWORD PTR [rbp-0x4],0x0
  403ab8:	je     403ac2 <_start@@Base+0x1812>
  403aba:	mov    eax,DWORD PTR [rbp-0x4]
  403abd:	jmp    403b9a <_start@@Base+0x18ea>
  403ac2:	mov    rax,QWORD PTR [rbp-0x18]
  403ac6:	mov    ecx,0x8
  403acb:	mov    edx,0x8
  403ad0:	mov    esi,0x1
  403ad5:	mov    rdi,rax
  403ad8:	call   406584 <flatcc_verify_field@@Base>
  403add:	mov    DWORD PTR [rbp-0x4],eax
  403ae0:	cmp    DWORD PTR [rbp-0x4],0x0
  403ae4:	je     403aee <_start@@Base+0x183e>
  403ae6:	mov    eax,DWORD PTR [rbp-0x4]
  403ae9:	jmp    403b9a <_start@@Base+0x18ea>
  403aee:	mov    rax,QWORD PTR [rbp-0x18]
  403af2:	mov    ecx,0x8
  403af7:	mov    edx,0x8
  403afc:	mov    esi,0x2
  403b01:	mov    rdi,rax
  403b04:	call   406584 <flatcc_verify_field@@Base>
  403b09:	mov    DWORD PTR [rbp-0x4],eax
  403b0c:	cmp    DWORD PTR [rbp-0x4],0x0
  403b10:	je     403b1a <_start@@Base+0x186a>
  403b12:	mov    eax,DWORD PTR [rbp-0x4]
  403b15:	jmp    403b9a <_start@@Base+0x18ea>
  403b1a:	mov    rax,QWORD PTR [rbp-0x18]
  403b1e:	mov    ecx,0x4
  403b23:	mov    edx,0x4
  403b28:	mov    esi,0x3
  403b2d:	mov    rdi,rax
  403b30:	call   406584 <flatcc_verify_field@@Base>
  403b35:	mov    DWORD PTR [rbp-0x4],eax
  403b38:	cmp    DWORD PTR [rbp-0x4],0x0
  403b3c:	je     403b43 <_start@@Base+0x1893>
  403b3e:	mov    eax,DWORD PTR [rbp-0x4]
  403b41:	jmp    403b9a <_start@@Base+0x18ea>
  403b43:	mov    rax,QWORD PTR [rbp-0x18]
  403b47:	mov    ecx,0x8
  403b4c:	mov    edx,0x8
  403b51:	mov    esi,0x4
  403b56:	mov    rdi,rax
  403b59:	call   406584 <flatcc_verify_field@@Base>
  403b5e:	mov    DWORD PTR [rbp-0x4],eax
  403b61:	cmp    DWORD PTR [rbp-0x4],0x0
  403b65:	je     403b6c <_start@@Base+0x18bc>
  403b67:	mov    eax,DWORD PTR [rbp-0x4]
  403b6a:	jmp    403b9a <_start@@Base+0x18ea>
  403b6c:	mov    rax,QWORD PTR [rbp-0x18]
  403b70:	mov    ecx,0x8
  403b75:	mov    edx,0x8
  403b7a:	mov    esi,0x5
  403b7f:	mov    rdi,rax
  403b82:	call   406584 <flatcc_verify_field@@Base>
  403b87:	mov    DWORD PTR [rbp-0x4],eax
  403b8a:	cmp    DWORD PTR [rbp-0x4],0x0
  403b8e:	je     403b95 <_start@@Base+0x18e5>
  403b90:	mov    eax,DWORD PTR [rbp-0x4]
  403b93:	jmp    403b9a <_start@@Base+0x18ea>
  403b95:	mov    eax,0x0
  403b9a:	leave  
  403b9b:	ret    
  403b9c:	endbr64 
  403ba0:	push   rbp
  403ba1:	mov    rbp,rsp
  403ba4:	sub    rsp,0x20
  403ba8:	mov    QWORD PTR [rbp-0x18],rdi
  403bac:	mov    rax,QWORD PTR [rbp-0x18]
  403bb0:	mov    edx,0x0
  403bb5:	mov    esi,0x0
  403bba:	mov    rdi,rax
  403bbd:	call   4065f5 <flatcc_verify_string_field@@Base>
  403bc2:	mov    DWORD PTR [rbp-0x4],eax
  403bc5:	cmp    DWORD PTR [rbp-0x4],0x0
  403bc9:	je     403bd0 <_start@@Base+0x1920>
  403bcb:	mov    eax,DWORD PTR [rbp-0x4]
  403bce:	jmp    403c27 <_start@@Base+0x1977>
  403bd0:	mov    rax,QWORD PTR [rbp-0x18]
  403bd4:	mov    ecx,0x8
  403bd9:	mov    edx,0x8
  403bde:	mov    esi,0x1
  403be3:	mov    rdi,rax
  403be6:	call   406584 <flatcc_verify_field@@Base>
  403beb:	mov    DWORD PTR [rbp-0x4],eax
  403bee:	cmp    DWORD PTR [rbp-0x4],0x0
  403bf2:	je     403bf9 <_start@@Base+0x1949>
  403bf4:	mov    eax,DWORD PTR [rbp-0x4]
  403bf7:	jmp    403c27 <_start@@Base+0x1977>
  403bf9:	mov    rax,QWORD PTR [rbp-0x18]
  403bfd:	mov    ecx,0x2
  403c02:	mov    edx,0x2
  403c07:	mov    esi,0x2
  403c0c:	mov    rdi,rax
  403c0f:	call   406584 <flatcc_verify_field@@Base>
  403c14:	mov    DWORD PTR [rbp-0x4],eax
  403c17:	cmp    DWORD PTR [rbp-0x4],0x0
  403c1b:	je     403c22 <_start@@Base+0x1972>
  403c1d:	mov    eax,DWORD PTR [rbp-0x4]
  403c20:	jmp    403c27 <_start@@Base+0x1977>
  403c22:	mov    eax,0x0
  403c27:	leave  
  403c28:	ret    
  403c29:	endbr64 
  403c2d:	push   rbp
  403c2e:	mov    rbp,rsp
  403c31:	sub    rsp,0x20
  403c35:	mov    QWORD PTR [rbp-0x18],rdi
  403c39:	mov    rax,QWORD PTR [rbp-0x18]
  403c3d:	lea    rcx,[rip+0x7d]        # 403cc1 <_start@@Base+0x1a11>
  403c44:	mov    edx,0x0
  403c49:	mov    esi,0x0
  403c4e:	mov    rdi,rax
  403c51:	call   4067fd <flatcc_verify_table_field@@Base>
  403c56:	mov    DWORD PTR [rbp-0x4],eax
  403c59:	cmp    DWORD PTR [rbp-0x4],0x0
  403c5d:	je     403c64 <_start@@Base+0x19b4>
  403c5f:	mov    eax,DWORD PTR [rbp-0x4]
  403c62:	jmp    403cbf <_start@@Base+0x1a0f>
  403c64:	mov    rax,QWORD PTR [rbp-0x18]
  403c68:	lea    rcx,[rip+0xd25]        # 404994 <_start@@Base+0x26e4>
  403c6f:	mov    edx,0x0
  403c74:	mov    esi,0x1
  403c79:	mov    rdi,rax
  403c7c:	call   4067fd <flatcc_verify_table_field@@Base>
  403c81:	mov    DWORD PTR [rbp-0x4],eax
  403c84:	cmp    DWORD PTR [rbp-0x4],0x0
  403c88:	je     403c8f <_start@@Base+0x19df>
  403c8a:	mov    eax,DWORD PTR [rbp-0x4]
  403c8d:	jmp    403cbf <_start@@Base+0x1a0f>
  403c8f:	mov    rax,QWORD PTR [rbp-0x18]
  403c93:	lea    rcx,[rip+0xfffffffffffffb5b]        # 4037f5 <_start@@Base+0x1545>
  403c9a:	mov    edx,0x0
  403c9f:	mov    esi,0x3
  403ca4:	mov    rdi,rax
  403ca7:	call   40724a <flatcc_verify_union_vector_field@@Base>
  403cac:	mov    DWORD PTR [rbp-0x4],eax
  403caf:	cmp    DWORD PTR [rbp-0x4],0x0
  403cb3:	je     403cba <_start@@Base+0x1a0a>
  403cb5:	mov    eax,DWORD PTR [rbp-0x4]
  403cb8:	jmp    403cbf <_start@@Base+0x1a0f>
  403cba:	mov    eax,0x0
  403cbf:	leave  
  403cc0:	ret    
  403cc1:	endbr64 
  403cc5:	push   rbp
  403cc6:	mov    rbp,rsp
  403cc9:	sub    rsp,0x20
  403ccd:	mov    QWORD PTR [rbp-0x18],rdi
  403cd1:	mov    rax,QWORD PTR [rbp-0x18]
  403cd5:	lea    rcx,[rip+0x7d]        # 403d59 <_start@@Base+0x1aa9>
  403cdc:	mov    edx,0x0
  403ce1:	mov    esi,0x0
  403ce6:	mov    rdi,rax
  403ce9:	call   4067fd <flatcc_verify_table_field@@Base>
  403cee:	mov    DWORD PTR [rbp-0x4],eax
  403cf1:	cmp    DWORD PTR [rbp-0x4],0x0
  403cf5:	je     403cfc <_start@@Base+0x1a4c>
  403cf7:	mov    eax,DWORD PTR [rbp-0x4]
  403cfa:	jmp    403d57 <_start@@Base+0x1aa7>
  403cfc:	mov    rax,QWORD PTR [rbp-0x18]
  403d00:	lea    rcx,[rip+0x1dd]        # 403ee4 <_start@@Base+0x1c34>
  403d07:	mov    edx,0x0
  403d0c:	mov    esi,0x1
  403d11:	mov    rdi,rax
  403d14:	call   4067fd <flatcc_verify_table_field@@Base>
  403d19:	mov    DWORD PTR [rbp-0x4],eax
  403d1c:	cmp    DWORD PTR [rbp-0x4],0x0
  403d20:	je     403d27 <_start@@Base+0x1a77>
  403d22:	mov    eax,DWORD PTR [rbp-0x4]
  403d25:	jmp    403d57 <_start@@Base+0x1aa7>
  403d27:	mov    rax,QWORD PTR [rbp-0x18]
  403d2b:	lea    rcx,[rip+0x21b]        # 403f4d <_start@@Base+0x1c9d>
  403d32:	mov    edx,0x0
  403d37:	mov    esi,0x2
  403d3c:	mov    rdi,rax
  403d3f:	call   4067fd <flatcc_verify_table_field@@Base>
  403d44:	mov    DWORD PTR [rbp-0x4],eax
  403d47:	cmp    DWORD PTR [rbp-0x4],0x0
  403d4b:	je     403d52 <_start@@Base+0x1aa2>
  403d4d:	mov    eax,DWORD PTR [rbp-0x4]
  403d50:	jmp    403d57 <_start@@Base+0x1aa7>
  403d52:	mov    eax,0x0
  403d57:	leave  
  403d58:	ret    
  403d59:	endbr64 
  403d5d:	push   rbp
  403d5e:	mov    rbp,rsp
  403d61:	sub    rsp,0x20
  403d65:	mov    QWORD PTR [rbp-0x18],rdi
  403d69:	mov    rax,QWORD PTR [rbp-0x18]
  403d6d:	mov    edx,0x0
  403d72:	mov    esi,0x0
  403d77:	mov    rdi,rax
  403d7a:	call   4065f5 <flatcc_verify_string_field@@Base>
  403d7f:	mov    DWORD PTR [rbp-0x4],eax
  403d82:	cmp    DWORD PTR [rbp-0x4],0x0
  403d86:	je     403d90 <_start@@Base+0x1ae0>
  403d88:	mov    eax,DWORD PTR [rbp-0x4]
  403d8b:	jmp    403ee2 <_start@@Base+0x1c32>
  403d90:	mov    rax,QWORD PTR [rbp-0x18]
  403d94:	mov    ecx,0x4
  403d99:	mov    edx,0x4
  403d9e:	mov    esi,0x1
  403da3:	mov    rdi,rax
  403da6:	call   406584 <flatcc_verify_field@@Base>
  403dab:	mov    DWORD PTR [rbp-0x4],eax
  403dae:	cmp    DWORD PTR [rbp-0x4],0x0
  403db2:	je     403dbc <_start@@Base+0x1b0c>
  403db4:	mov    eax,DWORD PTR [rbp-0x4]
  403db7:	jmp    403ee2 <_start@@Base+0x1c32>
  403dbc:	mov    rax,QWORD PTR [rbp-0x18]
  403dc0:	mov    edx,0x0
  403dc5:	mov    esi,0x2
  403dca:	mov    rdi,rax
  403dcd:	call   4065f5 <flatcc_verify_string_field@@Base>
  403dd2:	mov    DWORD PTR [rbp-0x4],eax
  403dd5:	cmp    DWORD PTR [rbp-0x4],0x0
  403dd9:	je     403de3 <_start@@Base+0x1b33>
  403ddb:	mov    eax,DWORD PTR [rbp-0x4]
  403dde:	jmp    403ee2 <_start@@Base+0x1c32>
  403de3:	mov    rax,QWORD PTR [rbp-0x18]
  403de7:	mov    ecx,0x8
  403dec:	mov    edx,0x8
  403df1:	mov    esi,0x3
  403df6:	mov    rdi,rax
  403df9:	call   406584 <flatcc_verify_field@@Base>
  403dfe:	mov    DWORD PTR [rbp-0x4],eax
  403e01:	cmp    DWORD PTR [rbp-0x4],0x0
  403e05:	je     403e0f <_start@@Base+0x1b5f>
  403e07:	mov    eax,DWORD PTR [rbp-0x4]
  403e0a:	jmp    403ee2 <_start@@Base+0x1c32>
  403e0f:	mov    rax,QWORD PTR [rbp-0x18]
  403e13:	mov    edx,0x0
  403e18:	mov    esi,0x4
  403e1d:	mov    rdi,rax
  403e20:	call   4065f5 <flatcc_verify_string_field@@Base>
  403e25:	mov    DWORD PTR [rbp-0x4],eax
  403e28:	cmp    DWORD PTR [rbp-0x4],0x0
  403e2c:	je     403e36 <_start@@Base+0x1b86>
  403e2e:	mov    eax,DWORD PTR [rbp-0x4]
  403e31:	jmp    403ee2 <_start@@Base+0x1c32>
  403e36:	mov    rax,QWORD PTR [rbp-0x18]
  403e3a:	mov    ecx,0x8
  403e3f:	mov    edx,0x8
  403e44:	mov    esi,0x5
  403e49:	mov    rdi,rax
  403e4c:	call   406584 <flatcc_verify_field@@Base>
  403e51:	mov    DWORD PTR [rbp-0x4],eax
  403e54:	cmp    DWORD PTR [rbp-0x4],0x0
  403e58:	je     403e62 <_start@@Base+0x1bb2>
  403e5a:	mov    eax,DWORD PTR [rbp-0x4]
  403e5d:	jmp    403ee2 <_start@@Base+0x1c32>
  403e62:	mov    rax,QWORD PTR [rbp-0x18]
  403e66:	mov    ecx,0x4
  403e6b:	mov    edx,0x4
  403e70:	mov    esi,0x6
  403e75:	mov    rdi,rax
  403e78:	call   406584 <flatcc_verify_field@@Base>
  403e7d:	mov    DWORD PTR [rbp-0x4],eax
  403e80:	cmp    DWORD PTR [rbp-0x4],0x0
  403e84:	je     403e8b <_start@@Base+0x1bdb>
  403e86:	mov    eax,DWORD PTR [rbp-0x4]
  403e89:	jmp    403ee2 <_start@@Base+0x1c32>
  403e8b:	mov    rax,QWORD PTR [rbp-0x18]
  403e8f:	mov    ecx,0x8
  403e94:	mov    edx,0x8
  403e99:	mov    esi,0x7
  403e9e:	mov    rdi,rax
  403ea1:	call   406584 <flatcc_verify_field@@Base>
  403ea6:	mov    DWORD PTR [rbp-0x4],eax
  403ea9:	cmp    DWORD PTR [rbp-0x4],0x0
  403ead:	je     403eb4 <_start@@Base+0x1c04>
  403eaf:	mov    eax,DWORD PTR [rbp-0x4]
  403eb2:	jmp    403ee2 <_start@@Base+0x1c32>
  403eb4:	mov    rax,QWORD PTR [rbp-0x18]
  403eb8:	mov    ecx,0x4
  403ebd:	mov    edx,0x4
  403ec2:	mov    esi,0x8
  403ec7:	mov    rdi,rax
  403eca:	call   406584 <flatcc_verify_field@@Base>
  403ecf:	mov    DWORD PTR [rbp-0x4],eax
  403ed2:	cmp    DWORD PTR [rbp-0x4],0x0
  403ed6:	je     403edd <_start@@Base+0x1c2d>
  403ed8:	mov    eax,DWORD PTR [rbp-0x4]
  403edb:	jmp    403ee2 <_start@@Base+0x1c32>
  403edd:	mov    eax,0x0
  403ee2:	leave  
  403ee3:	ret    
  403ee4:	endbr64 
  403ee8:	push   rbp
  403ee9:	mov    rbp,rsp
  403eec:	sub    rsp,0x20
  403ef0:	mov    QWORD PTR [rbp-0x18],rdi
  403ef4:	mov    rax,QWORD PTR [rbp-0x18]
  403ef8:	mov    ecx,0x8
  403efd:	mov    edx,0x8
  403f02:	mov    esi,0x0
  403f07:	mov    rdi,rax
  403f0a:	call   406584 <flatcc_verify_field@@Base>
  403f0f:	mov    DWORD PTR [rbp-0x4],eax
  403f12:	cmp    DWORD PTR [rbp-0x4],0x0
  403f16:	je     403f1d <_start@@Base+0x1c6d>
  403f18:	mov    eax,DWORD PTR [rbp-0x4]
  403f1b:	jmp    403f4b <_start@@Base+0x1c9b>
  403f1d:	mov    rax,QWORD PTR [rbp-0x18]
  403f21:	mov    ecx,0x4
  403f26:	mov    edx,0x4
  403f2b:	mov    esi,0x1
  403f30:	mov    rdi,rax
  403f33:	call   406584 <flatcc_verify_field@@Base>
  403f38:	mov    DWORD PTR [rbp-0x4],eax
  403f3b:	cmp    DWORD PTR [rbp-0x4],0x0
  403f3f:	je     403f46 <_start@@Base+0x1c96>
  403f41:	mov    eax,DWORD PTR [rbp-0x4]
  403f44:	jmp    403f4b <_start@@Base+0x1c9b>
  403f46:	mov    eax,0x0
  403f4b:	leave  
  403f4c:	ret    
  403f4d:	endbr64 
  403f51:	push   rbp
  403f52:	mov    rbp,rsp
  403f55:	sub    rsp,0x20
  403f59:	mov    QWORD PTR [rbp-0x18],rdi
  403f5d:	mov    rax,QWORD PTR [rbp-0x18]
  403f61:	mov    ecx,0x8
  403f66:	mov    edx,0x8
  403f6b:	mov    esi,0x0
  403f70:	mov    rdi,rax
  403f73:	call   406584 <flatcc_verify_field@@Base>
  403f78:	mov    DWORD PTR [rbp-0x4],eax
  403f7b:	cmp    DWORD PTR [rbp-0x4],0x0
  403f7f:	je     403f86 <_start@@Base+0x1cd6>
  403f81:	mov    eax,DWORD PTR [rbp-0x4]
  403f84:	jmp    403fb4 <_start@@Base+0x1d04>
  403f86:	mov    rax,QWORD PTR [rbp-0x18]
  403f8a:	mov    ecx,0x4
  403f8f:	mov    edx,0x4
  403f94:	mov    esi,0x1
  403f99:	mov    rdi,rax
  403f9c:	call   406584 <flatcc_verify_field@@Base>
  403fa1:	mov    DWORD PTR [rbp-0x4],eax
  403fa4:	cmp    DWORD PTR [rbp-0x4],0x0
  403fa8:	je     403faf <_start@@Base+0x1cff>
  403faa:	mov    eax,DWORD PTR [rbp-0x4]
  403fad:	jmp    403fb4 <_start@@Base+0x1d04>
  403faf:	mov    eax,0x0
  403fb4:	leave  
  403fb5:	ret    
  403fb6:	endbr64 
  403fba:	push   rbp
  403fbb:	mov    rbp,rsp
  403fbe:	sub    rsp,0x20
  403fc2:	mov    QWORD PTR [rbp-0x18],rdi
  403fc6:	mov    rax,QWORD PTR [rbp-0x18]
  403fca:	mov    r9d,0xffffffff
  403fd0:	mov    r8d,0x1
  403fd6:	mov    ecx,0x1
  403fdb:	mov    edx,0x0
  403fe0:	mov    esi,0x0
  403fe5:	mov    rdi,rax
  403fe8:	call   40668e <flatcc_verify_vector_field@@Base>
  403fed:	mov    DWORD PTR [rbp-0x4],eax
  403ff0:	cmp    DWORD PTR [rbp-0x4],0x0
  403ff4:	je     403ffb <_start@@Base+0x1d4b>
  403ff6:	mov    eax,DWORD PTR [rbp-0x4]
  403ff9:	jmp    40406b <_start@@Base+0x1dbb>
  403ffb:	mov    rax,QWORD PTR [rbp-0x18]
  403fff:	mov    r9d,0xffffffff
  404005:	mov    r8d,0x1
  40400b:	mov    ecx,0x1
  404010:	mov    edx,0x0
  404015:	mov    esi,0x1
  40401a:	mov    rdi,rax
  40401d:	call   40668e <flatcc_verify_vector_field@@Base>
  404022:	mov    DWORD PTR [rbp-0x4],eax
  404025:	cmp    DWORD PTR [rbp-0x4],0x0
  404029:	je     404030 <_start@@Base+0x1d80>
  40402b:	mov    eax,DWORD PTR [rbp-0x4]
  40402e:	jmp    40406b <_start@@Base+0x1dbb>
  404030:	mov    rax,QWORD PTR [rbp-0x18]
  404034:	lea    r9,[rip+0x32]        # 40406d <_start@@Base+0x1dbd>
  40403b:	mov    r8d,0x1
  404041:	mov    ecx,0x0
  404046:	mov    edx,0x0
  40404b:	mov    esi,0x2
  404050:	mov    rdi,rax
  404053:	call   406ef9 <flatcc_verify_table_as_nested_root@@Base>
  404058:	mov    DWORD PTR [rbp-0x4],eax
  40405b:	cmp    DWORD PTR [rbp-0x4],0x0
  40405f:	je     404066 <_start@@Base+0x1db6>
  404061:	mov    eax,DWORD PTR [rbp-0x4]
  404064:	jmp    40406b <_start@@Base+0x1dbb>
  404066:	mov    eax,0x0
  40406b:	leave  
  40406c:	ret    
  40406d:	endbr64 
  404071:	push   rbp
  404072:	mov    rbp,rsp
  404075:	sub    rsp,0x20
  404079:	mov    QWORD PTR [rbp-0x18],rdi
  40407d:	mov    rax,QWORD PTR [rbp-0x18]
  404081:	mov    ecx,0x10
  404086:	mov    edx,0x20
  40408b:	mov    esi,0x0
  404090:	mov    rdi,rax
  404093:	call   406584 <flatcc_verify_field@@Base>
  404098:	mov    DWORD PTR [rbp-0x4],eax
  40409b:	cmp    DWORD PTR [rbp-0x4],0x0
  40409f:	je     4040a9 <_start@@Base+0x1df9>
  4040a1:	mov    eax,DWORD PTR [rbp-0x4]
  4040a4:	jmp    4046bb <_start@@Base+0x240b>
  4040a9:	mov    rax,QWORD PTR [rbp-0x18]
  4040ad:	mov    ecx,0x2
  4040b2:	mov    edx,0x2
  4040b7:	mov    esi,0x2
  4040bc:	mov    rdi,rax
  4040bf:	call   406584 <flatcc_verify_field@@Base>
  4040c4:	mov    DWORD PTR [rbp-0x4],eax
  4040c7:	cmp    DWORD PTR [rbp-0x4],0x0
  4040cb:	je     4040d5 <_start@@Base+0x1e25>
  4040cd:	mov    eax,DWORD PTR [rbp-0x4]
  4040d0:	jmp    4046bb <_start@@Base+0x240b>
  4040d5:	mov    rax,QWORD PTR [rbp-0x18]
  4040d9:	mov    ecx,0x2
  4040de:	mov    edx,0x2
  4040e3:	mov    esi,0x1
  4040e8:	mov    rdi,rax
  4040eb:	call   406584 <flatcc_verify_field@@Base>
  4040f0:	mov    DWORD PTR [rbp-0x4],eax
  4040f3:	cmp    DWORD PTR [rbp-0x4],0x0
  4040f7:	je     404101 <_start@@Base+0x1e51>
  4040f9:	mov    eax,DWORD PTR [rbp-0x4]
  4040fc:	jmp    4046bb <_start@@Base+0x240b>
  404101:	mov    rax,QWORD PTR [rbp-0x18]
  404105:	mov    edx,0x1
  40410a:	mov    esi,0x3
  40410f:	mov    rdi,rax
  404112:	call   4065f5 <flatcc_verify_string_field@@Base>
  404117:	mov    DWORD PTR [rbp-0x4],eax
  40411a:	cmp    DWORD PTR [rbp-0x4],0x0
  40411e:	je     404128 <_start@@Base+0x1e78>
  404120:	mov    eax,DWORD PTR [rbp-0x4]
  404123:	jmp    4046bb <_start@@Base+0x240b>
  404128:	mov    rax,QWORD PTR [rbp-0x18]
  40412c:	mov    ecx,0x1
  404131:	mov    edx,0x1
  404136:	mov    esi,0x6
  40413b:	mov    rdi,rax
  40413e:	call   406584 <flatcc_verify_field@@Base>
  404143:	mov    DWORD PTR [rbp-0x4],eax
  404146:	cmp    DWORD PTR [rbp-0x4],0x0
  40414a:	je     404154 <_start@@Base+0x1ea4>
  40414c:	mov    eax,DWORD PTR [rbp-0x4]
  40414f:	jmp    4046bb <_start@@Base+0x240b>
  404154:	mov    rax,QWORD PTR [rbp-0x18]
  404158:	mov    r9d,0xffffffff
  40415e:	mov    r8d,0x1
  404164:	mov    ecx,0x1
  404169:	mov    edx,0x0
  40416e:	mov    esi,0x5
  404173:	mov    rdi,rax
  404176:	call   40668e <flatcc_verify_vector_field@@Base>
  40417b:	mov    DWORD PTR [rbp-0x4],eax
  40417e:	cmp    DWORD PTR [rbp-0x4],0x0
  404182:	je     40418c <_start@@Base+0x1edc>
  404184:	mov    eax,DWORD PTR [rbp-0x4]
  404187:	jmp    4046bb <_start@@Base+0x240b>
  40418c:	mov    rax,QWORD PTR [rbp-0x18]
  404190:	lea    rcx,[rip+0xfffffffffffffed6]        # 40406d <_start@@Base+0x1dbd>
  404197:	mov    edx,0x0
  40419c:	mov    esi,0xb
  4041a1:	mov    rdi,rax
  4041a4:	call   4068b3 <flatcc_verify_table_vector_field@@Base>
  4041a9:	mov    DWORD PTR [rbp-0x4],eax
  4041ac:	cmp    DWORD PTR [rbp-0x4],0x0
  4041b0:	je     4041ba <_start@@Base+0x1f0a>
  4041b2:	mov    eax,DWORD PTR [rbp-0x4]
  4041b5:	jmp    4046bb <_start@@Base+0x240b>
  4041ba:	mov    rax,QWORD PTR [rbp-0x18]
  4041be:	mov    edx,0x0
  4041c3:	mov    esi,0xa
  4041c8:	mov    rdi,rax
  4041cb:	call   406764 <flatcc_verify_string_vector_field@@Base>
  4041d0:	mov    DWORD PTR [rbp-0x4],eax
  4041d3:	cmp    DWORD PTR [rbp-0x4],0x0
  4041d7:	je     4041e1 <_start@@Base+0x1f31>
  4041d9:	mov    eax,DWORD PTR [rbp-0x4]
  4041dc:	jmp    4046bb <_start@@Base+0x240b>
  4041e1:	mov    rax,QWORD PTR [rbp-0x18]
  4041e5:	mov    edx,0x0
  4041ea:	mov    esi,0x1c
  4041ef:	mov    rdi,rax
  4041f2:	call   406764 <flatcc_verify_string_vector_field@@Base>
  4041f7:	mov    DWORD PTR [rbp-0x4],eax
  4041fa:	cmp    DWORD PTR [rbp-0x4],0x0
  4041fe:	je     404208 <_start@@Base+0x1f58>
  404200:	mov    eax,DWORD PTR [rbp-0x4]
  404203:	jmp    4046bb <_start@@Base+0x240b>
  404208:	mov    rax,QWORD PTR [rbp-0x18]
  40420c:	mov    r9d,0xffffffff
  404212:	mov    r8d,0x1
  404218:	mov    ecx,0x1
  40421d:	mov    edx,0x0
  404222:	mov    esi,0x18
  404227:	mov    rdi,rax
  40422a:	call   40668e <flatcc_verify_vector_field@@Base>
  40422f:	mov    DWORD PTR [rbp-0x4],eax
  404232:	cmp    DWORD PTR [rbp-0x4],0x0
  404236:	je     404240 <_start@@Base+0x1f90>
  404238:	mov    eax,DWORD PTR [rbp-0x4]
  40423b:	jmp    4046bb <_start@@Base+0x240b>
  404240:	mov    rax,QWORD PTR [rbp-0x18]
  404244:	mov    r9d,0x1fffffff
  40424a:	mov    r8d,0x4
  404250:	mov    ecx,0x8
  404255:	mov    edx,0x0
  40425a:	mov    esi,0x1d
  40425f:	mov    rdi,rax
  404262:	call   40668e <flatcc_verify_vector_field@@Base>
  404267:	mov    DWORD PTR [rbp-0x4],eax
  40426a:	cmp    DWORD PTR [rbp-0x4],0x0
  40426e:	je     404278 <_start@@Base+0x1fc8>
  404270:	mov    eax,DWORD PTR [rbp-0x4]
  404273:	jmp    4046bb <_start@@Base+0x240b>
  404278:	mov    rax,QWORD PTR [rbp-0x18]
  40427c:	lea    rcx,[rip+0xfffffffffffffdea]        # 40406d <_start@@Base+0x1dbd>
  404283:	mov    edx,0x0
  404288:	mov    esi,0xc
  40428d:	mov    rdi,rax
  404290:	call   4067fd <flatcc_verify_table_field@@Base>
  404295:	mov    DWORD PTR [rbp-0x4],eax
  404298:	cmp    DWORD PTR [rbp-0x4],0x0
  40429c:	je     4042a6 <_start@@Base+0x1ff6>
  40429e:	mov    eax,DWORD PTR [rbp-0x4]
  4042a1:	jmp    4046bb <_start@@Base+0x240b>
  4042a6:	mov    rax,QWORD PTR [rbp-0x18]
  4042aa:	lea    rcx,[rip+0xfffffffffffff544]        # 4037f5 <_start@@Base+0x1545>
  4042b1:	mov    edx,0x0
  4042b6:	mov    esi,0x8
  4042bb:	mov    rdi,rax
  4042be:	call   407042 <flatcc_verify_union_field@@Base>
  4042c3:	mov    DWORD PTR [rbp-0x4],eax
  4042c6:	cmp    DWORD PTR [rbp-0x4],0x0
  4042ca:	je     4042d4 <_start@@Base+0x2024>
  4042cc:	mov    eax,DWORD PTR [rbp-0x4]
  4042cf:	jmp    4046bb <_start@@Base+0x240b>
  4042d4:	mov    rax,QWORD PTR [rbp-0x18]
  4042d8:	mov    r9d,0x3fffffff
  4042de:	mov    r8d,0x2
  4042e4:	mov    ecx,0x4
  4042e9:	mov    edx,0x0
  4042ee:	mov    esi,0x9
  4042f3:	mov    rdi,rax
  4042f6:	call   40668e <flatcc_verify_vector_field@@Base>
  4042fb:	mov    DWORD PTR [rbp-0x4],eax
  4042fe:	cmp    DWORD PTR [rbp-0x4],0x0
  404302:	je     40430c <_start@@Base+0x205c>
  404304:	mov    eax,DWORD PTR [rbp-0x4]
  404307:	jmp    4046bb <_start@@Base+0x240b>
  40430c:	mov    rax,QWORD PTR [rbp-0x18]
  404310:	mov    r9d,0x3fffffff
  404316:	mov    r8d,0x2
  40431c:	mov    ecx,0x4
  404321:	mov    edx,0x0
  404326:	mov    esi,0x1f
  40432b:	mov    rdi,rax
  40432e:	call   40668e <flatcc_verify_vector_field@@Base>
  404333:	mov    DWORD PTR [rbp-0x4],eax
  404336:	cmp    DWORD PTR [rbp-0x4],0x0
  40433a:	je     404344 <_start@@Base+0x2094>
  40433c:	mov    eax,DWORD PTR [rbp-0x4]
  40433f:	jmp    4046bb <_start@@Base+0x240b>
  404344:	mov    rax,QWORD PTR [rbp-0x18]
  404348:	lea    r9,[rip+0xfffffffffffffd1e]        # 40406d <_start@@Base+0x1dbd>
  40434f:	mov    r8d,0x1
  404355:	mov    ecx,0x0
  40435a:	mov    edx,0x0
  40435f:	mov    esi,0xd
  404364:	mov    rdi,rax
  404367:	call   406ef9 <flatcc_verify_table_as_nested_root@@Base>
  40436c:	mov    DWORD PTR [rbp-0x4],eax
  40436f:	cmp    DWORD PTR [rbp-0x4],0x0
  404373:	je     40437d <_start@@Base+0x20cd>
  404375:	mov    eax,DWORD PTR [rbp-0x4]
  404378:	jmp    4046bb <_start@@Base+0x240b>
  40437d:	mov    rax,QWORD PTR [rbp-0x18]
  404381:	lea    rcx,[rip+0xfffffffffffff814]        # 403b9c <_start@@Base+0x18ec>
  404388:	mov    edx,0x0
  40438d:	mov    esi,0xe
  404392:	mov    rdi,rax
  404395:	call   4067fd <flatcc_verify_table_field@@Base>
  40439a:	mov    DWORD PTR [rbp-0x4],eax
  40439d:	cmp    DWORD PTR [rbp-0x4],0x0
  4043a1:	je     4043ab <_start@@Base+0x20fb>
  4043a3:	mov    eax,DWORD PTR [rbp-0x4]
  4043a6:	jmp    4046bb <_start@@Base+0x240b>
  4043ab:	mov    rax,QWORD PTR [rbp-0x18]
  4043af:	mov    ecx,0x1
  4043b4:	mov    edx,0x1
  4043b9:	mov    esi,0xf
  4043be:	mov    rdi,rax
  4043c1:	call   406584 <flatcc_verify_field@@Base>
  4043c6:	mov    DWORD PTR [rbp-0x4],eax
  4043c9:	cmp    DWORD PTR [rbp-0x4],0x0
  4043cd:	je     4043d7 <_start@@Base+0x2127>
  4043cf:	mov    eax,DWORD PTR [rbp-0x4]
  4043d2:	jmp    4046bb <_start@@Base+0x240b>
  4043d7:	mov    rax,QWORD PTR [rbp-0x18]
  4043db:	mov    ecx,0x4
  4043e0:	mov    edx,0x4
  4043e5:	mov    esi,0x10
  4043ea:	mov    rdi,rax
  4043ed:	call   406584 <flatcc_verify_field@@Base>
  4043f2:	mov    DWORD PTR [rbp-0x4],eax
  4043f5:	cmp    DWORD PTR [rbp-0x4],0x0
  4043f9:	je     404403 <_start@@Base+0x2153>
  4043fb:	mov    eax,DWORD PTR [rbp-0x4]
  4043fe:	jmp    4046bb <_start@@Base+0x240b>
  404403:	mov    rax,QWORD PTR [rbp-0x18]
  404407:	mov    ecx,0x4
  40440c:	mov    edx,0x4
  404411:	mov    esi,0x11
  404416:	mov    rdi,rax
  404419:	call   406584 <flatcc_verify_field@@Base>
  40441e:	mov    DWORD PTR [rbp-0x4],eax
  404421:	cmp    DWORD PTR [rbp-0x4],0x0
  404425:	je     40442f <_start@@Base+0x217f>
  404427:	mov    eax,DWORD PTR [rbp-0x4]
  40442a:	jmp    4046bb <_start@@Base+0x240b>
  40442f:	mov    rax,QWORD PTR [rbp-0x18]
  404433:	mov    ecx,0x8
  404438:	mov    edx,0x8
  40443d:	mov    esi,0x12
  404442:	mov    rdi,rax
  404445:	call   406584 <flatcc_verify_field@@Base>
  40444a:	mov    DWORD PTR [rbp-0x4],eax
  40444d:	cmp    DWORD PTR [rbp-0x4],0x0
  404451:	je     40445b <_start@@Base+0x21ab>
  404453:	mov    eax,DWORD PTR [rbp-0x4]
  404456:	jmp    4046bb <_start@@Base+0x240b>
  40445b:	mov    rax,QWORD PTR [rbp-0x18]
  40445f:	mov    ecx,0x8
  404464:	mov    edx,0x8
  404469:	mov    esi,0x13
  40446e:	mov    rdi,rax
  404471:	call   406584 <flatcc_verify_field@@Base>
  404476:	mov    DWORD PTR [rbp-0x4],eax
  404479:	cmp    DWORD PTR [rbp-0x4],0x0
  40447d:	je     404487 <_start@@Base+0x21d7>
  40447f:	mov    eax,DWORD PTR [rbp-0x4]
  404482:	jmp    4046bb <_start@@Base+0x240b>
  404487:	mov    rax,QWORD PTR [rbp-0x18]
  40448b:	mov    ecx,0x4
  404490:	mov    edx,0x4
  404495:	mov    esi,0x14
  40449a:	mov    rdi,rax
  40449d:	call   406584 <flatcc_verify_field@@Base>
  4044a2:	mov    DWORD PTR [rbp-0x4],eax
  4044a5:	cmp    DWORD PTR [rbp-0x4],0x0
  4044a9:	je     4044b3 <_start@@Base+0x2203>
  4044ab:	mov    eax,DWORD PTR [rbp-0x4]
  4044ae:	jmp    4046bb <_start@@Base+0x240b>
  4044b3:	mov    rax,QWORD PTR [rbp-0x18]
  4044b7:	mov    ecx,0x4
  4044bc:	mov    edx,0x4
  4044c1:	mov    esi,0x15
  4044c6:	mov    rdi,rax
  4044c9:	call   406584 <flatcc_verify_field@@Base>
  4044ce:	mov    DWORD PTR [rbp-0x4],eax
  4044d1:	cmp    DWORD PTR [rbp-0x4],0x0
  4044d5:	je     4044df <_start@@Base+0x222f>
  4044d7:	mov    eax,DWORD PTR [rbp-0x4]
  4044da:	jmp    4046bb <_start@@Base+0x240b>
  4044df:	mov    rax,QWORD PTR [rbp-0x18]
  4044e3:	mov    ecx,0x8
  4044e8:	mov    edx,0x8
  4044ed:	mov    esi,0x16
  4044f2:	mov    rdi,rax
  4044f5:	call   406584 <flatcc_verify_field@@Base>
  4044fa:	mov    DWORD PTR [rbp-0x4],eax
  4044fd:	cmp    DWORD PTR [rbp-0x4],0x0
  404501:	je     40450b <_start@@Base+0x225b>
  404503:	mov    eax,DWORD PTR [rbp-0x4]
  404506:	jmp    4046bb <_start@@Base+0x240b>
  40450b:	mov    rax,QWORD PTR [rbp-0x18]
  40450f:	mov    ecx,0x8
  404514:	mov    edx,0x8
  404519:	mov    esi,0x17
  40451e:	mov    rdi,rax
  404521:	call   406584 <flatcc_verify_field@@Base>
  404526:	mov    DWORD PTR [rbp-0x4],eax
  404529:	cmp    DWORD PTR [rbp-0x4],0x0
  40452d:	je     404537 <_start@@Base+0x2287>
  40452f:	mov    eax,DWORD PTR [rbp-0x4]
  404532:	jmp    4046bb <_start@@Base+0x240b>
  404537:	mov    rax,QWORD PTR [rbp-0x18]
  40453b:	mov    ecx,0x4
  404540:	mov    edx,0x4
  404545:	mov    esi,0x19
  40454a:	mov    rdi,rax
  40454d:	call   406584 <flatcc_verify_field@@Base>
  404552:	mov    DWORD PTR [rbp-0x4],eax
  404555:	cmp    DWORD PTR [rbp-0x4],0x0
  404559:	je     404563 <_start@@Base+0x22b3>
  40455b:	mov    eax,DWORD PTR [rbp-0x4]
  40455e:	jmp    4046bb <_start@@Base+0x240b>
  404563:	mov    rax,QWORD PTR [rbp-0x18]
  404567:	mov    ecx,0x4
  40456c:	mov    edx,0x4
  404571:	mov    esi,0x1a
  404576:	mov    rdi,rax
  404579:	call   406584 <flatcc_verify_field@@Base>
  40457e:	mov    DWORD PTR [rbp-0x4],eax
  404581:	cmp    DWORD PTR [rbp-0x4],0x0
  404585:	je     40458f <_start@@Base+0x22df>
  404587:	mov    eax,DWORD PTR [rbp-0x4]
  40458a:	jmp    4046bb <_start@@Base+0x240b>
  40458f:	mov    rax,QWORD PTR [rbp-0x18]
  404593:	mov    ecx,0x4
  404598:	mov    edx,0x4
  40459d:	mov    esi,0x1b
  4045a2:	mov    rdi,rax
  4045a5:	call   406584 <flatcc_verify_field@@Base>
  4045aa:	mov    DWORD PTR [rbp-0x4],eax
  4045ad:	cmp    DWORD PTR [rbp-0x4],0x0
  4045b1:	je     4045bb <_start@@Base+0x230b>
  4045b3:	mov    eax,DWORD PTR [rbp-0x4]
  4045b6:	jmp    4046bb <_start@@Base+0x240b>
  4045bb:	mov    rax,QWORD PTR [rbp-0x18]
  4045bf:	mov    r9d,0xffffffff
  4045c5:	mov    r8d,0x1
  4045cb:	mov    ecx,0x1
  4045d0:	mov    edx,0x0
  4045d5:	mov    esi,0x1e
  4045da:	mov    rdi,rax
  4045dd:	call   40668e <flatcc_verify_vector_field@@Base>
  4045e2:	mov    DWORD PTR [rbp-0x4],eax
  4045e5:	cmp    DWORD PTR [rbp-0x4],0x0
  4045e9:	je     4045f3 <_start@@Base+0x2343>
  4045eb:	mov    eax,DWORD PTR [rbp-0x4]
  4045ee:	jmp    4046bb <_start@@Base+0x240b>
  4045f3:	mov    rax,QWORD PTR [rbp-0x18]
  4045f7:	mov    r9d,0x1fffffff
  4045fd:	mov    r8d,0x8
  404603:	mov    ecx,0x8
  404608:	mov    edx,0x0
  40460d:	mov    esi,0x20
  404612:	mov    rdi,rax
  404615:	call   40668e <flatcc_verify_vector_field@@Base>
  40461a:	mov    DWORD PTR [rbp-0x4],eax
  40461d:	cmp    DWORD PTR [rbp-0x4],0x0
  404621:	je     40462b <_start@@Base+0x237b>
  404623:	mov    eax,DWORD PTR [rbp-0x4]
  404626:	jmp    4046bb <_start@@Base+0x240b>
  40462b:	mov    rax,QWORD PTR [rbp-0x18]
  40462f:	mov    r9d,0x1fffffff
  404635:	mov    r8d,0x8
  40463b:	mov    ecx,0x8
  404640:	mov    edx,0x0
  404645:	mov    esi,0x21
  40464a:	mov    rdi,rax
  40464d:	call   40668e <flatcc_verify_vector_field@@Base>
  404652:	mov    DWORD PTR [rbp-0x4],eax
  404655:	cmp    DWORD PTR [rbp-0x4],0x0
  404659:	je     404660 <_start@@Base+0x23b0>
  40465b:	mov    eax,DWORD PTR [rbp-0x4]
  40465e:	jmp    4046bb <_start@@Base+0x240b>
  404660:	mov    rax,QWORD PTR [rbp-0x18]
  404664:	lea    rcx,[rip+0xfffffffffffff2e4]        # 40394f <_start@@Base+0x169f>
  40466b:	mov    edx,0x0
  404670:	mov    esi,0x22
  404675:	mov    rdi,rax
  404678:	call   4067fd <flatcc_verify_table_field@@Base>
  40467d:	mov    DWORD PTR [rbp-0x4],eax
  404680:	cmp    DWORD PTR [rbp-0x4],0x0
  404684:	je     40468b <_start@@Base+0x23db>
  404686:	mov    eax,DWORD PTR [rbp-0x4]
  404689:	jmp    4046bb <_start@@Base+0x240b>
  40468b:	mov    rax,QWORD PTR [rbp-0x18]
  40468f:	lea    rcx,[rip+0xfffffffffffff920]        # 403fb6 <_start@@Base+0x1d06>
  404696:	mov    edx,0x0
  40469b:	mov    esi,0x23
  4046a0:	mov    rdi,rax
  4046a3:	call   4067fd <flatcc_verify_table_field@@Base>
  4046a8:	mov    DWORD PTR [rbp-0x4],eax
  4046ab:	cmp    DWORD PTR [rbp-0x4],0x0
  4046af:	je     4046b6 <_start@@Base+0x2406>
  4046b1:	mov    eax,DWORD PTR [rbp-0x4]
  4046b4:	jmp    4046bb <_start@@Base+0x240b>
  4046b6:	mov    eax,0x0
  4046bb:	leave  
  4046bc:	ret    
  4046bd:	push   rbp
  4046be:	mov    rbp,rsp
  4046c1:	sub    rsp,0x10
  4046c5:	mov    QWORD PTR [rbp-0x8],rdi
  4046c9:	mov    QWORD PTR [rbp-0x10],rsi
  4046cd:	mov    rsi,QWORD PTR [rbp-0x10]
  4046d1:	mov    rax,QWORD PTR [rbp-0x8]
  4046d5:	lea    rcx,[rip+0xfffffffffffff991]        # 40406d <_start@@Base+0x1dbd>
  4046dc:	lea    rdx,[rip+0x3a81]        # 408164 <_IO_stdin_used@@Base+0x164>
  4046e3:	mov    rdi,rax
  4046e6:	call   406cf1 <flatcc_verify_table_as_root@@Base>
  4046eb:	leave  
  4046ec:	ret    
  4046ed:	push   rbp
  4046ee:	mov    rbp,rsp
  4046f1:	sub    rsp,0x20
  4046f5:	mov    QWORD PTR [rbp-0x8],rdi
  4046f9:	mov    QWORD PTR [rbp-0x10],rsi
  4046fd:	mov    QWORD PTR [rbp-0x18],rdx
  404701:	mov    rdx,QWORD PTR [rbp-0x18]
  404705:	mov    rsi,QWORD PTR [rbp-0x10]
  404709:	mov    rax,QWORD PTR [rbp-0x8]
  40470d:	lea    rcx,[rip+0xfffffffffffff959]        # 40406d <_start@@Base+0x1dbd>
  404714:	mov    rdi,rax
  404717:	call   406cf1 <flatcc_verify_table_as_root@@Base>
  40471c:	leave  
  40471d:	ret    
  40471e:	endbr64 
  404722:	push   rbp
  404723:	mov    rbp,rsp
  404726:	sub    rsp,0x20
  40472a:	mov    QWORD PTR [rbp-0x18],rdi
  40472e:	mov    rax,QWORD PTR [rbp-0x18]
  404732:	mov    ecx,0x1
  404737:	mov    edx,0x1
  40473c:	mov    esi,0x0
  404741:	mov    rdi,rax
  404744:	call   406584 <flatcc_verify_field@@Base>
  404749:	mov    DWORD PTR [rbp-0x4],eax
  40474c:	cmp    DWORD PTR [rbp-0x4],0x0
  404750:	je     40475a <_start@@Base+0x24aa>
  404752:	mov    eax,DWORD PTR [rbp-0x4]
  404755:	jmp    404952 <_start@@Base+0x26a2>
  40475a:	mov    rax,QWORD PTR [rbp-0x18]
  40475e:	mov    ecx,0x1
  404763:	mov    edx,0x1
  404768:	mov    esi,0x1
  40476d:	mov    rdi,rax
  404770:	call   406584 <flatcc_verify_field@@Base>
  404775:	mov    DWORD PTR [rbp-0x4],eax
  404778:	cmp    DWORD PTR [rbp-0x4],0x0
  40477c:	je     404786 <_start@@Base+0x24d6>
  40477e:	mov    eax,DWORD PTR [rbp-0x4]
  404781:	jmp    404952 <_start@@Base+0x26a2>
  404786:	mov    rax,QWORD PTR [rbp-0x18]
  40478a:	mov    ecx,0x2
  40478f:	mov    edx,0x2
  404794:	mov    esi,0x2
  404799:	mov    rdi,rax
  40479c:	call   406584 <flatcc_verify_field@@Base>
  4047a1:	mov    DWORD PTR [rbp-0x4],eax
  4047a4:	cmp    DWORD PTR [rbp-0x4],0x0
  4047a8:	je     4047b2 <_start@@Base+0x2502>
  4047aa:	mov    eax,DWORD PTR [rbp-0x4]
  4047ad:	jmp    404952 <_start@@Base+0x26a2>
  4047b2:	mov    rax,QWORD PTR [rbp-0x18]
  4047b6:	mov    ecx,0x2
  4047bb:	mov    edx,0x2
  4047c0:	mov    esi,0x3
  4047c5:	mov    rdi,rax
  4047c8:	call   406584 <flatcc_verify_field@@Base>
  4047cd:	mov    DWORD PTR [rbp-0x4],eax
  4047d0:	cmp    DWORD PTR [rbp-0x4],0x0
  4047d4:	je     4047de <_start@@Base+0x252e>
  4047d6:	mov    eax,DWORD PTR [rbp-0x4]
  4047d9:	jmp    404952 <_start@@Base+0x26a2>
  4047de:	mov    rax,QWORD PTR [rbp-0x18]
  4047e2:	mov    ecx,0x4
  4047e7:	mov    edx,0x4
  4047ec:	mov    esi,0x4
  4047f1:	mov    rdi,rax
  4047f4:	call   406584 <flatcc_verify_field@@Base>
  4047f9:	mov    DWORD PTR [rbp-0x4],eax
  4047fc:	cmp    DWORD PTR [rbp-0x4],0x0
  404800:	je     40480a <_start@@Base+0x255a>
  404802:	mov    eax,DWORD PTR [rbp-0x4]
  404805:	jmp    404952 <_start@@Base+0x26a2>
  40480a:	mov    rax,QWORD PTR [rbp-0x18]
  40480e:	mov    ecx,0x4
  404813:	mov    edx,0x4
  404818:	mov    esi,0x5
  40481d:	mov    rdi,rax
  404820:	call   406584 <flatcc_verify_field@@Base>
  404825:	mov    DWORD PTR [rbp-0x4],eax
  404828:	cmp    DWORD PTR [rbp-0x4],0x0
  40482c:	je     404836 <_start@@Base+0x2586>
  40482e:	mov    eax,DWORD PTR [rbp-0x4]
  404831:	jmp    404952 <_start@@Base+0x26a2>
  404836:	mov    rax,QWORD PTR [rbp-0x18]
  40483a:	mov    ecx,0x8
  40483f:	mov    edx,0x8
  404844:	mov    esi,0x6
  404849:	mov    rdi,rax
  40484c:	call   406584 <flatcc_verify_field@@Base>
  404851:	mov    DWORD PTR [rbp-0x4],eax
  404854:	cmp    DWORD PTR [rbp-0x4],0x0
  404858:	je     404862 <_start@@Base+0x25b2>
  40485a:	mov    eax,DWORD PTR [rbp-0x4]
  40485d:	jmp    404952 <_start@@Base+0x26a2>
  404862:	mov    rax,QWORD PTR [rbp-0x18]
  404866:	mov    ecx,0x8
  40486b:	mov    edx,0x8
  404870:	mov    esi,0x7
  404875:	mov    rdi,rax
  404878:	call   406584 <flatcc_verify_field@@Base>
  40487d:	mov    DWORD PTR [rbp-0x4],eax
  404880:	cmp    DWORD PTR [rbp-0x4],0x0
  404884:	je     40488e <_start@@Base+0x25de>
  404886:	mov    eax,DWORD PTR [rbp-0x4]
  404889:	jmp    404952 <_start@@Base+0x26a2>
  40488e:	mov    rax,QWORD PTR [rbp-0x18]
  404892:	mov    ecx,0x4
  404897:	mov    edx,0x4
  40489c:	mov    esi,0x8
  4048a1:	mov    rdi,rax
  4048a4:	call   406584 <flatcc_verify_field@@Base>
  4048a9:	mov    DWORD PTR [rbp-0x4],eax
  4048ac:	cmp    DWORD PTR [rbp-0x4],0x0
  4048b0:	je     4048ba <_start@@Base+0x260a>
  4048b2:	mov    eax,DWORD PTR [rbp-0x4]
  4048b5:	jmp    404952 <_start@@Base+0x26a2>
  4048ba:	mov    rax,QWORD PTR [rbp-0x18]
  4048be:	mov    ecx,0x8
  4048c3:	mov    edx,0x8
  4048c8:	mov    esi,0x9
  4048cd:	mov    rdi,rax
  4048d0:	call   406584 <flatcc_verify_field@@Base>
  4048d5:	mov    DWORD PTR [rbp-0x4],eax
  4048d8:	cmp    DWORD PTR [rbp-0x4],0x0
  4048dc:	je     4048e3 <_start@@Base+0x2633>
  4048de:	mov    eax,DWORD PTR [rbp-0x4]
  4048e1:	jmp    404952 <_start@@Base+0x26a2>
  4048e3:	mov    rax,QWORD PTR [rbp-0x18]
  4048e7:	mov    r9d,0xffffffff
  4048ed:	mov    r8d,0x1
  4048f3:	mov    ecx,0x1
  4048f8:	mov    edx,0x0
  4048fd:	mov    esi,0xa
  404902:	mov    rdi,rax
  404905:	call   40668e <flatcc_verify_vector_field@@Base>
  40490a:	mov    DWORD PTR [rbp-0x4],eax
  40490d:	cmp    DWORD PTR [rbp-0x4],0x0
  404911:	je     404918 <_start@@Base+0x2668>
  404913:	mov    eax,DWORD PTR [rbp-0x4]
  404916:	jmp    404952 <_start@@Base+0x26a2>
  404918:	mov    rax,QWORD PTR [rbp-0x18]
  40491c:	mov    r9d,0x1fffffff
  404922:	mov    r8d,0x8
  404928:	mov    ecx,0x8
  40492d:	mov    edx,0x0
  404932:	mov    esi,0xb
  404937:	mov    rdi,rax
  40493a:	call   40668e <flatcc_verify_vector_field@@Base>
  40493f:	mov    DWORD PTR [rbp-0x4],eax
  404942:	cmp    DWORD PTR [rbp-0x4],0x0
  404946:	je     40494d <_start@@Base+0x269d>
  404948:	mov    eax,DWORD PTR [rbp-0x4]
  40494b:	jmp    404952 <_start@@Base+0x26a2>
  40494d:	mov    eax,0x0
  404952:	leave  
  404953:	ret    
  404954:	endbr64 
  404958:	push   rbp
  404959:	mov    rbp,rsp
  40495c:	sub    rsp,0x20
  404960:	mov    QWORD PTR [rbp-0x18],rdi
  404964:	mov    rax,QWORD PTR [rbp-0x18]
  404968:	mov    ecx,0x4
  40496d:	mov    edx,0x4
  404972:	mov    esi,0x0
  404977:	mov    rdi,rax
  40497a:	call   406584 <flatcc_verify_field@@Base>
  40497f:	mov    DWORD PTR [rbp-0x4],eax
  404982:	cmp    DWORD PTR [rbp-0x4],0x0
  404986:	je     40498d <_start@@Base+0x26dd>
  404988:	mov    eax,DWORD PTR [rbp-0x4]
  40498b:	jmp    404992 <_start@@Base+0x26e2>
  40498d:	mov    eax,0x0
  404992:	leave  
  404993:	ret    
  404994:	endbr64 
  404998:	push   rbp
  404999:	mov    rbp,rsp
  40499c:	sub    rsp,0x20
  4049a0:	mov    QWORD PTR [rbp-0x18],rdi
  4049a4:	mov    rax,QWORD PTR [rbp-0x18]
  4049a8:	lea    rcx,[rip+0xffffffffffffeed9]        # 403888 <_start@@Base+0x15d8>
  4049af:	mov    edx,0x0
  4049b4:	mov    esi,0x1
  4049b9:	mov    rdi,rax
  4049bc:	call   407042 <flatcc_verify_union_field@@Base>
  4049c1:	mov    DWORD PTR [rbp-0x4],eax
  4049c4:	cmp    DWORD PTR [rbp-0x4],0x0
  4049c8:	je     4049d2 <_start@@Base+0x2722>
  4049ca:	mov    eax,DWORD PTR [rbp-0x4]
  4049cd:	jmp    404a86 <_start@@Base+0x27d6>
  4049d2:	mov    rax,QWORD PTR [rbp-0x18]
  4049d6:	lea    rcx,[rip+0xffffffffffffeeab]        # 403888 <_start@@Base+0x15d8>
  4049dd:	mov    edx,0x0
  4049e2:	mov    esi,0x3
  4049e7:	mov    rdi,rax
  4049ea:	call   407042 <flatcc_verify_union_field@@Base>
  4049ef:	mov    DWORD PTR [rbp-0x4],eax
  4049f2:	cmp    DWORD PTR [rbp-0x4],0x0
  4049f6:	je     404a00 <_start@@Base+0x2750>
  4049f8:	mov    eax,DWORD PTR [rbp-0x4]
  4049fb:	jmp    404a86 <_start@@Base+0x27d6>
  404a00:	mov    rax,QWORD PTR [rbp-0x18]
  404a04:	lea    rcx,[rip+0xffffffffffffee7d]        # 403888 <_start@@Base+0x15d8>
  404a0b:	mov    edx,0x0
  404a10:	mov    esi,0x5
  404a15:	mov    rdi,rax
  404a18:	call   407042 <flatcc_verify_union_field@@Base>
  404a1d:	mov    DWORD PTR [rbp-0x4],eax
  404a20:	cmp    DWORD PTR [rbp-0x4],0x0
  404a24:	je     404a2b <_start@@Base+0x277b>
  404a26:	mov    eax,DWORD PTR [rbp-0x4]
  404a29:	jmp    404a86 <_start@@Base+0x27d6>
  404a2b:	mov    rax,QWORD PTR [rbp-0x18]
  404a2f:	lea    rcx,[rip+0xffffffffffffee52]        # 403888 <_start@@Base+0x15d8>
  404a36:	mov    edx,0x0
  404a3b:	mov    esi,0x7
  404a40:	mov    rdi,rax
  404a43:	call   407042 <flatcc_verify_union_field@@Base>
  404a48:	mov    DWORD PTR [rbp-0x4],eax
  404a4b:	cmp    DWORD PTR [rbp-0x4],0x0
  404a4f:	je     404a56 <_start@@Base+0x27a6>
  404a51:	mov    eax,DWORD PTR [rbp-0x4]
  404a54:	jmp    404a86 <_start@@Base+0x27d6>
  404a56:	mov    rax,QWORD PTR [rbp-0x18]
  404a5a:	lea    rcx,[rip+0xffffffffffffee27]        # 403888 <_start@@Base+0x15d8>
  404a61:	mov    edx,0x0
  404a66:	mov    esi,0x9
  404a6b:	mov    rdi,rax
  404a6e:	call   40724a <flatcc_verify_union_vector_field@@Base>
  404a73:	mov    DWORD PTR [rbp-0x4],eax
  404a76:	cmp    DWORD PTR [rbp-0x4],0x0
  404a7a:	je     404a81 <_start@@Base+0x27d1>
  404a7c:	mov    eax,DWORD PTR [rbp-0x4]
  404a7f:	jmp    404a86 <_start@@Base+0x27d6>
  404a81:	mov    eax,0x0
  404a86:	leave  
  404a87:	ret    
  404a88:	endbr64 
  404a8c:	push   rbp
  404a8d:	mov    rbp,rsp
  404a90:	sub    rsp,0x60
  404a94:	mov    QWORD PTR [rbp-0x48],rdi
  404a98:	mov    QWORD PTR [rbp-0x50],rsi
  404a9c:	mov    QWORD PTR [rbp-0x58],rdx
  404aa0:	mov    rax,QWORD PTR fs:0x28
  404aa9:	mov    QWORD PTR [rbp-0x8],rax
  404aad:	xor    eax,eax
  404aaf:	cmp    QWORD PTR [rbp-0x58],0x0
  404ab4:	jne    404abc <_start@@Base+0x280c>
  404ab6:	lea    rax,[rbp-0x38]
  404aba:	jmp    404ac0 <_start@@Base+0x2810>
  404abc:	mov    rax,QWORD PTR [rbp-0x58]
  404ac0:	mov    QWORD PTR [rbp-0x58],rax
  404ac4:	mov    rax,QWORD PTR [rbp-0x48]
  404ac8:	lea    rsi,[rip+0x36ea]        # 4081b9 <_IO_stdin_used@@Base+0x1b9>
  404acf:	mov    rdi,rax
  404ad2:	call   402270 <fopen@plt>
  404ad7:	mov    QWORD PTR [rbp-0x18],rax
  404adb:	mov    QWORD PTR [rbp-0x30],0x0
  404ae3:	mov    QWORD PTR [rbp-0x20],0x0
  404aeb:	cmp    QWORD PTR [rbp-0x18],0x0
  404af0:	je     404bd9 <_start@@Base+0x2929>
  404af6:	mov    rax,QWORD PTR [rbp-0x18]
  404afa:	mov    edx,0x2
  404aff:	mov    esi,0x0
  404b04:	mov    rdi,rax
  404b07:	call   402260 <fseek@plt>
  404b0c:	mov    rax,QWORD PTR [rbp-0x18]
  404b10:	mov    rdi,rax
  404b13:	call   402230 <ftell@plt>
  404b18:	mov    QWORD PTR [rbp-0x30],rax
  404b1c:	mov    rax,QWORD PTR [rbp-0x58]
  404b20:	mov    rdx,QWORD PTR [rbp-0x30]
  404b24:	mov    QWORD PTR [rax],rdx
  404b27:	cmp    QWORD PTR [rbp-0x50],0x0
  404b2c:	je     404b3c <_start@@Base+0x288c>
  404b2e:	mov    rax,QWORD PTR [rbp-0x30]
  404b32:	cmp    rax,QWORD PTR [rbp-0x50]
  404b36:	ja     404bdc <_start@@Base+0x292c>
  404b3c:	mov    rax,QWORD PTR [rbp-0x18]
  404b40:	mov    rdi,rax
  404b43:	call   4021e0 <rewind@plt>
  404b48:	cmp    QWORD PTR [rbp-0x30],0x0
  404b4d:	je     404b55 <_start@@Base+0x28a5>
  404b4f:	mov    rax,QWORD PTR [rbp-0x30]
  404b53:	jmp    404b5a <_start@@Base+0x28aa>
  404b55:	mov    eax,0x1
  404b5a:	mov    rdi,rax
  404b5d:	call   402250 <malloc@plt>
  404b62:	mov    QWORD PTR [rbp-0x20],rax
  404b66:	cmp    QWORD PTR [rbp-0x20],0x0
  404b6b:	je     404bdf <_start@@Base+0x292f>
  404b6d:	mov    QWORD PTR [rbp-0x28],0x0
  404b75:	jmp    404b7f <_start@@Base+0x28cf>
  404b77:	mov    rax,QWORD PTR [rbp-0x10]
  404b7b:	add    QWORD PTR [rbp-0x28],rax
  404b7f:	mov    rax,QWORD PTR [rbp-0x30]
  404b83:	sub    rax,QWORD PTR [rbp-0x28]
  404b87:	mov    rcx,QWORD PTR [rbp-0x20]
  404b8b:	mov    rdx,QWORD PTR [rbp-0x28]
  404b8f:	lea    rdi,[rcx+rdx*1]
  404b93:	mov    rdx,QWORD PTR [rbp-0x18]
  404b97:	mov    rcx,rdx
  404b9a:	mov    rdx,rax
  404b9d:	mov    esi,0x1
  404ba2:	call   4021a0 <fread@plt>
  404ba7:	mov    QWORD PTR [rbp-0x10],rax
  404bab:	cmp    QWORD PTR [rbp-0x10],0x0
  404bb0:	jne    404b77 <_start@@Base+0x28c7>
  404bb2:	mov    rax,QWORD PTR [rbp-0x28]
  404bb6:	cmp    rax,QWORD PTR [rbp-0x30]
  404bba:	jne    404be2 <_start@@Base+0x2932>
  404bbc:	mov    rax,QWORD PTR [rbp-0x18]
  404bc0:	mov    rdi,rax
  404bc3:	call   4021b0 <fclose@plt>
  404bc8:	mov    rax,QWORD PTR [rbp-0x58]
  404bcc:	mov    rdx,QWORD PTR [rbp-0x30]
  404bd0:	mov    QWORD PTR [rax],rdx
  404bd3:	mov    rax,QWORD PTR [rbp-0x20]
  404bd7:	jmp    404c19 <_start@@Base+0x2969>
  404bd9:	nop
  404bda:	jmp    404be3 <_start@@Base+0x2933>
  404bdc:	nop
  404bdd:	jmp    404be3 <_start@@Base+0x2933>
  404bdf:	nop
  404be0:	jmp    404be3 <_start@@Base+0x2933>
  404be2:	nop
  404be3:	cmp    QWORD PTR [rbp-0x18],0x0
  404be8:	je     404bf6 <_start@@Base+0x2946>
  404bea:	mov    rax,QWORD PTR [rbp-0x18]
  404bee:	mov    rdi,rax
  404bf1:	call   4021b0 <fclose@plt>
  404bf6:	cmp    QWORD PTR [rbp-0x20],0x0
  404bfb:	je     404c09 <_start@@Base+0x2959>
  404bfd:	mov    rax,QWORD PTR [rbp-0x20]
  404c01:	mov    rdi,rax
  404c04:	call   402170 <free@plt>
  404c09:	mov    rax,QWORD PTR [rbp-0x58]
  404c0d:	mov    rdx,QWORD PTR [rbp-0x30]
  404c11:	mov    QWORD PTR [rax],rdx
  404c14:	mov    eax,0x0
  404c19:	mov    rcx,QWORD PTR [rbp-0x8]
  404c1d:	xor    rcx,QWORD PTR fs:0x28
  404c26:	je     404c2d <_start@@Base+0x297d>
  404c28:	call   4021c0 <__stack_chk_fail@plt>
  404c2d:	leave  
  404c2e:	ret    
  404c2f:	endbr64 
  404c33:	push   rbp
  404c34:	mov    rbp,rsp
  404c37:	sub    rsp,0x50
  404c3b:	mov    QWORD PTR [rbp-0x38],rdi
  404c3f:	mov    QWORD PTR [rbp-0x40],rsi
  404c43:	mov    QWORD PTR [rbp-0x48],rdx
  404c47:	mov    QWORD PTR [rbp-0x50],rcx
  404c4b:	mov    rax,QWORD PTR fs:0x28
  404c54:	mov    QWORD PTR [rbp-0x8],rax
  404c58:	xor    eax,eax
  404c5a:	mov    rax,QWORD PTR [rbp-0x40]
  404c5e:	mov    QWORD PTR [rbp-0x28],rax
  404c62:	cmp    QWORD PTR [rbp-0x38],0x0
  404c67:	je     404c85 <_start@@Base+0x29d5>
  404c69:	mov    rdx,QWORD PTR [rbp-0x38]
  404c6d:	mov    rax,QWORD PTR [rbp-0x50]
  404c71:	lea    rsi,[rip+0x3544]        # 4081bc <_IO_stdin_used@@Base+0x1bc>
  404c78:	mov    rdi,rax
  404c7b:	mov    eax,0x0
  404c80:	call   402220 <fprintf@plt>
  404c85:	mov    DWORD PTR [rbp-0x2c],0x0
  404c8c:	jmp    404d79 <_start@@Base+0x2ac9>
  404c91:	mov    eax,DWORD PTR [rbp-0x2c]
  404c94:	and    eax,0xf
  404c97:	test   eax,eax
  404c99:	jne    404cda <_start@@Base+0x2a2a>
  404c9b:	cmp    DWORD PTR [rbp-0x2c],0x0
  404c9f:	je     404cbd <_start@@Base+0x2a0d>
  404ca1:	lea    rdx,[rbp-0x20]
  404ca5:	mov    rax,QWORD PTR [rbp-0x50]
  404ca9:	lea    rsi,[rip+0x3511]        # 4081c1 <_IO_stdin_used@@Base+0x1c1>
  404cb0:	mov    rdi,rax
  404cb3:	mov    eax,0x0
  404cb8:	call   402220 <fprintf@plt>
  404cbd:	mov    edx,DWORD PTR [rbp-0x2c]
  404cc0:	mov    rax,QWORD PTR [rbp-0x50]
  404cc4:	lea    rsi,[rip+0x34fc]        # 4081c7 <_IO_stdin_used@@Base+0x1c7>
  404ccb:	mov    rdi,rax
  404cce:	mov    eax,0x0
  404cd3:	call   402220 <fprintf@plt>
  404cd8:	jmp    404cf5 <_start@@Base+0x2a45>
  404cda:	mov    eax,DWORD PTR [rbp-0x2c]
  404cdd:	and    eax,0x7
  404ce0:	test   eax,eax
  404ce2:	jne    404cf5 <_start@@Base+0x2a45>
  404ce4:	mov    rax,QWORD PTR [rbp-0x50]
  404ce8:	mov    rsi,rax
  404ceb:	mov    edi,0x20
  404cf0:	call   402200 <fputc@plt>
  404cf5:	mov    edx,DWORD PTR [rbp-0x2c]
  404cf8:	mov    rax,QWORD PTR [rbp-0x28]
  404cfc:	add    rax,rdx
  404cff:	movzx  eax,BYTE PTR [rax]
  404d02:	movzx  edx,al
  404d05:	mov    rax,QWORD PTR [rbp-0x50]
  404d09:	lea    rsi,[rip+0x34bf]        # 4081cf <_IO_stdin_used@@Base+0x1cf>
  404d10:	mov    rdi,rax
  404d13:	mov    eax,0x0
  404d18:	call   402220 <fprintf@plt>
  404d1d:	mov    edx,DWORD PTR [rbp-0x2c]
  404d20:	mov    rax,QWORD PTR [rbp-0x28]
  404d24:	add    rax,rdx
  404d27:	movzx  eax,BYTE PTR [rax]
  404d2a:	cmp    al,0x1f
  404d2c:	jbe    404d3f <_start@@Base+0x2a8f>
  404d2e:	mov    edx,DWORD PTR [rbp-0x2c]
  404d31:	mov    rax,QWORD PTR [rbp-0x28]
  404d35:	add    rax,rdx
  404d38:	movzx  eax,BYTE PTR [rax]
  404d3b:	cmp    al,0x7e
  404d3d:	jbe    404d4e <_start@@Base+0x2a9e>
  404d3f:	mov    eax,DWORD PTR [rbp-0x2c]
  404d42:	and    eax,0xf
  404d45:	mov    eax,eax
  404d47:	mov    BYTE PTR [rbp+rax*1-0x20],0x2e
  404d4c:	jmp    404d67 <_start@@Base+0x2ab7>
  404d4e:	mov    edx,DWORD PTR [rbp-0x2c]
  404d51:	mov    rax,QWORD PTR [rbp-0x28]
  404d55:	add    rax,rdx
  404d58:	mov    edx,DWORD PTR [rbp-0x2c]
  404d5b:	and    edx,0xf
  404d5e:	movzx  eax,BYTE PTR [rax]
  404d61:	mov    edx,edx
  404d63:	mov    BYTE PTR [rbp+rdx*1-0x20],al
  404d67:	mov    eax,DWORD PTR [rbp-0x2c]
  404d6a:	and    eax,0xf
  404d6d:	inc    eax
  404d6f:	mov    eax,eax
  404d71:	mov    BYTE PTR [rbp+rax*1-0x20],0x0
  404d76:	inc    DWORD PTR [rbp-0x2c]
  404d79:	mov    rax,QWORD PTR [rbp-0x48]
  404d7d:	cmp    DWORD PTR [rbp-0x2c],eax
  404d80:	jb     404c91 <_start@@Base+0x29e1>
  404d86:	jmp    404da8 <_start@@Base+0x2af8>
  404d88:	mov    rax,QWORD PTR [rbp-0x50]
  404d8c:	mov    rcx,rax
  404d8f:	mov    edx,0x3
  404d94:	mov    esi,0x1
  404d99:	lea    rdi,[rip+0x3435]        # 4081d5 <_IO_stdin_used@@Base+0x1d5>
  404da0:	call   402290 <fwrite@plt>
  404da5:	inc    DWORD PTR [rbp-0x2c]
  404da8:	mov    eax,DWORD PTR [rbp-0x2c]
  404dab:	and    eax,0xf
  404dae:	test   eax,eax
  404db0:	jne    404d88 <_start@@Base+0x2ad8>
  404db2:	lea    rdx,[rbp-0x20]
  404db6:	mov    rax,QWORD PTR [rbp-0x50]
  404dba:	lea    rsi,[rip+0x3400]        # 4081c1 <_IO_stdin_used@@Base+0x1c1>
  404dc1:	mov    rdi,rax
  404dc4:	mov    eax,0x0
  404dc9:	call   402220 <fprintf@plt>
  404dce:	nop
  404dcf:	mov    rax,QWORD PTR [rbp-0x8]
  404dd3:	xor    rax,QWORD PTR fs:0x28
  404ddc:	je     404de3 <_start@@Base+0x2b33>
  404dde:	call   4021c0 <__stack_chk_fail@plt>
  404de3:	leave  
  404de4:	ret    

0000000000404de5 <verify_monster@@Base>:
  404de5:	endbr64 
  404de9:	push   rbp
  404dea:	mov    rbp,rsp
  404ded:	sub    rsp,0x70
  404df1:	mov    QWORD PTR [rbp-0x68],rdi
  404df5:	mov    rax,QWORD PTR [rbp-0x68]
  404df9:	mov    rdi,rax
  404dfc:	call   402aef <_start@@Base+0x83f>
  404e01:	mov    QWORD PTR [rbp-0x50],rax
  404e05:	cmp    QWORD PTR [rbp-0x50],0x0
  404e0a:	jne    404e22 <verify_monster@@Base+0x3d>
  404e0c:	lea    rdi,[rip+0x33db]        # 4081ee <_IO_stdin_used@@Base+0x1ee>
  404e13:	call   402190 <puts@plt>
  404e18:	mov    eax,0xffffffff
  404e1d:	jmp    40550b <verify_monster@@Base+0x726>
  404e22:	mov    rax,QWORD PTR [rbp-0x50]
  404e26:	mov    rdi,rax
  404e29:	call   402bfa <_start@@Base+0x94a>
  404e2e:	cmp    ax,0x50
  404e32:	je     404e4a <verify_monster@@Base+0x65>
  404e34:	lea    rdi,[rip+0x33cd]        # 408208 <_IO_stdin_used@@Base+0x208>
  404e3b:	call   402190 <puts@plt>
  404e40:	mov    eax,0xffffffff
  404e45:	jmp    40550b <verify_monster@@Base+0x726>
  404e4a:	mov    rax,QWORD PTR [rbp-0x50]
  404e4e:	mov    rdi,rax
  404e51:	call   402b42 <_start@@Base+0x892>
  404e56:	mov    QWORD PTR [rbp-0x48],rax
  404e5a:	cmp    QWORD PTR [rbp-0x48],0x0
  404e5f:	jne    404e77 <verify_monster@@Base+0x92>
  404e61:	lea    rdi,[rip+0x33c2]        # 40822a <_IO_stdin_used@@Base+0x22a>
  404e68:	call   402190 <puts@plt>
  404e6d:	mov    eax,0xffffffff
  404e72:	jmp    40550b <verify_monster@@Base+0x726>
  404e77:	mov    rax,QWORD PTR [rbp-0x48]
  404e7b:	sub    rax,QWORD PTR [rbp-0x68]
  404e7f:	mov    QWORD PTR [rbp-0x40],rax
  404e83:	mov    rax,QWORD PTR [rbp-0x40]
  404e87:	and    eax,0xf
  404e8a:	test   rax,rax
  404e8d:	je     404ea5 <verify_monster@@Base+0xc0>
  404e8f:	lea    rdi,[rip+0x33aa]        # 408240 <_IO_stdin_used@@Base+0x240>
  404e96:	call   402190 <puts@plt>
  404e9b:	mov    eax,0xffffffff
  404ea0:	jmp    40550b <verify_monster@@Base+0x726>
  404ea5:	mov    rax,QWORD PTR [rbp-0x48]
  404ea9:	mov    rdi,rax
  404eac:	call   4029d0 <_start@@Base+0x720>
  404eb1:	vmovss xmm1,DWORD PTR [rip+0x3d3f]        # 408bf8 <_IO_stdin_used@@Base+0xbf8>
  404eb9:	vucomiss xmm0,xmm1
  404ebd:	jp     404ecd <verify_monster@@Base+0xe8>
  404ebf:	vmovss xmm1,DWORD PTR [rip+0x3d31]        # 408bf8 <_IO_stdin_used@@Base+0xbf8>
  404ec7:	vucomiss xmm0,xmm1
  404ecb:	je     404ee3 <verify_monster@@Base+0xfe>
  404ecd:	lea    rdi,[rip+0x3394]        # 408268 <_IO_stdin_used@@Base+0x268>
  404ed4:	call   402190 <puts@plt>
  404ed9:	mov    eax,0xffffffff
  404ede:	jmp    40550b <verify_monster@@Base+0x726>
  404ee3:	mov    rax,QWORD PTR [rbp-0x48]
  404ee7:	mov    rdi,rax
  404eea:	call   402a01 <_start@@Base+0x751>
  404eef:	vucomiss xmm0,DWORD PTR [rip+0x3d05]        # 408bfc <_IO_stdin_used@@Base+0xbfc>
  404ef7:	jp     404f03 <verify_monster@@Base+0x11e>
  404ef9:	vucomiss xmm0,DWORD PTR [rip+0x3cfb]        # 408bfc <_IO_stdin_used@@Base+0xbfc>
  404f01:	je     404f19 <verify_monster@@Base+0x134>
  404f03:	lea    rdi,[rip+0x3386]        # 408290 <_IO_stdin_used@@Base+0x290>
  404f0a:	call   402190 <puts@plt>
  404f0f:	mov    eax,0xffffffff
  404f14:	jmp    40550b <verify_monster@@Base+0x726>
  404f19:	mov    rax,QWORD PTR [rbp-0x48]
  404f1d:	mov    rdi,rax
  404f20:	call   402a36 <_start@@Base+0x786>
  404f25:	vucomiss xmm0,DWORD PTR [rip+0x3cd3]        # 408c00 <_IO_stdin_used@@Base+0xc00>
  404f2d:	jp     404f39 <verify_monster@@Base+0x154>
  404f2f:	vucomiss xmm0,DWORD PTR [rip+0x3cc9]        # 408c00 <_IO_stdin_used@@Base+0xc00>
  404f37:	je     404f4f <verify_monster@@Base+0x16a>
  404f39:	lea    rdi,[rip+0x3378]        # 4082b8 <_IO_stdin_used@@Base+0x2b8>
  404f40:	call   402190 <puts@plt>
  404f45:	mov    eax,0xffffffff
  404f4a:	jmp    40550b <verify_monster@@Base+0x726>
  404f4f:	mov    rax,QWORD PTR [rbp-0x48]
  404f53:	mov    rdi,rax
  404f56:	call   402a6b <_start@@Base+0x7bb>
  404f5b:	vucomisd xmm0,QWORD PTR [rip+0x3ca5]        # 408c08 <_IO_stdin_used@@Base+0xc08>
  404f63:	jp     404f6f <verify_monster@@Base+0x18a>
  404f65:	vucomisd xmm0,QWORD PTR [rip+0x3c9b]        # 408c08 <_IO_stdin_used@@Base+0xc08>
  404f6d:	je     404f85 <verify_monster@@Base+0x1a0>
  404f6f:	lea    rdi,[rip+0x3363]        # 4082d9 <_IO_stdin_used@@Base+0x2d9>
  404f76:	call   402190 <puts@plt>
  404f7b:	mov    eax,0xffffffff
  404f80:	jmp    40550b <verify_monster@@Base+0x726>
  404f85:	mov    rax,QWORD PTR [rbp-0x48]
  404f89:	mov    rdi,rax
  404f8c:	call   402aa3 <_start@@Base+0x7f3>
  404f91:	cmp    al,0x2
  404f93:	je     404fab <verify_monster@@Base+0x1c6>
  404f95:	lea    rdi,[rip+0x3351]        # 4082ed <_IO_stdin_used@@Base+0x2ed>
  404f9c:	call   402190 <puts@plt>
  404fa1:	mov    eax,0xffffffff
  404fa6:	jmp    40550b <verify_monster@@Base+0x726>
  404fab:	mov    rax,QWORD PTR [rbp-0x48]
  404faf:	mov    rdi,rax
  404fb2:	call   402acf <_start@@Base+0x81f>
  404fb7:	mov    QWORD PTR [rbp-0x38],rax
  404fbb:	mov    rax,QWORD PTR [rbp-0x38]
  404fbf:	mov    rdi,rax
  404fc2:	call   40297c <_start@@Base+0x6cc>
  404fc7:	cmp    ax,0x5
  404fcb:	jne    404fdd <verify_monster@@Base+0x1f8>
  404fcd:	mov    rax,QWORD PTR [rbp-0x38]
  404fd1:	mov    rdi,rax
  404fd4:	call   4029a4 <_start@@Base+0x6f4>
  404fd9:	cmp    al,0x6
  404fdb:	je     404ff3 <verify_monster@@Base+0x20e>
  404fdd:	lea    rdi,[rip+0x331e]        # 408302 <_IO_stdin_used@@Base+0x302>
  404fe4:	call   402190 <puts@plt>
  404fe9:	mov    eax,0xffffffff
  404fee:	jmp    40550b <verify_monster@@Base+0x726>
  404ff3:	mov    rax,QWORD PTR [rbp-0x50]
  404ff7:	mov    rdi,rax
  404ffa:	call   402cba <_start@@Base+0xa0a>
  404fff:	mov    QWORD PTR [rbp-0x30],rax
  405003:	mov    rax,QWORD PTR [rbp-0x30]
  405007:	mov    rdi,rax
  40500a:	call   4026ee <_start@@Base+0x43e>
  40500f:	cmp    rax,0x9
  405013:	je     40502b <verify_monster@@Base+0x246>
  405015:	lea    rdi,[rip+0x32fe]        # 40831a <_IO_stdin_used@@Base+0x31a>
  40501c:	call   402190 <puts@plt>
  405021:	mov    eax,0xffffffff
  405026:	jmp    40550b <verify_monster@@Base+0x726>
  40502b:	cmp    QWORD PTR [rbp-0x30],0x0
  405030:	je     405049 <verify_monster@@Base+0x264>
  405032:	mov    rax,QWORD PTR [rbp-0x30]
  405036:	lea    rsi,[rip+0x32f8]        # 408335 <_IO_stdin_used@@Base+0x335>
  40503d:	mov    rdi,rax
  405040:	call   402210 <strcmp@plt>
  405045:	test   eax,eax
  405047:	je     40505f <verify_monster@@Base+0x27a>
  405049:	lea    rdi,[rip+0x32ef]        # 40833f <_IO_stdin_used@@Base+0x33f>
  405050:	call   402190 <puts@plt>
  405055:	mov    eax,0xffffffff
  40505a:	jmp    40550b <verify_monster@@Base+0x726>
  40505f:	mov    rax,QWORD PTR [rbp-0x50]
  405063:	mov    rdi,rax
  405066:	call   402da9 <_start@@Base+0xaf9>
  40506b:	mov    QWORD PTR [rbp-0x28],rax
  40506f:	mov    rax,QWORD PTR [rbp-0x28]
  405073:	mov    rdi,rax
  405076:	call   4027bd <_start@@Base+0x50d>
  40507b:	cmp    rax,0x5
  40507f:	je     405097 <verify_monster@@Base+0x2b2>
  405081:	lea    rdi,[rip+0x32cb]        # 408353 <_IO_stdin_used@@Base+0x353>
  405088:	call   402190 <puts@plt>
  40508d:	mov    eax,0xffffffff
  405092:	jmp    40550b <verify_monster@@Base+0x726>
  405097:	mov    DWORD PTR [rbp-0x54],0x0
  40509e:	jmp    4050e0 <verify_monster@@Base+0x2fb>
  4050a0:	mov    eax,DWORD PTR [rbp-0x54]
  4050a3:	movsxd rdx,eax
  4050a6:	mov    rax,QWORD PTR [rbp-0x28]
  4050aa:	mov    rsi,rdx
  4050ad:	mov    rdi,rax
  4050b0:	call   4027d7 <_start@@Base+0x527>
  4050b5:	movzx  eax,al
  4050b8:	cmp    DWORD PTR [rbp-0x54],eax
  4050bb:	je     4050dd <verify_monster@@Base+0x2f8>
  4050bd:	mov    eax,DWORD PTR [rbp-0x54]
  4050c0:	mov    esi,eax
  4050c2:	lea    rdi,[rip+0x32a5]        # 40836e <_IO_stdin_used@@Base+0x36e>
  4050c9:	mov    eax,0x0
  4050ce:	call   4021d0 <printf@plt>
  4050d3:	mov    eax,0xffffffff
  4050d8:	jmp    40550b <verify_monster@@Base+0x726>
  4050dd:	inc    DWORD PTR [rbp-0x54]
  4050e0:	cmp    DWORD PTR [rbp-0x54],0x4
  4050e4:	jle    4050a0 <verify_monster@@Base+0x2bb>
  4050e6:	mov    rax,QWORD PTR [rbp-0x50]
  4050ea:	mov    rdi,rax
  4050ed:	call   402e7e <_start@@Base+0xbce>
  4050f2:	mov    QWORD PTR [rbp-0x20],rax
  4050f6:	cmp    QWORD PTR [rbp-0x20],0x0
  4050fb:	jne    405113 <verify_monster@@Base+0x32e>
  4050fd:	lea    rdi,[rip+0x3287]        # 40838b <_IO_stdin_used@@Base+0x38b>
  405104:	call   402190 <puts@plt>
  405109:	mov    eax,0xffffffff
  40510e:	jmp    40550b <verify_monster@@Base+0x726>
  405113:	mov    rax,QWORD PTR [rbp-0x20]
  405117:	mov    rdi,rax
  40511a:	call   40271c <_start@@Base+0x46c>
  40511f:	cmp    rax,0x2
  405123:	je     40513b <verify_monster@@Base+0x356>
  405125:	lea    rdi,[rip+0x327c]        # 4083a8 <_IO_stdin_used@@Base+0x3a8>
  40512c:	call   402190 <puts@plt>
  405131:	mov    eax,0xffffffff
  405136:	jmp    40550b <verify_monster@@Base+0x726>
  40513b:	mov    rax,QWORD PTR [rbp-0x20]
  40513f:	mov    esi,0x0
  405144:	mov    rdi,rax
  405147:	call   40274a <_start@@Base+0x49a>
  40514c:	mov    QWORD PTR [rbp-0x18],rax
  405150:	mov    rax,QWORD PTR [rbp-0x18]
  405154:	lea    rsi,[rip+0x3275]        # 4083d0 <_IO_stdin_used@@Base+0x3d0>
  40515b:	mov    rdi,rax
  40515e:	call   402210 <strcmp@plt>
  405163:	test   eax,eax
  405165:	je     40517d <verify_monster@@Base+0x398>
  405167:	lea    rdi,[rip+0x326a]        # 4083d8 <_IO_stdin_used@@Base+0x3d8>
  40516e:	call   402190 <puts@plt>
  405173:	mov    eax,0xffffffff
  405178:	jmp    40550b <verify_monster@@Base+0x726>
  40517d:	mov    rax,QWORD PTR [rbp-0x20]
  405181:	mov    esi,0x1
  405186:	mov    rdi,rax
  405189:	call   40274a <_start@@Base+0x49a>
  40518e:	mov    QWORD PTR [rbp-0x18],rax
  405192:	mov    rax,QWORD PTR [rbp-0x18]
  405196:	lea    rsi,[rip+0x325f]        # 4083fc <_IO_stdin_used@@Base+0x3fc>
  40519d:	mov    rdi,rax
  4051a0:	call   402210 <strcmp@plt>
  4051a5:	test   eax,eax
  4051a7:	je     4051bf <verify_monster@@Base+0x3da>
  4051a9:	lea    rdi,[rip+0x3258]        # 408408 <_IO_stdin_used@@Base+0x408>
  4051b0:	call   402190 <puts@plt>
  4051b5:	mov    eax,0xffffffff
  4051ba:	jmp    40550b <verify_monster@@Base+0x726>
  4051bf:	mov    rax,QWORD PTR [rbp-0x50]
  4051c3:	mov    rdi,rax
  4051c6:	call   402f53 <_start@@Base+0xca3>
  4051cb:	mov    BYTE PTR [rbp-0x55],al
  4051ce:	cmp    BYTE PTR [rbp-0x55],0x1
  4051d2:	je     4051ea <verify_monster@@Base+0x405>
  4051d4:	lea    rdi,[rip+0x3252]        # 40842d <_IO_stdin_used@@Base+0x42d>
  4051db:	call   402190 <puts@plt>
  4051e0:	mov    eax,0xffffffff
  4051e5:	jmp    40550b <verify_monster@@Base+0x726>
  4051ea:	mov    rax,QWORD PTR [rbp-0x50]
  4051ee:	mov    rdi,rax
  4051f1:	call   403013 <_start@@Base+0xd63>
  4051f6:	mov    QWORD PTR [rbp-0x10],rax
  4051fa:	cmp    QWORD PTR [rbp-0x10],0x0
  4051ff:	jne    405217 <verify_monster@@Base+0x432>
  405201:	lea    rdi,[rip+0x3235]        # 40843d <_IO_stdin_used@@Base+0x43d>
  405208:	call   402190 <puts@plt>
  40520d:	mov    eax,0xffffffff
  405212:	jmp    40550b <verify_monster@@Base+0x726>
  405217:	mov    rax,QWORD PTR [rbp-0x10]
  40521b:	mov    rdi,rax
  40521e:	call   402cba <_start@@Base+0xa0a>
  405223:	lea    rsi,[rip+0x322a]        # 408454 <_IO_stdin_used@@Base+0x454>
  40522a:	mov    rdi,rax
  40522d:	call   402210 <strcmp@plt>
  405232:	test   eax,eax
  405234:	je     40524c <verify_monster@@Base+0x467>
  405236:	lea    rdi,[rip+0x321c]        # 408459 <_IO_stdin_used@@Base+0x459>
  40523d:	call   402190 <puts@plt>
  405242:	mov    eax,0xffffffff
  405247:	jmp    40550b <verify_monster@@Base+0x726>
  40524c:	mov    rax,QWORD PTR [rbp-0x50]
  405250:	mov    rdi,rax
  405253:	call   4030e4 <_start@@Base+0xe34>
  405258:	mov    QWORD PTR [rbp-0x8],rax
  40525c:	mov    rax,QWORD PTR [rbp-0x8]
  405260:	mov    rdi,rax
  405263:	call   40294e <_start@@Base+0x69e>
  405268:	cmp    rax,0x2
  40526c:	je     405284 <verify_monster@@Base+0x49f>
  40526e:	lea    rdi,[rip+0x3203]        # 408478 <_IO_stdin_used@@Base+0x478>
  405275:	call   402190 <puts@plt>
  40527a:	mov    eax,0xffffffff
  40527f:	jmp    40550b <verify_monster@@Base+0x726>
  405284:	mov    rax,QWORD PTR [rbp-0x8]
  405288:	mov    esi,0x0
  40528d:	mov    rdi,rax
  405290:	call   4028f8 <_start@@Base+0x648>
  405295:	mov    QWORD PTR [rbp-0x38],rax
  405299:	mov    rax,QWORD PTR [rbp-0x38]
  40529d:	mov    rdi,rax
  4052a0:	call   40297c <_start@@Base+0x6cc>
  4052a5:	cmp    ax,0xa
  4052a9:	je     4052c1 <verify_monster@@Base+0x4dc>
  4052ab:	lea    rdi,[rip+0x31ea]        # 40849c <_IO_stdin_used@@Base+0x49c>
  4052b2:	call   402190 <puts@plt>
  4052b7:	mov    eax,0xffffffff
  4052bc:	jmp    40550b <verify_monster@@Base+0x726>
  4052c1:	mov    rax,QWORD PTR [rbp-0x38]
  4052c5:	mov    rdi,rax
  4052c8:	call   4029a4 <_start@@Base+0x6f4>
  4052cd:	cmp    al,0x14
  4052cf:	je     4052e7 <verify_monster@@Base+0x502>
  4052d1:	lea    rdi,[rip+0x31da]        # 4084b2 <_IO_stdin_used@@Base+0x4b2>
  4052d8:	call   402190 <puts@plt>
  4052dd:	mov    eax,0xffffffff
  4052e2:	jmp    40550b <verify_monster@@Base+0x726>
  4052e7:	mov    rax,QWORD PTR [rbp-0x8]
  4052eb:	mov    esi,0x1
  4052f0:	mov    rdi,rax
  4052f3:	call   4028f8 <_start@@Base+0x648>
  4052f8:	mov    QWORD PTR [rbp-0x38],rax
  4052fc:	mov    rax,QWORD PTR [rbp-0x38]
  405300:	mov    rdi,rax
  405303:	call   40297c <_start@@Base+0x6cc>
  405308:	cmp    ax,0x1e
  40530c:	je     405324 <verify_monster@@Base+0x53f>
  40530e:	lea    rdi,[rip+0x31b3]        # 4084c8 <_IO_stdin_used@@Base+0x4c8>
  405315:	call   402190 <puts@plt>
  40531a:	mov    eax,0xffffffff
  40531f:	jmp    40550b <verify_monster@@Base+0x726>
  405324:	mov    rax,QWORD PTR [rbp-0x38]
  405328:	mov    rdi,rax
  40532b:	call   4029a4 <_start@@Base+0x6f4>
  405330:	cmp    al,0x28
  405332:	je     40534a <verify_monster@@Base+0x565>
  405334:	lea    rdi,[rip+0x31a3]        # 4084de <_IO_stdin_used@@Base+0x4de>
  40533b:	call   402190 <puts@plt>
  405340:	mov    eax,0xffffffff
  405345:	jmp    40550b <verify_monster@@Base+0x726>
  40534a:	mov    rax,QWORD PTR [rbp-0x50]
  40534e:	mov    rdi,rax
  405351:	call   4031b9 <_start@@Base+0xf09>
  405356:	cmp    eax,0xdd79c941
  40535b:	je     40537c <verify_monster@@Base+0x597>
  40535d:	lea    rcx,[rip+0x34b4]        # 408818 <_IO_stdin_used@@Base+0x818>
  405364:	mov    edx,0x94
  405369:	lea    rsi,[rip+0x3188]        # 4084f8 <_IO_stdin_used@@Base+0x4f8>
  405370:	lea    rdi,[rip+0x31f1]        # 408568 <_IO_stdin_used@@Base+0x568>
  405377:	call   4021f0 <__assert_fail@plt>
  40537c:	mov    rax,QWORD PTR [rbp-0x50]
  405380:	mov    rdi,rax
  405383:	call   403279 <_start@@Base+0xfc9>
  405388:	cmp    eax,0xdd79c941
  40538d:	je     4053ae <verify_monster@@Base+0x5c9>
  40538f:	lea    rcx,[rip+0x3482]        # 408818 <_IO_stdin_used@@Base+0x818>
  405396:	mov    edx,0x95
  40539b:	lea    rsi,[rip+0x3156]        # 4084f8 <_IO_stdin_used@@Base+0x4f8>
  4053a2:	lea    rdi,[rip+0x31f7]        # 4085a0 <_IO_stdin_used@@Base+0x5a0>
  4053a9:	call   4021f0 <__assert_fail@plt>
  4053ae:	mov    rax,QWORD PTR [rbp-0x50]
  4053b2:	mov    rdi,rax
  4053b5:	call   403339 <_start@@Base+0x1089>
  4053ba:	mov    rdx,rax
  4053bd:	movabs rax,0x6e0f80cdf27b9181
  4053c7:	cmp    rdx,rax
  4053ca:	je     4053eb <verify_monster@@Base+0x606>
  4053cc:	lea    rcx,[rip+0x3445]        # 408818 <_IO_stdin_used@@Base+0x818>
  4053d3:	mov    edx,0x96
  4053d8:	lea    rsi,[rip+0x3119]        # 4084f8 <_IO_stdin_used@@Base+0x4f8>
  4053df:	lea    rdi,[rip+0x31f2]        # 4085d8 <_IO_stdin_used@@Base+0x5d8>
  4053e6:	call   4021f0 <__assert_fail@plt>
  4053eb:	mov    rax,QWORD PTR [rbp-0x50]
  4053ef:	mov    rdi,rax
  4053f2:	call   4033f9 <_start@@Base+0x1149>
  4053f7:	mov    rdx,rax
  4053fa:	movabs rax,0x6e0f80cdf27b9181
  405404:	cmp    rdx,rax
  405407:	je     405428 <verify_monster@@Base+0x643>
  405409:	lea    rcx,[rip+0x3408]        # 408818 <_IO_stdin_used@@Base+0x818>
  405410:	mov    edx,0x97
  405415:	lea    rsi,[rip+0x30dc]        # 4084f8 <_IO_stdin_used@@Base+0x4f8>
  40541c:	lea    rdi,[rip+0x31f5]        # 408618 <_IO_stdin_used@@Base+0x618>
  405423:	call   4021f0 <__assert_fail@plt>
  405428:	mov    rax,QWORD PTR [rbp-0x50]
  40542c:	mov    rdi,rax
  40542f:	call   4034b9 <_start@@Base+0x1209>
  405434:	cmp    eax,0x8e81a471
  405439:	je     40545a <verify_monster@@Base+0x675>
  40543b:	lea    rcx,[rip+0x33d6]        # 408818 <_IO_stdin_used@@Base+0x818>
  405442:	mov    edx,0x98
  405447:	lea    rsi,[rip+0x30aa]        # 4084f8 <_IO_stdin_used@@Base+0x4f8>
  40544e:	lea    rdi,[rip+0x3203]        # 408658 <_IO_stdin_used@@Base+0x658>
  405455:	call   4021f0 <__assert_fail@plt>
  40545a:	mov    rax,QWORD PTR [rbp-0x50]
  40545e:	mov    rdi,rax
  405461:	call   403579 <_start@@Base+0x12c9>
  405466:	cmp    eax,0x8e81a471
  40546b:	je     40548c <verify_monster@@Base+0x6a7>
  40546d:	lea    rcx,[rip+0x33a4]        # 408818 <_IO_stdin_used@@Base+0x818>
  405474:	mov    edx,0x99
  405479:	lea    rsi,[rip+0x3078]        # 4084f8 <_IO_stdin_used@@Base+0x4f8>
  405480:	lea    rdi,[rip+0x3209]        # 408690 <_IO_stdin_used@@Base+0x690>
  405487:	call   4021f0 <__assert_fail@plt>
  40548c:	mov    rax,QWORD PTR [rbp-0x50]
  405490:	mov    rdi,rax
  405493:	call   403639 <_start@@Base+0x1389>
  405498:	mov    rdx,rax
  40549b:	movabs rax,0x43f948dcc767ddf1
  4054a5:	cmp    rdx,rax
  4054a8:	je     4054c9 <verify_monster@@Base+0x6e4>
  4054aa:	lea    rcx,[rip+0x3367]        # 408818 <_IO_stdin_used@@Base+0x818>
  4054b1:	mov    edx,0x9a
  4054b6:	lea    rsi,[rip+0x303b]        # 4084f8 <_IO_stdin_used@@Base+0x4f8>
  4054bd:	lea    rdi,[rip+0x3204]        # 4086c8 <_IO_stdin_used@@Base+0x6c8>
  4054c4:	call   4021f0 <__assert_fail@plt>
  4054c9:	mov    rax,QWORD PTR [rbp-0x50]
  4054cd:	mov    rdi,rax
  4054d0:	call   4036f9 <_start@@Base+0x1449>
  4054d5:	mov    rdx,rax
  4054d8:	movabs rax,0x43f948dcc767ddf1
  4054e2:	cmp    rdx,rax
  4054e5:	je     405506 <verify_monster@@Base+0x721>
  4054e7:	lea    rcx,[rip+0x332a]        # 408818 <_IO_stdin_used@@Base+0x818>
  4054ee:	mov    edx,0x9b
  4054f3:	lea    rsi,[rip+0x2ffe]        # 4084f8 <_IO_stdin_used@@Base+0x4f8>
  4054fa:	lea    rdi,[rip+0x3207]        # 408708 <_IO_stdin_used@@Base+0x708>
  405501:	call   4021f0 <__assert_fail@plt>
  405506:	mov    eax,0x0
  40550b:	leave  
  40550c:	ret    

000000000040550d <main@@Base>:
  40550d:	endbr64 
  405511:	push   rbp
  405512:	mov    rbp,rsp
  405515:	sub    rsp,0x40
  405519:	mov    DWORD PTR [rbp-0x34],edi
  40551c:	mov    QWORD PTR [rbp-0x40],rsi
  405520:	mov    rax,QWORD PTR fs:0x28
  405529:	mov    QWORD PTR [rbp-0x8],rax
  40552d:	xor    eax,eax
  40552f:	cmp    DWORD PTR [rbp-0x34],0x1
  405533:	je     405568 <main@@Base+0x5b>
  405535:	cmp    DWORD PTR [rbp-0x34],0x2
  405539:	je     405568 <main@@Base+0x5b>
  40553b:	mov    rax,QWORD PTR [rip+0x6ab6]        # 40bff8 <stderr@GLIBC_2.2.5>
  405542:	mov    rax,QWORD PTR [rax]
  405545:	mov    rcx,rax
  405548:	mov    edx,0x3f
  40554d:	mov    esi,0x1
  405552:	lea    rdi,[rip+0x31ef]        # 408748 <_IO_stdin_used@@Base+0x748>
  405559:	call   402290 <fwrite@plt>
  40555e:	mov    edi,0x1
  405563:	call   402280 <exit@plt>
  405568:	cmp    DWORD PTR [rbp-0x34],0x2
  40556c:	jne    405580 <main@@Base+0x73>
  40556e:	mov    rax,QWORD PTR [rbp-0x40]
  405572:	mov    rdx,QWORD PTR [rax+0x8]
  405576:	mov    rax,0x40c0d8
  40557d:	mov    QWORD PTR [rax],rdx
  405580:	mov    rax,0x40c0d8
  405587:	mov    rax,QWORD PTR [rax]
  40558a:	lea    rdx,[rbp-0x20]
  40558e:	mov    esi,0x400
  405593:	mov    rdi,rax
  405596:	call   404a88 <_start@@Base+0x27d8>
  40559b:	mov    QWORD PTR [rbp-0x18],rax
  40559f:	mov    rax,QWORD PTR [rbp-0x20]
  4055a3:	add    rax,0xff
  4055a9:	mov    al,0x0
  4055ab:	mov    rsi,rax
  4055ae:	mov    edi,0x100
  4055b3:	call   402396 <_start@@Base+0xe6>
  4055b8:	mov    QWORD PTR [rbp-0x10],rax
  4055bc:	mov    rdx,QWORD PTR [rbp-0x20]
  4055c0:	mov    rcx,QWORD PTR [rbp-0x18]
  4055c4:	mov    rax,QWORD PTR [rbp-0x10]
  4055c8:	mov    rsi,rcx
  4055cb:	mov    rdi,rax
  4055ce:	call   402240 <memcpy@plt>
  4055d3:	mov    rax,QWORD PTR [rbp-0x18]
  4055d7:	mov    rdi,rax
  4055da:	call   402170 <free@plt>
  4055df:	cmp    QWORD PTR [rbp-0x10],0x0
  4055e4:	jne    405618 <main@@Base+0x10b>
  4055e6:	mov    rax,0x40c0d8
  4055ed:	mov    rdx,QWORD PTR [rax]
  4055f0:	mov    rax,QWORD PTR [rip+0x6a01]        # 40bff8 <stderr@GLIBC_2.2.5>
  4055f7:	mov    rax,QWORD PTR [rax]
  4055fa:	lea    rsi,[rip+0x3187]        # 408788 <_IO_stdin_used@@Base+0x788>
  405601:	mov    rdi,rax
  405604:	mov    eax,0x0
  405609:	call   402220 <fprintf@plt>
  40560e:	mov    eax,0xffffffff
  405613:	jmp    4056e4 <main@@Base+0x1d7>
  405618:	mov    rax,QWORD PTR [rip+0x69d9]        # 40bff8 <stderr@GLIBC_2.2.5>
  40561f:	mov    rcx,QWORD PTR [rax]
  405622:	mov    rdx,QWORD PTR [rbp-0x20]
  405626:	mov    rax,QWORD PTR [rbp-0x10]
  40562a:	mov    rsi,rax
  40562d:	lea    rdi,[rip+0x2ba5]        # 4081d9 <_IO_stdin_used@@Base+0x1d9>
  405634:	call   404c2f <_start@@Base+0x297f>
  405639:	mov    rcx,QWORD PTR [rbp-0x20]
  40563d:	mov    rax,QWORD PTR [rbp-0x10]
  405641:	lea    rdx,[rip+0x2b1c]        # 408164 <_IO_stdin_used@@Base+0x164>
  405648:	mov    rsi,rcx
  40564b:	mov    rdi,rax
  40564e:	call   4046ed <_start@@Base+0x243d>
  405653:	test   eax,eax
  405655:	je     405683 <main@@Base+0x176>
  405657:	mov    rax,QWORD PTR [rip+0x699a]        # 40bff8 <stderr@GLIBC_2.2.5>
  40565e:	mov    rax,QWORD PTR [rax]
  405661:	mov    rcx,rax
  405664:	mov    edx,0x26
  405669:	mov    esi,0x1
  40566e:	lea    rdi,[rip+0x313b]        # 4087b0 <_IO_stdin_used@@Base+0x7b0>
  405675:	call   402290 <fwrite@plt>
  40567a:	mov    DWORD PTR [rbp-0x24],0xffffffff
  405681:	jmp    4056d5 <main@@Base+0x1c8>
  405683:	mov    rdx,QWORD PTR [rbp-0x20]
  405687:	mov    rax,QWORD PTR [rbp-0x10]
  40568b:	mov    rsi,rdx
  40568e:	mov    rdi,rax
  405691:	call   4046bd <_start@@Base+0x240d>
  405696:	test   eax,eax
  405698:	je     4056c6 <main@@Base+0x1b9>
  40569a:	mov    rax,QWORD PTR [rip+0x6957]        # 40bff8 <stderr@GLIBC_2.2.5>
  4056a1:	mov    rax,QWORD PTR [rax]
  4056a4:	mov    rcx,rax
  4056a7:	mov    edx,0x3e
  4056ac:	mov    esi,0x1
  4056b1:	lea    rdi,[rip+0x3120]        # 4087d8 <_IO_stdin_used@@Base+0x7d8>
  4056b8:	call   402290 <fwrite@plt>
  4056bd:	mov    DWORD PTR [rbp-0x24],0xffffffff
  4056c4:	jmp    4056d5 <main@@Base+0x1c8>
  4056c6:	mov    rax,QWORD PTR [rbp-0x10]
  4056ca:	mov    rdi,rax
  4056cd:	call   404de5 <verify_monster@@Base>
  4056d2:	mov    DWORD PTR [rbp-0x24],eax
  4056d5:	mov    rax,QWORD PTR [rbp-0x10]
  4056d9:	mov    rdi,rax
  4056dc:	call   402170 <free@plt>
  4056e1:	mov    eax,DWORD PTR [rbp-0x24]
  4056e4:	mov    rcx,QWORD PTR [rbp-0x8]
  4056e8:	xor    rcx,QWORD PTR fs:0x28
  4056f1:	je     4056f8 <main@@Base+0x1eb>
  4056f3:	call   4021c0 <__stack_chk_fail@plt>
  4056f8:	leave  
  4056f9:	ret    
  4056fa:	push   rbp
  4056fb:	mov    rbp,rsp
  4056fe:	mov    DWORD PTR [rbp-0x4],edi
  405701:	mov    eax,DWORD PTR [rbp-0x4]
  405704:	pop    rbp
  405705:	ret    
  405706:	push   rbp
  405707:	mov    rbp,rsp
  40570a:	sub    rsp,0x8
  40570e:	mov    QWORD PTR [rbp-0x8],rdi
  405712:	mov    rax,QWORD PTR [rbp-0x8]
  405716:	mov    eax,DWORD PTR [rax]
  405718:	mov    edi,eax
  40571a:	call   4056fa <main@@Base+0x1ed>
  40571f:	leave  
  405720:	ret    
  405721:	push   rbp
  405722:	mov    rbp,rsp
  405725:	mov    eax,edi
  405727:	mov    WORD PTR [rbp-0x4],ax
  40572b:	movzx  eax,WORD PTR [rbp-0x4]
  40572f:	pop    rbp
  405730:	ret    
  405731:	push   rbp
  405732:	mov    rbp,rsp
  405735:	sub    rsp,0x8
  405739:	mov    QWORD PTR [rbp-0x8],rdi
  40573d:	mov    rax,QWORD PTR [rbp-0x8]
  405741:	movzx  eax,WORD PTR [rax]
  405744:	movzx  eax,ax
  405747:	mov    edi,eax
  405749:	call   405721 <main@@Base+0x214>
  40574e:	leave  
  40574f:	ret    
  405750:	push   rbp
  405751:	mov    rbp,rsp
  405754:	mov    DWORD PTR [rbp-0x4],edi
  405757:	mov    eax,DWORD PTR [rbp-0x4]
  40575a:	pop    rbp
  40575b:	ret    
  40575c:	push   rbp
  40575d:	mov    rbp,rsp
  405760:	mov    DWORD PTR [rbp-0x4],edi
  405763:	mov    eax,DWORD PTR [rbp-0x4]
  405766:	pop    rbp
  405767:	ret    
  405768:	push   rbp
  405769:	mov    rbp,rsp
  40576c:	sub    rsp,0x8
  405770:	mov    QWORD PTR [rbp-0x8],rdi
  405774:	mov    rax,QWORD PTR [rbp-0x8]
  405778:	mov    eax,DWORD PTR [rax]
  40577a:	mov    edi,eax
  40577c:	call   405750 <main@@Base+0x243>
  405781:	leave  
  405782:	ret    

0000000000405783 <flatcc_verify_error_string@@Base>:
  405783:	endbr64 
  405787:	push   rbp
  405788:	mov    rbp,rsp
  40578b:	mov    DWORD PTR [rbp-0x4],edi
  40578e:	cmp    DWORD PTR [rbp-0x4],0x24
  405792:	ja     40594f <flatcc_verify_error_string@@Base+0x1cc>
  405798:	mov    eax,DWORD PTR [rbp-0x4]
  40579b:	lea    rdx,[rax*4+0x0]
  4057a3:	lea    rax,[rip+0x390e]        # 4090b8 <_IO_stdin_used@@Base+0x10b8>
  4057aa:	mov    eax,DWORD PTR [rdx+rax*1]
  4057ad:	movsxd rdx,eax
  4057b0:	lea    rax,[rip+0x3901]        # 4090b8 <_IO_stdin_used@@Base+0x10b8>
  4057b7:	add    rax,rdx
  4057ba:	notrack jmp rax
  4057bd:	lea    rax,[rip+0x344e]        # 408c12 <_IO_stdin_used@@Base+0xc12>
  4057c4:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  4057c9:	lea    rax,[rip+0x3445]        # 408c15 <_IO_stdin_used@@Base+0xc15>
  4057d0:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  4057d5:	lea    rax,[rip+0x3451]        # 408c2d <_IO_stdin_used@@Base+0xc2d>
  4057dc:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  4057e1:	lea    rax,[rip+0x3459]        # 408c41 <_IO_stdin_used@@Base+0xc41>
  4057e8:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  4057ed:	lea    rax,[rip+0x3467]        # 408c5b <_IO_stdin_used@@Base+0xc5b>
  4057f4:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  4057f9:	lea    rax,[rip+0x3478]        # 408c78 <_IO_stdin_used@@Base+0xc78>
  405800:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  405805:	lea    rax,[rip+0x3494]        # 408ca0 <_IO_stdin_used@@Base+0xca0>
  40580c:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  405811:	lea    rax,[rip+0x34a7]        # 408cbf <_IO_stdin_used@@Base+0xcbf>
  405818:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  40581d:	lea    rax,[rip+0x34b6]        # 408cda <_IO_stdin_used@@Base+0xcda>
  405824:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  405829:	lea    rax,[rip+0x34be]        # 408cee <_IO_stdin_used@@Base+0xcee>
  405830:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  405835:	lea    rax,[rip+0x34c6]        # 408d02 <_IO_stdin_used@@Base+0xd02>
  40583c:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  405841:	lea    rax,[rip+0x34cf]        # 408d17 <_IO_stdin_used@@Base+0xd17>
  405848:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  40584d:	lea    rax,[rip+0x34d4]        # 408d28 <_IO_stdin_used@@Base+0xd28>
  405854:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  405859:	lea    rax,[rip+0x34e0]        # 408d40 <_IO_stdin_used@@Base+0xd40>
  405860:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  405865:	lea    rax,[rip+0x34ed]        # 408d59 <_IO_stdin_used@@Base+0xd59>
  40586c:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  405871:	lea    rax,[rip+0x3500]        # 408d78 <_IO_stdin_used@@Base+0xd78>
  405878:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  40587d:	lea    rax,[rip+0x351c]        # 408da0 <_IO_stdin_used@@Base+0xda0>
  405884:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  405889:	lea    rax,[rip+0x3538]        # 408dc8 <_IO_stdin_used@@Base+0xdc8>
  405890:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  405895:	lea    rax,[rip+0x3554]        # 408df0 <_IO_stdin_used@@Base+0xdf0>
  40589c:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  4058a1:	lea    rax,[rip+0x3560]        # 408e08 <_IO_stdin_used@@Base+0xe08>
  4058a8:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  4058ad:	lea    rax,[rip+0x357b]        # 408e2f <_IO_stdin_used@@Base+0xe2f>
  4058b4:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  4058b9:	lea    rax,[rip+0x3588]        # 408e48 <_IO_stdin_used@@Base+0xe48>
  4058c0:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  4058c5:	lea    rax,[rip+0x35ac]        # 408e78 <_IO_stdin_used@@Base+0xe78>
  4058cc:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  4058d1:	lea    rax,[rip+0x35d8]        # 408eb0 <_IO_stdin_used@@Base+0xeb0>
  4058d8:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  4058da:	lea    rax,[rip+0x35ff]        # 408ee0 <_IO_stdin_used@@Base+0xee0>
  4058e1:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  4058e3:	lea    rax,[rip+0x3626]        # 408f10 <_IO_stdin_used@@Base+0xf10>
  4058ea:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  4058ec:	lea    rax,[rip+0x364c]        # 408f3f <_IO_stdin_used@@Base+0xf3f>
  4058f3:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  4058f5:	lea    rax,[rip+0x3657]        # 408f53 <_IO_stdin_used@@Base+0xf53>
  4058fc:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  4058fe:	lea    rax,[rip+0x3669]        # 408f6e <_IO_stdin_used@@Base+0xf6e>
  405905:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  405907:	lea    rax,[rip+0x367a]        # 408f88 <_IO_stdin_used@@Base+0xf88>
  40590e:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  405910:	lea    rax,[rip+0x3699]        # 408fb0 <_IO_stdin_used@@Base+0xfb0>
  405917:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  405919:	lea    rax,[rip+0x36b6]        # 408fd6 <_IO_stdin_used@@Base+0xfd6>
  405920:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  405922:	lea    rax,[rip+0x36c7]        # 408ff0 <_IO_stdin_used@@Base+0xff0>
  405929:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  40592b:	lea    rax,[rip+0x36e6]        # 409018 <_IO_stdin_used@@Base+0x1018>
  405932:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  405934:	lea    rax,[rip+0x3705]        # 409040 <_IO_stdin_used@@Base+0x1040>
  40593b:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  40593d:	lea    rax,[rip+0x3734]        # 409078 <_IO_stdin_used@@Base+0x1078>
  405944:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  405946:	lea    rax,[rip+0x3753]        # 4090a0 <_IO_stdin_used@@Base+0x10a0>
  40594d:	jmp    405956 <flatcc_verify_error_string@@Base+0x1d3>
  40594f:	lea    rax,[rip+0x3758]        # 4090ae <_IO_stdin_used@@Base+0x10ae>
  405956:	pop    rbp
  405957:	ret    
  405958:	push   rbp
  405959:	mov    rbp,rsp
  40595c:	sub    rsp,0x10
  405960:	mov    QWORD PTR [rbp-0x8],rdi
  405964:	mov    DWORD PTR [rbp-0xc],esi
  405967:	mov    edx,DWORD PTR [rbp-0xc]
  40596a:	mov    rax,QWORD PTR [rbp-0x8]
  40596e:	add    rax,rdx
  405971:	mov    rdi,rax
  405974:	call   405706 <main@@Base+0x1f9>
  405979:	leave  
  40597a:	ret    
  40597b:	push   rbp
  40597c:	mov    rbp,rsp
  40597f:	sub    rsp,0x20
  405983:	mov    QWORD PTR [rbp-0x18],rdi
  405987:	mov    rax,QWORD PTR fs:0x28
  405990:	mov    QWORD PTR [rbp-0x8],rax
  405994:	xor    eax,eax
  405996:	mov    DWORD PTR [rbp-0xc],0x0
  40599d:	mov    rcx,QWORD PTR [rbp-0x18]
  4059a1:	lea    rax,[rbp-0xc]
  4059a5:	mov    edx,0x4
  4059aa:	mov    rsi,rcx
  4059ad:	mov    rdi,rax
  4059b0:	call   402180 <strncpy@plt>
  4059b5:	mov    eax,DWORD PTR [rbp-0xc]
  4059b8:	mov    edi,eax
  4059ba:	call   40575c <main@@Base+0x24f>
  4059bf:	mov    rdx,QWORD PTR [rbp-0x8]
  4059c3:	xor    rdx,QWORD PTR fs:0x28
  4059cc:	je     4059d3 <flatcc_verify_error_string@@Base+0x250>
  4059ce:	call   4021c0 <__stack_chk_fail@plt>
  4059d3:	leave  
  4059d4:	ret    
  4059d5:	push   rbp
  4059d6:	mov    rbp,rsp
  4059d9:	sub    rsp,0x10
  4059dd:	mov    QWORD PTR [rbp-0x8],rdi
  4059e1:	mov    DWORD PTR [rbp-0xc],esi
  4059e4:	mov    edx,DWORD PTR [rbp-0xc]
  4059e7:	mov    rax,QWORD PTR [rbp-0x8]
  4059eb:	add    rax,rdx
  4059ee:	mov    rdi,rax
  4059f1:	call   405768 <main@@Base+0x25b>
  4059f6:	leave  
  4059f7:	ret    
  4059f8:	push   rbp
  4059f9:	mov    rbp,rsp
  4059fc:	sub    rsp,0x10
  405a00:	mov    QWORD PTR [rbp-0x8],rdi
  405a04:	mov    DWORD PTR [rbp-0xc],esi
  405a07:	mov    edx,DWORD PTR [rbp-0xc]
  405a0a:	mov    rax,QWORD PTR [rbp-0x8]
  405a0e:	add    rax,rdx
  405a11:	mov    rdi,rax
  405a14:	call   405731 <main@@Base+0x224>
  405a19:	leave  
  405a1a:	ret    
  405a1b:	push   rbp
  405a1c:	mov    rbp,rsp
  405a1f:	mov    DWORD PTR [rbp-0x14],edi
  405a22:	mov    DWORD PTR [rbp-0x18],esi
  405a25:	mov    DWORD PTR [rbp-0x1c],edx
  405a28:	mov    edx,DWORD PTR [rbp-0x18]
  405a2b:	mov    eax,DWORD PTR [rbp-0x1c]
  405a2e:	add    eax,edx
  405a30:	mov    DWORD PTR [rbp-0x4],eax
  405a33:	mov    eax,DWORD PTR [rbp-0x4]
  405a36:	cmp    eax,DWORD PTR [rbp-0x18]
  405a39:	jbe    405a5c <flatcc_verify_error_string@@Base+0x2d9>
  405a3b:	mov    eax,DWORD PTR [rbp-0x4]
  405a3e:	lea    rdx,[rax+0x4]
  405a42:	mov    eax,DWORD PTR [rbp-0x14]
  405a45:	cmp    rdx,rax
  405a48:	ja     405a5c <flatcc_verify_error_string@@Base+0x2d9>
  405a4a:	mov    eax,DWORD PTR [rbp-0x4]
  405a4d:	and    eax,0x3
  405a50:	test   rax,rax
  405a53:	jne    405a5c <flatcc_verify_error_string@@Base+0x2d9>
  405a55:	mov    eax,0x1
  405a5a:	jmp    405a61 <flatcc_verify_error_string@@Base+0x2de>
  405a5c:	mov    eax,0x0
  405a61:	pop    rbp
  405a62:	ret    
  405a63:	push   rbp
  405a64:	mov    rbp,rsp
  405a67:	mov    DWORD PTR [rbp-0x14],edi
  405a6a:	mov    DWORD PTR [rbp-0x18],esi
  405a6d:	mov    DWORD PTR [rbp-0x1c],edx
  405a70:	mov    eax,ecx
  405a72:	mov    WORD PTR [rbp-0x20],ax
  405a76:	mov    edx,DWORD PTR [rbp-0x18]
  405a79:	mov    eax,DWORD PTR [rbp-0x1c]
  405a7c:	add    eax,edx
  405a7e:	mov    DWORD PTR [rbp-0x4],eax
  405a81:	mov    eax,0x4
  405a86:	cmp    WORD PTR [rbp-0x20],0x4
  405a8b:	cmovae ax,WORD PTR [rbp-0x20]
  405a90:	mov    WORD PTR [rbp-0x20],ax
  405a94:	mov    eax,DWORD PTR [rbp-0x4]
  405a97:	cmp    eax,DWORD PTR [rbp-0x18]
  405a9a:	jbe    405acc <flatcc_verify_error_string@@Base+0x349>
  405a9c:	mov    eax,DWORD PTR [rbp-0x4]
  405a9f:	lea    rdx,[rax+0x4]
  405aa3:	mov    eax,DWORD PTR [rbp-0x14]
  405aa6:	cmp    rdx,rax
  405aa9:	ja     405acc <flatcc_verify_error_string@@Base+0x349>
  405aab:	mov    eax,DWORD PTR [rbp-0x4]
  405aae:	lea    rdx,[rax+0x4]
  405ab2:	movzx  eax,WORD PTR [rbp-0x20]
  405ab6:	dec    eax
  405ab8:	or     eax,0x3
  405abb:	cdqe   
  405abd:	and    rax,rdx
  405ac0:	test   rax,rax
  405ac3:	jne    405acc <flatcc_verify_error_string@@Base+0x349>
  405ac5:	mov    eax,0x1
  405aca:	jmp    405ad1 <flatcc_verify_error_string@@Base+0x34e>
  405acc:	mov    eax,0x0
  405ad1:	pop    rbp
  405ad2:	ret    
  405ad3:	push   rbp
  405ad4:	mov    rbp,rsp
  405ad7:	mov    DWORD PTR [rbp-0x14],edi
  405ada:	mov    DWORD PTR [rbp-0x18],esi
  405add:	mov    DWORD PTR [rbp-0x1c],edx
  405ae0:	mov    DWORD PTR [rbp-0x20],ecx
  405ae3:	mov    eax,r8d
  405ae6:	mov    WORD PTR [rbp-0x24],ax
  405aea:	cmp    DWORD PTR [rbp-0x1c],0x0
  405aee:	je     405afd <flatcc_verify_error_string@@Base+0x37a>
  405af0:	mov    edx,DWORD PTR [rbp-0x18]
  405af3:	mov    eax,DWORD PTR [rbp-0x1c]
  405af6:	add    eax,edx
  405af8:	cmp    DWORD PTR [rbp-0x14],eax
  405afb:	jae    405b04 <flatcc_verify_error_string@@Base+0x381>
  405afd:	mov    eax,0x12
  405b02:	jmp    405b72 <flatcc_verify_error_string@@Base+0x3ef>
  405b04:	mov    eax,DWORD PTR [rbp-0x1c]
  405b07:	add    DWORD PTR [rbp-0x18],eax
  405b0a:	mov    edx,DWORD PTR [rbp-0x18]
  405b0d:	mov    eax,DWORD PTR [rbp-0x20]
  405b10:	add    eax,edx
  405b12:	cmp    DWORD PTR [rbp-0x18],eax
  405b15:	setbe  al
  405b18:	movzx  eax,al
  405b1b:	mov    DWORD PTR [rbp-0xc],eax
  405b1e:	cmp    DWORD PTR [rbp-0xc],0x0
  405b22:	jne    405b2b <flatcc_verify_error_string@@Base+0x3a8>
  405b24:	mov    eax,0xa
  405b29:	jmp    405b72 <flatcc_verify_error_string@@Base+0x3ef>
  405b2b:	mov    edx,DWORD PTR [rbp-0x18]
  405b2e:	mov    eax,DWORD PTR [rbp-0x20]
  405b31:	add    eax,edx
  405b33:	cmp    DWORD PTR [rbp-0x14],eax
  405b36:	setae  al
  405b39:	movzx  eax,al
  405b3c:	mov    DWORD PTR [rbp-0x8],eax
  405b3f:	cmp    DWORD PTR [rbp-0x8],0x0
  405b43:	jne    405b4c <flatcc_verify_error_string@@Base+0x3c9>
  405b45:	mov    eax,0x9
  405b4a:	jmp    405b72 <flatcc_verify_error_string@@Base+0x3ef>
  405b4c:	movzx  eax,WORD PTR [rbp-0x24]
  405b50:	dec    eax
  405b52:	and    eax,DWORD PTR [rbp-0x18]
  405b55:	test   eax,eax
  405b57:	sete   al
  405b5a:	movzx  eax,al
  405b5d:	mov    DWORD PTR [rbp-0x4],eax
  405b60:	cmp    DWORD PTR [rbp-0x4],0x0
  405b64:	jne    405b6d <flatcc_verify_error_string@@Base+0x3ea>
  405b66:	mov    eax,0xb
  405b6b:	jmp    405b72 <flatcc_verify_error_string@@Base+0x3ef>
  405b6d:	mov    eax,0x0
  405b72:	pop    rbp
  405b73:	ret    
  405b74:	push   rbp
  405b75:	mov    rbp,rsp
  405b78:	sub    rsp,0x20
  405b7c:	mov    QWORD PTR [rbp-0x18],rdi
  405b80:	mov    eax,esi
  405b82:	mov    WORD PTR [rbp-0x1c],ax
  405b86:	movzx  eax,WORD PTR [rbp-0x1c]
  405b8a:	add    eax,0x2
  405b8d:	cdqe   
  405b8f:	add    eax,eax
  405b91:	mov    WORD PTR [rbp-0x2],ax
  405b95:	mov    rax,QWORD PTR [rbp-0x18]
  405b99:	movzx  eax,WORD PTR [rax+0x1e]
  405b9d:	cmp    WORD PTR [rbp-0x2],ax
  405ba1:	jb     405baa <flatcc_verify_error_string@@Base+0x427>
  405ba3:	mov    eax,0x0
  405ba8:	jmp    405bc3 <flatcc_verify_error_string@@Base+0x440>
  405baa:	movzx  edx,WORD PTR [rbp-0x2]
  405bae:	mov    rax,QWORD PTR [rbp-0x18]
  405bb2:	mov    rax,QWORD PTR [rax+0x10]
  405bb6:	mov    esi,edx
  405bb8:	mov    rdi,rax
  405bbb:	call   4059f8 <flatcc_verify_error_string@@Base+0x275>
  405bc0:	movzx  eax,ax
  405bc3:	leave  
  405bc4:	ret    
  405bc5:	push   rbp
  405bc6:	mov    rbp,rsp
  405bc9:	sub    rsp,0x20
  405bcd:	mov    QWORD PTR [rbp-0x18],rdi
  405bd1:	mov    eax,esi
  405bd3:	mov    WORD PTR [rbp-0x1c],ax
  405bd7:	movzx  edx,WORD PTR [rbp-0x1c]
  405bdb:	mov    rax,QWORD PTR [rbp-0x18]
  405bdf:	mov    esi,edx
  405be1:	mov    rdi,rax
  405be4:	call   405b74 <flatcc_verify_error_string@@Base+0x3f1>
  405be9:	mov    WORD PTR [rbp-0x2],ax
  405bed:	cmp    WORD PTR [rbp-0x2],0x0
  405bf2:	je     405c10 <flatcc_verify_error_string@@Base+0x48d>
  405bf4:	mov    rax,QWORD PTR [rbp-0x18]
  405bf8:	mov    rdx,QWORD PTR [rax]
  405bfb:	mov    rax,QWORD PTR [rbp-0x18]
  405bff:	mov    eax,DWORD PTR [rax+0x18]
  405c02:	mov    ecx,eax
  405c04:	movzx  eax,WORD PTR [rbp-0x2]
  405c08:	add    rax,rcx
  405c0b:	add    rax,rdx
  405c0e:	jmp    405c15 <flatcc_verify_error_string@@Base+0x492>
  405c10:	mov    eax,0x0
  405c15:	leave  
  405c16:	ret    
  405c17:	endbr64 
  405c1b:	push   rbp
  405c1c:	mov    rbp,rsp
  405c1f:	sub    rsp,0x38
  405c23:	mov    QWORD PTR [rbp-0x28],rdi
  405c27:	mov    eax,esi
  405c29:	mov    DWORD PTR [rbp-0x30],edx
  405c2c:	mov    DWORD PTR [rbp-0x34],ecx
  405c2f:	mov    edx,r8d
  405c32:	mov    WORD PTR [rbp-0x2c],ax
  405c36:	mov    eax,edx
  405c38:	mov    WORD PTR [rbp-0x38],ax
  405c3c:	mov    rax,QWORD PTR [rbp-0x28]
  405c40:	mov    rax,QWORD PTR [rax]
  405c43:	mov    DWORD PTR [rbp-0x1c],eax
  405c46:	movzx  edx,WORD PTR [rbp-0x2c]
  405c4a:	mov    rax,QWORD PTR [rbp-0x28]
  405c4e:	mov    esi,edx
  405c50:	mov    rdi,rax
  405c53:	call   405b74 <flatcc_verify_error_string@@Base+0x3f1>
  405c58:	mov    WORD PTR [rbp-0x1e],ax
  405c5c:	cmp    WORD PTR [rbp-0x1e],0x0
  405c61:	jne    405c87 <flatcc_verify_error_string@@Base+0x504>
  405c63:	cmp    DWORD PTR [rbp-0x30],0x0
  405c67:	sete   al
  405c6a:	movzx  eax,al
  405c6d:	mov    DWORD PTR [rbp-0x18],eax
  405c70:	cmp    DWORD PTR [rbp-0x18],0x0
  405c74:	jne    405c80 <flatcc_verify_error_string@@Base+0x4fd>
  405c76:	mov    eax,0x4
  405c7b:	jmp    405d06 <flatcc_verify_error_string@@Base+0x583>
  405c80:	mov    eax,0x0
  405c85:	jmp    405d06 <flatcc_verify_error_string@@Base+0x583>
  405c87:	movzx  eax,WORD PTR [rbp-0x1e]
  405c8b:	mov    DWORD PTR [rbp-0x14],eax
  405c8e:	mov    edx,DWORD PTR [rbp-0x14]
  405c91:	mov    eax,DWORD PTR [rbp-0x34]
  405c94:	add    eax,edx
  405c96:	mov    DWORD PTR [rbp-0x10],eax
  405c99:	mov    rax,QWORD PTR [rbp-0x28]
  405c9d:	movzx  eax,WORD PTR [rax+0x1c]
  405ca1:	movzx  eax,ax
  405ca4:	cmp    DWORD PTR [rbp-0x10],eax
  405ca7:	setbe  al
  405caa:	movzx  eax,al
  405cad:	mov    DWORD PTR [rbp-0xc],eax
  405cb0:	cmp    DWORD PTR [rbp-0xc],0x0
  405cb4:	jne    405cbd <flatcc_verify_error_string@@Base+0x53a>
  405cb6:	mov    eax,0xd
  405cbb:	jmp    405d06 <flatcc_verify_error_string@@Base+0x583>
  405cbd:	mov    DWORD PTR [rbp-0x8],0x1
  405cc4:	cmp    DWORD PTR [rbp-0x8],0x0
  405cc8:	jne    405cd1 <flatcc_verify_error_string@@Base+0x54e>
  405cca:	mov    eax,0xe
  405ccf:	jmp    405d06 <flatcc_verify_error_string@@Base+0x583>
  405cd1:	mov    rax,QWORD PTR [rbp-0x28]
  405cd5:	mov    edx,DWORD PTR [rax+0x18]
  405cd8:	mov    eax,DWORD PTR [rbp-0x1c]
  405cdb:	add    eax,edx
  405cdd:	add    DWORD PTR [rbp-0x14],eax
  405ce0:	movzx  eax,WORD PTR [rbp-0x38]
  405ce4:	dec    eax
  405ce6:	and    eax,DWORD PTR [rbp-0x14]
  405ce9:	test   eax,eax
  405ceb:	sete   al
  405cee:	movzx  eax,al
  405cf1:	mov    DWORD PTR [rbp-0x4],eax
  405cf4:	cmp    DWORD PTR [rbp-0x4],0x0
  405cf8:	jne    405d01 <flatcc_verify_error_string@@Base+0x57e>
  405cfa:	mov    eax,0xc
  405cff:	jmp    405d06 <flatcc_verify_error_string@@Base+0x583>
  405d01:	mov    eax,0x0
  405d06:	leave  
  405d07:	ret    
  405d08:	endbr64 
  405d0c:	push   rbp
  405d0d:	mov    rbp,rsp
  405d10:	sub    rsp,0x38
  405d14:	mov    QWORD PTR [rbp-0x28],rdi
  405d18:	mov    eax,esi
  405d1a:	mov    DWORD PTR [rbp-0x30],edx
  405d1d:	mov    QWORD PTR [rbp-0x38],rcx
  405d21:	mov    WORD PTR [rbp-0x2c],ax
  405d25:	movzx  edx,WORD PTR [rbp-0x2c]
  405d29:	mov    rax,QWORD PTR [rbp-0x28]
  405d2d:	mov    esi,edx
  405d2f:	mov    rdi,rax
  405d32:	call   405b74 <flatcc_verify_error_string@@Base+0x3f1>
  405d37:	mov    WORD PTR [rbp-0x16],ax
  405d3b:	cmp    WORD PTR [rbp-0x16],0x0
  405d40:	jne    405d63 <flatcc_verify_error_string@@Base+0x5e0>
  405d42:	mov    rax,QWORD PTR [rbp-0x38]
  405d46:	mov    DWORD PTR [rax],0x0
  405d4c:	cmp    DWORD PTR [rbp-0x30],0x0
  405d50:	je     405d5c <flatcc_verify_error_string@@Base+0x5d9>
  405d52:	mov    eax,0x4
  405d57:	jmp    405de2 <flatcc_verify_error_string@@Base+0x65f>
  405d5c:	mov    eax,0x0
  405d61:	jmp    405de2 <flatcc_verify_error_string@@Base+0x65f>
  405d63:	movzx  eax,WORD PTR [rbp-0x16]
  405d67:	mov    DWORD PTR [rbp-0x14],eax
  405d6a:	mov    eax,DWORD PTR [rbp-0x14]
  405d6d:	add    eax,0x4
  405d70:	mov    DWORD PTR [rbp-0x10],eax
  405d73:	mov    rax,QWORD PTR [rbp-0x28]
  405d77:	movzx  eax,WORD PTR [rax+0x1c]
  405d7b:	movzx  eax,ax
  405d7e:	cmp    DWORD PTR [rbp-0x10],eax
  405d81:	setbe  al
  405d84:	movzx  eax,al
  405d87:	mov    DWORD PTR [rbp-0xc],eax
  405d8a:	cmp    DWORD PTR [rbp-0xc],0x0
  405d8e:	jne    405d97 <flatcc_verify_error_string@@Base+0x614>
  405d90:	mov    eax,0xd
  405d95:	jmp    405de2 <flatcc_verify_error_string@@Base+0x65f>
  405d97:	mov    DWORD PTR [rbp-0x8],0x1
  405d9e:	cmp    DWORD PTR [rbp-0x8],0x0
  405da2:	jne    405dab <flatcc_verify_error_string@@Base+0x628>
  405da4:	mov    eax,0xe
  405da9:	jmp    405de2 <flatcc_verify_error_string@@Base+0x65f>
  405dab:	mov    rax,QWORD PTR [rbp-0x28]
  405daf:	mov    eax,DWORD PTR [rax+0x18]
  405db2:	add    DWORD PTR [rbp-0x14],eax
  405db5:	mov    eax,DWORD PTR [rbp-0x14]
  405db8:	and    eax,0x3
  405dbb:	test   rax,rax
  405dbe:	sete   al
  405dc1:	movzx  eax,al
  405dc4:	mov    DWORD PTR [rbp-0x4],eax
  405dc7:	cmp    DWORD PTR [rbp-0x4],0x0
  405dcb:	jne    405dd4 <flatcc_verify_error_string@@Base+0x651>
  405dcd:	mov    eax,0xc
  405dd2:	jmp    405de2 <flatcc_verify_error_string@@Base+0x65f>
  405dd4:	mov    rax,QWORD PTR [rbp-0x38]
  405dd8:	mov    edx,DWORD PTR [rbp-0x14]
  405ddb:	mov    DWORD PTR [rax],edx
  405ddd:	mov    eax,0x0
  405de2:	leave  
  405de3:	ret    
  405de4:	push   rbp
  405de5:	mov    rbp,rsp
  405de8:	sub    rsp,0x28
  405dec:	mov    QWORD PTR [rbp-0x18],rdi
  405df0:	mov    DWORD PTR [rbp-0x1c],esi
  405df3:	mov    DWORD PTR [rbp-0x20],edx
  405df6:	mov    DWORD PTR [rbp-0x24],ecx
  405df9:	mov    edx,DWORD PTR [rbp-0x24]
  405dfc:	mov    ecx,DWORD PTR [rbp-0x20]
  405dff:	mov    eax,DWORD PTR [rbp-0x1c]
  405e02:	mov    esi,ecx
  405e04:	mov    edi,eax
  405e06:	call   405a1b <flatcc_verify_error_string@@Base+0x298>
  405e0b:	mov    DWORD PTR [rbp-0x10],eax
  405e0e:	cmp    DWORD PTR [rbp-0x10],0x0
  405e12:	jne    405e1b <flatcc_verify_error_string@@Base+0x698>
  405e14:	mov    eax,0x11
  405e19:	jmp    405e8c <flatcc_verify_error_string@@Base+0x709>
  405e1b:	mov    eax,DWORD PTR [rbp-0x24]
  405e1e:	add    DWORD PTR [rbp-0x20],eax
  405e21:	mov    edx,DWORD PTR [rbp-0x20]
  405e24:	mov    rax,QWORD PTR [rbp-0x18]
  405e28:	mov    esi,edx
  405e2a:	mov    rdi,rax
  405e2d:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  405e32:	mov    DWORD PTR [rbp-0xc],eax
  405e35:	add    DWORD PTR [rbp-0x20],0x4
  405e39:	mov    eax,DWORD PTR [rbp-0x1c]
  405e3c:	sub    eax,DWORD PTR [rbp-0x20]
  405e3f:	mov    edx,DWORD PTR [rbp-0xc]
  405e42:	inc    edx
  405e44:	cmp    eax,edx
  405e46:	setae  al
  405e49:	movzx  eax,al
  405e4c:	mov    DWORD PTR [rbp-0x8],eax
  405e4f:	cmp    DWORD PTR [rbp-0x8],0x0
  405e53:	jne    405e5c <flatcc_verify_error_string@@Base+0x6d9>
  405e55:	mov    eax,0x8
  405e5a:	jmp    405e8c <flatcc_verify_error_string@@Base+0x709>
  405e5c:	mov    edx,DWORD PTR [rbp-0x20]
  405e5f:	mov    eax,DWORD PTR [rbp-0xc]
  405e62:	add    rdx,rax
  405e65:	mov    rax,QWORD PTR [rbp-0x18]
  405e69:	add    rax,rdx
  405e6c:	movzx  eax,BYTE PTR [rax]
  405e6f:	test   al,al
  405e71:	sete   al
  405e74:	movzx  eax,al
  405e77:	mov    DWORD PTR [rbp-0x4],eax
  405e7a:	cmp    DWORD PTR [rbp-0x4],0x0
  405e7e:	jne    405e87 <flatcc_verify_error_string@@Base+0x704>
  405e80:	mov    eax,0x7
  405e85:	jmp    405e8c <flatcc_verify_error_string@@Base+0x709>
  405e87:	mov    eax,0x0
  405e8c:	leave  
  405e8d:	ret    
  405e8e:	push   rbp
  405e8f:	mov    rbp,rsp
  405e92:	sub    rsp,0x30
  405e96:	mov    QWORD PTR [rbp-0x18],rdi
  405e9a:	mov    DWORD PTR [rbp-0x1c],esi
  405e9d:	mov    DWORD PTR [rbp-0x20],edx
  405ea0:	mov    DWORD PTR [rbp-0x24],ecx
  405ea3:	mov    DWORD PTR [rbp-0x28],r8d
  405ea7:	mov    eax,r9d
  405eaa:	mov    WORD PTR [rbp-0x2c],ax
  405eae:	movzx  ecx,WORD PTR [rbp-0x2c]
  405eb2:	mov    edx,DWORD PTR [rbp-0x24]
  405eb5:	mov    esi,DWORD PTR [rbp-0x20]
  405eb8:	mov    eax,DWORD PTR [rbp-0x1c]
  405ebb:	mov    edi,eax
  405ebd:	call   405a63 <flatcc_verify_error_string@@Base+0x2e0>
  405ec2:	mov    DWORD PTR [rbp-0x10],eax
  405ec5:	cmp    DWORD PTR [rbp-0x10],0x0
  405ec9:	jne    405ed2 <flatcc_verify_error_string@@Base+0x74f>
  405ecb:	mov    eax,0x10
  405ed0:	jmp    405f38 <flatcc_verify_error_string@@Base+0x7b5>
  405ed2:	mov    eax,DWORD PTR [rbp-0x24]
  405ed5:	add    DWORD PTR [rbp-0x20],eax
  405ed8:	mov    edx,DWORD PTR [rbp-0x20]
  405edb:	mov    rax,QWORD PTR [rbp-0x18]
  405edf:	mov    esi,edx
  405ee1:	mov    rdi,rax
  405ee4:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  405ee9:	mov    DWORD PTR [rbp-0xc],eax
  405eec:	add    DWORD PTR [rbp-0x20],0x4
  405ef0:	mov    eax,DWORD PTR [rbp-0xc]
  405ef3:	cmp    eax,DWORD PTR [rbp+0x10]
  405ef6:	setbe  al
  405ef9:	movzx  eax,al
  405efc:	mov    DWORD PTR [rbp-0x8],eax
  405eff:	cmp    DWORD PTR [rbp-0x8],0x0
  405f03:	jne    405f0c <flatcc_verify_error_string@@Base+0x789>
  405f05:	mov    eax,0x19
  405f0a:	jmp    405f38 <flatcc_verify_error_string@@Base+0x7b5>
  405f0c:	mov    eax,DWORD PTR [rbp-0x1c]
  405f0f:	sub    eax,DWORD PTR [rbp-0x20]
  405f12:	mov    edx,eax
  405f14:	mov    eax,DWORD PTR [rbp-0xc]
  405f17:	imul   eax,DWORD PTR [rbp-0x28]
  405f1b:	cmp    edx,eax
  405f1d:	setae  al
  405f20:	movzx  eax,al
  405f23:	mov    DWORD PTR [rbp-0x4],eax
  405f26:	cmp    DWORD PTR [rbp-0x4],0x0
  405f2a:	jne    405f33 <flatcc_verify_error_string@@Base+0x7b0>
  405f2c:	mov    eax,0x1a
  405f31:	jmp    405f38 <flatcc_verify_error_string@@Base+0x7b5>
  405f33:	mov    eax,0x0
  405f38:	leave  
  405f39:	ret    
  405f3a:	push   rbp
  405f3b:	mov    rbp,rsp
  405f3e:	sub    rsp,0x28
  405f42:	mov    QWORD PTR [rbp-0x18],rdi
  405f46:	mov    DWORD PTR [rbp-0x1c],esi
  405f49:	mov    DWORD PTR [rbp-0x20],edx
  405f4c:	mov    DWORD PTR [rbp-0x24],ecx
  405f4f:	mov    ecx,DWORD PTR [rbp-0x24]
  405f52:	mov    edx,DWORD PTR [rbp-0x20]
  405f55:	mov    esi,DWORD PTR [rbp-0x1c]
  405f58:	mov    rax,QWORD PTR [rbp-0x18]
  405f5c:	push   0x3fffffff
  405f61:	mov    r9d,0x4
  405f67:	mov    r8d,0x4
  405f6d:	mov    rdi,rax
  405f70:	call   405e8e <flatcc_verify_error_string@@Base+0x70b>
  405f75:	add    rsp,0x8
  405f79:	test   eax,eax
  405f7b:	je     405fac <flatcc_verify_error_string@@Base+0x829>
  405f7d:	mov    ecx,DWORD PTR [rbp-0x24]
  405f80:	mov    edx,DWORD PTR [rbp-0x20]
  405f83:	mov    esi,DWORD PTR [rbp-0x1c]
  405f86:	mov    rax,QWORD PTR [rbp-0x18]
  405f8a:	push   0x3fffffff
  405f8f:	mov    r9d,0x4
  405f95:	mov    r8d,0x4
  405f9b:	mov    rdi,rax
  405f9e:	call   405e8e <flatcc_verify_error_string@@Base+0x70b>
  405fa3:	add    rsp,0x8
  405fa7:	jmp    406037 <flatcc_verify_error_string@@Base+0x8b4>
  405fac:	mov    eax,DWORD PTR [rbp-0x24]
  405faf:	add    DWORD PTR [rbp-0x20],eax
  405fb2:	mov    edx,DWORD PTR [rbp-0x20]
  405fb5:	mov    rax,QWORD PTR [rbp-0x18]
  405fb9:	mov    esi,edx
  405fbb:	mov    rdi,rax
  405fbe:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  405fc3:	mov    DWORD PTR [rbp-0x4],eax
  405fc6:	add    DWORD PTR [rbp-0x20],0x4
  405fca:	mov    DWORD PTR [rbp-0x8],0x0
  405fd1:	jmp    40602a <flatcc_verify_error_string@@Base+0x8a7>
  405fd3:	mov    edx,DWORD PTR [rbp-0x20]
  405fd6:	mov    rax,QWORD PTR [rbp-0x18]
  405fda:	mov    esi,edx
  405fdc:	mov    rdi,rax
  405fdf:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  405fe4:	mov    ecx,eax
  405fe6:	mov    edx,DWORD PTR [rbp-0x20]
  405fe9:	mov    esi,DWORD PTR [rbp-0x1c]
  405fec:	mov    rax,QWORD PTR [rbp-0x18]
  405ff0:	mov    rdi,rax
  405ff3:	call   405de4 <flatcc_verify_error_string@@Base+0x661>
  405ff8:	test   eax,eax
  405ffa:	je     406023 <flatcc_verify_error_string@@Base+0x8a0>
  405ffc:	mov    edx,DWORD PTR [rbp-0x20]
  405fff:	mov    rax,QWORD PTR [rbp-0x18]
  406003:	mov    esi,edx
  406005:	mov    rdi,rax
  406008:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  40600d:	mov    ecx,eax
  40600f:	mov    edx,DWORD PTR [rbp-0x20]
  406012:	mov    esi,DWORD PTR [rbp-0x1c]
  406015:	mov    rax,QWORD PTR [rbp-0x18]
  406019:	mov    rdi,rax
  40601c:	call   405de4 <flatcc_verify_error_string@@Base+0x661>
  406021:	jmp    406037 <flatcc_verify_error_string@@Base+0x8b4>
  406023:	inc    DWORD PTR [rbp-0x8]
  406026:	add    DWORD PTR [rbp-0x20],0x4
  40602a:	mov    eax,DWORD PTR [rbp-0x8]
  40602d:	cmp    eax,DWORD PTR [rbp-0x4]
  406030:	jb     405fd3 <flatcc_verify_error_string@@Base+0x850>
  406032:	mov    eax,0x0
  406037:	leave  
  406038:	ret    
  406039:	push   rbp
  40603a:	mov    rbp,rsp
  40603d:	push   rbx
  40603e:	sub    rsp,0x88
  406045:	mov    QWORD PTR [rbp-0x78],rdi
  406049:	mov    DWORD PTR [rbp-0x7c],esi
  40604c:	mov    DWORD PTR [rbp-0x80],edx
  40604f:	mov    DWORD PTR [rbp-0x84],ecx
  406055:	mov    DWORD PTR [rbp-0x88],r8d
  40605c:	mov    QWORD PTR [rbp-0x90],r9
  406063:	mov    rax,QWORD PTR fs:0x28
  40606c:	mov    QWORD PTR [rbp-0x18],rax
  406070:	xor    eax,eax
  406072:	mov    eax,DWORD PTR [rbp-0x88]
  406078:	dec    eax
  40607a:	mov    DWORD PTR [rbp-0x34],eax
  40607d:	mov    eax,DWORD PTR [rbp-0x34]
  406080:	mov    DWORD PTR [rbp-0x68],eax
  406083:	cmp    DWORD PTR [rbp-0x68],0x0
  406087:	jne    406093 <flatcc_verify_error_string@@Base+0x910>
  406089:	mov    eax,0x3
  40608e:	jmp    406235 <flatcc_verify_error_string@@Base+0xab2>
  406093:	mov    edx,DWORD PTR [rbp-0x84]
  406099:	mov    ecx,DWORD PTR [rbp-0x80]
  40609c:	mov    eax,DWORD PTR [rbp-0x7c]
  40609f:	mov    esi,ecx
  4060a1:	mov    edi,eax
  4060a3:	call   405a1b <flatcc_verify_error_string@@Base+0x298>
  4060a8:	mov    DWORD PTR [rbp-0x64],eax
  4060ab:	cmp    DWORD PTR [rbp-0x64],0x0
  4060af:	jne    4060bb <flatcc_verify_error_string@@Base+0x938>
  4060b1:	mov    eax,0xf
  4060b6:	jmp    406235 <flatcc_verify_error_string@@Base+0xab2>
  4060bb:	mov    edx,DWORD PTR [rbp-0x80]
  4060be:	mov    eax,DWORD PTR [rbp-0x84]
  4060c4:	add    eax,edx
  4060c6:	mov    DWORD PTR [rbp-0x28],eax
  4060c9:	mov    ebx,DWORD PTR [rbp-0x28]
  4060cc:	mov    edx,DWORD PTR [rbp-0x28]
  4060cf:	mov    rax,QWORD PTR [rbp-0x78]
  4060d3:	mov    esi,edx
  4060d5:	mov    rdi,rax
  4060d8:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  4060dd:	sub    ebx,eax
  4060df:	mov    eax,ebx
  4060e1:	mov    DWORD PTR [rbp-0x60],eax
  4060e4:	mov    eax,DWORD PTR [rbp-0x60]
  4060e7:	test   eax,eax
  4060e9:	js     4060fd <flatcc_verify_error_string@@Base+0x97a>
  4060eb:	mov    eax,DWORD PTR [rbp-0x60]
  4060ee:	and    eax,0x1
  4060f1:	test   rax,rax
  4060f4:	jne    4060fd <flatcc_verify_error_string@@Base+0x97a>
  4060f6:	mov    eax,0x1
  4060fb:	jmp    406102 <flatcc_verify_error_string@@Base+0x97f>
  4060fd:	mov    eax,0x0
  406102:	mov    DWORD PTR [rbp-0x5c],eax
  406105:	cmp    DWORD PTR [rbp-0x5c],0x0
  406109:	jne    406115 <flatcc_verify_error_string@@Base+0x992>
  40610b:	mov    eax,0x1d
  406110:	jmp    406235 <flatcc_verify_error_string@@Base+0xab2>
  406115:	mov    eax,DWORD PTR [rbp-0x60]
  406118:	lea    rdx,[rax+0x2]
  40611c:	mov    eax,DWORD PTR [rbp-0x7c]
  40611f:	cmp    rdx,rax
  406122:	setbe  al
  406125:	movzx  eax,al
  406128:	mov    DWORD PTR [rbp-0x58],eax
  40612b:	cmp    DWORD PTR [rbp-0x58],0x0
  40612f:	jne    40613b <flatcc_verify_error_string@@Base+0x9b8>
  406131:	mov    eax,0x1b
  406136:	jmp    406235 <flatcc_verify_error_string@@Base+0xab2>
  40613b:	mov    edx,DWORD PTR [rbp-0x60]
  40613e:	mov    rax,QWORD PTR [rbp-0x78]
  406142:	mov    esi,edx
  406144:	mov    rdi,rax
  406147:	call   4059f8 <flatcc_verify_error_string@@Base+0x275>
  40614c:	mov    WORD PTR [rbp-0x22],ax
  406150:	movzx  eax,WORD PTR [rbp-0x22]
  406154:	movzx  edx,ax
  406157:	mov    eax,DWORD PTR [rbp-0x60]
  40615a:	add    eax,edx
  40615c:	mov    DWORD PTR [rbp-0x54],eax
  40615f:	mov    eax,DWORD PTR [rbp-0x54]
  406162:	cmp    eax,DWORD PTR [rbp-0x7c]
  406165:	ja     40617d <flatcc_verify_error_string@@Base+0x9fa>
  406167:	movzx  eax,WORD PTR [rbp-0x22]
  40616b:	movzx  eax,ax
  40616e:	and    eax,0x1
  406171:	test   rax,rax
  406174:	jne    40617d <flatcc_verify_error_string@@Base+0x9fa>
  406176:	mov    eax,0x1
  40617b:	jmp    406182 <flatcc_verify_error_string@@Base+0x9ff>
  40617d:	mov    eax,0x0
  406182:	mov    DWORD PTR [rbp-0x50],eax
  406185:	cmp    DWORD PTR [rbp-0x50],0x0
  406189:	jne    406195 <flatcc_verify_error_string@@Base+0xa12>
  40618b:	mov    eax,0x1e
  406190:	jmp    406235 <flatcc_verify_error_string@@Base+0xab2>
  406195:	mov    DWORD PTR [rbp-0x4c],0x1
  40619c:	cmp    DWORD PTR [rbp-0x4c],0x0
  4061a0:	jne    4061ac <flatcc_verify_error_string@@Base+0xa29>
  4061a2:	mov    eax,0x1f
  4061a7:	jmp    406235 <flatcc_verify_error_string@@Base+0xab2>
  4061ac:	movzx  eax,WORD PTR [rbp-0x22]
  4061b0:	cmp    ax,0x3
  4061b4:	seta   al
  4061b7:	movzx  eax,al
  4061ba:	mov    DWORD PTR [rbp-0x48],eax
  4061bd:	cmp    DWORD PTR [rbp-0x48],0x0
  4061c1:	jne    4061ca <flatcc_verify_error_string@@Base+0xa47>
  4061c3:	mov    eax,0x1c
  4061c8:	jmp    406235 <flatcc_verify_error_string@@Base+0xab2>
  4061ca:	mov    eax,DWORD PTR [rbp-0x60]
  4061cd:	lea    edx,[rax+0x2]
  4061d0:	mov    rax,QWORD PTR [rbp-0x78]
  4061d4:	mov    esi,edx
  4061d6:	mov    rdi,rax
  4061d9:	call   4059f8 <flatcc_verify_error_string@@Base+0x275>
  4061de:	mov    WORD PTR [rbp-0x24],ax
  4061e2:	mov    eax,DWORD PTR [rbp-0x28]
  4061e5:	mov    edx,DWORD PTR [rbp-0x7c]
  4061e8:	sub    edx,eax
  4061ea:	movzx  eax,WORD PTR [rbp-0x24]
  4061ee:	movzx  eax,ax
  4061f1:	cmp    edx,eax
  4061f3:	setae  al
  4061f6:	movzx  eax,al
  4061f9:	mov    DWORD PTR [rbp-0x44],eax
  4061fc:	cmp    DWORD PTR [rbp-0x44],0x0
  406200:	jne    406209 <flatcc_verify_error_string@@Base+0xa86>
  406202:	mov    eax,0x14
  406207:	jmp    406235 <flatcc_verify_error_string@@Base+0xab2>
  406209:	mov    edx,DWORD PTR [rbp-0x60]
  40620c:	mov    rax,QWORD PTR [rbp-0x78]
  406210:	add    rax,rdx
  406213:	mov    QWORD PTR [rbp-0x30],rax
  406217:	mov    rax,QWORD PTR [rbp-0x78]
  40621b:	mov    QWORD PTR [rbp-0x40],rax
  40621f:	mov    eax,DWORD PTR [rbp-0x7c]
  406222:	mov    DWORD PTR [rbp-0x38],eax
  406225:	lea    rdx,[rbp-0x40]
  406229:	mov    rax,QWORD PTR [rbp-0x90]
  406230:	mov    rdi,rdx
  406233:	call   rax
  406235:	mov    rcx,QWORD PTR [rbp-0x18]
  406239:	xor    rcx,QWORD PTR fs:0x28
  406242:	je     406249 <flatcc_verify_error_string@@Base+0xac6>
  406244:	call   4021c0 <__stack_chk_fail@plt>
  406249:	add    rsp,0x88
  406250:	pop    rbx
  406251:	pop    rbp
  406252:	ret    
  406253:	push   rbp
  406254:	mov    rbp,rsp
  406257:	sub    rsp,0x30
  40625b:	mov    QWORD PTR [rbp-0x18],rdi
  40625f:	mov    DWORD PTR [rbp-0x1c],esi
  406262:	mov    DWORD PTR [rbp-0x20],edx
  406265:	mov    DWORD PTR [rbp-0x24],ecx
  406268:	mov    DWORD PTR [rbp-0x28],r8d
  40626c:	mov    QWORD PTR [rbp-0x30],r9
  406270:	mov    eax,DWORD PTR [rbp-0x28]
  406273:	lea    edx,[rax-0x1]
  406276:	mov    DWORD PTR [rbp-0x28],edx
  406279:	test   eax,eax
  40627b:	setg   al
  40627e:	movzx  eax,al
  406281:	mov    DWORD PTR [rbp-0x8],eax
  406284:	cmp    DWORD PTR [rbp-0x8],0x0
  406288:	jne    406294 <flatcc_verify_error_string@@Base+0xb11>
  40628a:	mov    eax,0x3
  40628f:	jmp    4063a2 <flatcc_verify_error_string@@Base+0xc1f>
  406294:	mov    ecx,DWORD PTR [rbp-0x24]
  406297:	mov    edx,DWORD PTR [rbp-0x20]
  40629a:	mov    esi,DWORD PTR [rbp-0x1c]
  40629d:	mov    rax,QWORD PTR [rbp-0x18]
  4062a1:	push   0x3fffffff
  4062a6:	mov    r9d,0x4
  4062ac:	mov    r8d,0x4
  4062b2:	mov    rdi,rax
  4062b5:	call   405e8e <flatcc_verify_error_string@@Base+0x70b>
  4062ba:	add    rsp,0x8
  4062be:	test   eax,eax
  4062c0:	je     4062f1 <flatcc_verify_error_string@@Base+0xb6e>
  4062c2:	mov    ecx,DWORD PTR [rbp-0x24]
  4062c5:	mov    edx,DWORD PTR [rbp-0x20]
  4062c8:	mov    esi,DWORD PTR [rbp-0x1c]
  4062cb:	mov    rax,QWORD PTR [rbp-0x18]
  4062cf:	push   0x3fffffff
  4062d4:	mov    r9d,0x4
  4062da:	mov    r8d,0x4
  4062e0:	mov    rdi,rax
  4062e3:	call   405e8e <flatcc_verify_error_string@@Base+0x70b>
  4062e8:	add    rsp,0x8
  4062ec:	jmp    4063a2 <flatcc_verify_error_string@@Base+0xc1f>
  4062f1:	mov    eax,DWORD PTR [rbp-0x24]
  4062f4:	add    DWORD PTR [rbp-0x20],eax
  4062f7:	mov    edx,DWORD PTR [rbp-0x20]
  4062fa:	mov    rax,QWORD PTR [rbp-0x18]
  4062fe:	mov    esi,edx
  406300:	mov    rdi,rax
  406303:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  406308:	mov    DWORD PTR [rbp-0x4],eax
  40630b:	add    DWORD PTR [rbp-0x20],0x4
  40630f:	mov    DWORD PTR [rbp-0xc],0x0
  406316:	jmp    406391 <flatcc_verify_error_string@@Base+0xc0e>
  406318:	mov    edx,DWORD PTR [rbp-0x20]
  40631b:	mov    rax,QWORD PTR [rbp-0x18]
  40631f:	mov    esi,edx
  406321:	mov    rdi,rax
  406324:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  406329:	mov    r10d,eax
  40632c:	mov    rdi,QWORD PTR [rbp-0x30]
  406330:	mov    ecx,DWORD PTR [rbp-0x28]
  406333:	mov    edx,DWORD PTR [rbp-0x20]
  406336:	mov    esi,DWORD PTR [rbp-0x1c]
  406339:	mov    rax,QWORD PTR [rbp-0x18]
  40633d:	mov    r9,rdi
  406340:	mov    r8d,ecx
  406343:	mov    ecx,r10d
  406346:	mov    rdi,rax
  406349:	call   406039 <flatcc_verify_error_string@@Base+0x8b6>
  40634e:	test   eax,eax
  406350:	je     40638a <flatcc_verify_error_string@@Base+0xc07>
  406352:	mov    edx,DWORD PTR [rbp-0x20]
  406355:	mov    rax,QWORD PTR [rbp-0x18]
  406359:	mov    esi,edx
  40635b:	mov    rdi,rax
  40635e:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  406363:	mov    r10d,eax
  406366:	mov    rdi,QWORD PTR [rbp-0x30]
  40636a:	mov    ecx,DWORD PTR [rbp-0x28]
  40636d:	mov    edx,DWORD PTR [rbp-0x20]
  406370:	mov    esi,DWORD PTR [rbp-0x1c]
  406373:	mov    rax,QWORD PTR [rbp-0x18]
  406377:	mov    r9,rdi
  40637a:	mov    r8d,ecx
  40637d:	mov    ecx,r10d
  406380:	mov    rdi,rax
  406383:	call   406039 <flatcc_verify_error_string@@Base+0x8b6>
  406388:	jmp    4063a2 <flatcc_verify_error_string@@Base+0xc1f>
  40638a:	inc    DWORD PTR [rbp-0xc]
  40638d:	add    DWORD PTR [rbp-0x20],0x4
  406391:	mov    eax,DWORD PTR [rbp-0xc]
  406394:	cmp    eax,DWORD PTR [rbp-0x4]
  406397:	jb     406318 <flatcc_verify_error_string@@Base+0xb95>
  40639d:	mov    eax,0x0
  4063a2:	leave  
  4063a3:	ret    
  4063a4:	push   rbp
  4063a5:	mov    rbp,rsp
  4063a8:	add    rsp,0xffffffffffffff80
  4063ac:	mov    QWORD PTR [rbp-0x58],rdi
  4063b0:	mov    DWORD PTR [rbp-0x5c],esi
  4063b3:	mov    DWORD PTR [rbp-0x60],edx
  4063b6:	mov    DWORD PTR [rbp-0x64],ecx
  4063b9:	mov    DWORD PTR [rbp-0x68],r8d
  4063bd:	mov    QWORD PTR [rbp-0x70],r9
  4063c1:	mov    rax,QWORD PTR [rbp+0x18]
  4063c5:	mov    QWORD PTR [rbp-0x78],rax
  4063c9:	mov    rax,QWORD PTR fs:0x28
  4063d2:	mov    QWORD PTR [rbp-0x8],rax
  4063d6:	xor    eax,eax
  4063d8:	mov    eax,DWORD PTR [rbp+0x10]
  4063db:	lea    edx,[rax-0x1]
  4063de:	mov    DWORD PTR [rbp+0x10],edx
  4063e1:	test   eax,eax
  4063e3:	setg   al
  4063e6:	movzx  eax,al
  4063e9:	mov    DWORD PTR [rbp-0x48],eax
  4063ec:	cmp    DWORD PTR [rbp-0x48],0x0
  4063f0:	jne    4063fc <flatcc_verify_error_string@@Base+0xc79>
  4063f2:	mov    eax,0x3
  4063f7:	jmp    40656e <flatcc_verify_error_string@@Base+0xdeb>
  4063fc:	mov    ecx,DWORD PTR [rbp-0x64]
  4063ff:	mov    edx,DWORD PTR [rbp-0x60]
  406402:	mov    esi,DWORD PTR [rbp-0x5c]
  406405:	mov    rax,QWORD PTR [rbp-0x58]
  406409:	push   0x3fffffff
  40640e:	mov    r9d,0x4
  406414:	mov    r8d,0x4
  40641a:	mov    rdi,rax
  40641d:	call   405e8e <flatcc_verify_error_string@@Base+0x70b>
  406422:	add    rsp,0x8
  406426:	test   eax,eax
  406428:	je     406459 <flatcc_verify_error_string@@Base+0xcd6>
  40642a:	mov    ecx,DWORD PTR [rbp-0x64]
  40642d:	mov    edx,DWORD PTR [rbp-0x60]
  406430:	mov    esi,DWORD PTR [rbp-0x5c]
  406433:	mov    rax,QWORD PTR [rbp-0x58]
  406437:	push   0x3fffffff
  40643c:	mov    r9d,0x4
  406442:	mov    r8d,0x4
  406448:	mov    rdi,rax
  40644b:	call   405e8e <flatcc_verify_error_string@@Base+0x70b>
  406450:	add    rsp,0x8
  406454:	jmp    40656e <flatcc_verify_error_string@@Base+0xdeb>
  406459:	mov    eax,DWORD PTR [rbp-0x64]
  40645c:	add    DWORD PTR [rbp-0x60],eax
  40645f:	mov    edx,DWORD PTR [rbp-0x60]
  406462:	mov    rax,QWORD PTR [rbp-0x58]
  406466:	mov    esi,edx
  406468:	mov    rdi,rax
  40646b:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  406470:	mov    DWORD PTR [rbp-0x44],eax
  406473:	mov    eax,DWORD PTR [rbp-0x44]
  406476:	cmp    eax,DWORD PTR [rbp-0x68]
  406479:	sete   al
  40647c:	movzx  eax,al
  40647f:	mov    DWORD PTR [rbp-0x40],eax
  406482:	cmp    DWORD PTR [rbp-0x40],0x0
  406486:	jne    406492 <flatcc_verify_error_string@@Base+0xd0f>
  406488:	mov    eax,0x22
  40648d:	jmp    40656e <flatcc_verify_error_string@@Base+0xdeb>
  406492:	add    DWORD PTR [rbp-0x60],0x4
  406496:	mov    rax,QWORD PTR [rbp-0x58]
  40649a:	mov    QWORD PTR [rbp-0x30],rax
  40649e:	mov    eax,DWORD PTR [rbp-0x5c]
  4064a1:	mov    DWORD PTR [rbp-0x28],eax
  4064a4:	mov    eax,DWORD PTR [rbp+0x10]
  4064a7:	mov    DWORD PTR [rbp-0x24],eax
  4064aa:	mov    DWORD PTR [rbp-0x4c],0x0
  4064b1:	jmp    40655d <flatcc_verify_error_string@@Base+0xdda>
  4064b6:	mov    edx,DWORD PTR [rbp-0x60]
  4064b9:	mov    rax,QWORD PTR [rbp-0x58]
  4064bd:	mov    esi,edx
  4064bf:	mov    rdi,rax
  4064c2:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  4064c7:	mov    DWORD PTR [rbp-0x3c],eax
  4064ca:	cmp    DWORD PTR [rbp-0x3c],0x0
  4064ce:	jne    4064f5 <flatcc_verify_error_string@@Base+0xd72>
  4064d0:	mov    edx,DWORD PTR [rbp-0x4c]
  4064d3:	mov    rax,QWORD PTR [rbp-0x70]
  4064d7:	add    rax,rdx
  4064da:	movzx  eax,BYTE PTR [rax]
  4064dd:	test   al,al
  4064df:	sete   al
  4064e2:	movzx  eax,al
  4064e5:	mov    DWORD PTR [rbp-0x38],eax
  4064e8:	cmp    DWORD PTR [rbp-0x38],0x0
  4064ec:	jne    406556 <flatcc_verify_error_string@@Base+0xdd3>
  4064ee:	mov    eax,0x20
  4064f3:	jmp    40656e <flatcc_verify_error_string@@Base+0xdeb>
  4064f5:	mov    edx,DWORD PTR [rbp-0x4c]
  4064f8:	mov    rax,QWORD PTR [rbp-0x70]
  4064fc:	add    rax,rdx
  4064ff:	movzx  eax,BYTE PTR [rax]
  406502:	test   al,al
  406504:	setne  al
  406507:	movzx  eax,al
  40650a:	mov    DWORD PTR [rbp-0x34],eax
  40650d:	cmp    DWORD PTR [rbp-0x34],0x0
  406511:	jne    40651a <flatcc_verify_error_string@@Base+0xd97>
  406513:	mov    eax,0x21
  406518:	jmp    40656e <flatcc_verify_error_string@@Base+0xdeb>
  40651a:	mov    edx,DWORD PTR [rbp-0x4c]
  40651d:	mov    rax,QWORD PTR [rbp-0x70]
  406521:	add    rax,rdx
  406524:	movzx  eax,BYTE PTR [rax]
  406527:	mov    BYTE PTR [rbp-0x20],al
  40652a:	mov    eax,DWORD PTR [rbp-0x60]
  40652d:	mov    DWORD PTR [rbp-0x1c],eax
  406530:	mov    eax,DWORD PTR [rbp-0x3c]
  406533:	mov    DWORD PTR [rbp-0x18],eax
  406536:	lea    rdx,[rbp-0x30]
  40653a:	mov    rax,QWORD PTR [rbp-0x78]
  40653e:	mov    rdi,rdx
  406541:	call   rax
  406543:	test   eax,eax
  406545:	je     406556 <flatcc_verify_error_string@@Base+0xdd3>
  406547:	lea    rdx,[rbp-0x30]
  40654b:	mov    rax,QWORD PTR [rbp-0x78]
  40654f:	mov    rdi,rdx
  406552:	call   rax
  406554:	jmp    40656e <flatcc_verify_error_string@@Base+0xdeb>
  406556:	inc    DWORD PTR [rbp-0x4c]
  406559:	add    DWORD PTR [rbp-0x60],0x4
  40655d:	mov    eax,DWORD PTR [rbp-0x4c]
  406560:	cmp    eax,DWORD PTR [rbp-0x44]
  406563:	jb     4064b6 <flatcc_verify_error_string@@Base+0xd33>
  406569:	mov    eax,0x0
  40656e:	mov    rcx,QWORD PTR [rbp-0x8]
  406572:	xor    rcx,QWORD PTR fs:0x28
  40657b:	je     406582 <flatcc_verify_error_string@@Base+0xdff>
  40657d:	call   4021c0 <__stack_chk_fail@plt>
  406582:	leave  
  406583:	ret    

0000000000406584 <flatcc_verify_field@@Base>:
  406584:	endbr64 
  406588:	push   rbp
  406589:	mov    rbp,rsp
  40658c:	sub    rsp,0x18
  406590:	mov    QWORD PTR [rbp-0x8],rdi
  406594:	mov    QWORD PTR [rbp-0x18],rdx
  406598:	mov    eax,ecx
  40659a:	mov    edx,esi
  40659c:	mov    WORD PTR [rbp-0xc],dx
  4065a0:	mov    WORD PTR [rbp-0x10],ax
  4065a4:	movzx  edx,WORD PTR [rbp-0x10]
  4065a8:	mov    rax,QWORD PTR [rbp-0x18]
  4065ac:	mov    ecx,eax
  4065ae:	movzx  esi,WORD PTR [rbp-0xc]
  4065b2:	mov    rax,QWORD PTR [rbp-0x8]
  4065b6:	mov    r8d,edx
  4065b9:	mov    edx,0x0
  4065be:	mov    rdi,rax
  4065c1:	call   405c17 <flatcc_verify_error_string@@Base+0x494>
  4065c6:	test   eax,eax
  4065c8:	je     4065ee <flatcc_verify_field@@Base+0x6a>
  4065ca:	movzx  edx,WORD PTR [rbp-0x10]
  4065ce:	mov    rax,QWORD PTR [rbp-0x18]
  4065d2:	mov    ecx,eax
  4065d4:	movzx  esi,WORD PTR [rbp-0xc]
  4065d8:	mov    rax,QWORD PTR [rbp-0x8]
  4065dc:	mov    r8d,edx
  4065df:	mov    edx,0x0
  4065e4:	mov    rdi,rax
  4065e7:	call   405c17 <flatcc_verify_error_string@@Base+0x494>
  4065ec:	jmp    4065f3 <flatcc_verify_field@@Base+0x6f>
  4065ee:	mov    eax,0x0
  4065f3:	leave  
  4065f4:	ret    

00000000004065f5 <flatcc_verify_string_field@@Base>:
  4065f5:	endbr64 
  4065f9:	push   rbp
  4065fa:	mov    rbp,rsp
  4065fd:	sub    rsp,0x20
  406601:	mov    QWORD PTR [rbp-0x18],rdi
  406605:	mov    eax,esi
  406607:	mov    DWORD PTR [rbp-0x20],edx
  40660a:	mov    WORD PTR [rbp-0x1c],ax
  40660e:	mov    rax,QWORD PTR fs:0x28
  406617:	mov    QWORD PTR [rbp-0x8],rax
  40661b:	xor    eax,eax
  40661d:	movzx  esi,WORD PTR [rbp-0x1c]
  406621:	lea    rcx,[rbp-0x10]
  406625:	mov    edx,DWORD PTR [rbp-0x20]
  406628:	mov    rax,QWORD PTR [rbp-0x18]
  40662c:	mov    rdi,rax
  40662f:	call   405d08 <flatcc_verify_error_string@@Base+0x585>
  406634:	mov    DWORD PTR [rbp-0xc],eax
  406637:	cmp    DWORD PTR [rbp-0xc],0x0
  40663b:	jne    406644 <flatcc_verify_string_field@@Base+0x4f>
  40663d:	mov    eax,DWORD PTR [rbp-0x10]
  406640:	test   eax,eax
  406642:	jne    406649 <flatcc_verify_string_field@@Base+0x54>
  406644:	mov    eax,DWORD PTR [rbp-0xc]
  406647:	jmp    406678 <flatcc_verify_string_field@@Base+0x83>
  406649:	mov    edx,DWORD PTR [rbp-0x10]
  40664c:	mov    rax,QWORD PTR [rbp-0x18]
  406650:	mov    rax,QWORD PTR [rax]
  406653:	mov    esi,edx
  406655:	mov    rdi,rax
  406658:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  40665d:	mov    ecx,eax
  40665f:	mov    edx,DWORD PTR [rbp-0x10]
  406662:	mov    rax,QWORD PTR [rbp-0x18]
  406666:	mov    esi,DWORD PTR [rax+0x8]
  406669:	mov    rax,QWORD PTR [rbp-0x18]
  40666d:	mov    rax,QWORD PTR [rax]
  406670:	mov    rdi,rax
  406673:	call   405de4 <flatcc_verify_error_string@@Base+0x661>
  406678:	mov    rdi,QWORD PTR [rbp-0x8]
  40667c:	xor    rdi,QWORD PTR fs:0x28
  406685:	je     40668c <flatcc_verify_string_field@@Base+0x97>
  406687:	call   4021c0 <__stack_chk_fail@plt>
  40668c:	leave  
  40668d:	ret    

000000000040668e <flatcc_verify_vector_field@@Base>:
  40668e:	endbr64 
  406692:	push   rbp
  406693:	mov    rbp,rsp
  406696:	push   r13
  406698:	push   r12
  40669a:	push   rbx
  40669b:	sub    rsp,0x48
  40669f:	mov    QWORD PTR [rbp-0x38],rdi
  4066a3:	mov    eax,esi
  4066a5:	mov    DWORD PTR [rbp-0x40],edx
  4066a8:	mov    QWORD PTR [rbp-0x48],rcx
  4066ac:	mov    edx,r8d
  4066af:	mov    QWORD PTR [rbp-0x58],r9
  4066b3:	mov    WORD PTR [rbp-0x3c],ax
  4066b7:	mov    eax,edx
  4066b9:	mov    WORD PTR [rbp-0x4c],ax
  4066bd:	mov    rax,QWORD PTR fs:0x28
  4066c6:	mov    QWORD PTR [rbp-0x28],rax
  4066ca:	xor    eax,eax
  4066cc:	movzx  esi,WORD PTR [rbp-0x3c]
  4066d0:	lea    rcx,[rbp-0x30]
  4066d4:	mov    edx,DWORD PTR [rbp-0x40]
  4066d7:	mov    rax,QWORD PTR [rbp-0x38]
  4066db:	mov    rdi,rax
  4066de:	call   405d08 <flatcc_verify_error_string@@Base+0x585>
  4066e3:	mov    DWORD PTR [rbp-0x2c],eax
  4066e6:	cmp    DWORD PTR [rbp-0x2c],0x0
  4066ea:	jne    4066f3 <flatcc_verify_vector_field@@Base+0x65>
  4066ec:	mov    eax,DWORD PTR [rbp-0x30]
  4066ef:	test   eax,eax
  4066f1:	jne    4066f8 <flatcc_verify_vector_field@@Base+0x6a>
  4066f3:	mov    eax,DWORD PTR [rbp-0x2c]
  4066f6:	jmp    406745 <flatcc_verify_vector_field@@Base+0xb7>
  4066f8:	mov    rax,QWORD PTR [rbp-0x58]
  4066fc:	mov    r12d,eax
  4066ff:	movzx  ebx,WORD PTR [rbp-0x4c]
  406703:	mov    rax,QWORD PTR [rbp-0x48]
  406707:	mov    r13d,eax
  40670a:	mov    edx,DWORD PTR [rbp-0x30]
  40670d:	mov    rax,QWORD PTR [rbp-0x38]
  406711:	mov    rax,QWORD PTR [rax]
  406714:	mov    esi,edx
  406716:	mov    rdi,rax
  406719:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  40671e:	mov    ecx,eax
  406720:	mov    edx,DWORD PTR [rbp-0x30]
  406723:	mov    rax,QWORD PTR [rbp-0x38]
  406727:	mov    esi,DWORD PTR [rax+0x8]
  40672a:	mov    rax,QWORD PTR [rbp-0x38]
  40672e:	mov    rax,QWORD PTR [rax]
  406731:	push   r12
  406733:	mov    r9d,ebx
  406736:	mov    r8d,r13d
  406739:	mov    rdi,rax
  40673c:	call   405e8e <flatcc_verify_error_string@@Base+0x70b>
  406741:	add    rsp,0x8
  406745:	mov    rbx,QWORD PTR [rbp-0x28]
  406749:	xor    rbx,QWORD PTR fs:0x28
  406752:	je     406759 <flatcc_verify_vector_field@@Base+0xcb>
  406754:	call   4021c0 <__stack_chk_fail@plt>
  406759:	lea    rsp,[rbp-0x18]
  40675d:	pop    rbx
  40675e:	pop    r12
  406760:	pop    r13
  406762:	pop    rbp
  406763:	ret    

0000000000406764 <flatcc_verify_string_vector_field@@Base>:
  406764:	endbr64 
  406768:	push   rbp
  406769:	mov    rbp,rsp
  40676c:	sub    rsp,0x20
  406770:	mov    QWORD PTR [rbp-0x18],rdi
  406774:	mov    eax,esi
  406776:	mov    DWORD PTR [rbp-0x20],edx
  406779:	mov    WORD PTR [rbp-0x1c],ax
  40677d:	mov    rax,QWORD PTR fs:0x28
  406786:	mov    QWORD PTR [rbp-0x8],rax
  40678a:	xor    eax,eax
  40678c:	movzx  esi,WORD PTR [rbp-0x1c]
  406790:	lea    rcx,[rbp-0x10]
  406794:	mov    edx,DWORD PTR [rbp-0x20]
  406797:	mov    rax,QWORD PTR [rbp-0x18]
  40679b:	mov    rdi,rax
  40679e:	call   405d08 <flatcc_verify_error_string@@Base+0x585>
  4067a3:	mov    DWORD PTR [rbp-0xc],eax
  4067a6:	cmp    DWORD PTR [rbp-0xc],0x0
  4067aa:	jne    4067b3 <flatcc_verify_string_vector_field@@Base+0x4f>
  4067ac:	mov    eax,DWORD PTR [rbp-0x10]
  4067af:	test   eax,eax
  4067b1:	jne    4067b8 <flatcc_verify_string_vector_field@@Base+0x54>
  4067b3:	mov    eax,DWORD PTR [rbp-0xc]
  4067b6:	jmp    4067e7 <flatcc_verify_string_vector_field@@Base+0x83>
  4067b8:	mov    edx,DWORD PTR [rbp-0x10]
  4067bb:	mov    rax,QWORD PTR [rbp-0x18]
  4067bf:	mov    rax,QWORD PTR [rax]
  4067c2:	mov    esi,edx
  4067c4:	mov    rdi,rax
  4067c7:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  4067cc:	mov    ecx,eax
  4067ce:	mov    edx,DWORD PTR [rbp-0x10]
  4067d1:	mov    rax,QWORD PTR [rbp-0x18]
  4067d5:	mov    esi,DWORD PTR [rax+0x8]
  4067d8:	mov    rax,QWORD PTR [rbp-0x18]
  4067dc:	mov    rax,QWORD PTR [rax]
  4067df:	mov    rdi,rax
  4067e2:	call   405f3a <flatcc_verify_error_string@@Base+0x7b7>
  4067e7:	mov    rdi,QWORD PTR [rbp-0x8]
  4067eb:	xor    rdi,QWORD PTR fs:0x28
  4067f4:	je     4067fb <flatcc_verify_string_vector_field@@Base+0x97>
  4067f6:	call   4021c0 <__stack_chk_fail@plt>
  4067fb:	leave  
  4067fc:	ret    

00000000004067fd <flatcc_verify_table_field@@Base>:
  4067fd:	endbr64 
  406801:	push   rbp
  406802:	mov    rbp,rsp
  406805:	push   rbx
  406806:	sub    rsp,0x38
  40680a:	mov    QWORD PTR [rbp-0x28],rdi
  40680e:	mov    eax,esi
  406810:	mov    DWORD PTR [rbp-0x30],edx
  406813:	mov    QWORD PTR [rbp-0x38],rcx
  406817:	mov    WORD PTR [rbp-0x2c],ax
  40681b:	mov    rax,QWORD PTR fs:0x28
  406824:	mov    QWORD PTR [rbp-0x18],rax
  406828:	xor    eax,eax
  40682a:	movzx  esi,WORD PTR [rbp-0x2c]
  40682e:	lea    rcx,[rbp-0x20]
  406832:	mov    edx,DWORD PTR [rbp-0x30]
  406835:	mov    rax,QWORD PTR [rbp-0x28]
  406839:	mov    rdi,rax
  40683c:	call   405d08 <flatcc_verify_error_string@@Base+0x585>
  406841:	mov    DWORD PTR [rbp-0x1c],eax
  406844:	cmp    DWORD PTR [rbp-0x1c],0x0
  406848:	jne    406851 <flatcc_verify_table_field@@Base+0x54>
  40684a:	mov    eax,DWORD PTR [rbp-0x20]
  40684d:	test   eax,eax
  40684f:	jne    406856 <flatcc_verify_table_field@@Base+0x59>
  406851:	mov    eax,DWORD PTR [rbp-0x1c]
  406854:	jmp    406898 <flatcc_verify_table_field@@Base+0x9b>
  406856:	mov    rax,QWORD PTR [rbp-0x28]
  40685a:	mov    ebx,DWORD PTR [rax+0xc]
  40685d:	mov    edx,DWORD PTR [rbp-0x20]
  406860:	mov    rax,QWORD PTR [rbp-0x28]
  406864:	mov    rax,QWORD PTR [rax]
  406867:	mov    esi,edx
  406869:	mov    rdi,rax
  40686c:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  406871:	mov    edi,eax
  406873:	mov    edx,DWORD PTR [rbp-0x20]
  406876:	mov    rax,QWORD PTR [rbp-0x28]
  40687a:	mov    esi,DWORD PTR [rax+0x8]
  40687d:	mov    rax,QWORD PTR [rbp-0x28]
  406881:	mov    rax,QWORD PTR [rax]
  406884:	mov    rcx,QWORD PTR [rbp-0x38]
  406888:	mov    r9,rcx
  40688b:	mov    r8d,ebx
  40688e:	mov    ecx,edi
  406890:	mov    rdi,rax
  406893:	call   406039 <flatcc_verify_error_string@@Base+0x8b6>
  406898:	mov    rbx,QWORD PTR [rbp-0x18]
  40689c:	xor    rbx,QWORD PTR fs:0x28
  4068a5:	je     4068ac <flatcc_verify_table_field@@Base+0xaf>
  4068a7:	call   4021c0 <__stack_chk_fail@plt>
  4068ac:	add    rsp,0x38
  4068b0:	pop    rbx
  4068b1:	pop    rbp
  4068b2:	ret    

00000000004068b3 <flatcc_verify_table_vector_field@@Base>:
  4068b3:	endbr64 
  4068b7:	push   rbp
  4068b8:	mov    rbp,rsp
  4068bb:	push   rbx
  4068bc:	sub    rsp,0x38
  4068c0:	mov    QWORD PTR [rbp-0x28],rdi
  4068c4:	mov    eax,esi
  4068c6:	mov    DWORD PTR [rbp-0x30],edx
  4068c9:	mov    QWORD PTR [rbp-0x38],rcx
  4068cd:	mov    WORD PTR [rbp-0x2c],ax
  4068d1:	mov    rax,QWORD PTR fs:0x28
  4068da:	mov    QWORD PTR [rbp-0x18],rax
  4068de:	xor    eax,eax
  4068e0:	movzx  esi,WORD PTR [rbp-0x2c]
  4068e4:	lea    rcx,[rbp-0x20]
  4068e8:	mov    edx,DWORD PTR [rbp-0x30]
  4068eb:	mov    rax,QWORD PTR [rbp-0x28]
  4068ef:	mov    rdi,rax
  4068f2:	call   405d08 <flatcc_verify_error_string@@Base+0x585>
  4068f7:	mov    DWORD PTR [rbp-0x1c],eax
  4068fa:	cmp    DWORD PTR [rbp-0x1c],0x0
  4068fe:	jne    406907 <flatcc_verify_table_vector_field@@Base+0x54>
  406900:	mov    eax,DWORD PTR [rbp-0x20]
  406903:	test   eax,eax
  406905:	jne    40690c <flatcc_verify_table_vector_field@@Base+0x59>
  406907:	mov    eax,DWORD PTR [rbp-0x1c]
  40690a:	jmp    40694e <flatcc_verify_table_vector_field@@Base+0x9b>
  40690c:	mov    rax,QWORD PTR [rbp-0x28]
  406910:	mov    ebx,DWORD PTR [rax+0xc]
  406913:	mov    edx,DWORD PTR [rbp-0x20]
  406916:	mov    rax,QWORD PTR [rbp-0x28]
  40691a:	mov    rax,QWORD PTR [rax]
  40691d:	mov    esi,edx
  40691f:	mov    rdi,rax
  406922:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  406927:	mov    edi,eax
  406929:	mov    edx,DWORD PTR [rbp-0x20]
  40692c:	mov    rax,QWORD PTR [rbp-0x28]
  406930:	mov    esi,DWORD PTR [rax+0x8]
  406933:	mov    rax,QWORD PTR [rbp-0x28]
  406937:	mov    rax,QWORD PTR [rax]
  40693a:	mov    rcx,QWORD PTR [rbp-0x38]
  40693e:	mov    r9,rcx
  406941:	mov    r8d,ebx
  406944:	mov    ecx,edi
  406946:	mov    rdi,rax
  406949:	call   406253 <flatcc_verify_error_string@@Base+0xad0>
  40694e:	mov    rbx,QWORD PTR [rbp-0x18]
  406952:	xor    rbx,QWORD PTR fs:0x28
  40695b:	je     406962 <flatcc_verify_table_vector_field@@Base+0xaf>
  40695d:	call   4021c0 <__stack_chk_fail@plt>
  406962:	add    rsp,0x38
  406966:	pop    rbx
  406967:	pop    rbp
  406968:	ret    

0000000000406969 <flatcc_verify_union_table@@Base>:
  406969:	endbr64 
  40696d:	push   rbp
  40696e:	mov    rbp,rsp
  406971:	sub    rsp,0x10
  406975:	mov    QWORD PTR [rbp-0x8],rdi
  406979:	mov    QWORD PTR [rbp-0x10],rsi
  40697d:	mov    rax,QWORD PTR [rbp-0x8]
  406981:	mov    edi,DWORD PTR [rax+0xc]
  406984:	mov    rax,QWORD PTR [rbp-0x8]
  406988:	mov    ecx,DWORD PTR [rax+0x18]
  40698b:	mov    rax,QWORD PTR [rbp-0x8]
  40698f:	mov    edx,DWORD PTR [rax+0x14]
  406992:	mov    rax,QWORD PTR [rbp-0x8]
  406996:	mov    esi,DWORD PTR [rax+0x8]
  406999:	mov    rax,QWORD PTR [rbp-0x8]
  40699d:	mov    rax,QWORD PTR [rax]
  4069a0:	mov    r8,QWORD PTR [rbp-0x10]
  4069a4:	mov    r9,r8
  4069a7:	mov    r8d,edi
  4069aa:	mov    rdi,rax
  4069ad:	call   406039 <flatcc_verify_error_string@@Base+0x8b6>
  4069b2:	leave  
  4069b3:	ret    

00000000004069b4 <flatcc_verify_union_struct@@Base>:
  4069b4:	endbr64 
  4069b8:	push   rbp
  4069b9:	mov    rbp,rsp
  4069bc:	sub    rsp,0x18
  4069c0:	mov    QWORD PTR [rbp-0x8],rdi
  4069c4:	mov    QWORD PTR [rbp-0x10],rsi
  4069c8:	mov    eax,edx
  4069ca:	mov    WORD PTR [rbp-0x14],ax
  4069ce:	movzx  ecx,WORD PTR [rbp-0x14]
  4069d2:	mov    rax,QWORD PTR [rbp-0x10]
  4069d6:	mov    edi,eax
  4069d8:	mov    rax,QWORD PTR [rbp-0x8]
  4069dc:	mov    edx,DWORD PTR [rax+0x18]
  4069df:	mov    rax,QWORD PTR [rbp-0x8]
  4069e3:	mov    esi,DWORD PTR [rax+0x14]
  4069e6:	mov    rax,QWORD PTR [rbp-0x8]
  4069ea:	mov    eax,DWORD PTR [rax+0x8]
  4069ed:	mov    r8d,ecx
  4069f0:	mov    ecx,edi
  4069f2:	mov    edi,eax
  4069f4:	call   405ad3 <flatcc_verify_error_string@@Base+0x350>
  4069f9:	leave  
  4069fa:	ret    

00000000004069fb <flatcc_verify_union_string@@Base>:
  4069fb:	endbr64 
  4069ff:	push   rbp
  406a00:	mov    rbp,rsp
  406a03:	sub    rsp,0x8
  406a07:	mov    QWORD PTR [rbp-0x8],rdi
  406a0b:	mov    rax,QWORD PTR [rbp-0x8]
  406a0f:	mov    ecx,DWORD PTR [rax+0x18]
  406a12:	mov    rax,QWORD PTR [rbp-0x8]
  406a16:	mov    edx,DWORD PTR [rax+0x14]
  406a19:	mov    rax,QWORD PTR [rbp-0x8]
  406a1d:	mov    esi,DWORD PTR [rax+0x8]
  406a20:	mov    rax,QWORD PTR [rbp-0x8]
  406a24:	mov    rax,QWORD PTR [rax]
  406a27:	mov    rdi,rax
  406a2a:	call   405de4 <flatcc_verify_error_string@@Base+0x661>
  406a2f:	leave  
  406a30:	ret    

0000000000406a31 <flatcc_verify_buffer_header@@Base>:
  406a31:	endbr64 
  406a35:	push   rbp
  406a36:	mov    rbp,rsp
  406a39:	sub    rsp,0x40
  406a3d:	mov    QWORD PTR [rbp-0x28],rdi
  406a41:	mov    QWORD PTR [rbp-0x30],rsi
  406a45:	mov    QWORD PTR [rbp-0x38],rdx
  406a49:	mov    rax,QWORD PTR [rbp-0x28]
  406a4d:	and    eax,0x3
  406a50:	test   rax,rax
  406a53:	sete   al
  406a56:	movzx  eax,al
  406a59:	mov    DWORD PTR [rbp-0x18],eax
  406a5c:	cmp    DWORD PTR [rbp-0x18],0x0
  406a60:	jne    406a6c <flatcc_verify_buffer_header@@Base+0x3b>
  406a62:	mov    eax,0x5
  406a67:	jmp    406aff <flatcc_verify_buffer_header@@Base+0xce>
  406a6c:	mov    eax,0xfffffff7
  406a71:	cmp    QWORD PTR [rbp-0x30],rax
  406a75:	setbe  al
  406a78:	movzx  eax,al
  406a7b:	mov    DWORD PTR [rbp-0x14],eax
  406a7e:	cmp    DWORD PTR [rbp-0x14],0x0
  406a82:	jne    406a8b <flatcc_verify_buffer_header@@Base+0x5a>
  406a84:	mov    eax,0x6
  406a89:	jmp    406aff <flatcc_verify_buffer_header@@Base+0xce>
  406a8b:	cmp    QWORD PTR [rbp-0x30],0x7
  406a90:	seta   al
  406a93:	movzx  eax,al
  406a96:	mov    DWORD PTR [rbp-0x10],eax
  406a99:	cmp    DWORD PTR [rbp-0x10],0x0
  406a9d:	jne    406aa6 <flatcc_verify_buffer_header@@Base+0x75>
  406a9f:	mov    eax,0x1
  406aa4:	jmp    406aff <flatcc_verify_buffer_header@@Base+0xce>
  406aa6:	cmp    QWORD PTR [rbp-0x38],0x0
  406aab:	je     406afa <flatcc_verify_buffer_header@@Base+0xc9>
  406aad:	mov    rax,QWORD PTR [rbp-0x38]
  406ab1:	mov    rdi,rax
  406ab4:	call   40597b <flatcc_verify_error_string@@Base+0x1f8>
  406ab9:	mov    DWORD PTR [rbp-0xc],eax
  406abc:	mov    rax,QWORD PTR [rbp-0x28]
  406ac0:	mov    esi,0x4
  406ac5:	mov    rdi,rax
  406ac8:	call   4059d5 <flatcc_verify_error_string@@Base+0x252>
  406acd:	mov    DWORD PTR [rbp-0x8],eax
  406ad0:	cmp    DWORD PTR [rbp-0xc],0x0
  406ad4:	je     406ade <flatcc_verify_buffer_header@@Base+0xad>
  406ad6:	mov    eax,DWORD PTR [rbp-0x8]
  406ad9:	cmp    eax,DWORD PTR [rbp-0xc]
  406adc:	jne    406ae5 <flatcc_verify_buffer_header@@Base+0xb4>
  406ade:	mov    eax,0x1
  406ae3:	jmp    406aea <flatcc_verify_buffer_header@@Base+0xb9>
  406ae5:	mov    eax,0x0
  406aea:	mov    DWORD PTR [rbp-0x4],eax
  406aed:	cmp    DWORD PTR [rbp-0x4],0x0
  406af1:	jne    406afa <flatcc_verify_buffer_header@@Base+0xc9>
  406af3:	mov    eax,0x2
  406af8:	jmp    406aff <flatcc_verify_buffer_header@@Base+0xce>
  406afa:	mov    eax,0x0
  406aff:	leave  
  406b00:	ret    

0000000000406b01 <flatcc_verify_typed_buffer_header@@Base>:
  406b01:	endbr64 
  406b05:	push   rbp
  406b06:	mov    rbp,rsp
  406b09:	sub    rsp,0x38
  406b0d:	mov    QWORD PTR [rbp-0x28],rdi
  406b11:	mov    QWORD PTR [rbp-0x30],rsi
  406b15:	mov    DWORD PTR [rbp-0x34],edx
  406b18:	mov    rax,QWORD PTR [rbp-0x28]
  406b1c:	and    eax,0x3
  406b1f:	test   rax,rax
  406b22:	sete   al
  406b25:	movzx  eax,al
  406b28:	mov    DWORD PTR [rbp-0x18],eax
  406b2b:	cmp    DWORD PTR [rbp-0x18],0x0
  406b2f:	jne    406b3b <flatcc_verify_typed_buffer_header@@Base+0x3a>
  406b31:	mov    eax,0x5
  406b36:	jmp    406bc4 <flatcc_verify_typed_buffer_header@@Base+0xc3>
  406b3b:	mov    eax,0xfffffff7
  406b40:	cmp    QWORD PTR [rbp-0x30],rax
  406b44:	setbe  al
  406b47:	movzx  eax,al
  406b4a:	mov    DWORD PTR [rbp-0x14],eax
  406b4d:	cmp    DWORD PTR [rbp-0x14],0x0
  406b51:	jne    406b5a <flatcc_verify_typed_buffer_header@@Base+0x59>
  406b53:	mov    eax,0x6
  406b58:	jmp    406bc4 <flatcc_verify_typed_buffer_header@@Base+0xc3>
  406b5a:	cmp    QWORD PTR [rbp-0x30],0x7
  406b5f:	seta   al
  406b62:	movzx  eax,al
  406b65:	mov    DWORD PTR [rbp-0x10],eax
  406b68:	cmp    DWORD PTR [rbp-0x10],0x0
  406b6c:	jne    406b75 <flatcc_verify_typed_buffer_header@@Base+0x74>
  406b6e:	mov    eax,0x1
  406b73:	jmp    406bc4 <flatcc_verify_typed_buffer_header@@Base+0xc3>
  406b75:	cmp    DWORD PTR [rbp-0x34],0x0
  406b79:	je     406bbf <flatcc_verify_typed_buffer_header@@Base+0xbe>
  406b7b:	mov    eax,DWORD PTR [rbp-0x34]
  406b7e:	mov    DWORD PTR [rbp-0xc],eax
  406b81:	mov    rax,QWORD PTR [rbp-0x28]
  406b85:	mov    esi,0x4
  406b8a:	mov    rdi,rax
  406b8d:	call   4059d5 <flatcc_verify_error_string@@Base+0x252>
  406b92:	mov    DWORD PTR [rbp-0x8],eax
  406b95:	cmp    DWORD PTR [rbp-0xc],0x0
  406b99:	je     406ba3 <flatcc_verify_typed_buffer_header@@Base+0xa2>
  406b9b:	mov    eax,DWORD PTR [rbp-0x8]
  406b9e:	cmp    eax,DWORD PTR [rbp-0xc]
  406ba1:	jne    406baa <flatcc_verify_typed_buffer_header@@Base+0xa9>
  406ba3:	mov    eax,0x1
  406ba8:	jmp    406baf <flatcc_verify_typed_buffer_header@@Base+0xae>
  406baa:	mov    eax,0x0
  406baf:	mov    DWORD PTR [rbp-0x4],eax
  406bb2:	cmp    DWORD PTR [rbp-0x4],0x0
  406bb6:	jne    406bbf <flatcc_verify_typed_buffer_header@@Base+0xbe>
  406bb8:	mov    eax,0x2
  406bbd:	jmp    406bc4 <flatcc_verify_typed_buffer_header@@Base+0xc3>
  406bbf:	mov    eax,0x0
  406bc4:	leave  
  406bc5:	ret    

0000000000406bc6 <flatcc_verify_struct_as_root@@Base>:
  406bc6:	endbr64 
  406bca:	push   rbp
  406bcb:	mov    rbp,rsp
  406bce:	push   r12
  406bd0:	push   rbx
  406bd1:	sub    rsp,0x30
  406bd5:	mov    QWORD PTR [rbp-0x18],rdi
  406bd9:	mov    QWORD PTR [rbp-0x20],rsi
  406bdd:	mov    QWORD PTR [rbp-0x28],rdx
  406be1:	mov    QWORD PTR [rbp-0x30],rcx
  406be5:	mov    eax,r8d
  406be8:	mov    WORD PTR [rbp-0x34],ax
  406bec:	mov    rdx,QWORD PTR [rbp-0x28]
  406bf0:	mov    rcx,QWORD PTR [rbp-0x20]
  406bf4:	mov    rax,QWORD PTR [rbp-0x18]
  406bf8:	mov    rsi,rcx
  406bfb:	mov    rdi,rax
  406bfe:	call   406a31 <flatcc_verify_buffer_header@@Base>
  406c03:	test   eax,eax
  406c05:	je     406c20 <flatcc_verify_struct_as_root@@Base+0x5a>
  406c07:	mov    rdx,QWORD PTR [rbp-0x28]
  406c0b:	mov    rcx,QWORD PTR [rbp-0x20]
  406c0f:	mov    rax,QWORD PTR [rbp-0x18]
  406c13:	mov    rsi,rcx
  406c16:	mov    rdi,rax
  406c19:	call   406a31 <flatcc_verify_buffer_header@@Base>
  406c1e:	jmp    406c54 <flatcc_verify_struct_as_root@@Base+0x8e>
  406c20:	movzx  ebx,WORD PTR [rbp-0x34]
  406c24:	mov    rax,QWORD PTR [rbp-0x30]
  406c28:	mov    r12d,eax
  406c2b:	mov    rax,QWORD PTR [rbp-0x18]
  406c2f:	mov    esi,0x0
  406c34:	mov    rdi,rax
  406c37:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  406c3c:	mov    edx,eax
  406c3e:	mov    rax,QWORD PTR [rbp-0x20]
  406c42:	mov    r8d,ebx
  406c45:	mov    ecx,r12d
  406c48:	mov    esi,0x0
  406c4d:	mov    edi,eax
  406c4f:	call   405ad3 <flatcc_verify_error_string@@Base+0x350>
  406c54:	add    rsp,0x30
  406c58:	pop    rbx
  406c59:	pop    r12
  406c5b:	pop    rbp
  406c5c:	ret    

0000000000406c5d <flatcc_verify_struct_as_typed_root@@Base>:
  406c5d:	endbr64 
  406c61:	push   rbp
  406c62:	mov    rbp,rsp
  406c65:	push   r12
  406c67:	push   rbx
  406c68:	sub    rsp,0x20
  406c6c:	mov    QWORD PTR [rbp-0x18],rdi
  406c70:	mov    QWORD PTR [rbp-0x20],rsi
  406c74:	mov    DWORD PTR [rbp-0x24],edx
  406c77:	mov    QWORD PTR [rbp-0x30],rcx
  406c7b:	mov    eax,r8d
  406c7e:	mov    WORD PTR [rbp-0x28],ax
  406c82:	mov    edx,DWORD PTR [rbp-0x24]
  406c85:	mov    rcx,QWORD PTR [rbp-0x20]
  406c89:	mov    rax,QWORD PTR [rbp-0x18]
  406c8d:	mov    rsi,rcx
  406c90:	mov    rdi,rax
  406c93:	call   406b01 <flatcc_verify_typed_buffer_header@@Base>
  406c98:	test   eax,eax
  406c9a:	je     406cb4 <flatcc_verify_struct_as_typed_root@@Base+0x57>
  406c9c:	mov    edx,DWORD PTR [rbp-0x24]
  406c9f:	mov    rcx,QWORD PTR [rbp-0x20]
  406ca3:	mov    rax,QWORD PTR [rbp-0x18]
  406ca7:	mov    rsi,rcx
  406caa:	mov    rdi,rax
  406cad:	call   406b01 <flatcc_verify_typed_buffer_header@@Base>
  406cb2:	jmp    406ce8 <flatcc_verify_struct_as_typed_root@@Base+0x8b>
  406cb4:	movzx  ebx,WORD PTR [rbp-0x28]
  406cb8:	mov    rax,QWORD PTR [rbp-0x30]
  406cbc:	mov    r12d,eax
  406cbf:	mov    rax,QWORD PTR [rbp-0x18]
  406cc3:	mov    esi,0x0
  406cc8:	mov    rdi,rax
  406ccb:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  406cd0:	mov    edx,eax
  406cd2:	mov    rax,QWORD PTR [rbp-0x20]
  406cd6:	mov    r8d,ebx
  406cd9:	mov    ecx,r12d
  406cdc:	mov    esi,0x0
  406ce1:	mov    edi,eax
  406ce3:	call   405ad3 <flatcc_verify_error_string@@Base+0x350>
  406ce8:	add    rsp,0x20
  406cec:	pop    rbx
  406ced:	pop    r12
  406cef:	pop    rbp
  406cf0:	ret    

0000000000406cf1 <flatcc_verify_table_as_root@@Base>:
  406cf1:	endbr64 
  406cf5:	push   rbp
  406cf6:	mov    rbp,rsp
  406cf9:	sub    rsp,0x20
  406cfd:	mov    QWORD PTR [rbp-0x8],rdi
  406d01:	mov    QWORD PTR [rbp-0x10],rsi
  406d05:	mov    QWORD PTR [rbp-0x18],rdx
  406d09:	mov    QWORD PTR [rbp-0x20],rcx
  406d0d:	mov    rax,QWORD PTR [rbp-0x10]
  406d11:	mov    ecx,eax
  406d13:	mov    rdx,QWORD PTR [rbp-0x18]
  406d17:	mov    rax,QWORD PTR [rbp-0x8]
  406d1b:	mov    rsi,rcx
  406d1e:	mov    rdi,rax
  406d21:	call   406a31 <flatcc_verify_buffer_header@@Base>
  406d26:	test   eax,eax
  406d28:	je     406d45 <flatcc_verify_table_as_root@@Base+0x54>
  406d2a:	mov    rax,QWORD PTR [rbp-0x10]
  406d2e:	mov    ecx,eax
  406d30:	mov    rdx,QWORD PTR [rbp-0x18]
  406d34:	mov    rax,QWORD PTR [rbp-0x8]
  406d38:	mov    rsi,rcx
  406d3b:	mov    rdi,rax
  406d3e:	call   406a31 <flatcc_verify_buffer_header@@Base>
  406d43:	jmp    406d7c <flatcc_verify_table_as_root@@Base+0x8b>
  406d45:	mov    rax,QWORD PTR [rbp-0x8]
  406d49:	mov    esi,0x0
  406d4e:	mov    rdi,rax
  406d51:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  406d56:	mov    ecx,eax
  406d58:	mov    rax,QWORD PTR [rbp-0x10]
  406d5c:	mov    esi,eax
  406d5e:	mov    rdx,QWORD PTR [rbp-0x20]
  406d62:	mov    rax,QWORD PTR [rbp-0x8]
  406d66:	mov    r9,rdx
  406d69:	mov    r8d,0x64
  406d6f:	mov    edx,0x0
  406d74:	mov    rdi,rax
  406d77:	call   406039 <flatcc_verify_error_string@@Base+0x8b6>
  406d7c:	leave  
  406d7d:	ret    

0000000000406d7e <flatcc_verify_table_as_typed_root@@Base>:
  406d7e:	endbr64 
  406d82:	push   rbp
  406d83:	mov    rbp,rsp
  406d86:	sub    rsp,0x20
  406d8a:	mov    QWORD PTR [rbp-0x8],rdi
  406d8e:	mov    QWORD PTR [rbp-0x10],rsi
  406d92:	mov    DWORD PTR [rbp-0x14],edx
  406d95:	mov    QWORD PTR [rbp-0x20],rcx
  406d99:	mov    rax,QWORD PTR [rbp-0x10]
  406d9d:	mov    ecx,eax
  406d9f:	mov    edx,DWORD PTR [rbp-0x14]
  406da2:	mov    rax,QWORD PTR [rbp-0x8]
  406da6:	mov    rsi,rcx
  406da9:	mov    rdi,rax
  406dac:	call   406b01 <flatcc_verify_typed_buffer_header@@Base>
  406db1:	test   eax,eax
  406db3:	je     406dcf <flatcc_verify_table_as_typed_root@@Base+0x51>
  406db5:	mov    rax,QWORD PTR [rbp-0x10]
  406db9:	mov    ecx,eax
  406dbb:	mov    edx,DWORD PTR [rbp-0x14]
  406dbe:	mov    rax,QWORD PTR [rbp-0x8]
  406dc2:	mov    rsi,rcx
  406dc5:	mov    rdi,rax
  406dc8:	call   406b01 <flatcc_verify_typed_buffer_header@@Base>
  406dcd:	jmp    406e06 <flatcc_verify_table_as_typed_root@@Base+0x88>
  406dcf:	mov    rax,QWORD PTR [rbp-0x8]
  406dd3:	mov    esi,0x0
  406dd8:	mov    rdi,rax
  406ddb:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  406de0:	mov    ecx,eax
  406de2:	mov    rax,QWORD PTR [rbp-0x10]
  406de6:	mov    esi,eax
  406de8:	mov    rdx,QWORD PTR [rbp-0x20]
  406dec:	mov    rax,QWORD PTR [rbp-0x8]
  406df0:	mov    r9,rdx
  406df3:	mov    r8d,0x64
  406df9:	mov    edx,0x0
  406dfe:	mov    rdi,rax
  406e01:	call   406039 <flatcc_verify_error_string@@Base+0x8b6>
  406e06:	leave  
  406e07:	ret    

0000000000406e08 <flatcc_verify_struct_as_nested_root@@Base>:
  406e08:	endbr64 
  406e0c:	push   rbp
  406e0d:	mov    rbp,rsp
  406e10:	sub    rsp,0x40
  406e14:	mov    QWORD PTR [rbp-0x18],rdi
  406e18:	mov    eax,esi
  406e1a:	mov    DWORD PTR [rbp-0x20],edx
  406e1d:	mov    QWORD PTR [rbp-0x28],rcx
  406e21:	mov    QWORD PTR [rbp-0x30],r8
  406e25:	mov    edx,r9d
  406e28:	mov    WORD PTR [rbp-0x1c],ax
  406e2c:	mov    eax,edx
  406e2e:	mov    WORD PTR [rbp-0x34],ax
  406e32:	movzx  ecx,WORD PTR [rbp-0x34]
  406e36:	movzx  esi,WORD PTR [rbp-0x1c]
  406e3a:	mov    edx,DWORD PTR [rbp-0x20]
  406e3d:	mov    rax,QWORD PTR [rbp-0x18]
  406e41:	mov    r9d,0xffffffff
  406e47:	mov    r8d,0x1
  406e4d:	mov    rdi,rax
  406e50:	call   40668e <flatcc_verify_vector_field@@Base>
  406e55:	test   eax,eax
  406e57:	je     406e7e <flatcc_verify_struct_as_nested_root@@Base+0x76>
  406e59:	movzx  ecx,WORD PTR [rbp-0x34]
  406e5d:	movzx  esi,WORD PTR [rbp-0x1c]
  406e61:	mov    edx,DWORD PTR [rbp-0x20]
  406e64:	mov    rax,QWORD PTR [rbp-0x18]
  406e68:	mov    r9d,0xffffffff
  406e6e:	mov    r8d,0x1
  406e74:	mov    rdi,rax
  406e77:	call   40668e <flatcc_verify_vector_field@@Base>
  406e7c:	jmp    406ef7 <flatcc_verify_struct_as_nested_root@@Base+0xef>
  406e7e:	movzx  edx,WORD PTR [rbp-0x1c]
  406e82:	mov    rax,QWORD PTR [rbp-0x18]
  406e86:	mov    esi,edx
  406e88:	mov    rdi,rax
  406e8b:	call   405bc5 <flatcc_verify_error_string@@Base+0x442>
  406e90:	mov    QWORD PTR [rbp-0x8],rax
  406e94:	cmp    QWORD PTR [rbp-0x8],0x0
  406e99:	jne    406ea2 <flatcc_verify_struct_as_nested_root@@Base+0x9a>
  406e9b:	mov    eax,0x0
  406ea0:	jmp    406ef7 <flatcc_verify_struct_as_nested_root@@Base+0xef>
  406ea2:	mov    rax,QWORD PTR [rbp-0x8]
  406ea6:	mov    esi,0x0
  406eab:	mov    rdi,rax
  406eae:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  406eb3:	mov    edx,eax
  406eb5:	mov    rax,QWORD PTR [rbp-0x8]
  406eb9:	add    rax,rdx
  406ebc:	mov    QWORD PTR [rbp-0x8],rax
  406ec0:	mov    rax,QWORD PTR [rbp-0x8]
  406ec4:	mov    esi,0x0
  406ec9:	mov    rdi,rax
  406ecc:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  406ed1:	mov    DWORD PTR [rbp-0xc],eax
  406ed4:	add    QWORD PTR [rbp-0x8],0x4
  406ed9:	movzx  edi,WORD PTR [rbp-0x34]
  406edd:	mov    esi,DWORD PTR [rbp-0xc]
  406ee0:	mov    rcx,QWORD PTR [rbp-0x30]
  406ee4:	mov    rdx,QWORD PTR [rbp-0x28]
  406ee8:	mov    rax,QWORD PTR [rbp-0x8]
  406eec:	mov    r8d,edi
  406eef:	mov    rdi,rax
  406ef2:	call   406bc6 <flatcc_verify_struct_as_root@@Base>
  406ef7:	leave  
  406ef8:	ret    

0000000000406ef9 <flatcc_verify_table_as_nested_root@@Base>:
  406ef9:	endbr64 
  406efd:	push   rbp
  406efe:	mov    rbp,rsp
  406f01:	push   rbx
  406f02:	sub    rsp,0x48
  406f06:	mov    QWORD PTR [rbp-0x28],rdi
  406f0a:	mov    eax,esi
  406f0c:	mov    DWORD PTR [rbp-0x30],edx
  406f0f:	mov    QWORD PTR [rbp-0x38],rcx
  406f13:	mov    edx,r8d
  406f16:	mov    QWORD PTR [rbp-0x48],r9
  406f1a:	mov    WORD PTR [rbp-0x2c],ax
  406f1e:	mov    eax,edx
  406f20:	mov    WORD PTR [rbp-0x3c],ax
  406f24:	movzx  ecx,WORD PTR [rbp-0x3c]
  406f28:	movzx  esi,WORD PTR [rbp-0x2c]
  406f2c:	mov    edx,DWORD PTR [rbp-0x30]
  406f2f:	mov    rax,QWORD PTR [rbp-0x28]
  406f33:	mov    r9d,0xffffffff
  406f39:	mov    r8d,0x1
  406f3f:	mov    rdi,rax
  406f42:	call   40668e <flatcc_verify_vector_field@@Base>
  406f47:	test   eax,eax
  406f49:	je     406f73 <flatcc_verify_table_as_nested_root@@Base+0x7a>
  406f4b:	movzx  ecx,WORD PTR [rbp-0x3c]
  406f4f:	movzx  esi,WORD PTR [rbp-0x2c]
  406f53:	mov    edx,DWORD PTR [rbp-0x30]
  406f56:	mov    rax,QWORD PTR [rbp-0x28]
  406f5a:	mov    r9d,0xffffffff
  406f60:	mov    r8d,0x1
  406f66:	mov    rdi,rax
  406f69:	call   40668e <flatcc_verify_vector_field@@Base>
  406f6e:	jmp    40703b <flatcc_verify_table_as_nested_root@@Base+0x142>
  406f73:	movzx  edx,WORD PTR [rbp-0x2c]
  406f77:	mov    rax,QWORD PTR [rbp-0x28]
  406f7b:	mov    esi,edx
  406f7d:	mov    rdi,rax
  406f80:	call   405bc5 <flatcc_verify_error_string@@Base+0x442>
  406f85:	mov    QWORD PTR [rbp-0x18],rax
  406f89:	cmp    QWORD PTR [rbp-0x18],0x0
  406f8e:	jne    406f9a <flatcc_verify_table_as_nested_root@@Base+0xa1>
  406f90:	mov    eax,0x0
  406f95:	jmp    40703b <flatcc_verify_table_as_nested_root@@Base+0x142>
  406f9a:	mov    rax,QWORD PTR [rbp-0x18]
  406f9e:	mov    esi,0x0
  406fa3:	mov    rdi,rax
  406fa6:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  406fab:	mov    edx,eax
  406fad:	mov    rax,QWORD PTR [rbp-0x18]
  406fb1:	add    rax,rdx
  406fb4:	mov    QWORD PTR [rbp-0x18],rax
  406fb8:	mov    rax,QWORD PTR [rbp-0x18]
  406fbc:	mov    esi,0x0
  406fc1:	mov    rdi,rax
  406fc4:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  406fc9:	mov    DWORD PTR [rbp-0x1c],eax
  406fcc:	add    QWORD PTR [rbp-0x18],0x4
  406fd1:	mov    ecx,DWORD PTR [rbp-0x1c]
  406fd4:	mov    rdx,QWORD PTR [rbp-0x38]
  406fd8:	mov    rax,QWORD PTR [rbp-0x18]
  406fdc:	mov    rsi,rcx
  406fdf:	mov    rdi,rax
  406fe2:	call   406a31 <flatcc_verify_buffer_header@@Base>
  406fe7:	test   eax,eax
  406fe9:	je     407003 <flatcc_verify_table_as_nested_root@@Base+0x10a>
  406feb:	mov    ecx,DWORD PTR [rbp-0x1c]
  406fee:	mov    rdx,QWORD PTR [rbp-0x38]
  406ff2:	mov    rax,QWORD PTR [rbp-0x18]
  406ff6:	mov    rsi,rcx
  406ff9:	mov    rdi,rax
  406ffc:	call   406a31 <flatcc_verify_buffer_header@@Base>
  407001:	jmp    40703b <flatcc_verify_table_as_nested_root@@Base+0x142>
  407003:	mov    rax,QWORD PTR [rbp-0x28]
  407007:	mov    ebx,DWORD PTR [rax+0xc]
  40700a:	mov    rax,QWORD PTR [rbp-0x18]
  40700e:	mov    esi,0x0
  407013:	mov    rdi,rax
  407016:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  40701b:	mov    ecx,eax
  40701d:	mov    rdx,QWORD PTR [rbp-0x48]
  407021:	mov    esi,DWORD PTR [rbp-0x1c]
  407024:	mov    rax,QWORD PTR [rbp-0x18]
  407028:	mov    r9,rdx
  40702b:	mov    r8d,ebx
  40702e:	mov    edx,0x0
  407033:	mov    rdi,rax
  407036:	call   406039 <flatcc_verify_error_string@@Base+0x8b6>
  40703b:	add    rsp,0x48
  40703f:	pop    rbx
  407040:	pop    rbp
  407041:	ret    

0000000000407042 <flatcc_verify_union_field@@Base>:
  407042:	endbr64 
  407046:	push   rbp
  407047:	mov    rbp,rsp
  40704a:	sub    rsp,0x70
  40704e:	mov    QWORD PTR [rbp-0x58],rdi
  407052:	mov    eax,esi
  407054:	mov    DWORD PTR [rbp-0x60],edx
  407057:	mov    QWORD PTR [rbp-0x68],rcx
  40705b:	mov    WORD PTR [rbp-0x5c],ax
  40705f:	mov    rax,QWORD PTR fs:0x28
  407068:	mov    QWORD PTR [rbp-0x8],rax
  40706c:	xor    eax,eax
  40706e:	movzx  eax,WORD PTR [rbp-0x5c]
  407072:	dec    eax
  407074:	movzx  edx,ax
  407077:	mov    rax,QWORD PTR [rbp-0x58]
  40707b:	mov    esi,edx
  40707d:	mov    rdi,rax
  407080:	call   405b74 <flatcc_verify_error_string@@Base+0x3f1>
  407085:	mov    WORD PTR [rbp-0x50],ax
  407089:	cmp    WORD PTR [rbp-0x50],0x0
  40708e:	jne    4070eb <flatcc_verify_union_field@@Base+0xa9>
  407090:	movzx  edx,WORD PTR [rbp-0x5c]
  407094:	mov    rax,QWORD PTR [rbp-0x58]
  407098:	mov    esi,edx
  40709a:	mov    rdi,rax
  40709d:	call   405b74 <flatcc_verify_error_string@@Base+0x3f1>
  4070a2:	mov    WORD PTR [rbp-0x4e],ax
  4070a6:	cmp    WORD PTR [rbp-0x4e],0x0
  4070ab:	sete   al
  4070ae:	movzx  eax,al
  4070b1:	mov    DWORD PTR [rbp-0x48],eax
  4070b4:	cmp    DWORD PTR [rbp-0x48],0x0
  4070b8:	jne    4070c4 <flatcc_verify_union_field@@Base+0x82>
  4070ba:	mov    eax,0x17
  4070bf:	jmp    407234 <flatcc_verify_union_field@@Base+0x1f2>
  4070c4:	cmp    DWORD PTR [rbp-0x60],0x0
  4070c8:	sete   al
  4070cb:	movzx  eax,al
  4070ce:	mov    DWORD PTR [rbp-0x44],eax
  4070d1:	cmp    DWORD PTR [rbp-0x44],0x0
  4070d5:	jne    4070e1 <flatcc_verify_union_field@@Base+0x9f>
  4070d7:	mov    eax,0x15
  4070dc:	jmp    407234 <flatcc_verify_union_field@@Base+0x1f2>
  4070e1:	mov    eax,0x0
  4070e6:	jmp    407234 <flatcc_verify_union_field@@Base+0x1f2>
  4070eb:	movzx  eax,WORD PTR [rbp-0x5c]
  4070ef:	dec    eax
  4070f1:	movzx  esi,ax
  4070f4:	mov    rax,QWORD PTR [rbp-0x58]
  4070f8:	mov    r8d,0x1
  4070fe:	mov    ecx,0x1
  407103:	mov    edx,0x0
  407108:	mov    rdi,rax
  40710b:	call   405c17 <flatcc_verify_error_string@@Base+0x494>
  407110:	test   eax,eax
  407112:	je     40713e <flatcc_verify_union_field@@Base+0xfc>
  407114:	movzx  eax,WORD PTR [rbp-0x5c]
  407118:	dec    eax
  40711a:	movzx  esi,ax
  40711d:	mov    rax,QWORD PTR [rbp-0x58]
  407121:	mov    r8d,0x1
  407127:	mov    ecx,0x1
  40712c:	mov    edx,0x0
  407131:	mov    rdi,rax
  407134:	call   405c17 <flatcc_verify_error_string@@Base+0x494>
  407139:	jmp    407234 <flatcc_verify_union_field@@Base+0x1f2>
  40713e:	movzx  edx,WORD PTR [rbp-0x5c]
  407142:	mov    rax,QWORD PTR [rbp-0x58]
  407146:	mov    esi,edx
  407148:	mov    rdi,rax
  40714b:	call   405b74 <flatcc_verify_error_string@@Base+0x3f1>
  407150:	mov    WORD PTR [rbp-0x4e],ax
  407154:	mov    rax,QWORD PTR [rbp-0x58]
  407158:	mov    rdx,QWORD PTR [rax]
  40715b:	mov    rax,QWORD PTR [rbp-0x58]
  40715f:	mov    eax,DWORD PTR [rax+0x18]
  407162:	mov    ecx,eax
  407164:	movzx  eax,WORD PTR [rbp-0x50]
  407168:	add    rax,rcx
  40716b:	add    rax,rdx
  40716e:	mov    QWORD PTR [rbp-0x38],rax
  407172:	mov    rax,QWORD PTR [rbp-0x38]
  407176:	movzx  eax,BYTE PTR [rax]
  407179:	test   al,al
  40717b:	jne    407184 <flatcc_verify_union_field@@Base+0x142>
  40717d:	cmp    WORD PTR [rbp-0x4e],0x0
  407182:	jne    40718b <flatcc_verify_union_field@@Base+0x149>
  407184:	mov    eax,0x1
  407189:	jmp    407190 <flatcc_verify_union_field@@Base+0x14e>
  40718b:	mov    eax,0x0
  407190:	mov    DWORD PTR [rbp-0x40],eax
  407193:	cmp    DWORD PTR [rbp-0x40],0x0
  407197:	jne    4071a3 <flatcc_verify_union_field@@Base+0x161>
  407199:	mov    eax,0x18
  40719e:	jmp    407234 <flatcc_verify_union_field@@Base+0x1f2>
  4071a3:	mov    rax,QWORD PTR [rbp-0x38]
  4071a7:	movzx  eax,BYTE PTR [rax]
  4071aa:	test   al,al
  4071ac:	jne    4071b5 <flatcc_verify_union_field@@Base+0x173>
  4071ae:	mov    eax,0x0
  4071b3:	jmp    407234 <flatcc_verify_union_field@@Base+0x1f2>
  4071b5:	movzx  esi,WORD PTR [rbp-0x5c]
  4071b9:	lea    rcx,[rbp-0x4c]
  4071bd:	mov    edx,DWORD PTR [rbp-0x60]
  4071c0:	mov    rax,QWORD PTR [rbp-0x58]
  4071c4:	mov    rdi,rax
  4071c7:	call   405d08 <flatcc_verify_error_string@@Base+0x585>
  4071cc:	mov    DWORD PTR [rbp-0x3c],eax
  4071cf:	cmp    DWORD PTR [rbp-0x3c],0x0
  4071d3:	jne    4071dc <flatcc_verify_union_field@@Base+0x19a>
  4071d5:	mov    eax,DWORD PTR [rbp-0x4c]
  4071d8:	test   eax,eax
  4071da:	jne    4071e1 <flatcc_verify_union_field@@Base+0x19f>
  4071dc:	mov    eax,DWORD PTR [rbp-0x3c]
  4071df:	jmp    407234 <flatcc_verify_union_field@@Base+0x1f2>
  4071e1:	mov    rax,QWORD PTR [rbp-0x58]
  4071e5:	mov    rax,QWORD PTR [rax]
  4071e8:	mov    QWORD PTR [rbp-0x30],rax
  4071ec:	mov    rax,QWORD PTR [rbp-0x58]
  4071f0:	mov    eax,DWORD PTR [rax+0x8]
  4071f3:	mov    DWORD PTR [rbp-0x28],eax
  4071f6:	mov    rax,QWORD PTR [rbp-0x58]
  4071fa:	mov    eax,DWORD PTR [rax+0xc]
  4071fd:	mov    DWORD PTR [rbp-0x24],eax
  407200:	mov    eax,DWORD PTR [rbp-0x4c]
  407203:	mov    DWORD PTR [rbp-0x1c],eax
  407206:	mov    edx,DWORD PTR [rbp-0x4c]
  407209:	mov    rax,QWORD PTR [rbp-0x58]
  40720d:	mov    rax,QWORD PTR [rax]
  407210:	mov    esi,edx
  407212:	mov    rdi,rax
  407215:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  40721a:	mov    DWORD PTR [rbp-0x18],eax
  40721d:	mov    rax,QWORD PTR [rbp-0x38]
  407221:	movzx  eax,BYTE PTR [rax]
  407224:	mov    BYTE PTR [rbp-0x20],al
  407227:	lea    rdx,[rbp-0x30]
  40722b:	mov    rax,QWORD PTR [rbp-0x68]
  40722f:	mov    rdi,rdx
  407232:	call   rax
  407234:	mov    rcx,QWORD PTR [rbp-0x8]
  407238:	xor    rcx,QWORD PTR fs:0x28
  407241:	je     407248 <flatcc_verify_union_field@@Base+0x206>
  407243:	call   4021c0 <__stack_chk_fail@plt>
  407248:	leave  
  407249:	ret    

000000000040724a <flatcc_verify_union_vector_field@@Base>:
  40724a:	endbr64 
  40724e:	push   rbp
  40724f:	mov    rbp,rsp
  407252:	push   rbx
  407253:	sub    rsp,0x58
  407257:	mov    QWORD PTR [rbp-0x48],rdi
  40725b:	mov    eax,esi
  40725d:	mov    DWORD PTR [rbp-0x50],edx
  407260:	mov    QWORD PTR [rbp-0x58],rcx
  407264:	mov    WORD PTR [rbp-0x4c],ax
  407268:	mov    rax,QWORD PTR fs:0x28
  407271:	mov    QWORD PTR [rbp-0x18],rax
  407275:	xor    eax,eax
  407277:	movzx  eax,WORD PTR [rbp-0x4c]
  40727b:	dec    eax
  40727d:	movzx  edx,ax
  407280:	mov    rax,QWORD PTR [rbp-0x48]
  407284:	mov    esi,edx
  407286:	mov    rdi,rax
  407289:	call   405b74 <flatcc_verify_error_string@@Base+0x3f1>
  40728e:	mov    WORD PTR [rbp-0x3c],ax
  407292:	cmp    WORD PTR [rbp-0x3c],0x0
  407297:	jne    4072d3 <flatcc_verify_union_vector_field@@Base+0x89>
  407299:	movzx  edx,WORD PTR [rbp-0x4c]
  40729d:	mov    rax,QWORD PTR [rbp-0x48]
  4072a1:	mov    esi,edx
  4072a3:	mov    rdi,rax
  4072a6:	call   405b74 <flatcc_verify_error_string@@Base+0x3f1>
  4072ab:	mov    WORD PTR [rbp-0x3a],ax
  4072af:	cmp    WORD PTR [rbp-0x3a],0x0
  4072b4:	jne    4072d3 <flatcc_verify_union_vector_field@@Base+0x89>
  4072b6:	cmp    DWORD PTR [rbp-0x50],0x0
  4072ba:	sete   al
  4072bd:	movzx  eax,al
  4072c0:	mov    DWORD PTR [rbp-0x34],eax
  4072c3:	cmp    DWORD PTR [rbp-0x34],0x0
  4072c7:	jne    4072d3 <flatcc_verify_union_vector_field@@Base+0x89>
  4072c9:	mov    eax,0x16
  4072ce:	jmp    407414 <flatcc_verify_union_vector_field@@Base+0x1ca>
  4072d3:	movzx  eax,WORD PTR [rbp-0x4c]
  4072d7:	dec    eax
  4072d9:	movzx  esi,ax
  4072dc:	mov    edx,DWORD PTR [rbp-0x50]
  4072df:	mov    rax,QWORD PTR [rbp-0x48]
  4072e3:	mov    r9d,0xffffffff
  4072e9:	mov    r8d,0x1
  4072ef:	mov    ecx,0x1
  4072f4:	mov    rdi,rax
  4072f7:	call   40668e <flatcc_verify_vector_field@@Base>
  4072fc:	test   eax,eax
  4072fe:	je     40732e <flatcc_verify_union_vector_field@@Base+0xe4>
  407300:	movzx  eax,WORD PTR [rbp-0x4c]
  407304:	dec    eax
  407306:	movzx  esi,ax
  407309:	mov    edx,DWORD PTR [rbp-0x50]
  40730c:	mov    rax,QWORD PTR [rbp-0x48]
  407310:	mov    r9d,0xffffffff
  407316:	mov    r8d,0x1
  40731c:	mov    ecx,0x1
  407321:	mov    rdi,rax
  407324:	call   40668e <flatcc_verify_vector_field@@Base>
  407329:	jmp    407414 <flatcc_verify_union_vector_field@@Base+0x1ca>
  40732e:	movzx  eax,WORD PTR [rbp-0x4c]
  407332:	dec    eax
  407334:	movzx  edx,ax
  407337:	mov    rax,QWORD PTR [rbp-0x48]
  40733b:	mov    esi,edx
  40733d:	mov    rdi,rax
  407340:	call   405bc5 <flatcc_verify_error_string@@Base+0x442>
  407345:	mov    QWORD PTR [rbp-0x28],rax
  407349:	cmp    QWORD PTR [rbp-0x28],0x0
  40734e:	jne    40735a <flatcc_verify_union_vector_field@@Base+0x110>
  407350:	mov    eax,0x0
  407355:	jmp    407414 <flatcc_verify_union_vector_field@@Base+0x1ca>
  40735a:	mov    rax,QWORD PTR [rbp-0x28]
  40735e:	mov    esi,0x0
  407363:	mov    rdi,rax
  407366:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  40736b:	mov    edx,eax
  40736d:	mov    rax,QWORD PTR [rbp-0x28]
  407371:	add    rax,rdx
  407374:	mov    QWORD PTR [rbp-0x28],rax
  407378:	mov    rax,QWORD PTR [rbp-0x28]
  40737c:	mov    esi,0x0
  407381:	mov    rdi,rax
  407384:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  407389:	mov    DWORD PTR [rbp-0x30],eax
  40738c:	add    QWORD PTR [rbp-0x28],0x4
  407391:	mov    rax,QWORD PTR [rbp-0x28]
  407395:	mov    QWORD PTR [rbp-0x20],rax
  407399:	movzx  esi,WORD PTR [rbp-0x4c]
  40739d:	lea    rcx,[rbp-0x38]
  4073a1:	mov    edx,DWORD PTR [rbp-0x50]
  4073a4:	mov    rax,QWORD PTR [rbp-0x48]
  4073a8:	mov    rdi,rax
  4073ab:	call   405d08 <flatcc_verify_error_string@@Base+0x585>
  4073b0:	mov    DWORD PTR [rbp-0x2c],eax
  4073b3:	cmp    DWORD PTR [rbp-0x2c],0x0
  4073b7:	jne    4073c0 <flatcc_verify_union_vector_field@@Base+0x176>
  4073b9:	mov    eax,DWORD PTR [rbp-0x38]
  4073bc:	test   eax,eax
  4073be:	jne    4073c5 <flatcc_verify_union_vector_field@@Base+0x17b>
  4073c0:	mov    eax,DWORD PTR [rbp-0x2c]
  4073c3:	jmp    407414 <flatcc_verify_union_vector_field@@Base+0x1ca>
  4073c5:	mov    rax,QWORD PTR [rbp-0x48]
  4073c9:	mov    ebx,DWORD PTR [rax+0xc]
  4073cc:	mov    edx,DWORD PTR [rbp-0x38]
  4073cf:	mov    rax,QWORD PTR [rbp-0x48]
  4073d3:	mov    rax,QWORD PTR [rax]
  4073d6:	mov    esi,edx
  4073d8:	mov    rdi,rax
  4073db:	call   405958 <flatcc_verify_error_string@@Base+0x1d5>
  4073e0:	mov    r10d,eax
  4073e3:	mov    edx,DWORD PTR [rbp-0x38]
  4073e6:	mov    rax,QWORD PTR [rbp-0x48]
  4073ea:	mov    esi,DWORD PTR [rax+0x8]
  4073ed:	mov    rax,QWORD PTR [rbp-0x48]
  4073f1:	mov    rax,QWORD PTR [rax]
  4073f4:	mov    rdi,QWORD PTR [rbp-0x20]
  4073f8:	mov    ecx,DWORD PTR [rbp-0x30]
  4073fb:	push   QWORD PTR [rbp-0x58]
  4073fe:	push   rbx
  4073ff:	mov    r9,rdi
  407402:	mov    r8d,ecx
  407405:	mov    ecx,r10d
  407408:	mov    rdi,rax
  40740b:	call   4063a4 <flatcc_verify_error_string@@Base+0xc21>
  407410:	add    rsp,0x10
  407414:	mov    rbx,QWORD PTR [rbp-0x18]
  407418:	xor    rbx,QWORD PTR fs:0x28
  407421:	je     407428 <flatcc_verify_union_vector_field@@Base+0x1de>
  407423:	call   4021c0 <__stack_chk_fail@plt>
  407428:	mov    rbx,QWORD PTR [rbp-0x8]
  40742c:	leave  
  40742d:	ret    
  40742e:	xchg   ax,ax

0000000000407430 <__libc_csu_init@@Base>:
  407430:	endbr64 
  407434:	push   r15
  407436:	lea    r15,[rip+0x49cb]        # 40be08 <_IO_stdin_used@@Base+0x3e08>
  40743d:	push   r14
  40743f:	mov    r14,rdx
  407442:	push   r13
  407444:	mov    r13,rsi
  407447:	push   r12
  407449:	mov    r12d,edi
  40744c:	push   rbp
  40744d:	lea    rbp,[rip+0x49bc]        # 40be10 <_IO_stdin_used@@Base+0x3e10>
  407454:	push   rbx
  407455:	sub    rbp,r15
  407458:	sub    rsp,0x8
  40745c:	call   402000 <free@plt-0x170>
  407461:	sar    rbp,0x3
  407465:	je     407486 <__libc_csu_init@@Base+0x56>
  407467:	xor    ebx,ebx
  407469:	nop    DWORD PTR [rax+0x0]
  407470:	mov    rdx,r14
  407473:	mov    rsi,r13
  407476:	mov    edi,r12d
  407479:	call   QWORD PTR [r15+rbx*8]
  40747d:	add    rbx,0x1
  407481:	cmp    rbp,rbx
  407484:	jne    407470 <__libc_csu_init@@Base+0x40>
  407486:	add    rsp,0x8
  40748a:	pop    rbx
  40748b:	pop    rbp
  40748c:	pop    r12
  40748e:	pop    r13
  407490:	pop    r14
  407492:	pop    r15
  407494:	ret    
  407495:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004074a0 <__libc_csu_fini@@Base>:
  4074a0:	endbr64 
  4074a4:	ret    

Disassembly of section .fini:

00000000004074a8 <.fini>:
  4074a8:	endbr64 
  4074ac:	sub    rsp,0x8
  4074b0:	add    rsp,0x8
  4074b4:	ret    
