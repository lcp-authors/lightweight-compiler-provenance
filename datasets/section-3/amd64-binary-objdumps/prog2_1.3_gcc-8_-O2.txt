
../repos/prog2/1.3:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <fclose@plt-0x8a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	bnd jmp QWORD PTR [rip+0x2fe3]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <fclose@plt-0x80>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <fclose@plt-0x80>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <fclose@plt-0x80>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <fclose@plt-0x80>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <fclose@plt-0x80>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <fclose@plt-0x80>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <fclose@plt-0x80>
  40109f:	nop

Disassembly of section .plt.sec:

00000000004010a0 <fclose@plt>:
  4010a0:	endbr64 
  4010a4:	bnd jmp QWORD PTR [rip+0x2f6d]        # 404018 <fclose@GLIBC_2.2.5>
  4010ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010b0 <__stack_chk_fail@plt>:
  4010b0:	endbr64 
  4010b4:	bnd jmp QWORD PTR [rip+0x2f65]        # 404020 <__stack_chk_fail@GLIBC_2.4>
  4010bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010c0 <fseek@plt>:
  4010c0:	endbr64 
  4010c4:	bnd jmp QWORD PTR [rip+0x2f5d]        # 404028 <fseek@GLIBC_2.2.5>
  4010cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010d0 <__strcpy_chk@plt>:
  4010d0:	endbr64 
  4010d4:	bnd jmp QWORD PTR [rip+0x2f55]        # 404030 <__strcpy_chk@GLIBC_2.3.4>
  4010db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010e0 <__printf_chk@plt>:
  4010e0:	endbr64 
  4010e4:	bnd jmp QWORD PTR [rip+0x2f4d]        # 404038 <__printf_chk@GLIBC_2.3.4>
  4010eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010f0 <fopen@plt>:
  4010f0:	endbr64 
  4010f4:	bnd jmp QWORD PTR [rip+0x2f45]        # 404040 <fopen@GLIBC_2.2.5>
  4010fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401100 <getc@plt>:
  401100:	endbr64 
  401104:	bnd jmp QWORD PTR [rip+0x2f3d]        # 404048 <getc@GLIBC_2.2.5>
  40110b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000401110 <main@@Base>:
  401110:	endbr64 
  401114:	push   r14
  401116:	lea    rsi,[rip+0xee7]        # 402004 <_IO_stdin_used@@Base+0x4>
  40111d:	lea    rdi,[rip+0xee2]        # 402006 <_IO_stdin_used@@Base+0x6>
  401124:	push   r13
  401126:	push   r12
  401128:	push   rbp
  401129:	push   rbx
  40112a:	sub    rsp,0x8e0
  401131:	mov    rax,QWORD PTR fs:0x28
  40113a:	mov    QWORD PTR [rsp+0x8d8],rax
  401142:	xor    eax,eax
  401144:	call   4010f0 <fopen@plt>
  401149:	mov    rbx,rax
  40114c:	lea    r13,[rsp+0xcd]
  401154:	lea    r12,[rsp+0x810]
  40115c:	jmp    401165 <main@@Base+0x55>
  40115e:	xchg   ax,ax
  401160:	cmp    eax,0x3c
  401163:	je     4011a8 <main@@Base+0x98>
  401165:	mov    rdi,rbx
  401168:	call   401100 <getc@plt>
  40116d:	cmp    eax,0xffffffff
  401170:	jne    401160 <main@@Base+0x50>
  401172:	mov    rdi,rbx
  401175:	call   4010a0 <fclose@plt>
  40117a:	xor    eax,eax
  40117c:	mov    rcx,QWORD PTR [rsp+0x8d8]
  401184:	xor    rcx,QWORD PTR fs:0x28
  40118d:	jne    4012d3 <main@@Base+0x1c3>
  401193:	add    rsp,0x8e0
  40119a:	pop    rbx
  40119b:	pop    rbp
  40119c:	pop    r12
  40119e:	pop    r13
  4011a0:	pop    r14
  4011a2:	ret    
  4011a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4011a8:	mov    rdi,rbx
  4011ab:	call   401100 <getc@plt>
  4011b0:	cmp    eax,0x61
  4011b3:	jne    401165 <main@@Base+0x55>
  4011b5:	mov    esi,0xc8
  4011ba:	mov    rdi,r12
  4011bd:	call   4013d0 <esvaziastring@@Base>
  4011c2:	mov    edx,0x1
  4011c7:	mov    esi,0x7
  4011cc:	mov    rdi,rbx
  4011cf:	call   4010c0 <fseek@plt>
  4011d4:	xor    ebp,ebp
  4011d6:	jmp    4011e7 <main@@Base+0xd7>
  4011d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4011e0:	mov    BYTE PTR [r12+rbp*1],al
  4011e4:	inc    rbp
  4011e7:	mov    rdi,rbx
  4011ea:	movsxd r14,ebp
  4011ed:	call   401100 <getc@plt>
  4011f2:	cmp    eax,0x22
  4011f5:	jne    4011e0 <main@@Base+0xd0>
  4011f7:	mov    BYTE PTR [rsp+r14*1+0x810],0x0
  401200:	lea    r14,[r13-0xcd]
  401207:	mov    edx,0xcd
  40120c:	mov    rsi,r12
  40120f:	mov    rdi,r14
  401212:	call   4010d0 <__strcpy_chk@plt>
  401217:	mov    esi,0xc8
  40121c:	mov    rdi,r12
  40121f:	call   4013d0 <esvaziastring@@Base>
  401224:	mov    edx,0x1
  401229:	mov    esi,0x1
  40122e:	mov    rdi,rbx
  401231:	call   4010c0 <fseek@plt>
  401236:	xor    ebp,ebp
  401238:	mov    rdi,rbx
  40123b:	call   401100 <getc@plt>
  401240:	cmp    eax,0x3c
  401243:	je     401268 <main@@Base+0x158>
  401245:	lea    edx,[rbp+0x1]
  401248:	cmp    eax,0xe1
  40124d:	je     4012b5 <main@@Base+0x1a5>
  40124f:	movsxd rbp,ebp
  401252:	mov    rdi,rbx
  401255:	mov    BYTE PTR [rsp+rbp*1+0x810],al
  40125c:	mov    ebp,edx
  40125e:	call   401100 <getc@plt>
  401263:	cmp    eax,0x3c
  401266:	jne    401245 <main@@Base+0x135>
  401268:	mov    edx,0xcd
  40126d:	mov    rdi,r13
  401270:	mov    rsi,r12
  401273:	movsxd rbp,ebp
  401276:	mov    BYTE PTR [rsp+rbp*1+0x810],0x0
  40127e:	call   4010d0 <__strcpy_chk@plt>
  401283:	mov    esi,0x50
  401288:	mov    rdi,r12
  40128b:	call   4013d0 <esvaziastring@@Base>
  401290:	mov    rdx,r13
  401293:	mov    rcx,r14
  401296:	lea    rsi,[rip+0xd7f]        # 40201c <_IO_stdin_used@@Base+0x1c>
  40129d:	mov    edi,0x1
  4012a2:	xor    eax,eax
  4012a4:	call   4010e0 <__printf_chk@plt>
  4012a9:	add    r13,0x19a
  4012b0:	jmp    401165 <main@@Base+0x55>
  4012b5:	movsxd rax,ebp
  4012b8:	movsxd rdx,edx
  4012bb:	mov    BYTE PTR [rsp+rax*1+0x810],0xc3
  4012c3:	add    ebp,0x2
  4012c6:	mov    BYTE PTR [rsp+rdx*1+0x810],0xa1
  4012ce:	jmp    401238 <main@@Base+0x128>
  4012d3:	call   4010b0 <__stack_chk_fail@plt>
  4012d8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012e0 <_start@@Base>:
  4012e0:	endbr64 
  4012e4:	xor    ebp,ebp
  4012e6:	mov    r9,rdx
  4012e9:	pop    rsi
  4012ea:	mov    rdx,rsp
  4012ed:	and    rsp,0xfffffffffffffff0
  4012f1:	push   rax
  4012f2:	push   rsp
  4012f3:	mov    r8,0x401460
  4012fa:	mov    rcx,0x4013f0
  401301:	mov    rdi,0x401110
  401308:	call   QWORD PTR [rip+0x2ce2]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40130e:	hlt    
  40130f:	nop
  401310:	endbr64 
  401314:	ret    
  401315:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40131f:	nop
  401320:	mov    eax,0x404060
  401325:	cmp    rax,0x404060
  40132b:	je     401340 <_start@@Base+0x60>
  40132d:	mov    eax,0x0
  401332:	test   rax,rax
  401335:	je     401340 <_start@@Base+0x60>
  401337:	mov    edi,0x404060
  40133c:	jmp    rax
  40133e:	xchg   ax,ax
  401340:	ret    
  401341:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40134c:	nop    DWORD PTR [rax+0x0]
  401350:	mov    esi,0x404060
  401355:	sub    rsi,0x404060
  40135c:	sar    rsi,0x3
  401360:	mov    rax,rsi
  401363:	shr    rax,0x3f
  401367:	add    rsi,rax
  40136a:	sar    rsi,1
  40136d:	je     401380 <_start@@Base+0xa0>
  40136f:	mov    eax,0x0
  401374:	test   rax,rax
  401377:	je     401380 <_start@@Base+0xa0>
  401379:	mov    edi,0x404060
  40137e:	jmp    rax
  401380:	ret    
  401381:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40138c:	nop    DWORD PTR [rax+0x0]
  401390:	endbr64 
  401394:	cmp    BYTE PTR [rip+0x2cc5],0x0        # 404060 <__bss_start@@Base>
  40139b:	jne    4013b0 <_start@@Base+0xd0>
  40139d:	push   rbp
  40139e:	mov    rbp,rsp
  4013a1:	call   401320 <_start@@Base+0x40>
  4013a6:	mov    BYTE PTR [rip+0x2cb3],0x1        # 404060 <__bss_start@@Base>
  4013ad:	pop    rbp
  4013ae:	ret    
  4013af:	nop
  4013b0:	ret    
  4013b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4013bc:	nop    DWORD PTR [rax+0x0]
  4013c0:	endbr64 
  4013c4:	jmp    401350 <_start@@Base+0x70>
  4013c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004013d0 <esvaziastring@@Base>:
  4013d0:	endbr64 
  4013d4:	test   esi,esi
  4013d6:	jle    4013eb <esvaziastring@@Base+0x1b>
  4013d8:	lea    eax,[rsi-0x1]
  4013db:	lea    rax,[rdi+rax*1+0x1]
  4013e0:	mov    BYTE PTR [rdi],0x0
  4013e3:	inc    rdi
  4013e6:	cmp    rdi,rax
  4013e9:	jne    4013e0 <esvaziastring@@Base+0x10>
  4013eb:	ret    
  4013ec:	nop    DWORD PTR [rax+0x0]

00000000004013f0 <__libc_csu_init@@Base>:
  4013f0:	endbr64 
  4013f4:	push   r15
  4013f6:	lea    r15,[rip+0x2a13]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  4013fd:	push   r14
  4013ff:	mov    r14,rdx
  401402:	push   r13
  401404:	mov    r13,rsi
  401407:	push   r12
  401409:	mov    r12d,edi
  40140c:	push   rbp
  40140d:	lea    rbp,[rip+0x2a04]        # 403e18 <_IO_stdin_used@@Base+0x1e18>
  401414:	push   rbx
  401415:	sub    rbp,r15
  401418:	sub    rsp,0x8
  40141c:	call   401000 <fclose@plt-0xa0>
  401421:	sar    rbp,0x3
  401425:	je     401446 <__libc_csu_init@@Base+0x56>
  401427:	xor    ebx,ebx
  401429:	nop    DWORD PTR [rax+0x0]
  401430:	mov    rdx,r14
  401433:	mov    rsi,r13
  401436:	mov    edi,r12d
  401439:	call   QWORD PTR [r15+rbx*8]
  40143d:	add    rbx,0x1
  401441:	cmp    rbp,rbx
  401444:	jne    401430 <__libc_csu_init@@Base+0x40>
  401446:	add    rsp,0x8
  40144a:	pop    rbx
  40144b:	pop    rbp
  40144c:	pop    r12
  40144e:	pop    r13
  401450:	pop    r14
  401452:	pop    r15
  401454:	ret    
  401455:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401460 <__libc_csu_fini@@Base>:
  401460:	endbr64 
  401464:	ret    

Disassembly of section .fini:

0000000000401468 <.fini>:
  401468:	endbr64 
  40146c:	sub    rsp,0x8
  401470:	add    rsp,0x8
  401474:	ret    
