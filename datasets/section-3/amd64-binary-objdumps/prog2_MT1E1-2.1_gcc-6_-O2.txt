
../repos/prog2/MT1E1-2.1:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x3fe1]        # 404ff0 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <free@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x3fe2]        # 405008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x3fe4]        # 405010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <free@plt>:
  401030:	jmp    QWORD PTR [rip+0x3fe2]        # 405018 <free@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <free@plt-0x10>

0000000000401040 <strcpy@plt>:
  401040:	jmp    QWORD PTR [rip+0x3fda]        # 405020 <strcpy@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <free@plt-0x10>

0000000000401050 <puts@plt>:
  401050:	jmp    QWORD PTR [rip+0x3fd2]        # 405028 <puts@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <free@plt-0x10>

0000000000401060 <strlen@plt>:
  401060:	jmp    QWORD PTR [rip+0x3fca]        # 405030 <strlen@GLIBC_2.2.5>
  401066:	push   0x3
  40106b:	jmp    401020 <free@plt-0x10>

0000000000401070 <__stack_chk_fail@plt>:
  401070:	jmp    QWORD PTR [rip+0x3fc2]        # 405038 <__stack_chk_fail@GLIBC_2.4>
  401076:	push   0x4
  40107b:	jmp    401020 <free@plt-0x10>

0000000000401080 <calloc@plt>:
  401080:	jmp    QWORD PTR [rip+0x3fba]        # 405040 <calloc@GLIBC_2.2.5>
  401086:	push   0x5
  40108b:	jmp    401020 <free@plt-0x10>

0000000000401090 <strcmp@plt>:
  401090:	jmp    QWORD PTR [rip+0x3fb2]        # 405048 <strcmp@GLIBC_2.2.5>
  401096:	push   0x6
  40109b:	jmp    401020 <free@plt-0x10>

00000000004010a0 <memcpy@plt>:
  4010a0:	jmp    QWORD PTR [rip+0x3faa]        # 405050 <memcpy@GLIBC_2.14>
  4010a6:	push   0x7
  4010ab:	jmp    401020 <free@plt-0x10>

00000000004010b0 <malloc@plt>:
  4010b0:	jmp    QWORD PTR [rip+0x3fa2]        # 405058 <malloc@GLIBC_2.2.5>
  4010b6:	push   0x8
  4010bb:	jmp    401020 <free@plt-0x10>

00000000004010c0 <realloc@plt>:
  4010c0:	jmp    QWORD PTR [rip+0x3f9a]        # 405060 <realloc@GLIBC_2.2.5>
  4010c6:	push   0x9
  4010cb:	jmp    401020 <free@plt-0x10>

00000000004010d0 <fwrite@plt>:
  4010d0:	jmp    QWORD PTR [rip+0x3f92]        # 405068 <fwrite@GLIBC_2.2.5>
  4010d6:	push   0xa
  4010db:	jmp    401020 <free@plt-0x10>

00000000004010e0 <__fprintf_chk@plt>:
  4010e0:	jmp    QWORD PTR [rip+0x3f8a]        # 405070 <__fprintf_chk@GLIBC_2.3.4>
  4010e6:	push   0xb
  4010eb:	jmp    401020 <free@plt-0x10>

00000000004010f0 <__sprintf_chk@plt>:
  4010f0:	jmp    QWORD PTR [rip+0x3f82]        # 405078 <__sprintf_chk@GLIBC_2.3.4>
  4010f6:	push   0xc
  4010fb:	jmp    401020 <free@plt-0x10>

Disassembly of section .text:

0000000000401100 <main@@Base>:
  401100:	push   r15
  401102:	push   r14
  401104:	xor    eax,eax
  401106:	push   r13
  401108:	push   r12
  40110a:	push   rbp
  40110b:	push   rbx
  40110c:	xor    ebx,ebx
  40110e:	sub    rsp,0x18
  401112:	call   401730 <vetor_novo@@Base>
  401117:	mov    r12,rax
  40111a:	mov    rax,0x405280
  401121:	mov    edx,ebx
  401123:	mov    rdi,r12
  401126:	mov    rsi,QWORD PTR [rax+rbx*8]
  40112a:	add    rbx,0x1
  40112e:	call   4018c0 <vetor_insere@@Base>
  401133:	cmp    rbx,0x4
  401137:	jne    40111a <main@@Base+0x1a>
  401139:	xor    eax,eax
  40113b:	call   401bf0 <lista_nova@@Base>
  401140:	mov    rbp,0x4050a0
  401147:	mov    rbx,rax
  40114a:	lea    r14,[rbp+0xd0]
  401151:	mov    r13,rbp
  401154:	nop    DWORD PTR [rax+0x0]
  401158:	mov    esi,DWORD PTR [r13+0x0]
  40115c:	mov    rdi,rbx
  40115f:	add    r13,0x4
  401163:	call   401610 <insere_carta@@Base>
  401168:	cmp    r13,r14
  40116b:	jne    401158 <main@@Base+0x58>
  40116d:	xor    eax,eax
  40116f:	call   401bf0 <lista_nova@@Base>
  401174:	mov    r15,0x405200
  40117b:	mov    r13,rax
  40117e:	lea    r14,[r15+0x68]
  401182:	nop    WORD PTR [rax+rax*1+0x0]
  401188:	mov    rsi,QWORD PTR [r15]
  40118b:	xor    edx,edx
  40118d:	mov    rdi,r13
  401190:	add    r15,0x8
  401194:	call   401cd0 <lista_insere@@Base>
  401199:	cmp    r14,r15
  40119c:	jne    401188 <main@@Base+0x88>
  40119e:	mov    rsi,r13
  4011a1:	mov    rdi,rbx
  4011a4:	call   4014b0 <tira_carta@@Base>
  4011a9:	mov    r14,QWORD PTR [rip+0x3e48]        # 404ff8 <stderr@GLIBC_2.2.5>
  4011b0:	lea    rdx,[rip+0x1e50]        # 403007 <_IO_stdin_used@@Base+0x7>
  4011b7:	mov    ecx,eax
  4011b9:	mov    esi,0x1
  4011be:	xor    eax,eax
  4011c0:	mov    rdi,QWORD PTR [r14]
  4011c3:	call   4010e0 <__fprintf_chk@plt>
  4011c8:	mov    rsi,r13
  4011cb:	mov    rdi,rbx
  4011ce:	call   4014b0 <tira_carta@@Base>
  4011d3:	mov    rdi,QWORD PTR [r14]
  4011d6:	lea    rdx,[rip+0x1e47]        # 403024 <_IO_stdin_used@@Base+0x24>
  4011dd:	mov    ecx,eax
  4011df:	mov    esi,0x1
  4011e4:	xor    eax,eax
  4011e6:	call   4010e0 <__fprintf_chk@plt>
  4011eb:	mov    rsi,r13
  4011ee:	mov    rdi,rbx
  4011f1:	call   4014b0 <tira_carta@@Base>
  4011f6:	mov    rdi,QWORD PTR [r14]
  4011f9:	lea    rdx,[rip+0x1e40]        # 403040 <_IO_stdin_used@@Base+0x40>
  401200:	mov    ecx,eax
  401202:	mov    esi,0x1
  401207:	xor    eax,eax
  401209:	call   4010e0 <__fprintf_chk@plt>
  40120e:	mov    esi,DWORD PTR [rbp+0xc4]
  401214:	mov    rdi,rbx
  401217:	call   401610 <insere_carta@@Base>
  40121c:	mov    esi,DWORD PTR [rbp+0xc8]
  401222:	mov    rdi,rbx
  401225:	call   401610 <insere_carta@@Base>
  40122a:	mov    esi,DWORD PTR [rbp+0xcc]
  401230:	mov    rdi,rbx
  401233:	xor    ebp,ebp
  401235:	call   401610 <insere_carta@@Base>
  40123a:	xor    eax,eax
  40123c:	call   401730 <vetor_novo@@Base>
  401241:	mov    r15,rax
  401244:	nop    DWORD PTR [rax+0x0]
  401248:	mov    rdx,r13
  40124b:	mov    rsi,rbx
  40124e:	mov    rdi,r12
  401251:	call   401500 <faz_jogada@@Base>
  401256:	test   rax,rax
  401259:	je     401268 <main@@Base+0x168>
  40125b:	mov    edx,ebp
  40125d:	mov    rsi,rax
  401260:	mov    rdi,r15
  401263:	call   4018c0 <vetor_insere@@Base>
  401268:	mov    rdi,r12
  40126b:	call   401880 <vetor_tamanho@@Base>
  401270:	cmp    eax,0x4
  401273:	je     40128e <main@@Base+0x18e>
  401275:	mov    rcx,QWORD PTR [r14]
  401278:	lea    rdi,[rip+0x1e21]        # 4030a0 <_IO_stdin_used@@Base+0xa0>
  40127f:	mov    edx,0x2c
  401284:	mov    esi,0x1
  401289:	call   4010d0 <fwrite@plt>
  40128e:	add    ebp,0x1
  401291:	cmp    ebp,0xd
  401294:	jne    401248 <main@@Base+0x148>
  401296:	lea    rdi,[rip+0x1e33]        # 4030d0 <_IO_stdin_used@@Base+0xd0>
  40129d:	xor    ebp,ebp
  40129f:	call   401050 <puts@plt>
  4012a4:	mov    eax,DWORD PTR [r15]
  4012a7:	test   eax,eax
  4012a9:	jle    4012e3 <main@@Base+0x1e3>
  4012ab:	mov    esi,ebp
  4012ad:	mov    rdi,r15
  4012b0:	add    ebp,0x1
  4012b3:	call   401890 <vetor_elemento@@Base>
  4012b8:	mov    rdi,QWORD PTR [r14]
  4012bb:	lea    rdx,[rip+0x1d9b]        # 40305d <_IO_stdin_used@@Base+0x5d>
  4012c2:	mov    r8,rax
  4012c5:	mov    ecx,ebp
  4012c7:	xor    eax,eax
  4012c9:	mov    esi,0x1
  4012ce:	call   4010e0 <__fprintf_chk@plt>
  4012d3:	cmp    DWORD PTR [r15],ebp
  4012d6:	setg   dl
  4012d9:	cmp    ebp,0x2
  4012dc:	setle  al
  4012df:	test   dl,al
  4012e1:	jne    4012ab <main@@Base+0x1ab>
  4012e3:	mov    rdi,r15
  4012e6:	xor    ebp,ebp
  4012e8:	call   401760 <vetor_apaga@@Base>
  4012ed:	xor    eax,eax
  4012ef:	call   401730 <vetor_novo@@Base>
  4012f4:	mov    r15,0x405180
  4012fb:	mov    QWORD PTR [rsp+0x8],rax
  401300:	mov    rsi,QWORD PTR [r15+rbp*8]
  401304:	mov    rdi,QWORD PTR [rsp+0x8]
  401309:	mov    edx,ebp
  40130b:	add    rbp,0x1
  40130f:	call   4018c0 <vetor_insere@@Base>
  401314:	cmp    rbp,0xd
  401318:	jne    401300 <main@@Base+0x200>
  40131a:	lea    rdi,[rip+0x1d1e]        # 40303f <_IO_stdin_used@@Base+0x3f>
  401321:	call   401050 <puts@plt>
  401326:	mov    r15,0x405280
  40132d:	lea    rbp,[r15+0x20]
  401331:	mov    rsi,QWORD PTR [r15]
  401334:	mov    rdi,QWORD PTR [rsp+0x8]
  401339:	add    r15,0x8
  40133d:	call   4015b0 <numero_vitorias@@Base>
  401342:	mov    rcx,QWORD PTR [r15-0x8]
  401346:	mov    rdi,QWORD PTR [r14]
  401349:	lea    rdx,[rip+0x1da8]        # 4030f8 <_IO_stdin_used@@Base+0xf8>
  401350:	mov    r8d,eax
  401353:	mov    esi,0x1
  401358:	xor    eax,eax
  40135a:	call   4010e0 <__fprintf_chk@plt>
  40135f:	cmp    rbp,r15
  401362:	jne    401331 <main@@Base+0x231>
  401364:	mov    rdi,r12
  401367:	call   401760 <vetor_apaga@@Base>
  40136c:	mov    rdi,rbx
  40136f:	call   401c20 <lista_apaga@@Base>
  401374:	mov    rdi,r13
  401377:	call   401c20 <lista_apaga@@Base>
  40137c:	mov    rdi,QWORD PTR [rsp+0x8]
  401381:	call   401760 <vetor_apaga@@Base>
  401386:	add    rsp,0x18
  40138a:	xor    eax,eax
  40138c:	pop    rbx
  40138d:	pop    rbp
  40138e:	pop    r12
  401390:	pop    r13
  401392:	pop    r14
  401394:	pop    r15
  401396:	ret    
  401397:	nop    WORD PTR [rax+rax*1+0x0]

00000000004013a0 <_start@@Base>:
  4013a0:	endbr64 
  4013a4:	xor    ebp,ebp
  4013a6:	mov    r9,rdx
  4013a9:	pop    rsi
  4013aa:	mov    rdx,rsp
  4013ad:	and    rsp,0xfffffffffffffff0
  4013b1:	push   rax
  4013b2:	push   rsp
  4013b3:	mov    r8,0x402030
  4013ba:	mov    rcx,0x401fc0
  4013c1:	mov    rdi,0x401100
  4013c8:	call   QWORD PTR [rip+0x3c1a]        # 404fe8 <__libc_start_main@GLIBC_2.2.5>
  4013ce:	hlt    
  4013cf:	nop
  4013d0:	endbr64 
  4013d4:	ret    
  4013d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4013df:	nop
  4013e0:	mov    eax,0x4052a7
  4013e5:	push   rbp
  4013e6:	sub    rax,0x4052a0
  4013ec:	cmp    rax,0xe
  4013f0:	mov    rbp,rsp
  4013f3:	jbe    401410 <_start@@Base+0x70>
  4013f5:	mov    eax,0x0
  4013fa:	test   rax,rax
  4013fd:	je     401410 <_start@@Base+0x70>
  4013ff:	pop    rbp
  401400:	mov    edi,0x4052a0
  401405:	jmp    rax
  401407:	nop    WORD PTR [rax+rax*1+0x0]
  401410:	pop    rbp
  401411:	ret    
  401412:	nop    DWORD PTR [rax+0x0]
  401416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401420:	mov    esi,0x4052a0
  401425:	push   rbp
  401426:	sub    rsi,0x4052a0
  40142d:	sar    rsi,0x3
  401431:	mov    rbp,rsp
  401434:	mov    rax,rsi
  401437:	shr    rax,0x3f
  40143b:	add    rsi,rax
  40143e:	sar    rsi,1
  401441:	je     401458 <_start@@Base+0xb8>
  401443:	mov    eax,0x0
  401448:	test   rax,rax
  40144b:	je     401458 <_start@@Base+0xb8>
  40144d:	pop    rbp
  40144e:	mov    edi,0x4052a0
  401453:	jmp    rax
  401455:	nop    DWORD PTR [rax]
  401458:	pop    rbp
  401459:	ret    
  40145a:	nop    WORD PTR [rax+rax*1+0x0]
  401460:	cmp    BYTE PTR [rip+0x3e39],0x0        # 4052a0 <__bss_start@@Base>
  401467:	jne    40147a <_start@@Base+0xda>
  401469:	push   rbp
  40146a:	mov    rbp,rsp
  40146d:	call   4013e0 <_start@@Base+0x40>
  401472:	pop    rbp
  401473:	mov    BYTE PTR [rip+0x3e26],0x1        # 4052a0 <__bss_start@@Base>
  40147a:	repz ret 
  40147c:	nop    DWORD PTR [rax+0x0]
  401480:	mov    edi,0x404e10
  401485:	cmp    QWORD PTR [rdi],0x0
  401489:	jne    401490 <_start@@Base+0xf0>
  40148b:	jmp    401420 <_start@@Base+0x80>
  40148d:	nop    DWORD PTR [rax]
  401490:	mov    eax,0x0
  401495:	test   rax,rax
  401498:	je     40148b <_start@@Base+0xeb>
  40149a:	push   rbp
  40149b:	mov    rbp,rsp
  40149e:	call   rax
  4014a0:	pop    rbp
  4014a1:	jmp    401420 <_start@@Base+0x80>
  4014a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004014b0 <tira_carta@@Base>:
  4014b0:	push   r14
  4014b2:	push   r13
  4014b4:	mov    r13,rdi
  4014b7:	push   r12
  4014b9:	mov    r14,QWORD PTR [r13+0x0]
  4014bd:	push   rbp
  4014be:	push   rbx
  4014bf:	xor    ebp,ebp
  4014c1:	mov    rax,QWORD PTR [rsi]
  4014c4:	mov    r12,QWORD PTR [r14]
  4014c7:	mov    rdi,QWORD PTR [rax]
  4014ca:	mov    rbx,QWORD PTR [rax+0x8]
  4014ce:	jmp    4014da <tira_carta@@Base+0x2a>
  4014d0:	mov    rdi,QWORD PTR [rbx]
  4014d3:	mov    rbx,QWORD PTR [rbx+0x8]
  4014d7:	add    ebp,0x1
  4014da:	mov    rsi,r12
  4014dd:	call   401090 <strcmp@plt>
  4014e2:	test   eax,eax
  4014e4:	jne    4014d0 <tira_carta@@Base+0x20>
  4014e6:	mov    rsi,r14
  4014e9:	mov    rdi,r13
  4014ec:	call   401d90 <lista_remove@@Base>
  4014f1:	pop    rbx
  4014f2:	mov    eax,ebp
  4014f4:	pop    rbp
  4014f5:	pop    r12
  4014f7:	pop    r13
  4014f9:	pop    r14
  4014fb:	ret    
  4014fc:	nop    DWORD PTR [rax+0x0]

0000000000401500 <faz_jogada@@Base>:
  401500:	push   r15
  401502:	push   r14
  401504:	mov    r14,rsi
  401507:	push   r13
  401509:	push   r12
  40150b:	mov    r12,rdi
  40150e:	push   rbp
  40150f:	push   rbx
  401510:	mov    r13,rdx
  401513:	mov    ebx,0x1
  401518:	sub    rsp,0x8
  40151c:	movsxd rdi,DWORD PTR [rdi]
  40151f:	mov    r15,rdi
  401522:	shl    rdi,0x2
  401526:	call   4010b0 <malloc@plt>
  40152b:	test   r15d,r15d
  40152e:	mov    rbp,rax
  401531:	jle    4015a5 <faz_jogada@@Base+0xa5>
  401533:	nop    DWORD PTR [rax+rax*1+0x0]
  401538:	mov    rsi,r13
  40153b:	mov    rdi,r14
  40153e:	call   4014b0 <tira_carta@@Base>
  401543:	mov    edx,DWORD PTR [r12]
  401547:	mov    DWORD PTR [rbp+rbx*4-0x4],eax
  40154b:	mov    eax,ebx
  40154d:	add    rbx,0x1
  401551:	cmp    edx,eax
  401553:	jg     401538 <faz_jogada@@Base+0x38>
  401555:	test   edx,edx
  401557:	jle    4015a5 <faz_jogada@@Base+0xa5>
  401559:	mov    rdi,0xffffffffffffffff
  401560:	xor    eax,eax
  401562:	mov    esi,edi
  401564:	nop    DWORD PTR [rax+0x0]
  401568:	mov    ecx,DWORD PTR [rbp+rax*4+0x0]
  40156c:	cmp    ecx,esi
  40156e:	jle    401575 <faz_jogada@@Base+0x75>
  401570:	movsxd rdi,eax
  401573:	mov    esi,ecx
  401575:	add    rax,0x1
  401579:	cmp    edx,eax
  40157b:	jg     401568 <faz_jogada@@Base+0x68>
  40157d:	lea    rbx,[rdi*8+0x0]
  401585:	mov    rdi,rbp
  401588:	call   401030 <free@plt>
  40158d:	mov    rax,QWORD PTR [r12+0x8]
  401592:	mov    rax,QWORD PTR [rax+rbx*1]
  401596:	add    rsp,0x8
  40159a:	pop    rbx
  40159b:	pop    rbp
  40159c:	pop    r12
  40159e:	pop    r13
  4015a0:	pop    r14
  4015a2:	pop    r15
  4015a4:	ret    
  4015a5:	mov    rbx,0xfffffffffffffff8
  4015ac:	jmp    401585 <faz_jogada@@Base+0x85>
  4015ae:	xchg   ax,ax

00000000004015b0 <numero_vitorias@@Base>:
  4015b0:	push   r13
  4015b2:	push   r12
  4015b4:	push   rbp
  4015b5:	push   rbx
  4015b6:	sub    rsp,0x8
  4015ba:	mov    eax,DWORD PTR [rdi]
  4015bc:	test   eax,eax
  4015be:	jle    4015ff <numero_vitorias@@Base+0x4f>
  4015c0:	mov    rbx,QWORD PTR [rdi+0x8]
  4015c4:	sub    eax,0x1
  4015c7:	mov    r12,rsi
  4015ca:	xor    ebp,ebp
  4015cc:	lea    r13,[rbx+rax*8+0x8]
  4015d1:	nop    DWORD PTR [rax+0x0]
  4015d8:	mov    rsi,QWORD PTR [rbx]
  4015db:	mov    rdi,r12
  4015de:	call   401090 <strcmp@plt>
  4015e3:	cmp    eax,0x1
  4015e6:	adc    ebp,0x0
  4015e9:	add    rbx,0x8
  4015ed:	cmp    rbx,r13
  4015f0:	jne    4015d8 <numero_vitorias@@Base+0x28>
  4015f2:	add    rsp,0x8
  4015f6:	mov    eax,ebp
  4015f8:	pop    rbx
  4015f9:	pop    rbp
  4015fa:	pop    r12
  4015fc:	pop    r13
  4015fe:	ret    
  4015ff:	xor    ebp,ebp
  401601:	jmp    4015f2 <numero_vitorias@@Base+0x42>
  401603:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40160e:	xchg   ax,ax

0000000000401610 <insere_carta@@Base>:
  401610:	push   rbp
  401611:	push   rbx
  401612:	mov    rbx,rdi
  401615:	sub    rsp,0x18
  401619:	mov    rax,QWORD PTR fs:0x28
  401622:	mov    QWORD PTR [rsp+0x8],rax
  401627:	xor    eax,eax
  401629:	cmp    esi,0x7
  40162c:	jle    401688 <insere_carta@@Base+0x78>
  40162e:	cmp    esi,0x8
  401631:	je     4016c0 <insere_carta@@Base+0xb0>
  401637:	cmp    esi,0x9
  40163a:	je     4016e0 <insere_carta@@Base+0xd0>
  401640:	cmp    esi,0xa
  401643:	je     4016f8 <insere_carta@@Base+0xe8>
  401649:	cmp    esi,0xb
  40164c:	je     401710 <insere_carta@@Base+0x100>
  401652:	cmp    esi,0xc
  401655:	lea    rbp,[rsp+0x4]
  40165a:	je     4016b0 <insere_carta@@Base+0xa0>
  40165c:	mov    rdx,QWORD PTR [rbx]
  40165f:	mov    rsi,rbp
  401662:	mov    rdi,rbx
  401665:	call   401cd0 <lista_insere@@Base>
  40166a:	mov    rax,QWORD PTR [rsp+0x8]
  40166f:	xor    rax,QWORD PTR fs:0x28
  401678:	jne    401724 <insere_carta@@Base+0x114>
  40167e:	add    rsp,0x18
  401682:	pop    rbx
  401683:	pop    rbp
  401684:	ret    
  401685:	nop    DWORD PTR [rax]
  401688:	lea    rbp,[rsp+0x4]
  40168d:	lea    r8d,[rsi+0x32]
  401691:	lea    rcx,[rip+0x196c]        # 403004 <_IO_stdin_used@@Base+0x4>
  401698:	mov    edx,0x4
  40169d:	mov    esi,0x1
  4016a2:	mov    rdi,rbp
  4016a5:	call   4010f0 <__sprintf_chk@plt>
  4016aa:	jmp    40165c <insere_carta@@Base+0x4c>
  4016ac:	nop    DWORD PTR [rax+0x0]
  4016b0:	mov    eax,0x41
  4016b5:	mov    WORD PTR [rsp+0x4],ax
  4016ba:	jmp    40165c <insere_carta@@Base+0x4c>
  4016bc:	nop    DWORD PTR [rax+0x0]
  4016c0:	mov    edi,0x3031
  4016c5:	mov    BYTE PTR [rsp+0x6],0x0
  4016ca:	lea    rbp,[rsp+0x4]
  4016cf:	mov    WORD PTR [rsp+0x4],di
  4016d4:	jmp    40165c <insere_carta@@Base+0x4c>
  4016d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016e0:	mov    esi,0x4a
  4016e5:	lea    rbp,[rsp+0x4]
  4016ea:	mov    WORD PTR [rsp+0x4],si
  4016ef:	jmp    40165c <insere_carta@@Base+0x4c>
  4016f4:	nop    DWORD PTR [rax+0x0]
  4016f8:	mov    ecx,0x51
  4016fd:	lea    rbp,[rsp+0x4]
  401702:	mov    WORD PTR [rsp+0x4],cx
  401707:	jmp    40165c <insere_carta@@Base+0x4c>
  40170c:	nop    DWORD PTR [rax+0x0]
  401710:	mov    edx,0x4b
  401715:	lea    rbp,[rsp+0x4]
  40171a:	mov    WORD PTR [rsp+0x4],dx
  40171f:	jmp    40165c <insere_carta@@Base+0x4c>
  401724:	call   401070 <__stack_chk_fail@plt>
  401729:	nop    DWORD PTR [rax+0x0]

0000000000401730 <vetor_novo@@Base>:
  401730:	sub    rsp,0x8
  401734:	mov    edi,0x10
  401739:	call   4010b0 <malloc@plt>
  40173e:	test   rax,rax
  401741:	je     401758 <vetor_novo@@Base+0x28>
  401743:	mov    DWORD PTR [rax],0x0
  401749:	mov    DWORD PTR [rax+0x4],0x0
  401750:	mov    QWORD PTR [rax+0x8],0x0
  401758:	add    rsp,0x8
  40175c:	ret    
  40175d:	nop    DWORD PTR [rax]

0000000000401760 <vetor_apaga@@Base>:
  401760:	test   rdi,rdi
  401763:	je     4017b8 <vetor_apaga@@Base+0x58>
  401765:	push   r12
  401767:	push   rbp
  401768:	xor    ebp,ebp
  40176a:	push   rbx
  40176b:	mov    eax,DWORD PTR [rdi]
  40176d:	xor    ebx,ebx
  40176f:	mov    r12,rdi
  401772:	test   eax,eax
  401774:	jle    40179b <vetor_apaga@@Base+0x3b>
  401776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401780:	mov    rax,QWORD PTR [r12+0x8]
  401785:	add    ebx,0x1
  401788:	mov    rdi,QWORD PTR [rax+rbp*1]
  40178c:	add    rbp,0x8
  401790:	call   401030 <free@plt>
  401795:	cmp    DWORD PTR [r12],ebx
  401799:	jg     401780 <vetor_apaga@@Base+0x20>
  40179b:	mov    rdi,QWORD PTR [r12+0x8]
  4017a0:	call   401030 <free@plt>
  4017a5:	pop    rbx
  4017a6:	mov    rdi,r12
  4017a9:	pop    rbp
  4017aa:	pop    r12
  4017ac:	jmp    401030 <free@plt>
  4017b1:	nop    DWORD PTR [rax+0x0]
  4017b8:	repz ret 
  4017ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000004017c0 <vetor_atribui@@Base>:
  4017c0:	test   rdi,rdi
  4017c3:	je     401870 <vetor_atribui@@Base+0xb0>
  4017c9:	mov    eax,esi
  4017cb:	shr    eax,0x1f
  4017ce:	test   al,al
  4017d0:	jne    401870 <vetor_atribui@@Base+0xb0>
  4017d6:	cmp    esi,DWORD PTR [rdi]
  4017d8:	jge    401870 <vetor_atribui@@Base+0xb0>
  4017de:	push   r15
  4017e0:	push   r14
  4017e2:	movsxd r14,esi
  4017e5:	push   r13
  4017e7:	push   r12
  4017e9:	mov    r13,rdx
  4017ec:	push   rbp
  4017ed:	push   rbx
  4017ee:	mov    rbp,rdi
  4017f1:	mov    rdi,rdx
  4017f4:	mov    r12,r14
  4017f7:	sub    rsp,0x18
  4017fb:	call   401060 <strlen@plt>
  401800:	mov    QWORD PTR [rsp+0x8],rax
  401805:	mov    rax,QWORD PTR [rbp+0x8]
  401809:	lea    r15,[rax+r14*8]
  40180d:	mov    rbx,QWORD PTR [r15]
  401810:	mov    rdi,rbx
  401813:	call   401060 <strlen@plt>
  401818:	mov    rdx,QWORD PTR [rsp+0x8]
  40181d:	mov    ecx,edx
  40181f:	cmp    rax,rcx
  401822:	jb     401848 <vetor_atribui@@Base+0x88>
  401824:	mov    rsi,r13
  401827:	mov    rdi,rbx
  40182a:	call   401040 <strcpy@plt>
  40182f:	mov    eax,r12d
  401832:	add    rsp,0x18
  401836:	pop    rbx
  401837:	pop    rbp
  401838:	pop    r12
  40183a:	pop    r13
  40183c:	pop    r14
  40183e:	pop    r15
  401840:	ret    
  401841:	nop    DWORD PTR [rax+0x0]
  401848:	lea    esi,[rdx+0x1]
  40184b:	mov    rdi,rbx
  40184e:	call   4010c0 <realloc@plt>
  401853:	mov    QWORD PTR [r15],rax
  401856:	mov    rax,QWORD PTR [rbp+0x8]
  40185a:	mov    rbx,QWORD PTR [rax+r14*8]
  40185e:	test   rbx,rbx
  401861:	jne    401824 <vetor_atribui@@Base+0x64>
  401863:	mov    eax,0xffffffff
  401868:	jmp    401832 <vetor_atribui@@Base+0x72>
  40186a:	nop    WORD PTR [rax+rax*1+0x0]
  401870:	mov    eax,0xffffffff
  401875:	ret    
  401876:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401880 <vetor_tamanho@@Base>:
  401880:	test   rdi,rdi
  401883:	je     401888 <vetor_tamanho@@Base+0x8>
  401885:	mov    eax,DWORD PTR [rdi]
  401887:	ret    
  401888:	mov    eax,0xffffffff
  40188d:	ret    
  40188e:	xchg   ax,ax

0000000000401890 <vetor_elemento@@Base>:
  401890:	test   rdi,rdi
  401893:	je     4018b0 <vetor_elemento@@Base+0x20>
  401895:	mov    eax,esi
  401897:	shr    eax,0x1f
  40189a:	test   al,al
  40189c:	jne    4018b0 <vetor_elemento@@Base+0x20>
  40189e:	cmp    esi,DWORD PTR [rdi]
  4018a0:	jge    4018b0 <vetor_elemento@@Base+0x20>
  4018a2:	mov    rax,QWORD PTR [rdi+0x8]
  4018a6:	movsxd rsi,esi
  4018a9:	mov    rax,QWORD PTR [rax+rsi*8]
  4018ad:	ret    
  4018ae:	xchg   ax,ax
  4018b0:	xor    eax,eax
  4018b2:	ret    
  4018b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4018be:	xchg   ax,ax

00000000004018c0 <vetor_insere@@Base>:
  4018c0:	test   rdi,rdi
  4018c3:	je     4019bd <vetor_insere@@Base+0xfd>
  4018c9:	mov    eax,edx
  4018cb:	shr    eax,0x1f
  4018ce:	test   al,al
  4018d0:	jne    4019bd <vetor_insere@@Base+0xfd>
  4018d6:	push   r14
  4018d8:	push   r13
  4018da:	push   r12
  4018dc:	push   rbp
  4018dd:	push   rbx
  4018de:	mov    ebp,DWORD PTR [rdi]
  4018e0:	cmp    edx,ebp
  4018e2:	jg     4019b6 <vetor_insere@@Base+0xf6>
  4018e8:	cmp    ebp,DWORD PTR [rdi+0x4]
  4018eb:	mov    ebx,edx
  4018ed:	mov    r12,rsi
  4018f0:	mov    r13,rdi
  4018f3:	je     401970 <vetor_insere@@Base+0xb0>
  4018f5:	mov    r14,QWORD PTR [rdi+0x8]
  4018f9:	lea    edx,[rbp-0x1]
  4018fc:	cmp    ebx,edx
  4018fe:	jg     401928 <vetor_insere@@Base+0x68>
  401900:	mov    eax,ebx
  401902:	movsxd rdx,edx
  401905:	not    eax
  401907:	lea    rcx,[r14+rdx*8]
  40190b:	add    eax,ebp
  40190d:	sub    rdx,rax
  401910:	lea    rdx,[r14+rdx*8-0x8]
  401915:	nop    DWORD PTR [rax]
  401918:	mov    r8,QWORD PTR [rcx]
  40191b:	sub    rcx,0x8
  40191f:	mov    QWORD PTR [rcx+0x10],r8
  401923:	cmp    rdx,rcx
  401926:	jne    401918 <vetor_insere@@Base+0x58>
  401928:	mov    rdi,r12
  40192b:	call   401060 <strlen@plt>
  401930:	lea    rdi,[rax+0x1]
  401934:	mov    esi,0x1
  401939:	call   401080 <calloc@plt>
  40193e:	movsxd rdx,ebx
  401941:	test   rax,rax
  401944:	mov    QWORD PTR [r14+rdx*8],rax
  401948:	je     4019b6 <vetor_insere@@Base+0xf6>
  40194a:	mov    rsi,r12
  40194d:	mov    rdi,rax
  401950:	add    ebp,0x1
  401953:	call   401040 <strcpy@plt>
  401958:	mov    DWORD PTR [r13+0x0],ebp
  40195c:	mov    eax,ebx
  40195e:	pop    rbx
  40195f:	pop    rbp
  401960:	pop    r12
  401962:	pop    r13
  401964:	pop    r14
  401966:	ret    
  401967:	nop    WORD PTR [rax+rax*1+0x0]
  401970:	test   ebp,ebp
  401972:	je     4019a8 <vetor_insere@@Base+0xe8>
  401974:	add    ebp,ebp
  401976:	mov    DWORD PTR [rdi+0x4],ebp
  401979:	movsxd rbp,ebp
  40197c:	lea    rsi,[rbp*8+0x0]
  401984:	mov    rdi,QWORD PTR [r13+0x8]
  401988:	call   4010c0 <realloc@plt>
  40198d:	test   rax,rax
  401990:	mov    QWORD PTR [r13+0x8],rax
  401994:	je     4019b6 <vetor_insere@@Base+0xf6>
  401996:	mov    ebp,DWORD PTR [r13+0x0]
  40199a:	mov    r14,rax
  40199d:	jmp    4018f9 <vetor_insere@@Base+0x39>
  4019a2:	nop    WORD PTR [rax+rax*1+0x0]
  4019a8:	mov    DWORD PTR [rdi+0x4],0x1
  4019af:	mov    esi,0x8
  4019b4:	jmp    401984 <vetor_insere@@Base+0xc4>
  4019b6:	mov    eax,0xffffffff
  4019bb:	jmp    40195e <vetor_insere@@Base+0x9e>
  4019bd:	mov    eax,0xffffffff
  4019c2:	ret    
  4019c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4019ce:	xchg   ax,ax

00000000004019d0 <vetor_remove@@Base>:
  4019d0:	test   rdi,rdi
  4019d3:	je     401a44 <vetor_remove@@Base+0x74>
  4019d5:	mov    eax,esi
  4019d7:	shr    eax,0x1f
  4019da:	test   al,al
  4019dc:	jne    401a44 <vetor_remove@@Base+0x74>
  4019de:	cmp    esi,DWORD PTR [rdi]
  4019e0:	mov    eax,0xffffffff
  4019e5:	jge    401a42 <vetor_remove@@Base+0x72>
  4019e7:	push   rbp
  4019e8:	push   rbx
  4019e9:	movsxd rdx,esi
  4019ec:	mov    rbp,rdi
  4019ef:	mov    rbx,rdx
  4019f2:	sub    rsp,0x8
  4019f6:	mov    rax,QWORD PTR [rdi+0x8]
  4019fa:	mov    rdi,QWORD PTR [rax+rdx*8]
  4019fe:	call   401030 <free@plt>
  401a03:	mov    r8d,DWORD PTR [rbp+0x0]
  401a07:	lea    esi,[rbx+0x1]
  401a0a:	cmp    esi,r8d
  401a0d:	jge    401a32 <vetor_remove@@Base+0x62>
  401a0f:	mov    rdx,QWORD PTR [rbp+0x8]
  401a13:	movsxd rax,esi
  401a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a20:	mov    rcx,QWORD PTR [rdx+rax*8]
  401a24:	mov    QWORD PTR [rdx+rax*8-0x8],rcx
  401a29:	add    rax,0x1
  401a2d:	cmp    r8d,eax
  401a30:	jg     401a20 <vetor_remove@@Base+0x50>
  401a32:	sub    r8d,0x1
  401a36:	xor    eax,eax
  401a38:	mov    DWORD PTR [rbp+0x0],r8d
  401a3c:	add    rsp,0x8
  401a40:	pop    rbx
  401a41:	pop    rbp
  401a42:	repz ret 
  401a44:	mov    eax,0xffffffff
  401a49:	ret    
  401a4a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000401a50 <vetor_pesquisa@@Base>:
  401a50:	test   rdi,rdi
  401a53:	push   r14
  401a55:	push   r13
  401a57:	push   r12
  401a59:	push   rbp
  401a5a:	push   rbx
  401a5b:	je     401ab0 <vetor_pesquisa@@Base+0x60>
  401a5d:	mov    r13d,DWORD PTR [rdi]
  401a60:	mov    r12d,0xffffffff
  401a66:	test   r13d,r13d
  401a69:	jle    401a9c <vetor_pesquisa@@Base+0x4c>
  401a6b:	mov    rbp,rsi
  401a6e:	mov    r14,QWORD PTR [rdi+0x8]
  401a72:	xor    ebx,ebx
  401a74:	jmp    401a89 <vetor_pesquisa@@Base+0x39>
  401a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a80:	add    rbx,0x1
  401a84:	cmp    r13d,ebx
  401a87:	jle    401ab0 <vetor_pesquisa@@Base+0x60>
  401a89:	mov    rdi,QWORD PTR [r14+rbx*8]
  401a8d:	mov    rsi,rbp
  401a90:	mov    r12d,ebx
  401a93:	call   401090 <strcmp@plt>
  401a98:	test   eax,eax
  401a9a:	jne    401a80 <vetor_pesquisa@@Base+0x30>
  401a9c:	pop    rbx
  401a9d:	mov    eax,r12d
  401aa0:	pop    rbp
  401aa1:	pop    r12
  401aa3:	pop    r13
  401aa5:	pop    r14
  401aa7:	ret    
  401aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  401ab0:	mov    r12d,0xffffffff
  401ab6:	pop    rbx
  401ab7:	mov    eax,r12d
  401aba:	pop    rbp
  401abb:	pop    r12
  401abd:	pop    r13
  401abf:	pop    r14
  401ac1:	ret    
  401ac2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401acd:	nop    DWORD PTR [rax]

0000000000401ad0 <vetor_ordena@@Base>:
  401ad0:	test   rdi,rdi
  401ad3:	je     401b72 <vetor_ordena@@Base+0xa2>
  401ad9:	push   r15
  401adb:	push   r14
  401add:	push   r13
  401adf:	push   r12
  401ae1:	push   rbp
  401ae2:	push   rbx
  401ae3:	sub    rsp,0x18
  401ae7:	mov    eax,DWORD PTR [rdi]
  401ae9:	cmp    eax,0x1
  401aec:	mov    DWORD PTR [rsp+0xc],eax
  401af0:	jle    401b61 <vetor_ordena@@Base+0x91>
  401af2:	mov    r13,QWORD PTR [rdi+0x8]
  401af6:	mov    DWORD PTR [rsp+0x8],0x1
  401afe:	lea    rax,[r13+0x8]
  401b02:	mov    QWORD PTR [rsp],rax
  401b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b10:	mov    rax,QWORD PTR [rsp]
  401b14:	mov    ebx,DWORD PTR [rsp+0x8]
  401b18:	mov    rbp,QWORD PTR [rax]
  401b1b:	mov    r14,rax
  401b1e:	xchg   ax,ax
  401b20:	mov    r15,QWORD PTR [r14-0x8]
  401b24:	mov    r12,r14
  401b27:	mov    rdi,rbp
  401b2a:	sub    r12,r13
  401b2d:	mov    rsi,r15
  401b30:	call   401090 <strcmp@plt>
  401b35:	test   eax,eax
  401b37:	jns    401b48 <vetor_ordena@@Base+0x78>
  401b39:	mov    QWORD PTR [r14],r15
  401b3c:	sub    r14,0x8
  401b40:	sub    ebx,0x1
  401b43:	jne    401b20 <vetor_ordena@@Base+0x50>
  401b45:	xor    r12d,r12d
  401b48:	add    DWORD PTR [rsp+0x8],0x1
  401b4d:	add    QWORD PTR [rsp],0x8
  401b52:	mov    eax,DWORD PTR [rsp+0x8]
  401b56:	cmp    DWORD PTR [rsp+0xc],eax
  401b5a:	mov    QWORD PTR [r13+r12*1+0x0],rbp
  401b5f:	jne    401b10 <vetor_ordena@@Base+0x40>
  401b61:	add    rsp,0x18
  401b65:	xor    eax,eax
  401b67:	pop    rbx
  401b68:	pop    rbp
  401b69:	pop    r12
  401b6b:	pop    r13
  401b6d:	pop    r14
  401b6f:	pop    r15
  401b71:	ret    
  401b72:	mov    eax,0xffffffff
  401b77:	ret    
  401b78:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401b80 <novo_str@@Base>:
  401b80:	push   r12
  401b82:	push   rbp
  401b83:	mov    r12,rdi
  401b86:	push   rbx
  401b87:	mov    edi,0x18
  401b8c:	call   4010b0 <malloc@plt>
  401b91:	test   rax,rax
  401b94:	mov    rbx,rax
  401b97:	je     401bd3 <novo_str@@Base+0x53>
  401b99:	mov    rdi,r12
  401b9c:	call   401060 <strlen@plt>
  401ba1:	lea    rbp,[rax+0x1]
  401ba5:	mov    rdi,rbp
  401ba8:	call   4010b0 <malloc@plt>
  401bad:	test   rax,rax
  401bb0:	mov    QWORD PTR [rbx],rax
  401bb3:	je     401be0 <novo_str@@Base+0x60>
  401bb5:	mov    rdx,rbp
  401bb8:	mov    rsi,r12
  401bbb:	mov    rdi,rax
  401bbe:	call   4010a0 <memcpy@plt>
  401bc3:	mov    QWORD PTR [rbx+0x8],0x0
  401bcb:	mov    QWORD PTR [rbx+0x10],0x0
  401bd3:	mov    rax,rbx
  401bd6:	pop    rbx
  401bd7:	pop    rbp
  401bd8:	pop    r12
  401bda:	ret    
  401bdb:	nop    DWORD PTR [rax+rax*1+0x0]
  401be0:	mov    rdi,rbx
  401be3:	xor    ebx,ebx
  401be5:	call   401030 <free@plt>
  401bea:	jmp    401bd3 <novo_str@@Base+0x53>
  401bec:	nop    DWORD PTR [rax+0x0]

0000000000401bf0 <lista_nova@@Base>:
  401bf0:	sub    rsp,0x8
  401bf4:	mov    edi,0x18
  401bf9:	call   4010b0 <malloc@plt>
  401bfe:	test   rax,rax
  401c01:	je     401c19 <lista_nova@@Base+0x29>
  401c03:	mov    QWORD PTR [rax],0x0
  401c0a:	mov    QWORD PTR [rax+0x8],0x0
  401c12:	mov    DWORD PTR [rax+0x10],0x0
  401c19:	add    rsp,0x8
  401c1d:	ret    
  401c1e:	xchg   ax,ax

0000000000401c20 <lista_apaga@@Base>:
  401c20:	test   rdi,rdi
  401c23:	je     401c70 <lista_apaga@@Base+0x50>
  401c25:	push   rbp
  401c26:	push   rbx
  401c27:	mov    rbp,rdi
  401c2a:	sub    rsp,0x8
  401c2e:	mov    rbx,QWORD PTR [rdi]
  401c31:	test   rbx,rbx
  401c34:	je     401c61 <lista_apaga@@Base+0x41>
  401c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c40:	mov    rax,QWORD PTR [rbx+0x8]
  401c44:	mov    rdi,QWORD PTR [rbx]
  401c47:	mov    QWORD PTR [rbp+0x0],rax
  401c4b:	call   401030 <free@plt>
  401c50:	mov    rdi,rbx
  401c53:	call   401030 <free@plt>
  401c58:	mov    rbx,QWORD PTR [rbp+0x0]
  401c5c:	test   rbx,rbx
  401c5f:	jne    401c40 <lista_apaga@@Base+0x20>
  401c61:	add    rsp,0x8
  401c65:	mov    rdi,rbp
  401c68:	pop    rbx
  401c69:	pop    rbp
  401c6a:	jmp    401030 <free@plt>
  401c6f:	nop
  401c70:	repz ret 
  401c72:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401c7d:	nop    DWORD PTR [rax]

0000000000401c80 <lista_tamanho@@Base>:
  401c80:	test   rdi,rdi
  401c83:	je     401c89 <lista_tamanho@@Base+0x9>
  401c85:	mov    eax,DWORD PTR [rdi+0x10]
  401c88:	ret    
  401c89:	mov    eax,0xffffffff
  401c8e:	ret    
  401c8f:	nop

0000000000401c90 <lista_inicio@@Base>:
  401c90:	test   rdi,rdi
  401c93:	je     401ca0 <lista_inicio@@Base+0x10>
  401c95:	mov    rax,QWORD PTR [rdi]
  401c98:	ret    
  401c99:	nop    DWORD PTR [rax+0x0]
  401ca0:	xor    eax,eax
  401ca2:	ret    
  401ca3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401cae:	xchg   ax,ax

0000000000401cb0 <lista_fim@@Base>:
  401cb0:	test   rdi,rdi
  401cb3:	je     401cc0 <lista_fim@@Base+0x10>
  401cb5:	mov    rax,QWORD PTR [rdi+0x8]
  401cb9:	ret    
  401cba:	nop    WORD PTR [rax+rax*1+0x0]
  401cc0:	xor    eax,eax
  401cc2:	ret    
  401cc3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401cce:	xchg   ax,ax

0000000000401cd0 <lista_insere@@Base>:
  401cd0:	test   rdi,rdi
  401cd3:	je     401d70 <lista_insere@@Base+0xa0>
  401cd9:	test   rsi,rsi
  401cdc:	je     401d70 <lista_insere@@Base+0xa0>
  401ce2:	push   rbp
  401ce3:	push   rbx
  401ce4:	mov    rbp,rdi
  401ce7:	mov    rdi,rsi
  401cea:	mov    rbx,rdx
  401ced:	sub    rsp,0x8
  401cf1:	call   401b80 <novo_str@@Base>
  401cf6:	test   rax,rax
  401cf9:	je     401d30 <lista_insere@@Base+0x60>
  401cfb:	add    DWORD PTR [rbp+0x10],0x1
  401cff:	test   rbx,rbx
  401d02:	je     401d40 <lista_insere@@Base+0x70>
  401d04:	cmp    rbx,QWORD PTR [rbp+0x0]
  401d08:	je     401d60 <lista_insere@@Base+0x90>
  401d0a:	mov    rdx,QWORD PTR [rbx+0x10]
  401d0e:	mov    QWORD PTR [rax+0x8],rbx
  401d12:	mov    QWORD PTR [rax+0x10],rdx
  401d16:	mov    rdx,QWORD PTR [rbx+0x10]
  401d1a:	mov    QWORD PTR [rdx+0x8],rax
  401d1e:	mov    QWORD PTR [rbx+0x10],rax
  401d22:	add    rsp,0x8
  401d26:	pop    rbx
  401d27:	pop    rbp
  401d28:	ret    
  401d29:	nop    DWORD PTR [rax+0x0]
  401d30:	add    rsp,0x8
  401d34:	xor    eax,eax
  401d36:	pop    rbx
  401d37:	pop    rbp
  401d38:	ret    
  401d39:	nop    DWORD PTR [rax+0x0]
  401d40:	cmp    QWORD PTR [rbp+0x0],0x0
  401d45:	je     401d78 <lista_insere@@Base+0xa8>
  401d47:	mov    rdx,QWORD PTR [rbp+0x8]
  401d4b:	mov    QWORD PTR [rax+0x10],rdx
  401d4f:	mov    QWORD PTR [rdx+0x8],rax
  401d53:	mov    QWORD PTR [rbp+0x8],rax
  401d57:	jmp    401d22 <lista_insere@@Base+0x52>
  401d59:	nop    DWORD PTR [rax+0x0]
  401d60:	mov    QWORD PTR [rax+0x8],rbx
  401d64:	mov    QWORD PTR [rbx+0x10],rax
  401d68:	mov    QWORD PTR [rbp+0x0],rax
  401d6c:	jmp    401d22 <lista_insere@@Base+0x52>
  401d6e:	xchg   ax,ax
  401d70:	xor    eax,eax
  401d72:	ret    
  401d73:	nop    DWORD PTR [rax+rax*1+0x0]
  401d78:	mov    QWORD PTR [rbp+0x8],rax
  401d7c:	mov    QWORD PTR [rbp+0x0],rax
  401d80:	jmp    401d22 <lista_insere@@Base+0x52>
  401d82:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401d8d:	nop    DWORD PTR [rax]

0000000000401d90 <lista_remove@@Base>:
  401d90:	push   rbp
  401d91:	push   rbx
  401d92:	sub    rsp,0x8
  401d96:	test   rdi,rdi
  401d99:	je     401e00 <lista_remove@@Base+0x70>
  401d9b:	test   rsi,rsi
  401d9e:	je     401e00 <lista_remove@@Base+0x70>
  401da0:	mov    rax,QWORD PTR [rsi+0x10]
  401da4:	sub    DWORD PTR [rdi+0x10],0x1
  401da8:	test   rax,rax
  401dab:	je     401de0 <lista_remove@@Base+0x50>
  401dad:	mov    rdx,QWORD PTR [rsi+0x8]
  401db1:	mov    QWORD PTR [rax+0x8],rdx
  401db5:	mov    rbp,QWORD PTR [rsi+0x8]
  401db9:	test   rbp,rbp
  401dbc:	je     401df0 <lista_remove@@Base+0x60>
  401dbe:	mov    QWORD PTR [rbp+0x10],rax
  401dc2:	mov    rdi,QWORD PTR [rsi]
  401dc5:	mov    rbx,rsi
  401dc8:	call   401030 <free@plt>
  401dcd:	mov    rdi,rbx
  401dd0:	call   401030 <free@plt>
  401dd5:	add    rsp,0x8
  401dd9:	mov    rax,rbp
  401ddc:	pop    rbx
  401ddd:	pop    rbp
  401dde:	ret    
  401ddf:	nop
  401de0:	mov    rbp,QWORD PTR [rsi+0x8]
  401de4:	test   rbp,rbp
  401de7:	mov    QWORD PTR [rdi],rbp
  401dea:	jne    401dbe <lista_remove@@Base+0x2e>
  401dec:	nop    DWORD PTR [rax+0x0]
  401df0:	mov    QWORD PTR [rdi+0x8],rax
  401df4:	jmp    401dc2 <lista_remove@@Base+0x32>
  401df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e00:	xor    ebp,ebp
  401e02:	add    rsp,0x8
  401e06:	mov    rax,rbp
  401e09:	pop    rbx
  401e0a:	pop    rbp
  401e0b:	ret    
  401e0c:	nop    DWORD PTR [rax+0x0]

0000000000401e10 <lista_pesquisa@@Base>:
  401e10:	push   rbp
  401e11:	push   rbx
  401e12:	xor    ebx,ebx
  401e14:	sub    rsp,0x8
  401e18:	test   rdi,rdi
  401e1b:	je     401e58 <lista_pesquisa@@Base+0x48>
  401e1d:	test   rsi,rsi
  401e20:	je     401e58 <lista_pesquisa@@Base+0x48>
  401e22:	cmp    edx,0x1
  401e25:	ja     401e58 <lista_pesquisa@@Base+0x48>
  401e27:	test   edx,edx
  401e29:	mov    rbp,rsi
  401e2c:	jne    401e68 <lista_pesquisa@@Base+0x58>
  401e2e:	mov    rbx,QWORD PTR [rdi]
  401e31:	test   rbx,rbx
  401e34:	jne    401e49 <lista_pesquisa@@Base+0x39>
  401e36:	jmp    401e58 <lista_pesquisa@@Base+0x48>
  401e38:	nop    DWORD PTR [rax+rax*1+0x0]
  401e40:	mov    rbx,QWORD PTR [rbx+0x8]
  401e44:	test   rbx,rbx
  401e47:	je     401e58 <lista_pesquisa@@Base+0x48>
  401e49:	mov    rdi,QWORD PTR [rbx]
  401e4c:	mov    rsi,rbp
  401e4f:	call   401090 <strcmp@plt>
  401e54:	test   eax,eax
  401e56:	jne    401e40 <lista_pesquisa@@Base+0x30>
  401e58:	add    rsp,0x8
  401e5c:	mov    rax,rbx
  401e5f:	pop    rbx
  401e60:	pop    rbp
  401e61:	ret    
  401e62:	nop    WORD PTR [rax+rax*1+0x0]
  401e68:	mov    rbx,QWORD PTR [rdi+0x8]
  401e6c:	test   rbx,rbx
  401e6f:	jne    401e81 <lista_pesquisa@@Base+0x71>
  401e71:	jmp    401e58 <lista_pesquisa@@Base+0x48>
  401e73:	nop    DWORD PTR [rax+rax*1+0x0]
  401e78:	mov    rbx,QWORD PTR [rbx+0x10]
  401e7c:	test   rbx,rbx
  401e7f:	je     401e58 <lista_pesquisa@@Base+0x48>
  401e81:	mov    rdi,QWORD PTR [rbx]
  401e84:	mov    rsi,rbp
  401e87:	call   401090 <strcmp@plt>
  401e8c:	test   eax,eax
  401e8e:	jne    401e78 <lista_pesquisa@@Base+0x68>
  401e90:	add    rsp,0x8
  401e94:	mov    rax,rbx
  401e97:	pop    rbx
  401e98:	pop    rbp
  401e99:	ret    
  401e9a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000401ea0 <lista_ordena@@Base>:
  401ea0:	test   rdi,rdi
  401ea3:	je     401f1a <lista_ordena@@Base+0x7a>
  401ea5:	push   r13
  401ea7:	push   r12
  401ea9:	push   rbp
  401eaa:	push   rbx
  401eab:	sub    rsp,0x8
  401eaf:	mov    r12,QWORD PTR [rdi]
  401eb2:	mov    r13,QWORD PTR [r12+0x8]
  401eb7:	test   r13,r13
  401eba:	je     401f0d <lista_ordena@@Base+0x6d>
  401ebc:	nop    DWORD PTR [rax+0x0]
  401ec0:	mov    rbp,r12
  401ec3:	mov    rbx,r13
  401ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ed0:	mov    rsi,QWORD PTR [rbp+0x0]
  401ed4:	mov    rdi,QWORD PTR [rbx]
  401ed7:	call   401090 <strcmp@plt>
  401edc:	test   eax,eax
  401ede:	cmovs  rbp,rbx
  401ee2:	mov    rbx,QWORD PTR [rbx+0x8]
  401ee6:	test   rbx,rbx
  401ee9:	jne    401ed0 <lista_ordena@@Base+0x30>
  401eeb:	cmp    r12,rbp
  401eee:	je     401f00 <lista_ordena@@Base+0x60>
  401ef0:	mov    rax,QWORD PTR [r12]
  401ef4:	mov    rdx,QWORD PTR [rbp+0x0]
  401ef8:	mov    QWORD PTR [r12],rdx
  401efc:	mov    QWORD PTR [rbp+0x0],rax
  401f00:	mov    r12,r13
  401f03:	mov    r13,QWORD PTR [r12+0x8]
  401f08:	test   r13,r13
  401f0b:	jne    401ec0 <lista_ordena@@Base+0x20>
  401f0d:	add    rsp,0x8
  401f11:	xor    eax,eax
  401f13:	pop    rbx
  401f14:	pop    rbp
  401f15:	pop    r12
  401f17:	pop    r13
  401f19:	ret    
  401f1a:	mov    eax,0xffffffff
  401f1f:	ret    

0000000000401f20 <lista_inverte@@Base>:
  401f20:	test   rdi,rdi
  401f23:	je     401fb0 <lista_inverte@@Base+0x90>
  401f29:	mov    r9d,DWORD PTR [rdi+0x10]
  401f2d:	cmp    r9d,0x1
  401f31:	jle    401fa8 <lista_inverte@@Base+0x88>
  401f33:	mov    rdx,QWORD PTR [rdi]
  401f36:	cmp    r9d,0x2
  401f3a:	mov    rax,QWORD PTR [rdx+0x8]
  401f3e:	je     401fab <lista_inverte@@Base+0x8b>
  401f40:	sub    r9d,0x2
  401f44:	xor    ecx,ecx
  401f46:	jmp    401f53 <lista_inverte@@Base+0x33>
  401f48:	nop    DWORD PTR [rax+rax*1+0x0]
  401f50:	mov    rax,r8
  401f53:	mov    r8,QWORD PTR [rax+0x8]
  401f57:	mov    rsi,QWORD PTR [rax+0x10]
  401f5b:	add    ecx,0x1
  401f5e:	cmp    ecx,r9d
  401f61:	mov    QWORD PTR [rsi+0x8],r8
  401f65:	mov    r8,QWORD PTR [rax+0x8]
  401f69:	mov    QWORD PTR [r8+0x10],rsi
  401f6d:	mov    QWORD PTR [rax+0x8],rdx
  401f71:	mov    QWORD PTR [rdx+0x10],rax
  401f75:	mov    rdx,rax
  401f78:	jne    401f50 <lista_inverte@@Base+0x30>
  401f7a:	mov    rdx,QWORD PTR [rdi+0x8]
  401f7e:	mov    rcx,QWORD PTR [rdx+0x10]
  401f82:	mov    QWORD PTR [rdi+0x8],rcx
  401f86:	mov    QWORD PTR [rcx+0x8],0x0
  401f8e:	mov    QWORD PTR [rdx+0x8],rax
  401f92:	mov    QWORD PTR [rdx+0x10],0x0
  401f9a:	mov    QWORD PTR [rax+0x10],rdx
  401f9e:	mov    QWORD PTR [rdi],rdx
  401fa1:	xor    eax,eax
  401fa3:	ret    
  401fa4:	nop    DWORD PTR [rax+0x0]
  401fa8:	xor    eax,eax
  401faa:	ret    
  401fab:	mov    rax,rdx
  401fae:	jmp    401f7a <lista_inverte@@Base+0x5a>
  401fb0:	mov    eax,0xffffffff
  401fb5:	ret    
  401fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401fc0 <__libc_csu_init@@Base>:
  401fc0:	endbr64 
  401fc4:	push   r15
  401fc6:	lea    r15,[rip+0x2e33]        # 404e00 <_IO_stdin_used@@Base+0x1e00>
  401fcd:	push   r14
  401fcf:	mov    r14,rdx
  401fd2:	push   r13
  401fd4:	mov    r13,rsi
  401fd7:	push   r12
  401fd9:	mov    r12d,edi
  401fdc:	push   rbp
  401fdd:	lea    rbp,[rip+0x2e24]        # 404e08 <_IO_stdin_used@@Base+0x1e08>
  401fe4:	push   rbx
  401fe5:	sub    rbp,r15
  401fe8:	sub    rsp,0x8
  401fec:	call   401000 <free@plt-0x30>
  401ff1:	sar    rbp,0x3
  401ff5:	je     402016 <__libc_csu_init@@Base+0x56>
  401ff7:	xor    ebx,ebx
  401ff9:	nop    DWORD PTR [rax+0x0]
  402000:	mov    rdx,r14
  402003:	mov    rsi,r13
  402006:	mov    edi,r12d
  402009:	call   QWORD PTR [r15+rbx*8]
  40200d:	add    rbx,0x1
  402011:	cmp    rbp,rbx
  402014:	jne    402000 <__libc_csu_init@@Base+0x40>
  402016:	add    rsp,0x8
  40201a:	pop    rbx
  40201b:	pop    rbp
  40201c:	pop    r12
  40201e:	pop    r13
  402020:	pop    r14
  402022:	pop    r15
  402024:	ret    
  402025:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000402030 <__libc_csu_fini@@Base>:
  402030:	endbr64 
  402034:	ret    

Disassembly of section .fini:

0000000000402038 <.fini>:
  402038:	endbr64 
  40203c:	sub    rsp,0x8
  402040:	add    rsp,0x8
  402044:	ret    
