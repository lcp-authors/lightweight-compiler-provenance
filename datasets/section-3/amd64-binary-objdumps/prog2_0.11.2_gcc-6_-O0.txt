
../repos/prog2/0.11.2:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <strcpy@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <strcpy@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <strcpy@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <strcpy@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <strcpy@plt-0x10>

0000000000401040 <puts@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <puts@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <strcpy@plt-0x10>

0000000000401050 <strlen@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <strlen@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <strcpy@plt-0x10>

0000000000401060 <__stack_chk_fail@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <__stack_chk_fail@GLIBC_2.4>
  401066:	push   0x3
  40106b:	jmp    401020 <strcpy@plt-0x10>

0000000000401070 <strcmp@plt>:
  401070:	jmp    QWORD PTR [rip+0x2fc2]        # 404038 <strcmp@GLIBC_2.2.5>
  401076:	push   0x4
  40107b:	jmp    401020 <strcpy@plt-0x10>

0000000000401080 <__isoc99_scanf@plt>:
  401080:	jmp    QWORD PTR [rip+0x2fba]        # 404040 <__isoc99_scanf@GLIBC_2.7>
  401086:	push   0x5
  40108b:	jmp    401020 <strcpy@plt-0x10>

0000000000401090 <strcat@plt>:
  401090:	jmp    QWORD PTR [rip+0x2fb2]        # 404048 <strcat@GLIBC_2.2.5>
  401096:	push   0x6
  40109b:	jmp    401020 <strcpy@plt-0x10>

Disassembly of section .text:

00000000004010a0 <_start@@Base>:
  4010a0:	endbr64 
  4010a4:	xor    ebp,ebp
  4010a6:	mov    r9,rdx
  4010a9:	pop    rsi
  4010aa:	mov    rdx,rsp
  4010ad:	and    rsp,0xfffffffffffffff0
  4010b1:	push   rax
  4010b2:	push   rsp
  4010b3:	mov    r8,0x4014b0
  4010ba:	mov    rcx,0x401440
  4010c1:	mov    rdi,0x4011a6
  4010c8:	call   QWORD PTR [rip+0x2f22]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  4010ce:	hlt    
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	ret    
  4010d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4010df:	nop
  4010e0:	mov    eax,0x404067
  4010e5:	push   rbp
  4010e6:	sub    rax,0x404060
  4010ec:	cmp    rax,0xe
  4010f0:	mov    rbp,rsp
  4010f3:	jbe    401110 <_start@@Base+0x70>
  4010f5:	mov    eax,0x0
  4010fa:	test   rax,rax
  4010fd:	je     401110 <_start@@Base+0x70>
  4010ff:	pop    rbp
  401100:	mov    edi,0x404060
  401105:	jmp    rax
  401107:	nop    WORD PTR [rax+rax*1+0x0]
  401110:	pop    rbp
  401111:	ret    
  401112:	nop    DWORD PTR [rax+0x0]
  401116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401120:	mov    esi,0x404060
  401125:	push   rbp
  401126:	sub    rsi,0x404060
  40112d:	sar    rsi,0x3
  401131:	mov    rbp,rsp
  401134:	mov    rax,rsi
  401137:	shr    rax,0x3f
  40113b:	add    rsi,rax
  40113e:	sar    rsi,1
  401141:	je     401158 <_start@@Base+0xb8>
  401143:	mov    eax,0x0
  401148:	test   rax,rax
  40114b:	je     401158 <_start@@Base+0xb8>
  40114d:	pop    rbp
  40114e:	mov    edi,0x404060
  401153:	jmp    rax
  401155:	nop    DWORD PTR [rax]
  401158:	pop    rbp
  401159:	ret    
  40115a:	nop    WORD PTR [rax+rax*1+0x0]
  401160:	cmp    BYTE PTR [rip+0x2ef9],0x0        # 404060 <__bss_start@@Base>
  401167:	jne    40117a <_start@@Base+0xda>
  401169:	push   rbp
  40116a:	mov    rbp,rsp
  40116d:	call   4010e0 <_start@@Base+0x40>
  401172:	pop    rbp
  401173:	mov    BYTE PTR [rip+0x2ee6],0x1        # 404060 <__bss_start@@Base>
  40117a:	repz ret 
  40117c:	nop    DWORD PTR [rax+0x0]
  401180:	mov    edi,0x403e18
  401185:	cmp    QWORD PTR [rdi],0x0
  401189:	jne    401190 <_start@@Base+0xf0>
  40118b:	jmp    401120 <_start@@Base+0x80>
  40118d:	nop    DWORD PTR [rax]
  401190:	mov    eax,0x0
  401195:	test   rax,rax
  401198:	je     40118b <_start@@Base+0xeb>
  40119a:	push   rbp
  40119b:	mov    rbp,rsp
  40119e:	call   rax
  4011a0:	pop    rbp
  4011a1:	jmp    401120 <_start@@Base+0x80>

00000000004011a6 <main@@Base>:
  4011a6:	push   rbp
  4011a7:	mov    rbp,rsp
  4011aa:	sub    rsp,0x90
  4011b1:	mov    rax,QWORD PTR fs:0x28
  4011ba:	mov    QWORD PTR [rbp-0x8],rax
  4011be:	xor    eax,eax
  4011c0:	mov    QWORD PTR [rbp-0x70],0x0
  4011c8:	mov    QWORD PTR [rbp-0x68],0x0
  4011d0:	mov    QWORD PTR [rbp-0x60],0x0
  4011d8:	mov    WORD PTR [rbp-0x58],0x0
  4011de:	mov    DWORD PTR [rbp-0x80],0x0
  4011e5:	lea    rax,[rbp-0x7a]
  4011e9:	mov    rsi,rax
  4011ec:	lea    rdi,[rip+0xe11]        # 402004 <_IO_stdin_used@@Base+0x4>
  4011f3:	mov    eax,0x0
  4011f8:	call   401080 <__isoc99_scanf@plt>
  4011fd:	movzx  eax,BYTE PTR [rbp-0x7a]
  401201:	cmp    al,0x2e
  401203:	je     4012b4 <main@@Base+0x10e>
  401209:	lea    rax,[rbp-0x84]
  401210:	mov    rsi,rax
  401213:	lea    rdi,[rip+0xded]        # 402007 <_IO_stdin_used@@Base+0x7>
  40121a:	mov    eax,0x0
  40121f:	call   401080 <__isoc99_scanf@plt>
  401224:	mov    DWORD PTR [rbp-0x80],0x0
  40122b:	mov    edx,DWORD PTR [rbp-0x84]
  401231:	lea    rcx,[rbp-0x70]
  401235:	lea    rax,[rbp-0x7a]
  401239:	mov    rsi,rcx
  40123c:	mov    rdi,rax
  40123f:	call   4013ee <StringSet@@Base>
  401244:	lea    rdx,[rbp-0x50]
  401248:	lea    rax,[rbp-0x70]
  40124c:	mov    rsi,rdx
  40124f:	mov    rdi,rax
  401252:	call   4012d0 <R_ShiftString@@Base>
  401257:	jmp    4012a9 <main@@Base+0x103>
  401259:	lea    rdx,[rbp-0x50]
  40125d:	lea    rax,[rbp-0x70]
  401261:	mov    rsi,rdx
  401264:	mov    rdi,rax
  401267:	call   401070 <strcmp@plt>
  40126c:	test   eax,eax
  40126e:	jne    401277 <main@@Base+0xd1>
  401270:	mov    DWORD PTR [rbp-0x80],0x1
  401277:	lea    rax,[rbp-0x70]
  40127b:	mov    rdi,rax
  40127e:	call   401040 <puts@plt>
  401283:	lea    rdx,[rbp-0x70]
  401287:	lea    rax,[rbp-0x30]
  40128b:	mov    rsi,rdx
  40128e:	mov    rdi,rax
  401291:	call   401030 <strcpy@plt>
  401296:	lea    rdx,[rbp-0x70]
  40129a:	lea    rax,[rbp-0x30]
  40129e:	mov    rsi,rdx
  4012a1:	mov    rdi,rax
  4012a4:	call   40135f <L_ShiftString@@Base>
  4012a9:	cmp    DWORD PTR [rbp-0x80],0x0
  4012ad:	je     401259 <main@@Base+0xb3>
  4012af:	jmp    4011e5 <main@@Base+0x3f>
  4012b4:	nop
  4012b5:	mov    eax,0x0
  4012ba:	mov    rcx,QWORD PTR [rbp-0x8]
  4012be:	xor    rcx,QWORD PTR fs:0x28
  4012c7:	je     4012ce <main@@Base+0x128>
  4012c9:	call   401060 <__stack_chk_fail@plt>
  4012ce:	leave  
  4012cf:	ret    

00000000004012d0 <R_ShiftString@@Base>:
  4012d0:	push   rbp
  4012d1:	mov    rbp,rsp
  4012d4:	push   rbx
  4012d5:	sub    rsp,0x28
  4012d9:	mov    QWORD PTR [rbp-0x28],rdi
  4012dd:	mov    QWORD PTR [rbp-0x30],rsi
  4012e1:	mov    rax,QWORD PTR [rbp-0x28]
  4012e5:	mov    rdi,rax
  4012e8:	call   401050 <strlen@plt>
  4012ed:	lea    rdx,[rax-0x1]
  4012f1:	mov    rax,QWORD PTR [rbp-0x28]
  4012f5:	add    rax,rdx
  4012f8:	movzx  edx,BYTE PTR [rax]
  4012fb:	mov    rax,QWORD PTR [rbp-0x30]
  4012ff:	mov    BYTE PTR [rax],dl
  401301:	mov    DWORD PTR [rbp-0x14],0x1
  401308:	jmp    401330 <R_ShiftString@@Base+0x60>
  40130a:	mov    eax,DWORD PTR [rbp-0x14]
  40130d:	movsxd rdx,eax
  401310:	mov    rax,QWORD PTR [rbp-0x30]
  401314:	add    rdx,rax
  401317:	mov    eax,DWORD PTR [rbp-0x14]
  40131a:	cdqe   
  40131c:	lea    rcx,[rax-0x1]
  401320:	mov    rax,QWORD PTR [rbp-0x28]
  401324:	add    rax,rcx
  401327:	movzx  eax,BYTE PTR [rax]
  40132a:	mov    BYTE PTR [rdx],al
  40132c:	add    DWORD PTR [rbp-0x14],0x1
  401330:	mov    eax,DWORD PTR [rbp-0x14]
  401333:	movsxd rbx,eax
  401336:	mov    rax,QWORD PTR [rbp-0x28]
  40133a:	mov    rdi,rax
  40133d:	call   401050 <strlen@plt>
  401342:	cmp    rbx,rax
  401345:	jb     40130a <R_ShiftString@@Base+0x3a>
  401347:	mov    eax,DWORD PTR [rbp-0x14]
  40134a:	movsxd rdx,eax
  40134d:	mov    rax,QWORD PTR [rbp-0x30]
  401351:	add    rax,rdx
  401354:	mov    BYTE PTR [rax],0x0
  401357:	nop
  401358:	add    rsp,0x28
  40135c:	pop    rbx
  40135d:	pop    rbp
  40135e:	ret    

000000000040135f <L_ShiftString@@Base>:
  40135f:	push   rbp
  401360:	mov    rbp,rsp
  401363:	push   rbx
  401364:	sub    rsp,0x28
  401368:	mov    QWORD PTR [rbp-0x28],rdi
  40136c:	mov    QWORD PTR [rbp-0x30],rsi
  401370:	mov    rax,QWORD PTR [rbp-0x28]
  401374:	mov    rdi,rax
  401377:	call   401050 <strlen@plt>
  40137c:	lea    rdx,[rax-0x1]
  401380:	mov    rax,QWORD PTR [rbp-0x30]
  401384:	add    rdx,rax
  401387:	mov    rax,QWORD PTR [rbp-0x28]
  40138b:	movzx  eax,BYTE PTR [rax]
  40138e:	mov    BYTE PTR [rdx],al
  401390:	mov    DWORD PTR [rbp-0x14],0x1
  401397:	jmp    4013bf <L_ShiftString@@Base+0x60>
  401399:	mov    eax,DWORD PTR [rbp-0x14]
  40139c:	cdqe   
  40139e:	lea    rdx,[rax-0x1]
  4013a2:	mov    rax,QWORD PTR [rbp-0x30]
  4013a6:	add    rdx,rax
  4013a9:	mov    eax,DWORD PTR [rbp-0x14]
  4013ac:	movsxd rcx,eax
  4013af:	mov    rax,QWORD PTR [rbp-0x28]
  4013b3:	add    rax,rcx
  4013b6:	movzx  eax,BYTE PTR [rax]
  4013b9:	mov    BYTE PTR [rdx],al
  4013bb:	add    DWORD PTR [rbp-0x14],0x1
  4013bf:	mov    eax,DWORD PTR [rbp-0x14]
  4013c2:	movsxd rbx,eax
  4013c5:	mov    rax,QWORD PTR [rbp-0x28]
  4013c9:	mov    rdi,rax
  4013cc:	call   401050 <strlen@plt>
  4013d1:	cmp    rbx,rax
  4013d4:	jb     401399 <L_ShiftString@@Base+0x3a>
  4013d6:	mov    eax,DWORD PTR [rbp-0x14]
  4013d9:	movsxd rdx,eax
  4013dc:	mov    rax,QWORD PTR [rbp-0x30]
  4013e0:	add    rax,rdx
  4013e3:	mov    BYTE PTR [rax],0x0
  4013e6:	nop
  4013e7:	add    rsp,0x28
  4013eb:	pop    rbx
  4013ec:	pop    rbp
  4013ed:	ret    

00000000004013ee <StringSet@@Base>:
  4013ee:	push   rbp
  4013ef:	mov    rbp,rsp
  4013f2:	sub    rsp,0x30
  4013f6:	mov    QWORD PTR [rbp-0x18],rdi
  4013fa:	mov    QWORD PTR [rbp-0x20],rsi
  4013fe:	mov    DWORD PTR [rbp-0x24],edx
  401401:	mov    rax,QWORD PTR [rbp-0x20]
  401405:	mov    BYTE PTR [rax],0x0
  401408:	mov    DWORD PTR [rbp-0x4],0x0
  40140f:	jmp    401428 <StringSet@@Base+0x3a>
  401411:	mov    rdx,QWORD PTR [rbp-0x18]
  401415:	mov    rax,QWORD PTR [rbp-0x20]
  401419:	mov    rsi,rdx
  40141c:	mov    rdi,rax
  40141f:	call   401090 <strcat@plt>
  401424:	add    DWORD PTR [rbp-0x4],0x1
  401428:	mov    eax,DWORD PTR [rbp-0x4]
  40142b:	cmp    eax,DWORD PTR [rbp-0x24]
  40142e:	jl     401411 <StringSet@@Base+0x23>
  401430:	nop
  401431:	leave  
  401432:	ret    
  401433:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40143d:	nop    DWORD PTR [rax]

0000000000401440 <__libc_csu_init@@Base>:
  401440:	endbr64 
  401444:	push   r15
  401446:	lea    r15,[rip+0x29bb]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  40144d:	push   r14
  40144f:	mov    r14,rdx
  401452:	push   r13
  401454:	mov    r13,rsi
  401457:	push   r12
  401459:	mov    r12d,edi
  40145c:	push   rbp
  40145d:	lea    rbp,[rip+0x29ac]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  401464:	push   rbx
  401465:	sub    rbp,r15
  401468:	sub    rsp,0x8
  40146c:	call   401000 <strcpy@plt-0x30>
  401471:	sar    rbp,0x3
  401475:	je     401496 <__libc_csu_init@@Base+0x56>
  401477:	xor    ebx,ebx
  401479:	nop    DWORD PTR [rax+0x0]
  401480:	mov    rdx,r14
  401483:	mov    rsi,r13
  401486:	mov    edi,r12d
  401489:	call   QWORD PTR [r15+rbx*8]
  40148d:	add    rbx,0x1
  401491:	cmp    rbp,rbx
  401494:	jne    401480 <__libc_csu_init@@Base+0x40>
  401496:	add    rsp,0x8
  40149a:	pop    rbx
  40149b:	pop    rbp
  40149c:	pop    r12
  40149e:	pop    r13
  4014a0:	pop    r14
  4014a2:	pop    r15
  4014a4:	ret    
  4014a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004014b0 <__libc_csu_fini@@Base>:
  4014b0:	endbr64 
  4014b4:	ret    

Disassembly of section .fini:

00000000004014b8 <.fini>:
  4014b8:	endbr64 
  4014bc:	sub    rsp,0x8
  4014c0:	add    rsp,0x8
  4014c4:	ret    
