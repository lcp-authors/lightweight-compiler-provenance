
../repos/eddieantonio-ocreval-3ab279a/editop/editop:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x5fd9]        # 406fe8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1da>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x5fe2]        # 407008 <error@@Base+0x35e8>
  401026:	bnd jmp QWORD PTR [rip+0x5fe3]        # 407010 <error@@Base+0x35f0>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <free@plt-0x1d0>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <free@plt-0x1d0>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <free@plt-0x1d0>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <free@plt-0x1d0>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <free@plt-0x1d0>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <free@plt-0x1d0>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <free@plt-0x1d0>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <free@plt-0x1d0>
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	push   0x8
  4010b9:	bnd jmp 401020 <free@plt-0x1d0>
  4010bf:	nop
  4010c0:	endbr64 
  4010c4:	push   0x9
  4010c9:	bnd jmp 401020 <free@plt-0x1d0>
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	push   0xa
  4010d9:	bnd jmp 401020 <free@plt-0x1d0>
  4010df:	nop
  4010e0:	endbr64 
  4010e4:	push   0xb
  4010e9:	bnd jmp 401020 <free@plt-0x1d0>
  4010ef:	nop
  4010f0:	endbr64 
  4010f4:	push   0xc
  4010f9:	bnd jmp 401020 <free@plt-0x1d0>
  4010ff:	nop
  401100:	endbr64 
  401104:	push   0xd
  401109:	bnd jmp 401020 <free@plt-0x1d0>
  40110f:	nop
  401110:	endbr64 
  401114:	push   0xe
  401119:	bnd jmp 401020 <free@plt-0x1d0>
  40111f:	nop
  401120:	endbr64 
  401124:	push   0xf
  401129:	bnd jmp 401020 <free@plt-0x1d0>
  40112f:	nop
  401130:	endbr64 
  401134:	push   0x10
  401139:	bnd jmp 401020 <free@plt-0x1d0>
  40113f:	nop
  401140:	endbr64 
  401144:	push   0x11
  401149:	bnd jmp 401020 <free@plt-0x1d0>
  40114f:	nop
  401150:	endbr64 
  401154:	push   0x12
  401159:	bnd jmp 401020 <free@plt-0x1d0>
  40115f:	nop
  401160:	endbr64 
  401164:	push   0x13
  401169:	bnd jmp 401020 <free@plt-0x1d0>
  40116f:	nop
  401170:	endbr64 
  401174:	push   0x14
  401179:	bnd jmp 401020 <free@plt-0x1d0>
  40117f:	nop
  401180:	endbr64 
  401184:	push   0x15
  401189:	bnd jmp 401020 <free@plt-0x1d0>
  40118f:	nop
  401190:	endbr64 
  401194:	push   0x16
  401199:	bnd jmp 401020 <free@plt-0x1d0>
  40119f:	nop
  4011a0:	endbr64 
  4011a4:	push   0x17
  4011a9:	bnd jmp 401020 <free@plt-0x1d0>
  4011af:	nop
  4011b0:	endbr64 
  4011b4:	push   0x18
  4011b9:	bnd jmp 401020 <free@plt-0x1d0>
  4011bf:	nop
  4011c0:	endbr64 
  4011c4:	push   0x19
  4011c9:	bnd jmp 401020 <free@plt-0x1d0>
  4011cf:	nop
  4011d0:	endbr64 
  4011d4:	push   0x1a
  4011d9:	bnd jmp 401020 <free@plt-0x1d0>
  4011df:	nop
  4011e0:	endbr64 
  4011e4:	push   0x1b
  4011e9:	bnd jmp 401020 <free@plt-0x1d0>
  4011ef:	nop

Disassembly of section .plt.sec:

00000000004011f0 <free@plt>:
  4011f0:	endbr64 
  4011f4:	bnd jmp QWORD PTR [rip+0x5e1d]        # 407018 <free@GLIBC_2.2.5>
  4011fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401200 <unlink@plt>:
  401200:	endbr64 
  401204:	bnd jmp QWORD PTR [rip+0x5e15]        # 407020 <unlink@GLIBC_2.2.5>
  40120b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401210 <utf8proc_get_property@plt>:
  401210:	endbr64 
  401214:	bnd jmp QWORD PTR [rip+0x5e0d]        # 407028 <utf8proc_get_property>
  40121b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401220 <utf8proc_encode_char@plt>:
  401220:	endbr64 
  401224:	bnd jmp QWORD PTR [rip+0x5e05]        # 407030 <utf8proc_encode_char>
  40122b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401230 <getpid@plt>:
  401230:	endbr64 
  401234:	bnd jmp QWORD PTR [rip+0x5dfd]        # 407038 <getpid@GLIBC_2.2.5>
  40123b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401240 <fclose@plt>:
  401240:	endbr64 
  401244:	bnd jmp QWORD PTR [rip+0x5df5]        # 407040 <fclose@GLIBC_2.2.5>
  40124b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401250 <strlen@plt>:
  401250:	endbr64 
  401254:	bnd jmp QWORD PTR [rip+0x5ded]        # 407048 <strlen@GLIBC_2.2.5>
  40125b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401260 <__stack_chk_fail@plt>:
  401260:	endbr64 
  401264:	bnd jmp QWORD PTR [rip+0x5de5]        # 407050 <__stack_chk_fail@GLIBC_2.4>
  40126b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401270 <rewind@plt>:
  401270:	endbr64 
  401274:	bnd jmp QWORD PTR [rip+0x5ddd]        # 407058 <rewind@GLIBC_2.2.5>
  40127b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401280 <utf8proc_tolower@plt>:
  401280:	endbr64 
  401284:	bnd jmp QWORD PTR [rip+0x5dd5]        # 407060 <utf8proc_tolower>
  40128b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401290 <fputs@plt>:
  401290:	endbr64 
  401294:	bnd jmp QWORD PTR [rip+0x5dcd]        # 407068 <fputs@GLIBC_2.2.5>
  40129b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012a0 <fgets@plt>:
  4012a0:	endbr64 
  4012a4:	bnd jmp QWORD PTR [rip+0x5dc5]        # 407070 <fgets@GLIBC_2.2.5>
  4012ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012b0 <utf8proc_iterate@plt>:
  4012b0:	endbr64 
  4012b4:	bnd jmp QWORD PTR [rip+0x5dbd]        # 407078 <utf8proc_iterate>
  4012bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012c0 <calloc@plt>:
  4012c0:	endbr64 
  4012c4:	bnd jmp QWORD PTR [rip+0x5db5]        # 407080 <calloc@GLIBC_2.2.5>
  4012cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012d0 <__sysv_signal@plt>:
  4012d0:	endbr64 
  4012d4:	bnd jmp QWORD PTR [rip+0x5dad]        # 407088 <__sysv_signal@GLIBC_2.2.5>
  4012db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012e0 <utf8proc_category@plt>:
  4012e0:	endbr64 
  4012e4:	bnd jmp QWORD PTR [rip+0x5da5]        # 407090 <utf8proc_category>
  4012eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012f0 <__xstat@plt>:
  4012f0:	endbr64 
  4012f4:	bnd jmp QWORD PTR [rip+0x5d9d]        # 407098 <__xstat@GLIBC_2.2.5>
  4012fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401300 <__isoc99_sscanf@plt>:
  401300:	endbr64 
  401304:	bnd jmp QWORD PTR [rip+0x5d95]        # 4070a0 <__isoc99_sscanf@GLIBC_2.7>
  40130b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401310 <__printf_chk@plt>:
  401310:	endbr64 
  401314:	bnd jmp QWORD PTR [rip+0x5d8d]        # 4070a8 <__printf_chk@GLIBC_2.3.4>
  40131b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401320 <__fread_chk@plt>:
  401320:	endbr64 
  401324:	bnd jmp QWORD PTR [rip+0x5d85]        # 4070b0 <__fread_chk@GLIBC_2.7>
  40132b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401330 <fopen@plt>:
  401330:	endbr64 
  401334:	bnd jmp QWORD PTR [rip+0x5d7d]        # 4070b8 <fopen@GLIBC_2.2.5>
  40133b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401340 <exit@plt>:
  401340:	endbr64 
  401344:	bnd jmp QWORD PTR [rip+0x5d75]        # 4070c0 <exit@GLIBC_2.2.5>
  40134b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401350 <fwrite@plt>:
  401350:	endbr64 
  401354:	bnd jmp QWORD PTR [rip+0x5d6d]        # 4070c8 <fwrite@GLIBC_2.2.5>
  40135b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401360 <__fprintf_chk@plt>:
  401360:	endbr64 
  401364:	bnd jmp QWORD PTR [rip+0x5d65]        # 4070d0 <__fprintf_chk@GLIBC_2.3.4>
  40136b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401370 <utf8proc_errmsg@plt>:
  401370:	endbr64 
  401374:	bnd jmp QWORD PTR [rip+0x5d5d]        # 4070d8 <utf8proc_errmsg>
  40137b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401380 <strdup@plt>:
  401380:	endbr64 
  401384:	bnd jmp QWORD PTR [rip+0x5d55]        # 4070e0 <strdup@GLIBC_2.2.5>
  40138b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401390 <getc@plt>:
  401390:	endbr64 
  401394:	bnd jmp QWORD PTR [rip+0x5d4d]        # 4070e8 <getc@GLIBC_2.2.5>
  40139b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013a0 <__sprintf_chk@plt>:
  4013a0:	endbr64 
  4013a4:	bnd jmp QWORD PTR [rip+0x5d45]        # 4070f0 <__sprintf_chk@GLIBC_2.3.4>
  4013ab:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004013b0 <error@@Base-0x2670>:
  4013b0:	endbr64 
  4013b4:	push   r14
  4013b6:	lea    rdx,[rip+0x2cab]        # 404068 <error@@Base+0x648>
  4013bd:	push   r13
  4013bf:	push   r12
  4013c1:	push   rbp
  4013c2:	push   rbx
  4013c3:	mov    rbx,rsi
  4013c6:	sub    rsp,0x60
  4013ca:	mov    DWORD PTR [rsp+0xc],edi
  4013ce:	mov    rcx,0x407120
  4013d5:	lea    rdi,[rsp+0xc]
  4013da:	mov    rax,QWORD PTR fs:0x28
  4013e3:	mov    QWORD PTR [rsp+0x58],rax
  4013e8:	xor    eax,eax
  4013ea:	call   403ba0 <error@@Base+0x180>
  4013ef:	mov    eax,DWORD PTR [rsp+0xc]
  4013f3:	sub    eax,0x2
  4013f6:	cmp    eax,0x1
  4013f9:	jbe    401409 <__sprintf_chk@plt+0x69>
  4013fb:	lea    rdi,[rip+0x2c32]        # 404034 <error@@Base+0x614>
  401402:	xor    eax,eax
  401404:	call   403a20 <error@@Base>
  401409:	mov    rbp,0x407110
  401410:	mov    r12,0x4072c0
  401417:	mov    rsi,QWORD PTR [rbx]
  40141a:	xor    eax,eax
  40141c:	mov    rdx,rbp
  40141f:	mov    rdi,r12
  401422:	call   403000 <__sprintf_chk@plt+0x1c60>
  401427:	cmp    BYTE PTR [rbp+0xb],0x0
  40142b:	je     40143b <__sprintf_chk@plt+0x9b>
  40142d:	lea    rdi,[rip+0x2c18]        # 40404c <error@@Base+0x62c>
  401434:	xor    eax,eax
  401436:	call   403a20 <error@@Base>
  40143b:	mov    r14,0x407620
  401442:	mov    rsi,QWORD PTR [rbx+0x8]
  401446:	mov    rdx,rbp
  401449:	xor    eax,eax
  40144b:	lea    rbp,[rsp+0x30]
  401450:	mov    rdi,r14
  401453:	lea    r13,[rsp+0x10]
  401458:	call   403000 <__sprintf_chk@plt+0x1c60>
  40145d:	mov    rcx,r14
  401460:	mov    rdx,r12
  401463:	xor    eax,eax
  401465:	mov    rsi,rbp
  401468:	mov    rdi,r13
  40146b:	call   402a30 <__sprintf_chk@plt+0x1690>
  401470:	mov    rsi,r12
  401473:	xor    eax,eax
  401475:	mov    rdi,r13
  401478:	call   401660 <__sprintf_chk@plt+0x2c0>
  40147d:	xor    eax,eax
  40147f:	mov    rdi,rbp
  401482:	call   4016f0 <__sprintf_chk@plt+0x350>
  401487:	xor    eax,eax
  401489:	mov    rdi,rbp
  40148c:	call   401a50 <__sprintf_chk@plt+0x6b0>
  401491:	xor    esi,esi
  401493:	cmp    DWORD PTR [rsp+0xc],0x3
  401498:	je     4014af <__sprintf_chk@plt+0x10f>
  40149a:	mov    rdi,0x4072e0
  4014a1:	xor    eax,eax
  4014a3:	call   401d40 <__sprintf_chk@plt+0x9a0>
  4014a8:	xor    eax,eax
  4014aa:	call   4039b0 <__sprintf_chk@plt+0x2610>
  4014af:	mov    rsi,QWORD PTR [rbx+0x10]
  4014b3:	jmp    40149a <__sprintf_chk@plt+0xfa>
  4014b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4014bf:	nop
  4014c0:	endbr64 
  4014c4:	xor    ebp,ebp
  4014c6:	mov    r9,rdx
  4014c9:	pop    rsi
  4014ca:	mov    rdx,rsp
  4014cd:	and    rsp,0xfffffffffffffff0
  4014d1:	push   rax
  4014d2:	push   rsp
  4014d3:	mov    r8,0x403ee0
  4014da:	mov    rcx,0x403e70
  4014e1:	mov    rdi,0x4013b0
  4014e8:	call   QWORD PTR [rip+0x5af2]        # 406fe0 <error@@Base+0x35c0>
  4014ee:	hlt    
  4014ef:	nop
  4014f0:	endbr64 
  4014f4:	ret    
  4014f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4014ff:	nop
  401500:	mov    eax,0x407158
  401505:	cmp    rax,0x407158
  40150b:	je     401520 <__sprintf_chk@plt+0x180>
  40150d:	mov    eax,0x0
  401512:	test   rax,rax
  401515:	je     401520 <__sprintf_chk@plt+0x180>
  401517:	mov    edi,0x407158
  40151c:	jmp    rax
  40151e:	xchg   ax,ax
  401520:	ret    
  401521:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40152c:	nop    DWORD PTR [rax+0x0]
  401530:	mov    esi,0x407158
  401535:	sub    rsi,0x407158
  40153c:	sar    rsi,0x3
  401540:	mov    rax,rsi
  401543:	shr    rax,0x3f
  401547:	add    rsi,rax
  40154a:	sar    rsi,1
  40154d:	je     401560 <__sprintf_chk@plt+0x1c0>
  40154f:	mov    eax,0x0
  401554:	test   rax,rax
  401557:	je     401560 <__sprintf_chk@plt+0x1c0>
  401559:	mov    edi,0x407158
  40155e:	jmp    rax
  401560:	ret    
  401561:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40156c:	nop    DWORD PTR [rax+0x0]
  401570:	endbr64 
  401574:	cmp    BYTE PTR [rip+0x5be5],0x0        # 407160 <error@@Base+0x3740>
  40157b:	jne    401590 <__sprintf_chk@plt+0x1f0>
  40157d:	push   rbp
  40157e:	mov    rbp,rsp
  401581:	call   401500 <__sprintf_chk@plt+0x160>
  401586:	mov    BYTE PTR [rip+0x5bd3],0x1        # 407160 <error@@Base+0x3740>
  40158d:	pop    rbp
  40158e:	ret    
  40158f:	nop
  401590:	ret    
  401591:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40159c:	nop    DWORD PTR [rax+0x0]
  4015a0:	endbr64 
  4015a4:	jmp    401530 <__sprintf_chk@plt+0x190>
  4015a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015b0:	endbr64 
  4015b4:	push   rbp
  4015b5:	mov    rdx,rsi
  4015b8:	xor    eax,eax
  4015ba:	push   rbx
  4015bb:	lea    rsi,[rip+0x2a42]        # 404004 <error@@Base+0x5e4>
  4015c2:	mov    rbx,rdi
  4015c5:	sub    rsp,0x8
  4015c9:	mov    edi,0x1
  4015ce:	call   401310 <__printf_chk@plt>
  4015d3:	mov    rbx,QWORD PTR [rbx]
  4015d6:	test   rbx,rbx
  4015d9:	je     40160f <__sprintf_chk@plt+0x26f>
  4015db:	lea    rbp,[rip+0x2a28]        # 40400a <error@@Base+0x5ea>
  4015e2:	nop    WORD PTR [rax+rax*1+0x0]
  4015e8:	mov    rax,QWORD PTR [rbx+0x10]
  4015ec:	mov    rsi,rbp
  4015ef:	mov    rcx,QWORD PTR [rax+0x10]
  4015f3:	mov    rax,QWORD PTR [rbx+0x18]
  4015f7:	mov    edi,0x1
  4015fc:	mov    rdx,QWORD PTR [rax]
  4015ff:	xor    eax,eax
  401601:	call   401310 <__printf_chk@plt>
  401606:	mov    rbx,QWORD PTR [rbx+0x8]
  40160a:	test   rbx,rbx
  40160d:	jne    4015e8 <__sprintf_chk@plt+0x248>
  40160f:	add    rsp,0x8
  401613:	pop    rbx
  401614:	lea    rsi,[rip+0x29fa]        # 404015 <error@@Base+0x5f5>
  40161b:	mov    edi,0x1
  401620:	xor    eax,eax
  401622:	pop    rbp
  401623:	jmp    401310 <__printf_chk@plt>
  401628:	nop    DWORD PTR [rax+rax*1+0x0]
  401630:	endbr64 
  401634:	push   rbx
  401635:	xor    eax,eax
  401637:	mov    rbx,rsi
  40163a:	call   401fd0 <__sprintf_chk@plt+0xc30>
  40163f:	mov    rdi,QWORD PTR [rbx+0x10]
  401643:	call   4011f0 <free@plt>
  401648:	mov    rdi,QWORD PTR [rbx+0x18]
  40164c:	test   rdi,rdi
  40164f:	je     401656 <__sprintf_chk@plt+0x2b6>
  401651:	call   4011f0 <free@plt>
  401656:	mov    rdi,rbx
  401659:	pop    rbx
  40165a:	jmp    4011f0 <free@plt>
  40165f:	nop
  401660:	endbr64 
  401664:	mov    rdx,QWORD PTR [rdi]
  401667:	test   rdx,rdx
  40166a:	je     4016e0 <__sprintf_chk@plt+0x340>
  40166c:	mov    r11,0x4072e0
  401673:	xor    r9d,r9d
  401676:	mov    rdi,QWORD PTR [r11]
  401679:	jmp    401689 <__sprintf_chk@plt+0x2e9>
  40167b:	nop    DWORD PTR [rax+rax*1+0x0]
  401680:	mov    rdx,QWORD PTR [rdx+0x8]
  401684:	test   rdx,rdx
  401687:	je     4016d8 <__sprintf_chk@plt+0x338>
  401689:	cmp    QWORD PTR [rdx+0x18],0x0
  40168e:	jne    401680 <__sprintf_chk@plt+0x2e0>
  401690:	mov    rax,QWORD PTR [rdx+0x10]
  401694:	mov    r8,QWORD PTR [rax]
  401697:	mov    rcx,QWORD PTR [rax+0x8]
  40169b:	cmp    r8,rcx
  40169e:	jg     401680 <__sprintf_chk@plt+0x2e0>
  4016a0:	mov    r10,QWORD PTR [rsi+0x10]
  4016a4:	lea    rax,[r10+r8*8]
  4016a8:	lea    r8,[r10+rcx*8+0x8]
  4016ad:	nop    DWORD PTR [rax]
  4016b0:	mov    rcx,QWORD PTR [rax]
  4016b3:	cmp    DWORD PTR [rcx+0x14],0x7e
  4016b7:	je     4016c2 <__sprintf_chk@plt+0x322>
  4016b9:	inc    rdi
  4016bc:	mov    r9d,0x1
  4016c2:	add    rax,0x8
  4016c6:	cmp    rax,r8
  4016c9:	jne    4016b0 <__sprintf_chk@plt+0x310>
  4016cb:	mov    rdx,QWORD PTR [rdx+0x8]
  4016cf:	test   rdx,rdx
  4016d2:	jne    401689 <__sprintf_chk@plt+0x2e9>
  4016d4:	nop    DWORD PTR [rax+0x0]
  4016d8:	test   r9b,r9b
  4016db:	je     4016e0 <__sprintf_chk@plt+0x340>
  4016dd:	mov    QWORD PTR [r11],rdi
  4016e0:	ret    
  4016e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4016ec:	nop    DWORD PTR [rax+0x0]
  4016f0:	endbr64 
  4016f4:	mov    rsi,QWORD PTR [rdi]
  4016f7:	test   rsi,rsi
  4016fa:	je     401750 <__sprintf_chk@plt+0x3b0>
  4016fc:	push   rbp
  4016fd:	mov    rbp,rdi
  401700:	push   rbx
  401701:	sub    rsp,0x8
  401705:	jmp    401718 <__sprintf_chk@plt+0x378>
  401707:	nop    WORD PTR [rax+rax*1+0x0]
  401710:	mov    rsi,rbx
  401713:	test   rbx,rbx
  401716:	je     401748 <__sprintf_chk@plt+0x3a8>
  401718:	cmp    QWORD PTR [rsi+0x18],0x0
  40171d:	mov    rbx,QWORD PTR [rsi+0x8]
  401721:	jne    401710 <__sprintf_chk@plt+0x370>
  401723:	mov    rdx,QWORD PTR [rsi+0x10]
  401727:	mov    rax,0x4072e0
  40172e:	mov    rdx,QWORD PTR [rdx+0x10]
  401732:	mov    rdi,rbp
  401735:	add    QWORD PTR [rax+0x8],rdx
  401739:	xor    eax,eax
  40173b:	call   401630 <__sprintf_chk@plt+0x290>
  401740:	mov    rsi,rbx
  401743:	test   rbx,rbx
  401746:	jne    401718 <__sprintf_chk@plt+0x378>
  401748:	add    rsp,0x8
  40174c:	pop    rbx
  40174d:	pop    rbp
  40174e:	ret    
  40174f:	nop
  401750:	ret    
  401751:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40175c:	nop    DWORD PTR [rax+0x0]
  401760:	endbr64 
  401764:	mov    rax,QWORD PTR [rdi]
  401767:	test   rax,rax
  40176a:	je     40178b <__sprintf_chk@plt+0x3eb>
  40176c:	nop    DWORD PTR [rax+0x0]
  401770:	mov    rcx,QWORD PTR [rax+0x18]
  401774:	mov    rdx,QWORD PTR [rcx]
  401777:	cmp    rdx,rsi
  40177a:	jle    401782 <__sprintf_chk@plt+0x3e2>
  40177c:	dec    rdx
  40177f:	mov    QWORD PTR [rcx],rdx
  401782:	mov    rax,QWORD PTR [rax+0x8]
  401786:	test   rax,rax
  401789:	jne    401770 <__sprintf_chk@plt+0x3d0>
  40178b:	ret    
  40178c:	nop    DWORD PTR [rax+0x0]
  401790:	endbr64 
  401794:	push   rbp
  401795:	mov    rbp,rdi
  401798:	push   rbx
  401799:	sub    rsp,0x8
  40179d:	mov    rbx,QWORD PTR [rdi]
  4017a0:	test   rbx,rbx
  4017a3:	je     4017d0 <__sprintf_chk@plt+0x430>
  4017a5:	mov    rsi,QWORD PTR [rbx+0x8]
  4017a9:	test   rsi,rsi
  4017ac:	je     4017d0 <__sprintf_chk@plt+0x430>
  4017ae:	mov    rax,QWORD PTR [rbx+0x18]
  4017b2:	mov    rdx,QWORD PTR [rsi+0x18]
  4017b6:	mov    rax,QWORD PTR [rax]
  4017b9:	inc    rax
  4017bc:	cmp    QWORD PTR [rdx],rax
  4017bf:	je     4017e8 <__sprintf_chk@plt+0x448>
  4017c1:	mov    rbx,rsi
  4017c4:	test   rbx,rbx
  4017c7:	jne    4017a5 <__sprintf_chk@plt+0x405>
  4017c9:	nop    DWORD PTR [rax+0x0]
  4017d0:	mov    rax,0x4072a0
  4017d7:	cmp    BYTE PTR [rax],0x0
  4017da:	jne    401818 <__sprintf_chk@plt+0x478>
  4017dc:	add    rsp,0x8
  4017e0:	pop    rbx
  4017e1:	pop    rbp
  4017e2:	ret    
  4017e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4017e8:	mov    rdx,QWORD PTR [rsi+0x10]
  4017ec:	mov    rax,QWORD PTR [rbx+0x10]
  4017f0:	mov    rdx,QWORD PTR [rdx+0x10]
  4017f4:	mov    rdi,rbp
  4017f7:	add    QWORD PTR [rax+0x10],rdx
  4017fb:	xor    eax,eax
  4017fd:	call   401630 <__sprintf_chk@plt+0x290>
  401802:	mov    rax,QWORD PTR [rbx+0x18]
  401806:	mov    rdi,rbp
  401809:	mov    rsi,QWORD PTR [rax]
  40180c:	xor    eax,eax
  40180e:	call   401760 <__sprintf_chk@plt+0x3c0>
  401813:	jmp    4017a0 <__sprintf_chk@plt+0x400>
  401815:	nop    DWORD PTR [rax]
  401818:	add    rsp,0x8
  40181c:	pop    rbx
  40181d:	mov    rdi,rbp
  401820:	lea    rsi,[rip+0x27f1]        # 404018 <error@@Base+0x5f8>
  401827:	xor    eax,eax
  401829:	pop    rbp
  40182a:	jmp    4015b0 <__sprintf_chk@plt+0x210>
  40182f:	nop
  401830:	endbr64 
  401834:	push   rbx
  401835:	mov    esi,0x10
  40183a:	mov    rbx,rdi
  40183d:	mov    rax,QWORD PTR [rdi+0x18]
  401841:	lea    rdi,[rax+0x1]
  401845:	xor    eax,eax
  401847:	call   403a70 <error@@Base+0x50>
  40184c:	mov    r8,QWORD PTR [rbx]
  40184f:	test   r8,r8
  401852:	je     4018c7 <__sprintf_chk@plt+0x527>
  401854:	mov    rdx,QWORD PTR [r8+0x18]
  401858:	mov    rcx,QWORD PTR [r8+0x8]
  40185c:	mov    rdx,QWORD PTR [rdx]
  40185f:	test   rcx,rcx
  401862:	je     4018be <__sprintf_chk@plt+0x51e>
  401864:	nop    DWORD PTR [rax+0x0]
  401868:	mov    rsi,QWORD PTR [rcx+0x18]
  40186c:	mov    rdi,QWORD PTR [rsi]
  40186f:	lea    rsi,[rdx+0x2]
  401873:	cmp    rdi,rsi
  401876:	jne    401884 <__sprintf_chk@plt+0x4e4>
  401878:	lea    rsi,[rdx+0x1]
  40187c:	shl    rsi,0x4
  401880:	mov    BYTE PTR [rax+rsi*1],0x1
  401884:	mov    rsi,QWORD PTR [rcx+0x8]
  401888:	test   rsi,rsi
  40188b:	je     4018a7 <__sprintf_chk@plt+0x507>
  40188d:	mov    r10,QWORD PTR [rsi+0x18]
  401891:	lea    r9,[rdx+0x1]
  401895:	cmp    QWORD PTR [r10],r9
  401898:	jne    4018a7 <__sprintf_chk@plt+0x507>
  40189a:	mov    r9,rdi
  40189d:	shl    r9,0x4
  4018a1:	mov    BYTE PTR [rax+r9*1+0x1],0x1
  4018a7:	shl    rdx,0x4
  4018ab:	mov    QWORD PTR [rax+rdx*1+0x8],r8
  4018b0:	mov    r8,rcx
  4018b3:	mov    rcx,rsi
  4018b6:	mov    rdx,rdi
  4018b9:	test   rcx,rcx
  4018bc:	jne    401868 <__sprintf_chk@plt+0x4c8>
  4018be:	shl    rdx,0x4
  4018c2:	mov    QWORD PTR [rax+rdx*1+0x8],r8
  4018c7:	pop    rbx
  4018c8:	ret    
  4018c9:	nop    DWORD PTR [rax+0x0]
  4018d0:	endbr64 
  4018d4:	mov    r8,QWORD PTR [rdi+0x18]
  4018d8:	test   r8,r8
  4018db:	jle    401940 <__sprintf_chk@plt+0x5a0>
  4018dd:	lea    rdx,[rsi+0x10]
  4018e1:	inc    r8
  4018e4:	xor    edi,edi
  4018e6:	mov    ecx,0x1
  4018eb:	jmp    40190e <__sprintf_chk@plt+0x56e>
  4018ed:	nop    DWORD PTR [rax]
  4018f0:	mov    rdi,QWORD PTR [rdx+0x8]
  4018f4:	mov    rdi,QWORD PTR [rdi+0x10]
  4018f8:	mov    r10,QWORD PTR [rdi+0x10]
  4018fc:	mov    rdi,rax
  4018ff:	mov    r9,rcx
  401902:	inc    rcx
  401905:	add    rdx,0x10
  401909:	cmp    r8,rcx
  40190c:	je     401940 <__sprintf_chk@plt+0x5a0>
  40190e:	xor    eax,eax
  401910:	cmp    BYTE PTR [rdx],0x0
  401913:	setne  al
  401916:	inc    rax
  401919:	cmp    BYTE PTR [rdx+0x1],0x1
  40191d:	sbb    rax,0xffffffffffffffff
  401921:	cmp    rax,rdi
  401924:	jg     4018f0 <__sprintf_chk@plt+0x550>
  401926:	jne    401902 <__sprintf_chk@plt+0x562>
  401928:	mov    r11,QWORD PTR [rdx+0x8]
  40192c:	mov    r11,QWORD PTR [r11+0x10]
  401930:	mov    r11,QWORD PTR [r11+0x10]
  401934:	cmp    r11,r10
  401937:	jge    401902 <__sprintf_chk@plt+0x562>
  401939:	mov    r10,r11
  40193c:	jmp    4018fc <__sprintf_chk@plt+0x55c>
  40193e:	xchg   ax,ax
  401940:	shl    r9,0x4
  401944:	mov    rax,QWORD PTR [rsi+r9*1+0x8]
  401949:	ret    
  40194a:	nop    WORD PTR [rax+rax*1+0x0]
  401950:	endbr64 
  401954:	push   r12
  401956:	mov    r12,rsi
  401959:	mov    rsi,rdx
  40195c:	push   rbp
  40195d:	mov    rbp,rdi
  401960:	push   rbx
  401961:	mov    rbx,rdx
  401964:	sub    rsp,0x20
  401968:	mov    rax,QWORD PTR fs:0x28
  401971:	mov    QWORD PTR [rsp+0x18],rax
  401976:	xor    eax,eax
  401978:	call   401fd0 <__sprintf_chk@plt+0xc30>
  40197d:	mov    rax,QWORD PTR [rbx+0x18]
  401981:	mov    rax,QWORD PTR [rax]
  401984:	cmp    rax,0x1
  401988:	je     4019f0 <__sprintf_chk@plt+0x650>
  40198a:	shl    rax,0x4
  40198e:	mov    rsi,QWORD PTR [r12+rax*1-0x8]
  401993:	mov    rdx,rbx
  401996:	mov    rdi,rbp
  401999:	xor    eax,eax
  40199b:	call   401f80 <__sprintf_chk@plt+0xbe0>
  4019a0:	mov    rcx,QWORD PTR [rbx+0x10]
  4019a4:	mov    rdx,0x4072e0
  4019ab:	mov    eax,0x64
  4019b0:	inc    QWORD PTR [rdx+0x10]
  4019b4:	cmp    QWORD PTR [rcx+0x10],0x64
  4019b9:	cmovle rax,QWORD PTR [rcx+0x10]
  4019be:	movsx  rax,ax
  4019c2:	inc    QWORD PTR [rdx+rax*8+0x18]
  4019c7:	mov    rax,0x4072a0
  4019ce:	cmp    BYTE PTR [rax],0x0
  4019d1:	jne    401a08 <__sprintf_chk@plt+0x668>
  4019d3:	mov    rax,QWORD PTR [rsp+0x18]
  4019d8:	xor    rax,QWORD PTR fs:0x28
  4019e1:	jne    401a3c <__sprintf_chk@plt+0x69c>
  4019e3:	add    rsp,0x20
  4019e7:	pop    rbx
  4019e8:	pop    rbp
  4019e9:	pop    r12
  4019eb:	ret    
  4019ec:	nop    DWORD PTR [rax+0x0]
  4019f0:	mov    rdx,QWORD PTR [r12+0x28]
  4019f5:	mov    rsi,rbx
  4019f8:	mov    rdi,rbp
  4019fb:	xor    eax,eax
  4019fd:	call   401f30 <__sprintf_chk@plt+0xb90>
  401a02:	jmp    4019a0 <__sprintf_chk@plt+0x600>
  401a04:	nop    DWORD PTR [rax+0x0]
  401a08:	mov    rax,QWORD PTR [rbx+0x18]
  401a0c:	mov    rbx,rsp
  401a0f:	mov    r8,QWORD PTR [rax]
  401a12:	mov    rdi,rbx
  401a15:	lea    rcx,[rip+0x2605]        # 404021 <error@@Base+0x601>
  401a1c:	mov    edx,0x14
  401a21:	mov    esi,0x1
  401a26:	xor    eax,eax
  401a28:	call   4013a0 <__sprintf_chk@plt>
  401a2d:	mov    rsi,rbx
  401a30:	mov    rdi,rbp
  401a33:	xor    eax,eax
  401a35:	call   4015b0 <__sprintf_chk@plt+0x210>
  401a3a:	jmp    4019d3 <__sprintf_chk@plt+0x633>
  401a3c:	call   401260 <__stack_chk_fail@plt>
  401a41:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401a4c:	nop    DWORD PTR [rax+0x0]
  401a50:	endbr64 
  401a54:	push   rbp
  401a55:	push   rbx
  401a56:	mov    rbx,rdi
  401a59:	sub    rsp,0x8
  401a5d:	mov    rax,0x4072a0
  401a64:	cmp    BYTE PTR [rax],0x0
  401a67:	je     401aa2 <__sprintf_chk@plt+0x702>
  401a69:	jmp    401ac0 <__sprintf_chk@plt+0x720>
  401a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  401a70:	mov    rdi,rbx
  401a73:	xor    eax,eax
  401a75:	call   401830 <__sprintf_chk@plt+0x490>
  401a7a:	mov    rbp,rax
  401a7d:	mov    rsi,rax
  401a80:	mov    rdi,rbx
  401a83:	xor    eax,eax
  401a85:	call   4018d0 <__sprintf_chk@plt+0x530>
  401a8a:	mov    rdx,rax
  401a8d:	mov    rdi,rbx
  401a90:	mov    rsi,rbp
  401a93:	xor    eax,eax
  401a95:	call   401950 <__sprintf_chk@plt+0x5b0>
  401a9a:	mov    rdi,rbp
  401a9d:	call   4011f0 <free@plt>
  401aa2:	xor    eax,eax
  401aa4:	mov    rdi,rbx
  401aa7:	call   401790 <__sprintf_chk@plt+0x3f0>
  401aac:	cmp    QWORD PTR [rbx+0x18],0x1
  401ab1:	jg     401a70 <__sprintf_chk@plt+0x6d0>
  401ab3:	add    rsp,0x8
  401ab7:	pop    rbx
  401ab8:	pop    rbp
  401ab9:	ret    
  401aba:	nop    WORD PTR [rax+rax*1+0x0]
  401ac0:	lea    rsi,[rip+0x2564]        # 40402b <error@@Base+0x60b>
  401ac7:	xor    eax,eax
  401ac9:	call   4015b0 <__sprintf_chk@plt+0x210>
  401ace:	jmp    401aa2 <__sprintf_chk@plt+0x702>
  401ad0:	push   rbp
  401ad1:	mov    rbp,rdx
  401ad4:	mov    rdx,rdi
  401ad7:	push   rbx
  401ad8:	lea    rdi,[rip+0x56a1]        # 407180 <error@@Base+0x3760>
  401adf:	mov    rbx,rsi
  401ae2:	sub    rsp,0x8
  401ae6:	mov    esi,0x63
  401aeb:	call   4012a0 <fgets@plt>
  401af0:	test   rax,rax
  401af3:	je     401b12 <__sprintf_chk@plt+0x772>
  401af5:	xor    eax,eax
  401af7:	mov    rdx,rbx
  401afa:	lea    rsi,[rip+0x2526]        # 404027 <error@@Base+0x607>
  401b01:	lea    rdi,[rip+0x5678]        # 407180 <error@@Base+0x3760>
  401b08:	call   401300 <__isoc99_sscanf@plt>
  401b0d:	cmp    eax,0x1
  401b10:	je     401b20 <__sprintf_chk@plt+0x780>
  401b12:	add    rsp,0x8
  401b16:	pop    rbx
  401b17:	xor    eax,eax
  401b19:	pop    rbp
  401b1a:	ret    
  401b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  401b20:	mov    rax,QWORD PTR [rbx]
  401b23:	add    QWORD PTR [rbp+0x0],rax
  401b27:	add    rsp,0x8
  401b2b:	pop    rbx
  401b2c:	mov    eax,0x1
  401b31:	pop    rbp
  401b32:	ret    
  401b33:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401b3e:	xchg   ax,ax
  401b40:	endbr64 
  401b44:	push   r14
  401b46:	push   r13
  401b48:	mov    r13,rsi
  401b4b:	lea    rsi,[rip+0x269d]        # 4041ef <error@@Base+0x7cf>
  401b52:	push   r12
  401b54:	push   rbp
  401b55:	mov    rbp,rdi
  401b58:	mov    rdi,r13
  401b5b:	push   rbx
  401b5c:	sub    rsp,0x20
  401b60:	mov    rax,QWORD PTR fs:0x28
  401b69:	mov    QWORD PTR [rsp+0x18],rax
  401b6e:	xor    eax,eax
  401b70:	call   403b20 <error@@Base+0x100>
  401b75:	mov    rdx,rax
  401b78:	mov    esi,0x63
  401b7d:	lea    rdi,[rip+0x55fc]        # 407180 <error@@Base+0x3760>
  401b84:	mov    rbx,rax
  401b87:	call   4012a0 <fgets@plt>
  401b8c:	test   rax,rax
  401b8f:	je     401d11 <__sprintf_chk@plt+0x971>
  401b95:	lea    r12,[rip+0x55e4]        # 407180 <error@@Base+0x3760>
  401b9c:	mov    ecx,0x2a
  401ba1:	lea    rdi,[rip+0x2560]        # 404108 <error@@Base+0x6e8>
  401ba8:	mov    rsi,r12
  401bab:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401bad:	seta   al
  401bb0:	sbb    al,0x0
  401bb2:	test   al,al
  401bb4:	jne    401d11 <__sprintf_chk@plt+0x971>
  401bba:	mov    rdx,rbx
  401bbd:	mov    esi,0x63
  401bc2:	mov    rdi,r12
  401bc5:	call   4012a0 <fgets@plt>
  401bca:	test   rax,rax
  401bcd:	je     401d11 <__sprintf_chk@plt+0x971>
  401bd3:	mov    ecx,0x2d
  401bd8:	lea    rdi,[rip+0x2559]        # 404138 <error@@Base+0x718>
  401bdf:	mov    rsi,r12
  401be2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401be4:	seta   al
  401be7:	sbb    al,0x0
  401be9:	test   al,al
  401beb:	jne    401d11 <__sprintf_chk@plt+0x971>
  401bf1:	lea    r14,[rsp+0x8]
  401bf6:	mov    rdx,rbp
  401bf9:	mov    rsi,r14
  401bfc:	mov    rdi,rbx
  401bff:	call   401ad0 <__sprintf_chk@plt+0x730>
  401c04:	test   al,al
  401c06:	je     401d11 <__sprintf_chk@plt+0x971>
  401c0c:	xor    eax,eax
  401c0e:	lea    rdx,[rbp+0x8]
  401c12:	mov    rsi,r14
  401c15:	mov    rdi,rbx
  401c18:	call   401ad0 <__sprintf_chk@plt+0x730>
  401c1d:	test   al,al
  401c1f:	je     401d11 <__sprintf_chk@plt+0x971>
  401c25:	xor    eax,eax
  401c27:	lea    rdx,[rbp+0x10]
  401c2b:	mov    rsi,rsp
  401c2e:	mov    rdi,rbx
  401c31:	call   401ad0 <__sprintf_chk@plt+0x730>
  401c36:	test   al,al
  401c38:	je     401d11 <__sprintf_chk@plt+0x971>
  401c3e:	cmp    QWORD PTR [rsp],0x0
  401c43:	jg     401c70 <__sprintf_chk@plt+0x8d0>
  401c45:	xor    eax,eax
  401c47:	mov    rdi,rbx
  401c4a:	call   403890 <__sprintf_chk@plt+0x24f0>
  401c4f:	mov    rax,QWORD PTR [rsp+0x18]
  401c54:	xor    rax,QWORD PTR fs:0x28
  401c5d:	jne    401d30 <__sprintf_chk@plt+0x990>
  401c63:	add    rsp,0x20
  401c67:	pop    rbx
  401c68:	pop    rbp
  401c69:	pop    r12
  401c6b:	pop    r13
  401c6d:	pop    r14
  401c6f:	ret    
  401c70:	mov    rdx,rbx
  401c73:	mov    esi,0x63
  401c78:	mov    rdi,r12
  401c7b:	call   4012a0 <fgets@plt>
  401c80:	test   rax,rax
  401c83:	je     401c45 <__sprintf_chk@plt+0x8a5>
  401c85:	mov    rdx,rbx
  401c88:	mov    esi,0x63
  401c8d:	mov    rdi,r12
  401c90:	call   4012a0 <fgets@plt>
  401c95:	test   rax,rax
  401c98:	je     401c45 <__sprintf_chk@plt+0x8a5>
  401c9a:	mov    rdx,rbx
  401c9d:	mov    esi,0x63
  401ca2:	mov    rdi,r12
  401ca5:	call   4012a0 <fgets@plt>
  401caa:	test   rax,rax
  401cad:	je     401c45 <__sprintf_chk@plt+0x8a5>
  401caf:	lea    r12,[rsp+0x10]
  401cb4:	jmp    401cf3 <__sprintf_chk@plt+0x953>
  401cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401cc0:	xor    eax,eax
  401cc2:	mov    rcx,r12
  401cc5:	mov    rdx,r14
  401cc8:	lea    rsi,[rip+0x23c9]        # 404098 <error@@Base+0x678>
  401ccf:	lea    rdi,[rip+0x54aa]        # 407180 <error@@Base+0x3760>
  401cd6:	call   401300 <__isoc99_sscanf@plt>
  401cdb:	cmp    eax,0x2
  401cde:	jne    401c45 <__sprintf_chk@plt+0x8a5>
  401ce4:	mov    rax,QWORD PTR [rsp+0x10]
  401ce9:	mov    rdx,QWORD PTR [rsp+0x8]
  401cee:	add    QWORD PTR [rbp+rax*8+0x18],rdx
  401cf3:	mov    rdx,rbx
  401cf6:	mov    esi,0x63
  401cfb:	lea    rdi,[rip+0x547e]        # 407180 <error@@Base+0x3760>
  401d02:	call   4012a0 <fgets@plt>
  401d07:	test   rax,rax
  401d0a:	jne    401cc0 <__sprintf_chk@plt+0x920>
  401d0c:	jmp    401c45 <__sprintf_chk@plt+0x8a5>
  401d11:	test   r13,r13
  401d14:	lea    rax,[rip+0x2377]        # 404092 <error@@Base+0x672>
  401d1b:	cmove  r13,rax
  401d1f:	lea    rdi,[rip+0x237a]        # 4040a0 <error@@Base+0x680>
  401d26:	mov    rsi,r13
  401d29:	xor    eax,eax
  401d2b:	call   403ad0 <error@@Base+0xb0>
  401d30:	call   401260 <__stack_chk_fail@plt>
  401d35:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401d40:	endbr64 
  401d44:	push   r13
  401d46:	xor    eax,eax
  401d48:	push   r12
  401d4a:	push   rbp
  401d4b:	mov    rbp,rdi
  401d4e:	mov    rdi,rsi
  401d51:	push   rbx
  401d52:	lea    rsi,[rip+0x2359]        # 4040b2 <error@@Base+0x692>
  401d59:	sub    rsp,0x8
  401d5d:	call   403b20 <error@@Base+0x100>
  401d62:	mov    r12,rax
  401d65:	mov    rdi,rax
  401d68:	lea    r8,[rip+0x23c9]        # 404138 <error@@Base+0x718>
  401d6f:	lea    rcx,[rip+0x2392]        # 404108 <error@@Base+0x6e8>
  401d76:	lea    rdx,[rip+0x2337]        # 4040b4 <error@@Base+0x694>
  401d7d:	mov    esi,0x1
  401d82:	xor    eax,eax
  401d84:	call   401360 <__fprintf_chk@plt>
  401d89:	mov    rcx,QWORD PTR [rbp+0x0]
  401d8d:	lea    r8,[rip+0x2325]        # 4040b9 <error@@Base+0x699>
  401d94:	lea    rdx,[rip+0x2329]        # 4040c4 <error@@Base+0x6a4>
  401d9b:	mov    esi,0x1
  401da0:	mov    rdi,r12
  401da3:	xor    eax,eax
  401da5:	call   401360 <__fprintf_chk@plt>
  401daa:	mov    rcx,QWORD PTR [rbp+0x8]
  401dae:	lea    r8,[rip+0x231a]        # 4040cf <error@@Base+0x6af>
  401db5:	lea    rdx,[rip+0x2308]        # 4040c4 <error@@Base+0x6a4>
  401dbc:	mov    esi,0x1
  401dc1:	mov    rdi,r12
  401dc4:	xor    eax,eax
  401dc6:	call   401360 <__fprintf_chk@plt>
  401dcb:	mov    rcx,QWORD PTR [rbp+0x10]
  401dcf:	xor    eax,eax
  401dd1:	lea    r8,[rip+0x2301]        # 4040d9 <error@@Base+0x6b9>
  401dd8:	lea    rdx,[rip+0x22e5]        # 4040c4 <error@@Base+0x6a4>
  401ddf:	mov    esi,0x1
  401de4:	mov    rdi,r12
  401de7:	call   401360 <__fprintf_chk@plt>
  401dec:	cmp    QWORD PTR [rbp+0x10],0x0
  401df1:	jg     401e07 <__sprintf_chk@plt+0xa67>
  401df3:	add    rsp,0x8
  401df7:	pop    rbx
  401df8:	pop    rbp
  401df9:	mov    rdi,r12
  401dfc:	pop    r12
  401dfe:	xor    eax,eax
  401e00:	pop    r13
  401e02:	jmp    403890 <__sprintf_chk@plt+0x24f0>
  401e07:	lea    rdx,[rip+0x22d1]        # 4040df <error@@Base+0x6bf>
  401e0e:	mov    esi,0x1
  401e13:	mov    rdi,r12
  401e16:	xor    eax,eax
  401e18:	call   401360 <__fprintf_chk@plt>
  401e1d:	mov    ebx,0x1
  401e22:	lea    r13,[rip+0x22d0]        # 4040f9 <error@@Base+0x6d9>
  401e29:	nop    DWORD PTR [rax+0x0]
  401e30:	mov    rcx,QWORD PTR [rbp+rbx*8+0x18]
  401e35:	test   rcx,rcx
  401e38:	jle    401e4f <__sprintf_chk@plt+0xaaf>
  401e3a:	mov    r8,rbx
  401e3d:	mov    rdx,r13
  401e40:	mov    esi,0x1
  401e45:	mov    rdi,r12
  401e48:	xor    eax,eax
  401e4a:	call   401360 <__fprintf_chk@plt>
  401e4f:	inc    rbx
  401e52:	cmp    rbx,0x65
  401e56:	jne    401e30 <__sprintf_chk@plt+0xa90>
  401e58:	jmp    401df3 <__sprintf_chk@plt+0xa53>
  401e5a:	nop    WORD PTR [rax+rax*1+0x0]
  401e60:	endbr64 
  401e64:	mov    QWORD PTR [rdi+0x8],0x0
  401e6c:	mov    QWORD PTR [rdi],0x0
  401e73:	mov    QWORD PTR [rdi+0x10],0x0
  401e7b:	mov    QWORD PTR [rdi+0x18],0x0
  401e83:	ret    
  401e84:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401e8f:	nop
  401e90:	endbr64 
  401e94:	push   rbx
  401e95:	mov    rbx,rdi
  401e98:	mov    rax,QWORD PTR [rdi]
  401e9b:	mov    QWORD PTR [rsi],0x0
  401ea2:	mov    QWORD PTR [rsi+0x8],rax
  401ea6:	mov    QWORD PTR [rdi],rsi
  401ea9:	test   rax,rax
  401eac:	je     401ed0 <__sprintf_chk@plt+0xb30>
  401eae:	mov    QWORD PTR [rax],rsi
  401eb1:	mov    rdi,QWORD PTR [rbx+0x10]
  401eb5:	test   rdi,rdi
  401eb8:	je     401ec7 <__sprintf_chk@plt+0xb27>
  401eba:	call   4011f0 <free@plt>
  401ebf:	mov    QWORD PTR [rbx+0x10],0x0
  401ec7:	inc    QWORD PTR [rbx+0x18]
  401ecb:	pop    rbx
  401ecc:	ret    
  401ecd:	nop    DWORD PTR [rax]
  401ed0:	mov    QWORD PTR [rdi+0x8],rsi
  401ed4:	jmp    401eb1 <__sprintf_chk@plt+0xb11>
  401ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ee0:	endbr64 
  401ee4:	push   rbx
  401ee5:	mov    rbx,rdi
  401ee8:	mov    rax,QWORD PTR [rdi+0x8]
  401eec:	mov    QWORD PTR [rsi+0x8],0x0
  401ef4:	mov    QWORD PTR [rsi],rax
  401ef7:	test   rax,rax
  401efa:	je     401f20 <__sprintf_chk@plt+0xb80>
  401efc:	mov    QWORD PTR [rax+0x8],rsi
  401f00:	mov    rdi,QWORD PTR [rbx+0x10]
  401f04:	mov    QWORD PTR [rbx+0x8],rsi
  401f08:	test   rdi,rdi
  401f0b:	je     401f1a <__sprintf_chk@plt+0xb7a>
  401f0d:	call   4011f0 <free@plt>
  401f12:	mov    QWORD PTR [rbx+0x10],0x0
  401f1a:	inc    QWORD PTR [rbx+0x18]
  401f1e:	pop    rbx
  401f1f:	ret    
  401f20:	mov    QWORD PTR [rdi],rsi
  401f23:	jmp    401f00 <__sprintf_chk@plt+0xb60>
  401f25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401f30:	endbr64 
  401f34:	mov    rax,QWORD PTR [rdx]
  401f37:	push   rbx
  401f38:	mov    QWORD PTR [rsi],rax
  401f3b:	mov    rbx,rdi
  401f3e:	mov    QWORD PTR [rsi+0x8],rdx
  401f42:	test   rax,rax
  401f45:	je     401f70 <__sprintf_chk@plt+0xbd0>
  401f47:	mov    QWORD PTR [rax+0x8],rsi
  401f4b:	mov    rdi,QWORD PTR [rbx+0x10]
  401f4f:	mov    QWORD PTR [rdx],rsi
  401f52:	test   rdi,rdi
  401f55:	je     401f64 <__sprintf_chk@plt+0xbc4>
  401f57:	call   4011f0 <free@plt>
  401f5c:	mov    QWORD PTR [rbx+0x10],0x0
  401f64:	inc    QWORD PTR [rbx+0x18]
  401f68:	pop    rbx
  401f69:	ret    
  401f6a:	nop    WORD PTR [rax+rax*1+0x0]
  401f70:	mov    QWORD PTR [rdi],rsi
  401f73:	jmp    401f4b <__sprintf_chk@plt+0xbab>
  401f75:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401f80:	endbr64 
  401f84:	mov    rax,QWORD PTR [rsi+0x8]
  401f88:	push   rbx
  401f89:	mov    QWORD PTR [rdx],rsi
  401f8c:	mov    QWORD PTR [rdx+0x8],rax
  401f90:	mov    rbx,rdi
  401f93:	mov    QWORD PTR [rsi+0x8],rdx
  401f97:	test   rax,rax
  401f9a:	je     401fc0 <__sprintf_chk@plt+0xc20>
  401f9c:	mov    QWORD PTR [rax],rdx
  401f9f:	mov    rdi,QWORD PTR [rbx+0x10]
  401fa3:	test   rdi,rdi
  401fa6:	je     401fb5 <__sprintf_chk@plt+0xc15>
  401fa8:	call   4011f0 <free@plt>
  401fad:	mov    QWORD PTR [rbx+0x10],0x0
  401fb5:	inc    QWORD PTR [rbx+0x18]
  401fb9:	pop    rbx
  401fba:	ret    
  401fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  401fc0:	mov    QWORD PTR [rdi+0x8],rdx
  401fc4:	jmp    401f9f <__sprintf_chk@plt+0xbff>
  401fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401fd0:	endbr64 
  401fd4:	mov    rdx,QWORD PTR [rsi]
  401fd7:	push   rbx
  401fd8:	mov    rax,QWORD PTR [rsi+0x8]
  401fdc:	mov    rbx,rdi
  401fdf:	test   rdx,rdx
  401fe2:	je     402020 <__sprintf_chk@plt+0xc80>
  401fe4:	mov    QWORD PTR [rdx+0x8],rax
  401fe8:	mov    rax,QWORD PTR [rsi+0x8]
  401fec:	test   rax,rax
  401fef:	je     402028 <__sprintf_chk@plt+0xc88>
  401ff1:	mov    QWORD PTR [rax],rdx
  401ff4:	mov    rdi,QWORD PTR [rbx+0x10]
  401ff8:	mov    QWORD PTR [rsi+0x8],0x0
  402000:	mov    QWORD PTR [rsi],0x0
  402007:	test   rdi,rdi
  40200a:	je     402019 <__sprintf_chk@plt+0xc79>
  40200c:	call   4011f0 <free@plt>
  402011:	mov    QWORD PTR [rbx+0x10],0x0
  402019:	dec    QWORD PTR [rbx+0x18]
  40201d:	pop    rbx
  40201e:	ret    
  40201f:	nop
  402020:	mov    QWORD PTR [rdi],rax
  402023:	test   rax,rax
  402026:	jne    401ff1 <__sprintf_chk@plt+0xc51>
  402028:	mov    QWORD PTR [rbx+0x8],rdx
  40202c:	jmp    401ff4 <__sprintf_chk@plt+0xc54>
  40202e:	xchg   ax,ax
  402030:	endbr64 
  402034:	cmp    QWORD PTR [rdi+0x10],0x0
  402039:	je     402040 <__sprintf_chk@plt+0xca0>
  40203b:	ret    
  40203c:	nop    DWORD PTR [rax+0x0]
  402040:	mov    rax,QWORD PTR [rdi+0x18]
  402044:	test   rax,rax
  402047:	je     40203b <__sprintf_chk@plt+0xc9b>
  402049:	push   rbx
  40204a:	mov    esi,0x8
  40204f:	mov    rbx,rdi
  402052:	mov    rdi,rax
  402055:	xor    eax,eax
  402057:	call   403a70 <error@@Base+0x50>
  40205c:	mov    rdx,QWORD PTR [rbx]
  40205f:	mov    QWORD PTR [rbx+0x10],rax
  402063:	test   rdx,rdx
  402066:	je     402080 <__sprintf_chk@plt+0xce0>
  402068:	nop    DWORD PTR [rax+rax*1+0x0]
  402070:	mov    QWORD PTR [rax],rdx
  402073:	add    rax,0x8
  402077:	mov    rdx,QWORD PTR [rdx+0x8]
  40207b:	test   rdx,rdx
  40207e:	jne    402070 <__sprintf_chk@plt+0xcd0>
  402080:	pop    rbx
  402081:	ret    
  402082:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40208d:	nop    DWORD PTR [rax]
  402090:	endbr64 
  402094:	push   r12
  402096:	push   rbp
  402097:	push   rbx
  402098:	mov    rbx,QWORD PTR [rdi]
  40209b:	test   rbx,rbx
  40209e:	je     4020ce <__sprintf_chk@plt+0xd2e>
  4020a0:	mov    rbp,rdi
  4020a3:	mov    r12,rsi
  4020a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4020b0:	mov    rsi,rbx
  4020b3:	mov    rdi,rbp
  4020b6:	xor    eax,eax
  4020b8:	call   401fd0 <__sprintf_chk@plt+0xc30>
  4020bd:	mov    rdi,rbx
  4020c0:	xor    eax,eax
  4020c2:	call   r12
  4020c5:	mov    rbx,QWORD PTR [rbp+0x0]
  4020c9:	test   rbx,rbx
  4020cc:	jne    4020b0 <__sprintf_chk@plt+0xd10>
  4020ce:	pop    rbx
  4020cf:	pop    rbp
  4020d0:	pop    r12
  4020d2:	ret    
  4020d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4020dd:	nop    DWORD PTR [rax]
  4020e0:	push   r15
  4020e2:	mov    rax,rcx
  4020e5:	sub    rax,rdi
  4020e8:	push   r14
  4020ea:	mov    r15,rdi
  4020ed:	push   r13
  4020ef:	push   r12
  4020f1:	mov    r12,rdi
  4020f4:	push   rbp
  4020f5:	push   rbx
  4020f6:	mov    rbx,QWORD PTR [rsp+0x38]
  4020fb:	mov    QWORD PTR [rsp-0x10],r9
  402100:	mov    rbp,rbx
  402103:	mov    QWORD PTR [rsp-0x8],rax
  402108:	sub    rbp,rdi
  40210b:	cmp    rax,rdx
  40210e:	jl     402221 <__sprintf_chk@plt+0xe81>
  402114:	nop    DWORD PTR [rax+0x0]
  402118:	lea    r15,[rdx+0x1]
  40211c:	cmp    QWORD PTR [rsp-0x10],rbp
  402121:	jg     402210 <__sprintf_chk@plt+0xe70>
  402127:	mov    rax,QWORD PTR [rsi+rdx*8]
  40212b:	lea    r15,[rdx+0x1]
  40212f:	mov    r13d,DWORD PTR [rax+0x14]
  402133:	mov    r9,QWORD PTR [rsp-0x10]
  402138:	cmp    r13d,0x7e
  40213c:	setne  r14b
  402140:	jmp    402154 <__sprintf_chk@plt+0xdb4>
  402142:	nop    WORD PTR [rax+rax*1+0x0]
  402148:	mov    r9,r11
  40214b:	cmp    rbp,r11
  40214e:	jl     402210 <__sprintf_chk@plt+0xe70>
  402154:	mov    rax,QWORD PTR [r8+r9*8]
  402158:	lea    r11,[r9+0x1]
  40215c:	cmp    DWORD PTR [rax+0x14],r13d
  402160:	jne    402148 <__sprintf_chk@plt+0xda8>
  402162:	test   r14b,r14b
  402165:	je     402148 <__sprintf_chk@plt+0xda8>
  402167:	cmp    r15,rcx
  40216a:	jg     402230 <__sprintf_chk@plt+0xe90>
  402170:	cmp    rbx,r11
  402173:	jl     402230 <__sprintf_chk@plt+0xe90>
  402179:	mov    rax,QWORD PTR [rsi+rdx*8+0x8]
  40217e:	mov    rdi,QWORD PTR [r8+r11*8]
  402182:	mov    eax,DWORD PTR [rax+0x14]
  402185:	cmp    DWORD PTR [rdi+0x14],eax
  402188:	jne    402230 <__sprintf_chk@plt+0xe90>
  40218e:	cmp    eax,0x7e
  402191:	je     402230 <__sprintf_chk@plt+0xe90>
  402197:	mov    rdi,r11
  40219a:	mov    rax,r15
  40219d:	mov    QWORD PTR [rsp-0x18],rdx
  4021a2:	jmp    4021ae <__sprintf_chk@plt+0xe0e>
  4021a4:	nop    DWORD PTR [rax+0x0]
  4021a8:	cmp    r10d,0x7e
  4021ac:	je     4021d0 <__sprintf_chk@plt+0xe30>
  4021ae:	inc    rax
  4021b1:	inc    rdi
  4021b4:	cmp    rcx,rax
  4021b7:	jl     4021d0 <__sprintf_chk@plt+0xe30>
  4021b9:	cmp    rbx,rdi
  4021bc:	jl     4021d0 <__sprintf_chk@plt+0xe30>
  4021be:	mov    r10,QWORD PTR [rsi+rax*8]
  4021c2:	mov    rdx,QWORD PTR [r8+rdi*8]
  4021c6:	mov    r10d,DWORD PTR [r10+0x14]
  4021ca:	cmp    DWORD PTR [rdx+0x14],r10d
  4021ce:	je     4021a8 <__sprintf_chk@plt+0xe08>
  4021d0:	mov    rdx,QWORD PTR [rsp-0x18]
  4021d5:	sub    rax,rdx
  4021d8:	mov    rdi,rax
  4021db:	sub    rdi,r12
  4021de:	test   rdi,rdi
  4021e1:	jle    402148 <__sprintf_chk@plt+0xda8>
  4021e7:	sub    QWORD PTR [rsp-0x8],rdi
  4021ec:	sub    rbp,rdi
  4021ef:	mov    rdi,QWORD PTR [rsp+0x40]
  4021f4:	mov    r12,rax
  4021f7:	mov    QWORD PTR [rdi],rdx
  4021fa:	mov    rdi,QWORD PTR [rsp+0x48]
  4021ff:	mov    QWORD PTR [rdi],r9
  402202:	mov    r9,r11
  402205:	cmp    rbp,r11
  402208:	jge    402154 <__sprintf_chk@plt+0xdb4>
  40220e:	xchg   ax,ax
  402210:	mov    rdx,r15
  402213:	cmp    r15,QWORD PTR [rsp-0x8]
  402218:	jle    402118 <__sprintf_chk@plt+0xd78>
  40221e:	mov    r15,r12
  402221:	pop    rbx
  402222:	pop    rbp
  402223:	pop    r12
  402225:	pop    r13
  402227:	pop    r14
  402229:	mov    rax,r15
  40222c:	pop    r15
  40222e:	ret    
  40222f:	nop
  402230:	mov    rax,r15
  402233:	jmp    4021d5 <__sprintf_chk@plt+0xe35>
  402235:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402240:	test   rsi,rsi
  402243:	je     4022b0 <__sprintf_chk@plt+0xf10>
  402245:	mov    r8,QWORD PTR [rsi+0x18]
  402249:	lea    rcx,[rdi-0x1]
  40224d:	cmp    rcx,r8
  402250:	lea    r10,[rdi+0x1]
  402254:	cmovl  rcx,r8
  402258:	cmp    QWORD PTR [rsi+0x20],r10
  40225c:	cmovle r10,QWORD PTR [rsi+0x20]
  402261:	cmp    rcx,r10
  402264:	jg     4022b3 <__sprintf_chk@plt+0xf13>
  402266:	mov    r11,QWORD PTR [rsi+0x28]
  40226a:	inc    r10
  40226d:	xor    eax,eax
  40226f:	jmp    40227c <__sprintf_chk@plt+0xedc>
  402271:	nop    DWORD PTR [rax+0x0]
  402278:	mov    r8,QWORD PTR [rsi+0x18]
  40227c:	mov    r9,rcx
  40227f:	sub    r9,r8
  402282:	movzx  r8d,WORD PTR [r11+r9*2]
  402287:	xor    r9d,r9d
  40228a:	cmp    rdi,rcx
  40228d:	setle  r9b
  402291:	add    r8,r9
  402294:	cmp    r8,rax
  402297:	jl     40229f <__sprintf_chk@plt+0xeff>
  402299:	mov    QWORD PTR [rdx],rcx
  40229c:	mov    rax,r8
  40229f:	inc    rcx
  4022a2:	cmp    rcx,r10
  4022a5:	jne    402278 <__sprintf_chk@plt+0xed8>
  4022a7:	ret    
  4022a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4022b0:	xor    eax,eax
  4022b2:	ret    
  4022b3:	push   rax
  4022b4:	lea    rdi,[rip+0x1ead]        # 404168 <error@@Base+0x748>
  4022bb:	xor    eax,eax
  4022bd:	call   403a20 <error@@Base>
  4022c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4022cd:	nop    DWORD PTR [rax]
  4022d0:	push   rbp
  4022d1:	mov    esi,0x20
  4022d6:	xor    eax,eax
  4022d8:	push   rbx
  4022d9:	mov    ebx,edi
  4022db:	mov    edi,0x1
  4022e0:	sub    rsp,0x8
  4022e4:	call   403a70 <error@@Base+0x50>
  4022e9:	mov    rbp,rax
  4022ec:	movsx  rdi,bx
  4022f0:	mov    esi,0x18
  4022f5:	xor    eax,eax
  4022f7:	call   403a70 <error@@Base+0x50>
  4022fc:	mov    QWORD PTR [rbp+0x10],rax
  402300:	add    rsp,0x8
  402304:	mov    rax,rbp
  402307:	pop    rbx
  402308:	pop    rbp
  402309:	ret    
  40230a:	nop    WORD PTR [rax+rax*1+0x0]
  402310:	push   r15
  402312:	xor    eax,eax
  402314:	xor    r15d,r15d
  402317:	push   r14
  402319:	push   r13
  40231b:	mov    r13d,esi
  40231e:	push   r12
  402320:	mov    r12,rdi
  402323:	push   rbp
  402324:	push   rbx
  402325:	mov    rbx,rdx
  402328:	sub    rsp,0x8
  40232c:	call   401e60 <__sprintf_chk@plt+0xac0>
  402331:	movsx  edi,r13w
  402335:	xor    eax,eax
  402337:	dec    r13d
  40233a:	call   4022d0 <__sprintf_chk@plt+0xf30>
  40233f:	movzx  r13d,r13w
  402343:	mov    rbp,rax
  402346:	mov    rax,r13
  402349:	shl    rax,0x5
  40234d:	lea    r14,[rbx+rax*1+0x20]
  402352:	nop    WORD PTR [rax+rax*1+0x0]
  402358:	mov    rdi,rbx
  40235b:	xor    eax,eax
  40235d:	call   402030 <__sprintf_chk@plt+0xc90>
  402362:	mov    rdi,QWORD PTR [rbp+0x10]
  402366:	add    rbx,0x20
  40236a:	lea    rax,[rdi+r15*1]
  40236e:	mov    QWORD PTR [rax],0x0
  402375:	add    r15,0x18
  402379:	mov    rdx,QWORD PTR [rbx-0x8]
  40237d:	lea    rcx,[rdx-0x1]
  402381:	mov    QWORD PTR [rax+0x8],rcx
  402385:	mov    QWORD PTR [rax+0x10],rdx
  402389:	cmp    rbx,r14
  40238c:	jne    402358 <__sprintf_chk@plt+0xfb8>
  40238e:	lea    rdx,[r13+r13*2+0x0]
  402393:	lea    rax,[rdi+0x10]
  402397:	lea    rdx,[rdi+rdx*8+0x28]
  40239c:	nop    DWORD PTR [rax+0x0]
  4023a0:	cmp    QWORD PTR [rax],0x0
  4023a4:	jg     4023d0 <__sprintf_chk@plt+0x1030>
  4023a6:	add    rax,0x18
  4023aa:	cmp    rdx,rax
  4023ad:	jne    4023a0 <__sprintf_chk@plt+0x1000>
  4023af:	call   4011f0 <free@plt>
  4023b4:	add    rsp,0x8
  4023b8:	pop    rbx
  4023b9:	mov    rdi,rbp
  4023bc:	pop    rbp
  4023bd:	pop    r12
  4023bf:	pop    r13
  4023c1:	pop    r14
  4023c3:	pop    r15
  4023c5:	jmp    4011f0 <free@plt>
  4023ca:	nop    WORD PTR [rax+rax*1+0x0]
  4023d0:	add    rsp,0x8
  4023d4:	pop    rbx
  4023d5:	mov    rsi,rbp
  4023d8:	pop    rbp
  4023d9:	mov    rdi,r12
  4023dc:	pop    r12
  4023de:	pop    r13
  4023e0:	pop    r14
  4023e2:	xor    eax,eax
  4023e4:	pop    r15
  4023e6:	jmp    401e90 <__sprintf_chk@plt+0xaf0>
  4023eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4023f0:	push   r15
  4023f2:	xor    eax,eax
  4023f4:	mov    r15,rcx
  4023f7:	push   r14
  4023f9:	mov    r14,r8
  4023fc:	push   r13
  4023fe:	movsx  r13d,si
  402402:	push   r12
  402404:	mov    r12d,esi
  402407:	push   rbp
  402408:	mov    ebp,esi
  40240a:	push   rbx
  40240b:	mov    rbx,rdx
  40240e:	sub    rsp,0x28
  402412:	mov    QWORD PTR [rsp+0x8],rdi
  402417:	mov    edi,r13d
  40241a:	mov    QWORD PTR [rsp+0x10],r9
  40241f:	call   4022d0 <__sprintf_chk@plt+0xf30>
  402424:	mov    QWORD PTR [rsp],rax
  402428:	mov    edi,r13d
  40242b:	xor    eax,eax
  40242d:	call   4022d0 <__sprintf_chk@plt+0xf30>
  402432:	mov    r13,rax
  402435:	test   bp,bp
  402438:	jle    4025a0 <__sprintf_chk@plt+0x1200>
  40243e:	mov    rax,QWORD PTR [rsp]
  402442:	dec    ebp
  402444:	mov    rdi,QWORD PTR [rax+0x10]
  402448:	movzx  edx,bp
  40244b:	mov    rax,QWORD PTR [rbx+0x10]
  40244f:	mov    r9,QWORD PTR [r13+0x10]
  402453:	mov    rcx,r15
  402456:	mov    QWORD PTR [rsp+0x18],rdx
  40245b:	lea    r15,[r15+rdx*8+0x8]
  402460:	mov    r10,rdi
  402463:	mov    rdx,rdi
  402466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402470:	mov    rbp,QWORD PTR [rax]
  402473:	mov    r11,QWORD PTR [rcx]
  402476:	mov    QWORD PTR [rdx],rbp
  402479:	add    r11,r14
  40247c:	lea    r8,[r11-0x1]
  402480:	mov    rsi,QWORD PTR [rcx]
  402483:	add    rcx,0x8
  402487:	dec    rsi
  40248a:	mov    QWORD PTR [rdx+0x8],rsi
  40248e:	add    rax,0x18
  402492:	add    rdx,0x18
  402496:	mov    rsi,QWORD PTR [rcx-0x8]
  40249a:	add    r9,0x18
  40249e:	sub    rsi,rbp
  4024a1:	mov    QWORD PTR [rdx-0x8],rsi
  4024a5:	mov    QWORD PTR [r9-0x18],r11
  4024a9:	mov    rsi,QWORD PTR [rax-0x10]
  4024ad:	mov    QWORD PTR [r9-0x10],rsi
  4024b1:	mov    rsi,QWORD PTR [rax-0x10]
  4024b5:	sub    rsi,r8
  4024b8:	mov    QWORD PTR [r9-0x8],rsi
  4024bc:	mov    rsi,QWORD PTR [rcx-0x8]
  4024c0:	mov    QWORD PTR [rax-0x10],r8
  4024c4:	mov    QWORD PTR [rax-0x18],rsi
  4024c8:	mov    QWORD PTR [rax-0x8],r14
  4024cc:	cmp    rcx,r15
  4024cf:	jne    402470 <__sprintf_chk@plt+0x10d0>
  4024d1:	mov    rax,QWORD PTR [rsp+0x10]
  4024d6:	cmp    QWORD PTR [rdi+0x10],0x0
  4024db:	mov    QWORD PTR [rbx+0x18],rax
  4024df:	jg     402580 <__sprintf_chk@plt+0x11e0>
  4024e5:	mov    rax,QWORD PTR [rsp+0x18]
  4024ea:	lea    rax,[rax+rax*2]
  4024ee:	lea    rax,[rdi+rax*8]
  4024f2:	jmp    402503 <__sprintf_chk@plt+0x1163>
  4024f4:	nop    DWORD PTR [rax+0x0]
  4024f8:	add    r10,0x18
  4024fc:	cmp    QWORD PTR [r10+0x10],0x0
  402501:	jg     402580 <__sprintf_chk@plt+0x11e0>
  402503:	cmp    rax,r10
  402506:	jne    4024f8 <__sprintf_chk@plt+0x1158>
  402508:	call   4011f0 <free@plt>
  40250d:	mov    rdi,QWORD PTR [rsp]
  402511:	call   4011f0 <free@plt>
  402516:	mov    rdi,QWORD PTR [r13+0x10]
  40251a:	cmp    QWORD PTR [rdi+0x10],0x0
  40251f:	jg     402560 <__sprintf_chk@plt+0x11c0>
  402521:	lea    rdx,[rdi+0x28]
  402525:	xor    eax,eax
  402527:	jmp    40253b <__sprintf_chk@plt+0x119b>
  402529:	nop    DWORD PTR [rax+0x0]
  402530:	add    rdx,0x18
  402534:	cmp    QWORD PTR [rdx-0x18],0x0
  402539:	jg     402560 <__sprintf_chk@plt+0x11c0>
  40253b:	inc    eax
  40253d:	cmp    r12w,ax
  402541:	jg     402530 <__sprintf_chk@plt+0x1190>
  402543:	call   4011f0 <free@plt>
  402548:	add    rsp,0x28
  40254c:	pop    rbx
  40254d:	pop    rbp
  40254e:	pop    r12
  402550:	mov    rdi,r13
  402553:	pop    r13
  402555:	pop    r14
  402557:	pop    r15
  402559:	jmp    4011f0 <free@plt>
  40255e:	xchg   ax,ax
  402560:	mov    rdi,QWORD PTR [rsp+0x8]
  402565:	add    rsp,0x28
  402569:	mov    rsi,rbx
  40256c:	pop    rbx
  40256d:	pop    rbp
  40256e:	pop    r12
  402570:	mov    rdx,r13
  402573:	pop    r13
  402575:	pop    r14
  402577:	xor    eax,eax
  402579:	pop    r15
  40257b:	jmp    401f80 <__sprintf_chk@plt+0xbe0>
  402580:	mov    rsi,QWORD PTR [rsp]
  402584:	mov    rdi,QWORD PTR [rsp+0x8]
  402589:	mov    rdx,rbx
  40258c:	xor    eax,eax
  40258e:	call   401f30 <__sprintf_chk@plt+0xb90>
  402593:	jmp    402516 <__sprintf_chk@plt+0x1176>
  402598:	nop    DWORD PTR [rax+rax*1+0x0]
  4025a0:	mov    rax,QWORD PTR [rsp+0x10]
  4025a5:	mov    QWORD PTR [rbx+0x18],rax
  4025a9:	mov    rbx,QWORD PTR [rsp]
  4025ad:	mov    rdi,QWORD PTR [rbx+0x10]
  4025b1:	call   4011f0 <free@plt>
  4025b6:	mov    rdi,rbx
  4025b9:	call   4011f0 <free@plt>
  4025be:	mov    rdi,QWORD PTR [r13+0x10]
  4025c2:	jmp    402543 <__sprintf_chk@plt+0x11a3>
  4025c7:	nop    WORD PTR [rax+rax*1+0x0]
  4025d0:	push   r15
  4025d2:	mov    r15,rdx
  4025d5:	push   r14
  4025d7:	push   r13
  4025d9:	push   r12
  4025db:	push   rbp
  4025dc:	mov    rbp,rcx
  4025df:	push   rbx
  4025e0:	sub    rsp,0xc8
  4025e7:	mov    QWORD PTR [rsp+0x10],rdi
  4025ec:	mov    DWORD PTR [rsp+0xc],esi
  4025f0:	mov    rcx,QWORD PTR [rcx+0x10]
  4025f4:	mov    rax,QWORD PTR fs:0x28
  4025fd:	mov    QWORD PTR [rsp+0xb8],rax
  402605:	xor    eax,eax
  402607:	mov    r8,QWORD PTR [rcx+0x10]
  40260b:	test   si,si
  40260e:	jle    4027bd <__sprintf_chk@plt+0x141d>
  402614:	test   r8,r8
  402617:	je     402798 <__sprintf_chk@plt+0x13f8>
  40261d:	mov    ebx,esi
  40261f:	lea    edx,[rbx-0x1]
  402622:	movzx  edx,dx
  402625:	lea    rdx,[rdx+rdx*2]
  402629:	mov    rax,rcx
  40262c:	lea    rdx,[rcx+rdx*8]
  402630:	jmp    402647 <__sprintf_chk@plt+0x12a7>
  402632:	nop    WORD PTR [rax+rax*1+0x0]
  402638:	add    rax,0x18
  40263c:	cmp    QWORD PTR [rax+0x10],0x0
  402641:	je     402798 <__sprintf_chk@plt+0x13f8>
  402647:	cmp    rax,rdx
  40264a:	jne    402638 <__sprintf_chk@plt+0x1298>
  40264c:	mov    rdx,QWORD PTR [rcx]
  40264f:	lea    rax,[rsp+0x30]
  402654:	cmp    WORD PTR [rsp+0xc],0x1
  40265a:	mov    QWORD PTR [rsp+0x30],rdx
  40265f:	mov    QWORD PTR [rsp],rax
  402663:	jle    402721 <__sprintf_chk@plt+0x1381>
  402669:	movzx  eax,WORD PTR [rsp+0xc]
  40266e:	lea    r14,[rsp+0x38]
  402673:	lea    r12d,[rax-0x2]
  402677:	mov    rdi,r15
  40267a:	movzx  r12d,r12w
  40267e:	mov    r15,r14
  402681:	shl    r12,0x3
  402685:	xor    ebx,ebx
  402687:	lea    r13,[rsp+0x28]
  40268c:	mov    rax,r8
  40268f:	mov    r14,rdi
  402692:	jmp    4026ae <__sprintf_chk@plt+0x130e>
  402694:	nop    DWORD PTR [rax+0x0]
  402698:	add    r15,0x8
  40269c:	cmp    r12,rbx
  40269f:	je     40271b <__sprintf_chk@plt+0x137b>
  4026a1:	mov    rcx,QWORD PTR [rbp+0x10]
  4026a5:	mov    rdx,QWORD PTR [rsp+0x30]
  4026aa:	add    rbx,0x8
  4026ae:	mov    r8,QWORD PTR [r14+rbx*4+0x30]
  4026b3:	mov    rsi,QWORD PTR [r14+0x10]
  4026b7:	push   r15
  4026b9:	lea    rdi,[rbx+rbx*2+0x18]
  4026be:	add    rdi,rcx
  4026c1:	push   r13
  4026c3:	lea    rcx,[rax+rdx*1-0x1]
  4026c8:	xor    eax,eax
  4026ca:	push   QWORD PTR [rdi+0x8]
  4026cd:	mov    r9,QWORD PTR [rdi]
  4026d0:	xor    edi,edi
  4026d2:	call   4020e0 <__sprintf_chk@plt+0xd40>
  4026d7:	add    rsp,0x18
  4026db:	test   rax,rax
  4026de:	je     402798 <__sprintf_chk@plt+0x13f8>
  4026e4:	mov    rcx,QWORD PTR [rsp+0x30]
  4026e9:	mov    rsi,QWORD PTR [rsp+0x28]
  4026ee:	sub    rsi,rcx
  4026f1:	test   rsi,rsi
  4026f4:	jle    402698 <__sprintf_chk@plt+0x12f8>
  4026f6:	mov    rdx,QWORD PTR [rsp]
  4026fa:	jmp    402703 <__sprintf_chk@plt+0x1363>
  4026fc:	nop    DWORD PTR [rax+0x0]
  402700:	mov    rcx,QWORD PTR [rdx]
  402703:	add    rcx,rsi
  402706:	mov    QWORD PTR [rdx],rcx
  402709:	add    rdx,0x8
  40270d:	cmp    r15,rdx
  402710:	jne    402700 <__sprintf_chk@plt+0x1360>
  402712:	add    r15,0x8
  402716:	cmp    r12,rbx
  402719:	jne    4026a1 <__sprintf_chk@plt+0x1301>
  40271b:	mov    r8,rax
  40271e:	mov    r15,r14
  402721:	mov    esi,0x8
  402726:	mov    edi,0x1
  40272b:	xor    eax,eax
  40272d:	mov    QWORD PTR [rsp+0x18],r8
  402732:	call   403a70 <error@@Base+0x50>
  402737:	movsx  r14d,WORD PTR [rsp+0xc]
  40273d:	mov    rbx,QWORD PTR [rsp+0x10]
  402742:	mov    rcx,QWORD PTR [rsp]
  402746:	mov    r8,QWORD PTR [rsp+0x18]
  40274b:	mov    r9,rax
  40274e:	mov    rdx,rbp
  402751:	mov    esi,r14d
  402754:	mov    rdi,rbx
  402757:	xor    eax,eax
  402759:	call   4023f0 <__sprintf_chk@plt+0x1050>
  40275e:	mov    rcx,QWORD PTR [rbp+0x0]
  402762:	test   rcx,rcx
  402765:	je     402777 <__sprintf_chk@plt+0x13d7>
  402767:	mov    rdx,r15
  40276a:	mov    esi,r14d
  40276d:	mov    rdi,rbx
  402770:	xor    eax,eax
  402772:	call   4025d0 <__sprintf_chk@plt+0x1230>
  402777:	mov    rcx,QWORD PTR [rbp+0x8]
  40277b:	test   rcx,rcx
  40277e:	je     402798 <__sprintf_chk@plt+0x13f8>
  402780:	mov    rdi,QWORD PTR [rsp+0x10]
  402785:	mov    rdx,r15
  402788:	mov    esi,r14d
  40278b:	xor    eax,eax
  40278d:	call   4025d0 <__sprintf_chk@plt+0x1230>
  402792:	nop    WORD PTR [rax+rax*1+0x0]
  402798:	mov    rax,QWORD PTR [rsp+0xb8]
  4027a0:	xor    rax,QWORD PTR fs:0x28
  4027a9:	jne    4027d3 <__sprintf_chk@plt+0x1433>
  4027ab:	add    rsp,0xc8
  4027b2:	pop    rbx
  4027b3:	pop    rbp
  4027b4:	pop    r12
  4027b6:	pop    r13
  4027b8:	pop    r14
  4027ba:	pop    r15
  4027bc:	ret    
  4027bd:	mov    rax,QWORD PTR [rcx]
  4027c0:	mov    QWORD PTR [rsp+0x30],rax
  4027c5:	lea    rax,[rsp+0x30]
  4027ca:	mov    QWORD PTR [rsp],rax
  4027ce:	jmp    402721 <__sprintf_chk@plt+0x1381>
  4027d3:	call   401260 <__stack_chk_fail@plt>
  4027d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4027e0:	push   r12
  4027e2:	mov    r12,rsi
  4027e5:	push   rbp
  4027e6:	mov    rbp,rdi
  4027e9:	push   rbx
  4027ea:	sub    rsp,0x10
  4027ee:	mov    rax,QWORD PTR fs:0x28
  4027f7:	mov    QWORD PTR [rsp+0x8],rax
  4027fc:	xor    eax,eax
  4027fe:	mov    rsi,QWORD PTR [rsi]
  402801:	mov    rdx,rsp
  402804:	call   402240 <__sprintf_chk@plt+0xea0>
  402809:	mov    rdi,QWORD PTR [rip+0x4a10]        # 407220 <error@@Base+0x3800>
  402810:	mov    rbx,rax
  402813:	mov    rsi,QWORD PTR [rip+0x49fe]        # 407218 <error@@Base+0x37f8>
  40281a:	add    rax,rbp
  40281d:	cmp    rbx,rdi
  402820:	jge    402960 <__sprintf_chk@plt+0x15c0>
  402826:	cmp    rax,rsi
  402829:	jge    402871 <__sprintf_chk@plt+0x14d1>
  40282b:	lea    r8,[rsi+rbx*1]
  40282f:	mov    r10,QWORD PTR [rip+0x49fa]        # 407230 <error@@Base+0x3810>
  402836:	mov    r9,QWORD PTR [rip+0x49eb]        # 407228 <error@@Base+0x3808>
  40283d:	sub    r8,rax
  402840:	jmp    402861 <__sprintf_chk@plt+0x14c1>
  402842:	nop    WORD PTR [rax+rax*1+0x0]
  402848:	cmp    edx,0x7e
  40284b:	je     402871 <__sprintf_chk@plt+0x14d1>
  40284d:	inc    rbx
  402850:	inc    rax
  402853:	cmp    rbx,rdi
  402856:	je     402966 <__sprintf_chk@plt+0x15c6>
  40285c:	cmp    rbx,r8
  40285f:	je     402871 <__sprintf_chk@plt+0x14d1>
  402861:	mov    rdx,QWORD PTR [r10+rbx*8]
  402865:	mov    rcx,QWORD PTR [r9+rax*8]
  402869:	mov    edx,DWORD PTR [rdx+0x14]
  40286c:	cmp    DWORD PTR [rcx+0x14],edx
  40286f:	je     402848 <__sprintf_chk@plt+0x14a8>
  402871:	mov    r8,QWORD PTR [rip+0x4990]        # 407208 <error@@Base+0x37e8>
  402878:	cmp    rax,rsi
  40287b:	je     402950 <__sprintf_chk@plt+0x15b0>
  402881:	mov    rcx,QWORD PTR [rip+0x4978]        # 407200 <error@@Base+0x37e0>
  402888:	sub    rsi,rbp
  40288b:	cmp    rsi,rdi
  40288e:	cmovl  rsi,rdi
  402892:	mov    rax,QWORD PTR [rip+0x4977]        # 407210 <error@@Base+0x37f0>
  402899:	add    rsi,QWORD PTR [r12+0x10]
  40289e:	sub    rsi,rbx
  4028a1:	mov    rdx,rax
  4028a4:	sub    rdx,rsi
  4028a7:	inc    rdx
  4028aa:	sar    rdx,1
  4028ad:	cmp    rdx,r8
  4028b0:	jle    4028b9 <__sprintf_chk@plt+0x1519>
  4028b2:	mov    QWORD PTR [rip+0x494f],rdx        # 407208 <error@@Base+0x37e8>
  4028b9:	add    rsi,rax
  4028bc:	sar    rsi,1
  4028bf:	mov    QWORD PTR [rsp],rsi
  4028c3:	cmp    rsi,rcx
  4028c6:	jge    4028cf <__sprintf_chk@plt+0x152f>
  4028c8:	mov    QWORD PTR [rip+0x4931],rsi        # 407200 <error@@Base+0x37e0>
  4028cf:	xor    eax,eax
  4028d1:	mov    esi,0x18
  4028d6:	mov    edi,0x1
  4028db:	call   403a70 <error@@Base+0x50>
  4028e0:	cmp    QWORD PTR [rip+0x4990],0x0        # 407278 <error@@Base+0x3858>
  4028e8:	mov    WORD PTR [rax+0x10],bx
  4028ec:	je     402980 <__sprintf_chk@plt+0x15e0>
  4028f2:	cmp    QWORD PTR [r12+0x18],rbp
  4028f7:	jg     402930 <__sprintf_chk@plt+0x1590>
  4028f9:	mov    QWORD PTR [r12+0x20],rbp
  4028fe:	mov    rsi,rax
  402901:	lea    rdi,[rip+0x4958]        # 407260 <error@@Base+0x3840>
  402908:	xor    eax,eax
  40290a:	call   401ee0 <__sprintf_chk@plt+0xb40>
  40290f:	mov    rax,QWORD PTR [rsp+0x8]
  402914:	xor    rax,QWORD PTR fs:0x28
  40291d:	jne    4029a0 <__sprintf_chk@plt+0x1600>
  402923:	add    rsp,0x10
  402927:	pop    rbx
  402928:	pop    rbp
  402929:	pop    r12
  40292b:	ret    
  40292c:	nop    DWORD PTR [rax+0x0]
  402930:	mov    QWORD PTR [r12+0x18],rbp
  402935:	mov    rsi,rax
  402938:	lea    rdi,[rip+0x4921]        # 407260 <error@@Base+0x3840>
  40293f:	xor    eax,eax
  402941:	call   401e90 <__sprintf_chk@plt+0xaf0>
  402946:	jmp    40290f <__sprintf_chk@plt+0x156f>
  402948:	nop    DWORD PTR [rax+rax*1+0x0]
  402950:	lea    rcx,[rbp-0x1]
  402954:	mov    QWORD PTR [rip+0x48a5],rcx        # 407200 <error@@Base+0x37e0>
  40295b:	jmp    402888 <__sprintf_chk@plt+0x14e8>
  402960:	jne    402871 <__sprintf_chk@plt+0x14d1>
  402966:	lea    r8,[rbp+0x1]
  40296a:	mov    QWORD PTR [rip+0x4897],r8        # 407208 <error@@Base+0x37e8>
  402971:	jmp    402878 <__sprintf_chk@plt+0x14d8>
  402976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402980:	mov    QWORD PTR [r12+0x20],rbp
  402985:	mov    QWORD PTR [r12+0x18],rbp
  40298a:	mov    rsi,rax
  40298d:	lea    rdi,[rip+0x48cc]        # 407260 <error@@Base+0x3840>
  402994:	xor    eax,eax
  402996:	call   401ee0 <__sprintf_chk@plt+0xb40>
  40299b:	jmp    40290f <__sprintf_chk@plt+0x156f>
  4029a0:	call   401260 <__stack_chk_fail@plt>
  4029a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4029b0:	endbr64 
  4029b4:	push   r12
  4029b6:	lea    eax,[rsi-0x2]
  4029b9:	push   rbp
  4029ba:	push   rbx
  4029bb:	cmp    ax,0xe
  4029bf:	ja     402a1d <__sprintf_chk@plt+0x167d>
  4029c1:	movsx  ebx,si
  4029c4:	mov    rbp,rdi
  4029c7:	mov    esi,ebx
  4029c9:	xor    eax,eax
  4029cb:	mov    r12,rdx
  4029ce:	call   402310 <__sprintf_chk@plt+0xf70>
  4029d3:	mov    rcx,QWORD PTR [rbp+0x0]
  4029d7:	test   rcx,rcx
  4029da:	je     402a18 <__sprintf_chk@plt+0x1678>
  4029dc:	xor    eax,eax
  4029de:	mov    rdx,r12
  4029e1:	mov    esi,ebx
  4029e3:	mov    rdi,rbp
  4029e6:	call   4025d0 <__sprintf_chk@plt+0x1230>
  4029eb:	mov    rax,QWORD PTR [rbp+0x0]
  4029ef:	test   rax,rax
  4029f2:	je     402a18 <__sprintf_chk@plt+0x1678>
  4029f4:	xor    ecx,ecx
  4029f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a00:	mov    rdx,QWORD PTR [rax+0x18]
  402a04:	test   rdx,rdx
  402a07:	je     402a0f <__sprintf_chk@plt+0x166f>
  402a09:	inc    rcx
  402a0c:	mov    QWORD PTR [rdx],rcx
  402a0f:	mov    rax,QWORD PTR [rax+0x8]
  402a13:	test   rax,rax
  402a16:	jne    402a00 <__sprintf_chk@plt+0x1660>
  402a18:	pop    rbx
  402a19:	pop    rbp
  402a1a:	pop    r12
  402a1c:	ret    
  402a1d:	lea    rdi,[rip+0x1764]        # 404188 <error@@Base+0x768>
  402a24:	xor    eax,eax
  402a26:	call   403a20 <error@@Base>
  402a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  402a30:	endbr64 
  402a34:	push   r15
  402a36:	push   r14
  402a38:	push   r13
  402a3a:	push   r12
  402a3c:	mov    r12,rsi
  402a3f:	mov    esi,0x1
  402a44:	push   rbp
  402a45:	mov    rbp,rdi
  402a48:	push   rbx
  402a49:	mov    rbx,rcx
  402a4c:	sub    rsp,0x58
  402a50:	mov    QWORD PTR [rsp+0x20],rdx
  402a55:	mov    QWORD PTR [rsp+0x28],rcx
  402a5a:	lea    r14,[rsp+0x40]
  402a5f:	lea    r13,[rsp+0x38]
  402a64:	mov    rax,QWORD PTR fs:0x28
  402a6d:	mov    QWORD PTR [rsp+0x48],rax
  402a72:	xor    eax,eax
  402a74:	call   402310 <__sprintf_chk@plt+0xf70>
  402a79:	mov    rdx,rbx
  402a7c:	mov    esi,0x1
  402a81:	mov    rdi,r12
  402a84:	xor    eax,eax
  402a86:	call   402310 <__sprintf_chk@plt+0xf70>
  402a8b:	mov    rbx,QWORD PTR [rbp+0x0]
  402a8f:	test   rbx,rbx
  402a92:	je     402bbb <__sprintf_chk@plt+0x181b>
  402a98:	nop    DWORD PTR [rax+rax*1+0x0]
  402aa0:	xor    r15d,r15d
  402aa3:	mov    r10,rbp
  402aa6:	jmp    402abd <__sprintf_chk@plt+0x171d>
  402aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  402ab0:	mov    rbx,QWORD PTR [rbx+0x8]
  402ab4:	test   rbx,rbx
  402ab7:	je     402b58 <__sprintf_chk@plt+0x17b8>
  402abd:	cmp    QWORD PTR [rbx+0x18],0x0
  402ac2:	jne    402ab0 <__sprintf_chk@plt+0x1710>
  402ac4:	mov    rax,QWORD PTR [rbx+0x10]
  402ac8:	cmp    QWORD PTR [rax+0x10],r15
  402acc:	jle    402ab0 <__sprintf_chk@plt+0x1710>
  402ace:	mov    rbp,QWORD PTR [r12]
  402ad2:	test   rbp,rbp
  402ad5:	jne    402ae9 <__sprintf_chk@plt+0x1749>
  402ad7:	jmp    402ab0 <__sprintf_chk@plt+0x1710>
  402ad9:	nop    DWORD PTR [rax+0x0]
  402ae0:	mov    rbp,QWORD PTR [rbp+0x8]
  402ae4:	test   rbp,rbp
  402ae7:	je     402ab0 <__sprintf_chk@plt+0x1710>
  402ae9:	cmp    QWORD PTR [rbp+0x18],0x0
  402aee:	jne    402ae0 <__sprintf_chk@plt+0x1740>
  402af0:	mov    rax,QWORD PTR [rbp+0x10]
  402af4:	cmp    QWORD PTR [rax+0x10],r15
  402af8:	jle    402ae0 <__sprintf_chk@plt+0x1740>
  402afa:	mov    rdi,QWORD PTR [rsp+0x20]
  402aff:	mov    rdx,QWORD PTR [rbx+0x10]
  402b03:	mov    QWORD PTR [rsp+0x18],r10
  402b08:	sub    rsp,0x8
  402b0c:	mov    rcx,QWORD PTR [rdx+0x8]
  402b10:	mov    rsi,QWORD PTR [rdi+0x10]
  402b14:	push   r14
  402b16:	mov    rdi,r15
  402b19:	push   r13
  402b1b:	push   QWORD PTR [rax+0x8]
  402b1e:	mov    r9,QWORD PTR [rax]
  402b21:	mov    rax,QWORD PTR [rsp+0x48]
  402b26:	mov    rdx,QWORD PTR [rdx]
  402b29:	mov    r8,QWORD PTR [rax+0x10]
  402b2d:	xor    eax,eax
  402b2f:	call   4020e0 <__sprintf_chk@plt+0xd40>
  402b34:	add    rsp,0x20
  402b38:	cmp    rax,r15
  402b3b:	mov    r10,QWORD PTR [rsp+0x18]
  402b40:	jle    402ae0 <__sprintf_chk@plt+0x1740>
  402b42:	mov    QWORD PTR [rsp+0x10],rbp
  402b47:	mov    QWORD PTR [rsp+0x8],rbx
  402b4c:	mov    r15,rax
  402b4f:	jmp    402ae0 <__sprintf_chk@plt+0x1740>
  402b51:	nop    DWORD PTR [rax+0x0]
  402b58:	mov    rbp,r10
  402b5b:	test   r15,r15
  402b5e:	je     402bda <__sprintf_chk@plt+0x183a>
  402b60:	mov    esi,0x8
  402b65:	mov    edi,0x1
  402b6a:	xor    eax,eax
  402b6c:	call   403a70 <error@@Base+0x50>
  402b71:	mov    rdx,QWORD PTR [rsp+0x8]
  402b76:	mov    rbx,rax
  402b79:	mov    r9,rax
  402b7c:	mov    r8,r15
  402b7f:	mov    rcx,r13
  402b82:	mov    esi,0x1
  402b87:	mov    rdi,rbp
  402b8a:	xor    eax,eax
  402b8c:	call   4023f0 <__sprintf_chk@plt+0x1050>
  402b91:	mov    rdx,QWORD PTR [rsp+0x10]
  402b96:	mov    r9,rbx
  402b99:	mov    r8,r15
  402b9c:	mov    rcx,r14
  402b9f:	mov    esi,0x1
  402ba4:	mov    rdi,r12
  402ba7:	xor    eax,eax
  402ba9:	call   4023f0 <__sprintf_chk@plt+0x1050>
  402bae:	mov    rbx,QWORD PTR [rbp+0x0]
  402bb2:	test   rbx,rbx
  402bb5:	jne    402aa0 <__sprintf_chk@plt+0x1700>
  402bbb:	mov    rax,QWORD PTR [rsp+0x48]
  402bc0:	xor    rax,QWORD PTR fs:0x28
  402bc9:	jne    402c02 <__sprintf_chk@plt+0x1862>
  402bcb:	add    rsp,0x58
  402bcf:	pop    rbx
  402bd0:	pop    rbp
  402bd1:	pop    r12
  402bd3:	pop    r13
  402bd5:	pop    r14
  402bd7:	pop    r15
  402bd9:	ret    
  402bda:	mov    rax,QWORD PTR [r10]
  402bdd:	test   rax,rax
  402be0:	je     402bbb <__sprintf_chk@plt+0x181b>
  402be2:	nop    WORD PTR [rax+rax*1+0x0]
  402be8:	mov    rdx,QWORD PTR [rax+0x18]
  402bec:	test   rdx,rdx
  402bef:	je     402bf7 <__sprintf_chk@plt+0x1857>
  402bf1:	inc    r15
  402bf4:	mov    QWORD PTR [rdx],r15
  402bf7:	mov    rax,QWORD PTR [rax+0x8]
  402bfb:	test   rax,rax
  402bfe:	jne    402be8 <__sprintf_chk@plt+0x1848>
  402c00:	jmp    402bbb <__sprintf_chk@plt+0x181b>
  402c02:	call   401260 <__stack_chk_fail@plt>
  402c07:	nop    WORD PTR [rax+rax*1+0x0]
  402c10:	endbr64 
  402c14:	push   r15
  402c16:	push   r14
  402c18:	push   r13
  402c1a:	push   r12
  402c1c:	push   rbp
  402c1d:	push   rbx
  402c1e:	sub    rsp,0x48
  402c22:	mov    QWORD PTR [rsp+0x8],rdi
  402c27:	mov    rax,QWORD PTR fs:0x28
  402c30:	mov    QWORD PTR [rsp+0x38],rax
  402c35:	xor    eax,eax
  402c37:	cmp    QWORD PTR [rsi+0x18],0xffff
  402c3f:	jg     402fa7 <__sprintf_chk@plt+0x1c07>
  402c45:	mov    rdi,QWORD PTR [rsp+0x8]
  402c4a:	mov    rbx,rsi
  402c4d:	mov    rdx,rsi
  402c50:	xor    eax,eax
  402c52:	mov    esi,0x2
  402c57:	call   402310 <__sprintf_chk@plt+0xf70>
  402c5c:	mov    rax,QWORD PTR [rbx+0x10]
  402c60:	mov    rdx,QWORD PTR [rbx+0x38]
  402c64:	mov    QWORD PTR [rip+0x45c5],rax        # 407230 <error@@Base+0x3810>
  402c6b:	mov    rax,QWORD PTR [rbx+0x30]
  402c6f:	mov    rbp,rdx
  402c72:	mov    QWORD PTR [rip+0x45af],rax        # 407228 <error@@Base+0x3808>
  402c79:	mov    rax,QWORD PTR [rbx+0x18]
  402c7d:	mov    QWORD PTR [rip+0x4594],rdx        # 407218 <error@@Base+0x37f8>
  402c84:	sub    rbp,rax
  402c87:	mov    QWORD PTR [rip+0x4592],rax        # 407220 <error@@Base+0x3800>
  402c8e:	neg    rax
  402c91:	mov    QWORD PTR [rip+0x4578],rbp        # 407210 <error@@Base+0x37f0>
  402c98:	mov    QWORD PTR [rip+0x4569],rax        # 407208 <error@@Base+0x37e8>
  402c9f:	mov    QWORD PTR [rip+0x455a],rdx        # 407200 <error@@Base+0x37e0>
  402ca6:	mov    rbx,0xffffffffffffffff
  402cad:	cmp    rbp,rax
  402cb0:	jl     402e07 <__sprintf_chk@plt+0x1a67>
  402cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402cc0:	mov    esi,0x30
  402cc5:	mov    edi,0x1
  402cca:	xor    eax,eax
  402ccc:	call   403a70 <error@@Base+0x50>
  402cd1:	inc    rbx
  402cd4:	mov    QWORD PTR [rax+0x10],rbx
  402cd8:	mov    rsi,rax
  402cdb:	mov    rbp,rax
  402cde:	lea    rdi,[rip+0x455b]        # 407240 <error@@Base+0x3820>
  402ce5:	xor    eax,eax
  402ce7:	call   401ee0 <__sprintf_chk@plt+0xb40>
  402cec:	mov    rax,QWORD PTR [rip+0x4525]        # 407218 <error@@Base+0x37f8>
  402cf3:	mov    r12,rbx
  402cf6:	neg    r12
  402cf9:	cmp    QWORD PTR [rip+0x4520],rax        # 407220 <error@@Base+0x3800>
  402d00:	jg     402ed0 <__sprintf_chk@plt+0x1b30>
  402d06:	mov    rax,QWORD PTR [rip+0x4503]        # 407210 <error@@Base+0x37f0>
  402d0d:	mov    rdx,r12
  402d10:	cmp    rbx,rax
  402d13:	mov    r13,rax
  402d16:	cmovle r13,rbx
  402d1a:	cmp    QWORD PTR [rip+0x44e7],r12        # 407208 <error@@Base+0x37e8>
  402d21:	cmovge rdx,QWORD PTR [rip+0x44df]        # 407208 <error@@Base+0x37e8>
  402d29:	cmp    r13,rdx
  402d2c:	jl     402d5e <__sprintf_chk@plt+0x19be>
  402d2e:	xchg   ax,ax
  402d30:	xor    eax,eax
  402d32:	mov    rdi,r13
  402d35:	mov    rsi,rbp
  402d38:	call   4027e0 <__sprintf_chk@plt+0x1440>
  402d3d:	dec    r13
  402d40:	mov    rax,r12
  402d43:	cmp    QWORD PTR [rip+0x44be],r12        # 407208 <error@@Base+0x37e8>
  402d4a:	cmovge rax,QWORD PTR [rip+0x44b6]        # 407208 <error@@Base+0x37e8>
  402d52:	cmp    r13,rax
  402d55:	jge    402d30 <__sprintf_chk@plt+0x1990>
  402d57:	mov    rax,QWORD PTR [rip+0x44b2]        # 407210 <error@@Base+0x37f0>
  402d5e:	lea    r12,[rax+0x1]
  402d62:	jmp    402d78 <__sprintf_chk@plt+0x19d8>
  402d64:	nop    DWORD PTR [rax+0x0]
  402d68:	mov    rdi,r12
  402d6b:	mov    rsi,rbp
  402d6e:	xor    eax,eax
  402d70:	call   4027e0 <__sprintf_chk@plt+0x1440>
  402d75:	inc    r12
  402d78:	cmp    QWORD PTR [rip+0x4481],rbx        # 407200 <error@@Base+0x37e0>
  402d7f:	mov    rax,rbx
  402d82:	cmovle rax,QWORD PTR [rip+0x4476]        # 407200 <error@@Base+0x37e0>
  402d8a:	cmp    r12,rax
  402d8d:	jle    402d68 <__sprintf_chk@plt+0x19c8>
  402d8f:	mov    rdi,QWORD PTR [rip+0x44e2]        # 407278 <error@@Base+0x3858>
  402d96:	mov    esi,0x2
  402d9b:	xor    eax,eax
  402d9d:	call   403a70 <error@@Base+0x50>
  402da2:	mov    r15,QWORD PTR [rip+0x44b7]        # 407260 <error@@Base+0x3840>
  402da9:	lea    r13,[rip+0x44b0]        # 407260 <error@@Base+0x3840>
  402db0:	mov    QWORD PTR [rbp+0x28],rax
  402db4:	xor    r12d,r12d
  402db7:	mov    r14,r13
  402dba:	test   r15,r15
  402dbd:	je     402df0 <__sprintf_chk@plt+0x1a50>
  402dbf:	nop
  402dc0:	mov    rsi,r15
  402dc3:	mov    rdi,r14
  402dc6:	xor    eax,eax
  402dc8:	call   401fd0 <__sprintf_chk@plt+0xc30>
  402dcd:	movzx  ecx,WORD PTR [r15+0x10]
  402dd2:	mov    rax,QWORD PTR [rbp+0x28]
  402dd6:	mov    rdi,r15
  402dd9:	mov    WORD PTR [rax+r12*1],cx
  402dde:	add    r12,0x2
  402de2:	call   4011f0 <free@plt>
  402de7:	mov    r15,QWORD PTR [r13+0x0]
  402deb:	test   r15,r15
  402dee:	jne    402dc0 <__sprintf_chk@plt+0x1a20>
  402df0:	mov    rax,QWORD PTR [rip+0x4411]        # 407208 <error@@Base+0x37e8>
  402df7:	mov    rbp,QWORD PTR [rip+0x4412]        # 407210 <error@@Base+0x37f0>
  402dfe:	cmp    rbp,rax
  402e01:	jge    402cc0 <__sprintf_chk@plt+0x1920>
  402e07:	mov    rbx,QWORD PTR [rip+0x443a]        # 407248 <error@@Base+0x3828>
  402e0e:	lea    r13,[rsp+0x18]
  402e13:	lea    r14,[rsp+0x20]
  402e18:	test   rbx,rbx
  402e1b:	jne    402e5f <__sprintf_chk@plt+0x1abf>
  402e1d:	jmp    402f60 <__sprintf_chk@plt+0x1bc0>
  402e22:	nop    WORD PTR [rax+rax*1+0x0]
  402e28:	mov    rsi,rbx
  402e2b:	xor    eax,eax
  402e2d:	lea    rdi,[rip+0x440c]        # 407240 <error@@Base+0x3820>
  402e34:	call   401fd0 <__sprintf_chk@plt+0xc30>
  402e39:	mov    rdi,QWORD PTR [rbx+0x28]
  402e3d:	call   4011f0 <free@plt>
  402e42:	mov    rdi,rbx
  402e45:	call   4011f0 <free@plt>
  402e4a:	mov    rbx,QWORD PTR [rip+0x43f7]        # 407248 <error@@Base+0x3828>
  402e51:	mov    rbp,QWORD PTR [rsp+0x18]
  402e56:	test   rbx,rbx
  402e59:	je     402f60 <__sprintf_chk@plt+0x1bc0>
  402e5f:	mov    rax,QWORD PTR [rbx+0x28]
  402e63:	mov    rdx,rbp
  402e66:	sub    rdx,QWORD PTR [rbx+0x18]
  402e6a:	mov    rsi,QWORD PTR [rbx]
  402e6d:	movzx  r12d,WORD PTR [rax+rdx*2]
  402e72:	mov    rdi,rbp
  402e75:	mov    rdx,r13
  402e78:	xor    eax,eax
  402e7a:	call   402240 <__sprintf_chk@plt+0xea0>
  402e7f:	mov    QWORD PTR [rsp+0x20],rax
  402e84:	cmp    r12,rax
  402e87:	jle    402e28 <__sprintf_chk@plt+0x1a88>
  402e89:	add    rax,rbp
  402e8c:	mov    QWORD PTR [rsp+0x28],rax
  402e91:	mov    esi,0x8
  402e96:	mov    edi,0x1
  402e9b:	xor    eax,eax
  402e9d:	call   403a70 <error@@Base+0x50>
  402ea2:	mov    r9,rax
  402ea5:	mov    rax,QWORD PTR [rsp+0x8]
  402eaa:	mov    r8,r12
  402ead:	mov    rdx,QWORD PTR [rax]
  402eb0:	mov    rdi,rax
  402eb3:	sub    r8,QWORD PTR [rsp+0x20]
  402eb8:	mov    rcx,r14
  402ebb:	mov    esi,0x2
  402ec0:	xor    eax,eax
  402ec2:	call   4023f0 <__sprintf_chk@plt+0x1050>
  402ec7:	jmp    402e28 <__sprintf_chk@plt+0x1a88>
  402ecc:	nop    DWORD PTR [rax+0x0]
  402ed0:	mov    r13,QWORD PTR [rip+0x4339]        # 407210 <error@@Base+0x37f0>
  402ed7:	mov    rax,rbx
  402eda:	cmp    r12,r13
  402edd:	mov    r14,r13
  402ee0:	cmovge r14,r12
  402ee4:	cmp    QWORD PTR [rip+0x4315],rbx        # 407200 <error@@Base+0x37e0>
  402eeb:	cmovle rax,QWORD PTR [rip+0x430d]        # 407200 <error@@Base+0x37e0>
  402ef3:	cmp    r14,rax
  402ef6:	jg     402f3d <__sprintf_chk@plt+0x1b9d>
  402ef8:	nop    DWORD PTR [rax+rax*1+0x0]
  402f00:	xor    eax,eax
  402f02:	mov    rdi,r14
  402f05:	mov    rsi,rbp
  402f08:	call   4027e0 <__sprintf_chk@plt+0x1440>
  402f0d:	inc    r14
  402f10:	mov    rax,rbx
  402f13:	cmp    QWORD PTR [rip+0x42e6],rbx        # 407200 <error@@Base+0x37e0>
  402f1a:	cmovle rax,QWORD PTR [rip+0x42de]        # 407200 <error@@Base+0x37e0>
  402f22:	cmp    r14,rax
  402f25:	jle    402f00 <__sprintf_chk@plt+0x1b60>
  402f27:	mov    r13,QWORD PTR [rip+0x42e2]        # 407210 <error@@Base+0x37f0>
  402f2e:	jmp    402f3d <__sprintf_chk@plt+0x1b9d>
  402f30:	mov    rsi,rbp
  402f33:	mov    rdi,r13
  402f36:	xor    eax,eax
  402f38:	call   4027e0 <__sprintf_chk@plt+0x1440>
  402f3d:	dec    r13
  402f40:	mov    rax,r12
  402f43:	cmp    QWORD PTR [rip+0x42be],r12        # 407208 <error@@Base+0x37e8>
  402f4a:	cmovge rax,QWORD PTR [rip+0x42b6]        # 407208 <error@@Base+0x37e8>
  402f52:	cmp    r13,rax
  402f55:	jge    402f30 <__sprintf_chk@plt+0x1b90>
  402f57:	jmp    402d8f <__sprintf_chk@plt+0x19ef>
  402f5c:	nop    DWORD PTR [rax+0x0]
  402f60:	mov    rax,QWORD PTR [rsp+0x8]
  402f65:	xor    ecx,ecx
  402f67:	mov    rax,QWORD PTR [rax]
  402f6a:	test   rax,rax
  402f6d:	je     402f88 <__sprintf_chk@plt+0x1be8>
  402f6f:	nop
  402f70:	mov    rdx,QWORD PTR [rax+0x18]
  402f74:	test   rdx,rdx
  402f77:	je     402f7f <__sprintf_chk@plt+0x1bdf>
  402f79:	inc    rcx
  402f7c:	mov    QWORD PTR [rdx],rcx
  402f7f:	mov    rax,QWORD PTR [rax+0x8]
  402f83:	test   rax,rax
  402f86:	jne    402f70 <__sprintf_chk@plt+0x1bd0>
  402f88:	mov    rax,QWORD PTR [rsp+0x38]
  402f8d:	xor    rax,QWORD PTR fs:0x28
  402f96:	jne    402fb3 <__sprintf_chk@plt+0x1c13>
  402f98:	add    rsp,0x48
  402f9c:	pop    rbx
  402f9d:	pop    rbp
  402f9e:	pop    r12
  402fa0:	pop    r13
  402fa2:	pop    r14
  402fa4:	pop    r15
  402fa6:	ret    
  402fa7:	lea    rdi,[rip+0x11f9]        # 4041a7 <error@@Base+0x787>
  402fae:	call   403a20 <error@@Base>
  402fb3:	call   401260 <__stack_chk_fail@plt>
  402fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  402fc0:	endbr64 
  402fc4:	push   r12
  402fc6:	xor    eax,eax
  402fc8:	mov    r12d,esi
  402fcb:	push   rbp
  402fcc:	mov    esi,0x18
  402fd1:	mov    ebp,edx
  402fd3:	push   rbx
  402fd4:	mov    rbx,rdi
  402fd7:	mov    edi,0x1
  402fdc:	call   403a70 <error@@Base+0x50>
  402fe1:	mov    BYTE PTR [rax+0x10],r12b
  402fe5:	mov    DWORD PTR [rax+0x14],ebp
  402fe8:	mov    rdi,rbx
  402feb:	mov    rsi,rax
  402fee:	pop    rbx
  402fef:	pop    rbp
  402ff0:	xor    eax,eax
  402ff2:	pop    r12
  402ff4:	jmp    401ee0 <__sprintf_chk@plt+0xb40>
  402ff9:	nop    DWORD PTR [rax+0x0]
  403000:	endbr64 
  403004:	push   r15
  403006:	push   r14
  403008:	push   r13
  40300a:	push   r12
  40300c:	push   rbp
  40300d:	push   rbx
  40300e:	sub    rsp,0xb8
  403015:	mov    QWORD PTR [rsp+0x8],rdi
  40301a:	mov    QWORD PTR [rsp+0x20],rdx
  40301f:	mov    rdi,rsi
  403022:	mov    rsi,QWORD PTR fs:0x28
  40302b:	mov    QWORD PTR [rsp+0xa8],rsi
  403033:	xor    esi,esi
  403035:	cmp    BYTE PTR [rdx],0x0
  403038:	je     403043 <__sprintf_chk@plt+0x1ca3>
  40303a:	test   rdi,rdi
  40303d:	je     4033d5 <__sprintf_chk@plt+0x2035>
  403043:	mov    rax,QWORD PTR [rsp+0x8]
  403048:	lea    rsi,[rip+0x11a0]        # 4041ef <error@@Base+0x7cf>
  40304f:	mov    rax,QWORD PTR [rax+0x8]
  403053:	mov    QWORD PTR [rsp+0x28],rax
  403058:	xor    eax,eax
  40305a:	call   403b20 <error@@Base+0x100>
  40305f:	mov    r12,rax
  403062:	mov    rax,QWORD PTR [rsp+0x20]
  403067:	cmp    BYTE PTR [rax],0x0
  40306a:	jne    403318 <__sprintf_chk@plt+0x1f78>
  403070:	mov    rsi,QWORD PTR [rsp+0x20]
  403075:	mov    eax,0x5e
  40307a:	mov    ecx,DWORD PTR [rsi+0x4]
  40307d:	mov    rdi,r12
  403080:	test   ecx,ecx
  403082:	cmovne eax,ecx
  403085:	movzx  r15d,BYTE PTR [rsi+0x1]
  40308a:	mov    DWORD PTR [rsp+0x14],eax
  40308e:	call   401390 <getc@plt>
  403093:	cmp    eax,0xffffffff
  403096:	je     403187 <__sprintf_chk@plt+0x1de7>
  40309c:	mov    rsi,QWORD PTR [rip+0x3f4d]        # 406ff0 <error@@Base+0x35d0>
  4030a3:	movsxd rdx,eax
  4030a6:	movsx  rcx,BYTE PTR [rsi+rdx*1]
  4030ab:	mov    rbx,rcx
  4030ae:	test   rcx,rcx
  4030b1:	jle    403402 <__sprintf_chk@plt+0x2062>
  4030b7:	lea    rsi,[rsp+0x3c]
  4030bc:	xor    ebp,ebp
  4030be:	lea    r13,[rsp+0x40]
  4030c3:	mov    QWORD PTR [rsp+0x18],rsi
  4030c8:	jmp    40310e <__sprintf_chk@plt+0x1d6e>
  4030ca:	nop    WORD PTR [rax+rax*1+0x0]
  4030d0:	mov    rdi,QWORD PTR [rsp+0x8]
  4030d5:	movsx  esi,bpl
  4030d9:	xor    eax,eax
  4030db:	call   402fc0 <__sprintf_chk@plt+0x1c20>
  4030e0:	mov    rdi,r12
  4030e3:	xor    ebp,ebp
  4030e5:	call   401390 <getc@plt>
  4030ea:	cmp    eax,0xffffffff
  4030ed:	je     403187 <__sprintf_chk@plt+0x1de7>
  4030f3:	mov    rcx,QWORD PTR [rip+0x3ef6]        # 406ff0 <error@@Base+0x35d0>
  4030fa:	movsxd rdx,eax
  4030fd:	movsx  rcx,BYTE PTR [rcx+rdx*1]
  403102:	mov    rbx,rcx
  403105:	test   rcx,rcx
  403108:	jle    403402 <__sprintf_chk@plt+0x2062>
  40310e:	mov    BYTE PTR [rsp+0x40],al
  403112:	cmp    rcx,0x1
  403116:	je     403140 <__sprintf_chk@plt+0x1da0>
  403118:	lea    r14,[rcx-0x1]
  40311c:	lea    rdi,[r13+0x1]
  403120:	mov    r8,r12
  403123:	mov    rcx,r14
  403126:	mov    edx,0x1
  40312b:	mov    esi,0x3
  403130:	call   401320 <__fread_chk@plt>
  403135:	cdqe   
  403137:	cmp    r14,rax
  40313a:	jne    403410 <__sprintf_chk@plt+0x2070>
  403140:	mov    rdx,QWORD PTR [rsp+0x18]
  403145:	mov    esi,0x4
  40314a:	mov    rdi,r13
  40314d:	call   4012b0 <utf8proc_iterate@plt>
  403152:	cmp    eax,ebx
  403154:	jne    4033f0 <__sprintf_chk@plt+0x2050>
  40315a:	mov    edx,DWORD PTR [rsp+0x3c]
  40315e:	test   r15b,r15b
  403161:	je     4030d0 <__sprintf_chk@plt+0x1d30>
  403167:	cmp    DWORD PTR [rsp+0x14],edx
  40316b:	jne    4030d0 <__sprintf_chk@plt+0x1d30>
  403171:	mov    rdi,r12
  403174:	mov    ebp,0x1
  403179:	call   401390 <getc@plt>
  40317e:	cmp    eax,0xffffffff
  403181:	jne    4030f3 <__sprintf_chk@plt+0x1d53>
  403187:	xor    eax,eax
  403189:	mov    rdi,r12
  40318c:	call   403890 <__sprintf_chk@plt+0x24f0>
  403191:	mov    rax,QWORD PTR [rsp+0x20]
  403196:	cmp    BYTE PTR [rax+0x9],0x0
  40319a:	je     4032a0 <__sprintf_chk@plt+0x1f00>
  4031a0:	mov    rax,QWORD PTR [rsp+0x28]
  4031a5:	test   rax,rax
  4031a8:	je     4033c8 <__sprintf_chk@plt+0x2028>
  4031ae:	mov    rbp,QWORD PTR [rax+0x8]
  4031b2:	test   rbp,rbp
  4031b5:	je     4032a0 <__sprintf_chk@plt+0x1f00>
  4031bb:	mov    r12,rbp
  4031be:	jmp    4031ca <__sprintf_chk@plt+0x1e2a>
  4031c0:	mov    r12,QWORD PTR [r12+0x8]
  4031c5:	test   r12,r12
  4031c8:	je     403213 <__sprintf_chk@plt+0x1e73>
  4031ca:	mov    ebx,DWORD PTR [r12+0x14]
  4031cf:	mov    edi,ebx
  4031d1:	call   401210 <utf8proc_get_property@plt>
  4031d6:	cmp    ebx,0xd
  4031d9:	ja     403300 <__sprintf_chk@plt+0x1f60>
  4031df:	cmp    ebx,0xb
  4031e2:	jae    403200 <__sprintf_chk@plt+0x1e60>
  4031e4:	cmp    ebx,0x9
  4031e7:	je     403200 <__sprintf_chk@plt+0x1e60>
  4031e9:	cmp    ebx,0xa
  4031ec:	je     4031c0 <__sprintf_chk@plt+0x1e20>
  4031ee:	movsx  eax,WORD PTR [rax]
  4031f1:	sub    eax,0x17
  4031f4:	cmp    eax,0x2
  4031f7:	ja     4031c0 <__sprintf_chk@plt+0x1e20>
  4031f9:	nop    DWORD PTR [rax+0x0]
  403200:	mov    DWORD PTR [r12+0x14],0x20
  403209:	mov    r12,QWORD PTR [r12+0x8]
  40320e:	test   r12,r12
  403211:	jne    4031ca <__sprintf_chk@plt+0x1e2a>
  403213:	mov    r13,QWORD PTR [rsp+0x8]
  403218:	jmp    403239 <__sprintf_chk@plt+0x1e99>
  40321a:	nop    WORD PTR [rax+rax*1+0x0]
  403220:	test   r12b,r12b
  403223:	jne    40322a <__sprintf_chk@plt+0x1e8a>
  403225:	cmp    eax,0xa
  403228:	je     403280 <__sprintf_chk@plt+0x1ee0>
  40322a:	cmp    eax,0xa
  40322d:	setne  r12b
  403231:	mov    rbp,rbx
  403234:	test   rbx,rbx
  403237:	je     4032a0 <__sprintf_chk@plt+0x1f00>
  403239:	mov    eax,DWORD PTR [rbp+0x14]
  40323c:	mov    rbx,QWORD PTR [rbp+0x8]
  403240:	cmp    eax,0x20
  403243:	jne    403220 <__sprintf_chk@plt+0x1e80>
  403245:	test   r12b,r12b
  403248:	je     403260 <__sprintf_chk@plt+0x1ec0>
  40324a:	test   rbx,rbx
  40324d:	je     403260 <__sprintf_chk@plt+0x1ec0>
  40324f:	mov    edx,DWORD PTR [rbx+0x14]
  403252:	cmp    edx,0x20
  403255:	je     403260 <__sprintf_chk@plt+0x1ec0>
  403257:	cmp    edx,0xa
  40325a:	jne    40322a <__sprintf_chk@plt+0x1e8a>
  40325c:	nop    DWORD PTR [rax+0x0]
  403260:	test   rbx,rbx
  403263:	je     403280 <__sprintf_chk@plt+0x1ee0>
  403265:	test   r12b,r12b
  403268:	je     403280 <__sprintf_chk@plt+0x1ee0>
  40326a:	cmp    DWORD PTR [rbx+0x14],0x20
  40326e:	jne    403280 <__sprintf_chk@plt+0x1ee0>
  403270:	movzx  eax,BYTE PTR [rbp+0x10]
  403274:	or     BYTE PTR [rbx+0x10],al
  403277:	nop    WORD PTR [rax+rax*1+0x0]
  403280:	mov    rsi,rbp
  403283:	mov    rdi,r13
  403286:	xor    eax,eax
  403288:	call   401fd0 <__sprintf_chk@plt+0xc30>
  40328d:	mov    rdi,rbp
  403290:	call   4011f0 <free@plt>
  403295:	mov    rbp,rbx
  403298:	test   rbx,rbx
  40329b:	jne    403239 <__sprintf_chk@plt+0x1e99>
  40329d:	nop    DWORD PTR [rax]
  4032a0:	mov    rax,QWORD PTR [rsp+0x20]
  4032a5:	cmp    BYTE PTR [rax+0xa],0x0
  4032a9:	je     4032d4 <__sprintf_chk@plt+0x1f34>
  4032ab:	mov    rax,QWORD PTR [rsp+0x28]
  4032b0:	test   rax,rax
  4032b3:	je     4033b8 <__sprintf_chk@plt+0x2018>
  4032b9:	mov    rbx,QWORD PTR [rax+0x8]
  4032bd:	jmp    4032cf <__sprintf_chk@plt+0x1f2f>
  4032bf:	nop
  4032c0:	mov    edi,DWORD PTR [rbx+0x14]
  4032c3:	call   401280 <utf8proc_tolower@plt>
  4032c8:	mov    DWORD PTR [rbx+0x14],eax
  4032cb:	mov    rbx,QWORD PTR [rbx+0x8]
  4032cf:	test   rbx,rbx
  4032d2:	jne    4032c0 <__sprintf_chk@plt+0x1f20>
  4032d4:	mov    rax,QWORD PTR [rsp+0xa8]
  4032dc:	xor    rax,QWORD PTR fs:0x28
  4032e5:	jne    40341e <__sprintf_chk@plt+0x207e>
  4032eb:	add    rsp,0xb8
  4032f2:	pop    rbx
  4032f3:	pop    rbp
  4032f4:	pop    r12
  4032f6:	pop    r13
  4032f8:	pop    r14
  4032fa:	pop    r15
  4032fc:	ret    
  4032fd:	nop    DWORD PTR [rax]
  403300:	cmp    ebx,0xa0
  403306:	jne    4031ee <__sprintf_chk@plt+0x1e4e>
  40330c:	jmp    403200 <__sprintf_chk@plt+0x1e60>
  403311:	nop    DWORD PTR [rax+0x0]
  403318:	lea    r13,[rsp+0x40]
  40331d:	mov    rdx,r12
  403320:	mov    esi,0x63
  403325:	mov    rdi,r13
  403328:	call   4012a0 <fgets@plt>
  40332d:	test   rax,rax
  403330:	je     40334c <__sprintf_chk@plt+0x1fac>
  403332:	mov    ecx,0x33
  403337:	lea    rdi,[rip+0xefa]        # 404238 <error@@Base+0x818>
  40333e:	mov    rsi,r13
  403341:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403343:	seta   al
  403346:	sbb    al,0x0
  403348:	test   al,al
  40334a:	je     403368 <__sprintf_chk@plt+0x1fc8>
  40334c:	mov    rdi,r12
  40334f:	call   401270 <rewind@plt>
  403354:	xor    eax,eax
  403356:	mov    rsi,QWORD PTR [rsp+0x20]
  40335b:	mov    BYTE PTR [rsi+0xb],al
  40335e:	jmp    403070 <__sprintf_chk@plt+0x1cd0>
  403363:	nop    DWORD PTR [rax+rax*1+0x0]
  403368:	xor    ebx,ebx
  40336a:	lea    rbp,[rip+0xeff]        # 404270 <error@@Base+0x850>
  403371:	nop    DWORD PTR [rax+0x0]
  403378:	mov    rdx,r12
  40337b:	mov    esi,0x63
  403380:	mov    rdi,r13
  403383:	call   4012a0 <fgets@plt>
  403388:	test   rax,rax
  40338b:	je     4033ab <__sprintf_chk@plt+0x200b>
  40338d:	mov    ecx,0x38
  403392:	mov    rsi,r13
  403395:	mov    rdi,rbp
  403398:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40339a:	seta   al
  40339d:	sbb    al,0x0
  40339f:	test   al,al
  4033a1:	jne    403378 <__sprintf_chk@plt+0x1fd8>
  4033a3:	inc    ebx
  4033a5:	cmp    bx,0x2
  4033a9:	jne    403378 <__sprintf_chk@plt+0x1fd8>
  4033ab:	mov    eax,0x1
  4033b0:	jmp    403356 <__sprintf_chk@plt+0x1fb6>
  4033b2:	nop    WORD PTR [rax+rax*1+0x0]
  4033b8:	mov    rax,QWORD PTR [rsp+0x8]
  4033bd:	mov    rbx,QWORD PTR [rax]
  4033c0:	jmp    4032cf <__sprintf_chk@plt+0x1f2f>
  4033c5:	nop    DWORD PTR [rax]
  4033c8:	mov    rax,QWORD PTR [rsp+0x8]
  4033cd:	mov    rbp,QWORD PTR [rax]
  4033d0:	jmp    4031b2 <__sprintf_chk@plt+0x1e12>
  4033d5:	lea    rsi,[rip+0xde3]        # 4041bf <error@@Base+0x79f>
  4033dc:	lea    rdi,[rip+0xde6]        # 4041c9 <error@@Base+0x7a9>
  4033e3:	xor    eax,eax
  4033e5:	call   403ad0 <error@@Base+0xb0>
  4033ea:	nop    WORD PTR [rax+rax*1+0x0]
  4033f0:	movsxd rdi,eax
  4033f3:	call   401370 <utf8proc_errmsg@plt>
  4033f8:	mov    rdi,rax
  4033fb:	xor    eax,eax
  4033fd:	call   403a20 <error@@Base>
  403402:	lea    rdi,[rip+0xdd0]        # 4041d9 <error@@Base+0x7b9>
  403409:	xor    eax,eax
  40340b:	call   403a20 <error@@Base>
  403410:	lea    rdi,[rip+0xdda]        # 4041f1 <error@@Base+0x7d1>
  403417:	xor    eax,eax
  403419:	call   403a20 <error@@Base>
  40341e:	call   401260 <__stack_chk_fail@plt>
  403423:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40342e:	xchg   ax,ax
  403430:	endbr64 
  403434:	sub    rsp,0x8
  403438:	call   401220 <utf8proc_encode_char@plt>
  40343d:	test   rax,rax
  403440:	jle    403447 <__sprintf_chk@plt+0x20a7>
  403442:	add    rsp,0x8
  403446:	ret    
  403447:	lea    rdi,[rip+0xdbb]        # 404209 <error@@Base+0x7e9>
  40344e:	xor    eax,eax
  403450:	call   403a20 <error@@Base>
  403455:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403460:	endbr64 
  403464:	push   r13
  403466:	xor    r13d,r13d
  403469:	push   r12
  40346b:	mov    r12,rdx
  40346e:	push   rbp
  40346f:	mov    ebp,esi
  403471:	push   rbx
  403472:	mov    rbx,rdx
  403475:	sub    rsp,0x18
  403479:	test   dil,dil
  40347c:	jne    403578 <__sprintf_chk@plt+0x21d8>
  403482:	cmp    ebp,0xa
  403485:	jne    4034c0 <__sprintf_chk@plt+0x2120>
  403487:	test   cl,cl
  403489:	lea    rax,[rip+0xb86]        # 404016 <error@@Base+0x5f6>
  403490:	lea    rcx,[rip+0xd89]        # 404220 <error@@Base+0x800>
  403497:	cmove  rcx,rax
  40349b:	add    rsp,0x18
  40349f:	mov    rdi,rbx
  4034a2:	pop    rbx
  4034a3:	pop    rbp
  4034a4:	pop    r12
  4034a6:	mov    rdx,0xffffffffffffffff
  4034ad:	mov    esi,0x1
  4034b2:	xor    eax,eax
  4034b4:	pop    r13
  4034b6:	jmp    4013a0 <__sprintf_chk@plt>
  4034bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4034c0:	mov    edi,ebp
  4034c2:	call   401210 <utf8proc_get_property@plt>
  4034c7:	cmp    ebp,0x20
  4034ca:	je     4034e6 <__sprintf_chk@plt+0x2146>
  4034cc:	movzx  eax,WORD PTR [rax]
  4034cf:	cmp    ax,0x1d
  4034d3:	ja     403538 <__sprintf_chk@plt+0x2198>
  4034d5:	mov    edx,0x1
  4034da:	shlx   rax,rdx,rax
  4034df:	test   eax,0x207ffffe
  4034e4:	je     403538 <__sprintf_chk@plt+0x2198>
  4034e6:	mov    edi,ebp
  4034e8:	call   4012e0 <utf8proc_category@plt>
  4034ed:	sub    eax,0x6
  4034f0:	cmp    eax,0x2
  4034f3:	ja     403510 <__sprintf_chk@plt+0x2170>
  4034f5:	mov    rsi,rbx
  4034f8:	mov    edi,0x25cc
  4034fd:	xor    eax,eax
  4034ff:	call   403430 <__sprintf_chk@plt+0x2090>
  403504:	cbw    
  403506:	add    r13d,eax
  403509:	movsx  rbx,r13w
  40350d:	add    rbx,r12
  403510:	mov    rsi,rbx
  403513:	mov    edi,ebp
  403515:	xor    eax,eax
  403517:	call   403430 <__sprintf_chk@plt+0x2090>
  40351c:	cbw    
  40351e:	add    r13d,eax
  403521:	movsx  r13,r13w
  403525:	mov    BYTE PTR [r12+r13*1],0x0
  40352a:	add    rsp,0x18
  40352e:	pop    rbx
  40352f:	pop    rbp
  403530:	pop    r12
  403532:	pop    r13
  403534:	ret    
  403535:	nop    DWORD PTR [rax]
  403538:	mov    r8d,ebp
  40353b:	lea    rcx,[rip+0xce3]        # 404225 <error@@Base+0x805>
  403542:	cmp    ebp,0xff
  403548:	jbe    403551 <__sprintf_chk@plt+0x21b1>
  40354a:	lea    rcx,[rip+0xcdb]        # 40422c <error@@Base+0x80c>
  403551:	add    rsp,0x18
  403555:	mov    rdi,rbx
  403558:	pop    rbx
  403559:	pop    rbp
  40355a:	pop    r12
  40355c:	mov    rdx,0xffffffffffffffff
  403563:	mov    esi,0x1
  403568:	xor    eax,eax
  40356a:	pop    r13
  40356c:	jmp    4013a0 <__sprintf_chk@plt>
  403571:	nop    DWORD PTR [rax+0x0]
  403578:	mov    rsi,rdx
  40357b:	mov    edi,0x5e
  403580:	xor    eax,eax
  403582:	mov    DWORD PTR [rsp+0xc],ecx
  403586:	call   403430 <__sprintf_chk@plt+0x2090>
  40358b:	movsx  r13w,al
  403590:	movsx  rax,al
  403594:	lea    rbx,[r12+rax*1]
  403598:	mov    ecx,DWORD PTR [rsp+0xc]
  40359c:	jmp    403482 <__sprintf_chk@plt+0x20e2>
  4035a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4035ac:	nop    DWORD PTR [rax+0x0]
  4035b0:	endbr64 
  4035b4:	push   r12
  4035b6:	push   rbp
  4035b7:	mov    rbp,rdi
  4035ba:	mov    rdi,rsi
  4035bd:	push   rbx
  4035be:	lea    rsi,[rip+0xaed]        # 4040b2 <error@@Base+0x692>
  4035c5:	mov    rbx,rdx
  4035c8:	sub    rsp,0x20
  4035cc:	mov    rax,QWORD PTR fs:0x28
  4035d5:	mov    QWORD PTR [rsp+0x18],rax
  4035da:	xor    eax,eax
  4035dc:	call   403b20 <error@@Base+0x100>
  4035e1:	mov    r12,rax
  4035e4:	test   rbx,rbx
  4035e7:	je     40363b <__sprintf_chk@plt+0x229b>
  4035e9:	mov    rcx,rax
  4035ec:	mov    edx,0x37
  4035f1:	mov    esi,0x1
  4035f6:	lea    rdi,[rip+0xc3b]        # 404238 <error@@Base+0x818>
  4035fd:	call   401350 <fwrite@plt>
  403602:	mov    rcx,r12
  403605:	mov    edx,0x37
  40360a:	mov    esi,0x1
  40360f:	lea    rdi,[rip+0xc5a]        # 404270 <error@@Base+0x850>
  403616:	call   401350 <fwrite@plt>
  40361b:	mov    rdi,r12
  40361e:	xor    eax,eax
  403620:	call   rbx
  403622:	mov    rcx,r12
  403625:	mov    edx,0x37
  40362a:	mov    esi,0x1
  40362f:	lea    rdi,[rip+0xc3a]        # 404270 <error@@Base+0x850>
  403636:	call   401350 <fwrite@plt>
  40363b:	mov    rbx,QWORD PTR [rbp+0x0]
  40363f:	test   rbx,rbx
  403642:	je     403677 <__sprintf_chk@plt+0x22d7>
  403644:	lea    rbp,[rsp+0xf]
  403649:	nop    DWORD PTR [rax+0x0]
  403650:	mov    esi,DWORD PTR [rbx+0x14]
  403653:	movsx  edi,BYTE PTR [rbx+0x10]
  403657:	xor    ecx,ecx
  403659:	mov    rdx,rbp
  40365c:	xor    eax,eax
  40365e:	call   403460 <__sprintf_chk@plt+0x20c0>
  403663:	mov    rsi,r12
  403666:	mov    rdi,rbp
  403669:	call   401290 <fputs@plt>
  40366e:	mov    rbx,QWORD PTR [rbx+0x8]
  403672:	test   rbx,rbx
  403675:	jne    403650 <__sprintf_chk@plt+0x22b0>
  403677:	xor    eax,eax
  403679:	mov    rdi,r12
  40367c:	call   403890 <__sprintf_chk@plt+0x24f0>
  403681:	mov    rax,QWORD PTR [rsp+0x18]
  403686:	xor    rax,QWORD PTR fs:0x28
  40368f:	jne    40369a <__sprintf_chk@plt+0x22fa>
  403691:	add    rsp,0x20
  403695:	pop    rbx
  403696:	pop    rbp
  403697:	pop    r12
  403699:	ret    
  40369a:	call   401260 <__stack_chk_fail@plt>
  40369f:	nop
  4036a0:	endbr64 
  4036a4:	push   r14
  4036a6:	push   r13
  4036a8:	push   r12
  4036aa:	push   rbp
  4036ab:	push   rbx
  4036ac:	sub    rsp,0x10
  4036b0:	mov    rax,QWORD PTR fs:0x28
  4036b9:	mov    QWORD PTR [rsp+0x8],rax
  4036be:	xor    eax,eax
  4036c0:	cmp    BYTE PTR [rsi],0x0
  4036c3:	mov    DWORD PTR [rsp+0x4],0x0
  4036cb:	je     403720 <__sprintf_chk@plt+0x2380>
  4036cd:	mov    r14,rdi
  4036d0:	mov    rbp,rsi
  4036d3:	lea    r13,[rsp+0x4]
  4036d8:	mov    r12,0xffffffffffffffff
  4036df:	jmp    403704 <__sprintf_chk@plt+0x2364>
  4036e1:	nop    DWORD PTR [rax+0x0]
  4036e8:	mov    edx,DWORD PTR [rsp+0x4]
  4036ec:	movsxd rbx,ebx
  4036ef:	xor    esi,esi
  4036f1:	xor    eax,eax
  4036f3:	mov    rdi,r14
  4036f6:	add    rbp,rbx
  4036f9:	call   402fc0 <__sprintf_chk@plt+0x1c20>
  4036fe:	cmp    BYTE PTR [rbp+0x0],0x0
  403702:	je     403720 <__sprintf_chk@plt+0x2380>
  403704:	mov    rdx,r13
  403707:	mov    rsi,r12
  40370a:	mov    rdi,rbp
  40370d:	call   4012b0 <utf8proc_iterate@plt>
  403712:	mov    rbx,rax
  403715:	test   eax,eax
  403717:	jg     4036e8 <__sprintf_chk@plt+0x2348>
  403719:	xor    eax,eax
  40371b:	jmp    403725 <__sprintf_chk@plt+0x2385>
  40371d:	nop    DWORD PTR [rax]
  403720:	mov    eax,0x1
  403725:	mov    rcx,QWORD PTR [rsp+0x8]
  40372a:	xor    rcx,QWORD PTR fs:0x28
  403733:	jne    403742 <__sprintf_chk@plt+0x23a2>
  403735:	add    rsp,0x10
  403739:	pop    rbx
  40373a:	pop    rbp
  40373b:	pop    r12
  40373d:	pop    r13
  40373f:	pop    r14
  403741:	ret    
  403742:	call   401260 <__stack_chk_fail@plt>
  403747:	nop    WORD PTR [rax+rax*1+0x0]
  403750:	push   rbp
  403751:	push   rbx
  403752:	mov    ebx,edi
  403754:	movsx  ebx,bx
  403757:	sub    rsp,0x78
  40375b:	mov    rax,QWORD PTR fs:0x28
  403764:	mov    QWORD PTR [rsp+0x68],rax
  403769:	xor    eax,eax
  40376b:	mov    rbp,rsp
  40376e:	call   401230 <getpid@plt>
  403773:	mov    r9d,eax
  403776:	sub    rsp,0x8
  40377a:	mov    rax,0x407648
  403781:	push   rbx
  403782:	mov    r8,QWORD PTR [rax]
  403785:	lea    rcx,[rip+0xb1c]        # 4042a8 <error@@Base+0x888>
  40378c:	mov    edx,0x64
  403791:	mov    esi,0x1
  403796:	mov    rdi,rbp
  403799:	xor    eax,eax
  40379b:	call   4013a0 <__sprintf_chk@plt>
  4037a0:	mov    rdi,rbp
  4037a3:	call   401380 <strdup@plt>
  4037a8:	pop    rdx
  4037a9:	pop    rcx
  4037aa:	mov    rdx,QWORD PTR [rsp+0x68]
  4037af:	xor    rdx,QWORD PTR fs:0x28
  4037b8:	jne    4037c1 <__sprintf_chk@plt+0x2421>
  4037ba:	add    rsp,0x78
  4037be:	pop    rbx
  4037bf:	pop    rbp
  4037c0:	ret    
  4037c1:	call   401260 <__stack_chk_fail@plt>
  4037c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037d0:	push   r12
  4037d2:	mov    rax,0x407650
  4037d9:	mov    r12d,edi
  4037dc:	push   rbp
  4037dd:	push   rbx
  4037de:	mov    rdx,QWORD PTR [rax]
  4037e1:	test   rdx,rdx
  4037e4:	je     4037ea <__sprintf_chk@plt+0x244a>
  4037e6:	xor    eax,eax
  4037e8:	call   rdx
  4037ea:	cmp    WORD PTR [rip+0x3a90],0x0        # 407282 <error@@Base+0x3862>
  4037f2:	jle    40382a <__sprintf_chk@plt+0x248a>
  4037f4:	mov    ebx,0x1
  4037f9:	nop    DWORD PTR [rax+0x0]
  403800:	movsx  edi,bx
  403803:	xor    eax,eax
  403805:	call   403750 <__sprintf_chk@plt+0x23b0>
  40380a:	mov    rdi,rax
  40380d:	mov    rbp,rax
  403810:	xor    eax,eax
  403812:	call   401200 <unlink@plt>
  403817:	inc    ebx
  403819:	mov    rdi,rbp
  40381c:	call   4011f0 <free@plt>
  403821:	cmp    bx,WORD PTR [rip+0x3a5a]        # 407282 <error@@Base+0x3862>
  403828:	jle    403800 <__sprintf_chk@plt+0x2460>
  40382a:	mov    edi,r12d
  40382d:	call   401340 <exit@plt>
  403832:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40383d:	nop    DWORD PTR [rax]
  403840:	endbr64 
  403844:	movzx  edx,BYTE PTR [rdi]
  403847:	movzx  ecx,BYTE PTR [rsi]
  40384a:	test   dl,dl
  40384c:	je     403873 <__sprintf_chk@plt+0x24d3>
  40384e:	cmp    cl,dl
  403850:	jne    403879 <__sprintf_chk@plt+0x24d9>
  403852:	xor    eax,eax
  403854:	jmp    403864 <__sprintf_chk@plt+0x24c4>
  403856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403860:	cmp    dl,cl
  403862:	jne    403879 <__sprintf_chk@plt+0x24d9>
  403864:	inc    rax
  403867:	movzx  edx,BYTE PTR [rdi+rax*1]
  40386b:	movzx  ecx,BYTE PTR [rsi+rax*1]
  40386f:	test   dl,dl
  403871:	jne    403860 <__sprintf_chk@plt+0x24c0>
  403873:	test   cl,cl
  403875:	je     403888 <__sprintf_chk@plt+0x24e8>
  403877:	xor    edx,edx
  403879:	cmp    dl,cl
  40387b:	sbb    eax,eax
  40387d:	or     eax,0x1
  403880:	ret    
  403881:	nop    DWORD PTR [rax+0x0]
  403888:	xor    eax,eax
  40388a:	ret    
  40388b:	nop    DWORD PTR [rax+rax*1+0x0]
  403890:	endbr64 
  403894:	mov    rax,QWORD PTR [rip+0x373d]        # 406fd8 <error@@Base+0x35b8>
  40389b:	cmp    QWORD PTR [rax],rdi
  40389e:	je     4038b8 <__sprintf_chk@plt+0x2518>
  4038a0:	mov    rax,QWORD PTR [rip+0x3729]        # 406fd0 <error@@Base+0x35b0>
  4038a7:	cmp    QWORD PTR [rax],rdi
  4038aa:	je     4038b8 <__sprintf_chk@plt+0x2518>
  4038ac:	jmp    401240 <fclose@plt>
  4038b1:	nop    DWORD PTR [rax+0x0]
  4038b8:	ret    
  4038b9:	nop    DWORD PTR [rax+0x0]
  4038c0:	endbr64 
  4038c4:	sub    rsp,0xa8
  4038cb:	mov    rsi,rdi
  4038ce:	mov    rdx,rsp
  4038d1:	mov    edi,0x1
  4038d6:	mov    rax,QWORD PTR fs:0x28
  4038df:	mov    QWORD PTR [rsp+0x98],rax
  4038e7:	xor    eax,eax
  4038e9:	call   4012f0 <__xstat@plt>
  4038ee:	test   eax,eax
  4038f0:	sete   al
  4038f3:	mov    rcx,QWORD PTR [rsp+0x98]
  4038fb:	xor    rcx,QWORD PTR fs:0x28
  403904:	jne    40390e <__sprintf_chk@plt+0x256e>
  403906:	add    rsp,0xa8
  40390d:	ret    
  40390e:	call   401260 <__stack_chk_fail@plt>
  403913:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40391e:	xchg   ax,ax
  403920:	endbr64 
  403924:	movzx  eax,WORD PTR [rip+0x3957]        # 407282 <error@@Base+0x3862>
  40392b:	push   rbx
  40392c:	lea    edi,[rax+0x1]
  40392f:	mov    WORD PTR [rip+0x394c],di        # 407282 <error@@Base+0x3862>
  403936:	xor    eax,eax
  403938:	movsx  edi,di
  40393b:	call   403750 <__sprintf_chk@plt+0x23b0>
  403940:	mov    rbx,rax
  403943:	mov    rdi,rax
  403946:	xor    eax,eax
  403948:	call   401200 <unlink@plt>
  40394d:	mov    rax,rbx
  403950:	pop    rbx
  403951:	ret    
  403952:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40395d:	nop    DWORD PTR [rax]
  403960:	endbr64 
  403964:	push   rbx
  403965:	mov    rbx,rdi
  403968:	call   401250 <strlen@plt>
  40396d:	lea    ecx,[rax-0x1]
  403970:	movsx  rdx,cx
  403974:	test   cx,cx
  403977:	js     4039a3 <__sprintf_chk@plt+0x2603>
  403979:	cmp    BYTE PTR [rbx+rdx*1],0x2f
  40397d:	je     4039a3 <__sprintf_chk@plt+0x2603>
  40397f:	sub    eax,0x2
  403982:	movsx  rdx,ax
  403986:	jmp    40399e <__sprintf_chk@plt+0x25fe>
  403988:	nop    DWORD PTR [rax+rax*1+0x0]
  403990:	lea    rax,[rdx-0x1]
  403994:	cmp    BYTE PTR [rbx+rax*1+0x1],0x2f
  403999:	je     4039a3 <__sprintf_chk@plt+0x2603>
  40399b:	mov    rdx,rax
  40399e:	test   dx,dx
  4039a1:	jns    403990 <__sprintf_chk@plt+0x25f0>
  4039a3:	lea    rax,[rbx+rdx*1+0x1]
  4039a8:	pop    rbx
  4039a9:	ret    
  4039aa:	nop    WORD PTR [rax+rax*1+0x0]
  4039b0:	endbr64 
  4039b4:	push   rax
  4039b5:	pop    rax
  4039b6:	xor    edi,edi
  4039b8:	xor    eax,eax
  4039ba:	sub    rsp,0x8
  4039be:	call   4037d0 <__sprintf_chk@plt+0x2430>
  4039c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4039ce:	xchg   ax,ax
  4039d0:	push   rax
  4039d1:	pop    rax
  4039d2:	sub    rsp,0x8
  4039d6:	mov    rax,0x407640
  4039dd:	mov    rdx,QWORD PTR [rax]
  4039e0:	test   rdx,rdx
  4039e3:	je     4039f0 <__sprintf_chk@plt+0x2650>
  4039e5:	xor    eax,eax
  4039e7:	call   rdx
  4039e9:	xor    eax,eax
  4039eb:	call   4039b0 <__sprintf_chk@plt+0x2610>
  4039f0:	mov    rax,0x407648
  4039f7:	mov    r8,rdi
  4039fa:	mov    rcx,QWORD PTR [rax]
  4039fd:	mov    rax,QWORD PTR [rip+0x35f4]        # 406ff8 <error@@Base+0x35d8>
  403a04:	lea    rdx,[rip+0x8ab]        # 4042b6 <error@@Base+0x896>
  403a0b:	mov    rdi,QWORD PTR [rax]
  403a0e:	mov    esi,0x1
  403a13:	xor    eax,eax
  403a15:	call   401360 <__fprintf_chk@plt>
  403a1a:	jmp    4039e9 <__sprintf_chk@plt+0x2649>
  403a1c:	nop    DWORD PTR [rax+0x0]

0000000000403a20 <error@@Base>:
  403a20:	endbr64 
  403a24:	push   rax
  403a25:	pop    rax
  403a26:	lea    rdx,[rip+0x898]        # 4042c5 <error@@Base+0x8a5>
  403a2d:	mov    esi,0x1
  403a32:	sub    rsp,0x8
  403a36:	mov    rax,0x407648
  403a3d:	mov    r8,rdi
  403a40:	mov    rcx,QWORD PTR [rax]
  403a43:	mov    rax,QWORD PTR [rip+0x35ae]        # 406ff8 <error@@Base+0x35d8>
  403a4a:	mov    rdi,QWORD PTR [rax]
  403a4d:	xor    eax,eax
  403a4f:	call   401360 <__fprintf_chk@plt>
  403a54:	mov    rax,0x407150
  403a5b:	mov    edi,DWORD PTR [rax]
  403a5d:	xor    eax,eax
  403a5f:	call   4037d0 <__sprintf_chk@plt+0x2430>
  403a64:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403a6f:	nop
  403a70:	endbr64 
  403a74:	sub    rsp,0x8
  403a78:	call   4012c0 <calloc@plt>
  403a7d:	test   rax,rax
  403a80:	je     403a87 <error@@Base+0x67>
  403a82:	add    rsp,0x8
  403a86:	ret    
  403a87:	lea    rdi,[rip+0x83f]        # 4042cd <error@@Base+0x8ad>
  403a8e:	call   403a20 <error@@Base>
  403a93:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403a9e:	xchg   ax,ax
  403aa0:	endbr64 
  403aa4:	cmp    BYTE PTR [rip+0x37d5],0x0        # 407280 <error@@Base+0x3860>
  403aab:	je     403aae <error@@Base+0x8e>
  403aad:	ret    
  403aae:	push   rax
  403aaf:	lea    rdi,[rip+0x831]        # 4042e7 <error@@Base+0x8c7>
  403ab6:	xor    eax,eax
  403ab8:	mov    BYTE PTR [rip+0x37c1],0x1        # 407280 <error@@Base+0x3860>
  403abf:	call   403a20 <error@@Base>
  403ac4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403acf:	nop
  403ad0:	endbr64 
  403ad4:	push   rax
  403ad5:	pop    rax
  403ad6:	lea    rdx,[rip+0x819]        # 4042f6 <error@@Base+0x8d6>
  403add:	sub    rsp,0x8
  403ae1:	mov    rax,0x407648
  403ae8:	mov    r8,rdi
  403aeb:	mov    rcx,QWORD PTR [rax]
  403aee:	mov    rax,QWORD PTR [rip+0x3503]        # 406ff8 <error@@Base+0x35d8>
  403af5:	mov    r9,rsi
  403af8:	mov    rdi,QWORD PTR [rax]
  403afb:	mov    esi,0x1
  403b00:	xor    eax,eax
  403b02:	call   401360 <__fprintf_chk@plt>
  403b07:	mov    rax,0x407150
  403b0e:	mov    edi,DWORD PTR [rax]
  403b10:	xor    eax,eax
  403b12:	call   4037d0 <__sprintf_chk@plt+0x2430>
  403b17:	nop    WORD PTR [rax+rax*1+0x0]
  403b20:	endbr64 
  403b24:	test   rdi,rdi
  403b27:	je     403b70 <error@@Base+0x150>
  403b29:	push   rbp
  403b2a:	mov    rbp,rsi
  403b2d:	push   rbx
  403b2e:	mov    rbx,rdi
  403b31:	sub    rsp,0x8
  403b35:	call   401330 <fopen@plt>
  403b3a:	test   rax,rax
  403b3d:	je     403b50 <error@@Base+0x130>
  403b3f:	add    rsp,0x8
  403b43:	pop    rbx
  403b44:	pop    rbp
  403b45:	ret    
  403b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b50:	cmp    BYTE PTR [rbp+0x0],0x77
  403b54:	mov    rsi,rbx
  403b57:	je     403b80 <error@@Base+0x160>
  403b59:	lea    rdi,[rip+0x7b9]        # 404319 <error@@Base+0x8f9>
  403b60:	xor    eax,eax
  403b62:	call   403ad0 <error@@Base+0xb0>
  403b67:	nop    WORD PTR [rax+rax*1+0x0]
  403b70:	cmp    BYTE PTR [rsi],0x72
  403b73:	je     403b90 <error@@Base+0x170>
  403b75:	mov    rax,QWORD PTR [rip+0x3454]        # 406fd0 <error@@Base+0x35b0>
  403b7c:	mov    rax,QWORD PTR [rax]
  403b7f:	ret    
  403b80:	lea    rdi,[rip+0x77c]        # 404303 <error@@Base+0x8e3>
  403b87:	call   403ad0 <error@@Base+0xb0>
  403b8c:	nop    DWORD PTR [rax+0x0]
  403b90:	mov    rax,QWORD PTR [rip+0x3441]        # 406fd8 <error@@Base+0x35b8>
  403b97:	mov    rax,QWORD PTR [rax]
  403b9a:	ret    
  403b9b:	nop    DWORD PTR [rax+rax*1+0x0]
  403ba0:	endbr64 
  403ba4:	push   r15
  403ba6:	xor    eax,eax
  403ba8:	push   r14
  403baa:	mov    r14,rsi
  403bad:	push   r13
  403baf:	push   r12
  403bb1:	push   rbp
  403bb2:	push   rbx
  403bb3:	sub    rsp,0x38
  403bb7:	mov    QWORD PTR [rsp+0x8],rdi
  403bbc:	mov    rdi,QWORD PTR [rsi]
  403bbf:	mov    QWORD PTR [rsp+0x28],rdx
  403bc4:	mov    QWORD PTR [rsp+0x10],rcx
  403bc9:	call   403960 <__sprintf_chk@plt+0x25c0>
  403bce:	mov    rcx,0x407648
  403bd5:	lea    rsi,[rip+0xfffffffffffffec4]        # 403aa0 <error@@Base+0x80>
  403bdc:	mov    edi,0x2
  403be1:	mov    QWORD PTR [rcx],rax
  403be4:	call   4012d0 <__sysv_signal@plt>
  403be9:	lea    rsi,[rip+0xfffffffffffffeb0]        # 403aa0 <error@@Base+0x80>
  403bf0:	mov    edi,0xf
  403bf5:	call   4012d0 <__sysv_signal@plt>
  403bfa:	mov    r9,QWORD PTR [rsp+0x8]
  403bff:	mov    r15d,DWORD PTR [r9]
  403c02:	cmp    r15d,0x1
  403c06:	je     403dd0 <error@@Base+0x3b0>
  403c0c:	mov    rdx,QWORD PTR [rsp+0x10]
  403c11:	jle    403ddc <error@@Base+0x3bc>
  403c17:	mov    r8d,r15d
  403c1a:	xor    r12d,r12d
  403c1d:	mov    r15,rdx
  403c20:	mov    r13d,0x1
  403c26:	mov    ebx,0x1
  403c2b:	mov    rdx,r14
  403c2e:	jmp    403c4a <error@@Base+0x22a>
  403c30:	movsx  rax,r12w
  403c34:	mov    QWORD PTR [rdx+rax*8],rbp
  403c38:	inc    ebx
  403c3a:	inc    r12d
  403c3d:	movsx  r13d,bx
  403c41:	cmp    r13d,r8d
  403c44:	jge    403d70 <error@@Base+0x350>
  403c4a:	movsx  rax,bx
  403c4e:	mov    rbp,QWORD PTR [rdx+rax*8]
  403c52:	lea    r10,[rax*8+0x0]
  403c5a:	cmp    BYTE PTR [rbp+0x0],0x2d
  403c5e:	jne    403c30 <error@@Base+0x210>
  403c60:	movzx  r14d,BYTE PTR [rbp+0x1]
  403c65:	mov    QWORD PTR [rsp+0x20],r10
  403c6a:	test   r14b,r14b
  403c6d:	je     403c30 <error@@Base+0x210>
  403c6f:	mov    rdi,rbp
  403c72:	mov    DWORD PTR [rsp+0x1c],r8d
  403c77:	mov    QWORD PTR [rsp+0x10],rdx
  403c7c:	mov    QWORD PTR [rsp+0x8],r9
  403c81:	call   401250 <strlen@plt>
  403c86:	cmp    rax,0x6
  403c8a:	mov    ecx,0x6
  403c8f:	cmovle rcx,rax
  403c93:	lea    rsi,[rip+0x693]        # 40432d <error@@Base+0x90d>
  403c9a:	cmp    rcx,rcx
  403c9d:	mov    rdi,rbp
  403ca0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403ca2:	seta   al
  403ca5:	sbb    al,0x0
  403ca7:	test   al,al
  403ca9:	je     403e00 <error@@Base+0x3e0>
  403caf:	mov    r8d,DWORD PTR [rsp+0x1c]
  403cb4:	inc    r13d
  403cb7:	xor    eax,eax
  403cb9:	cmp    r13d,r8d
  403cbc:	mov    r9,QWORD PTR [rsp+0x8]
  403cc1:	mov    rdx,QWORD PTR [rsp+0x10]
  403cc6:	jge    403cd2 <error@@Base+0x2b2>
  403cc8:	mov    r10,QWORD PTR [rsp+0x20]
  403ccd:	mov    rax,QWORD PTR [rdx+r10*1+0x8]
  403cd2:	test   r15,r15
  403cd5:	je     403d0b <error@@Base+0x2eb>
  403cd7:	movzx  ecx,BYTE PTR [r15]
  403cdb:	test   cl,cl
  403cdd:	je     403d0b <error@@Base+0x2eb>
  403cdf:	cmp    r14b,cl
  403ce2:	je     403d20 <error@@Base+0x300>
  403ce4:	xor    ecx,ecx
  403ce6:	jmp    403cf5 <error@@Base+0x2d5>
  403ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  403cf0:	cmp    r14b,dil
  403cf3:	je     403d28 <error@@Base+0x308>
  403cf5:	inc    ecx
  403cf7:	movsx  rsi,cx
  403cfb:	lea    rsi,[rsi+rsi*2]
  403cff:	lea    rsi,[r15+rsi*8]
  403d03:	movzx  edi,BYTE PTR [rsi]
  403d06:	test   dil,dil
  403d09:	jne    403cf0 <error@@Base+0x2d0>
  403d0b:	mov    rsi,rbp
  403d0e:	lea    rdi,[rip+0x61e]        # 404333 <error@@Base+0x913>
  403d15:	xor    eax,eax
  403d17:	call   403ad0 <error@@Base+0xb0>
  403d1c:	nop    DWORD PTR [rax+0x0]
  403d20:	mov    rsi,r15
  403d23:	nop    DWORD PTR [rax+rax*1+0x0]
  403d28:	mov    rcx,QWORD PTR [rsi+0x8]
  403d2c:	test   rcx,rcx
  403d2f:	je     403da0 <error@@Base+0x380>
  403d31:	cmp    BYTE PTR [rbp+0x2],0x0
  403d35:	jne    403d90 <error@@Base+0x370>
  403d37:	test   rax,rax
  403d3a:	je     403de8 <error@@Base+0x3c8>
  403d40:	cmp    QWORD PTR [rcx],0x0
  403d44:	jne    403e10 <error@@Base+0x3f0>
  403d4a:	mov    QWORD PTR [rcx],rax
  403d4d:	mov    eax,ebx
  403d4f:	inc    ebx
  403d51:	cmp    BYTE PTR [rbp+0x2],0x0
  403d55:	jne    403c3d <error@@Base+0x21d>
  403d5b:	lea    ebx,[rax+0x2]
  403d5e:	movsx  r13d,bx
  403d62:	cmp    r13d,r8d
  403d65:	jl     403c4a <error@@Base+0x22a>
  403d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  403d70:	movsx  r12d,r12w
  403d74:	mov    DWORD PTR [r9],r12d
  403d77:	add    rsp,0x38
  403d7b:	pop    rbx
  403d7c:	pop    rbp
  403d7d:	pop    r12
  403d7f:	pop    r13
  403d81:	pop    r14
  403d83:	pop    r15
  403d85:	ret    
  403d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d90:	cmp    QWORD PTR [rcx],0x0
  403d94:	jne    403e10 <error@@Base+0x3f0>
  403d96:	lea    rax,[rbp+0x2]
  403d9a:	jmp    403d4a <error@@Base+0x32a>
  403d9c:	nop    DWORD PTR [rax+0x0]
  403da0:	mov    rax,QWORD PTR [rsi+0x10]
  403da4:	test   rax,rax
  403da7:	je     403d0b <error@@Base+0x2eb>
  403dad:	cmp    BYTE PTR [rbp+0x2],0x0
  403db1:	jne    403d0b <error@@Base+0x2eb>
  403db7:	cmp    BYTE PTR [rax],0x0
  403dba:	jne    403e10 <error@@Base+0x3f0>
  403dbc:	mov    BYTE PTR [rax],0x1
  403dbf:	inc    ebx
  403dc1:	mov    r8d,DWORD PTR [r9]
  403dc4:	jmp    403c3d <error@@Base+0x21d>
  403dc9:	nop    DWORD PTR [rax+0x0]
  403dd0:	mov    rax,0x407154
  403dd7:	cmp    BYTE PTR [rax],0x0
  403dda:	jne    403e00 <error@@Base+0x3e0>
  403ddc:	xor    r12d,r12d
  403ddf:	jmp    403d74 <error@@Base+0x354>
  403de1:	nop    DWORD PTR [rax+0x0]
  403de8:	mov    rax,QWORD PTR [rsi+0x10]
  403dec:	test   rax,rax
  403def:	jne    403db7 <error@@Base+0x397>
  403df1:	jmp    403d0b <error@@Base+0x2eb>
  403df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e00:	mov    rdi,QWORD PTR [rsp+0x28]
  403e05:	xor    eax,eax
  403e07:	call   4039d0 <__sprintf_chk@plt+0x2630>
  403e0c:	nop    DWORD PTR [rax+0x0]
  403e10:	mov    rsi,rbp
  403e13:	lea    rdi,[rip+0x528]        # 404342 <error@@Base+0x922>
  403e1a:	xor    eax,eax
  403e1c:	call   403ad0 <error@@Base+0xb0>
  403e21:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403e2c:	nop    DWORD PTR [rax+0x0]
  403e30:	endbr64 
  403e34:	mov    rax,0x407648
  403e3b:	mov    r8,rdi
  403e3e:	mov    rcx,QWORD PTR [rax]
  403e41:	mov    rax,QWORD PTR [rip+0x31b0]        # 406ff8 <error@@Base+0x35d8>
  403e48:	mov    r9,rsi
  403e4b:	mov    rdi,QWORD PTR [rax]
  403e4e:	lea    rdx,[rip+0x4a1]        # 4042f6 <error@@Base+0x8d6>
  403e55:	mov    esi,0x1
  403e5a:	xor    eax,eax
  403e5c:	jmp    401360 <__fprintf_chk@plt>
  403e61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e6b:	nop    DWORD PTR [rax+rax*1+0x0]
  403e70:	endbr64 
  403e74:	push   r15
  403e76:	lea    r15,[rip+0x2f63]        # 406de0 <error@@Base+0x33c0>
  403e7d:	push   r14
  403e7f:	mov    r14,rdx
  403e82:	push   r13
  403e84:	mov    r13,rsi
  403e87:	push   r12
  403e89:	mov    r12d,edi
  403e8c:	push   rbp
  403e8d:	lea    rbp,[rip+0x2f54]        # 406de8 <error@@Base+0x33c8>
  403e94:	push   rbx
  403e95:	sub    rbp,r15
  403e98:	sub    rsp,0x8
  403e9c:	call   401000 <free@plt-0x1f0>
  403ea1:	sar    rbp,0x3
  403ea5:	je     403ec6 <error@@Base+0x4a6>
  403ea7:	xor    ebx,ebx
  403ea9:	nop    DWORD PTR [rax+0x0]
  403eb0:	mov    rdx,r14
  403eb3:	mov    rsi,r13
  403eb6:	mov    edi,r12d
  403eb9:	call   QWORD PTR [r15+rbx*8]
  403ebd:	add    rbx,0x1
  403ec1:	cmp    rbp,rbx
  403ec4:	jne    403eb0 <error@@Base+0x490>
  403ec6:	add    rsp,0x8
  403eca:	pop    rbx
  403ecb:	pop    rbp
  403ecc:	pop    r12
  403ece:	pop    r13
  403ed0:	pop    r14
  403ed2:	pop    r15
  403ed4:	ret    
  403ed5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403ee0:	endbr64 
  403ee4:	ret    

Disassembly of section .fini:

0000000000403ee8 <.fini>:
  403ee8:	endbr64 
  403eec:	sub    rsp,0x8
  403ef0:	add    rsp,0x8
  403ef4:	ret    
