
../repos/dvidelabs-flatcc-3b39ef7/samples/monster/monster:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xdfe9]        # 410ff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xdfe2]        # 411008 <flatcc_builder_padding_base@@Base+0x4948>
  403026:	jmp    QWORD PTR [rip+0xdfe4]        # 411010 <flatcc_builder_padding_base@@Base+0x4950>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0xdfe2]        # 411018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strncpy@plt>:
  403040:	jmp    QWORD PTR [rip+0xdfda]        # 411020 <strncpy@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <puts@plt>:
  403050:	jmp    QWORD PTR [rip+0xdfd2]        # 411028 <puts@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <strlen@plt>:
  403060:	jmp    QWORD PTR [rip+0xdfca]        # 411030 <strlen@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <__stack_chk_fail@plt>:
  403070:	jmp    QWORD PTR [rip+0xdfc2]        # 411038 <__stack_chk_fail@GLIBC_2.4>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <__assert_fail@plt>:
  403080:	jmp    QWORD PTR [rip+0xdfba]        # 411040 <__assert_fail@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <memset@plt>:
  403090:	jmp    QWORD PTR [rip+0xdfb2]        # 411048 <memset@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <memchr@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xdfaa]        # 411050 <memchr@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <memcmp@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xdfa2]        # 411058 <memcmp@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

00000000004030c0 <strcmp@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xdf9a]        # 411060 <strcmp@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <free@plt-0x10>

00000000004030d0 <memcpy@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xdf92]        # 411068 <memcpy@GLIBC_2.14>
  4030d6:	push   0xa
  4030db:	jmp    403020 <free@plt-0x10>

00000000004030e0 <malloc@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xdf8a]        # 411070 <malloc@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <free@plt-0x10>

00000000004030f0 <realloc@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xdf82]        # 411078 <realloc@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <free@plt-0x10>

0000000000403100 <posix_memalign@plt>:
  403100:	jmp    QWORD PTR [rip+0xdf7a]        # 411080 <posix_memalign@GLIBC_2.2.5>
  403106:	push   0xd
  40310b:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

0000000000403110 <_start@@Base>:
  403110:	endbr64 
  403114:	xor    ebp,ebp
  403116:	mov    r9,rdx
  403119:	pop    rsi
  40311a:	mov    rdx,rsp
  40311d:	and    rsp,0xfffffffffffffff0
  403121:	push   rax
  403122:	push   rsp
  403123:	mov    r8,0x40b9f0
  40312a:	mov    rcx,0x40b980
  403131:	mov    rdi,0x405690
  403138:	call   QWORD PTR [rip+0xdeb2]        # 410ff0 <__libc_start_main@GLIBC_2.2.5>
  40313e:	hlt    
  40313f:	nop
  403140:	endbr64 
  403144:	ret    
  403145:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40314f:	nop
  403150:	mov    eax,0x4110af
  403155:	push   rbp
  403156:	sub    rax,0x4110a8
  40315c:	cmp    rax,0xe
  403160:	mov    rbp,rsp
  403163:	jbe    403180 <_start@@Base+0x70>
  403165:	mov    eax,0x0
  40316a:	test   rax,rax
  40316d:	je     403180 <_start@@Base+0x70>
  40316f:	pop    rbp
  403170:	mov    edi,0x4110a8
  403175:	jmp    rax
  403177:	nop    WORD PTR [rax+rax*1+0x0]
  403180:	pop    rbp
  403181:	ret    
  403182:	nop    DWORD PTR [rax+0x0]
  403186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403190:	mov    esi,0x4110a8
  403195:	push   rbp
  403196:	sub    rsi,0x4110a8
  40319d:	sar    rsi,0x3
  4031a1:	mov    rbp,rsp
  4031a4:	mov    rax,rsi
  4031a7:	shr    rax,0x3f
  4031ab:	add    rsi,rax
  4031ae:	sar    rsi,1
  4031b1:	je     4031c8 <_start@@Base+0xb8>
  4031b3:	mov    eax,0x0
  4031b8:	test   rax,rax
  4031bb:	je     4031c8 <_start@@Base+0xb8>
  4031bd:	pop    rbp
  4031be:	mov    edi,0x4110a8
  4031c3:	jmp    rax
  4031c5:	nop    DWORD PTR [rax]
  4031c8:	pop    rbp
  4031c9:	ret    
  4031ca:	nop    WORD PTR [rax+rax*1+0x0]
  4031d0:	cmp    BYTE PTR [rip+0xded1],0x0        # 4110a8 <__bss_start@@Base>
  4031d7:	jne    4031ea <_start@@Base+0xda>
  4031d9:	push   rbp
  4031da:	mov    rbp,rsp
  4031dd:	call   403150 <_start@@Base+0x40>
  4031e2:	pop    rbp
  4031e3:	mov    BYTE PTR [rip+0xdebe],0x1        # 4110a8 <__bss_start@@Base>
  4031ea:	repz ret 
  4031ec:	nop    DWORD PTR [rax+0x0]
  4031f0:	mov    edi,0x410e18
  4031f5:	cmp    QWORD PTR [rdi],0x0
  4031f9:	jne    403200 <_start@@Base+0xf0>
  4031fb:	jmp    403190 <_start@@Base+0x80>
  4031fd:	nop    DWORD PTR [rax]
  403200:	mov    eax,0x0
  403205:	test   rax,rax
  403208:	je     4031fb <_start@@Base+0xeb>
  40320a:	push   rbp
  40320b:	mov    rbp,rsp
  40320e:	call   rax
  403210:	pop    rbp
  403211:	jmp    403190 <_start@@Base+0x80>
  403216:	push   rbp
  403217:	mov    rbp,rsp
  40321a:	mov    eax,edi
  40321c:	mov    BYTE PTR [rbp-0x4],al
  40321f:	movzx  eax,BYTE PTR [rbp-0x4]
  403223:	pop    rbp
  403224:	ret    
  403225:	push   rbp
  403226:	mov    rbp,rsp
  403229:	sub    rsp,0x8
  40322d:	mov    QWORD PTR [rbp-0x8],rdi
  403231:	mov    rax,QWORD PTR [rbp-0x8]
  403235:	movzx  eax,BYTE PTR [rax]
  403238:	movzx  eax,al
  40323b:	mov    edi,eax
  40323d:	call   403216 <_start@@Base+0x106>
  403242:	leave  
  403243:	ret    
  403244:	push   rbp
  403245:	mov    rbp,rsp
  403248:	mov    eax,edi
  40324a:	mov    WORD PTR [rbp-0x4],ax
  40324e:	movzx  eax,WORD PTR [rbp-0x4]
  403252:	pop    rbp
  403253:	ret    
  403254:	push   rbp
  403255:	mov    rbp,rsp
  403258:	mov    eax,edi
  40325a:	mov    WORD PTR [rbp-0x4],ax
  40325e:	movzx  eax,WORD PTR [rbp-0x4]
  403262:	pop    rbp
  403263:	ret    
  403264:	push   rbp
  403265:	mov    rbp,rsp
  403268:	sub    rsp,0x8
  40326c:	mov    QWORD PTR [rbp-0x8],rdi
  403270:	mov    rax,QWORD PTR [rbp-0x8]
  403274:	movzx  eax,WORD PTR [rax]
  403277:	cwde   
  403278:	mov    edi,eax
  40327a:	call   403244 <_start@@Base+0x134>
  40327f:	leave  
  403280:	ret    
  403281:	push   rbp
  403282:	mov    rbp,rsp
  403285:	vmovss DWORD PTR [rbp-0x14],xmm0
  40328a:	vmovss xmm0,DWORD PTR [rbp-0x14]
  40328f:	vmovss DWORD PTR [rbp-0x4],xmm0
  403294:	mov    eax,DWORD PTR [rbp-0x4]
  403297:	mov    DWORD PTR [rbp-0x4],eax
  40329a:	vmovss xmm0,DWORD PTR [rbp-0x4]
  40329f:	pop    rbp
  4032a0:	ret    
  4032a1:	push   rbp
  4032a2:	mov    rbp,rsp
  4032a5:	vmovss DWORD PTR [rbp-0x14],xmm0
  4032aa:	vmovss xmm0,DWORD PTR [rbp-0x14]
  4032af:	vmovss DWORD PTR [rbp-0x4],xmm0
  4032b4:	mov    eax,DWORD PTR [rbp-0x4]
  4032b7:	mov    DWORD PTR [rbp-0x4],eax
  4032ba:	vmovss xmm0,DWORD PTR [rbp-0x4]
  4032bf:	pop    rbp
  4032c0:	ret    
  4032c1:	push   rbp
  4032c2:	mov    rbp,rsp
  4032c5:	sub    rsp,0x10
  4032c9:	mov    QWORD PTR [rbp-0x8],rdi
  4032cd:	mov    rax,QWORD PTR [rbp-0x8]
  4032d1:	mov    eax,DWORD PTR [rax]
  4032d3:	mov    DWORD PTR [rbp-0xc],eax
  4032d6:	vmovss xmm0,DWORD PTR [rbp-0xc]
  4032db:	call   403281 <_start@@Base+0x171>
  4032e0:	leave  
  4032e1:	ret    
  4032e2:	push   rbp
  4032e3:	mov    rbp,rsp
  4032e6:	mov    DWORD PTR [rbp-0x4],edi
  4032e9:	mov    eax,DWORD PTR [rbp-0x4]
  4032ec:	pop    rbp
  4032ed:	ret    
  4032ee:	push   rbp
  4032ef:	mov    rbp,rsp
  4032f2:	sub    rsp,0x8
  4032f6:	mov    QWORD PTR [rbp-0x8],rdi
  4032fa:	mov    rax,QWORD PTR [rbp-0x8]
  4032fe:	mov    eax,DWORD PTR [rax]
  403300:	mov    edi,eax
  403302:	call   4032e2 <_start@@Base+0x1d2>
  403307:	leave  
  403308:	ret    
  403309:	push   rbp
  40330a:	mov    rbp,rsp
  40330d:	mov    DWORD PTR [rbp-0x4],edi
  403310:	mov    eax,DWORD PTR [rbp-0x4]
  403313:	pop    rbp
  403314:	ret    
  403315:	push   rbp
  403316:	mov    rbp,rsp
  403319:	sub    rsp,0x8
  40331d:	mov    QWORD PTR [rbp-0x8],rdi
  403321:	mov    rax,QWORD PTR [rbp-0x8]
  403325:	mov    eax,DWORD PTR [rax]
  403327:	mov    edi,eax
  403329:	call   403309 <_start@@Base+0x1f9>
  40332e:	leave  
  40332f:	ret    
  403330:	push   rbp
  403331:	mov    rbp,rsp
  403334:	mov    eax,edi
  403336:	mov    WORD PTR [rbp-0x4],ax
  40333a:	movzx  eax,WORD PTR [rbp-0x4]
  40333e:	pop    rbp
  40333f:	ret    
  403340:	push   rbp
  403341:	mov    rbp,rsp
  403344:	sub    rsp,0x8
  403348:	mov    QWORD PTR [rbp-0x8],rdi
  40334c:	mov    rax,QWORD PTR [rbp-0x8]
  403350:	movzx  eax,WORD PTR [rax]
  403353:	movzx  eax,ax
  403356:	mov    edi,eax
  403358:	call   403330 <_start@@Base+0x220>
  40335d:	leave  
  40335e:	ret    
  40335f:	push   rbp
  403360:	mov    rbp,rsp
  403363:	mov    eax,edi
  403365:	mov    BYTE PTR [rbp-0x4],al
  403368:	movzx  eax,BYTE PTR [rbp-0x4]
  40336c:	pop    rbp
  40336d:	ret    
  40336e:	push   rbp
  40336f:	mov    rbp,rsp
  403372:	sub    rsp,0x8
  403376:	mov    QWORD PTR [rbp-0x8],rdi
  40337a:	mov    rax,QWORD PTR [rbp-0x8]
  40337e:	movzx  eax,BYTE PTR [rax]
  403381:	movzx  eax,al
  403384:	mov    edi,eax
  403386:	call   40335f <_start@@Base+0x24f>
  40338b:	leave  
  40338c:	ret    
  40338d:	push   rbp
  40338e:	mov    rbp,rsp
  403391:	mov    DWORD PTR [rbp-0x4],edi
  403394:	mov    eax,DWORD PTR [rbp-0x4]
  403397:	pop    rbp
  403398:	ret    
  403399:	push   rbp
  40339a:	mov    rbp,rsp
  40339d:	mov    DWORD PTR [rbp-0x4],edi
  4033a0:	mov    eax,DWORD PTR [rbp-0x4]
  4033a3:	pop    rbp
  4033a4:	ret    
  4033a5:	push   rbp
  4033a6:	mov    rbp,rsp
  4033a9:	sub    rsp,0x8
  4033ad:	mov    QWORD PTR [rbp-0x8],rdi
  4033b1:	mov    rax,QWORD PTR [rbp-0x8]
  4033b5:	mov    eax,DWORD PTR [rax]
  4033b7:	mov    edi,eax
  4033b9:	call   40338d <_start@@Base+0x27d>
  4033be:	leave  
  4033bf:	ret    
  4033c0:	push   rbp
  4033c1:	mov    rbp,rsp
  4033c4:	sub    rsp,0x8
  4033c8:	mov    QWORD PTR [rbp-0x8],rdi
  4033cc:	cmp    QWORD PTR [rbp-0x8],0x0
  4033d1:	je     4033e7 <_start@@Base+0x2d7>
  4033d3:	mov    rax,QWORD PTR [rbp-0x8]
  4033d7:	sub    rax,0x4
  4033db:	mov    rdi,rax
  4033de:	call   4032ee <_start@@Base+0x1de>
  4033e3:	mov    eax,eax
  4033e5:	jmp    4033ec <_start@@Base+0x2dc>
  4033e7:	mov    eax,0x0
  4033ec:	leave  
  4033ed:	ret    
  4033ee:	push   rbp
  4033ef:	mov    rbp,rsp
  4033f2:	sub    rsp,0x8
  4033f6:	mov    QWORD PTR [rbp-0x8],rdi
  4033fa:	cmp    QWORD PTR [rbp-0x8],0x0
  4033ff:	je     403415 <_start@@Base+0x305>
  403401:	mov    rax,QWORD PTR [rbp-0x8]
  403405:	sub    rax,0x4
  403409:	mov    rdi,rax
  40340c:	call   4032ee <_start@@Base+0x1de>
  403411:	mov    eax,eax
  403413:	jmp    40341a <_start@@Base+0x30a>
  403415:	mov    eax,0x0
  40341a:	leave  
  40341b:	ret    
  40341c:	push   rbp
  40341d:	mov    rbp,rsp
  403420:	sub    rsp,0x8
  403424:	mov    QWORD PTR [rbp-0x8],rdi
  403428:	mov    rax,QWORD PTR [rbp-0x8]
  40342c:	mov    rdi,rax
  40342f:	call   4033c0 <_start@@Base+0x2b0>
  403434:	leave  
  403435:	ret    
  403436:	push   rbp
  403437:	mov    rbp,rsp
  40343a:	sub    rsp,0x10
  40343e:	mov    QWORD PTR [rbp-0x8],rdi
  403442:	mov    QWORD PTR [rbp-0x10],rsi
  403446:	mov    rax,QWORD PTR [rbp-0x8]
  40344a:	mov    rdi,rax
  40344d:	call   4033c0 <_start@@Base+0x2b0>
  403452:	cmp    rax,QWORD PTR [rbp-0x10]
  403456:	ja     403477 <_start@@Base+0x367>
  403458:	lea    rcx,[rip+0x9121]        # 40c580 <_IO_stdin_used@@Base+0x580>
  40345f:	mov    edx,0x18b
  403464:	lea    rsi,[rip+0x8bbd]        # 40c028 <_IO_stdin_used@@Base+0x28>
  40346b:	lea    rdi,[rip+0x8c36]        # 40c0a8 <_IO_stdin_used@@Base+0xa8>
  403472:	call   403080 <__assert_fail@plt>
  403477:	mov    rdx,QWORD PTR [rbp-0x8]
  40347b:	mov    rax,QWORD PTR [rbp-0x10]
  40347f:	add    rax,rdx
  403482:	mov    rdi,rax
  403485:	call   403225 <_start@@Base+0x115>
  40348a:	leave  
  40348b:	ret    
  40348c:	push   rbp
  40348d:	mov    rbp,rsp
  403490:	sub    rsp,0x20
  403494:	mov    QWORD PTR [rbp-0x18],rdi
  403498:	mov    QWORD PTR [rbp-0x20],rsi
  40349c:	mov    rax,QWORD PTR fs:0x28
  4034a5:	mov    QWORD PTR [rbp-0x8],rax
  4034a9:	xor    eax,eax
  4034ab:	mov    DWORD PTR [rbp-0x10],0x0
  4034b2:	cmp    QWORD PTR [rbp-0x20],0x0
  4034b7:	jne    4034c0 <_start@@Base+0x3b0>
  4034b9:	mov    eax,0x1
  4034be:	jmp    403513 <_start@@Base+0x403>
  4034c0:	mov    rcx,QWORD PTR [rbp-0x20]
  4034c4:	lea    rax,[rbp-0x10]
  4034c8:	mov    edx,0x4
  4034cd:	mov    rsi,rcx
  4034d0:	mov    rdi,rax
  4034d3:	call   403040 <strncpy@plt>
  4034d8:	mov    eax,DWORD PTR [rbp-0x10]
  4034db:	mov    edi,eax
  4034dd:	call   403399 <_start@@Base+0x289>
  4034e2:	mov    DWORD PTR [rbp-0x10],eax
  4034e5:	mov    rax,QWORD PTR [rbp-0x18]
  4034e9:	add    rax,0x4
  4034ed:	mov    rdi,rax
  4034f0:	call   4033a5 <_start@@Base+0x295>
  4034f5:	mov    DWORD PTR [rbp-0xc],eax
  4034f8:	mov    eax,DWORD PTR [rbp-0x10]
  4034fb:	test   eax,eax
  4034fd:	je     403507 <_start@@Base+0x3f7>
  4034ff:	mov    eax,DWORD PTR [rbp-0x10]
  403502:	cmp    DWORD PTR [rbp-0xc],eax
  403505:	jne    40350e <_start@@Base+0x3fe>
  403507:	mov    eax,0x1
  40350c:	jmp    403513 <_start@@Base+0x403>
  40350e:	mov    eax,0x0
  403513:	mov    rdx,QWORD PTR [rbp-0x8]
  403517:	xor    rdx,QWORD PTR fs:0x28
  403520:	je     403527 <_start@@Base+0x417>
  403522:	call   403070 <__stack_chk_fail@plt>
  403527:	leave  
  403528:	ret    
  403529:	push   rbp
  40352a:	mov    rbp,rsp
  40352d:	mov    eax,edi
  40352f:	mov    BYTE PTR [rbp-0x4],al
  403532:	movzx  eax,BYTE PTR [rbp-0x4]
  403536:	pop    rbp
  403537:	ret    
  403538:	push   rbp
  403539:	mov    rbp,rsp
  40353c:	sub    rsp,0x10
  403540:	mov    QWORD PTR [rbp-0x8],rdi
  403544:	cmp    QWORD PTR [rbp-0x8],0x0
  403549:	je     40355d <_start@@Base+0x44d>
  40354b:	mov    rax,QWORD PTR [rbp-0x8]
  40354f:	mov    rdi,rax
  403552:	call   4032c1 <_start@@Base+0x1b1>
  403557:	vmovd  eax,xmm0
  40355b:	jmp    403563 <_start@@Base+0x453>
  40355d:	mov    eax,DWORD PTR [rip+0x9111]        # 40c674 <_IO_stdin_used@@Base+0x674>
  403563:	mov    DWORD PTR [rbp-0xc],eax
  403566:	vmovss xmm0,DWORD PTR [rbp-0xc]
  40356b:	leave  
  40356c:	ret    
  40356d:	push   rbp
  40356e:	mov    rbp,rsp
  403571:	sub    rsp,0x10
  403575:	mov    QWORD PTR [rbp-0x8],rdi
  403579:	cmp    QWORD PTR [rbp-0x8],0x0
  40357e:	je     403596 <_start@@Base+0x486>
  403580:	mov    rax,QWORD PTR [rbp-0x8]
  403584:	add    rax,0x4
  403588:	mov    rdi,rax
  40358b:	call   4032c1 <_start@@Base+0x1b1>
  403590:	vmovd  eax,xmm0
  403594:	jmp    40359c <_start@@Base+0x48c>
  403596:	mov    eax,DWORD PTR [rip+0x90d8]        # 40c674 <_IO_stdin_used@@Base+0x674>
  40359c:	mov    DWORD PTR [rbp-0xc],eax
  40359f:	vmovss xmm0,DWORD PTR [rbp-0xc]
  4035a4:	leave  
  4035a5:	ret    
  4035a6:	push   rbp
  4035a7:	mov    rbp,rsp
  4035aa:	sub    rsp,0x10
  4035ae:	mov    QWORD PTR [rbp-0x8],rdi
  4035b2:	cmp    QWORD PTR [rbp-0x8],0x0
  4035b7:	je     4035cf <_start@@Base+0x4bf>
  4035b9:	mov    rax,QWORD PTR [rbp-0x8]
  4035bd:	add    rax,0x8
  4035c1:	mov    rdi,rax
  4035c4:	call   4032c1 <_start@@Base+0x1b1>
  4035c9:	vmovd  eax,xmm0
  4035cd:	jmp    4035d5 <_start@@Base+0x4c5>
  4035cf:	mov    eax,DWORD PTR [rip+0x909f]        # 40c674 <_IO_stdin_used@@Base+0x674>
  4035d5:	mov    DWORD PTR [rbp-0xc],eax
  4035d8:	vmovss xmm0,DWORD PTR [rbp-0xc]
  4035dd:	leave  
  4035de:	ret    
  4035df:	push   rbp
  4035e0:	mov    rbp,rsp
  4035e3:	sub    rsp,0x20
  4035e7:	mov    QWORD PTR [rbp-0x18],rdi
  4035eb:	mov    QWORD PTR [rbp-0x8],0x0
  4035f3:	cmp    QWORD PTR [rbp-0x18],0x0
  4035f8:	je     403628 <_start@@Base+0x518>
  4035fa:	mov    rdx,QWORD PTR [rbp-0x8]
  4035fe:	mov    rax,QWORD PTR [rbp-0x18]
  403602:	mov    rsi,rdx
  403605:	mov    rdi,rax
  403608:	call   40348c <_start@@Base+0x37c>
  40360d:	test   eax,eax
  40360f:	je     403628 <_start@@Base+0x518>
  403611:	mov    rax,QWORD PTR [rbp-0x18]
  403615:	mov    rdi,rax
  403618:	call   4032ee <_start@@Base+0x1de>
  40361d:	mov    edx,eax
  40361f:	mov    rax,QWORD PTR [rbp-0x18]
  403623:	add    rax,rdx
  403626:	jmp    40362d <_start@@Base+0x51d>
  403628:	mov    eax,0x0
  40362d:	leave  
  40362e:	ret    
  40362f:	push   rbp
  403630:	mov    rbp,rsp
  403633:	sub    rsp,0x20
  403637:	mov    QWORD PTR [rbp-0x18],rdi
  40363b:	mov    WORD PTR [rbp-0xc],0x0
  403641:	cmp    QWORD PTR [rbp-0x18],0x0
  403646:	jne    403667 <_start@@Base+0x557>
  403648:	lea    rcx,[rip+0x8ee1]        # 40c530 <_IO_stdin_used@@Base+0x530>
  40364f:	mov    edx,0x81
  403654:	lea    rsi,[rip+0x8a85]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  40365b:	lea    rdi,[rip+0x8af6]        # 40c158 <_IO_stdin_used@@Base+0x158>
  403662:	call   403080 <__assert_fail@plt>
  403667:	mov    WORD PTR [rbp-0xa],0x0
  40366d:	mov    rax,QWORD PTR [rbp-0x18]
  403671:	mov    rdi,rax
  403674:	call   403315 <_start@@Base+0x205>
  403679:	cdqe   
  40367b:	neg    rax
  40367e:	mov    rdx,rax
  403681:	mov    rax,QWORD PTR [rbp-0x18]
  403685:	add    rax,rdx
  403688:	mov    QWORD PTR [rbp-0x8],rax
  40368c:	mov    rax,QWORD PTR [rbp-0x8]
  403690:	mov    rdi,rax
  403693:	call   403340 <_start@@Base+0x230>
  403698:	movzx  eax,ax
  40369b:	movzx  edx,WORD PTR [rbp-0xa]
  40369f:	add    edx,0x3
  4036a2:	movsxd rdx,edx
  4036a5:	add    rdx,rdx
  4036a8:	cmp    rax,rdx
  4036ab:	jb     4036cc <_start@@Base+0x5bc>
  4036ad:	movzx  eax,WORD PTR [rbp-0xa]
  4036b1:	add    rax,0x2
  4036b5:	lea    rdx,[rax+rax*1]
  4036b9:	mov    rax,QWORD PTR [rbp-0x8]
  4036bd:	add    rax,rdx
  4036c0:	mov    rdi,rax
  4036c3:	call   403340 <_start@@Base+0x230>
  4036c8:	mov    WORD PTR [rbp-0xc],ax
  4036cc:	cmp    WORD PTR [rbp-0xc],0x0
  4036d1:	je     4036e0 <_start@@Base+0x5d0>
  4036d3:	movzx  edx,WORD PTR [rbp-0xc]
  4036d7:	mov    rax,QWORD PTR [rbp-0x18]
  4036db:	add    rax,rdx
  4036de:	jmp    4036e5 <_start@@Base+0x5d5>
  4036e0:	mov    eax,0x0
  4036e5:	leave  
  4036e6:	ret    
  4036e7:	push   rbp
  4036e8:	mov    rbp,rsp
  4036eb:	sub    rsp,0x20
  4036ef:	mov    QWORD PTR [rbp-0x18],rdi
  4036f3:	mov    WORD PTR [rbp-0xc],0x0
  4036f9:	cmp    QWORD PTR [rbp-0x18],0x0
  4036fe:	jne    40371f <_start@@Base+0x60f>
  403700:	lea    rcx,[rip+0x8d69]        # 40c470 <_IO_stdin_used@@Base+0x470>
  403707:	mov    edx,0x82
  40370c:	lea    rsi,[rip+0x89cd]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  403713:	lea    rdi,[rip+0x8a3e]        # 40c158 <_IO_stdin_used@@Base+0x158>
  40371a:	call   403080 <__assert_fail@plt>
  40371f:	mov    WORD PTR [rbp-0xa],0x1
  403725:	mov    rax,QWORD PTR [rbp-0x18]
  403729:	mov    rdi,rax
  40372c:	call   403315 <_start@@Base+0x205>
  403731:	cdqe   
  403733:	neg    rax
  403736:	mov    rdx,rax
  403739:	mov    rax,QWORD PTR [rbp-0x18]
  40373d:	add    rax,rdx
  403740:	mov    QWORD PTR [rbp-0x8],rax
  403744:	mov    rax,QWORD PTR [rbp-0x8]
  403748:	mov    rdi,rax
  40374b:	call   403340 <_start@@Base+0x230>
  403750:	movzx  eax,ax
  403753:	movzx  edx,WORD PTR [rbp-0xa]
  403757:	add    edx,0x3
  40375a:	movsxd rdx,edx
  40375d:	add    rdx,rdx
  403760:	cmp    rax,rdx
  403763:	jb     403784 <_start@@Base+0x674>
  403765:	movzx  eax,WORD PTR [rbp-0xa]
  403769:	add    rax,0x2
  40376d:	lea    rdx,[rax+rax*1]
  403771:	mov    rax,QWORD PTR [rbp-0x8]
  403775:	add    rax,rdx
  403778:	mov    rdi,rax
  40377b:	call   403340 <_start@@Base+0x230>
  403780:	mov    WORD PTR [rbp-0xc],ax
  403784:	cmp    WORD PTR [rbp-0xc],0x0
  403789:	je     4037a0 <_start@@Base+0x690>
  40378b:	movzx  edx,WORD PTR [rbp-0xc]
  40378f:	mov    rax,QWORD PTR [rbp-0x18]
  403793:	add    rax,rdx
  403796:	mov    rdi,rax
  403799:	call   403264 <_start@@Base+0x154>
  40379e:	jmp    4037a5 <_start@@Base+0x695>
  4037a0:	mov    eax,0x96
  4037a5:	leave  
  4037a6:	ret    
  4037a7:	push   rbp
  4037a8:	mov    rbp,rsp
  4037ab:	sub    rsp,0x20
  4037af:	mov    QWORD PTR [rbp-0x18],rdi
  4037b3:	mov    WORD PTR [rbp-0xc],0x0
  4037b9:	cmp    QWORD PTR [rbp-0x18],0x0
  4037be:	jne    4037df <_start@@Base+0x6cf>
  4037c0:	lea    rcx,[rip+0x8d39]        # 40c500 <_IO_stdin_used@@Base+0x500>
  4037c7:	mov    edx,0x82
  4037cc:	lea    rsi,[rip+0x890d]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  4037d3:	lea    rdi,[rip+0x897e]        # 40c158 <_IO_stdin_used@@Base+0x158>
  4037da:	call   403080 <__assert_fail@plt>
  4037df:	mov    WORD PTR [rbp-0xa],0x1
  4037e5:	mov    rax,QWORD PTR [rbp-0x18]
  4037e9:	mov    rdi,rax
  4037ec:	call   403315 <_start@@Base+0x205>
  4037f1:	cdqe   
  4037f3:	neg    rax
  4037f6:	mov    rdx,rax
  4037f9:	mov    rax,QWORD PTR [rbp-0x18]
  4037fd:	add    rax,rdx
  403800:	mov    QWORD PTR [rbp-0x8],rax
  403804:	mov    rax,QWORD PTR [rbp-0x8]
  403808:	mov    rdi,rax
  40380b:	call   403340 <_start@@Base+0x230>
  403810:	movzx  eax,ax
  403813:	movzx  edx,WORD PTR [rbp-0xa]
  403817:	add    edx,0x3
  40381a:	movsxd rdx,edx
  40381d:	add    rdx,rdx
  403820:	cmp    rax,rdx
  403823:	jb     403844 <_start@@Base+0x734>
  403825:	movzx  eax,WORD PTR [rbp-0xa]
  403829:	add    rax,0x2
  40382d:	lea    rdx,[rax+rax*1]
  403831:	mov    rax,QWORD PTR [rbp-0x8]
  403835:	add    rax,rdx
  403838:	mov    rdi,rax
  40383b:	call   403340 <_start@@Base+0x230>
  403840:	mov    WORD PTR [rbp-0xc],ax
  403844:	cmp    WORD PTR [rbp-0xc],0x0
  403849:	setne  al
  40384c:	movzx  eax,al
  40384f:	leave  
  403850:	ret    
  403851:	push   rbp
  403852:	mov    rbp,rsp
  403855:	sub    rsp,0x20
  403859:	mov    QWORD PTR [rbp-0x18],rdi
  40385d:	mov    WORD PTR [rbp-0xc],0x0
  403863:	cmp    QWORD PTR [rbp-0x18],0x0
  403868:	jne    403889 <_start@@Base+0x779>
  40386a:	lea    rcx,[rip+0x8bdf]        # 40c450 <_IO_stdin_used@@Base+0x450>
  403871:	mov    edx,0x83
  403876:	lea    rsi,[rip+0x8863]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  40387d:	lea    rdi,[rip+0x88d4]        # 40c158 <_IO_stdin_used@@Base+0x158>
  403884:	call   403080 <__assert_fail@plt>
  403889:	mov    WORD PTR [rbp-0xa],0x2
  40388f:	mov    rax,QWORD PTR [rbp-0x18]
  403893:	mov    rdi,rax
  403896:	call   403315 <_start@@Base+0x205>
  40389b:	cdqe   
  40389d:	neg    rax
  4038a0:	mov    rdx,rax
  4038a3:	mov    rax,QWORD PTR [rbp-0x18]
  4038a7:	add    rax,rdx
  4038aa:	mov    QWORD PTR [rbp-0x8],rax
  4038ae:	mov    rax,QWORD PTR [rbp-0x8]
  4038b2:	mov    rdi,rax
  4038b5:	call   403340 <_start@@Base+0x230>
  4038ba:	movzx  eax,ax
  4038bd:	movzx  edx,WORD PTR [rbp-0xa]
  4038c1:	add    edx,0x3
  4038c4:	movsxd rdx,edx
  4038c7:	add    rdx,rdx
  4038ca:	cmp    rax,rdx
  4038cd:	jb     4038ee <_start@@Base+0x7de>
  4038cf:	movzx  eax,WORD PTR [rbp-0xa]
  4038d3:	add    rax,0x2
  4038d7:	lea    rdx,[rax+rax*1]
  4038db:	mov    rax,QWORD PTR [rbp-0x8]
  4038df:	add    rax,rdx
  4038e2:	mov    rdi,rax
  4038e5:	call   403340 <_start@@Base+0x230>
  4038ea:	mov    WORD PTR [rbp-0xc],ax
  4038ee:	cmp    WORD PTR [rbp-0xc],0x0
  4038f3:	je     40390a <_start@@Base+0x7fa>
  4038f5:	movzx  edx,WORD PTR [rbp-0xc]
  4038f9:	mov    rax,QWORD PTR [rbp-0x18]
  4038fd:	add    rax,rdx
  403900:	mov    rdi,rax
  403903:	call   403264 <_start@@Base+0x154>
  403908:	jmp    40390f <_start@@Base+0x7ff>
  40390a:	mov    eax,0x64
  40390f:	leave  
  403910:	ret    
  403911:	push   rbp
  403912:	mov    rbp,rsp
  403915:	sub    rsp,0x20
  403919:	mov    QWORD PTR [rbp-0x18],rdi
  40391d:	mov    WORD PTR [rbp-0xc],0x0
  403923:	cmp    QWORD PTR [rbp-0x18],0x0
  403928:	jne    403949 <_start@@Base+0x839>
  40392a:	lea    rcx,[rip+0x8b8f]        # 40c4c0 <_IO_stdin_used@@Base+0x4c0>
  403931:	mov    edx,0x83
  403936:	lea    rsi,[rip+0x87a3]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  40393d:	lea    rdi,[rip+0x8814]        # 40c158 <_IO_stdin_used@@Base+0x158>
  403944:	call   403080 <__assert_fail@plt>
  403949:	mov    WORD PTR [rbp-0xa],0x2
  40394f:	mov    rax,QWORD PTR [rbp-0x18]
  403953:	mov    rdi,rax
  403956:	call   403315 <_start@@Base+0x205>
  40395b:	cdqe   
  40395d:	neg    rax
  403960:	mov    rdx,rax
  403963:	mov    rax,QWORD PTR [rbp-0x18]
  403967:	add    rax,rdx
  40396a:	mov    QWORD PTR [rbp-0x8],rax
  40396e:	mov    rax,QWORD PTR [rbp-0x8]
  403972:	mov    rdi,rax
  403975:	call   403340 <_start@@Base+0x230>
  40397a:	movzx  eax,ax
  40397d:	movzx  edx,WORD PTR [rbp-0xa]
  403981:	add    edx,0x3
  403984:	movsxd rdx,edx
  403987:	add    rdx,rdx
  40398a:	cmp    rax,rdx
  40398d:	jb     4039ae <_start@@Base+0x89e>
  40398f:	movzx  eax,WORD PTR [rbp-0xa]
  403993:	add    rax,0x2
  403997:	lea    rdx,[rax+rax*1]
  40399b:	mov    rax,QWORD PTR [rbp-0x8]
  40399f:	add    rax,rdx
  4039a2:	mov    rdi,rax
  4039a5:	call   403340 <_start@@Base+0x230>
  4039aa:	mov    WORD PTR [rbp-0xc],ax
  4039ae:	cmp    WORD PTR [rbp-0xc],0x0
  4039b3:	setne  al
  4039b6:	movzx  eax,al
  4039b9:	leave  
  4039ba:	ret    
  4039bb:	push   rbp
  4039bc:	mov    rbp,rsp
  4039bf:	sub    rsp,0x30
  4039c3:	mov    QWORD PTR [rbp-0x28],rdi
  4039c7:	mov    WORD PTR [rbp-0x14],0x0
  4039cd:	cmp    QWORD PTR [rbp-0x28],0x0
  4039d2:	jne    4039f3 <_start@@Base+0x8e3>
  4039d4:	lea    rcx,[rip+0x8ab5]        # 40c490 <_IO_stdin_used@@Base+0x490>
  4039db:	mov    edx,0x84
  4039e0:	lea    rsi,[rip+0x86f9]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  4039e7:	lea    rdi,[rip+0x876a]        # 40c158 <_IO_stdin_used@@Base+0x158>
  4039ee:	call   403080 <__assert_fail@plt>
  4039f3:	mov    WORD PTR [rbp-0x12],0x3
  4039f9:	mov    rax,QWORD PTR [rbp-0x28]
  4039fd:	mov    rdi,rax
  403a00:	call   403315 <_start@@Base+0x205>
  403a05:	cdqe   
  403a07:	neg    rax
  403a0a:	mov    rdx,rax
  403a0d:	mov    rax,QWORD PTR [rbp-0x28]
  403a11:	add    rax,rdx
  403a14:	mov    QWORD PTR [rbp-0x10],rax
  403a18:	mov    rax,QWORD PTR [rbp-0x10]
  403a1c:	mov    rdi,rax
  403a1f:	call   403340 <_start@@Base+0x230>
  403a24:	movzx  eax,ax
  403a27:	movzx  edx,WORD PTR [rbp-0x12]
  403a2b:	add    edx,0x3
  403a2e:	movsxd rdx,edx
  403a31:	add    rdx,rdx
  403a34:	cmp    rax,rdx
  403a37:	jb     403a58 <_start@@Base+0x948>
  403a39:	movzx  eax,WORD PTR [rbp-0x12]
  403a3d:	add    rax,0x2
  403a41:	lea    rdx,[rax+rax*1]
  403a45:	mov    rax,QWORD PTR [rbp-0x10]
  403a49:	add    rax,rdx
  403a4c:	mov    rdi,rax
  403a4f:	call   403340 <_start@@Base+0x230>
  403a54:	mov    WORD PTR [rbp-0x14],ax
  403a58:	cmp    WORD PTR [rbp-0x14],0x0
  403a5d:	je     403a89 <_start@@Base+0x979>
  403a5f:	movzx  edx,WORD PTR [rbp-0x14]
  403a63:	mov    rax,QWORD PTR [rbp-0x28]
  403a67:	add    rax,rdx
  403a6a:	mov    QWORD PTR [rbp-0x8],rax
  403a6e:	mov    rax,QWORD PTR [rbp-0x8]
  403a72:	mov    rdi,rax
  403a75:	call   4032ee <_start@@Base+0x1de>
  403a7a:	mov    eax,eax
  403a7c:	lea    rdx,[rax+0x4]
  403a80:	mov    rax,QWORD PTR [rbp-0x8]
  403a84:	add    rax,rdx
  403a87:	jmp    403a8e <_start@@Base+0x97e>
  403a89:	mov    eax,0x0
  403a8e:	leave  
  403a8f:	ret    
  403a90:	push   rbp
  403a91:	mov    rbp,rsp
  403a94:	sub    rsp,0x30
  403a98:	mov    QWORD PTR [rbp-0x28],rdi
  403a9c:	mov    WORD PTR [rbp-0x14],0x0
  403aa2:	cmp    QWORD PTR [rbp-0x28],0x0
  403aa7:	jne    403ac8 <_start@@Base+0x9b8>
  403aa9:	lea    rcx,[rip+0x8ab0]        # 40c560 <_IO_stdin_used@@Base+0x560>
  403ab0:	mov    edx,0x87
  403ab5:	lea    rsi,[rip+0x8624]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  403abc:	lea    rdi,[rip+0x8695]        # 40c158 <_IO_stdin_used@@Base+0x158>
  403ac3:	call   403080 <__assert_fail@plt>
  403ac8:	mov    WORD PTR [rbp-0x12],0x5
  403ace:	mov    rax,QWORD PTR [rbp-0x28]
  403ad2:	mov    rdi,rax
  403ad5:	call   403315 <_start@@Base+0x205>
  403ada:	cdqe   
  403adc:	neg    rax
  403adf:	mov    rdx,rax
  403ae2:	mov    rax,QWORD PTR [rbp-0x28]
  403ae6:	add    rax,rdx
  403ae9:	mov    QWORD PTR [rbp-0x10],rax
  403aed:	mov    rax,QWORD PTR [rbp-0x10]
  403af1:	mov    rdi,rax
  403af4:	call   403340 <_start@@Base+0x230>
  403af9:	movzx  eax,ax
  403afc:	movzx  edx,WORD PTR [rbp-0x12]
  403b00:	add    edx,0x3
  403b03:	movsxd rdx,edx
  403b06:	add    rdx,rdx
  403b09:	cmp    rax,rdx
  403b0c:	jb     403b2d <_start@@Base+0xa1d>
  403b0e:	movzx  eax,WORD PTR [rbp-0x12]
  403b12:	add    rax,0x2
  403b16:	lea    rdx,[rax+rax*1]
  403b1a:	mov    rax,QWORD PTR [rbp-0x10]
  403b1e:	add    rax,rdx
  403b21:	mov    rdi,rax
  403b24:	call   403340 <_start@@Base+0x230>
  403b29:	mov    WORD PTR [rbp-0x14],ax
  403b2d:	cmp    WORD PTR [rbp-0x14],0x0
  403b32:	je     403b5e <_start@@Base+0xa4e>
  403b34:	movzx  edx,WORD PTR [rbp-0x14]
  403b38:	mov    rax,QWORD PTR [rbp-0x28]
  403b3c:	add    rax,rdx
  403b3f:	mov    QWORD PTR [rbp-0x8],rax
  403b43:	mov    rax,QWORD PTR [rbp-0x8]
  403b47:	mov    rdi,rax
  403b4a:	call   4032ee <_start@@Base+0x1de>
  403b4f:	mov    eax,eax
  403b51:	lea    rdx,[rax+0x4]
  403b55:	mov    rax,QWORD PTR [rbp-0x8]
  403b59:	add    rax,rdx
  403b5c:	jmp    403b63 <_start@@Base+0xa53>
  403b5e:	mov    eax,0x0
  403b63:	leave  
  403b64:	ret    
  403b65:	push   rbp
  403b66:	mov    rbp,rsp
  403b69:	sub    rsp,0x30
  403b6d:	mov    QWORD PTR [rbp-0x28],rdi
  403b71:	mov    WORD PTR [rbp-0x14],0x0
  403b77:	cmp    QWORD PTR [rbp-0x28],0x0
  403b7c:	jne    403b9d <_start@@Base+0xa8d>
  403b7e:	lea    rcx,[rip+0x8a1b]        # 40c5a0 <_IO_stdin_used@@Base+0x5a0>
  403b85:	mov    edx,0x89
  403b8a:	lea    rsi,[rip+0x854f]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  403b91:	lea    rdi,[rip+0x85c0]        # 40c158 <_IO_stdin_used@@Base+0x158>
  403b98:	call   403080 <__assert_fail@plt>
  403b9d:	mov    WORD PTR [rbp-0x12],0x7
  403ba3:	mov    rax,QWORD PTR [rbp-0x28]
  403ba7:	mov    rdi,rax
  403baa:	call   403315 <_start@@Base+0x205>
  403baf:	cdqe   
  403bb1:	neg    rax
  403bb4:	mov    rdx,rax
  403bb7:	mov    rax,QWORD PTR [rbp-0x28]
  403bbb:	add    rax,rdx
  403bbe:	mov    QWORD PTR [rbp-0x10],rax
  403bc2:	mov    rax,QWORD PTR [rbp-0x10]
  403bc6:	mov    rdi,rax
  403bc9:	call   403340 <_start@@Base+0x230>
  403bce:	movzx  eax,ax
  403bd1:	movzx  edx,WORD PTR [rbp-0x12]
  403bd5:	add    edx,0x3
  403bd8:	movsxd rdx,edx
  403bdb:	add    rdx,rdx
  403bde:	cmp    rax,rdx
  403be1:	jb     403c02 <_start@@Base+0xaf2>
  403be3:	movzx  eax,WORD PTR [rbp-0x12]
  403be7:	add    rax,0x2
  403beb:	lea    rdx,[rax+rax*1]
  403bef:	mov    rax,QWORD PTR [rbp-0x10]
  403bf3:	add    rax,rdx
  403bf6:	mov    rdi,rax
  403bf9:	call   403340 <_start@@Base+0x230>
  403bfe:	mov    WORD PTR [rbp-0x14],ax
  403c02:	cmp    WORD PTR [rbp-0x14],0x0
  403c07:	je     403c33 <_start@@Base+0xb23>
  403c09:	movzx  edx,WORD PTR [rbp-0x14]
  403c0d:	mov    rax,QWORD PTR [rbp-0x28]
  403c11:	add    rax,rdx
  403c14:	mov    QWORD PTR [rbp-0x8],rax
  403c18:	mov    rax,QWORD PTR [rbp-0x8]
  403c1c:	mov    rdi,rax
  403c1f:	call   4032ee <_start@@Base+0x1de>
  403c24:	mov    eax,eax
  403c26:	lea    rdx,[rax+0x4]
  403c2a:	mov    rax,QWORD PTR [rbp-0x8]
  403c2e:	add    rax,rdx
  403c31:	jmp    403c38 <_start@@Base+0xb28>
  403c33:	mov    eax,0x0
  403c38:	leave  
  403c39:	ret    
  403c3a:	push   rbp
  403c3b:	mov    rbp,rsp
  403c3e:	sub    rsp,0x20
  403c42:	mov    QWORD PTR [rbp-0x18],rdi
  403c46:	mov    WORD PTR [rbp-0xc],0x0
  403c4c:	cmp    QWORD PTR [rbp-0x18],0x0
  403c51:	jne    403c72 <_start@@Base+0xb62>
  403c53:	lea    rcx,[rip+0x8986]        # 40c5e0 <_IO_stdin_used@@Base+0x5e0>
  403c5a:	mov    edx,0x8a
  403c5f:	lea    rsi,[rip+0x847a]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  403c66:	lea    rdi,[rip+0x84eb]        # 40c158 <_IO_stdin_used@@Base+0x158>
  403c6d:	call   403080 <__assert_fail@plt>
  403c72:	mov    WORD PTR [rbp-0xa],0x8
  403c78:	mov    rax,QWORD PTR [rbp-0x18]
  403c7c:	mov    rdi,rax
  403c7f:	call   403315 <_start@@Base+0x205>
  403c84:	cdqe   
  403c86:	neg    rax
  403c89:	mov    rdx,rax
  403c8c:	mov    rax,QWORD PTR [rbp-0x18]
  403c90:	add    rax,rdx
  403c93:	mov    QWORD PTR [rbp-0x8],rax
  403c97:	mov    rax,QWORD PTR [rbp-0x8]
  403c9b:	mov    rdi,rax
  403c9e:	call   403340 <_start@@Base+0x230>
  403ca3:	movzx  eax,ax
  403ca6:	movzx  edx,WORD PTR [rbp-0xa]
  403caa:	add    edx,0x3
  403cad:	movsxd rdx,edx
  403cb0:	add    rdx,rdx
  403cb3:	cmp    rax,rdx
  403cb6:	jb     403cd7 <_start@@Base+0xbc7>
  403cb8:	movzx  eax,WORD PTR [rbp-0xa]
  403cbc:	add    rax,0x2
  403cc0:	lea    rdx,[rax+rax*1]
  403cc4:	mov    rax,QWORD PTR [rbp-0x8]
  403cc8:	add    rax,rdx
  403ccb:	mov    rdi,rax
  403cce:	call   403340 <_start@@Base+0x230>
  403cd3:	mov    WORD PTR [rbp-0xc],ax
  403cd7:	cmp    WORD PTR [rbp-0xc],0x0
  403cdc:	je     403cf3 <_start@@Base+0xbe3>
  403cde:	movzx  edx,WORD PTR [rbp-0xc]
  403ce2:	mov    rax,QWORD PTR [rbp-0x18]
  403ce6:	add    rax,rdx
  403ce9:	mov    rdi,rax
  403cec:	call   40336e <_start@@Base+0x25e>
  403cf1:	jmp    403cf8 <_start@@Base+0xbe8>
  403cf3:	mov    eax,0x0
  403cf8:	leave  
  403cf9:	ret    
  403cfa:	push   rbp
  403cfb:	mov    rbp,rsp
  403cfe:	sub    rsp,0x30
  403d02:	mov    QWORD PTR [rbp-0x28],rdi
  403d06:	mov    WORD PTR [rbp-0x14],0x0
  403d0c:	cmp    QWORD PTR [rbp-0x28],0x0
  403d11:	jne    403d32 <_start@@Base+0xc22>
  403d13:	lea    rcx,[rip+0x88f6]        # 40c610 <_IO_stdin_used@@Base+0x610>
  403d1a:	mov    edx,0x8a
  403d1f:	lea    rsi,[rip+0x83ba]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  403d26:	lea    rdi,[rip+0x842b]        # 40c158 <_IO_stdin_used@@Base+0x158>
  403d2d:	call   403080 <__assert_fail@plt>
  403d32:	mov    WORD PTR [rbp-0x12],0x9
  403d38:	mov    rax,QWORD PTR [rbp-0x28]
  403d3c:	mov    rdi,rax
  403d3f:	call   403315 <_start@@Base+0x205>
  403d44:	cdqe   
  403d46:	neg    rax
  403d49:	mov    rdx,rax
  403d4c:	mov    rax,QWORD PTR [rbp-0x28]
  403d50:	add    rax,rdx
  403d53:	mov    QWORD PTR [rbp-0x10],rax
  403d57:	mov    rax,QWORD PTR [rbp-0x10]
  403d5b:	mov    rdi,rax
  403d5e:	call   403340 <_start@@Base+0x230>
  403d63:	movzx  eax,ax
  403d66:	movzx  edx,WORD PTR [rbp-0x12]
  403d6a:	add    edx,0x3
  403d6d:	movsxd rdx,edx
  403d70:	add    rdx,rdx
  403d73:	cmp    rax,rdx
  403d76:	jb     403d97 <_start@@Base+0xc87>
  403d78:	movzx  eax,WORD PTR [rbp-0x12]
  403d7c:	add    rax,0x2
  403d80:	lea    rdx,[rax+rax*1]
  403d84:	mov    rax,QWORD PTR [rbp-0x10]
  403d88:	add    rax,rdx
  403d8b:	mov    rdi,rax
  403d8e:	call   403340 <_start@@Base+0x230>
  403d93:	mov    WORD PTR [rbp-0x14],ax
  403d97:	cmp    WORD PTR [rbp-0x14],0x0
  403d9c:	je     403dc4 <_start@@Base+0xcb4>
  403d9e:	movzx  edx,WORD PTR [rbp-0x14]
  403da2:	mov    rax,QWORD PTR [rbp-0x28]
  403da6:	add    rax,rdx
  403da9:	mov    QWORD PTR [rbp-0x8],rax
  403dad:	mov    rax,QWORD PTR [rbp-0x8]
  403db1:	mov    rdi,rax
  403db4:	call   4032ee <_start@@Base+0x1de>
  403db9:	mov    edx,eax
  403dbb:	mov    rax,QWORD PTR [rbp-0x8]
  403dbf:	add    rax,rdx
  403dc2:	jmp    403dc9 <_start@@Base+0xcb9>
  403dc4:	mov    eax,0x0
  403dc9:	leave  
  403dca:	ret    
  403dcb:	push   rbp
  403dcc:	mov    rbp,rsp
  403dcf:	sub    rsp,0x8
  403dd3:	mov    QWORD PTR [rbp-0x8],rdi
  403dd7:	cmp    QWORD PTR [rbp-0x8],0x0
  403ddc:	je     403df2 <_start@@Base+0xce2>
  403dde:	mov    rax,QWORD PTR [rbp-0x8]
  403de2:	sub    rax,0x4
  403de6:	mov    rdi,rax
  403de9:	call   4032ee <_start@@Base+0x1de>
  403dee:	mov    eax,eax
  403df0:	jmp    403df7 <_start@@Base+0xce7>
  403df2:	mov    eax,0x0
  403df7:	leave  
  403df8:	ret    
  403df9:	push   rbp
  403dfa:	mov    rbp,rsp
  403dfd:	sub    rsp,0x20
  403e01:	mov    QWORD PTR [rbp-0x18],rdi
  403e05:	mov    QWORD PTR [rbp-0x20],rsi
  403e09:	mov    rax,QWORD PTR [rbp-0x20]
  403e0d:	lea    rdx,[rax*4+0x0]
  403e15:	mov    rax,QWORD PTR [rbp-0x18]
  403e19:	add    rax,rdx
  403e1c:	mov    QWORD PTR [rbp-0x8],rax
  403e20:	mov    rax,QWORD PTR [rbp-0x18]
  403e24:	mov    rdi,rax
  403e27:	call   4033c0 <_start@@Base+0x2b0>
  403e2c:	cmp    rax,QWORD PTR [rbp-0x20]
  403e30:	ja     403e51 <_start@@Base+0xd41>
  403e32:	lea    rcx,[rip+0x8787]        # 40c5c0 <_IO_stdin_used@@Base+0x5c0>
  403e39:	mov    edx,0x91
  403e3e:	lea    rsi,[rip+0x829b]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  403e45:	lea    rdi,[rip+0x825c]        # 40c0a8 <_IO_stdin_used@@Base+0xa8>
  403e4c:	call   403080 <__assert_fail@plt>
  403e51:	mov    rax,QWORD PTR [rbp-0x8]
  403e55:	mov    rdi,rax
  403e58:	call   4032ee <_start@@Base+0x1de>
  403e5d:	mov    edx,eax
  403e5f:	mov    rax,QWORD PTR [rbp-0x8]
  403e63:	add    rax,rdx
  403e66:	leave  
  403e67:	ret    
  403e68:	push   rbp
  403e69:	mov    rbp,rsp
  403e6c:	sub    rsp,0x30
  403e70:	mov    QWORD PTR [rbp-0x28],rdi
  403e74:	mov    WORD PTR [rbp-0x14],0x0
  403e7a:	cmp    QWORD PTR [rbp-0x28],0x0
  403e7f:	jne    403ea0 <_start@@Base+0xd90>
  403e81:	lea    rcx,[rip+0x87a8]        # 40c630 <_IO_stdin_used@@Base+0x630>
  403e88:	mov    edx,0x94
  403e8d:	lea    rsi,[rip+0x824c]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  403e94:	lea    rdi,[rip+0x82bd]        # 40c158 <_IO_stdin_used@@Base+0x158>
  403e9b:	call   403080 <__assert_fail@plt>
  403ea0:	mov    WORD PTR [rbp-0x12],0x0
  403ea6:	mov    rax,QWORD PTR [rbp-0x28]
  403eaa:	mov    rdi,rax
  403ead:	call   403315 <_start@@Base+0x205>
  403eb2:	cdqe   
  403eb4:	neg    rax
  403eb7:	mov    rdx,rax
  403eba:	mov    rax,QWORD PTR [rbp-0x28]
  403ebe:	add    rax,rdx
  403ec1:	mov    QWORD PTR [rbp-0x10],rax
  403ec5:	mov    rax,QWORD PTR [rbp-0x10]
  403ec9:	mov    rdi,rax
  403ecc:	call   403340 <_start@@Base+0x230>
  403ed1:	movzx  eax,ax
  403ed4:	movzx  edx,WORD PTR [rbp-0x12]
  403ed8:	add    edx,0x3
  403edb:	movsxd rdx,edx
  403ede:	add    rdx,rdx
  403ee1:	cmp    rax,rdx
  403ee4:	jb     403f05 <_start@@Base+0xdf5>
  403ee6:	movzx  eax,WORD PTR [rbp-0x12]
  403eea:	add    rax,0x2
  403eee:	lea    rdx,[rax+rax*1]
  403ef2:	mov    rax,QWORD PTR [rbp-0x10]
  403ef6:	add    rax,rdx
  403ef9:	mov    rdi,rax
  403efc:	call   403340 <_start@@Base+0x230>
  403f01:	mov    WORD PTR [rbp-0x14],ax
  403f05:	cmp    WORD PTR [rbp-0x14],0x0
  403f0a:	je     403f36 <_start@@Base+0xe26>
  403f0c:	movzx  edx,WORD PTR [rbp-0x14]
  403f10:	mov    rax,QWORD PTR [rbp-0x28]
  403f14:	add    rax,rdx
  403f17:	mov    QWORD PTR [rbp-0x8],rax
  403f1b:	mov    rax,QWORD PTR [rbp-0x8]
  403f1f:	mov    rdi,rax
  403f22:	call   4032ee <_start@@Base+0x1de>
  403f27:	mov    eax,eax
  403f29:	lea    rdx,[rax+0x4]
  403f2d:	mov    rax,QWORD PTR [rbp-0x8]
  403f31:	add    rax,rdx
  403f34:	jmp    403f3b <_start@@Base+0xe2b>
  403f36:	mov    eax,0x0
  403f3b:	leave  
  403f3c:	ret    
  403f3d:	push   rbp
  403f3e:	mov    rbp,rsp
  403f41:	sub    rsp,0x20
  403f45:	mov    QWORD PTR [rbp-0x18],rdi
  403f49:	mov    WORD PTR [rbp-0xc],0x0
  403f4f:	cmp    QWORD PTR [rbp-0x18],0x0
  403f54:	jne    403f75 <_start@@Base+0xe65>
  403f56:	lea    rcx,[rip+0x86f3]        # 40c650 <_IO_stdin_used@@Base+0x650>
  403f5d:	mov    edx,0x95
  403f62:	lea    rsi,[rip+0x8177]        # 40c0e0 <_IO_stdin_used@@Base+0xe0>
  403f69:	lea    rdi,[rip+0x81e8]        # 40c158 <_IO_stdin_used@@Base+0x158>
  403f70:	call   403080 <__assert_fail@plt>
  403f75:	mov    WORD PTR [rbp-0xa],0x1
  403f7b:	mov    rax,QWORD PTR [rbp-0x18]
  403f7f:	mov    rdi,rax
  403f82:	call   403315 <_start@@Base+0x205>
  403f87:	cdqe   
  403f89:	neg    rax
  403f8c:	mov    rdx,rax
  403f8f:	mov    rax,QWORD PTR [rbp-0x18]
  403f93:	add    rax,rdx
  403f96:	mov    QWORD PTR [rbp-0x8],rax
  403f9a:	mov    rax,QWORD PTR [rbp-0x8]
  403f9e:	mov    rdi,rax
  403fa1:	call   403340 <_start@@Base+0x230>
  403fa6:	movzx  eax,ax
  403fa9:	movzx  edx,WORD PTR [rbp-0xa]
  403fad:	add    edx,0x3
  403fb0:	movsxd rdx,edx
  403fb3:	add    rdx,rdx
  403fb6:	cmp    rax,rdx
  403fb9:	jb     403fda <_start@@Base+0xeca>
  403fbb:	movzx  eax,WORD PTR [rbp-0xa]
  403fbf:	add    rax,0x2
  403fc3:	lea    rdx,[rax+rax*1]
  403fc7:	mov    rax,QWORD PTR [rbp-0x8]
  403fcb:	add    rax,rdx
  403fce:	mov    rdi,rax
  403fd1:	call   403340 <_start@@Base+0x230>
  403fd6:	mov    WORD PTR [rbp-0xc],ax
  403fda:	cmp    WORD PTR [rbp-0xc],0x0
  403fdf:	je     403ff6 <_start@@Base+0xee6>
  403fe1:	movzx  edx,WORD PTR [rbp-0xc]
  403fe5:	mov    rax,QWORD PTR [rbp-0x18]
  403fe9:	add    rax,rdx
  403fec:	mov    rdi,rax
  403fef:	call   403264 <_start@@Base+0x154>
  403ff4:	jmp    403ffb <_start@@Base+0xeeb>
  403ff6:	mov    eax,0x0
  403ffb:	leave  
  403ffc:	ret    
  403ffd:	push   rbp
  403ffe:	mov    rbp,rsp
  404001:	sub    rsp,0x20
  404005:	mov    QWORD PTR [rbp-0x8],rdi
  404009:	mov    QWORD PTR [rbp-0x10],rsi
  40400d:	mov    QWORD PTR [rbp-0x18],rdx
  404011:	mov    rdx,QWORD PTR [rbp-0x18]
  404015:	mov    rsi,QWORD PTR [rbp-0x10]
  404019:	mov    rax,QWORD PTR [rbp-0x8]
  40401d:	mov    r9d,0xffffffff
  404023:	mov    r8d,0x1
  404029:	mov    ecx,0x1
  40402e:	mov    rdi,rax
  404031:	call   409252 <flatcc_builder_create_vector@@Base>
  404036:	leave  
  404037:	ret    
  404038:	push   rbp
  404039:	mov    rbp,rsp
  40403c:	sub    rsp,0x10
  404040:	mov    QWORD PTR [rbp-0x8],rdi
  404044:	mov    eax,esi
  404046:	mov    WORD PTR [rbp-0xc],ax
  40404a:	movsx  eax,WORD PTR [rbp-0xc]
  40404e:	mov    edi,eax
  404050:	call   403254 <_start@@Base+0x144>
  404055:	mov    edx,eax
  404057:	mov    rax,QWORD PTR [rbp-0x8]
  40405b:	mov    WORD PTR [rax],dx
  40405e:	mov    rax,QWORD PTR [rbp-0x8]
  404062:	leave  
  404063:	ret    
  404064:	push   rbp
  404065:	mov    rbp,rsp
  404068:	sub    rsp,0x18
  40406c:	mov    QWORD PTR [rbp-0x8],rdi
  404070:	mov    QWORD PTR [rbp-0x10],rsi
  404074:	mov    rax,QWORD PTR [rbp-0x10]
  404078:	mov    eax,DWORD PTR [rax]
  40407a:	mov    DWORD PTR [rbp-0x14],eax
  40407d:	vmovss xmm0,DWORD PTR [rbp-0x14]
  404082:	call   403281 <_start@@Base+0x171>
  404087:	vmovd  edx,xmm0
  40408b:	mov    rax,QWORD PTR [rbp-0x8]
  40408f:	mov    DWORD PTR [rax],edx
  404091:	mov    rax,QWORD PTR [rbp-0x8]
  404095:	leave  
  404096:	ret    
  404097:	push   rbp
  404098:	mov    rbp,rsp
  40409b:	sub    rsp,0x18
  40409f:	mov    QWORD PTR [rbp-0x8],rdi
  4040a3:	mov    QWORD PTR [rbp-0x10],rsi
  4040a7:	mov    rax,QWORD PTR [rbp-0x10]
  4040ab:	mov    eax,DWORD PTR [rax]
  4040ad:	mov    DWORD PTR [rbp-0x14],eax
  4040b0:	vmovss xmm0,DWORD PTR [rbp-0x14]
  4040b5:	call   4032a1 <_start@@Base+0x191>
  4040ba:	vmovd  edx,xmm0
  4040be:	mov    rax,QWORD PTR [rbp-0x8]
  4040c2:	mov    DWORD PTR [rax],edx
  4040c4:	mov    rax,QWORD PTR [rbp-0x8]
  4040c8:	leave  
  4040c9:	ret    
  4040ca:	push   rbp
  4040cb:	mov    rbp,rsp
  4040ce:	sub    rsp,0x10
  4040d2:	mov    QWORD PTR [rbp-0x8],rdi
  4040d6:	vmovss DWORD PTR [rbp-0xc],xmm0
  4040db:	mov    eax,DWORD PTR [rbp-0xc]
  4040de:	mov    DWORD PTR [rbp-0x10],eax
  4040e1:	vmovss xmm0,DWORD PTR [rbp-0x10]
  4040e6:	call   4032a1 <_start@@Base+0x191>
  4040eb:	vmovd  edx,xmm0
  4040ef:	mov    rax,QWORD PTR [rbp-0x8]
  4040f3:	mov    DWORD PTR [rax],edx
  4040f5:	mov    rax,QWORD PTR [rbp-0x8]
  4040f9:	leave  
  4040fa:	ret    
  4040fb:	push   rbp
  4040fc:	mov    rbp,rsp
  4040ff:	sub    rsp,0x10
  404103:	mov    QWORD PTR [rbp-0x8],rdi
  404107:	mov    QWORD PTR [rbp-0x10],rsi
  40410b:	mov    rdx,QWORD PTR [rbp-0x10]
  40410f:	mov    rax,QWORD PTR [rbp-0x8]
  404113:	mov    rsi,rdx
  404116:	mov    rdi,rax
  404119:	call   40a55c <flatcc_builder_create_string_str@@Base>
  40411e:	leave  
  40411f:	ret    
  404120:	push   rbp
  404121:	mov    rbp,rsp
  404124:	sub    rsp,0x10
  404128:	mov    QWORD PTR [rbp-0x8],rdi
  40412c:	mov    QWORD PTR [rbp-0x10],rsi
  404130:	mov    rsi,QWORD PTR [rbp-0x10]
  404134:	mov    rax,QWORD PTR [rbp-0x8]
  404138:	mov    ecx,0x0
  40413d:	mov    edx,0x0
  404142:	mov    rdi,rax
  404145:	call   4077e2 <flatcc_builder_start_buffer@@Base>
  40414a:	leave  
  40414b:	ret    
  40414c:	push   rbp
  40414d:	mov    rbp,rsp
  404150:	sub    rsp,0x10
  404154:	mov    QWORD PTR [rbp-0x8],rdi
  404158:	mov    DWORD PTR [rbp-0xc],esi
  40415b:	mov    edx,DWORD PTR [rbp-0xc]
  40415e:	mov    rax,QWORD PTR [rbp-0x8]
  404162:	mov    esi,edx
  404164:	mov    rdi,rax
  404167:	call   40792b <flatcc_builder_end_buffer@@Base>
  40416c:	leave  
  40416d:	ret    
  40416e:	push   rbp
  40416f:	mov    rbp,rsp
  404172:	sub    rsp,0x10
  404176:	mov    QWORD PTR [rbp-0x8],rdi
  40417a:	mov    eax,esi
  40417c:	mov    BYTE PTR [rbp-0xc],al
  40417f:	movsx  eax,BYTE PTR [rbp-0xc]
  404183:	mov    edi,eax
  404185:	call   403529 <_start@@Base+0x419>
  40418a:	mov    edx,eax
  40418c:	mov    rax,QWORD PTR [rbp-0x8]
  404190:	mov    BYTE PTR [rax],dl
  404192:	mov    rax,QWORD PTR [rbp-0x8]
  404196:	leave  
  404197:	ret    
  404198:	push   rbp
  404199:	mov    rbp,rsp
  40419c:	sub    rsp,0x18
  4041a0:	mov    QWORD PTR [rbp-0x8],rdi
  4041a4:	vmovss DWORD PTR [rbp-0xc],xmm0
  4041a9:	vmovss DWORD PTR [rbp-0x10],xmm1
  4041ae:	vmovss DWORD PTR [rbp-0x14],xmm2
  4041b3:	mov    rax,QWORD PTR [rbp-0x8]
  4041b7:	mov    edx,DWORD PTR [rbp-0xc]
  4041ba:	mov    DWORD PTR [rbp-0x18],edx
  4041bd:	vmovss xmm0,DWORD PTR [rbp-0x18]
  4041c2:	mov    rdi,rax
  4041c5:	call   4040ca <_start@@Base+0xfba>
  4041ca:	mov    rax,QWORD PTR [rbp-0x8]
  4041ce:	lea    rdx,[rax+0x4]
  4041d2:	mov    eax,DWORD PTR [rbp-0x10]
  4041d5:	mov    DWORD PTR [rbp-0x18],eax
  4041d8:	vmovss xmm0,DWORD PTR [rbp-0x18]
  4041dd:	mov    rdi,rdx
  4041e0:	call   4040ca <_start@@Base+0xfba>
  4041e5:	mov    rax,QWORD PTR [rbp-0x8]
  4041e9:	lea    rdx,[rax+0x8]
  4041ed:	mov    eax,DWORD PTR [rbp-0x14]
  4041f0:	mov    DWORD PTR [rbp-0x18],eax
  4041f3:	vmovss xmm0,DWORD PTR [rbp-0x18]
  4041f8:	mov    rdi,rdx
  4041fb:	call   4040ca <_start@@Base+0xfba>
  404200:	mov    rax,QWORD PTR [rbp-0x8]
  404204:	leave  
  404205:	ret    
  404206:	push   rbp
  404207:	mov    rbp,rsp
  40420a:	sub    rsp,0x10
  40420e:	mov    QWORD PTR [rbp-0x8],rdi
  404212:	mov    QWORD PTR [rbp-0x10],rsi
  404216:	mov    rdx,QWORD PTR [rbp-0x10]
  40421a:	mov    rax,QWORD PTR [rbp-0x8]
  40421e:	mov    rsi,rdx
  404221:	mov    rdi,rax
  404224:	call   404097 <_start@@Base+0xf87>
  404229:	mov    rax,QWORD PTR [rbp-0x10]
  40422d:	lea    rdx,[rax+0x4]
  404231:	mov    rax,QWORD PTR [rbp-0x8]
  404235:	add    rax,0x4
  404239:	mov    rsi,rdx
  40423c:	mov    rdi,rax
  40423f:	call   404097 <_start@@Base+0xf87>
  404244:	mov    rax,QWORD PTR [rbp-0x10]
  404248:	lea    rdx,[rax+0x8]
  40424c:	mov    rax,QWORD PTR [rbp-0x8]
  404250:	add    rax,0x8
  404254:	mov    rsi,rdx
  404257:	mov    rdi,rax
  40425a:	call   404097 <_start@@Base+0xf87>
  40425f:	mov    rax,QWORD PTR [rbp-0x8]
  404263:	leave  
  404264:	ret    
  404265:	push   rbp
  404266:	mov    rbp,rsp
  404269:	sub    rsp,0x10
  40426d:	mov    QWORD PTR [rbp-0x8],rdi
  404271:	mov    QWORD PTR [rbp-0x10],rsi
  404275:	mov    rdx,QWORD PTR [rbp-0x10]
  404279:	mov    rax,QWORD PTR [rbp-0x8]
  40427d:	mov    rsi,rdx
  404280:	mov    rdi,rax
  404283:	call   404064 <_start@@Base+0xf54>
  404288:	mov    rax,QWORD PTR [rbp-0x10]
  40428c:	lea    rdx,[rax+0x4]
  404290:	mov    rax,QWORD PTR [rbp-0x8]
  404294:	add    rax,0x4
  404298:	mov    rsi,rdx
  40429b:	mov    rdi,rax
  40429e:	call   404064 <_start@@Base+0xf54>
  4042a3:	mov    rax,QWORD PTR [rbp-0x10]
  4042a7:	lea    rdx,[rax+0x8]
  4042ab:	mov    rax,QWORD PTR [rbp-0x8]
  4042af:	add    rax,0x8
  4042b3:	mov    rsi,rdx
  4042b6:	mov    rdi,rax
  4042b9:	call   404064 <_start@@Base+0xf54>
  4042be:	mov    rax,QWORD PTR [rbp-0x8]
  4042c2:	leave  
  4042c3:	ret    
  4042c4:	push   rbp
  4042c5:	mov    rbp,rsp
  4042c8:	sub    rsp,0x10
  4042cc:	mov    QWORD PTR [rbp-0x8],rdi
  4042d0:	mov    rax,QWORD PTR [rbp-0x8]
  4042d4:	mov    esi,0xa
  4042d9:	mov    rdi,rax
  4042dc:	call   408547 <flatcc_builder_start_table@@Base>
  4042e1:	leave  
  4042e2:	ret    
  4042e3:	push   rbp
  4042e4:	mov    rbp,rsp
  4042e7:	sub    rsp,0x10
  4042eb:	mov    QWORD PTR [rbp-0x8],rdi
  4042ef:	mov    rax,QWORD PTR [rbp-0x8]
  4042f3:	mov    edx,0x0
  4042f8:	lea    rsi,[rip+0x7e7f]        # 40c17e <_IO_stdin_used@@Base+0x17e>
  4042ff:	mov    rdi,rax
  404302:	call   408f9e <flatcc_builder_check_required@@Base>
  404307:	test   eax,eax
  404309:	jne    40432a <_start@@Base+0x121a>
  40430b:	lea    rcx,[rip+0x80fe]        # 40c410 <_IO_stdin_used@@Base+0x410>
  404312:	mov    edx,0x32
  404317:	lea    rsi,[rip+0x7e62]        # 40c180 <_IO_stdin_used@@Base+0x180>
  40431e:	lea    rdi,[rip+0x7ed3]        # 40c1f8 <_IO_stdin_used@@Base+0x1f8>
  404325:	call   403080 <__assert_fail@plt>
  40432a:	mov    rax,QWORD PTR [rbp-0x8]
  40432e:	mov    rdi,rax
  404331:	call   409049 <flatcc_builder_end_table@@Base>
  404336:	leave  
  404337:	ret    
  404338:	push   rbp
  404339:	mov    rbp,rsp
  40433c:	sub    rsp,0x10
  404340:	mov    QWORD PTR [rbp-0x8],rdi
  404344:	mov    rax,QWORD PTR [rbp-0x8]
  404348:	mov    esi,0x2
  40434d:	mov    rdi,rax
  404350:	call   408547 <flatcc_builder_start_table@@Base>
  404355:	leave  
  404356:	ret    
  404357:	push   rbp
  404358:	mov    rbp,rsp
  40435b:	sub    rsp,0x10
  40435f:	mov    QWORD PTR [rbp-0x8],rdi
  404363:	mov    rax,QWORD PTR [rbp-0x8]
  404367:	mov    edx,0x0
  40436c:	lea    rsi,[rip+0x7f25]        # 40c298 <_IO_stdin_used@@Base+0x298>
  404373:	mov    rdi,rax
  404376:	call   408f9e <flatcc_builder_check_required@@Base>
  40437b:	test   eax,eax
  40437d:	jne    40439e <_start@@Base+0x128e>
  40437f:	lea    rcx,[rip+0x806a]        # 40c3f0 <_IO_stdin_used@@Base+0x3f0>
  404386:	mov    edx,0x34
  40438b:	lea    rsi,[rip+0x7dee]        # 40c180 <_IO_stdin_used@@Base+0x180>
  404392:	lea    rdi,[rip+0x7f07]        # 40c2a0 <_IO_stdin_used@@Base+0x2a0>
  404399:	call   403080 <__assert_fail@plt>
  40439e:	mov    rax,QWORD PTR [rbp-0x8]
  4043a2:	mov    rdi,rax
  4043a5:	call   409049 <flatcc_builder_end_table@@Base>
  4043aa:	leave  
  4043ab:	ret    
  4043ac:	push   rbp
  4043ad:	mov    rbp,rsp
  4043b0:	sub    rsp,0x10
  4043b4:	mov    QWORD PTR [rbp-0x8],rdi
  4043b8:	mov    rax,QWORD PTR [rbp-0x8]
  4043bc:	mov    rdi,rax
  4043bf:	call   4083ab <flatcc_builder_start_offset_vector@@Base>
  4043c4:	leave  
  4043c5:	ret    
  4043c6:	push   rbp
  4043c7:	mov    rbp,rsp
  4043ca:	sub    rsp,0x10
  4043ce:	mov    QWORD PTR [rbp-0x8],rdi
  4043d2:	mov    rax,QWORD PTR [rbp-0x8]
  4043d6:	mov    rdi,rax
  4043d9:	call   40999d <flatcc_builder_end_offset_vector@@Base>
  4043de:	leave  
  4043df:	ret    
  4043e0:	push   rbp
  4043e1:	mov    rbp,rsp
  4043e4:	sub    rsp,0x10
  4043e8:	mov    QWORD PTR [rbp-0x8],rdi
  4043ec:	mov    DWORD PTR [rbp-0xc],esi
  4043ef:	cmp    DWORD PTR [rbp-0xc],0x0
  4043f3:	je     404408 <_start@@Base+0x12f8>
  4043f5:	mov    edx,DWORD PTR [rbp-0xc]
  4043f8:	mov    rax,QWORD PTR [rbp-0x8]
  4043fc:	mov    esi,edx
  4043fe:	mov    rdi,rax
  404401:	call   407e0a <flatcc_builder_offset_vector_push@@Base>
  404406:	jmp    40440d <_start@@Base+0x12fd>
  404408:	mov    eax,0x0
  40440d:	leave  
  40440e:	ret    
  40440f:	push   rbp
  404410:	mov    rbp,rsp
  404413:	mov    DWORD PTR [rbp-0x14],edi
  404416:	mov    BYTE PTR [rbp-0x8],0x1
  40441a:	mov    eax,DWORD PTR [rbp-0x14]
  40441d:	mov    DWORD PTR [rbp-0x4],eax
  404420:	mov    rax,QWORD PTR [rbp-0x8]
  404424:	pop    rbp
  404425:	ret    
  404426:	push   rbp
  404427:	mov    rbp,rsp
  40442a:	sub    rsp,0x10
  40442e:	mov    QWORD PTR [rbp-0x8],rdi
  404432:	mov    rax,QWORD PTR [rbp-0x8]
  404436:	mov    ecx,0x4
  40443b:	mov    edx,0xc
  404440:	mov    esi,0x0
  404445:	mov    rdi,rax
  404448:	call   40a6ab <flatcc_builder_table_add@@Base>
  40444d:	leave  
  40444e:	ret    
  40444f:	push   rbp
  404450:	mov    rbp,rsp
  404453:	sub    rsp,0x30
  404457:	mov    QWORD PTR [rbp-0x18],rdi
  40445b:	vmovss DWORD PTR [rbp-0x1c],xmm0
  404460:	vmovss DWORD PTR [rbp-0x20],xmm1
  404465:	vmovss DWORD PTR [rbp-0x24],xmm2
  40446a:	mov    rax,QWORD PTR [rbp-0x18]
  40446e:	mov    rdi,rax
  404471:	call   404426 <_start@@Base+0x1316>
  404476:	mov    QWORD PTR [rbp-0x8],rax
  40447a:	cmp    QWORD PTR [rbp-0x8],0x0
  40447f:	jne    404488 <_start@@Base+0x1378>
  404481:	mov    eax,0x0
  404486:	jmp    4044b6 <_start@@Base+0x13a6>
  404488:	vmovss xmm1,DWORD PTR [rbp-0x24]
  40448d:	vmovss xmm0,DWORD PTR [rbp-0x20]
  404492:	mov    edx,DWORD PTR [rbp-0x1c]
  404495:	mov    rax,QWORD PTR [rbp-0x8]
  404499:	vmovaps xmm2,xmm1
  40449d:	vmovaps xmm1,xmm0
  4044a1:	mov    DWORD PTR [rbp-0x28],edx
  4044a4:	vmovss xmm0,DWORD PTR [rbp-0x28]
  4044a9:	mov    rdi,rax
  4044ac:	call   404198 <_start@@Base+0x1088>
  4044b1:	mov    eax,0x0
  4044b6:	leave  
  4044b7:	ret    
  4044b8:	push   rbp
  4044b9:	mov    rbp,rsp
  4044bc:	sub    rsp,0x20
  4044c0:	mov    QWORD PTR [rbp-0x18],rdi
  4044c4:	mov    QWORD PTR [rbp-0x20],rsi
  4044c8:	mov    rax,QWORD PTR [rbp-0x18]
  4044cc:	mov    rdi,rax
  4044cf:	call   404426 <_start@@Base+0x1316>
  4044d4:	mov    QWORD PTR [rbp-0x8],rax
  4044d8:	cmp    QWORD PTR [rbp-0x8],0x0
  4044dd:	jne    4044e6 <_start@@Base+0x13d6>
  4044df:	mov    eax,0xffffffff
  4044e4:	jmp    4044fe <_start@@Base+0x13ee>
  4044e6:	mov    rdx,QWORD PTR [rbp-0x20]
  4044ea:	mov    rax,QWORD PTR [rbp-0x8]
  4044ee:	mov    rsi,rdx
  4044f1:	mov    rdi,rax
  4044f4:	call   404206 <_start@@Base+0x10f6>
  4044f9:	mov    eax,0x0
  4044fe:	leave  
  4044ff:	ret    
  404500:	push   rbp
  404501:	mov    rbp,rsp
  404504:	sub    rsp,0x20
  404508:	mov    QWORD PTR [rbp-0x18],rdi
  40450c:	mov    eax,esi
  40450e:	mov    WORD PTR [rbp-0x1c],ax
  404512:	cmp    WORD PTR [rbp-0x1c],0x96
  404518:	jne    404521 <_start@@Base+0x1411>
  40451a:	mov    eax,0x0
  40451f:	jmp    404565 <_start@@Base+0x1455>
  404521:	mov    rax,QWORD PTR [rbp-0x18]
  404525:	mov    ecx,0x2
  40452a:	mov    edx,0x2
  40452f:	mov    esi,0x1
  404534:	mov    rdi,rax
  404537:	call   40a6ab <flatcc_builder_table_add@@Base>
  40453c:	mov    QWORD PTR [rbp-0x8],rax
  404540:	cmp    QWORD PTR [rbp-0x8],0x0
  404545:	jne    40454e <_start@@Base+0x143e>
  404547:	mov    eax,0xffffffff
  40454c:	jmp    404565 <_start@@Base+0x1455>
  40454e:	movsx  edx,WORD PTR [rbp-0x1c]
  404552:	mov    rax,QWORD PTR [rbp-0x8]
  404556:	mov    esi,edx
  404558:	mov    rdi,rax
  40455b:	call   404038 <_start@@Base+0xf28>
  404560:	mov    eax,0x0
  404565:	leave  
  404566:	ret    
  404567:	push   rbp
  404568:	mov    rbp,rsp
  40456b:	sub    rsp,0x20
  40456f:	mov    QWORD PTR [rbp-0x18],rdi
  404573:	mov    eax,esi
  404575:	mov    WORD PTR [rbp-0x1c],ax
  404579:	cmp    WORD PTR [rbp-0x1c],0x64
  40457e:	jne    404587 <_start@@Base+0x1477>
  404580:	mov    eax,0x0
  404585:	jmp    4045cb <_start@@Base+0x14bb>
  404587:	mov    rax,QWORD PTR [rbp-0x18]
  40458b:	mov    ecx,0x2
  404590:	mov    edx,0x2
  404595:	mov    esi,0x2
  40459a:	mov    rdi,rax
  40459d:	call   40a6ab <flatcc_builder_table_add@@Base>
  4045a2:	mov    QWORD PTR [rbp-0x8],rax
  4045a6:	cmp    QWORD PTR [rbp-0x8],0x0
  4045ab:	jne    4045b4 <_start@@Base+0x14a4>
  4045ad:	mov    eax,0xffffffff
  4045b2:	jmp    4045cb <_start@@Base+0x14bb>
  4045b4:	movsx  edx,WORD PTR [rbp-0x1c]
  4045b8:	mov    rax,QWORD PTR [rbp-0x8]
  4045bc:	mov    esi,edx
  4045be:	mov    rdi,rax
  4045c1:	call   404038 <_start@@Base+0xf28>
  4045c6:	mov    eax,0x0
  4045cb:	leave  
  4045cc:	ret    
  4045cd:	push   rbp
  4045ce:	mov    rbp,rsp
  4045d1:	sub    rsp,0x20
  4045d5:	mov    QWORD PTR [rbp-0x18],rdi
  4045d9:	mov    DWORD PTR [rbp-0x1c],esi
  4045dc:	cmp    DWORD PTR [rbp-0x1c],0x0
  4045e0:	je     40460e <_start@@Base+0x14fe>
  4045e2:	mov    rax,QWORD PTR [rbp-0x18]
  4045e6:	mov    esi,0x3
  4045eb:	mov    rdi,rax
  4045ee:	call   40a879 <flatcc_builder_table_add_offset@@Base>
  4045f3:	mov    QWORD PTR [rbp-0x8],rax
  4045f7:	cmp    QWORD PTR [rbp-0x8],0x0
  4045fc:	je     40460e <_start@@Base+0x14fe>
  4045fe:	mov    rax,QWORD PTR [rbp-0x8]
  404602:	mov    edx,DWORD PTR [rbp-0x1c]
  404605:	mov    DWORD PTR [rax],edx
  404607:	mov    eax,0x0
  40460c:	jmp    404613 <_start@@Base+0x1503>
  40460e:	mov    eax,0xffffffff
  404613:	leave  
  404614:	ret    
  404615:	push   rbp
  404616:	mov    rbp,rsp
  404619:	sub    rsp,0x10
  40461d:	mov    QWORD PTR [rbp-0x8],rdi
  404621:	mov    QWORD PTR [rbp-0x10],rsi
  404625:	mov    rdx,QWORD PTR [rbp-0x10]
  404629:	mov    rax,QWORD PTR [rbp-0x8]
  40462d:	mov    rsi,rdx
  404630:	mov    rdi,rax
  404633:	call   40a55c <flatcc_builder_create_string_str@@Base>
  404638:	mov    edx,eax
  40463a:	mov    rax,QWORD PTR [rbp-0x8]
  40463e:	mov    esi,edx
  404640:	mov    rdi,rax
  404643:	call   4045cd <_start@@Base+0x14bd>
  404648:	leave  
  404649:	ret    
  40464a:	push   rbp
  40464b:	mov    rbp,rsp
  40464e:	sub    rsp,0x20
  404652:	mov    QWORD PTR [rbp-0x18],rdi
  404656:	mov    DWORD PTR [rbp-0x1c],esi
  404659:	cmp    DWORD PTR [rbp-0x1c],0x0
  40465d:	je     40468b <_start@@Base+0x157b>
  40465f:	mov    rax,QWORD PTR [rbp-0x18]
  404663:	mov    esi,0x5
  404668:	mov    rdi,rax
  40466b:	call   40a879 <flatcc_builder_table_add_offset@@Base>
  404670:	mov    QWORD PTR [rbp-0x8],rax
  404674:	cmp    QWORD PTR [rbp-0x8],0x0
  404679:	je     40468b <_start@@Base+0x157b>
  40467b:	mov    rax,QWORD PTR [rbp-0x8]
  40467f:	mov    edx,DWORD PTR [rbp-0x1c]
  404682:	mov    DWORD PTR [rax],edx
  404684:	mov    eax,0x0
  404689:	jmp    404690 <_start@@Base+0x1580>
  40468b:	mov    eax,0xffffffff
  404690:	leave  
  404691:	ret    
  404692:	push   rbp
  404693:	mov    rbp,rsp
  404696:	sub    rsp,0x20
  40469a:	mov    QWORD PTR [rbp-0x8],rdi
  40469e:	mov    QWORD PTR [rbp-0x10],rsi
  4046a2:	mov    QWORD PTR [rbp-0x18],rdx
  4046a6:	mov    rdx,QWORD PTR [rbp-0x18]
  4046aa:	mov    rcx,QWORD PTR [rbp-0x10]
  4046ae:	mov    rax,QWORD PTR [rbp-0x8]
  4046b2:	mov    rsi,rcx
  4046b5:	mov    rdi,rax
  4046b8:	call   403ffd <_start@@Base+0xeed>
  4046bd:	mov    edx,eax
  4046bf:	mov    rax,QWORD PTR [rbp-0x8]
  4046c3:	mov    esi,edx
  4046c5:	mov    rdi,rax
  4046c8:	call   40464a <_start@@Base+0x153a>
  4046cd:	leave  
  4046ce:	ret    
  4046cf:	push   rbp
  4046d0:	mov    rbp,rsp
  4046d3:	sub    rsp,0x20
  4046d7:	mov    QWORD PTR [rbp-0x18],rdi
  4046db:	mov    eax,esi
  4046dd:	mov    BYTE PTR [rbp-0x1c],al
  4046e0:	cmp    BYTE PTR [rbp-0x1c],0x2
  4046e4:	jne    4046ed <_start@@Base+0x15dd>
  4046e6:	mov    eax,0x0
  4046eb:	jmp    404731 <_start@@Base+0x1621>
  4046ed:	mov    rax,QWORD PTR [rbp-0x18]
  4046f1:	mov    ecx,0x1
  4046f6:	mov    edx,0x1
  4046fb:	mov    esi,0x6
  404700:	mov    rdi,rax
  404703:	call   40a6ab <flatcc_builder_table_add@@Base>
  404708:	mov    QWORD PTR [rbp-0x8],rax
  40470c:	cmp    QWORD PTR [rbp-0x8],0x0
  404711:	jne    40471a <_start@@Base+0x160a>
  404713:	mov    eax,0xffffffff
  404718:	jmp    404731 <_start@@Base+0x1621>
  40471a:	movsx  edx,BYTE PTR [rbp-0x1c]
  40471e:	mov    rax,QWORD PTR [rbp-0x8]
  404722:	mov    esi,edx
  404724:	mov    rdi,rax
  404727:	call   40416e <_start@@Base+0x105e>
  40472c:	mov    eax,0x0
  404731:	leave  
  404732:	ret    
  404733:	push   rbp
  404734:	mov    rbp,rsp
  404737:	sub    rsp,0x20
  40473b:	mov    QWORD PTR [rbp-0x18],rdi
  40473f:	mov    DWORD PTR [rbp-0x1c],esi
  404742:	cmp    DWORD PTR [rbp-0x1c],0x0
  404746:	je     404774 <_start@@Base+0x1664>
  404748:	mov    rax,QWORD PTR [rbp-0x18]
  40474c:	mov    esi,0x7
  404751:	mov    rdi,rax
  404754:	call   40a879 <flatcc_builder_table_add_offset@@Base>
  404759:	mov    QWORD PTR [rbp-0x8],rax
  40475d:	cmp    QWORD PTR [rbp-0x8],0x0
  404762:	je     404774 <_start@@Base+0x1664>
  404764:	mov    rax,QWORD PTR [rbp-0x8]
  404768:	mov    edx,DWORD PTR [rbp-0x1c]
  40476b:	mov    DWORD PTR [rax],edx
  40476d:	mov    eax,0x0
  404772:	jmp    404779 <_start@@Base+0x1669>
  404774:	mov    eax,0xffffffff
  404779:	leave  
  40477a:	ret    
  40477b:	push   rbp
  40477c:	mov    rbp,rsp
  40477f:	sub    rsp,0x10
  404783:	mov    QWORD PTR [rbp-0x8],rdi
  404787:	mov    rax,QWORD PTR [rbp-0x8]
  40478b:	mov    rdi,rax
  40478e:	call   4083ab <flatcc_builder_start_offset_vector@@Base>
  404793:	leave  
  404794:	ret    
  404795:	push   rbp
  404796:	mov    rbp,rsp
  404799:	sub    rsp,0x10
  40479d:	mov    QWORD PTR [rbp-0x8],rdi
  4047a1:	mov    rax,QWORD PTR [rbp-0x8]
  4047a5:	mov    rdi,rax
  4047a8:	call   40999d <flatcc_builder_end_offset_vector@@Base>
  4047ad:	mov    edx,eax
  4047af:	mov    rax,QWORD PTR [rbp-0x8]
  4047b3:	mov    esi,edx
  4047b5:	mov    rdi,rax
  4047b8:	call   404733 <_start@@Base+0x1623>
  4047bd:	leave  
  4047be:	ret    
  4047bf:	push   rbp
  4047c0:	mov    rbp,rsp
  4047c3:	sub    rsp,0x10
  4047c7:	mov    QWORD PTR [rbp-0x8],rdi
  4047cb:	mov    DWORD PTR [rbp-0xc],esi
  4047ce:	cmp    DWORD PTR [rbp-0xc],0x0
  4047d2:	je     4047e7 <_start@@Base+0x16d7>
  4047d4:	mov    edx,DWORD PTR [rbp-0xc]
  4047d7:	mov    rax,QWORD PTR [rbp-0x8]
  4047db:	mov    esi,edx
  4047dd:	mov    rdi,rax
  4047e0:	call   407e0a <flatcc_builder_offset_vector_push@@Base>
  4047e5:	jmp    4047ec <_start@@Base+0x16dc>
  4047e7:	mov    eax,0x0
  4047ec:	leave  
  4047ed:	ret    
  4047ee:	push   rbp
  4047ef:	mov    rbp,rsp
  4047f2:	sub    rsp,0x10
  4047f6:	mov    QWORD PTR [rbp-0x8],rdi
  4047fa:	mov    DWORD PTR [rbp-0xc],esi
  4047fd:	mov    eax,edx
  4047ff:	mov    WORD PTR [rbp-0x10],ax
  404803:	movsx  edx,WORD PTR [rbp-0x10]
  404807:	mov    ecx,DWORD PTR [rbp-0xc]
  40480a:	mov    rax,QWORD PTR [rbp-0x8]
  40480e:	mov    esi,ecx
  404810:	mov    rdi,rax
  404813:	call   404c5b <_start@@Base+0x1b4b>
  404818:	mov    edx,eax
  40481a:	mov    rax,QWORD PTR [rbp-0x8]
  40481e:	mov    esi,edx
  404820:	mov    rdi,rax
  404823:	call   4047bf <_start@@Base+0x16af>
  404828:	leave  
  404829:	ret    
  40482a:	push   rbp
  40482b:	mov    rbp,rsp
  40482e:	sub    rsp,0x20
  404832:	mov    QWORD PTR [rbp-0x18],rdi
  404836:	mov    QWORD PTR [rbp-0x20],rsi
  40483a:	movzx  eax,BYTE PTR [rbp-0x20]
  40483e:	test   al,al
  404840:	jne    404849 <_start@@Base+0x1739>
  404842:	mov    eax,0x0
  404847:	jmp    4048b8 <_start@@Base+0x17a8>
  404849:	mov    eax,DWORD PTR [rbp-0x1c]
  40484c:	test   eax,eax
  40484e:	jne    404857 <_start@@Base+0x1747>
  404850:	mov    eax,0xffffffff
  404855:	jmp    4048b8 <_start@@Base+0x17a8>
  404857:	mov    rax,QWORD PTR [rbp-0x18]
  40485b:	mov    ecx,0x1
  404860:	mov    edx,0x1
  404865:	mov    esi,0x8
  40486a:	mov    rdi,rax
  40486d:	call   40a6ab <flatcc_builder_table_add@@Base>
  404872:	mov    QWORD PTR [rbp-0x10],rax
  404876:	cmp    QWORD PTR [rbp-0x10],0x0
  40487b:	je     404899 <_start@@Base+0x1789>
  40487d:	mov    rax,QWORD PTR [rbp-0x18]
  404881:	mov    esi,0x9
  404886:	mov    rdi,rax
  404889:	call   40a879 <flatcc_builder_table_add_offset@@Base>
  40488e:	mov    QWORD PTR [rbp-0x8],rax
  404892:	cmp    QWORD PTR [rbp-0x8],0x0
  404897:	jne    4048a0 <_start@@Base+0x1790>
  404899:	mov    eax,0xffffffff
  40489e:	jmp    4048b8 <_start@@Base+0x17a8>
  4048a0:	movzx  edx,BYTE PTR [rbp-0x20]
  4048a4:	mov    rax,QWORD PTR [rbp-0x10]
  4048a8:	mov    BYTE PTR [rax],dl
  4048aa:	mov    edx,DWORD PTR [rbp-0x1c]
  4048ad:	mov    rax,QWORD PTR [rbp-0x8]
  4048b1:	mov    DWORD PTR [rax],edx
  4048b3:	mov    eax,0x0
  4048b8:	leave  
  4048b9:	ret    
  4048ba:	push   rbp
  4048bb:	mov    rbp,rsp
  4048be:	sub    rsp,0x20
  4048c2:	mov    QWORD PTR [rbp-0x18],rdi
  4048c6:	mov    eax,esi
  4048c8:	mov    BYTE PTR [rbp-0x1c],al
  4048cb:	cmp    BYTE PTR [rbp-0x1c],0x0
  4048cf:	jne    4048d8 <_start@@Base+0x17c8>
  4048d1:	mov    eax,0x0
  4048d6:	jmp    404914 <_start@@Base+0x1804>
  4048d8:	mov    rax,QWORD PTR [rbp-0x18]
  4048dc:	mov    ecx,0x1
  4048e1:	mov    edx,0x1
  4048e6:	mov    esi,0x8
  4048eb:	mov    rdi,rax
  4048ee:	call   40a6ab <flatcc_builder_table_add@@Base>
  4048f3:	mov    QWORD PTR [rbp-0x8],rax
  4048f7:	cmp    QWORD PTR [rbp-0x8],0x0
  4048fc:	je     40490f <_start@@Base+0x17ff>
  4048fe:	mov    rax,QWORD PTR [rbp-0x8]
  404902:	movzx  edx,BYTE PTR [rbp-0x1c]
  404906:	mov    BYTE PTR [rax],dl
  404908:	mov    eax,0x0
  40490d:	jmp    404914 <_start@@Base+0x1804>
  40490f:	mov    eax,0xffffffff
  404914:	leave  
  404915:	ret    
  404916:	push   rbp
  404917:	mov    rbp,rsp
  40491a:	sub    rsp,0x20
  40491e:	mov    QWORD PTR [rbp-0x18],rdi
  404922:	mov    QWORD PTR [rbp-0x20],rsi
  404926:	movzx  eax,BYTE PTR [rbp-0x20]
  40492a:	test   al,al
  40492c:	jne    404935 <_start@@Base+0x1825>
  40492e:	mov    eax,0x0
  404933:	jmp    404966 <_start@@Base+0x1856>
  404935:	mov    rax,QWORD PTR [rbp-0x18]
  404939:	mov    esi,0x9
  40493e:	mov    rdi,rax
  404941:	call   40a879 <flatcc_builder_table_add_offset@@Base>
  404946:	mov    QWORD PTR [rbp-0x8],rax
  40494a:	cmp    QWORD PTR [rbp-0x8],0x0
  40494f:	je     404961 <_start@@Base+0x1851>
  404951:	mov    edx,DWORD PTR [rbp-0x1c]
  404954:	mov    rax,QWORD PTR [rbp-0x8]
  404958:	mov    DWORD PTR [rax],edx
  40495a:	mov    eax,0x0
  40495f:	jmp    404966 <_start@@Base+0x1856>
  404961:	mov    eax,0xffffffff
  404966:	leave  
  404967:	ret    
  404968:	push   rbp
  404969:	mov    rbp,rsp
  40496c:	sub    rsp,0x10
  404970:	mov    QWORD PTR [rbp-0x8],rdi
  404974:	mov    DWORD PTR [rbp-0xc],esi
  404977:	mov    eax,DWORD PTR [rbp-0xc]
  40497a:	mov    edi,eax
  40497c:	call   40440f <_start@@Base+0x12ff>
  404981:	mov    rdx,rax
  404984:	mov    rax,QWORD PTR [rbp-0x8]
  404988:	mov    rsi,rdx
  40498b:	mov    rdi,rax
  40498e:	call   40482a <_start@@Base+0x171a>
  404993:	leave  
  404994:	ret    
  404995:	push   rbp
  404996:	mov    rbp,rsp
  404999:	sub    rsp,0x30
  40499d:	mov    QWORD PTR [rbp-0x8],rdi
  4049a1:	mov    QWORD PTR [rbp-0x10],rsi
  4049a5:	mov    esi,edx
  4049a7:	mov    edx,ecx
  4049a9:	mov    DWORD PTR [rbp-0x1c],r8d
  4049ad:	mov    DWORD PTR [rbp-0x20],r9d
  4049b1:	mov    eax,DWORD PTR [rbp+0x10]
  4049b4:	mov    WORD PTR [rbp-0x14],si
  4049b8:	mov    WORD PTR [rbp-0x18],dx
  4049bc:	mov    BYTE PTR [rbp-0x24],al
  4049bf:	mov    rax,QWORD PTR [rbp-0x8]
  4049c3:	mov    rdi,rax
  4049c6:	call   4042c4 <_start@@Base+0x11b4>
  4049cb:	test   eax,eax
  4049cd:	jne    404aa7 <_start@@Base+0x1997>
  4049d3:	mov    rdx,QWORD PTR [rbp-0x10]
  4049d7:	mov    rax,QWORD PTR [rbp-0x8]
  4049db:	mov    rsi,rdx
  4049de:	mov    rdi,rax
  4049e1:	call   4044b8 <_start@@Base+0x13a8>
  4049e6:	test   eax,eax
  4049e8:	jne    404aa7 <_start@@Base+0x1997>
  4049ee:	mov    edx,DWORD PTR [rbp-0x1c]
  4049f1:	mov    rax,QWORD PTR [rbp-0x8]
  4049f5:	mov    esi,edx
  4049f7:	mov    rdi,rax
  4049fa:	call   4045cd <_start@@Base+0x14bd>
  4049ff:	test   eax,eax
  404a01:	jne    404aa7 <_start@@Base+0x1997>
  404a07:	mov    edx,DWORD PTR [rbp-0x20]
  404a0a:	mov    rax,QWORD PTR [rbp-0x8]
  404a0e:	mov    esi,edx
  404a10:	mov    rdi,rax
  404a13:	call   40464a <_start@@Base+0x153a>
  404a18:	test   eax,eax
  404a1a:	jne    404aa7 <_start@@Base+0x1997>
  404a20:	mov    edx,DWORD PTR [rbp+0x18]
  404a23:	mov    rax,QWORD PTR [rbp-0x8]
  404a27:	mov    esi,edx
  404a29:	mov    rdi,rax
  404a2c:	call   404733 <_start@@Base+0x1623>
  404a31:	test   eax,eax
  404a33:	jne    404aa7 <_start@@Base+0x1997>
  404a35:	mov    rdx,QWORD PTR [rbp+0x20]
  404a39:	mov    rax,QWORD PTR [rbp-0x8]
  404a3d:	mov    rsi,rdx
  404a40:	mov    rdi,rax
  404a43:	call   404916 <_start@@Base+0x1806>
  404a48:	test   eax,eax
  404a4a:	jne    404aa7 <_start@@Base+0x1997>
  404a4c:	movsx  edx,WORD PTR [rbp-0x14]
  404a50:	mov    rax,QWORD PTR [rbp-0x8]
  404a54:	mov    esi,edx
  404a56:	mov    rdi,rax
  404a59:	call   404500 <_start@@Base+0x13f0>
  404a5e:	test   eax,eax
  404a60:	jne    404aa7 <_start@@Base+0x1997>
  404a62:	movsx  edx,WORD PTR [rbp-0x18]
  404a66:	mov    rax,QWORD PTR [rbp-0x8]
  404a6a:	mov    esi,edx
  404a6c:	mov    rdi,rax
  404a6f:	call   404567 <_start@@Base+0x1457>
  404a74:	test   eax,eax
  404a76:	jne    404aa7 <_start@@Base+0x1997>
  404a78:	movsx  edx,BYTE PTR [rbp-0x24]
  404a7c:	mov    rax,QWORD PTR [rbp-0x8]
  404a80:	mov    esi,edx
  404a82:	mov    rdi,rax
  404a85:	call   4046cf <_start@@Base+0x15bf>
  404a8a:	test   eax,eax
  404a8c:	jne    404aa7 <_start@@Base+0x1997>
  404a8e:	movzx  eax,BYTE PTR [rbp+0x20]
  404a92:	movzx  edx,al
  404a95:	mov    rax,QWORD PTR [rbp-0x8]
  404a99:	mov    esi,edx
  404a9b:	mov    rdi,rax
  404a9e:	call   4048ba <_start@@Base+0x17aa>
  404aa3:	test   eax,eax
  404aa5:	je     404aae <_start@@Base+0x199e>
  404aa7:	mov    eax,0x0
  404aac:	jmp    404aba <_start@@Base+0x19aa>
  404aae:	mov    rax,QWORD PTR [rbp-0x8]
  404ab2:	mov    rdi,rax
  404ab5:	call   4042e3 <_start@@Base+0x11d3>
  404aba:	leave  
  404abb:	ret    
  404abc:	push   rbp
  404abd:	mov    rbp,rsp
  404ac0:	sub    rsp,0x10
  404ac4:	mov    QWORD PTR [rbp-0x8],rdi
  404ac8:	mov    rax,QWORD PTR [rbp-0x8]
  404acc:	mov    esi,0x0
  404ad1:	mov    rdi,rax
  404ad4:	call   404120 <_start@@Base+0x1010>
  404ad9:	test   eax,eax
  404adb:	jne    404aeb <_start@@Base+0x19db>
  404add:	mov    rax,QWORD PTR [rbp-0x8]
  404ae1:	mov    rdi,rax
  404ae4:	call   4042c4 <_start@@Base+0x11b4>
  404ae9:	jmp    404af0 <_start@@Base+0x19e0>
  404aeb:	mov    eax,0xffffffff
  404af0:	leave  
  404af1:	ret    
  404af2:	push   rbp
  404af3:	mov    rbp,rsp
  404af6:	sub    rsp,0x10
  404afa:	mov    QWORD PTR [rbp-0x8],rdi
  404afe:	mov    rax,QWORD PTR [rbp-0x8]
  404b02:	mov    rdi,rax
  404b05:	call   4042e3 <_start@@Base+0x11d3>
  404b0a:	mov    edx,eax
  404b0c:	mov    rax,QWORD PTR [rbp-0x8]
  404b10:	mov    esi,edx
  404b12:	mov    rdi,rax
  404b15:	call   40414c <_start@@Base+0x103c>
  404b1a:	leave  
  404b1b:	ret    
  404b1c:	push   rbp
  404b1d:	mov    rbp,rsp
  404b20:	sub    rsp,0x30
  404b24:	mov    QWORD PTR [rbp-0x8],rdi
  404b28:	mov    QWORD PTR [rbp-0x10],rsi
  404b2c:	mov    esi,edx
  404b2e:	mov    edx,ecx
  404b30:	mov    DWORD PTR [rbp-0x1c],r8d
  404b34:	mov    DWORD PTR [rbp-0x20],r9d
  404b38:	mov    eax,DWORD PTR [rbp+0x10]
  404b3b:	mov    WORD PTR [rbp-0x14],si
  404b3f:	mov    WORD PTR [rbp-0x18],dx
  404b43:	mov    BYTE PTR [rbp-0x24],al
  404b46:	mov    rax,QWORD PTR [rbp-0x8]
  404b4a:	mov    esi,0x0
  404b4f:	mov    rdi,rax
  404b52:	call   404120 <_start@@Base+0x1010>
  404b57:	test   eax,eax
  404b59:	je     404b62 <_start@@Base+0x1a52>
  404b5b:	mov    eax,0x0
  404b60:	jmp    404bab <_start@@Base+0x1a9b>
  404b62:	movsx  edi,BYTE PTR [rbp-0x24]
  404b66:	movsx  ecx,WORD PTR [rbp-0x18]
  404b6a:	movsx  edx,WORD PTR [rbp-0x14]
  404b6e:	mov    r9d,DWORD PTR [rbp-0x20]
  404b72:	mov    r10d,DWORD PTR [rbp-0x1c]
  404b76:	mov    rsi,QWORD PTR [rbp-0x10]
  404b7a:	mov    rax,QWORD PTR [rbp-0x8]
  404b7e:	sub    rsp,0x8
  404b82:	push   QWORD PTR [rbp+0x20]
  404b85:	mov    r8d,DWORD PTR [rbp+0x18]
  404b89:	push   r8
  404b8b:	push   rdi
  404b8c:	mov    r8d,r10d
  404b8f:	mov    rdi,rax
  404b92:	call   404995 <_start@@Base+0x1885>
  404b97:	add    rsp,0x20
  404b9b:	mov    edx,eax
  404b9d:	mov    rax,QWORD PTR [rbp-0x8]
  404ba1:	mov    esi,edx
  404ba3:	mov    rdi,rax
  404ba6:	call   40414c <_start@@Base+0x103c>
  404bab:	leave  
  404bac:	ret    
  404bad:	push   rbp
  404bae:	mov    rbp,rsp
  404bb1:	sub    rsp,0x20
  404bb5:	mov    QWORD PTR [rbp-0x18],rdi
  404bb9:	mov    DWORD PTR [rbp-0x1c],esi
  404bbc:	cmp    DWORD PTR [rbp-0x1c],0x0
  404bc0:	je     404bee <_start@@Base+0x1ade>
  404bc2:	mov    rax,QWORD PTR [rbp-0x18]
  404bc6:	mov    esi,0x0
  404bcb:	mov    rdi,rax
  404bce:	call   40a879 <flatcc_builder_table_add_offset@@Base>
  404bd3:	mov    QWORD PTR [rbp-0x8],rax
  404bd7:	cmp    QWORD PTR [rbp-0x8],0x0
  404bdc:	je     404bee <_start@@Base+0x1ade>
  404bde:	mov    rax,QWORD PTR [rbp-0x8]
  404be2:	mov    edx,DWORD PTR [rbp-0x1c]
  404be5:	mov    DWORD PTR [rax],edx
  404be7:	mov    eax,0x0
  404bec:	jmp    404bf3 <_start@@Base+0x1ae3>
  404bee:	mov    eax,0xffffffff
  404bf3:	leave  
  404bf4:	ret    
  404bf5:	push   rbp
  404bf6:	mov    rbp,rsp
  404bf9:	sub    rsp,0x20
  404bfd:	mov    QWORD PTR [rbp-0x18],rdi
  404c01:	mov    eax,esi
  404c03:	mov    WORD PTR [rbp-0x1c],ax
  404c07:	cmp    WORD PTR [rbp-0x1c],0x0
  404c0c:	jne    404c15 <_start@@Base+0x1b05>
  404c0e:	mov    eax,0x0
  404c13:	jmp    404c59 <_start@@Base+0x1b49>
  404c15:	mov    rax,QWORD PTR [rbp-0x18]
  404c19:	mov    ecx,0x2
  404c1e:	mov    edx,0x2
  404c23:	mov    esi,0x1
  404c28:	mov    rdi,rax
  404c2b:	call   40a6ab <flatcc_builder_table_add@@Base>
  404c30:	mov    QWORD PTR [rbp-0x8],rax
  404c34:	cmp    QWORD PTR [rbp-0x8],0x0
  404c39:	jne    404c42 <_start@@Base+0x1b32>
  404c3b:	mov    eax,0xffffffff
  404c40:	jmp    404c59 <_start@@Base+0x1b49>
  404c42:	movsx  edx,WORD PTR [rbp-0x1c]
  404c46:	mov    rax,QWORD PTR [rbp-0x8]
  404c4a:	mov    esi,edx
  404c4c:	mov    rdi,rax
  404c4f:	call   404038 <_start@@Base+0xf28>
  404c54:	mov    eax,0x0
  404c59:	leave  
  404c5a:	ret    
  404c5b:	push   rbp
  404c5c:	mov    rbp,rsp
  404c5f:	sub    rsp,0x10
  404c63:	mov    QWORD PTR [rbp-0x8],rdi
  404c67:	mov    DWORD PTR [rbp-0xc],esi
  404c6a:	mov    eax,edx
  404c6c:	mov    WORD PTR [rbp-0x10],ax
  404c70:	mov    rax,QWORD PTR [rbp-0x8]
  404c74:	mov    rdi,rax
  404c77:	call   404338 <_start@@Base+0x1228>
  404c7c:	test   eax,eax
  404c7e:	jne    404cab <_start@@Base+0x1b9b>
  404c80:	mov    edx,DWORD PTR [rbp-0xc]
  404c83:	mov    rax,QWORD PTR [rbp-0x8]
  404c87:	mov    esi,edx
  404c89:	mov    rdi,rax
  404c8c:	call   404bad <_start@@Base+0x1a9d>
  404c91:	test   eax,eax
  404c93:	jne    404cab <_start@@Base+0x1b9b>
  404c95:	movsx  edx,WORD PTR [rbp-0x10]
  404c99:	mov    rax,QWORD PTR [rbp-0x8]
  404c9d:	mov    esi,edx
  404c9f:	mov    rdi,rax
  404ca2:	call   404bf5 <_start@@Base+0x1ae5>
  404ca7:	test   eax,eax
  404ca9:	je     404cb2 <_start@@Base+0x1ba2>
  404cab:	mov    eax,0x0
  404cb0:	jmp    404cbe <_start@@Base+0x1bae>
  404cb2:	mov    rax,QWORD PTR [rbp-0x8]
  404cb6:	mov    rdi,rax
  404cb9:	call   404357 <_start@@Base+0x1247>
  404cbe:	leave  
  404cbf:	ret    

0000000000404cc0 <create_monster_bottom_up@@Base>:
  404cc0:	push   rbp
  404cc1:	mov    rbp,rsp
  404cc4:	sub    rsp,0x60
  404cc8:	mov    QWORD PTR [rbp-0x58],rdi
  404ccc:	mov    DWORD PTR [rbp-0x5c],esi
  404ccf:	mov    rax,QWORD PTR fs:0x28
  404cd8:	mov    QWORD PTR [rbp-0x8],rax
  404cdc:	xor    eax,eax
  404cde:	mov    rax,QWORD PTR [rbp-0x58]
  404ce2:	lea    rsi,[rip+0x7653]        # 40c33c <_IO_stdin_used@@Base+0x33c>
  404ce9:	mov    rdi,rax
  404cec:	call   4040fb <_start@@Base+0xfeb>
  404cf1:	mov    DWORD PTR [rbp-0x44],eax
  404cf4:	mov    WORD PTR [rbp-0x4c],0x3
  404cfa:	mov    rax,QWORD PTR [rbp-0x58]
  404cfe:	lea    rsi,[rip+0x763d]        # 40c342 <_IO_stdin_used@@Base+0x342>
  404d05:	mov    rdi,rax
  404d08:	call   4040fb <_start@@Base+0xfeb>
  404d0d:	mov    DWORD PTR [rbp-0x40],eax
  404d10:	mov    WORD PTR [rbp-0x4a],0x5
  404d16:	movzx  eax,WORD PTR [rbp-0x4c]
  404d1a:	movsx  edx,ax
  404d1d:	mov    ecx,DWORD PTR [rbp-0x44]
  404d20:	mov    rax,QWORD PTR [rbp-0x58]
  404d24:	mov    esi,ecx
  404d26:	mov    rdi,rax
  404d29:	call   404c5b <_start@@Base+0x1b4b>
  404d2e:	mov    DWORD PTR [rbp-0x3c],eax
  404d31:	movzx  eax,WORD PTR [rbp-0x4a]
  404d35:	movsx  edx,ax
  404d38:	mov    ecx,DWORD PTR [rbp-0x40]
  404d3b:	mov    rax,QWORD PTR [rbp-0x58]
  404d3f:	mov    esi,ecx
  404d41:	mov    rdi,rax
  404d44:	call   404c5b <_start@@Base+0x1b4b>
  404d49:	mov    DWORD PTR [rbp-0x38],eax
  404d4c:	mov    rax,QWORD PTR [rbp-0x58]
  404d50:	lea    rsi,[rip+0x75ef]        # 40c346 <_IO_stdin_used@@Base+0x346>
  404d57:	mov    rdi,rax
  404d5a:	call   4040fb <_start@@Base+0xfeb>
  404d5f:	mov    DWORD PTR [rbp-0x34],eax
  404d62:	mov    BYTE PTR [rbp-0x12],0x0
  404d66:	mov    BYTE PTR [rbp-0x11],0x1
  404d6a:	mov    BYTE PTR [rbp-0x10],0x2
  404d6e:	mov    BYTE PTR [rbp-0xf],0x3
  404d72:	mov    BYTE PTR [rbp-0xe],0x4
  404d76:	mov    BYTE PTR [rbp-0xd],0x5
  404d7a:	mov    BYTE PTR [rbp-0xc],0x6
  404d7e:	mov    BYTE PTR [rbp-0xb],0x7
  404d82:	mov    BYTE PTR [rbp-0xa],0x8
  404d86:	mov    BYTE PTR [rbp-0x9],0x9
  404d8a:	lea    rcx,[rbp-0x12]
  404d8e:	mov    rax,QWORD PTR [rbp-0x58]
  404d92:	mov    edx,0xa
  404d97:	mov    rsi,rcx
  404d9a:	mov    rdi,rax
  404d9d:	call   403ffd <_start@@Base+0xeed>
  404da2:	mov    DWORD PTR [rbp-0x30],eax
  404da5:	mov    rax,QWORD PTR [rbp-0x58]
  404da9:	mov    rdi,rax
  404dac:	call   4043ac <_start@@Base+0x129c>
  404db1:	mov    edx,DWORD PTR [rbp-0x3c]
  404db4:	mov    rax,QWORD PTR [rbp-0x58]
  404db8:	mov    esi,edx
  404dba:	mov    rdi,rax
  404dbd:	call   4043e0 <_start@@Base+0x12d0>
  404dc2:	mov    edx,DWORD PTR [rbp-0x38]
  404dc5:	mov    rax,QWORD PTR [rbp-0x58]
  404dc9:	mov    esi,edx
  404dcb:	mov    rdi,rax
  404dce:	call   4043e0 <_start@@Base+0x12d0>
  404dd3:	mov    rax,QWORD PTR [rbp-0x58]
  404dd7:	mov    rdi,rax
  404dda:	call   4043c6 <_start@@Base+0x12b6>
  404ddf:	mov    DWORD PTR [rbp-0x2c],eax
  404de2:	vmovss xmm0,DWORD PTR [rip+0x788e]        # 40c678 <_IO_stdin_used@@Base+0x678>
  404dea:	vmovss DWORD PTR [rbp-0x20],xmm0
  404def:	vmovss xmm0,DWORD PTR [rip+0x7885]        # 40c67c <_IO_stdin_used@@Base+0x67c>
  404df7:	vmovss DWORD PTR [rbp-0x1c],xmm0
  404dfc:	vmovss xmm0,DWORD PTR [rip+0x787c]        # 40c680 <_IO_stdin_used@@Base+0x680>
  404e04:	vmovss DWORD PTR [rbp-0x18],xmm0
  404e09:	mov    WORD PTR [rbp-0x48],0x12c
  404e0f:	mov    WORD PTR [rbp-0x46],0x96
  404e15:	mov    eax,DWORD PTR [rbp-0x38]
  404e18:	mov    edi,eax
  404e1a:	call   40440f <_start@@Base+0x12ff>
  404e1f:	mov    QWORD PTR [rbp-0x28],rax
  404e23:	cmp    DWORD PTR [rbp-0x5c],0x0
  404e27:	jne    404e65 <create_monster_bottom_up@@Base+0x1a5>
  404e29:	movzx  eax,WORD PTR [rbp-0x48]
  404e2d:	movsx  ecx,ax
  404e30:	movzx  eax,WORD PTR [rbp-0x46]
  404e34:	movsx  edx,ax
  404e37:	mov    r9d,DWORD PTR [rbp-0x30]
  404e3b:	mov    r8d,DWORD PTR [rbp-0x34]
  404e3f:	lea    rsi,[rbp-0x20]
  404e43:	mov    rax,QWORD PTR [rbp-0x58]
  404e47:	sub    rsp,0x8
  404e4b:	push   QWORD PTR [rbp-0x28]
  404e4e:	mov    edi,DWORD PTR [rbp-0x2c]
  404e51:	push   rdi
  404e52:	push   0x0
  404e54:	mov    rdi,rax
  404e57:	call   404b1c <_start@@Base+0x1a0c>
  404e5c:	add    rsp,0x20
  404e60:	jmp    404f0d <create_monster_bottom_up@@Base+0x24d>
  404e65:	mov    rax,QWORD PTR [rbp-0x58]
  404e69:	mov    rdi,rax
  404e6c:	call   404abc <_start@@Base+0x19ac>
  404e71:	mov    rax,QWORD PTR [rbp-0x58]
  404e75:	vmovss xmm2,DWORD PTR [rip+0x7803]        # 40c680 <_IO_stdin_used@@Base+0x680>
  404e7d:	vmovss xmm1,DWORD PTR [rip+0x77f7]        # 40c67c <_IO_stdin_used@@Base+0x67c>
  404e85:	vmovss xmm0,DWORD PTR [rip+0x77eb]        # 40c678 <_IO_stdin_used@@Base+0x678>
  404e8d:	mov    rdi,rax
  404e90:	call   40444f <_start@@Base+0x133f>
  404e95:	movzx  eax,WORD PTR [rbp-0x48]
  404e99:	movsx  edx,ax
  404e9c:	mov    rax,QWORD PTR [rbp-0x58]
  404ea0:	mov    esi,edx
  404ea2:	mov    rdi,rax
  404ea5:	call   404567 <_start@@Base+0x1457>
  404eaa:	mov    edx,DWORD PTR [rbp-0x34]
  404ead:	mov    rax,QWORD PTR [rbp-0x58]
  404eb1:	mov    esi,edx
  404eb3:	mov    rdi,rax
  404eb6:	call   4045cd <_start@@Base+0x14bd>
  404ebb:	mov    edx,DWORD PTR [rbp-0x30]
  404ebe:	mov    rax,QWORD PTR [rbp-0x58]
  404ec2:	mov    esi,edx
  404ec4:	mov    rdi,rax
  404ec7:	call   40464a <_start@@Base+0x153a>
  404ecc:	mov    rax,QWORD PTR [rbp-0x58]
  404ed0:	mov    esi,0x0
  404ed5:	mov    rdi,rax
  404ed8:	call   4046cf <_start@@Base+0x15bf>
  404edd:	mov    edx,DWORD PTR [rbp-0x2c]
  404ee0:	mov    rax,QWORD PTR [rbp-0x58]
  404ee4:	mov    esi,edx
  404ee6:	mov    rdi,rax
  404ee9:	call   404733 <_start@@Base+0x1623>
  404eee:	mov    rdx,QWORD PTR [rbp-0x28]
  404ef2:	mov    rax,QWORD PTR [rbp-0x58]
  404ef6:	mov    rsi,rdx
  404ef9:	mov    rdi,rax
  404efc:	call   40482a <_start@@Base+0x171a>
  404f01:	mov    rax,QWORD PTR [rbp-0x58]
  404f05:	mov    rdi,rax
  404f08:	call   404af2 <_start@@Base+0x19e2>
  404f0d:	mov    eax,0x0
  404f12:	mov    rcx,QWORD PTR [rbp-0x8]
  404f16:	xor    rcx,QWORD PTR fs:0x28
  404f1f:	je     404f26 <create_monster_bottom_up@@Base+0x266>
  404f21:	call   403070 <__stack_chk_fail@plt>
  404f26:	leave  
  404f27:	ret    

0000000000404f28 <create_monster_top_down@@Base>:
  404f28:	push   rbp
  404f29:	mov    rbp,rsp
  404f2c:	sub    rsp,0x40
  404f30:	mov    QWORD PTR [rbp-0x38],rdi
  404f34:	mov    rax,QWORD PTR fs:0x28
  404f3d:	mov    QWORD PTR [rbp-0x8],rax
  404f41:	xor    eax,eax
  404f43:	mov    BYTE PTR [rbp-0x12],0x0
  404f47:	mov    BYTE PTR [rbp-0x11],0x1
  404f4b:	mov    BYTE PTR [rbp-0x10],0x2
  404f4f:	mov    BYTE PTR [rbp-0xf],0x3
  404f53:	mov    BYTE PTR [rbp-0xe],0x4
  404f57:	mov    BYTE PTR [rbp-0xd],0x5
  404f5b:	mov    BYTE PTR [rbp-0xc],0x6
  404f5f:	mov    BYTE PTR [rbp-0xb],0x7
  404f63:	mov    BYTE PTR [rbp-0xa],0x8
  404f67:	mov    BYTE PTR [rbp-0x9],0x9
  404f6b:	mov    QWORD PTR [rbp-0x20],0xa
  404f73:	mov    rax,QWORD PTR [rbp-0x38]
  404f77:	mov    rdi,rax
  404f7a:	call   404abc <_start@@Base+0x19ac>
  404f7f:	mov    rax,QWORD PTR [rbp-0x38]
  404f83:	vmovss xmm2,DWORD PTR [rip+0x76f5]        # 40c680 <_IO_stdin_used@@Base+0x680>
  404f8b:	vmovss xmm1,DWORD PTR [rip+0x76e9]        # 40c67c <_IO_stdin_used@@Base+0x67c>
  404f93:	vmovss xmm0,DWORD PTR [rip+0x76dd]        # 40c678 <_IO_stdin_used@@Base+0x678>
  404f9b:	mov    rdi,rax
  404f9e:	call   40444f <_start@@Base+0x133f>
  404fa3:	mov    rax,QWORD PTR [rbp-0x38]
  404fa7:	mov    esi,0x12c
  404fac:	mov    rdi,rax
  404faf:	call   404567 <_start@@Base+0x1457>
  404fb4:	mov    rax,QWORD PTR [rbp-0x38]
  404fb8:	lea    rsi,[rip+0x7387]        # 40c346 <_IO_stdin_used@@Base+0x346>
  404fbf:	mov    rdi,rax
  404fc2:	call   404615 <_start@@Base+0x1505>
  404fc7:	mov    rdx,QWORD PTR [rbp-0x20]
  404fcb:	lea    rcx,[rbp-0x12]
  404fcf:	mov    rax,QWORD PTR [rbp-0x38]
  404fd3:	mov    rsi,rcx
  404fd6:	mov    rdi,rax
  404fd9:	call   404692 <_start@@Base+0x1582>
  404fde:	mov    rax,QWORD PTR [rbp-0x38]
  404fe2:	mov    esi,0x0
  404fe7:	mov    rdi,rax
  404fea:	call   4046cf <_start@@Base+0x15bf>
  404fef:	mov    rax,QWORD PTR [rbp-0x38]
  404ff3:	mov    rdi,rax
  404ff6:	call   40477b <_start@@Base+0x166b>
  404ffb:	mov    rax,QWORD PTR [rbp-0x38]
  404fff:	lea    rsi,[rip+0x7336]        # 40c33c <_IO_stdin_used@@Base+0x33c>
  405006:	mov    rdi,rax
  405009:	call   4040fb <_start@@Base+0xfeb>
  40500e:	mov    ecx,eax
  405010:	mov    rax,QWORD PTR [rbp-0x38]
  405014:	mov    edx,0x3
  405019:	mov    esi,ecx
  40501b:	mov    rdi,rax
  40501e:	call   4047ee <_start@@Base+0x16de>
  405023:	mov    rax,QWORD PTR [rbp-0x38]
  405027:	lea    rsi,[rip+0x7314]        # 40c342 <_IO_stdin_used@@Base+0x342>
  40502e:	mov    rdi,rax
  405031:	call   4040fb <_start@@Base+0xfeb>
  405036:	mov    ecx,eax
  405038:	mov    rax,QWORD PTR [rbp-0x38]
  40503c:	mov    edx,0x5
  405041:	mov    esi,ecx
  405043:	mov    rdi,rax
  405046:	call   4047ee <_start@@Base+0x16de>
  40504b:	mov    eax,DWORD PTR [rax]
  40504d:	mov    DWORD PTR [rbp-0x24],eax
  405050:	mov    rax,QWORD PTR [rbp-0x38]
  405054:	mov    rdi,rax
  405057:	call   404795 <_start@@Base+0x1685>
  40505c:	mov    edx,DWORD PTR [rbp-0x24]
  40505f:	mov    rax,QWORD PTR [rbp-0x38]
  405063:	mov    esi,edx
  405065:	mov    rdi,rax
  405068:	call   404968 <_start@@Base+0x1858>
  40506d:	mov    rax,QWORD PTR [rbp-0x38]
  405071:	mov    rdi,rax
  405074:	call   404af2 <_start@@Base+0x19e2>
  405079:	mov    eax,0x0
  40507e:	mov    rcx,QWORD PTR [rbp-0x8]
  405082:	xor    rcx,QWORD PTR fs:0x28
  40508b:	je     405092 <create_monster_top_down@@Base+0x16a>
  40508d:	call   403070 <__stack_chk_fail@plt>
  405092:	leave  
  405093:	ret    

0000000000405094 <access_monster_buffer@@Base>:
  405094:	push   rbp
  405095:	mov    rbp,rsp
  405098:	sub    rsp,0xa0
  40509f:	mov    QWORD PTR [rbp-0x98],rdi
  4050a6:	mov    rax,QWORD PTR fs:0x28
  4050af:	mov    QWORD PTR [rbp-0x8],rax
  4050b3:	xor    eax,eax
  4050b5:	mov    rax,QWORD PTR [rbp-0x98]
  4050bc:	mov    rdi,rax
  4050bf:	call   4035df <_start@@Base+0x4cf>
  4050c4:	mov    QWORD PTR [rbp-0x70],rax
  4050c8:	cmp    QWORD PTR [rbp-0x70],0x0
  4050cd:	jne    4050ee <access_monster_buffer@@Base+0x5a>
  4050cf:	lea    rcx,[rip+0x735a]        # 40c430 <_IO_stdin_used@@Base+0x430>
  4050d6:	mov    edx,0xd3
  4050db:	lea    rsi,[rip+0x726e]        # 40c350 <_IO_stdin_used@@Base+0x350>
  4050e2:	lea    rdi,[rip+0x72cb]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  4050e9:	call   403080 <__assert_fail@plt>
  4050ee:	mov    rax,QWORD PTR [rbp-0x70]
  4050f2:	mov    rdi,rax
  4050f5:	call   403851 <_start@@Base+0x741>
  4050fa:	mov    WORD PTR [rbp-0x8c],ax
  405101:	mov    rax,QWORD PTR [rbp-0x70]
  405105:	mov    rdi,rax
  405108:	call   4036e7 <_start@@Base+0x5d7>
  40510d:	mov    WORD PTR [rbp-0x8a],ax
  405114:	mov    rax,QWORD PTR [rbp-0x70]
  405118:	mov    rdi,rax
  40511b:	call   4039bb <_start@@Base+0x8ab>
  405120:	mov    QWORD PTR [rbp-0x68],rax
  405124:	mov    rax,QWORD PTR [rbp-0x68]
  405128:	mov    rdi,rax
  40512b:	call   4033ee <_start@@Base+0x2de>
  405130:	mov    QWORD PTR [rbp-0x60],rax
  405134:	cmp    WORD PTR [rbp-0x8c],0x12c
  40513d:	je     40515e <access_monster_buffer@@Base+0xca>
  40513f:	lea    rcx,[rip+0x72ea]        # 40c430 <_IO_stdin_used@@Base+0x430>
  405146:	mov    edx,0xdb
  40514b:	lea    rsi,[rip+0x71fe]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405152:	lea    rdi,[rip+0x725b]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  405159:	call   403080 <__assert_fail@plt>
  40515e:	cmp    WORD PTR [rbp-0x8a],0x96
  405167:	je     405188 <access_monster_buffer@@Base+0xf4>
  405169:	lea    rcx,[rip+0x72c0]        # 40c430 <_IO_stdin_used@@Base+0x430>
  405170:	mov    edx,0xdd
  405175:	lea    rsi,[rip+0x71d4]        # 40c350 <_IO_stdin_used@@Base+0x350>
  40517c:	lea    rdi,[rip+0x7231]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  405183:	call   403080 <__assert_fail@plt>
  405188:	mov    rax,QWORD PTR [rbp-0x68]
  40518c:	lea    rsi,[rip+0x71b3]        # 40c346 <_IO_stdin_used@@Base+0x346>
  405193:	mov    rdi,rax
  405196:	call   4030c0 <strcmp@plt>
  40519b:	test   eax,eax
  40519d:	je     4051be <access_monster_buffer@@Base+0x12a>
  40519f:	lea    rcx,[rip+0x728a]        # 40c430 <_IO_stdin_used@@Base+0x430>
  4051a6:	mov    edx,0xde
  4051ab:	lea    rsi,[rip+0x719e]        # 40c350 <_IO_stdin_used@@Base+0x350>
  4051b2:	lea    rdi,[rip+0x71fb]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  4051b9:	call   403080 <__assert_fail@plt>
  4051be:	cmp    QWORD PTR [rbp-0x60],0x3
  4051c3:	je     4051e4 <access_monster_buffer@@Base+0x150>
  4051c5:	lea    rcx,[rip+0x7264]        # 40c430 <_IO_stdin_used@@Base+0x430>
  4051cc:	mov    edx,0xdf
  4051d1:	lea    rsi,[rip+0x7178]        # 40c350 <_IO_stdin_used@@Base+0x350>
  4051d8:	lea    rdi,[rip+0x71d5]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  4051df:	call   403080 <__assert_fail@plt>
  4051e4:	mov    rax,QWORD PTR [rbp-0x70]
  4051e8:	mov    rdi,rax
  4051eb:	call   403911 <_start@@Base+0x801>
  4051f0:	mov    DWORD PTR [rbp-0x84],eax
  4051f6:	mov    rax,QWORD PTR [rbp-0x70]
  4051fa:	mov    rdi,rax
  4051fd:	call   4037a7 <_start@@Base+0x697>
  405202:	mov    DWORD PTR [rbp-0x80],eax
  405205:	cmp    DWORD PTR [rbp-0x84],0x0
  40520c:	jne    40522d <access_monster_buffer@@Base+0x199>
  40520e:	lea    rcx,[rip+0x721b]        # 40c430 <_IO_stdin_used@@Base+0x430>
  405215:	mov    edx,0xe3
  40521a:	lea    rsi,[rip+0x712f]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405221:	lea    rdi,[rip+0x718c]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  405228:	call   403080 <__assert_fail@plt>
  40522d:	cmp    DWORD PTR [rbp-0x80],0x0
  405231:	je     405252 <access_monster_buffer@@Base+0x1be>
  405233:	lea    rcx,[rip+0x71f6]        # 40c430 <_IO_stdin_used@@Base+0x430>
  40523a:	mov    edx,0xe4
  40523f:	lea    rsi,[rip+0x710a]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405246:	lea    rdi,[rip+0x7167]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  40524d:	call   403080 <__assert_fail@plt>
  405252:	mov    rax,QWORD PTR [rbp-0x70]
  405256:	mov    rdi,rax
  405259:	call   40362f <_start@@Base+0x51f>
  40525e:	mov    QWORD PTR [rbp-0x58],rax
  405262:	cmp    QWORD PTR [rbp-0x58],0x0
  405267:	jne    405288 <access_monster_buffer@@Base+0x1f4>
  405269:	lea    rcx,[rip+0x71c0]        # 40c430 <_IO_stdin_used@@Base+0x430>
  405270:	mov    edx,0xe8
  405275:	lea    rsi,[rip+0x70d4]        # 40c350 <_IO_stdin_used@@Base+0x350>
  40527c:	lea    rdi,[rip+0x7131]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  405283:	call   403080 <__assert_fail@plt>
  405288:	mov    rax,QWORD PTR [rbp-0x58]
  40528c:	mov    rdi,rax
  40528f:	call   403538 <_start@@Base+0x428>
  405294:	vmovd  eax,xmm0
  405298:	mov    DWORD PTR [rbp-0x7c],eax
  40529b:	mov    rax,QWORD PTR [rbp-0x58]
  40529f:	mov    rdi,rax
  4052a2:	call   40356d <_start@@Base+0x45d>
  4052a7:	vmovd  eax,xmm0
  4052ab:	mov    DWORD PTR [rbp-0x78],eax
  4052ae:	mov    rax,QWORD PTR [rbp-0x58]
  4052b2:	mov    rdi,rax
  4052b5:	call   4035a6 <_start@@Base+0x496>
  4052ba:	vmovd  eax,xmm0
  4052be:	mov    DWORD PTR [rbp-0x74],eax
  4052c1:	vmovss xmm0,DWORD PTR [rip+0x73af]        # 40c678 <_IO_stdin_used@@Base+0x678>
  4052c9:	vucomiss xmm0,DWORD PTR [rbp-0x7c]
  4052ce:	jp     4052df <access_monster_buffer@@Base+0x24b>
  4052d0:	vmovss xmm0,DWORD PTR [rip+0x73a0]        # 40c678 <_IO_stdin_used@@Base+0x678>
  4052d8:	vucomiss xmm0,DWORD PTR [rbp-0x7c]
  4052dd:	je     4052fe <access_monster_buffer@@Base+0x26a>
  4052df:	lea    rcx,[rip+0x714a]        # 40c430 <_IO_stdin_used@@Base+0x430>
  4052e6:	mov    edx,0xf0
  4052eb:	lea    rsi,[rip+0x705e]        # 40c350 <_IO_stdin_used@@Base+0x350>
  4052f2:	lea    rdi,[rip+0x70bb]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  4052f9:	call   403080 <__assert_fail@plt>
  4052fe:	vmovss xmm0,DWORD PTR [rbp-0x78]
  405303:	vucomiss xmm0,DWORD PTR [rip+0x7371]        # 40c67c <_IO_stdin_used@@Base+0x67c>
  40530b:	jp     40531c <access_monster_buffer@@Base+0x288>
  40530d:	vmovss xmm0,DWORD PTR [rbp-0x78]
  405312:	vucomiss xmm0,DWORD PTR [rip+0x7362]        # 40c67c <_IO_stdin_used@@Base+0x67c>
  40531a:	je     40533b <access_monster_buffer@@Base+0x2a7>
  40531c:	lea    rcx,[rip+0x710d]        # 40c430 <_IO_stdin_used@@Base+0x430>
  405323:	mov    edx,0xf1
  405328:	lea    rsi,[rip+0x7021]        # 40c350 <_IO_stdin_used@@Base+0x350>
  40532f:	lea    rdi,[rip+0x707e]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  405336:	call   403080 <__assert_fail@plt>
  40533b:	vmovss xmm0,DWORD PTR [rbp-0x74]
  405340:	vucomiss xmm0,DWORD PTR [rip+0x7338]        # 40c680 <_IO_stdin_used@@Base+0x680>
  405348:	jp     405359 <access_monster_buffer@@Base+0x2c5>
  40534a:	vmovss xmm0,DWORD PTR [rbp-0x74]
  40534f:	vucomiss xmm0,DWORD PTR [rip+0x7329]        # 40c680 <_IO_stdin_used@@Base+0x680>
  405357:	je     405378 <access_monster_buffer@@Base+0x2e4>
  405359:	lea    rcx,[rip+0x70d0]        # 40c430 <_IO_stdin_used@@Base+0x430>
  405360:	mov    edx,0xf2
  405365:	lea    rsi,[rip+0x6fe4]        # 40c350 <_IO_stdin_used@@Base+0x350>
  40536c:	lea    rdi,[rip+0x7041]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  405373:	call   403080 <__assert_fail@plt>
  405378:	mov    rdx,QWORD PTR [rbp-0x58]
  40537c:	lea    rax,[rbp-0x14]
  405380:	mov    rsi,rdx
  405383:	mov    rdi,rax
  405386:	call   404265 <_start@@Base+0x1155>
  40538b:	vmovss xmm0,DWORD PTR [rbp-0x14]
  405390:	vmovss xmm1,DWORD PTR [rip+0x72e0]        # 40c678 <_IO_stdin_used@@Base+0x678>
  405398:	vucomiss xmm0,xmm1
  40539c:	jp     4053ac <access_monster_buffer@@Base+0x318>
  40539e:	vmovss xmm1,DWORD PTR [rip+0x72d2]        # 40c678 <_IO_stdin_used@@Base+0x678>
  4053a6:	vucomiss xmm0,xmm1
  4053aa:	je     4053cb <access_monster_buffer@@Base+0x337>
  4053ac:	lea    rcx,[rip+0x707d]        # 40c430 <_IO_stdin_used@@Base+0x430>
  4053b3:	mov    edx,0xfa
  4053b8:	lea    rsi,[rip+0x6f91]        # 40c350 <_IO_stdin_used@@Base+0x350>
  4053bf:	lea    rdi,[rip+0x6fee]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  4053c6:	call   403080 <__assert_fail@plt>
  4053cb:	vmovss xmm0,DWORD PTR [rbp-0x10]
  4053d0:	vucomiss xmm0,DWORD PTR [rip+0x72a4]        # 40c67c <_IO_stdin_used@@Base+0x67c>
  4053d8:	jp     4053e4 <access_monster_buffer@@Base+0x350>
  4053da:	vucomiss xmm0,DWORD PTR [rip+0x729a]        # 40c67c <_IO_stdin_used@@Base+0x67c>
  4053e2:	je     405403 <access_monster_buffer@@Base+0x36f>
  4053e4:	lea    rcx,[rip+0x7045]        # 40c430 <_IO_stdin_used@@Base+0x430>
  4053eb:	mov    edx,0xfb
  4053f0:	lea    rsi,[rip+0x6f59]        # 40c350 <_IO_stdin_used@@Base+0x350>
  4053f7:	lea    rdi,[rip+0x6fb6]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  4053fe:	call   403080 <__assert_fail@plt>
  405403:	vmovss xmm0,DWORD PTR [rbp-0xc]
  405408:	vucomiss xmm0,DWORD PTR [rip+0x7270]        # 40c680 <_IO_stdin_used@@Base+0x680>
  405410:	jp     40541c <access_monster_buffer@@Base+0x388>
  405412:	vucomiss xmm0,DWORD PTR [rip+0x7266]        # 40c680 <_IO_stdin_used@@Base+0x680>
  40541a:	je     40543b <access_monster_buffer@@Base+0x3a7>
  40541c:	lea    rcx,[rip+0x700d]        # 40c430 <_IO_stdin_used@@Base+0x430>
  405423:	mov    edx,0xfc
  405428:	lea    rsi,[rip+0x6f21]        # 40c350 <_IO_stdin_used@@Base+0x350>
  40542f:	lea    rdi,[rip+0x6f7e]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  405436:	call   403080 <__assert_fail@plt>
  40543b:	mov    rax,QWORD PTR [rbp-0x70]
  40543f:	mov    rdi,rax
  405442:	call   403a90 <_start@@Base+0x980>
  405447:	mov    QWORD PTR [rbp-0x50],rax
  40544b:	mov    rax,QWORD PTR [rbp-0x50]
  40544f:	mov    rdi,rax
  405452:	call   40341c <_start@@Base+0x30c>
  405457:	mov    QWORD PTR [rbp-0x48],rax
  40545b:	cmp    QWORD PTR [rbp-0x50],0x0
  405460:	jne    405481 <access_monster_buffer@@Base+0x3ed>
  405462:	lea    rcx,[rip+0x6fc7]        # 40c430 <_IO_stdin_used@@Base+0x430>
  405469:	mov    edx,0x105
  40546e:	lea    rsi,[rip+0x6edb]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405475:	lea    rdi,[rip+0x6f38]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  40547c:	call   403080 <__assert_fail@plt>
  405481:	cmp    QWORD PTR [rbp-0x48],0xa
  405486:	je     4054a7 <access_monster_buffer@@Base+0x413>
  405488:	lea    rcx,[rip+0x6fa1]        # 40c430 <_IO_stdin_used@@Base+0x430>
  40548f:	mov    edx,0x107
  405494:	lea    rsi,[rip+0x6eb5]        # 40c350 <_IO_stdin_used@@Base+0x350>
  40549b:	lea    rdi,[rip+0x6f12]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  4054a2:	call   403080 <__assert_fail@plt>
  4054a7:	mov    rax,QWORD PTR [rbp-0x50]
  4054ab:	mov    esi,0x2
  4054b0:	mov    rdi,rax
  4054b3:	call   403436 <_start@@Base+0x326>
  4054b8:	mov    BYTE PTR [rbp-0x8d],al
  4054be:	cmp    BYTE PTR [rbp-0x8d],0x2
  4054c5:	je     4054e6 <access_monster_buffer@@Base+0x452>
  4054c7:	lea    rcx,[rip+0x6f62]        # 40c430 <_IO_stdin_used@@Base+0x430>
  4054ce:	mov    edx,0x10b
  4054d3:	lea    rsi,[rip+0x6e76]        # 40c350 <_IO_stdin_used@@Base+0x350>
  4054da:	lea    rdi,[rip+0x6ed3]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  4054e1:	call   403080 <__assert_fail@plt>
  4054e6:	mov    rax,QWORD PTR [rbp-0x70]
  4054ea:	mov    rdi,rax
  4054ed:	call   403b65 <_start@@Base+0xa55>
  4054f2:	mov    QWORD PTR [rbp-0x40],rax
  4054f6:	mov    rax,QWORD PTR [rbp-0x40]
  4054fa:	mov    rdi,rax
  4054fd:	call   403dcb <_start@@Base+0xcbb>
  405502:	mov    QWORD PTR [rbp-0x38],rax
  405506:	cmp    QWORD PTR [rbp-0x38],0x2
  40550b:	je     40552c <access_monster_buffer@@Base+0x498>
  40550d:	lea    rcx,[rip+0x6f1c]        # 40c430 <_IO_stdin_used@@Base+0x430>
  405514:	mov    edx,0x10f
  405519:	lea    rsi,[rip+0x6e30]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405520:	lea    rdi,[rip+0x6e8d]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  405527:	call   403080 <__assert_fail@plt>
  40552c:	mov    rax,QWORD PTR [rbp-0x40]
  405530:	mov    esi,0x1
  405535:	mov    rdi,rax
  405538:	call   403df9 <_start@@Base+0xce9>
  40553d:	mov    rdi,rax
  405540:	call   403e68 <_start@@Base+0xd58>
  405545:	mov    QWORD PTR [rbp-0x30],rax
  405549:	mov    rax,QWORD PTR [rbp-0x40]
  40554d:	mov    esi,0x1
  405552:	mov    rdi,rax
  405555:	call   403df9 <_start@@Base+0xce9>
  40555a:	mov    rdi,rax
  40555d:	call   403f3d <_start@@Base+0xe2d>
  405562:	mov    WORD PTR [rbp-0x88],ax
  405569:	cmp    QWORD PTR [rbp-0x30],0x0
  40556e:	je     405587 <access_monster_buffer@@Base+0x4f3>
  405570:	mov    rax,QWORD PTR [rbp-0x30]
  405574:	lea    rsi,[rip+0x6dc7]        # 40c342 <_IO_stdin_used@@Base+0x342>
  40557b:	mov    rdi,rax
  40557e:	call   4030c0 <strcmp@plt>
  405583:	test   eax,eax
  405585:	je     4055a6 <access_monster_buffer@@Base+0x512>
  405587:	lea    rcx,[rip+0x6ea2]        # 40c430 <_IO_stdin_used@@Base+0x430>
  40558e:	mov    edx,0x113
  405593:	lea    rsi,[rip+0x6db6]        # 40c350 <_IO_stdin_used@@Base+0x350>
  40559a:	lea    rdi,[rip+0x6e13]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  4055a1:	call   403080 <__assert_fail@plt>
  4055a6:	cmp    WORD PTR [rbp-0x88],0x5
  4055ae:	je     4055cf <access_monster_buffer@@Base+0x53b>
  4055b0:	lea    rcx,[rip+0x6e79]        # 40c430 <_IO_stdin_used@@Base+0x430>
  4055b7:	mov    edx,0x114
  4055bc:	lea    rsi,[rip+0x6d8d]        # 40c350 <_IO_stdin_used@@Base+0x350>
  4055c3:	lea    rdi,[rip+0x6dea]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  4055ca:	call   403080 <__assert_fail@plt>
  4055cf:	mov    rax,QWORD PTR [rbp-0x70]
  4055d3:	mov    rdi,rax
  4055d6:	call   403c3a <_start@@Base+0xb2a>
  4055db:	cmp    al,0x1
  4055dd:	jne    405675 <access_monster_buffer@@Base+0x5e1>
  4055e3:	mov    rax,QWORD PTR [rbp-0x70]
  4055e7:	mov    rdi,rax
  4055ea:	call   403cfa <_start@@Base+0xbea>
  4055ef:	mov    QWORD PTR [rbp-0x28],rax
  4055f3:	mov    rax,QWORD PTR [rbp-0x28]
  4055f7:	mov    rdi,rax
  4055fa:	call   403e68 <_start@@Base+0xd58>
  4055ff:	mov    QWORD PTR [rbp-0x20],rax
  405603:	mov    rax,QWORD PTR [rbp-0x28]
  405607:	mov    rdi,rax
  40560a:	call   403f3d <_start@@Base+0xe2d>
  40560f:	mov    WORD PTR [rbp-0x86],ax
  405616:	mov    rax,QWORD PTR [rbp-0x20]
  40561a:	lea    rsi,[rip+0x6d21]        # 40c342 <_IO_stdin_used@@Base+0x342>
  405621:	mov    rdi,rax
  405624:	call   4030c0 <strcmp@plt>
  405629:	test   eax,eax
  40562b:	je     40564c <access_monster_buffer@@Base+0x5b8>
  40562d:	lea    rcx,[rip+0x6dfc]        # 40c430 <_IO_stdin_used@@Base+0x430>
  405634:	mov    edx,0x11e
  405639:	lea    rsi,[rip+0x6d10]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405640:	lea    rdi,[rip+0x6d6d]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  405647:	call   403080 <__assert_fail@plt>
  40564c:	cmp    WORD PTR [rbp-0x86],0x5
  405654:	je     405675 <access_monster_buffer@@Base+0x5e1>
  405656:	lea    rcx,[rip+0x6dd3]        # 40c430 <_IO_stdin_used@@Base+0x430>
  40565d:	mov    edx,0x11f
  405662:	lea    rsi,[rip+0x6ce7]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405669:	lea    rdi,[rip+0x6d44]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  405670:	call   403080 <__assert_fail@plt>
  405675:	mov    eax,0x0
  40567a:	mov    rcx,QWORD PTR [rbp-0x8]
  40567e:	xor    rcx,QWORD PTR fs:0x28
  405687:	je     40568e <access_monster_buffer@@Base+0x5fa>
  405689:	call   403070 <__stack_chk_fail@plt>
  40568e:	leave  
  40568f:	ret    

0000000000405690 <main@@Base>:
  405690:	push   rbp
  405691:	mov    rbp,rsp
  405694:	sub    rsp,0x1b0
  40569b:	mov    DWORD PTR [rbp-0x1a4],edi
  4056a1:	mov    QWORD PTR [rbp-0x1b0],rsi
  4056a8:	mov    rax,QWORD PTR fs:0x28
  4056b1:	mov    QWORD PTR [rbp-0x8],rax
  4056b5:	xor    eax,eax
  4056b7:	lea    rax,[rbp-0x190]
  4056be:	mov    rdi,rax
  4056c1:	call   406308 <flatcc_builder_init@@Base>
  4056c6:	lea    rax,[rbp-0x190]
  4056cd:	mov    esi,0x0
  4056d2:	mov    rdi,rax
  4056d5:	call   404cc0 <create_monster_bottom_up@@Base>
  4056da:	test   eax,eax
  4056dc:	je     4056fd <main@@Base+0x6d>
  4056de:	lea    rcx,[rip+0x6f87]        # 40c66c <_IO_stdin_used@@Base+0x66c>
  4056e5:	mov    edx,0x134
  4056ea:	lea    rsi,[rip+0x6c5f]        # 40c350 <_IO_stdin_used@@Base+0x350>
  4056f1:	lea    rdi,[rip+0x6cbc]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  4056f8:	call   403080 <__assert_fail@plt>
  4056fd:	lea    rdx,[rbp-0x1a0]
  405704:	lea    rax,[rbp-0x190]
  40570b:	mov    rsi,rdx
  40570e:	mov    rdi,rax
  405711:	call   40ad0f <flatcc_builder_finalize_aligned_buffer@@Base>
  405716:	mov    QWORD PTR [rbp-0x198],rax
  40571d:	mov    rax,QWORD PTR [rbp-0x198]
  405724:	mov    rdi,rax
  405727:	call   40ae06 <flatcc_builder_aligned_free@@Base>
  40572c:	lea    rax,[rbp-0x190]
  405733:	mov    rdi,rax
  405736:	call   406548 <flatcc_builder_reset@@Base>
  40573b:	lea    rax,[rbp-0x190]
  405742:	mov    esi,0x1
  405747:	mov    rdi,rax
  40574a:	call   404cc0 <create_monster_bottom_up@@Base>
  40574f:	test   eax,eax
  405751:	je     405772 <main@@Base+0xe2>
  405753:	lea    rcx,[rip+0x6f12]        # 40c66c <_IO_stdin_used@@Base+0x66c>
  40575a:	mov    edx,0x14f
  40575f:	lea    rsi,[rip+0x6bea]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405766:	lea    rdi,[rip+0x6c47]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  40576d:	call   403080 <__assert_fail@plt>
  405772:	lea    rdx,[rbp-0x1a0]
  405779:	lea    rax,[rbp-0x190]
  405780:	mov    rsi,rdx
  405783:	mov    rdi,rax
  405786:	call   40ad0f <flatcc_builder_finalize_aligned_buffer@@Base>
  40578b:	mov    QWORD PTR [rbp-0x198],rax
  405792:	mov    rax,QWORD PTR [rbp-0x198]
  405799:	mov    rdi,rax
  40579c:	call   405094 <access_monster_buffer@@Base>
  4057a1:	mov    rax,QWORD PTR [rbp-0x198]
  4057a8:	mov    rdi,rax
  4057ab:	call   40ae06 <flatcc_builder_aligned_free@@Base>
  4057b0:	lea    rax,[rbp-0x190]
  4057b7:	mov    rdi,rax
  4057ba:	call   406548 <flatcc_builder_reset@@Base>
  4057bf:	lea    rax,[rbp-0x190]
  4057c6:	mov    rdi,rax
  4057c9:	call   404f28 <create_monster_top_down@@Base>
  4057ce:	lea    rdx,[rbp-0x1a0]
  4057d5:	lea    rax,[rbp-0x190]
  4057dc:	mov    rsi,rdx
  4057df:	mov    rdi,rax
  4057e2:	call   40ac4d <flatcc_builder_finalize_buffer@@Base>
  4057e7:	mov    QWORD PTR [rbp-0x198],rax
  4057ee:	mov    rax,QWORD PTR [rbp-0x198]
  4057f5:	mov    rdi,rax
  4057f8:	call   405094 <access_monster_buffer@@Base>
  4057fd:	test   eax,eax
  4057ff:	je     405820 <main@@Base+0x190>
  405801:	lea    rcx,[rip+0x6e64]        # 40c66c <_IO_stdin_used@@Base+0x66c>
  405808:	mov    edx,0x156
  40580d:	lea    rsi,[rip+0x6b3c]        # 40c350 <_IO_stdin_used@@Base+0x350>
  405814:	lea    rdi,[rip+0x6b99]        # 40c3b4 <_IO_stdin_used@@Base+0x3b4>
  40581b:	call   403080 <__assert_fail@plt>
  405820:	mov    rax,QWORD PTR [rbp-0x198]
  405827:	mov    rdi,rax
  40582a:	call   403030 <free@plt>
  40582f:	lea    rax,[rbp-0x190]
  405836:	mov    rdi,rax
  405839:	call   40656c <flatcc_builder_clear@@Base>
  40583e:	lea    rdi,[rip+0x6b73]        # 40c3b8 <_IO_stdin_used@@Base+0x3b8>
  405845:	call   403050 <puts@plt>
  40584a:	mov    eax,0x0
  40584f:	mov    rcx,QWORD PTR [rbp-0x8]
  405853:	xor    rcx,QWORD PTR fs:0x28
  40585c:	je     405863 <main@@Base+0x1d3>
  40585e:	call   403070 <__stack_chk_fail@plt>
  405863:	leave  
  405864:	ret    
  405865:	push   rbp
  405866:	mov    rbp,rsp
  405869:	sub    rsp,0x30
  40586d:	mov    QWORD PTR [rbp-0x28],rdi
  405871:	mov    QWORD PTR [rbp-0x30],rsi
  405875:	mov    rax,QWORD PTR fs:0x28
  40587e:	mov    QWORD PTR [rbp-0x8],rax
  405882:	xor    eax,eax
  405884:	mov    QWORD PTR [rbp-0x10],0x0
  40588c:	cmp    QWORD PTR [rbp-0x28],0x7
  405891:	ja     40589b <main@@Base+0x20b>
  405893:	mov    QWORD PTR [rbp-0x28],0x8
  40589b:	mov    rdx,QWORD PTR [rbp-0x30]
  40589f:	mov    rcx,QWORD PTR [rbp-0x28]
  4058a3:	lea    rax,[rbp-0x10]
  4058a7:	mov    rsi,rcx
  4058aa:	mov    rdi,rax
  4058ad:	call   403100 <posix_memalign@plt>
  4058b2:	mov    DWORD PTR [rbp-0x14],eax
  4058b5:	cmp    DWORD PTR [rbp-0x14],0x0
  4058b9:	je     4058d8 <main@@Base+0x248>
  4058bb:	mov    rax,QWORD PTR [rbp-0x10]
  4058bf:	test   rax,rax
  4058c2:	je     4058d8 <main@@Base+0x248>
  4058c4:	mov    rax,QWORD PTR [rbp-0x10]
  4058c8:	mov    rdi,rax
  4058cb:	call   403030 <free@plt>
  4058d0:	mov    QWORD PTR [rbp-0x10],0x0
  4058d8:	mov    rax,QWORD PTR [rbp-0x10]
  4058dc:	mov    rcx,QWORD PTR [rbp-0x8]
  4058e0:	xor    rcx,QWORD PTR fs:0x28
  4058e9:	je     4058f0 <main@@Base+0x260>
  4058eb:	call   403070 <__stack_chk_fail@plt>
  4058f0:	leave  
  4058f1:	ret    
  4058f2:	push   rbp
  4058f3:	mov    rbp,rsp
  4058f6:	mov    DWORD PTR [rbp-0x4],edi
  4058f9:	mov    eax,DWORD PTR [rbp-0x4]
  4058fc:	pop    rbp
  4058fd:	ret    
  4058fe:	push   rbp
  4058ff:	mov    rbp,rsp
  405902:	mov    eax,edi
  405904:	mov    BYTE PTR [rbp-0x4],al
  405907:	movzx  eax,BYTE PTR [rbp-0x4]
  40590b:	pop    rbp
  40590c:	ret    
  40590d:	push   rbp
  40590e:	mov    rbp,rsp
  405911:	mov    DWORD PTR [rbp-0x4],edi
  405914:	mov    eax,DWORD PTR [rbp-0x4]
  405917:	pop    rbp
  405918:	ret    
  405919:	push   rbp
  40591a:	mov    rbp,rsp
  40591d:	mov    QWORD PTR [rbp-0x8],rdi
  405921:	mov    QWORD PTR [rbp-0x10],rsi
  405925:	mov    rax,QWORD PTR [rbp-0x8]
  405929:	mov    rdx,QWORD PTR [rax]
  40592c:	mov    rax,QWORD PTR [rbp-0x8]
  405930:	mov    rax,QWORD PTR [rax+0x8]
  405934:	cmp    rdx,rax
  405937:	jne    405959 <main@@Base+0x2c9>
  405939:	cmp    QWORD PTR [rbp-0x10],0x0
  40593e:	je     40594f <main@@Base+0x2bf>
  405940:	mov    rax,QWORD PTR [rbp-0x8]
  405944:	mov    rdx,QWORD PTR [rax+0x30]
  405948:	mov    rax,QWORD PTR [rbp-0x10]
  40594c:	mov    QWORD PTR [rax],rdx
  40594f:	mov    rax,QWORD PTR [rbp-0x8]
  405953:	mov    rax,QWORD PTR [rax+0x10]
  405957:	jmp    405970 <main@@Base+0x2e0>
  405959:	cmp    QWORD PTR [rbp-0x10],0x0
  40595e:	je     40596b <main@@Base+0x2db>
  405960:	mov    rax,QWORD PTR [rbp-0x10]
  405964:	mov    QWORD PTR [rax],0x0
  40596b:	mov    eax,0x0
  405970:	pop    rbp
  405971:	ret    
  405972:	push   rbp
  405973:	mov    rbp,rsp
  405976:	sub    rsp,0x20
  40597a:	mov    QWORD PTR [rbp-0x18],rdi
  40597e:	mov    QWORD PTR [rbp-0x20],rsi
  405982:	mov    rdx,QWORD PTR [rbp-0x20]
  405986:	mov    rax,QWORD PTR [rbp-0x18]
  40598a:	mov    esi,0x0
  40598f:	mov    rdi,rax
  405992:	call   4030a0 <memchr@plt>
  405997:	mov    QWORD PTR [rbp-0x8],rax
  40599b:	cmp    QWORD PTR [rbp-0x8],0x0
  4059a0:	je     4059b2 <main@@Base+0x322>
  4059a2:	mov    rdx,QWORD PTR [rbp-0x8]
  4059a6:	mov    rax,QWORD PTR [rbp-0x18]
  4059aa:	sub    rdx,rax
  4059ad:	mov    rax,rdx
  4059b0:	jmp    4059b6 <main@@Base+0x326>
  4059b2:	mov    rax,QWORD PTR [rbp-0x20]
  4059b6:	leave  
  4059b7:	ret    

00000000004059b8 <flatcc_builder_default_alloc@@Base>:
  4059b8:	push   rbp
  4059b9:	mov    rbp,rsp
  4059bc:	sub    rsp,0x30
  4059c0:	mov    QWORD PTR [rbp-0x18],rdi
  4059c4:	mov    QWORD PTR [rbp-0x20],rsi
  4059c8:	mov    QWORD PTR [rbp-0x28],rdx
  4059cc:	mov    DWORD PTR [rbp-0x2c],ecx
  4059cf:	mov    DWORD PTR [rbp-0x30],r8d
  4059d3:	cmp    QWORD PTR [rbp-0x28],0x0
  4059d8:	jne    405a16 <flatcc_builder_default_alloc@@Base+0x5e>
  4059da:	mov    rax,QWORD PTR [rbp-0x20]
  4059de:	mov    rax,QWORD PTR [rax]
  4059e1:	test   rax,rax
  4059e4:	je     405a0c <flatcc_builder_default_alloc@@Base+0x54>
  4059e6:	mov    rax,QWORD PTR [rbp-0x20]
  4059ea:	mov    rax,QWORD PTR [rax]
  4059ed:	mov    rdi,rax
  4059f0:	call   403030 <free@plt>
  4059f5:	mov    rax,QWORD PTR [rbp-0x20]
  4059f9:	mov    QWORD PTR [rax],0x0
  405a00:	mov    rax,QWORD PTR [rbp-0x20]
  405a04:	mov    QWORD PTR [rax+0x8],0x0
  405a0c:	mov    eax,0x0
  405a11:	jmp    405b23 <flatcc_builder_default_alloc@@Base+0x16b>
  405a16:	mov    eax,DWORD PTR [rbp-0x30]
  405a19:	cmp    eax,0x4
  405a1c:	je     405a4a <flatcc_builder_default_alloc@@Base+0x92>
  405a1e:	cmp    eax,0x4
  405a21:	jg     405a2a <flatcc_builder_default_alloc@@Base+0x72>
  405a23:	cmp    eax,0x1
  405a26:	je     405a36 <flatcc_builder_default_alloc@@Base+0x7e>
  405a28:	jmp    405a5e <flatcc_builder_default_alloc@@Base+0xa6>
  405a2a:	cmp    eax,0x5
  405a2d:	je     405a40 <flatcc_builder_default_alloc@@Base+0x88>
  405a2f:	cmp    eax,0x7
  405a32:	je     405a54 <flatcc_builder_default_alloc@@Base+0x9c>
  405a34:	jmp    405a5e <flatcc_builder_default_alloc@@Base+0xa6>
  405a36:	mov    QWORD PTR [rbp-0x10],0x100
  405a3e:	jmp    405a67 <flatcc_builder_default_alloc@@Base+0xaf>
  405a40:	mov    rax,QWORD PTR [rbp-0x28]
  405a44:	mov    QWORD PTR [rbp-0x10],rax
  405a48:	jmp    405a67 <flatcc_builder_default_alloc@@Base+0xaf>
  405a4a:	mov    QWORD PTR [rbp-0x10],0x120
  405a52:	jmp    405a67 <flatcc_builder_default_alloc@@Base+0xaf>
  405a54:	mov    QWORD PTR [rbp-0x10],0x40
  405a5c:	jmp    405a67 <flatcc_builder_default_alloc@@Base+0xaf>
  405a5e:	mov    QWORD PTR [rbp-0x10],0x20
  405a66:	nop
  405a67:	jmp    405a6d <flatcc_builder_default_alloc@@Base+0xb5>
  405a69:	shl    QWORD PTR [rbp-0x10],1
  405a6d:	mov    rax,QWORD PTR [rbp-0x10]
  405a71:	cmp    rax,QWORD PTR [rbp-0x28]
  405a75:	jb     405a69 <flatcc_builder_default_alloc@@Base+0xb1>
  405a77:	mov    rax,QWORD PTR [rbp-0x20]
  405a7b:	mov    rax,QWORD PTR [rax+0x8]
  405a7f:	cmp    rax,QWORD PTR [rbp-0x28]
  405a83:	jb     405aa0 <flatcc_builder_default_alloc@@Base+0xe8>
  405a85:	mov    rax,QWORD PTR [rbp-0x20]
  405a89:	mov    rax,QWORD PTR [rax+0x8]
  405a8d:	shr    rax,1
  405a90:	cmp    rax,QWORD PTR [rbp-0x10]
  405a94:	jb     405aa0 <flatcc_builder_default_alloc@@Base+0xe8>
  405a96:	mov    eax,0x0
  405a9b:	jmp    405b23 <flatcc_builder_default_alloc@@Base+0x16b>
  405aa0:	mov    rax,QWORD PTR [rbp-0x20]
  405aa4:	mov    rax,QWORD PTR [rax]
  405aa7:	mov    rdx,QWORD PTR [rbp-0x10]
  405aab:	mov    rsi,rdx
  405aae:	mov    rdi,rax
  405ab1:	call   4030f0 <realloc@plt>
  405ab6:	mov    QWORD PTR [rbp-0x8],rax
  405aba:	cmp    QWORD PTR [rbp-0x8],0x0
  405abf:	jne    405ac8 <flatcc_builder_default_alloc@@Base+0x110>
  405ac1:	mov    eax,0xffffffff
  405ac6:	jmp    405b23 <flatcc_builder_default_alloc@@Base+0x16b>
  405ac8:	cmp    DWORD PTR [rbp-0x2c],0x0
  405acc:	je     405b07 <flatcc_builder_default_alloc@@Base+0x14f>
  405ace:	mov    rax,QWORD PTR [rbp-0x20]
  405ad2:	mov    rax,QWORD PTR [rax+0x8]
  405ad6:	cmp    rax,QWORD PTR [rbp-0x10]
  405ada:	jae    405b07 <flatcc_builder_default_alloc@@Base+0x14f>
  405adc:	mov    rax,QWORD PTR [rbp-0x20]
  405ae0:	mov    rax,QWORD PTR [rax+0x8]
  405ae4:	mov    rdx,QWORD PTR [rbp-0x10]
  405ae8:	sub    rdx,rax
  405aeb:	mov    rax,QWORD PTR [rbp-0x20]
  405aef:	mov    rcx,QWORD PTR [rax+0x8]
  405af3:	mov    rax,QWORD PTR [rbp-0x8]
  405af7:	add    rax,rcx
  405afa:	mov    esi,0x0
  405aff:	mov    rdi,rax
  405b02:	call   403090 <memset@plt>
  405b07:	mov    rax,QWORD PTR [rbp-0x20]
  405b0b:	mov    rdx,QWORD PTR [rbp-0x8]
  405b0f:	mov    QWORD PTR [rax],rdx
  405b12:	mov    rax,QWORD PTR [rbp-0x20]
  405b16:	mov    rdx,QWORD PTR [rbp-0x10]
  405b1a:	mov    QWORD PTR [rax+0x8],rdx
  405b1e:	mov    eax,0x0
  405b23:	leave  
  405b24:	ret    
  405b25:	push   rbp
  405b26:	mov    rbp,rsp
  405b29:	mov    QWORD PTR [rbp-0x18],rdi
  405b2d:	mov    DWORD PTR [rbp-0x1c],esi
  405b30:	mov    rax,QWORD PTR [rbp-0x18]
  405b34:	add    rax,0x58
  405b38:	add    rax,0x10
  405b3c:	mov    QWORD PTR [rbp-0x8],rax
  405b40:	mov    rax,QWORD PTR [rbp-0x18]
  405b44:	mov    rdx,QWORD PTR [rax+0x68]
  405b48:	mov    rax,QWORD PTR [rbp-0x18]
  405b4c:	mov    eax,DWORD PTR [rax+0x28]
  405b4f:	mov    eax,eax
  405b51:	add    rdx,rax
  405b54:	mov    rax,QWORD PTR [rbp-0x18]
  405b58:	mov    QWORD PTR [rax+0x18],rdx
  405b5c:	mov    rax,QWORD PTR [rbp-0x8]
  405b60:	mov    rax,QWORD PTR [rax+0x8]
  405b64:	mov    edx,eax
  405b66:	mov    rax,QWORD PTR [rbp-0x18]
  405b6a:	mov    eax,DWORD PTR [rax+0x28]
  405b6d:	sub    edx,eax
  405b6f:	mov    rax,QWORD PTR [rbp-0x18]
  405b73:	mov    DWORD PTR [rax+0x24],edx
  405b76:	mov    rax,QWORD PTR [rbp-0x18]
  405b7a:	mov    eax,DWORD PTR [rax+0x24]
  405b7d:	cmp    eax,DWORD PTR [rbp-0x1c]
  405b80:	jbe    405b8c <flatcc_builder_default_alloc@@Base+0x1d4>
  405b82:	mov    rax,QWORD PTR [rbp-0x18]
  405b86:	mov    edx,DWORD PTR [rbp-0x1c]
  405b89:	mov    DWORD PTR [rax+0x24],edx
  405b8c:	mov    rax,QWORD PTR [rbp-0x18]
  405b90:	mov    rax,QWORD PTR [rax+0x30]
  405b94:	mov    edx,DWORD PTR [rbp-0x1c]
  405b97:	mov    DWORD PTR [rax+0x4],edx
  405b9a:	nop
  405b9b:	pop    rbp
  405b9c:	ret    
  405b9d:	push   rbp
  405b9e:	mov    rbp,rsp
  405ba1:	sub    rsp,0x30
  405ba5:	mov    QWORD PTR [rbp-0x18],rdi
  405ba9:	mov    QWORD PTR [rbp-0x20],rsi
  405bad:	mov    DWORD PTR [rbp-0x24],edx
  405bb0:	mov    rax,QWORD PTR [rbp-0x18]
  405bb4:	add    rax,0x58
  405bb8:	add    rax,0x10
  405bbc:	mov    QWORD PTR [rbp-0x8],rax
  405bc0:	mov    rax,QWORD PTR [rbp-0x18]
  405bc4:	mov    rax,QWORD PTR [rax+0x50]
  405bc8:	mov    rdx,QWORD PTR [rbp-0x18]
  405bcc:	mov    edx,DWORD PTR [rdx+0x28]
  405bcf:	mov    ecx,edx
  405bd1:	mov    rdx,QWORD PTR [rbp-0x20]
  405bd5:	lea    r9,[rcx+rdx*1]
  405bd9:	mov    rdx,QWORD PTR [rbp-0x18]
  405bdd:	mov    rdi,QWORD PTR [rdx+0x40]
  405be1:	mov    rsi,QWORD PTR [rbp-0x8]
  405be5:	mov    r8d,0x1
  405beb:	mov    ecx,0x1
  405bf0:	mov    rdx,r9
  405bf3:	call   rax
  405bf5:	test   eax,eax
  405bf7:	je     405c00 <flatcc_builder_default_alloc@@Base+0x248>
  405bf9:	mov    eax,0xffffffff
  405bfe:	jmp    405c16 <flatcc_builder_default_alloc@@Base+0x25e>
  405c00:	mov    edx,DWORD PTR [rbp-0x24]
  405c03:	mov    rax,QWORD PTR [rbp-0x18]
  405c07:	mov    esi,edx
  405c09:	mov    rdi,rax
  405c0c:	call   405b25 <flatcc_builder_default_alloc@@Base+0x16d>
  405c11:	mov    eax,0x0
  405c16:	leave  
  405c17:	ret    
  405c18:	push   rbp
  405c19:	mov    rbp,rsp
  405c1c:	sub    rsp,0x20
  405c20:	mov    QWORD PTR [rbp-0x18],rdi
  405c24:	mov    DWORD PTR [rbp-0x1c],esi
  405c27:	mov    rax,QWORD PTR [rbp-0x18]
  405c2b:	mov    eax,DWORD PTR [rax+0x20]
  405c2e:	mov    eax,eax
  405c30:	mov    QWORD PTR [rbp-0x8],rax
  405c34:	mov    rax,QWORD PTR [rbp-0x18]
  405c38:	mov    edx,DWORD PTR [rax+0x20]
  405c3b:	mov    eax,DWORD PTR [rbp-0x1c]
  405c3e:	add    edx,eax
  405c40:	mov    rax,QWORD PTR [rbp-0x18]
  405c44:	mov    DWORD PTR [rax+0x20],edx
  405c47:	mov    rax,QWORD PTR [rbp-0x18]
  405c4b:	mov    edx,DWORD PTR [rax+0x20]
  405c4e:	mov    rax,QWORD PTR [rbp-0x18]
  405c52:	mov    eax,DWORD PTR [rax+0x24]
  405c55:	cmp    edx,eax
  405c57:	jb     405c84 <flatcc_builder_default_alloc@@Base+0x2cc>
  405c59:	mov    rax,QWORD PTR [rbp-0x18]
  405c5d:	mov    eax,DWORD PTR [rax+0x20]
  405c60:	add    eax,0x1
  405c63:	mov    ecx,eax
  405c65:	mov    rax,QWORD PTR [rbp-0x18]
  405c69:	mov    edx,0xfffffffc
  405c6e:	mov    rsi,rcx
  405c71:	mov    rdi,rax
  405c74:	call   405b9d <flatcc_builder_default_alloc@@Base+0x1e5>
  405c79:	test   eax,eax
  405c7b:	je     405c84 <flatcc_builder_default_alloc@@Base+0x2cc>
  405c7d:	mov    eax,0x0
  405c82:	jmp    405c93 <flatcc_builder_default_alloc@@Base+0x2db>
  405c84:	mov    rax,QWORD PTR [rbp-0x18]
  405c88:	mov    rdx,QWORD PTR [rax+0x18]
  405c8c:	mov    rax,QWORD PTR [rbp-0x8]
  405c90:	add    rax,rdx
  405c93:	leave  
  405c94:	ret    
  405c95:	push   rbp
  405c96:	mov    rbp,rsp
  405c99:	sub    rsp,0x10
  405c9d:	mov    QWORD PTR [rbp-0x8],rdi
  405ca1:	mov    DWORD PTR [rbp-0xc],esi
  405ca4:	mov    rax,QWORD PTR [rbp-0x8]
  405ca8:	mov    eax,DWORD PTR [rax+0x20]
  405cab:	sub    eax,DWORD PTR [rbp-0xc]
  405cae:	mov    edx,eax
  405cb0:	mov    rax,QWORD PTR [rbp-0x8]
  405cb4:	mov    DWORD PTR [rax+0x20],edx
  405cb7:	mov    eax,DWORD PTR [rbp-0xc]
  405cba:	mov    rdx,QWORD PTR [rbp-0x8]
  405cbe:	mov    rcx,QWORD PTR [rdx+0x18]
  405cc2:	mov    rdx,QWORD PTR [rbp-0x8]
  405cc6:	mov    edx,DWORD PTR [rdx+0x20]
  405cc9:	mov    edx,edx
  405ccb:	add    rcx,rdx
  405cce:	mov    rdx,rax
  405cd1:	mov    esi,0x0
  405cd6:	mov    rdi,rcx
  405cd9:	call   403090 <memset@plt>
  405cde:	nop
  405cdf:	leave  
  405ce0:	ret    
  405ce1:	push   rbp
  405ce2:	mov    rbp,rsp
  405ce5:	sub    rsp,0x30
  405ce9:	mov    QWORD PTR [rbp-0x18],rdi
  405ced:	mov    QWORD PTR [rbp-0x20],rsi
  405cf1:	mov    DWORD PTR [rbp-0x24],edx
  405cf4:	mov    edx,DWORD PTR [rbp-0x24]
  405cf7:	mov    rax,QWORD PTR [rbp-0x18]
  405cfb:	mov    esi,edx
  405cfd:	mov    rdi,rax
  405d00:	call   405c18 <flatcc_builder_default_alloc@@Base+0x260>
  405d05:	mov    QWORD PTR [rbp-0x8],rax
  405d09:	cmp    QWORD PTR [rbp-0x8],0x0
  405d0e:	jne    405d17 <flatcc_builder_default_alloc@@Base+0x35f>
  405d10:	mov    eax,0x0
  405d15:	jmp    405d31 <flatcc_builder_default_alloc@@Base+0x379>
  405d17:	mov    edx,DWORD PTR [rbp-0x24]
  405d1a:	mov    rcx,QWORD PTR [rbp-0x20]
  405d1e:	mov    rax,QWORD PTR [rbp-0x8]
  405d22:	mov    rsi,rcx
  405d25:	mov    rdi,rax
  405d28:	call   4030d0 <memcpy@plt>
  405d2d:	mov    rax,QWORD PTR [rbp-0x8]
  405d31:	leave  
  405d32:	ret    
  405d33:	push   rbp
  405d34:	mov    rbp,rsp
  405d37:	sub    rsp,0x30
  405d3b:	mov    QWORD PTR [rbp-0x18],rdi
  405d3f:	mov    DWORD PTR [rbp-0x1c],esi
  405d42:	mov    eax,ecx
  405d44:	mov    WORD PTR [rbp-0x20],dx
  405d48:	mov    WORD PTR [rbp-0x24],ax
  405d4c:	mov    rax,QWORD PTR [rbp-0x18]
  405d50:	mov    edx,DWORD PTR [rax+0x20]
  405d53:	movzx  eax,WORD PTR [rbp-0x20]
  405d57:	add    eax,edx
  405d59:	lea    edx,[rax-0x1]
  405d5c:	movzx  eax,WORD PTR [rbp-0x20]
  405d60:	neg    eax
  405d62:	and    eax,edx
  405d64:	mov    DWORD PTR [rbp-0x4],eax
  405d67:	mov    edx,DWORD PTR [rbp-0x4]
  405d6a:	mov    eax,DWORD PTR [rbp-0x1c]
  405d6d:	add    edx,eax
  405d6f:	mov    rax,QWORD PTR [rbp-0x18]
  405d73:	mov    DWORD PTR [rax+0x20],edx
  405d76:	mov    rax,QWORD PTR [rbp-0x18]
  405d7a:	mov    edx,DWORD PTR [rax+0x20]
  405d7d:	mov    rax,QWORD PTR [rbp-0x18]
  405d81:	mov    eax,DWORD PTR [rax+0x24]
  405d84:	cmp    edx,eax
  405d86:	jb     405db3 <flatcc_builder_default_alloc@@Base+0x3fb>
  405d88:	mov    rax,QWORD PTR [rbp-0x18]
  405d8c:	mov    eax,DWORD PTR [rax+0x20]
  405d8f:	add    eax,0x1
  405d92:	mov    ecx,eax
  405d94:	mov    rax,QWORD PTR [rbp-0x18]
  405d98:	mov    edx,0xfffc
  405d9d:	mov    rsi,rcx
  405da0:	mov    rdi,rax
  405da3:	call   405b9d <flatcc_builder_default_alloc@@Base+0x1e5>
  405da8:	test   eax,eax
  405daa:	je     405db3 <flatcc_builder_default_alloc@@Base+0x3fb>
  405dac:	mov    eax,0x0
  405db1:	jmp    405df9 <flatcc_builder_default_alloc@@Base+0x441>
  405db3:	mov    rax,QWORD PTR [rbp-0x18]
  405db7:	mov    rax,QWORD PTR [rax+0x8]
  405dbb:	movzx  edx,WORD PTR [rbp-0x24]
  405dbf:	add    rdx,rdx
  405dc2:	add    rax,rdx
  405dc5:	mov    edx,DWORD PTR [rbp-0x4]
  405dc8:	add    edx,0x4
  405dcb:	mov    WORD PTR [rax],dx
  405dce:	mov    rax,QWORD PTR [rbp-0x18]
  405dd2:	movzx  eax,WORD PTR [rax+0x10]
  405dd6:	cmp    ax,WORD PTR [rbp-0x24]
  405dda:	ja     405deb <flatcc_builder_default_alloc@@Base+0x433>
  405ddc:	movzx  eax,WORD PTR [rbp-0x24]
  405de0:	lea    edx,[rax+0x1]
  405de3:	mov    rax,QWORD PTR [rbp-0x18]
  405de7:	mov    WORD PTR [rax+0x10],dx
  405deb:	mov    rax,QWORD PTR [rbp-0x18]
  405def:	mov    rdx,QWORD PTR [rax+0x18]
  405df3:	mov    eax,DWORD PTR [rbp-0x4]
  405df6:	add    rax,rdx
  405df9:	leave  
  405dfa:	ret    
  405dfb:	push   rbp
  405dfc:	mov    rbp,rsp
  405dff:	sub    rsp,0x20
  405e03:	mov    QWORD PTR [rbp-0x18],rdi
  405e07:	mov    eax,esi
  405e09:	mov    WORD PTR [rbp-0x1c],ax
  405e0d:	mov    rax,QWORD PTR [rbp-0x18]
  405e11:	mov    eax,DWORD PTR [rax+0x20]
  405e14:	add    eax,0x3
  405e17:	and    eax,0xfffffffc
  405e1a:	mov    DWORD PTR [rbp-0x4],eax
  405e1d:	mov    eax,DWORD PTR [rbp-0x4]
  405e20:	lea    edx,[rax+0x4]
  405e23:	mov    rax,QWORD PTR [rbp-0x18]
  405e27:	mov    DWORD PTR [rax+0x20],edx
  405e2a:	mov    rax,QWORD PTR [rbp-0x18]
  405e2e:	mov    edx,DWORD PTR [rax+0x20]
  405e31:	mov    rax,QWORD PTR [rbp-0x18]
  405e35:	mov    eax,DWORD PTR [rax+0x24]
  405e38:	cmp    edx,eax
  405e3a:	jbe    405e64 <flatcc_builder_default_alloc@@Base+0x4ac>
  405e3c:	mov    rax,QWORD PTR [rbp-0x18]
  405e40:	mov    eax,DWORD PTR [rax+0x20]
  405e43:	mov    ecx,eax
  405e45:	mov    rax,QWORD PTR [rbp-0x18]
  405e49:	mov    edx,0xfffc
  405e4e:	mov    rsi,rcx
  405e51:	mov    rdi,rax
  405e54:	call   405b9d <flatcc_builder_default_alloc@@Base+0x1e5>
  405e59:	test   eax,eax
  405e5b:	je     405e64 <flatcc_builder_default_alloc@@Base+0x4ac>
  405e5d:	mov    eax,0x0
  405e62:	jmp    405ec2 <flatcc_builder_default_alloc@@Base+0x50a>
  405e64:	mov    rax,QWORD PTR [rbp-0x18]
  405e68:	mov    rax,QWORD PTR [rax+0x8]
  405e6c:	movzx  edx,WORD PTR [rbp-0x1c]
  405e70:	add    rdx,rdx
  405e73:	add    rax,rdx
  405e76:	mov    edx,DWORD PTR [rbp-0x4]
  405e79:	add    edx,0x4
  405e7c:	mov    WORD PTR [rax],dx
  405e7f:	mov    rax,QWORD PTR [rbp-0x18]
  405e83:	movzx  eax,WORD PTR [rax+0x10]
  405e87:	cmp    ax,WORD PTR [rbp-0x1c]
  405e8b:	ja     405e9c <flatcc_builder_default_alloc@@Base+0x4e4>
  405e8d:	movzx  eax,WORD PTR [rbp-0x1c]
  405e91:	lea    edx,[rax+0x1]
  405e94:	mov    rax,QWORD PTR [rbp-0x18]
  405e98:	mov    WORD PTR [rax+0x10],dx
  405e9c:	mov    rax,QWORD PTR [rbp-0x18]
  405ea0:	mov    rax,QWORD PTR [rax]
  405ea3:	lea    rcx,[rax+0x2]
  405ea7:	mov    rdx,QWORD PTR [rbp-0x18]
  405eab:	mov    QWORD PTR [rdx],rcx
  405eae:	mov    edx,DWORD PTR [rbp-0x4]
  405eb1:	mov    WORD PTR [rax],dx
  405eb4:	mov    rax,QWORD PTR [rbp-0x18]
  405eb8:	mov    rdx,QWORD PTR [rax+0x18]
  405ebc:	mov    eax,DWORD PTR [rbp-0x4]
  405ebf:	add    rax,rdx
  405ec2:	leave  
  405ec3:	ret    
  405ec4:	push   rbp
  405ec5:	mov    rbp,rsp
  405ec8:	sub    rsp,0x30
  405ecc:	mov    QWORD PTR [rbp-0x18],rdi
  405ed0:	mov    DWORD PTR [rbp-0x1c],esi
  405ed3:	mov    QWORD PTR [rbp-0x28],rdx
  405ed7:	mov    QWORD PTR [rbp-0x30],rcx
  405edb:	mov    DWORD PTR [rbp-0x20],r8d
  405edf:	mov    rax,QWORD PTR [rbp-0x18]
  405ee3:	lea    rdx,[rax+0x58]
  405ee7:	mov    eax,DWORD PTR [rbp-0x1c]
  405eea:	cdqe   
  405eec:	shl    rax,0x4
  405ef0:	add    rax,rdx
  405ef3:	mov    QWORD PTR [rbp-0x8],rax
  405ef7:	mov    rdx,QWORD PTR [rbp-0x28]
  405efb:	mov    rax,QWORD PTR [rbp-0x30]
  405eff:	add    rdx,rax
  405f02:	mov    rax,QWORD PTR [rbp-0x8]
  405f06:	mov    rax,QWORD PTR [rax+0x8]
  405f0a:	cmp    rdx,rax
  405f0d:	jbe    405f62 <flatcc_builder_default_alloc@@Base+0x5aa>
  405f0f:	mov    rax,QWORD PTR [rbp-0x18]
  405f13:	mov    rax,QWORD PTR [rax+0x50]
  405f17:	mov    rcx,QWORD PTR [rbp-0x28]
  405f1b:	mov    rdx,QWORD PTR [rbp-0x30]
  405f1f:	lea    r9,[rcx+rdx*1]
  405f23:	mov    rdx,QWORD PTR [rbp-0x18]
  405f27:	mov    rdi,QWORD PTR [rdx+0x40]
  405f2b:	mov    ecx,DWORD PTR [rbp-0x1c]
  405f2e:	mov    edx,DWORD PTR [rbp-0x20]
  405f31:	mov    rsi,QWORD PTR [rbp-0x8]
  405f35:	mov    r8d,ecx
  405f38:	mov    ecx,edx
  405f3a:	mov    rdx,r9
  405f3d:	call   rax
  405f3f:	test   eax,eax
  405f41:	je     405f62 <flatcc_builder_default_alloc@@Base+0x5aa>
  405f43:	lea    rcx,[rip+0x6dce]        # 40cd18 <flatcc_builder_padding_base@@Base+0x658>
  405f4a:	mov    edx,0x134
  405f4f:	lea    rsi,[rip+0x696a]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  405f56:	lea    rdi,[rip+0x69c3]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  405f5d:	call   403080 <__assert_fail@plt>
  405f62:	mov    rax,QWORD PTR [rbp-0x8]
  405f66:	mov    rax,QWORD PTR [rax]
  405f69:	mov    rdx,rax
  405f6c:	mov    rax,QWORD PTR [rbp-0x28]
  405f70:	add    rax,rdx
  405f73:	leave  
  405f74:	ret    
  405f75:	push   rbp
  405f76:	mov    rbp,rsp
  405f79:	sub    rsp,0x20
  405f7d:	mov    QWORD PTR [rbp-0x18],rdi
  405f81:	mov    DWORD PTR [rbp-0x1c],esi
  405f84:	mov    rax,QWORD PTR [rbp-0x18]
  405f88:	mov    rax,QWORD PTR [rax+0x30]
  405f8c:	mov    edx,DWORD PTR [rax+0x10]
  405f8f:	mov    rax,QWORD PTR [rbp-0x18]
  405f93:	mov    rax,QWORD PTR [rax+0x30]
  405f97:	movzx  eax,WORD PTR [rax+0x1c]
  405f9b:	movzx  eax,ax
  405f9e:	add    eax,eax
  405fa0:	add    eax,edx
  405fa2:	mov    DWORD PTR [rbp-0x8],eax
  405fa5:	mov    eax,DWORD PTR [rbp-0x1c]
  405fa8:	add    eax,0x2
  405fab:	cdqe   
  405fad:	add    eax,eax
  405faf:	mov    DWORD PTR [rbp-0x4],eax
  405fb2:	mov    ecx,DWORD PTR [rbp-0x4]
  405fb5:	mov    edx,DWORD PTR [rbp-0x8]
  405fb8:	mov    rax,QWORD PTR [rbp-0x18]
  405fbc:	mov    r8d,0x1
  405fc2:	mov    esi,0x0
  405fc7:	mov    rdi,rax
  405fca:	call   405ec4 <flatcc_builder_default_alloc@@Base+0x50c>
  405fcf:	mov    rdx,rax
  405fd2:	mov    rax,QWORD PTR [rbp-0x18]
  405fd6:	mov    QWORD PTR [rax+0x8],rdx
  405fda:	mov    rax,QWORD PTR [rbp-0x18]
  405fde:	mov    rax,QWORD PTR [rax+0x8]
  405fe2:	test   rax,rax
  405fe5:	jne    405fee <flatcc_builder_default_alloc@@Base+0x636>
  405fe7:	mov    eax,0xffffffff
  405fec:	jmp    40605c <flatcc_builder_default_alloc@@Base+0x6a4>
  405fee:	mov    rax,QWORD PTR [rbp-0x18]
  405ff2:	mov    rax,QWORD PTR [rax+0x8]
  405ff6:	lea    rdx,[rax+0x4]
  405ffa:	mov    rax,QWORD PTR [rbp-0x18]
  405ffe:	mov    QWORD PTR [rax+0x8],rdx
  406002:	mov    rax,QWORD PTR [rbp-0x18]
  406006:	mov    rax,QWORD PTR [rax+0x30]
  40600a:	mov    eax,DWORD PTR [rax+0x14]
  40600d:	mov    DWORD PTR [rbp-0x8],eax
  406010:	mov    eax,DWORD PTR [rbp-0x1c]
  406013:	cdqe   
  406015:	add    eax,eax
  406017:	add    eax,0x1
  40601a:	mov    DWORD PTR [rbp-0x4],eax
  40601d:	mov    ecx,DWORD PTR [rbp-0x4]
  406020:	mov    edx,DWORD PTR [rbp-0x8]
  406023:	mov    rax,QWORD PTR [rbp-0x18]
  406027:	mov    r8d,0x0
  40602d:	mov    esi,0x3
  406032:	mov    rdi,rax
  406035:	call   405ec4 <flatcc_builder_default_alloc@@Base+0x50c>
  40603a:	mov    rdx,rax
  40603d:	mov    rax,QWORD PTR [rbp-0x18]
  406041:	mov    QWORD PTR [rax],rdx
  406044:	mov    rax,QWORD PTR [rbp-0x18]
  406048:	mov    rax,QWORD PTR [rax]
  40604b:	test   rax,rax
  40604e:	jne    406057 <flatcc_builder_default_alloc@@Base+0x69f>
  406050:	mov    eax,0xffffffff
  406055:	jmp    40605c <flatcc_builder_default_alloc@@Base+0x6a4>
  406057:	mov    eax,0x0
  40605c:	leave  
  40605d:	ret    
  40605e:	push   rbp
  40605f:	mov    rbp,rsp
  406062:	sub    rsp,0x30
  406066:	mov    QWORD PTR [rbp-0x28],rdi
  40606a:	mov    rax,QWORD PTR [rbp-0x28]
  40606e:	add    rax,0x58
  406072:	add    rax,0x50
  406076:	mov    QWORD PTR [rbp-0x8],rax
  40607a:	mov    rax,QWORD PTR [rbp-0x28]
  40607e:	mov    eax,DWORD PTR [rax+0xe4]
  406084:	test   eax,eax
  406086:	je     4060a7 <flatcc_builder_default_alloc@@Base+0x6ef>
  406088:	lea    rcx,[rip+0x6c79]        # 40cd08 <flatcc_builder_padding_base@@Base+0x648>
  40608f:	mov    edx,0x156
  406094:	lea    rsi,[rip+0x6825]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40609b:	lea    rdi,[rip+0x6880]        # 40c922 <flatcc_builder_padding_base@@Base+0x262>
  4060a2:	call   403080 <__assert_fail@plt>
  4060a7:	mov    rax,QWORD PTR [rbp-0x28]
  4060ab:	mov    eax,DWORD PTR [rax+0xe4]
  4060b1:	mov    edx,eax
  4060b3:	mov    rax,QWORD PTR [rbp-0x28]
  4060b7:	mov    r8d,0x0
  4060bd:	mov    ecx,0x10
  4060c2:	mov    esi,0x6
  4060c7:	mov    rdi,rax
  4060ca:	call   405ec4 <flatcc_builder_default_alloc@@Base+0x50c>
  4060cf:	test   rax,rax
  4060d2:	jne    4060de <flatcc_builder_default_alloc@@Base+0x726>
  4060d4:	mov    eax,0xffffffff
  4060d9:	jmp    406180 <flatcc_builder_default_alloc@@Base+0x7c8>
  4060de:	mov    rax,QWORD PTR [rbp-0x28]
  4060e2:	mov    DWORD PTR [rax+0xe4],0x10
  4060ec:	mov    QWORD PTR [rbp-0x18],0x100
  4060f4:	mov    rax,QWORD PTR [rbp-0x28]
  4060f8:	mov    rax,QWORD PTR [rax+0x50]
  4060fc:	mov    rdx,QWORD PTR [rbp-0x28]
  406100:	mov    rdi,QWORD PTR [rdx+0x40]
  406104:	mov    rdx,QWORD PTR [rbp-0x18]
  406108:	mov    rsi,QWORD PTR [rbp-0x8]
  40610c:	mov    r8d,0x5
  406112:	mov    ecx,0x1
  406117:	call   rax
  406119:	test   eax,eax
  40611b:	je     406128 <flatcc_builder_default_alloc@@Base+0x770>
  40611d:	mov    eax,0xffffffff
  406122:	jmp    406180 <flatcc_builder_default_alloc@@Base+0x7c8>
  406124:	shl    QWORD PTR [rbp-0x18],1
  406128:	mov    rax,QWORD PTR [rbp-0x18]
  40612c:	lea    rdx,[rax+rax*1]
  406130:	mov    rax,QWORD PTR [rbp-0x8]
  406134:	mov    rax,QWORD PTR [rax+0x8]
  406138:	cmp    rdx,rax
  40613b:	jbe    406124 <flatcc_builder_default_alloc@@Base+0x76c>
  40613d:	mov    rax,QWORD PTR [rbp-0x18]
  406141:	shr    rax,0x2
  406145:	mov    QWORD PTR [rbp-0x18],rax
  406149:	mov    QWORD PTR [rbp-0x10],0x0
  406151:	jmp    406158 <flatcc_builder_default_alloc@@Base+0x7a0>
  406153:	add    QWORD PTR [rbp-0x10],0x1
  406158:	mov    rax,QWORD PTR [rbp-0x10]
  40615c:	mov    edx,0x1
  406161:	shlx   rax,rdx,rax
  406166:	cmp    rax,QWORD PTR [rbp-0x18]
  40616a:	jb     406153 <flatcc_builder_default_alloc@@Base+0x79b>
  40616c:	mov    rax,QWORD PTR [rbp-0x28]
  406170:	mov    rdx,QWORD PTR [rbp-0x10]
  406174:	mov    QWORD PTR [rax+0xd8],rdx
  40617b:	mov    eax,0x0
  406180:	leave  
  406181:	ret    
  406182:	push   rbp
  406183:	mov    rbp,rsp
  406186:	sub    rsp,0x20
  40618a:	mov    QWORD PTR [rbp-0x18],rdi
  40618e:	mov    DWORD PTR [rbp-0x1c],esi
  406191:	mov    rax,QWORD PTR [rbp-0x18]
  406195:	mov    rax,QWORD PTR [rax+0xd8]
  40619c:	test   rax,rax
  40619f:	jne    4061b8 <flatcc_builder_default_alloc@@Base+0x800>
  4061a1:	mov    rax,QWORD PTR [rbp-0x18]
  4061a5:	mov    rdi,rax
  4061a8:	call   40605e <flatcc_builder_default_alloc@@Base+0x6a6>
  4061ad:	test   eax,eax
  4061af:	je     4061b8 <flatcc_builder_default_alloc@@Base+0x800>
  4061b1:	mov    eax,0x0
  4061b6:	jmp    4061f4 <flatcc_builder_default_alloc@@Base+0x83c>
  4061b8:	mov    rax,QWORD PTR [rbp-0x18]
  4061bc:	mov    rax,QWORD PTR [rax+0xa8]
  4061c3:	mov    QWORD PTR [rbp-0x8],rax
  4061c7:	mov    rax,QWORD PTR [rbp-0x18]
  4061cb:	mov    rax,QWORD PTR [rax+0xd8]
  4061d2:	mov    edx,0x20
  4061d7:	sub    edx,eax
  4061d9:	mov    eax,edx
  4061db:	mov    edx,DWORD PTR [rbp-0x1c]
  4061de:	shrx   eax,edx,eax
  4061e3:	mov    eax,eax
  4061e5:	lea    rdx,[rax*4+0x0]
  4061ed:	mov    rax,QWORD PTR [rbp-0x8]
  4061f1:	add    rax,rdx
  4061f4:	leave  
  4061f5:	ret    

00000000004061f6 <flatcc_builder_flush_vtable_cache@@Base>:
  4061f6:	push   rbp
  4061f7:	mov    rbp,rsp
  4061fa:	sub    rsp,0x20
  4061fe:	mov    QWORD PTR [rbp-0x18],rdi
  406202:	mov    rax,QWORD PTR [rbp-0x18]
  406206:	add    rax,0x58
  40620a:	add    rax,0x50
  40620e:	mov    QWORD PTR [rbp-0x8],rax
  406212:	mov    rax,QWORD PTR [rbp-0x18]
  406216:	mov    rax,QWORD PTR [rax+0xd8]
  40621d:	test   rax,rax
  406220:	je     40625c <flatcc_builder_flush_vtable_cache@@Base+0x66>
  406222:	mov    rax,QWORD PTR [rbp-0x8]
  406226:	mov    rdx,QWORD PTR [rax+0x8]
  40622a:	mov    rax,QWORD PTR [rbp-0x8]
  40622e:	mov    rax,QWORD PTR [rax]
  406231:	mov    esi,0x0
  406236:	mov    rdi,rax
  406239:	call   403090 <memset@plt>
  40623e:	mov    rax,QWORD PTR [rbp-0x18]
  406242:	mov    DWORD PTR [rax+0xe4],0x10
  40624c:	mov    rax,QWORD PTR [rbp-0x18]
  406250:	mov    DWORD PTR [rax+0xe0],0x0
  40625a:	jmp    40625d <flatcc_builder_flush_vtable_cache@@Base+0x67>
  40625c:	nop
  40625d:	leave  
  40625e:	ret    

000000000040625f <flatcc_builder_custom_init@@Base>:
  40625f:	push   rbp
  406260:	mov    rbp,rsp
  406263:	sub    rsp,0x30
  406267:	mov    QWORD PTR [rbp-0x8],rdi
  40626b:	mov    QWORD PTR [rbp-0x10],rsi
  40626f:	mov    QWORD PTR [rbp-0x18],rdx
  406273:	mov    QWORD PTR [rbp-0x20],rcx
  406277:	mov    QWORD PTR [rbp-0x28],r8
  40627b:	mov    rax,QWORD PTR [rbp-0x8]
  40627f:	mov    edx,0x188
  406284:	mov    esi,0x0
  406289:	mov    rdi,rax
  40628c:	call   403090 <memset@plt>
  406291:	cmp    QWORD PTR [rbp-0x10],0x0
  406296:	jne    4062bf <flatcc_builder_custom_init@@Base+0x60>
  406298:	mov    rax,QWORD PTR [rbp-0x8]
  40629c:	mov    DWORD PTR [rax+0x128],0x1
  4062a6:	mov    rax,0x40b692
  4062ad:	mov    QWORD PTR [rbp-0x10],rax
  4062b1:	mov    rax,QWORD PTR [rbp-0x8]
  4062b5:	add    rax,0x130
  4062bb:	mov    QWORD PTR [rbp-0x18],rax
  4062bf:	cmp    QWORD PTR [rbp-0x20],0x0
  4062c4:	jne    4062d1 <flatcc_builder_custom_init@@Base+0x72>
  4062c6:	mov    rax,0x4059b8
  4062cd:	mov    QWORD PTR [rbp-0x20],rax
  4062d1:	mov    rax,QWORD PTR [rbp-0x8]
  4062d5:	mov    rdx,QWORD PTR [rbp-0x28]
  4062d9:	mov    QWORD PTR [rax+0x40],rdx
  4062dd:	mov    rax,QWORD PTR [rbp-0x8]
  4062e1:	mov    rdx,QWORD PTR [rbp-0x20]
  4062e5:	mov    QWORD PTR [rax+0x50],rdx
  4062e9:	mov    rax,QWORD PTR [rbp-0x8]
  4062ed:	mov    rdx,QWORD PTR [rbp-0x18]
  4062f1:	mov    QWORD PTR [rax+0x38],rdx
  4062f5:	mov    rax,QWORD PTR [rbp-0x8]
  4062f9:	mov    rdx,QWORD PTR [rbp-0x10]
  4062fd:	mov    QWORD PTR [rax+0x48],rdx
  406301:	mov    eax,0x0
  406306:	leave  
  406307:	ret    

0000000000406308 <flatcc_builder_init@@Base>:
  406308:	push   rbp
  406309:	mov    rbp,rsp
  40630c:	sub    rsp,0x10
  406310:	mov    QWORD PTR [rbp-0x8],rdi
  406314:	mov    rax,QWORD PTR [rbp-0x8]
  406318:	mov    r8d,0x0
  40631e:	mov    ecx,0x0
  406323:	mov    edx,0x0
  406328:	mov    esi,0x0
  40632d:	mov    rdi,rax
  406330:	call   40625f <flatcc_builder_custom_init@@Base>
  406335:	leave  
  406336:	ret    

0000000000406337 <flatcc_builder_custom_reset@@Base>:
  406337:	push   rbp
  406338:	mov    rbp,rsp
  40633b:	sub    rsp,0x20
  40633f:	mov    QWORD PTR [rbp-0x18],rdi
  406343:	mov    DWORD PTR [rbp-0x1c],esi
  406346:	mov    DWORD PTR [rbp-0x20],edx
  406349:	mov    DWORD PTR [rbp-0xc],0x0
  406350:	jmp    406407 <flatcc_builder_custom_reset@@Base+0xd0>
  406355:	mov    rax,QWORD PTR [rbp-0x18]
  406359:	lea    rdx,[rax+0x58]
  40635d:	mov    eax,DWORD PTR [rbp-0xc]
  406360:	cdqe   
  406362:	shl    rax,0x4
  406366:	add    rax,rdx
  406369:	mov    QWORD PTR [rbp-0x8],rax
  40636d:	mov    rax,QWORD PTR [rbp-0x8]
  406371:	mov    rax,QWORD PTR [rax]
  406374:	test   rax,rax
  406377:	je     4063d7 <flatcc_builder_custom_reset@@Base+0xa0>
  406379:	cmp    DWORD PTR [rbp-0xc],0x5
  40637d:	je     4063b9 <flatcc_builder_custom_reset@@Base+0x82>
  40637f:	cmp    DWORD PTR [rbp-0x20],0x0
  406383:	je     4063b9 <flatcc_builder_custom_reset@@Base+0x82>
  406385:	mov    rax,QWORD PTR [rbp-0x18]
  406389:	mov    rax,QWORD PTR [rax+0x50]
  40638d:	mov    rdx,QWORD PTR [rbp-0x18]
  406391:	mov    rdi,QWORD PTR [rdx+0x40]
  406395:	mov    edx,DWORD PTR [rbp-0xc]
  406398:	mov    rsi,QWORD PTR [rbp-0x8]
  40639c:	mov    r8d,edx
  40639f:	mov    ecx,0x1
  4063a4:	mov    edx,0x1
  4063a9:	call   rax
  4063ab:	test   eax,eax
  4063ad:	je     4063b9 <flatcc_builder_custom_reset@@Base+0x82>
  4063af:	mov    eax,0xffffffff
  4063b4:	jmp    406546 <flatcc_builder_custom_reset@@Base+0x20f>
  4063b9:	mov    rax,QWORD PTR [rbp-0x8]
  4063bd:	mov    rdx,QWORD PTR [rax+0x8]
  4063c1:	mov    rax,QWORD PTR [rbp-0x8]
  4063c5:	mov    rax,QWORD PTR [rax]
  4063c8:	mov    esi,0x0
  4063cd:	mov    rdi,rax
  4063d0:	call   403090 <memset@plt>
  4063d5:	jmp    406403 <flatcc_builder_custom_reset@@Base+0xcc>
  4063d7:	mov    rax,QWORD PTR [rbp-0x8]
  4063db:	mov    rax,QWORD PTR [rax+0x8]
  4063df:	test   rax,rax
  4063e2:	je     406403 <flatcc_builder_custom_reset@@Base+0xcc>
  4063e4:	lea    rcx,[rip+0x6945]        # 40cd30 <flatcc_builder_padding_base@@Base+0x670>
  4063eb:	mov    edx,0x1b2
  4063f0:	lea    rsi,[rip+0x64c9]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4063f7:	lea    rdi,[rip+0x6533]        # 40c931 <flatcc_builder_padding_base@@Base+0x271>
  4063fe:	call   403080 <__assert_fail@plt>
  406403:	add    DWORD PTR [rbp-0xc],0x1
  406407:	cmp    DWORD PTR [rbp-0xc],0x7
  40640b:	jle    406355 <flatcc_builder_custom_reset@@Base+0x1e>
  406411:	mov    rax,QWORD PTR [rbp-0x18]
  406415:	mov    DWORD PTR [rax+0xe0],0x0
  40641f:	mov    rax,QWORD PTR [rbp-0x18]
  406423:	mov    eax,DWORD PTR [rax+0xe4]
  406429:	test   eax,eax
  40642b:	je     40643b <flatcc_builder_custom_reset@@Base+0x104>
  40642d:	mov    rax,QWORD PTR [rbp-0x18]
  406431:	mov    DWORD PTR [rax+0xe4],0x10
  40643b:	mov    rax,QWORD PTR [rbp-0x18]
  40643f:	mov    WORD PTR [rax+0xe8],0x0
  406448:	mov    rax,QWORD PTR [rbp-0x18]
  40644c:	mov    DWORD PTR [rax+0xf0],0x0
  406456:	mov    rax,QWORD PTR [rbp-0x18]
  40645a:	mov    DWORD PTR [rax+0xf4],0x0
  406464:	mov    rax,QWORD PTR [rbp-0x18]
  406468:	mov    DWORD PTR [rax+0x104],0x0
  406472:	mov    rax,QWORD PTR [rbp-0x18]
  406476:	mov    DWORD PTR [rax+0x108],0x0
  406480:	mov    rax,QWORD PTR [rbp-0x18]
  406484:	mov    DWORD PTR [rax+0x20],0x0
  40648b:	mov    rax,QWORD PTR [rbp-0x18]
  40648f:	mov    DWORD PTR [rax+0x24],0x0
  406496:	mov    rax,QWORD PTR [rbp-0x18]
  40649a:	mov    DWORD PTR [rax+0xfc],0x0
  4064a4:	mov    rax,QWORD PTR [rbp-0x18]
  4064a8:	mov    DWORD PTR [rax+0x100],0x0
  4064b2:	mov    rax,QWORD PTR [rbp-0x18]
  4064b6:	mov    rdx,QWORD PTR [rax+0x68]
  4064ba:	mov    rax,QWORD PTR [rbp-0x18]
  4064be:	mov    QWORD PTR [rax+0x18],rdx
  4064c2:	mov    rax,QWORD PTR [rbp-0x18]
  4064c6:	mov    rdx,QWORD PTR [rax+0x88]
  4064cd:	mov    rax,QWORD PTR [rbp-0x18]
  4064d1:	mov    QWORD PTR [rax],rdx
  4064d4:	mov    rax,QWORD PTR [rbp-0x18]
  4064d8:	mov    rdx,QWORD PTR [rax+0x58]
  4064dc:	mov    rax,QWORD PTR [rbp-0x18]
  4064e0:	mov    QWORD PTR [rax+0x8],rdx
  4064e4:	mov    rax,QWORD PTR [rbp-0x18]
  4064e8:	mov    QWORD PTR [rax+0x30],0x0
  4064f0:	cmp    DWORD PTR [rbp-0x1c],0x0
  4064f4:	je     406521 <flatcc_builder_custom_reset@@Base+0x1ea>
  4064f6:	mov    rax,QWORD PTR [rbp-0x18]
  4064fa:	mov    QWORD PTR [rax+0x118],0x0
  406505:	mov    rax,QWORD PTR [rbp-0x18]
  406509:	mov    DWORD PTR [rax+0x120],0x0
  406513:	mov    rax,QWORD PTR [rbp-0x18]
  406517:	mov    DWORD PTR [rax+0x124],0x0
  406521:	mov    rax,QWORD PTR [rbp-0x18]
  406525:	mov    eax,DWORD PTR [rax+0x128]
  40652b:	test   eax,eax
  40652d:	je     406541 <flatcc_builder_custom_reset@@Base+0x20a>
  40652f:	mov    rax,QWORD PTR [rbp-0x18]
  406533:	add    rax,0x130
  406539:	mov    rdi,rax
  40653c:	call   40b477 <flatcc_emitter_reset@@Base>
  406541:	mov    eax,0x0
  406546:	leave  
  406547:	ret    

0000000000406548 <flatcc_builder_reset@@Base>:
  406548:	push   rbp
  406549:	mov    rbp,rsp
  40654c:	sub    rsp,0x10
  406550:	mov    QWORD PTR [rbp-0x8],rdi
  406554:	mov    rax,QWORD PTR [rbp-0x8]
  406558:	mov    edx,0x0
  40655d:	mov    esi,0x0
  406562:	mov    rdi,rax
  406565:	call   406337 <flatcc_builder_custom_reset@@Base>
  40656a:	leave  
  40656b:	ret    

000000000040656c <flatcc_builder_clear@@Base>:
  40656c:	push   rbp
  40656d:	mov    rbp,rsp
  406570:	sub    rsp,0x20
  406574:	mov    QWORD PTR [rbp-0x18],rdi
  406578:	mov    DWORD PTR [rbp-0xc],0x0
  40657f:	jmp    4065c3 <flatcc_builder_clear@@Base+0x57>
  406581:	mov    rax,QWORD PTR [rbp-0x18]
  406585:	lea    rdx,[rax+0x58]
  406589:	mov    eax,DWORD PTR [rbp-0xc]
  40658c:	cdqe   
  40658e:	shl    rax,0x4
  406592:	add    rax,rdx
  406595:	mov    QWORD PTR [rbp-0x8],rax
  406599:	mov    rax,QWORD PTR [rbp-0x18]
  40659d:	mov    rax,QWORD PTR [rax+0x50]
  4065a1:	mov    rdx,QWORD PTR [rbp-0x18]
  4065a5:	mov    rdi,QWORD PTR [rdx+0x40]
  4065a9:	mov    edx,DWORD PTR [rbp-0xc]
  4065ac:	mov    rsi,QWORD PTR [rbp-0x8]
  4065b0:	mov    r8d,edx
  4065b3:	mov    ecx,0x0
  4065b8:	mov    edx,0x0
  4065bd:	call   rax
  4065bf:	add    DWORD PTR [rbp-0xc],0x1
  4065c3:	cmp    DWORD PTR [rbp-0xc],0x7
  4065c7:	jle    406581 <flatcc_builder_clear@@Base+0x15>
  4065c9:	mov    rax,QWORD PTR [rbp-0x18]
  4065cd:	mov    eax,DWORD PTR [rax+0x128]
  4065d3:	test   eax,eax
  4065d5:	je     4065e9 <flatcc_builder_clear@@Base+0x7d>
  4065d7:	mov    rax,QWORD PTR [rbp-0x18]
  4065db:	add    rax,0x130
  4065e1:	mov    rdi,rax
  4065e4:	call   40b603 <flatcc_emitter_clear@@Base>
  4065e9:	mov    rax,QWORD PTR [rbp-0x18]
  4065ed:	mov    edx,0x188
  4065f2:	mov    esi,0x0
  4065f7:	mov    rdi,rax
  4065fa:	call   403090 <memset@plt>
  4065ff:	nop
  406600:	leave  
  406601:	ret    
  406602:	push   rbp
  406603:	mov    rbp,rsp
  406606:	mov    QWORD PTR [rbp-0x8],rdi
  40660a:	mov    eax,esi
  40660c:	mov    WORD PTR [rbp-0xc],ax
  406610:	mov    rax,QWORD PTR [rbp-0x8]
  406614:	movzx  eax,WORD PTR [rax+0xe8]
  40661b:	cmp    ax,WORD PTR [rbp-0xc]
  40661f:	jae    406630 <flatcc_builder_clear@@Base+0xc4>
  406621:	mov    rax,QWORD PTR [rbp-0x8]
  406625:	movzx  edx,WORD PTR [rbp-0xc]
  406629:	mov    WORD PTR [rax+0xe8],dx
  406630:	nop
  406631:	pop    rbp
  406632:	ret    
  406633:	push   rbp
  406634:	mov    rbp,rsp
  406637:	mov    QWORD PTR [rbp-0x8],rdi
  40663b:	mov    eax,esi
  40663d:	mov    WORD PTR [rbp-0xc],ax
  406641:	mov    rax,QWORD PTR [rbp-0x8]
  406645:	movzx  eax,WORD PTR [rax]
  406648:	cmp    ax,WORD PTR [rbp-0xc]
  40664c:	jae    406659 <flatcc_builder_clear@@Base+0xed>
  40664e:	mov    rax,QWORD PTR [rbp-0x8]
  406652:	movzx  edx,WORD PTR [rbp-0xc]
  406656:	mov    WORD PTR [rax],dx
  406659:	nop
  40665a:	pop    rbp
  40665b:	ret    

000000000040665c <flatcc_builder_enter_user_frame_ptr@@Base>:
  40665c:	push   rbp
  40665d:	mov    rbp,rsp
  406660:	sub    rsp,0x20
  406664:	mov    QWORD PTR [rbp-0x18],rdi
  406668:	mov    QWORD PTR [rbp-0x20],rsi
  40666c:	mov    rax,QWORD PTR [rbp-0x20]
  406670:	add    rax,0x7
  406674:	and    rax,0xfffffffffffffff8
  406678:	add    rax,0x8
  40667c:	mov    QWORD PTR [rbp-0x20],rax
  406680:	mov    rax,QWORD PTR [rbp-0x18]
  406684:	mov    rdx,QWORD PTR [rax+0x180]
  40668b:	mov    rcx,QWORD PTR [rbp-0x20]
  40668f:	mov    rax,QWORD PTR [rbp-0x18]
  406693:	mov    r8d,0x0
  406699:	mov    esi,0x7
  40669e:	mov    rdi,rax
  4066a1:	call   405ec4 <flatcc_builder_default_alloc@@Base+0x50c>
  4066a6:	mov    QWORD PTR [rbp-0x8],rax
  4066aa:	cmp    QWORD PTR [rbp-0x8],0x0
  4066af:	jne    4066b8 <flatcc_builder_enter_user_frame_ptr@@Base+0x5c>
  4066b1:	mov    eax,0x0
  4066b6:	jmp    406722 <flatcc_builder_enter_user_frame_ptr@@Base+0xc6>
  4066b8:	mov    rdx,QWORD PTR [rbp-0x20]
  4066bc:	mov    rax,QWORD PTR [rbp-0x8]
  4066c0:	mov    esi,0x0
  4066c5:	mov    rdi,rax
  4066c8:	call   403090 <memset@plt>
  4066cd:	mov    rax,QWORD PTR [rbp-0x8]
  4066d1:	lea    rdx,[rax+0x8]
  4066d5:	mov    QWORD PTR [rbp-0x8],rdx
  4066d9:	mov    rdx,QWORD PTR [rbp-0x18]
  4066dd:	mov    rdx,QWORD PTR [rdx+0x178]
  4066e4:	mov    QWORD PTR [rax],rdx
  4066e7:	mov    rax,QWORD PTR [rbp-0x18]
  4066eb:	mov    rax,QWORD PTR [rax+0x180]
  4066f2:	lea    rdx,[rax+0x8]
  4066f6:	mov    rax,QWORD PTR [rbp-0x18]
  4066fa:	mov    QWORD PTR [rax+0x178],rdx
  406701:	mov    rax,QWORD PTR [rbp-0x18]
  406705:	mov    rdx,QWORD PTR [rax+0x180]
  40670c:	mov    rax,QWORD PTR [rbp-0x20]
  406710:	add    rdx,rax
  406713:	mov    rax,QWORD PTR [rbp-0x18]
  406717:	mov    QWORD PTR [rax+0x180],rdx
  40671e:	mov    rax,QWORD PTR [rbp-0x8]
  406722:	leave  
  406723:	ret    

0000000000406724 <flatcc_builder_enter_user_frame@@Base>:
  406724:	push   rbp
  406725:	mov    rbp,rsp
  406728:	sub    rsp,0x20
  40672c:	mov    QWORD PTR [rbp-0x18],rdi
  406730:	mov    QWORD PTR [rbp-0x20],rsi
  406734:	mov    rax,QWORD PTR [rbp-0x20]
  406738:	add    rax,0x7
  40673c:	and    rax,0xfffffffffffffff8
  406740:	add    rax,0x8
  406744:	mov    QWORD PTR [rbp-0x20],rax
  406748:	mov    rax,QWORD PTR [rbp-0x18]
  40674c:	mov    rdx,QWORD PTR [rax+0x180]
  406753:	mov    rcx,QWORD PTR [rbp-0x20]
  406757:	mov    rax,QWORD PTR [rbp-0x18]
  40675b:	mov    r8d,0x0
  406761:	mov    esi,0x7
  406766:	mov    rdi,rax
  406769:	call   405ec4 <flatcc_builder_default_alloc@@Base+0x50c>
  40676e:	mov    QWORD PTR [rbp-0x8],rax
  406772:	cmp    QWORD PTR [rbp-0x8],0x0
  406777:	jne    406780 <flatcc_builder_enter_user_frame@@Base+0x5c>
  406779:	mov    eax,0x0
  40677e:	jmp    4067f1 <flatcc_builder_enter_user_frame@@Base+0xcd>
  406780:	mov    rdx,QWORD PTR [rbp-0x20]
  406784:	mov    rax,QWORD PTR [rbp-0x8]
  406788:	mov    esi,0x0
  40678d:	mov    rdi,rax
  406790:	call   403090 <memset@plt>
  406795:	mov    rax,QWORD PTR [rbp-0x8]
  406799:	lea    rdx,[rax+0x8]
  40679d:	mov    QWORD PTR [rbp-0x8],rdx
  4067a1:	mov    rdx,QWORD PTR [rbp-0x18]
  4067a5:	mov    rdx,QWORD PTR [rdx+0x178]
  4067ac:	mov    QWORD PTR [rax],rdx
  4067af:	mov    rax,QWORD PTR [rbp-0x18]
  4067b3:	mov    rax,QWORD PTR [rax+0x180]
  4067ba:	lea    rdx,[rax+0x8]
  4067be:	mov    rax,QWORD PTR [rbp-0x18]
  4067c2:	mov    QWORD PTR [rax+0x178],rdx
  4067c9:	mov    rax,QWORD PTR [rbp-0x18]
  4067cd:	mov    rdx,QWORD PTR [rax+0x180]
  4067d4:	mov    rax,QWORD PTR [rbp-0x20]
  4067d8:	add    rdx,rax
  4067db:	mov    rax,QWORD PTR [rbp-0x18]
  4067df:	mov    QWORD PTR [rax+0x180],rdx
  4067e6:	mov    rax,QWORD PTR [rbp-0x18]
  4067ea:	mov    rax,QWORD PTR [rax+0x178]
  4067f1:	leave  
  4067f2:	ret    

00000000004067f3 <flatcc_builder_exit_user_frame@@Base>:
  4067f3:	push   rbp
  4067f4:	mov    rbp,rsp
  4067f7:	sub    rsp,0x20
  4067fb:	mov    QWORD PTR [rbp-0x18],rdi
  4067ff:	mov    rax,QWORD PTR [rbp-0x18]
  406803:	mov    rax,QWORD PTR [rax+0x178]
  40680a:	test   rax,rax
  40680d:	jne    40682e <flatcc_builder_exit_user_frame@@Base+0x3b>
  40680f:	lea    rcx,[rip+0x653a]        # 40cd50 <flatcc_builder_padding_base@@Base+0x690>
  406816:	mov    edx,0x21e
  40681b:	lea    rsi,[rip+0x609e]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  406822:	lea    rdi,[rip+0x611a]        # 40c943 <flatcc_builder_padding_base@@Base+0x283>
  406829:	call   403080 <__assert_fail@plt>
  40682e:	mov    rax,QWORD PTR [rbp-0x18]
  406832:	mov    rdx,QWORD PTR [rax+0xc8]
  406839:	mov    rax,QWORD PTR [rbp-0x18]
  40683d:	mov    rax,QWORD PTR [rax+0x178]
  406844:	mov    eax,eax
  406846:	add    rax,rdx
  406849:	mov    QWORD PTR [rbp-0x8],rax
  40684d:	mov    rax,QWORD PTR [rbp-0x18]
  406851:	mov    rax,QWORD PTR [rax+0x178]
  406858:	lea    rdx,[rax-0x8]
  40685c:	mov    rax,QWORD PTR [rbp-0x18]
  406860:	mov    QWORD PTR [rax+0x180],rdx
  406867:	mov    rax,QWORD PTR [rbp-0x8]
  40686b:	mov    rdx,QWORD PTR [rax-0x8]
  40686f:	mov    rax,QWORD PTR [rbp-0x18]
  406873:	mov    QWORD PTR [rax+0x178],rdx
  40687a:	mov    rax,QWORD PTR [rbp-0x18]
  40687e:	mov    rax,QWORD PTR [rax+0x178]
  406885:	leave  
  406886:	ret    

0000000000406887 <flatcc_builder_exit_user_frame_at@@Base>:
  406887:	push   rbp
  406888:	mov    rbp,rsp
  40688b:	sub    rsp,0x10
  40688f:	mov    QWORD PTR [rbp-0x8],rdi
  406893:	mov    QWORD PTR [rbp-0x10],rsi
  406897:	mov    rax,QWORD PTR [rbp-0x8]
  40689b:	mov    rax,QWORD PTR [rax+0x178]
  4068a2:	cmp    rax,QWORD PTR [rbp-0x10]
  4068a6:	jae    4068c7 <flatcc_builder_exit_user_frame_at@@Base+0x40>
  4068a8:	lea    rcx,[rip+0x64d1]        # 40cd80 <flatcc_builder_padding_base@@Base+0x6c0>
  4068af:	mov    edx,0x227
  4068b4:	lea    rsi,[rip+0x6005]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4068bb:	lea    rdi,[rip+0x609e]        # 40c960 <flatcc_builder_padding_base@@Base+0x2a0>
  4068c2:	call   403080 <__assert_fail@plt>
  4068c7:	mov    rax,QWORD PTR [rbp-0x8]
  4068cb:	mov    rdx,QWORD PTR [rbp-0x10]
  4068cf:	mov    QWORD PTR [rax+0x178],rdx
  4068d6:	mov    rax,QWORD PTR [rbp-0x8]
  4068da:	mov    rdi,rax
  4068dd:	call   4067f3 <flatcc_builder_exit_user_frame@@Base>
  4068e2:	leave  
  4068e3:	ret    

00000000004068e4 <flatcc_builder_get_current_user_frame@@Base>:
  4068e4:	push   rbp
  4068e5:	mov    rbp,rsp
  4068e8:	mov    QWORD PTR [rbp-0x8],rdi
  4068ec:	mov    rax,QWORD PTR [rbp-0x8]
  4068f0:	mov    rax,QWORD PTR [rax+0x178]
  4068f7:	pop    rbp
  4068f8:	ret    

00000000004068f9 <flatcc_builder_get_user_frame_ptr@@Base>:
  4068f9:	push   rbp
  4068fa:	mov    rbp,rsp
  4068fd:	mov    QWORD PTR [rbp-0x8],rdi
  406901:	mov    QWORD PTR [rbp-0x10],rsi
  406905:	mov    rax,QWORD PTR [rbp-0x8]
  406909:	mov    rax,QWORD PTR [rax+0xc8]
  406910:	mov    rdx,QWORD PTR [rbp-0x10]
  406914:	mov    edx,edx
  406916:	add    rax,rdx
  406919:	pop    rbp
  40691a:	ret    
  40691b:	push   rbp
  40691c:	mov    rbp,rsp
  40691f:	sub    rsp,0x10
  406923:	mov    QWORD PTR [rbp-0x8],rdi
  406927:	mov    eax,esi
  406929:	mov    WORD PTR [rbp-0xc],ax
  40692d:	mov    rax,QWORD PTR [rbp-0x8]
  406931:	mov    eax,DWORD PTR [rax+0x104]
  406937:	lea    edx,[rax+0x1]
  40693a:	mov    rax,QWORD PTR [rbp-0x8]
  40693e:	mov    DWORD PTR [rax+0x104],edx
  406944:	mov    rax,QWORD PTR [rbp-0x8]
  406948:	mov    edx,DWORD PTR [rax+0x104]
  40694e:	mov    rax,QWORD PTR [rbp-0x8]
  406952:	mov    eax,DWORD PTR [rax+0x108]
  406958:	cmp    edx,eax
  40695a:	jle    406a56 <flatcc_builder_get_user_frame_ptr@@Base+0x15d>
  406960:	mov    rax,QWORD PTR [rbp-0x8]
  406964:	mov    eax,DWORD PTR [rax+0x120]
  40696a:	test   eax,eax
  40696c:	jle    406990 <flatcc_builder_get_user_frame_ptr@@Base+0x97>
  40696e:	mov    rax,QWORD PTR [rbp-0x8]
  406972:	mov    edx,DWORD PTR [rax+0x104]
  406978:	mov    rax,QWORD PTR [rbp-0x8]
  40697c:	mov    eax,DWORD PTR [rax+0x120]
  406982:	cmp    edx,eax
  406984:	jle    406990 <flatcc_builder_get_user_frame_ptr@@Base+0x97>
  406986:	mov    eax,0xffffffff
  40698b:	jmp    406af1 <flatcc_builder_get_user_frame_ptr@@Base+0x1f8>
  406990:	mov    rax,QWORD PTR [rbp-0x8]
  406994:	mov    eax,DWORD PTR [rax+0x104]
  40699a:	sub    eax,0x1
  40699d:	movsxd rdx,eax
  4069a0:	mov    rax,rdx
  4069a3:	shl    rax,0x3
  4069a7:	add    rax,rdx
  4069aa:	shl    rax,0x2
  4069ae:	mov    rdx,rax
  4069b1:	mov    rax,QWORD PTR [rbp-0x8]
  4069b5:	mov    r8d,0x0
  4069bb:	mov    ecx,0x24
  4069c0:	mov    esi,0x4
  4069c5:	mov    rdi,rax
  4069c8:	call   405ec4 <flatcc_builder_default_alloc@@Base+0x50c>
  4069cd:	mov    rdx,rax
  4069d0:	mov    rax,QWORD PTR [rbp-0x8]
  4069d4:	mov    QWORD PTR [rax+0x30],rdx
  4069d8:	mov    rax,QWORD PTR [rbp-0x8]
  4069dc:	mov    rax,QWORD PTR [rax+0x30]
  4069e0:	test   rax,rax
  4069e3:	jne    4069ef <flatcc_builder_get_user_frame_ptr@@Base+0xf6>
  4069e5:	mov    eax,0xffffffff
  4069ea:	jmp    406af1 <flatcc_builder_get_user_frame_ptr@@Base+0x1f8>
  4069ef:	mov    rax,QWORD PTR [rbp-0x8]
  4069f3:	mov    rax,QWORD PTR [rax+0xa0]
  4069fa:	movabs rdx,0xe38e38e38e38e38f
  406a04:	mul    rdx
  406a07:	mov    rax,rdx
  406a0a:	shr    rax,0x5
  406a0e:	mov    edx,eax
  406a10:	mov    rax,QWORD PTR [rbp-0x8]
  406a14:	mov    DWORD PTR [rax+0x108],edx
  406a1a:	mov    rax,QWORD PTR [rbp-0x8]
  406a1e:	mov    eax,DWORD PTR [rax+0x120]
  406a24:	test   eax,eax
  406a26:	jle    406a6a <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  406a28:	mov    rax,QWORD PTR [rbp-0x8]
  406a2c:	mov    edx,DWORD PTR [rax+0x120]
  406a32:	mov    rax,QWORD PTR [rbp-0x8]
  406a36:	mov    eax,DWORD PTR [rax+0x108]
  406a3c:	cmp    edx,eax
  406a3e:	jge    406a6a <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  406a40:	mov    rax,QWORD PTR [rbp-0x8]
  406a44:	mov    edx,DWORD PTR [rax+0x120]
  406a4a:	mov    rax,QWORD PTR [rbp-0x8]
  406a4e:	mov    DWORD PTR [rax+0x108],edx
  406a54:	jmp    406a6a <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  406a56:	mov    rax,QWORD PTR [rbp-0x8]
  406a5a:	mov    rax,QWORD PTR [rax+0x30]
  406a5e:	lea    rdx,[rax+0x24]
  406a62:	mov    rax,QWORD PTR [rbp-0x8]
  406a66:	mov    QWORD PTR [rax+0x30],rdx
  406a6a:	mov    rax,QWORD PTR [rbp-0x8]
  406a6e:	mov    rax,QWORD PTR [rax+0x30]
  406a72:	mov    rdx,QWORD PTR [rbp-0x8]
  406a76:	mov    edx,DWORD PTR [rdx+0x20]
  406a79:	mov    DWORD PTR [rax+0x8],edx
  406a7c:	mov    rax,QWORD PTR [rbp-0x8]
  406a80:	mov    rax,QWORD PTR [rax+0x30]
  406a84:	mov    rdx,QWORD PTR [rbp-0x8]
  406a88:	movzx  edx,WORD PTR [rdx+0xea]
  406a8f:	mov    WORD PTR [rax+0xc],dx
  406a93:	mov    rax,QWORD PTR [rbp-0x8]
  406a97:	movzx  edx,WORD PTR [rbp-0xc]
  406a9b:	mov    WORD PTR [rax+0xea],dx
  406aa2:	mov    rax,QWORD PTR [rbp-0x8]
  406aa6:	mov    rax,QWORD PTR [rax+0x30]
  406aaa:	mov    rdx,QWORD PTR [rbp-0x8]
  406aae:	mov    edx,DWORD PTR [rdx+0x28]
  406ab1:	mov    DWORD PTR [rax],edx
  406ab3:	mov    rax,QWORD PTR [rbp-0x8]
  406ab7:	mov    rax,QWORD PTR [rax+0x30]
  406abb:	mov    DWORD PTR [rax+0x4],0xfffffffc
  406ac2:	mov    rax,QWORD PTR [rbp-0x8]
  406ac6:	mov    edx,DWORD PTR [rax+0x28]
  406ac9:	mov    rax,QWORD PTR [rbp-0x8]
  406acd:	mov    eax,DWORD PTR [rax+0x20]
  406ad0:	add    eax,edx
  406ad2:	add    eax,0x7
  406ad5:	and    eax,0xfffffff8
  406ad8:	mov    edx,eax
  406ada:	mov    rax,QWORD PTR [rbp-0x8]
  406ade:	mov    DWORD PTR [rax+0x28],edx
  406ae1:	mov    rax,QWORD PTR [rbp-0x8]
  406ae5:	mov    DWORD PTR [rax+0x20],0x0
  406aec:	mov    eax,0x0
  406af1:	leave  
  406af2:	ret    
  406af3:	push   rbp
  406af4:	mov    rbp,rsp
  406af7:	sub    rsp,0x10
  406afb:	mov    QWORD PTR [rbp-0x8],rdi
  406aff:	mov    rax,QWORD PTR [rbp-0x8]
  406b03:	mov    eax,DWORD PTR [rax+0x20]
  406b06:	mov    edx,eax
  406b08:	mov    rax,QWORD PTR [rbp-0x8]
  406b0c:	mov    rax,QWORD PTR [rax+0x18]
  406b10:	mov    esi,0x0
  406b15:	mov    rdi,rax
  406b18:	call   403090 <memset@plt>
  406b1d:	mov    rax,QWORD PTR [rbp-0x8]
  406b21:	mov    rax,QWORD PTR [rax+0x30]
  406b25:	mov    edx,DWORD PTR [rax+0x8]
  406b28:	mov    rax,QWORD PTR [rbp-0x8]
  406b2c:	mov    DWORD PTR [rax+0x20],edx
  406b2f:	mov    rax,QWORD PTR [rbp-0x8]
  406b33:	mov    rax,QWORD PTR [rax+0x30]
  406b37:	mov    edx,DWORD PTR [rax]
  406b39:	mov    rax,QWORD PTR [rbp-0x8]
  406b3d:	mov    DWORD PTR [rax+0x28],edx
  406b40:	mov    rax,QWORD PTR [rbp-0x8]
  406b44:	mov    rax,QWORD PTR [rax+0x30]
  406b48:	mov    edx,DWORD PTR [rax+0x4]
  406b4b:	mov    rax,QWORD PTR [rbp-0x8]
  406b4f:	mov    esi,edx
  406b51:	mov    rdi,rax
  406b54:	call   405b25 <flatcc_builder_default_alloc@@Base+0x16d>
  406b59:	mov    rax,QWORD PTR [rbp-0x8]
  406b5d:	movzx  eax,WORD PTR [rax+0xea]
  406b64:	movzx  edx,ax
  406b67:	mov    rax,QWORD PTR [rbp-0x8]
  406b6b:	mov    esi,edx
  406b6d:	mov    rdi,rax
  406b70:	call   406602 <flatcc_builder_clear@@Base+0x96>
  406b75:	mov    rax,QWORD PTR [rbp-0x8]
  406b79:	mov    rax,QWORD PTR [rax+0x30]
  406b7d:	movzx  edx,WORD PTR [rax+0xc]
  406b81:	mov    rax,QWORD PTR [rbp-0x8]
  406b85:	mov    WORD PTR [rax+0xea],dx
  406b8c:	mov    rax,QWORD PTR [rbp-0x8]
  406b90:	mov    rax,QWORD PTR [rax+0x30]
  406b94:	lea    rdx,[rax-0x24]
  406b98:	mov    rax,QWORD PTR [rbp-0x8]
  406b9c:	mov    QWORD PTR [rax+0x30],rdx
  406ba0:	mov    rax,QWORD PTR [rbp-0x8]
  406ba4:	mov    eax,DWORD PTR [rax+0x104]
  406baa:	lea    edx,[rax-0x1]
  406bad:	mov    rax,QWORD PTR [rbp-0x8]
  406bb1:	mov    DWORD PTR [rax+0x104],edx
  406bb7:	nop
  406bb8:	leave  
  406bb9:	ret    
  406bba:	push   rbp
  406bbb:	mov    rbp,rsp
  406bbe:	mov    QWORD PTR [rbp-0x8],rdi
  406bc2:	mov    DWORD PTR [rbp-0xc],esi
  406bc5:	mov    eax,edx
  406bc7:	mov    WORD PTR [rbp-0x10],ax
  406bcb:	mov    rax,QWORD PTR [rbp-0x8]
  406bcf:	mov    eax,DWORD PTR [rax+0xf0]
  406bd5:	sub    eax,DWORD PTR [rbp-0xc]
  406bd8:	movzx  edx,WORD PTR [rbp-0x10]
  406bdc:	sub    edx,0x1
  406bdf:	and    eax,edx
  406be1:	pop    rbp
  406be2:	ret    
  406be3:	push   rbp
  406be4:	mov    rbp,rsp
  406be7:	mov    QWORD PTR [rbp-0x8],rdi
  406beb:	mov    eax,esi
  406bed:	mov    WORD PTR [rbp-0xc],ax
  406bf1:	mov    rax,QWORD PTR [rbp-0x8]
  406bf5:	mov    eax,DWORD PTR [rax+0xf4]
  406bfb:	movzx  edx,WORD PTR [rbp-0xc]
  406bff:	sub    edx,0x1
  406c02:	and    eax,edx
  406c04:	pop    rbp
  406c05:	ret    
  406c06:	push   rbp
  406c07:	mov    rbp,rsp
  406c0a:	sub    rsp,0x20
  406c0e:	mov    QWORD PTR [rbp-0x18],rdi
  406c12:	mov    QWORD PTR [rbp-0x20],rsi
  406c16:	mov    rax,QWORD PTR [rbp-0x18]
  406c1a:	mov    edx,DWORD PTR [rax+0xf0]
  406c20:	mov    rax,QWORD PTR [rbp-0x20]
  406c24:	mov    rax,QWORD PTR [rax]
  406c27:	sub    edx,eax
  406c29:	mov    eax,edx
  406c2b:	mov    DWORD PTR [rbp-0x4],eax
  406c2e:	mov    rax,QWORD PTR [rbp-0x20]
  406c32:	mov    rax,QWORD PTR [rax]
  406c35:	cmp    rax,0x10
  406c39:	jbe    406c50 <flatcc_builder_get_user_frame_ptr@@Base+0x357>
  406c3b:	mov    rax,QWORD PTR [rbp-0x20]
  406c3f:	mov    rax,QWORD PTR [rax]
  406c42:	lea    rdx,[rax-0x10]
  406c46:	mov    eax,0xffffffff
  406c4b:	cmp    rdx,rax
  406c4e:	ja     406c5f <flatcc_builder_get_user_frame_ptr@@Base+0x366>
  406c50:	mov    rax,QWORD PTR [rbp-0x18]
  406c54:	mov    eax,DWORD PTR [rax+0xf0]
  406c5a:	cmp    eax,DWORD PTR [rbp-0x4]
  406c5d:	jg     406c7e <flatcc_builder_get_user_frame_ptr@@Base+0x385>
  406c5f:	lea    rcx,[rip+0x6162]        # 40cdc8 <flatcc_builder_padding_base@@Base+0x708>
  406c66:	mov    edx,0x287
  406c6b:	lea    rsi,[rip+0x5c4e]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  406c72:	lea    rdi,[rip+0x5ca7]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  406c79:	call   403080 <__assert_fail@plt>
  406c7e:	mov    rax,QWORD PTR [rbp-0x18]
  406c82:	mov    rax,QWORD PTR [rax+0x48]
  406c86:	mov    rdx,QWORD PTR [rbp-0x20]
  406c8a:	mov    r8,QWORD PTR [rdx]
  406c8d:	mov    rdx,QWORD PTR [rbp-0x20]
  406c91:	mov    edx,DWORD PTR [rdx+0x8]
  406c94:	mov    rcx,QWORD PTR [rbp-0x20]
  406c98:	lea    rsi,[rcx+0x10]
  406c9c:	mov    rcx,QWORD PTR [rbp-0x18]
  406ca0:	mov    rdi,QWORD PTR [rcx+0x38]
  406ca4:	mov    ecx,DWORD PTR [rbp-0x4]
  406ca7:	call   rax
  406ca9:	test   eax,eax
  406cab:	je     406ccc <flatcc_builder_get_user_frame_ptr@@Base+0x3d3>
  406cad:	lea    rcx,[rip+0x6114]        # 40cdc8 <flatcc_builder_padding_base@@Base+0x708>
  406cb4:	mov    edx,0x28b
  406cb9:	lea    rsi,[rip+0x5c00]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  406cc0:	lea    rdi,[rip+0x5c59]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  406cc7:	call   403080 <__assert_fail@plt>
  406ccc:	mov    rax,QWORD PTR [rbp-0x18]
  406cd0:	mov    edx,DWORD PTR [rbp-0x4]
  406cd3:	mov    DWORD PTR [rax+0xf0],edx
  406cd9:	mov    rax,QWORD PTR [rbp-0x18]
  406cdd:	mov    eax,DWORD PTR [rax+0xf0]
  406ce3:	leave  
  406ce4:	ret    
  406ce5:	push   rbp
  406ce6:	mov    rbp,rsp
  406ce9:	sub    rsp,0x20
  406ced:	mov    QWORD PTR [rbp-0x18],rdi
  406cf1:	mov    QWORD PTR [rbp-0x20],rsi
  406cf5:	mov    rax,QWORD PTR [rbp-0x18]
  406cf9:	mov    eax,DWORD PTR [rax+0xf4]
  406cff:	mov    DWORD PTR [rbp-0x4],eax
  406d02:	mov    rax,QWORD PTR [rbp-0x20]
  406d06:	mov    rax,QWORD PTR [rax]
  406d09:	mov    edx,eax
  406d0b:	mov    eax,DWORD PTR [rbp-0x4]
  406d0e:	add    edx,eax
  406d10:	mov    rax,QWORD PTR [rbp-0x18]
  406d14:	mov    DWORD PTR [rax+0xf4],edx
  406d1a:	mov    rax,QWORD PTR [rbp-0x18]
  406d1e:	mov    eax,DWORD PTR [rax+0xf4]
  406d24:	cmp    eax,DWORD PTR [rbp-0x4]
  406d27:	jge    406d48 <flatcc_builder_get_user_frame_ptr@@Base+0x44f>
  406d29:	lea    rcx,[rip+0x6088]        # 40cdb8 <flatcc_builder_padding_base@@Base+0x6f8>
  406d30:	mov    edx,0x2a1
  406d35:	lea    rsi,[rip+0x5b84]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  406d3c:	lea    rdi,[rip+0x5bdd]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  406d43:	call   403080 <__assert_fail@plt>
  406d48:	mov    rax,QWORD PTR [rbp-0x18]
  406d4c:	mov    rax,QWORD PTR [rax+0x48]
  406d50:	mov    rdx,QWORD PTR [rbp-0x20]
  406d54:	mov    r8,QWORD PTR [rdx]
  406d57:	mov    rdx,QWORD PTR [rbp-0x20]
  406d5b:	mov    edx,DWORD PTR [rdx+0x8]
  406d5e:	mov    rcx,QWORD PTR [rbp-0x20]
  406d62:	lea    rsi,[rcx+0x10]
  406d66:	mov    rcx,QWORD PTR [rbp-0x18]
  406d6a:	mov    rdi,QWORD PTR [rcx+0x38]
  406d6e:	mov    ecx,DWORD PTR [rbp-0x4]
  406d71:	call   rax
  406d73:	test   eax,eax
  406d75:	je     406d96 <flatcc_builder_get_user_frame_ptr@@Base+0x49d>
  406d77:	lea    rcx,[rip+0x603a]        # 40cdb8 <flatcc_builder_padding_base@@Base+0x6f8>
  406d7e:	mov    edx,0x2a5
  406d83:	lea    rsi,[rip+0x5b36]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  406d8a:	lea    rdi,[rip+0x5b8f]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  406d91:	call   403080 <__assert_fail@plt>
  406d96:	mov    eax,DWORD PTR [rbp-0x4]
  406d99:	add    eax,0x1
  406d9c:	leave  
  406d9d:	ret    
  406d9e:	push   rbp
  406d9f:	mov    rbp,rsp
  406da2:	sub    rsp,0xd0
  406da9:	mov    QWORD PTR [rbp-0xb8],rdi
  406db0:	mov    QWORD PTR [rbp-0xc0],rsi
  406db7:	mov    eax,edx
  406db9:	mov    DWORD PTR [rbp-0xc8],ecx
  406dbf:	mov    WORD PTR [rbp-0xc4],ax
  406dc6:	mov    rax,QWORD PTR fs:0x28
  406dcf:	mov    QWORD PTR [rbp-0x8],rax
  406dd3:	xor    eax,eax
  406dd5:	cmp    WORD PTR [rbp-0xc4],0x0
  406ddd:	jne    406e09 <flatcc_builder_get_user_frame_ptr@@Base+0x510>
  406ddf:	mov    rax,QWORD PTR [rbp-0xb8]
  406de6:	movzx  eax,WORD PTR [rax+0xec]
  406ded:	test   ax,ax
  406df0:	je     406e02 <flatcc_builder_get_user_frame_ptr@@Base+0x509>
  406df2:	mov    rax,QWORD PTR [rbp-0xb8]
  406df9:	movzx  eax,WORD PTR [rax+0xec]
  406e00:	jmp    406e10 <flatcc_builder_get_user_frame_ptr@@Base+0x517>
  406e02:	mov    eax,0x1
  406e07:	jmp    406e10 <flatcc_builder_get_user_frame_ptr@@Base+0x517>
  406e09:	movzx  eax,WORD PTR [rbp-0xc4]
  406e10:	mov    WORD PTR [rbp-0xc4],ax
  406e17:	mov    rax,QWORD PTR [rbp-0xc0]
  406e1e:	mov    esi,0x4
  406e23:	mov    rdi,rax
  406e26:	call   406633 <flatcc_builder_clear@@Base+0xc7>
  406e2b:	movzx  edx,WORD PTR [rbp-0xc4]
  406e32:	mov    rax,QWORD PTR [rbp-0xc0]
  406e39:	mov    esi,edx
  406e3b:	mov    rdi,rax
  406e3e:	call   406633 <flatcc_builder_clear@@Base+0xc7>
  406e43:	cmp    DWORD PTR [rbp-0xc8],0x0
  406e4a:	jne    406f40 <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  406e50:	movzx  edx,WORD PTR [rbp-0xc4]
  406e57:	mov    rax,QWORD PTR [rbp-0xb8]
  406e5e:	mov    esi,edx
  406e60:	mov    rdi,rax
  406e63:	call   406be3 <flatcc_builder_get_user_frame_ptr@@Base+0x2ea>
  406e68:	mov    eax,eax
  406e6a:	mov    QWORD PTR [rbp-0xa8],rax
  406e71:	cmp    QWORD PTR [rbp-0xa8],0x0
  406e79:	je     406f40 <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  406e7f:	mov    QWORD PTR [rbp-0xa0],0x0
  406e8a:	mov    DWORD PTR [rbp-0x98],0x0
  406e94:	cmp    QWORD PTR [rbp-0xa8],0x0
  406e9c:	je     406f04 <flatcc_builder_get_user_frame_ptr@@Base+0x60b>
  406e9e:	mov    rdx,QWORD PTR [rbp-0xa0]
  406ea5:	mov    rax,QWORD PTR [rbp-0xa8]
  406eac:	add    rax,rdx
  406eaf:	mov    QWORD PTR [rbp-0xa0],rax
  406eb6:	mov    eax,DWORD PTR [rbp-0x98]
  406ebc:	cdqe   
  406ebe:	shl    rax,0x4
  406ec2:	add    rax,rbp
  406ec5:	sub    rax,0x90
  406ecb:	mov    rdx,0x40c6c0
  406ed2:	mov    QWORD PTR [rax],rdx
  406ed5:	mov    eax,DWORD PTR [rbp-0x98]
  406edb:	cdqe   
  406edd:	shl    rax,0x4
  406ee1:	add    rax,rbp
  406ee4:	lea    rdx,[rax-0x88]
  406eeb:	mov    rax,QWORD PTR [rbp-0xa8]
  406ef2:	mov    QWORD PTR [rdx],rax
  406ef5:	mov    eax,DWORD PTR [rbp-0x98]
  406efb:	add    eax,0x1
  406efe:	mov    DWORD PTR [rbp-0x98],eax
  406f04:	lea    rdx,[rbp-0xa0]
  406f0b:	mov    rax,QWORD PTR [rbp-0xb8]
  406f12:	mov    rsi,rdx
  406f15:	mov    rdi,rax
  406f18:	call   406ce5 <flatcc_builder_get_user_frame_ptr@@Base+0x3ec>
  406f1d:	test   eax,eax
  406f1f:	jne    406f40 <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  406f21:	lea    rcx,[rip+0x5e80]        # 40cda8 <flatcc_builder_padding_base@@Base+0x6e8>
  406f28:	mov    edx,0x2be
  406f2d:	lea    rsi,[rip+0x598c]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  406f34:	lea    rdi,[rip+0x59e5]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  406f3b:	call   403080 <__assert_fail@plt>
  406f40:	mov    eax,0x0
  406f45:	mov    rcx,QWORD PTR [rbp-0x8]
  406f49:	xor    rcx,QWORD PTR fs:0x28
  406f52:	je     406f59 <flatcc_builder_get_user_frame_ptr@@Base+0x660>
  406f54:	call   403070 <__stack_chk_fail@plt>
  406f59:	leave  
  406f5a:	ret    

0000000000406f5b <flatcc_builder_embed_buffer@@Base>:
  406f5b:	push   rbp
  406f5c:	mov    rbp,rsp
  406f5f:	sub    rsp,0xe0
  406f66:	mov    QWORD PTR [rbp-0xb8],rdi
  406f6d:	mov    eax,esi
  406f6f:	mov    QWORD PTR [rbp-0xc8],rdx
  406f76:	mov    QWORD PTR [rbp-0xd0],rcx
  406f7d:	mov    edx,r8d
  406f80:	mov    DWORD PTR [rbp-0xd4],r9d
  406f87:	mov    WORD PTR [rbp-0xbc],ax
  406f8e:	mov    WORD PTR [rbp-0xc0],dx
  406f95:	mov    rax,QWORD PTR fs:0x28
  406f9e:	mov    QWORD PTR [rbp-0x8],rax
  406fa2:	xor    eax,eax
  406fa4:	mov    eax,DWORD PTR [rbp-0xd4]
  406faa:	and    eax,0x2
  406fad:	mov    DWORD PTR [rbp-0xa8],eax
  406fb3:	mov    rax,QWORD PTR [rbp-0xb8]
  406fba:	mov    eax,DWORD PTR [rax+0x100]
  406fc0:	test   eax,eax
  406fc2:	setne  al
  406fc5:	movzx  ecx,al
  406fc8:	movzx  edx,WORD PTR [rbp-0xbc]
  406fcf:	lea    rsi,[rbp-0xc0]
  406fd6:	mov    rax,QWORD PTR [rbp-0xb8]
  406fdd:	mov    rdi,rax
  406fe0:	call   406d9e <flatcc_builder_get_user_frame_ptr@@Base+0x4a5>
  406fe5:	test   eax,eax
  406fe7:	je     406ff3 <flatcc_builder_embed_buffer@@Base+0x98>
  406fe9:	mov    eax,0x0
  406fee:	jmp    4071cd <flatcc_builder_embed_buffer@@Base+0x272>
  406ff3:	movzx  eax,WORD PTR [rbp-0xc0]
  406ffa:	movzx  edx,ax
  406ffd:	mov    rax,QWORD PTR [rbp-0xd0]
  407004:	mov    ecx,eax
  407006:	cmp    DWORD PTR [rbp-0xa8],0x0
  40700d:	je     407016 <flatcc_builder_embed_buffer@@Base+0xbb>
  40700f:	mov    eax,0x4
  407014:	jmp    40701b <flatcc_builder_embed_buffer@@Base+0xc0>
  407016:	mov    eax,0x0
  40701b:	add    ecx,eax
  40701d:	mov    rax,QWORD PTR [rbp-0xb8]
  407024:	mov    esi,ecx
  407026:	mov    rdi,rax
  407029:	call   406bba <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  40702e:	mov    DWORD PTR [rbp-0xa4],eax
  407034:	mov    rax,QWORD PTR [rbp-0xd0]
  40703b:	mov    edx,eax
  40703d:	mov    eax,DWORD PTR [rbp-0xa4]
  407043:	add    eax,edx
  407045:	mov    edi,eax
  407047:	call   4058f2 <main@@Base+0x262>
  40704c:	mov    DWORD PTR [rbp-0xac],eax
  407052:	mov    QWORD PTR [rbp-0xa0],0x0
  40705d:	mov    DWORD PTR [rbp-0x98],0x0
  407067:	mov    rax,QWORD PTR [rbp-0xb8]
  40706e:	mov    eax,DWORD PTR [rax+0x100]
  407074:	test   eax,eax
  407076:	je     4070d5 <flatcc_builder_embed_buffer@@Base+0x17a>
  407078:	mov    rax,QWORD PTR [rbp-0xa0]
  40707f:	add    rax,0x4
  407083:	mov    QWORD PTR [rbp-0xa0],rax
  40708a:	mov    eax,DWORD PTR [rbp-0x98]
  407090:	cdqe   
  407092:	shl    rax,0x4
  407096:	add    rax,rbp
  407099:	lea    rdx,[rax-0x90]
  4070a0:	lea    rax,[rbp-0xac]
  4070a7:	mov    QWORD PTR [rdx],rax
  4070aa:	mov    eax,DWORD PTR [rbp-0x98]
  4070b0:	cdqe   
  4070b2:	shl    rax,0x4
  4070b6:	add    rax,rbp
  4070b9:	sub    rax,0x88
  4070bf:	mov    QWORD PTR [rax],0x4
  4070c6:	mov    eax,DWORD PTR [rbp-0x98]
  4070cc:	add    eax,0x1
  4070cf:	mov    DWORD PTR [rbp-0x98],eax
  4070d5:	cmp    QWORD PTR [rbp-0xd0],0x0
  4070dd:	je     407146 <flatcc_builder_embed_buffer@@Base+0x1eb>
  4070df:	mov    rdx,QWORD PTR [rbp-0xa0]
  4070e6:	mov    rax,QWORD PTR [rbp-0xd0]
  4070ed:	add    rax,rdx
  4070f0:	mov    QWORD PTR [rbp-0xa0],rax
  4070f7:	mov    eax,DWORD PTR [rbp-0x98]
  4070fd:	cdqe   
  4070ff:	shl    rax,0x4
  407103:	add    rax,rbp
  407106:	lea    rdx,[rax-0x90]
  40710d:	mov    rax,QWORD PTR [rbp-0xc8]
  407114:	mov    QWORD PTR [rdx],rax
  407117:	mov    eax,DWORD PTR [rbp-0x98]
  40711d:	cdqe   
  40711f:	shl    rax,0x4
  407123:	add    rax,rbp
  407126:	lea    rdx,[rax-0x88]
  40712d:	mov    rax,QWORD PTR [rbp-0xd0]
  407134:	mov    QWORD PTR [rdx],rax
  407137:	mov    eax,DWORD PTR [rbp-0x98]
  40713d:	add    eax,0x1
  407140:	mov    DWORD PTR [rbp-0x98],eax
  407146:	cmp    DWORD PTR [rbp-0xa4],0x0
  40714d:	je     4071b4 <flatcc_builder_embed_buffer@@Base+0x259>
  40714f:	mov    rdx,QWORD PTR [rbp-0xa0]
  407156:	mov    eax,DWORD PTR [rbp-0xa4]
  40715c:	add    rax,rdx
  40715f:	mov    QWORD PTR [rbp-0xa0],rax
  407166:	mov    eax,DWORD PTR [rbp-0x98]
  40716c:	cdqe   
  40716e:	shl    rax,0x4
  407172:	add    rax,rbp
  407175:	sub    rax,0x90
  40717b:	mov    rdx,0x40c6c0
  407182:	mov    QWORD PTR [rax],rdx
  407185:	mov    edx,DWORD PTR [rbp-0x98]
  40718b:	mov    eax,DWORD PTR [rbp-0xa4]
  407191:	movsxd rdx,edx
  407194:	shl    rdx,0x4
  407198:	add    rdx,rbp
  40719b:	sub    rdx,0x88
  4071a2:	mov    QWORD PTR [rdx],rax
  4071a5:	mov    eax,DWORD PTR [rbp-0x98]
  4071ab:	add    eax,0x1
  4071ae:	mov    DWORD PTR [rbp-0x98],eax
  4071b4:	lea    rdx,[rbp-0xa0]
  4071bb:	mov    rax,QWORD PTR [rbp-0xb8]
  4071c2:	mov    rsi,rdx
  4071c5:	mov    rdi,rax
  4071c8:	call   406c06 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  4071cd:	mov    rdi,QWORD PTR [rbp-0x8]
  4071d1:	xor    rdi,QWORD PTR fs:0x28
  4071da:	je     4071e1 <flatcc_builder_embed_buffer@@Base+0x286>
  4071dc:	call   403070 <__stack_chk_fail@plt>
  4071e1:	leave  
  4071e2:	ret    

00000000004071e3 <flatcc_builder_create_buffer@@Base>:
  4071e3:	push   rbp
  4071e4:	mov    rbp,rsp
  4071e7:	sub    rsp,0xf0
  4071ee:	mov    QWORD PTR [rbp-0xd8],rdi
  4071f5:	mov    QWORD PTR [rbp-0xe0],rsi
  4071fc:	mov    eax,edx
  4071fe:	mov    DWORD PTR [rbp-0xe8],ecx
  407204:	mov    edx,r8d
  407207:	mov    DWORD PTR [rbp-0xf0],r9d
  40720e:	mov    WORD PTR [rbp-0xe4],ax
  407215:	mov    WORD PTR [rbp-0xec],dx
  40721c:	mov    rax,QWORD PTR fs:0x28
  407225:	mov    QWORD PTR [rbp-0x8],rax
  407229:	xor    eax,eax
  40722b:	mov    DWORD PTR [rbp-0xb8],0x0
  407235:	mov    DWORD PTR [rbp-0xbc],0x0
  40723f:	mov    eax,DWORD PTR [rbp-0xf0]
  407245:	and    eax,0x1
  407248:	test   eax,eax
  40724a:	setne  al
  40724d:	movzx  eax,al
  407250:	mov    DWORD PTR [rbp-0xb4],eax
  407256:	mov    eax,DWORD PTR [rbp-0xf0]
  40725c:	and    eax,0x2
  40725f:	test   eax,eax
  407261:	setne  al
  407264:	movzx  eax,al
  407267:	mov    DWORD PTR [rbp-0xb0],eax
  40726d:	movzx  edx,WORD PTR [rbp-0xe4]
  407274:	mov    ecx,DWORD PTR [rbp-0xb4]
  40727a:	lea    rsi,[rbp-0xec]
  407281:	mov    rax,QWORD PTR [rbp-0xd8]
  407288:	mov    rdi,rax
  40728b:	call   406d9e <flatcc_builder_get_user_frame_ptr@@Base+0x4a5>
  407290:	test   eax,eax
  407292:	je     40729e <flatcc_builder_create_buffer@@Base+0xbb>
  407294:	mov    eax,0x0
  407299:	jmp    407604 <flatcc_builder_create_buffer@@Base+0x421>
  40729e:	movzx  eax,WORD PTR [rbp-0xec]
  4072a5:	movzx  edx,ax
  4072a8:	mov    rax,QWORD PTR [rbp-0xd8]
  4072af:	mov    esi,edx
  4072b1:	mov    rdi,rax
  4072b4:	call   406602 <flatcc_builder_clear@@Base+0x96>
  4072b9:	cmp    QWORD PTR [rbp-0xe0],0x0
  4072c1:	je     4072f8 <flatcc_builder_create_buffer@@Base+0x115>
  4072c3:	mov    rax,QWORD PTR [rbp-0xe0]
  4072ca:	mov    eax,DWORD PTR [rax]
  4072cc:	mov    DWORD PTR [rbp-0xbc],eax
  4072d2:	mov    eax,DWORD PTR [rbp-0xbc]
  4072d8:	mov    edi,eax
  4072da:	call   40590d <main@@Base+0x27d>
  4072df:	mov    DWORD PTR [rbp-0xbc],eax
  4072e5:	mov    eax,DWORD PTR [rbp-0xbc]
  4072eb:	mov    edi,eax
  4072ed:	call   4058f2 <main@@Base+0x262>
  4072f2:	mov    DWORD PTR [rbp-0xbc],eax
  4072f8:	mov    eax,DWORD PTR [rbp-0xbc]
  4072fe:	test   eax,eax
  407300:	je     407309 <flatcc_builder_create_buffer@@Base+0x126>
  407302:	mov    eax,0x4
  407307:	jmp    40730e <flatcc_builder_create_buffer@@Base+0x12b>
  407309:	mov    eax,0x0
  40730e:	mov    DWORD PTR [rbp-0xb8],eax
  407314:	movzx  eax,WORD PTR [rbp-0xec]
  40731b:	movzx  edx,ax
  40731e:	cmp    DWORD PTR [rbp-0xb0],0x0
  407325:	je     40732e <flatcc_builder_create_buffer@@Base+0x14b>
  407327:	mov    ecx,0x4
  40732c:	jmp    407333 <flatcc_builder_create_buffer@@Base+0x150>
  40732e:	mov    ecx,0x0
  407333:	mov    eax,DWORD PTR [rbp-0xb8]
  407339:	add    eax,ecx
  40733b:	lea    ecx,[rax+0x4]
  40733e:	mov    rax,QWORD PTR [rbp-0xd8]
  407345:	mov    esi,ecx
  407347:	mov    rdi,rax
  40734a:	call   406bba <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  40734f:	mov    DWORD PTR [rbp-0xac],eax
  407355:	mov    QWORD PTR [rbp-0xa0],0x0
  407360:	mov    DWORD PTR [rbp-0x98],0x0
  40736a:	cmp    DWORD PTR [rbp-0xb4],0x0
  407371:	jne    40737c <flatcc_builder_create_buffer@@Base+0x199>
  407373:	cmp    DWORD PTR [rbp-0xb0],0x0
  40737a:	je     4073d9 <flatcc_builder_create_buffer@@Base+0x1f6>
  40737c:	mov    rax,QWORD PTR [rbp-0xa0]
  407383:	add    rax,0x4
  407387:	mov    QWORD PTR [rbp-0xa0],rax
  40738e:	mov    eax,DWORD PTR [rbp-0x98]
  407394:	cdqe   
  407396:	shl    rax,0x4
  40739a:	add    rax,rbp
  40739d:	lea    rdx,[rax-0x90]
  4073a4:	lea    rax,[rbp-0xc0]
  4073ab:	mov    QWORD PTR [rdx],rax
  4073ae:	mov    eax,DWORD PTR [rbp-0x98]
  4073b4:	cdqe   
  4073b6:	shl    rax,0x4
  4073ba:	add    rax,rbp
  4073bd:	sub    rax,0x88
  4073c3:	mov    QWORD PTR [rax],0x4
  4073ca:	mov    eax,DWORD PTR [rbp-0x98]
  4073d0:	add    eax,0x1
  4073d3:	mov    DWORD PTR [rbp-0x98],eax
  4073d9:	mov    rax,QWORD PTR [rbp-0xa0]
  4073e0:	add    rax,0x4
  4073e4:	mov    QWORD PTR [rbp-0xa0],rax
  4073eb:	mov    eax,DWORD PTR [rbp-0x98]
  4073f1:	cdqe   
  4073f3:	shl    rax,0x4
  4073f7:	add    rax,rbp
  4073fa:	lea    rdx,[rax-0x90]
  407401:	lea    rax,[rbp-0xc4]
  407408:	mov    QWORD PTR [rdx],rax
  40740b:	mov    eax,DWORD PTR [rbp-0x98]
  407411:	cdqe   
  407413:	shl    rax,0x4
  407417:	add    rax,rbp
  40741a:	sub    rax,0x88
  407420:	mov    QWORD PTR [rax],0x4
  407427:	mov    eax,DWORD PTR [rbp-0x98]
  40742d:	add    eax,0x1
  407430:	mov    DWORD PTR [rbp-0x98],eax
  407436:	cmp    DWORD PTR [rbp-0xb8],0x0
  40743d:	je     4074a5 <flatcc_builder_create_buffer@@Base+0x2c2>
  40743f:	mov    rdx,QWORD PTR [rbp-0xa0]
  407446:	mov    eax,DWORD PTR [rbp-0xb8]
  40744c:	add    rax,rdx
  40744f:	mov    QWORD PTR [rbp-0xa0],rax
  407456:	mov    eax,DWORD PTR [rbp-0x98]
  40745c:	cdqe   
  40745e:	shl    rax,0x4
  407462:	add    rax,rbp
  407465:	lea    rdx,[rax-0x90]
  40746c:	lea    rax,[rbp-0xbc]
  407473:	mov    QWORD PTR [rdx],rax
  407476:	mov    edx,DWORD PTR [rbp-0x98]
  40747c:	mov    eax,DWORD PTR [rbp-0xb8]
  407482:	movsxd rdx,edx
  407485:	shl    rdx,0x4
  407489:	add    rdx,rbp
  40748c:	sub    rdx,0x88
  407493:	mov    QWORD PTR [rdx],rax
  407496:	mov    eax,DWORD PTR [rbp-0x98]
  40749c:	add    eax,0x1
  40749f:	mov    DWORD PTR [rbp-0x98],eax
  4074a5:	cmp    DWORD PTR [rbp-0xac],0x0
  4074ac:	je     407513 <flatcc_builder_create_buffer@@Base+0x330>
  4074ae:	mov    rdx,QWORD PTR [rbp-0xa0]
  4074b5:	mov    eax,DWORD PTR [rbp-0xac]
  4074bb:	add    rax,rdx
  4074be:	mov    QWORD PTR [rbp-0xa0],rax
  4074c5:	mov    eax,DWORD PTR [rbp-0x98]
  4074cb:	cdqe   
  4074cd:	shl    rax,0x4
  4074d1:	add    rax,rbp
  4074d4:	sub    rax,0x90
  4074da:	mov    rdx,0x40c6c0
  4074e1:	mov    QWORD PTR [rax],rdx
  4074e4:	mov    edx,DWORD PTR [rbp-0x98]
  4074ea:	mov    eax,DWORD PTR [rbp-0xac]
  4074f0:	movsxd rdx,edx
  4074f3:	shl    rdx,0x4
  4074f7:	add    rdx,rbp
  4074fa:	sub    rdx,0x88
  407501:	mov    QWORD PTR [rdx],rax
  407504:	mov    eax,DWORD PTR [rbp-0x98]
  40750a:	add    eax,0x1
  40750d:	mov    DWORD PTR [rbp-0x98],eax
  407513:	mov    rax,QWORD PTR [rbp-0xd8]
  40751a:	mov    eax,DWORD PTR [rax+0xf0]
  407520:	mov    edx,eax
  407522:	mov    rax,QWORD PTR [rbp-0xa0]
  407529:	sub    edx,eax
  40752b:	mov    eax,edx
  40752d:	cmp    DWORD PTR [rbp-0xb4],0x0
  407534:	jne    40753f <flatcc_builder_create_buffer@@Base+0x35c>
  407536:	cmp    DWORD PTR [rbp-0xb0],0x0
  40753d:	je     407546 <flatcc_builder_create_buffer@@Base+0x363>
  40753f:	mov    edx,0x4
  407544:	jmp    40754b <flatcc_builder_create_buffer@@Base+0x368>
  407546:	mov    edx,0x0
  40754b:	add    eax,edx
  40754d:	mov    DWORD PTR [rbp-0xa8],eax
  407553:	cmp    DWORD PTR [rbp-0xb4],0x0
  40755a:	je     40757e <flatcc_builder_create_buffer@@Base+0x39b>
  40755c:	mov    rax,QWORD PTR [rbp-0xd8]
  407563:	mov    eax,DWORD PTR [rax+0xf8]
  407569:	sub    eax,DWORD PTR [rbp-0xa8]
  40756f:	mov    edi,eax
  407571:	call   4058f2 <main@@Base+0x262>
  407576:	mov    DWORD PTR [rbp-0xc0],eax
  40757c:	jmp    40759e <flatcc_builder_create_buffer@@Base+0x3bb>
  40757e:	mov    rax,QWORD PTR [rbp-0xd8]
  407585:	mov    eax,DWORD PTR [rax+0xf4]
  40758b:	sub    eax,DWORD PTR [rbp-0xa8]
  407591:	mov    edi,eax
  407593:	call   4058f2 <main@@Base+0x262>
  407598:	mov    DWORD PTR [rbp-0xc0],eax
  40759e:	mov    eax,DWORD PTR [rbp-0xe8]
  4075a4:	sub    eax,DWORD PTR [rbp-0xa8]
  4075aa:	mov    edi,eax
  4075ac:	call   4058f2 <main@@Base+0x262>
  4075b1:	mov    DWORD PTR [rbp-0xc4],eax
  4075b7:	lea    rdx,[rbp-0xa0]
  4075be:	mov    rax,QWORD PTR [rbp-0xd8]
  4075c5:	mov    rsi,rdx
  4075c8:	mov    rdi,rax
  4075cb:	call   406c06 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  4075d0:	mov    DWORD PTR [rbp-0xa4],eax
  4075d6:	cmp    DWORD PTR [rbp-0xa4],0x0
  4075dd:	jne    4075fe <flatcc_builder_create_buffer@@Base+0x41b>
  4075df:	lea    rcx,[rip+0x57fa]        # 40cde0 <flatcc_builder_padding_base@@Base+0x720>
  4075e6:	mov    edx,0x304
  4075eb:	lea    rsi,[rip+0x52ce]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4075f2:	lea    rdi,[rip+0x5327]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  4075f9:	call   403080 <__assert_fail@plt>
  4075fe:	mov    eax,DWORD PTR [rbp-0xa4]
  407604:	mov    rsi,QWORD PTR [rbp-0x8]
  407608:	xor    rsi,QWORD PTR fs:0x28
  407611:	je     407618 <flatcc_builder_create_buffer@@Base+0x435>
  407613:	call   403070 <__stack_chk_fail@plt>
  407618:	leave  
  407619:	ret    

000000000040761a <flatcc_builder_create_struct@@Base>:
  40761a:	push   rbp
  40761b:	mov    rbp,rsp
  40761e:	sub    rsp,0xd0
  407625:	mov    QWORD PTR [rbp-0xb8],rdi
  40762c:	mov    QWORD PTR [rbp-0xc0],rsi
  407633:	mov    QWORD PTR [rbp-0xc8],rdx
  40763a:	mov    eax,ecx
  40763c:	mov    WORD PTR [rbp-0xcc],ax
  407643:	mov    rax,QWORD PTR fs:0x28
  40764c:	mov    QWORD PTR [rbp-0x8],rax
  407650:	xor    eax,eax
  407652:	cmp    WORD PTR [rbp-0xcc],0x0
  40765a:	jne    40767b <flatcc_builder_create_struct@@Base+0x61>
  40765c:	lea    rcx,[rip+0x579d]        # 40ce00 <flatcc_builder_padding_base@@Base+0x740>
  407663:	mov    edx,0x30f
  407668:	lea    rsi,[rip+0x5251]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40766f:	lea    rdi,[rip+0x5309]        # 40c97f <flatcc_builder_padding_base@@Base+0x2bf>
  407676:	call   403080 <__assert_fail@plt>
  40767b:	movzx  edx,WORD PTR [rbp-0xcc]
  407682:	mov    rax,QWORD PTR [rbp-0xb8]
  407689:	mov    esi,edx
  40768b:	mov    rdi,rax
  40768e:	call   406602 <flatcc_builder_clear@@Base+0x96>
  407693:	movzx  edx,WORD PTR [rbp-0xcc]
  40769a:	mov    rax,QWORD PTR [rbp-0xc8]
  4076a1:	mov    ecx,eax
  4076a3:	mov    rax,QWORD PTR [rbp-0xb8]
  4076aa:	mov    esi,ecx
  4076ac:	mov    rdi,rax
  4076af:	call   406bba <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  4076b4:	mov    eax,eax
  4076b6:	mov    QWORD PTR [rbp-0xa8],rax
  4076bd:	mov    QWORD PTR [rbp-0xa0],0x0
  4076c8:	mov    DWORD PTR [rbp-0x98],0x0
  4076d2:	cmp    QWORD PTR [rbp-0xc8],0x0
  4076da:	je     407743 <flatcc_builder_create_struct@@Base+0x129>
  4076dc:	mov    rdx,QWORD PTR [rbp-0xa0]
  4076e3:	mov    rax,QWORD PTR [rbp-0xc8]
  4076ea:	add    rax,rdx
  4076ed:	mov    QWORD PTR [rbp-0xa0],rax
  4076f4:	mov    eax,DWORD PTR [rbp-0x98]
  4076fa:	cdqe   
  4076fc:	shl    rax,0x4
  407700:	add    rax,rbp
  407703:	lea    rdx,[rax-0x90]
  40770a:	mov    rax,QWORD PTR [rbp-0xc0]
  407711:	mov    QWORD PTR [rdx],rax
  407714:	mov    eax,DWORD PTR [rbp-0x98]
  40771a:	cdqe   
  40771c:	shl    rax,0x4
  407720:	add    rax,rbp
  407723:	lea    rdx,[rax-0x88]
  40772a:	mov    rax,QWORD PTR [rbp-0xc8]
  407731:	mov    QWORD PTR [rdx],rax
  407734:	mov    eax,DWORD PTR [rbp-0x98]
  40773a:	add    eax,0x1
  40773d:	mov    DWORD PTR [rbp-0x98],eax
  407743:	cmp    QWORD PTR [rbp-0xa8],0x0
  40774b:	je     4077b3 <flatcc_builder_create_struct@@Base+0x199>
  40774d:	mov    rdx,QWORD PTR [rbp-0xa0]
  407754:	mov    rax,QWORD PTR [rbp-0xa8]
  40775b:	add    rax,rdx
  40775e:	mov    QWORD PTR [rbp-0xa0],rax
  407765:	mov    eax,DWORD PTR [rbp-0x98]
  40776b:	cdqe   
  40776d:	shl    rax,0x4
  407771:	add    rax,rbp
  407774:	sub    rax,0x90
  40777a:	mov    rdx,0x40c6c0
  407781:	mov    QWORD PTR [rax],rdx
  407784:	mov    eax,DWORD PTR [rbp-0x98]
  40778a:	cdqe   
  40778c:	shl    rax,0x4
  407790:	add    rax,rbp
  407793:	lea    rdx,[rax-0x88]
  40779a:	mov    rax,QWORD PTR [rbp-0xa8]
  4077a1:	mov    QWORD PTR [rdx],rax
  4077a4:	mov    eax,DWORD PTR [rbp-0x98]
  4077aa:	add    eax,0x1
  4077ad:	mov    DWORD PTR [rbp-0x98],eax
  4077b3:	lea    rdx,[rbp-0xa0]
  4077ba:	mov    rax,QWORD PTR [rbp-0xb8]
  4077c1:	mov    rsi,rdx
  4077c4:	mov    rdi,rax
  4077c7:	call   406c06 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  4077cc:	mov    rcx,QWORD PTR [rbp-0x8]
  4077d0:	xor    rcx,QWORD PTR fs:0x28
  4077d9:	je     4077e0 <flatcc_builder_create_struct@@Base+0x1c6>
  4077db:	call   403070 <__stack_chk_fail@plt>
  4077e0:	leave  
  4077e1:	ret    

00000000004077e2 <flatcc_builder_start_buffer@@Base>:
  4077e2:	push   rbp
  4077e3:	mov    rbp,rsp
  4077e6:	sub    rsp,0x20
  4077ea:	mov    QWORD PTR [rbp-0x8],rdi
  4077ee:	mov    QWORD PTR [rbp-0x10],rsi
  4077f2:	mov    eax,edx
  4077f4:	mov    DWORD PTR [rbp-0x18],ecx
  4077f7:	mov    WORD PTR [rbp-0x14],ax
  4077fb:	mov    rax,QWORD PTR [rbp-0x8]
  4077ff:	movzx  eax,WORD PTR [rax+0xe8]
  407806:	movzx  edx,ax
  407809:	mov    rax,QWORD PTR [rbp-0x8]
  40780d:	mov    esi,edx
  40780f:	mov    rdi,rax
  407812:	call   40691b <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  407817:	test   eax,eax
  407819:	je     407825 <flatcc_builder_start_buffer@@Base+0x43>
  40781b:	mov    eax,0xffffffff
  407820:	jmp    407929 <flatcc_builder_start_buffer@@Base+0x147>
  407825:	mov    rax,QWORD PTR [rbp-0x8]
  407829:	mov    WORD PTR [rax+0xe8],0x1
  407832:	mov    rax,QWORD PTR [rbp-0x8]
  407836:	mov    rax,QWORD PTR [rax+0x30]
  40783a:	mov    rdx,QWORD PTR [rbp-0x8]
  40783e:	movzx  edx,WORD PTR [rdx+0xec]
  407845:	mov    WORD PTR [rax+0x22],dx
  407849:	mov    rax,QWORD PTR [rbp-0x8]
  40784d:	movzx  edx,WORD PTR [rbp-0x14]
  407851:	mov    WORD PTR [rax+0xec],dx
  407858:	mov    rax,QWORD PTR [rbp-0x8]
  40785c:	mov    rax,QWORD PTR [rax+0x30]
  407860:	mov    rdx,QWORD PTR [rbp-0x8]
  407864:	movzx  edx,WORD PTR [rdx+0x10c]
  40786b:	mov    WORD PTR [rax+0x20],dx
  40786f:	mov    eax,DWORD PTR [rbp-0x18]
  407872:	mov    edx,eax
  407874:	mov    rax,QWORD PTR [rbp-0x8]
  407878:	mov    WORD PTR [rax+0x10c],dx
  40787f:	mov    rax,QWORD PTR [rbp-0x8]
  407883:	mov    rax,QWORD PTR [rax+0x30]
  407887:	mov    rdx,QWORD PTR [rbp-0x8]
  40788b:	mov    edx,DWORD PTR [rdx+0xf8]
  407891:	mov    DWORD PTR [rax+0x14],edx
  407894:	mov    rax,QWORD PTR [rbp-0x8]
  407898:	mov    rax,QWORD PTR [rax+0x30]
  40789c:	mov    rdx,QWORD PTR [rbp-0x8]
  4078a0:	mov    edx,DWORD PTR [rdx+0x100]
  4078a6:	mov    DWORD PTR [rax+0x1c],edx
  4078a9:	mov    rax,QWORD PTR [rbp-0x8]
  4078ad:	mov    edx,DWORD PTR [rax+0xf0]
  4078b3:	mov    rax,QWORD PTR [rbp-0x8]
  4078b7:	mov    DWORD PTR [rax+0xf8],edx
  4078bd:	mov    rax,QWORD PTR [rbp-0x8]
  4078c1:	mov    eax,DWORD PTR [rax+0xfc]
  4078c7:	lea    ecx,[rax+0x1]
  4078ca:	mov    rdx,QWORD PTR [rbp-0x8]
  4078ce:	mov    DWORD PTR [rdx+0xfc],ecx
  4078d4:	mov    rdx,QWORD PTR [rbp-0x8]
  4078d8:	mov    DWORD PTR [rdx+0x100],eax
  4078de:	mov    rax,QWORD PTR [rbp-0x8]
  4078e2:	mov    rax,QWORD PTR [rax+0x30]
  4078e6:	mov    rdx,QWORD PTR [rbp-0x8]
  4078ea:	mov    edx,DWORD PTR [rdx+0x110]
  4078f0:	mov    DWORD PTR [rax+0x10],edx
  4078f3:	cmp    QWORD PTR [rbp-0x10],0x0
  4078f8:	je     407900 <flatcc_builder_start_buffer@@Base+0x11e>
  4078fa:	mov    rax,QWORD PTR [rbp-0x10]
  4078fe:	jmp    407907 <flatcc_builder_start_buffer@@Base+0x125>
  407900:	mov    rax,0x40c6c0
  407907:	mov    rdx,QWORD PTR [rbp-0x8]
  40790b:	add    rdx,0x110
  407912:	mov    eax,DWORD PTR [rax]
  407914:	mov    DWORD PTR [rdx],eax
  407916:	mov    rax,QWORD PTR [rbp-0x8]
  40791a:	mov    rax,QWORD PTR [rax+0x30]
  40791e:	mov    WORD PTR [rax+0xe],0x1
  407924:	mov    eax,0x0
  407929:	leave  
  40792a:	ret    

000000000040792b <flatcc_builder_end_buffer@@Base>:
  40792b:	push   rbp
  40792c:	mov    rbp,rsp
  40792f:	sub    rsp,0x20
  407933:	mov    QWORD PTR [rbp-0x18],rdi
  407937:	mov    DWORD PTR [rbp-0x1c],esi
  40793a:	mov    rax,QWORD PTR [rbp-0x18]
  40793e:	movzx  eax,WORD PTR [rax+0x10c]
  407945:	movzx  eax,ax
  407948:	and    eax,0x2
  40794b:	mov    DWORD PTR [rbp-0x8],eax
  40794e:	mov    rax,QWORD PTR [rbp-0x18]
  407952:	mov    eax,DWORD PTR [rax+0x100]
  407958:	test   eax,eax
  40795a:	setne  al
  40795d:	movzx  eax,al
  407960:	or     DWORD PTR [rbp-0x8],eax
  407963:	mov    rax,QWORD PTR [rbp-0x18]
  407967:	mov    rax,QWORD PTR [rax+0x30]
  40796b:	movzx  eax,WORD PTR [rax+0xe]
  40796f:	cmp    ax,0x1
  407973:	je     407994 <flatcc_builder_end_buffer@@Base+0x69>
  407975:	lea    rcx,[rip+0x54a4]        # 40ce20 <flatcc_builder_padding_base@@Base+0x760>
  40797c:	mov    edx,0x346
  407981:	lea    rsi,[rip+0x4f38]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  407988:	lea    rdi,[rip+0x5001]        # 40c990 <flatcc_builder_padding_base@@Base+0x2d0>
  40798f:	call   403080 <__assert_fail@plt>
  407994:	mov    rax,QWORD PTR [rbp-0x18]
  407998:	movzx  eax,WORD PTR [rax+0xec]
  40799f:	movzx  edx,ax
  4079a2:	mov    rax,QWORD PTR [rbp-0x18]
  4079a6:	mov    esi,edx
  4079a8:	mov    rdi,rax
  4079ab:	call   406602 <flatcc_builder_clear@@Base+0x96>
  4079b0:	mov    rax,QWORD PTR [rbp-0x18]
  4079b4:	movzx  eax,WORD PTR [rax+0xe8]
  4079bb:	movzx  edi,ax
  4079be:	mov    rax,QWORD PTR [rbp-0x18]
  4079c2:	movzx  eax,WORD PTR [rax+0xec]
  4079c9:	movzx  edx,ax
  4079cc:	mov    rax,QWORD PTR [rbp-0x18]
  4079d0:	lea    rsi,[rax+0x110]
  4079d7:	mov    r8d,DWORD PTR [rbp-0x8]
  4079db:	mov    ecx,DWORD PTR [rbp-0x1c]
  4079de:	mov    rax,QWORD PTR [rbp-0x18]
  4079e2:	mov    r9d,r8d
  4079e5:	mov    r8d,edi
  4079e8:	mov    rdi,rax
  4079eb:	call   4071e3 <flatcc_builder_create_buffer@@Base>
  4079f0:	mov    DWORD PTR [rbp-0x4],eax
  4079f3:	cmp    DWORD PTR [rbp-0x4],0x0
  4079f7:	jne    407a00 <flatcc_builder_end_buffer@@Base+0xd5>
  4079f9:	mov    eax,0x0
  4079fe:	jmp    407a65 <flatcc_builder_end_buffer@@Base+0x13a>
  407a00:	mov    rax,QWORD PTR [rbp-0x18]
  407a04:	mov    rax,QWORD PTR [rax+0x30]
  407a08:	mov    edx,DWORD PTR [rax+0x14]
  407a0b:	mov    rax,QWORD PTR [rbp-0x18]
  407a0f:	mov    DWORD PTR [rax+0xf8],edx
  407a15:	mov    rax,QWORD PTR [rbp-0x18]
  407a19:	mov    rax,QWORD PTR [rax+0x30]
  407a1d:	mov    edx,DWORD PTR [rax+0x1c]
  407a20:	mov    rax,QWORD PTR [rbp-0x18]
  407a24:	mov    DWORD PTR [rax+0x100],edx
  407a2a:	mov    rax,QWORD PTR [rbp-0x18]
  407a2e:	mov    rax,QWORD PTR [rax+0x30]
  407a32:	mov    edx,DWORD PTR [rax+0x10]
  407a35:	mov    rax,QWORD PTR [rbp-0x18]
  407a39:	mov    DWORD PTR [rax+0x110],edx
  407a3f:	mov    rax,QWORD PTR [rbp-0x18]
  407a43:	mov    rax,QWORD PTR [rax+0x30]
  407a47:	movzx  edx,WORD PTR [rax+0x20]
  407a4b:	mov    rax,QWORD PTR [rbp-0x18]
  407a4f:	mov    WORD PTR [rax+0x10c],dx
  407a56:	mov    rax,QWORD PTR [rbp-0x18]
  407a5a:	mov    rdi,rax
  407a5d:	call   406af3 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  407a62:	mov    eax,DWORD PTR [rbp-0x4]
  407a65:	leave  
  407a66:	ret    

0000000000407a67 <flatcc_builder_start_struct@@Base>:
  407a67:	push   rbp
  407a68:	mov    rbp,rsp
  407a6b:	sub    rsp,0x20
  407a6f:	mov    QWORD PTR [rbp-0x8],rdi
  407a73:	mov    QWORD PTR [rbp-0x10],rsi
  407a77:	mov    eax,edx
  407a79:	mov    WORD PTR [rbp-0x14],ax
  407a7d:	movzx  edx,WORD PTR [rbp-0x14]
  407a81:	mov    rax,QWORD PTR [rbp-0x8]
  407a85:	mov    esi,edx
  407a87:	mov    rdi,rax
  407a8a:	call   40691b <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  407a8f:	test   eax,eax
  407a91:	je     407a9a <flatcc_builder_start_struct@@Base+0x33>
  407a93:	mov    eax,0x0
  407a98:	jmp    407acd <flatcc_builder_start_struct@@Base+0x66>
  407a9a:	mov    rax,QWORD PTR [rbp-0x8]
  407a9e:	mov    rax,QWORD PTR [rax+0x30]
  407aa2:	mov    WORD PTR [rax+0xe],0x2
  407aa8:	mov    rax,QWORD PTR [rbp-0x8]
  407aac:	mov    esi,0xfffffffc
  407ab1:	mov    rdi,rax
  407ab4:	call   405b25 <flatcc_builder_default_alloc@@Base+0x16d>
  407ab9:	mov    rax,QWORD PTR [rbp-0x10]
  407abd:	mov    edx,eax
  407abf:	mov    rax,QWORD PTR [rbp-0x8]
  407ac3:	mov    esi,edx
  407ac5:	mov    rdi,rax
  407ac8:	call   405c18 <flatcc_builder_default_alloc@@Base+0x260>
  407acd:	leave  
  407ace:	ret    

0000000000407acf <flatcc_builder_struct_edit@@Base>:
  407acf:	push   rbp
  407ad0:	mov    rbp,rsp
  407ad3:	mov    QWORD PTR [rbp-0x8],rdi
  407ad7:	mov    rax,QWORD PTR [rbp-0x8]
  407adb:	mov    rax,QWORD PTR [rax+0x18]
  407adf:	pop    rbp
  407ae0:	ret    

0000000000407ae1 <flatcc_builder_end_struct@@Base>:
  407ae1:	push   rbp
  407ae2:	mov    rbp,rsp
  407ae5:	sub    rsp,0x20
  407ae9:	mov    QWORD PTR [rbp-0x18],rdi
  407aed:	mov    rax,QWORD PTR [rbp-0x18]
  407af1:	mov    rax,QWORD PTR [rax+0x30]
  407af5:	movzx  eax,WORD PTR [rax+0xe]
  407af9:	cmp    ax,0x2
  407afd:	je     407b1e <flatcc_builder_end_struct@@Base+0x3d>
  407aff:	lea    rcx,[rip+0x533a]        # 40ce40 <flatcc_builder_padding_base@@Base+0x780>
  407b06:	mov    edx,0x368
  407b0b:	lea    rsi,[rip+0x4dae]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  407b12:	lea    rdi,[rip+0x4ea7]        # 40c9c0 <flatcc_builder_padding_base@@Base+0x300>
  407b19:	call   403080 <__assert_fail@plt>
  407b1e:	mov    rax,QWORD PTR [rbp-0x18]
  407b22:	movzx  eax,WORD PTR [rax+0xea]
  407b29:	movzx  edx,ax
  407b2c:	mov    rax,QWORD PTR [rbp-0x18]
  407b30:	mov    eax,DWORD PTR [rax+0x20]
  407b33:	mov    edi,eax
  407b35:	mov    rax,QWORD PTR [rbp-0x18]
  407b39:	mov    rsi,QWORD PTR [rax+0x18]
  407b3d:	mov    rax,QWORD PTR [rbp-0x18]
  407b41:	mov    ecx,edx
  407b43:	mov    rdx,rdi
  407b46:	mov    rdi,rax
  407b49:	call   40761a <flatcc_builder_create_struct@@Base>
  407b4e:	mov    DWORD PTR [rbp-0x4],eax
  407b51:	cmp    DWORD PTR [rbp-0x4],0x0
  407b55:	jne    407b5e <flatcc_builder_end_struct@@Base+0x7d>
  407b57:	mov    eax,0x0
  407b5c:	jmp    407b6d <flatcc_builder_end_struct@@Base+0x8c>
  407b5e:	mov    rax,QWORD PTR [rbp-0x18]
  407b62:	mov    rdi,rax
  407b65:	call   406af3 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  407b6a:	mov    eax,DWORD PTR [rbp-0x4]
  407b6d:	leave  
  407b6e:	ret    
  407b6f:	push   rbp
  407b70:	mov    rbp,rsp
  407b73:	sub    rsp,0x20
  407b77:	mov    QWORD PTR [rbp-0x18],rdi
  407b7b:	mov    DWORD PTR [rbp-0x1c],esi
  407b7e:	mov    DWORD PTR [rbp-0x20],edx
  407b81:	mov    rax,QWORD PTR [rbp-0x18]
  407b85:	mov    rax,QWORD PTR [rax+0x30]
  407b89:	mov    eax,DWORD PTR [rax+0x14]
  407b8c:	mov    DWORD PTR [rbp-0x8],eax
  407b8f:	mov    edx,DWORD PTR [rbp-0x8]
  407b92:	mov    eax,DWORD PTR [rbp-0x1c]
  407b95:	add    eax,edx
  407b97:	mov    DWORD PTR [rbp-0x4],eax
  407b9a:	mov    eax,DWORD PTR [rbp-0x8]
  407b9d:	cmp    eax,DWORD PTR [rbp-0x4]
  407ba0:	ja     407baa <flatcc_builder_end_struct@@Base+0xc9>
  407ba2:	mov    eax,DWORD PTR [rbp-0x4]
  407ba5:	cmp    eax,DWORD PTR [rbp-0x20]
  407ba8:	jbe    407be0 <flatcc_builder_end_struct@@Base+0xff>
  407baa:	mov    eax,DWORD PTR [rbp-0x8]
  407bad:	cmp    eax,DWORD PTR [rbp-0x4]
  407bb0:	ja     407bba <flatcc_builder_end_struct@@Base+0xd9>
  407bb2:	mov    eax,DWORD PTR [rbp-0x4]
  407bb5:	cmp    eax,DWORD PTR [rbp-0x20]
  407bb8:	jbe    407bd9 <flatcc_builder_end_struct@@Base+0xf8>
  407bba:	lea    rcx,[rip+0x529f]        # 40ce60 <flatcc_builder_padding_base@@Base+0x7a0>
  407bc1:	mov    edx,0x37c
  407bc6:	lea    rsi,[rip+0x4cf3]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  407bcd:	lea    rdi,[rip+0x4e18]        # 40c9ec <flatcc_builder_padding_base@@Base+0x32c>
  407bd4:	call   403080 <__assert_fail@plt>
  407bd9:	mov    eax,0xffffffff
  407bde:	jmp    407bf3 <flatcc_builder_end_struct@@Base+0x112>
  407be0:	mov    rax,QWORD PTR [rbp-0x18]
  407be4:	mov    rax,QWORD PTR [rax+0x30]
  407be8:	mov    edx,DWORD PTR [rbp-0x4]
  407beb:	mov    DWORD PTR [rax+0x14],edx
  407bee:	mov    eax,0x0
  407bf3:	leave  
  407bf4:	ret    

0000000000407bf5 <flatcc_builder_extend_vector@@Base>:
  407bf5:	push   rbp
  407bf6:	mov    rbp,rsp
  407bf9:	sub    rsp,0x10
  407bfd:	mov    QWORD PTR [rbp-0x8],rdi
  407c01:	mov    QWORD PTR [rbp-0x10],rsi
  407c05:	mov    rax,QWORD PTR [rbp-0x8]
  407c09:	mov    rax,QWORD PTR [rax+0x30]
  407c0d:	mov    edx,DWORD PTR [rax+0x18]
  407c10:	mov    rax,QWORD PTR [rbp-0x10]
  407c14:	mov    ecx,eax
  407c16:	mov    rax,QWORD PTR [rbp-0x8]
  407c1a:	mov    esi,ecx
  407c1c:	mov    rdi,rax
  407c1f:	call   407b6f <flatcc_builder_end_struct@@Base+0x8e>
  407c24:	test   eax,eax
  407c26:	je     407c2f <flatcc_builder_extend_vector@@Base+0x3a>
  407c28:	mov    eax,0x0
  407c2d:	jmp    407c4f <flatcc_builder_extend_vector@@Base+0x5a>
  407c2f:	mov    rax,QWORD PTR [rbp-0x8]
  407c33:	mov    rax,QWORD PTR [rax+0x30]
  407c37:	mov    eax,DWORD PTR [rax+0x10]
  407c3a:	mov    rdx,QWORD PTR [rbp-0x10]
  407c3e:	imul   edx,eax
  407c41:	mov    rax,QWORD PTR [rbp-0x8]
  407c45:	mov    esi,edx
  407c47:	mov    rdi,rax
  407c4a:	call   405c18 <flatcc_builder_default_alloc@@Base+0x260>
  407c4f:	leave  
  407c50:	ret    

0000000000407c51 <flatcc_builder_vector_push@@Base>:
  407c51:	push   rbp
  407c52:	mov    rbp,rsp
  407c55:	sub    rsp,0x10
  407c59:	mov    QWORD PTR [rbp-0x8],rdi
  407c5d:	mov    QWORD PTR [rbp-0x10],rsi
  407c61:	mov    rax,QWORD PTR [rbp-0x8]
  407c65:	mov    rax,QWORD PTR [rax+0x30]
  407c69:	movzx  eax,WORD PTR [rax+0xe]
  407c6d:	cmp    ax,0x4
  407c71:	je     407c92 <flatcc_builder_vector_push@@Base+0x41>
  407c73:	lea    rcx,[rip+0x5206]        # 40ce80 <flatcc_builder_padding_base@@Base+0x7c0>
  407c7a:	mov    edx,0x38b
  407c7f:	lea    rsi,[rip+0x4c3a]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  407c86:	lea    rdi,[rip+0x4d7b]        # 40ca08 <flatcc_builder_padding_base@@Base+0x348>
  407c8d:	call   403080 <__assert_fail@plt>
  407c92:	mov    rax,QWORD PTR [rbp-0x8]
  407c96:	mov    rax,QWORD PTR [rax+0x30]
  407c9a:	mov    edx,DWORD PTR [rax+0x14]
  407c9d:	mov    rax,QWORD PTR [rbp-0x8]
  407ca1:	mov    rax,QWORD PTR [rax+0x30]
  407ca5:	mov    eax,DWORD PTR [rax+0x18]
  407ca8:	cmp    edx,eax
  407caa:	jbe    407cec <flatcc_builder_vector_push@@Base+0x9b>
  407cac:	mov    rax,QWORD PTR [rbp-0x8]
  407cb0:	mov    rax,QWORD PTR [rax+0x30]
  407cb4:	mov    edx,DWORD PTR [rax+0x14]
  407cb7:	mov    rax,QWORD PTR [rbp-0x8]
  407cbb:	mov    rax,QWORD PTR [rax+0x30]
  407cbf:	mov    eax,DWORD PTR [rax+0x18]
  407cc2:	cmp    edx,eax
  407cc4:	jbe    407ce5 <flatcc_builder_vector_push@@Base+0x94>
  407cc6:	lea    rcx,[rip+0x51b3]        # 40ce80 <flatcc_builder_padding_base@@Base+0x7c0>
  407ccd:	mov    edx,0x38c
  407cd2:	lea    rsi,[rip+0x4be7]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  407cd9:	lea    rdi,[rip+0x4d58]        # 40ca38 <flatcc_builder_padding_base@@Base+0x378>
  407ce0:	call   403080 <__assert_fail@plt>
  407ce5:	mov    eax,0x0
  407cea:	jmp    407d23 <flatcc_builder_vector_push@@Base+0xd2>
  407cec:	mov    rax,QWORD PTR [rbp-0x8]
  407cf0:	mov    rax,QWORD PTR [rax+0x30]
  407cf4:	mov    rdx,QWORD PTR [rbp-0x8]
  407cf8:	mov    rdx,QWORD PTR [rdx+0x30]
  407cfc:	mov    edx,DWORD PTR [rdx+0x14]
  407cff:	add    edx,0x1
  407d02:	mov    DWORD PTR [rax+0x14],edx
  407d05:	mov    rax,QWORD PTR [rbp-0x8]
  407d09:	mov    rax,QWORD PTR [rax+0x30]
  407d0d:	mov    edx,DWORD PTR [rax+0x10]
  407d10:	mov    rcx,QWORD PTR [rbp-0x10]
  407d14:	mov    rax,QWORD PTR [rbp-0x8]
  407d18:	mov    rsi,rcx
  407d1b:	mov    rdi,rax
  407d1e:	call   405ce1 <flatcc_builder_default_alloc@@Base+0x329>
  407d23:	leave  
  407d24:	ret    

0000000000407d25 <flatcc_builder_append_vector@@Base>:
  407d25:	push   rbp
  407d26:	mov    rbp,rsp
  407d29:	sub    rsp,0x20
  407d2d:	mov    QWORD PTR [rbp-0x8],rdi
  407d31:	mov    QWORD PTR [rbp-0x10],rsi
  407d35:	mov    QWORD PTR [rbp-0x18],rdx
  407d39:	mov    rax,QWORD PTR [rbp-0x8]
  407d3d:	mov    rax,QWORD PTR [rax+0x30]
  407d41:	movzx  eax,WORD PTR [rax+0xe]
  407d45:	cmp    ax,0x4
  407d49:	je     407d6a <flatcc_builder_append_vector@@Base+0x45>
  407d4b:	lea    rcx,[rip+0x514e]        # 40cea0 <flatcc_builder_padding_base@@Base+0x7e0>
  407d52:	mov    edx,0x393
  407d57:	lea    rsi,[rip+0x4b62]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  407d5e:	lea    rdi,[rip+0x4ca3]        # 40ca08 <flatcc_builder_padding_base@@Base+0x348>
  407d65:	call   403080 <__assert_fail@plt>
  407d6a:	mov    rax,QWORD PTR [rbp-0x8]
  407d6e:	mov    rax,QWORD PTR [rax+0x30]
  407d72:	mov    edx,DWORD PTR [rax+0x18]
  407d75:	mov    rax,QWORD PTR [rbp-0x18]
  407d79:	mov    ecx,eax
  407d7b:	mov    rax,QWORD PTR [rbp-0x8]
  407d7f:	mov    esi,ecx
  407d81:	mov    rdi,rax
  407d84:	call   407b6f <flatcc_builder_end_struct@@Base+0x8e>
  407d89:	test   eax,eax
  407d8b:	je     407d94 <flatcc_builder_append_vector@@Base+0x6f>
  407d8d:	mov    eax,0x0
  407d92:	jmp    407db9 <flatcc_builder_append_vector@@Base+0x94>
  407d94:	mov    rax,QWORD PTR [rbp-0x8]
  407d98:	mov    rax,QWORD PTR [rax+0x30]
  407d9c:	mov    eax,DWORD PTR [rax+0x10]
  407d9f:	mov    rdx,QWORD PTR [rbp-0x18]
  407da3:	imul   edx,eax
  407da6:	mov    rcx,QWORD PTR [rbp-0x10]
  407daa:	mov    rax,QWORD PTR [rbp-0x8]
  407dae:	mov    rsi,rcx
  407db1:	mov    rdi,rax
  407db4:	call   405ce1 <flatcc_builder_default_alloc@@Base+0x329>
  407db9:	leave  
  407dba:	ret    

0000000000407dbb <flatcc_builder_extend_offset_vector@@Base>:
  407dbb:	push   rbp
  407dbc:	mov    rbp,rsp
  407dbf:	sub    rsp,0x10
  407dc3:	mov    QWORD PTR [rbp-0x8],rdi
  407dc7:	mov    QWORD PTR [rbp-0x10],rsi
  407dcb:	mov    rax,QWORD PTR [rbp-0x10]
  407dcf:	mov    ecx,eax
  407dd1:	mov    rax,QWORD PTR [rbp-0x8]
  407dd5:	mov    edx,0x3fffffff
  407dda:	mov    esi,ecx
  407ddc:	mov    rdi,rax
  407ddf:	call   407b6f <flatcc_builder_end_struct@@Base+0x8e>
  407de4:	test   eax,eax
  407de6:	je     407def <flatcc_builder_extend_offset_vector@@Base+0x34>
  407de8:	mov    eax,0x0
  407ded:	jmp    407e08 <flatcc_builder_extend_offset_vector@@Base+0x4d>
  407def:	mov    rax,QWORD PTR [rbp-0x10]
  407df3:	lea    edx,[rax*4+0x0]
  407dfa:	mov    rax,QWORD PTR [rbp-0x8]
  407dfe:	mov    esi,edx
  407e00:	mov    rdi,rax
  407e03:	call   405c18 <flatcc_builder_default_alloc@@Base+0x260>
  407e08:	leave  
  407e09:	ret    

0000000000407e0a <flatcc_builder_offset_vector_push@@Base>:
  407e0a:	push   rbp
  407e0b:	mov    rbp,rsp
  407e0e:	sub    rsp,0x20
  407e12:	mov    QWORD PTR [rbp-0x18],rdi
  407e16:	mov    DWORD PTR [rbp-0x1c],esi
  407e19:	mov    rax,QWORD PTR [rbp-0x18]
  407e1d:	mov    rax,QWORD PTR [rax+0x30]
  407e21:	movzx  eax,WORD PTR [rax+0xe]
  407e25:	cmp    ax,0x5
  407e29:	je     407e4a <flatcc_builder_offset_vector_push@@Base+0x40>
  407e2b:	lea    rcx,[rip+0x508e]        # 40cec0 <flatcc_builder_padding_base@@Base+0x800>
  407e32:	mov    edx,0x3a6
  407e37:	lea    rsi,[rip+0x4a82]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  407e3e:	lea    rdi,[rip+0x4c33]        # 40ca78 <flatcc_builder_padding_base@@Base+0x3b8>
  407e45:	call   403080 <__assert_fail@plt>
  407e4a:	mov    rax,QWORD PTR [rbp-0x18]
  407e4e:	mov    rax,QWORD PTR [rax+0x30]
  407e52:	mov    eax,DWORD PTR [rax+0x14]
  407e55:	cmp    eax,0x3fffffff
  407e5a:	jne    407e63 <flatcc_builder_offset_vector_push@@Base+0x59>
  407e5c:	mov    eax,0x0
  407e61:	jmp    407eac <flatcc_builder_offset_vector_push@@Base+0xa2>
  407e63:	mov    rax,QWORD PTR [rbp-0x18]
  407e67:	mov    rax,QWORD PTR [rax+0x30]
  407e6b:	mov    rdx,QWORD PTR [rbp-0x18]
  407e6f:	mov    rdx,QWORD PTR [rdx+0x30]
  407e73:	mov    edx,DWORD PTR [rdx+0x14]
  407e76:	add    edx,0x1
  407e79:	mov    DWORD PTR [rax+0x14],edx
  407e7c:	mov    rax,QWORD PTR [rbp-0x18]
  407e80:	mov    esi,0x4
  407e85:	mov    rdi,rax
  407e88:	call   405c18 <flatcc_builder_default_alloc@@Base+0x260>
  407e8d:	mov    QWORD PTR [rbp-0x8],rax
  407e91:	cmp    QWORD PTR [rbp-0x8],0x0
  407e96:	jne    407e9f <flatcc_builder_offset_vector_push@@Base+0x95>
  407e98:	mov    eax,0x0
  407e9d:	jmp    407eac <flatcc_builder_offset_vector_push@@Base+0xa2>
  407e9f:	mov    rax,QWORD PTR [rbp-0x8]
  407ea3:	mov    edx,DWORD PTR [rbp-0x1c]
  407ea6:	mov    DWORD PTR [rax],edx
  407ea8:	mov    rax,QWORD PTR [rbp-0x8]
  407eac:	leave  
  407ead:	ret    

0000000000407eae <flatcc_builder_append_offset_vector@@Base>:
  407eae:	push   rbp
  407eaf:	mov    rbp,rsp
  407eb2:	sub    rsp,0x20
  407eb6:	mov    QWORD PTR [rbp-0x8],rdi
  407eba:	mov    QWORD PTR [rbp-0x10],rsi
  407ebe:	mov    QWORD PTR [rbp-0x18],rdx
  407ec2:	mov    rax,QWORD PTR [rbp-0x8]
  407ec6:	mov    rax,QWORD PTR [rax+0x30]
  407eca:	movzx  eax,WORD PTR [rax+0xe]
  407ece:	cmp    ax,0x5
  407ed2:	je     407ef3 <flatcc_builder_append_offset_vector@@Base+0x45>
  407ed4:	lea    rcx,[rip+0x5025]        # 40cf00 <flatcc_builder_padding_base@@Base+0x840>
  407edb:	mov    edx,0x3b4
  407ee0:	lea    rsi,[rip+0x49d9]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  407ee7:	lea    rdi,[rip+0x4b8a]        # 40ca78 <flatcc_builder_padding_base@@Base+0x3b8>
  407eee:	call   403080 <__assert_fail@plt>
  407ef3:	mov    rax,QWORD PTR [rbp-0x18]
  407ef7:	mov    ecx,eax
  407ef9:	mov    rax,QWORD PTR [rbp-0x8]
  407efd:	mov    edx,0x3fffffff
  407f02:	mov    esi,ecx
  407f04:	mov    rdi,rax
  407f07:	call   407b6f <flatcc_builder_end_struct@@Base+0x8e>
  407f0c:	test   eax,eax
  407f0e:	je     407f17 <flatcc_builder_append_offset_vector@@Base+0x69>
  407f10:	mov    eax,0x0
  407f15:	jmp    407f35 <flatcc_builder_append_offset_vector@@Base+0x87>
  407f17:	mov    rax,QWORD PTR [rbp-0x18]
  407f1b:	lea    edx,[rax*4+0x0]
  407f22:	mov    rcx,QWORD PTR [rbp-0x10]
  407f26:	mov    rax,QWORD PTR [rbp-0x8]
  407f2a:	mov    rsi,rcx
  407f2d:	mov    rdi,rax
  407f30:	call   405ce1 <flatcc_builder_default_alloc@@Base+0x329>
  407f35:	leave  
  407f36:	ret    

0000000000407f37 <flatcc_builder_extend_string@@Base>:
  407f37:	push   rbp
  407f38:	mov    rbp,rsp
  407f3b:	sub    rsp,0x10
  407f3f:	mov    QWORD PTR [rbp-0x8],rdi
  407f43:	mov    QWORD PTR [rbp-0x10],rsi
  407f47:	mov    rax,QWORD PTR [rbp-0x8]
  407f4b:	mov    rax,QWORD PTR [rax+0x30]
  407f4f:	movzx  eax,WORD PTR [rax+0xe]
  407f53:	cmp    ax,0x6
  407f57:	je     407f78 <flatcc_builder_extend_string@@Base+0x41>
  407f59:	lea    rcx,[rip+0x4fd0]        # 40cf30 <flatcc_builder_padding_base@@Base+0x870>
  407f60:	mov    edx,0x3bd
  407f65:	lea    rsi,[rip+0x4954]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  407f6c:	lea    rdi,[rip+0x4b3d]        # 40cab0 <flatcc_builder_padding_base@@Base+0x3f0>
  407f73:	call   403080 <__assert_fail@plt>
  407f78:	mov    rax,QWORD PTR [rbp-0x10]
  407f7c:	mov    ecx,eax
  407f7e:	mov    rax,QWORD PTR [rbp-0x8]
  407f82:	mov    edx,0xffffffff
  407f87:	mov    esi,ecx
  407f89:	mov    rdi,rax
  407f8c:	call   407b6f <flatcc_builder_end_struct@@Base+0x8e>
  407f91:	test   eax,eax
  407f93:	je     407f9c <flatcc_builder_extend_string@@Base+0x65>
  407f95:	mov    eax,0x0
  407f9a:	jmp    407fb0 <flatcc_builder_extend_string@@Base+0x79>
  407f9c:	mov    rax,QWORD PTR [rbp-0x10]
  407fa0:	mov    edx,eax
  407fa2:	mov    rax,QWORD PTR [rbp-0x8]
  407fa6:	mov    esi,edx
  407fa8:	mov    rdi,rax
  407fab:	call   405c18 <flatcc_builder_default_alloc@@Base+0x260>
  407fb0:	leave  
  407fb1:	ret    

0000000000407fb2 <flatcc_builder_append_string@@Base>:
  407fb2:	push   rbp
  407fb3:	mov    rbp,rsp
  407fb6:	sub    rsp,0x20
  407fba:	mov    QWORD PTR [rbp-0x8],rdi
  407fbe:	mov    QWORD PTR [rbp-0x10],rsi
  407fc2:	mov    QWORD PTR [rbp-0x18],rdx
  407fc6:	mov    rax,QWORD PTR [rbp-0x8]
  407fca:	mov    rax,QWORD PTR [rax+0x30]
  407fce:	movzx  eax,WORD PTR [rax+0xe]
  407fd2:	cmp    ax,0x6
  407fd6:	je     407ff7 <flatcc_builder_append_string@@Base+0x45>
  407fd8:	lea    rcx,[rip+0x4f71]        # 40cf50 <flatcc_builder_padding_base@@Base+0x890>
  407fdf:	mov    edx,0x3c6
  407fe4:	lea    rsi,[rip+0x48d5]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  407feb:	lea    rdi,[rip+0x4abe]        # 40cab0 <flatcc_builder_padding_base@@Base+0x3f0>
  407ff2:	call   403080 <__assert_fail@plt>
  407ff7:	mov    rax,QWORD PTR [rbp-0x18]
  407ffb:	mov    ecx,eax
  407ffd:	mov    rax,QWORD PTR [rbp-0x8]
  408001:	mov    edx,0xffffffff
  408006:	mov    esi,ecx
  408008:	mov    rdi,rax
  40800b:	call   407b6f <flatcc_builder_end_struct@@Base+0x8e>
  408010:	test   eax,eax
  408012:	je     40801b <flatcc_builder_append_string@@Base+0x69>
  408014:	mov    eax,0x0
  408019:	jmp    408034 <flatcc_builder_append_string@@Base+0x82>
  40801b:	mov    rax,QWORD PTR [rbp-0x18]
  40801f:	mov    edx,eax
  408021:	mov    rcx,QWORD PTR [rbp-0x10]
  408025:	mov    rax,QWORD PTR [rbp-0x8]
  408029:	mov    rsi,rcx
  40802c:	mov    rdi,rax
  40802f:	call   405ce1 <flatcc_builder_default_alloc@@Base+0x329>
  408034:	leave  
  408035:	ret    

0000000000408036 <flatcc_builder_append_string_str@@Base>:
  408036:	push   rbp
  408037:	mov    rbp,rsp
  40803a:	sub    rsp,0x10
  40803e:	mov    QWORD PTR [rbp-0x8],rdi
  408042:	mov    QWORD PTR [rbp-0x10],rsi
  408046:	mov    rax,QWORD PTR [rbp-0x10]
  40804a:	mov    rdi,rax
  40804d:	call   403060 <strlen@plt>
  408052:	mov    rdx,rax
  408055:	mov    rcx,QWORD PTR [rbp-0x10]
  408059:	mov    rax,QWORD PTR [rbp-0x8]
  40805d:	mov    rsi,rcx
  408060:	mov    rdi,rax
  408063:	call   407fb2 <flatcc_builder_append_string@@Base>
  408068:	leave  
  408069:	ret    

000000000040806a <flatcc_builder_append_string_strn@@Base>:
  40806a:	push   rbp
  40806b:	mov    rbp,rsp
  40806e:	sub    rsp,0x20
  408072:	mov    QWORD PTR [rbp-0x8],rdi
  408076:	mov    QWORD PTR [rbp-0x10],rsi
  40807a:	mov    QWORD PTR [rbp-0x18],rdx
  40807e:	mov    rdx,QWORD PTR [rbp-0x18]
  408082:	mov    rax,QWORD PTR [rbp-0x10]
  408086:	mov    rsi,rdx
  408089:	mov    rdi,rax
  40808c:	call   405972 <main@@Base+0x2e2>
  408091:	mov    rdx,rax
  408094:	mov    rcx,QWORD PTR [rbp-0x10]
  408098:	mov    rax,QWORD PTR [rbp-0x8]
  40809c:	mov    rsi,rcx
  40809f:	mov    rdi,rax
  4080a2:	call   407fb2 <flatcc_builder_append_string@@Base>
  4080a7:	leave  
  4080a8:	ret    

00000000004080a9 <flatcc_builder_truncate_vector@@Base>:
  4080a9:	push   rbp
  4080aa:	mov    rbp,rsp
  4080ad:	sub    rsp,0x10
  4080b1:	mov    QWORD PTR [rbp-0x8],rdi
  4080b5:	mov    QWORD PTR [rbp-0x10],rsi
  4080b9:	mov    rax,QWORD PTR [rbp-0x8]
  4080bd:	mov    rax,QWORD PTR [rax+0x30]
  4080c1:	movzx  eax,WORD PTR [rax+0xe]
  4080c5:	cmp    ax,0x4
  4080c9:	je     4080ea <flatcc_builder_truncate_vector@@Base+0x41>
  4080cb:	lea    rcx,[rip+0x4e9e]        # 40cf70 <flatcc_builder_padding_base@@Base+0x8b0>
  4080d2:	mov    edx,0x3d9
  4080d7:	lea    rsi,[rip+0x47e2]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4080de:	lea    rdi,[rip+0x4923]        # 40ca08 <flatcc_builder_padding_base@@Base+0x348>
  4080e5:	call   403080 <__assert_fail@plt>
  4080ea:	mov    rax,QWORD PTR [rbp-0x8]
  4080ee:	mov    rax,QWORD PTR [rax+0x30]
  4080f2:	mov    eax,DWORD PTR [rax+0x14]
  4080f5:	mov    eax,eax
  4080f7:	cmp    rax,QWORD PTR [rbp-0x10]
  4080fb:	jae    408136 <flatcc_builder_truncate_vector@@Base+0x8d>
  4080fd:	mov    rax,QWORD PTR [rbp-0x8]
  408101:	mov    rax,QWORD PTR [rax+0x30]
  408105:	mov    eax,DWORD PTR [rax+0x14]
  408108:	mov    eax,eax
  40810a:	cmp    rax,QWORD PTR [rbp-0x10]
  40810e:	jae    40812f <flatcc_builder_truncate_vector@@Base+0x86>
  408110:	lea    rcx,[rip+0x4e59]        # 40cf70 <flatcc_builder_padding_base@@Base+0x8b0>
  408117:	mov    edx,0x3da
  40811c:	lea    rsi,[rip+0x479d]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  408123:	lea    rdi,[rip+0x49b6]        # 40cae0 <flatcc_builder_padding_base@@Base+0x420>
  40812a:	call   403080 <__assert_fail@plt>
  40812f:	mov    eax,0xffffffff
  408134:	jmp    408177 <flatcc_builder_truncate_vector@@Base+0xce>
  408136:	mov    rax,QWORD PTR [rbp-0x8]
  40813a:	mov    rax,QWORD PTR [rax+0x30]
  40813e:	mov    rdx,QWORD PTR [rbp-0x8]
  408142:	mov    rdx,QWORD PTR [rdx+0x30]
  408146:	mov    edx,DWORD PTR [rdx+0x14]
  408149:	mov    rcx,QWORD PTR [rbp-0x10]
  40814d:	sub    edx,ecx
  40814f:	mov    DWORD PTR [rax+0x14],edx
  408152:	mov    rax,QWORD PTR [rbp-0x8]
  408156:	mov    rax,QWORD PTR [rax+0x30]
  40815a:	mov    eax,DWORD PTR [rax+0x10]
  40815d:	mov    rdx,QWORD PTR [rbp-0x10]
  408161:	imul   edx,eax
  408164:	mov    rax,QWORD PTR [rbp-0x8]
  408168:	mov    esi,edx
  40816a:	mov    rdi,rax
  40816d:	call   405c95 <flatcc_builder_default_alloc@@Base+0x2dd>
  408172:	mov    eax,0x0
  408177:	leave  
  408178:	ret    

0000000000408179 <flatcc_builder_truncate_offset_vector@@Base>:
  408179:	push   rbp
  40817a:	mov    rbp,rsp
  40817d:	sub    rsp,0x10
  408181:	mov    QWORD PTR [rbp-0x8],rdi
  408185:	mov    QWORD PTR [rbp-0x10],rsi
  408189:	mov    rax,QWORD PTR [rbp-0x8]
  40818d:	mov    rax,QWORD PTR [rax+0x30]
  408191:	movzx  eax,WORD PTR [rax+0xe]
  408195:	cmp    ax,0x5
  408199:	je     4081ba <flatcc_builder_truncate_offset_vector@@Base+0x41>
  40819b:	lea    rcx,[rip+0x4dfe]        # 40cfa0 <flatcc_builder_padding_base@@Base+0x8e0>
  4081a2:	mov    edx,0x3e2
  4081a7:	lea    rsi,[rip+0x4712]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4081ae:	lea    rdi,[rip+0x48c3]        # 40ca78 <flatcc_builder_padding_base@@Base+0x3b8>
  4081b5:	call   403080 <__assert_fail@plt>
  4081ba:	mov    rax,QWORD PTR [rbp-0x8]
  4081be:	mov    rax,QWORD PTR [rax+0x30]
  4081c2:	mov    eax,DWORD PTR [rax+0x14]
  4081c5:	mov    rdx,QWORD PTR [rbp-0x10]
  4081c9:	cmp    eax,edx
  4081cb:	jae    408206 <flatcc_builder_truncate_offset_vector@@Base+0x8d>
  4081cd:	mov    rax,QWORD PTR [rbp-0x8]
  4081d1:	mov    rax,QWORD PTR [rax+0x30]
  4081d5:	mov    eax,DWORD PTR [rax+0x14]
  4081d8:	mov    rdx,QWORD PTR [rbp-0x10]
  4081dc:	cmp    eax,edx
  4081de:	jae    4081ff <flatcc_builder_truncate_offset_vector@@Base+0x86>
  4081e0:	lea    rcx,[rip+0x4db9]        # 40cfa0 <flatcc_builder_padding_base@@Base+0x8e0>
  4081e7:	mov    edx,0x3e3
  4081ec:	lea    rsi,[rip+0x46cd]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4081f3:	lea    rdi,[rip+0x490e]        # 40cb08 <flatcc_builder_padding_base@@Base+0x448>
  4081fa:	call   403080 <__assert_fail@plt>
  4081ff:	mov    eax,0xffffffff
  408204:	jmp    408247 <flatcc_builder_truncate_offset_vector@@Base+0xce>
  408206:	mov    rax,QWORD PTR [rbp-0x8]
  40820a:	mov    rax,QWORD PTR [rax+0x30]
  40820e:	mov    rdx,QWORD PTR [rbp-0x8]
  408212:	mov    rdx,QWORD PTR [rdx+0x30]
  408216:	mov    edx,DWORD PTR [rdx+0x14]
  408219:	mov    rcx,QWORD PTR [rbp-0x10]
  40821d:	sub    edx,ecx
  40821f:	mov    DWORD PTR [rax+0x14],edx
  408222:	mov    rax,QWORD PTR [rbp-0x8]
  408226:	mov    rax,QWORD PTR [rax+0x30]
  40822a:	mov    eax,DWORD PTR [rax+0x10]
  40822d:	mov    rdx,QWORD PTR [rbp-0x10]
  408231:	imul   edx,eax
  408234:	mov    rax,QWORD PTR [rbp-0x8]
  408238:	mov    esi,edx
  40823a:	mov    rdi,rax
  40823d:	call   405c95 <flatcc_builder_default_alloc@@Base+0x2dd>
  408242:	mov    eax,0x0
  408247:	leave  
  408248:	ret    

0000000000408249 <flatcc_builder_truncate_string@@Base>:
  408249:	push   rbp
  40824a:	mov    rbp,rsp
  40824d:	sub    rsp,0x10
  408251:	mov    QWORD PTR [rbp-0x8],rdi
  408255:	mov    QWORD PTR [rbp-0x10],rsi
  408259:	mov    rax,QWORD PTR [rbp-0x8]
  40825d:	mov    rax,QWORD PTR [rax+0x30]
  408261:	movzx  eax,WORD PTR [rax+0xe]
  408265:	cmp    ax,0x6
  408269:	je     40828a <flatcc_builder_truncate_string@@Base+0x41>
  40826b:	lea    rcx,[rip+0x4d5e]        # 40cfd0 <flatcc_builder_padding_base@@Base+0x910>
  408272:	mov    edx,0x3eb
  408277:	lea    rsi,[rip+0x4642]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40827e:	lea    rdi,[rip+0x482b]        # 40cab0 <flatcc_builder_padding_base@@Base+0x3f0>
  408285:	call   403080 <__assert_fail@plt>
  40828a:	mov    rax,QWORD PTR [rbp-0x8]
  40828e:	mov    rax,QWORD PTR [rax+0x30]
  408292:	mov    eax,DWORD PTR [rax+0x14]
  408295:	mov    eax,eax
  408297:	cmp    rax,QWORD PTR [rbp-0x10]
  40829b:	jae    4082d6 <flatcc_builder_truncate_string@@Base+0x8d>
  40829d:	mov    rax,QWORD PTR [rbp-0x8]
  4082a1:	mov    rax,QWORD PTR [rax+0x30]
  4082a5:	mov    eax,DWORD PTR [rax+0x14]
  4082a8:	mov    eax,eax
  4082aa:	cmp    rax,QWORD PTR [rbp-0x10]
  4082ae:	jae    4082cf <flatcc_builder_truncate_string@@Base+0x86>
  4082b0:	lea    rcx,[rip+0x4d19]        # 40cfd0 <flatcc_builder_padding_base@@Base+0x910>
  4082b7:	mov    edx,0x3ec
  4082bc:	lea    rsi,[rip+0x45fd]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4082c3:	lea    rdi,[rip+0x487e]        # 40cb48 <flatcc_builder_padding_base@@Base+0x488>
  4082ca:	call   403080 <__assert_fail@plt>
  4082cf:	mov    eax,0xffffffff
  4082d4:	jmp    40830b <flatcc_builder_truncate_string@@Base+0xc2>
  4082d6:	mov    rax,QWORD PTR [rbp-0x8]
  4082da:	mov    rax,QWORD PTR [rax+0x30]
  4082de:	mov    rdx,QWORD PTR [rbp-0x8]
  4082e2:	mov    rdx,QWORD PTR [rdx+0x30]
  4082e6:	mov    edx,DWORD PTR [rdx+0x14]
  4082e9:	mov    rcx,QWORD PTR [rbp-0x10]
  4082ed:	sub    edx,ecx
  4082ef:	mov    DWORD PTR [rax+0x14],edx
  4082f2:	mov    rax,QWORD PTR [rbp-0x10]
  4082f6:	mov    edx,eax
  4082f8:	mov    rax,QWORD PTR [rbp-0x8]
  4082fc:	mov    esi,edx
  4082fe:	mov    rdi,rax
  408301:	call   405c95 <flatcc_builder_default_alloc@@Base+0x2dd>
  408306:	mov    eax,0x0
  40830b:	leave  
  40830c:	ret    

000000000040830d <flatcc_builder_start_vector@@Base>:
  40830d:	push   rbp
  40830e:	mov    rbp,rsp
  408311:	sub    rsp,0x20
  408315:	mov    QWORD PTR [rbp-0x8],rdi
  408319:	mov    QWORD PTR [rbp-0x10],rsi
  40831d:	mov    eax,edx
  40831f:	mov    QWORD PTR [rbp-0x20],rcx
  408323:	mov    WORD PTR [rbp-0x14],ax
  408327:	lea    rax,[rbp-0x14]
  40832b:	mov    esi,0x4
  408330:	mov    rdi,rax
  408333:	call   406633 <flatcc_builder_clear@@Base+0xc7>
  408338:	movzx  eax,WORD PTR [rbp-0x14]
  40833c:	movzx  edx,ax
  40833f:	mov    rax,QWORD PTR [rbp-0x8]
  408343:	mov    esi,edx
  408345:	mov    rdi,rax
  408348:	call   40691b <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  40834d:	test   eax,eax
  40834f:	je     408358 <flatcc_builder_start_vector@@Base+0x4b>
  408351:	mov    eax,0xffffffff
  408356:	jmp    4083a9 <flatcc_builder_start_vector@@Base+0x9c>
  408358:	mov    rax,QWORD PTR [rbp-0x8]
  40835c:	mov    rax,QWORD PTR [rax+0x30]
  408360:	mov    rdx,QWORD PTR [rbp-0x10]
  408364:	mov    DWORD PTR [rax+0x10],edx
  408367:	mov    rax,QWORD PTR [rbp-0x8]
  40836b:	mov    rax,QWORD PTR [rax+0x30]
  40836f:	mov    DWORD PTR [rax+0x14],0x0
  408376:	mov    rax,QWORD PTR [rbp-0x8]
  40837a:	mov    rax,QWORD PTR [rax+0x30]
  40837e:	mov    rdx,QWORD PTR [rbp-0x20]
  408382:	mov    DWORD PTR [rax+0x18],edx
  408385:	mov    rax,QWORD PTR [rbp-0x8]
  408389:	mov    rax,QWORD PTR [rax+0x30]
  40838d:	mov    WORD PTR [rax+0xe],0x4
  408393:	mov    rax,QWORD PTR [rbp-0x8]
  408397:	mov    esi,0xfffffffc
  40839c:	mov    rdi,rax
  40839f:	call   405b25 <flatcc_builder_default_alloc@@Base+0x16d>
  4083a4:	mov    eax,0x0
  4083a9:	leave  
  4083aa:	ret    

00000000004083ab <flatcc_builder_start_offset_vector@@Base>:
  4083ab:	push   rbp
  4083ac:	mov    rbp,rsp
  4083af:	sub    rsp,0x10
  4083b3:	mov    QWORD PTR [rbp-0x8],rdi
  4083b7:	mov    rax,QWORD PTR [rbp-0x8]
  4083bb:	mov    esi,0x4
  4083c0:	mov    rdi,rax
  4083c3:	call   40691b <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  4083c8:	test   eax,eax
  4083ca:	je     4083d3 <flatcc_builder_start_offset_vector@@Base+0x28>
  4083cc:	mov    eax,0xffffffff
  4083d1:	jmp    408415 <flatcc_builder_start_offset_vector@@Base+0x6a>
  4083d3:	mov    rax,QWORD PTR [rbp-0x8]
  4083d7:	mov    rax,QWORD PTR [rax+0x30]
  4083db:	mov    DWORD PTR [rax+0x10],0x4
  4083e2:	mov    rax,QWORD PTR [rbp-0x8]
  4083e6:	mov    rax,QWORD PTR [rax+0x30]
  4083ea:	mov    DWORD PTR [rax+0x14],0x0
  4083f1:	mov    rax,QWORD PTR [rbp-0x8]
  4083f5:	mov    rax,QWORD PTR [rax+0x30]
  4083f9:	mov    WORD PTR [rax+0xe],0x5
  4083ff:	mov    rax,QWORD PTR [rbp-0x8]
  408403:	mov    esi,0xfffffffc
  408408:	mov    rdi,rax
  40840b:	call   405b25 <flatcc_builder_default_alloc@@Base+0x16d>
  408410:	mov    eax,0x0
  408415:	leave  
  408416:	ret    

0000000000408417 <flatcc_builder_create_offset_vector@@Base>:
  408417:	push   rbp
  408418:	mov    rbp,rsp
  40841b:	sub    rsp,0x30
  40841f:	mov    QWORD PTR [rbp-0x18],rdi
  408423:	mov    QWORD PTR [rbp-0x20],rsi
  408427:	mov    QWORD PTR [rbp-0x28],rdx
  40842b:	mov    rax,QWORD PTR [rbp-0x18]
  40842f:	mov    rdi,rax
  408432:	call   4083ab <flatcc_builder_start_offset_vector@@Base>
  408437:	test   eax,eax
  408439:	je     408442 <flatcc_builder_create_offset_vector@@Base+0x2b>
  40843b:	mov    eax,0x0
  408440:	jmp    408492 <flatcc_builder_create_offset_vector@@Base+0x7b>
  408442:	mov    rdx,QWORD PTR [rbp-0x28]
  408446:	mov    rax,QWORD PTR [rbp-0x18]
  40844a:	mov    rsi,rdx
  40844d:	mov    rdi,rax
  408450:	call   407dbb <flatcc_builder_extend_offset_vector@@Base>
  408455:	mov    QWORD PTR [rbp-0x8],rax
  408459:	cmp    QWORD PTR [rbp-0x8],0x0
  40845e:	jne    408467 <flatcc_builder_create_offset_vector@@Base+0x50>
  408460:	mov    eax,0x0
  408465:	jmp    408492 <flatcc_builder_create_offset_vector@@Base+0x7b>
  408467:	mov    rax,QWORD PTR [rbp-0x28]
  40846b:	lea    rdx,[rax*4+0x0]
  408473:	mov    rcx,QWORD PTR [rbp-0x20]
  408477:	mov    rax,QWORD PTR [rbp-0x8]
  40847b:	mov    rsi,rcx
  40847e:	mov    rdi,rax
  408481:	call   4030d0 <memcpy@plt>
  408486:	mov    rax,QWORD PTR [rbp-0x18]
  40848a:	mov    rdi,rax
  40848d:	call   40999d <flatcc_builder_end_offset_vector@@Base>
  408492:	leave  
  408493:	ret    

0000000000408494 <flatcc_builder_start_string@@Base>:
  408494:	push   rbp
  408495:	mov    rbp,rsp
  408498:	sub    rsp,0x10
  40849c:	mov    QWORD PTR [rbp-0x8],rdi
  4084a0:	mov    rax,QWORD PTR [rbp-0x8]
  4084a4:	mov    esi,0x1
  4084a9:	mov    rdi,rax
  4084ac:	call   40691b <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  4084b1:	test   eax,eax
  4084b3:	je     4084bc <flatcc_builder_start_string@@Base+0x28>
  4084b5:	mov    eax,0xffffffff
  4084ba:	jmp    4084fe <flatcc_builder_start_string@@Base+0x6a>
  4084bc:	mov    rax,QWORD PTR [rbp-0x8]
  4084c0:	mov    rax,QWORD PTR [rax+0x30]
  4084c4:	mov    DWORD PTR [rax+0x10],0x1
  4084cb:	mov    rax,QWORD PTR [rbp-0x8]
  4084cf:	mov    rax,QWORD PTR [rax+0x30]
  4084d3:	mov    DWORD PTR [rax+0x14],0x0
  4084da:	mov    rax,QWORD PTR [rbp-0x8]
  4084de:	mov    rax,QWORD PTR [rax+0x30]
  4084e2:	mov    WORD PTR [rax+0xe],0x6
  4084e8:	mov    rax,QWORD PTR [rbp-0x8]
  4084ec:	mov    esi,0xfffffffc
  4084f1:	mov    rdi,rax
  4084f4:	call   405b25 <flatcc_builder_default_alloc@@Base+0x16d>
  4084f9:	mov    eax,0x0
  4084fe:	leave  
  4084ff:	ret    

0000000000408500 <flatcc_builder_reserve_table@@Base>:
  408500:	push   rbp
  408501:	mov    rbp,rsp
  408504:	sub    rsp,0x10
  408508:	mov    QWORD PTR [rbp-0x8],rdi
  40850c:	mov    DWORD PTR [rbp-0xc],esi
  40850f:	cmp    DWORD PTR [rbp-0xc],0x0
  408513:	jns    408534 <flatcc_builder_reserve_table@@Base+0x34>
  408515:	lea    rcx,[rip+0x4ad4]        # 40cff0 <flatcc_builder_padding_base@@Base+0x930>
  40851c:	mov    edx,0x429
  408521:	lea    rsi,[rip+0x4398]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  408528:	lea    rdi,[rip+0x463b]        # 40cb6a <flatcc_builder_padding_base@@Base+0x4aa>
  40852f:	call   403080 <__assert_fail@plt>
  408534:	mov    edx,DWORD PTR [rbp-0xc]
  408537:	mov    rax,QWORD PTR [rbp-0x8]
  40853b:	mov    esi,edx
  40853d:	mov    rdi,rax
  408540:	call   405f75 <flatcc_builder_default_alloc@@Base+0x5bd>
  408545:	leave  
  408546:	ret    

0000000000408547 <flatcc_builder_start_table@@Base>:
  408547:	push   rbp
  408548:	mov    rbp,rsp
  40854b:	sub    rsp,0x10
  40854f:	mov    QWORD PTR [rbp-0x8],rdi
  408553:	mov    DWORD PTR [rbp-0xc],esi
  408556:	mov    rax,QWORD PTR [rbp-0x8]
  40855a:	mov    esi,0x4
  40855f:	mov    rdi,rax
  408562:	call   40691b <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  408567:	test   eax,eax
  408569:	je     408575 <flatcc_builder_start_table@@Base+0x2e>
  40856b:	mov    eax,0xffffffff
  408570:	jmp    408645 <flatcc_builder_start_table@@Base+0xfe>
  408575:	mov    rax,QWORD PTR [rbp-0x8]
  408579:	mov    rax,QWORD PTR [rax+0x30]
  40857d:	mov    rdx,QWORD PTR [rbp-0x8]
  408581:	mov    rdx,QWORD PTR [rdx+0x8]
  408585:	mov    rcx,rdx
  408588:	mov    rdx,QWORD PTR [rbp-0x8]
  40858c:	mov    rdx,QWORD PTR [rdx+0x58]
  408590:	sub    rcx,rdx
  408593:	mov    rdx,rcx
  408596:	mov    DWORD PTR [rax+0x10],edx
  408599:	mov    rax,QWORD PTR [rbp-0x8]
  40859d:	mov    rax,QWORD PTR [rax+0x30]
  4085a1:	mov    rdx,QWORD PTR [rbp-0x8]
  4085a5:	mov    rdx,QWORD PTR [rdx]
  4085a8:	mov    rcx,rdx
  4085ab:	mov    rdx,QWORD PTR [rbp-0x8]
  4085af:	mov    rdx,QWORD PTR [rdx+0x88]
  4085b6:	sub    rcx,rdx
  4085b9:	mov    rdx,rcx
  4085bc:	mov    DWORD PTR [rax+0x14],edx
  4085bf:	mov    rax,QWORD PTR [rbp-0x8]
  4085c3:	mov    rax,QWORD PTR [rax+0x30]
  4085c7:	mov    rdx,QWORD PTR [rbp-0x8]
  4085cb:	mov    edx,DWORD PTR [rdx+0x14]
  4085ce:	mov    DWORD PTR [rax+0x18],edx
  4085d1:	mov    rax,QWORD PTR [rbp-0x8]
  4085d5:	mov    rax,QWORD PTR [rax+0x30]
  4085d9:	mov    rdx,QWORD PTR [rbp-0x8]
  4085dd:	movzx  edx,WORD PTR [rdx+0x10]
  4085e1:	mov    WORD PTR [rax+0x1c],dx
  4085e5:	mov    rax,QWORD PTR [rbp-0x8]
  4085e9:	mov    DWORD PTR [rax+0x14],0x0
  4085f0:	mov    rax,QWORD PTR [rbp-0x8]
  4085f4:	mov    DWORD PTR [rax+0x14],0x2f693b52
  4085fb:	mov    rax,QWORD PTR [rbp-0x8]
  4085ff:	mov    WORD PTR [rax+0x10],0x0
  408605:	mov    rax,QWORD PTR [rbp-0x8]
  408609:	mov    rax,QWORD PTR [rax+0x30]
  40860d:	mov    WORD PTR [rax+0xe],0x3
  408613:	mov    edx,DWORD PTR [rbp-0xc]
  408616:	mov    rax,QWORD PTR [rbp-0x8]
  40861a:	mov    esi,edx
  40861c:	mov    rdi,rax
  40861f:	call   405f75 <flatcc_builder_default_alloc@@Base+0x5bd>
  408624:	test   eax,eax
  408626:	je     40862f <flatcc_builder_start_table@@Base+0xe8>
  408628:	mov    eax,0xffffffff
  40862d:	jmp    408645 <flatcc_builder_start_table@@Base+0xfe>
  40862f:	mov    rax,QWORD PTR [rbp-0x8]
  408633:	mov    esi,0xfffc
  408638:	mov    rdi,rax
  40863b:	call   405b25 <flatcc_builder_default_alloc@@Base+0x16d>
  408640:	mov    eax,0x0
  408645:	leave  
  408646:	ret    

0000000000408647 <flatcc_builder_create_vtable@@Base>:
  408647:	push   rbp
  408648:	mov    rbp,rsp
  40864b:	sub    rsp,0xd0
  408652:	mov    QWORD PTR [rbp-0xb8],rdi
  408659:	mov    QWORD PTR [rbp-0xc0],rsi
  408660:	mov    eax,edx
  408662:	mov    WORD PTR [rbp-0xc4],ax
  408669:	mov    rax,QWORD PTR fs:0x28
  408672:	mov    QWORD PTR [rbp-0x8],rax
  408676:	xor    eax,eax
  408678:	mov    QWORD PTR [rbp-0xa0],0x0
  408683:	mov    DWORD PTR [rbp-0x98],0x0
  40868d:	cmp    WORD PTR [rbp-0xc4],0x0
  408695:	je     4086ff <flatcc_builder_create_vtable@@Base+0xb8>
  408697:	mov    rdx,QWORD PTR [rbp-0xa0]
  40869e:	movzx  eax,WORD PTR [rbp-0xc4]
  4086a5:	add    rax,rdx
  4086a8:	mov    QWORD PTR [rbp-0xa0],rax
  4086af:	mov    eax,DWORD PTR [rbp-0x98]
  4086b5:	cdqe   
  4086b7:	shl    rax,0x4
  4086bb:	add    rax,rbp
  4086be:	lea    rdx,[rax-0x90]
  4086c5:	mov    rax,QWORD PTR [rbp-0xc0]
  4086cc:	mov    QWORD PTR [rdx],rax
  4086cf:	mov    edx,DWORD PTR [rbp-0x98]
  4086d5:	movzx  eax,WORD PTR [rbp-0xc4]
  4086dc:	movsxd rdx,edx
  4086df:	shl    rdx,0x4
  4086e3:	add    rdx,rbp
  4086e6:	sub    rdx,0x88
  4086ed:	mov    QWORD PTR [rdx],rax
  4086f0:	mov    eax,DWORD PTR [rbp-0x98]
  4086f6:	add    eax,0x1
  4086f9:	mov    DWORD PTR [rbp-0x98],eax
  4086ff:	mov    rax,QWORD PTR [rbp-0xb8]
  408706:	mov    eax,DWORD PTR [rax+0x100]
  40870c:	test   eax,eax
  40870e:	jne    408750 <flatcc_builder_create_vtable@@Base+0x109>
  408710:	mov    rax,QWORD PTR [rbp-0xb8]
  408717:	mov    eax,DWORD PTR [rax+0x124]
  40871d:	test   eax,eax
  40871f:	jne    408750 <flatcc_builder_create_vtable@@Base+0x109>
  408721:	lea    rdx,[rbp-0xa0]
  408728:	mov    rax,QWORD PTR [rbp-0xb8]
  40872f:	mov    rsi,rdx
  408732:	mov    rdi,rax
  408735:	call   406ce5 <flatcc_builder_get_user_frame_ptr@@Base+0x3ec>
  40873a:	mov    DWORD PTR [rbp-0xa4],eax
  408740:	cmp    DWORD PTR [rbp-0xa4],0x0
  408747:	jne    408786 <flatcc_builder_create_vtable@@Base+0x13f>
  408749:	mov    eax,0x0
  40874e:	jmp    40878c <flatcc_builder_create_vtable@@Base+0x145>
  408750:	lea    rdx,[rbp-0xa0]
  408757:	mov    rax,QWORD PTR [rbp-0xb8]
  40875e:	mov    rsi,rdx
  408761:	mov    rdi,rax
  408764:	call   406c06 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  408769:	mov    DWORD PTR [rbp-0xa4],eax
  40876f:	cmp    DWORD PTR [rbp-0xa4],0x0
  408776:	jne    40877f <flatcc_builder_create_vtable@@Base+0x138>
  408778:	mov    eax,0x0
  40877d:	jmp    40878c <flatcc_builder_create_vtable@@Base+0x145>
  40877f:	add    DWORD PTR [rbp-0xa4],0x1
  408786:	mov    eax,DWORD PTR [rbp-0xa4]
  40878c:	mov    rcx,QWORD PTR [rbp-0x8]
  408790:	xor    rcx,QWORD PTR fs:0x28
  408799:	je     4087a0 <flatcc_builder_create_vtable@@Base+0x159>
  40879b:	call   403070 <__stack_chk_fail@plt>
  4087a0:	leave  
  4087a1:	ret    

00000000004087a2 <flatcc_builder_create_cached_vtable@@Base>:
  4087a2:	push   rbp
  4087a3:	mov    rbp,rsp
  4087a6:	sub    rsp,0x50
  4087aa:	mov    QWORD PTR [rbp-0x38],rdi
  4087ae:	mov    QWORD PTR [rbp-0x40],rsi
  4087b2:	mov    eax,edx
  4087b4:	mov    DWORD PTR [rbp-0x48],ecx
  4087b7:	mov    WORD PTR [rbp-0x44],ax
  4087bb:	mov    edx,DWORD PTR [rbp-0x48]
  4087be:	mov    rax,QWORD PTR [rbp-0x38]
  4087c2:	mov    esi,edx
  4087c4:	mov    rdi,rax
  4087c7:	call   406182 <flatcc_builder_default_alloc@@Base+0x7ca>
  4087cc:	mov    QWORD PTR [rbp-0x18],rax
  4087d0:	cmp    QWORD PTR [rbp-0x18],0x0
  4087d5:	jne    4087e1 <flatcc_builder_create_cached_vtable@@Base+0x3f>
  4087d7:	mov    eax,0x0
  4087dc:	jmp    408a82 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  4087e1:	mov    rax,QWORD PTR [rbp-0x18]
  4087e5:	mov    QWORD PTR [rbp-0x20],rax
  4087e9:	mov    rax,QWORD PTR [rbp-0x20]
  4087ed:	mov    eax,DWORD PTR [rax]
  4087ef:	mov    DWORD PTR [rbp-0x2c],eax
  4087f2:	mov    QWORD PTR [rbp-0x28],0x0
  4087fa:	jmp    4088d9 <flatcc_builder_create_cached_vtable@@Base+0x137>
  4087ff:	mov    rax,QWORD PTR [rbp-0x38]
  408803:	mov    rdx,QWORD PTR [rax+0xb8]
  40880a:	mov    eax,DWORD PTR [rbp-0x2c]
  40880d:	add    rax,rdx
  408810:	mov    QWORD PTR [rbp-0x10],rax
  408814:	mov    rax,QWORD PTR [rbp-0x38]
  408818:	mov    rdx,QWORD PTR [rax+0x78]
  40881c:	mov    rax,QWORD PTR [rbp-0x10]
  408820:	mov    eax,DWORD PTR [rax+0x8]
  408823:	mov    eax,eax
  408825:	add    rax,rdx
  408828:	mov    QWORD PTR [rbp-0x8],rax
  40882c:	mov    rax,QWORD PTR [rbp-0x8]
  408830:	movzx  eax,WORD PTR [rax]
  408833:	cmp    ax,WORD PTR [rbp-0x44]
  408837:	jne    408854 <flatcc_builder_create_cached_vtable@@Base+0xb2>
  408839:	movzx  edx,WORD PTR [rbp-0x44]
  40883d:	mov    rcx,QWORD PTR [rbp-0x8]
  408841:	mov    rax,QWORD PTR [rbp-0x40]
  408845:	mov    rsi,rcx
  408848:	mov    rdi,rax
  40884b:	call   4030b0 <memcmp@plt>
  408850:	test   eax,eax
  408852:	je     40886c <flatcc_builder_create_cached_vtable@@Base+0xca>
  408854:	mov    rax,QWORD PTR [rbp-0x10]
  408858:	add    rax,0xc
  40885c:	mov    QWORD PTR [rbp-0x20],rax
  408860:	mov    rax,QWORD PTR [rbp-0x10]
  408864:	mov    eax,DWORD PTR [rax+0xc]
  408867:	mov    DWORD PTR [rbp-0x2c],eax
  40886a:	jmp    4088d9 <flatcc_builder_create_cached_vtable@@Base+0x137>
  40886c:	mov    rax,QWORD PTR [rbp-0x10]
  408870:	mov    edx,DWORD PTR [rax+0x4]
  408873:	mov    rax,QWORD PTR [rbp-0x38]
  408877:	mov    eax,DWORD PTR [rax+0x100]
  40887d:	cmp    edx,eax
  40887f:	je     4088a1 <flatcc_builder_create_cached_vtable@@Base+0xff>
  408881:	mov    rax,QWORD PTR [rbp-0x10]
  408885:	mov    QWORD PTR [rbp-0x28],rax
  408889:	mov    rax,QWORD PTR [rbp-0x10]
  40888d:	add    rax,0xc
  408891:	mov    QWORD PTR [rbp-0x20],rax
  408895:	mov    rax,QWORD PTR [rbp-0x10]
  408899:	mov    eax,DWORD PTR [rax+0xc]
  40889c:	mov    DWORD PTR [rbp-0x2c],eax
  40889f:	jmp    4088d9 <flatcc_builder_create_cached_vtable@@Base+0x137>
  4088a1:	mov    rax,QWORD PTR [rbp-0x20]
  4088a5:	cmp    rax,QWORD PTR [rbp-0x18]
  4088a9:	je     4088ce <flatcc_builder_create_cached_vtable@@Base+0x12c>
  4088ab:	mov    rax,QWORD PTR [rbp-0x10]
  4088af:	mov    edx,DWORD PTR [rax+0xc]
  4088b2:	mov    rax,QWORD PTR [rbp-0x20]
  4088b6:	mov    DWORD PTR [rax],edx
  4088b8:	mov    rax,QWORD PTR [rbp-0x18]
  4088bc:	mov    edx,DWORD PTR [rax]
  4088be:	mov    rax,QWORD PTR [rbp-0x10]
  4088c2:	mov    DWORD PTR [rax+0xc],edx
  4088c5:	mov    rax,QWORD PTR [rbp-0x18]
  4088c9:	mov    edx,DWORD PTR [rbp-0x2c]
  4088cc:	mov    DWORD PTR [rax],edx
  4088ce:	mov    rax,QWORD PTR [rbp-0x10]
  4088d2:	mov    eax,DWORD PTR [rax]
  4088d4:	jmp    408a82 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  4088d9:	cmp    DWORD PTR [rbp-0x2c],0x0
  4088dd:	jne    4087ff <flatcc_builder_create_cached_vtable@@Base+0x5d>
  4088e3:	mov    rax,QWORD PTR [rbp-0x38]
  4088e7:	mov    eax,DWORD PTR [rax+0xe4]
  4088ed:	mov    edx,eax
  4088ef:	mov    rax,QWORD PTR [rbp-0x38]
  4088f3:	mov    r8d,0x0
  4088f9:	mov    ecx,0x10
  4088fe:	mov    esi,0x6
  408903:	mov    rdi,rax
  408906:	call   405ec4 <flatcc_builder_default_alloc@@Base+0x50c>
  40890b:	mov    QWORD PTR [rbp-0x10],rax
  40890f:	cmp    QWORD PTR [rbp-0x10],0x0
  408914:	jne    408920 <flatcc_builder_create_cached_vtable@@Base+0x17e>
  408916:	mov    eax,0x0
  40891b:	jmp    408a82 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  408920:	mov    rax,QWORD PTR [rbp-0x38]
  408924:	mov    eax,DWORD PTR [rax+0xe4]
  40892a:	mov    DWORD PTR [rbp-0x2c],eax
  40892d:	mov    rax,QWORD PTR [rbp-0x38]
  408931:	mov    eax,DWORD PTR [rax+0xe4]
  408937:	lea    edx,[rax+0x10]
  40893a:	mov    rax,QWORD PTR [rbp-0x38]
  40893e:	mov    DWORD PTR [rax+0xe4],edx
  408944:	mov    rax,QWORD PTR [rbp-0x38]
  408948:	mov    edx,DWORD PTR [rax+0x100]
  40894e:	mov    rax,QWORD PTR [rbp-0x10]
  408952:	mov    DWORD PTR [rax+0x4],edx
  408955:	mov    rax,QWORD PTR [rbp-0x18]
  408959:	mov    edx,DWORD PTR [rax]
  40895b:	mov    rax,QWORD PTR [rbp-0x10]
  40895f:	mov    DWORD PTR [rax+0xc],edx
  408962:	mov    rax,QWORD PTR [rbp-0x18]
  408966:	mov    edx,DWORD PTR [rbp-0x2c]
  408969:	mov    DWORD PTR [rax],edx
  40896b:	movzx  edx,WORD PTR [rbp-0x44]
  40896f:	mov    rcx,QWORD PTR [rbp-0x40]
  408973:	mov    rax,QWORD PTR [rbp-0x38]
  408977:	mov    rsi,rcx
  40897a:	mov    rdi,rax
  40897d:	call   408647 <flatcc_builder_create_vtable@@Base>
  408982:	mov    edx,eax
  408984:	mov    rax,QWORD PTR [rbp-0x10]
  408988:	mov    DWORD PTR [rax],edx
  40898a:	mov    rax,QWORD PTR [rbp-0x10]
  40898e:	mov    eax,DWORD PTR [rax]
  408990:	test   eax,eax
  408992:	jne    40899e <flatcc_builder_create_cached_vtable@@Base+0x1fc>
  408994:	mov    eax,0x0
  408999:	jmp    408a82 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  40899e:	cmp    QWORD PTR [rbp-0x28],0x0
  4089a3:	je     4089b8 <flatcc_builder_create_cached_vtable@@Base+0x216>
  4089a5:	mov    rax,QWORD PTR [rbp-0x28]
  4089a9:	mov    edx,DWORD PTR [rax+0x8]
  4089ac:	mov    rax,QWORD PTR [rbp-0x10]
  4089b0:	mov    DWORD PTR [rax+0x8],edx
  4089b3:	jmp    408a7c <flatcc_builder_create_cached_vtable@@Base+0x2da>
  4089b8:	mov    rax,QWORD PTR [rbp-0x38]
  4089bc:	mov    rax,QWORD PTR [rax+0x118]
  4089c3:	test   rax,rax
  4089c6:	je     4089fb <flatcc_builder_create_cached_vtable@@Base+0x259>
  4089c8:	mov    rax,QWORD PTR [rbp-0x38]
  4089cc:	mov    rdx,QWORD PTR [rax+0x118]
  4089d3:	mov    rax,QWORD PTR [rbp-0x38]
  4089d7:	mov    ecx,DWORD PTR [rax+0xe0]
  4089dd:	movzx  eax,WORD PTR [rbp-0x44]
  4089e1:	add    eax,ecx
  4089e3:	mov    eax,eax
  4089e5:	cmp    rdx,rax
  4089e8:	jae    4089fb <flatcc_builder_create_cached_vtable@@Base+0x259>
  4089ea:	mov    rax,QWORD PTR [rbp-0x38]
  4089ee:	mov    rdi,rax
  4089f1:	call   4061f6 <flatcc_builder_flush_vtable_cache@@Base>
  4089f6:	jmp    408a7c <flatcc_builder_create_cached_vtable@@Base+0x2da>
  4089fb:	movzx  edx,WORD PTR [rbp-0x44]
  4089ff:	mov    rax,QWORD PTR [rbp-0x38]
  408a03:	mov    eax,DWORD PTR [rax+0xe0]
  408a09:	mov    esi,eax
  408a0b:	mov    rax,QWORD PTR [rbp-0x38]
  408a0f:	mov    r8d,0x0
  408a15:	mov    rcx,rdx
  408a18:	mov    rdx,rsi
  408a1b:	mov    esi,0x2
  408a20:	mov    rdi,rax
  408a23:	call   405ec4 <flatcc_builder_default_alloc@@Base+0x50c>
  408a28:	mov    QWORD PTR [rbp-0x8],rax
  408a2c:	cmp    QWORD PTR [rbp-0x8],0x0
  408a31:	jne    408a3a <flatcc_builder_create_cached_vtable@@Base+0x298>
  408a33:	mov    eax,0xffffffff
  408a38:	jmp    408a82 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  408a3a:	mov    rax,QWORD PTR [rbp-0x38]
  408a3e:	mov    edx,DWORD PTR [rax+0xe0]
  408a44:	mov    rax,QWORD PTR [rbp-0x10]
  408a48:	mov    DWORD PTR [rax+0x8],edx
  408a4b:	mov    rax,QWORD PTR [rbp-0x38]
  408a4f:	mov    edx,DWORD PTR [rax+0xe0]
  408a55:	movzx  eax,WORD PTR [rbp-0x44]
  408a59:	add    edx,eax
  408a5b:	mov    rax,QWORD PTR [rbp-0x38]
  408a5f:	mov    DWORD PTR [rax+0xe0],edx
  408a65:	movzx  edx,WORD PTR [rbp-0x44]
  408a69:	mov    rcx,QWORD PTR [rbp-0x40]
  408a6d:	mov    rax,QWORD PTR [rbp-0x8]
  408a71:	mov    rsi,rcx
  408a74:	mov    rdi,rax
  408a77:	call   4030d0 <memcpy@plt>
  408a7c:	mov    rax,QWORD PTR [rbp-0x10]
  408a80:	mov    eax,DWORD PTR [rax]
  408a82:	leave  
  408a83:	ret    

0000000000408a84 <flatcc_builder_create_table@@Base>:
  408a84:	push   rbp
  408a85:	mov    rbp,rsp
  408a88:	sub    rsp,0x100
  408a8f:	mov    QWORD PTR [rbp-0xd8],rdi
  408a96:	mov    QWORD PTR [rbp-0xe0],rsi
  408a9d:	mov    QWORD PTR [rbp-0xe8],rdx
  408aa4:	mov    eax,ecx
  408aa6:	mov    QWORD PTR [rbp-0xf8],r8
  408aad:	mov    DWORD PTR [rbp-0xf0],r9d
  408ab4:	mov    WORD PTR [rbp-0xec],ax
  408abb:	mov    rax,QWORD PTR fs:0x28
  408ac4:	mov    QWORD PTR [rbp-0x8],rax
  408ac8:	xor    eax,eax
  408aca:	cmp    DWORD PTR [rbp-0xf0],0x0
  408ad1:	jns    408af2 <flatcc_builder_create_table@@Base+0x6e>
  408ad3:	lea    rcx,[rip+0x4536]        # 40d010 <flatcc_builder_padding_base@@Base+0x950>
  408ada:	mov    edx,0x4d5
  408adf:	lea    rsi,[rip+0x3dda]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  408ae6:	lea    rdi,[rip+0x4088]        # 40cb75 <flatcc_builder_padding_base@@Base+0x4b5>
  408aed:	call   403080 <__assert_fail@plt>
  408af2:	mov    eax,DWORD PTR [rbp+0x10]
  408af5:	and    eax,0x1
  408af8:	test   eax,eax
  408afa:	jne    408b1b <flatcc_builder_create_table@@Base+0x97>
  408afc:	lea    rcx,[rip+0x450d]        # 40d010 <flatcc_builder_padding_base@@Base+0x950>
  408b03:	mov    edx,0x4db
  408b08:	lea    rsi,[rip+0x3db1]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  408b0f:	lea    rdi,[rip+0x4071]        # 40cb87 <flatcc_builder_padding_base@@Base+0x4c7>
  408b16:	call   403080 <__assert_fail@plt>
  408b1b:	lea    rax,[rbp-0xec]
  408b22:	mov    esi,0x4
  408b27:	mov    rdi,rax
  408b2a:	call   406633 <flatcc_builder_clear@@Base+0xc7>
  408b2f:	movzx  eax,WORD PTR [rbp-0xec]
  408b36:	movzx  edx,ax
  408b39:	mov    rax,QWORD PTR [rbp-0xd8]
  408b40:	mov    esi,edx
  408b42:	mov    rdi,rax
  408b45:	call   406602 <flatcc_builder_clear@@Base+0x96>
  408b4a:	movzx  eax,WORD PTR [rbp-0xec]
  408b51:	movzx  edx,ax
  408b54:	mov    rax,QWORD PTR [rbp-0xe8]
  408b5b:	mov    ecx,eax
  408b5d:	mov    rax,QWORD PTR [rbp-0xd8]
  408b64:	mov    esi,ecx
  408b66:	mov    rdi,rax
  408b69:	call   406bba <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  408b6e:	mov    DWORD PTR [rbp-0xbc],eax
  408b74:	mov    rax,QWORD PTR [rbp-0xd8]
  408b7b:	mov    eax,DWORD PTR [rax+0xf0]
  408b81:	mov    edx,eax
  408b83:	mov    rax,QWORD PTR [rbp-0xe8]
  408b8a:	mov    ecx,eax
  408b8c:	mov    eax,DWORD PTR [rbp-0xbc]
  408b92:	add    eax,ecx
  408b94:	sub    edx,eax
  408b96:	mov    eax,edx
  408b98:	sub    eax,0x4
  408b9b:	mov    DWORD PTR [rbp-0xb8],eax
  408ba1:	mov    eax,DWORD PTR [rbp+0x10]
  408ba4:	sub    eax,0x1
  408ba7:	mov    DWORD PTR [rbp-0xb4],eax
  408bad:	mov    eax,DWORD PTR [rbp-0xb8]
  408bb3:	sub    eax,DWORD PTR [rbp-0xb4]
  408bb9:	mov    DWORD PTR [rbp-0xb0],eax
  408bbf:	mov    eax,DWORD PTR [rbp-0xb8]
  408bc5:	sub    eax,DWORD PTR [rbp-0xb0]
  408bcb:	cmp    eax,DWORD PTR [rbp-0xb4]
  408bd1:	je     408bdd <flatcc_builder_create_table@@Base+0x159>
  408bd3:	mov    eax,0xffffffff
  408bd8:	jmp    408e01 <flatcc_builder_create_table@@Base+0x37d>
  408bdd:	mov    eax,DWORD PTR [rbp-0xb0]
  408be3:	mov    edi,eax
  408be5:	call   4058f2 <main@@Base+0x262>
  408bea:	mov    DWORD PTR [rbp-0xc4],eax
  408bf0:	mov    DWORD PTR [rbp-0xc0],0x0
  408bfa:	jmp    408c85 <flatcc_builder_create_table@@Base+0x201>
  408bff:	mov    eax,DWORD PTR [rbp-0xc0]
  408c05:	cdqe   
  408c07:	lea    rdx,[rax+rax*1]
  408c0b:	mov    rax,QWORD PTR [rbp-0xf8]
  408c12:	add    rax,rdx
  408c15:	movzx  eax,WORD PTR [rax]
  408c18:	movzx  edx,ax
  408c1b:	mov    rax,QWORD PTR [rbp-0xe0]
  408c22:	add    rax,rdx
  408c25:	mov    QWORD PTR [rbp-0xa8],rax
  408c2c:	mov    rax,QWORD PTR [rbp-0xa8]
  408c33:	mov    eax,DWORD PTR [rax]
  408c35:	sub    eax,DWORD PTR [rbp-0xb8]
  408c3b:	mov    edx,eax
  408c3d:	mov    eax,DWORD PTR [rbp-0xc0]
  408c43:	cdqe   
  408c45:	lea    rcx,[rax+rax*1]
  408c49:	mov    rax,QWORD PTR [rbp-0xf8]
  408c50:	add    rax,rcx
  408c53:	movzx  eax,WORD PTR [rax]
  408c56:	movzx  eax,ax
  408c59:	sub    edx,eax
  408c5b:	mov    eax,edx
  408c5d:	sub    eax,0x4
  408c60:	mov    DWORD PTR [rbp-0xac],eax
  408c66:	mov    eax,DWORD PTR [rbp-0xac]
  408c6c:	mov    edi,eax
  408c6e:	call   4058f2 <main@@Base+0x262>
  408c73:	mov    edx,eax
  408c75:	mov    rax,QWORD PTR [rbp-0xa8]
  408c7c:	mov    DWORD PTR [rax],edx
  408c7e:	add    DWORD PTR [rbp-0xc0],0x1
  408c85:	mov    eax,DWORD PTR [rbp-0xc0]
  408c8b:	cmp    eax,DWORD PTR [rbp-0xf0]
  408c91:	jl     408bff <flatcc_builder_create_table@@Base+0x17b>
  408c97:	mov    QWORD PTR [rbp-0xa0],0x0
  408ca2:	mov    DWORD PTR [rbp-0x98],0x0
  408cac:	mov    rax,QWORD PTR [rbp-0xa0]
  408cb3:	add    rax,0x4
  408cb7:	mov    QWORD PTR [rbp-0xa0],rax
  408cbe:	mov    eax,DWORD PTR [rbp-0x98]
  408cc4:	cdqe   
  408cc6:	shl    rax,0x4
  408cca:	add    rax,rbp
  408ccd:	lea    rdx,[rax-0x90]
  408cd4:	lea    rax,[rbp-0xc4]
  408cdb:	mov    QWORD PTR [rdx],rax
  408cde:	mov    eax,DWORD PTR [rbp-0x98]
  408ce4:	cdqe   
  408ce6:	shl    rax,0x4
  408cea:	add    rax,rbp
  408ced:	sub    rax,0x88
  408cf3:	mov    QWORD PTR [rax],0x4
  408cfa:	mov    eax,DWORD PTR [rbp-0x98]
  408d00:	add    eax,0x1
  408d03:	mov    DWORD PTR [rbp-0x98],eax
  408d09:	cmp    QWORD PTR [rbp-0xe8],0x0
  408d11:	je     408d7a <flatcc_builder_create_table@@Base+0x2f6>
  408d13:	mov    rdx,QWORD PTR [rbp-0xa0]
  408d1a:	mov    rax,QWORD PTR [rbp-0xe8]
  408d21:	add    rax,rdx
  408d24:	mov    QWORD PTR [rbp-0xa0],rax
  408d2b:	mov    eax,DWORD PTR [rbp-0x98]
  408d31:	cdqe   
  408d33:	shl    rax,0x4
  408d37:	add    rax,rbp
  408d3a:	lea    rdx,[rax-0x90]
  408d41:	mov    rax,QWORD PTR [rbp-0xe0]
  408d48:	mov    QWORD PTR [rdx],rax
  408d4b:	mov    eax,DWORD PTR [rbp-0x98]
  408d51:	cdqe   
  408d53:	shl    rax,0x4
  408d57:	add    rax,rbp
  408d5a:	lea    rdx,[rax-0x88]
  408d61:	mov    rax,QWORD PTR [rbp-0xe8]
  408d68:	mov    QWORD PTR [rdx],rax
  408d6b:	mov    eax,DWORD PTR [rbp-0x98]
  408d71:	add    eax,0x1
  408d74:	mov    DWORD PTR [rbp-0x98],eax
  408d7a:	cmp    DWORD PTR [rbp-0xbc],0x0
  408d81:	je     408de8 <flatcc_builder_create_table@@Base+0x364>
  408d83:	mov    rdx,QWORD PTR [rbp-0xa0]
  408d8a:	mov    eax,DWORD PTR [rbp-0xbc]
  408d90:	add    rax,rdx
  408d93:	mov    QWORD PTR [rbp-0xa0],rax
  408d9a:	mov    eax,DWORD PTR [rbp-0x98]
  408da0:	cdqe   
  408da2:	shl    rax,0x4
  408da6:	add    rax,rbp
  408da9:	sub    rax,0x90
  408daf:	mov    rdx,0x40c6c0
  408db6:	mov    QWORD PTR [rax],rdx
  408db9:	mov    edx,DWORD PTR [rbp-0x98]
  408dbf:	mov    eax,DWORD PTR [rbp-0xbc]
  408dc5:	movsxd rdx,edx
  408dc8:	shl    rdx,0x4
  408dcc:	add    rdx,rbp
  408dcf:	sub    rdx,0x88
  408dd6:	mov    QWORD PTR [rdx],rax
  408dd9:	mov    eax,DWORD PTR [rbp-0x98]
  408ddf:	add    eax,0x1
  408de2:	mov    DWORD PTR [rbp-0x98],eax
  408de8:	lea    rdx,[rbp-0xa0]
  408def:	mov    rax,QWORD PTR [rbp-0xd8]
  408df6:	mov    rsi,rdx
  408df9:	mov    rdi,rax
  408dfc:	call   406c06 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  408e01:	mov    rsi,QWORD PTR [rbp-0x8]
  408e05:	xor    rsi,QWORD PTR fs:0x28
  408e0e:	je     408e15 <flatcc_builder_create_table@@Base+0x391>
  408e10:	call   403070 <__stack_chk_fail@plt>
  408e15:	leave  
  408e16:	ret    

0000000000408e17 <flatcc_builder_check_required_field@@Base>:
  408e17:	push   rbp
  408e18:	mov    rbp,rsp
  408e1b:	sub    rsp,0x10
  408e1f:	mov    QWORD PTR [rbp-0x8],rdi
  408e23:	mov    eax,esi
  408e25:	mov    WORD PTR [rbp-0xc],ax
  408e29:	mov    rax,QWORD PTR [rbp-0x8]
  408e2d:	mov    rax,QWORD PTR [rax+0x30]
  408e31:	movzx  eax,WORD PTR [rax+0xe]
  408e35:	cmp    ax,0x3
  408e39:	je     408e5a <flatcc_builder_check_required_field@@Base+0x43>
  408e3b:	lea    rcx,[rip+0x41fe]        # 40d040 <flatcc_builder_padding_base@@Base+0x980>
  408e42:	mov    edx,0x4f8
  408e47:	lea    rsi,[rip+0x3a72]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  408e4e:	lea    rdi,[rip+0x3d43]        # 40cb98 <flatcc_builder_padding_base@@Base+0x4d8>
  408e55:	call   403080 <__assert_fail@plt>
  408e5a:	mov    rax,QWORD PTR [rbp-0x8]
  408e5e:	movzx  eax,WORD PTR [rax+0x10]
  408e62:	cmp    ax,WORD PTR [rbp-0xc]
  408e66:	jbe    408e89 <flatcc_builder_check_required_field@@Base+0x72>
  408e68:	mov    rax,QWORD PTR [rbp-0x8]
  408e6c:	mov    rax,QWORD PTR [rax+0x8]
  408e70:	movzx  edx,WORD PTR [rbp-0xc]
  408e74:	add    rdx,rdx
  408e77:	add    rax,rdx
  408e7a:	movzx  eax,WORD PTR [rax]
  408e7d:	test   ax,ax
  408e80:	je     408e89 <flatcc_builder_check_required_field@@Base+0x72>
  408e82:	mov    eax,0x1
  408e87:	jmp    408e8e <flatcc_builder_check_required_field@@Base+0x77>
  408e89:	mov    eax,0x0
  408e8e:	leave  
  408e8f:	ret    

0000000000408e90 <flatcc_builder_check_union_field@@Base>:
  408e90:	push   rbp
  408e91:	mov    rbp,rsp
  408e94:	sub    rsp,0x10
  408e98:	mov    QWORD PTR [rbp-0x8],rdi
  408e9c:	mov    eax,esi
  408e9e:	mov    WORD PTR [rbp-0xc],ax
  408ea2:	mov    rax,QWORD PTR [rbp-0x8]
  408ea6:	mov    rax,QWORD PTR [rax+0x30]
  408eaa:	movzx  eax,WORD PTR [rax+0xe]
  408eae:	cmp    ax,0x3
  408eb2:	je     408ed3 <flatcc_builder_check_union_field@@Base+0x43>
  408eb4:	lea    rcx,[rip+0x41c5]        # 40d080 <flatcc_builder_padding_base@@Base+0x9c0>
  408ebb:	mov    edx,0x4ff
  408ec0:	lea    rsi,[rip+0x39f9]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  408ec7:	lea    rdi,[rip+0x3cca]        # 40cb98 <flatcc_builder_padding_base@@Base+0x4d8>
  408ece:	call   403080 <__assert_fail@plt>
  408ed3:	cmp    WORD PTR [rbp-0xc],0x0
  408ed8:	je     408ee8 <flatcc_builder_check_union_field@@Base+0x58>
  408eda:	mov    rax,QWORD PTR [rbp-0x8]
  408ede:	movzx  eax,WORD PTR [rax+0x10]
  408ee2:	cmp    ax,WORD PTR [rbp-0xc]
  408ee6:	ja     408ef2 <flatcc_builder_check_union_field@@Base+0x62>
  408ee8:	mov    eax,0x0
  408eed:	jmp    408f9c <flatcc_builder_check_union_field@@Base+0x10c>
  408ef2:	mov    rax,QWORD PTR [rbp-0x8]
  408ef6:	mov    rax,QWORD PTR [rax+0x8]
  408efa:	movzx  edx,WORD PTR [rbp-0xc]
  408efe:	add    rdx,rdx
  408f01:	sub    rdx,0x2
  408f05:	add    rax,rdx
  408f08:	movzx  eax,WORD PTR [rax]
  408f0b:	test   ax,ax
  408f0e:	jne    408f30 <flatcc_builder_check_union_field@@Base+0xa0>
  408f10:	mov    rax,QWORD PTR [rbp-0x8]
  408f14:	mov    rax,QWORD PTR [rax+0x8]
  408f18:	movzx  edx,WORD PTR [rbp-0xc]
  408f1c:	add    rdx,rdx
  408f1f:	add    rax,rdx
  408f22:	movzx  eax,WORD PTR [rax]
  408f25:	test   ax,ax
  408f28:	sete   al
  408f2b:	movzx  eax,al
  408f2e:	jmp    408f9c <flatcc_builder_check_union_field@@Base+0x10c>
  408f30:	mov    rax,QWORD PTR [rbp-0x8]
  408f34:	mov    rdx,QWORD PTR [rax+0x18]
  408f38:	mov    rax,QWORD PTR [rbp-0x8]
  408f3c:	mov    rax,QWORD PTR [rax+0x8]
  408f40:	movzx  ecx,WORD PTR [rbp-0xc]
  408f44:	add    rcx,rcx
  408f47:	sub    rcx,0x2
  408f4b:	add    rax,rcx
  408f4e:	movzx  eax,WORD PTR [rax]
  408f51:	movzx  eax,ax
  408f54:	add    rax,rdx
  408f57:	movzx  eax,BYTE PTR [rax]
  408f5a:	test   al,al
  408f5c:	je     408f7e <flatcc_builder_check_union_field@@Base+0xee>
  408f5e:	mov    rax,QWORD PTR [rbp-0x8]
  408f62:	mov    rax,QWORD PTR [rax+0x8]
  408f66:	movzx  edx,WORD PTR [rbp-0xc]
  408f6a:	add    rdx,rdx
  408f6d:	add    rax,rdx
  408f70:	movzx  eax,WORD PTR [rax]
  408f73:	test   ax,ax
  408f76:	setne  al
  408f79:	movzx  eax,al
  408f7c:	jmp    408f9c <flatcc_builder_check_union_field@@Base+0x10c>
  408f7e:	mov    rax,QWORD PTR [rbp-0x8]
  408f82:	mov    rax,QWORD PTR [rax+0x8]
  408f86:	movzx  edx,WORD PTR [rbp-0xc]
  408f8a:	add    rdx,rdx
  408f8d:	add    rax,rdx
  408f90:	movzx  eax,WORD PTR [rax]
  408f93:	test   ax,ax
  408f96:	sete   al
  408f99:	movzx  eax,al
  408f9c:	leave  
  408f9d:	ret    

0000000000408f9e <flatcc_builder_check_required@@Base>:
  408f9e:	push   rbp
  408f9f:	mov    rbp,rsp
  408fa2:	sub    rsp,0x30
  408fa6:	mov    QWORD PTR [rbp-0x18],rdi
  408faa:	mov    QWORD PTR [rbp-0x20],rsi
  408fae:	mov    DWORD PTR [rbp-0x24],edx
  408fb1:	mov    rax,QWORD PTR [rbp-0x18]
  408fb5:	mov    rax,QWORD PTR [rax+0x30]
  408fb9:	movzx  eax,WORD PTR [rax+0xe]
  408fbd:	cmp    ax,0x3
  408fc1:	je     408fe2 <flatcc_builder_check_required@@Base+0x44>
  408fc3:	lea    rcx,[rip+0x40e6]        # 40d0b0 <flatcc_builder_padding_base@@Base+0x9f0>
  408fca:	mov    edx,0x511
  408fcf:	lea    rsi,[rip+0x38ea]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  408fd6:	lea    rdi,[rip+0x3bbb]        # 40cb98 <flatcc_builder_padding_base@@Base+0x4d8>
  408fdd:	call   403080 <__assert_fail@plt>
  408fe2:	mov    rax,QWORD PTR [rbp-0x18]
  408fe6:	movzx  eax,WORD PTR [rax+0x10]
  408fea:	movzx  eax,ax
  408fed:	cmp    eax,DWORD PTR [rbp-0x24]
  408ff0:	jge    408ff9 <flatcc_builder_check_required@@Base+0x5b>
  408ff2:	mov    eax,0x0
  408ff7:	jmp    409047 <flatcc_builder_check_required@@Base+0xa9>
  408ff9:	mov    DWORD PTR [rbp-0x4],0x0
  409000:	jmp    40903a <flatcc_builder_check_required@@Base+0x9c>
  409002:	mov    rax,QWORD PTR [rbp-0x18]
  409006:	mov    rax,QWORD PTR [rax+0x8]
  40900a:	mov    edx,DWORD PTR [rbp-0x4]
  40900d:	movsxd rdx,edx
  409010:	lea    rcx,[rdx+rdx*1]
  409014:	mov    rdx,QWORD PTR [rbp-0x20]
  409018:	add    rdx,rcx
  40901b:	movzx  edx,WORD PTR [rdx]
  40901e:	movzx  edx,dx
  409021:	add    rdx,rdx
  409024:	add    rax,rdx
  409027:	movzx  eax,WORD PTR [rax]
  40902a:	test   ax,ax
  40902d:	jne    409036 <flatcc_builder_check_required@@Base+0x98>
  40902f:	mov    eax,0x0
  409034:	jmp    409047 <flatcc_builder_check_required@@Base+0xa9>
  409036:	add    DWORD PTR [rbp-0x4],0x1
  40903a:	mov    eax,DWORD PTR [rbp-0x4]
  40903d:	cmp    eax,DWORD PTR [rbp-0x24]
  409040:	jl     409002 <flatcc_builder_check_required@@Base+0x64>
  409042:	mov    eax,0x1
  409047:	leave  
  409048:	ret    

0000000000409049 <flatcc_builder_end_table@@Base>:
  409049:	push   rbp
  40904a:	mov    rbp,rsp
  40904d:	sub    rsp,0x30
  409051:	mov    QWORD PTR [rbp-0x28],rdi
  409055:	mov    rax,QWORD PTR [rbp-0x28]
  409059:	mov    rax,QWORD PTR [rax+0x30]
  40905d:	movzx  eax,WORD PTR [rax+0xe]
  409061:	cmp    ax,0x3
  409065:	je     409086 <flatcc_builder_end_table@@Base+0x3d>
  409067:	lea    rcx,[rip+0x4062]        # 40d0d0 <flatcc_builder_padding_base@@Base+0xa10>
  40906e:	mov    edx,0x525
  409073:	lea    rsi,[rip+0x3846]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40907a:	lea    rdi,[rip+0x3b17]        # 40cb98 <flatcc_builder_padding_base@@Base+0x4d8>
  409081:	call   403080 <__assert_fail@plt>
  409086:	mov    rax,QWORD PTR [rbp-0x28]
  40908a:	mov    rax,QWORD PTR [rax+0x8]
  40908e:	sub    rax,0x4
  409092:	mov    QWORD PTR [rbp-0x10],rax
  409096:	mov    rax,QWORD PTR [rbp-0x28]
  40909a:	movzx  eax,WORD PTR [rax+0x10]
  40909e:	movzx  eax,ax
  4090a1:	add    eax,0x2
  4090a4:	cdqe   
  4090a6:	add    eax,eax
  4090a8:	mov    WORD PTR [rbp-0x1e],ax
  4090ac:	mov    rax,QWORD PTR [rbp-0x10]
  4090b0:	movzx  edx,WORD PTR [rbp-0x1e]
  4090b4:	mov    WORD PTR [rax],dx
  4090b7:	mov    rax,QWORD PTR [rbp-0x10]
  4090bb:	lea    rdx,[rax+0x2]
  4090bf:	mov    rax,QWORD PTR [rbp-0x28]
  4090c3:	mov    eax,DWORD PTR [rax+0x20]
  4090c6:	add    eax,0x4
  4090c9:	mov    WORD PTR [rdx],ax
  4090cc:	mov    rax,QWORD PTR [rbp-0x10]
  4090d0:	movzx  eax,WORD PTR [rax]
  4090d3:	movzx  edx,ax
  4090d6:	mov    rax,QWORD PTR [rbp-0x28]
  4090da:	mov    eax,DWORD PTR [rax+0x14]
  4090dd:	xor    eax,edx
  4090df:	imul   edx,eax,0x9e3779b1
  4090e5:	mov    rax,QWORD PTR [rbp-0x10]
  4090e9:	add    rax,0x2
  4090ed:	movzx  eax,WORD PTR [rax]
  4090f0:	movzx  eax,ax
  4090f3:	xor    eax,edx
  4090f5:	imul   edx,eax,0x9e3779b1
  4090fb:	mov    rax,QWORD PTR [rbp-0x28]
  4090ff:	mov    DWORD PTR [rax+0x14],edx
  409102:	mov    rax,QWORD PTR [rbp-0x28]
  409106:	mov    ecx,DWORD PTR [rax+0x14]
  409109:	movzx  edx,WORD PTR [rbp-0x1e]
  40910d:	mov    rsi,QWORD PTR [rbp-0x10]
  409111:	mov    rax,QWORD PTR [rbp-0x28]
  409115:	mov    rdi,rax
  409118:	call   4087a2 <flatcc_builder_create_cached_vtable@@Base>
  40911d:	mov    DWORD PTR [rbp-0x1c],eax
  409120:	cmp    DWORD PTR [rbp-0x1c],0x0
  409124:	jne    409130 <flatcc_builder_end_table@@Base+0xe7>
  409126:	mov    eax,0x0
  40912b:	jmp    409250 <flatcc_builder_end_table@@Base+0x207>
  409130:	movzx  edx,WORD PTR [rbp-0x1e]
  409134:	mov    rax,QWORD PTR [rbp-0x10]
  409138:	mov    esi,0x0
  40913d:	mov    rdi,rax
  409140:	call   403090 <memset@plt>
  409145:	mov    rax,QWORD PTR [rbp-0x28]
  409149:	mov    rdx,QWORD PTR [rax+0x88]
  409150:	mov    rax,QWORD PTR [rbp-0x28]
  409154:	mov    rax,QWORD PTR [rax+0x30]
  409158:	mov    eax,DWORD PTR [rax+0x14]
  40915b:	mov    eax,eax
  40915d:	add    rax,rdx
  409160:	mov    QWORD PTR [rbp-0x8],rax
  409164:	mov    rax,QWORD PTR [rbp-0x28]
  409168:	mov    rax,QWORD PTR [rax]
  40916b:	mov    rdx,rax
  40916e:	mov    rax,QWORD PTR [rbp-0x8]
  409172:	sub    rdx,rax
  409175:	mov    rax,rdx
  409178:	sar    rax,1
  40917b:	mov    DWORD PTR [rbp-0x18],eax
  40917e:	mov    rax,QWORD PTR [rbp-0x28]
  409182:	movzx  eax,WORD PTR [rax+0xea]
  409189:	movzx  edx,ax
  40918c:	mov    rax,QWORD PTR [rbp-0x28]
  409190:	mov    eax,DWORD PTR [rax+0x20]
  409193:	mov    r10d,eax
  409196:	mov    rax,QWORD PTR [rbp-0x28]
  40919a:	mov    rsi,QWORD PTR [rax+0x18]
  40919e:	mov    r8d,DWORD PTR [rbp-0x18]
  4091a2:	mov    rdi,QWORD PTR [rbp-0x8]
  4091a6:	mov    rax,QWORD PTR [rbp-0x28]
  4091aa:	sub    rsp,0x8
  4091ae:	mov    ecx,DWORD PTR [rbp-0x1c]
  4091b1:	push   rcx
  4091b2:	mov    r9d,r8d
  4091b5:	mov    r8,rdi
  4091b8:	mov    ecx,edx
  4091ba:	mov    rdx,r10
  4091bd:	mov    rdi,rax
  4091c0:	call   408a84 <flatcc_builder_create_table@@Base>
  4091c5:	add    rsp,0x10
  4091c9:	mov    DWORD PTR [rbp-0x14],eax
  4091cc:	cmp    DWORD PTR [rbp-0x14],0x0
  4091d0:	jne    4091d9 <flatcc_builder_end_table@@Base+0x190>
  4091d2:	mov    eax,0x0
  4091d7:	jmp    409250 <flatcc_builder_end_table@@Base+0x207>
  4091d9:	mov    rax,QWORD PTR [rbp-0x28]
  4091dd:	mov    rax,QWORD PTR [rax+0x30]
  4091e1:	mov    edx,DWORD PTR [rax+0x18]
  4091e4:	mov    rax,QWORD PTR [rbp-0x28]
  4091e8:	mov    DWORD PTR [rax+0x14],edx
  4091eb:	mov    rax,QWORD PTR [rbp-0x28]
  4091ef:	mov    rax,QWORD PTR [rax+0x30]
  4091f3:	movzx  edx,WORD PTR [rax+0x1c]
  4091f7:	mov    rax,QWORD PTR [rbp-0x28]
  4091fb:	mov    WORD PTR [rax+0x10],dx
  4091ff:	mov    rax,QWORD PTR [rbp-0x28]
  409203:	mov    rdx,QWORD PTR [rax+0x58]
  409207:	mov    rax,QWORD PTR [rbp-0x28]
  40920b:	mov    rax,QWORD PTR [rax+0x30]
  40920f:	mov    eax,DWORD PTR [rax+0x10]
  409212:	mov    eax,eax
  409214:	add    rdx,rax
  409217:	mov    rax,QWORD PTR [rbp-0x28]
  40921b:	mov    QWORD PTR [rax+0x8],rdx
  40921f:	mov    rax,QWORD PTR [rbp-0x28]
  409223:	mov    rdx,QWORD PTR [rax+0x88]
  40922a:	mov    rax,QWORD PTR [rbp-0x28]
  40922e:	mov    rax,QWORD PTR [rax+0x30]
  409232:	mov    eax,DWORD PTR [rax+0x14]
  409235:	mov    eax,eax
  409237:	add    rdx,rax
  40923a:	mov    rax,QWORD PTR [rbp-0x28]
  40923e:	mov    QWORD PTR [rax],rdx
  409241:	mov    rax,QWORD PTR [rbp-0x28]
  409245:	mov    rdi,rax
  409248:	call   406af3 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  40924d:	mov    eax,DWORD PTR [rbp-0x14]
  409250:	leave  
  409251:	ret    

0000000000409252 <flatcc_builder_create_vector@@Base>:
  409252:	push   rbp
  409253:	mov    rbp,rsp
  409256:	sub    rsp,0xe0
  40925d:	mov    QWORD PTR [rbp-0xb8],rdi
  409264:	mov    QWORD PTR [rbp-0xc0],rsi
  40926b:	mov    QWORD PTR [rbp-0xc8],rdx
  409272:	mov    QWORD PTR [rbp-0xd0],rcx
  409279:	mov    eax,r8d
  40927c:	mov    QWORD PTR [rbp-0xe0],r9
  409283:	mov    WORD PTR [rbp-0xd4],ax
  40928a:	mov    rax,QWORD PTR fs:0x28
  409293:	mov    QWORD PTR [rbp-0x8],rax
  409297:	xor    eax,eax
  409299:	mov    rax,QWORD PTR [rbp-0xc8]
  4092a0:	cmp    rax,QWORD PTR [rbp-0xe0]
  4092a7:	jbe    4092e2 <flatcc_builder_create_vector@@Base+0x90>
  4092a9:	mov    rax,QWORD PTR [rbp-0xc8]
  4092b0:	cmp    rax,QWORD PTR [rbp-0xe0]
  4092b7:	jbe    4092d8 <flatcc_builder_create_vector@@Base+0x86>
  4092b9:	lea    rcx,[rip+0x3e30]        # 40d0f0 <flatcc_builder_padding_base@@Base+0xa30>
  4092c0:	mov    edx,0x555
  4092c5:	lea    rsi,[rip+0x35f4]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4092cc:	lea    rdi,[rip+0x38f0]        # 40cbc3 <flatcc_builder_padding_base@@Base+0x503>
  4092d3:	call   403080 <__assert_fail@plt>
  4092d8:	mov    eax,0x0
  4092dd:	jmp    4094cd <flatcc_builder_create_vector@@Base+0x27b>
  4092e2:	lea    rax,[rbp-0xd4]
  4092e9:	mov    esi,0x4
  4092ee:	mov    rdi,rax
  4092f1:	call   406633 <flatcc_builder_clear@@Base+0xc7>
  4092f6:	movzx  eax,WORD PTR [rbp-0xd4]
  4092fd:	movzx  edx,ax
  409300:	mov    rax,QWORD PTR [rbp-0xb8]
  409307:	mov    esi,edx
  409309:	mov    rdi,rax
  40930c:	call   406602 <flatcc_builder_clear@@Base+0x96>
  409311:	mov    rax,QWORD PTR [rbp-0xc8]
  409318:	mov    edx,eax
  40931a:	mov    rax,QWORD PTR [rbp-0xd0]
  409321:	imul   eax,edx
  409324:	mov    DWORD PTR [rbp-0xa8],eax
  40932a:	mov    rax,QWORD PTR [rbp-0xc8]
  409331:	mov    edi,eax
  409333:	call   4058f2 <main@@Base+0x262>
  409338:	mov    DWORD PTR [rbp-0xac],eax
  40933e:	movzx  eax,WORD PTR [rbp-0xd4]
  409345:	movzx  edx,ax
  409348:	mov    ecx,DWORD PTR [rbp-0xa8]
  40934e:	mov    rax,QWORD PTR [rbp-0xb8]
  409355:	mov    esi,ecx
  409357:	mov    rdi,rax
  40935a:	call   406bba <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  40935f:	mov    DWORD PTR [rbp-0xa4],eax
  409365:	mov    QWORD PTR [rbp-0xa0],0x0
  409370:	mov    DWORD PTR [rbp-0x98],0x0
  40937a:	mov    rax,QWORD PTR [rbp-0xa0]
  409381:	add    rax,0x4
  409385:	mov    QWORD PTR [rbp-0xa0],rax
  40938c:	mov    eax,DWORD PTR [rbp-0x98]
  409392:	cdqe   
  409394:	shl    rax,0x4
  409398:	add    rax,rbp
  40939b:	lea    rdx,[rax-0x90]
  4093a2:	lea    rax,[rbp-0xac]
  4093a9:	mov    QWORD PTR [rdx],rax
  4093ac:	mov    eax,DWORD PTR [rbp-0x98]
  4093b2:	cdqe   
  4093b4:	shl    rax,0x4
  4093b8:	add    rax,rbp
  4093bb:	sub    rax,0x88
  4093c1:	mov    QWORD PTR [rax],0x4
  4093c8:	mov    eax,DWORD PTR [rbp-0x98]
  4093ce:	add    eax,0x1
  4093d1:	mov    DWORD PTR [rbp-0x98],eax
  4093d7:	cmp    DWORD PTR [rbp-0xa8],0x0
  4093de:	je     409446 <flatcc_builder_create_vector@@Base+0x1f4>
  4093e0:	mov    rdx,QWORD PTR [rbp-0xa0]
  4093e7:	mov    eax,DWORD PTR [rbp-0xa8]
  4093ed:	add    rax,rdx
  4093f0:	mov    QWORD PTR [rbp-0xa0],rax
  4093f7:	mov    eax,DWORD PTR [rbp-0x98]
  4093fd:	cdqe   
  4093ff:	shl    rax,0x4
  409403:	add    rax,rbp
  409406:	lea    rdx,[rax-0x90]
  40940d:	mov    rax,QWORD PTR [rbp-0xc0]
  409414:	mov    QWORD PTR [rdx],rax
  409417:	mov    edx,DWORD PTR [rbp-0x98]
  40941d:	mov    eax,DWORD PTR [rbp-0xa8]
  409423:	movsxd rdx,edx
  409426:	shl    rdx,0x4
  40942a:	add    rdx,rbp
  40942d:	sub    rdx,0x88
  409434:	mov    QWORD PTR [rdx],rax
  409437:	mov    eax,DWORD PTR [rbp-0x98]
  40943d:	add    eax,0x1
  409440:	mov    DWORD PTR [rbp-0x98],eax
  409446:	cmp    DWORD PTR [rbp-0xa4],0x0
  40944d:	je     4094b4 <flatcc_builder_create_vector@@Base+0x262>
  40944f:	mov    rdx,QWORD PTR [rbp-0xa0]
  409456:	mov    eax,DWORD PTR [rbp-0xa4]
  40945c:	add    rax,rdx
  40945f:	mov    QWORD PTR [rbp-0xa0],rax
  409466:	mov    eax,DWORD PTR [rbp-0x98]
  40946c:	cdqe   
  40946e:	shl    rax,0x4
  409472:	add    rax,rbp
  409475:	sub    rax,0x90
  40947b:	mov    rdx,0x40c6c0
  409482:	mov    QWORD PTR [rax],rdx
  409485:	mov    edx,DWORD PTR [rbp-0x98]
  40948b:	mov    eax,DWORD PTR [rbp-0xa4]
  409491:	movsxd rdx,edx
  409494:	shl    rdx,0x4
  409498:	add    rdx,rbp
  40949b:	sub    rdx,0x88
  4094a2:	mov    QWORD PTR [rdx],rax
  4094a5:	mov    eax,DWORD PTR [rbp-0x98]
  4094ab:	add    eax,0x1
  4094ae:	mov    DWORD PTR [rbp-0x98],eax
  4094b4:	lea    rdx,[rbp-0xa0]
  4094bb:	mov    rax,QWORD PTR [rbp-0xb8]
  4094c2:	mov    rsi,rdx
  4094c5:	mov    rdi,rax
  4094c8:	call   406c06 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  4094cd:	mov    rcx,QWORD PTR [rbp-0x8]
  4094d1:	xor    rcx,QWORD PTR fs:0x28
  4094da:	je     4094e1 <flatcc_builder_create_vector@@Base+0x28f>
  4094dc:	call   403070 <__stack_chk_fail@plt>
  4094e1:	leave  
  4094e2:	ret    

00000000004094e3 <flatcc_builder_end_vector@@Base>:
  4094e3:	push   rbp
  4094e4:	mov    rbp,rsp
  4094e7:	sub    rsp,0x20
  4094eb:	mov    QWORD PTR [rbp-0x18],rdi
  4094ef:	mov    rax,QWORD PTR [rbp-0x18]
  4094f3:	mov    rax,QWORD PTR [rax+0x30]
  4094f7:	movzx  eax,WORD PTR [rax+0xe]
  4094fb:	cmp    ax,0x4
  4094ff:	je     409520 <flatcc_builder_end_vector@@Base+0x3d>
  409501:	lea    rcx,[rip+0x3c08]        # 40d110 <flatcc_builder_padding_base@@Base+0xa50>
  409508:	mov    edx,0x578
  40950d:	lea    rsi,[rip+0x33ac]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409514:	lea    rdi,[rip+0x34ed]        # 40ca08 <flatcc_builder_padding_base@@Base+0x348>
  40951b:	call   403080 <__assert_fail@plt>
  409520:	mov    rax,QWORD PTR [rbp-0x18]
  409524:	mov    rax,QWORD PTR [rax+0x30]
  409528:	mov    eax,DWORD PTR [rax+0x18]
  40952b:	mov    r8d,eax
  40952e:	mov    rax,QWORD PTR [rbp-0x18]
  409532:	movzx  eax,WORD PTR [rax+0xea]
  409539:	movzx  edx,ax
  40953c:	mov    rax,QWORD PTR [rbp-0x18]
  409540:	mov    rax,QWORD PTR [rax+0x30]
  409544:	mov    eax,DWORD PTR [rax+0x10]
  409547:	mov    ecx,eax
  409549:	mov    rax,QWORD PTR [rbp-0x18]
  40954d:	mov    rax,QWORD PTR [rax+0x30]
  409551:	mov    eax,DWORD PTR [rax+0x14]
  409554:	mov    edi,eax
  409556:	mov    rax,QWORD PTR [rbp-0x18]
  40955a:	mov    rsi,QWORD PTR [rax+0x18]
  40955e:	mov    rax,QWORD PTR [rbp-0x18]
  409562:	mov    r9,r8
  409565:	mov    r8d,edx
  409568:	mov    rdx,rdi
  40956b:	mov    rdi,rax
  40956e:	call   409252 <flatcc_builder_create_vector@@Base>
  409573:	mov    DWORD PTR [rbp-0x4],eax
  409576:	cmp    DWORD PTR [rbp-0x4],0x0
  40957a:	jne    409583 <flatcc_builder_end_vector@@Base+0xa0>
  40957c:	mov    eax,0x0
  409581:	jmp    409592 <flatcc_builder_end_vector@@Base+0xaf>
  409583:	mov    rax,QWORD PTR [rbp-0x18]
  409587:	mov    rdi,rax
  40958a:	call   406af3 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  40958f:	mov    eax,DWORD PTR [rbp-0x4]
  409592:	leave  
  409593:	ret    

0000000000409594 <flatcc_builder_vector_count@@Base>:
  409594:	push   rbp
  409595:	mov    rbp,rsp
  409598:	mov    QWORD PTR [rbp-0x8],rdi
  40959c:	mov    rax,QWORD PTR [rbp-0x8]
  4095a0:	mov    rax,QWORD PTR [rax+0x30]
  4095a4:	mov    eax,DWORD PTR [rax+0x14]
  4095a7:	mov    eax,eax
  4095a9:	pop    rbp
  4095aa:	ret    

00000000004095ab <flatcc_builder_vector_edit@@Base>:
  4095ab:	push   rbp
  4095ac:	mov    rbp,rsp
  4095af:	mov    QWORD PTR [rbp-0x8],rdi
  4095b3:	mov    rax,QWORD PTR [rbp-0x8]
  4095b7:	mov    rax,QWORD PTR [rax+0x18]
  4095bb:	pop    rbp
  4095bc:	ret    
  4095bd:	push   rbp
  4095be:	mov    rbp,rsp
  4095c1:	push   rbx
  4095c2:	sub    rsp,0xe8
  4095c9:	mov    QWORD PTR [rbp-0xd8],rdi
  4095d0:	mov    QWORD PTR [rbp-0xe0],rsi
  4095d7:	mov    QWORD PTR [rbp-0xe8],rdx
  4095de:	mov    QWORD PTR [rbp-0xf0],rcx
  4095e5:	mov    rax,QWORD PTR fs:0x28
  4095ee:	mov    QWORD PTR [rbp-0x18],rax
  4095f2:	xor    eax,eax
  4095f4:	mov    rax,QWORD PTR [rbp-0xe8]
  4095fb:	cmp    eax,0x3fffffff
  409600:	jbe    40960c <flatcc_builder_vector_edit@@Base+0x61>
  409602:	mov    eax,0x0
  409607:	jmp    409950 <flatcc_builder_vector_edit@@Base+0x3a5>
  40960c:	mov    rax,QWORD PTR [rbp-0xd8]
  409613:	mov    esi,0x4
  409618:	mov    rdi,rax
  40961b:	call   406602 <flatcc_builder_clear@@Base+0x96>
  409620:	mov    rax,QWORD PTR [rbp-0xe8]
  409627:	shl    eax,0x2
  40962a:	mov    DWORD PTR [rbp-0xc0],eax
  409630:	mov    rax,QWORD PTR [rbp-0xe8]
  409637:	mov    edi,eax
  409639:	call   4058f2 <main@@Base+0x262>
  40963e:	mov    DWORD PTR [rbp-0xc8],eax
  409644:	mov    ecx,DWORD PTR [rbp-0xc0]
  40964a:	mov    rax,QWORD PTR [rbp-0xd8]
  409651:	mov    edx,0x4
  409656:	mov    esi,ecx
  409658:	mov    rdi,rax
  40965b:	call   406bba <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  409660:	mov    DWORD PTR [rbp-0xbc],eax
  409666:	mov    QWORD PTR [rbp-0xb0],0x0
  409671:	mov    DWORD PTR [rbp-0xa8],0x0
  40967b:	mov    rax,QWORD PTR [rbp-0xb0]
  409682:	add    rax,0x4
  409686:	mov    QWORD PTR [rbp-0xb0],rax
  40968d:	mov    eax,DWORD PTR [rbp-0xa8]
  409693:	cdqe   
  409695:	shl    rax,0x4
  409699:	lea    rbx,[rbp-0x10]
  40969d:	add    rax,rbx
  4096a0:	lea    rdx,[rax-0x90]
  4096a7:	lea    rax,[rbp-0xc8]
  4096ae:	mov    QWORD PTR [rdx],rax
  4096b1:	mov    eax,DWORD PTR [rbp-0xa8]
  4096b7:	cdqe   
  4096b9:	shl    rax,0x4
  4096bd:	lea    rbx,[rbp-0x10]
  4096c1:	add    rax,rbx
  4096c4:	sub    rax,0x88
  4096ca:	mov    QWORD PTR [rax],0x4
  4096d1:	mov    eax,DWORD PTR [rbp-0xa8]
  4096d7:	add    eax,0x1
  4096da:	mov    DWORD PTR [rbp-0xa8],eax
  4096e0:	cmp    DWORD PTR [rbp-0xc0],0x0
  4096e7:	je     409757 <flatcc_builder_vector_edit@@Base+0x1ac>
  4096e9:	mov    rdx,QWORD PTR [rbp-0xb0]
  4096f0:	mov    eax,DWORD PTR [rbp-0xc0]
  4096f6:	add    rax,rdx
  4096f9:	mov    QWORD PTR [rbp-0xb0],rax
  409700:	mov    eax,DWORD PTR [rbp-0xa8]
  409706:	cdqe   
  409708:	shl    rax,0x4
  40970c:	lea    rcx,[rbp-0x10]
  409710:	add    rax,rcx
  409713:	lea    rdx,[rax-0x90]
  40971a:	mov    rax,QWORD PTR [rbp-0xe0]
  409721:	mov    QWORD PTR [rdx],rax
  409724:	mov    edx,DWORD PTR [rbp-0xa8]
  40972a:	mov    eax,DWORD PTR [rbp-0xc0]
  409730:	movsxd rdx,edx
  409733:	shl    rdx,0x4
  409737:	lea    rbx,[rbp-0x10]
  40973b:	add    rdx,rbx
  40973e:	sub    rdx,0x88
  409745:	mov    QWORD PTR [rdx],rax
  409748:	mov    eax,DWORD PTR [rbp-0xa8]
  40974e:	add    eax,0x1
  409751:	mov    DWORD PTR [rbp-0xa8],eax
  409757:	cmp    DWORD PTR [rbp-0xbc],0x0
  40975e:	je     4097cd <flatcc_builder_vector_edit@@Base+0x222>
  409760:	mov    rdx,QWORD PTR [rbp-0xb0]
  409767:	mov    eax,DWORD PTR [rbp-0xbc]
  40976d:	add    rax,rdx
  409770:	mov    QWORD PTR [rbp-0xb0],rax
  409777:	mov    eax,DWORD PTR [rbp-0xa8]
  40977d:	cdqe   
  40977f:	shl    rax,0x4
  409783:	lea    rsi,[rbp-0x10]
  409787:	add    rax,rsi
  40978a:	sub    rax,0x90
  409790:	mov    rdx,0x40c6c0
  409797:	mov    QWORD PTR [rax],rdx
  40979a:	mov    edx,DWORD PTR [rbp-0xa8]
  4097a0:	mov    eax,DWORD PTR [rbp-0xbc]
  4097a6:	movsxd rdx,edx
  4097a9:	shl    rdx,0x4
  4097ad:	lea    rcx,[rbp-0x10]
  4097b1:	add    rdx,rcx
  4097b4:	sub    rdx,0x88
  4097bb:	mov    QWORD PTR [rdx],rax
  4097be:	mov    eax,DWORD PTR [rbp-0xa8]
  4097c4:	add    eax,0x1
  4097c7:	mov    DWORD PTR [rbp-0xa8],eax
  4097cd:	mov    rax,QWORD PTR [rbp-0xd8]
  4097d4:	mov    eax,DWORD PTR [rax+0xf0]
  4097da:	mov    edx,eax
  4097dc:	mov    rax,QWORD PTR [rbp-0xb0]
  4097e3:	sub    edx,eax
  4097e5:	mov    eax,edx
  4097e7:	mov    DWORD PTR [rbp-0xb8],eax
  4097ed:	mov    DWORD PTR [rbp-0xc4],0x0
  4097f7:	jmp    409924 <flatcc_builder_vector_edit@@Base+0x379>
  4097fc:	mov    eax,DWORD PTR [rbp-0xc4]
  409802:	lea    rdx,[rax*4+0x0]
  40980a:	mov    rax,QWORD PTR [rbp-0xe0]
  409811:	add    rax,rdx
  409814:	mov    eax,DWORD PTR [rax]
  409816:	test   eax,eax
  409818:	je     4098be <flatcc_builder_vector_edit@@Base+0x313>
  40981e:	mov    eax,DWORD PTR [rbp-0xc4]
  409824:	lea    rdx,[rax*4+0x0]
  40982c:	mov    rax,QWORD PTR [rbp-0xe0]
  409833:	add    rax,rdx
  409836:	mov    eax,DWORD PTR [rax]
  409838:	sub    eax,DWORD PTR [rbp-0xb8]
  40983e:	mov    edx,DWORD PTR [rbp-0xc4]
  409844:	shl    edx,0x2
  409847:	sub    eax,edx
  409849:	sub    eax,0x4
  40984c:	mov    DWORD PTR [rbp-0xb4],eax
  409852:	mov    eax,DWORD PTR [rbp-0xc4]
  409858:	lea    rdx,[rax*4+0x0]
  409860:	mov    rax,QWORD PTR [rbp-0xe0]
  409867:	lea    rbx,[rdx+rax*1]
  40986b:	mov    eax,DWORD PTR [rbp-0xb4]
  409871:	mov    edi,eax
  409873:	call   4058f2 <main@@Base+0x262>
  409878:	mov    DWORD PTR [rbx],eax
  40987a:	cmp    QWORD PTR [rbp-0xf0],0x0
  409882:	je     40991d <flatcc_builder_vector_edit@@Base+0x372>
  409888:	mov    edx,DWORD PTR [rbp-0xc4]
  40988e:	mov    rax,QWORD PTR [rbp-0xf0]
  409895:	add    rax,rdx
  409898:	movzx  eax,BYTE PTR [rax]
  40989b:	test   al,al
  40989d:	jne    40991d <flatcc_builder_vector_edit@@Base+0x372>
  40989f:	lea    rcx,[rip+0x388a]        # 40d130 <flatcc_builder_padding_base@@Base+0xa70>
  4098a6:	mov    edx,0x5b1
  4098ab:	lea    rsi,[rip+0x300e]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4098b2:	lea    rdi,[rip+0x331d]        # 40cbd6 <flatcc_builder_padding_base@@Base+0x516>
  4098b9:	call   403080 <__assert_fail@plt>
  4098be:	cmp    QWORD PTR [rbp-0xf0],0x0
  4098c6:	je     4098fe <flatcc_builder_vector_edit@@Base+0x353>
  4098c8:	mov    edx,DWORD PTR [rbp-0xc4]
  4098ce:	mov    rax,QWORD PTR [rbp-0xf0]
  4098d5:	add    rax,rdx
  4098d8:	movzx  eax,BYTE PTR [rax]
  4098db:	test   al,al
  4098dd:	je     40991d <flatcc_builder_vector_edit@@Base+0x372>
  4098df:	lea    rcx,[rip+0x384a]        # 40d130 <flatcc_builder_padding_base@@Base+0xa70>
  4098e6:	mov    edx,0x5b5
  4098eb:	lea    rsi,[rip+0x2fce]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4098f2:	lea    rdi,[rip+0x32eb]        # 40cbe4 <flatcc_builder_padding_base@@Base+0x524>
  4098f9:	call   403080 <__assert_fail@plt>
  4098fe:	lea    rcx,[rip+0x382b]        # 40d130 <flatcc_builder_padding_base@@Base+0xa70>
  409905:	mov    edx,0x5b7
  40990a:	lea    rsi,[rip+0x2faf]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409911:	lea    rdi,[rip+0x3008]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  409918:	call   403080 <__assert_fail@plt>
  40991d:	add    DWORD PTR [rbp-0xc4],0x1
  409924:	mov    rax,QWORD PTR [rbp-0xe8]
  40992b:	cmp    eax,DWORD PTR [rbp-0xc4]
  409931:	ja     4097fc <flatcc_builder_vector_edit@@Base+0x251>
  409937:	lea    rdx,[rbp-0xb0]
  40993e:	mov    rax,QWORD PTR [rbp-0xd8]
  409945:	mov    rsi,rdx
  409948:	mov    rdi,rax
  40994b:	call   406c06 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  409950:	mov    rbx,QWORD PTR [rbp-0x18]
  409954:	xor    rbx,QWORD PTR fs:0x28
  40995d:	je     409964 <flatcc_builder_vector_edit@@Base+0x3b9>
  40995f:	call   403070 <__stack_chk_fail@plt>
  409964:	add    rsp,0xe8
  40996b:	pop    rbx
  40996c:	pop    rbp
  40996d:	ret    

000000000040996e <flatcc_builder_create_offset_vector_direct@@Base>:
  40996e:	push   rbp
  40996f:	mov    rbp,rsp
  409972:	sub    rsp,0x20
  409976:	mov    QWORD PTR [rbp-0x8],rdi
  40997a:	mov    QWORD PTR [rbp-0x10],rsi
  40997e:	mov    QWORD PTR [rbp-0x18],rdx
  409982:	mov    rdx,QWORD PTR [rbp-0x18]
  409986:	mov    rsi,QWORD PTR [rbp-0x10]
  40998a:	mov    rax,QWORD PTR [rbp-0x8]
  40998e:	mov    ecx,0x0
  409993:	mov    rdi,rax
  409996:	call   4095bd <flatcc_builder_vector_edit@@Base+0x12>
  40999b:	leave  
  40999c:	ret    

000000000040999d <flatcc_builder_end_offset_vector@@Base>:
  40999d:	push   rbp
  40999e:	mov    rbp,rsp
  4099a1:	sub    rsp,0x20
  4099a5:	mov    QWORD PTR [rbp-0x18],rdi
  4099a9:	mov    rax,QWORD PTR [rbp-0x18]
  4099ad:	mov    rax,QWORD PTR [rax+0x30]
  4099b1:	movzx  eax,WORD PTR [rax+0xe]
  4099b5:	cmp    ax,0x5
  4099b9:	je     4099da <flatcc_builder_end_offset_vector@@Base+0x3d>
  4099bb:	lea    rcx,[rip+0x379e]        # 40d160 <flatcc_builder_padding_base@@Base+0xaa0>
  4099c2:	mov    edx,0x5c8
  4099c7:	lea    rsi,[rip+0x2ef2]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  4099ce:	lea    rdi,[rip+0x30a3]        # 40ca78 <flatcc_builder_padding_base@@Base+0x3b8>
  4099d5:	call   403080 <__assert_fail@plt>
  4099da:	mov    rax,QWORD PTR [rbp-0x18]
  4099de:	mov    rax,QWORD PTR [rax+0x30]
  4099e2:	mov    eax,DWORD PTR [rax+0x14]
  4099e5:	mov    edx,eax
  4099e7:	mov    rax,QWORD PTR [rbp-0x18]
  4099eb:	mov    rcx,QWORD PTR [rax+0x18]
  4099ef:	mov    rax,QWORD PTR [rbp-0x18]
  4099f3:	mov    rsi,rcx
  4099f6:	mov    rdi,rax
  4099f9:	call   40996e <flatcc_builder_create_offset_vector_direct@@Base>
  4099fe:	mov    DWORD PTR [rbp-0x4],eax
  409a01:	cmp    DWORD PTR [rbp-0x4],0x0
  409a05:	jne    409a0e <flatcc_builder_end_offset_vector@@Base+0x71>
  409a07:	mov    eax,0x0
  409a0c:	jmp    409a1d <flatcc_builder_end_offset_vector@@Base+0x80>
  409a0e:	mov    rax,QWORD PTR [rbp-0x18]
  409a12:	mov    rdi,rax
  409a15:	call   406af3 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  409a1a:	mov    eax,DWORD PTR [rbp-0x4]
  409a1d:	leave  
  409a1e:	ret    

0000000000409a1f <flatcc_builder_end_offset_vector_for_unions@@Base>:
  409a1f:	push   rbp
  409a20:	mov    rbp,rsp
  409a23:	sub    rsp,0x20
  409a27:	mov    QWORD PTR [rbp-0x18],rdi
  409a2b:	mov    QWORD PTR [rbp-0x20],rsi
  409a2f:	mov    rax,QWORD PTR [rbp-0x18]
  409a33:	mov    rax,QWORD PTR [rax+0x30]
  409a37:	movzx  eax,WORD PTR [rax+0xe]
  409a3b:	cmp    ax,0x5
  409a3f:	je     409a60 <flatcc_builder_end_offset_vector_for_unions@@Base+0x41>
  409a41:	lea    rcx,[rip+0x3758]        # 40d1a0 <flatcc_builder_padding_base@@Base+0xae0>
  409a48:	mov    edx,0x5d5
  409a4d:	lea    rsi,[rip+0x2e6c]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409a54:	lea    rdi,[rip+0x301d]        # 40ca78 <flatcc_builder_padding_base@@Base+0x3b8>
  409a5b:	call   403080 <__assert_fail@plt>
  409a60:	mov    rax,QWORD PTR [rbp-0x18]
  409a64:	mov    rax,QWORD PTR [rax+0x30]
  409a68:	mov    eax,DWORD PTR [rax+0x14]
  409a6b:	mov    edi,eax
  409a6d:	mov    rax,QWORD PTR [rbp-0x18]
  409a71:	mov    rsi,QWORD PTR [rax+0x18]
  409a75:	mov    rdx,QWORD PTR [rbp-0x20]
  409a79:	mov    rax,QWORD PTR [rbp-0x18]
  409a7d:	mov    rcx,rdx
  409a80:	mov    rdx,rdi
  409a83:	mov    rdi,rax
  409a86:	call   4095bd <flatcc_builder_vector_edit@@Base+0x12>
  409a8b:	mov    DWORD PTR [rbp-0x4],eax
  409a8e:	cmp    DWORD PTR [rbp-0x4],0x0
  409a92:	jne    409a9b <flatcc_builder_end_offset_vector_for_unions@@Base+0x7c>
  409a94:	mov    eax,0x0
  409a99:	jmp    409aaa <flatcc_builder_end_offset_vector_for_unions@@Base+0x8b>
  409a9b:	mov    rax,QWORD PTR [rbp-0x18]
  409a9f:	mov    rdi,rax
  409aa2:	call   406af3 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  409aa7:	mov    eax,DWORD PTR [rbp-0x4]
  409aaa:	leave  
  409aab:	ret    

0000000000409aac <flatcc_builder_offset_vector_edit@@Base>:
  409aac:	push   rbp
  409aad:	mov    rbp,rsp
  409ab0:	mov    QWORD PTR [rbp-0x8],rdi
  409ab4:	mov    rax,QWORD PTR [rbp-0x8]
  409ab8:	mov    rax,QWORD PTR [rax+0x18]
  409abc:	pop    rbp
  409abd:	ret    

0000000000409abe <flatcc_builder_offset_vector_count@@Base>:
  409abe:	push   rbp
  409abf:	mov    rbp,rsp
  409ac2:	mov    QWORD PTR [rbp-0x8],rdi
  409ac6:	mov    rax,QWORD PTR [rbp-0x8]
  409aca:	mov    rax,QWORD PTR [rax+0x30]
  409ace:	mov    eax,DWORD PTR [rax+0x14]
  409ad1:	mov    eax,eax
  409ad3:	pop    rbp
  409ad4:	ret    

0000000000409ad5 <flatcc_builder_table_add_union@@Base>:
  409ad5:	push   rbp
  409ad6:	mov    rbp,rsp
  409ad9:	sub    rsp,0x30
  409add:	mov    QWORD PTR [rbp-0x18],rdi
  409ae1:	mov    DWORD PTR [rbp-0x1c],esi
  409ae4:	mov    QWORD PTR [rbp-0x24],rdx
  409ae8:	mov    rax,QWORD PTR [rbp-0x18]
  409aec:	mov    rax,QWORD PTR [rax+0x30]
  409af0:	movzx  eax,WORD PTR [rax+0xe]
  409af4:	cmp    ax,0x3
  409af8:	je     409b19 <flatcc_builder_table_add_union@@Base+0x44>
  409afa:	lea    rcx,[rip+0x36cf]        # 40d1d0 <flatcc_builder_padding_base@@Base+0xb10>
  409b01:	mov    edx,0x5ee
  409b06:	lea    rsi,[rip+0x2db3]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409b0d:	lea    rdi,[rip+0x3084]        # 40cb98 <flatcc_builder_padding_base@@Base+0x4d8>
  409b14:	call   403080 <__assert_fail@plt>
  409b19:	movzx  eax,BYTE PTR [rbp-0x24]
  409b1d:	test   al,al
  409b1f:	jne    409b60 <flatcc_builder_table_add_union@@Base+0x8b>
  409b21:	mov    eax,DWORD PTR [rbp-0x20]
  409b24:	test   eax,eax
  409b26:	je     409b60 <flatcc_builder_table_add_union@@Base+0x8b>
  409b28:	movzx  eax,BYTE PTR [rbp-0x24]
  409b2c:	test   al,al
  409b2e:	jne    409b56 <flatcc_builder_table_add_union@@Base+0x81>
  409b30:	mov    eax,DWORD PTR [rbp-0x20]
  409b33:	test   eax,eax
  409b35:	je     409b56 <flatcc_builder_table_add_union@@Base+0x81>
  409b37:	lea    rcx,[rip+0x3692]        # 40d1d0 <flatcc_builder_padding_base@@Base+0xb10>
  409b3e:	mov    edx,0x5ef
  409b43:	lea    rsi,[rip+0x2d76]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409b4a:	lea    rdi,[rip+0x30a7]        # 40cbf8 <flatcc_builder_padding_base@@Base+0x538>
  409b51:	call   403080 <__assert_fail@plt>
  409b56:	mov    eax,0xffffffff
  409b5b:	jmp    409c28 <flatcc_builder_table_add_union@@Base+0x153>
  409b60:	mov    eax,DWORD PTR [rbp-0x20]
  409b63:	test   eax,eax
  409b65:	je     409bb9 <flatcc_builder_table_add_union@@Base+0xe4>
  409b67:	mov    edx,DWORD PTR [rbp-0x1c]
  409b6a:	mov    rax,QWORD PTR [rbp-0x18]
  409b6e:	mov    esi,edx
  409b70:	mov    rdi,rax
  409b73:	call   40a879 <flatcc_builder_table_add_offset@@Base>
  409b78:	mov    QWORD PTR [rbp-0x10],rax
  409b7c:	cmp    QWORD PTR [rbp-0x10],0x0
  409b81:	jne    409bb0 <flatcc_builder_table_add_union@@Base+0xdb>
  409b83:	cmp    QWORD PTR [rbp-0x10],0x0
  409b88:	jne    409ba9 <flatcc_builder_table_add_union@@Base+0xd4>
  409b8a:	lea    rcx,[rip+0x363f]        # 40d1d0 <flatcc_builder_padding_base@@Base+0xb10>
  409b91:	mov    edx,0x5f2
  409b96:	lea    rsi,[rip+0x2d23]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409b9d:	lea    rdi,[rip+0x3076]        # 40cc1a <flatcc_builder_padding_base@@Base+0x55a>
  409ba4:	call   403080 <__assert_fail@plt>
  409ba9:	mov    eax,0xffffffff
  409bae:	jmp    409c28 <flatcc_builder_table_add_union@@Base+0x153>
  409bb0:	mov    edx,DWORD PTR [rbp-0x20]
  409bb3:	mov    rax,QWORD PTR [rbp-0x10]
  409bb7:	mov    DWORD PTR [rax],edx
  409bb9:	mov    eax,DWORD PTR [rbp-0x1c]
  409bbc:	lea    esi,[rax-0x1]
  409bbf:	mov    rax,QWORD PTR [rbp-0x18]
  409bc3:	mov    ecx,0x1
  409bc8:	mov    edx,0x1
  409bcd:	mov    rdi,rax
  409bd0:	call   40a6ab <flatcc_builder_table_add@@Base>
  409bd5:	mov    QWORD PTR [rbp-0x8],rax
  409bd9:	cmp    QWORD PTR [rbp-0x8],0x0
  409bde:	jne    409c0d <flatcc_builder_table_add_union@@Base+0x138>
  409be0:	cmp    QWORD PTR [rbp-0x8],0x0
  409be5:	jne    409c06 <flatcc_builder_table_add_union@@Base+0x131>
  409be7:	lea    rcx,[rip+0x35e2]        # 40d1d0 <flatcc_builder_padding_base@@Base+0xb10>
  409bee:	mov    edx,0x5f6
  409bf3:	lea    rsi,[rip+0x2cc6]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409bfa:	lea    rdi,[rip+0x3023]        # 40cc24 <flatcc_builder_padding_base@@Base+0x564>
  409c01:	call   403080 <__assert_fail@plt>
  409c06:	mov    eax,0xffffffff
  409c0b:	jmp    409c28 <flatcc_builder_table_add_union@@Base+0x153>
  409c0d:	movzx  eax,BYTE PTR [rbp-0x24]
  409c11:	movzx  eax,al
  409c14:	mov    edi,eax
  409c16:	call   4058fe <main@@Base+0x26e>
  409c1b:	mov    edx,eax
  409c1d:	mov    rax,QWORD PTR [rbp-0x8]
  409c21:	mov    BYTE PTR [rax],dl
  409c23:	mov    eax,0x0
  409c28:	leave  
  409c29:	ret    

0000000000409c2a <flatcc_builder_table_add_union_vector@@Base>:
  409c2a:	push   rbp
  409c2b:	mov    rbp,rsp
  409c2e:	sub    rsp,0x30
  409c32:	mov    QWORD PTR [rbp-0x18],rdi
  409c36:	mov    DWORD PTR [rbp-0x1c],esi
  409c39:	mov    QWORD PTR [rbp-0x24],rdx
  409c3d:	mov    rax,QWORD PTR [rbp-0x18]
  409c41:	mov    rax,QWORD PTR [rax+0x30]
  409c45:	movzx  eax,WORD PTR [rax+0xe]
  409c49:	cmp    ax,0x3
  409c4d:	je     409c6e <flatcc_builder_table_add_union_vector@@Base+0x44>
  409c4f:	lea    rcx,[rip+0x35aa]        # 40d200 <flatcc_builder_padding_base@@Base+0xb40>
  409c56:	mov    edx,0x600
  409c5b:	lea    rsi,[rip+0x2c5e]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409c62:	lea    rdi,[rip+0x2f2f]        # 40cb98 <flatcc_builder_padding_base@@Base+0x4d8>
  409c69:	call   403080 <__assert_fail@plt>
  409c6e:	mov    eax,DWORD PTR [rbp-0x24]
  409c71:	test   eax,eax
  409c73:	sete   dl
  409c76:	mov    eax,DWORD PTR [rbp-0x20]
  409c79:	test   eax,eax
  409c7b:	sete   al
  409c7e:	xor    eax,edx
  409c80:	test   al,al
  409c82:	je     409cc3 <flatcc_builder_table_add_union_vector@@Base+0x99>
  409c84:	mov    eax,DWORD PTR [rbp-0x24]
  409c87:	test   eax,eax
  409c89:	setne  dl
  409c8c:	mov    eax,DWORD PTR [rbp-0x20]
  409c8f:	test   eax,eax
  409c91:	sete   al
  409c94:	xor    eax,edx
  409c96:	test   al,al
  409c98:	jne    409cb9 <flatcc_builder_table_add_union_vector@@Base+0x8f>
  409c9a:	lea    rcx,[rip+0x355f]        # 40d200 <flatcc_builder_padding_base@@Base+0xb40>
  409ca1:	mov    edx,0x601
  409ca6:	lea    rsi,[rip+0x2c13]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409cad:	lea    rdi,[rip+0x2f7c]        # 40cc30 <flatcc_builder_padding_base@@Base+0x570>
  409cb4:	call   403080 <__assert_fail@plt>
  409cb9:	mov    eax,0xffffffff
  409cbe:	jmp    409d7a <flatcc_builder_table_add_union_vector@@Base+0x150>
  409cc3:	mov    eax,DWORD PTR [rbp-0x24]
  409cc6:	test   eax,eax
  409cc8:	je     409d75 <flatcc_builder_table_add_union_vector@@Base+0x14b>
  409cce:	mov    eax,DWORD PTR [rbp-0x1c]
  409cd1:	lea    edx,[rax-0x1]
  409cd4:	mov    rax,QWORD PTR [rbp-0x18]
  409cd8:	mov    esi,edx
  409cda:	mov    rdi,rax
  409cdd:	call   40a879 <flatcc_builder_table_add_offset@@Base>
  409ce2:	mov    QWORD PTR [rbp-0x8],rax
  409ce6:	cmp    QWORD PTR [rbp-0x8],0x0
  409ceb:	jne    409d1a <flatcc_builder_table_add_union_vector@@Base+0xf0>
  409ced:	cmp    QWORD PTR [rbp-0x8],0x0
  409cf2:	jne    409d13 <flatcc_builder_table_add_union_vector@@Base+0xe9>
  409cf4:	lea    rcx,[rip+0x3505]        # 40d200 <flatcc_builder_padding_base@@Base+0xb40>
  409cfb:	mov    edx,0x604
  409d00:	lea    rsi,[rip+0x2bb9]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409d07:	lea    rdi,[rip+0x2f0c]        # 40cc1a <flatcc_builder_padding_base@@Base+0x55a>
  409d0e:	call   403080 <__assert_fail@plt>
  409d13:	mov    eax,0xffffffff
  409d18:	jmp    409d7a <flatcc_builder_table_add_union_vector@@Base+0x150>
  409d1a:	mov    edx,DWORD PTR [rbp-0x24]
  409d1d:	mov    rax,QWORD PTR [rbp-0x8]
  409d21:	mov    DWORD PTR [rax],edx
  409d23:	mov    edx,DWORD PTR [rbp-0x1c]
  409d26:	mov    rax,QWORD PTR [rbp-0x18]
  409d2a:	mov    esi,edx
  409d2c:	mov    rdi,rax
  409d2f:	call   40a879 <flatcc_builder_table_add_offset@@Base>
  409d34:	mov    QWORD PTR [rbp-0x8],rax
  409d38:	cmp    QWORD PTR [rbp-0x8],0x0
  409d3d:	jne    409d6c <flatcc_builder_table_add_union_vector@@Base+0x142>
  409d3f:	cmp    QWORD PTR [rbp-0x8],0x0
  409d44:	jne    409d65 <flatcc_builder_table_add_union_vector@@Base+0x13b>
  409d46:	lea    rcx,[rip+0x34b3]        # 40d200 <flatcc_builder_padding_base@@Base+0xb40>
  409d4d:	mov    edx,0x608
  409d52:	lea    rsi,[rip+0x2b67]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409d59:	lea    rdi,[rip+0x2eba]        # 40cc1a <flatcc_builder_padding_base@@Base+0x55a>
  409d60:	call   403080 <__assert_fail@plt>
  409d65:	mov    eax,0xffffffff
  409d6a:	jmp    409d7a <flatcc_builder_table_add_union_vector@@Base+0x150>
  409d6c:	mov    edx,DWORD PTR [rbp-0x20]
  409d6f:	mov    rax,QWORD PTR [rbp-0x8]
  409d73:	mov    DWORD PTR [rax],edx
  409d75:	mov    eax,0x0
  409d7a:	leave  
  409d7b:	ret    

0000000000409d7c <flatcc_builder_create_union_vector@@Base>:
  409d7c:	push   rbp
  409d7d:	mov    rbp,rsp
  409d80:	sub    rsp,0x40
  409d84:	mov    QWORD PTR [rbp-0x28],rdi
  409d88:	mov    QWORD PTR [rbp-0x30],rsi
  409d8c:	mov    QWORD PTR [rbp-0x38],rdx
  409d90:	mov    DWORD PTR [rbp-0x8],0x0
  409d97:	mov    DWORD PTR [rbp-0x4],0x0
  409d9e:	mov    rax,QWORD PTR [rbp-0x28]
  409da2:	mov    rdi,rax
  409da5:	call   4083ab <flatcc_builder_start_offset_vector@@Base>
  409daa:	test   eax,eax
  409dac:	je     409db7 <flatcc_builder_create_union_vector@@Base+0x3b>
  409dae:	mov    rax,QWORD PTR [rbp-0x8]
  409db2:	jmp    409ea3 <flatcc_builder_create_union_vector@@Base+0x127>
  409db7:	mov    rdx,QWORD PTR [rbp-0x38]
  409dbb:	mov    rax,QWORD PTR [rbp-0x28]
  409dbf:	mov    rsi,rdx
  409dc2:	mov    rdi,rax
  409dc5:	call   407dbb <flatcc_builder_extend_offset_vector@@Base>
  409dca:	test   rax,rax
  409dcd:	jne    409dd8 <flatcc_builder_create_union_vector@@Base+0x5c>
  409dcf:	mov    rax,QWORD PTR [rbp-0x8]
  409dd3:	jmp    409ea3 <flatcc_builder_create_union_vector@@Base+0x127>
  409dd8:	mov    rax,QWORD PTR [rbp-0x38]
  409ddc:	mov    edx,eax
  409dde:	mov    rax,QWORD PTR [rbp-0x28]
  409de2:	mov    esi,edx
  409de4:	mov    rdi,rax
  409de7:	call   405c18 <flatcc_builder_default_alloc@@Base+0x260>
  409dec:	mov    QWORD PTR [rbp-0x18],rax
  409df0:	cmp    QWORD PTR [rbp-0x18],0x0
  409df5:	jne    409e00 <flatcc_builder_create_union_vector@@Base+0x84>
  409df7:	mov    rax,QWORD PTR [rbp-0x8]
  409dfb:	jmp    409ea3 <flatcc_builder_create_union_vector@@Base+0x127>
  409e00:	mov    rax,QWORD PTR [rbp-0x28]
  409e04:	mov    rdi,rax
  409e07:	call   409aac <flatcc_builder_offset_vector_edit@@Base>
  409e0c:	mov    QWORD PTR [rbp-0x10],rax
  409e10:	mov    QWORD PTR [rbp-0x20],0x0
  409e18:	jmp    409e6d <flatcc_builder_create_union_vector@@Base+0xf1>
  409e1a:	mov    rdx,QWORD PTR [rbp-0x18]
  409e1e:	mov    rax,QWORD PTR [rbp-0x20]
  409e22:	add    rdx,rax
  409e25:	mov    rax,QWORD PTR [rbp-0x20]
  409e29:	lea    rcx,[rax*8+0x0]
  409e31:	mov    rax,QWORD PTR [rbp-0x30]
  409e35:	add    rax,rcx
  409e38:	movzx  eax,BYTE PTR [rax]
  409e3b:	mov    BYTE PTR [rdx],al
  409e3d:	mov    rax,QWORD PTR [rbp-0x20]
  409e41:	lea    rdx,[rax*4+0x0]
  409e49:	mov    rax,QWORD PTR [rbp-0x10]
  409e4d:	add    rdx,rax
  409e50:	mov    rax,QWORD PTR [rbp-0x20]
  409e54:	lea    rcx,[rax*8+0x0]
  409e5c:	mov    rax,QWORD PTR [rbp-0x30]
  409e60:	add    rax,rcx
  409e63:	mov    eax,DWORD PTR [rax+0x4]
  409e66:	mov    DWORD PTR [rdx],eax
  409e68:	add    QWORD PTR [rbp-0x20],0x1
  409e6d:	mov    rax,QWORD PTR [rbp-0x20]
  409e71:	cmp    rax,QWORD PTR [rbp-0x38]
  409e75:	jb     409e1a <flatcc_builder_create_union_vector@@Base+0x9e>
  409e77:	mov    rcx,QWORD PTR [rbp-0x38]
  409e7b:	mov    rdx,QWORD PTR [rbp-0x10]
  409e7f:	mov    rsi,QWORD PTR [rbp-0x18]
  409e83:	mov    rax,QWORD PTR [rbp-0x28]
  409e87:	mov    rdi,rax
  409e8a:	call   409ea5 <flatcc_builder_create_union_vector_direct@@Base>
  409e8f:	mov    QWORD PTR [rbp-0x8],rax
  409e93:	mov    rax,QWORD PTR [rbp-0x28]
  409e97:	mov    rdi,rax
  409e9a:	call   406af3 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  409e9f:	mov    rax,QWORD PTR [rbp-0x8]
  409ea3:	leave  
  409ea4:	ret    

0000000000409ea5 <flatcc_builder_create_union_vector_direct@@Base>:
  409ea5:	push   rbp
  409ea6:	mov    rbp,rsp
  409ea9:	sub    rsp,0x30
  409ead:	mov    QWORD PTR [rbp-0x18],rdi
  409eb1:	mov    QWORD PTR [rbp-0x20],rsi
  409eb5:	mov    QWORD PTR [rbp-0x28],rdx
  409eb9:	mov    QWORD PTR [rbp-0x30],rcx
  409ebd:	mov    DWORD PTR [rbp-0x8],0x0
  409ec4:	mov    DWORD PTR [rbp-0x4],0x0
  409ecb:	mov    rcx,QWORD PTR [rbp-0x20]
  409ecf:	mov    rdx,QWORD PTR [rbp-0x30]
  409ed3:	mov    rsi,QWORD PTR [rbp-0x28]
  409ed7:	mov    rax,QWORD PTR [rbp-0x18]
  409edb:	mov    rdi,rax
  409ede:	call   4095bd <flatcc_builder_vector_edit@@Base+0x12>
  409ee3:	mov    DWORD PTR [rbp-0x4],eax
  409ee6:	mov    eax,DWORD PTR [rbp-0x4]
  409ee9:	test   eax,eax
  409eeb:	jne    409ef3 <flatcc_builder_create_union_vector_direct@@Base+0x4e>
  409eed:	mov    rax,QWORD PTR [rbp-0x8]
  409ef1:	jmp    409f2c <flatcc_builder_create_union_vector_direct@@Base+0x87>
  409ef3:	mov    rdx,QWORD PTR [rbp-0x30]
  409ef7:	mov    rsi,QWORD PTR [rbp-0x20]
  409efb:	mov    rax,QWORD PTR [rbp-0x18]
  409eff:	mov    r9d,0xffffffff
  409f05:	mov    r8d,0x1
  409f0b:	mov    ecx,0x1
  409f10:	mov    rdi,rax
  409f13:	call   409252 <flatcc_builder_create_vector@@Base>
  409f18:	mov    DWORD PTR [rbp-0x8],eax
  409f1b:	mov    eax,DWORD PTR [rbp-0x8]
  409f1e:	test   eax,eax
  409f20:	jne    409f28 <flatcc_builder_create_union_vector_direct@@Base+0x83>
  409f22:	mov    rax,QWORD PTR [rbp-0x8]
  409f26:	jmp    409f2c <flatcc_builder_create_union_vector_direct@@Base+0x87>
  409f28:	mov    rax,QWORD PTR [rbp-0x8]
  409f2c:	leave  
  409f2d:	ret    

0000000000409f2e <flatcc_builder_start_union_vector@@Base>:
  409f2e:	push   rbp
  409f2f:	mov    rbp,rsp
  409f32:	sub    rsp,0x10
  409f36:	mov    QWORD PTR [rbp-0x8],rdi
  409f3a:	mov    rax,QWORD PTR [rbp-0x8]
  409f3e:	mov    esi,0x4
  409f43:	mov    rdi,rax
  409f46:	call   40691b <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  409f4b:	test   eax,eax
  409f4d:	je     409f56 <flatcc_builder_start_union_vector@@Base+0x28>
  409f4f:	mov    eax,0xffffffff
  409f54:	jmp    409f98 <flatcc_builder_start_union_vector@@Base+0x6a>
  409f56:	mov    rax,QWORD PTR [rbp-0x8]
  409f5a:	mov    rax,QWORD PTR [rax+0x30]
  409f5e:	mov    DWORD PTR [rax+0x10],0x8
  409f65:	mov    rax,QWORD PTR [rbp-0x8]
  409f69:	mov    rax,QWORD PTR [rax+0x30]
  409f6d:	mov    DWORD PTR [rax+0x14],0x0
  409f74:	mov    rax,QWORD PTR [rbp-0x8]
  409f78:	mov    rax,QWORD PTR [rax+0x30]
  409f7c:	mov    WORD PTR [rax+0xe],0x7
  409f82:	mov    rax,QWORD PTR [rbp-0x8]
  409f86:	mov    esi,0xfffffffc
  409f8b:	mov    rdi,rax
  409f8e:	call   405b25 <flatcc_builder_default_alloc@@Base+0x16d>
  409f93:	mov    eax,0x0
  409f98:	leave  
  409f99:	ret    

0000000000409f9a <flatcc_builder_end_union_vector@@Base>:
  409f9a:	push   rbp
  409f9b:	mov    rbp,rsp
  409f9e:	sub    rsp,0x40
  409fa2:	mov    QWORD PTR [rbp-0x38],rdi
  409fa6:	mov    DWORD PTR [rbp-0x8],0x0
  409fad:	mov    DWORD PTR [rbp-0x4],0x0
  409fb4:	mov    rax,QWORD PTR [rbp-0x38]
  409fb8:	mov    rax,QWORD PTR [rax+0x30]
  409fbc:	movzx  eax,WORD PTR [rax+0xe]
  409fc0:	cmp    ax,0x7
  409fc4:	je     409fe5 <flatcc_builder_end_union_vector@@Base+0x4b>
  409fc6:	lea    rcx,[rip+0x3273]        # 40d240 <flatcc_builder_padding_base@@Base+0xb80>
  409fcd:	mov    edx,0x651
  409fd2:	lea    rsi,[rip+0x28e7]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  409fd9:	lea    rdi,[rip+0x2c78]        # 40cc58 <flatcc_builder_padding_base@@Base+0x598>
  409fe0:	call   403080 <__assert_fail@plt>
  409fe5:	mov    rax,QWORD PTR [rbp-0x38]
  409fe9:	mov    rdi,rax
  409fec:	call   40a0f2 <flatcc_builder_union_vector_count@@Base>
  409ff1:	mov    QWORD PTR [rbp-0x28],rax
  409ff5:	mov    rax,QWORD PTR [rbp-0x28]
  409ff9:	mov    edx,eax
  409ffb:	mov    eax,edx
  409ffd:	shl    eax,0x2
  40a000:	add    edx,eax
  40a002:	mov    rax,QWORD PTR [rbp-0x38]
  40a006:	mov    esi,edx
  40a008:	mov    rdi,rax
  40a00b:	call   405c18 <flatcc_builder_default_alloc@@Base+0x260>
  40a010:	mov    QWORD PTR [rbp-0x20],rax
  40a014:	cmp    QWORD PTR [rbp-0x20],0x0
  40a019:	jne    40a024 <flatcc_builder_end_union_vector@@Base+0x8a>
  40a01b:	mov    rax,QWORD PTR [rbp-0x8]
  40a01f:	jmp    40a0de <flatcc_builder_end_union_vector@@Base+0x144>
  40a024:	mov    rax,QWORD PTR [rbp-0x28]
  40a028:	lea    rdx,[rax*4+0x0]
  40a030:	mov    rax,QWORD PTR [rbp-0x20]
  40a034:	add    rax,rdx
  40a037:	mov    QWORD PTR [rbp-0x18],rax
  40a03b:	mov    rax,QWORD PTR [rbp-0x38]
  40a03f:	mov    rdi,rax
  40a042:	call   40a0e0 <flatcc_builder_union_vector_edit@@Base>
  40a047:	mov    QWORD PTR [rbp-0x10],rax
  40a04b:	mov    QWORD PTR [rbp-0x30],0x0
  40a053:	jmp    40a0a8 <flatcc_builder_end_union_vector@@Base+0x10e>
  40a055:	mov    rdx,QWORD PTR [rbp-0x18]
  40a059:	mov    rax,QWORD PTR [rbp-0x30]
  40a05d:	add    rdx,rax
  40a060:	mov    rax,QWORD PTR [rbp-0x30]
  40a064:	lea    rcx,[rax*8+0x0]
  40a06c:	mov    rax,QWORD PTR [rbp-0x10]
  40a070:	add    rax,rcx
  40a073:	movzx  eax,BYTE PTR [rax]
  40a076:	mov    BYTE PTR [rdx],al
  40a078:	mov    rax,QWORD PTR [rbp-0x30]
  40a07c:	lea    rdx,[rax*4+0x0]
  40a084:	mov    rax,QWORD PTR [rbp-0x20]
  40a088:	add    rdx,rax
  40a08b:	mov    rax,QWORD PTR [rbp-0x30]
  40a08f:	lea    rcx,[rax*8+0x0]
  40a097:	mov    rax,QWORD PTR [rbp-0x10]
  40a09b:	add    rax,rcx
  40a09e:	mov    eax,DWORD PTR [rax+0x4]
  40a0a1:	mov    DWORD PTR [rdx],eax
  40a0a3:	add    QWORD PTR [rbp-0x30],0x1
  40a0a8:	mov    rax,QWORD PTR [rbp-0x30]
  40a0ac:	cmp    rax,QWORD PTR [rbp-0x28]
  40a0b0:	jb     40a055 <flatcc_builder_end_union_vector@@Base+0xbb>
  40a0b2:	mov    rcx,QWORD PTR [rbp-0x28]
  40a0b6:	mov    rdx,QWORD PTR [rbp-0x20]
  40a0ba:	mov    rsi,QWORD PTR [rbp-0x18]
  40a0be:	mov    rax,QWORD PTR [rbp-0x38]
  40a0c2:	mov    rdi,rax
  40a0c5:	call   409ea5 <flatcc_builder_create_union_vector_direct@@Base>
  40a0ca:	mov    QWORD PTR [rbp-0x8],rax
  40a0ce:	mov    rax,QWORD PTR [rbp-0x38]
  40a0d2:	mov    rdi,rax
  40a0d5:	call   406af3 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  40a0da:	mov    rax,QWORD PTR [rbp-0x8]
  40a0de:	leave  
  40a0df:	ret    

000000000040a0e0 <flatcc_builder_union_vector_edit@@Base>:
  40a0e0:	push   rbp
  40a0e1:	mov    rbp,rsp
  40a0e4:	mov    QWORD PTR [rbp-0x8],rdi
  40a0e8:	mov    rax,QWORD PTR [rbp-0x8]
  40a0ec:	mov    rax,QWORD PTR [rax+0x18]
  40a0f0:	pop    rbp
  40a0f1:	ret    

000000000040a0f2 <flatcc_builder_union_vector_count@@Base>:
  40a0f2:	push   rbp
  40a0f3:	mov    rbp,rsp
  40a0f6:	mov    QWORD PTR [rbp-0x8],rdi
  40a0fa:	mov    rax,QWORD PTR [rbp-0x8]
  40a0fe:	mov    rax,QWORD PTR [rax+0x30]
  40a102:	mov    eax,DWORD PTR [rax+0x14]
  40a105:	mov    eax,eax
  40a107:	pop    rbp
  40a108:	ret    

000000000040a109 <flatcc_builder_extend_union_vector@@Base>:
  40a109:	push   rbp
  40a10a:	mov    rbp,rsp
  40a10d:	sub    rsp,0x10
  40a111:	mov    QWORD PTR [rbp-0x8],rdi
  40a115:	mov    QWORD PTR [rbp-0x10],rsi
  40a119:	mov    rax,QWORD PTR [rbp-0x10]
  40a11d:	mov    ecx,eax
  40a11f:	mov    rax,QWORD PTR [rbp-0x8]
  40a123:	mov    edx,0x1fffffff
  40a128:	mov    esi,ecx
  40a12a:	mov    rdi,rax
  40a12d:	call   407b6f <flatcc_builder_end_struct@@Base+0x8e>
  40a132:	test   eax,eax
  40a134:	je     40a13d <flatcc_builder_extend_union_vector@@Base+0x34>
  40a136:	mov    eax,0x0
  40a13b:	jmp    40a156 <flatcc_builder_extend_union_vector@@Base+0x4d>
  40a13d:	mov    rax,QWORD PTR [rbp-0x10]
  40a141:	lea    edx,[rax*8+0x0]
  40a148:	mov    rax,QWORD PTR [rbp-0x8]
  40a14c:	mov    esi,edx
  40a14e:	mov    rdi,rax
  40a151:	call   405c18 <flatcc_builder_default_alloc@@Base+0x260>
  40a156:	leave  
  40a157:	ret    

000000000040a158 <flatcc_builder_truncate_union_vector@@Base>:
  40a158:	push   rbp
  40a159:	mov    rbp,rsp
  40a15c:	sub    rsp,0x10
  40a160:	mov    QWORD PTR [rbp-0x8],rdi
  40a164:	mov    QWORD PTR [rbp-0x10],rsi
  40a168:	mov    rax,QWORD PTR [rbp-0x8]
  40a16c:	mov    rax,QWORD PTR [rax+0x30]
  40a170:	movzx  eax,WORD PTR [rax+0xe]
  40a174:	cmp    ax,0x7
  40a178:	je     40a199 <flatcc_builder_truncate_union_vector@@Base+0x41>
  40a17a:	lea    rcx,[rip+0x30df]        # 40d260 <flatcc_builder_padding_base@@Base+0xba0>
  40a181:	mov    edx,0x681
  40a186:	lea    rsi,[rip+0x2733]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a18d:	lea    rdi,[rip+0x2ac4]        # 40cc58 <flatcc_builder_padding_base@@Base+0x598>
  40a194:	call   403080 <__assert_fail@plt>
  40a199:	mov    rax,QWORD PTR [rbp-0x8]
  40a19d:	mov    rax,QWORD PTR [rax+0x30]
  40a1a1:	mov    eax,DWORD PTR [rax+0x14]
  40a1a4:	mov    rdx,QWORD PTR [rbp-0x10]
  40a1a8:	cmp    eax,edx
  40a1aa:	jae    40a1e5 <flatcc_builder_truncate_union_vector@@Base+0x8d>
  40a1ac:	mov    rax,QWORD PTR [rbp-0x8]
  40a1b0:	mov    rax,QWORD PTR [rax+0x30]
  40a1b4:	mov    eax,DWORD PTR [rax+0x14]
  40a1b7:	mov    rdx,QWORD PTR [rbp-0x10]
  40a1bb:	cmp    eax,edx
  40a1bd:	jae    40a1de <flatcc_builder_truncate_union_vector@@Base+0x86>
  40a1bf:	lea    rcx,[rip+0x309a]        # 40d260 <flatcc_builder_padding_base@@Base+0xba0>
  40a1c6:	mov    edx,0x682
  40a1cb:	lea    rsi,[rip+0x26ee]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a1d2:	lea    rdi,[rip+0x292f]        # 40cb08 <flatcc_builder_padding_base@@Base+0x448>
  40a1d9:	call   403080 <__assert_fail@plt>
  40a1de:	mov    eax,0xffffffff
  40a1e3:	jmp    40a226 <flatcc_builder_truncate_union_vector@@Base+0xce>
  40a1e5:	mov    rax,QWORD PTR [rbp-0x8]
  40a1e9:	mov    rax,QWORD PTR [rax+0x30]
  40a1ed:	mov    rdx,QWORD PTR [rbp-0x8]
  40a1f1:	mov    rdx,QWORD PTR [rdx+0x30]
  40a1f5:	mov    edx,DWORD PTR [rdx+0x14]
  40a1f8:	mov    rcx,QWORD PTR [rbp-0x10]
  40a1fc:	sub    edx,ecx
  40a1fe:	mov    DWORD PTR [rax+0x14],edx
  40a201:	mov    rax,QWORD PTR [rbp-0x8]
  40a205:	mov    rax,QWORD PTR [rax+0x30]
  40a209:	mov    eax,DWORD PTR [rax+0x10]
  40a20c:	mov    rdx,QWORD PTR [rbp-0x10]
  40a210:	imul   edx,eax
  40a213:	mov    rax,QWORD PTR [rbp-0x8]
  40a217:	mov    esi,edx
  40a219:	mov    rdi,rax
  40a21c:	call   405c95 <flatcc_builder_default_alloc@@Base+0x2dd>
  40a221:	mov    eax,0x0
  40a226:	leave  
  40a227:	ret    

000000000040a228 <flatcc_builder_union_vector_push@@Base>:
  40a228:	push   rbp
  40a229:	mov    rbp,rsp
  40a22c:	sub    rsp,0x20
  40a230:	mov    QWORD PTR [rbp-0x18],rdi
  40a234:	mov    QWORD PTR [rbp-0x20],rsi
  40a238:	mov    rax,QWORD PTR [rbp-0x18]
  40a23c:	mov    rax,QWORD PTR [rax+0x30]
  40a240:	movzx  eax,WORD PTR [rax+0xe]
  40a244:	cmp    ax,0x7
  40a248:	je     40a269 <flatcc_builder_union_vector_push@@Base+0x41>
  40a24a:	lea    rcx,[rip+0x304f]        # 40d2a0 <flatcc_builder_padding_base@@Base+0xbe0>
  40a251:	mov    edx,0x68d
  40a256:	lea    rsi,[rip+0x2663]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a25d:	lea    rdi,[rip+0x29f4]        # 40cc58 <flatcc_builder_padding_base@@Base+0x598>
  40a264:	call   403080 <__assert_fail@plt>
  40a269:	mov    rax,QWORD PTR [rbp-0x18]
  40a26d:	mov    rax,QWORD PTR [rax+0x30]
  40a271:	mov    eax,DWORD PTR [rax+0x14]
  40a274:	cmp    eax,0x1fffffff
  40a279:	jne    40a282 <flatcc_builder_union_vector_push@@Base+0x5a>
  40a27b:	mov    eax,0x0
  40a280:	jmp    40a2cd <flatcc_builder_union_vector_push@@Base+0xa5>
  40a282:	mov    rax,QWORD PTR [rbp-0x18]
  40a286:	mov    rax,QWORD PTR [rax+0x30]
  40a28a:	mov    rdx,QWORD PTR [rbp-0x18]
  40a28e:	mov    rdx,QWORD PTR [rdx+0x30]
  40a292:	mov    edx,DWORD PTR [rdx+0x14]
  40a295:	add    edx,0x1
  40a298:	mov    DWORD PTR [rax+0x14],edx
  40a29b:	mov    rax,QWORD PTR [rbp-0x18]
  40a29f:	mov    esi,0x8
  40a2a4:	mov    rdi,rax
  40a2a7:	call   405c18 <flatcc_builder_default_alloc@@Base+0x260>
  40a2ac:	mov    QWORD PTR [rbp-0x8],rax
  40a2b0:	cmp    QWORD PTR [rbp-0x8],0x0
  40a2b5:	jne    40a2be <flatcc_builder_union_vector_push@@Base+0x96>
  40a2b7:	mov    eax,0x0
  40a2bc:	jmp    40a2cd <flatcc_builder_union_vector_push@@Base+0xa5>
  40a2be:	mov    rax,QWORD PTR [rbp-0x8]
  40a2c2:	mov    rdx,QWORD PTR [rbp-0x20]
  40a2c6:	mov    QWORD PTR [rax],rdx
  40a2c9:	mov    rax,QWORD PTR [rbp-0x8]
  40a2cd:	leave  
  40a2ce:	ret    

000000000040a2cf <flatcc_builder_append_union_vector@@Base>:
  40a2cf:	push   rbp
  40a2d0:	mov    rbp,rsp
  40a2d3:	sub    rsp,0x20
  40a2d7:	mov    QWORD PTR [rbp-0x8],rdi
  40a2db:	mov    QWORD PTR [rbp-0x10],rsi
  40a2df:	mov    QWORD PTR [rbp-0x18],rdx
  40a2e3:	mov    rax,QWORD PTR [rbp-0x8]
  40a2e7:	mov    rax,QWORD PTR [rax+0x30]
  40a2eb:	movzx  eax,WORD PTR [rax+0xe]
  40a2ef:	cmp    ax,0x7
  40a2f3:	je     40a314 <flatcc_builder_append_union_vector@@Base+0x45>
  40a2f5:	lea    rcx,[rip+0x2fe4]        # 40d2e0 <flatcc_builder_padding_base@@Base+0xc20>
  40a2fc:	mov    edx,0x69c
  40a301:	lea    rsi,[rip+0x25b8]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a308:	lea    rdi,[rip+0x2949]        # 40cc58 <flatcc_builder_padding_base@@Base+0x598>
  40a30f:	call   403080 <__assert_fail@plt>
  40a314:	mov    rax,QWORD PTR [rbp-0x18]
  40a318:	mov    ecx,eax
  40a31a:	mov    rax,QWORD PTR [rbp-0x8]
  40a31e:	mov    edx,0x1fffffff
  40a323:	mov    esi,ecx
  40a325:	mov    rdi,rax
  40a328:	call   407b6f <flatcc_builder_end_struct@@Base+0x8e>
  40a32d:	test   eax,eax
  40a32f:	je     40a338 <flatcc_builder_append_union_vector@@Base+0x69>
  40a331:	mov    eax,0x0
  40a336:	jmp    40a356 <flatcc_builder_append_union_vector@@Base+0x87>
  40a338:	mov    rax,QWORD PTR [rbp-0x18]
  40a33c:	lea    edx,[rax*8+0x0]
  40a343:	mov    rcx,QWORD PTR [rbp-0x10]
  40a347:	mov    rax,QWORD PTR [rbp-0x8]
  40a34b:	mov    rsi,rcx
  40a34e:	mov    rdi,rax
  40a351:	call   405ce1 <flatcc_builder_default_alloc@@Base+0x329>
  40a356:	leave  
  40a357:	ret    

000000000040a358 <flatcc_builder_create_string@@Base>:
  40a358:	push   rbp
  40a359:	mov    rbp,rsp
  40a35c:	sub    rsp,0xd0
  40a363:	mov    QWORD PTR [rbp-0xb8],rdi
  40a36a:	mov    QWORD PTR [rbp-0xc0],rsi
  40a371:	mov    QWORD PTR [rbp-0xc8],rdx
  40a378:	mov    rax,QWORD PTR fs:0x28
  40a381:	mov    QWORD PTR [rbp-0x8],rax
  40a385:	xor    eax,eax
  40a387:	mov    eax,0xffffffff
  40a38c:	cmp    QWORD PTR [rbp-0xc8],rax
  40a393:	jbe    40a39f <flatcc_builder_create_string@@Base+0x47>
  40a395:	mov    eax,0x0
  40a39a:	jmp    40a546 <flatcc_builder_create_string@@Base+0x1ee>
  40a39f:	mov    rax,QWORD PTR [rbp-0xc8]
  40a3a6:	mov    edi,eax
  40a3a8:	call   4058f2 <main@@Base+0x262>
  40a3ad:	mov    DWORD PTR [rbp-0xa8],eax
  40a3b3:	mov    rax,QWORD PTR [rbp-0xc8]
  40a3ba:	lea    ecx,[rax+0x1]
  40a3bd:	mov    rax,QWORD PTR [rbp-0xb8]
  40a3c4:	mov    edx,0x4
  40a3c9:	mov    esi,ecx
  40a3cb:	mov    rdi,rax
  40a3ce:	call   406bba <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  40a3d3:	add    eax,0x1
  40a3d6:	mov    DWORD PTR [rbp-0xa4],eax
  40a3dc:	mov    QWORD PTR [rbp-0xa0],0x0
  40a3e7:	mov    DWORD PTR [rbp-0x98],0x0
  40a3f1:	mov    rax,QWORD PTR [rbp-0xa0]
  40a3f8:	add    rax,0x4
  40a3fc:	mov    QWORD PTR [rbp-0xa0],rax
  40a403:	mov    eax,DWORD PTR [rbp-0x98]
  40a409:	cdqe   
  40a40b:	shl    rax,0x4
  40a40f:	add    rax,rbp
  40a412:	lea    rdx,[rax-0x90]
  40a419:	lea    rax,[rbp-0xa8]
  40a420:	mov    QWORD PTR [rdx],rax
  40a423:	mov    eax,DWORD PTR [rbp-0x98]
  40a429:	cdqe   
  40a42b:	shl    rax,0x4
  40a42f:	add    rax,rbp
  40a432:	sub    rax,0x88
  40a438:	mov    QWORD PTR [rax],0x4
  40a43f:	mov    eax,DWORD PTR [rbp-0x98]
  40a445:	add    eax,0x1
  40a448:	mov    DWORD PTR [rbp-0x98],eax
  40a44e:	cmp    QWORD PTR [rbp-0xc8],0x0
  40a456:	je     40a4bf <flatcc_builder_create_string@@Base+0x167>
  40a458:	mov    rdx,QWORD PTR [rbp-0xa0]
  40a45f:	mov    rax,QWORD PTR [rbp-0xc8]
  40a466:	add    rax,rdx
  40a469:	mov    QWORD PTR [rbp-0xa0],rax
  40a470:	mov    eax,DWORD PTR [rbp-0x98]
  40a476:	cdqe   
  40a478:	shl    rax,0x4
  40a47c:	add    rax,rbp
  40a47f:	lea    rdx,[rax-0x90]
  40a486:	mov    rax,QWORD PTR [rbp-0xc0]
  40a48d:	mov    QWORD PTR [rdx],rax
  40a490:	mov    eax,DWORD PTR [rbp-0x98]
  40a496:	cdqe   
  40a498:	shl    rax,0x4
  40a49c:	add    rax,rbp
  40a49f:	lea    rdx,[rax-0x88]
  40a4a6:	mov    rax,QWORD PTR [rbp-0xc8]
  40a4ad:	mov    QWORD PTR [rdx],rax
  40a4b0:	mov    eax,DWORD PTR [rbp-0x98]
  40a4b6:	add    eax,0x1
  40a4b9:	mov    DWORD PTR [rbp-0x98],eax
  40a4bf:	cmp    DWORD PTR [rbp-0xa4],0x0
  40a4c6:	je     40a52d <flatcc_builder_create_string@@Base+0x1d5>
  40a4c8:	mov    rdx,QWORD PTR [rbp-0xa0]
  40a4cf:	mov    eax,DWORD PTR [rbp-0xa4]
  40a4d5:	add    rax,rdx
  40a4d8:	mov    QWORD PTR [rbp-0xa0],rax
  40a4df:	mov    eax,DWORD PTR [rbp-0x98]
  40a4e5:	cdqe   
  40a4e7:	shl    rax,0x4
  40a4eb:	add    rax,rbp
  40a4ee:	sub    rax,0x90
  40a4f4:	mov    rdx,0x40c6c0
  40a4fb:	mov    QWORD PTR [rax],rdx
  40a4fe:	mov    edx,DWORD PTR [rbp-0x98]
  40a504:	mov    eax,DWORD PTR [rbp-0xa4]
  40a50a:	movsxd rdx,edx
  40a50d:	shl    rdx,0x4
  40a511:	add    rdx,rbp
  40a514:	sub    rdx,0x88
  40a51b:	mov    QWORD PTR [rdx],rax
  40a51e:	mov    eax,DWORD PTR [rbp-0x98]
  40a524:	add    eax,0x1
  40a527:	mov    DWORD PTR [rbp-0x98],eax
  40a52d:	lea    rdx,[rbp-0xa0]
  40a534:	mov    rax,QWORD PTR [rbp-0xb8]
  40a53b:	mov    rsi,rdx
  40a53e:	mov    rdi,rax
  40a541:	call   406c06 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  40a546:	mov    rcx,QWORD PTR [rbp-0x8]
  40a54a:	xor    rcx,QWORD PTR fs:0x28
  40a553:	je     40a55a <flatcc_builder_create_string@@Base+0x202>
  40a555:	call   403070 <__stack_chk_fail@plt>
  40a55a:	leave  
  40a55b:	ret    

000000000040a55c <flatcc_builder_create_string_str@@Base>:
  40a55c:	push   rbp
  40a55d:	mov    rbp,rsp
  40a560:	sub    rsp,0x10
  40a564:	mov    QWORD PTR [rbp-0x8],rdi
  40a568:	mov    QWORD PTR [rbp-0x10],rsi
  40a56c:	mov    rax,QWORD PTR [rbp-0x10]
  40a570:	mov    rdi,rax
  40a573:	call   403060 <strlen@plt>
  40a578:	mov    rdx,rax
  40a57b:	mov    rcx,QWORD PTR [rbp-0x10]
  40a57f:	mov    rax,QWORD PTR [rbp-0x8]
  40a583:	mov    rsi,rcx
  40a586:	mov    rdi,rax
  40a589:	call   40a358 <flatcc_builder_create_string@@Base>
  40a58e:	leave  
  40a58f:	ret    

000000000040a590 <flatcc_builder_create_string_strn@@Base>:
  40a590:	push   rbp
  40a591:	mov    rbp,rsp
  40a594:	sub    rsp,0x20
  40a598:	mov    QWORD PTR [rbp-0x8],rdi
  40a59c:	mov    QWORD PTR [rbp-0x10],rsi
  40a5a0:	mov    QWORD PTR [rbp-0x18],rdx
  40a5a4:	mov    rdx,QWORD PTR [rbp-0x18]
  40a5a8:	mov    rax,QWORD PTR [rbp-0x10]
  40a5ac:	mov    rsi,rdx
  40a5af:	mov    rdi,rax
  40a5b2:	call   405972 <main@@Base+0x2e2>
  40a5b7:	mov    rdx,rax
  40a5ba:	mov    rcx,QWORD PTR [rbp-0x10]
  40a5be:	mov    rax,QWORD PTR [rbp-0x8]
  40a5c2:	mov    rsi,rcx
  40a5c5:	mov    rdi,rax
  40a5c8:	call   40a358 <flatcc_builder_create_string@@Base>
  40a5cd:	leave  
  40a5ce:	ret    

000000000040a5cf <flatcc_builder_end_string@@Base>:
  40a5cf:	push   rbp
  40a5d0:	mov    rbp,rsp
  40a5d3:	sub    rsp,0x20
  40a5d7:	mov    QWORD PTR [rbp-0x18],rdi
  40a5db:	mov    rax,QWORD PTR [rbp-0x18]
  40a5df:	mov    rax,QWORD PTR [rax+0x30]
  40a5e3:	movzx  eax,WORD PTR [rax+0xe]
  40a5e7:	cmp    ax,0x6
  40a5eb:	je     40a60c <flatcc_builder_end_string@@Base+0x3d>
  40a5ed:	lea    rcx,[rip+0x2d1c]        # 40d310 <flatcc_builder_padding_base@@Base+0xc50>
  40a5f4:	mov    edx,0x6c4
  40a5f9:	lea    rsi,[rip+0x22c0]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a600:	lea    rdi,[rip+0x24a9]        # 40cab0 <flatcc_builder_padding_base@@Base+0x3f0>
  40a607:	call   403080 <__assert_fail@plt>
  40a60c:	mov    rax,QWORD PTR [rbp-0x18]
  40a610:	mov    rax,QWORD PTR [rax+0x30]
  40a614:	mov    edx,DWORD PTR [rax+0x14]
  40a617:	mov    rax,QWORD PTR [rbp-0x18]
  40a61b:	mov    eax,DWORD PTR [rax+0x20]
  40a61e:	cmp    edx,eax
  40a620:	je     40a641 <flatcc_builder_end_string@@Base+0x72>
  40a622:	lea    rcx,[rip+0x2ce7]        # 40d310 <flatcc_builder_padding_base@@Base+0xc50>
  40a629:	mov    edx,0x6c5
  40a62e:	lea    rsi,[rip+0x228b]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a635:	lea    rdi,[rip+0x2654]        # 40cc90 <flatcc_builder_padding_base@@Base+0x5d0>
  40a63c:	call   403080 <__assert_fail@plt>
  40a641:	mov    rax,QWORD PTR [rbp-0x18]
  40a645:	mov    eax,DWORD PTR [rax+0x20]
  40a648:	mov    edx,eax
  40a64a:	mov    rax,QWORD PTR [rbp-0x18]
  40a64e:	mov    rcx,QWORD PTR [rax+0x18]
  40a652:	mov    rax,QWORD PTR [rbp-0x18]
  40a656:	mov    rsi,rcx
  40a659:	mov    rdi,rax
  40a65c:	call   40a358 <flatcc_builder_create_string@@Base>
  40a661:	mov    DWORD PTR [rbp-0x4],eax
  40a664:	cmp    DWORD PTR [rbp-0x4],0x0
  40a668:	jne    40a671 <flatcc_builder_end_string@@Base+0xa2>
  40a66a:	mov    eax,0x0
  40a66f:	jmp    40a680 <flatcc_builder_end_string@@Base+0xb1>
  40a671:	mov    rax,QWORD PTR [rbp-0x18]
  40a675:	mov    rdi,rax
  40a678:	call   406af3 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  40a67d:	mov    eax,DWORD PTR [rbp-0x4]
  40a680:	leave  
  40a681:	ret    

000000000040a682 <flatcc_builder_string_edit@@Base>:
  40a682:	push   rbp
  40a683:	mov    rbp,rsp
  40a686:	mov    QWORD PTR [rbp-0x8],rdi
  40a68a:	mov    rax,QWORD PTR [rbp-0x8]
  40a68e:	mov    rax,QWORD PTR [rax+0x18]
  40a692:	pop    rbp
  40a693:	ret    

000000000040a694 <flatcc_builder_string_len@@Base>:
  40a694:	push   rbp
  40a695:	mov    rbp,rsp
  40a698:	mov    QWORD PTR [rbp-0x8],rdi
  40a69c:	mov    rax,QWORD PTR [rbp-0x8]
  40a6a0:	mov    rax,QWORD PTR [rax+0x30]
  40a6a4:	mov    eax,DWORD PTR [rax+0x14]
  40a6a7:	mov    eax,eax
  40a6a9:	pop    rbp
  40a6aa:	ret    

000000000040a6ab <flatcc_builder_table_add@@Base>:
  40a6ab:	push   rbp
  40a6ac:	mov    rbp,rsp
  40a6af:	sub    rsp,0x20
  40a6b3:	mov    QWORD PTR [rbp-0x8],rdi
  40a6b7:	mov    DWORD PTR [rbp-0xc],esi
  40a6ba:	mov    QWORD PTR [rbp-0x18],rdx
  40a6be:	mov    eax,ecx
  40a6c0:	mov    WORD PTR [rbp-0x10],ax
  40a6c4:	mov    rax,QWORD PTR [rbp-0x8]
  40a6c8:	mov    rax,QWORD PTR [rax+0x30]
  40a6cc:	movzx  eax,WORD PTR [rax+0xe]
  40a6d0:	cmp    ax,0x3
  40a6d4:	je     40a6f5 <flatcc_builder_table_add@@Base+0x4a>
  40a6d6:	lea    rcx,[rip+0x2c53]        # 40d330 <flatcc_builder_padding_base@@Base+0xc70>
  40a6dd:	mov    edx,0x6ed
  40a6e2:	lea    rsi,[rip+0x21d7]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a6e9:	lea    rdi,[rip+0x24a8]        # 40cb98 <flatcc_builder_padding_base@@Base+0x4d8>
  40a6f0:	call   403080 <__assert_fail@plt>
  40a6f5:	cmp    DWORD PTR [rbp-0xc],0x0
  40a6f9:	js     40a704 <flatcc_builder_table_add@@Base+0x59>
  40a6fb:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  40a702:	jle    40a723 <flatcc_builder_table_add@@Base+0x78>
  40a704:	lea    rcx,[rip+0x2c25]        # 40d330 <flatcc_builder_padding_base@@Base+0xc70>
  40a70b:	mov    edx,0x6ee
  40a710:	lea    rsi,[rip+0x21a9]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a717:	lea    rdi,[rip+0x259a]        # 40ccb8 <flatcc_builder_padding_base@@Base+0x5f8>
  40a71e:	call   403080 <__assert_fail@plt>
  40a723:	mov    rax,QWORD PTR [rbp-0x8]
  40a727:	movzx  eax,WORD PTR [rax+0xea]
  40a72e:	cmp    ax,WORD PTR [rbp-0x10]
  40a732:	jae    40a743 <flatcc_builder_table_add@@Base+0x98>
  40a734:	mov    rax,QWORD PTR [rbp-0x8]
  40a738:	movzx  edx,WORD PTR [rbp-0x10]
  40a73c:	mov    WORD PTR [rax+0xea],dx
  40a743:	mov    rax,QWORD PTR [rbp-0x8]
  40a747:	mov    rax,QWORD PTR [rax+0x8]
  40a74b:	mov    edx,DWORD PTR [rbp-0xc]
  40a74e:	movsxd rdx,edx
  40a751:	add    rdx,rdx
  40a754:	add    rax,rdx
  40a757:	movzx  eax,WORD PTR [rax]
  40a75a:	test   ax,ax
  40a75d:	je     40a77e <flatcc_builder_table_add@@Base+0xd3>
  40a75f:	lea    rcx,[rip+0x2bca]        # 40d330 <flatcc_builder_padding_base@@Base+0xc70>
  40a766:	mov    edx,0x6f8
  40a76b:	lea    rsi,[rip+0x214e]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a772:	lea    rdi,[rip+0x21a7]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  40a779:	call   403080 <__assert_fail@plt>
  40a77e:	mov    rax,QWORD PTR [rbp-0x8]
  40a782:	mov    edx,DWORD PTR [rax+0x14]
  40a785:	mov    eax,DWORD PTR [rbp-0xc]
  40a788:	xor    eax,edx
  40a78a:	imul   eax,eax,0x9e3779b1
  40a790:	mov    rdx,QWORD PTR [rbp-0x18]
  40a794:	xor    eax,edx
  40a796:	imul   edx,eax,0x9e3779b1
  40a79c:	mov    rax,QWORD PTR [rbp-0x8]
  40a7a0:	mov    DWORD PTR [rax+0x14],edx
  40a7a3:	mov    eax,DWORD PTR [rbp-0xc]
  40a7a6:	movzx  ecx,ax
  40a7a9:	movzx  edx,WORD PTR [rbp-0x10]
  40a7ad:	mov    rax,QWORD PTR [rbp-0x18]
  40a7b1:	mov    esi,eax
  40a7b3:	mov    rax,QWORD PTR [rbp-0x8]
  40a7b7:	mov    rdi,rax
  40a7ba:	call   405d33 <flatcc_builder_default_alloc@@Base+0x37b>
  40a7bf:	leave  
  40a7c0:	ret    

000000000040a7c1 <flatcc_builder_table_edit@@Base>:
  40a7c1:	push   rbp
  40a7c2:	mov    rbp,rsp
  40a7c5:	sub    rsp,0x10
  40a7c9:	mov    QWORD PTR [rbp-0x8],rdi
  40a7cd:	mov    QWORD PTR [rbp-0x10],rsi
  40a7d1:	mov    rax,QWORD PTR [rbp-0x8]
  40a7d5:	mov    rax,QWORD PTR [rax+0x30]
  40a7d9:	movzx  eax,WORD PTR [rax+0xe]
  40a7dd:	cmp    ax,0x3
  40a7e1:	je     40a802 <flatcc_builder_table_edit@@Base+0x41>
  40a7e3:	lea    rcx,[rip+0x2b66]        # 40d350 <flatcc_builder_padding_base@@Base+0xc90>
  40a7ea:	mov    edx,0x702
  40a7ef:	lea    rsi,[rip+0x20ca]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a7f6:	lea    rdi,[rip+0x239b]        # 40cb98 <flatcc_builder_padding_base@@Base+0x4d8>
  40a7fd:	call   403080 <__assert_fail@plt>
  40a802:	mov    rax,QWORD PTR [rbp-0x8]
  40a806:	mov    rdx,QWORD PTR [rax+0x18]
  40a80a:	mov    rax,QWORD PTR [rbp-0x8]
  40a80e:	mov    eax,DWORD PTR [rax+0x20]
  40a811:	mov    eax,eax
  40a813:	sub    rax,QWORD PTR [rbp-0x10]
  40a817:	add    rax,rdx
  40a81a:	leave  
  40a81b:	ret    

000000000040a81c <flatcc_builder_table_add_copy@@Base>:
  40a81c:	push   rbp
  40a81d:	mov    rbp,rsp
  40a820:	sub    rsp,0x30
  40a824:	mov    QWORD PTR [rbp-0x18],rdi
  40a828:	mov    DWORD PTR [rbp-0x1c],esi
  40a82b:	mov    QWORD PTR [rbp-0x28],rdx
  40a82f:	mov    QWORD PTR [rbp-0x30],rcx
  40a833:	mov    eax,r8d
  40a836:	mov    WORD PTR [rbp-0x20],ax
  40a83a:	movzx  ecx,WORD PTR [rbp-0x20]
  40a83e:	mov    rdx,QWORD PTR [rbp-0x30]
  40a842:	mov    esi,DWORD PTR [rbp-0x1c]
  40a845:	mov    rax,QWORD PTR [rbp-0x18]
  40a849:	mov    rdi,rax
  40a84c:	call   40a6ab <flatcc_builder_table_add@@Base>
  40a851:	mov    QWORD PTR [rbp-0x8],rax
  40a855:	cmp    QWORD PTR [rbp-0x8],0x0
  40a85a:	je     40a873 <flatcc_builder_table_add_copy@@Base+0x57>
  40a85c:	mov    rdx,QWORD PTR [rbp-0x30]
  40a860:	mov    rcx,QWORD PTR [rbp-0x28]
  40a864:	mov    rax,QWORD PTR [rbp-0x8]
  40a868:	mov    rsi,rcx
  40a86b:	mov    rdi,rax
  40a86e:	call   4030d0 <memcpy@plt>
  40a873:	mov    rax,QWORD PTR [rbp-0x8]
  40a877:	leave  
  40a878:	ret    

000000000040a879 <flatcc_builder_table_add_offset@@Base>:
  40a879:	push   rbp
  40a87a:	mov    rbp,rsp
  40a87d:	sub    rsp,0x10
  40a881:	mov    QWORD PTR [rbp-0x8],rdi
  40a885:	mov    DWORD PTR [rbp-0xc],esi
  40a888:	mov    rax,QWORD PTR [rbp-0x8]
  40a88c:	mov    rax,QWORD PTR [rax+0x30]
  40a890:	movzx  eax,WORD PTR [rax+0xe]
  40a894:	cmp    ax,0x3
  40a898:	je     40a8b9 <flatcc_builder_table_add_offset@@Base+0x40>
  40a89a:	lea    rcx,[rip+0x2adf]        # 40d380 <flatcc_builder_padding_base@@Base+0xcc0>
  40a8a1:	mov    edx,0x713
  40a8a6:	lea    rsi,[rip+0x2013]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a8ad:	lea    rdi,[rip+0x22e4]        # 40cb98 <flatcc_builder_padding_base@@Base+0x4d8>
  40a8b4:	call   403080 <__assert_fail@plt>
  40a8b9:	cmp    DWORD PTR [rbp-0xc],0x0
  40a8bd:	js     40a8c8 <flatcc_builder_table_add_offset@@Base+0x4f>
  40a8bf:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  40a8c6:	jle    40a8e7 <flatcc_builder_table_add_offset@@Base+0x6e>
  40a8c8:	lea    rcx,[rip+0x2ab1]        # 40d380 <flatcc_builder_padding_base@@Base+0xcc0>
  40a8cf:	mov    edx,0x714
  40a8d4:	lea    rsi,[rip+0x1fe5]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a8db:	lea    rdi,[rip+0x23d6]        # 40ccb8 <flatcc_builder_padding_base@@Base+0x5f8>
  40a8e2:	call   403080 <__assert_fail@plt>
  40a8e7:	mov    rax,QWORD PTR [rbp-0x8]
  40a8eb:	mov    rax,QWORD PTR [rax+0x8]
  40a8ef:	mov    edx,DWORD PTR [rbp-0xc]
  40a8f2:	movsxd rdx,edx
  40a8f5:	add    rdx,rdx
  40a8f8:	add    rax,rdx
  40a8fb:	movzx  eax,WORD PTR [rax]
  40a8fe:	test   ax,ax
  40a901:	je     40a922 <flatcc_builder_table_add_offset@@Base+0xa9>
  40a903:	lea    rcx,[rip+0x2a76]        # 40d380 <flatcc_builder_padding_base@@Base+0xcc0>
  40a90a:	mov    edx,0x71b
  40a90f:	lea    rsi,[rip+0x1faa]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40a916:	lea    rdi,[rip+0x2003]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  40a91d:	call   403080 <__assert_fail@plt>
  40a922:	mov    rax,QWORD PTR [rbp-0x8]
  40a926:	mov    edx,DWORD PTR [rax+0x14]
  40a929:	mov    eax,DWORD PTR [rbp-0xc]
  40a92c:	xor    eax,edx
  40a92e:	imul   eax,eax,0x9e3779b1
  40a934:	xor    eax,0x4
  40a937:	imul   edx,eax,0x9e3779b1
  40a93d:	mov    rax,QWORD PTR [rbp-0x8]
  40a941:	mov    DWORD PTR [rax+0x14],edx
  40a944:	mov    eax,DWORD PTR [rbp-0xc]
  40a947:	movzx  edx,ax
  40a94a:	mov    rax,QWORD PTR [rbp-0x8]
  40a94e:	mov    esi,edx
  40a950:	mov    rdi,rax
  40a953:	call   405dfb <flatcc_builder_default_alloc@@Base+0x443>
  40a958:	leave  
  40a959:	ret    

000000000040a95a <flatcc_builder_push_buffer_alignment@@Base>:
  40a95a:	push   rbp
  40a95b:	mov    rbp,rsp
  40a95e:	mov    QWORD PTR [rbp-0x18],rdi
  40a962:	mov    rax,QWORD PTR [rbp-0x18]
  40a966:	movzx  eax,WORD PTR [rax+0xe8]
  40a96d:	mov    WORD PTR [rbp-0x2],ax
  40a971:	mov    rax,QWORD PTR [rbp-0x18]
  40a975:	mov    WORD PTR [rax+0xe8],0x4
  40a97e:	movzx  eax,WORD PTR [rbp-0x2]
  40a982:	pop    rbp
  40a983:	ret    

000000000040a984 <flatcc_builder_pop_buffer_alignment@@Base>:
  40a984:	push   rbp
  40a985:	mov    rbp,rsp
  40a988:	sub    rsp,0x10
  40a98c:	mov    QWORD PTR [rbp-0x8],rdi
  40a990:	mov    eax,esi
  40a992:	mov    WORD PTR [rbp-0xc],ax
  40a996:	movzx  edx,WORD PTR [rbp-0xc]
  40a99a:	mov    rax,QWORD PTR [rbp-0x8]
  40a99e:	mov    esi,edx
  40a9a0:	mov    rdi,rax
  40a9a3:	call   406602 <flatcc_builder_clear@@Base+0x96>
  40a9a8:	nop
  40a9a9:	leave  
  40a9aa:	ret    

000000000040a9ab <flatcc_builder_get_buffer_alignment@@Base>:
  40a9ab:	push   rbp
  40a9ac:	mov    rbp,rsp
  40a9af:	mov    QWORD PTR [rbp-0x8],rdi
  40a9b3:	mov    rax,QWORD PTR [rbp-0x8]
  40a9b7:	movzx  eax,WORD PTR [rax+0xe8]
  40a9be:	pop    rbp
  40a9bf:	ret    

000000000040a9c0 <flatcc_builder_set_vtable_clustering@@Base>:
  40a9c0:	push   rbp
  40a9c1:	mov    rbp,rsp
  40a9c4:	mov    QWORD PTR [rbp-0x8],rdi
  40a9c8:	mov    DWORD PTR [rbp-0xc],esi
  40a9cb:	cmp    DWORD PTR [rbp-0xc],0x0
  40a9cf:	sete   al
  40a9d2:	movzx  edx,al
  40a9d5:	mov    rax,QWORD PTR [rbp-0x8]
  40a9d9:	mov    DWORD PTR [rax+0x124],edx
  40a9df:	nop
  40a9e0:	pop    rbp
  40a9e1:	ret    

000000000040a9e2 <flatcc_builder_set_block_align@@Base>:
  40a9e2:	push   rbp
  40a9e3:	mov    rbp,rsp
  40a9e6:	mov    QWORD PTR [rbp-0x8],rdi
  40a9ea:	mov    eax,esi
  40a9ec:	mov    WORD PTR [rbp-0xc],ax
  40a9f0:	mov    rax,QWORD PTR [rbp-0x8]
  40a9f4:	movzx  edx,WORD PTR [rbp-0xc]
  40a9f8:	mov    WORD PTR [rax+0xec],dx
  40a9ff:	nop
  40aa00:	pop    rbp
  40aa01:	ret    

000000000040aa02 <flatcc_builder_get_level@@Base>:
  40aa02:	push   rbp
  40aa03:	mov    rbp,rsp
  40aa06:	mov    QWORD PTR [rbp-0x8],rdi
  40aa0a:	mov    rax,QWORD PTR [rbp-0x8]
  40aa0e:	mov    eax,DWORD PTR [rax+0x104]
  40aa14:	pop    rbp
  40aa15:	ret    

000000000040aa16 <flatcc_builder_set_max_level@@Base>:
  40aa16:	push   rbp
  40aa17:	mov    rbp,rsp
  40aa1a:	mov    QWORD PTR [rbp-0x8],rdi
  40aa1e:	mov    DWORD PTR [rbp-0xc],esi
  40aa21:	mov    rax,QWORD PTR [rbp-0x8]
  40aa25:	mov    edx,DWORD PTR [rbp-0xc]
  40aa28:	mov    DWORD PTR [rax+0x120],edx
  40aa2e:	mov    rax,QWORD PTR [rbp-0x8]
  40aa32:	mov    edx,DWORD PTR [rax+0x108]
  40aa38:	mov    rax,QWORD PTR [rbp-0x8]
  40aa3c:	mov    eax,DWORD PTR [rax+0x120]
  40aa42:	cmp    edx,eax
  40aa44:	jge    40aa5a <flatcc_builder_set_max_level@@Base+0x44>
  40aa46:	mov    rax,QWORD PTR [rbp-0x8]
  40aa4a:	mov    edx,DWORD PTR [rax+0x120]
  40aa50:	mov    rax,QWORD PTR [rbp-0x8]
  40aa54:	mov    DWORD PTR [rax+0x108],edx
  40aa5a:	nop
  40aa5b:	pop    rbp
  40aa5c:	ret    

000000000040aa5d <flatcc_builder_get_buffer_size@@Base>:
  40aa5d:	push   rbp
  40aa5e:	mov    rbp,rsp
  40aa61:	mov    QWORD PTR [rbp-0x8],rdi
  40aa65:	mov    rax,QWORD PTR [rbp-0x8]
  40aa69:	mov    edx,DWORD PTR [rax+0xf4]
  40aa6f:	mov    rax,QWORD PTR [rbp-0x8]
  40aa73:	mov    eax,DWORD PTR [rax+0xf0]
  40aa79:	sub    edx,eax
  40aa7b:	mov    eax,edx
  40aa7d:	cdqe   
  40aa7f:	pop    rbp
  40aa80:	ret    

000000000040aa81 <flatcc_builder_get_buffer_start@@Base>:
  40aa81:	push   rbp
  40aa82:	mov    rbp,rsp
  40aa85:	mov    QWORD PTR [rbp-0x8],rdi
  40aa89:	mov    rax,QWORD PTR [rbp-0x8]
  40aa8d:	mov    eax,DWORD PTR [rax+0xf0]
  40aa93:	pop    rbp
  40aa94:	ret    

000000000040aa95 <flatcc_builder_get_buffer_end@@Base>:
  40aa95:	push   rbp
  40aa96:	mov    rbp,rsp
  40aa99:	mov    QWORD PTR [rbp-0x8],rdi
  40aa9d:	mov    rax,QWORD PTR [rbp-0x8]
  40aaa1:	mov    eax,DWORD PTR [rax+0xf4]
  40aaa7:	pop    rbp
  40aaa8:	ret    

000000000040aaa9 <flatcc_builder_set_vtable_cache_limit@@Base>:
  40aaa9:	push   rbp
  40aaaa:	mov    rbp,rsp
  40aaad:	mov    QWORD PTR [rbp-0x8],rdi
  40aab1:	mov    QWORD PTR [rbp-0x10],rsi
  40aab5:	mov    rax,QWORD PTR [rbp-0x8]
  40aab9:	mov    rdx,QWORD PTR [rbp-0x10]
  40aabd:	mov    QWORD PTR [rax+0x118],rdx
  40aac4:	nop
  40aac5:	pop    rbp
  40aac6:	ret    

000000000040aac7 <flatcc_builder_set_identifier@@Base>:
  40aac7:	push   rbp
  40aac8:	mov    rbp,rsp
  40aacb:	mov    QWORD PTR [rbp-0x8],rdi
  40aacf:	mov    QWORD PTR [rbp-0x10],rsi
  40aad3:	cmp    QWORD PTR [rbp-0x10],0x0
  40aad8:	je     40aae0 <flatcc_builder_set_identifier@@Base+0x19>
  40aada:	mov    rax,QWORD PTR [rbp-0x10]
  40aade:	jmp    40aae7 <flatcc_builder_set_identifier@@Base+0x20>
  40aae0:	mov    rax,0x40c6c0
  40aae7:	mov    rdx,QWORD PTR [rbp-0x8]
  40aaeb:	add    rdx,0x110
  40aaf2:	mov    eax,DWORD PTR [rax]
  40aaf4:	mov    DWORD PTR [rdx],eax
  40aaf6:	nop
  40aaf7:	pop    rbp
  40aaf8:	ret    

000000000040aaf9 <flatcc_builder_get_type@@Base>:
  40aaf9:	push   rbp
  40aafa:	mov    rbp,rsp
  40aafd:	mov    QWORD PTR [rbp-0x8],rdi
  40ab01:	mov    rax,QWORD PTR [rbp-0x8]
  40ab05:	mov    rax,QWORD PTR [rax+0x30]
  40ab09:	test   rax,rax
  40ab0c:	je     40ab1f <flatcc_builder_get_type@@Base+0x26>
  40ab0e:	mov    rax,QWORD PTR [rbp-0x8]
  40ab12:	mov    rax,QWORD PTR [rax+0x30]
  40ab16:	movzx  eax,WORD PTR [rax+0xe]
  40ab1a:	movzx  eax,ax
  40ab1d:	jmp    40ab24 <flatcc_builder_get_type@@Base+0x2b>
  40ab1f:	mov    eax,0x0
  40ab24:	pop    rbp
  40ab25:	ret    

000000000040ab26 <flatcc_builder_get_type_at@@Base>:
  40ab26:	push   rbp
  40ab27:	mov    rbp,rsp
  40ab2a:	mov    QWORD PTR [rbp-0x8],rdi
  40ab2e:	mov    DWORD PTR [rbp-0xc],esi
  40ab31:	cmp    DWORD PTR [rbp-0xc],0x0
  40ab35:	jle    40ab46 <flatcc_builder_get_type_at@@Base+0x20>
  40ab37:	mov    rax,QWORD PTR [rbp-0x8]
  40ab3b:	mov    eax,DWORD PTR [rax+0x104]
  40ab41:	cmp    eax,DWORD PTR [rbp-0xc]
  40ab44:	jge    40ab4d <flatcc_builder_get_type_at@@Base+0x27>
  40ab46:	mov    eax,0x0
  40ab4b:	jmp    40ab81 <flatcc_builder_get_type_at@@Base+0x5b>
  40ab4d:	mov    rax,QWORD PTR [rbp-0x8]
  40ab51:	mov    rcx,QWORD PTR [rax+0x30]
  40ab55:	mov    rax,QWORD PTR [rbp-0x8]
  40ab59:	mov    eax,DWORD PTR [rax+0x104]
  40ab5f:	mov    edx,DWORD PTR [rbp-0xc]
  40ab62:	sub    edx,eax
  40ab64:	mov    eax,edx
  40ab66:	movsxd rdx,eax
  40ab69:	mov    rax,rdx
  40ab6c:	shl    rax,0x3
  40ab70:	add    rax,rdx
  40ab73:	shl    rax,0x2
  40ab77:	add    rax,rcx
  40ab7a:	movzx  eax,WORD PTR [rax+0xe]
  40ab7e:	movzx  eax,ax
  40ab81:	pop    rbp
  40ab82:	ret    

000000000040ab83 <flatcc_builder_get_direct_buffer@@Base>:
  40ab83:	push   rbp
  40ab84:	mov    rbp,rsp
  40ab87:	sub    rsp,0x10
  40ab8b:	mov    QWORD PTR [rbp-0x8],rdi
  40ab8f:	mov    QWORD PTR [rbp-0x10],rsi
  40ab93:	mov    rax,QWORD PTR [rbp-0x8]
  40ab97:	mov    eax,DWORD PTR [rax+0x128]
  40ab9d:	test   eax,eax
  40ab9f:	je     40abbd <flatcc_builder_get_direct_buffer@@Base+0x3a>
  40aba1:	mov    rax,QWORD PTR [rbp-0x8]
  40aba5:	lea    rdx,[rax+0x130]
  40abac:	mov    rax,QWORD PTR [rbp-0x10]
  40abb0:	mov    rsi,rax
  40abb3:	mov    rdi,rdx
  40abb6:	call   405919 <main@@Base+0x289>
  40abbb:	jmp    40abd4 <flatcc_builder_get_direct_buffer@@Base+0x51>
  40abbd:	cmp    QWORD PTR [rbp-0x10],0x0
  40abc2:	je     40abcf <flatcc_builder_get_direct_buffer@@Base+0x4c>
  40abc4:	mov    rax,QWORD PTR [rbp-0x10]
  40abc8:	mov    QWORD PTR [rax],0x0
  40abcf:	mov    eax,0x0
  40abd4:	leave  
  40abd5:	ret    

000000000040abd6 <flatcc_builder_copy_buffer@@Base>:
  40abd6:	push   rbp
  40abd7:	mov    rbp,rsp
  40abda:	sub    rsp,0x20
  40abde:	mov    QWORD PTR [rbp-0x8],rdi
  40abe2:	mov    QWORD PTR [rbp-0x10],rsi
  40abe6:	mov    QWORD PTR [rbp-0x18],rdx
  40abea:	mov    rax,QWORD PTR [rbp-0x8]
  40abee:	mov    eax,DWORD PTR [rax+0x128]
  40abf4:	test   eax,eax
  40abf6:	jne    40abff <flatcc_builder_copy_buffer@@Base+0x29>
  40abf8:	mov    eax,0x0
  40abfd:	jmp    40ac4b <flatcc_builder_copy_buffer@@Base+0x75>
  40abff:	mov    rax,QWORD PTR [rbp-0x8]
  40ac03:	lea    rcx,[rax+0x130]
  40ac0a:	mov    rdx,QWORD PTR [rbp-0x18]
  40ac0e:	mov    rax,QWORD PTR [rbp-0x10]
  40ac12:	mov    rsi,rax
  40ac15:	mov    rdi,rcx
  40ac18:	call   40b848 <flatcc_emitter_copy_buffer@@Base>
  40ac1d:	mov    QWORD PTR [rbp-0x10],rax
  40ac21:	cmp    QWORD PTR [rbp-0x10],0x0
  40ac26:	jne    40ac47 <flatcc_builder_copy_buffer@@Base+0x71>
  40ac28:	lea    rcx,[rip+0x2771]        # 40d3a0 <flatcc_builder_padding_base@@Base+0xce0>
  40ac2f:	mov    edx,0x786
  40ac34:	lea    rsi,[rip+0x1c85]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40ac3b:	lea    rdi,[rip+0x20ba]        # 40ccfc <flatcc_builder_padding_base@@Base+0x63c>
  40ac42:	call   403080 <__assert_fail@plt>
  40ac47:	mov    rax,QWORD PTR [rbp-0x10]
  40ac4b:	leave  
  40ac4c:	ret    

000000000040ac4d <flatcc_builder_finalize_buffer@@Base>:
  40ac4d:	push   rbp
  40ac4e:	mov    rbp,rsp
  40ac51:	sub    rsp,0x20
  40ac55:	mov    QWORD PTR [rbp-0x18],rdi
  40ac59:	mov    QWORD PTR [rbp-0x20],rsi
  40ac5d:	mov    rax,QWORD PTR [rbp-0x18]
  40ac61:	mov    rdi,rax
  40ac64:	call   40aa5d <flatcc_builder_get_buffer_size@@Base>
  40ac69:	mov    QWORD PTR [rbp-0x10],rax
  40ac6d:	cmp    QWORD PTR [rbp-0x20],0x0
  40ac72:	je     40ac7f <flatcc_builder_finalize_buffer@@Base+0x32>
  40ac74:	mov    rax,QWORD PTR [rbp-0x20]
  40ac78:	mov    rdx,QWORD PTR [rbp-0x10]
  40ac7c:	mov    QWORD PTR [rax],rdx
  40ac7f:	mov    rax,QWORD PTR [rbp-0x10]
  40ac83:	mov    rdi,rax
  40ac86:	call   4030e0 <malloc@plt>
  40ac8b:	mov    QWORD PTR [rbp-0x8],rax
  40ac8f:	cmp    QWORD PTR [rbp-0x8],0x0
  40ac94:	jne    40acb5 <flatcc_builder_finalize_buffer@@Base+0x68>
  40ac96:	lea    rcx,[rip+0x2723]        # 40d3c0 <flatcc_builder_padding_base@@Base+0xd00>
  40ac9d:	mov    edx,0x798
  40aca2:	lea    rsi,[rip+0x1c17]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40aca9:	lea    rdi,[rip+0x1c70]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  40acb0:	call   403080 <__assert_fail@plt>
  40acb5:	mov    rdx,QWORD PTR [rbp-0x10]
  40acb9:	mov    rcx,QWORD PTR [rbp-0x8]
  40acbd:	mov    rax,QWORD PTR [rbp-0x18]
  40acc1:	mov    rsi,rcx
  40acc4:	mov    rdi,rax
  40acc7:	call   40abd6 <flatcc_builder_copy_buffer@@Base>
  40accc:	test   rax,rax
  40accf:	jne    40acf0 <flatcc_builder_finalize_buffer@@Base+0xa3>
  40acd1:	lea    rcx,[rip+0x26e8]        # 40d3c0 <flatcc_builder_padding_base@@Base+0xd00>
  40acd8:	mov    edx,0x79c
  40acdd:	lea    rsi,[rip+0x1bdc]        # 40c8c0 <flatcc_builder_padding_base@@Base+0x200>
  40ace4:	lea    rdi,[rip+0x1c35]        # 40c920 <flatcc_builder_padding_base@@Base+0x260>
  40aceb:	call   403080 <__assert_fail@plt>
  40acf0:	cmp    QWORD PTR [rbp-0x8],0x0
  40acf5:	jne    40ad09 <flatcc_builder_finalize_buffer@@Base+0xbc>
  40acf7:	cmp    QWORD PTR [rbp-0x20],0x0
  40acfc:	je     40ad09 <flatcc_builder_finalize_buffer@@Base+0xbc>
  40acfe:	mov    rax,QWORD PTR [rbp-0x20]
  40ad02:	mov    QWORD PTR [rax],0x0
  40ad09:	mov    rax,QWORD PTR [rbp-0x8]
  40ad0d:	leave  
  40ad0e:	ret    

000000000040ad0f <flatcc_builder_finalize_aligned_buffer@@Base>:
  40ad0f:	push   rbp
  40ad10:	mov    rbp,rsp
  40ad13:	sub    rsp,0x30
  40ad17:	mov    QWORD PTR [rbp-0x28],rdi
  40ad1b:	mov    QWORD PTR [rbp-0x30],rsi
  40ad1f:	mov    rax,QWORD PTR [rbp-0x28]
  40ad23:	mov    rdi,rax
  40ad26:	call   40aa5d <flatcc_builder_get_buffer_size@@Base>
  40ad2b:	mov    QWORD PTR [rbp-0x10],rax
  40ad2f:	cmp    QWORD PTR [rbp-0x30],0x0
  40ad34:	je     40ad41 <flatcc_builder_finalize_aligned_buffer@@Base+0x32>
  40ad36:	mov    rax,QWORD PTR [rbp-0x30]
  40ad3a:	mov    rdx,QWORD PTR [rbp-0x10]
  40ad3e:	mov    QWORD PTR [rax],rdx
  40ad41:	mov    rax,QWORD PTR [rbp-0x28]
  40ad45:	mov    rdi,rax
  40ad48:	call   40a9ab <flatcc_builder_get_buffer_alignment@@Base>
  40ad4d:	movzx  eax,ax
  40ad50:	mov    QWORD PTR [rbp-0x8],rax
  40ad54:	mov    rdx,QWORD PTR [rbp-0x10]
  40ad58:	mov    rax,QWORD PTR [rbp-0x8]
  40ad5c:	add    rax,rdx
  40ad5f:	lea    rdx,[rax-0x1]
  40ad63:	mov    rax,QWORD PTR [rbp-0x8]
  40ad67:	neg    rax
  40ad6a:	and    rax,rdx
  40ad6d:	mov    QWORD PTR [rbp-0x10],rax
  40ad71:	mov    rdx,QWORD PTR [rbp-0x10]
  40ad75:	mov    rax,QWORD PTR [rbp-0x8]
  40ad79:	mov    rsi,rdx
  40ad7c:	mov    rdi,rax
  40ad7f:	call   405865 <main@@Base+0x1d5>
  40ad84:	mov    QWORD PTR [rbp-0x18],rax
  40ad88:	cmp    QWORD PTR [rbp-0x18],0x0
  40ad8d:	je     40adc1 <flatcc_builder_finalize_aligned_buffer@@Base+0xb2>
  40ad8f:	mov    rdx,QWORD PTR [rbp-0x10]
  40ad93:	mov    rcx,QWORD PTR [rbp-0x18]
  40ad97:	mov    rax,QWORD PTR [rbp-0x28]
  40ad9b:	mov    rsi,rcx
  40ad9e:	mov    rdi,rax
  40ada1:	call   40abd6 <flatcc_builder_copy_buffer@@Base>
  40ada6:	test   rax,rax
  40ada9:	jne    40adc2 <flatcc_builder_finalize_aligned_buffer@@Base+0xb3>
  40adab:	mov    rax,QWORD PTR [rbp-0x18]
  40adaf:	mov    rdi,rax
  40adb2:	call   403030 <free@plt>
  40adb7:	mov    QWORD PTR [rbp-0x18],0x0
  40adbf:	jmp    40adc2 <flatcc_builder_finalize_aligned_buffer@@Base+0xb3>
  40adc1:	nop
  40adc2:	cmp    QWORD PTR [rbp-0x18],0x0
  40adc7:	jne    40addb <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
  40adc9:	cmp    QWORD PTR [rbp-0x30],0x0
  40adce:	je     40addb <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
  40add0:	mov    rax,QWORD PTR [rbp-0x30]
  40add4:	mov    QWORD PTR [rax],0x0
  40addb:	mov    rax,QWORD PTR [rbp-0x18]
  40addf:	leave  
  40ade0:	ret    

000000000040ade1 <flatcc_builder_aligned_alloc@@Base>:
  40ade1:	push   rbp
  40ade2:	mov    rbp,rsp
  40ade5:	sub    rsp,0x10
  40ade9:	mov    QWORD PTR [rbp-0x8],rdi
  40aded:	mov    QWORD PTR [rbp-0x10],rsi
  40adf1:	mov    rdx,QWORD PTR [rbp-0x10]
  40adf5:	mov    rax,QWORD PTR [rbp-0x8]
  40adf9:	mov    rsi,rdx
  40adfc:	mov    rdi,rax
  40adff:	call   405865 <main@@Base+0x1d5>
  40ae04:	leave  
  40ae05:	ret    

000000000040ae06 <flatcc_builder_aligned_free@@Base>:
  40ae06:	push   rbp
  40ae07:	mov    rbp,rsp
  40ae0a:	sub    rsp,0x10
  40ae0e:	mov    QWORD PTR [rbp-0x8],rdi
  40ae12:	mov    rax,QWORD PTR [rbp-0x8]
  40ae16:	mov    rdi,rax
  40ae19:	call   403030 <free@plt>
  40ae1e:	nop
  40ae1f:	leave  
  40ae20:	ret    

000000000040ae21 <flatcc_builder_get_emit_context@@Base>:
  40ae21:	push   rbp
  40ae22:	mov    rbp,rsp
  40ae25:	mov    QWORD PTR [rbp-0x8],rdi
  40ae29:	mov    rax,QWORD PTR [rbp-0x8]
  40ae2d:	mov    rax,QWORD PTR [rax+0x38]
  40ae31:	pop    rbp
  40ae32:	ret    
  40ae33:	push   rbp
  40ae34:	mov    rbp,rsp
  40ae37:	sub    rsp,0x20
  40ae3b:	mov    QWORD PTR [rbp-0x18],rdi
  40ae3f:	mov    QWORD PTR [rbp-0x8],0x0
  40ae47:	mov    rax,QWORD PTR [rbp-0x18]
  40ae4b:	mov    rax,QWORD PTR [rax]
  40ae4e:	test   rax,rax
  40ae51:	je     40aeaf <flatcc_builder_get_emit_context@@Base+0x8e>
  40ae53:	mov    rax,QWORD PTR [rbp-0x18]
  40ae57:	mov    rax,QWORD PTR [rax]
  40ae5a:	mov    rdx,QWORD PTR [rax+0xb88]
  40ae61:	mov    rax,QWORD PTR [rbp-0x18]
  40ae65:	mov    rax,QWORD PTR [rax+0x8]
  40ae69:	cmp    rdx,rax
  40ae6c:	je     40aeaf <flatcc_builder_get_emit_context@@Base+0x8e>
  40ae6e:	mov    rax,QWORD PTR [rbp-0x18]
  40ae72:	mov    rax,QWORD PTR [rax]
  40ae75:	mov    rax,QWORD PTR [rax+0xb88]
  40ae7c:	mov    rdx,QWORD PTR [rbp-0x18]
  40ae80:	mov    rdx,QWORD PTR [rdx]
  40ae83:	mov    edx,DWORD PTR [rdx+0xb90]
  40ae89:	sub    edx,0xb80
  40ae8f:	mov    DWORD PTR [rax+0xb90],edx
  40ae95:	mov    rax,QWORD PTR [rbp-0x18]
  40ae99:	mov    rax,QWORD PTR [rax]
  40ae9c:	mov    rdx,QWORD PTR [rax+0xb88]
  40aea3:	mov    rax,QWORD PTR [rbp-0x18]
  40aea7:	mov    QWORD PTR [rax],rdx
  40aeaa:	jmp    40afe7 <flatcc_builder_get_emit_context@@Base+0x1c6>
  40aeaf:	mov    edi,0xb98
  40aeb4:	call   4030e0 <malloc@plt>
  40aeb9:	mov    QWORD PTR [rbp-0x8],rax
  40aebd:	cmp    QWORD PTR [rbp-0x8],0x0
  40aec2:	jne    40aece <flatcc_builder_get_emit_context@@Base+0xad>
  40aec4:	mov    eax,0xffffffff
  40aec9:	jmp    40b035 <flatcc_builder_get_emit_context@@Base+0x214>
  40aece:	mov    rax,QWORD PTR [rbp-0x18]
  40aed2:	mov    rax,QWORD PTR [rax+0x38]
  40aed6:	lea    rdx,[rax+0xb80]
  40aedd:	mov    rax,QWORD PTR [rbp-0x18]
  40aee1:	mov    QWORD PTR [rax+0x38],rdx
  40aee5:	mov    rax,QWORD PTR [rbp-0x18]
  40aee9:	mov    rax,QWORD PTR [rax]
  40aeec:	test   rax,rax
  40aeef:	je     40af4b <flatcc_builder_get_emit_context@@Base+0x12a>
  40aef1:	mov    rax,QWORD PTR [rbp-0x18]
  40aef5:	mov    rdx,QWORD PTR [rax+0x8]
  40aef9:	mov    rax,QWORD PTR [rbp-0x8]
  40aefd:	mov    QWORD PTR [rax+0xb88],rdx
  40af04:	mov    rax,QWORD PTR [rbp-0x18]
  40af08:	mov    rdx,QWORD PTR [rax]
  40af0b:	mov    rax,QWORD PTR [rbp-0x8]
  40af0f:	mov    QWORD PTR [rax+0xb80],rdx
  40af16:	mov    rax,QWORD PTR [rbp-0x18]
  40af1a:	mov    rax,QWORD PTR [rax]
  40af1d:	mov    rdx,QWORD PTR [rbp-0x8]
  40af21:	mov    QWORD PTR [rax+0xb88],rdx
  40af28:	mov    rax,QWORD PTR [rbp-0x18]
  40af2c:	mov    rax,QWORD PTR [rax+0x8]
  40af30:	mov    rdx,QWORD PTR [rbp-0x8]
  40af34:	mov    QWORD PTR [rax+0xb80],rdx
  40af3b:	mov    rax,QWORD PTR [rbp-0x18]
  40af3f:	mov    rdx,QWORD PTR [rbp-0x8]
  40af43:	mov    QWORD PTR [rax],rdx
  40af46:	jmp    40afe7 <flatcc_builder_get_emit_context@@Base+0x1c6>
  40af4b:	mov    rax,QWORD PTR [rbp-0x18]
  40af4f:	mov    rdx,QWORD PTR [rbp-0x8]
  40af53:	mov    QWORD PTR [rax],rdx
  40af56:	mov    rax,QWORD PTR [rbp-0x18]
  40af5a:	mov    rdx,QWORD PTR [rbp-0x8]
  40af5e:	mov    QWORD PTR [rax+0x8],rdx
  40af62:	mov    rax,QWORD PTR [rbp-0x8]
  40af66:	mov    rdx,QWORD PTR [rbp-0x8]
  40af6a:	mov    QWORD PTR [rax+0xb80],rdx
  40af71:	mov    rax,QWORD PTR [rbp-0x8]
  40af75:	mov    rdx,QWORD PTR [rbp-0x8]
  40af79:	mov    QWORD PTR [rax+0xb88],rdx
  40af80:	mov    rax,QWORD PTR [rbp-0x18]
  40af84:	mov    rax,QWORD PTR [rax]
  40af87:	lea    rdx,[rax+0x5c0]
  40af8e:	mov    rax,QWORD PTR [rbp-0x18]
  40af92:	mov    QWORD PTR [rax+0x10],rdx
  40af96:	mov    rax,QWORD PTR [rbp-0x18]
  40af9a:	mov    rdx,QWORD PTR [rax+0x10]
  40af9e:	mov    rax,QWORD PTR [rbp-0x18]
  40afa2:	mov    QWORD PTR [rax+0x20],rdx
  40afa6:	mov    rax,QWORD PTR [rbp-0x18]
  40afaa:	mov    QWORD PTR [rax+0x18],0x5c0
  40afb2:	mov    rax,QWORD PTR [rbp-0x18]
  40afb6:	mov    rax,QWORD PTR [rax+0x18]
  40afba:	mov    edx,0xb80
  40afbf:	sub    rdx,rax
  40afc2:	mov    rax,QWORD PTR [rbp-0x18]
  40afc6:	mov    QWORD PTR [rax+0x28],rdx
  40afca:	mov    rax,QWORD PTR [rbp-0x18]
  40afce:	mov    rax,QWORD PTR [rax+0x18]
  40afd2:	neg    eax
  40afd4:	mov    edx,eax
  40afd6:	mov    rax,QWORD PTR [rbp-0x8]
  40afda:	mov    DWORD PTR [rax+0xb90],edx
  40afe0:	mov    eax,0x0
  40afe5:	jmp    40b035 <flatcc_builder_get_emit_context@@Base+0x214>
  40afe7:	mov    rax,QWORD PTR [rbp-0x18]
  40afeb:	mov    rax,QWORD PTR [rax]
  40afee:	lea    rdx,[rax+0xb80]
  40aff5:	mov    rax,QWORD PTR [rbp-0x18]
  40aff9:	mov    QWORD PTR [rax+0x10],rdx
  40affd:	mov    rax,QWORD PTR [rbp-0x18]
  40b001:	mov    QWORD PTR [rax+0x18],0xb80
  40b009:	mov    rax,QWORD PTR [rbp-0x18]
  40b00d:	mov    rax,QWORD PTR [rax]
  40b010:	mov    rdx,QWORD PTR [rbp-0x18]
  40b014:	mov    rdx,QWORD PTR [rdx]
  40b017:	mov    rdx,QWORD PTR [rdx+0xb80]
  40b01e:	mov    edx,DWORD PTR [rdx+0xb90]
  40b024:	sub    edx,0xb80
  40b02a:	mov    DWORD PTR [rax+0xb90],edx
  40b030:	mov    eax,0x0
  40b035:	leave  
  40b036:	ret    
  40b037:	push   rbp
  40b038:	mov    rbp,rsp
  40b03b:	sub    rsp,0x20
  40b03f:	mov    QWORD PTR [rbp-0x18],rdi
  40b043:	mov    QWORD PTR [rbp-0x8],0x0
  40b04b:	mov    rax,QWORD PTR [rbp-0x18]
  40b04f:	mov    rax,QWORD PTR [rax+0x8]
  40b053:	test   rax,rax
  40b056:	je     40b08f <flatcc_builder_get_emit_context@@Base+0x26e>
  40b058:	mov    rax,QWORD PTR [rbp-0x18]
  40b05c:	mov    rax,QWORD PTR [rax+0x8]
  40b060:	mov    rdx,QWORD PTR [rax+0xb80]
  40b067:	mov    rax,QWORD PTR [rbp-0x18]
  40b06b:	mov    rax,QWORD PTR [rax]
  40b06e:	cmp    rdx,rax
  40b071:	je     40b08f <flatcc_builder_get_emit_context@@Base+0x26e>
  40b073:	mov    rax,QWORD PTR [rbp-0x18]
  40b077:	mov    rax,QWORD PTR [rax+0x8]
  40b07b:	mov    rdx,QWORD PTR [rax+0xb80]
  40b082:	mov    rax,QWORD PTR [rbp-0x18]
  40b086:	mov    QWORD PTR [rax+0x8],rdx
  40b08a:	jmp    40b1c9 <flatcc_builder_get_emit_context@@Base+0x3a8>
  40b08f:	mov    edi,0xb98
  40b094:	call   4030e0 <malloc@plt>
  40b099:	mov    QWORD PTR [rbp-0x8],rax
  40b09d:	cmp    QWORD PTR [rbp-0x8],0x0
  40b0a2:	jne    40b0ae <flatcc_builder_get_emit_context@@Base+0x28d>
  40b0a4:	mov    eax,0xffffffff
  40b0a9:	jmp    40b216 <flatcc_builder_get_emit_context@@Base+0x3f5>
  40b0ae:	mov    rax,QWORD PTR [rbp-0x18]
  40b0b2:	mov    rax,QWORD PTR [rax+0x38]
  40b0b6:	lea    rdx,[rax+0xb80]
  40b0bd:	mov    rax,QWORD PTR [rbp-0x18]
  40b0c1:	mov    QWORD PTR [rax+0x38],rdx
  40b0c5:	mov    rax,QWORD PTR [rbp-0x18]
  40b0c9:	mov    rax,QWORD PTR [rax+0x8]
  40b0cd:	test   rax,rax
  40b0d0:	je     40b12d <flatcc_builder_get_emit_context@@Base+0x30c>
  40b0d2:	mov    rax,QWORD PTR [rbp-0x18]
  40b0d6:	mov    rdx,QWORD PTR [rax+0x8]
  40b0da:	mov    rax,QWORD PTR [rbp-0x8]
  40b0de:	mov    QWORD PTR [rax+0xb88],rdx
  40b0e5:	mov    rax,QWORD PTR [rbp-0x18]
  40b0e9:	mov    rdx,QWORD PTR [rax]
  40b0ec:	mov    rax,QWORD PTR [rbp-0x8]
  40b0f0:	mov    QWORD PTR [rax+0xb80],rdx
  40b0f7:	mov    rax,QWORD PTR [rbp-0x18]
  40b0fb:	mov    rax,QWORD PTR [rax]
  40b0fe:	mov    rdx,QWORD PTR [rbp-0x8]
  40b102:	mov    QWORD PTR [rax+0xb88],rdx
  40b109:	mov    rax,QWORD PTR [rbp-0x18]
  40b10d:	mov    rax,QWORD PTR [rax+0x8]
  40b111:	mov    rdx,QWORD PTR [rbp-0x8]
  40b115:	mov    QWORD PTR [rax+0xb80],rdx
  40b11c:	mov    rax,QWORD PTR [rbp-0x18]
  40b120:	mov    rdx,QWORD PTR [rbp-0x8]
  40b124:	mov    QWORD PTR [rax+0x8],rdx
  40b128:	jmp    40b1c9 <flatcc_builder_get_emit_context@@Base+0x3a8>
  40b12d:	mov    rax,QWORD PTR [rbp-0x18]
  40b131:	mov    rdx,QWORD PTR [rbp-0x8]
  40b135:	mov    QWORD PTR [rax],rdx
  40b138:	mov    rax,QWORD PTR [rbp-0x18]
  40b13c:	mov    rdx,QWORD PTR [rbp-0x8]
  40b140:	mov    QWORD PTR [rax+0x8],rdx
  40b144:	mov    rax,QWORD PTR [rbp-0x8]
  40b148:	mov    rdx,QWORD PTR [rbp-0x8]
  40b14c:	mov    QWORD PTR [rax+0xb80],rdx
  40b153:	mov    rax,QWORD PTR [rbp-0x8]
  40b157:	mov    rdx,QWORD PTR [rbp-0x8]
  40b15b:	mov    QWORD PTR [rax+0xb88],rdx
  40b162:	mov    rax,QWORD PTR [rbp-0x18]
  40b166:	mov    rax,QWORD PTR [rax]
  40b169:	lea    rdx,[rax+0x5c0]
  40b170:	mov    rax,QWORD PTR [rbp-0x18]
  40b174:	mov    QWORD PTR [rax+0x10],rdx
  40b178:	mov    rax,QWORD PTR [rbp-0x18]
  40b17c:	mov    rdx,QWORD PTR [rax+0x10]
  40b180:	mov    rax,QWORD PTR [rbp-0x18]
  40b184:	mov    QWORD PTR [rax+0x20],rdx
  40b188:	mov    rax,QWORD PTR [rbp-0x18]
  40b18c:	mov    QWORD PTR [rax+0x18],0x5c0
  40b194:	mov    rax,QWORD PTR [rbp-0x18]
  40b198:	mov    rax,QWORD PTR [rax+0x18]
  40b19c:	mov    edx,0xb80
  40b1a1:	sub    rdx,rax
  40b1a4:	mov    rax,QWORD PTR [rbp-0x18]
  40b1a8:	mov    QWORD PTR [rax+0x28],rdx
  40b1ac:	mov    rax,QWORD PTR [rbp-0x18]
  40b1b0:	mov    rax,QWORD PTR [rax+0x18]
  40b1b4:	neg    eax
  40b1b6:	mov    edx,eax
  40b1b8:	mov    rax,QWORD PTR [rbp-0x8]
  40b1bc:	mov    DWORD PTR [rax+0xb90],edx
  40b1c2:	mov    eax,0x0
  40b1c7:	jmp    40b216 <flatcc_builder_get_emit_context@@Base+0x3f5>
  40b1c9:	mov    rax,QWORD PTR [rbp-0x18]
  40b1cd:	mov    rax,QWORD PTR [rax+0x8]
  40b1d1:	mov    rdx,rax
  40b1d4:	mov    rax,QWORD PTR [rbp-0x18]
  40b1d8:	mov    QWORD PTR [rax+0x20],rdx
  40b1dc:	mov    rax,QWORD PTR [rbp-0x18]
  40b1e0:	mov    QWORD PTR [rax+0x28],0xb80
  40b1e8:	mov    rax,QWORD PTR [rbp-0x18]
  40b1ec:	mov    rax,QWORD PTR [rax+0x8]
  40b1f0:	mov    rdx,QWORD PTR [rbp-0x18]
  40b1f4:	mov    rdx,QWORD PTR [rdx+0x8]
  40b1f8:	mov    rdx,QWORD PTR [rdx+0xb88]
  40b1ff:	mov    edx,DWORD PTR [rdx+0xb90]
  40b205:	add    edx,0xb80
  40b20b:	mov    DWORD PTR [rax+0xb90],edx
  40b211:	mov    eax,0x0
  40b216:	leave  
  40b217:	ret    
  40b218:	push   rbp
  40b219:	mov    rbp,rsp
  40b21c:	sub    rsp,0x30
  40b220:	mov    QWORD PTR [rbp-0x18],rdi
  40b224:	mov    QWORD PTR [rbp-0x20],rsi
  40b228:	mov    QWORD PTR [rbp-0x28],rdx
  40b22c:	mov    rax,QWORD PTR [rbp-0x28]
  40b230:	add    QWORD PTR [rbp-0x20],rax
  40b234:	jmp    40b2d8 <flatcc_builder_get_emit_context@@Base+0x4b7>
  40b239:	mov    rax,QWORD PTR [rbp-0x28]
  40b23d:	mov    QWORD PTR [rbp-0x8],rax
  40b241:	mov    rax,QWORD PTR [rbp-0x18]
  40b245:	mov    rax,QWORD PTR [rax+0x18]
  40b249:	cmp    rax,QWORD PTR [rbp-0x8]
  40b24d:	jae    40b279 <flatcc_builder_get_emit_context@@Base+0x458>
  40b24f:	mov    rax,QWORD PTR [rbp-0x18]
  40b253:	mov    rax,QWORD PTR [rax+0x18]
  40b257:	mov    QWORD PTR [rbp-0x8],rax
  40b25b:	cmp    QWORD PTR [rbp-0x8],0x0
  40b260:	jne    40b279 <flatcc_builder_get_emit_context@@Base+0x458>
  40b262:	mov    rax,QWORD PTR [rbp-0x18]
  40b266:	mov    rdi,rax
  40b269:	call   40ae33 <flatcc_builder_get_emit_context@@Base+0x12>
  40b26e:	test   eax,eax
  40b270:	je     40b2d8 <flatcc_builder_get_emit_context@@Base+0x4b7>
  40b272:	mov    eax,0xffffffff
  40b277:	jmp    40b2e8 <flatcc_builder_get_emit_context@@Base+0x4c7>
  40b279:	mov    rax,QWORD PTR [rbp-0x18]
  40b27d:	mov    rax,QWORD PTR [rax+0x10]
  40b281:	mov    rdx,QWORD PTR [rbp-0x8]
  40b285:	neg    rdx
  40b288:	add    rdx,rax
  40b28b:	mov    rax,QWORD PTR [rbp-0x18]
  40b28f:	mov    QWORD PTR [rax+0x10],rdx
  40b293:	mov    rax,QWORD PTR [rbp-0x18]
  40b297:	mov    rax,QWORD PTR [rax+0x18]
  40b29b:	sub    rax,QWORD PTR [rbp-0x8]
  40b29f:	mov    rdx,rax
  40b2a2:	mov    rax,QWORD PTR [rbp-0x18]
  40b2a6:	mov    QWORD PTR [rax+0x18],rdx
  40b2aa:	mov    rax,QWORD PTR [rbp-0x8]
  40b2ae:	neg    rax
  40b2b1:	add    QWORD PTR [rbp-0x20],rax
  40b2b5:	mov    rax,QWORD PTR [rbp-0x8]
  40b2b9:	sub    QWORD PTR [rbp-0x28],rax
  40b2bd:	mov    rax,QWORD PTR [rbp-0x18]
  40b2c1:	mov    rax,QWORD PTR [rax+0x10]
  40b2c5:	mov    rdx,QWORD PTR [rbp-0x8]
  40b2c9:	mov    rcx,QWORD PTR [rbp-0x20]
  40b2cd:	mov    rsi,rcx
  40b2d0:	mov    rdi,rax
  40b2d3:	call   4030d0 <memcpy@plt>
  40b2d8:	cmp    QWORD PTR [rbp-0x28],0x0
  40b2dd:	jne    40b239 <flatcc_builder_get_emit_context@@Base+0x418>
  40b2e3:	mov    eax,0x0
  40b2e8:	leave  
  40b2e9:	ret    
  40b2ea:	push   rbp
  40b2eb:	mov    rbp,rsp
  40b2ee:	sub    rsp,0x30
  40b2f2:	mov    QWORD PTR [rbp-0x18],rdi
  40b2f6:	mov    QWORD PTR [rbp-0x20],rsi
  40b2fa:	mov    QWORD PTR [rbp-0x28],rdx
  40b2fe:	jmp    40b39c <flatcc_builder_get_emit_context@@Base+0x57b>
  40b303:	mov    rax,QWORD PTR [rbp-0x28]
  40b307:	mov    QWORD PTR [rbp-0x8],rax
  40b30b:	mov    rax,QWORD PTR [rbp-0x18]
  40b30f:	mov    rax,QWORD PTR [rax+0x28]
  40b313:	cmp    rax,QWORD PTR [rbp-0x8]
  40b317:	jae    40b343 <flatcc_builder_get_emit_context@@Base+0x522>
  40b319:	mov    rax,QWORD PTR [rbp-0x18]
  40b31d:	mov    rax,QWORD PTR [rax+0x28]
  40b321:	mov    QWORD PTR [rbp-0x8],rax
  40b325:	cmp    QWORD PTR [rbp-0x8],0x0
  40b32a:	jne    40b343 <flatcc_builder_get_emit_context@@Base+0x522>
  40b32c:	mov    rax,QWORD PTR [rbp-0x18]
  40b330:	mov    rdi,rax
  40b333:	call   40b037 <flatcc_builder_get_emit_context@@Base+0x216>
  40b338:	test   eax,eax
  40b33a:	je     40b39c <flatcc_builder_get_emit_context@@Base+0x57b>
  40b33c:	mov    eax,0xffffffff
  40b341:	jmp    40b3ac <flatcc_builder_get_emit_context@@Base+0x58b>
  40b343:	mov    rax,QWORD PTR [rbp-0x18]
  40b347:	mov    rax,QWORD PTR [rax+0x20]
  40b34b:	mov    rdx,QWORD PTR [rbp-0x8]
  40b34f:	mov    rcx,QWORD PTR [rbp-0x20]
  40b353:	mov    rsi,rcx
  40b356:	mov    rdi,rax
  40b359:	call   4030d0 <memcpy@plt>
  40b35e:	mov    rax,QWORD PTR [rbp-0x8]
  40b362:	sub    QWORD PTR [rbp-0x28],rax
  40b366:	mov    rax,QWORD PTR [rbp-0x8]
  40b36a:	add    QWORD PTR [rbp-0x20],rax
  40b36e:	mov    rax,QWORD PTR [rbp-0x18]
  40b372:	mov    rdx,QWORD PTR [rax+0x20]
  40b376:	mov    rax,QWORD PTR [rbp-0x8]
  40b37a:	add    rdx,rax
  40b37d:	mov    rax,QWORD PTR [rbp-0x18]
  40b381:	mov    QWORD PTR [rax+0x20],rdx
  40b385:	mov    rax,QWORD PTR [rbp-0x18]
  40b389:	mov    rax,QWORD PTR [rax+0x28]
  40b38d:	sub    rax,QWORD PTR [rbp-0x8]
  40b391:	mov    rdx,rax
  40b394:	mov    rax,QWORD PTR [rbp-0x18]
  40b398:	mov    QWORD PTR [rax+0x28],rdx
  40b39c:	cmp    QWORD PTR [rbp-0x28],0x0
  40b3a1:	jne    40b303 <flatcc_builder_get_emit_context@@Base+0x4e2>
  40b3a7:	mov    eax,0x0
  40b3ac:	leave  
  40b3ad:	ret    

000000000040b3ae <flatcc_emitter_recycle_page@@Base>:
  40b3ae:	push   rbp
  40b3af:	mov    rbp,rsp
  40b3b2:	mov    QWORD PTR [rbp-0x8],rdi
  40b3b6:	mov    QWORD PTR [rbp-0x10],rsi
  40b3ba:	mov    rax,QWORD PTR [rbp-0x8]
  40b3be:	mov    rax,QWORD PTR [rax]
  40b3c1:	cmp    rax,QWORD PTR [rbp-0x10]
  40b3c5:	je     40b3d5 <flatcc_emitter_recycle_page@@Base+0x27>
  40b3c7:	mov    rax,QWORD PTR [rbp-0x8]
  40b3cb:	mov    rax,QWORD PTR [rax+0x8]
  40b3cf:	cmp    rax,QWORD PTR [rbp-0x10]
  40b3d3:	jne    40b3df <flatcc_emitter_recycle_page@@Base+0x31>
  40b3d5:	mov    eax,0xffffffff
  40b3da:	jmp    40b475 <flatcc_emitter_recycle_page@@Base+0xc7>
  40b3df:	mov    rax,QWORD PTR [rbp-0x10]
  40b3e3:	mov    rax,QWORD PTR [rax+0xb80]
  40b3ea:	mov    rdx,QWORD PTR [rbp-0x10]
  40b3ee:	mov    rdx,QWORD PTR [rdx+0xb88]
  40b3f5:	mov    QWORD PTR [rax+0xb88],rdx
  40b3fc:	mov    rax,QWORD PTR [rbp-0x10]
  40b400:	mov    rax,QWORD PTR [rax+0xb88]
  40b407:	mov    rdx,QWORD PTR [rbp-0x10]
  40b40b:	mov    rdx,QWORD PTR [rdx+0xb80]
  40b412:	mov    QWORD PTR [rax+0xb80],rdx
  40b419:	mov    rax,QWORD PTR [rbp-0x8]
  40b41d:	mov    rax,QWORD PTR [rax]
  40b420:	mov    rdx,QWORD PTR [rax+0xb88]
  40b427:	mov    rax,QWORD PTR [rbp-0x10]
  40b42b:	mov    QWORD PTR [rax+0xb88],rdx
  40b432:	mov    rax,QWORD PTR [rbp-0x8]
  40b436:	mov    rdx,QWORD PTR [rax]
  40b439:	mov    rax,QWORD PTR [rbp-0x10]
  40b43d:	mov    QWORD PTR [rax+0xb80],rdx
  40b444:	mov    rax,QWORD PTR [rbp-0x10]
  40b448:	mov    rax,QWORD PTR [rax+0xb88]
  40b44f:	mov    rdx,QWORD PTR [rbp-0x10]
  40b453:	mov    QWORD PTR [rax+0xb80],rdx
  40b45a:	mov    rax,QWORD PTR [rbp-0x10]
  40b45e:	mov    rax,QWORD PTR [rax+0xb80]
  40b465:	mov    rdx,QWORD PTR [rbp-0x10]
  40b469:	mov    QWORD PTR [rax+0xb88],rdx
  40b470:	mov    eax,0x0
  40b475:	pop    rbp
  40b476:	ret    

000000000040b477 <flatcc_emitter_reset@@Base>:
  40b477:	push   rbp
  40b478:	mov    rbp,rsp
  40b47b:	sub    rsp,0x20
  40b47f:	mov    QWORD PTR [rbp-0x18],rdi
  40b483:	mov    rax,QWORD PTR [rbp-0x18]
  40b487:	mov    rax,QWORD PTR [rax]
  40b48a:	mov    QWORD PTR [rbp-0x8],rax
  40b48e:	mov    rax,QWORD PTR [rbp-0x18]
  40b492:	mov    rax,QWORD PTR [rax]
  40b495:	test   rax,rax
  40b498:	je     40b600 <flatcc_emitter_reset@@Base+0x189>
  40b49e:	mov    rax,QWORD PTR [rbp-0x18]
  40b4a2:	mov    rdx,QWORD PTR [rax]
  40b4a5:	mov    rax,QWORD PTR [rbp-0x18]
  40b4a9:	mov    QWORD PTR [rax+0x8],rdx
  40b4ad:	mov    rax,QWORD PTR [rbp-0x18]
  40b4b1:	mov    rax,QWORD PTR [rax]
  40b4b4:	lea    rdx,[rax+0x5c0]
  40b4bb:	mov    rax,QWORD PTR [rbp-0x18]
  40b4bf:	mov    QWORD PTR [rax+0x10],rdx
  40b4c3:	mov    rax,QWORD PTR [rbp-0x18]
  40b4c7:	mov    rdx,QWORD PTR [rax+0x10]
  40b4cb:	mov    rax,QWORD PTR [rbp-0x18]
  40b4cf:	mov    QWORD PTR [rax+0x20],rdx
  40b4d3:	mov    rax,QWORD PTR [rbp-0x18]
  40b4d7:	mov    QWORD PTR [rax+0x18],0x5c0
  40b4df:	mov    rax,QWORD PTR [rbp-0x18]
  40b4e3:	mov    QWORD PTR [rax+0x28],0x5c0
  40b4eb:	mov    rax,QWORD PTR [rbp-0x18]
  40b4ef:	mov    rax,QWORD PTR [rax]
  40b4f2:	mov    rdx,QWORD PTR [rbp-0x18]
  40b4f6:	mov    rdx,QWORD PTR [rdx+0x18]
  40b4fa:	neg    edx
  40b4fc:	mov    DWORD PTR [rax+0xb90],edx
  40b502:	mov    rax,QWORD PTR [rbp-0x18]
  40b506:	mov    rax,QWORD PTR [rax+0x40]
  40b50a:	test   rax,rax
  40b50d:	jne    40b51f <flatcc_emitter_reset@@Base+0xa8>
  40b50f:	mov    rax,QWORD PTR [rbp-0x18]
  40b513:	mov    rdx,QWORD PTR [rax+0x30]
  40b517:	mov    rax,QWORD PTR [rbp-0x18]
  40b51b:	mov    QWORD PTR [rax+0x40],rdx
  40b51f:	mov    rax,QWORD PTR [rbp-0x18]
  40b523:	mov    rdx,QWORD PTR [rax+0x40]
  40b527:	mov    rax,rdx
  40b52a:	add    rax,rax
  40b52d:	add    rax,rdx
  40b530:	shr    rax,0x2
  40b534:	mov    rdx,rax
  40b537:	mov    rax,QWORD PTR [rbp-0x18]
  40b53b:	mov    rax,QWORD PTR [rax+0x30]
  40b53f:	shr    rax,0x2
  40b543:	add    rdx,rax
  40b546:	mov    rax,QWORD PTR [rbp-0x18]
  40b54a:	mov    QWORD PTR [rax+0x40],rdx
  40b54e:	mov    rax,QWORD PTR [rbp-0x18]
  40b552:	mov    QWORD PTR [rax+0x30],0x0
  40b55a:	jmp    40b5c6 <flatcc_emitter_reset@@Base+0x14f>
  40b55c:	mov    rax,QWORD PTR [rbp-0x18]
  40b560:	mov    rax,QWORD PTR [rax+0x8]
  40b564:	mov    rax,QWORD PTR [rax+0xb80]
  40b56b:	mov    QWORD PTR [rbp-0x8],rax
  40b56f:	mov    rax,QWORD PTR [rbp-0x18]
  40b573:	mov    rax,QWORD PTR [rax+0x8]
  40b577:	mov    rdx,QWORD PTR [rbp-0x8]
  40b57b:	mov    rdx,QWORD PTR [rdx+0xb80]
  40b582:	mov    QWORD PTR [rax+0xb80],rdx
  40b589:	mov    rax,QWORD PTR [rbp-0x8]
  40b58d:	mov    rax,QWORD PTR [rax+0xb80]
  40b594:	mov    rdx,QWORD PTR [rbp-0x18]
  40b598:	mov    rdx,QWORD PTR [rdx+0x8]
  40b59c:	mov    QWORD PTR [rax+0xb88],rdx
  40b5a3:	mov    rax,QWORD PTR [rbp-0x8]
  40b5a7:	mov    rdi,rax
  40b5aa:	call   403030 <free@plt>
  40b5af:	mov    rax,QWORD PTR [rbp-0x18]
  40b5b3:	mov    rax,QWORD PTR [rax+0x38]
  40b5b7:	lea    rdx,[rax-0xb80]
  40b5be:	mov    rax,QWORD PTR [rbp-0x18]
  40b5c2:	mov    QWORD PTR [rax+0x38],rdx
  40b5c6:	mov    rax,QWORD PTR [rbp-0x18]
  40b5ca:	mov    rax,QWORD PTR [rax+0x40]
  40b5ce:	lea    rdx,[rax+rax*1]
  40b5d2:	mov    rax,QWORD PTR [rbp-0x18]
  40b5d6:	mov    rax,QWORD PTR [rax+0x38]
  40b5da:	cmp    rdx,rax
  40b5dd:	jae    40b601 <flatcc_emitter_reset@@Base+0x18a>
  40b5df:	mov    rax,QWORD PTR [rbp-0x18]
  40b5e3:	mov    rax,QWORD PTR [rax+0x8]
  40b5e7:	mov    rdx,QWORD PTR [rax+0xb80]
  40b5ee:	mov    rax,QWORD PTR [rbp-0x18]
  40b5f2:	mov    rax,QWORD PTR [rax]
  40b5f5:	cmp    rdx,rax
  40b5f8:	jne    40b55c <flatcc_emitter_reset@@Base+0xe5>
  40b5fe:	jmp    40b601 <flatcc_emitter_reset@@Base+0x18a>
  40b600:	nop
  40b601:	leave  
  40b602:	ret    

000000000040b603 <flatcc_emitter_clear@@Base>:
  40b603:	push   rbp
  40b604:	mov    rbp,rsp
  40b607:	sub    rsp,0x20
  40b60b:	mov    QWORD PTR [rbp-0x18],rdi
  40b60f:	mov    rax,QWORD PTR [rbp-0x18]
  40b613:	mov    rax,QWORD PTR [rax]
  40b616:	mov    QWORD PTR [rbp-0x8],rax
  40b61a:	cmp    QWORD PTR [rbp-0x8],0x0
  40b61f:	je     40b68f <flatcc_emitter_clear@@Base+0x8c>
  40b621:	mov    rax,QWORD PTR [rbp-0x8]
  40b625:	mov    rax,QWORD PTR [rax+0xb88]
  40b62c:	mov    QWORD PTR [rax+0xb80],0x0
  40b637:	jmp    40b65b <flatcc_emitter_clear@@Base+0x58>
  40b639:	mov    rax,QWORD PTR [rbp-0x8]
  40b63d:	mov    rax,QWORD PTR [rax+0xb80]
  40b644:	mov    QWORD PTR [rbp-0x8],rax
  40b648:	mov    rax,QWORD PTR [rbp-0x8]
  40b64c:	mov    rax,QWORD PTR [rax+0xb88]
  40b653:	mov    rdi,rax
  40b656:	call   403030 <free@plt>
  40b65b:	mov    rax,QWORD PTR [rbp-0x8]
  40b65f:	mov    rax,QWORD PTR [rax+0xb80]
  40b666:	test   rax,rax
  40b669:	jne    40b639 <flatcc_emitter_clear@@Base+0x36>
  40b66b:	mov    rax,QWORD PTR [rbp-0x8]
  40b66f:	mov    rdi,rax
  40b672:	call   403030 <free@plt>
  40b677:	mov    rax,QWORD PTR [rbp-0x18]
  40b67b:	mov    edx,0x48
  40b680:	mov    esi,0x0
  40b685:	mov    rdi,rax
  40b688:	call   403090 <memset@plt>
  40b68d:	jmp    40b690 <flatcc_emitter_clear@@Base+0x8d>
  40b68f:	nop
  40b690:	leave  
  40b691:	ret    

000000000040b692 <flatcc_emitter@@Base>:
  40b692:	push   rbp
  40b693:	mov    rbp,rsp
  40b696:	sub    rsp,0x30
  40b69a:	mov    QWORD PTR [rbp-0x18],rdi
  40b69e:	mov    QWORD PTR [rbp-0x20],rsi
  40b6a2:	mov    DWORD PTR [rbp-0x24],edx
  40b6a5:	mov    DWORD PTR [rbp-0x28],ecx
  40b6a8:	mov    QWORD PTR [rbp-0x30],r8
  40b6ac:	mov    rax,QWORD PTR [rbp-0x18]
  40b6b0:	mov    QWORD PTR [rbp-0x8],rax
  40b6b4:	mov    rax,QWORD PTR [rbp-0x8]
  40b6b8:	mov    rdx,QWORD PTR [rax+0x30]
  40b6bc:	mov    rax,QWORD PTR [rbp-0x30]
  40b6c0:	add    rdx,rax
  40b6c3:	mov    rax,QWORD PTR [rbp-0x8]
  40b6c7:	mov    QWORD PTR [rax+0x30],rdx
  40b6cb:	cmp    DWORD PTR [rbp-0x28],0x0
  40b6cf:	jns    40b777 <flatcc_emitter@@Base+0xe5>
  40b6d5:	mov    rax,QWORD PTR [rbp-0x8]
  40b6d9:	mov    rax,QWORD PTR [rax+0x18]
  40b6dd:	cmp    rax,QWORD PTR [rbp-0x30]
  40b6e1:	jb     40b725 <flatcc_emitter@@Base+0x93>
  40b6e3:	mov    rax,QWORD PTR [rbp-0x8]
  40b6e7:	mov    rax,QWORD PTR [rax+0x10]
  40b6eb:	mov    rdx,QWORD PTR [rbp-0x30]
  40b6ef:	neg    rdx
  40b6f2:	add    rdx,rax
  40b6f5:	mov    rax,QWORD PTR [rbp-0x8]
  40b6f9:	mov    QWORD PTR [rax+0x10],rdx
  40b6fd:	mov    rax,QWORD PTR [rbp-0x8]
  40b701:	mov    rax,QWORD PTR [rax+0x18]
  40b705:	sub    rax,QWORD PTR [rbp-0x30]
  40b709:	mov    rdx,rax
  40b70c:	mov    rax,QWORD PTR [rbp-0x8]
  40b710:	mov    QWORD PTR [rax+0x18],rdx
  40b714:	mov    rax,QWORD PTR [rbp-0x8]
  40b718:	mov    rax,QWORD PTR [rax+0x10]
  40b71c:	mov    QWORD PTR [rbp-0x10],rax
  40b720:	jmp    40b803 <flatcc_emitter@@Base+0x171>
  40b725:	mov    eax,DWORD PTR [rbp-0x24]
  40b728:	cdqe   
  40b72a:	shl    rax,0x4
  40b72e:	add    QWORD PTR [rbp-0x20],rax
  40b732:	jmp    40b765 <flatcc_emitter@@Base+0xd3>
  40b734:	sub    QWORD PTR [rbp-0x20],0x10
  40b739:	mov    rax,QWORD PTR [rbp-0x20]
  40b73d:	mov    rdx,QWORD PTR [rax+0x8]
  40b741:	mov    rax,QWORD PTR [rbp-0x20]
  40b745:	mov    rcx,QWORD PTR [rax]
  40b748:	mov    rax,QWORD PTR [rbp-0x8]
  40b74c:	mov    rsi,rcx
  40b74f:	mov    rdi,rax
  40b752:	call   40b218 <flatcc_builder_get_emit_context@@Base+0x3f7>
  40b757:	test   eax,eax
  40b759:	je     40b765 <flatcc_emitter@@Base+0xd3>
  40b75b:	mov    eax,0xffffffff
  40b760:	jmp    40b846 <flatcc_emitter@@Base+0x1b4>
  40b765:	mov    eax,DWORD PTR [rbp-0x24]
  40b768:	lea    edx,[rax-0x1]
  40b76b:	mov    DWORD PTR [rbp-0x24],edx
  40b76e:	test   eax,eax
  40b770:	jne    40b734 <flatcc_emitter@@Base+0xa2>
  40b772:	jmp    40b7fc <flatcc_emitter@@Base+0x16a>
  40b777:	mov    rax,QWORD PTR [rbp-0x8]
  40b77b:	mov    rax,QWORD PTR [rax+0x28]
  40b77f:	cmp    rax,QWORD PTR [rbp-0x30]
  40b783:	jb     40b7ef <flatcc_emitter@@Base+0x15d>
  40b785:	mov    rax,QWORD PTR [rbp-0x8]
  40b789:	mov    rax,QWORD PTR [rax+0x20]
  40b78d:	mov    QWORD PTR [rbp-0x10],rax
  40b791:	mov    rax,QWORD PTR [rbp-0x8]
  40b795:	mov    rdx,QWORD PTR [rax+0x20]
  40b799:	mov    rax,QWORD PTR [rbp-0x30]
  40b79d:	add    rdx,rax
  40b7a0:	mov    rax,QWORD PTR [rbp-0x8]
  40b7a4:	mov    QWORD PTR [rax+0x20],rdx
  40b7a8:	mov    rax,QWORD PTR [rbp-0x8]
  40b7ac:	mov    rax,QWORD PTR [rax+0x28]
  40b7b0:	sub    rax,QWORD PTR [rbp-0x30]
  40b7b4:	mov    rdx,rax
  40b7b7:	mov    rax,QWORD PTR [rbp-0x8]
  40b7bb:	mov    QWORD PTR [rax+0x28],rdx
  40b7bf:	jmp    40b803 <flatcc_emitter@@Base+0x171>
  40b7c1:	mov    rax,QWORD PTR [rbp-0x20]
  40b7c5:	mov    rdx,QWORD PTR [rax+0x8]
  40b7c9:	mov    rax,QWORD PTR [rbp-0x20]
  40b7cd:	mov    rcx,QWORD PTR [rax]
  40b7d0:	mov    rax,QWORD PTR [rbp-0x8]
  40b7d4:	mov    rsi,rcx
  40b7d7:	mov    rdi,rax
  40b7da:	call   40b2ea <flatcc_builder_get_emit_context@@Base+0x4c9>
  40b7df:	test   eax,eax
  40b7e1:	je     40b7ea <flatcc_emitter@@Base+0x158>
  40b7e3:	mov    eax,0xffffffff
  40b7e8:	jmp    40b846 <flatcc_emitter@@Base+0x1b4>
  40b7ea:	add    QWORD PTR [rbp-0x20],0x10
  40b7ef:	mov    eax,DWORD PTR [rbp-0x24]
  40b7f2:	lea    edx,[rax-0x1]
  40b7f5:	mov    DWORD PTR [rbp-0x24],edx
  40b7f8:	test   eax,eax
  40b7fa:	jne    40b7c1 <flatcc_emitter@@Base+0x12f>
  40b7fc:	mov    eax,0x0
  40b801:	jmp    40b846 <flatcc_emitter@@Base+0x1b4>
  40b803:	jmp    40b834 <flatcc_emitter@@Base+0x1a2>
  40b805:	mov    rax,QWORD PTR [rbp-0x20]
  40b809:	mov    rdx,QWORD PTR [rax+0x8]
  40b80d:	mov    rax,QWORD PTR [rbp-0x20]
  40b811:	mov    rcx,QWORD PTR [rax]
  40b814:	mov    rax,QWORD PTR [rbp-0x10]
  40b818:	mov    rsi,rcx
  40b81b:	mov    rdi,rax
  40b81e:	call   4030d0 <memcpy@plt>
  40b823:	mov    rax,QWORD PTR [rbp-0x20]
  40b827:	mov    rax,QWORD PTR [rax+0x8]
  40b82b:	add    QWORD PTR [rbp-0x10],rax
  40b82f:	add    QWORD PTR [rbp-0x20],0x10
  40b834:	mov    eax,DWORD PTR [rbp-0x24]
  40b837:	lea    edx,[rax-0x1]
  40b83a:	mov    DWORD PTR [rbp-0x24],edx
  40b83d:	test   eax,eax
  40b83f:	jne    40b805 <flatcc_emitter@@Base+0x173>
  40b841:	mov    eax,0x0
  40b846:	leave  
  40b847:	ret    

000000000040b848 <flatcc_emitter_copy_buffer@@Base>:
  40b848:	push   rbp
  40b849:	mov    rbp,rsp
  40b84c:	sub    rsp,0x30
  40b850:	mov    QWORD PTR [rbp-0x18],rdi
  40b854:	mov    QWORD PTR [rbp-0x20],rsi
  40b858:	mov    QWORD PTR [rbp-0x28],rdx
  40b85c:	mov    rax,QWORD PTR [rbp-0x18]
  40b860:	mov    rax,QWORD PTR [rax+0x30]
  40b864:	cmp    rax,QWORD PTR [rbp-0x28]
  40b868:	jbe    40b874 <flatcc_emitter_copy_buffer@@Base+0x2c>
  40b86a:	mov    eax,0x0
  40b86f:	jmp    40b978 <flatcc_emitter_copy_buffer@@Base+0x130>
  40b874:	mov    rax,QWORD PTR [rbp-0x18]
  40b878:	mov    rax,QWORD PTR [rax]
  40b87b:	test   rax,rax
  40b87e:	jne    40b88a <flatcc_emitter_copy_buffer@@Base+0x42>
  40b880:	mov    eax,0x0
  40b885:	jmp    40b978 <flatcc_emitter_copy_buffer@@Base+0x130>
  40b88a:	mov    rax,QWORD PTR [rbp-0x18]
  40b88e:	mov    rdx,QWORD PTR [rax]
  40b891:	mov    rax,QWORD PTR [rbp-0x18]
  40b895:	mov    rax,QWORD PTR [rax+0x8]
  40b899:	cmp    rdx,rax
  40b89c:	jne    40b8c6 <flatcc_emitter_copy_buffer@@Base+0x7e>
  40b89e:	mov    rax,QWORD PTR [rbp-0x18]
  40b8a2:	mov    rdx,QWORD PTR [rax+0x30]
  40b8a6:	mov    rax,QWORD PTR [rbp-0x18]
  40b8aa:	mov    rcx,QWORD PTR [rax+0x10]
  40b8ae:	mov    rax,QWORD PTR [rbp-0x20]
  40b8b2:	mov    rsi,rcx
  40b8b5:	mov    rdi,rax
  40b8b8:	call   4030d0 <memcpy@plt>
  40b8bd:	mov    rax,QWORD PTR [rbp-0x20]
  40b8c1:	jmp    40b978 <flatcc_emitter_copy_buffer@@Base+0x130>
  40b8c6:	mov    rax,QWORD PTR [rbp-0x18]
  40b8ca:	mov    rax,QWORD PTR [rax+0x18]
  40b8ce:	mov    edx,0xb80
  40b8d3:	sub    rdx,rax
  40b8d6:	mov    rax,rdx
  40b8d9:	mov    QWORD PTR [rbp-0x8],rax
  40b8dd:	mov    rax,QWORD PTR [rbp-0x18]
  40b8e1:	mov    rcx,QWORD PTR [rax+0x10]
  40b8e5:	mov    rdx,QWORD PTR [rbp-0x8]
  40b8e9:	mov    rax,QWORD PTR [rbp-0x20]
  40b8ed:	mov    rsi,rcx
  40b8f0:	mov    rdi,rax
  40b8f3:	call   4030d0 <memcpy@plt>
  40b8f8:	mov    rax,QWORD PTR [rbp-0x8]
  40b8fc:	add    QWORD PTR [rbp-0x20],rax
  40b900:	mov    rax,QWORD PTR [rbp-0x18]
  40b904:	mov    rax,QWORD PTR [rax]
  40b907:	mov    rax,QWORD PTR [rax+0xb80]
  40b90e:	mov    QWORD PTR [rbp-0x10],rax
  40b912:	jmp    40b943 <flatcc_emitter_copy_buffer@@Base+0xfb>
  40b914:	mov    rcx,QWORD PTR [rbp-0x10]
  40b918:	mov    rax,QWORD PTR [rbp-0x20]
  40b91c:	mov    edx,0xb80
  40b921:	mov    rsi,rcx
  40b924:	mov    rdi,rax
  40b927:	call   4030d0 <memcpy@plt>
  40b92c:	add    QWORD PTR [rbp-0x20],0xb80
  40b934:	mov    rax,QWORD PTR [rbp-0x10]
  40b938:	mov    rax,QWORD PTR [rax+0xb80]
  40b93f:	mov    QWORD PTR [rbp-0x10],rax
  40b943:	mov    rax,QWORD PTR [rbp-0x18]
  40b947:	mov    rax,QWORD PTR [rax+0x8]
  40b94b:	cmp    rax,QWORD PTR [rbp-0x10]
  40b94f:	jne    40b914 <flatcc_emitter_copy_buffer@@Base+0xcc>
  40b951:	mov    rax,QWORD PTR [rbp-0x18]
  40b955:	mov    rax,QWORD PTR [rax+0x28]
  40b959:	mov    edx,0xb80
  40b95e:	sub    rdx,rax
  40b961:	mov    rcx,QWORD PTR [rbp-0x10]
  40b965:	mov    rax,QWORD PTR [rbp-0x20]
  40b969:	mov    rsi,rcx
  40b96c:	mov    rdi,rax
  40b96f:	call   4030d0 <memcpy@plt>
  40b974:	mov    rax,QWORD PTR [rbp-0x20]
  40b978:	leave  
  40b979:	ret    
  40b97a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040b980 <__libc_csu_init@@Base>:
  40b980:	endbr64 
  40b984:	push   r15
  40b986:	lea    r15,[rip+0x547b]        # 410e08 <flatcc_builder_padding_base@@Base+0x4748>
  40b98d:	push   r14
  40b98f:	mov    r14,rdx
  40b992:	push   r13
  40b994:	mov    r13,rsi
  40b997:	push   r12
  40b999:	mov    r12d,edi
  40b99c:	push   rbp
  40b99d:	lea    rbp,[rip+0x546c]        # 410e10 <flatcc_builder_padding_base@@Base+0x4750>
  40b9a4:	push   rbx
  40b9a5:	sub    rbp,r15
  40b9a8:	sub    rsp,0x8
  40b9ac:	call   403000 <free@plt-0x30>
  40b9b1:	sar    rbp,0x3
  40b9b5:	je     40b9d6 <__libc_csu_init@@Base+0x56>
  40b9b7:	xor    ebx,ebx
  40b9b9:	nop    DWORD PTR [rax+0x0]
  40b9c0:	mov    rdx,r14
  40b9c3:	mov    rsi,r13
  40b9c6:	mov    edi,r12d
  40b9c9:	call   QWORD PTR [r15+rbx*8]
  40b9cd:	add    rbx,0x1
  40b9d1:	cmp    rbp,rbx
  40b9d4:	jne    40b9c0 <__libc_csu_init@@Base+0x40>
  40b9d6:	add    rsp,0x8
  40b9da:	pop    rbx
  40b9db:	pop    rbp
  40b9dc:	pop    r12
  40b9de:	pop    r13
  40b9e0:	pop    r14
  40b9e2:	pop    r15
  40b9e4:	ret    
  40b9e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040b9f0 <__libc_csu_fini@@Base>:
  40b9f0:	endbr64 
  40b9f4:	ret    

Disassembly of section .fini:

000000000040b9f8 <.fini>:
  40b9f8:	endbr64 
  40b9fc:	sub    rsp,0x8
  40ba00:	add    rsp,0x8
  40ba04:	ret    
