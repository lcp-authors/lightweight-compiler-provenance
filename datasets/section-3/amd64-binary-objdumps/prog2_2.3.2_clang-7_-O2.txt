
../repos/prog2/2.3.2:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <free@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <free@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <free@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <free@plt-0x10>

0000000000401040 <strcpy@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <strcpy@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <free@plt-0x10>

0000000000401050 <puts@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <puts@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <free@plt-0x10>

0000000000401060 <strlen@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <strlen@GLIBC_2.2.5>
  401066:	push   0x3
  40106b:	jmp    401020 <free@plt-0x10>

0000000000401070 <printf@plt>:
  401070:	jmp    QWORD PTR [rip+0x2fc2]        # 404038 <printf@GLIBC_2.2.5>
  401076:	push   0x4
  40107b:	jmp    401020 <free@plt-0x10>

0000000000401080 <srand@plt>:
  401080:	jmp    QWORD PTR [rip+0x2fba]        # 404040 <srand@GLIBC_2.2.5>
  401086:	push   0x5
  40108b:	jmp    401020 <free@plt-0x10>

0000000000401090 <fgets@plt>:
  401090:	jmp    QWORD PTR [rip+0x2fb2]        # 404048 <fgets@GLIBC_2.2.5>
  401096:	push   0x6
  40109b:	jmp    401020 <free@plt-0x10>

00000000004010a0 <calloc@plt>:
  4010a0:	jmp    QWORD PTR [rip+0x2faa]        # 404050 <calloc@GLIBC_2.2.5>
  4010a6:	push   0x7
  4010ab:	jmp    401020 <free@plt-0x10>

00000000004010b0 <strcmp@plt>:
  4010b0:	jmp    QWORD PTR [rip+0x2fa2]        # 404058 <strcmp@GLIBC_2.2.5>
  4010b6:	push   0x8
  4010bb:	jmp    401020 <free@plt-0x10>

00000000004010c0 <time@plt>:
  4010c0:	jmp    QWORD PTR [rip+0x2f9a]        # 404060 <time@GLIBC_2.2.5>
  4010c6:	push   0x9
  4010cb:	jmp    401020 <free@plt-0x10>

00000000004010d0 <malloc@plt>:
  4010d0:	jmp    QWORD PTR [rip+0x2f92]        # 404068 <malloc@GLIBC_2.2.5>
  4010d6:	push   0xa
  4010db:	jmp    401020 <free@plt-0x10>

00000000004010e0 <realloc@plt>:
  4010e0:	jmp    QWORD PTR [rip+0x2f8a]        # 404070 <realloc@GLIBC_2.2.5>
  4010e6:	push   0xb
  4010eb:	jmp    401020 <free@plt-0x10>

00000000004010f0 <__isoc99_scanf@plt>:
  4010f0:	jmp    QWORD PTR [rip+0x2f82]        # 404078 <__isoc99_scanf@GLIBC_2.7>
  4010f6:	push   0xc
  4010fb:	jmp    401020 <free@plt-0x10>

0000000000401100 <strcat@plt>:
  401100:	jmp    QWORD PTR [rip+0x2f7a]        # 404080 <strcat@GLIBC_2.2.5>
  401106:	push   0xd
  40110b:	jmp    401020 <free@plt-0x10>

0000000000401110 <rand@plt>:
  401110:	jmp    QWORD PTR [rip+0x2f72]        # 404088 <rand@GLIBC_2.2.5>
  401116:	push   0xe
  40111b:	jmp    401020 <free@plt-0x10>

Disassembly of section .text:

0000000000401120 <_start@@Base>:
  401120:	endbr64 
  401124:	xor    ebp,ebp
  401126:	mov    r9,rdx
  401129:	pop    rsi
  40112a:	mov    rdx,rsp
  40112d:	and    rsp,0xfffffffffffffff0
  401131:	push   rax
  401132:	push   rsp
  401133:	mov    r8,0x401b00
  40113a:	mov    rcx,0x401a90
  401141:	mov    rdi,0x4012d0
  401148:	call   QWORD PTR [rip+0x2ea2]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40114e:	hlt    
  40114f:	nop
  401150:	endbr64 
  401154:	ret    
  401155:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40115f:	nop
  401160:	mov    eax,0x4040a0
  401165:	cmp    rax,0x4040a0
  40116b:	je     401180 <_start@@Base+0x60>
  40116d:	mov    eax,0x0
  401172:	test   rax,rax
  401175:	je     401180 <_start@@Base+0x60>
  401177:	mov    edi,0x4040a0
  40117c:	jmp    rax
  40117e:	xchg   ax,ax
  401180:	ret    
  401181:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40118c:	nop    DWORD PTR [rax+0x0]
  401190:	mov    esi,0x4040a0
  401195:	sub    rsi,0x4040a0
  40119c:	mov    rax,rsi
  40119f:	shr    rsi,0x3f
  4011a3:	sar    rax,0x3
  4011a7:	add    rsi,rax
  4011aa:	sar    rsi,1
  4011ad:	je     4011c0 <_start@@Base+0xa0>
  4011af:	mov    eax,0x0
  4011b4:	test   rax,rax
  4011b7:	je     4011c0 <_start@@Base+0xa0>
  4011b9:	mov    edi,0x4040a0
  4011be:	jmp    rax
  4011c0:	ret    
  4011c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4011cc:	nop    DWORD PTR [rax+0x0]
  4011d0:	endbr64 
  4011d4:	cmp    BYTE PTR [rip+0x2ec5],0x0        # 4040a0 <__bss_start@@Base>
  4011db:	jne    4011f0 <_start@@Base+0xd0>
  4011dd:	push   rbp
  4011de:	mov    rbp,rsp
  4011e1:	call   401160 <_start@@Base+0x40>
  4011e6:	mov    BYTE PTR [rip+0x2eb3],0x1        # 4040a0 <__bss_start@@Base>
  4011ed:	pop    rbp
  4011ee:	ret    
  4011ef:	nop
  4011f0:	ret    
  4011f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4011fc:	nop    DWORD PTR [rax+0x0]
  401200:	endbr64 
  401204:	jmp    401190 <_start@@Base+0x70>
  401206:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401210 <imprime@@Base>:
  401210:	push   r14
  401212:	push   rbx
  401213:	push   rax
  401214:	mov    rbx,rdi
  401217:	xor    esi,esi
  401219:	call   4015e0 <vetor_elemento@@Base>
  40121e:	mov    rcx,rax
  401221:	lea    r14,[rip+0xddc]        # 402004 <_IO_stdin_used@@Base+0x4>
  401228:	mov    esi,0x1
  40122d:	xor    eax,eax
  40122f:	mov    rdi,r14
  401232:	mov    rdx,rcx
  401235:	call   401070 <printf@plt>
  40123a:	mov    esi,0x1
  40123f:	mov    rdi,rbx
  401242:	call   4015e0 <vetor_elemento@@Base>
  401247:	mov    rcx,rax
  40124a:	mov    esi,0x2
  40124f:	xor    eax,eax
  401251:	mov    rdi,r14
  401254:	mov    rdx,rcx
  401257:	call   401070 <printf@plt>
  40125c:	mov    esi,0x2
  401261:	mov    rdi,rbx
  401264:	call   4015e0 <vetor_elemento@@Base>
  401269:	mov    rcx,rax
  40126c:	mov    esi,0x3
  401271:	xor    eax,eax
  401273:	mov    rdi,r14
  401276:	mov    rdx,rcx
  401279:	call   401070 <printf@plt>
  40127e:	mov    esi,0x3
  401283:	mov    rdi,rbx
  401286:	call   4015e0 <vetor_elemento@@Base>
  40128b:	mov    rcx,rax
  40128e:	mov    esi,0x4
  401293:	xor    eax,eax
  401295:	mov    rdi,r14
  401298:	mov    rdx,rcx
  40129b:	call   401070 <printf@plt>
  4012a0:	mov    esi,0x4
  4012a5:	mov    rdi,rbx
  4012a8:	call   4015e0 <vetor_elemento@@Base>
  4012ad:	mov    rcx,rax
  4012b0:	mov    esi,0x5
  4012b5:	xor    eax,eax
  4012b7:	mov    rdi,r14
  4012ba:	mov    rdx,rcx
  4012bd:	add    rsp,0x8
  4012c1:	pop    rbx
  4012c2:	pop    r14
  4012c4:	jmp    401070 <printf@plt>
  4012c9:	nop    DWORD PTR [rax+0x0]

00000000004012d0 <main@@Base>:
  4012d0:	push   r15
  4012d2:	push   r14
  4012d4:	push   r12
  4012d6:	push   rbx
  4012d7:	sub    rsp,0x68
  4012db:	xor    eax,eax
  4012dd:	call   4014c0 <vetor_novo@@Base>
  4012e2:	mov    r14,rax
  4012e5:	lea    r15,[rip+0xd35]        # 402021 <_IO_stdin_used@@Base+0x21>
  4012ec:	mov    esi,0x1
  4012f1:	xor    eax,eax
  4012f3:	mov    rdi,r15
  4012f6:	call   401070 <printf@plt>
  4012fb:	mov    r12,QWORD PTR [rip+0x2ce6]        # 403fe8 <stdin@GLIBC_2.2.5>
  401302:	mov    rdx,QWORD PTR [r12]
  401306:	mov    rbx,rsp
  401309:	mov    esi,0x64
  40130e:	mov    rdi,rbx
  401311:	call   401090 <fgets@plt>
  401316:	mov    rdi,rbx
  401319:	call   401060 <strlen@plt>
  40131e:	mov    BYTE PTR [rsp+rax*1-0x1],0x0
  401323:	xor    edx,edx
  401325:	mov    rdi,r14
  401328:	mov    rsi,rbx
  40132b:	call   401600 <vetor_insere@@Base>
  401330:	mov    esi,0x2
  401335:	xor    eax,eax
  401337:	mov    rdi,r15
  40133a:	call   401070 <printf@plt>
  40133f:	mov    rdx,QWORD PTR [r12]
  401343:	mov    esi,0x64
  401348:	mov    rdi,rbx
  40134b:	call   401090 <fgets@plt>
  401350:	mov    rdi,rbx
  401353:	call   401060 <strlen@plt>
  401358:	mov    BYTE PTR [rsp+rax*1-0x1],0x0
  40135d:	mov    edx,0x1
  401362:	mov    rdi,r14
  401365:	mov    rsi,rbx
  401368:	call   401600 <vetor_insere@@Base>
  40136d:	mov    esi,0x3
  401372:	xor    eax,eax
  401374:	mov    rdi,r15
  401377:	call   401070 <printf@plt>
  40137c:	mov    rdx,QWORD PTR [r12]
  401380:	mov    esi,0x64
  401385:	mov    rdi,rbx
  401388:	call   401090 <fgets@plt>
  40138d:	mov    rdi,rbx
  401390:	call   401060 <strlen@plt>
  401395:	mov    BYTE PTR [rsp+rax*1-0x1],0x0
  40139a:	mov    edx,0x2
  40139f:	mov    rdi,r14
  4013a2:	mov    rsi,rbx
  4013a5:	call   401600 <vetor_insere@@Base>
  4013aa:	mov    esi,0x4
  4013af:	xor    eax,eax
  4013b1:	mov    rdi,r15
  4013b4:	call   401070 <printf@plt>
  4013b9:	mov    rdx,QWORD PTR [r12]
  4013bd:	mov    esi,0x64
  4013c2:	mov    rdi,rbx
  4013c5:	call   401090 <fgets@plt>
  4013ca:	mov    rdi,rbx
  4013cd:	call   401060 <strlen@plt>
  4013d2:	mov    BYTE PTR [rsp+rax*1-0x1],0x0
  4013d7:	mov    edx,0x3
  4013dc:	mov    rdi,r14
  4013df:	mov    rsi,rbx
  4013e2:	call   401600 <vetor_insere@@Base>
  4013e7:	mov    esi,0x5
  4013ec:	xor    eax,eax
  4013ee:	mov    rdi,r15
  4013f1:	call   401070 <printf@plt>
  4013f6:	mov    rdx,QWORD PTR [r12]
  4013fa:	mov    esi,0x64
  4013ff:	mov    rdi,rbx
  401402:	call   401090 <fgets@plt>
  401407:	mov    rdi,rbx
  40140a:	call   401060 <strlen@plt>
  40140f:	mov    BYTE PTR [rsp+rax*1-0x1],0x0
  401414:	mov    edx,0x4
  401419:	mov    rdi,r14
  40141c:	mov    rsi,rbx
  40141f:	call   401600 <vetor_insere@@Base>
  401424:	mov    rdi,r14
  401427:	call   401210 <imprime@@Base>
  40142c:	lea    rdi,[rip+0xc01]        # 402034 <_IO_stdin_used@@Base+0x34>
  401433:	xor    eax,eax
  401435:	call   401070 <printf@plt>
  40143a:	lea    rdi,[rip+0xc13]        # 402054 <_IO_stdin_used@@Base+0x54>
  401441:	xor    eax,eax
  401443:	mov    rsi,rbx
  401446:	call   4010f0 <__isoc99_scanf@plt>
  40144b:	mov    rdi,r14
  40144e:	mov    rsi,rbx
  401451:	call   4017f0 <vetor_pesquisa@@Base>
  401456:	mov    rdi,r14
  401459:	mov    esi,eax
  40145b:	call   401780 <vetor_remove@@Base>
  401460:	test   eax,eax
  401462:	je     401472 <main@@Base+0x1a2>
  401464:	lea    rdi,[rip+0xc25]        # 402090 <_IO_stdin_used@@Base+0x90>
  40146b:	call   401050 <puts@plt>
  401470:	jmp    40147a <main@@Base+0x1aa>
  401472:	mov    rdi,r14
  401475:	call   401210 <imprime@@Base>
  40147a:	mov    rdi,r14
  40147d:	call   401850 <vetor_ordena@@Base>
  401482:	test   eax,eax
  401484:	je     401494 <main@@Base+0x1c4>
  401486:	lea    rdi,[rip+0xbca]        # 402057 <_IO_stdin_used@@Base+0x57>
  40148d:	xor    eax,eax
  40148f:	call   401070 <printf@plt>
  401494:	lea    rdi,[rip+0xbde]        # 402079 <_IO_stdin_used@@Base+0x79>
  40149b:	call   401050 <puts@plt>
  4014a0:	mov    rdi,r14
  4014a3:	call   401210 <imprime@@Base>
  4014a8:	mov    rdi,r14
  4014ab:	call   4014e0 <vetor_apaga@@Base>
  4014b0:	xor    eax,eax
  4014b2:	add    rsp,0x68
  4014b6:	pop    rbx
  4014b7:	pop    r12
  4014b9:	pop    r14
  4014bb:	pop    r15
  4014bd:	ret    
  4014be:	xchg   ax,ax

00000000004014c0 <vetor_novo@@Base>:
  4014c0:	push   rax
  4014c1:	mov    edi,0x10
  4014c6:	call   4010d0 <malloc@plt>
  4014cb:	test   rax,rax
  4014ce:	je     4014da <vetor_novo@@Base+0x1a>
  4014d0:	vxorps xmm0,xmm0,xmm0
  4014d4:	vmovups XMMWORD PTR [rax],xmm0
  4014d8:	pop    rcx
  4014d9:	ret    
  4014da:	xor    eax,eax
  4014dc:	pop    rcx
  4014dd:	ret    
  4014de:	xchg   ax,ax

00000000004014e0 <vetor_apaga@@Base>:
  4014e0:	test   rdi,rdi
  4014e3:	je     40152d <vetor_apaga@@Base+0x4d>
  4014e5:	push   r14
  4014e7:	push   rbx
  4014e8:	push   rax
  4014e9:	mov    r14,rdi
  4014ec:	cmp    DWORD PTR [rdi],0x0
  4014ef:	mov    rdi,QWORD PTR [rdi+0x8]
  4014f3:	jle    401519 <vetor_apaga@@Base+0x39>
  4014f5:	xor    ebx,ebx
  4014f7:	nop    WORD PTR [rax+rax*1+0x0]
  401500:	mov    rdi,QWORD PTR [rdi+rbx*8]
  401504:	call   401030 <free@plt>
  401509:	add    rbx,0x1
  40150d:	movsxd rax,DWORD PTR [r14]
  401510:	mov    rdi,QWORD PTR [r14+0x8]
  401514:	cmp    rbx,rax
  401517:	jl     401500 <vetor_apaga@@Base+0x20>
  401519:	call   401030 <free@plt>
  40151e:	mov    rdi,r14
  401521:	add    rsp,0x8
  401525:	pop    rbx
  401526:	pop    r14
  401528:	jmp    401030 <free@plt>
  40152d:	ret    
  40152e:	xchg   ax,ax

0000000000401530 <vetor_atribui@@Base>:
  401530:	push   rbp
  401531:	push   r15
  401533:	push   r14
  401535:	push   r13
  401537:	push   r12
  401539:	push   rbx
  40153a:	sub    rsp,0x18
  40153e:	mov    r15d,0xffffffff
  401544:	test   rdi,rdi
  401547:	je     4015bd <vetor_atribui@@Base+0x8d>
  401549:	mov    ebx,esi
  40154b:	test   esi,esi
  40154d:	js     4015bd <vetor_atribui@@Base+0x8d>
  40154f:	mov    rbp,rdi
  401552:	cmp    DWORD PTR [rdi],ebx
  401554:	jle    4015bd <vetor_atribui@@Base+0x8d>
  401556:	mov    r14,rdx
  401559:	mov    rdi,rdx
  40155c:	call   401060 <strlen@plt>
  401561:	mov    r13,rax
  401564:	mov    eax,r13d
  401567:	mov    QWORD PTR [rsp+0x10],rax
  40156c:	mov    rax,QWORD PTR [rbp+0x8]
  401570:	movsxd rcx,ebx
  401573:	mov    QWORD PTR [rsp+0x8],rcx
  401578:	mov    r12,QWORD PTR [rax+rcx*8]
  40157c:	mov    rdi,r12
  40157f:	call   401060 <strlen@plt>
  401584:	cmp    QWORD PTR [rsp+0x10],rax
  401589:	jbe    4015af <vetor_atribui@@Base+0x7f>
  40158b:	add    r13d,0x1
  40158f:	mov    rdi,r12
  401592:	mov    rsi,r13
  401595:	call   4010e0 <realloc@plt>
  40159a:	mov    r12,rax
  40159d:	mov    rax,QWORD PTR [rbp+0x8]
  4015a1:	mov    rcx,QWORD PTR [rsp+0x8]
  4015a6:	mov    QWORD PTR [rax+rcx*8],r12
  4015aa:	test   r12,r12
  4015ad:	je     4015bd <vetor_atribui@@Base+0x8d>
  4015af:	mov    rdi,r12
  4015b2:	mov    rsi,r14
  4015b5:	call   401040 <strcpy@plt>
  4015ba:	mov    r15d,ebx
  4015bd:	mov    eax,r15d
  4015c0:	add    rsp,0x18
  4015c4:	pop    rbx
  4015c5:	pop    r12
  4015c7:	pop    r13
  4015c9:	pop    r14
  4015cb:	pop    r15
  4015cd:	pop    rbp
  4015ce:	ret    
  4015cf:	nop

00000000004015d0 <vetor_tamanho@@Base>:
  4015d0:	test   rdi,rdi
  4015d3:	je     4015d8 <vetor_tamanho@@Base+0x8>
  4015d5:	mov    eax,DWORD PTR [rdi]
  4015d7:	ret    
  4015d8:	mov    eax,0xffffffff
  4015dd:	ret    
  4015de:	xchg   ax,ax

00000000004015e0 <vetor_elemento@@Base>:
  4015e0:	xor    eax,eax
  4015e2:	test   rdi,rdi
  4015e5:	je     4015fa <vetor_elemento@@Base+0x1a>
  4015e7:	test   esi,esi
  4015e9:	js     4015fa <vetor_elemento@@Base+0x1a>
  4015eb:	cmp    DWORD PTR [rdi],esi
  4015ed:	jle    4015fb <vetor_elemento@@Base+0x1b>
  4015ef:	mov    rax,QWORD PTR [rdi+0x8]
  4015f3:	movsxd rcx,esi
  4015f6:	mov    rax,QWORD PTR [rax+rcx*8]
  4015fa:	ret    
  4015fb:	xor    eax,eax
  4015fd:	ret    
  4015fe:	xchg   ax,ax

0000000000401600 <vetor_insere@@Base>:
  401600:	push   rbp
  401601:	push   r15
  401603:	push   r14
  401605:	push   r12
  401607:	push   rbx
  401608:	mov    r14d,0xffffffff
  40160e:	test   rdi,rdi
  401611:	je     401771 <vetor_insere@@Base+0x171>
  401617:	mov    r12d,edx
  40161a:	test   edx,edx
  40161c:	js     401771 <vetor_insere@@Base+0x171>
  401622:	mov    rbx,rdi
  401625:	mov    eax,DWORD PTR [rdi]
  401627:	cmp    eax,r12d
  40162a:	jl     401771 <vetor_insere@@Base+0x171>
  401630:	mov    r15,rsi
  401633:	cmp    eax,DWORD PTR [rbx+0x4]
  401636:	jne    401667 <vetor_insere@@Base+0x67>
  401638:	lea    ecx,[rax+rax*1]
  40163b:	test   eax,eax
  40163d:	mov    eax,0x1
  401642:	cmovne eax,ecx
  401645:	mov    DWORD PTR [rbx+0x4],eax
  401648:	mov    rdi,QWORD PTR [rbx+0x8]
  40164c:	movsxd rsi,eax
  40164f:	shl    rsi,0x3
  401653:	call   4010e0 <realloc@plt>
  401658:	mov    QWORD PTR [rbx+0x8],rax
  40165c:	test   rax,rax
  40165f:	je     401771 <vetor_insere@@Base+0x171>
  401665:	mov    eax,DWORD PTR [rbx]
  401667:	mov    ecx,eax
  401669:	sub    ecx,r12d
  40166c:	jle    40173a <vetor_insere@@Base+0x13a>
  401672:	cdqe   
  401674:	movsxd rbp,r12d
  401677:	mov    rdx,rbp
  40167a:	not    rdx
  40167d:	add    rdx,rax
  401680:	and    rcx,0x7
  401684:	je     4016a7 <vetor_insere@@Base+0xa7>
  401686:	neg    rcx
  401689:	nop    DWORD PTR [rax+0x0]
  401690:	mov    rsi,QWORD PTR [rbx+0x8]
  401694:	mov    rdi,QWORD PTR [rsi+rax*8-0x8]
  401699:	mov    QWORD PTR [rsi+rax*8],rdi
  40169d:	lea    rax,[rax-0x1]
  4016a1:	add    rcx,0x1
  4016a5:	jne    401690 <vetor_insere@@Base+0x90>
  4016a7:	cmp    rdx,0x7
  4016ab:	jb     40173d <vetor_insere@@Base+0x13d>
  4016b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4016c0:	mov    rcx,QWORD PTR [rbx+0x8]
  4016c4:	mov    rdx,QWORD PTR [rcx+rax*8-0x8]
  4016c9:	mov    QWORD PTR [rcx+rax*8],rdx
  4016cd:	mov    rcx,QWORD PTR [rbx+0x8]
  4016d1:	mov    rdx,QWORD PTR [rcx+rax*8-0x10]
  4016d6:	mov    QWORD PTR [rcx+rax*8-0x8],rdx
  4016db:	mov    rcx,QWORD PTR [rbx+0x8]
  4016df:	mov    rdx,QWORD PTR [rcx+rax*8-0x18]
  4016e4:	mov    QWORD PTR [rcx+rax*8-0x10],rdx
  4016e9:	mov    rcx,QWORD PTR [rbx+0x8]
  4016ed:	mov    rdx,QWORD PTR [rcx+rax*8-0x20]
  4016f2:	mov    QWORD PTR [rcx+rax*8-0x18],rdx
  4016f7:	mov    rcx,QWORD PTR [rbx+0x8]
  4016fb:	mov    rdx,QWORD PTR [rcx+rax*8-0x28]
  401700:	mov    QWORD PTR [rcx+rax*8-0x20],rdx
  401705:	mov    rcx,QWORD PTR [rbx+0x8]
  401709:	mov    rdx,QWORD PTR [rcx+rax*8-0x30]
  40170e:	mov    QWORD PTR [rcx+rax*8-0x28],rdx
  401713:	mov    rcx,QWORD PTR [rbx+0x8]
  401717:	mov    rdx,QWORD PTR [rcx+rax*8-0x38]
  40171c:	mov    QWORD PTR [rcx+rax*8-0x30],rdx
  401721:	mov    rcx,QWORD PTR [rbx+0x8]
  401725:	mov    rdx,QWORD PTR [rcx+rax*8-0x40]
  40172a:	mov    QWORD PTR [rcx+rax*8-0x38],rdx
  40172f:	lea    rax,[rax-0x8]
  401733:	cmp    rax,rbp
  401736:	jg     4016c0 <vetor_insere@@Base+0xc0>
  401738:	jmp    40173d <vetor_insere@@Base+0x13d>
  40173a:	movsxd rbp,r12d
  40173d:	mov    rdi,r15
  401740:	call   401060 <strlen@plt>
  401745:	lea    rdi,[rax+0x1]
  401749:	mov    esi,0x1
  40174e:	call   4010a0 <calloc@plt>
  401753:	mov    rcx,QWORD PTR [rbx+0x8]
  401757:	mov    QWORD PTR [rcx+rbp*8],rax
  40175b:	test   rax,rax
  40175e:	je     401771 <vetor_insere@@Base+0x171>
  401760:	mov    rdi,rax
  401763:	mov    rsi,r15
  401766:	call   401040 <strcpy@plt>
  40176b:	add    DWORD PTR [rbx],0x1
  40176e:	mov    r14d,r12d
  401771:	mov    eax,r14d
  401774:	pop    rbx
  401775:	pop    r12
  401777:	pop    r14
  401779:	pop    r15
  40177b:	pop    rbp
  40177c:	ret    
  40177d:	nop    DWORD PTR [rax]

0000000000401780 <vetor_remove@@Base>:
  401780:	push   r15
  401782:	push   r14
  401784:	push   rbx
  401785:	mov    eax,0xffffffff
  40178a:	test   rdi,rdi
  40178d:	je     4017e3 <vetor_remove@@Base+0x63>
  40178f:	mov    ebx,esi
  401791:	test   esi,esi
  401793:	js     4017e3 <vetor_remove@@Base+0x63>
  401795:	mov    r14,rdi
  401798:	cmp    DWORD PTR [rdi],ebx
  40179a:	jle    4017e3 <vetor_remove@@Base+0x63>
  40179c:	mov    rax,QWORD PTR [r14+0x8]
  4017a0:	movsxd r15,ebx
  4017a3:	mov    rdi,QWORD PTR [rax+r15*8]
  4017a7:	call   401030 <free@plt>
  4017ac:	lea    ecx,[rbx+0x1]
  4017af:	movsxd rax,DWORD PTR [r14]
  4017b2:	cmp    ecx,eax
  4017b4:	jge    4017db <vetor_remove@@Base+0x5b>
  4017b6:	add    r15,0x1
  4017ba:	nop    WORD PTR [rax+rax*1+0x0]
  4017c0:	mov    rcx,QWORD PTR [r14+0x8]
  4017c4:	movsxd rbx,ebx
  4017c7:	mov    rdx,QWORD PTR [rcx+r15*8]
  4017cb:	mov    QWORD PTR [rcx+rbx*8],rdx
  4017cf:	add    r15,0x1
  4017d3:	add    ebx,0x1
  4017d6:	cmp    r15,rax
  4017d9:	jl     4017c0 <vetor_remove@@Base+0x40>
  4017db:	add    eax,0xffffffff
  4017de:	mov    DWORD PTR [r14],eax
  4017e1:	xor    eax,eax
  4017e3:	pop    rbx
  4017e4:	pop    r14
  4017e6:	pop    r15
  4017e8:	ret    
  4017e9:	nop    DWORD PTR [rax+0x0]

00000000004017f0 <vetor_pesquisa@@Base>:
  4017f0:	push   rbp
  4017f1:	push   r15
  4017f3:	push   r14
  4017f5:	push   r12
  4017f7:	push   rbx
  4017f8:	mov    r14d,0xffffffff
  4017fe:	test   rdi,rdi
  401801:	je     40183e <vetor_pesquisa@@Base+0x4e>
  401803:	movsxd rbp,DWORD PTR [rdi]
  401806:	test   rbp,rbp
  401809:	jle    40183e <vetor_pesquisa@@Base+0x4e>
  40180b:	mov    r15,rsi
  40180e:	mov    r12,QWORD PTR [rdi+0x8]
  401812:	xor    ebx,ebx
  401814:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40181e:	xchg   ax,ax
  401820:	mov    rdi,QWORD PTR [r12+rbx*8]
  401824:	mov    rsi,r15
  401827:	call   4010b0 <strcmp@plt>
  40182c:	test   eax,eax
  40182e:	je     40183b <vetor_pesquisa@@Base+0x4b>
  401830:	add    rbx,0x1
  401834:	cmp    rbx,rbp
  401837:	jl     401820 <vetor_pesquisa@@Base+0x30>
  401839:	jmp    40183e <vetor_pesquisa@@Base+0x4e>
  40183b:	mov    r14d,ebx
  40183e:	mov    eax,r14d
  401841:	pop    rbx
  401842:	pop    r12
  401844:	pop    r14
  401846:	pop    r15
  401848:	pop    rbp
  401849:	ret    
  40184a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000401850 <vetor_ordena@@Base>:
  401850:	push   rbp
  401851:	push   r15
  401853:	push   r14
  401855:	push   r13
  401857:	push   r12
  401859:	push   rbx
  40185a:	push   rax
  40185b:	test   rdi,rdi
  40185e:	je     401908 <vetor_ordena@@Base+0xb8>
  401864:	mov    r15,rdi
  401867:	movsxd rcx,DWORD PTR [rdi]
  40186a:	xor    eax,eax
  40186c:	mov    QWORD PTR [rsp],rcx
  401870:	cmp    rcx,0x2
  401874:	jl     40190d <vetor_ordena@@Base+0xbd>
  40187a:	mov    r14,QWORD PTR [r15+0x8]
  40187e:	mov    r12d,0x1
  401884:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40188e:	xchg   ax,ax
  401890:	mov    rbx,QWORD PTR [r14+r12*8-0x8]
  401895:	mov    rbp,QWORD PTR [r14+r12*8]
  401899:	mov    rdi,rbp
  40189c:	mov    rsi,rbx
  40189f:	call   4010b0 <strcmp@plt>
  4018a4:	test   eax,eax
  4018a6:	jns    4018f0 <vetor_ordena@@Base+0xa0>
  4018a8:	lea    r13,[r12-0x1]
  4018ad:	nop    DWORD PTR [rax]
  4018b0:	lea    rax,[r13+0x1]
  4018b4:	mov    QWORD PTR [r14+r13*8+0x8],rbx
  4018b9:	mov    r14,QWORD PTR [r15+0x8]
  4018bd:	cmp    rax,0x2
  4018c1:	jl     4018f3 <vetor_ordena@@Base+0xa3>
  4018c3:	mov    rbx,QWORD PTR [r14+r13*8-0x8]
  4018c8:	add    r13,0xffffffffffffffff
  4018cc:	mov    rdi,rbp
  4018cf:	mov    rsi,rbx
  4018d2:	call   4010b0 <strcmp@plt>
  4018d7:	test   eax,eax
  4018d9:	js     4018b0 <vetor_ordena@@Base+0x60>
  4018db:	add    r13,0x1
  4018df:	jmp    4018f3 <vetor_ordena@@Base+0xa3>
  4018e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4018eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4018f0:	mov    r13,r12
  4018f3:	movsxd rax,r13d
  4018f6:	mov    QWORD PTR [r14+rax*8],rbp
  4018fa:	add    r12,0x1
  4018fe:	cmp    r12,QWORD PTR [rsp]
  401902:	jl     401890 <vetor_ordena@@Base+0x40>
  401904:	xor    eax,eax
  401906:	jmp    40190d <vetor_ordena@@Base+0xbd>
  401908:	mov    eax,0xffffffff
  40190d:	add    rsp,0x8
  401911:	pop    rbx
  401912:	pop    r12
  401914:	pop    r13
  401916:	pop    r14
  401918:	pop    r15
  40191a:	pop    rbp
  40191b:	ret    
  40191c:	nop    DWORD PTR [rax+0x0]

0000000000401920 <vetor_concatena@@Base>:
  401920:	push   r15
  401922:	push   r14
  401924:	push   rbx
  401925:	xor    ebx,ebx
  401927:	test   rdi,rdi
  40192a:	je     401991 <vetor_concatena@@Base+0x71>
  40192c:	mov    r14,rsi
  40192f:	test   rsi,rsi
  401932:	je     401991 <vetor_concatena@@Base+0x71>
  401934:	mov    r15,rdi
  401937:	mov    edi,0x10
  40193c:	call   4010d0 <malloc@plt>
  401941:	test   rax,rax
  401944:	je     401953 <vetor_concatena@@Base+0x33>
  401946:	mov    rbx,rax
  401949:	vxorps xmm0,xmm0,xmm0
  40194d:	vmovups XMMWORD PTR [rax],xmm0
  401951:	jmp    401955 <vetor_concatena@@Base+0x35>
  401953:	xor    ebx,ebx
  401955:	movsxd rax,DWORD PTR [r15]
  401958:	movsxd rcx,DWORD PTR [r14]
  40195b:	lea    rdx,[rax+rcx*8]
  40195f:	mov    QWORD PTR [rbx+0x8],rdx
  401963:	mov    edx,DWORD PTR [r14+0x4]
  401967:	add    edx,DWORD PTR [r15+0x4]
  40196b:	mov    DWORD PTR [rbx+0x4],edx
  40196e:	mov    rdi,QWORD PTR [rax+rcx*8]
  401972:	mov    rax,QWORD PTR [r15+0x8]
  401976:	mov    rsi,QWORD PTR [rax]
  401979:	call   401040 <strcpy@plt>
  40197e:	mov    rax,QWORD PTR [rbx+0x8]
  401982:	mov    rdi,QWORD PTR [rax]
  401985:	mov    rax,QWORD PTR [r14+0x8]
  401989:	mov    rsi,QWORD PTR [rax]
  40198c:	call   401100 <strcat@plt>
  401991:	mov    rax,rbx
  401994:	pop    rbx
  401995:	pop    r14
  401997:	pop    r15
  401999:	ret    
  40199a:	nop    WORD PTR [rax+rax*1+0x0]

00000000004019a0 <vetor_inverte@@Base>:
  4019a0:	test   rdi,rdi
  4019a3:	je     4019ee <vetor_inverte@@Base+0x4e>
  4019a5:	movsxd r8,DWORD PTR [rdi]
  4019a8:	test   r8,r8
  4019ab:	jle    4019ee <vetor_inverte@@Base+0x4e>
  4019ad:	lea    rcx,[r8-0x1]
  4019b1:	mov    edx,0x1
  4019b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4019c0:	mov    rsi,QWORD PTR [rdi+0x8]
  4019c4:	mov    r9,QWORD PTR [rsi+rdx*8-0x8]
  4019c9:	mov    rax,QWORD PTR [rsi+rcx*8+0x8]
  4019ce:	mov    QWORD PTR [rsi+rdx*8-0x8],rax
  4019d3:	mov    rax,QWORD PTR [rdi+0x8]
  4019d7:	mov    QWORD PTR [rax+rcx*8+0x8],r9
  4019dc:	cmp    rdx,r8
  4019df:	jge    4019ee <vetor_inverte@@Base+0x4e>
  4019e1:	cmp    rdx,rcx
  4019e4:	lea    rdx,[rdx+0x1]
  4019e8:	lea    rcx,[rcx-0x1]
  4019ec:	jl     4019c0 <vetor_inverte@@Base+0x20>
  4019ee:	xor    eax,eax
  4019f0:	ret    
  4019f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4019fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401a00 <vetor_baralha@@Base>:
  401a00:	push   rbp
  401a01:	push   r15
  401a03:	push   r14
  401a05:	push   rbx
  401a06:	push   rax
  401a07:	mov    r14d,DWORD PTR [rdi]
  401a0a:	mov    edi,0x10
  401a0f:	call   4010d0 <malloc@plt>
  401a14:	test   rax,rax
  401a17:	je     401a26 <vetor_baralha@@Base+0x26>
  401a19:	mov    r15,rax
  401a1c:	vxorps xmm0,xmm0,xmm0
  401a20:	vmovups XMMWORD PTR [rax],xmm0
  401a24:	jmp    401a29 <vetor_baralha@@Base+0x29>
  401a26:	xor    r15d,r15d
  401a29:	mov    rdi,rsp
  401a2c:	call   4010c0 <time@plt>
  401a31:	mov    edi,eax
  401a33:	call   401080 <srand@plt>
  401a38:	test   r14d,r14d
  401a3b:	jle    401a78 <vetor_baralha@@Base+0x78>
  401a3d:	lea    ebp,[r14+0x1]
  401a41:	xor    ebx,ebx
  401a43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a4d:	nop    DWORD PTR [rax]
  401a50:	call   401110 <rand@plt>
  401a55:	cdq    
  401a56:	idiv   ebp
  401a58:	mov    rax,QWORD PTR [r15+0x8]
  401a5c:	mov    rcx,QWORD PTR [rax+rbx*8]
  401a60:	movsxd rdx,edx
  401a63:	mov    rsi,QWORD PTR [rax+rdx*8]
  401a67:	mov    QWORD PTR [rax+rbx*8],rsi
  401a6b:	mov    QWORD PTR [rax+rdx*8],rcx
  401a6f:	add    rbx,0x1
  401a73:	cmp    r14,rbx
  401a76:	jne    401a50 <vetor_baralha@@Base+0x50>
  401a78:	mov    rax,r15
  401a7b:	add    rsp,0x8
  401a7f:	pop    rbx
  401a80:	pop    r14
  401a82:	pop    r15
  401a84:	pop    rbp
  401a85:	ret    
  401a86:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401a90 <__libc_csu_init@@Base>:
  401a90:	endbr64 
  401a94:	push   r15
  401a96:	lea    r15,[rip+0x235b]        # 403df8 <_IO_stdin_used@@Base+0x1df8>
  401a9d:	push   r14
  401a9f:	mov    r14,rdx
  401aa2:	push   r13
  401aa4:	mov    r13,rsi
  401aa7:	push   r12
  401aa9:	mov    r12d,edi
  401aac:	push   rbp
  401aad:	lea    rbp,[rip+0x234c]        # 403e00 <_IO_stdin_used@@Base+0x1e00>
  401ab4:	push   rbx
  401ab5:	sub    rbp,r15
  401ab8:	sub    rsp,0x8
  401abc:	call   401000 <free@plt-0x30>
  401ac1:	sar    rbp,0x3
  401ac5:	je     401ae6 <__libc_csu_init@@Base+0x56>
  401ac7:	xor    ebx,ebx
  401ac9:	nop    DWORD PTR [rax+0x0]
  401ad0:	mov    rdx,r14
  401ad3:	mov    rsi,r13
  401ad6:	mov    edi,r12d
  401ad9:	call   QWORD PTR [r15+rbx*8]
  401add:	add    rbx,0x1
  401ae1:	cmp    rbp,rbx
  401ae4:	jne    401ad0 <__libc_csu_init@@Base+0x40>
  401ae6:	add    rsp,0x8
  401aea:	pop    rbx
  401aeb:	pop    rbp
  401aec:	pop    r12
  401aee:	pop    r13
  401af0:	pop    r14
  401af2:	pop    r15
  401af4:	ret    
  401af5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401b00 <__libc_csu_fini@@Base>:
  401b00:	endbr64 
  401b04:	ret    

Disassembly of section .fini:

0000000000401b08 <.fini>:
  401b08:	endbr64 
  401b0c:	sub    rsp,0x8
  401b10:	add    rsp,0x8
  401b14:	ret    
