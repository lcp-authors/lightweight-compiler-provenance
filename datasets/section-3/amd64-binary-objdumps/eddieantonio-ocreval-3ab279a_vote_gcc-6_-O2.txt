
../repos/eddieantonio-ocreval-3ab279a/vote/vote:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x6fd9]        # 407fe8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <__strcat_chk@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <__strcat_chk@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x6fe2]        # 408008 <error@@Base+0x43b8>
  401026:	jmp    QWORD PTR [rip+0x6fe4]        # 408010 <error@@Base+0x43c0>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <__strcat_chk@plt>:
  401030:	jmp    QWORD PTR [rip+0x6fe2]        # 408018 <__strcat_chk@GLIBC_2.3.4>
  401036:	push   0x0
  40103b:	jmp    401020 <__strcat_chk@plt-0x10>

0000000000401040 <free@plt>:
  401040:	jmp    QWORD PTR [rip+0x6fda]        # 408020 <free@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <__strcat_chk@plt-0x10>

0000000000401050 <unlink@plt>:
  401050:	jmp    QWORD PTR [rip+0x6fd2]        # 408028 <unlink@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <__strcat_chk@plt-0x10>

0000000000401060 <utf8proc_get_property@plt>:
  401060:	jmp    QWORD PTR [rip+0x6fca]        # 408030 <utf8proc_get_property>
  401066:	push   0x3
  40106b:	jmp    401020 <__strcat_chk@plt-0x10>

0000000000401070 <utf8proc_encode_char@plt>:
  401070:	jmp    QWORD PTR [rip+0x6fc2]        # 408038 <utf8proc_encode_char>
  401076:	push   0x4
  40107b:	jmp    401020 <__strcat_chk@plt-0x10>

0000000000401080 <getpid@plt>:
  401080:	jmp    QWORD PTR [rip+0x6fba]        # 408040 <getpid@GLIBC_2.2.5>
  401086:	push   0x5
  40108b:	jmp    401020 <__strcat_chk@plt-0x10>

0000000000401090 <fclose@plt>:
  401090:	jmp    QWORD PTR [rip+0x6fb2]        # 408048 <fclose@GLIBC_2.2.5>
  401096:	push   0x6
  40109b:	jmp    401020 <__strcat_chk@plt-0x10>

00000000004010a0 <strlen@plt>:
  4010a0:	jmp    QWORD PTR [rip+0x6faa]        # 408050 <strlen@GLIBC_2.2.5>
  4010a6:	push   0x7
  4010ab:	jmp    401020 <__strcat_chk@plt-0x10>

00000000004010b0 <__stack_chk_fail@plt>:
  4010b0:	jmp    QWORD PTR [rip+0x6fa2]        # 408058 <__stack_chk_fail@GLIBC_2.4>
  4010b6:	push   0x8
  4010bb:	jmp    401020 <__strcat_chk@plt-0x10>

00000000004010c0 <rewind@plt>:
  4010c0:	jmp    QWORD PTR [rip+0x6f9a]        # 408060 <rewind@GLIBC_2.2.5>
  4010c6:	push   0x9
  4010cb:	jmp    401020 <__strcat_chk@plt-0x10>

00000000004010d0 <utf8proc_tolower@plt>:
  4010d0:	jmp    QWORD PTR [rip+0x6f92]        # 408068 <utf8proc_tolower>
  4010d6:	push   0xa
  4010db:	jmp    401020 <__strcat_chk@plt-0x10>

00000000004010e0 <fputs@plt>:
  4010e0:	jmp    QWORD PTR [rip+0x6f8a]        # 408070 <fputs@GLIBC_2.2.5>
  4010e6:	push   0xb
  4010eb:	jmp    401020 <__strcat_chk@plt-0x10>

00000000004010f0 <fgets@plt>:
  4010f0:	jmp    QWORD PTR [rip+0x6f82]        # 408078 <fgets@GLIBC_2.2.5>
  4010f6:	push   0xc
  4010fb:	jmp    401020 <__strcat_chk@plt-0x10>

0000000000401100 <utf8proc_iterate@plt>:
  401100:	jmp    QWORD PTR [rip+0x6f7a]        # 408080 <utf8proc_iterate>
  401106:	push   0xd
  40110b:	jmp    401020 <__strcat_chk@plt-0x10>

0000000000401110 <calloc@plt>:
  401110:	jmp    QWORD PTR [rip+0x6f72]        # 408088 <calloc@GLIBC_2.2.5>
  401116:	push   0xe
  40111b:	jmp    401020 <__strcat_chk@plt-0x10>

0000000000401120 <strcmp@plt>:
  401120:	jmp    QWORD PTR [rip+0x6f6a]        # 408090 <strcmp@GLIBC_2.2.5>
  401126:	push   0xf
  40112b:	jmp    401020 <__strcat_chk@plt-0x10>

0000000000401130 <__sysv_signal@plt>:
  401130:	jmp    QWORD PTR [rip+0x6f62]        # 408098 <__sysv_signal@GLIBC_2.2.5>
  401136:	push   0x10
  40113b:	jmp    401020 <__strcat_chk@plt-0x10>

0000000000401140 <utf8proc_category@plt>:
  401140:	jmp    QWORD PTR [rip+0x6f5a]        # 4080a0 <utf8proc_category>
  401146:	push   0x11
  40114b:	jmp    401020 <__strcat_chk@plt-0x10>

0000000000401150 <__xstat@plt>:
  401150:	jmp    QWORD PTR [rip+0x6f52]        # 4080a8 <__xstat@GLIBC_2.2.5>
  401156:	push   0x12
  40115b:	jmp    401020 <__strcat_chk@plt-0x10>

0000000000401160 <__printf_chk@plt>:
  401160:	jmp    QWORD PTR [rip+0x6f4a]        # 4080b0 <__printf_chk@GLIBC_2.3.4>
  401166:	push   0x13
  40116b:	jmp    401020 <__strcat_chk@plt-0x10>

0000000000401170 <__fread_chk@plt>:
  401170:	jmp    QWORD PTR [rip+0x6f42]        # 4080b8 <__fread_chk@GLIBC_2.7>
  401176:	push   0x14
  40117b:	jmp    401020 <__strcat_chk@plt-0x10>

0000000000401180 <fopen@plt>:
  401180:	jmp    QWORD PTR [rip+0x6f3a]        # 4080c0 <fopen@GLIBC_2.2.5>
  401186:	push   0x15
  40118b:	jmp    401020 <__strcat_chk@plt-0x10>

0000000000401190 <exit@plt>:
  401190:	jmp    QWORD PTR [rip+0x6f32]        # 4080c8 <exit@GLIBC_2.2.5>
  401196:	push   0x16
  40119b:	jmp    401020 <__strcat_chk@plt-0x10>

00000000004011a0 <fwrite@plt>:
  4011a0:	jmp    QWORD PTR [rip+0x6f2a]        # 4080d0 <fwrite@GLIBC_2.2.5>
  4011a6:	push   0x17
  4011ab:	jmp    401020 <__strcat_chk@plt-0x10>

00000000004011b0 <__fprintf_chk@plt>:
  4011b0:	jmp    QWORD PTR [rip+0x6f22]        # 4080d8 <__fprintf_chk@GLIBC_2.3.4>
  4011b6:	push   0x18
  4011bb:	jmp    401020 <__strcat_chk@plt-0x10>

00000000004011c0 <utf8proc_errmsg@plt>:
  4011c0:	jmp    QWORD PTR [rip+0x6f1a]        # 4080e0 <utf8proc_errmsg>
  4011c6:	push   0x19
  4011cb:	jmp    401020 <__strcat_chk@plt-0x10>

00000000004011d0 <strdup@plt>:
  4011d0:	jmp    QWORD PTR [rip+0x6f12]        # 4080e8 <strdup@GLIBC_2.2.5>
  4011d6:	push   0x1a
  4011db:	jmp    401020 <__strcat_chk@plt-0x10>

00000000004011e0 <getc@plt>:
  4011e0:	jmp    QWORD PTR [rip+0x6f0a]        # 4080f0 <getc@GLIBC_2.2.5>
  4011e6:	push   0x1b
  4011eb:	jmp    401020 <__strcat_chk@plt-0x10>

00000000004011f0 <__sprintf_chk@plt>:
  4011f0:	jmp    QWORD PTR [rip+0x6f02]        # 4080f8 <__sprintf_chk@GLIBC_2.3.4>
  4011f6:	push   0x1c
  4011fb:	jmp    401020 <__strcat_chk@plt-0x10>

Disassembly of section .text:

0000000000401200 <error@@Base-0x2a50>:
  401200:	push   rbx
  401201:	lea    rdx,[rip+0x3e48]        # 405050 <error@@Base+0x1400>
  401208:	mov    rbx,rsi
  40120b:	sub    rsp,0x40
  40120f:	mov    rcx,0x408140
  401216:	mov    DWORD PTR [rsp+0xc],edi
  40121a:	lea    rdi,[rsp+0xc]
  40121f:	mov    rax,QWORD PTR fs:0x28
  401228:	mov    QWORD PTR [rsp+0x38],rax
  40122d:	xor    eax,eax
  40122f:	call   403db0 <error@@Base+0x160>
  401234:	mov    edi,DWORD PTR [rsp+0xc]
  401238:	mov    rsi,rbx
  40123b:	xor    eax,eax
  40123d:	lea    rbx,[rsp+0x10]
  401242:	call   401450 <__sprintf_chk@plt+0x260>
  401247:	xor    eax,eax
  401249:	call   401970 <__sprintf_chk@plt+0x780>
  40124e:	mov    rax,0x408114
  401255:	mov    rdx,0x4083c0
  40125c:	mov    rdi,rbx
  40125f:	movsx  esi,WORD PTR [rax]
  401262:	xor    eax,eax
  401264:	call   402960 <__sprintf_chk@plt+0x1770>
  401269:	mov    rdi,rbx
  40126c:	xor    eax,eax
  40126e:	call   401d50 <__sprintf_chk@plt+0xb60>
  401273:	mov    rax,0x4085c0
  40127a:	mov    rdi,0x4085e0
  401281:	xor    edx,edx
  401283:	mov    rsi,QWORD PTR [rax]
  401286:	xor    eax,eax
  401288:	call   403820 <__sprintf_chk@plt+0x2630>
  40128d:	xor    eax,eax
  40128f:	call   403bf0 <__sprintf_chk@plt+0x2a00>
  401294:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40129e:	xchg   ax,ax
  4012a0:	endbr64 
  4012a4:	xor    ebp,ebp
  4012a6:	mov    r9,rdx
  4012a9:	pop    rsi
  4012aa:	mov    rdx,rsp
  4012ad:	and    rsp,0xfffffffffffffff0
  4012b1:	push   rax
  4012b2:	push   rsp
  4012b3:	mov    r8,0x404300
  4012ba:	mov    rcx,0x404290
  4012c1:	mov    rdi,0x401200
  4012c8:	call   QWORD PTR [rip+0x6d12]        # 407fe0 <error@@Base+0x4390>
  4012ce:	hlt    
  4012cf:	nop
  4012d0:	endbr64 
  4012d4:	ret    
  4012d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012df:	nop
  4012e0:	mov    eax,0x4081df
  4012e5:	push   rbp
  4012e6:	sub    rax,0x4081d8
  4012ec:	cmp    rax,0xe
  4012f0:	mov    rbp,rsp
  4012f3:	jbe    401310 <__sprintf_chk@plt+0x120>
  4012f5:	mov    eax,0x0
  4012fa:	test   rax,rax
  4012fd:	je     401310 <__sprintf_chk@plt+0x120>
  4012ff:	pop    rbp
  401300:	mov    edi,0x4081d8
  401305:	jmp    rax
  401307:	nop    WORD PTR [rax+rax*1+0x0]
  401310:	pop    rbp
  401311:	ret    
  401312:	nop    DWORD PTR [rax+0x0]
  401316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401320:	mov    esi,0x4081d8
  401325:	push   rbp
  401326:	sub    rsi,0x4081d8
  40132d:	sar    rsi,0x3
  401331:	mov    rbp,rsp
  401334:	mov    rax,rsi
  401337:	shr    rax,0x3f
  40133b:	add    rsi,rax
  40133e:	sar    rsi,1
  401341:	je     401358 <__sprintf_chk@plt+0x168>
  401343:	mov    eax,0x0
  401348:	test   rax,rax
  40134b:	je     401358 <__sprintf_chk@plt+0x168>
  40134d:	pop    rbp
  40134e:	mov    edi,0x4081d8
  401353:	jmp    rax
  401355:	nop    DWORD PTR [rax]
  401358:	pop    rbp
  401359:	ret    
  40135a:	nop    WORD PTR [rax+rax*1+0x0]
  401360:	cmp    BYTE PTR [rip+0x6e79],0x0        # 4081e0 <error@@Base+0x4590>
  401367:	jne    40137a <__sprintf_chk@plt+0x18a>
  401369:	push   rbp
  40136a:	mov    rbp,rsp
  40136d:	call   4012e0 <__sprintf_chk@plt+0xf0>
  401372:	pop    rbp
  401373:	mov    BYTE PTR [rip+0x6e66],0x1        # 4081e0 <error@@Base+0x4590>
  40137a:	repz ret 
  40137c:	nop    DWORD PTR [rax+0x0]
  401380:	mov    edi,0x407de8
  401385:	cmp    QWORD PTR [rdi],0x0
  401389:	jne    401390 <__sprintf_chk@plt+0x1a0>
  40138b:	jmp    401320 <__sprintf_chk@plt+0x130>
  40138d:	nop    DWORD PTR [rax]
  401390:	mov    eax,0x0
  401395:	test   rax,rax
  401398:	je     40138b <__sprintf_chk@plt+0x19b>
  40139a:	push   rbp
  40139b:	mov    rbp,rsp
  40139e:	call   rax
  4013a0:	pop    rbp
  4013a1:	jmp    401320 <__sprintf_chk@plt+0x130>
  4013a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4013b0:	mov    rax,QWORD PTR [rdi]
  4013b3:	sub    eax,DWORD PTR [rsi]
  4013b5:	ret    
  4013b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4013c0:	vmovsd xmm0,QWORD PTR [rdi+0x30]
  4013c5:	vmovsd xmm1,QWORD PTR [rsi+0x30]
  4013ca:	vucomisd xmm0,xmm1
  4013ce:	jp     4013d2 <__sprintf_chk@plt+0x1e2>
  4013d0:	je     4013e8 <__sprintf_chk@plt+0x1f8>
  4013d2:	xor    eax,eax
  4013d4:	vucomisd xmm1,xmm0
  4013d8:	seta   al
  4013db:	neg    eax
  4013dd:	or     eax,0x1
  4013e0:	ret    
  4013e1:	nop    DWORD PTR [rax+0x0]
  4013e8:	movsx  eax,WORD PTR [rdi]
  4013eb:	movsx  edx,WORD PTR [rsi]
  4013ee:	sub    eax,edx
  4013f0:	ret    
  4013f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4013fc:	nop    DWORD PTR [rax+0x0]
  401400:	movsx  cx,BYTE PTR [rdi]
  401404:	xor    eax,eax
  401406:	cmp    cl,0x30
  401409:	jle    401411 <__sprintf_chk@plt+0x221>
  40140b:	cmp    BYTE PTR [rdi+0x1],0x2f
  40140f:	je     401418 <__sprintf_chk@plt+0x228>
  401411:	repz ret 
  401413:	nop    DWORD PTR [rax+rax*1+0x0]
  401418:	movzx  r8d,BYTE PTR [rdi+0x2]
  40141d:	cmp    cl,r8b
  401420:	jg     401448 <__sprintf_chk@plt+0x258>
  401422:	cmp    r8b,0x39
  401426:	jg     401448 <__sprintf_chk@plt+0x258>
  401428:	cmp    BYTE PTR [rdi+0x3],0x0
  40142c:	jne    401411 <__sprintf_chk@plt+0x221>
  40142e:	sub    ecx,0x30
  401431:	mov    WORD PTR [rsi],cx
  401434:	movsx  ax,BYTE PTR [rdi+0x2]
  401439:	sub    eax,0x30
  40143c:	mov    WORD PTR [rdx],ax
  40143f:	mov    eax,0x1
  401444:	ret    
  401445:	nop    DWORD PTR [rax]
  401448:	xor    eax,eax
  40144a:	ret    
  40144b:	nop    DWORD PTR [rax+rax*1+0x0]
  401450:	push   r15
  401452:	push   r14
  401454:	push   r13
  401456:	push   r12
  401458:	push   rbp
  401459:	push   rbx
  40145a:	sub    rsp,0x18
  40145e:	mov    rax,QWORD PTR fs:0x28
  401467:	mov    QWORD PTR [rsp+0x8],rax
  40146c:	xor    eax,eax
  40146e:	lea    eax,[rdi-0x2]
  401471:	cmp    eax,0xe
  401474:	ja     4015b1 <__sprintf_chk@plt+0x3c1>
  40147a:	mov    r12,0x408340
  401481:	mov    rbp,0x408118
  401488:	mov    ebx,edi
  40148a:	mov    r13,rsi
  40148d:	xor    r15d,r15d
  401490:	xor    r14d,r14d
  401493:	nop    DWORD PTR [rax+rax*1+0x0]
  401498:	mov    esi,0x38
  40149d:	mov    edi,0x1
  4014a2:	xor    eax,eax
  4014a4:	call   403c90 <error@@Base+0x40>
  4014a9:	movsx  rdx,r14w
  4014ad:	mov    QWORD PTR [r12+r15*8],rax
  4014b1:	lea    rdi,[rax+0x10]
  4014b5:	lea    rcx,[r13+rdx*8+0x0]
  4014ba:	mov    WORD PTR [rax],r14w
  4014be:	add    r14d,0x1
  4014c2:	movsx  r15,r14w
  4014c6:	mov    rdx,QWORD PTR [rcx]
  4014c9:	mov    QWORD PTR [rax+0x8],rdx
  4014cd:	mov    rsi,QWORD PTR [rcx]
  4014d0:	xor    eax,eax
  4014d2:	mov    rdx,rbp
  4014d5:	call   403280 <__sprintf_chk@plt+0x2090>
  4014da:	cmp    ebx,r15d
  4014dd:	jg     401498 <__sprintf_chk@plt+0x2a8>
  4014df:	mov    rax,0x4085c8
  4014e6:	mov    rbp,0x408114
  4014ed:	mov    WORD PTR [rax],bx
  4014f0:	mov    rax,0x408601
  4014f7:	cmp    BYTE PTR [rax],0x0
  4014fa:	je     4015a8 <__sprintf_chk@plt+0x3b8>
  401500:	cmp    bx,WORD PTR [rbp+0x0]
  401504:	jl     4015a8 <__sprintf_chk@plt+0x3b8>
  40150a:	mov    rbx,0x408728
  401511:	mov    rdi,QWORD PTR [rbx]
  401514:	test   rdi,rdi
  401517:	je     401536 <__sprintf_chk@plt+0x346>
  401519:	mov    rdx,0x408110
  401520:	mov    rsi,0x408112
  401527:	xor    eax,eax
  401529:	call   401400 <__sprintf_chk@plt+0x210>
  40152e:	test   al,al
  401530:	je     4015d5 <__sprintf_chk@plt+0x3e5>
  401536:	mov    rbx,0x408608
  40153d:	mov    rdi,QWORD PTR [rbx]
  401540:	test   rdi,rdi
  401543:	je     401585 <__sprintf_chk@plt+0x395>
  401545:	lea    rdx,[rsp+0x6]
  40154a:	lea    rsi,[rsp+0x4]
  40154f:	xor    eax,eax
  401551:	call   401400 <__sprintf_chk@plt+0x210>
  401556:	test   al,al
  401558:	je     4015c4 <__sprintf_chk@plt+0x3d4>
  40155a:	mov    rdx,0x408110
  401561:	movsx  eax,WORD PTR [rbp+0x0]
  401565:	movsx  ecx,WORD PTR [rsp+0x6]
  40156a:	movsx  edx,WORD PTR [rdx]
  40156d:	imul   eax,edx
  401570:	movsx  edx,WORD PTR [rsp+0x4]
  401575:	imul   eax,edx
  401578:	cdq    
  401579:	idiv   ecx
  40157b:	mov    rdx,0x40c630
  401582:	mov    WORD PTR [rdx],ax
  401585:	mov    rax,QWORD PTR [rsp+0x8]
  40158a:	xor    rax,QWORD PTR fs:0x28
  401593:	jne    4015bf <__sprintf_chk@plt+0x3cf>
  401595:	add    rsp,0x18
  401599:	pop    rbx
  40159a:	pop    rbp
  40159b:	pop    r12
  40159d:	pop    r13
  40159f:	pop    r14
  4015a1:	pop    r15
  4015a3:	ret    
  4015a4:	nop    DWORD PTR [rax+0x0]
  4015a8:	mov    WORD PTR [rbp+0x0],bx
  4015ac:	jmp    40150a <__sprintf_chk@plt+0x31a>
  4015b1:	lea    rdi,[rip+0x3a4c]        # 405004 <error@@Base+0x13b4>
  4015b8:	xor    eax,eax
  4015ba:	call   403c50 <error@@Base>
  4015bf:	call   4010b0 <__stack_chk_fail@plt>
  4015c4:	mov    rsi,QWORD PTR [rbx]
  4015c7:	lea    rdi,[rip+0x3a5e]        # 40502c <error@@Base+0x13dc>
  4015ce:	xor    eax,eax
  4015d0:	call   403ce0 <error@@Base+0x90>
  4015d5:	mov    rsi,QWORD PTR [rbx]
  4015d8:	lea    rdi,[rip+0x3a3e]        # 40501d <error@@Base+0x13cd>
  4015df:	call   403ce0 <error@@Base+0x90>
  4015e4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4015ef:	nop
  4015f0:	push   r13
  4015f2:	push   r12
  4015f4:	mov    r13d,esi
  4015f7:	push   rbp
  4015f8:	push   rbx
  4015f9:	mov    rsi,rdi
  4015fc:	mov    r12,rdi
  4015ff:	xor    eax,eax
  401601:	mov    ebx,edx
  401603:	sub    rsp,0x8
  401607:	mov    rdi,0x408740
  40160e:	call   402fa0 <__sprintf_chk@plt+0x1db0>
  401613:	test   rax,rax
  401616:	mov    rbp,rax
  401619:	je     401630 <__sprintf_chk@plt+0x440>
  40161b:	movsx  rdx,bx
  40161f:	add    QWORD PTR [rbp+rdx*8+0x18],0x1
  401625:	add    rsp,0x8
  401629:	pop    rbx
  40162a:	pop    rbp
  40162b:	pop    r12
  40162d:	pop    r13
  40162f:	ret    
  401630:	mov    esi,0xa0
  401635:	mov    edi,0x1
  40163a:	xor    eax,eax
  40163c:	call   403c90 <error@@Base+0x40>
  401641:	mov    rdi,r12
  401644:	mov    rbp,rax
  401647:	call   4011d0 <strdup@plt>
  40164c:	test   r13b,r13b
  40164f:	mov    QWORD PTR [rbp+0x10],rax
  401653:	jne    40165f <__sprintf_chk@plt+0x46f>
  401655:	mov    DWORD PTR [rbp+0x98],0x3f800000
  40165f:	mov    rdi,0x408740
  401666:	mov    rsi,rbp
  401669:	xor    eax,eax
  40166b:	call   403040 <__sprintf_chk@plt+0x1e50>
  401670:	jmp    40161b <__sprintf_chk@plt+0x42b>
  401672:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40167d:	nop    DWORD PTR [rax]
  401680:	push   r15
  401682:	push   r14
  401684:	movsx  rdx,di
  401688:	push   r13
  40168a:	push   r12
  40168c:	push   rbp
  40168d:	push   rbx
  40168e:	sub    rsp,0x48
  401692:	mov    rax,QWORD PTR fs:0x28
  40169b:	mov    QWORD PTR [rsp+0x38],rax
  4016a0:	xor    eax,eax
  4016a2:	mov    rax,0x408340
  4016a9:	mov    DWORD PTR [rsp+0xc],edx
  4016ad:	mov    rax,QWORD PTR [rax+rdx*8]
  4016b1:	mov    rbx,QWORD PTR [rax+0x10]
  4016b5:	test   rbx,rbx
  4016b8:	je     401755 <__sprintf_chk@plt+0x565>
  4016be:	mov    BYTE PTR [rsp+0x20],0x0
  4016c3:	lea    r12,[rsp+0x17]
  4016c8:	lea    r13,[rsp+0x20]
  4016cd:	mov    r15d,0x1
  4016d3:	jmp    401723 <__sprintf_chk@plt+0x533>
  4016d5:	nop    DWORD PTR [rax]
  4016d8:	mov    esi,DWORD PTR [r14+0x14]
  4016dc:	xor    ecx,ecx
  4016de:	xor    edi,edi
  4016e0:	xor    eax,eax
  4016e2:	mov    rdx,r12
  4016e5:	call   4036b0 <__sprintf_chk@plt+0x24c0>
  4016ea:	mov    edx,0x12
  4016ef:	mov    rsi,r12
  4016f2:	mov    rdi,r13
  4016f5:	call   401030 <__strcat_chk@plt>
  4016fa:	cmp    DWORD PTR [r14+0x14],0x7e
  4016ff:	mov    edx,DWORD PTR [rsp+0xc]
  401703:	mov    rdi,r13
  401706:	cmove  ebp,r15d
  40170a:	xor    eax,eax
  40170c:	movsx  esi,bpl
  401710:	call   4015f0 <__sprintf_chk@plt+0x400>
  401715:	mov    rbx,QWORD PTR [rbx+0x8]
  401719:	test   rbx,rbx
  40171c:	je     401755 <__sprintf_chk@plt+0x565>
  40171e:	mov    BYTE PTR [rsp+0x20],0x0
  401723:	mov    esi,DWORD PTR [rbx+0x14]
  401726:	xor    ecx,ecx
  401728:	xor    edi,edi
  40172a:	xor    eax,eax
  40172c:	mov    rdx,r12
  40172f:	call   4036b0 <__sprintf_chk@plt+0x24c0>
  401734:	mov    edx,0x12
  401739:	mov    rsi,r12
  40173c:	mov    rdi,r13
  40173f:	call   401030 <__strcat_chk@plt>
  401744:	cmp    DWORD PTR [rbx+0x14],0x7e
  401748:	mov    r14,QWORD PTR [rbx+0x8]
  40174c:	sete   bpl
  401750:	test   r14,r14
  401753:	jne    4016d8 <__sprintf_chk@plt+0x4e8>
  401755:	mov    rax,QWORD PTR [rsp+0x38]
  40175a:	xor    rax,QWORD PTR fs:0x28
  401763:	jne    401774 <__sprintf_chk@plt+0x584>
  401765:	add    rsp,0x48
  401769:	pop    rbx
  40176a:	pop    rbp
  40176b:	pop    r12
  40176d:	pop    r13
  40176f:	pop    r14
  401771:	pop    r15
  401773:	ret    
  401774:	call   4010b0 <__stack_chk_fail@plt>
  401779:	nop    DWORD PTR [rax+0x0]
  401780:	vxorps xmm0,xmm0,xmm0
  401784:	vucomiss xmm0,DWORD PTR [rdi+0x98]
  40178c:	jp     401794 <__sprintf_chk@plt+0x5a4>
  40178e:	je     40182f <__sprintf_chk@plt+0x63f>
  401794:	push   r13
  401796:	push   r12
  401798:	lea    r12,[rip+0x6a61]        # 408200 <error@@Base+0x45b0>
  40179f:	push   rbp
  4017a0:	push   rbx
  4017a1:	mov    rbp,rdi
  4017a4:	sub    rsp,0x8
  4017a8:	cmp    QWORD PTR [rip+0x6a50],0x0        # 408200 <error@@Base+0x45b0>
  4017b0:	je     401875 <__sprintf_chk@plt+0x685>
  4017b6:	mov    rax,0x4085c8
  4017bd:	movsx  rcx,WORD PTR [rax]
  4017c1:	xor    ebx,ebx
  4017c3:	test   rcx,rcx
  4017c6:	jle    4018b8 <__sprintf_chk@plt+0x6c8>
  4017cc:	nop    DWORD PTR [rax+0x0]
  4017d0:	mov    rdx,QWORD PTR [rbp+rbx*8+0x18]
  4017d5:	mov    rax,QWORD PTR [r12+rbx*8]
  4017d9:	add    rbx,0x1
  4017dd:	cmp    rbx,rcx
  4017e0:	mov    QWORD PTR [rax],rdx
  4017e3:	jne    4017d0 <__sprintf_chk@plt+0x5e0>
  4017e5:	mov    rdx,0x4013b0
  4017ec:	lea    rsi,[rip+0x6a0d]        # 408200 <error@@Base+0x45b0>
  4017f3:	mov    r13,rbx
  4017f6:	mov    rdi,rbx
  4017f9:	xor    eax,eax
  4017fb:	sar    r13,1
  4017fe:	call   401fc0 <__sprintf_chk@plt+0xdd0>
  401803:	and    ebx,0x1
  401806:	je     401850 <__sprintf_chk@plt+0x660>
  401808:	mov    rax,QWORD PTR [r12+r13*8]
  40180c:	vxorpd xmm0,xmm0,xmm0
  401810:	vcvtsi2sd xmm0,xmm0,QWORD PTR [rax]
  401815:	vxorps xmm1,xmm1,xmm1
  401819:	vcvtsd2ss xmm1,xmm1,xmm0
  40181d:	vmovss DWORD PTR [rbp+0x98],xmm1
  401825:	add    rsp,0x8
  401829:	pop    rbx
  40182a:	pop    rbp
  40182b:	pop    r12
  40182d:	pop    r13
  40182f:	repz ret 
  401831:	mov    rdx,0x4013b0
  401838:	mov    rsi,r12
  40183b:	xor    edi,edi
  40183d:	xor    eax,eax
  40183f:	xor    r13d,r13d
  401842:	call   401fc0 <__sprintf_chk@plt+0xdd0>
  401847:	nop    WORD PTR [rax+rax*1+0x0]
  401850:	lea    rax,[r13-0x1]
  401854:	mov    rdx,QWORD PTR [r12+rax*8]
  401858:	mov    rax,QWORD PTR [r12+r13*8]
  40185c:	vxorpd xmm0,xmm0,xmm0
  401860:	mov    rax,QWORD PTR [rax]
  401863:	add    rax,QWORD PTR [rdx]
  401866:	vcvtsi2sd xmm0,xmm0,rax
  40186b:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x381d]        # 405090 <error@@Base+0x1440>
  401873:	jmp    401815 <__sprintf_chk@plt+0x625>
  401875:	mov    r13,0x4085c8
  40187c:	xor    ebx,ebx
  40187e:	cmp    WORD PTR [r13+0x0],0x0
  401884:	jle    401831 <__sprintf_chk@plt+0x641>
  401886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401890:	xor    eax,eax
  401892:	mov    esi,0x8
  401897:	mov    edi,0x1
  40189c:	call   403c90 <error@@Base+0x40>
  4018a1:	movsx  rcx,WORD PTR [r13+0x0]
  4018a6:	mov    QWORD PTR [r12+rbx*8],rax
  4018aa:	add    rbx,0x1
  4018ae:	cmp    rbx,rcx
  4018b1:	jl     401890 <__sprintf_chk@plt+0x6a0>
  4018b3:	jmp    4017c1 <__sprintf_chk@plt+0x5d1>
  4018b8:	mov    rdx,0x4013b0
  4018bf:	lea    rsi,[rip+0x693a]        # 408200 <error@@Base+0x45b0>
  4018c6:	xor    eax,eax
  4018c8:	xor    edi,edi
  4018ca:	xor    r13d,r13d
  4018cd:	call   401fc0 <__sprintf_chk@plt+0xdd0>
  4018d2:	mov    rax,0xffffffffffffffff
  4018d9:	jmp    401854 <__sprintf_chk@plt+0x664>
  4018de:	xchg   ax,ax
  4018e0:	mov    rax,0x408740
  4018e7:	mov    rdx,QWORD PTR [rax+0x3ee8]
  4018ee:	test   rdx,rdx
  4018f1:	jle    401967 <__sprintf_chk@plt+0x777>
  4018f3:	mov    rcx,0x408340
  4018fa:	movsx  rdi,di
  4018fe:	mov    rax,QWORD PTR [rax+0x3ee0]
  401905:	vxorps xmm3,xmm3,xmm3
  401909:	vmovsd xmm4,QWORD PTR [rip+0x378f]        # 4050a0 <error@@Base+0x1450>
  401911:	mov    rsi,QWORD PTR [rcx+rdi*8]
  401915:	lea    rcx,[rax+rdx*8]
  401919:	vmovsd xmm2,QWORD PTR [rsi+0x30]
  40191e:	jmp    40192d <__sprintf_chk@plt+0x73d>
  401920:	add    rax,0x8
  401924:	vaddsd xmm2,xmm2,xmm1
  401928:	cmp    rax,rcx
  40192b:	je     401962 <__sprintf_chk@plt+0x772>
  40192d:	mov    rdx,QWORD PTR [rax]
  401930:	vxorps xmm0,xmm0,xmm0
  401934:	vxorpd xmm1,xmm1,xmm1
  401938:	vcvtsi2ss xmm0,xmm0,QWORD PTR [rdx+rdi*8+0x18]
  40193f:	vsubss xmm0,xmm0,DWORD PTR [rdx+0x98]
  401947:	vucomiss xmm3,xmm0
  40194b:	vcvtss2sd xmm1,xmm1,xmm0
  40194f:	jbe    401920 <__sprintf_chk@plt+0x730>
  401951:	vxorpd xmm1,xmm1,xmm4
  401955:	add    rax,0x8
  401959:	cmp    rax,rcx
  40195c:	vaddsd xmm2,xmm2,xmm1
  401960:	jne    40192d <__sprintf_chk@plt+0x73d>
  401962:	vmovsd QWORD PTR [rsi+0x30],xmm2
  401967:	repz ret 
  401969:	nop    DWORD PTR [rax+0x0]
  401970:	push   r13
  401972:	push   r12
  401974:	push   rbp
  401975:	push   rbx
  401976:	sub    rsp,0x8
  40197a:	mov    rax,0x408601
  401981:	cmp    BYTE PTR [rax],0x0
  401984:	je     401a8d <__sprintf_chk@plt+0x89d>
  40198a:	mov    r12,0x4085c8
  401991:	xor    ebx,ebx
  401993:	cmp    WORD PTR [r12],0x0
  401999:	jle    4019b8 <__sprintf_chk@plt+0x7c8>
  40199b:	nop    DWORD PTR [rax+rax*1+0x0]
  4019a0:	xor    eax,eax
  4019a2:	mov    rdi,rbx
  4019a5:	add    rbx,0x1
  4019a9:	call   401680 <__sprintf_chk@plt+0x490>
  4019ae:	movsx  rax,WORD PTR [r12]
  4019b3:	cmp    rax,rbx
  4019b6:	jg     4019a0 <__sprintf_chk@plt+0x7b0>
  4019b8:	mov    rbp,0x408740
  4019bf:	xor    eax,eax
  4019c1:	xor    ebx,ebx
  4019c3:	mov    rdi,rbp
  4019c6:	call   403160 <__sprintf_chk@plt+0x1f70>
  4019cb:	cmp    QWORD PTR [rbp+0x3ee8],0x0
  4019d3:	jle    4019f7 <__sprintf_chk@plt+0x807>
  4019d5:	nop    DWORD PTR [rax]
  4019d8:	mov    rax,QWORD PTR [rbp+0x3ee0]
  4019df:	mov    rdi,QWORD PTR [rax+rbx*8]
  4019e3:	xor    eax,eax
  4019e5:	add    rbx,0x1
  4019e9:	call   401780 <__sprintf_chk@plt+0x590>
  4019ee:	cmp    QWORD PTR [rbp+0x3ee8],rbx
  4019f5:	jg     4019d8 <__sprintf_chk@plt+0x7e8>
  4019f7:	xor    ebp,ebp
  4019f9:	cmp    WORD PTR [r12],0x0
  4019ff:	jle    401a20 <__sprintf_chk@plt+0x830>
  401a01:	nop    DWORD PTR [rax+0x0]
  401a08:	xor    eax,eax
  401a0a:	mov    rdi,rbp
  401a0d:	add    rbp,0x1
  401a11:	call   4018e0 <__sprintf_chk@plt+0x6f0>
  401a16:	movsx  rax,WORD PTR [r12]
  401a1b:	cmp    rax,rbp
  401a1e:	jg     401a08 <__sprintf_chk@plt+0x818>
  401a20:	mov    rbx,0x408340
  401a27:	mov    rdx,0x4013c0
  401a2e:	xor    eax,eax
  401a30:	mov    rdi,rbp
  401a33:	mov    rsi,rbx
  401a36:	call   401fc0 <__sprintf_chk@plt+0xdd0>
  401a3b:	mov    rax,0x408600
  401a42:	cmp    BYTE PTR [rax],0x0
  401a45:	je     401a8d <__sprintf_chk@plt+0x89d>
  401a47:	cmp    WORD PTR [r12],0x0
  401a4d:	jle    401a8d <__sprintf_chk@plt+0x89d>
  401a4f:	lea    r13,[rip+0x35e8]        # 40503e <error@@Base+0x13ee>
  401a56:	xor    ebp,ebp
  401a58:	nop    DWORD PTR [rax+rax*1+0x0]
  401a60:	mov    rax,QWORD PTR [rbx+rbp*8]
  401a64:	mov    rsi,r13
  401a67:	mov    edi,0x1
  401a6c:	add    rbp,0x1
  401a70:	mov    rdx,QWORD PTR [rax+0x8]
  401a74:	vmovsd xmm0,QWORD PTR [rax+0x30]
  401a79:	mov    eax,0x1
  401a7e:	call   401160 <__printf_chk@plt>
  401a83:	movsx  rax,WORD PTR [r12]
  401a88:	cmp    rax,rbp
  401a8b:	jg     401a60 <__sprintf_chk@plt+0x870>
  401a8d:	mov    rax,0x408114
  401a94:	movsx  r8,WORD PTR [rax]
  401a98:	test   r8w,r8w
  401a9c:	jle    401af0 <__sprintf_chk@plt+0x900>
  401a9e:	mov    rbx,0x408340
  401aa5:	mov    rcx,0x4083c0
  401aac:	shl    r8,0x3
  401ab0:	xor    eax,eax
  401ab2:	nop    WORD PTR [rax+rax*1+0x0]
  401ab8:	mov    rdx,QWORD PTR [rax+rbx*1]
  401abc:	lea    rsi,[rax*4+0x0]
  401ac4:	mov    rdi,QWORD PTR [rdx+0x10]
  401ac8:	mov    QWORD PTR [rcx+rax*4],rdi
  401acc:	mov    rdi,QWORD PTR [rdx+0x18]
  401ad0:	add    rax,0x8
  401ad4:	cmp    r8,rax
  401ad7:	mov    QWORD PTR [rsi+rcx*1+0x8],rdi
  401adc:	mov    rdi,QWORD PTR [rdx+0x20]
  401ae0:	mov    QWORD PTR [rsi+rcx*1+0x10],rdi
  401ae5:	mov    rdx,QWORD PTR [rdx+0x28]
  401ae9:	mov    QWORD PTR [rsi+rcx*1+0x18],rdx
  401aee:	jne    401ab8 <__sprintf_chk@plt+0x8c8>
  401af0:	add    rsp,0x8
  401af4:	pop    rbx
  401af5:	pop    rbp
  401af6:	pop    r12
  401af8:	pop    r13
  401afa:	ret    
  401afb:	nop    DWORD PTR [rax+rax*1+0x0]
  401b00:	mov    rax,0x408110
  401b07:	test   rdi,rdi
  401b0a:	push   rbp
  401b0b:	push   rbx
  401b0c:	movzx  r11d,WORD PTR [rax]
  401b10:	je     401bc8 <__sprintf_chk@plt+0x9d8>
  401b16:	mov    r10d,DWORD PTR [rdi+0x14]
  401b1a:	cmp    r10d,0x7e
  401b1e:	je     401b8f <__sprintf_chk@plt+0x99f>
  401b20:	cmp    BYTE PTR [rdi+0x10],0x0
  401b24:	jne    401b98 <__sprintf_chk@plt+0x9a8>
  401b26:	mov    rbp,0x408720
  401b2d:	movzx  r9d,WORD PTR [rbp+0x0]
  401b32:	test   r9w,r9w
  401b36:	jle    401c29 <__sprintf_chk@plt+0xa39>
  401b3c:	mov    rbx,0x408620
  401b43:	xor    edx,edx
  401b45:	xor    eax,eax
  401b47:	mov    rcx,rbx
  401b4a:	nop    WORD PTR [rax+rax*1+0x0]
  401b50:	mov    rsi,QWORD PTR [rcx]
  401b53:	movsxd r8,edx
  401b56:	test   rsi,rsi
  401b59:	je     401b61 <__sprintf_chk@plt+0x971>
  401b5b:	cmp    r10d,DWORD PTR [rsi+0x14]
  401b5f:	je     401bb0 <__sprintf_chk@plt+0x9c0>
  401b61:	add    eax,0x1
  401b64:	add    rdx,0x1
  401b68:	add    rcx,0x10
  401b6c:	cmp    r9w,ax
  401b70:	jne    401b50 <__sprintf_chk@plt+0x960>
  401b72:	movsx  r8d,ax
  401b76:	add    eax,0x1
  401b79:	mov    WORD PTR [rbp+0x0],ax
  401b7d:	movsxd rax,r8d
  401b80:	shl    rax,0x4
  401b84:	add    rax,rbx
  401b87:	mov    QWORD PTR [rax],rdi
  401b8a:	mov    WORD PTR [rax+0x8],r11w
  401b8f:	pop    rbx
  401b90:	pop    rbp
  401b91:	ret    
  401b92:	nop    WORD PTR [rax+rax*1+0x0]
  401b98:	mov    rax,0x408112
  401b9f:	movzx  r11d,WORD PTR [rax]
  401ba3:	jmp    401b26 <__sprintf_chk@plt+0x936>
  401ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  401bb0:	cmp    ax,r9w
  401bb4:	jge    401c21 <__sprintf_chk@plt+0xa31>
  401bb6:	shl    r8,0x4
  401bba:	add    WORD PTR [rbx+r8*1+0x8],r11w
  401bc0:	pop    rbx
  401bc1:	pop    rbp
  401bc2:	ret    
  401bc3:	nop    DWORD PTR [rax+rax*1+0x0]
  401bc8:	mov    rbp,0x408720
  401bcf:	movzx  eax,WORD PTR [rbp+0x0]
  401bd3:	test   ax,ax
  401bd6:	jle    401c3b <__sprintf_chk@plt+0xa4b>
  401bd8:	mov    rbx,0x408620
  401bdf:	xor    r8d,r8d
  401be2:	cmp    QWORD PTR [rbx],0x0
  401be6:	je     401bb6 <__sprintf_chk@plt+0x9c6>
  401be8:	lea    r9d,[rax-0x1]
  401bec:	lea    rcx,[rbx+0x10]
  401bf0:	mov    edx,0x1
  401bf5:	movzx  r9d,r9w
  401bf9:	add    r9,0x1
  401bfd:	jmp    401c13 <__sprintf_chk@plt+0xa23>
  401bff:	nop
  401c00:	mov    rsi,QWORD PTR [rcx]
  401c03:	movsxd r8,edx
  401c06:	add    rcx,0x10
  401c0a:	add    rdx,0x1
  401c0e:	test   rsi,rsi
  401c11:	je     401bb6 <__sprintf_chk@plt+0x9c6>
  401c13:	cmp    r9,rdx
  401c16:	movsx  r8d,dx
  401c1a:	jne    401c00 <__sprintf_chk@plt+0xa10>
  401c1c:	jmp    401b76 <__sprintf_chk@plt+0x986>
  401c21:	mov    eax,r9d
  401c24:	jmp    401b76 <__sprintf_chk@plt+0x986>
  401c29:	mov    eax,r9d
  401c2c:	xor    r8d,r8d
  401c2f:	mov    rbx,0x408620
  401c36:	jmp    401b76 <__sprintf_chk@plt+0x986>
  401c3b:	xor    r8d,r8d
  401c3e:	mov    rbx,0x408620
  401c45:	jmp    401b76 <__sprintf_chk@plt+0x986>
  401c4a:	nop    WORD PTR [rax+rax*1+0x0]
  401c50:	sub    rsp,0x8
  401c54:	mov    r11,0x408720
  401c5b:	movzx  eax,WORD PTR [r11]
  401c5f:	test   ax,ax
  401c62:	je     401d20 <__sprintf_chk@plt+0xb30>
  401c68:	cmp    ax,0x1
  401c6c:	jle    401d3f <__sprintf_chk@plt+0xb4f>
  401c72:	lea    r8d,[rax-0x2]
  401c76:	mov    r10,0x408620
  401c7d:	mov    eax,0x1
  401c82:	xor    r9d,r9d
  401c85:	movzx  r8d,r8w
  401c89:	lea    rcx,[r10+0x18]
  401c8d:	add    r8,0x2
  401c91:	jmp    401ca8 <__sprintf_chk@plt+0xab8>
  401c93:	nop    DWORD PTR [rax+rax*1+0x0]
  401c98:	add    rax,0x1
  401c9c:	add    rcx,0x10
  401ca0:	movsxd rdi,esi
  401ca3:	cmp    rax,r8
  401ca6:	je     401cd1 <__sprintf_chk@plt+0xae1>
  401ca8:	movsx  rdx,r9w
  401cac:	movsxd rdi,eax
  401caf:	mov    rsi,rdx
  401cb2:	shl    rdx,0x4
  401cb6:	movzx  edx,WORD PTR [r10+rdx*1+0x8]
  401cbc:	cmp    WORD PTR [rcx],dx
  401cbf:	jle    401c98 <__sprintf_chk@plt+0xaa8>
  401cc1:	mov    r9d,eax
  401cc4:	add    rax,0x1
  401cc8:	add    rcx,0x10
  401ccc:	cmp    rax,r8
  401ccf:	jne    401ca8 <__sprintf_chk@plt+0xab8>
  401cd1:	shl    rdi,0x4
  401cd5:	xor    eax,eax
  401cd7:	add    rdi,r10
  401cda:	mov    WORD PTR [r11],ax
  401cde:	xor    eax,eax
  401ce0:	mov    rdx,QWORD PTR [rdi]
  401ce3:	test   rdx,rdx
  401ce6:	je     401d12 <__sprintf_chk@plt+0xb22>
  401ce8:	mov    rax,0x40c630
  401cef:	xor    esi,esi
  401cf1:	mov    edx,DWORD PTR [rdx+0x14]
  401cf4:	movzx  eax,WORD PTR [rax]
  401cf7:	cmp    WORD PTR [rdi+0x8],ax
  401cfb:	mov    rdi,0x4085e0
  401d02:	setle  sil
  401d06:	xor    eax,eax
  401d08:	call   403240 <__sprintf_chk@plt+0x2050>
  401d0d:	mov    eax,0x1
  401d12:	add    rsp,0x8
  401d16:	ret    
  401d17:	nop    WORD PTR [rax+rax*1+0x0]
  401d20:	mov    rdi,0x4085e0
  401d27:	xor    eax,eax
  401d29:	mov    edx,0x7e
  401d2e:	xor    esi,esi
  401d30:	call   403240 <__sprintf_chk@plt+0x2050>
  401d35:	mov    eax,0x1
  401d3a:	add    rsp,0x8
  401d3e:	ret    
  401d3f:	xor    edi,edi
  401d41:	mov    r10,0x408620
  401d48:	jmp    401cd1 <__sprintf_chk@plt+0xae1>
  401d4a:	nop    WORD PTR [rax+rax*1+0x0]
  401d50:	push   r12
  401d52:	push   rbp
  401d53:	push   rbx
  401d54:	mov    r12,QWORD PTR [rdi]
  401d57:	test   r12,r12
  401d5a:	je     401def <__sprintf_chk@plt+0xbff>
  401d60:	mov    rbp,0x408114
  401d67:	nop    WORD PTR [rax+rax*1+0x0]
  401d70:	xor    ebx,ebx
  401d72:	cmp    WORD PTR [rbp+0x0],0x0
  401d77:	jg     401dae <__sprintf_chk@plt+0xbbe>
  401d79:	jmp    401dda <__sprintf_chk@plt+0xbea>
  401d7b:	nop    DWORD PTR [rax+rax*1+0x0]
  401d80:	movsx  rcx,bx
  401d84:	lea    rsi,[rdx+0x1]
  401d88:	add    ebx,0x1
  401d8b:	shl    rcx,0x5
  401d8f:	add    rcx,0x4083c0
  401d96:	mov    rcx,QWORD PTR [rcx+0x10]
  401d9a:	mov    QWORD PTR [rax],rsi
  401d9d:	xor    eax,eax
  401d9f:	mov    rdi,QWORD PTR [rcx+rdx*8]
  401da3:	call   401b00 <__sprintf_chk@plt+0x910>
  401da8:	cmp    WORD PTR [rbp+0x0],bx
  401dac:	jle    401dda <__sprintf_chk@plt+0xbea>
  401dae:	movsx  rax,bx
  401db2:	lea    rdx,[rax+rax*2]
  401db6:	mov    rax,QWORD PTR [r12+0x10]
  401dbb:	lea    rax,[rax+rdx*8]
  401dbf:	mov    rdx,QWORD PTR [rax]
  401dc2:	cmp    rdx,QWORD PTR [rax+0x8]
  401dc6:	jle    401d80 <__sprintf_chk@plt+0xb90>
  401dc8:	xor    edi,edi
  401dca:	xor    eax,eax
  401dcc:	add    ebx,0x1
  401dcf:	call   401b00 <__sprintf_chk@plt+0x910>
  401dd4:	cmp    WORD PTR [rbp+0x0],bx
  401dd8:	jg     401dae <__sprintf_chk@plt+0xbbe>
  401dda:	xor    eax,eax
  401ddc:	call   401c50 <__sprintf_chk@plt+0xa60>
  401de1:	test   al,al
  401de3:	jne    401d70 <__sprintf_chk@plt+0xb80>
  401de5:	mov    r12,QWORD PTR [r12+0x8]
  401dea:	test   r12,r12
  401ded:	jne    401d70 <__sprintf_chk@plt+0xb80>
  401def:	pop    rbx
  401df0:	pop    rbp
  401df1:	pop    r12
  401df3:	ret    
  401df4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401dfe:	xchg   ax,ax
  401e00:	push   r15
  401e02:	push   r14
  401e04:	mov    rax,rsi
  401e07:	push   r13
  401e09:	push   r12
  401e0b:	shl    rax,0x3
  401e0f:	push   rbp
  401e10:	push   rbx
  401e11:	sub    rsp,0x28
  401e15:	mov    QWORD PTR [rsp+0x8],rdi
  401e1a:	mov    QWORD PTR [rsp+0x10],rsi
  401e1f:	mov    QWORD PTR [rsp+0x18],rax
  401e24:	mov    rdx,QWORD PTR [rsp+0x8]
  401e29:	mov    rcx,QWORD PTR [rsp+0x10]
  401e2e:	mov    rax,QWORD PTR [rip+0x6453]        # 408288 <error@@Base+0x4638>
  401e35:	cmp    rdx,rcx
  401e38:	mov    r13,rdx
  401e3b:	mov    rbx,rcx
  401e3e:	mov    r12,QWORD PTR [rax+rdx*8]
  401e42:	jge    401f9f <__sprintf_chk@plt+0xdaf>
  401e48:	nop    DWORD PTR [rax+rax*1+0x0]
  401e50:	lea    rbp,[rbx*8+0x0]
  401e58:	jmp    401e67 <__sprintf_chk@plt+0xc77>
  401e5a:	nop    WORD PTR [rax+rax*1+0x0]
  401e60:	mov    rax,QWORD PTR [rip+0x6421]        # 408288 <error@@Base+0x4638>
  401e67:	mov    rsi,QWORD PTR [rax+rbp*1]
  401e6b:	mov    rdi,r12
  401e6e:	xor    eax,eax
  401e70:	call   QWORD PTR [rip+0x640a]        # 408280 <error@@Base+0x4630>
  401e76:	test   eax,eax
  401e78:	jns    401ed8 <__sprintf_chk@plt+0xce8>
  401e7a:	sub    rbx,0x1
  401e7e:	sub    rbp,0x8
  401e82:	cmp    rbx,r13
  401e85:	jg     401e60 <__sprintf_chk@plt+0xc70>
  401e87:	jne    401ed0 <__sprintf_chk@plt+0xce0>
  401e89:	mov    rax,QWORD PTR [rip+0x63f8]        # 408288 <error@@Base+0x4638>
  401e90:	mov    r15,rbx
  401e93:	lea    rsi,[rax+r15*8]
  401e97:	mov    QWORD PTR [rsi],r12
  401e9a:	lea    rsi,[r15-0x1]
  401e9e:	cmp    QWORD PTR [rsp+0x8],rsi
  401ea3:	jl     401f7f <__sprintf_chk@plt+0xd8f>
  401ea9:	lea    rax,[rbx+0x1]
  401ead:	cmp    rax,QWORD PTR [rsp+0x10]
  401eb2:	mov    QWORD PTR [rsp+0x8],rax
  401eb7:	jl     401e24 <__sprintf_chk@plt+0xc34>
  401ebd:	add    rsp,0x28
  401ec1:	pop    rbx
  401ec2:	pop    rbp
  401ec3:	pop    r12
  401ec5:	pop    r13
  401ec7:	pop    r14
  401ec9:	pop    r15
  401ecb:	ret    
  401ecc:	nop    DWORD PTR [rax+0x0]
  401ed0:	lea    rbp,[rbx*8+0x0]
  401ed8:	mov    rax,QWORD PTR [rip+0x63a9]        # 408288 <error@@Base+0x4638>
  401edf:	lea    r15,[r13+0x1]
  401ee3:	lea    rcx,[r13*8+0x0]
  401eeb:	cmp    r15,rbx
  401eee:	lea    rsi,[rax+rbp*1]
  401ef2:	mov    rdi,QWORD PTR [rsi]
  401ef5:	mov    QWORD PTR [rax+r13*8],rdi
  401ef9:	jge    401f90 <__sprintf_chk@plt+0xda0>
  401eff:	lea    r14,[rcx+0x8]
  401f03:	jmp    401f1c <__sprintf_chk@plt+0xd2c>
  401f05:	nop    DWORD PTR [rax]
  401f08:	add    r15,0x1
  401f0c:	add    r14,0x8
  401f10:	cmp    r15,rbx
  401f13:	je     401f60 <__sprintf_chk@plt+0xd70>
  401f15:	mov    rax,QWORD PTR [rip+0x636c]        # 408288 <error@@Base+0x4638>
  401f1c:	mov    rsi,QWORD PTR [rax+r14*1]
  401f20:	mov    rdi,r12
  401f23:	xor    eax,eax
  401f25:	call   QWORD PTR [rip+0x6355]        # 408280 <error@@Base+0x4630>
  401f2b:	test   eax,eax
  401f2d:	jg     401f08 <__sprintf_chk@plt+0xd18>
  401f2f:	mov    rax,QWORD PTR [rip+0x6352]        # 408288 <error@@Base+0x4638>
  401f36:	mov    r13,r15
  401f39:	lea    rsi,[rax+rbp*1]
  401f3d:	mov    rcx,QWORD PTR [rax+r14*1]
  401f41:	sub    rbx,0x1
  401f45:	cmp    rbx,r15
  401f48:	mov    QWORD PTR [rsi],rcx
  401f4b:	jg     401e50 <__sprintf_chk@plt+0xc60>
  401f51:	mov    r15,rbx
  401f54:	mov    rbx,r13
  401f57:	jmp    401e93 <__sprintf_chk@plt+0xca3>
  401f5c:	nop    DWORD PTR [rax+0x0]
  401f60:	mov    rsi,rbp
  401f63:	add    rsi,QWORD PTR [rip+0x631e]        # 408288 <error@@Base+0x4638>
  401f6a:	mov    QWORD PTR [rsi],r12
  401f6d:	lea    rsi,[r15-0x1]
  401f71:	cmp    QWORD PTR [rsp+0x8],rsi
  401f76:	mov    rbx,r15
  401f79:	jge    401ea9 <__sprintf_chk@plt+0xcb9>
  401f7f:	mov    rdi,QWORD PTR [rsp+0x8]
  401f84:	xor    eax,eax
  401f86:	call   401e00 <__sprintf_chk@plt+0xc10>
  401f8b:	jmp    401ea9 <__sprintf_chk@plt+0xcb9>
  401f90:	je     401f6a <__sprintf_chk@plt+0xd7a>
  401f92:	lea    r14,[r15*8+0x0]
  401f9a:	mov    r13,r15
  401f9d:	jmp    401f3d <__sprintf_chk@plt+0xd4d>
  401f9f:	mov    rdx,QWORD PTR [rsp+0x18]
  401fa4:	mov    r15,rcx
  401fa7:	mov    rbx,r13
  401faa:	lea    rsi,[rax+rdx*1]
  401fae:	jmp    401e97 <__sprintf_chk@plt+0xca7>
  401fb3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401fbe:	xchg   ax,ax
  401fc0:	cmp    rdi,0x1
  401fc4:	jle    401fe8 <__sprintf_chk@plt+0xdf8>
  401fc6:	mov    QWORD PTR [rip+0x62bb],rsi        # 408288 <error@@Base+0x4638>
  401fcd:	lea    rsi,[rdi-0x1]
  401fd1:	xor    eax,eax
  401fd3:	xor    edi,edi
  401fd5:	mov    QWORD PTR [rip+0x62a4],rdx        # 408280 <error@@Base+0x4630>
  401fdc:	jmp    401e00 <__sprintf_chk@plt+0xc10>
  401fe1:	nop    DWORD PTR [rax+0x0]
  401fe8:	repz ret 
  401fea:	nop    WORD PTR [rax+rax*1+0x0]
  401ff0:	push   r15
  401ff2:	push   r14
  401ff4:	mov    rax,rcx
  401ff7:	push   r13
  401ff9:	push   r12
  401ffb:	sub    rax,rdi
  401ffe:	push   rbp
  401fff:	push   rbx
  402000:	mov    r14,QWORD PTR [rsp+0x38]
  402005:	mov    QWORD PTR [rsp-0x18],r9
  40200a:	mov    QWORD PTR [rsp-0x20],rax
  40200f:	mov    r9,r14
  402012:	sub    r9,rdi
  402015:	cmp    rax,rdx
  402018:	jl     4021af <__sprintf_chk@plt+0xfbf>
  40201e:	lea    rax,[rdx+0x1]
  402022:	lea    r15,[rsi+rdx*8]
  402026:	mov    QWORD PTR [rsp-0x38],rdi
  40202b:	mov    QWORD PTR [rsp-0x48],rax
  402030:	mov    rax,QWORD PTR [rsp-0x18]
  402035:	mov    r10,r15
  402038:	lea    rax,[r8+rax*8]
  40203c:	mov    QWORD PTR [rsp-0x8],rax
  402041:	nop    DWORD PTR [rax+0x0]
  402048:	mov    rax,QWORD PTR [rsp-0x48]
  40204d:	sub    rax,0x1
  402051:	cmp    QWORD PTR [rsp-0x18],r9
  402056:	mov    QWORD PTR [rsp-0x28],rax
  40205b:	jg     4021a3 <__sprintf_chk@plt+0xfb3>
  402061:	mov    rax,QWORD PTR [r10]
  402064:	mov    rbx,QWORD PTR [rsp-0x8]
  402069:	mov    QWORD PTR [rsp-0x40],rsi
  40206e:	mov    r12d,DWORD PTR [rax+0x14]
  402072:	mov    rax,QWORD PTR [rsp-0x48]
  402077:	mov    QWORD PTR [rsp-0x10],rax
  40207c:	mov    rax,QWORD PTR [rsp-0x18]
  402081:	cmp    r12d,0x7e
  402085:	setne  r15b
  402089:	lea    r11,[rax+0x1]
  40208d:	nop    DWORD PTR [rax]
  402090:	mov    rax,QWORD PTR [rbx]
  402093:	lea    r13,[r11-0x1]
  402097:	mov    rbp,r11
  40209a:	cmp    DWORD PTR [rax+0x14],r12d
  40209e:	jne    40215c <__sprintf_chk@plt+0xf6c>
  4020a4:	test   r15b,r15b
  4020a7:	je     40215c <__sprintf_chk@plt+0xf6c>
  4020ad:	mov    rdi,QWORD PTR [rsp-0x48]
  4020b2:	cmp    rcx,rdi
  4020b5:	jl     40219c <__sprintf_chk@plt+0xfac>
  4020bb:	cmp    r14,r11
  4020be:	jl     40219c <__sprintf_chk@plt+0xfac>
  4020c4:	mov    rax,QWORD PTR [r10+0x8]
  4020c8:	mov    rdx,QWORD PTR [rbx+0x8]
  4020cc:	mov    eax,DWORD PTR [rax+0x14]
  4020cf:	cmp    DWORD PTR [rdx+0x14],eax
  4020d2:	jne    40219c <__sprintf_chk@plt+0xfac>
  4020d8:	cmp    eax,0x7e
  4020db:	je     40219c <__sprintf_chk@plt+0xfac>
  4020e1:	mov    rdx,r11
  4020e4:	mov    rax,rdi
  4020e7:	mov    QWORD PTR [rsp-0x30],r9
  4020ec:	mov    rsi,QWORD PTR [rsp-0x40]
  4020f1:	jmp    402113 <__sprintf_chk@plt+0xf23>
  4020f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4020f8:	cmp    r14,rdx
  4020fb:	jl     402120 <__sprintf_chk@plt+0xf30>
  4020fd:	mov    rdi,QWORD PTR [rsi+rax*8]
  402101:	mov    r9,QWORD PTR [r8+rdx*8]
  402105:	mov    edi,DWORD PTR [rdi+0x14]
  402108:	cmp    DWORD PTR [r9+0x14],edi
  40210c:	jne    402120 <__sprintf_chk@plt+0xf30>
  40210e:	cmp    edi,0x7e
  402111:	je     402120 <__sprintf_chk@plt+0xf30>
  402113:	add    rax,0x1
  402117:	add    rdx,0x1
  40211b:	cmp    rcx,rax
  40211e:	jge    4020f8 <__sprintf_chk@plt+0xf08>
  402120:	mov    r9,QWORD PTR [rsp-0x30]
  402125:	mov    QWORD PTR [rsp-0x40],rsi
  40212a:	mov    rdi,QWORD PTR [rsp-0x28]
  40212f:	sub    rax,rdi
  402132:	mov    rdx,rax
  402135:	sub    rdx,QWORD PTR [rsp-0x38]
  40213a:	test   rdx,rdx
  40213d:	jle    40215c <__sprintf_chk@plt+0xf6c>
  40213f:	mov    rsi,QWORD PTR [rsp+0x40]
  402144:	sub    QWORD PTR [rsp-0x20],rdx
  402149:	sub    r9,rdx
  40214c:	mov    QWORD PTR [rsp-0x38],rax
  402151:	mov    QWORD PTR [rsi],rdi
  402154:	mov    rsi,QWORD PTR [rsp+0x48]
  402159:	mov    QWORD PTR [rsi],r13
  40215c:	add    rbx,0x8
  402160:	add    r11,0x1
  402164:	cmp    r9,rbp
  402167:	jge    402090 <__sprintf_chk@plt+0xea0>
  40216d:	mov    rsi,QWORD PTR [rsp-0x40]
  402172:	add    QWORD PTR [rsp-0x48],0x1
  402178:	add    r10,0x8
  40217c:	mov    rbx,QWORD PTR [rsp-0x10]
  402181:	cmp    QWORD PTR [rsp-0x20],rbx
  402186:	jge    402048 <__sprintf_chk@plt+0xe58>
  40218c:	mov    rax,QWORD PTR [rsp-0x38]
  402191:	pop    rbx
  402192:	pop    rbp
  402193:	pop    r12
  402195:	pop    r13
  402197:	pop    r14
  402199:	pop    r15
  40219b:	ret    
  40219c:	mov    rax,QWORD PTR [rsp-0x48]
  4021a1:	jmp    40212a <__sprintf_chk@plt+0xf3a>
  4021a3:	mov    rax,QWORD PTR [rsp-0x48]
  4021a8:	mov    QWORD PTR [rsp-0x10],rax
  4021ad:	jmp    402172 <__sprintf_chk@plt+0xf82>
  4021af:	mov    QWORD PTR [rsp-0x38],rdi
  4021b4:	mov    rax,QWORD PTR [rsp-0x38]
  4021b9:	pop    rbx
  4021ba:	pop    rbp
  4021bb:	pop    r12
  4021bd:	pop    r13
  4021bf:	pop    r14
  4021c1:	pop    r15
  4021c3:	ret    
  4021c4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021cf:	nop
  4021d0:	test   rsi,rsi
  4021d3:	je     402240 <__sprintf_chk@plt+0x1050>
  4021d5:	mov    r8,QWORD PTR [rsi+0x18]
  4021d9:	lea    rcx,[rdi-0x1]
  4021dd:	lea    r10,[rdi+0x1]
  4021e1:	cmp    rcx,r8
  4021e4:	cmovl  rcx,r8
  4021e8:	cmp    QWORD PTR [rsi+0x20],r10
  4021ec:	cmovle r10,QWORD PTR [rsi+0x20]
  4021f1:	cmp    rcx,r10
  4021f4:	jg     402243 <__sprintf_chk@plt+0x1053>
  4021f6:	mov    r11,QWORD PTR [rsi+0x28]
  4021fa:	add    r10,0x1
  4021fe:	xor    eax,eax
  402200:	jmp    40220c <__sprintf_chk@plt+0x101c>
  402202:	nop    WORD PTR [rax+rax*1+0x0]
  402208:	mov    r8,QWORD PTR [rsi+0x18]
  40220c:	mov    r9,rcx
  40220f:	sub    r9,r8
  402212:	movzx  r8d,WORD PTR [r11+r9*2]
  402217:	xor    r9d,r9d
  40221a:	cmp    rdi,rcx
  40221d:	setle  r9b
  402221:	add    r8,r9
  402224:	cmp    r8,rax
  402227:	jl     40222f <__sprintf_chk@plt+0x103f>
  402229:	mov    QWORD PTR [rdx],rcx
  40222c:	mov    rax,r8
  40222f:	add    rcx,0x1
  402233:	cmp    rcx,r10
  402236:	jne    402208 <__sprintf_chk@plt+0x1018>
  402238:	repz ret 
  40223a:	nop    WORD PTR [rax+rax*1+0x0]
  402240:	xor    eax,eax
  402242:	ret    
  402243:	lea    rdi,[rip+0x2e66]        # 4050b0 <error@@Base+0x1460>
  40224a:	sub    rsp,0x8
  40224e:	xor    eax,eax
  402250:	call   403c50 <error@@Base>
  402255:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402260:	push   rbp
  402261:	push   rbx
  402262:	mov    esi,0x20
  402267:	mov    ebx,edi
  402269:	xor    eax,eax
  40226b:	mov    edi,0x1
  402270:	sub    rsp,0x8
  402274:	call   403c90 <error@@Base+0x40>
  402279:	movsx  rdi,bx
  40227d:	mov    rbp,rax
  402280:	mov    esi,0x18
  402285:	xor    eax,eax
  402287:	call   403c90 <error@@Base+0x40>
  40228c:	mov    QWORD PTR [rbp+0x10],rax
  402290:	add    rsp,0x8
  402294:	mov    rax,rbp
  402297:	pop    rbx
  402298:	pop    rbp
  402299:	ret    
  40229a:	nop    WORD PTR [rax+rax*1+0x0]
  4022a0:	push   r15
  4022a2:	push   r14
  4022a4:	xor    eax,eax
  4022a6:	push   r13
  4022a8:	push   r12
  4022aa:	mov    r14d,esi
  4022ad:	push   rbp
  4022ae:	push   rbx
  4022af:	mov    r13,rdi
  4022b2:	mov    rbx,rdx
  4022b5:	sub    rsp,0x8
  4022b9:	call   404020 <error@@Base+0x3d0>
  4022be:	xor    eax,eax
  4022c0:	movsx  edi,r14w
  4022c4:	call   402260 <__sprintf_chk@plt+0x1070>
  4022c9:	test   r14w,r14w
  4022cd:	mov    r12,rax
  4022d0:	jle    40238b <__sprintf_chk@plt+0x119b>
  4022d6:	sub    r14d,0x1
  4022da:	xor    ebp,ebp
  4022dc:	movzx  r14d,r14w
  4022e0:	lea    r15,[r14+r14*2+0x3]
  4022e5:	shl    r15,0x3
  4022e9:	nop    DWORD PTR [rax+0x0]
  4022f0:	mov    rdi,rbx
  4022f3:	xor    eax,eax
  4022f5:	add    rbx,0x20
  4022f9:	call   4041f0 <error@@Base+0x5a0>
  4022fe:	mov    rdi,QWORD PTR [r12+0x10]
  402303:	lea    rax,[rdi+rbp*1]
  402307:	add    rbp,0x18
  40230b:	mov    QWORD PTR [rax],0x0
  402312:	mov    rdx,QWORD PTR [rbx-0x8]
  402316:	cmp    rbp,r15
  402319:	lea    rcx,[rdx-0x1]
  40231d:	mov    QWORD PTR [rax+0x10],rdx
  402321:	mov    QWORD PTR [rax+0x8],rcx
  402325:	jne    4022f0 <__sprintf_chk@plt+0x1100>
  402327:	cmp    QWORD PTR [rdi+0x10],0x0
  40232c:	jg     402370 <__sprintf_chk@plt+0x1180>
  40232e:	lea    rdx,[r14+r14*2]
  402332:	lea    rax,[rdi+0x28]
  402336:	lea    rdx,[rdi+rdx*8+0x28]
  40233b:	jmp    40234b <__sprintf_chk@plt+0x115b>
  40233d:	nop    DWORD PTR [rax]
  402340:	add    rax,0x18
  402344:	cmp    QWORD PTR [rax-0x18],0x0
  402349:	jg     402370 <__sprintf_chk@plt+0x1180>
  40234b:	cmp    rdx,rax
  40234e:	jne    402340 <__sprintf_chk@plt+0x1150>
  402350:	call   401040 <free@plt>
  402355:	add    rsp,0x8
  402359:	mov    rdi,r12
  40235c:	pop    rbx
  40235d:	pop    rbp
  40235e:	pop    r12
  402360:	pop    r13
  402362:	pop    r14
  402364:	pop    r15
  402366:	jmp    401040 <free@plt>
  40236b:	nop    DWORD PTR [rax+rax*1+0x0]
  402370:	add    rsp,0x8
  402374:	mov    rsi,r12
  402377:	mov    rdi,r13
  40237a:	pop    rbx
  40237b:	pop    rbp
  40237c:	pop    r12
  40237e:	pop    r13
  402380:	pop    r14
  402382:	pop    r15
  402384:	xor    eax,eax
  402386:	jmp    404040 <error@@Base+0x3f0>
  40238b:	mov    rdi,QWORD PTR [rax+0x10]
  40238f:	jmp    402350 <__sprintf_chk@plt+0x1160>
  402391:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40239c:	nop    DWORD PTR [rax+0x0]
  4023a0:	push   r15
  4023a2:	push   r14
  4023a4:	movsx  r15d,si
  4023a8:	push   r13
  4023aa:	push   r12
  4023ac:	xor    eax,eax
  4023ae:	push   rbp
  4023af:	push   rbx
  4023b0:	mov    r14d,esi
  4023b3:	mov    rbp,rdx
  4023b6:	mov    rbx,rcx
  4023b9:	mov    r13d,esi
  4023bc:	sub    rsp,0x28
  4023c0:	mov    QWORD PTR [rsp+0x10],rdi
  4023c5:	mov    edi,r15d
  4023c8:	mov    QWORD PTR [rsp+0x18],r8
  4023cd:	mov    QWORD PTR [rsp+0x8],r9
  4023d2:	call   402260 <__sprintf_chk@plt+0x1070>
  4023d7:	mov    edi,r15d
  4023da:	mov    r12,rax
  4023dd:	xor    eax,eax
  4023df:	call   402260 <__sprintf_chk@plt+0x1070>
  4023e4:	test   r14w,r14w
  4023e8:	mov    r15,rax
  4023eb:	jle    402550 <__sprintf_chk@plt+0x1360>
  4023f1:	mov    rdi,QWORD PTR [r12+0x10]
  4023f6:	sub    r14d,0x1
  4023fa:	mov    rax,QWORD PTR [rbp+0x10]
  4023fe:	movzx  r14d,r14w
  402402:	mov    rdx,QWORD PTR [r15+0x10]
  402406:	mov    r8,QWORD PTR [rsp+0x18]
  40240b:	mov    rcx,rbx
  40240e:	lea    rbx,[rbx+r14*8+0x8]
  402413:	mov    r9,rdi
  402416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402420:	mov    rsi,QWORD PTR [rax]
  402423:	mov    r11,r8
  402426:	add    r11,QWORD PTR [rcx]
  402429:	add    rcx,0x8
  40242d:	add    rax,0x18
  402431:	add    r9,0x18
  402435:	add    rdx,0x18
  402439:	mov    QWORD PTR [r9-0x18],rsi
  40243d:	mov    rsi,QWORD PTR [rcx-0x8]
  402441:	lea    r10,[r11-0x1]
  402445:	sub    rsi,0x1
  402449:	mov    QWORD PTR [r9-0x10],rsi
  40244d:	mov    rsi,QWORD PTR [rcx-0x8]
  402451:	sub    rsi,QWORD PTR [rax-0x18]
  402455:	mov    QWORD PTR [r9-0x8],rsi
  402459:	mov    QWORD PTR [rdx-0x18],r11
  40245d:	mov    rsi,QWORD PTR [rax-0x10]
  402461:	mov    QWORD PTR [rdx-0x10],rsi
  402465:	mov    rsi,QWORD PTR [rax-0x10]
  402469:	sub    rsi,r10
  40246c:	mov    QWORD PTR [rdx-0x8],rsi
  402470:	mov    rsi,QWORD PTR [rcx-0x8]
  402474:	mov    QWORD PTR [rax-0x10],r10
  402478:	mov    QWORD PTR [rax-0x8],r8
  40247c:	mov    QWORD PTR [rax-0x18],rsi
  402480:	cmp    rcx,rbx
  402483:	jne    402420 <__sprintf_chk@plt+0x1230>
  402485:	cmp    QWORD PTR [rdi+0x10],0x0
  40248a:	mov    rax,QWORD PTR [rsp+0x8]
  40248f:	mov    QWORD PTR [rbp+0x18],rax
  402493:	jg     4024d0 <__sprintf_chk@plt+0x12e0>
  402495:	lea    rdx,[r14+r14*2]
  402499:	lea    rax,[rdi+0x28]
  40249d:	lea    rdx,[rdi+rdx*8+0x28]
  4024a2:	jmp    4024b3 <__sprintf_chk@plt+0x12c3>
  4024a4:	nop    DWORD PTR [rax+0x0]
  4024a8:	add    rax,0x18
  4024ac:	cmp    QWORD PTR [rax-0x18],0x0
  4024b1:	jg     4024d0 <__sprintf_chk@plt+0x12e0>
  4024b3:	cmp    rdx,rax
  4024b6:	jne    4024a8 <__sprintf_chk@plt+0x12b8>
  4024b8:	call   401040 <free@plt>
  4024bd:	mov    rdi,r12
  4024c0:	call   401040 <free@plt>
  4024c5:	jmp    4024e2 <__sprintf_chk@plt+0x12f2>
  4024c7:	nop    WORD PTR [rax+rax*1+0x0]
  4024d0:	mov    rdi,QWORD PTR [rsp+0x10]
  4024d5:	mov    rdx,rbp
  4024d8:	mov    rsi,r12
  4024db:	xor    eax,eax
  4024dd:	call   4040e0 <error@@Base+0x490>
  4024e2:	mov    rdi,QWORD PTR [r15+0x10]
  4024e6:	xor    eax,eax
  4024e8:	cmp    QWORD PTR [rdi+0x10],0x0
  4024ed:	lea    rdx,[rdi+0x28]
  4024f1:	jle    402503 <__sprintf_chk@plt+0x1313>
  4024f3:	jmp    402530 <__sprintf_chk@plt+0x1340>
  4024f5:	nop    DWORD PTR [rax]
  4024f8:	add    rdx,0x18
  4024fc:	cmp    QWORD PTR [rdx-0x18],0x0
  402501:	jg     402530 <__sprintf_chk@plt+0x1340>
  402503:	add    eax,0x1
  402506:	cmp    r13w,ax
  40250a:	jg     4024f8 <__sprintf_chk@plt+0x1308>
  40250c:	call   401040 <free@plt>
  402511:	add    rsp,0x28
  402515:	mov    rdi,r15
  402518:	pop    rbx
  402519:	pop    rbp
  40251a:	pop    r12
  40251c:	pop    r13
  40251e:	pop    r14
  402520:	pop    r15
  402522:	jmp    401040 <free@plt>
  402527:	nop    WORD PTR [rax+rax*1+0x0]
  402530:	mov    rdi,QWORD PTR [rsp+0x10]
  402535:	add    rsp,0x28
  402539:	mov    rdx,r15
  40253c:	pop    rbx
  40253d:	mov    rsi,rbp
  402540:	xor    eax,eax
  402542:	pop    rbp
  402543:	pop    r12
  402545:	pop    r13
  402547:	pop    r14
  402549:	pop    r15
  40254b:	jmp    404130 <error@@Base+0x4e0>
  402550:	mov    rax,QWORD PTR [rsp+0x8]
  402555:	mov    rdi,QWORD PTR [r12+0x10]
  40255a:	mov    QWORD PTR [rbp+0x18],rax
  40255e:	call   401040 <free@plt>
  402563:	mov    rdi,r12
  402566:	call   401040 <free@plt>
  40256b:	mov    rdi,QWORD PTR [r15+0x10]
  40256f:	jmp    40250c <__sprintf_chk@plt+0x131c>
  402571:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40257c:	nop    DWORD PTR [rax+0x0]
  402580:	push   r15
  402582:	push   r14
  402584:	mov    r14,rdx
  402587:	push   r13
  402589:	push   r12
  40258b:	push   rbp
  40258c:	push   rbx
  40258d:	mov    rbp,rcx
  402590:	sub    rsp,0xc8
  402597:	mov    rax,QWORD PTR fs:0x28
  4025a0:	mov    QWORD PTR [rsp+0xb8],rax
  4025a8:	xor    eax,eax
  4025aa:	test   si,si
  4025ad:	mov    QWORD PTR [rsp+0x10],rdi
  4025b2:	mov    DWORD PTR [rsp+0xc],esi
  4025b6:	jle    4026cf <__sprintf_chk@plt+0x14df>
  4025bc:	mov    rcx,QWORD PTR [rcx+0x10]
  4025c0:	mov    r8,QWORD PTR [rcx+0x10]
  4025c4:	test   r8,r8
  4025c7:	je     402759 <__sprintf_chk@plt+0x1569>
  4025cd:	movzx  edi,WORD PTR [rsp+0xc]
  4025d2:	lea    rax,[rcx+0x28]
  4025d6:	lea    edx,[rdi-0x1]
  4025d9:	movzx  edx,dx
  4025dc:	lea    rdx,[rdx+rdx*2]
  4025e0:	lea    rdx,[rcx+rdx*8+0x28]
  4025e5:	jmp    4025ff <__sprintf_chk@plt+0x140f>
  4025e7:	nop    WORD PTR [rax+rax*1+0x0]
  4025f0:	add    rax,0x18
  4025f4:	cmp    QWORD PTR [rax-0x18],0x0
  4025f9:	je     402759 <__sprintf_chk@plt+0x1569>
  4025ff:	cmp    rax,rdx
  402602:	jne    4025f0 <__sprintf_chk@plt+0x1400>
  402604:	cmp    WORD PTR [rsp+0xc],0x1
  40260a:	mov    rdx,QWORD PTR [rcx]
  40260d:	lea    rax,[rsp+0x30]
  402612:	mov    QWORD PTR [rsp],rax
  402616:	mov    QWORD PTR [rsp+0x30],rdx
  40261b:	jle    4026e8 <__sprintf_chk@plt+0x14f8>
  402621:	movzx  eax,WORD PTR [rsp+0xc]
  402626:	mov    r15d,0x8
  40262c:	mov    rdi,r14
  40262f:	lea    rbx,[rsp+0x38]
  402634:	lea    r12,[rsp+0x28]
  402639:	mov    r14,r15
  40263c:	mov    r15,rdi
  40263f:	sub    eax,0x2
  402642:	movzx  eax,ax
  402645:	lea    r13,[rax*8+0x10]
  40264d:	mov    rax,r8
  402650:	lea    rdi,[r14+r14*2]
  402654:	mov    rsi,QWORD PTR [r15+0x10]
  402658:	mov    r8,QWORD PTR [r15+r14*4+0x10]
  40265d:	push   rbx
  40265e:	push   r12
  402660:	add    rdi,rcx
  402663:	lea    rcx,[rax+rdx*1-0x1]
  402668:	xor    eax,eax
  40266a:	push   QWORD PTR [rdi+0x8]
  40266d:	mov    r9,QWORD PTR [rdi]
  402670:	xor    edi,edi
  402672:	call   401ff0 <__sprintf_chk@plt+0xe00>
  402677:	add    rsp,0x18
  40267b:	test   rax,rax
  40267e:	je     402759 <__sprintf_chk@plt+0x1569>
  402684:	mov    rcx,QWORD PTR [rsp+0x30]
  402689:	mov    rsi,QWORD PTR [rsp+0x28]
  40268e:	mov    rdx,QWORD PTR [rsp]
  402692:	sub    rsi,rcx
  402695:	test   rsi,rsi
  402698:	jg     4026a3 <__sprintf_chk@plt+0x14b3>
  40269a:	jmp    4026b3 <__sprintf_chk@plt+0x14c3>
  40269c:	nop    DWORD PTR [rax+0x0]
  4026a0:	mov    rcx,QWORD PTR [rdx]
  4026a3:	add    rcx,rsi
  4026a6:	add    rdx,0x8
  4026aa:	mov    QWORD PTR [rdx-0x8],rcx
  4026ae:	cmp    rdx,rbx
  4026b1:	jne    4026a0 <__sprintf_chk@plt+0x14b0>
  4026b3:	add    r14,0x8
  4026b7:	add    rbx,0x8
  4026bb:	cmp    r13,r14
  4026be:	je     40277e <__sprintf_chk@plt+0x158e>
  4026c4:	mov    rcx,QWORD PTR [rbp+0x10]
  4026c8:	mov    rdx,QWORD PTR [rsp+0x30]
  4026cd:	jmp    402650 <__sprintf_chk@plt+0x1460>
  4026cf:	mov    rax,QWORD PTR [rcx+0x10]
  4026d3:	mov    r8,QWORD PTR [rax+0x10]
  4026d7:	mov    rax,QWORD PTR [rax]
  4026da:	mov    QWORD PTR [rsp+0x30],rax
  4026df:	lea    rax,[rsp+0x30]
  4026e4:	mov    QWORD PTR [rsp],rax
  4026e8:	mov    esi,0x8
  4026ed:	mov    edi,0x1
  4026f2:	xor    eax,eax
  4026f4:	mov    QWORD PTR [rsp+0x18],r8
  4026f9:	call   403c90 <error@@Base+0x40>
  4026fe:	movsx  r15d,WORD PTR [rsp+0xc]
  402704:	mov    rbx,QWORD PTR [rsp+0x10]
  402709:	mov    r9,rax
  40270c:	mov    rcx,QWORD PTR [rsp]
  402710:	mov    r8,QWORD PTR [rsp+0x18]
  402715:	xor    eax,eax
  402717:	mov    rdx,rbp
  40271a:	mov    rdi,rbx
  40271d:	mov    esi,r15d
  402720:	call   4023a0 <__sprintf_chk@plt+0x11b0>
  402725:	mov    rcx,QWORD PTR [rbp+0x0]
  402729:	test   rcx,rcx
  40272c:	je     40273e <__sprintf_chk@plt+0x154e>
  40272e:	mov    rdx,r14
  402731:	mov    esi,r15d
  402734:	mov    rdi,rbx
  402737:	xor    eax,eax
  402739:	call   402580 <__sprintf_chk@plt+0x1390>
  40273e:	mov    rcx,QWORD PTR [rbp+0x8]
  402742:	test   rcx,rcx
  402745:	je     402759 <__sprintf_chk@plt+0x1569>
  402747:	mov    rdi,QWORD PTR [rsp+0x10]
  40274c:	mov    rdx,r14
  40274f:	mov    esi,r15d
  402752:	xor    eax,eax
  402754:	call   402580 <__sprintf_chk@plt+0x1390>
  402759:	mov    rax,QWORD PTR [rsp+0xb8]
  402761:	xor    rax,QWORD PTR fs:0x28
  40276a:	jne    402789 <__sprintf_chk@plt+0x1599>
  40276c:	add    rsp,0xc8
  402773:	pop    rbx
  402774:	pop    rbp
  402775:	pop    r12
  402777:	pop    r13
  402779:	pop    r14
  40277b:	pop    r15
  40277d:	ret    
  40277e:	mov    r8,rax
  402781:	mov    r14,r15
  402784:	jmp    4026e8 <__sprintf_chk@plt+0x14f8>
  402789:	call   4010b0 <__stack_chk_fail@plt>
  40278e:	xchg   ax,ax
  402790:	push   r12
  402792:	push   rbp
  402793:	mov    r12,rsi
  402796:	push   rbx
  402797:	mov    rbp,rdi
  40279a:	sub    rsp,0x10
  40279e:	mov    rsi,QWORD PTR [rsi]
  4027a1:	mov    rax,QWORD PTR fs:0x28
  4027aa:	mov    QWORD PTR [rsp+0x8],rax
  4027af:	xor    eax,eax
  4027b1:	mov    rdx,rsp
  4027b4:	call   4021d0 <__sprintf_chk@plt+0xfe0>
  4027b9:	mov    rdi,QWORD PTR [rip+0x5b00]        # 4082c0 <error@@Base+0x4670>
  4027c0:	mov    rbx,rax
  4027c3:	add    rax,rbp
  4027c6:	mov    rcx,QWORD PTR [rip+0x5aeb]        # 4082b8 <error@@Base+0x4668>
  4027cd:	cmp    rbx,rdi
  4027d0:	jge    402917 <__sprintf_chk@plt+0x1727>
  4027d6:	cmp    rax,rcx
  4027d9:	jge    402920 <__sprintf_chk@plt+0x1730>
  4027df:	mov    r9,QWORD PTR [rip+0x5aea]        # 4082d0 <error@@Base+0x4680>
  4027e6:	mov    r8,QWORD PTR [rip+0x5adb]        # 4082c8 <error@@Base+0x4678>
  4027ed:	jmp    4027f9 <__sprintf_chk@plt+0x1609>
  4027ef:	nop
  4027f0:	cmp    rax,rcx
  4027f3:	je     402900 <__sprintf_chk@plt+0x1710>
  4027f9:	mov    rdx,QWORD PTR [r9+rbx*8]
  4027fd:	mov    rsi,QWORD PTR [r8+rax*8]
  402801:	mov    edx,DWORD PTR [rdx+0x14]
  402804:	cmp    DWORD PTR [rsi+0x14],edx
  402807:	jne    402920 <__sprintf_chk@plt+0x1730>
  40280d:	cmp    edx,0x7e
  402810:	je     402920 <__sprintf_chk@plt+0x1730>
  402816:	add    rbx,0x1
  40281a:	add    rax,0x1
  40281e:	cmp    rbx,rdi
  402821:	jne    4027f0 <__sprintf_chk@plt+0x1600>
  402823:	lea    r8,[rbp+0x1]
  402827:	mov    rbx,rdi
  40282a:	mov    QWORD PTR [rip+0x5a77],r8        # 4082a8 <error@@Base+0x4658>
  402831:	cmp    rax,rcx
  402834:	je     402907 <__sprintf_chk@plt+0x1717>
  40283a:	mov    rsi,QWORD PTR [rip+0x5a5f]        # 4082a0 <error@@Base+0x4650>
  402841:	sub    rcx,rbp
  402844:	cmp    rcx,rdi
  402847:	cmovl  rcx,rdi
  40284b:	mov    rax,rcx
  40284e:	add    rax,QWORD PTR [r12+0x10]
  402853:	mov    rcx,QWORD PTR [rip+0x5a56]        # 4082b0 <error@@Base+0x4660>
  40285a:	mov    rdx,rcx
  40285d:	sub    rax,rbx
  402860:	sub    rdx,rax
  402863:	add    rdx,0x1
  402867:	sar    rdx,1
  40286a:	cmp    rdx,r8
  40286d:	jle    402876 <__sprintf_chk@plt+0x1686>
  40286f:	mov    QWORD PTR [rip+0x5a32],rdx        # 4082a8 <error@@Base+0x4658>
  402876:	add    rax,rcx
  402879:	sar    rax,1
  40287c:	cmp    rax,rsi
  40287f:	mov    QWORD PTR [rsp],rax
  402883:	jge    40288c <__sprintf_chk@plt+0x169c>
  402885:	mov    QWORD PTR [rip+0x5a14],rax        # 4082a0 <error@@Base+0x4650>
  40288c:	xor    eax,eax
  40288e:	mov    esi,0x18
  402893:	mov    edi,0x1
  402898:	call   403c90 <error@@Base+0x40>
  40289d:	cmp    QWORD PTR [rip+0x5a73],0x0        # 408318 <error@@Base+0x46c8>
  4028a5:	mov    WORD PTR [rax+0x10],bx
  4028a9:	je     402930 <__sprintf_chk@plt+0x1740>
  4028af:	cmp    rbp,QWORD PTR [r12+0x18]
  4028b4:	jl     4028e8 <__sprintf_chk@plt+0x16f8>
  4028b6:	lea    rdi,[rip+0x5a43]        # 408300 <error@@Base+0x46b0>
  4028bd:	mov    rsi,rax
  4028c0:	mov    QWORD PTR [r12+0x20],rbp
  4028c5:	xor    eax,eax
  4028c7:	call   404090 <error@@Base+0x440>
  4028cc:	mov    rax,QWORD PTR [rsp+0x8]
  4028d1:	xor    rax,QWORD PTR fs:0x28
  4028da:	jne    402950 <__sprintf_chk@plt+0x1760>
  4028dc:	add    rsp,0x10
  4028e0:	pop    rbx
  4028e1:	pop    rbp
  4028e2:	pop    r12
  4028e4:	ret    
  4028e5:	nop    DWORD PTR [rax]
  4028e8:	lea    rdi,[rip+0x5a11]        # 408300 <error@@Base+0x46b0>
  4028ef:	mov    rsi,rax
  4028f2:	mov    QWORD PTR [r12+0x18],rbp
  4028f7:	xor    eax,eax
  4028f9:	call   404040 <error@@Base+0x3f0>
  4028fe:	jmp    4028cc <__sprintf_chk@plt+0x16dc>
  402900:	mov    r8,QWORD PTR [rip+0x59a1]        # 4082a8 <error@@Base+0x4658>
  402907:	lea    rsi,[rbp-0x1]
  40290b:	mov    QWORD PTR [rip+0x598e],rsi        # 4082a0 <error@@Base+0x4650>
  402912:	jmp    402841 <__sprintf_chk@plt+0x1651>
  402917:	je     402823 <__sprintf_chk@plt+0x1633>
  40291d:	nop    DWORD PTR [rax]
  402920:	mov    r8,QWORD PTR [rip+0x5981]        # 4082a8 <error@@Base+0x4658>
  402927:	jmp    402831 <__sprintf_chk@plt+0x1641>
  40292c:	nop    DWORD PTR [rax+0x0]
  402930:	lea    rdi,[rip+0x59c9]        # 408300 <error@@Base+0x46b0>
  402937:	mov    rsi,rax
  40293a:	mov    QWORD PTR [r12+0x20],rbp
  40293f:	mov    QWORD PTR [r12+0x18],rbp
  402944:	xor    eax,eax
  402946:	call   404090 <error@@Base+0x440>
  40294b:	jmp    4028cc <__sprintf_chk@plt+0x16dc>
  402950:	call   4010b0 <__stack_chk_fail@plt>
  402955:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402960:	lea    eax,[rsi-0x2]
  402963:	push   r12
  402965:	push   rbp
  402966:	push   rbx
  402967:	cmp    ax,0xe
  40296b:	ja     4029c6 <__sprintf_chk@plt+0x17d6>
  40296d:	movsx  ebx,si
  402970:	mov    rbp,rdi
  402973:	xor    eax,eax
  402975:	mov    esi,ebx
  402977:	mov    r12,rdx
  40297a:	call   4022a0 <__sprintf_chk@plt+0x10b0>
  40297f:	mov    rcx,QWORD PTR [rbp+0x0]
  402983:	test   rcx,rcx
  402986:	je     4029c1 <__sprintf_chk@plt+0x17d1>
  402988:	xor    eax,eax
  40298a:	mov    rdx,r12
  40298d:	mov    esi,ebx
  40298f:	mov    rdi,rbp
  402992:	call   402580 <__sprintf_chk@plt+0x1390>
  402997:	mov    rax,QWORD PTR [rbp+0x0]
  40299b:	test   rax,rax
  40299e:	je     4029c1 <__sprintf_chk@plt+0x17d1>
  4029a0:	xor    ecx,ecx
  4029a2:	nop    WORD PTR [rax+rax*1+0x0]
  4029a8:	mov    rdx,QWORD PTR [rax+0x18]
  4029ac:	test   rdx,rdx
  4029af:	je     4029b8 <__sprintf_chk@plt+0x17c8>
  4029b1:	add    rcx,0x1
  4029b5:	mov    QWORD PTR [rdx],rcx
  4029b8:	mov    rax,QWORD PTR [rax+0x8]
  4029bc:	test   rax,rax
  4029bf:	jne    4029a8 <__sprintf_chk@plt+0x17b8>
  4029c1:	pop    rbx
  4029c2:	pop    rbp
  4029c3:	pop    r12
  4029c5:	ret    
  4029c6:	lea    rdi,[rip+0x2703]        # 4050d0 <error@@Base+0x1480>
  4029cd:	xor    eax,eax
  4029cf:	call   403c50 <error@@Base>
  4029d4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4029df:	nop
  4029e0:	push   r15
  4029e2:	push   r14
  4029e4:	mov    r14,rdx
  4029e7:	push   r13
  4029e9:	push   r12
  4029eb:	mov    r13,rcx
  4029ee:	push   rbp
  4029ef:	push   rbx
  4029f0:	mov    r12,rsi
  4029f3:	mov    esi,0x1
  4029f8:	mov    rbp,rdi
  4029fb:	sub    rsp,0x58
  4029ff:	mov    rax,QWORD PTR fs:0x28
  402a08:	mov    QWORD PTR [rsp+0x48],rax
  402a0d:	xor    eax,eax
  402a0f:	call   4022a0 <__sprintf_chk@plt+0x10b0>
  402a14:	mov    rdx,r13
  402a17:	xor    eax,eax
  402a19:	mov    esi,0x1
  402a1e:	mov    rdi,r12
  402a21:	call   4022a0 <__sprintf_chk@plt+0x10b0>
  402a26:	lea    rax,[rsp+0x40]
  402a2b:	mov    QWORD PTR [rsp+0x18],r13
  402a30:	mov    r13,r12
  402a33:	mov    QWORD PTR [rsp+0x8],rax
  402a38:	lea    rax,[rsp+0x38]
  402a3d:	mov    QWORD PTR [rsp+0x10],rax
  402a42:	mov    rbx,QWORD PTR [rbp+0x0]
  402a46:	test   rbx,rbx
  402a49:	je     402b21 <__sprintf_chk@plt+0x1931>
  402a4f:	xor    r12d,r12d
  402a52:	jmp    402a65 <__sprintf_chk@plt+0x1875>
  402a54:	nop    DWORD PTR [rax+0x0]
  402a58:	mov    rbx,QWORD PTR [rbx+0x8]
  402a5c:	test   rbx,rbx
  402a5f:	je     402af0 <__sprintf_chk@plt+0x1900>
  402a65:	cmp    QWORD PTR [rbx+0x18],0x0
  402a6a:	jne    402a58 <__sprintf_chk@plt+0x1868>
  402a6c:	mov    rax,QWORD PTR [rbx+0x10]
  402a70:	cmp    QWORD PTR [rax+0x10],r12
  402a74:	jle    402a58 <__sprintf_chk@plt+0x1868>
  402a76:	mov    r15,QWORD PTR [r13+0x0]
  402a7a:	test   r15,r15
  402a7d:	jne    402a91 <__sprintf_chk@plt+0x18a1>
  402a7f:	jmp    402a58 <__sprintf_chk@plt+0x1868>
  402a81:	nop    DWORD PTR [rax+0x0]
  402a88:	mov    r15,QWORD PTR [r15+0x8]
  402a8c:	test   r15,r15
  402a8f:	je     402a58 <__sprintf_chk@plt+0x1868>
  402a91:	cmp    QWORD PTR [r15+0x18],0x0
  402a96:	jne    402a88 <__sprintf_chk@plt+0x1898>
  402a98:	mov    rax,QWORD PTR [r15+0x10]
  402a9c:	cmp    QWORD PTR [rax+0x10],r12
  402aa0:	jle    402a88 <__sprintf_chk@plt+0x1898>
  402aa2:	mov    rdx,QWORD PTR [rbx+0x10]
  402aa6:	sub    rsp,0x8
  402aaa:	mov    rsi,QWORD PTR [r14+0x10]
  402aae:	mov    rdi,r12
  402ab1:	mov    rcx,QWORD PTR [rdx+0x8]
  402ab5:	push   QWORD PTR [rsp+0x10]
  402ab9:	push   QWORD PTR [rsp+0x20]
  402abd:	push   QWORD PTR [rax+0x8]
  402ac0:	mov    r9,QWORD PTR [rax]
  402ac3:	mov    rax,QWORD PTR [rsp+0x38]
  402ac8:	mov    rdx,QWORD PTR [rdx]
  402acb:	mov    r8,QWORD PTR [rax+0x10]
  402acf:	xor    eax,eax
  402ad1:	call   401ff0 <__sprintf_chk@plt+0xe00>
  402ad6:	add    rsp,0x20
  402ada:	cmp    rax,r12
  402add:	jle    402a88 <__sprintf_chk@plt+0x1898>
  402adf:	mov    QWORD PTR [rsp+0x28],r15
  402ae4:	mov    QWORD PTR [rsp+0x20],rbx
  402ae9:	mov    r12,rax
  402aec:	jmp    402a88 <__sprintf_chk@plt+0x1898>
  402aee:	xchg   ax,ax
  402af0:	test   r12,r12
  402af3:	jne    402b40 <__sprintf_chk@plt+0x1950>
  402af5:	mov    rax,QWORD PTR [rbp+0x0]
  402af9:	mov    r15,r12
  402afc:	test   rax,rax
  402aff:	je     402b21 <__sprintf_chk@plt+0x1931>
  402b01:	nop    DWORD PTR [rax+0x0]
  402b08:	mov    rdx,QWORD PTR [rax+0x18]
  402b0c:	test   rdx,rdx
  402b0f:	je     402b18 <__sprintf_chk@plt+0x1928>
  402b11:	add    r15,0x1
  402b15:	mov    QWORD PTR [rdx],r15
  402b18:	mov    rax,QWORD PTR [rax+0x8]
  402b1c:	test   rax,rax
  402b1f:	jne    402b08 <__sprintf_chk@plt+0x1918>
  402b21:	mov    rax,QWORD PTR [rsp+0x48]
  402b26:	xor    rax,QWORD PTR fs:0x28
  402b2f:	jne    402b97 <__sprintf_chk@plt+0x19a7>
  402b31:	add    rsp,0x58
  402b35:	pop    rbx
  402b36:	pop    rbp
  402b37:	pop    r12
  402b39:	pop    r13
  402b3b:	pop    r14
  402b3d:	pop    r15
  402b3f:	ret    
  402b40:	mov    esi,0x8
  402b45:	mov    edi,0x1
  402b4a:	xor    eax,eax
  402b4c:	call   403c90 <error@@Base+0x40>
  402b51:	mov    rcx,QWORD PTR [rsp+0x10]
  402b56:	mov    rdx,QWORD PTR [rsp+0x20]
  402b5b:	mov    rbx,rax
  402b5e:	mov    r9,rax
  402b61:	mov    r8,r12
  402b64:	mov    rdi,rbp
  402b67:	xor    eax,eax
  402b69:	mov    esi,0x1
  402b6e:	call   4023a0 <__sprintf_chk@plt+0x11b0>
  402b73:	mov    rcx,QWORD PTR [rsp+0x8]
  402b78:	mov    rdx,QWORD PTR [rsp+0x28]
  402b7d:	mov    r9,rbx
  402b80:	mov    r8,r12
  402b83:	mov    esi,0x1
  402b88:	mov    rdi,r13
  402b8b:	xor    eax,eax
  402b8d:	call   4023a0 <__sprintf_chk@plt+0x11b0>
  402b92:	jmp    402a42 <__sprintf_chk@plt+0x1852>
  402b97:	call   4010b0 <__stack_chk_fail@plt>
  402b9c:	nop    DWORD PTR [rax+0x0]
  402ba0:	push   r15
  402ba2:	push   r14
  402ba4:	push   r13
  402ba6:	push   r12
  402ba8:	push   rbp
  402ba9:	push   rbx
  402baa:	sub    rsp,0x48
  402bae:	mov    rax,QWORD PTR fs:0x28
  402bb7:	mov    QWORD PTR [rsp+0x38],rax
  402bbc:	xor    eax,eax
  402bbe:	cmp    QWORD PTR [rsi+0x18],0xffff
  402bc6:	mov    QWORD PTR [rsp+0x8],rdi
  402bcb:	jg     402f30 <__sprintf_chk@plt+0x1d40>
  402bd1:	mov    rdi,QWORD PTR [rsp+0x8]
  402bd6:	mov    rbx,rsi
  402bd9:	mov    rdx,rsi
  402bdc:	xor    eax,eax
  402bde:	mov    esi,0x2
  402be3:	xor    r12d,r12d
  402be6:	call   4022a0 <__sprintf_chk@plt+0x10b0>
  402beb:	mov    rax,QWORD PTR [rbx+0x10]
  402bef:	mov    rdx,QWORD PTR [rbx+0x38]
  402bf3:	mov    QWORD PTR [rip+0x56d6],rax        # 4082d0 <error@@Base+0x4680>
  402bfa:	mov    rax,QWORD PTR [rbx+0x30]
  402bfe:	mov    rbp,rdx
  402c01:	mov    QWORD PTR [rip+0x56b0],rdx        # 4082b8 <error@@Base+0x4668>
  402c08:	mov    QWORD PTR [rip+0x5691],rdx        # 4082a0 <error@@Base+0x4650>
  402c0f:	mov    QWORD PTR [rip+0x56b2],rax        # 4082c8 <error@@Base+0x4678>
  402c16:	mov    rax,QWORD PTR [rbx+0x18]
  402c1a:	sub    rbp,rax
  402c1d:	mov    QWORD PTR [rip+0x569c],rax        # 4082c0 <error@@Base+0x4670>
  402c24:	neg    rax
  402c27:	cmp    rbp,rax
  402c2a:	mov    QWORD PTR [rip+0x567f],rbp        # 4082b0 <error@@Base+0x4660>
  402c31:	mov    QWORD PTR [rip+0x5670],rax        # 4082a8 <error@@Base+0x4658>
  402c38:	jl     402d8a <__sprintf_chk@plt+0x1b9a>
  402c3e:	xchg   ax,ax
  402c40:	mov    esi,0x30
  402c45:	mov    edi,0x1
  402c4a:	xor    eax,eax
  402c4c:	mov    rbp,r12
  402c4f:	call   403c90 <error@@Base+0x40>
  402c54:	neg    rbp
  402c57:	lea    rdi,[rip+0x5682]        # 4082e0 <error@@Base+0x4690>
  402c5e:	mov    rsi,rax
  402c61:	mov    QWORD PTR [rax+0x10],rbp
  402c65:	mov    rbx,rax
  402c68:	xor    eax,eax
  402c6a:	call   404090 <error@@Base+0x440>
  402c6f:	mov    rax,QWORD PTR [rip+0x5642]        # 4082b8 <error@@Base+0x4668>
  402c76:	cmp    QWORD PTR [rip+0x5643],rax        # 4082c0 <error@@Base+0x4670>
  402c7d:	jg     402e50 <__sprintf_chk@plt+0x1c60>
  402c83:	mov    r13,QWORD PTR [rip+0x5626]        # 4082b0 <error@@Base+0x4660>
  402c8a:	mov    r14,rbp
  402c8d:	mov    rax,r12
  402c90:	cmp    r13,rbp
  402c93:	cmovle r14,r13
  402c97:	cmp    QWORD PTR [rip+0x560a],r12        # 4082a8 <error@@Base+0x4658>
  402c9e:	cmovge rax,QWORD PTR [rip+0x5602]        # 4082a8 <error@@Base+0x4658>
  402ca6:	cmp    r14,rax
  402ca9:	jl     402cf5 <__sprintf_chk@plt+0x1b05>
  402cab:	nop    DWORD PTR [rax+rax*1+0x0]
  402cb0:	xor    eax,eax
  402cb2:	mov    rdi,r14
  402cb5:	mov    rsi,rbx
  402cb8:	call   402790 <__sprintf_chk@plt+0x15a0>
  402cbd:	sub    r14,0x1
  402cc1:	cmp    QWORD PTR [rip+0x55e0],r12        # 4082a8 <error@@Base+0x4658>
  402cc8:	mov    rax,r12
  402ccb:	cmovge rax,QWORD PTR [rip+0x55d5]        # 4082a8 <error@@Base+0x4658>
  402cd3:	cmp    r14,rax
  402cd6:	jge    402cb0 <__sprintf_chk@plt+0x1ac0>
  402cd8:	mov    r13,QWORD PTR [rip+0x55d1]        # 4082b0 <error@@Base+0x4660>
  402cdf:	jmp    402cf5 <__sprintf_chk@plt+0x1b05>
  402ce1:	nop    DWORD PTR [rax+0x0]
  402ce8:	mov    rsi,rbx
  402ceb:	mov    rdi,r13
  402cee:	xor    eax,eax
  402cf0:	call   402790 <__sprintf_chk@plt+0x15a0>
  402cf5:	add    r13,0x1
  402cf9:	cmp    QWORD PTR [rip+0x55a0],rbp        # 4082a0 <error@@Base+0x4650>
  402d00:	mov    rax,rbp
  402d03:	cmovle rax,QWORD PTR [rip+0x5595]        # 4082a0 <error@@Base+0x4650>
  402d0b:	cmp    r13,rax
  402d0e:	jle    402ce8 <__sprintf_chk@plt+0x1af8>
  402d10:	mov    rdi,QWORD PTR [rip+0x5601]        # 408318 <error@@Base+0x46c8>
  402d17:	xor    eax,eax
  402d19:	mov    esi,0x2
  402d1e:	lea    r13,[rip+0x55db]        # 408300 <error@@Base+0x46b0>
  402d25:	xor    ebp,ebp
  402d27:	call   403c90 <error@@Base+0x40>
  402d2c:	mov    r15,QWORD PTR [rip+0x55cd]        # 408300 <error@@Base+0x46b0>
  402d33:	mov    QWORD PTR [rbx+0x28],rax
  402d37:	mov    r14,r13
  402d3a:	test   r15,r15
  402d3d:	je     402d6f <__sprintf_chk@plt+0x1b7f>
  402d3f:	nop
  402d40:	mov    rsi,r15
  402d43:	xor    eax,eax
  402d45:	mov    rdi,r14
  402d48:	call   404180 <error@@Base+0x530>
  402d4d:	movzx  ecx,WORD PTR [r15+0x10]
  402d52:	mov    rax,QWORD PTR [rbx+0x28]
  402d56:	mov    rdi,r15
  402d59:	mov    WORD PTR [rax+rbp*1],cx
  402d5d:	add    rbp,0x2
  402d61:	call   401040 <free@plt>
  402d66:	mov    r15,QWORD PTR [r13+0x0]
  402d6a:	test   r15,r15
  402d6d:	jne    402d40 <__sprintf_chk@plt+0x1b50>
  402d6f:	mov    rax,QWORD PTR [rip+0x5532]        # 4082a8 <error@@Base+0x4658>
  402d76:	mov    rbp,QWORD PTR [rip+0x5533]        # 4082b0 <error@@Base+0x4660>
  402d7d:	sub    r12,0x1
  402d81:	cmp    rbp,rax
  402d84:	jge    402c40 <__sprintf_chk@plt+0x1a50>
  402d8a:	mov    rbx,QWORD PTR [rip+0x5557]        # 4082e8 <error@@Base+0x4698>
  402d91:	lea    r13,[rsp+0x18]
  402d96:	lea    r14,[rsp+0x20]
  402d9b:	test   rbx,rbx
  402d9e:	jne    402ddf <__sprintf_chk@plt+0x1bef>
  402da0:	jmp    402ee5 <__sprintf_chk@plt+0x1cf5>
  402da5:	nop    DWORD PTR [rax]
  402da8:	lea    rdi,[rip+0x5531]        # 4082e0 <error@@Base+0x4690>
  402daf:	mov    rsi,rbx
  402db2:	xor    eax,eax
  402db4:	call   404180 <error@@Base+0x530>
  402db9:	mov    rdi,QWORD PTR [rbx+0x28]
  402dbd:	call   401040 <free@plt>
  402dc2:	mov    rdi,rbx
  402dc5:	call   401040 <free@plt>
  402dca:	mov    rbx,QWORD PTR [rip+0x5517]        # 4082e8 <error@@Base+0x4698>
  402dd1:	mov    rbp,QWORD PTR [rsp+0x18]
  402dd6:	test   rbx,rbx
  402dd9:	je     402ee5 <__sprintf_chk@plt+0x1cf5>
  402ddf:	mov    rdx,rbp
  402de2:	sub    rdx,QWORD PTR [rbx+0x18]
  402de6:	mov    rax,QWORD PTR [rbx+0x28]
  402dea:	mov    rsi,QWORD PTR [rbx]
  402ded:	mov    rdi,rbp
  402df0:	movzx  r12d,WORD PTR [rax+rdx*2]
  402df5:	xor    eax,eax
  402df7:	mov    rdx,r13
  402dfa:	call   4021d0 <__sprintf_chk@plt+0xfe0>
  402dff:	mov    QWORD PTR [rsp+0x20],rax
  402e04:	cmp    r12,rax
  402e07:	jle    402da8 <__sprintf_chk@plt+0x1bb8>
  402e09:	add    rax,rbp
  402e0c:	mov    esi,0x8
  402e11:	mov    edi,0x1
  402e16:	mov    QWORD PTR [rsp+0x28],rax
  402e1b:	xor    eax,eax
  402e1d:	call   403c90 <error@@Base+0x40>
  402e22:	mov    r9,rax
  402e25:	mov    rax,QWORD PTR [rsp+0x8]
  402e2a:	mov    r8,r12
  402e2d:	sub    r8,QWORD PTR [rsp+0x20]
  402e32:	mov    rcx,r14
  402e35:	mov    esi,0x2
  402e3a:	mov    rdx,QWORD PTR [rax]
  402e3d:	mov    rdi,rax
  402e40:	xor    eax,eax
  402e42:	call   4023a0 <__sprintf_chk@plt+0x11b0>
  402e47:	jmp    402da8 <__sprintf_chk@plt+0x1bb8>
  402e4c:	nop    DWORD PTR [rax+0x0]
  402e50:	mov    rax,QWORD PTR [rip+0x5459]        # 4082b0 <error@@Base+0x4660>
  402e57:	mov    rdx,rbp
  402e5a:	cmp    r12,rax
  402e5d:	mov    r13,rax
  402e60:	cmovge r13,r12
  402e64:	cmp    QWORD PTR [rip+0x5435],rbp        # 4082a0 <error@@Base+0x4650>
  402e6b:	cmovle rdx,QWORD PTR [rip+0x542d]        # 4082a0 <error@@Base+0x4650>
  402e73:	cmp    r13,rdx
  402e76:	jg     402eaf <__sprintf_chk@plt+0x1cbf>
  402e78:	nop    DWORD PTR [rax+rax*1+0x0]
  402e80:	xor    eax,eax
  402e82:	mov    rdi,r13
  402e85:	mov    rsi,rbx
  402e88:	call   402790 <__sprintf_chk@plt+0x15a0>
  402e8d:	add    r13,0x1
  402e91:	cmp    QWORD PTR [rip+0x5408],rbp        # 4082a0 <error@@Base+0x4650>
  402e98:	mov    rax,rbp
  402e9b:	cmovle rax,QWORD PTR [rip+0x53fd]        # 4082a0 <error@@Base+0x4650>
  402ea3:	cmp    r13,rax
  402ea6:	jle    402e80 <__sprintf_chk@plt+0x1c90>
  402ea8:	mov    rax,QWORD PTR [rip+0x5401]        # 4082b0 <error@@Base+0x4660>
  402eaf:	lea    rbp,[rax-0x1]
  402eb3:	jmp    402ec9 <__sprintf_chk@plt+0x1cd9>
  402eb5:	nop    DWORD PTR [rax]
  402eb8:	mov    rdi,rbp
  402ebb:	mov    rsi,rbx
  402ebe:	xor    eax,eax
  402ec0:	sub    rbp,0x1
  402ec4:	call   402790 <__sprintf_chk@plt+0x15a0>
  402ec9:	cmp    QWORD PTR [rip+0x53d8],r12        # 4082a8 <error@@Base+0x4658>
  402ed0:	mov    rax,r12
  402ed3:	cmovge rax,QWORD PTR [rip+0x53cd]        # 4082a8 <error@@Base+0x4658>
  402edb:	cmp    rbp,rax
  402ede:	jge    402eb8 <__sprintf_chk@plt+0x1cc8>
  402ee0:	jmp    402d10 <__sprintf_chk@plt+0x1b20>
  402ee5:	mov    rax,QWORD PTR [rsp+0x8]
  402eea:	xor    ecx,ecx
  402eec:	mov    rax,QWORD PTR [rax]
  402eef:	test   rax,rax
  402ef2:	je     402f11 <__sprintf_chk@plt+0x1d21>
  402ef4:	nop    DWORD PTR [rax+0x0]
  402ef8:	mov    rdx,QWORD PTR [rax+0x18]
  402efc:	test   rdx,rdx
  402eff:	je     402f08 <__sprintf_chk@plt+0x1d18>
  402f01:	add    rcx,0x1
  402f05:	mov    QWORD PTR [rdx],rcx
  402f08:	mov    rax,QWORD PTR [rax+0x8]
  402f0c:	test   rax,rax
  402f0f:	jne    402ef8 <__sprintf_chk@plt+0x1d08>
  402f11:	mov    rax,QWORD PTR [rsp+0x38]
  402f16:	xor    rax,QWORD PTR fs:0x28
  402f1f:	jne    402f3c <__sprintf_chk@plt+0x1d4c>
  402f21:	add    rsp,0x48
  402f25:	pop    rbx
  402f26:	pop    rbp
  402f27:	pop    r12
  402f29:	pop    r13
  402f2b:	pop    r14
  402f2d:	pop    r15
  402f2f:	ret    
  402f30:	lea    rdi,[rip+0x21b8]        # 4050ef <error@@Base+0x149f>
  402f37:	call   403c50 <error@@Base>
  402f3c:	call   4010b0 <__stack_chk_fail@plt>
  402f41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f4b:	nop    DWORD PTR [rax+rax*1+0x0]
  402f50:	push   r12
  402f52:	push   rbp
  402f53:	lea    rbp,[rdi+0x3ee0]
  402f5a:	push   rbx
  402f5b:	mov    r12,rdi
  402f5e:	mov    rbx,rdi
  402f61:	nop    DWORD PTR [rax+0x0]
  402f68:	mov    rdi,rbx
  402f6b:	xor    eax,eax
  402f6d:	add    rbx,0x20
  402f71:	call   404020 <error@@Base+0x3d0>
  402f76:	cmp    rbx,rbp
  402f79:	jne    402f68 <__sprintf_chk@plt+0x1d78>
  402f7b:	pop    rbx
  402f7c:	mov    QWORD PTR [r12+0x3ee0],0x0
  402f88:	mov    QWORD PTR [r12+0x3ee8],0x0
  402f94:	pop    rbp
  402f95:	pop    r12
  402f97:	ret    
  402f98:	nop    DWORD PTR [rax+rax*1+0x0]
  402fa0:	push   rbp
  402fa1:	push   rbx
  402fa2:	mov    rbp,rsi
  402fa5:	sub    rsp,0x8
  402fa9:	movzx  eax,BYTE PTR [rsi]
  402fac:	test   al,al
  402fae:	je     403033 <__sprintf_chk@plt+0x1e43>
  402fb4:	lea    rdx,[rsi+0x1]
  402fb8:	xor    ecx,ecx
  402fba:	nop    WORD PTR [rax+rax*1+0x0]
  402fc0:	add    rdx,0x1
  402fc4:	add    rcx,rax
  402fc7:	movzx  eax,BYTE PTR [rdx-0x1]
  402fcb:	test   al,al
  402fcd:	jne    402fc0 <__sprintf_chk@plt+0x1dd0>
  402fcf:	mov    rax,rcx
  402fd2:	movabs rdx,0x824a4e60b3262bc5
  402fdc:	imul   rdx
  402fdf:	lea    rax,[rdx+rcx*1]
  402fe3:	mov    rdx,rcx
  402fe6:	sar    rdx,0x3f
  402fea:	sar    rax,0x8
  402fee:	sub    rax,rdx
  402ff1:	imul   rax,rax,0x1f7
  402ff8:	sub    ecx,eax
  402ffa:	movsxd rcx,ecx
  402ffd:	shl    rcx,0x5
  403001:	mov    rbx,QWORD PTR [rdi+rcx*1]
  403005:	test   rbx,rbx
  403008:	jne    403019 <__sprintf_chk@plt+0x1e29>
  40300a:	jmp    403029 <__sprintf_chk@plt+0x1e39>
  40300c:	nop    DWORD PTR [rax+0x0]
  403010:	mov    rbx,QWORD PTR [rbx+0x8]
  403014:	test   rbx,rbx
  403017:	je     403029 <__sprintf_chk@plt+0x1e39>
  403019:	mov    rsi,QWORD PTR [rbx+0x10]
  40301d:	mov    rdi,rbp
  403020:	call   401120 <strcmp@plt>
  403025:	test   eax,eax
  403027:	jne    403010 <__sprintf_chk@plt+0x1e20>
  403029:	add    rsp,0x8
  40302d:	mov    rax,rbx
  403030:	pop    rbx
  403031:	pop    rbp
  403032:	ret    
  403033:	xor    ecx,ecx
  403035:	jmp    402ffa <__sprintf_chk@plt+0x1e0a>
  403037:	nop    WORD PTR [rax+rax*1+0x0]
  403040:	mov    rdx,QWORD PTR [rsi+0x10]
  403044:	push   rbx
  403045:	mov    rbx,rdi
  403048:	movzx  eax,BYTE PTR [rdx]
  40304b:	test   al,al
  40304d:	je     4030c7 <__sprintf_chk@plt+0x1ed7>
  40304f:	add    rdx,0x1
  403053:	xor    edi,edi
  403055:	nop    DWORD PTR [rax]
  403058:	add    rdx,0x1
  40305c:	add    rdi,rax
  40305f:	movzx  eax,BYTE PTR [rdx-0x1]
  403063:	test   al,al
  403065:	jne    403058 <__sprintf_chk@plt+0x1e68>
  403067:	mov    rax,rdi
  40306a:	movabs rdx,0x824a4e60b3262bc5
  403074:	imul   rdx
  403077:	lea    rax,[rdx+rdi*1]
  40307b:	mov    rdx,rdi
  40307e:	sar    rdx,0x3f
  403082:	sar    rax,0x8
  403086:	sub    rax,rdx
  403089:	imul   rax,rax,0x1f7
  403090:	sub    rdi,rax
  403093:	shl    rdi,0x5
  403097:	add    rdi,rbx
  40309a:	xor    eax,eax
  40309c:	call   404040 <error@@Base+0x3f0>
  4030a1:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  4030a8:	test   rdi,rdi
  4030ab:	je     4030bd <__sprintf_chk@plt+0x1ecd>
  4030ad:	call   401040 <free@plt>
  4030b2:	mov    QWORD PTR [rbx+0x3ee0],0x0
  4030bd:	add    QWORD PTR [rbx+0x3ee8],0x1
  4030c5:	pop    rbx
  4030c6:	ret    
  4030c7:	xor    edi,edi
  4030c9:	jmp    403097 <__sprintf_chk@plt+0x1ea7>
  4030cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4030d0:	mov    rdx,QWORD PTR [rsi+0x10]
  4030d4:	push   rbx
  4030d5:	mov    rbx,rdi
  4030d8:	movzx  eax,BYTE PTR [rdx]
  4030db:	test   al,al
  4030dd:	je     403157 <__sprintf_chk@plt+0x1f67>
  4030df:	add    rdx,0x1
  4030e3:	xor    edi,edi
  4030e5:	nop    DWORD PTR [rax]
  4030e8:	add    rdx,0x1
  4030ec:	add    rdi,rax
  4030ef:	movzx  eax,BYTE PTR [rdx-0x1]
  4030f3:	test   al,al
  4030f5:	jne    4030e8 <__sprintf_chk@plt+0x1ef8>
  4030f7:	mov    rax,rdi
  4030fa:	movabs rdx,0x824a4e60b3262bc5
  403104:	imul   rdx
  403107:	lea    rax,[rdx+rdi*1]
  40310b:	mov    rdx,rdi
  40310e:	sar    rdx,0x3f
  403112:	sar    rax,0x8
  403116:	sub    rax,rdx
  403119:	imul   rax,rax,0x1f7
  403120:	sub    rdi,rax
  403123:	shl    rdi,0x5
  403127:	add    rdi,rbx
  40312a:	xor    eax,eax
  40312c:	call   404180 <error@@Base+0x530>
  403131:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  403138:	test   rdi,rdi
  40313b:	je     40314d <__sprintf_chk@plt+0x1f5d>
  40313d:	call   401040 <free@plt>
  403142:	mov    QWORD PTR [rbx+0x3ee0],0x0
  40314d:	sub    QWORD PTR [rbx+0x3ee8],0x1
  403155:	pop    rbx
  403156:	ret    
  403157:	xor    edi,edi
  403159:	jmp    403127 <__sprintf_chk@plt+0x1f37>
  40315b:	nop    DWORD PTR [rax+rax*1+0x0]
  403160:	cmp    QWORD PTR [rdi+0x3ee0],0x0
  403168:	je     403170 <__sprintf_chk@plt+0x1f80>
  40316a:	repz ret 
  40316c:	nop    DWORD PTR [rax+0x0]
  403170:	mov    rax,QWORD PTR [rdi+0x3ee8]
  403177:	test   rax,rax
  40317a:	je     40316a <__sprintf_chk@plt+0x1f7a>
  40317c:	push   rbx
  40317d:	mov    esi,0x8
  403182:	mov    rbx,rdi
  403185:	mov    rdi,rax
  403188:	xor    eax,eax
  40318a:	call   403c90 <error@@Base+0x40>
  40318f:	lea    rdi,[rbx+0x3ee0]
  403196:	mov    QWORD PTR [rbx+0x3ee0],rax
  40319d:	mov    rsi,rbx
  4031a0:	xor    ecx,ecx
  4031a2:	nop    WORD PTR [rax+rax*1+0x0]
  4031a8:	mov    rdx,QWORD PTR [rsi]
  4031ab:	test   rdx,rdx
  4031ae:	je     4031c2 <__sprintf_chk@plt+0x1fd2>
  4031b0:	add    rcx,0x1
  4031b4:	mov    QWORD PTR [rax+rcx*8-0x8],rdx
  4031b9:	mov    rdx,QWORD PTR [rdx+0x8]
  4031bd:	test   rdx,rdx
  4031c0:	jne    4031b0 <__sprintf_chk@plt+0x1fc0>
  4031c2:	add    rsi,0x20
  4031c6:	cmp    rsi,rdi
  4031c9:	jne    4031a8 <__sprintf_chk@plt+0x1fb8>
  4031cb:	pop    rbx
  4031cc:	ret    
  4031cd:	nop    DWORD PTR [rax]
  4031d0:	push   r13
  4031d2:	push   r12
  4031d4:	mov    r13,rdi
  4031d7:	push   rbp
  4031d8:	push   rbx
  4031d9:	lea    rbp,[rdi+0x3ee0]
  4031e0:	mov    r12,rsi
  4031e3:	mov    rbx,rdi
  4031e6:	sub    rsp,0x8
  4031ea:	nop    WORD PTR [rax+rax*1+0x0]
  4031f0:	mov    rdi,rbx
  4031f3:	xor    eax,eax
  4031f5:	mov    rsi,r12
  4031f8:	add    rbx,0x20
  4031fc:	call   404250 <error@@Base+0x600>
  403201:	cmp    rbx,rbp
  403204:	jne    4031f0 <__sprintf_chk@plt+0x2000>
  403206:	mov    rdi,QWORD PTR [r13+0x3ee0]
  40320d:	test   rdi,rdi
  403210:	je     403222 <__sprintf_chk@plt+0x2032>
  403212:	call   401040 <free@plt>
  403217:	mov    QWORD PTR [r13+0x3ee0],0x0
  403222:	mov    QWORD PTR [r13+0x3ee8],0x0
  40322d:	add    rsp,0x8
  403231:	pop    rbx
  403232:	pop    rbp
  403233:	pop    r12
  403235:	pop    r13
  403237:	ret    
  403238:	nop    DWORD PTR [rax+rax*1+0x0]
  403240:	push   r12
  403242:	push   rbp
  403243:	mov    r12d,esi
  403246:	push   rbx
  403247:	mov    ebp,edx
  403249:	mov    rbx,rdi
  40324c:	mov    esi,0x18
  403251:	mov    edi,0x1
  403256:	xor    eax,eax
  403258:	call   403c90 <error@@Base+0x40>
  40325d:	mov    rdi,rbx
  403260:	mov    BYTE PTR [rax+0x10],r12b
  403264:	mov    DWORD PTR [rax+0x14],ebp
  403267:	pop    rbx
  403268:	pop    rbp
  403269:	pop    r12
  40326b:	mov    rsi,rax
  40326e:	xor    eax,eax
  403270:	jmp    404090 <error@@Base+0x440>
  403275:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403280:	push   r15
  403282:	push   r14
  403284:	push   r13
  403286:	push   r12
  403288:	push   rbp
  403289:	push   rbx
  40328a:	sub    rsp,0xc8
  403291:	mov    rcx,QWORD PTR fs:0x28
  40329a:	mov    QWORD PTR [rsp+0xb8],rcx
  4032a2:	xor    ecx,ecx
  4032a4:	cmp    BYTE PTR [rdx],0x0
  4032a7:	mov    QWORD PTR [rsp+0x20],rdi
  4032ac:	mov    rdi,rsi
  4032af:	mov    QWORD PTR [rsp+0x30],rdx
  4032b4:	je     4032bf <__sprintf_chk@plt+0x20cf>
  4032b6:	test   rsi,rsi
  4032b9:	je     40365f <__sprintf_chk@plt+0x246f>
  4032bf:	mov    rax,QWORD PTR [rsp+0x20]
  4032c4:	lea    rsi,[rip+0x1e6c]        # 405137 <error@@Base+0x14e7>
  4032cb:	mov    rax,QWORD PTR [rax+0x8]
  4032cf:	mov    QWORD PTR [rsp+0x38],rax
  4032d4:	xor    eax,eax
  4032d6:	call   403d30 <error@@Base+0xe0>
  4032db:	mov    rbp,rax
  4032de:	mov    rax,QWORD PTR [rsp+0x30]
  4032e3:	cmp    BYTE PTR [rax],0x0
  4032e6:	jne    40357d <__sprintf_chk@plt+0x238d>
  4032ec:	mov    rcx,QWORD PTR [rsp+0x30]
  4032f1:	mov    rdi,rbp
  4032f4:	mov    eax,DWORD PTR [rcx+0x4]
  4032f7:	movzx  r15d,BYTE PTR [rcx+0x1]
  4032fc:	test   eax,eax
  4032fe:	mov    ebx,eax
  403300:	mov    eax,0x5e
  403305:	cmovne eax,ebx
  403308:	mov    DWORD PTR [rsp+0x2c],eax
  40330c:	call   4011e0 <getc@plt>
  403311:	cmp    eax,0xffffffff
  403314:	je     403418 <__sprintf_chk@plt+0x2228>
  40331a:	mov    r13,QWORD PTR [rip+0x4ccf]        # 407ff0 <error@@Base+0x43a0>
  403321:	movsxd rdx,eax
  403324:	movsx  r14,BYTE PTR [r13+rdx*1+0x0]
  40332a:	test   r14,r14
  40332d:	jle    403643 <__sprintf_chk@plt+0x2453>
  403333:	lea    rcx,[rsp+0x50]
  403338:	xor    ebx,ebx
  40333a:	mov    r12,r14
  40333d:	mov    QWORD PTR [rsp+0x8],rcx
  403342:	lea    rcx,[rsp+0x51]
  403347:	mov    QWORD PTR [rsp+0x18],rcx
  40334c:	lea    rcx,[rsp+0x4c]
  403351:	mov    QWORD PTR [rsp+0x10],rcx
  403356:	jmp    403394 <__sprintf_chk@plt+0x21a4>
  403358:	nop    DWORD PTR [rax+rax*1+0x0]
  403360:	mov    rdi,QWORD PTR [rsp+0x20]
  403365:	movsx  esi,bl
  403368:	xor    eax,eax
  40336a:	xor    ebx,ebx
  40336c:	call   403240 <__sprintf_chk@plt+0x2050>
  403371:	mov    rdi,rbp
  403374:	call   4011e0 <getc@plt>
  403379:	cmp    eax,0xffffffff
  40337c:	je     403418 <__sprintf_chk@plt+0x2228>
  403382:	movsxd rdx,eax
  403385:	movsx  r12,BYTE PTR [r13+rdx*1+0x0]
  40338b:	test   r12,r12
  40338e:	jle    403643 <__sprintf_chk@plt+0x2453>
  403394:	cmp    r12,0x1
  403398:	mov    BYTE PTR [rsp+0x50],al
  40339c:	je     4033c8 <__sprintf_chk@plt+0x21d8>
  40339e:	lea    r14,[r12-0x1]
  4033a3:	mov    rdi,QWORD PTR [rsp+0x18]
  4033a8:	mov    r8,rbp
  4033ab:	mov    edx,0x1
  4033b0:	mov    esi,0x3
  4033b5:	mov    rcx,r14
  4033b8:	call   401170 <__fread_chk@plt>
  4033bd:	cdqe   
  4033bf:	cmp    r14,rax
  4033c2:	jne    403651 <__sprintf_chk@plt+0x2461>
  4033c8:	mov    rdx,QWORD PTR [rsp+0x10]
  4033cd:	mov    rdi,QWORD PTR [rsp+0x8]
  4033d2:	mov    esi,0x4
  4033d7:	call   401100 <utf8proc_iterate@plt>
  4033dc:	cdqe   
  4033de:	cmp    rax,r12
  4033e1:	jne    403631 <__sprintf_chk@plt+0x2441>
  4033e7:	test   r15b,r15b
  4033ea:	mov    edx,DWORD PTR [rsp+0x4c]
  4033ee:	je     403360 <__sprintf_chk@plt+0x2170>
  4033f4:	cmp    edx,DWORD PTR [rsp+0x2c]
  4033f8:	jne    403360 <__sprintf_chk@plt+0x2170>
  4033fe:	mov    rdi,rbp
  403401:	mov    ebx,0x1
  403406:	call   4011e0 <getc@plt>
  40340b:	cmp    eax,0xffffffff
  40340e:	jne    403382 <__sprintf_chk@plt+0x2192>
  403414:	nop    DWORD PTR [rax+0x0]
  403418:	xor    eax,eax
  40341a:	mov    rdi,rbp
  40341d:	call   403af0 <__sprintf_chk@plt+0x2900>
  403422:	mov    rax,QWORD PTR [rsp+0x30]
  403427:	cmp    BYTE PTR [rax+0x9],0x0
  40342b:	je     40351d <__sprintf_chk@plt+0x232d>
  403431:	mov    rax,QWORD PTR [rsp+0x38]
  403436:	test   rax,rax
  403439:	je     403624 <__sprintf_chk@plt+0x2434>
  40343f:	mov    rbp,QWORD PTR [rax+0x8]
  403443:	test   rbp,rbp
  403446:	je     40351d <__sprintf_chk@plt+0x232d>
  40344c:	mov    r12,rbp
  40344f:	jmp    403471 <__sprintf_chk@plt+0x2281>
  403451:	nop    DWORD PTR [rax+0x0]
  403458:	cmp    ebx,0xb
  40345b:	jae    403496 <__sprintf_chk@plt+0x22a6>
  40345d:	cmp    ebx,0x9
  403460:	je     403496 <__sprintf_chk@plt+0x22a6>
  403462:	cmp    ebx,0xa
  403465:	jne    40348a <__sprintf_chk@plt+0x229a>
  403467:	mov    r12,QWORD PTR [r12+0x8]
  40346c:	test   r12,r12
  40346f:	je     4034a9 <__sprintf_chk@plt+0x22b9>
  403471:	mov    ebx,DWORD PTR [r12+0x14]
  403476:	mov    edi,ebx
  403478:	call   401060 <utf8proc_get_property@plt>
  40347d:	cmp    ebx,0xd
  403480:	jbe    403458 <__sprintf_chk@plt+0x2268>
  403482:	cmp    ebx,0xa0
  403488:	je     403496 <__sprintf_chk@plt+0x22a6>
  40348a:	movzx  eax,WORD PTR [rax]
  40348d:	sub    eax,0x17
  403490:	cmp    ax,0x2
  403494:	ja     403467 <__sprintf_chk@plt+0x2277>
  403496:	mov    DWORD PTR [r12+0x14],0x20
  40349f:	mov    r12,QWORD PTR [r12+0x8]
  4034a4:	test   r12,r12
  4034a7:	jne    403471 <__sprintf_chk@plt+0x2281>
  4034a9:	mov    r13,QWORD PTR [rsp+0x20]
  4034ae:	jmp    4034eb <__sprintf_chk@plt+0x22fb>
  4034b0:	cmp    eax,0xa
  4034b3:	jne    40350e <__sprintf_chk@plt+0x231e>
  4034b5:	test   r12b,r12b
  4034b8:	jne    40350e <__sprintf_chk@plt+0x231e>
  4034ba:	test   rbx,rbx
  4034bd:	je     4034ce <__sprintf_chk@plt+0x22de>
  4034bf:	test   r12b,r12b
  4034c2:	je     4034ce <__sprintf_chk@plt+0x22de>
  4034c4:	cmp    DWORD PTR [rbx+0x14],0x20
  4034c8:	je     4035f4 <__sprintf_chk@plt+0x2404>
  4034ce:	mov    rsi,rbp
  4034d1:	xor    eax,eax
  4034d3:	mov    rdi,r13
  4034d6:	call   404180 <error@@Base+0x530>
  4034db:	mov    rdi,rbp
  4034de:	mov    rbp,rbx
  4034e1:	call   401040 <free@plt>
  4034e6:	test   rbx,rbx
  4034e9:	je     40351d <__sprintf_chk@plt+0x232d>
  4034eb:	mov    eax,DWORD PTR [rbp+0x14]
  4034ee:	mov    rbx,QWORD PTR [rbp+0x8]
  4034f2:	cmp    eax,0x20
  4034f5:	jne    4034b0 <__sprintf_chk@plt+0x22c0>
  4034f7:	test   r12b,r12b
  4034fa:	je     4034ba <__sprintf_chk@plt+0x22ca>
  4034fc:	test   rbx,rbx
  4034ff:	je     4034ba <__sprintf_chk@plt+0x22ca>
  403501:	mov    edx,DWORD PTR [rbx+0x14]
  403504:	cmp    edx,0x20
  403507:	je     4034ba <__sprintf_chk@plt+0x22ca>
  403509:	cmp    edx,0xa
  40350c:	je     4034ba <__sprintf_chk@plt+0x22ca>
  40350e:	cmp    eax,0xa
  403511:	mov    rbp,rbx
  403514:	setne  r12b
  403518:	test   rbx,rbx
  40351b:	jne    4034eb <__sprintf_chk@plt+0x22fb>
  40351d:	mov    rax,QWORD PTR [rsp+0x30]
  403522:	cmp    BYTE PTR [rax+0xa],0x0
  403526:	je     403554 <__sprintf_chk@plt+0x2364>
  403528:	mov    rax,QWORD PTR [rsp+0x38]
  40352d:	test   rax,rax
  403530:	je     403617 <__sprintf_chk@plt+0x2427>
  403536:	mov    rbx,QWORD PTR [rax+0x8]
  40353a:	jmp    40354f <__sprintf_chk@plt+0x235f>
  40353c:	nop    DWORD PTR [rax+0x0]
  403540:	mov    edi,DWORD PTR [rbx+0x14]
  403543:	call   4010d0 <utf8proc_tolower@plt>
  403548:	mov    DWORD PTR [rbx+0x14],eax
  40354b:	mov    rbx,QWORD PTR [rbx+0x8]
  40354f:	test   rbx,rbx
  403552:	jne    403540 <__sprintf_chk@plt+0x2350>
  403554:	mov    rax,QWORD PTR [rsp+0xb8]
  40355c:	xor    rax,QWORD PTR fs:0x28
  403565:	jne    403674 <__sprintf_chk@plt+0x2484>
  40356b:	add    rsp,0xc8
  403572:	pop    rbx
  403573:	pop    rbp
  403574:	pop    r12
  403576:	pop    r13
  403578:	pop    r14
  40357a:	pop    r15
  40357c:	ret    
  40357d:	lea    rsi,[rsp+0x50]
  403582:	mov    rdx,rbp
  403585:	mov    rbx,rsi
  403588:	mov    esi,0x63
  40358d:	mov    rdi,rbx
  403590:	mov    r12,rbx
  403593:	call   4010f0 <fgets@plt>
  403598:	test   rax,rax
  40359b:	je     403600 <__sprintf_chk@plt+0x2410>
  40359d:	lea    rdi,[rip+0x1bdc]        # 405180 <error@@Base+0x1530>
  4035a4:	mov    ecx,0x33
  4035a9:	mov    rsi,rbx
  4035ac:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4035ae:	jne    403600 <__sprintf_chk@plt+0x2410>
  4035b0:	lea    r13,[rip+0x1c01]        # 4051b8 <error@@Base+0x1568>
  4035b7:	xor    ebx,ebx
  4035b9:	nop    DWORD PTR [rax+0x0]
  4035c0:	mov    rdx,rbp
  4035c3:	mov    esi,0x63
  4035c8:	mov    rdi,r12
  4035cb:	call   4010f0 <fgets@plt>
  4035d0:	test   rax,rax
  4035d3:	je     4035ed <__sprintf_chk@plt+0x23fd>
  4035d5:	mov    ecx,0x38
  4035da:	mov    rsi,r12
  4035dd:	mov    rdi,r13
  4035e0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4035e2:	jne    4035c0 <__sprintf_chk@plt+0x23d0>
  4035e4:	add    ebx,0x1
  4035e7:	cmp    bx,0x1
  4035eb:	jle    4035c0 <__sprintf_chk@plt+0x23d0>
  4035ed:	mov    eax,0x1
  4035f2:	jmp    40360a <__sprintf_chk@plt+0x241a>
  4035f4:	movzx  eax,BYTE PTR [rbp+0x10]
  4035f8:	or     BYTE PTR [rbx+0x10],al
  4035fb:	jmp    4034ce <__sprintf_chk@plt+0x22de>
  403600:	mov    rdi,rbp
  403603:	call   4010c0 <rewind@plt>
  403608:	xor    eax,eax
  40360a:	mov    rcx,QWORD PTR [rsp+0x30]
  40360f:	mov    BYTE PTR [rcx+0xb],al
  403612:	jmp    4032ec <__sprintf_chk@plt+0x20fc>
  403617:	mov    rax,QWORD PTR [rsp+0x20]
  40361c:	mov    rbx,QWORD PTR [rax]
  40361f:	jmp    40354f <__sprintf_chk@plt+0x235f>
  403624:	mov    rax,QWORD PTR [rsp+0x20]
  403629:	mov    rbp,QWORD PTR [rax]
  40362c:	jmp    403443 <__sprintf_chk@plt+0x2253>
  403631:	mov    rdi,rax
  403634:	call   4011c0 <utf8proc_errmsg@plt>
  403639:	mov    rdi,rax
  40363c:	xor    eax,eax
  40363e:	call   403c50 <error@@Base>
  403643:	lea    rdi,[rip+0x1ad7]        # 405121 <error@@Base+0x14d1>
  40364a:	xor    eax,eax
  40364c:	call   403c50 <error@@Base>
  403651:	lea    rdi,[rip+0x1ae1]        # 405139 <error@@Base+0x14e9>
  403658:	xor    eax,eax
  40365a:	call   403c50 <error@@Base>
  40365f:	lea    rsi,[rip+0x1aa1]        # 405107 <error@@Base+0x14b7>
  403666:	lea    rdi,[rip+0x1aa4]        # 405111 <error@@Base+0x14c1>
  40366d:	xor    eax,eax
  40366f:	call   403ce0 <error@@Base+0x90>
  403674:	call   4010b0 <__stack_chk_fail@plt>
  403679:	nop    DWORD PTR [rax+0x0]
  403680:	sub    rsp,0x8
  403684:	call   401070 <utf8proc_encode_char@plt>
  403689:	test   rax,rax
  40368c:	jle    403693 <__sprintf_chk@plt+0x24a3>
  40368e:	add    rsp,0x8
  403692:	ret    
  403693:	lea    rdi,[rip+0x1ab7]        # 405151 <error@@Base+0x1501>
  40369a:	xor    eax,eax
  40369c:	call   403c50 <error@@Base>
  4036a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4036ac:	nop    DWORD PTR [rax+0x0]
  4036b0:	push   r13
  4036b2:	push   r12
  4036b4:	xor    r12d,r12d
  4036b7:	push   rbp
  4036b8:	push   rbx
  4036b9:	xor    ebx,ebx
  4036bb:	mov    r13d,esi
  4036be:	mov    rbp,rdx
  4036c1:	sub    rsp,0x18
  4036c5:	test   dil,dil
  4036c8:	jne    403780 <__sprintf_chk@plt+0x2590>
  4036ce:	cmp    r13d,0xa
  4036d2:	je     403740 <__sprintf_chk@plt+0x2550>
  4036d4:	mov    edi,r13d
  4036d7:	call   401060 <utf8proc_get_property@plt>
  4036dc:	cmp    r13d,0x20
  4036e0:	je     4037a8 <__sprintf_chk@plt+0x25b8>
  4036e6:	movzx  eax,WORD PTR [rax]
  4036e9:	cmp    ax,0x1d
  4036ed:	ja     403704 <__sprintf_chk@plt+0x2514>
  4036ef:	mov    edx,0x1
  4036f4:	shlx   rax,rdx,rax
  4036f9:	test   eax,0x207ffffe
  4036fe:	jne    4037a8 <__sprintf_chk@plt+0x25b8>
  403704:	cmp    r13d,0xff
  40370b:	jbe    403800 <__sprintf_chk@plt+0x2610>
  403711:	lea    rdi,[rbp+rbx*1+0x0]
  403716:	lea    rcx,[rip+0x1a57]        # 405174 <error@@Base+0x1524>
  40371d:	mov    r8d,r13d
  403720:	add    rsp,0x18
  403724:	mov    rdx,0xffffffffffffffff
  40372b:	mov    esi,0x1
  403730:	pop    rbx
  403731:	pop    rbp
  403732:	pop    r12
  403734:	pop    r13
  403736:	xor    eax,eax
  403738:	jmp    4011f0 <__sprintf_chk@plt>
  40373d:	nop    DWORD PTR [rax]
  403740:	test   cl,cl
  403742:	lea    rax,[rip+0x1a1f]        # 405168 <error@@Base+0x1518>
  403749:	lea    rcx,[rip+0x1af9]        # 405249 <error@@Base+0x15f9>
  403750:	lea    rdi,[rbp+rbx*1+0x0]
  403755:	mov    rdx,0xffffffffffffffff
  40375c:	mov    esi,0x1
  403761:	cmovne rcx,rax
  403765:	add    rsp,0x18
  403769:	xor    eax,eax
  40376b:	pop    rbx
  40376c:	pop    rbp
  40376d:	pop    r12
  40376f:	pop    r13
  403771:	jmp    4011f0 <__sprintf_chk@plt>
  403776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403780:	mov    rsi,rdx
  403783:	mov    edi,0x5e
  403788:	xor    eax,eax
  40378a:	mov    DWORD PTR [rsp+0xc],ecx
  40378e:	call   403680 <__sprintf_chk@plt+0x2490>
  403793:	mov    ecx,DWORD PTR [rsp+0xc]
  403797:	movsx  r12w,al
  40379c:	movsx  rbx,al
  4037a0:	jmp    4036ce <__sprintf_chk@plt+0x24de>
  4037a5:	nop    DWORD PTR [rax]
  4037a8:	mov    edi,r13d
  4037ab:	call   401140 <utf8proc_category@plt>
  4037b0:	sub    eax,0x6
  4037b3:	cmp    eax,0x2
  4037b6:	ja     4037d2 <__sprintf_chk@plt+0x25e2>
  4037b8:	lea    rsi,[rbp+rbx*1+0x0]
  4037bd:	mov    edi,0x25cc
  4037c2:	xor    eax,eax
  4037c4:	call   403680 <__sprintf_chk@plt+0x2490>
  4037c9:	cbw    
  4037cb:	add    r12d,eax
  4037ce:	movsx  rbx,r12w
  4037d2:	lea    rsi,[rbp+rbx*1+0x0]
  4037d7:	mov    edi,r13d
  4037da:	xor    eax,eax
  4037dc:	call   403680 <__sprintf_chk@plt+0x2490>
  4037e1:	cbw    
  4037e3:	add    r12d,eax
  4037e6:	movsx  r12,r12w
  4037ea:	mov    BYTE PTR [rbp+r12*1+0x0],0x0
  4037f0:	add    rsp,0x18
  4037f4:	pop    rbx
  4037f5:	pop    rbp
  4037f6:	pop    r12
  4037f8:	pop    r13
  4037fa:	ret    
  4037fb:	nop    DWORD PTR [rax+rax*1+0x0]
  403800:	lea    rdi,[rbp+rbx*1+0x0]
  403805:	mov    r8d,r13d
  403808:	lea    rcx,[rip+0x195e]        # 40516d <error@@Base+0x151d>
  40380f:	jmp    403720 <__sprintf_chk@plt+0x2530>
  403814:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40381f:	nop
  403820:	push   r12
  403822:	push   rbp
  403823:	mov    rbp,rdi
  403826:	push   rbx
  403827:	mov    rdi,rsi
  40382a:	lea    rsi,[rip+0x194a]        # 40517b <error@@Base+0x152b>
  403831:	mov    rbx,rdx
  403834:	sub    rsp,0x20
  403838:	mov    rax,QWORD PTR fs:0x28
  403841:	mov    QWORD PTR [rsp+0x18],rax
  403846:	xor    eax,eax
  403848:	call   403d30 <error@@Base+0xe0>
  40384d:	test   rbx,rbx
  403850:	mov    r12,rax
  403853:	je     4038a7 <__sprintf_chk@plt+0x26b7>
  403855:	lea    rdi,[rip+0x1924]        # 405180 <error@@Base+0x1530>
  40385c:	mov    rcx,rax
  40385f:	mov    edx,0x37
  403864:	mov    esi,0x1
  403869:	call   4011a0 <fwrite@plt>
  40386e:	lea    rdi,[rip+0x1943]        # 4051b8 <error@@Base+0x1568>
  403875:	mov    rcx,r12
  403878:	mov    edx,0x37
  40387d:	mov    esi,0x1
  403882:	call   4011a0 <fwrite@plt>
  403887:	mov    rdi,r12
  40388a:	xor    eax,eax
  40388c:	call   rbx
  40388e:	lea    rdi,[rip+0x1923]        # 4051b8 <error@@Base+0x1568>
  403895:	mov    rcx,r12
  403898:	mov    edx,0x37
  40389d:	mov    esi,0x1
  4038a2:	call   4011a0 <fwrite@plt>
  4038a7:	mov    rbx,QWORD PTR [rbp+0x0]
  4038ab:	lea    rbp,[rsp+0xf]
  4038b0:	test   rbx,rbx
  4038b3:	je     4038df <__sprintf_chk@plt+0x26ef>
  4038b5:	nop    DWORD PTR [rax]
  4038b8:	movsx  edi,BYTE PTR [rbx+0x10]
  4038bc:	mov    esi,DWORD PTR [rbx+0x14]
  4038bf:	xor    ecx,ecx
  4038c1:	xor    eax,eax
  4038c3:	mov    rdx,rbp
  4038c6:	call   4036b0 <__sprintf_chk@plt+0x24c0>
  4038cb:	mov    rsi,r12
  4038ce:	mov    rdi,rbp
  4038d1:	call   4010e0 <fputs@plt>
  4038d6:	mov    rbx,QWORD PTR [rbx+0x8]
  4038da:	test   rbx,rbx
  4038dd:	jne    4038b8 <__sprintf_chk@plt+0x26c8>
  4038df:	xor    eax,eax
  4038e1:	mov    rdi,r12
  4038e4:	call   403af0 <__sprintf_chk@plt+0x2900>
  4038e9:	mov    rax,QWORD PTR [rsp+0x18]
  4038ee:	xor    rax,QWORD PTR fs:0x28
  4038f7:	jne    403902 <__sprintf_chk@plt+0x2712>
  4038f9:	add    rsp,0x20
  4038fd:	pop    rbx
  4038fe:	pop    rbp
  4038ff:	pop    r12
  403901:	ret    
  403902:	call   4010b0 <__stack_chk_fail@plt>
  403907:	nop    WORD PTR [rax+rax*1+0x0]
  403910:	push   r14
  403912:	push   r13
  403914:	push   r12
  403916:	push   rbp
  403917:	push   rbx
  403918:	sub    rsp,0x10
  40391c:	mov    rax,QWORD PTR fs:0x28
  403925:	mov    QWORD PTR [rsp+0x8],rax
  40392a:	xor    eax,eax
  40392c:	cmp    BYTE PTR [rsi],0x0
  40392f:	mov    DWORD PTR [rsp+0x4],0x0
  403937:	je     403988 <__sprintf_chk@plt+0x2798>
  403939:	mov    r14,rdi
  40393c:	mov    rbp,rsi
  40393f:	lea    r13,[rsp+0x4]
  403944:	mov    r12,0xffffffffffffffff
  40394b:	jmp    40396c <__sprintf_chk@plt+0x277c>
  40394d:	nop    DWORD PTR [rax]
  403950:	mov    edx,DWORD PTR [rsp+0x4]
  403954:	movsxd rbx,ebx
  403957:	xor    esi,esi
  403959:	xor    eax,eax
  40395b:	mov    rdi,r14
  40395e:	add    rbp,rbx
  403961:	call   403240 <__sprintf_chk@plt+0x2050>
  403966:	cmp    BYTE PTR [rbp+0x0],0x0
  40396a:	je     403988 <__sprintf_chk@plt+0x2798>
  40396c:	mov    rdx,r13
  40396f:	mov    rsi,r12
  403972:	mov    rdi,rbp
  403975:	call   401100 <utf8proc_iterate@plt>
  40397a:	test   eax,eax
  40397c:	mov    rbx,rax
  40397f:	jg     403950 <__sprintf_chk@plt+0x2760>
  403981:	xor    eax,eax
  403983:	jmp    40398d <__sprintf_chk@plt+0x279d>
  403985:	nop    DWORD PTR [rax]
  403988:	mov    eax,0x1
  40398d:	mov    rcx,QWORD PTR [rsp+0x8]
  403992:	xor    rcx,QWORD PTR fs:0x28
  40399b:	jne    4039aa <__sprintf_chk@plt+0x27ba>
  40399d:	add    rsp,0x10
  4039a1:	pop    rbx
  4039a2:	pop    rbp
  4039a3:	pop    r12
  4039a5:	pop    r13
  4039a7:	pop    r14
  4039a9:	ret    
  4039aa:	call   4010b0 <__stack_chk_fail@plt>
  4039af:	nop
  4039b0:	push   rbp
  4039b1:	push   rbx
  4039b2:	mov    ebx,edi
  4039b4:	movsx  ebx,bx
  4039b7:	sub    rsp,0x78
  4039bb:	mov    rax,QWORD PTR fs:0x28
  4039c4:	mov    QWORD PTR [rsp+0x68],rax
  4039c9:	xor    eax,eax
  4039cb:	mov    rbp,rsp
  4039ce:	call   401080 <getpid@plt>
  4039d3:	mov    r9d,eax
  4039d6:	mov    rax,0x40c640
  4039dd:	sub    rsp,0x8
  4039e1:	push   rbx
  4039e2:	lea    rcx,[rip+0x1807]        # 4051f0 <error@@Base+0x15a0>
  4039e9:	mov    edx,0x64
  4039ee:	mov    esi,0x1
  4039f3:	mov    rdi,rbp
  4039f6:	mov    r8,QWORD PTR [rax]
  4039f9:	xor    eax,eax
  4039fb:	call   4011f0 <__sprintf_chk@plt>
  403a00:	mov    rdi,rbp
  403a03:	call   4011d0 <strdup@plt>
  403a08:	pop    rdx
  403a09:	pop    rcx
  403a0a:	mov    rdx,QWORD PTR [rsp+0x68]
  403a0f:	xor    rdx,QWORD PTR fs:0x28
  403a18:	jne    403a21 <__sprintf_chk@plt+0x2831>
  403a1a:	add    rsp,0x78
  403a1e:	pop    rbx
  403a1f:	pop    rbp
  403a20:	ret    
  403a21:	call   4010b0 <__stack_chk_fail@plt>
  403a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a30:	mov    rax,0x40c648
  403a37:	push   r12
  403a39:	mov    r12d,edi
  403a3c:	push   rbp
  403a3d:	push   rbx
  403a3e:	mov    rdx,QWORD PTR [rax]
  403a41:	test   rdx,rdx
  403a44:	je     403a4a <__sprintf_chk@plt+0x285a>
  403a46:	xor    eax,eax
  403a48:	call   rdx
  403a4a:	cmp    WORD PTR [rip+0x48d0],0x0        # 408322 <error@@Base+0x46d2>
  403a52:	mov    ebx,0x1
  403a57:	jle    403a8b <__sprintf_chk@plt+0x289b>
  403a59:	nop    DWORD PTR [rax+0x0]
  403a60:	movsx  edi,bx
  403a63:	xor    eax,eax
  403a65:	add    ebx,0x1
  403a68:	call   4039b0 <__sprintf_chk@plt+0x27c0>
  403a6d:	mov    rdi,rax
  403a70:	mov    rbp,rax
  403a73:	xor    eax,eax
  403a75:	call   401050 <unlink@plt>
  403a7a:	mov    rdi,rbp
  403a7d:	call   401040 <free@plt>
  403a82:	cmp    WORD PTR [rip+0x4899],bx        # 408322 <error@@Base+0x46d2>
  403a89:	jge    403a60 <__sprintf_chk@plt+0x2870>
  403a8b:	mov    edi,r12d
  403a8e:	call   401190 <exit@plt>
  403a93:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403a9e:	xchg   ax,ax
  403aa0:	movzx  edx,BYTE PTR [rdi]
  403aa3:	test   dl,dl
  403aa5:	je     403aeb <__sprintf_chk@plt+0x28fb>
  403aa7:	movzx  ecx,BYTE PTR [rsi]
  403aaa:	cmp    cl,dl
  403aac:	jne    403ad9 <__sprintf_chk@plt+0x28e9>
  403aae:	xor    eax,eax
  403ab0:	jmp    403ac0 <__sprintf_chk@plt+0x28d0>
  403ab2:	nop    WORD PTR [rax+rax*1+0x0]
  403ab8:	movzx  ecx,BYTE PTR [rsi+rax*1]
  403abc:	cmp    dl,cl
  403abe:	jne    403ad9 <__sprintf_chk@plt+0x28e9>
  403ac0:	add    rax,0x1
  403ac4:	movzx  edx,BYTE PTR [rdi+rax*1]
  403ac8:	mov    rcx,rax
  403acb:	test   dl,dl
  403acd:	jne    403ab8 <__sprintf_chk@plt+0x28c8>
  403acf:	movzx  ecx,BYTE PTR [rsi+rcx*1]
  403ad3:	xor    edx,edx
  403ad5:	test   cl,cl
  403ad7:	je     403ae8 <__sprintf_chk@plt+0x28f8>
  403ad9:	cmp    dl,cl
  403adb:	sbb    eax,eax
  403add:	or     eax,0x1
  403ae0:	ret    
  403ae1:	nop    DWORD PTR [rax+0x0]
  403ae8:	xor    eax,eax
  403aea:	ret    
  403aeb:	xor    ecx,ecx
  403aed:	jmp    403acf <__sprintf_chk@plt+0x28df>
  403aef:	nop
  403af0:	mov    rax,QWORD PTR [rip+0x44e1]        # 407fd8 <error@@Base+0x4388>
  403af7:	cmp    QWORD PTR [rax],rdi
  403afa:	je     403b10 <__sprintf_chk@plt+0x2920>
  403afc:	mov    rax,QWORD PTR [rip+0x44cd]        # 407fd0 <error@@Base+0x4380>
  403b03:	cmp    rdi,QWORD PTR [rax]
  403b06:	je     403b10 <__sprintf_chk@plt+0x2920>
  403b08:	jmp    401090 <fclose@plt>
  403b0d:	nop    DWORD PTR [rax]
  403b10:	repz ret 
  403b12:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403b1d:	nop    DWORD PTR [rax]
  403b20:	sub    rsp,0xa8
  403b27:	mov    rsi,rdi
  403b2a:	mov    edi,0x1
  403b2f:	mov    rdx,rsp
  403b32:	mov    rax,QWORD PTR fs:0x28
  403b3b:	mov    QWORD PTR [rsp+0x98],rax
  403b43:	xor    eax,eax
  403b45:	call   401150 <__xstat@plt>
  403b4a:	test   eax,eax
  403b4c:	sete   al
  403b4f:	mov    rcx,QWORD PTR [rsp+0x98]
  403b57:	xor    rcx,QWORD PTR fs:0x28
  403b60:	jne    403b6a <__sprintf_chk@plt+0x297a>
  403b62:	add    rsp,0xa8
  403b69:	ret    
  403b6a:	call   4010b0 <__stack_chk_fail@plt>
  403b6f:	nop
  403b70:	movzx  eax,WORD PTR [rip+0x47ab]        # 408322 <error@@Base+0x46d2>
  403b77:	push   rbx
  403b78:	lea    edi,[rax+0x1]
  403b7b:	xor    eax,eax
  403b7d:	mov    WORD PTR [rip+0x479e],di        # 408322 <error@@Base+0x46d2>
  403b84:	movsx  edi,di
  403b87:	call   4039b0 <__sprintf_chk@plt+0x27c0>
  403b8c:	mov    rbx,rax
  403b8f:	mov    rdi,rax
  403b92:	xor    eax,eax
  403b94:	call   401050 <unlink@plt>
  403b99:	mov    rax,rbx
  403b9c:	pop    rbx
  403b9d:	ret    
  403b9e:	xchg   ax,ax
  403ba0:	push   rbx
  403ba1:	mov    rbx,rdi
  403ba4:	call   4010a0 <strlen@plt>
  403ba9:	sub    ax,0x1
  403bad:	movsx  rdx,ax
  403bb1:	js     403bda <__sprintf_chk@plt+0x29ea>
  403bb3:	cmp    BYTE PTR [rbx+rdx*1],0x2f
  403bb7:	jne    403bca <__sprintf_chk@plt+0x29da>
  403bb9:	jmp    403bda <__sprintf_chk@plt+0x29ea>
  403bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  403bc0:	movsx  rdx,ax
  403bc4:	cmp    BYTE PTR [rbx+rdx*1],0x2f
  403bc8:	je     403bda <__sprintf_chk@plt+0x29ea>
  403bca:	sub    eax,0x1
  403bcd:	cmp    ax,0xffff
  403bd1:	jne    403bc0 <__sprintf_chk@plt+0x29d0>
  403bd3:	mov    rdx,0xffffffffffffffff
  403bda:	lea    rax,[rbx+rdx*1+0x1]
  403bdf:	pop    rbx
  403be0:	ret    
  403be1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403bec:	nop    DWORD PTR [rax+0x0]
  403bf0:	sub    rsp,0x8
  403bf4:	xor    edi,edi
  403bf6:	xor    eax,eax
  403bf8:	call   403a30 <__sprintf_chk@plt+0x2840>
  403bfd:	nop    DWORD PTR [rax]
  403c00:	sub    rsp,0x8
  403c04:	mov    rax,0x40c638
  403c0b:	mov    rdx,QWORD PTR [rax]
  403c0e:	test   rdx,rdx
  403c11:	je     403c1e <__sprintf_chk@plt+0x2a2e>
  403c13:	xor    eax,eax
  403c15:	call   rdx
  403c17:	xor    eax,eax
  403c19:	call   403bf0 <__sprintf_chk@plt+0x2a00>
  403c1e:	mov    rax,0x40c640
  403c25:	mov    r8,rdi
  403c28:	lea    rdx,[rip+0x15cf]        # 4051fe <error@@Base+0x15ae>
  403c2f:	mov    esi,0x1
  403c34:	mov    rcx,QWORD PTR [rax]
  403c37:	mov    rax,QWORD PTR [rip+0x43ba]        # 407ff8 <error@@Base+0x43a8>
  403c3e:	mov    rdi,QWORD PTR [rax]
  403c41:	xor    eax,eax
  403c43:	call   4011b0 <__fprintf_chk@plt>
  403c48:	jmp    403c17 <__sprintf_chk@plt+0x2a27>
  403c4a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403c50 <error@@Base>:
  403c50:	sub    rsp,0x8
  403c54:	mov    rax,0x40c640
  403c5b:	mov    r8,rdi
  403c5e:	lea    rdx,[rip+0x15a8]        # 40520d <error@@Base+0x15bd>
  403c65:	mov    esi,0x1
  403c6a:	mov    rcx,QWORD PTR [rax]
  403c6d:	mov    rax,QWORD PTR [rip+0x4384]        # 407ff8 <error@@Base+0x43a8>
  403c74:	mov    rdi,QWORD PTR [rax]
  403c77:	xor    eax,eax
  403c79:	call   4011b0 <__fprintf_chk@plt>
  403c7e:	mov    rax,0x4081d0
  403c85:	mov    edi,DWORD PTR [rax]
  403c87:	xor    eax,eax
  403c89:	call   403a30 <__sprintf_chk@plt+0x2840>
  403c8e:	xchg   ax,ax
  403c90:	sub    rsp,0x8
  403c94:	call   401110 <calloc@plt>
  403c99:	test   rax,rax
  403c9c:	je     403ca3 <error@@Base+0x53>
  403c9e:	add    rsp,0x8
  403ca2:	ret    
  403ca3:	lea    rdi,[rip+0x156b]        # 405215 <error@@Base+0x15c5>
  403caa:	call   403c50 <error@@Base>
  403caf:	nop
  403cb0:	cmp    BYTE PTR [rip+0x4669],0x0        # 408320 <error@@Base+0x46d0>
  403cb7:	je     403cbb <error@@Base+0x6b>
  403cb9:	repz ret 
  403cbb:	lea    rdi,[rip+0x156d]        # 40522f <error@@Base+0x15df>
  403cc2:	sub    rsp,0x8
  403cc6:	xor    eax,eax
  403cc8:	mov    BYTE PTR [rip+0x4651],0x1        # 408320 <error@@Base+0x46d0>
  403ccf:	call   403c50 <error@@Base>
  403cd4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403cdf:	nop
  403ce0:	sub    rsp,0x8
  403ce4:	mov    rax,0x40c640
  403ceb:	mov    r8,rdi
  403cee:	lea    rdx,[rip+0x1549]        # 40523e <error@@Base+0x15ee>
  403cf5:	mov    r9,rsi
  403cf8:	mov    esi,0x1
  403cfd:	mov    rcx,QWORD PTR [rax]
  403d00:	mov    rax,QWORD PTR [rip+0x42f1]        # 407ff8 <error@@Base+0x43a8>
  403d07:	mov    rdi,QWORD PTR [rax]
  403d0a:	xor    eax,eax
  403d0c:	call   4011b0 <__fprintf_chk@plt>
  403d11:	mov    rax,0x4081d0
  403d18:	mov    edi,DWORD PTR [rax]
  403d1a:	xor    eax,eax
  403d1c:	call   403a30 <__sprintf_chk@plt+0x2840>
  403d21:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403d2c:	nop    DWORD PTR [rax+0x0]
  403d30:	test   rdi,rdi
  403d33:	je     403d58 <error@@Base+0x108>
  403d35:	push   rbp
  403d36:	push   rbx
  403d37:	mov    rbp,rsi
  403d3a:	mov    rbx,rdi
  403d3d:	sub    rsp,0x8
  403d41:	call   401180 <fopen@plt>
  403d46:	test   rax,rax
  403d49:	je     403d70 <error@@Base+0x120>
  403d4b:	add    rsp,0x8
  403d4f:	pop    rbx
  403d50:	pop    rbp
  403d51:	ret    
  403d52:	nop    WORD PTR [rax+rax*1+0x0]
  403d58:	cmp    BYTE PTR [rsi],0x72
  403d5b:	je     403d90 <error@@Base+0x140>
  403d5d:	mov    rax,QWORD PTR [rip+0x426c]        # 407fd0 <error@@Base+0x4380>
  403d64:	mov    rax,QWORD PTR [rax]
  403d67:	ret    
  403d68:	nop    DWORD PTR [rax+rax*1+0x0]
  403d70:	cmp    BYTE PTR [rbp+0x0],0x77
  403d74:	mov    rsi,rbx
  403d77:	je     403da0 <error@@Base+0x150>
  403d79:	lea    rdi,[rip+0x14e1]        # 405261 <error@@Base+0x1611>
  403d80:	xor    eax,eax
  403d82:	call   403ce0 <error@@Base+0x90>
  403d87:	nop    WORD PTR [rax+rax*1+0x0]
  403d90:	mov    rax,QWORD PTR [rip+0x4241]        # 407fd8 <error@@Base+0x4388>
  403d97:	mov    rax,QWORD PTR [rax]
  403d9a:	ret    
  403d9b:	nop    DWORD PTR [rax+rax*1+0x0]
  403da0:	lea    rdi,[rip+0x14a4]        # 40524b <error@@Base+0x15fb>
  403da7:	call   403ce0 <error@@Base+0x90>
  403dac:	nop    DWORD PTR [rax+0x0]
  403db0:	push   r15
  403db2:	push   r14
  403db4:	xor    eax,eax
  403db6:	push   r13
  403db8:	push   r12
  403dba:	mov    r15,rsi
  403dbd:	push   rbp
  403dbe:	push   rbx
  403dbf:	mov    rbx,rdi
  403dc2:	sub    rsp,0x38
  403dc6:	mov    QWORD PTR [rsp+0x20],rdi
  403dcb:	mov    rdi,QWORD PTR [rsi]
  403dce:	mov    QWORD PTR [rsp+0x28],rdx
  403dd3:	mov    QWORD PTR [rsp+0x8],rcx
  403dd8:	call   403ba0 <__sprintf_chk@plt+0x29b0>
  403ddd:	mov    rcx,0x40c640
  403de4:	lea    rsi,[rip+0xfffffffffffffec5]        # 403cb0 <error@@Base+0x60>
  403deb:	mov    edi,0x2
  403df0:	mov    QWORD PTR [rcx],rax
  403df3:	call   401130 <__sysv_signal@plt>
  403df8:	lea    rsi,[rip+0xfffffffffffffeb1]        # 403cb0 <error@@Base+0x60>
  403dff:	mov    edi,0xf
  403e04:	call   401130 <__sysv_signal@plt>
  403e09:	mov    r9d,DWORD PTR [rbx]
  403e0c:	cmp    r9d,0x1
  403e10:	je     403fbc <error@@Base+0x36c>
  403e16:	mov    rdx,QWORD PTR [rsp+0x8]
  403e1b:	jle    403fc8 <error@@Base+0x378>
  403e21:	mov    r13d,0x1
  403e27:	xor    r12d,r12d
  403e2a:	mov    ebx,0x1
  403e2f:	mov    r8d,r13d
  403e32:	mov    r14,rdx
  403e35:	mov    r13d,r9d
  403e38:	jmp    403e5c <error@@Base+0x20c>
  403e3a:	nop    WORD PTR [rax+rax*1+0x0]
  403e40:	movsx  rax,r12w
  403e44:	add    r12d,0x1
  403e48:	mov    QWORD PTR [r15+rax*8],rbp
  403e4c:	add    ebx,0x1
  403e4f:	movsx  r8d,bx
  403e53:	cmp    r8d,r13d
  403e56:	jge    403f70 <error@@Base+0x320>
  403e5c:	movsx  rax,bx
  403e60:	mov    rbp,QWORD PTR [r15+rax*8]
  403e64:	lea    r9,[rax*8+0x0]
  403e6c:	cmp    BYTE PTR [rbp+0x0],0x2d
  403e70:	jne    403e40 <error@@Base+0x1f0>
  403e72:	movzx  edx,BYTE PTR [rbp+0x1]
  403e76:	mov    DWORD PTR [rsp+0x14],r8d
  403e7b:	mov    QWORD PTR [rsp+0x18],r9
  403e80:	test   dl,dl
  403e82:	mov    BYTE PTR [rsp+0x8],dl
  403e86:	je     403e40 <error@@Base+0x1f0>
  403e88:	mov    rdi,rbp
  403e8b:	call   4010a0 <strlen@plt>
  403e90:	mov    ecx,0x6
  403e95:	cmp    rax,0x6
  403e99:	lea    rsi,[rip+0x13d5]        # 405275 <error@@Base+0x1625>
  403ea0:	cmovle rcx,rax
  403ea4:	mov    rdi,rbp
  403ea7:	cmp    rcx,rcx
  403eaa:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403eac:	je     403fcd <error@@Base+0x37d>
  403eb2:	mov    r8d,DWORD PTR [rsp+0x14]
  403eb7:	xor    edi,edi
  403eb9:	movzx  edx,BYTE PTR [rsp+0x8]
  403ebe:	add    r8d,0x1
  403ec2:	cmp    r8d,r13d
  403ec5:	jge    403ed1 <error@@Base+0x281>
  403ec7:	mov    r9,QWORD PTR [rsp+0x18]
  403ecc:	mov    rdi,QWORD PTR [r15+r9*1+0x8]
  403ed1:	test   r14,r14
  403ed4:	je     403f0a <error@@Base+0x2ba>
  403ed6:	movzx  eax,BYTE PTR [r14]
  403eda:	test   al,al
  403edc:	je     403f0a <error@@Base+0x2ba>
  403ede:	cmp    al,dl
  403ee0:	je     403f20 <error@@Base+0x2d0>
  403ee2:	xor    eax,eax
  403ee4:	jmp    403ef4 <error@@Base+0x2a4>
  403ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ef0:	cmp    dl,cl
  403ef2:	je     403f28 <error@@Base+0x2d8>
  403ef4:	add    eax,0x1
  403ef7:	movsx  rcx,ax
  403efb:	lea    rcx,[rcx+rcx*2]
  403eff:	lea    rsi,[r14+rcx*8]
  403f03:	movzx  ecx,BYTE PTR [rsi]
  403f06:	test   cl,cl
  403f08:	jne    403ef0 <error@@Base+0x2a0>
  403f0a:	lea    rdi,[rip+0x136a]        # 40527b <error@@Base+0x162b>
  403f11:	mov    rsi,rbp
  403f14:	xor    eax,eax
  403f16:	call   403ce0 <error@@Base+0x90>
  403f1b:	nop    DWORD PTR [rax+rax*1+0x0]
  403f20:	mov    rsi,r14
  403f23:	nop    DWORD PTR [rax+rax*1+0x0]
  403f28:	mov    rax,QWORD PTR [rsi+0x8]
  403f2c:	test   rax,rax
  403f2f:	je     403f90 <error@@Base+0x340>
  403f31:	test   rdi,rdi
  403f34:	movzx  edx,BYTE PTR [rbp+0x2]
  403f38:	jne    403f3e <error@@Base+0x2ee>
  403f3a:	test   dl,dl
  403f3c:	je     403f90 <error@@Base+0x340>
  403f3e:	cmp    QWORD PTR [rax],0x0
  403f42:	jne    403fd9 <error@@Base+0x389>
  403f48:	lea    rcx,[rbp+0x2]
  403f4c:	test   dl,dl
  403f4e:	cmovne rdi,rcx
  403f52:	mov    QWORD PTR [rax],rdi
  403f55:	cmp    BYTE PTR [rbp+0x2],0x0
  403f59:	lea    eax,[rbx+0x1]
  403f5c:	cmove  ebx,eax
  403f5f:	add    ebx,0x1
  403f62:	movsx  r8d,bx
  403f66:	cmp    r8d,r13d
  403f69:	jl     403e5c <error@@Base+0x20c>
  403f6f:	nop
  403f70:	movsx  r12d,r12w
  403f74:	mov    rax,QWORD PTR [rsp+0x20]
  403f79:	mov    DWORD PTR [rax],r12d
  403f7c:	add    rsp,0x38
  403f80:	pop    rbx
  403f81:	pop    rbp
  403f82:	pop    r12
  403f84:	pop    r13
  403f86:	pop    r14
  403f88:	pop    r15
  403f8a:	ret    
  403f8b:	nop    DWORD PTR [rax+rax*1+0x0]
  403f90:	mov    rax,QWORD PTR [rsi+0x10]
  403f94:	test   rax,rax
  403f97:	je     403f0a <error@@Base+0x2ba>
  403f9d:	cmp    BYTE PTR [rbp+0x2],0x0
  403fa1:	jne    403f0a <error@@Base+0x2ba>
  403fa7:	cmp    BYTE PTR [rax],0x0
  403faa:	jne    403fd9 <error@@Base+0x389>
  403fac:	mov    BYTE PTR [rax],0x1
  403faf:	mov    rax,QWORD PTR [rsp+0x20]
  403fb4:	mov    r13d,DWORD PTR [rax]
  403fb7:	jmp    403e4c <error@@Base+0x1fc>
  403fbc:	mov    rax,0x4081d4
  403fc3:	cmp    BYTE PTR [rax],0x0
  403fc6:	jne    403fcd <error@@Base+0x37d>
  403fc8:	xor    r12d,r12d
  403fcb:	jmp    403f74 <error@@Base+0x324>
  403fcd:	mov    rdi,QWORD PTR [rsp+0x28]
  403fd2:	xor    eax,eax
  403fd4:	call   403c00 <__sprintf_chk@plt+0x2a10>
  403fd9:	lea    rdi,[rip+0x12aa]        # 40528a <error@@Base+0x163a>
  403fe0:	mov    rsi,rbp
  403fe3:	xor    eax,eax
  403fe5:	call   403ce0 <error@@Base+0x90>
  403fea:	nop    WORD PTR [rax+rax*1+0x0]
  403ff0:	mov    rax,0x40c640
  403ff7:	mov    r8,rdi
  403ffa:	lea    rdx,[rip+0x123d]        # 40523e <error@@Base+0x15ee>
  404001:	mov    r9,rsi
  404004:	mov    esi,0x1
  404009:	mov    rcx,QWORD PTR [rax]
  40400c:	mov    rax,QWORD PTR [rip+0x3fe5]        # 407ff8 <error@@Base+0x43a8>
  404013:	mov    rdi,QWORD PTR [rax]
  404016:	xor    eax,eax
  404018:	jmp    4011b0 <__fprintf_chk@plt>
  40401d:	nop    DWORD PTR [rax]
  404020:	mov    QWORD PTR [rdi+0x8],0x0
  404028:	mov    QWORD PTR [rdi],0x0
  40402f:	mov    QWORD PTR [rdi+0x10],0x0
  404037:	mov    QWORD PTR [rdi+0x18],0x0
  40403f:	ret    
  404040:	push   rbx
  404041:	mov    rax,QWORD PTR [rdi]
  404044:	mov    rbx,rdi
  404047:	mov    QWORD PTR [rsi],0x0
  40404e:	test   rax,rax
  404051:	mov    QWORD PTR [rsi+0x8],rax
  404055:	mov    QWORD PTR [rdi],rsi
  404058:	je     404080 <error@@Base+0x430>
  40405a:	mov    QWORD PTR [rax],rsi
  40405d:	mov    rdi,QWORD PTR [rbx+0x10]
  404061:	test   rdi,rdi
  404064:	je     404073 <error@@Base+0x423>
  404066:	call   401040 <free@plt>
  40406b:	mov    QWORD PTR [rbx+0x10],0x0
  404073:	add    QWORD PTR [rbx+0x18],0x1
  404078:	pop    rbx
  404079:	ret    
  40407a:	nop    WORD PTR [rax+rax*1+0x0]
  404080:	mov    QWORD PTR [rdi+0x8],rsi
  404084:	jmp    40405d <error@@Base+0x40d>
  404086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404090:	push   rbx
  404091:	mov    rax,QWORD PTR [rdi+0x8]
  404095:	mov    rbx,rdi
  404098:	mov    QWORD PTR [rsi+0x8],0x0
  4040a0:	test   rax,rax
  4040a3:	mov    QWORD PTR [rsi],rax
  4040a6:	je     4040d0 <error@@Base+0x480>
  4040a8:	mov    QWORD PTR [rax+0x8],rsi
  4040ac:	mov    rdi,QWORD PTR [rbx+0x10]
  4040b0:	mov    QWORD PTR [rbx+0x8],rsi
  4040b4:	test   rdi,rdi
  4040b7:	je     4040c6 <error@@Base+0x476>
  4040b9:	call   401040 <free@plt>
  4040be:	mov    QWORD PTR [rbx+0x10],0x0
  4040c6:	add    QWORD PTR [rbx+0x18],0x1
  4040cb:	pop    rbx
  4040cc:	ret    
  4040cd:	nop    DWORD PTR [rax]
  4040d0:	mov    QWORD PTR [rdi],rsi
  4040d3:	jmp    4040ac <error@@Base+0x45c>
  4040d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4040e0:	mov    rax,QWORD PTR [rdx]
  4040e3:	push   rbx
  4040e4:	mov    rbx,rdi
  4040e7:	mov    QWORD PTR [rsi+0x8],rdx
  4040eb:	test   rax,rax
  4040ee:	mov    QWORD PTR [rsi],rax
  4040f1:	je     404120 <error@@Base+0x4d0>
  4040f3:	mov    QWORD PTR [rax+0x8],rsi
  4040f7:	mov    rdi,QWORD PTR [rbx+0x10]
  4040fb:	mov    QWORD PTR [rdx],rsi
  4040fe:	test   rdi,rdi
  404101:	je     404110 <error@@Base+0x4c0>
  404103:	call   401040 <free@plt>
  404108:	mov    QWORD PTR [rbx+0x10],0x0
  404110:	add    QWORD PTR [rbx+0x18],0x1
  404115:	pop    rbx
  404116:	ret    
  404117:	nop    WORD PTR [rax+rax*1+0x0]
  404120:	mov    QWORD PTR [rdi],rsi
  404123:	jmp    4040f7 <error@@Base+0x4a7>
  404125:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404130:	mov    rax,QWORD PTR [rsi+0x8]
  404134:	push   rbx
  404135:	mov    rbx,rdi
  404138:	mov    QWORD PTR [rdx],rsi
  40413b:	test   rax,rax
  40413e:	mov    QWORD PTR [rdx+0x8],rax
  404142:	mov    QWORD PTR [rsi+0x8],rdx
  404146:	je     404170 <error@@Base+0x520>
  404148:	mov    QWORD PTR [rax],rdx
  40414b:	mov    rdi,QWORD PTR [rbx+0x10]
  40414f:	test   rdi,rdi
  404152:	je     404161 <error@@Base+0x511>
  404154:	call   401040 <free@plt>
  404159:	mov    QWORD PTR [rbx+0x10],0x0
  404161:	add    QWORD PTR [rbx+0x18],0x1
  404166:	pop    rbx
  404167:	ret    
  404168:	nop    DWORD PTR [rax+rax*1+0x0]
  404170:	mov    QWORD PTR [rdi+0x8],rdx
  404174:	jmp    40414b <error@@Base+0x4fb>
  404176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404180:	mov    rax,QWORD PTR [rsi]
  404183:	push   rbx
  404184:	mov    rbx,rdi
  404187:	mov    rdx,QWORD PTR [rsi+0x8]
  40418b:	test   rax,rax
  40418e:	je     4041d0 <error@@Base+0x580>
  404190:	mov    QWORD PTR [rax+0x8],rdx
  404194:	mov    rdx,QWORD PTR [rsi+0x8]
  404198:	test   rdx,rdx
  40419b:	je     4041e0 <error@@Base+0x590>
  40419d:	mov    QWORD PTR [rdx],rax
  4041a0:	mov    rdi,QWORD PTR [rbx+0x10]
  4041a4:	mov    QWORD PTR [rsi+0x8],0x0
  4041ac:	mov    QWORD PTR [rsi],0x0
  4041b3:	test   rdi,rdi
  4041b6:	je     4041c5 <error@@Base+0x575>
  4041b8:	call   401040 <free@plt>
  4041bd:	mov    QWORD PTR [rbx+0x10],0x0
  4041c5:	sub    QWORD PTR [rbx+0x18],0x1
  4041ca:	pop    rbx
  4041cb:	ret    
  4041cc:	nop    DWORD PTR [rax+0x0]
  4041d0:	test   rdx,rdx
  4041d3:	mov    QWORD PTR [rdi],rdx
  4041d6:	jne    40419d <error@@Base+0x54d>
  4041d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4041e0:	mov    QWORD PTR [rbx+0x8],rax
  4041e4:	jmp    4041a0 <error@@Base+0x550>
  4041e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041f0:	cmp    QWORD PTR [rdi+0x10],0x0
  4041f5:	je     404200 <error@@Base+0x5b0>
  4041f7:	ret    
  4041f8:	nop    DWORD PTR [rax+rax*1+0x0]
  404200:	mov    rax,QWORD PTR [rdi+0x18]
  404204:	test   rax,rax
  404207:	je     4041f7 <error@@Base+0x5a7>
  404209:	push   rbx
  40420a:	mov    esi,0x8
  40420f:	mov    rbx,rdi
  404212:	mov    rdi,rax
  404215:	xor    eax,eax
  404217:	call   403c90 <error@@Base+0x40>
  40421c:	mov    rdx,QWORD PTR [rbx]
  40421f:	mov    QWORD PTR [rbx+0x10],rax
  404223:	test   rdx,rdx
  404226:	je     404240 <error@@Base+0x5f0>
  404228:	nop    DWORD PTR [rax+rax*1+0x0]
  404230:	mov    QWORD PTR [rax],rdx
  404233:	mov    rdx,QWORD PTR [rdx+0x8]
  404237:	add    rax,0x8
  40423b:	test   rdx,rdx
  40423e:	jne    404230 <error@@Base+0x5e0>
  404240:	pop    rbx
  404241:	ret    
  404242:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40424d:	nop    DWORD PTR [rax]
  404250:	push   r12
  404252:	push   rbp
  404253:	push   rbx
  404254:	mov    rbx,QWORD PTR [rdi]
  404257:	test   rbx,rbx
  40425a:	je     404286 <error@@Base+0x636>
  40425c:	mov    rbp,rdi
  40425f:	mov    r12,rsi
  404262:	nop    WORD PTR [rax+rax*1+0x0]
  404268:	mov    rsi,rbx
  40426b:	xor    eax,eax
  40426d:	mov    rdi,rbp
  404270:	call   404180 <error@@Base+0x530>
  404275:	mov    rdi,rbx
  404278:	xor    eax,eax
  40427a:	call   r12
  40427d:	mov    rbx,QWORD PTR [rbp+0x0]
  404281:	test   rbx,rbx
  404284:	jne    404268 <error@@Base+0x618>
  404286:	pop    rbx
  404287:	pop    rbp
  404288:	pop    r12
  40428a:	ret    
  40428b:	nop    DWORD PTR [rax+rax*1+0x0]
  404290:	endbr64 
  404294:	push   r15
  404296:	lea    r15,[rip+0x3b3b]        # 407dd8 <error@@Base+0x4188>
  40429d:	push   r14
  40429f:	mov    r14,rdx
  4042a2:	push   r13
  4042a4:	mov    r13,rsi
  4042a7:	push   r12
  4042a9:	mov    r12d,edi
  4042ac:	push   rbp
  4042ad:	lea    rbp,[rip+0x3b2c]        # 407de0 <error@@Base+0x4190>
  4042b4:	push   rbx
  4042b5:	sub    rbp,r15
  4042b8:	sub    rsp,0x8
  4042bc:	call   401000 <__strcat_chk@plt-0x30>
  4042c1:	sar    rbp,0x3
  4042c5:	je     4042e6 <error@@Base+0x696>
  4042c7:	xor    ebx,ebx
  4042c9:	nop    DWORD PTR [rax+0x0]
  4042d0:	mov    rdx,r14
  4042d3:	mov    rsi,r13
  4042d6:	mov    edi,r12d
  4042d9:	call   QWORD PTR [r15+rbx*8]
  4042dd:	add    rbx,0x1
  4042e1:	cmp    rbp,rbx
  4042e4:	jne    4042d0 <error@@Base+0x680>
  4042e6:	add    rsp,0x8
  4042ea:	pop    rbx
  4042eb:	pop    rbp
  4042ec:	pop    r12
  4042ee:	pop    r13
  4042f0:	pop    r14
  4042f2:	pop    r15
  4042f4:	ret    
  4042f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404300:	endbr64 
  404304:	ret    

Disassembly of section .fini:

0000000000404308 <.fini>:
  404308:	endbr64 
  40430c:	sub    rsp,0x8
  404310:	add    rsp,0x8
  404314:	ret    
