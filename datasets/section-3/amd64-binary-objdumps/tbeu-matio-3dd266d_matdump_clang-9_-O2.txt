
../repos/tbeu-matio-3dd266d/tools/.libs/matdump:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x7fe1]        # 409ff0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <Mat_VarGetNumberOfFields@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <Mat_VarGetNumberOfFields@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x7fe2]        # 40a008 <getopt_long_only@@Base+0x3df8>
  402026:	jmp    QWORD PTR [rip+0x7fe4]        # 40a010 <getopt_long_only@@Base+0x3e00>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <Mat_VarGetNumberOfFields@plt>:
  402030:	jmp    QWORD PTR [rip+0x7fe2]        # 40a018 <Mat_VarGetNumberOfFields>
  402036:	push   0x0
  40203b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402040 <getenv@plt>:
  402040:	jmp    QWORD PTR [rip+0x7fda]        # 40a020 <getenv@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402050 <Mat_SetVerbose@plt>:
  402050:	jmp    QWORD PTR [rip+0x7fd2]        # 40a028 <Mat_SetVerbose>
  402056:	push   0x2
  40205b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402060 <free@plt>:
  402060:	jmp    QWORD PTR [rip+0x7fca]        # 40a030 <free@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402070 <Mat_LogClose@plt>:
  402070:	jmp    QWORD PTR [rip+0x7fc2]        # 40a038 <Mat_LogClose>
  402076:	push   0x4
  40207b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402080 <putchar@plt>:
  402080:	jmp    QWORD PTR [rip+0x7fba]        # 40a040 <putchar@GLIBC_2.2.5>
  402086:	push   0x5
  40208b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402090 <Mat_VarReadNext@plt>:
  402090:	jmp    QWORD PTR [rip+0x7fb2]        # 40a048 <Mat_VarReadNext>
  402096:	push   0x6
  40209b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020a0 <Mat_Open@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x7faa]        # 40a050 <Mat_Open>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020b0 <strncmp@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x7fa2]        # 40a058 <strncmp@GLIBC_2.2.5>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020c0 <Mat_VarGetCells@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x7f9a]        # 40a060 <Mat_VarGetCells>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020d0 <puts@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x7f92]        # 40a068 <puts@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020e0 <Mat_VarGetCell@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x7f8a]        # 40a070 <Mat_VarGetCell>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020f0 <Mat_VarCreate@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x7f82]        # 40a078 <Mat_VarCreate>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402100 <Mat_Warning@plt>:
  402100:	jmp    QWORD PTR [rip+0x7f7a]        # 40a080 <Mat_Warning>
  402106:	push   0xd
  40210b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402110 <Mat_VarReadDataLinear@plt>:
  402110:	jmp    QWORD PTR [rip+0x7f72]        # 40a088 <Mat_VarReadDataLinear>
  402116:	push   0xe
  40211b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402120 <Mat_Message@plt>:
  402120:	jmp    QWORD PTR [rip+0x7f6a]        # 40a090 <Mat_Message>
  402126:	push   0xf
  40212b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402130 <strlen@plt>:
  402130:	jmp    QWORD PTR [rip+0x7f62]        # 40a098 <strlen@GLIBC_2.2.5>
  402136:	push   0x10
  40213b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402140 <Mat_VarReadData@plt>:
  402140:	jmp    QWORD PTR [rip+0x7f5a]        # 40a0a0 <Mat_VarReadData>
  402146:	push   0x11
  40214b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402150 <strchr@plt>:
  402150:	jmp    QWORD PTR [rip+0x7f52]        # 40a0a8 <strchr@GLIBC_2.2.5>
  402156:	push   0x12
  40215b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402160 <printf@plt>:
  402160:	jmp    QWORD PTR [rip+0x7f4a]        # 40a0b0 <printf@GLIBC_2.2.5>
  402166:	push   0x13
  40216b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402170 <warnx@plt>:
  402170:	jmp    QWORD PTR [rip+0x7f42]        # 40a0b8 <warnx@GLIBC_2.2.5>
  402176:	push   0x14
  40217b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402180 <Mat_VarReadDataAll@plt>:
  402180:	jmp    QWORD PTR [rip+0x7f3a]        # 40a0c0 <Mat_VarReadDataAll>
  402186:	push   0x15
  40218b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402190 <Mat_VarReadInfo@plt>:
  402190:	jmp    QWORD PTR [rip+0x7f32]        # 40a0c8 <Mat_VarReadInfo>
  402196:	push   0x16
  40219b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021a0 <memset@plt>:
  4021a0:	jmp    QWORD PTR [rip+0x7f2a]        # 40a0d0 <memset@GLIBC_2.2.5>
  4021a6:	push   0x17
  4021ab:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021b0 <Mat_VarGetStructFieldnames@plt>:
  4021b0:	jmp    QWORD PTR [rip+0x7f22]        # 40a0d8 <Mat_VarGetStructFieldnames>
  4021b6:	push   0x18
  4021bb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021c0 <strcmp@plt>:
  4021c0:	jmp    QWORD PTR [rip+0x7f1a]        # 40a0e0 <strcmp@GLIBC_2.2.5>
  4021c6:	push   0x19
  4021cb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021d0 <log10@plt>:
  4021d0:	jmp    QWORD PTR [rip+0x7f12]        # 40a0e8 <log10@GLIBC_2.2.5>
  4021d6:	push   0x1a
  4021db:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021e0 <fprintf@plt>:
  4021e0:	jmp    QWORD PTR [rip+0x7f0a]        # 40a0f0 <fprintf@GLIBC_2.2.5>
  4021e6:	push   0x1b
  4021eb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021f0 <strtol@plt>:
  4021f0:	jmp    QWORD PTR [rip+0x7f02]        # 40a0f8 <strtol@GLIBC_2.2.5>
  4021f6:	push   0x1c
  4021fb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402200 <Mat_VarFree@plt>:
  402200:	jmp    QWORD PTR [rip+0x7efa]        # 40a100 <Mat_VarFree>
  402206:	push   0x1d
  40220b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402210 <Mat_SizeOf@plt>:
  402210:	jmp    QWORD PTR [rip+0x7ef2]        # 40a108 <Mat_SizeOf>
  402216:	push   0x1e
  40221b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402220 <Mat_GetLibraryVersion@plt>:
  402220:	jmp    QWORD PTR [rip+0x7eea]        # 40a110 <Mat_GetLibraryVersion>
  402226:	push   0x1f
  40222b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402230 <malloc@plt>:
  402230:	jmp    QWORD PTR [rip+0x7ee2]        # 40a118 <malloc@GLIBC_2.2.5>
  402236:	push   0x20
  40223b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402240 <Mat_VarPrint@plt>:
  402240:	jmp    QWORD PTR [rip+0x7eda]        # 40a120 <Mat_VarPrint>
  402246:	push   0x21
  40224b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402250 <Mat_Close@plt>:
  402250:	jmp    QWORD PTR [rip+0x7ed2]        # 40a128 <Mat_Close>
  402256:	push   0x22
  40225b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402260 <Mat_Critical@plt>:
  402260:	jmp    QWORD PTR [rip+0x7eca]        # 40a130 <Mat_Critical>
  402266:	push   0x23
  40226b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402270 <Mat_LogInitFunc@plt>:
  402270:	jmp    QWORD PTR [rip+0x7ec2]        # 40a138 <Mat_LogInitFunc>
  402276:	push   0x24
  40227b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402280 <Mat_VerbMessage@plt>:
  402280:	jmp    QWORD PTR [rip+0x7eba]        # 40a140 <Mat_VerbMessage>
  402286:	push   0x25
  40228b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402290 <Mat_VarGetCellsLinear@plt>:
  402290:	jmp    QWORD PTR [rip+0x7eb2]        # 40a148 <Mat_VarGetCellsLinear>
  402296:	push   0x26
  40229b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022a0 <Mat_Help@plt>:
  4022a0:	jmp    QWORD PTR [rip+0x7eaa]        # 40a150 <Mat_Help>
  4022a6:	push   0x27
  4022ab:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022b0 <Mat_VarGetStructFieldByName@plt>:
  4022b0:	jmp    QWORD PTR [rip+0x7ea2]        # 40a158 <Mat_VarGetStructFieldByName>
  4022b6:	push   0x28
  4022bb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022c0 <sprintf@plt>:
  4022c0:	jmp    QWORD PTR [rip+0x7e9a]        # 40a160 <sprintf@GLIBC_2.2.5>
  4022c6:	push   0x29
  4022cb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022d0 <Mat_SizeOfClass@plt>:
  4022d0:	jmp    QWORD PTR [rip+0x7e92]        # 40a168 <Mat_SizeOfClass>
  4022d6:	push   0x2a
  4022db:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022e0 <exit@plt>:
  4022e0:	jmp    QWORD PTR [rip+0x7e8a]        # 40a170 <exit@GLIBC_2.2.5>
  4022e6:	push   0x2b
  4022eb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022f0 <fwrite@plt>:
  4022f0:	jmp    QWORD PTR [rip+0x7e82]        # 40a178 <fwrite@GLIBC_2.2.5>
  4022f6:	push   0x2c
  4022fb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402300 <Mat_VarGetSize@plt>:
  402300:	jmp    QWORD PTR [rip+0x7e7a]        # 40a180 <Mat_VarGetSize>
  402306:	push   0x2d
  40230b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402310 <Mat_VarDuplicate@plt>:
  402310:	jmp    QWORD PTR [rip+0x7e72]        # 40a188 <Mat_VarDuplicate>
  402316:	push   0x2e
  40231b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402320 <Mat_VarReadNextInfo@plt>:
  402320:	jmp    QWORD PTR [rip+0x7e6a]        # 40a190 <Mat_VarReadNextInfo>
  402326:	push   0x2f
  40232b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

Disassembly of section .text:

0000000000402330 <getopt@@Base-0x34a0>:
  402330:	endbr64 
  402334:	xor    ebp,ebp
  402336:	mov    r9,rdx
  402339:	pop    rsi
  40233a:	mov    rdx,rsp
  40233d:	and    rsp,0xfffffffffffffff0
  402341:	push   rax
  402342:	push   rsp
  402343:	mov    r8,0x406650
  40234a:	mov    rcx,0x4065e0
  402351:	mov    rdi,0x402420
  402358:	call   QWORD PTR [rip+0x7c8a]        # 409fe8 <getopt_long_only@@Base+0x3dd8>
  40235e:	hlt    
  40235f:	nop
  402360:	endbr64 
  402364:	ret    
  402365:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40236f:	nop
  402370:	mov    eax,0x40a348
  402375:	cmp    rax,0x40a348
  40237b:	je     402390 <Mat_VarReadNextInfo@plt+0x70>
  40237d:	mov    eax,0x0
  402382:	test   rax,rax
  402385:	je     402390 <Mat_VarReadNextInfo@plt+0x70>
  402387:	mov    edi,0x40a348
  40238c:	jmp    rax
  40238e:	xchg   ax,ax
  402390:	ret    
  402391:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40239c:	nop    DWORD PTR [rax+0x0]
  4023a0:	mov    esi,0x40a348
  4023a5:	sub    rsi,0x40a348
  4023ac:	mov    rax,rsi
  4023af:	shr    rsi,0x3f
  4023b3:	sar    rax,0x3
  4023b7:	add    rsi,rax
  4023ba:	sar    rsi,1
  4023bd:	je     4023d0 <Mat_VarReadNextInfo@plt+0xb0>
  4023bf:	mov    eax,0x0
  4023c4:	test   rax,rax
  4023c7:	je     4023d0 <Mat_VarReadNextInfo@plt+0xb0>
  4023c9:	mov    edi,0x40a348
  4023ce:	jmp    rax
  4023d0:	ret    
  4023d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4023dc:	nop    DWORD PTR [rax+0x0]
  4023e0:	endbr64 
  4023e4:	cmp    BYTE PTR [rip+0x7f5d],0x0        # 40a348 <optopt@@Base+0x20>
  4023eb:	jne    402400 <Mat_VarReadNextInfo@plt+0xe0>
  4023ed:	push   rbp
  4023ee:	mov    rbp,rsp
  4023f1:	call   402370 <Mat_VarReadNextInfo@plt+0x50>
  4023f6:	mov    BYTE PTR [rip+0x7f4b],0x1        # 40a348 <optopt@@Base+0x20>
  4023fd:	pop    rbp
  4023fe:	ret    
  4023ff:	nop
  402400:	ret    
  402401:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40240c:	nop    DWORD PTR [rax+0x0]
  402410:	endbr64 
  402414:	jmp    4023a0 <Mat_VarReadNextInfo@plt+0x80>
  402416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402420:	push   rbp
  402421:	push   r15
  402423:	push   r14
  402425:	push   r13
  402427:	push   r12
  402429:	push   rbx
  40242a:	sub    rsp,0xc8
  402431:	mov    r12,rsi
  402434:	mov    DWORD PTR [rsp+0x4c],edi
  402438:	lea    rsi,[rsp+0x78]
  40243d:	lea    rdx,[rsp+0x7c]
  402442:	lea    rdi,[rsp+0x74]
  402447:	call   402220 <Mat_GetLibraryVersion@plt>
  40244c:	cmp    DWORD PTR [rsp+0x74],0x1
  402451:	jne    403ba2 <Mat_VarReadNextInfo@plt+0x1882>
  402457:	cmp    DWORD PTR [rsp+0x78],0x5
  40245c:	jne    403ba2 <Mat_VarReadNextInfo@plt+0x1882>
  402462:	cmp    DWORD PTR [rsp+0x7c],0xf
  402467:	jne    403ba2 <Mat_VarReadNextInfo@plt+0x1882>
  40246d:	lea    rdi,[rip+0x4d3c]        # 4071b0 <getopt_long_only@@Base+0xfa0>
  402474:	lea    rsi,[rip+0x1785]        # 403c00 <Mat_VarReadNextInfo@plt+0x18e0>
  40247b:	call   402270 <Mat_LogInitFunc@plt>
  402480:	lea    rax,[rip+0x17b9]        # 403c40 <Mat_VarReadNextInfo@plt+0x1920>
  402487:	mov    QWORD PTR [rip+0x7ec2],rax        # 40a350 <optopt@@Base+0x28>
  40248e:	lea    rbx,[rip+0x4f31]        # 4073c6 <getopt_long_only@@Base+0x11b6>
  402495:	lea    rbp,[rip+0x7d14]        # 40a1b0 <getopt_long_only@@Base+0x3fa0>
  40249c:	lea    r14,[rip+0x4e19]        # 4072bc <getopt_long_only@@Base+0x10ac>
  4024a3:	lea    r13,[rip+0x4b9a]        # 407044 <getopt_long_only@@Base+0xe34>
  4024aa:	lea    r15,[rip+0x7ebf]        # 40a370 <optarg@@Base>
  4024b1:	mov    QWORD PTR [rsp+0x40],r12
  4024b6:	jmp    4024c0 <Mat_VarReadNextInfo@plt+0x1a0>
  4024b8:	mov    BYTE PTR [rip+0x7e9d],0x1        # 40a35c <optopt@@Base+0x34>
  4024bf:	nop
  4024c0:	mov    edi,DWORD PTR [rsp+0x4c]
  4024c4:	mov    rsi,r12
  4024c7:	mov    rdx,rbx
  4024ca:	mov    rcx,rbp
  4024cd:	xor    r8d,r8d
  4024d0:	call   406200 <getopt_long@@Base>
  4024d5:	lea    ecx,[rax-0x48]
  4024d8:	cmp    ecx,0x2e
  4024db:	ja     402510 <Mat_VarReadNextInfo@plt+0x1f0>
  4024dd:	movsxd rcx,DWORD PTR [r13+rcx*4+0x0]
  4024e2:	add    rcx,r13
  4024e5:	jmp    rcx
  4024e7:	mov    BYTE PTR [rip+0x7e6a],0x1        # 40a358 <optopt@@Base+0x30>
  4024ee:	mov    edi,0x1
  4024f3:	lea    rsi,[rip+0x4cf6]        # 4071f0 <getopt_long_only@@Base+0xfe0>
  4024fa:	xor    eax,eax
  4024fc:	call   402280 <Mat_VerbMessage@plt>
  402501:	jmp    4024c0 <Mat_VarReadNextInfo@plt+0x1a0>
  402503:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40250d:	nop    DWORD PTR [rax]
  402510:	cmp    eax,0xffffffff
  402513:	je     40259e <Mat_VarReadNextInfo@plt+0x27e>
  402519:	mov    rdi,r14
  40251c:	mov    esi,eax
  40251e:	xor    eax,eax
  402520:	call   402160 <printf@plt>
  402525:	jmp    4024c0 <Mat_VarReadNextInfo@plt+0x1a0>
  402527:	mov    r12,QWORD PTR [r15]
  40252a:	test   r12,r12
  40252d:	je     40256e <Mat_VarReadNextInfo@plt+0x24e>
  40252f:	mov    rdi,r12
  402532:	lea    rsi,[rip+0x4cc6]        # 4071ff <getopt_long_only@@Base+0xfef>
  402539:	call   4021c0 <strcmp@plt>
  40253e:	test   eax,eax
  402540:	je     402586 <Mat_VarReadNextInfo@plt+0x266>
  402542:	lea    rdi,[rip+0x4cbb]        # 407204 <getopt_long_only@@Base+0xff4>
  402549:	mov    rsi,r12
  40254c:	xor    eax,eax
  40254e:	call   402100 <Mat_Warning@plt>
  402553:	mov    r12,QWORD PTR [rsp+0x40]
  402558:	jmp    4024c0 <Mat_VarReadNextInfo@plt+0x1a0>
  40255d:	mov    edi,0x1
  402562:	xor    esi,esi
  402564:	call   402050 <Mat_SetVerbose@plt>
  402569:	jmp    4024c0 <Mat_VarReadNextInfo@plt+0x1a0>
  40256e:	lea    rdi,[rip+0x4cc4]        # 407239 <getopt_long_only@@Base+0x1029>
  402575:	xor    eax,eax
  402577:	call   402100 <Mat_Warning@plt>
  40257c:	mov    r12,QWORD PTR [rsp+0x40]
  402581:	jmp    4024c0 <Mat_VarReadNextInfo@plt+0x1a0>
  402586:	lea    rax,[rip+0x27d3]        # 404d60 <Mat_VarReadNextInfo@plt+0x2a40>
  40258d:	mov    QWORD PTR [rip+0x7dbc],rax        # 40a350 <optopt@@Base+0x28>
  402594:	mov    r12,QWORD PTR [rsp+0x40]
  402599:	jmp    4024c0 <Mat_VarReadNextInfo@plt+0x1a0>
  40259e:	lea    rbx,[rip+0x7d7f]        # 40a324 <optind@@Base>
  4025a5:	movsxd rax,DWORD PTR [rbx]
  4025a8:	cmp    eax,DWORD PTR [rsp+0x4c]
  4025ac:	jge    403acc <Mat_VarReadNextInfo@plt+0x17ac>
  4025b2:	mov    rdi,QWORD PTR [r12+rax*8]
  4025b6:	xor    esi,esi
  4025b8:	call   4020a0 <Mat_Open@plt>
  4025bd:	mov    r13,rax
  4025c0:	movsxd rax,DWORD PTR [rbx]
  4025c3:	test   r13,r13
  4025c6:	je     403ae4 <Mat_VarReadNextInfo@plt+0x17c4>
  4025cc:	inc    eax
  4025ce:	mov    DWORD PTR [rbx],eax
  4025d0:	cmp    eax,DWORD PTR [rsp+0x4c]
  4025d4:	jge    403b00 <Mat_VarReadNextInfo@plt+0x17e0>
  4025da:	movsxd r15,eax
  4025dd:	mov    eax,0x1
  4025e2:	vbroadcastss ymm0,DWORD PTR [rip+0x4a55]        # 407040 <getopt_long_only@@Base+0xe30>
  4025eb:	vmovups YMMWORD PTR [rsp+0x80],ymm0
  4025f4:	vmovd  xmm0,eax
  4025f8:	vmovdqu YMMWORD PTR [rsp+0xa0],ymm0
  402601:	mov    QWORD PTR [rsp+0x58],r13
  402606:	jmp    40263f <Mat_VarReadNextInfo@plt+0x31f>
  402608:	mov    rdi,r13
  40260b:	mov    rsi,rbp
  40260e:	call   402180 <Mat_VarReadDataAll@plt>
  402613:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40261d:	nop    DWORD PTR [rax]
  402620:	mov    rdi,rbp
  402623:	call   QWORD PTR [rip+0x7d27]        # 40a350 <optopt@@Base+0x28>
  402629:	mov    rdi,rbp
  40262c:	call   402200 <Mat_VarFree@plt>
  402631:	inc    r15
  402634:	cmp    r15d,DWORD PTR [rsp+0x4c]
  402639:	je     403b81 <Mat_VarReadNextInfo@plt+0x1861>
  40263f:	mov    rbp,QWORD PTR [r12+r15*8]
  402643:	mov    rdi,rbp
  402646:	vzeroupper 
  402649:	call   404f90 <Mat_VarReadNextInfo@plt+0x2c70>
  40264e:	mov    rbx,rax
  402651:	cmp    rax,rbp
  402654:	je     402670 <Mat_VarReadNextInfo@plt+0x350>
  402656:	mov    r14b,BYTE PTR [rbx]
  402659:	mov    BYTE PTR [rbx],0x0
  40265c:	mov    rbp,QWORD PTR [r12+r15*8]
  402660:	jmp    402673 <Mat_VarReadNextInfo@plt+0x353>
  402662:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40266c:	nop    DWORD PTR [rax+0x0]
  402670:	xor    r14d,r14d
  402673:	mov    rdi,r13
  402676:	mov    rsi,rbp
  402679:	call   402190 <Mat_VarReadInfo@plt>
  40267e:	test   rax,rax
  402681:	je     4026b0 <Mat_VarReadNextInfo@plt+0x390>
  402683:	mov    rbp,rax
  402686:	cmp    BYTE PTR [rip+0x7ccb],0x1        # 40a358 <optopt@@Base+0x30>
  40268d:	jne    402620 <Mat_VarReadNextInfo@plt+0x300>
  40268f:	test   r14b,r14b
  402692:	je     402608 <Mat_VarReadNextInfo@plt+0x2e8>
  402698:	mov    BYTE PTR [rbx],r14b
  40269b:	mov    rdi,rbx
  40269e:	call   404f90 <Mat_VarReadNextInfo@plt+0x2c70>
  4026a3:	mov    rbx,rax
  4026a6:	mov    r14b,BYTE PTR [rax]
  4026a9:	mov    QWORD PTR [rsp+0x68],r15
  4026ae:	jmp    4026eb <Mat_VarReadNextInfo@plt+0x3cb>
  4026b0:	mov    rsi,QWORD PTR [r12+r15*8]
  4026b4:	lea    rdi,[rip+0x4c4d]        # 407308 <getopt_long_only@@Base+0x10f8>
  4026bb:	xor    eax,eax
  4026bd:	call   402100 <Mat_Warning@plt>
  4026c2:	jmp    402631 <Mat_VarReadNextInfo@plt+0x311>
  4026c7:	xor    ebp,ebp
  4026c9:	cmp    ebp,edx
  4026cb:	mov    rdx,QWORD PTR [rsp+0x58]
  4026d0:	mov    rbp,r13
  4026d3:	mov    r13,rdx
  4026d6:	jne    402620 <Mat_VarReadNextInfo@plt+0x300>
  4026dc:	nop    DWORD PTR [rax+0x0]
  4026e0:	mov    rbx,rax
  4026e3:	test   ecx,ecx
  4026e5:	jne    402620 <Mat_VarReadNextInfo@plt+0x300>
  4026eb:	xor    ecx,ecx
  4026ed:	cmp    r14b,0x2e
  4026f1:	mov    QWORD PTR [rsp+0x30],rbp
  4026f6:	je     402760 <Mat_VarReadNextInfo@plt+0x440>
  4026f8:	cmp    r14b,0x7b
  4026fc:	je     402710 <Mat_VarReadNextInfo@plt+0x3f0>
  4026fe:	cmp    r14b,0x28
  402702:	je     4031a4 <Mat_VarReadNextInfo@plt+0xe84>
  402708:	mov    rax,rbx
  40270b:	jmp    4026e0 <Mat_VarReadNextInfo@plt+0x3c0>
  40270d:	nop    DWORD PTR [rax]
  402710:	cmp    DWORD PTR [rbp+0x14],0x1
  402714:	jne    4033e7 <Mat_VarReadNextInfo@plt+0x10c7>
  40271a:	mov    QWORD PTR [rsp+0x20],rbx
  40271f:	inc    rbx
  402722:	mov    rdi,rbx
  402725:	mov    esi,0x7d
  40272a:	call   402150 <strchr@plt>
  40272f:	mov    r15,rax
  402732:	lea    rdi,[rax+0x1]
  402736:	call   404f90 <Mat_VarReadNextInfo@plt+0x2c70>
  40273b:	mov    cl,BYTE PTR [rax]
  40273d:	mov    r14d,0x1
  402743:	test   cl,cl
  402745:	mov    QWORD PTR [rsp+0x60],rax
  40274a:	je     4027b8 <Mat_VarReadNextInfo@plt+0x498>
  40274c:	mov    BYTE PTR [rsp+0x50],cl
  402750:	mov    BYTE PTR [rax],0x0
  402753:	xor    r8d,r8d
  402756:	jmp    4027c3 <Mat_VarReadNextInfo@plt+0x4a3>
  402758:	nop    DWORD PTR [rax+rax*1+0x0]
  402760:	inc    rbx
  402763:	mov    eax,DWORD PTR [rbp+0x14]
  402766:	cmp    eax,0x1
  402769:	je     402796 <Mat_VarReadNextInfo@plt+0x476>
  40276b:	cmp    eax,0x2
  40276e:	jne    40340c <Mat_VarReadNextInfo@plt+0x10ec>
  402774:	mov    rdi,rbx
  402777:	call   404f90 <Mat_VarReadNextInfo@plt+0x2c70>
  40277c:	cmp    rax,rbx
  40277f:	je     402a70 <Mat_VarReadNextInfo@plt+0x750>
  402785:	mov    r14b,BYTE PTR [rax]
  402788:	mov    r12,rax
  40278b:	mov    BYTE PTR [rax],0x0
  40278e:	xor    r13d,r13d
  402791:	jmp    402a7c <Mat_VarReadNextInfo@plt+0x75c>
  402796:	mov    rax,QWORD PTR [rbp+0x0]
  40279a:	movsxd rcx,DWORD PTR [rbp+0x10]
  40279e:	mov    rdx,rax
  4027a1:	or     rdx,rcx
  4027a4:	shr    rdx,0x20
  4027a8:	je     402ac7 <Mat_VarReadNextInfo@plt+0x7a7>
  4027ae:	xor    edx,edx
  4027b0:	div    rcx
  4027b3:	jmp    402acb <Mat_VarReadNextInfo@plt+0x7ab>
  4027b8:	mov    BYTE PTR [rsp+0x50],0x7b
  4027bd:	mov    r8d,0x1
  4027c3:	vmovdqa xmm0,XMMWORD PTR [rip+0x4845]        # 407010 <getopt_long_only@@Base+0xe00>
  4027cb:	cmp    rbx,r15
  4027ce:	je     4029d3 <Mat_VarReadNextInfo@plt+0x6b3>
  4027d4:	mov    rax,QWORD PTR [rsp+0x20]
  4027d9:	not    rax
  4027dc:	add    rax,r15
  4027df:	mov    r14d,0x1
  4027e5:	cmp    rax,0x20
  4027e9:	jb     4029c0 <Mat_VarReadNextInfo@plt+0x6a0>
  4027ef:	mov    rcx,rax
  4027f2:	and    rcx,0xffffffffffffffe0
  4027f6:	lea    rdx,[rcx-0x20]
  4027fa:	mov    rdi,rdx
  4027fd:	shr    rdi,0x5
  402801:	inc    rdi
  402804:	mov    esi,edi
  402806:	and    esi,0x1
  402809:	test   rdx,rdx
  40280c:	je     402e84 <Mat_VarReadNextInfo@plt+0xb64>
  402812:	sub    rdi,rsi
  402815:	vpxor  xmm9,xmm9,xmm9
  40281a:	xor    edx,edx
  40281c:	vmovdqu ymm1,YMMWORD PTR [rsp+0xa0]
  402825:	vpxor  xmm2,xmm2,xmm2
  402829:	vpxor  xmm3,xmm3,xmm3
  40282d:	vmovdqu ymm8,YMMWORD PTR [rsp+0x80]
  402836:	mov    rbp,QWORD PTR [rsp+0x20]
  40283b:	nop    DWORD PTR [rax+rax*1+0x0]
  402840:	vpmovzxbw xmm4,QWORD PTR [rbp+rdx*1+0x1]
  402847:	vpmovzxbw xmm5,QWORD PTR [rbp+rdx*1+0x9]
  40284e:	vpmovzxbw xmm6,QWORD PTR [rbp+rdx*1+0x11]
  402855:	vpmovzxbw xmm7,QWORD PTR [rbp+rdx*1+0x19]
  40285c:	vpcmpeqw xmm4,xmm4,xmm0
  402860:	vpmovzxwd ymm4,xmm4
  402865:	vpand  ymm4,ymm4,ymm8
  40286a:	vpaddd ymm1,ymm1,ymm4
  40286e:	vpcmpeqw xmm4,xmm5,xmm0
  402872:	vpmovzxwd ymm4,xmm4
  402877:	vpand  ymm4,ymm4,ymm8
  40287c:	vpaddd ymm9,ymm9,ymm4
  402880:	vpcmpeqw xmm4,xmm6,xmm0
  402884:	vpmovzxwd ymm4,xmm4
  402889:	vpand  ymm4,ymm4,ymm8
  40288e:	vpaddd ymm2,ymm2,ymm4
  402892:	vpcmpeqw xmm4,xmm7,xmm0
  402896:	vpmovzxwd ymm4,xmm4
  40289b:	vpand  ymm4,ymm4,ymm8
  4028a0:	vpaddd ymm3,ymm3,ymm4
  4028a4:	vpmovzxbw xmm4,QWORD PTR [rbp+rdx*1+0x21]
  4028ab:	vpmovzxbw xmm5,QWORD PTR [rbp+rdx*1+0x29]
  4028b2:	vpmovzxbw xmm6,QWORD PTR [rbp+rdx*1+0x31]
  4028b9:	vpmovzxbw xmm7,QWORD PTR [rbp+rdx*1+0x39]
  4028c0:	vpcmpeqw xmm4,xmm4,xmm0
  4028c4:	vpmovzxwd ymm4,xmm4
  4028c9:	vpand  ymm4,ymm4,ymm8
  4028ce:	vpaddd ymm1,ymm1,ymm4
  4028d2:	vpcmpeqw xmm4,xmm5,xmm0
  4028d6:	vpmovzxwd ymm4,xmm4
  4028db:	vpand  ymm4,ymm4,ymm8
  4028e0:	vpaddd ymm9,ymm9,ymm4
  4028e4:	vpcmpeqw xmm4,xmm6,xmm0
  4028e8:	vpmovzxwd ymm4,xmm4
  4028ed:	vpand  ymm4,ymm4,ymm8
  4028f2:	vpaddd ymm2,ymm2,ymm4
  4028f6:	vpcmpeqw xmm4,xmm7,xmm0
  4028fa:	vpmovzxwd ymm4,xmm4
  4028ff:	vpand  ymm4,ymm4,ymm8
  402904:	vpaddd ymm3,ymm3,ymm4
  402908:	add    rdx,0x40
  40290c:	add    rdi,0xfffffffffffffffe
  402910:	jne    402840 <Mat_VarReadNextInfo@plt+0x520>
  402916:	test   rsi,rsi
  402919:	je     40297e <Mat_VarReadNextInfo@plt+0x65e>
  40291b:	vpmovzxbw xmm4,QWORD PTR [rbx+rdx*1+0x18]
  402922:	vpcmpeqw xmm4,xmm4,xmm0
  402926:	vpmovzxwd ymm4,xmm4
  40292b:	vpand  ymm4,ymm4,ymm8
  402930:	vpaddd ymm3,ymm3,ymm4
  402934:	vpmovzxbw xmm4,QWORD PTR [rbx+rdx*1+0x10]
  40293b:	vpcmpeqw xmm4,xmm4,xmm0
  40293f:	vpmovzxwd ymm4,xmm4
  402944:	vpand  ymm4,ymm4,ymm8
  402949:	vpaddd ymm2,ymm2,ymm4
  40294d:	vpmovzxbw xmm4,QWORD PTR [rbx+rdx*1+0x8]
  402954:	vpcmpeqw xmm4,xmm4,xmm0
  402958:	vpmovzxwd ymm4,xmm4
  40295d:	vpand  ymm4,ymm4,ymm8
  402962:	vpaddd ymm9,ymm9,ymm4
  402966:	vpmovzxbw xmm4,QWORD PTR [rbx+rdx*1]
  40296c:	vpcmpeqw xmm4,xmm4,xmm0
  402970:	vpmovzxwd ymm4,xmm4
  402975:	vpand  ymm4,ymm4,ymm8
  40297a:	vpaddd ymm1,ymm1,ymm4
  40297e:	vpaddd ymm0,ymm9,ymm3
  402982:	vpaddd ymm1,ymm1,ymm2
  402986:	vpaddd ymm0,ymm1,ymm0
  40298a:	vextracti128 xmm1,ymm0,0x1
  402990:	vpaddd xmm0,xmm0,xmm1
  402994:	vpshufd xmm1,xmm0,0x4e
  402999:	vpaddd xmm0,xmm0,xmm1
  40299d:	vpshufd xmm1,xmm0,0xe5
  4029a2:	vpaddd xmm0,xmm0,xmm1
  4029a6:	vmovd  r14d,xmm0
  4029ab:	cmp    rcx,rax
  4029ae:	je     4029d3 <Mat_VarReadNextInfo@plt+0x6b3>
  4029b0:	add    rbx,rcx
  4029b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029bd:	nop    DWORD PTR [rax]
  4029c0:	xor    eax,eax
  4029c2:	cmp    BYTE PTR [rbx],0x2c
  4029c5:	sete   al
  4029c8:	add    r14d,eax
  4029cb:	inc    rbx
  4029ce:	cmp    r15,rbx
  4029d1:	jne    4029c0 <Mat_VarReadNextInfo@plt+0x6a0>
  4029d3:	mov    DWORD PTR [rsp+0x3c],r8d
  4029d8:	movsxd rbp,r14d
  4029db:	lea    rbx,[rbp*4+0x0]
  4029e3:	mov    rdi,rbx
  4029e6:	vzeroupper 
  4029e9:	call   402230 <malloc@plt>
  4029ee:	mov    QWORD PTR [rsp+0x28],rax
  4029f3:	mov    rdi,rbx
  4029f6:	call   402230 <malloc@plt>
  4029fb:	mov    r12,rax
  4029fe:	mov    rdi,rbx
  402a01:	call   402230 <malloc@plt>
  402a06:	mov    r13,rax
  402a09:	test   ebp,ebp
  402a0b:	jle    402d79 <Mat_VarReadNextInfo@plt+0xa59>
  402a11:	mov    ebx,r14d
  402a14:	lea    rdx,[rbx*4+0x0]
  402a1c:	mov    rdi,QWORD PTR [rsp+0x28]
  402a21:	xor    esi,esi
  402a23:	call   4021a0 <memset@plt>
  402a28:	cmp    r14d,0x20
  402a2c:	jae    402a35 <Mat_VarReadNextInfo@plt+0x715>
  402a2e:	xor    eax,eax
  402a30:	jmp    402d60 <Mat_VarReadNextInfo@plt+0xa40>
  402a35:	mov    eax,ebx
  402a37:	and    eax,0xffffffe0
  402a3a:	lea    rsi,[rax-0x20]
  402a3e:	mov    rdx,rsi
  402a41:	shr    rdx,0x5
  402a45:	inc    rdx
  402a48:	mov    ecx,edx
  402a4a:	and    ecx,0x3
  402a4d:	cmp    rsi,0x60
  402a51:	vmovdqu ymm0,YMMWORD PTR [rsp+0x80]
  402a5a:	jae    402bb6 <Mat_VarReadNextInfo@plt+0x896>
  402a60:	xor    edx,edx
  402a62:	test   rcx,rcx
  402a65:	jne    402cfa <Mat_VarReadNextInfo@plt+0x9da>
  402a6b:	jmp    402d57 <Mat_VarReadNextInfo@plt+0xa37>
  402a70:	mov    r12,rax
  402a73:	mov    r14b,0x2e
  402a76:	mov    r13d,0x1
  402a7c:	mov    rdi,rbp
  402a7f:	mov    rsi,rbx
  402a82:	xor    edx,edx
  402a84:	call   4022b0 <Mat_VarGetStructFieldByName@plt>
  402a89:	test   rax,rax
  402a8c:	je     4034d2 <Mat_VarReadNextInfo@plt+0x11b2>
  402a92:	mov    rdi,rax
  402a95:	mov    esi,0x1
  402a9a:	call   402310 <Mat_VarDuplicate@plt>
  402a9f:	mov    rdi,rbp
  402aa2:	mov    rbp,rax
  402aa5:	call   402200 <Mat_VarFree@plt>
  402aaa:	test   r13d,r13d
  402aad:	jne    403817 <Mat_VarReadNextInfo@plt+0x14f7>
  402ab3:	xor    ecx,ecx
  402ab5:	mov    rax,r12
  402ab8:	mov    r12,QWORD PTR [rsp+0x40]
  402abd:	mov    r13,QWORD PTR [rsp+0x58]
  402ac2:	jmp    4026e0 <Mat_VarReadNextInfo@plt+0x3c0>
  402ac7:	xor    edx,edx
  402ac9:	div    ecx
  402acb:	mov    QWORD PTR [rsp+0x28],rax
  402ad0:	mov    r14,QWORD PTR [rbp+0x38]
  402ad4:	mov    rdi,rbx
  402ad7:	call   404f90 <Mat_VarReadNextInfo@plt+0x2c70>
  402adc:	mov    rsi,r14
  402adf:	cmp    rax,rbx
  402ae2:	je     402aee <Mat_VarReadNextInfo@plt+0x7ce>
  402ae4:	mov    r14b,BYTE PTR [rax]
  402ae7:	mov    BYTE PTR [rax],0x0
  402aea:	xor    ecx,ecx
  402aec:	jmp    402af6 <Mat_VarReadNextInfo@plt+0x7d6>
  402aee:	mov    r14b,0x2e
  402af1:	mov    ecx,0x1
  402af6:	mov    rdx,QWORD PTR [rsp+0x28]
  402afb:	mov    r13,rbp
  402afe:	test   edx,edx
  402b00:	jle    4026c7 <Mat_VarReadNextInfo@plt+0x3a7>
  402b06:	mov    QWORD PTR [rsp+0x60],rax
  402b0b:	mov    DWORD PTR [rsp+0x3c],ecx
  402b0f:	mov    BYTE PTR [rsp+0x50],r14b
  402b14:	mov    r12,rbx
  402b17:	movsxd r14,edx
  402b1a:	xor    ebp,ebp
  402b1c:	mov    rdi,r13
  402b1f:	mov    r13,rsi
  402b22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b2c:	nop    DWORD PTR [rax+0x0]
  402b30:	mov    esi,ebp
  402b32:	call   4020e0 <Mat_VarGetCell@plt>
  402b37:	test   rax,rax
  402b3a:	je     402b92 <Mat_VarReadNextInfo@plt+0x872>
  402b3c:	mov    rbx,rax
  402b3f:	cmp    DWORD PTR [rax+0x14],0x2
  402b43:	jne    402b92 <Mat_VarReadNextInfo@plt+0x872>
  402b45:	mov    rdi,rbx
  402b48:	mov    rsi,r12
  402b4b:	xor    edx,edx
  402b4d:	call   4022b0 <Mat_VarGetStructFieldByName@plt>
  402b52:	test   rax,rax
  402b55:	je     402eb3 <Mat_VarReadNextInfo@plt+0xb93>
  402b5b:	mov    rdi,rax
  402b5e:	mov    esi,0x1
  402b63:	call   402310 <Mat_VarDuplicate@plt>
  402b68:	mov    r15,rax
  402b6b:	mov    rdi,rbx
  402b6e:	call   402200 <Mat_VarFree@plt>
  402b73:	mov    QWORD PTR [r13+rbp*8+0x0],r15
  402b78:	mov    r15,QWORD PTR [rsp+0x68]
  402b7d:	inc    rbp
  402b80:	cmp    rbp,r14
  402b83:	mov    rdi,QWORD PTR [rsp+0x30]
  402b88:	jl     402b30 <Mat_VarReadNextInfo@plt+0x810>
  402b8a:	mov    r13,rdi
  402b8d:	jmp    402eda <Mat_VarReadNextInfo@plt+0xbba>
  402b92:	mov    rax,QWORD PTR [rip+0x745f]        # 409ff8 <getopt_long_only@@Base+0x3de8>
  402b99:	mov    rdi,QWORD PTR [rax]
  402b9c:	lea    rsi,[rip+0x4c8f]        # 407832 <getopt_long_only@@Base+0x1622>
  402ba3:	mov    edx,ebp
  402ba5:	xor    eax,eax
  402ba7:	call   4021e0 <fprintf@plt>
  402bac:	mov    r13,QWORD PTR [rsp+0x30]
  402bb1:	jmp    402eda <Mat_VarReadNextInfo@plt+0xbba>
  402bb6:	mov    rsi,rcx
  402bb9:	sub    rsi,rdx
  402bbc:	xor    edx,edx
  402bbe:	xchg   ax,ax
  402bc0:	vmovdqu YMMWORD PTR [r12+rdx*4],ymm0
  402bc6:	vmovdqu YMMWORD PTR [r12+rdx*4+0x20],ymm0
  402bcd:	vmovdqu YMMWORD PTR [r12+rdx*4+0x40],ymm0
  402bd4:	vmovdqu YMMWORD PTR [r12+rdx*4+0x60],ymm0
  402bdb:	vmovdqu YMMWORD PTR [r13+rdx*4+0x0],ymm0
  402be2:	vmovdqu YMMWORD PTR [r13+rdx*4+0x20],ymm0
  402be9:	vmovdqu YMMWORD PTR [r13+rdx*4+0x40],ymm0
  402bf0:	vmovdqu YMMWORD PTR [r13+rdx*4+0x60],ymm0
  402bf7:	vmovdqu YMMWORD PTR [r12+rdx*4+0x80],ymm0
  402c01:	vmovdqu YMMWORD PTR [r12+rdx*4+0xa0],ymm0
  402c0b:	vmovdqu YMMWORD PTR [r12+rdx*4+0xc0],ymm0
  402c15:	vmovdqu YMMWORD PTR [r12+rdx*4+0xe0],ymm0
  402c1f:	vmovdqu YMMWORD PTR [r13+rdx*4+0x80],ymm0
  402c29:	vmovdqu YMMWORD PTR [r13+rdx*4+0xa0],ymm0
  402c33:	vmovdqu YMMWORD PTR [r13+rdx*4+0xc0],ymm0
  402c3d:	vmovdqu YMMWORD PTR [r13+rdx*4+0xe0],ymm0
  402c47:	vmovdqu YMMWORD PTR [r12+rdx*4+0x100],ymm0
  402c51:	vmovdqu YMMWORD PTR [r12+rdx*4+0x120],ymm0
  402c5b:	vmovdqu YMMWORD PTR [r12+rdx*4+0x140],ymm0
  402c65:	vmovdqu YMMWORD PTR [r12+rdx*4+0x160],ymm0
  402c6f:	vmovdqu YMMWORD PTR [r13+rdx*4+0x100],ymm0
  402c79:	vmovdqu YMMWORD PTR [r13+rdx*4+0x120],ymm0
  402c83:	vmovdqu YMMWORD PTR [r13+rdx*4+0x140],ymm0
  402c8d:	vmovdqu YMMWORD PTR [r13+rdx*4+0x160],ymm0
  402c97:	vmovdqu YMMWORD PTR [r12+rdx*4+0x180],ymm0
  402ca1:	vmovdqu YMMWORD PTR [r12+rdx*4+0x1a0],ymm0
  402cab:	vmovdqu YMMWORD PTR [r12+rdx*4+0x1c0],ymm0
  402cb5:	vmovdqu YMMWORD PTR [r12+rdx*4+0x1e0],ymm0
  402cbf:	vmovdqu YMMWORD PTR [r13+rdx*4+0x180],ymm0
  402cc9:	vmovdqu YMMWORD PTR [r13+rdx*4+0x1a0],ymm0
  402cd3:	vmovdqu YMMWORD PTR [r13+rdx*4+0x1c0],ymm0
  402cdd:	vmovdqu YMMWORD PTR [r13+rdx*4+0x1e0],ymm0
  402ce7:	sub    rdx,0xffffffffffffff80
  402ceb:	add    rsi,0x4
  402cef:	jne    402bc0 <Mat_VarReadNextInfo@plt+0x8a0>
  402cf5:	test   rcx,rcx
  402cf8:	je     402d57 <Mat_VarReadNextInfo@plt+0xa37>
  402cfa:	lea    rsi,[rdx*4+0x60]
  402d02:	add    rsi,r13
  402d05:	lea    rdx,[r12+rdx*4]
  402d09:	add    rdx,0x60
  402d0d:	shl    rcx,0x7
  402d11:	xor    edi,edi
  402d13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d1d:	nop    DWORD PTR [rax]
  402d20:	vmovdqu YMMWORD PTR [rdx+rdi*1-0x60],ymm0
  402d26:	vmovdqu YMMWORD PTR [rdx+rdi*1-0x40],ymm0
  402d2c:	vmovdqu YMMWORD PTR [rdx+rdi*1-0x20],ymm0
  402d32:	vmovdqu YMMWORD PTR [rdx+rdi*1],ymm0
  402d37:	vmovdqu YMMWORD PTR [rsi+rdi*1-0x60],ymm0
  402d3d:	vmovdqu YMMWORD PTR [rsi+rdi*1-0x40],ymm0
  402d43:	vmovdqu YMMWORD PTR [rsi+rdi*1-0x20],ymm0
  402d49:	vmovdqu YMMWORD PTR [rsi+rdi*1],ymm0
  402d4e:	sub    rdi,0xffffffffffffff80
  402d52:	cmp    rcx,rdi
  402d55:	jne    402d20 <Mat_VarReadNextInfo@plt+0xa00>
  402d57:	cmp    rax,rbx
  402d5a:	je     402d79 <Mat_VarReadNextInfo@plt+0xa59>
  402d5c:	nop    DWORD PTR [rax+0x0]
  402d60:	mov    DWORD PTR [r12+rax*4],0x1
  402d68:	mov    DWORD PTR [r13+rax*4+0x0],0x1
  402d71:	inc    rax
  402d74:	cmp    rbx,rax
  402d77:	jne    402d60 <Mat_VarReadNextInfo@plt+0xa40>
  402d79:	mov    rdi,QWORD PTR [rsp+0x20]
  402d7e:	mov    rsi,r15
  402d81:	mov    rbx,QWORD PTR [rsp+0x28]
  402d86:	mov    rdx,rbx
  402d89:	mov    rcx,r12
  402d8c:	mov    r8,r13
  402d8f:	vzeroupper 
  402d92:	call   405110 <Mat_VarReadNextInfo@plt+0x2df0>
  402d97:	mov    edi,r14d
  402d9a:	mov    rsi,rbx
  402d9d:	mov    rdx,r12
  402da0:	mov    rcx,r13
  402da3:	mov    r8,QWORD PTR [rsp+0x30]
  402da8:	mov    rbp,r8
  402dab:	call   405390 <Mat_VarReadNextInfo@plt+0x3070>
  402db0:	test   eax,eax
  402db2:	je     40315c <Mat_VarReadNextInfo@plt+0xe3c>
  402db8:	mov    DWORD PTR [rsp+0x20],eax
  402dbc:	cmp    r14d,0x1
  402dc0:	jne    402e00 <Mat_VarReadNextInfo@plt+0xae0>
  402dc2:	mov    rax,QWORD PTR [rsp+0x28]
  402dc7:	mov    esi,DWORD PTR [rax]
  402dc9:	mov    edx,DWORD PTR [r12]
  402dcd:	mov    ecx,DWORD PTR [r13+0x0]
  402dd1:	mov    rbx,rbp
  402dd4:	mov    rdi,rbp
  402dd7:	call   402290 <Mat_VarGetCellsLinear@plt>
  402ddc:	mov    r15,rax
  402ddf:	cmp    DWORD PTR [rbp+0x8],0x2
  402de3:	mov    rax,QWORD PTR [rbp+0x28]
  402de7:	jne    402e71 <Mat_VarReadNextInfo@plt+0xb51>
  402ded:	cmp    QWORD PTR [rax],0x1
  402df1:	jne    402e6a <Mat_VarReadNextInfo@plt+0xb4a>
  402df3:	movsxd rcx,DWORD PTR [r13+0x0]
  402df7:	mov    QWORD PTR [rax+0x8],rcx
  402dfb:	jmp    4030a1 <Mat_VarReadNextInfo@plt+0xd81>
  402e00:	mov    rbx,rbp
  402e03:	mov    rdi,rbp
  402e06:	mov    rsi,QWORD PTR [rsp+0x28]
  402e0b:	mov    rdx,r12
  402e0e:	mov    rcx,r13
  402e11:	call   4020c0 <Mat_VarGetCells@plt>
  402e16:	mov    r15,rax
  402e19:	test   r14d,r14d
  402e1c:	jle    4030a1 <Mat_VarReadNextInfo@plt+0xd81>
  402e22:	mov    rax,QWORD PTR [rbx+0x28]
  402e26:	mov    ecx,r14d
  402e29:	cmp    r14d,0x10
  402e2d:	jae    402e36 <Mat_VarReadNextInfo@plt+0xb16>
  402e2f:	xor    edx,edx
  402e31:	jmp    403090 <Mat_VarReadNextInfo@plt+0xd70>
  402e36:	mov    edx,ecx
  402e38:	and    edx,0xfffffff0
  402e3b:	lea    rsi,[rdx-0x10]
  402e3f:	mov    rdi,rsi
  402e42:	shr    rdi,0x4
  402e46:	inc    rdi
  402e49:	mov    r8d,edi
  402e4c:	and    r8d,0x3
  402e50:	cmp    rsi,0x30
  402e54:	jae    402ef7 <Mat_VarReadNextInfo@plt+0xbd7>
  402e5a:	xor    edi,edi
  402e5c:	test   r8,r8
  402e5f:	jne    40301e <Mat_VarReadNextInfo@plt+0xcfe>
  402e65:	jmp    40307b <Mat_VarReadNextInfo@plt+0xd5b>
  402e6a:	cmp    QWORD PTR [rax+0x8],0x1
  402e6f:	je     402e78 <Mat_VarReadNextInfo@plt+0xb58>
  402e71:	mov    DWORD PTR [rbp+0x8],0x1
  402e78:	movsxd rcx,DWORD PTR [r13+0x0]
  402e7c:	mov    QWORD PTR [rax],rcx
  402e7f:	jmp    4030a1 <Mat_VarReadNextInfo@plt+0xd81>
  402e84:	vpxor  xmm9,xmm9,xmm9
  402e89:	xor    edx,edx
  402e8b:	vmovdqu ymm1,YMMWORD PTR [rsp+0xa0]
  402e94:	vpxor  xmm2,xmm2,xmm2
  402e98:	vpxor  xmm3,xmm3,xmm3
  402e9c:	vmovdqu ymm8,YMMWORD PTR [rsp+0x80]
  402ea5:	test   rsi,rsi
  402ea8:	jne    40291b <Mat_VarReadNextInfo@plt+0x5fb>
  402eae:	jmp    40297e <Mat_VarReadNextInfo@plt+0x65e>
  402eb3:	mov    rax,QWORD PTR [rip+0x713e]        # 409ff8 <getopt_long_only@@Base+0x3de8>
  402eba:	mov    rdi,QWORD PTR [rax]
  402ebd:	mov    rax,QWORD PTR [rsp+0x30]
  402ec2:	mov    r13,rax
  402ec5:	mov    rcx,QWORD PTR [rax+0x30]
  402ec9:	lea    rsi,[rip+0x493b]        # 40780b <getopt_long_only@@Base+0x15fb>
  402ed0:	mov    rdx,r12
  402ed3:	xor    eax,eax
  402ed5:	call   4021e0 <fprintf@plt>
  402eda:	mov    r12,QWORD PTR [rsp+0x40]
  402edf:	mov    r14b,BYTE PTR [rsp+0x50]
  402ee4:	mov    ecx,DWORD PTR [rsp+0x3c]
  402ee8:	mov    rax,QWORD PTR [rsp+0x60]
  402eed:	mov    rdx,QWORD PTR [rsp+0x28]
  402ef2:	jmp    4026c9 <Mat_VarReadNextInfo@plt+0x3a9>
  402ef7:	mov    rsi,r8
  402efa:	sub    rsi,rdi
  402efd:	xor    edi,edi
  402eff:	nop
  402f00:	vpmovsxdq ymm0,XMMWORD PTR [r13+rdi*4+0x0]
  402f07:	vpmovsxdq ymm1,XMMWORD PTR [r13+rdi*4+0x10]
  402f0e:	vpmovsxdq ymm2,XMMWORD PTR [r13+rdi*4+0x20]
  402f15:	vpmovsxdq ymm3,XMMWORD PTR [r13+rdi*4+0x30]
  402f1c:	vmovdqu YMMWORD PTR [rax+rdi*8],ymm0
  402f21:	vmovdqu YMMWORD PTR [rax+rdi*8+0x20],ymm1
  402f27:	vmovdqu YMMWORD PTR [rax+rdi*8+0x40],ymm2
  402f2d:	vmovdqu YMMWORD PTR [rax+rdi*8+0x60],ymm3
  402f33:	vpmovsxdq ymm0,XMMWORD PTR [r13+rdi*4+0x40]
  402f3a:	vpmovsxdq ymm1,XMMWORD PTR [r13+rdi*4+0x50]
  402f41:	vpmovsxdq ymm2,XMMWORD PTR [r13+rdi*4+0x60]
  402f48:	vpmovsxdq ymm3,XMMWORD PTR [r13+rdi*4+0x70]
  402f4f:	vmovdqu YMMWORD PTR [rax+rdi*8+0x80],ymm0
  402f58:	vmovdqu YMMWORD PTR [rax+rdi*8+0xa0],ymm1
  402f61:	vmovdqu YMMWORD PTR [rax+rdi*8+0xc0],ymm2
  402f6a:	vmovdqu YMMWORD PTR [rax+rdi*8+0xe0],ymm3
  402f73:	vpmovsxdq ymm0,XMMWORD PTR [r13+rdi*4+0x80]
  402f7d:	vpmovsxdq ymm1,XMMWORD PTR [r13+rdi*4+0x90]
  402f87:	vpmovsxdq ymm2,XMMWORD PTR [r13+rdi*4+0xa0]
  402f91:	vpmovsxdq ymm3,XMMWORD PTR [r13+rdi*4+0xb0]
  402f9b:	vmovdqu YMMWORD PTR [rax+rdi*8+0x100],ymm0
  402fa4:	vmovdqu YMMWORD PTR [rax+rdi*8+0x120],ymm1
  402fad:	vmovdqu YMMWORD PTR [rax+rdi*8+0x140],ymm2
  402fb6:	vmovdqu YMMWORD PTR [rax+rdi*8+0x160],ymm3
  402fbf:	vpmovsxdq ymm0,XMMWORD PTR [r13+rdi*4+0xc0]
  402fc9:	vpmovsxdq ymm1,XMMWORD PTR [r13+rdi*4+0xd0]
  402fd3:	vpmovsxdq ymm2,XMMWORD PTR [r13+rdi*4+0xe0]
  402fdd:	vpmovsxdq ymm3,XMMWORD PTR [r13+rdi*4+0xf0]
  402fe7:	vmovdqu YMMWORD PTR [rax+rdi*8+0x180],ymm0
  402ff0:	vmovdqu YMMWORD PTR [rax+rdi*8+0x1a0],ymm1
  402ff9:	vmovdqu YMMWORD PTR [rax+rdi*8+0x1c0],ymm2
  403002:	vmovdqu YMMWORD PTR [rax+rdi*8+0x1e0],ymm3
  40300b:	add    rdi,0x40
  40300f:	add    rsi,0x4
  403013:	jne    402f00 <Mat_VarReadNextInfo@plt+0xbe0>
  403019:	test   r8,r8
  40301c:	je     40307b <Mat_VarReadNextInfo@plt+0xd5b>
  40301e:	lea    rsi,[rax+rdi*8]
  403022:	add    rsi,0x60
  403026:	lea    rdi,[rdi*4+0x30]
  40302e:	add    rdi,r13
  403031:	shl    r8,0x6
  403035:	xor    ebx,ebx
  403037:	nop    WORD PTR [rax+rax*1+0x0]
  403040:	vpmovsxdq ymm0,XMMWORD PTR [rdi+rbx*1-0x30]
  403047:	vpmovsxdq ymm1,XMMWORD PTR [rdi+rbx*1-0x20]
  40304e:	vpmovsxdq ymm2,XMMWORD PTR [rdi+rbx*1-0x10]
  403055:	vpmovsxdq ymm3,XMMWORD PTR [rdi+rbx*1]
  40305b:	vmovdqu YMMWORD PTR [rsi+rbx*2-0x60],ymm0
  403061:	vmovdqu YMMWORD PTR [rsi+rbx*2-0x40],ymm1
  403067:	vmovdqu YMMWORD PTR [rsi+rbx*2-0x20],ymm2
  40306d:	vmovdqu YMMWORD PTR [rsi+rbx*2],ymm3
  403072:	add    rbx,0x40
  403076:	cmp    r8,rbx
  403079:	jne    403040 <Mat_VarReadNextInfo@plt+0xd20>
  40307b:	cmp    rdx,rcx
  40307e:	mov    rbp,QWORD PTR [rsp+0x30]
  403083:	je     4030a1 <Mat_VarReadNextInfo@plt+0xd81>
  403085:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40308f:	nop
  403090:	movsxd rsi,DWORD PTR [r13+rdx*4+0x0]
  403095:	mov    QWORD PTR [rax+rdx*8],rsi
  403099:	inc    rdx
  40309c:	cmp    rcx,rdx
  40309f:	jne    403090 <Mat_VarReadNextInfo@plt+0xd70>
  4030a1:	mov    eax,DWORD PTR [rsp+0x20]
  4030a5:	test   r15,r15
  4030a8:	je     403179 <Mat_VarReadNextInfo@plt+0xe59>
  4030ae:	test   eax,eax
  4030b0:	jle    4030dd <Mat_VarReadNextInfo@plt+0xdbd>
  4030b2:	mov    ebp,eax
  4030b4:	xor    ebx,ebx
  4030b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030c0:	mov    rdi,QWORD PTR [r15+rbx*8]
  4030c4:	mov    esi,0x1
  4030c9:	vzeroupper 
  4030cc:	call   402310 <Mat_VarDuplicate@plt>
  4030d1:	mov    QWORD PTR [r15+rbx*8],rax
  4030d5:	inc    rbx
  4030d8:	cmp    rbp,rbx
  4030db:	jne    4030c0 <Mat_VarReadNextInfo@plt+0xda0>
  4030dd:	mov    rbx,QWORD PTR [rsp+0x30]
  4030e2:	mov    rdi,QWORD PTR [rbx+0x30]
  4030e6:	mov    ecx,DWORD PTR [rbx+0x8]
  4030e9:	mov    r8,QWORD PTR [rbx+0x28]
  4030ed:	mov    DWORD PTR [rsp],0x1
  4030f4:	mov    esi,0x1
  4030f9:	mov    edx,0x15
  4030fe:	mov    r9,r15
  403101:	vzeroupper 
  403104:	call   4020f0 <Mat_VarCreate@plt>
  403109:	mov    rbp,rax
  40310c:	mov    rdi,rbx
  40310f:	call   402200 <Mat_VarFree@plt>
  403114:	mov    r15b,0x1
  403117:	mov    rdi,QWORD PTR [rsp+0x28]
  40311c:	call   402060 <free@plt>
  403121:	mov    rdi,r12
  403124:	call   402060 <free@plt>
  403129:	mov    rdi,r13
  40312c:	call   402060 <free@plt>
  403131:	test   r15b,r15b
  403134:	mov    r12,QWORD PTR [rsp+0x40]
  403139:	mov    r13,QWORD PTR [rsp+0x58]
  40313e:	mov    r15,QWORD PTR [rsp+0x68]
  403143:	mov    r14b,BYTE PTR [rsp+0x50]
  403148:	mov    ecx,DWORD PTR [rsp+0x3c]
  40314c:	mov    rax,QWORD PTR [rsp+0x60]
  403151:	jne    4026e0 <Mat_VarReadNextInfo@plt+0x3c0>
  403157:	jmp    402620 <Mat_VarReadNextInfo@plt+0x300>
  40315c:	mov    rax,QWORD PTR [rip+0x6e95]        # 409ff8 <getopt_long_only@@Base+0x3de8>
  403163:	mov    rcx,QWORD PTR [rax]
  403166:	mov    esi,0x18
  40316b:	mov    edx,0x1
  403170:	lea    rdi,[rip+0x4735]        # 4078ac <getopt_long_only@@Base+0x169c>
  403177:	jmp    403194 <Mat_VarReadNextInfo@plt+0xe74>
  403179:	mov    rax,QWORD PTR [rip+0x6e78]        # 409ff8 <getopt_long_only@@Base+0x3de8>
  403180:	mov    rcx,QWORD PTR [rax]
  403183:	mov    esi,0x1f
  403188:	mov    edx,0x1
  40318d:	lea    rdi,[rip+0x46f8]        # 40788c <getopt_long_only@@Base+0x167c>
  403194:	vzeroupper 
  403197:	call   4022f0 <fwrite@plt>
  40319c:	xor    r15d,r15d
  40319f:	jmp    403117 <Mat_VarReadNextInfo@plt+0xdf7>
  4031a4:	lea    r13,[rbx+0x1]
  4031a8:	mov    rdi,r13
  4031ab:	mov    esi,0x29
  4031b0:	call   402150 <strchr@plt>
  4031b5:	mov    rbp,rax
  4031b8:	lea    r14,[rax+0x1]
  4031bc:	mov    rdi,r14
  4031bf:	call   404f90 <Mat_VarReadNextInfo@plt+0x2c70>
  4031c4:	cmp    rax,r14
  4031c7:	jne    4038ca <Mat_VarReadNextInfo@plt+0x15aa>
  4031cd:	cmp    r13,rbp
  4031d0:	mov    rcx,rbp
  4031d3:	mov    QWORD PTR [rsp+0x20],rbx
  4031d8:	je     40342c <Mat_VarReadNextInfo@plt+0x110c>
  4031de:	mov    rax,rbx
  4031e1:	not    rax
  4031e4:	add    rax,rcx
  4031e7:	mov    r14d,0x1
  4031ed:	cmp    rax,0x20
  4031f1:	jb     4033d0 <Mat_VarReadNextInfo@plt+0x10b0>
  4031f7:	mov    rbx,rax
  4031fa:	and    rbx,0xffffffffffffffe0
  4031fe:	lea    rdx,[rbx-0x20]
  403202:	mov    rdi,rdx
  403205:	shr    rdi,0x5
  403209:	inc    rdi
  40320c:	mov    esi,edi
  40320e:	and    esi,0x1
  403211:	test   rdx,rdx
  403214:	je     403831 <Mat_VarReadNextInfo@plt+0x1511>
  40321a:	sub    rdi,rsi
  40321d:	vpxor  xmm9,xmm9,xmm9
  403222:	xor    edx,edx
  403224:	vmovdqu ymm1,YMMWORD PTR [rsp+0xa0]
  40322d:	vpxor  xmm2,xmm2,xmm2
  403231:	vpxor  xmm3,xmm3,xmm3
  403235:	vmovdqu ymm8,YMMWORD PTR [rsp+0x80]
  40323e:	vmovdqa xmm0,XMMWORD PTR [rip+0x3dca]        # 407010 <getopt_long_only@@Base+0xe00>
  403246:	mov    rbp,QWORD PTR [rsp+0x20]
  40324b:	nop    DWORD PTR [rax+rax*1+0x0]
  403250:	vpmovzxbw xmm4,QWORD PTR [rbp+rdx*1+0x1]
  403257:	vpmovzxbw xmm5,QWORD PTR [rbp+rdx*1+0x9]
  40325e:	vpmovzxbw xmm6,QWORD PTR [rbp+rdx*1+0x11]
  403265:	vpmovzxbw xmm7,QWORD PTR [rbp+rdx*1+0x19]
  40326c:	vpcmpeqw xmm4,xmm4,xmm0
  403270:	vpmovzxwd ymm4,xmm4
  403275:	vpand  ymm4,ymm4,ymm8
  40327a:	vpaddd ymm1,ymm1,ymm4
  40327e:	vpcmpeqw xmm4,xmm5,xmm0
  403282:	vpmovzxwd ymm4,xmm4
  403287:	vpand  ymm4,ymm4,ymm8
  40328c:	vpaddd ymm9,ymm9,ymm4
  403290:	vpcmpeqw xmm4,xmm6,xmm0
  403294:	vpmovzxwd ymm4,xmm4
  403299:	vpand  ymm4,ymm4,ymm8
  40329e:	vpaddd ymm2,ymm2,ymm4
  4032a2:	vpcmpeqw xmm4,xmm7,xmm0
  4032a6:	vpmovzxwd ymm4,xmm4
  4032ab:	vpand  ymm4,ymm4,ymm8
  4032b0:	vpaddd ymm3,ymm3,ymm4
  4032b4:	vpmovzxbw xmm4,QWORD PTR [rbp+rdx*1+0x21]
  4032bb:	vpmovzxbw xmm5,QWORD PTR [rbp+rdx*1+0x29]
  4032c2:	vpmovzxbw xmm6,QWORD PTR [rbp+rdx*1+0x31]
  4032c9:	vpmovzxbw xmm7,QWORD PTR [rbp+rdx*1+0x39]
  4032d0:	vpcmpeqw xmm4,xmm4,xmm0
  4032d4:	vpmovzxwd ymm4,xmm4
  4032d9:	vpand  ymm4,ymm4,ymm8
  4032de:	vpaddd ymm1,ymm1,ymm4
  4032e2:	vpcmpeqw xmm4,xmm5,xmm0
  4032e6:	vpmovzxwd ymm4,xmm4
  4032eb:	vpand  ymm4,ymm4,ymm8
  4032f0:	vpaddd ymm9,ymm9,ymm4
  4032f4:	vpcmpeqw xmm4,xmm6,xmm0
  4032f8:	vpmovzxwd ymm4,xmm4
  4032fd:	vpand  ymm4,ymm4,ymm8
  403302:	vpaddd ymm2,ymm2,ymm4
  403306:	vpcmpeqw xmm4,xmm7,xmm0
  40330a:	vpmovzxwd ymm4,xmm4
  40330f:	vpand  ymm4,ymm4,ymm8
  403314:	vpaddd ymm3,ymm3,ymm4
  403318:	add    rdx,0x40
  40331c:	add    rdi,0xfffffffffffffffe
  403320:	jne    403250 <Mat_VarReadNextInfo@plt+0xf30>
  403326:	test   rsi,rsi
  403329:	je     40338f <Mat_VarReadNextInfo@plt+0x106f>
  40332b:	vpmovzxbw xmm4,QWORD PTR [r13+rdx*1+0x18]
  403332:	vpcmpeqw xmm4,xmm4,xmm0
  403336:	vpmovzxwd ymm4,xmm4
  40333b:	vpand  ymm4,ymm4,ymm8
  403340:	vpaddd ymm3,ymm3,ymm4
  403344:	vpmovzxbw xmm4,QWORD PTR [r13+rdx*1+0x10]
  40334b:	vpcmpeqw xmm4,xmm4,xmm0
  40334f:	vpmovzxwd ymm4,xmm4
  403354:	vpand  ymm4,ymm4,ymm8
  403359:	vpaddd ymm2,ymm2,ymm4
  40335d:	vpmovzxbw xmm4,QWORD PTR [r13+rdx*1+0x8]
  403364:	vpcmpeqw xmm4,xmm4,xmm0
  403368:	vpmovzxwd ymm4,xmm4
  40336d:	vpand  ymm4,ymm4,ymm8
  403372:	vpaddd ymm9,ymm9,ymm4
  403376:	vpmovzxbw xmm4,QWORD PTR [r13+rdx*1+0x0]
  40337d:	vpcmpeqw xmm4,xmm4,xmm0
  403381:	vpmovzxwd ymm4,xmm4
  403386:	vpand  ymm4,ymm4,ymm8
  40338b:	vpaddd ymm1,ymm1,ymm4
  40338f:	vpaddd ymm0,ymm9,ymm3
  403393:	vpaddd ymm1,ymm1,ymm2
  403397:	vpaddd ymm0,ymm1,ymm0
  40339b:	vextracti128 xmm1,ymm0,0x1
  4033a1:	vpaddd xmm0,xmm0,xmm1
  4033a5:	vpshufd xmm1,xmm0,0x4e
  4033aa:	vpaddd xmm0,xmm0,xmm1
  4033ae:	vpshufd xmm1,xmm0,0xe5
  4033b3:	vpaddd xmm0,xmm0,xmm1
  4033b7:	vmovd  r14d,xmm0
  4033bc:	cmp    rbx,rax
  4033bf:	je     403432 <Mat_VarReadNextInfo@plt+0x1112>
  4033c1:	add    r13,rbx
  4033c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4033ce:	xchg   ax,ax
  4033d0:	xor    eax,eax
  4033d2:	cmp    BYTE PTR [r13+0x0],0x2c
  4033d7:	sete   al
  4033da:	add    r14d,eax
  4033dd:	inc    r13
  4033e0:	cmp    rcx,r13
  4033e3:	jne    4033d0 <Mat_VarReadNextInfo@plt+0x10b0>
  4033e5:	jmp    403432 <Mat_VarReadNextInfo@plt+0x1112>
  4033e7:	mov    rax,QWORD PTR [rip+0x6c0a]        # 409ff8 <getopt_long_only@@Base+0x3de8>
  4033ee:	mov    rcx,QWORD PTR [rax]
  4033f1:	mov    esi,0x22
  4033f6:	mov    edx,0x1
  4033fb:	lea    rdi,[rip+0x4467]        # 407869 <getopt_long_only@@Base+0x1659>
  403402:	call   4022f0 <fwrite@plt>
  403407:	jmp    402620 <Mat_VarReadNextInfo@plt+0x300>
  40340c:	mov    rax,QWORD PTR [rip+0x6be5]        # 409ff8 <getopt_long_only@@Base+0x3de8>
  403413:	mov    rdi,QWORD PTR [rax]
  403416:	lea    rsi,[rip+0x4436]        # 407853 <getopt_long_only@@Base+0x1643>
  40341d:	mov    rdx,rbx
  403420:	xor    eax,eax
  403422:	call   4021e0 <fprintf@plt>
  403427:	jmp    402620 <Mat_VarReadNextInfo@plt+0x300>
  40342c:	mov    r14d,0x1
  403432:	mov    QWORD PTR [rsp+0x50],rcx
  403437:	movsxd r15,r14d
  40343a:	lea    rbx,[r15*4+0x0]
  403442:	mov    rdi,rbx
  403445:	vzeroupper 
  403448:	call   402230 <malloc@plt>
  40344d:	mov    QWORD PTR [rsp+0x28],rax
  403452:	mov    rdi,rbx
  403455:	call   402230 <malloc@plt>
  40345a:	mov    rbp,rax
  40345d:	mov    rdi,rbx
  403460:	call   402230 <malloc@plt>
  403465:	mov    rbx,rax
  403468:	test   r15d,r15d
  40346b:	mov    r13,QWORD PTR [rsp+0x58]
  403470:	jle    4036a7 <Mat_VarReadNextInfo@plt+0x1387>
  403476:	mov    r15d,r14d
  403479:	lea    rdx,[r15*4+0x0]
  403481:	mov    rdi,QWORD PTR [rsp+0x28]
  403486:	xor    esi,esi
  403488:	call   4021a0 <memset@plt>
  40348d:	cmp    r14d,0x20
  403491:	jae    40349a <Mat_VarReadNextInfo@plt+0x117a>
  403493:	xor    eax,eax
  403495:	jmp    403690 <Mat_VarReadNextInfo@plt+0x1370>
  40349a:	mov    eax,r15d
  40349d:	and    eax,0xffffffe0
  4034a0:	lea    rsi,[rax-0x20]
  4034a4:	mov    rdx,rsi
  4034a7:	shr    rdx,0x5
  4034ab:	inc    rdx
  4034ae:	mov    ecx,edx
  4034b0:	and    ecx,0x3
  4034b3:	cmp    rsi,0x60
  4034b7:	vmovdqu ymm0,YMMWORD PTR [rsp+0x80]
  4034c0:	jae    403500 <Mat_VarReadNextInfo@plt+0x11e0>
  4034c2:	xor    edx,edx
  4034c4:	test   rcx,rcx
  4034c7:	jne    40362a <Mat_VarReadNextInfo@plt+0x130a>
  4034cd:	jmp    403687 <Mat_VarReadNextInfo@plt+0x1367>
  4034d2:	mov    rax,QWORD PTR [rip+0x6b1f]        # 409ff8 <getopt_long_only@@Base+0x3de8>
  4034d9:	mov    rdi,QWORD PTR [rax]
  4034dc:	mov    rcx,QWORD PTR [rbp+0x30]
  4034e0:	lea    rsi,[rip+0x4324]        # 40780b <getopt_long_only@@Base+0x15fb>
  4034e7:	mov    rdx,rbx
  4034ea:	xor    eax,eax
  4034ec:	call   4021e0 <fprintf@plt>
  4034f1:	mov    r12,QWORD PTR [rsp+0x40]
  4034f6:	mov    r13,QWORD PTR [rsp+0x58]
  4034fb:	jmp    402620 <Mat_VarReadNextInfo@plt+0x300>
  403500:	mov    rsi,rcx
  403503:	sub    rsi,rdx
  403506:	xor    edx,edx
  403508:	nop    DWORD PTR [rax+rax*1+0x0]
  403510:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x0],ymm0
  403516:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x20],ymm0
  40351c:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x40],ymm0
  403522:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x60],ymm0
  403528:	vmovdqu YMMWORD PTR [rbx+rdx*4],ymm0
  40352d:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x20],ymm0
  403533:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x40],ymm0
  403539:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x60],ymm0
  40353f:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x80],ymm0
  403548:	vmovdqu YMMWORD PTR [rbp+rdx*4+0xa0],ymm0
  403551:	vmovdqu YMMWORD PTR [rbp+rdx*4+0xc0],ymm0
  40355a:	vmovdqu YMMWORD PTR [rbp+rdx*4+0xe0],ymm0
  403563:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x80],ymm0
  40356c:	vmovdqu YMMWORD PTR [rbx+rdx*4+0xa0],ymm0
  403575:	vmovdqu YMMWORD PTR [rbx+rdx*4+0xc0],ymm0
  40357e:	vmovdqu YMMWORD PTR [rbx+rdx*4+0xe0],ymm0
  403587:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x100],ymm0
  403590:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x120],ymm0
  403599:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x140],ymm0
  4035a2:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x160],ymm0
  4035ab:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x100],ymm0
  4035b4:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x120],ymm0
  4035bd:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x140],ymm0
  4035c6:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x160],ymm0
  4035cf:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x180],ymm0
  4035d8:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x1a0],ymm0
  4035e1:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x1c0],ymm0
  4035ea:	vmovdqu YMMWORD PTR [rbp+rdx*4+0x1e0],ymm0
  4035f3:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x180],ymm0
  4035fc:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x1a0],ymm0
  403605:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x1c0],ymm0
  40360e:	vmovdqu YMMWORD PTR [rbx+rdx*4+0x1e0],ymm0
  403617:	sub    rdx,0xffffffffffffff80
  40361b:	add    rsi,0x4
  40361f:	jne    403510 <Mat_VarReadNextInfo@plt+0x11f0>
  403625:	test   rcx,rcx
  403628:	je     403687 <Mat_VarReadNextInfo@plt+0x1367>
  40362a:	lea    rsi,[rbx+rdx*4]
  40362e:	add    rsi,0x60
  403632:	lea    rdx,[rdx*4+0x60]
  40363a:	add    rdx,rbp
  40363d:	shl    rcx,0x7
  403641:	xor    edi,edi
  403643:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40364d:	nop    DWORD PTR [rax]
  403650:	vmovdqu YMMWORD PTR [rdx+rdi*1-0x60],ymm0
  403656:	vmovdqu YMMWORD PTR [rdx+rdi*1-0x40],ymm0
  40365c:	vmovdqu YMMWORD PTR [rdx+rdi*1-0x20],ymm0
  403662:	vmovdqu YMMWORD PTR [rdx+rdi*1],ymm0
  403667:	vmovdqu YMMWORD PTR [rsi+rdi*1-0x60],ymm0
  40366d:	vmovdqu YMMWORD PTR [rsi+rdi*1-0x40],ymm0
  403673:	vmovdqu YMMWORD PTR [rsi+rdi*1-0x20],ymm0
  403679:	vmovdqu YMMWORD PTR [rsi+rdi*1],ymm0
  40367e:	sub    rdi,0xffffffffffffff80
  403682:	cmp    rcx,rdi
  403685:	jne    403650 <Mat_VarReadNextInfo@plt+0x1330>
  403687:	cmp    rax,r15
  40368a:	je     4036a7 <Mat_VarReadNextInfo@plt+0x1387>
  40368c:	nop    DWORD PTR [rax+0x0]
  403690:	mov    DWORD PTR [rbp+rax*4+0x0],0x1
  403698:	mov    DWORD PTR [rbx+rax*4],0x1
  40369f:	inc    rax
  4036a2:	cmp    r15,rax
  4036a5:	jne    403690 <Mat_VarReadNextInfo@plt+0x1370>
  4036a7:	mov    rdi,QWORD PTR [rsp+0x20]
  4036ac:	mov    rsi,QWORD PTR [rsp+0x50]
  4036b1:	mov    r15,QWORD PTR [rsp+0x28]
  4036b6:	mov    rdx,r15
  4036b9:	mov    rcx,rbp
  4036bc:	mov    r8,rbx
  4036bf:	vzeroupper 
  4036c2:	call   405110 <Mat_VarReadNextInfo@plt+0x2df0>
  4036c7:	mov    edi,r14d
  4036ca:	mov    rsi,r15
  4036cd:	mov    rdx,rbp
  4036d0:	mov    rcx,rbx
  4036d3:	mov    r8,QWORD PTR [rsp+0x30]
  4036d8:	call   405390 <Mat_VarReadNextInfo@plt+0x3070>
  4036dd:	test   eax,eax
  4036df:	je     403aa0 <Mat_VarReadNextInfo@plt+0x1780>
  4036e5:	mov    r15,QWORD PTR [rsp+0x30]
  4036ea:	mov    edi,DWORD PTR [r15+0x14]
  4036ee:	mov    DWORD PTR [rsp+0x20],eax
  4036f2:	call   4022d0 <Mat_SizeOfClass@plt>
  4036f7:	mov    DWORD PTR [r15+0x10],eax
  4036fb:	movsxd rcx,DWORD PTR [rsp+0x20]
  403700:	movsxd rdi,eax
  403703:	imul   rdi,rcx
  403707:	mov    QWORD PTR [r15],rdi
  40370a:	cmp    DWORD PTR [r15+0x18],0x0
  40370f:	je     4037dd <Mat_VarReadNextInfo@plt+0x14bd>
  403715:	mov    edi,0x10
  40371a:	call   402230 <malloc@plt>
  40371f:	mov    QWORD PTR [rsp+0x20],rax
  403724:	mov    QWORD PTR [r15+0x38],rax
  403728:	mov    rdi,QWORD PTR [r15]
  40372b:	call   402230 <malloc@plt>
  403730:	mov    rcx,QWORD PTR [rsp+0x20]
  403735:	mov    QWORD PTR [rcx],rax
  403738:	mov    rdi,QWORD PTR [r15]
  40373b:	call   402230 <malloc@plt>
  403740:	mov    rcx,QWORD PTR [rsp+0x20]
  403745:	mov    QWORD PTR [rcx+0x8],rax
  403749:	mov    rdx,QWORD PTR [r15+0x38]
  40374d:	test   rdx,rdx
  403750:	je     4037f2 <Mat_VarReadNextInfo@plt+0x14d2>
  403756:	cmp    r14d,0x1
  40375a:	jne    40379f <Mat_VarReadNextInfo@plt+0x147f>
  40375c:	mov    rax,QWORD PTR [rsp+0x28]
  403761:	mov    ecx,DWORD PTR [rax]
  403763:	mov    r8d,DWORD PTR [rbp+0x0]
  403767:	mov    r9d,DWORD PTR [rbx]
  40376a:	mov    rdi,r13
  40376d:	mov    r14,QWORD PTR [rsp+0x30]
  403772:	mov    rsi,r14
  403775:	call   402110 <Mat_VarReadDataLinear@plt>
  40377a:	cmp    DWORD PTR [r14+0x8],0x2
  40377f:	mov    rax,QWORD PTR [r14+0x28]
  403783:	jne    4038ab <Mat_VarReadNextInfo@plt+0x158b>
  403789:	cmp    QWORD PTR [rax],0x1
  40378d:	jne    403899 <Mat_VarReadNextInfo@plt+0x1579>
  403793:	movsxd rcx,DWORD PTR [rbx]
  403796:	mov    QWORD PTR [rax+0x8],rcx
  40379a:	jmp    403aa0 <Mat_VarReadNextInfo@plt+0x1780>
  40379f:	mov    rdi,r13
  4037a2:	mov    rsi,QWORD PTR [rsp+0x30]
  4037a7:	mov    rcx,QWORD PTR [rsp+0x28]
  4037ac:	mov    r8,rbp
  4037af:	mov    r9,rbx
  4037b2:	call   402140 <Mat_VarReadData@plt>
  4037b7:	test   r14d,r14d
  4037ba:	jle    403aa0 <Mat_VarReadNextInfo@plt+0x1780>
  4037c0:	mov    rax,QWORD PTR [rsp+0x30]
  4037c5:	mov    rax,QWORD PTR [rax+0x28]
  4037c9:	mov    r9d,r14d
  4037cc:	cmp    r14d,0x10
  4037d0:	jae    403868 <Mat_VarReadNextInfo@plt+0x1548>
  4037d6:	xor    edx,edx
  4037d8:	jmp    403a90 <Mat_VarReadNextInfo@plt+0x1770>
  4037dd:	call   402230 <malloc@plt>
  4037e2:	mov    rdx,rax
  4037e5:	mov    QWORD PTR [r15+0x38],rax
  4037e9:	test   rdx,rdx
  4037ec:	jne    403756 <Mat_VarReadNextInfo@plt+0x1436>
  4037f2:	mov    rax,QWORD PTR [rip+0x67ff]        # 409ff8 <getopt_long_only@@Base+0x3de8>
  4037f9:	mov    rcx,QWORD PTR [rax]
  4037fc:	mov    esi,0x25
  403801:	mov    edx,0x1
  403806:	lea    rdi,[rip+0x3fd8]        # 4077e5 <getopt_long_only@@Base+0x15d5>
  40380d:	call   4022f0 <fwrite@plt>
  403812:	jmp    403aa0 <Mat_VarReadNextInfo@plt+0x1780>
  403817:	mov    r13,QWORD PTR [rsp+0x58]
  40381c:	mov    rdi,r13
  40381f:	mov    rsi,rbp
  403822:	call   402180 <Mat_VarReadDataAll@plt>
  403827:	mov    r12,QWORD PTR [rsp+0x40]
  40382c:	jmp    402620 <Mat_VarReadNextInfo@plt+0x300>
  403831:	vpxor  xmm9,xmm9,xmm9
  403836:	xor    edx,edx
  403838:	vmovdqu ymm1,YMMWORD PTR [rsp+0xa0]
  403841:	vpxor  xmm2,xmm2,xmm2
  403845:	vpxor  xmm3,xmm3,xmm3
  403849:	vmovdqu ymm8,YMMWORD PTR [rsp+0x80]
  403852:	vmovdqa xmm0,XMMWORD PTR [rip+0x37b6]        # 407010 <getopt_long_only@@Base+0xe00>
  40385a:	test   rsi,rsi
  40385d:	jne    40332b <Mat_VarReadNextInfo@plt+0x100b>
  403863:	jmp    40338f <Mat_VarReadNextInfo@plt+0x106f>
  403868:	mov    edx,r9d
  40386b:	and    edx,0xfffffff0
  40386e:	lea    rsi,[rdx-0x10]
  403872:	mov    rcx,rsi
  403875:	shr    rcx,0x4
  403879:	inc    rcx
  40387c:	mov    r8d,ecx
  40387f:	and    r8d,0x3
  403883:	cmp    rsi,0x30
  403887:	jae    4038fc <Mat_VarReadNextInfo@plt+0x15dc>
  403889:	xor    edi,edi
  40388b:	test   r8,r8
  40388e:	jne    403a2d <Mat_VarReadNextInfo@plt+0x170d>
  403894:	jmp    403a8b <Mat_VarReadNextInfo@plt+0x176b>
  403899:	cmp    QWORD PTR [rax+0x8],0x1
  40389e:	jne    4038ab <Mat_VarReadNextInfo@plt+0x158b>
  4038a0:	movsxd rcx,DWORD PTR [rbx]
  4038a3:	mov    QWORD PTR [rax],rcx
  4038a6:	jmp    403aa0 <Mat_VarReadNextInfo@plt+0x1780>
  4038ab:	mov    rcx,QWORD PTR [rsp+0x30]
  4038b0:	mov    DWORD PTR [rcx+0x8],0x2
  4038b7:	movsxd rcx,DWORD PTR [rbx]
  4038ba:	mov    QWORD PTR [rax],rcx
  4038bd:	mov    QWORD PTR [rax+0x8],0x1
  4038c5:	jmp    403aa0 <Mat_VarReadNextInfo@plt+0x1780>
  4038ca:	mov    BYTE PTR [rax],0x0
  4038cd:	mov    rax,QWORD PTR [rip+0x6724]        # 409ff8 <getopt_long_only@@Base+0x3de8>
  4038d4:	mov    rcx,QWORD PTR [rax]
  4038d7:	mov    esi,0x38
  4038dc:	mov    edx,0x1
  4038e1:	lea    rdi,[rip+0x3ec4]        # 4077ac <getopt_long_only@@Base+0x159c>
  4038e8:	call   4022f0 <fwrite@plt>
  4038ed:	mov    rbp,QWORD PTR [rsp+0x30]
  4038f2:	mov    r13,QWORD PTR [rsp+0x58]
  4038f7:	jmp    402620 <Mat_VarReadNextInfo@plt+0x300>
  4038fc:	mov    rsi,r8
  4038ff:	sub    rsi,rcx
  403902:	xor    edi,edi
  403904:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40390e:	xchg   ax,ax
  403910:	vpmovsxdq ymm0,XMMWORD PTR [rbx+rdi*4]
  403916:	vpmovsxdq ymm1,XMMWORD PTR [rbx+rdi*4+0x10]
  40391d:	vpmovsxdq ymm2,XMMWORD PTR [rbx+rdi*4+0x20]
  403924:	vpmovsxdq ymm3,XMMWORD PTR [rbx+rdi*4+0x30]
  40392b:	vmovdqu YMMWORD PTR [rax+rdi*8],ymm0
  403930:	vmovdqu YMMWORD PTR [rax+rdi*8+0x20],ymm1
  403936:	vmovdqu YMMWORD PTR [rax+rdi*8+0x40],ymm2
  40393c:	vmovdqu YMMWORD PTR [rax+rdi*8+0x60],ymm3
  403942:	vpmovsxdq ymm0,XMMWORD PTR [rbx+rdi*4+0x40]
  403949:	vpmovsxdq ymm1,XMMWORD PTR [rbx+rdi*4+0x50]
  403950:	vpmovsxdq ymm2,XMMWORD PTR [rbx+rdi*4+0x60]
  403957:	vpmovsxdq ymm3,XMMWORD PTR [rbx+rdi*4+0x70]
  40395e:	vmovdqu YMMWORD PTR [rax+rdi*8+0x80],ymm0
  403967:	vmovdqu YMMWORD PTR [rax+rdi*8+0xa0],ymm1
  403970:	vmovdqu YMMWORD PTR [rax+rdi*8+0xc0],ymm2
  403979:	vmovdqu YMMWORD PTR [rax+rdi*8+0xe0],ymm3
  403982:	vpmovsxdq ymm0,XMMWORD PTR [rbx+rdi*4+0x80]
  40398c:	vpmovsxdq ymm1,XMMWORD PTR [rbx+rdi*4+0x90]
  403996:	vpmovsxdq ymm2,XMMWORD PTR [rbx+rdi*4+0xa0]
  4039a0:	vpmovsxdq ymm3,XMMWORD PTR [rbx+rdi*4+0xb0]
  4039aa:	vmovdqu YMMWORD PTR [rax+rdi*8+0x100],ymm0
  4039b3:	vmovdqu YMMWORD PTR [rax+rdi*8+0x120],ymm1
  4039bc:	vmovdqu YMMWORD PTR [rax+rdi*8+0x140],ymm2
  4039c5:	vmovdqu YMMWORD PTR [rax+rdi*8+0x160],ymm3
  4039ce:	vpmovsxdq ymm0,XMMWORD PTR [rbx+rdi*4+0xc0]
  4039d8:	vpmovsxdq ymm1,XMMWORD PTR [rbx+rdi*4+0xd0]
  4039e2:	vpmovsxdq ymm2,XMMWORD PTR [rbx+rdi*4+0xe0]
  4039ec:	vpmovsxdq ymm3,XMMWORD PTR [rbx+rdi*4+0xf0]
  4039f6:	vmovdqu YMMWORD PTR [rax+rdi*8+0x180],ymm0
  4039ff:	vmovdqu YMMWORD PTR [rax+rdi*8+0x1a0],ymm1
  403a08:	vmovdqu YMMWORD PTR [rax+rdi*8+0x1c0],ymm2
  403a11:	vmovdqu YMMWORD PTR [rax+rdi*8+0x1e0],ymm3
  403a1a:	add    rdi,0x40
  403a1e:	add    rsi,0x4
  403a22:	jne    403910 <Mat_VarReadNextInfo@plt+0x15f0>
  403a28:	test   r8,r8
  403a2b:	je     403a8b <Mat_VarReadNextInfo@plt+0x176b>
  403a2d:	lea    rsi,[rax+rdi*8]
  403a31:	add    rsi,0x60
  403a35:	lea    rdi,[rbx+rdi*4]
  403a39:	add    rdi,0x30
  403a3d:	shl    r8,0x6
  403a41:	xor    ecx,ecx
  403a43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a4d:	nop    DWORD PTR [rax]
  403a50:	vpmovsxdq ymm0,XMMWORD PTR [rdi+rcx*1-0x30]
  403a57:	vpmovsxdq ymm1,XMMWORD PTR [rdi+rcx*1-0x20]
  403a5e:	vpmovsxdq ymm2,XMMWORD PTR [rdi+rcx*1-0x10]
  403a65:	vpmovsxdq ymm3,XMMWORD PTR [rdi+rcx*1]
  403a6b:	vmovdqu YMMWORD PTR [rsi+rcx*2-0x60],ymm0
  403a71:	vmovdqu YMMWORD PTR [rsi+rcx*2-0x40],ymm1
  403a77:	vmovdqu YMMWORD PTR [rsi+rcx*2-0x20],ymm2
  403a7d:	vmovdqu YMMWORD PTR [rsi+rcx*2],ymm3
  403a82:	add    rcx,0x40
  403a86:	cmp    r8,rcx
  403a89:	jne    403a50 <Mat_VarReadNextInfo@plt+0x1730>
  403a8b:	cmp    rdx,r9
  403a8e:	je     403aa0 <Mat_VarReadNextInfo@plt+0x1780>
  403a90:	movsxd rcx,DWORD PTR [rbx+rdx*4]
  403a94:	mov    QWORD PTR [rax+rdx*8],rcx
  403a98:	inc    rdx
  403a9b:	cmp    r9,rdx
  403a9e:	jne    403a90 <Mat_VarReadNextInfo@plt+0x1770>
  403aa0:	mov    rdi,QWORD PTR [rsp+0x28]
  403aa5:	vzeroupper 
  403aa8:	call   402060 <free@plt>
  403aad:	mov    rdi,rbp
  403ab0:	call   402060 <free@plt>
  403ab5:	mov    rdi,rbx
  403ab8:	call   402060 <free@plt>
  403abd:	mov    r15,QWORD PTR [rsp+0x68]
  403ac2:	mov    rbp,QWORD PTR [rsp+0x30]
  403ac7:	jmp    402620 <Mat_VarReadNextInfo@plt+0x300>
  403acc:	lea    rdi,[rip+0x3800]        # 4072d3 <getopt_long_only@@Base+0x10c3>
  403ad3:	xor    eax,eax
  403ad5:	call   402260 <Mat_Critical@plt>
  403ada:	mov    eax,0x1
  403adf:	jmp    403b90 <Mat_VarReadNextInfo@plt+0x1870>
  403ae4:	mov    rsi,QWORD PTR [r12+rax*8]
  403ae8:	lea    rdi,[rip+0x3807]        # 4072f6 <getopt_long_only@@Base+0x10e6>
  403aef:	xor    eax,eax
  403af1:	call   402260 <Mat_Critical@plt>
  403af6:	mov    eax,0x1
  403afb:	jmp    403b90 <Mat_VarReadNextInfo@plt+0x1870>
  403b00:	cmp    BYTE PTR [rip+0x6851],0x0        # 40a358 <optopt@@Base+0x30>
  403b07:	je     403b43 <Mat_VarReadNextInfo@plt+0x1823>
  403b09:	mov    rdi,r13
  403b0c:	call   402090 <Mat_VarReadNext@plt>
  403b11:	test   rax,rax
  403b14:	je     403b81 <Mat_VarReadNextInfo@plt+0x1861>
  403b16:	mov    rbx,rax
  403b19:	nop    DWORD PTR [rax+0x0]
  403b20:	mov    rdi,rbx
  403b23:	call   QWORD PTR [rip+0x6827]        # 40a350 <optopt@@Base+0x28>
  403b29:	mov    rdi,rbx
  403b2c:	call   402200 <Mat_VarFree@plt>
  403b31:	mov    rdi,r13
  403b34:	call   402090 <Mat_VarReadNext@plt>
  403b39:	mov    rbx,rax
  403b3c:	test   rax,rax
  403b3f:	jne    403b20 <Mat_VarReadNextInfo@plt+0x1800>
  403b41:	jmp    403b81 <Mat_VarReadNextInfo@plt+0x1861>
  403b43:	mov    rdi,r13
  403b46:	call   402320 <Mat_VarReadNextInfo@plt>
  403b4b:	test   rax,rax
  403b4e:	je     403b81 <Mat_VarReadNextInfo@plt+0x1861>
  403b50:	mov    rbx,rax
  403b53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b5d:	nop    DWORD PTR [rax]
  403b60:	mov    rdi,rbx
  403b63:	call   QWORD PTR [rip+0x67e7]        # 40a350 <optopt@@Base+0x28>
  403b69:	mov    rdi,rbx
  403b6c:	call   402200 <Mat_VarFree@plt>
  403b71:	mov    rdi,r13
  403b74:	call   402320 <Mat_VarReadNextInfo@plt>
  403b79:	mov    rbx,rax
  403b7c:	test   rax,rax
  403b7f:	jne    403b60 <Mat_VarReadNextInfo@plt+0x1840>
  403b81:	mov    rdi,r13
  403b84:	call   402250 <Mat_Close@plt>
  403b89:	call   402070 <Mat_LogClose@plt>
  403b8e:	xor    eax,eax
  403b90:	add    rsp,0xc8
  403b97:	pop    rbx
  403b98:	pop    r12
  403b9a:	pop    r13
  403b9c:	pop    r14
  403b9e:	pop    r15
  403ba0:	pop    rbp
  403ba1:	ret    
  403ba2:	mov    rax,QWORD PTR [rip+0x644f]        # 409ff8 <getopt_long_only@@Base+0x3de8>
  403ba9:	mov    rcx,QWORD PTR [rax]
  403bac:	lea    rdi,[rip+0x3605]        # 4071b8 <getopt_long_only@@Base+0xfa8>
  403bb3:	mov    esi,0x37
  403bb8:	mov    edx,0x1
  403bbd:	call   4022f0 <fwrite@plt>
  403bc2:	mov    eax,0x1
  403bc7:	jmp    403b90 <Mat_VarReadNextInfo@plt+0x1870>
  403bc9:	lea    rdi,[rip+0x66c0]        # 40a290 <getopt_long_only@@Base+0x4080>
  403bd0:	call   4022a0 <Mat_Help@plt>
  403bd5:	xor    edi,edi
  403bd7:	call   4022e0 <exit@plt>
  403bdc:	lea    rdi,[rip+0x367c]        # 40725f <getopt_long_only@@Base+0x104f>
  403be3:	lea    rsi,[rip+0x35c6]        # 4071b0 <getopt_long_only@@Base+0xfa0>
  403bea:	lea    rdx,[rip+0x36c4]        # 4072b5 <getopt_long_only@@Base+0x10a5>
  403bf1:	xor    eax,eax
  403bf3:	call   402160 <printf@plt>
  403bf8:	xor    edi,edi
  403bfa:	call   4022e0 <exit@plt>
  403bff:	nop
  403c00:	push   rbp
  403c01:	push   r14
  403c03:	push   rbx
  403c04:	mov    r14,rsi
  403c07:	cmp    DWORD PTR [rip+0x6752],0x0        # 40a360 <optopt@@Base+0x38>
  403c0e:	jle    403c34 <Mat_VarReadNextInfo@plt+0x1914>
  403c10:	lea    rbx,[rip+0x383d]        # 407454 <getopt_long_only@@Base+0x1244>
  403c17:	xor    ebp,ebp
  403c19:	nop    DWORD PTR [rax+0x0]
  403c20:	mov    rdi,rbx
  403c23:	xor    eax,eax
  403c25:	call   402160 <printf@plt>
  403c2a:	inc    ebp
  403c2c:	cmp    ebp,DWORD PTR [rip+0x672e]        # 40a360 <optopt@@Base+0x38>
  403c32:	jl     403c20 <Mat_VarReadNextInfo@plt+0x1900>
  403c34:	mov    rdi,r14
  403c37:	pop    rbx
  403c38:	pop    r14
  403c3a:	pop    rbp
  403c3b:	jmp    4020d0 <puts@plt>
  403c40:	push   rbp
  403c41:	push   r15
  403c43:	push   r14
  403c45:	push   r13
  403c47:	push   r12
  403c49:	push   rbx
  403c4a:	sub    rsp,0x28
  403c4e:	test   rdi,rdi
  403c51:	je     40482f <Mat_VarReadNextInfo@plt+0x250f>
  403c57:	mov    eax,DWORD PTR [rdi+0x14]
  403c5a:	lea    ecx,[rax-0x6]
  403c5d:	cmp    ecx,0xa
  403c60:	mov    rbx,rdi
  403c63:	mov    QWORD PTR [rsp],rdi
  403c67:	jae    403d5b <Mat_VarReadNextInfo@plt+0x1a3b>
  403c6d:	mov    eax,DWORD PTR [rbx+0x8]
  403c70:	cmp    eax,0x3
  403c73:	je     403e53 <Mat_VarReadNextInfo@plt+0x1b33>
  403c79:	cmp    eax,0x2
  403c7c:	jne    40482f <Mat_VarReadNextInfo@plt+0x250f>
  403c82:	cmp    QWORD PTR [rbx+0x38],0x0
  403c87:	je     40482f <Mat_VarReadNextInfo@plt+0x250f>
  403c8d:	mov    edi,DWORD PTR [rbx+0xc]
  403c90:	call   402210 <Mat_SizeOf@plt>
  403c95:	mov    QWORD PTR [rsp+0x8],rax
  403c9a:	cmp    DWORD PTR [rbx+0x18],0x0
  403c9e:	mov    rbp,rbx
  403ca1:	je     4040d8 <Mat_VarReadNextInfo@plt+0x1db8>
  403ca7:	mov    rax,QWORD PTR [rbp+0x28]
  403cab:	mov    rbx,QWORD PTR [rax]
  403cae:	test   rbx,rbx
  403cb1:	je     40482f <Mat_VarReadNextInfo@plt+0x250f>
  403cb7:	mov    rcx,QWORD PTR [rbp+0x38]
  403cbb:	mov    r13,QWORD PTR [rcx]
  403cbe:	mov    rbp,QWORD PTR [rcx+0x8]
  403cc2:	xor    r14d,r14d
  403cc5:	mov    r15,QWORD PTR [rsp]
  403cc9:	cmp    QWORD PTR [rax+0x8],0x0
  403cce:	jne    403cf8 <Mat_VarReadNextInfo@plt+0x19d8>
  403cd0:	mov    edi,0xa
  403cd5:	call   402080 <putchar@plt>
  403cda:	inc    r14
  403cdd:	mov    rax,QWORD PTR [rsp]
  403ce1:	mov    rax,QWORD PTR [rax+0x28]
  403ce5:	mov    rbx,QWORD PTR [rax]
  403ce8:	cmp    r14,rbx
  403ceb:	jae    40482f <Mat_VarReadNextInfo@plt+0x250f>
  403cf1:	cmp    QWORD PTR [rax+0x8],0x0
  403cf6:	je     403cd0 <Mat_VarReadNextInfo@plt+0x19b0>
  403cf8:	xor    r12d,r12d
  403cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  403d00:	imul   rbx,r12
  403d04:	add    rbx,r14
  403d07:	mov    edi,DWORD PTR [r15+0xc]
  403d0b:	imul   rbx,QWORD PTR [rsp+0x8]
  403d11:	lea    rsi,[rbx+r13*1]
  403d15:	call   405050 <Mat_VarReadNextInfo@plt+0x2d30>
  403d1a:	lea    rdi,[rip+0x366f]        # 407390 <getopt_long_only@@Base+0x1180>
  403d21:	xor    eax,eax
  403d23:	call   402160 <printf@plt>
  403d28:	mov    edi,DWORD PTR [r15+0xc]
  403d2c:	add    rbx,rbp
  403d2f:	mov    rsi,rbx
  403d32:	call   405050 <Mat_VarReadNextInfo@plt+0x2d30>
  403d37:	lea    rdi,[rip+0x3656]        # 407394 <getopt_long_only@@Base+0x1184>
  403d3e:	xor    eax,eax
  403d40:	call   402160 <printf@plt>
  403d45:	inc    r12
  403d48:	mov    rax,QWORD PTR [r15+0x28]
  403d4c:	cmp    r12,QWORD PTR [rax+0x8]
  403d50:	jae    403cd0 <Mat_VarReadNextInfo@plt+0x19b0>
  403d56:	mov    rbx,QWORD PTR [rax]
  403d59:	jmp    403d00 <Mat_VarReadNextInfo@plt+0x19e0>
  403d5b:	lea    ecx,[rax-0x4]
  403d5e:	cmp    ecx,0x2
  403d61:	jb     403ff8 <Mat_VarReadNextInfo@plt+0x1cd8>
  403d67:	cmp    eax,0x1
  403d6a:	je     404015 <Mat_VarReadNextInfo@plt+0x1cf5>
  403d70:	cmp    eax,0x2
  403d73:	jne    4040cc <Mat_VarReadNextInfo@plt+0x1dac>
  403d79:	mov    rsi,QWORD PTR [rbx+0x30]
  403d7d:	test   rsi,rsi
  403d80:	je     403d90 <Mat_VarReadNextInfo@plt+0x1a70>
  403d82:	lea    rdi,[rip+0x35a9]        # 407332 <getopt_long_only@@Base+0x1122>
  403d89:	xor    eax,eax
  403d8b:	call   402120 <Mat_Message@plt>
  403d90:	mov    esi,DWORD PTR [rbx+0x8]
  403d93:	lea    rdi,[rip+0x35a7]        # 407341 <getopt_long_only@@Base+0x1131>
  403d9a:	xor    eax,eax
  403d9c:	call   402120 <Mat_Message@plt>
  403da1:	cmp    DWORD PTR [rbx+0x8],0x0
  403da5:	je     40482f <Mat_VarReadNextInfo@plt+0x250f>
  403dab:	mov    rbp,rbx
  403dae:	lea    rdi,[rip+0x359b]        # 407350 <getopt_long_only@@Base+0x1140>
  403db5:	xor    eax,eax
  403db7:	call   402120 <Mat_Message@plt>
  403dbc:	mov    rdi,rbx
  403dbf:	call   402030 <Mat_VarGetNumberOfFields@plt>
  403dc4:	mov    r14d,eax
  403dc7:	mov    rax,QWORD PTR [rbx+0x28]
  403dcb:	mov    rbx,QWORD PTR [rax]
  403dce:	movsxd rcx,DWORD PTR [rbp+0x8]
  403dd2:	cmp    rcx,0x2
  403dd6:	mov    rdi,rbp
  403dd9:	jl     40475d <Mat_VarReadNextInfo@plt+0x243d>
  403ddf:	lea    r8,[rcx-0x1]
  403de3:	mov    edx,0x1
  403de8:	cmp    r8,0x10
  403dec:	jb     404750 <Mat_VarReadNextInfo@plt+0x2430>
  403df2:	mov    rdx,r8
  403df5:	vmovdqa xmm0,XMMWORD PTR [rip+0x3343]        # 407140 <getopt_long_only@@Base+0xf30>
  403dfd:	vpinsrq xmm0,xmm0,rbx,0x0
  403e03:	vpblendd ymm0,ymm0,YMMWORD PTR [rip+0x3333],0xf0        # 407140 <getopt_long_only@@Base+0xf30>
  403e0d:	and    rdx,0xfffffffffffffff0
  403e11:	lea    rsi,[rdx-0x10]
  403e15:	mov    rdi,rsi
  403e18:	shr    rdi,0x4
  403e1c:	inc    rdi
  403e1f:	mov    ebp,edi
  403e21:	and    ebp,0x3
  403e24:	cmp    rsi,0x30
  403e28:	jae    4042bd <Mat_VarReadNextInfo@plt+0x1f9d>
  403e2e:	vpbroadcastq ymm1,QWORD PTR [rip+0x3349]        # 407180 <getopt_long_only@@Base+0xf70>
  403e37:	xor    ebx,ebx
  403e39:	vmovdqa ymm3,ymm1
  403e3d:	vmovdqa ymm2,ymm1
  403e41:	mov    rdi,QWORD PTR [rsp]
  403e45:	test   rbp,rbp
  403e48:	jne    4045b9 <Mat_VarReadNextInfo@plt+0x2299>
  403e4e:	jmp    40467d <Mat_VarReadNextInfo@plt+0x235d>
  403e53:	cmp    QWORD PTR [rbx+0x38],0x0
  403e58:	je     40482f <Mat_VarReadNextInfo@plt+0x250f>
  403e5e:	mov    edi,DWORD PTR [rbx+0xc]
  403e61:	call   402210 <Mat_SizeOf@plt>
  403e66:	mov    QWORD PTR [rsp+0x18],rax
  403e6b:	cmp    DWORD PTR [rbx+0x18],0x0
  403e6f:	je     404185 <Mat_VarReadNextInfo@plt+0x1e65>
  403e75:	mov    rax,QWORD PTR [rbx+0x28]
  403e79:	cmp    QWORD PTR [rax+0x10],0x0
  403e7e:	je     40482f <Mat_VarReadNextInfo@plt+0x250f>
  403e84:	mov    r12,rbx
  403e87:	mov    rax,QWORD PTR [rbx+0x38]
  403e8b:	mov    rbx,QWORD PTR [rax]
  403e8e:	mov    r14,QWORD PTR [rax+0x8]
  403e92:	xor    edx,edx
  403e94:	mov    QWORD PTR [rsp],rbx
  403e98:	mov    QWORD PTR [rsp+0x8],r14
  403e9d:	mov    r15,QWORD PTR [rsp+0x18]
  403ea2:	jmp    403ed9 <Mat_VarReadNextInfo@plt+0x1bb9>
  403ea4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403eae:	xchg   ax,ax
  403eb0:	dec    ecx
  403eb2:	mov    DWORD PTR [rip+0x64a8],ecx        # 40a360 <optopt@@Base+0x38>
  403eb8:	mov    edi,0xa
  403ebd:	call   402080 <putchar@plt>
  403ec2:	mov    rdx,QWORD PTR [rsp+0x10]
  403ec7:	inc    rdx
  403eca:	mov    rax,QWORD PTR [r12+0x28]
  403ecf:	cmp    rdx,QWORD PTR [rax+0x10]
  403ed3:	jae    40482f <Mat_VarReadNextInfo@plt+0x250f>
  403ed9:	mov    rsi,QWORD PTR [r12+0x30]
  403ede:	lea    rdi,[rip+0x34d2]        # 4073b7 <getopt_long_only@@Base+0x11a7>
  403ee5:	mov    QWORD PTR [rsp+0x10],rdx
  403eea:	xor    eax,eax
  403eec:	call   402120 <Mat_Message@plt>
  403ef1:	mov    ecx,DWORD PTR [rip+0x6469]        # 40a360 <optopt@@Base+0x38>
  403ef7:	inc    ecx
  403ef9:	mov    DWORD PTR [rip+0x6461],ecx        # 40a360 <optopt@@Base+0x38>
  403eff:	mov    rax,QWORD PTR [r12+0x28]
  403f04:	cmp    QWORD PTR [rax],0x0
  403f08:	je     403eb0 <Mat_VarReadNextInfo@plt+0x1b90>
  403f0a:	xor    r13d,r13d
  403f0d:	jmp    403f35 <Mat_VarReadNextInfo@plt+0x1c15>
  403f0f:	nop
  403f10:	mov    edi,0xa
  403f15:	call   402080 <putchar@plt>
  403f1a:	inc    r13
  403f1d:	mov    rax,QWORD PTR [r12+0x28]
  403f22:	mov    ecx,DWORD PTR [rip+0x6438]        # 40a360 <optopt@@Base+0x38>
  403f28:	cmp    r13,QWORD PTR [rax]
  403f2b:	mov    rbx,QWORD PTR [rsp]
  403f2f:	jae    403eb0 <Mat_VarReadNextInfo@plt+0x1b90>
  403f35:	mov    QWORD PTR [rsp+0x20],r13
  403f3a:	test   ecx,ecx
  403f3c:	je     403f6e <Mat_VarReadNextInfo@plt+0x1c4e>
  403f3e:	xor    ebx,ebx
  403f40:	lea    r13,[rip+0x350d]        # 407454 <getopt_long_only@@Base+0x1244>
  403f47:	nop    WORD PTR [rax+rax*1+0x0]
  403f50:	mov    rdi,r13
  403f53:	xor    eax,eax
  403f55:	call   402160 <printf@plt>
  403f5a:	inc    rbx
  403f5d:	movsxd rax,DWORD PTR [rip+0x63fc]        # 40a360 <optopt@@Base+0x38>
  403f64:	cmp    rbx,rax
  403f67:	jb     403f50 <Mat_VarReadNextInfo@plt+0x1c30>
  403f69:	mov    rax,QWORD PTR [r12+0x28]
  403f6e:	mov    rbx,QWORD PTR [rax+0x8]
  403f72:	test   rbx,rbx
  403f75:	mov    r14,QWORD PTR [rsp+0x10]
  403f7a:	mov    r13,QWORD PTR [rsp+0x20]
  403f7f:	je     403f10 <Mat_VarReadNextInfo@plt+0x1bf0>
  403f81:	xor    ebp,ebp
  403f83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f8d:	nop    DWORD PTR [rax]
  403f90:	imul   rbx,r14
  403f94:	add    rbx,rbp
  403f97:	imul   rbx,QWORD PTR [rax]
  403f9b:	add    rbx,r13
  403f9e:	mov    edi,DWORD PTR [r12+0xc]
  403fa3:	imul   rbx,r15
  403fa7:	mov    rax,QWORD PTR [rsp]
  403fab:	lea    rsi,[rax+rbx*1]
  403faf:	call   405050 <Mat_VarReadNextInfo@plt+0x2d30>
  403fb4:	lea    rdi,[rip+0x33d5]        # 407390 <getopt_long_only@@Base+0x1180>
  403fbb:	xor    eax,eax
  403fbd:	call   402160 <printf@plt>
  403fc2:	mov    edi,DWORD PTR [r12+0xc]
  403fc7:	add    rbx,QWORD PTR [rsp+0x8]
  403fcc:	mov    rsi,rbx
  403fcf:	call   405050 <Mat_VarReadNextInfo@plt+0x2d30>
  403fd4:	lea    rdi,[rip+0x33b9]        # 407394 <getopt_long_only@@Base+0x1184>
  403fdb:	xor    eax,eax
  403fdd:	call   402160 <printf@plt>
  403fe2:	inc    rbp
  403fe5:	mov    rax,QWORD PTR [r12+0x28]
  403fea:	mov    rbx,QWORD PTR [rax+0x8]
  403fee:	cmp    rbp,rbx
  403ff1:	jb     403f90 <Mat_VarReadNextInfo@plt+0x1c70>
  403ff3:	jmp    403f10 <Mat_VarReadNextInfo@plt+0x1bf0>
  403ff8:	movzx  esi,BYTE PTR [rip+0x6359]        # 40a358 <optopt@@Base+0x30>
  403fff:	mov    rdi,rbx
  404002:	add    rsp,0x28
  404006:	pop    rbx
  404007:	pop    r12
  404009:	pop    r13
  40400b:	pop    r14
  40400d:	pop    r15
  40400f:	pop    rbp
  404010:	jmp    402240 <Mat_VarPrint@plt>
  404015:	mov    rsi,QWORD PTR [rbx+0x30]
  404019:	test   rsi,rsi
  40401c:	je     40402c <Mat_VarReadNextInfo@plt+0x1d0c>
  40401e:	lea    rdi,[rip+0x330d]        # 407332 <getopt_long_only@@Base+0x1122>
  404025:	xor    eax,eax
  404027:	call   402120 <Mat_Message@plt>
  40402c:	mov    esi,DWORD PTR [rbx+0x8]
  40402f:	lea    rdi,[rip+0x330b]        # 407341 <getopt_long_only@@Base+0x1131>
  404036:	xor    eax,eax
  404038:	call   402120 <Mat_Message@plt>
  40403d:	mov    eax,DWORD PTR [rbx+0x8]
  404040:	test   rax,rax
  404043:	je     40482f <Mat_VarReadNextInfo@plt+0x250f>
  404049:	mov    rbp,rbx
  40404c:	mov    rcx,QWORD PTR [rbx+0x28]
  404050:	mov    rbx,QWORD PTR [rcx]
  404053:	cmp    eax,0x2
  404056:	jl     404cdd <Mat_VarReadNextInfo@plt+0x29bd>
  40405c:	lea    rsi,[rax-0x1]
  404060:	mov    edx,0x1
  404065:	cmp    rsi,0x10
  404069:	jb     404cd0 <Mat_VarReadNextInfo@plt+0x29b0>
  40406f:	mov    rdx,rsi
  404072:	vmovdqa xmm0,XMMWORD PTR [rip+0x30c6]        # 407140 <getopt_long_only@@Base+0xf30>
  40407a:	vpinsrq xmm0,xmm0,rbx,0x0
  404080:	vpblendd ymm0,ymm0,YMMWORD PTR [rip+0x30b6],0xf0        # 407140 <getopt_long_only@@Base+0xf30>
  40408a:	and    rdx,0xfffffffffffffff0
  40408e:	lea    rdi,[rdx-0x10]
  404092:	mov    rbp,rdi
  404095:	shr    rbp,0x4
  404099:	inc    rbp
  40409c:	mov    ebx,ebp
  40409e:	and    ebx,0x3
  4040a1:	cmp    rdi,0x30
  4040a5:	jae    404841 <Mat_VarReadNextInfo@plt+0x2521>
  4040ab:	vpbroadcastq ymm1,QWORD PTR [rip+0x30cc]        # 407180 <getopt_long_only@@Base+0xf70>
  4040b4:	xor    ebp,ebp
  4040b6:	vmovdqa ymm3,ymm1
  4040ba:	vmovdqa ymm2,ymm1
  4040be:	test   rbx,rbx
  4040c1:	jne    404b39 <Mat_VarReadNextInfo@plt+0x2819>
  4040c7:	jmp    404bfd <Mat_VarReadNextInfo@plt+0x28dd>
  4040cc:	lea    rdi,[rip+0x32b7]        # 40738a <getopt_long_only@@Base+0x117a>
  4040d3:	jmp    404d46 <Mat_VarReadNextInfo@plt+0x2a26>
  4040d8:	mov    rax,QWORD PTR [rbp+0x28]
  4040dc:	cmp    QWORD PTR [rax],0x0
  4040e0:	je     40482f <Mat_VarReadNextInfo@plt+0x250f>
  4040e6:	mov    r14,QWORD PTR [rbp+0x38]
  4040ea:	xor    r12d,r12d
  4040ed:	mov    r15,QWORD PTR [rsp+0x8]
  4040f2:	cmp    QWORD PTR [rax+0x8],0x0
  4040f7:	jne    404121 <Mat_VarReadNextInfo@plt+0x1e01>
  4040f9:	nop    DWORD PTR [rax+0x0]
  404100:	mov    edi,0xa
  404105:	call   402080 <putchar@plt>
  40410a:	inc    r12
  40410d:	mov    rax,QWORD PTR [rbp+0x28]
  404111:	cmp    r12,QWORD PTR [rax]
  404114:	jae    40482f <Mat_VarReadNextInfo@plt+0x250f>
  40411a:	cmp    QWORD PTR [rax+0x8],0x0
  40411f:	je     404100 <Mat_VarReadNextInfo@plt+0x1de0>
  404121:	mov    edi,DWORD PTR [rbp+0xc]
  404124:	mov    rsi,r12
  404127:	imul   rsi,r15
  40412b:	add    rsi,r14
  40412e:	call   405050 <Mat_VarReadNextInfo@plt+0x2d30>
  404133:	mov    edi,0x20
  404138:	call   402080 <putchar@plt>
  40413d:	mov    rax,QWORD PTR [rbp+0x28]
  404141:	cmp    QWORD PTR [rax+0x8],0x2
  404146:	jb     404100 <Mat_VarReadNextInfo@plt+0x1de0>
  404148:	mov    ebx,0x1
  40414d:	nop    DWORD PTR [rax]
  404150:	mov    rsi,QWORD PTR [rax]
  404153:	imul   rsi,rbx
  404157:	add    rsi,r12
  40415a:	mov    edi,DWORD PTR [rbp+0xc]
  40415d:	imul   rsi,r15
  404161:	add    rsi,r14
  404164:	call   405050 <Mat_VarReadNextInfo@plt+0x2d30>
  404169:	mov    edi,0x20
  40416e:	call   402080 <putchar@plt>
  404173:	inc    rbx
  404176:	mov    rax,QWORD PTR [rbp+0x28]
  40417a:	cmp    rbx,QWORD PTR [rax+0x8]
  40417e:	jb     404150 <Mat_VarReadNextInfo@plt+0x1e30>
  404180:	jmp    404100 <Mat_VarReadNextInfo@plt+0x1de0>
  404185:	mov    rax,QWORD PTR [rbx+0x28]
  404189:	cmp    QWORD PTR [rax+0x10],0x0
  40418e:	je     40482f <Mat_VarReadNextInfo@plt+0x250f>
  404194:	mov    r14,rbx
  404197:	mov    rax,QWORD PTR [rbx+0x38]
  40419b:	mov    QWORD PTR [rsp+0x8],rax
  4041a0:	xor    r15d,r15d
  4041a3:	mov    r12,QWORD PTR [rsp+0x18]
  4041a8:	jmp    4041d3 <Mat_VarReadNextInfo@plt+0x1eb3>
  4041aa:	nop    WORD PTR [rax+rax*1+0x0]
  4041b0:	dec    ecx
  4041b2:	mov    DWORD PTR [rip+0x61a8],ecx        # 40a360 <optopt@@Base+0x38>
  4041b8:	mov    edi,0xa
  4041bd:	call   402080 <putchar@plt>
  4041c2:	inc    r15
  4041c5:	mov    rax,QWORD PTR [r14+0x28]
  4041c9:	cmp    r15,QWORD PTR [rax+0x10]
  4041cd:	jae    40482f <Mat_VarReadNextInfo@plt+0x250f>
  4041d3:	mov    rsi,QWORD PTR [r14+0x30]
  4041d7:	lea    rdi,[rip+0x31d9]        # 4073b7 <getopt_long_only@@Base+0x11a7>
  4041de:	mov    rdx,r15
  4041e1:	xor    eax,eax
  4041e3:	call   402120 <Mat_Message@plt>
  4041e8:	mov    ecx,DWORD PTR [rip+0x6172]        # 40a360 <optopt@@Base+0x38>
  4041ee:	inc    ecx
  4041f0:	mov    DWORD PTR [rip+0x616a],ecx        # 40a360 <optopt@@Base+0x38>
  4041f6:	mov    rax,QWORD PTR [r14+0x28]
  4041fa:	cmp    QWORD PTR [rax],0x0
  4041fe:	je     4041b0 <Mat_VarReadNextInfo@plt+0x1e90>
  404200:	xor    r13d,r13d
  404203:	mov    rbx,QWORD PTR [rsp+0x8]
  404208:	test   ecx,ecx
  40420a:	jne    404230 <Mat_VarReadNextInfo@plt+0x1f10>
  40420c:	jmp    404266 <Mat_VarReadNextInfo@plt+0x1f46>
  40420e:	xchg   ax,ax
  404210:	mov    edi,0xa
  404215:	call   402080 <putchar@plt>
  40421a:	inc    r13
  40421d:	mov    rax,QWORD PTR [r14+0x28]
  404221:	mov    ecx,DWORD PTR [rip+0x6139]        # 40a360 <optopt@@Base+0x38>
  404227:	cmp    r13,QWORD PTR [rax]
  40422a:	jae    4041b0 <Mat_VarReadNextInfo@plt+0x1e90>
  40422c:	test   ecx,ecx
  40422e:	je     404266 <Mat_VarReadNextInfo@plt+0x1f46>
  404230:	xor    ebp,ebp
  404232:	lea    rbx,[rip+0x321b]        # 407454 <getopt_long_only@@Base+0x1244>
  404239:	nop    DWORD PTR [rax+0x0]
  404240:	mov    rdi,rbx
  404243:	xor    eax,eax
  404245:	call   402160 <printf@plt>
  40424a:	inc    rbp
  40424d:	movsxd rax,DWORD PTR [rip+0x610c]        # 40a360 <optopt@@Base+0x38>
  404254:	cmp    rbp,rax
  404257:	jb     404240 <Mat_VarReadNextInfo@plt+0x1f20>
  404259:	mov    rax,QWORD PTR [rsp]
  40425d:	mov    rax,QWORD PTR [rax+0x28]
  404261:	mov    rbx,QWORD PTR [rsp+0x8]
  404266:	mov    rsi,QWORD PTR [rax+0x8]
  40426a:	test   rsi,rsi
  40426d:	mov    r14,QWORD PTR [rsp]
  404271:	je     404210 <Mat_VarReadNextInfo@plt+0x1ef0>
  404273:	xor    ebp,ebp
  404275:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40427f:	nop
  404280:	imul   rsi,r15
  404284:	add    rsi,rbp
  404287:	imul   rsi,QWORD PTR [rax]
  40428b:	add    rsi,r13
  40428e:	mov    edi,DWORD PTR [r14+0xc]
  404292:	imul   rsi,r12
  404296:	add    rsi,rbx
  404299:	call   405050 <Mat_VarReadNextInfo@plt+0x2d30>
  40429e:	mov    edi,0x20
  4042a3:	call   402080 <putchar@plt>
  4042a8:	inc    rbp
  4042ab:	mov    rax,QWORD PTR [r14+0x28]
  4042af:	mov    rsi,QWORD PTR [rax+0x8]
  4042b3:	cmp    rbp,rsi
  4042b6:	jb     404280 <Mat_VarReadNextInfo@plt+0x1f60>
  4042b8:	jmp    404210 <Mat_VarReadNextInfo@plt+0x1ef0>
  4042bd:	mov    rsi,rbp
  4042c0:	sub    rsi,rdi
  4042c3:	vpbroadcastq ymm1,QWORD PTR [rip+0x2eb4]        # 407180 <getopt_long_only@@Base+0xf70>
  4042cc:	xor    ebx,ebx
  4042ce:	vmovdqa ymm3,ymm1
  4042d2:	vmovdqa ymm2,ymm1
  4042d6:	mov    rdi,QWORD PTR [rsp]
  4042da:	vmovdqu ymm4,YMMWORD PTR [rax+rbx*8+0x8]
  4042e0:	vmovdqu ymm5,YMMWORD PTR [rax+rbx*8+0x28]
  4042e6:	vmovdqu ymm6,YMMWORD PTR [rax+rbx*8+0x48]
  4042ec:	vmovdqu ymm7,YMMWORD PTR [rax+rbx*8+0x68]
  4042f2:	vpsrlq ymm8,ymm0,0x20
  4042f7:	vpmuludq ymm8,ymm4,ymm8
  4042fc:	vpsrlq ymm9,ymm4,0x20
  404301:	vpmuludq ymm9,ymm9,ymm0
  404305:	vpaddq ymm8,ymm8,ymm9
  40430a:	vpsllq ymm8,ymm8,0x20
  404310:	vpmuludq ymm0,ymm4,ymm0
  404314:	vpaddq ymm0,ymm0,ymm8
  404319:	vpsrlq ymm4,ymm1,0x20
  40431e:	vpmuludq ymm4,ymm5,ymm4
  404322:	vpsrlq ymm8,ymm5,0x20
  404327:	vpmuludq ymm8,ymm8,ymm1
  40432b:	vpaddq ymm4,ymm4,ymm8
  404330:	vpsllq ymm4,ymm4,0x20
  404335:	vpmuludq ymm1,ymm5,ymm1
  404339:	vpaddq ymm1,ymm1,ymm4
  40433d:	vpsrlq ymm4,ymm3,0x20
  404342:	vpmuludq ymm4,ymm6,ymm4
  404346:	vpsrlq ymm5,ymm6,0x20
  40434b:	vpmuludq ymm5,ymm5,ymm3
  40434f:	vpaddq ymm4,ymm4,ymm5
  404353:	vpsllq ymm4,ymm4,0x20
  404358:	vpmuludq ymm3,ymm6,ymm3
  40435c:	vpaddq ymm3,ymm3,ymm4
  404360:	vpsrlq ymm4,ymm2,0x20
  404365:	vpmuludq ymm4,ymm7,ymm4
  404369:	vpsrlq ymm5,ymm7,0x20
  40436e:	vpmuludq ymm5,ymm5,ymm2
  404372:	vpaddq ymm4,ymm4,ymm5
  404376:	vpsllq ymm4,ymm4,0x20
  40437b:	vpmuludq ymm2,ymm7,ymm2
  40437f:	vpaddq ymm2,ymm2,ymm4
  404383:	vmovdqu ymm4,YMMWORD PTR [rax+rbx*8+0x88]
  40438c:	vmovdqu ymm5,YMMWORD PTR [rax+rbx*8+0xa8]
  404395:	vmovdqu ymm6,YMMWORD PTR [rax+rbx*8+0xc8]
  40439e:	vmovdqu ymm7,YMMWORD PTR [rax+rbx*8+0xe8]
  4043a7:	vpsrlq ymm8,ymm4,0x20
  4043ac:	vpmuludq ymm8,ymm8,ymm0
  4043b0:	vpsrlq ymm9,ymm0,0x20
  4043b5:	vpmuludq ymm9,ymm4,ymm9
  4043ba:	vpaddq ymm8,ymm9,ymm8
  4043bf:	vpsllq ymm8,ymm8,0x20
  4043c5:	vpmuludq ymm0,ymm4,ymm0
  4043c9:	vpaddq ymm0,ymm0,ymm8
  4043ce:	vpsrlq ymm4,ymm5,0x20
  4043d3:	vpmuludq ymm4,ymm4,ymm1
  4043d7:	vpsrlq ymm8,ymm1,0x20
  4043dc:	vpmuludq ymm8,ymm5,ymm8
  4043e1:	vpaddq ymm4,ymm8,ymm4
  4043e5:	vpsllq ymm4,ymm4,0x20
  4043ea:	vpmuludq ymm1,ymm5,ymm1
  4043ee:	vpaddq ymm1,ymm1,ymm4
  4043f2:	vpsrlq ymm4,ymm6,0x20
  4043f7:	vpmuludq ymm4,ymm4,ymm3
  4043fb:	vpsrlq ymm5,ymm3,0x20
  404400:	vpmuludq ymm5,ymm6,ymm5
  404404:	vpaddq ymm4,ymm5,ymm4
  404408:	vpsllq ymm4,ymm4,0x20
  40440d:	vpmuludq ymm3,ymm6,ymm3
  404411:	vpaddq ymm3,ymm3,ymm4
  404415:	vpsrlq ymm4,ymm7,0x20
  40441a:	vpmuludq ymm4,ymm4,ymm2
  40441e:	vpsrlq ymm5,ymm2,0x20
  404423:	vpmuludq ymm5,ymm7,ymm5
  404427:	vpaddq ymm4,ymm5,ymm4
  40442b:	vpsllq ymm4,ymm4,0x20
  404430:	vpmuludq ymm2,ymm7,ymm2
  404434:	vpaddq ymm2,ymm2,ymm4
  404438:	vmovdqu ymm4,YMMWORD PTR [rax+rbx*8+0x108]
  404441:	vmovdqu ymm5,YMMWORD PTR [rax+rbx*8+0x128]
  40444a:	vmovdqu ymm6,YMMWORD PTR [rax+rbx*8+0x148]
  404453:	vmovdqu ymm7,YMMWORD PTR [rax+rbx*8+0x168]
  40445c:	vpsrlq ymm8,ymm4,0x20
  404461:	vpmuludq ymm8,ymm8,ymm0
  404465:	vpsrlq ymm9,ymm0,0x20
  40446a:	vpmuludq ymm9,ymm4,ymm9
  40446f:	vpaddq ymm8,ymm9,ymm8
  404474:	vpsllq ymm8,ymm8,0x20
  40447a:	vpmuludq ymm0,ymm4,ymm0
  40447e:	vpaddq ymm0,ymm0,ymm8
  404483:	vpsrlq ymm4,ymm5,0x20
  404488:	vpmuludq ymm4,ymm4,ymm1
  40448c:	vpsrlq ymm8,ymm1,0x20
  404491:	vpmuludq ymm8,ymm5,ymm8
  404496:	vpaddq ymm4,ymm8,ymm4
  40449a:	vpsllq ymm4,ymm4,0x20
  40449f:	vpmuludq ymm1,ymm5,ymm1
  4044a3:	vpaddq ymm1,ymm1,ymm4
  4044a7:	vpsrlq ymm4,ymm6,0x20
  4044ac:	vpmuludq ymm4,ymm4,ymm3
  4044b0:	vpsrlq ymm5,ymm3,0x20
  4044b5:	vpmuludq ymm5,ymm6,ymm5
  4044b9:	vpaddq ymm4,ymm5,ymm4
  4044bd:	vpsllq ymm4,ymm4,0x20
  4044c2:	vpmuludq ymm3,ymm6,ymm3
  4044c6:	vpaddq ymm3,ymm3,ymm4
  4044ca:	vpsrlq ymm4,ymm7,0x20
  4044cf:	vpmuludq ymm4,ymm4,ymm2
  4044d3:	vpsrlq ymm5,ymm2,0x20
  4044d8:	vpmuludq ymm5,ymm7,ymm5
  4044dc:	vpaddq ymm4,ymm5,ymm4
  4044e0:	vpsllq ymm4,ymm4,0x20
  4044e5:	vpmuludq ymm2,ymm7,ymm2
  4044e9:	vpaddq ymm2,ymm2,ymm4
  4044ed:	vmovdqu ymm4,YMMWORD PTR [rax+rbx*8+0x188]
  4044f6:	vmovdqu ymm5,YMMWORD PTR [rax+rbx*8+0x1a8]
  4044ff:	vmovdqu ymm6,YMMWORD PTR [rax+rbx*8+0x1c8]
  404508:	vmovdqu ymm7,YMMWORD PTR [rax+rbx*8+0x1e8]
  404511:	vpsrlq ymm8,ymm4,0x20
  404516:	vpmuludq ymm8,ymm8,ymm0
  40451a:	vpsrlq ymm9,ymm0,0x20
  40451f:	vpmuludq ymm9,ymm4,ymm9
  404524:	vpaddq ymm8,ymm9,ymm8
  404529:	vpsllq ymm8,ymm8,0x20
  40452f:	vpmuludq ymm0,ymm4,ymm0
  404533:	vpaddq ymm0,ymm0,ymm8
  404538:	vpsrlq ymm4,ymm5,0x20
  40453d:	vpmuludq ymm4,ymm4,ymm1
  404541:	vpsrlq ymm8,ymm1,0x20
  404546:	vpmuludq ymm8,ymm5,ymm8
  40454b:	vpaddq ymm4,ymm8,ymm4
  40454f:	vpsllq ymm4,ymm4,0x20
  404554:	vpmuludq ymm1,ymm5,ymm1
  404558:	vpaddq ymm1,ymm1,ymm4
  40455c:	vpsrlq ymm4,ymm6,0x20
  404561:	vpmuludq ymm4,ymm4,ymm3
  404565:	vpsrlq ymm5,ymm3,0x20
  40456a:	vpmuludq ymm5,ymm6,ymm5
  40456e:	vpaddq ymm4,ymm5,ymm4
  404572:	vpsllq ymm4,ymm4,0x20
  404577:	vpmuludq ymm3,ymm6,ymm3
  40457b:	vpaddq ymm3,ymm3,ymm4
  40457f:	vpsrlq ymm4,ymm7,0x20
  404584:	vpmuludq ymm4,ymm4,ymm2
  404588:	vpsrlq ymm5,ymm2,0x20
  40458d:	vpmuludq ymm5,ymm7,ymm5
  404591:	vpaddq ymm4,ymm5,ymm4
  404595:	vpsllq ymm4,ymm4,0x20
  40459a:	vpmuludq ymm2,ymm7,ymm2
  40459e:	vpaddq ymm2,ymm2,ymm4
  4045a2:	add    rbx,0x40
  4045a6:	add    rsi,0x4
  4045aa:	jne    4042da <Mat_VarReadNextInfo@plt+0x1fba>
  4045b0:	test   rbp,rbp
  4045b3:	je     40467d <Mat_VarReadNextInfo@plt+0x235d>
  4045b9:	neg    rbp
  4045bc:	lea    rsi,[rbx*8+0x0]
  4045c4:	or     rsi,0x8
  4045c8:	vmovdqu ymm4,YMMWORD PTR [rax+rsi*1]
  4045cd:	vmovdqu ymm5,YMMWORD PTR [rax+rsi*1+0x20]
  4045d3:	vmovdqu ymm6,YMMWORD PTR [rax+rsi*1+0x40]
  4045d9:	vmovdqu ymm7,YMMWORD PTR [rax+rsi*1+0x60]
  4045df:	vpsrlq ymm8,ymm0,0x20
  4045e4:	vpmuludq ymm8,ymm4,ymm8
  4045e9:	vpsrlq ymm9,ymm4,0x20
  4045ee:	vpmuludq ymm9,ymm9,ymm0
  4045f2:	vpaddq ymm8,ymm8,ymm9
  4045f7:	vpsllq ymm8,ymm8,0x20
  4045fd:	vpmuludq ymm0,ymm4,ymm0
  404601:	vpaddq ymm0,ymm0,ymm8
  404606:	vpsrlq ymm4,ymm1,0x20
  40460b:	vpmuludq ymm4,ymm5,ymm4
  40460f:	vpsrlq ymm8,ymm5,0x20
  404614:	vpmuludq ymm8,ymm8,ymm1
  404618:	vpaddq ymm4,ymm4,ymm8
  40461d:	vpsllq ymm4,ymm4,0x20
  404622:	vpmuludq ymm1,ymm5,ymm1
  404626:	vpaddq ymm1,ymm1,ymm4
  40462a:	vpsrlq ymm4,ymm3,0x20
  40462f:	vpmuludq ymm4,ymm6,ymm4
  404633:	vpsrlq ymm5,ymm6,0x20
  404638:	vpmuludq ymm5,ymm5,ymm3
  40463c:	vpaddq ymm4,ymm4,ymm5
  404640:	vpsllq ymm4,ymm4,0x20
  404645:	vpmuludq ymm3,ymm6,ymm3
  404649:	vpaddq ymm3,ymm3,ymm4
  40464d:	vpsrlq ymm4,ymm2,0x20
  404652:	vpmuludq ymm4,ymm7,ymm4
  404656:	vpsrlq ymm5,ymm7,0x20
  40465b:	vpmuludq ymm5,ymm5,ymm2
  40465f:	vpaddq ymm4,ymm4,ymm5
  404663:	vpsllq ymm4,ymm4,0x20
  404668:	vpmuludq ymm2,ymm7,ymm2
  40466c:	vpaddq ymm2,ymm2,ymm4
  404670:	add    rbx,0x10
  404674:	inc    rbp
  404677:	jne    4045bc <Mat_VarReadNextInfo@plt+0x229c>
  40467d:	vpsrlq ymm4,ymm1,0x20
  404682:	vpmuludq ymm4,ymm4,ymm0
  404686:	vpsrlq ymm5,ymm0,0x20
  40468b:	vpmuludq ymm5,ymm1,ymm5
  40468f:	vpaddq ymm4,ymm5,ymm4
  404693:	vpsllq ymm4,ymm4,0x20
  404698:	vpmuludq ymm0,ymm1,ymm0
  40469c:	vpaddq ymm0,ymm0,ymm4
  4046a0:	vpsrlq ymm1,ymm3,0x20
  4046a5:	vpmuludq ymm1,ymm1,ymm0
  4046a9:	vpsrlq ymm4,ymm0,0x20
  4046ae:	vpmuludq ymm4,ymm3,ymm4
  4046b2:	vpaddq ymm1,ymm4,ymm1
  4046b6:	vpsllq ymm1,ymm1,0x20
  4046bb:	vpmuludq ymm0,ymm3,ymm0
  4046bf:	vpaddq ymm0,ymm0,ymm1
  4046c3:	vpsrlq ymm1,ymm2,0x20
  4046c8:	vpmuludq ymm1,ymm1,ymm0
  4046cc:	vpsrlq ymm3,ymm0,0x20
  4046d1:	vpmuludq ymm3,ymm2,ymm3
  4046d5:	vpaddq ymm1,ymm3,ymm1
  4046d9:	vpsllq ymm1,ymm1,0x20
  4046de:	vpmuludq ymm0,ymm2,ymm0
  4046e2:	vpaddq ymm0,ymm0,ymm1
  4046e6:	vextracti128 xmm1,ymm0,0x1
  4046ec:	vpsrlq xmm2,xmm0,0x20
  4046f1:	vpmuludq xmm2,xmm2,xmm1
  4046f5:	vpsrlq xmm3,xmm1,0x20
  4046fa:	vpmuludq xmm3,xmm0,xmm3
  4046fe:	vpaddq xmm2,xmm3,xmm2
  404702:	vpsllq xmm2,xmm2,0x20
  404707:	vpmuludq xmm0,xmm0,xmm1
  40470b:	vpaddq xmm0,xmm0,xmm2
  40470f:	vpshufd xmm1,xmm0,0x4e
  404714:	vpsrlq xmm2,xmm0,0x20
  404719:	vpmuludq xmm2,xmm2,xmm1
  40471d:	vpsrldq xmm3,xmm0,0xc
  404722:	vpmuludq xmm3,xmm0,xmm3
  404726:	vpaddq xmm2,xmm3,xmm2
  40472a:	vpsllq xmm2,xmm2,0x20
  40472f:	vpmuludq xmm0,xmm0,xmm1
  404733:	vpaddq xmm0,xmm0,xmm2
  404737:	vmovq  rbx,xmm0
  40473c:	cmp    r8,rdx
  40473f:	je     40475d <Mat_VarReadNextInfo@plt+0x243d>
  404741:	or     rdx,0x1
  404745:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40474f:	nop
  404750:	imul   rbx,QWORD PTR [rax+rdx*8]
  404755:	inc    rdx
  404758:	cmp    rdx,rcx
  40475b:	jl     404750 <Mat_VarReadNextInfo@plt+0x2430>
  40475d:	test   r14d,r14d
  404760:	jle    4047cb <Mat_VarReadNextInfo@plt+0x24ab>
  404762:	test   rbx,rbx
  404765:	jne    4047cb <Mat_VarReadNextInfo@plt+0x24ab>
  404767:	vzeroupper 
  40476a:	call   4021b0 <Mat_VarGetStructFieldnames@plt>
  40476f:	mov    r15,rax
  404772:	lea    rdi,[rip+0x2bed]        # 407366 <getopt_long_only@@Base+0x1156>
  404779:	mov    esi,r14d
  40477c:	xor    eax,eax
  40477e:	call   402120 <Mat_Message@plt>
  404783:	mov    eax,DWORD PTR [rip+0x5bd7]        # 40a360 <optopt@@Base+0x38>
  404789:	inc    eax
  40478b:	mov    DWORD PTR [rip+0x5bcf],eax        # 40a360 <optopt@@Base+0x38>
  404791:	test   r15,r15
  404794:	je     404d37 <Mat_VarReadNextInfo@plt+0x2a17>
  40479a:	mov    ebp,r14d
  40479d:	lea    r14,[rip+0x2b90]        # 407334 <getopt_long_only@@Base+0x1124>
  4047a4:	xor    ebx,ebx
  4047a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4047b0:	mov    rsi,QWORD PTR [r15+rbx*8]
  4047b4:	mov    rdi,r14
  4047b7:	xor    eax,eax
  4047b9:	call   402120 <Mat_Message@plt>
  4047be:	inc    rbx
  4047c1:	cmp    rbp,rbx
  4047c4:	jne    4047b0 <Mat_VarReadNextInfo@plt+0x2490>
  4047c6:	jmp    404d31 <Mat_VarReadNextInfo@plt+0x2a11>
  4047cb:	test   r14d,r14d
  4047ce:	jle    40482f <Mat_VarReadNextInfo@plt+0x250f>
  4047d0:	test   rbx,rbx
  4047d3:	je     40482f <Mat_VarReadNextInfo@plt+0x250f>
  4047d5:	mov    rbp,rdi
  4047d8:	lea    rdi,[rip+0x2b87]        # 407366 <getopt_long_only@@Base+0x1156>
  4047df:	mov    esi,r14d
  4047e2:	xor    eax,eax
  4047e4:	vzeroupper 
  4047e7:	call   402120 <Mat_Message@plt>
  4047ec:	mov    eax,DWORD PTR [rip+0x5b6e]        # 40a360 <optopt@@Base+0x38>
  4047f2:	inc    eax
  4047f4:	mov    DWORD PTR [rip+0x5b66],eax        # 40a360 <optopt@@Base+0x38>
  4047fa:	mov    r15,QWORD PTR [rbp+0x38]
  4047fe:	test   r15,r15
  404801:	je     404d37 <Mat_VarReadNextInfo@plt+0x2a17>
  404807:	movsxd rcx,r14d
  40480a:	imul   rbx,rcx
  40480e:	test   rbx,rbx
  404811:	je     404d37 <Mat_VarReadNextInfo@plt+0x2a17>
  404817:	xor    ebp,ebp
  404819:	mov    rdi,QWORD PTR [r15+rbp*8]
  40481d:	call   403c40 <Mat_VarReadNextInfo@plt+0x1920>
  404822:	inc    rbp
  404825:	cmp    rbx,rbp
  404828:	jne    404819 <Mat_VarReadNextInfo@plt+0x24f9>
  40482a:	jmp    404d31 <Mat_VarReadNextInfo@plt+0x2a11>
  40482f:	add    rsp,0x28
  404833:	pop    rbx
  404834:	pop    r12
  404836:	pop    r13
  404838:	pop    r14
  40483a:	pop    r15
  40483c:	pop    rbp
  40483d:	vzeroupper 
  404840:	ret    
  404841:	mov    rdi,rbx
  404844:	sub    rdi,rbp
  404847:	vpbroadcastq ymm1,QWORD PTR [rip+0x2930]        # 407180 <getopt_long_only@@Base+0xf70>
  404850:	xor    ebp,ebp
  404852:	vmovdqa ymm3,ymm1
  404856:	vmovdqa ymm2,ymm1
  40485a:	vmovdqu ymm4,YMMWORD PTR [rcx+rbp*8+0x8]
  404860:	vmovdqu ymm5,YMMWORD PTR [rcx+rbp*8+0x28]
  404866:	vmovdqu ymm6,YMMWORD PTR [rcx+rbp*8+0x48]
  40486c:	vmovdqu ymm7,YMMWORD PTR [rcx+rbp*8+0x68]
  404872:	vpsrlq ymm8,ymm0,0x20
  404877:	vpmuludq ymm8,ymm4,ymm8
  40487c:	vpsrlq ymm9,ymm4,0x20
  404881:	vpmuludq ymm9,ymm9,ymm0
  404885:	vpaddq ymm8,ymm8,ymm9
  40488a:	vpsllq ymm8,ymm8,0x20
  404890:	vpmuludq ymm0,ymm4,ymm0
  404894:	vpaddq ymm0,ymm0,ymm8
  404899:	vpsrlq ymm4,ymm1,0x20
  40489e:	vpmuludq ymm4,ymm5,ymm4
  4048a2:	vpsrlq ymm8,ymm5,0x20
  4048a7:	vpmuludq ymm8,ymm8,ymm1
  4048ab:	vpaddq ymm4,ymm4,ymm8
  4048b0:	vpsllq ymm4,ymm4,0x20
  4048b5:	vpmuludq ymm1,ymm5,ymm1
  4048b9:	vpaddq ymm1,ymm1,ymm4
  4048bd:	vpsrlq ymm4,ymm3,0x20
  4048c2:	vpmuludq ymm4,ymm6,ymm4
  4048c6:	vpsrlq ymm5,ymm6,0x20
  4048cb:	vpmuludq ymm5,ymm5,ymm3
  4048cf:	vpaddq ymm4,ymm4,ymm5
  4048d3:	vpsllq ymm4,ymm4,0x20
  4048d8:	vpmuludq ymm3,ymm6,ymm3
  4048dc:	vpaddq ymm3,ymm3,ymm4
  4048e0:	vpsrlq ymm4,ymm2,0x20
  4048e5:	vpmuludq ymm4,ymm7,ymm4
  4048e9:	vpsrlq ymm5,ymm7,0x20
  4048ee:	vpmuludq ymm5,ymm5,ymm2
  4048f2:	vpaddq ymm4,ymm4,ymm5
  4048f6:	vpsllq ymm4,ymm4,0x20
  4048fb:	vpmuludq ymm2,ymm7,ymm2
  4048ff:	vpaddq ymm2,ymm2,ymm4
  404903:	vmovdqu ymm4,YMMWORD PTR [rcx+rbp*8+0x88]
  40490c:	vmovdqu ymm5,YMMWORD PTR [rcx+rbp*8+0xa8]
  404915:	vmovdqu ymm6,YMMWORD PTR [rcx+rbp*8+0xc8]
  40491e:	vmovdqu ymm7,YMMWORD PTR [rcx+rbp*8+0xe8]
  404927:	vpsrlq ymm8,ymm4,0x20
  40492c:	vpmuludq ymm8,ymm8,ymm0
  404930:	vpsrlq ymm9,ymm0,0x20
  404935:	vpmuludq ymm9,ymm4,ymm9
  40493a:	vpaddq ymm8,ymm9,ymm8
  40493f:	vpsllq ymm8,ymm8,0x20
  404945:	vpmuludq ymm0,ymm4,ymm0
  404949:	vpaddq ymm0,ymm0,ymm8
  40494e:	vpsrlq ymm4,ymm5,0x20
  404953:	vpmuludq ymm4,ymm4,ymm1
  404957:	vpsrlq ymm8,ymm1,0x20
  40495c:	vpmuludq ymm8,ymm5,ymm8
  404961:	vpaddq ymm4,ymm8,ymm4
  404965:	vpsllq ymm4,ymm4,0x20
  40496a:	vpmuludq ymm1,ymm5,ymm1
  40496e:	vpaddq ymm1,ymm1,ymm4
  404972:	vpsrlq ymm4,ymm6,0x20
  404977:	vpmuludq ymm4,ymm4,ymm3
  40497b:	vpsrlq ymm5,ymm3,0x20
  404980:	vpmuludq ymm5,ymm6,ymm5
  404984:	vpaddq ymm4,ymm5,ymm4
  404988:	vpsllq ymm4,ymm4,0x20
  40498d:	vpmuludq ymm3,ymm6,ymm3
  404991:	vpaddq ymm3,ymm3,ymm4
  404995:	vpsrlq ymm4,ymm7,0x20
  40499a:	vpmuludq ymm4,ymm4,ymm2
  40499e:	vpsrlq ymm5,ymm2,0x20
  4049a3:	vpmuludq ymm5,ymm7,ymm5
  4049a7:	vpaddq ymm4,ymm5,ymm4
  4049ab:	vpsllq ymm4,ymm4,0x20
  4049b0:	vpmuludq ymm2,ymm7,ymm2
  4049b4:	vpaddq ymm2,ymm2,ymm4
  4049b8:	vmovdqu ymm4,YMMWORD PTR [rcx+rbp*8+0x108]
  4049c1:	vmovdqu ymm5,YMMWORD PTR [rcx+rbp*8+0x128]
  4049ca:	vmovdqu ymm6,YMMWORD PTR [rcx+rbp*8+0x148]
  4049d3:	vmovdqu ymm7,YMMWORD PTR [rcx+rbp*8+0x168]
  4049dc:	vpsrlq ymm8,ymm4,0x20
  4049e1:	vpmuludq ymm8,ymm8,ymm0
  4049e5:	vpsrlq ymm9,ymm0,0x20
  4049ea:	vpmuludq ymm9,ymm4,ymm9
  4049ef:	vpaddq ymm8,ymm9,ymm8
  4049f4:	vpsllq ymm8,ymm8,0x20
  4049fa:	vpmuludq ymm0,ymm4,ymm0
  4049fe:	vpaddq ymm0,ymm0,ymm8
  404a03:	vpsrlq ymm4,ymm5,0x20
  404a08:	vpmuludq ymm4,ymm4,ymm1
  404a0c:	vpsrlq ymm8,ymm1,0x20
  404a11:	vpmuludq ymm8,ymm5,ymm8
  404a16:	vpaddq ymm4,ymm8,ymm4
  404a1a:	vpsllq ymm4,ymm4,0x20
  404a1f:	vpmuludq ymm1,ymm5,ymm1
  404a23:	vpaddq ymm1,ymm1,ymm4
  404a27:	vpsrlq ymm4,ymm6,0x20
  404a2c:	vpmuludq ymm4,ymm4,ymm3
  404a30:	vpsrlq ymm5,ymm3,0x20
  404a35:	vpmuludq ymm5,ymm6,ymm5
  404a39:	vpaddq ymm4,ymm5,ymm4
  404a3d:	vpsllq ymm4,ymm4,0x20
  404a42:	vpmuludq ymm3,ymm6,ymm3
  404a46:	vpaddq ymm3,ymm3,ymm4
  404a4a:	vpsrlq ymm4,ymm7,0x20
  404a4f:	vpmuludq ymm4,ymm4,ymm2
  404a53:	vpsrlq ymm5,ymm2,0x20
  404a58:	vpmuludq ymm5,ymm7,ymm5
  404a5c:	vpaddq ymm4,ymm5,ymm4
  404a60:	vpsllq ymm4,ymm4,0x20
  404a65:	vpmuludq ymm2,ymm7,ymm2
  404a69:	vpaddq ymm2,ymm2,ymm4
  404a6d:	vmovdqu ymm4,YMMWORD PTR [rcx+rbp*8+0x188]
  404a76:	vmovdqu ymm5,YMMWORD PTR [rcx+rbp*8+0x1a8]
  404a7f:	vmovdqu ymm6,YMMWORD PTR [rcx+rbp*8+0x1c8]
  404a88:	vmovdqu ymm7,YMMWORD PTR [rcx+rbp*8+0x1e8]
  404a91:	vpsrlq ymm8,ymm4,0x20
  404a96:	vpmuludq ymm8,ymm8,ymm0
  404a9a:	vpsrlq ymm9,ymm0,0x20
  404a9f:	vpmuludq ymm9,ymm4,ymm9
  404aa4:	vpaddq ymm8,ymm9,ymm8
  404aa9:	vpsllq ymm8,ymm8,0x20
  404aaf:	vpmuludq ymm0,ymm4,ymm0
  404ab3:	vpaddq ymm0,ymm0,ymm8
  404ab8:	vpsrlq ymm4,ymm5,0x20
  404abd:	vpmuludq ymm4,ymm4,ymm1
  404ac1:	vpsrlq ymm8,ymm1,0x20
  404ac6:	vpmuludq ymm8,ymm5,ymm8
  404acb:	vpaddq ymm4,ymm8,ymm4
  404acf:	vpsllq ymm4,ymm4,0x20
  404ad4:	vpmuludq ymm1,ymm5,ymm1
  404ad8:	vpaddq ymm1,ymm1,ymm4
  404adc:	vpsrlq ymm4,ymm6,0x20
  404ae1:	vpmuludq ymm4,ymm4,ymm3
  404ae5:	vpsrlq ymm5,ymm3,0x20
  404aea:	vpmuludq ymm5,ymm6,ymm5
  404aee:	vpaddq ymm4,ymm5,ymm4
  404af2:	vpsllq ymm4,ymm4,0x20
  404af7:	vpmuludq ymm3,ymm6,ymm3
  404afb:	vpaddq ymm3,ymm3,ymm4
  404aff:	vpsrlq ymm4,ymm7,0x20
  404b04:	vpmuludq ymm4,ymm4,ymm2
  404b08:	vpsrlq ymm5,ymm2,0x20
  404b0d:	vpmuludq ymm5,ymm7,ymm5
  404b11:	vpaddq ymm4,ymm5,ymm4
  404b15:	vpsllq ymm4,ymm4,0x20
  404b1a:	vpmuludq ymm2,ymm7,ymm2
  404b1e:	vpaddq ymm2,ymm2,ymm4
  404b22:	add    rbp,0x40
  404b26:	add    rdi,0x4
  404b2a:	jne    40485a <Mat_VarReadNextInfo@plt+0x253a>
  404b30:	test   rbx,rbx
  404b33:	je     404bfd <Mat_VarReadNextInfo@plt+0x28dd>
  404b39:	neg    rbx
  404b3c:	lea    rdi,[rbp*8+0x0]
  404b44:	or     rdi,0x8
  404b48:	vmovdqu ymm4,YMMWORD PTR [rcx+rdi*1]
  404b4d:	vmovdqu ymm5,YMMWORD PTR [rcx+rdi*1+0x20]
  404b53:	vmovdqu ymm6,YMMWORD PTR [rcx+rdi*1+0x40]
  404b59:	vmovdqu ymm7,YMMWORD PTR [rcx+rdi*1+0x60]
  404b5f:	vpsrlq ymm8,ymm0,0x20
  404b64:	vpmuludq ymm8,ymm4,ymm8
  404b69:	vpsrlq ymm9,ymm4,0x20
  404b6e:	vpmuludq ymm9,ymm9,ymm0
  404b72:	vpaddq ymm8,ymm8,ymm9
  404b77:	vpsllq ymm8,ymm8,0x20
  404b7d:	vpmuludq ymm0,ymm4,ymm0
  404b81:	vpaddq ymm0,ymm0,ymm8
  404b86:	vpsrlq ymm4,ymm1,0x20
  404b8b:	vpmuludq ymm4,ymm5,ymm4
  404b8f:	vpsrlq ymm8,ymm5,0x20
  404b94:	vpmuludq ymm8,ymm8,ymm1
  404b98:	vpaddq ymm4,ymm4,ymm8
  404b9d:	vpsllq ymm4,ymm4,0x20
  404ba2:	vpmuludq ymm1,ymm5,ymm1
  404ba6:	vpaddq ymm1,ymm1,ymm4
  404baa:	vpsrlq ymm4,ymm3,0x20
  404baf:	vpmuludq ymm4,ymm6,ymm4
  404bb3:	vpsrlq ymm5,ymm6,0x20
  404bb8:	vpmuludq ymm5,ymm5,ymm3
  404bbc:	vpaddq ymm4,ymm4,ymm5
  404bc0:	vpsllq ymm4,ymm4,0x20
  404bc5:	vpmuludq ymm3,ymm6,ymm3
  404bc9:	vpaddq ymm3,ymm3,ymm4
  404bcd:	vpsrlq ymm4,ymm2,0x20
  404bd2:	vpmuludq ymm4,ymm7,ymm4
  404bd6:	vpsrlq ymm5,ymm7,0x20
  404bdb:	vpmuludq ymm5,ymm5,ymm2
  404bdf:	vpaddq ymm4,ymm4,ymm5
  404be3:	vpsllq ymm4,ymm4,0x20
  404be8:	vpmuludq ymm2,ymm7,ymm2
  404bec:	vpaddq ymm2,ymm2,ymm4
  404bf0:	add    rbp,0x10
  404bf4:	inc    rbx
  404bf7:	jne    404b3c <Mat_VarReadNextInfo@plt+0x281c>
  404bfd:	vpsrlq ymm4,ymm1,0x20
  404c02:	vpmuludq ymm4,ymm4,ymm0
  404c06:	vpsrlq ymm5,ymm0,0x20
  404c0b:	vpmuludq ymm5,ymm1,ymm5
  404c0f:	vpaddq ymm4,ymm5,ymm4
  404c13:	vpsllq ymm4,ymm4,0x20
  404c18:	vpmuludq ymm0,ymm1,ymm0
  404c1c:	vpaddq ymm0,ymm0,ymm4
  404c20:	vpsrlq ymm1,ymm3,0x20
  404c25:	vpmuludq ymm1,ymm1,ymm0
  404c29:	vpsrlq ymm4,ymm0,0x20
  404c2e:	vpmuludq ymm4,ymm3,ymm4
  404c32:	vpaddq ymm1,ymm4,ymm1
  404c36:	vpsllq ymm1,ymm1,0x20
  404c3b:	vpmuludq ymm0,ymm3,ymm0
  404c3f:	vpaddq ymm0,ymm0,ymm1
  404c43:	vpsrlq ymm1,ymm2,0x20
  404c48:	vpmuludq ymm1,ymm1,ymm0
  404c4c:	vpsrlq ymm3,ymm0,0x20
  404c51:	vpmuludq ymm3,ymm2,ymm3
  404c55:	vpaddq ymm1,ymm3,ymm1
  404c59:	vpsllq ymm1,ymm1,0x20
  404c5e:	vpmuludq ymm0,ymm2,ymm0
  404c62:	vpaddq ymm0,ymm0,ymm1
  404c66:	vextracti128 xmm1,ymm0,0x1
  404c6c:	vpsrlq xmm2,xmm0,0x20
  404c71:	vpmuludq xmm2,xmm2,xmm1
  404c75:	vpsrlq xmm3,xmm1,0x20
  404c7a:	vpmuludq xmm3,xmm0,xmm3
  404c7e:	vpaddq xmm2,xmm3,xmm2
  404c82:	vpsllq xmm2,xmm2,0x20
  404c87:	vpmuludq xmm0,xmm0,xmm1
  404c8b:	vpaddq xmm0,xmm0,xmm2
  404c8f:	vpshufd xmm1,xmm0,0x4e
  404c94:	vpsrlq xmm2,xmm0,0x20
  404c99:	vpmuludq xmm2,xmm2,xmm1
  404c9d:	vpsrldq xmm3,xmm0,0xc
  404ca2:	vpmuludq xmm3,xmm0,xmm3
  404ca6:	vpaddq xmm2,xmm3,xmm2
  404caa:	vpsllq xmm2,xmm2,0x20
  404caf:	vpmuludq xmm0,xmm0,xmm1
  404cb3:	vpaddq xmm0,xmm0,xmm2
  404cb7:	vmovq  rbx,xmm0
  404cbc:	cmp    rsi,rdx
  404cbf:	jne    404cc7 <Mat_VarReadNextInfo@plt+0x29a7>
  404cc1:	mov    rbp,QWORD PTR [rsp]
  404cc5:	jmp    404cdd <Mat_VarReadNextInfo@plt+0x29bd>
  404cc7:	or     rdx,0x1
  404ccb:	mov    rbp,QWORD PTR [rsp]
  404ccf:	nop
  404cd0:	imul   rbx,QWORD PTR [rcx+rdx*8]
  404cd5:	inc    rdx
  404cd8:	cmp    rax,rdx
  404cdb:	jne    404cd0 <Mat_VarReadNextInfo@plt+0x29b0>
  404cdd:	lea    rdi,[rip+0x268f]        # 407373 <getopt_long_only@@Base+0x1163>
  404ce4:	xor    eax,eax
  404ce6:	vzeroupper 
  404ce9:	call   402120 <Mat_Message@plt>
  404cee:	lea    rdi,[rip+0x267c]        # 407371 <getopt_long_only@@Base+0x1161>
  404cf5:	xor    eax,eax
  404cf7:	call   402120 <Mat_Message@plt>
  404cfc:	mov    eax,DWORD PTR [rip+0x565e]        # 40a360 <optopt@@Base+0x38>
  404d02:	inc    eax
  404d04:	mov    DWORD PTR [rip+0x5656],eax        # 40a360 <optopt@@Base+0x38>
  404d0a:	mov    r14,QWORD PTR [rbp+0x38]
  404d0e:	test   r14,r14
  404d11:	je     404d37 <Mat_VarReadNextInfo@plt+0x2a17>
  404d13:	test   rbx,rbx
  404d16:	je     404d37 <Mat_VarReadNextInfo@plt+0x2a17>
  404d18:	xor    ebp,ebp
  404d1a:	nop    WORD PTR [rax+rax*1+0x0]
  404d20:	mov    rdi,QWORD PTR [r14+rbp*8]
  404d24:	call   403c40 <Mat_VarReadNextInfo@plt+0x1920>
  404d29:	inc    rbp
  404d2c:	cmp    rbx,rbp
  404d2f:	jne    404d20 <Mat_VarReadNextInfo@plt+0x2a00>
  404d31:	mov    eax,DWORD PTR [rip+0x5629]        # 40a360 <optopt@@Base+0x38>
  404d37:	dec    eax
  404d39:	mov    DWORD PTR [rip+0x5621],eax        # 40a360 <optopt@@Base+0x38>
  404d3f:	lea    rdi,[rip+0x2b44]        # 40788a <getopt_long_only@@Base+0x167a>
  404d46:	xor    eax,eax
  404d48:	add    rsp,0x28
  404d4c:	pop    rbx
  404d4d:	pop    r12
  404d4f:	pop    r13
  404d51:	pop    r14
  404d53:	pop    r15
  404d55:	pop    rbp
  404d56:	jmp    402120 <Mat_Message@plt>
  404d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  404d60:	push   rbp
  404d61:	mov    rbp,rsp
  404d64:	push   r15
  404d66:	push   r14
  404d68:	push   r12
  404d6a:	push   rbx
  404d6b:	and    rsp,0xffffffffffffffe0
  404d6f:	sub    rsp,0x40
  404d73:	mov    r15,rdi
  404d76:	vxorpd xmm0,xmm0,xmm0
  404d7a:	vmovapd YMMWORD PTR [rsp],ymm0
  404d7f:	cmp    BYTE PTR [rip+0x55de],0x0        # 40a364 <optopt@@Base+0x3c>
  404d86:	jne    404dbc <Mat_VarReadNextInfo@plt+0x2a9c>
  404d88:	lea    rdi,[rip+0x2661]        # 4073f0 <getopt_long_only@@Base+0x11e0>
  404d8f:	lea    rsi,[rip+0x2682]        # 407418 <getopt_long_only@@Base+0x1208>
  404d96:	lea    rdx,[rip+0x2680]        # 40741d <getopt_long_only@@Base+0x120d>
  404d9d:	lea    rcx,[rip+0x267e]        # 407422 <getopt_long_only@@Base+0x1212>
  404da4:	lea    r8,[rip+0x267d]        # 407428 <getopt_long_only@@Base+0x1218>
  404dab:	xor    eax,eax
  404dad:	vzeroupper 
  404db0:	call   402160 <printf@plt>
  404db5:	mov    BYTE PTR [rip+0x55a8],0x1        # 40a364 <optopt@@Base+0x3c>
  404dbc:	mov    rsi,QWORD PTR [r15+0x30]
  404dc0:	lea    rdi,[rip+0x2667]        # 40742e <getopt_long_only@@Base+0x121e>
  404dc7:	xor    eax,eax
  404dc9:	vzeroupper 
  404dcc:	call   402160 <printf@plt>
  404dd1:	cmp    DWORD PTR [r15+0x8],0x0
  404dd6:	jle    404e8b <Mat_VarReadNextInfo@plt+0x2b6b>
  404ddc:	mov    rax,QWORD PTR [r15+0x28]
  404de0:	mov    rsi,QWORD PTR [rax]
  404de3:	lea    rdi,[rip+0x264a]        # 407434 <getopt_long_only@@Base+0x1224>
  404dea:	xor    eax,eax
  404dec:	call   402160 <printf@plt>
  404df1:	cmp    DWORD PTR [r15+0x8],0x2
  404df6:	jl     404e78 <Mat_VarReadNextInfo@plt+0x2b58>
  404dfc:	mov    ebx,0x1
  404e01:	lea    r14,[rip+0x2631]        # 407439 <getopt_long_only@@Base+0x1229>
  404e08:	xor    r12d,r12d
  404e0b:	jmp    404e1c <Mat_VarReadNextInfo@plt+0x2afc>
  404e0d:	nop    DWORD PTR [rax]
  404e10:	inc    rbx
  404e13:	movsxd rax,DWORD PTR [r15+0x8]
  404e17:	cmp    rbx,rax
  404e1a:	jge    404e78 <Mat_VarReadNextInfo@plt+0x2b58>
  404e1c:	mov    rax,QWORD PTR [r15+0x28]
  404e20:	vmovsd xmm0,QWORD PTR [rax+rbx*8]
  404e25:	vunpcklps xmm0,xmm0,XMMWORD PTR [rip+0x21f3]        # 407020 <getopt_long_only@@Base+0xe10>
  404e2d:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x21fb]        # 407030 <getopt_long_only@@Base+0xe20>
  404e35:	vhaddpd xmm0,xmm0,xmm0
  404e39:	call   4021d0 <log10@plt>
  404e3e:	vroundsd xmm0,xmm0,xmm0,0xa
  404e44:	vaddsd xmm0,xmm0,QWORD PTR [rip+0x233c]        # 407188 <getopt_long_only@@Base+0xf78>
  404e4c:	vmovsd xmm1,QWORD PTR [rip+0x233c]        # 407190 <getopt_long_only@@Base+0xf80>
  404e54:	vucomisd xmm1,xmm0
  404e58:	jbe    404e10 <Mat_VarReadNextInfo@plt+0x2af0>
  404e5a:	movsxd r12,r12d
  404e5d:	lea    rdi,[rsp+r12*1]
  404e61:	mov    rax,QWORD PTR [r15+0x28]
  404e65:	mov    rdx,QWORD PTR [rax+rbx*8]
  404e69:	mov    rsi,r14
  404e6c:	xor    eax,eax
  404e6e:	call   4022c0 <sprintf@plt>
  404e73:	add    r12d,eax
  404e76:	jmp    404e10 <Mat_VarReadNextInfo@plt+0x2af0>
  404e78:	lea    rdi,[rip+0x25bf]        # 40743e <getopt_long_only@@Base+0x122e>
  404e7f:	mov    rsi,rsp
  404e82:	xor    eax,eax
  404e84:	call   402160 <printf@plt>
  404e89:	jmp    404e99 <Mat_VarReadNextInfo@plt+0x2b79>
  404e8b:	lea    rdi,[rip+0x25b2]        # 407444 <getopt_long_only@@Base+0x1234>
  404e92:	xor    eax,eax
  404e94:	call   402160 <printf@plt>
  404e99:	mov    rdi,r15
  404e9c:	call   402300 <Mat_VarGetSize@plt>
  404ea1:	cmp    BYTE PTR [rip+0x54b4],0x1        # 40a35c <optopt@@Base+0x34>
  404ea8:	jne    404edc <Mat_VarReadNextInfo@plt+0x2bbc>
  404eaa:	cmp    rax,0x40000001
  404eb0:	jb     404eef <Mat_VarReadNextInfo@plt+0x2bcf>
  404eb2:	vmovq  xmm0,rax
  404eb7:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x2161]        # 407020 <getopt_long_only@@Base+0xe10>
  404ebf:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x2169]        # 407030 <getopt_long_only@@Base+0xe20>
  404ec7:	vhaddpd xmm0,xmm0,xmm0
  404ecb:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x22d5]        # 4071a8 <getopt_long_only@@Base+0xf98>
  404ed3:	lea    rdi,[rip+0x257f]        # 407459 <getopt_long_only@@Base+0x1249>
  404eda:	jmp    404f51 <Mat_VarReadNextInfo@plt+0x2c31>
  404edc:	lea    rdi,[rip+0x2599]        # 40747c <getopt_long_only@@Base+0x126c>
  404ee3:	mov    rsi,rax
  404ee6:	xor    eax,eax
  404ee8:	call   402160 <printf@plt>
  404eed:	jmp    404f58 <Mat_VarReadNextInfo@plt+0x2c38>
  404eef:	cmp    rax,0x100001
  404ef5:	jb     404f21 <Mat_VarReadNextInfo@plt+0x2c01>
  404ef7:	vmovq  xmm0,rax
  404efc:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x211c]        # 407020 <getopt_long_only@@Base+0xe10>
  404f04:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x2124]        # 407030 <getopt_long_only@@Base+0xe20>
  404f0c:	vhaddpd xmm0,xmm0,xmm0
  404f10:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x2288]        # 4071a0 <getopt_long_only@@Base+0xf90>
  404f18:	lea    rdi,[rip+0x2543]        # 407462 <getopt_long_only@@Base+0x1252>
  404f1f:	jmp    404f51 <Mat_VarReadNextInfo@plt+0x2c31>
  404f21:	cmp    rax,0x401
  404f27:	jb     404f82 <Mat_VarReadNextInfo@plt+0x2c62>
  404f29:	vmovq  xmm0,rax
  404f2e:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x20ea]        # 407020 <getopt_long_only@@Base+0xe10>
  404f36:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x20f2]        # 407030 <getopt_long_only@@Base+0xe20>
  404f3e:	vhaddpd xmm0,xmm0,xmm0
  404f42:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x224e]        # 407198 <getopt_long_only@@Base+0xf88>
  404f4a:	lea    rdi,[rip+0x251a]        # 40746b <getopt_long_only@@Base+0x125b>
  404f51:	mov    al,0x1
  404f53:	call   402160 <printf@plt>
  404f58:	mov    eax,DWORD PTR [r15+0x14]
  404f5c:	lea    rcx,[rip+0x4dcd]        # 409d30 <getopt_long_only@@Base+0x3b20>
  404f63:	mov    rsi,QWORD PTR [rcx+rax*8]
  404f67:	lea    rdi,[rip+0x2516]        # 407484 <getopt_long_only@@Base+0x1274>
  404f6e:	xor    eax,eax
  404f70:	call   402160 <printf@plt>
  404f75:	lea    rsp,[rbp-0x20]
  404f79:	pop    rbx
  404f7a:	pop    r12
  404f7c:	pop    r14
  404f7e:	pop    r15
  404f80:	pop    rbp
  404f81:	ret    
  404f82:	lea    rdi,[rip+0x24eb]        # 407474 <getopt_long_only@@Base+0x1264>
  404f89:	jmp    404ee3 <Mat_VarReadNextInfo@plt+0x2bc3>
  404f8e:	xchg   ax,ax
  404f90:	push   r14
  404f92:	push   rbx
  404f93:	push   rax
  404f94:	mov    r14,rdi
  404f97:	mov    esi,0x28
  404f9c:	call   402150 <strchr@plt>
  404fa1:	mov    rbx,rax
  404fa4:	mov    rdi,r14
  404fa7:	mov    esi,0x29
  404fac:	call   402150 <strchr@plt>
  404fb1:	test   rax,rax
  404fb4:	je     404fc7 <Mat_VarReadNextInfo@plt+0x2ca7>
  404fb6:	test   rbx,rbx
  404fb9:	je     404fc4 <Mat_VarReadNextInfo@plt+0x2ca4>
  404fbb:	cmp    rax,rbx
  404fbe:	cmovb  rbx,rax
  404fc2:	jmp    404fc7 <Mat_VarReadNextInfo@plt+0x2ca7>
  404fc4:	mov    rbx,rax
  404fc7:	mov    rdi,r14
  404fca:	mov    esi,0x7b
  404fcf:	call   402150 <strchr@plt>
  404fd4:	test   rax,rax
  404fd7:	je     404fea <Mat_VarReadNextInfo@plt+0x2cca>
  404fd9:	test   rbx,rbx
  404fdc:	je     404fe7 <Mat_VarReadNextInfo@plt+0x2cc7>
  404fde:	cmp    rax,rbx
  404fe1:	cmovb  rbx,rax
  404fe5:	jmp    404fea <Mat_VarReadNextInfo@plt+0x2cca>
  404fe7:	mov    rbx,rax
  404fea:	mov    rdi,r14
  404fed:	mov    esi,0x7d
  404ff2:	call   402150 <strchr@plt>
  404ff7:	test   rax,rax
  404ffa:	je     40500d <Mat_VarReadNextInfo@plt+0x2ced>
  404ffc:	test   rbx,rbx
  404fff:	je     40500a <Mat_VarReadNextInfo@plt+0x2cea>
  405001:	cmp    rax,rbx
  405004:	cmovb  rbx,rax
  405008:	jmp    40500d <Mat_VarReadNextInfo@plt+0x2ced>
  40500a:	mov    rbx,rax
  40500d:	mov    rdi,r14
  405010:	mov    esi,0x2e
  405015:	call   402150 <strchr@plt>
  40501a:	test   rax,rax
  40501d:	je     405030 <Mat_VarReadNextInfo@plt+0x2d10>
  40501f:	test   rbx,rbx
  405022:	je     40502d <Mat_VarReadNextInfo@plt+0x2d0d>
  405024:	cmp    rax,rbx
  405027:	cmovb  rbx,rax
  40502b:	jmp    405030 <Mat_VarReadNextInfo@plt+0x2d10>
  40502d:	mov    rbx,rax
  405030:	test   rbx,rbx
  405033:	cmovne r14,rbx
  405037:	mov    rax,r14
  40503a:	add    rsp,0x8
  40503e:	pop    rbx
  40503f:	pop    r14
  405041:	ret    
  405042:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40504c:	nop    DWORD PTR [rax+0x0]
  405050:	dec    edi
  405052:	cmp    edi,0xc
  405055:	ja     4050d5 <Mat_VarReadNextInfo@plt+0x2db5>
  405057:	lea    rax,[rip+0x20a2]        # 407100 <getopt_long_only@@Base+0xef0>
  40505e:	movsxd rcx,DWORD PTR [rax+rdi*4]
  405062:	add    rcx,rax
  405065:	jmp    rcx
  405067:	movsx  esi,BYTE PTR [rsi]
  40506a:	lea    rdi,[rip+0x233c]        # 4073ad <getopt_long_only@@Base+0x119d>
  405071:	xor    eax,eax
  405073:	jmp    402160 <printf@plt>
  405078:	movzx  esi,BYTE PTR [rsi]
  40507b:	lea    rdi,[rip+0x2330]        # 4073b2 <getopt_long_only@@Base+0x11a2>
  405082:	xor    eax,eax
  405084:	jmp    402160 <printf@plt>
  405089:	movsx  esi,WORD PTR [rsi]
  40508c:	lea    rdi,[rip+0x2312]        # 4073a5 <getopt_long_only@@Base+0x1195>
  405093:	xor    eax,eax
  405095:	jmp    402160 <printf@plt>
  40509a:	movzx  esi,WORD PTR [rsi]
  40509d:	lea    rdi,[rip+0x2305]        # 4073a9 <getopt_long_only@@Base+0x1199>
  4050a4:	xor    eax,eax
  4050a6:	jmp    402160 <printf@plt>
  4050ab:	mov    esi,DWORD PTR [rsi]
  4050ad:	lea    rdi,[rip+0x2299]        # 40734d <getopt_long_only@@Base+0x113d>
  4050b4:	xor    eax,eax
  4050b6:	jmp    402160 <printf@plt>
  4050bb:	mov    esi,DWORD PTR [rsi]
  4050bd:	lea    rdi,[rip+0x22de]        # 4073a2 <getopt_long_only@@Base+0x1192>
  4050c4:	xor    eax,eax
  4050c6:	jmp    402160 <printf@plt>
  4050cb:	vmovss xmm0,DWORD PTR [rsi]
  4050cf:	vcvtss2sd xmm0,xmm0,xmm0
  4050d3:	jmp    4050da <Mat_VarReadNextInfo@plt+0x2dba>
  4050d5:	ret    
  4050d6:	vmovsd xmm0,QWORD PTR [rsi]
  4050da:	lea    rdi,[rip+0x22b6]        # 407397 <getopt_long_only@@Base+0x1187>
  4050e1:	mov    al,0x1
  4050e3:	jmp    402160 <printf@plt>
  4050e8:	mov    rsi,QWORD PTR [rsi]
  4050eb:	lea    rdi,[rip+0x22a8]        # 40739a <getopt_long_only@@Base+0x118a>
  4050f2:	xor    eax,eax
  4050f4:	jmp    402160 <printf@plt>
  4050f9:	mov    rsi,QWORD PTR [rsi]
  4050fc:	lea    rdi,[rip+0x229b]        # 40739e <getopt_long_only@@Base+0x118e>
  405103:	xor    eax,eax
  405105:	jmp    402160 <printf@plt>
  40510a:	nop    WORD PTR [rax+rax*1+0x0]
  405110:	push   rbp
  405111:	push   r15
  405113:	push   r14
  405115:	push   r13
  405117:	push   r12
  405119:	push   rbx
  40511a:	sub    rsp,0x18
  40511e:	mov    QWORD PTR [rsp],r8
  405122:	mov    QWORD PTR [rsp+0x10],rcx
  405127:	mov    QWORD PTR [rsp+0x8],rdx
  40512c:	mov    r13,rsi
  40512f:	mov    rbp,rdi
  405132:	lea    r14,[rdi+0x1]
  405136:	xor    r12d,r12d
  405139:	xor    r15d,r15d
  40513c:	jmp    40515b <Mat_VarReadNextInfo@plt+0x2e3b>
  40513e:	movsxd rcx,r15d
  405141:	mov    rdx,QWORD PTR [rsp]
  405145:	mov    DWORD PTR [rdx+rcx*4],eax
  405148:	inc    r12d
  40514b:	add    rbx,0x2
  40514f:	mov    r14,rbx
  405152:	cmp    r13,rbp
  405155:	je     405373 <Mat_VarReadNextInfo@plt+0x3053>
  40515b:	mov    rbx,rbp
  40515e:	inc    rbp
  405161:	movzx  eax,BYTE PTR [rbx+0x1]
  405165:	cmp    al,0x39
  405167:	jg     4051c0 <Mat_VarReadNextInfo@plt+0x2ea0>
  405169:	cmp    al,0x29
  40516b:	je     4051c8 <Mat_VarReadNextInfo@plt+0x2ea8>
  40516d:	cmp    al,0x2c
  40516f:	jne    405152 <Mat_VarReadNextInfo@plt+0x2e32>
  405171:	test   r12d,r12d
  405174:	je     4052e0 <Mat_VarReadNextInfo@plt+0x2fc0>
  40517a:	cmp    r12d,0x1
  40517e:	je     40518a <Mat_VarReadNextInfo@plt+0x2e6a>
  405180:	cmp    r12d,0x2
  405184:	jne    405364 <Mat_VarReadNextInfo@plt+0x3044>
  40518a:	mov    BYTE PTR [rbx+0x1],0x0
  40518e:	mov    rdi,r14
  405191:	lea    rsi,[rip+0x272d]        # 4078c5 <getopt_long_only@@Base+0x16b5>
  405198:	call   4021c0 <strcmp@plt>
  40519d:	test   eax,eax
  40519f:	je     405323 <Mat_VarReadNextInfo@plt+0x3003>
  4051a5:	mov    rdi,r14
  4051a8:	xor    esi,esi
  4051aa:	mov    edx,0xa
  4051af:	call   4021f0 <strtol@plt>
  4051b4:	movsxd rcx,r15d
  4051b7:	jmp    40535d <Mat_VarReadNextInfo@plt+0x303d>
  4051bc:	nop    DWORD PTR [rax+0x0]
  4051c0:	cmp    al,0x3a
  4051c2:	je     405230 <Mat_VarReadNextInfo@plt+0x2f10>
  4051c4:	cmp    al,0x7d
  4051c6:	jne    405152 <Mat_VarReadNextInfo@plt+0x2e32>
  4051c8:	mov    BYTE PTR [rbx+0x1],0x0
  4051cc:	mov    rdi,r14
  4051cf:	lea    rsi,[rip+0x26ef]        # 4078c5 <getopt_long_only@@Base+0x16b5>
  4051d6:	call   4021c0 <strcmp@plt>
  4051db:	test   eax,eax
  4051dd:	je     405282 <Mat_VarReadNextInfo@plt+0x2f62>
  4051e3:	mov    rdi,r14
  4051e6:	xor    esi,esi
  4051e8:	mov    edx,0xa
  4051ed:	call   4021f0 <strtol@plt>
  4051f2:	cmp    r12d,0x2
  4051f6:	je     40513e <Mat_VarReadNextInfo@plt+0x2e1e>
  4051fc:	cmp    r12d,0x1
  405200:	je     40513e <Mat_VarReadNextInfo@plt+0x2e1e>
  405206:	test   r12d,r12d
  405209:	jne    405328 <Mat_VarReadNextInfo@plt+0x3008>
  40520f:	lea    ecx,[rax-0x1]
  405212:	movsxd rdx,r15d
  405215:	mov    rsi,QWORD PTR [rsp+0x8]
  40521a:	mov    DWORD PTR [rsi+rdx*4],ecx
  40521d:	mov    rcx,QWORD PTR [rsp]
  405221:	mov    DWORD PTR [rcx+rdx*4],eax
  405224:	jmp    405148 <Mat_VarReadNextInfo@plt+0x2e28>
  405229:	nop    DWORD PTR [rax+0x0]
  405230:	mov    BYTE PTR [rbx+0x1],0x0
  405234:	mov    rdi,r14
  405237:	lea    rsi,[rip+0x2687]        # 4078c5 <getopt_long_only@@Base+0x16b5>
  40523e:	call   4021c0 <strcmp@plt>
  405243:	test   eax,eax
  405245:	je     4052a8 <Mat_VarReadNextInfo@plt+0x2f88>
  405247:	mov    rdi,r14
  40524a:	xor    esi,esi
  40524c:	mov    edx,0xa
  405251:	call   4021f0 <strtol@plt>
  405256:	cmp    r12d,0x2
  40525a:	je     40513e <Mat_VarReadNextInfo@plt+0x2e1e>
  405260:	cmp    r12d,0x1
  405264:	je     405316 <Mat_VarReadNextInfo@plt+0x2ff6>
  40526a:	test   r12d,r12d
  40526d:	jne    405328 <Mat_VarReadNextInfo@plt+0x3008>
  405273:	dec    eax
  405275:	movsxd rcx,r15d
  405278:	mov    rdx,QWORD PTR [rsp+0x8]
  40527d:	jmp    405145 <Mat_VarReadNextInfo@plt+0x2e25>
  405282:	cmp    r12d,0x2
  405286:	je     4052cd <Mat_VarReadNextInfo@plt+0x2fad>
  405288:	cmp    r12d,0x1
  40528c:	je     4052cd <Mat_VarReadNextInfo@plt+0x2fad>
  40528e:	test   r12d,r12d
  405291:	jne    405328 <Mat_VarReadNextInfo@plt+0x3008>
  405297:	movsxd rax,r15d
  40529a:	mov    rcx,QWORD PTR [rsp+0x8]
  40529f:	mov    DWORD PTR [rcx+rax*4],0xffffffff
  4052a6:	jmp    4052d0 <Mat_VarReadNextInfo@plt+0x2fb0>
  4052a8:	cmp    r12d,0x2
  4052ac:	je     4052cd <Mat_VarReadNextInfo@plt+0x2fad>
  4052ae:	cmp    r12d,0x1
  4052b2:	je     4052cd <Mat_VarReadNextInfo@plt+0x2fad>
  4052b4:	test   r12d,r12d
  4052b7:	jne    405328 <Mat_VarReadNextInfo@plt+0x3008>
  4052b9:	movsxd rax,r15d
  4052bc:	mov    rcx,QWORD PTR [rsp+0x8]
  4052c1:	mov    DWORD PTR [rcx+rax*4],0xffffffff
  4052c8:	jmp    405148 <Mat_VarReadNextInfo@plt+0x2e28>
  4052cd:	movsxd rax,r15d
  4052d0:	mov    rcx,QWORD PTR [rsp]
  4052d4:	mov    DWORD PTR [rcx+rax*4],0xffffffff
  4052db:	jmp    405148 <Mat_VarReadNextInfo@plt+0x2e28>
  4052e0:	mov    BYTE PTR [rbx+0x1],0x0
  4052e4:	mov    rdi,r14
  4052e7:	lea    rsi,[rip+0x25d7]        # 4078c5 <getopt_long_only@@Base+0x16b5>
  4052ee:	call   4021c0 <strcmp@plt>
  4052f3:	test   eax,eax
  4052f5:	je     405349 <Mat_VarReadNextInfo@plt+0x3029>
  4052f7:	mov    rdi,r14
  4052fa:	xor    esi,esi
  4052fc:	mov    edx,0xa
  405301:	call   4021f0 <strtol@plt>
  405306:	lea    edx,[rax-0x1]
  405309:	movsxd rcx,r15d
  40530c:	mov    rsi,QWORD PTR [rsp+0x8]
  405311:	mov    DWORD PTR [rsi+rcx*4],edx
  405314:	jmp    40535d <Mat_VarReadNextInfo@plt+0x303d>
  405316:	movsxd rcx,r15d
  405319:	mov    rdx,QWORD PTR [rsp+0x10]
  40531e:	jmp    405145 <Mat_VarReadNextInfo@plt+0x2e25>
  405323:	movsxd rcx,r15d
  405326:	jmp    405358 <Mat_VarReadNextInfo@plt+0x3038>
  405328:	mov    rax,QWORD PTR [rip+0x4cc9]        # 409ff8 <getopt_long_only@@Base+0x3de8>
  40532f:	mov    rdi,QWORD PTR [rax]
  405332:	lea    edx,[r15+0x1]
  405336:	lea    rsi,[rip+0x258c]        # 4078c9 <getopt_long_only@@Base+0x16b9>
  40533d:	xor    eax,eax
  40533f:	call   4021e0 <fprintf@plt>
  405344:	jmp    405148 <Mat_VarReadNextInfo@plt+0x2e28>
  405349:	movsxd rcx,r15d
  40534c:	mov    rax,QWORD PTR [rsp+0x8]
  405351:	mov    DWORD PTR [rax+rcx*4],0xffffffff
  405358:	mov    eax,0xffffffff
  40535d:	mov    rdx,QWORD PTR [rsp]
  405361:	mov    DWORD PTR [rdx+rcx*4],eax
  405364:	inc    r15d
  405367:	add    rbx,0x2
  40536b:	xor    r12d,r12d
  40536e:	jmp    40514f <Mat_VarReadNextInfo@plt+0x2e2f>
  405373:	add    rsp,0x18
  405377:	pop    rbx
  405378:	pop    r12
  40537a:	pop    r13
  40537c:	pop    r14
  40537e:	pop    r15
  405380:	pop    rbp
  405381:	ret    
  405382:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40538c:	nop    DWORD PTR [rax+0x0]
  405390:	push   rbp
  405391:	push   r14
  405393:	push   rbx
  405394:	mov    r9d,DWORD PTR [r8+0x8]
  405398:	xor    r14d,r14d
  40539b:	cmp    edi,0x1
  40539e:	je     4053b0 <Mat_VarReadNextInfo@plt+0x3090>
  4053a0:	cmp    r9d,edi
  4053a3:	je     4053b0 <Mat_VarReadNextInfo@plt+0x3090>
  4053a5:	mov    eax,r14d
  4053a8:	pop    rbx
  4053a9:	pop    r14
  4053ab:	pop    rbp
  4053ac:	vzeroupper 
  4053af:	ret    
  4053b0:	cmp    edi,0x1
  4053b3:	jne    4053d8 <Mat_VarReadNextInfo@plt+0x30b8>
  4053b5:	test   r9d,r9d
  4053b8:	jle    4054ff <Mat_VarReadNextInfo@plt+0x31df>
  4053be:	mov    rdi,QWORD PTR [r8+0x28]
  4053c2:	cmp    r9d,0x10
  4053c6:	jae    405514 <Mat_VarReadNextInfo@plt+0x31f4>
  4053cc:	mov    ebp,0x1
  4053d1:	xor    eax,eax
  4053d3:	jmp    405640 <Mat_VarReadNextInfo@plt+0x3320>
  4053d8:	test   edi,edi
  4053da:	jle    405509 <Mat_VarReadNextInfo@plt+0x31e9>
  4053e0:	mov    r9d,edi
  4053e3:	mov    r14d,0x1
  4053e9:	xor    eax,eax
  4053eb:	vmovdqa xmm0,XMMWORD PTR [rip+0x1c2d]        # 407020 <getopt_long_only@@Base+0xe10>
  4053f3:	vmovapd xmm1,XMMWORD PTR [rip+0x1c35]        # 407030 <getopt_long_only@@Base+0xe20>
  4053fb:	jmp    40541d <Mat_VarReadNextInfo@plt+0x30fd>
  4053fd:	mov    DWORD PTR [rcx+rax*4],0x1
  405404:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40540e:	xchg   ax,ax
  405410:	imul   r14d,DWORD PTR [rcx+rax*4]
  405415:	inc    rax
  405418:	cmp    r9,rax
  40541b:	je     4053a5 <Mat_VarReadNextInfo@plt+0x3085>
  40541d:	mov    ebp,DWORD PTR [rdx+rax*4]
  405420:	test   ebp,ebp
  405422:	jle    4056b8 <Mat_VarReadNextInfo@plt+0x3398>
  405428:	movsxd rbx,DWORD PTR [rcx+rax*4]
  40542c:	cmp    rbx,0xffffffffffffffff
  405430:	je     405480 <Mat_VarReadNextInfo@plt+0x3160>
  405432:	test   ebx,ebx
  405434:	js     405486 <Mat_VarReadNextInfo@plt+0x3166>
  405436:	mov    rdi,QWORD PTR [r8+0x28]
  40543a:	mov    rdi,QWORD PTR [rdi+rax*8]
  40543e:	cmp    rdi,rbx
  405441:	jb     405744 <Mat_VarReadNextInfo@plt+0x3424>
  405447:	movsxd r10,DWORD PTR [rsi+rax*4]
  40544b:	cmp    rdi,r10
  40544e:	jbe    4056e0 <Mat_VarReadNextInfo@plt+0x33c0>
  405454:	test   ebx,ebx
  405456:	jle    405461 <Mat_VarReadNextInfo@plt+0x3141>
  405458:	cmp    r10d,ebx
  40545b:	jg     4056e0 <Mat_VarReadNextInfo@plt+0x33c0>
  405461:	lea    edi,[r10+0x1]
  405465:	cmp    ebx,edi
  405467:	je     4053fd <Mat_VarReadNextInfo@plt+0x30dd>
  405469:	test   ebx,ebx
  40546b:	jle    405410 <Mat_VarReadNextInfo@plt+0x30f0>
  40546d:	not    r10d
  405470:	add    r10d,ebx
  405473:	vcvtsi2sd xmm2,xmm4,r10d
  405478:	jmp    4054cb <Mat_VarReadNextInfo@plt+0x31ab>
  40547a:	nop    WORD PTR [rax+rax*1+0x0]
  405480:	cmp    DWORD PTR [rsi+rax*4],0xffffffff
  405484:	je     4054e7 <Mat_VarReadNextInfo@plt+0x31c7>
  405486:	mov    rdi,QWORD PTR [r8+0x28]
  40548a:	mov    rdi,QWORD PTR [rdi+rax*8]
  40548e:	cmp    ebp,0x1
  405491:	jne    4054b0 <Mat_VarReadNextInfo@plt+0x3190>
  405493:	mov    DWORD PTR [rcx+rax*4],edi
  405496:	cmp    DWORD PTR [rsi+rax*4],0x0
  40549a:	jns    405410 <Mat_VarReadNextInfo@plt+0x30f0>
  4054a0:	mov    DWORD PTR [rsi+rax*4],0x0
  4054a7:	jmp    405410 <Mat_VarReadNextInfo@plt+0x30f0>
  4054ac:	nop    DWORD PTR [rax+0x0]
  4054b0:	movsxd rbx,DWORD PTR [rsi+rax*4]
  4054b4:	not    rbx
  4054b7:	add    rdi,rbx
  4054ba:	vmovq  xmm2,rdi
  4054bf:	vpunpckldq xmm2,xmm2,xmm0
  4054c3:	vsubpd xmm2,xmm2,xmm1
  4054c7:	vhaddpd xmm2,xmm2,xmm2
  4054cb:	vcvtsi2sd xmm3,xmm4,ebp
  4054cf:	vdivsd xmm2,xmm2,xmm3
  4054d3:	vroundsd xmm2,xmm2,xmm2,0x9
  4054d9:	vcvttsd2si edi,xmm2
  4054dd:	inc    edi
  4054df:	mov    DWORD PTR [rcx+rax*4],edi
  4054e2:	jmp    405410 <Mat_VarReadNextInfo@plt+0x30f0>
  4054e7:	mov    DWORD PTR [rcx+rax*4],0x1
  4054ee:	mov    rdi,QWORD PTR [r8+0x28]
  4054f2:	mov    edi,DWORD PTR [rdi+rax*8]
  4054f5:	dec    edi
  4054f7:	mov    DWORD PTR [rsi+rax*4],edi
  4054fa:	jmp    405410 <Mat_VarReadNextInfo@plt+0x30f0>
  4054ff:	mov    ebp,0x1
  405504:	jmp    40564c <Mat_VarReadNextInfo@plt+0x332c>
  405509:	mov    r14d,0x1
  40550f:	jmp    4053a5 <Mat_VarReadNextInfo@plt+0x3085>
  405514:	mov    eax,r9d
  405517:	and    eax,0xfffffff0
  40551a:	lea    rbx,[rax-0x10]
  40551e:	mov    rbp,rbx
  405521:	shr    rbp,0x4
  405525:	inc    rbp
  405528:	mov    r8d,ebp
  40552b:	and    r8d,0x1
  40552f:	test   rbx,rbx
  405532:	je     4056f5 <Mat_VarReadNextInfo@plt+0x33d5>
  405538:	mov    rbx,r8
  40553b:	sub    rbx,rbp
  40553e:	vpbroadcastd xmm0,DWORD PTR [rip+0x1af9]        # 407040 <getopt_long_only@@Base+0xe30>
  405547:	xor    ebp,ebp
  405549:	vmovdqa ymm4,YMMWORD PTR [rip+0x1c0f]        # 407160 <getopt_long_only@@Base+0xf50>
  405551:	vmovdqa xmm1,xmm0
  405555:	vmovdqa xmm2,xmm0
  405559:	vmovdqa xmm3,xmm0
  40555d:	nop    DWORD PTR [rax]
  405560:	vpermd ymm5,ymm4,YMMWORD PTR [rdi+rbp*8]
  405566:	vpermd ymm6,ymm4,YMMWORD PTR [rdi+rbp*8+0x20]
  40556d:	vpermd ymm7,ymm4,YMMWORD PTR [rdi+rbp*8+0x40]
  405574:	vpermd ymm8,ymm4,YMMWORD PTR [rdi+rbp*8+0x60]
  40557b:	vpmulld xmm0,xmm0,xmm5
  405580:	vpmulld xmm1,xmm1,xmm6
  405585:	vpmulld xmm2,xmm2,xmm7
  40558a:	vpmulld xmm3,xmm3,xmm8
  40558f:	vpermd ymm5,ymm4,YMMWORD PTR [rdi+rbp*8+0x80]
  405599:	vpermd ymm6,ymm4,YMMWORD PTR [rdi+rbp*8+0xa0]
  4055a3:	vpermd ymm7,ymm4,YMMWORD PTR [rdi+rbp*8+0xc0]
  4055ad:	vpermd ymm8,ymm4,YMMWORD PTR [rdi+rbp*8+0xe0]
  4055b7:	vpmulld xmm0,xmm0,xmm5
  4055bc:	vpmulld xmm1,xmm1,xmm6
  4055c1:	vpmulld xmm2,xmm2,xmm7
  4055c6:	vpmulld xmm3,xmm3,xmm8
  4055cb:	add    rbp,0x20
  4055cf:	add    rbx,0x2
  4055d3:	jne    405560 <Mat_VarReadNextInfo@plt+0x3240>
  4055d5:	test   r8,r8
  4055d8:	je     405611 <Mat_VarReadNextInfo@plt+0x32f1>
  4055da:	vmovdqa ymm4,YMMWORD PTR [rip+0x1b7e]        # 407160 <getopt_long_only@@Base+0xf50>
  4055e2:	vpermd ymm5,ymm4,YMMWORD PTR [rdi+rbp*8+0x60]
  4055e9:	vpmulld xmm3,xmm3,xmm5
  4055ee:	vpermd ymm5,ymm4,YMMWORD PTR [rdi+rbp*8+0x40]
  4055f5:	vpmulld xmm2,xmm2,xmm5
  4055fa:	vpermd ymm5,ymm4,YMMWORD PTR [rdi+rbp*8+0x20]
  405601:	vpmulld xmm1,xmm1,xmm5
  405606:	vpermd ymm4,ymm4,YMMWORD PTR [rdi+rbp*8]
  40560c:	vpmulld xmm0,xmm0,xmm4
  405611:	vpmulld xmm1,xmm1,xmm3
  405616:	vpmulld xmm0,xmm0,xmm2
  40561b:	vpmulld xmm0,xmm0,xmm1
  405620:	vpshufd xmm1,xmm0,0x4e
  405625:	vpmulld xmm0,xmm0,xmm1
  40562a:	vpshufd xmm1,xmm0,0xe5
  40562f:	vpmulld xmm0,xmm0,xmm1
  405634:	vmovd  ebp,xmm0
  405638:	cmp    rax,r9
  40563b:	je     40564c <Mat_VarReadNextInfo@plt+0x332c>
  40563d:	nop    DWORD PTR [rax]
  405640:	imul   ebp,DWORD PTR [rdi+rax*8]
  405644:	inc    rax
  405647:	cmp    r9,rax
  40564a:	jne    405640 <Mat_VarReadNextInfo@plt+0x3320>
  40564c:	mov    eax,DWORD PTR [rdx]
  40564e:	test   eax,eax
  405650:	jle    40578e <Mat_VarReadNextInfo@plt+0x346e>
  405656:	mov    edi,DWORD PTR [rcx]
  405658:	cmp    edi,ebp
  40565a:	jg     4057a6 <Mat_VarReadNextInfo@plt+0x3486>
  405660:	mov    ebx,DWORD PTR [rsi]
  405662:	cmp    ebx,ebp
  405664:	jge    40572c <Mat_VarReadNextInfo@plt+0x340c>
  40566a:	test   edi,edi
  40566c:	jle    405676 <Mat_VarReadNextInfo@plt+0x3356>
  40566e:	cmp    ebx,edi
  405670:	jg     40572c <Mat_VarReadNextInfo@plt+0x340c>
  405676:	cmp    edi,0xffffffff
  405679:	je     405690 <Mat_VarReadNextInfo@plt+0x3370>
  40567b:	test   edi,edi
  40567d:	jle    4056b0 <Mat_VarReadNextInfo@plt+0x3390>
  40567f:	not    ebx
  405681:	add    edi,ebx
  405683:	vcvtsi2sd xmm0,xmm9,edi
  405687:	vcvtsi2sd xmm1,xmm9,eax
  40568b:	jmp    405774 <Mat_VarReadNextInfo@plt+0x3454>
  405690:	cmp    ebx,0xffffffff
  405693:	je     40571a <Mat_VarReadNextInfo@plt+0x33fa>
  405699:	mov    DWORD PTR [rcx],ebp
  40569b:	mov    edi,DWORD PTR [rsi]
  40569d:	cmp    eax,0x1
  4056a0:	jne    405768 <Mat_VarReadNextInfo@plt+0x3448>
  4056a6:	test   edi,edi
  4056a8:	jns    4056b0 <Mat_VarReadNextInfo@plt+0x3390>
  4056aa:	mov    DWORD PTR [rsi],0x0
  4056b0:	mov    r14d,DWORD PTR [rcx]
  4056b3:	jmp    4053a5 <Mat_VarReadNextInfo@plt+0x3085>
  4056b8:	mov    rax,QWORD PTR [rip+0x4939]        # 409ff8 <getopt_long_only@@Base+0x3de8>
  4056bf:	mov    rcx,QWORD PTR [rax]
  4056c2:	lea    rdi,[rip+0x221a]        # 4078e3 <getopt_long_only@@Base+0x16d3>
  4056c9:	mov    esi,0x17
  4056ce:	mov    edx,0x1
  4056d3:	call   4022f0 <fwrite@plt>
  4056d8:	xor    r14d,r14d
  4056db:	jmp    4053a5 <Mat_VarReadNextInfo@plt+0x3085>
  4056e0:	mov    rcx,QWORD PTR [rip+0x4911]        # 409ff8 <getopt_long_only@@Base+0x3de8>
  4056e7:	mov    rdi,QWORD PTR [rcx]
  4056ea:	inc    eax
  4056ec:	lea    rsi,[rip+0x224f]        # 407942 <getopt_long_only@@Base+0x1732>
  4056f3:	jmp    405757 <Mat_VarReadNextInfo@plt+0x3437>
  4056f5:	vpbroadcastd xmm0,DWORD PTR [rip+0x1942]        # 407040 <getopt_long_only@@Base+0xe30>
  4056fe:	xor    ebp,ebp
  405700:	vmovdqa xmm1,xmm0
  405704:	vmovdqa xmm2,xmm0
  405708:	vmovdqa xmm3,xmm0
  40570c:	test   r8,r8
  40570f:	jne    4055da <Mat_VarReadNextInfo@plt+0x32ba>
  405715:	jmp    405611 <Mat_VarReadNextInfo@plt+0x32f1>
  40571a:	mov    DWORD PTR [rcx],0x1
  405720:	dec    ebp
  405722:	mov    DWORD PTR [rsi],ebp
  405724:	mov    r14d,DWORD PTR [rcx]
  405727:	jmp    4053a5 <Mat_VarReadNextInfo@plt+0x3085>
  40572c:	mov    rax,QWORD PTR [rip+0x48c5]        # 409ff8 <getopt_long_only@@Base+0x3de8>
  405733:	mov    rcx,QWORD PTR [rax]
  405736:	lea    rdi,[rip+0x21d0]        # 40790d <getopt_long_only@@Base+0x16fd>
  40573d:	mov    esi,0x12
  405742:	jmp    4057bc <Mat_VarReadNextInfo@plt+0x349c>
  405744:	mov    rcx,QWORD PTR [rip+0x48ad]        # 409ff8 <getopt_long_only@@Base+0x3de8>
  40574b:	mov    rdi,QWORD PTR [rcx]
  40574e:	inc    eax
  405750:	lea    rsi,[rip+0x21c9]        # 407920 <getopt_long_only@@Base+0x1710>
  405757:	xor    r14d,r14d
  40575a:	mov    edx,eax
  40575c:	xor    eax,eax
  40575e:	call   4021e0 <fprintf@plt>
  405763:	jmp    4053a5 <Mat_VarReadNextInfo@plt+0x3085>
  405768:	not    edi
  40576a:	add    ebp,edi
  40576c:	vcvtsi2sd xmm0,xmm9,ebp
  405770:	vcvtsi2sd xmm1,xmm9,DWORD PTR [rdx]
  405774:	vdivsd xmm0,xmm0,xmm1
  405778:	vroundsd xmm0,xmm0,xmm0,0x9
  40577e:	vcvttsd2si eax,xmm0
  405782:	inc    eax
  405784:	mov    DWORD PTR [rcx],eax
  405786:	mov    r14d,DWORD PTR [rcx]
  405789:	jmp    4053a5 <Mat_VarReadNextInfo@plt+0x3085>
  40578e:	mov    rax,QWORD PTR [rip+0x4863]        # 409ff8 <getopt_long_only@@Base+0x3de8>
  405795:	mov    rcx,QWORD PTR [rax]
  405798:	lea    rdi,[rip+0x2144]        # 4078e3 <getopt_long_only@@Base+0x16d3>
  40579f:	mov    esi,0x17
  4057a4:	jmp    4057bc <Mat_VarReadNextInfo@plt+0x349c>
  4057a6:	mov    rax,QWORD PTR [rip+0x484b]        # 409ff8 <getopt_long_only@@Base+0x3de8>
  4057ad:	mov    rcx,QWORD PTR [rax]
  4057b0:	lea    rdi,[rip+0x2144]        # 4078fb <getopt_long_only@@Base+0x16eb>
  4057b7:	mov    esi,0x11
  4057bc:	mov    edx,0x1
  4057c1:	vzeroupper 
  4057c4:	call   4022f0 <fwrite@plt>
  4057c9:	jmp    4053a5 <Mat_VarReadNextInfo@plt+0x3085>
  4057ce:	xchg   ax,ax

00000000004057d0 <getopt@@Base>:
  4057d0:	xor    ecx,ecx
  4057d2:	xor    r8d,r8d
  4057d5:	xor    r9d,r9d
  4057d8:	jmp    4057e0 <getopt@@Base+0x10>
  4057da:	nop    WORD PTR [rax+rax*1+0x0]
  4057e0:	push   rbp
  4057e1:	push   r15
  4057e3:	push   r14
  4057e5:	push   r13
  4057e7:	push   r12
  4057e9:	push   rbx
  4057ea:	sub    rsp,0x58
  4057ee:	mov    eax,0xffffffff
  4057f3:	test   rdx,rdx
  4057f6:	je     4060f0 <getopt@@Base+0x920>
  4057fc:	mov    r14,r8
  4057ff:	mov    rbx,rdx
  405802:	mov    r13,rsi
  405805:	mov    r12d,edi
  405808:	mov    ebp,r9d
  40580b:	mov    QWORD PTR [rsp+0x38],rcx
  405810:	lea    rdi,[rip+0x214e]        # 407965 <getopt_long_only@@Base+0x1755>
  405817:	call   402040 <getenv@plt>
  40581c:	mov    cl,BYTE PTR [rbx]
  40581e:	cmp    cl,0x2d
  405821:	mov    QWORD PTR [rsp+0x50],rax
  405826:	jne    40582f <getopt@@Base+0x5f>
  405828:	mov    eax,ebp
  40582a:	or     eax,0x2
  40582d:	jmp    40584d <getopt@@Base+0x7d>
  40582f:	mov    rdx,rax
  405832:	mov    r9d,ebp
  405835:	mov    eax,ebp
  405837:	and    eax,0xfffffffe
  40583a:	cmp    cl,0x2b
  40583d:	cmove  r9d,eax
  405841:	test   rdx,rdx
  405844:	cmovne r9d,eax
  405848:	cmp    cl,0x2b
  40584b:	jne    405853 <getopt@@Base+0x83>
  40584d:	inc    rbx
  405850:	mov    r9d,eax
  405853:	lea    r15,[rip+0x4aca]        # 40a324 <optind@@Base>
  40585a:	mov    esi,DWORD PTR [r15]
  40585d:	lea    rax,[rip+0x4b04]        # 40a368 <optopt@@Base+0x40>
  405864:	test   esi,esi
  405866:	je     405880 <getopt@@Base+0xb0>
  405868:	mov    eax,DWORD PTR [rax]
  40586a:	lea    rcx,[rip+0x4aff]        # 40a370 <optarg@@Base>
  405871:	mov    QWORD PTR [rcx],0x0
  405878:	test   eax,eax
  40587a:	jne    4058a5 <getopt@@Base+0xd5>
  40587c:	xor    eax,eax
  40587e:	jmp    4058b9 <getopt@@Base+0xe9>
  405880:	mov    DWORD PTR [rax],0x1
  405886:	mov    DWORD PTR [r15],0x1
  40588d:	lea    rax,[rip+0x4adc]        # 40a370 <optarg@@Base>
  405894:	mov    QWORD PTR [rax],0x0
  40589b:	mov    esi,0x1
  4058a0:	mov    eax,0x1
  4058a5:	mov    DWORD PTR [rip+0x4a7d],0xffffffff        # 40a32c <optopt@@Base+0x4>
  4058af:	mov    DWORD PTR [rip+0x4a77],0xffffffff        # 40a330 <optopt@@Base+0x8>
  4058b9:	mov    QWORD PTR [rsp+0x48],r14
  4058be:	mov    QWORD PTR [rsp+0x10],rbx
  4058c3:	lea    rcx,[rip+0x4a9e]        # 40a368 <optopt@@Base+0x40>
  4058ca:	lea    rdx,[rip+0x1b46]        # 407417 <getopt_long_only@@Base+0x1207>
  4058d1:	mov    DWORD PTR [rsp+0x8],r9d
  4058d6:	mov    DWORD PTR [rsp+0x44],r12d
  4058db:	test   eax,eax
  4058dd:	jne    40594d <getopt@@Base+0x17d>
  4058df:	jmp    405939 <getopt@@Base+0x169>
  4058e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4058eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4058f0:	mov    esi,DWORD PTR [rsp+0x24]
  4058f4:	mov    eax,DWORD PTR [rsp+0x20]
  4058f8:	add    eax,esi
  4058fa:	sub    eax,ebp
  4058fc:	mov    DWORD PTR [rip+0x4a2e],eax        # 40a330 <optopt@@Base+0x8>
  405902:	mov    DWORD PTR [rip+0x4a20],0xffffffff        # 40a32c <optopt@@Base+0x4>
  40590c:	lea    r15,[rip+0x4a11]        # 40a324 <optind@@Base>
  405913:	mov    r12d,DWORD PTR [rsp+0x44]
  405918:	mov    r9d,DWORD PTR [rsp+0x8]
  40591d:	lea    rbx,[rip+0x1af3]        # 407417 <getopt_long_only@@Base+0x1207>
  405924:	mov    rdx,rbx
  405927:	lea    rcx,[rip+0x4a3a]        # 40a368 <optopt@@Base+0x40>
  40592e:	inc    esi
  405930:	mov    DWORD PTR [r15],esi
  405933:	xor    eax,eax
  405935:	test   eax,eax
  405937:	jne    40594d <getopt@@Base+0x17d>
  405939:	mov    rbp,QWORD PTR [rip+0x49f8]        # 40a338 <optopt@@Base+0x10>
  405940:	mov    r14b,BYTE PTR [rbp+0x0]
  405944:	test   r14b,r14b
  405947:	jne    405d4e <getopt@@Base+0x57e>
  40594d:	mov    DWORD PTR [rcx],0x0
  405953:	cmp    esi,r12d
  405956:	jge    405b4b <getopt@@Base+0x37b>
  40595c:	movsxd rax,esi
  40595f:	mov    rax,QWORD PTR [r13+rax*8+0x0]
  405964:	mov    QWORD PTR [rip+0x49cd],rax        # 40a338 <optopt@@Base+0x10>
  40596b:	cmp    BYTE PTR [rax],0x2d
  40596e:	jne    40597d <getopt@@Base+0x1ad>
  405970:	mov    r14b,BYTE PTR [rax+0x1]
  405974:	test   r14b,r14b
  405977:	jne    405d0f <getopt@@Base+0x53f>
  40597d:	mov    QWORD PTR [rip+0x49b4],rdx        # 40a338 <optopt@@Base+0x10>
  405984:	test   r9b,0x2
  405988:	jne    405cd9 <getopt@@Base+0x509>
  40598e:	test   r9b,0x1
  405992:	je     405cf2 <getopt@@Base+0x522>
  405998:	mov    edi,DWORD PTR [rip+0x4992]        # 40a330 <optopt@@Base+0x8>
  40599e:	cmp    edi,0xffffffff
  4059a1:	je     405b40 <getopt@@Base+0x370>
  4059a7:	movsxd rbp,DWORD PTR [rip+0x497e]        # 40a32c <optopt@@Base+0x4>
  4059ae:	cmp    rbp,0xffffffffffffffff
  4059b2:	je     40592e <getopt@@Base+0x15e>
  4059b8:	mov    r9d,esi
  4059bb:	sub    r9d,ebp
  4059be:	mov    r11d,ebp
  4059c1:	sub    r11d,edi
  4059c4:	mov    eax,r11d
  4059c7:	cdq    
  4059c8:	idiv   r9d
  4059cb:	mov    ecx,r9d
  4059ce:	test   edx,edx
  4059d0:	je     4059eb <getopt@@Base+0x21b>
  4059d2:	mov    eax,r9d
  4059d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4059df:	nop
  4059e0:	mov    ecx,edx
  4059e2:	cdq    
  4059e3:	idiv   ecx
  4059e5:	mov    eax,ecx
  4059e7:	test   edx,edx
  4059e9:	jne    4059e0 <getopt@@Base+0x210>
  4059eb:	mov    DWORD PTR [rsp+0x24],esi
  4059ef:	mov    DWORD PTR [rsp+0x20],edi
  4059f3:	sub    esi,edi
  4059f5:	mov    eax,esi
  4059f7:	cdq    
  4059f8:	idiv   ecx
  4059fa:	mov    QWORD PTR [rsp+0x18],rax
  4059ff:	test   ecx,ecx
  405a01:	jle    4058f0 <getopt@@Base+0x120>
  405a07:	neg    r11d
  405a0a:	mov    eax,ecx
  405a0c:	mov    QWORD PTR [rsp+0x30],rax
  405a11:	mov    rcx,QWORD PTR [rsp+0x18]
  405a16:	lea    eax,[rcx-0x1]
  405a19:	mov    DWORD PTR [rsp+0x28],eax
  405a1d:	mov    eax,ecx
  405a1f:	and    eax,0x3
  405a22:	mov    edx,eax
  405a24:	sub    edx,ecx
  405a26:	mov    DWORD PTR [rsp+0xc],edx
  405a2a:	xor    r14d,r14d
  405a2d:	cmp    DWORD PTR [rsp+0x18],0x0
  405a32:	jg     405a55 <getopt@@Base+0x285>
  405a34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a3e:	xchg   ax,ax
  405a40:	inc    r14
  405a43:	cmp    r14,QWORD PTR [rsp+0x30]
  405a48:	je     4058f0 <getopt@@Base+0x120>
  405a4e:	cmp    DWORD PTR [rsp+0x18],0x0
  405a53:	jle    405a40 <getopt@@Base+0x270>
  405a55:	lea    r8,[r14+rbp*1]
  405a59:	mov    r12,QWORD PTR [r13+r8*8+0x0]
  405a5e:	cmp    DWORD PTR [rsp+0x28],0x3
  405a63:	jae    405a70 <getopt@@Base+0x2a0>
  405a65:	mov    ecx,r8d
  405a68:	jmp    405b00 <getopt@@Base+0x330>
  405a6d:	nop    DWORD PTR [rax]
  405a70:	mov    r15d,DWORD PTR [rsp+0xc]
  405a75:	mov    ecx,r8d
  405a78:	jmp    405a9a <getopt@@Base+0x2ca>
  405a7a:	nop    WORD PTR [rax+rax*1+0x0]
  405a80:	add    ecx,edi
  405a82:	movsxd rdx,ecx
  405a85:	mov    r12,QWORD PTR [r13+rdx*8+0x0]
  405a8a:	mov    QWORD PTR [r13+rdx*8+0x0],rsi
  405a8f:	mov    QWORD PTR [r13+r8*8+0x0],r12
  405a94:	add    r15d,0x4
  405a98:	je     405b00 <getopt@@Base+0x330>
  405a9a:	mov    edi,r9d
  405a9d:	cmp    ecx,ebp
  405a9f:	jl     405aa4 <getopt@@Base+0x2d4>
  405aa1:	mov    edi,r11d
  405aa4:	add    edi,ecx
  405aa6:	movsxd rdx,edi
  405aa9:	mov    r10,QWORD PTR [r13+rdx*8+0x0]
  405aae:	mov    QWORD PTR [r13+rdx*8+0x0],r12
  405ab3:	mov    QWORD PTR [r13+r8*8+0x0],r10
  405ab8:	mov    ecx,r9d
  405abb:	cmp    edx,ebp
  405abd:	jl     405ac2 <getopt@@Base+0x2f2>
  405abf:	mov    ecx,r11d
  405ac2:	add    ecx,edi
  405ac4:	movsxd rsi,ecx
  405ac7:	mov    rdx,QWORD PTR [r13+rsi*8+0x0]
  405acc:	mov    QWORD PTR [r13+rsi*8+0x0],r10
  405ad1:	mov    QWORD PTR [r13+r8*8+0x0],rdx
  405ad6:	mov    edi,r9d
  405ad9:	cmp    esi,ebp
  405adb:	jl     405ae0 <getopt@@Base+0x310>
  405add:	mov    edi,r11d
  405ae0:	add    edi,ecx
  405ae2:	movsxd rbx,edi
  405ae5:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  405aea:	mov    QWORD PTR [r13+rbx*8+0x0],rdx
  405aef:	mov    QWORD PTR [r13+r8*8+0x0],rsi
  405af4:	mov    ecx,r9d
  405af7:	cmp    ebx,ebp
  405af9:	jl     405a80 <getopt@@Base+0x2b0>
  405afb:	mov    ecx,r11d
  405afe:	jmp    405a80 <getopt@@Base+0x2b0>
  405b00:	test   eax,eax
  405b02:	je     405a40 <getopt@@Base+0x270>
  405b08:	mov    edi,eax
  405b0a:	nop    WORD PTR [rax+rax*1+0x0]
  405b10:	cmp    ecx,ebp
  405b12:	mov    edx,r11d
  405b15:	cmovl  edx,r9d
  405b19:	add    ecx,edx
  405b1b:	movsxd rdx,ecx
  405b1e:	mov    rsi,QWORD PTR [r13+rdx*8+0x0]
  405b23:	mov    QWORD PTR [r13+rdx*8+0x0],r12
  405b28:	mov    QWORD PTR [r13+r8*8+0x0],rsi
  405b2d:	mov    r12,rsi
  405b30:	dec    edi
  405b32:	jne    405b10 <getopt@@Base+0x340>
  405b34:	jmp    405a40 <getopt@@Base+0x270>
  405b39:	nop    DWORD PTR [rax+0x0]
  405b40:	mov    DWORD PTR [rip+0x47ea],esi        # 40a330 <optopt@@Base+0x8>
  405b46:	jmp    40592e <getopt@@Base+0x15e>
  405b4b:	mov    QWORD PTR [rip+0x47e6],rdx        # 40a338 <optopt@@Base+0x10>
  405b52:	movsxd rbx,DWORD PTR [rip+0x47d3]        # 40a32c <optopt@@Base+0x4>
  405b59:	mov    edi,DWORD PTR [rip+0x47d1]        # 40a330 <optopt@@Base+0x8>
  405b5f:	cmp    rbx,0xffffffffffffffff
  405b63:	je     405db9 <getopt@@Base+0x5e9>
  405b69:	mov    r8d,esi
  405b6c:	sub    r8d,ebx
  405b6f:	mov    r12d,ebx
  405b72:	sub    r12d,edi
  405b75:	mov    eax,r12d
  405b78:	cdq    
  405b79:	idiv   r8d
  405b7c:	mov    ecx,r8d
  405b7f:	test   edx,edx
  405b81:	je     405b9b <getopt@@Base+0x3cb>
  405b83:	mov    eax,r8d
  405b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b90:	mov    ecx,edx
  405b92:	cdq    
  405b93:	idiv   ecx
  405b95:	mov    eax,ecx
  405b97:	test   edx,edx
  405b99:	jne    405b90 <getopt@@Base+0x3c0>
  405b9b:	mov    DWORD PTR [rsp+0xc],edi
  405b9f:	sub    esi,edi
  405ba1:	mov    eax,esi
  405ba3:	cdq    
  405ba4:	idiv   ecx
  405ba6:	test   ecx,ecx
  405ba8:	jle    405cfc <getopt@@Base+0x52c>
  405bae:	neg    r12d
  405bb1:	mov    ecx,ecx
  405bb3:	mov    QWORD PTR [rsp+0x18],rcx
  405bb8:	lea    ecx,[rax-0x1]
  405bbb:	mov    DWORD PTR [rsp+0x30],ecx
  405bbf:	mov    r14d,eax
  405bc2:	and    r14d,0x3
  405bc6:	mov    ecx,r14d
  405bc9:	sub    ecx,eax
  405bcb:	mov    DWORD PTR [rsp+0x28],ecx
  405bcf:	xor    r15d,r15d
  405bd2:	test   eax,eax
  405bd4:	jg     405bf2 <getopt@@Base+0x422>
  405bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405be0:	inc    r15
  405be3:	cmp    r15,QWORD PTR [rsp+0x18]
  405be8:	je     405cfc <getopt@@Base+0x52c>
  405bee:	test   eax,eax
  405bf0:	jle    405be0 <getopt@@Base+0x410>
  405bf2:	lea    r9,[r15+rbx*1]
  405bf6:	mov    rbp,QWORD PTR [r13+r9*8+0x0]
  405bfb:	cmp    DWORD PTR [rsp+0x30],0x3
  405c00:	jae    405c10 <getopt@@Base+0x440>
  405c02:	mov    ecx,r9d
  405c05:	jmp    405ca0 <getopt@@Base+0x4d0>
  405c0a:	nop    WORD PTR [rax+rax*1+0x0]
  405c10:	mov    r11d,DWORD PTR [rsp+0x28]
  405c15:	mov    ecx,r9d
  405c18:	jmp    405c3a <getopt@@Base+0x46a>
  405c1a:	nop    WORD PTR [rax+rax*1+0x0]
  405c20:	add    ecx,esi
  405c22:	movsxd rdx,ecx
  405c25:	mov    rbp,QWORD PTR [r13+rdx*8+0x0]
  405c2a:	mov    QWORD PTR [r13+rdx*8+0x0],rdi
  405c2f:	mov    QWORD PTR [r13+r9*8+0x0],rbp
  405c34:	add    r11d,0x4
  405c38:	je     405ca0 <getopt@@Base+0x4d0>
  405c3a:	mov    esi,r8d
  405c3d:	cmp    ecx,ebx
  405c3f:	jl     405c44 <getopt@@Base+0x474>
  405c41:	mov    esi,r12d
  405c44:	add    esi,ecx
  405c46:	movsxd rdi,esi
  405c49:	mov    r10,QWORD PTR [r13+rdi*8+0x0]
  405c4e:	mov    QWORD PTR [r13+rdi*8+0x0],rbp
  405c53:	mov    QWORD PTR [r13+r9*8+0x0],r10
  405c58:	mov    ecx,r8d
  405c5b:	cmp    edi,ebx
  405c5d:	jl     405c62 <getopt@@Base+0x492>
  405c5f:	mov    ecx,r12d
  405c62:	add    ecx,esi
  405c64:	movsxd rdi,ecx
  405c67:	mov    rbp,QWORD PTR [r13+rdi*8+0x0]
  405c6c:	mov    QWORD PTR [r13+rdi*8+0x0],r10
  405c71:	mov    QWORD PTR [r13+r9*8+0x0],rbp
  405c76:	mov    esi,r8d
  405c79:	cmp    edi,ebx
  405c7b:	jl     405c80 <getopt@@Base+0x4b0>
  405c7d:	mov    esi,r12d
  405c80:	add    esi,ecx
  405c82:	movsxd rdx,esi
  405c85:	mov    rdi,QWORD PTR [r13+rdx*8+0x0]
  405c8a:	mov    QWORD PTR [r13+rdx*8+0x0],rbp
  405c8f:	mov    QWORD PTR [r13+r9*8+0x0],rdi
  405c94:	mov    ecx,r8d
  405c97:	cmp    edx,ebx
  405c99:	jl     405c20 <getopt@@Base+0x450>
  405c9b:	mov    ecx,r12d
  405c9e:	jmp    405c20 <getopt@@Base+0x450>
  405ca0:	test   r14d,r14d
  405ca3:	je     405be0 <getopt@@Base+0x410>
  405ca9:	mov    edx,r14d
  405cac:	nop    DWORD PTR [rax+0x0]
  405cb0:	cmp    ecx,ebx
  405cb2:	mov    esi,r12d
  405cb5:	cmovl  esi,r8d
  405cb9:	add    ecx,esi
  405cbb:	movsxd rsi,ecx
  405cbe:	mov    rdi,QWORD PTR [r13+rsi*8+0x0]
  405cc3:	mov    QWORD PTR [r13+rsi*8+0x0],rbp
  405cc8:	mov    QWORD PTR [r13+r9*8+0x0],rdi
  405ccd:	mov    rbp,rdi
  405cd0:	dec    edx
  405cd2:	jne    405cb0 <getopt@@Base+0x4e0>
  405cd4:	jmp    405be0 <getopt@@Base+0x410>
  405cd9:	inc    esi
  405cdb:	mov    DWORD PTR [r15],esi
  405cde:	lea    rcx,[rip+0x468b]        # 40a370 <optarg@@Base>
  405ce5:	mov    QWORD PTR [rcx],rax
  405ce8:	mov    eax,0x1
  405ced:	jmp    4060f0 <getopt@@Base+0x920>
  405cf2:	mov    eax,0xffffffff
  405cf7:	jmp    4060f0 <getopt@@Base+0x920>
  405cfc:	mov    edi,DWORD PTR [rsp+0xc]
  405d00:	add    edi,r8d
  405d03:	lea    r15,[rip+0x461a]        # 40a324 <optind@@Base>
  405d0a:	jmp    405dbe <getopt@@Base+0x5ee>
  405d0f:	lea    rbp,[rax+0x1]
  405d13:	mov    edi,DWORD PTR [rip+0x4617]        # 40a330 <optopt@@Base+0x8>
  405d19:	mov    r11d,DWORD PTR [rip+0x460c]        # 40a32c <optopt@@Base+0x4>
  405d20:	cmp    edi,0xffffffff
  405d23:	je     405d34 <getopt@@Base+0x564>
  405d25:	cmp    r11d,0xffffffff
  405d29:	jne    405d34 <getopt@@Base+0x564>
  405d2b:	mov    DWORD PTR [rip+0x45fb],esi        # 40a32c <optopt@@Base+0x4>
  405d31:	mov    r11d,esi
  405d34:	mov    QWORD PTR [rip+0x45fd],rbp        # 40a338 <optopt@@Base+0x10>
  405d3b:	cmp    r14b,0x2d
  405d3f:	jne    405d4e <getopt@@Base+0x57e>
  405d41:	mov    r14b,0x2d
  405d44:	cmp    BYTE PTR [rax+0x2],0x0
  405d48:	je     405ddf <getopt@@Base+0x60f>
  405d4e:	mov    rdx,QWORD PTR [rsp+0x38]
  405d53:	test   rdx,rdx
  405d56:	je     405fd3 <getopt@@Base+0x803>
  405d5c:	movsxd rax,esi
  405d5f:	cmp    rbp,QWORD PTR [r13+rax*8+0x0]
  405d64:	je     405fd3 <getopt@@Base+0x803>
  405d6a:	test   r9b,0x4
  405d6e:	jne    405d7a <getopt@@Base+0x5aa>
  405d70:	cmp    r14b,0x2d
  405d74:	jne    405fd3 <getopt@@Base+0x803>
  405d7a:	mov    DWORD PTR [rip+0x45bc],0x0        # 40a340 <optopt@@Base+0x18>
  405d84:	xor    r8d,r8d
  405d87:	cmp    r14b,0x3a
  405d8b:	je     405f83 <getopt@@Base+0x7b3>
  405d91:	cmp    r14b,0x2d
  405d95:	jne    405f8a <getopt@@Base+0x7ba>
  405d9b:	inc    rbp
  405d9e:	mov    QWORD PTR [rip+0x4593],rbp        # 40a338 <optopt@@Base+0x10>
  405da5:	mov    DWORD PTR [rip+0x4591],0x1        # 40a340 <optopt@@Base+0x18>
  405daf:	mov    rbx,QWORD PTR [rsp+0x10]
  405db4:	jmp    405faf <getopt@@Base+0x7df>
  405db9:	cmp    edi,0xffffffff
  405dbc:	je     405dc1 <getopt@@Base+0x5f1>
  405dbe:	mov    DWORD PTR [r15],edi
  405dc1:	mov    DWORD PTR [rip+0x4561],0xffffffff        # 40a32c <optopt@@Base+0x4>
  405dcb:	mov    DWORD PTR [rip+0x455b],0xffffffff        # 40a330 <optopt@@Base+0x8>
  405dd5:	mov    eax,0xffffffff
  405dda:	jmp    4060f0 <getopt@@Base+0x920>
  405ddf:	inc    esi
  405de1:	mov    DWORD PTR [r15],esi
  405de4:	mov    QWORD PTR [rip+0x454d],rdx        # 40a338 <optopt@@Base+0x10>
  405deb:	cmp    r11d,0xffffffff
  405def:	je     405dc1 <getopt@@Base+0x5f1>
  405df1:	mov    r9d,r11d
  405df4:	sub    r9d,edi
  405df7:	mov    r8d,esi
  405dfa:	sub    r8d,r11d
  405dfd:	mov    eax,r9d
  405e00:	cdq    
  405e01:	idiv   r8d
  405e04:	mov    ecx,r8d
  405e07:	test   edx,edx
  405e09:	je     405e19 <getopt@@Base+0x649>
  405e0b:	mov    eax,r8d
  405e0e:	mov    ecx,edx
  405e10:	cdq    
  405e11:	idiv   ecx
  405e13:	mov    eax,ecx
  405e15:	test   edx,edx
  405e17:	jne    405e0e <getopt@@Base+0x63e>
  405e19:	mov    DWORD PTR [rsp+0x24],esi
  405e1d:	mov    DWORD PTR [rsp+0x8],edi
  405e21:	sub    esi,edi
  405e23:	mov    eax,esi
  405e25:	cdq    
  405e26:	idiv   ecx
  405e28:	mov    QWORD PTR [rsp+0x18],rax
  405e2d:	test   ecx,ecx
  405e2f:	jle    405f6a <getopt@@Base+0x79a>
  405e35:	neg    r9d
  405e38:	movsxd rax,r11d
  405e3b:	mov    QWORD PTR [rsp+0x28],rax
  405e40:	mov    eax,ecx
  405e42:	mov    QWORD PTR [rsp+0x30],rax
  405e47:	mov    rcx,QWORD PTR [rsp+0x18]
  405e4c:	lea    eax,[rcx-0x1]
  405e4f:	mov    DWORD PTR [rsp+0xc],eax
  405e53:	mov    eax,ecx
  405e55:	and    eax,0x3
  405e58:	mov    edx,eax
  405e5a:	sub    edx,ecx
  405e5c:	mov    DWORD PTR [rsp+0x20],edx
  405e60:	xor    r12d,r12d
  405e63:	cmp    DWORD PTR [rsp+0x18],0x0
  405e68:	jg     405e7f <getopt@@Base+0x6af>
  405e6a:	inc    r12
  405e6d:	cmp    r12,QWORD PTR [rsp+0x30]
  405e72:	je     405f6a <getopt@@Base+0x79a>
  405e78:	cmp    DWORD PTR [rsp+0x18],0x0
  405e7d:	jle    405e6a <getopt@@Base+0x69a>
  405e7f:	mov    rcx,QWORD PTR [rsp+0x28]
  405e84:	lea    r15,[r12+rcx*1]
  405e88:	mov    r14,QWORD PTR [r13+r15*8+0x0]
  405e8d:	cmp    DWORD PTR [rsp+0xc],0x3
  405e92:	jae    405e9c <getopt@@Base+0x6cc>
  405e94:	mov    ecx,r15d
  405e97:	jmp    405f36 <getopt@@Base+0x766>
  405e9c:	mov    edx,DWORD PTR [rsp+0x20]
  405ea0:	mov    ecx,r15d
  405ea3:	jmp    405ec9 <getopt@@Base+0x6f9>
  405ea5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405eaf:	nop
  405eb0:	add    ecx,ebp
  405eb2:	movsxd rsi,ecx
  405eb5:	mov    r14,QWORD PTR [r13+rsi*8+0x0]
  405eba:	mov    QWORD PTR [r13+rsi*8+0x0],rdi
  405ebf:	mov    QWORD PTR [r13+r15*8+0x0],r14
  405ec4:	add    edx,0x4
  405ec7:	je     405f36 <getopt@@Base+0x766>
  405ec9:	mov    ebp,r8d
  405ecc:	cmp    ecx,r11d
  405ecf:	jl     405ed4 <getopt@@Base+0x704>
  405ed1:	mov    ebp,r9d
  405ed4:	add    ebp,ecx
  405ed6:	movsxd rsi,ebp
  405ed9:	mov    r10,QWORD PTR [r13+rsi*8+0x0]
  405ede:	mov    QWORD PTR [r13+rsi*8+0x0],r14
  405ee3:	mov    QWORD PTR [r13+r15*8+0x0],r10
  405ee8:	mov    ecx,r8d
  405eeb:	cmp    esi,r11d
  405eee:	jl     405ef3 <getopt@@Base+0x723>
  405ef0:	mov    ecx,r9d
  405ef3:	add    ecx,ebp
  405ef5:	movsxd rdi,ecx
  405ef8:	mov    rsi,QWORD PTR [r13+rdi*8+0x0]
  405efd:	mov    QWORD PTR [r13+rdi*8+0x0],r10
  405f02:	mov    QWORD PTR [r13+r15*8+0x0],rsi
  405f07:	mov    ebp,r8d
  405f0a:	cmp    edi,r11d
  405f0d:	jl     405f12 <getopt@@Base+0x742>
  405f0f:	mov    ebp,r9d
  405f12:	add    ebp,ecx
  405f14:	movsxd rbx,ebp
  405f17:	mov    rdi,QWORD PTR [r13+rbx*8+0x0]
  405f1c:	mov    QWORD PTR [r13+rbx*8+0x0],rsi
  405f21:	mov    QWORD PTR [r13+r15*8+0x0],rdi
  405f26:	mov    ecx,r8d
  405f29:	cmp    ebx,r11d
  405f2c:	jl     405eb0 <getopt@@Base+0x6e0>
  405f2e:	mov    ecx,r9d
  405f31:	jmp    405eb0 <getopt@@Base+0x6e0>
  405f36:	test   eax,eax
  405f38:	je     405e6a <getopt@@Base+0x69a>
  405f3e:	mov    edx,eax
  405f40:	cmp    ecx,r11d
  405f43:	mov    esi,r9d
  405f46:	cmovl  esi,r8d
  405f4a:	add    ecx,esi
  405f4c:	movsxd rsi,ecx
  405f4f:	mov    rdi,QWORD PTR [r13+rsi*8+0x0]
  405f54:	mov    QWORD PTR [r13+rsi*8+0x0],r14
  405f59:	mov    QWORD PTR [r13+r15*8+0x0],rdi
  405f5e:	mov    r14,rdi
  405f61:	dec    edx
  405f63:	jne    405f40 <getopt@@Base+0x770>
  405f65:	jmp    405e6a <getopt@@Base+0x69a>
  405f6a:	mov    ecx,DWORD PTR [rsp+0x8]
  405f6e:	add    ecx,DWORD PTR [rsp+0x24]
  405f72:	sub    ecx,r11d
  405f75:	lea    rax,[rip+0x43a8]        # 40a324 <optind@@Base>
  405f7c:	mov    DWORD PTR [rax],ecx
  405f7e:	jmp    405dc1 <getopt@@Base+0x5f1>
  405f83:	mov    rbx,QWORD PTR [rsp+0x10]
  405f88:	jmp    405faf <getopt@@Base+0x7df>
  405f8a:	movsx  esi,r14b
  405f8e:	mov    rbx,QWORD PTR [rsp+0x10]
  405f93:	mov    rdi,rbx
  405f96:	call   402150 <strchr@plt>
  405f9b:	mov    r9d,DWORD PTR [rsp+0x8]
  405fa0:	mov    rdx,QWORD PTR [rsp+0x38]
  405fa5:	xor    r8d,r8d
  405fa8:	test   rax,rax
  405fab:	setne  r8b
  405faf:	mov    rdi,r13
  405fb2:	mov    rsi,rbx
  405fb5:	mov    rcx,QWORD PTR [rsp+0x48]
  405fba:	call   406220 <getopt_long_only@@Base+0x10>
  405fbf:	cmp    eax,0xffffffff
  405fc2:	jne    40607b <getopt@@Base+0x8ab>
  405fc8:	mov    rbp,QWORD PTR [rip+0x4369]        # 40a338 <optopt@@Base+0x10>
  405fcf:	mov    r14b,BYTE PTR [rbp+0x0]
  405fd3:	inc    rbp
  405fd6:	mov    QWORD PTR [rip+0x435b],rbp        # 40a338 <optopt@@Base+0x10>
  405fdd:	movsx  esi,r14b
  405fe1:	cmp    sil,0x3a
  405fe5:	je     4060a0 <getopt@@Base+0x8d0>
  405feb:	cmp    r14b,0x2d
  405fef:	jne    405ffb <getopt@@Base+0x82b>
  405ff1:	cmp    BYTE PTR [rbp+0x0],0x0
  405ff5:	jne    4060a9 <getopt@@Base+0x8d9>
  405ffb:	mov    rdi,QWORD PTR [rsp+0x10]
  406000:	mov    ebx,esi
  406002:	call   402150 <strchr@plt>
  406007:	test   rax,rax
  40600a:	je     40608b <getopt@@Base+0x8bb>
  40600c:	mov    cl,BYTE PTR [rax+0x1]
  40600f:	mov    rdx,QWORD PTR [rsp+0x38]
  406014:	test   rdx,rdx
  406017:	je     4060ff <getopt@@Base+0x92f>
  40601d:	cmp    r14b,0x57
  406021:	jne    4060ff <getopt@@Base+0x92f>
  406027:	cmp    cl,0x3b
  40602a:	jne    4060ff <getopt@@Base+0x92f>
  406030:	cmp    BYTE PTR [rbp+0x0],0x0
  406034:	mov    rbp,QWORD PTR [rsp+0x10]
  406039:	mov    rcx,QWORD PTR [rsp+0x48]
  40603e:	mov    r9d,DWORD PTR [rsp+0x8]
  406043:	jne    406063 <getopt@@Base+0x893>
  406045:	movsxd rax,DWORD PTR [r15]
  406048:	lea    esi,[rax+0x1]
  40604b:	mov    DWORD PTR [r15],esi
  40604e:	cmp    esi,r12d
  406051:	jge    406129 <getopt@@Base+0x959>
  406057:	mov    rax,QWORD PTR [r13+rax*8+0x8]
  40605c:	mov    QWORD PTR [rip+0x42d5],rax        # 40a338 <optopt@@Base+0x10>
  406063:	mov    DWORD PTR [rip+0x42d3],0x2        # 40a340 <optopt@@Base+0x18>
  40606d:	mov    rdi,r13
  406070:	mov    rsi,rbp
  406073:	xor    r8d,r8d
  406076:	call   406220 <getopt_long_only@@Base+0x10>
  40607b:	lea    rcx,[rip+0x1395]        # 407417 <getopt_long_only@@Base+0x1207>
  406082:	mov    QWORD PTR [rip+0x42af],rcx        # 40a338 <optopt@@Base+0x10>
  406089:	jmp    4060f0 <getopt@@Base+0x920>
  40608b:	cmp    r14b,0x2d
  40608f:	mov    eax,0xffffffff
  406094:	mov    esi,ebx
  406096:	jne    4060a0 <getopt@@Base+0x8d0>
  406098:	cmp    BYTE PTR [rbp+0x0],0x0
  40609c:	jne    4060a9 <getopt@@Base+0x8d9>
  40609e:	jmp    4060f0 <getopt@@Base+0x920>
  4060a0:	cmp    BYTE PTR [rbp+0x0],0x0
  4060a4:	jne    4060a9 <getopt@@Base+0x8d9>
  4060a6:	inc    DWORD PTR [r15]
  4060a9:	lea    rax,[rip+0x4270]        # 40a320 <opterr@@Base>
  4060b0:	cmp    DWORD PTR [rax],0x0
  4060b3:	je     4060e2 <getopt@@Base+0x912>
  4060b5:	mov    rax,QWORD PTR [rsp+0x10]
  4060ba:	cmp    BYTE PTR [rax],0x3a
  4060bd:	je     4060e2 <getopt@@Base+0x912>
  4060bf:	cmp    QWORD PTR [rsp+0x50],0x0
  4060c5:	lea    rax,[rip+0x18b4]        # 407980 <getopt_long_only@@Base+0x1770>
  4060cc:	lea    rdi,[rip+0x18cd]        # 4079a0 <getopt_long_only@@Base+0x1790>
  4060d3:	cmovne rdi,rax
  4060d7:	xor    eax,eax
  4060d9:	mov    ebx,esi
  4060db:	call   402170 <warnx@plt>
  4060e0:	mov    esi,ebx
  4060e2:	lea    rax,[rip+0x423f]        # 40a328 <optopt@@Base>
  4060e9:	mov    DWORD PTR [rax],esi
  4060eb:	mov    eax,0x3f
  4060f0:	add    rsp,0x58
  4060f4:	pop    rbx
  4060f5:	pop    r12
  4060f7:	pop    r13
  4060f9:	pop    r14
  4060fb:	pop    r15
  4060fd:	pop    rbp
  4060fe:	ret    
  4060ff:	cmp    cl,0x3a
  406102:	jne    40611d <getopt@@Base+0x94d>
  406104:	lea    rcx,[rip+0x4265]        # 40a370 <optarg@@Base>
  40610b:	mov    QWORD PTR [rcx],0x0
  406112:	cmp    BYTE PTR [rbp+0x0],0x0
  406116:	je     40617d <getopt@@Base+0x9ad>
  406118:	mov    QWORD PTR [rcx],rbp
  40611b:	jmp    406199 <getopt@@Base+0x9c9>
  40611d:	cmp    BYTE PTR [rbp+0x0],0x0
  406121:	jne    4061aa <getopt@@Base+0x9da>
  406127:	jmp    4061a7 <getopt@@Base+0x9d7>
  406129:	lea    rax,[rip+0x12e7]        # 407417 <getopt_long_only@@Base+0x1207>
  406130:	mov    QWORD PTR [rip+0x4201],rax        # 40a338 <optopt@@Base+0x10>
  406137:	lea    rax,[rip+0x41e2]        # 40a320 <opterr@@Base>
  40613e:	cmp    DWORD PTR [rax],0x0
  406141:	je     40615c <getopt@@Base+0x98c>
  406143:	cmp    BYTE PTR [rbp+0x0],0x3a
  406147:	je     40615c <getopt@@Base+0x98c>
  406149:	lea    rdi,[rip+0x1870]        # 4079c0 <getopt_long_only@@Base+0x17b0>
  406150:	mov    esi,0x57
  406155:	xor    eax,eax
  406157:	call   402170 <warnx@plt>
  40615c:	lea    rax,[rip+0x41c5]        # 40a328 <optopt@@Base>
  406163:	mov    DWORD PTR [rax],0x57
  406169:	xor    eax,eax
  40616b:	cmp    BYTE PTR [rbp+0x0],0x3a
  40616f:	setne  al
  406172:	lea    eax,[rax+rax*4]
  406175:	add    eax,0x3a
  406178:	jmp    4060f0 <getopt@@Base+0x920>
  40617d:	cmp    BYTE PTR [rax+0x2],0x3a
  406181:	je     406199 <getopt@@Base+0x9c9>
  406183:	movsxd rax,DWORD PTR [r15]
  406186:	lea    edx,[rax+0x1]
  406189:	mov    DWORD PTR [r15],edx
  40618c:	cmp    edx,r12d
  40618f:	jge    4061b1 <getopt@@Base+0x9e1>
  406191:	mov    rax,QWORD PTR [r13+rax*8+0x8]
  406196:	mov    QWORD PTR [rcx],rax
  406199:	lea    rax,[rip+0x1277]        # 407417 <getopt_long_only@@Base+0x1207>
  4061a0:	mov    QWORD PTR [rip+0x4191],rax        # 40a338 <optopt@@Base+0x10>
  4061a7:	inc    DWORD PTR [r15]
  4061aa:	mov    eax,ebx
  4061ac:	jmp    4060f0 <getopt@@Base+0x920>
  4061b1:	lea    rax,[rip+0x125f]        # 407417 <getopt_long_only@@Base+0x1207>
  4061b8:	mov    QWORD PTR [rip+0x4179],rax        # 40a338 <optopt@@Base+0x10>
  4061bf:	lea    rax,[rip+0x415a]        # 40a320 <opterr@@Base>
  4061c6:	cmp    DWORD PTR [rax],0x0
  4061c9:	mov    rbp,QWORD PTR [rsp+0x10]
  4061ce:	je     4061e6 <getopt@@Base+0xa16>
  4061d0:	cmp    BYTE PTR [rbp+0x0],0x3a
  4061d4:	je     4061e6 <getopt@@Base+0xa16>
  4061d6:	lea    rdi,[rip+0x17e3]        # 4079c0 <getopt_long_only@@Base+0x17b0>
  4061dd:	mov    esi,ebx
  4061df:	xor    eax,eax
  4061e1:	call   402170 <warnx@plt>
  4061e6:	lea    rax,[rip+0x413b]        # 40a328 <optopt@@Base>
  4061ed:	mov    DWORD PTR [rax],ebx
  4061ef:	jmp    406169 <getopt@@Base+0x999>
  4061f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4061fe:	xchg   ax,ax

0000000000406200 <getopt_long@@Base>:
  406200:	mov    r9d,0x1
  406206:	jmp    4057e0 <getopt@@Base+0x10>
  40620b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406210 <getopt_long_only@@Base>:
  406210:	mov    r9d,0x5
  406216:	jmp    4057e0 <getopt@@Base+0x10>
  40621b:	nop    DWORD PTR [rax+rax*1+0x0]
  406220:	push   rbp
  406221:	push   r15
  406223:	push   r14
  406225:	push   r13
  406227:	push   r12
  406229:	push   rbx
  40622a:	sub    rsp,0x58
  40622e:	mov    DWORD PTR [rsp+0x3c],r9d
  406233:	mov    DWORD PTR [rsp+0x10],r8d
  406238:	mov    QWORD PTR [rsp+0x50],rcx
  40623d:	mov    r15,rdx
  406240:	mov    r13,rsi
  406243:	mov    r14,rdi
  406246:	mov    rbx,QWORD PTR [rip+0x40eb]        # 40a338 <optopt@@Base+0x10>
  40624d:	movsxd rax,DWORD PTR [rip+0x40ec]        # 40a340 <optopt@@Base+0x18>
  406254:	cmp    rax,0x2
  406258:	ja     406267 <getopt_long_only@@Base+0x57>
  40625a:	lea    rcx,[rip+0x3b5f]        # 409dc0 <getopt_long_only@@Base+0x3bb0>
  406261:	mov    rbp,QWORD PTR [rcx+rax*8]
  406265:	jmp    40626e <getopt_long_only@@Base+0x5e>
  406267:	lea    rbp,[rip+0x11a9]        # 407417 <getopt_long_only@@Base+0x1207>
  40626e:	lea    rcx,[rip+0x40af]        # 40a324 <optind@@Base>
  406275:	mov    eax,DWORD PTR [rcx]
  406277:	mov    QWORD PTR [rsp+0x30],rax
  40627c:	inc    eax
  40627e:	mov    DWORD PTR [rcx],eax
  406280:	mov    rdi,rbx
  406283:	mov    esi,0x3d
  406288:	call   402150 <strchr@plt>
  40628d:	test   rax,rax
  406290:	mov    QWORD PTR [rsp+0x18],rbp
  406295:	mov    QWORD PTR [rsp+0x48],r14
  40629a:	je     4062a7 <getopt_long_only@@Base+0x97>
  40629c:	mov    r12,rax
  40629f:	sub    r12,rbx
  4062a2:	inc    rax
  4062a5:	jmp    4062b4 <getopt_long_only@@Base+0xa4>
  4062a7:	mov    rdi,rbx
  4062aa:	call   402130 <strlen@plt>
  4062af:	mov    r12,rax
  4062b2:	xor    eax,eax
  4062b4:	mov    QWORD PTR [rsp+0x28],rax
  4062b9:	mov    rbp,QWORD PTR [r15]
  4062bc:	test   rbp,rbp
  4062bf:	je     40646b <getopt_long_only@@Base+0x25b>
  4062c5:	mov    QWORD PTR [rsp+0x20],r13
  4062ca:	movsxd rax,DWORD PTR [rsp+0x30]
  4062cf:	mov    QWORD PTR [rsp+0x40],rax
  4062d4:	cmp    DWORD PTR [rsp+0x10],0x0
  4062d9:	setne  al
  4062dc:	cmp    r12,0x1
  4062e0:	sete   r14b
  4062e4:	and    r14b,al
  4062e7:	mov    QWORD PTR [rsp+0x8],r15
  4062ec:	add    r15,0x20
  4062f0:	mov    DWORD PTR [rsp+0x4],0xffffffff
  4062f8:	xor    r13d,r13d
  4062fb:	mov    DWORD PTR [rsp+0x14],0x0
  406303:	jmp    40631f <getopt_long_only@@Base+0x10f>
  406305:	mov    DWORD PTR [rsp+0x14],0x1
  40630d:	nop    DWORD PTR [rax]
  406310:	mov    rbp,QWORD PTR [r15]
  406313:	inc    r13d
  406316:	add    r15,0x20
  40631a:	test   rbp,rbp
  40631d:	je     40639e <getopt_long_only@@Base+0x18e>
  40631f:	mov    rdi,rbx
  406322:	mov    rsi,rbp
  406325:	mov    rdx,r12
  406328:	call   4020b0 <strncmp@plt>
  40632d:	test   eax,eax
  40632f:	jne    406310 <getopt_long_only@@Base+0x100>
  406331:	mov    rdi,rbp
  406334:	call   402130 <strlen@plt>
  406339:	cmp    rax,r12
  40633c:	je     4063e1 <getopt_long_only@@Base+0x1d1>
  406342:	test   r14b,r14b
  406345:	jne    406310 <getopt_long_only@@Base+0x100>
  406347:	mov    eax,DWORD PTR [rsp+0x4]
  40634b:	cmp    eax,0xffffffff
  40634e:	je     406394 <getopt_long_only@@Base+0x184>
  406350:	test   BYTE PTR [rsp+0x3c],0x4
  406355:	jne    406305 <getopt_long_only@@Base+0xf5>
  406357:	mov    ecx,DWORD PTR [r15-0x18]
  40635b:	cdqe   
  40635d:	shl    rax,0x5
  406361:	mov    rdx,QWORD PTR [rsp+0x8]
  406366:	cmp    ecx,DWORD PTR [rdx+rax*1+0x8]
  40636a:	jne    406305 <getopt_long_only@@Base+0xf5>
  40636c:	mov    rcx,QWORD PTR [r15-0x10]
  406370:	mov    rdx,QWORD PTR [rsp+0x8]
  406375:	cmp    rcx,QWORD PTR [rdx+rax*1+0x10]
  40637a:	jne    406305 <getopt_long_only@@Base+0xf5>
  40637c:	mov    ecx,DWORD PTR [r15-0x8]
  406380:	mov    rdx,QWORD PTR [rsp+0x8]
  406385:	cmp    ecx,DWORD PTR [rdx+rax*1+0x18]
  406389:	jne    406305 <getopt_long_only@@Base+0xf5>
  40638f:	jmp    406310 <getopt_long_only@@Base+0x100>
  406394:	mov    DWORD PTR [rsp+0x4],r13d
  406399:	jmp    406310 <getopt_long_only@@Base+0x100>
  40639e:	cmp    DWORD PTR [rsp+0x14],0x0
  4063a3:	je     4063f0 <getopt_long_only@@Base+0x1e0>
  4063a5:	lea    rax,[rip+0x3f74]        # 40a320 <opterr@@Base>
  4063ac:	cmp    DWORD PTR [rax],0x0
  4063af:	je     4064b0 <getopt_long_only@@Base+0x2a0>
  4063b5:	mov    rax,QWORD PTR [rsp+0x20]
  4063ba:	cmp    BYTE PTR [rax],0x3a
  4063bd:	je     4064b0 <getopt_long_only@@Base+0x2a0>
  4063c3:	lea    rdi,[rip+0x1626]        # 4079f0 <getopt_long_only@@Base+0x17e0>
  4063ca:	mov    rsi,QWORD PTR [rsp+0x18]
  4063cf:	mov    edx,r12d
  4063d2:	mov    rcx,rbx
  4063d5:	xor    eax,eax
  4063d7:	call   402170 <warnx@plt>
  4063dc:	jmp    4064b0 <getopt_long_only@@Base+0x2a0>
  4063e1:	mov    eax,r13d
  4063e4:	mov    r14,QWORD PTR [rsp+0x8]
  4063e9:	mov    r13,QWORD PTR [rsp+0x20]
  4063ee:	jmp    406403 <getopt_long_only@@Base+0x1f3>
  4063f0:	mov    eax,DWORD PTR [rsp+0x4]
  4063f4:	cmp    eax,0xffffffff
  4063f7:	mov    r14,QWORD PTR [rsp+0x8]
  4063fc:	mov    r13,QWORD PTR [rsp+0x20]
  406401:	je     40646b <getopt_long_only@@Base+0x25b>
  406403:	mov    esi,eax
  406405:	movsxd rbp,eax
  406408:	shl    rbp,0x5
  40640c:	mov    eax,DWORD PTR [r14+rbp*1+0x8]
  406411:	cmp    QWORD PTR [rsp+0x28],0x0
  406417:	je     4064d1 <getopt_long_only@@Base+0x2c1>
  40641d:	test   eax,eax
  40641f:	jne    4064d1 <getopt_long_only@@Base+0x2c1>
  406425:	lea    rax,[rip+0x3ef4]        # 40a320 <opterr@@Base>
  40642c:	cmp    DWORD PTR [rax],0x0
  40642f:	je     406451 <getopt_long_only@@Base+0x241>
  406431:	cmp    BYTE PTR [r13+0x0],0x3a
  406436:	je     406451 <getopt_long_only@@Base+0x241>
  406438:	lea    rdi,[rip+0x15d1]        # 407a10 <getopt_long_only@@Base+0x1800>
  40643f:	mov    rsi,QWORD PTR [rsp+0x18]
  406444:	mov    edx,r12d
  406447:	mov    rcx,rbx
  40644a:	xor    eax,eax
  40644c:	call   402170 <warnx@plt>
  406451:	xor    eax,eax
  406453:	cmp    QWORD PTR [r14+rbp*1+0x10],0x0
  406459:	jne    406460 <getopt_long_only@@Base+0x250>
  40645b:	mov    eax,DWORD PTR [r14+rbp*1+0x18]
  406460:	lea    rcx,[rip+0x3ec1]        # 40a328 <optopt@@Base>
  406467:	mov    DWORD PTR [rcx],eax
  406469:	jmp    4064bd <getopt_long_only@@Base+0x2ad>
  40646b:	cmp    DWORD PTR [rsp+0x10],0x0
  406470:	je     406487 <getopt_long_only@@Base+0x277>
  406472:	lea    rax,[rip+0x3eab]        # 40a324 <optind@@Base>
  406479:	mov    rcx,QWORD PTR [rsp+0x30]
  40647e:	mov    DWORD PTR [rax],ecx
  406480:	mov    eax,0xffffffff
  406485:	jmp    4064c2 <getopt_long_only@@Base+0x2b2>
  406487:	lea    rax,[rip+0x3e92]        # 40a320 <opterr@@Base>
  40648e:	cmp    DWORD PTR [rax],0x0
  406491:	je     4064b0 <getopt_long_only@@Base+0x2a0>
  406493:	cmp    BYTE PTR [r13+0x0],0x3a
  406498:	je     4064b0 <getopt_long_only@@Base+0x2a0>
  40649a:	lea    rdi,[rip+0x15cf]        # 407a70 <getopt_long_only@@Base+0x1860>
  4064a1:	mov    rsi,QWORD PTR [rsp+0x18]
  4064a6:	mov    rdx,rbx
  4064a9:	xor    eax,eax
  4064ab:	call   402170 <warnx@plt>
  4064b0:	lea    rax,[rip+0x3e71]        # 40a328 <optopt@@Base>
  4064b7:	mov    DWORD PTR [rax],0x0
  4064bd:	mov    eax,0x3f
  4064c2:	add    rsp,0x58
  4064c6:	pop    rbx
  4064c7:	pop    r12
  4064c9:	pop    r13
  4064cb:	pop    r14
  4064cd:	pop    r15
  4064cf:	pop    rbp
  4064d0:	ret    
  4064d1:	lea    ecx,[rax-0x1]
  4064d4:	cmp    ecx,0x1
  4064d7:	ja     4065a9 <getopt_long_only@@Base+0x399>
  4064dd:	mov    rdx,QWORD PTR [rsp+0x28]
  4064e2:	test   rdx,rdx
  4064e5:	je     4064fb <getopt_long_only@@Base+0x2eb>
  4064e7:	lea    rcx,[rip+0x3e82]        # 40a370 <optarg@@Base>
  4064ee:	mov    QWORD PTR [rcx],rdx
  4064f1:	cmp    eax,0x1
  4064f4:	je     40653d <getopt_long_only@@Base+0x32d>
  4064f6:	jmp    4065a9 <getopt_long_only@@Base+0x399>
  4064fb:	cmp    eax,0x1
  4064fe:	jne    4065a9 <getopt_long_only@@Base+0x399>
  406504:	lea    rax,[r14+rbp*1]
  406508:	add    rax,0x8
  40650c:	mov    rdx,QWORD PTR [rsp+0x30]
  406511:	add    edx,0x2
  406514:	lea    rcx,[rip+0x3e09]        # 40a324 <optind@@Base>
  40651b:	mov    DWORD PTR [rcx],edx
  40651d:	mov    rcx,QWORD PTR [rsp+0x48]
  406522:	mov    rdx,QWORD PTR [rsp+0x40]
  406527:	mov    rcx,QWORD PTR [rcx+rdx*8+0x8]
  40652c:	lea    rdx,[rip+0x3e3d]        # 40a370 <optarg@@Base>
  406533:	mov    QWORD PTR [rdx],rcx
  406536:	mov    eax,DWORD PTR [rax]
  406538:	cmp    eax,0x1
  40653b:	jne    4065a9 <getopt_long_only@@Base+0x399>
  40653d:	lea    rax,[rip+0x3e2c]        # 40a370 <optarg@@Base>
  406544:	cmp    QWORD PTR [rax],0x0
  406548:	jne    4065a9 <getopt_long_only@@Base+0x399>
  40654a:	lea    rax,[rip+0x3dcf]        # 40a320 <opterr@@Base>
  406551:	cmp    DWORD PTR [rax],0x0
  406554:	je     406573 <getopt_long_only@@Base+0x363>
  406556:	cmp    BYTE PTR [r13+0x0],0x3a
  40655b:	je     406573 <getopt_long_only@@Base+0x363>
  40655d:	lea    rdi,[rip+0x14dc]        # 407a40 <getopt_long_only@@Base+0x1830>
  406564:	mov    rsi,QWORD PTR [rsp+0x18]
  406569:	mov    rdx,rbx
  40656c:	xor    eax,eax
  40656e:	call   402170 <warnx@plt>
  406573:	xor    eax,eax
  406575:	cmp    QWORD PTR [r14+rbp*1+0x10],0x0
  40657b:	jne    406582 <getopt_long_only@@Base+0x372>
  40657d:	mov    eax,DWORD PTR [r14+rbp*1+0x18]
  406582:	lea    rcx,[rip+0x3d9f]        # 40a328 <optopt@@Base>
  406589:	lea    rdx,[rip+0x3d94]        # 40a324 <optind@@Base>
  406590:	dec    DWORD PTR [rdx]
  406592:	mov    DWORD PTR [rcx],eax
  406594:	xor    eax,eax
  406596:	cmp    BYTE PTR [r13+0x0],0x3a
  40659b:	setne  al
  40659e:	lea    eax,[rax+rax*4]
  4065a1:	add    eax,0x3a
  4065a4:	jmp    4064c2 <getopt_long_only@@Base+0x2b2>
  4065a9:	mov    rax,QWORD PTR [rsp+0x50]
  4065ae:	test   rax,rax
  4065b1:	je     4065b5 <getopt_long_only@@Base+0x3a5>
  4065b3:	mov    DWORD PTR [rax],esi
  4065b5:	mov    rcx,QWORD PTR [r14+rbp*1+0x10]
  4065ba:	mov    eax,DWORD PTR [r14+rbp*1+0x18]
  4065bf:	test   rcx,rcx
  4065c2:	je     4064c2 <getopt_long_only@@Base+0x2b2>
  4065c8:	mov    DWORD PTR [rcx],eax
  4065ca:	xor    eax,eax
  4065cc:	jmp    4064c2 <getopt_long_only@@Base+0x2b2>
  4065d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4065db:	nop    DWORD PTR [rax+rax*1+0x0]
  4065e0:	endbr64 
  4065e4:	push   r15
  4065e6:	lea    r15,[rip+0x3733]        # 409d20 <getopt_long_only@@Base+0x3b10>
  4065ed:	push   r14
  4065ef:	mov    r14,rdx
  4065f2:	push   r13
  4065f4:	mov    r13,rsi
  4065f7:	push   r12
  4065f9:	mov    r12d,edi
  4065fc:	push   rbp
  4065fd:	lea    rbp,[rip+0x3724]        # 409d28 <getopt_long_only@@Base+0x3b18>
  406604:	push   rbx
  406605:	sub    rbp,r15
  406608:	sub    rsp,0x8
  40660c:	call   402000 <Mat_VarGetNumberOfFields@plt-0x30>
  406611:	sar    rbp,0x3
  406615:	je     406636 <getopt_long_only@@Base+0x426>
  406617:	xor    ebx,ebx
  406619:	nop    DWORD PTR [rax+0x0]
  406620:	mov    rdx,r14
  406623:	mov    rsi,r13
  406626:	mov    edi,r12d
  406629:	call   QWORD PTR [r15+rbx*8]
  40662d:	add    rbx,0x1
  406631:	cmp    rbp,rbx
  406634:	jne    406620 <getopt_long_only@@Base+0x410>
  406636:	add    rsp,0x8
  40663a:	pop    rbx
  40663b:	pop    rbp
  40663c:	pop    r12
  40663e:	pop    r13
  406640:	pop    r14
  406642:	pop    r15
  406644:	ret    
  406645:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406650:	endbr64 
  406654:	ret    

Disassembly of section .fini:

0000000000406658 <.fini>:
  406658:	endbr64 
  40665c:	sub    rsp,0x8
  406660:	add    rsp,0x8
  406664:	ret    
