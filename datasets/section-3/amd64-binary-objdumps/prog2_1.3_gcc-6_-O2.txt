
../repos/prog2/1.3:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <fclose@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <fclose@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <fclose@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <fclose@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <fclose@plt-0x10>

0000000000401040 <__stack_chk_fail@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <__stack_chk_fail@GLIBC_2.4>
  401046:	push   0x1
  40104b:	jmp    401020 <fclose@plt-0x10>

0000000000401050 <fseek@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <fseek@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <fclose@plt-0x10>

0000000000401060 <__strcpy_chk@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <__strcpy_chk@GLIBC_2.3.4>
  401066:	push   0x3
  40106b:	jmp    401020 <fclose@plt-0x10>

0000000000401070 <__printf_chk@plt>:
  401070:	jmp    QWORD PTR [rip+0x2fc2]        # 404038 <__printf_chk@GLIBC_2.3.4>
  401076:	push   0x4
  40107b:	jmp    401020 <fclose@plt-0x10>

0000000000401080 <fopen@plt>:
  401080:	jmp    QWORD PTR [rip+0x2fba]        # 404040 <fopen@GLIBC_2.2.5>
  401086:	push   0x5
  40108b:	jmp    401020 <fclose@plt-0x10>

0000000000401090 <getc@plt>:
  401090:	jmp    QWORD PTR [rip+0x2fb2]        # 404048 <getc@GLIBC_2.2.5>
  401096:	push   0x6
  40109b:	jmp    401020 <fclose@plt-0x10>

Disassembly of section .text:

00000000004010a0 <main@@Base>:
  4010a0:	push   r14
  4010a2:	push   r13
  4010a4:	lea    rsi,[rip+0xf59]        # 402004 <_IO_stdin_used@@Base+0x4>
  4010ab:	push   r12
  4010ad:	push   rbp
  4010ae:	lea    rdi,[rip+0xf51]        # 402006 <_IO_stdin_used@@Base+0x6>
  4010b5:	push   rbx
  4010b6:	sub    rsp,0x8e0
  4010bd:	mov    rax,QWORD PTR fs:0x28
  4010c6:	mov    QWORD PTR [rsp+0x8d8],rax
  4010ce:	xor    eax,eax
  4010d0:	mov    r13,rsp
  4010d3:	lea    r12,[rsp+0x810]
  4010db:	call   401080 <fopen@plt>
  4010e0:	mov    rbp,rax
  4010e3:	jmp    4010ed <main@@Base+0x4d>
  4010e5:	nop    DWORD PTR [rax]
  4010e8:	cmp    eax,0x3c
  4010eb:	je     401130 <main@@Base+0x90>
  4010ed:	mov    rdi,rbp
  4010f0:	call   401090 <getc@plt>
  4010f5:	cmp    eax,0xffffffff
  4010f8:	jne    4010e8 <main@@Base+0x48>
  4010fa:	mov    rdi,rbp
  4010fd:	call   401030 <fclose@plt>
  401102:	xor    eax,eax
  401104:	mov    rcx,QWORD PTR [rsp+0x8d8]
  40110c:	xor    rcx,QWORD PTR fs:0x28
  401115:	jne    401248 <main@@Base+0x1a8>
  40111b:	add    rsp,0x8e0
  401122:	pop    rbx
  401123:	pop    rbp
  401124:	pop    r12
  401126:	pop    r13
  401128:	pop    r14
  40112a:	ret    
  40112b:	nop    DWORD PTR [rax+rax*1+0x0]
  401130:	mov    rdi,rbp
  401133:	call   401090 <getc@plt>
  401138:	cmp    eax,0x61
  40113b:	jne    4010ed <main@@Base+0x4d>
  40113d:	mov    esi,0xc8
  401142:	mov    rdi,r12
  401145:	xor    ebx,ebx
  401147:	call   401360 <esvaziastring@@Base>
  40114c:	mov    edx,0x1
  401151:	mov    esi,0x7
  401156:	mov    rdi,rbp
  401159:	call   401050 <fseek@plt>
  40115e:	jmp    401168 <main@@Base+0xc8>
  401160:	mov    BYTE PTR [r12+rbx*1],al
  401164:	add    rbx,0x1
  401168:	mov    rdi,rbp
  40116b:	movsxd r14,ebx
  40116e:	call   401090 <getc@plt>
  401173:	cmp    eax,0x22
  401176:	jne    401160 <main@@Base+0xc0>
  401178:	mov    edx,0xcd
  40117d:	mov    rsi,r12
  401180:	mov    rdi,r13
  401183:	mov    BYTE PTR [rsp+r14*1+0x810],0x0
  40118c:	xor    ebx,ebx
  40118e:	call   401060 <__strcpy_chk@plt>
  401193:	mov    esi,0xc8
  401198:	mov    rdi,r12
  40119b:	call   401360 <esvaziastring@@Base>
  4011a0:	mov    edx,0x1
  4011a5:	mov    esi,0x1
  4011aa:	mov    rdi,rbp
  4011ad:	call   401050 <fseek@plt>
  4011b2:	jmp    4011c5 <main@@Base+0x125>
  4011b4:	nop    DWORD PTR [rax+0x0]
  4011b8:	movsxd rdx,ebx
  4011bb:	mov    BYTE PTR [rsp+rdx*1+0x810],al
  4011c2:	add    ebx,0x1
  4011c5:	mov    rdi,rbp
  4011c8:	call   401090 <getc@plt>
  4011cd:	cmp    eax,0x3c
  4011d0:	je     4011f4 <main@@Base+0x154>
  4011d2:	cmp    eax,0xe1
  4011d7:	jne    4011b8 <main@@Base+0x118>
  4011d9:	movsxd rax,ebx
  4011dc:	add    ebx,0x1
  4011df:	mov    BYTE PTR [rsp+rax*1+0x810],0xc3
  4011e7:	movsxd rax,ebx
  4011ea:	mov    BYTE PTR [rsp+rax*1+0x810],0xa1
  4011f2:	jmp    4011c2 <main@@Base+0x122>
  4011f4:	movsxd rbx,ebx
  4011f7:	mov    edx,0xcd
  4011fc:	mov    rsi,r12
  4011ff:	mov    BYTE PTR [rsp+rbx*1+0x810],0x0
  401207:	lea    rbx,[r13+0xcd]
  40120e:	mov    rdi,rbx
  401211:	call   401060 <__strcpy_chk@plt>
  401216:	mov    esi,0x50
  40121b:	mov    rdi,r12
  40121e:	call   401360 <esvaziastring@@Base>
  401223:	lea    rsi,[rip+0xdf2]        # 40201c <_IO_stdin_used@@Base+0x1c>
  40122a:	mov    rcx,r13
  40122d:	mov    rdx,rbx
  401230:	mov    edi,0x1
  401235:	xor    eax,eax
  401237:	add    r13,0x19a
  40123e:	call   401070 <__printf_chk@plt>
  401243:	jmp    4010ed <main@@Base+0x4d>
  401248:	call   401040 <__stack_chk_fail@plt>
  40124d:	nop    DWORD PTR [rax]

0000000000401250 <_start@@Base>:
  401250:	endbr64 
  401254:	xor    ebp,ebp
  401256:	mov    r9,rdx
  401259:	pop    rsi
  40125a:	mov    rdx,rsp
  40125d:	and    rsp,0xfffffffffffffff0
  401261:	push   rax
  401262:	push   rsp
  401263:	mov    r8,0x4013f0
  40126a:	mov    rcx,0x401380
  401271:	mov    rdi,0x4010a0
  401278:	call   QWORD PTR [rip+0x2d72]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40127e:	hlt    
  40127f:	nop
  401280:	endbr64 
  401284:	ret    
  401285:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40128f:	nop
  401290:	mov    eax,0x404067
  401295:	push   rbp
  401296:	sub    rax,0x404060
  40129c:	cmp    rax,0xe
  4012a0:	mov    rbp,rsp
  4012a3:	jbe    4012c0 <_start@@Base+0x70>
  4012a5:	mov    eax,0x0
  4012aa:	test   rax,rax
  4012ad:	je     4012c0 <_start@@Base+0x70>
  4012af:	pop    rbp
  4012b0:	mov    edi,0x404060
  4012b5:	jmp    rax
  4012b7:	nop    WORD PTR [rax+rax*1+0x0]
  4012c0:	pop    rbp
  4012c1:	ret    
  4012c2:	nop    DWORD PTR [rax+0x0]
  4012c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012d0:	mov    esi,0x404060
  4012d5:	push   rbp
  4012d6:	sub    rsi,0x404060
  4012dd:	sar    rsi,0x3
  4012e1:	mov    rbp,rsp
  4012e4:	mov    rax,rsi
  4012e7:	shr    rax,0x3f
  4012eb:	add    rsi,rax
  4012ee:	sar    rsi,1
  4012f1:	je     401308 <_start@@Base+0xb8>
  4012f3:	mov    eax,0x0
  4012f8:	test   rax,rax
  4012fb:	je     401308 <_start@@Base+0xb8>
  4012fd:	pop    rbp
  4012fe:	mov    edi,0x404060
  401303:	jmp    rax
  401305:	nop    DWORD PTR [rax]
  401308:	pop    rbp
  401309:	ret    
  40130a:	nop    WORD PTR [rax+rax*1+0x0]
  401310:	cmp    BYTE PTR [rip+0x2d49],0x0        # 404060 <__bss_start@@Base>
  401317:	jne    40132a <_start@@Base+0xda>
  401319:	push   rbp
  40131a:	mov    rbp,rsp
  40131d:	call   401290 <_start@@Base+0x40>
  401322:	pop    rbp
  401323:	mov    BYTE PTR [rip+0x2d36],0x1        # 404060 <__bss_start@@Base>
  40132a:	repz ret 
  40132c:	nop    DWORD PTR [rax+0x0]
  401330:	mov    edi,0x403e18
  401335:	cmp    QWORD PTR [rdi],0x0
  401339:	jne    401340 <_start@@Base+0xf0>
  40133b:	jmp    4012d0 <_start@@Base+0x80>
  40133d:	nop    DWORD PTR [rax]
  401340:	mov    eax,0x0
  401345:	test   rax,rax
  401348:	je     40133b <_start@@Base+0xeb>
  40134a:	push   rbp
  40134b:	mov    rbp,rsp
  40134e:	call   rax
  401350:	pop    rbp
  401351:	jmp    4012d0 <_start@@Base+0x80>
  401356:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401360 <esvaziastring@@Base>:
  401360:	test   esi,esi
  401362:	jle    40137c <esvaziastring@@Base+0x1c>
  401364:	lea    eax,[rsi-0x1]
  401367:	lea    rax,[rdi+rax*1+0x1]
  40136c:	nop    DWORD PTR [rax+0x0]
  401370:	mov    BYTE PTR [rdi],0x0
  401373:	add    rdi,0x1
  401377:	cmp    rdi,rax
  40137a:	jne    401370 <esvaziastring@@Base+0x10>
  40137c:	repz ret 
  40137e:	xchg   ax,ax

0000000000401380 <__libc_csu_init@@Base>:
  401380:	endbr64 
  401384:	push   r15
  401386:	lea    r15,[rip+0x2a7b]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  40138d:	push   r14
  40138f:	mov    r14,rdx
  401392:	push   r13
  401394:	mov    r13,rsi
  401397:	push   r12
  401399:	mov    r12d,edi
  40139c:	push   rbp
  40139d:	lea    rbp,[rip+0x2a6c]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  4013a4:	push   rbx
  4013a5:	sub    rbp,r15
  4013a8:	sub    rsp,0x8
  4013ac:	call   401000 <fclose@plt-0x30>
  4013b1:	sar    rbp,0x3
  4013b5:	je     4013d6 <__libc_csu_init@@Base+0x56>
  4013b7:	xor    ebx,ebx
  4013b9:	nop    DWORD PTR [rax+0x0]
  4013c0:	mov    rdx,r14
  4013c3:	mov    rsi,r13
  4013c6:	mov    edi,r12d
  4013c9:	call   QWORD PTR [r15+rbx*8]
  4013cd:	add    rbx,0x1
  4013d1:	cmp    rbp,rbx
  4013d4:	jne    4013c0 <__libc_csu_init@@Base+0x40>
  4013d6:	add    rsp,0x8
  4013da:	pop    rbx
  4013db:	pop    rbp
  4013dc:	pop    r12
  4013de:	pop    r13
  4013e0:	pop    r14
  4013e2:	pop    r15
  4013e4:	ret    
  4013e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004013f0 <__libc_csu_fini@@Base>:
  4013f0:	endbr64 
  4013f4:	ret    

Disassembly of section .fini:

00000000004013f8 <.fini>:
  4013f8:	endbr64 
  4013fc:	sub    rsp,0x8
  401400:	add    rsp,0x8
  401404:	ret    
