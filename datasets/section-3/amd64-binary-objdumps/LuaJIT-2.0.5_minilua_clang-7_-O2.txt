
../repos/LuaJIT-2.0.5/src/host/minilua:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x2efd9]        # 430fe8 <__ctype_b_loc@plt+0x2ed18>
  40200f:	test   rax,rax
  402012:	je     402016 <__ctype_toupper_loc@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <__ctype_toupper_loc@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x2efe2]        # 431008 <__ctype_b_loc@plt+0x2ed38>
  402026:	jmp    QWORD PTR [rip+0x2efe4]        # 431010 <__ctype_b_loc@plt+0x2ed40>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <__ctype_toupper_loc@plt>:
  402030:	jmp    QWORD PTR [rip+0x2efe2]        # 431018 <__ctype_b_loc@plt+0x2ed48>
  402036:	push   0x0
  40203b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402040 <free@plt>:
  402040:	jmp    QWORD PTR [rip+0x2efda]        # 431020 <__ctype_b_loc@plt+0x2ed50>
  402046:	push   0x1
  40204b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402050 <__errno_location@plt>:
  402050:	jmp    QWORD PTR [rip+0x2efd2]        # 431028 <__ctype_b_loc@plt+0x2ed58>
  402056:	push   0x2
  40205b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402060 <strncpy@plt>:
  402060:	jmp    QWORD PTR [rip+0x2efca]        # 431030 <__ctype_b_loc@plt+0x2ed60>
  402066:	push   0x3
  40206b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402070 <remove@plt>:
  402070:	jmp    QWORD PTR [rip+0x2efc2]        # 431038 <__ctype_b_loc@plt+0x2ed68>
  402076:	push   0x4
  40207b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402080 <__isoc99_fscanf@plt>:
  402080:	jmp    QWORD PTR [rip+0x2efba]        # 431040 <__ctype_b_loc@plt+0x2ed70>
  402086:	push   0x5
  40208b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402090 <ferror@plt>:
  402090:	jmp    QWORD PTR [rip+0x2efb2]        # 431048 <__ctype_b_loc@plt+0x2ed78>
  402096:	push   0x6
  40209b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004020a0 <fread@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x2efaa]        # 431050 <__ctype_b_loc@plt+0x2ed80>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004020b0 <strtod@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x2efa2]        # 431058 <__ctype_b_loc@plt+0x2ed88>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004020c0 <pow@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x2ef9a]        # 431060 <__ctype_b_loc@plt+0x2ed90>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004020d0 <fclose@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x2ef92]        # 431068 <__ctype_b_loc@plt+0x2ed98>
  4020d6:	push   0xa
  4020db:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004020e0 <strlen@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x2ef8a]        # 431070 <__ctype_b_loc@plt+0x2eda0>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004020f0 <strchr@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x2ef82]        # 431078 <__ctype_b_loc@plt+0x2eda8>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402100 <memset@plt>:
  402100:	jmp    QWORD PTR [rip+0x2ef7a]        # 431080 <__ctype_b_loc@plt+0x2edb0>
  402106:	push   0xd
  40210b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402110 <freopen@plt>:
  402110:	jmp    QWORD PTR [rip+0x2ef72]        # 431088 <__ctype_b_loc@plt+0x2edb8>
  402116:	push   0xe
  40211b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402120 <strncat@plt>:
  402120:	jmp    QWORD PTR [rip+0x2ef6a]        # 431090 <__ctype_b_loc@plt+0x2edc0>
  402126:	push   0xf
  40212b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402130 <strcspn@plt>:
  402130:	jmp    QWORD PTR [rip+0x2ef62]        # 431098 <__ctype_b_loc@plt+0x2edc8>
  402136:	push   0x10
  40213b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402140 <memchr@plt>:
  402140:	jmp    QWORD PTR [rip+0x2ef5a]        # 4310a0 <__ctype_b_loc@plt+0x2edd0>
  402146:	push   0x11
  40214b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402150 <memcmp@plt>:
  402150:	jmp    QWORD PTR [rip+0x2ef52]        # 4310a8 <__ctype_b_loc@plt+0x2edd8>
  402156:	push   0x12
  40215b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402160 <fgets@plt>:
  402160:	jmp    QWORD PTR [rip+0x2ef4a]        # 4310b0 <__ctype_b_loc@plt+0x2ede0>
  402166:	push   0x13
  40216b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402170 <_setjmp@plt>:
  402170:	jmp    QWORD PTR [rip+0x2ef42]        # 4310b8 <__ctype_b_loc@plt+0x2ede8>
  402176:	push   0x14
  40217b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402180 <strcmp@plt>:
  402180:	jmp    QWORD PTR [rip+0x2ef3a]        # 4310c0 <__ctype_b_loc@plt+0x2edf0>
  402186:	push   0x15
  40218b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402190 <fprintf@plt>:
  402190:	jmp    QWORD PTR [rip+0x2ef32]        # 4310c8 <__ctype_b_loc@plt+0x2edf8>
  402196:	push   0x16
  40219b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004021a0 <feof@plt>:
  4021a0:	jmp    QWORD PTR [rip+0x2ef2a]        # 4310d0 <__ctype_b_loc@plt+0x2ee00>
  4021a6:	push   0x17
  4021ab:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004021b0 <clearerr@plt>:
  4021b0:	jmp    QWORD PTR [rip+0x2ef22]        # 4310d8 <__ctype_b_loc@plt+0x2ee08>
  4021b6:	push   0x18
  4021bb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004021c0 <memcpy@plt>:
  4021c0:	jmp    QWORD PTR [rip+0x2ef1a]        # 4310e0 <__ctype_b_loc@plt+0x2ee10>
  4021c6:	push   0x19
  4021cb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004021d0 <malloc@plt>:
  4021d0:	jmp    QWORD PTR [rip+0x2ef12]        # 4310e8 <__ctype_b_loc@plt+0x2ee18>
  4021d6:	push   0x1a
  4021db:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004021e0 <fflush@plt>:
  4021e0:	jmp    QWORD PTR [rip+0x2ef0a]        # 4310f0 <__ctype_b_loc@plt+0x2ee20>
  4021e6:	push   0x1b
  4021eb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004021f0 <ungetc@plt>:
  4021f0:	jmp    QWORD PTR [rip+0x2ef02]        # 4310f8 <__ctype_b_loc@plt+0x2ee28>
  4021f6:	push   0x1c
  4021fb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402200 <strcoll@plt>:
  402200:	jmp    QWORD PTR [rip+0x2eefa]        # 431100 <__ctype_b_loc@plt+0x2ee30>
  402206:	push   0x1d
  40220b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402210 <strpbrk@plt>:
  402210:	jmp    QWORD PTR [rip+0x2eef2]        # 431108 <__ctype_b_loc@plt+0x2ee38>
  402216:	push   0x1e
  40221b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402220 <realloc@plt>:
  402220:	jmp    QWORD PTR [rip+0x2eeea]        # 431110 <__ctype_b_loc@plt+0x2ee40>
  402226:	push   0x1f
  40222b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402230 <longjmp@plt>:
  402230:	jmp    QWORD PTR [rip+0x2eee2]        # 431118 <__ctype_b_loc@plt+0x2ee48>
  402236:	push   0x20
  40223b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402240 <fopen@plt>:
  402240:	jmp    QWORD PTR [rip+0x2eeda]        # 431120 <__ctype_b_loc@plt+0x2ee50>
  402246:	push   0x21
  40224b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402250 <strtoul@plt>:
  402250:	jmp    QWORD PTR [rip+0x2eed2]        # 431128 <__ctype_b_loc@plt+0x2ee58>
  402256:	push   0x22
  40225b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402260 <strcat@plt>:
  402260:	jmp    QWORD PTR [rip+0x2eeca]        # 431130 <__ctype_b_loc@plt+0x2ee60>
  402266:	push   0x23
  40226b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402270 <sprintf@plt>:
  402270:	jmp    QWORD PTR [rip+0x2eec2]        # 431138 <__ctype_b_loc@plt+0x2ee68>
  402276:	push   0x24
  40227b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402280 <exit@plt>:
  402280:	jmp    QWORD PTR [rip+0x2eeba]        # 431140 <__ctype_b_loc@plt+0x2ee70>
  402286:	push   0x25
  40228b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

0000000000402290 <fwrite@plt>:
  402290:	jmp    QWORD PTR [rip+0x2eeb2]        # 431148 <__ctype_b_loc@plt+0x2ee78>
  402296:	push   0x26
  40229b:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004022a0 <strerror@plt>:
  4022a0:	jmp    QWORD PTR [rip+0x2eeaa]        # 431150 <__ctype_b_loc@plt+0x2ee80>
  4022a6:	push   0x27
  4022ab:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004022b0 <getc@plt>:
  4022b0:	jmp    QWORD PTR [rip+0x2eea2]        # 431158 <__ctype_b_loc@plt+0x2ee88>
  4022b6:	push   0x28
  4022bb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004022c0 <__ctype_tolower_loc@plt>:
  4022c0:	jmp    QWORD PTR [rip+0x2ee9a]        # 431160 <__ctype_b_loc@plt+0x2ee90>
  4022c6:	push   0x29
  4022cb:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

00000000004022d0 <__ctype_b_loc@plt>:
  4022d0:	jmp    QWORD PTR [rip+0x2ee92]        # 431168 <__ctype_b_loc@plt+0x2ee98>
  4022d6:	push   0x2a
  4022db:	jmp    402020 <__ctype_toupper_loc@plt-0x10>

Disassembly of section .text:

00000000004022e0 <.text>:
  4022e0:	endbr64 
  4022e4:	xor    ebp,ebp
  4022e6:	mov    r9,rdx
  4022e9:	pop    rsi
  4022ea:	mov    rdx,rsp
  4022ed:	and    rsp,0xfffffffffffffff0
  4022f1:	push   rax
  4022f2:	push   rsp
  4022f3:	mov    r8,0x429150
  4022fa:	mov    rcx,0x4290e0
  402301:	mov    rdi,0x4023d0
  402308:	call   QWORD PTR [rip+0x2ecd2]        # 430fe0 <__ctype_b_loc@plt+0x2ed10>
  40230e:	hlt    
  40230f:	nop
  402310:	endbr64 
  402314:	ret    
  402315:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40231f:	nop
  402320:	mov    eax,0x431180
  402325:	cmp    rax,0x431180
  40232b:	je     402340 <__ctype_b_loc@plt+0x70>
  40232d:	mov    eax,0x0
  402332:	test   rax,rax
  402335:	je     402340 <__ctype_b_loc@plt+0x70>
  402337:	mov    edi,0x431180
  40233c:	jmp    rax
  40233e:	xchg   ax,ax
  402340:	ret    
  402341:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40234c:	nop    DWORD PTR [rax+0x0]
  402350:	mov    esi,0x431180
  402355:	sub    rsi,0x431180
  40235c:	mov    rax,rsi
  40235f:	shr    rsi,0x3f
  402363:	sar    rax,0x3
  402367:	add    rsi,rax
  40236a:	sar    rsi,1
  40236d:	je     402380 <__ctype_b_loc@plt+0xb0>
  40236f:	mov    eax,0x0
  402374:	test   rax,rax
  402377:	je     402380 <__ctype_b_loc@plt+0xb0>
  402379:	mov    edi,0x431180
  40237e:	jmp    rax
  402380:	ret    
  402381:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40238c:	nop    DWORD PTR [rax+0x0]
  402390:	endbr64 
  402394:	cmp    BYTE PTR [rip+0x2ede5],0x0        # 431180 <__ctype_b_loc@plt+0x2eeb0>
  40239b:	jne    4023b0 <__ctype_b_loc@plt+0xe0>
  40239d:	push   rbp
  40239e:	mov    rbp,rsp
  4023a1:	call   402320 <__ctype_b_loc@plt+0x50>
  4023a6:	mov    BYTE PTR [rip+0x2edd3],0x1        # 431180 <__ctype_b_loc@plt+0x2eeb0>
  4023ad:	pop    rbp
  4023ae:	ret    
  4023af:	nop
  4023b0:	ret    
  4023b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4023bc:	nop    DWORD PTR [rax+0x0]
  4023c0:	endbr64 
  4023c4:	jmp    402350 <__ctype_b_loc@plt+0x80>
  4023c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4023d0:	push   rbp
  4023d1:	push   r15
  4023d3:	push   r14
  4023d5:	push   r13
  4023d7:	push   r12
  4023d9:	push   rbx
  4023da:	sub    rsp,0x38
  4023de:	mov    r15,rsi
  4023e1:	mov    DWORD PTR [rsp+0x4],edi
  4023e5:	mov    edi,0x268
  4023ea:	call   4021d0 <malloc@plt>
  4023ef:	test   rax,rax
  4023f2:	je     40257b <__ctype_b_loc@plt+0x2ab>
  4023f8:	mov    r13,rax
  4023fb:	lea    rax,[rax+0xb8]
  402402:	mov    QWORD PTR [r13+0x0],0x0
  40240a:	mov    WORD PTR [r13+0x8],0x6108
  402411:	mov    BYTE PTR [r13+0xd8],0x21
  402419:	mov    QWORD PTR [r13+0x20],rax
  40241d:	mov    QWORD PTR [r13+0x40],0x0
  402425:	mov    DWORD PTR [r13+0x58],0x0
  40242d:	vxorps xmm0,xmm0,xmm0
  402431:	vmovups XMMWORD PTR [r13+0xa8],xmm0
  40243a:	mov    WORD PTR [r13+0x64],0x100
  402441:	vmovups XMMWORD PTR [r13+0x68],xmm0
  402447:	mov    QWORD PTR [r13+0x98],0x0
  402452:	mov    BYTE PTR [r13+0xa],0x0
  402457:	mov    QWORD PTR [r13+0x50],0x0
  40245f:	mov    DWORD PTR [r13+0x80],0x0
  40246a:	vmovups XMMWORD PTR [r13+0x28],xmm0
  402470:	mov    QWORD PTR [r13+0x5c],0x0
  402478:	lea    rax,[rip+0xe01]        # 403280 <__ctype_b_loc@plt+0xfb0>
  40247f:	mov    QWORD PTR [r13+0xc8],rax
  402486:	mov    QWORD PTR [r13+0xd0],0x0
  402491:	mov    QWORD PTR [r13+0x168],r13
  402498:	lea    rax,[r13+0x170]
  40249f:	mov    QWORD PTR [r13+0x188],rax
  4024a6:	mov    QWORD PTR [r13+0x190],rax
  4024ad:	vmovups XMMWORD PTR [r13+0xb8],xmm0
  4024b6:	mov    DWORD PTR [r13+0x160],0x0
  4024c1:	mov    QWORD PTR [r13+0x110],0x0
  4024cc:	mov    QWORD PTR [r13+0x150],0x0
  4024d7:	mov    BYTE PTR [r13+0xd9],0x0
  4024df:	mov    rax,r13
  4024e2:	add    rax,0xe0
  4024e8:	vmovups XMMWORD PTR [r13+0x120],xmm0
  4024f1:	mov    QWORD PTR [r13+0xe0],r13
  4024f8:	mov    DWORD PTR [r13+0xdc],0x0
  402503:	mov    QWORD PTR [r13+0xe8],rax
  40250a:	vxorps xmm0,xmm0,xmm0
  40250e:	vmovups YMMWORD PTR [r13+0xf0],ymm0
  402517:	mov    QWORD PTR [r13+0x130],0x268
  402522:	movabs rax,0xc8000000c8
  40252c:	mov    QWORD PTR [r13+0x148],rax
  402533:	mov    QWORD PTR [r13+0x140],0x0
  40253e:	vmovups YMMWORD PTR [r13+0x1b8],ymm0
  402547:	vmovups YMMWORD PTR [r13+0x198],ymm0
  402550:	mov    QWORD PTR [r13+0x1d8],0x0
  40255b:	lea    rsi,[rip+0xe5e]        # 4033c0 <__ctype_b_loc@plt+0x10f0>
  402562:	xor    edx,edx
  402564:	mov    rdi,r13
  402567:	vzeroupper 
  40256a:	call   403350 <__ctype_b_loc@plt+0x1080>
  40256f:	test   eax,eax
  402571:	je     402580 <__ctype_b_loc@plt+0x2b0>
  402573:	mov    rdi,r13
  402576:	call   4035f0 <__ctype_b_loc@plt+0x1320>
  40257b:	xor    r13d,r13d
  40257e:	jmp    402592 <__ctype_b_loc@plt+0x2c2>
  402580:	mov    rax,QWORD PTR [r13+0x20]
  402584:	lea    rcx,[rip+0xd15]        # 4032a0 <__ctype_b_loc@plt+0xfd0>
  40258b:	mov    QWORD PTR [rax+0x98],rcx
  402592:	lea    rbx,[rip+0x2e537]        # 430ad0 <__ctype_b_loc@plt+0x2e800>
  402599:	lea    rsi,[rip+0x97e0]        # 40bd80 <__ctype_b_loc@plt+0x9ab0>
  4025a0:	xor    edx,edx
  4025a2:	mov    rdi,r13
  4025a5:	call   40bb90 <__ctype_b_loc@plt+0x98c0>
  4025aa:	mov    rbp,QWORD PTR [rbx]
  4025ad:	test   rbp,rbp
  4025b0:	je     402600 <__ctype_b_loc@plt+0x330>
  4025b2:	mov    rdi,rbp
  4025b5:	call   4020e0 <strlen@plt>
  4025ba:	mov    r12,rax
  4025bd:	mov    rax,QWORD PTR [r13+0x20]
  4025c1:	mov    rcx,QWORD PTR [rax+0x78]
  4025c5:	cmp    rcx,QWORD PTR [rax+0x70]
  4025c9:	jb     4025d3 <__ctype_b_loc@plt+0x303>
  4025cb:	mov    rdi,r13
  4025ce:	call   408070 <__ctype_b_loc@plt+0x5da0>
  4025d3:	mov    r14,QWORD PTR [r13+0x10]
  4025d7:	mov    rdi,r13
  4025da:	mov    rsi,rbp
  4025dd:	mov    rdx,r12
  4025e0:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  4025e5:	mov    QWORD PTR [r14],rax
  4025e8:	mov    DWORD PTR [r14+0x8],0x4
  4025f0:	mov    rsi,QWORD PTR [r13+0x10]
  4025f4:	jmp    40260b <__ctype_b_loc@plt+0x33b>
  4025f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402600:	mov    rsi,QWORD PTR [r13+0x10]
  402604:	mov    DWORD PTR [rsi+0x8],0x0
  40260b:	lea    rax,[rsi+0x10]
  40260f:	mov    QWORD PTR [r13+0x10],rax
  402613:	add    rsi,0xfffffffffffffff0
  402617:	xor    edx,edx
  402619:	mov    rdi,r13
  40261c:	call   404ff0 <__ctype_b_loc@plt+0x2d20>
  402621:	mov    rsi,QWORD PTR [rbx+0x18]
  402625:	add    rbx,0x10
  402629:	test   rsi,rsi
  40262c:	jne    4025a0 <__ctype_b_loc@plt+0x2d0>
  402632:	lea    rsi,[rip+0x293cc]        # 42ba05 <__ctype_b_loc@plt+0x29735>
  402639:	lea    rdx,[rip+0x2e1d0]        # 430810 <__ctype_b_loc@plt+0x2e540>
  402640:	mov    rdi,r13
  402643:	call   402960 <__ctype_b_loc@plt+0x690>
  402648:	mov    eax,0x8
  40264d:	cmp    DWORD PTR [rsp+0x4],0x2
  402652:	jl     4028b5 <__ctype_b_loc@plt+0x5e5>
  402658:	mov    rax,QWORD PTR [r13+0x20]
  40265c:	mov    rcx,QWORD PTR [rax+0x78]
  402660:	cmp    rcx,QWORD PTR [rax+0x70]
  402664:	jb     40266e <__ctype_b_loc@plt+0x39e>
  402666:	mov    rdi,r13
  402669:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40266e:	mov    rbx,QWORD PTR [r13+0x10]
  402672:	xor    esi,esi
  402674:	mov    edx,0x1
  402679:	mov    rdi,r13
  40267c:	call   403720 <__ctype_b_loc@plt+0x1450>
  402681:	mov    QWORD PTR [rbx],rax
  402684:	mov    DWORD PTR [rbx+0x8],0x5
  40268b:	mov    rax,QWORD PTR [r13+0x10]
  40268f:	lea    rbx,[rax+0x10]
  402693:	mov    QWORD PTR [r13+0x10],rbx
  402697:	mov    rbp,QWORD PTR [r15+0x8]
  40269b:	test   rbp,rbp
  40269e:	je     4026e3 <__ctype_b_loc@plt+0x413>
  4026a0:	mov    rdi,rbp
  4026a3:	call   4020e0 <strlen@plt>
  4026a8:	mov    r12,rax
  4026ab:	mov    rax,QWORD PTR [r13+0x20]
  4026af:	mov    rcx,QWORD PTR [rax+0x78]
  4026b3:	cmp    rcx,QWORD PTR [rax+0x70]
  4026b7:	jb     4026c5 <__ctype_b_loc@plt+0x3f5>
  4026b9:	mov    rdi,r13
  4026bc:	call   408070 <__ctype_b_loc@plt+0x5da0>
  4026c1:	mov    rbx,QWORD PTR [r13+0x10]
  4026c5:	mov    rdi,r13
  4026c8:	mov    rsi,rbp
  4026cb:	mov    rdx,r12
  4026ce:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  4026d3:	mov    QWORD PTR [rbx],rax
  4026d6:	mov    DWORD PTR [rbx+0x8],0x4
  4026dd:	mov    rbx,QWORD PTR [r13+0x10]
  4026e1:	jmp    4026ea <__ctype_b_loc@plt+0x41a>
  4026e3:	mov    DWORD PTR [rax+0x18],0x0
  4026ea:	add    rbx,0x10
  4026ee:	mov    QWORD PTR [r13+0x10],rbx
  4026f2:	mov    esi,0xfffffffe
  4026f7:	xor    edx,edx
  4026f9:	mov    rdi,r13
  4026fc:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  402701:	lea    rbx,[r13+0x78]
  402705:	lea    rsi,[rip+0x28674]        # 42ad80 <__ctype_b_loc@plt+0x28ab0>
  40270c:	mov    edx,0x3
  402711:	mov    rdi,r13
  402714:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  402719:	mov    QWORD PTR [rsp+0x10],rax
  40271e:	mov    DWORD PTR [rsp+0x18],0x4
  402726:	mov    rcx,QWORD PTR [r13+0x10]
  40272a:	add    rcx,0xfffffffffffffff0
  40272e:	lea    rdx,[rsp+0x10]
  402733:	mov    rdi,r13
  402736:	mov    rsi,rbx
  402739:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40273e:	add    QWORD PTR [r13+0x10],0xfffffffffffffff0
  402743:	mov    rsi,QWORD PTR [r15+0x8]
  402747:	mov    rdi,r13
  40274a:	call   402d80 <__ctype_b_loc@plt+0xab0>
  40274f:	test   eax,eax
  402751:	jne    4028c4 <__ctype_b_loc@plt+0x5f4>
  402757:	mov    eax,DWORD PTR [rsp+0x4]
  40275b:	cmp    eax,0x2
  40275e:	jle    402800 <__ctype_b_loc@plt+0x530>
  402764:	mov    eax,eax
  402766:	mov    QWORD PTR [rsp+0x8],rax
  40276b:	mov    r14d,0x2
  402771:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40277b:	nop    DWORD PTR [rax+rax*1+0x0]
  402780:	mov    rbp,QWORD PTR [r15+r14*8]
  402784:	test   rbp,rbp
  402787:	je     4027e0 <__ctype_b_loc@plt+0x510>
  402789:	mov    r12,r15
  40278c:	mov    rdi,rbp
  40278f:	call   4020e0 <strlen@plt>
  402794:	mov    rbx,rax
  402797:	mov    rax,QWORD PTR [r13+0x20]
  40279b:	mov    rcx,QWORD PTR [rax+0x78]
  40279f:	cmp    rcx,QWORD PTR [rax+0x70]
  4027a3:	jb     4027ad <__ctype_b_loc@plt+0x4dd>
  4027a5:	mov    rdi,r13
  4027a8:	call   408070 <__ctype_b_loc@plt+0x5da0>
  4027ad:	mov    r15,QWORD PTR [r13+0x10]
  4027b1:	mov    rdi,r13
  4027b4:	mov    rsi,rbp
  4027b7:	mov    rdx,rbx
  4027ba:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  4027bf:	mov    QWORD PTR [r15],rax
  4027c2:	mov    DWORD PTR [r15+0x8],0x4
  4027ca:	mov    rcx,QWORD PTR [r13+0x10]
  4027ce:	mov    r15,r12
  4027d1:	jmp    4027eb <__ctype_b_loc@plt+0x51b>
  4027d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027dd:	nop    DWORD PTR [rax]
  4027e0:	mov    rcx,QWORD PTR [r13+0x10]
  4027e4:	mov    DWORD PTR [rcx+0x8],0x0
  4027eb:	add    rcx,0x10
  4027ef:	mov    QWORD PTR [r13+0x10],rcx
  4027f3:	add    r14,0x1
  4027f7:	cmp    QWORD PTR [rsp+0x8],r14
  4027fc:	jne    402780 <__ctype_b_loc@plt+0x4b0>
  4027fe:	jmp    402804 <__ctype_b_loc@plt+0x534>
  402800:	mov    rcx,QWORD PTR [r13+0x10]
  402804:	movsxd rax,DWORD PTR [rsp+0x4]
  402809:	shl    rax,0x4
  40280d:	add    rax,0xfffffffffffffff0
  402811:	sub    rcx,rax
  402814:	mov    QWORD PTR [rsp+0x10],rcx
  402819:	mov    DWORD PTR [rsp+0x18],0x0
  402821:	sub    rcx,QWORD PTR [r13+0x40]
  402825:	lea    rsi,[rip+0x26874]        # 4290a0 <__ctype_b_loc@plt+0x26dd0>
  40282c:	lea    rdx,[rsp+0x10]
  402831:	xor    r8d,r8d
  402834:	mov    rdi,r13
  402837:	call   410d90 <__ctype_b_loc@plt+0xeac0>
  40283c:	test   eax,eax
  40283e:	jne    4028c4 <__ctype_b_loc@plt+0x5f4>
  402844:	mov    rax,QWORD PTR [r13+0x20]
  402848:	mov    rbx,QWORD PTR [rax+0xb0]
  40284f:	mov    rsi,QWORD PTR [rbx+0x40]
  402853:	mov    rdi,rbx
  402856:	call   403e60 <__ctype_b_loc@plt+0x1b90>
  40285b:	mov    esi,0x1
  402860:	mov    rdi,rbx
  402863:	call   40b940 <__ctype_b_loc@plt+0x9670>
  402868:	mov    QWORD PTR [rbx+0xb0],0x0
  402873:	lea    rbp,[rip+0x26836]        # 4290b0 <__ctype_b_loc@plt+0x26de0>
  40287a:	nop    WORD PTR [rax+rax*1+0x0]
  402880:	mov    rax,QWORD PTR [rbx+0x50]
  402884:	mov    QWORD PTR [rbx+0x28],rax
  402888:	mov    rax,QWORD PTR [rax]
  40288b:	mov    QWORD PTR [rbx+0x10],rax
  40288f:	mov    QWORD PTR [rbx+0x18],rax
  402893:	mov    DWORD PTR [rbx+0x60],0x0
  40289a:	xor    edx,edx
  40289c:	mov    rdi,rbx
  40289f:	mov    rsi,rbp
  4028a2:	call   403350 <__ctype_b_loc@plt+0x1080>
  4028a7:	test   eax,eax
  4028a9:	jne    402880 <__ctype_b_loc@plt+0x5b0>
  4028ab:	mov    rdi,rbx
  4028ae:	call   4035f0 <__ctype_b_loc@plt+0x1320>
  4028b3:	xor    eax,eax
  4028b5:	add    rsp,0x38
  4028b9:	pop    rbx
  4028ba:	pop    r12
  4028bc:	pop    r13
  4028be:	pop    r14
  4028c0:	pop    r15
  4028c2:	pop    rbp
  4028c3:	ret    
  4028c4:	mov    rax,QWORD PTR [rip+0x2e725]        # 430ff0 <__ctype_b_loc@plt+0x2ed20>
  4028cb:	mov    rbp,QWORD PTR [rax]
  4028ce:	mov    rbx,QWORD PTR [r13+0x10]
  4028d2:	mov    eax,DWORD PTR [rbx-0x8]
  4028d5:	cmp    eax,0x4
  4028d8:	je     402935 <__ctype_b_loc@plt+0x665>
  4028da:	cmp    eax,0x3
  4028dd:	jne    402942 <__ctype_b_loc@plt+0x672>
  4028df:	vmovsd xmm0,QWORD PTR [rbx-0x10]
  4028e4:	lea    rsi,[rip+0x28536]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  4028eb:	lea    r14,[rsp+0x10]
  4028f0:	mov    al,0x1
  4028f2:	mov    rdi,r14
  4028f5:	call   402270 <sprintf@plt>
  4028fa:	mov    rdi,r14
  4028fd:	call   4020e0 <strlen@plt>
  402902:	mov    rdi,r13
  402905:	mov    rsi,r14
  402908:	mov    rdx,rax
  40290b:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  402910:	mov    QWORD PTR [rbx-0x10],rax
  402914:	mov    DWORD PTR [rbx-0x8],0x4
  40291b:	mov    rax,QWORD PTR [r13+0x20]
  40291f:	mov    rcx,QWORD PTR [rax+0x78]
  402923:	cmp    rcx,QWORD PTR [rax+0x70]
  402927:	jb     402931 <__ctype_b_loc@plt+0x661>
  402929:	mov    rdi,r13
  40292c:	call   408070 <__ctype_b_loc@plt+0x5da0>
  402931:	mov    rbx,QWORD PTR [r13+0x10]
  402935:	add    rbx,0xfffffffffffffff0
  402939:	mov    rdx,QWORD PTR [rbx]
  40293c:	add    rdx,0x18
  402940:	jmp    402944 <__ctype_b_loc@plt+0x674>
  402942:	xor    edx,edx
  402944:	lea    rsi,[rip+0x28439]        # 42ad84 <__ctype_b_loc@plt+0x28ab4>
  40294b:	xor    eax,eax
  40294d:	mov    rdi,rbp
  402950:	call   402190 <fprintf@plt>
  402955:	mov    eax,0x1
  40295a:	jmp    4028b5 <__ctype_b_loc@plt+0x5e5>
  40295f:	nop
  402960:	push   rbp
  402961:	push   r15
  402963:	push   r14
  402965:	push   r13
  402967:	push   r12
  402969:	push   rbx
  40296a:	sub    rsp,0x18
  40296e:	mov    r13,rdx
  402971:	mov    r14,rdi
  402974:	test   rsi,rsi
  402977:	je     402b01 <__ctype_b_loc@plt+0x831>
  40297d:	mov    r15,rsi
  402980:	cmp    QWORD PTR [r13+0x0],0x0
  402985:	je     40299f <__ctype_b_loc@plt+0x6cf>
  402987:	lea    rax,[r13+0x10]
  40298b:	xor    ebp,ebp
  40298d:	nop    DWORD PTR [rax]
  402990:	add    ebp,0x1
  402993:	cmp    QWORD PTR [rax],0x0
  402997:	lea    rax,[rax+0x10]
  40299b:	jne    402990 <__ctype_b_loc@plt+0x6c0>
  40299d:	jmp    4029a1 <__ctype_b_loc@plt+0x6d1>
  40299f:	xor    ebp,ebp
  4029a1:	lea    rdx,[rip+0x29035]        # 42b9dd <__ctype_b_loc@plt+0x2970d>
  4029a8:	mov    esi,0xffffd8f0
  4029ad:	mov    ecx,0x1
  4029b2:	mov    rdi,r14
  4029b5:	call   4281f0 <__ctype_b_loc@plt+0x25f20>
  4029ba:	mov    r12,QWORD PTR [r14+0x10]
  4029be:	add    r12,0xfffffffffffffff0
  4029c2:	mov    rdi,r15
  4029c5:	call   4020e0 <strlen@plt>
  4029ca:	mov    rdi,r14
  4029cd:	mov    rsi,r15
  4029d0:	mov    rdx,rax
  4029d3:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  4029d8:	mov    QWORD PTR [rsp+0x8],rax
  4029dd:	mov    DWORD PTR [rsp+0x10],0x4
  4029e5:	mov    rcx,QWORD PTR [r14+0x10]
  4029e9:	lea    rdx,[rsp+0x8]
  4029ee:	mov    rdi,r14
  4029f1:	mov    rsi,r12
  4029f4:	call   408700 <__ctype_b_loc@plt+0x6430>
  4029f9:	mov    rcx,QWORD PTR [r14+0x10]
  4029fd:	lea    rax,[rcx+0x10]
  402a01:	mov    QWORD PTR [r14+0x10],rax
  402a05:	lea    rdx,[rip+0x2810c]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  402a0c:	cmp    rcx,rdx
  402a0f:	je     402a1b <__ctype_b_loc@plt+0x74b>
  402a11:	cmp    DWORD PTR [rcx+0x8],0x5
  402a15:	je     402ab2 <__ctype_b_loc@plt+0x7e2>
  402a1b:	mov    QWORD PTR [r14+0x10],rcx
  402a1f:	mov    esi,0xffffd8ee
  402a24:	mov    rdi,r14
  402a27:	mov    rdx,r15
  402a2a:	mov    ecx,ebp
  402a2c:	call   4281f0 <__ctype_b_loc@plt+0x25f20>
  402a31:	test   rax,rax
  402a34:	je     402a4a <__ctype_b_loc@plt+0x77a>
  402a36:	lea    rsi,[rip+0x28fa8]        # 42b9e5 <__ctype_b_loc@plt+0x29715>
  402a3d:	xor    eax,eax
  402a3f:	mov    rdi,r14
  402a42:	mov    rdx,r15
  402a45:	call   410070 <__ctype_b_loc@plt+0xdda0>
  402a4a:	mov    rax,QWORD PTR [r14+0x10]
  402a4e:	mov    rcx,QWORD PTR [rax-0x10]
  402a52:	mov    QWORD PTR [rax],rcx
  402a55:	mov    ecx,DWORD PTR [rax-0x8]
  402a58:	mov    DWORD PTR [rax+0x8],ecx
  402a5b:	mov    rbp,QWORD PTR [r14+0x10]
  402a5f:	lea    rax,[rbp+0x10]
  402a63:	mov    QWORD PTR [r14+0x10],rax
  402a67:	add    rbp,0xffffffffffffffe0
  402a6b:	mov    rdi,r15
  402a6e:	call   4020e0 <strlen@plt>
  402a73:	mov    rdi,r14
  402a76:	mov    rsi,r15
  402a79:	mov    rdx,rax
  402a7c:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  402a81:	mov    QWORD PTR [rsp+0x8],rax
  402a86:	mov    DWORD PTR [rsp+0x10],0x4
  402a8e:	mov    rcx,QWORD PTR [r14+0x10]
  402a92:	add    rcx,0xfffffffffffffff0
  402a96:	lea    rdx,[rsp+0x8]
  402a9b:	mov    rdi,r14
  402a9e:	mov    rsi,rbp
  402aa1:	call   408b60 <__ctype_b_loc@plt+0x6890>
  402aa6:	mov    rax,QWORD PTR [r14+0x10]
  402aaa:	add    rax,0xfffffffffffffff0
  402aae:	mov    QWORD PTR [r14+0x10],rax
  402ab2:	add    rax,0xfffffffffffffff0
  402ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ac0:	mov    rcx,QWORD PTR [rax]
  402ac3:	mov    QWORD PTR [rax-0x10],rcx
  402ac7:	mov    ecx,DWORD PTR [rax+0x8]
  402aca:	mov    DWORD PTR [rax-0x8],ecx
  402acd:	mov    rcx,QWORD PTR [r14+0x10]
  402ad1:	add    rax,0x10
  402ad5:	cmp    rax,rcx
  402ad8:	jb     402ac0 <__ctype_b_loc@plt+0x7f0>
  402ada:	lea    rax,[rcx-0x10]
  402ade:	mov    QWORD PTR [r14+0x10],rax
  402ae2:	mov    rax,QWORD PTR [rcx-0x20]
  402ae6:	mov    QWORD PTR [rcx-0x10],rax
  402aea:	mov    eax,DWORD PTR [rcx-0x18]
  402aed:	mov    DWORD PTR [rcx-0x8],eax
  402af0:	mov    rax,QWORD PTR [r14+0x10]
  402af4:	mov    rdx,QWORD PTR [rax]
  402af7:	mov    QWORD PTR [rcx-0x20],rdx
  402afb:	mov    eax,DWORD PTR [rax+0x8]
  402afe:	mov    DWORD PTR [rcx-0x18],eax
  402b01:	cmp    QWORD PTR [r13+0x0],0x0
  402b06:	je     402b83 <__ctype_b_loc@plt+0x8b3>
  402b08:	add    r13,0x10
  402b0c:	lea    r15,[rsp+0x8]
  402b11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  402b20:	mov    rsi,QWORD PTR [r13-0x8]
  402b24:	xor    edx,edx
  402b26:	mov    rdi,r14
  402b29:	call   40bb90 <__ctype_b_loc@plt+0x98c0>
  402b2e:	mov    rbp,QWORD PTR [r13-0x10]
  402b32:	mov    rbx,QWORD PTR [r14+0x10]
  402b36:	add    rbx,0xffffffffffffffe0
  402b3a:	mov    rdi,rbp
  402b3d:	call   4020e0 <strlen@plt>
  402b42:	mov    rdi,r14
  402b45:	mov    rsi,rbp
  402b48:	mov    rdx,rax
  402b4b:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  402b50:	mov    QWORD PTR [rsp+0x8],rax
  402b55:	mov    DWORD PTR [rsp+0x10],0x4
  402b5d:	mov    rcx,QWORD PTR [r14+0x10]
  402b61:	add    rcx,0xfffffffffffffff0
  402b65:	mov    rdi,r14
  402b68:	mov    rsi,rbx
  402b6b:	mov    rdx,r15
  402b6e:	call   408b60 <__ctype_b_loc@plt+0x6890>
  402b73:	add    QWORD PTR [r14+0x10],0xfffffffffffffff0
  402b78:	cmp    QWORD PTR [r13+0x0],0x0
  402b7d:	lea    r13,[r13+0x10]
  402b81:	jne    402b20 <__ctype_b_loc@plt+0x850>
  402b83:	add    rsp,0x18
  402b87:	pop    rbx
  402b88:	pop    r12
  402b8a:	pop    r13
  402b8c:	pop    r14
  402b8e:	pop    r15
  402b90:	pop    rbp
  402b91:	ret    
  402b92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b9c:	nop    DWORD PTR [rax+0x0]
  402ba0:	push   r15
  402ba2:	push   r14
  402ba4:	push   rbx
  402ba5:	sub    rsp,0x10
  402ba9:	mov    ecx,edx
  402bab:	mov    rbx,rdi
  402bae:	test   esi,esi
  402bb0:	jle    402bd8 <__ctype_b_loc@plt+0x908>
  402bb2:	mov    rax,QWORD PTR [rbx+0x18]
  402bb6:	movsxd rdx,esi
  402bb9:	shl    rdx,0x4
  402bbd:	add    rax,rdx
  402bc0:	add    rax,0xfffffffffffffff0
  402bc4:	cmp    rax,QWORD PTR [rbx+0x10]
  402bc8:	lea    r14,[rip+0x27f49]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  402bcf:	cmovb  r14,rax
  402bd3:	jmp    402c75 <__ctype_b_loc@plt+0x9a5>
  402bd8:	cmp    esi,0xffffd8f1
  402bde:	jl     402bf0 <__ctype_b_loc@plt+0x920>
  402be0:	movsxd r14,esi
  402be3:	shl    r14,0x4
  402be7:	add    r14,QWORD PTR [rbx+0x10]
  402beb:	jmp    402c75 <__ctype_b_loc@plt+0x9a5>
  402bf0:	cmp    esi,0xffffd8ee
  402bf6:	je     402c14 <__ctype_b_loc@plt+0x944>
  402bf8:	cmp    esi,0xffffd8ef
  402bfe:	je     402c1a <__ctype_b_loc@plt+0x94a>
  402c00:	cmp    esi,0xffffd8f0
  402c06:	jne    402c43 <__ctype_b_loc@plt+0x973>
  402c08:	mov    r14d,0xa0
  402c0e:	add    r14,QWORD PTR [rbx+0x20]
  402c12:	jmp    402c75 <__ctype_b_loc@plt+0x9a5>
  402c14:	lea    r14,[rbx+0x78]
  402c18:	jmp    402c75 <__ctype_b_loc@plt+0x9a5>
  402c1a:	mov    rax,QWORD PTR [rbx+0x28]
  402c1e:	mov    rax,QWORD PTR [rax+0x8]
  402c22:	mov    rax,QWORD PTR [rax]
  402c25:	lea    r14,[rbx+0x88]
  402c2c:	mov    rax,QWORD PTR [rax+0x18]
  402c30:	mov    QWORD PTR [rbx+0x88],rax
  402c37:	mov    DWORD PTR [rbx+0x90],0x5
  402c41:	jmp    402c75 <__ctype_b_loc@plt+0x9a5>
  402c43:	mov    rax,QWORD PTR [rbx+0x28]
  402c47:	mov    rax,QWORD PTR [rax+0x8]
  402c4b:	mov    rax,QWORD PTR [rax]
  402c4e:	mov    edx,0xffffd8ee
  402c53:	sub    edx,esi
  402c55:	movzx  esi,BYTE PTR [rax+0xb]
  402c59:	cmp    edx,esi
  402c5b:	jle    402c66 <__ctype_b_loc@plt+0x996>
  402c5d:	lea    r14,[rip+0x27eb4]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  402c64:	jmp    402c75 <__ctype_b_loc@plt+0x9a5>
  402c66:	movsxd rdx,edx
  402c69:	shl    rdx,0x4
  402c6d:	lea    r14,[rax+rdx*1]
  402c71:	add    r14,0x18
  402c75:	mov    r15,QWORD PTR [rbx+0x10]
  402c79:	mov    rsi,QWORD PTR [r14]
  402c7c:	lea    eax,[rcx-0x1]
  402c7f:	cmp    eax,DWORD PTR [rsi+0x38]
  402c82:	jae    402c90 <__ctype_b_loc@plt+0x9c0>
  402c84:	cdqe   
  402c86:	shl    rax,0x4
  402c8a:	add    rax,QWORD PTR [rsi+0x18]
  402c8e:	jmp    402cfe <__ctype_b_loc@plt+0xa2e>
  402c90:	vcvtsi2sd xmm0,xmm0,ecx
  402c94:	test   ecx,ecx
  402c96:	je     402cd6 <__ctype_b_loc@plt+0xa06>
  402c98:	vmovq  rdx,xmm0
  402c9d:	mov    rax,rdx
  402ca0:	shr    rax,0x20
  402ca4:	add    eax,edx
  402ca6:	mov    dl,BYTE PTR [rsi+0xb]
  402ca9:	mov    rdi,0xffffffffffffffff
  402cb0:	shlx   rdi,rdi,rdx
  402cb5:	or     rdi,0x1
  402cb9:	xor    rdi,0xfffffffffffffffe
  402cbd:	xor    edx,edx
  402cbf:	div    rdi
  402cc2:	lea    rax,[rdx+rdx*4]
  402cc6:	shl    rax,0x3
  402cca:	add    rax,QWORD PTR [rsi+0x20]
  402cce:	cmp    DWORD PTR [rax+0x18],0x3
  402cd2:	jne    402cf3 <__ctype_b_loc@plt+0xa23>
  402cd4:	jmp    402ce6 <__ctype_b_loc@plt+0xa16>
  402cd6:	mov    rax,QWORD PTR [rsi+0x20]
  402cda:	nop    WORD PTR [rax+rax*1+0x0]
  402ce0:	cmp    DWORD PTR [rax+0x18],0x3
  402ce4:	jne    402cf3 <__ctype_b_loc@plt+0xa23>
  402ce6:	vmovsd xmm1,QWORD PTR [rax+0x10]
  402ceb:	vucomisd xmm1,xmm0
  402cef:	jne    402cf3 <__ctype_b_loc@plt+0xa23>
  402cf1:	jnp    402cfe <__ctype_b_loc@plt+0xa2e>
  402cf3:	mov    rax,QWORD PTR [rax+0x20]
  402cf7:	test   rax,rax
  402cfa:	jne    402ce0 <__ctype_b_loc@plt+0xa10>
  402cfc:	jmp    402d0e <__ctype_b_loc@plt+0xa3e>
  402cfe:	lea    rdx,[rip+0x27e13]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  402d05:	cmp    rax,rdx
  402d08:	jne    402d26 <__ctype_b_loc@plt+0xa56>
  402d0a:	vcvtsi2sd xmm0,xmm2,ecx
  402d0e:	vmovq  QWORD PTR [rsp],xmm0
  402d13:	mov    DWORD PTR [rsp+0x8],0x3
  402d1b:	mov    rdx,rsp
  402d1e:	mov    rdi,rbx
  402d21:	call   409ca0 <__ctype_b_loc@plt+0x79d0>
  402d26:	mov    rcx,QWORD PTR [r15-0x10]
  402d2a:	mov    QWORD PTR [rax],rcx
  402d2d:	mov    ecx,DWORD PTR [r15-0x8]
  402d31:	mov    DWORD PTR [rax+0x8],ecx
  402d34:	mov    rax,QWORD PTR [rbx+0x10]
  402d38:	cmp    DWORD PTR [rax-0x8],0x4
  402d3c:	jl     402d6d <__ctype_b_loc@plt+0xa9d>
  402d3e:	mov    rcx,QWORD PTR [rax-0x10]
  402d42:	test   BYTE PTR [rcx+0x9],0x3
  402d46:	je     402d6d <__ctype_b_loc@plt+0xa9d>
  402d48:	mov    rcx,QWORD PTR [r14]
  402d4b:	mov    dl,BYTE PTR [rcx+0x9]
  402d4e:	test   dl,0x4
  402d51:	je     402d6d <__ctype_b_loc@plt+0xa9d>
  402d53:	mov    rax,QWORD PTR [rbx+0x20]
  402d57:	and    dl,0xfb
  402d5a:	mov    BYTE PTR [rcx+0x9],dl
  402d5d:	mov    rdx,QWORD PTR [rax+0x40]
  402d61:	mov    QWORD PTR [rcx+0x30],rdx
  402d65:	mov    QWORD PTR [rax+0x40],rcx
  402d69:	mov    rax,QWORD PTR [rbx+0x10]
  402d6d:	add    rax,0xfffffffffffffff0
  402d71:	mov    QWORD PTR [rbx+0x10],rax
  402d75:	add    rsp,0x10
  402d79:	pop    rbx
  402d7a:	pop    r14
  402d7c:	pop    r15
  402d7e:	ret    
  402d7f:	nop
  402d80:	push   rbp
  402d81:	push   r15
  402d83:	push   r14
  402d85:	push   r13
  402d87:	push   r12
  402d89:	push   rbx
  402d8a:	sub    rsp,0x2078
  402d91:	mov    r15,rsi
  402d94:	mov    r12,rdi
  402d97:	mov    rbx,QWORD PTR [rdi+0x10]
  402d9b:	mov    r14,rbx
  402d9e:	sub    r14,QWORD PTR [rdi+0x18]
  402da2:	mov    r13,r14
  402da5:	shr    r13,0x4
  402da9:	lea    eax,[r13+0x1]
  402dad:	mov    DWORD PTR [rsp+0x68],0x0
  402db5:	test   rsi,rsi
  402db8:	mov    DWORD PTR [rsp+0xc],eax
  402dbc:	je     402dfa <__ctype_b_loc@plt+0xb2a>
  402dbe:	lea    rsi,[rip+0x28c9f]        # 42ba64 <__ctype_b_loc@plt+0x29794>
  402dc5:	xor    eax,eax
  402dc7:	mov    rdi,r12
  402dca:	mov    rdx,r15
  402dcd:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  402dd2:	lea    rsi,[rip+0x28a37]        # 42b810 <__ctype_b_loc@plt+0x29540>
  402dd9:	mov    rdi,r15
  402ddc:	call   402240 <fopen@plt>
  402de1:	mov    rbp,rax
  402de4:	mov    QWORD PTR [rsp+0x70],rax
  402de9:	test   rax,rax
  402dec:	jne    402e49 <__ctype_b_loc@plt+0xb79>
  402dee:	lea    rsi,[rip+0x28c78]        # 42ba6d <__ctype_b_loc@plt+0x2979d>
  402df5:	jmp    403161 <__ctype_b_loc@plt+0xe91>
  402dfa:	mov    rax,QWORD PTR [r12+0x20]
  402dff:	mov    rcx,QWORD PTR [rax+0x78]
  402e03:	cmp    rcx,QWORD PTR [rax+0x70]
  402e07:	jb     402e16 <__ctype_b_loc@plt+0xb46>
  402e09:	mov    rdi,r12
  402e0c:	call   408070 <__ctype_b_loc@plt+0x5da0>
  402e11:	mov    rbx,QWORD PTR [r12+0x10]
  402e16:	lea    rsi,[rip+0x28c40]        # 42ba5d <__ctype_b_loc@plt+0x2978d>
  402e1d:	mov    edx,0x6
  402e22:	mov    rdi,r12
  402e25:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  402e2a:	mov    QWORD PTR [rbx],rax
  402e2d:	mov    DWORD PTR [rbx+0x8],0x4
  402e34:	add    QWORD PTR [r12+0x10],0x10
  402e3a:	mov    rax,QWORD PTR [rip+0x2e197]        # 430fd8 <__ctype_b_loc@plt+0x2ed08>
  402e41:	mov    rbp,QWORD PTR [rax]
  402e44:	mov    QWORD PTR [rsp+0x70],rbp
  402e49:	mov    rdi,rbp
  402e4c:	call   4022b0 <getc@plt>
  402e51:	cmp    eax,0x23
  402e54:	jne    402e89 <__ctype_b_loc@plt+0xbb9>
  402e56:	mov    DWORD PTR [rsp+0x68],0x1
  402e5e:	xchg   ax,ax
  402e60:	mov    rdi,rbp
  402e63:	call   4022b0 <getc@plt>
  402e68:	cmp    eax,0xa
  402e6b:	je     402e81 <__ctype_b_loc@plt+0xbb1>
  402e6d:	cmp    eax,0xffffffff
  402e70:	jne    402e60 <__ctype_b_loc@plt+0xb90>
  402e72:	test   r15,r15
  402e75:	setne  BYTE PTR [rsp+0xb]
  402e7a:	mov    eax,0xffffffff
  402e7f:	jmp    402ee5 <__ctype_b_loc@plt+0xc15>
  402e81:	mov    rdi,rbp
  402e84:	call   4022b0 <getc@plt>
  402e89:	test   r15,r15
  402e8c:	setne  cl
  402e8f:	je     402ee1 <__ctype_b_loc@plt+0xc11>
  402e91:	cmp    eax,0x1b
  402e94:	jne    402ee1 <__ctype_b_loc@plt+0xc11>
  402e96:	lea    rsi,[rip+0x28bcb]        # 42ba68 <__ctype_b_loc@plt+0x29798>
  402e9d:	mov    rdi,r15
  402ea0:	mov    rdx,rbp
  402ea3:	call   402110 <freopen@plt>
  402ea8:	mov    QWORD PTR [rsp+0x70],rax
  402ead:	test   rax,rax
  402eb0:	je     40315a <__ctype_b_loc@plt+0xe8a>
  402eb6:	mov    rbp,rax
  402eb9:	nop    DWORD PTR [rax+0x0]
  402ec0:	mov    rdi,rbp
  402ec3:	call   4022b0 <getc@plt>
  402ec8:	cmp    eax,0x1b
  402ecb:	je     402ed2 <__ctype_b_loc@plt+0xc02>
  402ecd:	cmp    eax,0xffffffff
  402ed0:	jne    402ec0 <__ctype_b_loc@plt+0xbf0>
  402ed2:	mov    DWORD PTR [rsp+0x68],0x0
  402eda:	mov    BYTE PTR [rsp+0xb],0x1
  402edf:	jmp    402ee5 <__ctype_b_loc@plt+0xc15>
  402ee1:	mov    BYTE PTR [rsp+0xb],cl
  402ee5:	mov    edi,eax
  402ee7:	mov    rsi,rbp
  402eea:	call   4021f0 <ungetc@plt>
  402eef:	mov    rbp,QWORD PTR [r12+0x10]
  402ef4:	mov    eax,DWORD PTR [rbp-0x8]
  402ef7:	cmp    eax,0x4
  402efa:	je     402f5f <__ctype_b_loc@plt+0xc8f>
  402efc:	cmp    eax,0x3
  402eff:	jne    402f6f <__ctype_b_loc@plt+0xc9f>
  402f01:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  402f06:	lea    rsi,[rip+0x27f14]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  402f0d:	lea    rbx,[rsp+0x10]
  402f12:	mov    al,0x1
  402f14:	mov    rdi,rbx
  402f17:	call   402270 <sprintf@plt>
  402f1c:	mov    rdi,rbx
  402f1f:	call   4020e0 <strlen@plt>
  402f24:	mov    rdi,r12
  402f27:	mov    rsi,rbx
  402f2a:	mov    rdx,rax
  402f2d:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  402f32:	mov    QWORD PTR [rbp-0x10],rax
  402f36:	mov    DWORD PTR [rbp-0x8],0x4
  402f3d:	mov    rax,QWORD PTR [r12+0x20]
  402f42:	mov    rcx,QWORD PTR [rax+0x78]
  402f46:	cmp    rcx,QWORD PTR [rax+0x70]
  402f4a:	jb     402f54 <__ctype_b_loc@plt+0xc84>
  402f4c:	mov    rdi,r12
  402f4f:	call   408070 <__ctype_b_loc@plt+0x5da0>
  402f54:	mov    rbp,QWORD PTR [r12+0x10]
  402f59:	lea    rax,[rbp-0x10]
  402f5d:	jmp    402f66 <__ctype_b_loc@plt+0xc96>
  402f5f:	mov    rax,rbp
  402f62:	add    rax,0xfffffffffffffff0
  402f66:	mov    rax,QWORD PTR [rax]
  402f69:	add    rax,0x18
  402f6d:	jmp    402f71 <__ctype_b_loc@plt+0xca1>
  402f6f:	xor    eax,eax
  402f71:	test   rax,rax
  402f74:	lea    rcx,[rip+0x281fa]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  402f7b:	cmovne rcx,rax
  402f7f:	mov    QWORD PTR [rsp+0x60],r12
  402f84:	lea    rax,[rip+0x260a5]        # 429030 <__ctype_b_loc@plt+0x26d60>
  402f8b:	mov    QWORD PTR [rsp+0x50],rax
  402f90:	lea    rax,[rsp+0x68]
  402f95:	mov    QWORD PTR [rsp+0x58],rax
  402f9a:	vxorps xmm0,xmm0,xmm0
  402f9e:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  402fa4:	lea    rax,[rsp+0x40]
  402fa9:	mov    QWORD PTR [rsp+0x10],rax
  402fae:	mov    QWORD PTR [rsp+0x30],rcx
  402fb3:	mov    QWORD PTR [rsp+0x18],0x0
  402fbc:	mov    QWORD PTR [rsp+0x28],0x0
  402fc5:	sub    rbp,QWORD PTR [r12+0x40]
  402fca:	mov    r8,QWORD PTR [r12+0xb0]
  402fd2:	lea    rsi,[rip+0xdf87]        # 410f60 <__ctype_b_loc@plt+0xec90>
  402fd9:	lea    rdx,[rsp+0x10]
  402fde:	mov    rdi,r12
  402fe1:	mov    rcx,rbp
  402fe4:	call   410d90 <__ctype_b_loc@plt+0xeac0>
  402fe9:	mov    r15d,eax
  402fec:	mov    rsi,QWORD PTR [rsp+0x18]
  402ff1:	mov    rbx,QWORD PTR [rsp+0x28]
  402ff6:	mov    rbp,QWORD PTR [r12+0x20]
  402ffb:	mov    rdi,QWORD PTR [rbp+0x18]
  402fff:	xor    ecx,ecx
  403001:	mov    rdx,rbx
  403004:	call   QWORD PTR [rbp+0x10]
  403007:	sub    QWORD PTR [rbp+0x78],rbx
  40300b:	mov    rbp,QWORD PTR [rsp+0x70]
  403010:	mov    rdi,rbp
  403013:	call   402090 <ferror@plt>
  403018:	mov    ebx,eax
  40301a:	cmp    BYTE PTR [rsp+0xb],0x0
  40301f:	je     403029 <__ctype_b_loc@plt+0xd59>
  403021:	mov    rdi,rbp
  403024:	call   4020d0 <fclose@plt>
  403029:	test   ebx,ebx
  40302b:	je     403103 <__ctype_b_loc@plt+0xe33>
  403031:	mov    rax,QWORD PTR [r12+0x10]
  403036:	cmp    r13d,0xffffffff
  40303a:	jl     40312a <__ctype_b_loc@plt+0xe5a>
  403040:	mov    edx,DWORD PTR [rsp+0xc]
  403044:	movsxd rcx,edx
  403047:	shl    rcx,0x4
  40304b:	add    rcx,QWORD PTR [r12+0x18]
  403050:	cmp    rax,rcx
  403053:	jae    403149 <__ctype_b_loc@plt+0xe79>
  403059:	lea    rbx,[rax+0x10]
  40305d:	cmp    rcx,rbx
  403060:	cmova  rbx,rcx
  403064:	mov    rbp,rax
  403067:	not    rbp
  40306a:	add    rbx,rbp
  40306d:	add    rbp,rcx
  403070:	mov    edi,ebp
  403072:	shr    edi,0x4
  403075:	add    edi,0x1
  403078:	mov    rsi,rax
  40307b:	and    rdi,0x7
  40307f:	je     4030a1 <__ctype_b_loc@plt+0xdd1>
  403081:	neg    rdi
  403084:	mov    rsi,rax
  403087:	nop    WORD PTR [rax+rax*1+0x0]
  403090:	mov    DWORD PTR [rsi+0x8],0x0
  403097:	add    rsi,0x10
  40309b:	add    rdi,0x1
  40309f:	jne    403090 <__ctype_b_loc@plt+0xdc0>
  4030a1:	shr    rbx,0x4
  4030a5:	cmp    rbp,0x70
  4030a9:	jb     4030f1 <__ctype_b_loc@plt+0xe21>
  4030ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4030b0:	mov    DWORD PTR [rsi+0x8],0x0
  4030b7:	mov    DWORD PTR [rsi+0x18],0x0
  4030be:	mov    DWORD PTR [rsi+0x28],0x0
  4030c5:	mov    DWORD PTR [rsi+0x38],0x0
  4030cc:	mov    DWORD PTR [rsi+0x48],0x0
  4030d3:	mov    DWORD PTR [rsi+0x58],0x0
  4030da:	mov    DWORD PTR [rsi+0x68],0x0
  4030e1:	mov    DWORD PTR [rsi+0x78],0x0
  4030e8:	sub    rsi,0xffffffffffffff80
  4030ec:	cmp    rsi,rcx
  4030ef:	jb     4030b0 <__ctype_b_loc@plt+0xde0>
  4030f1:	shl    rbx,0x4
  4030f5:	add    rax,rbx
  4030f8:	add    rax,0x10
  4030fc:	mov    QWORD PTR [r12+0x10],rax
  403101:	jmp    403149 <__ctype_b_loc@plt+0xe79>
  403103:	test   r13d,r13d
  403106:	js     403178 <__ctype_b_loc@plt+0xea8>
  403108:	shl    r14,0x1c
  40310c:	sar    r14,0x1c
  403110:	add    r14,QWORD PTR [r12+0x18]
  403115:	cmp    r14,QWORD PTR [r12+0x10]
  40311a:	lea    rax,[rip+0x279f7]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  403121:	cmovb  rax,r14
  403125:	jmp    403223 <__ctype_b_loc@plt+0xf53>
  40312a:	shl    r14,0x1c
  40312e:	movabs rcx,0x200000000
  403138:	add    rcx,r14
  40313b:	sar    rcx,0x1c
  40313f:	add    rax,rcx
  403142:	mov    rcx,rax
  403145:	mov    edx,DWORD PTR [rsp+0xc]
  403149:	mov    QWORD PTR [r12+0x10],rcx
  40314e:	lea    rsi,[rip+0x27d0f]        # 42ae64 <__ctype_b_loc@plt+0x28b94>
  403155:	mov    rdi,r12
  403158:	jmp    403168 <__ctype_b_loc@plt+0xe98>
  40315a:	lea    rsi,[rip+0x2890a]        # 42ba6b <__ctype_b_loc@plt+0x2979b>
  403161:	mov    rdi,r12
  403164:	mov    edx,DWORD PTR [rsp+0xc]
  403168:	call   428cc0 <__ctype_b_loc@plt+0x269f0>
  40316d:	mov    r15d,0x6
  403173:	jmp    403264 <__ctype_b_loc@plt+0xf94>
  403178:	cmp    r13d,0xffffd8f0
  40317f:	jl     403194 <__ctype_b_loc@plt+0xec4>
  403181:	movsxd rax,DWORD PTR [rsp+0xc]
  403186:	shl    rax,0x4
  40318a:	add    rax,QWORD PTR [r12+0x10]
  40318f:	jmp    403223 <__ctype_b_loc@plt+0xf53>
  403194:	cmp    r13d,0xffffd8ed
  40319b:	je     4031bb <__ctype_b_loc@plt+0xeeb>
  40319d:	cmp    r13d,0xffffd8ee
  4031a4:	je     4031c2 <__ctype_b_loc@plt+0xef2>
  4031a6:	cmp    r13d,0xffffd8ef
  4031ad:	jne    4031f0 <__ctype_b_loc@plt+0xf20>
  4031af:	mov    eax,0xa0
  4031b4:	add    rax,QWORD PTR [r12+0x20]
  4031b9:	jmp    403223 <__ctype_b_loc@plt+0xf53>
  4031bb:	lea    rax,[r12+0x78]
  4031c0:	jmp    403223 <__ctype_b_loc@plt+0xf53>
  4031c2:	mov    rax,QWORD PTR [r12+0x28]
  4031c7:	mov    rax,QWORD PTR [rax+0x8]
  4031cb:	mov    rcx,QWORD PTR [rax]
  4031ce:	lea    rax,[r12+0x88]
  4031d6:	mov    rcx,QWORD PTR [rcx+0x18]
  4031da:	mov    QWORD PTR [r12+0x88],rcx
  4031e2:	mov    DWORD PTR [r12+0x90],0x5
  4031ee:	jmp    403223 <__ctype_b_loc@plt+0xf53>
  4031f0:	mov    rax,QWORD PTR [r12+0x28]
  4031f5:	mov    rax,QWORD PTR [rax+0x8]
  4031f9:	mov    rax,QWORD PTR [rax]
  4031fc:	mov    ecx,0xffffd8ed
  403201:	sub    ecx,r13d
  403204:	movzx  edx,BYTE PTR [rax+0xb]
  403208:	cmp    ecx,edx
  40320a:	jle    403215 <__ctype_b_loc@plt+0xf45>
  40320c:	lea    rax,[rip+0x27905]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  403213:	jmp    403223 <__ctype_b_loc@plt+0xf53>
  403215:	movsxd rcx,ecx
  403218:	shl    rcx,0x4
  40321c:	add    rax,rcx
  40321f:	add    rax,0x18
  403223:	add    rax,0x10
  403227:	mov    rcx,QWORD PTR [r12+0x10]
  40322c:	cmp    rax,rcx
  40322f:	jae    40325b <__ctype_b_loc@plt+0xf8b>
  403231:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40323b:	nop    DWORD PTR [rax+rax*1+0x0]
  403240:	mov    rcx,QWORD PTR [rax]
  403243:	mov    QWORD PTR [rax-0x10],rcx
  403247:	mov    ecx,DWORD PTR [rax+0x8]
  40324a:	mov    DWORD PTR [rax-0x8],ecx
  40324d:	mov    rcx,QWORD PTR [r12+0x10]
  403252:	add    rax,0x10
  403256:	cmp    rax,rcx
  403259:	jb     403240 <__ctype_b_loc@plt+0xf70>
  40325b:	add    rcx,0xfffffffffffffff0
  40325f:	mov    QWORD PTR [r12+0x10],rcx
  403264:	mov    eax,r15d
  403267:	add    rsp,0x2078
  40326e:	pop    rbx
  40326f:	pop    r12
  403271:	pop    r13
  403273:	pop    r14
  403275:	pop    r15
  403277:	pop    rbp
  403278:	ret    
  403279:	nop    DWORD PTR [rax+0x0]
  403280:	test   rcx,rcx
  403283:	je     403290 <__ctype_b_loc@plt+0xfc0>
  403285:	mov    rdi,rsi
  403288:	mov    rsi,rcx
  40328b:	jmp    402220 <realloc@plt>
  403290:	push   rax
  403291:	mov    rdi,rsi
  403294:	call   402040 <free@plt>
  403299:	xor    eax,eax
  40329b:	pop    rcx
  40329c:	ret    
  40329d:	nop    DWORD PTR [rax]
  4032a0:	push   r15
  4032a2:	push   r14
  4032a4:	push   r12
  4032a6:	push   rbx
  4032a7:	sub    rsp,0x28
  4032ab:	mov    rax,QWORD PTR [rip+0x2dd3e]        # 430ff0 <__ctype_b_loc@plt+0x2ed20>
  4032b2:	mov    r14,QWORD PTR [rax]
  4032b5:	mov    rbx,QWORD PTR [rdi+0x10]
  4032b9:	mov    eax,DWORD PTR [rbx-0x8]
  4032bc:	cmp    eax,0x4
  4032bf:	je     40331f <__ctype_b_loc@plt+0x104f>
  4032c1:	cmp    eax,0x3
  4032c4:	jne    40332c <__ctype_b_loc@plt+0x105c>
  4032c6:	mov    r12,rdi
  4032c9:	vmovsd xmm0,QWORD PTR [rbx-0x10]
  4032ce:	lea    rsi,[rip+0x27b4c]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  4032d5:	mov    r15,rsp
  4032d8:	mov    al,0x1
  4032da:	mov    rdi,r15
  4032dd:	call   402270 <sprintf@plt>
  4032e2:	mov    rdi,r15
  4032e5:	call   4020e0 <strlen@plt>
  4032ea:	mov    rdi,r12
  4032ed:	mov    rsi,r15
  4032f0:	mov    rdx,rax
  4032f3:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  4032f8:	mov    QWORD PTR [rbx-0x10],rax
  4032fc:	mov    DWORD PTR [rbx-0x8],0x4
  403303:	mov    rax,QWORD PTR [r12+0x20]
  403308:	mov    rcx,QWORD PTR [rax+0x78]
  40330c:	cmp    rcx,QWORD PTR [rax+0x70]
  403310:	jb     40331a <__ctype_b_loc@plt+0x104a>
  403312:	mov    rdi,r12
  403315:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40331a:	mov    rbx,QWORD PTR [r12+0x10]
  40331f:	add    rbx,0xfffffffffffffff0
  403323:	mov    rdx,QWORD PTR [rbx]
  403326:	add    rdx,0x18
  40332a:	jmp    40332e <__ctype_b_loc@plt+0x105e>
  40332c:	xor    edx,edx
  40332e:	lea    rsi,[rip+0x27d35]        # 42b06a <__ctype_b_loc@plt+0x28d9a>
  403335:	xor    eax,eax
  403337:	mov    rdi,r14
  40333a:	call   402190 <fprintf@plt>
  40333f:	xor    eax,eax
  403341:	add    rsp,0x28
  403345:	pop    rbx
  403346:	pop    r12
  403348:	pop    r14
  40334a:	pop    r15
  40334c:	ret    
  40334d:	nop    DWORD PTR [rax]
  403350:	push   r15
  403352:	push   r14
  403354:	push   rbx
  403355:	sub    rsp,0xe0
  40335c:	mov    r15,rdx
  40335f:	mov    r14,rsi
  403362:	mov    rbx,rdi
  403365:	mov    DWORD PTR [rsp+0xd8],0x0
  403370:	mov    rax,QWORD PTR [rdi+0xa8]
  403377:	mov    QWORD PTR [rsp+0x8],rax
  40337c:	lea    rax,[rsp+0x8]
  403381:	mov    QWORD PTR [rdi+0xa8],rax
  403388:	lea    rdi,[rsp+0x10]
  40338d:	call   402170 <_setjmp@plt>
  403392:	test   eax,eax
  403394:	jne    40339f <__ctype_b_loc@plt+0x10cf>
  403396:	mov    rdi,rbx
  403399:	mov    rsi,r15
  40339c:	call   r14
  40339f:	mov    rax,QWORD PTR [rsp+0x8]
  4033a4:	mov    QWORD PTR [rbx+0xa8],rax
  4033ab:	mov    eax,DWORD PTR [rsp+0xd8]
  4033b2:	add    rsp,0xe0
  4033b9:	pop    rbx
  4033ba:	pop    r14
  4033bc:	pop    r15
  4033be:	ret    
  4033bf:	nop
  4033c0:	push   rbp
  4033c1:	push   r15
  4033c3:	push   r14
  4033c5:	push   r13
  4033c7:	push   r12
  4033c9:	push   rbx
  4033ca:	push   rax
  4033cb:	mov    r14,rdi
  4033ce:	mov    r15,QWORD PTR [rdi+0x20]
  4033d2:	mov    rdi,QWORD PTR [r15+0x18]
  4033d6:	xor    esi,esi
  4033d8:	xor    edx,edx
  4033da:	mov    ecx,0x140
  4033df:	call   QWORD PTR [r15+0x10]
  4033e3:	test   rax,rax
  4033e6:	je     403586 <__ctype_b_loc@plt+0x12b6>
  4033ec:	add    QWORD PTR [r15+0x78],0x140
  4033f4:	mov    QWORD PTR [r14+0x50],rax
  4033f8:	mov    QWORD PTR [r14+0x28],rax
  4033fc:	mov    DWORD PTR [r14+0x5c],0x8
  403404:	add    rax,0x118
  40340a:	mov    QWORD PTR [r14+0x48],rax
  40340e:	mov    rbx,QWORD PTR [r14+0x20]
  403412:	mov    rdi,QWORD PTR [rbx+0x18]
  403416:	xor    esi,esi
  403418:	xor    edx,edx
  40341a:	mov    ecx,0x2d0
  40341f:	call   QWORD PTR [rbx+0x10]
  403422:	test   rax,rax
  403425:	je     403586 <__ctype_b_loc@plt+0x12b6>
  40342b:	add    QWORD PTR [rbx+0x78],0x2d0
  403433:	mov    QWORD PTR [r14+0x40],rax
  403437:	mov    DWORD PTR [r14+0x58],0x2d
  40343f:	lea    rcx,[rax+0x270]
  403446:	mov    QWORD PTR [r14+0x38],rcx
  40344a:	mov    rcx,QWORD PTR [r14+0x28]
  40344e:	mov    QWORD PTR [rcx+0x8],rax
  403452:	lea    rdx,[rax+0x10]
  403456:	mov    QWORD PTR [r14+0x10],rdx
  40345a:	mov    DWORD PTR [rax+0x8],0x0
  403461:	mov    QWORD PTR [rcx],rdx
  403464:	mov    QWORD PTR [r14+0x18],rdx
  403468:	add    rax,0x150
  40346e:	mov    QWORD PTR [rcx+0x10],rax
  403472:	xor    ebx,ebx
  403474:	xor    esi,esi
  403476:	mov    edx,0x2
  40347b:	mov    rdi,r14
  40347e:	call   403720 <__ctype_b_loc@plt+0x1450>
  403483:	mov    QWORD PTR [r14+0x78],rax
  403487:	mov    DWORD PTR [r14+0x80],0x5
  403492:	mov    rbp,QWORD PTR [r14+0x20]
  403496:	xor    esi,esi
  403498:	mov    edx,0x2
  40349d:	mov    rdi,r14
  4034a0:	call   403720 <__ctype_b_loc@plt+0x1450>
  4034a5:	mov    QWORD PTR [rbp+0xa0],rax
  4034ac:	mov    DWORD PTR [rbp+0xa8],0x5
  4034b6:	mov    esi,0x20
  4034bb:	mov    rdi,r14
  4034be:	call   403920 <__ctype_b_loc@plt+0x1650>
  4034c3:	lea    rbp,[rip+0x2d476]        # 430940 <__ctype_b_loc@plt+0x2e670>
  4034ca:	nop    WORD PTR [rax+rax*1+0x0]
  4034d0:	mov    r12,QWORD PTR [rbx+rbp*1]
  4034d4:	mov    rdi,r12
  4034d7:	call   4020e0 <strlen@plt>
  4034dc:	mov    rdi,r14
  4034df:	mov    rsi,r12
  4034e2:	mov    rdx,rax
  4034e5:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  4034ea:	mov    rcx,QWORD PTR [r14+0x20]
  4034ee:	mov    QWORD PTR [rcx+rbx*1+0x128],rax
  4034f6:	mov    rax,QWORD PTR [r14+0x20]
  4034fa:	mov    rax,QWORD PTR [rax+rbx*1+0x128]
  403502:	or     BYTE PTR [rax+0x9],0x20
  403506:	add    rbx,0x8
  40350a:	cmp    rbx,0x88
  403511:	jne    4034d0 <__ctype_b_loc@plt+0x1200>
  403513:	mov    bpl,0x1
  403516:	xor    ebx,ebx
  403518:	lea    r13,[rip+0x2d4b1]        # 4309d0 <__ctype_b_loc@plt+0x2e700>
  40351f:	nop
  403520:	mov    r12,QWORD PTR [rbx+r13*1]
  403524:	mov    rdi,r12
  403527:	call   4020e0 <strlen@plt>
  40352c:	mov    rdi,r14
  40352f:	mov    rsi,r12
  403532:	mov    rdx,rax
  403535:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40353a:	or     BYTE PTR [rax+0x9],0x20
  40353e:	mov    BYTE PTR [rax+0xa],bpl
  403542:	add    rbx,0x8
  403546:	add    bpl,0x1
  40354a:	cmp    rbx,0xa8
  403551:	jne    403520 <__ctype_b_loc@plt+0x1250>
  403553:	lea    rsi,[rip+0x27835]        # 42ad8f <__ctype_b_loc@plt+0x28abf>
  40355a:	mov    edx,0x11
  40355f:	mov    rdi,r14
  403562:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  403567:	or     BYTE PTR [rax+0x9],0x20
  40356b:	mov    rax,QWORD PTR [r15+0x78]
  40356f:	shl    rax,0x2
  403573:	mov    QWORD PTR [r15+0x70],rax
  403577:	add    rsp,0x8
  40357b:	pop    rbx
  40357c:	pop    r12
  40357e:	pop    r13
  403580:	pop    r14
  403582:	pop    r15
  403584:	pop    rbp
  403585:	ret    
  403586:	mov    rdi,QWORD PTR [r14+0xa8]
  40358d:	test   rdi,rdi
  403590:	jne    4035c9 <__ctype_b_loc@plt+0x12f9>
  403592:	mov    BYTE PTR [r14+0xa],0x4
  403597:	mov    rax,QWORD PTR [r14+0x20]
  40359b:	cmp    QWORD PTR [rax+0x98],0x0
  4035a3:	je     4035bf <__ctype_b_loc@plt+0x12ef>
  4035a5:	mov    esi,0x4
  4035aa:	mov    rdi,r14
  4035ad:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  4035b2:	mov    rax,QWORD PTR [r14+0x20]
  4035b6:	mov    rdi,r14
  4035b9:	call   QWORD PTR [rax+0x98]
  4035bf:	mov    edi,0x1
  4035c4:	call   402280 <exit@plt>
  4035c9:	mov    DWORD PTR [rdi+0xd0],0x4
  4035d3:	add    rdi,0x8
  4035d7:	mov    esi,0x1
  4035dc:	call   402230 <longjmp@plt>
  4035e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4035eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4035f0:	push   r15
  4035f2:	push   r14
  4035f4:	push   r13
  4035f6:	push   r12
  4035f8:	push   rbx
  4035f9:	mov    r12,rdi
  4035fc:	mov    r15,QWORD PTR [rdi+0x20]
  403600:	mov    rsi,QWORD PTR [rdi+0x40]
  403604:	call   403e60 <__ctype_b_loc@plt+0x1b90>
  403609:	mov    r14,QWORD PTR [r12+0x20]
  40360e:	mov    BYTE PTR [r14+0x20],0x43
  403613:	lea    rsi,[r14+0x28]
  403617:	mov    rdx,0xfffffffffffffffd
  40361e:	mov    rdi,r12
  403621:	call   40b420 <__ctype_b_loc@plt+0x9150>
  403626:	cmp    DWORD PTR [r14+0xc],0x0
  40362b:	jle    403666 <__ctype_b_loc@plt+0x1396>
  40362d:	xor    r13d,r13d
  403630:	xor    ebx,ebx
  403632:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40363c:	nop    DWORD PTR [rax+0x0]
  403640:	mov    rsi,QWORD PTR [r14]
  403643:	add    rsi,r13
  403646:	mov    rdx,0xfffffffffffffffd
  40364d:	mov    rdi,r12
  403650:	call   40b420 <__ctype_b_loc@plt+0x9150>
  403655:	add    rbx,0x1
  403659:	movsxd rax,DWORD PTR [r14+0xc]
  40365d:	add    r13,0x8
  403661:	cmp    rbx,rax
  403664:	jl     403640 <__ctype_b_loc@plt+0x1370>
  403666:	mov    rbx,QWORD PTR [r12+0x20]
  40366b:	movsxd r14,DWORD PTR [rbx+0xc]
  40366f:	shl    r14,0x3
  403673:	mov    rsi,QWORD PTR [rbx]
  403676:	mov    rdi,QWORD PTR [rbx+0x18]
  40367a:	xor    ecx,ecx
  40367c:	mov    rdx,r14
  40367f:	call   QWORD PTR [rbx+0x10]
  403682:	sub    QWORD PTR [rbx+0x78],r14
  403686:	mov    rsi,QWORD PTR [r15+0x58]
  40368a:	mov    r14,QWORD PTR [r15+0x68]
  40368e:	mov    rbx,QWORD PTR [r12+0x20]
  403693:	mov    rdi,QWORD PTR [rbx+0x18]
  403697:	xor    ecx,ecx
  403699:	mov    rdx,r14
  40369c:	call   QWORD PTR [rbx+0x10]
  40369f:	sub    QWORD PTR [rbx+0x78],r14
  4036a3:	mov    QWORD PTR [r15+0x58],rax
  4036a7:	mov    QWORD PTR [r15+0x68],0x0
  4036af:	mov    rbx,QWORD PTR [r12+0x20]
  4036b4:	mov    rsi,QWORD PTR [r12+0x50]
  4036b9:	movsxd rax,DWORD PTR [r12+0x5c]
  4036be:	shl    rax,0x3
  4036c2:	lea    r14,[rax+rax*4]
  4036c6:	mov    rdi,QWORD PTR [rbx+0x18]
  4036ca:	xor    ecx,ecx
  4036cc:	mov    rdx,r14
  4036cf:	call   QWORD PTR [rbx+0x10]
  4036d2:	sub    QWORD PTR [rbx+0x78],r14
  4036d6:	mov    rbx,QWORD PTR [r12+0x20]
  4036db:	mov    rsi,QWORD PTR [r12+0x40]
  4036e0:	movsxd r14,DWORD PTR [r12+0x58]
  4036e5:	shl    r14,0x4
  4036e9:	mov    rdi,QWORD PTR [rbx+0x18]
  4036ed:	xor    ecx,ecx
  4036ef:	mov    rdx,r14
  4036f2:	call   QWORD PTR [rbx+0x10]
  4036f5:	sub    QWORD PTR [rbx+0x78],r14
  4036f9:	mov    rax,QWORD PTR [r15+0x10]
  4036fd:	mov    rdi,QWORD PTR [r15+0x18]
  403701:	mov    edx,0x268
  403706:	xor    ecx,ecx
  403708:	mov    rsi,r12
  40370b:	pop    rbx
  40370c:	pop    r12
  40370e:	pop    r13
  403710:	pop    r14
  403712:	pop    r15
  403714:	jmp    rax
  403716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403720:	push   rbp
  403721:	push   r15
  403723:	push   r14
  403725:	push   r13
  403727:	push   r12
  403729:	push   rbx
  40372a:	push   rax
  40372b:	mov    r14d,edx
  40372e:	mov    r13d,esi
  403731:	mov    r15,rdi
  403734:	mov    rbp,QWORD PTR [rdi+0x20]
  403738:	mov    rdi,QWORD PTR [rbp+0x18]
  40373c:	xor    esi,esi
  40373e:	xor    edx,edx
  403740:	mov    ecx,0x40
  403745:	call   QWORD PTR [rbp+0x10]
  403748:	test   rax,rax
  40374b:	je     4038c5 <__ctype_b_loc@plt+0x15f5>
  403751:	mov    rbx,rax
  403754:	add    QWORD PTR [rbp+0x78],0x40
  403759:	mov    rax,QWORD PTR [r15+0x20]
  40375d:	mov    rcx,QWORD PTR [rax+0x28]
  403761:	mov    QWORD PTR [rbx],rcx
  403764:	mov    QWORD PTR [rax+0x28],rbx
  403768:	mov    al,BYTE PTR [rax+0x20]
  40376b:	and    al,0x3
  40376d:	mov    BYTE PTR [rbx+0x9],al
  403770:	mov    BYTE PTR [rbx+0x8],0x5
  403774:	vxorps xmm0,xmm0,xmm0
  403778:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  40377d:	mov    WORD PTR [rbx+0xa],0xff
  403783:	mov    DWORD PTR [rbx+0x38],0x0
  40378a:	lea    rax,[rip+0x27397]        # 42ab28 <__ctype_b_loc@plt+0x28858>
  403791:	mov    QWORD PTR [rbx+0x20],rax
  403795:	cmp    r13d,0xffffffff
  403799:	jl     4037d6 <__ctype_b_loc@plt+0x1506>
  40379b:	mov    DWORD PTR [rsp+0x4],r14d
  4037a0:	movsxd rbp,r13d
  4037a3:	shl    rbp,0x4
  4037a7:	mov    r14,QWORD PTR [r15+0x20]
  4037ab:	mov    rdi,QWORD PTR [r14+0x18]
  4037af:	xor    esi,esi
  4037b1:	xor    edx,edx
  4037b3:	mov    rcx,rbp
  4037b6:	call   QWORD PTR [r14+0x10]
  4037ba:	mov    r12,rax
  4037bd:	test   r13d,r13d
  4037c0:	je     4037cb <__ctype_b_loc@plt+0x14fb>
  4037c2:	test   r12,r12
  4037c5:	je     4038c5 <__ctype_b_loc@plt+0x15f5>
  4037cb:	add    QWORD PTR [r14+0x78],rbp
  4037cf:	mov    r14d,DWORD PTR [rsp+0x4]
  4037d4:	jmp    4037ea <__ctype_b_loc@plt+0x151a>
  4037d6:	lea    rsi,[rip+0x275dc]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  4037dd:	xor    r12d,r12d
  4037e0:	xor    eax,eax
  4037e2:	mov    rdi,r15
  4037e5:	call   404080 <__ctype_b_loc@plt+0x1db0>
  4037ea:	mov    QWORD PTR [rbx+0x18],r12
  4037ee:	movsxd rcx,DWORD PTR [rbx+0x38]
  4037f2:	cmp    ecx,r13d
  4037f5:	jge    4038a1 <__ctype_b_loc@plt+0x15d1>
  4037fb:	movsxd rax,r13d
  4037fe:	mov    esi,r13d
  403801:	sub    esi,ecx
  403803:	mov    rdx,rcx
  403806:	not    rdx
  403809:	add    rdx,rax
  40380c:	and    rsi,0x7
  403810:	je     403846 <__ctype_b_loc@plt+0x1576>
  403812:	mov    rdi,rcx
  403815:	shl    rdi,0x4
  403819:	add    rdi,r12
  40381c:	add    rdi,0x8
  403820:	neg    rsi
  403823:	xor    ebp,ebp
  403825:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40382f:	nop
  403830:	mov    DWORD PTR [rdi],0x0
  403836:	add    rbp,0xffffffffffffffff
  40383a:	add    rdi,0x10
  40383e:	cmp    rsi,rbp
  403841:	jne    403830 <__ctype_b_loc@plt+0x1560>
  403843:	sub    rcx,rbp
  403846:	cmp    rdx,0x7
  40384a:	jb     4038a1 <__ctype_b_loc@plt+0x15d1>
  40384c:	sub    rax,rcx
  40384f:	shl    rcx,0x4
  403853:	add    rcx,r12
  403856:	add    rcx,0x78
  40385a:	nop    WORD PTR [rax+rax*1+0x0]
  403860:	mov    DWORD PTR [rcx-0x70],0x0
  403867:	mov    DWORD PTR [rcx-0x60],0x0
  40386e:	mov    DWORD PTR [rcx-0x50],0x0
  403875:	mov    DWORD PTR [rcx-0x40],0x0
  40387c:	mov    DWORD PTR [rcx-0x30],0x0
  403883:	mov    DWORD PTR [rcx-0x20],0x0
  40388a:	mov    DWORD PTR [rcx-0x10],0x0
  403891:	mov    DWORD PTR [rcx],0x0
  403897:	sub    rcx,0xffffffffffffff80
  40389b:	add    rax,0xfffffffffffffff8
  40389f:	jne    403860 <__ctype_b_loc@plt+0x1590>
  4038a1:	mov    DWORD PTR [rbx+0x38],r13d
  4038a5:	mov    rdi,r15
  4038a8:	mov    rsi,rbx
  4038ab:	mov    edx,r14d
  4038ae:	call   40a980 <__ctype_b_loc@plt+0x86b0>
  4038b3:	mov    rax,rbx
  4038b6:	add    rsp,0x8
  4038ba:	pop    rbx
  4038bb:	pop    r12
  4038bd:	pop    r13
  4038bf:	pop    r14
  4038c1:	pop    r15
  4038c3:	pop    rbp
  4038c4:	ret    
  4038c5:	mov    rdi,QWORD PTR [r15+0xa8]
  4038cc:	test   rdi,rdi
  4038cf:	jne    403908 <__ctype_b_loc@plt+0x1638>
  4038d1:	mov    BYTE PTR [r15+0xa],0x4
  4038d6:	mov    rax,QWORD PTR [r15+0x20]
  4038da:	cmp    QWORD PTR [rax+0x98],0x0
  4038e2:	je     4038fe <__ctype_b_loc@plt+0x162e>
  4038e4:	mov    esi,0x4
  4038e9:	mov    rdi,r15
  4038ec:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  4038f1:	mov    rax,QWORD PTR [r15+0x20]
  4038f5:	mov    rdi,r15
  4038f8:	call   QWORD PTR [rax+0x98]
  4038fe:	mov    edi,0x1
  403903:	call   402280 <exit@plt>
  403908:	mov    DWORD PTR [rdi+0xd0],0x4
  403912:	add    rdi,0x8
  403916:	mov    esi,0x1
  40391b:	call   402230 <longjmp@plt>
  403920:	push   rbp
  403921:	push   r15
  403923:	push   r14
  403925:	push   r12
  403927:	push   rbx
  403928:	mov    rbp,QWORD PTR [rdi+0x20]
  40392c:	cmp    BYTE PTR [rbp+0x21],0x2
  403930:	je     403a24 <__ctype_b_loc@plt+0x1754>
  403936:	mov    r15d,esi
  403939:	mov    r14,rdi
  40393c:	cmp    esi,0xffffffff
  40393f:	jl     403987 <__ctype_b_loc@plt+0x16b7>
  403941:	movsxd r12,r15d
  403944:	shl    r12,0x3
  403948:	mov    rdi,QWORD PTR [rbp+0x18]
  40394c:	xor    esi,esi
  40394e:	xor    edx,edx
  403950:	mov    rcx,r12
  403953:	call   QWORD PTR [rbp+0x10]
  403956:	mov    rbx,rax
  403959:	test   r15d,r15d
  40395c:	je     403967 <__ctype_b_loc@plt+0x1697>
  40395e:	test   rbx,rbx
  403961:	je     403a2d <__ctype_b_loc@plt+0x175d>
  403967:	add    QWORD PTR [rbp+0x78],r12
  40396b:	mov    r12,QWORD PTR [r14+0x20]
  40396f:	test   r15d,r15d
  403972:	jle    40399e <__ctype_b_loc@plt+0x16ce>
  403974:	mov    edx,r15d
  403977:	shl    rdx,0x3
  40397b:	xor    esi,esi
  40397d:	mov    rdi,rbx
  403980:	call   402100 <memset@plt>
  403985:	jmp    40399e <__ctype_b_loc@plt+0x16ce>
  403987:	lea    rsi,[rip+0x2742b]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  40398e:	xor    ebx,ebx
  403990:	xor    eax,eax
  403992:	mov    rdi,r14
  403995:	call   404080 <__ctype_b_loc@plt+0x1db0>
  40399a:	mov    r12,QWORD PTR [r14+0x20]
  40399e:	movsxd rbp,DWORD PTR [r12+0xc]
  4039a3:	test   rbp,rbp
  4039a6:	jle    4039fe <__ctype_b_loc@plt+0x172e>
  4039a8:	movsxd rax,r15d
  4039ab:	add    rax,0xffffffffffffffff
  4039af:	xor    ecx,ecx
  4039b1:	mov    edx,ebp
  4039b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039bd:	nop    DWORD PTR [rax]
  4039c0:	mov    rsi,QWORD PTR [r12]
  4039c4:	mov    rsi,QWORD PTR [rsi+rcx*8]
  4039c8:	test   rsi,rsi
  4039cb:	je     4039f2 <__ctype_b_loc@plt+0x1722>
  4039cd:	nop    DWORD PTR [rax]
  4039d0:	mov    rdx,QWORD PTR [rsi]
  4039d3:	movsxd rdi,DWORD PTR [rsi+0xc]
  4039d7:	and    rdi,rax
  4039da:	mov    rbp,QWORD PTR [rbx+rdi*8]
  4039de:	mov    QWORD PTR [rsi],rbp
  4039e1:	mov    QWORD PTR [rbx+rdi*8],rsi
  4039e5:	mov    rsi,rdx
  4039e8:	test   rdx,rdx
  4039eb:	jne    4039d0 <__ctype_b_loc@plt+0x1700>
  4039ed:	mov    edx,DWORD PTR [r12+0xc]
  4039f2:	add    rcx,0x1
  4039f6:	movsxd rbp,edx
  4039f9:	cmp    rcx,rbp
  4039fc:	jl     4039c0 <__ctype_b_loc@plt+0x16f0>
  4039fe:	mov    rsi,QWORD PTR [r12]
  403a02:	shl    rbp,0x3
  403a06:	mov    r14,QWORD PTR [r14+0x20]
  403a0a:	mov    rdi,QWORD PTR [r14+0x18]
  403a0e:	xor    ecx,ecx
  403a10:	mov    rdx,rbp
  403a13:	call   QWORD PTR [r14+0x10]
  403a17:	sub    QWORD PTR [r14+0x78],rbp
  403a1b:	mov    DWORD PTR [r12+0xc],r15d
  403a20:	mov    QWORD PTR [r12],rbx
  403a24:	pop    rbx
  403a25:	pop    r12
  403a27:	pop    r14
  403a29:	pop    r15
  403a2b:	pop    rbp
  403a2c:	ret    
  403a2d:	mov    rdi,QWORD PTR [r14+0xa8]
  403a34:	test   rdi,rdi
  403a37:	jne    403a70 <__ctype_b_loc@plt+0x17a0>
  403a39:	mov    BYTE PTR [r14+0xa],0x4
  403a3e:	mov    rax,QWORD PTR [r14+0x20]
  403a42:	cmp    QWORD PTR [rax+0x98],0x0
  403a4a:	je     403a66 <__ctype_b_loc@plt+0x1796>
  403a4c:	mov    esi,0x4
  403a51:	mov    rdi,r14
  403a54:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  403a59:	mov    rax,QWORD PTR [r14+0x20]
  403a5d:	mov    rdi,r14
  403a60:	call   QWORD PTR [rax+0x98]
  403a66:	mov    edi,0x1
  403a6b:	call   402280 <exit@plt>
  403a70:	mov    DWORD PTR [rdi+0xd0],0x4
  403a7a:	add    rdi,0x8
  403a7e:	mov    esi,0x1
  403a83:	call   402230 <longjmp@plt>
  403a88:	nop    DWORD PTR [rax+rax*1+0x0]
  403a90:	push   rbp
  403a91:	push   r15
  403a93:	push   r14
  403a95:	push   r13
  403a97:	push   r12
  403a99:	push   rbx
  403a9a:	push   rax
  403a9b:	mov    r12,rdx
  403a9e:	mov    r15,rsi
  403aa1:	mov    r14,rdi
  403aa4:	mov    rax,rdx
  403aa7:	shr    rax,0x5
  403aab:	cmp    rax,rdx
  403aae:	jae    403ae0 <__ctype_b_loc@plt+0x1810>
  403ab0:	mov    rcx,rax
  403ab3:	not    rcx
  403ab6:	mov    rdx,r12
  403ab9:	mov    ebp,r12d
  403abc:	nop    DWORD PTR [rax+0x0]
  403ac0:	mov    esi,ebp
  403ac2:	shl    esi,0x5
  403ac5:	mov    edi,ebp
  403ac7:	shr    edi,0x2
  403aca:	add    edi,esi
  403acc:	movzx  esi,BYTE PTR [r15+rdx*1-0x1]
  403ad2:	add    esi,edi
  403ad4:	xor    ebp,esi
  403ad6:	add    rdx,rcx
  403ad9:	cmp    rdx,rax
  403adc:	ja     403ac0 <__ctype_b_loc@plt+0x17f0>
  403ade:	jmp    403ae3 <__ctype_b_loc@plt+0x1813>
  403ae0:	mov    ebp,r12d
  403ae3:	mov    r13,QWORD PTR [r14+0x20]
  403ae7:	mov    rax,QWORD PTR [r13+0x0]
  403aeb:	movsxd rcx,DWORD PTR [r13+0xc]
  403aef:	add    rcx,0xffffffffffffffff
  403af3:	movsxd rdx,ebp
  403af6:	and    rdx,rcx
  403af9:	mov    rbx,QWORD PTR [rax+rdx*8]
  403afd:	test   rbx,rbx
  403b00:	jne    403b18 <__ctype_b_loc@plt+0x1848>
  403b02:	jmp    403b4f <__ctype_b_loc@plt+0x187f>
  403b04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b0e:	xchg   ax,ax
  403b10:	mov    rbx,QWORD PTR [rbx]
  403b13:	test   rbx,rbx
  403b16:	je     403b4f <__ctype_b_loc@plt+0x187f>
  403b18:	cmp    QWORD PTR [rbx+0x10],r12
  403b1c:	jne    403b10 <__ctype_b_loc@plt+0x1840>
  403b1e:	lea    rsi,[rbx+0x18]
  403b22:	mov    rdi,r15
  403b25:	mov    rdx,r12
  403b28:	call   402150 <memcmp@plt>
  403b2d:	test   eax,eax
  403b2f:	jne    403b10 <__ctype_b_loc@plt+0x1840>
  403b31:	mov    al,BYTE PTR [rbx+0x9]
  403b34:	mov    cl,BYTE PTR [r13+0x20]
  403b38:	not    cl
  403b3a:	and    cl,al
  403b3c:	test   cl,0x3
  403b3f:	je     403c0b <__ctype_b_loc@plt+0x193b>
  403b45:	xor    al,0x3
  403b47:	mov    BYTE PTR [rbx+0x9],al
  403b4a:	jmp    403c0b <__ctype_b_loc@plt+0x193b>
  403b4f:	lea    rax,[r12+0x1]
  403b54:	cmp    rax,0xffffffffffffffe6
  403b58:	jb     403b6f <__ctype_b_loc@plt+0x189f>
  403b5a:	lea    rsi,[rip+0x27258]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  403b61:	xor    eax,eax
  403b63:	mov    rdi,r14
  403b66:	call   404080 <__ctype_b_loc@plt+0x1db0>
  403b6b:	mov    r13,QWORD PTR [r14+0x20]
  403b6f:	mov    rdi,QWORD PTR [r13+0x18]
  403b73:	lea    rcx,[r12+0x19]
  403b78:	xor    esi,esi
  403b7a:	xor    edx,edx
  403b7c:	call   QWORD PTR [r13+0x10]
  403b80:	mov    rbx,rax
  403b83:	mov    rax,r12
  403b86:	add    rax,0x19
  403b8a:	je     403b95 <__ctype_b_loc@plt+0x18c5>
  403b8c:	test   rbx,rbx
  403b8f:	je     403c1d <__ctype_b_loc@plt+0x194d>
  403b95:	add    QWORD PTR [r13+0x78],rax
  403b99:	mov    QWORD PTR [rbx+0x10],r12
  403b9d:	mov    DWORD PTR [rbx+0xc],ebp
  403ba0:	mov    rax,QWORD PTR [r14+0x20]
  403ba4:	mov    al,BYTE PTR [rax+0x20]
  403ba7:	and    al,0x3
  403ba9:	mov    BYTE PTR [rbx+0x9],al
  403bac:	mov    BYTE PTR [rbx+0x8],0x4
  403bb0:	mov    BYTE PTR [rbx+0xa],0x0
  403bb4:	mov    rdi,rbx
  403bb7:	add    rdi,0x18
  403bbb:	mov    rsi,r15
  403bbe:	mov    rdx,r12
  403bc1:	call   4021c0 <memcpy@plt>
  403bc6:	mov    BYTE PTR [rbx+r12*1+0x18],0x0
  403bcc:	mov    rax,QWORD PTR [r14+0x20]
  403bd0:	mov    ecx,DWORD PTR [rax+0xc]
  403bd3:	add    ecx,0xffffffff
  403bd6:	and    ecx,ebp
  403bd8:	mov    rdx,QWORD PTR [rax]
  403bdb:	mov    rdx,QWORD PTR [rdx+rcx*8]
  403bdf:	mov    QWORD PTR [rbx],rdx
  403be2:	mov    rdx,QWORD PTR [rax]
  403be5:	mov    QWORD PTR [rdx+rcx*8],rbx
  403be9:	mov    ecx,DWORD PTR [rax+0x8]
  403bec:	mov    esi,DWORD PTR [rax+0xc]
  403bef:	add    ecx,0x1
  403bf2:	mov    DWORD PTR [rax+0x8],ecx
  403bf5:	cmp    ecx,esi
  403bf7:	jbe    403c0b <__ctype_b_loc@plt+0x193b>
  403bf9:	cmp    esi,0x3ffffffe
  403bff:	jg     403c0b <__ctype_b_loc@plt+0x193b>
  403c01:	add    esi,esi
  403c03:	mov    rdi,r14
  403c06:	call   403920 <__ctype_b_loc@plt+0x1650>
  403c0b:	mov    rax,rbx
  403c0e:	add    rsp,0x8
  403c12:	pop    rbx
  403c13:	pop    r12
  403c15:	pop    r13
  403c17:	pop    r14
  403c19:	pop    r15
  403c1b:	pop    rbp
  403c1c:	ret    
  403c1d:	mov    rdi,QWORD PTR [r14+0xa8]
  403c24:	test   rdi,rdi
  403c27:	jne    403c60 <__ctype_b_loc@plt+0x1990>
  403c29:	mov    BYTE PTR [r14+0xa],0x4
  403c2e:	mov    rax,QWORD PTR [r14+0x20]
  403c32:	cmp    QWORD PTR [rax+0x98],0x0
  403c3a:	je     403c56 <__ctype_b_loc@plt+0x1986>
  403c3c:	mov    esi,0x4
  403c41:	mov    rdi,r14
  403c44:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  403c49:	mov    rax,QWORD PTR [r14+0x20]
  403c4d:	mov    rdi,r14
  403c50:	call   QWORD PTR [rax+0x98]
  403c56:	mov    edi,0x1
  403c5b:	call   402280 <exit@plt>
  403c60:	mov    DWORD PTR [rdi+0xd0],0x4
  403c6a:	add    rdi,0x8
  403c6e:	mov    esi,0x1
  403c73:	call   402230 <longjmp@plt>
  403c78:	nop    DWORD PTR [rax+rax*1+0x0]
  403c80:	push   rbx
  403c81:	mov    rbx,rdi
  403c84:	mov    rdi,QWORD PTR [rdi+0xa8]
  403c8b:	test   rdi,rdi
  403c8e:	jne    403cc1 <__ctype_b_loc@plt+0x19f1>
  403c90:	mov    BYTE PTR [rbx+0xa],sil
  403c94:	mov    rax,QWORD PTR [rbx+0x20]
  403c98:	cmp    QWORD PTR [rax+0x98],0x0
  403ca0:	je     403cb7 <__ctype_b_loc@plt+0x19e7>
  403ca2:	mov    rdi,rbx
  403ca5:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  403caa:	mov    rax,QWORD PTR [rbx+0x20]
  403cae:	mov    rdi,rbx
  403cb1:	call   QWORD PTR [rax+0x98]
  403cb7:	mov    edi,0x1
  403cbc:	call   402280 <exit@plt>
  403cc1:	mov    DWORD PTR [rdi+0xd0],esi
  403cc7:	add    rdi,0x8
  403ccb:	mov    esi,0x1
  403cd0:	call   402230 <longjmp@plt>
  403cd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403cdf:	nop
  403ce0:	push   r15
  403ce2:	push   r14
  403ce4:	push   r12
  403ce6:	push   rbx
  403ce7:	push   rax
  403ce8:	mov    r14d,esi
  403ceb:	mov    rbx,rdi
  403cee:	mov    rax,QWORD PTR [rdi+0x50]
  403cf2:	mov    QWORD PTR [rdi+0x28],rax
  403cf6:	mov    rsi,QWORD PTR [rax]
  403cf9:	mov    QWORD PTR [rdi+0x18],rsi
  403cfd:	call   403e60 <__ctype_b_loc@plt+0x1b90>
  403d02:	mov    r15,QWORD PTR [rbx+0x18]
  403d06:	lea    eax,[r14-0x2]
  403d0a:	cmp    eax,0x2
  403d0d:	jb     403d29 <__ctype_b_loc@plt+0x1a59>
  403d0f:	cmp    r14d,0x5
  403d13:	je     403d39 <__ctype_b_loc@plt+0x1a69>
  403d15:	cmp    r14d,0x4
  403d19:	jne    403d59 <__ctype_b_loc@plt+0x1a89>
  403d1b:	lea    rsi,[rip+0x2706d]        # 42ad8f <__ctype_b_loc@plt+0x28abf>
  403d22:	mov    edx,0x11
  403d27:	jmp    403d45 <__ctype_b_loc@plt+0x1a75>
  403d29:	mov    rax,QWORD PTR [rbx+0x10]
  403d2d:	mov    rcx,QWORD PTR [rax-0x10]
  403d31:	mov    QWORD PTR [r15],rcx
  403d34:	mov    eax,DWORD PTR [rax-0x8]
  403d37:	jmp    403d55 <__ctype_b_loc@plt+0x1a85>
  403d39:	lea    rsi,[rip+0x27061]        # 42ada1 <__ctype_b_loc@plt+0x28ad1>
  403d40:	mov    edx,0x17
  403d45:	mov    rdi,rbx
  403d48:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  403d4d:	mov    QWORD PTR [r15],rax
  403d50:	mov    eax,0x4
  403d55:	mov    DWORD PTR [r15+0x8],eax
  403d59:	add    r15,0x10
  403d5d:	mov    QWORD PTR [rbx+0x10],r15
  403d61:	movzx  eax,WORD PTR [rbx+0x62]
  403d65:	mov    WORD PTR [rbx+0x60],ax
  403d69:	mov    BYTE PTR [rbx+0x65],0x1
  403d6d:	movsxd rax,DWORD PTR [rbx+0x5c]
  403d71:	cmp    rax,0x4e21
  403d77:	jl     403dec <__ctype_b_loc@plt+0x1b1c>
  403d79:	mov    rcx,QWORD PTR [rbx+0x28]
  403d7d:	mov    r14,QWORD PTR [rbx+0x50]
  403d81:	sub    rcx,r14
  403d84:	shr    rcx,0x3
  403d88:	imul   ecx,ecx,0xcccccccd
  403d8e:	cmp    ecx,0x4e1e
  403d94:	jg     403dec <__ctype_b_loc@plt+0x1b1c>
  403d96:	shl    rax,0x3
  403d9a:	lea    r15,[rax+rax*4]
  403d9e:	mov    r12,QWORD PTR [rbx+0x20]
  403da2:	mov    rdi,QWORD PTR [r12+0x18]
  403da7:	mov    ecx,0xc3500
  403dac:	mov    rsi,r14
  403daf:	mov    rdx,r15
  403db2:	call   QWORD PTR [r12+0x10]
  403db7:	test   rax,rax
  403dba:	je     403e04 <__ctype_b_loc@plt+0x1b34>
  403dbc:	mov    ecx,0xc3500
  403dc1:	sub    rcx,r15
  403dc4:	add    QWORD PTR [r12+0x78],rcx
  403dc9:	mov    QWORD PTR [rbx+0x50],rax
  403dcd:	mov    DWORD PTR [rbx+0x5c],0x4e20
  403dd4:	mov    rcx,QWORD PTR [rbx+0x28]
  403dd8:	sub    rcx,r14
  403ddb:	add    rcx,rax
  403dde:	mov    QWORD PTR [rbx+0x28],rcx
  403de2:	add    rax,0xc34d8
  403de8:	mov    QWORD PTR [rbx+0x48],rax
  403dec:	vxorps xmm0,xmm0,xmm0
  403df0:	vmovups XMMWORD PTR [rbx+0xa8],xmm0
  403df8:	add    rsp,0x8
  403dfc:	pop    rbx
  403dfd:	pop    r12
  403dff:	pop    r14
  403e01:	pop    r15
  403e03:	ret    
  403e04:	mov    rdi,QWORD PTR [rbx+0xa8]
  403e0b:	test   rdi,rdi
  403e0e:	jne    403e46 <__ctype_b_loc@plt+0x1b76>
  403e10:	mov    BYTE PTR [rbx+0xa],0x4
  403e14:	mov    rax,QWORD PTR [rbx+0x20]
  403e18:	cmp    QWORD PTR [rax+0x98],0x0
  403e20:	je     403e3c <__ctype_b_loc@plt+0x1b6c>
  403e22:	mov    esi,0x4
  403e27:	mov    rdi,rbx
  403e2a:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  403e2f:	mov    rax,QWORD PTR [rbx+0x20]
  403e33:	mov    rdi,rbx
  403e36:	call   QWORD PTR [rax+0x98]
  403e3c:	mov    edi,0x1
  403e41:	call   402280 <exit@plt>
  403e46:	mov    DWORD PTR [rdi+0xd0],0x4
  403e50:	add    rdi,0x8
  403e54:	mov    esi,0x1
  403e59:	call   402230 <longjmp@plt>
  403e5e:	xchg   ax,ax
  403e60:	push   r15
  403e62:	push   r14
  403e64:	push   r12
  403e66:	push   rbx
  403e67:	push   rax
  403e68:	mov    r14,rsi
  403e6b:	mov    rsi,QWORD PTR [rdi+0x98]
  403e72:	test   rsi,rsi
  403e75:	je     403fa1 <__ctype_b_loc@plt+0x1cd1>
  403e7b:	mov    r12,rdi
  403e7e:	mov    r15,QWORD PTR [rdi+0x20]
  403e82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e8c:	nop    DWORD PTR [rax+0x0]
  403e90:	mov    rcx,QWORD PTR [rsi+0x10]
  403e94:	cmp    rcx,r14
  403e97:	jb     403fa1 <__ctype_b_loc@plt+0x1cd1>
  403e9d:	mov    rax,QWORD PTR [rsi]
  403ea0:	mov    QWORD PTR [r12+0x98],rax
  403ea8:	movzx  edx,BYTE PTR [r15+0x20]
  403ead:	not    dl
  403eaf:	and    dl,BYTE PTR [rsi+0x9]
  403eb2:	lea    rax,[rsi+0x18]
  403eb6:	test   dl,0x3
  403eb9:	je     403f00 <__ctype_b_loc@plt+0x1c30>
  403ebb:	cmp    rcx,rax
  403ebe:	je     403ed8 <__ctype_b_loc@plt+0x1c08>
  403ec0:	mov    rax,QWORD PTR [rsi+0x18]
  403ec4:	mov    rcx,QWORD PTR [rsi+0x20]
  403ec8:	mov    QWORD PTR [rcx+0x18],rax
  403ecc:	mov    rax,QWORD PTR [rsi+0x18]
  403ed0:	mov    rcx,QWORD PTR [rsi+0x20]
  403ed4:	mov    QWORD PTR [rax+0x20],rcx
  403ed8:	mov    rbx,QWORD PTR [r12+0x20]
  403edd:	mov    rdi,QWORD PTR [rbx+0x18]
  403ee1:	mov    edx,0x28
  403ee6:	xor    ecx,ecx
  403ee8:	call   QWORD PTR [rbx+0x10]
  403eeb:	add    QWORD PTR [rbx+0x78],0xffffffffffffffd8
  403ef0:	jmp    403f90 <__ctype_b_loc@plt+0x1cc0>
  403ef5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403eff:	nop
  403f00:	mov    rcx,QWORD PTR [rsi+0x18]
  403f04:	mov    rdx,QWORD PTR [rsi+0x20]
  403f08:	mov    QWORD PTR [rdx+0x18],rcx
  403f0c:	mov    rcx,QWORD PTR [rsi+0x18]
  403f10:	mov    rdx,QWORD PTR [rsi+0x20]
  403f14:	mov    QWORD PTR [rcx+0x20],rdx
  403f18:	mov    rcx,QWORD PTR [rsi+0x10]
  403f1c:	mov    rdx,QWORD PTR [rcx]
  403f1f:	mov    QWORD PTR [rsi+0x18],rdx
  403f23:	mov    edx,DWORD PTR [rcx+0x8]
  403f26:	mov    DWORD PTR [rsi+0x20],edx
  403f29:	mov    QWORD PTR [rsi+0x10],rax
  403f2d:	mov    rdi,QWORD PTR [r12+0x20]
  403f32:	mov    rcx,QWORD PTR [rdi+0x28]
  403f36:	mov    QWORD PTR [rsi],rcx
  403f39:	mov    QWORD PTR [rdi+0x28],rsi
  403f3d:	movzx  ebx,BYTE PTR [rsi+0x9]
  403f41:	test   bl,0x7
  403f44:	jne    403f90 <__ctype_b_loc@plt+0x1cc0>
  403f46:	cmp    BYTE PTR [rdi+0x21],0x1
  403f4a:	jne    403f77 <__ctype_b_loc@plt+0x1ca7>
  403f4c:	mov    ecx,ebx
  403f4e:	or     cl,0x4
  403f51:	mov    BYTE PTR [rsi+0x9],cl
  403f54:	cmp    edx,0x4
  403f57:	jl     403f90 <__ctype_b_loc@plt+0x1cc0>
  403f59:	mov    rax,QWORD PTR [rax]
  403f5c:	test   BYTE PTR [rax+0x9],0x3
  403f60:	je     403f90 <__ctype_b_loc@plt+0x1cc0>
  403f62:	mov    rdi,QWORD PTR [r12+0x20]
  403f67:	cmp    BYTE PTR [rdi+0x21],0x1
  403f6b:	jne    403f77 <__ctype_b_loc@plt+0x1ca7>
  403f6d:	mov    rsi,rax
  403f70:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  403f75:	jmp    403f90 <__ctype_b_loc@plt+0x1cc0>
  403f77:	and    bl,0xf8
  403f7a:	movzx  eax,BYTE PTR [rdi+0x20]
  403f7e:	and    al,0x3
  403f80:	or     al,bl
  403f82:	mov    BYTE PTR [rsi+0x9],al
  403f85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f8f:	nop
  403f90:	mov    rsi,QWORD PTR [r12+0x98]
  403f98:	test   rsi,rsi
  403f9b:	jne    403e90 <__ctype_b_loc@plt+0x1bc0>
  403fa1:	add    rsp,0x8
  403fa5:	pop    rbx
  403fa6:	pop    r12
  403fa8:	pop    r14
  403faa:	pop    r15
  403fac:	ret    
  403fad:	nop    DWORD PTR [rax]
  403fb0:	push   r14
  403fb2:	push   rbx
  403fb3:	push   rax
  403fb4:	mov    rbx,rsi
  403fb7:	mov    r14,rdi
  403fba:	mov    al,BYTE PTR [rsi+0x9]
  403fbd:	nop    DWORD PTR [rax]
  403fc0:	and    al,0xfc
  403fc2:	mov    BYTE PTR [rbx+0x9],al
  403fc5:	movzx  ecx,BYTE PTR [rbx+0x8]
  403fc9:	cmp    cl,0x7
  403fcc:	jne    403ff8 <__ctype_b_loc@plt+0x1d28>
  403fce:	mov    rsi,QWORD PTR [rbx+0x10]
  403fd2:	or     al,0x4
  403fd4:	mov    BYTE PTR [rbx+0x9],al
  403fd7:	test   rsi,rsi
  403fda:	je     403fea <__ctype_b_loc@plt+0x1d1a>
  403fdc:	test   BYTE PTR [rsi+0x9],0x3
  403fe0:	je     403fea <__ctype_b_loc@plt+0x1d1a>
  403fe2:	mov    rdi,r14
  403fe5:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  403fea:	mov    rbx,QWORD PTR [rbx+0x18]
  403fee:	movzx  eax,BYTE PTR [rbx+0x9]
  403ff2:	test   al,0x3
  403ff4:	jne    403fc0 <__ctype_b_loc@plt+0x1cf0>
  403ff6:	jmp    404040 <__ctype_b_loc@plt+0x1d70>
  403ff8:	add    cl,0xfb
  403ffb:	cmp    cl,0x5
  403ffe:	ja     404040 <__ctype_b_loc@plt+0x1d70>
  404000:	movzx  eax,cl
  404003:	lea    rcx,[rip+0x26006]        # 42a010 <__ctype_b_loc@plt+0x27d40>
  40400a:	movsxd rax,DWORD PTR [rcx+rax*4]
  40400e:	add    rax,rcx
  404011:	jmp    rax
  404013:	mov    rax,QWORD PTR [r14+0x38]
  404017:	mov    QWORD PTR [rbx+0x30],rax
  40401b:	jmp    40403c <__ctype_b_loc@plt+0x1d6c>
  40401d:	mov    rax,QWORD PTR [r14+0x38]
  404021:	mov    QWORD PTR [rbx+0x10],rax
  404025:	jmp    40403c <__ctype_b_loc@plt+0x1d6c>
  404027:	mov    rax,QWORD PTR [r14+0x38]
  40402b:	mov    QWORD PTR [rbx+0xa0],rax
  404032:	jmp    40403c <__ctype_b_loc@plt+0x1d6c>
  404034:	mov    rax,QWORD PTR [r14+0x38]
  404038:	mov    QWORD PTR [rbx+0x68],rax
  40403c:	mov    QWORD PTR [r14+0x38],rbx
  404040:	add    rsp,0x8
  404044:	pop    rbx
  404045:	pop    r14
  404047:	ret    
  404048:	mov    rax,QWORD PTR [rbx+0x10]
  40404c:	cmp    DWORD PTR [rax+0x8],0x4
  404050:	jl     404067 <__ctype_b_loc@plt+0x1d97>
  404052:	mov    rsi,QWORD PTR [rax]
  404055:	test   BYTE PTR [rsi+0x9],0x3
  404059:	je     404067 <__ctype_b_loc@plt+0x1d97>
  40405b:	mov    rdi,r14
  40405e:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  404063:	mov    rax,QWORD PTR [rbx+0x10]
  404067:	lea    rcx,[rbx+0x18]
  40406b:	cmp    rax,rcx
  40406e:	jne    404040 <__ctype_b_loc@plt+0x1d70>
  404070:	or     BYTE PTR [rbx+0x9],0x4
  404074:	jmp    404040 <__ctype_b_loc@plt+0x1d70>
  404076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404080:	push   rbp
  404081:	push   r15
  404083:	push   r14
  404085:	push   rbx
  404086:	sub    rsp,0x118
  40408d:	mov    rbx,rdi
  404090:	test   al,al
  404092:	je     4040d3 <__ctype_b_loc@plt+0x1e03>
  404094:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40409a:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  4040a0:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  4040a6:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  4040af:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  4040b8:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  4040c1:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  4040ca:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  4040d3:	mov    QWORD PTR [rsp+0x48],r9
  4040d8:	mov    QWORD PTR [rsp+0x40],r8
  4040dd:	mov    QWORD PTR [rsp+0x38],rcx
  4040e2:	mov    QWORD PTR [rsp+0x30],rdx
  4040e7:	lea    rax,[rsp+0x20]
  4040ec:	mov    QWORD PTR [rsp+0x10],rax
  4040f1:	lea    rax,[rsp+0x140]
  4040f9:	mov    QWORD PTR [rsp+0x8],rax
  4040fe:	movabs rax,0x3000000010
  404108:	mov    QWORD PTR [rsp],rax
  40410c:	mov    rdx,rsp
  40410f:	mov    rdi,rbx
  404112:	call   4041e0 <__ctype_b_loc@plt+0x1f10>
  404117:	mov    r14,rax
  40411a:	mov    rax,QWORD PTR [rbx+0x28]
  40411e:	mov    rdx,QWORD PTR [rax+0x8]
  404122:	cmp    DWORD PTR [rdx+0x8],0x6
  404126:	jne    4041c1 <__ctype_b_loc@plt+0x1ef1>
  40412c:	mov    rcx,QWORD PTR [rdx]
  40412f:	cmp    BYTE PTR [rcx+0xa],0x0
  404133:	jne    4041c1 <__ctype_b_loc@plt+0x1ef1>
  404139:	mov    rcx,QWORD PTR [rbx+0x30]
  40413d:	mov    QWORD PTR [rax+0x18],rcx
  404141:	mov    rax,QWORD PTR [rdx]
  404144:	mov    rdx,QWORD PTR [rax+0x20]
  404148:	sub    rcx,QWORD PTR [rdx+0x18]
  40414c:	mov    rsi,rcx
  40414f:	shr    rsi,0x2
  404153:	test   esi,esi
  404155:	jle    40417b <__ctype_b_loc@plt+0x1eab>
  404157:	mov    rdx,QWORD PTR [rdx+0x28]
  40415b:	test   rdx,rdx
  40415e:	je     404183 <__ctype_b_loc@plt+0x1eb3>
  404160:	shl    rcx,0x1e
  404164:	movabs rsi,0xffffffff00000000
  40416e:	add    rsi,rcx
  404171:	sar    rsi,0x1e
  404175:	mov    r15d,DWORD PTR [rdx+rsi*1]
  404179:	jmp    404186 <__ctype_b_loc@plt+0x1eb6>
  40417b:	mov    r15d,0xffffffff
  404181:	jmp    404186 <__ctype_b_loc@plt+0x1eb6>
  404183:	xor    r15d,r15d
  404186:	mov    rax,QWORD PTR [rax+0x20]
  40418a:	mov    rsi,QWORD PTR [rax+0x40]
  40418e:	add    rsi,0x18
  404192:	lea    rbp,[rsp+0xd0]
  40419a:	mov    edx,0x3c
  40419f:	mov    rdi,rbp
  4041a2:	call   4046c0 <__ctype_b_loc@plt+0x23f0>
  4041a7:	lea    rsi,[rip+0x26c32]        # 42ade0 <__ctype_b_loc@plt+0x28b10>
  4041ae:	xor    eax,eax
  4041b0:	mov    rdi,rbx
  4041b3:	mov    rdx,rbp
  4041b6:	mov    ecx,r15d
  4041b9:	mov    r8,r14
  4041bc:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  4041c1:	mov    rdi,rbx
  4041c4:	call   4045b0 <__ctype_b_loc@plt+0x22e0>
  4041c9:	add    rsp,0x118
  4041d0:	pop    rbx
  4041d1:	pop    r14
  4041d3:	pop    r15
  4041d5:	pop    rbp
  4041d6:	ret    
  4041d7:	nop    WORD PTR [rax+rax*1+0x0]
  4041e0:	push   rbp
  4041e1:	push   r15
  4041e3:	push   r14
  4041e5:	push   r13
  4041e7:	push   r12
  4041e9:	push   rbx
  4041ea:	sub    rsp,0x28
  4041ee:	mov    r14,rdx
  4041f1:	mov    r15,rsi
  4041f4:	mov    rbx,rdi
  4041f7:	mov    rbp,QWORD PTR [rdi+0x10]
  4041fb:	lea    rsi,[rip+0x26e99]        # 42b09b <__ctype_b_loc@plt+0x28dcb>
  404202:	xor    edx,edx
  404204:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  404209:	mov    QWORD PTR [rbp+0x0],rax
  40420d:	mov    DWORD PTR [rbp+0x8],0x4
  404214:	mov    rax,QWORD PTR [rbx+0x38]
  404218:	sub    rax,QWORD PTR [rbx+0x10]
  40421c:	cmp    rax,0x10
  404220:	jg     404238 <__ctype_b_loc@plt+0x1f68>
  404222:	mov    esi,DWORD PTR [rbx+0x58]
  404225:	test   esi,esi
  404227:	jle    40422d <__ctype_b_loc@plt+0x1f5d>
  404229:	add    esi,esi
  40422b:	jmp    404230 <__ctype_b_loc@plt+0x1f60>
  40422d:	add    esi,0x1
  404230:	mov    rdi,rbx
  404233:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  404238:	mov    rbp,QWORD PTR [rbx+0x10]
  40423c:	add    rbp,0x10
  404240:	mov    QWORD PTR [rbx+0x10],rbp
  404244:	mov    esi,0x25
  404249:	mov    rdi,r15
  40424c:	call   4020f0 <strchr@plt>
  404251:	test   rax,rax
  404254:	je     404506 <__ctype_b_loc@plt+0x2236>
  40425a:	mov    r12,rax
  40425d:	mov    r13d,0x1
  404263:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40426d:	nop    DWORD PTR [rax]
  404270:	mov    rdx,r12
  404273:	sub    rdx,r15
  404276:	mov    rdi,rbx
  404279:	mov    rsi,r15
  40427c:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  404281:	mov    QWORD PTR [rbp+0x0],rax
  404285:	mov    DWORD PTR [rbp+0x8],0x4
  40428c:	mov    rax,QWORD PTR [rbx+0x38]
  404290:	sub    rax,QWORD PTR [rbx+0x10]
  404294:	cmp    rax,0x10
  404298:	jg     4042b0 <__ctype_b_loc@plt+0x1fe0>
  40429a:	mov    esi,DWORD PTR [rbx+0x58]
  40429d:	test   esi,esi
  40429f:	jle    4042a5 <__ctype_b_loc@plt+0x1fd5>
  4042a1:	add    esi,esi
  4042a3:	jmp    4042a8 <__ctype_b_loc@plt+0x1fd8>
  4042a5:	add    esi,0x1
  4042a8:	mov    rdi,rbx
  4042ab:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  4042b0:	mov    rbp,QWORD PTR [rbx+0x10]
  4042b4:	lea    rax,[rbp+0x10]
  4042b8:	mov    QWORD PTR [rbx+0x10],rax
  4042bc:	movzx  eax,BYTE PTR [r12+0x1]
  4042c2:	movsx  ecx,al
  4042c5:	lea    edx,[rcx-0x63]
  4042c8:	cmp    edx,0x10
  4042cb:	ja     404300 <__ctype_b_loc@plt+0x2030>
  4042cd:	lea    rcx,[rip+0x25d54]        # 42a028 <__ctype_b_loc@plt+0x27d58>
  4042d4:	mov    rsi,rcx
  4042d7:	movsxd rcx,DWORD PTR [rcx+rdx*4]
  4042db:	add    rcx,rsi
  4042de:	jmp    rcx
  4042e0:	movsxd rcx,DWORD PTR [r14]
  4042e3:	cmp    rcx,0x28
  4042e7:	ja     4043cd <__ctype_b_loc@plt+0x20fd>
  4042ed:	mov    rax,rcx
  4042f0:	add    rax,QWORD PTR [r14+0x10]
  4042f4:	lea    ecx,[rcx+0x8]
  4042f7:	mov    DWORD PTR [r14],ecx
  4042fa:	jmp    4043d9 <__ctype_b_loc@plt+0x2109>
  4042ff:	nop
  404300:	cmp    ecx,0x25
  404303:	jne    404316 <__ctype_b_loc@plt+0x2046>
  404305:	mov    edx,0x1
  40430a:	mov    rdi,rbx
  40430d:	lea    rsi,[rip+0x26af4]        # 42ae08 <__ctype_b_loc@plt+0x28b38>
  404314:	jmp    404337 <__ctype_b_loc@plt+0x2067>
  404316:	mov    BYTE PTR [rsp],0x25
  40431a:	mov    BYTE PTR [rsp+0x1],al
  40431e:	mov    BYTE PTR [rsp+0x2],0x0
  404323:	mov    r15,rsp
  404326:	mov    rdi,r15
  404329:	call   4020e0 <strlen@plt>
  40432e:	mov    rdi,rbx
  404331:	mov    rsi,r15
  404334:	mov    rdx,rax
  404337:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40433c:	mov    QWORD PTR [rbp+0x10],rax
  404340:	mov    DWORD PTR [rbp+0x18],0x4
  404347:	jmp    4044b0 <__ctype_b_loc@plt+0x21e0>
  40434c:	movsxd rcx,DWORD PTR [r14]
  40434f:	cmp    rcx,0x28
  404353:	ja     4043ed <__ctype_b_loc@plt+0x211d>
  404359:	mov    rax,rcx
  40435c:	add    rax,QWORD PTR [r14+0x10]
  404360:	lea    ecx,[rcx+0x8]
  404363:	mov    DWORD PTR [r14],ecx
  404366:	jmp    4043f9 <__ctype_b_loc@plt+0x2129>
  40436b:	movsxd rcx,DWORD PTR [r14+0x4]
  40436f:	cmp    rcx,0xa0
  404376:	ja     404404 <__ctype_b_loc@plt+0x2134>
  40437c:	mov    rax,rcx
  40437f:	add    rax,QWORD PTR [r14+0x10]
  404383:	lea    ecx,[rcx+0x10]
  404386:	mov    DWORD PTR [r14+0x4],ecx
  40438a:	jmp    404410 <__ctype_b_loc@plt+0x2140>
  40438f:	movsxd rcx,DWORD PTR [r14]
  404392:	cmp    rcx,0x28
  404396:	ja     404423 <__ctype_b_loc@plt+0x2153>
  40439c:	mov    rax,rcx
  40439f:	add    rax,QWORD PTR [r14+0x10]
  4043a3:	lea    ecx,[rcx+0x8]
  4043a6:	mov    DWORD PTR [r14],ecx
  4043a9:	jmp    40442f <__ctype_b_loc@plt+0x215f>
  4043ae:	movsxd rcx,DWORD PTR [r14]
  4043b1:	cmp    rcx,0x28
  4043b5:	ja     40446d <__ctype_b_loc@plt+0x219d>
  4043bb:	mov    rax,rcx
  4043be:	add    rax,QWORD PTR [r14+0x10]
  4043c2:	lea    ecx,[rcx+0x8]
  4043c5:	mov    DWORD PTR [r14],ecx
  4043c8:	jmp    404479 <__ctype_b_loc@plt+0x21a9>
  4043cd:	mov    rax,QWORD PTR [r14+0x8]
  4043d1:	lea    rcx,[rax+0x8]
  4043d5:	mov    QWORD PTR [r14+0x8],rcx
  4043d9:	movzx  eax,BYTE PTR [rax]
  4043dc:	mov    BYTE PTR [rsp],al
  4043df:	mov    BYTE PTR [rsp+0x1],0x0
  4043e4:	mov    rbp,QWORD PTR [rbx+0x10]
  4043e8:	mov    r15,rsp
  4043eb:	jmp    40444a <__ctype_b_loc@plt+0x217a>
  4043ed:	mov    rax,QWORD PTR [r14+0x8]
  4043f1:	lea    rcx,[rax+0x8]
  4043f5:	mov    QWORD PTR [r14+0x8],rcx
  4043f9:	vcvtsi2sd xmm0,xmm1,DWORD PTR [rax]
  4043fd:	vmovsd QWORD PTR [rbp+0x10],xmm0
  404402:	jmp    404417 <__ctype_b_loc@plt+0x2147>
  404404:	mov    rax,QWORD PTR [r14+0x8]
  404408:	lea    rcx,[rax+0x8]
  40440c:	mov    QWORD PTR [r14+0x8],rcx
  404410:	mov    rax,QWORD PTR [rax]
  404413:	mov    QWORD PTR [rbp+0x10],rax
  404417:	mov    DWORD PTR [rbp+0x18],0x3
  40441e:	jmp    4044b0 <__ctype_b_loc@plt+0x21e0>
  404423:	mov    rax,QWORD PTR [r14+0x8]
  404427:	lea    rcx,[rax+0x8]
  40442b:	mov    QWORD PTR [r14+0x8],rcx
  40442f:	mov    rdx,QWORD PTR [rax]
  404432:	xor    eax,eax
  404434:	mov    r15,rsp
  404437:	mov    rdi,r15
  40443a:	lea    rsi,[rip+0x269c4]        # 42ae05 <__ctype_b_loc@plt+0x28b35>
  404441:	call   402270 <sprintf@plt>
  404446:	mov    rbp,QWORD PTR [rbx+0x10]
  40444a:	mov    rdi,r15
  40444d:	call   4020e0 <strlen@plt>
  404452:	mov    rdi,rbx
  404455:	mov    rsi,r15
  404458:	mov    rdx,rax
  40445b:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  404460:	mov    QWORD PTR [rbp+0x0],rax
  404464:	mov    DWORD PTR [rbp+0x8],0x4
  40446b:	jmp    4044b0 <__ctype_b_loc@plt+0x21e0>
  40446d:	mov    rax,QWORD PTR [r14+0x8]
  404471:	lea    rcx,[rax+0x8]
  404475:	mov    QWORD PTR [r14+0x8],rcx
  404479:	mov    rbp,QWORD PTR [rax]
  40447c:	test   rbp,rbp
  40447f:	lea    rax,[rip+0x26978]        # 42adfe <__ctype_b_loc@plt+0x28b2e>
  404486:	cmove  rbp,rax
  40448a:	mov    r15,QWORD PTR [rbx+0x10]
  40448e:	mov    rdi,rbp
  404491:	call   4020e0 <strlen@plt>
  404496:	mov    rdi,rbx
  404499:	mov    rsi,rbp
  40449c:	mov    rdx,rax
  40449f:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  4044a4:	mov    QWORD PTR [r15],rax
  4044a7:	mov    DWORD PTR [r15+0x8],0x4
  4044af:	nop
  4044b0:	mov    rax,QWORD PTR [rbx+0x38]
  4044b4:	sub    rax,QWORD PTR [rbx+0x10]
  4044b8:	cmp    rax,0x10
  4044bc:	jg     4044d4 <__ctype_b_loc@plt+0x2204>
  4044be:	mov    esi,DWORD PTR [rbx+0x58]
  4044c1:	test   esi,esi
  4044c3:	jle    4044c9 <__ctype_b_loc@plt+0x21f9>
  4044c5:	add    esi,esi
  4044c7:	jmp    4044cc <__ctype_b_loc@plt+0x21fc>
  4044c9:	add    esi,0x1
  4044cc:	mov    rdi,rbx
  4044cf:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  4044d4:	mov    rbp,QWORD PTR [rbx+0x10]
  4044d8:	add    rbp,0x10
  4044dc:	mov    QWORD PTR [rbx+0x10],rbp
  4044e0:	add    r13d,0x2
  4044e4:	mov    r15,r12
  4044e7:	add    r15,0x2
  4044eb:	mov    esi,0x25
  4044f0:	mov    rdi,r15
  4044f3:	call   4020f0 <strchr@plt>
  4044f8:	mov    r12,rax
  4044fb:	test   rax,rax
  4044fe:	jne    404270 <__ctype_b_loc@plt+0x1fa0>
  404504:	jmp    40450c <__ctype_b_loc@plt+0x223c>
  404506:	mov    r13d,0x1
  40450c:	mov    rdi,r15
  40450f:	call   4020e0 <strlen@plt>
  404514:	mov    rdi,rbx
  404517:	mov    rsi,r15
  40451a:	mov    rdx,rax
  40451d:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  404522:	mov    QWORD PTR [rbp+0x0],rax
  404526:	mov    DWORD PTR [rbp+0x8],0x4
  40452d:	mov    rax,QWORD PTR [rbx+0x38]
  404531:	sub    rax,QWORD PTR [rbx+0x10]
  404535:	cmp    rax,0x10
  404539:	jg     404551 <__ctype_b_loc@plt+0x2281>
  40453b:	mov    esi,DWORD PTR [rbx+0x58]
  40453e:	test   esi,esi
  404540:	jle    404546 <__ctype_b_loc@plt+0x2276>
  404542:	add    esi,esi
  404544:	jmp    404549 <__ctype_b_loc@plt+0x2279>
  404546:	add    esi,0x1
  404549:	mov    rdi,rbx
  40454c:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  404551:	mov    rdx,QWORD PTR [rbx+0x10]
  404555:	add    rdx,0x10
  404559:	mov    QWORD PTR [rbx+0x10],rdx
  40455d:	lea    esi,[r13+0x1]
  404561:	sub    rdx,QWORD PTR [rbx+0x18]
  404565:	shr    rdx,0x4
  404569:	add    edx,0xffffffff
  40456c:	mov    rdi,rbx
  40456f:	call   404850 <__ctype_b_loc@plt+0x2580>
  404574:	mov    rax,QWORD PTR [rbx+0x10]
  404578:	mov    ecx,r13d
  40457b:	shl    rcx,0x4
  40457f:	mov    rdx,rax
  404582:	sub    rdx,rcx
  404585:	neg    rcx
  404588:	mov    QWORD PTR [rbx+0x10],rdx
  40458c:	mov    rax,QWORD PTR [rax+rcx*1-0x10]
  404591:	add    rax,0x18
  404595:	add    rsp,0x28
  404599:	pop    rbx
  40459a:	pop    r12
  40459c:	pop    r13
  40459e:	pop    r14
  4045a0:	pop    r15
  4045a2:	pop    rbp
  4045a3:	ret    
  4045a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4045ae:	xchg   ax,ax
  4045b0:	push   rbx
  4045b1:	mov    rbx,rdi
  4045b4:	mov    rax,QWORD PTR [rdi+0xb0]
  4045bb:	test   rax,rax
  4045be:	je     404665 <__ctype_b_loc@plt+0x2395>
  4045c4:	mov    rcx,QWORD PTR [rbx+0x40]
  4045c8:	cmp    DWORD PTR [rcx+rax*1+0x8],0x6
  4045cd:	jne    40460d <__ctype_b_loc@plt+0x233d>
  4045cf:	mov    rdx,QWORD PTR [rbx+0x10]
  4045d3:	mov    rsi,QWORD PTR [rdx-0x10]
  4045d7:	mov    QWORD PTR [rdx],rsi
  4045da:	mov    esi,DWORD PTR [rdx-0x8]
  4045dd:	mov    DWORD PTR [rdx+0x8],esi
  4045e0:	mov    rdx,QWORD PTR [rbx+0x10]
  4045e4:	mov    rsi,QWORD PTR [rcx+rax*1]
  4045e8:	mov    QWORD PTR [rdx-0x10],rsi
  4045ec:	mov    eax,DWORD PTR [rcx+rax*1+0x8]
  4045f0:	mov    DWORD PTR [rdx-0x8],eax
  4045f3:	mov    rax,QWORD PTR [rbx+0x38]
  4045f7:	sub    rax,QWORD PTR [rbx+0x10]
  4045fb:	cmp    rax,0x10
  4045ff:	jg     404648 <__ctype_b_loc@plt+0x2378>
  404601:	mov    esi,DWORD PTR [rbx+0x58]
  404604:	test   esi,esi
  404606:	jg     40463e <__ctype_b_loc@plt+0x236e>
  404608:	add    esi,0x1
  40460b:	jmp    404640 <__ctype_b_loc@plt+0x2370>
  40460d:	mov    rdi,QWORD PTR [rbx+0xa8]
  404614:	test   rdi,rdi
  404617:	jne    404632 <__ctype_b_loc@plt+0x2362>
  404619:	mov    BYTE PTR [rbx+0xa],0x5
  40461d:	mov    rax,QWORD PTR [rbx+0x20]
  404621:	cmp    QWORD PTR [rax+0x98],0x0
  404629:	je     40469d <__ctype_b_loc@plt+0x23cd>
  40462b:	mov    esi,0x5
  404630:	jmp    404688 <__ctype_b_loc@plt+0x23b8>
  404632:	mov    DWORD PTR [rdi+0xd0],0x5
  40463c:	jmp    4046b1 <__ctype_b_loc@plt+0x23e1>
  40463e:	add    esi,esi
  404640:	mov    rdi,rbx
  404643:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  404648:	mov    rsi,QWORD PTR [rbx+0x10]
  40464c:	lea    rax,[rsi+0x10]
  404650:	mov    QWORD PTR [rbx+0x10],rax
  404654:	add    rsi,0xfffffffffffffff0
  404658:	mov    edx,0x1
  40465d:	mov    rdi,rbx
  404660:	call   404ff0 <__ctype_b_loc@plt+0x2d20>
  404665:	mov    rdi,QWORD PTR [rbx+0xa8]
  40466c:	test   rdi,rdi
  40466f:	jne    4046a7 <__ctype_b_loc@plt+0x23d7>
  404671:	mov    BYTE PTR [rbx+0xa],0x2
  404675:	mov    rax,QWORD PTR [rbx+0x20]
  404679:	cmp    QWORD PTR [rax+0x98],0x0
  404681:	je     40469d <__ctype_b_loc@plt+0x23cd>
  404683:	mov    esi,0x2
  404688:	mov    rdi,rbx
  40468b:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  404690:	mov    rax,QWORD PTR [rbx+0x20]
  404694:	mov    rdi,rbx
  404697:	call   QWORD PTR [rax+0x98]
  40469d:	mov    edi,0x1
  4046a2:	call   402280 <exit@plt>
  4046a7:	mov    DWORD PTR [rdi+0xd0],0x2
  4046b1:	add    rdi,0x8
  4046b5:	mov    esi,0x1
  4046ba:	call   402230 <longjmp@plt>
  4046bf:	nop
  4046c0:	push   r15
  4046c2:	push   r14
  4046c4:	push   rbx
  4046c5:	mov    rbx,rdx
  4046c8:	mov    r15,rsi
  4046cb:	mov    r14,rdi
  4046ce:	mov    al,BYTE PTR [rsi]
  4046d0:	cmp    al,0x40
  4046d2:	je     4046f5 <__ctype_b_loc@plt+0x2425>
  4046d4:	cmp    al,0x3d
  4046d6:	jne    404731 <__ctype_b_loc@plt+0x2461>
  4046d8:	add    r15,0x1
  4046dc:	mov    rdi,r14
  4046df:	mov    rsi,r15
  4046e2:	mov    rdx,rbx
  4046e5:	call   402060 <strncpy@plt>
  4046ea:	mov    BYTE PTR [r14+rbx*1-0x1],0x0
  4046f0:	jmp    4047a6 <__ctype_b_loc@plt+0x24d6>
  4046f5:	add    r15,0x1
  4046f9:	add    rbx,0xfffffffffffffff8
  4046fd:	mov    rdi,r15
  404700:	call   4020e0 <strlen@plt>
  404705:	mov    BYTE PTR [r14],0x0
  404709:	sub    rax,rbx
  40470c:	jbe    404721 <__ctype_b_loc@plt+0x2451>
  40470e:	add    r15,rax
  404711:	mov    rdi,r14
  404714:	call   4020e0 <strlen@plt>
  404719:	mov    DWORD PTR [r14+rax*1],0x2e2e2e
  404721:	mov    rdi,r14
  404724:	mov    rsi,r15
  404727:	pop    rbx
  404728:	pop    r14
  40472a:	pop    r15
  40472c:	jmp    402260 <strcat@plt>
  404731:	lea    rsi,[rip+0x266b6]        # 42adee <__ctype_b_loc@plt+0x28b1e>
  404738:	mov    rdi,r15
  40473b:	call   402130 <strcspn@plt>
  404740:	add    rbx,0xffffffffffffffef
  404744:	cmp    rax,rbx
  404747:	cmovbe rbx,rax
  40474b:	movabs rax,0x20676e697274735b
  404755:	mov    QWORD PTR [r14],rax
  404758:	mov    WORD PTR [r14+0x8],0x22
  40475f:	cmp    BYTE PTR [r15+rbx*1],0x0
  404764:	je     404786 <__ctype_b_loc@plt+0x24b6>
  404766:	mov    rdi,r14
  404769:	mov    rsi,r15
  40476c:	mov    rdx,rbx
  40476f:	call   402120 <strncat@plt>
  404774:	mov    rdi,r14
  404777:	call   4020e0 <strlen@plt>
  40477c:	mov    DWORD PTR [r14+rax*1],0x2e2e2e
  404784:	jmp    404791 <__ctype_b_loc@plt+0x24c1>
  404786:	mov    rdi,r14
  404789:	mov    rsi,r15
  40478c:	call   402260 <strcat@plt>
  404791:	mov    rdi,r14
  404794:	call   4020e0 <strlen@plt>
  404799:	mov    BYTE PTR [r14+rax*1+0x2],0x0
  40479f:	mov    WORD PTR [r14+rax*1],0x5d22
  4047a6:	pop    rbx
  4047a7:	pop    r14
  4047a9:	pop    r15
  4047ab:	ret    
  4047ac:	nop    DWORD PTR [rax+0x0]
  4047b0:	sub    rsp,0xd8
  4047b7:	test   al,al
  4047b9:	je     4047fa <__ctype_b_loc@plt+0x252a>
  4047bb:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  4047c1:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  4047c7:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  4047cd:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  4047d6:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  4047df:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  4047e8:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  4047f1:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  4047fa:	mov    QWORD PTR [rsp+0x48],r9
  4047ff:	mov    QWORD PTR [rsp+0x40],r8
  404804:	mov    QWORD PTR [rsp+0x38],rcx
  404809:	mov    QWORD PTR [rsp+0x30],rdx
  40480e:	lea    rax,[rsp+0x20]
  404813:	mov    QWORD PTR [rsp+0x10],rax
  404818:	lea    rax,[rsp+0xe0]
  404820:	mov    QWORD PTR [rsp+0x8],rax
  404825:	movabs rax,0x3000000010
  40482f:	mov    QWORD PTR [rsp],rax
  404833:	mov    rdx,rsp
  404836:	call   4041e0 <__ctype_b_loc@plt+0x1f10>
  40483b:	add    rsp,0xd8
  404842:	ret    
  404843:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40484d:	nop    DWORD PTR [rax]
  404850:	push   rbp
  404851:	push   r15
  404853:	push   r14
  404855:	push   r13
  404857:	push   r12
  404859:	push   rbx
  40485a:	sub    rsp,0x58
  40485e:	mov    ebx,esi
  404860:	mov    r15,rdi
  404863:	lea    r13,[rip+0x262ae]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40486a:	mov    QWORD PTR [rsp+0x10],rdi
  40486f:	nop
  404870:	mov    r12,QWORD PTR [r15+0x18]
  404874:	movsxd rax,edx
  404877:	mov    QWORD PTR [rsp+0x28],rax
  40487c:	shl    rax,0x4
  404880:	lea    r14,[r12+rax*1]
  404884:	lea    rcx,[r12+rax*1]
  404888:	add    rcx,0x10
  40488c:	mov    QWORD PTR [rsp+0x18],rcx
  404891:	lea    rbp,[r12+rax*1]
  404895:	add    rbp,0xfffffffffffffff0
  404899:	movsxd rcx,DWORD PTR [r12+rax*1-0x8]
  40489e:	lea    eax,[rcx-0x3]
  4048a1:	cmp    eax,0x1
  4048a4:	ja     4048d0 <__ctype_b_loc@plt+0x2600>
  4048a6:	mov    esi,DWORD PTR [r14+0x8]
  4048aa:	cmp    esi,0x3
  4048ad:	je     4049ff <__ctype_b_loc@plt+0x272f>
  4048b3:	cmp    esi,0x4
  4048b6:	jne    4048d0 <__ctype_b_loc@plt+0x2600>
  4048b8:	mov    DWORD PTR [rsp+0xc],ebx
  4048bc:	mov    rax,QWORD PTR [r14]
  4048bf:	jmp    404a45 <__ctype_b_loc@plt+0x2775>
  4048c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4048ce:	xchg   ax,ax
  4048d0:	mov    r12d,edx
  4048d3:	cmp    ecx,0x7
  4048d6:	je     4048f0 <__ctype_b_loc@plt+0x2620>
  4048d8:	cmp    ecx,0x5
  4048db:	mov    r8,QWORD PTR [rsp+0x18]
  4048e0:	jne    404900 <__ctype_b_loc@plt+0x2630>
  4048e2:	mov    rcx,QWORD PTR [rbp+0x0]
  4048e6:	add    rcx,0x10
  4048ea:	jmp    40490f <__ctype_b_loc@plt+0x263f>
  4048ec:	nop    DWORD PTR [rax+0x0]
  4048f0:	mov    rcx,QWORD PTR [rbp+0x0]
  4048f4:	add    rcx,0x10
  4048f8:	mov    r8,QWORD PTR [rsp+0x18]
  4048fd:	jmp    40490f <__ctype_b_loc@plt+0x263f>
  4048ff:	nop
  404900:	mov    rdx,QWORD PTR [r15+0x20]
  404904:	lea    rcx,[rdx+rcx*8]
  404908:	add    rcx,0xe0
  40490f:	mov    rsi,QWORD PTR [rcx]
  404912:	mov    rcx,r13
  404915:	test   rsi,rsi
  404918:	je     404968 <__ctype_b_loc@plt+0x2698>
  40491a:	mov    rcx,QWORD PTR [r15+0x20]
  40491e:	mov    rdx,QWORD PTR [rcx+0x1a0]
  404925:	mov    cl,BYTE PTR [rsi+0xb]
  404928:	mov    rdi,0xffffffffffffffff
  40492f:	shlx   rcx,rdi,rcx
  404934:	andn   ecx,ecx,DWORD PTR [rdx+0xc]
  40493a:	movsxd rcx,ecx
  40493d:	lea    rcx,[rcx+rcx*4]
  404941:	shl    rcx,0x3
  404945:	add    rcx,QWORD PTR [rsi+0x20]
  404949:	nop    DWORD PTR [rax+0x0]
  404950:	cmp    DWORD PTR [rcx+0x18],0x4
  404954:	jne    40495c <__ctype_b_loc@plt+0x268c>
  404956:	cmp    QWORD PTR [rcx+0x10],rdx
  40495a:	je     404968 <__ctype_b_loc@plt+0x2698>
  40495c:	mov    rcx,QWORD PTR [rcx+0x20]
  404960:	test   rcx,rcx
  404963:	jne    404950 <__ctype_b_loc@plt+0x2680>
  404965:	mov    rcx,r13
  404968:	cmp    DWORD PTR [rcx+0x8],0x0
  40496c:	je     4049e0 <__ctype_b_loc@plt+0x2710>
  40496e:	cmp    DWORD PTR [rcx+0x8],0x0
  404972:	je     404cb0 <__ctype_b_loc@plt+0x29e0>
  404978:	sub    rbp,QWORD PTR [r15+0x40]
  40497c:	mov    rax,QWORD PTR [r15+0x10]
  404980:	mov    rdx,QWORD PTR [rcx]
  404983:	mov    QWORD PTR [rax],rdx
  404986:	mov    ecx,DWORD PTR [rcx+0x8]
  404989:	mov    DWORD PTR [rax+0x8],ecx
  40498c:	mov    rax,QWORD PTR [r15+0x10]
  404990:	mov    rcx,QWORD PTR [r8-0x20]
  404994:	mov    QWORD PTR [rax+0x10],rcx
  404998:	mov    ecx,DWORD PTR [r8-0x18]
  40499c:	mov    DWORD PTR [rax+0x18],ecx
  40499f:	mov    rax,QWORD PTR [r15+0x10]
  4049a3:	mov    rcx,QWORD PTR [r8-0x10]
  4049a7:	mov    QWORD PTR [rax+0x20],rcx
  4049ab:	mov    ecx,DWORD PTR [r8-0x8]
  4049af:	mov    DWORD PTR [rax+0x28],ecx
  4049b2:	mov    rax,QWORD PTR [r15+0x38]
  4049b6:	sub    rax,QWORD PTR [r15+0x10]
  4049ba:	cmp    rax,0x30
  4049be:	jg     404be8 <__ctype_b_loc@plt+0x2918>
  4049c4:	mov    esi,DWORD PTR [r15+0x58]
  4049c8:	cmp    esi,0x3
  4049cb:	jge    404bde <__ctype_b_loc@plt+0x290e>
  4049d1:	add    esi,0x3
  4049d4:	jmp    404be0 <__ctype_b_loc@plt+0x2910>
  4049d9:	nop    DWORD PTR [rax+0x0]
  4049e0:	movsxd rcx,DWORD PTR [r8-0x8]
  4049e4:	cmp    rcx,0x7
  4049e8:	je     4049f3 <__ctype_b_loc@plt+0x2723>
  4049ea:	cmp    ecx,0x5
  4049ed:	jne    404c25 <__ctype_b_loc@plt+0x2955>
  4049f3:	mov    rcx,QWORD PTR [r14]
  4049f6:	add    rcx,0x10
  4049fa:	jmp    404c34 <__ctype_b_loc@plt+0x2964>
  4049ff:	mov    DWORD PTR [rsp+0xc],ebx
  404a03:	vmovsd xmm0,QWORD PTR [r14]
  404a08:	mov    al,0x1
  404a0a:	lea    rbx,[rsp+0x30]
  404a0f:	mov    rdi,rbx
  404a12:	lea    rsi,[rip+0x26408]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  404a19:	mov    r13d,edx
  404a1c:	call   402270 <sprintf@plt>
  404a21:	mov    rdi,rbx
  404a24:	call   4020e0 <strlen@plt>
  404a29:	mov    rdi,r15
  404a2c:	mov    rsi,rbx
  404a2f:	mov    rdx,rax
  404a32:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  404a37:	mov    edx,r13d
  404a3a:	mov    QWORD PTR [r14],rax
  404a3d:	mov    DWORD PTR [r14+0x8],0x4
  404a45:	mov    r13,QWORD PTR [rax+0x10]
  404a49:	test   r13,r13
  404a4c:	je     404b75 <__ctype_b_loc@plt+0x28a5>
  404a52:	mov    r14d,0x1
  404a58:	mov    eax,DWORD PTR [rsp+0xc]
  404a5c:	cmp    eax,0x2
  404a5f:	mov    DWORD PTR [rsp+0x24],edx
  404a63:	jl     404b1d <__ctype_b_loc@plt+0x284d>
  404a69:	movsxd r15,eax
  404a6c:	mov    r14d,0x1
  404a72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a7c:	nop    DWORD PTR [rax+0x0]
  404a80:	mov    eax,DWORD PTR [rbp+0x8]
  404a83:	cmp    eax,0x3
  404a86:	je     404aa0 <__ctype_b_loc@plt+0x27d0>
  404a88:	cmp    eax,0x4
  404a8b:	jne    404b18 <__ctype_b_loc@plt+0x2848>
  404a91:	mov    rax,QWORD PTR [rbp+0x0]
  404a95:	jmp    404ade <__ctype_b_loc@plt+0x280e>
  404a97:	nop    WORD PTR [rax+rax*1+0x0]
  404aa0:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  404aa5:	mov    al,0x1
  404aa7:	lea    rbx,[rsp+0x30]
  404aac:	mov    rdi,rbx
  404aaf:	lea    rsi,[rip+0x2636b]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  404ab6:	call   402270 <sprintf@plt>
  404abb:	mov    rdi,rbx
  404abe:	call   4020e0 <strlen@plt>
  404ac3:	mov    rdi,QWORD PTR [rsp+0x10]
  404ac8:	mov    rsi,rbx
  404acb:	mov    rdx,rax
  404ace:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  404ad3:	mov    QWORD PTR [rbp+0x0],rax
  404ad7:	mov    DWORD PTR [rbp+0x8],0x4
  404ade:	mov    rbx,QWORD PTR [rax+0x10]
  404ae2:	mov    rax,0xfffffffffffffffd
  404ae9:	sub    rax,r13
  404aec:	cmp    rbx,rax
  404aef:	jb     404b04 <__ctype_b_loc@plt+0x2834>
  404af1:	xor    eax,eax
  404af3:	mov    rdi,QWORD PTR [rsp+0x10]
  404af8:	lea    rsi,[rip+0x2630b]        # 42ae0a <__ctype_b_loc@plt+0x28b3a>
  404aff:	call   404080 <__ctype_b_loc@plt+0x1db0>
  404b04:	add    r13,rbx
  404b07:	add    r14,0x1
  404b0b:	add    rbp,0xfffffffffffffff0
  404b0f:	cmp    r14,r15
  404b12:	jl     404a80 <__ctype_b_loc@plt+0x27b0>
  404b18:	mov    r15,QWORD PTR [rsp+0x10]
  404b1d:	mov    rbp,QWORD PTR [r15+0x20]
  404b21:	mov    rbx,QWORD PTR [rbp+0x68]
  404b25:	cmp    rbx,r13
  404b28:	jae    404bd5 <__ctype_b_loc@plt+0x2905>
  404b2e:	cmp    r13,0x20
  404b32:	mov    eax,0x20
  404b37:	cmovbe r13,rax
  404b3b:	lea    rax,[r13+0x1]
  404b3f:	cmp    rax,0xfffffffffffffffd
  404b43:	ja     404cf5 <__ctype_b_loc@plt+0x2a25>
  404b49:	mov    rdi,QWORD PTR [rbp+0x18]
  404b4d:	mov    rsi,QWORD PTR [rbp+0x58]
  404b51:	mov    rdx,rbx
  404b54:	mov    rcx,r13
  404b57:	call   QWORD PTR [rbp+0x10]
  404b5a:	test   rax,rax
  404b5d:	je     404db8 <__ctype_b_loc@plt+0x2ae8>
  404b63:	mov    r15,rax
  404b66:	mov    rax,r13
  404b69:	sub    rax,rbx
  404b6c:	add    QWORD PTR [rbp+0x78],rax
  404b70:	jmp    404d09 <__ctype_b_loc@plt+0x2a39>
  404b75:	mov    r14d,0x2
  404b7b:	cmp    DWORD PTR [rbp+0x8],0x3
  404b7f:	lea    r13,[rip+0x25f92]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  404b86:	jne    404cec <__ctype_b_loc@plt+0x2a1c>
  404b8c:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  404b91:	mov    al,0x1
  404b93:	lea    r12,[rsp+0x30]
  404b98:	mov    rdi,r12
  404b9b:	lea    rsi,[rip+0x2627f]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  404ba2:	mov    ebx,edx
  404ba4:	call   402270 <sprintf@plt>
  404ba9:	mov    rdi,r12
  404bac:	call   4020e0 <strlen@plt>
  404bb1:	mov    rdi,r15
  404bb4:	mov    rsi,r12
  404bb7:	mov    rdx,rax
  404bba:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  404bbf:	mov    edx,ebx
  404bc1:	mov    QWORD PTR [rbp+0x0],rax
  404bc5:	mov    DWORD PTR [rbp+0x8],0x4
  404bcc:	mov    ebx,DWORD PTR [rsp+0xc]
  404bd0:	jmp    404d96 <__ctype_b_loc@plt+0x2ac6>
  404bd5:	mov    r15,QWORD PTR [rbp+0x58]
  404bd9:	jmp    404d11 <__ctype_b_loc@plt+0x2a41>
  404bde:	add    esi,esi
  404be0:	mov    rdi,r15
  404be3:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  404be8:	mov    rsi,QWORD PTR [r15+0x10]
  404bec:	lea    rax,[rsi+0x30]
  404bf0:	mov    QWORD PTR [r15+0x10],rax
  404bf4:	mov    edx,0x1
  404bf9:	mov    rdi,r15
  404bfc:	call   404ff0 <__ctype_b_loc@plt+0x2d20>
  404c01:	mov    rax,QWORD PTR [r15+0x10]
  404c05:	mov    rcx,QWORD PTR [r15+0x40]
  404c09:	lea    rdx,[rax-0x10]
  404c0d:	mov    QWORD PTR [r15+0x10],rdx
  404c11:	mov    rdx,QWORD PTR [rax-0x10]
  404c15:	mov    QWORD PTR [rcx+rbp*1],rdx
  404c19:	mov    eax,DWORD PTR [rax-0x8]
  404c1c:	mov    DWORD PTR [rcx+rbp*1+0x8],eax
  404c20:	jmp    404cde <__ctype_b_loc@plt+0x2a0e>
  404c25:	mov    rdx,QWORD PTR [r15+0x20]
  404c29:	lea    rcx,[rdx+rcx*8]
  404c2d:	add    rcx,0xe0
  404c34:	mov    rsi,QWORD PTR [rcx]
  404c37:	mov    rcx,r13
  404c3a:	test   rsi,rsi
  404c3d:	je     40496e <__ctype_b_loc@plt+0x269e>
  404c43:	mov    rcx,QWORD PTR [r15+0x20]
  404c47:	mov    rdx,QWORD PTR [rcx+0x1a0]
  404c4e:	mov    cl,BYTE PTR [rsi+0xb]
  404c51:	mov    rdi,0xffffffffffffffff
  404c58:	shlx   rcx,rdi,rcx
  404c5d:	andn   ecx,ecx,DWORD PTR [rdx+0xc]
  404c63:	movsxd rcx,ecx
  404c66:	lea    rcx,[rcx+rcx*4]
  404c6a:	shl    rcx,0x3
  404c6e:	add    rcx,QWORD PTR [rsi+0x20]
  404c72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c7c:	nop    DWORD PTR [rax+0x0]
  404c80:	cmp    DWORD PTR [rcx+0x18],0x4
  404c84:	jne    404c90 <__ctype_b_loc@plt+0x29c0>
  404c86:	cmp    QWORD PTR [rcx+0x10],rdx
  404c8a:	je     40496e <__ctype_b_loc@plt+0x269e>
  404c90:	mov    rcx,QWORD PTR [rcx+0x20]
  404c94:	test   rcx,rcx
  404c97:	jne    404c80 <__ctype_b_loc@plt+0x29b0>
  404c99:	mov    rcx,r13
  404c9c:	cmp    DWORD PTR [rcx+0x8],0x0
  404ca0:	jne    404978 <__ctype_b_loc@plt+0x26a8>
  404ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404cb0:	cmp    eax,0x2
  404cb3:	cmovb  rbp,r14
  404cb7:	movsxd rax,DWORD PTR [rbp+0x8]
  404cbb:	lea    rcx,[rip+0x2bc1e]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  404cc2:	mov    rcx,QWORD PTR [rcx+rax*8]
  404cc6:	xor    eax,eax
  404cc8:	mov    rdi,r15
  404ccb:	lea    rsi,[rip+0x26166]        # 42ae38 <__ctype_b_loc@plt+0x28b68>
  404cd2:	lea    rdx,[rip+0x262a5]        # 42af7e <__ctype_b_loc@plt+0x28cae>
  404cd9:	call   404080 <__ctype_b_loc@plt+0x1db0>
  404cde:	mov    r14d,0x2
  404ce4:	mov    edx,r12d
  404ce7:	jmp    404d96 <__ctype_b_loc@plt+0x2ac6>
  404cec:	mov    ebx,DWORD PTR [rsp+0xc]
  404cf0:	jmp    404d96 <__ctype_b_loc@plt+0x2ac6>
  404cf5:	xor    eax,eax
  404cf7:	mov    rdi,r15
  404cfa:	lea    rsi,[rip+0x260b8]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  404d01:	call   404080 <__ctype_b_loc@plt+0x1db0>
  404d06:	xor    r15d,r15d
  404d09:	mov    QWORD PTR [rbp+0x58],r15
  404d0d:	mov    QWORD PTR [rbp+0x68],r13
  404d11:	mov    rax,QWORD PTR [rsp+0x28]
  404d16:	movsxd r13,r14d
  404d19:	sub    rax,r13
  404d1c:	add    r13,0x1
  404d20:	shl    rax,0x4
  404d24:	lea    rbx,[r12+rax*1]
  404d28:	add    rbx,0x10
  404d2c:	xor    ebp,ebp
  404d2e:	xchg   ax,ax
  404d30:	mov    r12,rbp
  404d33:	mov    rsi,QWORD PTR [rbx]
  404d36:	mov    rbp,QWORD PTR [rsi+0x10]
  404d3a:	lea    rdi,[r15+r12*1]
  404d3e:	add    rsi,0x18
  404d42:	mov    rdx,rbp
  404d45:	call   4021c0 <memcpy@plt>
  404d4a:	add    rbp,r12
  404d4d:	add    r13,0xffffffffffffffff
  404d51:	add    rbx,0x10
  404d55:	cmp    r13,0x1
  404d59:	jg     404d30 <__ctype_b_loc@plt+0x2a60>
  404d5b:	mov    eax,r14d
  404d5e:	shl    rax,0x4
  404d62:	mov    rbx,QWORD PTR [rsp+0x18]
  404d67:	sub    rbx,rax
  404d6a:	mov    rdi,QWORD PTR [rsp+0x10]
  404d6f:	mov    rsi,r15
  404d72:	mov    r15,rdi
  404d75:	mov    rdx,rbp
  404d78:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  404d7d:	mov    QWORD PTR [rbx],rax
  404d80:	mov    DWORD PTR [rbx+0x8],0x4
  404d87:	mov    edx,DWORD PTR [rsp+0x24]
  404d8b:	mov    ebx,DWORD PTR [rsp+0xc]
  404d8f:	lea    r13,[rip+0x25d82]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  404d96:	add    r14d,0xffffffff
  404d9a:	sub    ebx,r14d
  404d9d:	sub    edx,r14d
  404da0:	cmp    ebx,0x1
  404da3:	jg     404870 <__ctype_b_loc@plt+0x25a0>
  404da9:	add    rsp,0x58
  404dad:	pop    rbx
  404dae:	pop    r12
  404db0:	pop    r13
  404db2:	pop    r14
  404db4:	pop    r15
  404db6:	pop    rbp
  404db7:	ret    
  404db8:	mov    rax,QWORD PTR [rsp+0x10]
  404dbd:	mov    rdi,QWORD PTR [rax+0xa8]
  404dc4:	test   rdi,rdi
  404dc7:	jne    404e09 <__ctype_b_loc@plt+0x2b39>
  404dc9:	mov    rax,QWORD PTR [rsp+0x10]
  404dce:	mov    BYTE PTR [rax+0xa],0x4
  404dd2:	mov    rax,QWORD PTR [rax+0x20]
  404dd6:	cmp    QWORD PTR [rax+0x98],0x0
  404dde:	je     404dff <__ctype_b_loc@plt+0x2b2f>
  404de0:	mov    esi,0x4
  404de5:	mov    rbx,QWORD PTR [rsp+0x10]
  404dea:	mov    rdi,rbx
  404ded:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  404df2:	mov    rax,QWORD PTR [rbx+0x20]
  404df6:	mov    rdi,rbx
  404df9:	call   QWORD PTR [rax+0x98]
  404dff:	mov    edi,0x1
  404e04:	call   402280 <exit@plt>
  404e09:	mov    DWORD PTR [rdi+0xd0],0x4
  404e13:	add    rdi,0x8
  404e17:	mov    esi,0x1
  404e1c:	call   402230 <longjmp@plt>
  404e21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e2b:	nop    DWORD PTR [rax+rax*1+0x0]
  404e30:	push   rbp
  404e31:	push   r15
  404e33:	push   r14
  404e35:	push   r13
  404e37:	push   r12
  404e39:	push   rbx
  404e3a:	sub    rsp,0x18
  404e3e:	mov    r15d,esi
  404e41:	mov    r14,rdi
  404e44:	mov    rbx,QWORD PTR [rdi+0x40]
  404e48:	lea    ebp,[r15+0x6]
  404e4c:	cmp    esi,0xfffffff9
  404e4f:	jl     404ea7 <__ctype_b_loc@plt+0x2bd7>
  404e51:	movsxd r13,DWORD PTR [r14+0x58]
  404e55:	shl    r13,0x4
  404e59:	mov    DWORD PTR [rsp+0x4],ebp
  404e5d:	movsxd rbp,ebp
  404e60:	mov    QWORD PTR [rsp+0x8],rbp
  404e65:	shl    rbp,0x4
  404e69:	mov    rax,QWORD PTR [r14+0x20]
  404e6d:	mov    rdi,QWORD PTR [rax+0x18]
  404e71:	mov    rsi,rbx
  404e74:	mov    rdx,r13
  404e77:	mov    rcx,rbp
  404e7a:	mov    QWORD PTR [rsp+0x10],rax
  404e7f:	call   QWORD PTR [rax+0x10]
  404e82:	mov    r12,rax
  404e85:	cmp    DWORD PTR [rsp+0x8],0x0
  404e8a:	je     404e95 <__ctype_b_loc@plt+0x2bc5>
  404e8c:	test   r12,r12
  404e8f:	je     404f8e <__ctype_b_loc@plt+0x2cbe>
  404e95:	sub    rbp,r13
  404e98:	mov    rax,QWORD PTR [rsp+0x10]
  404e9d:	add    QWORD PTR [rax+0x78],rbp
  404ea1:	mov    ebp,DWORD PTR [rsp+0x4]
  404ea5:	jmp    404ebb <__ctype_b_loc@plt+0x2beb>
  404ea7:	lea    rsi,[rip+0x25f0b]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  404eae:	xor    r12d,r12d
  404eb1:	xor    eax,eax
  404eb3:	mov    rdi,r14
  404eb6:	call   404080 <__ctype_b_loc@plt+0x1db0>
  404ebb:	mov    QWORD PTR [r14+0x40],r12
  404ebf:	mov    DWORD PTR [r14+0x58],ebp
  404ec3:	movsxd rax,r15d
  404ec6:	shl    rax,0x4
  404eca:	add    rax,r12
  404ecd:	mov    QWORD PTR [r14+0x38],rax
  404ed1:	mov    rax,QWORD PTR [r14+0x10]
  404ed5:	mov    rcx,QWORD PTR [r14+0x98]
  404edc:	sub    rax,rbx
  404edf:	add    rax,r12
  404ee2:	mov    QWORD PTR [r14+0x10],rax
  404ee6:	test   rcx,rcx
  404ee9:	je     404f2a <__ctype_b_loc@plt+0x2c5a>
  404eeb:	mov    rax,QWORD PTR [rcx]
  404eee:	mov    rdx,QWORD PTR [rcx+0x10]
  404ef2:	sub    rdx,rbx
  404ef5:	add    r12,rdx
  404ef8:	mov    QWORD PTR [rcx+0x10],r12
  404efc:	test   rax,rax
  404eff:	je     404f2a <__ctype_b_loc@plt+0x2c5a>
  404f01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f0b:	nop    DWORD PTR [rax+rax*1+0x0]
  404f10:	mov    rcx,QWORD PTR [rax]
  404f13:	mov    rdx,QWORD PTR [rax+0x10]
  404f17:	sub    rdx,rbx
  404f1a:	add    rdx,QWORD PTR [r14+0x40]
  404f1e:	mov    QWORD PTR [rax+0x10],rdx
  404f22:	mov    rax,rcx
  404f25:	test   rcx,rcx
  404f28:	jne    404f10 <__ctype_b_loc@plt+0x2c40>
  404f2a:	mov    rcx,QWORD PTR [r14+0x50]
  404f2e:	mov    rdx,QWORD PTR [r14+0x28]
  404f32:	mov    rax,QWORD PTR [r14+0x40]
  404f36:	cmp    rcx,rdx
  404f39:	ja     404f71 <__ctype_b_loc@plt+0x2ca1>
  404f3b:	nop    DWORD PTR [rax+rax*1+0x0]
  404f40:	mov    rsi,QWORD PTR [rcx+0x10]
  404f44:	sub    rsi,rbx
  404f47:	add    rsi,rax
  404f4a:	mov    QWORD PTR [rcx+0x10],rsi
  404f4e:	mov    rsi,QWORD PTR [rcx]
  404f51:	mov    rdi,QWORD PTR [rcx+0x8]
  404f55:	sub    rsi,rbx
  404f58:	add    rsi,rax
  404f5b:	mov    QWORD PTR [rcx],rsi
  404f5e:	sub    rdi,rbx
  404f61:	add    rdi,rax
  404f64:	mov    QWORD PTR [rcx+0x8],rdi
  404f68:	add    rcx,0x28
  404f6c:	cmp    rcx,rdx
  404f6f:	jbe    404f40 <__ctype_b_loc@plt+0x2c70>
  404f71:	mov    rcx,QWORD PTR [r14+0x18]
  404f75:	sub    rcx,rbx
  404f78:	add    rax,rcx
  404f7b:	mov    QWORD PTR [r14+0x18],rax
  404f7f:	add    rsp,0x18
  404f83:	pop    rbx
  404f84:	pop    r12
  404f86:	pop    r13
  404f88:	pop    r14
  404f8a:	pop    r15
  404f8c:	pop    rbp
  404f8d:	ret    
  404f8e:	mov    rdi,QWORD PTR [r14+0xa8]
  404f95:	test   rdi,rdi
  404f98:	jne    404fd1 <__ctype_b_loc@plt+0x2d01>
  404f9a:	mov    BYTE PTR [r14+0xa],0x4
  404f9f:	mov    rax,QWORD PTR [r14+0x20]
  404fa3:	cmp    QWORD PTR [rax+0x98],0x0
  404fab:	je     404fc7 <__ctype_b_loc@plt+0x2cf7>
  404fad:	mov    esi,0x4
  404fb2:	mov    rdi,r14
  404fb5:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  404fba:	mov    rax,QWORD PTR [r14+0x20]
  404fbe:	mov    rdi,r14
  404fc1:	call   QWORD PTR [rax+0x98]
  404fc7:	mov    edi,0x1
  404fcc:	call   402280 <exit@plt>
  404fd1:	mov    DWORD PTR [rdi+0xd0],0x4
  404fdb:	add    rdi,0x8
  404fdf:	mov    esi,0x1
  404fe4:	call   402230 <longjmp@plt>
  404fe9:	nop    DWORD PTR [rax+0x0]
  404ff0:	push   rbp
  404ff1:	push   r15
  404ff3:	push   r14
  404ff5:	push   r13
  404ff7:	push   r12
  404ff9:	push   rbx
  404ffa:	sub    rsp,0x88
  405001:	mov    ebx,edx
  405003:	mov    rbp,rsi
  405006:	mov    r12,rdi
  405009:	mov    eax,DWORD PTR [rdi+0x60]
  40500c:	add    eax,0x1
  40500f:	mov    WORD PTR [rdi+0x60],ax
  405013:	movzx  eax,ax
  405016:	cmp    eax,0xc8
  40501b:	mov    QWORD PTR [rsp+0x8],rdi
  405020:	jb     405042 <__ctype_b_loc@plt+0x2d72>
  405022:	jne    405037 <__ctype_b_loc@plt+0x2d67>
  405024:	lea    rsi,[rip+0x25dfc]        # 42ae27 <__ctype_b_loc@plt+0x28b57>
  40502b:	xor    eax,eax
  40502d:	mov    rdi,r12
  405030:	call   404080 <__ctype_b_loc@plt+0x1db0>
  405035:	jmp    405042 <__ctype_b_loc@plt+0x2d72>
  405037:	cmp    eax,0xe1
  40503c:	jae    40761b <__ctype_b_loc@plt+0x534b>
  405042:	mov    rdi,r12
  405045:	mov    rsi,rbp
  405048:	mov    edx,ebx
  40504a:	call   407770 <__ctype_b_loc@plt+0x54a0>
  40504f:	test   eax,eax
  405051:	jne    40754e <__ctype_b_loc@plt+0x527e>
  405057:	lea    rbp,[r12+0x20]
  40505c:	lea    rax,[r12+0x98]
  405064:	mov    QWORD PTR [rsp+0x78],rax
  405069:	mov    DWORD PTR [rsp+0x5c],0x1
  405071:	mov    QWORD PTR [rsp+0x28],rbp
  405076:	jmp    407479 <__ctype_b_loc@plt+0x51a9>
  40507b:	nop    DWORD PTR [rax+rax*1+0x0]
  405080:	mov    rax,QWORD PTR [r12+0x28]
  405085:	mov    rax,QWORD PTR [rax+0x10]
  405089:	mov    QWORD PTR [r12+0x10],rax
  40508e:	jmp    407479 <__ctype_b_loc@plt+0x51a9>
  405093:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40509d:	nop    DWORD PTR [rax]
  4050a0:	mov    r10,rbx
  4050a3:	mov    r11,QWORD PTR [r12+0x18]
  4050a8:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  4050aa:	test   r8,r8
  4050ad:	je     4050e0 <__ctype_b_loc@plt+0x2e10>
  4050af:	xor    ecx,ecx
  4050b1:	cmp    rbx,rax
  4050b4:	jge    4050d3 <__ctype_b_loc@plt+0x2e03>
  4050b6:	neg    rax
  4050b9:	shl    rax,0x4
  4050bd:	add    rax,QWORD PTR [r15]
  4050c0:	mov    rcx,rbx
  4050c3:	shl    rcx,0x4
  4050c7:	mov    rdx,QWORD PTR [rcx+rax*1]
  4050cb:	mov    QWORD PTR [r14+rcx*1],rdx
  4050cf:	mov    ecx,DWORD PTR [rcx+rax*1+0x8]
  4050d3:	shl    rbx,0x4
  4050d7:	mov    DWORD PTR [r14+rbx*1+0x8],ecx
  4050dc:	nop    DWORD PTR [rax+0x0]
  4050e0:	mov    rax,r10
  4050e3:	lea    r10,[r10+0x4]
  4050e7:	mov    ebx,DWORD PTR [rax]
  4050e9:	mov    ecx,0x806
  4050ee:	bextr  ebp,ebx,ecx
  4050f3:	mov    r13,rbp
  4050f6:	shl    r13,0x4
  4050fa:	mov    edx,ebx
  4050fc:	and    dl,0x3f
  4050ff:	mov    ecx,ebx
  405101:	and    ecx,0x3f
  405104:	cmp    dl,0x25
  405107:	ja     4050e0 <__ctype_b_loc@plt+0x2e10>
  405109:	lea    r14,[r11+r13*1]
  40510d:	lea    rdx,[rip+0x24f58]        # 42a06c <__ctype_b_loc@plt+0x27d9c>
  405114:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  405118:	add    rcx,rdx
  40511b:	jmp    rcx
  40511d:	shr    rbx,0x13
  405121:	and    ebx,0xfffffff0
  405124:	mov    rax,QWORD PTR [r11+rbx*1]
  405128:	mov    QWORD PTR [r14],rax
  40512b:	mov    eax,DWORD PTR [r11+rbx*1+0x8]
  405130:	mov    DWORD PTR [r11+r13*1+0x8],eax
  405135:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  405137:	mov    QWORD PTR [rsp+0x20],r14
  40513c:	mov    QWORD PTR [rsp+0x40],r11
  405141:	mov    QWORD PTR [rsp+0x48],r10
  405146:	mov    rax,QWORD PTR [rsp+0x50]
  40514b:	mov    rcx,QWORD PTR [rax+0x18]
  40514f:	mov    QWORD PTR [rsp+0x10],rcx
  405154:	mov    rax,QWORD PTR [rax+0x20]
  405158:	mov    rax,QWORD PTR [rax+0x20]
  40515c:	shr    rbx,0xe
  405160:	mov    rax,QWORD PTR [rax+rbx*8]
  405164:	mov    QWORD PTR [rsp+0x80],rax
  40516c:	mov    r12b,BYTE PTR [rax+0x70]
  405170:	movzx  eax,r12b
  405174:	mov    QWORD PTR [rsp+0x60],rax
  405179:	lea    rbp,[rax*8+0x28]
  405181:	mov    r15,QWORD PTR [rsp+0x28]
  405186:	mov    r14,QWORD PTR [r15]
  405189:	mov    rdi,QWORD PTR [r14+0x18]
  40518d:	xor    esi,esi
  40518f:	xor    edx,edx
  405191:	mov    rcx,rbp
  405194:	call   QWORD PTR [r14+0x10]
  405198:	test   rax,rax
  40519b:	je     40758f <__ctype_b_loc@plt+0x52bf>
  4051a1:	mov    rdi,rax
  4051a4:	add    QWORD PTR [r14+0x78],rbp
  4051a8:	mov    rax,QWORD PTR [r15]
  4051ab:	mov    rcx,QWORD PTR [rax+0x28]
  4051af:	mov    QWORD PTR [rdi],rcx
  4051b2:	mov    QWORD PTR [rax+0x28],rdi
  4051b6:	mov    al,BYTE PTR [rax+0x20]
  4051b9:	and    al,0x3
  4051bb:	mov    BYTE PTR [rdi+0x9],al
  4051be:	mov    BYTE PTR [rdi+0x8],0x6
  4051c2:	mov    BYTE PTR [rdi+0xa],0x0
  4051c6:	mov    rax,QWORD PTR [rsp+0x10]
  4051cb:	mov    QWORD PTR [rdi+0x18],rax
  4051cf:	mov    BYTE PTR [rdi+0xb],r12b
  4051d3:	test   r12b,r12b
  4051d6:	je     405f87 <__ctype_b_loc@plt+0x3cb7>
  4051dc:	mov    rbx,r15
  4051df:	mov    r14,QWORD PTR [rsp+0x60]
  4051e4:	lea    rdx,[r14*8+0x0]
  4051ec:	mov    eax,r14d
  4051ef:	add    eax,0xffffffff
  4051f2:	shl    rax,0x3
  4051f6:	mov    rcx,rdx
  4051f9:	sub    rcx,rax
  4051fc:	mov    QWORD PTR [rsp+0x10],rdi
  405201:	mov    rax,QWORD PTR [rsp+0x10]
  405206:	lea    rdi,[rax+rcx*1]
  40520a:	add    rdi,0x20
  40520e:	xor    ebp,ebp
  405210:	xor    esi,esi
  405212:	call   402100 <memset@plt>
  405217:	mov    rdi,QWORD PTR [rsp+0x10]
  40521c:	mov    rsi,r14
  40521f:	mov    rax,QWORD PTR [rsp+0x80]
  405227:	mov    QWORD PTR [rdi+0x20],rax
  40522b:	mov    r12,QWORD PTR [rsp+0x8]
  405230:	mov    r10,QWORD PTR [rsp+0x48]
  405235:	mov    rdx,QWORD PTR [rsp+0x40]
  40523a:	mov    rcx,QWORD PTR [rsp+0x20]
  40523f:	jmp    405270 <__ctype_b_loc@plt+0x2fa0>
  405241:	mov    al,BYTE PTR [r14+0x9]
  405245:	mov    cl,BYTE PTR [r12+0x20]
  40524a:	not    cl
  40524c:	and    cl,al
  40524e:	test   cl,0x3
  405251:	je     405259 <__ctype_b_loc@plt+0x2f89>
  405253:	xor    al,0x3
  405255:	mov    BYTE PTR [r14+0x9],al
  405259:	mov    r12,QWORD PTR [rsp+0x8]
  40525e:	jmp    405372 <__ctype_b_loc@plt+0x30a2>
  405263:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40526d:	nop    DWORD PTR [rax]
  405270:	mov    r15d,DWORD PTR [r10]
  405273:	mov    eax,r15d
  405276:	and    eax,0x3f
  405279:	shr    r15,0x17
  40527d:	cmp    eax,0x4
  405280:	jne    4052a0 <__ctype_b_loc@plt+0x2fd0>
  405282:	mov    rax,QWORD PTR [rsp+0x50]
  405287:	mov    rax,QWORD PTR [rax+r15*8+0x28]
  40528c:	mov    QWORD PTR [rdi+rbp*8+0x28],rax
  405291:	jmp    405381 <__ctype_b_loc@plt+0x30b1>
  405296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4052a0:	shl    r15,0x4
  4052a4:	add    r15,rdx
  4052a7:	mov    r12,QWORD PTR [rbx]
  4052aa:	mov    r14,QWORD PTR [rsp+0x78]
  4052af:	mov    rax,QWORD PTR [r14]
  4052b2:	test   rax,rax
  4052b5:	je     4052ed <__ctype_b_loc@plt+0x301d>
  4052b7:	mov    rcx,QWORD PTR [rax+0x10]
  4052bb:	mov    r14,QWORD PTR [rsp+0x78]
  4052c0:	cmp    rcx,r15
  4052c3:	jb     4052ed <__ctype_b_loc@plt+0x301d>
  4052c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4052cf:	nop
  4052d0:	mov    r14,rax
  4052d3:	cmp    rcx,r15
  4052d6:	je     405241 <__ctype_b_loc@plt+0x2f71>
  4052dc:	mov    rax,QWORD PTR [r14]
  4052df:	test   rax,rax
  4052e2:	je     4052ed <__ctype_b_loc@plt+0x301d>
  4052e4:	mov    rcx,QWORD PTR [rax+0x10]
  4052e8:	cmp    rcx,r15
  4052eb:	jae    4052d0 <__ctype_b_loc@plt+0x3000>
  4052ed:	mov    rbx,r13
  4052f0:	mov    r13,r10
  4052f3:	mov    rdi,QWORD PTR [r12+0x18]
  4052f8:	xor    esi,esi
  4052fa:	xor    edx,edx
  4052fc:	mov    ecx,0x28
  405301:	call   QWORD PTR [r12+0x10]
  405306:	test   rax,rax
  405309:	je     40758f <__ctype_b_loc@plt+0x52bf>
  40530f:	add    QWORD PTR [r12+0x78],0x28
  405315:	mov    BYTE PTR [rax+0x8],0xa
  405319:	mov    cl,BYTE PTR [r12+0x20]
  40531e:	and    cl,0x3
  405321:	mov    BYTE PTR [rax+0x9],cl
  405324:	mov    QWORD PTR [rax+0x10],r15
  405328:	mov    rcx,QWORD PTR [r14]
  40532b:	mov    QWORD PTR [rax],rcx
  40532e:	mov    QWORD PTR [r14],rax
  405331:	lea    rcx,[r12+0xb8]
  405339:	mov    QWORD PTR [rax+0x18],rcx
  40533d:	mov    rcx,QWORD PTR [r12+0xd8]
  405345:	mov    QWORD PTR [rax+0x20],rcx
  405349:	mov    QWORD PTR [rcx+0x18],rax
  40534d:	mov    QWORD PTR [r12+0xd8],rax
  405355:	mov    r14,rax
  405358:	mov    r12,QWORD PTR [rsp+0x8]
  40535d:	mov    r10,r13
  405360:	mov    rdx,QWORD PTR [rsp+0x40]
  405365:	mov    r13,rbx
  405368:	mov    rsi,QWORD PTR [rsp+0x60]
  40536d:	mov    rdi,QWORD PTR [rsp+0x10]
  405372:	mov    QWORD PTR [rdi+rbp*8+0x28],r14
  405377:	mov    rbx,QWORD PTR [rsp+0x28]
  40537c:	mov    rcx,QWORD PTR [rsp+0x20]
  405381:	add    rbp,0x1
  405385:	add    r10,0x4
  405389:	cmp    rbp,rsi
  40538c:	jb     405270 <__ctype_b_loc@plt+0x2fa0>
  405392:	jmp    405fa7 <__ctype_b_loc@plt+0x3cd7>
  405397:	mov    ecx,0x90e
  40539c:	bextr  ecx,ebx,ecx
  4053a1:	shr    ebx,0x17
  4053a4:	test   ebx,ebx
  4053a6:	je     405fdf <__ctype_b_loc@plt+0x3d0f>
  4053ac:	test   ecx,ecx
  4053ae:	je     406004 <__ctype_b_loc@plt+0x3d34>
  4053b4:	cmp    DWORD PTR [r11+r13*1+0x8],0x5
  4053ba:	jne    4050e0 <__ctype_b_loc@plt+0x2e10>
  4053c0:	jmp    40601a <__ctype_b_loc@plt+0x3d4a>
  4053c5:	mov    rax,rbx
  4053c8:	shr    rax,0x13
  4053cc:	and    eax,0xfffffff0
  4053cf:	lea    rcx,[r11+rax*1]
  4053d3:	mov    eax,DWORD PTR [r11+rax*1+0x8]
  4053d8:	test   eax,eax
  4053da:	je     406262 <__ctype_b_loc@plt+0x3f92>
  4053e0:	cmp    eax,0x1
  4053e3:	jne    406266 <__ctype_b_loc@plt+0x3f96>
  4053e9:	cmp    DWORD PTR [rcx],0x0
  4053ec:	sete   dl
  4053ef:	jmp    406268 <__ctype_b_loc@plt+0x3f98>
  4053f4:	vmovsd xmm1,QWORD PTR [r14+0x10]
  4053fa:	vmovsd xmm2,QWORD PTR [r14+0x20]
  405400:	vaddsd xmm0,xmm2,QWORD PTR [r14]
  405405:	vxorps xmm3,xmm3,xmm3
  405409:	vucomisd xmm2,xmm3
  40540d:	jbe    405eff <__ctype_b_loc@plt+0x3c2f>
  405413:	vucomisd xmm1,xmm0
  405417:	jb     4050e0 <__ctype_b_loc@plt+0x2e10>
  40541d:	jmp    405f09 <__ctype_b_loc@plt+0x3c39>
  405422:	mov    rax,rbx
  405425:	shr    rax,0x13
  405429:	mov    edx,eax
  40542b:	and    edx,0xfffffff0
  40542e:	and    eax,0xff0
  405433:	mov    rcx,QWORD PTR [rsp+0x18]
  405438:	add    rax,rcx
  40543b:	add    rdx,r11
  40543e:	test   ebx,ebx
  405440:	cmovs  rdx,rax
  405444:	mov    rax,rbx
  405447:	shr    rax,0xa
  40544b:	and    eax,0xff0
  405450:	add    rax,rcx
  405453:	mov    ecx,0x90e
  405458:	bextr  ecx,ebx,ecx
  40545d:	shl    rcx,0x4
  405461:	add    rcx,r11
  405464:	test   ebx,0x400000
  40546a:	cmovne rcx,rax
  40546e:	cmp    DWORD PTR [rdx+0x8],0x3
  405472:	jne    405ea0 <__ctype_b_loc@plt+0x3bd0>
  405478:	cmp    DWORD PTR [rcx+0x8],0x3
  40547c:	jne    405ea0 <__ctype_b_loc@plt+0x3bd0>
  405482:	vmovsd xmm0,QWORD PTR [rdx]
  405486:	vmovsd xmm1,QWORD PTR [rcx]
  40548a:	vdivsd xmm2,xmm0,xmm1
  40548e:	vroundsd xmm2,xmm2,xmm2,0x9
  405494:	vmulsd xmm1,xmm1,xmm2
  405498:	vsubsd xmm0,xmm0,xmm1
  40549c:	jmp    405b84 <__ctype_b_loc@plt+0x38b4>
  4054a1:	mov    rax,rbx
  4054a4:	shr    rax,0x13
  4054a8:	mov    edx,eax
  4054aa:	and    edx,0xfffffff0
  4054ad:	and    eax,0xff0
  4054b2:	mov    rcx,QWORD PTR [rsp+0x18]
  4054b7:	add    rax,rcx
  4054ba:	add    rdx,r11
  4054bd:	test   ebx,ebx
  4054bf:	cmovs  rdx,rax
  4054c3:	mov    rax,rbx
  4054c6:	shr    rax,0xa
  4054ca:	and    eax,0xff0
  4054cf:	add    rax,rcx
  4054d2:	mov    ecx,0x90e
  4054d7:	bextr  ecx,ebx,ecx
  4054dc:	shl    rcx,0x4
  4054e0:	add    rcx,r11
  4054e3:	test   ebx,0x400000
  4054e9:	cmovne rcx,rax
  4054ed:	cmp    DWORD PTR [rdx+0x8],0x3
  4054f1:	jne    405ead <__ctype_b_loc@plt+0x3bdd>
  4054f7:	cmp    DWORD PTR [rcx+0x8],0x3
  4054fb:	jne    405ead <__ctype_b_loc@plt+0x3bdd>
  405501:	vmovsd xmm0,QWORD PTR [rdx]
  405505:	vmulsd xmm0,xmm0,QWORD PTR [rcx]
  405509:	jmp    405b84 <__ctype_b_loc@plt+0x38b4>
  40550e:	mov    rax,rbx
  405511:	shr    rax,0x13
  405515:	and    eax,0xfffffff0
  405518:	lea    rsi,[r11+rax*1]
  40551c:	mov    rcx,QWORD PTR [r11+rax*1]
  405520:	mov    QWORD PTR [r14+0x10],rcx
  405524:	mov    eax,DWORD PTR [r11+rax*1+0x8]
  405529:	mov    DWORD PTR [r14+0x18],eax
  40552d:	mov    QWORD PTR [r12+0x30],r10
  405532:	jmp    405ba9 <__ctype_b_loc@plt+0x38d9>
  405537:	shr    rbx,0x17
  40553b:	mov    rax,QWORD PTR [rsp+0x50]
  405540:	mov    rax,QWORD PTR [rax+rbx*8+0x28]
  405545:	mov    rax,QWORD PTR [rax+0x10]
  405549:	mov    rcx,QWORD PTR [rax]
  40554c:	mov    QWORD PTR [r14],rcx
  40554f:	mov    eax,DWORD PTR [rax+0x8]
  405552:	mov    DWORD PTR [r11+r13*1+0x8],eax
  405557:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  40555c:	mov    rax,rbx
  40555f:	shr    rax,0x13
  405563:	mov    edx,eax
  405565:	and    edx,0xfffffff0
  405568:	and    eax,0xff0
  40556d:	mov    rcx,QWORD PTR [rsp+0x18]
  405572:	add    rax,rcx
  405575:	add    rdx,r11
  405578:	test   ebx,ebx
  40557a:	cmovs  rdx,rax
  40557e:	mov    rax,rbx
  405581:	shr    rax,0xa
  405585:	and    eax,0xff0
  40558a:	add    rax,rcx
  40558d:	mov    ecx,0x90e
  405592:	bextr  ecx,ebx,ecx
  405597:	shl    rcx,0x4
  40559b:	add    rcx,r11
  40559e:	test   ebx,0x400000
  4055a4:	cmovne rcx,rax
  4055a8:	cmp    DWORD PTR [rdx+0x8],0x3
  4055ac:	jne    405eba <__ctype_b_loc@plt+0x3bea>
  4055b2:	cmp    DWORD PTR [rcx+0x8],0x3
  4055b6:	jne    405eba <__ctype_b_loc@plt+0x3bea>
  4055bc:	vmovsd xmm0,QWORD PTR [rdx]
  4055c0:	vaddsd xmm0,xmm0,QWORD PTR [rcx]
  4055c4:	jmp    405b84 <__ctype_b_loc@plt+0x38b4>
  4055c9:	mov    QWORD PTR [r12+0x30],r10
  4055ce:	mov    rax,rbx
  4055d1:	shr    rax,0x13
  4055d5:	mov    edx,eax
  4055d7:	and    edx,0xfffffff0
  4055da:	and    eax,0xff0
  4055df:	mov    rsi,QWORD PTR [rsp+0x18]
  4055e4:	add    rax,rsi
  4055e7:	add    rdx,r11
  4055ea:	test   ebx,ebx
  4055ec:	cmovs  rdx,rax
  4055f0:	mov    ecx,ebx
  4055f2:	shr    ecx,0xe
  4055f5:	movzx  eax,cl
  4055f8:	shl    rax,0x4
  4055fc:	add    rax,rsi
  4055ff:	and    ecx,0x1ff
  405605:	shl    rcx,0x4
  405609:	add    rcx,r11
  40560c:	test   ebx,0x400000
  405612:	cmovne rcx,rax
  405616:	mov    rdi,r12
  405619:	mov    rsi,r14
  40561c:	jmp    4058ea <__ctype_b_loc@plt+0x361a>
  405621:	mov    QWORD PTR [r12+0x30],r10
  405626:	mov    rcx,rbx
  405629:	shr    rcx,0x13
  40562d:	mov    eax,ecx
  40562f:	and    eax,0xfffffff0
  405632:	and    ecx,0xff0
  405638:	mov    rsi,QWORD PTR [rsp+0x18]
  40563d:	add    rcx,rsi
  405640:	add    rax,r11
  405643:	test   ebx,ebx
  405645:	cmovs  rax,rcx
  405649:	mov    rdx,rbx
  40564c:	shr    rdx,0xa
  405650:	and    edx,0xff0
  405656:	add    rdx,rsi
  405659:	mov    ecx,0x90e
  40565e:	bextr  ecx,ebx,ecx
  405663:	shl    rcx,0x4
  405667:	add    rcx,r11
  40566a:	test   ebx,0x400000
  405670:	cmovne rcx,rdx
  405674:	movsxd r11,DWORD PTR [rax+0x8]
  405678:	movsxd rsi,DWORD PTR [rcx+0x8]
  40567c:	cmp    r11d,esi
  40567f:	jne    405f38 <__ctype_b_loc@plt+0x3c68>
  405685:	lea    esi,[r11-0x3]
  405689:	cmp    esi,0x4
  40568c:	ja     40649a <__ctype_b_loc@plt+0x41ca>
  405692:	lea    rdi,[rip+0x24a6b]        # 42a104 <__ctype_b_loc@plt+0x27e34>
  405699:	movsxd rsi,DWORD PTR [rdi+rsi*4]
  40569d:	add    rsi,rdi
  4056a0:	jmp    rsi
  4056a2:	mov    rsi,QWORD PTR [rax]
  4056a5:	add    rsi,0x10
  4056a9:	mov    r14,QWORD PTR [rsp+0x28]
  4056ae:	jmp    4064ad <__ctype_b_loc@plt+0x41dd>
  4056b3:	mov    QWORD PTR [r12+0x30],r10
  4056b8:	mov    rax,rbx
  4056bb:	shr    rax,0x13
  4056bf:	mov    esi,eax
  4056c1:	and    esi,0xfffffff0
  4056c4:	and    eax,0xff0
  4056c9:	mov    rcx,QWORD PTR [rsp+0x18]
  4056ce:	add    rax,rcx
  4056d1:	add    rsi,r11
  4056d4:	test   ebx,ebx
  4056d6:	cmovs  rsi,rax
  4056da:	mov    rax,rbx
  4056dd:	shr    rax,0xa
  4056e1:	and    eax,0xff0
  4056e6:	add    rax,rcx
  4056e9:	mov    ecx,0x90e
  4056ee:	bextr  edx,ebx,ecx
  4056f3:	shl    rdx,0x4
  4056f7:	add    rdx,r11
  4056fa:	test   ebx,0x400000
  405700:	cmovne rdx,rax
  405704:	mov    rdi,r12
  405707:	mov    rbx,r10
  40570a:	call   409880 <__ctype_b_loc@plt+0x75b0>
  40570f:	cmp    eax,ebp
  405711:	jne    405723 <__ctype_b_loc@plt+0x3453>
  405713:	mov    eax,DWORD PTR [rbx]
  405715:	shr    eax,0xe
  405718:	lea    rbx,[rbx+rax*4]
  40571c:	add    rbx,0xfffffffffff80004
  405723:	mov    r10,rbx
  405726:	jmp    406f00 <__ctype_b_loc@plt+0x4c30>
  40572b:	mov    QWORD PTR [r12+0x30],r10
  405730:	lea    rbp,[r11+r13*1]
  405734:	add    rbp,0x8
  405738:	mov    eax,DWORD PTR [r11+r13*1+0x8]
  40573d:	cmp    eax,0x3
  405740:	je     406abe <__ctype_b_loc@plt+0x47ee>
  405746:	mov    r15,r11
  405749:	mov    r13,r10
  40574c:	cmp    eax,0x4
  40574f:	jne    406447 <__ctype_b_loc@plt+0x4177>
  405755:	mov    QWORD PTR [rsp+0x10],rbp
  40575a:	mov    QWORD PTR [rsp+0x20],r14
  40575f:	mov    r14,QWORD PTR [r14]
  405762:	add    r14,0x18
  405766:	lea    rsi,[rsp+0x30]
  40576b:	mov    rdi,r14
  40576e:	call   4020b0 <strtod@plt>
  405773:	mov    rbp,QWORD PTR [rsp+0x30]
  405778:	cmp    rbp,r14
  40577b:	je     40643d <__ctype_b_loc@plt+0x416d>
  405781:	mov    r12b,BYTE PTR [rbp+0x0]
  405785:	mov    eax,r12d
  405788:	or     al,0x20
  40578a:	cmp    al,0x78
  40578c:	jne    4057c2 <__ctype_b_loc@plt+0x34f2>
  40578e:	lea    rsi,[rsp+0x30]
  405793:	mov    edx,0x10
  405798:	mov    rdi,r14
  40579b:	call   402250 <strtoul@plt>
  4057a0:	vmovq  xmm0,rax
  4057a5:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x254c3]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  4057ad:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x254cb]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  4057b5:	vhaddpd xmm0,xmm0,xmm0
  4057b9:	mov    rbp,QWORD PTR [rsp+0x30]
  4057be:	mov    r12b,BYTE PTR [rbp+0x0]
  4057c2:	mov    r14,QWORD PTR [rsp+0x20]
  4057c7:	test   r12b,r12b
  4057ca:	je     406749 <__ctype_b_loc@plt+0x4479>
  4057d0:	vmovapd XMMWORD PTR [rsp+0x60],xmm0
  4057d6:	call   4022d0 <__ctype_b_loc@plt>
  4057db:	mov    rax,QWORD PTR [rax]
  4057de:	movzx  ecx,r12b
  4057e2:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4057e7:	jne    406a7e <__ctype_b_loc@plt+0x47ae>
  4057ed:	mov    r12,QWORD PTR [rsp+0x8]
  4057f2:	jmp    406442 <__ctype_b_loc@plt+0x4172>
  4057f7:	mov    ecx,ebx
  4057f9:	shr    ecx,0x17
  4057fc:	mov    DWORD PTR [r14],ecx
  4057ff:	mov    DWORD PTR [r11+r13*1+0x8],0x1
  405808:	add    rax,0x8
  40580c:	test   ebx,0x7fc000
  405812:	cmovne r10,rax
  405816:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  40581b:	mov    rax,rbx
  40581e:	shr    rax,0x13
  405822:	mov    edx,eax
  405824:	and    edx,0xfffffff0
  405827:	and    eax,0xff0
  40582c:	mov    rcx,QWORD PTR [rsp+0x18]
  405831:	add    rax,rcx
  405834:	add    rdx,r11
  405837:	test   ebx,ebx
  405839:	cmovs  rdx,rax
  40583d:	mov    rax,rbx
  405840:	shr    rax,0xa
  405844:	and    eax,0xff0
  405849:	add    rax,rcx
  40584c:	mov    ecx,0x90e
  405851:	bextr  ecx,ebx,ecx
  405856:	shl    rcx,0x4
  40585a:	add    rcx,r11
  40585d:	test   ebx,0x400000
  405863:	cmovne rcx,rax
  405867:	cmp    DWORD PTR [rdx+0x8],0x3
  40586b:	jne    405ec7 <__ctype_b_loc@plt+0x3bf7>
  405871:	cmp    DWORD PTR [rcx+0x8],0x3
  405875:	jne    405ec7 <__ctype_b_loc@plt+0x3bf7>
  40587b:	vmovsd xmm0,QWORD PTR [rdx]
  40587f:	vdivsd xmm0,xmm0,QWORD PTR [rcx]
  405883:	jmp    405b84 <__ctype_b_loc@plt+0x38b4>
  405888:	shr    rbx,0x13
  40588c:	and    ebx,0xfffffff0
  40588f:	add    rbx,r11
  405892:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40589c:	nop    DWORD PTR [rax+0x0]
  4058a0:	mov    DWORD PTR [rbx+0x8],0x0
  4058a7:	add    rbx,0xfffffffffffffff0
  4058ab:	cmp    rbx,r14
  4058ae:	jae    4058a0 <__ctype_b_loc@plt+0x35d0>
  4058b0:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  4058b5:	mov    rax,QWORD PTR [rsp+0x50]
  4058ba:	mov    rax,QWORD PTR [rax+0x18]
  4058be:	mov    QWORD PTR [rsp+0x30],rax
  4058c3:	mov    DWORD PTR [rsp+0x38],0x5
  4058cb:	mov    QWORD PTR [r12+0x30],r10
  4058d0:	shr    ebx,0xe
  4058d3:	shl    rbx,0x4
  4058d7:	add    rbx,QWORD PTR [rsp+0x18]
  4058dc:	lea    rsi,[rsp+0x30]
  4058e1:	mov    rdi,r12
  4058e4:	mov    rdx,rbx
  4058e7:	mov    rcx,r14
  4058ea:	mov    rbx,r10
  4058ed:	call   408b60 <__ctype_b_loc@plt+0x6890>
  4058f2:	jmp    4050a0 <__ctype_b_loc@plt+0x2dd0>
  4058f7:	shr    rbx,0xa
  4058fb:	and    ebx,0xfffffff0
  4058fe:	mov    rcx,QWORD PTR [rsp+0x18]
  405903:	mov    rax,QWORD PTR [rcx+rbx*1]
  405907:	mov    QWORD PTR [r14],rax
  40590a:	mov    eax,DWORD PTR [rcx+rbx*1+0x8]
  40590e:	mov    DWORD PTR [r11+r13*1+0x8],eax
  405913:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  405918:	lea    rsi,[r14+0x30]
  40591c:	mov    rax,QWORD PTR [r14+0x20]
  405920:	mov    QWORD PTR [r14+0x50],rax
  405924:	mov    eax,DWORD PTR [r14+0x28]
  405928:	mov    DWORD PTR [r14+0x58],eax
  40592c:	mov    rax,QWORD PTR [r14]
  40592f:	mov    rcx,QWORD PTR [r14+0x10]
  405933:	mov    QWORD PTR [r14+0x40],rcx
  405937:	mov    ecx,DWORD PTR [r14+0x18]
  40593b:	mov    DWORD PTR [r14+0x48],ecx
  40593f:	mov    QWORD PTR [r14+0x30],rax
  405943:	mov    eax,DWORD PTR [r11+r13*1+0x8]
  405948:	mov    DWORD PTR [r14+0x38],eax
  40594c:	add    r14,0x60
  405950:	mov    QWORD PTR [r12+0x10],r14
  405955:	mov    QWORD PTR [r12+0x30],r10
  40595a:	mov    eax,0x90e
  40595f:	bextr  edx,ebx,eax
  405964:	mov    rdi,r12
  405967:	mov    rbx,r10
  40596a:	call   404ff0 <__ctype_b_loc@plt+0x2d20>
  40596f:	mov    r11,QWORD PTR [r12+0x18]
  405974:	mov    rax,QWORD PTR [r12+0x28]
  405979:	mov    rax,QWORD PTR [rax+0x10]
  40597d:	mov    QWORD PTR [r12+0x10],rax
  405982:	mov    eax,DWORD PTR [r11+r13*1+0x38]
  405987:	test   eax,eax
  405989:	je     4059ad <__ctype_b_loc@plt+0x36dd>
  40598b:	lea    rcx,[r11+r13*1]
  40598f:	add    rcx,0x30
  405993:	mov    rdx,QWORD PTR [rcx]
  405996:	mov    QWORD PTR [rcx-0x10],rdx
  40599a:	mov    DWORD PTR [rcx-0x8],eax
  40599d:	mov    eax,DWORD PTR [rbx]
  40599f:	shr    eax,0xe
  4059a2:	lea    rbx,[rbx+rax*4]
  4059a6:	add    rbx,0xfffffffffff80004
  4059ad:	mov    r10,rbx
  4059b0:	add    r10,0x4
  4059b4:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  4059b9:	mov    rax,rbx
  4059bc:	shr    rax,0x13
  4059c0:	mov    edx,eax
  4059c2:	and    edx,0xfffffff0
  4059c5:	and    eax,0xff0
  4059ca:	mov    rcx,QWORD PTR [rsp+0x18]
  4059cf:	add    rax,rcx
  4059d2:	add    rdx,r11
  4059d5:	test   ebx,ebx
  4059d7:	cmovs  rdx,rax
  4059db:	mov    rax,rbx
  4059de:	shr    rax,0xa
  4059e2:	and    eax,0xff0
  4059e7:	add    rax,rcx
  4059ea:	mov    ecx,0x90e
  4059ef:	bextr  ecx,ebx,ecx
  4059f4:	shl    rcx,0x4
  4059f8:	add    rcx,r11
  4059fb:	test   ebx,0x400000
  405a01:	cmovne rcx,rax
  405a05:	cmp    DWORD PTR [rdx+0x8],0x3
  405a09:	jne    405ed4 <__ctype_b_loc@plt+0x3c04>
  405a0f:	cmp    DWORD PTR [rcx+0x8],0x3
  405a13:	jne    405ed4 <__ctype_b_loc@plt+0x3c04>
  405a19:	vmovsd xmm0,QWORD PTR [rdx]
  405a1d:	vmovsd xmm1,QWORD PTR [rcx]
  405a21:	mov    rbx,r10
  405a24:	mov    rbp,r11
  405a27:	call   4020c0 <pow@plt>
  405a2c:	mov    r11,rbp
  405a2f:	mov    r10,rbx
  405a32:	jmp    405a6f <__ctype_b_loc@plt+0x379f>
  405a34:	shr    rbx,0x13
  405a38:	and    ebx,0xfffffff0
  405a3b:	lea    r8,[r11+rbx*1]
  405a3f:	movsxd rcx,DWORD PTR [r11+rbx*1+0x8]
  405a44:	cmp    rcx,0x4
  405a48:	je     40629e <__ctype_b_loc@plt+0x3fce>
  405a4e:	cmp    ecx,0x5
  405a51:	jne    4062cd <__ctype_b_loc@plt+0x3ffd>
  405a57:	mov    rdi,QWORD PTR [r8]
  405a5a:	mov    rbx,r10
  405a5d:	mov    rbp,r11
  405a60:	call   4095e0 <__ctype_b_loc@plt+0x7310>
  405a65:	mov    r11,rbp
  405a68:	mov    r10,rbx
  405a6b:	vcvtsi2sd xmm0,xmm4,eax
  405a6f:	vmovsd QWORD PTR [r14],xmm0
  405a74:	mov    DWORD PTR [rbp+r13*1+0x8],0x3
  405a7d:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  405a82:	shr    rbx,0xa
  405a86:	and    ebx,0xfffffff0
  405a89:	add    rbx,QWORD PTR [rsp+0x18]
  405a8e:	mov    rax,QWORD PTR [rsp+0x50]
  405a93:	mov    rax,QWORD PTR [rax+0x18]
  405a97:	mov    QWORD PTR [rsp+0x30],rax
  405a9c:	mov    DWORD PTR [rsp+0x38],0x5
  405aa4:	mov    QWORD PTR [r12+0x30],r10
  405aa9:	lea    rsi,[rsp+0x30]
  405aae:	mov    rdi,r12
  405ab1:	mov    rdx,rbx
  405ab4:	jmp    405bd8 <__ctype_b_loc@plt+0x3908>
  405ab9:	mov    eax,ebx
  405abb:	shr    rbx,0x17
  405abf:	mov    ecx,0x90e
  405ac4:	bextr  edx,eax,ecx
  405ac9:	mov    rbp,r10
  405acc:	mov    QWORD PTR [r12+0x30],r10
  405ad1:	mov    esi,0x1
  405ad6:	sub    esi,ebx
  405ad8:	add    esi,edx
  405ada:	mov    rdi,r12
  405add:	call   404850 <__ctype_b_loc@plt+0x2580>
  405ae2:	mov    rax,QWORD PTR [r12+0x20]
  405ae7:	mov    rcx,QWORD PTR [rax+0x78]
  405aeb:	cmp    rcx,QWORD PTR [rax+0x70]
  405aef:	jb     405af9 <__ctype_b_loc@plt+0x3829>
  405af1:	mov    rdi,r12
  405af4:	call   408070 <__ctype_b_loc@plt+0x5da0>
  405af9:	mov    r11,QWORD PTR [r12+0x18]
  405afe:	shl    rbx,0x4
  405b02:	mov    rax,QWORD PTR [r11+rbx*1]
  405b06:	mov    QWORD PTR [r11+r13*1],rax
  405b0a:	mov    eax,DWORD PTR [r11+rbx*1+0x8]
  405b0f:	mov    DWORD PTR [r11+r13*1+0x8],eax
  405b14:	mov    r10,rbp
  405b17:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  405b1c:	mov    rax,rbx
  405b1f:	shr    rax,0x13
  405b23:	mov    edx,eax
  405b25:	and    edx,0xfffffff0
  405b28:	and    eax,0xff0
  405b2d:	mov    rcx,QWORD PTR [rsp+0x18]
  405b32:	add    rax,rcx
  405b35:	add    rdx,r11
  405b38:	test   ebx,ebx
  405b3a:	cmovs  rdx,rax
  405b3e:	mov    rax,rbx
  405b41:	shr    rax,0xa
  405b45:	and    eax,0xff0
  405b4a:	add    rax,rcx
  405b4d:	mov    ecx,0x90e
  405b52:	bextr  ecx,ebx,ecx
  405b57:	shl    rcx,0x4
  405b5b:	add    rcx,r11
  405b5e:	test   ebx,0x400000
  405b64:	cmovne rcx,rax
  405b68:	cmp    DWORD PTR [rdx+0x8],0x3
  405b6c:	jne    405ee1 <__ctype_b_loc@plt+0x3c11>
  405b72:	cmp    DWORD PTR [rcx+0x8],0x3
  405b76:	jne    405ee1 <__ctype_b_loc@plt+0x3c11>
  405b7c:	vmovsd xmm0,QWORD PTR [rdx]
  405b80:	vsubsd xmm0,xmm0,QWORD PTR [rcx]
  405b84:	vmovsd QWORD PTR [r14],xmm0
  405b89:	mov    DWORD PTR [r11+r13*1+0x8],0x3
  405b92:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  405b97:	mov    QWORD PTR [r12+0x30],r10
  405b9c:	mov    rsi,rbx
  405b9f:	shr    rsi,0x13
  405ba3:	and    esi,0xfffffff0
  405ba6:	add    rsi,r11
  405ba9:	mov    rax,rbx
  405bac:	shr    rax,0xa
  405bb0:	and    eax,0xff0
  405bb5:	add    rax,QWORD PTR [rsp+0x18]
  405bba:	mov    ecx,0x90e
  405bbf:	bextr  edx,ebx,ecx
  405bc4:	shl    rdx,0x4
  405bc8:	add    rdx,r11
  405bcb:	test   ebx,0x400000
  405bd1:	cmovne rdx,rax
  405bd5:	mov    rdi,r12
  405bd8:	mov    rcx,r14
  405bdb:	mov    rbx,r10
  405bde:	call   408700 <__ctype_b_loc@plt+0x6430>
  405be3:	jmp    4050a0 <__ctype_b_loc@plt+0x2dd0>
  405be8:	shr    rbx,0x13
  405bec:	and    ebx,0xfffffff0
  405bef:	lea    rdx,[r11+rbx*1]
  405bf3:	cmp    DWORD PTR [r11+rbx*1+0x8],0x3
  405bf9:	jne    405f6e <__ctype_b_loc@plt+0x3c9e>
  405bff:	vmovsd xmm0,QWORD PTR [rdx]
  405c03:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x25085]        # 42ac90 <__ctype_b_loc@plt+0x289c0>
  405c0b:	jmp    4062ba <__ctype_b_loc@plt+0x3fea>
  405c10:	mov    r15d,ebx
  405c13:	mov    ecx,ebx
  405c15:	shr    ecx,0x17
  405c18:	mov    eax,ebx
  405c1a:	shr    eax,0x1a
  405c1d:	and    eax,0x1f
  405c20:	mov    QWORD PTR [rsp+0x20],r14
  405c25:	je     405c35 <__ctype_b_loc@plt+0x3965>
  405c27:	and    ecx,0x7
  405c2a:	or     ecx,0x8
  405c2d:	add    eax,0xffffffff
  405c30:	shlx   ecx,ecx,eax
  405c35:	mov    DWORD PTR [rsp+0x10],ecx
  405c39:	mov    QWORD PTR [rsp+0x60],r13
  405c3e:	shr    r15d,0xe
  405c42:	shr    ebx,0x11
  405c45:	and    ebx,0x1f
  405c48:	mov    r14,QWORD PTR [rsp+0x28]
  405c4d:	mov    QWORD PTR [rsp+0x48],r10
  405c52:	mov    QWORD PTR [rsp+0x40],r11
  405c57:	je     406062 <__ctype_b_loc@plt+0x3d92>
  405c5d:	and    r15d,0x7
  405c61:	or     r15d,0x8
  405c65:	add    ebx,0xffffffff
  405c68:	shlx   r15d,r15d,ebx
  405c6d:	jmp    406069 <__ctype_b_loc@plt+0x3d99>
  405c72:	shr    rbx,0x17
  405c76:	mov    rax,QWORD PTR [rsp+0x50]
  405c7b:	mov    rax,QWORD PTR [rax+rbx*8+0x28]
  405c80:	mov    rcx,QWORD PTR [rax+0x10]
  405c84:	mov    rdx,QWORD PTR [r14]
  405c87:	mov    QWORD PTR [rcx],rdx
  405c8a:	mov    edx,DWORD PTR [r11+r13*1+0x8]
  405c8f:	mov    DWORD PTR [rcx+0x8],edx
  405c92:	cmp    DWORD PTR [r11+r13*1+0x8],0x4
  405c98:	jl     4050e0 <__ctype_b_loc@plt+0x2e10>
  405c9e:	mov    rsi,QWORD PTR [r14]
  405ca1:	test   BYTE PTR [rsi+0x9],0x3
  405ca5:	je     4050e0 <__ctype_b_loc@plt+0x2e10>
  405cab:	mov    cl,BYTE PTR [rax+0x9]
  405cae:	test   cl,0x4
  405cb1:	je     4050e0 <__ctype_b_loc@plt+0x2e10>
  405cb7:	mov    rdx,QWORD PTR [rsp+0x28]
  405cbc:	mov    rdi,QWORD PTR [rdx]
  405cbf:	cmp    BYTE PTR [rdi+0x21],0x1
  405cc3:	jne    406c41 <__ctype_b_loc@plt+0x4971>
  405cc9:	mov    rbx,r10
  405ccc:	mov    rbp,r11
  405ccf:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  405cd4:	jmp    405e95 <__ctype_b_loc@plt+0x3bc5>
  405cd9:	shr    ebx,0x17
  405cdc:	mov    r15,QWORD PTR [r12+0x28]
  405ce1:	mov    rax,QWORD PTR [r15]
  405ce4:	sub    rax,QWORD PTR [r15+0x8]
  405ce8:	shr    rax,0x4
  405cec:	mov    rcx,QWORD PTR [rsp+0x50]
  405cf1:	mov    rcx,QWORD PTR [rcx+0x20]
  405cf5:	movzx  ebp,BYTE PTR [rcx+0x71]
  405cf9:	not    ebp
  405cfb:	add    ebp,eax
  405cfd:	test   ebx,ebx
  405cff:	je     40622b <__ctype_b_loc@plt+0x3f5b>
  405d05:	add    ebx,0xffffffff
  405d08:	test   ebx,ebx
  405d0a:	jle    4050e0 <__ctype_b_loc@plt+0x2e10>
  405d10:	jmp    4066c4 <__ctype_b_loc@plt+0x43f4>
  405d15:	shr    rbx,0x17
  405d19:	shl    rbx,0x4
  405d1d:	mov    eax,DWORD PTR [r11+rbx*1+0x8]
  405d22:	test   eax,eax
  405d24:	je     4062e5 <__ctype_b_loc@plt+0x4015>
  405d2a:	cmp    eax,0x1
  405d2d:	jne    4062e9 <__ctype_b_loc@plt+0x4019>
  405d33:	cmp    DWORD PTR [r11+rbx*1],0x0
  405d38:	sete   al
  405d3b:	jmp    4062eb <__ctype_b_loc@plt+0x401b>
  405d40:	mov    rcx,rbx
  405d43:	shr    rcx,0x13
  405d47:	mov    eax,ecx
  405d49:	and    eax,0xfffffff0
  405d4c:	and    ecx,0xff0
  405d52:	mov    rsi,QWORD PTR [rsp+0x18]
  405d57:	add    rcx,rsi
  405d5a:	add    rax,r11
  405d5d:	test   ebx,ebx
  405d5f:	cmovs  rax,rcx
  405d63:	mov    rdx,rbx
  405d66:	shr    rdx,0xa
  405d6a:	and    edx,0xff0
  405d70:	add    rdx,rsi
  405d73:	mov    ecx,0x90e
  405d78:	bextr  ecx,ebx,ecx
  405d7d:	shl    rcx,0x4
  405d81:	add    rcx,r11
  405d84:	test   ebx,0x400000
  405d8a:	cmovne rcx,rdx
  405d8e:	mov    QWORD PTR [r12+0x30],r10
  405d93:	mov    edx,DWORD PTR [rax+0x8]
  405d96:	cmp    edx,DWORD PTR [rcx+0x8]
  405d99:	jne    4072a4 <__ctype_b_loc@plt+0x4fd4>
  405d9f:	cmp    edx,0x7
  405da2:	mov    rdi,QWORD PTR [rsp+0x28]
  405da7:	ja     405dbe <__ctype_b_loc@plt+0x3aee>
  405da9:	mov    edx,edx
  405dab:	lea    rsi,[rip+0x24386]        # 42a138 <__ctype_b_loc@plt+0x27e68>
  405db2:	movsxd rdx,DWORD PTR [rsi+rdx*4]
  405db6:	add    rdx,rsi
  405db9:	mov    sil,0x1
  405dbc:	jmp    rdx
  405dbe:	mov    rax,QWORD PTR [rax]
  405dc1:	cmp    rax,QWORD PTR [rcx]
  405dc4:	sete   sil
  405dc8:	jmp    4072a6 <__ctype_b_loc@plt+0x4fd6>
  405dcd:	mov    eax,ebx
  405dcf:	shr    rbx,0x17
  405dd3:	mov    ecx,0x90e
  405dd8:	bextr  ebp,eax,ecx
  405ddd:	lea    edx,[rbp-0x1]
  405de0:	test   ebx,ebx
  405de2:	je     405df0 <__ctype_b_loc@plt+0x3b20>
  405de4:	shl    rbx,0x4
  405de8:	add    rbx,r14
  405deb:	mov    QWORD PTR [r12+0x10],rbx
  405df0:	mov    rbx,r10
  405df3:	mov    QWORD PTR [r12+0x30],r10
  405df8:	mov    rdi,r12
  405dfb:	mov    rsi,r14
  405dfe:	call   407770 <__ctype_b_loc@plt+0x54a0>
  405e03:	cmp    eax,0x1
  405e06:	jne    4074a6 <__ctype_b_loc@plt+0x51d6>
  405e0c:	test   ebp,ebp
  405e0e:	je     405e55 <__ctype_b_loc@plt+0x3b85>
  405e10:	mov    rax,QWORD PTR [r12+0x28]
  405e15:	mov    rax,QWORD PTR [rax+0x10]
  405e19:	mov    QWORD PTR [r12+0x10],rax
  405e1e:	jmp    405e55 <__ctype_b_loc@plt+0x3b85>
  405e20:	shr    rbx,0x17
  405e24:	test   ebx,ebx
  405e26:	je     405e34 <__ctype_b_loc@plt+0x3b64>
  405e28:	shl    rbx,0x4
  405e2c:	add    rbx,r14
  405e2f:	mov    QWORD PTR [r12+0x10],rbx
  405e34:	mov    rbx,r10
  405e37:	mov    QWORD PTR [r12+0x30],r10
  405e3c:	mov    edx,0xffffffff
  405e41:	mov    rdi,r12
  405e44:	mov    rsi,r14
  405e47:	call   407770 <__ctype_b_loc@plt+0x54a0>
  405e4c:	cmp    eax,0x1
  405e4f:	jne    4074b5 <__ctype_b_loc@plt+0x51e5>
  405e55:	mov    r11,QWORD PTR [r12+0x18]
  405e5a:	mov    r10,rbx
  405e5d:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  405e62:	mov    eax,DWORD PTR [r11+r13*1+0x8]
  405e67:	test   eax,eax
  405e69:	je     4062ff <__ctype_b_loc@plt+0x402f>
  405e6f:	cmp    eax,0x1
  405e72:	jne    406303 <__ctype_b_loc@plt+0x4033>
  405e78:	cmp    DWORD PTR [r14],0x0
  405e7c:	sete   al
  405e7f:	jmp    406305 <__ctype_b_loc@plt+0x4035>
  405e84:	mov    rdi,r12
  405e87:	mov    rsi,r14
  405e8a:	mov    rbx,r10
  405e8d:	mov    rbp,r11
  405e90:	call   403e60 <__ctype_b_loc@plt+0x1b90>
  405e95:	mov    r11,rbp
  405e98:	mov    r10,rbx
  405e9b:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  405ea0:	mov    QWORD PTR [r12+0x30],r10
  405ea5:	mov    r8d,0x9
  405eab:	jmp    405eec <__ctype_b_loc@plt+0x3c1c>
  405ead:	mov    QWORD PTR [r12+0x30],r10
  405eb2:	mov    r8d,0x7
  405eb8:	jmp    405eec <__ctype_b_loc@plt+0x3c1c>
  405eba:	mov    QWORD PTR [r12+0x30],r10
  405ebf:	mov    r8d,0x5
  405ec5:	jmp    405eec <__ctype_b_loc@plt+0x3c1c>
  405ec7:	mov    QWORD PTR [r12+0x30],r10
  405ecc:	mov    r8d,0x8
  405ed2:	jmp    405eec <__ctype_b_loc@plt+0x3c1c>
  405ed4:	mov    QWORD PTR [r12+0x30],r10
  405ed9:	mov    r8d,0xa
  405edf:	jmp    405eec <__ctype_b_loc@plt+0x3c1c>
  405ee1:	mov    QWORD PTR [r12+0x30],r10
  405ee6:	mov    r8d,0x6
  405eec:	mov    rdi,r12
  405eef:	mov    rsi,r14
  405ef2:	mov    rbx,r10
  405ef5:	call   409040 <__ctype_b_loc@plt+0x6d70>
  405efa:	jmp    4050a0 <__ctype_b_loc@plt+0x2dd0>
  405eff:	vucomisd xmm0,xmm1
  405f03:	jb     4050e0 <__ctype_b_loc@plt+0x2e10>
  405f09:	shr    ebx,0xe
  405f0c:	lea    r10,[r10+rbx*4]
  405f10:	add    r10,0xfffffffffff80004
  405f17:	vmovsd QWORD PTR [r14],xmm0
  405f1c:	mov    DWORD PTR [r11+r13*1+0x8],0x3
  405f25:	vmovsd QWORD PTR [r14+0x30],xmm0
  405f2b:	mov    DWORD PTR [r14+0x38],0x3
  405f33:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  405f38:	mov    r14,r10
  405f3b:	lea    rax,[rip+0x2a99e]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  405f42:	mov    rdx,QWORD PTR [rax+r11*8]
  405f46:	mov    rcx,QWORD PTR [rax+rsi*8]
  405f4a:	mov    al,BYTE PTR [rdx+0x2]
  405f4d:	cmp    al,BYTE PTR [rcx+0x2]
  405f50:	jne    406330 <__ctype_b_loc@plt+0x4060>
  405f56:	lea    rsi,[rip+0x24fe2]        # 42af3f <__ctype_b_loc@plt+0x28c6f>
  405f5d:	xor    ebx,ebx
  405f5f:	xor    eax,eax
  405f61:	mov    rdi,r12
  405f64:	call   404080 <__ctype_b_loc@plt+0x1db0>
  405f69:	jmp    406343 <__ctype_b_loc@plt+0x4073>
  405f6e:	mov    QWORD PTR [r12+0x30],r10
  405f73:	mov    r8d,0xb
  405f79:	mov    rdi,r12
  405f7c:	mov    rsi,r14
  405f7f:	mov    rcx,rdx
  405f82:	jmp    405ef2 <__ctype_b_loc@plt+0x3c22>
  405f87:	mov    rax,QWORD PTR [rsp+0x80]
  405f8f:	mov    QWORD PTR [rdi+0x20],rax
  405f93:	mov    r12,QWORD PTR [rsp+0x8]
  405f98:	mov    r10,QWORD PTR [rsp+0x48]
  405f9d:	mov    rdx,QWORD PTR [rsp+0x40]
  405fa2:	mov    rcx,QWORD PTR [rsp+0x20]
  405fa7:	mov    QWORD PTR [rcx],rdi
  405faa:	mov    DWORD PTR [rdx+r13*1+0x8],0x6
  405fb3:	mov    QWORD PTR [r12+0x30],r10
  405fb8:	mov    rax,QWORD PTR [r12+0x20]
  405fbd:	mov    rcx,QWORD PTR [rax+0x78]
  405fc1:	cmp    rcx,QWORD PTR [rax+0x70]
  405fc5:	jb     405fd5 <__ctype_b_loc@plt+0x3d05>
  405fc7:	mov    rdi,r12
  405fca:	mov    rbx,r10
  405fcd:	call   408070 <__ctype_b_loc@plt+0x5da0>
  405fd2:	mov    r10,rbx
  405fd5:	mov    r11,QWORD PTR [r12+0x18]
  405fda:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  405fdf:	mov    rbx,QWORD PTR [r12+0x10]
  405fe4:	mov    rdx,QWORD PTR [r12+0x28]
  405fe9:	sub    rbx,r14
  405fec:	shr    rbx,0x4
  405ff0:	add    ebx,0xffffffff
  405ff3:	mov    rdx,QWORD PTR [rdx+0x10]
  405ff7:	mov    QWORD PTR [r12+0x10],rdx
  405ffc:	test   ecx,ecx
  405ffe:	jne    4053b4 <__ctype_b_loc@plt+0x30e4>
  406004:	mov    ecx,DWORD PTR [rax+0x4]
  406007:	add    rax,0x8
  40600b:	mov    r10,rax
  40600e:	cmp    DWORD PTR [r11+r13*1+0x8],0x5
  406014:	jne    4050e0 <__ctype_b_loc@plt+0x2e10>
  40601a:	mov    rsi,QWORD PTR [r14]
  40601d:	imul   eax,ecx,0x32
  406020:	lea    r15d,[rbx+rax*1]
  406024:	add    r15d,0xffffffce
  406028:	cmp    r15d,DWORD PTR [rsi+0x38]
  40602c:	mov    QWORD PTR [rsp+0x48],r10
  406031:	mov    QWORD PTR [rsp+0x10],rsi
  406036:	jle    40652e <__ctype_b_loc@plt+0x425e>
  40603c:	lea    rax,[rip+0x24ae5]        # 42ab28 <__ctype_b_loc@plt+0x28858>
  406043:	cmp    QWORD PTR [rsi+0x20],rax
  406047:	je     406511 <__ctype_b_loc@plt+0x4241>
  40604d:	mov    rbp,r11
  406050:	mov    al,BYTE PTR [rsi+0xb]
  406053:	mov    ecx,0x1
  406058:	shlx   rcx,rcx,rax
  40605d:	jmp    406516 <__ctype_b_loc@plt+0x4246>
  406062:	and    r15d,0x1ff
  406069:	mov    rbp,QWORD PTR [r14]
  40606c:	mov    rdi,QWORD PTR [rbp+0x18]
  406070:	xor    esi,esi
  406072:	xor    edx,edx
  406074:	mov    ecx,0x40
  406079:	call   QWORD PTR [rbp+0x10]
  40607c:	test   rax,rax
  40607f:	je     4075f6 <__ctype_b_loc@plt+0x5326>
  406085:	mov    r13,rax
  406088:	add    QWORD PTR [rbp+0x78],0x40
  40608d:	mov    rax,QWORD PTR [r14]
  406090:	mov    rcx,QWORD PTR [rax+0x28]
  406094:	mov    QWORD PTR [r13+0x0],rcx
  406098:	mov    QWORD PTR [rax+0x28],r13
  40609c:	mov    al,BYTE PTR [rax+0x20]
  40609f:	and    al,0x3
  4060a1:	mov    BYTE PTR [r13+0x9],al
  4060a5:	mov    BYTE PTR [r13+0x8],0x5
  4060aa:	vxorpd xmm0,xmm0,xmm0
  4060ae:	vmovupd XMMWORD PTR [r13+0x10],xmm0
  4060b4:	mov    WORD PTR [r13+0xa],0xff
  4060bb:	mov    DWORD PTR [r13+0x38],0x0
  4060c3:	lea    rax,[rip+0x24a5e]        # 42ab28 <__ctype_b_loc@plt+0x28858>
  4060ca:	mov    QWORD PTR [r13+0x20],rax
  4060ce:	mov    eax,DWORD PTR [rsp+0x10]
  4060d2:	cmp    eax,0xffffffff
  4060d5:	jl     406109 <__ctype_b_loc@plt+0x3e39>
  4060d7:	movsxd rbp,eax
  4060da:	shl    rbp,0x4
  4060de:	mov    r14,QWORD PTR [r14]
  4060e1:	mov    rdi,QWORD PTR [r14+0x18]
  4060e5:	xor    esi,esi
  4060e7:	xor    edx,edx
  4060e9:	mov    rcx,rbp
  4060ec:	call   QWORD PTR [r14+0x10]
  4060f0:	mov    r9d,DWORD PTR [rsp+0x10]
  4060f5:	test   r9d,r9d
  4060f8:	je     406103 <__ctype_b_loc@plt+0x3e33>
  4060fa:	test   rax,rax
  4060fd:	je     4075f6 <__ctype_b_loc@plt+0x5326>
  406103:	add    QWORD PTR [r14+0x78],rbp
  406107:	jmp    406121 <__ctype_b_loc@plt+0x3e51>
  406109:	lea    rsi,[rip+0x24ca9]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  406110:	xor    eax,eax
  406112:	mov    rdi,r12
  406115:	call   404080 <__ctype_b_loc@plt+0x1db0>
  40611a:	xor    eax,eax
  40611c:	mov    r9d,DWORD PTR [rsp+0x10]
  406121:	mov    edx,r15d
  406124:	mov    QWORD PTR [r13+0x18],rax
  406128:	movsxd rcx,DWORD PTR [r13+0x38]
  40612c:	cmp    ecx,r9d
  40612f:	jge    4061d1 <__ctype_b_loc@plt+0x3f01>
  406135:	movsxd rbx,r9d
  406138:	mov    esi,r9d
  40613b:	sub    esi,ecx
  40613d:	mov    r8,rcx
  406140:	not    r8
  406143:	add    r8,rbx
  406146:	and    rsi,0x7
  40614a:	je     406176 <__ctype_b_loc@plt+0x3ea6>
  40614c:	mov    rdi,rcx
  40614f:	shl    rdi,0x4
  406153:	add    rdi,rax
  406156:	add    rdi,0x8
  40615a:	neg    rsi
  40615d:	xor    ebp,ebp
  40615f:	nop
  406160:	mov    DWORD PTR [rdi],0x0
  406166:	add    rbp,0xffffffffffffffff
  40616a:	add    rdi,0x10
  40616e:	cmp    rsi,rbp
  406171:	jne    406160 <__ctype_b_loc@plt+0x3e90>
  406173:	sub    rcx,rbp
  406176:	cmp    r8,0x7
  40617a:	jb     4061d1 <__ctype_b_loc@plt+0x3f01>
  40617c:	sub    rbx,rcx
  40617f:	shl    rcx,0x4
  406183:	add    rcx,rax
  406186:	add    rcx,0x78
  40618a:	nop    WORD PTR [rax+rax*1+0x0]
  406190:	mov    DWORD PTR [rcx-0x70],0x0
  406197:	mov    DWORD PTR [rcx-0x60],0x0
  40619e:	mov    DWORD PTR [rcx-0x50],0x0
  4061a5:	mov    DWORD PTR [rcx-0x40],0x0
  4061ac:	mov    DWORD PTR [rcx-0x30],0x0
  4061b3:	mov    DWORD PTR [rcx-0x20],0x0
  4061ba:	mov    DWORD PTR [rcx-0x10],0x0
  4061c1:	mov    DWORD PTR [rcx],0x0
  4061c7:	sub    rcx,0xffffffffffffff80
  4061cb:	add    rbx,0xfffffffffffffff8
  4061cf:	jne    406190 <__ctype_b_loc@plt+0x3ec0>
  4061d1:	mov    DWORD PTR [r13+0x38],r9d
  4061d5:	mov    rdi,r12
  4061d8:	mov    rsi,r13
  4061db:	call   40a980 <__ctype_b_loc@plt+0x86b0>
  4061e0:	mov    rax,QWORD PTR [rsp+0x20]
  4061e5:	mov    QWORD PTR [rax],r13
  4061e8:	mov    rax,QWORD PTR [rsp+0x60]
  4061ed:	mov    rcx,QWORD PTR [rsp+0x40]
  4061f2:	mov    DWORD PTR [rcx+rax*1+0x8],0x5
  4061fa:	mov    r10,QWORD PTR [rsp+0x48]
  4061ff:	mov    QWORD PTR [r12+0x30],r10
  406204:	mov    rax,QWORD PTR [r12+0x20]
  406209:	mov    rcx,QWORD PTR [rax+0x78]
  40620d:	cmp    rcx,QWORD PTR [rax+0x70]
  406211:	jb     406221 <__ctype_b_loc@plt+0x3f51>
  406213:	mov    rdi,r12
  406216:	mov    rbx,r10
  406219:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40621e:	mov    r10,rbx
  406221:	mov    r11,QWORD PTR [r12+0x18]
  406226:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  40622b:	mov    QWORD PTR [r12+0x30],r10
  406230:	mov    rax,QWORD PTR [r12+0x38]
  406235:	sub    rax,QWORD PTR [r12+0x10]
  40623a:	mov    ecx,ebp
  40623c:	shl    ecx,0x4
  40623f:	movsxd rcx,ecx
  406242:	cmp    rax,rcx
  406245:	jg     4066a0 <__ctype_b_loc@plt+0x43d0>
  40624b:	mov    rbx,r10
  40624e:	mov    esi,DWORD PTR [r12+0x58]
  406253:	cmp    esi,ebp
  406255:	jge    406693 <__ctype_b_loc@plt+0x43c3>
  40625b:	add    esi,ebp
  40625d:	jmp    406695 <__ctype_b_loc@plt+0x43c5>
  406262:	mov    dl,0x1
  406264:	jmp    406268 <__ctype_b_loc@plt+0x3f98>
  406266:	xor    edx,edx
  406268:	movzx  edx,dl
  40626b:	mov    esi,0x90e
  406270:	bextr  esi,ebx,esi
  406275:	cmp    esi,edx
  406277:	je     406295 <__ctype_b_loc@plt+0x3fc5>
  406279:	mov    rcx,QWORD PTR [rcx]
  40627c:	mov    QWORD PTR [r14],rcx
  40627f:	mov    DWORD PTR [r11+r13*1+0x8],eax
  406284:	mov    eax,DWORD PTR [r10]
  406287:	shr    eax,0xe
  40628a:	lea    r10,[r10+rax*4]
  40628e:	add    r10,0xfffffffffff80004
  406295:	add    r10,0x4
  406299:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  40629e:	mov    rax,QWORD PTR [r8]
  4062a1:	vmovsd xmm0,QWORD PTR [rax+0x10]
  4062a6:	vunpcklps xmm0,xmm0,XMMWORD PTR [rip+0x249c2]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  4062ae:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x249ca]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  4062b6:	vhaddpd xmm0,xmm0,xmm0
  4062ba:	vmovlpd QWORD PTR [r14],xmm0
  4062bf:	mov    DWORD PTR [r11+r13*1+0x8],0x3
  4062c8:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  4062cd:	mov    QWORD PTR [r12+0x30],r10
  4062d2:	cmp    ecx,0x7
  4062d5:	mov    r9,QWORD PTR [rsp+0x28]
  4062da:	jne    40634b <__ctype_b_loc@plt+0x407b>
  4062dc:	mov    rdx,QWORD PTR [r8]
  4062df:	add    rdx,0x10
  4062e3:	jmp    406359 <__ctype_b_loc@plt+0x4089>
  4062e5:	mov    al,0x1
  4062e7:	jmp    4062eb <__ctype_b_loc@plt+0x401b>
  4062e9:	xor    eax,eax
  4062eb:	movzx  eax,al
  4062ee:	mov    DWORD PTR [r14],eax
  4062f1:	mov    DWORD PTR [r11+r13*1+0x8],0x1
  4062fa:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  4062ff:	mov    al,0x1
  406301:	jmp    406305 <__ctype_b_loc@plt+0x4035>
  406303:	xor    eax,eax
  406305:	movzx  eax,al
  406308:	mov    ecx,0x90e
  40630d:	bextr  ecx,ebx,ecx
  406312:	cmp    ecx,eax
  406314:	je     406327 <__ctype_b_loc@plt+0x4057>
  406316:	mov    eax,DWORD PTR [r10]
  406319:	shr    eax,0xe
  40631c:	lea    r10,[r10+rax*4]
  406320:	add    r10,0xfffffffffff80004
  406327:	add    r10,0x4
  40632b:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  406330:	lea    rsi,[rip+0x24c29]        # 42af60 <__ctype_b_loc@plt+0x28c90>
  406337:	xor    ebx,ebx
  406339:	xor    eax,eax
  40633b:	mov    rdi,r12
  40633e:	call   404080 <__ctype_b_loc@plt+0x1db0>
  406343:	mov    r10,r14
  406346:	jmp    406ee8 <__ctype_b_loc@plt+0x4c18>
  40634b:	mov    rdx,QWORD PTR [r9]
  40634e:	lea    rdx,[rdx+rcx*8]
  406352:	add    rdx,0xe0
  406359:	mov    rbp,QWORD PTR [rdx]
  40635c:	lea    rdx,[rip+0x247b5]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  406363:	test   rbp,rbp
  406366:	je     4063b9 <__ctype_b_loc@plt+0x40e9>
  406368:	mov    rsi,QWORD PTR [r9]
  40636b:	mov    rsi,QWORD PTR [rsi+0x188]
  406372:	mov    dil,BYTE PTR [rbp+0xb]
  406376:	mov    rax,0xffffffffffffffff
  40637d:	shlx   rax,rax,rdi
  406382:	andn   eax,eax,DWORD PTR [rsi+0xc]
  406388:	cdqe   
  40638a:	lea    rdi,[rax+rax*4]
  40638e:	shl    rdi,0x3
  406392:	add    rdi,QWORD PTR [rbp+0x20]
  406396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063a0:	cmp    DWORD PTR [rdi+0x18],0x4
  4063a4:	jne    4063b0 <__ctype_b_loc@plt+0x40e0>
  4063a6:	cmp    QWORD PTR [rdi+0x10],rsi
  4063aa:	je     406a00 <__ctype_b_loc@plt+0x4730>
  4063b0:	mov    rdi,QWORD PTR [rdi+0x20]
  4063b4:	test   rdi,rdi
  4063b7:	jne    4063a0 <__ctype_b_loc@plt+0x40d0>
  4063b9:	cmp    DWORD PTR [rdx+0x8],0x0
  4063bd:	je     406a0d <__ctype_b_loc@plt+0x473d>
  4063c3:	cmp    DWORD PTR [rdx+0x8],0x0
  4063c7:	je     407062 <__ctype_b_loc@plt+0x4d92>
  4063cd:	mov    rbp,r10
  4063d0:	sub    r14,QWORD PTR [r12+0x40]
  4063d5:	lea    rax,[r11+rbx*1]
  4063d9:	add    rax,0x8
  4063dd:	mov    rcx,QWORD PTR [r12+0x10]
  4063e2:	mov    rsi,QWORD PTR [rdx]
  4063e5:	mov    QWORD PTR [rcx],rsi
  4063e8:	mov    edx,DWORD PTR [rdx+0x8]
  4063eb:	mov    DWORD PTR [rcx+0x8],edx
  4063ee:	mov    rcx,QWORD PTR [r12+0x10]
  4063f3:	mov    rdx,QWORD PTR [r8]
  4063f6:	mov    QWORD PTR [rcx+0x10],rdx
  4063fa:	mov    eax,DWORD PTR [rax]
  4063fc:	mov    DWORD PTR [rcx+0x18],eax
  4063ff:	mov    rax,QWORD PTR [r12+0x10]
  406404:	mov    QWORD PTR [rax+0x20],0x0
  40640c:	mov    DWORD PTR [rax+0x28],0x0
  406413:	mov    rax,QWORD PTR [r12+0x38]
  406418:	sub    rax,QWORD PTR [r12+0x10]
  40641d:	cmp    rax,0x30
  406421:	jg     406ca9 <__ctype_b_loc@plt+0x49d9>
  406427:	mov    esi,DWORD PTR [r12+0x58]
  40642c:	cmp    esi,0x3
  40642f:	jge    406c9f <__ctype_b_loc@plt+0x49cf>
  406435:	add    esi,0x3
  406438:	jmp    406ca1 <__ctype_b_loc@plt+0x49d1>
  40643d:	mov    r14,QWORD PTR [rsp+0x20]
  406442:	mov    rbp,QWORD PTR [rsp+0x10]
  406447:	lea    rsi,[rip+0x24a35]        # 42ae83 <__ctype_b_loc@plt+0x28bb3>
  40644e:	jmp    406c65 <__ctype_b_loc@plt+0x4995>
  406453:	vmovsd xmm0,QWORD PTR [rcx]
  406457:	vucomisd xmm0,QWORD PTR [rax]
  40645b:	setae  bl
  40645e:	jmp    406ee8 <__ctype_b_loc@plt+0x4c18>
  406463:	mov    r13,r10
  406466:	mov    r12,QWORD PTR [rax]
  406469:	mov    rbx,QWORD PTR [rcx]
  40646c:	lea    r14,[r12+0x18]
  406471:	lea    r15,[rbx+0x18]
  406475:	mov    rdi,r14
  406478:	mov    rsi,r15
  40647b:	call   402200 <strcoll@plt>
  406480:	test   eax,eax
  406482:	je     406d03 <__ctype_b_loc@plt+0x4a33>
  406488:	test   eax,eax
  40648a:	setle  bl
  40648d:	mov    r12,QWORD PTR [rsp+0x8]
  406492:	mov    r10,r13
  406495:	jmp    406ee8 <__ctype_b_loc@plt+0x4c18>
  40649a:	mov    r14,QWORD PTR [rsp+0x28]
  40649f:	mov    rsi,QWORD PTR [r14]
  4064a2:	lea    rsi,[rsi+r11*8]
  4064a6:	add    rsi,0xe0
  4064ad:	mov    rbx,QWORD PTR [rsi]
  4064b0:	lea    r8,[rip+0x24661]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4064b7:	test   rbx,rbx
  4064ba:	je     406509 <__ctype_b_loc@plt+0x4239>
  4064bc:	mov    rsi,QWORD PTR [r14]
  4064bf:	mov    rdi,QWORD PTR [rsi+0x198]
  4064c6:	mov    sil,BYTE PTR [rbx+0xb]
  4064ca:	mov    rdx,0xffffffffffffffff
  4064d1:	shlx   rdx,rdx,rsi
  4064d6:	andn   edx,edx,DWORD PTR [rdi+0xc]
  4064dc:	movsxd rdx,edx
  4064df:	lea    rsi,[rdx+rdx*4]
  4064e3:	shl    rsi,0x3
  4064e7:	add    rsi,QWORD PTR [rbx+0x20]
  4064eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4064f0:	cmp    DWORD PTR [rsi+0x18],0x4
  4064f4:	jne    406500 <__ctype_b_loc@plt+0x4230>
  4064f6:	cmp    QWORD PTR [rsi+0x10],rdi
  4064fa:	je     406b7d <__ctype_b_loc@plt+0x48ad>
  406500:	mov    rsi,QWORD PTR [rsi+0x20]
  406504:	test   rsi,rsi
  406507:	jne    4064f0 <__ctype_b_loc@plt+0x4220>
  406509:	mov    r15,r10
  40650c:	jmp    406b83 <__ctype_b_loc@plt+0x48b3>
  406511:	mov    rbp,r11
  406514:	xor    ecx,ecx
  406516:	mov    rdi,r12
  406519:	mov    edx,r15d
  40651c:	call   40a3a0 <__ctype_b_loc@plt+0x80d0>
  406521:	mov    rsi,QWORD PTR [rsp+0x10]
  406526:	mov    r10,QWORD PTR [rsp+0x48]
  40652b:	mov    r11,rbp
  40652e:	test   ebx,ebx
  406530:	jle    4050e0 <__ctype_b_loc@plt+0x2e10>
  406536:	movsxd rbp,ebx
  406539:	nop    DWORD PTR [rax+0x0]
  406540:	mov    ecx,r15d
  406543:	mov    rbx,rbp
  406546:	shl    rbx,0x4
  40654a:	add    rbx,r14
  40654d:	lea    r15d,[rcx-0x1]
  406551:	cmp    r15d,DWORD PTR [rsi+0x38]
  406555:	jae    406570 <__ctype_b_loc@plt+0x42a0>
  406557:	movsxd rax,r15d
  40655a:	shl    rax,0x4
  40655e:	add    rax,QWORD PTR [rsi+0x18]
  406562:	jmp    4065f0 <__ctype_b_loc@plt+0x4320>
  406567:	nop    WORD PTR [rax+rax*1+0x0]
  406570:	vcvtsi2sd xmm0,xmm4,ecx
  406574:	test   ecx,ecx
  406576:	je     4065b7 <__ctype_b_loc@plt+0x42e7>
  406578:	vmovq  rdx,xmm0
  40657d:	mov    rax,rdx
  406580:	shr    rax,0x20
  406584:	add    eax,edx
  406586:	movzx  edx,BYTE PTR [rsi+0xb]
  40658a:	mov    rdi,0xffffffffffffffff
  406591:	shlx   rdi,rdi,rdx
  406596:	or     rdi,0x1
  40659a:	xor    rdi,0xfffffffffffffffe
  40659e:	xor    edx,edx
  4065a0:	div    rdi
  4065a3:	lea    rax,[rdx+rdx*4]
  4065a7:	shl    rax,0x3
  4065ab:	add    rax,QWORD PTR [rsi+0x20]
  4065af:	cmp    DWORD PTR [rax+0x18],0x3
  4065b3:	jne    4065d3 <__ctype_b_loc@plt+0x4303>
  4065b5:	jmp    4065c6 <__ctype_b_loc@plt+0x42f6>
  4065b7:	mov    rax,QWORD PTR [rsi+0x20]
  4065bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4065c0:	cmp    DWORD PTR [rax+0x18],0x3
  4065c4:	jne    4065d3 <__ctype_b_loc@plt+0x4303>
  4065c6:	vmovsd xmm1,QWORD PTR [rax+0x10]
  4065cb:	vucomisd xmm1,xmm0
  4065cf:	jne    4065d3 <__ctype_b_loc@plt+0x4303>
  4065d1:	jnp    4065f0 <__ctype_b_loc@plt+0x4320>
  4065d3:	mov    rax,QWORD PTR [rax+0x20]
  4065d7:	test   rax,rax
  4065da:	jne    4065c0 <__ctype_b_loc@plt+0x42f0>
  4065dc:	mov    r12,r14
  4065df:	mov    r14,r11
  4065e2:	jmp    406606 <__ctype_b_loc@plt+0x4336>
  4065e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4065ee:	xchg   ax,ax
  4065f0:	lea    rdx,[rip+0x24521]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4065f7:	cmp    rax,rdx
  4065fa:	jne    406639 <__ctype_b_loc@plt+0x4369>
  4065fc:	mov    r12,r14
  4065ff:	mov    r14,r11
  406602:	vcvtsi2sd xmm0,xmm4,ecx
  406606:	vmovq  QWORD PTR [rsp+0x30],xmm0
  40660c:	mov    DWORD PTR [rsp+0x38],0x3
  406614:	lea    rdx,[rsp+0x30]
  406619:	mov    r13,QWORD PTR [rsp+0x8]
  40661e:	mov    rdi,r13
  406621:	call   409ca0 <__ctype_b_loc@plt+0x79d0>
  406626:	mov    rsi,QWORD PTR [rsp+0x10]
  40662b:	mov    r10,QWORD PTR [rsp+0x48]
  406630:	mov    r11,r14
  406633:	mov    r14,r12
  406636:	mov    r12,r13
  406639:	mov    rcx,QWORD PTR [rbx]
  40663c:	mov    QWORD PTR [rax],rcx
  40663f:	mov    ecx,DWORD PTR [rbx+0x8]
  406642:	mov    DWORD PTR [rax+0x8],ecx
  406645:	cmp    DWORD PTR [rbx+0x8],0x4
  406649:	jl     406680 <__ctype_b_loc@plt+0x43b0>
  40664b:	mov    rax,QWORD PTR [rbx]
  40664e:	test   BYTE PTR [rax+0x9],0x3
  406652:	je     406680 <__ctype_b_loc@plt+0x43b0>
  406654:	movzx  eax,BYTE PTR [rsi+0x9]
  406658:	test   al,0x4
  40665a:	je     406680 <__ctype_b_loc@plt+0x43b0>
  40665c:	mov    rcx,QWORD PTR [rsp+0x28]
  406661:	mov    rcx,QWORD PTR [rcx]
  406664:	and    al,0xfb
  406666:	mov    BYTE PTR [rsi+0x9],al
  406669:	mov    rax,QWORD PTR [rcx+0x40]
  40666d:	mov    QWORD PTR [rsi+0x30],rax
  406671:	mov    QWORD PTR [rcx+0x40],rsi
  406675:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40667f:	nop
  406680:	cmp    rbp,0x1
  406684:	lea    rbp,[rbp-0x1]
  406688:	jg     406540 <__ctype_b_loc@plt+0x4270>
  40668e:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  406693:	add    esi,esi
  406695:	mov    rdi,r12
  406698:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  40669d:	mov    r10,rbx
  4066a0:	mov    r11,QWORD PTR [r12+0x18]
  4066a5:	add    r13,r11
  4066a8:	movsxd rax,ebp
  4066ab:	shl    rax,0x4
  4066af:	add    rax,r13
  4066b2:	mov    QWORD PTR [r12+0x10],rax
  4066b7:	mov    ebx,ebp
  4066b9:	mov    r14,r13
  4066bc:	test   ebx,ebx
  4066be:	jle    4050e0 <__ctype_b_loc@plt+0x2e10>
  4066c4:	movsxd rax,ebp
  4066c7:	mov    r9d,ebx
  4066ca:	mov    r8d,r9d
  4066cd:	and    r8d,0x1
  4066d1:	cmp    ebx,0x1
  4066d4:	jne    4066dd <__ctype_b_loc@plt+0x440d>
  4066d6:	xor    ebx,ebx
  4066d8:	jmp    4050aa <__ctype_b_loc@plt+0x2dda>
  4066dd:	mov    rsi,rax
  4066e0:	shl    rsi,0x4
  4066e4:	neg    rsi
  4066e7:	lea    rdi,[r14+0x18]
  4066eb:	sub    r9,r8
  4066ee:	xor    ebp,ebp
  4066f0:	mov    ecx,0x0
  4066f5:	cmp    rbp,rax
  4066f8:	jge    406709 <__ctype_b_loc@plt+0x4439>
  4066fa:	mov    rcx,QWORD PTR [r15]
  4066fd:	mov    rbx,QWORD PTR [rcx+rsi*1]
  406701:	mov    QWORD PTR [rdi-0x18],rbx
  406705:	mov    ecx,DWORD PTR [rcx+rsi*1+0x8]
  406709:	mov    DWORD PTR [rdi-0x10],ecx
  40670c:	lea    rcx,[rbp+0x1]
  406710:	xor    ebx,ebx
  406712:	cmp    rcx,rax
  406715:	jge    406727 <__ctype_b_loc@plt+0x4457>
  406717:	mov    rbx,QWORD PTR [r15]
  40671a:	mov    rdx,QWORD PTR [rbx+rsi*1+0x10]
  40671f:	mov    QWORD PTR [rdi-0x8],rdx
  406723:	mov    ebx,DWORD PTR [rbx+rsi*1+0x18]
  406727:	mov    DWORD PTR [rdi],ebx
  406729:	add    rbp,0x2
  40672d:	add    rsi,0x20
  406731:	add    rdi,0x20
  406735:	add    rcx,0x1
  406739:	mov    rbx,rbp
  40673c:	cmp    r9,rbp
  40673f:	mov    rbp,rcx
  406742:	jne    4066f0 <__ctype_b_loc@plt+0x4420>
  406744:	jmp    4050aa <__ctype_b_loc@plt+0x2dda>
  406749:	mov    r12,QWORD PTR [rsp+0x8]
  40674e:	mov    rbp,QWORD PTR [rsp+0x10]
  406753:	jmp    406aac <__ctype_b_loc@plt+0x47dc>
  406758:	mov    eax,DWORD PTR [rax]
  40675a:	cmp    eax,DWORD PTR [rcx]
  40675c:	sete   sil
  406760:	jmp    4072a6 <__ctype_b_loc@plt+0x4fd6>
  406765:	mov    rsi,QWORD PTR [rax]
  406768:	mov    rdx,QWORD PTR [rcx]
  40676b:	cmp    rsi,rdx
  40676e:	je     407394 <__ctype_b_loc@plt+0x50c4>
  406774:	mov    rsi,QWORD PTR [rsi+0x10]
  406778:	test   rsi,rsi
  40677b:	je     4072a4 <__ctype_b_loc@plt+0x4fd4>
  406781:	mov    r11b,BYTE PTR [rsi+0xa]
  406785:	test   r11b,0x10
  406789:	jne    4072a4 <__ctype_b_loc@plt+0x4fd4>
  40678f:	mov    r15,r10
  406792:	mov    r9,QWORD PTR [rdx+0x10]
  406796:	mov    rdx,QWORD PTR [rdi]
  406799:	mov    rdi,QWORD PTR [rdx+0x148]
  4067a0:	mov    r10d,DWORD PTR [rdi+0xc]
  4067a4:	mov    dl,BYTE PTR [rsi+0xb]
  4067a7:	mov    rbx,0xffffffffffffffff
  4067ae:	shlx   rdx,rbx,rdx
  4067b3:	andn   edx,edx,r10d
  4067b8:	movsxd rdx,edx
  4067bb:	lea    rdx,[rdx+rdx*4]
  4067bf:	shl    rdx,0x3
  4067c3:	add    rdx,QWORD PTR [rsi+0x20]
  4067c7:	nop    WORD PTR [rax+rax*1+0x0]
  4067d0:	cmp    DWORD PTR [rdx+0x18],0x4
  4067d4:	jne    4067dc <__ctype_b_loc@plt+0x450c>
  4067d6:	cmp    QWORD PTR [rdx+0x10],rdi
  4067da:	je     4067ec <__ctype_b_loc@plt+0x451c>
  4067dc:	mov    rdx,QWORD PTR [rdx+0x20]
  4067e0:	test   rdx,rdx
  4067e3:	jne    4067d0 <__ctype_b_loc@plt+0x4500>
  4067e5:	lea    rdx,[rip+0x2432c]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4067ec:	mov    r8d,DWORD PTR [rdx+0x8]
  4067f0:	test   r8d,r8d
  4067f3:	je     40728d <__ctype_b_loc@plt+0x4fbd>
  4067f9:	test   rdx,rdx
  4067fc:	je     407295 <__ctype_b_loc@plt+0x4fc5>
  406802:	cmp    rsi,r9
  406805:	je     4072cd <__ctype_b_loc@plt+0x4ffd>
  40680b:	test   r9,r9
  40680e:	je     407295 <__ctype_b_loc@plt+0x4fc5>
  406814:	mov    r11b,BYTE PTR [r9+0xa]
  406818:	test   r11b,0x10
  40681c:	jne    407295 <__ctype_b_loc@plt+0x4fc5>
  406822:	mov    bl,BYTE PTR [r9+0xb]
  406826:	mov    rsi,0xffffffffffffffff
  40682d:	shlx   rsi,rsi,rbx
  406832:	andn   esi,esi,r10d
  406837:	movsxd rsi,esi
  40683a:	lea    rbx,[rsi+rsi*4]
  40683e:	shl    rbx,0x3
  406842:	add    rbx,QWORD PTR [r9+0x20]
  406846:	cmp    DWORD PTR [rbx+0x18],0x4
  40684a:	jne    406852 <__ctype_b_loc@plt+0x4582>
  40684c:	cmp    QWORD PTR [rbx+0x10],rdi
  406850:	je     406862 <__ctype_b_loc@plt+0x4592>
  406852:	mov    rbx,QWORD PTR [rbx+0x20]
  406856:	test   rbx,rbx
  406859:	jne    406846 <__ctype_b_loc@plt+0x4576>
  40685b:	lea    rbx,[rip+0x242b6]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  406862:	mov    edi,DWORD PTR [rbx+0x8]
  406865:	test   edi,edi
  406867:	mov    r10,r15
  40686a:	je     40729c <__ctype_b_loc@plt+0x4fcc>
  406870:	xor    esi,esi
  406872:	test   rbx,rbx
  406875:	je     4072a6 <__ctype_b_loc@plt+0x4fd6>
  40687b:	cmp    r8d,edi
  40687e:	jne    4072a6 <__ctype_b_loc@plt+0x4fd6>
  406884:	cmp    r8d,0x3
  406888:	ja     4072b7 <__ctype_b_loc@plt+0x4fe7>
  40688e:	mov    esi,r8d
  406891:	lea    rdi,[rip+0x238d0]        # 42a168 <__ctype_b_loc@plt+0x27e98>
  406898:	movsxd rsi,DWORD PTR [rdi+rsi*4]
  40689c:	add    rsi,rdi
  40689f:	jmp    rsi
  4068a1:	vmovsd xmm0,QWORD PTR [rcx]
  4068a5:	vcmpeqsd xmm0,xmm0,QWORD PTR [rax]
  4068aa:	vmovq  rsi,xmm0
  4068af:	and    esi,0x1
  4068b2:	jmp    4072a6 <__ctype_b_loc@plt+0x4fd6>
  4068b7:	mov    rsi,QWORD PTR [rax]
  4068ba:	mov    rdx,QWORD PTR [rcx]
  4068bd:	cmp    rsi,rdx
  4068c0:	je     407394 <__ctype_b_loc@plt+0x50c4>
  4068c6:	mov    rsi,QWORD PTR [rsi+0x10]
  4068ca:	test   rsi,rsi
  4068cd:	je     4072a4 <__ctype_b_loc@plt+0x4fd4>
  4068d3:	mov    r11b,BYTE PTR [rsi+0xa]
  4068d7:	test   r11b,0x10
  4068db:	jne    4072a4 <__ctype_b_loc@plt+0x4fd4>
  4068e1:	mov    r15,r10
  4068e4:	mov    r9,QWORD PTR [rdx+0x10]
  4068e8:	mov    rdx,QWORD PTR [rdi]
  4068eb:	mov    rdi,QWORD PTR [rdx+0x148]
  4068f2:	mov    r10d,DWORD PTR [rdi+0xc]
  4068f6:	mov    dl,BYTE PTR [rsi+0xb]
  4068f9:	mov    rbx,0xffffffffffffffff
  406900:	shlx   rdx,rbx,rdx
  406905:	andn   edx,edx,r10d
  40690a:	movsxd rdx,edx
  40690d:	lea    rdx,[rdx+rdx*4]
  406911:	shl    rdx,0x3
  406915:	add    rdx,QWORD PTR [rsi+0x20]
  406919:	nop    DWORD PTR [rax+0x0]
  406920:	cmp    DWORD PTR [rdx+0x18],0x4
  406924:	jne    40692c <__ctype_b_loc@plt+0x465c>
  406926:	cmp    QWORD PTR [rdx+0x10],rdi
  40692a:	je     40693c <__ctype_b_loc@plt+0x466c>
  40692c:	mov    rdx,QWORD PTR [rdx+0x20]
  406930:	test   rdx,rdx
  406933:	jne    406920 <__ctype_b_loc@plt+0x4650>
  406935:	lea    rdx,[rip+0x241dc]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40693c:	mov    r8d,DWORD PTR [rdx+0x8]
  406940:	test   r8d,r8d
  406943:	je     40728d <__ctype_b_loc@plt+0x4fbd>
  406949:	test   rdx,rdx
  40694c:	je     407295 <__ctype_b_loc@plt+0x4fc5>
  406952:	cmp    rsi,r9
  406955:	je     4072cd <__ctype_b_loc@plt+0x4ffd>
  40695b:	test   r9,r9
  40695e:	je     407295 <__ctype_b_loc@plt+0x4fc5>
  406964:	mov    r11b,BYTE PTR [r9+0xa]
  406968:	test   r11b,0x10
  40696c:	jne    407295 <__ctype_b_loc@plt+0x4fc5>
  406972:	mov    bl,BYTE PTR [r9+0xb]
  406976:	mov    rsi,0xffffffffffffffff
  40697d:	shlx   rsi,rsi,rbx
  406982:	andn   esi,esi,r10d
  406987:	movsxd rsi,esi
  40698a:	lea    rbx,[rsi+rsi*4]
  40698e:	shl    rbx,0x3
  406992:	add    rbx,QWORD PTR [r9+0x20]
  406996:	cmp    DWORD PTR [rbx+0x18],0x4
  40699a:	jne    4069a2 <__ctype_b_loc@plt+0x46d2>
  40699c:	cmp    QWORD PTR [rbx+0x10],rdi
  4069a0:	je     4069b2 <__ctype_b_loc@plt+0x46e2>
  4069a2:	mov    rbx,QWORD PTR [rbx+0x20]
  4069a6:	test   rbx,rbx
  4069a9:	jne    406996 <__ctype_b_loc@plt+0x46c6>
  4069ab:	lea    rbx,[rip+0x24166]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4069b2:	mov    edi,DWORD PTR [rbx+0x8]
  4069b5:	test   edi,edi
  4069b7:	mov    r10,r15
  4069ba:	je     40729c <__ctype_b_loc@plt+0x4fcc>
  4069c0:	xor    esi,esi
  4069c2:	test   rbx,rbx
  4069c5:	je     4072a6 <__ctype_b_loc@plt+0x4fd6>
  4069cb:	cmp    r8d,edi
  4069ce:	jne    4072a6 <__ctype_b_loc@plt+0x4fd6>
  4069d4:	cmp    r8d,0x3
  4069d8:	ja     4072b7 <__ctype_b_loc@plt+0x4fe7>
  4069de:	mov    esi,r8d
  4069e1:	lea    rdi,[rip+0x23770]        # 42a158 <__ctype_b_loc@plt+0x27e88>
  4069e8:	movsxd rsi,DWORD PTR [rdi+rsi*4]
  4069ec:	add    rsi,rdi
  4069ef:	jmp    rsi
  4069f1:	mov    esi,DWORD PTR [rdx]
  4069f3:	cmp    esi,DWORD PTR [rbx]
  4069f5:	jne    407295 <__ctype_b_loc@plt+0x4fc5>
  4069fb:	jmp    4072cd <__ctype_b_loc@plt+0x4ffd>
  406a00:	mov    rdx,rdi
  406a03:	cmp    DWORD PTR [rdx+0x8],0x0
  406a07:	jne    4063c3 <__ctype_b_loc@plt+0x40f3>
  406a0d:	mov    rsi,QWORD PTR [r9]
  406a10:	mov    rbp,QWORD PTR [rsi+0xe0]
  406a17:	lea    rdx,[rip+0x240fa]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  406a1e:	test   rbp,rbp
  406a21:	je     4063c3 <__ctype_b_loc@plt+0x40f3>
  406a27:	mov    rsi,QWORD PTR [rsi+0x188]
  406a2e:	mov    al,BYTE PTR [rbp+0xb]
  406a31:	mov    rdi,0xffffffffffffffff
  406a38:	shlx   rax,rdi,rax
  406a3d:	andn   eax,eax,DWORD PTR [rsi+0xc]
  406a43:	cdqe   
  406a45:	lea    rdi,[rax+rax*4]
  406a49:	shl    rdi,0x3
  406a4d:	add    rdi,QWORD PTR [rbp+0x20]
  406a51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  406a60:	cmp    DWORD PTR [rdi+0x18],0x4
  406a64:	jne    406a70 <__ctype_b_loc@plt+0x47a0>
  406a66:	cmp    QWORD PTR [rdi+0x10],rsi
  406a6a:	je     407055 <__ctype_b_loc@plt+0x4d85>
  406a70:	mov    rdi,QWORD PTR [rdi+0x20]
  406a74:	test   rdi,rdi
  406a77:	jne    406a60 <__ctype_b_loc@plt+0x4790>
  406a79:	jmp    4063c3 <__ctype_b_loc@plt+0x40f3>
  406a7e:	add    rbp,0x1
  406a82:	mov    r12,QWORD PTR [rsp+0x8]
  406a87:	vmovapd xmm0,XMMWORD PTR [rsp+0x60]
  406a8d:	nop    DWORD PTR [rax]
  406a90:	movzx  ecx,BYTE PTR [rbp+0x0]
  406a94:	add    rbp,0x1
  406a98:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  406a9d:	jne    406a90 <__ctype_b_loc@plt+0x47c0>
  406a9f:	test   cl,cl
  406aa1:	mov    rbp,QWORD PTR [rsp+0x10]
  406aa6:	jne    406447 <__ctype_b_loc@plt+0x4177>
  406aac:	vmovsd QWORD PTR [r14],xmm0
  406ab1:	mov    DWORD PTR [rbp+0x0],0x3
  406ab8:	mov    r10,r13
  406abb:	mov    r11,r15
  406abe:	mov    eax,DWORD PTR [r14+0x18]
  406ac2:	cmp    eax,0x3
  406ac5:	je     406f50 <__ctype_b_loc@plt+0x4c80>
  406acb:	mov    r15,r11
  406ace:	mov    r13,r10
  406ad1:	cmp    eax,0x4
  406ad4:	jne    406c5e <__ctype_b_loc@plt+0x498e>
  406ada:	mov    QWORD PTR [rsp+0x10],rbp
  406adf:	mov    QWORD PTR [rsp+0x20],r14
  406ae4:	mov    r14,QWORD PTR [r14+0x10]
  406ae8:	add    r14,0x18
  406aec:	lea    rsi,[rsp+0x30]
  406af1:	mov    rdi,r14
  406af4:	call   4020b0 <strtod@plt>
  406af9:	mov    rbp,QWORD PTR [rsp+0x30]
  406afe:	cmp    rbp,r14
  406b01:	je     406c54 <__ctype_b_loc@plt+0x4984>
  406b07:	mov    r12b,BYTE PTR [rbp+0x0]
  406b0b:	mov    eax,r12d
  406b0e:	or     al,0x20
  406b10:	cmp    al,0x78
  406b12:	jne    406b48 <__ctype_b_loc@plt+0x4878>
  406b14:	lea    rsi,[rsp+0x30]
  406b19:	mov    edx,0x10
  406b1e:	mov    rdi,r14
  406b21:	call   402250 <strtoul@plt>
  406b26:	vmovq  xmm0,rax
  406b2b:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x2413d]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  406b33:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x24145]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  406b3b:	vhaddpd xmm0,xmm0,xmm0
  406b3f:	mov    rbp,QWORD PTR [rsp+0x30]
  406b44:	mov    r12b,BYTE PTR [rbp+0x0]
  406b48:	mov    r14,QWORD PTR [rsp+0x20]
  406b4d:	test   r12b,r12b
  406b50:	je     406ea1 <__ctype_b_loc@plt+0x4bd1>
  406b56:	vmovapd XMMWORD PTR [rsp+0x60],xmm0
  406b5c:	call   4022d0 <__ctype_b_loc@plt>
  406b61:	mov    rax,QWORD PTR [rax]
  406b64:	movzx  ecx,r12b
  406b68:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  406b6d:	jne    406f0e <__ctype_b_loc@plt+0x4c3e>
  406b73:	mov    r12,QWORD PTR [rsp+0x8]
  406b78:	jmp    406c59 <__ctype_b_loc@plt+0x4989>
  406b7d:	mov    r15,r10
  406b80:	mov    r8,rsi
  406b83:	mov    r10d,DWORD PTR [r8+0x8]
  406b87:	test   r10d,r10d
  406b8a:	je     406d65 <__ctype_b_loc@plt+0x4a95>
  406b90:	cmp    r11d,0x7
  406b94:	je     406b9c <__ctype_b_loc@plt+0x48cc>
  406b96:	cmp    r11d,0x5
  406b9a:	jne    406ba5 <__ctype_b_loc@plt+0x48d5>
  406b9c:	mov    rsi,QWORD PTR [rcx]
  406b9f:	add    rsi,0x10
  406ba3:	jmp    406bb3 <__ctype_b_loc@plt+0x48e3>
  406ba5:	mov    rdx,QWORD PTR [r14]
  406ba8:	lea    rsi,[rdx+r11*8]
  406bac:	add    rsi,0xe0
  406bb3:	mov    rdi,QWORD PTR [rsi]
  406bb6:	lea    r9,[rip+0x23f5b]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  406bbd:	test   rdi,rdi
  406bc0:	je     406c09 <__ctype_b_loc@plt+0x4939>
  406bc2:	mov    rdx,QWORD PTR [r14]
  406bc5:	mov    rsi,QWORD PTR [rdx+0x198]
  406bcc:	mov    dl,BYTE PTR [rdi+0xb]
  406bcf:	mov    rbx,0xffffffffffffffff
  406bd6:	shlx   rdx,rbx,rdx
  406bdb:	andn   edx,edx,DWORD PTR [rsi+0xc]
  406be1:	movsxd rdx,edx
  406be4:	lea    rbx,[rdx+rdx*4]
  406be8:	shl    rbx,0x3
  406bec:	add    rbx,QWORD PTR [rdi+0x20]
  406bf0:	cmp    DWORD PTR [rbx+0x18],0x4
  406bf4:	jne    406c00 <__ctype_b_loc@plt+0x4930>
  406bf6:	cmp    QWORD PTR [rbx+0x10],rsi
  406bfa:	je     406cf4 <__ctype_b_loc@plt+0x4a24>
  406c00:	mov    rbx,QWORD PTR [rbx+0x20]
  406c04:	test   rbx,rbx
  406c07:	jne    406bf0 <__ctype_b_loc@plt+0x4920>
  406c09:	cmp    r10d,DWORD PTR [r9+0x8]
  406c0d:	jne    406d65 <__ctype_b_loc@plt+0x4a95>
  406c13:	cmp    r10d,0x3
  406c17:	ja     406d59 <__ctype_b_loc@plt+0x4a89>
  406c1d:	mov    edx,r10d
  406c20:	lea    rsi,[rip+0x234f1]        # 42a118 <__ctype_b_loc@plt+0x27e48>
  406c27:	movsxd rdx,DWORD PTR [rsi+rdx*4]
  406c2b:	add    rdx,rsi
  406c2e:	jmp    rdx
  406c30:	mov    edx,DWORD PTR [r8]
  406c33:	cmp    edx,DWORD PTR [r9]
  406c36:	jne    406d65 <__ctype_b_loc@plt+0x4a95>
  406c3c:	jmp    4070a3 <__ctype_b_loc@plt+0x4dd3>
  406c41:	and    cl,0xf8
  406c44:	mov    dl,BYTE PTR [rdi+0x20]
  406c47:	and    dl,0x3
  406c4a:	or     dl,cl
  406c4c:	mov    BYTE PTR [rax+0x9],dl
  406c4f:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  406c54:	mov    r14,QWORD PTR [rsp+0x20]
  406c59:	mov    rbp,QWORD PTR [rsp+0x10]
  406c5e:	lea    rsi,[rip+0x24243]        # 42aea8 <__ctype_b_loc@plt+0x28bd8>
  406c65:	xor    eax,eax
  406c67:	mov    rdi,r12
  406c6a:	call   404080 <__ctype_b_loc@plt+0x1db0>
  406c6f:	mov    r10,r13
  406c72:	mov    r11,r15
  406c75:	vmovsd xmm0,QWORD PTR [r14]
  406c7a:	vsubsd xmm0,xmm0,QWORD PTR [r14+0x20]
  406c80:	vmovsd QWORD PTR [r14],xmm0
  406c85:	mov    DWORD PTR [rbp+0x0],0x3
  406c8c:	shr    ebx,0xe
  406c8f:	lea    r10,[r10+rbx*4]
  406c93:	add    r10,0xfffffffffff80004
  406c9a:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  406c9f:	add    esi,esi
  406ca1:	mov    rdi,r12
  406ca4:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  406ca9:	mov    rsi,QWORD PTR [r12+0x10]
  406cae:	lea    rax,[rsi+0x30]
  406cb2:	mov    QWORD PTR [r12+0x10],rax
  406cb7:	mov    edx,0x1
  406cbc:	mov    rdi,r12
  406cbf:	call   404ff0 <__ctype_b_loc@plt+0x2d20>
  406cc4:	mov    rax,QWORD PTR [r12+0x10]
  406cc9:	mov    rcx,QWORD PTR [r12+0x40]
  406cce:	lea    rdx,[rax-0x10]
  406cd2:	mov    QWORD PTR [r12+0x10],rdx
  406cd7:	mov    rdx,QWORD PTR [rax-0x10]
  406cdb:	mov    QWORD PTR [rcx+r14*1],rdx
  406cdf:	mov    eax,DWORD PTR [rax-0x8]
  406ce2:	mov    DWORD PTR [rcx+r14*1+0x8],eax
  406ce7:	mov    r11,QWORD PTR [r12+0x18]
  406cec:	mov    r10,rbp
  406cef:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  406cf4:	mov    r9,rbx
  406cf7:	cmp    r10d,DWORD PTR [r9+0x8]
  406cfb:	je     406c13 <__ctype_b_loc@plt+0x4943>
  406d01:	jmp    406d65 <__ctype_b_loc@plt+0x4a95>
  406d03:	mov    rbx,QWORD PTR [rbx+0x10]
  406d07:	mov    r12,QWORD PTR [r12+0x10]
  406d0c:	nop    DWORD PTR [rax+0x0]
  406d10:	mov    rdi,r14
  406d13:	call   4020e0 <strlen@plt>
  406d18:	mov    rcx,rax
  406d1b:	cmp    rax,rbx
  406d1e:	je     4071fd <__ctype_b_loc@plt+0x4f2d>
  406d24:	cmp    rcx,r12
  406d27:	je     40720a <__ctype_b_loc@plt+0x4f3a>
  406d2d:	lea    rax,[rcx+0x1]
  406d31:	add    r14,rcx
  406d34:	add    r14,0x1
  406d38:	sub    r12,rax
  406d3b:	add    r15,rcx
  406d3e:	add    r15,0x1
  406d42:	sub    rbx,rax
  406d45:	mov    rdi,r14
  406d48:	mov    rsi,r15
  406d4b:	call   402200 <strcoll@plt>
  406d50:	test   eax,eax
  406d52:	je     406d10 <__ctype_b_loc@plt+0x4a40>
  406d54:	jmp    406488 <__ctype_b_loc@plt+0x41b8>
  406d59:	mov    rdx,QWORD PTR [r8]
  406d5c:	cmp    rdx,QWORD PTR [r9]
  406d5f:	je     4070a3 <__ctype_b_loc@plt+0x4dd3>
  406d65:	cmp    r11d,0x7
  406d69:	je     406d71 <__ctype_b_loc@plt+0x4aa1>
  406d6b:	cmp    r11d,0x5
  406d6f:	jne    406d7a <__ctype_b_loc@plt+0x4aaa>
  406d71:	mov    rsi,QWORD PTR [rcx]
  406d74:	add    rsi,0x10
  406d78:	jmp    406d88 <__ctype_b_loc@plt+0x4ab8>
  406d7a:	mov    rdx,QWORD PTR [r14]
  406d7d:	lea    rsi,[rdx+r11*8]
  406d81:	add    rsi,0xe0
  406d88:	mov    rbx,QWORD PTR [rsi]
  406d8b:	lea    r8,[rip+0x23d86]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  406d92:	test   rbx,rbx
  406d95:	je     406dea <__ctype_b_loc@plt+0x4b1a>
  406d97:	mov    rdx,QWORD PTR [r14]
  406d9a:	mov    rdi,QWORD PTR [rdx+0x190]
  406da1:	mov    dl,BYTE PTR [rbx+0xb]
  406da4:	mov    rsi,0xffffffffffffffff
  406dab:	shlx   rdx,rsi,rdx
  406db0:	andn   edx,edx,DWORD PTR [rdi+0xc]
  406db6:	movsxd rdx,edx
  406db9:	lea    rsi,[rdx+rdx*4]
  406dbd:	shl    rsi,0x3
  406dc1:	add    rsi,QWORD PTR [rbx+0x20]
  406dc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406dcf:	nop
  406dd0:	cmp    DWORD PTR [rsi+0x18],0x4
  406dd4:	jne    406ddc <__ctype_b_loc@plt+0x4b0c>
  406dd6:	cmp    QWORD PTR [rsi+0x10],rdi
  406dda:	je     406de7 <__ctype_b_loc@plt+0x4b17>
  406ddc:	mov    rsi,QWORD PTR [rsi+0x20]
  406de0:	test   rsi,rsi
  406de3:	jne    406dd0 <__ctype_b_loc@plt+0x4b00>
  406de5:	jmp    406dea <__ctype_b_loc@plt+0x4b1a>
  406de7:	mov    r8,rsi
  406dea:	mov    r10d,DWORD PTR [r8+0x8]
  406dee:	test   r10d,r10d
  406df1:	je     406ec7 <__ctype_b_loc@plt+0x4bf7>
  406df7:	cmp    r11d,0x7
  406dfb:	je     406e03 <__ctype_b_loc@plt+0x4b33>
  406dfd:	cmp    r11d,0x5
  406e01:	jne    406e0c <__ctype_b_loc@plt+0x4b3c>
  406e03:	mov    rsi,QWORD PTR [rax]
  406e06:	add    rsi,0x10
  406e0a:	jmp    406e1a <__ctype_b_loc@plt+0x4b4a>
  406e0c:	mov    rdx,QWORD PTR [r14]
  406e0f:	lea    rsi,[rdx+r11*8]
  406e13:	add    rsi,0xe0
  406e1a:	mov    rdi,QWORD PTR [rsi]
  406e1d:	lea    r9,[rip+0x23cf4]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  406e24:	test   rdi,rdi
  406e27:	je     406e75 <__ctype_b_loc@plt+0x4ba5>
  406e29:	mov    rdx,QWORD PTR [r14]
  406e2c:	mov    rsi,QWORD PTR [rdx+0x190]
  406e33:	mov    dl,BYTE PTR [rdi+0xb]
  406e36:	mov    rbx,0xffffffffffffffff
  406e3d:	shlx   rdx,rbx,rdx
  406e42:	andn   edx,edx,DWORD PTR [rsi+0xc]
  406e48:	movsxd rdx,edx
  406e4b:	lea    rbx,[rdx+rdx*4]
  406e4f:	shl    rbx,0x3
  406e53:	add    rbx,QWORD PTR [rdi+0x20]
  406e57:	nop    WORD PTR [rax+rax*1+0x0]
  406e60:	cmp    DWORD PTR [rbx+0x18],0x4
  406e64:	jne    406e6c <__ctype_b_loc@plt+0x4b9c>
  406e66:	cmp    QWORD PTR [rbx+0x10],rsi
  406e6a:	je     406eb0 <__ctype_b_loc@plt+0x4be0>
  406e6c:	mov    rbx,QWORD PTR [rbx+0x20]
  406e70:	test   rbx,rbx
  406e73:	jne    406e60 <__ctype_b_loc@plt+0x4b90>
  406e75:	cmp    r10d,DWORD PTR [r9+0x8]
  406e79:	jne    406ec7 <__ctype_b_loc@plt+0x4bf7>
  406e7b:	cmp    r10d,0x3
  406e7f:	ja     406ebb <__ctype_b_loc@plt+0x4beb>
  406e81:	mov    edx,r10d
  406e84:	lea    rsi,[rip+0x2329d]        # 42a128 <__ctype_b_loc@plt+0x27e58>
  406e8b:	movsxd rdx,DWORD PTR [rsi+rdx*4]
  406e8f:	add    rdx,rsi
  406e92:	jmp    rdx
  406e94:	mov    edx,DWORD PTR [r8]
  406e97:	cmp    edx,DWORD PTR [r9]
  406e9a:	jne    406ec7 <__ctype_b_loc@plt+0x4bf7>
  406e9c:	jmp    407121 <__ctype_b_loc@plt+0x4e51>
  406ea1:	mov    r12,QWORD PTR [rsp+0x8]
  406ea6:	mov    rbp,QWORD PTR [rsp+0x10]
  406eab:	jmp    406f3c <__ctype_b_loc@plt+0x4c6c>
  406eb0:	mov    r9,rbx
  406eb3:	cmp    r10d,DWORD PTR [r9+0x8]
  406eb7:	je     406e7b <__ctype_b_loc@plt+0x4bab>
  406eb9:	jmp    406ec7 <__ctype_b_loc@plt+0x4bf7>
  406ebb:	mov    rdx,QWORD PTR [r8]
  406ebe:	cmp    rdx,QWORD PTR [r9]
  406ec1:	je     407121 <__ctype_b_loc@plt+0x4e51>
  406ec7:	lea    rax,[rip+0x29a12]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  406ece:	mov    rdx,QWORD PTR [rax+r11*8]
  406ed2:	lea    rsi,[rip+0x24066]        # 42af3f <__ctype_b_loc@plt+0x28c6f>
  406ed9:	xor    ebx,ebx
  406edb:	xor    eax,eax
  406edd:	mov    rdi,r12
  406ee0:	call   404080 <__ctype_b_loc@plt+0x1db0>
  406ee5:	mov    r10,r15
  406ee8:	movzx  eax,bl
  406eeb:	cmp    ebp,eax
  406eed:	jne    406f00 <__ctype_b_loc@plt+0x4c30>
  406eef:	mov    eax,DWORD PTR [r10]
  406ef2:	shr    eax,0xe
  406ef5:	lea    r10,[r10+rax*4]
  406ef9:	add    r10,0xfffffffffff80004
  406f00:	mov    r11,QWORD PTR [r12+0x18]
  406f05:	add    r10,0x4
  406f09:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  406f0e:	add    rbp,0x1
  406f12:	mov    r12,QWORD PTR [rsp+0x8]
  406f17:	vmovapd xmm0,XMMWORD PTR [rsp+0x60]
  406f1d:	nop    DWORD PTR [rax]
  406f20:	movzx  ecx,BYTE PTR [rbp+0x0]
  406f24:	add    rbp,0x1
  406f28:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  406f2d:	jne    406f20 <__ctype_b_loc@plt+0x4c50>
  406f2f:	test   cl,cl
  406f31:	mov    rbp,QWORD PTR [rsp+0x10]
  406f36:	jne    406c5e <__ctype_b_loc@plt+0x498e>
  406f3c:	vmovsd QWORD PTR [r14+0x10],xmm0
  406f42:	mov    DWORD PTR [r14+0x18],0x3
  406f4a:	mov    r10,r13
  406f4d:	mov    r11,r15
  406f50:	mov    eax,DWORD PTR [r14+0x28]
  406f54:	cmp    eax,0x3
  406f57:	je     406c75 <__ctype_b_loc@plt+0x49a5>
  406f5d:	mov    QWORD PTR [rsp+0x10],rbp
  406f62:	cmp    eax,0x4
  406f65:	jne    4075e5 <__ctype_b_loc@plt+0x5315>
  406f6b:	mov    QWORD PTR [rsp+0x40],r11
  406f70:	mov    r13,r10
  406f73:	mov    r15,r14
  406f76:	mov    r14,QWORD PTR [r14+0x20]
  406f7a:	add    r14,0x18
  406f7e:	lea    rsi,[rsp+0x30]
  406f83:	mov    rdi,r14
  406f86:	call   4020b0 <strtod@plt>
  406f8b:	mov    rbp,QWORD PTR [rsp+0x30]
  406f90:	cmp    rbp,r14
  406f93:	je     4075e0 <__ctype_b_loc@plt+0x5310>
  406f99:	mov    r12b,BYTE PTR [rbp+0x0]
  406f9d:	mov    eax,r12d
  406fa0:	or     al,0x20
  406fa2:	cmp    al,0x78
  406fa4:	jne    406fda <__ctype_b_loc@plt+0x4d0a>
  406fa6:	lea    rsi,[rsp+0x30]
  406fab:	mov    edx,0x10
  406fb0:	mov    rdi,r14
  406fb3:	call   402250 <strtoul@plt>
  406fb8:	vmovq  xmm0,rax
  406fbd:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x23cab]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  406fc5:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x23cb3]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  406fcd:	vhaddpd xmm0,xmm0,xmm0
  406fd1:	mov    rbp,QWORD PTR [rsp+0x30]
  406fd6:	mov    r12b,BYTE PTR [rbp+0x0]
  406fda:	mov    r10,r13
  406fdd:	mov    r11,QWORD PTR [rsp+0x40]
  406fe2:	mov    r14,r15
  406fe5:	test   r12b,r12b
  406fe8:	je     407038 <__ctype_b_loc@plt+0x4d68>
  406fea:	vmovapd XMMWORD PTR [rsp+0x60],xmm0
  406ff0:	call   4022d0 <__ctype_b_loc@plt>
  406ff5:	mov    rax,QWORD PTR [rax]
  406ff8:	movzx  ecx,r12b
  406ffc:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  407001:	je     4075e0 <__ctype_b_loc@plt+0x5310>
  407007:	add    rbp,0x1
  40700b:	mov    r12,QWORD PTR [rsp+0x8]
  407010:	mov    r10,r13
  407013:	mov    r11,QWORD PTR [rsp+0x40]
  407018:	vmovapd xmm0,XMMWORD PTR [rsp+0x60]
  40701e:	xchg   ax,ax
  407020:	movzx  ecx,BYTE PTR [rbp+0x0]
  407024:	add    rbp,0x1
  407028:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40702d:	jne    407020 <__ctype_b_loc@plt+0x4d50>
  40702f:	test   cl,cl
  407031:	je     40703d <__ctype_b_loc@plt+0x4d6d>
  407033:	jmp    4075e5 <__ctype_b_loc@plt+0x5315>
  407038:	mov    r12,QWORD PTR [rsp+0x8]
  40703d:	vmovsd QWORD PTR [r14+0x20],xmm0
  407043:	mov    DWORD PTR [r14+0x28],0x3
  40704b:	mov    rbp,QWORD PTR [rsp+0x10]
  407050:	jmp    406c75 <__ctype_b_loc@plt+0x49a5>
  407055:	mov    rdx,rdi
  407058:	cmp    DWORD PTR [rdx+0x8],0x0
  40705c:	jne    4063cd <__ctype_b_loc@plt+0x40fd>
  407062:	lea    rax,[rip+0x29877]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  407069:	mov    rcx,QWORD PTR [rax+rcx*8]
  40706d:	lea    rsi,[rip+0x23dc4]        # 42ae38 <__ctype_b_loc@plt+0x28b68>
  407074:	lea    rdx,[rip+0x23dfa]        # 42ae75 <__ctype_b_loc@plt+0x28ba5>
  40707b:	xor    eax,eax
  40707d:	mov    rdi,r12
  407080:	mov    rbx,r10
  407083:	call   404080 <__ctype_b_loc@plt+0x1db0>
  407088:	jmp    4050a0 <__ctype_b_loc@plt+0x2dd0>
  40708d:	vmovsd xmm0,QWORD PTR [r8]
  407092:	vucomisd xmm0,QWORD PTR [r9]
  407097:	jne    406d65 <__ctype_b_loc@plt+0x4a95>
  40709d:	jp     406d65 <__ctype_b_loc@plt+0x4a95>
  4070a3:	mov    rdx,QWORD PTR [r12+0x10]
  4070a8:	mov    rbx,rdx
  4070ab:	sub    rbx,QWORD PTR [r12+0x40]
  4070b0:	mov    rsi,QWORD PTR [r8]
  4070b3:	mov    QWORD PTR [rdx],rsi
  4070b6:	mov    esi,DWORD PTR [r8+0x8]
  4070ba:	mov    DWORD PTR [rdx+0x8],esi
  4070bd:	mov    rdx,QWORD PTR [r12+0x10]
  4070c2:	mov    rsi,QWORD PTR [rax]
  4070c5:	mov    QWORD PTR [rdx+0x10],rsi
  4070c9:	mov    eax,DWORD PTR [rax+0x8]
  4070cc:	mov    DWORD PTR [rdx+0x18],eax
  4070cf:	mov    rax,QWORD PTR [r12+0x10]
  4070d4:	mov    rdx,QWORD PTR [rcx]
  4070d7:	mov    QWORD PTR [rax+0x20],rdx
  4070db:	mov    ecx,DWORD PTR [rcx+0x8]
  4070de:	mov    DWORD PTR [rax+0x28],ecx
  4070e1:	mov    rax,QWORD PTR [r12+0x38]
  4070e6:	sub    rax,QWORD PTR [r12+0x10]
  4070eb:	cmp    rax,0x30
  4070ef:	jg     407193 <__ctype_b_loc@plt+0x4ec3>
  4070f5:	mov    esi,DWORD PTR [r12+0x58]
  4070fa:	cmp    esi,0x3
  4070fd:	jge    407189 <__ctype_b_loc@plt+0x4eb9>
  407103:	add    esi,0x3
  407106:	jmp    40718b <__ctype_b_loc@plt+0x4ebb>
  40710b:	vmovsd xmm0,QWORD PTR [r8]
  407110:	vucomisd xmm0,QWORD PTR [r9]
  407115:	jne    406ec7 <__ctype_b_loc@plt+0x4bf7>
  40711b:	jp     406ec7 <__ctype_b_loc@plt+0x4bf7>
  407121:	mov    rdx,QWORD PTR [r12+0x10]
  407126:	mov    rbx,rdx
  407129:	sub    rbx,QWORD PTR [r12+0x40]
  40712e:	mov    rsi,QWORD PTR [r8]
  407131:	mov    QWORD PTR [rdx],rsi
  407134:	mov    esi,DWORD PTR [r8+0x8]
  407138:	mov    DWORD PTR [rdx+0x8],esi
  40713b:	mov    rdx,QWORD PTR [r12+0x10]
  407140:	mov    rsi,QWORD PTR [rcx]
  407143:	mov    QWORD PTR [rdx+0x10],rsi
  407147:	mov    ecx,DWORD PTR [rcx+0x8]
  40714a:	mov    DWORD PTR [rdx+0x18],ecx
  40714d:	mov    rcx,QWORD PTR [r12+0x10]
  407152:	mov    rdx,QWORD PTR [rax]
  407155:	mov    QWORD PTR [rcx+0x20],rdx
  407159:	mov    eax,DWORD PTR [rax+0x8]
  40715c:	mov    DWORD PTR [rcx+0x28],eax
  40715f:	mov    rax,QWORD PTR [r12+0x38]
  407164:	sub    rax,QWORD PTR [r12+0x10]
  407169:	cmp    rax,0x30
  40716d:	jg     40721e <__ctype_b_loc@plt+0x4f4e>
  407173:	mov    esi,DWORD PTR [r12+0x58]
  407178:	cmp    esi,0x3
  40717b:	jge    407214 <__ctype_b_loc@plt+0x4f44>
  407181:	add    esi,0x3
  407184:	jmp    407216 <__ctype_b_loc@plt+0x4f46>
  407189:	add    esi,esi
  40718b:	mov    rdi,r12
  40718e:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  407193:	mov    rsi,QWORD PTR [r12+0x10]
  407198:	lea    rax,[rsi+0x30]
  40719c:	mov    QWORD PTR [r12+0x10],rax
  4071a1:	mov    edx,0x1
  4071a6:	mov    rdi,r12
  4071a9:	call   404ff0 <__ctype_b_loc@plt+0x2d20>
  4071ae:	mov    rax,QWORD PTR [r12+0x10]
  4071b3:	mov    rcx,QWORD PTR [r12+0x40]
  4071b8:	lea    rdx,[rax-0x10]
  4071bc:	mov    QWORD PTR [r12+0x10],rdx
  4071c1:	mov    rdx,QWORD PTR [rax-0x10]
  4071c5:	mov    QWORD PTR [rcx+rbx*1],rdx
  4071c9:	mov    eax,DWORD PTR [rax-0x8]
  4071cc:	mov    DWORD PTR [rcx+rbx*1+0x8],eax
  4071d0:	mov    rax,QWORD PTR [r12+0x10]
  4071d5:	mov    ecx,DWORD PTR [rax+0x8]
  4071d8:	test   ecx,ecx
  4071da:	je     4071ef <__ctype_b_loc@plt+0x4f1f>
  4071dc:	cmp    ecx,0x1
  4071df:	mov    r10,r15
  4071e2:	jne    4071f6 <__ctype_b_loc@plt+0x4f26>
  4071e4:	cmp    DWORD PTR [rax],0x0
  4071e7:	setne  bl
  4071ea:	jmp    406ee8 <__ctype_b_loc@plt+0x4c18>
  4071ef:	xor    ebx,ebx
  4071f1:	jmp    406ee5 <__ctype_b_loc@plt+0x4c15>
  4071f6:	mov    bl,0x1
  4071f8:	jmp    406ee8 <__ctype_b_loc@plt+0x4c18>
  4071fd:	xor    eax,eax
  4071ff:	cmp    rcx,r12
  407202:	setne  al
  407205:	jmp    406488 <__ctype_b_loc@plt+0x41b8>
  40720a:	mov    eax,0xffffffff
  40720f:	jmp    406488 <__ctype_b_loc@plt+0x41b8>
  407214:	add    esi,esi
  407216:	mov    rdi,r12
  407219:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  40721e:	mov    rsi,QWORD PTR [r12+0x10]
  407223:	lea    rax,[rsi+0x30]
  407227:	mov    QWORD PTR [r12+0x10],rax
  40722c:	mov    edx,0x1
  407231:	mov    rdi,r12
  407234:	call   404ff0 <__ctype_b_loc@plt+0x2d20>
  407239:	mov    rax,QWORD PTR [r12+0x10]
  40723e:	mov    rcx,QWORD PTR [r12+0x40]
  407243:	lea    rdx,[rax-0x10]
  407247:	mov    QWORD PTR [r12+0x10],rdx
  40724c:	mov    rdx,QWORD PTR [rax-0x10]
  407250:	mov    QWORD PTR [rcx+rbx*1],rdx
  407254:	mov    eax,DWORD PTR [rax-0x8]
  407257:	mov    DWORD PTR [rcx+rbx*1+0x8],eax
  40725b:	mov    rcx,QWORD PTR [r12+0x10]
  407260:	mov    eax,DWORD PTR [rcx+0x8]
  407263:	test   eax,eax
  407265:	je     407279 <__ctype_b_loc@plt+0x4fa9>
  407267:	cmp    eax,0x1
  40726a:	mov    r10,r15
  40726d:	jne    40727e <__ctype_b_loc@plt+0x4fae>
  40726f:	xor    eax,eax
  407271:	cmp    DWORD PTR [rcx],0x0
  407274:	setne  al
  407277:	jmp    407283 <__ctype_b_loc@plt+0x4fb3>
  407279:	mov    r10,r15
  40727c:	jmp    407283 <__ctype_b_loc@plt+0x4fb3>
  40727e:	mov    eax,0x1
  407283:	test   eax,eax
  407285:	sete   bl
  407288:	jmp    406ee8 <__ctype_b_loc@plt+0x4c18>
  40728d:	or     r11b,0x10
  407291:	mov    BYTE PTR [rsi+0xa],r11b
  407295:	xor    esi,esi
  407297:	mov    r10,r15
  40729a:	jmp    4072a6 <__ctype_b_loc@plt+0x4fd6>
  40729c:	or     r11b,0x10
  4072a0:	mov    BYTE PTR [r9+0xa],r11b
  4072a4:	xor    esi,esi
  4072a6:	movzx  eax,sil
  4072aa:	cmp    ebp,eax
  4072ac:	jne    406f00 <__ctype_b_loc@plt+0x4c30>
  4072b2:	jmp    406eef <__ctype_b_loc@plt+0x4c1f>
  4072b7:	mov    rsi,QWORD PTR [rdx]
  4072ba:	cmp    rsi,QWORD PTR [rbx]
  4072bd:	jne    407295 <__ctype_b_loc@plt+0x4fc5>
  4072bf:	jmp    4072cd <__ctype_b_loc@plt+0x4ffd>
  4072c1:	vmovsd xmm0,QWORD PTR [rdx]
  4072c5:	vucomisd xmm0,QWORD PTR [rbx]
  4072c9:	jne    407295 <__ctype_b_loc@plt+0x4fc5>
  4072cb:	jp     407295 <__ctype_b_loc@plt+0x4fc5>
  4072cd:	mov    rsi,QWORD PTR [r12+0x10]
  4072d2:	mov    rbx,rsi
  4072d5:	sub    rbx,QWORD PTR [r12+0x40]
  4072da:	mov    rdi,QWORD PTR [rdx]
  4072dd:	mov    QWORD PTR [rsi],rdi
  4072e0:	mov    edx,DWORD PTR [rdx+0x8]
  4072e3:	mov    DWORD PTR [rsi+0x8],edx
  4072e6:	mov    rdx,QWORD PTR [r12+0x10]
  4072eb:	mov    rsi,QWORD PTR [rax]
  4072ee:	mov    QWORD PTR [rdx+0x10],rsi
  4072f2:	mov    eax,DWORD PTR [rax+0x8]
  4072f5:	mov    DWORD PTR [rdx+0x18],eax
  4072f8:	mov    rax,QWORD PTR [r12+0x10]
  4072fd:	mov    rdx,QWORD PTR [rcx]
  407300:	mov    QWORD PTR [rax+0x20],rdx
  407304:	mov    ecx,DWORD PTR [rcx+0x8]
  407307:	mov    DWORD PTR [rax+0x28],ecx
  40730a:	mov    rax,QWORD PTR [r12+0x38]
  40730f:	sub    rax,QWORD PTR [r12+0x10]
  407314:	cmp    rax,0x30
  407318:	jg     407333 <__ctype_b_loc@plt+0x5063>
  40731a:	mov    esi,DWORD PTR [r12+0x58]
  40731f:	cmp    esi,0x3
  407322:	jge    407329 <__ctype_b_loc@plt+0x5059>
  407324:	add    esi,0x3
  407327:	jmp    40732b <__ctype_b_loc@plt+0x505b>
  407329:	add    esi,esi
  40732b:	mov    rdi,r12
  40732e:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  407333:	mov    rsi,QWORD PTR [r12+0x10]
  407338:	lea    rax,[rsi+0x30]
  40733c:	mov    QWORD PTR [r12+0x10],rax
  407341:	mov    edx,0x1
  407346:	mov    rdi,r12
  407349:	call   404ff0 <__ctype_b_loc@plt+0x2d20>
  40734e:	mov    rax,QWORD PTR [r12+0x10]
  407353:	mov    rcx,QWORD PTR [r12+0x40]
  407358:	lea    rdx,[rax-0x10]
  40735c:	mov    QWORD PTR [r12+0x10],rdx
  407361:	mov    rdx,QWORD PTR [rax-0x10]
  407365:	mov    QWORD PTR [rcx+rbx*1],rdx
  407369:	mov    eax,DWORD PTR [rax-0x8]
  40736c:	mov    DWORD PTR [rcx+rbx*1+0x8],eax
  407370:	mov    rax,QWORD PTR [r12+0x10]
  407375:	mov    ecx,DWORD PTR [rax+0x8]
  407378:	test   ecx,ecx
  40737a:	je     407295 <__ctype_b_loc@plt+0x4fc5>
  407380:	cmp    ecx,0x1
  407383:	mov    r10,r15
  407386:	jne    407394 <__ctype_b_loc@plt+0x50c4>
  407388:	cmp    DWORD PTR [rax],0x0
  40738b:	setne  sil
  40738f:	jmp    4072a6 <__ctype_b_loc@plt+0x4fd6>
  407394:	mov    sil,0x1
  407397:	jmp    4072a6 <__ctype_b_loc@plt+0x4fd6>
  40739c:	nop    DWORD PTR [rax+0x0]
  4073a0:	shr    ebx,0x17
  4073a3:	je     4073b7 <__ctype_b_loc@plt+0x50e7>
  4073a5:	mov    eax,ebx
  4073a7:	shl    rax,0x4
  4073ab:	add    rax,r14
  4073ae:	add    rax,0xfffffffffffffff0
  4073b2:	mov    QWORD PTR [r12+0x10],rax
  4073b7:	mov    rax,QWORD PTR [rsp+0x78]
  4073bc:	cmp    QWORD PTR [rax],0x0
  4073c0:	je     4073cd <__ctype_b_loc@plt+0x50fd>
  4073c2:	mov    rdi,r12
  4073c5:	mov    rsi,r11
  4073c8:	call   403e60 <__ctype_b_loc@plt+0x1b90>
  4073cd:	mov    rdx,QWORD PTR [r12+0x28]
  4073d2:	lea    rax,[rdx-0x28]
  4073d6:	mov    QWORD PTR [r12+0x28],rax
  4073db:	mov    rsi,QWORD PTR [rdx-0x28]
  4073df:	mov    rcx,QWORD PTR [rdx+0x8]
  4073e3:	mov    eax,DWORD PTR [rdx+0x20]
  4073e6:	mov    QWORD PTR [r12+0x18],rsi
  4073eb:	mov    rdx,QWORD PTR [rdx-0x10]
  4073ef:	mov    QWORD PTR [r12+0x30],rdx
  4073f4:	test   eax,eax
  4073f6:	je     407460 <__ctype_b_loc@plt+0x5190>
  4073f8:	lea    edx,[rax+0x1]
  4073fb:	mov    esi,eax
  4073fd:	nop    DWORD PTR [rax]
  407400:	cmp    r14,QWORD PTR [r12+0x10]
  407405:	jae    407430 <__ctype_b_loc@plt+0x5160>
  407407:	mov    rdi,QWORD PTR [r14]
  40740a:	mov    QWORD PTR [rcx],rdi
  40740d:	mov    edi,DWORD PTR [r14+0x8]
  407411:	mov    DWORD PTR [rcx+0x8],edi
  407414:	lea    rcx,[rcx+0x10]
  407418:	add    r14,0x10
  40741c:	add    edx,0xffffffff
  40741f:	add    esi,0xffffffff
  407422:	jne    407400 <__ctype_b_loc@plt+0x5130>
  407424:	jmp    407460 <__ctype_b_loc@plt+0x5190>
  407426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407430:	test   esi,esi
  407432:	jle    407460 <__ctype_b_loc@plt+0x5190>
  407434:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40743e:	xchg   ax,ax
  407440:	mov    DWORD PTR [rcx+0x8],0x0
  407447:	add    rcx,0x10
  40744b:	add    edx,0xffffffff
  40744e:	cmp    edx,0x1
  407451:	jg     407440 <__ctype_b_loc@plt+0x5170>
  407453:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40745d:	nop    DWORD PTR [rax]
  407460:	mov    QWORD PTR [r12+0x10],rcx
  407465:	add    DWORD PTR [rsp+0x5c],0xffffffff
  40746a:	je     40754e <__ctype_b_loc@plt+0x527e>
  407470:	cmp    eax,0xffffffff
  407473:	jne    405080 <__ctype_b_loc@plt+0x2db0>
  407479:	mov    r10,QWORD PTR [r12+0x30]
  40747e:	mov    r11,QWORD PTR [r12+0x18]
  407483:	mov    rax,QWORD PTR [r12+0x28]
  407488:	mov    rax,QWORD PTR [rax+0x8]
  40748c:	mov    rax,QWORD PTR [rax]
  40748f:	mov    QWORD PTR [rsp+0x50],rax
  407494:	mov    rax,QWORD PTR [rax+0x20]
  407498:	mov    rax,QWORD PTR [rax+0x10]
  40749c:	mov    QWORD PTR [rsp+0x18],rax
  4074a1:	jmp    4050e0 <__ctype_b_loc@plt+0x2e10>
  4074a6:	test   eax,eax
  4074a8:	jne    40754e <__ctype_b_loc@plt+0x527e>
  4074ae:	add    DWORD PTR [rsp+0x5c],0x1
  4074b3:	jmp    407479 <__ctype_b_loc@plt+0x51a9>
  4074b5:	test   eax,eax
  4074b7:	jne    40754e <__ctype_b_loc@plt+0x527e>
  4074bd:	mov    r14,QWORD PTR [r12+0x28]
  4074c2:	mov    rbp,QWORD PTR [r14-0x20]
  4074c6:	mov    rbx,QWORD PTR [r14+0x8]
  4074ca:	cmp    QWORD PTR [r12+0x98],0x0
  4074d3:	mov    rax,rbp
  4074d6:	je     4074e8 <__ctype_b_loc@plt+0x5218>
  4074d8:	mov    rsi,QWORD PTR [r14-0x28]
  4074dc:	mov    rdi,r12
  4074df:	call   403e60 <__ctype_b_loc@plt+0x1b90>
  4074e4:	mov    rax,QWORD PTR [r14-0x20]
  4074e8:	mov    rcx,QWORD PTR [r14]
  4074eb:	sub    rcx,rbx
  4074ee:	add    rcx,rax
  4074f1:	mov    QWORD PTR [r14-0x28],rcx
  4074f5:	mov    QWORD PTR [r12+0x18],rcx
  4074fa:	cmp    rbx,QWORD PTR [r12+0x10]
  4074ff:	jae    40752c <__ctype_b_loc@plt+0x525c>
  407501:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40750b:	nop    DWORD PTR [rax+rax*1+0x0]
  407510:	mov    rax,QWORD PTR [rbx]
  407513:	mov    QWORD PTR [rbp+0x0],rax
  407517:	mov    eax,DWORD PTR [rbx+0x8]
  40751a:	mov    DWORD PTR [rbp+0x8],eax
  40751d:	add    rbp,0x10
  407521:	add    rbx,0x10
  407525:	cmp    rbx,QWORD PTR [r12+0x10]
  40752a:	jb     407510 <__ctype_b_loc@plt+0x5240>
  40752c:	mov    QWORD PTR [r12+0x10],rbp
  407531:	mov    QWORD PTR [r14-0x18],rbp
  407535:	mov    rax,QWORD PTR [r12+0x30]
  40753a:	mov    QWORD PTR [r14-0x10],rax
  40753e:	add    DWORD PTR [r14-0x4],0x1
  407543:	add    QWORD PTR [r12+0x28],0xffffffffffffffd8
  407549:	jmp    407479 <__ctype_b_loc@plt+0x51a9>
  40754e:	add    WORD PTR [r12+0x60],0xffff
  407555:	mov    rax,QWORD PTR [r12+0x20]
  40755a:	mov    rcx,QWORD PTR [rax+0x78]
  40755e:	cmp    rcx,QWORD PTR [rax+0x70]
  407562:	jae    407576 <__ctype_b_loc@plt+0x52a6>
  407564:	add    rsp,0x88
  40756b:	pop    rbx
  40756c:	pop    r12
  40756e:	pop    r13
  407570:	pop    r14
  407572:	pop    r15
  407574:	pop    rbp
  407575:	ret    
  407576:	mov    rdi,r12
  407579:	add    rsp,0x88
  407580:	pop    rbx
  407581:	pop    r12
  407583:	pop    r13
  407585:	pop    r14
  407587:	pop    r15
  407589:	pop    rbp
  40758a:	jmp    408070 <__ctype_b_loc@plt+0x5da0>
  40758f:	mov    rax,QWORD PTR [rsp+0x8]
  407594:	mov    rdi,QWORD PTR [rax+0xa8]
  40759b:	test   rdi,rdi
  40759e:	jne    407603 <__ctype_b_loc@plt+0x5333>
  4075a0:	mov    rax,QWORD PTR [rsp+0x8]
  4075a5:	mov    BYTE PTR [rax+0xa],0x4
  4075a9:	mov    rax,QWORD PTR [rax+0x20]
  4075ad:	cmp    QWORD PTR [rax+0x98],0x0
  4075b5:	je     4075d6 <__ctype_b_loc@plt+0x5306>
  4075b7:	mov    esi,0x4
  4075bc:	mov    rbx,QWORD PTR [rsp+0x8]
  4075c1:	mov    rdi,rbx
  4075c4:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  4075c9:	mov    rax,QWORD PTR [rbx+0x20]
  4075cd:	mov    rdi,rbx
  4075d0:	call   QWORD PTR [rax+0x98]
  4075d6:	mov    edi,0x1
  4075db:	call   402280 <exit@plt>
  4075e0:	mov    r12,QWORD PTR [rsp+0x8]
  4075e5:	lea    rsi,[rip+0x238d9]        # 42aec5 <__ctype_b_loc@plt+0x28bf5>
  4075ec:	xor    eax,eax
  4075ee:	mov    rdi,r12
  4075f1:	call   404080 <__ctype_b_loc@plt+0x1db0>
  4075f6:	mov    rdi,QWORD PTR [r12+0xa8]
  4075fe:	test   rdi,rdi
  407601:	je     4075a0 <__ctype_b_loc@plt+0x52d0>
  407603:	mov    DWORD PTR [rdi+0xd0],0x4
  40760d:	add    rdi,0x8
  407611:	mov    esi,0x1
  407616:	call   402230 <longjmp@plt>
  40761b:	mov    rdi,QWORD PTR [r12+0xa8]
  407623:	test   rdi,rdi
  407626:	jne    407758 <__ctype_b_loc@plt+0x5488>
  40762c:	mov    rax,QWORD PTR [rsp+0x8]
  407631:	mov    BYTE PTR [rax+0xa],0x5
  407635:	mov    rax,QWORD PTR [rax+0x20]
  407639:	cmp    QWORD PTR [rax+0x98],0x0
  407641:	je     4075d6 <__ctype_b_loc@plt+0x5306>
  407643:	mov    rbp,QWORD PTR [rsp+0x8]
  407648:	lea    r14,[rbp+0xa8]
  40764f:	mov    rax,QWORD PTR [rbp+0x50]
  407653:	mov    QWORD PTR [rbp+0x28],rax
  407657:	mov    rsi,QWORD PTR [rax]
  40765a:	mov    QWORD PTR [rbp+0x18],rsi
  40765e:	mov    rdi,rbp
  407661:	call   403e60 <__ctype_b_loc@plt+0x1b90>
  407666:	mov    rbx,QWORD PTR [rbp+0x18]
  40766a:	lea    rsi,[rip+0x23730]        # 42ada1 <__ctype_b_loc@plt+0x28ad1>
  407671:	mov    edx,0x17
  407676:	mov    rdi,rbp
  407679:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40767e:	mov    QWORD PTR [rbx],rax
  407681:	mov    DWORD PTR [rbx+0x8],0x4
  407688:	add    rbx,0x10
  40768c:	mov    QWORD PTR [rbp+0x10],rbx
  407690:	movzx  eax,WORD PTR [rbp+0x62]
  407694:	mov    WORD PTR [rbp+0x60],ax
  407698:	mov    BYTE PTR [rbp+0x65],0x1
  40769c:	movsxd rax,DWORD PTR [rbp+0x5c]
  4076a0:	cmp    rax,0x4e21
  4076a6:	jl     407741 <__ctype_b_loc@plt+0x5471>
  4076ac:	mov    rdx,QWORD PTR [rsp+0x8]
  4076b1:	mov    rcx,QWORD PTR [rdx+0x28]
  4076b5:	mov    rbx,QWORD PTR [rdx+0x50]
  4076b9:	sub    rcx,rbx
  4076bc:	shr    rcx,0x3
  4076c0:	imul   ecx,ecx,0xcccccccd
  4076c6:	cmp    ecx,0x4e1e
  4076cc:	jg     407741 <__ctype_b_loc@plt+0x5471>
  4076ce:	shl    rax,0x3
  4076d2:	lea    r15,[rax+rax*4]
  4076d6:	mov    rax,QWORD PTR [rsp+0x8]
  4076db:	mov    r12,QWORD PTR [rax+0x20]
  4076df:	mov    rdi,QWORD PTR [r12+0x18]
  4076e4:	mov    ecx,0xc3500
  4076e9:	mov    rsi,rbx
  4076ec:	mov    rdx,r15
  4076ef:	call   QWORD PTR [r12+0x10]
  4076f4:	mov    rbp,rax
  4076f7:	test   rax,rax
  4076fa:	jne    40770b <__ctype_b_loc@plt+0x543b>
  4076fc:	mov    esi,0x4
  407701:	mov    rdi,QWORD PTR [rsp+0x8]
  407706:	call   403c80 <__ctype_b_loc@plt+0x19b0>
  40770b:	mov    eax,0xc3500
  407710:	sub    rax,r15
  407713:	add    QWORD PTR [r12+0x78],rax
  407718:	mov    rcx,QWORD PTR [rsp+0x8]
  40771d:	mov    QWORD PTR [rcx+0x50],rbp
  407721:	mov    DWORD PTR [rcx+0x5c],0x4e20
  407728:	mov    rax,QWORD PTR [rcx+0x28]
  40772c:	sub    rax,rbx
  40772f:	add    rax,rbp
  407732:	mov    QWORD PTR [rcx+0x28],rax
  407736:	add    rbp,0xc34d8
  40773d:	mov    QWORD PTR [rcx+0x48],rbp
  407741:	vxorpd xmm0,xmm0,xmm0
  407745:	vmovupd XMMWORD PTR [r14],xmm0
  40774a:	mov    rdi,QWORD PTR [rsp+0x8]
  40774f:	mov    rax,QWORD PTR [rdi+0x20]
  407753:	jmp    4075d0 <__ctype_b_loc@plt+0x5300>
  407758:	mov    DWORD PTR [rdi+0xd0],0x5
  407762:	jmp    40760d <__ctype_b_loc@plt+0x533d>
  407767:	nop    WORD PTR [rax+rax*1+0x0]
  407770:	push   rbp
  407771:	push   r15
  407773:	push   r14
  407775:	push   r13
  407777:	push   r12
  407779:	push   rbx
  40777a:	sub    rsp,0x38
  40777e:	mov    r13d,edx
  407781:	mov    rbp,rsi
  407784:	mov    r12,rdi
  407787:	movsxd rax,DWORD PTR [rsi+0x8]
  40778b:	cmp    rax,0x5
  40778f:	je     4077a5 <__ctype_b_loc@plt+0x54d5>
  407791:	cmp    eax,0x7
  407794:	je     4077a5 <__ctype_b_loc@plt+0x54d5>
  407796:	cmp    eax,0x6
  407799:	jne    4077af <__ctype_b_loc@plt+0x54df>
  40779b:	lea    r9,[r12+0x40]
  4077a0:	jmp    4078c4 <__ctype_b_loc@plt+0x55f4>
  4077a5:	mov    rcx,QWORD PTR [rbp+0x0]
  4077a9:	add    rcx,0x10
  4077ad:	jmp    4077bf <__ctype_b_loc@plt+0x54ef>
  4077af:	mov    rcx,QWORD PTR [r12+0x20]
  4077b4:	lea    rcx,[rcx+rax*8]
  4077b8:	add    rcx,0xe0
  4077bf:	mov    rsi,QWORD PTR [rcx]
  4077c2:	lea    r14,[rip+0x2334f]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4077c9:	test   rsi,rsi
  4077cc:	je     40781a <__ctype_b_loc@plt+0x554a>
  4077ce:	mov    rcx,QWORD PTR [r12+0x20]
  4077d3:	mov    rcx,QWORD PTR [rcx+0x1a8]
  4077da:	mov    dl,BYTE PTR [rsi+0xb]
  4077dd:	mov    rdi,0xffffffffffffffff
  4077e4:	shlx   rdx,rdi,rdx
  4077e9:	andn   edx,edx,DWORD PTR [rcx+0xc]
  4077ef:	movsxd rdx,edx
  4077f2:	lea    rdx,[rdx+rdx*4]
  4077f6:	shl    rdx,0x3
  4077fa:	add    rdx,QWORD PTR [rsi+0x20]
  4077fe:	xchg   ax,ax
  407800:	cmp    DWORD PTR [rdx+0x18],0x4
  407804:	jne    40780c <__ctype_b_loc@plt+0x553c>
  407806:	cmp    QWORD PTR [rdx+0x10],rcx
  40780a:	je     407817 <__ctype_b_loc@plt+0x5547>
  40780c:	mov    rdx,QWORD PTR [rdx+0x20]
  407810:	test   rdx,rdx
  407813:	jne    407800 <__ctype_b_loc@plt+0x5530>
  407815:	jmp    40781a <__ctype_b_loc@plt+0x554a>
  407817:	mov    r14,rdx
  40781a:	mov    rbx,rbp
  40781d:	sub    rbx,QWORD PTR [r12+0x40]
  407822:	cmp    DWORD PTR [r14+0x8],0x6
  407827:	je     40784c <__ctype_b_loc@plt+0x557c>
  407829:	lea    rcx,[rip+0x290b0]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  407830:	mov    rcx,QWORD PTR [rcx+rax*8]
  407834:	lea    rsi,[rip+0x235fd]        # 42ae38 <__ctype_b_loc@plt+0x28b68>
  40783b:	lea    rdx,[rip+0x237b1]        # 42aff3 <__ctype_b_loc@plt+0x28d23>
  407842:	xor    eax,eax
  407844:	mov    rdi,r12
  407847:	call   404080 <__ctype_b_loc@plt+0x1db0>
  40784c:	mov    rax,QWORD PTR [r12+0x10]
  407851:	cmp    rax,rbp
  407854:	jbe    40787b <__ctype_b_loc@plt+0x55ab>
  407856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407860:	mov    rcx,QWORD PTR [rax-0x10]
  407864:	mov    QWORD PTR [rax],rcx
  407867:	mov    ecx,DWORD PTR [rax-0x8]
  40786a:	mov    DWORD PTR [rax+0x8],ecx
  40786d:	lea    rax,[rax-0x10]
  407871:	cmp    rax,rbp
  407874:	ja     407860 <__ctype_b_loc@plt+0x5590>
  407876:	mov    rax,QWORD PTR [r12+0x10]
  40787b:	mov    rcx,QWORD PTR [r12+0x38]
  407880:	sub    rcx,rax
  407883:	cmp    rcx,0x10
  407887:	jg     4078a1 <__ctype_b_loc@plt+0x55d1>
  407889:	mov    esi,DWORD PTR [r12+0x58]
  40788e:	test   esi,esi
  407890:	jle    407896 <__ctype_b_loc@plt+0x55c6>
  407892:	add    esi,esi
  407894:	jmp    407899 <__ctype_b_loc@plt+0x55c9>
  407896:	add    esi,0x1
  407899:	mov    rdi,r12
  40789c:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  4078a1:	lea    r9,[r12+0x40]
  4078a6:	add    QWORD PTR [r12+0x10],0x10
  4078ac:	mov    rax,QWORD PTR [r12+0x40]
  4078b1:	lea    rbp,[rax+rbx*1]
  4078b5:	mov    rcx,QWORD PTR [r14]
  4078b8:	mov    QWORD PTR [rax+rbx*1],rcx
  4078bc:	mov    ecx,DWORD PTR [r14+0x8]
  4078c0:	mov    DWORD PTR [rax+rbx*1+0x8],ecx
  4078c4:	mov    r15,rbp
  4078c7:	mov    rax,QWORD PTR [rbp+0x0]
  4078cb:	mov    rcx,QWORD PTR [r12+0x28]
  4078d0:	mov    rdx,QWORD PTR [r12+0x30]
  4078d5:	sub    r15,QWORD PTR [r12+0x40]
  4078da:	mov    QWORD PTR [rcx+0x18],rdx
  4078de:	cmp    BYTE PTR [rax+0xa],0x0
  4078e2:	je     407908 <__ctype_b_loc@plt+0x5638>
  4078e4:	mov    rax,QWORD PTR [r12+0x38]
  4078e9:	sub    rax,QWORD PTR [r12+0x10]
  4078ee:	cmp    rax,0x140
  4078f4:	jg     40794e <__ctype_b_loc@plt+0x567e>
  4078f6:	mov    rbx,r9
  4078f9:	mov    esi,DWORD PTR [r12+0x58]
  4078fe:	cmp    esi,0x14
  407901:	jge    407941 <__ctype_b_loc@plt+0x5671>
  407903:	add    esi,0x14
  407906:	jmp    407943 <__ctype_b_loc@plt+0x5673>
  407908:	mov    rbp,QWORD PTR [rax+0x20]
  40790c:	mov    rcx,QWORD PTR [r12+0x38]
  407911:	sub    rcx,QWORD PTR [r12+0x10]
  407916:	movzx  eax,BYTE PTR [rbp+0x73]
  40791a:	mov    rdx,rax
  40791d:	shl    rdx,0x4
  407921:	cmp    rcx,rdx
  407924:	jg     4079f9 <__ctype_b_loc@plt+0x5729>
  40792a:	mov    rbx,r9
  40792d:	mov    esi,DWORD PTR [r12+0x58]
  407932:	cmp    esi,eax
  407934:	jge    4079ec <__ctype_b_loc@plt+0x571c>
  40793a:	add    esi,eax
  40793c:	jmp    4079ee <__ctype_b_loc@plt+0x571e>
  407941:	add    esi,esi
  407943:	mov    rdi,r12
  407946:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  40794b:	mov    r9,rbx
  40794e:	mov    rax,QWORD PTR [r12+0x28]
  407953:	cmp    rax,QWORD PTR [r12+0x48]
  407958:	jne    407afb <__ctype_b_loc@plt+0x582b>
  40795e:	movsxd r14,DWORD PTR [r12+0x5c]
  407963:	cmp    r14,0x4e21
  40796a:	jge    407fd7 <__ctype_b_loc@plt+0x5d07>
  407970:	mov    QWORD PTR [rsp+0x10],r9
  407975:	mov    DWORD PTR [rsp+0xc],r13d
  40797a:	lea    rbx,[r14+r14*1]
  40797e:	mov    rcx,QWORD PTR [r12+0x50]
  407983:	test   r14d,r14d
  407986:	mov    QWORD PTR [rsp+0x18],rcx
  40798b:	js     407a86 <__ctype_b_loc@plt+0x57b6>
  407991:	lea    rax,[r14*8+0x0]
  407999:	lea    rdx,[rax+rax*4]
  40799d:	mov    QWORD PTR [rsp+0x28],rbx
  4079a2:	lea    rax,[rbx*8+0x0]
  4079aa:	lea    rbp,[rax+rax*4]
  4079ae:	mov    rbx,QWORD PTR [r12+0x20]
  4079b3:	mov    rdi,QWORD PTR [rbx+0x18]
  4079b7:	mov    rsi,rcx
  4079ba:	mov    QWORD PTR [rsp+0x20],rdx
  4079bf:	mov    rcx,rbp
  4079c2:	call   QWORD PTR [rbx+0x10]
  4079c5:	mov    r13,rax
  4079c8:	test   r14d,r14d
  4079cb:	je     4079d6 <__ctype_b_loc@plt+0x5706>
  4079cd:	test   r13,r13
  4079d0:	je     408000 <__ctype_b_loc@plt+0x5d30>
  4079d6:	sub    rbp,QWORD PTR [rsp+0x20]
  4079db:	add    QWORD PTR [rbx+0x78],rbp
  4079df:	mov    rbx,QWORD PTR [rsp+0x28]
  4079e4:	mov    rcx,rbx
  4079e7:	jmp    407a9d <__ctype_b_loc@plt+0x57cd>
  4079ec:	add    esi,esi
  4079ee:	mov    rdi,r12
  4079f1:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  4079f6:	mov    r9,rbx
  4079f9:	mov    r14,QWORD PTR [r9]
  4079fc:	add    r14,r15
  4079ff:	cmp    BYTE PTR [rbp+0x72],0x0
  407a03:	je     407a5e <__ctype_b_loc@plt+0x578e>
  407a05:	mov    rbx,QWORD PTR [r12+0x10]
  407a0a:	mov    rsi,rbx
  407a0d:	sub    rsi,r14
  407a10:	shr    rsi,0x4
  407a14:	lea    edi,[rsi-0x1]
  407a17:	movzx  eax,BYTE PTR [rbp+0x71]
  407a1b:	mov    ecx,eax
  407a1d:	sub    ecx,esi
  407a1f:	jl     407c62 <__ctype_b_loc@plt+0x5992>
  407a25:	mov    r8,rbp
  407a28:	lea    ebp,[rax+0x1]
  407a2b:	sub    ebp,esi
  407a2d:	and    ebp,0x7
  407a30:	je     407bf5 <__ctype_b_loc@plt+0x5925>
  407a36:	neg    ebp
  407a38:	xor    edi,edi
  407a3a:	mov    rdx,rbx
  407a3d:	nop    DWORD PTR [rax]
  407a40:	mov    DWORD PTR [rdx+0x8],0x0
  407a47:	add    rdx,0x10
  407a4b:	add    edi,0xffffffff
  407a4e:	cmp    ebp,edi
  407a50:	jne    407a40 <__ctype_b_loc@plt+0x5770>
  407a52:	add    esi,0xffffffff
  407a55:	sub    esi,edi
  407a57:	mov    edi,esi
  407a59:	jmp    407bf8 <__ctype_b_loc@plt+0x5928>
  407a5e:	lea    rbx,[r14+0x10]
  407a62:	movzx  eax,BYTE PTR [rbp+0x71]
  407a66:	shl    rax,0x4
  407a6a:	add    rax,r14
  407a6d:	add    rax,0x10
  407a71:	cmp    QWORD PTR [r12+0x10],rax
  407a76:	jbe    407de0 <__ctype_b_loc@plt+0x5b10>
  407a7c:	mov    QWORD PTR [r12+0x10],rax
  407a81:	jmp    407de0 <__ctype_b_loc@plt+0x5b10>
  407a86:	lea    rsi,[rip+0x2332c]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  407a8d:	xor    r13d,r13d
  407a90:	xor    eax,eax
  407a92:	mov    rdi,r12
  407a95:	call   404080 <__ctype_b_loc@plt+0x1db0>
  407a9a:	movsxd rcx,ebx
  407a9d:	mov    r9,QWORD PTR [rsp+0x10]
  407aa2:	mov    QWORD PTR [r12+0x50],r13
  407aa7:	mov    DWORD PTR [r12+0x5c],ebx
  407aac:	mov    rax,QWORD PTR [r12+0x28]
  407ab1:	sub    rax,QWORD PTR [rsp+0x18]
  407ab6:	add    rax,r13
  407ab9:	mov    QWORD PTR [r12+0x28],rax
  407abe:	lea    rcx,[rcx+rcx*4]
  407ac2:	lea    rcx,[rcx*8-0x28]
  407aca:	add    rcx,r13
  407acd:	mov    QWORD PTR [r12+0x48],rcx
  407ad2:	cmp    r14d,0x2711
  407ad9:	mov    r13d,DWORD PTR [rsp+0xc]
  407ade:	jl     407afb <__ctype_b_loc@plt+0x582b>
  407ae0:	lea    rsi,[rip+0x23342]        # 42ae29 <__ctype_b_loc@plt+0x28b59>
  407ae7:	xor    eax,eax
  407ae9:	mov    rdi,r12
  407aec:	call   404080 <__ctype_b_loc@plt+0x1db0>
  407af1:	mov    r9,QWORD PTR [rsp+0x10]
  407af6:	mov    rax,QWORD PTR [r12+0x28]
  407afb:	lea    rcx,[rax+0x28]
  407aff:	mov    QWORD PTR [r12+0x28],rcx
  407b04:	mov    rcx,QWORD PTR [r9]
  407b07:	lea    rdx,[rcx+r15*1]
  407b0b:	mov    QWORD PTR [rax+0x30],rdx
  407b0f:	lea    rdx,[rcx+r15*1+0x10]
  407b14:	mov    QWORD PTR [rax+0x28],rdx
  407b18:	mov    QWORD PTR [r12+0x18],rdx
  407b1d:	mov    edx,0x140
  407b22:	add    rdx,QWORD PTR [r12+0x10]
  407b27:	mov    QWORD PTR [rax+0x38],rdx
  407b2b:	mov    DWORD PTR [rax+0x48],r13d
  407b2f:	mov    rax,QWORD PTR [rcx+r15*1]
  407b33:	mov    rdi,r12
  407b36:	call   QWORD PTR [rax+0x20]
  407b39:	test   eax,eax
  407b3b:	js     407bd5 <__ctype_b_loc@plt+0x5905>
  407b41:	mov    rsi,QWORD PTR [r12+0x10]
  407b46:	mov    rdi,QWORD PTR [r12+0x28]
  407b4b:	lea    rcx,[rdi-0x28]
  407b4f:	mov    QWORD PTR [r12+0x28],rcx
  407b54:	mov    rbp,QWORD PTR [rdi-0x28]
  407b58:	mov    rdx,QWORD PTR [rdi+0x8]
  407b5c:	mov    ecx,DWORD PTR [rdi+0x20]
  407b5f:	mov    QWORD PTR [r12+0x18],rbp
  407b64:	mov    rdi,QWORD PTR [rdi-0x10]
  407b68:	mov    QWORD PTR [r12+0x30],rdi
  407b6d:	test   ecx,ecx
  407b6f:	je     407be6 <__ctype_b_loc@plt+0x5916>
  407b71:	test   eax,eax
  407b73:	jle    407bad <__ctype_b_loc@plt+0x58dd>
  407b75:	cdqe   
  407b77:	shl    rax,0x4
  407b7b:	sub    rsi,rax
  407b7e:	xchg   ax,ax
  407b80:	mov    rax,rdx
  407b83:	mov    rdx,QWORD PTR [rsi]
  407b86:	mov    QWORD PTR [rax],rdx
  407b89:	mov    edx,DWORD PTR [rsi+0x8]
  407b8c:	mov    DWORD PTR [rax+0x8],edx
  407b8f:	cmp    ecx,0x1
  407b92:	je     407bdf <__ctype_b_loc@plt+0x590f>
  407b94:	add    ecx,0xffffffff
  407b97:	add    rsi,0x10
  407b9b:	lea    rdx,[rax+0x10]
  407b9f:	cmp    rsi,QWORD PTR [r12+0x10]
  407ba4:	jb     407b80 <__ctype_b_loc@plt+0x58b0>
  407ba6:	add    rax,0x10
  407baa:	mov    rdx,rax
  407bad:	test   ecx,ecx
  407baf:	jle    407be6 <__ctype_b_loc@plt+0x5916>
  407bb1:	add    ecx,0x1
  407bb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407bbe:	xchg   ax,ax
  407bc0:	mov    DWORD PTR [rdx+0x8],0x0
  407bc7:	add    rdx,0x10
  407bcb:	add    ecx,0xffffffff
  407bce:	cmp    ecx,0x1
  407bd1:	jg     407bc0 <__ctype_b_loc@plt+0x58f0>
  407bd3:	jmp    407be6 <__ctype_b_loc@plt+0x5916>
  407bd5:	mov    eax,0x2
  407bda:	jmp    407fc8 <__ctype_b_loc@plt+0x5cf8>
  407bdf:	add    rax,0x10
  407be3:	mov    rdx,rax
  407be6:	mov    QWORD PTR [r12+0x10],rdx
  407beb:	mov    eax,0x1
  407bf0:	jmp    407fc8 <__ctype_b_loc@plt+0x5cf8>
  407bf5:	mov    rdx,rbx
  407bf8:	cmp    ecx,0x7
  407bfb:	mov    rbp,r8
  407bfe:	jb     407c50 <__ctype_b_loc@plt+0x5980>
  407c00:	add    rdx,0x78
  407c04:	mov    esi,eax
  407c06:	sub    esi,edi
  407c08:	nop    DWORD PTR [rax+rax*1+0x0]
  407c10:	mov    DWORD PTR [rdx-0x70],0x0
  407c17:	mov    DWORD PTR [rdx-0x60],0x0
  407c1e:	mov    DWORD PTR [rdx-0x50],0x0
  407c25:	mov    DWORD PTR [rdx-0x40],0x0
  407c2c:	mov    DWORD PTR [rdx-0x30],0x0
  407c33:	mov    DWORD PTR [rdx-0x20],0x0
  407c3a:	mov    DWORD PTR [rdx-0x10],0x0
  407c41:	mov    DWORD PTR [rdx],0x0
  407c47:	sub    rdx,0xffffffffffffff80
  407c4b:	add    esi,0xfffffff8
  407c4e:	jne    407c10 <__ctype_b_loc@plt+0x5940>
  407c50:	shl    rcx,0x4
  407c54:	add    rbx,rcx
  407c57:	add    rbx,0x10
  407c5b:	mov    QWORD PTR [r12+0x10],rbx
  407c60:	mov    edi,eax
  407c62:	test   al,al
  407c64:	je     407dda <__ctype_b_loc@plt+0x5b0a>
  407c6a:	movsxd r8,edi
  407c6d:	mov    rdx,r8
  407c70:	neg    rdx
  407c73:	mov    rsi,r8
  407c76:	shl    rsi,0x4
  407c7a:	mov    rdi,rbx
  407c7d:	sub    rdi,rsi
  407c80:	lea    rsi,[rbx+0x10]
  407c84:	mov    QWORD PTR [r12+0x10],rsi
  407c89:	mov    rsi,QWORD PTR [rdi]
  407c8c:	mov    QWORD PTR [rbx],rsi
  407c8f:	shl    rdx,0x4
  407c93:	mov    esi,DWORD PTR [rbx+rdx*1+0x8]
  407c97:	mov    DWORD PTR [rbx+0x8],esi
  407c9a:	mov    DWORD PTR [rbx+rdx*1+0x8],0x0
  407ca2:	cmp    al,0x1
  407ca4:	je     407dda <__ctype_b_loc@plt+0x5b0a>
  407caa:	mov    r10,rbp
  407cad:	lea    rsi,[rax-0x2]
  407cb1:	mov    edx,eax
  407cb3:	add    dl,0xff
  407cb6:	and    dl,0x3
  407cb9:	movzx  edx,dl
  407cbc:	cmp    rsi,0x3
  407cc0:	jae    407ccc <__ctype_b_loc@plt+0x59fc>
  407cc2:	mov    esi,0x1
  407cc7:	jmp    407d88 <__ctype_b_loc@plt+0x5ab8>
  407ccc:	mov    esi,0x4
  407cd1:	sub    rsi,r8
  407cd4:	shl    rsi,0x4
  407cd8:	lea    rdi,[rbx+rsi*1]
  407cdc:	add    rdi,0x8
  407ce0:	sub    rax,rdx
  407ce3:	mov    esi,0x1
  407ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  407cf0:	mov    rbp,QWORD PTR [r12+0x10]
  407cf5:	lea    rcx,[rbp+0x10]
  407cf9:	mov    QWORD PTR [r12+0x10],rcx
  407cfe:	mov    rcx,QWORD PTR [rdi-0x38]
  407d02:	mov    QWORD PTR [rbp+0x0],rcx
  407d06:	mov    ecx,DWORD PTR [rdi-0x30]
  407d09:	mov    DWORD PTR [rbp+0x8],ecx
  407d0c:	mov    DWORD PTR [rdi-0x30],0x0
  407d13:	mov    rcx,QWORD PTR [r12+0x10]
  407d18:	lea    rbp,[rcx+0x10]
  407d1c:	mov    QWORD PTR [r12+0x10],rbp
  407d21:	mov    rbp,QWORD PTR [rdi-0x28]
  407d25:	mov    QWORD PTR [rcx],rbp
  407d28:	mov    ebp,DWORD PTR [rdi-0x20]
  407d2b:	mov    DWORD PTR [rcx+0x8],ebp
  407d2e:	mov    DWORD PTR [rdi-0x20],0x0
  407d35:	mov    rcx,QWORD PTR [r12+0x10]
  407d3a:	lea    rbp,[rcx+0x10]
  407d3e:	mov    QWORD PTR [r12+0x10],rbp
  407d43:	mov    rbp,QWORD PTR [rdi-0x18]
  407d47:	mov    QWORD PTR [rcx],rbp
  407d4a:	mov    ebp,DWORD PTR [rdi-0x10]
  407d4d:	mov    DWORD PTR [rcx+0x8],ebp
  407d50:	mov    DWORD PTR [rdi-0x10],0x0
  407d57:	mov    rcx,QWORD PTR [r12+0x10]
  407d5c:	lea    rbp,[rcx+0x10]
  407d60:	mov    QWORD PTR [r12+0x10],rbp
  407d65:	mov    rbp,QWORD PTR [rdi-0x8]
  407d69:	mov    QWORD PTR [rcx],rbp
  407d6c:	mov    ebp,DWORD PTR [rdi]
  407d6e:	mov    DWORD PTR [rcx+0x8],ebp
  407d71:	mov    DWORD PTR [rdi],0x0
  407d77:	add    rsi,0x4
  407d7b:	add    rdi,0x40
  407d7f:	cmp    rax,rsi
  407d82:	jne    407cf0 <__ctype_b_loc@plt+0x5a20>
  407d88:	test   dl,dl
  407d8a:	mov    rbp,r10
  407d8d:	je     407dda <__ctype_b_loc@plt+0x5b0a>
  407d8f:	sub    rsi,r8
  407d92:	shl    rsi,0x4
  407d96:	lea    rax,[rbx+rsi*1]
  407d9a:	add    rax,0x8
  407d9e:	neg    rdx
  407da1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407dab:	nop    DWORD PTR [rax+rax*1+0x0]
  407db0:	mov    rcx,QWORD PTR [r12+0x10]
  407db5:	lea    rsi,[rcx+0x10]
  407db9:	mov    QWORD PTR [r12+0x10],rsi
  407dbe:	mov    rsi,QWORD PTR [rax-0x8]
  407dc2:	mov    QWORD PTR [rcx],rsi
  407dc5:	mov    esi,DWORD PTR [rax]
  407dc7:	mov    DWORD PTR [rcx+0x8],esi
  407dca:	mov    DWORD PTR [rax],0x0
  407dd0:	add    rax,0x10
  407dd4:	add    rdx,0x1
  407dd8:	jne    407db0 <__ctype_b_loc@plt+0x5ae0>
  407dda:	add    r15,QWORD PTR [r9]
  407ddd:	mov    r14,r15
  407de0:	mov    rcx,QWORD PTR [r12+0x28]
  407de5:	cmp    rcx,QWORD PTR [r12+0x48]
  407dea:	jne    407ef9 <__ctype_b_loc@plt+0x5c29>
  407df0:	mov    QWORD PTR [rsp+0x28],rbx
  407df5:	movsxd r15,DWORD PTR [r12+0x5c]
  407dfa:	cmp    r15,0x4e21
  407e01:	jge    407fd7 <__ctype_b_loc@plt+0x5d07>
  407e07:	mov    DWORD PTR [rsp+0xc],r13d
  407e0c:	lea    rbx,[r15+r15*1]
  407e10:	mov    rcx,QWORD PTR [r12+0x50]
  407e15:	test   r15d,r15d
  407e18:	mov    QWORD PTR [rsp+0x10],rcx
  407e1d:	mov    QWORD PTR [rsp+0x18],rbx
  407e22:	js     407e84 <__ctype_b_loc@plt+0x5bb4>
  407e24:	mov    QWORD PTR [rsp+0x20],rbp
  407e29:	lea    rax,[r15*8+0x0]
  407e31:	lea    rdx,[rax+rax*4]
  407e35:	lea    rax,[rbx*8+0x0]
  407e3d:	lea    rbp,[rax+rax*4]
  407e41:	mov    rax,QWORD PTR [r12+0x20]
  407e46:	mov    rdi,QWORD PTR [rax+0x18]
  407e4a:	mov    rsi,rcx
  407e4d:	mov    QWORD PTR [rsp+0x30],rdx
  407e52:	mov    rcx,rbp
  407e55:	mov    rbx,rax
  407e58:	call   QWORD PTR [rax+0x10]
  407e5b:	mov    r13,rax
  407e5e:	test   r15d,r15d
  407e61:	je     407e6c <__ctype_b_loc@plt+0x5b9c>
  407e63:	test   r13,r13
  407e66:	je     408000 <__ctype_b_loc@plt+0x5d30>
  407e6c:	sub    rbp,QWORD PTR [rsp+0x30]
  407e71:	add    QWORD PTR [rbx+0x78],rbp
  407e75:	mov    rcx,QWORD PTR [rsp+0x18]
  407e7a:	mov    rax,rcx
  407e7d:	mov    rbp,QWORD PTR [rsp+0x20]
  407e82:	jmp    407ea0 <__ctype_b_loc@plt+0x5bd0>
  407e84:	lea    rsi,[rip+0x22f2e]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  407e8b:	xor    r13d,r13d
  407e8e:	xor    eax,eax
  407e90:	mov    rdi,r12
  407e93:	call   404080 <__ctype_b_loc@plt+0x1db0>
  407e98:	mov    rcx,QWORD PTR [rsp+0x18]
  407e9d:	movsxd rax,ecx
  407ea0:	mov    QWORD PTR [r12+0x50],r13
  407ea5:	mov    DWORD PTR [r12+0x5c],ecx
  407eaa:	mov    rcx,QWORD PTR [r12+0x28]
  407eaf:	sub    rcx,QWORD PTR [rsp+0x10]
  407eb4:	add    rcx,r13
  407eb7:	mov    QWORD PTR [r12+0x28],rcx
  407ebc:	lea    rax,[rax+rax*4]
  407ec0:	lea    rax,[rax*8-0x28]
  407ec8:	add    rax,r13
  407ecb:	mov    QWORD PTR [r12+0x48],rax
  407ed0:	cmp    r15d,0x2711
  407ed7:	mov    r13d,DWORD PTR [rsp+0xc]
  407edc:	mov    rbx,QWORD PTR [rsp+0x28]
  407ee1:	jl     407ef9 <__ctype_b_loc@plt+0x5c29>
  407ee3:	lea    rsi,[rip+0x22f3f]        # 42ae29 <__ctype_b_loc@plt+0x28b59>
  407eea:	xor    eax,eax
  407eec:	mov    rdi,r12
  407eef:	call   404080 <__ctype_b_loc@plt+0x1db0>
  407ef4:	mov    rcx,QWORD PTR [r12+0x28]
  407ef9:	lea    rax,[rcx+0x28]
  407efd:	mov    QWORD PTR [r12+0x28],rax
  407f02:	mov    QWORD PTR [rcx+0x30],r14
  407f06:	mov    QWORD PTR [rcx+0x28],rbx
  407f0a:	mov    QWORD PTR [r12+0x18],rbx
  407f0f:	movzx  eax,BYTE PTR [rbp+0x73]
  407f13:	shl    rax,0x4
  407f17:	add    rax,rbx
  407f1a:	mov    QWORD PTR [rcx+0x38],rax
  407f1e:	mov    rdx,QWORD PTR [rbp+0x18]
  407f22:	mov    QWORD PTR [r12+0x30],rdx
  407f27:	mov    DWORD PTR [rcx+0x4c],0x0
  407f2e:	mov    DWORD PTR [rcx+0x48],r13d
  407f32:	mov    rcx,QWORD PTR [r12+0x10]
  407f37:	cmp    rcx,rax
  407f3a:	jae    407fc1 <__ctype_b_loc@plt+0x5cf1>
  407f40:	mov    rdx,rcx
  407f43:	not    rdx
  407f46:	add    rdx,rax
  407f49:	mov    esi,edx
  407f4b:	shr    esi,0x4
  407f4e:	add    esi,0x1
  407f51:	and    rsi,0x7
  407f55:	je     407f71 <__ctype_b_loc@plt+0x5ca1>
  407f57:	neg    rsi
  407f5a:	nop    WORD PTR [rax+rax*1+0x0]
  407f60:	mov    DWORD PTR [rcx+0x8],0x0
  407f67:	add    rcx,0x10
  407f6b:	add    rsi,0x1
  407f6f:	jne    407f60 <__ctype_b_loc@plt+0x5c90>
  407f71:	cmp    rdx,0x70
  407f75:	jb     407fc1 <__ctype_b_loc@plt+0x5cf1>
  407f77:	nop    WORD PTR [rax+rax*1+0x0]
  407f80:	mov    DWORD PTR [rcx+0x8],0x0
  407f87:	mov    DWORD PTR [rcx+0x18],0x0
  407f8e:	mov    DWORD PTR [rcx+0x28],0x0
  407f95:	mov    DWORD PTR [rcx+0x38],0x0
  407f9c:	mov    DWORD PTR [rcx+0x48],0x0
  407fa3:	mov    DWORD PTR [rcx+0x58],0x0
  407faa:	mov    DWORD PTR [rcx+0x68],0x0
  407fb1:	mov    DWORD PTR [rcx+0x78],0x0
  407fb8:	sub    rcx,0xffffffffffffff80
  407fbc:	cmp    rcx,rax
  407fbf:	jb     407f80 <__ctype_b_loc@plt+0x5cb0>
  407fc1:	mov    QWORD PTR [r12+0x10],rax
  407fc6:	xor    eax,eax
  407fc8:	add    rsp,0x38
  407fcc:	pop    rbx
  407fcd:	pop    r12
  407fcf:	pop    r13
  407fd1:	pop    r14
  407fd3:	pop    r15
  407fd5:	pop    rbp
  407fd6:	ret    
  407fd7:	mov    rdi,QWORD PTR [r12+0xa8]
  407fdf:	test   rdi,rdi
  407fe2:	jne    408047 <__ctype_b_loc@plt+0x5d77>
  407fe4:	mov    BYTE PTR [r12+0xa],0x5
  407fea:	mov    rax,QWORD PTR [r12+0x20]
  407fef:	cmp    QWORD PTR [rax+0x98],0x0
  407ff7:	je     40803d <__ctype_b_loc@plt+0x5d6d>
  407ff9:	mov    esi,0x5
  407ffe:	jmp    408027 <__ctype_b_loc@plt+0x5d57>
  408000:	mov    rdi,QWORD PTR [r12+0xa8]
  408008:	test   rdi,rdi
  40800b:	jne    408053 <__ctype_b_loc@plt+0x5d83>
  40800d:	mov    BYTE PTR [r12+0xa],0x4
  408013:	mov    rax,QWORD PTR [r12+0x20]
  408018:	cmp    QWORD PTR [rax+0x98],0x0
  408020:	je     40803d <__ctype_b_loc@plt+0x5d6d>
  408022:	mov    esi,0x4
  408027:	mov    rdi,r12
  40802a:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  40802f:	mov    rax,QWORD PTR [r12+0x20]
  408034:	mov    rdi,r12
  408037:	call   QWORD PTR [rax+0x98]
  40803d:	mov    edi,0x1
  408042:	call   402280 <exit@plt>
  408047:	mov    DWORD PTR [rdi+0xd0],0x5
  408051:	jmp    40805d <__ctype_b_loc@plt+0x5d8d>
  408053:	mov    DWORD PTR [rdi+0xd0],0x4
  40805d:	add    rdi,0x8
  408061:	mov    esi,0x1
  408066:	call   402230 <longjmp@plt>
  40806b:	nop    DWORD PTR [rax+rax*1+0x0]
  408070:	push   rbp
  408071:	push   r15
  408073:	push   r14
  408075:	push   r13
  408077:	push   r12
  408079:	push   rbx
  40807a:	sub    rsp,0x18
  40807e:	mov    r13,rdi
  408081:	mov    r12,QWORD PTR [rdi+0x20]
  408085:	mov    eax,DWORD PTR [r12+0x94]
  40808d:	add    eax,eax
  40808f:	lea    eax,[rax+rax*4]
  408092:	test   eax,eax
  408094:	movabs r14,0x7ffffffffffffffe
  40809e:	cmovne r14,rax
  4080a2:	mov    rax,QWORD PTR [r12+0x78]
  4080a7:	sub    rax,QWORD PTR [r12+0x70]
  4080ac:	add    QWORD PTR [r12+0x88],rax
  4080b4:	lea    rbp,[rip+0x220bd]        # 42a178 <__ctype_b_loc@plt+0x27ea8>
  4080bb:	mov    r15,r12
  4080be:	mov    QWORD PTR [rsp+0x8],r12
  4080c3:	mov    QWORD PTR [rsp],rdi
  4080c7:	jmp    4080d4 <__ctype_b_loc@plt+0x5e04>
  4080c9:	nop    DWORD PTR [rax+0x0]
  4080d0:	mov    r15,QWORD PTR [r13+0x20]
  4080d4:	movzx  eax,BYTE PTR [r15+0x21]
  4080d9:	cmp    rax,0x4
  4080dd:	ja     4082d0 <__ctype_b_loc@plt+0x6000>
  4080e3:	movsxd rax,DWORD PTR [rbp+rax*4+0x0]
  4080e8:	add    rax,rbp
  4080eb:	jmp    rax
  4080ed:	vxorps xmm0,xmm0,xmm0
  4080f1:	vmovups XMMWORD PTR [r15+0x38],xmm0
  4080f7:	mov    QWORD PTR [r15+0x48],0x0
  4080ff:	mov    rsi,QWORD PTR [r15+0xb0]
  408106:	test   BYTE PTR [rsi+0x9],0x3
  40810a:	je     40811b <__ctype_b_loc@plt+0x5e4b>
  40810c:	mov    rdi,r15
  40810f:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  408114:	mov    rsi,QWORD PTR [r15+0xb0]
  40811b:	cmp    DWORD PTR [rsi+0x80],0x4
  408122:	jl     408136 <__ctype_b_loc@plt+0x5e66>
  408124:	mov    rsi,QWORD PTR [rsi+0x78]
  408128:	test   BYTE PTR [rsi+0x9],0x3
  40812c:	je     408136 <__ctype_b_loc@plt+0x5e66>
  40812e:	mov    rdi,r15
  408131:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  408136:	mov    rax,QWORD PTR [r13+0x20]
  40813a:	cmp    DWORD PTR [rax+0xa8],0x4
  408141:	jl     408158 <__ctype_b_loc@plt+0x5e88>
  408143:	mov    rsi,QWORD PTR [rax+0xa0]
  40814a:	test   BYTE PTR [rsi+0x9],0x3
  40814e:	je     408158 <__ctype_b_loc@plt+0x5e88>
  408150:	mov    rdi,r15
  408153:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  408158:	mov    rdi,r15
  40815b:	call   40b840 <__ctype_b_loc@plt+0x9570>
  408160:	mov    BYTE PTR [r15+0x21],0x1
  408165:	jmp    4082d0 <__ctype_b_loc@plt+0x6000>
  40816a:	cmp    QWORD PTR [r15+0x50],0x0
  40816f:	je     4082b1 <__ctype_b_loc@plt+0x5fe1>
  408175:	mov    rdi,r13
  408178:	call   40b6f0 <__ctype_b_loc@plt+0x9420>
  40817d:	mov    rax,QWORD PTR [r15+0x80]
  408184:	cmp    rax,0x65
  408188:	jb     408424 <__ctype_b_loc@plt+0x6154>
  40818e:	add    rax,0xffffffffffffff9c
  408192:	mov    QWORD PTR [r15+0x80],rax
  408199:	mov    eax,0x64
  40819e:	jmp    408610 <__ctype_b_loc@plt+0x6340>
  4081a3:	mov    rbx,QWORD PTR [r15+0x78]
  4081a7:	movsxd rsi,DWORD PTR [r15+0x24]
  4081ab:	lea    eax,[rsi+0x1]
  4081ae:	mov    DWORD PTR [r15+0x24],eax
  4081b2:	shl    rsi,0x3
  4081b6:	add    rsi,QWORD PTR [r15]
  4081b9:	mov    rdx,0xfffffffffffffffd
  4081c0:	mov    rdi,r13
  4081c3:	call   40b420 <__ctype_b_loc@plt+0x9150>
  4081c8:	mov    eax,DWORD PTR [r15+0x24]
  4081cc:	cmp    eax,DWORD PTR [r15+0xc]
  4081d0:	jl     4081d7 <__ctype_b_loc@plt+0x5f07>
  4081d2:	mov    BYTE PTR [r15+0x21],0x3
  4081d7:	mov    rax,QWORD PTR [r15+0x78]
  4081db:	sub    rax,rbx
  4081de:	add    QWORD PTR [r15+0x80],rax
  4081e5:	mov    eax,0xa
  4081ea:	jmp    408610 <__ctype_b_loc@plt+0x6340>
  4081ef:	mov    rsi,QWORD PTR [r15+0x30]
  4081f3:	mov    rbx,QWORD PTR [r15+0x78]
  4081f7:	mov    edx,0x28
  4081fc:	mov    rdi,r13
  4081ff:	call   40b420 <__ctype_b_loc@plt+0x9150>
  408204:	mov    QWORD PTR [r15+0x30],rax
  408208:	cmp    QWORD PTR [rax],0x0
  40820c:	jne    4085f5 <__ctype_b_loc@plt+0x6325>
  408212:	mov    r12,QWORD PTR [r13+0x20]
  408216:	mov    esi,DWORD PTR [r12+0xc]
  40821b:	cmp    esi,0x41
  40821e:	jl     40823e <__ctype_b_loc@plt+0x5f6e>
  408220:	mov    eax,esi
  408222:	sar    eax,0x1f
  408225:	shr    eax,0x1e
  408228:	add    eax,esi
  40822a:	sar    eax,0x2
  40822d:	cmp    DWORD PTR [r12+0x8],eax
  408232:	jae    40823e <__ctype_b_loc@plt+0x5f6e>
  408234:	shr    esi,1
  408236:	mov    rdi,r13
  408239:	call   403920 <__ctype_b_loc@plt+0x1650>
  40823e:	mov    r13,QWORD PTR [r12+0x68]
  408243:	cmp    r13,0x41
  408247:	jb     4085e0 <__ctype_b_loc@plt+0x6310>
  40824d:	mov    rbp,r13
  408250:	shr    rbp,1
  408253:	lea    rax,[rbp+0x1]
  408257:	cmp    rax,0xfffffffffffffffd
  40825b:	ja     4085c2 <__ctype_b_loc@plt+0x62f2>
  408261:	mov    rsi,QWORD PTR [r12+0x58]
  408266:	mov    rax,QWORD PTR [rsp]
  40826a:	mov    rax,QWORD PTR [rax+0x20]
  40826e:	mov    rdi,QWORD PTR [rax+0x18]
  408272:	mov    rdx,r13
  408275:	mov    rcx,rbp
  408278:	mov    QWORD PTR [rsp+0x10],rax
  40827d:	call   QWORD PTR [rax+0x10]
  408280:	test   rax,rax
  408283:	je     408699 <__ctype_b_loc@plt+0x63c9>
  408289:	mov    rcx,rbp
  40828c:	sub    rcx,r13
  40828f:	mov    rdx,QWORD PTR [rsp+0x10]
  408294:	add    QWORD PTR [rdx+0x78],rcx
  408298:	jmp    4085d6 <__ctype_b_loc@plt+0x6306>
  40829d:	cmp    QWORD PTR [r15+0x38],0x0
  4082a2:	je     4082d7 <__ctype_b_loc@plt+0x6007>
  4082a4:	mov    rdi,r15
  4082a7:	call   40ad00 <__ctype_b_loc@plt+0x8a30>
  4082ac:	jmp    408610 <__ctype_b_loc@plt+0x6340>
  4082b1:	mov    BYTE PTR [r15+0x21],0x0
  4082b6:	mov    QWORD PTR [r15+0x88],0x0
  4082c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4082cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4082d0:	xor    eax,eax
  4082d2:	jmp    408610 <__ctype_b_loc@plt+0x6340>
  4082d7:	lea    r12,[r15+0xb8]
  4082de:	mov    rbx,QWORD PTR [r15+0xd8]
  4082e5:	cmp    rbx,r12
  4082e8:	je     40833f <__ctype_b_loc@plt+0x606f>
  4082ea:	nop    WORD PTR [rax+rax*1+0x0]
  4082f0:	test   BYTE PTR [rbx+0x9],0x7
  4082f4:	jne    408320 <__ctype_b_loc@plt+0x6050>
  4082f6:	mov    rax,QWORD PTR [rbx+0x10]
  4082fa:	cmp    DWORD PTR [rax+0x8],0x4
  4082fe:	jl     408320 <__ctype_b_loc@plt+0x6050>
  408300:	mov    rsi,QWORD PTR [rax]
  408303:	test   BYTE PTR [rsi+0x9],0x3
  408307:	je     408320 <__ctype_b_loc@plt+0x6050>
  408309:	mov    rdi,r15
  40830c:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  408311:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40831b:	nop    DWORD PTR [rax+rax*1+0x0]
  408320:	mov    rbx,QWORD PTR [rbx+0x20]
  408324:	cmp    rbx,r12
  408327:	jne    4082f0 <__ctype_b_loc@plt+0x6020>
  408329:	jmp    408338 <__ctype_b_loc@plt+0x6068>
  40832b:	nop    DWORD PTR [rax+rax*1+0x0]
  408330:	mov    rdi,r15
  408333:	call   40ad00 <__ctype_b_loc@plt+0x8a30>
  408338:	cmp    QWORD PTR [r15+0x38],0x0
  40833d:	jne    408330 <__ctype_b_loc@plt+0x6060>
  40833f:	mov    rax,QWORD PTR [r15+0x48]
  408343:	mov    QWORD PTR [r15+0x38],rax
  408347:	mov    QWORD PTR [r15+0x48],0x0
  40834f:	test   BYTE PTR [r13+0x9],0x3
  408354:	je     408361 <__ctype_b_loc@plt+0x6091>
  408356:	mov    rdi,r15
  408359:	mov    rsi,r13
  40835c:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  408361:	mov    rdi,r15
  408364:	call   40b840 <__ctype_b_loc@plt+0x9570>
  408369:	cmp    QWORD PTR [r15+0x38],0x0
  40836e:	je     40837f <__ctype_b_loc@plt+0x60af>
  408370:	mov    rdi,r15
  408373:	call   40ad00 <__ctype_b_loc@plt+0x8a30>
  408378:	cmp    QWORD PTR [r15+0x38],0x0
  40837d:	jne    408370 <__ctype_b_loc@plt+0x60a0>
  40837f:	mov    rax,QWORD PTR [r15+0x40]
  408383:	mov    QWORD PTR [r15+0x38],rax
  408387:	mov    QWORD PTR [r15+0x40],0x0
  40838f:	test   rax,rax
  408392:	je     4083af <__ctype_b_loc@plt+0x60df>
  408394:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40839e:	xchg   ax,ax
  4083a0:	mov    rdi,r15
  4083a3:	call   40ad00 <__ctype_b_loc@plt+0x8a30>
  4083a8:	cmp    QWORD PTR [r15+0x38],0x0
  4083ad:	jne    4083a0 <__ctype_b_loc@plt+0x60d0>
  4083af:	xor    esi,esi
  4083b1:	mov    rdi,r13
  4083b4:	call   40b940 <__ctype_b_loc@plt+0x9670>
  4083b9:	mov    r12,rax
  4083bc:	mov    rbx,QWORD PTR [r15+0x50]
  4083c0:	test   rbx,rbx
  4083c3:	je     4083f7 <__ctype_b_loc@plt+0x6127>
  4083c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4083cf:	nop
  4083d0:	mov    rbx,QWORD PTR [rbx]
  4083d3:	movzx  eax,BYTE PTR [rbx+0x9]
  4083d7:	and    al,0xf8
  4083d9:	movzx  ecx,BYTE PTR [r15+0x20]
  4083de:	and    cl,0x3
  4083e1:	or     cl,al
  4083e3:	mov    BYTE PTR [rbx+0x9],cl
  4083e6:	mov    rdi,r15
  4083e9:	mov    rsi,rbx
  4083ec:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  4083f1:	cmp    rbx,QWORD PTR [r15+0x50]
  4083f5:	jne    4083d0 <__ctype_b_loc@plt+0x6100>
  4083f7:	cmp    QWORD PTR [r15+0x38],0x0
  4083fc:	je     40842e <__ctype_b_loc@plt+0x615e>
  4083fe:	xor    r13d,r13d
  408401:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40840b:	nop    DWORD PTR [rax+rax*1+0x0]
  408410:	mov    rdi,r15
  408413:	call   40ad00 <__ctype_b_loc@plt+0x8a30>
  408418:	add    r13,rax
  40841b:	cmp    QWORD PTR [r15+0x38],0x0
  408420:	jne    408410 <__ctype_b_loc@plt+0x6140>
  408422:	jmp    408431 <__ctype_b_loc@plt+0x6161>
  408424:	mov    eax,0x64
  408429:	jmp    408610 <__ctype_b_loc@plt+0x6340>
  40842e:	xor    r13d,r13d
  408431:	mov    rax,QWORD PTR [r15+0x48]
  408435:	test   rax,rax
  408438:	jne    40844d <__ctype_b_loc@plt+0x617d>
  40843a:	jmp    408583 <__ctype_b_loc@plt+0x62b3>
  40843f:	nop
  408440:	mov    rax,QWORD PTR [rax+0x30]
  408444:	test   rax,rax
  408447:	je     408583 <__ctype_b_loc@plt+0x62b3>
  40844d:	movsxd rcx,DWORD PTR [rax+0x38]
  408451:	test   rcx,rcx
  408454:	je     4084b0 <__ctype_b_loc@plt+0x61e0>
  408456:	mov    dl,BYTE PTR [rax+0x9]
  408459:	and    dl,0x10
  40845c:	je     4084b0 <__ctype_b_loc@plt+0x61e0>
  40845e:	mov    rdx,rcx
  408461:	shl    rdx,0x4
  408465:	add    rdx,0xfffffffffffffff8
  408469:	neg    rcx
  40846c:	nop    DWORD PTR [rax+0x0]
  408470:	mov    rsi,QWORD PTR [rax+0x18]
  408474:	mov    edi,DWORD PTR [rsi+rdx*1]
  408477:	cmp    edi,0x4
  40847a:	jl     4084a6 <__ctype_b_loc@plt+0x61d6>
  40847c:	mov    rbp,QWORD PTR [rsi+rdx*1-0x8]
  408481:	movzx  ebx,BYTE PTR [rbp+0x9]
  408485:	jne    408490 <__ctype_b_loc@plt+0x61c0>
  408487:	and    bl,0xfc
  40848a:	mov    BYTE PTR [rbp+0x9],bl
  40848d:	jmp    4084a6 <__ctype_b_loc@plt+0x61d6>
  40848f:	nop
  408490:	test   bl,0x3
  408493:	jne    40849f <__ctype_b_loc@plt+0x61cf>
  408495:	cmp    edi,0x7
  408498:	jne    4084a6 <__ctype_b_loc@plt+0x61d6>
  40849a:	and    bl,0x8
  40849d:	je     4084a6 <__ctype_b_loc@plt+0x61d6>
  40849f:	mov    DWORD PTR [rsi+rdx*1],0x0
  4084a6:	add    rdx,0xfffffffffffffff0
  4084aa:	add    rcx,0x1
  4084ae:	jne    408470 <__ctype_b_loc@plt+0x61a0>
  4084b0:	mov    cl,BYTE PTR [rax+0xb]
  4084b3:	mov    edx,0x1
  4084b8:	shlx   rcx,rdx,rcx
  4084bd:	test   ecx,ecx
  4084bf:	je     408440 <__ctype_b_loc@plt+0x6170>
  4084c5:	movsxd rcx,ecx
  4084c8:	lea    rdx,[rcx+rcx*4]
  4084cc:	lea    rdx,[rdx*8-0x10]
  4084d4:	neg    rcx
  4084d7:	nop    WORD PTR [rax+rax*1+0x0]
  4084e0:	mov    rsi,QWORD PTR [rax+0x20]
  4084e4:	mov    edi,DWORD PTR [rsi+rdx*1-0x10]
  4084e8:	test   edi,edi
  4084ea:	je     408570 <__ctype_b_loc@plt+0x62a0>
  4084f0:	cmp    DWORD PTR [rsi+rdx*1],0x4
  4084f4:	jl     408520 <__ctype_b_loc@plt+0x6250>
  4084f6:	mov    rbp,QWORD PTR [rsi+rdx*1-0x8]
  4084fb:	movzx  ebx,BYTE PTR [rbp+0x9]
  4084ff:	jne    408512 <__ctype_b_loc@plt+0x6242>
  408501:	and    bl,0xfc
  408504:	mov    BYTE PTR [rbp+0x9],bl
  408507:	mov    edi,DWORD PTR [rsi+rdx*1-0x10]
  40850b:	cmp    edi,0x4
  40850e:	jge    408525 <__ctype_b_loc@plt+0x6255>
  408510:	jmp    408570 <__ctype_b_loc@plt+0x62a0>
  408512:	test   bl,0x3
  408515:	jne    408550 <__ctype_b_loc@plt+0x6280>
  408517:	nop    WORD PTR [rax+rax*1+0x0]
  408520:	cmp    edi,0x4
  408523:	jl     408570 <__ctype_b_loc@plt+0x62a0>
  408525:	mov    rbp,QWORD PTR [rsi+rdx*1-0x18]
  40852a:	movzx  ebx,BYTE PTR [rbp+0x9]
  40852e:	jne    408538 <__ctype_b_loc@plt+0x6268>
  408530:	and    bl,0xfc
  408533:	mov    BYTE PTR [rbp+0x9],bl
  408536:	jmp    408570 <__ctype_b_loc@plt+0x62a0>
  408538:	test   bl,0x3
  40853b:	jne    408550 <__ctype_b_loc@plt+0x6280>
  40853d:	cmp    edi,0x7
  408540:	jne    408570 <__ctype_b_loc@plt+0x62a0>
  408542:	and    bl,0x8
  408545:	je     408570 <__ctype_b_loc@plt+0x62a0>
  408547:	nop    WORD PTR [rax+rax*1+0x0]
  408550:	mov    DWORD PTR [rsi+rdx*1-0x10],0x0
  408558:	cmp    DWORD PTR [rsi+rdx*1],0x4
  40855c:	jl     408570 <__ctype_b_loc@plt+0x62a0>
  40855e:	mov    DWORD PTR [rsi+rdx*1],0xb
  408565:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40856f:	nop
  408570:	add    rdx,0xffffffffffffffd8
  408574:	add    rcx,0x1
  408578:	jne    4084e0 <__ctype_b_loc@plt+0x6210>
  40857e:	jmp    408440 <__ctype_b_loc@plt+0x6170>
  408583:	xor    BYTE PTR [r15+0x20],0x3
  408588:	mov    DWORD PTR [r15+0x24],0x0
  408590:	lea    rax,[r15+0x28]
  408594:	mov    QWORD PTR [r15+0x30],rax
  408598:	mov    BYTE PTR [r15+0x21],0x2
  40859d:	mov    rax,QWORD PTR [r15+0x78]
  4085a1:	add    r13,r12
  4085a4:	sub    rax,r13
  4085a7:	mov    QWORD PTR [r15+0x80],rax
  4085ae:	xor    eax,eax
  4085b0:	mov    r12,QWORD PTR [rsp+0x8]
  4085b5:	mov    r13,QWORD PTR [rsp]
  4085b9:	lea    rbp,[rip+0x21bb8]        # 42a178 <__ctype_b_loc@plt+0x27ea8>
  4085c0:	jmp    408610 <__ctype_b_loc@plt+0x6340>
  4085c2:	xor    eax,eax
  4085c4:	mov    rdi,QWORD PTR [rsp]
  4085c8:	lea    rsi,[rip+0x227ea]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  4085cf:	call   404080 <__ctype_b_loc@plt+0x1db0>
  4085d4:	xor    eax,eax
  4085d6:	mov    QWORD PTR [r12+0x58],rax
  4085db:	mov    QWORD PTR [r12+0x68],rbp
  4085e0:	mov    BYTE PTR [r15+0x21],0x4
  4085e5:	mov    r12,QWORD PTR [rsp+0x8]
  4085ea:	mov    r13,QWORD PTR [rsp]
  4085ee:	lea    rbp,[rip+0x21b83]        # 42a178 <__ctype_b_loc@plt+0x27ea8>
  4085f5:	mov    rax,QWORD PTR [r15+0x78]
  4085f9:	sub    rax,rbx
  4085fc:	add    QWORD PTR [r15+0x80],rax
  408603:	mov    eax,0x190
  408608:	nop    DWORD PTR [rax+rax*1+0x0]
  408610:	mov    cl,BYTE PTR [r12+0x21]
  408615:	test   cl,cl
  408617:	je     408625 <__ctype_b_loc@plt+0x6355>
  408619:	sub    r14,rax
  40861c:	test   r14,r14
  40861f:	jg     4080d0 <__ctype_b_loc@plt+0x5e00>
  408625:	test   cl,cl
  408627:	je     408645 <__ctype_b_loc@plt+0x6375>
  408629:	mov    rax,QWORD PTR [r12+0x88]
  408631:	cmp    rax,0x3ff
  408637:	ja     408672 <__ctype_b_loc@plt+0x63a2>
  408639:	mov    eax,0x400
  40863e:	add    rax,QWORD PTR [r12+0x78]
  408643:	jmp    408685 <__ctype_b_loc@plt+0x63b5>
  408645:	mov    rdx,QWORD PTR [r12+0x80]
  40864d:	shr    rdx,0x2
  408651:	movabs rax,0x28f5c28f5c28f5c3
  40865b:	mulx   rcx,rax,rax
  408660:	shr    rcx,0x2
  408664:	movsxd rax,DWORD PTR [r12+0x90]
  40866c:	imul   rax,rcx
  408670:	jmp    408685 <__ctype_b_loc@plt+0x63b5>
  408672:	add    rax,0xfffffffffffffc00
  408678:	mov    QWORD PTR [r12+0x88],rax
  408680:	mov    rax,QWORD PTR [r12+0x78]
  408685:	mov    QWORD PTR [r12+0x70],rax
  40868a:	add    rsp,0x18
  40868e:	pop    rbx
  40868f:	pop    r12
  408691:	pop    r13
  408693:	pop    r14
  408695:	pop    r15
  408697:	pop    rbp
  408698:	ret    
  408699:	mov    rax,QWORD PTR [rsp]
  40869d:	mov    rdi,QWORD PTR [rax+0xa8]
  4086a4:	test   rdi,rdi
  4086a7:	jne    4086e7 <__ctype_b_loc@plt+0x6417>
  4086a9:	mov    rax,QWORD PTR [rsp]
  4086ad:	mov    BYTE PTR [rax+0xa],0x4
  4086b1:	mov    rax,QWORD PTR [rax+0x20]
  4086b5:	cmp    QWORD PTR [rax+0x98],0x0
  4086bd:	je     4086dd <__ctype_b_loc@plt+0x640d>
  4086bf:	mov    esi,0x4
  4086c4:	mov    rbx,QWORD PTR [rsp]
  4086c8:	mov    rdi,rbx
  4086cb:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  4086d0:	mov    rax,QWORD PTR [rbx+0x20]
  4086d4:	mov    rdi,rbx
  4086d7:	call   QWORD PTR [rax+0x98]
  4086dd:	mov    edi,0x1
  4086e2:	call   402280 <exit@plt>
  4086e7:	mov    DWORD PTR [rdi+0xd0],0x4
  4086f1:	add    rdi,0x8
  4086f5:	mov    esi,0x1
  4086fa:	call   402230 <longjmp@plt>
  4086ff:	nop
  408700:	push   rbp
  408701:	push   r15
  408703:	push   r14
  408705:	push   r13
  408707:	push   r12
  408709:	push   rbx
  40870a:	sub    rsp,0x18
  40870e:	mov    QWORD PTR [rsp+0x8],rcx
  408713:	mov    r12,rdx
  408716:	mov    r15,rsi
  408719:	mov    r13,rdi
  40871c:	mov    ecx,DWORD PTR [rsi+0x8]
  40871f:	lea    rdi,[rip+0x223f2]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  408726:	mov    r8,0xffffffffffffffff
  40872d:	xor    r14d,r14d
  408730:	mov    QWORD PTR [rsp+0x10],r13
  408735:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40873f:	nop
  408740:	cmp    ecx,0x7
  408743:	je     4087b0 <__ctype_b_loc@plt+0x64e0>
  408745:	cmp    ecx,0x5
  408748:	jne    4087c0 <__ctype_b_loc@plt+0x64f0>
  40874a:	mov    r13,QWORD PTR [r15]
  40874d:	mov    ebp,DWORD PTR [r12+0x8]
  408752:	mov    rax,rdi
  408755:	test   ebp,ebp
  408757:	je     408943 <__ctype_b_loc@plt+0x6673>
  40875d:	cmp    ebp,0x3
  408760:	je     408894 <__ctype_b_loc@plt+0x65c4>
  408766:	cmp    ebp,0x4
  408769:	jne    4088d1 <__ctype_b_loc@plt+0x6601>
  40876f:	mov    rcx,QWORD PTR [r12]
  408773:	mov    al,BYTE PTR [r13+0xb]
  408777:	shlx   rax,r8,rax
  40877c:	andn   eax,eax,DWORD PTR [rcx+0xc]
  408782:	cdqe   
  408784:	lea    rax,[rax+rax*4]
  408788:	shl    rax,0x3
  40878c:	add    rax,QWORD PTR [r13+0x20]
  408790:	cmp    DWORD PTR [rax+0x18],0x4
  408794:	jne    4087a0 <__ctype_b_loc@plt+0x64d0>
  408796:	cmp    QWORD PTR [rax+0x10],rcx
  40879a:	je     408943 <__ctype_b_loc@plt+0x6673>
  4087a0:	mov    rax,QWORD PTR [rax+0x20]
  4087a4:	test   rax,rax
  4087a7:	jne    408790 <__ctype_b_loc@plt+0x64c0>
  4087a9:	jmp    408a60 <__ctype_b_loc@plt+0x6790>
  4087ae:	xchg   ax,ax
  4087b0:	mov    rax,QWORD PTR [r15]
  4087b3:	add    rax,0x10
  4087b7:	jmp    4087d1 <__ctype_b_loc@plt+0x6501>
  4087b9:	nop    DWORD PTR [rax+0x0]
  4087c0:	mov    rax,QWORD PTR [r13+0x20]
  4087c4:	movsxd rdx,ecx
  4087c7:	lea    rax,[rax+rdx*8]
  4087cb:	add    rax,0xe0
  4087d1:	mov    rdx,QWORD PTR [rax]
  4087d4:	mov    rbp,rdi
  4087d7:	test   rdx,rdx
  4087da:	je     408828 <__ctype_b_loc@plt+0x6558>
  4087dc:	mov    rax,QWORD PTR [r13+0x20]
  4087e0:	mov    rax,QWORD PTR [rax+0x128]
  4087e7:	mov    sil,BYTE PTR [rdx+0xb]
  4087eb:	shlx   rsi,r8,rsi
  4087f0:	andn   esi,esi,DWORD PTR [rax+0xc]
  4087f6:	movsxd rsi,esi
  4087f9:	lea    rbp,[rsi+rsi*4]
  4087fd:	shl    rbp,0x3
  408801:	add    rbp,QWORD PTR [rdx+0x20]
  408805:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40880f:	nop
  408810:	cmp    DWORD PTR [rbp+0x18],0x4
  408814:	jne    40881c <__ctype_b_loc@plt+0x654c>
  408816:	cmp    QWORD PTR [rbp+0x10],rax
  40881a:	je     408828 <__ctype_b_loc@plt+0x6558>
  40881c:	mov    rbp,QWORD PTR [rbp+0x20]
  408820:	test   rbp,rbp
  408823:	jne    408810 <__ctype_b_loc@plt+0x6540>
  408825:	mov    rbp,rdi
  408828:	lea    rbx,[rbp+0x8]
  40882c:	mov    eax,DWORD PTR [rbp+0x8]
  40882f:	test   eax,eax
  408831:	je     408850 <__ctype_b_loc@plt+0x6580>
  408833:	mov    ecx,eax
  408835:	cmp    ecx,0x6
  408838:	jne    4089de <__ctype_b_loc@plt+0x670e>
  40883e:	jmp    408a72 <__ctype_b_loc@plt+0x67a2>
  408843:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40884d:	nop    DWORD PTR [rax]
  408850:	movsxd rax,ecx
  408853:	lea    rcx,[rip+0x28086]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  40885a:	mov    rcx,QWORD PTR [rcx+rax*8]
  40885e:	xor    eax,eax
  408860:	mov    rdi,r13
  408863:	lea    rsi,[rip+0x225ce]        # 42ae38 <__ctype_b_loc@plt+0x28b68>
  40886a:	lea    rdx,[rip+0x230a4]        # 42b915 <__ctype_b_loc@plt+0x29645>
  408871:	call   404080 <__ctype_b_loc@plt+0x1db0>
  408876:	mov    r8,0xffffffffffffffff
  40887d:	lea    rdi,[rip+0x22294]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  408884:	mov    ecx,DWORD PTR [rbx]
  408886:	cmp    ecx,0x6
  408889:	jne    4089de <__ctype_b_loc@plt+0x670e>
  40888f:	jmp    408a72 <__ctype_b_loc@plt+0x67a2>
  408894:	vmovsd xmm1,QWORD PTR [r12]
  40889a:	vcvttsd2si eax,xmm1
  40889e:	vcvtsi2sd xmm0,xmm2,eax
  4088a2:	vucomisd xmm1,xmm0
  4088a6:	jne    4088d1 <__ctype_b_loc@plt+0x6601>
  4088a8:	jp     4088d1 <__ctype_b_loc@plt+0x6601>
  4088aa:	lea    ecx,[rax-0x1]
  4088ad:	cmp    ecx,DWORD PTR [r13+0x38]
  4088b1:	jae    4089f4 <__ctype_b_loc@plt+0x6724>
  4088b7:	movsxd rax,ecx
  4088ba:	shl    rax,0x4
  4088be:	add    rax,QWORD PTR [r13+0x18]
  4088c2:	cmp    DWORD PTR [rax+0x8],0x0
  4088c6:	je     40894d <__ctype_b_loc@plt+0x667d>
  4088cc:	jmp    408af2 <__ctype_b_loc@plt+0x6822>
  4088d1:	mov    rdi,r13
  4088d4:	mov    rsi,r12
  4088d7:	call   409bf0 <__ctype_b_loc@plt+0x7920>
  4088dc:	lea    rdi,[rip+0x22235]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4088e3:	lea    rdx,[rip+0x218a2]        # 42a18c <__ctype_b_loc@plt+0x27ebc>
  4088ea:	nop    WORD PTR [rax+rax*1+0x0]
  4088f0:	cmp    DWORD PTR [rax+0x18],ebp
  4088f3:	jne    408930 <__ctype_b_loc@plt+0x6660>
  4088f5:	cmp    ebp,0x3
  4088f8:	ja     408910 <__ctype_b_loc@plt+0x6640>
  4088fa:	mov    ecx,ebp
  4088fc:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  408900:	add    rcx,rdx
  408903:	jmp    rcx
  408905:	mov    ecx,DWORD PTR [rax+0x10]
  408908:	cmp    ecx,DWORD PTR [r12]
  40890c:	jne    408930 <__ctype_b_loc@plt+0x6660>
  40890e:	jmp    40893c <__ctype_b_loc@plt+0x666c>
  408910:	mov    rcx,QWORD PTR [rax+0x10]
  408914:	cmp    rcx,QWORD PTR [r12]
  408918:	jne    408930 <__ctype_b_loc@plt+0x6660>
  40891a:	jmp    40893c <__ctype_b_loc@plt+0x666c>
  40891c:	vmovq  xmm0,QWORD PTR [rax+0x10]
  408921:	vucomisd xmm0,QWORD PTR [r12]
  408927:	jne    408930 <__ctype_b_loc@plt+0x6660>
  408929:	jnp    40893c <__ctype_b_loc@plt+0x666c>
  40892b:	nop    DWORD PTR [rax+rax*1+0x0]
  408930:	mov    rax,QWORD PTR [rax+0x20]
  408934:	test   rax,rax
  408937:	jne    4088f0 <__ctype_b_loc@plt+0x6620>
  408939:	mov    rax,rdi
  40893c:	mov    r8,0xffffffffffffffff
  408943:	cmp    DWORD PTR [rax+0x8],0x0
  408947:	jne    408af2 <__ctype_b_loc@plt+0x6822>
  40894d:	mov    rdx,QWORD PTR [r13+0x10]
  408951:	test   rdx,rdx
  408954:	je     408af2 <__ctype_b_loc@plt+0x6822>
  40895a:	mov    bl,BYTE PTR [rdx+0xa]
  40895d:	test   bl,0x1
  408960:	jne    408af2 <__ctype_b_loc@plt+0x6822>
  408966:	mov    rcx,QWORD PTR [rsp+0x10]
  40896b:	mov    rcx,QWORD PTR [rcx+0x20]
  40896f:	mov    rcx,QWORD PTR [rcx+0x128]
  408976:	mov    sil,BYTE PTR [rdx+0xb]
  40897a:	shlx   rsi,r8,rsi
  40897f:	andn   esi,esi,DWORD PTR [rcx+0xc]
  408985:	movsxd rsi,esi
  408988:	lea    rbp,[rsi+rsi*4]
  40898c:	shl    rbp,0x3
  408990:	add    rbp,QWORD PTR [rdx+0x20]
  408994:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40899e:	xchg   ax,ax
  4089a0:	cmp    DWORD PTR [rbp+0x18],0x4
  4089a4:	jne    4089ac <__ctype_b_loc@plt+0x66dc>
  4089a6:	cmp    QWORD PTR [rbp+0x10],rcx
  4089aa:	je     4089b8 <__ctype_b_loc@plt+0x66e8>
  4089ac:	mov    rbp,QWORD PTR [rbp+0x20]
  4089b0:	test   rbp,rbp
  4089b3:	jne    4089a0 <__ctype_b_loc@plt+0x66d0>
  4089b5:	mov    rbp,rdi
  4089b8:	mov    ecx,DWORD PTR [rbp+0x8]
  4089bb:	test   ecx,ecx
  4089bd:	je     408aec <__ctype_b_loc@plt+0x681c>
  4089c3:	test   rbp,rbp
  4089c6:	je     408af2 <__ctype_b_loc@plt+0x6822>
  4089cc:	lea    rbx,[rbp+0x8]
  4089d0:	mov    r13,QWORD PTR [rsp+0x10]
  4089d5:	cmp    ecx,0x6
  4089d8:	je     408a72 <__ctype_b_loc@plt+0x67a2>
  4089de:	add    r14d,0x1
  4089e2:	mov    r15,rbp
  4089e5:	cmp    r14d,0x63
  4089e9:	jbe    408740 <__ctype_b_loc@plt+0x6470>
  4089ef:	jmp    408acd <__ctype_b_loc@plt+0x67fd>
  4089f4:	test   eax,eax
  4089f6:	je     408a30 <__ctype_b_loc@plt+0x6760>
  4089f8:	vmovq  rcx,xmm0
  4089fd:	mov    rax,rcx
  408a00:	shr    rax,0x20
  408a04:	add    eax,ecx
  408a06:	mov    cl,BYTE PTR [r13+0xb]
  408a0a:	shlx   rcx,r8,rcx
  408a0f:	or     rcx,0x1
  408a13:	xor    rcx,0xfffffffffffffffe
  408a17:	xor    edx,edx
  408a19:	div    rcx
  408a1c:	lea    rax,[rdx+rdx*4]
  408a20:	shl    rax,0x3
  408a24:	add    rax,QWORD PTR [r13+0x20]
  408a28:	cmp    DWORD PTR [rax+0x18],0x3
  408a2c:	jne    408a57 <__ctype_b_loc@plt+0x6787>
  408a2e:	jmp    408a46 <__ctype_b_loc@plt+0x6776>
  408a30:	mov    rax,QWORD PTR [r13+0x20]
  408a34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408a3e:	xchg   ax,ax
  408a40:	cmp    DWORD PTR [rax+0x18],0x3
  408a44:	jne    408a57 <__ctype_b_loc@plt+0x6787>
  408a46:	vmovsd xmm1,QWORD PTR [rax+0x10]
  408a4b:	vucomisd xmm1,xmm0
  408a4f:	jne    408a57 <__ctype_b_loc@plt+0x6787>
  408a51:	jnp    408943 <__ctype_b_loc@plt+0x6673>
  408a57:	mov    rax,QWORD PTR [rax+0x20]
  408a5b:	test   rax,rax
  408a5e:	jne    408a40 <__ctype_b_loc@plt+0x6770>
  408a60:	mov    rax,rdi
  408a63:	cmp    DWORD PTR [rax+0x8],0x0
  408a67:	je     40894d <__ctype_b_loc@plt+0x667d>
  408a6d:	jmp    408af2 <__ctype_b_loc@plt+0x6822>
  408a72:	mov    r14,QWORD PTR [rsp+0x8]
  408a77:	sub    r14,QWORD PTR [r13+0x40]
  408a7b:	mov    rax,QWORD PTR [r13+0x10]
  408a7f:	mov    rcx,QWORD PTR [rbp+0x0]
  408a83:	mov    QWORD PTR [rax],rcx
  408a86:	mov    ecx,DWORD PTR [rbx]
  408a88:	mov    DWORD PTR [rax+0x8],ecx
  408a8b:	mov    rax,QWORD PTR [r13+0x10]
  408a8f:	mov    rcx,QWORD PTR [r15]
  408a92:	mov    QWORD PTR [rax+0x10],rcx
  408a96:	mov    ecx,DWORD PTR [r15+0x8]
  408a9a:	mov    DWORD PTR [rax+0x18],ecx
  408a9d:	mov    rax,QWORD PTR [r13+0x10]
  408aa1:	mov    rcx,QWORD PTR [r12]
  408aa5:	mov    QWORD PTR [rax+0x20],rcx
  408aa9:	mov    ecx,DWORD PTR [r12+0x8]
  408aae:	mov    DWORD PTR [rax+0x28],ecx
  408ab1:	mov    rax,QWORD PTR [r13+0x38]
  408ab5:	sub    rax,QWORD PTR [r13+0x10]
  408ab9:	cmp    rax,0x30
  408abd:	jg     408b0f <__ctype_b_loc@plt+0x683f>
  408abf:	mov    esi,DWORD PTR [r13+0x58]
  408ac3:	cmp    esi,0x3
  408ac6:	jge    408b05 <__ctype_b_loc@plt+0x6835>
  408ac8:	add    esi,0x3
  408acb:	jmp    408b07 <__ctype_b_loc@plt+0x6837>
  408acd:	lea    rsi,[rip+0x2240d]        # 42aee1 <__ctype_b_loc@plt+0x28c11>
  408ad4:	xor    eax,eax
  408ad6:	mov    rdi,r13
  408ad9:	add    rsp,0x18
  408add:	pop    rbx
  408ade:	pop    r12
  408ae0:	pop    r13
  408ae2:	pop    r14
  408ae4:	pop    r15
  408ae6:	pop    rbp
  408ae7:	jmp    404080 <__ctype_b_loc@plt+0x1db0>
  408aec:	or     bl,0x1
  408aef:	mov    BYTE PTR [rdx+0xa],bl
  408af2:	mov    rcx,QWORD PTR [rax]
  408af5:	mov    rdx,QWORD PTR [rsp+0x8]
  408afa:	mov    QWORD PTR [rdx],rcx
  408afd:	mov    eax,DWORD PTR [rax+0x8]
  408b00:	mov    DWORD PTR [rdx+0x8],eax
  408b03:	jmp    408b48 <__ctype_b_loc@plt+0x6878>
  408b05:	add    esi,esi
  408b07:	mov    rdi,r13
  408b0a:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  408b0f:	mov    rsi,QWORD PTR [r13+0x10]
  408b13:	lea    rax,[rsi+0x30]
  408b17:	mov    QWORD PTR [r13+0x10],rax
  408b1b:	mov    edx,0x1
  408b20:	mov    rdi,r13
  408b23:	call   404ff0 <__ctype_b_loc@plt+0x2d20>
  408b28:	mov    rax,QWORD PTR [r13+0x10]
  408b2c:	mov    rcx,QWORD PTR [r13+0x40]
  408b30:	lea    rdx,[rax-0x10]
  408b34:	mov    QWORD PTR [r13+0x10],rdx
  408b38:	mov    rdx,QWORD PTR [rax-0x10]
  408b3c:	mov    QWORD PTR [rcx+r14*1],rdx
  408b40:	mov    eax,DWORD PTR [rax-0x8]
  408b43:	mov    DWORD PTR [rcx+r14*1+0x8],eax
  408b48:	add    rsp,0x18
  408b4c:	pop    rbx
  408b4d:	pop    r12
  408b4f:	pop    r13
  408b51:	pop    r14
  408b53:	pop    r15
  408b55:	pop    rbp
  408b56:	ret    
  408b57:	nop    WORD PTR [rax+rax*1+0x0]
  408b60:	push   rbp
  408b61:	push   r15
  408b63:	push   r14
  408b65:	push   r13
  408b67:	push   r12
  408b69:	push   rbx
  408b6a:	sub    rsp,0x28
  408b6e:	mov    QWORD PTR [rsp+0x10],rcx
  408b73:	mov    r8,rdx
  408b76:	mov    r15,rsi
  408b79:	mov    r14,rdi
  408b7c:	mov    ecx,DWORD PTR [rsi+0x8]
  408b7f:	lea    r9,[rip+0x21f92]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  408b86:	lea    r13,[rsp+0x18]
  408b8b:	xor    r12d,r12d
  408b8e:	mov    QWORD PTR [rsp+0x8],rdx
  408b93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408b9d:	nop    DWORD PTR [rax]
  408ba0:	cmp    ecx,0x7
  408ba3:	je     408c20 <__ctype_b_loc@plt+0x6950>
  408ba5:	cmp    ecx,0x5
  408ba8:	jne    408c30 <__ctype_b_loc@plt+0x6960>
  408bae:	mov    rbp,r14
  408bb1:	mov    r13,QWORD PTR [r15]
  408bb4:	mov    r14d,DWORD PTR [r8+0x8]
  408bb8:	test   r14d,r14d
  408bbb:	je     408e20 <__ctype_b_loc@plt+0x6b50>
  408bc1:	cmp    r14d,0x3
  408bc5:	je     408d03 <__ctype_b_loc@plt+0x6a33>
  408bcb:	cmp    r14d,0x4
  408bcf:	jne    408d35 <__ctype_b_loc@plt+0x6a65>
  408bd5:	mov    rcx,QWORD PTR [r8]
  408bd8:	mov    al,BYTE PTR [r13+0xb]
  408bdc:	mov    rdx,0xffffffffffffffff
  408be3:	shlx   rax,rdx,rax
  408be8:	andn   eax,eax,DWORD PTR [rcx+0xc]
  408bee:	cdqe   
  408bf0:	lea    rax,[rax+rax*4]
  408bf4:	shl    rax,0x3
  408bf8:	add    rax,QWORD PTR [r13+0x20]
  408bfc:	nop    DWORD PTR [rax+0x0]
  408c00:	cmp    DWORD PTR [rax+0x18],0x4
  408c04:	jne    408c10 <__ctype_b_loc@plt+0x6940>
  408c06:	cmp    QWORD PTR [rax+0x10],rcx
  408c0a:	je     408e41 <__ctype_b_loc@plt+0x6b71>
  408c10:	mov    rax,QWORD PTR [rax+0x20]
  408c14:	test   rax,rax
  408c17:	jne    408c00 <__ctype_b_loc@plt+0x6930>
  408c19:	jmp    408e20 <__ctype_b_loc@plt+0x6b50>
  408c1e:	xchg   ax,ax
  408c20:	mov    rax,QWORD PTR [r15]
  408c23:	add    rax,0x10
  408c27:	jmp    408c41 <__ctype_b_loc@plt+0x6971>
  408c29:	nop    DWORD PTR [rax+0x0]
  408c30:	mov    rax,QWORD PTR [r14+0x20]
  408c34:	movsxd rdx,ecx
  408c37:	lea    rax,[rax+rdx*8]
  408c3b:	add    rax,0xe0
  408c41:	mov    rdx,QWORD PTR [rax]
  408c44:	mov    rbx,r9
  408c47:	test   rdx,rdx
  408c4a:	je     408c98 <__ctype_b_loc@plt+0x69c8>
  408c4c:	mov    rax,QWORD PTR [r14+0x20]
  408c50:	mov    rax,QWORD PTR [rax+0x130]
  408c57:	mov    sil,BYTE PTR [rdx+0xb]
  408c5b:	mov    rdi,0xffffffffffffffff
  408c62:	shlx   rsi,rdi,rsi
  408c67:	andn   esi,esi,DWORD PTR [rax+0xc]
  408c6d:	movsxd rsi,esi
  408c70:	lea    rbx,[rsi+rsi*4]
  408c74:	shl    rbx,0x3
  408c78:	add    rbx,QWORD PTR [rdx+0x20]
  408c7c:	nop    DWORD PTR [rax+0x0]
  408c80:	cmp    DWORD PTR [rbx+0x18],0x4
  408c84:	jne    408c8c <__ctype_b_loc@plt+0x69bc>
  408c86:	cmp    QWORD PTR [rbx+0x10],rax
  408c8a:	je     408c98 <__ctype_b_loc@plt+0x69c8>
  408c8c:	mov    rbx,QWORD PTR [rbx+0x20]
  408c90:	test   rbx,rbx
  408c93:	jne    408c80 <__ctype_b_loc@plt+0x69b0>
  408c95:	mov    rbx,r9
  408c98:	lea    rbp,[rbx+0x8]
  408c9c:	mov    eax,DWORD PTR [rbx+0x8]
  408c9f:	test   eax,eax
  408ca1:	je     408cc0 <__ctype_b_loc@plt+0x69f0>
  408ca3:	mov    ecx,eax
  408ca5:	cmp    ecx,0x6
  408ca8:	jne    408f2a <__ctype_b_loc@plt+0x6c5a>
  408cae:	jmp    408f5d <__ctype_b_loc@plt+0x6c8d>
  408cb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408cbd:	nop    DWORD PTR [rax]
  408cc0:	movsxd rax,ecx
  408cc3:	lea    rcx,[rip+0x27c16]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  408cca:	mov    rcx,QWORD PTR [rcx+rax*8]
  408cce:	xor    eax,eax
  408cd0:	mov    rdi,r14
  408cd3:	lea    rsi,[rip+0x2215e]        # 42ae38 <__ctype_b_loc@plt+0x28b68>
  408cda:	lea    rdx,[rip+0x22c34]        # 42b915 <__ctype_b_loc@plt+0x29645>
  408ce1:	call   404080 <__ctype_b_loc@plt+0x1db0>
  408ce6:	lea    r9,[rip+0x21e2b]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  408ced:	mov    r8,QWORD PTR [rsp+0x8]
  408cf2:	mov    ecx,DWORD PTR [rbp+0x0]
  408cf5:	cmp    ecx,0x6
  408cf8:	jne    408f2a <__ctype_b_loc@plt+0x6c5a>
  408cfe:	jmp    408f5d <__ctype_b_loc@plt+0x6c8d>
  408d03:	vmovsd xmm1,QWORD PTR [r8]
  408d08:	vcvttsd2si eax,xmm1
  408d0c:	vcvtsi2sd xmm0,xmm2,eax
  408d10:	vucomisd xmm1,xmm0
  408d14:	jne    408d35 <__ctype_b_loc@plt+0x6a65>
  408d16:	jp     408d35 <__ctype_b_loc@plt+0x6a65>
  408d18:	lea    ecx,[rax-0x1]
  408d1b:	cmp    ecx,DWORD PTR [r13+0x38]
  408d1f:	jae    408dab <__ctype_b_loc@plt+0x6adb>
  408d25:	movsxd rax,ecx
  408d28:	shl    rax,0x4
  408d2c:	add    rax,QWORD PTR [r13+0x18]
  408d30:	jmp    408e41 <__ctype_b_loc@plt+0x6b71>
  408d35:	mov    rdi,r13
  408d38:	mov    rsi,r8
  408d3b:	call   409bf0 <__ctype_b_loc@plt+0x7920>
  408d40:	lea    r9,[rip+0x21dd1]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  408d47:	mov    r8,QWORD PTR [rsp+0x8]
  408d4c:	nop    DWORD PTR [rax+0x0]
  408d50:	cmp    DWORD PTR [rax+0x18],r14d
  408d54:	jne    408da0 <__ctype_b_loc@plt+0x6ad0>
  408d56:	cmp    r14d,0x3
  408d5a:	ja     408d80 <__ctype_b_loc@plt+0x6ab0>
  408d5c:	mov    ecx,r14d
  408d5f:	lea    rdx,[rip+0x21436]        # 42a19c <__ctype_b_loc@plt+0x27ecc>
  408d66:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  408d6a:	add    rcx,rdx
  408d6d:	jmp    rcx
  408d6f:	mov    ecx,DWORD PTR [rax+0x10]
  408d72:	cmp    ecx,DWORD PTR [r8]
  408d75:	jne    408da0 <__ctype_b_loc@plt+0x6ad0>
  408d77:	jmp    408e41 <__ctype_b_loc@plt+0x6b71>
  408d7c:	nop    DWORD PTR [rax+0x0]
  408d80:	mov    rcx,QWORD PTR [rax+0x10]
  408d84:	cmp    rcx,QWORD PTR [r8]
  408d87:	jne    408da0 <__ctype_b_loc@plt+0x6ad0>
  408d89:	jmp    408e41 <__ctype_b_loc@plt+0x6b71>
  408d8e:	vmovq  xmm0,QWORD PTR [rax+0x10]
  408d93:	vucomisd xmm0,QWORD PTR [r8]
  408d98:	jne    408da0 <__ctype_b_loc@plt+0x6ad0>
  408d9a:	jnp    408e41 <__ctype_b_loc@plt+0x6b71>
  408da0:	mov    rax,QWORD PTR [rax+0x20]
  408da4:	test   rax,rax
  408da7:	jne    408d50 <__ctype_b_loc@plt+0x6a80>
  408da9:	jmp    408e20 <__ctype_b_loc@plt+0x6b50>
  408dab:	test   eax,eax
  408dad:	je     408dee <__ctype_b_loc@plt+0x6b1e>
  408daf:	vmovq  rcx,xmm0
  408db4:	mov    rax,rcx
  408db7:	shr    rax,0x20
  408dbb:	add    eax,ecx
  408dbd:	mov    cl,BYTE PTR [r13+0xb]
  408dc1:	mov    rdx,0xffffffffffffffff
  408dc8:	shlx   rcx,rdx,rcx
  408dcd:	or     rcx,0x1
  408dd1:	xor    rcx,0xfffffffffffffffe
  408dd5:	xor    edx,edx
  408dd7:	div    rcx
  408dda:	lea    rax,[rdx+rdx*4]
  408dde:	shl    rax,0x3
  408de2:	add    rax,QWORD PTR [r13+0x20]
  408de6:	cmp    DWORD PTR [rax+0x18],0x3
  408dea:	jne    408e13 <__ctype_b_loc@plt+0x6b43>
  408dec:	jmp    408e06 <__ctype_b_loc@plt+0x6b36>
  408dee:	mov    rax,QWORD PTR [r13+0x20]
  408df2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408dfc:	nop    DWORD PTR [rax+0x0]
  408e00:	cmp    DWORD PTR [rax+0x18],0x3
  408e04:	jne    408e13 <__ctype_b_loc@plt+0x6b43>
  408e06:	vmovsd xmm1,QWORD PTR [rax+0x10]
  408e0b:	vucomisd xmm1,xmm0
  408e0f:	jne    408e13 <__ctype_b_loc@plt+0x6b43>
  408e11:	jnp    408e41 <__ctype_b_loc@plt+0x6b71>
  408e13:	mov    rax,QWORD PTR [rax+0x20]
  408e17:	test   rax,rax
  408e1a:	jne    408e00 <__ctype_b_loc@plt+0x6b30>
  408e1c:	nop    DWORD PTR [rax+0x0]
  408e20:	mov    BYTE PTR [r13+0xa],0x0
  408e25:	cmp    r14d,0x3
  408e29:	je     408e4d <__ctype_b_loc@plt+0x6b7d>
  408e2b:	test   r14d,r14d
  408e2e:	mov    rbx,rbp
  408e31:	jne    408e71 <__ctype_b_loc@plt+0x6ba1>
  408e33:	xor    eax,eax
  408e35:	mov    rdi,rbx
  408e38:	lea    rsi,[rip+0x220c4]        # 42af03 <__ctype_b_loc@plt+0x28c33>
  408e3f:	jmp    408e67 <__ctype_b_loc@plt+0x6b97>
  408e41:	mov    BYTE PTR [r13+0xa],0x0
  408e46:	cmp    rax,r9
  408e49:	jne    408e8b <__ctype_b_loc@plt+0x6bbb>
  408e4b:	jmp    408e25 <__ctype_b_loc@plt+0x6b55>
  408e4d:	vmovq  xmm0,QWORD PTR [r8]
  408e52:	vucomisd xmm0,xmm0
  408e56:	mov    rbx,rbp
  408e59:	jnp    408e71 <__ctype_b_loc@plt+0x6ba1>
  408e5b:	xor    eax,eax
  408e5d:	mov    rdi,rbx
  408e60:	lea    rsi,[rip+0x220af]        # 42af16 <__ctype_b_loc@plt+0x28c46>
  408e67:	call   404080 <__ctype_b_loc@plt+0x1db0>
  408e6c:	mov    r8,QWORD PTR [rsp+0x8]
  408e71:	mov    rdi,rbx
  408e74:	mov    rsi,r13
  408e77:	mov    rdx,r8
  408e7a:	call   409ca0 <__ctype_b_loc@plt+0x79d0>
  408e7f:	mov    r8,QWORD PTR [rsp+0x8]
  408e84:	lea    r9,[rip+0x21c8d]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  408e8b:	cmp    DWORD PTR [rax+0x8],0x0
  408e8f:	mov    r14,rbp
  408e92:	jne    408fcb <__ctype_b_loc@plt+0x6cfb>
  408e98:	mov    rdx,QWORD PTR [r13+0x10]
  408e9c:	test   rdx,rdx
  408e9f:	je     408fcb <__ctype_b_loc@plt+0x6cfb>
  408ea5:	mov    sil,BYTE PTR [rdx+0xa]
  408ea9:	test   sil,0x2
  408ead:	jne    408fcb <__ctype_b_loc@plt+0x6cfb>
  408eb3:	mov    rcx,QWORD PTR [r14+0x20]
  408eb7:	mov    rcx,QWORD PTR [rcx+0x130]
  408ebe:	mov    dil,BYTE PTR [rdx+0xb]
  408ec2:	mov    rbp,0xffffffffffffffff
  408ec9:	shlx   rdi,rbp,rdi
  408ece:	andn   edi,edi,DWORD PTR [rcx+0xc]
  408ed4:	movsxd rdi,edi
  408ed7:	lea    rbx,[rdi+rdi*4]
  408edb:	shl    rbx,0x3
  408edf:	add    rbx,QWORD PTR [rdx+0x20]
  408ee3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408eed:	nop    DWORD PTR [rax]
  408ef0:	cmp    DWORD PTR [rbx+0x18],0x4
  408ef4:	jne    408efc <__ctype_b_loc@plt+0x6c2c>
  408ef6:	cmp    QWORD PTR [rbx+0x10],rcx
  408efa:	je     408f08 <__ctype_b_loc@plt+0x6c38>
  408efc:	mov    rbx,QWORD PTR [rbx+0x20]
  408f00:	test   rbx,rbx
  408f03:	jne    408ef0 <__ctype_b_loc@plt+0x6c20>
  408f05:	mov    rbx,r9
  408f08:	mov    ecx,DWORD PTR [rbx+0x8]
  408f0b:	test   ecx,ecx
  408f0d:	je     408fc3 <__ctype_b_loc@plt+0x6cf3>
  408f13:	test   rbx,rbx
  408f16:	je     408fcb <__ctype_b_loc@plt+0x6cfb>
  408f1c:	lea    rbp,[rbx+0x8]
  408f20:	lea    r13,[rsp+0x18]
  408f25:	cmp    ecx,0x6
  408f28:	je     408f5d <__ctype_b_loc@plt+0x6c8d>
  408f2a:	mov    rax,QWORD PTR [rbx]
  408f2d:	mov    QWORD PTR [rsp+0x18],rax
  408f32:	mov    DWORD PTR [rsp+0x20],ecx
  408f36:	add    r12d,0x1
  408f3a:	mov    r15,r13
  408f3d:	cmp    r12d,0x64
  408f41:	jb     408ba0 <__ctype_b_loc@plt+0x68d0>
  408f47:	lea    rsi,[rip+0x21fa4]        # 42aef2 <__ctype_b_loc@plt+0x28c22>
  408f4e:	xor    eax,eax
  408f50:	mov    rdi,r14
  408f53:	call   404080 <__ctype_b_loc@plt+0x1db0>
  408f58:	jmp    409030 <__ctype_b_loc@plt+0x6d60>
  408f5d:	mov    rax,QWORD PTR [r14+0x10]
  408f61:	mov    rcx,QWORD PTR [rbx]
  408f64:	mov    QWORD PTR [rax],rcx
  408f67:	mov    ecx,DWORD PTR [rbp+0x0]
  408f6a:	mov    DWORD PTR [rax+0x8],ecx
  408f6d:	mov    rax,QWORD PTR [r14+0x10]
  408f71:	mov    rcx,QWORD PTR [r15]
  408f74:	mov    QWORD PTR [rax+0x10],rcx
  408f78:	mov    ecx,DWORD PTR [r15+0x8]
  408f7c:	mov    DWORD PTR [rax+0x18],ecx
  408f7f:	mov    rax,QWORD PTR [r14+0x10]
  408f83:	mov    rcx,QWORD PTR [r8]
  408f86:	mov    QWORD PTR [rax+0x20],rcx
  408f8a:	mov    ecx,DWORD PTR [r8+0x8]
  408f8e:	mov    DWORD PTR [rax+0x28],ecx
  408f91:	mov    rax,QWORD PTR [r14+0x10]
  408f95:	mov    rdx,QWORD PTR [rsp+0x10]
  408f9a:	mov    rcx,QWORD PTR [rdx]
  408f9d:	mov    QWORD PTR [rax+0x30],rcx
  408fa1:	mov    ecx,DWORD PTR [rdx+0x8]
  408fa4:	mov    DWORD PTR [rax+0x38],ecx
  408fa7:	mov    rax,QWORD PTR [r14+0x38]
  408fab:	sub    rax,QWORD PTR [r14+0x10]
  408faf:	cmp    rax,0x40
  408fb3:	jg     40901a <__ctype_b_loc@plt+0x6d4a>
  408fb5:	mov    esi,DWORD PTR [r14+0x58]
  408fb9:	cmp    esi,0x4
  408fbc:	jge    409010 <__ctype_b_loc@plt+0x6d40>
  408fbe:	add    esi,0x4
  408fc1:	jmp    409012 <__ctype_b_loc@plt+0x6d42>
  408fc3:	or     sil,0x2
  408fc7:	mov    BYTE PTR [rdx+0xa],sil
  408fcb:	mov    rdx,QWORD PTR [rsp+0x10]
  408fd0:	mov    rcx,QWORD PTR [rdx]
  408fd3:	mov    QWORD PTR [rax],rcx
  408fd6:	mov    ecx,DWORD PTR [rdx+0x8]
  408fd9:	mov    DWORD PTR [rax+0x8],ecx
  408fdc:	mov    BYTE PTR [r13+0xa],0x0
  408fe1:	cmp    DWORD PTR [rdx+0x8],0x4
  408fe5:	jl     409030 <__ctype_b_loc@plt+0x6d60>
  408fe7:	mov    rax,QWORD PTR [rdx]
  408fea:	test   BYTE PTR [rax+0x9],0x3
  408fee:	je     409030 <__ctype_b_loc@plt+0x6d60>
  408ff0:	mov    al,BYTE PTR [r13+0x9]
  408ff4:	test   al,0x4
  408ff6:	je     409030 <__ctype_b_loc@plt+0x6d60>
  408ff8:	mov    rcx,QWORD PTR [r14+0x20]
  408ffc:	and    al,0xfb
  408ffe:	mov    BYTE PTR [r13+0x9],al
  409002:	mov    rax,QWORD PTR [rcx+0x40]
  409006:	mov    QWORD PTR [r13+0x30],rax
  40900a:	mov    QWORD PTR [rcx+0x40],r13
  40900e:	jmp    409030 <__ctype_b_loc@plt+0x6d60>
  409010:	add    esi,esi
  409012:	mov    rdi,r14
  409015:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  40901a:	mov    rsi,QWORD PTR [r14+0x10]
  40901e:	lea    rax,[rsi+0x40]
  409022:	mov    QWORD PTR [r14+0x10],rax
  409026:	xor    edx,edx
  409028:	mov    rdi,r14
  40902b:	call   404ff0 <__ctype_b_loc@plt+0x2d20>
  409030:	add    rsp,0x28
  409034:	pop    rbx
  409035:	pop    r12
  409037:	pop    r13
  409039:	pop    r14
  40903b:	pop    r15
  40903d:	pop    rbp
  40903e:	ret    
  40903f:	nop
  409040:	push   rbp
  409041:	push   r15
  409043:	push   r14
  409045:	push   r13
  409047:	push   r12
  409049:	push   rbx
  40904a:	sub    rsp,0x68
  40904e:	mov    r12,rcx
  409051:	mov    r15,rdx
  409054:	mov    rbx,rsi
  409057:	mov    r14,rdi
  40905a:	mov    eax,DWORD PTR [rdx+0x8]
  40905d:	mov    r13,rdx
  409060:	cmp    eax,0x3
  409063:	je     40914a <__ctype_b_loc@plt+0x6e7a>
  409069:	cmp    eax,0x4
  40906c:	jne    40923a <__ctype_b_loc@plt+0x6f6a>
  409072:	mov    QWORD PTR [rsp+0x8],r8
  409077:	mov    QWORD PTR [rsp+0x20],rbx
  40907c:	mov    rbp,QWORD PTR [r15]
  40907f:	add    rbp,0x18
  409083:	lea    rsi,[rsp+0x10]
  409088:	mov    rdi,rbp
  40908b:	call   4020b0 <strtod@plt>
  409090:	mov    rbx,QWORD PTR [rsp+0x10]
  409095:	cmp    rbx,rbp
  409098:	je     40922c <__ctype_b_loc@plt+0x6f5c>
  40909e:	mov    r13b,BYTE PTR [rbx]
  4090a1:	mov    eax,r13d
  4090a4:	or     al,0x20
  4090a6:	cmp    al,0x78
  4090a8:	jne    4090dd <__ctype_b_loc@plt+0x6e0d>
  4090aa:	lea    rsi,[rsp+0x10]
  4090af:	mov    edx,0x10
  4090b4:	mov    rdi,rbp
  4090b7:	call   402250 <strtoul@plt>
  4090bc:	vmovq  xmm0,rax
  4090c1:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x21ba7]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  4090c9:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x21baf]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  4090d1:	vhaddpd xmm0,xmm0,xmm0
  4090d5:	mov    rbx,QWORD PTR [rsp+0x10]
  4090da:	mov    r13b,BYTE PTR [rbx]
  4090dd:	test   r13b,r13b
  4090e0:	je     40912d <__ctype_b_loc@plt+0x6e5d>
  4090e2:	vmovapd XMMWORD PTR [rsp+0x30],xmm0
  4090e8:	call   4022d0 <__ctype_b_loc@plt>
  4090ed:	mov    rax,QWORD PTR [rax]
  4090f0:	movzx  ecx,r13b
  4090f4:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4090f9:	je     40922c <__ctype_b_loc@plt+0x6f5c>
  4090ff:	add    rbx,0x1
  409103:	mov    r8,QWORD PTR [rsp+0x8]
  409108:	vmovapd xmm0,XMMWORD PTR [rsp+0x30]
  40910e:	xchg   ax,ax
  409110:	movzx  ecx,BYTE PTR [rbx]
  409113:	add    rbx,0x1
  409117:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40911c:	jne    409110 <__ctype_b_loc@plt+0x6e40>
  40911e:	test   cl,cl
  409120:	mov    rbx,QWORD PTR [rsp+0x20]
  409125:	jne    409236 <__ctype_b_loc@plt+0x6f66>
  40912b:	jmp    409137 <__ctype_b_loc@plt+0x6e67>
  40912d:	mov    rbx,QWORD PTR [rsp+0x20]
  409132:	mov    r8,QWORD PTR [rsp+0x8]
  409137:	vmovsd QWORD PTR [rsp+0x40],xmm0
  40913d:	mov    DWORD PTR [rsp+0x48],0x3
  409145:	lea    r13,[rsp+0x40]
  40914a:	mov    eax,DWORD PTR [r12+0x8]
  40914f:	cmp    eax,0x4
  409152:	je     409190 <__ctype_b_loc@plt+0x6ec0>
  409154:	cmp    eax,0x3
  409157:	jne    409236 <__ctype_b_loc@plt+0x6f66>
  40915d:	vmovsd xmm2,QWORD PTR [r12]
  409163:	add    r8d,0xfffffffb
  409167:	cmp    r8d,0x6
  40916b:	ja     4095ba <__ctype_b_loc@plt+0x72ea>
  409171:	vmovsd xmm0,QWORD PTR [r13+0x0]
  409177:	lea    rax,[rip+0x2102e]        # 42a1ac <__ctype_b_loc@plt+0x27edc>
  40917e:	movsxd rcx,DWORD PTR [rax+r8*4]
  409182:	add    rcx,rax
  409185:	jmp    rcx
  409187:	vaddsd xmm0,xmm0,xmm2
  40918b:	jmp    4095af <__ctype_b_loc@plt+0x72df>
  409190:	mov    QWORD PTR [rsp+0x8],r8
  409195:	mov    QWORD PTR [rsp+0x20],rbx
  40919a:	mov    rbp,QWORD PTR [r12]
  40919e:	add    rbp,0x18
  4091a2:	lea    rsi,[rsp+0x10]
  4091a7:	mov    rdi,rbp
  4091aa:	call   4020b0 <strtod@plt>
  4091af:	mov    rbx,QWORD PTR [rsp+0x10]
  4091b4:	cmp    rbx,rbp
  4091b7:	je     40922c <__ctype_b_loc@plt+0x6f5c>
  4091b9:	mov    QWORD PTR [rsp+0x30],r12
  4091be:	mov    r12b,BYTE PTR [rbx]
  4091c1:	mov    eax,r12d
  4091c4:	or     al,0x20
  4091c6:	cmp    al,0x78
  4091c8:	jne    40951d <__ctype_b_loc@plt+0x724d>
  4091ce:	lea    rsi,[rsp+0x10]
  4091d3:	mov    edx,0x10
  4091d8:	mov    rdi,rbp
  4091db:	call   402250 <strtoul@plt>
  4091e0:	vmovq  xmm0,rax
  4091e5:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x21a83]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  4091ed:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x21a8b]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  4091f5:	vhaddpd xmm2,xmm0,xmm0
  4091f9:	mov    rbx,QWORD PTR [rsp+0x10]
  4091fe:	mov    r12b,BYTE PTR [rbx]
  409201:	test   r12b,r12b
  409204:	je     40952a <__ctype_b_loc@plt+0x725a>
  40920a:	vmovapd XMMWORD PTR [rsp+0x50],xmm2
  409210:	call   4022d0 <__ctype_b_loc@plt>
  409215:	mov    rax,QWORD PTR [rax]
  409218:	movzx  ecx,r12b
  40921c:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  409221:	jne    409549 <__ctype_b_loc@plt+0x7279>
  409227:	mov    r12,QWORD PTR [rsp+0x30]
  40922c:	mov    rbx,QWORD PTR [rsp+0x20]
  409231:	mov    r8,QWORD PTR [rsp+0x8]
  409236:	mov    eax,DWORD PTR [r15+0x8]
  40923a:	cmp    eax,0x7
  40923d:	je     409244 <__ctype_b_loc@plt+0x6f74>
  40923f:	cmp    eax,0x5
  409242:	jne    40924d <__ctype_b_loc@plt+0x6f7d>
  409244:	mov    rcx,QWORD PTR [r15]
  409247:	add    rcx,0x10
  40924b:	jmp    40925f <__ctype_b_loc@plt+0x6f8f>
  40924d:	mov    rcx,QWORD PTR [r14+0x20]
  409251:	movsxd rdx,eax
  409254:	lea    rcx,[rcx+rdx*8]
  409258:	add    rcx,0xe0
  40925f:	mov    rdi,QWORD PTR [rcx]
  409262:	lea    rcx,[rip+0x218af]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  409269:	test   rdi,rdi
  40926c:	je     4092c5 <__ctype_b_loc@plt+0x6ff5>
  40926e:	mov    rdx,QWORD PTR [r14+0x20]
  409272:	mov    esi,r8d
  409275:	mov    rdx,QWORD PTR [rdx+rsi*8+0x128]
  40927d:	mov    sil,BYTE PTR [rdi+0xb]
  409281:	mov    rbp,0xffffffffffffffff
  409288:	shlx   rsi,rbp,rsi
  40928d:	andn   esi,esi,DWORD PTR [rdx+0xc]
  409293:	movsxd rsi,esi
  409296:	lea    rsi,[rsi+rsi*4]
  40929a:	shl    rsi,0x3
  40929e:	add    rsi,QWORD PTR [rdi+0x20]
  4092a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4092ac:	nop    DWORD PTR [rax+0x0]
  4092b0:	cmp    DWORD PTR [rsi+0x18],0x4
  4092b4:	jne    4092bc <__ctype_b_loc@plt+0x6fec>
  4092b6:	cmp    QWORD PTR [rsi+0x10],rdx
  4092ba:	je     40932b <__ctype_b_loc@plt+0x705b>
  4092bc:	mov    rsi,QWORD PTR [rsi+0x20]
  4092c0:	test   rsi,rsi
  4092c3:	jne    4092b0 <__ctype_b_loc@plt+0x6fe0>
  4092c5:	cmp    DWORD PTR [rcx+0x8],0x0
  4092c9:	je     409334 <__ctype_b_loc@plt+0x7064>
  4092cb:	cmp    DWORD PTR [rcx+0x8],0x0
  4092cf:	je     409417 <__ctype_b_loc@plt+0x7147>
  4092d5:	sub    rbx,QWORD PTR [r14+0x40]
  4092d9:	mov    rax,QWORD PTR [r14+0x10]
  4092dd:	mov    rdx,QWORD PTR [rcx]
  4092e0:	mov    QWORD PTR [rax],rdx
  4092e3:	mov    ecx,DWORD PTR [rcx+0x8]
  4092e6:	mov    DWORD PTR [rax+0x8],ecx
  4092e9:	mov    rax,QWORD PTR [r14+0x10]
  4092ed:	mov    rcx,QWORD PTR [r15]
  4092f0:	mov    QWORD PTR [rax+0x10],rcx
  4092f4:	mov    ecx,DWORD PTR [r15+0x8]
  4092f8:	mov    DWORD PTR [rax+0x18],ecx
  4092fb:	mov    rax,QWORD PTR [r14+0x10]
  4092ff:	mov    rcx,QWORD PTR [r12]
  409303:	mov    QWORD PTR [rax+0x20],rcx
  409307:	mov    ecx,DWORD PTR [r12+0x8]
  40930c:	mov    DWORD PTR [rax+0x28],ecx
  40930f:	mov    rax,QWORD PTR [r14+0x38]
  409313:	sub    rax,QWORD PTR [r14+0x10]
  409317:	cmp    rax,0x30
  40931b:	jg     409358 <__ctype_b_loc@plt+0x7088>
  40931d:	mov    esi,DWORD PTR [r14+0x58]
  409321:	cmp    esi,0x3
  409324:	jge    40934e <__ctype_b_loc@plt+0x707e>
  409326:	add    esi,0x3
  409329:	jmp    409350 <__ctype_b_loc@plt+0x7080>
  40932b:	mov    rcx,rsi
  40932e:	cmp    DWORD PTR [rcx+0x8],0x0
  409332:	jne    4092cb <__ctype_b_loc@plt+0x6ffb>
  409334:	movsxd rcx,DWORD PTR [r12+0x8]
  409339:	cmp    rcx,0x7
  40933d:	je     409344 <__ctype_b_loc@plt+0x7074>
  40933f:	cmp    ecx,0x5
  409342:	jne    409395 <__ctype_b_loc@plt+0x70c5>
  409344:	mov    rcx,QWORD PTR [r12]
  409348:	add    rcx,0x10
  40934c:	jmp    4093a4 <__ctype_b_loc@plt+0x70d4>
  40934e:	add    esi,esi
  409350:	mov    rdi,r14
  409353:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  409358:	mov    rsi,QWORD PTR [r14+0x10]
  40935c:	lea    rax,[rsi+0x30]
  409360:	mov    QWORD PTR [r14+0x10],rax
  409364:	mov    edx,0x1
  409369:	mov    rdi,r14
  40936c:	call   404ff0 <__ctype_b_loc@plt+0x2d20>
  409371:	mov    rax,QWORD PTR [r14+0x10]
  409375:	mov    rcx,QWORD PTR [r14+0x40]
  409379:	lea    rdx,[rax-0x10]
  40937d:	mov    QWORD PTR [r14+0x10],rdx
  409381:	mov    rdx,QWORD PTR [rax-0x10]
  409385:	mov    QWORD PTR [rcx+rbx*1],rdx
  409389:	mov    eax,DWORD PTR [rax-0x8]
  40938c:	mov    DWORD PTR [rcx+rbx*1+0x8],eax
  409390:	jmp    4095ba <__ctype_b_loc@plt+0x72ea>
  409395:	mov    rdx,QWORD PTR [r14+0x20]
  409399:	lea    rcx,[rdx+rcx*8]
  40939d:	add    rcx,0xe0
  4093a4:	mov    rdi,QWORD PTR [rcx]
  4093a7:	lea    rcx,[rip+0x2176a]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4093ae:	test   rdi,rdi
  4093b1:	je     4092cb <__ctype_b_loc@plt+0x6ffb>
  4093b7:	mov    rdx,QWORD PTR [r14+0x20]
  4093bb:	mov    esi,r8d
  4093be:	mov    rdx,QWORD PTR [rdx+rsi*8+0x128]
  4093c6:	mov    sil,BYTE PTR [rdi+0xb]
  4093ca:	mov    rbp,0xffffffffffffffff
  4093d1:	shlx   rsi,rbp,rsi
  4093d6:	andn   esi,esi,DWORD PTR [rdx+0xc]
  4093dc:	movsxd rsi,esi
  4093df:	lea    rsi,[rsi+rsi*4]
  4093e3:	shl    rsi,0x3
  4093e7:	add    rsi,QWORD PTR [rdi+0x20]
  4093eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4093f0:	cmp    DWORD PTR [rsi+0x18],0x4
  4093f4:	jne    4093fc <__ctype_b_loc@plt+0x712c>
  4093f6:	cmp    QWORD PTR [rsi+0x10],rdx
  4093fa:	je     40940a <__ctype_b_loc@plt+0x713a>
  4093fc:	mov    rsi,QWORD PTR [rsi+0x20]
  409400:	test   rsi,rsi
  409403:	jne    4093f0 <__ctype_b_loc@plt+0x7120>
  409405:	jmp    4092cb <__ctype_b_loc@plt+0x6ffb>
  40940a:	mov    rcx,rsi
  40940d:	cmp    DWORD PTR [rcx+0x8],0x0
  409411:	jne    4092d5 <__ctype_b_loc@plt+0x7005>
  409417:	mov    QWORD PTR [rsp+0x30],r12
  40941c:	mov    r12,r15
  40941f:	cmp    eax,0x3
  409422:	je     4094e5 <__ctype_b_loc@plt+0x7215>
  409428:	cmp    eax,0x4
  40942b:	jne    4094e2 <__ctype_b_loc@plt+0x7212>
  409431:	mov    rbp,QWORD PTR [r15]
  409434:	add    rbp,0x18
  409438:	lea    r12,[rsp+0x10]
  40943d:	mov    rdi,rbp
  409440:	mov    rsi,r12
  409443:	call   4020b0 <strtod@plt>
  409448:	mov    rbx,QWORD PTR [rsp+0x10]
  40944d:	cmp    rbx,rbp
  409450:	je     4094e2 <__ctype_b_loc@plt+0x7212>
  409456:	mov    r13b,BYTE PTR [rbx]
  409459:	mov    eax,r13d
  40945c:	or     al,0x20
  40945e:	cmp    al,0x78
  409460:	jne    409495 <__ctype_b_loc@plt+0x71c5>
  409462:	lea    rsi,[rsp+0x10]
  409467:	mov    edx,0x10
  40946c:	mov    rdi,rbp
  40946f:	call   402250 <strtoul@plt>
  409474:	vmovq  xmm0,rax
  409479:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x217ef]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  409481:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x217f7]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  409489:	vhaddpd xmm0,xmm0,xmm0
  40948d:	mov    rbx,QWORD PTR [rsp+0x10]
  409492:	mov    r13b,BYTE PTR [rbx]
  409495:	test   r13b,r13b
  409498:	je     409539 <__ctype_b_loc@plt+0x7269>
  40949e:	vmovapd XMMWORD PTR [rsp+0x20],xmm0
  4094a4:	call   4022d0 <__ctype_b_loc@plt>
  4094a9:	mov    rax,QWORD PTR [rax]
  4094ac:	movzx  ecx,r13b
  4094b0:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4094b5:	je     4094e2 <__ctype_b_loc@plt+0x7212>
  4094b7:	add    rbx,0x1
  4094bb:	vmovapd xmm0,XMMWORD PTR [rsp+0x20]
  4094c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4094cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4094d0:	movzx  ecx,BYTE PTR [rbx]
  4094d3:	add    rbx,0x1
  4094d7:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4094dc:	jne    4094d0 <__ctype_b_loc@plt+0x7200>
  4094de:	test   cl,cl
  4094e0:	je     409539 <__ctype_b_loc@plt+0x7269>
  4094e2:	xor    r12d,r12d
  4094e5:	test   r12,r12
  4094e8:	mov    rax,QWORD PTR [rsp+0x30]
  4094ed:	cmove  rax,r15
  4094f1:	movsxd rax,DWORD PTR [rax+0x8]
  4094f5:	lea    rcx,[rip+0x273e4]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  4094fc:	mov    rcx,QWORD PTR [rcx+rax*8]
  409500:	lea    rsi,[rip+0x21931]        # 42ae38 <__ctype_b_loc@plt+0x28b68>
  409507:	lea    rdx,[rip+0x21a1b]        # 42af29 <__ctype_b_loc@plt+0x28c59>
  40950e:	xor    eax,eax
  409510:	mov    rdi,r14
  409513:	call   404080 <__ctype_b_loc@plt+0x1db0>
  409518:	jmp    4095ba <__ctype_b_loc@plt+0x72ea>
  40951d:	vmovapd xmm2,xmm0
  409521:	test   r12b,r12b
  409524:	jne    40920a <__ctype_b_loc@plt+0x6f3a>
  40952a:	mov    rbx,QWORD PTR [rsp+0x20]
  40952f:	mov    r8,QWORD PTR [rsp+0x8]
  409534:	jmp    409163 <__ctype_b_loc@plt+0x6e93>
  409539:	vmovsd QWORD PTR [rsp+0x10],xmm0
  40953f:	mov    DWORD PTR [rsp+0x18],0x3
  409547:	jmp    4094e5 <__ctype_b_loc@plt+0x7215>
  409549:	add    rbx,0x1
  40954d:	mov    r12,QWORD PTR [rsp+0x30]
  409552:	mov    r8,QWORD PTR [rsp+0x8]
  409557:	vmovapd xmm2,XMMWORD PTR [rsp+0x50]
  40955d:	nop    DWORD PTR [rax]
  409560:	movzx  ecx,BYTE PTR [rbx]
  409563:	add    rbx,0x1
  409567:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40956c:	jne    409560 <__ctype_b_loc@plt+0x7290>
  40956e:	test   cl,cl
  409570:	mov    rbx,QWORD PTR [rsp+0x20]
  409575:	jne    409236 <__ctype_b_loc@plt+0x6f66>
  40957b:	jmp    409163 <__ctype_b_loc@plt+0x6e93>
  409580:	vsubsd xmm0,xmm0,xmm2
  409584:	jmp    4095af <__ctype_b_loc@plt+0x72df>
  409586:	vmulsd xmm0,xmm0,xmm2
  40958a:	jmp    4095af <__ctype_b_loc@plt+0x72df>
  40958c:	vdivsd xmm0,xmm0,xmm2
  409590:	jmp    4095af <__ctype_b_loc@plt+0x72df>
  409592:	vdivsd xmm1,xmm0,xmm2
  409596:	vroundsd xmm1,xmm1,xmm1,0x9
  40959c:	vmulsd xmm1,xmm2,xmm1
  4095a0:	vsubsd xmm0,xmm0,xmm1
  4095a4:	jmp    4095af <__ctype_b_loc@plt+0x72df>
  4095a6:	vmovapd xmm1,xmm2
  4095aa:	call   4020c0 <pow@plt>
  4095af:	vmovsd QWORD PTR [rbx],xmm0
  4095b3:	mov    DWORD PTR [rbx+0x8],0x3
  4095ba:	add    rsp,0x68
  4095be:	pop    rbx
  4095bf:	pop    r12
  4095c1:	pop    r13
  4095c3:	pop    r14
  4095c5:	pop    r15
  4095c7:	pop    rbp
  4095c8:	ret    
  4095c9:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x216bf]        # 42ac90 <__ctype_b_loc@plt+0x289c0>
  4095d1:	vmovlpd QWORD PTR [rbx],xmm0
  4095d5:	jmp    4095b3 <__ctype_b_loc@plt+0x72e3>
  4095d7:	nop    WORD PTR [rax+rax*1+0x0]
  4095e0:	push   r14
  4095e2:	push   rbx
  4095e3:	mov    r9d,DWORD PTR [rdi+0x38]
  4095e7:	test   r9d,r9d
  4095ea:	je     409603 <__ctype_b_loc@plt+0x7333>
  4095ec:	mov    rax,QWORD PTR [rdi+0x18]
  4095f0:	lea    ecx,[r9-0x1]
  4095f4:	shl    rcx,0x4
  4095f8:	cmp    DWORD PTR [rax+rcx*1+0x8],0x0
  4095fd:	je     409779 <__ctype_b_loc@plt+0x74a9>
  409603:	mov    r8,QWORD PTR [rdi+0x20]
  409607:	lea    rax,[rip+0x2151a]        # 42ab28 <__ctype_b_loc@plt+0x28858>
  40960e:	cmp    r8,rax
  409611:	je     409771 <__ctype_b_loc@plt+0x74a1>
  409617:	lea    eax,[r9+0x1]
  40961b:	lea    r10,[rip+0x214f6]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  409622:	mov    r11,0xffffffffffffffff
  409629:	mov    esi,r9d
  40962c:	nop    DWORD PTR [rax+0x0]
  409630:	mov    ecx,eax
  409632:	lea    eax,[rcx-0x1]
  409635:	cmp    eax,r9d
  409638:	jae    409650 <__ctype_b_loc@plt+0x7380>
  40963a:	cdqe   
  40963c:	shl    rax,0x4
  409640:	add    rax,QWORD PTR [rdi+0x18]
  409644:	cmp    DWORD PTR [rax+0x8],0x0
  409648:	jne    4096b9 <__ctype_b_loc@plt+0x73e9>
  40964a:	jmp    4097ba <__ctype_b_loc@plt+0x74ea>
  40964f:	nop
  409650:	vcvtsi2sd xmm0,xmm2,ecx
  409654:	mov    rax,r8
  409657:	test   ecx,ecx
  409659:	je     409690 <__ctype_b_loc@plt+0x73c0>
  40965b:	vmovq  rdx,xmm0
  409660:	mov    rax,rdx
  409663:	shr    rax,0x20
  409667:	add    eax,edx
  409669:	mov    dl,BYTE PTR [rdi+0xb]
  40966c:	shlx   rbx,r11,rdx
  409671:	or     rbx,0x1
  409675:	xor    rbx,0xfffffffffffffffe
  409679:	xor    edx,edx
  40967b:	div    rbx
  40967e:	lea    rax,[rdx+rdx*4]
  409682:	lea    rax,[r8+rax*8]
  409686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409690:	cmp    DWORD PTR [rax+0x18],0x3
  409694:	jne    4096a3 <__ctype_b_loc@plt+0x73d3>
  409696:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40969b:	vucomisd xmm1,xmm0
  40969f:	jne    4096a3 <__ctype_b_loc@plt+0x73d3>
  4096a1:	jnp    4096af <__ctype_b_loc@plt+0x73df>
  4096a3:	mov    rax,QWORD PTR [rax+0x20]
  4096a7:	test   rax,rax
  4096aa:	jne    409690 <__ctype_b_loc@plt+0x73c0>
  4096ac:	mov    rax,r10
  4096af:	cmp    DWORD PTR [rax+0x8],0x0
  4096b3:	je     4097ba <__ctype_b_loc@plt+0x74ea>
  4096b9:	lea    eax,[rcx+rcx*1]
  4096bc:	mov    esi,ecx
  4096be:	cmp    eax,0x7ffffffe
  4096c3:	jb     409630 <__ctype_b_loc@plt+0x7360>
  4096c9:	mov    ecx,0x1
  4096ce:	lea    r10,[rip+0x21443]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4096d5:	mov    r11,0xffffffffffffffff
  4096dc:	nop    DWORD PTR [rax+0x0]
  4096e0:	lea    esi,[rcx-0x1]
  4096e3:	cmp    esi,r9d
  4096e6:	jae    409700 <__ctype_b_loc@plt+0x7430>
  4096e8:	movsxd rax,esi
  4096eb:	shl    rax,0x4
  4096ef:	add    rax,QWORD PTR [rdi+0x18]
  4096f3:	jmp    40975f <__ctype_b_loc@plt+0x748f>
  4096f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4096ff:	nop
  409700:	vcvtsi2sd xmm0,xmm2,ecx
  409704:	mov    rax,r8
  409707:	test   ecx,ecx
  409709:	je     409740 <__ctype_b_loc@plt+0x7470>
  40970b:	vmovq  rdx,xmm0
  409710:	mov    rax,rdx
  409713:	shr    rax,0x20
  409717:	add    eax,edx
  409719:	mov    dl,BYTE PTR [rdi+0xb]
  40971c:	shlx   rbx,r11,rdx
  409721:	or     rbx,0x1
  409725:	xor    rbx,0xfffffffffffffffe
  409729:	xor    edx,edx
  40972b:	div    rbx
  40972e:	lea    rax,[rdx+rdx*4]
  409732:	lea    rax,[r8+rax*8]
  409736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409740:	cmp    DWORD PTR [rax+0x18],0x3
  409744:	jne    409753 <__ctype_b_loc@plt+0x7483>
  409746:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40974b:	vucomisd xmm1,xmm0
  40974f:	jne    409753 <__ctype_b_loc@plt+0x7483>
  409751:	jnp    40975f <__ctype_b_loc@plt+0x748f>
  409753:	mov    rax,QWORD PTR [rax+0x20]
  409757:	test   rax,rax
  40975a:	jne    409740 <__ctype_b_loc@plt+0x7470>
  40975c:	mov    rax,r10
  40975f:	add    ecx,0x1
  409762:	cmp    DWORD PTR [rax+0x8],0x0
  409766:	jne    4096e0 <__ctype_b_loc@plt+0x7410>
  40976c:	jmp    409876 <__ctype_b_loc@plt+0x75a6>
  409771:	mov    esi,r9d
  409774:	jmp    409876 <__ctype_b_loc@plt+0x75a6>
  409779:	xor    esi,esi
  40977b:	cmp    r9d,0x2
  40977f:	jb     409876 <__ctype_b_loc@plt+0x75a6>
  409785:	xor    ecx,ecx
  409787:	nop    WORD PTR [rax+rax*1+0x0]
  409790:	lea    esi,[rcx+r9*1]
  409794:	shr    esi,1
  409796:	lea    edx,[rsi-0x1]
  409799:	shl    rdx,0x4
  40979d:	cmp    DWORD PTR [rax+rdx*1+0x8],0x0
  4097a2:	jne    4097a9 <__ctype_b_loc@plt+0x74d9>
  4097a4:	mov    r9d,esi
  4097a7:	mov    esi,ecx
  4097a9:	mov    edx,r9d
  4097ac:	sub    edx,esi
  4097ae:	mov    ecx,esi
  4097b0:	cmp    edx,0x1
  4097b3:	ja     409790 <__ctype_b_loc@plt+0x74c0>
  4097b5:	jmp    409876 <__ctype_b_loc@plt+0x75a6>
  4097ba:	mov    eax,ecx
  4097bc:	sub    eax,esi
  4097be:	cmp    eax,0x2
  4097c1:	jb     409876 <__ctype_b_loc@plt+0x75a6>
  4097c7:	lea    r10,[rip+0x2134a]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4097ce:	mov    r11,0xffffffffffffffff
  4097d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4097df:	nop
  4097e0:	lea    ebx,[rcx+rsi*1]
  4097e3:	shr    ebx,1
  4097e5:	lea    eax,[rbx-0x1]
  4097e8:	cmp    eax,r9d
  4097eb:	jae    409800 <__ctype_b_loc@plt+0x7530>
  4097ed:	cdqe   
  4097ef:	shl    rax,0x4
  4097f3:	add    rax,QWORD PTR [rdi+0x18]
  4097f7:	jmp    40985f <__ctype_b_loc@plt+0x758f>
  4097f9:	nop    DWORD PTR [rax+0x0]
  409800:	vcvtsi2sd xmm0,xmm2,ebx
  409804:	mov    rax,r8
  409807:	test   ebx,ebx
  409809:	je     409840 <__ctype_b_loc@plt+0x7570>
  40980b:	vmovq  rdx,xmm0
  409810:	mov    rax,rdx
  409813:	shr    rax,0x20
  409817:	add    eax,edx
  409819:	mov    dl,BYTE PTR [rdi+0xb]
  40981c:	shlx   r14,r11,rdx
  409821:	or     r14,0x1
  409825:	xor    r14,0xfffffffffffffffe
  409829:	xor    edx,edx
  40982b:	div    r14
  40982e:	lea    rax,[rdx+rdx*4]
  409832:	lea    rax,[r8+rax*8]
  409836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409840:	cmp    DWORD PTR [rax+0x18],0x3
  409844:	jne    409853 <__ctype_b_loc@plt+0x7583>
  409846:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40984b:	vucomisd xmm1,xmm0
  40984f:	jne    409853 <__ctype_b_loc@plt+0x7583>
  409851:	jnp    40985f <__ctype_b_loc@plt+0x758f>
  409853:	mov    rax,QWORD PTR [rax+0x20]
  409857:	test   rax,rax
  40985a:	jne    409840 <__ctype_b_loc@plt+0x7570>
  40985c:	mov    rax,r10
  40985f:	cmp    DWORD PTR [rax+0x8],0x0
  409863:	cmove  ecx,ebx
  409866:	cmovne esi,ebx
  409869:	mov    eax,ecx
  40986b:	sub    eax,esi
  40986d:	cmp    eax,0x1
  409870:	ja     4097e0 <__ctype_b_loc@plt+0x7510>
  409876:	mov    eax,esi
  409878:	pop    rbx
  409879:	pop    r14
  40987b:	ret    
  40987c:	nop    DWORD PTR [rax+0x0]
  409880:	push   rbp
  409881:	push   r15
  409883:	push   r14
  409885:	push   r12
  409887:	push   rbx
  409888:	mov    r14,rdi
  40988b:	movsxd rax,DWORD PTR [rsi+0x8]
  40988f:	movsxd rcx,DWORD PTR [rdx+0x8]
  409893:	cmp    eax,ecx
  409895:	jne    4098bf <__ctype_b_loc@plt+0x75ef>
  409897:	lea    ecx,[rax-0x3]
  40989a:	cmp    ecx,0x4
  40989d:	ja     409934 <__ctype_b_loc@plt+0x7664>
  4098a3:	lea    rdi,[rip+0x2091e]        # 42a1c8 <__ctype_b_loc@plt+0x27ef8>
  4098aa:	movsxd rcx,DWORD PTR [rdi+rcx*4]
  4098ae:	add    rcx,rdi
  4098b1:	jmp    rcx
  4098b3:	mov    rcx,QWORD PTR [rsi]
  4098b6:	add    rcx,0x10
  4098ba:	jmp    409943 <__ctype_b_loc@plt+0x7673>
  4098bf:	lea    rsi,[rip+0x2701a]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  4098c6:	mov    rdx,QWORD PTR [rsi+rax*8]
  4098ca:	mov    rcx,QWORD PTR [rsi+rcx*8]
  4098ce:	mov    al,BYTE PTR [rdx+0x2]
  4098d1:	cmp    al,BYTE PTR [rcx+0x2]
  4098d4:	je     409adc <__ctype_b_loc@plt+0x780c>
  4098da:	lea    rsi,[rip+0x2167f]        # 42af60 <__ctype_b_loc@plt+0x28c90>
  4098e1:	xor    r15d,r15d
  4098e4:	xor    eax,eax
  4098e6:	mov    rdi,r14
  4098e9:	call   404080 <__ctype_b_loc@plt+0x1db0>
  4098ee:	jmp    409af0 <__ctype_b_loc@plt+0x7820>
  4098f3:	vmovsd xmm0,QWORD PTR [rdx]
  4098f7:	xor    r15d,r15d
  4098fa:	vucomisd xmm0,QWORD PTR [rsi]
  4098fe:	seta   r15b
  409902:	jmp    409af0 <__ctype_b_loc@plt+0x7820>
  409907:	mov    rbx,QWORD PTR [rsi]
  40990a:	mov    rbp,QWORD PTR [rdx]
  40990d:	lea    r12,[rbx+0x18]
  409911:	lea    r14,[rbp+0x18]
  409915:	mov    rdi,r12
  409918:	mov    rsi,r14
  40991b:	call   402200 <strcoll@plt>
  409920:	mov    r15d,eax
  409923:	test   eax,eax
  409925:	je     409a74 <__ctype_b_loc@plt+0x77a4>
  40992b:	shr    r15d,0x1f
  40992f:	jmp    409af0 <__ctype_b_loc@plt+0x7820>
  409934:	mov    rcx,QWORD PTR [r14+0x20]
  409938:	lea    rcx,[rcx+rax*8]
  40993c:	add    rcx,0xe0
  409943:	mov    rbp,QWORD PTR [rcx]
  409946:	lea    r8,[rip+0x211cb]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40994d:	test   rbp,rbp
  409950:	je     4099aa <__ctype_b_loc@plt+0x76da>
  409952:	mov    rcx,QWORD PTR [r14+0x20]
  409956:	mov    rdi,QWORD PTR [rcx+0x190]
  40995d:	mov    cl,BYTE PTR [rbp+0xb]
  409960:	mov    rbx,0xffffffffffffffff
  409967:	shlx   rcx,rbx,rcx
  40996c:	andn   ecx,ecx,DWORD PTR [rdi+0xc]
  409972:	movsxd rcx,ecx
  409975:	lea    rcx,[rcx+rcx*4]
  409979:	shl    rcx,0x3
  40997d:	add    rcx,QWORD PTR [rbp+0x20]
  409981:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40998b:	nop    DWORD PTR [rax+rax*1+0x0]
  409990:	cmp    DWORD PTR [rcx+0x18],0x4
  409994:	jne    40999c <__ctype_b_loc@plt+0x76cc>
  409996:	cmp    QWORD PTR [rcx+0x10],rdi
  40999a:	je     4099a7 <__ctype_b_loc@plt+0x76d7>
  40999c:	mov    rcx,QWORD PTR [rcx+0x20]
  4099a0:	test   rcx,rcx
  4099a3:	jne    409990 <__ctype_b_loc@plt+0x76c0>
  4099a5:	jmp    4099aa <__ctype_b_loc@plt+0x76da>
  4099a7:	mov    r8,rcx
  4099aa:	mov    r10d,DWORD PTR [r8+0x8]
  4099ae:	test   r10d,r10d
  4099b1:	je     409ad1 <__ctype_b_loc@plt+0x7801>
  4099b7:	cmp    eax,0x7
  4099ba:	je     4099c1 <__ctype_b_loc@plt+0x76f1>
  4099bc:	cmp    eax,0x5
  4099bf:	jne    4099ca <__ctype_b_loc@plt+0x76fa>
  4099c1:	mov    rcx,QWORD PTR [rdx]
  4099c4:	add    rcx,0x10
  4099c8:	jmp    4099d9 <__ctype_b_loc@plt+0x7709>
  4099ca:	mov    rcx,QWORD PTR [r14+0x20]
  4099ce:	lea    rcx,[rcx+rax*8]
  4099d2:	add    rcx,0xe0
  4099d9:	mov    rdi,QWORD PTR [rcx]
  4099dc:	lea    r9,[rip+0x21135]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4099e3:	test   rdi,rdi
  4099e6:	je     409a35 <__ctype_b_loc@plt+0x7765>
  4099e8:	mov    rcx,QWORD PTR [r14+0x20]
  4099ec:	mov    rcx,QWORD PTR [rcx+0x190]
  4099f3:	mov    bpl,BYTE PTR [rdi+0xb]
  4099f7:	mov    rbx,0xffffffffffffffff
  4099fe:	shlx   rbp,rbx,rbp
  409a03:	andn   ebp,ebp,DWORD PTR [rcx+0xc]
  409a09:	movsxd rbp,ebp
  409a0c:	lea    rbp,[rbp+rbp*4+0x0]
  409a11:	shl    rbp,0x3
  409a15:	add    rbp,QWORD PTR [rdi+0x20]
  409a19:	nop    DWORD PTR [rax+0x0]
  409a20:	cmp    DWORD PTR [rbp+0x18],0x4
  409a24:	jne    409a2c <__ctype_b_loc@plt+0x775c>
  409a26:	cmp    QWORD PTR [rbp+0x10],rcx
  409a2a:	je     409a69 <__ctype_b_loc@plt+0x7799>
  409a2c:	mov    rbp,QWORD PTR [rbp+0x20]
  409a30:	test   rbp,rbp
  409a33:	jne    409a20 <__ctype_b_loc@plt+0x7750>
  409a35:	cmp    r10d,DWORD PTR [r9+0x8]
  409a39:	jne    409ad1 <__ctype_b_loc@plt+0x7801>
  409a3f:	cmp    r10d,0x3
  409a43:	ja     409ac9 <__ctype_b_loc@plt+0x77f9>
  409a49:	mov    ecx,r10d
  409a4c:	lea    rdi,[rip+0x20789]        # 42a1dc <__ctype_b_loc@plt+0x27f0c>
  409a53:	movsxd rcx,DWORD PTR [rdi+rcx*4]
  409a57:	add    rcx,rdi
  409a5a:	jmp    rcx
  409a5c:	mov    ecx,DWORD PTR [r8]
  409a5f:	cmp    ecx,DWORD PTR [r9]
  409a62:	jne    409ad1 <__ctype_b_loc@plt+0x7801>
  409a64:	jmp    409b0a <__ctype_b_loc@plt+0x783a>
  409a69:	mov    r9,rbp
  409a6c:	cmp    r10d,DWORD PTR [r9+0x8]
  409a70:	je     409a3f <__ctype_b_loc@plt+0x776f>
  409a72:	jmp    409ad1 <__ctype_b_loc@plt+0x7801>
  409a74:	mov    rbp,QWORD PTR [rbp+0x10]
  409a78:	mov    rbx,QWORD PTR [rbx+0x10]
  409a7c:	nop    DWORD PTR [rax+0x0]
  409a80:	mov    rdi,r12
  409a83:	call   4020e0 <strlen@plt>
  409a88:	cmp    rax,rbp
  409a8b:	je     409b60 <__ctype_b_loc@plt+0x7890>
  409a91:	cmp    rax,rbx
  409a94:	je     409b69 <__ctype_b_loc@plt+0x7899>
  409a9a:	lea    rcx,[rax+0x1]
  409a9e:	add    r12,rax
  409aa1:	add    r12,0x1
  409aa5:	sub    rbx,rcx
  409aa8:	add    r14,rax
  409aab:	add    r14,0x1
  409aaf:	sub    rbp,rcx
  409ab2:	mov    rdi,r12
  409ab5:	mov    rsi,r14
  409ab8:	call   402200 <strcoll@plt>
  409abd:	test   eax,eax
  409abf:	je     409a80 <__ctype_b_loc@plt+0x77b0>
  409ac1:	mov    r15d,eax
  409ac4:	jmp    40992b <__ctype_b_loc@plt+0x765b>
  409ac9:	mov    rcx,QWORD PTR [r8]
  409acc:	cmp    rcx,QWORD PTR [r9]
  409acf:	je     409b0a <__ctype_b_loc@plt+0x783a>
  409ad1:	lea    rcx,[rip+0x26e08]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  409ad8:	mov    rdx,QWORD PTR [rcx+rax*8]
  409adc:	lea    rsi,[rip+0x2145c]        # 42af3f <__ctype_b_loc@plt+0x28c6f>
  409ae3:	xor    r15d,r15d
  409ae6:	xor    eax,eax
  409ae8:	mov    rdi,r14
  409aeb:	call   404080 <__ctype_b_loc@plt+0x1db0>
  409af0:	mov    eax,r15d
  409af3:	pop    rbx
  409af4:	pop    r12
  409af6:	pop    r14
  409af8:	pop    r15
  409afa:	pop    rbp
  409afb:	ret    
  409afc:	vmovsd xmm0,QWORD PTR [r8]
  409b01:	vucomisd xmm0,QWORD PTR [r9]
  409b06:	jne    409ad1 <__ctype_b_loc@plt+0x7801>
  409b08:	jp     409ad1 <__ctype_b_loc@plt+0x7801>
  409b0a:	mov    rax,QWORD PTR [r14+0x10]
  409b0e:	mov    rbp,rax
  409b11:	sub    rbp,QWORD PTR [r14+0x40]
  409b15:	mov    rcx,QWORD PTR [r8]
  409b18:	mov    QWORD PTR [rax],rcx
  409b1b:	mov    ecx,DWORD PTR [r8+0x8]
  409b1f:	mov    DWORD PTR [rax+0x8],ecx
  409b22:	mov    rax,QWORD PTR [r14+0x10]
  409b26:	mov    rcx,QWORD PTR [rsi]
  409b29:	mov    QWORD PTR [rax+0x10],rcx
  409b2d:	mov    ecx,DWORD PTR [rsi+0x8]
  409b30:	mov    DWORD PTR [rax+0x18],ecx
  409b33:	mov    rax,QWORD PTR [r14+0x10]
  409b37:	mov    rcx,QWORD PTR [rdx]
  409b3a:	mov    QWORD PTR [rax+0x20],rcx
  409b3e:	mov    ecx,DWORD PTR [rdx+0x8]
  409b41:	mov    DWORD PTR [rax+0x28],ecx
  409b44:	mov    rax,QWORD PTR [r14+0x38]
  409b48:	sub    rax,QWORD PTR [r14+0x10]
  409b4c:	cmp    rax,0x30
  409b50:	jg     409b82 <__ctype_b_loc@plt+0x78b2>
  409b52:	mov    esi,DWORD PTR [r14+0x58]
  409b56:	cmp    esi,0x3
  409b59:	jge    409b78 <__ctype_b_loc@plt+0x78a8>
  409b5b:	add    esi,0x3
  409b5e:	jmp    409b7a <__ctype_b_loc@plt+0x78aa>
  409b60:	xor    r15d,r15d
  409b63:	shr    r15d,0x1f
  409b67:	jmp    409af0 <__ctype_b_loc@plt+0x7820>
  409b69:	mov    r15d,0xffffffff
  409b6f:	shr    r15d,0x1f
  409b73:	jmp    409af0 <__ctype_b_loc@plt+0x7820>
  409b78:	add    esi,esi
  409b7a:	mov    rdi,r14
  409b7d:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  409b82:	mov    rsi,QWORD PTR [r14+0x10]
  409b86:	lea    rax,[rsi+0x30]
  409b8a:	mov    QWORD PTR [r14+0x10],rax
  409b8e:	mov    edx,0x1
  409b93:	mov    rdi,r14
  409b96:	call   404ff0 <__ctype_b_loc@plt+0x2d20>
  409b9b:	mov    rax,QWORD PTR [r14+0x10]
  409b9f:	mov    rcx,QWORD PTR [r14+0x40]
  409ba3:	lea    rdx,[rax-0x10]
  409ba7:	mov    QWORD PTR [r14+0x10],rdx
  409bab:	mov    rdx,QWORD PTR [rax-0x10]
  409baf:	mov    QWORD PTR [rcx+rbp*1],rdx
  409bb3:	mov    eax,DWORD PTR [rax-0x8]
  409bb6:	mov    DWORD PTR [rcx+rbp*1+0x8],eax
  409bba:	mov    rax,QWORD PTR [r14+0x10]
  409bbe:	mov    r15d,DWORD PTR [rax+0x8]
  409bc2:	test   r15d,r15d
  409bc5:	je     409af0 <__ctype_b_loc@plt+0x7820>
  409bcb:	cmp    r15d,0x1
  409bcf:	jne    409be0 <__ctype_b_loc@plt+0x7910>
  409bd1:	xor    r15d,r15d
  409bd4:	cmp    DWORD PTR [rax],0x0
  409bd7:	setne  r15b
  409bdb:	jmp    409af0 <__ctype_b_loc@plt+0x7820>
  409be0:	mov    r15d,0x1
  409be6:	jmp    409af0 <__ctype_b_loc@plt+0x7820>
  409beb:	nop    DWORD PTR [rax+rax*1+0x0]
  409bf0:	mov    eax,DWORD PTR [rsi+0x8]
  409bf3:	add    eax,0xffffffff
  409bf6:	cmp    eax,0x3
  409bf9:	ja     409c21 <__ctype_b_loc@plt+0x7951>
  409bfb:	lea    rcx,[rip+0x205ea]        # 42a1ec <__ctype_b_loc@plt+0x27f1c>
  409c02:	movsxd rax,DWORD PTR [rcx+rax*4]
  409c06:	add    rax,rcx
  409c09:	jmp    rax
  409c0b:	mov    al,BYTE PTR [rdi+0xb]
  409c0e:	mov    rcx,0xffffffffffffffff
  409c15:	shlx   rax,rcx,rax
  409c1a:	andn   eax,eax,DWORD PTR [rsi]
  409c1f:	jmp    409c72 <__ctype_b_loc@plt+0x79a2>
  409c21:	mov    eax,DWORD PTR [rsi]
  409c23:	mov    cl,BYTE PTR [rdi+0xb]
  409c26:	mov    rdx,0xffffffffffffffff
  409c2d:	shlx   rcx,rdx,rcx
  409c32:	or     rcx,0x1
  409c36:	xor    rcx,0xfffffffffffffffe
  409c3a:	xor    edx,edx
  409c3c:	div    rcx
  409c3f:	lea    rax,[rdx+rdx*4]
  409c43:	jmp    409c78 <__ctype_b_loc@plt+0x79a8>
  409c45:	vmovq  xmm0,QWORD PTR [rsi]
  409c49:	vxorps xmm1,xmm1,xmm1
  409c4d:	vucomisd xmm0,xmm1
  409c51:	jne    409c81 <__ctype_b_loc@plt+0x79b1>
  409c53:	jp     409c81 <__ctype_b_loc@plt+0x79b1>
  409c55:	mov    rax,QWORD PTR [rdi+0x20]
  409c59:	ret    
  409c5a:	mov    rax,QWORD PTR [rsi]
  409c5d:	mov    cl,BYTE PTR [rdi+0xb]
  409c60:	mov    rdx,0xffffffffffffffff
  409c67:	shlx   rcx,rdx,rcx
  409c6c:	andn   eax,ecx,DWORD PTR [rax+0xc]
  409c72:	cdqe   
  409c74:	lea    rax,[rax+rax*4]
  409c78:	shl    rax,0x3
  409c7c:	add    rax,QWORD PTR [rdi+0x20]
  409c80:	ret    
  409c81:	vmovq  rcx,xmm0
  409c86:	mov    rax,rcx
  409c89:	shr    rax,0x20
  409c8d:	add    eax,ecx
  409c8f:	jmp    409c23 <__ctype_b_loc@plt+0x7953>
  409c91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  409ca0:	push   rbp
  409ca1:	mov    rbp,rsp
  409ca4:	push   r15
  409ca6:	push   r14
  409ca8:	push   r13
  409caa:	push   r12
  409cac:	push   rbx
  409cad:	and    rsp,0xffffffffffffffe0
  409cb1:	sub    rsp,0xc0
  409cb8:	mov    r15,rdx
  409cbb:	mov    r12,rsi
  409cbe:	mov    r13,rdi
  409cc1:	mov    rdi,rsi
  409cc4:	mov    rsi,rdx
  409cc7:	call   409bf0 <__ctype_b_loc@plt+0x7920>
  409ccc:	mov    r14,rax
  409ccf:	lea    rax,[rip+0x20e52]        # 42ab28 <__ctype_b_loc@plt+0x28858>
  409cd6:	cmp    r14,rax
  409cd9:	je     409ce7 <__ctype_b_loc@plt+0x7a17>
  409cdb:	mov    eax,DWORD PTR [r14+0x8]
  409cdf:	test   eax,eax
  409ce1:	je     40a0a0 <__ctype_b_loc@plt+0x7dd0>
  409ce7:	mov    r9,QWORD PTR [r12+0x20]
  409cec:	mov    rax,QWORD PTR [r12+0x28]
  409cf1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  409d00:	lea    rbx,[rax-0x28]
  409d04:	mov    QWORD PTR [r12+0x28],rbx
  409d09:	cmp    rax,r9
  409d0c:	jbe    409d66 <__ctype_b_loc@plt+0x7a96>
  409d0e:	cmp    DWORD PTR [rax-0x10],0x0
  409d12:	mov    rax,rbx
  409d15:	jne    409d00 <__ctype_b_loc@plt+0x7a30>
  409d17:	lea    rsi,[r14+0x10]
  409d1b:	mov    rdi,r12
  409d1e:	call   409bf0 <__ctype_b_loc@plt+0x7920>
  409d23:	cmp    rax,r14
  409d26:	je     40a091 <__ctype_b_loc@plt+0x7dc1>
  409d2c:	nop    DWORD PTR [rax+0x0]
  409d30:	mov    rcx,rax
  409d33:	mov    rax,QWORD PTR [rax+0x20]
  409d37:	cmp    rax,r14
  409d3a:	jne    409d30 <__ctype_b_loc@plt+0x7a60>
  409d3c:	mov    QWORD PTR [rcx+0x20],rbx
  409d40:	mov    rax,QWORD PTR [r14+0x20]
  409d44:	mov    QWORD PTR [rbx+0x20],rax
  409d48:	vmovdqu ymm0,YMMWORD PTR [r14]
  409d4d:	vmovdqu YMMWORD PTR [rbx],ymm0
  409d51:	mov    QWORD PTR [r14+0x20],0x0
  409d59:	mov    DWORD PTR [r14+0x8],0x0
  409d61:	jmp    40a0a0 <__ctype_b_loc@plt+0x7dd0>
  409d66:	mov    QWORD PTR [rsp+0x18],r13
  409d6b:	vpxor  xmm15,xmm15,xmm15
  409d70:	vmovdqu YMMWORD PTR [rsp+0x7c],ymm15
  409d76:	vmovdqa YMMWORD PTR [rsp+0x60],ymm15
  409d7c:	vmovdqa YMMWORD PTR [rsp+0x40],ymm15
  409d82:	vmovdqa YMMWORD PTR [rsp+0x20],ymm15
  409d88:	mov    r10d,DWORD PTR [r12+0x38]
  409d8d:	xor    r13d,r13d
  409d90:	mov    ebx,0x1
  409d95:	mov    r8d,0x10
  409d9b:	vpbroadcastq ymm3,QWORD PTR [rip+0x20f9c]        # 42ad40 <__ctype_b_loc@plt+0x28a70>
  409da4:	vpbroadcastq ymm4,QWORD PTR [rip+0x20f9b]        # 42ad48 <__ctype_b_loc@plt+0x28a78>
  409dad:	vpcmpeqd ymm5,ymm5,ymm5
  409db1:	vpbroadcastq ymm6,QWORD PTR [rip+0x20f96]        # 42ad50 <__ctype_b_loc@plt+0x28a80>
  409dba:	xor    r11d,r11d
  409dbd:	mov    r14d,0x1
  409dc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409dcd:	nop    DWORD PTR [rax]
  409dd0:	mov    eax,r14d
  409dd3:	cmp    r14d,r10d
  409dd6:	jle    409de4 <__ctype_b_loc@plt+0x7b14>
  409dd8:	mov    eax,r10d
  409ddb:	cmp    ebx,r10d
  409dde:	jg     409f5c <__ctype_b_loc@plt+0x7c8c>
  409de4:	xor    esi,esi
  409de6:	cmp    ebx,eax
  409de8:	jg     409f43 <__ctype_b_loc@plt+0x7c73>
  409dee:	mov    rdx,QWORD PTR [r12+0x18]
  409df3:	movsxd rdi,ebx
  409df6:	movsxd rcx,eax
  409df9:	cmp    rcx,rdi
  409dfc:	mov    rax,rdi
  409dff:	cmovge rax,rcx
  409e03:	add    rax,0x1
  409e07:	mov    rbx,rax
  409e0a:	sub    rbx,rdi
  409e0d:	xor    esi,esi
  409e0f:	cmp    rbx,0x11
  409e13:	jae    409e20 <__ctype_b_loc@plt+0x7b50>
  409e15:	mov    rbx,rdi
  409e18:	jmp    409f20 <__ctype_b_loc@plt+0x7c50>
  409e1d:	nop    DWORD PTR [rax]
  409e20:	mov    esi,ebx
  409e22:	and    esi,0xf
  409e25:	test   rsi,rsi
  409e28:	cmove  rsi,r8
  409e2c:	sub    rbx,rsi
  409e2f:	add    rbx,rdi
  409e32:	vmovq  xmm7,rdi
  409e37:	vpbroadcastq ymm8,xmm7
  409e3c:	vpaddq ymm7,ymm8,YMMWORD PTR [rip+0x20e7c]        # 42acc0 <__ctype_b_loc@plt+0x289f0>
  409e44:	vpaddq ymm8,ymm8,YMMWORD PTR [rip+0x20e94]        # 42ace0 <__ctype_b_loc@plt+0x28a10>
  409e4c:	sub    rax,rsi
  409e4f:	sub    rax,rdi
  409e52:	vpxor  xmm9,xmm9,xmm9
  409e57:	vpxor  xmm10,xmm10,xmm10
  409e5c:	nop    DWORD PTR [rax+0x0]
  409e60:	vpsllq ymm11,ymm7,0x4
  409e65:	vpsllq ymm12,ymm8,0x4
  409e6b:	vmovq  xmm1,rdx
  409e70:	vpbroadcastq ymm1,xmm1
  409e75:	vpaddq ymm12,ymm1,ymm12
  409e7a:	vpaddq ymm14,ymm12,ymm3
  409e7e:	vpaddq ymm1,ymm1,ymm11
  409e83:	vpaddq ymm11,ymm1,ymm3
  409e87:	vpaddq ymm12,ymm12,ymm4
  409e8b:	vpaddq ymm1,ymm1,ymm4
  409e8f:	vpcmpeqd xmm2,xmm2,xmm2
  409e93:	vpgatherqd xmm13,DWORD PTR [ymm11*1+0x0],xmm2
  409e9d:	vpcmpeqd xmm2,xmm2,xmm2
  409ea1:	vpgatherqd xmm11,DWORD PTR [ymm14*1+0x0],xmm2
  409eab:	vpcmpeqd xmm2,xmm2,xmm2
  409eaf:	vpgatherqd xmm0,DWORD PTR [ymm1*1+0x0],xmm2
  409eb9:	vpcmpeqd xmm1,xmm1,xmm1
  409ebd:	vpgatherqd xmm2,DWORD PTR [ymm12*1+0x0],xmm1
  409ec7:	vinserti128 ymm1,ymm11,xmm13,0x1
  409ecd:	vinserti128 ymm0,ymm2,xmm0,0x1
  409ed3:	vpcmpeqd ymm1,ymm1,ymm15
  409ed8:	vpxor  ymm1,ymm1,ymm5
  409edc:	vpsubd ymm9,ymm9,ymm1
  409ee0:	vpcmpeqd ymm0,ymm0,ymm15
  409ee5:	vpxor  ymm0,ymm0,ymm5
  409ee9:	vpsubd ymm10,ymm10,ymm0
  409eed:	vpaddq ymm8,ymm8,ymm6
  409ef1:	vpaddq ymm7,ymm7,ymm6
  409ef5:	add    rax,0xfffffffffffffff0
  409ef9:	jne    409e60 <__ctype_b_loc@plt+0x7b90>
  409eff:	vpaddd ymm0,ymm10,ymm9
  409f04:	vextracti128 xmm1,ymm0,0x1
  409f0a:	vpaddd ymm0,ymm0,ymm1
  409f0e:	vpshufd xmm1,xmm0,0x4e
  409f13:	vpaddd ymm0,ymm0,ymm1
  409f17:	vphaddd ymm0,ymm0,ymm0
  409f1c:	vmovd  esi,xmm0
  409f20:	mov    rax,rbx
  409f23:	shl    rax,0x4
  409f27:	add    rax,rdx
  409f2a:	add    rax,0xfffffffffffffff8
  409f2e:	xchg   ax,ax
  409f30:	cmp    DWORD PTR [rax],0x1
  409f33:	sbb    esi,0xffffffff
  409f36:	add    rax,0x10
  409f3a:	cmp    rbx,rcx
  409f3d:	lea    rbx,[rbx+0x1]
  409f41:	jl     409f30 <__ctype_b_loc@plt+0x7c60>
  409f43:	add    DWORD PTR [rsp+r13*4+0x20],esi
  409f48:	add    r11d,esi
  409f4b:	add    r13,0x1
  409f4f:	add    r14d,r14d
  409f52:	cmp    r13,0x1f
  409f56:	jb     409dd0 <__ctype_b_loc@plt+0x7b00>
  409f5c:	mov    al,BYTE PTR [r12+0xb]
  409f61:	mov    ecx,0x1
  409f66:	shlx   rax,rcx,rax
  409f6b:	xor    edx,edx
  409f6d:	mov    r14d,0x0
  409f73:	mov    r8d,0x0
  409f79:	test   eax,eax
  409f7b:	mov    rdi,QWORD PTR [rsp+0x18]
  409f80:	je     40a030 <__ctype_b_loc@plt+0x7d60>
  409f86:	movsxd rcx,eax
  409f89:	xor    r8d,r8d
  409f8c:	lea    r10,[rip+0x20bbd]        # 42ab50 <__ctype_b_loc@plt+0x28880>
  409f93:	xor    r14d,r14d
  409f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409fa0:	add    rcx,0xffffffffffffffff
  409fa4:	lea    rax,[rcx+rcx*4]
  409fa8:	cmp    DWORD PTR [r9+rax*8+0x8],0x0
  409fae:	je     40a027 <__ctype_b_loc@plt+0x7d57>
  409fb0:	xor    esi,esi
  409fb2:	cmp    DWORD PTR [r9+rax*8+0x18],0x3
  409fb8:	jne    40a020 <__ctype_b_loc@plt+0x7d50>
  409fba:	vmovq  xmm0,QWORD PTR [r9+rax*8+0x10]
  409fc1:	vcvttsd2si ebx,xmm0
  409fc5:	vxorps xmm14,xmm14,xmm14
  409fca:	vcvtsi2sd xmm1,xmm14,ebx
  409fce:	vucomisd xmm0,xmm1
  409fd2:	jne    40a020 <__ctype_b_loc@plt+0x7d50>
  409fd4:	jp     40a020 <__ctype_b_loc@plt+0x7d50>
  409fd6:	add    ebx,0xffffffff
  409fd9:	cmp    ebx,0x3fffffff
  409fdf:	ja     40a020 <__ctype_b_loc@plt+0x7d50>
  409fe1:	xor    esi,esi
  409fe3:	cmp    ebx,0x100
  409fe9:	jb     40a002 <__ctype_b_loc@plt+0x7d32>
  409feb:	xor    esi,esi
  409fed:	mov    eax,ebx
  409fef:	nop
  409ff0:	shr    eax,0x8
  409ff3:	add    esi,0x8
  409ff6:	cmp    ebx,0xffff
  409ffc:	mov    ebx,eax
  409ffe:	ja     409ff0 <__ctype_b_loc@plt+0x7d20>
  40a000:	jmp    40a004 <__ctype_b_loc@plt+0x7d34>
  40a002:	mov    eax,ebx
  40a004:	mov    eax,eax
  40a006:	movzx  eax,BYTE PTR [rax+r10*1]
  40a00b:	add    eax,esi
  40a00d:	cdqe   
  40a00f:	add    DWORD PTR [rsp+rax*4+0x20],0x1
  40a014:	mov    esi,0x1
  40a019:	nop    DWORD PTR [rax+0x0]
  40a020:	add    r14d,esi
  40a023:	add    r8d,0x1
  40a027:	test   rcx,rcx
  40a02a:	jne    409fa0 <__ctype_b_loc@plt+0x7cd0>
  40a030:	add    r14d,r11d
  40a033:	cmp    DWORD PTR [r15+0x8],0x3
  40a038:	jne    40a10e <__ctype_b_loc@plt+0x7e3e>
  40a03e:	vmovq  xmm0,QWORD PTR [r15]
  40a043:	vcvttsd2si eax,xmm0
  40a047:	vxorps xmm14,xmm14,xmm14
  40a04c:	vcvtsi2sd xmm1,xmm14,eax
  40a050:	vucomisd xmm0,xmm1
  40a054:	jne    40a10e <__ctype_b_loc@plt+0x7e3e>
  40a05a:	jp     40a10e <__ctype_b_loc@plt+0x7e3e>
  40a060:	add    eax,0xffffffff
  40a063:	cmp    eax,0x3fffffff
  40a068:	ja     40a10e <__ctype_b_loc@plt+0x7e3e>
  40a06e:	xor    ecx,ecx
  40a070:	cmp    eax,0x100
  40a075:	jb     40a0f1 <__ctype_b_loc@plt+0x7e21>
  40a077:	xor    ecx,ecx
  40a079:	mov    edx,eax
  40a07b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a080:	shr    edx,0x8
  40a083:	add    ecx,0x8
  40a086:	cmp    eax,0xffff
  40a08b:	mov    eax,edx
  40a08d:	ja     40a080 <__ctype_b_loc@plt+0x7db0>
  40a08f:	jmp    40a0f3 <__ctype_b_loc@plt+0x7e23>
  40a091:	mov    rax,QWORD PTR [r14+0x20]
  40a095:	mov    QWORD PTR [rbx+0x20],rax
  40a099:	mov    QWORD PTR [r14+0x20],rbx
  40a09d:	mov    r14,rbx
  40a0a0:	mov    rax,QWORD PTR [r15]
  40a0a3:	mov    QWORD PTR [r14+0x10],rax
  40a0a7:	mov    eax,DWORD PTR [r15+0x8]
  40a0ab:	mov    DWORD PTR [r14+0x18],eax
  40a0af:	cmp    DWORD PTR [r15+0x8],0x4
  40a0b4:	jl     40a34f <__ctype_b_loc@plt+0x807f>
  40a0ba:	mov    rax,QWORD PTR [r15]
  40a0bd:	test   BYTE PTR [rax+0x9],0x3
  40a0c1:	je     40a34f <__ctype_b_loc@plt+0x807f>
  40a0c7:	mov    al,BYTE PTR [r12+0x9]
  40a0cc:	test   al,0x4
  40a0ce:	je     40a34f <__ctype_b_loc@plt+0x807f>
  40a0d4:	mov    rcx,QWORD PTR [r13+0x20]
  40a0d8:	and    al,0xfb
  40a0da:	mov    BYTE PTR [r12+0x9],al
  40a0df:	mov    rax,QWORD PTR [rcx+0x40]
  40a0e3:	mov    QWORD PTR [r12+0x30],rax
  40a0e8:	mov    QWORD PTR [rcx+0x40],r12
  40a0ec:	jmp    40a34f <__ctype_b_loc@plt+0x807f>
  40a0f1:	mov    edx,eax
  40a0f3:	mov    eax,edx
  40a0f5:	lea    rdx,[rip+0x20a54]        # 42ab50 <__ctype_b_loc@plt+0x28880>
  40a0fc:	movzx  eax,BYTE PTR [rax+rdx*1]
  40a100:	add    eax,ecx
  40a102:	cdqe   
  40a104:	add    DWORD PTR [rsp+rax*4+0x20],0x1
  40a109:	mov    edx,0x1
  40a10e:	add    r14d,edx
  40a111:	jle    40a160 <__ctype_b_loc@plt+0x7e90>
  40a113:	mov    ebx,0x1
  40a118:	xor    eax,eax
  40a11a:	lea    rcx,[rsp+0x20]
  40a11f:	xor    edx,edx
  40a121:	xor    r9d,r9d
  40a124:	xor    r10d,r10d
  40a127:	nop    WORD PTR [rax+rax*1+0x0]
  40a130:	mov    esi,DWORD PTR [rcx]
  40a132:	test   esi,esi
  40a134:	jle    40a143 <__ctype_b_loc@plt+0x7e73>
  40a136:	add    r10d,esi
  40a139:	cmp    r10d,eax
  40a13c:	cmovg  r9d,r10d
  40a140:	cmovg  edx,ebx
  40a143:	cmp    r10d,r14d
  40a146:	je     40a165 <__ctype_b_loc@plt+0x7e95>
  40a148:	lea    esi,[rbx+rbx*1]
  40a14b:	and    ebx,0x7fffffff
  40a151:	add    rcx,0x4
  40a155:	mov    eax,ebx
  40a157:	cmp    ebx,r14d
  40a15a:	mov    ebx,esi
  40a15c:	jl     40a130 <__ctype_b_loc@plt+0x7e60>
  40a15e:	jmp    40a165 <__ctype_b_loc@plt+0x7e95>
  40a160:	xor    r9d,r9d
  40a163:	xor    edx,edx
  40a165:	lea    ecx,[r11+r8*1]
  40a169:	add    ecx,0x1
  40a16c:	sub    ecx,r9d
  40a16f:	mov    rsi,r12
  40a172:	vzeroupper 
  40a175:	call   40a3a0 <__ctype_b_loc@plt+0x80d0>
  40a17a:	mov    r13d,DWORD PTR [r15+0x8]
  40a17e:	test   r13d,r13d
  40a181:	je     40a31e <__ctype_b_loc@plt+0x804e>
  40a187:	cmp    r13d,0x3
  40a18b:	je     40a1ef <__ctype_b_loc@plt+0x7f1f>
  40a18d:	cmp    r13d,0x4
  40a191:	jne    40a228 <__ctype_b_loc@plt+0x7f58>
  40a197:	mov    rax,QWORD PTR [r15]
  40a19a:	mov    cl,BYTE PTR [r12+0xb]
  40a19f:	mov    rdx,0xffffffffffffffff
  40a1a6:	shlx   rcx,rdx,rcx
  40a1ab:	andn   ecx,ecx,DWORD PTR [rax+0xc]
  40a1b1:	movsxd rcx,ecx
  40a1b4:	lea    r14,[rcx+rcx*4]
  40a1b8:	shl    r14,0x3
  40a1bc:	add    r14,QWORD PTR [r12+0x20]
  40a1c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a1cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1d0:	cmp    DWORD PTR [r14+0x18],0x4
  40a1d5:	jne    40a1e1 <__ctype_b_loc@plt+0x7f11>
  40a1d7:	cmp    QWORD PTR [r14+0x10],rax
  40a1db:	je     40a33d <__ctype_b_loc@plt+0x806d>
  40a1e1:	mov    r14,QWORD PTR [r14+0x20]
  40a1e5:	test   r14,r14
  40a1e8:	jne    40a1d0 <__ctype_b_loc@plt+0x7f00>
  40a1ea:	jmp    40a31e <__ctype_b_loc@plt+0x804e>
  40a1ef:	vmovq  xmm1,QWORD PTR [r15]
  40a1f4:	vcvttsd2si eax,xmm1
  40a1f8:	vxorps xmm14,xmm14,xmm14
  40a1fd:	vcvtsi2sd xmm0,xmm14,eax
  40a201:	vucomisd xmm1,xmm0
  40a205:	jne    40a228 <__ctype_b_loc@plt+0x7f58>
  40a207:	jp     40a228 <__ctype_b_loc@plt+0x7f58>
  40a209:	lea    ecx,[rax-0x1]
  40a20c:	cmp    ecx,DWORD PTR [r12+0x38]
  40a211:	jae    40a2ab <__ctype_b_loc@plt+0x7fdb>
  40a217:	movsxd r14,ecx
  40a21a:	shl    r14,0x4
  40a21e:	add    r14,QWORD PTR [r12+0x18]
  40a223:	jmp    40a33d <__ctype_b_loc@plt+0x806d>
  40a228:	mov    rdi,r12
  40a22b:	mov    rsi,r15
  40a22e:	call   409bf0 <__ctype_b_loc@plt+0x7920>
  40a233:	mov    r14,rax
  40a236:	mov    eax,r13d
  40a239:	lea    rcx,[rip+0x1ffbc]        # 42a1fc <__ctype_b_loc@plt+0x27f2c>
  40a240:	cmp    DWORD PTR [r14+0x18],r13d
  40a244:	jne    40a2a0 <__ctype_b_loc@plt+0x7fd0>
  40a246:	cmp    r13d,0x3
  40a24a:	ja     40a270 <__ctype_b_loc@plt+0x7fa0>
  40a24c:	movsxd rdx,DWORD PTR [rcx+rax*4]
  40a250:	add    rdx,rcx
  40a253:	jmp    rdx
  40a255:	mov    edx,DWORD PTR [r14+0x10]
  40a259:	cmp    edx,DWORD PTR [r15]
  40a25c:	jne    40a2a0 <__ctype_b_loc@plt+0x7fd0>
  40a25e:	jmp    40a33d <__ctype_b_loc@plt+0x806d>
  40a263:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a26d:	nop    DWORD PTR [rax]
  40a270:	mov    rdx,QWORD PTR [r14+0x10]
  40a274:	cmp    rdx,QWORD PTR [r15]
  40a277:	jne    40a2a0 <__ctype_b_loc@plt+0x7fd0>
  40a279:	jmp    40a33d <__ctype_b_loc@plt+0x806d>
  40a27e:	vmovq  xmm0,QWORD PTR [r14+0x10]
  40a284:	vucomisd xmm0,QWORD PTR [r15]
  40a289:	jne    40a2a0 <__ctype_b_loc@plt+0x7fd0>
  40a28b:	jnp    40a33d <__ctype_b_loc@plt+0x806d>
  40a291:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a29b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a2a0:	mov    r14,QWORD PTR [r14+0x20]
  40a2a4:	test   r14,r14
  40a2a7:	jne    40a240 <__ctype_b_loc@plt+0x7f70>
  40a2a9:	jmp    40a31e <__ctype_b_loc@plt+0x804e>
  40a2ab:	test   eax,eax
  40a2ad:	je     40a2f1 <__ctype_b_loc@plt+0x8021>
  40a2af:	vmovq  rcx,xmm0
  40a2b4:	mov    rax,rcx
  40a2b7:	shr    rax,0x20
  40a2bb:	add    eax,ecx
  40a2bd:	mov    cl,BYTE PTR [r12+0xb]
  40a2c2:	mov    rdx,0xffffffffffffffff
  40a2c9:	shlx   rcx,rdx,rcx
  40a2ce:	or     rcx,0x1
  40a2d2:	xor    rcx,0xfffffffffffffffe
  40a2d6:	xor    edx,edx
  40a2d8:	div    rcx
  40a2db:	lea    r14,[rdx+rdx*4]
  40a2df:	shl    r14,0x3
  40a2e3:	add    r14,QWORD PTR [r12+0x20]
  40a2e8:	cmp    DWORD PTR [r14+0x18],0x3
  40a2ed:	jne    40a315 <__ctype_b_loc@plt+0x8045>
  40a2ef:	jmp    40a307 <__ctype_b_loc@plt+0x8037>
  40a2f1:	mov    r14,QWORD PTR [r12+0x20]
  40a2f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a300:	cmp    DWORD PTR [r14+0x18],0x3
  40a305:	jne    40a315 <__ctype_b_loc@plt+0x8045>
  40a307:	vmovq  xmm1,QWORD PTR [r14+0x10]
  40a30d:	vucomisd xmm1,xmm0
  40a311:	jne    40a315 <__ctype_b_loc@plt+0x8045>
  40a313:	jnp    40a33d <__ctype_b_loc@plt+0x806d>
  40a315:	mov    r14,QWORD PTR [r14+0x20]
  40a319:	test   r14,r14
  40a31c:	jne    40a300 <__ctype_b_loc@plt+0x8030>
  40a31e:	mov    BYTE PTR [r12+0xa],0x0
  40a324:	cmp    r13d,0x3
  40a328:	je     40a364 <__ctype_b_loc@plt+0x8094>
  40a32a:	test   r13d,r13d
  40a32d:	mov    rbx,QWORD PTR [rsp+0x18]
  40a332:	jne    40a385 <__ctype_b_loc@plt+0x80b5>
  40a334:	lea    rsi,[rip+0x20bc8]        # 42af03 <__ctype_b_loc@plt+0x28c33>
  40a33b:	jmp    40a37b <__ctype_b_loc@plt+0x80ab>
  40a33d:	mov    BYTE PTR [r12+0xa],0x0
  40a343:	lea    rax,[rip+0x207ce]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40a34a:	cmp    r14,rax
  40a34d:	je     40a324 <__ctype_b_loc@plt+0x8054>
  40a34f:	mov    rax,r14
  40a352:	lea    rsp,[rbp-0x28]
  40a356:	pop    rbx
  40a357:	pop    r12
  40a359:	pop    r13
  40a35b:	pop    r14
  40a35d:	pop    r15
  40a35f:	pop    rbp
  40a360:	vzeroupper 
  40a363:	ret    
  40a364:	vmovq  xmm0,QWORD PTR [r15]
  40a369:	vucomisd xmm0,xmm0
  40a36d:	mov    rbx,QWORD PTR [rsp+0x18]
  40a372:	jnp    40a385 <__ctype_b_loc@plt+0x80b5>
  40a374:	lea    rsi,[rip+0x20b9b]        # 42af16 <__ctype_b_loc@plt+0x28c46>
  40a37b:	xor    eax,eax
  40a37d:	mov    rdi,rbx
  40a380:	call   404080 <__ctype_b_loc@plt+0x1db0>
  40a385:	mov    rdi,rbx
  40a388:	mov    rsi,r12
  40a38b:	mov    rdx,r15
  40a38e:	call   409ca0 <__ctype_b_loc@plt+0x79d0>
  40a393:	jmp    40a352 <__ctype_b_loc@plt+0x8082>
  40a395:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a39f:	nop
  40a3a0:	push   rbp
  40a3a1:	push   r15
  40a3a3:	push   r14
  40a3a5:	push   r13
  40a3a7:	push   r12
  40a3a9:	push   rbx
  40a3aa:	sub    rsp,0x38
  40a3ae:	mov    r15d,ecx
  40a3b1:	mov    r14d,edx
  40a3b4:	mov    rbx,rsi
  40a3b7:	mov    QWORD PTR [rsp],rdi
  40a3bb:	movsxd r12,DWORD PTR [rsi+0x38]
  40a3bf:	movzx  eax,BYTE PTR [rsi+0xb]
  40a3c3:	mov    QWORD PTR [rsp+0x10],rax
  40a3c8:	mov    rax,QWORD PTR [rsi+0x20]
  40a3cc:	mov    QWORD PTR [rsp+0x18],rax
  40a3d1:	cmp    r12d,edx
  40a3d4:	jge    40a505 <__ctype_b_loc@plt+0x8235>
  40a3da:	cmp    r14d,0xffffffff
  40a3de:	jl     40a432 <__ctype_b_loc@plt+0x8162>
  40a3e0:	mov    DWORD PTR [rsp+0xc],r15d
  40a3e5:	mov    rsi,QWORD PTR [rbx+0x18]
  40a3e9:	mov    r13,r12
  40a3ec:	shl    r13,0x4
  40a3f0:	movsxd rbp,r14d
  40a3f3:	shl    rbp,0x4
  40a3f7:	mov    rax,QWORD PTR [rsp]
  40a3fb:	mov    r15d,r14d
  40a3fe:	mov    r14,QWORD PTR [rax+0x20]
  40a402:	mov    rdi,QWORD PTR [r14+0x18]
  40a406:	mov    rdx,r13
  40a409:	mov    rcx,rbp
  40a40c:	call   QWORD PTR [r14+0x10]
  40a410:	mov    ecx,r15d
  40a413:	test   r15d,r15d
  40a416:	je     40a421 <__ctype_b_loc@plt+0x8151>
  40a418:	test   rax,rax
  40a41b:	je     40a912 <__ctype_b_loc@plt+0x8642>
  40a421:	sub    rbp,r13
  40a424:	add    QWORD PTR [r14+0x78],rbp
  40a428:	mov    r14d,ecx
  40a42b:	mov    r15d,DWORD PTR [rsp+0xc]
  40a430:	jmp    40a446 <__ctype_b_loc@plt+0x8176>
  40a432:	lea    rsi,[rip+0x20980]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  40a439:	xor    eax,eax
  40a43b:	mov    rdi,QWORD PTR [rsp]
  40a43f:	call   404080 <__ctype_b_loc@plt+0x1db0>
  40a444:	xor    eax,eax
  40a446:	mov    QWORD PTR [rbx+0x18],rax
  40a44a:	movsxd rcx,DWORD PTR [rbx+0x38]
  40a44e:	cmp    ecx,r14d
  40a451:	jge    40a501 <__ctype_b_loc@plt+0x8231>
  40a457:	movsxd rdx,r14d
  40a45a:	mov    esi,r14d
  40a45d:	sub    esi,ecx
  40a45f:	mov    r8,rcx
  40a462:	not    r8
  40a465:	add    r8,rdx
  40a468:	and    rsi,0x7
  40a46c:	je     40a4a6 <__ctype_b_loc@plt+0x81d6>
  40a46e:	mov    rdi,rcx
  40a471:	shl    rdi,0x4
  40a475:	add    rdi,rax
  40a478:	add    rdi,0x8
  40a47c:	neg    rsi
  40a47f:	xor    ebp,ebp
  40a481:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a48b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a490:	mov    DWORD PTR [rdi],0x0
  40a496:	add    rbp,0xffffffffffffffff
  40a49a:	add    rdi,0x10
  40a49e:	cmp    rsi,rbp
  40a4a1:	jne    40a490 <__ctype_b_loc@plt+0x81c0>
  40a4a3:	sub    rcx,rbp
  40a4a6:	cmp    r8,0x7
  40a4aa:	jb     40a501 <__ctype_b_loc@plt+0x8231>
  40a4ac:	sub    rdx,rcx
  40a4af:	shl    rcx,0x4
  40a4b3:	add    rcx,rax
  40a4b6:	add    rcx,0x78
  40a4ba:	nop    WORD PTR [rax+rax*1+0x0]
  40a4c0:	mov    DWORD PTR [rcx-0x70],0x0
  40a4c7:	mov    DWORD PTR [rcx-0x60],0x0
  40a4ce:	mov    DWORD PTR [rcx-0x50],0x0
  40a4d5:	mov    DWORD PTR [rcx-0x40],0x0
  40a4dc:	mov    DWORD PTR [rcx-0x30],0x0
  40a4e3:	mov    DWORD PTR [rcx-0x20],0x0
  40a4ea:	mov    DWORD PTR [rcx-0x10],0x0
  40a4f1:	mov    DWORD PTR [rcx],0x0
  40a4f7:	sub    rcx,0xffffffffffffff80
  40a4fb:	add    rdx,0xfffffffffffffff8
  40a4ff:	jne    40a4c0 <__ctype_b_loc@plt+0x81f0>
  40a501:	mov    DWORD PTR [rbx+0x38],r14d
  40a505:	mov    rdi,QWORD PTR [rsp]
  40a509:	mov    rsi,rbx
  40a50c:	mov    edx,r15d
  40a50f:	call   40a980 <__ctype_b_loc@plt+0x86b0>
  40a514:	cmp    r12d,r14d
  40a517:	jle    40a67a <__ctype_b_loc@plt+0x83aa>
  40a51d:	mov    DWORD PTR [rbx+0x38],r14d
  40a521:	mov    DWORD PTR [rsp+0xc],r14d
  40a526:	movsxd rax,r14d
  40a529:	mov    QWORD PTR [rsp+0x20],rax
  40a52e:	xchg   ax,ax
  40a530:	mov    r14,QWORD PTR [rbx+0x18]
  40a534:	mov    r13,rax
  40a537:	shl    r13,0x4
  40a53b:	lea    rbp,[rax+0x1]
  40a53f:	cmp    DWORD PTR [r14+r13*1+0x8],0x0
  40a545:	je     40a60c <__ctype_b_loc@plt+0x833c>
  40a54b:	lea    r15,[r14+r13*1]
  40a54f:	add    r15,0x8
  40a553:	cmp    DWORD PTR [rbx+0x38],eax
  40a556:	jbe    40a560 <__ctype_b_loc@plt+0x8290>
  40a558:	lea    rax,[r14+r13*1]
  40a55c:	jmp    40a5d0 <__ctype_b_loc@plt+0x8300>
  40a55e:	xchg   ax,ax
  40a560:	vcvtsi2sd xmm0,xmm2,ebp
  40a564:	test   ebp,ebp
  40a566:	je     40a5a7 <__ctype_b_loc@plt+0x82d7>
  40a568:	vmovq  rcx,xmm0
  40a56d:	mov    rax,rcx
  40a570:	shr    rax,0x20
  40a574:	add    eax,ecx
  40a576:	movzx  ecx,BYTE PTR [rbx+0xb]
  40a57a:	mov    rdx,0xffffffffffffffff
  40a581:	shlx   rcx,rdx,rcx
  40a586:	or     rcx,0x1
  40a58a:	xor    rcx,0xfffffffffffffffe
  40a58e:	xor    edx,edx
  40a590:	div    rcx
  40a593:	lea    rax,[rdx+rdx*4]
  40a597:	shl    rax,0x3
  40a59b:	add    rax,QWORD PTR [rbx+0x20]
  40a59f:	cmp    DWORD PTR [rax+0x18],0x3
  40a5a3:	jne    40a5c3 <__ctype_b_loc@plt+0x82f3>
  40a5a5:	jmp    40a5b6 <__ctype_b_loc@plt+0x82e6>
  40a5a7:	mov    rax,QWORD PTR [rbx+0x20]
  40a5ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40a5b0:	cmp    DWORD PTR [rax+0x18],0x3
  40a5b4:	jne    40a5c3 <__ctype_b_loc@plt+0x82f3>
  40a5b6:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40a5bb:	vucomisd xmm1,xmm0
  40a5bf:	jne    40a5c3 <__ctype_b_loc@plt+0x82f3>
  40a5c1:	jnp    40a5d0 <__ctype_b_loc@plt+0x8300>
  40a5c3:	mov    rax,QWORD PTR [rax+0x20]
  40a5c7:	test   rax,rax
  40a5ca:	jne    40a5b0 <__ctype_b_loc@plt+0x82e0>
  40a5cc:	jmp    40a5e0 <__ctype_b_loc@plt+0x8310>
  40a5ce:	xchg   ax,ax
  40a5d0:	lea    rcx,[rip+0x20541]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40a5d7:	cmp    rax,rcx
  40a5da:	jne    40a5ff <__ctype_b_loc@plt+0x832f>
  40a5dc:	vcvtsi2sd xmm0,xmm2,ebp
  40a5e0:	vmovq  QWORD PTR [rsp+0x28],xmm0
  40a5e6:	mov    DWORD PTR [rsp+0x30],0x3
  40a5ee:	mov    rdi,QWORD PTR [rsp]
  40a5f2:	mov    rsi,rbx
  40a5f5:	lea    rdx,[rsp+0x28]
  40a5fa:	call   409ca0 <__ctype_b_loc@plt+0x79d0>
  40a5ff:	mov    rcx,QWORD PTR [r14+r13*1]
  40a603:	mov    QWORD PTR [rax],rcx
  40a606:	mov    ecx,DWORD PTR [r15]
  40a609:	mov    DWORD PTR [rax+0x8],ecx
  40a60c:	mov    rax,rbp
  40a60f:	cmp    r12d,ebp
  40a612:	jne    40a530 <__ctype_b_loc@plt+0x8260>
  40a618:	mov    ebp,DWORD PTR [rsp+0xc]
  40a61c:	cmp    ebp,0xffffffff
  40a61f:	jl     40a661 <__ctype_b_loc@plt+0x8391>
  40a621:	mov    rsi,QWORD PTR [rbx+0x18]
  40a625:	shl    r12,0x4
  40a629:	mov    rcx,QWORD PTR [rsp+0x20]
  40a62e:	shl    rcx,0x4
  40a632:	mov    rax,QWORD PTR [rsp]
  40a636:	mov    r14,QWORD PTR [rax+0x20]
  40a63a:	mov    rdi,QWORD PTR [r14+0x18]
  40a63e:	mov    rdx,r12
  40a641:	mov    r15,rcx
  40a644:	call   QWORD PTR [r14+0x10]
  40a648:	mov    r13,rax
  40a64b:	test   ebp,ebp
  40a64d:	je     40a658 <__ctype_b_loc@plt+0x8388>
  40a64f:	test   r13,r13
  40a652:	je     40a912 <__ctype_b_loc@plt+0x8642>
  40a658:	sub    r15,r12
  40a65b:	add    QWORD PTR [r14+0x78],r15
  40a65f:	jmp    40a676 <__ctype_b_loc@plt+0x83a6>
  40a661:	lea    rsi,[rip+0x20751]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  40a668:	xor    r13d,r13d
  40a66b:	xor    eax,eax
  40a66d:	mov    rdi,QWORD PTR [rsp]
  40a671:	call   404080 <__ctype_b_loc@plt+0x1db0>
  40a676:	mov    QWORD PTR [rbx+0x18],r13
  40a67a:	mov    eax,0x1
  40a67f:	mov    rcx,QWORD PTR [rsp+0x10]
  40a684:	shlx   rax,rax,rcx
  40a689:	add    eax,0xffffffff
  40a68c:	mov    rcx,QWORD PTR [rsp+0x18]
  40a691:	js     40a8cd <__ctype_b_loc@plt+0x85fd>
  40a697:	movsxd r12,eax
  40a69a:	lea    r13,[rip+0x1fb6b]        # 42a20c <__ctype_b_loc@plt+0x27f3c>
  40a6a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a6ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40a6b0:	lea    rax,[r12+r12*4]
  40a6b4:	cmp    DWORD PTR [rcx+rax*8+0x8],0x0
  40a6b9:	je     40a8c0 <__ctype_b_loc@plt+0x85f0>
  40a6bf:	lea    r14,[rcx+rax*8]
  40a6c3:	add    r14,0x8
  40a6c7:	lea    rbp,[rcx+rax*8]
  40a6cb:	add    rbp,0x10
  40a6cf:	mov    r15d,DWORD PTR [rcx+rax*8+0x18]
  40a6d4:	test   r15d,r15d
  40a6d7:	je     40a850 <__ctype_b_loc@plt+0x8580>
  40a6dd:	cmp    r15d,0x3
  40a6e1:	je     40a72e <__ctype_b_loc@plt+0x845e>
  40a6e3:	cmp    r15d,0x4
  40a6e7:	jne    40a760 <__ctype_b_loc@plt+0x8490>
  40a6e9:	mov    rcx,QWORD PTR [rbp+0x0]
  40a6ed:	mov    al,BYTE PTR [rbx+0xb]
  40a6f0:	mov    rdx,0xffffffffffffffff
  40a6f7:	shlx   rax,rdx,rax
  40a6fc:	andn   eax,eax,DWORD PTR [rcx+0xc]
  40a702:	cdqe   
  40a704:	lea    rax,[rax+rax*4]
  40a708:	shl    rax,0x3
  40a70c:	add    rax,QWORD PTR [rbx+0x20]
  40a710:	cmp    DWORD PTR [rax+0x18],0x4
  40a714:	jne    40a720 <__ctype_b_loc@plt+0x8450>
  40a716:	cmp    QWORD PTR [rax+0x10],rcx
  40a71a:	je     40a870 <__ctype_b_loc@plt+0x85a0>
  40a720:	mov    rax,QWORD PTR [rax+0x20]
  40a724:	test   rax,rax
  40a727:	jne    40a710 <__ctype_b_loc@plt+0x8440>
  40a729:	jmp    40a850 <__ctype_b_loc@plt+0x8580>
  40a72e:	vmovsd xmm1,QWORD PTR [rbp+0x0]
  40a733:	vcvttsd2si eax,xmm1
  40a737:	vcvtsi2sd xmm0,xmm2,eax
  40a73b:	vucomisd xmm1,xmm0
  40a73f:	jne    40a760 <__ctype_b_loc@plt+0x8490>
  40a741:	jp     40a760 <__ctype_b_loc@plt+0x8490>
  40a743:	lea    ecx,[rax-0x1]
  40a746:	cmp    ecx,DWORD PTR [rbx+0x38]
  40a749:	jae    40a7db <__ctype_b_loc@plt+0x850b>
  40a74f:	movsxd rax,ecx
  40a752:	shl    rax,0x4
  40a756:	add    rax,QWORD PTR [rbx+0x18]
  40a75a:	jmp    40a870 <__ctype_b_loc@plt+0x85a0>
  40a75f:	nop
  40a760:	mov    rdi,rbx
  40a763:	mov    rsi,rbp
  40a766:	call   409bf0 <__ctype_b_loc@plt+0x7920>
  40a76b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a770:	cmp    DWORD PTR [rax+0x18],r15d
  40a774:	jne    40a7d0 <__ctype_b_loc@plt+0x8500>
  40a776:	cmp    r15d,0x3
  40a77a:	ja     40a7a0 <__ctype_b_loc@plt+0x84d0>
  40a77c:	mov    ecx,r15d
  40a77f:	movsxd rcx,DWORD PTR [r13+rcx*4+0x0]
  40a784:	add    rcx,r13
  40a787:	jmp    rcx
  40a789:	mov    ecx,DWORD PTR [rax+0x10]
  40a78c:	cmp    ecx,DWORD PTR [rbp+0x0]
  40a78f:	jne    40a7d0 <__ctype_b_loc@plt+0x8500>
  40a791:	jmp    40a870 <__ctype_b_loc@plt+0x85a0>
  40a796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a7a0:	mov    rcx,QWORD PTR [rax+0x10]
  40a7a4:	cmp    rcx,QWORD PTR [rbp+0x0]
  40a7a8:	jne    40a7d0 <__ctype_b_loc@plt+0x8500>
  40a7aa:	jmp    40a870 <__ctype_b_loc@plt+0x85a0>
  40a7af:	vmovq  xmm0,QWORD PTR [rax+0x10]
  40a7b4:	vucomisd xmm0,QWORD PTR [rbp+0x0]
  40a7b9:	jne    40a7d0 <__ctype_b_loc@plt+0x8500>
  40a7bb:	jnp    40a870 <__ctype_b_loc@plt+0x85a0>
  40a7c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a7cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a7d0:	mov    rax,QWORD PTR [rax+0x20]
  40a7d4:	test   rax,rax
  40a7d7:	jne    40a770 <__ctype_b_loc@plt+0x84a0>
  40a7d9:	jmp    40a850 <__ctype_b_loc@plt+0x8580>
  40a7db:	test   eax,eax
  40a7dd:	je     40a81d <__ctype_b_loc@plt+0x854d>
  40a7df:	vmovq  rcx,xmm0
  40a7e4:	mov    rax,rcx
  40a7e7:	shr    rax,0x20
  40a7eb:	add    eax,ecx
  40a7ed:	mov    cl,BYTE PTR [rbx+0xb]
  40a7f0:	mov    rdx,0xffffffffffffffff
  40a7f7:	shlx   rcx,rdx,rcx
  40a7fc:	or     rcx,0x1
  40a800:	xor    rcx,0xfffffffffffffffe
  40a804:	xor    edx,edx
  40a806:	div    rcx
  40a809:	lea    rax,[rdx+rdx*4]
  40a80d:	shl    rax,0x3
  40a811:	add    rax,QWORD PTR [rbx+0x20]
  40a815:	cmp    DWORD PTR [rax+0x18],0x3
  40a819:	jne    40a843 <__ctype_b_loc@plt+0x8573>
  40a81b:	jmp    40a836 <__ctype_b_loc@plt+0x8566>
  40a81d:	mov    rax,QWORD PTR [rbx+0x20]
  40a821:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a82b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a830:	cmp    DWORD PTR [rax+0x18],0x3
  40a834:	jne    40a843 <__ctype_b_loc@plt+0x8573>
  40a836:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40a83b:	vucomisd xmm1,xmm0
  40a83f:	jne    40a843 <__ctype_b_loc@plt+0x8573>
  40a841:	jnp    40a870 <__ctype_b_loc@plt+0x85a0>
  40a843:	mov    rax,QWORD PTR [rax+0x20]
  40a847:	test   rax,rax
  40a84a:	jne    40a830 <__ctype_b_loc@plt+0x8560>
  40a84c:	nop    DWORD PTR [rax+0x0]
  40a850:	mov    BYTE PTR [rbx+0xa],0x0
  40a854:	cmp    r15d,0x3
  40a858:	je     40a882 <__ctype_b_loc@plt+0x85b2>
  40a85a:	test   r15d,r15d
  40a85d:	jne    40a89f <__ctype_b_loc@plt+0x85cf>
  40a85f:	xor    eax,eax
  40a861:	mov    rdi,QWORD PTR [rsp]
  40a865:	lea    rsi,[rip+0x20697]        # 42af03 <__ctype_b_loc@plt+0x28c33>
  40a86c:	jmp    40a89a <__ctype_b_loc@plt+0x85ca>
  40a86e:	xchg   ax,ax
  40a870:	mov    BYTE PTR [rbx+0xa],0x0
  40a874:	lea    rcx,[rip+0x2029d]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40a87b:	cmp    rax,rcx
  40a87e:	jne    40a8ae <__ctype_b_loc@plt+0x85de>
  40a880:	jmp    40a854 <__ctype_b_loc@plt+0x8584>
  40a882:	vmovq  xmm0,QWORD PTR [rbp+0x0]
  40a887:	vucomisd xmm0,xmm0
  40a88b:	jnp    40a89f <__ctype_b_loc@plt+0x85cf>
  40a88d:	xor    eax,eax
  40a88f:	mov    rdi,QWORD PTR [rsp]
  40a893:	lea    rsi,[rip+0x2067c]        # 42af16 <__ctype_b_loc@plt+0x28c46>
  40a89a:	call   404080 <__ctype_b_loc@plt+0x1db0>
  40a89f:	mov    rdi,QWORD PTR [rsp]
  40a8a3:	mov    rsi,rbx
  40a8a6:	mov    rdx,rbp
  40a8a9:	call   409ca0 <__ctype_b_loc@plt+0x79d0>
  40a8ae:	mov    rcx,QWORD PTR [r14-0x8]
  40a8b2:	mov    QWORD PTR [rax],rcx
  40a8b5:	mov    ecx,DWORD PTR [r14]
  40a8b8:	mov    DWORD PTR [rax+0x8],ecx
  40a8bb:	mov    rcx,QWORD PTR [rsp+0x18]
  40a8c0:	add    r12,0xffffffffffffffff
  40a8c4:	test   r12d,r12d
  40a8c7:	jns    40a6b0 <__ctype_b_loc@plt+0x83e0>
  40a8cd:	lea    rax,[rip+0x20254]        # 42ab28 <__ctype_b_loc@plt+0x28858>
  40a8d4:	cmp    rcx,rax
  40a8d7:	je     40a903 <__ctype_b_loc@plt+0x8633>
  40a8d9:	mov    eax,0x28
  40a8de:	mov    rdx,QWORD PTR [rsp+0x10]
  40a8e3:	shlx   rbx,rax,rdx
  40a8e8:	mov    rax,QWORD PTR [rsp]
  40a8ec:	mov    rbp,QWORD PTR [rax+0x20]
  40a8f0:	mov    rdi,QWORD PTR [rbp+0x18]
  40a8f4:	mov    rsi,rcx
  40a8f7:	xor    ecx,ecx
  40a8f9:	mov    rdx,rbx
  40a8fc:	call   QWORD PTR [rbp+0x10]
  40a8ff:	sub    QWORD PTR [rbp+0x78],rbx
  40a903:	add    rsp,0x38
  40a907:	pop    rbx
  40a908:	pop    r12
  40a90a:	pop    r13
  40a90c:	pop    r14
  40a90e:	pop    r15
  40a910:	pop    rbp
  40a911:	ret    
  40a912:	mov    rax,QWORD PTR [rsp]
  40a916:	mov    rdi,QWORD PTR [rax+0xa8]
  40a91d:	test   rdi,rdi
  40a920:	jne    40a960 <__ctype_b_loc@plt+0x8690>
  40a922:	mov    rax,QWORD PTR [rsp]
  40a926:	mov    BYTE PTR [rax+0xa],0x4
  40a92a:	mov    rax,QWORD PTR [rax+0x20]
  40a92e:	cmp    QWORD PTR [rax+0x98],0x0
  40a936:	je     40a956 <__ctype_b_loc@plt+0x8686>
  40a938:	mov    esi,0x4
  40a93d:	mov    rbx,QWORD PTR [rsp]
  40a941:	mov    rdi,rbx
  40a944:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  40a949:	mov    rax,QWORD PTR [rbx+0x20]
  40a94d:	mov    rdi,rbx
  40a950:	call   QWORD PTR [rax+0x98]
  40a956:	mov    edi,0x1
  40a95b:	call   402280 <exit@plt>
  40a960:	mov    DWORD PTR [rdi+0xd0],0x4
  40a96a:	add    rdi,0x8
  40a96e:	mov    esi,0x1
  40a973:	call   402230 <longjmp@plt>
  40a978:	nop    DWORD PTR [rax+rax*1+0x0]
  40a980:	push   rbp
  40a981:	push   r15
  40a983:	push   r14
  40a985:	push   r13
  40a987:	push   r12
  40a989:	push   rbx
  40a98a:	sub    rsp,0x18
  40a98e:	mov    r14,rsi
  40a991:	test   edx,edx
  40a993:	je     40a9c2 <__ctype_b_loc@plt+0x86f2>
  40a995:	mov    r13,rdi
  40a998:	add    edx,0xffffffff
  40a99b:	mov    eax,0xffffffff
  40a9a0:	cmp    edx,0x100
  40a9a6:	jb     40a9d8 <__ctype_b_loc@plt+0x8708>
  40a9a8:	mov    eax,0xffffffff
  40a9ad:	mov    ecx,edx
  40a9af:	nop
  40a9b0:	add    eax,0x8
  40a9b3:	shr    ecx,0x8
  40a9b6:	cmp    edx,0xffff
  40a9bc:	mov    edx,ecx
  40a9be:	ja     40a9b0 <__ctype_b_loc@plt+0x86e0>
  40a9c0:	jmp    40a9da <__ctype_b_loc@plt+0x870a>
  40a9c2:	lea    rbx,[rip+0x2015f]        # 42ab28 <__ctype_b_loc@plt+0x28858>
  40a9c9:	mov    QWORD PTR [r14+0x20],rbx
  40a9cd:	xor    r12d,r12d
  40a9d0:	xor    r15d,r15d
  40a9d3:	jmp    40abaa <__ctype_b_loc@plt+0x88da>
  40a9d8:	mov    ecx,edx
  40a9da:	mov    ecx,ecx
  40a9dc:	lea    rdx,[rip+0x2016d]        # 42ab50 <__ctype_b_loc@plt+0x28880>
  40a9e3:	movzx  ecx,BYTE PTR [rcx+rdx*1]
  40a9e7:	lea    edx,[rax+rcx*1]
  40a9ea:	lea    r12d,[rax+rcx*1]
  40a9ee:	add    r12d,0x1
  40a9f2:	cmp    edx,0x1e
  40a9f5:	jl     40aa08 <__ctype_b_loc@plt+0x8738>
  40a9f7:	lea    rsi,[rip+0x20911]        # 42b30f <__ctype_b_loc@plt+0x2903f>
  40a9fe:	xor    eax,eax
  40aa00:	mov    rdi,r13
  40aa03:	call   404080 <__ctype_b_loc@plt+0x1db0>
  40aa08:	mov    eax,0x1
  40aa0d:	shlx   rbp,rax,r12
  40aa12:	mov    r15,rbp
  40aa15:	shl    r15,0x20
  40aa19:	movabs rax,0x100000000
  40aa23:	add    rax,r15
  40aa26:	sar    rax,0x20
  40aa2a:	movabs rcx,0x666666666666666
  40aa34:	cmp    rax,rcx
  40aa37:	ja     40aa7d <__ctype_b_loc@plt+0x87ad>
  40aa39:	mov    QWORD PTR [rsp+0x10],r12
  40aa3e:	mov    rax,r15
  40aa41:	sar    rax,0x1d
  40aa45:	lea    r12,[rax+rax*4]
  40aa49:	mov    QWORD PTR [rsp+0x8],r13
  40aa4e:	mov    r13,QWORD PTR [r13+0x20]
  40aa52:	mov    rdi,QWORD PTR [r13+0x18]
  40aa56:	xor    esi,esi
  40aa58:	xor    edx,edx
  40aa5a:	mov    rcx,r12
  40aa5d:	call   QWORD PTR [r13+0x10]
  40aa61:	mov    rbx,rax
  40aa64:	test   r15,r15
  40aa67:	je     40aa72 <__ctype_b_loc@plt+0x87a2>
  40aa69:	test   rbx,rbx
  40aa6c:	je     40abc9 <__ctype_b_loc@plt+0x88f9>
  40aa72:	add    QWORD PTR [r13+0x78],r12
  40aa76:	mov    r12,QWORD PTR [rsp+0x10]
  40aa7b:	jmp    40aa90 <__ctype_b_loc@plt+0x87c0>
  40aa7d:	lea    rsi,[rip+0x20335]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  40aa84:	xor    ebx,ebx
  40aa86:	xor    eax,eax
  40aa88:	mov    rdi,r13
  40aa8b:	call   404080 <__ctype_b_loc@plt+0x1db0>
  40aa90:	mov    QWORD PTR [r14+0x20],rbx
  40aa94:	test   ebp,ebp
  40aa96:	jle    40aba6 <__ctype_b_loc@plt+0x88d6>
  40aa9c:	mov    eax,ebp
  40aa9e:	lea    rcx,[rax-0x1]
  40aaa2:	and    ebp,0x3
  40aaa5:	cmp    rcx,0x3
  40aaa9:	jae    40aabc <__ctype_b_loc@plt+0x87ec>
  40aaab:	xor    ecx,ecx
  40aaad:	cmp    r12d,0x1
  40aab1:	jbe    40ab67 <__ctype_b_loc@plt+0x8897>
  40aab7:	jmp    40aba6 <__ctype_b_loc@plt+0x88d6>
  40aabc:	sub    rax,rbp
  40aabf:	xor    edx,edx
  40aac1:	xor    ecx,ecx
  40aac3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aacd:	nop    DWORD PTR [rax]
  40aad0:	mov    QWORD PTR [rbx+rdx*1+0x20],0x0
  40aad9:	mov    DWORD PTR [rbx+rdx*1+0x18],0x0
  40aae1:	mov    DWORD PTR [rbx+rdx*1+0x8],0x0
  40aae9:	mov    rsi,QWORD PTR [r14+0x20]
  40aaed:	mov    QWORD PTR [rsi+rdx*1+0x48],0x0
  40aaf6:	mov    DWORD PTR [rsi+rdx*1+0x40],0x0
  40aafe:	mov    DWORD PTR [rsi+rdx*1+0x30],0x0
  40ab06:	mov    rsi,QWORD PTR [r14+0x20]
  40ab0a:	mov    QWORD PTR [rsi+rdx*1+0x70],0x0
  40ab13:	mov    DWORD PTR [rsi+rdx*1+0x68],0x0
  40ab1b:	mov    DWORD PTR [rsi+rdx*1+0x58],0x0
  40ab23:	mov    rsi,QWORD PTR [r14+0x20]
  40ab27:	mov    QWORD PTR [rsi+rdx*1+0x98],0x0
  40ab33:	mov    DWORD PTR [rsi+rdx*1+0x90],0x0
  40ab3e:	mov    DWORD PTR [rsi+rdx*1+0x80],0x0
  40ab49:	add    rcx,0x4
  40ab4d:	mov    rbx,QWORD PTR [r14+0x20]
  40ab51:	add    rdx,0xa0
  40ab58:	cmp    rax,rcx
  40ab5b:	jne    40aad0 <__ctype_b_loc@plt+0x8800>
  40ab61:	cmp    r12d,0x1
  40ab65:	ja     40aba6 <__ctype_b_loc@plt+0x88d6>
  40ab67:	lea    rax,[rcx+rcx*4]
  40ab6b:	lea    rax,[rax*8+0x20]
  40ab73:	neg    rbp
  40ab76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ab80:	mov    QWORD PTR [rbx+rax*1],0x0
  40ab88:	mov    DWORD PTR [rbx+rax*1-0x8],0x0
  40ab90:	mov    DWORD PTR [rbx+rax*1-0x18],0x0
  40ab98:	mov    rbx,QWORD PTR [r14+0x20]
  40ab9c:	add    rax,0x28
  40aba0:	add    rbp,0x1
  40aba4:	jne    40ab80 <__ctype_b_loc@plt+0x88b0>
  40aba6:	sar    r15,0x20
  40abaa:	mov    BYTE PTR [r14+0xb],r12b
  40abae:	lea    rax,[r15+r15*4]
  40abb2:	lea    rax,[rbx+rax*8]
  40abb6:	mov    QWORD PTR [r14+0x28],rax
  40abba:	add    rsp,0x18
  40abbe:	pop    rbx
  40abbf:	pop    r12
  40abc1:	pop    r13
  40abc3:	pop    r14
  40abc5:	pop    r15
  40abc7:	pop    rbp
  40abc8:	ret    
  40abc9:	mov    rax,QWORD PTR [rsp+0x8]
  40abce:	mov    rdi,QWORD PTR [rax+0xa8]
  40abd5:	test   rdi,rdi
  40abd8:	jne    40ac1a <__ctype_b_loc@plt+0x894a>
  40abda:	mov    rax,QWORD PTR [rsp+0x8]
  40abdf:	mov    BYTE PTR [rax+0xa],0x4
  40abe3:	mov    rax,QWORD PTR [rax+0x20]
  40abe7:	cmp    QWORD PTR [rax+0x98],0x0
  40abef:	je     40ac10 <__ctype_b_loc@plt+0x8940>
  40abf1:	mov    esi,0x4
  40abf6:	mov    rbx,QWORD PTR [rsp+0x8]
  40abfb:	mov    rdi,rbx
  40abfe:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  40ac03:	mov    rax,QWORD PTR [rbx+0x20]
  40ac07:	mov    rdi,rbx
  40ac0a:	call   QWORD PTR [rax+0x98]
  40ac10:	mov    edi,0x1
  40ac15:	call   402280 <exit@plt>
  40ac1a:	mov    DWORD PTR [rdi+0xd0],0x4
  40ac24:	add    rdi,0x8
  40ac28:	mov    esi,0x1
  40ac2d:	call   402230 <longjmp@plt>
  40ac32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ac3c:	nop    DWORD PTR [rax+0x0]
  40ac40:	push   r15
  40ac42:	push   r14
  40ac44:	push   r12
  40ac46:	push   rbx
  40ac47:	push   rax
  40ac48:	mov    r14,rsi
  40ac4b:	mov    r15,rdi
  40ac4e:	mov    rsi,rsp
  40ac51:	call   4020b0 <strtod@plt>
  40ac56:	vmovsd QWORD PTR [r14],xmm0
  40ac5b:	mov    rbx,QWORD PTR [rsp]
  40ac5f:	cmp    rbx,r15
  40ac62:	je     40acdf <__ctype_b_loc@plt+0x8a0f>
  40ac64:	mov    r12b,BYTE PTR [rbx]
  40ac67:	mov    eax,r12d
  40ac6a:	or     al,0x20
  40ac6c:	cmp    al,0x78
  40ac6e:	jne    40aca5 <__ctype_b_loc@plt+0x89d5>
  40ac70:	mov    rsi,rsp
  40ac73:	mov    edx,0x10
  40ac78:	mov    rdi,r15
  40ac7b:	call   402250 <strtoul@plt>
  40ac80:	vmovq  xmm0,rax
  40ac85:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x1ffe3]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  40ac8d:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x1ffeb]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  40ac95:	vhaddpd xmm0,xmm0,xmm0
  40ac99:	vmovlpd QWORD PTR [r14],xmm0
  40ac9e:	mov    rbx,QWORD PTR [rsp]
  40aca2:	mov    r12b,BYTE PTR [rbx]
  40aca5:	test   r12b,r12b
  40aca8:	je     40ace3 <__ctype_b_loc@plt+0x8a13>
  40acaa:	call   4022d0 <__ctype_b_loc@plt>
  40acaf:	mov    rax,QWORD PTR [rax]
  40acb2:	movzx  ecx,r12b
  40acb6:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40acbb:	je     40acd5 <__ctype_b_loc@plt+0x8a05>
  40acbd:	nop    DWORD PTR [rax]
  40acc0:	movzx  r12d,BYTE PTR [rbx+0x1]
  40acc5:	add    rbx,0x1
  40acc9:	test   BYTE PTR [rax+r12*2+0x1],0x20
  40accf:	jne    40acc0 <__ctype_b_loc@plt+0x89f0>
  40acd1:	mov    QWORD PTR [rsp],rbx
  40acd5:	xor    eax,eax
  40acd7:	test   r12b,r12b
  40acda:	sete   al
  40acdd:	jmp    40ace8 <__ctype_b_loc@plt+0x8a18>
  40acdf:	xor    eax,eax
  40ace1:	jmp    40ace8 <__ctype_b_loc@plt+0x8a18>
  40ace3:	mov    eax,0x1
  40ace8:	add    rsp,0x8
  40acec:	pop    rbx
  40aced:	pop    r12
  40acef:	pop    r14
  40acf1:	pop    r15
  40acf3:	ret    
  40acf4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40acfe:	xchg   ax,ax
  40ad00:	push   rbp
  40ad01:	push   r15
  40ad03:	push   r14
  40ad05:	push   r13
  40ad07:	push   r12
  40ad09:	push   rbx
  40ad0a:	sub    rsp,0x18
  40ad0e:	mov    r15,QWORD PTR [rdi+0x38]
  40ad12:	or     BYTE PTR [r15+0x9],0x4
  40ad17:	mov    cl,BYTE PTR [r15+0x8]
  40ad1b:	xor    eax,eax
  40ad1d:	add    cl,0xfb
  40ad20:	cmp    cl,0x4
  40ad23:	ja     40b3a7 <__ctype_b_loc@plt+0x90d7>
  40ad29:	mov    r14,rdi
  40ad2c:	movzx  ecx,cl
  40ad2f:	lea    rdx,[rip+0x1f4e6]        # 42a21c <__ctype_b_loc@plt+0x27f4c>
  40ad36:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40ad3a:	add    rcx,rdx
  40ad3d:	jmp    rcx
  40ad3f:	mov    rax,QWORD PTR [r15+0x30]
  40ad43:	mov    QWORD PTR [r14+0x38],rax
  40ad47:	mov    rsi,QWORD PTR [r15+0x10]
  40ad4b:	test   rsi,rsi
  40ad4e:	je     40b260 <__ctype_b_loc@plt+0x8f90>
  40ad54:	test   BYTE PTR [rsi+0x9],0x3
  40ad58:	je     40ad6f <__ctype_b_loc@plt+0x8a9f>
  40ad5a:	mov    rdi,r14
  40ad5d:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40ad62:	mov    rsi,QWORD PTR [r15+0x10]
  40ad66:	test   rsi,rsi
  40ad69:	je     40b260 <__ctype_b_loc@plt+0x8f90>
  40ad6f:	mov    al,BYTE PTR [rsi+0xa]
  40ad72:	xor    ebx,ebx
  40ad74:	mov    DWORD PTR [rsp],0x0
  40ad7b:	test   al,0x8
  40ad7d:	jne    40b269 <__ctype_b_loc@plt+0x8f99>
  40ad83:	mov    rdx,QWORD PTR [r14+0x140]
  40ad8a:	mov    cl,BYTE PTR [rsi+0xb]
  40ad8d:	mov    rdi,0xffffffffffffffff
  40ad94:	shlx   rcx,rdi,rcx
  40ad99:	andn   ecx,ecx,DWORD PTR [rdx+0xc]
  40ad9f:	movsxd rcx,ecx
  40ada2:	lea    rdi,[rcx+rcx*4]
  40ada6:	shl    rdi,0x3
  40adaa:	add    rdi,QWORD PTR [rsi+0x20]
  40adae:	lea    rcx,[rip+0x1fd63]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40adb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40adbf:	nop
  40adc0:	cmp    DWORD PTR [rdi+0x18],0x4
  40adc4:	jne    40add0 <__ctype_b_loc@plt+0x8b00>
  40adc6:	cmp    QWORD PTR [rdi+0x10],rdx
  40adca:	je     40b1ac <__ctype_b_loc@plt+0x8edc>
  40add0:	mov    rdi,QWORD PTR [rdi+0x20]
  40add4:	test   rdi,rdi
  40add7:	jne    40adc0 <__ctype_b_loc@plt+0x8af0>
  40add9:	jmp    40b1af <__ctype_b_loc@plt+0x8edf>
  40adde:	mov    rax,QWORD PTR [r15+0xa0]
  40ade5:	mov    QWORD PTR [r14+0x38],rax
  40ade9:	mov    rax,QWORD PTR [r14+0x40]
  40aded:	mov    QWORD PTR [r15+0xa0],rax
  40adf4:	mov    QWORD PTR [r14+0x40],r15
  40adf8:	and    BYTE PTR [r15+0x9],0xfb
  40adfd:	cmp    DWORD PTR [r15+0x80],0x4
  40ae05:	jl     40ae19 <__ctype_b_loc@plt+0x8b49>
  40ae07:	mov    rsi,QWORD PTR [r15+0x78]
  40ae0b:	test   BYTE PTR [rsi+0x9],0x3
  40ae0f:	je     40ae19 <__ctype_b_loc@plt+0x8b49>
  40ae11:	mov    rdi,r14
  40ae14:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40ae19:	mov    rax,QWORD PTR [r15+0x10]
  40ae1d:	mov    rcx,QWORD PTR [r15+0x28]
  40ae21:	mov    rdx,QWORD PTR [r15+0x50]
  40ae25:	mov    rbp,rax
  40ae28:	cmp    rdx,rcx
  40ae2b:	ja     40ae44 <__ctype_b_loc@plt+0x8b74>
  40ae2d:	mov    rbp,rax
  40ae30:	mov    rsi,QWORD PTR [rdx+0x10]
  40ae34:	cmp    rbp,rsi
  40ae37:	cmovb  rbp,rsi
  40ae3b:	add    rdx,0x28
  40ae3f:	cmp    rdx,rcx
  40ae42:	jbe    40ae30 <__ctype_b_loc@plt+0x8b60>
  40ae44:	mov    rbx,QWORD PTR [r15+0x40]
  40ae48:	cmp    rbx,rax
  40ae4b:	jae    40ae8b <__ctype_b_loc@plt+0x8bbb>
  40ae4d:	nop    DWORD PTR [rax]
  40ae50:	cmp    DWORD PTR [rbx+0x8],0x4
  40ae54:	jl     40ae6b <__ctype_b_loc@plt+0x8b9b>
  40ae56:	mov    rsi,QWORD PTR [rbx]
  40ae59:	test   BYTE PTR [rsi+0x9],0x3
  40ae5d:	je     40ae6b <__ctype_b_loc@plt+0x8b9b>
  40ae5f:	mov    rdi,r14
  40ae62:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40ae67:	mov    rax,QWORD PTR [r15+0x10]
  40ae6b:	add    rbx,0x10
  40ae6f:	cmp    rbx,rax
  40ae72:	jb     40ae50 <__ctype_b_loc@plt+0x8b80>
  40ae74:	jmp    40ae8b <__ctype_b_loc@plt+0x8bbb>
  40ae76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ae80:	mov    DWORD PTR [rbx+0x8],0x0
  40ae87:	add    rbx,0x10
  40ae8b:	cmp    rbx,rbp
  40ae8e:	jbe    40ae80 <__ctype_b_loc@plt+0x8bb0>
  40ae90:	movsxd rax,DWORD PTR [r15+0x5c]
  40ae94:	cmp    rax,0x4e21
  40ae9a:	jl     40b059 <__ctype_b_loc@plt+0x8d89>
  40aea0:	add    r15,0x58
  40aea4:	mov    rbx,r15
  40aea7:	jmp    40b190 <__ctype_b_loc@plt+0x8ec0>
  40aeac:	mov    rax,QWORD PTR [r15+0x10]
  40aeb0:	mov    QWORD PTR [r14+0x38],rax
  40aeb4:	mov    rsi,QWORD PTR [r15+0x18]
  40aeb8:	test   BYTE PTR [rsi+0x9],0x3
  40aebc:	je     40aec6 <__ctype_b_loc@plt+0x8bf6>
  40aebe:	mov    rdi,r14
  40aec1:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40aec6:	cmp    BYTE PTR [r15+0xa],0x0
  40aecb:	je     40b0f9 <__ctype_b_loc@plt+0x8e29>
  40aed1:	mov    al,BYTE PTR [r15+0xb]
  40aed5:	test   al,al
  40aed7:	je     40b146 <__ctype_b_loc@plt+0x8e76>
  40aedd:	lea    rbx,[r15+0x30]
  40aee1:	xor    ebp,ebp
  40aee3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aeed:	nop    DWORD PTR [rax]
  40aef0:	cmp    DWORD PTR [rbx],0x4
  40aef3:	jl     40af0c <__ctype_b_loc@plt+0x8c3c>
  40aef5:	mov    rsi,QWORD PTR [rbx-0x8]
  40aef9:	test   BYTE PTR [rsi+0x9],0x3
  40aefd:	je     40af0c <__ctype_b_loc@plt+0x8c3c>
  40aeff:	mov    rdi,r14
  40af02:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40af07:	movzx  eax,BYTE PTR [r15+0xb]
  40af0c:	add    rbp,0x1
  40af10:	movzx  ecx,al
  40af13:	add    rbx,0x10
  40af17:	cmp    rbp,rcx
  40af1a:	jb     40aef0 <__ctype_b_loc@plt+0x8c20>
  40af1c:	jmp    40b148 <__ctype_b_loc@plt+0x8e78>
  40af21:	mov    rax,QWORD PTR [r15+0x68]
  40af25:	mov    QWORD PTR [r14+0x38],rax
  40af29:	mov    rax,QWORD PTR [r15+0x40]
  40af2d:	test   rax,rax
  40af30:	je     40af36 <__ctype_b_loc@plt+0x8c66>
  40af32:	and    BYTE PTR [rax+0x9],0xfc
  40af36:	mov    eax,DWORD PTR [r15+0x4c]
  40af3a:	test   eax,eax
  40af3c:	jle    40af81 <__ctype_b_loc@plt+0x8cb1>
  40af3e:	xor    ebx,ebx
  40af40:	mov    ebp,0x8
  40af45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40af4f:	nop
  40af50:	mov    rcx,QWORD PTR [r15+0x10]
  40af54:	cmp    DWORD PTR [rcx+rbp*1],0x4
  40af58:	jl     40af71 <__ctype_b_loc@plt+0x8ca1>
  40af5a:	mov    rsi,QWORD PTR [rcx+rbp*1-0x8]
  40af5f:	test   BYTE PTR [rsi+0x9],0x3
  40af63:	je     40af71 <__ctype_b_loc@plt+0x8ca1>
  40af65:	mov    rdi,r14
  40af68:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40af6d:	mov    eax,DWORD PTR [r15+0x4c]
  40af71:	add    rbx,0x1
  40af75:	movsxd rcx,eax
  40af78:	add    rbp,0x10
  40af7c:	cmp    rbx,rcx
  40af7f:	jl     40af50 <__ctype_b_loc@plt+0x8c80>
  40af81:	mov    eax,DWORD PTR [r15+0x48]
  40af85:	test   eax,eax
  40af87:	jle    40afb1 <__ctype_b_loc@plt+0x8ce1>
  40af89:	xor    ecx,ecx
  40af8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40af90:	mov    rdx,QWORD PTR [r15+0x38]
  40af94:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40af98:	test   rdx,rdx
  40af9b:	je     40afa5 <__ctype_b_loc@plt+0x8cd5>
  40af9d:	and    BYTE PTR [rdx+0x9],0xfc
  40afa1:	mov    eax,DWORD PTR [r15+0x48]
  40afa5:	add    rcx,0x1
  40afa9:	movsxd rdx,eax
  40afac:	cmp    rcx,rdx
  40afaf:	jl     40af90 <__ctype_b_loc@plt+0x8cc0>
  40afb1:	mov    eax,DWORD PTR [r15+0x58]
  40afb5:	test   eax,eax
  40afb7:	jle    40afeb <__ctype_b_loc@plt+0x8d1b>
  40afb9:	xor    ebx,ebx
  40afbb:	nop    DWORD PTR [rax+rax*1+0x0]
  40afc0:	mov    rcx,QWORD PTR [r15+0x20]
  40afc4:	mov    rsi,QWORD PTR [rcx+rbx*8]
  40afc8:	test   rsi,rsi
  40afcb:	je     40afdf <__ctype_b_loc@plt+0x8d0f>
  40afcd:	test   BYTE PTR [rsi+0x9],0x3
  40afd1:	je     40afdf <__ctype_b_loc@plt+0x8d0f>
  40afd3:	mov    rdi,r14
  40afd6:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40afdb:	mov    eax,DWORD PTR [r15+0x58]
  40afdf:	add    rbx,0x1
  40afe3:	movsxd rcx,eax
  40afe6:	cmp    rbx,rcx
  40afe9:	jl     40afc0 <__ctype_b_loc@plt+0x8cf0>
  40afeb:	movsxd rcx,DWORD PTR [r15+0x5c]
  40afef:	test   rcx,rcx
  40aff2:	jle    40b029 <__ctype_b_loc@plt+0x8d59>
  40aff4:	xor    eax,eax
  40aff6:	mov    esi,ecx
  40aff8:	xor    edx,edx
  40affa:	nop    WORD PTR [rax+rax*1+0x0]
  40b000:	mov    rcx,QWORD PTR [r15+0x30]
  40b004:	mov    rcx,QWORD PTR [rcx+rax*1]
  40b008:	test   rcx,rcx
  40b00b:	je     40b015 <__ctype_b_loc@plt+0x8d45>
  40b00d:	and    BYTE PTR [rcx+0x9],0xfc
  40b011:	mov    esi,DWORD PTR [r15+0x5c]
  40b015:	add    rdx,0x1
  40b019:	movsxd rcx,esi
  40b01c:	add    rax,0x10
  40b020:	cmp    rdx,rcx
  40b023:	jl     40b000 <__ctype_b_loc@plt+0x8d30>
  40b025:	mov    eax,DWORD PTR [r15+0x58]
  40b029:	movsxd rdx,DWORD PTR [r15+0x50]
  40b02d:	cdqe   
  40b02f:	movsxd rsi,DWORD PTR [r15+0x4c]
  40b033:	add    rsi,rcx
  40b036:	movsxd rcx,DWORD PTR [r15+0x54]
  40b03a:	movsxd rdi,DWORD PTR [r15+0x48]
  40b03e:	shl    rsi,0x4
  40b042:	add    rdi,rax
  40b045:	add    rcx,rdx
  40b048:	lea    rax,[rsi+rcx*4]
  40b04c:	lea    rax,[rax+rdi*8]
  40b050:	add    rax,0x78
  40b054:	jmp    40b3a7 <__ctype_b_loc@plt+0x90d7>
  40b059:	sub    rbp,QWORD PTR [r15+0x40]
  40b05d:	cmp    eax,0x11
  40b060:	jl     40b162 <__ctype_b_loc@plt+0x8e92>
  40b066:	mov    rcx,QWORD PTR [r15+0x28]
  40b06a:	mov    r14,QWORD PTR [r15+0x50]
  40b06e:	sub    rcx,r14
  40b071:	shr    rcx,0x3
  40b075:	imul   ecx,ecx,0x33333334
  40b07b:	cmp    ecx,eax
  40b07d:	jge    40b162 <__ctype_b_loc@plt+0x8e92>
  40b083:	mov    ecx,eax
  40b085:	mov    edx,0xf01
  40b08a:	bextr  r13d,ecx,edx
  40b08f:	shl    rax,0x3
  40b093:	lea    rdx,[rax+rax*4]
  40b097:	lea    rax,[r13*8+0x0]
  40b09f:	lea    r12,[rax+rax*4]
  40b0a3:	mov    rbx,QWORD PTR [r15+0x20]
  40b0a7:	mov    rdi,QWORD PTR [rbx+0x18]
  40b0ab:	mov    rsi,r14
  40b0ae:	mov    QWORD PTR [rsp],rdx
  40b0b2:	mov    rcx,r12
  40b0b5:	call   QWORD PTR [rbx+0x10]
  40b0b8:	test   r13d,r13d
  40b0bb:	je     40b0c6 <__ctype_b_loc@plt+0x8df6>
  40b0bd:	test   rax,rax
  40b0c0:	je     40b3b6 <__ctype_b_loc@plt+0x90e6>
  40b0c6:	sub    r12,QWORD PTR [rsp]
  40b0ca:	add    QWORD PTR [rbx+0x78],r12
  40b0ce:	mov    QWORD PTR [r15+0x50],rax
  40b0d2:	mov    DWORD PTR [r15+0x5c],r13d
  40b0d6:	mov    rcx,QWORD PTR [r15+0x28]
  40b0da:	sub    rcx,r14
  40b0dd:	add    rcx,rax
  40b0e0:	mov    QWORD PTR [r15+0x28],rcx
  40b0e4:	mov    ecx,r13d
  40b0e7:	lea    rcx,[rcx+rcx*4]
  40b0eb:	lea    rax,[rax+rcx*8]
  40b0ef:	add    rax,0xffffffffffffffd8
  40b0f3:	mov    QWORD PTR [r15+0x48],rax
  40b0f7:	jmp    40b165 <__ctype_b_loc@plt+0x8e95>
  40b0f9:	mov    rsi,QWORD PTR [r15+0x20]
  40b0fd:	test   BYTE PTR [rsi+0x9],0x3
  40b101:	je     40b10b <__ctype_b_loc@plt+0x8e3b>
  40b103:	mov    rdi,r14
  40b106:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40b10b:	mov    al,BYTE PTR [r15+0xb]
  40b10f:	test   al,al
  40b111:	je     40b146 <__ctype_b_loc@plt+0x8e76>
  40b113:	xor    ebx,ebx
  40b115:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b11f:	nop
  40b120:	mov    rsi,QWORD PTR [r15+rbx*8+0x28]
  40b125:	test   BYTE PTR [rsi+0x9],0x3
  40b129:	je     40b138 <__ctype_b_loc@plt+0x8e68>
  40b12b:	mov    rdi,r14
  40b12e:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40b133:	movzx  eax,BYTE PTR [r15+0xb]
  40b138:	add    rbx,0x1
  40b13c:	movzx  ecx,al
  40b13f:	cmp    rbx,rcx
  40b142:	jb     40b120 <__ctype_b_loc@plt+0x8e50>
  40b144:	jmp    40b148 <__ctype_b_loc@plt+0x8e78>
  40b146:	xor    eax,eax
  40b148:	cmp    BYTE PTR [r15+0xa],0x1
  40b14d:	movzx  eax,al
  40b150:	mov    cl,0x4
  40b152:	sbb    cl,0x0
  40b155:	shlx   eax,eax,ecx
  40b15a:	add    eax,0x28
  40b15d:	jmp    40b3a7 <__ctype_b_loc@plt+0x90d7>
  40b162:	mov    r13d,eax
  40b165:	shr    rbp,0x2
  40b169:	and    ebp,0xfffffffc
  40b16c:	lea    rbx,[r15+0x58]
  40b170:	mov    esi,DWORD PTR [r15+0x58]
  40b174:	cmp    ebp,esi
  40b176:	jge    40b18d <__ctype_b_loc@plt+0x8ebd>
  40b178:	cmp    esi,0x5b
  40b17b:	jl     40b18d <__ctype_b_loc@plt+0x8ebd>
  40b17d:	shr    esi,1
  40b17f:	mov    rdi,r15
  40b182:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  40b187:	mov    eax,DWORD PTR [r15+0x5c]
  40b18b:	jmp    40b190 <__ctype_b_loc@plt+0x8ec0>
  40b18d:	mov    eax,r13d
  40b190:	movsxd rcx,DWORD PTR [rbx]
  40b193:	shl    rcx,0x4
  40b197:	cdqe   
  40b199:	lea    rax,[rax+rax*4]
  40b19d:	lea    rax,[rcx+rax*8]
  40b1a1:	add    rax,0xb8
  40b1a7:	jmp    40b3a7 <__ctype_b_loc@plt+0x90d7>
  40b1ac:	mov    rcx,rdi
  40b1af:	mov    edx,DWORD PTR [rcx+0x8]
  40b1b2:	test   edx,edx
  40b1b4:	je     40b25b <__ctype_b_loc@plt+0x8f8b>
  40b1ba:	xor    ebx,ebx
  40b1bc:	test   rcx,rcx
  40b1bf:	je     40b262 <__ctype_b_loc@plt+0x8f92>
  40b1c5:	mov    DWORD PTR [rsp],0x0
  40b1cc:	cmp    edx,0x4
  40b1cf:	jne    40b269 <__ctype_b_loc@plt+0x8f99>
  40b1d5:	mov    rbp,QWORD PTR [rcx]
  40b1d8:	add    rbp,0x18
  40b1dc:	mov    esi,0x6b
  40b1e1:	mov    rdi,rbp
  40b1e4:	call   4020f0 <strchr@plt>
  40b1e9:	mov    r12,rax
  40b1ec:	xor    ebx,ebx
  40b1ee:	test   rax,rax
  40b1f1:	setne  al
  40b1f4:	mov    DWORD PTR [rsp],eax
  40b1f7:	mov    bl,al
  40b1f9:	mov    esi,0x76
  40b1fe:	mov    rdi,rbp
  40b201:	call   4020f0 <strchr@plt>
  40b206:	mov    rcx,r12
  40b209:	or     rcx,rax
  40b20c:	je     40b236 <__ctype_b_loc@plt+0x8f66>
  40b20e:	test   rax,rax
  40b211:	setne  cl
  40b214:	mov    dl,BYTE PTR [r15+0x9]
  40b218:	and    dl,0xe7
  40b21b:	shl    cl,0x4
  40b21e:	movzx  ecx,cl
  40b221:	lea    ecx,[rcx+rbx*8]
  40b224:	or     cl,dl
  40b226:	mov    BYTE PTR [r15+0x9],cl
  40b22a:	mov    rcx,QWORD PTR [r14+0x48]
  40b22e:	mov    QWORD PTR [r15+0x30],rcx
  40b232:	mov    QWORD PTR [r14+0x48],r15
  40b236:	test   r12,r12
  40b239:	je     40b244 <__ctype_b_loc@plt+0x8f74>
  40b23b:	test   rax,rax
  40b23e:	jne    40b385 <__ctype_b_loc@plt+0x90b5>
  40b244:	test   rax,rax
  40b247:	je     40b269 <__ctype_b_loc@plt+0x8f99>
  40b249:	mov    QWORD PTR [rsp+0x10],rbx
  40b24e:	mov    bpl,0x1
  40b251:	mov    DWORD PTR [rsp+0xc],0x1
  40b259:	jmp    40b2c1 <__ctype_b_loc@plt+0x8ff1>
  40b25b:	or     al,0x8
  40b25d:	mov    BYTE PTR [rsi+0xa],al
  40b260:	xor    ebx,ebx
  40b262:	mov    DWORD PTR [rsp],0x0
  40b269:	mov    QWORD PTR [rsp+0x10],rbx
  40b26e:	movsxd rbp,DWORD PTR [r15+0x38]
  40b272:	test   rbp,rbp
  40b275:	je     40b2b7 <__ctype_b_loc@plt+0x8fe7>
  40b277:	mov    rbx,rbp
  40b27a:	shl    rbx,0x4
  40b27e:	add    rbx,0xfffffffffffffff8
  40b282:	neg    rbp
  40b285:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b28f:	nop
  40b290:	mov    rax,QWORD PTR [r15+0x18]
  40b294:	cmp    DWORD PTR [rax+rbx*1],0x4
  40b298:	jl     40b2ad <__ctype_b_loc@plt+0x8fdd>
  40b29a:	mov    rsi,QWORD PTR [rax+rbx*1-0x8]
  40b29f:	test   BYTE PTR [rsi+0x9],0x3
  40b2a3:	je     40b2ad <__ctype_b_loc@plt+0x8fdd>
  40b2a5:	mov    rdi,r14
  40b2a8:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40b2ad:	add    rbx,0xfffffffffffffff0
  40b2b1:	add    rbp,0x1
  40b2b5:	jne    40b290 <__ctype_b_loc@plt+0x8fc0>
  40b2b7:	mov    DWORD PTR [rsp+0xc],0x0
  40b2bf:	xor    ebp,ebp
  40b2c1:	mov    al,BYTE PTR [r15+0xb]
  40b2c5:	mov    ecx,0x1
  40b2ca:	shlx   rax,rcx,rax
  40b2cf:	test   eax,eax
  40b2d1:	mov    ecx,DWORD PTR [rsp]
  40b2d4:	je     40b37a <__ctype_b_loc@plt+0x90aa>
  40b2da:	movsxd r13,eax
  40b2dd:	lea    rax,[r13*4+0x0]
  40b2e5:	add    rax,r13
  40b2e8:	lea    r12,[rax*8-0x10]
  40b2f0:	neg    r13
  40b2f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b2fd:	nop    DWORD PTR [rax]
  40b300:	mov    rbx,QWORD PTR [r15+0x20]
  40b304:	cmp    DWORD PTR [rbx+r12*1-0x10],0x0
  40b30a:	je     40b360 <__ctype_b_loc@plt+0x9090>
  40b30c:	test   cl,cl
  40b30e:	jne    40b330 <__ctype_b_loc@plt+0x9060>
  40b310:	cmp    DWORD PTR [rbx+r12*1],0x4
  40b315:	jl     40b330 <__ctype_b_loc@plt+0x9060>
  40b317:	mov    rsi,QWORD PTR [rbx+r12*1-0x8]
  40b31c:	test   BYTE PTR [rsi+0x9],0x3
  40b320:	je     40b330 <__ctype_b_loc@plt+0x9060>
  40b322:	mov    rdi,r14
  40b325:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40b32a:	mov    ecx,DWORD PTR [rsp]
  40b32d:	nop    DWORD PTR [rax]
  40b330:	test   bpl,bpl
  40b333:	jne    40b370 <__ctype_b_loc@plt+0x90a0>
  40b335:	cmp    DWORD PTR [rbx+r12*1-0x10],0x4
  40b33b:	jl     40b370 <__ctype_b_loc@plt+0x90a0>
  40b33d:	mov    rsi,QWORD PTR [rbx+r12*1-0x18]
  40b342:	test   BYTE PTR [rsi+0x9],0x3
  40b346:	je     40b370 <__ctype_b_loc@plt+0x90a0>
  40b348:	mov    rdi,r14
  40b34b:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40b350:	mov    ecx,DWORD PTR [rsp]
  40b353:	jmp    40b370 <__ctype_b_loc@plt+0x90a0>
  40b355:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b35f:	nop
  40b360:	cmp    DWORD PTR [rbx+r12*1],0x4
  40b365:	jl     40b370 <__ctype_b_loc@plt+0x90a0>
  40b367:	mov    DWORD PTR [rbx+r12*1],0xb
  40b36f:	nop
  40b370:	add    r12,0xffffffffffffffd8
  40b374:	add    r13,0x1
  40b378:	jne    40b300 <__ctype_b_loc@plt+0x9030>
  40b37a:	mov    rax,QWORD PTR [rsp+0x10]
  40b37f:	or     DWORD PTR [rsp+0xc],eax
  40b383:	je     40b38a <__ctype_b_loc@plt+0x90ba>
  40b385:	and    BYTE PTR [r15+0x9],0xfb
  40b38a:	movsxd rax,DWORD PTR [r15+0x38]
  40b38e:	shl    rax,0x4
  40b392:	mov    cl,BYTE PTR [r15+0xb]
  40b396:	mov    edx,0x28
  40b39b:	shlx   rcx,rdx,rcx
  40b3a0:	add    rax,rcx
  40b3a3:	add    rax,0x40
  40b3a7:	add    rsp,0x18
  40b3ab:	pop    rbx
  40b3ac:	pop    r12
  40b3ae:	pop    r13
  40b3b0:	pop    r14
  40b3b2:	pop    r15
  40b3b4:	pop    rbp
  40b3b5:	ret    
  40b3b6:	mov    rdi,QWORD PTR [r15+0xa8]
  40b3bd:	test   rdi,rdi
  40b3c0:	jne    40b3f9 <__ctype_b_loc@plt+0x9129>
  40b3c2:	mov    BYTE PTR [r15+0xa],0x4
  40b3c7:	mov    rax,QWORD PTR [r15+0x20]
  40b3cb:	cmp    QWORD PTR [rax+0x98],0x0
  40b3d3:	je     40b3ef <__ctype_b_loc@plt+0x911f>
  40b3d5:	mov    esi,0x4
  40b3da:	mov    rdi,r15
  40b3dd:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  40b3e2:	mov    rax,QWORD PTR [r15+0x20]
  40b3e6:	mov    rdi,r15
  40b3e9:	call   QWORD PTR [rax+0x98]
  40b3ef:	mov    edi,0x1
  40b3f4:	call   402280 <exit@plt>
  40b3f9:	mov    DWORD PTR [rdi+0xd0],0x4
  40b403:	add    rdi,0x8
  40b407:	mov    esi,0x1
  40b40c:	call   402230 <longjmp@plt>
  40b411:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b41b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b420:	push   rbp
  40b421:	push   r15
  40b423:	push   r14
  40b425:	push   r13
  40b427:	push   r12
  40b429:	push   rbx
  40b42a:	sub    rsp,0x18
  40b42e:	mov    r15,rsi
  40b431:	mov    rbx,QWORD PTR [rsi]
  40b434:	test   rbx,rbx
  40b437:	je     40b6dd <__ctype_b_loc@plt+0x940d>
  40b43d:	mov    r12,rdx
  40b440:	mov    r14,rdi
  40b443:	mov    rbp,QWORD PTR [rdi+0x20]
  40b447:	mov    r13b,BYTE PTR [rbp+0x20]
  40b44b:	xor    r13b,0x3
  40b44f:	not    r12
  40b452:	mov    QWORD PTR [rsp+0x8],rbp
  40b457:	mov    BYTE PTR [rsp+0x7],r13b
  40b45c:	jmp    40b690 <__ctype_b_loc@plt+0x93c0>
  40b461:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b46b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b470:	mov    rax,QWORD PTR [rbx]
  40b473:	mov    QWORD PTR [r15],rax
  40b476:	cmp    rbx,QWORD PTR [rbp+0x28]
  40b47a:	jne    40b483 <__ctype_b_loc@plt+0x91b3>
  40b47c:	mov    rax,QWORD PTR [rbx]
  40b47f:	mov    QWORD PTR [rbp+0x28],rax
  40b483:	movzx  eax,BYTE PTR [rbx+0x8]
  40b487:	add    al,0xfc
  40b489:	cmp    al,0x6
  40b48b:	ja     40b6d5 <__ctype_b_loc@plt+0x9405>
  40b491:	movzx  eax,al
  40b494:	lea    rcx,[rip+0x1ed95]        # 42a230 <__ctype_b_loc@plt+0x27f60>
  40b49b:	movsxd rax,DWORD PTR [rcx+rax*4]
  40b49f:	add    rax,rcx
  40b4a2:	jmp    rax
  40b4a4:	mov    rbp,QWORD PTR [r14+0x20]
  40b4a8:	add    DWORD PTR [rbp+0x8],0xffffffff
  40b4ac:	mov    r13,QWORD PTR [rbx+0x10]
  40b4b0:	add    r13,0x19
  40b4b4:	jmp    40b58e <__ctype_b_loc@plt+0x92be>
  40b4b9:	mov    rsi,QWORD PTR [rbx+0x20]
  40b4bd:	lea    rax,[rip+0x1f664]        # 42ab28 <__ctype_b_loc@plt+0x28858>
  40b4c4:	cmp    rsi,rax
  40b4c7:	je     40b4eb <__ctype_b_loc@plt+0x921b>
  40b4c9:	movzx  eax,BYTE PTR [rbx+0xb]
  40b4cd:	mov    ecx,0x28
  40b4d2:	shlx   r13,rcx,rax
  40b4d7:	mov    rbp,QWORD PTR [r14+0x20]
  40b4db:	mov    rdi,QWORD PTR [rbp+0x18]
  40b4df:	xor    ecx,ecx
  40b4e1:	mov    rdx,r13
  40b4e4:	call   QWORD PTR [rbp+0x10]
  40b4e7:	sub    QWORD PTR [rbp+0x78],r13
  40b4eb:	mov    rsi,QWORD PTR [rbx+0x18]
  40b4ef:	movsxd r13,DWORD PTR [rbx+0x38]
  40b4f3:	shl    r13,0x4
  40b4f7:	mov    rbp,QWORD PTR [r14+0x20]
  40b4fb:	mov    rdi,QWORD PTR [rbp+0x18]
  40b4ff:	xor    ecx,ecx
  40b501:	mov    rdx,r13
  40b504:	call   QWORD PTR [rbp+0x10]
  40b507:	sub    QWORD PTR [rbp+0x78],r13
  40b50b:	mov    rbp,QWORD PTR [r14+0x20]
  40b50f:	mov    rdi,QWORD PTR [rbp+0x18]
  40b513:	mov    edx,0x40
  40b518:	xor    ecx,ecx
  40b51a:	mov    rsi,rbx
  40b51d:	call   QWORD PTR [rbp+0x10]
  40b520:	add    QWORD PTR [rbp+0x78],0xffffffffffffffc0
  40b525:	mov    rbp,QWORD PTR [rsp+0x8]
  40b52a:	movzx  r13d,BYTE PTR [rsp+0x7]
  40b530:	jmp    40b6d5 <__ctype_b_loc@plt+0x9405>
  40b535:	movzx  eax,BYTE PTR [rbx+0xb]
  40b539:	cmp    BYTE PTR [rbx+0xa],0x1
  40b53d:	mov    cl,0x4
  40b53f:	sbb    cl,0x0
  40b542:	shlx   r13d,eax,ecx
  40b547:	add    r13d,0x28
  40b54b:	mov    QWORD PTR [rsp+0x10],r14
  40b550:	mov    rax,QWORD PTR [rsp+0x10]
  40b555:	mov    r14,QWORD PTR [rax+0x20]
  40b559:	mov    rdi,QWORD PTR [r14+0x18]
  40b55d:	xor    ecx,ecx
  40b55f:	mov    rsi,rbx
  40b562:	mov    rdx,r13
  40b565:	call   QWORD PTR [r14+0x10]
  40b569:	sub    QWORD PTR [r14+0x78],r13
  40b56d:	movzx  r13d,BYTE PTR [rsp+0x7]
  40b573:	mov    rbp,QWORD PTR [rsp+0x8]
  40b578:	mov    r14,QWORD PTR [rsp+0x10]
  40b57d:	jmp    40b6d5 <__ctype_b_loc@plt+0x9405>
  40b582:	mov    r13,QWORD PTR [rbx+0x20]
  40b586:	add    r13,0x28
  40b58a:	mov    rbp,QWORD PTR [r14+0x20]
  40b58e:	mov    rdi,QWORD PTR [rbp+0x18]
  40b592:	xor    ecx,ecx
  40b594:	mov    rsi,rbx
  40b597:	mov    rdx,r13
  40b59a:	call   QWORD PTR [rbp+0x10]
  40b59d:	sub    QWORD PTR [rbp+0x78],r13
  40b5a1:	movzx  r13d,BYTE PTR [rsp+0x7]
  40b5a7:	mov    rbp,QWORD PTR [rsp+0x8]
  40b5ac:	jmp    40b6d5 <__ctype_b_loc@plt+0x9405>
  40b5b1:	mov    rsi,QWORD PTR [rbx+0x40]
  40b5b5:	mov    rdi,rbx
  40b5b8:	call   403e60 <__ctype_b_loc@plt+0x1b90>
  40b5bd:	mov    rsi,QWORD PTR [rbx+0x50]
  40b5c1:	movsxd rax,DWORD PTR [rbx+0x5c]
  40b5c5:	shl    rax,0x3
  40b5c9:	lea    r13,[rax+rax*4]
  40b5cd:	mov    rbp,QWORD PTR [r14+0x20]
  40b5d1:	mov    rdi,QWORD PTR [rbp+0x18]
  40b5d5:	xor    ecx,ecx
  40b5d7:	mov    rdx,r13
  40b5da:	call   QWORD PTR [rbp+0x10]
  40b5dd:	sub    QWORD PTR [rbp+0x78],r13
  40b5e1:	mov    rsi,QWORD PTR [rbx+0x40]
  40b5e5:	movsxd r13,DWORD PTR [rbx+0x58]
  40b5e9:	shl    r13,0x4
  40b5ed:	mov    rbp,QWORD PTR [r14+0x20]
  40b5f1:	mov    rdi,QWORD PTR [rbp+0x18]
  40b5f5:	xor    ecx,ecx
  40b5f7:	mov    rdx,r13
  40b5fa:	call   QWORD PTR [rbp+0x10]
  40b5fd:	sub    QWORD PTR [rbp+0x78],r13
  40b601:	mov    rbp,QWORD PTR [rsp+0x8]
  40b606:	mov    r13,QWORD PTR [r14+0x20]
  40b60a:	mov    rdi,QWORD PTR [r13+0x18]
  40b60e:	mov    edx,0xb8
  40b613:	xor    ecx,ecx
  40b615:	mov    rsi,rbx
  40b618:	call   QWORD PTR [r13+0x10]
  40b61c:	add    QWORD PTR [r13+0x78],0xffffffffffffff48
  40b624:	movzx  r13d,BYTE PTR [rsp+0x7]
  40b62a:	jmp    40b6d5 <__ctype_b_loc@plt+0x9405>
  40b62f:	mov    rdi,r14
  40b632:	mov    rsi,rbx
  40b635:	call   40ba80 <__ctype_b_loc@plt+0x97b0>
  40b63a:	jmp    40b6d5 <__ctype_b_loc@plt+0x9405>
  40b63f:	lea    rax,[rbx+0x18]
  40b643:	cmp    QWORD PTR [rbx+0x10],rax
  40b647:	je     40b661 <__ctype_b_loc@plt+0x9391>
  40b649:	mov    rax,QWORD PTR [rbx+0x18]
  40b64d:	mov    rcx,QWORD PTR [rbx+0x20]
  40b651:	mov    QWORD PTR [rcx+0x18],rax
  40b655:	mov    rax,QWORD PTR [rbx+0x18]
  40b659:	mov    rcx,QWORD PTR [rbx+0x20]
  40b65d:	mov    QWORD PTR [rax+0x20],rcx
  40b661:	mov    r13,QWORD PTR [r14+0x20]
  40b665:	mov    rdi,QWORD PTR [r13+0x18]
  40b669:	mov    edx,0x28
  40b66e:	xor    ecx,ecx
  40b670:	mov    rsi,rbx
  40b673:	call   QWORD PTR [r13+0x10]
  40b677:	add    QWORD PTR [r13+0x78],0xffffffffffffffd8
  40b67c:	movzx  r13d,BYTE PTR [rsp+0x7]
  40b682:	jmp    40b6d5 <__ctype_b_loc@plt+0x9405>
  40b684:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b68e:	xchg   ax,ax
  40b690:	add    r12,0x1
  40b694:	je     40b6dd <__ctype_b_loc@plt+0x940d>
  40b696:	cmp    BYTE PTR [rbx+0x8],0x8
  40b69a:	jne    40b6b2 <__ctype_b_loc@plt+0x93e2>
  40b69c:	lea    rsi,[rbx+0x98]
  40b6a3:	mov    rdx,0xfffffffffffffffd
  40b6aa:	mov    rdi,r14
  40b6ad:	call   40b420 <__ctype_b_loc@plt+0x9150>
  40b6b2:	movzx  eax,BYTE PTR [rbx+0x9]
  40b6b6:	mov    ecx,eax
  40b6b8:	xor    cl,0x3
  40b6bb:	test   cl,r13b
  40b6be:	je     40b470 <__ctype_b_loc@plt+0x91a0>
  40b6c4:	and    al,0xf8
  40b6c6:	movzx  ecx,BYTE PTR [rbp+0x20]
  40b6ca:	and    cl,0x3
  40b6cd:	or     cl,al
  40b6cf:	mov    BYTE PTR [rbx+0x9],cl
  40b6d2:	mov    r15,rbx
  40b6d5:	mov    rbx,QWORD PTR [r15]
  40b6d8:	test   rbx,rbx
  40b6db:	jne    40b690 <__ctype_b_loc@plt+0x93c0>
  40b6dd:	mov    rax,r15
  40b6e0:	add    rsp,0x18
  40b6e4:	pop    rbx
  40b6e5:	pop    r12
  40b6e7:	pop    r13
  40b6e9:	pop    r14
  40b6eb:	pop    r15
  40b6ed:	pop    rbp
  40b6ee:	ret    
  40b6ef:	nop
  40b6f0:	push   rbp
  40b6f1:	push   r15
  40b6f3:	push   r14
  40b6f5:	push   rbx
  40b6f6:	push   rax
  40b6f7:	mov    r14,rdi
  40b6fa:	mov    rbx,QWORD PTR [rdi+0x20]
  40b6fe:	mov    rcx,QWORD PTR [rbx+0x50]
  40b702:	mov    rax,QWORD PTR [rcx]
  40b705:	cmp    rax,rcx
  40b708:	je     40b712 <__ctype_b_loc@plt+0x9442>
  40b70a:	mov    rdx,QWORD PTR [rax]
  40b70d:	mov    QWORD PTR [rcx],rdx
  40b710:	jmp    40b71a <__ctype_b_loc@plt+0x944a>
  40b712:	mov    QWORD PTR [rbx+0x50],0x0
  40b71a:	mov    rcx,QWORD PTR [rbx+0xb0]
  40b721:	mov    rcx,QWORD PTR [rcx]
  40b724:	mov    QWORD PTR [rax],rcx
  40b727:	mov    rcx,QWORD PTR [rbx+0xb0]
  40b72e:	mov    QWORD PTR [rcx],rax
  40b731:	mov    cl,BYTE PTR [rax+0x9]
  40b734:	and    cl,0xf8
  40b737:	mov    dl,BYTE PTR [rbx+0x20]
  40b73a:	and    dl,0x3
  40b73d:	or     dl,cl
  40b73f:	mov    BYTE PTR [rax+0x9],dl
  40b742:	mov    rcx,QWORD PTR [rax+0x10]
  40b746:	test   rcx,rcx
  40b749:	je     40b82b <__ctype_b_loc@plt+0x955b>
  40b74f:	mov    r9b,BYTE PTR [rcx+0xa]
  40b753:	test   r9b,0x4
  40b757:	jne    40b82b <__ctype_b_loc@plt+0x955b>
  40b75d:	mov    rsi,QWORD PTR [r14+0x20]
  40b761:	mov    rdi,QWORD PTR [rsi+0x138]
  40b768:	mov    sil,BYTE PTR [rcx+0xb]
  40b76c:	mov    rdx,0xffffffffffffffff
  40b773:	shlx   rdx,rdx,rsi
  40b778:	andn   edx,edx,DWORD PTR [rdi+0xc]
  40b77e:	movsxd rdx,edx
  40b781:	lea    rsi,[rdx+rdx*4]
  40b785:	shl    rsi,0x3
  40b789:	add    rsi,QWORD PTR [rcx+0x20]
  40b78d:	lea    r8,[rip+0x1f384]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40b794:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b79e:	xchg   ax,ax
  40b7a0:	cmp    DWORD PTR [rsi+0x18],0x4
  40b7a4:	jne    40b7ac <__ctype_b_loc@plt+0x94dc>
  40b7a6:	cmp    QWORD PTR [rsi+0x10],rdi
  40b7aa:	je     40b819 <__ctype_b_loc@plt+0x9549>
  40b7ac:	mov    rsi,QWORD PTR [rsi+0x20]
  40b7b0:	test   rsi,rsi
  40b7b3:	jne    40b7a0 <__ctype_b_loc@plt+0x94d0>
  40b7b5:	cmp    DWORD PTR [r8+0x8],0x0
  40b7ba:	je     40b823 <__ctype_b_loc@plt+0x9553>
  40b7bc:	test   r8,r8
  40b7bf:	je     40b82b <__ctype_b_loc@plt+0x955b>
  40b7c1:	mov    bpl,BYTE PTR [r14+0x65]
  40b7c5:	mov    r15,QWORD PTR [rbx+0x70]
  40b7c9:	mov    BYTE PTR [r14+0x65],0x0
  40b7ce:	mov    rcx,QWORD PTR [rbx+0x78]
  40b7d2:	add    rcx,rcx
  40b7d5:	mov    QWORD PTR [rbx+0x70],rcx
  40b7d9:	mov    rcx,QWORD PTR [r14+0x10]
  40b7dd:	mov    rdx,QWORD PTR [r8]
  40b7e0:	mov    QWORD PTR [rcx],rdx
  40b7e3:	mov    edx,DWORD PTR [r8+0x8]
  40b7e7:	mov    DWORD PTR [rcx+0x8],edx
  40b7ea:	mov    rcx,QWORD PTR [r14+0x10]
  40b7ee:	mov    QWORD PTR [rcx+0x10],rax
  40b7f2:	mov    DWORD PTR [rcx+0x18],0x7
  40b7f9:	mov    rsi,QWORD PTR [r14+0x10]
  40b7fd:	lea    rax,[rsi+0x20]
  40b801:	mov    QWORD PTR [r14+0x10],rax
  40b805:	xor    edx,edx
  40b807:	mov    rdi,r14
  40b80a:	call   404ff0 <__ctype_b_loc@plt+0x2d20>
  40b80f:	mov    BYTE PTR [r14+0x65],bpl
  40b813:	mov    QWORD PTR [rbx+0x70],r15
  40b817:	jmp    40b82b <__ctype_b_loc@plt+0x955b>
  40b819:	mov    r8,rsi
  40b81c:	cmp    DWORD PTR [r8+0x8],0x0
  40b821:	jne    40b7bc <__ctype_b_loc@plt+0x94ec>
  40b823:	or     r9b,0x4
  40b827:	mov    BYTE PTR [rcx+0xa],r9b
  40b82b:	add    rsp,0x8
  40b82f:	pop    rbx
  40b830:	pop    r14
  40b832:	pop    r15
  40b834:	pop    rbp
  40b835:	ret    
  40b836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b840:	push   rbx
  40b841:	mov    rbx,rdi
  40b844:	mov    rsi,QWORD PTR [rdi+0xe0]
  40b84b:	test   rsi,rsi
  40b84e:	je     40b85e <__ctype_b_loc@plt+0x958e>
  40b850:	test   BYTE PTR [rsi+0x9],0x3
  40b854:	je     40b85e <__ctype_b_loc@plt+0x958e>
  40b856:	mov    rdi,rbx
  40b859:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40b85e:	mov    rsi,QWORD PTR [rbx+0xe8]
  40b865:	test   rsi,rsi
  40b868:	je     40b878 <__ctype_b_loc@plt+0x95a8>
  40b86a:	test   BYTE PTR [rsi+0x9],0x3
  40b86e:	je     40b878 <__ctype_b_loc@plt+0x95a8>
  40b870:	mov    rdi,rbx
  40b873:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40b878:	mov    rsi,QWORD PTR [rbx+0xf0]
  40b87f:	test   rsi,rsi
  40b882:	je     40b892 <__ctype_b_loc@plt+0x95c2>
  40b884:	test   BYTE PTR [rsi+0x9],0x3
  40b888:	je     40b892 <__ctype_b_loc@plt+0x95c2>
  40b88a:	mov    rdi,rbx
  40b88d:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40b892:	mov    rsi,QWORD PTR [rbx+0xf8]
  40b899:	test   rsi,rsi
  40b89c:	je     40b8ac <__ctype_b_loc@plt+0x95dc>
  40b89e:	test   BYTE PTR [rsi+0x9],0x3
  40b8a2:	je     40b8ac <__ctype_b_loc@plt+0x95dc>
  40b8a4:	mov    rdi,rbx
  40b8a7:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40b8ac:	mov    rsi,QWORD PTR [rbx+0x100]
  40b8b3:	test   rsi,rsi
  40b8b6:	je     40b8c6 <__ctype_b_loc@plt+0x95f6>
  40b8b8:	test   BYTE PTR [rsi+0x9],0x3
  40b8bc:	je     40b8c6 <__ctype_b_loc@plt+0x95f6>
  40b8be:	mov    rdi,rbx
  40b8c1:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40b8c6:	mov    rsi,QWORD PTR [rbx+0x108]
  40b8cd:	test   rsi,rsi
  40b8d0:	je     40b8e0 <__ctype_b_loc@plt+0x9610>
  40b8d2:	test   BYTE PTR [rsi+0x9],0x3
  40b8d6:	je     40b8e0 <__ctype_b_loc@plt+0x9610>
  40b8d8:	mov    rdi,rbx
  40b8db:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40b8e0:	mov    rsi,QWORD PTR [rbx+0x110]
  40b8e7:	test   rsi,rsi
  40b8ea:	je     40b8fa <__ctype_b_loc@plt+0x962a>
  40b8ec:	test   BYTE PTR [rsi+0x9],0x3
  40b8f0:	je     40b8fa <__ctype_b_loc@plt+0x962a>
  40b8f2:	mov    rdi,rbx
  40b8f5:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40b8fa:	mov    rsi,QWORD PTR [rbx+0x118]
  40b901:	test   rsi,rsi
  40b904:	je     40b914 <__ctype_b_loc@plt+0x9644>
  40b906:	test   BYTE PTR [rsi+0x9],0x3
  40b90a:	je     40b914 <__ctype_b_loc@plt+0x9644>
  40b90c:	mov    rdi,rbx
  40b90f:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40b914:	mov    rsi,QWORD PTR [rbx+0x120]
  40b91b:	test   rsi,rsi
  40b91e:	je     40b92f <__ctype_b_loc@plt+0x965f>
  40b920:	test   BYTE PTR [rsi+0x9],0x3
  40b924:	je     40b92f <__ctype_b_loc@plt+0x965f>
  40b926:	mov    rdi,rbx
  40b929:	pop    rbx
  40b92a:	jmp    403fb0 <__ctype_b_loc@plt+0x1ce0>
  40b92f:	pop    rbx
  40b930:	ret    
  40b931:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b93b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b940:	push   rbp
  40b941:	push   r15
  40b943:	push   r14
  40b945:	push   r12
  40b947:	push   rbx
  40b948:	mov    r10,QWORD PTR [rdi+0x20]
  40b94c:	mov    r11,QWORD PTR [r10+0xb0]
  40b953:	mov    rdx,QWORD PTR [r11]
  40b956:	xor    eax,eax
  40b958:	test   rdx,rdx
  40b95b:	je     40ba77 <__ctype_b_loc@plt+0x97a7>
  40b961:	mov    r9,0xffffffffffffffff
  40b968:	lea    r8,[rip+0x1f1a9]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40b96f:	jmp    40b980 <__ctype_b_loc@plt+0x96b0>
  40b971:	mov    QWORD PTR [rdx],rdx
  40b974:	mov    QWORD PTR [r10+0x50],rdx
  40b978:	jmp    40ba6b <__ctype_b_loc@plt+0x979b>
  40b97d:	nop    DWORD PTR [rax]
  40b980:	test   esi,esi
  40b982:	setne  bl
  40b985:	mov    r12b,BYTE PTR [rdx+0x9]
  40b989:	test   r12b,0x3
  40b98d:	setne  cl
  40b990:	test   r12b,0x8
  40b994:	jne    40ba68 <__ctype_b_loc@plt+0x9798>
  40b99a:	or     bl,cl
  40b99c:	je     40ba68 <__ctype_b_loc@plt+0x9798>
  40b9a2:	mov    r15,QWORD PTR [rdx+0x10]
  40b9a6:	test   r15,r15
  40b9a9:	je     40ba60 <__ctype_b_loc@plt+0x9790>
  40b9af:	mov    r14b,BYTE PTR [r15+0xa]
  40b9b3:	test   r14b,0x4
  40b9b7:	jne    40ba60 <__ctype_b_loc@plt+0x9790>
  40b9bd:	mov    rcx,QWORD PTR [rdi+0x20]
  40b9c1:	mov    rbx,QWORD PTR [rcx+0x138]
  40b9c8:	mov    cl,BYTE PTR [r15+0xb]
  40b9cc:	shlx   rcx,r9,rcx
  40b9d1:	andn   ecx,ecx,DWORD PTR [rbx+0xc]
  40b9d7:	movsxd rcx,ecx
  40b9da:	lea    rbp,[rcx+rcx*4]
  40b9de:	shl    rbp,0x3
  40b9e2:	add    rbp,QWORD PTR [r15+0x20]
  40b9e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b9f0:	cmp    DWORD PTR [rbp+0x18],0x4
  40b9f4:	jne    40b9fc <__ctype_b_loc@plt+0x972c>
  40b9f6:	cmp    QWORD PTR [rbp+0x10],rbx
  40b9fa:	je     40ba08 <__ctype_b_loc@plt+0x9738>
  40b9fc:	mov    rbp,QWORD PTR [rbp+0x20]
  40ba00:	test   rbp,rbp
  40ba03:	jne    40b9f0 <__ctype_b_loc@plt+0x9720>
  40ba05:	mov    rbp,r8
  40ba08:	cmp    DWORD PTR [rbp+0x8],0x0
  40ba0c:	je     40ba4b <__ctype_b_loc@plt+0x977b>
  40ba0e:	test   rbp,rbp
  40ba11:	je     40ba60 <__ctype_b_loc@plt+0x9790>
  40ba13:	mov    rcx,QWORD PTR [rdx]
  40ba16:	mov    rbx,QWORD PTR [rdx+0x20]
  40ba1a:	add    rax,rbx
  40ba1d:	add    rax,0x28
  40ba21:	or     r12b,0x8
  40ba25:	mov    BYTE PTR [rdx+0x9],r12b
  40ba29:	mov    QWORD PTR [r11],rcx
  40ba2c:	mov    rcx,QWORD PTR [r10+0x50]
  40ba30:	test   rcx,rcx
  40ba33:	je     40b971 <__ctype_b_loc@plt+0x96a1>
  40ba39:	mov    rcx,QWORD PTR [rcx]
  40ba3c:	mov    QWORD PTR [rdx],rcx
  40ba3f:	mov    rcx,QWORD PTR [r10+0x50]
  40ba43:	mov    QWORD PTR [rcx],rdx
  40ba46:	jmp    40b974 <__ctype_b_loc@plt+0x96a4>
  40ba4b:	or     r14b,0x4
  40ba4f:	mov    BYTE PTR [r15+0xa],r14b
  40ba53:	mov    r12b,BYTE PTR [rdx+0x9]
  40ba57:	nop    WORD PTR [rax+rax*1+0x0]
  40ba60:	or     r12b,0x8
  40ba64:	mov    BYTE PTR [rdx+0x9],r12b
  40ba68:	mov    r11,rdx
  40ba6b:	mov    rdx,QWORD PTR [r11]
  40ba6e:	test   rdx,rdx
  40ba71:	jne    40b980 <__ctype_b_loc@plt+0x96b0>
  40ba77:	pop    rbx
  40ba78:	pop    r12
  40ba7a:	pop    r14
  40ba7c:	pop    r15
  40ba7e:	pop    rbp
  40ba7f:	ret    
  40ba80:	push   r15
  40ba82:	push   r14
  40ba84:	push   r12
  40ba86:	push   rbx
  40ba87:	push   rax
  40ba88:	mov    r15,rsi
  40ba8b:	mov    r14,rdi
  40ba8e:	mov    rsi,QWORD PTR [rsi+0x18]
  40ba92:	movsxd rbx,DWORD PTR [r15+0x50]
  40ba96:	shl    rbx,0x2
  40ba9a:	mov    r12,QWORD PTR [rdi+0x20]
  40ba9e:	mov    rdi,QWORD PTR [r12+0x18]
  40baa3:	xor    ecx,ecx
  40baa5:	mov    rdx,rbx
  40baa8:	call   QWORD PTR [r12+0x10]
  40baad:	sub    QWORD PTR [r12+0x78],rbx
  40bab2:	mov    rsi,QWORD PTR [r15+0x20]
  40bab6:	movsxd rbx,DWORD PTR [r15+0x58]
  40baba:	shl    rbx,0x3
  40babe:	mov    r12,QWORD PTR [r14+0x20]
  40bac2:	mov    rdi,QWORD PTR [r12+0x18]
  40bac7:	xor    ecx,ecx
  40bac9:	mov    rdx,rbx
  40bacc:	call   QWORD PTR [r12+0x10]
  40bad1:	sub    QWORD PTR [r12+0x78],rbx
  40bad6:	mov    rsi,QWORD PTR [r15+0x10]
  40bada:	movsxd rbx,DWORD PTR [r15+0x4c]
  40bade:	shl    rbx,0x4
  40bae2:	mov    r12,QWORD PTR [r14+0x20]
  40bae6:	mov    rdi,QWORD PTR [r12+0x18]
  40baeb:	xor    ecx,ecx
  40baed:	mov    rdx,rbx
  40baf0:	call   QWORD PTR [r12+0x10]
  40baf5:	sub    QWORD PTR [r12+0x78],rbx
  40bafa:	mov    rsi,QWORD PTR [r15+0x28]
  40bafe:	movsxd rbx,DWORD PTR [r15+0x54]
  40bb02:	shl    rbx,0x2
  40bb06:	mov    r12,QWORD PTR [r14+0x20]
  40bb0a:	mov    rdi,QWORD PTR [r12+0x18]
  40bb0f:	xor    ecx,ecx
  40bb11:	mov    rdx,rbx
  40bb14:	call   QWORD PTR [r12+0x10]
  40bb19:	sub    QWORD PTR [r12+0x78],rbx
  40bb1e:	mov    rsi,QWORD PTR [r15+0x30]
  40bb22:	movsxd rbx,DWORD PTR [r15+0x5c]
  40bb26:	shl    rbx,0x4
  40bb2a:	mov    r12,QWORD PTR [r14+0x20]
  40bb2e:	mov    rdi,QWORD PTR [r12+0x18]
  40bb33:	xor    ecx,ecx
  40bb35:	mov    rdx,rbx
  40bb38:	call   QWORD PTR [r12+0x10]
  40bb3d:	sub    QWORD PTR [r12+0x78],rbx
  40bb42:	mov    rsi,QWORD PTR [r15+0x38]
  40bb46:	movsxd rbx,DWORD PTR [r15+0x48]
  40bb4a:	shl    rbx,0x3
  40bb4e:	mov    r12,QWORD PTR [r14+0x20]
  40bb52:	mov    rdi,QWORD PTR [r12+0x18]
  40bb57:	xor    ecx,ecx
  40bb59:	mov    rdx,rbx
  40bb5c:	call   QWORD PTR [r12+0x10]
  40bb61:	sub    QWORD PTR [r12+0x78],rbx
  40bb66:	mov    rbx,QWORD PTR [r14+0x20]
  40bb6a:	mov    rdi,QWORD PTR [rbx+0x18]
  40bb6e:	mov    edx,0x78
  40bb73:	xor    ecx,ecx
  40bb75:	mov    rsi,r15
  40bb78:	call   QWORD PTR [rbx+0x10]
  40bb7b:	add    QWORD PTR [rbx+0x78],0xffffffffffffff88
  40bb80:	add    rsp,0x8
  40bb84:	pop    rbx
  40bb85:	pop    r12
  40bb87:	pop    r14
  40bb89:	pop    r15
  40bb8b:	ret    
  40bb8c:	nop    DWORD PTR [rax+0x0]
  40bb90:	push   rbp
  40bb91:	push   r15
  40bb93:	push   r14
  40bb95:	push   r13
  40bb97:	push   r12
  40bb99:	push   rbx
  40bb9a:	push   rax
  40bb9b:	mov    r15d,edx
  40bb9e:	mov    r14,rsi
  40bba1:	mov    rbx,rdi
  40bba4:	mov    rax,QWORD PTR [rdi+0x20]
  40bba8:	mov    rcx,QWORD PTR [rax+0x78]
  40bbac:	cmp    rcx,QWORD PTR [rax+0x70]
  40bbb0:	jb     40bbba <__ctype_b_loc@plt+0x98ea>
  40bbb2:	mov    rdi,rbx
  40bbb5:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40bbba:	mov    rax,QWORD PTR [rbx+0x28]
  40bbbe:	cmp    rax,QWORD PTR [rbx+0x50]
  40bbc2:	je     40bbd1 <__ctype_b_loc@plt+0x9901>
  40bbc4:	mov    rax,QWORD PTR [rax+0x8]
  40bbc8:	mov    rax,QWORD PTR [rax]
  40bbcb:	add    rax,0x18
  40bbcf:	jmp    40bbd5 <__ctype_b_loc@plt+0x9905>
  40bbd1:	lea    rax,[rbx+0x78]
  40bbd5:	mov    r12,QWORD PTR [rax]
  40bbd8:	mov    eax,r15d
  40bbdb:	shl    eax,0x4
  40bbde:	add    eax,0x28
  40bbe1:	movsxd r13,eax
  40bbe4:	mov    rbp,QWORD PTR [rbx+0x20]
  40bbe8:	mov    rdi,QWORD PTR [rbp+0x18]
  40bbec:	xor    esi,esi
  40bbee:	xor    edx,edx
  40bbf0:	mov    rcx,r13
  40bbf3:	call   QWORD PTR [rbp+0x10]
  40bbf6:	test   rax,rax
  40bbf9:	je     40bd1f <__ctype_b_loc@plt+0x9a4f>
  40bbff:	add    QWORD PTR [rbp+0x78],r13
  40bc03:	mov    rcx,QWORD PTR [rbx+0x20]
  40bc07:	mov    rdx,QWORD PTR [rcx+0x28]
  40bc0b:	mov    QWORD PTR [rax],rdx
  40bc0e:	mov    QWORD PTR [rcx+0x28],rax
  40bc12:	mov    cl,BYTE PTR [rcx+0x20]
  40bc15:	and    cl,0x3
  40bc18:	mov    BYTE PTR [rax+0x9],cl
  40bc1b:	mov    BYTE PTR [rax+0x8],0x6
  40bc1f:	mov    BYTE PTR [rax+0xa],0x1
  40bc23:	mov    QWORD PTR [rax+0x18],r12
  40bc27:	mov    BYTE PTR [rax+0xb],r15b
  40bc2b:	mov    QWORD PTR [rax+0x20],r14
  40bc2f:	mov    rdx,QWORD PTR [rbx+0x10]
  40bc33:	movsxd rcx,r15d
  40bc36:	mov    rdi,rcx
  40bc39:	shl    rdi,0x4
  40bc3d:	sub    rdx,rdi
  40bc40:	mov    QWORD PTR [rbx+0x10],rdx
  40bc44:	test   r15d,r15d
  40bc47:	je     40bd01 <__ctype_b_loc@plt+0x9a31>
  40bc4d:	lea    r8,[rcx-0x1]
  40bc51:	mov    r9,rcx
  40bc54:	and    r9,0x3
  40bc58:	je     40bc86 <__ctype_b_loc@plt+0x99b6>
  40bc5a:	xor    esi,esi
  40bc5c:	nop    DWORD PTR [rax+0x0]
  40bc60:	mov    rbp,QWORD PTR [rdx+rdi*1-0x10]
  40bc65:	mov    QWORD PTR [rax+rdi*1+0x18],rbp
  40bc6a:	mov    edx,DWORD PTR [rdx+rdi*1-0x8]
  40bc6e:	mov    DWORD PTR [rax+rdi*1+0x20],edx
  40bc72:	mov    rdx,QWORD PTR [rbx+0x10]
  40bc76:	add    rsi,0x1
  40bc7a:	add    rdi,0xfffffffffffffff0
  40bc7e:	cmp    r9,rsi
  40bc81:	jne    40bc60 <__ctype_b_loc@plt+0x9990>
  40bc83:	sub    rcx,rsi
  40bc86:	cmp    r8,0x3
  40bc8a:	jb     40bd01 <__ctype_b_loc@plt+0x9a31>
  40bc8c:	mov    rsi,rcx
  40bc8f:	shl    rsi,0x4
  40bc93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc9d:	nop    DWORD PTR [rax]
  40bca0:	mov    rdi,QWORD PTR [rdx+rsi*1-0x10]
  40bca5:	mov    QWORD PTR [rax+rsi*1+0x18],rdi
  40bcaa:	mov    edx,DWORD PTR [rdx+rsi*1-0x8]
  40bcae:	mov    DWORD PTR [rax+rsi*1+0x20],edx
  40bcb2:	mov    rdx,QWORD PTR [rbx+0x10]
  40bcb6:	mov    rdi,QWORD PTR [rdx+rsi*1-0x20]
  40bcbb:	mov    QWORD PTR [rax+rsi*1+0x8],rdi
  40bcc0:	mov    edx,DWORD PTR [rdx+rsi*1-0x18]
  40bcc4:	mov    DWORD PTR [rax+rsi*1+0x10],edx
  40bcc8:	mov    rdx,QWORD PTR [rbx+0x10]
  40bccc:	mov    rdi,QWORD PTR [rdx+rsi*1-0x30]
  40bcd1:	mov    QWORD PTR [rax+rsi*1-0x8],rdi
  40bcd6:	mov    edx,DWORD PTR [rdx+rsi*1-0x28]
  40bcda:	mov    DWORD PTR [rax+rsi*1],edx
  40bcdd:	mov    rdx,QWORD PTR [rbx+0x10]
  40bce1:	mov    rdi,QWORD PTR [rdx+rsi*1-0x40]
  40bce6:	mov    QWORD PTR [rax+rsi*1-0x18],rdi
  40bceb:	mov    edx,DWORD PTR [rdx+rsi*1-0x38]
  40bcef:	mov    DWORD PTR [rax+rsi*1-0x10],edx
  40bcf3:	lea    rsi,[rsi-0x40]
  40bcf7:	mov    rdx,QWORD PTR [rbx+0x10]
  40bcfb:	add    rcx,0xfffffffffffffffc
  40bcff:	jne    40bca0 <__ctype_b_loc@plt+0x99d0>
  40bd01:	mov    QWORD PTR [rdx],rax
  40bd04:	mov    DWORD PTR [rdx+0x8],0x6
  40bd0b:	add    QWORD PTR [rbx+0x10],0x10
  40bd10:	add    rsp,0x8
  40bd14:	pop    rbx
  40bd15:	pop    r12
  40bd17:	pop    r13
  40bd19:	pop    r14
  40bd1b:	pop    r15
  40bd1d:	pop    rbp
  40bd1e:	ret    
  40bd1f:	mov    rdi,QWORD PTR [rbx+0xa8]
  40bd26:	test   rdi,rdi
  40bd29:	jne    40bd61 <__ctype_b_loc@plt+0x9a91>
  40bd2b:	mov    BYTE PTR [rbx+0xa],0x4
  40bd2f:	mov    rax,QWORD PTR [rbx+0x20]
  40bd33:	cmp    QWORD PTR [rax+0x98],0x0
  40bd3b:	je     40bd57 <__ctype_b_loc@plt+0x9a87>
  40bd3d:	mov    esi,0x4
  40bd42:	mov    rdi,rbx
  40bd45:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  40bd4a:	mov    rax,QWORD PTR [rbx+0x20]
  40bd4e:	mov    rdi,rbx
  40bd51:	call   QWORD PTR [rax+0x98]
  40bd57:	mov    edi,0x1
  40bd5c:	call   402280 <exit@plt>
  40bd61:	mov    DWORD PTR [rdi+0xd0],0x4
  40bd6b:	add    rdi,0x8
  40bd6f:	mov    esi,0x1
  40bd74:	call   402230 <longjmp@plt>
  40bd79:	nop    DWORD PTR [rax+0x0]
  40bd80:	push   r15
  40bd82:	push   r14
  40bd84:	push   rbx
  40bd85:	sub    rsp,0x10
  40bd89:	mov    rbx,rdi
  40bd8c:	lea    r14,[rdi+0x78]
  40bd90:	mov    rax,QWORD PTR [rdi+0x10]
  40bd94:	mov    rcx,QWORD PTR [rdi+0x78]
  40bd98:	mov    QWORD PTR [rax],rcx
  40bd9b:	mov    ecx,DWORD PTR [rdi+0x80]
  40bda1:	mov    DWORD PTR [rax+0x8],ecx
  40bda4:	add    QWORD PTR [rdi+0x10],0x10
  40bda9:	lea    r15,[rip+0x1f2f2]        # 42b0a2 <__ctype_b_loc@plt+0x28dd2>
  40bdb0:	mov    edx,0x2
  40bdb5:	mov    rsi,r15
  40bdb8:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40bdbd:	mov    QWORD PTR [rsp],rax
  40bdc1:	mov    DWORD PTR [rsp+0x8],0x4
  40bdc9:	mov    rcx,QWORD PTR [rbx+0x10]
  40bdcd:	add    rcx,0xfffffffffffffff0
  40bdd1:	mov    rdx,rsp
  40bdd4:	mov    rdi,rbx
  40bdd7:	mov    rsi,r14
  40bdda:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40bddf:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40bde4:	lea    rdx,[rip+0x24d45]        # 430b30 <__ctype_b_loc@plt+0x2e860>
  40bdeb:	mov    rdi,rbx
  40bdee:	mov    rsi,r15
  40bdf1:	call   402960 <__ctype_b_loc@plt+0x690>
  40bdf6:	mov    rax,QWORD PTR [rbx+0x20]
  40bdfa:	mov    rcx,QWORD PTR [rax+0x78]
  40bdfe:	cmp    rcx,QWORD PTR [rax+0x70]
  40be02:	jb     40be0c <__ctype_b_loc@plt+0x9b3c>
  40be04:	mov    rdi,rbx
  40be07:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40be0c:	mov    r15,QWORD PTR [rbx+0x10]
  40be10:	lea    rsi,[rip+0x1f28e]        # 42b0a5 <__ctype_b_loc@plt+0x28dd5>
  40be17:	mov    edx,0x7
  40be1c:	mov    rdi,rbx
  40be1f:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40be24:	mov    QWORD PTR [r15],rax
  40be27:	mov    DWORD PTR [r15+0x8],0x4
  40be2f:	add    QWORD PTR [rbx+0x10],0x10
  40be34:	lea    rsi,[rip+0x1f272]        # 42b0ad <__ctype_b_loc@plt+0x28ddd>
  40be3b:	mov    edx,0x8
  40be40:	mov    rdi,rbx
  40be43:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40be48:	mov    QWORD PTR [rsp],rax
  40be4c:	mov    DWORD PTR [rsp+0x8],0x4
  40be54:	mov    rcx,QWORD PTR [rbx+0x10]
  40be58:	add    rcx,0xfffffffffffffff0
  40be5c:	mov    rdx,rsp
  40be5f:	mov    rdi,rbx
  40be62:	mov    rsi,r14
  40be65:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40be6a:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40be6f:	lea    rsi,[rip+0xf4a]        # 40cdc0 <__ctype_b_loc@plt+0xaaf0>
  40be76:	xor    edx,edx
  40be78:	mov    rdi,rbx
  40be7b:	call   40bb90 <__ctype_b_loc@plt+0x98c0>
  40be80:	lea    rsi,[rip+0xe49]        # 40ccd0 <__ctype_b_loc@plt+0xaa00>
  40be87:	mov    edx,0x1
  40be8c:	mov    rdi,rbx
  40be8f:	call   40bb90 <__ctype_b_loc@plt+0x98c0>
  40be94:	mov    r15,QWORD PTR [rbx+0x10]
  40be98:	add    r15,0xffffffffffffffe0
  40be9c:	lea    rsi,[rip+0x1f213]        # 42b0b6 <__ctype_b_loc@plt+0x28de6>
  40bea3:	mov    edx,0x6
  40bea8:	mov    rdi,rbx
  40beab:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40beb0:	mov    QWORD PTR [rsp],rax
  40beb4:	mov    DWORD PTR [rsp+0x8],0x4
  40bebc:	mov    rcx,QWORD PTR [rbx+0x10]
  40bec0:	add    rcx,0xfffffffffffffff0
  40bec4:	mov    rdx,rsp
  40bec7:	mov    rdi,rbx
  40beca:	mov    rsi,r15
  40becd:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40bed2:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40bed7:	lea    rsi,[rip+0x13a2]        # 40d280 <__ctype_b_loc@plt+0xafb0>
  40bede:	xor    edx,edx
  40bee0:	mov    rdi,rbx
  40bee3:	call   40bb90 <__ctype_b_loc@plt+0x98c0>
  40bee8:	lea    rsi,[rip+0x12b1]        # 40d1a0 <__ctype_b_loc@plt+0xaed0>
  40beef:	mov    edx,0x1
  40bef4:	mov    rdi,rbx
  40bef7:	call   40bb90 <__ctype_b_loc@plt+0x98c0>
  40befc:	mov    r15,QWORD PTR [rbx+0x10]
  40bf00:	add    r15,0xffffffffffffffe0
  40bf04:	lea    rsi,[rip+0x1f1ac]        # 42b0b7 <__ctype_b_loc@plt+0x28de7>
  40bf0b:	mov    edx,0x5
  40bf10:	mov    rdi,rbx
  40bf13:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40bf18:	mov    QWORD PTR [rsp],rax
  40bf1c:	mov    DWORD PTR [rsp+0x8],0x4
  40bf24:	mov    rcx,QWORD PTR [rbx+0x10]
  40bf28:	add    rcx,0xfffffffffffffff0
  40bf2c:	mov    rdx,rsp
  40bf2f:	mov    rdi,rbx
  40bf32:	mov    rsi,r15
  40bf35:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40bf3a:	mov    r15,QWORD PTR [rbx+0x10]
  40bf3e:	add    r15,0xfffffffffffffff0
  40bf42:	mov    QWORD PTR [rbx+0x10],r15
  40bf46:	mov    rax,QWORD PTR [rbx+0x20]
  40bf4a:	mov    rcx,QWORD PTR [rax+0x78]
  40bf4e:	cmp    rcx,QWORD PTR [rax+0x70]
  40bf52:	jb     40bf60 <__ctype_b_loc@plt+0x9c90>
  40bf54:	mov    rdi,rbx
  40bf57:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40bf5c:	mov    r15,QWORD PTR [rbx+0x10]
  40bf60:	xor    esi,esi
  40bf62:	mov    edx,0x1
  40bf67:	mov    rdi,rbx
  40bf6a:	call   403720 <__ctype_b_loc@plt+0x1450>
  40bf6f:	mov    QWORD PTR [r15],rax
  40bf72:	mov    DWORD PTR [r15+0x8],0x5
  40bf7a:	mov    rax,QWORD PTR [rbx+0x10]
  40bf7e:	lea    rcx,[rax+0x10]
  40bf82:	mov    QWORD PTR [rbx+0x10],rcx
  40bf86:	mov    rcx,QWORD PTR [rax]
  40bf89:	mov    QWORD PTR [rax+0x10],rcx
  40bf8d:	mov    ecx,DWORD PTR [rax+0x8]
  40bf90:	mov    DWORD PTR [rax+0x18],ecx
  40bf93:	add    QWORD PTR [rbx+0x10],0x10
  40bf98:	mov    esi,0xfffffffe
  40bf9d:	mov    rdi,rbx
  40bfa0:	call   40d5b0 <__ctype_b_loc@plt+0xb2e0>
  40bfa5:	mov    rax,QWORD PTR [rbx+0x20]
  40bfa9:	mov    rcx,QWORD PTR [rax+0x78]
  40bfad:	cmp    rcx,QWORD PTR [rax+0x70]
  40bfb1:	jb     40bfbb <__ctype_b_loc@plt+0x9ceb>
  40bfb3:	mov    rdi,rbx
  40bfb6:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40bfbb:	mov    r15,QWORD PTR [rbx+0x10]
  40bfbf:	lea    rsi,[rip+0x1f0f7]        # 42b0bd <__ctype_b_loc@plt+0x28ded>
  40bfc6:	mov    edx,0x2
  40bfcb:	mov    rdi,rbx
  40bfce:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40bfd3:	mov    QWORD PTR [r15],rax
  40bfd6:	mov    DWORD PTR [r15+0x8],0x4
  40bfde:	mov    r15,QWORD PTR [rbx+0x10]
  40bfe2:	lea    rax,[r15+0x10]
  40bfe6:	mov    QWORD PTR [rbx+0x10],rax
  40bfea:	add    r15,0xfffffffffffffff0
  40bfee:	lea    rsi,[rip+0x1efad]        # 42afa2 <__ctype_b_loc@plt+0x28cd2>
  40bff5:	mov    edx,0x6
  40bffa:	mov    rdi,rbx
  40bffd:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40c002:	mov    QWORD PTR [rsp],rax
  40c006:	mov    DWORD PTR [rsp+0x8],0x4
  40c00e:	mov    rcx,QWORD PTR [rbx+0x10]
  40c012:	add    rcx,0xfffffffffffffff0
  40c016:	mov    rdx,rsp
  40c019:	mov    rdi,rbx
  40c01c:	mov    rsi,r15
  40c01f:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40c024:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40c029:	lea    rsi,[rip+0x16f0]        # 40d720 <__ctype_b_loc@plt+0xb450>
  40c030:	mov    edx,0x1
  40c035:	mov    rdi,rbx
  40c038:	call   40bb90 <__ctype_b_loc@plt+0x98c0>
  40c03d:	lea    rsi,[rip+0x1f07c]        # 42b0c0 <__ctype_b_loc@plt+0x28df0>
  40c044:	mov    edx,0x8
  40c049:	mov    rdi,rbx
  40c04c:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40c051:	mov    QWORD PTR [rsp],rax
  40c055:	mov    DWORD PTR [rsp+0x8],0x4
  40c05d:	mov    rcx,QWORD PTR [rbx+0x10]
  40c061:	add    rcx,0xfffffffffffffff0
  40c065:	mov    rdx,rsp
  40c068:	mov    rdi,rbx
  40c06b:	mov    rsi,r14
  40c06e:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40c073:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40c078:	mov    eax,0x1
  40c07d:	add    rsp,0x10
  40c081:	pop    rbx
  40c082:	pop    r14
  40c084:	pop    r15
  40c086:	ret    
  40c087:	nop    WORD PTR [rax+rax*1+0x0]
  40c090:	push   rax
  40c091:	lea    rsi,[rip+0x1f572]        # 42b60a <__ctype_b_loc@plt+0x2933a>
  40c098:	lea    rdx,[rip+0x24b61]        # 430c00 <__ctype_b_loc@plt+0x2e930>
  40c09f:	call   402960 <__ctype_b_loc@plt+0x690>
  40c0a4:	mov    eax,0x1
  40c0a9:	pop    rcx
  40c0aa:	ret    
  40c0ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40c0b0:	push   r15
  40c0b2:	push   r14
  40c0b4:	push   r13
  40c0b6:	push   r12
  40c0b8:	push   rbx
  40c0b9:	sub    rsp,0x10
  40c0bd:	mov    r13,rdi
  40c0c0:	mov    r14d,0xa0
  40c0c6:	add    r14,QWORD PTR [rdi+0x20]
  40c0ca:	lea    rsi,[rip+0x1f655]        # 42b726 <__ctype_b_loc@plt+0x29456>
  40c0d1:	mov    edx,0x5
  40c0d6:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40c0db:	mov    QWORD PTR [rsp],rax
  40c0df:	mov    DWORD PTR [rsp+0x8],0x4
  40c0e7:	mov    rcx,QWORD PTR [r13+0x10]
  40c0eb:	mov    rdx,rsp
  40c0ee:	mov    rdi,r13
  40c0f1:	mov    rsi,r14
  40c0f4:	call   408700 <__ctype_b_loc@plt+0x6430>
  40c0f9:	mov    r14,QWORD PTR [r13+0x10]
  40c0fd:	lea    rax,[r14+0x10]
  40c101:	mov    QWORD PTR [r13+0x10],rax
  40c105:	lea    rcx,[rip+0x1ea0c]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40c10c:	cmp    r14,rcx
  40c10f:	je     40c1bf <__ctype_b_loc@plt+0x9eef>
  40c115:	cmp    DWORD PTR [r14+0x8],0x0
  40c11a:	jne    40c1bf <__ctype_b_loc@plt+0x9eef>
  40c120:	mov    QWORD PTR [r13+0x10],r14
  40c124:	mov    rax,QWORD PTR [r13+0x20]
  40c128:	mov    rcx,QWORD PTR [rax+0x78]
  40c12c:	cmp    rcx,QWORD PTR [rax+0x70]
  40c130:	jb     40c13e <__ctype_b_loc@plt+0x9e6e>
  40c132:	mov    rdi,r13
  40c135:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40c13a:	mov    r14,QWORD PTR [r13+0x10]
  40c13e:	xor    esi,esi
  40c140:	xor    edx,edx
  40c142:	mov    rdi,r13
  40c145:	call   403720 <__ctype_b_loc@plt+0x1450>
  40c14a:	mov    QWORD PTR [r14],rax
  40c14d:	mov    DWORD PTR [r14+0x8],0x5
  40c155:	mov    rax,QWORD PTR [r13+0x10]
  40c159:	lea    rcx,[rax+0x10]
  40c15d:	mov    QWORD PTR [r13+0x10],rcx
  40c161:	mov    rcx,QWORD PTR [rax]
  40c164:	mov    QWORD PTR [rax+0x10],rcx
  40c168:	mov    ecx,DWORD PTR [rax+0x8]
  40c16b:	mov    DWORD PTR [rax+0x18],ecx
  40c16e:	add    QWORD PTR [r13+0x10],0x10
  40c173:	mov    r14d,0xa0
  40c179:	add    r14,QWORD PTR [r13+0x20]
  40c17d:	lea    rsi,[rip+0x1f5a2]        # 42b726 <__ctype_b_loc@plt+0x29456>
  40c184:	mov    edx,0x5
  40c189:	mov    rdi,r13
  40c18c:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40c191:	mov    QWORD PTR [rsp],rax
  40c195:	mov    DWORD PTR [rsp+0x8],0x4
  40c19d:	mov    rcx,QWORD PTR [r13+0x10]
  40c1a1:	add    rcx,0xfffffffffffffff0
  40c1a5:	mov    rdx,rsp
  40c1a8:	mov    rdi,r13
  40c1ab:	mov    rsi,r14
  40c1ae:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40c1b3:	mov    rax,QWORD PTR [r13+0x10]
  40c1b7:	add    rax,0xfffffffffffffff0
  40c1bb:	mov    QWORD PTR [r13+0x10],rax
  40c1bf:	mov    rcx,QWORD PTR [rax-0x10]
  40c1c3:	mov    QWORD PTR [rax],rcx
  40c1c6:	mov    ecx,DWORD PTR [rax-0x8]
  40c1c9:	mov    DWORD PTR [rax+0x8],ecx
  40c1cc:	mov    r14,QWORD PTR [r13+0x10]
  40c1d0:	lea    rax,[r14+0x10]
  40c1d4:	mov    QWORD PTR [r13+0x10],rax
  40c1d8:	add    r14,0xfffffffffffffff0
  40c1dc:	lea    rsi,[rip+0x1eda7]        # 42af8a <__ctype_b_loc@plt+0x28cba>
  40c1e3:	mov    edx,0x7
  40c1e8:	mov    rdi,r13
  40c1eb:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40c1f0:	mov    QWORD PTR [rsp],rax
  40c1f4:	mov    DWORD PTR [rsp+0x8],0x4
  40c1fc:	mov    rcx,QWORD PTR [r13+0x10]
  40c200:	add    rcx,0xfffffffffffffff0
  40c204:	mov    rdx,rsp
  40c207:	mov    rdi,r13
  40c20a:	mov    rsi,r14
  40c20d:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40c212:	add    QWORD PTR [r13+0x10],0xfffffffffffffff0
  40c217:	lea    rsi,[rip+0x14d42]        # 420f60 <__ctype_b_loc@plt+0x1ec90>
  40c21e:	xor    edx,edx
  40c220:	mov    rdi,r13
  40c223:	call   40bb90 <__ctype_b_loc@plt+0x98c0>
  40c228:	mov    r15,QWORD PTR [r13+0x10]
  40c22c:	add    r15,0xffffffffffffffe0
  40c230:	lea    rsi,[rip+0x1f520]        # 42b757 <__ctype_b_loc@plt+0x29487>
  40c237:	mov    edx,0x5
  40c23c:	mov    rdi,r13
  40c23f:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40c244:	mov    QWORD PTR [rsp],rax
  40c248:	mov    DWORD PTR [rsp+0x8],0x4
  40c250:	mov    rcx,QWORD PTR [r13+0x10]
  40c254:	add    rcx,0xfffffffffffffff0
  40c258:	mov    r14,rsp
  40c25b:	mov    rdi,r13
  40c25e:	mov    rsi,r15
  40c261:	mov    rdx,r14
  40c264:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40c269:	add    QWORD PTR [r13+0x10],0xfffffffffffffff0
  40c26e:	lea    rsi,[rip+0x14e8b]        # 421100 <__ctype_b_loc@plt+0x1ee30>
  40c275:	xor    edx,edx
  40c277:	mov    rdi,r13
  40c27a:	call   40bb90 <__ctype_b_loc@plt+0x98c0>
  40c27f:	mov    r15,QWORD PTR [r13+0x10]
  40c283:	add    r15,0xffffffffffffffe0
  40c287:	lea    rsi,[rip+0x1f49e]        # 42b72c <__ctype_b_loc@plt+0x2945c>
  40c28e:	mov    edx,0x5
  40c293:	mov    rdi,r13
  40c296:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40c29b:	mov    QWORD PTR [rsp],rax
  40c29f:	mov    DWORD PTR [rsp+0x8],0x4
  40c2a7:	mov    rcx,QWORD PTR [r13+0x10]
  40c2ab:	add    rcx,0xfffffffffffffff0
  40c2af:	mov    rdi,r13
  40c2b2:	mov    rsi,r15
  40c2b5:	mov    rdx,r14
  40c2b8:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40c2bd:	add    QWORD PTR [r13+0x10],0xfffffffffffffff0
  40c2c2:	lea    rsi,[rip+0x14ed7]        # 4211a0 <__ctype_b_loc@plt+0x1eed0>
  40c2c9:	xor    edx,edx
  40c2cb:	mov    rdi,r13
  40c2ce:	call   40bb90 <__ctype_b_loc@plt+0x98c0>
  40c2d3:	mov    r15,QWORD PTR [r13+0x10]
  40c2d7:	add    r15,0xffffffffffffffe0
  40c2db:	lea    rsi,[rip+0x1ef2e]        # 42b210 <__ctype_b_loc@plt+0x28f40>
  40c2e2:	mov    edx,0x5
  40c2e7:	mov    rdi,r13
  40c2ea:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40c2ef:	mov    QWORD PTR [rsp],rax
  40c2f3:	mov    DWORD PTR [rsp+0x8],0x4
  40c2fb:	mov    rcx,QWORD PTR [r13+0x10]
  40c2ff:	add    rcx,0xfffffffffffffff0
  40c303:	mov    rdi,r13
  40c306:	mov    rsi,r15
  40c309:	mov    rdx,r14
  40c30c:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40c311:	add    QWORD PTR [r13+0x10],0xfffffffffffffff0
  40c316:	lea    rsi,[rip+0x14f03]        # 421220 <__ctype_b_loc@plt+0x1ef50>
  40c31d:	xor    edx,edx
  40c31f:	mov    rdi,r13
  40c322:	call   40bb90 <__ctype_b_loc@plt+0x98c0>
  40c327:	mov    r15,QWORD PTR [r13+0x10]
  40c32b:	add    r15,0xffffffffffffffe0
  40c32f:	lea    rsi,[rip+0x1eb2e]        # 42ae64 <__ctype_b_loc@plt+0x28b94>
  40c336:	mov    edx,0x4
  40c33b:	mov    rdi,r13
  40c33e:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40c343:	mov    QWORD PTR [rsp],rax
  40c347:	mov    DWORD PTR [rsp+0x8],0x4
  40c34f:	mov    rcx,QWORD PTR [r13+0x10]
  40c353:	add    rcx,0xfffffffffffffff0
  40c357:	mov    rdi,r13
  40c35a:	mov    rsi,r15
  40c35d:	mov    rdx,r14
  40c360:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40c365:	add    QWORD PTR [r13+0x10],0xfffffffffffffff0
  40c36a:	lea    rsi,[rip+0x14eef]        # 421260 <__ctype_b_loc@plt+0x1ef90>
  40c371:	xor    edx,edx
  40c373:	mov    rdi,r13
  40c376:	call   40bb90 <__ctype_b_loc@plt+0x98c0>
  40c37b:	mov    r15,QWORD PTR [r13+0x10]
  40c37f:	add    r15,0xffffffffffffffe0
  40c383:	lea    rsi,[rip+0x1f3a8]        # 42b732 <__ctype_b_loc@plt+0x29462>
  40c38a:	mov    edx,0x5
  40c38f:	mov    rdi,r13
  40c392:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40c397:	mov    QWORD PTR [rsp],rax
  40c39b:	mov    DWORD PTR [rsp+0x8],0x4
  40c3a3:	mov    rcx,QWORD PTR [r13+0x10]
  40c3a7:	add    rcx,0xfffffffffffffff0
  40c3ab:	mov    rdi,r13
  40c3ae:	mov    rsi,r15
  40c3b1:	mov    rdx,r14
  40c3b4:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40c3b9:	add    QWORD PTR [r13+0x10],0xfffffffffffffff0
  40c3be:	lea    rsi,[rip+0x14edb]        # 4212a0 <__ctype_b_loc@plt+0x1efd0>
  40c3c5:	xor    edx,edx
  40c3c7:	mov    rdi,r13
  40c3ca:	call   40bb90 <__ctype_b_loc@plt+0x98c0>
  40c3cf:	mov    r15,QWORD PTR [r13+0x10]
  40c3d3:	add    r15,0xffffffffffffffe0
  40c3d7:	lea    rsi,[rip+0x1ebbf]        # 42af9d <__ctype_b_loc@plt+0x28ccd>
  40c3de:	mov    edx,0x4
  40c3e3:	mov    rdi,r13
  40c3e6:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40c3eb:	mov    QWORD PTR [rsp],rax
  40c3ef:	mov    DWORD PTR [rsp+0x8],0x4
  40c3f7:	mov    rcx,QWORD PTR [r13+0x10]
  40c3fb:	add    rcx,0xfffffffffffffff0
  40c3ff:	mov    rdi,r13
  40c402:	mov    rsi,r15
  40c405:	mov    rdx,r14
  40c408:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40c40d:	mov    rbx,QWORD PTR [r13+0x10]
  40c411:	add    rbx,0xfffffffffffffff0
  40c415:	mov    QWORD PTR [r13+0x10],rbx
  40c419:	mov    rax,QWORD PTR [r13+0x20]
  40c41d:	mov    rcx,QWORD PTR [rax+0x78]
  40c421:	cmp    rcx,QWORD PTR [rax+0x70]
  40c425:	jb     40c433 <__ctype_b_loc@plt+0xa163>
  40c427:	mov    rdi,r13
  40c42a:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40c42f:	mov    rbx,QWORD PTR [r13+0x10]
  40c433:	xor    esi,esi
  40c435:	mov    edx,0x1
  40c43a:	mov    rdi,r13
  40c43d:	call   403720 <__ctype_b_loc@plt+0x1450>
  40c442:	mov    QWORD PTR [rbx],rax
  40c445:	mov    DWORD PTR [rbx+0x8],0x5
  40c44c:	add    QWORD PTR [r13+0x10],0x10
  40c451:	lea    rsi,[rip+0x14998]        # 420df0 <__ctype_b_loc@plt+0x1eb20>
  40c458:	xor    edx,edx
  40c45a:	mov    rdi,r13
  40c45d:	call   40bb90 <__ctype_b_loc@plt+0x98c0>
  40c462:	mov    r14,QWORD PTR [r13+0x10]
  40c466:	add    r14,0xffffffffffffffe0
  40c46a:	lea    rsi,[rip+0x1f2e4]        # 42b755 <__ctype_b_loc@plt+0x29485>
  40c471:	mov    edx,0x7
  40c476:	mov    rdi,r13
  40c479:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40c47e:	mov    QWORD PTR [rsp],rax
  40c482:	mov    DWORD PTR [rsp+0x8],0x4
  40c48a:	mov    rcx,QWORD PTR [r13+0x10]
  40c48e:	add    rcx,0xfffffffffffffff0
  40c492:	mov    rdx,rsp
  40c495:	mov    rdi,r13
  40c498:	mov    rsi,r14
  40c49b:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40c4a0:	mov    rcx,QWORD PTR [r13+0x10]
  40c4a4:	add    rcx,0xfffffffffffffff0
  40c4a8:	mov    QWORD PTR [r13+0x10],rcx
  40c4ac:	mov    rax,QWORD PTR [r13+0x28]
  40c4b0:	cmp    rax,QWORD PTR [r13+0x50]
  40c4b4:	jne    40c4cf <__ctype_b_loc@plt+0xa1ff>
  40c4b6:	lea    rsi,[rip+0x1f2ec]        # 42b7a9 <__ctype_b_loc@plt+0x294d9>
  40c4bd:	xor    eax,eax
  40c4bf:	mov    rdi,r13
  40c4c2:	call   404080 <__ctype_b_loc@plt+0x1db0>
  40c4c7:	mov    rcx,QWORD PTR [r13+0x10]
  40c4cb:	mov    rax,QWORD PTR [r13+0x28]
  40c4cf:	mov    rdx,QWORD PTR [rax+0x8]
  40c4d3:	mov    rdx,QWORD PTR [rdx]
  40c4d6:	mov    rdx,QWORD PTR [rdx+0x18]
  40c4da:	mov    QWORD PTR [r13+0x88],rdx
  40c4e1:	mov    DWORD PTR [r13+0x90],0x5
  40c4ec:	mov    rax,QWORD PTR [rax+0x8]
  40c4f0:	mov    rax,QWORD PTR [rax]
  40c4f3:	mov    rcx,QWORD PTR [rcx-0x10]
  40c4f7:	mov    QWORD PTR [rax+0x18],rcx
  40c4fb:	mov    rcx,QWORD PTR [r13+0x10]
  40c4ff:	cmp    DWORD PTR [rcx-0x8],0x4
  40c503:	jl     40c536 <__ctype_b_loc@plt+0xa266>
  40c505:	mov    rsi,QWORD PTR [rcx-0x10]
  40c509:	test   BYTE PTR [rsi+0x9],0x3
  40c50d:	je     40c536 <__ctype_b_loc@plt+0xa266>
  40c50f:	mov    cl,BYTE PTR [rax+0x9]
  40c512:	test   cl,0x4
  40c515:	je     40c536 <__ctype_b_loc@plt+0xa266>
  40c517:	mov    rdi,QWORD PTR [r13+0x20]
  40c51b:	cmp    BYTE PTR [rdi+0x21],0x1
  40c51f:	jne    40c528 <__ctype_b_loc@plt+0xa258>
  40c521:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40c526:	jmp    40c536 <__ctype_b_loc@plt+0xa266>
  40c528:	and    cl,0xf8
  40c52b:	mov    dl,BYTE PTR [rdi+0x20]
  40c52e:	and    dl,0x3
  40c531:	or     dl,cl
  40c533:	mov    BYTE PTR [rax+0x9],dl
  40c536:	add    QWORD PTR [r13+0x10],0xfffffffffffffff0
  40c53b:	lea    rsi,[rip+0x1eb5a]        # 42b09c <__ctype_b_loc@plt+0x28dcc>
  40c542:	lea    rdx,[rip+0x24707]        # 430c50 <__ctype_b_loc@plt+0x2e980>
  40c549:	mov    rdi,r13
  40c54c:	call   402960 <__ctype_b_loc@plt+0x690>
  40c551:	mov    rax,QWORD PTR [r13+0x20]
  40c555:	mov    rcx,QWORD PTR [rax+0x78]
  40c559:	cmp    rcx,QWORD PTR [rax+0x70]
  40c55d:	jb     40c567 <__ctype_b_loc@plt+0xa297>
  40c55f:	mov    rdi,r13
  40c562:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40c567:	mov    rbx,QWORD PTR [r13+0x10]
  40c56b:	xor    esi,esi
  40c56d:	mov    edx,0x1
  40c572:	mov    rdi,r13
  40c575:	call   403720 <__ctype_b_loc@plt+0x1450>
  40c57a:	mov    QWORD PTR [rbx],rax
  40c57d:	mov    DWORD PTR [rbx+0x8],0x5
  40c584:	add    QWORD PTR [r13+0x10],0x10
  40c589:	lea    rsi,[rip+0x148f0]        # 420e80 <__ctype_b_loc@plt+0x1ebb0>
  40c590:	xor    edx,edx
  40c592:	mov    rdi,r13
  40c595:	call   40bb90 <__ctype_b_loc@plt+0x98c0>
  40c59a:	mov    r14,QWORD PTR [r13+0x10]
  40c59e:	add    r14,0xffffffffffffffe0
  40c5a2:	lea    rsi,[rip+0x1f1ac]        # 42b755 <__ctype_b_loc@plt+0x29485>
  40c5a9:	mov    edx,0x7
  40c5ae:	mov    rdi,r13
  40c5b1:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40c5b6:	mov    QWORD PTR [rsp],rax
  40c5ba:	mov    DWORD PTR [rsp+0x8],0x4
  40c5c2:	mov    rcx,QWORD PTR [r13+0x10]
  40c5c6:	add    rcx,0xfffffffffffffff0
  40c5ca:	mov    rdx,rsp
  40c5cd:	mov    rdi,r13
  40c5d0:	mov    rsi,r14
  40c5d3:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40c5d8:	add    QWORD PTR [r13+0x10],0xfffffffffffffff0
  40c5dd:	mov    rax,QWORD PTR [rip+0x249f4]        # 430fd8 <__ctype_b_loc@plt+0x2ed08>
  40c5e4:	mov    r12,QWORD PTR [rax]
  40c5e7:	mov    esi,0x8
  40c5ec:	mov    rdi,r13
  40c5ef:	call   41dfb0 <__ctype_b_loc@plt+0x1bce0>
  40c5f4:	mov    r14,rax
  40c5f7:	mov    QWORD PTR [rax],0x0
  40c5fe:	mov    r15d,0xa0
  40c604:	add    r15,QWORD PTR [r13+0x20]
  40c608:	lea    rsi,[rip+0x1f117]        # 42b726 <__ctype_b_loc@plt+0x29456>
  40c60f:	mov    edx,0x5
  40c614:	mov    rdi,r13
  40c617:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40c61c:	mov    QWORD PTR [rsp],rax
  40c620:	mov    DWORD PTR [rsp+0x8],0x4
  40c628:	mov    rcx,QWORD PTR [r13+0x10]
  40c62c:	mov    rdx,rsp
  40c62f:	mov    rdi,r13
  40c632:	mov    rsi,r15
  40c635:	call   408700 <__ctype_b_loc@plt+0x6430>
  40c63a:	add    QWORD PTR [r13+0x10],0x10
  40c63f:	mov    esi,0xfffffffe
  40c644:	mov    rdi,r13
  40c647:	call   40d5b0 <__ctype_b_loc@plt+0xb2e0>
  40c64c:	mov    QWORD PTR [r14],r12
  40c64f:	mov    rax,QWORD PTR [r13+0x10]
  40c653:	mov    rcx,QWORD PTR [rax-0x10]
  40c657:	mov    QWORD PTR [rax],rcx
  40c65a:	mov    ecx,DWORD PTR [rax-0x8]
  40c65d:	mov    DWORD PTR [rax+0x8],ecx
  40c660:	add    QWORD PTR [r13+0x10],0x10
  40c665:	mov    esi,0xffffd8ef
  40c66a:	mov    edx,0x1
  40c66f:	mov    rdi,r13
  40c672:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  40c677:	mov    rax,QWORD PTR [r13+0x10]
  40c67b:	mov    rcx,QWORD PTR [rax-0x20]
  40c67f:	mov    QWORD PTR [rax],rcx
  40c682:	mov    ecx,DWORD PTR [rax-0x18]
  40c685:	mov    DWORD PTR [rax+0x8],ecx
  40c688:	mov    rax,QWORD PTR [r13+0x10]
  40c68c:	lea    r14,[rax+0x10]
  40c690:	mov    QWORD PTR [r13+0x10],r14
  40c694:	mov    ecx,DWORD PTR [rax-0x8]
  40c697:	cmp    ecx,0x8
  40c69a:	je     40c6b3 <__ctype_b_loc@plt+0xa3e3>
  40c69c:	cmp    ecx,0x7
  40c69f:	je     40c6a6 <__ctype_b_loc@plt+0xa3d6>
  40c6a1:	cmp    ecx,0x6
  40c6a4:	jne    40c705 <__ctype_b_loc@plt+0xa435>
  40c6a6:	mov    rcx,QWORD PTR [rax-0x10]
  40c6aa:	mov    rdx,QWORD PTR [rax]
  40c6ad:	mov    QWORD PTR [rcx+0x18],rdx
  40c6b1:	jmp    40c6c8 <__ctype_b_loc@plt+0xa3f8>
  40c6b3:	mov    rcx,QWORD PTR [rax-0x10]
  40c6b7:	mov    rdx,QWORD PTR [rax]
  40c6ba:	mov    QWORD PTR [rcx+0x78],rdx
  40c6be:	mov    DWORD PTR [rcx+0x80],0x5
  40c6c8:	mov    r14,QWORD PTR [r13+0x10]
  40c6cc:	mov    rsi,QWORD PTR [r14-0x10]
  40c6d0:	test   BYTE PTR [rsi+0x9],0x3
  40c6d4:	je     40c705 <__ctype_b_loc@plt+0xa435>
  40c6d6:	mov    rax,QWORD PTR [rax-0x10]
  40c6da:	mov    cl,BYTE PTR [rax+0x9]
  40c6dd:	test   cl,0x4
  40c6e0:	je     40c705 <__ctype_b_loc@plt+0xa435>
  40c6e2:	mov    rdi,QWORD PTR [r13+0x20]
  40c6e6:	cmp    BYTE PTR [rdi+0x21],0x1
  40c6ea:	jne    40c6f3 <__ctype_b_loc@plt+0xa423>
  40c6ec:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40c6f1:	jmp    40c701 <__ctype_b_loc@plt+0xa431>
  40c6f3:	and    cl,0xf8
  40c6f6:	mov    dl,BYTE PTR [rdi+0x20]
  40c6f9:	and    dl,0x3
  40c6fc:	or     dl,cl
  40c6fe:	mov    BYTE PTR [rax+0x9],dl
  40c701:	mov    r14,QWORD PTR [r13+0x10]
  40c705:	lea    rax,[r14-0x10]
  40c709:	mov    QWORD PTR [r13+0x10],rax
  40c70d:	add    r14,0xffffffffffffffc0
  40c711:	lea    rsi,[rip+0x1f346]        # 42ba5e <__ctype_b_loc@plt+0x2978e>
  40c718:	mov    edx,0x5
  40c71d:	mov    rdi,r13
  40c720:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40c725:	mov    QWORD PTR [rsp],rax
  40c729:	mov    DWORD PTR [rsp+0x8],0x4
  40c731:	mov    rcx,QWORD PTR [r13+0x10]
  40c735:	add    rcx,0xfffffffffffffff0
  40c739:	mov    rdx,rsp
  40c73c:	mov    rdi,r13
  40c73f:	mov    rsi,r14
  40c742:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40c747:	add    QWORD PTR [r13+0x10],0xfffffffffffffff0
  40c74c:	mov    rax,QWORD PTR [rip+0x2487d]        # 430fd0 <__ctype_b_loc@plt+0x2ed00>
  40c753:	mov    r12,QWORD PTR [rax]
  40c756:	mov    esi,0x8
  40c75b:	mov    rdi,r13
  40c75e:	call   41dfb0 <__ctype_b_loc@plt+0x1bce0>
  40c763:	mov    r14,rax
  40c766:	mov    QWORD PTR [rax],0x0
  40c76d:	mov    r15d,0xa0
  40c773:	add    r15,QWORD PTR [r13+0x20]
  40c777:	lea    rsi,[rip+0x1efa8]        # 42b726 <__ctype_b_loc@plt+0x29456>
  40c77e:	mov    edx,0x5
  40c783:	mov    rdi,r13
  40c786:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40c78b:	mov    QWORD PTR [rsp],rax
  40c78f:	mov    DWORD PTR [rsp+0x8],0x4
  40c797:	mov    rcx,QWORD PTR [r13+0x10]
  40c79b:	mov    rdx,rsp
  40c79e:	mov    rdi,r13
  40c7a1:	mov    rsi,r15
  40c7a4:	call   408700 <__ctype_b_loc@plt+0x6430>
  40c7a9:	add    QWORD PTR [r13+0x10],0x10
  40c7ae:	mov    esi,0xfffffffe
  40c7b3:	mov    rdi,r13
  40c7b6:	call   40d5b0 <__ctype_b_loc@plt+0xb2e0>
  40c7bb:	mov    QWORD PTR [r14],r12
  40c7be:	mov    rax,QWORD PTR [r13+0x10]
  40c7c2:	mov    rcx,QWORD PTR [rax-0x10]
  40c7c6:	mov    QWORD PTR [rax],rcx
  40c7c9:	mov    ecx,DWORD PTR [rax-0x8]
  40c7cc:	mov    DWORD PTR [rax+0x8],ecx
  40c7cf:	add    QWORD PTR [r13+0x10],0x10
  40c7d4:	mov    esi,0xffffd8ef
  40c7d9:	mov    edx,0x2
  40c7de:	mov    rdi,r13
  40c7e1:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  40c7e6:	mov    rax,QWORD PTR [r13+0x10]
  40c7ea:	mov    rcx,QWORD PTR [rax-0x20]
  40c7ee:	mov    QWORD PTR [rax],rcx
  40c7f1:	mov    ecx,DWORD PTR [rax-0x18]
  40c7f4:	mov    DWORD PTR [rax+0x8],ecx
  40c7f7:	mov    rax,QWORD PTR [r13+0x10]
  40c7fb:	lea    r14,[rax+0x10]
  40c7ff:	mov    QWORD PTR [r13+0x10],r14
  40c803:	mov    ecx,DWORD PTR [rax-0x8]
  40c806:	cmp    ecx,0x8
  40c809:	je     40c822 <__ctype_b_loc@plt+0xa552>
  40c80b:	cmp    ecx,0x7
  40c80e:	je     40c815 <__ctype_b_loc@plt+0xa545>
  40c810:	cmp    ecx,0x6
  40c813:	jne    40c874 <__ctype_b_loc@plt+0xa5a4>
  40c815:	mov    rcx,QWORD PTR [rax-0x10]
  40c819:	mov    rdx,QWORD PTR [rax]
  40c81c:	mov    QWORD PTR [rcx+0x18],rdx
  40c820:	jmp    40c837 <__ctype_b_loc@plt+0xa567>
  40c822:	mov    rcx,QWORD PTR [rax-0x10]
  40c826:	mov    rdx,QWORD PTR [rax]
  40c829:	mov    QWORD PTR [rcx+0x78],rdx
  40c82d:	mov    DWORD PTR [rcx+0x80],0x5
  40c837:	mov    r14,QWORD PTR [r13+0x10]
  40c83b:	mov    rsi,QWORD PTR [r14-0x10]
  40c83f:	test   BYTE PTR [rsi+0x9],0x3
  40c843:	je     40c874 <__ctype_b_loc@plt+0xa5a4>
  40c845:	mov    rax,QWORD PTR [rax-0x10]
  40c849:	mov    cl,BYTE PTR [rax+0x9]
  40c84c:	test   cl,0x4
  40c84f:	je     40c874 <__ctype_b_loc@plt+0xa5a4>
  40c851:	mov    rdi,QWORD PTR [r13+0x20]
  40c855:	cmp    BYTE PTR [rdi+0x21],0x1
  40c859:	jne    40c862 <__ctype_b_loc@plt+0xa592>
  40c85b:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40c860:	jmp    40c870 <__ctype_b_loc@plt+0xa5a0>
  40c862:	and    cl,0xf8
  40c865:	mov    dl,BYTE PTR [rdi+0x20]
  40c868:	and    dl,0x3
  40c86b:	or     dl,cl
  40c86d:	mov    BYTE PTR [rax+0x9],dl
  40c870:	mov    r14,QWORD PTR [r13+0x10]
  40c874:	lea    rax,[r14-0x10]
  40c878:	mov    QWORD PTR [r13+0x10],rax
  40c87c:	add    r14,0xffffffffffffffc0
  40c880:	lea    rsi,[rip+0x1ee8b]        # 42b712 <__ctype_b_loc@plt+0x29442>
  40c887:	mov    edx,0x6
  40c88c:	mov    rdi,r13
  40c88f:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40c894:	mov    QWORD PTR [rsp],rax
  40c898:	mov    DWORD PTR [rsp+0x8],0x4
  40c8a0:	mov    rcx,QWORD PTR [r13+0x10]
  40c8a4:	add    rcx,0xfffffffffffffff0
  40c8a8:	mov    rdx,rsp
  40c8ab:	mov    rdi,r13
  40c8ae:	mov    rsi,r14
  40c8b1:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40c8b6:	add    QWORD PTR [r13+0x10],0xfffffffffffffff0
  40c8bb:	mov    rax,QWORD PTR [rip+0x2472e]        # 430ff0 <__ctype_b_loc@plt+0x2ed20>
  40c8c2:	mov    r12,QWORD PTR [rax]
  40c8c5:	mov    esi,0x8
  40c8ca:	mov    rdi,r13
  40c8cd:	call   41dfb0 <__ctype_b_loc@plt+0x1bce0>
  40c8d2:	mov    r14,rax
  40c8d5:	mov    QWORD PTR [rax],0x0
  40c8dc:	mov    r15d,0xa0
  40c8e2:	add    r15,QWORD PTR [r13+0x20]
  40c8e6:	lea    rsi,[rip+0x1ee39]        # 42b726 <__ctype_b_loc@plt+0x29456>
  40c8ed:	mov    edx,0x5
  40c8f2:	mov    rdi,r13
  40c8f5:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40c8fa:	mov    QWORD PTR [rsp],rax
  40c8fe:	mov    DWORD PTR [rsp+0x8],0x4
  40c906:	mov    rcx,QWORD PTR [r13+0x10]
  40c90a:	mov    rdx,rsp
  40c90d:	mov    rdi,r13
  40c910:	mov    rsi,r15
  40c913:	call   408700 <__ctype_b_loc@plt+0x6430>
  40c918:	add    QWORD PTR [r13+0x10],0x10
  40c91d:	mov    esi,0xfffffffe
  40c922:	mov    rdi,r13
  40c925:	call   40d5b0 <__ctype_b_loc@plt+0xb2e0>
  40c92a:	mov    QWORD PTR [r14],r12
  40c92d:	mov    rax,QWORD PTR [r13+0x10]
  40c931:	mov    rcx,QWORD PTR [rax-0x20]
  40c935:	mov    QWORD PTR [rax],rcx
  40c938:	mov    ecx,DWORD PTR [rax-0x18]
  40c93b:	mov    DWORD PTR [rax+0x8],ecx
  40c93e:	mov    rax,QWORD PTR [r13+0x10]
  40c942:	lea    r14,[rax+0x10]
  40c946:	mov    QWORD PTR [r13+0x10],r14
  40c94a:	mov    ecx,DWORD PTR [rax-0x8]
  40c94d:	cmp    ecx,0x8
  40c950:	je     40c969 <__ctype_b_loc@plt+0xa699>
  40c952:	cmp    ecx,0x7
  40c955:	je     40c95c <__ctype_b_loc@plt+0xa68c>
  40c957:	cmp    ecx,0x6
  40c95a:	jne    40c9bb <__ctype_b_loc@plt+0xa6eb>
  40c95c:	mov    rcx,QWORD PTR [rax-0x10]
  40c960:	mov    rdx,QWORD PTR [rax]
  40c963:	mov    QWORD PTR [rcx+0x18],rdx
  40c967:	jmp    40c97e <__ctype_b_loc@plt+0xa6ae>
  40c969:	mov    rcx,QWORD PTR [rax-0x10]
  40c96d:	mov    rdx,QWORD PTR [rax]
  40c970:	mov    QWORD PTR [rcx+0x78],rdx
  40c974:	mov    DWORD PTR [rcx+0x80],0x5
  40c97e:	mov    r14,QWORD PTR [r13+0x10]
  40c982:	mov    rsi,QWORD PTR [r14-0x10]
  40c986:	test   BYTE PTR [rsi+0x9],0x3
  40c98a:	je     40c9bb <__ctype_b_loc@plt+0xa6eb>
  40c98c:	mov    rax,QWORD PTR [rax-0x10]
  40c990:	mov    cl,BYTE PTR [rax+0x9]
  40c993:	test   cl,0x4
  40c996:	je     40c9bb <__ctype_b_loc@plt+0xa6eb>
  40c998:	mov    rdi,QWORD PTR [r13+0x20]
  40c99c:	cmp    BYTE PTR [rdi+0x21],0x1
  40c9a0:	jne    40c9a9 <__ctype_b_loc@plt+0xa6d9>
  40c9a2:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40c9a7:	jmp    40c9b7 <__ctype_b_loc@plt+0xa6e7>
  40c9a9:	and    cl,0xf8
  40c9ac:	mov    dl,BYTE PTR [rdi+0x20]
  40c9af:	and    dl,0x3
  40c9b2:	or     dl,cl
  40c9b4:	mov    BYTE PTR [rax+0x9],dl
  40c9b7:	mov    r14,QWORD PTR [r13+0x10]
  40c9bb:	lea    rax,[r14-0x10]
  40c9bf:	mov    QWORD PTR [r13+0x10],rax
  40c9c3:	add    r14,0xffffffffffffffc0
  40c9c7:	lea    rsi,[rip+0x1ed4b]        # 42b719 <__ctype_b_loc@plt+0x29449>
  40c9ce:	mov    edx,0x6
  40c9d3:	mov    rdi,r13
  40c9d6:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40c9db:	mov    QWORD PTR [rsp],rax
  40c9df:	mov    DWORD PTR [rsp+0x8],0x4
  40c9e7:	mov    rcx,QWORD PTR [r13+0x10]
  40c9eb:	add    rcx,0xfffffffffffffff0
  40c9ef:	mov    rdx,rsp
  40c9f2:	mov    rdi,r13
  40c9f5:	mov    rsi,r14
  40c9f8:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40c9fd:	mov    r14,QWORD PTR [r13+0x10]
  40ca01:	lea    rax,[r14-0x20]
  40ca05:	mov    QWORD PTR [r13+0x10],rax
  40ca09:	add    r14,0xffffffffffffffd0
  40ca0d:	lea    rsi,[rip+0x1ed0c]        # 42b720 <__ctype_b_loc@plt+0x29450>
  40ca14:	mov    edx,0x5
  40ca19:	mov    rdi,r13
  40ca1c:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40ca21:	mov    QWORD PTR [rsp],rax
  40ca25:	mov    DWORD PTR [rsp+0x8],0x4
  40ca2d:	mov    rcx,QWORD PTR [r13+0x10]
  40ca31:	mov    rdx,rsp
  40ca34:	mov    rdi,r13
  40ca37:	mov    rsi,r14
  40ca3a:	call   408700 <__ctype_b_loc@plt+0x6430>
  40ca3f:	mov    rbx,QWORD PTR [r13+0x10]
  40ca43:	add    rbx,0x10
  40ca47:	mov    QWORD PTR [r13+0x10],rbx
  40ca4b:	mov    rax,QWORD PTR [r13+0x20]
  40ca4f:	mov    rcx,QWORD PTR [rax+0x78]
  40ca53:	cmp    rcx,QWORD PTR [rax+0x70]
  40ca57:	jb     40ca65 <__ctype_b_loc@plt+0xa795>
  40ca59:	mov    rdi,r13
  40ca5c:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40ca61:	mov    rbx,QWORD PTR [r13+0x10]
  40ca65:	xor    esi,esi
  40ca67:	mov    edx,0x1
  40ca6c:	mov    rdi,r13
  40ca6f:	call   403720 <__ctype_b_loc@plt+0x1450>
  40ca74:	mov    QWORD PTR [rbx],rax
  40ca77:	mov    DWORD PTR [rbx+0x8],0x5
  40ca7e:	add    QWORD PTR [r13+0x10],0x10
  40ca83:	lea    rsi,[rip+0x14466]        # 420ef0 <__ctype_b_loc@plt+0x1ec20>
  40ca8a:	xor    edx,edx
  40ca8c:	mov    rdi,r13
  40ca8f:	call   40bb90 <__ctype_b_loc@plt+0x98c0>
  40ca94:	mov    r14,QWORD PTR [r13+0x10]
  40ca98:	add    r14,0xffffffffffffffe0
  40ca9c:	lea    rsi,[rip+0x1ecb2]        # 42b755 <__ctype_b_loc@plt+0x29485>
  40caa3:	mov    edx,0x7
  40caa8:	mov    rdi,r13
  40caab:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40cab0:	mov    QWORD PTR [rsp],rax
  40cab4:	mov    DWORD PTR [rsp+0x8],0x4
  40cabc:	mov    rcx,QWORD PTR [r13+0x10]
  40cac0:	add    rcx,0xfffffffffffffff0
  40cac4:	mov    rdx,rsp
  40cac7:	mov    rdi,r13
  40caca:	mov    rsi,r14
  40cacd:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40cad2:	mov    rax,QWORD PTR [r13+0x10]
  40cad6:	lea    rcx,[rax-0x10]
  40cada:	mov    QWORD PTR [r13+0x10],rcx
  40cade:	mov    edx,DWORD PTR [rax-0x28]
  40cae1:	cmp    edx,0x8
  40cae4:	je     40cafe <__ctype_b_loc@plt+0xa82e>
  40cae6:	cmp    edx,0x7
  40cae9:	je     40caf0 <__ctype_b_loc@plt+0xa820>
  40caeb:	cmp    edx,0x6
  40caee:	jne    40cb51 <__ctype_b_loc@plt+0xa881>
  40caf0:	mov    rcx,QWORD PTR [rax-0x30]
  40caf4:	mov    rdx,QWORD PTR [rax-0x20]
  40caf8:	mov    QWORD PTR [rcx+0x18],rdx
  40cafc:	jmp    40cb14 <__ctype_b_loc@plt+0xa844>
  40cafe:	mov    rcx,QWORD PTR [rax-0x30]
  40cb02:	mov    rdx,QWORD PTR [rax-0x20]
  40cb06:	mov    QWORD PTR [rcx+0x78],rdx
  40cb0a:	mov    DWORD PTR [rcx+0x80],0x5
  40cb14:	mov    rcx,QWORD PTR [r13+0x10]
  40cb18:	mov    rsi,QWORD PTR [rcx-0x10]
  40cb1c:	test   BYTE PTR [rsi+0x9],0x3
  40cb20:	je     40cb51 <__ctype_b_loc@plt+0xa881>
  40cb22:	mov    rax,QWORD PTR [rax-0x30]
  40cb26:	mov    dl,BYTE PTR [rax+0x9]
  40cb29:	test   dl,0x4
  40cb2c:	je     40cb51 <__ctype_b_loc@plt+0xa881>
  40cb2e:	mov    rdi,QWORD PTR [r13+0x20]
  40cb32:	cmp    BYTE PTR [rdi+0x21],0x1
  40cb36:	jne    40cb3f <__ctype_b_loc@plt+0xa86f>
  40cb38:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40cb3d:	jmp    40cb4d <__ctype_b_loc@plt+0xa87d>
  40cb3f:	and    dl,0xf8
  40cb42:	mov    cl,BYTE PTR [rdi+0x20]
  40cb45:	and    cl,0x3
  40cb48:	or     cl,dl
  40cb4a:	mov    BYTE PTR [rax+0x9],cl
  40cb4d:	mov    rcx,QWORD PTR [r13+0x10]
  40cb51:	add    rcx,0xffffffffffffffe0
  40cb55:	mov    QWORD PTR [r13+0x10],rcx
  40cb59:	mov    eax,0x1
  40cb5e:	add    rsp,0x10
  40cb62:	pop    rbx
  40cb63:	pop    r12
  40cb65:	pop    r13
  40cb67:	pop    r14
  40cb69:	pop    r15
  40cb6b:	ret    
  40cb6c:	nop    DWORD PTR [rax+0x0]
  40cb70:	push   rax
  40cb71:	lea    rsi,[rip+0x1e527]        # 42b09f <__ctype_b_loc@plt+0x28dcf>
  40cb78:	lea    rdx,[rip+0x24171]        # 430cf0 <__ctype_b_loc@plt+0x2ea20>
  40cb7f:	call   402960 <__ctype_b_loc@plt+0x690>
  40cb84:	mov    eax,0x1
  40cb89:	pop    rcx
  40cb8a:	ret    
  40cb8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb90:	push   r14
  40cb92:	push   rbx
  40cb93:	sub    rsp,0x18
  40cb97:	mov    rbx,rdi
  40cb9a:	lea    rsi,[rip+0x1e6c8]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  40cba1:	lea    rdx,[rip+0x24178]        # 430d20 <__ctype_b_loc@plt+0x2ea50>
  40cba8:	call   402960 <__ctype_b_loc@plt+0x690>
  40cbad:	mov    rax,QWORD PTR [rbx+0x20]
  40cbb1:	mov    rcx,QWORD PTR [rax+0x78]
  40cbb5:	cmp    rcx,QWORD PTR [rax+0x70]
  40cbb9:	jb     40cbc3 <__ctype_b_loc@plt+0xa8f3>
  40cbbb:	mov    rdi,rbx
  40cbbe:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40cbc3:	mov    r14,QWORD PTR [rbx+0x10]
  40cbc7:	xor    esi,esi
  40cbc9:	mov    edx,0x1
  40cbce:	mov    rdi,rbx
  40cbd1:	call   403720 <__ctype_b_loc@plt+0x1450>
  40cbd6:	mov    QWORD PTR [r14],rax
  40cbd9:	mov    DWORD PTR [r14+0x8],0x5
  40cbe1:	mov    r14,QWORD PTR [rbx+0x10]
  40cbe5:	mov    rax,QWORD PTR [rbx+0x20]
  40cbe9:	add    r14,0x10
  40cbed:	mov    QWORD PTR [rbx+0x10],r14
  40cbf1:	mov    rcx,QWORD PTR [rax+0x78]
  40cbf5:	cmp    rcx,QWORD PTR [rax+0x70]
  40cbf9:	jb     40cc07 <__ctype_b_loc@plt+0xa937>
  40cbfb:	mov    rdi,rbx
  40cbfe:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40cc03:	mov    r14,QWORD PTR [rbx+0x10]
  40cc07:	lea    rsi,[rip+0x1e48d]        # 42b09b <__ctype_b_loc@plt+0x28dcb>
  40cc0e:	xor    edx,edx
  40cc10:	mov    rdi,rbx
  40cc13:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40cc18:	mov    QWORD PTR [r14],rax
  40cc1b:	mov    DWORD PTR [r14+0x8],0x4
  40cc23:	mov    rax,QWORD PTR [rbx+0x10]
  40cc27:	lea    rcx,[rax+0x10]
  40cc2b:	mov    QWORD PTR [rbx+0x10],rcx
  40cc2f:	mov    rcx,QWORD PTR [rax-0x10]
  40cc33:	mov    QWORD PTR [rax+0x10],rcx
  40cc37:	mov    ecx,DWORD PTR [rax-0x8]
  40cc3a:	mov    DWORD PTR [rax+0x18],ecx
  40cc3d:	add    QWORD PTR [rbx+0x10],0x10
  40cc42:	mov    esi,0xfffffffe
  40cc47:	mov    rdi,rbx
  40cc4a:	call   40d5b0 <__ctype_b_loc@plt+0xb2e0>
  40cc4f:	mov    rax,QWORD PTR [rbx+0x10]
  40cc53:	lea    rcx,[rax-0x10]
  40cc57:	mov    QWORD PTR [rbx+0x10],rcx
  40cc5b:	mov    rcx,QWORD PTR [rax-0x30]
  40cc5f:	mov    QWORD PTR [rax-0x10],rcx
  40cc63:	mov    ecx,DWORD PTR [rax-0x28]
  40cc66:	mov    DWORD PTR [rax-0x8],ecx
  40cc69:	mov    r14,QWORD PTR [rbx+0x10]
  40cc6d:	lea    rax,[r14+0x10]
  40cc71:	mov    QWORD PTR [rbx+0x10],rax
  40cc75:	add    r14,0xfffffffffffffff0
  40cc79:	lea    rsi,[rip+0x1e30a]        # 42af8a <__ctype_b_loc@plt+0x28cba>
  40cc80:	mov    edx,0x7
  40cc85:	mov    rdi,rbx
  40cc88:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40cc8d:	mov    QWORD PTR [rsp+0x8],rax
  40cc92:	mov    DWORD PTR [rsp+0x10],0x4
  40cc9a:	mov    rcx,QWORD PTR [rbx+0x10]
  40cc9e:	add    rcx,0xfffffffffffffff0
  40cca2:	lea    rdx,[rsp+0x8]
  40cca7:	mov    rdi,rbx
  40ccaa:	mov    rsi,r14
  40ccad:	call   408b60 <__ctype_b_loc@plt+0x6890>
  40ccb2:	mov    rax,QWORD PTR [rbx+0x10]
  40ccb6:	add    rax,0xffffffffffffffe0
  40ccba:	mov    QWORD PTR [rbx+0x10],rax
  40ccbe:	mov    eax,0x1
  40ccc3:	add    rsp,0x18
  40ccc7:	pop    rbx
  40ccc8:	pop    r14
  40ccca:	ret    
  40cccb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ccd0:	push   r14
  40ccd2:	push   rbx
  40ccd3:	push   rax
  40ccd4:	mov    rbx,rdi
  40ccd7:	mov    rdx,QWORD PTR [rdi+0x18]
  40ccdb:	lea    r14,[rip+0x1de36]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40cce2:	lea    rcx,[rip+0x1e4ed]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  40cce9:	cmp    rdx,r14
  40ccec:	je     40cd11 <__ctype_b_loc@plt+0xaa41>
  40ccee:	mov    rax,QWORD PTR [rbx+0x10]
  40ccf2:	cmp    rdx,rax
  40ccf5:	jae    40cd11 <__ctype_b_loc@plt+0xaa41>
  40ccf7:	movsxd rdx,DWORD PTR [rdx+0x8]
  40ccfb:	cmp    rdx,0xffffffffffffffff
  40ccff:	je     40cd11 <__ctype_b_loc@plt+0xaa41>
  40cd01:	cmp    edx,0x5
  40cd04:	je     40cd3d <__ctype_b_loc@plt+0xaa6d>
  40cd06:	lea    rax,[rip+0x23bd3]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  40cd0d:	mov    rcx,QWORD PTR [rax+rdx*8]
  40cd11:	lea    rsi,[rip+0x1e4aa]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  40cd18:	lea    rdx,[rip+0x1e8eb]        # 42b60a <__ctype_b_loc@plt+0x2933a>
  40cd1f:	xor    eax,eax
  40cd21:	mov    rdi,rbx
  40cd24:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  40cd29:	mov    esi,0x1
  40cd2e:	mov    rdi,rbx
  40cd31:	mov    rdx,rax
  40cd34:	call   410240 <__ctype_b_loc@plt+0xdf70>
  40cd39:	mov    rax,QWORD PTR [rbx+0x10]
  40cd3d:	mov    rcx,QWORD PTR [rbx+0x28]
  40cd41:	mov    rcx,QWORD PTR [rcx+0x8]
  40cd45:	mov    rcx,QWORD PTR [rcx]
  40cd48:	cmp    BYTE PTR [rcx+0xb],0x0
  40cd4c:	lea    rcx,[rcx+0x28]
  40cd50:	cmove  rcx,r14
  40cd54:	mov    rdx,QWORD PTR [rcx]
  40cd57:	mov    QWORD PTR [rax],rdx
  40cd5a:	mov    ecx,DWORD PTR [rcx+0x8]
  40cd5d:	mov    DWORD PTR [rax+0x8],ecx
  40cd60:	mov    rax,QWORD PTR [rbx+0x10]
  40cd64:	mov    rcx,QWORD PTR [rbx+0x18]
  40cd68:	lea    rdx,[rax+0x10]
  40cd6c:	mov    QWORD PTR [rbx+0x10],rdx
  40cd70:	cmp    rcx,rdx
  40cd73:	cmovb  r14,rcx
  40cd77:	mov    rcx,QWORD PTR [r14]
  40cd7a:	mov    QWORD PTR [rax+0x10],rcx
  40cd7e:	mov    ecx,DWORD PTR [r14+0x8]
  40cd82:	mov    DWORD PTR [rax+0x18],ecx
  40cd85:	mov    rax,QWORD PTR [rbx+0x10]
  40cd89:	lea    rcx,[rax+0x10]
  40cd8d:	mov    QWORD PTR [rbx+0x10],rcx
  40cd91:	mov    QWORD PTR [rax+0x10],0x0
  40cd99:	mov    DWORD PTR [rax+0x18],0x3
  40cda0:	add    QWORD PTR [rbx+0x10],0x10
  40cda5:	mov    eax,0x3
  40cdaa:	add    rsp,0x8
  40cdae:	pop    rbx
  40cdaf:	pop    r14
  40cdb1:	ret    
  40cdb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cdbc:	nop    DWORD PTR [rax+0x0]
  40cdc0:	push   rbp
  40cdc1:	push   r15
  40cdc3:	push   r14
  40cdc5:	push   r13
  40cdc7:	push   r12
  40cdc9:	push   rbx
  40cdca:	sub    rsp,0x98
  40cdd1:	mov    r15,rdi
  40cdd4:	mov    rax,QWORD PTR [rdi+0x18]
  40cdd8:	add    rax,0x10
  40cddc:	cmp    rax,QWORD PTR [rdi+0x10]
  40cde0:	lea    r12,[rip+0x1dd31]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40cde7:	cmovae rax,r12
  40cdeb:	mov    ecx,DWORD PTR [rax+0x8]
  40cdee:	cmp    ecx,0x3
  40cdf1:	je     40cead <__ctype_b_loc@plt+0xabdd>
  40cdf7:	cmp    ecx,0x4
  40cdfa:	jne    40cebb <__ctype_b_loc@plt+0xabeb>
  40ce00:	mov    r14,QWORD PTR [rax]
  40ce03:	add    r14,0x18
  40ce07:	lea    rsi,[rsp+0x20]
  40ce0c:	mov    rdi,r14
  40ce0f:	call   4020b0 <strtod@plt>
  40ce14:	mov    rbx,QWORD PTR [rsp+0x20]
  40ce19:	cmp    rbx,r14
  40ce1c:	je     40cebb <__ctype_b_loc@plt+0xabeb>
  40ce22:	mov    bpl,BYTE PTR [rbx]
  40ce25:	mov    eax,ebp
  40ce27:	or     al,0x20
  40ce29:	cmp    al,0x78
  40ce2b:	jne    40ce60 <__ctype_b_loc@plt+0xab90>
  40ce2d:	lea    rsi,[rsp+0x20]
  40ce32:	mov    edx,0x10
  40ce37:	mov    rdi,r14
  40ce3a:	call   402250 <strtoul@plt>
  40ce3f:	vmovq  xmm0,rax
  40ce44:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x1de24]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  40ce4c:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x1de2c]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  40ce54:	vhaddpd xmm0,xmm0,xmm0
  40ce58:	mov    rbx,QWORD PTR [rsp+0x20]
  40ce5d:	mov    bpl,BYTE PTR [rbx]
  40ce60:	test   bpl,bpl
  40ce63:	je     40cea2 <__ctype_b_loc@plt+0xabd2>
  40ce65:	vmovapd XMMWORD PTR [rsp+0x10],xmm0
  40ce6b:	call   4022d0 <__ctype_b_loc@plt>
  40ce70:	mov    rax,QWORD PTR [rax]
  40ce73:	movzx  ecx,bpl
  40ce77:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40ce7c:	je     40cebb <__ctype_b_loc@plt+0xabeb>
  40ce7e:	add    rbx,0x1
  40ce82:	vmovapd xmm0,XMMWORD PTR [rsp+0x10]
  40ce88:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce90:	movzx  ecx,BYTE PTR [rbx]
  40ce93:	add    rbx,0x1
  40ce97:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40ce9c:	jne    40ce90 <__ctype_b_loc@plt+0xabc0>
  40ce9e:	test   cl,cl
  40cea0:	jne    40cebb <__ctype_b_loc@plt+0xabeb>
  40cea2:	lea    rax,[rsp+0x8]
  40cea7:	vmovsd QWORD PTR [rsp+0x8],xmm0
  40cead:	vcvttsd2si rbx,QWORD PTR [rax]
  40ceb2:	test   rbx,rbx
  40ceb5:	jne    40d042 <__ctype_b_loc@plt+0xad72>
  40cebb:	mov    rax,QWORD PTR [r15+0x18]
  40cebf:	add    rax,0x10
  40cec3:	cmp    rax,QWORD PTR [r15+0x10]
  40cec7:	lea    r13,[rip+0x1dc4a]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40cece:	cmovae rax,r13
  40ced2:	mov    ecx,DWORD PTR [rax+0x8]
  40ced5:	cmp    ecx,0x3
  40ced8:	je     40d040 <__ctype_b_loc@plt+0xad70>
  40cede:	cmp    ecx,0x4
  40cee1:	jne    40cf66 <__ctype_b_loc@plt+0xac96>
  40cee7:	mov    r14,QWORD PTR [rax]
  40ceea:	add    r14,0x18
  40ceee:	lea    rsi,[rsp+0x20]
  40cef3:	mov    rdi,r14
  40cef6:	call   4020b0 <strtod@plt>
  40cefb:	mov    rbx,QWORD PTR [rsp+0x20]
  40cf00:	cmp    rbx,r14
  40cf03:	je     40cf66 <__ctype_b_loc@plt+0xac96>
  40cf05:	mov    bpl,BYTE PTR [rbx]
  40cf08:	mov    eax,ebp
  40cf0a:	or     al,0x20
  40cf0c:	cmp    al,0x78
  40cf0e:	jne    40cf2a <__ctype_b_loc@plt+0xac5a>
  40cf10:	lea    rsi,[rsp+0x20]
  40cf15:	mov    edx,0x10
  40cf1a:	mov    rdi,r14
  40cf1d:	call   402250 <strtoul@plt>
  40cf22:	mov    rbx,QWORD PTR [rsp+0x20]
  40cf27:	mov    bpl,BYTE PTR [rbx]
  40cf2a:	test   bpl,bpl
  40cf2d:	je     40d040 <__ctype_b_loc@plt+0xad70>
  40cf33:	call   4022d0 <__ctype_b_loc@plt>
  40cf38:	mov    rax,QWORD PTR [rax]
  40cf3b:	movzx  ecx,bpl
  40cf3f:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40cf44:	je     40cf66 <__ctype_b_loc@plt+0xac96>
  40cf46:	add    rbx,0x1
  40cf4a:	nop    WORD PTR [rax+rax*1+0x0]
  40cf50:	movzx  ecx,BYTE PTR [rbx]
  40cf53:	add    rbx,0x1
  40cf57:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40cf5c:	jne    40cf50 <__ctype_b_loc@plt+0xac80>
  40cf5e:	test   cl,cl
  40cf60:	je     40d040 <__ctype_b_loc@plt+0xad70>
  40cf66:	mov    rax,QWORD PTR [r15+0x18]
  40cf6a:	lea    rdx,[rax+0x10]
  40cf6e:	lea    rcx,[rip+0x1e261]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  40cf75:	cmp    rdx,QWORD PTR [r15+0x10]
  40cf79:	jae    40cf95 <__ctype_b_loc@plt+0xacc5>
  40cf7b:	cmp    rdx,r13
  40cf7e:	je     40cf95 <__ctype_b_loc@plt+0xacc5>
  40cf80:	movsxd rax,DWORD PTR [rax+0x18]
  40cf84:	cmp    rax,0xffffffffffffffff
  40cf88:	je     40cf95 <__ctype_b_loc@plt+0xacc5>
  40cf8a:	lea    rcx,[rip+0x2394f]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  40cf91:	mov    rcx,QWORD PTR [rcx+rax*8]
  40cf95:	lea    rsi,[rip+0x1e226]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  40cf9c:	lea    rdx,[rip+0x1defe]        # 42aea1 <__ctype_b_loc@plt+0x28bd1>
  40cfa3:	xor    eax,eax
  40cfa5:	mov    rdi,r15
  40cfa8:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  40cfad:	mov    r14,rax
  40cfb0:	mov    rax,QWORD PTR [r15+0x28]
  40cfb4:	sub    rax,QWORD PTR [r15+0x50]
  40cfb8:	jbe    40d027 <__ctype_b_loc@plt+0xad57>
  40cfba:	shr    rax,0x3
  40cfbe:	imul   eax,eax,0xcccccccd
  40cfc4:	mov    DWORD PTR [rsp+0x94],eax
  40cfcb:	lea    rsi,[rip+0x1de85]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  40cfd2:	lea    rdx,[rsp+0x20]
  40cfd7:	mov    rdi,r15
  40cfda:	call   410310 <__ctype_b_loc@plt+0xe040>
  40cfdf:	mov    rdi,QWORD PTR [rsp+0x30]
  40cfe4:	lea    rsi,[rip+0x1e165]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  40cfeb:	call   402180 <strcmp@plt>
  40cff0:	cmp    eax,0x1
  40cff3:	mov    edx,0x2
  40cff8:	sbb    edx,0x0
  40cffb:	mov    rcx,QWORD PTR [rsp+0x28]
  40d000:	test   rcx,rcx
  40d003:	jne    40d011 <__ctype_b_loc@plt+0xad41>
  40d005:	lea    rcx,[rip+0x1e169]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  40d00c:	mov    QWORD PTR [rsp+0x28],rcx
  40d011:	lea    rsi,[rip+0x1e15f]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  40d018:	xor    eax,eax
  40d01a:	mov    rdi,r15
  40d01d:	mov    r8,r14
  40d020:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40d025:	jmp    40d040 <__ctype_b_loc@plt+0xad70>
  40d027:	lea    rsi,[rip+0x1e10c]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  40d02e:	mov    edx,0x2
  40d033:	xor    eax,eax
  40d035:	mov    rdi,r15
  40d038:	mov    rcx,r14
  40d03b:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40d040:	xor    ebx,ebx
  40d042:	mov    rdx,QWORD PTR [r15+0x18]
  40d046:	lea    rcx,[rip+0x1e189]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  40d04d:	cmp    rdx,r12
  40d050:	je     40d075 <__ctype_b_loc@plt+0xada5>
  40d052:	mov    rax,QWORD PTR [r15+0x10]
  40d056:	cmp    rdx,rax
  40d059:	jae    40d075 <__ctype_b_loc@plt+0xada5>
  40d05b:	movsxd rdx,DWORD PTR [rdx+0x8]
  40d05f:	cmp    rdx,0xffffffffffffffff
  40d063:	je     40d075 <__ctype_b_loc@plt+0xada5>
  40d065:	cmp    edx,0x5
  40d068:	je     40d0a1 <__ctype_b_loc@plt+0xadd1>
  40d06a:	lea    rax,[rip+0x2386f]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  40d071:	mov    rcx,QWORD PTR [rax+rdx*8]
  40d075:	lea    rsi,[rip+0x1e146]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  40d07c:	lea    rdx,[rip+0x1e587]        # 42b60a <__ctype_b_loc@plt+0x2933a>
  40d083:	xor    eax,eax
  40d085:	mov    rdi,r15
  40d088:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  40d08d:	mov    esi,0x1
  40d092:	mov    rdi,r15
  40d095:	mov    rdx,rax
  40d098:	call   410240 <__ctype_b_loc@plt+0xdf70>
  40d09d:	mov    rax,QWORD PTR [r15+0x10]
  40d0a1:	lea    edx,[rbx+0x1]
  40d0a4:	vcvtsi2sd xmm0,xmm1,edx
  40d0a8:	vmovq  QWORD PTR [rax],xmm0
  40d0ac:	mov    DWORD PTR [rax+0x8],0x3
  40d0b3:	mov    rcx,QWORD PTR [r15+0x10]
  40d0b7:	mov    rax,QWORD PTR [r15+0x18]
  40d0bb:	lea    rsi,[rcx+0x10]
  40d0bf:	mov    QWORD PTR [r15+0x10],rsi
  40d0c3:	cmp    rax,rsi
  40d0c6:	cmovae rax,r12
  40d0ca:	mov    rsi,QWORD PTR [rax]
  40d0cd:	cmp    DWORD PTR [rsi+0x38],ebx
  40d0d0:	jbe    40d0df <__ctype_b_loc@plt+0xae0f>
  40d0d2:	movsxd rax,ebx
  40d0d5:	shl    rax,0x4
  40d0d9:	add    rax,QWORD PTR [rsi+0x18]
  40d0dd:	jmp    40d14f <__ctype_b_loc@plt+0xae7f>
  40d0df:	test   edx,edx
  40d0e1:	je     40d121 <__ctype_b_loc@plt+0xae51>
  40d0e3:	vmovq  rdx,xmm0
  40d0e8:	mov    rax,rdx
  40d0eb:	shr    rax,0x20
  40d0ef:	add    eax,edx
  40d0f1:	mov    dl,BYTE PTR [rsi+0xb]
  40d0f4:	mov    rdi,0xffffffffffffffff
  40d0fb:	shlx   rdi,rdi,rdx
  40d100:	or     rdi,0x1
  40d104:	xor    rdi,0xfffffffffffffffe
  40d108:	xor    edx,edx
  40d10a:	div    rdi
  40d10d:	lea    rax,[rdx+rdx*4]
  40d111:	shl    rax,0x3
  40d115:	add    rax,QWORD PTR [rsi+0x20]
  40d119:	cmp    DWORD PTR [rax+0x18],0x3
  40d11d:	jne    40d143 <__ctype_b_loc@plt+0xae73>
  40d11f:	jmp    40d136 <__ctype_b_loc@plt+0xae66>
  40d121:	mov    rax,QWORD PTR [rsi+0x20]
  40d125:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d12f:	nop
  40d130:	cmp    DWORD PTR [rax+0x18],0x3
  40d134:	jne    40d143 <__ctype_b_loc@plt+0xae73>
  40d136:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40d13b:	vucomisd xmm1,xmm0
  40d13f:	jne    40d143 <__ctype_b_loc@plt+0xae73>
  40d141:	jnp    40d14f <__ctype_b_loc@plt+0xae7f>
  40d143:	mov    rax,QWORD PTR [rax+0x20]
  40d147:	test   rax,rax
  40d14a:	jne    40d130 <__ctype_b_loc@plt+0xae60>
  40d14c:	mov    rax,r12
  40d14f:	mov    rdx,QWORD PTR [rax]
  40d152:	mov    QWORD PTR [rcx+0x10],rdx
  40d156:	mov    eax,DWORD PTR [rax+0x8]
  40d159:	mov    DWORD PTR [rcx+0x18],eax
  40d15c:	mov    rcx,QWORD PTR [r15+0x10]
  40d160:	lea    rax,[rcx+0x10]
  40d164:	mov    QWORD PTR [r15+0x10],rax
  40d168:	cmp    rcx,r12
  40d16b:	je     40d17a <__ctype_b_loc@plt+0xaeaa>
  40d16d:	xor    eax,eax
  40d16f:	cmp    DWORD PTR [rcx+0x8],0x0
  40d173:	setne  al
  40d176:	add    eax,eax
  40d178:	jmp    40d17f <__ctype_b_loc@plt+0xaeaf>
  40d17a:	mov    eax,0x2
  40d17f:	add    rsp,0x98
  40d186:	pop    rbx
  40d187:	pop    r12
  40d189:	pop    r13
  40d18b:	pop    r14
  40d18d:	pop    r15
  40d18f:	pop    rbp
  40d190:	ret    
  40d191:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d19b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d1a0:	push   r14
  40d1a2:	push   rbx
  40d1a3:	push   rax
  40d1a4:	mov    rbx,rdi
  40d1a7:	mov    rdx,QWORD PTR [rdi+0x18]
  40d1ab:	lea    r14,[rip+0x1d966]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40d1b2:	lea    rcx,[rip+0x1e01d]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  40d1b9:	cmp    rdx,r14
  40d1bc:	je     40d1e1 <__ctype_b_loc@plt+0xaf11>
  40d1be:	mov    rax,QWORD PTR [rbx+0x10]
  40d1c2:	cmp    rdx,rax
  40d1c5:	jae    40d1e1 <__ctype_b_loc@plt+0xaf11>
  40d1c7:	movsxd rdx,DWORD PTR [rdx+0x8]
  40d1cb:	cmp    rdx,0xffffffffffffffff
  40d1cf:	je     40d1e1 <__ctype_b_loc@plt+0xaf11>
  40d1d1:	cmp    edx,0x5
  40d1d4:	je     40d20d <__ctype_b_loc@plt+0xaf3d>
  40d1d6:	lea    rax,[rip+0x23703]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  40d1dd:	mov    rcx,QWORD PTR [rax+rdx*8]
  40d1e1:	lea    rsi,[rip+0x1dfda]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  40d1e8:	lea    rdx,[rip+0x1e41b]        # 42b60a <__ctype_b_loc@plt+0x2933a>
  40d1ef:	xor    eax,eax
  40d1f1:	mov    rdi,rbx
  40d1f4:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  40d1f9:	mov    esi,0x1
  40d1fe:	mov    rdi,rbx
  40d201:	mov    rdx,rax
  40d204:	call   410240 <__ctype_b_loc@plt+0xdf70>
  40d209:	mov    rax,QWORD PTR [rbx+0x10]
  40d20d:	mov    rcx,QWORD PTR [rbx+0x28]
  40d211:	mov    rcx,QWORD PTR [rcx+0x8]
  40d215:	mov    rcx,QWORD PTR [rcx]
  40d218:	cmp    BYTE PTR [rcx+0xb],0x0
  40d21c:	lea    rcx,[rcx+0x28]
  40d220:	cmove  rcx,r14
  40d224:	mov    rdx,QWORD PTR [rcx]
  40d227:	mov    QWORD PTR [rax],rdx
  40d22a:	mov    ecx,DWORD PTR [rcx+0x8]
  40d22d:	mov    DWORD PTR [rax+0x8],ecx
  40d230:	mov    rax,QWORD PTR [rbx+0x10]
  40d234:	mov    rcx,QWORD PTR [rbx+0x18]
  40d238:	lea    rdx,[rax+0x10]
  40d23c:	mov    QWORD PTR [rbx+0x10],rdx
  40d240:	cmp    rcx,rdx
  40d243:	cmovb  r14,rcx
  40d247:	mov    rcx,QWORD PTR [r14]
  40d24a:	mov    QWORD PTR [rax+0x10],rcx
  40d24e:	mov    ecx,DWORD PTR [r14+0x8]
  40d252:	mov    DWORD PTR [rax+0x18],ecx
  40d255:	mov    rax,QWORD PTR [rbx+0x10]
  40d259:	mov    DWORD PTR [rax+0x18],0x0
  40d260:	add    rax,0x20
  40d264:	mov    QWORD PTR [rbx+0x10],rax
  40d268:	mov    eax,0x3
  40d26d:	add    rsp,0x8
  40d271:	pop    rbx
  40d272:	pop    r14
  40d274:	ret    
  40d275:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d27f:	nop
  40d280:	push   rbp
  40d281:	push   r15
  40d283:	push   r14
  40d285:	push   r13
  40d287:	push   r12
  40d289:	push   rbx
  40d28a:	push   rax
  40d28b:	mov    r14,rdi
  40d28e:	mov    r12,QWORD PTR [rdi+0x18]
  40d292:	lea    rax,[rip+0x1d87f]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40d299:	lea    rcx,[rip+0x1df36]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  40d2a0:	cmp    r12,rax
  40d2a3:	je     40d2c9 <__ctype_b_loc@plt+0xaff9>
  40d2a5:	mov    rax,QWORD PTR [r14+0x10]
  40d2a9:	cmp    r12,rax
  40d2ac:	jae    40d2c9 <__ctype_b_loc@plt+0xaff9>
  40d2ae:	movsxd rdx,DWORD PTR [r12+0x8]
  40d2b3:	cmp    rdx,0xffffffffffffffff
  40d2b7:	je     40d2c9 <__ctype_b_loc@plt+0xaff9>
  40d2b9:	cmp    edx,0x5
  40d2bc:	je     40d2f9 <__ctype_b_loc@plt+0xb029>
  40d2be:	lea    rax,[rip+0x2361b]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  40d2c5:	mov    rcx,QWORD PTR [rax+rdx*8]
  40d2c9:	lea    rsi,[rip+0x1def2]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  40d2d0:	lea    rdx,[rip+0x1e333]        # 42b60a <__ctype_b_loc@plt+0x2933a>
  40d2d7:	xor    eax,eax
  40d2d9:	mov    rdi,r14
  40d2dc:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  40d2e1:	mov    esi,0x1
  40d2e6:	mov    rdi,r14
  40d2e9:	mov    rdx,rax
  40d2ec:	call   410240 <__ctype_b_loc@plt+0xdf70>
  40d2f1:	mov    rax,QWORD PTR [r14+0x10]
  40d2f5:	mov    r12,QWORD PTR [r14+0x18]
  40d2f9:	lea    rcx,[r12+0x20]
  40d2fe:	cmp    rax,rcx
  40d301:	jae    40d3c0 <__ctype_b_loc@plt+0xb0f0>
  40d307:	lea    rsi,[rax+0x10]
  40d30b:	cmp    rcx,rsi
  40d30e:	cmova  rsi,rcx
  40d312:	mov    rdx,rax
  40d315:	not    rdx
  40d318:	add    rdx,rsi
  40d31b:	mov    esi,0x3
  40d320:	sub    rsi,rax
  40d323:	lea    rbp,[r12+rsi*1]
  40d327:	add    rbp,0x1c
  40d32b:	mov    edi,ebp
  40d32d:	shr    edi,0x4
  40d330:	add    edi,0x1
  40d333:	mov    rsi,rax
  40d336:	and    rdi,0x7
  40d33a:	je     40d361 <__ctype_b_loc@plt+0xb091>
  40d33c:	neg    rdi
  40d33f:	mov    rsi,rax
  40d342:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d34c:	nop    DWORD PTR [rax+0x0]
  40d350:	mov    DWORD PTR [rsi+0x8],0x0
  40d357:	add    rsi,0x10
  40d35b:	add    rdi,0x1
  40d35f:	jne    40d350 <__ctype_b_loc@plt+0xb080>
  40d361:	shr    rdx,0x4
  40d365:	cmp    rbp,0x70
  40d369:	jb     40d3b1 <__ctype_b_loc@plt+0xb0e1>
  40d36b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d370:	mov    DWORD PTR [rsi+0x8],0x0
  40d377:	mov    DWORD PTR [rsi+0x18],0x0
  40d37e:	mov    DWORD PTR [rsi+0x28],0x0
  40d385:	mov    DWORD PTR [rsi+0x38],0x0
  40d38c:	mov    DWORD PTR [rsi+0x48],0x0
  40d393:	mov    DWORD PTR [rsi+0x58],0x0
  40d39a:	mov    DWORD PTR [rsi+0x68],0x0
  40d3a1:	mov    DWORD PTR [rsi+0x78],0x0
  40d3a8:	sub    rsi,0xffffffffffffff80
  40d3ac:	cmp    rsi,rcx
  40d3af:	jb     40d370 <__ctype_b_loc@plt+0xb0a0>
  40d3b1:	shl    rdx,0x4
  40d3b5:	add    rax,rdx
  40d3b8:	add    rax,0x10
  40d3bc:	mov    QWORD PTR [r14+0x10],rax
  40d3c0:	mov    QWORD PTR [r14+0x10],rcx
  40d3c4:	mov    rbx,QWORD PTR [r12]
  40d3c8:	mov    ebp,DWORD PTR [r12+0x18]
  40d3cd:	test   ebp,ebp
  40d3cf:	je     40d48a <__ctype_b_loc@plt+0xb1ba>
  40d3d5:	lea    r15,[r12+0x10]
  40d3da:	cmp    ebp,0x3
  40d3dd:	jne    40d404 <__ctype_b_loc@plt+0xb134>
  40d3df:	vmovsd xmm0,QWORD PTR [r15]
  40d3e4:	vcvttsd2si r13d,xmm0
  40d3e8:	test   r13d,r13d
  40d3eb:	jle    40d404 <__ctype_b_loc@plt+0xb134>
  40d3ed:	vcvtsi2sd xmm1,xmm1,r13d
  40d3f2:	vucomisd xmm0,xmm1
  40d3f6:	jne    40d404 <__ctype_b_loc@plt+0xb134>
  40d3f8:	jp     40d404 <__ctype_b_loc@plt+0xb134>
  40d3fa:	cmp    DWORD PTR [rbx+0x38],r13d
  40d3fe:	jge    40d4a8 <__ctype_b_loc@plt+0xb1d8>
  40d404:	mov    rdi,rbx
  40d407:	mov    rsi,r15
  40d40a:	call   409bf0 <__ctype_b_loc@plt+0x7920>
  40d40f:	mov    ecx,ebp
  40d411:	lea    rdx,[rip+0x1ce34]        # 42a24c <__ctype_b_loc@plt+0x27f7c>
  40d418:	nop    DWORD PTR [rax+rax*1+0x0]
  40d420:	mov    esi,DWORD PTR [rax+0x18]
  40d423:	cmp    esi,ebp
  40d425:	jne    40d449 <__ctype_b_loc@plt+0xb179>
  40d427:	cmp    ebp,0x3
  40d42a:	ja     40d440 <__ctype_b_loc@plt+0xb170>
  40d42c:	movsxd rdi,DWORD PTR [rdx+rcx*4]
  40d430:	add    rdi,rdx
  40d433:	jmp    rdi
  40d435:	mov    edi,DWORD PTR [rax+0x10]
  40d438:	cmp    edi,DWORD PTR [r15]
  40d43b:	jne    40d449 <__ctype_b_loc@plt+0xb179>
  40d43d:	jmp    40d475 <__ctype_b_loc@plt+0xb1a5>
  40d43f:	nop
  40d440:	mov    rdi,QWORD PTR [rax+0x10]
  40d444:	cmp    rdi,QWORD PTR [r15]
  40d447:	je     40d475 <__ctype_b_loc@plt+0xb1a5>
  40d449:	cmp    ebp,0x4
  40d44c:	jl     40d45c <__ctype_b_loc@plt+0xb18c>
  40d44e:	cmp    esi,0xb
  40d451:	jne    40d45c <__ctype_b_loc@plt+0xb18c>
  40d453:	mov    rsi,QWORD PTR [rax+0x10]
  40d457:	cmp    rsi,QWORD PTR [r15]
  40d45a:	je     40d475 <__ctype_b_loc@plt+0xb1a5>
  40d45c:	mov    rax,QWORD PTR [rax+0x20]
  40d460:	test   rax,rax
  40d463:	jne    40d420 <__ctype_b_loc@plt+0xb150>
  40d465:	jmp    40d492 <__ctype_b_loc@plt+0xb1c2>
  40d467:	vmovsd xmm0,QWORD PTR [rax+0x10]
  40d46c:	vucomisd xmm0,QWORD PTR [r15]
  40d471:	jne    40d449 <__ctype_b_loc@plt+0xb179>
  40d473:	jp     40d449 <__ctype_b_loc@plt+0xb179>
  40d475:	sub    rax,QWORD PTR [rbx+0x20]
  40d479:	shr    rax,0x3
  40d47d:	imul   r13d,eax,0xcccccccd
  40d484:	add    r13d,DWORD PTR [rbx+0x38]
  40d488:	jmp    40d4ac <__ctype_b_loc@plt+0xb1dc>
  40d48a:	mov    r13d,0xffffffff
  40d490:	jmp    40d4ac <__ctype_b_loc@plt+0xb1dc>
  40d492:	lea    rsi,[rip+0x1e1a4]        # 42b63d <__ctype_b_loc@plt+0x2936d>
  40d499:	xor    r13d,r13d
  40d49c:	xor    eax,eax
  40d49e:	mov    rdi,r14
  40d4a1:	call   404080 <__ctype_b_loc@plt+0x1db0>
  40d4a6:	jmp    40d4ac <__ctype_b_loc@plt+0xb1dc>
  40d4a8:	add    r13d,0xffffffff
  40d4ac:	movsxd rdx,DWORD PTR [rbx+0x38]
  40d4b0:	movsxd rax,r13d
  40d4b3:	mov    rcx,rax
  40d4b6:	shl    rcx,0x4
  40d4ba:	add    rax,0x1
  40d4be:	xchg   ax,ax
  40d4c0:	cmp    rax,rdx
  40d4c3:	jge    40d505 <__ctype_b_loc@plt+0xb235>
  40d4c5:	mov    rsi,QWORD PTR [rbx+0x18]
  40d4c9:	add    rax,0x1
  40d4cd:	cmp    DWORD PTR [rsi+rcx*1+0x18],0x0
  40d4d2:	lea    rcx,[rcx+0x10]
  40d4d6:	je     40d4c0 <__ctype_b_loc@plt+0xb1f0>
  40d4d8:	vcvtsi2sd xmm0,xmm2,eax
  40d4dc:	vmovsd QWORD PTR [r12+0x10],xmm0
  40d4e3:	mov    DWORD PTR [r12+0x18],0x3
  40d4ec:	mov    rax,QWORD PTR [rbx+0x18]
  40d4f0:	mov    rdx,QWORD PTR [rax+rcx*1]
  40d4f4:	mov    QWORD PTR [r12+0x20],rdx
  40d4f9:	add    rax,rcx
  40d4fc:	add    rax,0x8
  40d500:	jmp    40d585 <__ctype_b_loc@plt+0xb2b5>
  40d505:	sub    eax,edx
  40d507:	mov    cl,BYTE PTR [rbx+0xb]
  40d50a:	mov    edx,0x1
  40d50f:	shlx   rsi,rdx,rcx
  40d514:	cmp    eax,esi
  40d516:	jge    40d544 <__ctype_b_loc@plt+0xb274>
  40d518:	mov    rcx,QWORD PTR [rbx+0x20]
  40d51c:	movsxd rdx,eax
  40d51f:	movsxd rsi,esi
  40d522:	cdqe   
  40d524:	shl    rax,0x3
  40d528:	lea    rax,[rax+rax*4]
  40d52c:	nop    DWORD PTR [rax+0x0]
  40d530:	cmp    DWORD PTR [rcx+rax*1+0x8],0x0
  40d535:	jne    40d55e <__ctype_b_loc@plt+0xb28e>
  40d537:	add    rdx,0x1
  40d53b:	add    rax,0x28
  40d53f:	cmp    rdx,rsi
  40d542:	jl     40d530 <__ctype_b_loc@plt+0xb260>
  40d544:	mov    rcx,QWORD PTR [r14+0x10]
  40d548:	lea    rax,[rcx-0x10]
  40d54c:	mov    QWORD PTR [r14+0x10],rax
  40d550:	mov    DWORD PTR [rcx-0x8],0x0
  40d557:	mov    eax,0x1
  40d55c:	jmp    40d599 <__ctype_b_loc@plt+0xb2c9>
  40d55e:	mov    rdx,QWORD PTR [rcx+rax*1+0x10]
  40d563:	mov    QWORD PTR [r12+0x10],rdx
  40d568:	mov    ecx,DWORD PTR [rcx+rax*1+0x18]
  40d56c:	mov    DWORD PTR [r12+0x18],ecx
  40d571:	mov    rcx,QWORD PTR [rbx+0x20]
  40d575:	mov    rdx,QWORD PTR [rcx+rax*1]
  40d579:	mov    QWORD PTR [r12+0x20],rdx
  40d57e:	add    rax,rcx
  40d581:	add    rax,0x8
  40d585:	mov    eax,DWORD PTR [rax]
  40d587:	mov    DWORD PTR [r12+0x28],eax
  40d58c:	mov    rcx,QWORD PTR [r14+0x10]
  40d590:	add    rcx,0x10
  40d594:	mov    eax,0x2
  40d599:	mov    QWORD PTR [r14+0x10],rcx
  40d59d:	add    rsp,0x8
  40d5a1:	pop    rbx
  40d5a2:	pop    r12
  40d5a4:	pop    r13
  40d5a6:	pop    r14
  40d5a8:	pop    r15
  40d5aa:	pop    rbp
  40d5ab:	ret    
  40d5ac:	nop    DWORD PTR [rax+0x0]
  40d5b0:	push   rbx
  40d5b1:	mov    rbx,rdi
  40d5b4:	test   esi,esi
  40d5b6:	jle    40d5de <__ctype_b_loc@plt+0xb30e>
  40d5b8:	mov    rax,QWORD PTR [rbx+0x18]
  40d5bc:	movsxd rcx,esi
  40d5bf:	shl    rcx,0x4
  40d5c3:	add    rcx,rax
  40d5c6:	add    rcx,0xfffffffffffffff0
  40d5ca:	cmp    rcx,QWORD PTR [rbx+0x10]
  40d5ce:	lea    rax,[rip+0x1d543]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40d5d5:	cmovb  rax,rcx
  40d5d9:	jmp    40d679 <__ctype_b_loc@plt+0xb3a9>
  40d5de:	cmp    esi,0xffffd8f1
  40d5e4:	jl     40d5f6 <__ctype_b_loc@plt+0xb326>
  40d5e6:	movsxd rax,esi
  40d5e9:	shl    rax,0x4
  40d5ed:	add    rax,QWORD PTR [rbx+0x10]
  40d5f1:	jmp    40d679 <__ctype_b_loc@plt+0xb3a9>
  40d5f6:	cmp    esi,0xffffd8ee
  40d5fc:	je     40d619 <__ctype_b_loc@plt+0xb349>
  40d5fe:	cmp    esi,0xffffd8ef
  40d604:	je     40d61f <__ctype_b_loc@plt+0xb34f>
  40d606:	cmp    esi,0xffffd8f0
  40d60c:	jne    40d648 <__ctype_b_loc@plt+0xb378>
  40d60e:	mov    eax,0xa0
  40d613:	add    rax,QWORD PTR [rbx+0x20]
  40d617:	jmp    40d679 <__ctype_b_loc@plt+0xb3a9>
  40d619:	lea    rax,[rbx+0x78]
  40d61d:	jmp    40d679 <__ctype_b_loc@plt+0xb3a9>
  40d61f:	mov    rax,QWORD PTR [rbx+0x28]
  40d623:	mov    rax,QWORD PTR [rax+0x8]
  40d627:	mov    rcx,QWORD PTR [rax]
  40d62a:	lea    rax,[rbx+0x88]
  40d631:	mov    rcx,QWORD PTR [rcx+0x18]
  40d635:	mov    QWORD PTR [rbx+0x88],rcx
  40d63c:	mov    DWORD PTR [rbx+0x90],0x5
  40d646:	jmp    40d679 <__ctype_b_loc@plt+0xb3a9>
  40d648:	mov    rax,QWORD PTR [rbx+0x28]
  40d64c:	mov    rax,QWORD PTR [rax+0x8]
  40d650:	mov    rax,QWORD PTR [rax]
  40d653:	mov    ecx,0xffffd8ee
  40d658:	sub    ecx,esi
  40d65a:	movzx  edx,BYTE PTR [rax+0xb]
  40d65e:	cmp    ecx,edx
  40d660:	jle    40d66b <__ctype_b_loc@plt+0xb39b>
  40d662:	lea    rax,[rip+0x1d4af]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40d669:	jmp    40d679 <__ctype_b_loc@plt+0xb3a9>
  40d66b:	movsxd rcx,ecx
  40d66e:	shl    rcx,0x4
  40d672:	add    rax,rcx
  40d675:	add    rax,0x18
  40d679:	mov    rcx,QWORD PTR [rbx+0x10]
  40d67d:	cmp    DWORD PTR [rcx-0x8],0x0
  40d681:	je     40d689 <__ctype_b_loc@plt+0xb3b9>
  40d683:	mov    rsi,QWORD PTR [rcx-0x10]
  40d687:	jmp    40d68b <__ctype_b_loc@plt+0xb3bb>
  40d689:	xor    esi,esi
  40d68b:	movsxd rcx,DWORD PTR [rax+0x8]
  40d68f:	cmp    rcx,0x7
  40d693:	je     40d6cf <__ctype_b_loc@plt+0xb3ff>
  40d695:	cmp    ecx,0x5
  40d698:	jne    40d6fd <__ctype_b_loc@plt+0xb42d>
  40d69a:	mov    rcx,QWORD PTR [rax]
  40d69d:	mov    QWORD PTR [rcx+0x10],rsi
  40d6a1:	test   rsi,rsi
  40d6a4:	je     40d709 <__ctype_b_loc@plt+0xb439>
  40d6a6:	test   BYTE PTR [rsi+0x9],0x3
  40d6aa:	je     40d709 <__ctype_b_loc@plt+0xb439>
  40d6ac:	mov    rax,QWORD PTR [rax]
  40d6af:	mov    cl,BYTE PTR [rax+0x9]
  40d6b2:	test   cl,0x4
  40d6b5:	je     40d709 <__ctype_b_loc@plt+0xb439>
  40d6b7:	mov    rdx,QWORD PTR [rbx+0x20]
  40d6bb:	and    cl,0xfb
  40d6be:	mov    BYTE PTR [rax+0x9],cl
  40d6c1:	mov    rcx,QWORD PTR [rdx+0x40]
  40d6c5:	mov    QWORD PTR [rax+0x30],rcx
  40d6c9:	mov    QWORD PTR [rdx+0x40],rax
  40d6cd:	jmp    40d709 <__ctype_b_loc@plt+0xb439>
  40d6cf:	mov    rcx,QWORD PTR [rax]
  40d6d2:	mov    QWORD PTR [rcx+0x10],rsi
  40d6d6:	test   rsi,rsi
  40d6d9:	je     40d709 <__ctype_b_loc@plt+0xb439>
  40d6db:	test   BYTE PTR [rsi+0x9],0x3
  40d6df:	je     40d709 <__ctype_b_loc@plt+0xb439>
  40d6e1:	mov    rax,QWORD PTR [rax]
  40d6e4:	mov    cl,BYTE PTR [rax+0x9]
  40d6e7:	test   cl,0x4
  40d6ea:	je     40d709 <__ctype_b_loc@plt+0xb439>
  40d6ec:	mov    rdi,QWORD PTR [rbx+0x20]
  40d6f0:	cmp    BYTE PTR [rdi+0x21],0x1
  40d6f4:	jne    40d710 <__ctype_b_loc@plt+0xb440>
  40d6f6:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40d6fb:	jmp    40d709 <__ctype_b_loc@plt+0xb439>
  40d6fd:	mov    rax,QWORD PTR [rbx+0x20]
  40d701:	mov    QWORD PTR [rax+rcx*8+0xe0],rsi
  40d709:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  40d70e:	pop    rbx
  40d70f:	ret    
  40d710:	and    cl,0xf8
  40d713:	mov    dl,BYTE PTR [rdi+0x20]
  40d716:	and    dl,0x3
  40d719:	or     dl,cl
  40d71b:	mov    BYTE PTR [rax+0x9],dl
  40d71e:	jmp    40d709 <__ctype_b_loc@plt+0xb439>
  40d720:	push   rbp
  40d721:	push   r15
  40d723:	push   r14
  40d725:	push   r13
  40d727:	push   r12
  40d729:	push   rbx
  40d72a:	push   rax
  40d72b:	mov    r15,rdi
  40d72e:	mov    rcx,QWORD PTR [rdi+0x10]
  40d732:	mov    rdx,QWORD PTR [rdi+0x18]
  40d736:	lea    rax,[rdx+0x10]
  40d73a:	cmp    rcx,rax
  40d73d:	jae    40d803 <__ctype_b_loc@plt+0xb533>
  40d743:	lea    rdi,[rcx+0x10]
  40d747:	cmp    rax,rdi
  40d74a:	cmova  rdi,rax
  40d74e:	mov    rsi,rcx
  40d751:	not    rsi
  40d754:	add    rsi,rdi
  40d757:	cmp    rcx,rdx
  40d75a:	mov    rdi,rdx
  40d75d:	cmova  rdi,rcx
  40d761:	mov    ebp,0x3
  40d766:	sub    rbp,rcx
  40d769:	lea    rbx,[rdi+rbp*1]
  40d76d:	add    rbx,0xc
  40d771:	mov    ebp,ebx
  40d773:	shr    ebp,0x4
  40d776:	add    ebp,0x1
  40d779:	mov    rdi,rcx
  40d77c:	and    rbp,0x7
  40d780:	je     40d7a1 <__ctype_b_loc@plt+0xb4d1>
  40d782:	neg    rbp
  40d785:	mov    rdi,rcx
  40d788:	nop    DWORD PTR [rax+rax*1+0x0]
  40d790:	mov    DWORD PTR [rdi+0x8],0x0
  40d797:	add    rdi,0x10
  40d79b:	add    rbp,0x1
  40d79f:	jne    40d790 <__ctype_b_loc@plt+0xb4c0>
  40d7a1:	shr    rsi,0x4
  40d7a5:	cmp    rbx,0x70
  40d7a9:	jb     40d7f4 <__ctype_b_loc@plt+0xb524>
  40d7ab:	add    rdi,0xfffffffffffffff0
  40d7af:	nop
  40d7b0:	mov    DWORD PTR [rdi+0x18],0x0
  40d7b7:	mov    DWORD PTR [rdi+0x28],0x0
  40d7be:	mov    DWORD PTR [rdi+0x38],0x0
  40d7c5:	mov    DWORD PTR [rdi+0x48],0x0
  40d7cc:	mov    DWORD PTR [rdi+0x58],0x0
  40d7d3:	mov    DWORD PTR [rdi+0x68],0x0
  40d7da:	mov    DWORD PTR [rdi+0x78],0x0
  40d7e1:	mov    DWORD PTR [rdi+0x88],0x0
  40d7eb:	sub    rdi,0xffffffffffffff80
  40d7ef:	cmp    rdi,rdx
  40d7f2:	jb     40d7b0 <__ctype_b_loc@plt+0xb4e0>
  40d7f4:	shl    rsi,0x4
  40d7f8:	add    rcx,rsi
  40d7fb:	add    rcx,0x10
  40d7ff:	mov    QWORD PTR [r15+0x10],rcx
  40d803:	mov    QWORD PTR [r15+0x10],rax
  40d807:	xor    esi,esi
  40d809:	mov    rdi,r15
  40d80c:	call   41dfb0 <__ctype_b_loc@plt+0x1bce0>
  40d811:	mov    rbp,QWORD PTR [r15+0x10]
  40d815:	mov    rdx,QWORD PTR [r15+0x18]
  40d819:	cmp    rdx,rbp
  40d81c:	lea    r12,[rip+0x1d2f5]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40d823:	mov    rax,r12
  40d826:	cmovb  rax,rdx
  40d82a:	movsxd rcx,DWORD PTR [rax+0x8]
  40d82e:	test   rcx,rcx
  40d831:	je     40dd99 <__ctype_b_loc@plt+0xbac9>
  40d837:	cmp    ecx,0x1
  40d83a:	jne    40d845 <__ctype_b_loc@plt+0xb575>
  40d83c:	cmp    DWORD PTR [rax],0x0
  40d83f:	je     40dd99 <__ctype_b_loc@plt+0xbac9>
  40d845:	cmp    rdx,r12
  40d848:	je     40d95e <__ctype_b_loc@plt+0xb68e>
  40d84e:	cmp    rdx,rbp
  40d851:	jae    40d95e <__ctype_b_loc@plt+0xb68e>
  40d857:	cmp    DWORD PTR [rdx+0x8],0x1
  40d85b:	jne    40d95e <__ctype_b_loc@plt+0xb68e>
  40d861:	mov    rax,QWORD PTR [r15+0x20]
  40d865:	mov    rcx,QWORD PTR [rax+0x78]
  40d869:	cmp    rcx,QWORD PTR [rax+0x70]
  40d86d:	jb     40d87b <__ctype_b_loc@plt+0xb5ab>
  40d86f:	mov    rdi,r15
  40d872:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40d877:	mov    rbp,QWORD PTR [r15+0x10]
  40d87b:	xor    esi,esi
  40d87d:	xor    edx,edx
  40d87f:	mov    rdi,r15
  40d882:	call   403720 <__ctype_b_loc@plt+0x1450>
  40d887:	mov    QWORD PTR [rbp+0x0],rax
  40d88b:	mov    DWORD PTR [rbp+0x8],0x5
  40d892:	mov    rax,QWORD PTR [r15+0x10]
  40d896:	lea    rcx,[rax+0x10]
  40d89a:	mov    QWORD PTR [r15+0x10],rcx
  40d89e:	mov    rcx,QWORD PTR [rax]
  40d8a1:	mov    QWORD PTR [rax+0x10],rcx
  40d8a5:	mov    ecx,DWORD PTR [rax+0x8]
  40d8a8:	mov    DWORD PTR [rax+0x18],ecx
  40d8ab:	mov    rax,QWORD PTR [r15+0x10]
  40d8af:	lea    rcx,[rax+0x10]
  40d8b3:	mov    QWORD PTR [r15+0x10],rcx
  40d8b7:	mov    DWORD PTR [rax+0x10],0x1
  40d8be:	mov    DWORD PTR [rax+0x18],0x1
  40d8c5:	mov    rbp,QWORD PTR [r15+0x10]
  40d8c9:	lea    rax,[rbp+0x10]
  40d8cd:	mov    QWORD PTR [r15+0x10],rax
  40d8d1:	mov    rax,QWORD PTR [r15+0x28]
  40d8d5:	mov    rax,QWORD PTR [rax+0x8]
  40d8d9:	mov    rax,QWORD PTR [rax]
  40d8dc:	cmp    BYTE PTR [rax+0xb],0x0
  40d8e0:	lea    rax,[rax+0x28]
  40d8e4:	cmove  rax,r12
  40d8e8:	mov    QWORD PTR [rsp],rax
  40d8ec:	mov    r14,QWORD PTR [rax]
  40d8ef:	lea    rbx,[rbp-0x10]
  40d8f3:	mov    r13d,DWORD PTR [rbp-0x8]
  40d8f7:	test   r13d,r13d
  40d8fa:	je     40dcec <__ctype_b_loc@plt+0xba1c>
  40d900:	cmp    r13d,0x3
  40d904:	je     40daae <__ctype_b_loc@plt+0xb7de>
  40d90a:	cmp    r13d,0x4
  40d90e:	jne    40dadf <__ctype_b_loc@plt+0xb80f>
  40d914:	mov    rcx,QWORD PTR [rbx]
  40d917:	mov    al,BYTE PTR [r14+0xb]
  40d91b:	mov    rdx,0xffffffffffffffff
  40d922:	shlx   rax,rdx,rax
  40d927:	andn   eax,eax,DWORD PTR [rcx+0xc]
  40d92d:	cdqe   
  40d92f:	lea    rax,[rax+rax*4]
  40d933:	shl    rax,0x3
  40d937:	add    rax,QWORD PTR [r14+0x20]
  40d93b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d940:	cmp    DWORD PTR [rax+0x18],0x4
  40d944:	jne    40d950 <__ctype_b_loc@plt+0xb680>
  40d946:	cmp    QWORD PTR [rax+0x10],rcx
  40d94a:	je     40dd05 <__ctype_b_loc@plt+0xba35>
  40d950:	mov    rax,QWORD PTR [rax+0x20]
  40d954:	test   rax,rax
  40d957:	jne    40d940 <__ctype_b_loc@plt+0xb670>
  40d959:	jmp    40dcec <__ctype_b_loc@plt+0xba1c>
  40d95e:	cmp    ecx,0x7
  40d961:	je     40d968 <__ctype_b_loc@plt+0xb698>
  40d963:	cmp    ecx,0x5
  40d966:	jne    40d971 <__ctype_b_loc@plt+0xb6a1>
  40d968:	mov    rax,QWORD PTR [rax]
  40d96b:	add    rax,0x10
  40d96f:	jmp    40d97f <__ctype_b_loc@plt+0xb6af>
  40d971:	mov    rax,QWORD PTR [r15+0x20]
  40d975:	lea    rax,[rax+rcx*8]
  40d979:	add    rax,0xe0
  40d97f:	mov    rax,QWORD PTR [rax]
  40d982:	test   rax,rax
  40d985:	je     40dc44 <__ctype_b_loc@plt+0xb974>
  40d98b:	mov    QWORD PTR [rbp+0x0],rax
  40d98f:	mov    DWORD PTR [rbp+0x8],0x5
  40d996:	mov    r14,QWORD PTR [r15+0x10]
  40d99a:	mov    rax,QWORD PTR [r15+0x28]
  40d99e:	lea    rcx,[r14+0x10]
  40d9a2:	mov    QWORD PTR [r15+0x10],rcx
  40d9a6:	mov    rax,QWORD PTR [rax+0x8]
  40d9aa:	mov    rax,QWORD PTR [rax]
  40d9ad:	cmp    BYTE PTR [rax+0xb],0x0
  40d9b1:	lea    rax,[rax+0x28]
  40d9b5:	cmove  rax,r12
  40d9b9:	mov    ebp,DWORD PTR [r14+0x8]
  40d9bd:	test   ebp,ebp
  40d9bf:	je     40dc11 <__ctype_b_loc@plt+0xb941>
  40d9c5:	mov    rdi,QWORD PTR [rax]
  40d9c8:	cmp    ebp,0x3
  40d9cb:	je     40da1e <__ctype_b_loc@plt+0xb74e>
  40d9cd:	cmp    ebp,0x4
  40d9d0:	jne    40da4f <__ctype_b_loc@plt+0xb77f>
  40d9d2:	mov    rax,QWORD PTR [r14]
  40d9d5:	mov    cl,BYTE PTR [rdi+0xb]
  40d9d8:	mov    rdx,0xffffffffffffffff
  40d9df:	shlx   rcx,rdx,rcx
  40d9e4:	andn   ecx,ecx,DWORD PTR [rax+0xc]
  40d9ea:	movsxd rcx,ecx
  40d9ed:	lea    rcx,[rcx+rcx*4]
  40d9f1:	shl    rcx,0x3
  40d9f5:	add    rcx,QWORD PTR [rdi+0x20]
  40d9f9:	nop    DWORD PTR [rax+0x0]
  40da00:	cmp    DWORD PTR [rcx+0x18],0x4
  40da04:	jne    40da10 <__ctype_b_loc@plt+0xb740>
  40da06:	cmp    QWORD PTR [rcx+0x10],rax
  40da0a:	je     40db4e <__ctype_b_loc@plt+0xb87e>
  40da10:	mov    rcx,QWORD PTR [rcx+0x20]
  40da14:	test   rcx,rcx
  40da17:	jne    40da00 <__ctype_b_loc@plt+0xb730>
  40da19:	jmp    40dc11 <__ctype_b_loc@plt+0xb941>
  40da1e:	vmovsd xmm1,QWORD PTR [r14]
  40da23:	vcvttsd2si eax,xmm1
  40da27:	vcvtsi2sd xmm0,xmm0,eax
  40da2b:	vucomisd xmm1,xmm0
  40da2f:	jne    40da4f <__ctype_b_loc@plt+0xb77f>
  40da31:	jp     40da4f <__ctype_b_loc@plt+0xb77f>
  40da33:	lea    ecx,[rax-0x1]
  40da36:	cmp    ecx,DWORD PTR [rdi+0x38]
  40da39:	jae    40db56 <__ctype_b_loc@plt+0xb886>
  40da3f:	movsxd r12,ecx
  40da42:	shl    r12,0x4
  40da46:	add    r12,QWORD PTR [rdi+0x18]
  40da4a:	jmp    40dc11 <__ctype_b_loc@plt+0xb941>
  40da4f:	mov    rsi,r14
  40da52:	call   409bf0 <__ctype_b_loc@plt+0x7920>
  40da57:	mov    ecx,ebp
  40da59:	lea    rdx,[rip+0x1c80c]        # 42a26c <__ctype_b_loc@plt+0x27f9c>
  40da60:	cmp    DWORD PTR [rax+0x18],ebp
  40da63:	jne    40daa0 <__ctype_b_loc@plt+0xb7d0>
  40da65:	cmp    ebp,0x3
  40da68:	ja     40da80 <__ctype_b_loc@plt+0xb7b0>
  40da6a:	movsxd rsi,DWORD PTR [rdx+rcx*4]
  40da6e:	add    rsi,rdx
  40da71:	jmp    rsi
  40da73:	mov    esi,DWORD PTR [rax+0x10]
  40da76:	cmp    esi,DWORD PTR [r14]
  40da79:	jne    40daa0 <__ctype_b_loc@plt+0xb7d0>
  40da7b:	jmp    40dc0e <__ctype_b_loc@plt+0xb93e>
  40da80:	mov    rsi,QWORD PTR [rax+0x10]
  40da84:	cmp    rsi,QWORD PTR [r14]
  40da87:	jne    40daa0 <__ctype_b_loc@plt+0xb7d0>
  40da89:	jmp    40dc0e <__ctype_b_loc@plt+0xb93e>
  40da8e:	vmovq  xmm0,QWORD PTR [rax+0x10]
  40da93:	vucomisd xmm0,QWORD PTR [r14]
  40da98:	jne    40daa0 <__ctype_b_loc@plt+0xb7d0>
  40da9a:	jnp    40dc0e <__ctype_b_loc@plt+0xb93e>
  40daa0:	mov    rax,QWORD PTR [rax+0x20]
  40daa4:	test   rax,rax
  40daa7:	jne    40da60 <__ctype_b_loc@plt+0xb790>
  40daa9:	jmp    40dc11 <__ctype_b_loc@plt+0xb941>
  40daae:	vmovsd xmm1,QWORD PTR [rbx]
  40dab2:	vcvttsd2si eax,xmm1
  40dab6:	vcvtsi2sd xmm0,xmm0,eax
  40daba:	vucomisd xmm1,xmm0
  40dabe:	jne    40dadf <__ctype_b_loc@plt+0xb80f>
  40dac0:	jp     40dadf <__ctype_b_loc@plt+0xb80f>
  40dac2:	lea    ecx,[rax-0x1]
  40dac5:	cmp    ecx,DWORD PTR [r14+0x38]
  40dac9:	jae    40db9c <__ctype_b_loc@plt+0xb8cc>
  40dacf:	movsxd rax,ecx
  40dad2:	shl    rax,0x4
  40dad6:	add    rax,QWORD PTR [r14+0x18]
  40dada:	jmp    40dd05 <__ctype_b_loc@plt+0xba35>
  40dadf:	mov    rdi,r14
  40dae2:	mov    rsi,rbx
  40dae5:	call   409bf0 <__ctype_b_loc@plt+0x7920>
  40daea:	mov    ecx,r13d
  40daed:	lea    rdx,[rip+0x1c768]        # 42a25c <__ctype_b_loc@plt+0x27f8c>
  40daf4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dafe:	xchg   ax,ax
  40db00:	cmp    DWORD PTR [rax+0x18],r13d
  40db04:	jne    40db40 <__ctype_b_loc@plt+0xb870>
  40db06:	cmp    r13d,0x3
  40db0a:	ja     40db21 <__ctype_b_loc@plt+0xb851>
  40db0c:	movsxd rsi,DWORD PTR [rdx+rcx*4]
  40db10:	add    rsi,rdx
  40db13:	jmp    rsi
  40db15:	mov    esi,DWORD PTR [rax+0x10]
  40db18:	cmp    esi,DWORD PTR [rbx]
  40db1a:	jne    40db40 <__ctype_b_loc@plt+0xb870>
  40db1c:	jmp    40dd05 <__ctype_b_loc@plt+0xba35>
  40db21:	mov    rsi,QWORD PTR [rax+0x10]
  40db25:	cmp    rsi,QWORD PTR [rbx]
  40db28:	jne    40db40 <__ctype_b_loc@plt+0xb870>
  40db2a:	jmp    40dd05 <__ctype_b_loc@plt+0xba35>
  40db2f:	vmovq  xmm0,QWORD PTR [rax+0x10]
  40db34:	vucomisd xmm0,QWORD PTR [rbx]
  40db38:	jne    40db40 <__ctype_b_loc@plt+0xb870>
  40db3a:	jnp    40dd05 <__ctype_b_loc@plt+0xba35>
  40db40:	mov    rax,QWORD PTR [rax+0x20]
  40db44:	test   rax,rax
  40db47:	jne    40db00 <__ctype_b_loc@plt+0xb830>
  40db49:	jmp    40dcec <__ctype_b_loc@plt+0xba1c>
  40db4e:	mov    r12,rcx
  40db51:	jmp    40dc11 <__ctype_b_loc@plt+0xb941>
  40db56:	test   eax,eax
  40db58:	je     40dbea <__ctype_b_loc@plt+0xb91a>
  40db5e:	vmovq  rcx,xmm0
  40db63:	mov    rax,rcx
  40db66:	shr    rax,0x20
  40db6a:	add    eax,ecx
  40db6c:	mov    cl,BYTE PTR [rdi+0xb]
  40db6f:	mov    rdx,0xffffffffffffffff
  40db76:	shlx   rcx,rdx,rcx
  40db7b:	or     rcx,0x1
  40db7f:	xor    rcx,0xfffffffffffffffe
  40db83:	xor    edx,edx
  40db85:	div    rcx
  40db88:	lea    rax,[rdx+rdx*4]
  40db8c:	shl    rax,0x3
  40db90:	add    rax,QWORD PTR [rdi+0x20]
  40db94:	cmp    DWORD PTR [rax+0x18],0x3
  40db98:	jne    40dc03 <__ctype_b_loc@plt+0xb933>
  40db9a:	jmp    40dbf6 <__ctype_b_loc@plt+0xb926>
  40db9c:	test   eax,eax
  40db9e:	je     40dcbe <__ctype_b_loc@plt+0xb9ee>
  40dba4:	vmovq  rcx,xmm0
  40dba9:	mov    rax,rcx
  40dbac:	shr    rax,0x20
  40dbb0:	add    eax,ecx
  40dbb2:	mov    cl,BYTE PTR [r14+0xb]
  40dbb6:	mov    rdx,0xffffffffffffffff
  40dbbd:	shlx   rcx,rdx,rcx
  40dbc2:	or     rcx,0x1
  40dbc6:	xor    rcx,0xfffffffffffffffe
  40dbca:	xor    edx,edx
  40dbcc:	div    rcx
  40dbcf:	lea    rax,[rdx+rdx*4]
  40dbd3:	shl    rax,0x3
  40dbd7:	add    rax,QWORD PTR [r14+0x20]
  40dbdb:	cmp    DWORD PTR [rax+0x18],0x3
  40dbdf:	jne    40dce3 <__ctype_b_loc@plt+0xba13>
  40dbe5:	jmp    40dcd6 <__ctype_b_loc@plt+0xba06>
  40dbea:	mov    rax,QWORD PTR [rdi+0x20]
  40dbee:	xchg   ax,ax
  40dbf0:	cmp    DWORD PTR [rax+0x18],0x3
  40dbf4:	jne    40dc03 <__ctype_b_loc@plt+0xb933>
  40dbf6:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40dbfb:	vucomisd xmm1,xmm0
  40dbff:	jne    40dc03 <__ctype_b_loc@plt+0xb933>
  40dc01:	jnp    40dc0e <__ctype_b_loc@plt+0xb93e>
  40dc03:	mov    rax,QWORD PTR [rax+0x20]
  40dc07:	test   rax,rax
  40dc0a:	jne    40dbf0 <__ctype_b_loc@plt+0xb920>
  40dc0c:	jmp    40dc11 <__ctype_b_loc@plt+0xb941>
  40dc0e:	mov    r12,rax
  40dc11:	mov    rax,QWORD PTR [r12]
  40dc15:	mov    QWORD PTR [r14],rax
  40dc18:	mov    eax,DWORD PTR [r12+0x8]
  40dc1d:	mov    DWORD PTR [r14+0x8],eax
  40dc21:	mov    rax,QWORD PTR [r15+0x10]
  40dc25:	mov    ecx,DWORD PTR [rax-0x8]
  40dc28:	add    rax,0xfffffffffffffff0
  40dc2c:	cmp    ecx,0x1
  40dc2f:	je     40dc3b <__ctype_b_loc@plt+0xb96b>
  40dc31:	test   ecx,ecx
  40dc33:	jne    40dc5e <__ctype_b_loc@plt+0xb98e>
  40dc35:	mov    QWORD PTR [r15+0x10],rax
  40dc39:	jmp    40dc44 <__ctype_b_loc@plt+0xb974>
  40dc3b:	cmp    DWORD PTR [rax],0x0
  40dc3e:	mov    QWORD PTR [r15+0x10],rax
  40dc42:	jne    40dc62 <__ctype_b_loc@plt+0xb992>
  40dc44:	lea    rdx,[rip+0x1da08]        # 42b653 <__ctype_b_loc@plt+0x29383>
  40dc4b:	mov    esi,0x1
  40dc50:	mov    rdi,r15
  40dc53:	call   410240 <__ctype_b_loc@plt+0xdf70>
  40dc58:	mov    rax,QWORD PTR [r15+0x10]
  40dc5c:	jmp    40dc62 <__ctype_b_loc@plt+0xb992>
  40dc5e:	mov    QWORD PTR [r15+0x10],rax
  40dc62:	mov    rdx,QWORD PTR [r15+0x18]
  40dc66:	cmp    rdx,rax
  40dc69:	lea    rcx,[rip+0x1cea8]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40dc70:	cmovb  rcx,rdx
  40dc74:	movsxd rdx,DWORD PTR [rcx+0x8]
  40dc78:	cmp    rdx,0x7
  40dc7c:	je     40dc83 <__ctype_b_loc@plt+0xb9b3>
  40dc7e:	cmp    edx,0x5
  40dc81:	jne    40dc8c <__ctype_b_loc@plt+0xb9bc>
  40dc83:	mov    rcx,QWORD PTR [rcx]
  40dc86:	add    rcx,0x10
  40dc8a:	jmp    40dc9b <__ctype_b_loc@plt+0xb9cb>
  40dc8c:	mov    rcx,QWORD PTR [r15+0x20]
  40dc90:	lea    rcx,[rcx+rdx*8]
  40dc94:	add    rcx,0xe0
  40dc9b:	mov    rcx,QWORD PTR [rcx]
  40dc9e:	test   rcx,rcx
  40dca1:	je     40dd8c <__ctype_b_loc@plt+0xbabc>
  40dca7:	mov    QWORD PTR [rax],rcx
  40dcaa:	mov    DWORD PTR [rax+0x8],0x5
  40dcb1:	mov    rax,QWORD PTR [r15+0x10]
  40dcb5:	add    rax,0x10
  40dcb9:	jmp    40dd88 <__ctype_b_loc@plt+0xbab8>
  40dcbe:	mov    rax,QWORD PTR [r14+0x20]
  40dcc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dccc:	nop    DWORD PTR [rax+0x0]
  40dcd0:	cmp    DWORD PTR [rax+0x18],0x3
  40dcd4:	jne    40dce3 <__ctype_b_loc@plt+0xba13>
  40dcd6:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40dcdb:	vucomisd xmm1,xmm0
  40dcdf:	jne    40dce3 <__ctype_b_loc@plt+0xba13>
  40dce1:	jnp    40dd05 <__ctype_b_loc@plt+0xba35>
  40dce3:	mov    rax,QWORD PTR [rax+0x20]
  40dce7:	test   rax,rax
  40dcea:	jne    40dcd0 <__ctype_b_loc@plt+0xba00>
  40dcec:	mov    BYTE PTR [r14+0xa],0x0
  40dcf1:	cmp    r13d,0x3
  40dcf5:	je     40dd11 <__ctype_b_loc@plt+0xba41>
  40dcf7:	test   r13d,r13d
  40dcfa:	jne    40dd2c <__ctype_b_loc@plt+0xba5c>
  40dcfc:	lea    rsi,[rip+0x1d200]        # 42af03 <__ctype_b_loc@plt+0x28c33>
  40dd03:	jmp    40dd22 <__ctype_b_loc@plt+0xba52>
  40dd05:	mov    BYTE PTR [r14+0xa],0x0
  40dd0a:	cmp    rax,r12
  40dd0d:	jne    40dd3a <__ctype_b_loc@plt+0xba6a>
  40dd0f:	jmp    40dcf1 <__ctype_b_loc@plt+0xba21>
  40dd11:	vmovq  xmm0,QWORD PTR [rbx]
  40dd15:	vucomisd xmm0,xmm0
  40dd19:	jnp    40dd2c <__ctype_b_loc@plt+0xba5c>
  40dd1b:	lea    rsi,[rip+0x1d1f4]        # 42af16 <__ctype_b_loc@plt+0x28c46>
  40dd22:	xor    eax,eax
  40dd24:	mov    rdi,r15
  40dd27:	call   404080 <__ctype_b_loc@plt+0x1db0>
  40dd2c:	mov    rdi,r15
  40dd2f:	mov    rsi,r14
  40dd32:	mov    rdx,rbx
  40dd35:	call   409ca0 <__ctype_b_loc@plt+0x79d0>
  40dd3a:	mov    rcx,QWORD PTR [rbp+0x0]
  40dd3e:	mov    QWORD PTR [rax],rcx
  40dd41:	mov    ecx,DWORD PTR [rbp+0x8]
  40dd44:	mov    DWORD PTR [rax+0x8],ecx
  40dd47:	mov    rax,QWORD PTR [r15+0x10]
  40dd4b:	cmp    DWORD PTR [rax-0x8],0x4
  40dd4f:	jl     40dd84 <__ctype_b_loc@plt+0xbab4>
  40dd51:	mov    rcx,QWORD PTR [rax-0x10]
  40dd55:	test   BYTE PTR [rcx+0x9],0x3
  40dd59:	je     40dd84 <__ctype_b_loc@plt+0xbab4>
  40dd5b:	mov    rcx,QWORD PTR [rsp]
  40dd5f:	mov    rcx,QWORD PTR [rcx]
  40dd62:	mov    dl,BYTE PTR [rcx+0x9]
  40dd65:	test   dl,0x4
  40dd68:	je     40dd84 <__ctype_b_loc@plt+0xbab4>
  40dd6a:	mov    rax,QWORD PTR [r15+0x20]
  40dd6e:	and    dl,0xfb
  40dd71:	mov    BYTE PTR [rcx+0x9],dl
  40dd74:	mov    rdx,QWORD PTR [rax+0x40]
  40dd78:	mov    QWORD PTR [rcx+0x30],rdx
  40dd7c:	mov    QWORD PTR [rax+0x40],rcx
  40dd80:	mov    rax,QWORD PTR [r15+0x10]
  40dd84:	add    rax,0xffffffffffffffe0
  40dd88:	mov    QWORD PTR [r15+0x10],rax
  40dd8c:	mov    esi,0x2
  40dd91:	mov    rdi,r15
  40dd94:	call   40d5b0 <__ctype_b_loc@plt+0xb2e0>
  40dd99:	mov    eax,0x1
  40dd9e:	add    rsp,0x8
  40dda2:	pop    rbx
  40dda3:	pop    r12
  40dda5:	pop    r13
  40dda7:	pop    r14
  40dda9:	pop    r15
  40ddab:	pop    rbp
  40ddac:	ret    
  40ddad:	nop    DWORD PTR [rax]
  40ddb0:	push   r15
  40ddb2:	push   r14
  40ddb4:	push   r12
  40ddb6:	push   rbx
  40ddb7:	sub    rsp,0x78
  40ddbb:	mov    r15,rdi
  40ddbe:	mov    r12,QWORD PTR [rdi+0x18]
  40ddc2:	lea    r14,[rip+0x1cd4f]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40ddc9:	cmp    r12,r14
  40ddcc:	je     40dddf <__ctype_b_loc@plt+0xbb0f>
  40ddce:	mov    rbx,QWORD PTR [r15+0x10]
  40ddd2:	cmp    r12,rbx
  40ddd5:	jae    40dddf <__ctype_b_loc@plt+0xbb0f>
  40ddd7:	cmp    DWORD PTR [r12+0x8],0xffffffff
  40dddd:	jne    40ddfb <__ctype_b_loc@plt+0xbb2b>
  40dddf:	lea    rdx,[rip+0x1d345]        # 42b12b <__ctype_b_loc@plt+0x28e5b>
  40dde6:	mov    esi,0x1
  40ddeb:	mov    rdi,r15
  40ddee:	call   410240 <__ctype_b_loc@plt+0xdf70>
  40ddf3:	mov    rbx,QWORD PTR [r15+0x10]
  40ddf7:	mov    r12,QWORD PTR [r15+0x18]
  40ddfb:	cmp    r12,rbx
  40ddfe:	mov    rax,r14
  40de01:	cmovb  rax,r12
  40de05:	mov    ecx,DWORD PTR [rax+0x8]
  40de08:	test   ecx,ecx
  40de0a:	je     40de22 <__ctype_b_loc@plt+0xbb52>
  40de0c:	cmp    ecx,0x1
  40de0f:	jne    40de16 <__ctype_b_loc@plt+0xbb46>
  40de11:	cmp    DWORD PTR [rax],0x0
  40de14:	je     40de22 <__ctype_b_loc@plt+0xbb52>
  40de16:	sub    rbx,r12
  40de19:	shr    rbx,0x4
  40de1d:	jmp    40df92 <__ctype_b_loc@plt+0xbcc2>
  40de22:	lea    rax,[r12+0x10]
  40de27:	lea    rdx,[rip+0x1d2eb]        # 42b119 <__ctype_b_loc@plt+0x28e49>
  40de2e:	cmp    rax,rbx
  40de31:	jae    40df7f <__ctype_b_loc@plt+0xbcaf>
  40de37:	cmp    rax,r14
  40de3a:	je     40df7f <__ctype_b_loc@plt+0xbcaf>
  40de40:	movsxd rcx,DWORD PTR [r12+0x18]
  40de45:	test   rcx,rcx
  40de48:	jle    40df7f <__ctype_b_loc@plt+0xbcaf>
  40de4e:	cmp    ecx,0x4
  40de51:	je     40dec0 <__ctype_b_loc@plt+0xbbf0>
  40de53:	cmp    ecx,0x3
  40de56:	jne    40decc <__ctype_b_loc@plt+0xbbfc>
  40de58:	vmovsd xmm0,QWORD PTR [r12+0x10]
  40de5f:	lea    rsi,[rip+0x1cfbb]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  40de66:	mov    rbx,rsp
  40de69:	mov    al,0x1
  40de6b:	mov    rdi,rbx
  40de6e:	call   402270 <sprintf@plt>
  40de73:	mov    rdi,rbx
  40de76:	call   4020e0 <strlen@plt>
  40de7b:	mov    rdi,r15
  40de7e:	mov    rsi,rbx
  40de81:	mov    rdx,rax
  40de84:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40de89:	mov    QWORD PTR [r12+0x10],rax
  40de8e:	mov    DWORD PTR [r12+0x18],0x4
  40de97:	mov    rax,QWORD PTR [r15+0x20]
  40de9b:	mov    rcx,QWORD PTR [rax+0x78]
  40de9f:	cmp    rcx,QWORD PTR [rax+0x70]
  40dea3:	jb     40dead <__ctype_b_loc@plt+0xbbdd>
  40dea5:	mov    rdi,r15
  40dea8:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40dead:	mov    rax,QWORD PTR [r15+0x18]
  40deb1:	add    rax,0x10
  40deb5:	cmp    rax,QWORD PTR [r15+0x10]
  40deb9:	cmovb  r14,rax
  40debd:	mov    rax,r14
  40dec0:	mov    rdx,QWORD PTR [rax]
  40dec3:	add    rdx,0x18
  40dec7:	jmp    40df7f <__ctype_b_loc@plt+0xbcaf>
  40decc:	lea    rax,[rip+0x22a0d]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  40ded3:	mov    rcx,QWORD PTR [rax+rcx*8]
  40ded7:	lea    rsi,[rip+0x1d2e4]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  40dede:	lea    rdx,[rip+0x1d384]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  40dee5:	xor    eax,eax
  40dee7:	mov    rdi,r15
  40deea:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  40deef:	mov    r14,rax
  40def2:	mov    rax,QWORD PTR [r15+0x28]
  40def6:	sub    rax,QWORD PTR [r15+0x50]
  40defa:	jbe    40df64 <__ctype_b_loc@plt+0xbc94>
  40defc:	shr    rax,0x3
  40df00:	imul   eax,eax,0xcccccccd
  40df06:	mov    DWORD PTR [rsp+0x74],eax
  40df0a:	lea    rsi,[rip+0x1cf46]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  40df11:	mov    rdx,rsp
  40df14:	mov    rdi,r15
  40df17:	call   410310 <__ctype_b_loc@plt+0xe040>
  40df1c:	mov    rdi,QWORD PTR [rsp+0x10]
  40df21:	lea    rsi,[rip+0x1d228]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  40df28:	call   402180 <strcmp@plt>
  40df2d:	cmp    eax,0x1
  40df30:	mov    edx,0x2
  40df35:	sbb    edx,0x0
  40df38:	mov    rcx,QWORD PTR [rsp+0x8]
  40df3d:	test   rcx,rcx
  40df40:	jne    40df4e <__ctype_b_loc@plt+0xbc7e>
  40df42:	lea    rcx,[rip+0x1d22c]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  40df49:	mov    QWORD PTR [rsp+0x8],rcx
  40df4e:	lea    rsi,[rip+0x1d222]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  40df55:	xor    eax,eax
  40df57:	mov    rdi,r15
  40df5a:	mov    r8,r14
  40df5d:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40df62:	jmp    40df7d <__ctype_b_loc@plt+0xbcad>
  40df64:	lea    rsi,[rip+0x1d1cf]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  40df6b:	mov    edx,0x2
  40df70:	xor    eax,eax
  40df72:	mov    rdi,r15
  40df75:	mov    rcx,r14
  40df78:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40df7d:	xor    edx,edx
  40df7f:	lea    rsi,[rip+0x1ce61]        # 42ade7 <__ctype_b_loc@plt+0x28b17>
  40df86:	xor    ebx,ebx
  40df88:	xor    eax,eax
  40df8a:	mov    rdi,r15
  40df8d:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40df92:	mov    eax,ebx
  40df94:	add    rsp,0x78
  40df98:	pop    rbx
  40df99:	pop    r12
  40df9b:	pop    r14
  40df9d:	pop    r15
  40df9f:	ret    
  40dfa0:	push   r15
  40dfa2:	push   r14
  40dfa4:	push   rbx
  40dfa5:	sub    rsp,0x80
  40dfac:	mov    r15,rdi
  40dfaf:	mov    esi,0x2
  40dfb4:	mov    edx,0x1
  40dfb9:	call   410970 <__ctype_b_loc@plt+0xe6a0>
  40dfbe:	mov    rdx,QWORD PTR [r15+0x10]
  40dfc2:	mov    rcx,QWORD PTR [r15+0x18]
  40dfc6:	lea    r8,[rcx+0x10]
  40dfca:	cmp    rdx,r8
  40dfcd:	jae    40e093 <__ctype_b_loc@plt+0xbdc3>
  40dfd3:	lea    rsi,[rdx+0x10]
  40dfd7:	cmp    r8,rsi
  40dfda:	cmova  rsi,r8
  40dfde:	mov    rdi,rdx
  40dfe1:	not    rdi
  40dfe4:	add    rdi,rsi
  40dfe7:	cmp    rdx,rcx
  40dfea:	mov    rsi,rcx
  40dfed:	cmova  rsi,rdx
  40dff1:	mov    ebx,0x3
  40dff6:	sub    rbx,rdx
  40dff9:	lea    r9,[rsi+rbx*1]
  40dffd:	add    r9,0xc
  40e001:	mov    ebx,r9d
  40e004:	shr    ebx,0x4
  40e007:	add    ebx,0x1
  40e00a:	mov    rsi,rdx
  40e00d:	and    rbx,0x7
  40e011:	je     40e031 <__ctype_b_loc@plt+0xbd61>
  40e013:	neg    rbx
  40e016:	mov    rsi,rdx
  40e019:	nop    DWORD PTR [rax+0x0]
  40e020:	mov    DWORD PTR [rsi+0x8],0x0
  40e027:	add    rsi,0x10
  40e02b:	add    rbx,0x1
  40e02f:	jne    40e020 <__ctype_b_loc@plt+0xbd50>
  40e031:	shr    rdi,0x4
  40e035:	cmp    r9,0x70
  40e039:	jb     40e084 <__ctype_b_loc@plt+0xbdb4>
  40e03b:	add    rsi,0xfffffffffffffff0
  40e03f:	nop
  40e040:	mov    DWORD PTR [rsi+0x18],0x0
  40e047:	mov    DWORD PTR [rsi+0x28],0x0
  40e04e:	mov    DWORD PTR [rsi+0x38],0x0
  40e055:	mov    DWORD PTR [rsi+0x48],0x0
  40e05c:	mov    DWORD PTR [rsi+0x58],0x0
  40e063:	mov    DWORD PTR [rsi+0x68],0x0
  40e06a:	mov    DWORD PTR [rsi+0x78],0x0
  40e071:	mov    DWORD PTR [rsi+0x88],0x0
  40e07b:	sub    rsi,0xffffffffffffff80
  40e07f:	cmp    rsi,rcx
  40e082:	jb     40e040 <__ctype_b_loc@plt+0xbd70>
  40e084:	shl    rdi,0x4
  40e088:	add    rdx,rdi
  40e08b:	add    rdx,0x10
  40e08f:	mov    QWORD PTR [r15+0x10],rdx
  40e093:	mov    QWORD PTR [r15+0x10],r8
  40e097:	lea    r14,[rip+0x1ca7a]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40e09e:	cmp    rcx,r14
  40e0a1:	je     40e1dd <__ctype_b_loc@plt+0xbf0d>
  40e0a7:	test   eax,eax
  40e0a9:	jle    40e1dd <__ctype_b_loc@plt+0xbf0d>
  40e0af:	mov    ecx,DWORD PTR [rcx+0x8]
  40e0b2:	add    ecx,0xfffffffd
  40e0b5:	cmp    ecx,0x1
  40e0b8:	ja     40e1dd <__ctype_b_loc@plt+0xbf0d>
  40e0be:	mov    rcx,QWORD PTR [r15+0x28]
  40e0c2:	mov    rdx,QWORD PTR [r15+0x50]
  40e0c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e0d0:	cmp    rcx,rdx
  40e0d3:	jbe    40e141 <__ctype_b_loc@plt+0xbe71>
  40e0d5:	add    eax,0xffffffff
  40e0d8:	mov    rsi,QWORD PTR [rcx+0x8]
  40e0dc:	mov    rsi,QWORD PTR [rsi]
  40e0df:	cmp    BYTE PTR [rsi+0xa],0x0
  40e0e3:	jne    40e0e8 <__ctype_b_loc@plt+0xbe18>
  40e0e5:	sub    eax,DWORD PTR [rcx+0x24]
  40e0e8:	add    rcx,0xffffffffffffffd8
  40e0ec:	test   eax,eax
  40e0ee:	jg     40e0d0 <__ctype_b_loc@plt+0xbe00>
  40e0f0:	xor    esi,esi
  40e0f2:	test   eax,eax
  40e0f4:	jne    40e105 <__ctype_b_loc@plt+0xbe35>
  40e0f6:	sub    rcx,rdx
  40e0f9:	jbe    40e141 <__ctype_b_loc@plt+0xbe71>
  40e0fb:	shr    rcx,0x3
  40e0ff:	imul   esi,ecx,0xcccccccd
  40e105:	mov    DWORD PTR [rsp+0x7c],esi
  40e109:	lea    rsi,[rip+0x1d0a7]        # 42b1b7 <__ctype_b_loc@plt+0x28ee7>
  40e110:	lea    rdx,[rsp+0x8]
  40e115:	mov    rdi,r15
  40e118:	call   410310 <__ctype_b_loc@plt+0xe040>
  40e11d:	mov    ecx,DWORD PTR [rsp+0x30]
  40e121:	test   ecx,ecx
  40e123:	jle    40e141 <__ctype_b_loc@plt+0xbe71>
  40e125:	lea    rdx,[rsp+0x40]
  40e12a:	lea    rsi,[rip+0x1d089]        # 42b1ba <__ctype_b_loc@plt+0x28eea>
  40e131:	xor    eax,eax
  40e133:	mov    rdi,r15
  40e136:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  40e13b:	mov    rax,QWORD PTR [r15+0x10]
  40e13f:	jmp    40e182 <__ctype_b_loc@plt+0xbeb2>
  40e141:	mov    rax,QWORD PTR [r15+0x20]
  40e145:	mov    rcx,QWORD PTR [rax+0x78]
  40e149:	cmp    rcx,QWORD PTR [rax+0x70]
  40e14d:	jb     40e157 <__ctype_b_loc@plt+0xbe87>
  40e14f:	mov    rdi,r15
  40e152:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40e157:	mov    rbx,QWORD PTR [r15+0x10]
  40e15b:	lea    rsi,[rip+0x1cf39]        # 42b09b <__ctype_b_loc@plt+0x28dcb>
  40e162:	xor    edx,edx
  40e164:	mov    rdi,r15
  40e167:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40e16c:	mov    QWORD PTR [rbx],rax
  40e16f:	mov    DWORD PTR [rbx+0x8],0x4
  40e176:	mov    rax,QWORD PTR [r15+0x10]
  40e17a:	add    rax,0x10
  40e17e:	mov    QWORD PTR [r15+0x10],rax
  40e182:	mov    rcx,QWORD PTR [r15+0x18]
  40e186:	cmp    rcx,rax
  40e189:	cmovb  r14,rcx
  40e18d:	mov    rcx,QWORD PTR [r14]
  40e190:	mov    QWORD PTR [rax],rcx
  40e193:	mov    ecx,DWORD PTR [r14+0x8]
  40e197:	mov    DWORD PTR [rax+0x8],ecx
  40e19a:	mov    rdx,QWORD PTR [r15+0x10]
  40e19e:	mov    rax,QWORD PTR [r15+0x20]
  40e1a2:	add    rdx,0x10
  40e1a6:	mov    QWORD PTR [r15+0x10],rdx
  40e1aa:	mov    rcx,QWORD PTR [rax+0x78]
  40e1ae:	cmp    rcx,QWORD PTR [rax+0x70]
  40e1b2:	jb     40e1c0 <__ctype_b_loc@plt+0xbef0>
  40e1b4:	mov    rdi,r15
  40e1b7:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40e1bc:	mov    rdx,QWORD PTR [r15+0x10]
  40e1c0:	sub    rdx,QWORD PTR [r15+0x18]
  40e1c4:	shr    rdx,0x4
  40e1c8:	add    edx,0xffffffff
  40e1cb:	mov    esi,0x2
  40e1d0:	mov    rdi,r15
  40e1d3:	call   404850 <__ctype_b_loc@plt+0x2580>
  40e1d8:	add    QWORD PTR [r15+0x10],0xfffffffffffffff0
  40e1dd:	mov    rdi,r15
  40e1e0:	call   4045b0 <__ctype_b_loc@plt+0x22e0>
  40e1e5:	xor    eax,eax
  40e1e7:	add    rsp,0x80
  40e1ee:	pop    rbx
  40e1ef:	pop    r14
  40e1f1:	pop    r15
  40e1f3:	ret    
  40e1f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e1fe:	xchg   ax,ax
  40e200:	push   r15
  40e202:	push   r14
  40e204:	push   r12
  40e206:	push   rbx
  40e207:	sub    rsp,0x28
  40e20b:	mov    r14,rdi
  40e20e:	mov    rbx,QWORD PTR [rdi+0x18]
  40e212:	lea    r15,[rip+0x1c8ff]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40e219:	xor    r12d,r12d
  40e21c:	cmp    rbx,r15
  40e21f:	je     40e2e3 <__ctype_b_loc@plt+0xc013>
  40e225:	cmp    rbx,QWORD PTR [r14+0x10]
  40e229:	jae    40e2e3 <__ctype_b_loc@plt+0xc013>
  40e22f:	movsxd rax,DWORD PTR [rbx+0x8]
  40e233:	test   rax,rax
  40e236:	jle    40e2a8 <__ctype_b_loc@plt+0xbfd8>
  40e238:	cmp    eax,0x4
  40e23b:	je     40e29f <__ctype_b_loc@plt+0xbfcf>
  40e23d:	cmp    eax,0x3
  40e240:	jne    40e2ad <__ctype_b_loc@plt+0xbfdd>
  40e242:	vmovsd xmm0,QWORD PTR [rbx]
  40e246:	lea    rsi,[rip+0x1cbd4]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  40e24d:	mov    r12,rsp
  40e250:	mov    al,0x1
  40e252:	mov    rdi,r12
  40e255:	call   402270 <sprintf@plt>
  40e25a:	mov    rdi,r12
  40e25d:	call   4020e0 <strlen@plt>
  40e262:	mov    rdi,r14
  40e265:	mov    rsi,r12
  40e268:	mov    rdx,rax
  40e26b:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40e270:	mov    QWORD PTR [rbx],rax
  40e273:	mov    DWORD PTR [rbx+0x8],0x4
  40e27a:	mov    rax,QWORD PTR [r14+0x20]
  40e27e:	mov    rcx,QWORD PTR [rax+0x78]
  40e282:	cmp    rcx,QWORD PTR [rax+0x70]
  40e286:	jb     40e290 <__ctype_b_loc@plt+0xbfc0>
  40e288:	mov    rdi,r14
  40e28b:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40e290:	mov    rax,QWORD PTR [r14+0x18]
  40e294:	cmp    rax,QWORD PTR [r14+0x10]
  40e298:	cmovb  r15,rax
  40e29c:	mov    rbx,r15
  40e29f:	mov    r12,QWORD PTR [rbx]
  40e2a2:	add    r12,0x18
  40e2a6:	jmp    40e2e3 <__ctype_b_loc@plt+0xc013>
  40e2a8:	xor    r12d,r12d
  40e2ab:	jmp    40e2e3 <__ctype_b_loc@plt+0xc013>
  40e2ad:	lea    rcx,[rip+0x2262c]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  40e2b4:	mov    rcx,QWORD PTR [rcx+rax*8]
  40e2b8:	lea    rsi,[rip+0x1cf03]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  40e2bf:	lea    rdx,[rip+0x1cfa3]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  40e2c6:	xor    r12d,r12d
  40e2c9:	xor    eax,eax
  40e2cb:	mov    rdi,r14
  40e2ce:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  40e2d3:	mov    esi,0x1
  40e2d8:	mov    rdi,r14
  40e2db:	mov    rdx,rax
  40e2de:	call   410240 <__ctype_b_loc@plt+0xdf70>
  40e2e3:	mov    rdi,r14
  40e2e6:	mov    rsi,r12
  40e2e9:	call   402d80 <__ctype_b_loc@plt+0xab0>
  40e2ee:	test   eax,eax
  40e2f0:	je     40e33f <__ctype_b_loc@plt+0xc06f>
  40e2f2:	mov    rax,QWORD PTR [r14+0x10]
  40e2f6:	mov    DWORD PTR [rax+0x8],0x0
  40e2fd:	lea    rcx,[rax+0x10]
  40e301:	mov    QWORD PTR [r14+0x10],rcx
  40e305:	lea    rcx,[rax+0x20]
  40e309:	nop    DWORD PTR [rax+0x0]
  40e310:	mov    rdx,QWORD PTR [rcx-0x20]
  40e314:	mov    QWORD PTR [rcx-0x10],rdx
  40e318:	mov    edx,DWORD PTR [rcx-0x18]
  40e31b:	mov    DWORD PTR [rcx-0x8],edx
  40e31e:	lea    rcx,[rcx-0x10]
  40e322:	cmp    rcx,rax
  40e325:	ja     40e310 <__ctype_b_loc@plt+0xc040>
  40e327:	mov    rcx,QWORD PTR [r14+0x10]
  40e32b:	mov    rdx,QWORD PTR [rcx]
  40e32e:	mov    QWORD PTR [rax-0x10],rdx
  40e332:	mov    ecx,DWORD PTR [rcx+0x8]
  40e335:	mov    DWORD PTR [rax-0x8],ecx
  40e338:	mov    eax,0x2
  40e33d:	jmp    40e344 <__ctype_b_loc@plt+0xc074>
  40e33f:	mov    eax,0x1
  40e344:	add    rsp,0x28
  40e348:	pop    rbx
  40e349:	pop    r12
  40e34b:	pop    r14
  40e34d:	pop    r15
  40e34f:	ret    
  40e350:	push   rbp
  40e351:	push   r15
  40e353:	push   r14
  40e355:	push   r13
  40e357:	push   r12
  40e359:	push   rbx
  40e35a:	sub    rsp,0xb8
  40e361:	mov    r15,rdi
  40e364:	mov    rcx,QWORD PTR [rdi+0x10]
  40e368:	mov    rbp,QWORD PTR [rdi+0x18]
  40e36c:	cmp    rbp,rcx
  40e36f:	lea    r13,[rip+0x1c7a2]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40e376:	mov    rbx,r13
  40e379:	cmovb  rbx,rbp
  40e37d:	mov    eax,DWORD PTR [rbx+0x8]
  40e380:	cmp    eax,0x4
  40e383:	je     40e3ec <__ctype_b_loc@plt+0xc11c>
  40e385:	cmp    eax,0x3
  40e388:	jne    40e3f9 <__ctype_b_loc@plt+0xc129>
  40e38a:	vmovsd xmm0,QWORD PTR [rbx]
  40e38e:	lea    rsi,[rip+0x1ca8c]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  40e395:	lea    r14,[rsp+0x40]
  40e39a:	mov    al,0x1
  40e39c:	mov    rdi,r14
  40e39f:	call   402270 <sprintf@plt>
  40e3a4:	mov    rdi,r14
  40e3a7:	call   4020e0 <strlen@plt>
  40e3ac:	mov    rdi,r15
  40e3af:	mov    rsi,r14
  40e3b2:	mov    rdx,rax
  40e3b5:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40e3ba:	mov    QWORD PTR [rbx],rax
  40e3bd:	mov    DWORD PTR [rbx+0x8],0x4
  40e3c4:	mov    rax,QWORD PTR [r15+0x20]
  40e3c8:	mov    rcx,QWORD PTR [rax+0x78]
  40e3cc:	cmp    rcx,QWORD PTR [rax+0x70]
  40e3d0:	jb     40e3da <__ctype_b_loc@plt+0xc10a>
  40e3d2:	mov    rdi,r15
  40e3d5:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40e3da:	mov    rcx,QWORD PTR [r15+0x10]
  40e3de:	mov    rbp,QWORD PTR [r15+0x18]
  40e3e2:	cmp    rbp,rcx
  40e3e5:	mov    rbx,r13
  40e3e8:	cmovb  rbx,rbp
  40e3ec:	mov    rbx,QWORD PTR [rbx]
  40e3ef:	mov    r12,QWORD PTR [rbx+0x10]
  40e3f3:	add    rbx,0x18
  40e3f7:	jmp    40e457 <__ctype_b_loc@plt+0xc187>
  40e3f9:	lea    r8,[rip+0x1cdd6]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  40e400:	cmp    rbp,r13
  40e403:	je     40e41f <__ctype_b_loc@plt+0xc14f>
  40e405:	cmp    rbp,rcx
  40e408:	jae    40e41f <__ctype_b_loc@plt+0xc14f>
  40e40a:	movsxd rax,DWORD PTR [rbp+0x8]
  40e40e:	cmp    rax,0xffffffffffffffff
  40e412:	je     40e41f <__ctype_b_loc@plt+0xc14f>
  40e414:	lea    rcx,[rip+0x224c5]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  40e41b:	mov    r8,QWORD PTR [rcx+rax*8]
  40e41f:	lea    rsi,[rip+0x1cd9c]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  40e426:	lea    rdx,[rip+0x1ce3c]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  40e42d:	xor    ebx,ebx
  40e42f:	xor    eax,eax
  40e431:	mov    rdi,r15
  40e434:	mov    rcx,r8
  40e437:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  40e43c:	mov    esi,0x1
  40e441:	mov    rdi,r15
  40e444:	mov    rdx,rax
  40e447:	call   410240 <__ctype_b_loc@plt+0xdf70>
  40e44c:	mov    rcx,QWORD PTR [r15+0x10]
  40e450:	mov    rbp,QWORD PTR [r15+0x18]
  40e454:	xor    r12d,r12d
  40e457:	lea    rax,[rbp+0x10]
  40e45b:	mov    rdx,rbx
  40e45e:	cmp    rax,rcx
  40e461:	jae    40e5bb <__ctype_b_loc@plt+0xc2eb>
  40e467:	cmp    rax,r13
  40e46a:	je     40e5bb <__ctype_b_loc@plt+0xc2eb>
  40e470:	movsxd rdx,DWORD PTR [rbp+0x18]
  40e474:	test   rdx,rdx
  40e477:	jle    40e4f7 <__ctype_b_loc@plt+0xc227>
  40e479:	cmp    edx,0x4
  40e47c:	je     40e4eb <__ctype_b_loc@plt+0xc21b>
  40e47e:	cmp    edx,0x3
  40e481:	jne    40e4ff <__ctype_b_loc@plt+0xc22f>
  40e483:	vmovsd xmm0,QWORD PTR [rbp+0x10]
  40e488:	lea    rsi,[rip+0x1c992]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  40e48f:	lea    r14,[rsp+0x40]
  40e494:	mov    al,0x1
  40e496:	mov    rdi,r14
  40e499:	call   402270 <sprintf@plt>
  40e49e:	mov    rdi,r14
  40e4a1:	call   4020e0 <strlen@plt>
  40e4a6:	mov    rdi,r15
  40e4a9:	mov    rsi,r14
  40e4ac:	mov    rdx,rax
  40e4af:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40e4b4:	mov    QWORD PTR [rbp+0x10],rax
  40e4b8:	mov    DWORD PTR [rbp+0x18],0x4
  40e4bf:	mov    rax,QWORD PTR [r15+0x20]
  40e4c3:	mov    rcx,QWORD PTR [rax+0x78]
  40e4c7:	cmp    rcx,QWORD PTR [rax+0x70]
  40e4cb:	jb     40e4d5 <__ctype_b_loc@plt+0xc205>
  40e4cd:	mov    rdi,r15
  40e4d0:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40e4d5:	mov    rcx,QWORD PTR [r15+0x10]
  40e4d9:	mov    rax,QWORD PTR [r15+0x18]
  40e4dd:	add    rax,0x10
  40e4e1:	cmp    rax,rcx
  40e4e4:	cmovb  r13,rax
  40e4e8:	mov    rax,r13
  40e4eb:	mov    rdx,QWORD PTR [rax]
  40e4ee:	add    rdx,0x18
  40e4f2:	jmp    40e5bb <__ctype_b_loc@plt+0xc2eb>
  40e4f7:	mov    rdx,rbx
  40e4fa:	jmp    40e5bb <__ctype_b_loc@plt+0xc2eb>
  40e4ff:	lea    rax,[rip+0x223da]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  40e506:	mov    rcx,QWORD PTR [rax+rdx*8]
  40e50a:	lea    rsi,[rip+0x1ccb1]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  40e511:	lea    rdx,[rip+0x1cd51]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  40e518:	xor    eax,eax
  40e51a:	mov    rdi,r15
  40e51d:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  40e522:	mov    r14,rax
  40e525:	mov    rax,QWORD PTR [r15+0x28]
  40e529:	sub    rax,QWORD PTR [r15+0x50]
  40e52d:	jbe    40e59c <__ctype_b_loc@plt+0xc2cc>
  40e52f:	shr    rax,0x3
  40e533:	imul   eax,eax,0xcccccccd
  40e539:	mov    DWORD PTR [rsp+0xb4],eax
  40e540:	lea    rsi,[rip+0x1c910]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  40e547:	lea    rdx,[rsp+0x40]
  40e54c:	mov    rdi,r15
  40e54f:	call   410310 <__ctype_b_loc@plt+0xe040>
  40e554:	mov    rdi,QWORD PTR [rsp+0x50]
  40e559:	lea    rsi,[rip+0x1cbf0]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  40e560:	call   402180 <strcmp@plt>
  40e565:	cmp    eax,0x1
  40e568:	mov    edx,0x2
  40e56d:	sbb    edx,0x0
  40e570:	mov    rcx,QWORD PTR [rsp+0x48]
  40e575:	test   rcx,rcx
  40e578:	jne    40e586 <__ctype_b_loc@plt+0xc2b6>
  40e57a:	lea    rcx,[rip+0x1cbf4]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  40e581:	mov    QWORD PTR [rsp+0x48],rcx
  40e586:	lea    rsi,[rip+0x1cbea]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  40e58d:	xor    eax,eax
  40e58f:	mov    rdi,r15
  40e592:	mov    r8,r14
  40e595:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40e59a:	jmp    40e5b5 <__ctype_b_loc@plt+0xc2e5>
  40e59c:	lea    rsi,[rip+0x1cb97]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  40e5a3:	mov    edx,0x2
  40e5a8:	xor    eax,eax
  40e5aa:	mov    rdi,r15
  40e5ad:	mov    rcx,r14
  40e5b0:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40e5b5:	mov    rcx,QWORD PTR [r15+0x10]
  40e5b9:	xor    edx,edx
  40e5bb:	mov    QWORD PTR [rsp],rbx
  40e5bf:	mov    QWORD PTR [rsp+0x8],r12
  40e5c4:	test   rdx,rdx
  40e5c7:	lea    rax,[rip+0x1cba7]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  40e5ce:	cmovne rax,rdx
  40e5d2:	mov    QWORD PTR [rsp+0x30],r15
  40e5d7:	lea    rdx,[rip+0x2792]        # 410d70 <__ctype_b_loc@plt+0xeaa0>
  40e5de:	mov    QWORD PTR [rsp+0x20],rdx
  40e5e3:	mov    rdx,rsp
  40e5e6:	mov    QWORD PTR [rsp+0x28],rdx
  40e5eb:	vxorps xmm0,xmm0,xmm0
  40e5ef:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  40e5f5:	lea    rdx,[rsp+0x10]
  40e5fa:	mov    QWORD PTR [rsp+0x40],rdx
  40e5ff:	mov    QWORD PTR [rsp+0x60],rax
  40e604:	mov    QWORD PTR [rsp+0x48],0x0
  40e60d:	mov    QWORD PTR [rsp+0x58],0x0
  40e616:	sub    rcx,QWORD PTR [r15+0x40]
  40e61a:	mov    r8,QWORD PTR [r15+0xb0]
  40e621:	lea    rsi,[rip+0x2938]        # 410f60 <__ctype_b_loc@plt+0xec90>
  40e628:	lea    rdx,[rsp+0x40]
  40e62d:	mov    rdi,r15
  40e630:	call   410d90 <__ctype_b_loc@plt+0xeac0>
  40e635:	mov    r14d,eax
  40e638:	mov    rsi,QWORD PTR [rsp+0x48]
  40e63d:	mov    rbx,QWORD PTR [rsp+0x58]
  40e642:	mov    rbp,QWORD PTR [r15+0x20]
  40e646:	mov    rdi,QWORD PTR [rbp+0x18]
  40e64a:	xor    ecx,ecx
  40e64c:	mov    rdx,rbx
  40e64f:	call   QWORD PTR [rbp+0x10]
  40e652:	sub    QWORD PTR [rbp+0x78],rbx
  40e656:	test   r14d,r14d
  40e659:	je     40e6af <__ctype_b_loc@plt+0xc3df>
  40e65b:	mov    rax,QWORD PTR [r15+0x10]
  40e65f:	mov    DWORD PTR [rax+0x8],0x0
  40e666:	lea    rcx,[rax+0x10]
  40e66a:	mov    QWORD PTR [r15+0x10],rcx
  40e66e:	lea    rcx,[rax+0x20]
  40e672:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e67c:	nop    DWORD PTR [rax+0x0]
  40e680:	mov    rdx,QWORD PTR [rcx-0x20]
  40e684:	mov    QWORD PTR [rcx-0x10],rdx
  40e688:	mov    edx,DWORD PTR [rcx-0x18]
  40e68b:	mov    DWORD PTR [rcx-0x8],edx
  40e68e:	lea    rcx,[rcx-0x10]
  40e692:	cmp    rcx,rax
  40e695:	ja     40e680 <__ctype_b_loc@plt+0xc3b0>
  40e697:	mov    rcx,QWORD PTR [r15+0x10]
  40e69b:	mov    rdx,QWORD PTR [rcx]
  40e69e:	mov    QWORD PTR [rax-0x10],rdx
  40e6a2:	mov    ecx,DWORD PTR [rcx+0x8]
  40e6a5:	mov    DWORD PTR [rax-0x8],ecx
  40e6a8:	mov    eax,0x2
  40e6ad:	jmp    40e6b4 <__ctype_b_loc@plt+0xc3e4>
  40e6af:	mov    eax,0x1
  40e6b4:	add    rsp,0xb8
  40e6bb:	pop    rbx
  40e6bc:	pop    r12
  40e6be:	pop    r13
  40e6c0:	pop    r14
  40e6c2:	pop    r15
  40e6c4:	pop    rbp
  40e6c5:	ret    
  40e6c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e6d0:	push   r14
  40e6d2:	push   rbx
  40e6d3:	sub    rsp,0x18
  40e6d7:	mov    r14,rdi
  40e6da:	mov    rax,QWORD PTR [rdi+0x18]
  40e6de:	lea    rbx,[rip+0x1c433]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40e6e5:	cmp    rax,rbx
  40e6e8:	je     40e6f9 <__ctype_b_loc@plt+0xc429>
  40e6ea:	mov    rcx,QWORD PTR [r14+0x10]
  40e6ee:	cmp    rax,rcx
  40e6f1:	jae    40e6f9 <__ctype_b_loc@plt+0xc429>
  40e6f3:	cmp    DWORD PTR [rax+0x8],0xffffffff
  40e6f7:	jne    40e715 <__ctype_b_loc@plt+0xc445>
  40e6f9:	lea    rdx,[rip+0x1ca2b]        # 42b12b <__ctype_b_loc@plt+0x28e5b>
  40e700:	mov    esi,0x1
  40e705:	mov    rdi,r14
  40e708:	call   410240 <__ctype_b_loc@plt+0xdf70>
  40e70d:	mov    rcx,QWORD PTR [r14+0x10]
  40e711:	mov    rax,QWORD PTR [r14+0x18]
  40e715:	mov    rdx,rcx
  40e718:	sub    rdx,rax
  40e71b:	shr    rdx,0x4
  40e71f:	movsxd rax,edx
  40e722:	shl    rax,0x4
  40e726:	sub    rcx,rax
  40e729:	mov    QWORD PTR [rsp+0x8],rcx
  40e72e:	mov    DWORD PTR [rsp+0x10],0xffffffff
  40e736:	sub    rcx,QWORD PTR [r14+0x40]
  40e73a:	lea    rsi,[rip+0x1a95f]        # 4290a0 <__ctype_b_loc@plt+0x26dd0>
  40e741:	lea    rdx,[rsp+0x8]
  40e746:	xor    r8d,r8d
  40e749:	mov    rdi,r14
  40e74c:	call   410d90 <__ctype_b_loc@plt+0xeac0>
  40e751:	mov    rcx,QWORD PTR [r14+0x10]
  40e755:	mov    rdx,QWORD PTR [r14+0x28]
  40e759:	cmp    rcx,QWORD PTR [rdx+0x10]
  40e75d:	jb     40e763 <__ctype_b_loc@plt+0xc493>
  40e75f:	mov    QWORD PTR [rdx+0x10],rcx
  40e763:	xor    edx,edx
  40e765:	test   eax,eax
  40e767:	sete   dl
  40e76a:	mov    DWORD PTR [rcx],edx
  40e76c:	mov    DWORD PTR [rcx+0x8],0x1
  40e773:	mov    rax,QWORD PTR [r14+0x10]
  40e777:	mov    rcx,QWORD PTR [r14+0x18]
  40e77b:	add    rax,0x10
  40e77f:	mov    QWORD PTR [r14+0x10],rax
  40e783:	cmp    rcx,rax
  40e786:	cmovb  rbx,rcx
  40e78a:	cmp    rax,rbx
  40e78d:	jbe    40e7aa <__ctype_b_loc@plt+0xc4da>
  40e78f:	nop
  40e790:	mov    rcx,QWORD PTR [rax-0x10]
  40e794:	mov    QWORD PTR [rax],rcx
  40e797:	mov    ecx,DWORD PTR [rax-0x8]
  40e79a:	mov    DWORD PTR [rax+0x8],ecx
  40e79d:	lea    rax,[rax-0x10]
  40e7a1:	cmp    rax,rbx
  40e7a4:	ja     40e790 <__ctype_b_loc@plt+0xc4c0>
  40e7a6:	mov    rax,QWORD PTR [r14+0x10]
  40e7aa:	mov    rcx,QWORD PTR [rax]
  40e7ad:	mov    QWORD PTR [rbx],rcx
  40e7b0:	mov    eax,DWORD PTR [rax+0x8]
  40e7b3:	mov    DWORD PTR [rbx+0x8],eax
  40e7b6:	mov    rax,QWORD PTR [r14+0x10]
  40e7ba:	sub    rax,QWORD PTR [r14+0x18]
  40e7be:	shr    rax,0x4
  40e7c2:	add    rsp,0x18
  40e7c6:	pop    rbx
  40e7c7:	pop    r14
  40e7c9:	ret    
  40e7ca:	nop    WORD PTR [rax+rax*1+0x0]
  40e7d0:	push   rbp
  40e7d1:	push   r15
  40e7d3:	push   r14
  40e7d5:	push   rbx
  40e7d6:	sub    rsp,0x78
  40e7da:	mov    rbx,rdi
  40e7dd:	mov    r15,QWORD PTR [rdi+0x18]
  40e7e1:	lea    r14,[rip+0x1c330]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40e7e8:	lea    rcx,[rip+0x1c9e7]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  40e7ef:	cmp    r15,r14
  40e7f2:	je     40e817 <__ctype_b_loc@plt+0xc547>
  40e7f4:	mov    rax,QWORD PTR [rbx+0x10]
  40e7f8:	cmp    r15,rax
  40e7fb:	jae    40e817 <__ctype_b_loc@plt+0xc547>
  40e7fd:	movsxd rdx,DWORD PTR [r15+0x8]
  40e801:	cmp    rdx,0xffffffffffffffff
  40e805:	je     40e817 <__ctype_b_loc@plt+0xc547>
  40e807:	cmp    edx,0x5
  40e80a:	je     40e847 <__ctype_b_loc@plt+0xc577>
  40e80c:	lea    rax,[rip+0x220cd]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  40e813:	mov    rcx,QWORD PTR [rax+rdx*8]
  40e817:	lea    rsi,[rip+0x1c9a4]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  40e81e:	lea    rdx,[rip+0x1cde5]        # 42b60a <__ctype_b_loc@plt+0x2933a>
  40e825:	xor    eax,eax
  40e827:	mov    rdi,rbx
  40e82a:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  40e82f:	mov    esi,0x1
  40e834:	mov    rdi,rbx
  40e837:	mov    rdx,rax
  40e83a:	call   410240 <__ctype_b_loc@plt+0xdf70>
  40e83f:	mov    rax,QWORD PTR [rbx+0x10]
  40e843:	mov    r15,QWORD PTR [rbx+0x18]
  40e847:	lea    rcx,[r15+0x10]
  40e84b:	cmp    rcx,rax
  40e84e:	jae    40e860 <__ctype_b_loc@plt+0xc590>
  40e850:	cmp    rcx,r14
  40e853:	je     40e860 <__ctype_b_loc@plt+0xc590>
  40e855:	cmp    DWORD PTR [r15+0x18],0xffffffff
  40e85a:	jne    40e8fb <__ctype_b_loc@plt+0xc62b>
  40e860:	mov    rax,QWORD PTR [rbx+0x28]
  40e864:	sub    rax,QWORD PTR [rbx+0x50]
  40e868:	jbe    40e8d6 <__ctype_b_loc@plt+0xc606>
  40e86a:	shr    rax,0x3
  40e86e:	imul   eax,eax,0xcccccccd
  40e874:	mov    DWORD PTR [rsp+0x74],eax
  40e878:	lea    rsi,[rip+0x1c5d8]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  40e87f:	mov    rdx,rsp
  40e882:	mov    rdi,rbx
  40e885:	call   410310 <__ctype_b_loc@plt+0xe040>
  40e88a:	mov    rdi,QWORD PTR [rsp+0x10]
  40e88f:	lea    rsi,[rip+0x1c8ba]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  40e896:	call   402180 <strcmp@plt>
  40e89b:	cmp    eax,0x1
  40e89e:	mov    edx,0x2
  40e8a3:	sbb    edx,0x0
  40e8a6:	mov    rcx,QWORD PTR [rsp+0x8]
  40e8ab:	test   rcx,rcx
  40e8ae:	jne    40e8bc <__ctype_b_loc@plt+0xc5ec>
  40e8b0:	lea    rcx,[rip+0x1c8be]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  40e8b7:	mov    QWORD PTR [rsp+0x8],rcx
  40e8bc:	lea    rsi,[rip+0x1c8b4]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  40e8c3:	lea    r8,[rip+0x1c861]        # 42b12b <__ctype_b_loc@plt+0x28e5b>
  40e8ca:	xor    eax,eax
  40e8cc:	mov    rdi,rbx
  40e8cf:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40e8d4:	jmp    40e8f3 <__ctype_b_loc@plt+0xc623>
  40e8d6:	lea    rsi,[rip+0x1c85d]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  40e8dd:	lea    rcx,[rip+0x1c847]        # 42b12b <__ctype_b_loc@plt+0x28e5b>
  40e8e4:	mov    edx,0x2
  40e8e9:	xor    eax,eax
  40e8eb:	mov    rdi,rbx
  40e8ee:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40e8f3:	mov    rax,QWORD PTR [rbx+0x10]
  40e8f7:	mov    r15,QWORD PTR [rbx+0x18]
  40e8fb:	lea    rcx,[r15+0x20]
  40e8ff:	cmp    rax,rcx
  40e902:	jae    40e9c0 <__ctype_b_loc@plt+0xc6f0>
  40e908:	lea    rsi,[rax+0x10]
  40e90c:	cmp    rcx,rsi
  40e90f:	cmova  rsi,rcx
  40e913:	mov    rdx,rax
  40e916:	not    rdx
  40e919:	add    rdx,rsi
  40e91c:	mov    esi,0x3
  40e921:	sub    rsi,rax
  40e924:	lea    rbp,[r15+rsi*1]
  40e928:	add    rbp,0x1c
  40e92c:	mov    edi,ebp
  40e92e:	shr    edi,0x4
  40e931:	add    edi,0x1
  40e934:	mov    rsi,rax
  40e937:	and    rdi,0x7
  40e93b:	je     40e961 <__ctype_b_loc@plt+0xc691>
  40e93d:	neg    rdi
  40e940:	mov    rsi,rax
  40e943:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e94d:	nop    DWORD PTR [rax]
  40e950:	mov    DWORD PTR [rsi+0x8],0x0
  40e957:	add    rsi,0x10
  40e95b:	add    rdi,0x1
  40e95f:	jne    40e950 <__ctype_b_loc@plt+0xc680>
  40e961:	shr    rdx,0x4
  40e965:	cmp    rbp,0x70
  40e969:	jb     40e9b1 <__ctype_b_loc@plt+0xc6e1>
  40e96b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e970:	mov    DWORD PTR [rsi+0x8],0x0
  40e977:	mov    DWORD PTR [rsi+0x18],0x0
  40e97e:	mov    DWORD PTR [rsi+0x28],0x0
  40e985:	mov    DWORD PTR [rsi+0x38],0x0
  40e98c:	mov    DWORD PTR [rsi+0x48],0x0
  40e993:	mov    DWORD PTR [rsi+0x58],0x0
  40e99a:	mov    DWORD PTR [rsi+0x68],0x0
  40e9a1:	mov    DWORD PTR [rsi+0x78],0x0
  40e9a8:	sub    rsi,0xffffffffffffff80
  40e9ac:	cmp    rsi,rcx
  40e9af:	jb     40e970 <__ctype_b_loc@plt+0xc6a0>
  40e9b1:	shl    rdx,0x4
  40e9b5:	add    rax,rdx
  40e9b8:	add    rax,0x10
  40e9bc:	mov    QWORD PTR [rbx+0x10],rax
  40e9c0:	mov    QWORD PTR [rbx+0x10],rcx
  40e9c4:	mov    ebp,DWORD PTR [r15+0x18]
  40e9c8:	test   ebp,ebp
  40e9ca:	je     40eb31 <__ctype_b_loc@plt+0xc861>
  40e9d0:	mov    rdi,QWORD PTR [r15]
  40e9d3:	lea    rbx,[r15+0x10]
  40e9d7:	cmp    ebp,0x3
  40e9da:	je     40ea2e <__ctype_b_loc@plt+0xc75e>
  40e9dc:	cmp    ebp,0x4
  40e9df:	jne    40ea5a <__ctype_b_loc@plt+0xc78a>
  40e9e1:	mov    rax,QWORD PTR [rbx]
  40e9e4:	mov    cl,BYTE PTR [rdi+0xb]
  40e9e7:	mov    rdx,0xffffffffffffffff
  40e9ee:	shlx   rcx,rdx,rcx
  40e9f3:	andn   ecx,ecx,DWORD PTR [rax+0xc]
  40e9f9:	movsxd rcx,ecx
  40e9fc:	lea    rcx,[rcx+rcx*4]
  40ea00:	shl    rcx,0x3
  40ea04:	add    rcx,QWORD PTR [rdi+0x20]
  40ea08:	nop    DWORD PTR [rax+rax*1+0x0]
  40ea10:	cmp    DWORD PTR [rcx+0x18],0x4
  40ea14:	jne    40ea20 <__ctype_b_loc@plt+0xc750>
  40ea16:	cmp    QWORD PTR [rcx+0x10],rax
  40ea1a:	je     40eabb <__ctype_b_loc@plt+0xc7eb>
  40ea20:	mov    rcx,QWORD PTR [rcx+0x20]
  40ea24:	test   rcx,rcx
  40ea27:	jne    40ea10 <__ctype_b_loc@plt+0xc740>
  40ea29:	jmp    40eb31 <__ctype_b_loc@plt+0xc861>
  40ea2e:	vmovsd xmm1,QWORD PTR [rbx]
  40ea32:	vcvttsd2si eax,xmm1
  40ea36:	vcvtsi2sd xmm0,xmm0,eax
  40ea3a:	vucomisd xmm1,xmm0
  40ea3e:	jne    40ea5a <__ctype_b_loc@plt+0xc78a>
  40ea40:	jp     40ea5a <__ctype_b_loc@plt+0xc78a>
  40ea42:	lea    ecx,[rax-0x1]
  40ea45:	cmp    ecx,DWORD PTR [rdi+0x38]
  40ea48:	jae    40eac0 <__ctype_b_loc@plt+0xc7f0>
  40ea4a:	movsxd r14,ecx
  40ea4d:	shl    r14,0x4
  40ea51:	add    r14,QWORD PTR [rdi+0x18]
  40ea55:	jmp    40eb31 <__ctype_b_loc@plt+0xc861>
  40ea5a:	mov    rsi,rbx
  40ea5d:	call   409bf0 <__ctype_b_loc@plt+0x7920>
  40ea62:	mov    ecx,ebp
  40ea64:	lea    rdx,[rip+0x1b811]        # 42a27c <__ctype_b_loc@plt+0x27fac>
  40ea6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ea70:	cmp    DWORD PTR [rax+0x18],ebp
  40ea73:	jne    40eab0 <__ctype_b_loc@plt+0xc7e0>
  40ea75:	cmp    ebp,0x3
  40ea78:	ja     40ea90 <__ctype_b_loc@plt+0xc7c0>
  40ea7a:	movsxd rsi,DWORD PTR [rdx+rcx*4]
  40ea7e:	add    rsi,rdx
  40ea81:	jmp    rsi
  40ea83:	mov    esi,DWORD PTR [rax+0x10]
  40ea86:	cmp    esi,DWORD PTR [rbx]
  40ea88:	jne    40eab0 <__ctype_b_loc@plt+0xc7e0>
  40ea8a:	jmp    40eb2e <__ctype_b_loc@plt+0xc85e>
  40ea8f:	nop
  40ea90:	mov    rsi,QWORD PTR [rax+0x10]
  40ea94:	cmp    rsi,QWORD PTR [rbx]
  40ea97:	jne    40eab0 <__ctype_b_loc@plt+0xc7e0>
  40ea99:	jmp    40eb2e <__ctype_b_loc@plt+0xc85e>
  40ea9e:	vmovq  xmm0,QWORD PTR [rax+0x10]
  40eaa3:	vucomisd xmm0,QWORD PTR [rbx]
  40eaa7:	jne    40eab0 <__ctype_b_loc@plt+0xc7e0>
  40eaa9:	jnp    40eb2e <__ctype_b_loc@plt+0xc85e>
  40eaaf:	nop
  40eab0:	mov    rax,QWORD PTR [rax+0x20]
  40eab4:	test   rax,rax
  40eab7:	jne    40ea70 <__ctype_b_loc@plt+0xc7a0>
  40eab9:	jmp    40eb31 <__ctype_b_loc@plt+0xc861>
  40eabb:	mov    r14,rcx
  40eabe:	jmp    40eb31 <__ctype_b_loc@plt+0xc861>
  40eac0:	test   eax,eax
  40eac2:	je     40eb02 <__ctype_b_loc@plt+0xc832>
  40eac4:	vmovq  rcx,xmm0
  40eac9:	mov    rax,rcx
  40eacc:	shr    rax,0x20
  40ead0:	add    eax,ecx
  40ead2:	mov    cl,BYTE PTR [rdi+0xb]
  40ead5:	mov    rdx,0xffffffffffffffff
  40eadc:	shlx   rcx,rdx,rcx
  40eae1:	or     rcx,0x1
  40eae5:	xor    rcx,0xfffffffffffffffe
  40eae9:	xor    edx,edx
  40eaeb:	div    rcx
  40eaee:	lea    rax,[rdx+rdx*4]
  40eaf2:	shl    rax,0x3
  40eaf6:	add    rax,QWORD PTR [rdi+0x20]
  40eafa:	cmp    DWORD PTR [rax+0x18],0x3
  40eafe:	jne    40eb23 <__ctype_b_loc@plt+0xc853>
  40eb00:	jmp    40eb16 <__ctype_b_loc@plt+0xc846>
  40eb02:	mov    rax,QWORD PTR [rdi+0x20]
  40eb06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eb10:	cmp    DWORD PTR [rax+0x18],0x3
  40eb14:	jne    40eb23 <__ctype_b_loc@plt+0xc853>
  40eb16:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40eb1b:	vucomisd xmm1,xmm0
  40eb1f:	jne    40eb23 <__ctype_b_loc@plt+0xc853>
  40eb21:	jnp    40eb2e <__ctype_b_loc@plt+0xc85e>
  40eb23:	mov    rax,QWORD PTR [rax+0x20]
  40eb27:	test   rax,rax
  40eb2a:	jne    40eb10 <__ctype_b_loc@plt+0xc840>
  40eb2c:	jmp    40eb31 <__ctype_b_loc@plt+0xc861>
  40eb2e:	mov    r14,rax
  40eb31:	mov    rax,QWORD PTR [r14]
  40eb34:	mov    QWORD PTR [r15+0x10],rax
  40eb38:	mov    eax,DWORD PTR [r14+0x8]
  40eb3c:	mov    DWORD PTR [r15+0x18],eax
  40eb40:	mov    eax,0x1
  40eb45:	add    rsp,0x78
  40eb49:	pop    rbx
  40eb4a:	pop    r14
  40eb4c:	pop    r15
  40eb4e:	pop    rbp
  40eb4f:	ret    
  40eb50:	push   rbp
  40eb51:	push   r15
  40eb53:	push   r14
  40eb55:	push   r13
  40eb57:	push   r12
  40eb59:	push   rbx
  40eb5a:	sub    rsp,0x98
  40eb61:	mov    r12,rdi
  40eb64:	mov    rdx,QWORD PTR [rdi+0x10]
  40eb68:	mov    rax,QWORD PTR [rdi+0x18]
  40eb6c:	lea    rsi,[rax+0x10]
  40eb70:	lea    rcx,[rip+0x1c65f]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  40eb77:	cmp    rsi,rdx
  40eb7a:	jae    40eba6 <__ctype_b_loc@plt+0xc8d6>
  40eb7c:	lea    rdi,[rip+0x1bf95]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40eb83:	cmp    rsi,rdi
  40eb86:	je     40eba6 <__ctype_b_loc@plt+0xc8d6>
  40eb88:	movsxd rsi,DWORD PTR [rax+0x18]
  40eb8c:	cmp    rsi,0xffffffffffffffff
  40eb90:	je     40eba6 <__ctype_b_loc@plt+0xc8d6>
  40eb92:	cmp    esi,0x5
  40eb95:	je     40ec5a <__ctype_b_loc@plt+0xc98a>
  40eb9b:	lea    rax,[rip+0x21d3e]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  40eba2:	mov    rcx,QWORD PTR [rax+rsi*8]
  40eba6:	lea    rsi,[rip+0x1c615]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  40ebad:	lea    rdx,[rip+0x1ca56]        # 42b60a <__ctype_b_loc@plt+0x2933a>
  40ebb4:	xor    eax,eax
  40ebb6:	mov    rdi,r12
  40ebb9:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  40ebbe:	mov    r14,rax
  40ebc1:	mov    rax,QWORD PTR [r12+0x28]
  40ebc6:	sub    rax,QWORD PTR [r12+0x50]
  40ebcb:	jbe    40ec37 <__ctype_b_loc@plt+0xc967>
  40ebcd:	shr    rax,0x3
  40ebd1:	imul   eax,eax,0xcccccccd
  40ebd7:	mov    DWORD PTR [rsp+0x7c],eax
  40ebdb:	lea    rsi,[rip+0x1c275]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  40ebe2:	lea    rdx,[rsp+0x8]
  40ebe7:	mov    rdi,r12
  40ebea:	call   410310 <__ctype_b_loc@plt+0xe040>
  40ebef:	mov    rdi,QWORD PTR [rsp+0x18]
  40ebf4:	lea    rsi,[rip+0x1c555]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  40ebfb:	call   402180 <strcmp@plt>
  40ec00:	cmp    eax,0x1
  40ec03:	mov    edx,0x2
  40ec08:	sbb    edx,0x0
  40ec0b:	mov    rcx,QWORD PTR [rsp+0x10]
  40ec10:	test   rcx,rcx
  40ec13:	jne    40ec21 <__ctype_b_loc@plt+0xc951>
  40ec15:	lea    rcx,[rip+0x1c559]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  40ec1c:	mov    QWORD PTR [rsp+0x10],rcx
  40ec21:	lea    rsi,[rip+0x1c54f]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  40ec28:	xor    eax,eax
  40ec2a:	mov    rdi,r12
  40ec2d:	mov    r8,r14
  40ec30:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40ec35:	jmp    40ec50 <__ctype_b_loc@plt+0xc980>
  40ec37:	lea    rsi,[rip+0x1c4fc]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  40ec3e:	mov    edx,0x2
  40ec43:	xor    eax,eax
  40ec45:	mov    rdi,r12
  40ec48:	mov    rcx,r14
  40ec4b:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40ec50:	mov    rdx,QWORD PTR [r12+0x10]
  40ec55:	mov    rax,QWORD PTR [r12+0x18]
  40ec5a:	lea    r13,[rip+0x1beb7]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40ec61:	cmp    rax,r13
  40ec64:	je     40ec90 <__ctype_b_loc@plt+0xc9c0>
  40ec66:	cmp    rax,rdx
  40ec69:	jae    40ec90 <__ctype_b_loc@plt+0xc9c0>
  40ec6b:	cmp    DWORD PTR [rax+0x8],0x6
  40ec6f:	jne    40ec90 <__ctype_b_loc@plt+0xc9c0>
  40ec71:	mov    rcx,QWORD PTR [rax]
  40ec74:	mov    QWORD PTR [rdx],rcx
  40ec77:	mov    eax,DWORD PTR [rax+0x8]
  40ec7a:	mov    DWORD PTR [rdx+0x8],eax
  40ec7d:	mov    rax,QWORD PTR [r12+0x10]
  40ec82:	add    rax,0x10
  40ec86:	mov    QWORD PTR [r12+0x10],rax
  40ec8b:	jmp    40ef58 <__ctype_b_loc@plt+0xcc88>
  40ec90:	cmp    rax,rdx
  40ec93:	cmovae rax,r13
  40ec97:	mov    ecx,DWORD PTR [rax+0x8]
  40ec9a:	cmp    ecx,0x3
  40ec9d:	je     40ed5e <__ctype_b_loc@plt+0xca8e>
  40eca3:	cmp    ecx,0x4
  40eca6:	jne    40edda <__ctype_b_loc@plt+0xcb0a>
  40ecac:	mov    r14,QWORD PTR [rax]
  40ecaf:	add    r14,0x18
  40ecb3:	lea    rsi,[rsp+0x8]
  40ecb8:	mov    rdi,r14
  40ecbb:	call   4020b0 <strtod@plt>
  40ecc0:	mov    rbx,QWORD PTR [rsp+0x8]
  40ecc5:	cmp    rbx,r14
  40ecc8:	je     40edda <__ctype_b_loc@plt+0xcb0a>
  40ecce:	mov    bpl,BYTE PTR [rbx]
  40ecd1:	mov    eax,ebp
  40ecd3:	or     al,0x20
  40ecd5:	cmp    al,0x78
  40ecd7:	jne    40ed0c <__ctype_b_loc@plt+0xca3c>
  40ecd9:	lea    rsi,[rsp+0x8]
  40ecde:	mov    edx,0x10
  40ece3:	mov    rdi,r14
  40ece6:	call   402250 <strtoul@plt>
  40eceb:	vmovq  xmm0,rax
  40ecf0:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x1bf78]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  40ecf8:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x1bf80]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  40ed00:	vhaddpd xmm0,xmm0,xmm0
  40ed04:	mov    rbx,QWORD PTR [rsp+0x8]
  40ed09:	mov    bpl,BYTE PTR [rbx]
  40ed0c:	test   bpl,bpl
  40ed0f:	je     40ed56 <__ctype_b_loc@plt+0xca86>
  40ed11:	vmovapd XMMWORD PTR [rsp+0x80],xmm0
  40ed1a:	call   4022d0 <__ctype_b_loc@plt>
  40ed1f:	mov    rax,QWORD PTR [rax]
  40ed22:	movzx  ecx,bpl
  40ed26:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40ed2b:	je     40edda <__ctype_b_loc@plt+0xcb0a>
  40ed31:	add    rbx,0x1
  40ed35:	vmovapd xmm0,XMMWORD PTR [rsp+0x80]
  40ed3e:	xchg   ax,ax
  40ed40:	movzx  ecx,BYTE PTR [rbx]
  40ed43:	add    rbx,0x1
  40ed47:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40ed4c:	jne    40ed40 <__ctype_b_loc@plt+0xca70>
  40ed4e:	test   cl,cl
  40ed50:	jne    40edda <__ctype_b_loc@plt+0xcb0a>
  40ed56:	mov    rax,rsp
  40ed59:	vmovsd QWORD PTR [rsp],xmm0
  40ed5e:	vcvttsd2si r14,QWORD PTR [rax]
  40ed63:	test   r14,r14
  40ed66:	je     40edda <__ctype_b_loc@plt+0xcb0a>
  40ed68:	test   r14d,r14d
  40ed6b:	js     40eec7 <__ctype_b_loc@plt+0xcbf7>
  40ed71:	mov    rax,QWORD PTR [r12+0x28]
  40ed76:	test   r14d,r14d
  40ed79:	je     40eef5 <__ctype_b_loc@plt+0xcc25>
  40ed7f:	mov    rdx,QWORD PTR [r12+0x50]
  40ed84:	mov    ecx,r14d
  40ed87:	nop    WORD PTR [rax+rax*1+0x0]
  40ed90:	cmp    rax,rdx
  40ed93:	jbe    40ef03 <__ctype_b_loc@plt+0xcc33>
  40ed99:	add    ecx,0xffffffff
  40ed9c:	mov    rsi,QWORD PTR [rax+0x8]
  40eda0:	mov    rsi,QWORD PTR [rsi]
  40eda3:	cmp    BYTE PTR [rsi+0xa],0x0
  40eda7:	jne    40edac <__ctype_b_loc@plt+0xcadc>
  40eda9:	sub    ecx,DWORD PTR [rax+0x24]
  40edac:	add    rax,0xffffffffffffffd8
  40edb0:	test   ecx,ecx
  40edb2:	jg     40ed90 <__ctype_b_loc@plt+0xcac0>
  40edb4:	test   ecx,ecx
  40edb6:	jne    40eeeb <__ctype_b_loc@plt+0xcc1b>
  40edbc:	sub    rax,QWORD PTR [r12+0x50]
  40edc1:	jbe    40ef03 <__ctype_b_loc@plt+0xcc33>
  40edc7:	shr    rax,0x3
  40edcb:	imul   eax,eax,0xcccccccd
  40edd1:	mov    DWORD PTR [rsp+0x7c],eax
  40edd5:	jmp    40ef17 <__ctype_b_loc@plt+0xcc47>
  40edda:	mov    rax,QWORD PTR [r12+0x18]
  40eddf:	cmp    rax,QWORD PTR [r12+0x10]
  40ede4:	cmovae rax,r13
  40ede8:	mov    ecx,DWORD PTR [rax+0x8]
  40edeb:	xor    r14d,r14d
  40edee:	cmp    ecx,0x3
  40edf1:	je     40eedb <__ctype_b_loc@plt+0xcc0b>
  40edf7:	cmp    ecx,0x4
  40edfa:	jne    40ee72 <__ctype_b_loc@plt+0xcba2>
  40edfc:	mov    r15,QWORD PTR [rax]
  40edff:	add    r15,0x18
  40ee03:	lea    rsi,[rsp+0x8]
  40ee08:	mov    rdi,r15
  40ee0b:	call   4020b0 <strtod@plt>
  40ee10:	mov    rbx,QWORD PTR [rsp+0x8]
  40ee15:	cmp    rbx,r15
  40ee18:	je     40ee72 <__ctype_b_loc@plt+0xcba2>
  40ee1a:	mov    bpl,BYTE PTR [rbx]
  40ee1d:	mov    eax,ebp
  40ee1f:	or     al,0x20
  40ee21:	cmp    al,0x78
  40ee23:	jne    40ee3f <__ctype_b_loc@plt+0xcb6f>
  40ee25:	lea    rsi,[rsp+0x8]
  40ee2a:	mov    edx,0x10
  40ee2f:	mov    rdi,r15
  40ee32:	call   402250 <strtoul@plt>
  40ee37:	mov    rbx,QWORD PTR [rsp+0x8]
  40ee3c:	mov    bpl,BYTE PTR [rbx]
  40ee3f:	test   bpl,bpl
  40ee42:	je     40eedb <__ctype_b_loc@plt+0xcc0b>
  40ee48:	call   4022d0 <__ctype_b_loc@plt>
  40ee4d:	mov    rax,QWORD PTR [rax]
  40ee50:	movzx  ecx,bpl
  40ee54:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40ee59:	je     40ee72 <__ctype_b_loc@plt+0xcba2>
  40ee5b:	add    rbx,0x1
  40ee5f:	nop
  40ee60:	movzx  ecx,BYTE PTR [rbx]
  40ee63:	add    rbx,0x1
  40ee67:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40ee6c:	jne    40ee60 <__ctype_b_loc@plt+0xcb90>
  40ee6e:	test   cl,cl
  40ee70:	je     40eedb <__ctype_b_loc@plt+0xcc0b>
  40ee72:	mov    rax,QWORD PTR [r12+0x18]
  40ee77:	lea    rcx,[rip+0x1c358]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  40ee7e:	cmp    rax,r13
  40ee81:	je     40ee9f <__ctype_b_loc@plt+0xcbcf>
  40ee83:	cmp    rax,QWORD PTR [r12+0x10]
  40ee88:	jae    40ee9f <__ctype_b_loc@plt+0xcbcf>
  40ee8a:	movsxd rax,DWORD PTR [rax+0x8]
  40ee8e:	cmp    rax,0xffffffffffffffff
  40ee92:	je     40ee9f <__ctype_b_loc@plt+0xcbcf>
  40ee94:	lea    rcx,[rip+0x21a45]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  40ee9b:	mov    rcx,QWORD PTR [rcx+rax*8]
  40ee9f:	lea    rsi,[rip+0x1c31c]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  40eea6:	lea    rdx,[rip+0x1bff4]        # 42aea1 <__ctype_b_loc@plt+0x28bd1>
  40eead:	xor    r14d,r14d
  40eeb0:	xor    eax,eax
  40eeb2:	mov    rdi,r12
  40eeb5:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  40eeba:	mov    esi,0x1
  40eebf:	mov    rdi,r12
  40eec2:	mov    rdx,rax
  40eec5:	jmp    40eed6 <__ctype_b_loc@plt+0xcc06>
  40eec7:	lea    rdx,[rip+0x1c6a1]        # 42b56f <__ctype_b_loc@plt+0x2929f>
  40eece:	mov    esi,0x1
  40eed3:	mov    rdi,r12
  40eed6:	call   410240 <__ctype_b_loc@plt+0xdf70>
  40eedb:	mov    rax,QWORD PTR [r12+0x28]
  40eee0:	mov    ecx,r14d
  40eee3:	test   ecx,ecx
  40eee5:	je     40edbc <__ctype_b_loc@plt+0xcaec>
  40eeeb:	mov    DWORD PTR [rsp+0x7c],0x0
  40eef3:	jmp    40ef17 <__ctype_b_loc@plt+0xcc47>
  40eef5:	xor    r14d,r14d
  40eef8:	sub    rax,QWORD PTR [r12+0x50]
  40eefd:	ja     40edc7 <__ctype_b_loc@plt+0xcaf7>
  40ef03:	lea    rdx,[rip+0x1c680]        # 42b58a <__ctype_b_loc@plt+0x292ba>
  40ef0a:	mov    esi,0x1
  40ef0f:	mov    rdi,r12
  40ef12:	call   410240 <__ctype_b_loc@plt+0xdf70>
  40ef17:	lea    rsi,[rip+0x1cb2c]        # 42ba4a <__ctype_b_loc@plt+0x2977a>
  40ef1e:	lea    rdx,[rsp+0x8]
  40ef23:	mov    rdi,r12
  40ef26:	call   410310 <__ctype_b_loc@plt+0xe040>
  40ef2b:	mov    rax,QWORD PTR [r12+0x10]
  40ef30:	lea    rcx,[rax-0x10]
  40ef34:	cmp    rcx,r13
  40ef37:	je     40ef58 <__ctype_b_loc@plt+0xcc88>
  40ef39:	cmp    DWORD PTR [rax-0x8],0x0
  40ef3d:	jne    40ef58 <__ctype_b_loc@plt+0xcc88>
  40ef3f:	lea    rsi,[rip+0x1c652]        # 42b598 <__ctype_b_loc@plt+0x292c8>
  40ef46:	xor    eax,eax
  40ef48:	mov    rdi,r12
  40ef4b:	mov    edx,r14d
  40ef4e:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40ef53:	mov    rax,QWORD PTR [r12+0x10]
  40ef58:	mov    rcx,QWORD PTR [r12+0x18]
  40ef5d:	add    rcx,0x10
  40ef61:	cmp    rcx,rax
  40ef64:	cmovae rcx,r13
  40ef68:	mov    rdx,QWORD PTR [rcx]
  40ef6b:	mov    QWORD PTR [rax],rdx
  40ef6e:	mov    ecx,DWORD PTR [rcx+0x8]
  40ef71:	mov    DWORD PTR [rax+0x8],ecx
  40ef74:	mov    rax,QWORD PTR [r12+0x10]
  40ef79:	mov    rcx,QWORD PTR [r12+0x18]
  40ef7e:	add    rax,0x10
  40ef82:	mov    QWORD PTR [r12+0x10],rax
  40ef87:	cmp    rcx,rax
  40ef8a:	cmovb  r13,rcx
  40ef8e:	mov    eax,DWORD PTR [r13+0x8]
  40ef92:	cmp    eax,0x3
  40ef95:	je     40f026 <__ctype_b_loc@plt+0xcd56>
  40ef9b:	cmp    eax,0x4
  40ef9e:	jne    40f0b9 <__ctype_b_loc@plt+0xcde9>
  40efa4:	mov    r14,QWORD PTR [r13+0x0]
  40efa8:	add    r14,0x18
  40efac:	lea    rsi,[rsp+0x8]
  40efb1:	mov    rdi,r14
  40efb4:	call   4020b0 <strtod@plt>
  40efb9:	mov    rbx,QWORD PTR [rsp+0x8]
  40efbe:	cmp    rbx,r14
  40efc1:	je     40f0b9 <__ctype_b_loc@plt+0xcde9>
  40efc7:	mov    bpl,BYTE PTR [rbx]
  40efca:	mov    eax,ebp
  40efcc:	or     al,0x20
  40efce:	cmp    al,0x78
  40efd0:	jne    40efec <__ctype_b_loc@plt+0xcd1c>
  40efd2:	lea    rsi,[rsp+0x8]
  40efd7:	mov    edx,0x10
  40efdc:	mov    rdi,r14
  40efdf:	call   402250 <strtoul@plt>
  40efe4:	mov    rbx,QWORD PTR [rsp+0x8]
  40efe9:	mov    bpl,BYTE PTR [rbx]
  40efec:	test   bpl,bpl
  40efef:	je     40f026 <__ctype_b_loc@plt+0xcd56>
  40eff1:	call   4022d0 <__ctype_b_loc@plt>
  40eff6:	mov    rax,QWORD PTR [rax]
  40eff9:	movzx  ecx,bpl
  40effd:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40f002:	je     40f0b9 <__ctype_b_loc@plt+0xcde9>
  40f008:	add    rbx,0x1
  40f00c:	nop    DWORD PTR [rax+0x0]
  40f010:	movzx  ecx,BYTE PTR [rbx]
  40f013:	add    rbx,0x1
  40f017:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40f01c:	jne    40f010 <__ctype_b_loc@plt+0xcd40>
  40f01e:	test   cl,cl
  40f020:	jne    40f0b9 <__ctype_b_loc@plt+0xcde9>
  40f026:	mov    esi,0x1
  40f02b:	mov    rdi,r12
  40f02e:	call   41ddf0 <__ctype_b_loc@plt+0x1bb20>
  40f033:	vxorps xmm1,xmm1,xmm1
  40f037:	vucomisd xmm0,xmm1
  40f03b:	jne    40f0b9 <__ctype_b_loc@plt+0xcde9>
  40f03d:	jp     40f0b9 <__ctype_b_loc@plt+0xcde9>
  40f03f:	mov    rax,QWORD PTR [r12+0x10]
  40f044:	mov    QWORD PTR [rax],r12
  40f047:	mov    DWORD PTR [rax+0x8],0x8
  40f04e:	mov    rax,QWORD PTR [r12+0x10]
  40f053:	lea    rcx,[rax+0x10]
  40f057:	mov    QWORD PTR [r12+0x10],rcx
  40f05c:	lea    rcx,[rax+0x20]
  40f060:	mov    rdx,QWORD PTR [rcx-0x20]
  40f064:	mov    QWORD PTR [rcx-0x10],rdx
  40f068:	mov    edx,DWORD PTR [rcx-0x18]
  40f06b:	mov    DWORD PTR [rcx-0x8],edx
  40f06e:	lea    rcx,[rcx-0x10]
  40f072:	cmp    rcx,rax
  40f075:	ja     40f060 <__ctype_b_loc@plt+0xcd90>
  40f077:	mov    rcx,QWORD PTR [r12+0x10]
  40f07c:	mov    rdx,QWORD PTR [rcx]
  40f07f:	mov    QWORD PTR [rax-0x10],rdx
  40f083:	mov    ecx,DWORD PTR [rcx+0x8]
  40f086:	mov    DWORD PTR [rax-0x8],ecx
  40f089:	mov    rax,QWORD PTR [r12+0x10]
  40f08e:	mov    ecx,DWORD PTR [rax-0x18]
  40f091:	cmp    ecx,0x8
  40f094:	je     40f151 <__ctype_b_loc@plt+0xce81>
  40f09a:	cmp    ecx,0x7
  40f09d:	je     40f0a8 <__ctype_b_loc@plt+0xcdd8>
  40f09f:	cmp    ecx,0x6
  40f0a2:	jne    40f194 <__ctype_b_loc@plt+0xcec4>
  40f0a8:	mov    rcx,QWORD PTR [rax-0x20]
  40f0ac:	mov    rdx,QWORD PTR [rax-0x10]
  40f0b0:	mov    QWORD PTR [rcx+0x18],rdx
  40f0b4:	jmp    40f167 <__ctype_b_loc@plt+0xce97>
  40f0b9:	mov    rax,QWORD PTR [r12+0x10]
  40f0be:	mov    ecx,DWORD PTR [rax-0x18]
  40f0c1:	cmp    ecx,0x8
  40f0c4:	je     40f0dc <__ctype_b_loc@plt+0xce0c>
  40f0c6:	cmp    ecx,0x7
  40f0c9:	je     40f0f4 <__ctype_b_loc@plt+0xce24>
  40f0cb:	cmp    ecx,0x6
  40f0ce:	jne    40f135 <__ctype_b_loc@plt+0xce65>
  40f0d0:	mov    rcx,QWORD PTR [rax-0x20]
  40f0d4:	cmp    BYTE PTR [rcx+0xa],0x0
  40f0d8:	jne    40f13e <__ctype_b_loc@plt+0xce6e>
  40f0da:	jmp    40f0f8 <__ctype_b_loc@plt+0xce28>
  40f0dc:	mov    rcx,QWORD PTR [rax-0x20]
  40f0e0:	mov    rdx,QWORD PTR [rax-0x10]
  40f0e4:	mov    QWORD PTR [rcx+0x78],rdx
  40f0e8:	mov    DWORD PTR [rcx+0x80],0x5
  40f0f2:	jmp    40f100 <__ctype_b_loc@plt+0xce30>
  40f0f4:	mov    rcx,QWORD PTR [rax-0x20]
  40f0f8:	mov    rdx,QWORD PTR [rax-0x10]
  40f0fc:	mov    QWORD PTR [rcx+0x18],rdx
  40f100:	mov    rcx,QWORD PTR [r12+0x10]
  40f105:	mov    rsi,QWORD PTR [rcx-0x10]
  40f109:	test   BYTE PTR [rsi+0x9],0x3
  40f10d:	je     40f1ac <__ctype_b_loc@plt+0xcedc>
  40f113:	mov    rax,QWORD PTR [rax-0x20]
  40f117:	mov    dl,BYTE PTR [rax+0x9]
  40f11a:	test   dl,0x4
  40f11d:	je     40f1ac <__ctype_b_loc@plt+0xcedc>
  40f123:	mov    rdi,QWORD PTR [r12+0x20]
  40f128:	cmp    BYTE PTR [rdi+0x21],0x1
  40f12c:	jne    40f199 <__ctype_b_loc@plt+0xcec9>
  40f12e:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40f133:	jmp    40f1a7 <__ctype_b_loc@plt+0xced7>
  40f135:	add    rax,0xfffffffffffffff0
  40f139:	mov    QWORD PTR [r12+0x10],rax
  40f13e:	lea    rsi,[rip+0x1c3f6]        # 42b53b <__ctype_b_loc@plt+0x2926b>
  40f145:	xor    eax,eax
  40f147:	mov    rdi,r12
  40f14a:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40f14f:	jmp    40f1b5 <__ctype_b_loc@plt+0xcee5>
  40f151:	mov    rcx,QWORD PTR [rax-0x20]
  40f155:	mov    rdx,QWORD PTR [rax-0x10]
  40f159:	mov    QWORD PTR [rcx+0x78],rdx
  40f15d:	mov    DWORD PTR [rcx+0x80],0x5
  40f167:	mov    rcx,QWORD PTR [r12+0x10]
  40f16c:	mov    rsi,QWORD PTR [rcx-0x10]
  40f170:	test   BYTE PTR [rsi+0x9],0x3
  40f174:	je     40f1cf <__ctype_b_loc@plt+0xceff>
  40f176:	mov    rax,QWORD PTR [rax-0x20]
  40f17a:	mov    dl,BYTE PTR [rax+0x9]
  40f17d:	test   dl,0x4
  40f180:	je     40f1cf <__ctype_b_loc@plt+0xceff>
  40f182:	mov    rdi,QWORD PTR [r12+0x20]
  40f187:	cmp    BYTE PTR [rdi+0x21],0x1
  40f18b:	jne    40f1bc <__ctype_b_loc@plt+0xceec>
  40f18d:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  40f192:	jmp    40f1ca <__ctype_b_loc@plt+0xcefa>
  40f194:	mov    rcx,rax
  40f197:	jmp    40f1cf <__ctype_b_loc@plt+0xceff>
  40f199:	and    dl,0xf8
  40f19c:	mov    cl,BYTE PTR [rdi+0x20]
  40f19f:	and    cl,0x3
  40f1a2:	or     cl,dl
  40f1a4:	mov    BYTE PTR [rax+0x9],cl
  40f1a7:	mov    rcx,QWORD PTR [r12+0x10]
  40f1ac:	add    rcx,0xfffffffffffffff0
  40f1b0:	mov    QWORD PTR [r12+0x10],rcx
  40f1b5:	mov    eax,0x1
  40f1ba:	jmp    40f1da <__ctype_b_loc@plt+0xcf0a>
  40f1bc:	and    dl,0xf8
  40f1bf:	mov    cl,BYTE PTR [rdi+0x20]
  40f1c2:	and    cl,0x3
  40f1c5:	or     cl,dl
  40f1c7:	mov    BYTE PTR [rax+0x9],cl
  40f1ca:	mov    rcx,QWORD PTR [r12+0x10]
  40f1cf:	add    rcx,0xfffffffffffffff0
  40f1d3:	mov    QWORD PTR [r12+0x10],rcx
  40f1d8:	xor    eax,eax
  40f1da:	add    rsp,0x98
  40f1e1:	pop    rbx
  40f1e2:	pop    r12
  40f1e4:	pop    r13
  40f1e6:	pop    r14
  40f1e8:	pop    r15
  40f1ea:	pop    rbp
  40f1eb:	ret    
  40f1ec:	nop    DWORD PTR [rax+0x0]
  40f1f0:	push   rbp
  40f1f1:	push   r15
  40f1f3:	push   r14
  40f1f5:	push   rbx
  40f1f6:	sub    rsp,0x78
  40f1fa:	mov    rbx,rdi
  40f1fd:	mov    rdx,QWORD PTR [rdi+0x10]
  40f201:	mov    rax,QWORD PTR [rdi+0x18]
  40f205:	lea    rcx,[rax+0x10]
  40f209:	mov    ebp,0xffffffff
  40f20e:	cmp    rcx,rdx
  40f211:	jae    40f222 <__ctype_b_loc@plt+0xcf52>
  40f213:	lea    rsi,[rip+0x1b8fe]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40f21a:	cmp    rcx,rsi
  40f21d:	je     40f222 <__ctype_b_loc@plt+0xcf52>
  40f21f:	mov    ebp,DWORD PTR [rax+0x18]
  40f222:	lea    r15,[rip+0x1b8ef]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40f229:	lea    rcx,[rip+0x1bfa6]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  40f230:	cmp    rax,r15
  40f233:	je     40f254 <__ctype_b_loc@plt+0xcf84>
  40f235:	cmp    rax,rdx
  40f238:	jae    40f254 <__ctype_b_loc@plt+0xcf84>
  40f23a:	movsxd rax,DWORD PTR [rax+0x8]
  40f23e:	cmp    rax,0xffffffffffffffff
  40f242:	je     40f254 <__ctype_b_loc@plt+0xcf84>
  40f244:	cmp    eax,0x5
  40f247:	je     40f27c <__ctype_b_loc@plt+0xcfac>
  40f249:	lea    rcx,[rip+0x21690]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  40f250:	mov    rcx,QWORD PTR [rcx+rax*8]
  40f254:	lea    rsi,[rip+0x1bf67]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  40f25b:	lea    rdx,[rip+0x1c3a8]        # 42b60a <__ctype_b_loc@plt+0x2933a>
  40f262:	xor    eax,eax
  40f264:	mov    rdi,rbx
  40f267:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  40f26c:	mov    esi,0x1
  40f271:	mov    rdi,rbx
  40f274:	mov    rdx,rax
  40f277:	call   410240 <__ctype_b_loc@plt+0xdf70>
  40f27c:	test   ebp,ebp
  40f27e:	je     40f320 <__ctype_b_loc@plt+0xd050>
  40f284:	cmp    ebp,0x5
  40f287:	je     40f320 <__ctype_b_loc@plt+0xd050>
  40f28d:	mov    rax,QWORD PTR [rbx+0x28]
  40f291:	sub    rax,QWORD PTR [rbx+0x50]
  40f295:	jbe    40f303 <__ctype_b_loc@plt+0xd033>
  40f297:	shr    rax,0x3
  40f29b:	imul   eax,eax,0xcccccccd
  40f2a1:	mov    DWORD PTR [rsp+0x74],eax
  40f2a5:	lea    rsi,[rip+0x1bbab]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  40f2ac:	mov    rdx,rsp
  40f2af:	mov    rdi,rbx
  40f2b2:	call   410310 <__ctype_b_loc@plt+0xe040>
  40f2b7:	mov    rdi,QWORD PTR [rsp+0x10]
  40f2bc:	lea    rsi,[rip+0x1be8d]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  40f2c3:	call   402180 <strcmp@plt>
  40f2c8:	cmp    eax,0x1
  40f2cb:	mov    edx,0x2
  40f2d0:	sbb    edx,0x0
  40f2d3:	mov    rcx,QWORD PTR [rsp+0x8]
  40f2d8:	test   rcx,rcx
  40f2db:	jne    40f2e9 <__ctype_b_loc@plt+0xd019>
  40f2dd:	lea    rcx,[rip+0x1be91]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  40f2e4:	mov    QWORD PTR [rsp+0x8],rcx
  40f2e9:	lea    rsi,[rip+0x1be87]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  40f2f0:	lea    r8,[rip+0x1c2d3]        # 42b5ca <__ctype_b_loc@plt+0x292fa>
  40f2f7:	xor    eax,eax
  40f2f9:	mov    rdi,rbx
  40f2fc:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40f301:	jmp    40f320 <__ctype_b_loc@plt+0xd050>
  40f303:	lea    rsi,[rip+0x1be30]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  40f30a:	lea    rcx,[rip+0x1c2b9]        # 42b5ca <__ctype_b_loc@plt+0x292fa>
  40f311:	mov    edx,0x2
  40f316:	xor    eax,eax
  40f318:	mov    rdi,rbx
  40f31b:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40f320:	mov    rax,QWORD PTR [rbx+0x10]
  40f324:	mov    rcx,QWORD PTR [rbx+0x18]
  40f328:	cmp    rcx,rax
  40f32b:	cmovae rcx,r15
  40f32f:	movsxd rdx,DWORD PTR [rcx+0x8]
  40f333:	cmp    rdx,0x7
  40f337:	je     40f33e <__ctype_b_loc@plt+0xd06e>
  40f339:	cmp    edx,0x5
  40f33c:	jne    40f347 <__ctype_b_loc@plt+0xd077>
  40f33e:	mov    rcx,QWORD PTR [rcx]
  40f341:	add    rcx,0x10
  40f345:	jmp    40f356 <__ctype_b_loc@plt+0xd086>
  40f347:	mov    rcx,QWORD PTR [rbx+0x20]
  40f34b:	lea    rcx,[rcx+rdx*8]
  40f34f:	add    rcx,0xe0
  40f356:	mov    rcx,QWORD PTR [rcx]
  40f359:	test   rcx,rcx
  40f35c:	je     40f581 <__ctype_b_loc@plt+0xd2b1>
  40f362:	mov    QWORD PTR [rax],rcx
  40f365:	mov    DWORD PTR [rax+0x8],0x5
  40f36c:	mov    rbp,QWORD PTR [rbx+0x10]
  40f370:	mov    rax,QWORD PTR [rbx+0x20]
  40f374:	add    rbp,0x10
  40f378:	mov    QWORD PTR [rbx+0x10],rbp
  40f37c:	mov    rcx,QWORD PTR [rax+0x78]
  40f380:	cmp    rcx,QWORD PTR [rax+0x70]
  40f384:	jb     40f392 <__ctype_b_loc@plt+0xd0c2>
  40f386:	mov    rdi,rbx
  40f389:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40f38e:	mov    rbp,QWORD PTR [rbx+0x10]
  40f392:	lea    rsi,[rip+0x1c247]        # 42b5e0 <__ctype_b_loc@plt+0x29310>
  40f399:	mov    edx,0xb
  40f39e:	mov    rdi,rbx
  40f3a1:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40f3a6:	mov    QWORD PTR [rbp+0x0],rax
  40f3aa:	mov    DWORD PTR [rbp+0x8],0x4
  40f3b1:	mov    r14,QWORD PTR [rbx+0x10]
  40f3b5:	lea    rax,[r14+0x10]
  40f3b9:	mov    QWORD PTR [rbx+0x10],rax
  40f3bd:	mov    ebp,DWORD PTR [r14+0x8]
  40f3c1:	mov    rax,r15
  40f3c4:	test   ebp,ebp
  40f3c6:	je     40f51f <__ctype_b_loc@plt+0xd24f>
  40f3cc:	mov    rdi,QWORD PTR [r14-0x10]
  40f3d0:	cmp    ebp,0x3
  40f3d3:	je     40f41e <__ctype_b_loc@plt+0xd14e>
  40f3d5:	cmp    ebp,0x4
  40f3d8:	jne    40f44b <__ctype_b_loc@plt+0xd17b>
  40f3da:	mov    rcx,QWORD PTR [r14]
  40f3dd:	mov    al,BYTE PTR [rdi+0xb]
  40f3e0:	mov    rdx,0xffffffffffffffff
  40f3e7:	shlx   rax,rdx,rax
  40f3ec:	andn   eax,eax,DWORD PTR [rcx+0xc]
  40f3f2:	cdqe   
  40f3f4:	lea    rax,[rax+rax*4]
  40f3f8:	shl    rax,0x3
  40f3fc:	add    rax,QWORD PTR [rdi+0x20]
  40f400:	cmp    DWORD PTR [rax+0x18],0x4
  40f404:	jne    40f410 <__ctype_b_loc@plt+0xd140>
  40f406:	cmp    QWORD PTR [rax+0x10],rcx
  40f40a:	je     40f51f <__ctype_b_loc@plt+0xd24f>
  40f410:	mov    rax,QWORD PTR [rax+0x20]
  40f414:	test   rax,rax
  40f417:	jne    40f400 <__ctype_b_loc@plt+0xd130>
  40f419:	jmp    40f51c <__ctype_b_loc@plt+0xd24c>
  40f41e:	vmovsd xmm1,QWORD PTR [r14]
  40f423:	vcvttsd2si eax,xmm1
  40f427:	vcvtsi2sd xmm0,xmm0,eax
  40f42b:	vucomisd xmm1,xmm0
  40f42f:	jne    40f44b <__ctype_b_loc@plt+0xd17b>
  40f431:	jp     40f44b <__ctype_b_loc@plt+0xd17b>
  40f433:	lea    ecx,[rax-0x1]
  40f436:	cmp    ecx,DWORD PTR [rdi+0x38]
  40f439:	jae    40f4ab <__ctype_b_loc@plt+0xd1db>
  40f43b:	movsxd rax,ecx
  40f43e:	shl    rax,0x4
  40f442:	add    rax,QWORD PTR [rdi+0x18]
  40f446:	jmp    40f51f <__ctype_b_loc@plt+0xd24f>
  40f44b:	mov    rsi,r14
  40f44e:	call   409bf0 <__ctype_b_loc@plt+0x7920>
  40f453:	mov    ecx,ebp
  40f455:	lea    rdx,[rip+0x1ae30]        # 42a28c <__ctype_b_loc@plt+0x27fbc>
  40f45c:	nop    DWORD PTR [rax+0x0]
  40f460:	cmp    DWORD PTR [rax+0x18],ebp
  40f463:	jne    40f4a0 <__ctype_b_loc@plt+0xd1d0>
  40f465:	cmp    ebp,0x3
  40f468:	ja     40f480 <__ctype_b_loc@plt+0xd1b0>
  40f46a:	movsxd rsi,DWORD PTR [rdx+rcx*4]
  40f46e:	add    rsi,rdx
  40f471:	jmp    rsi
  40f473:	mov    esi,DWORD PTR [rax+0x10]
  40f476:	cmp    esi,DWORD PTR [r14]
  40f479:	jne    40f4a0 <__ctype_b_loc@plt+0xd1d0>
  40f47b:	jmp    40f51f <__ctype_b_loc@plt+0xd24f>
  40f480:	mov    rsi,QWORD PTR [rax+0x10]
  40f484:	cmp    rsi,QWORD PTR [r14]
  40f487:	jne    40f4a0 <__ctype_b_loc@plt+0xd1d0>
  40f489:	jmp    40f51f <__ctype_b_loc@plt+0xd24f>
  40f48e:	vmovq  xmm0,QWORD PTR [rax+0x10]
  40f493:	vucomisd xmm0,QWORD PTR [r14]
  40f498:	jne    40f4a0 <__ctype_b_loc@plt+0xd1d0>
  40f49a:	jnp    40f51f <__ctype_b_loc@plt+0xd24f>
  40f4a0:	mov    rax,QWORD PTR [rax+0x20]
  40f4a4:	test   rax,rax
  40f4a7:	jne    40f460 <__ctype_b_loc@plt+0xd190>
  40f4a9:	jmp    40f51c <__ctype_b_loc@plt+0xd24c>
  40f4ab:	test   eax,eax
  40f4ad:	je     40f4ed <__ctype_b_loc@plt+0xd21d>
  40f4af:	vmovq  rcx,xmm0
  40f4b4:	mov    rax,rcx
  40f4b7:	shr    rax,0x20
  40f4bb:	add    eax,ecx
  40f4bd:	mov    cl,BYTE PTR [rdi+0xb]
  40f4c0:	mov    rdx,0xffffffffffffffff
  40f4c7:	shlx   rcx,rdx,rcx
  40f4cc:	or     rcx,0x1
  40f4d0:	xor    rcx,0xfffffffffffffffe
  40f4d4:	xor    edx,edx
  40f4d6:	div    rcx
  40f4d9:	lea    rax,[rdx+rdx*4]
  40f4dd:	shl    rax,0x3
  40f4e1:	add    rax,QWORD PTR [rdi+0x20]
  40f4e5:	cmp    DWORD PTR [rax+0x18],0x3
  40f4e9:	jne    40f513 <__ctype_b_loc@plt+0xd243>
  40f4eb:	jmp    40f506 <__ctype_b_loc@plt+0xd236>
  40f4ed:	mov    rax,QWORD PTR [rdi+0x20]
  40f4f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f4fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f500:	cmp    DWORD PTR [rax+0x18],0x3
  40f504:	jne    40f513 <__ctype_b_loc@plt+0xd243>
  40f506:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40f50b:	vucomisd xmm1,xmm0
  40f50f:	jne    40f513 <__ctype_b_loc@plt+0xd243>
  40f511:	jnp    40f51f <__ctype_b_loc@plt+0xd24f>
  40f513:	mov    rax,QWORD PTR [rax+0x20]
  40f517:	test   rax,rax
  40f51a:	jne    40f500 <__ctype_b_loc@plt+0xd230>
  40f51c:	mov    rax,r15
  40f51f:	mov    rcx,QWORD PTR [rax]
  40f522:	mov    QWORD PTR [r14],rcx
  40f525:	mov    eax,DWORD PTR [rax+0x8]
  40f528:	mov    DWORD PTR [r14+0x8],eax
  40f52c:	mov    rax,QWORD PTR [rbx+0x10]
  40f530:	lea    rcx,[rax-0x10]
  40f534:	cmp    rcx,r15
  40f537:	je     40f540 <__ctype_b_loc@plt+0xd270>
  40f539:	cmp    DWORD PTR [rax-0x8],0x0
  40f53d:	je     40f579 <__ctype_b_loc@plt+0xd2a9>
  40f53f:	nop
  40f540:	mov    rax,QWORD PTR [rcx]
  40f543:	mov    QWORD PTR [rcx-0x10],rax
  40f547:	mov    eax,DWORD PTR [rcx+0x8]
  40f54a:	mov    DWORD PTR [rcx-0x8],eax
  40f54d:	mov    rax,QWORD PTR [rbx+0x10]
  40f551:	add    rcx,0x10
  40f555:	cmp    rcx,rax
  40f558:	jb     40f540 <__ctype_b_loc@plt+0xd270>
  40f55a:	add    rax,0xfffffffffffffff0
  40f55e:	mov    QWORD PTR [rbx+0x10],rax
  40f562:	lea    rsi,[rip+0x1c083]        # 42b5ec <__ctype_b_loc@plt+0x2931c>
  40f569:	xor    eax,eax
  40f56b:	mov    rdi,rbx
  40f56e:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40f573:	mov    rax,QWORD PTR [rbx+0x10]
  40f577:	jmp    40f581 <__ctype_b_loc@plt+0xd2b1>
  40f579:	add    rax,0xffffffffffffffe0
  40f57d:	mov    QWORD PTR [rbx+0x10],rax
  40f581:	mov    rsi,QWORD PTR [rbx+0x18]
  40f585:	lea    rcx,[rsi+0x20]
  40f589:	cmp    rax,rcx
  40f58c:	jae    40f640 <__ctype_b_loc@plt+0xd370>
  40f592:	lea    rdi,[rax+0x10]
  40f596:	cmp    rcx,rdi
  40f599:	cmova  rdi,rcx
  40f59d:	mov    rdx,rax
  40f5a0:	not    rdx
  40f5a3:	add    rdx,rdi
  40f5a6:	mov    edi,0x3
  40f5ab:	sub    rdi,rax
  40f5ae:	lea    rbp,[rsi+rdi*1]
  40f5b2:	add    rbp,0x1c
  40f5b6:	mov    edi,ebp
  40f5b8:	shr    edi,0x4
  40f5bb:	add    edi,0x1
  40f5be:	mov    rsi,rax
  40f5c1:	and    rdi,0x7
  40f5c5:	je     40f5e1 <__ctype_b_loc@plt+0xd311>
  40f5c7:	neg    rdi
  40f5ca:	mov    rsi,rax
  40f5cd:	nop    DWORD PTR [rax]
  40f5d0:	mov    DWORD PTR [rsi+0x8],0x0
  40f5d7:	add    rsi,0x10
  40f5db:	add    rdi,0x1
  40f5df:	jne    40f5d0 <__ctype_b_loc@plt+0xd300>
  40f5e1:	shr    rdx,0x4
  40f5e5:	cmp    rbp,0x70
  40f5e9:	jb     40f631 <__ctype_b_loc@plt+0xd361>
  40f5eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f5f0:	mov    DWORD PTR [rsi+0x8],0x0
  40f5f7:	mov    DWORD PTR [rsi+0x18],0x0
  40f5fe:	mov    DWORD PTR [rsi+0x28],0x0
  40f605:	mov    DWORD PTR [rsi+0x38],0x0
  40f60c:	mov    DWORD PTR [rsi+0x48],0x0
  40f613:	mov    DWORD PTR [rsi+0x58],0x0
  40f61a:	mov    DWORD PTR [rsi+0x68],0x0
  40f621:	mov    DWORD PTR [rsi+0x78],0x0
  40f628:	sub    rsi,0xffffffffffffff80
  40f62c:	cmp    rsi,rcx
  40f62f:	jb     40f5f0 <__ctype_b_loc@plt+0xd320>
  40f631:	shl    rdx,0x4
  40f635:	add    rax,rdx
  40f638:	add    rax,0x10
  40f63c:	mov    QWORD PTR [rbx+0x10],rax
  40f640:	mov    QWORD PTR [rbx+0x10],rcx
  40f644:	mov    esi,0x1
  40f649:	mov    rdi,rbx
  40f64c:	call   40d5b0 <__ctype_b_loc@plt+0xb2e0>
  40f651:	mov    eax,0x1
  40f656:	add    rsp,0x78
  40f65a:	pop    rbx
  40f65b:	pop    r14
  40f65d:	pop    r15
  40f65f:	pop    rbp
  40f660:	ret    
  40f661:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f66b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f670:	push   rbp
  40f671:	push   r15
  40f673:	push   r14
  40f675:	push   r13
  40f677:	push   r12
  40f679:	push   rbx
  40f67a:	sub    rsp,0x88
  40f681:	mov    r13,rdi
  40f684:	mov    esi,0x2
  40f689:	mov    edx,0xa
  40f68e:	call   410970 <__ctype_b_loc@plt+0xe6a0>
  40f693:	mov    r14,rax
  40f696:	mov    rdx,QWORD PTR [r13+0x10]
  40f69a:	mov    rax,QWORD PTR [r13+0x18]
  40f69e:	cmp    r14d,0xa
  40f6a2:	jne    40f790 <__ctype_b_loc@plt+0xd4c0>
  40f6a8:	lea    rbx,[rip+0x1b469]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40f6af:	cmp    rax,rbx
  40f6b2:	je     40f6bf <__ctype_b_loc@plt+0xd3ef>
  40f6b4:	cmp    rax,rdx
  40f6b7:	jae    40f6bf <__ctype_b_loc@plt+0xd3ef>
  40f6b9:	cmp    DWORD PTR [rax+0x8],0xffffffff
  40f6bd:	jne    40f6db <__ctype_b_loc@plt+0xd40b>
  40f6bf:	lea    rdx,[rip+0x1ba65]        # 42b12b <__ctype_b_loc@plt+0x28e5b>
  40f6c6:	mov    esi,0x1
  40f6cb:	mov    rdi,r13
  40f6ce:	call   410240 <__ctype_b_loc@plt+0xdf70>
  40f6d3:	mov    rdx,QWORD PTR [r13+0x10]
  40f6d7:	mov    rax,QWORD PTR [r13+0x18]
  40f6db:	cmp    rax,rdx
  40f6de:	cmovb  rbx,rax
  40f6e2:	mov    eax,DWORD PTR [rbx+0x8]
  40f6e5:	cmp    eax,0x3
  40f6e8:	je     40f776 <__ctype_b_loc@plt+0xd4a6>
  40f6ee:	cmp    eax,0x4
  40f6f1:	jne    40f958 <__ctype_b_loc@plt+0xd688>
  40f6f7:	mov    r14,QWORD PTR [rbx]
  40f6fa:	add    r14,0x18
  40f6fe:	lea    rsi,[rsp+0x10]
  40f703:	mov    rdi,r14
  40f706:	call   4020b0 <strtod@plt>
  40f70b:	mov    rbx,QWORD PTR [rsp+0x10]
  40f710:	cmp    rbx,r14
  40f713:	je     40f958 <__ctype_b_loc@plt+0xd688>
  40f719:	mov    bpl,BYTE PTR [rbx]
  40f71c:	mov    eax,ebp
  40f71e:	or     al,0x20
  40f720:	cmp    al,0x78
  40f722:	jne    40f73e <__ctype_b_loc@plt+0xd46e>
  40f724:	lea    rsi,[rsp+0x10]
  40f729:	mov    edx,0x10
  40f72e:	mov    rdi,r14
  40f731:	call   402250 <strtoul@plt>
  40f736:	mov    rbx,QWORD PTR [rsp+0x10]
  40f73b:	mov    bpl,BYTE PTR [rbx]
  40f73e:	test   bpl,bpl
  40f741:	je     40f776 <__ctype_b_loc@plt+0xd4a6>
  40f743:	call   4022d0 <__ctype_b_loc@plt>
  40f748:	mov    rax,QWORD PTR [rax]
  40f74b:	movzx  ecx,bpl
  40f74f:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40f754:	je     40f958 <__ctype_b_loc@plt+0xd688>
  40f75a:	add    rbx,0x1
  40f75e:	xchg   ax,ax
  40f760:	movzx  ecx,BYTE PTR [rbx]
  40f763:	add    rbx,0x1
  40f767:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40f76c:	jne    40f760 <__ctype_b_loc@plt+0xd490>
  40f76e:	test   cl,cl
  40f770:	jne    40f958 <__ctype_b_loc@plt+0xd688>
  40f776:	mov    esi,0x1
  40f77b:	mov    rdi,r13
  40f77e:	call   41ddf0 <__ctype_b_loc@plt+0x1bb20>
  40f783:	mov    rax,QWORD PTR [r13+0x10]
  40f787:	vmovsd QWORD PTR [rax],xmm0
  40f78b:	jmp    40f98e <__ctype_b_loc@plt+0xd6be>
  40f790:	cmp    rax,rdx
  40f793:	lea    r12,[rip+0x1b37e]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40f79a:	mov    rbx,r12
  40f79d:	cmovb  rbx,rax
  40f7a1:	mov    ecx,DWORD PTR [rbx+0x8]
  40f7a4:	cmp    ecx,0x4
  40f7a7:	je     40f80d <__ctype_b_loc@plt+0xd53d>
  40f7a9:	cmp    ecx,0x3
  40f7ac:	jne    40f816 <__ctype_b_loc@plt+0xd546>
  40f7ae:	vmovsd xmm0,QWORD PTR [rbx]
  40f7b2:	lea    rsi,[rip+0x1b668]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  40f7b9:	lea    r15,[rsp+0x10]
  40f7be:	mov    al,0x1
  40f7c0:	mov    rdi,r15
  40f7c3:	call   402270 <sprintf@plt>
  40f7c8:	mov    rdi,r15
  40f7cb:	call   4020e0 <strlen@plt>
  40f7d0:	mov    rdi,r13
  40f7d3:	mov    rsi,r15
  40f7d6:	mov    rdx,rax
  40f7d9:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40f7de:	mov    QWORD PTR [rbx],rax
  40f7e1:	mov    DWORD PTR [rbx+0x8],0x4
  40f7e8:	mov    rax,QWORD PTR [r13+0x20]
  40f7ec:	mov    rcx,QWORD PTR [rax+0x78]
  40f7f0:	cmp    rcx,QWORD PTR [rax+0x70]
  40f7f4:	jb     40f7fe <__ctype_b_loc@plt+0xd52e>
  40f7f6:	mov    rdi,r13
  40f7f9:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40f7fe:	mov    rax,QWORD PTR [r13+0x18]
  40f802:	cmp    rax,QWORD PTR [r13+0x10]
  40f806:	cmovb  r12,rax
  40f80a:	mov    rbx,r12
  40f80d:	mov    r15,QWORD PTR [rbx]
  40f810:	add    r15,0x18
  40f814:	jmp    40f867 <__ctype_b_loc@plt+0xd597>
  40f816:	lea    rcx,[rip+0x1b9b9]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  40f81d:	cmp    rax,r12
  40f820:	je     40f83c <__ctype_b_loc@plt+0xd56c>
  40f822:	cmp    rax,rdx
  40f825:	jae    40f83c <__ctype_b_loc@plt+0xd56c>
  40f827:	movsxd rax,DWORD PTR [rax+0x8]
  40f82b:	cmp    rax,0xffffffffffffffff
  40f82f:	je     40f83c <__ctype_b_loc@plt+0xd56c>
  40f831:	lea    rcx,[rip+0x210a8]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  40f838:	mov    rcx,QWORD PTR [rcx+rax*8]
  40f83c:	lea    rsi,[rip+0x1b97f]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  40f843:	lea    rdx,[rip+0x1ba1f]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  40f84a:	xor    r15d,r15d
  40f84d:	xor    eax,eax
  40f84f:	mov    rdi,r13
  40f852:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  40f857:	mov    esi,0x1
  40f85c:	mov    rdi,r13
  40f85f:	mov    rdx,rax
  40f862:	call   410240 <__ctype_b_loc@plt+0xdf70>
  40f867:	lea    eax,[r14-0x2]
  40f86b:	cmp    eax,0x23
  40f86e:	jb     40f90c <__ctype_b_loc@plt+0xd63c>
  40f874:	mov    rax,QWORD PTR [r13+0x28]
  40f878:	sub    rax,QWORD PTR [r13+0x50]
  40f87c:	jbe    40f8ef <__ctype_b_loc@plt+0xd61f>
  40f87e:	shr    rax,0x3
  40f882:	imul   eax,eax,0xcccccccd
  40f888:	mov    DWORD PTR [rsp+0x84],eax
  40f88f:	lea    rsi,[rip+0x1b5c1]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  40f896:	lea    rdx,[rsp+0x10]
  40f89b:	mov    rdi,r13
  40f89e:	call   410310 <__ctype_b_loc@plt+0xe040>
  40f8a3:	mov    rdi,QWORD PTR [rsp+0x20]
  40f8a8:	lea    rsi,[rip+0x1b8a1]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  40f8af:	call   402180 <strcmp@plt>
  40f8b4:	cmp    eax,0x1
  40f8b7:	mov    edx,0x2
  40f8bc:	sbb    edx,0x0
  40f8bf:	mov    rcx,QWORD PTR [rsp+0x18]
  40f8c4:	test   rcx,rcx
  40f8c7:	jne    40f8d5 <__ctype_b_loc@plt+0xd605>
  40f8c9:	lea    rcx,[rip+0x1b8a5]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  40f8d0:	mov    QWORD PTR [rsp+0x18],rcx
  40f8d5:	lea    rsi,[rip+0x1b89b]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  40f8dc:	lea    r8,[rip+0x1bd2d]        # 42b610 <__ctype_b_loc@plt+0x29340>
  40f8e3:	xor    eax,eax
  40f8e5:	mov    rdi,r13
  40f8e8:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40f8ed:	jmp    40f90c <__ctype_b_loc@plt+0xd63c>
  40f8ef:	lea    rsi,[rip+0x1b844]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  40f8f6:	lea    rcx,[rip+0x1bd13]        # 42b610 <__ctype_b_loc@plt+0x29340>
  40f8fd:	mov    edx,0x2
  40f902:	xor    eax,eax
  40f904:	mov    rdi,r13
  40f907:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40f90c:	lea    rsi,[rsp+0x8]
  40f911:	mov    rdi,r15
  40f914:	mov    edx,r14d
  40f917:	call   402250 <strtoul@plt>
  40f91c:	mov    rbx,QWORD PTR [rsp+0x8]
  40f921:	cmp    r15,rbx
  40f924:	je     40f958 <__ctype_b_loc@plt+0xd688>
  40f926:	mov    r14,rax
  40f929:	call   4022d0 <__ctype_b_loc@plt>
  40f92e:	mov    rcx,QWORD PTR [rax]
  40f931:	movzx  eax,BYTE PTR [rbx]
  40f934:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  40f939:	je     40f954 <__ctype_b_loc@plt+0xd684>
  40f93b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f940:	movzx  eax,BYTE PTR [rbx+0x1]
  40f944:	add    rbx,0x1
  40f948:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  40f94d:	jne    40f940 <__ctype_b_loc@plt+0xd670>
  40f94f:	mov    QWORD PTR [rsp+0x8],rbx
  40f954:	test   al,al
  40f956:	je     40f96d <__ctype_b_loc@plt+0xd69d>
  40f958:	mov    rax,QWORD PTR [r13+0x10]
  40f95c:	mov    DWORD PTR [rax+0x8],0x0
  40f963:	add    rax,0x10
  40f967:	mov    QWORD PTR [r13+0x10],rax
  40f96b:	jmp    40f99a <__ctype_b_loc@plt+0xd6ca>
  40f96d:	vmovq  xmm0,r14
  40f972:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x1b2f6]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  40f97a:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x1b2fe]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  40f982:	vhaddpd xmm0,xmm0,xmm0
  40f986:	mov    rax,QWORD PTR [r13+0x10]
  40f98a:	vmovlpd QWORD PTR [rax],xmm0
  40f98e:	mov    DWORD PTR [rax+0x8],0x3
  40f995:	add    QWORD PTR [r13+0x10],0x10
  40f99a:	mov    eax,0x1
  40f99f:	add    rsp,0x88
  40f9a6:	pop    rbx
  40f9a7:	pop    r12
  40f9a9:	pop    r13
  40f9ab:	pop    r14
  40f9ad:	pop    r15
  40f9af:	pop    rbp
  40f9b0:	ret    
  40f9b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f9bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f9c0:	push   r15
  40f9c2:	push   r14
  40f9c4:	push   r12
  40f9c6:	push   rbx
  40f9c7:	push   rax
  40f9c8:	mov    rbx,rdi
  40f9cb:	mov    rax,QWORD PTR [rdi+0x18]
  40f9cf:	lea    r15,[rip+0x1b142]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40f9d6:	cmp    rax,r15
  40f9d9:	je     40f9ea <__ctype_b_loc@plt+0xd71a>
  40f9db:	mov    r12,QWORD PTR [rbx+0x10]
  40f9df:	cmp    rax,r12
  40f9e2:	jae    40f9ea <__ctype_b_loc@plt+0xd71a>
  40f9e4:	cmp    DWORD PTR [rax+0x8],0xffffffff
  40f9e8:	jne    40fa06 <__ctype_b_loc@plt+0xd736>
  40f9ea:	lea    rdx,[rip+0x1b73a]        # 42b12b <__ctype_b_loc@plt+0x28e5b>
  40f9f1:	mov    esi,0x1
  40f9f6:	mov    rdi,rbx
  40f9f9:	call   410240 <__ctype_b_loc@plt+0xdf70>
  40f9fe:	mov    r12,QWORD PTR [rbx+0x10]
  40fa02:	mov    rax,QWORD PTR [rbx+0x18]
  40fa06:	lea    r14,[rip+0x1b7c9]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  40fa0d:	cmp    rax,r15
  40fa10:	je     40fa2c <__ctype_b_loc@plt+0xd75c>
  40fa12:	cmp    rax,r12
  40fa15:	jae    40fa2c <__ctype_b_loc@plt+0xd75c>
  40fa17:	movsxd rax,DWORD PTR [rax+0x8]
  40fa1b:	cmp    rax,0xffffffffffffffff
  40fa1f:	je     40fa2c <__ctype_b_loc@plt+0xd75c>
  40fa21:	lea    rcx,[rip+0x20eb8]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  40fa28:	mov    r14,QWORD PTR [rcx+rax*8]
  40fa2c:	mov    rdi,r14
  40fa2f:	call   4020e0 <strlen@plt>
  40fa34:	mov    r15,rax
  40fa37:	mov    rax,QWORD PTR [rbx+0x20]
  40fa3b:	mov    rcx,QWORD PTR [rax+0x78]
  40fa3f:	cmp    rcx,QWORD PTR [rax+0x70]
  40fa43:	jb     40fa51 <__ctype_b_loc@plt+0xd781>
  40fa45:	mov    rdi,rbx
  40fa48:	call   408070 <__ctype_b_loc@plt+0x5da0>
  40fa4d:	mov    r12,QWORD PTR [rbx+0x10]
  40fa51:	mov    rdi,rbx
  40fa54:	mov    rsi,r14
  40fa57:	mov    rdx,r15
  40fa5a:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40fa5f:	mov    QWORD PTR [r12],rax
  40fa63:	mov    DWORD PTR [r12+0x8],0x4
  40fa6c:	add    QWORD PTR [rbx+0x10],0x10
  40fa71:	mov    eax,0x1
  40fa76:	add    rsp,0x8
  40fa7a:	pop    rbx
  40fa7b:	pop    r12
  40fa7d:	pop    r14
  40fa7f:	pop    r15
  40fa81:	ret    
  40fa82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fa8c:	nop    DWORD PTR [rax+0x0]
  40fa90:	push   rbp
  40fa91:	push   r15
  40fa93:	push   r14
  40fa95:	push   r13
  40fa97:	push   r12
  40fa99:	push   rbx
  40fa9a:	sub    rsp,0x98
  40faa1:	mov    rbx,rdi
  40faa4:	mov    rax,QWORD PTR [rdi+0x18]
  40faa8:	lea    r15,[rip+0x1b069]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40faaf:	lea    rcx,[rip+0x1b720]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  40fab6:	cmp    rax,r15
  40fab9:	je     40fadb <__ctype_b_loc@plt+0xd80b>
  40fabb:	cmp    rax,QWORD PTR [rbx+0x10]
  40fabf:	jae    40fadb <__ctype_b_loc@plt+0xd80b>
  40fac1:	movsxd rax,DWORD PTR [rax+0x8]
  40fac5:	cmp    rax,0xffffffffffffffff
  40fac9:	je     40fadb <__ctype_b_loc@plt+0xd80b>
  40facb:	cmp    eax,0x5
  40face:	je     40fb03 <__ctype_b_loc@plt+0xd833>
  40fad0:	lea    rcx,[rip+0x20e09]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  40fad7:	mov    rcx,QWORD PTR [rcx+rax*8]
  40fadb:	lea    rsi,[rip+0x1b6e0]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  40fae2:	lea    rdx,[rip+0x1bb21]        # 42b60a <__ctype_b_loc@plt+0x2933a>
  40fae9:	xor    eax,eax
  40faeb:	mov    rdi,rbx
  40faee:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  40faf3:	mov    esi,0x1
  40faf8:	mov    rdi,rbx
  40fafb:	mov    rdx,rax
  40fafe:	call   410240 <__ctype_b_loc@plt+0xdf70>
  40fb03:	mov    esi,0x2
  40fb08:	mov    edx,0x1
  40fb0d:	mov    rdi,rbx
  40fb10:	call   410970 <__ctype_b_loc@plt+0xe6a0>
  40fb15:	mov    r14,rax
  40fb18:	mov    rdx,QWORD PTR [rbx+0x10]
  40fb1c:	mov    rcx,QWORD PTR [rbx+0x18]
  40fb20:	lea    rax,[rcx+0x20]
  40fb24:	cmp    rax,rdx
  40fb27:	jae    40fd7f <__ctype_b_loc@plt+0xdaaf>
  40fb2d:	cmp    rax,r15
  40fb30:	je     40fd7f <__ctype_b_loc@plt+0xdaaf>
  40fb36:	mov    esi,DWORD PTR [rcx+0x28]
  40fb39:	test   esi,esi
  40fb3b:	jle    40fd7f <__ctype_b_loc@plt+0xdaaf>
  40fb41:	cmp    esi,0x3
  40fb44:	je     40fbfe <__ctype_b_loc@plt+0xd92e>
  40fb4a:	cmp    esi,0x4
  40fb4d:	jne    40fc0c <__ctype_b_loc@plt+0xd93c>
  40fb53:	mov    r12,QWORD PTR [rax]
  40fb56:	add    r12,0x18
  40fb5a:	lea    rsi,[rsp+0x20]
  40fb5f:	mov    rdi,r12
  40fb62:	call   4020b0 <strtod@plt>
  40fb67:	mov    rbp,QWORD PTR [rsp+0x20]
  40fb6c:	cmp    rbp,r12
  40fb6f:	je     40fc0c <__ctype_b_loc@plt+0xd93c>
  40fb75:	mov    r13b,BYTE PTR [rbp+0x0]
  40fb79:	mov    eax,r13d
  40fb7c:	or     al,0x20
  40fb7e:	cmp    al,0x78
  40fb80:	jne    40fbb6 <__ctype_b_loc@plt+0xd8e6>
  40fb82:	lea    rsi,[rsp+0x20]
  40fb87:	mov    edx,0x10
  40fb8c:	mov    rdi,r12
  40fb8f:	call   402250 <strtoul@plt>
  40fb94:	vmovq  xmm0,rax
  40fb99:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x1b0cf]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  40fba1:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x1b0d7]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  40fba9:	vhaddpd xmm0,xmm0,xmm0
  40fbad:	mov    rbp,QWORD PTR [rsp+0x20]
  40fbb2:	mov    r13b,BYTE PTR [rbp+0x0]
  40fbb6:	test   r13b,r13b
  40fbb9:	je     40fbf3 <__ctype_b_loc@plt+0xd923>
  40fbbb:	vmovapd XMMWORD PTR [rsp+0x10],xmm0
  40fbc1:	call   4022d0 <__ctype_b_loc@plt>
  40fbc6:	mov    rax,QWORD PTR [rax]
  40fbc9:	movzx  ecx,r13b
  40fbcd:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40fbd2:	je     40fc0c <__ctype_b_loc@plt+0xd93c>
  40fbd4:	add    rbp,0x1
  40fbd8:	vmovapd xmm0,XMMWORD PTR [rsp+0x10]
  40fbde:	xchg   ax,ax
  40fbe0:	movzx  ecx,BYTE PTR [rbp+0x0]
  40fbe4:	add    rbp,0x1
  40fbe8:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40fbed:	jne    40fbe0 <__ctype_b_loc@plt+0xd910>
  40fbef:	test   cl,cl
  40fbf1:	jne    40fc0c <__ctype_b_loc@plt+0xd93c>
  40fbf3:	lea    rax,[rsp+0x8]
  40fbf8:	vmovsd QWORD PTR [rsp+0x8],xmm0
  40fbfe:	vcvttsd2si r13,QWORD PTR [rax]
  40fc03:	test   r13,r13
  40fc06:	jne    40fe2f <__ctype_b_loc@plt+0xdb5f>
  40fc0c:	mov    rax,QWORD PTR [rbx+0x18]
  40fc10:	add    rax,0x20
  40fc14:	cmp    rax,QWORD PTR [rbx+0x10]
  40fc18:	cmovae rax,r15
  40fc1c:	mov    ecx,DWORD PTR [rax+0x8]
  40fc1f:	cmp    ecx,0x3
  40fc22:	je     40fe2c <__ctype_b_loc@plt+0xdb5c>
  40fc28:	cmp    ecx,0x4
  40fc2b:	jne    40fcb7 <__ctype_b_loc@plt+0xd9e7>
  40fc31:	mov    r12,QWORD PTR [rax]
  40fc34:	add    r12,0x18
  40fc38:	lea    rsi,[rsp+0x20]
  40fc3d:	mov    rdi,r12
  40fc40:	call   4020b0 <strtod@plt>
  40fc45:	mov    rbp,QWORD PTR [rsp+0x20]
  40fc4a:	cmp    rbp,r12
  40fc4d:	je     40fcb7 <__ctype_b_loc@plt+0xd9e7>
  40fc4f:	mov    r13b,BYTE PTR [rbp+0x0]
  40fc53:	mov    eax,r13d
  40fc56:	or     al,0x20
  40fc58:	cmp    al,0x78
  40fc5a:	jne    40fc77 <__ctype_b_loc@plt+0xd9a7>
  40fc5c:	lea    rsi,[rsp+0x20]
  40fc61:	mov    edx,0x10
  40fc66:	mov    rdi,r12
  40fc69:	call   402250 <strtoul@plt>
  40fc6e:	mov    rbp,QWORD PTR [rsp+0x20]
  40fc73:	mov    r13b,BYTE PTR [rbp+0x0]
  40fc77:	test   r13b,r13b
  40fc7a:	je     40fe2c <__ctype_b_loc@plt+0xdb5c>
  40fc80:	call   4022d0 <__ctype_b_loc@plt>
  40fc85:	mov    rax,QWORD PTR [rax]
  40fc88:	movzx  ecx,r13b
  40fc8c:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40fc91:	je     40fcb7 <__ctype_b_loc@plt+0xd9e7>
  40fc93:	add    rbp,0x1
  40fc97:	nop    WORD PTR [rax+rax*1+0x0]
  40fca0:	movzx  ecx,BYTE PTR [rbp+0x0]
  40fca4:	add    rbp,0x1
  40fca8:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40fcad:	jne    40fca0 <__ctype_b_loc@plt+0xd9d0>
  40fcaf:	test   cl,cl
  40fcb1:	je     40fe2c <__ctype_b_loc@plt+0xdb5c>
  40fcb7:	mov    rax,QWORD PTR [rbx+0x18]
  40fcbb:	lea    rdx,[rax+0x20]
  40fcbf:	lea    rcx,[rip+0x1b510]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  40fcc6:	cmp    rdx,QWORD PTR [rbx+0x10]
  40fcca:	jae    40fce6 <__ctype_b_loc@plt+0xda16>
  40fccc:	cmp    rdx,r15
  40fccf:	je     40fce6 <__ctype_b_loc@plt+0xda16>
  40fcd1:	movsxd rax,DWORD PTR [rax+0x28]
  40fcd5:	cmp    rax,0xffffffffffffffff
  40fcd9:	je     40fce6 <__ctype_b_loc@plt+0xda16>
  40fcdb:	lea    rcx,[rip+0x20bfe]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  40fce2:	mov    rcx,QWORD PTR [rcx+rax*8]
  40fce6:	lea    rsi,[rip+0x1b4d5]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  40fced:	lea    rdx,[rip+0x1b1ad]        # 42aea1 <__ctype_b_loc@plt+0x28bd1>
  40fcf4:	xor    eax,eax
  40fcf6:	mov    rdi,rbx
  40fcf9:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  40fcfe:	mov    rbp,rax
  40fd01:	mov    rax,QWORD PTR [rbx+0x28]
  40fd05:	sub    rax,QWORD PTR [rbx+0x50]
  40fd09:	jbe    40fe13 <__ctype_b_loc@plt+0xdb43>
  40fd0f:	shr    rax,0x3
  40fd13:	imul   eax,eax,0xcccccccd
  40fd19:	mov    DWORD PTR [rsp+0x94],eax
  40fd20:	lea    rsi,[rip+0x1b130]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  40fd27:	lea    rdx,[rsp+0x20]
  40fd2c:	mov    rdi,rbx
  40fd2f:	call   410310 <__ctype_b_loc@plt+0xe040>
  40fd34:	mov    rdi,QWORD PTR [rsp+0x30]
  40fd39:	lea    rsi,[rip+0x1b410]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  40fd40:	call   402180 <strcmp@plt>
  40fd45:	cmp    eax,0x1
  40fd48:	mov    edx,0x3
  40fd4d:	sbb    edx,0x0
  40fd50:	mov    rcx,QWORD PTR [rsp+0x28]
  40fd55:	test   rcx,rcx
  40fd58:	jne    40fd66 <__ctype_b_loc@plt+0xda96>
  40fd5a:	lea    rcx,[rip+0x1b414]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  40fd61:	mov    QWORD PTR [rsp+0x28],rcx
  40fd66:	lea    rsi,[rip+0x1b40a]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  40fd6d:	xor    eax,eax
  40fd6f:	mov    rdi,rbx
  40fd72:	mov    r8,rbp
  40fd75:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40fd7a:	jmp    40fe2c <__ctype_b_loc@plt+0xdb5c>
  40fd7f:	cmp    rcx,rdx
  40fd82:	lea    rbp,[rip+0x1ad8f]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40fd89:	cmovb  rbp,rcx
  40fd8d:	mov    eax,DWORD PTR [rbp+0x8]
  40fd90:	xor    r13d,r13d
  40fd93:	add    eax,0xfffffffd
  40fd96:	cmp    eax,0x4
  40fd99:	ja     40fe2f <__ctype_b_loc@plt+0xdb5f>
  40fd9f:	lea    rcx,[rip+0x1a4f6]        # 42a29c <__ctype_b_loc@plt+0x27fcc>
  40fda6:	movsxd rax,DWORD PTR [rcx+rax*4]
  40fdaa:	add    rax,rcx
  40fdad:	jmp    rax
  40fdaf:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  40fdb4:	lea    rsi,[rip+0x1b066]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  40fdbb:	lea    r12,[rsp+0x20]
  40fdc0:	mov    al,0x1
  40fdc2:	mov    rdi,r12
  40fdc5:	call   402270 <sprintf@plt>
  40fdca:	mov    rdi,r12
  40fdcd:	call   4020e0 <strlen@plt>
  40fdd2:	mov    rdi,rbx
  40fdd5:	mov    rsi,r12
  40fdd8:	mov    rdx,rax
  40fddb:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  40fde0:	mov    QWORD PTR [rbp+0x0],rax
  40fde4:	mov    DWORD PTR [rbp+0x8],0x4
  40fdeb:	mov    r13,QWORD PTR [rax+0x10]
  40fdef:	jmp    40fe2f <__ctype_b_loc@plt+0xdb5f>
  40fdf1:	mov    rax,QWORD PTR [rbp+0x0]
  40fdf5:	mov    r13,QWORD PTR [rax+0x10]
  40fdf9:	jmp    40fe2f <__ctype_b_loc@plt+0xdb5f>
  40fdfb:	mov    rdi,QWORD PTR [rbp+0x0]
  40fdff:	call   4095e0 <__ctype_b_loc@plt+0x7310>
  40fe04:	movsxd r13,eax
  40fe07:	jmp    40fe2f <__ctype_b_loc@plt+0xdb5f>
  40fe09:	mov    rax,QWORD PTR [rbp+0x0]
  40fe0d:	mov    r13,QWORD PTR [rax+0x20]
  40fe11:	jmp    40fe2f <__ctype_b_loc@plt+0xdb5f>
  40fe13:	lea    rsi,[rip+0x1b320]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  40fe1a:	mov    edx,0x3
  40fe1f:	xor    eax,eax
  40fe21:	mov    rdi,rbx
  40fe24:	mov    rcx,rbp
  40fe27:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40fe2c:	xor    r13d,r13d
  40fe2f:	xor    r12d,r12d
  40fe32:	mov    eax,r13d
  40fe35:	sub    eax,r14d
  40fe38:	jl     40fe77 <__ctype_b_loc@plt+0xdba7>
  40fe3a:	cmp    eax,0x1f3f
  40fe3f:	ja     40fe63 <__ctype_b_loc@plt+0xdb93>
  40fe41:	lea    r12d,[rax+0x1]
  40fe45:	mov    rcx,QWORD PTR [rbx+0x10]
  40fe49:	mov    rdx,rcx
  40fe4c:	sub    rdx,QWORD PTR [rbx+0x18]
  40fe50:	sar    rdx,0x4
  40fe54:	movsxd rbp,r12d
  40fe57:	add    rdx,rbp
  40fe5a:	cmp    rdx,0x1f40
  40fe61:	jle    40fe8c <__ctype_b_loc@plt+0xdbbc>
  40fe63:	lea    rsi,[rip+0x1b7b8]        # 42b622 <__ctype_b_loc@plt+0x29352>
  40fe6a:	xor    r12d,r12d
  40fe6d:	xor    eax,eax
  40fe6f:	mov    rdi,rbx
  40fe72:	call   410070 <__ctype_b_loc@plt+0xdda0>
  40fe77:	mov    eax,r12d
  40fe7a:	add    rsp,0x98
  40fe81:	pop    rbx
  40fe82:	pop    r12
  40fe84:	pop    r13
  40fe86:	pop    r14
  40fe88:	pop    r15
  40fe8a:	pop    rbp
  40fe8b:	ret    
  40fe8c:	mov    rdx,QWORD PTR [rbx+0x38]
  40fe90:	sub    rdx,rcx
  40fe93:	mov    ecx,r12d
  40fe96:	shl    ecx,0x4
  40fe99:	movsxd rcx,ecx
  40fe9c:	cmp    rdx,rcx
  40fe9f:	jg     40feb7 <__ctype_b_loc@plt+0xdbe7>
  40fea1:	mov    esi,DWORD PTR [rbx+0x58]
  40fea4:	cmp    esi,eax
  40fea6:	jle    40feac <__ctype_b_loc@plt+0xdbdc>
  40fea8:	add    esi,esi
  40feaa:	jmp    40feaf <__ctype_b_loc@plt+0xdbdf>
  40feac:	add    esi,r12d
  40feaf:	mov    rdi,rbx
  40feb2:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  40feb7:	mov    rcx,QWORD PTR [rbx+0x10]
  40febb:	mov    rax,QWORD PTR [rbx+0x28]
  40febf:	shl    rbp,0x4
  40fec3:	add    rbp,rcx
  40fec6:	cmp    QWORD PTR [rax+0x10],rbp
  40feca:	jae    40fed0 <__ctype_b_loc@plt+0xdc00>
  40fecc:	mov    QWORD PTR [rax+0x10],rbp
  40fed0:	mov    rax,QWORD PTR [rbx+0x18]
  40fed4:	cmp    rax,rcx
  40fed7:	cmovae rax,r15
  40fedb:	mov    rsi,QWORD PTR [rax]
  40fede:	lea    eax,[r14-0x1]
  40fee2:	cmp    eax,DWORD PTR [rsi+0x38]
  40fee5:	jae    40fef4 <__ctype_b_loc@plt+0xdc24>
  40fee7:	movsxd r15,eax
  40feea:	shl    r15,0x4
  40feee:	add    r15,QWORD PTR [rsi+0x18]
  40fef2:	jmp    40ff61 <__ctype_b_loc@plt+0xdc91>
  40fef4:	vcvtsi2sd xmm0,xmm1,r14d
  40fef9:	test   r14d,r14d
  40fefc:	je     40ff3c <__ctype_b_loc@plt+0xdc6c>
  40fefe:	vmovq  rdx,xmm0
  40ff03:	mov    rax,rdx
  40ff06:	shr    rax,0x20
  40ff0a:	add    eax,edx
  40ff0c:	mov    dl,BYTE PTR [rsi+0xb]
  40ff0f:	mov    rdi,0xffffffffffffffff
  40ff16:	shlx   rdi,rdi,rdx
  40ff1b:	or     rdi,0x1
  40ff1f:	xor    rdi,0xfffffffffffffffe
  40ff23:	xor    edx,edx
  40ff25:	div    rdi
  40ff28:	lea    rax,[rdx+rdx*4]
  40ff2c:	shl    rax,0x3
  40ff30:	add    rax,QWORD PTR [rsi+0x20]
  40ff34:	cmp    DWORD PTR [rax+0x18],0x3
  40ff38:	jne    40ff53 <__ctype_b_loc@plt+0xdc83>
  40ff3a:	jmp    40ff46 <__ctype_b_loc@plt+0xdc76>
  40ff3c:	mov    rax,QWORD PTR [rsi+0x20]
  40ff40:	cmp    DWORD PTR [rax+0x18],0x3
  40ff44:	jne    40ff53 <__ctype_b_loc@plt+0xdc83>
  40ff46:	vmovsd xmm1,QWORD PTR [rax+0x10]
  40ff4b:	vucomisd xmm1,xmm0
  40ff4f:	jne    40ff53 <__ctype_b_loc@plt+0xdc83>
  40ff51:	jnp    40ff5e <__ctype_b_loc@plt+0xdc8e>
  40ff53:	mov    rax,QWORD PTR [rax+0x20]
  40ff57:	test   rax,rax
  40ff5a:	jne    40ff40 <__ctype_b_loc@plt+0xdc70>
  40ff5c:	jmp    40ff61 <__ctype_b_loc@plt+0xdc91>
  40ff5e:	mov    r15,rax
  40ff61:	mov    rax,QWORD PTR [r15]
  40ff64:	mov    QWORD PTR [rcx],rax
  40ff67:	mov    eax,DWORD PTR [r15+0x8]
  40ff6b:	mov    DWORD PTR [rcx+0x8],eax
  40ff6e:	mov    rcx,QWORD PTR [rbx+0x10]
  40ff72:	add    rcx,0x10
  40ff76:	mov    QWORD PTR [rbx+0x10],rcx
  40ff7a:	cmp    r13d,r14d
  40ff7d:	jle    40fe77 <__ctype_b_loc@plt+0xdba7>
  40ff83:	movsxd rdi,r14d
  40ff86:	movsxd r10,r13d
  40ff89:	lea    r9,[rip+0x1ab88]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  40ff90:	mov    r8,0xffffffffffffffff
  40ff97:	nop    WORD PTR [rax+rax*1+0x0]
  40ffa0:	mov    rax,rdi
  40ffa3:	lea    rdi,[rdi+0x1]
  40ffa7:	mov    rdx,QWORD PTR [rbx+0x18]
  40ffab:	cmp    rdx,rcx
  40ffae:	cmovae rdx,r9
  40ffb2:	mov    rbp,QWORD PTR [rdx]
  40ffb5:	cmp    DWORD PTR [rbp+0x38],eax
  40ffb8:	jbe    40ffd0 <__ctype_b_loc@plt+0xdd00>
  40ffba:	shl    rax,0x4
  40ffbe:	add    rax,QWORD PTR [rbp+0x18]
  40ffc2:	jmp    41003f <__ctype_b_loc@plt+0xdd6f>
  40ffc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ffce:	xchg   ax,ax
  40ffd0:	vcvtsi2sd xmm0,xmm2,edi
  40ffd4:	test   rdi,rdi
  40ffd7:	je     410011 <__ctype_b_loc@plt+0xdd41>
  40ffd9:	vmovq  rdx,xmm0
  40ffde:	mov    rax,rdx
  40ffe1:	shr    rax,0x20
  40ffe5:	add    eax,edx
  40ffe7:	movzx  edx,BYTE PTR [rbp+0xb]
  40ffeb:	shlx   rsi,r8,rdx
  40fff0:	or     rsi,0x1
  40fff4:	xor    rsi,0xfffffffffffffffe
  40fff8:	xor    edx,edx
  40fffa:	div    rsi
  40fffd:	lea    rax,[rdx+rdx*4]
  410001:	shl    rax,0x3
  410005:	add    rax,QWORD PTR [rbp+0x20]
  410009:	cmp    DWORD PTR [rax+0x18],0x3
  41000d:	jne    410033 <__ctype_b_loc@plt+0xdd63>
  41000f:	jmp    410026 <__ctype_b_loc@plt+0xdd56>
  410011:	mov    rax,QWORD PTR [rbp+0x20]
  410015:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41001f:	nop
  410020:	cmp    DWORD PTR [rax+0x18],0x3
  410024:	jne    410033 <__ctype_b_loc@plt+0xdd63>
  410026:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41002b:	vucomisd xmm1,xmm0
  41002f:	jne    410033 <__ctype_b_loc@plt+0xdd63>
  410031:	jnp    41003f <__ctype_b_loc@plt+0xdd6f>
  410033:	mov    rax,QWORD PTR [rax+0x20]
  410037:	test   rax,rax
  41003a:	jne    410020 <__ctype_b_loc@plt+0xdd50>
  41003c:	mov    rax,r9
  41003f:	mov    rdx,QWORD PTR [rax]
  410042:	mov    QWORD PTR [rcx],rdx
  410045:	mov    eax,DWORD PTR [rax+0x8]
  410048:	mov    DWORD PTR [rcx+0x8],eax
  41004b:	mov    rcx,QWORD PTR [rbx+0x10]
  41004f:	add    rcx,0x10
  410053:	mov    QWORD PTR [rbx+0x10],rcx
  410057:	cmp    rdi,r10
  41005a:	jne    40ffa0 <__ctype_b_loc@plt+0xdcd0>
  410060:	jmp    40fe77 <__ctype_b_loc@plt+0xdba7>
  410065:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41006f:	nop
  410070:	push   r15
  410072:	push   r14
  410074:	push   r12
  410076:	push   rbx
  410077:	sub    rsp,0x148
  41007e:	mov    r14,rsi
  410081:	mov    rbx,rdi
  410084:	test   al,al
  410086:	je     4100c7 <__ctype_b_loc@plt+0xddf7>
  410088:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  41008e:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  410094:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  41009a:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  4100a3:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  4100ac:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  4100b5:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  4100be:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  4100c7:	mov    QWORD PTR [rsp+0x48],r9
  4100cc:	mov    QWORD PTR [rsp+0x40],r8
  4100d1:	mov    QWORD PTR [rsp+0x38],rcx
  4100d6:	mov    QWORD PTR [rsp+0x30],rdx
  4100db:	lea    rax,[rsp+0x20]
  4100e0:	mov    QWORD PTR [rsp+0x10],rax
  4100e5:	lea    rax,[rsp+0x170]
  4100ed:	mov    QWORD PTR [rsp+0x8],rax
  4100f2:	movabs rax,0x3000000010
  4100fc:	mov    QWORD PTR [rsp],rax
  410100:	mov    rax,QWORD PTR [rbx+0x28]
  410104:	mov    rcx,QWORD PTR [rbx+0x50]
  410108:	mov    edx,0x1
  41010d:	nop    DWORD PTR [rax]
  410110:	cmp    rax,rcx
  410113:	jbe    41018d <__ctype_b_loc@plt+0xdebd>
  410115:	add    edx,0xffffffff
  410118:	mov    rsi,QWORD PTR [rax+0x8]
  41011c:	mov    rsi,QWORD PTR [rsi]
  41011f:	cmp    BYTE PTR [rsi+0xa],0x0
  410123:	jne    410128 <__ctype_b_loc@plt+0xde58>
  410125:	sub    edx,DWORD PTR [rax+0x24]
  410128:	add    rax,0xffffffffffffffd8
  41012c:	test   edx,edx
  41012e:	jg     410110 <__ctype_b_loc@plt+0xde40>
  410130:	xor    esi,esi
  410132:	test   edx,edx
  410134:	jne    410145 <__ctype_b_loc@plt+0xde75>
  410136:	sub    rax,rcx
  410139:	jbe    41018d <__ctype_b_loc@plt+0xdebd>
  41013b:	shr    rax,0x3
  41013f:	imul   esi,eax,0xcccccccd
  410145:	mov    DWORD PTR [rsp+0x144],esi
  41014c:	lea    rsi,[rip+0x1b064]        # 42b1b7 <__ctype_b_loc@plt+0x28ee7>
  410153:	lea    rdx,[rsp+0xd0]
  41015b:	mov    rdi,rbx
  41015e:	call   410310 <__ctype_b_loc@plt+0xe040>
  410163:	mov    ecx,DWORD PTR [rsp+0xf8]
  41016a:	test   ecx,ecx
  41016c:	jle    41018d <__ctype_b_loc@plt+0xdebd>
  41016e:	lea    rdx,[rsp+0x108]
  410176:	lea    rsi,[rip+0x1b03d]        # 42b1ba <__ctype_b_loc@plt+0x28eea>
  41017d:	xor    eax,eax
  41017f:	mov    rdi,rbx
  410182:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  410187:	lea    r15,[rbx+0x20]
  41018b:	jmp    4101ce <__ctype_b_loc@plt+0xdefe>
  41018d:	mov    rax,QWORD PTR [rbx+0x20]
  410191:	mov    rcx,QWORD PTR [rax+0x78]
  410195:	cmp    rcx,QWORD PTR [rax+0x70]
  410199:	jb     4101a3 <__ctype_b_loc@plt+0xded3>
  41019b:	mov    rdi,rbx
  41019e:	call   408070 <__ctype_b_loc@plt+0x5da0>
  4101a3:	lea    r15,[rbx+0x20]
  4101a7:	mov    r12,QWORD PTR [rbx+0x10]
  4101ab:	lea    rsi,[rip+0x1aee9]        # 42b09b <__ctype_b_loc@plt+0x28dcb>
  4101b2:	xor    edx,edx
  4101b4:	mov    rdi,rbx
  4101b7:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  4101bc:	mov    QWORD PTR [r12],rax
  4101c0:	mov    DWORD PTR [r12+0x8],0x4
  4101c9:	add    QWORD PTR [rbx+0x10],0x10
  4101ce:	mov    rax,QWORD PTR [r15]
  4101d1:	mov    rcx,QWORD PTR [rax+0x78]
  4101d5:	cmp    rcx,QWORD PTR [rax+0x70]
  4101d9:	jb     4101e3 <__ctype_b_loc@plt+0xdf13>
  4101db:	mov    rdi,rbx
  4101de:	call   408070 <__ctype_b_loc@plt+0x5da0>
  4101e3:	mov    rdx,rsp
  4101e6:	mov    rdi,rbx
  4101e9:	mov    rsi,r14
  4101ec:	call   4041e0 <__ctype_b_loc@plt+0x1f10>
  4101f1:	mov    rax,QWORD PTR [rbx+0x20]
  4101f5:	mov    rcx,QWORD PTR [rax+0x78]
  4101f9:	cmp    rcx,QWORD PTR [rax+0x70]
  4101fd:	jb     410207 <__ctype_b_loc@plt+0xdf37>
  4101ff:	mov    rdi,rbx
  410202:	call   408070 <__ctype_b_loc@plt+0x5da0>
  410207:	mov    rdx,QWORD PTR [rbx+0x10]
  41020b:	sub    rdx,QWORD PTR [rbx+0x18]
  41020f:	shr    rdx,0x4
  410213:	add    edx,0xffffffff
  410216:	mov    esi,0x2
  41021b:	mov    rdi,rbx
  41021e:	call   404850 <__ctype_b_loc@plt+0x2580>
  410223:	add    QWORD PTR [rbx+0x10],0xfffffffffffffff0
  410228:	mov    rdi,rbx
  41022b:	call   4045b0 <__ctype_b_loc@plt+0x22e0>
  410230:	add    rsp,0x148
  410237:	pop    rbx
  410238:	pop    r12
  41023a:	pop    r14
  41023c:	pop    r15
  41023e:	ret    
  41023f:	nop
  410240:	push   rbp
  410241:	push   r14
  410243:	push   rbx
  410244:	sub    rsp,0x80
  41024b:	mov    r14,rdx
  41024e:	mov    ebp,esi
  410250:	mov    rbx,rdi
  410253:	mov    rax,QWORD PTR [rdi+0x28]
  410257:	sub    rax,QWORD PTR [rdi+0x50]
  41025b:	jbe    4102c7 <__ctype_b_loc@plt+0xdff7>
  41025d:	shr    rax,0x3
  410261:	imul   eax,eax,0xcccccccd
  410267:	mov    DWORD PTR [rsp+0x7c],eax
  41026b:	lea    rsi,[rip+0x1abe5]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  410272:	lea    rdx,[rsp+0x8]
  410277:	mov    rdi,rbx
  41027a:	call   410310 <__ctype_b_loc@plt+0xe040>
  41027f:	mov    rdi,QWORD PTR [rsp+0x18]
  410284:	lea    rsi,[rip+0x1aec5]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  41028b:	call   402180 <strcmp@plt>
  410290:	test   eax,eax
  410292:	jne    410299 <__ctype_b_loc@plt+0xdfc9>
  410294:	add    ebp,0xffffffff
  410297:	je     4102e9 <__ctype_b_loc@plt+0xe019>
  410299:	mov    rcx,QWORD PTR [rsp+0x10]
  41029e:	test   rcx,rcx
  4102a1:	jne    4102af <__ctype_b_loc@plt+0xdfdf>
  4102a3:	lea    rcx,[rip+0x1aecb]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  4102aa:	mov    QWORD PTR [rsp+0x10],rcx
  4102af:	lea    rsi,[rip+0x1aec1]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  4102b6:	xor    eax,eax
  4102b8:	mov    rdi,rbx
  4102bb:	mov    edx,ebp
  4102bd:	mov    r8,r14
  4102c0:	call   410070 <__ctype_b_loc@plt+0xdda0>
  4102c5:	jmp    4102dd <__ctype_b_loc@plt+0xe00d>
  4102c7:	lea    rsi,[rip+0x1ae6c]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  4102ce:	xor    eax,eax
  4102d0:	mov    rdi,rbx
  4102d3:	mov    edx,ebp
  4102d5:	mov    rcx,r14
  4102d8:	call   410070 <__ctype_b_loc@plt+0xdda0>
  4102dd:	add    rsp,0x80
  4102e4:	pop    rbx
  4102e5:	pop    r14
  4102e7:	pop    rbp
  4102e8:	ret    
  4102e9:	mov    rdx,QWORD PTR [rsp+0x10]
  4102ee:	lea    rsi,[rip+0x1ae62]        # 42b157 <__ctype_b_loc@plt+0x28e87>
  4102f5:	xor    eax,eax
  4102f7:	mov    rdi,rbx
  4102fa:	mov    rcx,r14
  4102fd:	call   410070 <__ctype_b_loc@plt+0xdda0>
  410302:	jmp    4102dd <__ctype_b_loc@plt+0xe00d>
  410304:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41030e:	xchg   ax,ax
  410310:	push   rbp
  410311:	push   r15
  410313:	push   r14
  410315:	push   r13
  410317:	push   r12
  410319:	push   rbx
  41031a:	sub    rsp,0x48
  41031e:	mov    rbx,rdx
  410321:	mov    rbp,rsi
  410324:	mov    r15,rdi
  410327:	cmp    BYTE PTR [rsi],0x3e
  41032a:	jne    410394 <__ctype_b_loc@plt+0xe0c4>
  41032c:	mov    rax,QWORD PTR [r15+0x10]
  410330:	add    rbp,0x1
  410334:	mov    r13,QWORD PTR [rax-0x10]
  410338:	add    rax,0xfffffffffffffff0
  41033c:	mov    QWORD PTR [rsp+0x8],r15
  410341:	mov    QWORD PTR [r15+0x10],rax
  410345:	xor    r15d,r15d
  410348:	test   r13,r13
  41034b:	je     4103bb <__ctype_b_loc@plt+0xe0eb>
  41034d:	mov    al,BYTE PTR [rbp+0x0]
  410350:	test   al,al
  410352:	je     41059a <__ctype_b_loc@plt+0xe2ca>
  410358:	lea    rcx,[rbx+0x38]
  41035c:	mov    QWORD PTR [rsp+0x18],rcx
  410361:	mov    QWORD PTR [rsp+0x10],rbp
  410366:	lea    r12,[rbp+0x1]
  41036a:	lea    r14,[rip+0x19f3f]        # 42a2b0 <__ctype_b_loc@plt+0x27fe0>
  410371:	lea    rbp,[rip+0x1ae2f]        # 42b1a7 <__ctype_b_loc@plt+0x28ed7>
  410378:	lea    rcx,[rip+0x1ad1c]        # 42b09b <__ctype_b_loc@plt+0x28dcb>
  41037f:	vmovq  xmm0,rcx
  410384:	vpslldq xmm0,xmm0,0x8
  410389:	vmovdqa XMMWORD PTR [rsp+0x30],xmm0
  41038f:	jmp    410490 <__ctype_b_loc@plt+0xe1c0>
  410394:	movsxd rax,DWORD PTR [rbx+0x74]
  410398:	test   rax,rax
  41039b:	je     4103c0 <__ctype_b_loc@plt+0xe0f0>
  41039d:	mov    QWORD PTR [rsp+0x8],r15
  4103a2:	mov    rcx,QWORD PTR [r15+0x50]
  4103a6:	lea    rax,[rax+rax*4]
  4103aa:	lea    r15,[rcx+rax*8]
  4103ae:	mov    rax,QWORD PTR [rcx+rax*8+0x8]
  4103b3:	mov    r13,QWORD PTR [rax]
  4103b6:	test   r13,r13
  4103b9:	jne    41034d <__ctype_b_loc@plt+0xe07d>
  4103bb:	mov    r15,QWORD PTR [rsp+0x8]
  4103c0:	mov    DWORD PTR [rbx+0x28],0xffffffff
  4103c7:	mov    QWORD PTR [rbx+0x30],0xffffffffffffffff
  4103cf:	lea    rsi,[rip+0x1adc4]        # 42b19a <__ctype_b_loc@plt+0x28eca>
  4103d6:	vmovq  xmm0,rsi
  4103db:	lea    rax,[rip+0x1adb3]        # 42b195 <__ctype_b_loc@plt+0x28ec5>
  4103e2:	vmovq  xmm1,rax
  4103e7:	vpunpcklqdq xmm0,xmm1,xmm0
  4103eb:	lea    rax,[rip+0x1aca9]        # 42b09b <__ctype_b_loc@plt+0x28dcb>
  4103f2:	vmovq  xmm1,rax
  4103f7:	vpbroadcastq xmm1,xmm1
  4103fc:	vinserti128 ymm0,ymm1,xmm0,0x1
  410402:	vmovdqu YMMWORD PTR [rbx+0x8],ymm0
  410407:	lea    rdi,[rbx+0x38]
  41040b:	mov    edx,0x3c
  410410:	vzeroupper 
  410413:	call   4046c0 <__ctype_b_loc@plt+0x23f0>
  410418:	mov    DWORD PTR [rbx+0x2c],0x0
  41041f:	mov    bl,0x1
  410421:	xor    r13d,r13d
  410424:	jmp    4105a1 <__ctype_b_loc@plt+0xe2d1>
  410429:	mov    rcx,QWORD PTR [rsp+0x8]
  41042e:	cmp    QWORD PTR [rcx+0x28],r15
  410432:	je     41043a <__ctype_b_loc@plt+0xe16a>
  410434:	mov    rcx,QWORD PTR [r15+0x18]
  410438:	jmp    410445 <__ctype_b_loc@plt+0xe175>
  41043a:	mov    rcx,QWORD PTR [rcx+0x30]
  41043e:	mov    QWORD PTR [r15+0x18],rcx
  410442:	mov    rdx,QWORD PTR [rsi]
  410445:	mov    rdx,QWORD PTR [rdx+0x20]
  410449:	sub    rcx,QWORD PTR [rdx+0x18]
  41044d:	mov    rsi,rcx
  410450:	shr    rsi,0x2
  410454:	test   esi,esi
  410456:	jle    410501 <__ctype_b_loc@plt+0xe231>
  41045c:	mov    rax,QWORD PTR [rdx+0x28]
  410460:	test   rax,rax
  410463:	je     410482 <__ctype_b_loc@plt+0xe1b2>
  410465:	shl    rcx,0x1e
  410469:	movabs rdx,0xffffffff00000000
  410473:	add    rcx,rdx
  410476:	sar    rcx,0x1e
  41047a:	mov    eax,DWORD PTR [rax+rcx*1]
  41047d:	jmp    410501 <__ctype_b_loc@plt+0xe231>
  410482:	xor    eax,eax
  410484:	mov    DWORD PTR [rbx+0x28],eax
  410487:	jmp    410580 <__ctype_b_loc@plt+0xe2b0>
  41048c:	nop    DWORD PTR [rax+0x0]
  410490:	movsx  eax,al
  410493:	add    eax,0xffffffad
  410496:	cmp    eax,0x22
  410499:	ja     410580 <__ctype_b_loc@plt+0xe2b0>
  41049f:	movsxd rax,DWORD PTR [r14+rax*4]
  4104a3:	add    rax,r14
  4104a6:	jmp    rax
  4104a8:	cmp    BYTE PTR [r13+0xa],0x0
  4104ad:	je     41052a <__ctype_b_loc@plt+0xe25a>
  4104af:	mov    rcx,rbp
  4104b2:	mov    QWORD PTR [rbx+0x20],rbp
  4104b6:	mov    DWORD PTR [rbx+0x30],0xffffffff
  4104bd:	mov    eax,0xffffffff
  4104c2:	mov    rsi,rbp
  4104c5:	lea    rcx,[rip+0x1ace0]        # 42b1ac <__ctype_b_loc@plt+0x28edc>
  4104cc:	jmp    41055f <__ctype_b_loc@plt+0xe28f>
  4104d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4104db:	nop    DWORD PTR [rax+rax*1+0x0]
  4104e0:	mov    eax,0xffffffff
  4104e5:	test   r15,r15
  4104e8:	je     410501 <__ctype_b_loc@plt+0xe231>
  4104ea:	mov    rsi,QWORD PTR [r15+0x8]
  4104ee:	cmp    DWORD PTR [rsi+0x8],0x6
  4104f2:	jne    410501 <__ctype_b_loc@plt+0xe231>
  4104f4:	mov    rdx,QWORD PTR [rsi]
  4104f7:	cmp    BYTE PTR [rdx+0xa],0x0
  4104fb:	je     410429 <__ctype_b_loc@plt+0xe159>
  410501:	mov    DWORD PTR [rbx+0x28],eax
  410504:	jmp    410580 <__ctype_b_loc@plt+0xe2b0>
  410506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410510:	vmovdqa xmm0,XMMWORD PTR [rsp+0x30]
  410516:	vmovdqu XMMWORD PTR [rbx+0x8],xmm0
  41051b:	jmp    410580 <__ctype_b_loc@plt+0xe2b0>
  41051d:	nop    DWORD PTR [rax]
  410520:	movzx  eax,BYTE PTR [r13+0xb]
  410525:	mov    DWORD PTR [rbx+0x2c],eax
  410528:	jmp    410580 <__ctype_b_loc@plt+0xe2b0>
  41052a:	mov    rax,QWORD PTR [r13+0x20]
  41052e:	mov    rsi,QWORD PTR [rax+0x40]
  410532:	add    rsi,0x18
  410536:	mov    QWORD PTR [rbx+0x20],rsi
  41053a:	mov    rax,QWORD PTR [r13+0x20]
  41053e:	mov    ecx,DWORD PTR [rax+0x60]
  410541:	mov    DWORD PTR [rbx+0x30],ecx
  410544:	mov    rax,QWORD PTR [r13+0x20]
  410548:	mov    eax,DWORD PTR [rax+0x64]
  41054b:	test   ecx,ecx
  41054d:	lea    rcx,[rip+0x1ac5f]        # 42b1b3 <__ctype_b_loc@plt+0x28ee3>
  410554:	lea    rdx,[rip+0x1ac53]        # 42b1ae <__ctype_b_loc@plt+0x28ede>
  41055b:	cmove  rcx,rdx
  41055f:	mov    DWORD PTR [rbx+0x34],eax
  410562:	mov    QWORD PTR [rbx+0x18],rcx
  410566:	mov    edx,0x3c
  41056b:	mov    rdi,QWORD PTR [rsp+0x18]
  410570:	call   4046c0 <__ctype_b_loc@plt+0x23f0>
  410575:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41057f:	nop
  410580:	movzx  eax,BYTE PTR [r12]
  410585:	add    r12,0x1
  410589:	test   al,al
  41058b:	jne    410490 <__ctype_b_loc@plt+0xe1c0>
  410591:	xor    ebx,ebx
  410593:	mov    rbp,QWORD PTR [rsp+0x10]
  410598:	jmp    41059c <__ctype_b_loc@plt+0xe2cc>
  41059a:	xor    ebx,ebx
  41059c:	mov    r15,QWORD PTR [rsp+0x8]
  4105a1:	mov    esi,0x66
  4105a6:	mov    rdi,rbp
  4105a9:	call   4020f0 <strchr@plt>
  4105ae:	test   rax,rax
  4105b1:	je     4105f2 <__ctype_b_loc@plt+0xe322>
  4105b3:	mov    rax,QWORD PTR [r15+0x10]
  4105b7:	xor    ecx,ecx
  4105b9:	test   bl,bl
  4105bb:	jne    4105c5 <__ctype_b_loc@plt+0xe2f5>
  4105bd:	mov    QWORD PTR [rax],r13
  4105c0:	mov    ecx,0x6
  4105c5:	mov    DWORD PTR [rax+0x8],ecx
  4105c8:	mov    rax,QWORD PTR [r15+0x38]
  4105cc:	sub    rax,QWORD PTR [r15+0x10]
  4105d0:	cmp    rax,0x10
  4105d4:	jg     4105ed <__ctype_b_loc@plt+0xe31d>
  4105d6:	mov    esi,DWORD PTR [r15+0x58]
  4105da:	test   esi,esi
  4105dc:	jle    4105e2 <__ctype_b_loc@plt+0xe312>
  4105de:	add    esi,esi
  4105e0:	jmp    4105e5 <__ctype_b_loc@plt+0xe315>
  4105e2:	add    esi,0x1
  4105e5:	mov    rdi,r15
  4105e8:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  4105ed:	add    QWORD PTR [r15+0x10],0x10
  4105f2:	mov    esi,0x4c
  4105f7:	mov    rdi,rbp
  4105fa:	call   4020f0 <strchr@plt>
  4105ff:	test   rax,rax
  410602:	je     410774 <__ctype_b_loc@plt+0xe4a4>
  410608:	test   bl,bl
  41060a:	jne    410613 <__ctype_b_loc@plt+0xe343>
  41060c:	cmp    BYTE PTR [r13+0xa],0x0
  410611:	je     410646 <__ctype_b_loc@plt+0xe376>
  410613:	lea    rbp,[r15+0x10]
  410617:	mov    rax,QWORD PTR [r15+0x10]
  41061b:	mov    DWORD PTR [rax+0x8],0x0
  410622:	mov    rcx,QWORD PTR [r15+0x38]
  410626:	sub    rcx,rax
  410629:	cmp    rcx,0x10
  41062d:	jg     41076f <__ctype_b_loc@plt+0xe49f>
  410633:	mov    esi,DWORD PTR [r15+0x58]
  410637:	test   esi,esi
  410639:	jle    410764 <__ctype_b_loc@plt+0xe494>
  41063f:	add    esi,esi
  410641:	jmp    410767 <__ctype_b_loc@plt+0xe497>
  410646:	xor    esi,esi
  410648:	xor    edx,edx
  41064a:	mov    rdi,r15
  41064d:	call   403720 <__ctype_b_loc@plt+0x1450>
  410652:	mov    rbx,rax
  410655:	mov    rax,QWORD PTR [r13+0x20]
  410659:	cmp    DWORD PTR [rax+0x54],0x0
  41065d:	jle    410749 <__ctype_b_loc@plt+0xe479>
  410663:	mov    r12,QWORD PTR [rax+0x28]
  410667:	xor    ebp,ebp
  410669:	lea    r14,[rip+0x1a4a8]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  410670:	mov    ecx,DWORD PTR [r12+rbp*4]
  410674:	lea    eax,[rcx-0x1]
  410677:	cmp    eax,DWORD PTR [rbx+0x38]
  41067a:	jae    410690 <__ctype_b_loc@plt+0xe3c0>
  41067c:	cdqe   
  41067e:	shl    rax,0x4
  410682:	add    rax,QWORD PTR [rbx+0x18]
  410686:	jmp    410700 <__ctype_b_loc@plt+0xe430>
  410688:	nop    DWORD PTR [rax+rax*1+0x0]
  410690:	vcvtsi2sd xmm0,xmm2,ecx
  410694:	test   ecx,ecx
  410696:	je     4106d7 <__ctype_b_loc@plt+0xe407>
  410698:	vmovq  rdx,xmm0
  41069d:	mov    rax,rdx
  4106a0:	shr    rax,0x20
  4106a4:	add    eax,edx
  4106a6:	movzx  edx,BYTE PTR [rbx+0xb]
  4106aa:	mov    rsi,0xffffffffffffffff
  4106b1:	shlx   rsi,rsi,rdx
  4106b6:	or     rsi,0x1
  4106ba:	xor    rsi,0xfffffffffffffffe
  4106be:	xor    edx,edx
  4106c0:	div    rsi
  4106c3:	lea    rax,[rdx+rdx*4]
  4106c7:	shl    rax,0x3
  4106cb:	add    rax,QWORD PTR [rbx+0x20]
  4106cf:	cmp    DWORD PTR [rax+0x18],0x3
  4106d3:	jne    4106f3 <__ctype_b_loc@plt+0xe423>
  4106d5:	jmp    4106e6 <__ctype_b_loc@plt+0xe416>
  4106d7:	mov    rax,QWORD PTR [rbx+0x20]
  4106db:	nop    DWORD PTR [rax+rax*1+0x0]
  4106e0:	cmp    DWORD PTR [rax+0x18],0x3
  4106e4:	jne    4106f3 <__ctype_b_loc@plt+0xe423>
  4106e6:	vmovq  xmm1,QWORD PTR [rax+0x10]
  4106eb:	vucomisd xmm1,xmm0
  4106ef:	jne    4106f3 <__ctype_b_loc@plt+0xe423>
  4106f1:	jnp    410700 <__ctype_b_loc@plt+0xe430>
  4106f3:	mov    rax,QWORD PTR [rax+0x20]
  4106f7:	test   rax,rax
  4106fa:	jne    4106e0 <__ctype_b_loc@plt+0xe410>
  4106fc:	jmp    410709 <__ctype_b_loc@plt+0xe439>
  4106fe:	xchg   ax,ax
  410700:	cmp    rax,r14
  410703:	jne    410727 <__ctype_b_loc@plt+0xe457>
  410705:	vcvtsi2sd xmm0,xmm2,ecx
  410709:	vmovq  QWORD PTR [rsp+0x20],xmm0
  41070f:	mov    DWORD PTR [rsp+0x28],0x3
  410717:	mov    rdi,r15
  41071a:	mov    rsi,rbx
  41071d:	lea    rdx,[rsp+0x20]
  410722:	call   409ca0 <__ctype_b_loc@plt+0x79d0>
  410727:	mov    DWORD PTR [rax],0x1
  41072d:	mov    DWORD PTR [rax+0x8],0x1
  410734:	add    rbp,0x1
  410738:	mov    rax,QWORD PTR [r13+0x20]
  41073c:	movsxd rax,DWORD PTR [rax+0x54]
  410740:	cmp    rbp,rax
  410743:	jl     410670 <__ctype_b_loc@plt+0xe3a0>
  410749:	lea    rbp,[r15+0x10]
  41074d:	mov    rax,QWORD PTR [r15+0x10]
  410751:	mov    QWORD PTR [rax],rbx
  410754:	mov    DWORD PTR [rax+0x8],0x5
  41075b:	mov    rax,QWORD PTR [r15+0x10]
  41075f:	jmp    410622 <__ctype_b_loc@plt+0xe352>
  410764:	add    esi,0x1
  410767:	mov    rdi,r15
  41076a:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  41076f:	add    QWORD PTR [rbp+0x0],0x10
  410774:	add    rsp,0x48
  410778:	pop    rbx
  410779:	pop    r12
  41077b:	pop    r13
  41077d:	pop    r14
  41077f:	pop    r15
  410781:	pop    rbp
  410782:	ret    
  410783:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41078d:	nop    DWORD PTR [rax]
  410790:	push   r14
  410792:	push   rbx
  410793:	sub    rsp,0xd8
  41079a:	mov    r14,rsi
  41079d:	mov    rbx,rdi
  4107a0:	test   al,al
  4107a2:	je     4107e3 <__ctype_b_loc@plt+0xe513>
  4107a4:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  4107aa:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  4107b0:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  4107b6:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  4107bf:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  4107c8:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  4107d1:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  4107da:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  4107e3:	mov    QWORD PTR [rsp+0x48],r9
  4107e8:	mov    QWORD PTR [rsp+0x40],r8
  4107ed:	mov    QWORD PTR [rsp+0x38],rcx
  4107f2:	mov    QWORD PTR [rsp+0x30],rdx
  4107f7:	mov    rax,QWORD PTR [rbx+0x20]
  4107fb:	mov    rcx,QWORD PTR [rax+0x78]
  4107ff:	cmp    rcx,QWORD PTR [rax+0x70]
  410803:	jb     41080d <__ctype_b_loc@plt+0xe53d>
  410805:	mov    rdi,rbx
  410808:	call   408070 <__ctype_b_loc@plt+0x5da0>
  41080d:	lea    rax,[rsp+0x20]
  410812:	mov    QWORD PTR [rsp+0x10],rax
  410817:	lea    rax,[rsp+0xf0]
  41081f:	mov    QWORD PTR [rsp+0x8],rax
  410824:	movabs rax,0x3000000010
  41082e:	mov    QWORD PTR [rsp],rax
  410832:	mov    rdx,rsp
  410835:	mov    rdi,rbx
  410838:	mov    rsi,r14
  41083b:	call   4041e0 <__ctype_b_loc@plt+0x1f10>
  410840:	add    rsp,0xd8
  410847:	pop    rbx
  410848:	pop    r14
  41084a:	ret    
  41084b:	nop    DWORD PTR [rax+rax*1+0x0]
  410850:	push   rbp
  410851:	push   rbx
  410852:	push   rax
  410853:	mov    ebp,esi
  410855:	mov    rbx,rdi
  410858:	test   esi,esi
  41085a:	jle    410884 <__ctype_b_loc@plt+0xe5b4>
  41085c:	mov    rax,QWORD PTR [rbx+0x18]
  410860:	movsxd rcx,ebp
  410863:	shl    rcx,0x4
  410867:	add    rax,rcx
  41086a:	add    rax,0xfffffffffffffff0
  41086e:	cmp    rax,QWORD PTR [rbx+0x10]
  410872:	jb     410917 <__ctype_b_loc@plt+0xe647>
  410878:	lea    rcx,[rip+0x1a957]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  41087f:	jmp    41093f <__ctype_b_loc@plt+0xe66f>
  410884:	cmp    ebp,0xffffd8f1
  41088a:	jl     410899 <__ctype_b_loc@plt+0xe5c9>
  41088c:	movsxd rax,ebp
  41088f:	shl    rax,0x4
  410893:	add    rax,QWORD PTR [rbx+0x10]
  410897:	jmp    410917 <__ctype_b_loc@plt+0xe647>
  410899:	cmp    ebp,0xffffd8ee
  41089f:	je     4108bc <__ctype_b_loc@plt+0xe5ec>
  4108a1:	cmp    ebp,0xffffd8ef
  4108a7:	je     4108c2 <__ctype_b_loc@plt+0xe5f2>
  4108a9:	cmp    ebp,0xffffd8f0
  4108af:	jne    4108eb <__ctype_b_loc@plt+0xe61b>
  4108b1:	mov    eax,0xa0
  4108b6:	add    rax,QWORD PTR [rbx+0x20]
  4108ba:	jmp    410917 <__ctype_b_loc@plt+0xe647>
  4108bc:	lea    rax,[rbx+0x78]
  4108c0:	jmp    410917 <__ctype_b_loc@plt+0xe647>
  4108c2:	mov    rax,QWORD PTR [rbx+0x28]
  4108c6:	mov    rax,QWORD PTR [rax+0x8]
  4108ca:	mov    rcx,QWORD PTR [rax]
  4108cd:	lea    rax,[rbx+0x88]
  4108d4:	mov    rcx,QWORD PTR [rcx+0x18]
  4108d8:	mov    QWORD PTR [rbx+0x88],rcx
  4108df:	mov    DWORD PTR [rbx+0x90],0x5
  4108e9:	jmp    410917 <__ctype_b_loc@plt+0xe647>
  4108eb:	mov    rax,QWORD PTR [rbx+0x28]
  4108ef:	mov    rax,QWORD PTR [rax+0x8]
  4108f3:	mov    rax,QWORD PTR [rax]
  4108f6:	mov    ecx,0xffffd8ee
  4108fb:	sub    ecx,ebp
  4108fd:	movzx  esi,BYTE PTR [rax+0xb]
  410901:	cmp    ecx,esi
  410903:	jg     410878 <__ctype_b_loc@plt+0xe5a8>
  410909:	movsxd rcx,ecx
  41090c:	shl    rcx,0x4
  410910:	add    rax,rcx
  410913:	add    rax,0x18
  410917:	lea    rcx,[rip+0x1a8b8]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  41091e:	lea    rsi,[rip+0x1a1f3]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  410925:	cmp    rax,rsi
  410928:	je     41093f <__ctype_b_loc@plt+0xe66f>
  41092a:	movsxd rax,DWORD PTR [rax+0x8]
  41092e:	cmp    rax,0xffffffffffffffff
  410932:	je     41093f <__ctype_b_loc@plt+0xe66f>
  410934:	lea    rcx,[rip+0x1ffa5]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  41093b:	mov    rcx,QWORD PTR [rcx+rax*8]
  41093f:	lea    rsi,[rip+0x1a87c]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  410946:	xor    eax,eax
  410948:	mov    rdi,rbx
  41094b:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  410950:	mov    rdi,rbx
  410953:	mov    esi,ebp
  410955:	mov    rdx,rax
  410958:	add    rsp,0x8
  41095c:	pop    rbx
  41095d:	pop    rbp
  41095e:	jmp    410240 <__ctype_b_loc@plt+0xdf70>
  410963:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41096d:	nop    DWORD PTR [rax]
  410970:	push   rbp
  410971:	push   r15
  410973:	push   r14
  410975:	push   r12
  410977:	push   rbx
  410978:	sub    rsp,0x20
  41097c:	mov    ebp,esi
  41097e:	mov    r14,rdi
  410981:	test   esi,esi
  410983:	jle    4109a6 <__ctype_b_loc@plt+0xe6d6>
  410985:	mov    rax,QWORD PTR [r14+0x18]
  410989:	movsxd rcx,ebp
  41098c:	shl    rcx,0x4
  410990:	add    rcx,rax
  410993:	add    rcx,0xfffffffffffffff0
  410997:	cmp    rcx,QWORD PTR [r14+0x10]
  41099b:	jb     410a3a <__ctype_b_loc@plt+0xe76a>
  4109a1:	jmp    410d55 <__ctype_b_loc@plt+0xea85>
  4109a6:	cmp    ebp,0xffffd8f1
  4109ac:	jl     4109bb <__ctype_b_loc@plt+0xe6eb>
  4109ae:	movsxd rcx,ebp
  4109b1:	shl    rcx,0x4
  4109b5:	add    rcx,QWORD PTR [r14+0x10]
  4109b9:	jmp    410a3a <__ctype_b_loc@plt+0xe76a>
  4109bb:	cmp    ebp,0xffffd8ee
  4109c1:	je     4109de <__ctype_b_loc@plt+0xe70e>
  4109c3:	cmp    ebp,0xffffd8ef
  4109c9:	je     4109e4 <__ctype_b_loc@plt+0xe714>
  4109cb:	cmp    ebp,0xffffd8f0
  4109d1:	jne    410a0e <__ctype_b_loc@plt+0xe73e>
  4109d3:	mov    ecx,0xa0
  4109d8:	add    rcx,QWORD PTR [r14+0x20]
  4109dc:	jmp    410a3a <__ctype_b_loc@plt+0xe76a>
  4109de:	lea    rcx,[r14+0x78]
  4109e2:	jmp    410a3a <__ctype_b_loc@plt+0xe76a>
  4109e4:	mov    rax,QWORD PTR [r14+0x28]
  4109e8:	mov    rax,QWORD PTR [rax+0x8]
  4109ec:	mov    rax,QWORD PTR [rax]
  4109ef:	lea    rcx,[r14+0x88]
  4109f6:	mov    rax,QWORD PTR [rax+0x18]
  4109fa:	mov    QWORD PTR [r14+0x88],rax
  410a01:	mov    DWORD PTR [r14+0x90],0x5
  410a0c:	jmp    410a3a <__ctype_b_loc@plt+0xe76a>
  410a0e:	mov    rax,QWORD PTR [r14+0x28]
  410a12:	mov    rax,QWORD PTR [rax+0x8]
  410a16:	mov    rax,QWORD PTR [rax]
  410a19:	mov    ecx,0xffffd8ee
  410a1e:	sub    ecx,ebp
  410a20:	movzx  esi,BYTE PTR [rax+0xb]
  410a24:	cmp    ecx,esi
  410a26:	jg     410d55 <__ctype_b_loc@plt+0xea85>
  410a2c:	movsxd rcx,ecx
  410a2f:	shl    rcx,0x4
  410a33:	add    rcx,rax
  410a36:	add    rcx,0x18
  410a3a:	lea    rax,[rip+0x1a0d7]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  410a41:	cmp    rcx,rax
  410a44:	je     410d55 <__ctype_b_loc@plt+0xea85>
  410a4a:	cmp    DWORD PTR [rcx+0x8],0x0
  410a4e:	jle    410d55 <__ctype_b_loc@plt+0xea85>
  410a54:	test   ebp,ebp
  410a56:	jle    410a7b <__ctype_b_loc@plt+0xe7ab>
  410a58:	mov    rax,QWORD PTR [r14+0x18]
  410a5c:	movsxd rcx,ebp
  410a5f:	shl    rcx,0x4
  410a63:	add    rcx,rax
  410a66:	add    rcx,0xfffffffffffffff0
  410a6a:	cmp    rcx,QWORD PTR [r14+0x10]
  410a6e:	lea    rax,[rip+0x1a0a3]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  410a75:	cmovb  rax,rcx
  410a79:	jmp    410a92 <__ctype_b_loc@plt+0xe7c2>
  410a7b:	cmp    ebp,0xffffd8f1
  410a81:	jl     410b9d <__ctype_b_loc@plt+0xe8cd>
  410a87:	movsxd rax,ebp
  410a8a:	shl    rax,0x4
  410a8e:	add    rax,QWORD PTR [r14+0x10]
  410a92:	mov    ecx,DWORD PTR [rax+0x8]
  410a95:	cmp    ecx,0x3
  410a98:	je     410b4d <__ctype_b_loc@plt+0xe87d>
  410a9e:	cmp    ecx,0x4
  410aa1:	jne    410b5b <__ctype_b_loc@plt+0xe88b>
  410aa7:	mov    r15,QWORD PTR [rax]
  410aaa:	add    r15,0x18
  410aae:	mov    rsi,rsp
  410ab1:	mov    rdi,r15
  410ab4:	call   4020b0 <strtod@plt>
  410ab9:	mov    rbx,QWORD PTR [rsp]
  410abd:	cmp    rbx,r15
  410ac0:	je     410b5b <__ctype_b_loc@plt+0xe88b>
  410ac6:	mov    r12b,BYTE PTR [rbx]
  410ac9:	mov    eax,r12d
  410acc:	or     al,0x20
  410ace:	cmp    al,0x78
  410ad0:	jne    410b02 <__ctype_b_loc@plt+0xe832>
  410ad2:	mov    rsi,rsp
  410ad5:	mov    edx,0x10
  410ada:	mov    rdi,r15
  410add:	call   402250 <strtoul@plt>
  410ae2:	vmovq  xmm0,rax
  410ae7:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x1a181]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  410aef:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x1a189]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  410af7:	vhaddpd xmm0,xmm0,xmm0
  410afb:	mov    rbx,QWORD PTR [rsp]
  410aff:	mov    r12b,BYTE PTR [rbx]
  410b02:	test   r12b,r12b
  410b05:	je     410b42 <__ctype_b_loc@plt+0xe872>
  410b07:	vmovapd XMMWORD PTR [rsp+0x10],xmm0
  410b0d:	call   4022d0 <__ctype_b_loc@plt>
  410b12:	mov    rax,QWORD PTR [rax]
  410b15:	movzx  ecx,r12b
  410b19:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  410b1e:	je     410b5b <__ctype_b_loc@plt+0xe88b>
  410b20:	add    rbx,0x1
  410b24:	vmovapd xmm0,XMMWORD PTR [rsp+0x10]
  410b2a:	nop    WORD PTR [rax+rax*1+0x0]
  410b30:	movzx  ecx,BYTE PTR [rbx]
  410b33:	add    rbx,0x1
  410b37:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  410b3c:	jne    410b30 <__ctype_b_loc@plt+0xe860>
  410b3e:	test   cl,cl
  410b40:	jne    410b5b <__ctype_b_loc@plt+0xe88b>
  410b42:	lea    rax,[rsp+0x8]
  410b47:	vmovsd QWORD PTR [rsp+0x8],xmm0
  410b4d:	vcvttsd2si rdx,QWORD PTR [rax]
  410b52:	test   rdx,rdx
  410b55:	jne    410d55 <__ctype_b_loc@plt+0xea85>
  410b5b:	test   ebp,ebp
  410b5d:	jle    410b85 <__ctype_b_loc@plt+0xe8b5>
  410b5f:	mov    rax,QWORD PTR [r14+0x18]
  410b63:	movsxd rcx,ebp
  410b66:	shl    rcx,0x4
  410b6a:	add    rcx,rax
  410b6d:	add    rcx,0xfffffffffffffff0
  410b71:	cmp    rcx,QWORD PTR [r14+0x10]
  410b75:	lea    rax,[rip+0x19f9c]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  410b7c:	cmovb  rax,rcx
  410b80:	jmp    410cbd <__ctype_b_loc@plt+0xe9ed>
  410b85:	cmp    ebp,0xffffd8f1
  410b8b:	jl     410bc3 <__ctype_b_loc@plt+0xe8f3>
  410b8d:	movsxd rax,ebp
  410b90:	shl    rax,0x4
  410b94:	add    rax,QWORD PTR [r14+0x10]
  410b98:	jmp    410cbd <__ctype_b_loc@plt+0xe9ed>
  410b9d:	cmp    ebp,0xffffd8ee
  410ba3:	je     410bf5 <__ctype_b_loc@plt+0xe925>
  410ba5:	cmp    ebp,0xffffd8ef
  410bab:	je     410bfe <__ctype_b_loc@plt+0xe92e>
  410bad:	cmp    ebp,0xffffd8f0
  410bb3:	jne    410c2b <__ctype_b_loc@plt+0xe95b>
  410bb5:	mov    eax,0xa0
  410bba:	add    rax,QWORD PTR [r14+0x20]
  410bbe:	jmp    410a92 <__ctype_b_loc@plt+0xe7c2>
  410bc3:	cmp    ebp,0xffffd8ee
  410bc9:	je     410c5c <__ctype_b_loc@plt+0xe98c>
  410bcf:	cmp    ebp,0xffffd8ef
  410bd5:	je     410c62 <__ctype_b_loc@plt+0xe992>
  410bdb:	cmp    ebp,0xffffd8f0
  410be1:	jne    410c8c <__ctype_b_loc@plt+0xe9bc>
  410be7:	mov    eax,0xa0
  410bec:	add    rax,QWORD PTR [r14+0x20]
  410bf0:	jmp    410cbd <__ctype_b_loc@plt+0xe9ed>
  410bf5:	lea    rax,[r14+0x78]
  410bf9:	jmp    410a92 <__ctype_b_loc@plt+0xe7c2>
  410bfe:	mov    rax,QWORD PTR [r14+0x28]
  410c02:	mov    rax,QWORD PTR [rax+0x8]
  410c06:	mov    rcx,QWORD PTR [rax]
  410c09:	lea    rax,[r14+0x88]
  410c10:	mov    rcx,QWORD PTR [rcx+0x18]
  410c14:	mov    QWORD PTR [r14+0x88],rcx
  410c1b:	mov    DWORD PTR [r14+0x90],0x5
  410c26:	jmp    410a92 <__ctype_b_loc@plt+0xe7c2>
  410c2b:	mov    rcx,QWORD PTR [r14+0x28]
  410c2f:	mov    rcx,QWORD PTR [rcx+0x8]
  410c33:	mov    rcx,QWORD PTR [rcx]
  410c36:	mov    edx,0xffffd8ee
  410c3b:	sub    edx,ebp
  410c3d:	movzx  esi,BYTE PTR [rcx+0xb]
  410c41:	cmp    edx,esi
  410c43:	jg     410a92 <__ctype_b_loc@plt+0xe7c2>
  410c49:	movsxd rax,edx
  410c4c:	shl    rax,0x4
  410c50:	add    rax,rcx
  410c53:	add    rax,0x18
  410c57:	jmp    410a92 <__ctype_b_loc@plt+0xe7c2>
  410c5c:	lea    rax,[r14+0x78]
  410c60:	jmp    410cbd <__ctype_b_loc@plt+0xe9ed>
  410c62:	mov    rax,QWORD PTR [r14+0x28]
  410c66:	mov    rax,QWORD PTR [rax+0x8]
  410c6a:	mov    rcx,QWORD PTR [rax]
  410c6d:	lea    rax,[r14+0x88]
  410c74:	mov    rcx,QWORD PTR [rcx+0x18]
  410c78:	mov    QWORD PTR [r14+0x88],rcx
  410c7f:	mov    DWORD PTR [r14+0x90],0x5
  410c8a:	jmp    410cbd <__ctype_b_loc@plt+0xe9ed>
  410c8c:	mov    rax,QWORD PTR [r14+0x28]
  410c90:	mov    rax,QWORD PTR [rax+0x8]
  410c94:	mov    rax,QWORD PTR [rax]
  410c97:	mov    ecx,0xffffd8ee
  410c9c:	sub    ecx,ebp
  410c9e:	movzx  edx,BYTE PTR [rax+0xb]
  410ca2:	cmp    ecx,edx
  410ca4:	jle    410caf <__ctype_b_loc@plt+0xe9df>
  410ca6:	lea    rax,[rip+0x19e6b]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  410cad:	jmp    410cbd <__ctype_b_loc@plt+0xe9ed>
  410caf:	movsxd rcx,ecx
  410cb2:	shl    rcx,0x4
  410cb6:	add    rax,rcx
  410cb9:	add    rax,0x18
  410cbd:	mov    ecx,DWORD PTR [rax+0x8]
  410cc0:	cmp    ecx,0x3
  410cc3:	je     410d53 <__ctype_b_loc@plt+0xea83>
  410cc9:	cmp    ecx,0x4
  410ccc:	jne    410d42 <__ctype_b_loc@plt+0xea72>
  410cce:	mov    r15,QWORD PTR [rax]
  410cd1:	add    r15,0x18
  410cd5:	mov    rsi,rsp
  410cd8:	mov    rdi,r15
  410cdb:	call   4020b0 <strtod@plt>
  410ce0:	mov    rbx,QWORD PTR [rsp]
  410ce4:	cmp    rbx,r15
  410ce7:	je     410d42 <__ctype_b_loc@plt+0xea72>
  410ce9:	mov    r12b,BYTE PTR [rbx]
  410cec:	mov    eax,r12d
  410cef:	or     al,0x20
  410cf1:	cmp    al,0x78
  410cf3:	jne    410d0c <__ctype_b_loc@plt+0xea3c>
  410cf5:	mov    rsi,rsp
  410cf8:	mov    edx,0x10
  410cfd:	mov    rdi,r15
  410d00:	call   402250 <strtoul@plt>
  410d05:	mov    rbx,QWORD PTR [rsp]
  410d09:	mov    r12b,BYTE PTR [rbx]
  410d0c:	test   r12b,r12b
  410d0f:	je     410d53 <__ctype_b_loc@plt+0xea83>
  410d11:	call   4022d0 <__ctype_b_loc@plt>
  410d16:	mov    rax,QWORD PTR [rax]
  410d19:	movzx  ecx,r12b
  410d1d:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  410d22:	je     410d42 <__ctype_b_loc@plt+0xea72>
  410d24:	add    rbx,0x1
  410d28:	nop    DWORD PTR [rax+rax*1+0x0]
  410d30:	movzx  ecx,BYTE PTR [rbx]
  410d33:	add    rbx,0x1
  410d37:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  410d3c:	jne    410d30 <__ctype_b_loc@plt+0xea60>
  410d3e:	test   cl,cl
  410d40:	je     410d53 <__ctype_b_loc@plt+0xea83>
  410d42:	lea    rdx,[rip+0x1a158]        # 42aea1 <__ctype_b_loc@plt+0x28bd1>
  410d49:	mov    rdi,r14
  410d4c:	mov    esi,ebp
  410d4e:	call   410850 <__ctype_b_loc@plt+0xe580>
  410d53:	xor    edx,edx
  410d55:	mov    rax,rdx
  410d58:	add    rsp,0x20
  410d5c:	pop    rbx
  410d5d:	pop    r12
  410d5f:	pop    r14
  410d61:	pop    r15
  410d63:	pop    rbp
  410d64:	ret    
  410d65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410d6f:	nop
  410d70:	mov    rax,QWORD PTR [rsi+0x8]
  410d74:	test   rax,rax
  410d77:	je     410d88 <__ctype_b_loc@plt+0xeab8>
  410d79:	mov    QWORD PTR [rdx],rax
  410d7c:	mov    QWORD PTR [rsi+0x8],0x0
  410d84:	mov    rax,QWORD PTR [rsi]
  410d87:	ret    
  410d88:	xor    eax,eax
  410d8a:	ret    
  410d8b:	nop    DWORD PTR [rax+rax*1+0x0]
  410d90:	push   rbp
  410d91:	push   r15
  410d93:	push   r14
  410d95:	push   r13
  410d97:	push   r12
  410d99:	push   rbx
  410d9a:	sub    rsp,0x18
  410d9e:	mov    r15,rcx
  410da1:	mov    rbx,rdi
  410da4:	movzx  r13d,WORD PTR [rdi+0x60]
  410da9:	mov    r12,QWORD PTR [rdi+0x28]
  410dad:	mov    rbp,QWORD PTR [rdi+0x50]
  410db1:	mov    al,BYTE PTR [rdi+0x65]
  410db4:	mov    BYTE PTR [rsp+0xf],al
  410db8:	mov    rax,QWORD PTR [rdi+0xb0]
  410dbf:	mov    QWORD PTR [rsp+0x10],rax
  410dc4:	mov    QWORD PTR [rdi+0xb0],r8
  410dcb:	call   403350 <__ctype_b_loc@plt+0x1080>
  410dd0:	mov    r14d,eax
  410dd3:	test   eax,eax
  410dd5:	je     410ee2 <__ctype_b_loc@plt+0xec12>
  410ddb:	sub    r12,rbp
  410dde:	add    r15,QWORD PTR [rbx+0x40]
  410de2:	mov    rdi,rbx
  410de5:	mov    rsi,r15
  410de8:	call   403e60 <__ctype_b_loc@plt+0x1b90>
  410ded:	lea    eax,[r14-0x2]
  410df1:	cmp    eax,0x2
  410df4:	jb     410e10 <__ctype_b_loc@plt+0xeb40>
  410df6:	cmp    r14d,0x5
  410dfa:	je     410e20 <__ctype_b_loc@plt+0xeb50>
  410dfc:	cmp    r14d,0x4
  410e00:	jne    410e40 <__ctype_b_loc@plt+0xeb70>
  410e02:	lea    rsi,[rip+0x19f86]        # 42ad8f <__ctype_b_loc@plt+0x28abf>
  410e09:	mov    edx,0x11
  410e0e:	jmp    410e2c <__ctype_b_loc@plt+0xeb5c>
  410e10:	mov    rax,QWORD PTR [rbx+0x10]
  410e14:	mov    rcx,QWORD PTR [rax-0x10]
  410e18:	mov    QWORD PTR [r15],rcx
  410e1b:	mov    eax,DWORD PTR [rax-0x8]
  410e1e:	jmp    410e3c <__ctype_b_loc@plt+0xeb6c>
  410e20:	lea    rsi,[rip+0x19f7a]        # 42ada1 <__ctype_b_loc@plt+0x28ad1>
  410e27:	mov    edx,0x17
  410e2c:	mov    rdi,rbx
  410e2f:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  410e34:	mov    QWORD PTR [r15],rax
  410e37:	mov    eax,0x4
  410e3c:	mov    DWORD PTR [r15+0x8],eax
  410e40:	add    r15,0x10
  410e44:	mov    QWORD PTR [rbx+0x10],r15
  410e48:	mov    WORD PTR [rbx+0x60],r13w
  410e4d:	mov    r15,QWORD PTR [rbx+0x50]
  410e51:	lea    rax,[r15+r12*1]
  410e55:	mov    QWORD PTR [rbx+0x28],rax
  410e59:	mov    rax,QWORD PTR [r15+r12*1]
  410e5d:	mov    QWORD PTR [rbx+0x18],rax
  410e61:	mov    rax,QWORD PTR [r15+r12*1+0x18]
  410e66:	mov    QWORD PTR [rbx+0x30],rax
  410e6a:	mov    al,BYTE PTR [rsp+0xf]
  410e6e:	mov    BYTE PTR [rbx+0x65],al
  410e71:	movsxd rax,DWORD PTR [rbx+0x5c]
  410e75:	cmp    rax,0x4e21
  410e7b:	jl     410ee2 <__ctype_b_loc@plt+0xec12>
  410e7d:	shr    r12,0x3
  410e81:	imul   ecx,r12d,0xcccccccd
  410e88:	cmp    ecx,0x4e1e
  410e8e:	jg     410ee2 <__ctype_b_loc@plt+0xec12>
  410e90:	shl    rax,0x3
  410e94:	lea    r12,[rax+rax*4]
  410e98:	mov    rbp,QWORD PTR [rbx+0x20]
  410e9c:	mov    rdi,QWORD PTR [rbp+0x18]
  410ea0:	mov    ecx,0xc3500
  410ea5:	mov    rsi,r15
  410ea8:	mov    rdx,r12
  410eab:	call   QWORD PTR [rbp+0x10]
  410eae:	test   rax,rax
  410eb1:	je     410f00 <__ctype_b_loc@plt+0xec30>
  410eb3:	mov    ecx,0xc3500
  410eb8:	sub    rcx,r12
  410ebb:	add    QWORD PTR [rbp+0x78],rcx
  410ebf:	mov    QWORD PTR [rbx+0x50],rax
  410ec3:	mov    DWORD PTR [rbx+0x5c],0x4e20
  410eca:	mov    rcx,QWORD PTR [rbx+0x28]
  410ece:	sub    rcx,r15
  410ed1:	add    rcx,rax
  410ed4:	mov    QWORD PTR [rbx+0x28],rcx
  410ed8:	add    rax,0xc34d8
  410ede:	mov    QWORD PTR [rbx+0x48],rax
  410ee2:	mov    rax,QWORD PTR [rsp+0x10]
  410ee7:	mov    QWORD PTR [rbx+0xb0],rax
  410eee:	mov    eax,r14d
  410ef1:	add    rsp,0x18
  410ef5:	pop    rbx
  410ef6:	pop    r12
  410ef8:	pop    r13
  410efa:	pop    r14
  410efc:	pop    r15
  410efe:	pop    rbp
  410eff:	ret    
  410f00:	mov    rdi,QWORD PTR [rbx+0xa8]
  410f07:	test   rdi,rdi
  410f0a:	jne    410f42 <__ctype_b_loc@plt+0xec72>
  410f0c:	mov    BYTE PTR [rbx+0xa],0x4
  410f10:	mov    rax,QWORD PTR [rbx+0x20]
  410f14:	cmp    QWORD PTR [rax+0x98],0x0
  410f1c:	je     410f38 <__ctype_b_loc@plt+0xec68>
  410f1e:	mov    esi,0x4
  410f23:	mov    rdi,rbx
  410f26:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  410f2b:	mov    rax,QWORD PTR [rbx+0x20]
  410f2f:	mov    rdi,rbx
  410f32:	call   QWORD PTR [rax+0x98]
  410f38:	mov    edi,0x1
  410f3d:	call   402280 <exit@plt>
  410f42:	mov    DWORD PTR [rdi+0xd0],0x4
  410f4c:	add    rdi,0x8
  410f50:	mov    esi,0x1
  410f55:	call   402230 <longjmp@plt>
  410f5a:	nop    WORD PTR [rax+rax*1+0x0]
  410f60:	push   rbp
  410f61:	push   r15
  410f63:	push   r14
  410f65:	push   r13
  410f67:	push   r12
  410f69:	push   rbx
  410f6a:	sub    rsp,0x2c8
  410f71:	mov    rbx,rsi
  410f74:	mov    r15,rdi
  410f77:	mov    rax,QWORD PTR [rdi+0x20]
  410f7b:	mov    rcx,QWORD PTR [rax+0x78]
  410f7f:	cmp    rcx,QWORD PTR [rax+0x70]
  410f83:	jb     410f8d <__ctype_b_loc@plt+0xecbd>
  410f85:	mov    rdi,r15
  410f88:	call   408070 <__ctype_b_loc@plt+0x5da0>
  410f8d:	mov    r14,QWORD PTR [rbx]
  410f90:	mov    rbp,QWORD PTR [rbx+0x20]
  410f94:	lea    rax,[rbx+0x8]
  410f98:	mov    QWORD PTR [rsp+0x50],rax
  410f9d:	mov    rdi,rbp
  410fa0:	call   4020e0 <strlen@plt>
  410fa5:	mov    rdi,r15
  410fa8:	mov    rsi,rbp
  410fab:	mov    rdx,rax
  410fae:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  410fb3:	mov    BYTE PTR [rsp+0x60],0x2e
  410fb8:	mov    QWORD PTR [rsp+0x40],r15
  410fbd:	mov    DWORD PTR [rsp+0x28],0x11f
  410fc5:	mov    QWORD PTR [rsp+0x48],r14
  410fca:	mov    QWORD PTR [rsp+0x38],0x0
  410fd3:	movabs rcx,0x100000001
  410fdd:	mov    QWORD PTR [rsp+0xc],rcx
  410fe2:	mov    QWORD PTR [rsp+0x58],rax
  410fe7:	mov    rsi,QWORD PTR [rbx+0x8]
  410feb:	mov    r12,QWORD PTR [rbx+0x18]
  410fef:	mov    rbp,QWORD PTR [r15+0x20]
  410ff3:	mov    rdi,QWORD PTR [rbp+0x18]
  410ff7:	mov    ecx,0x20
  410ffc:	mov    rdx,r12
  410fff:	call   QWORD PTR [rbp+0x10]
  411002:	test   rax,rax
  411005:	je     41132e <__ctype_b_loc@plt+0xf05e>
  41100b:	mov    ecx,0x20
  411010:	sub    rcx,r12
  411013:	add    QWORD PTR [rbp+0x78],rcx
  411017:	mov    QWORD PTR [rbx+0x8],rax
  41101b:	mov    QWORD PTR [rbx+0x18],0x20
  411023:	mov    rax,QWORD PTR [r14]
  411026:	lea    rcx,[rax-0x1]
  41102a:	mov    QWORD PTR [r14],rcx
  41102d:	test   rax,rax
  411030:	je     41103c <__ctype_b_loc@plt+0xed6c>
  411032:	mov    rax,QWORD PTR [r14+0x8]
  411036:	lea    rcx,[rax+0x1]
  41103a:	jmp    41106f <__ctype_b_loc@plt+0xed9f>
  41103c:	mov    rsi,QWORD PTR [r14+0x18]
  411040:	mov    rdi,QWORD PTR [r14+0x20]
  411044:	lea    rdx,[rsp+0x70]
  411049:	call   QWORD PTR [r14+0x10]
  41104d:	mov    ecx,0xffffffff
  411052:	test   rax,rax
  411055:	je     411076 <__ctype_b_loc@plt+0xeda6>
  411057:	mov    rdx,QWORD PTR [rsp+0x70]
  41105c:	test   rdx,rdx
  41105f:	je     411076 <__ctype_b_loc@plt+0xeda6>
  411061:	add    rdx,0xffffffffffffffff
  411065:	mov    QWORD PTR [r14],rdx
  411068:	mov    rcx,rax
  41106b:	add    rcx,0x1
  41106f:	mov    QWORD PTR [r14+0x8],rcx
  411073:	movzx  ecx,BYTE PTR [rax]
  411076:	mov    DWORD PTR [rsp+0x8],ecx
  41107a:	lea    r14,[rsp+0x8]
  41107f:	lea    rsi,[rsp+0x70]
  411084:	mov    rdi,r14
  411087:	call   411390 <__ctype_b_loc@plt+0xf0c0>
  41108c:	mov    rax,QWORD PTR [rsp+0x70]
  411091:	mov    BYTE PTR [rax+0x72],0x2
  411095:	mov    eax,DWORD PTR [rsp+0xc]
  411099:	mov    ecx,DWORD PTR [rsp+0x28]
  41109d:	mov    DWORD PTR [rsp+0x10],eax
  4110a1:	cmp    ecx,0x11f
  4110a7:	jne    4110be <__ctype_b_loc@plt+0xedee>
  4110a9:	lea    rsi,[rsp+0x20]
  4110ae:	lea    rdi,[rsp+0x8]
  4110b3:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  4110b8:	mov    DWORD PTR [rsp+0x18],eax
  4110bc:	jmp    4110d2 <__ctype_b_loc@plt+0xee02>
  4110be:	vmovups xmm0,XMMWORD PTR [r14+0x20]
  4110c4:	vmovups XMMWORD PTR [rsp+0x18],xmm0
  4110ca:	mov    DWORD PTR [rsp+0x28],0x11f
  4110d2:	mov    rax,QWORD PTR [rsp+0x40]
  4110d7:	mov    ecx,DWORD PTR [rax+0x60]
  4110da:	add    ecx,0x1
  4110dd:	mov    WORD PTR [rax+0x60],cx
  4110e1:	movzx  eax,cx
  4110e4:	cmp    eax,0xc9
  4110e9:	jb     4110fe <__ctype_b_loc@plt+0xee2e>
  4110eb:	lea    rsi,[rip+0x1a1c5]        # 42b2b7 <__ctype_b_loc@plt+0x28fe7>
  4110f2:	lea    rdi,[rsp+0x8]
  4110f7:	xor    edx,edx
  4110f9:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4110fe:	lea    r12,[rsp+0x20]
  411103:	lea    rbx,[rsp+0x8]
  411108:	mov    r13d,0x8010007
  41110e:	xchg   ax,ax
  411110:	mov    eax,DWORD PTR [rsp+0x18]
  411114:	lea    ecx,[rax-0x104]
  41111a:	cmp    ecx,0x1b
  41111d:	ja     411125 <__ctype_b_loc@plt+0xee55>
  41111f:	bt     r13d,ecx
  411123:	jb     411189 <__ctype_b_loc@plt+0xeeb9>
  411125:	mov    rdi,rbx
  411128:	call   414750 <__ctype_b_loc@plt+0x12480>
  41112d:	mov    ebp,eax
  41112f:	cmp    DWORD PTR [rsp+0x18],0x3b
  411134:	jne    411175 <__ctype_b_loc@plt+0xeea5>
  411136:	mov    eax,DWORD PTR [rsp+0xc]
  41113a:	mov    ecx,DWORD PTR [rsp+0x28]
  41113e:	mov    DWORD PTR [rsp+0x10],eax
  411142:	cmp    ecx,0x11f
  411148:	jne    411160 <__ctype_b_loc@plt+0xee90>
  41114a:	mov    rdi,rbx
  41114d:	mov    rsi,r12
  411150:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  411155:	mov    DWORD PTR [rsp+0x18],eax
  411159:	jmp    411175 <__ctype_b_loc@plt+0xeea5>
  41115b:	nop    DWORD PTR [rax+rax*1+0x0]
  411160:	vmovups xmm0,XMMWORD PTR [r14+0x20]
  411166:	vmovups XMMWORD PTR [r12-0x8],xmm0
  41116d:	mov    DWORD PTR [rsp+0x28],0x11f
  411175:	mov    rax,QWORD PTR [rsp+0x38]
  41117a:	movzx  ecx,BYTE PTR [rax+0x4a]
  41117e:	mov    DWORD PTR [rax+0x3c],ecx
  411181:	test   ebp,ebp
  411183:	je     411110 <__ctype_b_loc@plt+0xee40>
  411185:	mov    eax,DWORD PTR [rsp+0x18]
  411189:	mov    rdi,QWORD PTR [rsp+0x40]
  41118e:	add    WORD PTR [rdi+0x60],0xffff
  411193:	cmp    eax,0x11f
  411198:	je     4111c0 <__ctype_b_loc@plt+0xeef0>
  41119a:	lea    rsi,[rip+0x1a2f4]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  4111a1:	lea    rdx,[rip+0x19ebc]        # 42b064 <__ctype_b_loc@plt+0x28d94>
  4111a8:	xor    eax,eax
  4111aa:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  4111af:	mov    edx,DWORD PTR [rsp+0x18]
  4111b3:	lea    rdi,[rsp+0x8]
  4111b8:	mov    rsi,rax
  4111bb:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4111c0:	lea    rdi,[rsp+0x8]
  4111c5:	call   411550 <__ctype_b_loc@plt+0xf280>
  4111ca:	mov    r13,QWORD PTR [rsp+0x70]
  4111cf:	mov    al,BYTE PTR [r13+0x70]
  4111d3:	mov    BYTE PTR [rsp+0x7],al
  4111d7:	movzx  r12d,al
  4111db:	mov    rbp,QWORD PTR [r15+0x20]
  4111df:	mov    rax,QWORD PTR [r15+0x78]
  4111e3:	mov    QWORD PTR [rsp+0x68],rax
  4111e8:	lea    rbx,[r12*8+0x28]
  4111f0:	mov    rdi,QWORD PTR [rbp+0x18]
  4111f4:	xor    esi,esi
  4111f6:	xor    edx,edx
  4111f8:	mov    rcx,rbx
  4111fb:	call   QWORD PTR [rbp+0x10]
  4111fe:	test   rax,rax
  411201:	je     41132e <__ctype_b_loc@plt+0xf05e>
  411207:	mov    r14,rax
  41120a:	add    QWORD PTR [rbp+0x78],rbx
  41120e:	mov    rax,QWORD PTR [r15+0x20]
  411212:	mov    rcx,QWORD PTR [rax+0x28]
  411216:	mov    QWORD PTR [r14],rcx
  411219:	mov    QWORD PTR [rax+0x28],r14
  41121d:	mov    al,BYTE PTR [rax+0x20]
  411220:	and    al,0x3
  411222:	mov    BYTE PTR [r14+0x9],al
  411226:	mov    BYTE PTR [r14+0x8],0x6
  41122b:	mov    BYTE PTR [r14+0xa],0x0
  411230:	mov    rax,QWORD PTR [rsp+0x68]
  411235:	mov    QWORD PTR [r14+0x18],rax
  411239:	mov    al,BYTE PTR [rsp+0x7]
  41123d:	mov    BYTE PTR [r14+0xb],al
  411241:	test   al,al
  411243:	je     41126d <__ctype_b_loc@plt+0xef9d>
  411245:	lea    rax,[r12*8+0x20]
  41124d:	lea    rdx,[r12*8+0x0]
  411255:	add    r12d,0xffffffff
  411259:	shl    r12,0x3
  41125d:	sub    rax,r12
  411260:	mov    rdi,r14
  411263:	add    rdi,rax
  411266:	xor    esi,esi
  411268:	call   402100 <memset@plt>
  41126d:	mov    QWORD PTR [r14+0x20],r13
  411271:	cmp    BYTE PTR [r13+0x70],0x0
  411276:	je     4112e4 <__ctype_b_loc@plt+0xf014>
  411278:	xor    ebp,ebp
  41127a:	nop    WORD PTR [rax+rax*1+0x0]
  411280:	mov    rbx,QWORD PTR [r15+0x20]
  411284:	mov    rdi,QWORD PTR [rbx+0x18]
  411288:	xor    esi,esi
  41128a:	xor    edx,edx
  41128c:	mov    ecx,0x28
  411291:	call   QWORD PTR [rbx+0x10]
  411294:	test   rax,rax
  411297:	je     41132e <__ctype_b_loc@plt+0xf05e>
  41129d:	add    QWORD PTR [rbx+0x78],0x28
  4112a2:	mov    rcx,QWORD PTR [r15+0x20]
  4112a6:	mov    rdx,QWORD PTR [rcx+0x28]
  4112aa:	mov    QWORD PTR [rax],rdx
  4112ad:	mov    QWORD PTR [rcx+0x28],rax
  4112b1:	movzx  ecx,BYTE PTR [rcx+0x20]
  4112b5:	and    cl,0x3
  4112b8:	mov    BYTE PTR [rax+0x9],cl
  4112bb:	mov    BYTE PTR [rax+0x8],0xa
  4112bf:	mov    rcx,rax
  4112c2:	add    rcx,0x18
  4112c6:	mov    QWORD PTR [rax+0x10],rcx
  4112ca:	mov    DWORD PTR [rax+0x20],0x0
  4112d1:	mov    QWORD PTR [r14+rbp*8+0x28],rax
  4112d6:	add    rbp,0x1
  4112da:	movzx  eax,BYTE PTR [r13+0x70]
  4112df:	cmp    rbp,rax
  4112e2:	jb     411280 <__ctype_b_loc@plt+0xefb0>
  4112e4:	mov    rax,QWORD PTR [r15+0x10]
  4112e8:	mov    QWORD PTR [rax],r14
  4112eb:	mov    DWORD PTR [rax+0x8],0x6
  4112f2:	mov    rax,QWORD PTR [r15+0x38]
  4112f6:	sub    rax,QWORD PTR [r15+0x10]
  4112fa:	cmp    rax,0x10
  4112fe:	jg     411317 <__ctype_b_loc@plt+0xf047>
  411300:	mov    esi,DWORD PTR [r15+0x58]
  411304:	test   esi,esi
  411306:	jle    41130c <__ctype_b_loc@plt+0xf03c>
  411308:	add    esi,esi
  41130a:	jmp    41130f <__ctype_b_loc@plt+0xf03f>
  41130c:	add    esi,0x1
  41130f:	mov    rdi,r15
  411312:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  411317:	add    QWORD PTR [r15+0x10],0x10
  41131c:	add    rsp,0x2c8
  411323:	pop    rbx
  411324:	pop    r12
  411326:	pop    r13
  411328:	pop    r14
  41132a:	pop    r15
  41132c:	pop    rbp
  41132d:	ret    
  41132e:	mov    rdi,QWORD PTR [r15+0xa8]
  411335:	test   rdi,rdi
  411338:	jne    411371 <__ctype_b_loc@plt+0xf0a1>
  41133a:	mov    BYTE PTR [r15+0xa],0x4
  41133f:	mov    rax,QWORD PTR [r15+0x20]
  411343:	cmp    QWORD PTR [rax+0x98],0x0
  41134b:	je     411367 <__ctype_b_loc@plt+0xf097>
  41134d:	mov    esi,0x4
  411352:	mov    rdi,r15
  411355:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  41135a:	mov    rax,QWORD PTR [r15+0x20]
  41135e:	mov    rdi,r15
  411361:	call   QWORD PTR [rax+0x98]
  411367:	mov    edi,0x1
  41136c:	call   402280 <exit@plt>
  411371:	mov    DWORD PTR [rdi+0xd0],0x4
  41137b:	add    rdi,0x8
  41137f:	mov    esi,0x1
  411384:	call   402230 <longjmp@plt>
  411389:	nop    DWORD PTR [rax+0x0]
  411390:	push   r15
  411392:	push   r14
  411394:	push   r13
  411396:	push   r12
  411398:	push   rbx
  411399:	mov    rbx,rsi
  41139c:	mov    r12,rdi
  41139f:	mov    r14,QWORD PTR [rdi+0x38]
  4113a3:	mov    r13,QWORD PTR [r14+0x20]
  4113a7:	mov    rdi,QWORD PTR [r13+0x18]
  4113ab:	xor    esi,esi
  4113ad:	xor    edx,edx
  4113af:	mov    ecx,0x78
  4113b4:	call   QWORD PTR [r13+0x10]
  4113b8:	test   rax,rax
  4113bb:	je     4114e9 <__ctype_b_loc@plt+0xf219>
  4113c1:	mov    r15,rax
  4113c4:	add    QWORD PTR [r13+0x78],0x78
  4113c9:	mov    rax,QWORD PTR [r14+0x20]
  4113cd:	mov    rcx,QWORD PTR [rax+0x28]
  4113d1:	mov    QWORD PTR [r15],rcx
  4113d4:	mov    QWORD PTR [rax+0x28],r15
  4113d8:	mov    al,BYTE PTR [rax+0x20]
  4113db:	and    al,0x3
  4113dd:	mov    BYTE PTR [r15+0x9],al
  4113e1:	mov    BYTE PTR [r15+0x8],0x9
  4113e6:	vxorps xmm0,xmm0,xmm0
  4113ea:	vmovups YMMWORD PTR [r15+0x48],ymm0
  4113f0:	vmovups YMMWORD PTR [r15+0x30],ymm0
  4113f6:	vmovups YMMWORD PTR [r15+0x10],ymm0
  4113fc:	mov    DWORD PTR [r15+0x70],0x0
  411404:	mov    QWORD PTR [rbx],r15
  411407:	mov    rax,QWORD PTR [r12+0x30]
  41140c:	mov    QWORD PTR [rbx+0x10],rax
  411410:	mov    QWORD PTR [rbx+0x18],r12
  411414:	mov    QWORD PTR [rbx+0x20],r14
  411418:	mov    QWORD PTR [r12+0x30],rbx
  41141d:	movabs rax,0xffffffff00000000
  411427:	mov    QWORD PTR [rbx+0x30],rax
  41142b:	mov    DWORD PTR [rbx+0x38],0xffffffff
  411432:	mov    QWORD PTR [rbx+0x28],0x0
  41143a:	mov    QWORD PTR [rbx+0x43],0x0
  411442:	mov    QWORD PTR [rbx+0x3c],0x0
  41144a:	mov    rax,QWORD PTR [r12+0x50]
  41144f:	mov    QWORD PTR [r15+0x40],rax
  411453:	mov    BYTE PTR [r15+0x73],0x2
  411458:	xor    esi,esi
  41145a:	xor    edx,edx
  41145c:	mov    rdi,r14
  41145f:	vzeroupper 
  411462:	call   403720 <__ctype_b_loc@plt+0x1450>
  411467:	mov    QWORD PTR [rbx+0x8],rax
  41146b:	mov    rcx,QWORD PTR [r14+0x10]
  41146f:	mov    QWORD PTR [rcx],rax
  411472:	mov    DWORD PTR [rcx+0x8],0x5
  411479:	mov    rax,QWORD PTR [r14+0x38]
  41147d:	sub    rax,QWORD PTR [r14+0x10]
  411481:	cmp    rax,0x10
  411485:	jg     41149e <__ctype_b_loc@plt+0xf1ce>
  411487:	mov    esi,DWORD PTR [r14+0x58]
  41148b:	test   esi,esi
  41148d:	jle    411493 <__ctype_b_loc@plt+0xf1c3>
  41148f:	add    esi,esi
  411491:	jmp    411496 <__ctype_b_loc@plt+0xf1c6>
  411493:	add    esi,0x1
  411496:	mov    rdi,r14
  411499:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  41149e:	mov    rax,QWORD PTR [r14+0x10]
  4114a2:	lea    rcx,[rax+0x10]
  4114a6:	mov    QWORD PTR [r14+0x10],rcx
  4114aa:	mov    QWORD PTR [rax+0x10],r15
  4114ae:	mov    DWORD PTR [rax+0x18],0x9
  4114b5:	mov    rax,QWORD PTR [r14+0x38]
  4114b9:	sub    rax,QWORD PTR [r14+0x10]
  4114bd:	cmp    rax,0x10
  4114c1:	jg     4114da <__ctype_b_loc@plt+0xf20a>
  4114c3:	mov    esi,DWORD PTR [r14+0x58]
  4114c7:	test   esi,esi
  4114c9:	jle    4114cf <__ctype_b_loc@plt+0xf1ff>
  4114cb:	add    esi,esi
  4114cd:	jmp    4114d2 <__ctype_b_loc@plt+0xf202>
  4114cf:	add    esi,0x1
  4114d2:	mov    rdi,r14
  4114d5:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  4114da:	add    QWORD PTR [r14+0x10],0x10
  4114df:	pop    rbx
  4114e0:	pop    r12
  4114e2:	pop    r13
  4114e4:	pop    r14
  4114e6:	pop    r15
  4114e8:	ret    
  4114e9:	mov    rdi,QWORD PTR [r14+0xa8]
  4114f0:	test   rdi,rdi
  4114f3:	jne    41152c <__ctype_b_loc@plt+0xf25c>
  4114f5:	mov    BYTE PTR [r14+0xa],0x4
  4114fa:	mov    rax,QWORD PTR [r14+0x20]
  4114fe:	cmp    QWORD PTR [rax+0x98],0x0
  411506:	je     411522 <__ctype_b_loc@plt+0xf252>
  411508:	mov    esi,0x4
  41150d:	mov    rdi,r14
  411510:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  411515:	mov    rax,QWORD PTR [r14+0x20]
  411519:	mov    rdi,r14
  41151c:	call   QWORD PTR [rax+0x98]
  411522:	mov    edi,0x1
  411527:	call   402280 <exit@plt>
  41152c:	mov    DWORD PTR [rdi+0xd0],0x4
  411536:	add    rdi,0x8
  41153a:	mov    esi,0x1
  41153f:	call   402230 <longjmp@plt>
  411544:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41154e:	xchg   ax,ax
  411550:	push   rbp
  411551:	push   r15
  411553:	push   r14
  411555:	push   r13
  411557:	push   r12
  411559:	push   rbx
  41155a:	sub    rsp,0x18
  41155e:	mov    r15,QWORD PTR [rdi+0x30]
  411562:	mov    QWORD PTR [rsp+0x10],rdi
  411567:	mov    rax,QWORD PTR [rdi+0x38]
  41156b:	mov    QWORD PTR [rsp],rax
  41156f:	mov    r14,QWORD PTR [r15]
  411572:	movzx  eax,BYTE PTR [r15+0x4a]
  411577:	test   rax,rax
  41157a:	je     411639 <__ctype_b_loc@plt+0xf369>
  411580:	mov    ecx,DWORD PTR [r15+0x30]
  411584:	mov    rdx,QWORD PTR [r14+0x30]
  411588:	mov    esi,eax
  41158a:	add    sil,0xff
  41158e:	mov    ebx,eax
  411590:	and    bl,0x3
  411593:	je     4115c3 <__ctype_b_loc@plt+0xf2f3>
  411595:	add    rax,0xff
  41159b:	neg    bl
  41159d:	nop    DWORD PTR [rax]
  4115a0:	movzx  edi,al
  4115a3:	movzx  edi,WORD PTR [r15+rdi*2+0xc4]
  4115ac:	shl    rdi,0x4
  4115b0:	mov    DWORD PTR [rdx+rdi*1+0xc],ecx
  4115b4:	add    rax,0xffffffffffffffff
  4115b8:	add    bl,0x1
  4115bb:	jne    4115a0 <__ctype_b_loc@plt+0xf2d0>
  4115bd:	add    rax,0xffffffffffffff01
  4115c3:	cmp    sil,0x3
  4115c7:	jb     411634 <__ctype_b_loc@plt+0xf364>
  4115c9:	add    rax,0xfd
  4115cf:	nop
  4115d0:	lea    esi,[rax+0x2]
  4115d3:	movzx  esi,sil
  4115d7:	movzx  esi,WORD PTR [r15+rsi*2+0xc4]
  4115e0:	shl    rsi,0x4
  4115e4:	mov    DWORD PTR [rdx+rsi*1+0xc],ecx
  4115e8:	lea    esi,[rax+0x1]
  4115eb:	movzx  esi,sil
  4115ef:	movzx  esi,WORD PTR [r15+rsi*2+0xc4]
  4115f8:	shl    rsi,0x4
  4115fc:	mov    DWORD PTR [rdx+rsi*1+0xc],ecx
  411600:	movzx  esi,al
  411603:	movzx  esi,WORD PTR [r15+rsi*2+0xc4]
  41160c:	shl    rsi,0x4
  411610:	mov    DWORD PTR [rdx+rsi*1+0xc],ecx
  411614:	lea    esi,[rax-0x1]
  411617:	movzx  esi,sil
  41161b:	movzx  esi,WORD PTR [r15+rsi*2+0xc4]
  411624:	shl    rsi,0x4
  411628:	mov    DWORD PTR [rdx+rsi*1+0xc],ecx
  41162c:	add    rax,0xfffffffffffffffc
  411630:	cmp    al,0xfd
  411632:	jne    4115d0 <__ctype_b_loc@plt+0xf300>
  411634:	mov    BYTE PTR [r15+0x4a],0x0
  411639:	mov    rax,QWORD PTR [r15+0x18]
  41163d:	mov    edx,DWORD PTR [rax+0x8]
  411640:	mov    esi,0x80001e
  411645:	mov    rdi,r15
  411648:	call   419630 <__ctype_b_loc@plt+0x17360>
  41164d:	movsxd r13,DWORD PTR [r15+0x30]
  411651:	cmp    r13,0xffffffffffffffff
  411655:	jl     4116a5 <__ctype_b_loc@plt+0xf3d5>
  411657:	mov    DWORD PTR [rsp+0xc],r13d
  41165c:	mov    rsi,QWORD PTR [r14+0x18]
  411660:	movsxd rbp,DWORD PTR [r14+0x50]
  411664:	shl    rbp,0x2
  411668:	shl    r13,0x2
  41166c:	mov    rax,QWORD PTR [rsp]
  411670:	mov    rbx,QWORD PTR [rax+0x20]
  411674:	mov    rdi,QWORD PTR [rbx+0x18]
  411678:	mov    rdx,rbp
  41167b:	mov    rcx,r13
  41167e:	call   QWORD PTR [rbx+0x10]
  411681:	mov    r12,rax
  411684:	cmp    DWORD PTR [rsp+0xc],0x0
  411689:	je     411694 <__ctype_b_loc@plt+0xf3c4>
  41168b:	test   r12,r12
  41168e:	je     411955 <__ctype_b_loc@plt+0xf685>
  411694:	lea    rcx,[r14+0x18]
  411698:	lea    rax,[r14+0x50]
  41169c:	sub    r13,rbp
  41169f:	add    QWORD PTR [rbx+0x78],r13
  4116a3:	jmp    4116c2 <__ctype_b_loc@plt+0xf3f2>
  4116a5:	lea    rsi,[rip+0x1970d]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  4116ac:	xor    r12d,r12d
  4116af:	xor    eax,eax
  4116b1:	mov    rdi,QWORD PTR [rsp]
  4116b5:	call   404080 <__ctype_b_loc@plt+0x1db0>
  4116ba:	lea    rcx,[r14+0x18]
  4116be:	lea    rax,[r14+0x50]
  4116c2:	mov    QWORD PTR [rcx],r12
  4116c5:	movsxd r12,DWORD PTR [r15+0x30]
  4116c9:	mov    DWORD PTR [rax],r12d
  4116cc:	cmp    r12,0xffffffffffffffff
  4116d0:	jl     411720 <__ctype_b_loc@plt+0xf450>
  4116d2:	mov    DWORD PTR [rsp+0xc],r12d
  4116d7:	mov    rsi,QWORD PTR [r14+0x28]
  4116db:	movsxd rbp,DWORD PTR [r14+0x54]
  4116df:	shl    rbp,0x2
  4116e3:	shl    r12,0x2
  4116e7:	mov    rax,QWORD PTR [rsp]
  4116eb:	mov    rbx,QWORD PTR [rax+0x20]
  4116ef:	mov    rdi,QWORD PTR [rbx+0x18]
  4116f3:	mov    rdx,rbp
  4116f6:	mov    rcx,r12
  4116f9:	call   QWORD PTR [rbx+0x10]
  4116fc:	mov    r13,rax
  4116ff:	cmp    DWORD PTR [rsp+0xc],0x0
  411704:	je     41170f <__ctype_b_loc@plt+0xf43f>
  411706:	test   r13,r13
  411709:	je     411955 <__ctype_b_loc@plt+0xf685>
  41170f:	lea    rcx,[r14+0x28]
  411713:	lea    rax,[r14+0x54]
  411717:	sub    r12,rbp
  41171a:	add    QWORD PTR [rbx+0x78],r12
  41171e:	jmp    41173d <__ctype_b_loc@plt+0xf46d>
  411720:	lea    rsi,[rip+0x19692]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  411727:	xor    r13d,r13d
  41172a:	xor    eax,eax
  41172c:	mov    rdi,QWORD PTR [rsp]
  411730:	call   404080 <__ctype_b_loc@plt+0x1db0>
  411735:	lea    rcx,[r14+0x28]
  411739:	lea    rax,[r14+0x54]
  41173d:	mov    QWORD PTR [rcx],r13
  411740:	mov    ecx,DWORD PTR [r15+0x30]
  411744:	mov    DWORD PTR [rax],ecx
  411746:	movsxd r13,DWORD PTR [r15+0x40]
  41174a:	cmp    r13,0xffffffffffffffff
  41174e:	jl     41179e <__ctype_b_loc@plt+0xf4ce>
  411750:	mov    DWORD PTR [rsp+0xc],r13d
  411755:	mov    rsi,QWORD PTR [r14+0x10]
  411759:	movsxd rbp,DWORD PTR [r14+0x4c]
  41175d:	shl    rbp,0x4
  411761:	shl    r13,0x4
  411765:	mov    rax,QWORD PTR [rsp]
  411769:	mov    rbx,QWORD PTR [rax+0x20]
  41176d:	mov    rdi,QWORD PTR [rbx+0x18]
  411771:	mov    rdx,rbp
  411774:	mov    rcx,r13
  411777:	call   QWORD PTR [rbx+0x10]
  41177a:	mov    r12,rax
  41177d:	cmp    DWORD PTR [rsp+0xc],0x0
  411782:	je     41178d <__ctype_b_loc@plt+0xf4bd>
  411784:	test   r12,r12
  411787:	je     411955 <__ctype_b_loc@plt+0xf685>
  41178d:	lea    rcx,[r14+0x10]
  411791:	lea    rax,[r14+0x4c]
  411795:	sub    r13,rbp
  411798:	add    QWORD PTR [rbx+0x78],r13
  41179c:	jmp    4117bb <__ctype_b_loc@plt+0xf4eb>
  41179e:	lea    rsi,[rip+0x19614]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  4117a5:	xor    r12d,r12d
  4117a8:	xor    eax,eax
  4117aa:	mov    rdi,QWORD PTR [rsp]
  4117ae:	call   404080 <__ctype_b_loc@plt+0x1db0>
  4117b3:	lea    rcx,[r14+0x10]
  4117b7:	lea    rax,[r14+0x4c]
  4117bb:	mov    QWORD PTR [rcx],r12
  4117be:	mov    ecx,DWORD PTR [r15+0x40]
  4117c2:	mov    DWORD PTR [rax],ecx
  4117c4:	movsxd r13,DWORD PTR [r15+0x44]
  4117c8:	cmp    r13,0xffffffffffffffff
  4117cc:	jl     41181c <__ctype_b_loc@plt+0xf54c>
  4117ce:	mov    DWORD PTR [rsp+0xc],r13d
  4117d3:	mov    rsi,QWORD PTR [r14+0x20]
  4117d7:	movsxd rbp,DWORD PTR [r14+0x58]
  4117db:	shl    rbp,0x3
  4117df:	shl    r13,0x3
  4117e3:	mov    rax,QWORD PTR [rsp]
  4117e7:	mov    rbx,QWORD PTR [rax+0x20]
  4117eb:	mov    rdi,QWORD PTR [rbx+0x18]
  4117ef:	mov    rdx,rbp
  4117f2:	mov    rcx,r13
  4117f5:	call   QWORD PTR [rbx+0x10]
  4117f8:	mov    r12,rax
  4117fb:	cmp    DWORD PTR [rsp+0xc],0x0
  411800:	je     41180b <__ctype_b_loc@plt+0xf53b>
  411802:	test   r12,r12
  411805:	je     411955 <__ctype_b_loc@plt+0xf685>
  41180b:	lea    rcx,[r14+0x20]
  41180f:	lea    rax,[r14+0x58]
  411813:	sub    r13,rbp
  411816:	add    QWORD PTR [rbx+0x78],r13
  41181a:	jmp    411839 <__ctype_b_loc@plt+0xf569>
  41181c:	lea    rsi,[rip+0x19596]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  411823:	xor    r12d,r12d
  411826:	xor    eax,eax
  411828:	mov    rdi,QWORD PTR [rsp]
  41182c:	call   404080 <__ctype_b_loc@plt+0x1db0>
  411831:	lea    rcx,[r14+0x20]
  411835:	lea    rax,[r14+0x58]
  411839:	mov    QWORD PTR [rcx],r12
  41183c:	mov    ecx,DWORD PTR [r15+0x44]
  411840:	mov    DWORD PTR [rax],ecx
  411842:	movsx  r12,WORD PTR [r15+0x48]
  411847:	lea    rax,[r12+0x1]
  41184c:	shr    rax,0x3c
  411850:	jne    4118a2 <__ctype_b_loc@plt+0xf5d2>
  411852:	mov    WORD PTR [rsp+0xc],r12w
  411858:	mov    rsi,QWORD PTR [r14+0x30]
  41185c:	movsxd rbp,DWORD PTR [r14+0x5c]
  411860:	shl    rbp,0x4
  411864:	shl    r12,0x4
  411868:	mov    rax,QWORD PTR [rsp]
  41186c:	mov    rbx,QWORD PTR [rax+0x20]
  411870:	mov    rdi,QWORD PTR [rbx+0x18]
  411874:	mov    rdx,rbp
  411877:	mov    rcx,r12
  41187a:	call   QWORD PTR [rbx+0x10]
  41187d:	mov    r13,rax
  411880:	cmp    WORD PTR [rsp+0xc],0x0
  411886:	je     411891 <__ctype_b_loc@plt+0xf5c1>
  411888:	test   r13,r13
  41188b:	je     411955 <__ctype_b_loc@plt+0xf685>
  411891:	mov    rax,QWORD PTR [rsp]
  411895:	lea    rax,[rax+0x20]
  411899:	sub    r12,rbp
  41189c:	add    QWORD PTR [rbx+0x78],r12
  4118a0:	jmp    4118be <__ctype_b_loc@plt+0xf5ee>
  4118a2:	lea    rsi,[rip+0x19510]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  4118a9:	xor    r13d,r13d
  4118ac:	xor    eax,eax
  4118ae:	mov    rbx,QWORD PTR [rsp]
  4118b2:	mov    rdi,rbx
  4118b5:	call   404080 <__ctype_b_loc@plt+0x1db0>
  4118ba:	lea    rax,[rbx+0x20]
  4118be:	mov    QWORD PTR [r14+0x30],r13
  4118c2:	movsx  ecx,WORD PTR [r15+0x48]
  4118c7:	mov    DWORD PTR [r14+0x5c],ecx
  4118cb:	movzx  r13d,BYTE PTR [r14+0x70]
  4118d0:	mov    rsi,QWORD PTR [r14+0x38]
  4118d4:	movsxd r12,DWORD PTR [r14+0x48]
  4118d8:	shl    r12,0x3
  4118dc:	lea    rbp,[r13*8+0x0]
  4118e4:	mov    rbx,QWORD PTR [rax]
  4118e7:	mov    rdi,QWORD PTR [rbx+0x18]
  4118eb:	mov    rdx,r12
  4118ee:	mov    rcx,rbp
  4118f1:	call   QWORD PTR [rbx+0x10]
  4118f4:	test   r13,r13
  4118f7:	je     4118fe <__ctype_b_loc@plt+0xf62e>
  4118f9:	test   rax,rax
  4118fc:	je     411955 <__ctype_b_loc@plt+0xf685>
  4118fe:	sub    rbp,r12
  411901:	add    QWORD PTR [rbx+0x78],rbp
  411905:	mov    QWORD PTR [r14+0x38],rax
  411909:	movzx  eax,BYTE PTR [r14+0x70]
  41190e:	mov    DWORD PTR [r14+0x48],eax
  411912:	mov    rax,QWORD PTR [r15+0x10]
  411916:	mov    rdi,QWORD PTR [rsp+0x10]
  41191b:	mov    QWORD PTR [rdi+0x30],rax
  41191f:	mov    eax,0xfffffee3
  411924:	add    eax,DWORD PTR [rdi+0x10]
  411927:	cmp    eax,0x1
  41192a:	ja     41193d <__ctype_b_loc@plt+0xf66d>
  41192c:	mov    rsi,QWORD PTR [rdi+0x18]
  411930:	mov    rdx,QWORD PTR [rsi+0x10]
  411934:	add    rsi,0x18
  411938:	call   414680 <__ctype_b_loc@plt+0x123b0>
  41193d:	mov    rax,QWORD PTR [rsp]
  411941:	add    QWORD PTR [rax+0x10],0xffffffffffffffe0
  411946:	add    rsp,0x18
  41194a:	pop    rbx
  41194b:	pop    r12
  41194d:	pop    r13
  41194f:	pop    r14
  411951:	pop    r15
  411953:	pop    rbp
  411954:	ret    
  411955:	mov    rax,QWORD PTR [rsp]
  411959:	mov    rdi,QWORD PTR [rax+0xa8]
  411960:	test   rdi,rdi
  411963:	jne    4119a3 <__ctype_b_loc@plt+0xf6d3>
  411965:	mov    rax,QWORD PTR [rsp]
  411969:	mov    BYTE PTR [rax+0xa],0x4
  41196d:	mov    rax,QWORD PTR [rax+0x20]
  411971:	cmp    QWORD PTR [rax+0x98],0x0
  411979:	je     411999 <__ctype_b_loc@plt+0xf6c9>
  41197b:	mov    esi,0x4
  411980:	mov    rbx,QWORD PTR [rsp]
  411984:	mov    rdi,rbx
  411987:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  41198c:	mov    rax,QWORD PTR [rbx+0x20]
  411990:	mov    rdi,rbx
  411993:	call   QWORD PTR [rax+0x98]
  411999:	mov    edi,0x1
  41199e:	call   402280 <exit@plt>
  4119a3:	mov    DWORD PTR [rdi+0xd0],0x4
  4119ad:	add    rdi,0x8
  4119b1:	mov    esi,0x1
  4119b6:	call   402230 <longjmp@plt>
  4119bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4119c0:	push   rbp
  4119c1:	push   r15
  4119c3:	push   r14
  4119c5:	push   r13
  4119c7:	push   r12
  4119c9:	push   rbx
  4119ca:	sub    rsp,0x38
  4119ce:	mov    QWORD PTR [rsp+0x28],rsi
  4119d3:	mov    r12,rdi
  4119d6:	mov    rax,QWORD PTR [rdi+0x48]
  4119da:	mov    QWORD PTR [rax+0x8],0x0
  4119e2:	lea    r14,[rdi+0x40]
  4119e6:	mov    rbp,rsp
  4119e9:	lea    r15,[rip+0x1894c]        # 42a33c <__ctype_b_loc@plt+0x2806c>
  4119f0:	mov    r13d,0x4801
  4119f6:	mov    QWORD PTR [rsp+0x20],rdi
  4119fb:	jmp    411a08 <__ctype_b_loc@plt+0xf738>
  4119fd:	nop    DWORD PTR [rax]
  411a00:	mov    rdi,r12
  411a03:	call   413090 <__ctype_b_loc@plt+0x10dc0>
  411a08:	mov    ebx,DWORD PTR [r12]
  411a0c:	lea    ecx,[rbx+0x1]
  411a0f:	cmp    ecx,0x5c
  411a12:	ja     411a41 <__ctype_b_loc@plt+0xf771>
  411a14:	mov    eax,0x11f
  411a19:	movsxd rcx,DWORD PTR [r15+rcx*4]
  411a1d:	add    rcx,r15
  411a20:	jmp    rcx
  411a22:	mov    rbx,QWORD PTR [r14]
  411a25:	mov    rax,QWORD PTR [rbx]
  411a28:	lea    rcx,[rax-0x1]
  411a2c:	mov    QWORD PTR [rbx],rcx
  411a2f:	test   rax,rax
  411a32:	je     411a9d <__ctype_b_loc@plt+0xf7cd>
  411a34:	mov    rax,QWORD PTR [rbx+0x8]
  411a38:	lea    rcx,[rax+0x1]
  411a3c:	jmp    411acc <__ctype_b_loc@plt+0xf7fc>
  411a41:	cmp    ebx,0x7e
  411a44:	je     411f80 <__ctype_b_loc@plt+0xfcb0>
  411a4a:	movsxd r13,ebx
  411a4d:	call   4022d0 <__ctype_b_loc@plt>
  411a52:	mov    r12,rax
  411a55:	mov    rax,QWORD PTR [rax]
  411a58:	movzx  eax,WORD PTR [rax+r13*2]
  411a5d:	test   eax,0x2000
  411a62:	je     411c33 <__ctype_b_loc@plt+0xf963>
  411a68:	mov    rbx,QWORD PTR [r14]
  411a6b:	mov    rax,QWORD PTR [rbx]
  411a6e:	lea    rcx,[rax-0x1]
  411a72:	mov    QWORD PTR [rbx],rcx
  411a75:	test   rax,rax
  411a78:	mov    r13d,0x4801
  411a7e:	je     411afc <__ctype_b_loc@plt+0xf82c>
  411a80:	mov    rax,QWORD PTR [rbx+0x8]
  411a84:	lea    rcx,[rax+0x1]
  411a88:	mov    QWORD PTR [rbx+0x8],rcx
  411a8c:	movzx  eax,BYTE PTR [rax]
  411a8f:	mov    r12,QWORD PTR [rsp+0x20]
  411a94:	mov    DWORD PTR [r12],eax
  411a98:	jmp    411a08 <__ctype_b_loc@plt+0xf738>
  411a9d:	mov    rsi,QWORD PTR [rbx+0x18]
  411aa1:	mov    rdi,QWORD PTR [rbx+0x20]
  411aa5:	mov    rdx,rbp
  411aa8:	call   QWORD PTR [rbx+0x10]
  411aab:	mov    ecx,0xffffffff
  411ab0:	test   rax,rax
  411ab3:	je     411ad3 <__ctype_b_loc@plt+0xf803>
  411ab5:	mov    rdx,QWORD PTR [rsp]
  411ab9:	test   rdx,rdx
  411abc:	je     411ad3 <__ctype_b_loc@plt+0xf803>
  411abe:	add    rdx,0xffffffffffffffff
  411ac2:	mov    QWORD PTR [rbx],rdx
  411ac5:	mov    rcx,rax
  411ac8:	add    rcx,0x1
  411acc:	mov    QWORD PTR [rbx+0x8],rcx
  411ad0:	movzx  ecx,BYTE PTR [rax]
  411ad3:	mov    DWORD PTR [r12],ecx
  411ad7:	cmp    ecx,0x2d
  411ada:	jne    411c88 <__ctype_b_loc@plt+0xf9b8>
  411ae0:	mov    rbx,QWORD PTR [r14]
  411ae3:	mov    rax,QWORD PTR [rbx]
  411ae6:	lea    rcx,[rax-0x1]
  411aea:	mov    QWORD PTR [rbx],rcx
  411aed:	test   rax,rax
  411af0:	je     411b40 <__ctype_b_loc@plt+0xf870>
  411af2:	mov    rax,QWORD PTR [rbx+0x8]
  411af6:	lea    rcx,[rax+0x1]
  411afa:	jmp    411b6f <__ctype_b_loc@plt+0xf89f>
  411afc:	mov    rsi,QWORD PTR [rbx+0x18]
  411b00:	mov    rdi,QWORD PTR [rbx+0x20]
  411b04:	mov    rdx,rbp
  411b07:	call   QWORD PTR [rbx+0x10]
  411b0a:	mov    ecx,0xffffffff
  411b0f:	test   rax,rax
  411b12:	mov    r12,QWORD PTR [rsp+0x20]
  411b17:	je     411b37 <__ctype_b_loc@plt+0xf867>
  411b19:	mov    rdx,QWORD PTR [rsp]
  411b1d:	test   rdx,rdx
  411b20:	je     411b37 <__ctype_b_loc@plt+0xf867>
  411b22:	add    rdx,0xffffffffffffffff
  411b26:	mov    QWORD PTR [rbx],rdx
  411b29:	mov    rcx,rax
  411b2c:	add    rcx,0x1
  411b30:	mov    QWORD PTR [rbx+0x8],rcx
  411b34:	movzx  ecx,BYTE PTR [rax]
  411b37:	mov    DWORD PTR [r12],ecx
  411b3b:	jmp    411a08 <__ctype_b_loc@plt+0xf738>
  411b40:	mov    rsi,QWORD PTR [rbx+0x18]
  411b44:	mov    rdi,QWORD PTR [rbx+0x20]
  411b48:	mov    rdx,rbp
  411b4b:	call   QWORD PTR [rbx+0x10]
  411b4e:	mov    ecx,0xffffffff
  411b53:	test   rax,rax
  411b56:	je     411b76 <__ctype_b_loc@plt+0xf8a6>
  411b58:	mov    rdx,QWORD PTR [rsp]
  411b5c:	test   rdx,rdx
  411b5f:	je     411b76 <__ctype_b_loc@plt+0xf8a6>
  411b61:	add    rdx,0xffffffffffffffff
  411b65:	mov    QWORD PTR [rbx],rdx
  411b68:	mov    rcx,rax
  411b6b:	add    rcx,0x1
  411b6f:	mov    QWORD PTR [rbx+0x8],rcx
  411b73:	movzx  ecx,BYTE PTR [rax]
  411b76:	mov    DWORD PTR [r12],ecx
  411b7a:	cmp    ecx,0x5b
  411b7d:	jne    411bd3 <__ctype_b_loc@plt+0xf903>
  411b7f:	mov    rdi,r12
  411b82:	call   413190 <__ctype_b_loc@plt+0x10ec0>
  411b87:	mov    rcx,QWORD PTR [r12+0x48]
  411b8c:	mov    QWORD PTR [rcx+0x8],0x0
  411b94:	test   eax,eax
  411b96:	js     411bb6 <__ctype_b_loc@plt+0xf8e6>
  411b98:	xor    esi,esi
  411b9a:	mov    rdi,r12
  411b9d:	mov    edx,eax
  411b9f:	call   4134c0 <__ctype_b_loc@plt+0x111f0>
  411ba4:	mov    rax,QWORD PTR [r12+0x48]
  411ba9:	mov    QWORD PTR [rax+0x8],0x0
  411bb1:	jmp    411a08 <__ctype_b_loc@plt+0xf738>
  411bb6:	mov    ecx,DWORD PTR [r12]
  411bba:	jmp    411bd3 <__ctype_b_loc@plt+0xf903>
  411bbc:	nop    DWORD PTR [rax+0x0]
  411bc0:	mov    rax,QWORD PTR [rbx+0x8]
  411bc4:	lea    rcx,[rax+0x1]
  411bc8:	mov    QWORD PTR [rbx+0x8],rcx
  411bcc:	movzx  ecx,BYTE PTR [rax]
  411bcf:	mov    DWORD PTR [r12],ecx
  411bd3:	add    ecx,0x1
  411bd6:	cmp    ecx,0xe
  411bd9:	ja     411be5 <__ctype_b_loc@plt+0xf915>
  411bdb:	bt     r13d,ecx
  411bdf:	jb     411a08 <__ctype_b_loc@plt+0xf738>
  411be5:	mov    rbx,QWORD PTR [r14]
  411be8:	mov    rax,QWORD PTR [rbx]
  411beb:	lea    rcx,[rax-0x1]
  411bef:	mov    QWORD PTR [rbx],rcx
  411bf2:	test   rax,rax
  411bf5:	jne    411bc0 <__ctype_b_loc@plt+0xf8f0>
  411bf7:	mov    rsi,QWORD PTR [rbx+0x18]
  411bfb:	mov    rdi,QWORD PTR [rbx+0x20]
  411bff:	mov    rdx,rbp
  411c02:	call   QWORD PTR [rbx+0x10]
  411c05:	mov    ecx,0xffffffff
  411c0a:	test   rax,rax
  411c0d:	je     411c2d <__ctype_b_loc@plt+0xf95d>
  411c0f:	mov    rdx,QWORD PTR [rsp]
  411c13:	test   rdx,rdx
  411c16:	je     411c2d <__ctype_b_loc@plt+0xf95d>
  411c18:	add    rdx,0xffffffffffffffff
  411c1c:	mov    QWORD PTR [rbx],rdx
  411c1f:	mov    rcx,rax
  411c22:	add    rcx,0x1
  411c26:	mov    QWORD PTR [rbx+0x8],rcx
  411c2a:	movzx  ecx,BYTE PTR [rax]
  411c2d:	mov    DWORD PTR [r12],ecx
  411c31:	jmp    411bd3 <__ctype_b_loc@plt+0xf903>
  411c33:	test   eax,0x800
  411c38:	jne    411d00 <__ctype_b_loc@plt+0xfa30>
  411c3e:	mov    r15,r14
  411c41:	mov    r14,rbx
  411c44:	cmp    r14d,0x5f
  411c48:	je     411df7 <__ctype_b_loc@plt+0xfb27>
  411c4e:	and    eax,0x400
  411c53:	jne    411df7 <__ctype_b_loc@plt+0xfb27>
  411c59:	mov    rbx,QWORD PTR [r15]
  411c5c:	mov    rax,QWORD PTR [rbx]
  411c5f:	lea    rcx,[rax-0x1]
  411c63:	mov    QWORD PTR [rbx],rcx
  411c66:	test   rax,rax
  411c69:	je     412c04 <__ctype_b_loc@plt+0x10934>
  411c6f:	mov    rax,QWORD PTR [rbx+0x8]
  411c73:	lea    rcx,[rax+0x1]
  411c77:	mov    QWORD PTR [rbx+0x8],rcx
  411c7b:	movzx  ecx,BYTE PTR [rax]
  411c7e:	mov    r15,QWORD PTR [rsp+0x20]
  411c83:	jmp    412c43 <__ctype_b_loc@plt+0x10973>
  411c88:	mov    eax,0x2d
  411c8d:	jmp    412f9c <__ctype_b_loc@plt+0x10ccc>
  411c92:	movabs rdx,0x7ffffffffffffffd
  411c9c:	mov    r13,QWORD PTR [r12+0x48]
  411ca1:	mov    rax,QWORD PTR [r13+0x8]
  411ca5:	mov    rbp,QWORD PTR [r13+0x10]
  411ca9:	lea    rcx,[rax+0x1]
  411cad:	cmp    rcx,rbp
  411cb0:	mov    QWORD PTR [rsp+0x8],rbx
  411cb5:	jbe    411d65 <__ctype_b_loc@plt+0xfa95>
  411cbb:	cmp    rbp,rdx
  411cbe:	jbe    411cd5 <__ctype_b_loc@plt+0xfa05>
  411cc0:	lea    rsi,[rip+0x195c3]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  411cc7:	xor    edx,edx
  411cc9:	mov    rdi,r12
  411ccc:	call   413af0 <__ctype_b_loc@plt+0x11820>
  411cd1:	mov    rbp,QWORD PTR [r13+0x10]
  411cd5:	mov    rbx,rbp
  411cd8:	add    rbx,rbp
  411cdb:	mov    rdi,QWORD PTR [r12+0x38]
  411ce0:	cmp    rbx,0xfffffffffffffffe
  411ce4:	jne    411fa3 <__ctype_b_loc@plt+0xfcd3>
  411cea:	lea    rsi,[rip+0x190c8]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  411cf1:	xor    r15d,r15d
  411cf4:	xor    eax,eax
  411cf6:	call   404080 <__ctype_b_loc@plt+0x1db0>
  411cfb:	jmp    411fdc <__ctype_b_loc@plt+0xfd0c>
  411d00:	mov    rdi,QWORD PTR [rsp+0x20]
  411d05:	mov    rsi,QWORD PTR [rsp+0x28]
  411d0a:	call   413d40 <__ctype_b_loc@plt+0x11a70>
  411d0f:	mov    eax,0x11c
  411d14:	jmp    412f9c <__ctype_b_loc@plt+0x10ccc>
  411d19:	mov    rbx,QWORD PTR [r14]
  411d1c:	mov    rax,QWORD PTR [rbx]
  411d1f:	lea    rcx,[rax-0x1]
  411d23:	mov    QWORD PTR [rbx],rcx
  411d26:	test   rax,rax
  411d29:	je     4128e4 <__ctype_b_loc@plt+0x10614>
  411d2f:	mov    rax,QWORD PTR [rbx+0x8]
  411d33:	lea    rcx,[rax+0x1]
  411d37:	jmp    412913 <__ctype_b_loc@plt+0x10643>
  411d3c:	mov    rdi,r12
  411d3f:	call   413190 <__ctype_b_loc@plt+0x10ec0>
  411d44:	test   eax,eax
  411d46:	js     41294f <__ctype_b_loc@plt+0x1067f>
  411d4c:	mov    rdi,r12
  411d4f:	mov    rsi,QWORD PTR [rsp+0x28]
  411d54:	mov    edx,eax
  411d56:	call   4134c0 <__ctype_b_loc@plt+0x111f0>
  411d5b:	mov    eax,0x11e
  411d60:	jmp    412f9c <__ctype_b_loc@plt+0x10ccc>
  411d65:	mov    r15,QWORD PTR [r13+0x0]
  411d69:	jmp    411ff1 <__ctype_b_loc@plt+0xfd21>
  411d6e:	mov    rbx,QWORD PTR [r14]
  411d71:	mov    rax,QWORD PTR [rbx]
  411d74:	lea    rcx,[rax-0x1]
  411d78:	mov    QWORD PTR [rbx],rcx
  411d7b:	test   rax,rax
  411d7e:	je     4129f3 <__ctype_b_loc@plt+0x10723>
  411d84:	mov    rax,QWORD PTR [rbx+0x8]
  411d88:	lea    rcx,[rax+0x1]
  411d8c:	jmp    412a22 <__ctype_b_loc@plt+0x10752>
  411d91:	mov    r13,QWORD PTR [r12+0x48]
  411d96:	mov    rax,QWORD PTR [r13+0x8]
  411d9a:	mov    rbx,QWORD PTR [r13+0x10]
  411d9e:	lea    rcx,[rax+0x1]
  411da2:	cmp    rcx,rbx
  411da5:	jbe    4128db <__ctype_b_loc@plt+0x1060b>
  411dab:	movabs rax,0x7ffffffffffffffd
  411db5:	cmp    rbx,rax
  411db8:	jbe    411dcf <__ctype_b_loc@plt+0xfaff>
  411dba:	lea    rsi,[rip+0x194c9]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  411dc1:	xor    edx,edx
  411dc3:	mov    rdi,r12
  411dc6:	call   413af0 <__ctype_b_loc@plt+0x11820>
  411dcb:	mov    rbx,QWORD PTR [r13+0x10]
  411dcf:	lea    r15,[rbx+rbx*1]
  411dd3:	mov    rdi,QWORD PTR [r12+0x38]
  411dd8:	cmp    r15,0xfffffffffffffffe
  411ddc:	jne    412a5e <__ctype_b_loc@plt+0x1078e>
  411de2:	lea    rsi,[rip+0x18fd0]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  411de9:	xor    ebp,ebp
  411deb:	xor    eax,eax
  411ded:	call   404080 <__ctype_b_loc@plt+0x1db0>
  411df2:	jmp    412a97 <__ctype_b_loc@plt+0x107c7>
  411df7:	mov    QWORD PTR [rsp+0x30],r15
  411dfc:	nop    DWORD PTR [rax+0x0]
  411e00:	mov    rax,QWORD PTR [rsp+0x20]
  411e05:	mov    rbx,QWORD PTR [rax+0x48]
  411e09:	mov    rcx,QWORD PTR [rbx+0x8]
  411e0d:	mov    r13,QWORD PTR [rbx+0x10]
  411e11:	lea    rdx,[rcx+0x1]
  411e15:	cmp    rdx,r13
  411e18:	jbe    411e70 <__ctype_b_loc@plt+0xfba0>
  411e1a:	movabs rax,0x7ffffffffffffffd
  411e24:	cmp    r13,rax
  411e27:	jbe    411e40 <__ctype_b_loc@plt+0xfb70>
  411e29:	xor    edx,edx
  411e2b:	mov    rdi,QWORD PTR [rsp+0x20]
  411e30:	lea    rsi,[rip+0x19453]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  411e37:	call   413af0 <__ctype_b_loc@plt+0x11820>
  411e3c:	mov    r13,QWORD PTR [rbx+0x10]
  411e40:	mov    rbp,r13
  411e43:	add    rbp,r13
  411e46:	mov    rax,QWORD PTR [rsp+0x20]
  411e4b:	mov    rdi,QWORD PTR [rax+0x38]
  411e4f:	cmp    rbp,0xfffffffffffffffe
  411e53:	jne    411e80 <__ctype_b_loc@plt+0xfbb0>
  411e55:	xor    eax,eax
  411e57:	lea    rsi,[rip+0x18f5b]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  411e5e:	call   404080 <__ctype_b_loc@plt+0x1db0>
  411e63:	xor    eax,eax
  411e65:	jmp    411eb3 <__ctype_b_loc@plt+0xfbe3>
  411e67:	nop    WORD PTR [rax+rax*1+0x0]
  411e70:	mov    rax,QWORD PTR [rbx]
  411e73:	jmp    411ec2 <__ctype_b_loc@plt+0xfbf2>
  411e75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411e7f:	nop
  411e80:	mov    rsi,QWORD PTR [rbx]
  411e83:	mov    QWORD PTR [rsp+0x8],rdi
  411e88:	mov    rax,QWORD PTR [rdi+0x20]
  411e8c:	mov    rdi,QWORD PTR [rax+0x18]
  411e90:	mov    rdx,r13
  411e93:	mov    rcx,rbp
  411e96:	mov    r15,rax
  411e99:	call   QWORD PTR [rax+0x10]
  411e9c:	test   rbp,rbp
  411e9f:	je     411eaa <__ctype_b_loc@plt+0xfbda>
  411ea1:	test   rax,rax
  411ea4:	je     412fb3 <__ctype_b_loc@plt+0x10ce3>
  411eaa:	add    QWORD PTR [r15+0x78],r13
  411eae:	mov    r15,QWORD PTR [rsp+0x30]
  411eb3:	mov    QWORD PTR [rbx],rax
  411eb6:	mov    QWORD PTR [rbx+0x10],rbp
  411eba:	mov    rcx,QWORD PTR [rbx+0x8]
  411ebe:	lea    rdx,[rcx+0x1]
  411ec2:	mov    QWORD PTR [rbx+0x8],rdx
  411ec6:	mov    BYTE PTR [rax+rcx*1],r14b
  411eca:	mov    rbp,QWORD PTR [r15]
  411ecd:	mov    rax,QWORD PTR [rbp+0x0]
  411ed1:	lea    rcx,[rax-0x1]
  411ed5:	mov    QWORD PTR [rbp+0x0],rcx
  411ed9:	test   rax,rax
  411edc:	je     411ef0 <__ctype_b_loc@plt+0xfc20>
  411ede:	mov    rax,QWORD PTR [rbp+0x8]
  411ee2:	lea    rcx,[rax+0x1]
  411ee6:	jmp    411f21 <__ctype_b_loc@plt+0xfc51>
  411ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  411ef0:	mov    rsi,QWORD PTR [rbp+0x18]
  411ef4:	mov    rdi,QWORD PTR [rbp+0x20]
  411ef8:	mov    rdx,rsp
  411efb:	call   QWORD PTR [rbp+0x10]
  411efe:	mov    r14d,0xffffffff
  411f04:	test   rax,rax
  411f07:	je     411f29 <__ctype_b_loc@plt+0xfc59>
  411f09:	mov    rcx,QWORD PTR [rsp]
  411f0d:	test   rcx,rcx
  411f10:	je     411f29 <__ctype_b_loc@plt+0xfc59>
  411f12:	add    rcx,0xffffffffffffffff
  411f16:	mov    QWORD PTR [rbp+0x0],rcx
  411f1a:	mov    rcx,rax
  411f1d:	add    rcx,0x1
  411f21:	mov    QWORD PTR [rbp+0x8],rcx
  411f25:	movzx  r14d,BYTE PTR [rax]
  411f29:	mov    rax,QWORD PTR [rsp+0x20]
  411f2e:	mov    DWORD PTR [rax],r14d
  411f31:	cmp    r14d,0x5f
  411f35:	je     411e00 <__ctype_b_loc@plt+0xfb30>
  411f3b:	mov    rax,QWORD PTR [r12]
  411f3f:	movsxd rcx,r14d
  411f42:	movzx  eax,WORD PTR [rax+rcx*2]
  411f46:	and    eax,0x8
  411f49:	test   ax,ax
  411f4c:	jne    411e00 <__ctype_b_loc@plt+0xfb30>
  411f52:	mov    rdi,QWORD PTR [rsp+0x20]
  411f57:	mov    rax,QWORD PTR [rdi+0x48]
  411f5b:	mov    rsi,QWORD PTR [rax]
  411f5e:	mov    rdx,QWORD PTR [rax+0x8]
  411f62:	call   414680 <__ctype_b_loc@plt+0x123b0>
  411f67:	mov    rcx,rax
  411f6a:	movzx  eax,BYTE PTR [rax+0xa]
  411f6e:	test   eax,eax
  411f70:	je     412c4e <__ctype_b_loc@plt+0x1097e>
  411f76:	or     eax,0x100
  411f7b:	jmp    412f9c <__ctype_b_loc@plt+0x10ccc>
  411f80:	mov    rbx,QWORD PTR [r14]
  411f83:	mov    rax,QWORD PTR [rbx]
  411f86:	lea    rcx,[rax-0x1]
  411f8a:	mov    QWORD PTR [rbx],rcx
  411f8d:	test   rax,rax
  411f90:	je     412c60 <__ctype_b_loc@plt+0x10990>
  411f96:	mov    rax,QWORD PTR [rbx+0x8]
  411f9a:	lea    rcx,[rax+0x1]
  411f9e:	jmp    412c8f <__ctype_b_loc@plt+0x109bf>
  411fa3:	mov    rsi,QWORD PTR [r13+0x0]
  411fa7:	mov    QWORD PTR [rsp+0x10],rdi
  411fac:	mov    rax,QWORD PTR [rdi+0x20]
  411fb0:	mov    rdi,QWORD PTR [rax+0x18]
  411fb4:	mov    rdx,rbp
  411fb7:	mov    rcx,rbx
  411fba:	mov    QWORD PTR [rsp+0x18],rax
  411fbf:	call   QWORD PTR [rax+0x10]
  411fc2:	mov    r15,rax
  411fc5:	test   rbx,rbx
  411fc8:	je     411fd3 <__ctype_b_loc@plt+0xfd03>
  411fca:	test   r15,r15
  411fcd:	je     412fef <__ctype_b_loc@plt+0x10d1f>
  411fd3:	mov    rax,QWORD PTR [rsp+0x18]
  411fd8:	add    QWORD PTR [rax+0x78],rbp
  411fdc:	mov    QWORD PTR [r13+0x0],r15
  411fe0:	mov    QWORD PTR [r13+0x10],rbx
  411fe4:	mov    rax,QWORD PTR [r13+0x8]
  411fe8:	lea    rcx,[rax+0x1]
  411fec:	mov    rbx,QWORD PTR [rsp+0x8]
  411ff1:	mov    QWORD PTR [r13+0x8],rcx
  411ff5:	mov    BYTE PTR [r15+rax*1],bl
  411ff9:	mov    r15,QWORD PTR [r14]
  411ffc:	mov    rax,QWORD PTR [r15]
  411fff:	lea    rcx,[rax-0x1]
  412003:	mov    QWORD PTR [r15],rcx
  412006:	test   rax,rax
  412009:	je     412015 <__ctype_b_loc@plt+0xfd45>
  41200b:	mov    rax,QWORD PTR [r15+0x8]
  41200f:	lea    rcx,[rax+0x1]
  412013:	jmp    412045 <__ctype_b_loc@plt+0xfd75>
  412015:	mov    rsi,QWORD PTR [r15+0x18]
  412019:	mov    rdi,QWORD PTR [r15+0x20]
  41201d:	mov    rdx,rsp
  412020:	call   QWORD PTR [r15+0x10]
  412024:	mov    ebp,0xffffffff
  412029:	test   rax,rax
  41202c:	je     41204c <__ctype_b_loc@plt+0xfd7c>
  41202e:	mov    rcx,QWORD PTR [rsp]
  412032:	test   rcx,rcx
  412035:	je     41204c <__ctype_b_loc@plt+0xfd7c>
  412037:	add    rcx,0xffffffffffffffff
  41203b:	mov    QWORD PTR [r15],rcx
  41203e:	mov    rcx,rax
  412041:	add    rcx,0x1
  412045:	mov    QWORD PTR [r15+0x8],rcx
  412049:	movzx  ebp,BYTE PTR [rax]
  41204c:	mov    DWORD PTR [r12],ebp
  412050:	cmp    ebp,ebx
  412052:	je     41279d <__ctype_b_loc@plt+0x104cd>
  412058:	lea    r15,[rip+0x191ff]        # 42b25e <__ctype_b_loc@plt+0x28f8e>
  41205f:	nop
  412060:	cmp    ebp,0xc
  412063:	jg     412080 <__ctype_b_loc@plt+0xfdb0>
  412065:	cmp    ebp,0xffffffff
  412068:	je     412119 <__ctype_b_loc@plt+0xfe49>
  41206e:	cmp    ebp,0xa
  412071:	je     4120b0 <__ctype_b_loc@plt+0xfde0>
  412073:	jmp    4120b7 <__ctype_b_loc@plt+0xfde7>
  412075:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41207f:	nop
  412080:	cmp    ebp,0xd
  412083:	je     4120b0 <__ctype_b_loc@plt+0xfde0>
  412085:	cmp    ebp,0x5c
  412088:	jne    4120b7 <__ctype_b_loc@plt+0xfde7>
  41208a:	mov    rbp,QWORD PTR [r14]
  41208d:	mov    rax,QWORD PTR [rbp+0x0]
  412091:	lea    rcx,[rax-0x1]
  412095:	mov    QWORD PTR [rbp+0x0],rcx
  412099:	test   rax,rax
  41209c:	je     412143 <__ctype_b_loc@plt+0xfe73>
  4120a2:	mov    rax,QWORD PTR [rbp+0x8]
  4120a6:	lea    rcx,[rax+0x1]
  4120aa:	jmp    412174 <__ctype_b_loc@plt+0xfea4>
  4120af:	nop
  4120b0:	mov    edx,0x11e
  4120b5:	jmp    41211e <__ctype_b_loc@plt+0xfe4e>
  4120b7:	mov    r13,QWORD PTR [r12+0x48]
  4120bc:	mov    rcx,QWORD PTR [r13+0x8]
  4120c0:	mov    rbx,QWORD PTR [r13+0x10]
  4120c4:	lea    rdx,[rcx+0x1]
  4120c8:	cmp    rdx,rbx
  4120cb:	jbe    41213a <__ctype_b_loc@plt+0xfe6a>
  4120cd:	movabs rax,0x7ffffffffffffffd
  4120d7:	cmp    rbx,rax
  4120da:	jbe    4120f1 <__ctype_b_loc@plt+0xfe21>
  4120dc:	xor    edx,edx
  4120de:	mov    rdi,r12
  4120e1:	lea    rsi,[rip+0x191a2]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  4120e8:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4120ed:	mov    rbx,QWORD PTR [r13+0x10]
  4120f1:	lea    r15,[rbx+rbx*1]
  4120f5:	mov    rdi,QWORD PTR [r12+0x38]
  4120fa:	cmp    r15,0xfffffffffffffffe
  4120fe:	jne    412230 <__ctype_b_loc@plt+0xff60>
  412104:	xor    eax,eax
  412106:	lea    rsi,[rip+0x18cac]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  41210d:	call   404080 <__ctype_b_loc@plt+0x1db0>
  412112:	xor    eax,eax
  412114:	jmp    412266 <__ctype_b_loc@plt+0xff96>
  412119:	mov    edx,0x11f
  41211e:	mov    rdi,r12
  412121:	mov    rsi,r15
  412124:	call   413af0 <__ctype_b_loc@plt+0x11820>
  412129:	mov    ebp,DWORD PTR [r12]
  41212d:	cmp    ebp,ebx
  41212f:	jne    412060 <__ctype_b_loc@plt+0xfd90>
  412135:	jmp    41279d <__ctype_b_loc@plt+0x104cd>
  41213a:	mov    rax,QWORD PTR [r13+0x0]
  41213e:	jmp    412276 <__ctype_b_loc@plt+0xffa6>
  412143:	mov    rsi,QWORD PTR [rbp+0x18]
  412147:	mov    rdi,QWORD PTR [rbp+0x20]
  41214b:	mov    rdx,rsp
  41214e:	call   QWORD PTR [rbp+0x10]
  412151:	mov    r13d,0xffffffff
  412157:	test   rax,rax
  41215a:	je     41217c <__ctype_b_loc@plt+0xfeac>
  41215c:	mov    rcx,QWORD PTR [rsp]
  412160:	test   rcx,rcx
  412163:	je     41217c <__ctype_b_loc@plt+0xfeac>
  412165:	add    rcx,0xffffffffffffffff
  412169:	mov    QWORD PTR [rbp+0x0],rcx
  41216d:	mov    rcx,rax
  412170:	add    rcx,0x1
  412174:	mov    QWORD PTR [rbp+0x8],rcx
  412178:	movzx  r13d,BYTE PTR [rax]
  41217c:	mov    DWORD PTR [r12],r13d
  412180:	cmp    r13d,0x60
  412184:	jle    4121ae <__ctype_b_loc@plt+0xfede>
  412186:	lea    eax,[r13-0x61]
  41218a:	cmp    eax,0x15
  41218d:	ja     412456 <__ctype_b_loc@plt+0x10186>
  412193:	mov    sil,0x7
  412196:	lea    rcx,[rip+0x18313]        # 42a4b0 <__ctype_b_loc@plt+0x281e0>
  41219d:	movsxd rax,DWORD PTR [rcx+rax*4]
  4121a1:	add    rax,rcx
  4121a4:	jmp    rax
  4121a6:	mov    sil,0x8
  4121a9:	jmp    412311 <__ctype_b_loc@plt+0x10041>
  4121ae:	cmp    r13d,0xffffffff
  4121b2:	je     412542 <__ctype_b_loc@plt+0x10272>
  4121b8:	cmp    r13d,0xa
  4121bc:	je     4121c8 <__ctype_b_loc@plt+0xfef8>
  4121be:	cmp    r13d,0xd
  4121c2:	jne    412456 <__ctype_b_loc@plt+0x10186>
  4121c8:	mov    r15,QWORD PTR [r12+0x48]
  4121cd:	mov    rcx,QWORD PTR [r15+0x8]
  4121d1:	mov    r13,QWORD PTR [r15+0x10]
  4121d5:	lea    rdx,[rcx+0x1]
  4121d9:	cmp    rdx,r13
  4121dc:	jbe    41244e <__ctype_b_loc@plt+0x1017e>
  4121e2:	movabs rax,0x7ffffffffffffffd
  4121ec:	cmp    r13,rax
  4121ef:	jbe    412206 <__ctype_b_loc@plt+0xff36>
  4121f1:	xor    edx,edx
  4121f3:	mov    rdi,r12
  4121f6:	lea    rsi,[rip+0x1908d]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  4121fd:	call   413af0 <__ctype_b_loc@plt+0x11820>
  412202:	mov    r13,QWORD PTR [r15+0x10]
  412206:	mov    rbp,r13
  412209:	add    rbp,r13
  41220c:	mov    rdi,QWORD PTR [r12+0x38]
  412211:	cmp    rbp,0xfffffffffffffffe
  412215:	jne    4124ec <__ctype_b_loc@plt+0x1021c>
  41221b:	xor    eax,eax
  41221d:	lea    rsi,[rip+0x18b95]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  412224:	call   404080 <__ctype_b_loc@plt+0x1db0>
  412229:	xor    eax,eax
  41222b:	jmp    412517 <__ctype_b_loc@plt+0x10247>
  412230:	mov    rsi,QWORD PTR [r13+0x0]
  412234:	mov    QWORD PTR [rsp+0x10],rdi
  412239:	mov    rax,QWORD PTR [rdi+0x20]
  41223d:	mov    rdi,QWORD PTR [rax+0x18]
  412241:	mov    rdx,rbx
  412244:	mov    rcx,r15
  412247:	mov    QWORD PTR [rsp+0x18],rax
  41224c:	call   QWORD PTR [rax+0x10]
  41224f:	test   r15,r15
  412252:	je     41225d <__ctype_b_loc@plt+0xff8d>
  412254:	test   rax,rax
  412257:	je     412fef <__ctype_b_loc@plt+0x10d1f>
  41225d:	mov    rcx,QWORD PTR [rsp+0x18]
  412262:	add    QWORD PTR [rcx+0x78],rbx
  412266:	mov    QWORD PTR [r13+0x0],rax
  41226a:	mov    QWORD PTR [r13+0x10],r15
  41226e:	mov    rcx,QWORD PTR [r13+0x8]
  412272:	lea    rdx,[rcx+0x1]
  412276:	mov    QWORD PTR [r13+0x8],rdx
  41227a:	mov    BYTE PTR [rax+rcx*1],bpl
  41227e:	mov    r15,QWORD PTR [r14]
  412281:	mov    rax,QWORD PTR [r15]
  412284:	lea    rcx,[rax-0x1]
  412288:	mov    QWORD PTR [r15],rcx
  41228b:	test   rax,rax
  41228e:	je     4122a6 <__ctype_b_loc@plt+0xffd6>
  412290:	mov    rax,QWORD PTR [r15+0x8]
  412294:	lea    rcx,[rax+0x1]
  412298:	mov    QWORD PTR [r15+0x8],rcx
  41229c:	movzx  ebp,BYTE PTR [rax]
  41229f:	mov    rbx,QWORD PTR [rsp+0x8]
  4122a4:	jmp    4122e2 <__ctype_b_loc@plt+0x10012>
  4122a6:	mov    rsi,QWORD PTR [r15+0x18]
  4122aa:	mov    rdi,QWORD PTR [r15+0x20]
  4122ae:	mov    rdx,rsp
  4122b1:	call   QWORD PTR [r15+0x10]
  4122b5:	mov    ebp,0xffffffff
  4122ba:	test   rax,rax
  4122bd:	mov    rbx,QWORD PTR [rsp+0x8]
  4122c2:	je     4122e2 <__ctype_b_loc@plt+0x10012>
  4122c4:	mov    rcx,QWORD PTR [rsp]
  4122c8:	test   rcx,rcx
  4122cb:	je     4122e2 <__ctype_b_loc@plt+0x10012>
  4122cd:	add    rcx,0xffffffffffffffff
  4122d1:	mov    QWORD PTR [r15],rcx
  4122d4:	mov    rcx,rax
  4122d7:	add    rcx,0x1
  4122db:	mov    QWORD PTR [r15+0x8],rcx
  4122df:	movzx  ebp,BYTE PTR [rax]
  4122e2:	mov    DWORD PTR [r12],ebp
  4122e6:	lea    r15,[rip+0x18f71]        # 42b25e <__ctype_b_loc@plt+0x28f8e>
  4122ed:	cmp    ebp,ebx
  4122ef:	jne    412060 <__ctype_b_loc@plt+0xfd90>
  4122f5:	jmp    41279d <__ctype_b_loc@plt+0x104cd>
  4122fa:	mov    sil,0xb
  4122fd:	jmp    412311 <__ctype_b_loc@plt+0x10041>
  4122ff:	mov    sil,0xa
  412302:	jmp    412311 <__ctype_b_loc@plt+0x10041>
  412304:	mov    sil,0x9
  412307:	jmp    412311 <__ctype_b_loc@plt+0x10041>
  412309:	mov    sil,0xc
  41230c:	jmp    412311 <__ctype_b_loc@plt+0x10041>
  41230e:	mov    sil,0xd
  412311:	mov    r13,QWORD PTR [r12+0x48]
  412316:	mov    rcx,QWORD PTR [r13+0x8]
  41231a:	mov    rbx,QWORD PTR [r13+0x10]
  41231e:	lea    rdx,[rcx+0x1]
  412322:	cmp    rdx,rbx
  412325:	jbe    412371 <__ctype_b_loc@plt+0x100a1>
  412327:	mov    BYTE PTR [rsp+0x18],sil
  41232c:	movabs rax,0x7ffffffffffffffd
  412336:	cmp    rbx,rax
  412339:	jbe    412350 <__ctype_b_loc@plt+0x10080>
  41233b:	xor    edx,edx
  41233d:	mov    rdi,r12
  412340:	lea    rsi,[rip+0x18f43]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  412347:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41234c:	mov    rbx,QWORD PTR [r13+0x10]
  412350:	lea    rbp,[rbx+rbx*1]
  412354:	mov    rdi,QWORD PTR [r12+0x38]
  412359:	cmp    rbp,0xfffffffffffffffe
  41235d:	jne    412377 <__ctype_b_loc@plt+0x100a7>
  41235f:	xor    eax,eax
  412361:	lea    rsi,[rip+0x18a51]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  412368:	call   404080 <__ctype_b_loc@plt+0x1db0>
  41236d:	xor    eax,eax
  41236f:	jmp    4123ab <__ctype_b_loc@plt+0x100db>
  412371:	mov    rax,QWORD PTR [r13+0x0]
  412375:	jmp    4123c0 <__ctype_b_loc@plt+0x100f0>
  412377:	mov    rsi,QWORD PTR [r13+0x0]
  41237b:	mov    QWORD PTR [rsp+0x10],rdi
  412380:	mov    r15,QWORD PTR [rdi+0x20]
  412384:	mov    rdi,QWORD PTR [r15+0x18]
  412388:	mov    rdx,rbx
  41238b:	mov    rcx,rbp
  41238e:	call   QWORD PTR [r15+0x10]
  412392:	test   rbp,rbp
  412395:	je     4123a0 <__ctype_b_loc@plt+0x100d0>
  412397:	test   rax,rax
  41239a:	je     412fef <__ctype_b_loc@plt+0x10d1f>
  4123a0:	add    QWORD PTR [r15+0x78],rbx
  4123a4:	lea    r15,[rip+0x18eb3]        # 42b25e <__ctype_b_loc@plt+0x28f8e>
  4123ab:	mov    sil,BYTE PTR [rsp+0x18]
  4123b0:	mov    QWORD PTR [r13+0x0],rax
  4123b4:	mov    QWORD PTR [r13+0x10],rbp
  4123b8:	mov    rcx,QWORD PTR [r13+0x8]
  4123bc:	lea    rdx,[rcx+0x1]
  4123c0:	mov    QWORD PTR [r13+0x8],rdx
  4123c4:	mov    BYTE PTR [rax+rcx*1],sil
  4123c8:	mov    rbp,QWORD PTR [r14]
  4123cb:	mov    rax,QWORD PTR [rbp+0x0]
  4123cf:	lea    rcx,[rax-0x1]
  4123d3:	mov    QWORD PTR [rbp+0x0],rcx
  4123d7:	test   rax,rax
  4123da:	je     412405 <__ctype_b_loc@plt+0x10135>
  4123dc:	mov    rax,QWORD PTR [rbp+0x8]
  4123e0:	lea    rcx,[rax+0x1]
  4123e4:	mov    QWORD PTR [rbp+0x8],rcx
  4123e8:	movzx  eax,BYTE PTR [rax]
  4123eb:	mov    DWORD PTR [r12],eax
  4123ef:	mov    rbx,QWORD PTR [rsp+0x8]
  4123f4:	mov    ebp,DWORD PTR [r12]
  4123f8:	cmp    ebp,ebx
  4123fa:	jne    412060 <__ctype_b_loc@plt+0xfd90>
  412400:	jmp    41279d <__ctype_b_loc@plt+0x104cd>
  412405:	mov    rsi,QWORD PTR [rbp+0x18]
  412409:	mov    rdi,QWORD PTR [rbp+0x20]
  41240d:	mov    rdx,rsp
  412410:	call   QWORD PTR [rbp+0x10]
  412413:	mov    ecx,0xffffffff
  412418:	test   rax,rax
  41241b:	je     4124d2 <__ctype_b_loc@plt+0x10202>
  412421:	mov    rdx,QWORD PTR [rsp]
  412425:	test   rdx,rdx
  412428:	mov    rbx,QWORD PTR [rsp+0x8]
  41242d:	je     4124d7 <__ctype_b_loc@plt+0x10207>
  412433:	add    rdx,0xffffffffffffffff
  412437:	mov    QWORD PTR [rbp+0x0],rdx
  41243b:	mov    rcx,rax
  41243e:	add    rcx,0x1
  412442:	mov    QWORD PTR [rbp+0x8],rcx
  412446:	movzx  ecx,BYTE PTR [rax]
  412449:	jmp    4124d7 <__ctype_b_loc@plt+0x10207>
  41244e:	mov    rax,QWORD PTR [r15]
  412451:	jmp    412526 <__ctype_b_loc@plt+0x10256>
  412456:	call   4022d0 <__ctype_b_loc@plt>
  41245b:	mov    rdx,QWORD PTR [rax]
  41245e:	movsxd rcx,r13d
  412461:	test   BYTE PTR [rdx+rcx*2+0x1],0x8
  412466:	jne    412553 <__ctype_b_loc@plt+0x10283>
  41246c:	mov    rbp,QWORD PTR [r12+0x48]
  412471:	mov    rcx,QWORD PTR [rbp+0x8]
  412475:	mov    rbx,QWORD PTR [rbp+0x10]
  412479:	lea    rdx,[rcx+0x1]
  41247d:	cmp    rdx,rbx
  412480:	jbe    412679 <__ctype_b_loc@plt+0x103a9>
  412486:	movabs rax,0x7ffffffffffffffd
  412490:	cmp    rbx,rax
  412493:	jbe    4124aa <__ctype_b_loc@plt+0x101da>
  412495:	xor    edx,edx
  412497:	mov    rdi,r12
  41249a:	lea    rsi,[rip+0x18de9]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  4124a1:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4124a6:	mov    rbx,QWORD PTR [rbp+0x10]
  4124aa:	lea    r15,[rbx+rbx*1]
  4124ae:	mov    rdi,QWORD PTR [r12+0x38]
  4124b3:	cmp    r15,0xfffffffffffffffe
  4124b7:	jne    412687 <__ctype_b_loc@plt+0x103b7>
  4124bd:	xor    eax,eax
  4124bf:	lea    rsi,[rip+0x188f3]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  4124c6:	call   404080 <__ctype_b_loc@plt+0x1db0>
  4124cb:	xor    eax,eax
  4124cd:	jmp    4126bd <__ctype_b_loc@plt+0x103ed>
  4124d2:	mov    rbx,QWORD PTR [rsp+0x8]
  4124d7:	mov    DWORD PTR [r12],ecx
  4124db:	mov    ebp,DWORD PTR [r12]
  4124df:	cmp    ebp,ebx
  4124e1:	jne    412060 <__ctype_b_loc@plt+0xfd90>
  4124e7:	jmp    41279d <__ctype_b_loc@plt+0x104cd>
  4124ec:	mov    rsi,QWORD PTR [r15]
  4124ef:	mov    QWORD PTR [rsp+0x18],rdi
  4124f4:	mov    rbx,QWORD PTR [rdi+0x20]
  4124f8:	mov    rdi,QWORD PTR [rbx+0x18]
  4124fc:	mov    rdx,r13
  4124ff:	mov    rcx,rbp
  412502:	call   QWORD PTR [rbx+0x10]
  412505:	test   rbp,rbp
  412508:	je     412513 <__ctype_b_loc@plt+0x10243>
  41250a:	test   rax,rax
  41250d:	je     413023 <__ctype_b_loc@plt+0x10d53>
  412513:	add    QWORD PTR [rbx+0x78],r13
  412517:	mov    QWORD PTR [r15],rax
  41251a:	mov    QWORD PTR [r15+0x10],rbp
  41251e:	mov    rcx,QWORD PTR [r15+0x8]
  412522:	lea    rdx,[rcx+0x1]
  412526:	mov    rbx,QWORD PTR [rsp+0x8]
  41252b:	mov    QWORD PTR [r15+0x8],rdx
  41252f:	mov    BYTE PTR [rax+rcx*1],0xa
  412533:	mov    rdi,r12
  412536:	call   413090 <__ctype_b_loc@plt+0x10dc0>
  41253b:	lea    r15,[rip+0x18d1c]        # 42b25e <__ctype_b_loc@plt+0x28f8e>
  412542:	mov    ebp,DWORD PTR [r12]
  412546:	cmp    ebp,ebx
  412548:	jne    412060 <__ctype_b_loc@plt+0xfd90>
  41254e:	jmp    41279d <__ctype_b_loc@plt+0x104cd>
  412553:	xor    r15d,r15d
  412556:	xor    ebx,ebx
  412558:	mov    QWORD PTR [rsp+0x10],rax
  41255d:	nop    DWORD PTR [rax]
  412560:	mov    esi,r13d
  412563:	lea    ebp,[r15+r15*4]
  412567:	mov    r15,QWORD PTR [r14]
  41256a:	mov    rdx,QWORD PTR [r15]
  41256d:	lea    rcx,[rdx-0x1]
  412571:	mov    QWORD PTR [r15],rcx
  412574:	test   rdx,rdx
  412577:	je     41258b <__ctype_b_loc@plt+0x102bb>
  412579:	mov    rdx,QWORD PTR [r15+0x8]
  41257d:	lea    rcx,[rdx+0x1]
  412581:	mov    QWORD PTR [r15+0x8],rcx
  412585:	movzx  r13d,BYTE PTR [rdx]
  412589:	jmp    4125d3 <__ctype_b_loc@plt+0x10303>
  41258b:	mov    QWORD PTR [rsp+0x18],rsi
  412590:	mov    rsi,QWORD PTR [r15+0x18]
  412594:	mov    rdi,QWORD PTR [r15+0x20]
  412598:	mov    rdx,rsp
  41259b:	call   QWORD PTR [r15+0x10]
  41259f:	mov    r13d,0xffffffff
  4125a5:	test   rax,rax
  4125a8:	je     4125c9 <__ctype_b_loc@plt+0x102f9>
  4125aa:	mov    rcx,QWORD PTR [rsp]
  4125ae:	test   rcx,rcx
  4125b1:	je     4125c9 <__ctype_b_loc@plt+0x102f9>
  4125b3:	add    rcx,0xffffffffffffffff
  4125b7:	mov    QWORD PTR [r15],rcx
  4125ba:	mov    rcx,rax
  4125bd:	add    rcx,0x1
  4125c1:	mov    QWORD PTR [r15+0x8],rcx
  4125c5:	movzx  r13d,BYTE PTR [rax]
  4125c9:	mov    rax,QWORD PTR [rsp+0x10]
  4125ce:	mov    rsi,QWORD PTR [rsp+0x18]
  4125d3:	lea    r15d,[rsi+rbp*2]
  4125d7:	add    r15d,0xffffffd0
  4125db:	mov    DWORD PTR [r12],r13d
  4125df:	add    ebx,0x1
  4125e2:	cmp    ebx,0x2
  4125e5:	ja     4125f8 <__ctype_b_loc@plt+0x10328>
  4125e7:	mov    rdx,QWORD PTR [rax]
  4125ea:	movsxd rcx,r13d
  4125ed:	test   BYTE PTR [rdx+rcx*2+0x1],0x8
  4125f2:	jne    412560 <__ctype_b_loc@plt+0x10290>
  4125f8:	cmp    r15d,0x100
  4125ff:	jl     412615 <__ctype_b_loc@plt+0x10345>
  412601:	mov    edx,0x11e
  412606:	mov    rdi,r12
  412609:	lea    rsi,[rip+0x18c60]        # 42b270 <__ctype_b_loc@plt+0x28fa0>
  412610:	call   413af0 <__ctype_b_loc@plt+0x11820>
  412615:	mov    rbx,QWORD PTR [r12+0x48]
  41261a:	mov    rcx,QWORD PTR [rbx+0x8]
  41261e:	mov    rbp,QWORD PTR [rbx+0x10]
  412622:	lea    rdx,[rcx+0x1]
  412626:	cmp    rdx,rbp
  412629:	jbe    41267f <__ctype_b_loc@plt+0x103af>
  41262b:	movabs rax,0x7ffffffffffffffd
  412635:	cmp    rbp,rax
  412638:	jbe    41264f <__ctype_b_loc@plt+0x1037f>
  41263a:	xor    edx,edx
  41263c:	mov    rdi,r12
  41263f:	lea    rsi,[rip+0x18c44]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  412646:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41264b:	mov    rbp,QWORD PTR [rbx+0x10]
  41264f:	mov    r13,rbp
  412652:	add    r13,rbp
  412655:	mov    rdi,QWORD PTR [r12+0x38]
  41265a:	cmp    r13,0xfffffffffffffffe
  41265e:	jne    412732 <__ctype_b_loc@plt+0x10462>
  412664:	xor    eax,eax
  412666:	lea    rsi,[rip+0x1874c]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  41266d:	call   404080 <__ctype_b_loc@plt+0x1db0>
  412672:	xor    eax,eax
  412674:	jmp    412767 <__ctype_b_loc@plt+0x10497>
  412679:	mov    rax,QWORD PTR [rbp+0x0]
  41267d:	jmp    4126d4 <__ctype_b_loc@plt+0x10404>
  41267f:	mov    rax,QWORD PTR [rbx]
  412682:	jmp    412776 <__ctype_b_loc@plt+0x104a6>
  412687:	mov    rsi,QWORD PTR [rbp+0x0]
  41268b:	mov    QWORD PTR [rsp+0x10],rdi
  412690:	mov    rax,QWORD PTR [rdi+0x20]
  412694:	mov    rdi,QWORD PTR [rax+0x18]
  412698:	mov    rdx,rbx
  41269b:	mov    rcx,r15
  41269e:	mov    QWORD PTR [rsp+0x18],rax
  4126a3:	call   QWORD PTR [rax+0x10]
  4126a6:	test   r15,r15
  4126a9:	je     4126b4 <__ctype_b_loc@plt+0x103e4>
  4126ab:	test   rax,rax
  4126ae:	je     412fef <__ctype_b_loc@plt+0x10d1f>
  4126b4:	mov    rcx,QWORD PTR [rsp+0x18]
  4126b9:	add    QWORD PTR [rcx+0x78],rbx
  4126bd:	mov    QWORD PTR [rbp+0x0],rax
  4126c1:	mov    QWORD PTR [rbp+0x10],r15
  4126c5:	mov    rcx,QWORD PTR [rbp+0x8]
  4126c9:	lea    rdx,[rcx+0x1]
  4126cd:	lea    r15,[rip+0x18b8a]        # 42b25e <__ctype_b_loc@plt+0x28f8e>
  4126d4:	mov    QWORD PTR [rbp+0x8],rdx
  4126d8:	mov    BYTE PTR [rax+rcx*1],r13b
  4126dc:	mov    rbp,QWORD PTR [r14]
  4126df:	mov    rax,QWORD PTR [rbp+0x0]
  4126e3:	lea    rcx,[rax-0x1]
  4126e7:	mov    QWORD PTR [rbp+0x0],rcx
  4126eb:	test   rax,rax
  4126ee:	jne    4123dc <__ctype_b_loc@plt+0x1010c>
  4126f4:	mov    rsi,QWORD PTR [rbp+0x18]
  4126f8:	mov    rdi,QWORD PTR [rbp+0x20]
  4126fc:	mov    rdx,rsp
  4126ff:	call   QWORD PTR [rbp+0x10]
  412702:	mov    ecx,0xffffffff
  412707:	test   rax,rax
  41270a:	je     412788 <__ctype_b_loc@plt+0x104b8>
  41270c:	mov    rdx,QWORD PTR [rsp]
  412710:	test   rdx,rdx
  412713:	mov    rbx,QWORD PTR [rsp+0x8]
  412718:	je     41278d <__ctype_b_loc@plt+0x104bd>
  41271a:	add    rdx,0xffffffffffffffff
  41271e:	mov    QWORD PTR [rbp+0x0],rdx
  412722:	mov    rcx,rax
  412725:	add    rcx,0x1
  412729:	mov    QWORD PTR [rbp+0x8],rcx
  41272d:	movzx  ecx,BYTE PTR [rax]
  412730:	jmp    41278d <__ctype_b_loc@plt+0x104bd>
  412732:	mov    rsi,QWORD PTR [rbx]
  412735:	mov    QWORD PTR [rsp+0x10],rdi
  41273a:	mov    rax,QWORD PTR [rdi+0x20]
  41273e:	mov    rdi,QWORD PTR [rax+0x18]
  412742:	mov    rdx,rbp
  412745:	mov    rcx,r13
  412748:	mov    QWORD PTR [rsp+0x18],rax
  41274d:	call   QWORD PTR [rax+0x10]
  412750:	test   r13,r13
  412753:	je     41275e <__ctype_b_loc@plt+0x1048e>
  412755:	test   rax,rax
  412758:	je     412fef <__ctype_b_loc@plt+0x10d1f>
  41275e:	mov    rcx,QWORD PTR [rsp+0x18]
  412763:	add    QWORD PTR [rcx+0x78],rbp
  412767:	mov    QWORD PTR [rbx],rax
  41276a:	mov    QWORD PTR [rbx+0x10],r13
  41276e:	mov    rcx,QWORD PTR [rbx+0x8]
  412772:	lea    rdx,[rcx+0x1]
  412776:	mov    QWORD PTR [rbx+0x8],rdx
  41277a:	mov    BYTE PTR [rax+rcx*1],r15b
  41277e:	mov    rbx,QWORD PTR [rsp+0x8]
  412783:	jmp    41253b <__ctype_b_loc@plt+0x1026b>
  412788:	mov    rbx,QWORD PTR [rsp+0x8]
  41278d:	mov    DWORD PTR [r12],ecx
  412791:	mov    ebp,DWORD PTR [r12]
  412795:	cmp    ebp,ebx
  412797:	jne    412060 <__ctype_b_loc@plt+0xfd90>
  41279d:	mov    r13,QWORD PTR [r12+0x48]
  4127a2:	mov    rax,QWORD PTR [r13+0x8]
  4127a6:	mov    rbp,QWORD PTR [r13+0x10]
  4127aa:	lea    rcx,[rax+0x1]
  4127ae:	cmp    rcx,rbp
  4127b1:	jbe    4127fb <__ctype_b_loc@plt+0x1052b>
  4127b3:	movabs rax,0x7ffffffffffffffd
  4127bd:	cmp    rbp,rax
  4127c0:	jbe    4127d7 <__ctype_b_loc@plt+0x10507>
  4127c2:	lea    rsi,[rip+0x18ac1]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  4127c9:	xor    edx,edx
  4127cb:	mov    rdi,r12
  4127ce:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4127d3:	mov    rbp,QWORD PTR [r13+0x10]
  4127d7:	mov    rbx,rbp
  4127da:	add    rbx,rbp
  4127dd:	mov    rdi,QWORD PTR [r12+0x38]
  4127e2:	cmp    rbx,0xfffffffffffffffe
  4127e6:	jne    412801 <__ctype_b_loc@plt+0x10531>
  4127e8:	lea    rsi,[rip+0x185ca]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  4127ef:	xor    r15d,r15d
  4127f2:	xor    eax,eax
  4127f4:	call   404080 <__ctype_b_loc@plt+0x1db0>
  4127f9:	jmp    41283a <__ctype_b_loc@plt+0x1056a>
  4127fb:	mov    r15,QWORD PTR [r13+0x0]
  4127ff:	jmp    41284f <__ctype_b_loc@plt+0x1057f>
  412801:	mov    rsi,QWORD PTR [r13+0x0]
  412805:	mov    QWORD PTR [rsp+0x10],rdi
  41280a:	mov    rax,QWORD PTR [rdi+0x20]
  41280e:	mov    rdi,QWORD PTR [rax+0x18]
  412812:	mov    rdx,rbp
  412815:	mov    rcx,rbx
  412818:	mov    QWORD PTR [rsp+0x18],rax
  41281d:	call   QWORD PTR [rax+0x10]
  412820:	mov    r15,rax
  412823:	test   rbx,rbx
  412826:	je     412831 <__ctype_b_loc@plt+0x10561>
  412828:	test   r15,r15
  41282b:	je     412fef <__ctype_b_loc@plt+0x10d1f>
  412831:	mov    rax,QWORD PTR [rsp+0x18]
  412836:	add    QWORD PTR [rax+0x78],rbp
  41283a:	mov    QWORD PTR [r13+0x0],r15
  41283e:	mov    QWORD PTR [r13+0x10],rbx
  412842:	mov    rax,QWORD PTR [r13+0x8]
  412846:	lea    rcx,[rax+0x1]
  41284a:	mov    rbx,QWORD PTR [rsp+0x8]
  41284f:	mov    QWORD PTR [r13+0x8],rcx
  412853:	mov    BYTE PTR [r15+rax*1],bl
  412857:	mov    rbx,QWORD PTR [r14]
  41285a:	mov    rax,QWORD PTR [rbx]
  41285d:	lea    rcx,[rax-0x1]
  412861:	mov    QWORD PTR [rbx],rcx
  412864:	test   rax,rax
  412867:	je     412873 <__ctype_b_loc@plt+0x105a3>
  412869:	mov    rax,QWORD PTR [rbx+0x8]
  41286d:	lea    rcx,[rax+0x1]
  412871:	jmp    4128a2 <__ctype_b_loc@plt+0x105d2>
  412873:	mov    rsi,QWORD PTR [rbx+0x18]
  412877:	mov    rdi,QWORD PTR [rbx+0x20]
  41287b:	mov    rdx,rsp
  41287e:	call   QWORD PTR [rbx+0x10]
  412881:	mov    ecx,0xffffffff
  412886:	test   rax,rax
  412889:	je     4128a9 <__ctype_b_loc@plt+0x105d9>
  41288b:	mov    rdx,QWORD PTR [rsp]
  41288f:	test   rdx,rdx
  412892:	je     4128a9 <__ctype_b_loc@plt+0x105d9>
  412894:	add    rdx,0xffffffffffffffff
  412898:	mov    QWORD PTR [rbx],rdx
  41289b:	mov    rcx,rax
  41289e:	add    rcx,0x1
  4128a2:	mov    QWORD PTR [rbx+0x8],rcx
  4128a6:	movzx  ecx,BYTE PTR [rax]
  4128a9:	mov    DWORD PTR [r12],ecx
  4128ad:	mov    rax,QWORD PTR [r12+0x48]
  4128b2:	mov    rsi,QWORD PTR [rax]
  4128b5:	mov    rdx,QWORD PTR [rax+0x8]
  4128b9:	add    rsi,0x1
  4128bd:	add    rdx,0xfffffffffffffffe
  4128c1:	mov    rdi,r12
  4128c4:	call   414680 <__ctype_b_loc@plt+0x123b0>
  4128c9:	mov    rcx,QWORD PTR [rsp+0x28]
  4128ce:	mov    QWORD PTR [rcx],rax
  4128d1:	mov    eax,0x11e
  4128d6:	jmp    412f9c <__ctype_b_loc@plt+0x10ccc>
  4128db:	mov    rbp,QWORD PTR [r13+0x0]
  4128df:	jmp    412aa7 <__ctype_b_loc@plt+0x107d7>
  4128e4:	mov    rsi,QWORD PTR [rbx+0x18]
  4128e8:	mov    rdi,QWORD PTR [rbx+0x20]
  4128ec:	mov    rdx,rsp
  4128ef:	call   QWORD PTR [rbx+0x10]
  4128f2:	mov    ecx,0xffffffff
  4128f7:	test   rax,rax
  4128fa:	je     41291a <__ctype_b_loc@plt+0x1064a>
  4128fc:	mov    rdx,QWORD PTR [rsp]
  412900:	test   rdx,rdx
  412903:	je     41291a <__ctype_b_loc@plt+0x1064a>
  412905:	add    rdx,0xffffffffffffffff
  412909:	mov    QWORD PTR [rbx],rdx
  41290c:	mov    rcx,rax
  41290f:	add    rcx,0x1
  412913:	mov    QWORD PTR [rbx+0x8],rcx
  412917:	movzx  ecx,BYTE PTR [rax]
  41291a:	mov    DWORD PTR [r12],ecx
  41291e:	mov    eax,0x3c
  412923:	cmp    ecx,0x3d
  412926:	jne    412f9c <__ctype_b_loc@plt+0x10ccc>
  41292c:	mov    rbx,QWORD PTR [r14]
  41292f:	mov    rax,QWORD PTR [rbx]
  412932:	lea    rcx,[rax-0x1]
  412936:	mov    QWORD PTR [rbx],rcx
  412939:	test   rax,rax
  41293c:	je     412ccb <__ctype_b_loc@plt+0x109fb>
  412942:	mov    rax,QWORD PTR [rbx+0x8]
  412946:	lea    rcx,[rax+0x1]
  41294a:	jmp    412cfa <__ctype_b_loc@plt+0x10a2a>
  41294f:	cmp    eax,0xffffffff
  412952:	je     412d53 <__ctype_b_loc@plt+0x10a83>
  412958:	lea    rsi,[rip+0x18880]        # 42b1df <__ctype_b_loc@plt+0x28f0f>
  41295f:	mov    edx,0x11e
  412964:	mov    rdi,r12
  412967:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41296c:	mov    rbx,QWORD PTR [r14]
  41296f:	mov    rax,QWORD PTR [rbx]
  412972:	lea    rcx,[rax-0x1]
  412976:	mov    QWORD PTR [rbx],rcx
  412979:	test   rax,rax
  41297c:	je     412988 <__ctype_b_loc@plt+0x106b8>
  41297e:	mov    rax,QWORD PTR [rbx+0x8]
  412982:	lea    rcx,[rax+0x1]
  412986:	jmp    4129b7 <__ctype_b_loc@plt+0x106e7>
  412988:	mov    rsi,QWORD PTR [rbx+0x18]
  41298c:	mov    rdi,QWORD PTR [rbx+0x20]
  412990:	mov    rdx,rsp
  412993:	call   QWORD PTR [rbx+0x10]
  412996:	mov    ecx,0xffffffff
  41299b:	test   rax,rax
  41299e:	je     4129be <__ctype_b_loc@plt+0x106ee>
  4129a0:	mov    rdx,QWORD PTR [rsp]
  4129a4:	test   rdx,rdx
  4129a7:	je     4129be <__ctype_b_loc@plt+0x106ee>
  4129a9:	add    rdx,0xffffffffffffffff
  4129ad:	mov    QWORD PTR [rbx],rdx
  4129b0:	mov    rcx,rax
  4129b3:	add    rcx,0x1
  4129b7:	mov    QWORD PTR [rbx+0x8],rcx
  4129bb:	movzx  ecx,BYTE PTR [rax]
  4129be:	mov    DWORD PTR [r12],ecx
  4129c2:	mov    eax,0x3d
  4129c7:	cmp    ecx,0x3d
  4129ca:	jne    412f9c <__ctype_b_loc@plt+0x10ccc>
  4129d0:	mov    rbx,QWORD PTR [r14]
  4129d3:	mov    rax,QWORD PTR [rbx]
  4129d6:	lea    rcx,[rax-0x1]
  4129da:	mov    QWORD PTR [rbx],rcx
  4129dd:	test   rax,rax
  4129e0:	je     412bc0 <__ctype_b_loc@plt+0x108f0>
  4129e6:	mov    rax,QWORD PTR [rbx+0x8]
  4129ea:	lea    rcx,[rax+0x1]
  4129ee:	jmp    412bef <__ctype_b_loc@plt+0x1091f>
  4129f3:	mov    rsi,QWORD PTR [rbx+0x18]
  4129f7:	mov    rdi,QWORD PTR [rbx+0x20]
  4129fb:	mov    rdx,rsp
  4129fe:	call   QWORD PTR [rbx+0x10]
  412a01:	mov    ecx,0xffffffff
  412a06:	test   rax,rax
  412a09:	je     412a29 <__ctype_b_loc@plt+0x10759>
  412a0b:	mov    rdx,QWORD PTR [rsp]
  412a0f:	test   rdx,rdx
  412a12:	je     412a29 <__ctype_b_loc@plt+0x10759>
  412a14:	add    rdx,0xffffffffffffffff
  412a18:	mov    QWORD PTR [rbx],rdx
  412a1b:	mov    rcx,rax
  412a1e:	add    rcx,0x1
  412a22:	mov    QWORD PTR [rbx+0x8],rcx
  412a26:	movzx  ecx,BYTE PTR [rax]
  412a29:	mov    DWORD PTR [r12],ecx
  412a2d:	mov    eax,0x3e
  412a32:	cmp    ecx,0x3d
  412a35:	jne    412f9c <__ctype_b_loc@plt+0x10ccc>
  412a3b:	mov    rbx,QWORD PTR [r14]
  412a3e:	mov    rax,QWORD PTR [rbx]
  412a41:	lea    rcx,[rax-0x1]
  412a45:	mov    QWORD PTR [rbx],rcx
  412a48:	test   rax,rax
  412a4b:	je     412d0f <__ctype_b_loc@plt+0x10a3f>
  412a51:	mov    rax,QWORD PTR [rbx+0x8]
  412a55:	lea    rcx,[rax+0x1]
  412a59:	jmp    412d3e <__ctype_b_loc@plt+0x10a6e>
  412a5e:	mov    rsi,QWORD PTR [r13+0x0]
  412a62:	mov    QWORD PTR [rsp+0x18],rdi
  412a67:	mov    rax,QWORD PTR [rdi+0x20]
  412a6b:	mov    rdi,QWORD PTR [rax+0x18]
  412a6f:	mov    rdx,rbx
  412a72:	mov    rcx,r15
  412a75:	mov    QWORD PTR [rsp+0x8],rax
  412a7a:	call   QWORD PTR [rax+0x10]
  412a7d:	mov    rbp,rax
  412a80:	test   r15,r15
  412a83:	je     412a8e <__ctype_b_loc@plt+0x107be>
  412a85:	test   rbp,rbp
  412a88:	je     413023 <__ctype_b_loc@plt+0x10d53>
  412a8e:	mov    rax,QWORD PTR [rsp+0x8]
  412a93:	add    QWORD PTR [rax+0x78],rbx
  412a97:	mov    QWORD PTR [r13+0x0],rbp
  412a9b:	mov    QWORD PTR [r13+0x10],r15
  412a9f:	mov    rax,QWORD PTR [r13+0x8]
  412aa3:	lea    rcx,[rax+0x1]
  412aa7:	mov    QWORD PTR [r13+0x8],rcx
  412aab:	mov    BYTE PTR [rbp+rax*1+0x0],0x2e
  412ab0:	mov    rbx,QWORD PTR [r14]
  412ab3:	mov    rax,QWORD PTR [rbx]
  412ab6:	lea    rcx,[rax-0x1]
  412aba:	mov    QWORD PTR [rbx],rcx
  412abd:	test   rax,rax
  412ac0:	je     412acc <__ctype_b_loc@plt+0x107fc>
  412ac2:	mov    rax,QWORD PTR [rbx+0x8]
  412ac6:	lea    rcx,[rax+0x1]
  412aca:	jmp    412afc <__ctype_b_loc@plt+0x1082c>
  412acc:	mov    rsi,QWORD PTR [rbx+0x18]
  412ad0:	mov    rdi,QWORD PTR [rbx+0x20]
  412ad4:	mov    rdx,rsp
  412ad7:	call   QWORD PTR [rbx+0x10]
  412ada:	mov    r13d,0xffffffff
  412ae0:	test   rax,rax
  412ae3:	je     412b04 <__ctype_b_loc@plt+0x10834>
  412ae5:	mov    rcx,QWORD PTR [rsp]
  412ae9:	test   rcx,rcx
  412aec:	je     412b04 <__ctype_b_loc@plt+0x10834>
  412aee:	add    rcx,0xffffffffffffffff
  412af2:	mov    QWORD PTR [rbx],rcx
  412af5:	mov    rcx,rax
  412af8:	add    rcx,0x1
  412afc:	mov    QWORD PTR [rbx+0x8],rcx
  412b00:	movzx  r13d,BYTE PTR [rax]
  412b04:	mov    DWORD PTR [r12],r13d
  412b08:	cmp    r13d,0x3f
  412b0c:	ja     412b95 <__ctype_b_loc@plt+0x108c5>
  412b12:	movabs rdx,0x400000000001
  412b1c:	mov    eax,0x1
  412b21:	shlx   rax,rax,r13
  412b26:	and    rax,rdx
  412b29:	je     412b95 <__ctype_b_loc@plt+0x108c5>
  412b2b:	mov    r15,QWORD PTR [r12+0x48]
  412b30:	mov    rax,QWORD PTR [r15+0x8]
  412b34:	mov    rbp,QWORD PTR [r15+0x10]
  412b38:	lea    rcx,[rax+0x1]
  412b3c:	cmp    rcx,rbp
  412b3f:	jbe    412bb8 <__ctype_b_loc@plt+0x108e8>
  412b41:	movabs rax,0x7ffffffffffffffd
  412b4b:	cmp    rbp,rax
  412b4e:	jbe    412b65 <__ctype_b_loc@plt+0x10895>
  412b50:	lea    rsi,[rip+0x18733]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  412b57:	xor    edx,edx
  412b59:	mov    rdi,r12
  412b5c:	call   413af0 <__ctype_b_loc@plt+0x11820>
  412b61:	mov    rbp,QWORD PTR [r15+0x10]
  412b65:	mov    rcx,rbp
  412b68:	add    rcx,rbp
  412b6b:	mov    rdi,QWORD PTR [r12+0x38]
  412b70:	cmp    rcx,0xfffffffffffffffe
  412b74:	jne    412d5d <__ctype_b_loc@plt+0x10a8d>
  412b7a:	lea    rsi,[rip+0x18238]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  412b81:	xor    ebx,ebx
  412b83:	xor    eax,eax
  412b85:	mov    rbp,rcx
  412b88:	call   404080 <__ctype_b_loc@plt+0x1db0>
  412b8d:	mov    rcx,rbp
  412b90:	jmp    412d98 <__ctype_b_loc@plt+0x10ac8>
  412b95:	call   4022d0 <__ctype_b_loc@plt>
  412b9a:	mov    rcx,QWORD PTR [rax]
  412b9d:	movsxd rdx,r13d
  412ba0:	mov    eax,0x2e
  412ba5:	test   BYTE PTR [rcx+rdx*2+0x1],0x8
  412baa:	je     412f9c <__ctype_b_loc@plt+0x10ccc>
  412bb0:	mov    rdi,r12
  412bb3:	jmp    411d05 <__ctype_b_loc@plt+0xfa35>
  412bb8:	mov    rbx,QWORD PTR [r15]
  412bbb:	jmp    412db1 <__ctype_b_loc@plt+0x10ae1>
  412bc0:	mov    rsi,QWORD PTR [rbx+0x18]
  412bc4:	mov    rdi,QWORD PTR [rbx+0x20]
  412bc8:	mov    rdx,rsp
  412bcb:	call   QWORD PTR [rbx+0x10]
  412bce:	mov    ecx,0xffffffff
  412bd3:	test   rax,rax
  412bd6:	je     412bf6 <__ctype_b_loc@plt+0x10926>
  412bd8:	mov    rdx,QWORD PTR [rsp]
  412bdc:	test   rdx,rdx
  412bdf:	je     412bf6 <__ctype_b_loc@plt+0x10926>
  412be1:	add    rdx,0xffffffffffffffff
  412be5:	mov    QWORD PTR [rbx],rdx
  412be8:	mov    rcx,rax
  412beb:	add    rcx,0x1
  412bef:	mov    QWORD PTR [rbx+0x8],rcx
  412bf3:	movzx  ecx,BYTE PTR [rax]
  412bf6:	mov    DWORD PTR [r12],ecx
  412bfa:	mov    eax,0x118
  412bff:	jmp    412f9c <__ctype_b_loc@plt+0x10ccc>
  412c04:	mov    rsi,QWORD PTR [rbx+0x18]
  412c08:	mov    rdi,QWORD PTR [rbx+0x20]
  412c0c:	mov    rdx,rsp
  412c0f:	call   QWORD PTR [rbx+0x10]
  412c12:	mov    ecx,0xffffffff
  412c17:	test   rax,rax
  412c1a:	je     411c7e <__ctype_b_loc@plt+0xf9ae>
  412c20:	mov    rdx,QWORD PTR [rsp]
  412c24:	test   rdx,rdx
  412c27:	mov    r15,QWORD PTR [rsp+0x20]
  412c2c:	je     412c43 <__ctype_b_loc@plt+0x10973>
  412c2e:	add    rdx,0xffffffffffffffff
  412c32:	mov    QWORD PTR [rbx],rdx
  412c35:	mov    rcx,rax
  412c38:	add    rcx,0x1
  412c3c:	mov    QWORD PTR [rbx+0x8],rcx
  412c40:	movzx  ecx,BYTE PTR [rax]
  412c43:	mov    DWORD PTR [r15],ecx
  412c46:	mov    eax,r14d
  412c49:	jmp    412f9c <__ctype_b_loc@plt+0x10ccc>
  412c4e:	mov    rax,QWORD PTR [rsp+0x28]
  412c53:	mov    QWORD PTR [rax],rcx
  412c56:	mov    eax,0x11d
  412c5b:	jmp    412f9c <__ctype_b_loc@plt+0x10ccc>
  412c60:	mov    rsi,QWORD PTR [rbx+0x18]
  412c64:	mov    rdi,QWORD PTR [rbx+0x20]
  412c68:	mov    rdx,rsp
  412c6b:	call   QWORD PTR [rbx+0x10]
  412c6e:	mov    ecx,0xffffffff
  412c73:	test   rax,rax
  412c76:	je     412c96 <__ctype_b_loc@plt+0x109c6>
  412c78:	mov    rdx,QWORD PTR [rsp]
  412c7c:	test   rdx,rdx
  412c7f:	je     412c96 <__ctype_b_loc@plt+0x109c6>
  412c81:	add    rdx,0xffffffffffffffff
  412c85:	mov    QWORD PTR [rbx],rdx
  412c88:	mov    rcx,rax
  412c8b:	add    rcx,0x1
  412c8f:	mov    QWORD PTR [rbx+0x8],rcx
  412c93:	movzx  ecx,BYTE PTR [rax]
  412c96:	mov    DWORD PTR [r12],ecx
  412c9a:	mov    eax,0x7e
  412c9f:	cmp    ecx,0x3d
  412ca2:	jne    412f9c <__ctype_b_loc@plt+0x10ccc>
  412ca8:	mov    rbx,QWORD PTR [r14]
  412cab:	mov    rax,QWORD PTR [rbx]
  412cae:	lea    rcx,[rax-0x1]
  412cb2:	mov    QWORD PTR [rbx],rcx
  412cb5:	test   rax,rax
  412cb8:	je     412eab <__ctype_b_loc@plt+0x10bdb>
  412cbe:	mov    rax,QWORD PTR [rbx+0x8]
  412cc2:	lea    rcx,[rax+0x1]
  412cc6:	jmp    412eda <__ctype_b_loc@plt+0x10c0a>
  412ccb:	mov    rsi,QWORD PTR [rbx+0x18]
  412ccf:	mov    rdi,QWORD PTR [rbx+0x20]
  412cd3:	mov    rdx,rsp
  412cd6:	call   QWORD PTR [rbx+0x10]
  412cd9:	mov    ecx,0xffffffff
  412cde:	test   rax,rax
  412ce1:	je     412d01 <__ctype_b_loc@plt+0x10a31>
  412ce3:	mov    rdx,QWORD PTR [rsp]
  412ce7:	test   rdx,rdx
  412cea:	je     412d01 <__ctype_b_loc@plt+0x10a31>
  412cec:	add    rdx,0xffffffffffffffff
  412cf0:	mov    QWORD PTR [rbx],rdx
  412cf3:	mov    rcx,rax
  412cf6:	add    rcx,0x1
  412cfa:	mov    QWORD PTR [rbx+0x8],rcx
  412cfe:	movzx  ecx,BYTE PTR [rax]
  412d01:	mov    DWORD PTR [r12],ecx
  412d05:	mov    eax,0x11a
  412d0a:	jmp    412f9c <__ctype_b_loc@plt+0x10ccc>
  412d0f:	mov    rsi,QWORD PTR [rbx+0x18]
  412d13:	mov    rdi,QWORD PTR [rbx+0x20]
  412d17:	mov    rdx,rsp
  412d1a:	call   QWORD PTR [rbx+0x10]
  412d1d:	mov    ecx,0xffffffff
  412d22:	test   rax,rax
  412d25:	je     412d45 <__ctype_b_loc@plt+0x10a75>
  412d27:	mov    rdx,QWORD PTR [rsp]
  412d2b:	test   rdx,rdx
  412d2e:	je     412d45 <__ctype_b_loc@plt+0x10a75>
  412d30:	add    rdx,0xffffffffffffffff
  412d34:	mov    QWORD PTR [rbx],rdx
  412d37:	mov    rcx,rax
  412d3a:	add    rcx,0x1
  412d3e:	mov    QWORD PTR [rbx+0x8],rcx
  412d42:	movzx  ecx,BYTE PTR [rax]
  412d45:	mov    DWORD PTR [r12],ecx
  412d49:	mov    eax,0x119
  412d4e:	jmp    412f9c <__ctype_b_loc@plt+0x10ccc>
  412d53:	mov    eax,0x5b
  412d58:	jmp    412f9c <__ctype_b_loc@plt+0x10ccc>
  412d5d:	mov    rsi,QWORD PTR [r15]
  412d60:	mov    QWORD PTR [rsp+0x8],rdi
  412d65:	mov    rax,QWORD PTR [rdi+0x20]
  412d69:	mov    rdi,QWORD PTR [rax+0x18]
  412d6d:	mov    rdx,rbp
  412d70:	mov    rbx,rcx
  412d73:	mov    QWORD PTR [rsp+0x28],rax
  412d78:	call   QWORD PTR [rax+0x10]
  412d7b:	mov    rcx,rbx
  412d7e:	mov    rbx,rax
  412d81:	test   rcx,rcx
  412d84:	je     412d8f <__ctype_b_loc@plt+0x10abf>
  412d86:	test   rbx,rbx
  412d89:	je     412fb3 <__ctype_b_loc@plt+0x10ce3>
  412d8f:	mov    rax,QWORD PTR [rsp+0x28]
  412d94:	add    QWORD PTR [rax+0x78],rbp
  412d98:	movabs rdx,0x400000000001
  412da2:	mov    QWORD PTR [r15],rbx
  412da5:	mov    QWORD PTR [r15+0x10],rcx
  412da9:	mov    rax,QWORD PTR [r15+0x8]
  412dad:	lea    rcx,[rax+0x1]
  412db1:	mov    QWORD PTR [r15+0x8],rcx
  412db5:	mov    BYTE PTR [rbx+rax*1],r13b
  412db9:	mov    rbx,QWORD PTR [r14]
  412dbc:	mov    rax,QWORD PTR [rbx]
  412dbf:	lea    rcx,[rax-0x1]
  412dc3:	mov    QWORD PTR [rbx],rcx
  412dc6:	test   rax,rax
  412dc9:	je     412dd5 <__ctype_b_loc@plt+0x10b05>
  412dcb:	mov    rax,QWORD PTR [rbx+0x8]
  412dcf:	lea    rcx,[rax+0x1]
  412dd3:	jmp    412e0f <__ctype_b_loc@plt+0x10b3f>
  412dd5:	mov    rbp,rdx
  412dd8:	mov    rsi,QWORD PTR [rbx+0x18]
  412ddc:	mov    rdi,QWORD PTR [rbx+0x20]
  412de0:	mov    rdx,rsp
  412de3:	call   QWORD PTR [rbx+0x10]
  412de6:	mov    r13d,0xffffffff
  412dec:	test   rax,rax
  412def:	je     412fab <__ctype_b_loc@plt+0x10cdb>
  412df5:	mov    rcx,QWORD PTR [rsp]
  412df9:	test   rcx,rcx
  412dfc:	mov    rdx,rbp
  412dff:	je     412e17 <__ctype_b_loc@plt+0x10b47>
  412e01:	add    rcx,0xffffffffffffffff
  412e05:	mov    QWORD PTR [rbx],rcx
  412e08:	mov    rcx,rax
  412e0b:	add    rcx,0x1
  412e0f:	mov    QWORD PTR [rbx+0x8],rcx
  412e13:	movzx  r13d,BYTE PTR [rax]
  412e17:	mov    DWORD PTR [r12],r13d
  412e1b:	mov    eax,0x116
  412e20:	cmp    r13d,0x3f
  412e24:	ja     412f9c <__ctype_b_loc@plt+0x10ccc>
  412e2a:	mov    ecx,0x1
  412e2f:	shlx   rcx,rcx,r13
  412e34:	and    rcx,rdx
  412e37:	je     412f9c <__ctype_b_loc@plt+0x10ccc>
  412e3d:	mov    r15,QWORD PTR [r12+0x48]
  412e42:	mov    rax,QWORD PTR [r15+0x8]
  412e46:	mov    rbp,QWORD PTR [r15+0x10]
  412e4a:	lea    rcx,[rax+0x1]
  412e4e:	cmp    rcx,rbp
  412e51:	jbe    412ea3 <__ctype_b_loc@plt+0x10bd3>
  412e53:	movabs rax,0x7ffffffffffffffd
  412e5d:	cmp    rbp,rax
  412e60:	jbe    412e77 <__ctype_b_loc@plt+0x10ba7>
  412e62:	lea    rsi,[rip+0x18421]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  412e69:	xor    edx,edx
  412e6b:	mov    rdi,r12
  412e6e:	call   413af0 <__ctype_b_loc@plt+0x11820>
  412e73:	mov    rbp,QWORD PTR [r15+0x10]
  412e77:	mov    rcx,rbp
  412e7a:	add    rcx,rbp
  412e7d:	mov    rdi,QWORD PTR [r12+0x38]
  412e82:	cmp    rcx,0xfffffffffffffffe
  412e86:	jne    412eef <__ctype_b_loc@plt+0x10c1f>
  412e88:	lea    rsi,[rip+0x17f2a]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  412e8f:	xor    ebx,ebx
  412e91:	xor    eax,eax
  412e93:	mov    rbp,rcx
  412e96:	call   404080 <__ctype_b_loc@plt+0x1db0>
  412e9b:	mov    rcx,rbp
  412e9e:	jmp    412f2a <__ctype_b_loc@plt+0x10c5a>
  412ea3:	mov    rbx,QWORD PTR [r15]
  412ea6:	jmp    412f39 <__ctype_b_loc@plt+0x10c69>
  412eab:	mov    rsi,QWORD PTR [rbx+0x18]
  412eaf:	mov    rdi,QWORD PTR [rbx+0x20]
  412eb3:	mov    rdx,rsp
  412eb6:	call   QWORD PTR [rbx+0x10]
  412eb9:	mov    ecx,0xffffffff
  412ebe:	test   rax,rax
  412ec1:	je     412ee1 <__ctype_b_loc@plt+0x10c11>
  412ec3:	mov    rdx,QWORD PTR [rsp]
  412ec7:	test   rdx,rdx
  412eca:	je     412ee1 <__ctype_b_loc@plt+0x10c11>
  412ecc:	add    rdx,0xffffffffffffffff
  412ed0:	mov    QWORD PTR [rbx],rdx
  412ed3:	mov    rcx,rax
  412ed6:	add    rcx,0x1
  412eda:	mov    QWORD PTR [rbx+0x8],rcx
  412ede:	movzx  ecx,BYTE PTR [rax]
  412ee1:	mov    DWORD PTR [r12],ecx
  412ee5:	mov    eax,0x11b
  412eea:	jmp    412f9c <__ctype_b_loc@plt+0x10ccc>
  412eef:	mov    rsi,QWORD PTR [r15]
  412ef2:	mov    QWORD PTR [rsp+0x8],rdi
  412ef7:	mov    rax,QWORD PTR [rdi+0x20]
  412efb:	mov    rdi,QWORD PTR [rax+0x18]
  412eff:	mov    rdx,rbp
  412f02:	mov    rbx,rcx
  412f05:	mov    QWORD PTR [rsp+0x28],rax
  412f0a:	call   QWORD PTR [rax+0x10]
  412f0d:	mov    rcx,rbx
  412f10:	mov    rbx,rax
  412f13:	test   rcx,rcx
  412f16:	je     412f21 <__ctype_b_loc@plt+0x10c51>
  412f18:	test   rbx,rbx
  412f1b:	je     412fb3 <__ctype_b_loc@plt+0x10ce3>
  412f21:	mov    rax,QWORD PTR [rsp+0x28]
  412f26:	add    QWORD PTR [rax+0x78],rbp
  412f2a:	mov    QWORD PTR [r15],rbx
  412f2d:	mov    QWORD PTR [r15+0x10],rcx
  412f31:	mov    rax,QWORD PTR [r15+0x8]
  412f35:	lea    rcx,[rax+0x1]
  412f39:	mov    QWORD PTR [r15+0x8],rcx
  412f3d:	mov    BYTE PTR [rbx+rax*1],r13b
  412f41:	mov    rbx,QWORD PTR [r14]
  412f44:	mov    rax,QWORD PTR [rbx]
  412f47:	lea    rcx,[rax-0x1]
  412f4b:	mov    QWORD PTR [rbx],rcx
  412f4e:	test   rax,rax
  412f51:	je     412f5d <__ctype_b_loc@plt+0x10c8d>
  412f53:	mov    rax,QWORD PTR [rbx+0x8]
  412f57:	lea    rcx,[rax+0x1]
  412f5b:	jmp    412f8c <__ctype_b_loc@plt+0x10cbc>
  412f5d:	mov    rsi,QWORD PTR [rbx+0x18]
  412f61:	mov    rdi,QWORD PTR [rbx+0x20]
  412f65:	mov    rdx,rsp
  412f68:	call   QWORD PTR [rbx+0x10]
  412f6b:	mov    ecx,0xffffffff
  412f70:	test   rax,rax
  412f73:	je     412f93 <__ctype_b_loc@plt+0x10cc3>
  412f75:	mov    rdx,QWORD PTR [rsp]
  412f79:	test   rdx,rdx
  412f7c:	je     412f93 <__ctype_b_loc@plt+0x10cc3>
  412f7e:	add    rdx,0xffffffffffffffff
  412f82:	mov    QWORD PTR [rbx],rdx
  412f85:	mov    rcx,rax
  412f88:	add    rcx,0x1
  412f8c:	mov    QWORD PTR [rbx+0x8],rcx
  412f90:	movzx  ecx,BYTE PTR [rax]
  412f93:	mov    DWORD PTR [r12],ecx
  412f97:	mov    eax,0x117
  412f9c:	add    rsp,0x38
  412fa0:	pop    rbx
  412fa1:	pop    r12
  412fa3:	pop    r13
  412fa5:	pop    r14
  412fa7:	pop    r15
  412fa9:	pop    rbp
  412faa:	ret    
  412fab:	mov    rdx,rbp
  412fae:	jmp    412e17 <__ctype_b_loc@plt+0x10b47>
  412fb3:	mov    rax,QWORD PTR [rsp+0x8]
  412fb8:	mov    rdi,QWORD PTR [rax+0xa8]
  412fbf:	test   rdi,rdi
  412fc2:	jne    413074 <__ctype_b_loc@plt+0x10da4>
  412fc8:	mov    rax,QWORD PTR [rsp+0x8]
  412fcd:	mov    BYTE PTR [rax+0xa],0x4
  412fd1:	mov    rax,QWORD PTR [rax+0x20]
  412fd5:	cmp    QWORD PTR [rax+0x98],0x0
  412fdd:	je     41306a <__ctype_b_loc@plt+0x10d9a>
  412fe3:	mov    esi,0x4
  412fe8:	mov    rbx,QWORD PTR [rsp+0x8]
  412fed:	jmp    413055 <__ctype_b_loc@plt+0x10d85>
  412fef:	mov    rax,QWORD PTR [rsp+0x10]
  412ff4:	mov    rdi,QWORD PTR [rax+0xa8]
  412ffb:	test   rdi,rdi
  412ffe:	jne    413074 <__ctype_b_loc@plt+0x10da4>
  413000:	mov    rax,QWORD PTR [rsp+0x10]
  413005:	mov    BYTE PTR [rax+0xa],0x4
  413009:	mov    rax,QWORD PTR [rax+0x20]
  41300d:	cmp    QWORD PTR [rax+0x98],0x0
  413015:	je     41306a <__ctype_b_loc@plt+0x10d9a>
  413017:	mov    esi,0x4
  41301c:	mov    rbx,QWORD PTR [rsp+0x10]
  413021:	jmp    413055 <__ctype_b_loc@plt+0x10d85>
  413023:	mov    rax,QWORD PTR [rsp+0x18]
  413028:	mov    rdi,QWORD PTR [rax+0xa8]
  41302f:	test   rdi,rdi
  413032:	jne    413074 <__ctype_b_loc@plt+0x10da4>
  413034:	mov    rax,QWORD PTR [rsp+0x18]
  413039:	mov    BYTE PTR [rax+0xa],0x4
  41303d:	mov    rax,QWORD PTR [rax+0x20]
  413041:	cmp    QWORD PTR [rax+0x98],0x0
  413049:	je     41306a <__ctype_b_loc@plt+0x10d9a>
  41304b:	mov    esi,0x4
  413050:	mov    rbx,QWORD PTR [rsp+0x18]
  413055:	mov    rdi,rbx
  413058:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  41305d:	mov    rax,QWORD PTR [rbx+0x20]
  413061:	mov    rdi,rbx
  413064:	call   QWORD PTR [rax+0x98]
  41306a:	mov    edi,0x1
  41306f:	call   402280 <exit@plt>
  413074:	mov    DWORD PTR [rdi+0xd0],0x4
  41307e:	add    rdi,0x8
  413082:	mov    esi,0x1
  413087:	call   402230 <longjmp@plt>
  41308c:	nop    DWORD PTR [rax+0x0]
  413090:	push   rbp
  413091:	push   r14
  413093:	push   rbx
  413094:	sub    rsp,0x10
  413098:	mov    rbx,rdi
  41309b:	mov    r14d,DWORD PTR [rdi]
  41309e:	mov    rbp,QWORD PTR [rdi+0x40]
  4130a2:	mov    rax,QWORD PTR [rbp+0x0]
  4130a6:	lea    rcx,[rax-0x1]
  4130aa:	mov    QWORD PTR [rbp+0x0],rcx
  4130ae:	test   rax,rax
  4130b1:	je     4130bd <__ctype_b_loc@plt+0x10ded>
  4130b3:	mov    rax,QWORD PTR [rbp+0x8]
  4130b7:	lea    rcx,[rax+0x1]
  4130bb:	jmp    4130f0 <__ctype_b_loc@plt+0x10e20>
  4130bd:	mov    rsi,QWORD PTR [rbp+0x18]
  4130c1:	mov    rdi,QWORD PTR [rbp+0x20]
  4130c5:	lea    rdx,[rsp+0x8]
  4130ca:	call   QWORD PTR [rbp+0x10]
  4130cd:	mov    ecx,0xffffffff
  4130d2:	test   rax,rax
  4130d5:	je     4130f7 <__ctype_b_loc@plt+0x10e27>
  4130d7:	mov    rdx,QWORD PTR [rsp+0x8]
  4130dc:	test   rdx,rdx
  4130df:	je     4130f7 <__ctype_b_loc@plt+0x10e27>
  4130e1:	add    rdx,0xffffffffffffffff
  4130e5:	mov    QWORD PTR [rbp+0x0],rdx
  4130e9:	mov    rcx,rax
  4130ec:	add    rcx,0x1
  4130f0:	mov    QWORD PTR [rbp+0x8],rcx
  4130f4:	movzx  ecx,BYTE PTR [rax]
  4130f7:	mov    DWORD PTR [rbx],ecx
  4130f9:	cmp    ecx,0xd
  4130fc:	je     413103 <__ctype_b_loc@plt+0x10e33>
  4130fe:	cmp    ecx,0xa
  413101:	jne    413163 <__ctype_b_loc@plt+0x10e93>
  413103:	cmp    ecx,r14d
  413106:	je     413163 <__ctype_b_loc@plt+0x10e93>
  413108:	mov    rbp,QWORD PTR [rbx+0x40]
  41310c:	mov    rax,QWORD PTR [rbp+0x0]
  413110:	lea    rcx,[rax-0x1]
  413114:	mov    QWORD PTR [rbp+0x0],rcx
  413118:	test   rax,rax
  41311b:	je     413127 <__ctype_b_loc@plt+0x10e57>
  41311d:	mov    rax,QWORD PTR [rbp+0x8]
  413121:	lea    rcx,[rax+0x1]
  413125:	jmp    41315a <__ctype_b_loc@plt+0x10e8a>
  413127:	mov    rsi,QWORD PTR [rbp+0x18]
  41312b:	mov    rdi,QWORD PTR [rbp+0x20]
  41312f:	lea    rdx,[rsp+0x8]
  413134:	call   QWORD PTR [rbp+0x10]
  413137:	mov    ecx,0xffffffff
  41313c:	test   rax,rax
  41313f:	je     413161 <__ctype_b_loc@plt+0x10e91>
  413141:	mov    rdx,QWORD PTR [rsp+0x8]
  413146:	test   rdx,rdx
  413149:	je     413161 <__ctype_b_loc@plt+0x10e91>
  41314b:	add    rdx,0xffffffffffffffff
  41314f:	mov    QWORD PTR [rbp+0x0],rdx
  413153:	mov    rcx,rax
  413156:	add    rcx,0x1
  41315a:	mov    QWORD PTR [rbp+0x8],rcx
  41315e:	movzx  ecx,BYTE PTR [rax]
  413161:	mov    DWORD PTR [rbx],ecx
  413163:	mov    eax,DWORD PTR [rbx+0x4]
  413166:	lea    ecx,[rax+0x1]
  413169:	mov    DWORD PTR [rbx+0x4],ecx
  41316c:	cmp    eax,0x7ffffffc
  413171:	jl     413185 <__ctype_b_loc@plt+0x10eb5>
  413173:	mov    edx,DWORD PTR [rbx+0x10]
  413176:	lea    rsi,[rip+0x18080]        # 42b1fd <__ctype_b_loc@plt+0x28f2d>
  41317d:	mov    rdi,rbx
  413180:	call   413af0 <__ctype_b_loc@plt+0x11820>
  413185:	add    rsp,0x10
  413189:	pop    rbx
  41318a:	pop    r14
  41318c:	pop    rbp
  41318d:	ret    
  41318e:	xchg   ax,ax
  413190:	push   rbp
  413191:	push   r15
  413193:	push   r14
  413195:	push   r13
  413197:	push   r12
  413199:	push   rbx
  41319a:	sub    rsp,0x28
  41319e:	mov    r13d,DWORD PTR [rdi]
  4131a1:	mov    QWORD PTR [rsp+0x8],rdi
  4131a6:	mov    rbp,QWORD PTR [rdi+0x48]
  4131aa:	mov    rax,QWORD PTR [rbp+0x8]
  4131ae:	mov    rbx,QWORD PTR [rbp+0x10]
  4131b2:	lea    rcx,[rax+0x1]
  4131b6:	cmp    rcx,rbx
  4131b9:	jbe    413207 <__ctype_b_loc@plt+0x10f37>
  4131bb:	movabs rax,0x7ffffffffffffffd
  4131c5:	cmp    rbx,rax
  4131c8:	jbe    4131e1 <__ctype_b_loc@plt+0x10f11>
  4131ca:	lea    rsi,[rip+0x180b9]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  4131d1:	xor    edx,edx
  4131d3:	mov    rdi,QWORD PTR [rsp+0x8]
  4131d8:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4131dd:	mov    rbx,QWORD PTR [rbp+0x10]
  4131e1:	lea    r15,[rbx+rbx*1]
  4131e5:	mov    rax,QWORD PTR [rsp+0x8]
  4131ea:	mov    rdi,QWORD PTR [rax+0x38]
  4131ee:	cmp    r15,0xfffffffffffffffe
  4131f2:	jne    41320d <__ctype_b_loc@plt+0x10f3d>
  4131f4:	lea    rsi,[rip+0x17bbe]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  4131fb:	xor    r12d,r12d
  4131fe:	xor    eax,eax
  413200:	call   404080 <__ctype_b_loc@plt+0x1db0>
  413205:	jmp    41323d <__ctype_b_loc@plt+0x10f6d>
  413207:	mov    r12,QWORD PTR [rbp+0x0]
  41320b:	jmp    41324d <__ctype_b_loc@plt+0x10f7d>
  41320d:	mov    rsi,QWORD PTR [rbp+0x0]
  413211:	mov    QWORD PTR [rsp+0x10],rdi
  413216:	mov    r14,QWORD PTR [rdi+0x20]
  41321a:	mov    rdi,QWORD PTR [r14+0x18]
  41321e:	mov    rdx,rbx
  413221:	mov    rcx,r15
  413224:	call   QWORD PTR [r14+0x10]
  413228:	mov    r12,rax
  41322b:	test   r15,r15
  41322e:	je     413239 <__ctype_b_loc@plt+0x10f69>
  413230:	test   r12,r12
  413233:	je     413469 <__ctype_b_loc@plt+0x11199>
  413239:	add    QWORD PTR [r14+0x78],rbx
  41323d:	mov    QWORD PTR [rbp+0x0],r12
  413241:	mov    QWORD PTR [rbp+0x10],r15
  413245:	mov    rax,QWORD PTR [rbp+0x8]
  413249:	lea    rcx,[rax+0x1]
  41324d:	mov    QWORD PTR [rbp+0x8],rcx
  413251:	mov    BYTE PTR [r12+rax*1],r13b
  413255:	mov    rax,QWORD PTR [rsp+0x8]
  41325a:	mov    rbx,QWORD PTR [rax+0x40]
  41325e:	mov    rax,QWORD PTR [rbx]
  413261:	lea    rcx,[rax-0x1]
  413265:	mov    QWORD PTR [rbx],rcx
  413268:	test   rax,rax
  41326b:	mov    DWORD PTR [rsp+0x24],r13d
  413270:	je     413288 <__ctype_b_loc@plt+0x10fb8>
  413272:	mov    rax,QWORD PTR [rbx+0x8]
  413276:	lea    rcx,[rax+0x1]
  41327a:	mov    QWORD PTR [rbx+0x8],rcx
  41327e:	movzx  ecx,BYTE PTR [rax]
  413281:	mov    r13,QWORD PTR [rsp+0x8]
  413286:	jmp    4132c6 <__ctype_b_loc@plt+0x10ff6>
  413288:	mov    rsi,QWORD PTR [rbx+0x18]
  41328c:	mov    rdi,QWORD PTR [rbx+0x20]
  413290:	lea    rdx,[rsp+0x18]
  413295:	call   QWORD PTR [rbx+0x10]
  413298:	mov    ecx,0xffffffff
  41329d:	test   rax,rax
  4132a0:	je     413281 <__ctype_b_loc@plt+0x10fb1>
  4132a2:	mov    rdx,QWORD PTR [rsp+0x18]
  4132a7:	test   rdx,rdx
  4132aa:	mov    r13,QWORD PTR [rsp+0x8]
  4132af:	je     4132c6 <__ctype_b_loc@plt+0x10ff6>
  4132b1:	add    rdx,0xffffffffffffffff
  4132b5:	mov    QWORD PTR [rbx],rdx
  4132b8:	mov    rcx,rax
  4132bb:	add    rcx,0x1
  4132bf:	mov    QWORD PTR [rbx+0x8],rcx
  4132c3:	movzx  ecx,BYTE PTR [rax]
  4132c6:	mov    DWORD PTR [r13+0x0],ecx
  4132ca:	xor    r15d,r15d
  4132cd:	cmp    ecx,0x3d
  4132d0:	jne    41340a <__ctype_b_loc@plt+0x1113a>
  4132d6:	xor    r15d,r15d
  4132d9:	nop    DWORD PTR [rax+0x0]
  4132e0:	mov    r12,QWORD PTR [r13+0x48]
  4132e4:	mov    rcx,QWORD PTR [r12+0x8]
  4132e9:	mov    r14,QWORD PTR [r12+0x10]
  4132ee:	lea    rdx,[rcx+0x1]
  4132f2:	cmp    rdx,r14
  4132f5:	jbe    413340 <__ctype_b_loc@plt+0x11070>
  4132f7:	movabs rax,0x7ffffffffffffffd
  413301:	cmp    r14,rax
  413304:	jbe    41331c <__ctype_b_loc@plt+0x1104c>
  413306:	xor    edx,edx
  413308:	mov    rdi,r13
  41330b:	lea    rsi,[rip+0x17f78]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  413312:	call   413af0 <__ctype_b_loc@plt+0x11820>
  413317:	mov    r14,QWORD PTR [r12+0x10]
  41331c:	lea    rbp,[r14+r14*1]
  413320:	mov    rbx,QWORD PTR [r13+0x38]
  413324:	cmp    rbp,0xfffffffffffffffe
  413328:	jne    413350 <__ctype_b_loc@plt+0x11080>
  41332a:	xor    eax,eax
  41332c:	mov    rdi,rbx
  41332f:	lea    rsi,[rip+0x17a83]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  413336:	call   404080 <__ctype_b_loc@plt+0x1db0>
  41333b:	xor    eax,eax
  41333d:	jmp    41337d <__ctype_b_loc@plt+0x110ad>
  41333f:	nop
  413340:	mov    rax,QWORD PTR [r12]
  413344:	jmp    41338f <__ctype_b_loc@plt+0x110bf>
  413346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413350:	mov    rsi,QWORD PTR [r12]
  413354:	mov    r13,QWORD PTR [rbx+0x20]
  413358:	mov    rdi,QWORD PTR [r13+0x18]
  41335c:	mov    rdx,r14
  41335f:	mov    rcx,rbp
  413362:	call   QWORD PTR [r13+0x10]
  413366:	test   rbp,rbp
  413369:	je     413374 <__ctype_b_loc@plt+0x110a4>
  41336b:	test   rax,rax
  41336e:	je     413427 <__ctype_b_loc@plt+0x11157>
  413374:	add    QWORD PTR [r13+0x78],r14
  413378:	mov    r13,QWORD PTR [rsp+0x8]
  41337d:	mov    QWORD PTR [r12],rax
  413381:	mov    QWORD PTR [r12+0x10],rbp
  413386:	mov    rcx,QWORD PTR [r12+0x8]
  41338b:	lea    rdx,[rcx+0x1]
  41338f:	mov    QWORD PTR [r12+0x8],rdx
  413394:	mov    BYTE PTR [rax+rcx*1],0x3d
  413398:	mov    rbx,QWORD PTR [r13+0x40]
  41339c:	mov    rax,QWORD PTR [rbx]
  41339f:	lea    rcx,[rax-0x1]
  4133a3:	mov    QWORD PTR [rbx],rcx
  4133a6:	test   rax,rax
  4133a9:	je     4133c0 <__ctype_b_loc@plt+0x110f0>
  4133ab:	mov    rax,QWORD PTR [rbx+0x8]
  4133af:	lea    rcx,[rax+0x1]
  4133b3:	jmp    4133f2 <__ctype_b_loc@plt+0x11122>
  4133b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4133bf:	nop
  4133c0:	mov    rsi,QWORD PTR [rbx+0x18]
  4133c4:	mov    rdi,QWORD PTR [rbx+0x20]
  4133c8:	lea    rdx,[rsp+0x18]
  4133cd:	call   QWORD PTR [rbx+0x10]
  4133d0:	mov    ecx,0xffffffff
  4133d5:	test   rax,rax
  4133d8:	je     4133f9 <__ctype_b_loc@plt+0x11129>
  4133da:	mov    rdx,QWORD PTR [rsp+0x18]
  4133df:	test   rdx,rdx
  4133e2:	je     4133f9 <__ctype_b_loc@plt+0x11129>
  4133e4:	add    rdx,0xffffffffffffffff
  4133e8:	mov    QWORD PTR [rbx],rdx
  4133eb:	mov    rcx,rax
  4133ee:	add    rcx,0x1
  4133f2:	mov    QWORD PTR [rbx+0x8],rcx
  4133f6:	movzx  ecx,BYTE PTR [rax]
  4133f9:	mov    DWORD PTR [r13+0x0],ecx
  4133fd:	add    r15d,0x1
  413401:	cmp    ecx,0x3d
  413404:	je     4132e0 <__ctype_b_loc@plt+0x11010>
  41340a:	xor    eax,eax
  41340c:	cmp    ecx,DWORD PTR [rsp+0x24]
  413410:	setne  al
  413413:	neg    eax
  413415:	xor    eax,r15d
  413418:	add    rsp,0x28
  41341c:	pop    rbx
  41341d:	pop    r12
  41341f:	pop    r13
  413421:	pop    r14
  413423:	pop    r15
  413425:	pop    rbp
  413426:	ret    
  413427:	mov    rdi,QWORD PTR [rbx+0xa8]
  41342e:	test   rdi,rdi
  413431:	jne    41349d <__ctype_b_loc@plt+0x111cd>
  413433:	mov    BYTE PTR [rbx+0xa],0x4
  413437:	mov    rax,QWORD PTR [rbx+0x20]
  41343b:	cmp    QWORD PTR [rax+0x98],0x0
  413443:	je     41345f <__ctype_b_loc@plt+0x1118f>
  413445:	mov    esi,0x4
  41344a:	mov    rdi,rbx
  41344d:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  413452:	mov    rax,QWORD PTR [rbx+0x20]
  413456:	mov    rdi,rbx
  413459:	call   QWORD PTR [rax+0x98]
  41345f:	mov    edi,0x1
  413464:	call   402280 <exit@plt>
  413469:	mov    rax,QWORD PTR [rsp+0x10]
  41346e:	mov    rdi,QWORD PTR [rax+0xa8]
  413475:	test   rdi,rdi
  413478:	jne    41349d <__ctype_b_loc@plt+0x111cd>
  41347a:	mov    rax,QWORD PTR [rsp+0x10]
  41347f:	mov    BYTE PTR [rax+0xa],0x4
  413483:	mov    rax,QWORD PTR [rax+0x20]
  413487:	cmp    QWORD PTR [rax+0x98],0x0
  41348f:	je     41345f <__ctype_b_loc@plt+0x1118f>
  413491:	mov    esi,0x4
  413496:	mov    rbx,QWORD PTR [rsp+0x10]
  41349b:	jmp    41344a <__ctype_b_loc@plt+0x1117a>
  41349d:	mov    DWORD PTR [rdi+0xd0],0x4
  4134a7:	add    rdi,0x8
  4134ab:	mov    esi,0x1
  4134b0:	call   402230 <longjmp@plt>
  4134b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4134bf:	nop
  4134c0:	push   rbp
  4134c1:	push   r15
  4134c3:	push   r14
  4134c5:	push   r13
  4134c7:	push   r12
  4134c9:	push   rbx
  4134ca:	sub    rsp,0x28
  4134ce:	mov    QWORD PTR [rsp+0x20],rdx
  4134d3:	mov    r14,rsi
  4134d6:	mov    r13,rdi
  4134d9:	movabs rdx,0x7ffffffffffffffd
  4134e3:	mov    ebx,DWORD PTR [rdi]
  4134e5:	mov    r15,QWORD PTR [rdi+0x48]
  4134e9:	mov    rax,QWORD PTR [r15+0x8]
  4134ed:	mov    r12,QWORD PTR [r15+0x10]
  4134f1:	lea    rcx,[rax+0x1]
  4134f5:	cmp    rcx,r12
  4134f8:	mov    QWORD PTR [rsp+0x18],rdi
  4134fd:	jbe    41353c <__ctype_b_loc@plt+0x1126c>
  4134ff:	cmp    r12,rdx
  413502:	jbe    413519 <__ctype_b_loc@plt+0x11249>
  413504:	lea    rsi,[rip+0x17d7f]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  41350b:	xor    edx,edx
  41350d:	mov    rdi,r13
  413510:	call   413af0 <__ctype_b_loc@plt+0x11820>
  413515:	mov    r12,QWORD PTR [r15+0x10]
  413519:	mov    rax,r13
  41351c:	lea    r13,[r12+r12*1]
  413520:	mov    rdi,QWORD PTR [rax+0x38]
  413524:	cmp    r13,0xfffffffffffffffe
  413528:	jne    413541 <__ctype_b_loc@plt+0x11271>
  41352a:	lea    rsi,[rip+0x17888]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  413531:	xor    ebp,ebp
  413533:	xor    eax,eax
  413535:	call   404080 <__ctype_b_loc@plt+0x1db0>
  41353a:	jmp    413576 <__ctype_b_loc@plt+0x112a6>
  41353c:	mov    rbp,QWORD PTR [r15]
  41353f:	jmp    41358a <__ctype_b_loc@plt+0x112ba>
  413541:	mov    DWORD PTR [rsp+0x8],ebx
  413545:	mov    rsi,QWORD PTR [r15]
  413548:	mov    QWORD PTR [rsp],rdi
  41354c:	mov    rbx,QWORD PTR [rdi+0x20]
  413550:	mov    rdi,QWORD PTR [rbx+0x18]
  413554:	mov    rdx,r12
  413557:	mov    rcx,r13
  41355a:	call   QWORD PTR [rbx+0x10]
  41355d:	mov    rbp,rax
  413560:	test   r13,r13
  413563:	je     41356e <__ctype_b_loc@plt+0x1129e>
  413565:	test   rbp,rbp
  413568:	je     413a8c <__ctype_b_loc@plt+0x117bc>
  41356e:	add    QWORD PTR [rbx+0x78],r12
  413572:	mov    ebx,DWORD PTR [rsp+0x8]
  413576:	mov    QWORD PTR [r15],rbp
  413579:	mov    QWORD PTR [r15+0x10],r13
  41357d:	mov    rax,QWORD PTR [r15+0x8]
  413581:	lea    rcx,[rax+0x1]
  413585:	mov    r13,QWORD PTR [rsp+0x18]
  41358a:	mov    QWORD PTR [r15+0x8],rcx
  41358e:	mov    BYTE PTR [rbp+rax*1+0x0],bl
  413592:	mov    rbx,QWORD PTR [r13+0x40]
  413596:	mov    rax,QWORD PTR [rbx]
  413599:	lea    rcx,[rax-0x1]
  41359d:	mov    QWORD PTR [rbx],rcx
  4135a0:	test   rax,rax
  4135a3:	je     4135af <__ctype_b_loc@plt+0x112df>
  4135a5:	mov    rax,QWORD PTR [rbx+0x8]
  4135a9:	lea    rcx,[rax+0x1]
  4135ad:	jmp    4135e1 <__ctype_b_loc@plt+0x11311>
  4135af:	mov    rsi,QWORD PTR [rbx+0x18]
  4135b3:	mov    rdi,QWORD PTR [rbx+0x20]
  4135b7:	lea    rdx,[rsp+0x10]
  4135bc:	call   QWORD PTR [rbx+0x10]
  4135bf:	mov    ecx,0xffffffff
  4135c4:	test   rax,rax
  4135c7:	je     4135e8 <__ctype_b_loc@plt+0x11318>
  4135c9:	mov    rdx,QWORD PTR [rsp+0x10]
  4135ce:	test   rdx,rdx
  4135d1:	je     4135e8 <__ctype_b_loc@plt+0x11318>
  4135d3:	add    rdx,0xffffffffffffffff
  4135d7:	mov    QWORD PTR [rbx],rdx
  4135da:	mov    rcx,rax
  4135dd:	add    rcx,0x1
  4135e1:	mov    QWORD PTR [rbx+0x8],rcx
  4135e5:	movzx  ecx,BYTE PTR [rax]
  4135e8:	mov    DWORD PTR [r13+0x0],ecx
  4135ec:	cmp    ecx,0xd
  4135ef:	je     4135f6 <__ctype_b_loc@plt+0x11326>
  4135f1:	cmp    ecx,0xa
  4135f4:	jne    4135fe <__ctype_b_loc@plt+0x1132e>
  4135f6:	mov    rdi,r13
  4135f9:	call   413090 <__ctype_b_loc@plt+0x10dc0>
  4135fe:	test   r14,r14
  413601:	lea    rax,[rip+0x17c25]        # 42b22d <__ctype_b_loc@plt+0x28f5d>
  413608:	lea    rcx,[rip+0x17c07]        # 42b216 <__ctype_b_loc@plt+0x28f46>
  41360f:	cmove  rcx,rax
  413613:	mov    QWORD PTR [rsp],rcx
  413617:	mov    QWORD PTR [rsp+0x8],r14
  41361c:	jmp    413630 <__ctype_b_loc@plt+0x11360>
  41361e:	mov    edx,0x11f
  413623:	mov    rdi,r13
  413626:	mov    rsi,QWORD PTR [rsp]
  41362a:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41362f:	nop
  413630:	mov    r12d,DWORD PTR [r13+0x0]
  413634:	cmp    r12d,0xc
  413638:	jg     413650 <__ctype_b_loc@plt+0x11380>
  41363a:	cmp    r12d,0xffffffff
  41363e:	je     41361e <__ctype_b_loc@plt+0x1134e>
  413640:	cmp    r12d,0xa
  413644:	je     413670 <__ctype_b_loc@plt+0x113a0>
  413646:	jmp    4136d7 <__ctype_b_loc@plt+0x11407>
  41364b:	nop    DWORD PTR [rax+rax*1+0x0]
  413650:	cmp    r12d,0xd
  413654:	je     413670 <__ctype_b_loc@plt+0x113a0>
  413656:	cmp    r12d,0x5d
  41365a:	jne    4136d7 <__ctype_b_loc@plt+0x11407>
  41365c:	mov    rdi,r13
  41365f:	call   413190 <__ctype_b_loc@plt+0x10ec0>
  413664:	cmp    eax,DWORD PTR [rsp+0x20]
  413668:	jne    413630 <__ctype_b_loc@plt+0x11360>
  41366a:	jmp    4138f5 <__ctype_b_loc@plt+0x11625>
  41366f:	nop
  413670:	mov    rbx,QWORD PTR [r13+0x48]
  413674:	mov    rcx,QWORD PTR [rbx+0x8]
  413678:	mov    r15,QWORD PTR [rbx+0x10]
  41367c:	lea    rdx,[rcx+0x1]
  413680:	cmp    rdx,r15
  413683:	jbe    413749 <__ctype_b_loc@plt+0x11479>
  413689:	movabs rax,0x7ffffffffffffffd
  413693:	cmp    r15,rax
  413696:	jbe    4136ad <__ctype_b_loc@plt+0x113dd>
  413698:	xor    edx,edx
  41369a:	mov    rdi,r13
  41369d:	lea    rsi,[rip+0x17be6]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  4136a4:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4136a9:	mov    r15,QWORD PTR [rbx+0x10]
  4136ad:	lea    rbp,[r15+r15*1]
  4136b1:	mov    r13,QWORD PTR [r13+0x38]
  4136b5:	cmp    rbp,0xfffffffffffffffe
  4136b9:	jne    41374e <__ctype_b_loc@plt+0x1147e>
  4136bf:	xor    eax,eax
  4136c1:	mov    rdi,r13
  4136c4:	lea    rsi,[rip+0x176ee]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  4136cb:	call   404080 <__ctype_b_loc@plt+0x1db0>
  4136d0:	xor    eax,eax
  4136d2:	jmp    41377a <__ctype_b_loc@plt+0x114aa>
  4136d7:	test   r14,r14
  4136da:	je     4137b8 <__ctype_b_loc@plt+0x114e8>
  4136e0:	mov    r14,QWORD PTR [r13+0x48]
  4136e4:	mov    rcx,QWORD PTR [r14+0x8]
  4136e8:	mov    rbp,QWORD PTR [r14+0x10]
  4136ec:	lea    rdx,[rcx+0x1]
  4136f0:	cmp    rdx,rbp
  4136f3:	jbe    4137e7 <__ctype_b_loc@plt+0x11517>
  4136f9:	movabs rax,0x7ffffffffffffffd
  413703:	cmp    rbp,rax
  413706:	jbe    41371d <__ctype_b_loc@plt+0x1144d>
  413708:	xor    edx,edx
  41370a:	mov    rdi,r13
  41370d:	lea    rsi,[rip+0x17b76]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  413714:	call   413af0 <__ctype_b_loc@plt+0x11820>
  413719:	mov    rbp,QWORD PTR [r14+0x10]
  41371d:	mov    r15,rbp
  413720:	add    r15,rbp
  413723:	mov    r13,QWORD PTR [r13+0x38]
  413727:	cmp    r15,0xfffffffffffffffe
  41372b:	jne    4137ec <__ctype_b_loc@plt+0x1151c>
  413731:	xor    eax,eax
  413733:	mov    rdi,r13
  413736:	lea    rsi,[rip+0x1767c]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  41373d:	call   404080 <__ctype_b_loc@plt+0x1db0>
  413742:	xor    eax,eax
  413744:	jmp    413812 <__ctype_b_loc@plt+0x11542>
  413749:	mov    rax,QWORD PTR [rbx]
  41374c:	jmp    41378e <__ctype_b_loc@plt+0x114be>
  41374e:	mov    rsi,QWORD PTR [rbx]
  413751:	mov    r14,QWORD PTR [r13+0x20]
  413755:	mov    rdi,QWORD PTR [r14+0x18]
  413759:	mov    rdx,r15
  41375c:	mov    rcx,rbp
  41375f:	call   QWORD PTR [r14+0x10]
  413763:	test   rbp,rbp
  413766:	je     413771 <__ctype_b_loc@plt+0x114a1>
  413768:	test   rax,rax
  41376b:	je     413a49 <__ctype_b_loc@plt+0x11779>
  413771:	add    QWORD PTR [r14+0x78],r15
  413775:	mov    r14,QWORD PTR [rsp+0x8]
  41377a:	mov    QWORD PTR [rbx],rax
  41377d:	mov    QWORD PTR [rbx+0x10],rbp
  413781:	mov    rcx,QWORD PTR [rbx+0x8]
  413785:	lea    rdx,[rcx+0x1]
  413789:	mov    r13,QWORD PTR [rsp+0x18]
  41378e:	mov    QWORD PTR [rbx+0x8],rdx
  413792:	mov    BYTE PTR [rax+rcx*1],0xa
  413796:	mov    rdi,r13
  413799:	call   413090 <__ctype_b_loc@plt+0x10dc0>
  41379e:	test   r14,r14
  4137a1:	jne    413630 <__ctype_b_loc@plt+0x11360>
  4137a7:	mov    rax,QWORD PTR [r13+0x48]
  4137ab:	mov    QWORD PTR [rax+0x8],0x0
  4137b3:	jmp    413630 <__ctype_b_loc@plt+0x11360>
  4137b8:	mov    rbx,QWORD PTR [r13+0x40]
  4137bc:	mov    rax,QWORD PTR [rbx]
  4137bf:	lea    rcx,[rax-0x1]
  4137c3:	mov    QWORD PTR [rbx],rcx
  4137c6:	test   rax,rax
  4137c9:	je     4138a5 <__ctype_b_loc@plt+0x115d5>
  4137cf:	mov    rax,QWORD PTR [rbx+0x8]
  4137d3:	lea    rcx,[rax+0x1]
  4137d7:	mov    QWORD PTR [rbx+0x8],rcx
  4137db:	movzx  eax,BYTE PTR [rax]
  4137de:	mov    DWORD PTR [r13+0x0],eax
  4137e2:	jmp    413630 <__ctype_b_loc@plt+0x11360>
  4137e7:	mov    rax,QWORD PTR [r14]
  4137ea:	jmp    413826 <__ctype_b_loc@plt+0x11556>
  4137ec:	mov    rsi,QWORD PTR [r14]
  4137ef:	mov    rbx,QWORD PTR [r13+0x20]
  4137f3:	mov    rdi,QWORD PTR [rbx+0x18]
  4137f7:	mov    rdx,rbp
  4137fa:	mov    rcx,r15
  4137fd:	call   QWORD PTR [rbx+0x10]
  413800:	test   r15,r15
  413803:	je     41380e <__ctype_b_loc@plt+0x1153e>
  413805:	test   rax,rax
  413808:	je     413a49 <__ctype_b_loc@plt+0x11779>
  41380e:	add    QWORD PTR [rbx+0x78],rbp
  413812:	mov    QWORD PTR [r14],rax
  413815:	mov    QWORD PTR [r14+0x10],r15
  413819:	mov    rcx,QWORD PTR [r14+0x8]
  41381d:	lea    rdx,[rcx+0x1]
  413821:	mov    r13,QWORD PTR [rsp+0x18]
  413826:	mov    QWORD PTR [r14+0x8],rdx
  41382a:	mov    BYTE PTR [rax+rcx*1],r12b
  41382e:	mov    rbx,QWORD PTR [r13+0x40]
  413832:	mov    rax,QWORD PTR [rbx]
  413835:	lea    rcx,[rax-0x1]
  413839:	mov    QWORD PTR [rbx],rcx
  41383c:	test   rax,rax
  41383f:	je     41385e <__ctype_b_loc@plt+0x1158e>
  413841:	mov    rax,QWORD PTR [rbx+0x8]
  413845:	lea    rcx,[rax+0x1]
  413849:	mov    QWORD PTR [rbx+0x8],rcx
  41384d:	movzx  eax,BYTE PTR [rax]
  413850:	mov    DWORD PTR [r13+0x0],eax
  413854:	mov    r14,QWORD PTR [rsp+0x8]
  413859:	jmp    413630 <__ctype_b_loc@plt+0x11360>
  41385e:	mov    rsi,QWORD PTR [rbx+0x18]
  413862:	mov    rdi,QWORD PTR [rbx+0x20]
  413866:	lea    rdx,[rsp+0x10]
  41386b:	call   QWORD PTR [rbx+0x10]
  41386e:	mov    ecx,0xffffffff
  413873:	test   rax,rax
  413876:	je     4138e7 <__ctype_b_loc@plt+0x11617>
  413878:	mov    rdx,QWORD PTR [rsp+0x10]
  41387d:	test   rdx,rdx
  413880:	mov    r14,QWORD PTR [rsp+0x8]
  413885:	je     41389c <__ctype_b_loc@plt+0x115cc>
  413887:	add    rdx,0xffffffffffffffff
  41388b:	mov    QWORD PTR [rbx],rdx
  41388e:	mov    rcx,rax
  413891:	add    rcx,0x1
  413895:	mov    QWORD PTR [rbx+0x8],rcx
  413899:	movzx  ecx,BYTE PTR [rax]
  41389c:	mov    DWORD PTR [r13+0x0],ecx
  4138a0:	jmp    413630 <__ctype_b_loc@plt+0x11360>
  4138a5:	mov    rsi,QWORD PTR [rbx+0x18]
  4138a9:	mov    rdi,QWORD PTR [rbx+0x20]
  4138ad:	lea    rdx,[rsp+0x10]
  4138b2:	call   QWORD PTR [rbx+0x10]
  4138b5:	mov    ecx,0xffffffff
  4138ba:	test   rax,rax
  4138bd:	je     4138de <__ctype_b_loc@plt+0x1160e>
  4138bf:	mov    rdx,QWORD PTR [rsp+0x10]
  4138c4:	test   rdx,rdx
  4138c7:	je     4138de <__ctype_b_loc@plt+0x1160e>
  4138c9:	add    rdx,0xffffffffffffffff
  4138cd:	mov    QWORD PTR [rbx],rdx
  4138d0:	mov    rcx,rax
  4138d3:	add    rcx,0x1
  4138d7:	mov    QWORD PTR [rbx+0x8],rcx
  4138db:	movzx  ecx,BYTE PTR [rax]
  4138de:	mov    DWORD PTR [r13+0x0],ecx
  4138e2:	jmp    413630 <__ctype_b_loc@plt+0x11360>
  4138e7:	mov    r14,QWORD PTR [rsp+0x8]
  4138ec:	mov    DWORD PTR [r13+0x0],ecx
  4138f0:	jmp    413630 <__ctype_b_loc@plt+0x11360>
  4138f5:	mov    ebx,DWORD PTR [r13+0x0]
  4138f9:	mov    r15,QWORD PTR [r13+0x48]
  4138fd:	mov    rax,QWORD PTR [r15+0x8]
  413901:	mov    r12,QWORD PTR [r15+0x10]
  413905:	lea    rcx,[rax+0x1]
  413909:	cmp    rcx,r12
  41390c:	jbe    413955 <__ctype_b_loc@plt+0x11685>
  41390e:	movabs rax,0x7ffffffffffffffd
  413918:	cmp    r12,rax
  41391b:	jbe    413932 <__ctype_b_loc@plt+0x11662>
  41391d:	lea    rsi,[rip+0x17966]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  413924:	xor    edx,edx
  413926:	mov    rdi,r13
  413929:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41392e:	mov    r12,QWORD PTR [r15+0x10]
  413932:	mov    rax,r13
  413935:	lea    r13,[r12+r12*1]
  413939:	mov    rdi,QWORD PTR [rax+0x38]
  41393d:	cmp    r13,0xfffffffffffffffe
  413941:	jne    41395a <__ctype_b_loc@plt+0x1168a>
  413943:	lea    rsi,[rip+0x1746f]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  41394a:	xor    ebp,ebp
  41394c:	xor    eax,eax
  41394e:	call   404080 <__ctype_b_loc@plt+0x1db0>
  413953:	jmp    41398f <__ctype_b_loc@plt+0x116bf>
  413955:	mov    rbp,QWORD PTR [r15]
  413958:	jmp    4139a3 <__ctype_b_loc@plt+0x116d3>
  41395a:	mov    DWORD PTR [rsp+0x8],ebx
  41395e:	mov    rsi,QWORD PTR [r15]
  413961:	mov    QWORD PTR [rsp],rdi
  413965:	mov    rbx,QWORD PTR [rdi+0x20]
  413969:	mov    rdi,QWORD PTR [rbx+0x18]
  41396d:	mov    rdx,r12
  413970:	mov    rcx,r13
  413973:	call   QWORD PTR [rbx+0x10]
  413976:	mov    rbp,rax
  413979:	test   r13,r13
  41397c:	je     413987 <__ctype_b_loc@plt+0x116b7>
  41397e:	test   rbp,rbp
  413981:	je     413a8c <__ctype_b_loc@plt+0x117bc>
  413987:	add    QWORD PTR [rbx+0x78],r12
  41398b:	mov    ebx,DWORD PTR [rsp+0x8]
  41398f:	mov    QWORD PTR [r15],rbp
  413992:	mov    QWORD PTR [r15+0x10],r13
  413996:	mov    rax,QWORD PTR [r15+0x8]
  41399a:	lea    rcx,[rax+0x1]
  41399e:	mov    r13,QWORD PTR [rsp+0x18]
  4139a3:	mov    QWORD PTR [r15+0x8],rcx
  4139a7:	mov    BYTE PTR [rbp+rax*1+0x0],bl
  4139ab:	mov    rbx,QWORD PTR [r13+0x40]
  4139af:	mov    rax,QWORD PTR [rbx]
  4139b2:	lea    rcx,[rax-0x1]
  4139b6:	mov    QWORD PTR [rbx],rcx
  4139b9:	test   rax,rax
  4139bc:	je     4139c8 <__ctype_b_loc@plt+0x116f8>
  4139be:	mov    rax,QWORD PTR [rbx+0x8]
  4139c2:	lea    rcx,[rax+0x1]
  4139c6:	jmp    4139fa <__ctype_b_loc@plt+0x1172a>
  4139c8:	mov    rsi,QWORD PTR [rbx+0x18]
  4139cc:	mov    rdi,QWORD PTR [rbx+0x20]
  4139d0:	lea    rdx,[rsp+0x10]
  4139d5:	call   QWORD PTR [rbx+0x10]
  4139d8:	mov    ecx,0xffffffff
  4139dd:	test   rax,rax
  4139e0:	je     413a01 <__ctype_b_loc@plt+0x11731>
  4139e2:	mov    rdx,QWORD PTR [rsp+0x10]
  4139e7:	test   rdx,rdx
  4139ea:	je     413a01 <__ctype_b_loc@plt+0x11731>
  4139ec:	add    rdx,0xffffffffffffffff
  4139f0:	mov    QWORD PTR [rbx],rdx
  4139f3:	mov    rcx,rax
  4139f6:	add    rcx,0x1
  4139fa:	mov    QWORD PTR [rbx+0x8],rcx
  4139fe:	movzx  ecx,BYTE PTR [rax]
  413a01:	mov    DWORD PTR [r13+0x0],ecx
  413a05:	test   r14,r14
  413a08:	je     413a3a <__ctype_b_loc@plt+0x1176a>
  413a0a:	mov    rax,QWORD PTR [r13+0x48]
  413a0e:	mov    rdi,QWORD PTR [rsp+0x20]
  413a13:	movsxd rcx,edi
  413a16:	mov    rsi,QWORD PTR [rax]
  413a19:	mov    rdx,QWORD PTR [rax+0x8]
  413a1d:	add    rsi,rcx
  413a20:	add    rsi,0x2
  413a24:	lea    eax,[rdi+rdi*1]
  413a27:	add    eax,0x4
  413a2a:	cdqe   
  413a2c:	sub    rdx,rax
  413a2f:	mov    rdi,r13
  413a32:	call   414680 <__ctype_b_loc@plt+0x123b0>
  413a37:	mov    QWORD PTR [r14],rax
  413a3a:	add    rsp,0x28
  413a3e:	pop    rbx
  413a3f:	pop    r12
  413a41:	pop    r13
  413a43:	pop    r14
  413a45:	pop    r15
  413a47:	pop    rbp
  413a48:	ret    
  413a49:	mov    rdi,QWORD PTR [r13+0xa8]
  413a50:	test   rdi,rdi
  413a53:	jne    413acc <__ctype_b_loc@plt+0x117fc>
  413a55:	mov    BYTE PTR [r13+0xa],0x4
  413a5a:	mov    rax,QWORD PTR [r13+0x20]
  413a5e:	cmp    QWORD PTR [rax+0x98],0x0
  413a66:	je     413a82 <__ctype_b_loc@plt+0x117b2>
  413a68:	mov    esi,0x4
  413a6d:	mov    rdi,r13
  413a70:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  413a75:	mov    rax,QWORD PTR [r13+0x20]
  413a79:	mov    rdi,r13
  413a7c:	call   QWORD PTR [rax+0x98]
  413a82:	mov    edi,0x1
  413a87:	call   402280 <exit@plt>
  413a8c:	mov    rax,QWORD PTR [rsp]
  413a90:	mov    rdi,QWORD PTR [rax+0xa8]
  413a97:	test   rdi,rdi
  413a9a:	jne    413acc <__ctype_b_loc@plt+0x117fc>
  413a9c:	mov    rax,QWORD PTR [rsp]
  413aa0:	mov    BYTE PTR [rax+0xa],0x4
  413aa4:	mov    rax,QWORD PTR [rax+0x20]
  413aa8:	cmp    QWORD PTR [rax+0x98],0x0
  413ab0:	je     413a82 <__ctype_b_loc@plt+0x117b2>
  413ab2:	mov    esi,0x4
  413ab7:	mov    rbx,QWORD PTR [rsp]
  413abb:	mov    rdi,rbx
  413abe:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  413ac3:	mov    rax,QWORD PTR [rbx+0x20]
  413ac7:	mov    rdi,rbx
  413aca:	jmp    413a7c <__ctype_b_loc@plt+0x117ac>
  413acc:	mov    DWORD PTR [rdi+0xd0],0x4
  413ad6:	add    rdi,0x8
  413ada:	mov    esi,0x1
  413adf:	call   402230 <longjmp@plt>
  413ae4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413aee:	xchg   ax,ax
  413af0:	push   rbp
  413af1:	push   r15
  413af3:	push   r14
  413af5:	push   r13
  413af7:	push   r12
  413af9:	push   rbx
  413afa:	sub    rsp,0x78
  413afe:	mov    r13d,edx
  413b01:	mov    rbp,rsi
  413b04:	mov    r12,rdi
  413b07:	mov    rsi,QWORD PTR [rdi+0x50]
  413b0b:	add    rsi,0x18
  413b0f:	lea    rbx,[rsp+0x20]
  413b14:	mov    edx,0x50
  413b19:	mov    rdi,rbx
  413b1c:	call   4046c0 <__ctype_b_loc@plt+0x23f0>
  413b21:	mov    rdi,QWORD PTR [r12+0x38]
  413b26:	mov    ecx,DWORD PTR [r12+0x4]
  413b2b:	lea    rsi,[rip+0x172ae]        # 42ade0 <__ctype_b_loc@plt+0x28b10>
  413b32:	xor    eax,eax
  413b34:	mov    rdx,rbx
  413b37:	mov    r8,rbp
  413b3a:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  413b3f:	test   r13d,r13d
  413b42:	je     413cc8 <__ctype_b_loc@plt+0x119f8>
  413b48:	mov    r14,rax
  413b4b:	mov    rbp,QWORD PTR [r12+0x38]
  413b50:	lea    eax,[r13-0x11c]
  413b57:	cmp    eax,0x2
  413b5a:	ja     413bc3 <__ctype_b_loc@plt+0x118f3>
  413b5c:	mov    r15,QWORD PTR [r12+0x48]
  413b61:	mov    rax,QWORD PTR [r15+0x8]
  413b65:	mov    rbx,QWORD PTR [r15+0x10]
  413b69:	lea    rcx,[rax+0x1]
  413b6d:	cmp    rcx,rbx
  413b70:	jbe    413bed <__ctype_b_loc@plt+0x1191d>
  413b72:	movabs rax,0x7ffffffffffffffe
  413b7c:	mov    QWORD PTR [rsp+0x18],rbp
  413b81:	mov    rdi,rbp
  413b84:	cmp    rbx,rax
  413b87:	jb     413ba3 <__ctype_b_loc@plt+0x118d3>
  413b89:	lea    rsi,[rip+0x176fa]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  413b90:	xor    edx,edx
  413b92:	mov    rdi,r12
  413b95:	call   413af0 <__ctype_b_loc@plt+0x11820>
  413b9a:	mov    rbx,QWORD PTR [r15+0x10]
  413b9e:	mov    rdi,QWORD PTR [r12+0x38]
  413ba3:	lea    rbp,[rbx+rbx*1]
  413ba7:	cmp    rbp,0xfffffffffffffffe
  413bab:	jne    413c0c <__ctype_b_loc@plt+0x1193c>
  413bad:	lea    rsi,[rip+0x17205]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  413bb4:	xor    r13d,r13d
  413bb7:	xor    eax,eax
  413bb9:	call   404080 <__ctype_b_loc@plt+0x1db0>
  413bbe:	jmp    413c8e <__ctype_b_loc@plt+0x119be>
  413bc3:	cmp    r13d,0x100
  413bca:	jg     413bf5 <__ctype_b_loc@plt+0x11925>
  413bcc:	call   4022d0 <__ctype_b_loc@plt>
  413bd1:	mov    rax,QWORD PTR [rax]
  413bd4:	movsxd rcx,r13d
  413bd7:	test   BYTE PTR [rax+rcx*2],0x2
  413bdb:	jne    413c6c <__ctype_b_loc@plt+0x1199c>
  413be1:	lea    rsi,[rip+0x17673]        # 42b25b <__ctype_b_loc@plt+0x28f8b>
  413be8:	jmp    413c73 <__ctype_b_loc@plt+0x119a3>
  413bed:	mov    r13,QWORD PTR [r15]
  413bf0:	jmp    413ca2 <__ctype_b_loc@plt+0x119d2>
  413bf5:	movsxd rax,r13d
  413bf8:	lea    rcx,[rip+0x1cdd1]        # 4309d0 <__ctype_b_loc@plt+0x2e700>
  413bff:	mov    rcx,QWORD PTR [rcx+rax*8-0x808]
  413c07:	jmp    413cb4 <__ctype_b_loc@plt+0x119e4>
  413c0c:	mov    rsi,QWORD PTR [r15]
  413c0f:	mov    QWORD PTR [rsp+0x8],rdi
  413c14:	mov    rax,QWORD PTR [rdi+0x20]
  413c18:	mov    rdi,QWORD PTR [rax+0x18]
  413c1c:	mov    rdx,rbx
  413c1f:	mov    rcx,rbp
  413c22:	mov    QWORD PTR [rsp+0x10],rax
  413c27:	call   QWORD PTR [rax+0x10]
  413c2a:	mov    r13,rax
  413c2d:	test   rbp,rbp
  413c30:	je     413c85 <__ctype_b_loc@plt+0x119b5>
  413c32:	test   r13,r13
  413c35:	jne    413c85 <__ctype_b_loc@plt+0x119b5>
  413c37:	mov    rbx,QWORD PTR [rsp+0x8]
  413c3c:	mov    rdi,QWORD PTR [rbx+0xa8]
  413c43:	test   rdi,rdi
  413c46:	jne    413d27 <__ctype_b_loc@plt+0x11a57>
  413c4c:	mov    BYTE PTR [rbx+0xa],0x4
  413c50:	mov    rax,QWORD PTR [rbx+0x20]
  413c54:	cmp    QWORD PTR [rax+0x98],0x0
  413c5c:	je     413d05 <__ctype_b_loc@plt+0x11a35>
  413c62:	mov    esi,0x4
  413c67:	jmp    413cf0 <__ctype_b_loc@plt+0x11a20>
  413c6c:	lea    rsi,[rip+0x175df]        # 42b252 <__ctype_b_loc@plt+0x28f82>
  413c73:	xor    eax,eax
  413c75:	mov    rdi,rbp
  413c78:	mov    edx,r13d
  413c7b:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  413c80:	mov    rcx,rax
  413c83:	jmp    413cb4 <__ctype_b_loc@plt+0x119e4>
  413c85:	mov    rax,QWORD PTR [rsp+0x10]
  413c8a:	add    QWORD PTR [rax+0x78],rbx
  413c8e:	mov    QWORD PTR [r15],r13
  413c91:	mov    QWORD PTR [r15+0x10],rbp
  413c95:	mov    rax,QWORD PTR [r15+0x8]
  413c99:	lea    rcx,[rax+0x1]
  413c9d:	mov    rbp,QWORD PTR [rsp+0x18]
  413ca2:	mov    QWORD PTR [r15+0x8],rcx
  413ca6:	mov    BYTE PTR [r13+rax*1+0x0],0x0
  413cac:	mov    rax,QWORD PTR [r12+0x48]
  413cb1:	mov    rcx,QWORD PTR [rax]
  413cb4:	lea    rsi,[rip+0x1758a]        # 42b245 <__ctype_b_loc@plt+0x28f75>
  413cbb:	xor    eax,eax
  413cbd:	mov    rdi,rbp
  413cc0:	mov    rdx,r14
  413cc3:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  413cc8:	mov    rbx,QWORD PTR [r12+0x38]
  413ccd:	mov    rdi,QWORD PTR [rbx+0xa8]
  413cd4:	test   rdi,rdi
  413cd7:	jne    413d0f <__ctype_b_loc@plt+0x11a3f>
  413cd9:	mov    BYTE PTR [rbx+0xa],0x3
  413cdd:	mov    rax,QWORD PTR [rbx+0x20]
  413ce1:	cmp    QWORD PTR [rax+0x98],0x0
  413ce9:	je     413d05 <__ctype_b_loc@plt+0x11a35>
  413ceb:	mov    esi,0x3
  413cf0:	mov    rdi,rbx
  413cf3:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  413cf8:	mov    rax,QWORD PTR [rbx+0x20]
  413cfc:	mov    rdi,rbx
  413cff:	call   QWORD PTR [rax+0x98]
  413d05:	mov    edi,0x1
  413d0a:	call   402280 <exit@plt>
  413d0f:	mov    DWORD PTR [rdi+0xd0],0x3
  413d19:	add    rdi,0x8
  413d1d:	mov    esi,0x1
  413d22:	call   402230 <longjmp@plt>
  413d27:	mov    DWORD PTR [rdi+0xd0],0x4
  413d31:	jmp    413d19 <__ctype_b_loc@plt+0x11a49>
  413d33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413d3d:	nop    DWORD PTR [rax]
  413d40:	push   rbp
  413d41:	push   r15
  413d43:	push   r14
  413d45:	push   r13
  413d47:	push   r12
  413d49:	push   rbx
  413d4a:	sub    rsp,0x38
  413d4e:	mov    QWORD PTR [rsp+0x28],rsi
  413d53:	mov    r15,rdi
  413d56:	mov    r14d,DWORD PTR [rdi]
  413d59:	mov    QWORD PTR [rsp+0x18],rdi
  413d5e:	xchg   ax,ax
  413d60:	mov    r13,QWORD PTR [r15+0x48]
  413d64:	mov    rcx,QWORD PTR [r13+0x8]
  413d68:	mov    rbp,QWORD PTR [r13+0x10]
  413d6c:	lea    rdx,[rcx+0x1]
  413d70:	cmp    rdx,rbp
  413d73:	jbe    413dc0 <__ctype_b_loc@plt+0x11af0>
  413d75:	movabs rax,0x7ffffffffffffffd
  413d7f:	cmp    rbp,rax
  413d82:	jbe    413d99 <__ctype_b_loc@plt+0x11ac9>
  413d84:	xor    edx,edx
  413d86:	mov    rdi,r15
  413d89:	lea    rsi,[rip+0x174fa]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  413d90:	call   413af0 <__ctype_b_loc@plt+0x11820>
  413d95:	mov    rbp,QWORD PTR [r13+0x10]
  413d99:	mov    rbx,rbp
  413d9c:	add    rbx,rbp
  413d9f:	mov    r12,QWORD PTR [r15+0x38]
  413da3:	cmp    rbx,0xfffffffffffffffe
  413da7:	jne    413dd0 <__ctype_b_loc@plt+0x11b00>
  413da9:	xor    eax,eax
  413dab:	mov    rdi,r12
  413dae:	lea    rsi,[rip+0x17004]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  413db5:	call   404080 <__ctype_b_loc@plt+0x1db0>
  413dba:	xor    eax,eax
  413dbc:	jmp    413dfe <__ctype_b_loc@plt+0x11b2e>
  413dbe:	xchg   ax,ax
  413dc0:	mov    rax,QWORD PTR [r13+0x0]
  413dc4:	jmp    413e0e <__ctype_b_loc@plt+0x11b3e>
  413dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413dd0:	mov    rsi,QWORD PTR [r13+0x0]
  413dd4:	mov    r15,QWORD PTR [r12+0x20]
  413dd9:	mov    rdi,QWORD PTR [r15+0x18]
  413ddd:	mov    rdx,rbp
  413de0:	mov    rcx,rbx
  413de3:	call   QWORD PTR [r15+0x10]
  413de7:	test   rbx,rbx
  413dea:	je     413df5 <__ctype_b_loc@plt+0x11b25>
  413dec:	test   rax,rax
  413def:	je     4140a9 <__ctype_b_loc@plt+0x11dd9>
  413df5:	add    QWORD PTR [r15+0x78],rbp
  413df9:	mov    r15,QWORD PTR [rsp+0x18]
  413dfe:	mov    QWORD PTR [r13+0x0],rax
  413e02:	mov    QWORD PTR [r13+0x10],rbx
  413e06:	mov    rcx,QWORD PTR [r13+0x8]
  413e0a:	lea    rdx,[rcx+0x1]
  413e0e:	mov    QWORD PTR [r13+0x8],rdx
  413e12:	mov    BYTE PTR [rax+rcx*1],r14b
  413e16:	mov    rbx,QWORD PTR [r15+0x40]
  413e1a:	mov    rax,QWORD PTR [rbx]
  413e1d:	lea    rcx,[rax-0x1]
  413e21:	mov    QWORD PTR [rbx],rcx
  413e24:	test   rax,rax
  413e27:	je     413e40 <__ctype_b_loc@plt+0x11b70>
  413e29:	mov    rax,QWORD PTR [rbx+0x8]
  413e2d:	lea    rcx,[rax+0x1]
  413e31:	jmp    413e73 <__ctype_b_loc@plt+0x11ba3>
  413e33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413e3d:	nop    DWORD PTR [rax]
  413e40:	mov    rsi,QWORD PTR [rbx+0x18]
  413e44:	mov    rdi,QWORD PTR [rbx+0x20]
  413e48:	lea    rdx,[rsp+0x10]
  413e4d:	call   QWORD PTR [rbx+0x10]
  413e50:	mov    r14d,0xffffffff
  413e56:	test   rax,rax
  413e59:	je     413e7b <__ctype_b_loc@plt+0x11bab>
  413e5b:	mov    rcx,QWORD PTR [rsp+0x10]
  413e60:	test   rcx,rcx
  413e63:	je     413e7b <__ctype_b_loc@plt+0x11bab>
  413e65:	add    rcx,0xffffffffffffffff
  413e69:	mov    QWORD PTR [rbx],rcx
  413e6c:	mov    rcx,rax
  413e6f:	add    rcx,0x1
  413e73:	mov    QWORD PTR [rbx+0x8],rcx
  413e77:	movzx  r14d,BYTE PTR [rax]
  413e7b:	mov    DWORD PTR [r15],r14d
  413e7e:	call   4022d0 <__ctype_b_loc@plt>
  413e83:	cmp    r14d,0x2e
  413e87:	je     413d60 <__ctype_b_loc@plt+0x11a90>
  413e8d:	mov    rbx,rax
  413e90:	mov    rax,QWORD PTR [rax]
  413e93:	movsxd rcx,r14d
  413e96:	movzx  eax,WORD PTR [rax+rcx*2]
  413e9a:	and    eax,0x800
  413e9f:	test   ax,ax
  413ea2:	jne    413d60 <__ctype_b_loc@plt+0x11a90>
  413ea8:	lea    rdi,[rip+0x173f4]        # 42b2a3 <__ctype_b_loc@plt+0x28fd3>
  413eaf:	mov    edx,0x3
  413eb4:	mov    esi,r14d
  413eb7:	call   402140 <memchr@plt>
  413ebc:	test   rax,rax
  413ebf:	mov    QWORD PTR [rsp+0x30],rbx
  413ec4:	je     414196 <__ctype_b_loc@plt+0x11ec6>
  413eca:	mov    rbp,QWORD PTR [r15+0x48]
  413ece:	mov    rax,QWORD PTR [rbp+0x8]
  413ed2:	mov    r13,QWORD PTR [rbp+0x10]
  413ed6:	lea    rcx,[rax+0x1]
  413eda:	cmp    rcx,r13
  413edd:	jbe    413f25 <__ctype_b_loc@plt+0x11c55>
  413edf:	movabs rax,0x7ffffffffffffffd
  413ee9:	cmp    r13,rax
  413eec:	jbe    413f03 <__ctype_b_loc@plt+0x11c33>
  413eee:	lea    rsi,[rip+0x17395]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  413ef5:	xor    edx,edx
  413ef7:	mov    rdi,r15
  413efa:	call   413af0 <__ctype_b_loc@plt+0x11820>
  413eff:	mov    r13,QWORD PTR [rbp+0x10]
  413f03:	mov    r12,r13
  413f06:	add    r12,r13
  413f09:	mov    rdi,QWORD PTR [r15+0x38]
  413f0d:	cmp    r12,0xfffffffffffffffe
  413f11:	jne    413f2b <__ctype_b_loc@plt+0x11c5b>
  413f13:	lea    rsi,[rip+0x16e9f]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  413f1a:	xor    ebx,ebx
  413f1c:	xor    eax,eax
  413f1e:	call   404080 <__ctype_b_loc@plt+0x1db0>
  413f23:	jmp    413f60 <__ctype_b_loc@plt+0x11c90>
  413f25:	mov    rbx,QWORD PTR [rbp+0x0]
  413f29:	jmp    413f70 <__ctype_b_loc@plt+0x11ca0>
  413f2b:	mov    rsi,QWORD PTR [rbp+0x0]
  413f2f:	mov    QWORD PTR [rsp+0x8],rdi
  413f34:	mov    r15,QWORD PTR [rdi+0x20]
  413f38:	mov    rdi,QWORD PTR [r15+0x18]
  413f3c:	mov    rdx,r13
  413f3f:	mov    rcx,r12
  413f42:	call   QWORD PTR [r15+0x10]
  413f46:	mov    rbx,rax
  413f49:	test   r12,r12
  413f4c:	je     413f57 <__ctype_b_loc@plt+0x11c87>
  413f4e:	test   rbx,rbx
  413f51:	je     4140e6 <__ctype_b_loc@plt+0x11e16>
  413f57:	add    QWORD PTR [r15+0x78],r13
  413f5b:	mov    r15,QWORD PTR [rsp+0x18]
  413f60:	mov    QWORD PTR [rbp+0x0],rbx
  413f64:	mov    QWORD PTR [rbp+0x10],r12
  413f68:	mov    rax,QWORD PTR [rbp+0x8]
  413f6c:	lea    rcx,[rax+0x1]
  413f70:	mov    QWORD PTR [rbp+0x8],rcx
  413f74:	mov    BYTE PTR [rbx+rax*1],r14b
  413f78:	mov    rbx,QWORD PTR [r15+0x40]
  413f7c:	mov    rax,QWORD PTR [rbx]
  413f7f:	lea    rcx,[rax-0x1]
  413f83:	mov    QWORD PTR [rbx],rcx
  413f86:	test   rax,rax
  413f89:	je     413f95 <__ctype_b_loc@plt+0x11cc5>
  413f8b:	mov    rax,QWORD PTR [rbx+0x8]
  413f8f:	lea    rcx,[rax+0x1]
  413f93:	jmp    413fc8 <__ctype_b_loc@plt+0x11cf8>
  413f95:	mov    rsi,QWORD PTR [rbx+0x18]
  413f99:	mov    rdi,QWORD PTR [rbx+0x20]
  413f9d:	lea    rdx,[rsp+0x10]
  413fa2:	call   QWORD PTR [rbx+0x10]
  413fa5:	mov    r14d,0xffffffff
  413fab:	test   rax,rax
  413fae:	je     413fd0 <__ctype_b_loc@plt+0x11d00>
  413fb0:	mov    rcx,QWORD PTR [rsp+0x10]
  413fb5:	test   rcx,rcx
  413fb8:	je     413fd0 <__ctype_b_loc@plt+0x11d00>
  413fba:	add    rcx,0xffffffffffffffff
  413fbe:	mov    QWORD PTR [rbx],rcx
  413fc1:	mov    rcx,rax
  413fc4:	add    rcx,0x1
  413fc8:	mov    QWORD PTR [rbx+0x8],rcx
  413fcc:	movzx  r14d,BYTE PTR [rax]
  413fd0:	mov    DWORD PTR [r15],r14d
  413fd3:	cmp    r14d,0x3f
  413fd7:	ja     414196 <__ctype_b_loc@plt+0x11ec6>
  413fdd:	mov    eax,0x1
  413fe2:	shlx   rax,rax,r14
  413fe7:	movabs rcx,0x280000000001
  413ff1:	and    rcx,rax
  413ff4:	je     414196 <__ctype_b_loc@plt+0x11ec6>
  413ffa:	mov    rbp,QWORD PTR [r15+0x48]
  413ffe:	mov    rax,QWORD PTR [rbp+0x8]
  414002:	mov    r13,QWORD PTR [rbp+0x10]
  414006:	lea    rcx,[rax+0x1]
  41400a:	cmp    rcx,r13
  41400d:	jbe    414055 <__ctype_b_loc@plt+0x11d85>
  41400f:	movabs rax,0x7ffffffffffffffd
  414019:	cmp    r13,rax
  41401c:	jbe    414033 <__ctype_b_loc@plt+0x11d63>
  41401e:	lea    rsi,[rip+0x17265]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  414025:	xor    edx,edx
  414027:	mov    rdi,r15
  41402a:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41402f:	mov    r13,QWORD PTR [rbp+0x10]
  414033:	mov    r12,r13
  414036:	add    r12,r13
  414039:	mov    rdi,QWORD PTR [r15+0x38]
  41403d:	cmp    r12,0xfffffffffffffffe
  414041:	jne    41405b <__ctype_b_loc@plt+0x11d8b>
  414043:	lea    rsi,[rip+0x16d6f]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  41404a:	xor    ebx,ebx
  41404c:	xor    eax,eax
  41404e:	call   404080 <__ctype_b_loc@plt+0x1db0>
  414053:	jmp    41408c <__ctype_b_loc@plt+0x11dbc>
  414055:	mov    rbx,QWORD PTR [rbp+0x0]
  414059:	jmp    41409c <__ctype_b_loc@plt+0x11dcc>
  41405b:	mov    rsi,QWORD PTR [rbp+0x0]
  41405f:	mov    QWORD PTR [rsp+0x8],rdi
  414064:	mov    r15,QWORD PTR [rdi+0x20]
  414068:	mov    rdi,QWORD PTR [r15+0x18]
  41406c:	mov    rdx,r13
  41406f:	mov    rcx,r12
  414072:	call   QWORD PTR [r15+0x10]
  414076:	mov    rbx,rax
  414079:	test   r12,r12
  41407c:	je     414083 <__ctype_b_loc@plt+0x11db3>
  41407e:	test   rbx,rbx
  414081:	je     4140e6 <__ctype_b_loc@plt+0x11e16>
  414083:	add    QWORD PTR [r15+0x78],r13
  414087:	mov    r15,QWORD PTR [rsp+0x18]
  41408c:	mov    QWORD PTR [rbp+0x0],rbx
  414090:	mov    QWORD PTR [rbp+0x10],r12
  414094:	mov    rax,QWORD PTR [rbp+0x8]
  414098:	lea    rcx,[rax+0x1]
  41409c:	mov    QWORD PTR [rbp+0x8],rcx
  4140a0:	mov    BYTE PTR [rbx+rax*1],r14b
  4140a4:	jmp    41413b <__ctype_b_loc@plt+0x11e6b>
  4140a9:	mov    rdi,QWORD PTR [r12+0xa8]
  4140b1:	test   rdi,rdi
  4140b4:	jne    414664 <__ctype_b_loc@plt+0x12394>
  4140ba:	mov    BYTE PTR [r12+0xa],0x4
  4140c0:	mov    rax,QWORD PTR [r12+0x20]
  4140c5:	cmp    QWORD PTR [rax+0x98],0x0
  4140cd:	je     414131 <__ctype_b_loc@plt+0x11e61>
  4140cf:	mov    esi,0x4
  4140d4:	mov    rdi,r12
  4140d7:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  4140dc:	mov    rax,QWORD PTR [r12+0x20]
  4140e1:	mov    rdi,r12
  4140e4:	jmp    41412b <__ctype_b_loc@plt+0x11e5b>
  4140e6:	mov    rax,QWORD PTR [rsp+0x8]
  4140eb:	mov    rdi,QWORD PTR [rax+0xa8]
  4140f2:	test   rdi,rdi
  4140f5:	jne    414664 <__ctype_b_loc@plt+0x12394>
  4140fb:	mov    rax,QWORD PTR [rsp+0x8]
  414100:	mov    BYTE PTR [rax+0xa],0x4
  414104:	mov    rax,QWORD PTR [rax+0x20]
  414108:	cmp    QWORD PTR [rax+0x98],0x0
  414110:	je     414131 <__ctype_b_loc@plt+0x11e61>
  414112:	mov    esi,0x4
  414117:	mov    rbx,QWORD PTR [rsp+0x8]
  41411c:	mov    rdi,rbx
  41411f:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  414124:	mov    rax,QWORD PTR [rbx+0x20]
  414128:	mov    rdi,rbx
  41412b:	call   QWORD PTR [rax+0x98]
  414131:	mov    edi,0x1
  414136:	call   402280 <exit@plt>
  41413b:	mov    rbx,QWORD PTR [r15+0x40]
  41413f:	mov    rax,QWORD PTR [rbx]
  414142:	lea    rcx,[rax-0x1]
  414146:	mov    QWORD PTR [rbx],rcx
  414149:	test   rax,rax
  41414c:	je     414158 <__ctype_b_loc@plt+0x11e88>
  41414e:	mov    rax,QWORD PTR [rbx+0x8]
  414152:	lea    rcx,[rax+0x1]
  414156:	jmp    41418b <__ctype_b_loc@plt+0x11ebb>
  414158:	mov    rsi,QWORD PTR [rbx+0x18]
  41415c:	mov    rdi,QWORD PTR [rbx+0x20]
  414160:	lea    rdx,[rsp+0x10]
  414165:	call   QWORD PTR [rbx+0x10]
  414168:	mov    r14d,0xffffffff
  41416e:	test   rax,rax
  414171:	je     414193 <__ctype_b_loc@plt+0x11ec3>
  414173:	mov    rcx,QWORD PTR [rsp+0x10]
  414178:	test   rcx,rcx
  41417b:	je     414193 <__ctype_b_loc@plt+0x11ec3>
  41417d:	add    rcx,0xffffffffffffffff
  414181:	mov    QWORD PTR [rbx],rcx
  414184:	mov    rcx,rax
  414187:	add    rcx,0x1
  41418b:	mov    QWORD PTR [rbx+0x8],rcx
  41418f:	movzx  r14d,BYTE PTR [rax]
  414193:	mov    DWORD PTR [r15],r14d
  414196:	mov    r12,QWORD PTR [r15+0x48]
  41419a:	lea    rbp,[r12+0x8]
  41419f:	mov    rcx,QWORD PTR [r12+0x8]
  4141a4:	mov    r13,QWORD PTR [r12+0x10]
  4141a9:	lea    rdx,[rcx+0x1]
  4141ad:	lea    rbx,[r12+0x10]
  4141b2:	cmp    rdx,r13
  4141b5:	seta   al
  4141b8:	cmp    r14d,0x5f
  4141bc:	je     4141d9 <__ctype_b_loc@plt+0x11f09>
  4141be:	mov    rsi,QWORD PTR [rsp+0x30]
  4141c3:	mov    rsi,QWORD PTR [rsi]
  4141c6:	movsxd rdi,r14d
  4141c9:	movzx  esi,WORD PTR [rsi+rdi*2]
  4141cd:	and    esi,0x8
  4141d0:	test   si,si
  4141d3:	je     414287 <__ctype_b_loc@plt+0x11fb7>
  4141d9:	test   al,0x1
  4141db:	je     41422f <__ctype_b_loc@plt+0x11f5f>
  4141dd:	mov    QWORD PTR [rsp+0x8],rbp
  4141e2:	movabs rax,0x7ffffffffffffffd
  4141ec:	cmp    r13,rax
  4141ef:	jbe    414205 <__ctype_b_loc@plt+0x11f35>
  4141f1:	xor    edx,edx
  4141f3:	mov    rdi,r15
  4141f6:	lea    rsi,[rip+0x1708d]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  4141fd:	call   413af0 <__ctype_b_loc@plt+0x11820>
  414202:	mov    r13,QWORD PTR [rbx]
  414205:	mov    QWORD PTR [rsp+0x20],rbx
  41420a:	mov    rbx,r13
  41420d:	add    rbx,r13
  414210:	mov    r15,QWORD PTR [r15+0x38]
  414214:	cmp    rbx,0xfffffffffffffffe
  414218:	jne    414235 <__ctype_b_loc@plt+0x11f65>
  41421a:	xor    eax,eax
  41421c:	mov    rdi,r15
  41421f:	lea    rsi,[rip+0x16b93]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  414226:	call   404080 <__ctype_b_loc@plt+0x1db0>
  41422b:	xor    eax,eax
  41422d:	jmp    41425c <__ctype_b_loc@plt+0x11f8c>
  41422f:	mov    rax,QWORD PTR [r12]
  414233:	jmp    41427a <__ctype_b_loc@plt+0x11faa>
  414235:	mov    rsi,QWORD PTR [r12]
  414239:	mov    rbp,QWORD PTR [r15+0x20]
  41423d:	mov    rdi,QWORD PTR [rbp+0x18]
  414241:	mov    rdx,r13
  414244:	mov    rcx,rbx
  414247:	call   QWORD PTR [rbp+0x10]
  41424a:	test   rbx,rbx
  41424d:	je     414258 <__ctype_b_loc@plt+0x11f88>
  41424f:	test   rax,rax
  414252:	je     4145ed <__ctype_b_loc@plt+0x1231d>
  414258:	add    QWORD PTR [rbp+0x78],r13
  41425c:	mov    rbp,QWORD PTR [rsp+0x8]
  414261:	mov    QWORD PTR [r12],rax
  414265:	mov    rcx,QWORD PTR [rsp+0x20]
  41426a:	mov    QWORD PTR [rcx],rbx
  41426d:	mov    rcx,QWORD PTR [rbp+0x0]
  414271:	lea    rdx,[rcx+0x1]
  414275:	mov    r15,QWORD PTR [rsp+0x18]
  41427a:	mov    QWORD PTR [rbp+0x0],rdx
  41427e:	mov    BYTE PTR [rax+rcx*1],r14b
  414282:	jmp    41413b <__ctype_b_loc@plt+0x11e6b>
  414287:	test   al,al
  414289:	je     4142dd <__ctype_b_loc@plt+0x1200d>
  41428b:	mov    QWORD PTR [rsp+0x8],rbp
  414290:	movabs rax,0x7ffffffffffffffd
  41429a:	cmp    r13,rax
  41429d:	jbe    4142b3 <__ctype_b_loc@plt+0x11fe3>
  41429f:	lea    rsi,[rip+0x16fe4]        # 42b28a <__ctype_b_loc@plt+0x28fba>
  4142a6:	xor    edx,edx
  4142a8:	mov    rdi,r15
  4142ab:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4142b0:	mov    r13,QWORD PTR [rbx]
  4142b3:	mov    QWORD PTR [rsp+0x20],rbx
  4142b8:	mov    r14,r13
  4142bb:	add    r14,r13
  4142be:	mov    rbp,QWORD PTR [r15+0x38]
  4142c2:	cmp    r14,0xfffffffffffffffe
  4142c6:	jne    4142e3 <__ctype_b_loc@plt+0x12013>
  4142c8:	lea    rsi,[rip+0x16aea]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  4142cf:	xor    ebx,ebx
  4142d1:	xor    eax,eax
  4142d3:	mov    rdi,rbp
  4142d6:	call   404080 <__ctype_b_loc@plt+0x1db0>
  4142db:	jmp    414313 <__ctype_b_loc@plt+0x12043>
  4142dd:	mov    rbx,QWORD PTR [r12]
  4142e1:	jmp    41432c <__ctype_b_loc@plt+0x1205c>
  4142e3:	mov    rsi,QWORD PTR [r12]
  4142e7:	mov    r15,QWORD PTR [rbp+0x20]
  4142eb:	mov    rdi,QWORD PTR [r15+0x18]
  4142ef:	mov    rdx,r13
  4142f2:	mov    rcx,r14
  4142f5:	call   QWORD PTR [r15+0x10]
  4142f9:	mov    rbx,rax
  4142fc:	test   r14,r14
  4142ff:	je     41430a <__ctype_b_loc@plt+0x1203a>
  414301:	test   rbx,rbx
  414304:	je     414629 <__ctype_b_loc@plt+0x12359>
  41430a:	add    QWORD PTR [r15+0x78],r13
  41430e:	mov    r15,QWORD PTR [rsp+0x18]
  414313:	mov    rbp,QWORD PTR [rsp+0x8]
  414318:	mov    QWORD PTR [r12],rbx
  41431c:	mov    rax,QWORD PTR [rsp+0x20]
  414321:	mov    QWORD PTR [rax],r14
  414324:	mov    rcx,QWORD PTR [rbp+0x0]
  414328:	lea    rdx,[rcx+0x1]
  41432c:	mov    rsi,QWORD PTR [rsp+0x28]
  414331:	mov    QWORD PTR [rbp+0x0],rdx
  414335:	mov    BYTE PTR [rbx+rcx*1],0x0
  414339:	mov    rax,QWORD PTR [r15+0x48]
  41433d:	mov    rdi,QWORD PTR [rax]
  414340:	mov    r9,QWORD PTR [rax+0x8]
  414344:	test   r9,r9
  414347:	je     4145be <__ctype_b_loc@plt+0x122ee>
  41434d:	mov    al,BYTE PTR [r15+0x58]
  414351:	cmp    r9,0x20
  414355:	jae    41435f <__ctype_b_loc@plt+0x1208f>
  414357:	mov    rcx,r9
  41435a:	jmp    4145a0 <__ctype_b_loc@plt+0x122d0>
  41435f:	mov    r8,r9
  414362:	and    r8,0xffffffffffffffe0
  414366:	mov    rcx,r9
  414369:	sub    rcx,r8
  41436c:	lea    rbp,[rdi+r9*1]
  414370:	add    rbp,0xffffffffffffffe0
  414374:	mov    r10,r8
  414377:	neg    r10
  41437a:	xor    ebx,ebx
  41437c:	vmovdqa ymm0,YMMWORD PTR [rip+0x1697c]        # 42ad00 <__ctype_b_loc@plt+0x28a30>
  414384:	vmovdqa ymm1,YMMWORD PTR [rip+0x16994]        # 42ad20 <__ctype_b_loc@plt+0x28a50>
  41438c:	nop    DWORD PTR [rax+0x0]
  414390:	vmovdqu ymm2,YMMWORD PTR [rbp+rbx*1+0x0]
  414396:	vpshufb ymm2,ymm2,ymm0
  41439b:	vpermq ymm2,ymm2,0x4e
  4143a1:	vpcmpeqb ymm2,ymm2,ymm1
  4143a5:	vpextrb edx,xmm2,0x0
  4143ab:	test   dl,0x1
  4143ae:	je     4143b4 <__ctype_b_loc@plt+0x120e4>
  4143b0:	mov    BYTE PTR [rbp+rbx*1+0x1f],al
  4143b4:	vpextrb edx,xmm2,0x1
  4143ba:	test   dl,0x1
  4143bd:	je     4143c3 <__ctype_b_loc@plt+0x120f3>
  4143bf:	mov    BYTE PTR [rbp+rbx*1+0x1e],al
  4143c3:	vpextrb edx,xmm2,0x2
  4143c9:	test   dl,0x1
  4143cc:	je     4143d2 <__ctype_b_loc@plt+0x12102>
  4143ce:	mov    BYTE PTR [rbp+rbx*1+0x1d],al
  4143d2:	vpextrb edx,xmm2,0x3
  4143d8:	test   dl,0x1
  4143db:	je     4143e1 <__ctype_b_loc@plt+0x12111>
  4143dd:	mov    BYTE PTR [rbp+rbx*1+0x1c],al
  4143e1:	vpextrb edx,xmm2,0x4
  4143e7:	test   dl,0x1
  4143ea:	je     4143f0 <__ctype_b_loc@plt+0x12120>
  4143ec:	mov    BYTE PTR [rbp+rbx*1+0x1b],al
  4143f0:	vpextrb edx,xmm2,0x5
  4143f6:	test   dl,0x1
  4143f9:	je     4143ff <__ctype_b_loc@plt+0x1212f>
  4143fb:	mov    BYTE PTR [rbp+rbx*1+0x1a],al
  4143ff:	vpextrb edx,xmm2,0x6
  414405:	test   dl,0x1
  414408:	je     41440e <__ctype_b_loc@plt+0x1213e>
  41440a:	mov    BYTE PTR [rbp+rbx*1+0x19],al
  41440e:	vpextrb edx,xmm2,0x7
  414414:	test   dl,0x1
  414417:	je     41441d <__ctype_b_loc@plt+0x1214d>
  414419:	mov    BYTE PTR [rbp+rbx*1+0x18],al
  41441d:	vpextrb edx,xmm2,0x8
  414423:	test   dl,0x1
  414426:	je     41442c <__ctype_b_loc@plt+0x1215c>
  414428:	mov    BYTE PTR [rbp+rbx*1+0x17],al
  41442c:	vpextrb edx,xmm2,0x9
  414432:	test   dl,0x1
  414435:	je     41443b <__ctype_b_loc@plt+0x1216b>
  414437:	mov    BYTE PTR [rbp+rbx*1+0x16],al
  41443b:	vpextrb edx,xmm2,0xa
  414441:	test   dl,0x1
  414444:	je     41444a <__ctype_b_loc@plt+0x1217a>
  414446:	mov    BYTE PTR [rbp+rbx*1+0x15],al
  41444a:	vpextrb edx,xmm2,0xb
  414450:	test   dl,0x1
  414453:	je     414459 <__ctype_b_loc@plt+0x12189>
  414455:	mov    BYTE PTR [rbp+rbx*1+0x14],al
  414459:	vpextrb edx,xmm2,0xc
  41445f:	test   dl,0x1
  414462:	je     414468 <__ctype_b_loc@plt+0x12198>
  414464:	mov    BYTE PTR [rbp+rbx*1+0x13],al
  414468:	vpextrb edx,xmm2,0xd
  41446e:	test   dl,0x1
  414471:	je     414477 <__ctype_b_loc@plt+0x121a7>
  414473:	mov    BYTE PTR [rbp+rbx*1+0x12],al
  414477:	vpextrb edx,xmm2,0xe
  41447d:	test   dl,0x1
  414480:	je     414486 <__ctype_b_loc@plt+0x121b6>
  414482:	mov    BYTE PTR [rbp+rbx*1+0x11],al
  414486:	vpextrb edx,xmm2,0xf
  41448c:	test   dl,0x1
  41448f:	je     414495 <__ctype_b_loc@plt+0x121c5>
  414491:	mov    BYTE PTR [rbp+rbx*1+0x10],al
  414495:	vextracti128 xmm2,ymm2,0x1
  41449b:	vpextrb edx,xmm2,0x0
  4144a1:	test   dl,0x1
  4144a4:	je     4144aa <__ctype_b_loc@plt+0x121da>
  4144a6:	mov    BYTE PTR [rbp+rbx*1+0xf],al
  4144aa:	vpextrb edx,xmm2,0x1
  4144b0:	test   dl,0x1
  4144b3:	je     4144b9 <__ctype_b_loc@plt+0x121e9>
  4144b5:	mov    BYTE PTR [rbp+rbx*1+0xe],al
  4144b9:	vpextrb edx,xmm2,0x2
  4144bf:	test   dl,0x1
  4144c2:	je     4144c8 <__ctype_b_loc@plt+0x121f8>
  4144c4:	mov    BYTE PTR [rbp+rbx*1+0xd],al
  4144c8:	vpextrb edx,xmm2,0x3
  4144ce:	test   dl,0x1
  4144d1:	je     4144d7 <__ctype_b_loc@plt+0x12207>
  4144d3:	mov    BYTE PTR [rbp+rbx*1+0xc],al
  4144d7:	vpextrb edx,xmm2,0x4
  4144dd:	test   dl,0x1
  4144e0:	je     4144e6 <__ctype_b_loc@plt+0x12216>
  4144e2:	mov    BYTE PTR [rbp+rbx*1+0xb],al
  4144e6:	vpextrb edx,xmm2,0x5
  4144ec:	test   dl,0x1
  4144ef:	je     4144f5 <__ctype_b_loc@plt+0x12225>
  4144f1:	mov    BYTE PTR [rbp+rbx*1+0xa],al
  4144f5:	vpextrb edx,xmm2,0x6
  4144fb:	test   dl,0x1
  4144fe:	je     414504 <__ctype_b_loc@plt+0x12234>
  414500:	mov    BYTE PTR [rbp+rbx*1+0x9],al
  414504:	vpextrb edx,xmm2,0x7
  41450a:	test   dl,0x1
  41450d:	je     414513 <__ctype_b_loc@plt+0x12243>
  41450f:	mov    BYTE PTR [rbp+rbx*1+0x8],al
  414513:	vpextrb edx,xmm2,0x8
  414519:	test   dl,0x1
  41451c:	je     414522 <__ctype_b_loc@plt+0x12252>
  41451e:	mov    BYTE PTR [rbp+rbx*1+0x7],al
  414522:	vpextrb edx,xmm2,0x9
  414528:	test   dl,0x1
  41452b:	je     414531 <__ctype_b_loc@plt+0x12261>
  41452d:	mov    BYTE PTR [rbp+rbx*1+0x6],al
  414531:	vpextrb edx,xmm2,0xa
  414537:	test   dl,0x1
  41453a:	je     414540 <__ctype_b_loc@plt+0x12270>
  41453c:	mov    BYTE PTR [rbp+rbx*1+0x5],al
  414540:	vpextrb edx,xmm2,0xb
  414546:	test   dl,0x1
  414549:	je     41454f <__ctype_b_loc@plt+0x1227f>
  41454b:	mov    BYTE PTR [rbp+rbx*1+0x4],al
  41454f:	vpextrb edx,xmm2,0xc
  414555:	test   dl,0x1
  414558:	je     41455e <__ctype_b_loc@plt+0x1228e>
  41455a:	mov    BYTE PTR [rbp+rbx*1+0x3],al
  41455e:	vpextrb edx,xmm2,0xd
  414564:	test   dl,0x1
  414567:	je     41456d <__ctype_b_loc@plt+0x1229d>
  414569:	mov    BYTE PTR [rbp+rbx*1+0x2],al
  41456d:	vpextrb edx,xmm2,0xe
  414573:	test   dl,0x1
  414576:	je     41457c <__ctype_b_loc@plt+0x122ac>
  414578:	mov    BYTE PTR [rbp+rbx*1+0x1],al
  41457c:	vpextrb edx,xmm2,0xf
  414582:	test   dl,0x1
  414585:	je     41458b <__ctype_b_loc@plt+0x122bb>
  414587:	mov    BYTE PTR [rbp+rbx*1+0x0],al
  41458b:	add    rbx,0xffffffffffffffe0
  41458f:	cmp    r10,rbx
  414592:	jne    414390 <__ctype_b_loc@plt+0x120c0>
  414598:	cmp    r9,r8
  41459b:	je     4145b7 <__ctype_b_loc@plt+0x122e7>
  41459d:	nop    DWORD PTR [rax]
  4145a0:	lea    rdx,[rcx-0x1]
  4145a4:	cmp    BYTE PTR [rdi+rcx*1-0x1],0x2e
  4145a9:	jne    4145af <__ctype_b_loc@plt+0x122df>
  4145ab:	mov    BYTE PTR [rdi+rcx*1-0x1],al
  4145af:	mov    rcx,rdx
  4145b2:	test   rdx,rdx
  4145b5:	jne    4145a0 <__ctype_b_loc@plt+0x122d0>
  4145b7:	mov    rax,QWORD PTR [r15+0x48]
  4145bb:	mov    rdi,QWORD PTR [rax]
  4145be:	vzeroupper 
  4145c1:	call   40ac40 <__ctype_b_loc@plt+0x8970>
  4145c6:	test   eax,eax
  4145c8:	jne    4145de <__ctype_b_loc@plt+0x1230e>
  4145ca:	lea    rsi,[rip+0x16cd5]        # 42b2a6 <__ctype_b_loc@plt+0x28fd6>
  4145d1:	mov    edx,0x11c
  4145d6:	mov    rdi,r15
  4145d9:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4145de:	add    rsp,0x38
  4145e2:	pop    rbx
  4145e3:	pop    r12
  4145e5:	pop    r13
  4145e7:	pop    r14
  4145e9:	pop    r15
  4145eb:	pop    rbp
  4145ec:	ret    
  4145ed:	mov    rdi,QWORD PTR [r15+0xa8]
  4145f4:	test   rdi,rdi
  4145f7:	jne    414664 <__ctype_b_loc@plt+0x12394>
  4145f9:	mov    BYTE PTR [r15+0xa],0x4
  4145fe:	mov    rax,QWORD PTR [r15+0x20]
  414602:	cmp    QWORD PTR [rax+0x98],0x0
  41460a:	je     414131 <__ctype_b_loc@plt+0x11e61>
  414610:	mov    esi,0x4
  414615:	mov    rdi,r15
  414618:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  41461d:	mov    rax,QWORD PTR [r15+0x20]
  414621:	mov    rdi,r15
  414624:	jmp    41412b <__ctype_b_loc@plt+0x11e5b>
  414629:	mov    rdi,QWORD PTR [rbp+0xa8]
  414630:	test   rdi,rdi
  414633:	jne    414664 <__ctype_b_loc@plt+0x12394>
  414635:	mov    BYTE PTR [rbp+0xa],0x4
  414639:	mov    rax,QWORD PTR [rbp+0x20]
  41463d:	cmp    QWORD PTR [rax+0x98],0x0
  414645:	je     414131 <__ctype_b_loc@plt+0x11e61>
  41464b:	mov    esi,0x4
  414650:	mov    rdi,rbp
  414653:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  414658:	mov    rax,QWORD PTR [rbp+0x20]
  41465c:	mov    rdi,rbp
  41465f:	jmp    41412b <__ctype_b_loc@plt+0x11e5b>
  414664:	mov    DWORD PTR [rdi+0xd0],0x4
  41466e:	add    rdi,0x8
  414672:	mov    esi,0x1
  414677:	call   402230 <longjmp@plt>
  41467c:	nop    DWORD PTR [rax+0x0]
  414680:	push   r15
  414682:	push   r14
  414684:	push   rbx
  414685:	sub    rsp,0x10
  414689:	mov    r15,rdi
  41468c:	mov    r14,QWORD PTR [rdi+0x38]
  414690:	mov    rdi,r14
  414693:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  414698:	mov    rbx,rax
  41469b:	mov    rax,QWORD PTR [r15+0x30]
  41469f:	mov    rsi,QWORD PTR [rax+0x8]
  4146a3:	mov    al,BYTE PTR [rsi+0xb]
  4146a6:	mov    rcx,0xffffffffffffffff
  4146ad:	shlx   rax,rcx,rax
  4146b2:	andn   eax,eax,DWORD PTR [rbx+0xc]
  4146b8:	cdqe   
  4146ba:	lea    rax,[rax+rax*4]
  4146be:	shl    rax,0x3
  4146c2:	add    rax,QWORD PTR [rsi+0x20]
  4146c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4146d0:	cmp    DWORD PTR [rax+0x18],0x4
  4146d4:	jne    4146dc <__ctype_b_loc@plt+0x1240c>
  4146d6:	cmp    QWORD PTR [rax+0x10],rbx
  4146da:	je     414704 <__ctype_b_loc@plt+0x12434>
  4146dc:	mov    rax,QWORD PTR [rax+0x20]
  4146e0:	test   rax,rax
  4146e3:	jne    4146d0 <__ctype_b_loc@plt+0x12400>
  4146e5:	mov    QWORD PTR [rsp],rbx
  4146e9:	mov    DWORD PTR [rsp+0x8],0x4
  4146f1:	mov    rdx,rsp
  4146f4:	mov    rdi,r14
  4146f7:	call   409ca0 <__ctype_b_loc@plt+0x79d0>
  4146fc:	cmp    DWORD PTR [rax+0x8],0x0
  414700:	jne    414739 <__ctype_b_loc@plt+0x12469>
  414702:	jmp    414716 <__ctype_b_loc@plt+0x12446>
  414704:	lea    rcx,[rip+0x1640d]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41470b:	cmp    rax,rcx
  41470e:	je     4146e5 <__ctype_b_loc@plt+0x12415>
  414710:	cmp    DWORD PTR [rax+0x8],0x0
  414714:	jne    414739 <__ctype_b_loc@plt+0x12469>
  414716:	mov    DWORD PTR [rax],0x1
  41471c:	mov    DWORD PTR [rax+0x8],0x1
  414723:	mov    rax,QWORD PTR [r14+0x20]
  414727:	mov    rcx,QWORD PTR [rax+0x78]
  41472b:	cmp    rcx,QWORD PTR [rax+0x70]
  41472f:	jb     414739 <__ctype_b_loc@plt+0x12469>
  414731:	mov    rdi,r14
  414734:	call   408070 <__ctype_b_loc@plt+0x5da0>
  414739:	mov    rax,rbx
  41473c:	add    rsp,0x10
  414740:	pop    rbx
  414741:	pop    r14
  414743:	pop    r15
  414745:	ret    
  414746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414750:	push   rbp
  414751:	push   r15
  414753:	push   r14
  414755:	push   r13
  414757:	push   r12
  414759:	push   rbx
  41475a:	sub    rsp,0x98
  414761:	mov    r12,rdi
  414764:	mov    eax,0xfffffefe
  414769:	add    eax,DWORD PTR [rdi+0x10]
  41476c:	cmp    eax,0x13
  41476f:	ja     4147e1 <__ctype_b_loc@plt+0x12511>
  414771:	mov    r14d,DWORD PTR [r12+0x4]
  414776:	lea    rcx,[rip+0x15d8b]        # 42a508 <__ctype_b_loc@plt+0x28238>
  41477d:	movsxd rax,DWORD PTR [rcx+rax*4]
  414781:	add    rax,rcx
  414784:	jmp    rax
  414786:	mov    DWORD PTR [r12+0x8],r14d
  41478b:	cmp    DWORD PTR [r12+0x20],0x11f
  414794:	jne    414b8a <__ctype_b_loc@plt+0x128ba>
  41479a:	lea    rsi,[r12+0x18]
  41479f:	mov    rdi,r12
  4147a2:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  4147a7:	mov    DWORD PTR [r12+0x10],eax
  4147ac:	jmp    414ba3 <__ctype_b_loc@plt+0x128d3>
  4147b1:	mov    DWORD PTR [r12+0x8],r14d
  4147b6:	lea    rbx,[r12+0x20]
  4147bb:	cmp    DWORD PTR [r12+0x20],0x11f
  4147c4:	jne    414bb5 <__ctype_b_loc@plt+0x128e5>
  4147ca:	lea    rsi,[r12+0x18]
  4147cf:	mov    rdi,r12
  4147d2:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  4147d7:	mov    DWORD PTR [r12+0x10],eax
  4147dc:	jmp    414bc9 <__ctype_b_loc@plt+0x128f9>
  4147e1:	mov    rbx,QWORD PTR [r12+0x30]
  4147e6:	lea    rsi,[rsp+0x28]
  4147eb:	mov    rdi,r12
  4147ee:	call   41b1e0 <__ctype_b_loc@plt+0x18f10>
  4147f3:	cmp    DWORD PTR [rsp+0x28],0xd
  4147f8:	jne    414c10 <__ctype_b_loc@plt+0x12940>
  4147fe:	mov    rax,QWORD PTR [rbx]
  414801:	mov    rax,QWORD PTR [rax+0x18]
  414805:	movsxd rcx,DWORD PTR [rsp+0x30]
  41480a:	mov    edx,0xff803fff
  41480f:	and    edx,DWORD PTR [rax+rcx*4]
  414812:	or     edx,0x4000
  414818:	mov    DWORD PTR [rax+rcx*4],edx
  41481b:	jmp    41753f <__ctype_b_loc@plt+0x1526f>
  414820:	mov    r15,QWORD PTR [r12+0x30]
  414825:	mov    DWORD PTR [rsp+0x70],0xffffffff
  41482d:	mov    BYTE PTR [rsp+0x76],0x1
  414832:	mov    al,BYTE PTR [r15+0x4a]
  414836:	mov    BYTE PTR [rsp+0x74],al
  41483a:	mov    BYTE PTR [rsp+0x75],0x0
  41483f:	mov    rax,QWORD PTR [r15+0x28]
  414843:	mov    QWORD PTR [rsp+0x68],rax
  414848:	lea    rax,[rsp+0x68]
  41484d:	mov    QWORD PTR [r15+0x28],rax
  414851:	mov    DWORD PTR [r12+0x8],r14d
  414856:	lea    rbp,[r12+0x20]
  41485b:	cmp    DWORD PTR [r12+0x20],0x11f
  414864:	jne    414c30 <__ctype_b_loc@plt+0x12960>
  41486a:	lea    rsi,[r12+0x18]
  41486f:	mov    rdi,r12
  414872:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  414877:	mov    DWORD PTR [r12+0x10],eax
  41487c:	cmp    eax,0x11d
  414881:	jne    414c51 <__ctype_b_loc@plt+0x12981>
  414887:	jmp    414c7b <__ctype_b_loc@plt+0x129ab>
  41488c:	mov    DWORD PTR [r12+0x8],r14d
  414891:	lea    rbp,[r12+0x20]
  414896:	cmp    DWORD PTR [r12+0x20],0x11f
  41489f:	jne    414cb3 <__ctype_b_loc@plt+0x129e3>
  4148a5:	lea    rsi,[r12+0x18]
  4148aa:	mov    rdi,r12
  4148ad:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  4148b2:	mov    DWORD PTR [r12+0x10],eax
  4148b7:	cmp    eax,0x11d
  4148bc:	jne    414cd4 <__ctype_b_loc@plt+0x12a04>
  4148c2:	jmp    414cfe <__ctype_b_loc@plt+0x12a2e>
  4148c7:	mov    rbx,r12
  4148ca:	mov    r12,QWORD PTR [r12+0x30]
  4148cf:	mov    DWORD PTR [rbx+0x8],r14d
  4148d3:	lea    rax,[rbx+0x20]
  4148d7:	cmp    DWORD PTR [rbx+0x20],0x11f
  4148de:	jne    414d33 <__ctype_b_loc@plt+0x12a63>
  4148e4:	mov    r15,rax
  4148e7:	lea    rsi,[rbx+0x18]
  4148eb:	mov    rdi,rbx
  4148ee:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  4148f3:	mov    DWORD PTR [rbx+0x10],eax
  4148f6:	jmp    414d46 <__ctype_b_loc@plt+0x12a76>
  4148fb:	mov    DWORD PTR [r12+0x8],r14d
  414900:	lea    rbp,[r12+0x20]
  414905:	cmp    DWORD PTR [r12+0x20],0x11f
  41490e:	jne    414dec <__ctype_b_loc@plt+0x12b1c>
  414914:	lea    rsi,[r12+0x18]
  414919:	mov    rdi,r12
  41491c:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  414921:	mov    DWORD PTR [r12+0x10],eax
  414926:	cmp    eax,0x109
  41492b:	je     414e11 <__ctype_b_loc@plt+0x12b41>
  414931:	mov    QWORD PTR [rsp+0x8],rbp
  414936:	lea    rcx,[r12+0x18]
  41493b:	mov    QWORD PTR [rsp+0x18],rcx
  414940:	lea    rcx,[r12+0x10]
  414945:	mov    QWORD PTR [rsp+0x10],rcx
  41494a:	mov    QWORD PTR [rsp+0x50],0xffffffffffffffff
  414953:	mov    BYTE PTR [rsp+0x48],0x1
  414958:	lea    r13,[rip+0x16b36]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  41495f:	lea    rbp,[rip+0x166ee]        # 42b054 <__ctype_b_loc@plt+0x28d84>
  414966:	xor    r14d,r14d
  414969:	cmp    eax,0x11d
  41496e:	je     4149b8 <__ctype_b_loc@plt+0x126e8>
  414970:	jmp    414996 <__ctype_b_loc@plt+0x126c6>
  414972:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41497c:	nop    DWORD PTR [rax+0x0]
  414980:	add    r14d,0x1
  414984:	add    QWORD PTR [rsp+0x50],0xffffffffffffffff
  41498a:	add    BYTE PTR [rsp+0x48],0x1
  41498f:	cmp    eax,0x11d
  414994:	je     4149b8 <__ctype_b_loc@plt+0x126e8>
  414996:	mov    rdi,QWORD PTR [r12+0x38]
  41499b:	xor    eax,eax
  41499d:	mov    rsi,r13
  4149a0:	mov    rdx,rbp
  4149a3:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  4149a8:	mov    edx,DWORD PTR [r12+0x10]
  4149ad:	mov    rdi,r12
  4149b0:	mov    rsi,rax
  4149b3:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4149b8:	mov    rbx,QWORD PTR [r12+0x18]
  4149bd:	mov    eax,DWORD PTR [r12+0x4]
  4149c2:	mov    DWORD PTR [r12+0x8],eax
  4149c7:	cmp    DWORD PTR [r12+0x20],0x11f
  4149d0:	jne    4149f0 <__ctype_b_loc@plt+0x12720>
  4149d2:	mov    rdi,r12
  4149d5:	mov    rsi,QWORD PTR [rsp+0x18]
  4149da:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  4149df:	mov    DWORD PTR [r12+0x10],eax
  4149e4:	jmp    414a08 <__ctype_b_loc@plt+0x12738>
  4149e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4149f0:	mov    rax,QWORD PTR [rsp+0x8]
  4149f5:	vmovups xmm0,XMMWORD PTR [rax]
  4149f9:	mov    rcx,QWORD PTR [rsp+0x10]
  4149fe:	vmovups XMMWORD PTR [rcx],xmm0
  414a02:	mov    DWORD PTR [rax],0x11f
  414a08:	mov    rdi,r12
  414a0b:	mov    rsi,rbx
  414a0e:	mov    edx,r14d
  414a11:	call   41bcd0 <__ctype_b_loc@plt+0x19a00>
  414a16:	mov    eax,DWORD PTR [r12+0x10]
  414a1b:	cmp    eax,0x2c
  414a1e:	jne    414e43 <__ctype_b_loc@plt+0x12b73>
  414a24:	mov    eax,DWORD PTR [r12+0x4]
  414a29:	mov    ecx,DWORD PTR [r12+0x20]
  414a2e:	mov    DWORD PTR [r12+0x8],eax
  414a33:	cmp    ecx,0x11f
  414a39:	jne    414a60 <__ctype_b_loc@plt+0x12790>
  414a3b:	mov    rdi,r12
  414a3e:	mov    rsi,QWORD PTR [rsp+0x18]
  414a43:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  414a48:	mov    DWORD PTR [r12+0x10],eax
  414a4d:	jmp    414980 <__ctype_b_loc@plt+0x126b0>
  414a52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414a5c:	nop    DWORD PTR [rax+0x0]
  414a60:	mov    rax,QWORD PTR [rsp+0x8]
  414a65:	vmovups xmm0,XMMWORD PTR [rax]
  414a69:	mov    rax,QWORD PTR [rsp+0x10]
  414a6e:	vmovups XMMWORD PTR [rax],xmm0
  414a72:	mov    DWORD PTR [r12+0x20],0x11f
  414a7b:	mov    eax,DWORD PTR [r12+0x10]
  414a80:	jmp    414980 <__ctype_b_loc@plt+0x126b0>
  414a85:	mov    rbx,QWORD PTR [r12+0x30]
  414a8a:	mov    edx,DWORD PTR [rbx+0x30]
  414a8d:	mov    DWORD PTR [rbx+0x34],edx
  414a90:	mov    DWORD PTR [rsp+0x70],0xffffffff
  414a98:	mov    BYTE PTR [rsp+0x76],0x1
  414a9d:	mov    al,BYTE PTR [rbx+0x4a]
  414aa0:	mov    BYTE PTR [rsp+0x74],al
  414aa4:	mov    BYTE PTR [rsp+0x75],0x0
  414aa9:	mov    rcx,QWORD PTR [rbx+0x28]
  414aad:	mov    QWORD PTR [rsp+0x68],rcx
  414ab2:	mov    DWORD PTR [rsp+0x90],0xffffffff
  414abd:	mov    BYTE PTR [rsp+0x94],al
  414ac4:	mov    WORD PTR [rsp+0x95],0x0
  414ace:	lea    rax,[rsp+0x68]
  414ad3:	mov    QWORD PTR [rsp+0x88],rax
  414adb:	lea    rax,[rsp+0x88]
  414ae3:	mov    QWORD PTR [rbx+0x28],rax
  414ae7:	mov    DWORD PTR [r12+0x8],r14d
  414aec:	lea    rbp,[r12+0x20]
  414af1:	cmp    DWORD PTR [r12+0x20],0x11f
  414afa:	mov    DWORD PTR [rsp+0x18],edx
  414afe:	jne    414e7e <__ctype_b_loc@plt+0x12bae>
  414b04:	lea    rsi,[r12+0x18]
  414b09:	mov    rdi,r12
  414b0c:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  414b11:	mov    DWORD PTR [r12+0x10],eax
  414b16:	jmp    414e93 <__ctype_b_loc@plt+0x12bc3>
  414b1b:	mov    rbx,QWORD PTR [r12+0x30]
  414b20:	mov    DWORD PTR [r12+0x8],r14d
  414b25:	lea    r15,[r12+0x20]
  414b2a:	cmp    DWORD PTR [r12+0x20],0x11f
  414b33:	jne    414fb2 <__ctype_b_loc@plt+0x12ce2>
  414b39:	lea    rsi,[r12+0x18]
  414b3e:	mov    rdi,r12
  414b41:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  414b46:	mov    DWORD PTR [r12+0x10],eax
  414b4b:	jmp    414fcc <__ctype_b_loc@plt+0x12cfc>
  414b50:	mov    r15,QWORD PTR [r12+0x30]
  414b55:	mov    DWORD PTR [r12+0x8],r14d
  414b5a:	lea    r13,[r12+0x20]
  414b5f:	cmp    DWORD PTR [r12+0x20],0x11f
  414b68:	mov    DWORD PTR [rsp+0x44],r14d
  414b6d:	jne    415019 <__ctype_b_loc@plt+0x12d49>
  414b73:	lea    rsi,[r12+0x18]
  414b78:	mov    rdi,r12
  414b7b:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  414b80:	mov    DWORD PTR [r12+0x10],eax
  414b85:	jmp    41502f <__ctype_b_loc@plt+0x12d5f>
  414b8a:	lea    rax,[r12+0x20]
  414b8f:	vmovups xmm0,XMMWORD PTR [rax]
  414b93:	vmovups XMMWORD PTR [r12+0x10],xmm0
  414b9a:	mov    DWORD PTR [r12+0x20],0x11f
  414ba3:	mov    rdi,r12
  414ba6:	call   417ab0 <__ctype_b_loc@plt+0x157e0>
  414bab:	mov    ebp,0x1
  414bb0:	jmp    417541 <__ctype_b_loc@plt+0x15271>
  414bb5:	vmovups xmm0,XMMWORD PTR [rbx]
  414bb9:	vmovups XMMWORD PTR [r12+0x10],xmm0
  414bc0:	mov    DWORD PTR [r12+0x20],0x11f
  414bc9:	mov    rdi,r12
  414bcc:	call   417690 <__ctype_b_loc@plt+0x153c0>
  414bd1:	mov    eax,DWORD PTR [r12+0x4]
  414bd6:	cmp    DWORD PTR [r12+0x10],0x106
  414bdf:	jne    4150f9 <__ctype_b_loc@plt+0x12e29>
  414be5:	mov    DWORD PTR [r12+0x8],eax
  414bea:	cmp    DWORD PTR [r12+0x20],0x11f
  414bf3:	jne    415be4 <__ctype_b_loc@plt+0x13914>
  414bf9:	lea    rsi,[r12+0x18]
  414bfe:	mov    rdi,r12
  414c01:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  414c06:	mov    DWORD PTR [r12+0x10],eax
  414c0b:	jmp    41753f <__ctype_b_loc@plt+0x1526f>
  414c10:	mov    QWORD PTR [rsp+0x20],0x0
  414c19:	lea    rsi,[rsp+0x20]
  414c1e:	mov    edx,0x1
  414c23:	mov    rdi,r12
  414c26:	call   41d950 <__ctype_b_loc@plt+0x1b680>
  414c2b:	jmp    41753f <__ctype_b_loc@plt+0x1526f>
  414c30:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  414c35:	vmovups XMMWORD PTR [r12+0x10],xmm0
  414c3c:	mov    DWORD PTR [r12+0x20],0x11f
  414c45:	mov    eax,DWORD PTR [r12+0x10]
  414c4a:	cmp    eax,0x11d
  414c4f:	je     414c7b <__ctype_b_loc@plt+0x129ab>
  414c51:	mov    rdi,QWORD PTR [r12+0x38]
  414c56:	lea    rsi,[rip+0x16838]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  414c5d:	lea    rdx,[rip+0x163f0]        # 42b054 <__ctype_b_loc@plt+0x28d84>
  414c64:	xor    eax,eax
  414c66:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  414c6b:	mov    edx,DWORD PTR [r12+0x10]
  414c70:	mov    rdi,r12
  414c73:	mov    rsi,rax
  414c76:	call   413af0 <__ctype_b_loc@plt+0x11820>
  414c7b:	lea    r13,[r12+0x18]
  414c80:	mov    rbx,QWORD PTR [r12+0x18]
  414c85:	mov    eax,DWORD PTR [r12+0x4]
  414c8a:	mov    DWORD PTR [r12+0x8],eax
  414c8f:	cmp    DWORD PTR [r12+0x20],0x11f
  414c98:	jne    415123 <__ctype_b_loc@plt+0x12e53>
  414c9e:	mov    rdi,r12
  414ca1:	mov    rsi,r13
  414ca4:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  414ca9:	mov    DWORD PTR [r12+0x10],eax
  414cae:	jmp    41513d <__ctype_b_loc@plt+0x12e6d>
  414cb3:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  414cb8:	vmovups XMMWORD PTR [r12+0x10],xmm0
  414cbf:	mov    DWORD PTR [r12+0x20],0x11f
  414cc8:	mov    eax,DWORD PTR [r12+0x10]
  414ccd:	cmp    eax,0x11d
  414cd2:	je     414cfe <__ctype_b_loc@plt+0x12a2e>
  414cd4:	mov    rdi,QWORD PTR [r12+0x38]
  414cd9:	lea    rsi,[rip+0x167b5]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  414ce0:	lea    rdx,[rip+0x1636d]        # 42b054 <__ctype_b_loc@plt+0x28d84>
  414ce7:	xor    eax,eax
  414ce9:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  414cee:	mov    edx,DWORD PTR [r12+0x10]
  414cf3:	mov    rdi,r12
  414cf6:	mov    rsi,rax
  414cf9:	call   413af0 <__ctype_b_loc@plt+0x11820>
  414cfe:	mov    rbx,QWORD PTR [r12+0x18]
  414d03:	mov    eax,DWORD PTR [r12+0x4]
  414d08:	mov    DWORD PTR [r12+0x8],eax
  414d0d:	cmp    DWORD PTR [r12+0x20],0x11f
  414d16:	jne    415287 <__ctype_b_loc@plt+0x12fb7>
  414d1c:	lea    rsi,[r12+0x18]
  414d21:	mov    rdi,r12
  414d24:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  414d29:	mov    DWORD PTR [r12+0x10],eax
  414d2e:	jmp    41529c <__ctype_b_loc@plt+0x12fcc>
  414d33:	mov    r15,rax
  414d36:	vmovups xmm0,XMMWORD PTR [rax]
  414d3a:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  414d3f:	mov    DWORD PTR [rbx+0x20],0x11f
  414d46:	mov    DWORD PTR [rsp+0x44],r14d
  414d4b:	lea    rsi,[rsp+0x20]
  414d50:	xor    edx,edx
  414d52:	mov    rbp,rbx
  414d55:	mov    rdi,rbx
  414d58:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  414d5d:	cmp    DWORD PTR [rsp+0x20],0x1
  414d62:	jne    414d6c <__ctype_b_loc@plt+0x12a9c>
  414d64:	mov    DWORD PTR [rsp+0x20],0x3
  414d6c:	mov    rbx,rbp
  414d6f:	mov    rdi,QWORD PTR [rbp+0x30]
  414d73:	lea    rsi,[rsp+0x20]
  414d78:	call   417ca0 <__ctype_b_loc@plt+0x159d0>
  414d7d:	mov    r14d,DWORD PTR [rsp+0x34]
  414d82:	cmp    DWORD PTR [rbp+0x10],0x112
  414d89:	je     414db2 <__ctype_b_loc@plt+0x12ae2>
  414d8b:	mov    rdi,QWORD PTR [rbx+0x38]
  414d8f:	lea    rsi,[rip+0x166ff]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  414d96:	lea    rdx,[rip+0x1628c]        # 42b029 <__ctype_b_loc@plt+0x28d59>
  414d9d:	xor    eax,eax
  414d9f:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  414da4:	mov    edx,DWORD PTR [rbx+0x10]
  414da7:	mov    rdi,rbx
  414daa:	mov    rsi,rax
  414dad:	call   413af0 <__ctype_b_loc@plt+0x11820>
  414db2:	mov    eax,DWORD PTR [rbx+0x4]
  414db5:	mov    ecx,DWORD PTR [rbx+0x20]
  414db8:	mov    DWORD PTR [rbx+0x8],eax
  414dbb:	cmp    ecx,0x11f
  414dc1:	mov    rbp,r15
  414dc4:	lea    rax,[rbx+0x10]
  414dc8:	jne    415325 <__ctype_b_loc@plt+0x13055>
  414dce:	mov    QWORD PTR [rsp+0x18],rax
  414dd3:	lea    rsi,[rbx+0x18]
  414dd7:	mov    rdi,rbx
  414dda:	mov    QWORD PTR [rsp+0x10],rsi
  414ddf:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  414de4:	mov    DWORD PTR [rbx+0x10],eax
  414de7:	jmp    415344 <__ctype_b_loc@plt+0x13074>
  414dec:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  414df1:	vmovups XMMWORD PTR [r12+0x10],xmm0
  414df8:	mov    DWORD PTR [r12+0x20],0x11f
  414e01:	mov    eax,DWORD PTR [r12+0x10]
  414e06:	cmp    eax,0x109
  414e0b:	jne    414931 <__ctype_b_loc@plt+0x12661>
  414e11:	mov    eax,DWORD PTR [r12+0x4]
  414e16:	mov    ecx,DWORD PTR [r12+0x20]
  414e1b:	mov    DWORD PTR [r12+0x8],eax
  414e20:	cmp    ecx,0x11f
  414e26:	jne    415bfd <__ctype_b_loc@plt+0x1392d>
  414e2c:	lea    rsi,[r12+0x18]
  414e31:	mov    rdi,r12
  414e34:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  414e39:	mov    DWORD PTR [r12+0x10],eax
  414e3e:	jmp    415c17 <__ctype_b_loc@plt+0x13947>
  414e43:	cmp    eax,0x3d
  414e46:	jne    415c82 <__ctype_b_loc@plt+0x139b2>
  414e4c:	mov    eax,DWORD PTR [r12+0x4]
  414e51:	mov    ecx,DWORD PTR [r12+0x20]
  414e56:	mov    DWORD PTR [r12+0x8],eax
  414e5b:	cmp    ecx,0x11f
  414e61:	jne    41668e <__ctype_b_loc@plt+0x143be>
  414e67:	mov    rdi,r12
  414e6a:	mov    rsi,QWORD PTR [rsp+0x18]
  414e6f:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  414e74:	mov    DWORD PTR [r12+0x10],eax
  414e79:	jmp    4166a6 <__ctype_b_loc@plt+0x143d6>
  414e7e:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  414e83:	vmovups XMMWORD PTR [r12+0x10],xmm0
  414e8a:	mov    DWORD PTR [r12+0x20],0x11f
  414e93:	mov    QWORD PTR [rsp+0x8],rbx
  414e98:	mov    DWORD PTR [rsp+0x44],r14d
  414e9d:	mov    rax,QWORD PTR [r12+0x38]
  414ea2:	mov    ecx,DWORD PTR [rax+0x60]
  414ea5:	add    ecx,0x1
  414ea8:	mov    WORD PTR [rax+0x60],cx
  414eac:	movzx  eax,cx
  414eaf:	cmp    eax,0xc9
  414eb4:	jb     414ec7 <__ctype_b_loc@plt+0x12bf7>
  414eb6:	lea    rsi,[rip+0x163fa]        # 42b2b7 <__ctype_b_loc@plt+0x28fe7>
  414ebd:	xor    edx,edx
  414ebf:	mov    rdi,r12
  414ec2:	call   413af0 <__ctype_b_loc@plt+0x11820>
  414ec7:	lea    r15,[r12+0x18]
  414ecc:	lea    r14,[r12+0x10]
  414ed1:	mov    r13d,0x8010007
  414ed7:	nop    WORD PTR [rax+rax*1+0x0]
  414ee0:	mov    eax,DWORD PTR [r12+0x10]
  414ee5:	lea    ecx,[rax-0x104]
  414eeb:	cmp    ecx,0x1b
  414eee:	ja     414ef6 <__ctype_b_loc@plt+0x12c26>
  414ef0:	bt     r13d,ecx
  414ef4:	jb     414f6a <__ctype_b_loc@plt+0x12c9a>
  414ef6:	mov    rdi,r12
  414ef9:	call   414750 <__ctype_b_loc@plt+0x12480>
  414efe:	mov    ebx,eax
  414f00:	cmp    DWORD PTR [r12+0x10],0x3b
  414f06:	jne    414f51 <__ctype_b_loc@plt+0x12c81>
  414f08:	mov    eax,DWORD PTR [r12+0x4]
  414f0d:	mov    ecx,DWORD PTR [r12+0x20]
  414f12:	mov    DWORD PTR [r12+0x8],eax
  414f17:	cmp    ecx,0x11f
  414f1d:	jne    414f40 <__ctype_b_loc@plt+0x12c70>
  414f1f:	mov    rdi,r12
  414f22:	mov    rsi,r15
  414f25:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  414f2a:	mov    DWORD PTR [r12+0x10],eax
  414f2f:	jmp    414f51 <__ctype_b_loc@plt+0x12c81>
  414f31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414f3b:	nop    DWORD PTR [rax+rax*1+0x0]
  414f40:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  414f45:	vmovups XMMWORD PTR [r14],xmm0
  414f4a:	mov    DWORD PTR [rbp+0x0],0x11f
  414f51:	mov    rax,QWORD PTR [r12+0x30]
  414f56:	movzx  ecx,BYTE PTR [rax+0x4a]
  414f5a:	mov    DWORD PTR [rax+0x3c],ecx
  414f5d:	test   ebx,ebx
  414f5f:	je     414ee0 <__ctype_b_loc@plt+0x12c10>
  414f65:	mov    eax,DWORD PTR [r12+0x10]
  414f6a:	mov    rdi,QWORD PTR [r12+0x38]
  414f6f:	add    WORD PTR [rdi+0x60],0xffff
  414f74:	mov    ecx,DWORD PTR [r12+0x4]
  414f79:	cmp    eax,0x114
  414f7e:	mov    r13,QWORD PTR [rsp+0x8]
  414f83:	jne    4156ce <__ctype_b_loc@plt+0x133fe>
  414f89:	mov    DWORD PTR [r12+0x8],ecx
  414f8e:	cmp    DWORD PTR [r12+0x20],0x11f
  414f97:	jne    415c92 <__ctype_b_loc@plt+0x139c2>
  414f9d:	mov    rdi,r12
  414fa0:	mov    rsi,r15
  414fa3:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  414fa8:	mov    DWORD PTR [r12+0x10],eax
  414fad:	jmp    415d15 <__ctype_b_loc@plt+0x13a45>
  414fb2:	vmovups xmm0,XMMWORD PTR [r15]
  414fb7:	vmovups XMMWORD PTR [r12+0x10],xmm0
  414fbe:	mov    DWORD PTR [r12+0x20],0x11f
  414fc7:	mov    eax,DWORD PTR [r12+0x10]
  414fcc:	xor    edx,edx
  414fce:	lea    ecx,[rax-0x104]
  414fd4:	cmp    ecx,0x1b
  414fd7:	ja     415a99 <__ctype_b_loc@plt+0x137c9>
  414fdd:	mov    esi,0x8010007
  414fe2:	bt     esi,ecx
  414fe5:	jae    415a99 <__ctype_b_loc@plt+0x137c9>
  414feb:	xor    ebp,ebp
  414fed:	shl    edx,0x6
  414ff0:	shl    ebp,0x17
  414ff3:	add    ebp,0x800000
  414ff9:	or     ebp,edx
  414ffb:	or     ebp,0x1e
  414ffe:	mov    rax,QWORD PTR [rbx+0x18]
  415002:	mov    edx,DWORD PTR [rax+0x8]
  415005:	mov    rdi,rbx
  415008:	mov    esi,ebp
  41500a:	call   419630 <__ctype_b_loc@plt+0x17360>
  41500f:	mov    ebp,0x1
  415014:	jmp    417541 <__ctype_b_loc@plt+0x15271>
  415019:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  41501f:	vmovups XMMWORD PTR [r12+0x10],xmm0
  415026:	mov    DWORD PTR [r12+0x20],0x11f
  41502f:	mov    r14d,DWORD PTR [r15+0x30]
  415033:	mov    DWORD PTR [r15+0x34],r14d
  415037:	lea    rsi,[rsp+0x20]
  41503c:	xor    edx,edx
  41503e:	mov    rdi,r12
  415041:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  415046:	cmp    DWORD PTR [rsp+0x20],0x1
  41504b:	jne    415055 <__ctype_b_loc@plt+0x12d85>
  41504d:	mov    DWORD PTR [rsp+0x20],0x3
  415055:	mov    rdi,QWORD PTR [r12+0x30]
  41505a:	lea    rbx,[rsp+0x20]
  41505f:	mov    rsi,rbx
  415062:	call   417ca0 <__ctype_b_loc@plt+0x159d0>
  415067:	mov    ebp,DWORD PTR [rsp+0x34]
  41506b:	mov    DWORD PTR [rsp+0x28],0xffffffff
  415073:	mov    BYTE PTR [rsp+0x2e],0x1
  415078:	mov    al,BYTE PTR [r15+0x4a]
  41507c:	mov    BYTE PTR [rsp+0x2c],al
  415080:	mov    BYTE PTR [rsp+0x2d],0x0
  415085:	mov    rax,QWORD PTR [r15+0x28]
  415089:	mov    QWORD PTR [rsp+0x20],rax
  41508e:	mov    QWORD PTR [r15+0x28],rbx
  415092:	cmp    DWORD PTR [r12+0x10],0x103
  41509b:	je     4150c7 <__ctype_b_loc@plt+0x12df7>
  41509d:	mov    rdi,QWORD PTR [r12+0x38]
  4150a2:	lea    rsi,[rip+0x163ec]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  4150a9:	lea    rdx,[rip+0x15f48]        # 42aff8 <__ctype_b_loc@plt+0x28d28>
  4150b0:	xor    eax,eax
  4150b2:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  4150b7:	mov    edx,DWORD PTR [r12+0x10]
  4150bc:	mov    rdi,r12
  4150bf:	mov    rsi,rax
  4150c2:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4150c7:	mov    eax,DWORD PTR [r12+0x4]
  4150cc:	mov    ecx,DWORD PTR [r12+0x20]
  4150d1:	mov    DWORD PTR [r12+0x8],eax
  4150d6:	cmp    ecx,0x11f
  4150dc:	jne    4156f6 <__ctype_b_loc@plt+0x13426>
  4150e2:	lea    rsi,[r12+0x18]
  4150e7:	mov    rdi,r12
  4150ea:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  4150ef:	mov    DWORD PTR [r12+0x10],eax
  4150f4:	jmp    41570c <__ctype_b_loc@plt+0x1343c>
  4150f9:	mov    rdi,QWORD PTR [r12+0x38]
  4150fe:	cmp    eax,r14d
  415101:	jne    415ca5 <__ctype_b_loc@plt+0x139d5>
  415107:	lea    rsi,[rip+0x16387]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  41510e:	lea    rdx,[rip+0x15ef2]        # 42b007 <__ctype_b_loc@plt+0x28d37>
  415115:	xor    ebp,ebp
  415117:	xor    eax,eax
  415119:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41511e:	jmp    415cc6 <__ctype_b_loc@plt+0x139f6>
  415123:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  415128:	vmovups XMMWORD PTR [r12+0x10],xmm0
  41512f:	mov    DWORD PTR [r12+0x20],0x11f
  415138:	mov    eax,DWORD PTR [r12+0x10]
  41513d:	cmp    eax,0x2c
  415140:	mov    QWORD PTR [rsp+0x8],rbp
  415145:	je     415768 <__ctype_b_loc@plt+0x13498>
  41514b:	cmp    eax,0x10b
  415150:	je     415768 <__ctype_b_loc@plt+0x13498>
  415156:	cmp    eax,0x3d
  415159:	jne    415cd3 <__ctype_b_loc@plt+0x13a03>
  41515f:	mov    QWORD PTR [rsp+0x18],r13
  415164:	mov    DWORD PTR [rsp+0x44],r14d
  415169:	mov    r13,QWORD PTR [r12+0x30]
  41516e:	mov    eax,DWORD PTR [r13+0x3c]
  415172:	mov    DWORD PTR [rsp+0x10],eax
  415176:	lea    rsi,[rip+0x1633b]        # 42b4b8 <__ctype_b_loc@plt+0x291e8>
  41517d:	mov    edx,0xb
  415182:	mov    rdi,r12
  415185:	call   414680 <__ctype_b_loc@plt+0x123b0>
  41518a:	xor    edx,edx
  41518c:	mov    rdi,r12
  41518f:	mov    rsi,rax
  415192:	call   41bcd0 <__ctype_b_loc@plt+0x19a00>
  415197:	lea    rsi,[rip+0x16326]        # 42b4c4 <__ctype_b_loc@plt+0x291f4>
  41519e:	mov    edx,0xb
  4151a3:	mov    rdi,r12
  4151a6:	call   414680 <__ctype_b_loc@plt+0x123b0>
  4151ab:	mov    edx,0x1
  4151b0:	mov    rdi,r12
  4151b3:	mov    rsi,rax
  4151b6:	call   41bcd0 <__ctype_b_loc@plt+0x19a00>
  4151bb:	lea    rsi,[rip+0x1630e]        # 42b4d0 <__ctype_b_loc@plt+0x29200>
  4151c2:	mov    edx,0xa
  4151c7:	mov    rdi,r12
  4151ca:	call   414680 <__ctype_b_loc@plt+0x123b0>
  4151cf:	mov    edx,0x2
  4151d4:	mov    rdi,r12
  4151d7:	mov    rsi,rax
  4151da:	call   41bcd0 <__ctype_b_loc@plt+0x19a00>
  4151df:	mov    edx,0x3
  4151e4:	mov    rdi,r12
  4151e7:	mov    rsi,rbx
  4151ea:	call   41bcd0 <__ctype_b_loc@plt+0x19a00>
  4151ef:	cmp    DWORD PTR [r12+0x10],0x3d
  4151f5:	je     415252 <__ctype_b_loc@plt+0x12f82>
  4151f7:	mov    rbx,QWORD PTR [r12+0x38]
  4151fc:	call   4022d0 <__ctype_b_loc@plt>
  415201:	mov    rax,QWORD PTR [rax]
  415204:	movzx  eax,WORD PTR [rax+0x7a]
  415208:	test   al,0x2
  41520a:	lea    rax,[rip+0x1604a]        # 42b25b <__ctype_b_loc@plt+0x28f8b>
  415211:	lea    rsi,[rip+0x1603a]        # 42b252 <__ctype_b_loc@plt+0x28f82>
  415218:	cmove  rsi,rax
  41521c:	mov    edx,0x3d
  415221:	xor    eax,eax
  415223:	mov    rdi,rbx
  415226:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41522b:	mov    rcx,rax
  41522e:	lea    rsi,[rip+0x16260]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  415235:	xor    eax,eax
  415237:	mov    rdi,rbx
  41523a:	mov    rdx,rcx
  41523d:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  415242:	mov    edx,DWORD PTR [r12+0x10]
  415247:	mov    rdi,r12
  41524a:	mov    rsi,rax
  41524d:	call   413af0 <__ctype_b_loc@plt+0x11820>
  415252:	mov    eax,DWORD PTR [r12+0x4]
  415257:	mov    ecx,DWORD PTR [r12+0x20]
  41525c:	mov    DWORD PTR [r12+0x8],eax
  415261:	mov    r14,r15
  415264:	cmp    ecx,0x11f
  41526a:	jne    416904 <__ctype_b_loc@plt+0x14634>
  415270:	mov    rdi,r12
  415273:	mov    rsi,QWORD PTR [rsp+0x18]
  415278:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41527d:	mov    DWORD PTR [r12+0x10],eax
  415282:	jmp    41691d <__ctype_b_loc@plt+0x1464d>
  415287:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  41528c:	vmovups XMMWORD PTR [r12+0x10],xmm0
  415293:	mov    DWORD PTR [r12+0x20],0x11f
  41529c:	mov    rbp,QWORD PTR [r12+0x30]
  4152a1:	lea    rdx,[rsp+0x20]
  4152a6:	mov    ecx,0x1
  4152ab:	mov    rdi,rbp
  4152ae:	mov    rsi,rbx
  4152b1:	call   41c630 <__ctype_b_loc@plt+0x1a360>
  4152b6:	cmp    eax,0x8
  4152b9:	jne    4152dc <__ctype_b_loc@plt+0x1300c>
  4152bb:	mov    QWORD PTR [rsp+0x68],rbx
  4152c0:	mov    DWORD PTR [rsp+0x70],0x4
  4152c8:	lea    rsi,[rsp+0x68]
  4152cd:	mov    rdi,rbp
  4152d0:	mov    rdx,rsi
  4152d3:	call   419b00 <__ctype_b_loc@plt+0x17830>
  4152d8:	mov    DWORD PTR [rsp+0x28],eax
  4152dc:	lea    rbx,[rsp+0x20]
  4152e1:	jmp    4152fb <__ctype_b_loc@plt+0x1302b>
  4152e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4152ed:	nop    DWORD PTR [rax]
  4152f0:	mov    rdi,r12
  4152f3:	mov    rsi,rbx
  4152f6:	call   41bfe0 <__ctype_b_loc@plt+0x19d10>
  4152fb:	mov    eax,DWORD PTR [r12+0x10]
  415300:	cmp    eax,0x2e
  415303:	je     4152f0 <__ctype_b_loc@plt+0x13020>
  415305:	cmp    eax,0x3a
  415308:	jne    41597d <__ctype_b_loc@plt+0x136ad>
  41530e:	lea    rsi,[rsp+0x20]
  415313:	mov    rdi,r12
  415316:	call   41bfe0 <__ctype_b_loc@plt+0x19d10>
  41531b:	mov    edx,0x1
  415320:	jmp    41597f <__ctype_b_loc@plt+0x136af>
  415325:	mov    QWORD PTR [rsp+0x18],rax
  41532a:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  41532f:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  415334:	mov    DWORD PTR [rbx+0x20],0x11f
  41533b:	lea    rax,[rbx+0x18]
  41533f:	mov    QWORD PTR [rsp+0x10],rax
  415344:	mov    rdi,rbx
  415347:	call   417690 <__ctype_b_loc@plt+0x153c0>
  41534c:	mov    r15d,0xffffffff
  415352:	mov    QWORD PTR [rsp+0x8],r12
  415357:	mov    QWORD PTR [rsp+0x48],rbp
  41535c:	mov    QWORD PTR [rsp+0x58],rbx
  415361:	jmp    415378 <__ctype_b_loc@plt+0x130a8>
  415363:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41536d:	nop    DWORD PTR [rax]
  415370:	mov    rdi,rbx
  415373:	call   417690 <__ctype_b_loc@plt+0x153c0>
  415378:	mov    eax,DWORD PTR [rbx+0x10]
  41537b:	cmp    eax,0x105
  415380:	jne    41560a <__ctype_b_loc@plt+0x1333a>
  415386:	mov    rdi,r12
  415389:	call   417bd0 <__ctype_b_loc@plt+0x15900>
  41538e:	cmp    eax,0xffffffff
  415391:	je     415453 <__ctype_b_loc@plt+0x13183>
  415397:	mov    r13d,eax
  41539a:	cmp    r15d,0xffffffff
  41539e:	je     415450 <__ctype_b_loc@plt+0x13180>
  4153a4:	mov    QWORD PTR [rsp+0x50],r14
  4153a9:	mov    rax,QWORD PTR [r12]
  4153ad:	mov    rbx,QWORD PTR [rax+0x18]
  4153b1:	mov    r14d,r15d
  4153b4:	mov    edx,r15d
  4153b7:	nop    WORD PTR [rax+rax*1+0x0]
  4153c0:	mov    ecx,edx
  4153c2:	movsxd r15,edx
  4153c5:	mov    eax,DWORD PTR [rbx+r15*4]
  4153c9:	mov    edx,eax
  4153cb:	shr    edx,0xe
  4153ce:	lea    esi,[rdx-0x1ffff]
  4153d4:	cmp    esi,0xffffffff
  4153d7:	lea    edx,[rcx+rdx*1-0x1fffe]
  4153de:	cmove  edx,esi
  4153e1:	cmp    edx,0xffffffff
  4153e4:	jne    4153c0 <__ctype_b_loc@plt+0x130f0>
  4153e6:	not    ecx
  4153e8:	add    r13d,ecx
  4153eb:	mov    ecx,r13d
  4153ee:	neg    ecx
  4153f0:	cmovl  ecx,r13d
  4153f4:	cmp    ecx,0x20000
  4153fa:	jl     415418 <__ctype_b_loc@plt+0x13148>
  4153fc:	mov    rax,QWORD PTR [rsp+0x8]
  415401:	mov    rdi,QWORD PTR [rax+0x18]
  415405:	mov    edx,DWORD PTR [rdi+0x10]
  415408:	lea    rsi,[rip+0x15edc]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  41540f:	call   413af0 <__ctype_b_loc@plt+0x11820>
  415414:	mov    eax,DWORD PTR [rbx+r15*4]
  415418:	and    eax,0x3fff
  41541d:	shl    r13d,0xe
  415421:	lea    eax,[rax+r13*1]
  415425:	add    eax,0x7fffc000
  41542a:	mov    DWORD PTR [rbx+r15*4],eax
  41542e:	mov    r12,QWORD PTR [rsp+0x8]
  415433:	mov    r15d,r14d
  415436:	mov    rbp,QWORD PTR [rsp+0x48]
  41543b:	mov    r14,QWORD PTR [rsp+0x50]
  415440:	jmp    415453 <__ctype_b_loc@plt+0x13183>
  415442:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41544c:	nop    DWORD PTR [rax+0x0]
  415450:	mov    r15d,r13d
  415453:	mov    eax,DWORD PTR [r12+0x30]
  415458:	mov    DWORD PTR [r12+0x34],eax
  41545d:	cmp    r14d,0xffffffff
  415461:	je     415515 <__ctype_b_loc@plt+0x13245>
  415467:	mov    edx,DWORD PTR [r12+0x38]
  41546c:	cmp    edx,0xffffffff
  41546f:	je     415510 <__ctype_b_loc@plt+0x13240>
  415475:	mov    r13d,r15d
  415478:	mov    r15,rbp
  41547b:	mov    rax,QWORD PTR [r12]
  41547f:	mov    rbx,QWORD PTR [rax+0x18]
  415483:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41548d:	nop    DWORD PTR [rax]
  415490:	mov    ecx,edx
  415492:	movsxd rbp,edx
  415495:	mov    eax,DWORD PTR [rbx+rbp*4]
  415498:	mov    edx,eax
  41549a:	shr    edx,0xe
  41549d:	lea    esi,[rdx-0x1ffff]
  4154a3:	cmp    esi,0xffffffff
  4154a6:	lea    edx,[rcx+rdx*1-0x1fffe]
  4154ad:	cmove  edx,esi
  4154b0:	cmp    edx,0xffffffff
  4154b3:	jne    415490 <__ctype_b_loc@plt+0x131c0>
  4154b5:	not    ecx
  4154b7:	add    r14d,ecx
  4154ba:	mov    ecx,r14d
  4154bd:	neg    ecx
  4154bf:	cmovl  ecx,r14d
  4154c3:	cmp    ecx,0x20000
  4154c9:	jl     4154e6 <__ctype_b_loc@plt+0x13216>
  4154cb:	mov    rax,QWORD PTR [rsp+0x8]
  4154d0:	mov    rdi,QWORD PTR [rax+0x18]
  4154d4:	mov    edx,DWORD PTR [rdi+0x10]
  4154d7:	lea    rsi,[rip+0x15e0d]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  4154de:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4154e3:	mov    eax,DWORD PTR [rbx+rbp*4]
  4154e6:	and    eax,0x3fff
  4154eb:	shl    r14d,0xe
  4154ef:	lea    eax,[rax+r14*1]
  4154f3:	add    eax,0x7fffc000
  4154f8:	mov    DWORD PTR [rbx+rbp*4],eax
  4154fb:	mov    rbp,r15
  4154fe:	mov    r12,QWORD PTR [rsp+0x8]
  415503:	mov    r15d,r13d
  415506:	jmp    415515 <__ctype_b_loc@plt+0x13245>
  415508:	nop    DWORD PTR [rax+rax*1+0x0]
  415510:	mov    DWORD PTR [r12+0x38],r14d
  415515:	mov    rbx,QWORD PTR [rsp+0x58]
  41551a:	mov    eax,DWORD PTR [rbx+0x4]
  41551d:	mov    ecx,DWORD PTR [rbx+0x20]
  415520:	mov    DWORD PTR [rbx+0x8],eax
  415523:	cmp    ecx,0x11f
  415529:	jne    415540 <__ctype_b_loc@plt+0x13270>
  41552b:	mov    r13,rbp
  41552e:	mov    rdi,rbx
  415531:	mov    rsi,QWORD PTR [rsp+0x10]
  415536:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41553b:	mov    DWORD PTR [rbx+0x10],eax
  41553e:	jmp    415558 <__ctype_b_loc@plt+0x13288>
  415540:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  415545:	mov    rax,QWORD PTR [rsp+0x18]
  41554a:	vmovups XMMWORD PTR [rax],xmm0
  41554e:	mov    r13,rbp
  415551:	mov    DWORD PTR [rbp+0x0],0x11f
  415558:	lea    rbp,[rsp+0x20]
  41555d:	xor    edx,edx
  41555f:	mov    rdi,rbx
  415562:	mov    rsi,rbp
  415565:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  41556a:	cmp    DWORD PTR [rsp+0x20],0x1
  41556f:	jne    415579 <__ctype_b_loc@plt+0x132a9>
  415571:	mov    DWORD PTR [rsp+0x20],0x3
  415579:	mov    rbx,QWORD PTR [rsp+0x58]
  41557e:	mov    rdi,QWORD PTR [rbx+0x30]
  415582:	mov    rsi,rbp
  415585:	call   417ca0 <__ctype_b_loc@plt+0x159d0>
  41558a:	mov    r14d,DWORD PTR [rsp+0x34]
  41558f:	cmp    DWORD PTR [rbx+0x10],0x112
  415596:	je     4155bf <__ctype_b_loc@plt+0x132ef>
  415598:	mov    rdi,QWORD PTR [rbx+0x38]
  41559c:	xor    eax,eax
  41559e:	lea    rsi,[rip+0x15ef0]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  4155a5:	lea    rdx,[rip+0x15a7d]        # 42b029 <__ctype_b_loc@plt+0x28d59>
  4155ac:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  4155b1:	mov    edx,DWORD PTR [rbx+0x10]
  4155b4:	mov    rdi,rbx
  4155b7:	mov    rsi,rax
  4155ba:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4155bf:	mov    eax,DWORD PTR [rbx+0x4]
  4155c2:	mov    ecx,DWORD PTR [rbx+0x20]
  4155c5:	mov    DWORD PTR [rbx+0x8],eax
  4155c8:	cmp    ecx,0x11f
  4155ce:	mov    rbp,r13
  4155d1:	jne    4155f0 <__ctype_b_loc@plt+0x13320>
  4155d3:	mov    rdi,rbx
  4155d6:	mov    rsi,QWORD PTR [rsp+0x10]
  4155db:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  4155e0:	mov    DWORD PTR [rbx+0x10],eax
  4155e3:	jmp    415370 <__ctype_b_loc@plt+0x130a0>
  4155e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4155f0:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  4155f5:	mov    rax,QWORD PTR [rsp+0x18]
  4155fa:	vmovups XMMWORD PTR [rax],xmm0
  4155fe:	mov    DWORD PTR [rbp+0x0],0x11f
  415605:	jmp    415370 <__ctype_b_loc@plt+0x130a0>
  41560a:	cmp    eax,0x104
  41560f:	jne    4159be <__ctype_b_loc@plt+0x136ee>
  415615:	mov    ebp,r15d
  415618:	mov    rdi,r12
  41561b:	call   417bd0 <__ctype_b_loc@plt+0x15900>
  415620:	cmp    eax,0xffffffff
  415623:	je     4156c6 <__ctype_b_loc@plt+0x133f6>
  415629:	mov    r15d,eax
  41562c:	cmp    ebp,0xffffffff
  41562f:	je     416a2d <__ctype_b_loc@plt+0x1475d>
  415635:	mov    ecx,ebp
  415637:	mov    rax,QWORD PTR [r12]
  41563b:	mov    r13,QWORD PTR [rax+0x18]
  41563f:	mov    edx,ebp
  415641:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41564b:	nop    DWORD PTR [rax+rax*1+0x0]
  415650:	mov    ecx,edx
  415652:	movsxd rbx,edx
  415655:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  41565a:	mov    edx,eax
  41565c:	shr    edx,0xe
  41565f:	lea    esi,[rdx-0x1ffff]
  415665:	cmp    esi,0xffffffff
  415668:	lea    edx,[rcx+rdx*1-0x1fffe]
  41566f:	cmove  edx,esi
  415672:	cmp    edx,0xffffffff
  415675:	jne    415650 <__ctype_b_loc@plt+0x13380>
  415677:	not    ecx
  415679:	add    r15d,ecx
  41567c:	mov    ecx,r15d
  41567f:	neg    ecx
  415681:	cmovl  ecx,r15d
  415685:	cmp    ecx,0x20000
  41568b:	jl     4156aa <__ctype_b_loc@plt+0x133da>
  41568d:	mov    rax,QWORD PTR [rsp+0x8]
  415692:	mov    rdi,QWORD PTR [rax+0x18]
  415696:	mov    edx,DWORD PTR [rdi+0x10]
  415699:	lea    rsi,[rip+0x15c4b]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  4156a0:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4156a5:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  4156aa:	and    eax,0x3fff
  4156af:	shl    r15d,0xe
  4156b3:	lea    eax,[rax+r15*1]
  4156b7:	add    eax,0x7fffc000
  4156bc:	mov    DWORD PTR [r13+rbx*4+0x0],eax
  4156c1:	mov    r12,QWORD PTR [rsp+0x8]
  4156c6:	mov    r15d,ebp
  4156c9:	jmp    416a2d <__ctype_b_loc@plt+0x1475d>
  4156ce:	mov    r8d,DWORD PTR [rsp+0x44]
  4156d3:	cmp    ecx,r8d
  4156d6:	jne    415ce9 <__ctype_b_loc@plt+0x13a19>
  4156dc:	lea    rsi,[rip+0x15db2]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  4156e3:	lea    rdx,[rip+0x15949]        # 42b033 <__ctype_b_loc@plt+0x28d63>
  4156ea:	xor    eax,eax
  4156ec:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  4156f1:	jmp    415d05 <__ctype_b_loc@plt+0x13a35>
  4156f6:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  4156fc:	vmovups XMMWORD PTR [r12+0x10],xmm0
  415703:	mov    DWORD PTR [r12+0x20],0x11f
  41570c:	mov    rdi,r12
  41570f:	call   417690 <__ctype_b_loc@plt+0x153c0>
  415714:	mov    rdi,r15
  415717:	call   417bd0 <__ctype_b_loc@plt+0x15900>
  41571c:	mov    rdi,r15
  41571f:	mov    esi,eax
  415721:	mov    edx,r14d
  415724:	call   41cc60 <__ctype_b_loc@plt+0x1a990>
  415729:	mov    eax,DWORD PTR [r12+0x4]
  41572e:	cmp    DWORD PTR [r12+0x10],0x106
  415737:	jne    415a6c <__ctype_b_loc@plt+0x1379c>
  41573d:	mov    DWORD PTR [r12+0x8],eax
  415742:	cmp    DWORD PTR [r12+0x20],0x11f
  41574b:	jne    415fc2 <__ctype_b_loc@plt+0x13cf2>
  415751:	lea    rsi,[r12+0x18]
  415756:	mov    rdi,r12
  415759:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41575e:	mov    DWORD PTR [r12+0x10],eax
  415763:	jmp    4161e2 <__ctype_b_loc@plt+0x13f12>
  415768:	mov    QWORD PTR [rsp+0x48],r15
  41576d:	mov    rax,QWORD PTR [r12+0x30]
  415772:	mov    QWORD PTR [rsp+0x50],rax
  415777:	mov    eax,DWORD PTR [rax+0x3c]
  41577a:	mov    DWORD PTR [rsp+0x84],eax
  415781:	lea    rsi,[rip+0x15d53]        # 42b4db <__ctype_b_loc@plt+0x2920b>
  415788:	mov    edx,0xf
  41578d:	mov    rdi,r12
  415790:	call   414680 <__ctype_b_loc@plt+0x123b0>
  415795:	xor    edx,edx
  415797:	mov    rdi,r12
  41579a:	mov    rsi,rax
  41579d:	call   41bcd0 <__ctype_b_loc@plt+0x19a00>
  4157a2:	lea    rsi,[rip+0x15d42]        # 42b4eb <__ctype_b_loc@plt+0x2921b>
  4157a9:	mov    edx,0xb
  4157ae:	mov    rdi,r12
  4157b1:	call   414680 <__ctype_b_loc@plt+0x123b0>
  4157b6:	mov    r15d,0x1
  4157bc:	mov    edx,0x1
  4157c1:	mov    rdi,r12
  4157c4:	mov    rsi,rax
  4157c7:	call   41bcd0 <__ctype_b_loc@plt+0x19a00>
  4157cc:	lea    rsi,[rip+0x15d24]        # 42b4f7 <__ctype_b_loc@plt+0x29227>
  4157d3:	mov    edx,0xd
  4157d8:	mov    rdi,r12
  4157db:	call   414680 <__ctype_b_loc@plt+0x123b0>
  4157e0:	mov    edx,0x2
  4157e5:	mov    rdi,r12
  4157e8:	mov    rsi,rax
  4157eb:	call   41bcd0 <__ctype_b_loc@plt+0x19a00>
  4157f0:	mov    edx,0x3
  4157f5:	mov    rdi,r12
  4157f8:	mov    rsi,rbx
  4157fb:	call   41bcd0 <__ctype_b_loc@plt+0x19a00>
  415800:	mov    eax,DWORD PTR [r12+0x10]
  415805:	cmp    eax,0x2c
  415808:	mov    DWORD PTR [rsp+0x44],r14d
  41580d:	jne    41590f <__ctype_b_loc@plt+0x1363f>
  415813:	lea    rbx,[r12+0x10]
  415818:	mov    r14d,0x4
  41581e:	xchg   ax,ax
  415820:	mov    eax,DWORD PTR [r12+0x4]
  415825:	mov    ecx,DWORD PTR [r12+0x20]
  41582a:	mov    DWORD PTR [r12+0x8],eax
  41582f:	cmp    ecx,0x11f
  415835:	jne    415850 <__ctype_b_loc@plt+0x13580>
  415837:	mov    rdi,r12
  41583a:	mov    rsi,r13
  41583d:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  415842:	mov    DWORD PTR [r12+0x10],eax
  415847:	cmp    eax,0x11d
  41584c:	jne    415872 <__ctype_b_loc@plt+0x135a2>
  41584e:	jmp    41589c <__ctype_b_loc@plt+0x135cc>
  415850:	mov    rax,QWORD PTR [rsp+0x8]
  415855:	vmovups xmm0,XMMWORD PTR [rax]
  415859:	vmovups XMMWORD PTR [rbx],xmm0
  41585d:	mov    DWORD PTR [r12+0x20],0x11f
  415866:	mov    eax,DWORD PTR [r12+0x10]
  41586b:	cmp    eax,0x11d
  415870:	je     41589c <__ctype_b_loc@plt+0x135cc>
  415872:	mov    rdi,QWORD PTR [r12+0x38]
  415877:	xor    eax,eax
  415879:	lea    rsi,[rip+0x15c15]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  415880:	lea    rdx,[rip+0x157cd]        # 42b054 <__ctype_b_loc@plt+0x28d84>
  415887:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41588c:	mov    edx,DWORD PTR [r12+0x10]
  415891:	mov    rdi,r12
  415894:	mov    rsi,rax
  415897:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41589c:	mov    rbp,QWORD PTR [r12+0x18]
  4158a1:	mov    eax,DWORD PTR [r12+0x4]
  4158a6:	mov    DWORD PTR [r12+0x8],eax
  4158ab:	cmp    DWORD PTR [r12+0x20],0x11f
  4158b4:	jne    4158d0 <__ctype_b_loc@plt+0x13600>
  4158b6:	mov    rdi,r12
  4158b9:	mov    rsi,r13
  4158bc:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  4158c1:	mov    DWORD PTR [r12+0x10],eax
  4158c6:	jmp    4158e3 <__ctype_b_loc@plt+0x13613>
  4158c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4158d0:	mov    rax,QWORD PTR [rsp+0x8]
  4158d5:	vmovups xmm0,XMMWORD PTR [rax]
  4158d9:	vmovups XMMWORD PTR [rbx],xmm0
  4158dd:	mov    DWORD PTR [rax],0x11f
  4158e3:	lea    r15d,[r14+0x1]
  4158e7:	mov    rdi,r12
  4158ea:	mov    rsi,rbp
  4158ed:	mov    edx,r14d
  4158f0:	call   41bcd0 <__ctype_b_loc@plt+0x19a00>
  4158f5:	mov    eax,DWORD PTR [r12+0x10]
  4158fa:	mov    r14d,r15d
  4158fd:	cmp    eax,0x2c
  415900:	je     415820 <__ctype_b_loc@plt+0x13550>
  415906:	add    r15d,0xfffffffd
  41590a:	mov    rbp,QWORD PTR [rsp+0x8]
  41590f:	cmp    eax,0x10b
  415914:	je     415940 <__ctype_b_loc@plt+0x13670>
  415916:	mov    rdi,QWORD PTR [r12+0x38]
  41591b:	lea    rsi,[rip+0x15b73]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  415922:	lea    rdx,[rip+0x15887]        # 42b1b0 <__ctype_b_loc@plt+0x28ee0>
  415929:	xor    eax,eax
  41592b:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  415930:	mov    edx,DWORD PTR [r12+0x10]
  415935:	mov    rdi,r12
  415938:	mov    rsi,rax
  41593b:	call   413af0 <__ctype_b_loc@plt+0x11820>
  415940:	mov    ecx,DWORD PTR [r12+0x4]
  415945:	mov    eax,DWORD PTR [r12+0x20]
  41594a:	mov    DWORD PTR [r12+0x8],ecx
  41594f:	cmp    eax,0x11f
  415954:	mov    QWORD PTR [rsp+0x18],r13
  415959:	jne    415fdd <__ctype_b_loc@plt+0x13d0d>
  41595f:	mov    rdi,r12
  415962:	mov    rsi,r13
  415965:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41596a:	mov    DWORD PTR [r12+0x10],eax
  41596f:	mov    eax,DWORD PTR [r12+0x4]
  415974:	mov    DWORD PTR [rsp+0x64],eax
  415978:	jmp    415ff6 <__ctype_b_loc@plt+0x13d26>
  41597d:	xor    edx,edx
  41597f:	lea    rbx,[rsp+0x68]
  415984:	mov    rdi,r12
  415987:	mov    rsi,rbx
  41598a:	mov    ecx,r14d
  41598d:	call   41a8c0 <__ctype_b_loc@plt+0x185f0>
  415992:	mov    rdi,QWORD PTR [r12+0x30]
  415997:	lea    rsi,[rsp+0x20]
  41599c:	mov    rdx,rbx
  41599f:	call   41d6d0 <__ctype_b_loc@plt+0x1b400>
  4159a4:	mov    rax,QWORD PTR [r12+0x30]
  4159a9:	mov    rcx,QWORD PTR [rax]
  4159ac:	mov    rcx,QWORD PTR [rcx+0x28]
  4159b0:	movsxd rax,DWORD PTR [rax+0x30]
  4159b4:	mov    DWORD PTR [rcx+rax*4-0x4],r14d
  4159b9:	jmp    41753f <__ctype_b_loc@plt+0x1526f>
  4159be:	cmp    r14d,0xffffffff
  4159c2:	je     416b3b <__ctype_b_loc@plt+0x1486b>
  4159c8:	cmp    r15d,0xffffffff
  4159cc:	je     416ae0 <__ctype_b_loc@plt+0x14810>
  4159d2:	mov    rdi,r14
  4159d5:	mov    r14,rbp
  4159d8:	mov    rax,QWORD PTR [r12]
  4159dc:	mov    ecx,r15d
  4159df:	mov    r15,QWORD PTR [rax+0x18]
  4159e3:	mov    r13d,ecx
  4159e6:	mov    edx,ecx
  4159e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4159f0:	mov    ecx,edx
  4159f2:	movsxd rbx,edx
  4159f5:	mov    eax,DWORD PTR [r15+rbx*4]
  4159f9:	mov    edx,eax
  4159fb:	shr    edx,0xe
  4159fe:	lea    esi,[rdx-0x1ffff]
  415a04:	cmp    esi,0xffffffff
  415a07:	lea    edx,[rcx+rdx*1-0x1fffe]
  415a0e:	cmove  edx,esi
  415a11:	cmp    edx,0xffffffff
  415a14:	jne    4159f0 <__ctype_b_loc@plt+0x13720>
  415a16:	not    ecx
  415a18:	add    edi,ecx
  415a1a:	mov    ecx,edi
  415a1c:	neg    ecx
  415a1e:	mov    rbp,rdi
  415a21:	cmovl  ecx,edi
  415a24:	cmp    ecx,0x20000
  415a2a:	jl     415a48 <__ctype_b_loc@plt+0x13778>
  415a2c:	mov    rax,QWORD PTR [rsp+0x8]
  415a31:	mov    rdi,QWORD PTR [rax+0x18]
  415a35:	mov    edx,DWORD PTR [rdi+0x10]
  415a38:	lea    rsi,[rip+0x158ac]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  415a3f:	call   413af0 <__ctype_b_loc@plt+0x11820>
  415a44:	mov    eax,DWORD PTR [r15+rbx*4]
  415a48:	and    eax,0x3fff
  415a4d:	shl    ebp,0xe
  415a50:	lea    eax,[rax+rbp*1]
  415a53:	add    eax,0x7fffc000
  415a58:	mov    DWORD PTR [r15+rbx*4],eax
  415a5c:	mov    r12,QWORD PTR [rsp+0x8]
  415a61:	mov    r15d,r13d
  415a64:	mov    rbp,r14
  415a67:	jmp    416b3b <__ctype_b_loc@plt+0x1486b>
  415a6c:	mov    rdi,QWORD PTR [r12+0x38]
  415a71:	mov    r8d,DWORD PTR [rsp+0x44]
  415a76:	cmp    eax,r8d
  415a79:	jne    4161b6 <__ctype_b_loc@plt+0x13ee6>
  415a7f:	lea    rsi,[rip+0x15a0f]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  415a86:	lea    rdx,[rip+0x1557a]        # 42b007 <__ctype_b_loc@plt+0x28d37>
  415a8d:	xor    eax,eax
  415a8f:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  415a94:	jmp    4161d2 <__ctype_b_loc@plt+0x13f02>
  415a99:	mov    ebp,0x0
  415a9e:	cmp    eax,0x3b
  415aa1:	je     414fed <__ctype_b_loc@plt+0x12d1d>
  415aa7:	mov    QWORD PTR [rsp+0x10],rbx
  415aac:	lea    rsi,[rsp+0x20]
  415ab1:	xor    edx,edx
  415ab3:	mov    rdi,r12
  415ab6:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  415abb:	cmp    DWORD PTR [r12+0x10],0x2c
  415ac1:	jne    416e31 <__ctype_b_loc@plt+0x14b61>
  415ac7:	lea    rax,[r12+0x18]
  415acc:	mov    QWORD PTR [rsp+0x8],rax
  415ad1:	lea    rax,[r12+0x10]
  415ad6:	mov    QWORD PTR [rsp+0x18],rax
  415adb:	mov    ebp,0x1
  415ae0:	lea    rbx,[rsp+0x20]
  415ae5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415aef:	nop
  415af0:	mov    eax,DWORD PTR [r12+0x4]
  415af5:	mov    ecx,DWORD PTR [r12+0x20]
  415afa:	mov    DWORD PTR [r12+0x8],eax
  415aff:	cmp    ecx,0x11f
  415b05:	jne    415b1b <__ctype_b_loc@plt+0x1384b>
  415b07:	mov    rdi,r12
  415b0a:	mov    rsi,QWORD PTR [rsp+0x8]
  415b0f:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  415b14:	mov    DWORD PTR [r12+0x10],eax
  415b19:	jmp    415b30 <__ctype_b_loc@plt+0x13860>
  415b1b:	vmovups xmm0,XMMWORD PTR [r15]
  415b20:	mov    rax,QWORD PTR [rsp+0x18]
  415b25:	vmovups XMMWORD PTR [rax],xmm0
  415b29:	mov    DWORD PTR [r15],0x11f
  415b30:	mov    r13,QWORD PTR [r12+0x30]
  415b35:	mov    rdi,r13
  415b38:	mov    rsi,rbx
  415b3b:	call   419010 <__ctype_b_loc@plt+0x16d40>
  415b40:	cmp    DWORD PTR [rsp+0x20],0xc
  415b45:	jne    415b60 <__ctype_b_loc@plt+0x13890>
  415b47:	mov    eax,DWORD PTR [rsp+0x28]
  415b4b:	test   eax,0x100
  415b50:	jne    415b60 <__ctype_b_loc@plt+0x13890>
  415b52:	movzx  ecx,BYTE PTR [r13+0x4a]
  415b57:	cmp    eax,ecx
  415b59:	jl     415b60 <__ctype_b_loc@plt+0x13890>
  415b5b:	add    DWORD PTR [r13+0x3c],0xffffffff
  415b60:	mov    ecx,DWORD PTR [r13+0x3c]
  415b64:	lea    r14d,[rcx+0x1]
  415b68:	mov    rax,QWORD PTR [r13+0x0]
  415b6c:	movzx  edx,BYTE PTR [rax+0x73]
  415b70:	cmp    ecx,edx
  415b72:	jl     415bad <__ctype_b_loc@plt+0x138dd>
  415b74:	cmp    ecx,0xf9
  415b7a:	jl     415ba0 <__ctype_b_loc@plt+0x138d0>
  415b7c:	mov    rdi,QWORD PTR [r13+0x18]
  415b80:	mov    edx,DWORD PTR [rdi+0x10]
  415b83:	lea    rsi,[rip+0x15794]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  415b8a:	call   413af0 <__ctype_b_loc@plt+0x11820>
  415b8f:	mov    rax,QWORD PTR [r13+0x0]
  415b93:	add    rax,0x73
  415b97:	mov    ecx,DWORD PTR [r13+0x3c]
  415b9b:	add    ecx,0x1
  415b9e:	jmp    415ba7 <__ctype_b_loc@plt+0x138d7>
  415ba0:	add    rax,0x73
  415ba4:	mov    ecx,r14d
  415ba7:	mov    BYTE PTR [rax],r14b
  415baa:	mov    r14d,ecx
  415bad:	mov    DWORD PTR [r13+0x3c],r14d
  415bb1:	add    r14d,0xffffffff
  415bb5:	mov    rdi,r13
  415bb8:	mov    rsi,rbx
  415bbb:	mov    edx,r14d
  415bbe:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  415bc3:	xor    edx,edx
  415bc5:	mov    rdi,r12
  415bc8:	mov    rsi,rbx
  415bcb:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  415bd0:	add    ebp,0x1
  415bd3:	cmp    DWORD PTR [r12+0x10],0x2c
  415bd9:	je     415af0 <__ctype_b_loc@plt+0x13820>
  415bdf:	jmp    416e36 <__ctype_b_loc@plt+0x14b66>
  415be4:	vmovups xmm0,XMMWORD PTR [rbx]
  415be8:	vmovups XMMWORD PTR [r12+0x10],xmm0
  415bef:	mov    DWORD PTR [r12+0x20],0x11f
  415bf8:	jmp    41753f <__ctype_b_loc@plt+0x1526f>
  415bfd:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  415c02:	vmovups XMMWORD PTR [r12+0x10],xmm0
  415c09:	mov    DWORD PTR [r12+0x20],0x11f
  415c12:	mov    eax,DWORD PTR [r12+0x10]
  415c17:	mov    rbx,QWORD PTR [r12+0x30]
  415c1c:	cmp    eax,0x11d
  415c21:	je     415c4d <__ctype_b_loc@plt+0x1397d>
  415c23:	mov    rdi,QWORD PTR [r12+0x38]
  415c28:	lea    rsi,[rip+0x15866]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  415c2f:	lea    rdx,[rip+0x1541e]        # 42b054 <__ctype_b_loc@plt+0x28d84>
  415c36:	xor    eax,eax
  415c38:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  415c3d:	mov    edx,DWORD PTR [r12+0x10]
  415c42:	mov    rdi,r12
  415c45:	mov    rsi,rax
  415c48:	call   413af0 <__ctype_b_loc@plt+0x11820>
  415c4d:	mov    r15,QWORD PTR [r12+0x18]
  415c52:	mov    eax,DWORD PTR [r12+0x4]
  415c57:	mov    DWORD PTR [r12+0x8],eax
  415c5c:	cmp    DWORD PTR [r12+0x20],0x11f
  415c65:	jne    416392 <__ctype_b_loc@plt+0x140c2>
  415c6b:	lea    rsi,[r12+0x18]
  415c70:	mov    rdi,r12
  415c73:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  415c78:	mov    DWORD PTR [r12+0x10],eax
  415c7d:	jmp    4163a7 <__ctype_b_loc@plt+0x140d7>
  415c82:	mov    DWORD PTR [rsp+0x20],0x0
  415c8a:	xor    r15d,r15d
  415c8d:	jmp    4167d0 <__ctype_b_loc@plt+0x14500>
  415c92:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  415c97:	vmovups XMMWORD PTR [r14],xmm0
  415c9c:	mov    DWORD PTR [rbp+0x0],0x11f
  415ca3:	jmp    415d15 <__ctype_b_loc@plt+0x13a45>
  415ca5:	lea    rsi,[rip+0x157c0]        # 42b46c <__ctype_b_loc@plt+0x2919c>
  415cac:	lea    rdx,[rip+0x15354]        # 42b007 <__ctype_b_loc@plt+0x28d37>
  415cb3:	lea    rcx,[rip+0x1533e]        # 42aff8 <__ctype_b_loc@plt+0x28d28>
  415cba:	xor    ebp,ebp
  415cbc:	xor    eax,eax
  415cbe:	mov    r8d,r14d
  415cc1:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  415cc6:	mov    edx,DWORD PTR [r12+0x10]
  415ccb:	mov    rdi,r12
  415cce:	jmp    416c7d <__ctype_b_loc@plt+0x149ad>
  415cd3:	lea    rsi,[rip+0x157c9]        # 42b4a3 <__ctype_b_loc@plt+0x291d3>
  415cda:	mov    rdi,r12
  415cdd:	mov    edx,eax
  415cdf:	call   413af0 <__ctype_b_loc@plt+0x11820>
  415ce4:	jmp    4172fb <__ctype_b_loc@plt+0x1502b>
  415ce9:	lea    rsi,[rip+0x1577c]        # 42b46c <__ctype_b_loc@plt+0x2919c>
  415cf0:	lea    rdx,[rip+0x1533c]        # 42b033 <__ctype_b_loc@plt+0x28d63>
  415cf7:	lea    rcx,[rip+0x1531d]        # 42b01b <__ctype_b_loc@plt+0x28d4b>
  415cfe:	xor    eax,eax
  415d00:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  415d05:	mov    edx,DWORD PTR [r12+0x10]
  415d0a:	mov    rdi,r12
  415d0d:	mov    rsi,rax
  415d10:	call   413af0 <__ctype_b_loc@plt+0x11820>
  415d15:	lea    rsi,[rsp+0x20]
  415d1a:	xor    edx,edx
  415d1c:	mov    rdi,r12
  415d1f:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  415d24:	cmp    DWORD PTR [rsp+0x20],0x1
  415d29:	jne    415d33 <__ctype_b_loc@plt+0x13a63>
  415d2b:	mov    DWORD PTR [rsp+0x20],0x3
  415d33:	mov    rdi,QWORD PTR [r12+0x30]
  415d38:	lea    rsi,[rsp+0x20]
  415d3d:	call   417ca0 <__ctype_b_loc@plt+0x159d0>
  415d42:	mov    r15d,DWORD PTR [rsp+0x34]
  415d47:	cmp    BYTE PTR [rsp+0x95],0x0
  415d4f:	je     415dfc <__ctype_b_loc@plt+0x13b2c>
  415d55:	mov    rdi,r12
  415d58:	call   417ab0 <__ctype_b_loc@plt+0x157e0>
  415d5d:	mov    rax,QWORD PTR [r12+0x30]
  415d62:	mov    ecx,DWORD PTR [rax+0x30]
  415d65:	mov    DWORD PTR [rax+0x34],ecx
  415d68:	cmp    r15d,0xffffffff
  415d6c:	je     4164b8 <__ctype_b_loc@plt+0x141e8>
  415d72:	mov    esi,DWORD PTR [rax+0x38]
  415d75:	cmp    esi,0xffffffff
  415d78:	je     4164b4 <__ctype_b_loc@plt+0x141e4>
  415d7e:	mov    rcx,QWORD PTR [rax]
  415d81:	mov    rbx,QWORD PTR [rcx+0x18]
  415d85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415d8f:	nop
  415d90:	mov    edx,esi
  415d92:	movsxd rbp,esi
  415d95:	mov    ecx,DWORD PTR [rbx+rbp*4]
  415d98:	mov    esi,ecx
  415d9a:	shr    esi,0xe
  415d9d:	lea    edi,[rsi-0x1ffff]
  415da3:	cmp    edi,0xffffffff
  415da6:	lea    esi,[rdx+rsi*1-0x1fffe]
  415dad:	cmove  esi,edi
  415db0:	cmp    esi,0xffffffff
  415db3:	jne    415d90 <__ctype_b_loc@plt+0x13ac0>
  415db5:	not    edx
  415db7:	add    r15d,edx
  415dba:	mov    edx,r15d
  415dbd:	neg    edx
  415dbf:	cmovl  edx,r15d
  415dc3:	cmp    edx,0x20000
  415dc9:	jl     415de1 <__ctype_b_loc@plt+0x13b11>
  415dcb:	mov    rdi,QWORD PTR [rax+0x18]
  415dcf:	mov    edx,DWORD PTR [rdi+0x10]
  415dd2:	lea    rsi,[rip+0x15512]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  415dd9:	call   413af0 <__ctype_b_loc@plt+0x11820>
  415dde:	mov    ecx,DWORD PTR [rbx+rbp*4]
  415de1:	and    ecx,0x3fff
  415de7:	shl    r15d,0xe
  415deb:	lea    eax,[rcx+r15*1]
  415def:	add    eax,0x7fffc000
  415df4:	mov    DWORD PTR [rbx+rbp*4],eax
  415df7:	jmp    4164b8 <__ctype_b_loc@plt+0x141e8>
  415dfc:	mov    r8,QWORD PTR [r13+0x18]
  415e00:	mov    r14,QWORD PTR [r13+0x28]
  415e04:	mov    rax,QWORD PTR [r14]
  415e07:	mov    QWORD PTR [r13+0x28],rax
  415e0b:	mov    cl,BYTE PTR [r14+0xc]
  415e0f:	mov    rdx,QWORD PTR [r8+0x30]
  415e13:	movzx  esi,BYTE PTR [rdx+0x4a]
  415e17:	cmp    sil,cl
  415e1a:	jbe    415eed <__ctype_b_loc@plt+0x13c1d>
  415e20:	mov    edi,DWORD PTR [rdx+0x30]
  415e23:	mov    rax,QWORD PTR [rdx]
  415e26:	mov    rbp,QWORD PTR [rax+0x30]
  415e2a:	mov    ebx,esi
  415e2c:	sub    bl,cl
  415e2e:	mov    r9d,ecx
  415e31:	not    r9b
  415e34:	add    r9b,sil
  415e37:	and    bl,0x3
  415e3a:	je     415e74 <__ctype_b_loc@plt+0x13ba4>
  415e3c:	add    rsi,0xff
  415e43:	neg    bl
  415e45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415e4f:	nop
  415e50:	movzx  eax,sil
  415e54:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  415e5c:	shl    rax,0x4
  415e60:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  415e64:	add    rsi,0xffffffffffffffff
  415e68:	add    bl,0x1
  415e6b:	jne    415e50 <__ctype_b_loc@plt+0x13b80>
  415e6d:	add    rsi,0xffffffffffffff01
  415e74:	cmp    r9b,0x3
  415e78:	jb     415eea <__ctype_b_loc@plt+0x13c1a>
  415e7a:	nop    WORD PTR [rax+rax*1+0x0]
  415e80:	lea    eax,[rsi-0x1]
  415e83:	movzx  eax,al
  415e86:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  415e8e:	shl    rax,0x4
  415e92:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  415e96:	lea    eax,[rsi+0xfe]
  415e9c:	movzx  eax,al
  415e9f:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  415ea7:	shl    rax,0x4
  415eab:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  415eaf:	lea    eax,[rsi+0xfd]
  415eb5:	movzx  eax,al
  415eb8:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  415ec0:	shl    rax,0x4
  415ec4:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  415ec8:	lea    eax,[rsi+0xfc]
  415ece:	movzx  eax,al
  415ed1:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  415ed9:	shl    rax,0x4
  415edd:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  415ee1:	add    rsi,0xfffffffffffffffc
  415ee5:	cmp    sil,cl
  415ee8:	ja     415e80 <__ctype_b_loc@plt+0x13bb0>
  415eea:	mov    BYTE PTR [rdx+0x4a],cl
  415eed:	cmp    BYTE PTR [r14+0xd],0x0
  415ef2:	je     415f09 <__ctype_b_loc@plt+0x13c39>
  415ef4:	movzx  esi,cl
  415ef7:	shl    esi,0x6
  415efa:	or     esi,0x23
  415efd:	mov    edx,DWORD PTR [r8+0x8]
  415f01:	mov    rdi,r13
  415f04:	call   419630 <__ctype_b_loc@plt+0x17360>
  415f09:	lea    rax,[r13+0x18]
  415f0d:	mov    QWORD PTR [rsp+0x10],rax
  415f12:	movzx  eax,BYTE PTR [r13+0x4a]
  415f17:	mov    DWORD PTR [r13+0x3c],eax
  415f1b:	mov    r14d,DWORD PTR [r14+0x8]
  415f1f:	mov    eax,DWORD PTR [r13+0x30]
  415f23:	mov    DWORD PTR [r13+0x34],eax
  415f27:	cmp    r14d,0xffffffff
  415f2b:	je     416c8e <__ctype_b_loc@plt+0x149be>
  415f31:	mov    edx,DWORD PTR [r13+0x38]
  415f35:	cmp    edx,0xffffffff
  415f38:	je     416c8a <__ctype_b_loc@plt+0x149ba>
  415f3e:	mov    rax,QWORD PTR [r13+0x0]
  415f42:	mov    rbp,QWORD PTR [rax+0x18]
  415f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415f50:	mov    ecx,edx
  415f52:	movsxd rbx,edx
  415f55:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  415f59:	mov    edx,eax
  415f5b:	shr    edx,0xe
  415f5e:	lea    esi,[rdx-0x1ffff]
  415f64:	cmp    esi,0xffffffff
  415f67:	lea    edx,[rcx+rdx*1-0x1fffe]
  415f6e:	cmove  edx,esi
  415f71:	cmp    edx,0xffffffff
  415f74:	jne    415f50 <__ctype_b_loc@plt+0x13c80>
  415f76:	not    ecx
  415f78:	add    r14d,ecx
  415f7b:	mov    ecx,r14d
  415f7e:	neg    ecx
  415f80:	cmovl  ecx,r14d
  415f84:	cmp    ecx,0x20000
  415f8a:	jl     415fa7 <__ctype_b_loc@plt+0x13cd7>
  415f8c:	mov    rax,QWORD PTR [rsp+0x10]
  415f91:	mov    rdi,QWORD PTR [rax]
  415f94:	mov    edx,DWORD PTR [rdi+0x10]
  415f97:	lea    rsi,[rip+0x1534d]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  415f9e:	call   413af0 <__ctype_b_loc@plt+0x11820>
  415fa3:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  415fa7:	and    eax,0x3fff
  415fac:	shl    r14d,0xe
  415fb0:	lea    eax,[rax+r14*1]
  415fb4:	add    eax,0x7fffc000
  415fb9:	mov    DWORD PTR [rbp+rbx*4+0x0],eax
  415fbd:	jmp    416c8e <__ctype_b_loc@plt+0x149be>
  415fc2:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  415fc8:	vmovups XMMWORD PTR [r12+0x10],xmm0
  415fcf:	mov    DWORD PTR [r12+0x20],0x11f
  415fd8:	jmp    4161e2 <__ctype_b_loc@plt+0x13f12>
  415fdd:	mov    DWORD PTR [rsp+0x64],ecx
  415fe1:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  415fe6:	vmovups XMMWORD PTR [r12+0x10],xmm0
  415fed:	mov    DWORD PTR [r12+0x20],0x11f
  415ff6:	lea    rsi,[rsp+0x20]
  415ffb:	xor    edx,edx
  415ffd:	mov    rdi,r12
  416000:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  416005:	mov    r13d,0x1
  41600b:	cmp    DWORD PTR [r12+0x10],0x2c
  416011:	jne    41612a <__ctype_b_loc@plt+0x13e5a>
  416017:	lea    rax,[r12+0x10]
  41601c:	mov    QWORD PTR [rsp+0x10],rax
  416021:	mov    r13d,0x1
  416027:	lea    r14,[rsp+0x20]
  41602c:	nop    DWORD PTR [rax+0x0]
  416030:	mov    eax,DWORD PTR [r12+0x4]
  416035:	mov    ecx,DWORD PTR [r12+0x20]
  41603a:	mov    DWORD PTR [r12+0x8],eax
  41603f:	cmp    ecx,0x11f
  416045:	jne    416060 <__ctype_b_loc@plt+0x13d90>
  416047:	mov    rdi,r12
  41604a:	mov    rsi,QWORD PTR [rsp+0x18]
  41604f:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  416054:	mov    DWORD PTR [r12+0x10],eax
  416059:	jmp    416078 <__ctype_b_loc@plt+0x13da8>
  41605b:	nop    DWORD PTR [rax+rax*1+0x0]
  416060:	mov    rax,QWORD PTR [rsp+0x8]
  416065:	vmovups xmm0,XMMWORD PTR [rax]
  416069:	mov    rcx,QWORD PTR [rsp+0x10]
  41606e:	vmovups XMMWORD PTR [rcx],xmm0
  416072:	mov    DWORD PTR [rax],0x11f
  416078:	mov    rbp,QWORD PTR [r12+0x30]
  41607d:	mov    rdi,rbp
  416080:	mov    rsi,r14
  416083:	call   419010 <__ctype_b_loc@plt+0x16d40>
  416088:	cmp    DWORD PTR [rsp+0x20],0xc
  41608d:	jne    4160b0 <__ctype_b_loc@plt+0x13de0>
  41608f:	mov    eax,DWORD PTR [rsp+0x28]
  416093:	test   eax,0x100
  416098:	jne    4160b0 <__ctype_b_loc@plt+0x13de0>
  41609a:	movzx  ecx,BYTE PTR [rbp+0x4a]
  41609e:	cmp    eax,ecx
  4160a0:	jl     4160b0 <__ctype_b_loc@plt+0x13de0>
  4160a2:	add    DWORD PTR [rbp+0x3c],0xffffffff
  4160a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4160b0:	mov    ecx,DWORD PTR [rbp+0x3c]
  4160b3:	lea    ebx,[rcx+0x1]
  4160b6:	mov    rax,QWORD PTR [rbp+0x0]
  4160ba:	movzx  edx,BYTE PTR [rax+0x73]
  4160be:	cmp    ecx,edx
  4160c0:	jl     4160fa <__ctype_b_loc@plt+0x13e2a>
  4160c2:	cmp    ecx,0xf9
  4160c8:	jl     4160f0 <__ctype_b_loc@plt+0x13e20>
  4160ca:	mov    rdi,QWORD PTR [rbp+0x18]
  4160ce:	mov    edx,DWORD PTR [rdi+0x10]
  4160d1:	lea    rsi,[rip+0x15246]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  4160d8:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4160dd:	mov    rax,QWORD PTR [rbp+0x0]
  4160e1:	add    rax,0x73
  4160e5:	mov    ecx,DWORD PTR [rbp+0x3c]
  4160e8:	add    ecx,0x1
  4160eb:	jmp    4160f6 <__ctype_b_loc@plt+0x13e26>
  4160ed:	nop    DWORD PTR [rax]
  4160f0:	add    rax,0x73
  4160f4:	mov    ecx,ebx
  4160f6:	mov    BYTE PTR [rax],bl
  4160f8:	mov    ebx,ecx
  4160fa:	mov    DWORD PTR [rbp+0x3c],ebx
  4160fd:	add    ebx,0xffffffff
  416100:	mov    rdi,rbp
  416103:	mov    rsi,r14
  416106:	mov    edx,ebx
  416108:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  41610d:	xor    edx,edx
  41610f:	mov    rdi,r12
  416112:	mov    rsi,r14
  416115:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  41611a:	add    r13d,0x1
  41611e:	cmp    DWORD PTR [r12+0x10],0x2c
  416124:	je     416030 <__ctype_b_loc@plt+0x13d60>
  41612a:	lea    rcx,[rsp+0x20]
  41612f:	mov    esi,0x3
  416134:	mov    rdi,r12
  416137:	mov    edx,r13d
  41613a:	call   41d3f0 <__ctype_b_loc@plt+0x1b120>
  41613f:	mov    rax,QWORD PTR [rsp+0x50]
  416144:	mov    ecx,DWORD PTR [rax+0x3c]
  416147:	lea    ebx,[rcx+0x3]
  41614a:	mov    rax,QWORD PTR [rax]
  41614d:	movzx  edx,BYTE PTR [rax+0x73]
  416151:	cmp    ebx,edx
  416153:	mov    r14d,DWORD PTR [rsp+0x44]
  416158:	mov    rbp,QWORD PTR [rsp+0x8]
  41615d:	mov    r13,QWORD PTR [rsp+0x18]
  416162:	jle    416193 <__ctype_b_loc@plt+0x13ec3>
  416164:	cmp    ecx,0xf7
  41616a:	jl     41618d <__ctype_b_loc@plt+0x13ebd>
  41616c:	mov    rbp,QWORD PTR [rsp+0x50]
  416171:	mov    rdi,QWORD PTR [rbp+0x18]
  416175:	mov    edx,DWORD PTR [rdi+0x10]
  416178:	lea    rsi,[rip+0x1519f]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41617f:	call   413af0 <__ctype_b_loc@plt+0x11820>
  416184:	mov    rax,QWORD PTR [rbp+0x0]
  416188:	mov    rbp,QWORD PTR [rsp+0x8]
  41618d:	add    rax,0x73
  416191:	mov    BYTE PTR [rax],bl
  416193:	xor    r8d,r8d
  416196:	mov    rdi,r12
  416199:	mov    esi,DWORD PTR [rsp+0x84]
  4161a0:	mov    edx,DWORD PTR [rsp+0x64]
  4161a4:	mov    ecx,r15d
  4161a7:	call   41ce80 <__ctype_b_loc@plt+0x1abb0>
  4161ac:	mov    r15,QWORD PTR [rsp+0x48]
  4161b1:	jmp    4172fb <__ctype_b_loc@plt+0x1502b>
  4161b6:	lea    rsi,[rip+0x152af]        # 42b46c <__ctype_b_loc@plt+0x2919c>
  4161bd:	lea    rdx,[rip+0x14e43]        # 42b007 <__ctype_b_loc@plt+0x28d37>
  4161c4:	lea    rcx,[rip+0x14e6e]        # 42b039 <__ctype_b_loc@plt+0x28d69>
  4161cb:	xor    eax,eax
  4161cd:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  4161d2:	mov    edx,DWORD PTR [r12+0x10]
  4161d7:	mov    rdi,r12
  4161da:	mov    rsi,rax
  4161dd:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4161e2:	mov    r12,rbp
  4161e5:	mov    r8,QWORD PTR [r15+0x18]
  4161e9:	mov    r14,QWORD PTR [r15+0x28]
  4161ed:	mov    rax,QWORD PTR [r14]
  4161f0:	mov    QWORD PTR [r15+0x28],rax
  4161f4:	mov    cl,BYTE PTR [r14+0xc]
  4161f8:	mov    rdx,QWORD PTR [r8+0x30]
  4161fc:	movzx  esi,BYTE PTR [rdx+0x4a]
  416200:	cmp    sil,cl
  416203:	jbe    4162d1 <__ctype_b_loc@plt+0x14001>
  416209:	mov    edi,DWORD PTR [rdx+0x30]
  41620c:	mov    rax,QWORD PTR [rdx]
  41620f:	mov    rax,QWORD PTR [rax+0x30]
  416213:	mov    ebx,esi
  416215:	sub    bl,cl
  416217:	mov    r9d,ecx
  41621a:	not    r9b
  41621d:	add    r9b,sil
  416220:	and    bl,0x3
  416223:	je     416254 <__ctype_b_loc@plt+0x13f84>
  416225:	add    rsi,0xff
  41622c:	neg    bl
  41622e:	xchg   ax,ax
  416230:	movzx  ebp,sil
  416234:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  41623c:	shl    rbp,0x4
  416240:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  416244:	add    rsi,0xffffffffffffffff
  416248:	add    bl,0x1
  41624b:	jne    416230 <__ctype_b_loc@plt+0x13f60>
  41624d:	add    rsi,0xffffffffffffff01
  416254:	cmp    r9b,0x3
  416258:	jb     4162ce <__ctype_b_loc@plt+0x13ffe>
  41625a:	nop    WORD PTR [rax+rax*1+0x0]
  416260:	lea    ebp,[rsi-0x1]
  416263:	movzx  ebp,bpl
  416267:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  41626f:	shl    rbp,0x4
  416273:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  416277:	lea    ebp,[rsi+0xfe]
  41627d:	movzx  ebp,bpl
  416281:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  416289:	shl    rbp,0x4
  41628d:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  416291:	lea    ebp,[rsi+0xfd]
  416297:	movzx  ebp,bpl
  41629b:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  4162a3:	shl    rbp,0x4
  4162a7:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  4162ab:	lea    ebp,[rsi+0xfc]
  4162b1:	movzx  ebp,bpl
  4162b5:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  4162bd:	shl    rbp,0x4
  4162c1:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  4162c5:	add    rsi,0xfffffffffffffffc
  4162c9:	cmp    sil,cl
  4162cc:	ja     416260 <__ctype_b_loc@plt+0x13f90>
  4162ce:	mov    BYTE PTR [rdx+0x4a],cl
  4162d1:	cmp    BYTE PTR [r14+0xd],0x0
  4162d6:	je     4162ed <__ctype_b_loc@plt+0x1401d>
  4162d8:	movzx  esi,cl
  4162db:	shl    esi,0x6
  4162de:	or     esi,0x23
  4162e1:	mov    edx,DWORD PTR [r8+0x8]
  4162e5:	mov    rdi,r15
  4162e8:	call   419630 <__ctype_b_loc@plt+0x17360>
  4162ed:	movzx  eax,BYTE PTR [r15+0x4a]
  4162f2:	mov    DWORD PTR [r15+0x3c],eax
  4162f6:	mov    r14d,DWORD PTR [r14+0x8]
  4162fa:	mov    eax,DWORD PTR [r15+0x30]
  4162fe:	mov    DWORD PTR [r15+0x34],eax
  416302:	cmp    r14d,0xffffffff
  416306:	je     416416 <__ctype_b_loc@plt+0x14146>
  41630c:	mov    edx,DWORD PTR [r15+0x38]
  416310:	cmp    edx,0xffffffff
  416313:	je     416412 <__ctype_b_loc@plt+0x14142>
  416319:	mov    rax,QWORD PTR [r15]
  41631c:	mov    rbp,QWORD PTR [rax+0x18]
  416320:	mov    ecx,edx
  416322:	movsxd rbx,edx
  416325:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  416329:	mov    edx,eax
  41632b:	shr    edx,0xe
  41632e:	lea    esi,[rdx-0x1ffff]
  416334:	cmp    esi,0xffffffff
  416337:	lea    edx,[rcx+rdx*1-0x1fffe]
  41633e:	cmove  edx,esi
  416341:	cmp    edx,0xffffffff
  416344:	jne    416320 <__ctype_b_loc@plt+0x14050>
  416346:	not    ecx
  416348:	add    r14d,ecx
  41634b:	mov    ecx,r14d
  41634e:	neg    ecx
  416350:	cmovl  ecx,r14d
  416354:	cmp    ecx,0x20000
  41635a:	jl     416373 <__ctype_b_loc@plt+0x140a3>
  41635c:	mov    rdi,QWORD PTR [r15+0x18]
  416360:	mov    edx,DWORD PTR [rdi+0x10]
  416363:	lea    rsi,[rip+0x14f81]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  41636a:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41636f:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  416373:	and    eax,0x3fff
  416378:	shl    r14d,0xe
  41637c:	lea    eax,[rax+r14*1]
  416380:	add    eax,0x7fffc000
  416385:	mov    DWORD PTR [rbp+rbx*4+0x0],eax
  416389:	mov    eax,DWORD PTR [r15+0x30]
  41638d:	jmp    416416 <__ctype_b_loc@plt+0x14146>
  416392:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  416397:	vmovups XMMWORD PTR [r12+0x10],xmm0
  41639e:	mov    DWORD PTR [r12+0x20],0x11f
  4163a7:	xor    ebp,ebp
  4163a9:	xor    edx,edx
  4163ab:	mov    rdi,r12
  4163ae:	mov    rsi,r15
  4163b1:	call   41bcd0 <__ctype_b_loc@plt+0x19a00>
  4163b6:	mov    ecx,DWORD PTR [rbx+0x3c]
  4163b9:	mov    QWORD PTR [rsp+0x30],0xffffffffffffffff
  4163c2:	mov    DWORD PTR [rsp+0x20],0x6
  4163ca:	mov    DWORD PTR [rsp+0x28],ecx
  4163ce:	lea    r14d,[rcx+0x1]
  4163d2:	mov    rax,QWORD PTR [rbx]
  4163d5:	movzx  edx,BYTE PTR [rax+0x73]
  4163d9:	cmp    ecx,edx
  4163db:	jl     4169b4 <__ctype_b_loc@plt+0x146e4>
  4163e1:	cmp    ecx,0xf9
  4163e7:	jl     4169a7 <__ctype_b_loc@plt+0x146d7>
  4163ed:	mov    rdi,QWORD PTR [rbx+0x18]
  4163f1:	mov    edx,DWORD PTR [rdi+0x10]
  4163f4:	lea    rsi,[rip+0x14f23]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  4163fb:	call   413af0 <__ctype_b_loc@plt+0x11820>
  416400:	mov    rax,QWORD PTR [rbx]
  416403:	add    rax,0x73
  416407:	mov    ecx,DWORD PTR [rbx+0x3c]
  41640a:	add    ecx,0x1
  41640d:	jmp    4169ae <__ctype_b_loc@plt+0x146de>
  416412:	mov    DWORD PTR [r15+0x38],r14d
  416416:	mov    DWORD PTR [r15+0x34],eax
  41641a:	cmp    r12d,0xffffffff
  41641e:	je     41753f <__ctype_b_loc@plt+0x1526f>
  416424:	mov    edx,DWORD PTR [r15+0x38]
  416428:	cmp    edx,0xffffffff
  41642b:	je     4164ab <__ctype_b_loc@plt+0x141db>
  416431:	mov    rax,QWORD PTR [r15]
  416434:	mov    rbx,QWORD PTR [rax+0x18]
  416438:	nop    DWORD PTR [rax+rax*1+0x0]
  416440:	mov    ecx,edx
  416442:	movsxd rbp,edx
  416445:	mov    eax,DWORD PTR [rbx+rbp*4]
  416448:	mov    edx,eax
  41644a:	shr    edx,0xe
  41644d:	lea    esi,[rdx-0x1ffff]
  416453:	cmp    esi,0xffffffff
  416456:	lea    edx,[rcx+rdx*1-0x1fffe]
  41645d:	cmove  edx,esi
  416460:	cmp    edx,0xffffffff
  416463:	jne    416440 <__ctype_b_loc@plt+0x14170>
  416465:	not    ecx
  416467:	add    r12d,ecx
  41646a:	mov    ecx,r12d
  41646d:	neg    ecx
  41646f:	cmovl  ecx,r12d
  416473:	cmp    ecx,0x20000
  416479:	jl     416491 <__ctype_b_loc@plt+0x141c1>
  41647b:	mov    rdi,QWORD PTR [r15+0x18]
  41647f:	mov    edx,DWORD PTR [rdi+0x10]
  416482:	lea    rsi,[rip+0x14e62]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  416489:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41648e:	mov    eax,DWORD PTR [rbx+rbp*4]
  416491:	and    eax,0x3fff
  416496:	shl    r12d,0xe
  41649a:	lea    eax,[rax+r12*1]
  41649e:	add    eax,0x7fffc000
  4164a3:	mov    DWORD PTR [rbx+rbp*4],eax
  4164a6:	jmp    41753f <__ctype_b_loc@plt+0x1526f>
  4164ab:	mov    DWORD PTR [r15+0x38],r12d
  4164af:	jmp    41753f <__ctype_b_loc@plt+0x1526f>
  4164b4:	mov    DWORD PTR [rax+0x38],r15d
  4164b8:	mov    r8,QWORD PTR [r13+0x18]
  4164bc:	mov    r14,QWORD PTR [r13+0x28]
  4164c0:	mov    rax,QWORD PTR [r14]
  4164c3:	mov    QWORD PTR [r13+0x28],rax
  4164c7:	mov    cl,BYTE PTR [r14+0xc]
  4164cb:	mov    rdx,QWORD PTR [r8+0x30]
  4164cf:	movzx  esi,BYTE PTR [rdx+0x4a]
  4164d3:	cmp    sil,cl
  4164d6:	jbe    4165ad <__ctype_b_loc@plt+0x142dd>
  4164dc:	mov    edi,DWORD PTR [rdx+0x30]
  4164df:	mov    rax,QWORD PTR [rdx]
  4164e2:	mov    rbp,QWORD PTR [rax+0x30]
  4164e6:	mov    ebx,esi
  4164e8:	sub    bl,cl
  4164ea:	mov    r9d,ecx
  4164ed:	not    r9b
  4164f0:	add    r9b,sil
  4164f3:	and    bl,0x3
  4164f6:	je     416534 <__ctype_b_loc@plt+0x14264>
  4164f8:	add    rsi,0xff
  4164ff:	neg    bl
  416501:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41650b:	nop    DWORD PTR [rax+rax*1+0x0]
  416510:	movzx  eax,sil
  416514:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  41651c:	shl    rax,0x4
  416520:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416524:	add    rsi,0xffffffffffffffff
  416528:	add    bl,0x1
  41652b:	jne    416510 <__ctype_b_loc@plt+0x14240>
  41652d:	add    rsi,0xffffffffffffff01
  416534:	cmp    r9b,0x3
  416538:	jb     4165aa <__ctype_b_loc@plt+0x142da>
  41653a:	nop    WORD PTR [rax+rax*1+0x0]
  416540:	lea    eax,[rsi-0x1]
  416543:	movzx  eax,al
  416546:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  41654e:	shl    rax,0x4
  416552:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416556:	lea    eax,[rsi+0xfe]
  41655c:	movzx  eax,al
  41655f:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416567:	shl    rax,0x4
  41656b:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  41656f:	lea    eax,[rsi+0xfd]
  416575:	movzx  eax,al
  416578:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416580:	shl    rax,0x4
  416584:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416588:	lea    eax,[rsi+0xfc]
  41658e:	movzx  eax,al
  416591:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416599:	shl    rax,0x4
  41659d:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  4165a1:	add    rsi,0xfffffffffffffffc
  4165a5:	cmp    sil,cl
  4165a8:	ja     416540 <__ctype_b_loc@plt+0x14270>
  4165aa:	mov    BYTE PTR [rdx+0x4a],cl
  4165ad:	cmp    BYTE PTR [r14+0xd],0x0
  4165b2:	je     4165c9 <__ctype_b_loc@plt+0x142f9>
  4165b4:	movzx  esi,cl
  4165b7:	shl    esi,0x6
  4165ba:	or     esi,0x23
  4165bd:	mov    edx,DWORD PTR [r8+0x8]
  4165c1:	mov    rdi,r13
  4165c4:	call   419630 <__ctype_b_loc@plt+0x17360>
  4165c9:	lea    r15,[r13+0x18]
  4165cd:	movzx  eax,BYTE PTR [r13+0x4a]
  4165d2:	mov    DWORD PTR [r13+0x3c],eax
  4165d6:	mov    r14d,DWORD PTR [r14+0x8]
  4165da:	mov    eax,DWORD PTR [r13+0x30]
  4165de:	mov    DWORD PTR [r13+0x34],eax
  4165e2:	cmp    r14d,0xffffffff
  4165e6:	je     41666e <__ctype_b_loc@plt+0x1439e>
  4165ec:	mov    edx,DWORD PTR [r13+0x38]
  4165f0:	cmp    edx,0xffffffff
  4165f3:	je     41666a <__ctype_b_loc@plt+0x1439a>
  4165f5:	mov    rax,QWORD PTR [r13+0x0]
  4165f9:	mov    rbp,QWORD PTR [rax+0x18]
  4165fd:	nop    DWORD PTR [rax]
  416600:	mov    ecx,edx
  416602:	movsxd rbx,edx
  416605:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  416609:	mov    edx,eax
  41660b:	shr    edx,0xe
  41660e:	lea    esi,[rdx-0x1ffff]
  416614:	cmp    esi,0xffffffff
  416617:	lea    edx,[rcx+rdx*1-0x1fffe]
  41661e:	cmove  edx,esi
  416621:	cmp    edx,0xffffffff
  416624:	jne    416600 <__ctype_b_loc@plt+0x14330>
  416626:	not    ecx
  416628:	add    r14d,ecx
  41662b:	mov    ecx,r14d
  41662e:	neg    ecx
  416630:	cmovl  ecx,r14d
  416634:	cmp    ecx,0x20000
  41663a:	jl     416652 <__ctype_b_loc@plt+0x14382>
  41663c:	mov    rdi,QWORD PTR [r15]
  41663f:	mov    edx,DWORD PTR [rdi+0x10]
  416642:	lea    rsi,[rip+0x14ca2]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  416649:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41664e:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  416652:	and    eax,0x3fff
  416657:	shl    r14d,0xe
  41665b:	lea    eax,[rax+r14*1]
  41665f:	add    eax,0x7fffc000
  416664:	mov    DWORD PTR [rbp+rbx*4+0x0],eax
  416668:	jmp    41666e <__ctype_b_loc@plt+0x1439e>
  41666a:	mov    DWORD PTR [r13+0x38],r14d
  41666e:	mov    rbx,QWORD PTR [r12+0x30]
  416673:	mov    rdi,r13
  416676:	call   417bd0 <__ctype_b_loc@plt+0x15900>
  41667b:	mov    rdi,rbx
  41667e:	mov    esi,eax
  416680:	mov    edx,DWORD PTR [rsp+0x18]
  416684:	call   41cc60 <__ctype_b_loc@plt+0x1a990>
  416689:	jmp    416ca4 <__ctype_b_loc@plt+0x149d4>
  41668e:	mov    rax,QWORD PTR [rsp+0x8]
  416693:	vmovups xmm0,XMMWORD PTR [rax]
  416697:	mov    rcx,QWORD PTR [rsp+0x10]
  41669c:	vmovups XMMWORD PTR [rcx],xmm0
  4166a0:	mov    DWORD PTR [rax],0x11f
  4166a6:	lea    rsi,[rsp+0x20]
  4166ab:	xor    edx,edx
  4166ad:	mov    rdi,r12
  4166b0:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  4166b5:	mov    r15d,0x1
  4166bb:	cmp    DWORD PTR [r12+0x10],0x2c
  4166c1:	jne    4167d0 <__ctype_b_loc@plt+0x14500>
  4166c7:	mov    r15d,0x1
  4166cd:	nop    DWORD PTR [rax]
  4166d0:	mov    eax,DWORD PTR [r12+0x4]
  4166d5:	mov    ecx,DWORD PTR [r12+0x20]
  4166da:	mov    DWORD PTR [r12+0x8],eax
  4166df:	cmp    ecx,0x11f
  4166e5:	jne    416700 <__ctype_b_loc@plt+0x14430>
  4166e7:	mov    rdi,r12
  4166ea:	mov    rsi,QWORD PTR [rsp+0x18]
  4166ef:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  4166f4:	mov    DWORD PTR [r12+0x10],eax
  4166f9:	jmp    416718 <__ctype_b_loc@plt+0x14448>
  4166fb:	nop    DWORD PTR [rax+rax*1+0x0]
  416700:	mov    rax,QWORD PTR [rsp+0x8]
  416705:	vmovups xmm0,XMMWORD PTR [rax]
  416709:	mov    rcx,QWORD PTR [rsp+0x10]
  41670e:	vmovups XMMWORD PTR [rcx],xmm0
  416712:	mov    DWORD PTR [rax],0x11f
  416718:	mov    r13,QWORD PTR [r12+0x30]
  41671d:	mov    rdi,r13
  416720:	lea    rsi,[rsp+0x20]
  416725:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41672a:	cmp    DWORD PTR [rsp+0x20],0xc
  41672f:	jne    416750 <__ctype_b_loc@plt+0x14480>
  416731:	mov    eax,DWORD PTR [rsp+0x28]
  416735:	test   eax,0x100
  41673a:	jne    416750 <__ctype_b_loc@plt+0x14480>
  41673c:	movzx  ecx,BYTE PTR [r13+0x4a]
  416741:	cmp    eax,ecx
  416743:	jl     416750 <__ctype_b_loc@plt+0x14480>
  416745:	add    DWORD PTR [r13+0x3c],0xffffffff
  41674a:	nop    WORD PTR [rax+rax*1+0x0]
  416750:	mov    ecx,DWORD PTR [r13+0x3c]
  416754:	lea    ebp,[rcx+0x1]
  416757:	mov    rax,QWORD PTR [r13+0x0]
  41675b:	movzx  edx,BYTE PTR [rax+0x73]
  41675f:	cmp    ecx,edx
  416761:	jl     41679a <__ctype_b_loc@plt+0x144ca>
  416763:	cmp    ecx,0xf9
  416769:	jl     41678f <__ctype_b_loc@plt+0x144bf>
  41676b:	mov    rdi,QWORD PTR [r13+0x18]
  41676f:	mov    edx,DWORD PTR [rdi+0x10]
  416772:	lea    rsi,[rip+0x14ba5]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  416779:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41677e:	mov    rax,QWORD PTR [r13+0x0]
  416782:	add    rax,0x73
  416786:	mov    ecx,DWORD PTR [r13+0x3c]
  41678a:	add    ecx,0x1
  41678d:	jmp    416795 <__ctype_b_loc@plt+0x144c5>
  41678f:	add    rax,0x73
  416793:	mov    ecx,ebp
  416795:	mov    BYTE PTR [rax],bpl
  416798:	mov    ebp,ecx
  41679a:	mov    DWORD PTR [r13+0x3c],ebp
  41679e:	add    ebp,0xffffffff
  4167a1:	mov    rdi,r13
  4167a4:	lea    rbx,[rsp+0x20]
  4167a9:	mov    rsi,rbx
  4167ac:	mov    edx,ebp
  4167ae:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  4167b3:	xor    edx,edx
  4167b5:	mov    rdi,r12
  4167b8:	mov    rsi,rbx
  4167bb:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  4167c0:	add    r15d,0x1
  4167c4:	cmp    DWORD PTR [r12+0x10],0x2c
  4167ca:	je     4166d0 <__ctype_b_loc@plt+0x14400>
  4167d0:	mov    rbx,QWORD PTR [rsp+0x50]
  4167d5:	mov    rbp,rbx
  4167d8:	neg    rbp
  4167db:	lea    rcx,[rsp+0x20]
  4167e0:	mov    rdi,r12
  4167e3:	mov    esi,ebp
  4167e5:	mov    edx,r15d
  4167e8:	call   41d3f0 <__ctype_b_loc@plt+0x1b120>
  4167ed:	mov    rsi,QWORD PTR [r12+0x30]
  4167f2:	mov    r9,rbx
  4167f5:	movzx  r8d,BYTE PTR [rsi+0x4a]
  4167fa:	mov    eax,r8d
  4167fd:	sub    eax,r9d
  416800:	mov    BYTE PTR [rsi+0x4a],al
  416803:	mov    eax,DWORD PTR [rsi+0x30]
  416806:	mov    rcx,QWORD PTR [rsi]
  416809:	mov    rcx,QWORD PTR [rcx+0x30]
  41680d:	test   bpl,0x7
  416811:	je     416858 <__ctype_b_loc@plt+0x14588>
  416813:	mov    edi,r8d
  416816:	sub    edi,r9d
  416819:	movzx  edi,dil
  41681d:	lea    rdi,[rsi+rdi*2]
  416821:	add    rdi,0xc4
  416828:	movzx  ebx,BYTE PTR [rsp+0x48]
  41682d:	and    ebx,0x7
  416830:	neg    ebx
  416832:	mov    rbp,r9
  416835:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41683f:	nop
  416840:	movzx  edx,WORD PTR [rdi+rbp*2]
  416844:	shl    rdx,0x4
  416848:	mov    DWORD PTR [rcx+rdx*1+0x8],eax
  41684c:	add    rbp,0x1
  416850:	add    ebx,0x1
  416853:	jne    416840 <__ctype_b_loc@plt+0x14570>
  416855:	neg    rbp
  416858:	cmp    r14d,0x7
  41685c:	jb     41753f <__ctype_b_loc@plt+0x1526f>
  416862:	mov    edx,0x7
  416867:	sub    rdx,rbp
  41686a:	lea    rdx,[rsi+rdx*2]
  41686e:	sub    r8d,r9d
  416871:	movzx  esi,r8b
  416875:	lea    rdx,[rdx+rsi*2]
  416879:	add    rdx,0xc4
  416880:	xor    esi,esi
  416882:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41688c:	nop    DWORD PTR [rax+0x0]
  416890:	movzx  edi,WORD PTR [rdx+rsi*2-0xe]
  416895:	shl    rdi,0x4
  416899:	mov    DWORD PTR [rcx+rdi*1+0x8],eax
  41689d:	movzx  edi,WORD PTR [rdx+rsi*2-0xc]
  4168a2:	shl    rdi,0x4
  4168a6:	mov    DWORD PTR [rcx+rdi*1+0x8],eax
  4168aa:	movzx  edi,WORD PTR [rdx+rsi*2-0xa]
  4168af:	shl    rdi,0x4
  4168b3:	mov    DWORD PTR [rcx+rdi*1+0x8],eax
  4168b7:	movzx  edi,WORD PTR [rdx+rsi*2-0x8]
  4168bc:	shl    rdi,0x4
  4168c0:	mov    DWORD PTR [rcx+rdi*1+0x8],eax
  4168c4:	movzx  edi,WORD PTR [rdx+rsi*2-0x6]
  4168c9:	shl    rdi,0x4
  4168cd:	mov    DWORD PTR [rcx+rdi*1+0x8],eax
  4168d1:	movzx  edi,WORD PTR [rdx+rsi*2-0x4]
  4168d6:	shl    rdi,0x4
  4168da:	mov    DWORD PTR [rcx+rdi*1+0x8],eax
  4168de:	movzx  edi,WORD PTR [rdx+rsi*2-0x2]
  4168e3:	shl    rdi,0x4
  4168e7:	mov    DWORD PTR [rcx+rdi*1+0x8],eax
  4168eb:	movzx  edi,WORD PTR [rdx+rsi*2]
  4168ef:	shl    rdi,0x4
  4168f3:	mov    DWORD PTR [rcx+rdi*1+0x8],eax
  4168f7:	add    rsi,0x8
  4168fb:	cmp    ebp,esi
  4168fd:	jne    416890 <__ctype_b_loc@plt+0x145c0>
  4168ff:	jmp    41753f <__ctype_b_loc@plt+0x1526f>
  416904:	mov    rax,QWORD PTR [rsp+0x8]
  416909:	vmovups xmm0,XMMWORD PTR [rax]
  41690d:	vmovups XMMWORD PTR [r12+0x10],xmm0
  416914:	mov    DWORD PTR [r12+0x20],0x11f
  41691d:	lea    rbx,[rsp+0x20]
  416922:	xor    edx,edx
  416924:	mov    rdi,r12
  416927:	mov    rsi,rbx
  41692a:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  41692f:	mov    r15,QWORD PTR [r12+0x30]
  416934:	mov    rdi,r15
  416937:	mov    rsi,rbx
  41693a:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41693f:	cmp    DWORD PTR [rsp+0x20],0xc
  416944:	jne    41695f <__ctype_b_loc@plt+0x1468f>
  416946:	mov    eax,DWORD PTR [rsp+0x28]
  41694a:	test   eax,0x100
  41694f:	jne    41695f <__ctype_b_loc@plt+0x1468f>
  416951:	movzx  ecx,BYTE PTR [r15+0x4a]
  416956:	cmp    eax,ecx
  416958:	jl     41695f <__ctype_b_loc@plt+0x1468f>
  41695a:	add    DWORD PTR [r15+0x3c],0xffffffff
  41695f:	mov    ecx,DWORD PTR [r15+0x3c]
  416963:	lea    ebp,[rcx+0x1]
  416966:	mov    rax,QWORD PTR [r15]
  416969:	movzx  edx,BYTE PTR [rax+0x73]
  41696d:	cmp    ecx,edx
  41696f:	jl     416f4b <__ctype_b_loc@plt+0x14c7b>
  416975:	cmp    ecx,0xf9
  41697b:	jl     416f40 <__ctype_b_loc@plt+0x14c70>
  416981:	mov    rdi,QWORD PTR [r15+0x18]
  416985:	mov    edx,DWORD PTR [rdi+0x10]
  416988:	lea    rsi,[rip+0x1498f]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41698f:	call   413af0 <__ctype_b_loc@plt+0x11820>
  416994:	mov    rax,QWORD PTR [r15]
  416997:	add    rax,0x73
  41699b:	mov    ecx,DWORD PTR [r15+0x3c]
  41699f:	add    ecx,0x1
  4169a2:	jmp    416f46 <__ctype_b_loc@plt+0x14c76>
  4169a7:	add    rax,0x73
  4169ab:	mov    ecx,r14d
  4169ae:	mov    BYTE PTR [rax],r14b
  4169b1:	mov    r14d,ecx
  4169b4:	mov    DWORD PTR [rbx+0x3c],r14d
  4169b8:	mov    rax,QWORD PTR [r12+0x30]
  4169bd:	mov    cl,BYTE PTR [rax+0x4a]
  4169c0:	add    cl,0x1
  4169c3:	mov    BYTE PTR [rax+0x4a],cl
  4169c6:	mov    edx,DWORD PTR [rax+0x30]
  4169c9:	mov    rsi,QWORD PTR [rax]
  4169cc:	mov    rsi,QWORD PTR [rsi+0x30]
  4169d0:	movzx  ecx,cl
  4169d3:	movzx  eax,WORD PTR [rax+rcx*2+0xc2]
  4169db:	shl    rax,0x4
  4169df:	mov    DWORD PTR [rsi+rax*1+0x8],edx
  4169e3:	mov    ecx,DWORD PTR [r12+0x4]
  4169e8:	lea    r14,[rsp+0x68]
  4169ed:	xor    edx,edx
  4169ef:	mov    rdi,r12
  4169f2:	mov    rsi,r14
  4169f5:	call   41a8c0 <__ctype_b_loc@plt+0x185f0>
  4169fa:	lea    rsi,[rsp+0x20]
  4169ff:	mov    rdi,rbx
  416a02:	mov    rdx,r14
  416a05:	call   41d6d0 <__ctype_b_loc@plt+0x1b400>
  416a0a:	mov    eax,DWORD PTR [rbx+0x30]
  416a0d:	mov    rcx,QWORD PTR [rbx]
  416a10:	mov    rcx,QWORD PTR [rcx+0x30]
  416a14:	movzx  edx,BYTE PTR [rbx+0x4a]
  416a18:	movzx  edx,WORD PTR [rbx+rdx*2+0xc2]
  416a20:	shl    rdx,0x4
  416a24:	mov    DWORD PTR [rcx+rdx*1+0x8],eax
  416a28:	jmp    417541 <__ctype_b_loc@plt+0x15271>
  416a2d:	mov    eax,DWORD PTR [r12+0x30]
  416a32:	mov    DWORD PTR [r12+0x34],eax
  416a37:	cmp    r14d,0xffffffff
  416a3b:	mov    rbp,QWORD PTR [rsp+0x48]
  416a40:	je     416af6 <__ctype_b_loc@plt+0x14826>
  416a46:	mov    edx,DWORD PTR [r12+0x38]
  416a4b:	cmp    edx,0xffffffff
  416a4e:	je     416af1 <__ctype_b_loc@plt+0x14821>
  416a54:	mov    ebp,r15d
  416a57:	mov    rax,QWORD PTR [r12]
  416a5b:	mov    r15,QWORD PTR [rax+0x18]
  416a5f:	nop
  416a60:	mov    ecx,edx
  416a62:	movsxd rbx,edx
  416a65:	mov    eax,DWORD PTR [r15+rbx*4]
  416a69:	mov    edx,eax
  416a6b:	shr    edx,0xe
  416a6e:	lea    esi,[rdx-0x1ffff]
  416a74:	cmp    esi,0xffffffff
  416a77:	lea    edx,[rcx+rdx*1-0x1fffe]
  416a7e:	cmove  edx,esi
  416a81:	cmp    edx,0xffffffff
  416a84:	jne    416a60 <__ctype_b_loc@plt+0x14790>
  416a86:	not    ecx
  416a88:	mov    rdx,r14
  416a8b:	add    edx,ecx
  416a8d:	mov    ecx,edx
  416a8f:	neg    ecx
  416a91:	mov    r14,rdx
  416a94:	cmovl  ecx,edx
  416a97:	cmp    ecx,0x20000
  416a9d:	jl     416abb <__ctype_b_loc@plt+0x147eb>
  416a9f:	mov    rax,QWORD PTR [rsp+0x8]
  416aa4:	mov    rdi,QWORD PTR [rax+0x18]
  416aa8:	mov    edx,DWORD PTR [rdi+0x10]
  416aab:	lea    rsi,[rip+0x14839]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  416ab2:	call   413af0 <__ctype_b_loc@plt+0x11820>
  416ab7:	mov    eax,DWORD PTR [r15+rbx*4]
  416abb:	and    eax,0x3fff
  416ac0:	shl    r14d,0xe
  416ac4:	lea    eax,[rax+r14*1]
  416ac8:	add    eax,0x7fffc000
  416acd:	mov    DWORD PTR [r15+rbx*4],eax
  416ad1:	mov    r12,QWORD PTR [rsp+0x8]
  416ad6:	mov    r15d,ebp
  416ad9:	mov    rbp,QWORD PTR [rsp+0x48]
  416ade:	jmp    416af6 <__ctype_b_loc@plt+0x14826>
  416ae0:	mov    eax,DWORD PTR [r12+0x30]
  416ae5:	mov    DWORD PTR [r12+0x34],eax
  416aea:	mov    r13,QWORD PTR [rsp+0x58]
  416aef:	jmp    416b57 <__ctype_b_loc@plt+0x14887>
  416af1:	mov    DWORD PTR [r12+0x38],r14d
  416af6:	mov    rbx,QWORD PTR [rsp+0x58]
  416afb:	mov    eax,DWORD PTR [rbx+0x4]
  416afe:	mov    ecx,DWORD PTR [rbx+0x20]
  416b01:	mov    DWORD PTR [rbx+0x8],eax
  416b04:	cmp    ecx,0x11f
  416b0a:	jne    416b1e <__ctype_b_loc@plt+0x1484e>
  416b0c:	mov    rdi,rbx
  416b0f:	mov    rsi,QWORD PTR [rsp+0x10]
  416b14:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  416b19:	mov    DWORD PTR [rbx+0x10],eax
  416b1c:	jmp    416b33 <__ctype_b_loc@plt+0x14863>
  416b1e:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  416b23:	mov    rax,QWORD PTR [rsp+0x18]
  416b28:	vmovups XMMWORD PTR [rax],xmm0
  416b2c:	mov    DWORD PTR [rbp+0x0],0x11f
  416b33:	mov    rdi,rbx
  416b36:	call   417690 <__ctype_b_loc@plt+0x153c0>
  416b3b:	mov    eax,DWORD PTR [r12+0x30]
  416b40:	mov    DWORD PTR [r12+0x34],eax
  416b45:	mov    r14d,r15d
  416b48:	cmp    r15d,0xffffffff
  416b4c:	mov    r13,QWORD PTR [rsp+0x58]
  416b51:	je     416be5 <__ctype_b_loc@plt+0x14915>
  416b57:	mov    edx,DWORD PTR [r12+0x38]
  416b5c:	cmp    edx,0xffffffff
  416b5f:	je     416be0 <__ctype_b_loc@plt+0x14910>
  416b65:	mov    rax,QWORD PTR [r12]
  416b69:	mov    r15,QWORD PTR [rax+0x18]
  416b6d:	nop    DWORD PTR [rax]
  416b70:	mov    ecx,edx
  416b72:	movsxd rbx,edx
  416b75:	mov    eax,DWORD PTR [r15+rbx*4]
  416b79:	mov    edx,eax
  416b7b:	shr    edx,0xe
  416b7e:	lea    esi,[rdx-0x1ffff]
  416b84:	cmp    esi,0xffffffff
  416b87:	lea    edx,[rcx+rdx*1-0x1fffe]
  416b8e:	cmove  edx,esi
  416b91:	cmp    edx,0xffffffff
  416b94:	jne    416b70 <__ctype_b_loc@plt+0x148a0>
  416b96:	not    ecx
  416b98:	add    r14d,ecx
  416b9b:	mov    ecx,r14d
  416b9e:	neg    ecx
  416ba0:	cmovl  ecx,r14d
  416ba4:	cmp    ecx,0x20000
  416baa:	jl     416bc8 <__ctype_b_loc@plt+0x148f8>
  416bac:	mov    rax,QWORD PTR [rsp+0x8]
  416bb1:	mov    rdi,QWORD PTR [rax+0x18]
  416bb5:	mov    edx,DWORD PTR [rdi+0x10]
  416bb8:	lea    rsi,[rip+0x1472c]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  416bbf:	call   413af0 <__ctype_b_loc@plt+0x11820>
  416bc4:	mov    eax,DWORD PTR [r15+rbx*4]
  416bc8:	and    eax,0x3fff
  416bcd:	shl    r14d,0xe
  416bd1:	lea    eax,[rax+r14*1]
  416bd5:	add    eax,0x7fffc000
  416bda:	mov    DWORD PTR [r15+rbx*4],eax
  416bde:	jmp    416be5 <__ctype_b_loc@plt+0x14915>
  416be0:	mov    DWORD PTR [r12+0x38],r14d
  416be5:	mov    eax,DWORD PTR [r13+0x4]
  416be9:	cmp    DWORD PTR [r13+0x10],0x106
  416bf1:	jne    416c17 <__ctype_b_loc@plt+0x14947>
  416bf3:	mov    DWORD PTR [r13+0x8],eax
  416bf7:	cmp    DWORD PTR [r13+0x20],0x11f
  416bff:	jne    416c3e <__ctype_b_loc@plt+0x1496e>
  416c01:	mov    rdi,r13
  416c04:	mov    rsi,QWORD PTR [rsp+0x10]
  416c09:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  416c0e:	mov    DWORD PTR [r13+0x10],eax
  416c12:	jmp    41753f <__ctype_b_loc@plt+0x1526f>
  416c17:	mov    rdi,QWORD PTR [r13+0x38]
  416c1b:	mov    r8d,DWORD PTR [rsp+0x44]
  416c20:	cmp    eax,r8d
  416c23:	jne    416c58 <__ctype_b_loc@plt+0x14988>
  416c25:	lea    rsi,[rip+0x14869]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  416c2c:	lea    rdx,[rip+0x143d4]        # 42b007 <__ctype_b_loc@plt+0x28d37>
  416c33:	xor    ebp,ebp
  416c35:	xor    eax,eax
  416c37:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  416c3c:	jmp    416c76 <__ctype_b_loc@plt+0x149a6>
  416c3e:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  416c43:	mov    rax,QWORD PTR [rsp+0x18]
  416c48:	vmovups XMMWORD PTR [rax],xmm0
  416c4c:	mov    DWORD PTR [rbp+0x0],0x11f
  416c53:	jmp    41753f <__ctype_b_loc@plt+0x1526f>
  416c58:	lea    rsi,[rip+0x1480d]        # 42b46c <__ctype_b_loc@plt+0x2919c>
  416c5f:	lea    rdx,[rip+0x143a1]        # 42b007 <__ctype_b_loc@plt+0x28d37>
  416c66:	lea    rcx,[rip+0x14397]        # 42b004 <__ctype_b_loc@plt+0x28d34>
  416c6d:	xor    ebp,ebp
  416c6f:	xor    eax,eax
  416c71:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  416c76:	mov    edx,DWORD PTR [r13+0x10]
  416c7a:	mov    rdi,r13
  416c7d:	mov    rsi,rax
  416c80:	call   413af0 <__ctype_b_loc@plt+0x11820>
  416c85:	jmp    417541 <__ctype_b_loc@plt+0x15271>
  416c8a:	mov    DWORD PTR [r13+0x38],r14d
  416c8e:	mov    rdi,QWORD PTR [r12+0x30]
  416c93:	mov    esi,r15d
  416c96:	mov    edx,DWORD PTR [rsp+0x18]
  416c9a:	call   41cc60 <__ctype_b_loc@plt+0x1a990>
  416c9f:	mov    r15,QWORD PTR [rsp+0x10]
  416ca4:	mov    r8,QWORD PTR [r13+0x18]
  416ca8:	mov    r14,QWORD PTR [r13+0x28]
  416cac:	mov    rax,QWORD PTR [r14]
  416caf:	mov    QWORD PTR [r13+0x28],rax
  416cb3:	mov    cl,BYTE PTR [r14+0xc]
  416cb7:	mov    rdx,QWORD PTR [r8+0x30]
  416cbb:	movzx  esi,BYTE PTR [rdx+0x4a]
  416cbf:	cmp    sil,cl
  416cc2:	jbe    416d8d <__ctype_b_loc@plt+0x14abd>
  416cc8:	mov    edi,DWORD PTR [rdx+0x30]
  416ccb:	mov    rax,QWORD PTR [rdx]
  416cce:	mov    rbp,QWORD PTR [rax+0x30]
  416cd2:	mov    ebx,esi
  416cd4:	sub    bl,cl
  416cd6:	mov    r9d,ecx
  416cd9:	not    r9b
  416cdc:	add    r9b,sil
  416cdf:	and    bl,0x3
  416ce2:	je     416d14 <__ctype_b_loc@plt+0x14a44>
  416ce4:	add    rsi,0xff
  416ceb:	neg    bl
  416ced:	nop    DWORD PTR [rax]
  416cf0:	movzx  eax,sil
  416cf4:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416cfc:	shl    rax,0x4
  416d00:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416d04:	add    rsi,0xffffffffffffffff
  416d08:	add    bl,0x1
  416d0b:	jne    416cf0 <__ctype_b_loc@plt+0x14a20>
  416d0d:	add    rsi,0xffffffffffffff01
  416d14:	cmp    r9b,0x3
  416d18:	jb     416d8a <__ctype_b_loc@plt+0x14aba>
  416d1a:	nop    WORD PTR [rax+rax*1+0x0]
  416d20:	lea    eax,[rsi-0x1]
  416d23:	movzx  eax,al
  416d26:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416d2e:	shl    rax,0x4
  416d32:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416d36:	lea    eax,[rsi+0xfe]
  416d3c:	movzx  eax,al
  416d3f:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416d47:	shl    rax,0x4
  416d4b:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416d4f:	lea    eax,[rsi+0xfd]
  416d55:	movzx  eax,al
  416d58:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416d60:	shl    rax,0x4
  416d64:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416d68:	lea    eax,[rsi+0xfc]
  416d6e:	movzx  eax,al
  416d71:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  416d79:	shl    rax,0x4
  416d7d:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  416d81:	add    rsi,0xfffffffffffffffc
  416d85:	cmp    sil,cl
  416d88:	ja     416d20 <__ctype_b_loc@plt+0x14a50>
  416d8a:	mov    BYTE PTR [rdx+0x4a],cl
  416d8d:	cmp    BYTE PTR [r14+0xd],0x0
  416d92:	je     416da9 <__ctype_b_loc@plt+0x14ad9>
  416d94:	movzx  esi,cl
  416d97:	shl    esi,0x6
  416d9a:	or     esi,0x23
  416d9d:	mov    edx,DWORD PTR [r8+0x8]
  416da1:	mov    rdi,r13
  416da4:	call   419630 <__ctype_b_loc@plt+0x17360>
  416da9:	movzx  eax,BYTE PTR [r13+0x4a]
  416dae:	mov    DWORD PTR [r13+0x3c],eax
  416db2:	mov    r14d,DWORD PTR [r14+0x8]
  416db6:	mov    eax,DWORD PTR [r13+0x30]
  416dba:	mov    DWORD PTR [r13+0x34],eax
  416dbe:	cmp    r14d,0xffffffff
  416dc2:	je     41753f <__ctype_b_loc@plt+0x1526f>
  416dc8:	mov    edx,DWORD PTR [r13+0x38]
  416dcc:	cmp    edx,0xffffffff
  416dcf:	je     416e28 <__ctype_b_loc@plt+0x14b58>
  416dd1:	mov    rax,QWORD PTR [r13+0x0]
  416dd5:	mov    rbp,QWORD PTR [rax+0x18]
  416dd9:	nop    DWORD PTR [rax+0x0]
  416de0:	mov    ecx,edx
  416de2:	movsxd rbx,edx
  416de5:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  416de9:	mov    edx,eax
  416deb:	shr    edx,0xe
  416dee:	lea    esi,[rdx-0x1ffff]
  416df4:	cmp    esi,0xffffffff
  416df7:	lea    edx,[rcx+rdx*1-0x1fffe]
  416dfe:	cmove  edx,esi
  416e01:	cmp    edx,0xffffffff
  416e04:	jne    416de0 <__ctype_b_loc@plt+0x14b10>
  416e06:	not    ecx
  416e08:	add    r14d,ecx
  416e0b:	mov    ecx,r14d
  416e0e:	neg    ecx
  416e10:	cmovl  ecx,r14d
  416e14:	cmp    ecx,0x20000
  416e1a:	jl     417523 <__ctype_b_loc@plt+0x15253>
  416e20:	mov    rdi,QWORD PTR [r15]
  416e23:	jmp    417510 <__ctype_b_loc@plt+0x15240>
  416e28:	mov    DWORD PTR [r13+0x38],r14d
  416e2c:	jmp    41753f <__ctype_b_loc@plt+0x1526f>
  416e31:	mov    ebp,0x1
  416e36:	mov    eax,DWORD PTR [rsp+0x20]
  416e3a:	lea    ecx,[rax-0xd]
  416e3d:	cmp    ecx,0x1
  416e40:	ja     416e7f <__ctype_b_loc@plt+0x14baf>
  416e42:	cmp    eax,0xe
  416e45:	mov    rbx,QWORD PTR [rsp+0x10]
  416e4a:	je     417555 <__ctype_b_loc@plt+0x15285>
  416e50:	cmp    eax,0xd
  416e53:	jne    417614 <__ctype_b_loc@plt+0x15344>
  416e59:	mov    rax,QWORD PTR [rbx]
  416e5c:	mov    rax,QWORD PTR [rax+0x18]
  416e60:	movsxd rcx,DWORD PTR [rsp+0x28]
  416e65:	and    DWORD PTR [rax+rcx*4],0xff803fff
  416e6c:	mov    eax,0xd
  416e71:	cmp    ebp,0x1
  416e74:	je     417619 <__ctype_b_loc@plt+0x15349>
  416e7a:	jmp    417636 <__ctype_b_loc@plt+0x15366>
  416e7f:	lea    rsi,[rsp+0x20]
  416e84:	mov    rbx,QWORD PTR [rsp+0x10]
  416e89:	mov    rdi,rbx
  416e8c:	call   419010 <__ctype_b_loc@plt+0x16d40>
  416e91:	mov    eax,DWORD PTR [rsp+0x20]
  416e95:	cmp    ebp,0x1
  416e98:	jne    417230 <__ctype_b_loc@plt+0x14f60>
  416e9e:	cmp    eax,0xc
  416ea1:	jne    416ec6 <__ctype_b_loc@plt+0x14bf6>
  416ea3:	mov    edx,DWORD PTR [rsp+0x28]
  416ea7:	mov    eax,DWORD PTR [rsp+0x30]
  416eab:	mov    ebp,0x1
  416eb0:	cmp    eax,DWORD PTR [rsp+0x34]
  416eb4:	je     414fed <__ctype_b_loc@plt+0x12d1d>
  416eba:	movzx  eax,BYTE PTR [rbx+0x4a]
  416ebe:	cmp    edx,eax
  416ec0:	jge    417676 <__ctype_b_loc@plt+0x153a6>
  416ec6:	lea    rsi,[rsp+0x20]
  416ecb:	mov    rdi,rbx
  416ece:	call   419010 <__ctype_b_loc@plt+0x16d40>
  416ed3:	cmp    DWORD PTR [rsp+0x20],0xc
  416ed8:	jne    416ef1 <__ctype_b_loc@plt+0x14c21>
  416eda:	mov    eax,DWORD PTR [rsp+0x28]
  416ede:	test   eax,0x100
  416ee3:	jne    416ef1 <__ctype_b_loc@plt+0x14c21>
  416ee5:	movzx  ecx,BYTE PTR [rbx+0x4a]
  416ee9:	cmp    eax,ecx
  416eeb:	jl     416ef1 <__ctype_b_loc@plt+0x14c21>
  416eed:	add    DWORD PTR [rbx+0x3c],0xffffffff
  416ef1:	mov    ecx,DWORD PTR [rbx+0x3c]
  416ef4:	mov    rax,rbx
  416ef7:	lea    ebx,[rcx+0x1]
  416efa:	mov    rax,QWORD PTR [rax]
  416efd:	movzx  edx,BYTE PTR [rax+0x73]
  416f01:	cmp    ecx,edx
  416f03:	jl     41764e <__ctype_b_loc@plt+0x1537e>
  416f09:	cmp    ecx,0xf9
  416f0f:	jl     417644 <__ctype_b_loc@plt+0x15374>
  416f15:	mov    rbp,QWORD PTR [rsp+0x10]
  416f1a:	mov    rdi,QWORD PTR [rbp+0x18]
  416f1e:	mov    edx,DWORD PTR [rdi+0x10]
  416f21:	lea    rsi,[rip+0x143f6]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  416f28:	call   413af0 <__ctype_b_loc@plt+0x11820>
  416f2d:	mov    rax,QWORD PTR [rbp+0x0]
  416f31:	add    rax,0x73
  416f35:	mov    ecx,DWORD PTR [rbp+0x3c]
  416f38:	add    ecx,0x1
  416f3b:	jmp    41764a <__ctype_b_loc@plt+0x1537a>
  416f40:	add    rax,0x73
  416f44:	mov    ecx,ebp
  416f46:	mov    BYTE PTR [rax],bpl
  416f49:	mov    ebp,ecx
  416f4b:	mov    DWORD PTR [r15+0x3c],ebp
  416f4f:	add    ebp,0xffffffff
  416f52:	lea    rsi,[rsp+0x20]
  416f57:	mov    rdi,r15
  416f5a:	mov    edx,ebp
  416f5c:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  416f61:	cmp    DWORD PTR [r12+0x10],0x2c
  416f67:	je     416fc4 <__ctype_b_loc@plt+0x14cf4>
  416f69:	mov    rbx,QWORD PTR [r12+0x38]
  416f6e:	call   4022d0 <__ctype_b_loc@plt>
  416f73:	mov    rax,QWORD PTR [rax]
  416f76:	movzx  eax,WORD PTR [rax+0x58]
  416f7a:	test   al,0x2
  416f7c:	lea    rax,[rip+0x142d8]        # 42b25b <__ctype_b_loc@plt+0x28f8b>
  416f83:	lea    rsi,[rip+0x142c8]        # 42b252 <__ctype_b_loc@plt+0x28f82>
  416f8a:	cmove  rsi,rax
  416f8e:	mov    edx,0x2c
  416f93:	xor    eax,eax
  416f95:	mov    rdi,rbx
  416f98:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  416f9d:	mov    rcx,rax
  416fa0:	lea    rsi,[rip+0x144ee]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  416fa7:	xor    eax,eax
  416fa9:	mov    rdi,rbx
  416fac:	mov    rdx,rcx
  416faf:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  416fb4:	mov    edx,DWORD PTR [r12+0x10]
  416fb9:	mov    rdi,r12
  416fbc:	mov    rsi,rax
  416fbf:	call   413af0 <__ctype_b_loc@plt+0x11820>
  416fc4:	mov    eax,DWORD PTR [r12+0x4]
  416fc9:	mov    ecx,DWORD PTR [r12+0x20]
  416fce:	mov    DWORD PTR [r12+0x8],eax
  416fd3:	cmp    ecx,0x11f
  416fd9:	jne    416fef <__ctype_b_loc@plt+0x14d1f>
  416fdb:	mov    rdi,r12
  416fde:	mov    rsi,QWORD PTR [rsp+0x18]
  416fe3:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  416fe8:	mov    DWORD PTR [r12+0x10],eax
  416fed:	jmp    417008 <__ctype_b_loc@plt+0x14d38>
  416fef:	mov    rax,QWORD PTR [rsp+0x8]
  416ff4:	vmovups xmm0,XMMWORD PTR [rax]
  416ff8:	vmovups XMMWORD PTR [r12+0x10],xmm0
  416fff:	mov    DWORD PTR [r12+0x20],0x11f
  417008:	lea    rbx,[rsp+0x20]
  41700d:	xor    edx,edx
  41700f:	mov    rdi,r12
  417012:	mov    rsi,rbx
  417015:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  41701a:	mov    r15,QWORD PTR [r12+0x30]
  41701f:	mov    rdi,r15
  417022:	mov    rsi,rbx
  417025:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41702a:	cmp    DWORD PTR [rsp+0x20],0xc
  41702f:	jne    41704a <__ctype_b_loc@plt+0x14d7a>
  417031:	mov    eax,DWORD PTR [rsp+0x28]
  417035:	test   eax,0x100
  41703a:	jne    41704a <__ctype_b_loc@plt+0x14d7a>
  41703c:	movzx  ecx,BYTE PTR [r15+0x4a]
  417041:	cmp    eax,ecx
  417043:	jl     41704a <__ctype_b_loc@plt+0x14d7a>
  417045:	add    DWORD PTR [r15+0x3c],0xffffffff
  41704a:	mov    ecx,DWORD PTR [r15+0x3c]
  41704e:	lea    ebp,[rcx+0x1]
  417051:	mov    rax,QWORD PTR [r15]
  417054:	movzx  edx,BYTE PTR [rax+0x73]
  417058:	cmp    ecx,edx
  41705a:	jl     417092 <__ctype_b_loc@plt+0x14dc2>
  41705c:	cmp    ecx,0xf9
  417062:	jl     417087 <__ctype_b_loc@plt+0x14db7>
  417064:	mov    rdi,QWORD PTR [r15+0x18]
  417068:	mov    edx,DWORD PTR [rdi+0x10]
  41706b:	lea    rsi,[rip+0x142ac]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  417072:	call   413af0 <__ctype_b_loc@plt+0x11820>
  417077:	mov    rax,QWORD PTR [r15]
  41707a:	add    rax,0x73
  41707e:	mov    ecx,DWORD PTR [r15+0x3c]
  417082:	add    ecx,0x1
  417085:	jmp    41708d <__ctype_b_loc@plt+0x14dbd>
  417087:	add    rax,0x73
  41708b:	mov    ecx,ebp
  41708d:	mov    BYTE PTR [rax],bpl
  417090:	mov    ebp,ecx
  417092:	mov    DWORD PTR [r15+0x3c],ebp
  417096:	add    ebp,0xffffffff
  417099:	lea    rsi,[rsp+0x20]
  41709e:	mov    rdi,r15
  4170a1:	mov    edx,ebp
  4170a3:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  4170a8:	cmp    DWORD PTR [r12+0x10],0x2c
  4170ae:	jne    4170ea <__ctype_b_loc@plt+0x14e1a>
  4170b0:	mov    eax,DWORD PTR [r12+0x4]
  4170b5:	mov    ecx,DWORD PTR [r12+0x20]
  4170ba:	mov    DWORD PTR [r12+0x8],eax
  4170bf:	cmp    ecx,0x11f
  4170c5:	jne    417154 <__ctype_b_loc@plt+0x14e84>
  4170cb:	mov    rdi,r12
  4170ce:	mov    r13,QWORD PTR [rsp+0x18]
  4170d3:	mov    rsi,r13
  4170d6:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  4170db:	mov    DWORD PTR [r12+0x10],eax
  4170e0:	mov    rbp,QWORD PTR [rsp+0x8]
  4170e5:	jmp    417173 <__ctype_b_loc@plt+0x14ea3>
  4170ea:	mov    ebx,DWORD PTR [r13+0x3c]
  4170ee:	movabs rax,0x3ff0000000000000
  4170f8:	mov    QWORD PTR [rsp+0x20],rax
  4170fd:	mov    DWORD PTR [rsp+0x28],0x3
  417105:	lea    rsi,[rsp+0x20]
  41710a:	mov    rdi,r13
  41710d:	mov    rdx,rsi
  417110:	call   419b00 <__ctype_b_loc@plt+0x17830>
  417115:	shl    ebx,0x6
  417118:	shl    eax,0xe
  41711b:	or     ebx,eax
  41711d:	or     ebx,0x1
  417120:	mov    rax,QWORD PTR [r13+0x18]
  417124:	mov    edx,DWORD PTR [rax+0x8]
  417127:	mov    rdi,r13
  41712a:	mov    esi,ebx
  41712c:	call   419630 <__ctype_b_loc@plt+0x17360>
  417131:	mov    ecx,DWORD PTR [r13+0x3c]
  417135:	lea    ebx,[rcx+0x1]
  417138:	mov    rax,QWORD PTR [r13+0x0]
  41713c:	movzx  edx,BYTE PTR [rax+0x73]
  417140:	cmp    ecx,edx
  417142:	mov    r15,r14
  417145:	jge    4171fd <__ctype_b_loc@plt+0x14f2d>
  41714b:	mov    esi,DWORD PTR [rsp+0x10]
  41714f:	jmp    4172d2 <__ctype_b_loc@plt+0x15002>
  417154:	mov    rbp,QWORD PTR [rsp+0x8]
  417159:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  41715e:	vmovups XMMWORD PTR [r12+0x10],xmm0
  417165:	mov    DWORD PTR [r12+0x20],0x11f
  41716e:	mov    r13,QWORD PTR [rsp+0x18]
  417173:	lea    rbx,[rsp+0x20]
  417178:	xor    edx,edx
  41717a:	mov    rdi,r12
  41717d:	mov    rsi,rbx
  417180:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  417185:	mov    r15,QWORD PTR [r12+0x30]
  41718a:	mov    rdi,r15
  41718d:	mov    rsi,rbx
  417190:	call   419010 <__ctype_b_loc@plt+0x16d40>
  417195:	cmp    DWORD PTR [rsp+0x20],0xc
  41719a:	jne    4171b5 <__ctype_b_loc@plt+0x14ee5>
  41719c:	mov    eax,DWORD PTR [rsp+0x28]
  4171a0:	test   eax,0x100
  4171a5:	jne    4171b5 <__ctype_b_loc@plt+0x14ee5>
  4171a7:	movzx  ecx,BYTE PTR [r15+0x4a]
  4171ac:	cmp    eax,ecx
  4171ae:	jl     4171b5 <__ctype_b_loc@plt+0x14ee5>
  4171b0:	add    DWORD PTR [r15+0x3c],0xffffffff
  4171b5:	mov    ecx,DWORD PTR [r15+0x3c]
  4171b9:	lea    ebx,[rcx+0x1]
  4171bc:	mov    rax,QWORD PTR [r15]
  4171bf:	movzx  edx,BYTE PTR [rax+0x73]
  4171c3:	cmp    ecx,edx
  4171c5:	jl     4172a5 <__ctype_b_loc@plt+0x14fd5>
  4171cb:	cmp    ecx,0xf9
  4171d1:	jl     41729b <__ctype_b_loc@plt+0x14fcb>
  4171d7:	mov    rdi,QWORD PTR [r15+0x18]
  4171db:	mov    edx,DWORD PTR [rdi+0x10]
  4171de:	lea    rsi,[rip+0x14139]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  4171e5:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4171ea:	mov    rax,QWORD PTR [r15]
  4171ed:	add    rax,0x73
  4171f1:	mov    ecx,DWORD PTR [r15+0x3c]
  4171f5:	add    ecx,0x1
  4171f8:	jmp    4172a1 <__ctype_b_loc@plt+0x14fd1>
  4171fd:	cmp    ecx,0xf9
  417203:	jl     4172c4 <__ctype_b_loc@plt+0x14ff4>
  417209:	mov    rdi,QWORD PTR [r13+0x18]
  41720d:	mov    edx,DWORD PTR [rdi+0x10]
  417210:	lea    rsi,[rip+0x14107]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  417217:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41721c:	mov    rax,QWORD PTR [r13+0x0]
  417220:	add    rax,0x73
  417224:	mov    ecx,DWORD PTR [r13+0x3c]
  417228:	add    ecx,0x1
  41722b:	jmp    4172ca <__ctype_b_loc@plt+0x14ffa>
  417230:	cmp    eax,0xc
  417233:	jne    41724c <__ctype_b_loc@plt+0x14f7c>
  417235:	mov    eax,DWORD PTR [rsp+0x28]
  417239:	test   eax,0x100
  41723e:	jne    41724c <__ctype_b_loc@plt+0x14f7c>
  417240:	movzx  ecx,BYTE PTR [rbx+0x4a]
  417244:	cmp    eax,ecx
  417246:	jl     41724c <__ctype_b_loc@plt+0x14f7c>
  417248:	add    DWORD PTR [rbx+0x3c],0xffffffff
  41724c:	mov    ecx,DWORD PTR [rbx+0x3c]
  41724f:	mov    rax,rbx
  417252:	lea    ebx,[rcx+0x1]
  417255:	mov    rax,QWORD PTR [rax]
  417258:	movzx  edx,BYTE PTR [rax+0x73]
  41725c:	cmp    ecx,edx
  41725e:	jl     4175d7 <__ctype_b_loc@plt+0x15307>
  417264:	cmp    ecx,0xf9
  41726a:	jl     4175cd <__ctype_b_loc@plt+0x152fd>
  417270:	mov    r14,QWORD PTR [rsp+0x10]
  417275:	mov    rdi,QWORD PTR [r14+0x18]
  417279:	mov    edx,DWORD PTR [rdi+0x10]
  41727c:	lea    rsi,[rip+0x1409b]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  417283:	call   413af0 <__ctype_b_loc@plt+0x11820>
  417288:	mov    rax,QWORD PTR [r14]
  41728b:	add    rax,0x73
  41728f:	mov    ecx,DWORD PTR [r14+0x3c]
  417293:	add    ecx,0x1
  417296:	jmp    4175d3 <__ctype_b_loc@plt+0x15303>
  41729b:	add    rax,0x73
  41729f:	mov    ecx,ebx
  4172a1:	mov    BYTE PTR [rax],bl
  4172a3:	mov    ebx,ecx
  4172a5:	mov    DWORD PTR [r15+0x3c],ebx
  4172a9:	add    ebx,0xffffffff
  4172ac:	lea    rsi,[rsp+0x20]
  4172b1:	mov    rdi,r15
  4172b4:	mov    edx,ebx
  4172b6:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  4172bb:	mov    r15,r14
  4172be:	mov    esi,DWORD PTR [rsp+0x10]
  4172c2:	jmp    4172e0 <__ctype_b_loc@plt+0x15010>
  4172c4:	add    rax,0x73
  4172c8:	mov    ecx,ebx
  4172ca:	mov    esi,DWORD PTR [rsp+0x10]
  4172ce:	mov    BYTE PTR [rax],bl
  4172d0:	mov    ebx,ecx
  4172d2:	mov    DWORD PTR [r13+0x3c],ebx
  4172d6:	mov    rbp,QWORD PTR [rsp+0x8]
  4172db:	mov    r13,QWORD PTR [rsp+0x18]
  4172e0:	mov    ecx,0x1
  4172e5:	mov    r8d,0x1
  4172eb:	mov    rdi,r12
  4172ee:	mov    r14d,DWORD PTR [rsp+0x44]
  4172f3:	mov    edx,r14d
  4172f6:	call   41ce80 <__ctype_b_loc@plt+0x1abb0>
  4172fb:	mov    eax,DWORD PTR [r12+0x4]
  417300:	cmp    DWORD PTR [r12+0x10],0x106
  417309:	jne    41732d <__ctype_b_loc@plt+0x1505d>
  41730b:	mov    DWORD PTR [r12+0x8],eax
  417310:	cmp    DWORD PTR [r12+0x20],0x11f
  417319:	jne    41734e <__ctype_b_loc@plt+0x1507e>
  41731b:	mov    rdi,r12
  41731e:	mov    rsi,r13
  417321:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  417326:	mov    DWORD PTR [r12+0x10],eax
  41732b:	jmp    417394 <__ctype_b_loc@plt+0x150c4>
  41732d:	mov    rdi,QWORD PTR [r12+0x38]
  417332:	cmp    eax,r14d
  417335:	jne    417365 <__ctype_b_loc@plt+0x15095>
  417337:	lea    rsi,[rip+0x14157]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  41733e:	lea    rdx,[rip+0x13cc2]        # 42b007 <__ctype_b_loc@plt+0x28d37>
  417345:	xor    eax,eax
  417347:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41734c:	jmp    417384 <__ctype_b_loc@plt+0x150b4>
  41734e:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  417353:	vmovups XMMWORD PTR [r12+0x10],xmm0
  41735a:	mov    DWORD PTR [r12+0x20],0x11f
  417363:	jmp    417394 <__ctype_b_loc@plt+0x150c4>
  417365:	lea    rsi,[rip+0x14100]        # 42b46c <__ctype_b_loc@plt+0x2919c>
  41736c:	lea    rdx,[rip+0x13c94]        # 42b007 <__ctype_b_loc@plt+0x28d37>
  417373:	lea    rcx,[rip+0x13c97]        # 42b011 <__ctype_b_loc@plt+0x28d41>
  41737a:	xor    eax,eax
  41737c:	mov    r8d,r14d
  41737f:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  417384:	mov    edx,DWORD PTR [r12+0x10]
  417389:	mov    rdi,r12
  41738c:	mov    rsi,rax
  41738f:	call   413af0 <__ctype_b_loc@plt+0x11820>
  417394:	mov    r8,QWORD PTR [r15+0x18]
  417398:	mov    r14,QWORD PTR [r15+0x28]
  41739c:	mov    rax,QWORD PTR [r14]
  41739f:	mov    QWORD PTR [r15+0x28],rax
  4173a3:	mov    cl,BYTE PTR [r14+0xc]
  4173a7:	mov    rdx,QWORD PTR [r8+0x30]
  4173ab:	movzx  esi,BYTE PTR [rdx+0x4a]
  4173af:	cmp    sil,cl
  4173b2:	jbe    41747d <__ctype_b_loc@plt+0x151ad>
  4173b8:	mov    edi,DWORD PTR [rdx+0x30]
  4173bb:	mov    rax,QWORD PTR [rdx]
  4173be:	mov    rbp,QWORD PTR [rax+0x30]
  4173c2:	mov    ebx,esi
  4173c4:	sub    bl,cl
  4173c6:	mov    r9d,ecx
  4173c9:	not    r9b
  4173cc:	add    r9b,sil
  4173cf:	and    bl,0x3
  4173d2:	je     417404 <__ctype_b_loc@plt+0x15134>
  4173d4:	add    rsi,0xff
  4173db:	neg    bl
  4173dd:	nop    DWORD PTR [rax]
  4173e0:	movzx  eax,sil
  4173e4:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  4173ec:	shl    rax,0x4
  4173f0:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  4173f4:	add    rsi,0xffffffffffffffff
  4173f8:	add    bl,0x1
  4173fb:	jne    4173e0 <__ctype_b_loc@plt+0x15110>
  4173fd:	add    rsi,0xffffffffffffff01
  417404:	cmp    r9b,0x3
  417408:	jb     41747a <__ctype_b_loc@plt+0x151aa>
  41740a:	nop    WORD PTR [rax+rax*1+0x0]
  417410:	lea    eax,[rsi-0x1]
  417413:	movzx  eax,al
  417416:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  41741e:	shl    rax,0x4
  417422:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  417426:	lea    eax,[rsi+0xfe]
  41742c:	movzx  eax,al
  41742f:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  417437:	shl    rax,0x4
  41743b:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  41743f:	lea    eax,[rsi+0xfd]
  417445:	movzx  eax,al
  417448:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  417450:	shl    rax,0x4
  417454:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  417458:	lea    eax,[rsi+0xfc]
  41745e:	movzx  eax,al
  417461:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  417469:	shl    rax,0x4
  41746d:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  417471:	add    rsi,0xfffffffffffffffc
  417475:	cmp    sil,cl
  417478:	ja     417410 <__ctype_b_loc@plt+0x15140>
  41747a:	mov    BYTE PTR [rdx+0x4a],cl
  41747d:	cmp    BYTE PTR [r14+0xd],0x0
  417482:	je     417499 <__ctype_b_loc@plt+0x151c9>
  417484:	movzx  esi,cl
  417487:	shl    esi,0x6
  41748a:	or     esi,0x23
  41748d:	mov    edx,DWORD PTR [r8+0x8]
  417491:	mov    rdi,r15
  417494:	call   419630 <__ctype_b_loc@plt+0x17360>
  417499:	movzx  eax,BYTE PTR [r15+0x4a]
  41749e:	mov    DWORD PTR [r15+0x3c],eax
  4174a2:	mov    r14d,DWORD PTR [r14+0x8]
  4174a6:	mov    eax,DWORD PTR [r15+0x30]
  4174aa:	mov    DWORD PTR [r15+0x34],eax
  4174ae:	cmp    r14d,0xffffffff
  4174b2:	je     41753f <__ctype_b_loc@plt+0x1526f>
  4174b8:	mov    edx,DWORD PTR [r15+0x38]
  4174bc:	cmp    edx,0xffffffff
  4174bf:	je     41753b <__ctype_b_loc@plt+0x1526b>
  4174c1:	mov    rax,QWORD PTR [r15]
  4174c4:	mov    rbp,QWORD PTR [rax+0x18]
  4174c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4174d0:	mov    ecx,edx
  4174d2:	movsxd rbx,edx
  4174d5:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  4174d9:	mov    edx,eax
  4174db:	shr    edx,0xe
  4174de:	lea    esi,[rdx-0x1ffff]
  4174e4:	cmp    esi,0xffffffff
  4174e7:	lea    edx,[rcx+rdx*1-0x1fffe]
  4174ee:	cmove  edx,esi
  4174f1:	cmp    edx,0xffffffff
  4174f4:	jne    4174d0 <__ctype_b_loc@plt+0x15200>
  4174f6:	not    ecx
  4174f8:	add    r14d,ecx
  4174fb:	mov    ecx,r14d
  4174fe:	neg    ecx
  417500:	cmovl  ecx,r14d
  417504:	cmp    ecx,0x20000
  41750a:	jl     417523 <__ctype_b_loc@plt+0x15253>
  41750c:	mov    rdi,QWORD PTR [r15+0x18]
  417510:	mov    edx,DWORD PTR [rdi+0x10]
  417513:	lea    rsi,[rip+0x13dd1]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  41751a:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41751f:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  417523:	and    eax,0x3fff
  417528:	shl    r14d,0xe
  41752c:	lea    eax,[rax+r14*1]
  417530:	add    eax,0x7fffc000
  417535:	mov    DWORD PTR [rbp+rbx*4+0x0],eax
  417539:	jmp    41753f <__ctype_b_loc@plt+0x1526f>
  41753b:	mov    DWORD PTR [r15+0x38],r14d
  41753f:	xor    ebp,ebp
  417541:	mov    eax,ebp
  417543:	add    rsp,0x98
  41754a:	pop    rbx
  41754b:	pop    r12
  41754d:	pop    r13
  41754f:	pop    r14
  417551:	pop    r15
  417553:	pop    rbp
  417554:	ret    
  417555:	mov    rcx,QWORD PTR [rbx]
  417558:	mov    rax,QWORD PTR [rcx+0x18]
  41755c:	movsxd rdx,DWORD PTR [rsp+0x28]
  417561:	and    DWORD PTR [rax+rdx*4],0x7fffff
  417568:	movsxd rdx,DWORD PTR [rsp+0x28]
  41756d:	mov    esi,0xffffc03f
  417572:	and    esi,DWORD PTR [rax+rdx*4]
  417575:	mov    edi,DWORD PTR [rbx+0x3c]
  417578:	shl    edi,0x6
  41757b:	and    edi,0x3fc0
  417581:	or     edi,esi
  417583:	mov    DWORD PTR [rax+rdx*4],edi
  417586:	mov    edx,DWORD PTR [rbx+0x3c]
  417589:	lea    ebx,[rdx+0x1]
  41758c:	movzx  esi,BYTE PTR [rcx+0x73]
  417590:	mov    eax,0xe
  417595:	cmp    edx,esi
  417597:	jl     417609 <__ctype_b_loc@plt+0x15339>
  417599:	cmp    edx,0xf9
  41759f:	jl     4175fa <__ctype_b_loc@plt+0x1532a>
  4175a1:	mov    r14,QWORD PTR [rsp+0x10]
  4175a6:	mov    rdi,QWORD PTR [r14+0x18]
  4175aa:	mov    edx,DWORD PTR [rdi+0x10]
  4175ad:	lea    rsi,[rip+0x13d6a]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  4175b4:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4175b9:	mov    rcx,QWORD PTR [r14]
  4175bc:	add    rcx,0x73
  4175c0:	mov    edx,DWORD PTR [r14+0x3c]
  4175c4:	add    edx,0x1
  4175c7:	mov    eax,DWORD PTR [rsp+0x20]
  4175cb:	jmp    417605 <__ctype_b_loc@plt+0x15335>
  4175cd:	add    rax,0x73
  4175d1:	mov    ecx,ebx
  4175d3:	mov    BYTE PTR [rax],bl
  4175d5:	mov    ebx,ecx
  4175d7:	mov    rdi,QWORD PTR [rsp+0x10]
  4175dc:	mov    DWORD PTR [rdi+0x3c],ebx
  4175df:	add    ebx,0xffffffff
  4175e2:	lea    rsi,[rsp+0x20]
  4175e7:	mov    edx,ebx
  4175e9:	mov    rbx,rdi
  4175ec:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  4175f1:	movzx  edx,BYTE PTR [rbx+0x4a]
  4175f5:	jmp    414fed <__ctype_b_loc@plt+0x12d1d>
  4175fa:	add    rcx,0x73
  4175fe:	mov    eax,0xe
  417603:	mov    edx,ebx
  417605:	mov    BYTE PTR [rcx],bl
  417607:	mov    ebx,edx
  417609:	mov    rcx,QWORD PTR [rsp+0x10]
  41760e:	mov    DWORD PTR [rcx+0x3c],ebx
  417611:	mov    rbx,rcx
  417614:	cmp    ebp,0x1
  417617:	jne    417636 <__ctype_b_loc@plt+0x15366>
  417619:	cmp    eax,0xd
  41761c:	jne    417636 <__ctype_b_loc@plt+0x15366>
  41761e:	mov    rax,QWORD PTR [rbx]
  417621:	mov    rax,QWORD PTR [rax+0x18]
  417625:	movsxd rcx,DWORD PTR [rsp+0x28]
  41762a:	mov    edx,DWORD PTR [rax+rcx*4]
  41762d:	and    edx,0xffffffc0
  417630:	or     edx,0x1d
  417633:	mov    DWORD PTR [rax+rcx*4],edx
  417636:	movzx  edx,BYTE PTR [rbx+0x4a]
  41763a:	mov    ebp,0xffffffff
  41763f:	jmp    414fed <__ctype_b_loc@plt+0x12d1d>
  417644:	add    rax,0x73
  417648:	mov    ecx,ebx
  41764a:	mov    BYTE PTR [rax],bl
  41764c:	mov    ebx,ecx
  41764e:	mov    rdi,QWORD PTR [rsp+0x10]
  417653:	mov    DWORD PTR [rdi+0x3c],ebx
  417656:	add    ebx,0xffffffff
  417659:	lea    rsi,[rsp+0x20]
  41765e:	mov    edx,ebx
  417660:	mov    rbx,rdi
  417663:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  417668:	mov    ebp,0x1
  41766d:	mov    edx,DWORD PTR [rsp+0x28]
  417671:	jmp    414fed <__ctype_b_loc@plt+0x12d1d>
  417676:	lea    rsi,[rsp+0x20]
  41767b:	mov    rdi,rbx
  41767e:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  417683:	mov    edx,DWORD PTR [rsp+0x28]
  417687:	jmp    414fed <__ctype_b_loc@plt+0x12d1d>
  41768c:	nop    DWORD PTR [rax+0x0]
  417690:	push   rbp
  417691:	push   r15
  417693:	push   r14
  417695:	push   r13
  417697:	push   r12
  417699:	push   rbx
  41769a:	sub    rsp,0x18
  41769e:	mov    rbx,rdi
  4176a1:	mov    rcx,QWORD PTR [rdi+0x30]
  4176a5:	mov    DWORD PTR [rsp+0x8],0xffffffff
  4176ad:	mov    BYTE PTR [rsp+0xe],0x0
  4176b2:	mov    al,BYTE PTR [rcx+0x4a]
  4176b5:	mov    BYTE PTR [rsp+0xc],al
  4176b9:	mov    BYTE PTR [rsp+0xd],0x0
  4176be:	mov    rax,QWORD PTR [rcx+0x28]
  4176c2:	mov    QWORD PTR [rsp],rax
  4176c6:	mov    rax,rsp
  4176c9:	mov    QWORD PTR [rsp+0x10],rcx
  4176ce:	mov    QWORD PTR [rcx+0x28],rax
  4176d2:	mov    rax,QWORD PTR [rdi+0x38]
  4176d6:	mov    ecx,DWORD PTR [rax+0x60]
  4176d9:	add    ecx,0x1
  4176dc:	mov    WORD PTR [rax+0x60],cx
  4176e0:	movzx  eax,cx
  4176e3:	cmp    eax,0xc9
  4176e8:	jb     4176fb <__ctype_b_loc@plt+0x1542b>
  4176ea:	lea    rsi,[rip+0x13bc6]        # 42b2b7 <__ctype_b_loc@plt+0x28fe7>
  4176f1:	xor    edx,edx
  4176f3:	mov    rdi,rbx
  4176f6:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4176fb:	lea    r12,[rbx+0x20]
  4176ff:	lea    r15,[rbx+0x18]
  417703:	lea    r13,[rbx+0x10]
  417707:	mov    r14d,0xfffffefc
  41770d:	nop    DWORD PTR [rax]
  417710:	mov    eax,DWORD PTR [rbx+0x10]
  417713:	add    eax,r14d
  417716:	cmp    eax,0x1b
  417719:	ja     417725 <__ctype_b_loc@plt+0x15455>
  41771b:	mov    ecx,0x8010007
  417720:	bt     ecx,eax
  417723:	jb     417783 <__ctype_b_loc@plt+0x154b3>
  417725:	mov    rdi,rbx
  417728:	call   414750 <__ctype_b_loc@plt+0x12480>
  41772d:	mov    ebp,eax
  41772f:	cmp    DWORD PTR [rbx+0x10],0x3b
  417733:	jne    417774 <__ctype_b_loc@plt+0x154a4>
  417735:	mov    eax,DWORD PTR [rbx+0x4]
  417738:	mov    ecx,DWORD PTR [rbx+0x20]
  41773b:	mov    DWORD PTR [rbx+0x8],eax
  41773e:	cmp    ecx,0x11f
  417744:	jne    417760 <__ctype_b_loc@plt+0x15490>
  417746:	mov    rdi,rbx
  417749:	mov    rsi,r15
  41774c:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  417751:	mov    DWORD PTR [rbx+0x10],eax
  417754:	jmp    417774 <__ctype_b_loc@plt+0x154a4>
  417756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417760:	vmovups xmm0,XMMWORD PTR [r12]
  417766:	vmovups XMMWORD PTR [r13+0x0],xmm0
  41776c:	mov    DWORD PTR [r12],0x11f
  417774:	mov    rax,QWORD PTR [rbx+0x30]
  417778:	movzx  ecx,BYTE PTR [rax+0x4a]
  41777c:	mov    DWORD PTR [rax+0x3c],ecx
  41777f:	test   ebp,ebp
  417781:	je     417710 <__ctype_b_loc@plt+0x15440>
  417783:	mov    rax,QWORD PTR [rbx+0x38]
  417787:	add    WORD PTR [rax+0x60],0xffff
  41778c:	mov    r12,QWORD PTR [rsp+0x10]
  417791:	mov    r8,QWORD PTR [r12+0x18]
  417796:	mov    r14,QWORD PTR [r12+0x28]
  41779b:	mov    rax,QWORD PTR [r14]
  41779e:	mov    QWORD PTR [r12+0x28],rax
  4177a3:	mov    cl,BYTE PTR [r14+0xc]
  4177a7:	mov    rdx,QWORD PTR [r8+0x30]
  4177ab:	movzx  esi,BYTE PTR [rdx+0x4a]
  4177af:	cmp    sil,cl
  4177b2:	jbe    41787d <__ctype_b_loc@plt+0x155ad>
  4177b8:	mov    edi,DWORD PTR [rdx+0x30]
  4177bb:	mov    rax,QWORD PTR [rdx]
  4177be:	mov    rbp,QWORD PTR [rax+0x30]
  4177c2:	mov    ebx,esi
  4177c4:	sub    bl,cl
  4177c6:	mov    r9d,ecx
  4177c9:	not    r9b
  4177cc:	add    r9b,sil
  4177cf:	and    bl,0x3
  4177d2:	je     417804 <__ctype_b_loc@plt+0x15534>
  4177d4:	add    rsi,0xff
  4177db:	neg    bl
  4177dd:	nop    DWORD PTR [rax]
  4177e0:	movzx  eax,sil
  4177e4:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  4177ec:	shl    rax,0x4
  4177f0:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  4177f4:	add    rsi,0xffffffffffffffff
  4177f8:	add    bl,0x1
  4177fb:	jne    4177e0 <__ctype_b_loc@plt+0x15510>
  4177fd:	add    rsi,0xffffffffffffff01
  417804:	cmp    r9b,0x3
  417808:	jb     41787a <__ctype_b_loc@plt+0x155aa>
  41780a:	nop    WORD PTR [rax+rax*1+0x0]
  417810:	lea    eax,[rsi-0x1]
  417813:	movzx  eax,al
  417816:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  41781e:	shl    rax,0x4
  417822:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  417826:	lea    eax,[rsi+0xfe]
  41782c:	movzx  eax,al
  41782f:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  417837:	shl    rax,0x4
  41783b:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  41783f:	lea    eax,[rsi+0xfd]
  417845:	movzx  eax,al
  417848:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  417850:	shl    rax,0x4
  417854:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  417858:	lea    eax,[rsi+0xfc]
  41785e:	movzx  eax,al
  417861:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  417869:	shl    rax,0x4
  41786d:	mov    DWORD PTR [rbp+rax*1+0xc],edi
  417871:	add    rsi,0xfffffffffffffffc
  417875:	cmp    sil,cl
  417878:	ja     417810 <__ctype_b_loc@plt+0x15540>
  41787a:	mov    BYTE PTR [rdx+0x4a],cl
  41787d:	cmp    BYTE PTR [r14+0xd],0x0
  417882:	je     417899 <__ctype_b_loc@plt+0x155c9>
  417884:	movzx  esi,cl
  417887:	shl    esi,0x6
  41788a:	or     esi,0x23
  41788d:	mov    edx,DWORD PTR [r8+0x8]
  417891:	mov    rdi,r12
  417894:	call   419630 <__ctype_b_loc@plt+0x17360>
  417899:	movzx  eax,BYTE PTR [r12+0x4a]
  41789f:	mov    DWORD PTR [r12+0x3c],eax
  4178a4:	mov    r15d,DWORD PTR [r14+0x8]
  4178a8:	mov    eax,DWORD PTR [r12+0x30]
  4178ad:	mov    DWORD PTR [r12+0x34],eax
  4178b2:	cmp    r15d,0xffffffff
  4178b6:	je     417941 <__ctype_b_loc@plt+0x15671>
  4178bc:	mov    edx,DWORD PTR [r12+0x38]
  4178c1:	cmp    edx,0xffffffff
  4178c4:	je     41793c <__ctype_b_loc@plt+0x1566c>
  4178c6:	mov    rax,QWORD PTR [r12]
  4178ca:	mov    rbp,QWORD PTR [rax+0x18]
  4178ce:	xchg   ax,ax
  4178d0:	mov    ecx,edx
  4178d2:	movsxd rbx,edx
  4178d5:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  4178d9:	mov    edx,eax
  4178db:	shr    edx,0xe
  4178de:	lea    esi,[rdx-0x1ffff]
  4178e4:	cmp    esi,0xffffffff
  4178e7:	lea    edx,[rcx+rdx*1-0x1fffe]
  4178ee:	cmove  edx,esi
  4178f1:	cmp    edx,0xffffffff
  4178f4:	jne    4178d0 <__ctype_b_loc@plt+0x15600>
  4178f6:	not    ecx
  4178f8:	add    r15d,ecx
  4178fb:	mov    ecx,r15d
  4178fe:	neg    ecx
  417900:	cmovl  ecx,r15d
  417904:	cmp    ecx,0x20000
  41790a:	jl     417924 <__ctype_b_loc@plt+0x15654>
  41790c:	mov    rdi,QWORD PTR [r12+0x18]
  417911:	mov    edx,DWORD PTR [rdi+0x10]
  417914:	lea    rsi,[rip+0x139d0]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  41791b:	call   413af0 <__ctype_b_loc@plt+0x11820>
  417920:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  417924:	and    eax,0x3fff
  417929:	shl    r15d,0xe
  41792d:	lea    eax,[rax+r15*1]
  417931:	add    eax,0x7fffc000
  417936:	mov    DWORD PTR [rbp+rbx*4+0x0],eax
  41793a:	jmp    417941 <__ctype_b_loc@plt+0x15671>
  41793c:	mov    DWORD PTR [r12+0x38],r15d
  417941:	add    rsp,0x18
  417945:	pop    rbx
  417946:	pop    r12
  417948:	pop    r13
  41794a:	pop    r14
  41794c:	pop    r15
  41794e:	pop    rbp
  41794f:	ret    
  417950:	push   rbp
  417951:	push   r15
  417953:	push   r14
  417955:	push   r13
  417957:	push   r12
  417959:	push   rbx
  41795a:	push   rax
  41795b:	mov    rbx,rdi
  41795e:	mov    eax,DWORD PTR [rdi+0x4]
  417961:	cmp    DWORD PTR [rdi+0x10],esi
  417964:	jne    417983 <__ctype_b_loc@plt+0x156b3>
  417966:	mov    DWORD PTR [rbx+0x8],eax
  417969:	cmp    DWORD PTR [rbx+0x20],0x11f
  417970:	jne    4179a4 <__ctype_b_loc@plt+0x156d4>
  417972:	lea    rsi,[rbx+0x18]
  417976:	mov    rdi,rbx
  417979:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41797e:	mov    DWORD PTR [rbx+0x10],eax
  417981:	jmp    4179b8 <__ctype_b_loc@plt+0x156e8>
  417983:	mov    r15d,ecx
  417986:	mov    ebp,esi
  417988:	cmp    eax,ecx
  41798a:	jne    4179c7 <__ctype_b_loc@plt+0x156f7>
  41798c:	mov    rdi,rbx
  41798f:	mov    esi,ebp
  417991:	add    rsp,0x8
  417995:	pop    rbx
  417996:	pop    r12
  417998:	pop    r13
  41799a:	pop    r14
  41799c:	pop    r15
  41799e:	pop    rbp
  41799f:	jmp    41ce00 <__ctype_b_loc@plt+0x1ab30>
  4179a4:	lea    rax,[rbx+0x20]
  4179a8:	vmovups xmm0,XMMWORD PTR [rax]
  4179ac:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  4179b1:	mov    DWORD PTR [rbx+0x20],0x11f
  4179b8:	add    rsp,0x8
  4179bc:	pop    rbx
  4179bd:	pop    r12
  4179bf:	pop    r13
  4179c1:	pop    r14
  4179c3:	pop    r15
  4179c5:	pop    rbp
  4179c6:	ret    
  4179c7:	mov    r13d,edx
  4179ca:	mov    r14,QWORD PTR [rbx+0x38]
  4179ce:	cmp    ebp,0x100
  4179d4:	jg     4179f0 <__ctype_b_loc@plt+0x15720>
  4179d6:	call   4022d0 <__ctype_b_loc@plt>
  4179db:	mov    rax,QWORD PTR [rax]
  4179de:	movsxd rcx,ebp
  4179e1:	test   BYTE PTR [rax+rcx*2],0x2
  4179e5:	jne    417a1f <__ctype_b_loc@plt+0x1574f>
  4179e7:	lea    rsi,[rip+0x1386d]        # 42b25b <__ctype_b_loc@plt+0x28f8b>
  4179ee:	jmp    417a26 <__ctype_b_loc@plt+0x15756>
  4179f0:	movsxd rax,ebp
  4179f3:	lea    rcx,[rip+0x18fd6]        # 4309d0 <__ctype_b_loc@plt+0x2e700>
  4179fa:	mov    r12,QWORD PTR [rcx+rax*8-0x808]
  417a02:	cmp    r13d,0x100
  417a09:	jle    417a3e <__ctype_b_loc@plt+0x1576e>
  417a0b:	movsxd rax,r13d
  417a0e:	lea    rcx,[rip+0x18fbb]        # 4309d0 <__ctype_b_loc@plt+0x2e700>
  417a15:	mov    rcx,QWORD PTR [rcx+rax*8-0x808]
  417a1d:	jmp    417a70 <__ctype_b_loc@plt+0x157a0>
  417a1f:	lea    rsi,[rip+0x1382c]        # 42b252 <__ctype_b_loc@plt+0x28f82>
  417a26:	xor    eax,eax
  417a28:	mov    rdi,r14
  417a2b:	mov    edx,ebp
  417a2d:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  417a32:	mov    r12,rax
  417a35:	cmp    r13d,0x100
  417a3c:	jg     417a0b <__ctype_b_loc@plt+0x1573b>
  417a3e:	call   4022d0 <__ctype_b_loc@plt>
  417a43:	mov    rax,QWORD PTR [rax]
  417a46:	movsxd rcx,r13d
  417a49:	test   BYTE PTR [rax+rcx*2],0x2
  417a4d:	mov    rdi,QWORD PTR [rbx+0x38]
  417a51:	jne    417a5c <__ctype_b_loc@plt+0x1578c>
  417a53:	lea    rsi,[rip+0x13801]        # 42b25b <__ctype_b_loc@plt+0x28f8b>
  417a5a:	jmp    417a63 <__ctype_b_loc@plt+0x15793>
  417a5c:	lea    rsi,[rip+0x137ef]        # 42b252 <__ctype_b_loc@plt+0x28f82>
  417a63:	xor    eax,eax
  417a65:	mov    edx,r13d
  417a68:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  417a6d:	mov    rcx,rax
  417a70:	lea    rsi,[rip+0x139f5]        # 42b46c <__ctype_b_loc@plt+0x2919c>
  417a77:	xor    eax,eax
  417a79:	mov    rdi,r14
  417a7c:	mov    rdx,r12
  417a7f:	mov    r8d,r15d
  417a82:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  417a87:	mov    edx,DWORD PTR [rbx+0x10]
  417a8a:	mov    rdi,rbx
  417a8d:	mov    rsi,rax
  417a90:	add    rsp,0x8
  417a94:	pop    rbx
  417a95:	pop    r12
  417a97:	pop    r13
  417a99:	pop    r14
  417a9b:	pop    r15
  417a9d:	pop    rbp
  417a9e:	jmp    413af0 <__ctype_b_loc@plt+0x11820>
  417aa3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417aad:	nop    DWORD PTR [rax]
  417ab0:	push   rbp
  417ab1:	push   r15
  417ab3:	push   r14
  417ab5:	push   r12
  417ab7:	push   rbx
  417ab8:	mov    r14,QWORD PTR [rdi+0x30]
  417abc:	mov    rbx,QWORD PTR [r14+0x28]
  417ac0:	xor    ebp,ebp
  417ac2:	test   rbx,rbx
  417ac5:	jne    417ae2 <__ctype_b_loc@plt+0x15812>
  417ac7:	jmp    417b9b <__ctype_b_loc@plt+0x158cb>
  417acc:	nop    DWORD PTR [rax+0x0]
  417ad0:	movzx  eax,BYTE PTR [rbx+0xd]
  417ad4:	or     ebp,eax
  417ad6:	mov    rbx,QWORD PTR [rbx]
  417ad9:	test   rbx,rbx
  417adc:	je     417b9b <__ctype_b_loc@plt+0x158cb>
  417ae2:	cmp    BYTE PTR [rbx+0xe],0x0
  417ae6:	je     417ad0 <__ctype_b_loc@plt+0x15800>
  417ae8:	test   ebp,ebp
  417aea:	je     417b05 <__ctype_b_loc@plt+0x15835>
  417aec:	movzx  esi,BYTE PTR [rbx+0xc]
  417af0:	shl    esi,0x6
  417af3:	or     esi,0x23
  417af6:	mov    rax,QWORD PTR [r14+0x18]
  417afa:	mov    edx,DWORD PTR [rax+0x8]
  417afd:	mov    rdi,r14
  417b00:	call   419630 <__ctype_b_loc@plt+0x17360>
  417b05:	mov    rdi,r14
  417b08:	call   417bd0 <__ctype_b_loc@plt+0x15900>
  417b0d:	cmp    eax,0xffffffff
  417b10:	je     417bbd <__ctype_b_loc@plt+0x158ed>
  417b16:	mov    r15d,eax
  417b19:	mov    edx,DWORD PTR [rbx+0x8]
  417b1c:	cmp    edx,0xffffffff
  417b1f:	je     417bb9 <__ctype_b_loc@plt+0x158e9>
  417b25:	mov    rax,QWORD PTR [r14]
  417b28:	mov    r12,QWORD PTR [rax+0x18]
  417b2c:	nop    DWORD PTR [rax+0x0]
  417b30:	mov    ecx,edx
  417b32:	movsxd rbx,edx
  417b35:	mov    eax,DWORD PTR [r12+rbx*4]
  417b39:	mov    edx,eax
  417b3b:	shr    edx,0xe
  417b3e:	lea    esi,[rdx-0x1ffff]
  417b44:	cmp    esi,0xffffffff
  417b47:	lea    edx,[rcx+rdx*1-0x1fffe]
  417b4e:	cmove  edx,esi
  417b51:	cmp    edx,0xffffffff
  417b54:	jne    417b30 <__ctype_b_loc@plt+0x15860>
  417b56:	not    ecx
  417b58:	add    r15d,ecx
  417b5b:	mov    ecx,r15d
  417b5e:	neg    ecx
  417b60:	cmovl  ecx,r15d
  417b64:	cmp    ecx,0x20000
  417b6a:	jl     417b83 <__ctype_b_loc@plt+0x158b3>
  417b6c:	mov    rdi,QWORD PTR [r14+0x18]
  417b70:	mov    edx,DWORD PTR [rdi+0x10]
  417b73:	lea    rsi,[rip+0x13771]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  417b7a:	call   413af0 <__ctype_b_loc@plt+0x11820>
  417b7f:	mov    eax,DWORD PTR [r12+rbx*4]
  417b83:	and    eax,0x3fff
  417b88:	shl    r15d,0xe
  417b8c:	lea    eax,[rax+r15*1]
  417b90:	add    eax,0x7fffc000
  417b95:	mov    DWORD PTR [r12+rbx*4],eax
  417b99:	jmp    417bbd <__ctype_b_loc@plt+0x158ed>
  417b9b:	mov    edx,DWORD PTR [rdi+0x10]
  417b9e:	lea    rsi,[rip+0x13960]        # 42b505 <__ctype_b_loc@plt+0x29235>
  417ba5:	call   413af0 <__ctype_b_loc@plt+0x11820>
  417baa:	xor    ebx,ebx
  417bac:	test   ebp,ebp
  417bae:	jne    417aec <__ctype_b_loc@plt+0x1581c>
  417bb4:	jmp    417b05 <__ctype_b_loc@plt+0x15835>
  417bb9:	mov    DWORD PTR [rbx+0x8],r15d
  417bbd:	pop    rbx
  417bbe:	pop    r12
  417bc0:	pop    r14
  417bc2:	pop    r15
  417bc4:	pop    rbp
  417bc5:	ret    
  417bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417bd0:	push   rbp
  417bd1:	push   r15
  417bd3:	push   r14
  417bd5:	push   r12
  417bd7:	push   rbx
  417bd8:	mov    r12,rdi
  417bdb:	mov    r15d,DWORD PTR [rdi+0x38]
  417bdf:	mov    DWORD PTR [rdi+0x38],0xffffffff
  417be6:	mov    rax,QWORD PTR [rdi+0x18]
  417bea:	mov    edx,DWORD PTR [rax+0x8]
  417bed:	mov    esi,0x7fff8016
  417bf2:	call   419630 <__ctype_b_loc@plt+0x17360>
  417bf7:	mov    r14d,eax
  417bfa:	cmp    r15d,0xffffffff
  417bfe:	je     417c8f <__ctype_b_loc@plt+0x159bf>
  417c04:	cmp    r14d,0xffffffff
  417c08:	je     417c8c <__ctype_b_loc@plt+0x159bc>
  417c0e:	mov    rax,QWORD PTR [r12]
  417c12:	mov    rbp,QWORD PTR [rax+0x18]
  417c16:	mov    edx,r14d
  417c19:	nop    DWORD PTR [rax+0x0]
  417c20:	mov    ecx,edx
  417c22:	movsxd rbx,edx
  417c25:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  417c29:	mov    edx,eax
  417c2b:	shr    edx,0xe
  417c2e:	lea    esi,[rdx-0x1ffff]
  417c34:	cmp    esi,0xffffffff
  417c37:	lea    edx,[rcx+rdx*1-0x1fffe]
  417c3e:	cmove  edx,esi
  417c41:	cmp    edx,0xffffffff
  417c44:	jne    417c20 <__ctype_b_loc@plt+0x15950>
  417c46:	not    ecx
  417c48:	add    r15d,ecx
  417c4b:	mov    ecx,r15d
  417c4e:	neg    ecx
  417c50:	cmovl  ecx,r15d
  417c54:	cmp    ecx,0x20000
  417c5a:	jl     417c74 <__ctype_b_loc@plt+0x159a4>
  417c5c:	mov    rdi,QWORD PTR [r12+0x18]
  417c61:	mov    edx,DWORD PTR [rdi+0x10]
  417c64:	lea    rsi,[rip+0x13680]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  417c6b:	call   413af0 <__ctype_b_loc@plt+0x11820>
  417c70:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  417c74:	and    eax,0x3fff
  417c79:	shl    r15d,0xe
  417c7d:	lea    eax,[rax+r15*1]
  417c81:	add    eax,0x7fffc000
  417c86:	mov    DWORD PTR [rbp+rbx*4+0x0],eax
  417c8a:	jmp    417c8f <__ctype_b_loc@plt+0x159bf>
  417c8c:	mov    r14d,r15d
  417c8f:	mov    eax,r14d
  417c92:	pop    rbx
  417c93:	pop    r12
  417c95:	pop    r14
  417c97:	pop    r15
  417c99:	pop    rbp
  417c9a:	ret    
  417c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  417ca0:	push   r15
  417ca2:	push   r14
  417ca4:	push   r13
  417ca6:	push   r12
  417ca8:	push   rbx
  417ca9:	mov    r14,rsi
  417cac:	mov    r12,rdi
  417caf:	call   419010 <__ctype_b_loc@plt+0x16d40>
  417cb4:	mov    eax,DWORD PTR [r14]
  417cb7:	lea    ecx,[rax-0x4]
  417cba:	cmp    ecx,0x2
  417cbd:	jb     417dd3 <__ctype_b_loc@plt+0x15b03>
  417cc3:	cmp    eax,0x2
  417cc6:	je     417dd3 <__ctype_b_loc@plt+0x15b03>
  417ccc:	cmp    eax,0xa
  417ccf:	jne    417d01 <__ctype_b_loc@plt+0x15a31>
  417cd1:	movsxd rcx,DWORD PTR [r14+0x8]
  417cd5:	mov    rdx,QWORD PTR [r12]
  417cd9:	lea    rax,[rcx*4+0x0]
  417ce1:	add    rax,QWORD PTR [rdx+0x18]
  417ce5:	test   rcx,rcx
  417ce8:	jle    417cfd <__ctype_b_loc@plt+0x15a2d>
  417cea:	mov    ecx,DWORD PTR [rax-0x4]
  417ced:	movabs rdx,0x20f800000
  417cf7:	bt     rdx,rcx
  417cfb:	jb     417d1c <__ctype_b_loc@plt+0x15a4c>
  417cfd:	mov    ecx,DWORD PTR [rax]
  417cff:	jmp    417d20 <__ctype_b_loc@plt+0x15a50>
  417d01:	xor    edx,edx
  417d03:	mov    rdi,r12
  417d06:	mov    rsi,r14
  417d09:	call   41ca60 <__ctype_b_loc@plt+0x1a790>
  417d0e:	mov    r15d,eax
  417d11:	cmp    r15d,0xffffffff
  417d15:	jne    417d49 <__ctype_b_loc@plt+0x15a79>
  417d17:	jmp    417dd3 <__ctype_b_loc@plt+0x15b03>
  417d1c:	add    rax,0xfffffffffffffffc
  417d20:	mov    edx,ecx
  417d22:	and    edx,0xffffc03f
  417d28:	xor    esi,esi
  417d2a:	test   ecx,0x3fc0
  417d30:	sete   sil
  417d34:	shl    esi,0x6
  417d37:	or     esi,edx
  417d39:	mov    DWORD PTR [rax],esi
  417d3b:	mov    r15d,DWORD PTR [r14+0x8]
  417d3f:	cmp    r15d,0xffffffff
  417d43:	je     417dd3 <__ctype_b_loc@plt+0x15b03>
  417d49:	mov    edx,DWORD PTR [r14+0x14]
  417d4d:	cmp    edx,0xffffffff
  417d50:	je     417dcf <__ctype_b_loc@plt+0x15aff>
  417d52:	mov    rax,QWORD PTR [r12]
  417d56:	mov    r13,QWORD PTR [rax+0x18]
  417d5a:	nop    WORD PTR [rax+rax*1+0x0]
  417d60:	mov    ecx,edx
  417d62:	movsxd rbx,edx
  417d65:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  417d6a:	mov    edx,eax
  417d6c:	shr    edx,0xe
  417d6f:	lea    esi,[rdx-0x1ffff]
  417d75:	cmp    esi,0xffffffff
  417d78:	lea    edx,[rcx+rdx*1-0x1fffe]
  417d7f:	cmove  edx,esi
  417d82:	cmp    edx,0xffffffff
  417d85:	jne    417d60 <__ctype_b_loc@plt+0x15a90>
  417d87:	not    ecx
  417d89:	add    r15d,ecx
  417d8c:	mov    ecx,r15d
  417d8f:	neg    ecx
  417d91:	cmovl  ecx,r15d
  417d95:	cmp    ecx,0x20000
  417d9b:	jl     417db6 <__ctype_b_loc@plt+0x15ae6>
  417d9d:	mov    rdi,QWORD PTR [r12+0x18]
  417da2:	mov    edx,DWORD PTR [rdi+0x10]
  417da5:	lea    rsi,[rip+0x1353f]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  417dac:	call   413af0 <__ctype_b_loc@plt+0x11820>
  417db1:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  417db6:	and    eax,0x3fff
  417dbb:	shl    r15d,0xe
  417dbf:	lea    eax,[rax+r15*1]
  417dc3:	add    eax,0x7fffc000
  417dc8:	mov    DWORD PTR [r13+rbx*4+0x0],eax
  417dcd:	jmp    417dd3 <__ctype_b_loc@plt+0x15b03>
  417dcf:	mov    DWORD PTR [r14+0x14],r15d
  417dd3:	mov    r15d,DWORD PTR [r14+0x10]
  417dd7:	mov    eax,DWORD PTR [r12+0x30]
  417ddc:	mov    DWORD PTR [r12+0x34],eax
  417de1:	cmp    r15d,0xffffffff
  417de5:	je     417e74 <__ctype_b_loc@plt+0x15ba4>
  417deb:	mov    edx,DWORD PTR [r12+0x38]
  417df0:	cmp    edx,0xffffffff
  417df3:	je     417e6f <__ctype_b_loc@plt+0x15b9f>
  417df5:	mov    rax,QWORD PTR [r12]
  417df9:	mov    r13,QWORD PTR [rax+0x18]
  417dfd:	nop    DWORD PTR [rax]
  417e00:	mov    ecx,edx
  417e02:	movsxd rbx,edx
  417e05:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  417e0a:	mov    edx,eax
  417e0c:	shr    edx,0xe
  417e0f:	lea    esi,[rdx-0x1ffff]
  417e15:	cmp    esi,0xffffffff
  417e18:	lea    edx,[rcx+rdx*1-0x1fffe]
  417e1f:	cmove  edx,esi
  417e22:	cmp    edx,0xffffffff
  417e25:	jne    417e00 <__ctype_b_loc@plt+0x15b30>
  417e27:	not    ecx
  417e29:	add    r15d,ecx
  417e2c:	mov    ecx,r15d
  417e2f:	neg    ecx
  417e31:	cmovl  ecx,r15d
  417e35:	cmp    ecx,0x20000
  417e3b:	jl     417e56 <__ctype_b_loc@plt+0x15b86>
  417e3d:	mov    rdi,QWORD PTR [r12+0x18]
  417e42:	mov    edx,DWORD PTR [rdi+0x10]
  417e45:	lea    rsi,[rip+0x1349f]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  417e4c:	call   413af0 <__ctype_b_loc@plt+0x11820>
  417e51:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  417e56:	and    eax,0x3fff
  417e5b:	shl    r15d,0xe
  417e5f:	lea    eax,[rax+r15*1]
  417e63:	add    eax,0x7fffc000
  417e68:	mov    DWORD PTR [r13+rbx*4+0x0],eax
  417e6d:	jmp    417e74 <__ctype_b_loc@plt+0x15ba4>
  417e6f:	mov    DWORD PTR [r12+0x38],r15d
  417e74:	mov    DWORD PTR [r14+0x10],0xffffffff
  417e7c:	pop    rbx
  417e7d:	pop    r12
  417e7f:	pop    r13
  417e81:	pop    r14
  417e83:	pop    r15
  417e85:	ret    
  417e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417e90:	push   rbp
  417e91:	push   r15
  417e93:	push   r14
  417e95:	push   r13
  417e97:	push   r12
  417e99:	push   rbx
  417e9a:	sub    rsp,0x48
  417e9e:	mov    DWORD PTR [rsp+0x2c],edx
  417ea2:	mov    r15,rsi
  417ea5:	mov    rbx,rdi
  417ea8:	mov    rax,QWORD PTR [rdi+0x38]
  417eac:	mov    ecx,DWORD PTR [rax+0x60]
  417eaf:	add    ecx,0x1
  417eb2:	mov    WORD PTR [rax+0x60],cx
  417eb6:	movzx  eax,cx
  417eb9:	cmp    eax,0xc9
  417ebe:	jb     417ed1 <__ctype_b_loc@plt+0x15c01>
  417ec0:	lea    rsi,[rip+0x133f0]        # 42b2b7 <__ctype_b_loc@plt+0x28fe7>
  417ec7:	xor    edx,edx
  417ec9:	mov    rdi,rbx
  417ecc:	call   413af0 <__ctype_b_loc@plt+0x11820>
  417ed1:	mov    eax,DWORD PTR [rbx+0x10]
  417ed4:	cmp    eax,0x106
  417ed9:	mov    QWORD PTR [rsp+0x8],rbx
  417ede:	mov    QWORD PTR [rsp],r15
  417ee2:	jle    417f18 <__ctype_b_loc@plt+0x15c48>
  417ee4:	add    eax,0xfffffef9
  417ee9:	cmp    eax,0x17
  417eec:	ja     4181f3 <__ctype_b_loc@plt+0x15f23>
  417ef2:	mov    bl,0x1
  417ef4:	lea    rcx,[rip+0x1265d]        # 42a558 <__ctype_b_loc@plt+0x28288>
  417efb:	movsxd rax,DWORD PTR [rcx+rax*4]
  417eff:	add    rax,rcx
  417f02:	jmp    rax
  417f04:	mov    QWORD PTR [r15+0x10],0xffffffffffffffff
  417f0c:	mov    DWORD PTR [r15],0x3
  417f13:	jmp    417f98 <__ctype_b_loc@plt+0x15cc8>
  417f18:	cmp    eax,0x23
  417f1b:	je     4180a9 <__ctype_b_loc@plt+0x15dd9>
  417f21:	cmp    eax,0x2d
  417f24:	je     4180ad <__ctype_b_loc@plt+0x15ddd>
  417f2a:	cmp    eax,0x7b
  417f2d:	jne    4181f3 <__ctype_b_loc@plt+0x15f23>
  417f33:	mov    rbx,QWORD PTR [rsp+0x8]
  417f38:	mov    rdi,rbx
  417f3b:	mov    rsi,r15
  417f3e:	call   41a1c0 <__ctype_b_loc@plt+0x17ef0>
  417f43:	jmp    4185c9 <__ctype_b_loc@plt+0x162f9>
  417f48:	mov    rbx,QWORD PTR [rsp+0x8]
  417f4d:	mov    ecx,DWORD PTR [rbx+0x4]
  417f50:	mov    eax,DWORD PTR [rbx+0x20]
  417f53:	mov    DWORD PTR [rbx+0x8],ecx
  417f56:	cmp    eax,0x11f
  417f5b:	jne    4182ee <__ctype_b_loc@plt+0x1601e>
  417f61:	lea    rsi,[rbx+0x18]
  417f65:	mov    rdi,rbx
  417f68:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  417f6d:	mov    DWORD PTR [rbx+0x10],eax
  417f70:	mov    ecx,DWORD PTR [rbx+0x4]
  417f73:	jmp    418302 <__ctype_b_loc@plt+0x16032>
  417f78:	mov    QWORD PTR [r15+0x10],0xffffffffffffffff
  417f80:	mov    DWORD PTR [r15],0x1
  417f87:	jmp    417f98 <__ctype_b_loc@plt+0x15cc8>
  417f89:	mov    QWORD PTR [r15+0x10],0xffffffffffffffff
  417f91:	mov    DWORD PTR [r15],0x2
  417f98:	mov    DWORD PTR [r15+0x8],0x0
  417fa0:	mov    rbx,QWORD PTR [rsp+0x8]
  417fa5:	jmp    41806b <__ctype_b_loc@plt+0x15d9b>
  417faa:	mov    rdi,QWORD PTR [rsp+0x8]
  417faf:	mov    rbx,QWORD PTR [rdi+0x30]
  417fb3:	mov    rax,QWORD PTR [rbx]
  417fb6:	mov    cl,BYTE PTR [rax+0x72]
  417fb9:	test   cl,cl
  417fbb:	jne    417fd4 <__ctype_b_loc@plt+0x15d04>
  417fbd:	lea    rsi,[rip+0x1337d]        # 42b341 <__ctype_b_loc@plt+0x29071>
  417fc4:	mov    edx,0x117
  417fc9:	call   413af0 <__ctype_b_loc@plt+0x11820>
  417fce:	mov    rax,QWORD PTR [rbx]
  417fd1:	mov    cl,BYTE PTR [rax+0x72]
  417fd4:	add    rax,0x72
  417fd8:	and    cl,0xfb
  417fdb:	mov    BYTE PTR [rax],cl
  417fdd:	mov    rax,QWORD PTR [rbx+0x18]
  417fe1:	mov    edx,DWORD PTR [rax+0x8]
  417fe4:	mov    esi,0x800025
  417fe9:	mov    rdi,rbx
  417fec:	call   419630 <__ctype_b_loc@plt+0x17360>
  417ff1:	mov    QWORD PTR [r15+0x10],0xffffffffffffffff
  417ff9:	mov    DWORD PTR [r15],0xe
  418000:	mov    DWORD PTR [r15+0x8],eax
  418004:	mov    rbx,QWORD PTR [rsp+0x8]
  418009:	jmp    41806b <__ctype_b_loc@plt+0x15d9b>
  41800b:	mov    QWORD PTR [r15+0x10],0xffffffffffffffff
  418013:	mov    DWORD PTR [r15],0x5
  41801a:	mov    DWORD PTR [r15+0x8],0x0
  418022:	mov    rbx,QWORD PTR [rsp+0x8]
  418027:	mov    rax,QWORD PTR [rbx+0x18]
  41802b:	mov    QWORD PTR [r15+0x8],rax
  41802f:	jmp    41806b <__ctype_b_loc@plt+0x15d9b>
  418031:	mov    rbx,QWORD PTR [rsp+0x8]
  418036:	mov    rax,QWORD PTR [rbx+0x18]
  41803a:	mov    rdi,QWORD PTR [rbx+0x30]
  41803e:	mov    QWORD PTR [rsp+0x10],rax
  418043:	mov    DWORD PTR [rsp+0x18],0x4
  41804b:	lea    rsi,[rsp+0x10]
  418050:	mov    rdx,rsi
  418053:	call   419b00 <__ctype_b_loc@plt+0x17830>
  418058:	mov    QWORD PTR [r15+0x10],0xffffffffffffffff
  418060:	mov    DWORD PTR [r15],0x4
  418067:	mov    DWORD PTR [r15+0x8],eax
  41806b:	mov    eax,DWORD PTR [rbx+0x4]
  41806e:	mov    ecx,DWORD PTR [rbx+0x20]
  418071:	mov    DWORD PTR [rbx+0x8],eax
  418074:	cmp    ecx,0x11f
  41807a:	jne    418090 <__ctype_b_loc@plt+0x15dc0>
  41807c:	lea    rsi,[rbx+0x18]
  418080:	mov    rdi,rbx
  418083:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  418088:	mov    DWORD PTR [rbx+0x10],eax
  41808b:	jmp    4185cc <__ctype_b_loc@plt+0x162fc>
  418090:	lea    rax,[rbx+0x20]
  418094:	vmovups xmm0,XMMWORD PTR [rax]
  418098:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41809d:	mov    DWORD PTR [rbx+0x20],0x11f
  4180a4:	jmp    4185c9 <__ctype_b_loc@plt+0x162f9>
  4180a9:	mov    bl,0x2
  4180ab:	jmp    4180af <__ctype_b_loc@plt+0x15ddf>
  4180ad:	xor    ebx,ebx
  4180af:	mov    rbp,QWORD PTR [rsp+0x8]
  4180b4:	mov    eax,DWORD PTR [rbp+0x4]
  4180b7:	mov    ecx,DWORD PTR [rbp+0x20]
  4180ba:	mov    DWORD PTR [rbp+0x8],eax
  4180bd:	cmp    ecx,0x11f
  4180c3:	jne    4180d6 <__ctype_b_loc@plt+0x15e06>
  4180c5:	lea    rsi,[rbp+0x18]
  4180c9:	mov    rdi,rbp
  4180cc:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  4180d1:	mov    DWORD PTR [rbp+0x10],eax
  4180d4:	jmp    4180ea <__ctype_b_loc@plt+0x15e1a>
  4180d6:	lea    rax,[rbp+0x20]
  4180da:	vmovups xmm0,XMMWORD PTR [rax]
  4180de:	vmovups XMMWORD PTR [rbp+0x10],xmm0
  4180e3:	mov    DWORD PTR [rbp+0x20],0x11f
  4180ea:	mov    edx,0x8
  4180ef:	mov    rdi,rbp
  4180f2:	mov    rsi,r15
  4180f5:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  4180fa:	mov    r15,QWORD PTR [rbp+0x30]
  4180fe:	mov    QWORD PTR [rsp+0x20],0xffffffffffffffff
  418107:	mov    DWORD PTR [rsp+0x10],0x5
  41810f:	mov    QWORD PTR [rsp+0x18],0x0
  418118:	cmp    bl,0x2
  41811b:	je     418253 <__ctype_b_loc@plt+0x15f83>
  418121:	cmp    bl,0x1
  418124:	je     418208 <__ctype_b_loc@plt+0x15f38>
  41812a:	test   bl,bl
  41812c:	mov    rbx,QWORD PTR [rsp+0x8]
  418131:	jne    4185c5 <__ctype_b_loc@plt+0x162f5>
  418137:	mov    rbp,QWORD PTR [rsp]
  41813b:	cmp    DWORD PTR [rbp+0x0],0x5
  41813f:	jne    418151 <__ctype_b_loc@plt+0x15e81>
  418141:	cmp    DWORD PTR [rbp+0x10],0xffffffff
  418145:	jne    418151 <__ctype_b_loc@plt+0x15e81>
  418147:	cmp    DWORD PTR [rbp+0x14],0xffffffff
  41814b:	je     41838b <__ctype_b_loc@plt+0x160bb>
  418151:	mov    rdi,r15
  418154:	mov    rsi,rbp
  418157:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41815c:	cmp    DWORD PTR [rbp+0x0],0xc
  418160:	jne    41817e <__ctype_b_loc@plt+0x15eae>
  418162:	mov    eax,DWORD PTR [rbp+0x10]
  418165:	cmp    eax,DWORD PTR [rbp+0x14]
  418168:	je     41838b <__ctype_b_loc@plt+0x160bb>
  41816e:	mov    edx,DWORD PTR [rbp+0x8]
  418171:	movzx  eax,BYTE PTR [r15+0x4a]
  418176:	cmp    edx,eax
  418178:	jge    4183ad <__ctype_b_loc@plt+0x160dd>
  41817e:	mov    rdi,r15
  418181:	mov    rsi,rbp
  418184:	call   419010 <__ctype_b_loc@plt+0x16d40>
  418189:	cmp    DWORD PTR [rbp+0x0],0xc
  41818d:	jne    4181ab <__ctype_b_loc@plt+0x15edb>
  41818f:	mov    rax,QWORD PTR [rsp]
  418193:	mov    eax,DWORD PTR [rax+0x8]
  418196:	test   eax,0x100
  41819b:	jne    4181ab <__ctype_b_loc@plt+0x15edb>
  41819d:	movzx  ecx,BYTE PTR [r15+0x4a]
  4181a2:	cmp    eax,ecx
  4181a4:	jl     4181ab <__ctype_b_loc@plt+0x15edb>
  4181a6:	add    DWORD PTR [r15+0x3c],0xffffffff
  4181ab:	mov    ecx,DWORD PTR [r15+0x3c]
  4181af:	lea    ebx,[rcx+0x1]
  4181b2:	mov    rax,QWORD PTR [r15]
  4181b5:	movzx  edx,BYTE PTR [rax+0x73]
  4181b9:	cmp    ecx,edx
  4181bb:	jl     41836e <__ctype_b_loc@plt+0x1609e>
  4181c1:	cmp    ecx,0xf9
  4181c7:	jl     418364 <__ctype_b_loc@plt+0x16094>
  4181cd:	mov    rdi,QWORD PTR [r15+0x18]
  4181d1:	mov    edx,DWORD PTR [rdi+0x10]
  4181d4:	lea    rsi,[rip+0x13143]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  4181db:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4181e0:	mov    rax,QWORD PTR [r15]
  4181e3:	add    rax,0x73
  4181e7:	mov    ecx,DWORD PTR [r15+0x3c]
  4181eb:	add    ecx,0x1
  4181ee:	jmp    41836a <__ctype_b_loc@plt+0x1609a>
  4181f3:	mov    rbx,QWORD PTR [rsp+0x8]
  4181f8:	mov    rdi,rbx
  4181fb:	mov    rsi,r15
  4181fe:	call   41b1e0 <__ctype_b_loc@plt+0x18f10>
  418203:	jmp    4185c9 <__ctype_b_loc@plt+0x162f9>
  418208:	movabs rbp,0x20f800000
  418212:	mov    rdi,r15
  418215:	mov    rbx,QWORD PTR [rsp]
  418219:	mov    rsi,rbx
  41821c:	call   419010 <__ctype_b_loc@plt+0x16d40>
  418221:	mov    eax,DWORD PTR [rbx]
  418223:	add    eax,0xffffffff
  418226:	cmp    eax,0xb
  418229:	mov    rbx,QWORD PTR [rsp+0x8]
  41822e:	ja     4184b7 <__ctype_b_loc@plt+0x161e7>
  418234:	lea    rcx,[rip+0x1237d]        # 42a5b8 <__ctype_b_loc@plt+0x282e8>
  41823b:	movsxd rax,DWORD PTR [rcx+rax*4]
  41823f:	add    rax,rcx
  418242:	jmp    rax
  418244:	mov    rax,QWORD PTR [rsp]
  418248:	mov    DWORD PTR [rax],0x3
  41824e:	jmp    4184b7 <__ctype_b_loc@plt+0x161e7>
  418253:	mov    rdi,r15
  418256:	mov    rbp,QWORD PTR [rsp]
  41825a:	mov    rsi,rbp
  41825d:	call   419010 <__ctype_b_loc@plt+0x16d40>
  418262:	cmp    DWORD PTR [rbp+0x0],0xc
  418266:	jne    418284 <__ctype_b_loc@plt+0x15fb4>
  418268:	mov    eax,DWORD PTR [rbp+0x10]
  41826b:	cmp    eax,DWORD PTR [rbp+0x14]
  41826e:	je     418345 <__ctype_b_loc@plt+0x16075>
  418274:	mov    edx,DWORD PTR [rbp+0x8]
  418277:	movzx  eax,BYTE PTR [r15+0x4a]
  41827c:	cmp    edx,eax
  41827e:	jge    4183a5 <__ctype_b_loc@plt+0x160d5>
  418284:	mov    rdi,r15
  418287:	mov    rsi,rbp
  41828a:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41828f:	cmp    DWORD PTR [rbp+0x0],0xc
  418293:	jne    4182b1 <__ctype_b_loc@plt+0x15fe1>
  418295:	mov    rax,QWORD PTR [rsp]
  418299:	mov    eax,DWORD PTR [rax+0x8]
  41829c:	test   eax,0x100
  4182a1:	jne    4182b1 <__ctype_b_loc@plt+0x15fe1>
  4182a3:	movzx  ecx,BYTE PTR [r15+0x4a]
  4182a8:	cmp    eax,ecx
  4182aa:	jl     4182b1 <__ctype_b_loc@plt+0x15fe1>
  4182ac:	add    DWORD PTR [r15+0x3c],0xffffffff
  4182b1:	mov    ecx,DWORD PTR [r15+0x3c]
  4182b5:	lea    ebx,[rcx+0x1]
  4182b8:	mov    rax,QWORD PTR [r15]
  4182bb:	movzx  edx,BYTE PTR [rax+0x73]
  4182bf:	cmp    ecx,edx
  4182c1:	jl     41832d <__ctype_b_loc@plt+0x1605d>
  4182c3:	cmp    ecx,0xf9
  4182c9:	jl     418323 <__ctype_b_loc@plt+0x16053>
  4182cb:	mov    rdi,QWORD PTR [r15+0x18]
  4182cf:	mov    edx,DWORD PTR [rdi+0x10]
  4182d2:	lea    rsi,[rip+0x13045]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  4182d9:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4182de:	mov    rax,QWORD PTR [r15]
  4182e1:	add    rax,0x73
  4182e5:	mov    ecx,DWORD PTR [r15+0x3c]
  4182e9:	add    ecx,0x1
  4182ec:	jmp    418329 <__ctype_b_loc@plt+0x16059>
  4182ee:	lea    rax,[rbx+0x20]
  4182f2:	vmovups xmm0,XMMWORD PTR [rax]
  4182f6:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  4182fb:	mov    DWORD PTR [rbx+0x20],0x11f
  418302:	xor    edx,edx
  418304:	mov    rdi,rbx
  418307:	mov    rsi,r15
  41830a:	call   41a8c0 <__ctype_b_loc@plt+0x185f0>
  41830f:	jmp    4185c9 <__ctype_b_loc@plt+0x162f9>
  418314:	mov    rax,QWORD PTR [rsp]
  418318:	mov    DWORD PTR [rax],0x2
  41831e:	jmp    4184b7 <__ctype_b_loc@plt+0x161e7>
  418323:	add    rax,0x73
  418327:	mov    ecx,ebx
  418329:	mov    BYTE PTR [rax],bl
  41832b:	mov    ebx,ecx
  41832d:	mov    DWORD PTR [r15+0x3c],ebx
  418331:	add    ebx,0xffffffff
  418334:	mov    rdi,r15
  418337:	mov    rbp,QWORD PTR [rsp]
  41833b:	mov    rsi,rbp
  41833e:	mov    edx,ebx
  418340:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  418345:	lea    rcx,[rsp+0x10]
  41834a:	mov    esi,0x14
  41834f:	mov    rdi,r15
  418352:	mov    rdx,rbp
  418355:	call   418e20 <__ctype_b_loc@plt+0x16b50>
  41835a:	mov    rbx,QWORD PTR [rsp+0x8]
  41835f:	jmp    4185c5 <__ctype_b_loc@plt+0x162f5>
  418364:	add    rax,0x73
  418368:	mov    ecx,ebx
  41836a:	mov    BYTE PTR [rax],bl
  41836c:	mov    ebx,ecx
  41836e:	mov    DWORD PTR [r15+0x3c],ebx
  418372:	add    ebx,0xffffffff
  418375:	mov    rdi,r15
  418378:	mov    rbp,QWORD PTR [rsp]
  41837c:	mov    rsi,rbp
  41837f:	mov    edx,ebx
  418381:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  418386:	mov    rbx,QWORD PTR [rsp+0x8]
  41838b:	lea    rcx,[rsp+0x10]
  418390:	mov    esi,0x12
  418395:	mov    rdi,r15
  418398:	mov    rdx,rbp
  41839b:	call   418e20 <__ctype_b_loc@plt+0x16b50>
  4183a0:	jmp    4185c5 <__ctype_b_loc@plt+0x162f5>
  4183a5:	mov    rdi,r15
  4183a8:	mov    rsi,rbp
  4183ab:	jmp    418340 <__ctype_b_loc@plt+0x16070>
  4183ad:	mov    rdi,r15
  4183b0:	mov    rsi,rbp
  4183b3:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  4183b8:	jmp    41838b <__ctype_b_loc@plt+0x160bb>
  4183ba:	mov    rax,QWORD PTR [rsp]
  4183be:	movsxd rcx,DWORD PTR [rax+0x8]
  4183c2:	mov    rdx,QWORD PTR [r15]
  4183c5:	lea    rax,[rcx*4+0x0]
  4183cd:	add    rax,QWORD PTR [rdx+0x18]
  4183d1:	test   rcx,rcx
  4183d4:	jle    4183df <__ctype_b_loc@plt+0x1610f>
  4183d6:	mov    ecx,DWORD PTR [rax-0x4]
  4183d9:	bt     rbp,rcx
  4183dd:	jb     418421 <__ctype_b_loc@plt+0x16151>
  4183df:	mov    ecx,DWORD PTR [rax]
  4183e1:	jmp    418425 <__ctype_b_loc@plt+0x16155>
  4183e3:	mov    ecx,DWORD PTR [r15+0x3c]
  4183e7:	lea    r14d,[rcx+0x1]
  4183eb:	mov    rax,QWORD PTR [r15]
  4183ee:	movzx  edx,BYTE PTR [rax+0x73]
  4183f2:	cmp    ecx,edx
  4183f4:	jl     41844f <__ctype_b_loc@plt+0x1617f>
  4183f6:	cmp    ecx,0xf9
  4183fc:	jl     418442 <__ctype_b_loc@plt+0x16172>
  4183fe:	mov    rdi,QWORD PTR [r15+0x18]
  418402:	mov    edx,DWORD PTR [rdi+0x10]
  418405:	lea    rsi,[rip+0x12f12]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41840c:	call   413af0 <__ctype_b_loc@plt+0x11820>
  418411:	mov    rax,QWORD PTR [r15]
  418414:	add    rax,0x73
  418418:	mov    ecx,DWORD PTR [r15+0x3c]
  41841c:	add    ecx,0x1
  41841f:	jmp    418449 <__ctype_b_loc@plt+0x16179>
  418421:	add    rax,0xfffffffffffffffc
  418425:	mov    edx,ecx
  418427:	and    edx,0xffffc03f
  41842d:	xor    esi,esi
  41842f:	test   ecx,0x3fc0
  418435:	sete   sil
  418439:	shl    esi,0x6
  41843c:	or     esi,edx
  41843e:	mov    DWORD PTR [rax],esi
  418440:	jmp    4184b7 <__ctype_b_loc@plt+0x161e7>
  418442:	add    rax,0x73
  418446:	mov    ecx,r14d
  418449:	mov    BYTE PTR [rax],r14b
  41844c:	mov    r14d,ecx
  41844f:	mov    DWORD PTR [r15+0x3c],r14d
  418453:	add    r14d,0xffffffff
  418457:	mov    rdi,r15
  41845a:	mov    rbx,QWORD PTR [rsp]
  41845e:	mov    rsi,rbx
  418461:	mov    edx,r14d
  418464:	call   419980 <__ctype_b_loc@plt+0x176b0>
  418469:	cmp    DWORD PTR [rbx],0xc
  41846c:	mov    rbx,QWORD PTR [rsp+0x8]
  418471:	jne    41848f <__ctype_b_loc@plt+0x161bf>
  418473:	mov    rax,QWORD PTR [rsp]
  418477:	mov    eax,DWORD PTR [rax+0x8]
  41847a:	test   eax,0x100
  41847f:	jne    41848f <__ctype_b_loc@plt+0x161bf>
  418481:	movzx  ecx,BYTE PTR [r15+0x4a]
  418486:	cmp    eax,ecx
  418488:	jl     41848f <__ctype_b_loc@plt+0x161bf>
  41848a:	add    DWORD PTR [r15+0x3c],0xffffffff
  41848f:	mov    r14,QWORD PTR [rsp]
  418493:	mov    esi,DWORD PTR [r14+0x8]
  418497:	shl    esi,0x17
  41849a:	or     esi,0x13
  41849d:	mov    rax,QWORD PTR [r15+0x18]
  4184a1:	mov    edx,DWORD PTR [rax+0x8]
  4184a4:	mov    rdi,r15
  4184a7:	call   419630 <__ctype_b_loc@plt+0x17360>
  4184ac:	mov    DWORD PTR [r14+0x8],eax
  4184b0:	mov    DWORD PTR [r14],0xb
  4184b7:	mov    rdx,QWORD PTR [rsp]
  4184bb:	mov    ecx,DWORD PTR [rdx+0x10]
  4184be:	mov    eax,DWORD PTR [rdx+0x14]
  4184c1:	mov    DWORD PTR [rdx+0x14],ecx
  4184c4:	mov    DWORD PTR [rdx+0x10],eax
  4184c7:	cmp    ecx,0xffffffff
  4184ca:	je     41854c <__ctype_b_loc@plt+0x1627c>
  4184d0:	mov    rax,QWORD PTR [r15]
  4184d3:	mov    rax,QWORD PTR [rax+0x18]
  4184d7:	nop    WORD PTR [rax+rax*1+0x0]
  4184e0:	movsxd rsi,ecx
  4184e3:	lea    rdx,[rax+rsi*4]
  4184e7:	test   esi,esi
  4184e9:	jle    4184f4 <__ctype_b_loc@plt+0x16224>
  4184eb:	mov    esi,DWORD PTR [rdx-0x4]
  4184ee:	bt     rbp,rsi
  4184f2:	jb     418500 <__ctype_b_loc@plt+0x16230>
  4184f4:	mov    esi,DWORD PTR [rdx]
  4184f6:	mov    rdi,rdx
  4184f9:	jmp    418504 <__ctype_b_loc@plt+0x16234>
  4184fb:	nop    DWORD PTR [rax+rax*1+0x0]
  418500:	lea    rdi,[rdx-0x4]
  418504:	mov    ebx,esi
  418506:	and    ebx,0x3f
  418509:	cmp    ebx,0x1b
  41850c:	jne    418523 <__ctype_b_loc@plt+0x16253>
  41850e:	mov    ebx,esi
  418510:	shr    ebx,0x11
  418513:	and    ebx,0xffffffc0
  418516:	and    esi,0x7fc000
  41851c:	or     esi,ebx
  41851e:	or     esi,0x1a
  418521:	mov    DWORD PTR [rdi],esi
  418523:	mov    edx,DWORD PTR [rdx]
  418525:	shr    edx,0xe
  418528:	lea    esi,[rdx-0x1ffff]
  41852e:	cmp    esi,0xffffffff
  418531:	lea    ecx,[rcx+rdx*1-0x1fffe]
  418538:	cmove  ecx,esi
  41853b:	cmp    ecx,0xffffffff
  41853e:	mov    rbx,QWORD PTR [rsp+0x8]
  418543:	jne    4184e0 <__ctype_b_loc@plt+0x16210>
  418545:	mov    rax,QWORD PTR [rsp]
  418549:	mov    eax,DWORD PTR [rax+0x10]
  41854c:	cmp    eax,0xffffffff
  41854f:	je     4185c5 <__ctype_b_loc@plt+0x162f5>
  418551:	mov    rcx,QWORD PTR [r15]
  418554:	mov    rcx,QWORD PTR [rcx+0x18]
  418558:	nop    DWORD PTR [rax+rax*1+0x0]
  418560:	movsxd rsi,eax
  418563:	lea    rdx,[rcx+rsi*4]
  418567:	test   esi,esi
  418569:	jle    418574 <__ctype_b_loc@plt+0x162a4>
  41856b:	mov    esi,DWORD PTR [rdx-0x4]
  41856e:	bt     rbp,rsi
  418572:	jb     418580 <__ctype_b_loc@plt+0x162b0>
  418574:	mov    esi,DWORD PTR [rdx]
  418576:	mov    rdi,rdx
  418579:	jmp    418584 <__ctype_b_loc@plt+0x162b4>
  41857b:	nop    DWORD PTR [rax+rax*1+0x0]
  418580:	lea    rdi,[rdx-0x4]
  418584:	mov    ebx,esi
  418586:	and    ebx,0x3f
  418589:	cmp    ebx,0x1b
  41858c:	jne    4185a3 <__ctype_b_loc@plt+0x162d3>
  41858e:	mov    ebx,esi
  418590:	shr    ebx,0x11
  418593:	and    ebx,0xffffffc0
  418596:	and    esi,0x7fc000
  41859c:	or     esi,ebx
  41859e:	or     esi,0x1a
  4185a1:	mov    DWORD PTR [rdi],esi
  4185a3:	mov    edx,DWORD PTR [rdx]
  4185a5:	shr    edx,0xe
  4185a8:	lea    esi,[rdx-0x1ffff]
  4185ae:	cmp    esi,0xffffffff
  4185b1:	lea    eax,[rax+rdx*1-0x1fffe]
  4185b8:	cmove  eax,esi
  4185bb:	cmp    eax,0xffffffff
  4185be:	mov    rbx,QWORD PTR [rsp+0x8]
  4185c3:	jne    418560 <__ctype_b_loc@plt+0x16290>
  4185c5:	mov    r15,QWORD PTR [rsp]
  4185c9:	mov    eax,DWORD PTR [rbx+0x10]
  4185cc:	mov    ebp,0xf
  4185d1:	lea    ecx,[rax-0x25]
  4185d4:	cmp    ecx,0x39
  4185d7:	ja     4185f2 <__ctype_b_loc@plt+0x16322>
  4185d9:	xor    eax,eax
  4185db:	lea    rdx,[rip+0x12006]        # 42a5e8 <__ctype_b_loc@plt+0x28318>
  4185e2:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4185e6:	add    rcx,rdx
  4185e9:	jmp    rcx
  4185eb:	mov    eax,0x4
  4185f0:	jmp    418669 <__ctype_b_loc@plt+0x16399>
  4185f2:	add    eax,0xfffffeff
  4185f7:	cmp    eax,0x1a
  4185fa:	ja     418dfc <__ctype_b_loc@plt+0x16b2c>
  418600:	lea    rcx,[rip+0x120c9]        # 42a6d0 <__ctype_b_loc@plt+0x28400>
  418607:	movsxd rax,DWORD PTR [rcx+rax*4]
  41860b:	add    rax,rcx
  41860e:	jmp    rax
  418610:	mov    eax,0xd
  418615:	jmp    418669 <__ctype_b_loc@plt+0x16399>
  418617:	mov    eax,0x2
  41861c:	jmp    418669 <__ctype_b_loc@plt+0x16399>
  41861e:	mov    eax,0x1
  418623:	jmp    418669 <__ctype_b_loc@plt+0x16399>
  418625:	mov    eax,0x3
  41862a:	jmp    418669 <__ctype_b_loc@plt+0x16399>
  41862c:	mov    eax,0x9
  418631:	jmp    418669 <__ctype_b_loc@plt+0x16399>
  418633:	mov    eax,0xb
  418638:	jmp    418669 <__ctype_b_loc@plt+0x16399>
  41863a:	mov    eax,0x5
  41863f:	jmp    418669 <__ctype_b_loc@plt+0x16399>
  418641:	mov    eax,0xe
  418646:	jmp    418669 <__ctype_b_loc@plt+0x16399>
  418648:	mov    eax,0x6
  41864d:	jmp    418669 <__ctype_b_loc@plt+0x16399>
  41864f:	mov    eax,0x8
  418654:	jmp    418669 <__ctype_b_loc@plt+0x16399>
  418656:	mov    eax,0xc
  41865b:	jmp    418669 <__ctype_b_loc@plt+0x16399>
  41865d:	mov    eax,0xa
  418662:	jmp    418669 <__ctype_b_loc@plt+0x16399>
  418664:	mov    eax,0x7
  418669:	lea    rcx,[rbx+0x20]
  41866d:	mov    QWORD PTR [rsp+0x40],rcx
  418672:	lea    rcx,[rbx+0x18]
  418676:	mov    QWORD PTR [rsp+0x38],rcx
  41867b:	lea    rcx,[rbx+0x10]
  41867f:	mov    QWORD PTR [rsp+0x30],rcx
  418684:	lea    r12,[rip+0x125c5]        # 42ac50 <__ctype_b_loc@plt+0x28980>
  41868b:	mov    ebp,eax
  41868d:	nop    DWORD PTR [rax]
  418690:	mov    r14d,ebp
  418693:	movzx  eax,BYTE PTR [r12+r14*2]
  418698:	cmp    eax,DWORD PTR [rsp+0x2c]
  41869c:	jbe    418dfc <__ctype_b_loc@plt+0x16b2c>
  4186a2:	mov    eax,DWORD PTR [rbx+0x4]
  4186a5:	mov    ecx,DWORD PTR [rbx+0x20]
  4186a8:	mov    DWORD PTR [rbx+0x8],eax
  4186ab:	cmp    ecx,0x11f
  4186b1:	jne    4186d0 <__ctype_b_loc@plt+0x16400>
  4186b3:	mov    rdi,rbx
  4186b6:	mov    rsi,QWORD PTR [rsp+0x38]
  4186bb:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  4186c0:	mov    DWORD PTR [rbx+0x10],eax
  4186c3:	jmp    4186e8 <__ctype_b_loc@plt+0x16418>
  4186c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4186cf:	nop
  4186d0:	mov    rax,QWORD PTR [rsp+0x40]
  4186d5:	vmovups xmm0,XMMWORD PTR [rax]
  4186d9:	mov    rcx,QWORD PTR [rsp+0x30]
  4186de:	vmovups XMMWORD PTR [rcx],xmm0
  4186e2:	mov    DWORD PTR [rax],0x11f
  4186e8:	mov    r12,QWORD PTR [rbx+0x30]
  4186ec:	cmp    ebp,0xe
  4186ef:	ja     418720 <__ctype_b_loc@plt+0x16450>
  4186f1:	lea    rax,[rip+0x12044]        # 42a73c <__ctype_b_loc@plt+0x2846c>
  4186f8:	mov    rcx,rax
  4186fb:	movsxd rax,DWORD PTR [rax+r14*4]
  4186ff:	add    rax,rcx
  418702:	jmp    rax
  418704:	cmp    DWORD PTR [r15],0x5
  418708:	jne    418720 <__ctype_b_loc@plt+0x16450>
  41870a:	cmp    DWORD PTR [r15+0x10],0xffffffff
  41870f:	jne    418720 <__ctype_b_loc@plt+0x16450>
  418711:	cmp    DWORD PTR [r15+0x14],0xffffffff
  418716:	je     41872b <__ctype_b_loc@plt+0x1645b>
  418718:	nop    DWORD PTR [rax+rax*1+0x0]
  418720:	mov    rdi,r12
  418723:	mov    rsi,r15
  418726:	call   419f50 <__ctype_b_loc@plt+0x17c80>
  41872b:	lea    r12,[rip+0x1251e]        # 42ac50 <__ctype_b_loc@plt+0x28980>
  418732:	movzx  edx,BYTE PTR [r12+r14*2+0x1]
  418738:	mov    rdi,rbx
  41873b:	lea    rsi,[rsp+0x10]
  418740:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  418745:	mov    r13d,eax
  418748:	cmp    ebp,0xe
  41874b:	ja     418d10 <__ctype_b_loc@plt+0x16a40>
  418751:	mov    r15,QWORD PTR [rbx+0x30]
  418755:	lea    rax,[rip+0x1201c]        # 42a778 <__ctype_b_loc@plt+0x284a8>
  41875c:	mov    rcx,rax
  41875f:	movsxd rax,DWORD PTR [rax+r14*4]
  418763:	add    rax,rcx
  418766:	jmp    rax
  418768:	mov    esi,0xc
  41876d:	jmp    4188e0 <__ctype_b_loc@plt+0x16610>
  418772:	mov    rdi,r12
  418775:	mov    rsi,r15
  418778:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41877d:	cmp    DWORD PTR [r15],0xc
  418781:	jne    41879e <__ctype_b_loc@plt+0x164ce>
  418783:	mov    eax,DWORD PTR [r15+0x8]
  418787:	test   eax,0x100
  41878c:	jne    41879e <__ctype_b_loc@plt+0x164ce>
  41878e:	movzx  ecx,BYTE PTR [r12+0x4a]
  418794:	cmp    eax,ecx
  418796:	jl     41879e <__ctype_b_loc@plt+0x164ce>
  418798:	add    DWORD PTR [r12+0x3c],0xffffffff
  41879e:	mov    ecx,DWORD PTR [r12+0x3c]
  4187a3:	lea    ebp,[rcx+0x1]
  4187a6:	mov    rax,QWORD PTR [r12]
  4187aa:	movzx  edx,BYTE PTR [rax+0x73]
  4187ae:	cmp    ecx,edx
  4187b0:	jl     418a08 <__ctype_b_loc@plt+0x16738>
  4187b6:	cmp    ecx,0xf9
  4187bc:	jl     4189fd <__ctype_b_loc@plt+0x1672d>
  4187c2:	mov    rdi,QWORD PTR [r12+0x18]
  4187c7:	mov    edx,DWORD PTR [rdi+0x10]
  4187ca:	lea    rsi,[rip+0x12b4d]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  4187d1:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4187d6:	mov    rax,QWORD PTR [r12]
  4187da:	add    rax,0x73
  4187de:	mov    ecx,DWORD PTR [r12+0x3c]
  4187e3:	add    ecx,0x1
  4187e6:	jmp    418a03 <__ctype_b_loc@plt+0x16733>
  4187eb:	mov    rdi,r12
  4187ee:	mov    rsi,r15
  4187f1:	call   417ca0 <__ctype_b_loc@plt+0x159d0>
  4187f6:	lea    r12,[rip+0x12453]        # 42ac50 <__ctype_b_loc@plt+0x28980>
  4187fd:	movzx  edx,BYTE PTR [r12+r14*2+0x1]
  418803:	mov    rdi,rbx
  418806:	lea    rsi,[rsp+0x10]
  41880b:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  418810:	mov    r13d,eax
  418813:	mov    r15,QWORD PTR [rbx+0x30]
  418817:	mov    rdi,r15
  41881a:	lea    rsi,[rsp+0x10]
  41881f:	call   419010 <__ctype_b_loc@plt+0x16d40>
  418824:	mov    rax,QWORD PTR [rsp]
  418828:	mov    r14d,DWORD PTR [rax+0x14]
  41882c:	cmp    r14d,0xffffffff
  418830:	je     418bac <__ctype_b_loc@plt+0x168dc>
  418836:	mov    edx,DWORD PTR [rsp+0x24]
  41883a:	cmp    edx,0xffffffff
  41883d:	je     4189f3 <__ctype_b_loc@plt+0x16723>
  418843:	mov    rax,QWORD PTR [r15]
  418846:	mov    rbp,QWORD PTR [rax+0x18]
  41884a:	nop    WORD PTR [rax+rax*1+0x0]
  418850:	mov    ecx,edx
  418852:	movsxd rbx,edx
  418855:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  418859:	mov    edx,eax
  41885b:	shr    edx,0xe
  41885e:	lea    esi,[rdx-0x1ffff]
  418864:	cmp    esi,0xffffffff
  418867:	lea    edx,[rcx+rdx*1-0x1fffe]
  41886e:	cmove  edx,esi
  418871:	cmp    edx,0xffffffff
  418874:	jne    418850 <__ctype_b_loc@plt+0x16580>
  418876:	jmp    4189a6 <__ctype_b_loc@plt+0x166d6>
  41887b:	mov    rdi,r12
  41887e:	mov    rsi,r15
  418881:	call   419010 <__ctype_b_loc@plt+0x16d40>
  418886:	mov    eax,DWORD PTR [r15]
  418889:	cmp    eax,0x1
  41888c:	je     418d26 <__ctype_b_loc@plt+0x16a56>
  418892:	cmp    eax,0x3
  418895:	je     418d26 <__ctype_b_loc@plt+0x16a56>
  41889b:	cmp    eax,0xa
  41889e:	jne    418af6 <__ctype_b_loc@plt+0x16826>
  4188a4:	mov    rax,QWORD PTR [rsp]
  4188a8:	mov    r15d,DWORD PTR [rax+0x8]
  4188ac:	cmp    r15d,0xffffffff
  4188b0:	jne    418b14 <__ctype_b_loc@plt+0x16844>
  4188b6:	jmp    418d26 <__ctype_b_loc@plt+0x16a56>
  4188bb:	mov    esi,0xd
  4188c0:	jmp    4188e0 <__ctype_b_loc@plt+0x16610>
  4188c2:	mov    esi,0xe
  4188c7:	jmp    4188e0 <__ctype_b_loc@plt+0x16610>
  4188c9:	mov    esi,0xf
  4188ce:	jmp    4188e0 <__ctype_b_loc@plt+0x16610>
  4188d0:	mov    esi,0x10
  4188d5:	jmp    4188e0 <__ctype_b_loc@plt+0x16610>
  4188d7:	mov    esi,0x11
  4188dc:	nop    DWORD PTR [rax+0x0]
  4188e0:	mov    rdi,r15
  4188e3:	mov    r15,QWORD PTR [rsp]
  4188e7:	mov    rdx,r15
  4188ea:	lea    rcx,[rsp+0x10]
  4188ef:	call   418e20 <__ctype_b_loc@plt+0x16b50>
  4188f4:	jmp    418d10 <__ctype_b_loc@plt+0x16a40>
  4188f9:	mov    esi,0x17
  4188fe:	jmp    418930 <__ctype_b_loc@plt+0x16660>
  418900:	mov    esi,0x17
  418905:	mov    edx,0x1
  41890a:	jmp    418932 <__ctype_b_loc@plt+0x16662>
  41890c:	mov    esi,0x18
  418911:	mov    edx,0x1
  418916:	jmp    418932 <__ctype_b_loc@plt+0x16662>
  418918:	mov    esi,0x19
  41891d:	mov    edx,0x1
  418922:	jmp    418932 <__ctype_b_loc@plt+0x16662>
  418924:	mov    esi,0x18
  418929:	jmp    418930 <__ctype_b_loc@plt+0x16660>
  41892b:	mov    esi,0x19
  418930:	xor    edx,edx
  418932:	mov    rdi,r15
  418935:	mov    r15,QWORD PTR [rsp]
  418939:	mov    rcx,r15
  41893c:	lea    r8,[rsp+0x10]
  418941:	call   41cb80 <__ctype_b_loc@plt+0x1a8b0>
  418946:	jmp    418d10 <__ctype_b_loc@plt+0x16a40>
  41894b:	mov    rdi,r15
  41894e:	lea    rsi,[rsp+0x10]
  418953:	call   419010 <__ctype_b_loc@plt+0x16d40>
  418958:	mov    rax,QWORD PTR [rsp]
  41895c:	mov    r14d,DWORD PTR [rax+0x10]
  418960:	cmp    r14d,0xffffffff
  418964:	je     418bac <__ctype_b_loc@plt+0x168dc>
  41896a:	mov    edx,DWORD PTR [rsp+0x20]
  41896e:	cmp    edx,0xffffffff
  418971:	je     418ba7 <__ctype_b_loc@plt+0x168d7>
  418977:	mov    rax,QWORD PTR [r15]
  41897a:	mov    rbp,QWORD PTR [rax+0x18]
  41897e:	xchg   ax,ax
  418980:	mov    ecx,edx
  418982:	movsxd rbx,edx
  418985:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  418989:	mov    edx,eax
  41898b:	shr    edx,0xe
  41898e:	lea    esi,[rdx-0x1ffff]
  418994:	cmp    esi,0xffffffff
  418997:	lea    edx,[rcx+rdx*1-0x1fffe]
  41899e:	cmove  edx,esi
  4189a1:	cmp    edx,0xffffffff
  4189a4:	jne    418980 <__ctype_b_loc@plt+0x166b0>
  4189a6:	not    ecx
  4189a8:	add    r14d,ecx
  4189ab:	mov    ecx,r14d
  4189ae:	neg    ecx
  4189b0:	cmovl  ecx,r14d
  4189b4:	cmp    ecx,0x20000
  4189ba:	jl     4189d3 <__ctype_b_loc@plt+0x16703>
  4189bc:	mov    rdi,QWORD PTR [r15+0x18]
  4189c0:	mov    edx,DWORD PTR [rdi+0x10]
  4189c3:	lea    rsi,[rip+0x12921]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  4189ca:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4189cf:	mov    eax,DWORD PTR [rbp+rbx*4+0x0]
  4189d3:	and    eax,0x3fff
  4189d8:	shl    r14d,0xe
  4189dc:	lea    eax,[rax+r14*1]
  4189e0:	add    eax,0x7fffc000
  4189e5:	mov    DWORD PTR [rbp+rbx*4+0x0],eax
  4189e9:	mov    rbx,QWORD PTR [rsp+0x8]
  4189ee:	jmp    418bac <__ctype_b_loc@plt+0x168dc>
  4189f3:	mov    DWORD PTR [rsp+0x24],r14d
  4189f8:	jmp    418bac <__ctype_b_loc@plt+0x168dc>
  4189fd:	add    rax,0x73
  418a01:	mov    ecx,ebp
  418a03:	mov    BYTE PTR [rax],bpl
  418a06:	mov    ebp,ecx
  418a08:	mov    DWORD PTR [r12+0x3c],ebp
  418a0d:	add    ebp,0xffffffff
  418a10:	mov    rdi,r12
  418a13:	mov    rsi,r15
  418a16:	mov    edx,ebp
  418a18:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  418a1d:	lea    r12,[rip+0x1222c]        # 42ac50 <__ctype_b_loc@plt+0x28980>
  418a24:	movzx  edx,BYTE PTR [r12+r14*2+0x1]
  418a2a:	mov    rdi,rbx
  418a2d:	lea    rsi,[rsp+0x10]
  418a32:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  418a37:	mov    r13d,eax
  418a3a:	mov    r15,QWORD PTR [rbx+0x30]
  418a3e:	mov    ebx,DWORD PTR [rsp+0x20]
  418a42:	mov    ebp,DWORD PTR [rsp+0x24]
  418a46:	mov    rdi,r15
  418a49:	lea    rsi,[rsp+0x10]
  418a4e:	call   419010 <__ctype_b_loc@plt+0x16d40>
  418a53:	cmp    ebx,ebp
  418a55:	je     418be9 <__ctype_b_loc@plt+0x16919>
  418a5b:	cmp    DWORD PTR [rsp+0x10],0xc
  418a60:	jne    418a81 <__ctype_b_loc@plt+0x167b1>
  418a62:	mov    eax,DWORD PTR [rsp+0x20]
  418a66:	cmp    eax,DWORD PTR [rsp+0x24]
  418a6a:	je     418be9 <__ctype_b_loc@plt+0x16919>
  418a70:	mov    edx,DWORD PTR [rsp+0x18]
  418a74:	movzx  eax,BYTE PTR [r15+0x4a]
  418a79:	cmp    edx,eax
  418a7b:	jge    418dea <__ctype_b_loc@plt+0x16b1a>
  418a81:	mov    rdi,r15
  418a84:	lea    rsi,[rsp+0x10]
  418a89:	call   419010 <__ctype_b_loc@plt+0x16d40>
  418a8e:	cmp    DWORD PTR [rsp+0x10],0xc
  418a93:	jne    418aae <__ctype_b_loc@plt+0x167de>
  418a95:	mov    eax,DWORD PTR [rsp+0x18]
  418a99:	test   eax,0x100
  418a9e:	jne    418aae <__ctype_b_loc@plt+0x167de>
  418aa0:	movzx  ecx,BYTE PTR [r15+0x4a]
  418aa5:	cmp    eax,ecx
  418aa7:	jl     418aae <__ctype_b_loc@plt+0x167de>
  418aa9:	add    DWORD PTR [r15+0x3c],0xffffffff
  418aae:	mov    ecx,DWORD PTR [r15+0x3c]
  418ab2:	lea    ebx,[rcx+0x1]
  418ab5:	mov    rax,QWORD PTR [r15]
  418ab8:	movzx  edx,BYTE PTR [rax+0x73]
  418abc:	cmp    ecx,edx
  418abe:	jl     418bd3 <__ctype_b_loc@plt+0x16903>
  418ac4:	cmp    ecx,0xf9
  418aca:	jl     418bc9 <__ctype_b_loc@plt+0x168f9>
  418ad0:	mov    rdi,QWORD PTR [r15+0x18]
  418ad4:	mov    edx,DWORD PTR [rdi+0x10]
  418ad7:	lea    rsi,[rip+0x12840]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  418ade:	call   413af0 <__ctype_b_loc@plt+0x11820>
  418ae3:	mov    rax,QWORD PTR [r15]
  418ae6:	add    rax,0x73
  418aea:	mov    ecx,DWORD PTR [r15+0x3c]
  418aee:	add    ecx,0x1
  418af1:	jmp    418bcf <__ctype_b_loc@plt+0x168ff>
  418af6:	mov    edx,0x1
  418afb:	mov    rdi,r12
  418afe:	mov    rsi,QWORD PTR [rsp]
  418b02:	call   41ca60 <__ctype_b_loc@plt+0x1a790>
  418b07:	mov    r15d,eax
  418b0a:	cmp    r15d,0xffffffff
  418b0e:	je     418d26 <__ctype_b_loc@plt+0x16a56>
  418b14:	mov    rax,QWORD PTR [rsp]
  418b18:	mov    edx,DWORD PTR [rax+0x10]
  418b1b:	cmp    edx,0xffffffff
  418b1e:	je     418d22 <__ctype_b_loc@plt+0x16a52>
  418b24:	mov    rax,QWORD PTR [r12]
  418b28:	mov    r13,QWORD PTR [rax+0x18]
  418b2c:	nop    DWORD PTR [rax+0x0]
  418b30:	mov    ecx,edx
  418b32:	movsxd rbx,edx
  418b35:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  418b3a:	mov    edx,eax
  418b3c:	shr    edx,0xe
  418b3f:	lea    esi,[rdx-0x1ffff]
  418b45:	cmp    esi,0xffffffff
  418b48:	lea    edx,[rcx+rdx*1-0x1fffe]
  418b4f:	cmove  edx,esi
  418b52:	cmp    edx,0xffffffff
  418b55:	jne    418b30 <__ctype_b_loc@plt+0x16860>
  418b57:	not    ecx
  418b59:	add    r15d,ecx
  418b5c:	mov    ecx,r15d
  418b5f:	neg    ecx
  418b61:	cmovl  ecx,r15d
  418b65:	cmp    ecx,0x20000
  418b6b:	jl     418b86 <__ctype_b_loc@plt+0x168b6>
  418b6d:	mov    rdi,QWORD PTR [r12+0x18]
  418b72:	mov    edx,DWORD PTR [rdi+0x10]
  418b75:	lea    rsi,[rip+0x1276f]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  418b7c:	call   413af0 <__ctype_b_loc@plt+0x11820>
  418b81:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  418b86:	and    eax,0x3fff
  418b8b:	shl    r15d,0xe
  418b8f:	lea    eax,[rax+r15*1]
  418b93:	add    eax,0x7fffc000
  418b98:	mov    DWORD PTR [r13+rbx*4+0x0],eax
  418b9d:	mov    rbx,QWORD PTR [rsp+0x8]
  418ba2:	jmp    418d26 <__ctype_b_loc@plt+0x16a56>
  418ba7:	mov    DWORD PTR [rsp+0x20],r14d
  418bac:	mov    rax,QWORD PTR [rsp+0x20]
  418bb1:	mov    r15,QWORD PTR [rsp]
  418bb5:	mov    QWORD PTR [r15+0x10],rax
  418bb9:	vmovups xmm0,XMMWORD PTR [rsp+0x10]
  418bbf:	vmovups XMMWORD PTR [r15],xmm0
  418bc4:	jmp    418d10 <__ctype_b_loc@plt+0x16a40>
  418bc9:	add    rax,0x73
  418bcd:	mov    ecx,ebx
  418bcf:	mov    BYTE PTR [rax],bl
  418bd1:	mov    ebx,ecx
  418bd3:	mov    DWORD PTR [r15+0x3c],ebx
  418bd7:	add    ebx,0xffffffff
  418bda:	mov    rdi,r15
  418bdd:	lea    rsi,[rsp+0x10]
  418be2:	mov    edx,ebx
  418be4:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  418be9:	cmp    DWORD PTR [rsp+0x10],0xb
  418bee:	jne    418c5d <__ctype_b_loc@plt+0x1698d>
  418bf0:	mov    rax,QWORD PTR [r15]
  418bf3:	mov    rax,QWORD PTR [rax+0x18]
  418bf7:	movsxd rcx,DWORD PTR [rsp+0x18]
  418bfc:	mov    edx,DWORD PTR [rax+rcx*4]
  418bff:	mov    esi,edx
  418c01:	and    esi,0x3f
  418c04:	cmp    esi,0x15
  418c07:	jne    418c5d <__ctype_b_loc@plt+0x1698d>
  418c09:	mov    rsi,QWORD PTR [rsp]
  418c0d:	cmp    DWORD PTR [rsi],0xc
  418c10:	mov    rbx,QWORD PTR [rsp+0x8]
  418c15:	jne    418c33 <__ctype_b_loc@plt+0x16963>
  418c17:	mov    esi,DWORD PTR [rsi+0x8]
  418c1a:	test   esi,0x100
  418c20:	jne    418c33 <__ctype_b_loc@plt+0x16963>
  418c22:	movzx  edi,BYTE PTR [r15+0x4a]
  418c27:	cmp    esi,edi
  418c29:	jl     418c33 <__ctype_b_loc@plt+0x16963>
  418c2b:	add    DWORD PTR [r15+0x3c],0xffffffff
  418c30:	mov    edx,DWORD PTR [rax+rcx*4]
  418c33:	and    edx,0x7fffff
  418c39:	mov    r15,QWORD PTR [rsp]
  418c3d:	mov    esi,DWORD PTR [r15+0x8]
  418c41:	shl    esi,0x17
  418c44:	or     esi,edx
  418c46:	mov    DWORD PTR [rax+rcx*4],esi
  418c49:	mov    DWORD PTR [r15],0xb
  418c50:	mov    eax,DWORD PTR [rsp+0x18]
  418c54:	mov    DWORD PTR [r15+0x8],eax
  418c58:	jmp    418d10 <__ctype_b_loc@plt+0x16a40>
  418c5d:	mov    rdi,r15
  418c60:	lea    rsi,[rsp+0x10]
  418c65:	call   419010 <__ctype_b_loc@plt+0x16d40>
  418c6a:	cmp    DWORD PTR [rsp+0x10],0xc
  418c6f:	jne    418c8a <__ctype_b_loc@plt+0x169ba>
  418c71:	mov    eax,DWORD PTR [rsp+0x18]
  418c75:	test   eax,0x100
  418c7a:	jne    418c8a <__ctype_b_loc@plt+0x169ba>
  418c7c:	movzx  ecx,BYTE PTR [r15+0x4a]
  418c81:	cmp    eax,ecx
  418c83:	jl     418c8a <__ctype_b_loc@plt+0x169ba>
  418c85:	add    DWORD PTR [r15+0x3c],0xffffffff
  418c8a:	mov    ecx,DWORD PTR [r15+0x3c]
  418c8e:	lea    ebx,[rcx+0x1]
  418c91:	mov    rax,QWORD PTR [r15]
  418c94:	movzx  edx,BYTE PTR [rax+0x73]
  418c98:	cmp    ecx,edx
  418c9a:	jl     418cd1 <__ctype_b_loc@plt+0x16a01>
  418c9c:	cmp    ecx,0xf9
  418ca2:	jl     418cc7 <__ctype_b_loc@plt+0x169f7>
  418ca4:	mov    rdi,QWORD PTR [r15+0x18]
  418ca8:	mov    edx,DWORD PTR [rdi+0x10]
  418cab:	lea    rsi,[rip+0x1266c]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  418cb2:	call   413af0 <__ctype_b_loc@plt+0x11820>
  418cb7:	mov    rax,QWORD PTR [r15]
  418cba:	add    rax,0x73
  418cbe:	mov    ecx,DWORD PTR [r15+0x3c]
  418cc2:	add    ecx,0x1
  418cc5:	jmp    418ccd <__ctype_b_loc@plt+0x169fd>
  418cc7:	add    rax,0x73
  418ccb:	mov    ecx,ebx
  418ccd:	mov    BYTE PTR [rax],bl
  418ccf:	mov    ebx,ecx
  418cd1:	mov    DWORD PTR [r15+0x3c],ebx
  418cd5:	add    ebx,0xffffffff
  418cd8:	mov    rdi,r15
  418cdb:	lea    rbp,[rsp+0x10]
  418ce0:	mov    rsi,rbp
  418ce3:	mov    edx,ebx
  418ce5:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  418cea:	mov    esi,0x15
  418cef:	mov    rdi,r15
  418cf2:	mov    r15,QWORD PTR [rsp]
  418cf6:	mov    rdx,r15
  418cf9:	mov    rcx,rbp
  418cfc:	call   418e20 <__ctype_b_loc@plt+0x16b50>
  418d01:	mov    rbx,QWORD PTR [rsp+0x8]
  418d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418d10:	mov    ebp,r13d
  418d13:	cmp    r13d,0xf
  418d17:	jne    418690 <__ctype_b_loc@plt+0x163c0>
  418d1d:	jmp    418df7 <__ctype_b_loc@plt+0x16b27>
  418d22:	mov    DWORD PTR [rax+0x10],r15d
  418d26:	mov    rax,QWORD PTR [rsp]
  418d2a:	mov    r15d,DWORD PTR [rax+0x14]
  418d2e:	mov    eax,DWORD PTR [r12+0x30]
  418d33:	mov    DWORD PTR [r12+0x34],eax
  418d38:	cmp    r15d,0xffffffff
  418d3c:	je     418dd9 <__ctype_b_loc@plt+0x16b09>
  418d42:	mov    edx,DWORD PTR [r12+0x38]
  418d47:	cmp    edx,0xffffffff
  418d4a:	je     418dd4 <__ctype_b_loc@plt+0x16b04>
  418d50:	mov    rax,QWORD PTR [r12]
  418d54:	mov    r13,QWORD PTR [rax+0x18]
  418d58:	nop    DWORD PTR [rax+rax*1+0x0]
  418d60:	mov    ecx,edx
  418d62:	movsxd rbx,edx
  418d65:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  418d6a:	mov    edx,eax
  418d6c:	shr    edx,0xe
  418d6f:	lea    esi,[rdx-0x1ffff]
  418d75:	cmp    esi,0xffffffff
  418d78:	lea    edx,[rcx+rdx*1-0x1fffe]
  418d7f:	cmove  edx,esi
  418d82:	cmp    edx,0xffffffff
  418d85:	jne    418d60 <__ctype_b_loc@plt+0x16a90>
  418d87:	not    ecx
  418d89:	add    r15d,ecx
  418d8c:	mov    ecx,r15d
  418d8f:	neg    ecx
  418d91:	cmovl  ecx,r15d
  418d95:	cmp    ecx,0x20000
  418d9b:	jl     418db6 <__ctype_b_loc@plt+0x16ae6>
  418d9d:	mov    rdi,QWORD PTR [r12+0x18]
  418da2:	mov    edx,DWORD PTR [rdi+0x10]
  418da5:	lea    rsi,[rip+0x1253f]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  418dac:	call   413af0 <__ctype_b_loc@plt+0x11820>
  418db1:	mov    eax,DWORD PTR [r13+rbx*4+0x0]
  418db6:	and    eax,0x3fff
  418dbb:	shl    r15d,0xe
  418dbf:	lea    eax,[rax+r15*1]
  418dc3:	add    eax,0x7fffc000
  418dc8:	mov    DWORD PTR [r13+rbx*4+0x0],eax
  418dcd:	mov    rbx,QWORD PTR [rsp+0x8]
  418dd2:	jmp    418dd9 <__ctype_b_loc@plt+0x16b09>
  418dd4:	mov    DWORD PTR [r12+0x38],r15d
  418dd9:	mov    r15,QWORD PTR [rsp]
  418ddd:	mov    DWORD PTR [r15+0x14],0xffffffff
  418de5:	jmp    41872b <__ctype_b_loc@plt+0x1645b>
  418dea:	mov    rdi,r15
  418ded:	lea    rsi,[rsp+0x10]
  418df2:	jmp    418be4 <__ctype_b_loc@plt+0x16914>
  418df7:	mov    ebp,0xf
  418dfc:	mov    rax,QWORD PTR [rbx+0x38]
  418e00:	add    WORD PTR [rax+0x60],0xffff
  418e05:	mov    eax,ebp
  418e07:	add    rsp,0x48
  418e0b:	pop    rbx
  418e0c:	pop    r12
  418e0e:	pop    r13
  418e10:	pop    r14
  418e12:	pop    r15
  418e14:	pop    rbp
  418e15:	ret    
  418e16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418e20:	push   rbp
  418e21:	push   r15
  418e23:	push   r14
  418e25:	push   r12
  418e27:	push   rbx
  418e28:	mov    r12,rcx
  418e2b:	mov    rbx,rdx
  418e2e:	mov    r15d,esi
  418e31:	mov    r14,rdi
  418e34:	cmp    DWORD PTR [rdx],0x5
  418e37:	jne    418e60 <__ctype_b_loc@plt+0x16b90>
  418e39:	cmp    DWORD PTR [rbx+0x10],0xffffffff
  418e3d:	jne    418e60 <__ctype_b_loc@plt+0x16b90>
  418e3f:	cmp    DWORD PTR [rbx+0x14],0xffffffff
  418e43:	jne    418e60 <__ctype_b_loc@plt+0x16b90>
  418e45:	cmp    DWORD PTR [r12],0x5
  418e4a:	jne    418e60 <__ctype_b_loc@plt+0x16b90>
  418e4c:	cmp    DWORD PTR [r12+0x10],0xffffffff
  418e52:	jne    418e60 <__ctype_b_loc@plt+0x16b90>
  418e54:	cmp    DWORD PTR [r12+0x14],0xffffffff
  418e5a:	je     418f2c <__ctype_b_loc@plt+0x16c5c>
  418e60:	xor    ebp,ebp
  418e62:	cmp    r15d,0x12
  418e66:	je     418e7b <__ctype_b_loc@plt+0x16bab>
  418e68:	cmp    r15d,0x14
  418e6c:	je     418e7b <__ctype_b_loc@plt+0x16bab>
  418e6e:	mov    rdi,r14
  418e71:	mov    rsi,r12
  418e74:	call   419f50 <__ctype_b_loc@plt+0x17c80>
  418e79:	mov    ebp,eax
  418e7b:	mov    rdi,r14
  418e7e:	mov    rsi,rbx
  418e81:	call   419f50 <__ctype_b_loc@plt+0x17c80>
  418e86:	cmp    eax,ebp
  418e88:	jle    418ebe <__ctype_b_loc@plt+0x16bee>
  418e8a:	cmp    DWORD PTR [rbx],0xc
  418e8d:	jne    418ea8 <__ctype_b_loc@plt+0x16bd8>
  418e8f:	mov    ecx,DWORD PTR [rbx+0x8]
  418e92:	test   ecx,0x100
  418e98:	jne    418ea8 <__ctype_b_loc@plt+0x16bd8>
  418e9a:	movzx  edx,BYTE PTR [r14+0x4a]
  418e9f:	cmp    ecx,edx
  418ea1:	jl     418ea8 <__ctype_b_loc@plt+0x16bd8>
  418ea3:	add    DWORD PTR [r14+0x3c],0xffffffff
  418ea8:	cmp    DWORD PTR [r12],0xc
  418ead:	jne    418efe <__ctype_b_loc@plt+0x16c2e>
  418eaf:	mov    ecx,DWORD PTR [r12+0x8]
  418eb4:	test   ecx,0x100
  418eba:	je     418ef0 <__ctype_b_loc@plt+0x16c20>
  418ebc:	jmp    418efe <__ctype_b_loc@plt+0x16c2e>
  418ebe:	cmp    DWORD PTR [r12],0xc
  418ec3:	jne    418ee0 <__ctype_b_loc@plt+0x16c10>
  418ec5:	mov    ecx,DWORD PTR [r12+0x8]
  418eca:	test   ecx,0x100
  418ed0:	jne    418ee0 <__ctype_b_loc@plt+0x16c10>
  418ed2:	movzx  edx,BYTE PTR [r14+0x4a]
  418ed7:	cmp    ecx,edx
  418ed9:	jl     418ee0 <__ctype_b_loc@plt+0x16c10>
  418edb:	add    DWORD PTR [r14+0x3c],0xffffffff
  418ee0:	cmp    DWORD PTR [rbx],0xc
  418ee3:	jne    418efe <__ctype_b_loc@plt+0x16c2e>
  418ee5:	mov    ecx,DWORD PTR [rbx+0x8]
  418ee8:	test   ecx,0x100
  418eee:	jne    418efe <__ctype_b_loc@plt+0x16c2e>
  418ef0:	movzx  edx,BYTE PTR [r14+0x4a]
  418ef5:	cmp    ecx,edx
  418ef7:	jl     418efe <__ctype_b_loc@plt+0x16c2e>
  418ef9:	add    DWORD PTR [r14+0x3c],0xffffffff
  418efe:	shl    eax,0x17
  418f01:	shl    ebp,0xe
  418f04:	or     ebp,r15d
  418f07:	or     ebp,eax
  418f09:	mov    rax,QWORD PTR [r14+0x18]
  418f0d:	mov    edx,DWORD PTR [rax+0x8]
  418f10:	mov    rdi,r14
  418f13:	mov    esi,ebp
  418f15:	call   419630 <__ctype_b_loc@plt+0x17360>
  418f1a:	mov    DWORD PTR [rbx+0x8],eax
  418f1d:	mov    DWORD PTR [rbx],0xb
  418f23:	pop    rbx
  418f24:	pop    r12
  418f26:	pop    r14
  418f28:	pop    r15
  418f2a:	pop    rbp
  418f2b:	ret    
  418f2c:	vxorpd xmm0,xmm0,xmm0
  418f30:	lea    eax,[r15-0xc]
  418f34:	cmp    eax,0x8
  418f37:	ja     419002 <__ctype_b_loc@plt+0x16d32>
  418f3d:	vmovsd xmm2,QWORD PTR [rbx+0x8]
  418f42:	vmovsd xmm1,QWORD PTR [r12+0x8]
  418f49:	xor    ebp,ebp
  418f4b:	lea    rcx,[rip+0x11862]        # 42a7b4 <__ctype_b_loc@plt+0x284e4>
  418f52:	movsxd rax,DWORD PTR [rcx+rax*4]
  418f56:	add    rax,rcx
  418f59:	jmp    rax
  418f5b:	vaddsd xmm0,xmm2,xmm1
  418f5f:	vucomisd xmm0,xmm0
  418f63:	jnp    419002 <__ctype_b_loc@plt+0x16d32>
  418f69:	jmp    418e60 <__ctype_b_loc@plt+0x16b90>
  418f6e:	vsubsd xmm0,xmm2,xmm1
  418f72:	vucomisd xmm0,xmm0
  418f76:	jnp    419002 <__ctype_b_loc@plt+0x16d32>
  418f7c:	jmp    418e60 <__ctype_b_loc@plt+0x16b90>
  418f81:	vmulsd xmm0,xmm2,xmm1
  418f85:	vucomisd xmm0,xmm0
  418f89:	jnp    419002 <__ctype_b_loc@plt+0x16d32>
  418f8b:	jmp    418e60 <__ctype_b_loc@plt+0x16b90>
  418f90:	vxorpd xmm0,xmm0,xmm0
  418f94:	vucomisd xmm1,xmm0
  418f98:	jne    418fa0 <__ctype_b_loc@plt+0x16cd0>
  418f9a:	jnp    418e6e <__ctype_b_loc@plt+0x16b9e>
  418fa0:	vdivsd xmm0,xmm2,xmm1
  418fa4:	vucomisd xmm0,xmm0
  418fa8:	jnp    419002 <__ctype_b_loc@plt+0x16d32>
  418faa:	jmp    418e60 <__ctype_b_loc@plt+0x16b90>
  418faf:	vxorpd xmm0,xmm0,xmm0
  418fb3:	vucomisd xmm1,xmm0
  418fb7:	jne    418fbf <__ctype_b_loc@plt+0x16cef>
  418fb9:	jnp    418e6e <__ctype_b_loc@plt+0x16b9e>
  418fbf:	vdivsd xmm0,xmm2,xmm1
  418fc3:	vroundsd xmm0,xmm0,xmm0,0x9
  418fc9:	vmulsd xmm0,xmm1,xmm0
  418fcd:	vsubsd xmm0,xmm2,xmm0
  418fd1:	vucomisd xmm0,xmm0
  418fd5:	jnp    419002 <__ctype_b_loc@plt+0x16d32>
  418fd7:	jmp    418e60 <__ctype_b_loc@plt+0x16b90>
  418fdc:	vmovapd xmm0,xmm2
  418fe0:	call   4020c0 <pow@plt>
  418fe5:	vucomisd xmm0,xmm0
  418fe9:	jnp    419002 <__ctype_b_loc@plt+0x16d32>
  418feb:	jmp    418e60 <__ctype_b_loc@plt+0x16b90>
  418ff0:	vxorpd xmm0,xmm2,XMMWORD PTR [rip+0x11c98]        # 42ac90 <__ctype_b_loc@plt+0x289c0>
  418ff8:	vucomisd xmm0,xmm0
  418ffc:	jp     418e60 <__ctype_b_loc@plt+0x16b90>
  419002:	vmovsd QWORD PTR [rbx+0x8],xmm0
  419007:	jmp    418f23 <__ctype_b_loc@plt+0x16c53>
  41900c:	nop    DWORD PTR [rax+0x0]
  419010:	push   rbx
  419011:	mov    eax,DWORD PTR [rsi]
  419013:	add    eax,0xfffffffa
  419016:	cmp    eax,0x8
  419019:	ja     4190c0 <__ctype_b_loc@plt+0x16df0>
  41901f:	mov    rbx,rsi
  419022:	lea    rcx,[rip+0x117af]        # 42a7d8 <__ctype_b_loc@plt+0x28508>
  419029:	movsxd rax,DWORD PTR [rcx+rax*4]
  41902d:	add    rax,rcx
  419030:	jmp    rax
  419032:	mov    DWORD PTR [rbx],0xc
  419038:	pop    rbx
  419039:	ret    
  41903a:	mov    esi,DWORD PTR [rbx+0x8]
  41903d:	shl    esi,0x17
  419040:	or     esi,0x4
  419043:	jmp    41908d <__ctype_b_loc@plt+0x16dbd>
  419045:	mov    esi,DWORD PTR [rbx+0x8]
  419048:	shl    esi,0xe
  41904b:	or     esi,0x5
  41904e:	jmp    41908d <__ctype_b_loc@plt+0x16dbd>
  419050:	mov    eax,DWORD PTR [rbx+0xc]
  419053:	test   eax,0x100
  419058:	jne    419066 <__ctype_b_loc@plt+0x16d96>
  41905a:	movzx  ecx,BYTE PTR [rdi+0x4a]
  41905e:	cmp    eax,ecx
  419060:	jl     419066 <__ctype_b_loc@plt+0x16d96>
  419062:	add    DWORD PTR [rdi+0x3c],0xffffffff
  419066:	mov    eax,DWORD PTR [rbx+0x8]
  419069:	test   eax,0x100
  41906e:	jne    41907f <__ctype_b_loc@plt+0x16daf>
  419070:	movzx  ecx,BYTE PTR [rdi+0x4a]
  419074:	cmp    eax,ecx
  419076:	jl     41907f <__ctype_b_loc@plt+0x16daf>
  419078:	add    DWORD PTR [rdi+0x3c],0xffffffff
  41907c:	mov    eax,DWORD PTR [rbx+0x8]
  41907f:	mov    esi,DWORD PTR [rbx+0xc]
  419082:	shl    eax,0x17
  419085:	shl    esi,0xe
  419088:	or     esi,eax
  41908a:	or     esi,0x6
  41908d:	mov    rax,QWORD PTR [rdi+0x18]
  419091:	mov    edx,DWORD PTR [rax+0x8]
  419094:	call   419630 <__ctype_b_loc@plt+0x17360>
  419099:	mov    DWORD PTR [rbx+0x8],eax
  41909c:	jmp    4190ba <__ctype_b_loc@plt+0x16dea>
  41909e:	mov    rax,QWORD PTR [rdi]
  4190a1:	mov    rax,QWORD PTR [rax+0x18]
  4190a5:	movsxd rcx,DWORD PTR [rbx+0x8]
  4190a9:	mov    edx,0x7fffff
  4190ae:	and    edx,DWORD PTR [rax+rcx*4]
  4190b1:	or     edx,0x1000000
  4190b7:	mov    DWORD PTR [rax+rcx*4],edx
  4190ba:	mov    DWORD PTR [rbx],0xb
  4190c0:	pop    rbx
  4190c1:	ret    
  4190c2:	mov    DWORD PTR [rbx],0xc
  4190c8:	mov    rax,QWORD PTR [rdi]
  4190cb:	mov    rax,QWORD PTR [rax+0x18]
  4190cf:	movsxd rcx,DWORD PTR [rbx+0x8]
  4190d3:	mov    edx,0x806
  4190d8:	bextr  eax,DWORD PTR [rax+rcx*4],edx
  4190de:	mov    DWORD PTR [rbx+0x8],eax
  4190e1:	pop    rbx
  4190e2:	ret    
  4190e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4190ed:	nop    DWORD PTR [rax]
  4190f0:	push   rbp
  4190f1:	push   r15
  4190f3:	push   r14
  4190f5:	push   r13
  4190f7:	push   r12
  4190f9:	push   rbx
  4190fa:	sub    rsp,0x28
  4190fe:	mov    rbx,rsi
  419101:	mov    r15,rdi
  419104:	mov    DWORD PTR [rsp+0xc],edx
  419108:	call   419980 <__ctype_b_loc@plt+0x176b0>
  41910d:	cmp    DWORD PTR [rbx],0xa
  419110:	jne    4191a7 <__ctype_b_loc@plt+0x16ed7>
  419116:	mov    ebp,DWORD PTR [rbx+0x8]
  419119:	cmp    ebp,0xffffffff
  41911c:	je     4191a7 <__ctype_b_loc@plt+0x16ed7>
  419122:	mov    edx,DWORD PTR [rbx+0x10]
  419125:	cmp    edx,0xffffffff
  419128:	je     419388 <__ctype_b_loc@plt+0x170b8>
  41912e:	mov    r12,rbx
  419131:	mov    rax,QWORD PTR [r15]
  419134:	mov    r14,QWORD PTR [rax+0x18]
  419138:	nop    DWORD PTR [rax+rax*1+0x0]
  419140:	mov    ecx,edx
  419142:	movsxd rbx,edx
  419145:	mov    eax,DWORD PTR [r14+rbx*4]
  419149:	mov    edx,eax
  41914b:	shr    edx,0xe
  41914e:	lea    esi,[rdx-0x1ffff]
  419154:	cmp    esi,0xffffffff
  419157:	lea    edx,[rcx+rdx*1-0x1fffe]
  41915e:	cmove  edx,esi
  419161:	cmp    edx,0xffffffff
  419164:	jne    419140 <__ctype_b_loc@plt+0x16e70>
  419166:	not    ecx
  419168:	add    ebp,ecx
  41916a:	mov    ecx,ebp
  41916c:	neg    ecx
  41916e:	cmovl  ecx,ebp
  419171:	cmp    ecx,0x20000
  419177:	jl     419190 <__ctype_b_loc@plt+0x16ec0>
  419179:	mov    rdi,QWORD PTR [r15+0x18]
  41917d:	mov    edx,DWORD PTR [rdi+0x10]
  419180:	lea    rsi,[rip+0x12164]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  419187:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41918c:	mov    eax,DWORD PTR [r14+rbx*4]
  419190:	and    eax,0x3fff
  419195:	shl    ebp,0xe
  419198:	lea    eax,[rax+rbp*1]
  41919b:	add    eax,0x7fffc000
  4191a0:	mov    DWORD PTR [r14+rbx*4],eax
  4191a4:	mov    rbx,r12
  4191a7:	mov    ebp,DWORD PTR [rbx+0x10]
  4191aa:	mov    r8d,DWORD PTR [rsp+0xc]
  4191af:	mov    QWORD PTR [rsp+0x18],rbx
  4191b4:	mov    eax,DWORD PTR [rbx+0x14]
  4191b7:	cmp    ebp,eax
  4191b9:	je     419600 <__ctype_b_loc@plt+0x17330>
  4191bf:	cmp    ebp,0xffffffff
  4191c2:	mov    rbx,QWORD PTR [rsp+0x18]
  4191c7:	je     419218 <__ctype_b_loc@plt+0x16f48>
  4191c9:	mov    rcx,QWORD PTR [r15]
  4191cc:	mov    rcx,QWORD PTR [rcx+0x18]
  4191d0:	movsxd rdx,ebp
  4191d3:	test   edx,edx
  4191d5:	jle    4191eb <__ctype_b_loc@plt+0x16f1b>
  4191d7:	mov    esi,DWORD PTR [rcx+rdx*4-0x4]
  4191db:	movabs rdi,0x20f800000
  4191e5:	bt     rdi,rsi
  4191e9:	jb     4191ee <__ctype_b_loc@plt+0x16f1e>
  4191eb:	mov    esi,DWORD PTR [rcx+rdx*4]
  4191ee:	and    esi,0x3f
  4191f1:	cmp    esi,0x1b
  4191f4:	jne    419280 <__ctype_b_loc@plt+0x16fb0>
  4191fa:	mov    esi,DWORD PTR [rcx+rdx*4]
  4191fd:	shr    esi,0xe
  419200:	lea    edi,[rsi-0x1ffff]
  419206:	cmp    edi,0xffffffff
  419209:	lea    ebp,[rdx+rsi*1-0x1fffe]
  419210:	cmove  ebp,edi
  419213:	cmp    ebp,0xffffffff
  419216:	jne    4191d0 <__ctype_b_loc@plt+0x16f00>
  419218:	mov    DWORD PTR [rsp+0x14],0xffffffff
  419220:	cmp    eax,0xffffffff
  419223:	je     419273 <__ctype_b_loc@plt+0x16fa3>
  419225:	mov    rcx,QWORD PTR [r15]
  419228:	mov    rcx,QWORD PTR [rcx+0x18]
  41922c:	nop    DWORD PTR [rax+0x0]
  419230:	cdqe   
  419232:	test   eax,eax
  419234:	jle    41924a <__ctype_b_loc@plt+0x16f7a>
  419236:	mov    edx,DWORD PTR [rcx+rax*4-0x4]
  41923a:	movabs rsi,0x20f800000
  419244:	bt     rsi,rdx
  419248:	jb     41924d <__ctype_b_loc@plt+0x16f7d>
  41924a:	mov    edx,DWORD PTR [rcx+rax*4]
  41924d:	and    edx,0x3f
  419250:	cmp    edx,0x1b
  419253:	jne    419280 <__ctype_b_loc@plt+0x16fb0>
  419255:	mov    edx,DWORD PTR [rcx+rax*4]
  419258:	shr    edx,0xe
  41925b:	lea    esi,[rdx-0x1ffff]
  419261:	cmp    esi,0xffffffff
  419264:	lea    eax,[rax+rdx*1-0x1fffe]
  41926b:	cmove  eax,esi
  41926e:	cmp    eax,0xffffffff
  419271:	jne    419230 <__ctype_b_loc@plt+0x16f60>
  419273:	mov    DWORD PTR [rsp+0x10],0xffffffff
  41927b:	jmp    419399 <__ctype_b_loc@plt+0x170c9>
  419280:	mov    r13d,0xffffffff
  419286:	cmp    DWORD PTR [rbx],0xa
  419289:	je     41929b <__ctype_b_loc@plt+0x16fcb>
  41928b:	mov    rdi,r15
  41928e:	call   417bd0 <__ctype_b_loc@plt+0x15900>
  419293:	mov    r8d,DWORD PTR [rsp+0xc]
  419298:	mov    r13d,eax
  41929b:	mov    eax,DWORD PTR [r15+0x30]
  41929f:	mov    DWORD PTR [r15+0x34],eax
  4192a3:	mov    ebp,r8d
  4192a6:	shl    ebp,0x6
  4192a9:	mov    esi,ebp
  4192ab:	or     esi,0x4002
  4192b1:	mov    rax,QWORD PTR [r15+0x18]
  4192b5:	mov    edx,DWORD PTR [rax+0x8]
  4192b8:	mov    rdi,r15
  4192bb:	call   419630 <__ctype_b_loc@plt+0x17360>
  4192c0:	mov    DWORD PTR [rsp+0x10],eax
  4192c4:	mov    eax,DWORD PTR [r15+0x30]
  4192c8:	mov    DWORD PTR [r15+0x34],eax
  4192cc:	or     ebp,0x800002
  4192d2:	mov    rax,QWORD PTR [r15+0x18]
  4192d6:	mov    edx,DWORD PTR [rax+0x8]
  4192d9:	mov    rdi,r15
  4192dc:	mov    esi,ebp
  4192de:	call   419630 <__ctype_b_loc@plt+0x17360>
  4192e3:	mov    DWORD PTR [rsp+0x14],eax
  4192e7:	mov    eax,DWORD PTR [r15+0x30]
  4192eb:	mov    DWORD PTR [r15+0x34],eax
  4192ef:	cmp    r13d,0xffffffff
  4192f3:	je     419394 <__ctype_b_loc@plt+0x170c4>
  4192f9:	mov    edx,DWORD PTR [r15+0x38]
  4192fd:	cmp    edx,0xffffffff
  419300:	je     419390 <__ctype_b_loc@plt+0x170c0>
  419306:	mov    r14,rbx
  419309:	mov    rax,QWORD PTR [r15]
  41930c:	mov    r12,QWORD PTR [rax+0x18]
  419310:	mov    ecx,edx
  419312:	movsxd rbp,edx
  419315:	mov    eax,DWORD PTR [r12+rbp*4]
  419319:	mov    edx,eax
  41931b:	shr    edx,0xe
  41931e:	lea    esi,[rdx-0x1ffff]
  419324:	cmp    esi,0xffffffff
  419327:	lea    edx,[rcx+rdx*1-0x1fffe]
  41932e:	cmove  edx,esi
  419331:	cmp    edx,0xffffffff
  419334:	jne    419310 <__ctype_b_loc@plt+0x17040>
  419336:	not    ecx
  419338:	add    r13d,ecx
  41933b:	mov    ecx,r13d
  41933e:	neg    ecx
  419340:	cmovl  ecx,r13d
  419344:	cmp    ecx,0x20000
  41934a:	mov    r8d,DWORD PTR [rsp+0xc]
  41934f:	jl     41936d <__ctype_b_loc@plt+0x1709d>
  419351:	mov    rdi,QWORD PTR [r15+0x18]
  419355:	mov    edx,DWORD PTR [rdi+0x10]
  419358:	lea    rsi,[rip+0x11f8c]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  41935f:	call   413af0 <__ctype_b_loc@plt+0x11820>
  419364:	mov    r8d,DWORD PTR [rsp+0xc]
  419369:	mov    eax,DWORD PTR [r12+rbp*4]
  41936d:	and    eax,0x3fff
  419372:	shl    r13d,0xe
  419376:	lea    eax,[rax+r13*1]
  41937a:	add    eax,0x7fffc000
  41937f:	mov    DWORD PTR [r12+rbp*4],eax
  419383:	mov    rbx,r14
  419386:	jmp    419399 <__ctype_b_loc@plt+0x170c9>
  419388:	mov    DWORD PTR [rbx+0x10],ebp
  41938b:	jmp    4191aa <__ctype_b_loc@plt+0x16eda>
  419390:	mov    DWORD PTR [r15+0x38],r13d
  419394:	mov    r8d,DWORD PTR [rsp+0xc]
  419399:	mov    r14d,DWORD PTR [r15+0x30]
  41939d:	mov    DWORD PTR [r15+0x34],r14d
  4193a1:	mov    r13d,DWORD PTR [rbx+0x14]
  4193a5:	cmp    r13d,0xffffffff
  4193a9:	mov    ebx,DWORD PTR [rsp+0x14]
  4193ad:	je     4194d4 <__ctype_b_loc@plt+0x17204>
  4193b3:	mov    eax,r8d
  4193b6:	shl    eax,0x6
  4193b9:	and    eax,0x3fc0
  4193be:	mov    DWORD PTR [rsp+0x24],eax
  4193c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4193cc:	nop    DWORD PTR [rax+0x0]
  4193d0:	mov    rax,QWORD PTR [r15]
  4193d3:	mov    rax,QWORD PTR [rax+0x18]
  4193d7:	movsxd rcx,r13d
  4193da:	lea    r12,[rax+rcx*4]
  4193de:	mov    eax,DWORD PTR [rax+rcx*4]
  4193e1:	mov    edx,eax
  4193e3:	shr    edx,0xe
  4193e6:	lea    esi,[rdx-0x1ffff]
  4193ec:	cmp    esi,0xffffffff
  4193ef:	lea    ebp,[r13+rdx*1-0x1fffe]
  4193f7:	cmove  ebp,esi
  4193fa:	test   ecx,ecx
  4193fc:	jle    419413 <__ctype_b_loc@plt+0x17143>
  4193fe:	mov    ecx,DWORD PTR [r12-0x4]
  419403:	movabs rdx,0x20f800000
  41940d:	bt     rdx,rcx
  419411:	jb     419420 <__ctype_b_loc@plt+0x17150>
  419413:	mov    ecx,eax
  419415:	mov    rdx,r12
  419418:	jmp    419425 <__ctype_b_loc@plt+0x17155>
  41941a:	nop    WORD PTR [rax+rax*1+0x0]
  419420:	lea    rdx,[r12-0x4]
  419425:	mov    esi,ecx
  419427:	and    esi,0x3f
  41942a:	cmp    esi,0x1b
  41942d:	jne    419450 <__ctype_b_loc@plt+0x17180>
  41942f:	mov    eax,ecx
  419431:	shr    eax,0x17
  419434:	cmp    r8d,0xff
  41943b:	je     419470 <__ctype_b_loc@plt+0x171a0>
  41943d:	cmp    eax,r8d
  419440:	je     419470 <__ctype_b_loc@plt+0x171a0>
  419442:	and    ecx,0xffffc03f
  419448:	or     ecx,DWORD PTR [rsp+0x24]
  41944c:	jmp    41947e <__ctype_b_loc@plt+0x171ae>
  41944e:	xchg   ax,ax
  419450:	not    r13d
  419453:	add    r13d,DWORD PTR [rsp+0x10]
  419458:	mov    ecx,r13d
  41945b:	neg    ecx
  41945d:	cmovl  ecx,r13d
  419461:	cmp    ecx,0x20000
  419467:	jge    419496 <__ctype_b_loc@plt+0x171c6>
  419469:	jmp    4194b2 <__ctype_b_loc@plt+0x171e2>
  41946b:	nop    DWORD PTR [rax+rax*1+0x0]
  419470:	shl    eax,0x6
  419473:	and    ecx,0x7fc000
  419479:	or     ecx,eax
  41947b:	or     ecx,0x1a
  41947e:	mov    DWORD PTR [rdx],ecx
  419480:	not    r13d
  419483:	add    r13d,r14d
  419486:	mov    eax,r13d
  419489:	neg    eax
  41948b:	cmovl  eax,r13d
  41948f:	cmp    eax,0x20000
  419494:	jl     4194ae <__ctype_b_loc@plt+0x171de>
  419496:	mov    rdi,QWORD PTR [r15+0x18]
  41949a:	mov    edx,DWORD PTR [rdi+0x10]
  41949d:	lea    rsi,[rip+0x11e47]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  4194a4:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4194a9:	mov    r8d,DWORD PTR [rsp+0xc]
  4194ae:	mov    eax,DWORD PTR [r12]
  4194b2:	and    eax,0x3fff
  4194b7:	shl    r13d,0xe
  4194bb:	lea    eax,[rax+r13*1]
  4194bf:	add    eax,0x7fffc000
  4194c4:	mov    DWORD PTR [r12],eax
  4194c8:	mov    r13d,ebp
  4194cb:	cmp    ebp,0xffffffff
  4194ce:	jne    4193d0 <__ctype_b_loc@plt+0x17100>
  4194d4:	mov    rax,QWORD PTR [rsp+0x18]
  4194d9:	mov    ebp,DWORD PTR [rax+0x10]
  4194dc:	cmp    ebp,0xffffffff
  4194df:	je     419600 <__ctype_b_loc@plt+0x17330>
  4194e5:	mov    eax,r8d
  4194e8:	shl    eax,0x6
  4194eb:	and    eax,0x3fc0
  4194f0:	mov    DWORD PTR [rsp+0x10],eax
  4194f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4194fe:	xchg   ax,ax
  419500:	mov    rax,QWORD PTR [r15]
  419503:	mov    rax,QWORD PTR [rax+0x18]
  419507:	movsxd rcx,ebp
  41950a:	lea    r12,[rax+rcx*4]
  41950e:	mov    eax,DWORD PTR [rax+rcx*4]
  419511:	mov    edx,eax
  419513:	shr    edx,0xe
  419516:	lea    esi,[rdx-0x1ffff]
  41951c:	cmp    esi,0xffffffff
  41951f:	lea    r13d,[rbp+rdx*1-0x1fffe]
  419527:	cmove  r13d,esi
  41952b:	test   ecx,ecx
  41952d:	jle    419544 <__ctype_b_loc@plt+0x17274>
  41952f:	mov    ecx,DWORD PTR [r12-0x4]
  419534:	movabs rdx,0x20f800000
  41953e:	bt     rdx,rcx
  419542:	jb     419550 <__ctype_b_loc@plt+0x17280>
  419544:	mov    ecx,eax
  419546:	mov    rdx,r12
  419549:	jmp    419555 <__ctype_b_loc@plt+0x17285>
  41954b:	nop    DWORD PTR [rax+rax*1+0x0]
  419550:	lea    rdx,[r12-0x4]
  419555:	mov    esi,ecx
  419557:	and    esi,0x3f
  41955a:	cmp    esi,0x1b
  41955d:	jne    419580 <__ctype_b_loc@plt+0x172b0>
  41955f:	mov    eax,ecx
  419561:	shr    eax,0x17
  419564:	cmp    r8d,0xff
  41956b:	je     4195a0 <__ctype_b_loc@plt+0x172d0>
  41956d:	cmp    eax,r8d
  419570:	je     4195a0 <__ctype_b_loc@plt+0x172d0>
  419572:	and    ecx,0xffffc03f
  419578:	or     ecx,DWORD PTR [rsp+0x10]
  41957c:	jmp    4195ae <__ctype_b_loc@plt+0x172de>
  41957e:	xchg   ax,ax
  419580:	not    ebp
  419582:	add    ebp,ebx
  419584:	mov    ecx,ebp
  419586:	neg    ecx
  419588:	cmovl  ecx,ebp
  41958b:	cmp    ecx,0x20000
  419591:	jge    4195c3 <__ctype_b_loc@plt+0x172f3>
  419593:	jmp    4195df <__ctype_b_loc@plt+0x1730f>
  419595:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41959f:	nop
  4195a0:	shl    eax,0x6
  4195a3:	and    ecx,0x7fc000
  4195a9:	or     ecx,eax
  4195ab:	or     ecx,0x1a
  4195ae:	mov    DWORD PTR [rdx],ecx
  4195b0:	not    ebp
  4195b2:	add    ebp,r14d
  4195b5:	mov    eax,ebp
  4195b7:	neg    eax
  4195b9:	cmovl  eax,ebp
  4195bc:	cmp    eax,0x20000
  4195c1:	jl     4195db <__ctype_b_loc@plt+0x1730b>
  4195c3:	mov    rdi,QWORD PTR [r15+0x18]
  4195c7:	mov    edx,DWORD PTR [rdi+0x10]
  4195ca:	lea    rsi,[rip+0x11d1a]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  4195d1:	call   413af0 <__ctype_b_loc@plt+0x11820>
  4195d6:	mov    r8d,DWORD PTR [rsp+0xc]
  4195db:	mov    eax,DWORD PTR [r12]
  4195df:	and    eax,0x3fff
  4195e4:	shl    ebp,0xe
  4195e7:	lea    eax,[rax+rbp*1]
  4195ea:	add    eax,0x7fffc000
  4195ef:	mov    DWORD PTR [r12],eax
  4195f3:	mov    ebp,r13d
  4195f6:	cmp    r13d,0xffffffff
  4195fa:	jne    419500 <__ctype_b_loc@plt+0x17230>
  419600:	mov    rax,QWORD PTR [rsp+0x18]
  419605:	mov    QWORD PTR [rax+0x10],0xffffffffffffffff
  41960d:	mov    DWORD PTR [rax+0x8],r8d
  419611:	mov    DWORD PTR [rax],0xc
  419617:	add    rsp,0x28
  41961b:	pop    rbx
  41961c:	pop    r12
  41961e:	pop    r13
  419620:	pop    r14
  419622:	pop    r15
  419624:	pop    rbp
  419625:	ret    
  419626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419630:	push   rbp
  419631:	push   r15
  419633:	push   r14
  419635:	push   r13
  419637:	push   r12
  419639:	push   rbx
  41963a:	sub    rsp,0x18
  41963e:	mov    DWORD PTR [rsp+0x14],edx
  419642:	mov    DWORD PTR [rsp+0x8],esi
  419646:	mov    r13,rdi
  419649:	mov    r14,QWORD PTR [rdi]
  41964c:	mov    ebx,DWORD PTR [rdi+0x38]
  41964f:	mov    ebp,DWORD PTR [rdi+0x30]
  419652:	cmp    ebx,0xffffffff
  419655:	je     41974e <__ctype_b_loc@plt+0x1747e>
  41965b:	movabs r12,0x20f800000
  419665:	mov    QWORD PTR [rsp],r14
  419669:	mov    rax,r14
  41966c:	jmp    419677 <__ctype_b_loc@plt+0x173a7>
  41966e:	xchg   ax,ax
  419670:	mov    rax,QWORD PTR [r13+0x0]
  419674:	mov    ebx,r14d
  419677:	mov    rax,QWORD PTR [rax+0x18]
  41967b:	movsxd rcx,ebx
  41967e:	lea    r15,[rax+rcx*4]
  419682:	mov    eax,DWORD PTR [rax+rcx*4]
  419685:	mov    edx,eax
  419687:	shr    edx,0xe
  41968a:	lea    esi,[rdx-0x1ffff]
  419690:	cmp    esi,0xffffffff
  419693:	lea    r14d,[rbx+rdx*1-0x1fffe]
  41969b:	cmove  r14d,esi
  41969f:	test   ecx,ecx
  4196a1:	jle    4196ad <__ctype_b_loc@plt+0x173dd>
  4196a3:	mov    ecx,DWORD PTR [r15-0x4]
  4196a7:	bt     r12,rcx
  4196ab:	jb     4196c0 <__ctype_b_loc@plt+0x173f0>
  4196ad:	mov    ecx,eax
  4196af:	mov    rdx,r15
  4196b2:	jmp    4196c4 <__ctype_b_loc@plt+0x173f4>
  4196b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4196be:	xchg   ax,ax
  4196c0:	lea    rdx,[r15-0x4]
  4196c4:	mov    esi,ecx
  4196c6:	and    esi,0x3f
  4196c9:	cmp    esi,0x1b
  4196cc:	jne    419700 <__ctype_b_loc@plt+0x17430>
  4196ce:	mov    eax,ecx
  4196d0:	shr    eax,0x11
  4196d3:	and    eax,0xffffffc0
  4196d6:	and    ecx,0x7fc000
  4196dc:	or     ecx,eax
  4196de:	or     ecx,0x1a
  4196e1:	mov    DWORD PTR [rdx],ecx
  4196e3:	not    ebx
  4196e5:	add    ebx,ebp
  4196e7:	mov    eax,ebx
  4196e9:	neg    eax
  4196eb:	cmovl  eax,ebx
  4196ee:	cmp    eax,0x20000
  4196f3:	jge    419713 <__ctype_b_loc@plt+0x17443>
  4196f5:	jmp    419726 <__ctype_b_loc@plt+0x17456>
  4196f7:	nop    WORD PTR [rax+rax*1+0x0]
  419700:	not    ebx
  419702:	add    ebx,ebp
  419704:	mov    ecx,ebx
  419706:	neg    ecx
  419708:	cmovl  ecx,ebx
  41970b:	cmp    ecx,0x20000
  419711:	jl     419729 <__ctype_b_loc@plt+0x17459>
  419713:	mov    rdi,QWORD PTR [r13+0x18]
  419717:	mov    edx,DWORD PTR [rdi+0x10]
  41971a:	lea    rsi,[rip+0x11bca]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  419721:	call   413af0 <__ctype_b_loc@plt+0x11820>
  419726:	mov    eax,DWORD PTR [r15]
  419729:	and    eax,0x3fff
  41972e:	shl    ebx,0xe
  419731:	lea    eax,[rax+rbx*1]
  419734:	add    eax,0x7fffc000
  419739:	mov    DWORD PTR [r15],eax
  41973c:	cmp    r14d,0xffffffff
  419740:	jne    419670 <__ctype_b_loc@plt+0x173a0>
  419746:	mov    ebp,DWORD PTR [r13+0x30]
  41974a:	mov    r14,QWORD PTR [rsp]
  41974e:	mov    DWORD PTR [r13+0x38],0xffffffff
  419756:	mov    eax,DWORD PTR [r14+0x50]
  41975a:	cmp    ebp,eax
  41975c:	jge    419767 <__ctype_b_loc@plt+0x17497>
  41975e:	mov    rax,QWORD PTR [r14+0x18]
  419762:	jmp    419803 <__ctype_b_loc@plt+0x17533>
  419767:	mov    r12,QWORD PTR [r13+0x20]
  41976b:	mov    rsi,QWORD PTR [r14+0x18]
  41976f:	cmp    eax,0x3ffffffe
  419774:	jge    419789 <__ctype_b_loc@plt+0x174b9>
  419776:	mov    r15,r14
  419779:	lea    ecx,[rax+rax*1]
  41977c:	cmp    ecx,0x3
  41977f:	mov    ebx,0x4
  419784:	cmovg  ebx,ecx
  419787:	jmp    4197b8 <__ctype_b_loc@plt+0x174e8>
  419789:	mov    ebx,0x7ffffffd
  41978e:	cmp    eax,0x7ffffffd
  419793:	jge    41979a <__ctype_b_loc@plt+0x174ca>
  419795:	mov    r15,r14
  419798:	jmp    4197b8 <__ctype_b_loc@plt+0x174e8>
  41979a:	mov    rbp,rsi
  41979d:	lea    rsi,[rip+0x11b34]        # 42b2d8 <__ctype_b_loc@plt+0x29008>
  4197a4:	xor    eax,eax
  4197a6:	mov    rdi,r12
  4197a9:	call   404080 <__ctype_b_loc@plt+0x1db0>
  4197ae:	mov    rsi,rbp
  4197b1:	mov    r15,r14
  4197b4:	mov    eax,DWORD PTR [r14+0x50]
  4197b8:	movsxd rbp,eax
  4197bb:	shl    rbp,0x2
  4197bf:	mov    r14d,ebx
  4197c2:	shl    r14,0x2
  4197c6:	mov    QWORD PTR [rsp],r12
  4197ca:	mov    r12,QWORD PTR [r12+0x20]
  4197cf:	mov    rdi,QWORD PTR [r12+0x18]
  4197d4:	mov    rdx,rbp
  4197d7:	mov    rcx,r14
  4197da:	call   QWORD PTR [r12+0x10]
  4197df:	test   ebx,ebx
  4197e1:	je     4197ec <__ctype_b_loc@plt+0x1751c>
  4197e3:	test   rax,rax
  4197e6:	je     4198d9 <__ctype_b_loc@plt+0x17609>
  4197ec:	sub    r14,rbp
  4197ef:	add    QWORD PTR [r12+0x78],r14
  4197f4:	mov    r14,r15
  4197f7:	mov    DWORD PTR [r15+0x50],ebx
  4197fb:	mov    QWORD PTR [r15+0x18],rax
  4197ff:	mov    ebp,DWORD PTR [r13+0x30]
  419803:	movsxd rcx,ebp
  419806:	mov    edx,DWORD PTR [rsp+0x8]
  41980a:	mov    DWORD PTR [rax+rcx*4],edx
  41980d:	mov    ecx,DWORD PTR [r13+0x30]
  419811:	mov    eax,DWORD PTR [r14+0x54]
  419815:	cmp    ecx,eax
  419817:	jge    419822 <__ctype_b_loc@plt+0x17552>
  419819:	mov    rax,QWORD PTR [r14+0x28]
  41981d:	jmp    4198b5 <__ctype_b_loc@plt+0x175e5>
  419822:	mov    r15,QWORD PTR [r13+0x20]
  419826:	mov    rsi,QWORD PTR [r14+0x28]
  41982a:	cmp    eax,0x3ffffffe
  41982f:	jge    419844 <__ctype_b_loc@plt+0x17574>
  419831:	mov    r12,r14
  419834:	lea    ecx,[rax+rax*1]
  419837:	cmp    ecx,0x3
  41983a:	mov    ebx,0x4
  41983f:	cmovg  ebx,ecx
  419842:	jmp    419873 <__ctype_b_loc@plt+0x175a3>
  419844:	mov    ebx,0x7ffffffd
  419849:	cmp    eax,0x7ffffffd
  41984e:	jge    419855 <__ctype_b_loc@plt+0x17585>
  419850:	mov    r12,r14
  419853:	jmp    419873 <__ctype_b_loc@plt+0x175a3>
  419855:	mov    rbp,rsi
  419858:	lea    rsi,[rip+0x11a79]        # 42b2d8 <__ctype_b_loc@plt+0x29008>
  41985f:	xor    eax,eax
  419861:	mov    rdi,r15
  419864:	call   404080 <__ctype_b_loc@plt+0x1db0>
  419869:	mov    rsi,rbp
  41986c:	mov    r12,r14
  41986f:	mov    eax,DWORD PTR [r14+0x54]
  419873:	movsxd r14,eax
  419876:	shl    r14,0x2
  41987a:	mov    ebp,ebx
  41987c:	shl    rbp,0x2
  419880:	mov    QWORD PTR [rsp+0x8],r15
  419885:	mov    r15,QWORD PTR [r15+0x20]
  419889:	mov    rdi,QWORD PTR [r15+0x18]
  41988d:	mov    rdx,r14
  419890:	mov    rcx,rbp
  419893:	call   QWORD PTR [r15+0x10]
  419897:	test   ebx,ebx
  419899:	je     4198a0 <__ctype_b_loc@plt+0x175d0>
  41989b:	test   rax,rax
  41989e:	je     41990a <__ctype_b_loc@plt+0x1763a>
  4198a0:	sub    rbp,r14
  4198a3:	add    QWORD PTR [r15+0x78],rbp
  4198a7:	mov    DWORD PTR [r12+0x54],ebx
  4198ac:	mov    QWORD PTR [r12+0x28],rax
  4198b1:	mov    ecx,DWORD PTR [r13+0x30]
  4198b5:	movsxd rcx,ecx
  4198b8:	mov    edx,DWORD PTR [rsp+0x14]
  4198bc:	mov    DWORD PTR [rax+rcx*4],edx
  4198bf:	mov    eax,DWORD PTR [r13+0x30]
  4198c3:	lea    ecx,[rax+0x1]
  4198c6:	mov    DWORD PTR [r13+0x30],ecx
  4198ca:	add    rsp,0x18
  4198ce:	pop    rbx
  4198cf:	pop    r12
  4198d1:	pop    r13
  4198d3:	pop    r14
  4198d5:	pop    r15
  4198d7:	pop    rbp
  4198d8:	ret    
  4198d9:	mov    rax,QWORD PTR [rsp]
  4198dd:	mov    rdi,QWORD PTR [rax+0xa8]
  4198e4:	test   rdi,rdi
  4198e7:	jne    41995b <__ctype_b_loc@plt+0x1768b>
  4198e9:	mov    rax,QWORD PTR [rsp]
  4198ed:	mov    BYTE PTR [rax+0xa],0x4
  4198f1:	mov    rax,QWORD PTR [rax+0x20]
  4198f5:	cmp    QWORD PTR [rax+0x98],0x0
  4198fd:	je     419951 <__ctype_b_loc@plt+0x17681>
  4198ff:	mov    esi,0x4
  419904:	mov    rbx,QWORD PTR [rsp]
  419908:	jmp    41993c <__ctype_b_loc@plt+0x1766c>
  41990a:	mov    rax,QWORD PTR [rsp+0x8]
  41990f:	mov    rdi,QWORD PTR [rax+0xa8]
  419916:	test   rdi,rdi
  419919:	jne    41995b <__ctype_b_loc@plt+0x1768b>
  41991b:	mov    rax,QWORD PTR [rsp+0x8]
  419920:	mov    BYTE PTR [rax+0xa],0x4
  419924:	mov    rax,QWORD PTR [rax+0x20]
  419928:	cmp    QWORD PTR [rax+0x98],0x0
  419930:	je     419951 <__ctype_b_loc@plt+0x17681>
  419932:	mov    esi,0x4
  419937:	mov    rbx,QWORD PTR [rsp+0x8]
  41993c:	mov    rdi,rbx
  41993f:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  419944:	mov    rax,QWORD PTR [rbx+0x20]
  419948:	mov    rdi,rbx
  41994b:	call   QWORD PTR [rax+0x98]
  419951:	mov    edi,0x1
  419956:	call   402280 <exit@plt>
  41995b:	mov    DWORD PTR [rdi+0xd0],0x4
  419965:	add    rdi,0x8
  419969:	mov    esi,0x1
  41996e:	call   402230 <longjmp@plt>
  419973:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41997d:	nop    DWORD PTR [rax]
  419980:	push   rbp
  419981:	push   r14
  419983:	push   rbx
  419984:	sub    rsp,0x10
  419988:	mov    r14d,edx
  41998b:	mov    rbx,rsi
  41998e:	mov    rbp,rdi
  419991:	call   419010 <__ctype_b_loc@plt+0x16d40>
  419996:	mov    eax,DWORD PTR [rbx]
  419998:	lea    ecx,[rax-0x1]
  41999b:	cmp    ecx,0xb
  41999e:	ja     419aee <__ctype_b_loc@plt+0x1781e>
  4199a4:	lea    rdx,[rip+0x10e51]        # 42a7fc <__ctype_b_loc@plt+0x2852c>
  4199ab:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4199af:	add    rcx,rdx
  4199b2:	jmp    rcx
  4199b4:	xor    esi,esi
  4199b6:	cmp    eax,0x2
  4199b9:	sete   sil
  4199bd:	mov    eax,r14d
  4199c0:	shl    eax,0x6
  4199c3:	shl    esi,0x17
  4199c6:	or     esi,eax
  4199c8:	or     esi,0x2
  4199cb:	jmp    419ad5 <__ctype_b_loc@plt+0x17805>
  4199d0:	movsxd rax,DWORD PTR [rbp+0x30]
  4199d4:	cmp    eax,DWORD PTR [rbp+0x34]
  4199d7:	jle    419ac4 <__ctype_b_loc@plt+0x177f4>
  4199dd:	test   eax,eax
  4199df:	je     419abb <__ctype_b_loc@plt+0x177eb>
  4199e5:	mov    rcx,QWORD PTR [rbp+0x0]
  4199e9:	mov    rcx,QWORD PTR [rcx+0x18]
  4199ed:	mov    edx,DWORD PTR [rcx+rax*4-0x4]
  4199f1:	mov    esi,edx
  4199f3:	and    esi,0x3f
  4199f6:	cmp    esi,0x3
  4199f9:	jne    419ac4 <__ctype_b_loc@plt+0x177f4>
  4199ff:	mov    esi,0x806
  419a04:	bextr  esi,edx,esi
  419a09:	cmp    esi,r14d
  419a0c:	jg     419ac4 <__ctype_b_loc@plt+0x177f4>
  419a12:	mov    esi,edx
  419a14:	shr    esi,0x17
  419a17:	lea    edi,[rsi+0x1]
  419a1a:	cmp    edi,r14d
  419a1d:	jl     419ac4 <__ctype_b_loc@plt+0x177f4>
  419a23:	cmp    esi,r14d
  419a26:	jge    419ae4 <__ctype_b_loc@plt+0x17814>
  419a2c:	and    edx,0x7fffff
  419a32:	mov    esi,r14d
  419a35:	shl    esi,0x17
  419a38:	or     esi,edx
  419a3a:	mov    DWORD PTR [rcx+rax*4-0x4],esi
  419a3e:	jmp    419ae4 <__ctype_b_loc@plt+0x17814>
  419a43:	mov    esi,DWORD PTR [rbx+0x8]
  419a46:	mov    eax,r14d
  419a49:	shl    eax,0x6
  419a4c:	shl    esi,0xe
  419a4f:	jmp    419a78 <__ctype_b_loc@plt+0x177a8>
  419a51:	mov    rax,QWORD PTR [rbx+0x8]
  419a55:	mov    QWORD PTR [rsp],rax
  419a59:	mov    DWORD PTR [rsp+0x8],0x3
  419a61:	mov    rsi,rsp
  419a64:	mov    rdi,rbp
  419a67:	mov    rdx,rsi
  419a6a:	call   419b00 <__ctype_b_loc@plt+0x17830>
  419a6f:	mov    esi,r14d
  419a72:	shl    esi,0x6
  419a75:	shl    eax,0xe
  419a78:	or     esi,eax
  419a7a:	or     esi,0x1
  419a7d:	jmp    419ad5 <__ctype_b_loc@plt+0x17805>
  419a7f:	mov    rax,QWORD PTR [rbp+0x0]
  419a83:	mov    rax,QWORD PTR [rax+0x18]
  419a87:	movsxd rcx,DWORD PTR [rbx+0x8]
  419a8b:	mov    edx,0xffffc03f
  419a90:	and    edx,DWORD PTR [rax+rcx*4]
  419a93:	mov    esi,r14d
  419a96:	shl    esi,0x6
  419a99:	and    esi,0x3fc0
  419a9f:	or     esi,edx
  419aa1:	mov    DWORD PTR [rax+rcx*4],esi
  419aa4:	jmp    419ae4 <__ctype_b_loc@plt+0x17814>
  419aa6:	mov    esi,DWORD PTR [rbx+0x8]
  419aa9:	cmp    esi,r14d
  419aac:	je     419ae4 <__ctype_b_loc@plt+0x17814>
  419aae:	mov    eax,r14d
  419ab1:	shl    eax,0x6
  419ab4:	shl    esi,0x17
  419ab7:	or     esi,eax
  419ab9:	jmp    419ad5 <__ctype_b_loc@plt+0x17805>
  419abb:	movzx  eax,BYTE PTR [rbp+0x4a]
  419abf:	cmp    eax,r14d
  419ac2:	jle    419ae4 <__ctype_b_loc@plt+0x17814>
  419ac4:	mov    eax,r14d
  419ac7:	shl    eax,0x6
  419aca:	mov    esi,r14d
  419acd:	shl    esi,0x17
  419ad0:	or     esi,eax
  419ad2:	or     esi,0x3
  419ad5:	mov    rax,QWORD PTR [rbp+0x18]
  419ad9:	mov    edx,DWORD PTR [rax+0x8]
  419adc:	mov    rdi,rbp
  419adf:	call   419630 <__ctype_b_loc@plt+0x17360>
  419ae4:	mov    DWORD PTR [rbx+0x8],r14d
  419ae8:	mov    DWORD PTR [rbx],0xc
  419aee:	add    rsp,0x10
  419af2:	pop    rbx
  419af3:	pop    r14
  419af5:	pop    rbp
  419af6:	ret    
  419af7:	nop    WORD PTR [rax+rax*1+0x0]
  419b00:	push   rbp
  419b01:	push   r15
  419b03:	push   r14
  419b05:	push   r13
  419b07:	push   r12
  419b09:	push   rbx
  419b0a:	sub    rsp,0x18
  419b0e:	mov    r15,rdx
  419b11:	mov    rbx,rsi
  419b14:	mov    r12,rdi
  419b17:	mov    r13,QWORD PTR [rdi+0x8]
  419b1b:	mov    r14,QWORD PTR [rdi+0x20]
  419b1f:	mov    ebp,DWORD PTR [rsi+0x8]
  419b22:	test   ebp,ebp
  419b24:	je     419c7c <__ctype_b_loc@plt+0x179ac>
  419b2a:	cmp    ebp,0x3
  419b2d:	je     419b7e <__ctype_b_loc@plt+0x178ae>
  419b2f:	cmp    ebp,0x4
  419b32:	jne    419bab <__ctype_b_loc@plt+0x178db>
  419b34:	mov    rcx,QWORD PTR [rbx]
  419b37:	mov    al,BYTE PTR [r13+0xb]
  419b3b:	mov    rdx,0xffffffffffffffff
  419b42:	shlx   rax,rdx,rax
  419b47:	andn   eax,eax,DWORD PTR [rcx+0xc]
  419b4d:	cdqe   
  419b4f:	lea    rax,[rax+rax*4]
  419b53:	shl    rax,0x3
  419b57:	add    rax,QWORD PTR [r13+0x20]
  419b5b:	nop    DWORD PTR [rax+rax*1+0x0]
  419b60:	cmp    DWORD PTR [rax+0x18],0x4
  419b64:	jne    419b70 <__ctype_b_loc@plt+0x178a0>
  419b66:	cmp    QWORD PTR [rax+0x10],rcx
  419b6a:	je     419c93 <__ctype_b_loc@plt+0x179c3>
  419b70:	mov    rax,QWORD PTR [rax+0x20]
  419b74:	test   rax,rax
  419b77:	jne    419b60 <__ctype_b_loc@plt+0x17890>
  419b79:	jmp    419c7c <__ctype_b_loc@plt+0x179ac>
  419b7e:	vmovsd xmm1,QWORD PTR [rbx]
  419b82:	vcvttsd2si eax,xmm1
  419b86:	vcvtsi2sd xmm0,xmm0,eax
  419b8a:	vucomisd xmm1,xmm0
  419b8e:	jne    419bab <__ctype_b_loc@plt+0x178db>
  419b90:	jp     419bab <__ctype_b_loc@plt+0x178db>
  419b92:	lea    ecx,[rax-0x1]
  419b95:	cmp    ecx,DWORD PTR [r13+0x38]
  419b99:	jae    419c0b <__ctype_b_loc@plt+0x1793b>
  419b9b:	movsxd rax,ecx
  419b9e:	shl    rax,0x4
  419ba2:	add    rax,QWORD PTR [r13+0x18]
  419ba6:	jmp    419c93 <__ctype_b_loc@plt+0x179c3>
  419bab:	mov    rdi,r13
  419bae:	mov    rsi,rbx
  419bb1:	call   409bf0 <__ctype_b_loc@plt+0x7920>
  419bb6:	mov    ecx,ebp
  419bb8:	lea    rdx,[rip+0x10c6d]        # 42a82c <__ctype_b_loc@plt+0x2855c>
  419bbf:	nop
  419bc0:	cmp    DWORD PTR [rax+0x18],ebp
  419bc3:	jne    419c00 <__ctype_b_loc@plt+0x17930>
  419bc5:	cmp    ebp,0x3
  419bc8:	ja     419be0 <__ctype_b_loc@plt+0x17910>
  419bca:	movsxd rsi,DWORD PTR [rdx+rcx*4]
  419bce:	add    rsi,rdx
  419bd1:	jmp    rsi
  419bd3:	mov    esi,DWORD PTR [rax+0x10]
  419bd6:	cmp    esi,DWORD PTR [rbx]
  419bd8:	jne    419c00 <__ctype_b_loc@plt+0x17930>
  419bda:	jmp    419c93 <__ctype_b_loc@plt+0x179c3>
  419bdf:	nop
  419be0:	mov    rsi,QWORD PTR [rax+0x10]
  419be4:	cmp    rsi,QWORD PTR [rbx]
  419be7:	jne    419c00 <__ctype_b_loc@plt+0x17930>
  419be9:	jmp    419c93 <__ctype_b_loc@plt+0x179c3>
  419bee:	vmovq  xmm0,QWORD PTR [rax+0x10]
  419bf3:	vucomisd xmm0,QWORD PTR [rbx]
  419bf7:	jne    419c00 <__ctype_b_loc@plt+0x17930>
  419bf9:	jnp    419c93 <__ctype_b_loc@plt+0x179c3>
  419bff:	nop
  419c00:	mov    rax,QWORD PTR [rax+0x20]
  419c04:	test   rax,rax
  419c07:	jne    419bc0 <__ctype_b_loc@plt+0x178f0>
  419c09:	jmp    419c7c <__ctype_b_loc@plt+0x179ac>
  419c0b:	test   eax,eax
  419c0d:	je     419c4e <__ctype_b_loc@plt+0x1797e>
  419c0f:	vmovq  rcx,xmm0
  419c14:	mov    rax,rcx
  419c17:	shr    rax,0x20
  419c1b:	add    eax,ecx
  419c1d:	mov    cl,BYTE PTR [r13+0xb]
  419c21:	mov    rdx,0xffffffffffffffff
  419c28:	shlx   rcx,rdx,rcx
  419c2d:	or     rcx,0x1
  419c31:	xor    rcx,0xfffffffffffffffe
  419c35:	xor    edx,edx
  419c37:	div    rcx
  419c3a:	lea    rax,[rdx+rdx*4]
  419c3e:	shl    rax,0x3
  419c42:	add    rax,QWORD PTR [r13+0x20]
  419c46:	cmp    DWORD PTR [rax+0x18],0x3
  419c4a:	jne    419c73 <__ctype_b_loc@plt+0x179a3>
  419c4c:	jmp    419c66 <__ctype_b_loc@plt+0x17996>
  419c4e:	mov    rax,QWORD PTR [r13+0x20]
  419c52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419c5c:	nop    DWORD PTR [rax+0x0]
  419c60:	cmp    DWORD PTR [rax+0x18],0x3
  419c64:	jne    419c73 <__ctype_b_loc@plt+0x179a3>
  419c66:	vmovsd xmm1,QWORD PTR [rax+0x10]
  419c6b:	vucomisd xmm1,xmm0
  419c6f:	jne    419c73 <__ctype_b_loc@plt+0x179a3>
  419c71:	jnp    419c93 <__ctype_b_loc@plt+0x179c3>
  419c73:	mov    rax,QWORD PTR [rax+0x20]
  419c77:	test   rax,rax
  419c7a:	jne    419c60 <__ctype_b_loc@plt+0x17990>
  419c7c:	mov    BYTE PTR [r13+0xa],0x0
  419c81:	cmp    ebp,0x3
  419c84:	je     419cb3 <__ctype_b_loc@plt+0x179e3>
  419c86:	test   ebp,ebp
  419c88:	jne    419cce <__ctype_b_loc@plt+0x179fe>
  419c8a:	lea    rsi,[rip+0x11272]        # 42af03 <__ctype_b_loc@plt+0x28c33>
  419c91:	jmp    419cc4 <__ctype_b_loc@plt+0x179f4>
  419c93:	mov    BYTE PTR [r13+0xa],0x0
  419c98:	lea    rcx,[rip+0x10e79]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  419c9f:	cmp    rax,rcx
  419ca2:	je     419c81 <__ctype_b_loc@plt+0x179b1>
  419ca4:	cmp    DWORD PTR [rax+0x8],0x3
  419ca8:	jne    419ce2 <__ctype_b_loc@plt+0x17a12>
  419caa:	vcvttsd2si eax,QWORD PTR [rax]
  419cae:	jmp    419ed1 <__ctype_b_loc@plt+0x17c01>
  419cb3:	vmovq  xmm0,QWORD PTR [rbx]
  419cb7:	vucomisd xmm0,xmm0
  419cbb:	jnp    419cce <__ctype_b_loc@plt+0x179fe>
  419cbd:	lea    rsi,[rip+0x11252]        # 42af16 <__ctype_b_loc@plt+0x28c46>
  419cc4:	xor    eax,eax
  419cc6:	mov    rdi,r14
  419cc9:	call   404080 <__ctype_b_loc@plt+0x1db0>
  419cce:	mov    rdi,r14
  419cd1:	mov    rsi,r13
  419cd4:	mov    rdx,rbx
  419cd7:	call   409ca0 <__ctype_b_loc@plt+0x79d0>
  419cdc:	cmp    DWORD PTR [rax+0x8],0x3
  419ce0:	je     419caa <__ctype_b_loc@plt+0x179da>
  419ce2:	mov    QWORD PTR [rsp+0x10],r15
  419ce7:	mov    rbx,QWORD PTR [r12]
  419ceb:	movsxd r15,DWORD PTR [rbx+0x4c]
  419cef:	vcvtsi2sd xmm0,xmm2,DWORD PTR [r12+0x40]
  419cf6:	vmovq  QWORD PTR [rax],xmm0
  419cfa:	mov    DWORD PTR [rax+0x8],0x3
  419d01:	mov    r13d,DWORD PTR [rbx+0x4c]
  419d05:	cmp    DWORD PTR [r12+0x40],r13d
  419d0a:	jge    419d1e <__ctype_b_loc@plt+0x17a4e>
  419d0c:	mov    rax,QWORD PTR [rbx+0x10]
  419d10:	cmp    r15d,r13d
  419d13:	jl     419dc9 <__ctype_b_loc@plt+0x17af9>
  419d19:	jmp    419e74 <__ctype_b_loc@plt+0x17ba4>
  419d1e:	mov    rsi,QWORD PTR [rbx+0x10]
  419d22:	cmp    r13d,0x1ffff
  419d29:	mov    QWORD PTR [rsp+0x8],rbx
  419d2e:	jge    419d48 <__ctype_b_loc@plt+0x17a78>
  419d30:	lea    ecx,[r13+r13*1+0x0]
  419d35:	cmp    ecx,0x3
  419d38:	mov    eax,r13d
  419d3b:	mov    edx,0x4
  419d40:	cmovg  edx,ecx
  419d43:	mov    r13d,edx
  419d46:	jmp    419d76 <__ctype_b_loc@plt+0x17aa6>
  419d48:	cmp    r13d,0x3ffff
  419d4f:	jge    419d56 <__ctype_b_loc@plt+0x17a86>
  419d51:	mov    eax,r13d
  419d54:	jmp    419d70 <__ctype_b_loc@plt+0x17aa0>
  419d56:	mov    rbp,rsi
  419d59:	lea    rsi,[rip+0x115a6]        # 42b306 <__ctype_b_loc@plt+0x29036>
  419d60:	xor    eax,eax
  419d62:	mov    rdi,r14
  419d65:	call   404080 <__ctype_b_loc@plt+0x1db0>
  419d6a:	mov    rsi,rbp
  419d6d:	mov    eax,DWORD PTR [rbx+0x4c]
  419d70:	mov    r13d,0x3ffff
  419d76:	movsxd rbx,eax
  419d79:	shl    rbx,0x4
  419d7d:	mov    ebp,r13d
  419d80:	shl    rbp,0x4
  419d84:	mov    QWORD PTR [rsp],r14
  419d88:	mov    r14,QWORD PTR [r14+0x20]
  419d8c:	mov    rdi,QWORD PTR [r14+0x18]
  419d90:	mov    rdx,rbx
  419d93:	mov    rcx,rbp
  419d96:	call   QWORD PTR [r14+0x10]
  419d9a:	test   r13d,r13d
  419d9d:	je     419da8 <__ctype_b_loc@plt+0x17ad8>
  419d9f:	test   rax,rax
  419da2:	je     419ee0 <__ctype_b_loc@plt+0x17c10>
  419da8:	sub    rbp,rbx
  419dab:	add    QWORD PTR [r14+0x78],rbp
  419daf:	mov    rbx,QWORD PTR [rsp+0x8]
  419db4:	mov    DWORD PTR [rbx+0x4c],r13d
  419db8:	mov    QWORD PTR [rbx+0x10],rax
  419dbc:	mov    r14,QWORD PTR [rsp]
  419dc0:	cmp    r15d,r13d
  419dc3:	jge    419e74 <__ctype_b_loc@plt+0x17ba4>
  419dc9:	movsxd rcx,r13d
  419dcc:	sub    r13d,r15d
  419dcf:	mov    rdx,r15
  419dd2:	not    rdx
  419dd5:	add    rdx,rcx
  419dd8:	and    r13,0x7
  419ddc:	je     419e16 <__ctype_b_loc@plt+0x17b46>
  419dde:	mov    rsi,r15
  419de1:	shl    rsi,0x4
  419de5:	add    rsi,rax
  419de8:	add    rsi,0x8
  419dec:	neg    r13
  419def:	xor    edi,edi
  419df1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419dfb:	nop    DWORD PTR [rax+rax*1+0x0]
  419e00:	mov    DWORD PTR [rsi],0x0
  419e06:	add    rsi,0x10
  419e0a:	add    rdi,0xffffffffffffffff
  419e0e:	cmp    r13,rdi
  419e11:	jne    419e00 <__ctype_b_loc@plt+0x17b30>
  419e13:	sub    r15,rdi
  419e16:	cmp    rdx,0x7
  419e1a:	jb     419e74 <__ctype_b_loc@plt+0x17ba4>
  419e1c:	mov    rdx,r15
  419e1f:	shl    rdx,0x4
  419e23:	add    rdx,rax
  419e26:	add    rdx,0x78
  419e2a:	nop    WORD PTR [rax+rax*1+0x0]
  419e30:	mov    DWORD PTR [rdx-0x70],0x0
  419e37:	mov    DWORD PTR [rdx-0x60],0x0
  419e3e:	mov    DWORD PTR [rdx-0x50],0x0
  419e45:	mov    DWORD PTR [rdx-0x40],0x0
  419e4c:	mov    DWORD PTR [rdx-0x30],0x0
  419e53:	mov    DWORD PTR [rdx-0x20],0x0
  419e5a:	mov    DWORD PTR [rdx-0x10],0x0
  419e61:	add    r15,0x8
  419e65:	mov    DWORD PTR [rdx],0x0
  419e6b:	sub    rdx,0xffffffffffffff80
  419e6f:	cmp    r15,rcx
  419e72:	jl     419e30 <__ctype_b_loc@plt+0x17b60>
  419e74:	movsxd rcx,DWORD PTR [r12+0x40]
  419e79:	shl    rcx,0x4
  419e7d:	mov    rsi,QWORD PTR [rsp+0x10]
  419e82:	mov    rdx,QWORD PTR [rsi]
  419e85:	mov    QWORD PTR [rax+rcx*1],rdx
  419e89:	mov    edx,DWORD PTR [rsi+0x8]
  419e8c:	mov    DWORD PTR [rax+rcx*1+0x8],edx
  419e90:	cmp    DWORD PTR [rsi+0x8],0x4
  419e94:	jl     419ec4 <__ctype_b_loc@plt+0x17bf4>
  419e96:	mov    rsi,QWORD PTR [rsi]
  419e99:	test   BYTE PTR [rsi+0x9],0x3
  419e9d:	je     419ec4 <__ctype_b_loc@plt+0x17bf4>
  419e9f:	mov    al,BYTE PTR [rbx+0x9]
  419ea2:	test   al,0x4
  419ea4:	je     419ec4 <__ctype_b_loc@plt+0x17bf4>
  419ea6:	mov    rdi,QWORD PTR [r14+0x20]
  419eaa:	cmp    BYTE PTR [rdi+0x21],0x1
  419eae:	jne    419eb7 <__ctype_b_loc@plt+0x17be7>
  419eb0:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  419eb5:	jmp    419ec4 <__ctype_b_loc@plt+0x17bf4>
  419eb7:	and    al,0xf8
  419eb9:	mov    cl,BYTE PTR [rdi+0x20]
  419ebc:	and    cl,0x3
  419ebf:	or     cl,al
  419ec1:	mov    BYTE PTR [rbx+0x9],cl
  419ec4:	mov    eax,DWORD PTR [r12+0x40]
  419ec9:	lea    ecx,[rax+0x1]
  419ecc:	mov    DWORD PTR [r12+0x40],ecx
  419ed1:	add    rsp,0x18
  419ed5:	pop    rbx
  419ed6:	pop    r12
  419ed8:	pop    r13
  419eda:	pop    r14
  419edc:	pop    r15
  419ede:	pop    rbp
  419edf:	ret    
  419ee0:	mov    rax,QWORD PTR [rsp]
  419ee4:	mov    rdi,QWORD PTR [rax+0xa8]
  419eeb:	test   rdi,rdi
  419eee:	jne    419f2e <__ctype_b_loc@plt+0x17c5e>
  419ef0:	mov    rax,QWORD PTR [rsp]
  419ef4:	mov    BYTE PTR [rax+0xa],0x4
  419ef8:	mov    rax,QWORD PTR [rax+0x20]
  419efc:	cmp    QWORD PTR [rax+0x98],0x0
  419f04:	je     419f24 <__ctype_b_loc@plt+0x17c54>
  419f06:	mov    esi,0x4
  419f0b:	mov    rbx,QWORD PTR [rsp]
  419f0f:	mov    rdi,rbx
  419f12:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  419f17:	mov    rax,QWORD PTR [rbx+0x20]
  419f1b:	mov    rdi,rbx
  419f1e:	call   QWORD PTR [rax+0x98]
  419f24:	mov    edi,0x1
  419f29:	call   402280 <exit@plt>
  419f2e:	mov    DWORD PTR [rdi+0xd0],0x4
  419f38:	add    rdi,0x8
  419f3c:	mov    esi,0x1
  419f41:	call   402230 <longjmp@plt>
  419f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419f50:	push   rbp
  419f51:	push   r15
  419f53:	push   r14
  419f55:	push   rbx
  419f56:	sub    rsp,0x28
  419f5a:	mov    r15,rsi
  419f5d:	mov    r14,rdi
  419f60:	mov    ebp,DWORD PTR [rsi+0x10]
  419f63:	mov    ebx,DWORD PTR [rsi+0x14]
  419f66:	call   419010 <__ctype_b_loc@plt+0x16d40>
  419f6b:	cmp    ebp,ebx
  419f6d:	je     41a01e <__ctype_b_loc@plt+0x17d4e>
  419f73:	cmp    DWORD PTR [r15],0xc
  419f77:	jne    419f98 <__ctype_b_loc@plt+0x17cc8>
  419f79:	mov    eax,DWORD PTR [r15+0x10]
  419f7d:	cmp    eax,DWORD PTR [r15+0x14]
  419f81:	je     41a01e <__ctype_b_loc@plt+0x17d4e>
  419f87:	mov    edx,DWORD PTR [r15+0x8]
  419f8b:	movzx  eax,BYTE PTR [r14+0x4a]
  419f90:	cmp    edx,eax
  419f92:	jge    41a1a7 <__ctype_b_loc@plt+0x17ed7>
  419f98:	mov    rdi,r14
  419f9b:	mov    rsi,r15
  419f9e:	call   419010 <__ctype_b_loc@plt+0x16d40>
  419fa3:	cmp    DWORD PTR [r15],0xc
  419fa7:	jne    419fc2 <__ctype_b_loc@plt+0x17cf2>
  419fa9:	mov    eax,DWORD PTR [r15+0x8]
  419fad:	test   eax,0x100
  419fb2:	jne    419fc2 <__ctype_b_loc@plt+0x17cf2>
  419fb4:	movzx  ecx,BYTE PTR [r14+0x4a]
  419fb9:	cmp    eax,ecx
  419fbb:	jl     419fc2 <__ctype_b_loc@plt+0x17cf2>
  419fbd:	add    DWORD PTR [r14+0x3c],0xffffffff
  419fc2:	mov    ecx,DWORD PTR [r14+0x3c]
  419fc6:	lea    ebp,[rcx+0x1]
  419fc9:	mov    rax,QWORD PTR [r14]
  419fcc:	movzx  edx,BYTE PTR [rax+0x73]
  419fd0:	cmp    ecx,edx
  419fd2:	jl     41a00a <__ctype_b_loc@plt+0x17d3a>
  419fd4:	cmp    ecx,0xf9
  419fda:	jl     419fff <__ctype_b_loc@plt+0x17d2f>
  419fdc:	mov    rdi,QWORD PTR [r14+0x18]
  419fe0:	mov    edx,DWORD PTR [rdi+0x10]
  419fe3:	lea    rsi,[rip+0x11334]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  419fea:	call   413af0 <__ctype_b_loc@plt+0x11820>
  419fef:	mov    rax,QWORD PTR [r14]
  419ff2:	add    rax,0x73
  419ff6:	mov    ecx,DWORD PTR [r14+0x3c]
  419ffa:	add    ecx,0x1
  419ffd:	jmp    41a005 <__ctype_b_loc@plt+0x17d35>
  419fff:	add    rax,0x73
  41a003:	mov    ecx,ebp
  41a005:	mov    BYTE PTR [rax],bpl
  41a008:	mov    ebp,ecx
  41a00a:	mov    DWORD PTR [r14+0x3c],ebp
  41a00e:	add    ebp,0xffffffff
  41a011:	mov    rdi,r14
  41a014:	mov    rsi,r15
  41a017:	mov    edx,ebp
  41a019:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  41a01e:	mov    eax,DWORD PTR [r15]
  41a021:	lea    ecx,[rax-0x1]
  41a024:	cmp    ecx,0x3
  41a027:	jb     41a033 <__ctype_b_loc@plt+0x17d63>
  41a029:	cmp    eax,0x4
  41a02c:	je     41a07a <__ctype_b_loc@plt+0x17daa>
  41a02e:	cmp    eax,0x5
  41a031:	jne    41a08f <__ctype_b_loc@plt+0x17dbf>
  41a033:	cmp    DWORD PTR [r14+0x40],0xff
  41a03b:	jg     41a08f <__ctype_b_loc@plt+0x17dbf>
  41a03d:	cmp    eax,0x5
  41a040:	je     41a126 <__ctype_b_loc@plt+0x17e56>
  41a046:	cmp    eax,0x1
  41a049:	jne    41a139 <__ctype_b_loc@plt+0x17e69>
  41a04f:	mov    DWORD PTR [rsp+0x20],0x0
  41a057:	mov    rax,QWORD PTR [r14+0x8]
  41a05b:	mov    QWORD PTR [rsp+0x8],rax
  41a060:	mov    DWORD PTR [rsp+0x10],0x5
  41a068:	lea    rsi,[rsp+0x8]
  41a06d:	lea    rdx,[rsp+0x18]
  41a072:	mov    rdi,r14
  41a075:	jmp    41a158 <__ctype_b_loc@plt+0x17e88>
  41a07a:	mov    eax,DWORD PTR [r15+0x8]
  41a07e:	cmp    eax,0xff
  41a083:	jg     41a08f <__ctype_b_loc@plt+0x17dbf>
  41a085:	or     eax,0x100
  41a08a:	jmp    41a192 <__ctype_b_loc@plt+0x17ec2>
  41a08f:	mov    rdi,r14
  41a092:	mov    rsi,r15
  41a095:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41a09a:	cmp    DWORD PTR [r15],0xc
  41a09e:	jne    41a0bf <__ctype_b_loc@plt+0x17def>
  41a0a0:	mov    eax,DWORD PTR [r15+0x8]
  41a0a4:	mov    ecx,DWORD PTR [r15+0x10]
  41a0a8:	cmp    ecx,DWORD PTR [r15+0x14]
  41a0ac:	je     41a192 <__ctype_b_loc@plt+0x17ec2>
  41a0b2:	movzx  ecx,BYTE PTR [r14+0x4a]
  41a0b7:	cmp    eax,ecx
  41a0b9:	jge    41a19d <__ctype_b_loc@plt+0x17ecd>
  41a0bf:	mov    rdi,r14
  41a0c2:	mov    rsi,r15
  41a0c5:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41a0ca:	cmp    DWORD PTR [r15],0xc
  41a0ce:	jne    41a0e9 <__ctype_b_loc@plt+0x17e19>
  41a0d0:	mov    eax,DWORD PTR [r15+0x8]
  41a0d4:	test   eax,0x100
  41a0d9:	jne    41a0e9 <__ctype_b_loc@plt+0x17e19>
  41a0db:	movzx  ecx,BYTE PTR [r14+0x4a]
  41a0e0:	cmp    eax,ecx
  41a0e2:	jl     41a0e9 <__ctype_b_loc@plt+0x17e19>
  41a0e4:	add    DWORD PTR [r14+0x3c],0xffffffff
  41a0e9:	mov    ecx,DWORD PTR [r14+0x3c]
  41a0ed:	lea    ebp,[rcx+0x1]
  41a0f0:	mov    rax,QWORD PTR [r14]
  41a0f3:	movzx  edx,BYTE PTR [rax+0x73]
  41a0f7:	cmp    ecx,edx
  41a0f9:	jl     41a17a <__ctype_b_loc@plt+0x17eaa>
  41a0fb:	cmp    ecx,0xf9
  41a101:	jl     41a16f <__ctype_b_loc@plt+0x17e9f>
  41a103:	mov    rdi,QWORD PTR [r14+0x18]
  41a107:	mov    edx,DWORD PTR [rdi+0x10]
  41a10a:	lea    rsi,[rip+0x1120d]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41a111:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41a116:	mov    rax,QWORD PTR [r14]
  41a119:	add    rax,0x73
  41a11d:	mov    ecx,DWORD PTR [r14+0x3c]
  41a121:	add    ecx,0x1
  41a124:	jmp    41a175 <__ctype_b_loc@plt+0x17ea5>
  41a126:	mov    rax,QWORD PTR [r15+0x8]
  41a12a:	mov    QWORD PTR [rsp+0x8],rax
  41a12f:	mov    DWORD PTR [rsp+0x10],0x3
  41a137:	jmp    41a14d <__ctype_b_loc@plt+0x17e7d>
  41a139:	xor    ecx,ecx
  41a13b:	cmp    eax,0x2
  41a13e:	sete   cl
  41a141:	mov    DWORD PTR [rsp+0x8],ecx
  41a145:	mov    DWORD PTR [rsp+0x10],0x1
  41a14d:	lea    rsi,[rsp+0x8]
  41a152:	mov    rdi,r14
  41a155:	mov    rdx,rsi
  41a158:	call   419b00 <__ctype_b_loc@plt+0x17830>
  41a15d:	mov    DWORD PTR [r15+0x8],eax
  41a161:	mov    DWORD PTR [r15],0x4
  41a168:	or     eax,0x100
  41a16d:	jmp    41a192 <__ctype_b_loc@plt+0x17ec2>
  41a16f:	add    rax,0x73
  41a173:	mov    ecx,ebp
  41a175:	mov    BYTE PTR [rax],bpl
  41a178:	mov    ebp,ecx
  41a17a:	mov    DWORD PTR [r14+0x3c],ebp
  41a17e:	add    ebp,0xffffffff
  41a181:	mov    rdi,r14
  41a184:	mov    rsi,r15
  41a187:	mov    edx,ebp
  41a189:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  41a18e:	mov    eax,DWORD PTR [r15+0x8]
  41a192:	add    rsp,0x28
  41a196:	pop    rbx
  41a197:	pop    r14
  41a199:	pop    r15
  41a19b:	pop    rbp
  41a19c:	ret    
  41a19d:	mov    rdi,r14
  41a1a0:	mov    rsi,r15
  41a1a3:	mov    edx,eax
  41a1a5:	jmp    41a189 <__ctype_b_loc@plt+0x17eb9>
  41a1a7:	mov    rdi,r14
  41a1aa:	mov    rsi,r15
  41a1ad:	jmp    41a019 <__ctype_b_loc@plt+0x17d49>
  41a1b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a1bc:	nop    DWORD PTR [rax+0x0]
  41a1c0:	push   rbp
  41a1c1:	push   r15
  41a1c3:	push   r14
  41a1c5:	push   r13
  41a1c7:	push   r12
  41a1c9:	push   rbx
  41a1ca:	sub    rsp,0x58
  41a1ce:	mov    r14,rsi
  41a1d1:	mov    rbp,rdi
  41a1d4:	mov    r15,QWORD PTR [rdi+0x30]
  41a1d8:	mov    eax,DWORD PTR [rdi+0x4]
  41a1db:	mov    DWORD PTR [rsp+0x38],eax
  41a1df:	mov    rax,QWORD PTR [r15+0x18]
  41a1e3:	mov    edx,DWORD PTR [rax+0x8]
  41a1e6:	mov    esi,0xa
  41a1eb:	mov    rdi,r15
  41a1ee:	call   419630 <__ctype_b_loc@plt+0x17360>
  41a1f3:	mov    DWORD PTR [rsp+0x30],0x0
  41a1fb:	mov    QWORD PTR [rsp+0x28],0x0
  41a204:	mov    QWORD PTR [rsp+0x20],r14
  41a209:	mov    QWORD PTR [r14+0x10],0xffffffffffffffff
  41a211:	mov    DWORD PTR [r14],0xb
  41a218:	mov    DWORD PTR [rsp+0x3c],eax
  41a21c:	mov    DWORD PTR [r14+0x8],eax
  41a220:	mov    QWORD PTR [rsp+0x18],0xffffffffffffffff
  41a229:	mov    DWORD PTR [rsp+0x8],0x0
  41a231:	mov    DWORD PTR [rsp+0x10],0x0
  41a239:	mov    r12,QWORD PTR [rbp+0x30]
  41a23d:	mov    rdi,r12
  41a240:	mov    rsi,r14
  41a243:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41a248:	cmp    DWORD PTR [r14],0xc
  41a24c:	jne    41a269 <__ctype_b_loc@plt+0x17f99>
  41a24e:	mov    eax,DWORD PTR [r14+0x8]
  41a252:	test   eax,0x100
  41a257:	jne    41a269 <__ctype_b_loc@plt+0x17f99>
  41a259:	movzx  ecx,BYTE PTR [r12+0x4a]
  41a25f:	cmp    eax,ecx
  41a261:	jl     41a269 <__ctype_b_loc@plt+0x17f99>
  41a263:	add    DWORD PTR [r12+0x3c],0xffffffff
  41a269:	mov    ecx,DWORD PTR [r12+0x3c]
  41a26e:	lea    ebx,[rcx+0x1]
  41a271:	mov    rax,QWORD PTR [r12]
  41a275:	movzx  edx,BYTE PTR [rax+0x73]
  41a279:	cmp    ecx,edx
  41a27b:	jl     41a2b5 <__ctype_b_loc@plt+0x17fe5>
  41a27d:	cmp    ecx,0xf9
  41a283:	jl     41a2ab <__ctype_b_loc@plt+0x17fdb>
  41a285:	mov    rdi,QWORD PTR [r12+0x18]
  41a28a:	mov    edx,DWORD PTR [rdi+0x10]
  41a28d:	lea    rsi,[rip+0x1108a]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41a294:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41a299:	mov    rax,QWORD PTR [r12]
  41a29d:	add    rax,0x73
  41a2a1:	mov    ecx,DWORD PTR [r12+0x3c]
  41a2a6:	add    ecx,0x1
  41a2a9:	jmp    41a2b1 <__ctype_b_loc@plt+0x17fe1>
  41a2ab:	add    rax,0x73
  41a2af:	mov    ecx,ebx
  41a2b1:	mov    BYTE PTR [rax],bl
  41a2b3:	mov    ebx,ecx
  41a2b5:	mov    DWORD PTR [r12+0x3c],ebx
  41a2ba:	add    ebx,0xffffffff
  41a2bd:	mov    rdi,r12
  41a2c0:	mov    rsi,r14
  41a2c3:	mov    edx,ebx
  41a2c5:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  41a2ca:	cmp    DWORD PTR [rbp+0x10],0x7b
  41a2ce:	je     41a32b <__ctype_b_loc@plt+0x1805b>
  41a2d0:	mov    rbx,QWORD PTR [rbp+0x38]
  41a2d4:	call   4022d0 <__ctype_b_loc@plt>
  41a2d9:	mov    rax,QWORD PTR [rax]
  41a2dc:	movzx  eax,WORD PTR [rax+0xf6]
  41a2e3:	test   al,0x2
  41a2e5:	lea    rax,[rip+0x10f6f]        # 42b25b <__ctype_b_loc@plt+0x28f8b>
  41a2ec:	lea    rsi,[rip+0x10f5f]        # 42b252 <__ctype_b_loc@plt+0x28f82>
  41a2f3:	cmove  rsi,rax
  41a2f7:	mov    edx,0x7b
  41a2fc:	xor    eax,eax
  41a2fe:	mov    rdi,rbx
  41a301:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41a306:	mov    rcx,rax
  41a309:	lea    rsi,[rip+0x11185]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  41a310:	xor    eax,eax
  41a312:	mov    rdi,rbx
  41a315:	mov    rdx,rcx
  41a318:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41a31d:	mov    edx,DWORD PTR [rbp+0x10]
  41a320:	mov    rdi,rbp
  41a323:	mov    rsi,rax
  41a326:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41a32b:	mov    eax,DWORD PTR [rbp+0x4]
  41a32e:	mov    ecx,DWORD PTR [rbp+0x20]
  41a331:	mov    DWORD PTR [rbp+0x8],eax
  41a334:	lea    r12,[rbp+0x20]
  41a338:	cmp    ecx,0x11f
  41a33e:	jne    41a359 <__ctype_b_loc@plt+0x18089>
  41a340:	lea    rsi,[rbp+0x18]
  41a344:	mov    rdi,rbp
  41a347:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41a34c:	mov    DWORD PTR [rbp+0x10],eax
  41a34f:	cmp    eax,0x7d
  41a352:	jne    41a377 <__ctype_b_loc@plt+0x180a7>
  41a354:	jmp    41a5a4 <__ctype_b_loc@plt+0x182d4>
  41a359:	vmovups xmm0,XMMWORD PTR [r12]
  41a35f:	vmovups XMMWORD PTR [rbp+0x10],xmm0
  41a364:	mov    DWORD PTR [rbp+0x20],0x11f
  41a36b:	mov    eax,DWORD PTR [rbp+0x10]
  41a36e:	cmp    eax,0x7d
  41a371:	je     41a5a4 <__ctype_b_loc@plt+0x182d4>
  41a377:	lea    rax,[rbp+0x28]
  41a37b:	mov    QWORD PTR [rsp+0x50],rax
  41a380:	lea    rax,[rbp+0x18]
  41a384:	mov    QWORD PTR [rsp+0x48],rax
  41a389:	lea    rax,[rbp+0x10]
  41a38d:	mov    QWORD PTR [rsp+0x40],rax
  41a392:	xor    eax,eax
  41a394:	lea    r14,[rsp+0x8]
  41a399:	test   eax,eax
  41a39b:	jne    41a3bc <__ctype_b_loc@plt+0x180ec>
  41a39d:	jmp    41a4e0 <__ctype_b_loc@plt+0x18210>
  41a3a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a3ac:	nop    DWORD PTR [rax+0x0]
  41a3b0:	mov    eax,DWORD PTR [rsp+0x8]
  41a3b4:	test   eax,eax
  41a3b6:	je     41a4e0 <__ctype_b_loc@plt+0x18210>
  41a3bc:	mov    rdi,r15
  41a3bf:	mov    rsi,r14
  41a3c2:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41a3c7:	cmp    DWORD PTR [rsp+0x8],0xc
  41a3cc:	jne    41a3f0 <__ctype_b_loc@plt+0x18120>
  41a3ce:	mov    eax,DWORD PTR [rsp+0x10]
  41a3d2:	test   eax,0x100
  41a3d7:	jne    41a3f0 <__ctype_b_loc@plt+0x18120>
  41a3d9:	movzx  ecx,BYTE PTR [r15+0x4a]
  41a3de:	cmp    eax,ecx
  41a3e0:	jge    41a594 <__ctype_b_loc@plt+0x182c4>
  41a3e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a3f0:	mov    ecx,DWORD PTR [r15+0x3c]
  41a3f4:	lea    ebx,[rcx+0x1]
  41a3f7:	mov    rax,QWORD PTR [r15]
  41a3fa:	movzx  edx,BYTE PTR [rax+0x73]
  41a3fe:	cmp    ecx,edx
  41a400:	jl     41a43a <__ctype_b_loc@plt+0x1816a>
  41a402:	cmp    ecx,0xf9
  41a408:	jl     41a430 <__ctype_b_loc@plt+0x18160>
  41a40a:	mov    rdi,QWORD PTR [r15+0x18]
  41a40e:	mov    edx,DWORD PTR [rdi+0x10]
  41a411:	lea    rsi,[rip+0x10f06]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41a418:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41a41d:	mov    rax,QWORD PTR [r15]
  41a420:	add    rax,0x73
  41a424:	mov    ecx,DWORD PTR [r15+0x3c]
  41a428:	add    ecx,0x1
  41a42b:	jmp    41a436 <__ctype_b_loc@plt+0x18166>
  41a42d:	nop    DWORD PTR [rax]
  41a430:	add    rax,0x73
  41a434:	mov    ecx,ebx
  41a436:	mov    BYTE PTR [rax],bl
  41a438:	mov    ebx,ecx
  41a43a:	mov    DWORD PTR [r15+0x3c],ebx
  41a43e:	add    ebx,0xffffffff
  41a441:	mov    rdi,r15
  41a444:	mov    rsi,r14
  41a447:	mov    edx,ebx
  41a449:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  41a44e:	mov    DWORD PTR [rsp+0x8],0x0
  41a456:	cmp    DWORD PTR [rsp+0x30],0x32
  41a45b:	jne    41a4e0 <__ctype_b_loc@plt+0x18210>
  41a461:	mov    rax,QWORD PTR [rsp+0x20]
  41a466:	mov    r13d,DWORD PTR [rax+0x8]
  41a46a:	mov    eax,DWORD PTR [rsp+0x2c]
  41a46e:	lea    ecx,[rax-0x1]
  41a471:	movsxd rcx,ecx
  41a474:	imul   rcx,rcx,0x51eb851f
  41a47b:	mov    rdx,rcx
  41a47e:	sar    rdx,0x24
  41a482:	shr    rcx,0x3f
  41a486:	lea    ebx,[rdx+rcx*1]
  41a489:	add    ebx,0x1
  41a48c:	mov    esi,r13d
  41a48f:	shl    esi,0x6
  41a492:	or     esi,0x19000022
  41a498:	cmp    eax,0x63ce
  41a49d:	jg     41a4b0 <__ctype_b_loc@plt+0x181e0>
  41a49f:	shl    ebx,0xe
  41a4a2:	or     ebx,esi
  41a4a4:	jmp    41a4bf <__ctype_b_loc@plt+0x181ef>
  41a4a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a4b0:	mov    rax,QWORD PTR [r15+0x18]
  41a4b4:	mov    edx,DWORD PTR [rax+0x8]
  41a4b7:	mov    rdi,r15
  41a4ba:	call   419630 <__ctype_b_loc@plt+0x17360>
  41a4bf:	mov    rax,QWORD PTR [r15+0x18]
  41a4c3:	mov    edx,DWORD PTR [rax+0x8]
  41a4c6:	mov    rdi,r15
  41a4c9:	mov    esi,ebx
  41a4cb:	call   419630 <__ctype_b_loc@plt+0x17360>
  41a4d0:	add    r13d,0x1
  41a4d4:	mov    DWORD PTR [r15+0x3c],r13d
  41a4d8:	mov    DWORD PTR [rsp+0x30],0x0
  41a4e0:	mov    eax,DWORD PTR [rbp+0x10]
  41a4e3:	cmp    eax,0x5b
  41a4e6:	je     41a504 <__ctype_b_loc@plt+0x18234>
  41a4e8:	cmp    eax,0x11d
  41a4ed:	jne    41a520 <__ctype_b_loc@plt+0x18250>
  41a4ef:	mov    rdi,rbp
  41a4f2:	mov    rsi,QWORD PTR [rsp+0x50]
  41a4f7:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41a4fc:	mov    DWORD PTR [rbp+0x20],eax
  41a4ff:	cmp    eax,0x3d
  41a502:	jne    41a520 <__ctype_b_loc@plt+0x18250>
  41a504:	mov    rdi,rbp
  41a507:	mov    rsi,r14
  41a50a:	call   41b8c0 <__ctype_b_loc@plt+0x195f0>
  41a50f:	jmp    41a52b <__ctype_b_loc@plt+0x1825b>
  41a511:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a51b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a520:	mov    rdi,rbp
  41a523:	mov    rsi,r14
  41a526:	call   41b830 <__ctype_b_loc@plt+0x19560>
  41a52b:	mov    eax,DWORD PTR [rbp+0x10]
  41a52e:	cmp    eax,0x3b
  41a531:	je     41a538 <__ctype_b_loc@plt+0x18268>
  41a533:	cmp    eax,0x2c
  41a536:	jne    41a5a4 <__ctype_b_loc@plt+0x182d4>
  41a538:	mov    eax,DWORD PTR [rbp+0x4]
  41a53b:	mov    ecx,DWORD PTR [rbp+0x20]
  41a53e:	mov    DWORD PTR [rbp+0x8],eax
  41a541:	cmp    ecx,0x11f
  41a547:	jne    41a570 <__ctype_b_loc@plt+0x182a0>
  41a549:	mov    rdi,rbp
  41a54c:	mov    rsi,QWORD PTR [rsp+0x48]
  41a551:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41a556:	mov    DWORD PTR [rbp+0x10],eax
  41a559:	cmp    eax,0x7d
  41a55c:	jne    41a3b0 <__ctype_b_loc@plt+0x180e0>
  41a562:	jmp    41a5a4 <__ctype_b_loc@plt+0x182d4>
  41a564:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a56e:	xchg   ax,ax
  41a570:	vmovups xmm0,XMMWORD PTR [r12]
  41a576:	mov    rax,QWORD PTR [rsp+0x40]
  41a57b:	vmovups XMMWORD PTR [rax],xmm0
  41a57f:	mov    DWORD PTR [rbp+0x20],0x11f
  41a586:	mov    eax,DWORD PTR [rbp+0x10]
  41a589:	cmp    eax,0x7d
  41a58c:	jne    41a3b0 <__ctype_b_loc@plt+0x180e0>
  41a592:	jmp    41a5a4 <__ctype_b_loc@plt+0x182d4>
  41a594:	mov    ecx,DWORD PTR [r15+0x3c]
  41a598:	add    ecx,0xffffffff
  41a59b:	mov    DWORD PTR [r15+0x3c],ecx
  41a59f:	jmp    41a3f4 <__ctype_b_loc@plt+0x18124>
  41a5a4:	mov    esi,0x7d
  41a5a9:	mov    edx,0x7b
  41a5ae:	mov    rdi,rbp
  41a5b1:	mov    ecx,DWORD PTR [rsp+0x38]
  41a5b5:	call   417950 <__ctype_b_loc@plt+0x15680>
  41a5ba:	mov    eax,DWORD PTR [rsp+0x30]
  41a5be:	test   eax,eax
  41a5c0:	je     41a7fe <__ctype_b_loc@plt+0x1852e>
  41a5c6:	mov    ecx,DWORD PTR [rsp+0x8]
  41a5ca:	test   ecx,ecx
  41a5cc:	je     41a784 <__ctype_b_loc@plt+0x184b4>
  41a5d2:	cmp    ecx,0xe
  41a5d5:	je     41a5f8 <__ctype_b_loc@plt+0x18328>
  41a5d7:	cmp    ecx,0xd
  41a5da:	jne    41a66c <__ctype_b_loc@plt+0x1839c>
  41a5e0:	mov    rax,QWORD PTR [r15]
  41a5e3:	mov    rax,QWORD PTR [rax+0x18]
  41a5e7:	movsxd rcx,DWORD PTR [rsp+0x10]
  41a5ec:	and    DWORD PTR [rax+rcx*4],0xff803fff
  41a5f3:	jmp    41a6ef <__ctype_b_loc@plt+0x1841f>
  41a5f8:	mov    rax,QWORD PTR [r15]
  41a5fb:	mov    rcx,QWORD PTR [rax+0x18]
  41a5ff:	movsxd rdx,DWORD PTR [rsp+0x10]
  41a604:	and    DWORD PTR [rcx+rdx*4],0x7fffff
  41a60b:	movsxd rdx,DWORD PTR [rsp+0x10]
  41a610:	mov    esi,0xffffc03f
  41a615:	and    esi,DWORD PTR [rcx+rdx*4]
  41a618:	mov    edi,DWORD PTR [r15+0x3c]
  41a61c:	shl    edi,0x6
  41a61f:	and    edi,0x3fc0
  41a625:	or     edi,esi
  41a627:	mov    DWORD PTR [rcx+rdx*4],edi
  41a62a:	mov    ecx,DWORD PTR [r15+0x3c]
  41a62e:	lea    ebx,[rcx+0x1]
  41a631:	movzx  edx,BYTE PTR [rax+0x73]
  41a635:	cmp    ecx,edx
  41a637:	jl     41a6eb <__ctype_b_loc@plt+0x1841b>
  41a63d:	cmp    ecx,0xf9
  41a643:	jl     41a6e1 <__ctype_b_loc@plt+0x18411>
  41a649:	mov    rdi,QWORD PTR [r15+0x18]
  41a64d:	mov    edx,DWORD PTR [rdi+0x10]
  41a650:	lea    rsi,[rip+0x10cc7]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41a657:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41a65c:	mov    rax,QWORD PTR [r15]
  41a65f:	add    rax,0x73
  41a663:	mov    ecx,DWORD PTR [r15+0x3c]
  41a667:	add    ecx,0x1
  41a66a:	jmp    41a6e7 <__ctype_b_loc@plt+0x18417>
  41a66c:	lea    rsi,[rsp+0x8]
  41a671:	mov    rdi,r15
  41a674:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41a679:	cmp    DWORD PTR [rsp+0x8],0xc
  41a67e:	jne    41a699 <__ctype_b_loc@plt+0x183c9>
  41a680:	mov    eax,DWORD PTR [rsp+0x10]
  41a684:	test   eax,0x100
  41a689:	jne    41a699 <__ctype_b_loc@plt+0x183c9>
  41a68b:	movzx  ecx,BYTE PTR [r15+0x4a]
  41a690:	cmp    eax,ecx
  41a692:	jl     41a699 <__ctype_b_loc@plt+0x183c9>
  41a694:	add    DWORD PTR [r15+0x3c],0xffffffff
  41a699:	mov    ecx,DWORD PTR [r15+0x3c]
  41a69d:	lea    ebx,[rcx+0x1]
  41a6a0:	mov    rax,QWORD PTR [r15]
  41a6a3:	movzx  edx,BYTE PTR [rax+0x73]
  41a6a7:	cmp    ecx,edx
  41a6a9:	jl     41a76a <__ctype_b_loc@plt+0x1849a>
  41a6af:	cmp    ecx,0xf9
  41a6b5:	jl     41a760 <__ctype_b_loc@plt+0x18490>
  41a6bb:	mov    rdi,QWORD PTR [r15+0x18]
  41a6bf:	mov    edx,DWORD PTR [rdi+0x10]
  41a6c2:	lea    rsi,[rip+0x10c55]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41a6c9:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41a6ce:	mov    rax,QWORD PTR [r15]
  41a6d1:	add    rax,0x73
  41a6d5:	mov    ecx,DWORD PTR [r15+0x3c]
  41a6d9:	add    ecx,0x1
  41a6dc:	jmp    41a766 <__ctype_b_loc@plt+0x18496>
  41a6e1:	add    rax,0x73
  41a6e5:	mov    ecx,ebx
  41a6e7:	mov    BYTE PTR [rax],bl
  41a6e9:	mov    ebx,ecx
  41a6eb:	mov    DWORD PTR [r15+0x3c],ebx
  41a6ef:	mov    rax,QWORD PTR [rsp+0x20]
  41a6f4:	mov    ebp,DWORD PTR [rax+0x8]
  41a6f7:	mov    eax,DWORD PTR [rsp+0x2c]
  41a6fb:	lea    ecx,[rax-0x1]
  41a6fe:	movsxd rcx,ecx
  41a701:	imul   rcx,rcx,0x51eb851f
  41a708:	mov    rdx,rcx
  41a70b:	sar    rdx,0x24
  41a70f:	shr    rcx,0x3f
  41a713:	lea    ebx,[rdx+rcx*1]
  41a716:	add    ebx,0x1
  41a719:	mov    esi,ebp
  41a71b:	shl    esi,0x6
  41a71e:	or     esi,0x22
  41a721:	cmp    eax,0x63ce
  41a726:	jg     41a72f <__ctype_b_loc@plt+0x1845f>
  41a728:	shl    ebx,0xe
  41a72b:	or     ebx,esi
  41a72d:	jmp    41a73e <__ctype_b_loc@plt+0x1846e>
  41a72f:	mov    rax,QWORD PTR [r15+0x18]
  41a733:	mov    edx,DWORD PTR [rax+0x8]
  41a736:	mov    rdi,r15
  41a739:	call   419630 <__ctype_b_loc@plt+0x17360>
  41a73e:	mov    rax,QWORD PTR [r15+0x18]
  41a742:	mov    edx,DWORD PTR [rax+0x8]
  41a745:	mov    rdi,r15
  41a748:	mov    esi,ebx
  41a74a:	call   419630 <__ctype_b_loc@plt+0x17360>
  41a74f:	add    ebp,0x1
  41a752:	mov    DWORD PTR [r15+0x3c],ebp
  41a756:	add    DWORD PTR [rsp+0x2c],0xffffffff
  41a75b:	jmp    41a7fe <__ctype_b_loc@plt+0x1852e>
  41a760:	add    rax,0x73
  41a764:	mov    ecx,ebx
  41a766:	mov    BYTE PTR [rax],bl
  41a768:	mov    ebx,ecx
  41a76a:	mov    DWORD PTR [r15+0x3c],ebx
  41a76e:	add    ebx,0xffffffff
  41a771:	lea    rsi,[rsp+0x8]
  41a776:	mov    rdi,r15
  41a779:	mov    edx,ebx
  41a77b:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  41a780:	mov    eax,DWORD PTR [rsp+0x30]
  41a784:	mov    rcx,QWORD PTR [rsp+0x20]
  41a789:	mov    ebp,DWORD PTR [rcx+0x8]
  41a78c:	mov    ecx,DWORD PTR [rsp+0x2c]
  41a790:	lea    edx,[rcx-0x1]
  41a793:	movsxd rdx,edx
  41a796:	imul   rdx,rdx,0x51eb851f
  41a79d:	mov    rsi,rdx
  41a7a0:	sar    rsi,0x24
  41a7a4:	shr    rdx,0x3f
  41a7a8:	lea    ebx,[rsi+rdx*1]
  41a7ab:	add    ebx,0x1
  41a7ae:	mov    edx,ebp
  41a7b0:	shl    edx,0x6
  41a7b3:	mov    edi,eax
  41a7b5:	shl    edi,0x17
  41a7b8:	or     edi,0x22
  41a7bb:	cmp    eax,0xffffffff
  41a7be:	mov    esi,0x22
  41a7c3:	cmovne esi,edi
  41a7c6:	or     esi,edx
  41a7c8:	cmp    ecx,0x63ce
  41a7ce:	jg     41a7d7 <__ctype_b_loc@plt+0x18507>
  41a7d0:	shl    ebx,0xe
  41a7d3:	or     ebx,esi
  41a7d5:	jmp    41a7e6 <__ctype_b_loc@plt+0x18516>
  41a7d7:	mov    rax,QWORD PTR [r15+0x18]
  41a7db:	mov    edx,DWORD PTR [rax+0x8]
  41a7de:	mov    rdi,r15
  41a7e1:	call   419630 <__ctype_b_loc@plt+0x17360>
  41a7e6:	mov    rax,QWORD PTR [r15+0x18]
  41a7ea:	mov    edx,DWORD PTR [rax+0x8]
  41a7ed:	mov    rdi,r15
  41a7f0:	mov    esi,ebx
  41a7f2:	call   419630 <__ctype_b_loc@plt+0x17360>
  41a7f7:	add    ebp,0x1
  41a7fa:	mov    DWORD PTR [r15+0x3c],ebp
  41a7fe:	mov    rax,QWORD PTR [r15]
  41a801:	mov    rax,QWORD PTR [rax+0x18]
  41a805:	movsxd rcx,DWORD PTR [rsp+0x3c]
  41a80a:	mov    edi,0x7fffff
  41a80f:	and    edi,DWORD PTR [rax+rcx*4]
  41a812:	mov    esi,DWORD PTR [rsp+0x2c]
  41a816:	mov    edx,0x8
  41a81b:	cmp    esi,0x10
  41a81e:	jb     41a843 <__ctype_b_loc@plt+0x18573>
  41a820:	mov    ebp,0x8
  41a825:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a82f:	nop
  41a830:	add    esi,0x1
  41a833:	mov    ebx,esi
  41a835:	shr    ebx,1
  41a837:	add    ebp,0x8
  41a83a:	cmp    esi,0x1f
  41a83d:	mov    esi,ebx
  41a83f:	ja     41a830 <__ctype_b_loc@plt+0x18560>
  41a841:	jmp    41a84a <__ctype_b_loc@plt+0x1857a>
  41a843:	mov    ebx,esi
  41a845:	mov    ebp,0x8
  41a84a:	lea    esi,[rbx+0x1f8]
  41a850:	or     esi,ebp
  41a852:	cmp    ebx,0x8
  41a855:	cmovb  esi,ebx
  41a858:	shl    esi,0x17
  41a85b:	or     esi,edi
  41a85d:	mov    DWORD PTR [rax+rcx*4],esi
  41a860:	and    esi,0xff803fff
  41a866:	mov    ebp,DWORD PTR [rsp+0x28]
  41a86a:	cmp    ebp,0x10
  41a86d:	jb     41a893 <__ctype_b_loc@plt+0x185c3>
  41a86f:	mov    edx,0x8
  41a874:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a87e:	xchg   ax,ax
  41a880:	add    ebp,0x1
  41a883:	mov    edi,ebp
  41a885:	shr    edi,1
  41a887:	add    edx,0x8
  41a88a:	cmp    ebp,0x1f
  41a88d:	mov    ebp,edi
  41a88f:	ja     41a880 <__ctype_b_loc@plt+0x185b0>
  41a891:	jmp    41a895 <__ctype_b_loc@plt+0x185c5>
  41a893:	mov    edi,ebp
  41a895:	lea    ebp,[rdi+0x1f8]
  41a89b:	or     ebp,edx
  41a89d:	cmp    edi,0x8
  41a8a0:	cmovb  ebp,edi
  41a8a3:	shl    ebp,0xe
  41a8a6:	and    ebp,0x7fc000
  41a8ac:	or     ebp,esi
  41a8ae:	mov    DWORD PTR [rax+rcx*4],ebp
  41a8b1:	add    rsp,0x58
  41a8b5:	pop    rbx
  41a8b6:	pop    r12
  41a8b8:	pop    r13
  41a8ba:	pop    r14
  41a8bc:	pop    r15
  41a8be:	pop    rbp
  41a8bf:	ret    
  41a8c0:	push   rbp
  41a8c1:	push   r15
  41a8c3:	push   r14
  41a8c5:	push   r13
  41a8c7:	push   r12
  41a8c9:	push   rbx
  41a8ca:	sub    rsp,0x288
  41a8d1:	mov    ebp,ecx
  41a8d3:	mov    r14d,edx
  41a8d6:	mov    QWORD PTR [rsp+0x28],rsi
  41a8db:	mov    rbx,rdi
  41a8de:	lea    rsi,[rsp+0x30]
  41a8e3:	call   411390 <__ctype_b_loc@plt+0xf0c0>
  41a8e8:	mov    rax,QWORD PTR [rsp+0x30]
  41a8ed:	mov    DWORD PTR [rsp+0x8],ebp
  41a8f1:	mov    DWORD PTR [rax+0x60],ebp
  41a8f4:	cmp    DWORD PTR [rbx+0x10],0x28
  41a8f8:	je     41a952 <__ctype_b_loc@plt+0x18682>
  41a8fa:	mov    rbp,QWORD PTR [rbx+0x38]
  41a8fe:	call   4022d0 <__ctype_b_loc@plt>
  41a903:	mov    rax,QWORD PTR [rax]
  41a906:	movzx  eax,WORD PTR [rax+0x50]
  41a90a:	test   al,0x2
  41a90c:	lea    rax,[rip+0x10948]        # 42b25b <__ctype_b_loc@plt+0x28f8b>
  41a913:	lea    rsi,[rip+0x10938]        # 42b252 <__ctype_b_loc@plt+0x28f82>
  41a91a:	cmove  rsi,rax
  41a91e:	mov    edx,0x28
  41a923:	xor    eax,eax
  41a925:	mov    rdi,rbp
  41a928:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41a92d:	mov    rcx,rax
  41a930:	lea    rsi,[rip+0x10b5e]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  41a937:	xor    eax,eax
  41a939:	mov    rdi,rbp
  41a93c:	mov    rdx,rcx
  41a93f:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41a944:	mov    edx,DWORD PTR [rbx+0x10]
  41a947:	mov    rdi,rbx
  41a94a:	mov    rsi,rax
  41a94d:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41a952:	mov    eax,DWORD PTR [rbx+0x4]
  41a955:	mov    ecx,DWORD PTR [rbx+0x20]
  41a958:	mov    DWORD PTR [rbx+0x8],eax
  41a95b:	lea    r12,[rbx+0x20]
  41a95f:	cmp    ecx,0x11f
  41a965:	jne    41a9d5 <__ctype_b_loc@plt+0x18705>
  41a967:	lea    rsi,[rbx+0x18]
  41a96b:	mov    rdi,rbx
  41a96e:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41a973:	mov    DWORD PTR [rbx+0x10],eax
  41a976:	test   r14d,r14d
  41a979:	je     41a9ec <__ctype_b_loc@plt+0x1871c>
  41a97b:	lea    rsi,[rip+0x10a4b]        # 42b3cd <__ctype_b_loc@plt+0x290fd>
  41a982:	mov    edx,0x4
  41a987:	mov    rdi,rbx
  41a98a:	call   414680 <__ctype_b_loc@plt+0x123b0>
  41a98f:	xor    edx,edx
  41a991:	mov    rdi,rbx
  41a994:	mov    rsi,rax
  41a997:	call   41bcd0 <__ctype_b_loc@plt+0x19a00>
  41a99c:	lea    rax,[rbx+0x30]
  41a9a0:	mov    QWORD PTR [rsp+0x10],rax
  41a9a5:	mov    r13,QWORD PTR [rbx+0x30]
  41a9a9:	mov    al,BYTE PTR [r13+0x4a]
  41a9ad:	add    al,0x1
  41a9af:	mov    BYTE PTR [r13+0x4a],al
  41a9b3:	mov    ecx,DWORD PTR [r13+0x30]
  41a9b7:	mov    rbp,QWORD PTR [r13+0x0]
  41a9bb:	mov    rdx,QWORD PTR [rbp+0x30]
  41a9bf:	movzx  eax,al
  41a9c2:	movzx  eax,WORD PTR [r13+rax*2+0xc2]
  41a9cb:	shl    rax,0x4
  41a9cf:	mov    DWORD PTR [rdx+rax*1+0x8],ecx
  41a9d3:	jmp    41a9fd <__ctype_b_loc@plt+0x1872d>
  41a9d5:	vmovups xmm0,XMMWORD PTR [r12]
  41a9db:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41a9e0:	mov    DWORD PTR [rbx+0x20],0x11f
  41a9e7:	test   r14d,r14d
  41a9ea:	jne    41a97b <__ctype_b_loc@plt+0x186ab>
  41a9ec:	lea    rax,[rbx+0x30]
  41a9f0:	mov    QWORD PTR [rsp+0x10],rax
  41a9f5:	mov    r13,QWORD PTR [rbx+0x30]
  41a9f9:	mov    rbp,QWORD PTR [r13+0x0]
  41a9fd:	mov    BYTE PTR [rbp+0x72],0x0
  41aa01:	mov    edx,DWORD PTR [rbx+0x10]
  41aa04:	xor    r11d,r11d
  41aa07:	mov    r14d,0x0
  41aa0d:	cmp    edx,0x29
  41aa10:	mov    QWORD PTR [rsp],r12
  41aa14:	mov    QWORD PTR [rsp+0x20],rbp
  41aa19:	je     41ab7f <__ctype_b_loc@plt+0x188af>
  41aa1f:	mov    QWORD PTR [rsp+0x18],r13
  41aa24:	lea    r12,[rbx+0x18]
  41aa28:	lea    r13,[rbx+0x10]
  41aa2c:	xor    r14d,r14d
  41aa2f:	cmp    edx,0x11d
  41aa35:	jne    41aa60 <__ctype_b_loc@plt+0x18790>
  41aa37:	jmp    41aa80 <__ctype_b_loc@plt+0x187b0>
  41aa39:	nop    DWORD PTR [rax+0x0]
  41aa40:	mov    rax,QWORD PTR [rsp]
  41aa44:	vmovups xmm0,XMMWORD PTR [rax]
  41aa48:	vmovups XMMWORD PTR [r13+0x0],xmm0
  41aa4e:	mov    DWORD PTR [rbx+0x20],0x11f
  41aa55:	mov    edx,DWORD PTR [rbx+0x10]
  41aa58:	cmp    edx,0x11d
  41aa5e:	je     41aa80 <__ctype_b_loc@plt+0x187b0>
  41aa60:	cmp    edx,0x117
  41aa66:	je     41ab23 <__ctype_b_loc@plt+0x18853>
  41aa6c:	mov    rdi,rbx
  41aa6f:	lea    rsi,[rip+0x10975]        # 42b3eb <__ctype_b_loc@plt+0x2911b>
  41aa76:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41aa7b:	jmp    41aade <__ctype_b_loc@plt+0x1880e>
  41aa7d:	nop    DWORD PTR [rax]
  41aa80:	mov    r15,QWORD PTR [rbx+0x18]
  41aa84:	mov    eax,DWORD PTR [rbx+0x4]
  41aa87:	mov    DWORD PTR [rbx+0x8],eax
  41aa8a:	cmp    DWORD PTR [rbx+0x20],0x11f
  41aa91:	jne    41aab0 <__ctype_b_loc@plt+0x187e0>
  41aa93:	mov    rdi,rbx
  41aa96:	mov    rsi,r12
  41aa99:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41aa9e:	mov    DWORD PTR [rbx+0x10],eax
  41aaa1:	jmp    41aac4 <__ctype_b_loc@plt+0x187f4>
  41aaa3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aaad:	nop    DWORD PTR [rax]
  41aab0:	mov    rax,QWORD PTR [rsp]
  41aab4:	vmovups xmm0,XMMWORD PTR [rax]
  41aab8:	vmovups XMMWORD PTR [r13+0x0],xmm0
  41aabe:	mov    DWORD PTR [rax],0x11f
  41aac4:	lea    ebp,[r14+0x1]
  41aac8:	mov    rdi,rbx
  41aacb:	mov    rsi,r15
  41aace:	mov    edx,r14d
  41aad1:	call   41bcd0 <__ctype_b_loc@plt+0x19a00>
  41aad6:	mov    r14d,ebp
  41aad9:	mov    rbp,QWORD PTR [rsp+0x20]
  41aade:	mov    r11b,BYTE PTR [rbp+0x72]
  41aae2:	test   r11b,r11b
  41aae5:	jne    41ab4b <__ctype_b_loc@plt+0x1887b>
  41aae7:	cmp    DWORD PTR [rbx+0x10],0x2c
  41aaeb:	jne    41ab48 <__ctype_b_loc@plt+0x18878>
  41aaed:	mov    eax,DWORD PTR [rbx+0x4]
  41aaf0:	mov    ecx,DWORD PTR [rbx+0x20]
  41aaf3:	mov    DWORD PTR [rbx+0x8],eax
  41aaf6:	cmp    ecx,0x11f
  41aafc:	jne    41aa40 <__ctype_b_loc@plt+0x18770>
  41ab02:	mov    rdi,rbx
  41ab05:	mov    rsi,r12
  41ab08:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41ab0d:	mov    edx,eax
  41ab0f:	mov    DWORD PTR [rbx+0x10],eax
  41ab12:	cmp    edx,0x11d
  41ab18:	jne    41aa60 <__ctype_b_loc@plt+0x18790>
  41ab1e:	jmp    41aa80 <__ctype_b_loc@plt+0x187b0>
  41ab23:	mov    eax,DWORD PTR [rbx+0x4]
  41ab26:	mov    ecx,DWORD PTR [rbx+0x20]
  41ab29:	mov    DWORD PTR [rbx+0x8],eax
  41ab2c:	cmp    ecx,0x11f
  41ab32:	jne    41ab56 <__ctype_b_loc@plt+0x18886>
  41ab34:	mov    rdi,rbx
  41ab37:	mov    rsi,r12
  41ab3a:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41ab3f:	mov    DWORD PTR [rbx+0x10],eax
  41ab42:	mov    r12,QWORD PTR [rsp]
  41ab46:	jmp    41ab6e <__ctype_b_loc@plt+0x1889e>
  41ab48:	xor    r11d,r11d
  41ab4b:	mov    r12,QWORD PTR [rsp]
  41ab4f:	mov    r13,QWORD PTR [rsp+0x18]
  41ab54:	jmp    41ab7f <__ctype_b_loc@plt+0x188af>
  41ab56:	mov    r12,QWORD PTR [rsp]
  41ab5a:	vmovups xmm0,XMMWORD PTR [r12]
  41ab60:	vmovups XMMWORD PTR [r13+0x0],xmm0
  41ab66:	mov    DWORD PTR [r12],0x11f
  41ab6e:	mov    r13,QWORD PTR [rsp+0x18]
  41ab73:	mov    r11b,BYTE PTR [rbp+0x72]
  41ab77:	or     r11b,0x2
  41ab7b:	mov    BYTE PTR [rbp+0x72],r11b
  41ab7f:	mov    rax,QWORD PTR [rsp+0x10]
  41ab84:	mov    rcx,QWORD PTR [rax]
  41ab87:	mov    dil,BYTE PTR [rcx+0x4a]
  41ab8b:	add    dil,r14b
  41ab8e:	mov    BYTE PTR [rcx+0x4a],dil
  41ab92:	test   r14d,r14d
  41ab95:	je     41ac90 <__ctype_b_loc@plt+0x189c0>
  41ab9b:	mov    edx,DWORD PTR [rcx+0x30]
  41ab9e:	mov    rsi,QWORD PTR [rcx]
  41aba1:	mov    rsi,QWORD PTR [rsi+0x30]
  41aba5:	movsxd r10,r14d
  41aba8:	movzx  r8d,dil
  41abac:	lea    r9d,[r14-0x1]
  41abb0:	test   r14b,0x7
  41abb4:	je     41abf8 <__ctype_b_loc@plt+0x18928>
  41abb6:	lea    rdi,[r8+r8*1]
  41abba:	add    rdi,0xc4
  41abc1:	lea    rbp,[r10+r10*1]
  41abc5:	sub    rdi,rbp
  41abc8:	add    rdi,rcx
  41abcb:	and    r14d,0x7
  41abcf:	xor    ebp,ebp
  41abd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41abdb:	nop    DWORD PTR [rax+rax*1+0x0]
  41abe0:	movzx  eax,WORD PTR [rdi+rbp*2]
  41abe4:	shl    rax,0x4
  41abe8:	mov    DWORD PTR [rsi+rax*1+0x8],edx
  41abec:	add    rbp,0x1
  41abf0:	cmp    r14d,ebp
  41abf3:	jne    41abe0 <__ctype_b_loc@plt+0x18910>
  41abf5:	sub    r10,rbp
  41abf8:	cmp    r9d,0x7
  41abfc:	jb     41ac90 <__ctype_b_loc@plt+0x189c0>
  41ac02:	lea    rax,[r8+r8*1]
  41ac06:	add    rax,0xd2
  41ac0c:	lea    rdi,[r10+r10*1]
  41ac10:	sub    rax,rdi
  41ac13:	add    rcx,rax
  41ac16:	xor    ebp,ebp
  41ac18:	nop    DWORD PTR [rax+rax*1+0x0]
  41ac20:	movzx  eax,WORD PTR [rcx+rbp*2-0xe]
  41ac25:	shl    rax,0x4
  41ac29:	mov    DWORD PTR [rsi+rax*1+0x8],edx
  41ac2d:	movzx  eax,WORD PTR [rcx+rbp*2-0xc]
  41ac32:	shl    rax,0x4
  41ac36:	mov    DWORD PTR [rsi+rax*1+0x8],edx
  41ac3a:	movzx  eax,WORD PTR [rcx+rbp*2-0xa]
  41ac3f:	shl    rax,0x4
  41ac43:	mov    DWORD PTR [rsi+rax*1+0x8],edx
  41ac47:	movzx  eax,WORD PTR [rcx+rbp*2-0x8]
  41ac4c:	shl    rax,0x4
  41ac50:	mov    DWORD PTR [rsi+rax*1+0x8],edx
  41ac54:	movzx  eax,WORD PTR [rcx+rbp*2-0x6]
  41ac59:	shl    rax,0x4
  41ac5d:	mov    DWORD PTR [rsi+rax*1+0x8],edx
  41ac61:	movzx  eax,WORD PTR [rcx+rbp*2-0x4]
  41ac66:	shl    rax,0x4
  41ac6a:	mov    DWORD PTR [rsi+rax*1+0x8],edx
  41ac6e:	movzx  eax,WORD PTR [rcx+rbp*2-0x2]
  41ac73:	shl    rax,0x4
  41ac77:	mov    DWORD PTR [rsi+rax*1+0x8],edx
  41ac7b:	movzx  eax,WORD PTR [rcx+rbp*2]
  41ac7f:	shl    rax,0x4
  41ac83:	mov    DWORD PTR [rsi+rax*1+0x8],edx
  41ac87:	add    rbp,0x8
  41ac8b:	cmp    r10d,ebp
  41ac8e:	jne    41ac20 <__ctype_b_loc@plt+0x18950>
  41ac90:	movzx  r15d,BYTE PTR [r13+0x4a]
  41ac95:	and    r11b,0x1
  41ac99:	mov    eax,r15d
  41ac9c:	sub    al,r11b
  41ac9f:	mov    rcx,QWORD PTR [rsp+0x20]
  41aca4:	mov    BYTE PTR [rcx+0x71],al
  41aca7:	mov    ebp,DWORD PTR [r13+0x3c]
  41acab:	add    ebp,r15d
  41acae:	mov    rax,QWORD PTR [r13+0x0]
  41acb2:	movzx  ecx,BYTE PTR [rax+0x73]
  41acb6:	cmp    ebp,ecx
  41acb8:	jle    41ace8 <__ctype_b_loc@plt+0x18a18>
  41acba:	cmp    ebp,0xfa
  41acc0:	mov    r14d,DWORD PTR [rsp+0x8]
  41acc5:	jl     41acef <__ctype_b_loc@plt+0x18a1f>
  41acc7:	mov    rdi,QWORD PTR [r13+0x18]
  41accb:	mov    edx,DWORD PTR [rdi+0x10]
  41acce:	lea    rsi,[rip+0x10649]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41acd5:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41acda:	mov    rax,QWORD PTR [r13+0x0]
  41acde:	add    rax,0x73
  41ace2:	add    r15d,DWORD PTR [r13+0x3c]
  41ace6:	jmp    41acf6 <__ctype_b_loc@plt+0x18a26>
  41ace8:	mov    r14d,DWORD PTR [rsp+0x8]
  41aced:	jmp    41acfc <__ctype_b_loc@plt+0x18a2c>
  41acef:	add    rax,0x73
  41acf3:	mov    r15d,ebp
  41acf6:	mov    BYTE PTR [rax],bpl
  41acf9:	mov    ebp,r15d
  41acfc:	mov    DWORD PTR [r13+0x3c],ebp
  41ad00:	cmp    DWORD PTR [rbx+0x10],0x29
  41ad04:	je     41ad5e <__ctype_b_loc@plt+0x18a8e>
  41ad06:	mov    rbp,QWORD PTR [rbx+0x38]
  41ad0a:	call   4022d0 <__ctype_b_loc@plt>
  41ad0f:	mov    rax,QWORD PTR [rax]
  41ad12:	movzx  eax,WORD PTR [rax+0x52]
  41ad16:	test   al,0x2
  41ad18:	lea    rax,[rip+0x1053c]        # 42b25b <__ctype_b_loc@plt+0x28f8b>
  41ad1f:	lea    rsi,[rip+0x1052c]        # 42b252 <__ctype_b_loc@plt+0x28f82>
  41ad26:	cmove  rsi,rax
  41ad2a:	mov    edx,0x29
  41ad2f:	xor    eax,eax
  41ad31:	mov    rdi,rbp
  41ad34:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41ad39:	mov    rcx,rax
  41ad3c:	lea    rsi,[rip+0x10752]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  41ad43:	xor    eax,eax
  41ad45:	mov    rdi,rbp
  41ad48:	mov    rdx,rcx
  41ad4b:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41ad50:	mov    edx,DWORD PTR [rbx+0x10]
  41ad53:	mov    rdi,rbx
  41ad56:	mov    rsi,rax
  41ad59:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41ad5e:	mov    eax,DWORD PTR [rbx+0x4]
  41ad61:	mov    ecx,DWORD PTR [rbx+0x20]
  41ad64:	mov    DWORD PTR [rbx+0x8],eax
  41ad67:	cmp    ecx,0x11f
  41ad6d:	jne    41ad80 <__ctype_b_loc@plt+0x18ab0>
  41ad6f:	lea    rsi,[rbx+0x18]
  41ad73:	mov    rdi,rbx
  41ad76:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41ad7b:	mov    DWORD PTR [rbx+0x10],eax
  41ad7e:	jmp    41ad92 <__ctype_b_loc@plt+0x18ac2>
  41ad80:	vmovups xmm0,XMMWORD PTR [r12]
  41ad86:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41ad8b:	mov    DWORD PTR [rbx+0x20],0x11f
  41ad92:	mov    rax,QWORD PTR [rbx+0x38]
  41ad96:	mov    ecx,DWORD PTR [rax+0x60]
  41ad99:	add    ecx,0x1
  41ad9c:	mov    WORD PTR [rax+0x60],cx
  41ada0:	movzx  eax,cx
  41ada3:	cmp    eax,0xc9
  41ada8:	jb     41adbb <__ctype_b_loc@plt+0x18aeb>
  41adaa:	lea    rsi,[rip+0x10506]        # 42b2b7 <__ctype_b_loc@plt+0x28fe7>
  41adb1:	xor    edx,edx
  41adb3:	mov    rdi,rbx
  41adb6:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41adbb:	lea    r12,[rbx+0x18]
  41adbf:	lea    r15,[rbx+0x10]
  41adc3:	mov    r13d,0x8010007
  41adc9:	nop    DWORD PTR [rax+0x0]
  41add0:	mov    eax,DWORD PTR [rbx+0x10]
  41add3:	lea    ecx,[rax-0x104]
  41add9:	cmp    ecx,0x1b
  41addc:	ja     41ade4 <__ctype_b_loc@plt+0x18b14>
  41adde:	bt     r13d,ecx
  41ade2:	jb     41ae49 <__ctype_b_loc@plt+0x18b79>
  41ade4:	mov    rdi,rbx
  41ade7:	call   414750 <__ctype_b_loc@plt+0x12480>
  41adec:	mov    ebp,eax
  41adee:	cmp    DWORD PTR [rbx+0x10],0x3b
  41adf2:	jne    41ae33 <__ctype_b_loc@plt+0x18b63>
  41adf4:	mov    eax,DWORD PTR [rbx+0x4]
  41adf7:	mov    ecx,DWORD PTR [rbx+0x20]
  41adfa:	mov    DWORD PTR [rbx+0x8],eax
  41adfd:	cmp    ecx,0x11f
  41ae03:	jne    41ae20 <__ctype_b_loc@plt+0x18b50>
  41ae05:	mov    rdi,rbx
  41ae08:	mov    rsi,r12
  41ae0b:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41ae10:	mov    DWORD PTR [rbx+0x10],eax
  41ae13:	jmp    41ae33 <__ctype_b_loc@plt+0x18b63>
  41ae15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae1f:	nop
  41ae20:	mov    rax,QWORD PTR [rsp]
  41ae24:	vmovups xmm0,XMMWORD PTR [rax]
  41ae28:	vmovups XMMWORD PTR [r15],xmm0
  41ae2d:	mov    DWORD PTR [rax],0x11f
  41ae33:	mov    rax,QWORD PTR [rsp+0x10]
  41ae38:	mov    rax,QWORD PTR [rax]
  41ae3b:	movzx  ecx,BYTE PTR [rax+0x4a]
  41ae3f:	mov    DWORD PTR [rax+0x3c],ecx
  41ae42:	test   ebp,ebp
  41ae44:	je     41add0 <__ctype_b_loc@plt+0x18b00>
  41ae46:	mov    eax,DWORD PTR [rbx+0x10]
  41ae49:	mov    rdi,QWORD PTR [rbx+0x38]
  41ae4d:	add    WORD PTR [rdi+0x60],0xffff
  41ae52:	mov    ecx,DWORD PTR [rbx+0x4]
  41ae55:	mov    rdx,QWORD PTR [rsp+0x30]
  41ae5a:	mov    DWORD PTR [rdx+0x64],ecx
  41ae5d:	cmp    eax,0x106
  41ae62:	jne    41ae80 <__ctype_b_loc@plt+0x18bb0>
  41ae64:	mov    DWORD PTR [rbx+0x8],ecx
  41ae67:	cmp    DWORD PTR [rbx+0x20],0x11f
  41ae6e:	jne    41ae9c <__ctype_b_loc@plt+0x18bcc>
  41ae70:	mov    rdi,rbx
  41ae73:	mov    rsi,r12
  41ae76:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41ae7b:	mov    DWORD PTR [rbx+0x10],eax
  41ae7e:	jmp    41aede <__ctype_b_loc@plt+0x18c0e>
  41ae80:	cmp    ecx,r14d
  41ae83:	jne    41aeb1 <__ctype_b_loc@plt+0x18be1>
  41ae85:	lea    rsi,[rip+0x10609]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  41ae8c:	lea    rdx,[rip+0x10174]        # 42b007 <__ctype_b_loc@plt+0x28d37>
  41ae93:	xor    eax,eax
  41ae95:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41ae9a:	jmp    41aed0 <__ctype_b_loc@plt+0x18c00>
  41ae9c:	mov    rax,QWORD PTR [rsp]
  41aea0:	vmovups xmm0,XMMWORD PTR [rax]
  41aea4:	vmovups XMMWORD PTR [r15],xmm0
  41aea9:	mov    DWORD PTR [rax],0x11f
  41aeaf:	jmp    41aede <__ctype_b_loc@plt+0x18c0e>
  41aeb1:	lea    rsi,[rip+0x105b4]        # 42b46c <__ctype_b_loc@plt+0x2919c>
  41aeb8:	lea    rdx,[rip+0x10148]        # 42b007 <__ctype_b_loc@plt+0x28d37>
  41aebf:	lea    rcx,[rip+0x1049d]        # 42b363 <__ctype_b_loc@plt+0x29093>
  41aec6:	xor    eax,eax
  41aec8:	mov    r8d,r14d
  41aecb:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41aed0:	mov    edx,DWORD PTR [rbx+0x10]
  41aed3:	mov    rdi,rbx
  41aed6:	mov    rsi,rax
  41aed9:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41aede:	mov    rdi,rbx
  41aee1:	call   411550 <__ctype_b_loc@plt+0xf280>
  41aee6:	mov    rbp,QWORD PTR [rbx+0x30]
  41aeea:	mov    r8,QWORD PTR [rbp+0x0]
  41aeee:	mov    r15d,DWORD PTR [r8+0x58]
  41aef2:	cmp    DWORD PTR [rbp+0x44],r15d
  41aef6:	jge    41af01 <__ctype_b_loc@plt+0x18c31>
  41aef8:	lea    rcx,[r8+0x20]
  41aefc:	jmp    41b088 <__ctype_b_loc@plt+0x18db8>
  41af01:	mov    r12,QWORD PTR [rbx+0x38]
  41af05:	mov    rsi,QWORD PTR [r8+0x20]
  41af09:	cmp    r15d,0x1ffff
  41af10:	mov    QWORD PTR [rsp+0x10],r8
  41af15:	jge    41af28 <__ctype_b_loc@plt+0x18c58>
  41af17:	lea    eax,[r15+r15*1]
  41af1b:	cmp    eax,0x3
  41af1e:	mov    ecx,0x4
  41af23:	cmovg  ecx,eax
  41af26:	jmp    41af36 <__ctype_b_loc@plt+0x18c66>
  41af28:	mov    ecx,0x3ffff
  41af2d:	cmp    r15d,0x3ffff
  41af34:	jge    41af3b <__ctype_b_loc@plt+0x18c6b>
  41af36:	mov    eax,r15d
  41af39:	jmp    41af5f <__ctype_b_loc@plt+0x18c8f>
  41af3b:	mov    r14,rsi
  41af3e:	lea    rsi,[rip+0x103c1]        # 42b306 <__ctype_b_loc@plt+0x29036>
  41af45:	xor    eax,eax
  41af47:	mov    rdi,r12
  41af4a:	call   404080 <__ctype_b_loc@plt+0x1db0>
  41af4f:	mov    rsi,r14
  41af52:	mov    ecx,0x3ffff
  41af57:	mov    rax,QWORD PTR [rsp+0x10]
  41af5c:	mov    eax,DWORD PTR [rax+0x58]
  41af5f:	mov    DWORD PTR [rsp],ecx
  41af62:	movsxd r13,eax
  41af65:	shl    r13,0x3
  41af69:	mov    eax,ecx
  41af6b:	mov    QWORD PTR [rsp+0x20],rax
  41af70:	lea    r14,[rax*8+0x0]
  41af78:	mov    QWORD PTR [rsp+0x8],r12
  41af7d:	mov    r12,QWORD PTR [r12+0x20]
  41af82:	mov    rdi,QWORD PTR [r12+0x18]
  41af87:	mov    rdx,r13
  41af8a:	mov    rcx,r14
  41af8d:	call   QWORD PTR [r12+0x10]
  41af92:	mov    edx,DWORD PTR [rsp]
  41af95:	test   edx,edx
  41af97:	je     41afa2 <__ctype_b_loc@plt+0x18cd2>
  41af99:	test   rax,rax
  41af9c:	je     41b168 <__ctype_b_loc@plt+0x18e98>
  41afa2:	mov    r8,QWORD PTR [rsp+0x10]
  41afa7:	lea    rcx,[r8+0x20]
  41afab:	sub    r14,r13
  41afae:	add    QWORD PTR [r12+0x78],r14
  41afb3:	mov    DWORD PTR [r8+0x58],edx
  41afb7:	mov    QWORD PTR [r8+0x20],rax
  41afbb:	cmp    r15d,edx
  41afbe:	jge    41b088 <__ctype_b_loc@plt+0x18db8>
  41afc4:	movsxd rdi,r15d
  41afc7:	lea    rdx,[rdi+0x1]
  41afcb:	mov    QWORD PTR [rax+rdi*8],0x0
  41afd3:	mov    r9,QWORD PTR [rsp+0x20]
  41afd8:	cmp    rdx,r9
  41afdb:	je     41b088 <__ctype_b_loc@plt+0x18db8>
  41afe1:	not    r15d
  41afe4:	lea    esi,[r9+r15*1]
  41afe8:	lea    rax,[r9-0x2]
  41afec:	sub    rax,rdi
  41afef:	and    rsi,0x7
  41aff3:	je     41b015 <__ctype_b_loc@plt+0x18d45>
  41aff5:	neg    rsi
  41aff8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b000:	mov    rdi,QWORD PTR [rcx]
  41b003:	mov    QWORD PTR [rdi+rdx*8],0x0
  41b00b:	add    rdx,0x1
  41b00f:	add    rsi,0x1
  41b013:	jne    41b000 <__ctype_b_loc@plt+0x18d30>
  41b015:	cmp    rax,0x7
  41b019:	jb     41b088 <__ctype_b_loc@plt+0x18db8>
  41b01b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b020:	mov    rax,QWORD PTR [rcx]
  41b023:	mov    QWORD PTR [rax+rdx*8],0x0
  41b02b:	mov    rax,QWORD PTR [rcx]
  41b02e:	mov    QWORD PTR [rax+rdx*8+0x8],0x0
  41b037:	mov    rax,QWORD PTR [rcx]
  41b03a:	mov    QWORD PTR [rax+rdx*8+0x10],0x0
  41b043:	mov    rax,QWORD PTR [rcx]
  41b046:	mov    QWORD PTR [rax+rdx*8+0x18],0x0
  41b04f:	mov    rax,QWORD PTR [rcx]
  41b052:	mov    QWORD PTR [rax+rdx*8+0x20],0x0
  41b05b:	mov    rax,QWORD PTR [rcx]
  41b05e:	mov    QWORD PTR [rax+rdx*8+0x28],0x0
  41b067:	mov    rax,QWORD PTR [rcx]
  41b06a:	mov    QWORD PTR [rax+rdx*8+0x30],0x0
  41b073:	mov    rax,QWORD PTR [rcx]
  41b076:	mov    QWORD PTR [rax+rdx*8+0x38],0x0
  41b07f:	add    rdx,0x8
  41b083:	cmp    r9,rdx
  41b086:	jne    41b020 <__ctype_b_loc@plt+0x18d50>
  41b088:	mov    rax,QWORD PTR [rsp+0x30]
  41b08d:	mov    rcx,QWORD PTR [rcx]
  41b090:	movsxd rdx,DWORD PTR [rbp+0x44]
  41b094:	lea    esi,[rdx+0x1]
  41b097:	mov    DWORD PTR [rbp+0x44],esi
  41b09a:	mov    QWORD PTR [rcx+rdx*8],rax
  41b09e:	mov    rsi,QWORD PTR [rsp+0x30]
  41b0a3:	test   BYTE PTR [rsi+0x9],0x3
  41b0a7:	je     41b0d4 <__ctype_b_loc@plt+0x18e04>
  41b0a9:	mov    al,BYTE PTR [r8+0x9]
  41b0ad:	test   al,0x4
  41b0af:	je     41b0d4 <__ctype_b_loc@plt+0x18e04>
  41b0b1:	mov    rcx,QWORD PTR [rbx+0x38]
  41b0b5:	mov    rdi,QWORD PTR [rcx+0x20]
  41b0b9:	cmp    BYTE PTR [rdi+0x21],0x1
  41b0bd:	jne    41b0c6 <__ctype_b_loc@plt+0x18df6>
  41b0bf:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  41b0c4:	jmp    41b0d4 <__ctype_b_loc@plt+0x18e04>
  41b0c6:	and    al,0xf8
  41b0c8:	mov    cl,BYTE PTR [rdi+0x20]
  41b0cb:	and    cl,0x3
  41b0ce:	or     cl,al
  41b0d0:	mov    BYTE PTR [r8+0x9],cl
  41b0d4:	mov    esi,DWORD PTR [rbp+0x44]
  41b0d7:	shl    esi,0xe
  41b0da:	add    esi,0xffffc000
  41b0e0:	or     esi,0x24
  41b0e3:	mov    rax,QWORD PTR [rbp+0x18]
  41b0e7:	mov    edx,DWORD PTR [rax+0x8]
  41b0ea:	mov    rdi,rbp
  41b0ed:	call   419630 <__ctype_b_loc@plt+0x17360>
  41b0f2:	mov    rcx,QWORD PTR [rsp+0x28]
  41b0f7:	mov    QWORD PTR [rcx+0x10],0xffffffffffffffff
  41b0ff:	mov    DWORD PTR [rcx],0xb
  41b105:	mov    DWORD PTR [rcx+0x8],eax
  41b108:	mov    rax,QWORD PTR [rsp+0x30]
  41b10d:	cmp    BYTE PTR [rax+0x70],0x0
  41b111:	je     41b156 <__ctype_b_loc@plt+0x18e86>
  41b113:	xor    ebx,ebx
  41b115:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b11f:	nop
  41b120:	xor    eax,eax
  41b122:	cmp    BYTE PTR [rsp+rbx*2+0x7b],0x6
  41b127:	setne  al
  41b12a:	movzx  ecx,BYTE PTR [rsp+rbx*2+0x7c]
  41b12f:	shl    ecx,0x17
  41b132:	lea    esi,[rcx+rax*4]
  41b135:	mov    rax,QWORD PTR [rbp+0x18]
  41b139:	mov    edx,DWORD PTR [rax+0x8]
  41b13c:	mov    rdi,rbp
  41b13f:	call   419630 <__ctype_b_loc@plt+0x17360>
  41b144:	add    rbx,0x1
  41b148:	mov    rax,QWORD PTR [rsp+0x30]
  41b14d:	movzx  eax,BYTE PTR [rax+0x70]
  41b151:	cmp    rbx,rax
  41b154:	jb     41b120 <__ctype_b_loc@plt+0x18e50>
  41b156:	add    rsp,0x288
  41b15d:	pop    rbx
  41b15e:	pop    r12
  41b160:	pop    r13
  41b162:	pop    r14
  41b164:	pop    r15
  41b166:	pop    rbp
  41b167:	ret    
  41b168:	mov    rax,QWORD PTR [rsp+0x8]
  41b16d:	mov    rdi,QWORD PTR [rax+0xa8]
  41b174:	test   rdi,rdi
  41b177:	jne    41b1b9 <__ctype_b_loc@plt+0x18ee9>
  41b179:	mov    rax,QWORD PTR [rsp+0x8]
  41b17e:	mov    BYTE PTR [rax+0xa],0x4
  41b182:	mov    rax,QWORD PTR [rax+0x20]
  41b186:	cmp    QWORD PTR [rax+0x98],0x0
  41b18e:	je     41b1af <__ctype_b_loc@plt+0x18edf>
  41b190:	mov    esi,0x4
  41b195:	mov    rbx,QWORD PTR [rsp+0x8]
  41b19a:	mov    rdi,rbx
  41b19d:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  41b1a2:	mov    rax,QWORD PTR [rbx+0x20]
  41b1a6:	mov    rdi,rbx
  41b1a9:	call   QWORD PTR [rax+0x98]
  41b1af:	mov    edi,0x1
  41b1b4:	call   402280 <exit@plt>
  41b1b9:	mov    DWORD PTR [rdi+0xd0],0x4
  41b1c3:	add    rdi,0x8
  41b1c7:	mov    esi,0x1
  41b1cc:	call   402230 <longjmp@plt>
  41b1d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b1db:	nop    DWORD PTR [rax+rax*1+0x0]
  41b1e0:	push   rbp
  41b1e1:	push   r15
  41b1e3:	push   r14
  41b1e5:	push   r13
  41b1e7:	push   r12
  41b1e9:	push   rbx
  41b1ea:	sub    rsp,0x38
  41b1ee:	mov    r15,rsi
  41b1f1:	mov    r14,rdi
  41b1f4:	mov    rbx,QWORD PTR [rdi+0x30]
  41b1f8:	mov    edx,DWORD PTR [rdi+0x10]
  41b1fb:	cmp    edx,0x11d
  41b201:	je     41b231 <__ctype_b_loc@plt+0x18f61>
  41b203:	cmp    edx,0x28
  41b206:	jne    41b268 <__ctype_b_loc@plt+0x18f98>
  41b208:	mov    ebp,DWORD PTR [r14+0x4]
  41b20c:	mov    eax,DWORD PTR [r14+0x20]
  41b210:	mov    DWORD PTR [r14+0x8],ebp
  41b214:	lea    r12,[r14+0x20]
  41b218:	cmp    eax,0x11f
  41b21d:	jne    41b28d <__ctype_b_loc@plt+0x18fbd>
  41b21f:	lea    rsi,[r14+0x18]
  41b223:	mov    rdi,r14
  41b226:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41b22b:	mov    DWORD PTR [r14+0x10],eax
  41b22f:	jmp    41b2a1 <__ctype_b_loc@plt+0x18fd1>
  41b231:	mov    r13,QWORD PTR [r14+0x18]
  41b235:	mov    eax,DWORD PTR [r14+0x4]
  41b239:	mov    DWORD PTR [r14+0x8],eax
  41b23d:	lea    r12,[r14+0x20]
  41b241:	cmp    DWORD PTR [r14+0x20],0x11f
  41b249:	jne    41b2dd <__ctype_b_loc@plt+0x1900d>
  41b24f:	lea    rsi,[r14+0x18]
  41b253:	mov    rdi,r14
  41b256:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41b25b:	mov    DWORD PTR [r14+0x10],eax
  41b25f:	mov    rbp,QWORD PTR [r14+0x30]
  41b263:	jmp    41b2f4 <__ctype_b_loc@plt+0x19024>
  41b268:	lea    rsi,[rip+0x10195]        # 42b404 <__ctype_b_loc@plt+0x29134>
  41b26f:	mov    rdi,r14
  41b272:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41b277:	lea    r13,[r14+0x4]
  41b27b:	lea    rax,[r14+0x8]
  41b27f:	mov    QWORD PTR [rsp+0x8],rax
  41b284:	lea    r12,[r14+0x20]
  41b288:	jmp    41b342 <__ctype_b_loc@plt+0x19072>
  41b28d:	vmovups xmm0,XMMWORD PTR [r12]
  41b293:	vmovups XMMWORD PTR [r14+0x10],xmm0
  41b299:	mov    DWORD PTR [r14+0x20],0x11f
  41b2a1:	lea    r13,[r14+0x4]
  41b2a5:	lea    rax,[r14+0x8]
  41b2a9:	mov    QWORD PTR [rsp+0x8],rax
  41b2ae:	xor    edx,edx
  41b2b0:	mov    rdi,r14
  41b2b3:	mov    rsi,r15
  41b2b6:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  41b2bb:	mov    esi,0x29
  41b2c0:	mov    edx,0x28
  41b2c5:	mov    rdi,r14
  41b2c8:	mov    ecx,ebp
  41b2ca:	call   417950 <__ctype_b_loc@plt+0x15680>
  41b2cf:	mov    rdi,QWORD PTR [r14+0x30]
  41b2d3:	mov    rsi,r15
  41b2d6:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41b2db:	jmp    41b342 <__ctype_b_loc@plt+0x19072>
  41b2dd:	vmovups xmm0,XMMWORD PTR [r12]
  41b2e3:	vmovups XMMWORD PTR [r14+0x10],xmm0
  41b2e9:	mov    DWORD PTR [r14+0x20],0x11f
  41b2f1:	mov    rbp,rbx
  41b2f4:	lea    rax,[r14+0x4]
  41b2f8:	mov    QWORD PTR [rsp],rax
  41b2fc:	lea    rax,[r14+0x8]
  41b300:	mov    QWORD PTR [rsp+0x8],rax
  41b305:	mov    ecx,0x1
  41b30a:	mov    rdi,rbp
  41b30d:	mov    rsi,r13
  41b310:	mov    rdx,r15
  41b313:	call   41c630 <__ctype_b_loc@plt+0x1a360>
  41b318:	cmp    eax,0x8
  41b31b:	jne    41b33e <__ctype_b_loc@plt+0x1906e>
  41b31d:	mov    QWORD PTR [rsp+0x10],r13
  41b322:	mov    DWORD PTR [rsp+0x18],0x4
  41b32a:	lea    rsi,[rsp+0x10]
  41b32f:	mov    rdi,rbp
  41b332:	mov    rdx,rsi
  41b335:	call   419b00 <__ctype_b_loc@plt+0x17830>
  41b33a:	mov    DWORD PTR [r15+0x8],eax
  41b33e:	mov    r13,QWORD PTR [rsp]
  41b342:	lea    rax,[r14+0x18]
  41b346:	mov    QWORD PTR [rsp+0x30],rax
  41b34b:	lea    rax,[r14+0x10]
  41b34f:	mov    QWORD PTR [rsp+0x28],rax
  41b354:	mov    QWORD PTR [rsp],r13
  41b358:	jmp    41b37e <__ctype_b_loc@plt+0x190ae>
  41b35a:	nop    WORD PTR [rax+rax*1+0x0]
  41b360:	mov    DWORD PTR [rbx+0x3c],ebp
  41b363:	add    ebp,0xffffffff
  41b366:	mov    rdi,rbx
  41b369:	mov    rsi,r15
  41b36c:	mov    edx,ebp
  41b36e:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  41b373:	mov    rdi,r14
  41b376:	mov    rsi,r15
  41b379:	call   41c1c0 <__ctype_b_loc@plt+0x19ef0>
  41b37e:	mov    eax,DWORD PTR [r14+0x10]
  41b382:	cmp    eax,0x5a
  41b385:	jg     41b3e0 <__ctype_b_loc@plt+0x19110>
  41b387:	cmp    eax,0x28
  41b38a:	je     41b3f9 <__ctype_b_loc@plt+0x19129>
  41b38c:	cmp    eax,0x2e
  41b38f:	je     41b476 <__ctype_b_loc@plt+0x191a6>
  41b395:	cmp    eax,0x3a
  41b398:	jne    41b81b <__ctype_b_loc@plt+0x1954b>
  41b39e:	mov    eax,DWORD PTR [r13+0x0]
  41b3a2:	mov    rcx,QWORD PTR [rsp+0x8]
  41b3a7:	mov    DWORD PTR [rcx],eax
  41b3a9:	cmp    DWORD PTR [r12],0x11f
  41b3b1:	jne    41b533 <__ctype_b_loc@plt+0x19263>
  41b3b7:	mov    rdi,r14
  41b3ba:	mov    rsi,QWORD PTR [rsp+0x30]
  41b3bf:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41b3c4:	mov    DWORD PTR [r14+0x10],eax
  41b3c8:	cmp    eax,0x11d
  41b3cd:	jne    41b555 <__ctype_b_loc@plt+0x19285>
  41b3d3:	jmp    41b57d <__ctype_b_loc@plt+0x192ad>
  41b3d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b3e0:	cmp    eax,0x5b
  41b3e3:	je     41b486 <__ctype_b_loc@plt+0x191b6>
  41b3e9:	cmp    eax,0x7b
  41b3ec:	je     41b3f9 <__ctype_b_loc@plt+0x19129>
  41b3ee:	cmp    eax,0x11e
  41b3f3:	jne    41b81b <__ctype_b_loc@plt+0x1954b>
  41b3f9:	mov    rdi,rbx
  41b3fc:	mov    rsi,r15
  41b3ff:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41b404:	cmp    DWORD PTR [r15],0xc
  41b408:	jne    41b430 <__ctype_b_loc@plt+0x19160>
  41b40a:	mov    eax,DWORD PTR [r15+0x8]
  41b40e:	test   eax,0x100
  41b413:	jne    41b430 <__ctype_b_loc@plt+0x19160>
  41b415:	movzx  ecx,BYTE PTR [rbx+0x4a]
  41b419:	cmp    eax,ecx
  41b41b:	jge    41b688 <__ctype_b_loc@plt+0x193b8>
  41b421:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b42b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b430:	mov    ecx,DWORD PTR [rbx+0x3c]
  41b433:	lea    ebp,[rcx+0x1]
  41b436:	mov    rax,QWORD PTR [rbx]
  41b439:	movzx  edx,BYTE PTR [rax+0x73]
  41b43d:	cmp    ecx,edx
  41b43f:	jl     41b360 <__ctype_b_loc@plt+0x19090>
  41b445:	cmp    ecx,0xf9
  41b44b:	jl     41b523 <__ctype_b_loc@plt+0x19253>
  41b451:	mov    rdi,QWORD PTR [rbx+0x18]
  41b455:	mov    edx,DWORD PTR [rdi+0x10]
  41b458:	lea    rsi,[rip+0xfebf]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41b45f:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41b464:	mov    rax,QWORD PTR [rbx]
  41b467:	add    rax,0x73
  41b46b:	mov    ecx,DWORD PTR [rbx+0x3c]
  41b46e:	add    ecx,0x1
  41b471:	jmp    41b529 <__ctype_b_loc@plt+0x19259>
  41b476:	mov    rdi,r14
  41b479:	mov    rsi,r15
  41b47c:	call   41bfe0 <__ctype_b_loc@plt+0x19d10>
  41b481:	jmp    41b37e <__ctype_b_loc@plt+0x190ae>
  41b486:	mov    rdi,rbx
  41b489:	mov    rsi,r15
  41b48c:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41b491:	cmp    DWORD PTR [r15],0xc
  41b495:	jne    41b4b5 <__ctype_b_loc@plt+0x191e5>
  41b497:	mov    eax,DWORD PTR [r15+0x10]
  41b49b:	cmp    eax,DWORD PTR [r15+0x14]
  41b49f:	je     41b6b4 <__ctype_b_loc@plt+0x193e4>
  41b4a5:	mov    edx,DWORD PTR [r15+0x8]
  41b4a9:	movzx  eax,BYTE PTR [rbx+0x4a]
  41b4ad:	cmp    edx,eax
  41b4af:	jge    41b7d8 <__ctype_b_loc@plt+0x19508>
  41b4b5:	mov    rdi,rbx
  41b4b8:	mov    rsi,r15
  41b4bb:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41b4c0:	cmp    DWORD PTR [r15],0xc
  41b4c4:	jne    41b4dd <__ctype_b_loc@plt+0x1920d>
  41b4c6:	mov    eax,DWORD PTR [r15+0x8]
  41b4ca:	test   eax,0x100
  41b4cf:	jne    41b4dd <__ctype_b_loc@plt+0x1920d>
  41b4d1:	movzx  ecx,BYTE PTR [rbx+0x4a]
  41b4d5:	cmp    eax,ecx
  41b4d7:	jge    41b7ff <__ctype_b_loc@plt+0x1952f>
  41b4dd:	mov    ecx,DWORD PTR [rbx+0x3c]
  41b4e0:	lea    ebp,[rcx+0x1]
  41b4e3:	mov    rax,QWORD PTR [rbx]
  41b4e6:	movzx  edx,BYTE PTR [rax+0x73]
  41b4ea:	cmp    ecx,edx
  41b4ec:	jl     41b6a1 <__ctype_b_loc@plt+0x193d1>
  41b4f2:	cmp    ecx,0xf9
  41b4f8:	jl     41b696 <__ctype_b_loc@plt+0x193c6>
  41b4fe:	mov    rdi,QWORD PTR [rbx+0x18]
  41b502:	mov    edx,DWORD PTR [rdi+0x10]
  41b505:	lea    rsi,[rip+0xfe12]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41b50c:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41b511:	mov    rax,QWORD PTR [rbx]
  41b514:	add    rax,0x73
  41b518:	mov    ecx,DWORD PTR [rbx+0x3c]
  41b51b:	add    ecx,0x1
  41b51e:	jmp    41b69c <__ctype_b_loc@plt+0x193cc>
  41b523:	add    rax,0x73
  41b527:	mov    ecx,ebp
  41b529:	mov    BYTE PTR [rax],bpl
  41b52c:	mov    ebp,ecx
  41b52e:	jmp    41b360 <__ctype_b_loc@plt+0x19090>
  41b533:	vmovups xmm0,XMMWORD PTR [r12]
  41b539:	mov    rax,QWORD PTR [rsp+0x28]
  41b53e:	vmovups XMMWORD PTR [rax],xmm0
  41b542:	mov    DWORD PTR [r14+0x20],0x11f
  41b54a:	mov    eax,DWORD PTR [r14+0x10]
  41b54e:	cmp    eax,0x11d
  41b553:	je     41b57d <__ctype_b_loc@plt+0x192ad>
  41b555:	mov    rdi,QWORD PTR [r14+0x38]
  41b559:	xor    eax,eax
  41b55b:	lea    rsi,[rip+0xff33]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  41b562:	lea    rdx,[rip+0xfaeb]        # 42b054 <__ctype_b_loc@plt+0x28d84>
  41b569:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41b56e:	mov    edx,DWORD PTR [r14+0x10]
  41b572:	mov    rdi,r14
  41b575:	mov    rsi,rax
  41b578:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41b57d:	mov    rsi,QWORD PTR [rsp+0x30]
  41b582:	mov    rbp,QWORD PTR [rsi]
  41b585:	mov    eax,DWORD PTR [r13+0x0]
  41b589:	mov    rcx,QWORD PTR [rsp+0x8]
  41b58e:	mov    DWORD PTR [rcx],eax
  41b590:	cmp    DWORD PTR [r12],0x11f
  41b598:	jne    41b5a8 <__ctype_b_loc@plt+0x192d8>
  41b59a:	mov    rdi,r14
  41b59d:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41b5a2:	mov    DWORD PTR [r14+0x10],eax
  41b5a6:	jmp    41b5bf <__ctype_b_loc@plt+0x192ef>
  41b5a8:	vmovups xmm0,XMMWORD PTR [r12]
  41b5ae:	mov    rax,QWORD PTR [rsp+0x28]
  41b5b3:	vmovups XMMWORD PTR [rax],xmm0
  41b5b7:	mov    DWORD PTR [r12],0x11f
  41b5bf:	mov    rdi,QWORD PTR [r14+0x30]
  41b5c3:	mov    QWORD PTR [rsp+0x10],rbp
  41b5c8:	mov    DWORD PTR [rsp+0x18],0x4
  41b5d0:	lea    rsi,[rsp+0x10]
  41b5d5:	mov    rdx,rsi
  41b5d8:	call   419b00 <__ctype_b_loc@plt+0x17830>
  41b5dd:	mov    QWORD PTR [rsp+0x20],0xffffffffffffffff
  41b5e6:	mov    DWORD PTR [rsp+0x10],0x4
  41b5ee:	mov    DWORD PTR [rsp+0x18],eax
  41b5f2:	mov    rdi,rbx
  41b5f5:	mov    rsi,r15
  41b5f8:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41b5fd:	cmp    DWORD PTR [r15],0xc
  41b601:	jne    41b621 <__ctype_b_loc@plt+0x19351>
  41b603:	mov    eax,DWORD PTR [r15+0x10]
  41b607:	cmp    eax,DWORD PTR [r15+0x14]
  41b60b:	je     41b6fd <__ctype_b_loc@plt+0x1942d>
  41b611:	mov    edx,DWORD PTR [r15+0x8]
  41b615:	movzx  eax,BYTE PTR [rbx+0x4a]
  41b619:	cmp    edx,eax
  41b61b:	jge    41b7e3 <__ctype_b_loc@plt+0x19513>
  41b621:	mov    rdi,rbx
  41b624:	mov    rsi,r15
  41b627:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41b62c:	cmp    DWORD PTR [r15],0xc
  41b630:	jne    41b649 <__ctype_b_loc@plt+0x19379>
  41b632:	mov    eax,DWORD PTR [r15+0x8]
  41b636:	test   eax,0x100
  41b63b:	jne    41b649 <__ctype_b_loc@plt+0x19379>
  41b63d:	movzx  ecx,BYTE PTR [rbx+0x4a]
  41b641:	cmp    eax,ecx
  41b643:	jge    41b80d <__ctype_b_loc@plt+0x1953d>
  41b649:	mov    ecx,DWORD PTR [rbx+0x3c]
  41b64c:	lea    ebp,[rcx+0x1]
  41b64f:	mov    rax,QWORD PTR [rbx]
  41b652:	movzx  edx,BYTE PTR [rax+0x73]
  41b656:	cmp    ecx,edx
  41b658:	jl     41b6ea <__ctype_b_loc@plt+0x1941a>
  41b65e:	cmp    ecx,0xf9
  41b664:	jl     41b6df <__ctype_b_loc@plt+0x1940f>
  41b666:	mov    rdi,QWORD PTR [rbx+0x18]
  41b66a:	mov    edx,DWORD PTR [rdi+0x10]
  41b66d:	lea    rsi,[rip+0xfcaa]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41b674:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41b679:	mov    rax,QWORD PTR [rbx]
  41b67c:	add    rax,0x73
  41b680:	mov    ecx,DWORD PTR [rbx+0x3c]
  41b683:	add    ecx,0x1
  41b686:	jmp    41b6e5 <__ctype_b_loc@plt+0x19415>
  41b688:	mov    ecx,DWORD PTR [rbx+0x3c]
  41b68b:	add    ecx,0xffffffff
  41b68e:	mov    DWORD PTR [rbx+0x3c],ecx
  41b691:	jmp    41b433 <__ctype_b_loc@plt+0x19163>
  41b696:	add    rax,0x73
  41b69a:	mov    ecx,ebp
  41b69c:	mov    BYTE PTR [rax],bpl
  41b69f:	mov    ebp,ecx
  41b6a1:	mov    DWORD PTR [rbx+0x3c],ebp
  41b6a4:	add    ebp,0xffffffff
  41b6a7:	mov    rdi,rbx
  41b6aa:	mov    rsi,r15
  41b6ad:	mov    edx,ebp
  41b6af:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  41b6b4:	mov    rdi,r14
  41b6b7:	lea    rbp,[rsp+0x10]
  41b6bc:	mov    rsi,rbp
  41b6bf:	call   41bb00 <__ctype_b_loc@plt+0x19830>
  41b6c4:	mov    rdi,rbx
  41b6c7:	mov    rsi,rbp
  41b6ca:	call   419f50 <__ctype_b_loc@plt+0x17c80>
  41b6cf:	mov    DWORD PTR [r15+0xc],eax
  41b6d3:	mov    DWORD PTR [r15],0x9
  41b6da:	jmp    41b37e <__ctype_b_loc@plt+0x190ae>
  41b6df:	add    rax,0x73
  41b6e3:	mov    ecx,ebp
  41b6e5:	mov    BYTE PTR [rax],bpl
  41b6e8:	mov    ebp,ecx
  41b6ea:	mov    DWORD PTR [rbx+0x3c],ebp
  41b6ed:	add    ebp,0xffffffff
  41b6f0:	mov    rdi,rbx
  41b6f3:	mov    rsi,r15
  41b6f6:	mov    edx,ebp
  41b6f8:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  41b6fd:	cmp    DWORD PTR [r15],0xc
  41b701:	jne    41b71a <__ctype_b_loc@plt+0x1944a>
  41b703:	mov    eax,DWORD PTR [r15+0x8]
  41b707:	test   eax,0x100
  41b70c:	jne    41b71a <__ctype_b_loc@plt+0x1944a>
  41b70e:	movzx  ecx,BYTE PTR [rbx+0x4a]
  41b712:	cmp    eax,ecx
  41b714:	jge    41b7ee <__ctype_b_loc@plt+0x1951e>
  41b71a:	mov    r13d,DWORD PTR [rbx+0x3c]
  41b71e:	lea    ebp,[r13+0x2]
  41b722:	mov    rax,QWORD PTR [rbx]
  41b725:	movzx  ecx,BYTE PTR [rax+0x73]
  41b729:	cmp    ebp,ecx
  41b72b:	jle    41b763 <__ctype_b_loc@plt+0x19493>
  41b72d:	cmp    r13d,0xf8
  41b734:	jl     41b758 <__ctype_b_loc@plt+0x19488>
  41b736:	mov    rdi,QWORD PTR [rbx+0x18]
  41b73a:	mov    edx,DWORD PTR [rdi+0x10]
  41b73d:	lea    rsi,[rip+0xfbda]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41b744:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41b749:	mov    rax,QWORD PTR [rbx]
  41b74c:	add    rax,0x73
  41b750:	mov    ecx,DWORD PTR [rbx+0x3c]
  41b753:	add    ecx,0x2
  41b756:	jmp    41b75e <__ctype_b_loc@plt+0x1948e>
  41b758:	add    rax,0x73
  41b75c:	mov    ecx,ebp
  41b75e:	mov    BYTE PTR [rax],bpl
  41b761:	mov    ebp,ecx
  41b763:	mov    DWORD PTR [rbx+0x3c],ebp
  41b766:	mov    ebp,DWORD PTR [r15+0x8]
  41b76a:	mov    rdi,rbx
  41b76d:	lea    rsi,[rsp+0x10]
  41b772:	call   419f50 <__ctype_b_loc@plt+0x17c80>
  41b777:	mov    ecx,r13d
  41b77a:	shl    ecx,0x6
  41b77d:	shl    ebp,0x17
  41b780:	or     ebp,ecx
  41b782:	shl    eax,0xe
  41b785:	or     ebp,eax
  41b787:	or     ebp,0xb
  41b78a:	mov    rax,QWORD PTR [rbx+0x18]
  41b78e:	mov    edx,DWORD PTR [rax+0x8]
  41b791:	mov    rdi,rbx
  41b794:	mov    esi,ebp
  41b796:	call   419630 <__ctype_b_loc@plt+0x17360>
  41b79b:	cmp    DWORD PTR [rsp+0x10],0xc
  41b7a0:	jne    41b7b9 <__ctype_b_loc@plt+0x194e9>
  41b7a2:	mov    eax,DWORD PTR [rsp+0x18]
  41b7a6:	test   eax,0x100
  41b7ab:	jne    41b7b9 <__ctype_b_loc@plt+0x194e9>
  41b7ad:	movzx  ecx,BYTE PTR [rbx+0x4a]
  41b7b1:	cmp    eax,ecx
  41b7b3:	jl     41b7b9 <__ctype_b_loc@plt+0x194e9>
  41b7b5:	add    DWORD PTR [rbx+0x3c],0xffffffff
  41b7b9:	mov    DWORD PTR [r15+0x8],r13d
  41b7bd:	mov    DWORD PTR [r15],0xc
  41b7c4:	mov    rdi,r14
  41b7c7:	mov    rsi,r15
  41b7ca:	call   41c1c0 <__ctype_b_loc@plt+0x19ef0>
  41b7cf:	mov    r13,QWORD PTR [rsp]
  41b7d3:	jmp    41b37e <__ctype_b_loc@plt+0x190ae>
  41b7d8:	mov    rdi,rbx
  41b7db:	mov    rsi,r15
  41b7de:	jmp    41b6af <__ctype_b_loc@plt+0x193df>
  41b7e3:	mov    rdi,rbx
  41b7e6:	mov    rsi,r15
  41b7e9:	jmp    41b6f8 <__ctype_b_loc@plt+0x19428>
  41b7ee:	mov    r13d,DWORD PTR [rbx+0x3c]
  41b7f2:	add    r13d,0xffffffff
  41b7f6:	mov    DWORD PTR [rbx+0x3c],r13d
  41b7fa:	jmp    41b71e <__ctype_b_loc@plt+0x1944e>
  41b7ff:	mov    ecx,DWORD PTR [rbx+0x3c]
  41b802:	add    ecx,0xffffffff
  41b805:	mov    DWORD PTR [rbx+0x3c],ecx
  41b808:	jmp    41b4e0 <__ctype_b_loc@plt+0x19210>
  41b80d:	mov    ecx,DWORD PTR [rbx+0x3c]
  41b810:	add    ecx,0xffffffff
  41b813:	mov    DWORD PTR [rbx+0x3c],ecx
  41b816:	jmp    41b64c <__ctype_b_loc@plt+0x1937c>
  41b81b:	add    rsp,0x38
  41b81f:	pop    rbx
  41b820:	pop    r12
  41b822:	pop    r13
  41b824:	pop    r14
  41b826:	pop    r15
  41b828:	pop    rbp
  41b829:	ret    
  41b82a:	nop    WORD PTR [rax+rax*1+0x0]
  41b830:	push   r14
  41b832:	push   rbx
  41b833:	push   rax
  41b834:	mov    r14,rsi
  41b837:	mov    rbx,rdi
  41b83a:	xor    edx,edx
  41b83c:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  41b841:	mov    eax,DWORD PTR [r14+0x24]
  41b845:	cmp    eax,0x7ffffffe
  41b84a:	jl     41b8a6 <__ctype_b_loc@plt+0x195d6>
  41b84c:	mov    rbx,QWORD PTR [rbx+0x30]
  41b850:	mov    rax,QWORD PTR [rbx]
  41b853:	mov    rdi,QWORD PTR [rbx+0x20]
  41b857:	mov    edx,DWORD PTR [rax+0x60]
  41b85a:	test   edx,edx
  41b85c:	je     41b87a <__ctype_b_loc@plt+0x195aa>
  41b85e:	lea    rsi,[rip+0xfb40]        # 42b3a5 <__ctype_b_loc@plt+0x290d5>
  41b865:	lea    r8,[rip+0xfb00]        # 42b36c <__ctype_b_loc@plt+0x2909c>
  41b86c:	mov    ecx,0x7ffffffd
  41b871:	xor    eax,eax
  41b873:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41b878:	jmp    41b894 <__ctype_b_loc@plt+0x195c4>
  41b87a:	lea    rsi,[rip+0xfb02]        # 42b383 <__ctype_b_loc@plt+0x290b3>
  41b881:	lea    rcx,[rip+0xfae4]        # 42b36c <__ctype_b_loc@plt+0x2909c>
  41b888:	mov    edx,0x7ffffffd
  41b88d:	xor    eax,eax
  41b88f:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41b894:	mov    rdi,QWORD PTR [rbx+0x18]
  41b898:	xor    edx,edx
  41b89a:	mov    rsi,rax
  41b89d:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41b8a2:	mov    eax,DWORD PTR [r14+0x24]
  41b8a6:	add    eax,0x1
  41b8a9:	mov    DWORD PTR [r14+0x24],eax
  41b8ad:	add    DWORD PTR [r14+0x28],0x1
  41b8b2:	add    rsp,0x8
  41b8b6:	pop    rbx
  41b8b7:	pop    r14
  41b8b9:	ret    
  41b8ba:	nop    WORD PTR [rax+rax*1+0x0]
  41b8c0:	push   rbp
  41b8c1:	push   r15
  41b8c3:	push   r14
  41b8c5:	push   r13
  41b8c7:	push   r12
  41b8c9:	push   rbx
  41b8ca:	sub    rsp,0x38
  41b8ce:	mov    r14,rsi
  41b8d1:	mov    rbx,rdi
  41b8d4:	mov    r15,QWORD PTR [rdi+0x30]
  41b8d8:	mov    r13d,DWORD PTR [r15+0x3c]
  41b8dc:	cmp    DWORD PTR [rdi+0x10],0x11d
  41b8e3:	jne    41b91d <__ctype_b_loc@plt+0x1964d>
  41b8e5:	cmp    DWORD PTR [r14+0x20],0x7ffffffe
  41b8ed:	jl     41b98b <__ctype_b_loc@plt+0x196bb>
  41b8f3:	mov    rax,QWORD PTR [r15]
  41b8f6:	mov    rdi,QWORD PTR [r15+0x20]
  41b8fa:	mov    edx,DWORD PTR [rax+0x60]
  41b8fd:	test   edx,edx
  41b8ff:	je     41b933 <__ctype_b_loc@plt+0x19663>
  41b901:	lea    rsi,[rip+0xfa9d]        # 42b3a5 <__ctype_b_loc@plt+0x290d5>
  41b908:	lea    r8,[rip+0xfa5d]        # 42b36c <__ctype_b_loc@plt+0x2909c>
  41b90f:	mov    ecx,0x7ffffffd
  41b914:	xor    eax,eax
  41b916:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41b91b:	jmp    41b94d <__ctype_b_loc@plt+0x1967d>
  41b91d:	lea    rsi,[rsp+0x8]
  41b922:	mov    rdi,rbx
  41b925:	call   41bb00 <__ctype_b_loc@plt+0x19830>
  41b92a:	lea    rbp,[r14+0x20]
  41b92e:	jmp    41b9fa <__ctype_b_loc@plt+0x1972a>
  41b933:	lea    rsi,[rip+0xfa49]        # 42b383 <__ctype_b_loc@plt+0x290b3>
  41b93a:	lea    rcx,[rip+0xfa2b]        # 42b36c <__ctype_b_loc@plt+0x2909c>
  41b941:	mov    edx,0x7ffffffd
  41b946:	xor    eax,eax
  41b948:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41b94d:	mov    rdi,QWORD PTR [r15+0x18]
  41b951:	xor    edx,edx
  41b953:	mov    rsi,rax
  41b956:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41b95b:	cmp    DWORD PTR [rbx+0x10],0x11d
  41b962:	je     41b98b <__ctype_b_loc@plt+0x196bb>
  41b964:	mov    rdi,QWORD PTR [rbx+0x38]
  41b968:	lea    rsi,[rip+0xfb26]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  41b96f:	lea    rdx,[rip+0xf6de]        # 42b054 <__ctype_b_loc@plt+0x28d84>
  41b976:	xor    eax,eax
  41b978:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41b97d:	mov    edx,DWORD PTR [rbx+0x10]
  41b980:	mov    rdi,rbx
  41b983:	mov    rsi,rax
  41b986:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41b98b:	mov    r12,QWORD PTR [rbx+0x18]
  41b98f:	mov    eax,DWORD PTR [rbx+0x4]
  41b992:	mov    DWORD PTR [rbx+0x8],eax
  41b995:	cmp    DWORD PTR [rbx+0x20],0x11f
  41b99c:	jne    41b9af <__ctype_b_loc@plt+0x196df>
  41b99e:	lea    rsi,[rbx+0x18]
  41b9a2:	mov    rdi,rbx
  41b9a5:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41b9aa:	mov    DWORD PTR [rbx+0x10],eax
  41b9ad:	jmp    41b9c3 <__ctype_b_loc@plt+0x196f3>
  41b9af:	lea    rax,[rbx+0x20]
  41b9b3:	vmovups xmm0,XMMWORD PTR [rax]
  41b9b7:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41b9bc:	mov    DWORD PTR [rbx+0x20],0x11f
  41b9c3:	lea    rbp,[r14+0x20]
  41b9c7:	mov    rdi,QWORD PTR [rbx+0x30]
  41b9cb:	mov    QWORD PTR [rsp+0x8],r12
  41b9d0:	mov    DWORD PTR [rsp+0x10],0x4
  41b9d8:	lea    rsi,[rsp+0x8]
  41b9dd:	mov    rdx,rsi
  41b9e0:	call   419b00 <__ctype_b_loc@plt+0x17830>
  41b9e5:	mov    QWORD PTR [rsp+0x18],0xffffffffffffffff
  41b9ee:	mov    DWORD PTR [rsp+0x8],0x4
  41b9f6:	mov    DWORD PTR [rsp+0x10],eax
  41b9fa:	add    DWORD PTR [rbp+0x0],0x1
  41b9fe:	cmp    DWORD PTR [rbx+0x10],0x3d
  41ba02:	je     41ba5c <__ctype_b_loc@plt+0x1978c>
  41ba04:	mov    r12,QWORD PTR [rbx+0x38]
  41ba08:	call   4022d0 <__ctype_b_loc@plt>
  41ba0d:	mov    rax,QWORD PTR [rax]
  41ba10:	movzx  eax,WORD PTR [rax+0x7a]
  41ba14:	test   al,0x2
  41ba16:	lea    rax,[rip+0xf83e]        # 42b25b <__ctype_b_loc@plt+0x28f8b>
  41ba1d:	lea    rsi,[rip+0xf82e]        # 42b252 <__ctype_b_loc@plt+0x28f82>
  41ba24:	cmove  rsi,rax
  41ba28:	mov    edx,0x3d
  41ba2d:	xor    eax,eax
  41ba2f:	mov    rdi,r12
  41ba32:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41ba37:	mov    rcx,rax
  41ba3a:	lea    rsi,[rip+0xfa54]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  41ba41:	xor    eax,eax
  41ba43:	mov    rdi,r12
  41ba46:	mov    rdx,rcx
  41ba49:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41ba4e:	mov    edx,DWORD PTR [rbx+0x10]
  41ba51:	mov    rdi,rbx
  41ba54:	mov    rsi,rax
  41ba57:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41ba5c:	mov    eax,DWORD PTR [rbx+0x4]
  41ba5f:	mov    ecx,DWORD PTR [rbx+0x20]
  41ba62:	mov    DWORD PTR [rbx+0x8],eax
  41ba65:	cmp    ecx,0x11f
  41ba6b:	jne    41ba7e <__ctype_b_loc@plt+0x197ae>
  41ba6d:	lea    rsi,[rbx+0x18]
  41ba71:	mov    rdi,rbx
  41ba74:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41ba79:	mov    DWORD PTR [rbx+0x10],eax
  41ba7c:	jmp    41ba92 <__ctype_b_loc@plt+0x197c2>
  41ba7e:	lea    rax,[rbx+0x20]
  41ba82:	vmovups xmm0,XMMWORD PTR [rax]
  41ba86:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41ba8b:	mov    DWORD PTR [rbx+0x20],0x11f
  41ba92:	lea    rsi,[rsp+0x8]
  41ba97:	mov    rdi,r15
  41ba9a:	call   419f50 <__ctype_b_loc@plt+0x17c80>
  41ba9f:	mov    ebp,eax
  41baa1:	lea    r12,[rsp+0x20]
  41baa6:	xor    edx,edx
  41baa8:	mov    rdi,rbx
  41baab:	mov    rsi,r12
  41baae:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  41bab3:	mov    rax,QWORD PTR [r14+0x18]
  41bab7:	mov    ebx,DWORD PTR [rax+0x8]
  41baba:	mov    rdi,r15
  41babd:	mov    rsi,r12
  41bac0:	call   419f50 <__ctype_b_loc@plt+0x17c80>
  41bac5:	shl    ebx,0x6
  41bac8:	shl    ebp,0x17
  41bacb:	shl    eax,0xe
  41bace:	or     eax,ebp
  41bad0:	or     ebx,eax
  41bad2:	or     ebx,0x9
  41bad5:	mov    rax,QWORD PTR [r15+0x18]
  41bad9:	mov    edx,DWORD PTR [rax+0x8]
  41badc:	mov    rdi,r15
  41badf:	mov    esi,ebx
  41bae1:	call   419630 <__ctype_b_loc@plt+0x17360>
  41bae6:	mov    DWORD PTR [r15+0x3c],r13d
  41baea:	add    rsp,0x38
  41baee:	pop    rbx
  41baef:	pop    r12
  41baf1:	pop    r13
  41baf3:	pop    r14
  41baf5:	pop    r15
  41baf7:	pop    rbp
  41baf8:	ret    
  41baf9:	nop    DWORD PTR [rax+0x0]
  41bb00:	push   rbp
  41bb01:	push   r15
  41bb03:	push   r14
  41bb05:	push   r13
  41bb07:	push   r12
  41bb09:	push   rbx
  41bb0a:	push   rax
  41bb0b:	mov    r14,rsi
  41bb0e:	mov    rbx,rdi
  41bb11:	mov    eax,DWORD PTR [rdi+0x4]
  41bb14:	mov    ecx,DWORD PTR [rdi+0x20]
  41bb17:	mov    DWORD PTR [rdi+0x8],eax
  41bb1a:	lea    r12,[rdi+0x20]
  41bb1e:	cmp    ecx,0x11f
  41bb24:	jne    41bb37 <__ctype_b_loc@plt+0x19867>
  41bb26:	lea    rsi,[rbx+0x18]
  41bb2a:	mov    rdi,rbx
  41bb2d:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41bb32:	mov    DWORD PTR [rbx+0x10],eax
  41bb35:	jmp    41bb49 <__ctype_b_loc@plt+0x19879>
  41bb37:	vmovups xmm0,XMMWORD PTR [r12]
  41bb3d:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41bb42:	mov    DWORD PTR [rbx+0x20],0x11f
  41bb49:	xor    edx,edx
  41bb4b:	mov    rdi,rbx
  41bb4e:	mov    rsi,r14
  41bb51:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  41bb56:	mov    r15,QWORD PTR [rbx+0x30]
  41bb5a:	mov    r13d,DWORD PTR [r14+0x10]
  41bb5e:	mov    ebp,DWORD PTR [r14+0x14]
  41bb62:	mov    rdi,r15
  41bb65:	mov    rsi,r14
  41bb68:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41bb6d:	cmp    r13d,ebp
  41bb70:	je     41bc21 <__ctype_b_loc@plt+0x19951>
  41bb76:	cmp    DWORD PTR [r14],0xc
  41bb7a:	jne    41bb9b <__ctype_b_loc@plt+0x198cb>
  41bb7c:	mov    eax,DWORD PTR [r14+0x10]
  41bb80:	cmp    eax,DWORD PTR [r14+0x14]
  41bb84:	je     41bc21 <__ctype_b_loc@plt+0x19951>
  41bb8a:	mov    edx,DWORD PTR [r14+0x8]
  41bb8e:	movzx  eax,BYTE PTR [r15+0x4a]
  41bb93:	cmp    edx,eax
  41bb95:	jge    41bcc5 <__ctype_b_loc@plt+0x199f5>
  41bb9b:	mov    rdi,r15
  41bb9e:	mov    rsi,r14
  41bba1:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41bba6:	cmp    DWORD PTR [r14],0xc
  41bbaa:	jne    41bbc5 <__ctype_b_loc@plt+0x198f5>
  41bbac:	mov    eax,DWORD PTR [r14+0x8]
  41bbb0:	test   eax,0x100
  41bbb5:	jne    41bbc5 <__ctype_b_loc@plt+0x198f5>
  41bbb7:	movzx  ecx,BYTE PTR [r15+0x4a]
  41bbbc:	cmp    eax,ecx
  41bbbe:	jl     41bbc5 <__ctype_b_loc@plt+0x198f5>
  41bbc0:	add    DWORD PTR [r15+0x3c],0xffffffff
  41bbc5:	mov    ecx,DWORD PTR [r15+0x3c]
  41bbc9:	lea    ebp,[rcx+0x1]
  41bbcc:	mov    rax,QWORD PTR [r15]
  41bbcf:	movzx  edx,BYTE PTR [rax+0x73]
  41bbd3:	cmp    ecx,edx
  41bbd5:	jl     41bc0d <__ctype_b_loc@plt+0x1993d>
  41bbd7:	cmp    ecx,0xf9
  41bbdd:	jl     41bc02 <__ctype_b_loc@plt+0x19932>
  41bbdf:	mov    rdi,QWORD PTR [r15+0x18]
  41bbe3:	mov    edx,DWORD PTR [rdi+0x10]
  41bbe6:	lea    rsi,[rip+0xf731]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41bbed:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41bbf2:	mov    rax,QWORD PTR [r15]
  41bbf5:	add    rax,0x73
  41bbf9:	mov    ecx,DWORD PTR [r15+0x3c]
  41bbfd:	add    ecx,0x1
  41bc00:	jmp    41bc08 <__ctype_b_loc@plt+0x19938>
  41bc02:	add    rax,0x73
  41bc06:	mov    ecx,ebp
  41bc08:	mov    BYTE PTR [rax],bpl
  41bc0b:	mov    ebp,ecx
  41bc0d:	mov    DWORD PTR [r15+0x3c],ebp
  41bc11:	add    ebp,0xffffffff
  41bc14:	mov    rdi,r15
  41bc17:	mov    rsi,r14
  41bc1a:	mov    edx,ebp
  41bc1c:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  41bc21:	cmp    DWORD PTR [rbx+0x10],0x5d
  41bc25:	je     41bc82 <__ctype_b_loc@plt+0x199b2>
  41bc27:	mov    rbp,QWORD PTR [rbx+0x38]
  41bc2b:	call   4022d0 <__ctype_b_loc@plt>
  41bc30:	mov    rax,QWORD PTR [rax]
  41bc33:	movzx  eax,WORD PTR [rax+0xba]
  41bc3a:	test   al,0x2
  41bc3c:	lea    rax,[rip+0xf618]        # 42b25b <__ctype_b_loc@plt+0x28f8b>
  41bc43:	lea    rsi,[rip+0xf608]        # 42b252 <__ctype_b_loc@plt+0x28f82>
  41bc4a:	cmove  rsi,rax
  41bc4e:	mov    edx,0x5d
  41bc53:	xor    eax,eax
  41bc55:	mov    rdi,rbp
  41bc58:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41bc5d:	mov    rcx,rax
  41bc60:	lea    rsi,[rip+0xf82e]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  41bc67:	xor    eax,eax
  41bc69:	mov    rdi,rbp
  41bc6c:	mov    rdx,rcx
  41bc6f:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41bc74:	mov    edx,DWORD PTR [rbx+0x10]
  41bc77:	mov    rdi,rbx
  41bc7a:	mov    rsi,rax
  41bc7d:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41bc82:	mov    eax,DWORD PTR [rbx+0x4]
  41bc85:	mov    ecx,DWORD PTR [rbx+0x20]
  41bc88:	mov    DWORD PTR [rbx+0x8],eax
  41bc8b:	cmp    ecx,0x11f
  41bc91:	jne    41bca4 <__ctype_b_loc@plt+0x199d4>
  41bc93:	lea    rsi,[rbx+0x18]
  41bc97:	mov    rdi,rbx
  41bc9a:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41bc9f:	mov    DWORD PTR [rbx+0x10],eax
  41bca2:	jmp    41bcb6 <__ctype_b_loc@plt+0x199e6>
  41bca4:	vmovups xmm0,XMMWORD PTR [r12]
  41bcaa:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41bcaf:	mov    DWORD PTR [rbx+0x20],0x11f
  41bcb6:	add    rsp,0x8
  41bcba:	pop    rbx
  41bcbb:	pop    r12
  41bcbd:	pop    r13
  41bcbf:	pop    r14
  41bcc1:	pop    r15
  41bcc3:	pop    rbp
  41bcc4:	ret    
  41bcc5:	mov    rdi,r15
  41bcc8:	mov    rsi,r14
  41bccb:	jmp    41bc1c <__ctype_b_loc@plt+0x1994c>
  41bcd0:	push   rbp
  41bcd1:	push   r15
  41bcd3:	push   r14
  41bcd5:	push   r13
  41bcd7:	push   r12
  41bcd9:	push   rbx
  41bcda:	sub    rsp,0x38
  41bcde:	mov    r13,rsi
  41bce1:	mov    rbp,rdi
  41bce4:	mov    r15,QWORD PTR [rdi+0x30]
  41bce8:	movzx  eax,BYTE PTR [r15+0x4a]
  41bced:	add    eax,edx
  41bcef:	mov    rbx,r15
  41bcf2:	cmp    eax,0xc8
  41bcf7:	jl     41bd55 <__ctype_b_loc@plt+0x19a85>
  41bcf9:	mov    r14d,edx
  41bcfc:	mov    rax,QWORD PTR [r15]
  41bcff:	mov    rdi,QWORD PTR [r15+0x20]
  41bd03:	mov    edx,DWORD PTR [rax+0x60]
  41bd06:	test   edx,edx
  41bd08:	je     41bd26 <__ctype_b_loc@plt+0x19a56>
  41bd0a:	lea    rsi,[rip+0xf694]        # 42b3a5 <__ctype_b_loc@plt+0x290d5>
  41bd11:	lea    r8,[rip+0xf6c3]        # 42b3db <__ctype_b_loc@plt+0x2910b>
  41bd18:	mov    ecx,0xc8
  41bd1d:	xor    eax,eax
  41bd1f:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41bd24:	jmp    41bd40 <__ctype_b_loc@plt+0x19a70>
  41bd26:	lea    rsi,[rip+0xf656]        # 42b383 <__ctype_b_loc@plt+0x290b3>
  41bd2d:	lea    rcx,[rip+0xf6a7]        # 42b3db <__ctype_b_loc@plt+0x2910b>
  41bd34:	mov    edx,0xc8
  41bd39:	xor    eax,eax
  41bd3b:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41bd40:	mov    rdi,QWORD PTR [r15+0x18]
  41bd44:	xor    edx,edx
  41bd46:	mov    rsi,rax
  41bd49:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41bd4e:	mov    rbx,QWORD PTR [rbp+0x30]
  41bd52:	mov    edx,r14d
  41bd55:	mov    r10,QWORD PTR [rbx]
  41bd58:	mov    r12d,DWORD PTR [r10+0x5c]
  41bd5c:	movsx  eax,WORD PTR [rbx+0x48]
  41bd60:	cmp    r12d,eax
  41bd63:	jle    41bd6e <__ctype_b_loc@plt+0x19a9e>
  41bd65:	mov    rax,QWORD PTR [r10+0x30]
  41bd69:	jmp    41bef9 <__ctype_b_loc@plt+0x19c29>
  41bd6e:	mov    QWORD PTR [rsp+0x28],r13
  41bd73:	mov    rcx,QWORD PTR [rbp+0x38]
  41bd77:	mov    rsi,QWORD PTR [r10+0x30]
  41bd7b:	cmp    r12d,0x3fff
  41bd82:	mov    QWORD PTR [rsp],rcx
  41bd86:	mov    QWORD PTR [rsp+0x30],r15
  41bd8b:	mov    DWORD PTR [rsp+0xc],edx
  41bd8f:	mov    QWORD PTR [rsp+0x20],rbp
  41bd94:	mov    QWORD PTR [rsp+0x18],rbx
  41bd99:	mov    QWORD PTR [rsp+0x10],r10
  41bd9e:	jge    41bdb3 <__ctype_b_loc@plt+0x19ae3>
  41bda0:	lea    eax,[r12+r12*1]
  41bda4:	cmp    eax,0x3
  41bda7:	mov    r13d,0x4
  41bdad:	cmovg  r13d,eax
  41bdb1:	jmp    41bdc2 <__ctype_b_loc@plt+0x19af2>
  41bdb3:	mov    r13d,0x7fff
  41bdb9:	cmp    r12d,0x7fff
  41bdc0:	jge    41bdc7 <__ctype_b_loc@plt+0x19af7>
  41bdc2:	mov    eax,r12d
  41bdc5:	jmp    41bdeb <__ctype_b_loc@plt+0x19b1b>
  41bdc7:	mov    rbx,rsi
  41bdca:	lea    rsi,[rip+0xf601]        # 42b3d2 <__ctype_b_loc@plt+0x29102>
  41bdd1:	xor    eax,eax
  41bdd3:	mov    rdi,QWORD PTR [rsp]
  41bdd7:	call   404080 <__ctype_b_loc@plt+0x1db0>
  41bddc:	mov    rsi,rbx
  41bddf:	mov    rcx,QWORD PTR [rsp]
  41bde3:	mov    rax,QWORD PTR [rsp+0x10]
  41bde8:	mov    eax,DWORD PTR [rax+0x5c]
  41bdeb:	movsxd rbp,eax
  41bdee:	shl    rbp,0x4
  41bdf2:	mov    r14d,r13d
  41bdf5:	mov    rbx,r14
  41bdf8:	shl    rbx,0x4
  41bdfc:	mov    r15,QWORD PTR [rcx+0x20]
  41be00:	mov    rdi,QWORD PTR [r15+0x18]
  41be04:	mov    rdx,rbp
  41be07:	mov    rcx,rbx
  41be0a:	call   QWORD PTR [r15+0x10]
  41be0e:	test   r13d,r13d
  41be11:	je     41be1c <__ctype_b_loc@plt+0x19b4c>
  41be13:	test   rax,rax
  41be16:	je     41bf6e <__ctype_b_loc@plt+0x19c9e>
  41be1c:	sub    rbx,rbp
  41be1f:	add    QWORD PTR [r15+0x78],rbx
  41be23:	mov    r10,QWORD PTR [rsp+0x10]
  41be28:	mov    DWORD PTR [r10+0x5c],r13d
  41be2c:	mov    QWORD PTR [r10+0x30],rax
  41be30:	cmp    r12d,r13d
  41be33:	mov    r15,QWORD PTR [rsp+0x30]
  41be38:	mov    edx,DWORD PTR [rsp+0xc]
  41be3c:	mov    r13,QWORD PTR [rsp+0x28]
  41be41:	mov    rbp,QWORD PTR [rsp+0x20]
  41be46:	mov    rbx,QWORD PTR [rsp+0x18]
  41be4b:	jge    41bef9 <__ctype_b_loc@plt+0x19c29>
  41be51:	movsxd r9,r12d
  41be54:	mov    esi,r14d
  41be57:	sub    esi,r12d
  41be5a:	mov    rcx,r9
  41be5d:	not    rcx
  41be60:	add    rcx,r14
  41be63:	and    rsi,0x7
  41be67:	je     41be9a <__ctype_b_loc@plt+0x19bca>
  41be69:	mov    r8,rbp
  41be6c:	mov    rdi,r9
  41be6f:	shl    rdi,0x4
  41be73:	add    rdi,rax
  41be76:	neg    rsi
  41be79:	xor    ebp,ebp
  41be7b:	nop    DWORD PTR [rax+rax*1+0x0]
  41be80:	mov    QWORD PTR [rdi],0x0
  41be87:	add    rdi,0x10
  41be8b:	add    rbp,0xffffffffffffffff
  41be8f:	cmp    rsi,rbp
  41be92:	jne    41be80 <__ctype_b_loc@plt+0x19bb0>
  41be94:	sub    r9,rbp
  41be97:	mov    rbp,r8
  41be9a:	cmp    rcx,0x7
  41be9e:	jb     41bef9 <__ctype_b_loc@plt+0x19c29>
  41bea0:	sub    r14,r9
  41bea3:	shl    r9,0x4
  41bea7:	lea    rcx,[rax+r9*1]
  41beab:	add    rcx,0x70
  41beaf:	nop
  41beb0:	mov    QWORD PTR [rcx-0x70],0x0
  41beb8:	mov    QWORD PTR [rcx-0x60],0x0
  41bec0:	mov    QWORD PTR [rcx-0x50],0x0
  41bec8:	mov    QWORD PTR [rcx-0x40],0x0
  41bed0:	mov    QWORD PTR [rcx-0x30],0x0
  41bed8:	mov    QWORD PTR [rcx-0x20],0x0
  41bee0:	mov    QWORD PTR [rcx-0x10],0x0
  41bee8:	mov    QWORD PTR [rcx],0x0
  41beef:	sub    rcx,0xffffffffffffff80
  41bef3:	add    r14,0xfffffffffffffff8
  41bef7:	jne    41beb0 <__ctype_b_loc@plt+0x19be0>
  41bef9:	movsx  rcx,WORD PTR [rbx+0x48]
  41befe:	shl    rcx,0x4
  41bf02:	mov    QWORD PTR [rax+rcx*1],r13
  41bf06:	test   BYTE PTR [r13+0x9],0x3
  41bf0b:	je     41bf3f <__ctype_b_loc@plt+0x19c6f>
  41bf0d:	mov    al,BYTE PTR [r10+0x9]
  41bf11:	test   al,0x4
  41bf13:	je     41bf3f <__ctype_b_loc@plt+0x19c6f>
  41bf15:	mov    rcx,QWORD PTR [rbp+0x38]
  41bf19:	mov    rdi,QWORD PTR [rcx+0x20]
  41bf1d:	cmp    BYTE PTR [rdi+0x21],0x1
  41bf21:	jne    41bf31 <__ctype_b_loc@plt+0x19c61>
  41bf23:	mov    rsi,r13
  41bf26:	mov    ebp,edx
  41bf28:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  41bf2d:	mov    edx,ebp
  41bf2f:	jmp    41bf3f <__ctype_b_loc@plt+0x19c6f>
  41bf31:	and    al,0xf8
  41bf33:	mov    cl,BYTE PTR [rdi+0x20]
  41bf36:	and    cl,0x3
  41bf39:	or     cl,al
  41bf3b:	mov    BYTE PTR [r10+0x9],cl
  41bf3f:	mov    eax,DWORD PTR [rbx+0x48]
  41bf42:	mov    ecx,eax
  41bf44:	add    ecx,0x1
  41bf47:	mov    WORD PTR [rbx+0x48],cx
  41bf4b:	movzx  ecx,BYTE PTR [r15+0x4a]
  41bf50:	movsxd rdx,edx
  41bf53:	add    rdx,rcx
  41bf56:	mov    WORD PTR [r15+rdx*2+0xc4],ax
  41bf5f:	add    rsp,0x38
  41bf63:	pop    rbx
  41bf64:	pop    r12
  41bf66:	pop    r13
  41bf68:	pop    r14
  41bf6a:	pop    r15
  41bf6c:	pop    rbp
  41bf6d:	ret    
  41bf6e:	mov    rax,QWORD PTR [rsp]
  41bf72:	mov    rdi,QWORD PTR [rax+0xa8]
  41bf79:	test   rdi,rdi
  41bf7c:	jne    41bfbc <__ctype_b_loc@plt+0x19cec>
  41bf7e:	mov    rax,QWORD PTR [rsp]
  41bf82:	mov    BYTE PTR [rax+0xa],0x4
  41bf86:	mov    rax,QWORD PTR [rax+0x20]
  41bf8a:	cmp    QWORD PTR [rax+0x98],0x0
  41bf92:	je     41bfb2 <__ctype_b_loc@plt+0x19ce2>
  41bf94:	mov    esi,0x4
  41bf99:	mov    rbx,QWORD PTR [rsp]
  41bf9d:	mov    rdi,rbx
  41bfa0:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  41bfa5:	mov    rax,QWORD PTR [rbx+0x20]
  41bfa9:	mov    rdi,rbx
  41bfac:	call   QWORD PTR [rax+0x98]
  41bfb2:	mov    edi,0x1
  41bfb7:	call   402280 <exit@plt>
  41bfbc:	mov    DWORD PTR [rdi+0xd0],0x4
  41bfc6:	add    rdi,0x8
  41bfca:	mov    esi,0x1
  41bfcf:	call   402230 <longjmp@plt>
  41bfd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bfde:	xchg   ax,ax
  41bfe0:	push   rbp
  41bfe1:	push   r15
  41bfe3:	push   r14
  41bfe5:	push   r12
  41bfe7:	push   rbx
  41bfe8:	sub    rsp,0x20
  41bfec:	mov    r15,rsi
  41bfef:	mov    rbx,rdi
  41bff2:	mov    r14,QWORD PTR [rdi+0x30]
  41bff6:	mov    rdi,r14
  41bff9:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41bffe:	cmp    DWORD PTR [r15],0xc
  41c002:	jne    41c023 <__ctype_b_loc@plt+0x19d53>
  41c004:	mov    eax,DWORD PTR [r15+0x10]
  41c008:	cmp    eax,DWORD PTR [r15+0x14]
  41c00c:	je     41c0a9 <__ctype_b_loc@plt+0x19dd9>
  41c012:	mov    edx,DWORD PTR [r15+0x8]
  41c016:	movzx  eax,BYTE PTR [r14+0x4a]
  41c01b:	cmp    edx,eax
  41c01d:	jge    41c1a7 <__ctype_b_loc@plt+0x19ed7>
  41c023:	mov    rdi,r14
  41c026:	mov    rsi,r15
  41c029:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41c02e:	cmp    DWORD PTR [r15],0xc
  41c032:	jne    41c04d <__ctype_b_loc@plt+0x19d7d>
  41c034:	mov    eax,DWORD PTR [r15+0x8]
  41c038:	test   eax,0x100
  41c03d:	jne    41c04d <__ctype_b_loc@plt+0x19d7d>
  41c03f:	movzx  ecx,BYTE PTR [r14+0x4a]
  41c044:	cmp    eax,ecx
  41c046:	jl     41c04d <__ctype_b_loc@plt+0x19d7d>
  41c048:	add    DWORD PTR [r14+0x3c],0xffffffff
  41c04d:	mov    ecx,DWORD PTR [r14+0x3c]
  41c051:	lea    ebp,[rcx+0x1]
  41c054:	mov    rax,QWORD PTR [r14]
  41c057:	movzx  edx,BYTE PTR [rax+0x73]
  41c05b:	cmp    ecx,edx
  41c05d:	jl     41c095 <__ctype_b_loc@plt+0x19dc5>
  41c05f:	cmp    ecx,0xf9
  41c065:	jl     41c08a <__ctype_b_loc@plt+0x19dba>
  41c067:	mov    rdi,QWORD PTR [r14+0x18]
  41c06b:	mov    edx,DWORD PTR [rdi+0x10]
  41c06e:	lea    rsi,[rip+0xf2a9]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41c075:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41c07a:	mov    rax,QWORD PTR [r14]
  41c07d:	add    rax,0x73
  41c081:	mov    ecx,DWORD PTR [r14+0x3c]
  41c085:	add    ecx,0x1
  41c088:	jmp    41c090 <__ctype_b_loc@plt+0x19dc0>
  41c08a:	add    rax,0x73
  41c08e:	mov    ecx,ebp
  41c090:	mov    BYTE PTR [rax],bpl
  41c093:	mov    ebp,ecx
  41c095:	mov    DWORD PTR [r14+0x3c],ebp
  41c099:	add    ebp,0xffffffff
  41c09c:	mov    rdi,r14
  41c09f:	mov    rsi,r15
  41c0a2:	mov    edx,ebp
  41c0a4:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  41c0a9:	mov    eax,DWORD PTR [rbx+0x4]
  41c0ac:	mov    ecx,DWORD PTR [rbx+0x20]
  41c0af:	mov    DWORD PTR [rbx+0x8],eax
  41c0b2:	lea    r12,[rbx+0x20]
  41c0b6:	cmp    ecx,0x11f
  41c0bc:	jne    41c0d6 <__ctype_b_loc@plt+0x19e06>
  41c0be:	lea    rsi,[rbx+0x18]
  41c0c2:	mov    rdi,rbx
  41c0c5:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41c0ca:	mov    DWORD PTR [rbx+0x10],eax
  41c0cd:	cmp    eax,0x11d
  41c0d2:	jne    41c0f2 <__ctype_b_loc@plt+0x19e22>
  41c0d4:	jmp    41c119 <__ctype_b_loc@plt+0x19e49>
  41c0d6:	vmovups xmm0,XMMWORD PTR [r12]
  41c0dc:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41c0e1:	mov    DWORD PTR [rbx+0x20],0x11f
  41c0e8:	mov    eax,DWORD PTR [rbx+0x10]
  41c0eb:	cmp    eax,0x11d
  41c0f0:	je     41c119 <__ctype_b_loc@plt+0x19e49>
  41c0f2:	mov    rdi,QWORD PTR [rbx+0x38]
  41c0f6:	lea    rsi,[rip+0xf398]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  41c0fd:	lea    rdx,[rip+0xef50]        # 42b054 <__ctype_b_loc@plt+0x28d84>
  41c104:	xor    eax,eax
  41c106:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41c10b:	mov    edx,DWORD PTR [rbx+0x10]
  41c10e:	mov    rdi,rbx
  41c111:	mov    rsi,rax
  41c114:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41c119:	mov    rbp,QWORD PTR [rbx+0x18]
  41c11d:	mov    eax,DWORD PTR [rbx+0x4]
  41c120:	mov    DWORD PTR [rbx+0x8],eax
  41c123:	cmp    DWORD PTR [rbx+0x20],0x11f
  41c12a:	jne    41c13d <__ctype_b_loc@plt+0x19e6d>
  41c12c:	lea    rsi,[rbx+0x18]
  41c130:	mov    rdi,rbx
  41c133:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41c138:	mov    DWORD PTR [rbx+0x10],eax
  41c13b:	jmp    41c14f <__ctype_b_loc@plt+0x19e7f>
  41c13d:	vmovups xmm0,XMMWORD PTR [r12]
  41c143:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41c148:	mov    DWORD PTR [rbx+0x20],0x11f
  41c14f:	mov    rdi,QWORD PTR [rbx+0x30]
  41c153:	mov    QWORD PTR [rsp+0x8],rbp
  41c158:	mov    DWORD PTR [rsp+0x10],0x4
  41c160:	lea    rsi,[rsp+0x8]
  41c165:	mov    rdx,rsi
  41c168:	call   419b00 <__ctype_b_loc@plt+0x17830>
  41c16d:	mov    QWORD PTR [rsp+0x18],0xffffffffffffffff
  41c176:	mov    DWORD PTR [rsp+0x8],0x4
  41c17e:	mov    DWORD PTR [rsp+0x10],eax
  41c182:	lea    rsi,[rsp+0x8]
  41c187:	mov    rdi,r14
  41c18a:	call   419f50 <__ctype_b_loc@plt+0x17c80>
  41c18f:	mov    DWORD PTR [r15+0xc],eax
  41c193:	mov    DWORD PTR [r15],0x9
  41c19a:	add    rsp,0x20
  41c19e:	pop    rbx
  41c19f:	pop    r12
  41c1a1:	pop    r14
  41c1a3:	pop    r15
  41c1a5:	pop    rbp
  41c1a6:	ret    
  41c1a7:	mov    rdi,r14
  41c1aa:	mov    rsi,r15
  41c1ad:	jmp    41c0a4 <__ctype_b_loc@plt+0x19dd4>
  41c1b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c1bc:	nop    DWORD PTR [rax+0x0]
  41c1c0:	push   rbp
  41c1c1:	push   r15
  41c1c3:	push   r14
  41c1c5:	push   r13
  41c1c7:	push   r12
  41c1c9:	push   rbx
  41c1ca:	sub    rsp,0x38
  41c1ce:	mov    rbx,rsi
  41c1d1:	mov    rbp,rdi
  41c1d4:	mov    r13,QWORD PTR [rdi+0x30]
  41c1d8:	mov    r15d,DWORD PTR [rdi+0x4]
  41c1dc:	mov    edx,DWORD PTR [rdi+0x10]
  41c1df:	cmp    edx,0x11e
  41c1e5:	je     41c3c2 <__ctype_b_loc@plt+0x1a0f2>
  41c1eb:	cmp    edx,0x7b
  41c1ee:	je     41c3b2 <__ctype_b_loc@plt+0x1a0e2>
  41c1f4:	cmp    edx,0x28
  41c1f7:	jne    41c419 <__ctype_b_loc@plt+0x1a149>
  41c1fd:	mov    eax,r15d
  41c200:	mov    DWORD PTR [rsp+0x1c],r15d
  41c205:	cmp    r15d,DWORD PTR [rbp+0x8]
  41c209:	je     41c222 <__ctype_b_loc@plt+0x19f52>
  41c20b:	lea    rsi,[rip+0xf20d]        # 42b41f <__ctype_b_loc@plt+0x2914f>
  41c212:	mov    edx,0x28
  41c217:	mov    rdi,rbp
  41c21a:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41c21f:	mov    eax,DWORD PTR [rbp+0x4]
  41c222:	mov    DWORD PTR [rbp+0x8],eax
  41c225:	lea    r15,[rbp+0x20]
  41c229:	cmp    DWORD PTR [rbp+0x20],0x11f
  41c230:	jne    41c42d <__ctype_b_loc@plt+0x1a15d>
  41c236:	lea    rsi,[rbp+0x18]
  41c23a:	mov    rdi,rbp
  41c23d:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41c242:	mov    DWORD PTR [rbp+0x10],eax
  41c245:	cmp    eax,0x29
  41c248:	je     41c44a <__ctype_b_loc@plt+0x1a17a>
  41c24e:	mov    QWORD PTR [rsp+0x20],rbx
  41c253:	mov    rsi,rsp
  41c256:	xor    edx,edx
  41c258:	mov    rdi,rbp
  41c25b:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  41c260:	cmp    DWORD PTR [rbp+0x10],0x2c
  41c264:	jne    41c37a <__ctype_b_loc@plt+0x1a0aa>
  41c26a:	lea    rax,[rbp+0x18]
  41c26e:	mov    QWORD PTR [rsp+0x30],rax
  41c273:	lea    rax,[rbp+0x10]
  41c277:	mov    QWORD PTR [rsp+0x28],rax
  41c27c:	mov    rbx,rsp
  41c27f:	nop
  41c280:	mov    eax,DWORD PTR [rbp+0x4]
  41c283:	mov    ecx,DWORD PTR [rbp+0x20]
  41c286:	mov    DWORD PTR [rbp+0x8],eax
  41c289:	cmp    ecx,0x11f
  41c28f:	jne    41c2b0 <__ctype_b_loc@plt+0x19fe0>
  41c291:	mov    rdi,rbp
  41c294:	mov    rsi,QWORD PTR [rsp+0x30]
  41c299:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41c29e:	mov    DWORD PTR [rbp+0x10],eax
  41c2a1:	jmp    41c2c5 <__ctype_b_loc@plt+0x19ff5>
  41c2a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c2ad:	nop    DWORD PTR [rax]
  41c2b0:	vmovups xmm0,XMMWORD PTR [r15]
  41c2b5:	mov    rax,QWORD PTR [rsp+0x28]
  41c2ba:	vmovups XMMWORD PTR [rax],xmm0
  41c2be:	mov    DWORD PTR [r15],0x11f
  41c2c5:	mov    r14,QWORD PTR [rbp+0x30]
  41c2c9:	mov    rdi,r14
  41c2cc:	mov    rsi,rbx
  41c2cf:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41c2d4:	cmp    DWORD PTR [rsp],0xc
  41c2d8:	jne    41c300 <__ctype_b_loc@plt+0x1a030>
  41c2da:	mov    eax,DWORD PTR [rsp+0x8]
  41c2de:	test   eax,0x100
  41c2e3:	jne    41c300 <__ctype_b_loc@plt+0x1a030>
  41c2e5:	movzx  ecx,BYTE PTR [r14+0x4a]
  41c2ea:	cmp    eax,ecx
  41c2ec:	jl     41c300 <__ctype_b_loc@plt+0x1a030>
  41c2ee:	add    DWORD PTR [r14+0x3c],0xffffffff
  41c2f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c2fd:	nop    DWORD PTR [rax]
  41c300:	mov    ecx,DWORD PTR [r14+0x3c]
  41c304:	lea    r12d,[rcx+0x1]
  41c308:	mov    rax,QWORD PTR [r14]
  41c30b:	movzx  edx,BYTE PTR [rax+0x73]
  41c30f:	cmp    ecx,edx
  41c311:	jl     41c34d <__ctype_b_loc@plt+0x1a07d>
  41c313:	cmp    ecx,0xf9
  41c319:	jl     41c340 <__ctype_b_loc@plt+0x1a070>
  41c31b:	mov    rdi,QWORD PTR [r14+0x18]
  41c31f:	mov    edx,DWORD PTR [rdi+0x10]
  41c322:	lea    rsi,[rip+0xeff5]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41c329:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41c32e:	mov    rax,QWORD PTR [r14]
  41c331:	add    rax,0x73
  41c335:	mov    ecx,DWORD PTR [r14+0x3c]
  41c339:	add    ecx,0x1
  41c33c:	jmp    41c347 <__ctype_b_loc@plt+0x1a077>
  41c33e:	xchg   ax,ax
  41c340:	add    rax,0x73
  41c344:	mov    ecx,r12d
  41c347:	mov    BYTE PTR [rax],r12b
  41c34a:	mov    r12d,ecx
  41c34d:	mov    DWORD PTR [r14+0x3c],r12d
  41c351:	add    r12d,0xffffffff
  41c355:	mov    rdi,r14
  41c358:	mov    rsi,rbx
  41c35b:	mov    edx,r12d
  41c35e:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  41c363:	xor    edx,edx
  41c365:	mov    rdi,rbp
  41c368:	mov    rsi,rbx
  41c36b:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  41c370:	cmp    DWORD PTR [rbp+0x10],0x2c
  41c374:	je     41c280 <__ctype_b_loc@plt+0x19fb0>
  41c37a:	mov    eax,DWORD PTR [rsp]
  41c37d:	cmp    eax,0xe
  41c380:	mov    r15d,DWORD PTR [rsp+0x1c]
  41c385:	je     41c474 <__ctype_b_loc@plt+0x1a1a4>
  41c38b:	cmp    eax,0xd
  41c38e:	mov    rbx,QWORD PTR [rsp+0x20]
  41c393:	jne    41c4f5 <__ctype_b_loc@plt+0x1a225>
  41c399:	mov    rax,QWORD PTR [r13+0x0]
  41c39d:	mov    rax,QWORD PTR [rax+0x18]
  41c3a1:	movsxd rcx,DWORD PTR [rsp+0x8]
  41c3a6:	and    DWORD PTR [rax+rcx*4],0xff803fff
  41c3ad:	jmp    41c4f5 <__ctype_b_loc@plt+0x1a225>
  41c3b2:	mov    rsi,rsp
  41c3b5:	mov    rdi,rbp
  41c3b8:	call   41a1c0 <__ctype_b_loc@plt+0x17ef0>
  41c3bd:	jmp    41c50a <__ctype_b_loc@plt+0x1a23a>
  41c3c2:	mov    rax,QWORD PTR [rbp+0x18]
  41c3c6:	mov    QWORD PTR [rsp],rax
  41c3ca:	mov    DWORD PTR [rsp+0x8],0x4
  41c3d2:	mov    rsi,rsp
  41c3d5:	mov    rdi,r13
  41c3d8:	mov    rdx,rsi
  41c3db:	call   419b00 <__ctype_b_loc@plt+0x17830>
  41c3e0:	mov    QWORD PTR [rsp+0x10],0xffffffffffffffff
  41c3e9:	mov    DWORD PTR [rsp],0x4
  41c3f0:	mov    DWORD PTR [rsp+0x8],eax
  41c3f4:	mov    eax,DWORD PTR [rbp+0x4]
  41c3f7:	mov    ecx,DWORD PTR [rbp+0x20]
  41c3fa:	mov    DWORD PTR [rbp+0x8],eax
  41c3fd:	cmp    ecx,0x11f
  41c403:	jne    41c45b <__ctype_b_loc@plt+0x1a18b>
  41c405:	lea    rsi,[rbp+0x18]
  41c409:	mov    rdi,rbp
  41c40c:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41c411:	mov    DWORD PTR [rbp+0x10],eax
  41c414:	jmp    41c50a <__ctype_b_loc@plt+0x1a23a>
  41c419:	lea    rsi,[rip+0xf030]        # 42b450 <__ctype_b_loc@plt+0x29180>
  41c420:	mov    rdi,rbp
  41c423:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41c428:	jmp    41c618 <__ctype_b_loc@plt+0x1a348>
  41c42d:	vmovups xmm0,XMMWORD PTR [r15]
  41c432:	vmovups XMMWORD PTR [rbp+0x10],xmm0
  41c437:	mov    DWORD PTR [rbp+0x20],0x11f
  41c43e:	mov    eax,DWORD PTR [rbp+0x10]
  41c441:	cmp    eax,0x29
  41c444:	jne    41c24e <__ctype_b_loc@plt+0x19f7e>
  41c44a:	mov    DWORD PTR [rsp],0x0
  41c451:	mov    r15d,DWORD PTR [rsp+0x1c]
  41c456:	jmp    41c4f5 <__ctype_b_loc@plt+0x1a225>
  41c45b:	lea    rax,[rbp+0x20]
  41c45f:	vmovups xmm0,XMMWORD PTR [rax]
  41c463:	vmovups XMMWORD PTR [rbp+0x10],xmm0
  41c468:	mov    DWORD PTR [rbp+0x20],0x11f
  41c46f:	jmp    41c50a <__ctype_b_loc@plt+0x1a23a>
  41c474:	mov    rax,QWORD PTR [r13+0x0]
  41c478:	mov    rcx,QWORD PTR [rax+0x18]
  41c47c:	movsxd rdx,DWORD PTR [rsp+0x8]
  41c481:	and    DWORD PTR [rcx+rdx*4],0x7fffff
  41c488:	movsxd rdx,DWORD PTR [rsp+0x8]
  41c48d:	mov    esi,0xffffc03f
  41c492:	and    esi,DWORD PTR [rcx+rdx*4]
  41c495:	mov    edi,DWORD PTR [r13+0x3c]
  41c499:	shl    edi,0x6
  41c49c:	and    edi,0x3fc0
  41c4a2:	or     edi,esi
  41c4a4:	mov    DWORD PTR [rcx+rdx*4],edi
  41c4a7:	mov    ecx,DWORD PTR [r13+0x3c]
  41c4ab:	lea    ebx,[rcx+0x1]
  41c4ae:	movzx  edx,BYTE PTR [rax+0x73]
  41c4b2:	cmp    ecx,edx
  41c4b4:	jl     41c4ec <__ctype_b_loc@plt+0x1a21c>
  41c4b6:	cmp    ecx,0xf9
  41c4bc:	jl     41c4e2 <__ctype_b_loc@plt+0x1a212>
  41c4be:	mov    rdi,QWORD PTR [r13+0x18]
  41c4c2:	mov    edx,DWORD PTR [rdi+0x10]
  41c4c5:	lea    rsi,[rip+0xee52]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41c4cc:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41c4d1:	mov    rax,QWORD PTR [r13+0x0]
  41c4d5:	add    rax,0x73
  41c4d9:	mov    ecx,DWORD PTR [r13+0x3c]
  41c4dd:	add    ecx,0x1
  41c4e0:	jmp    41c4e8 <__ctype_b_loc@plt+0x1a218>
  41c4e2:	add    rax,0x73
  41c4e6:	mov    ecx,ebx
  41c4e8:	mov    BYTE PTR [rax],bl
  41c4ea:	mov    ebx,ecx
  41c4ec:	mov    DWORD PTR [r13+0x3c],ebx
  41c4f0:	mov    rbx,QWORD PTR [rsp+0x20]
  41c4f5:	mov    esi,0x29
  41c4fa:	mov    edx,0x28
  41c4ff:	mov    rdi,rbp
  41c502:	mov    ecx,r15d
  41c505:	call   417950 <__ctype_b_loc@plt+0x15680>
  41c50a:	mov    ebp,DWORD PTR [rbx+0x8]
  41c50d:	xor    eax,eax
  41c50f:	mov    ecx,DWORD PTR [rsp]
  41c512:	lea    edx,[rcx-0xd]
  41c515:	cmp    edx,0x2
  41c518:	jb     41c5d3 <__ctype_b_loc@plt+0x1a303>
  41c51e:	test   ecx,ecx
  41c520:	jne    41c52e <__ctype_b_loc@plt+0x1a25e>
  41c522:	mov    r12,rbx
  41c525:	lea    rbx,[r13+0x3c]
  41c529:	jmp    41c5c2 <__ctype_b_loc@plt+0x1a2f2>
  41c52e:	mov    rsi,rsp
  41c531:	mov    rdi,r13
  41c534:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41c539:	cmp    DWORD PTR [rsp],0xc
  41c53d:	jne    41c558 <__ctype_b_loc@plt+0x1a288>
  41c53f:	mov    eax,DWORD PTR [rsp+0x8]
  41c543:	test   eax,0x100
  41c548:	jne    41c558 <__ctype_b_loc@plt+0x1a288>
  41c54a:	movzx  ecx,BYTE PTR [r13+0x4a]
  41c54f:	cmp    eax,ecx
  41c551:	jl     41c558 <__ctype_b_loc@plt+0x1a288>
  41c553:	add    DWORD PTR [r13+0x3c],0xffffffff
  41c558:	mov    ecx,DWORD PTR [r13+0x3c]
  41c55c:	lea    r14d,[rcx+0x1]
  41c560:	mov    rax,QWORD PTR [r13+0x0]
  41c564:	movzx  edx,BYTE PTR [rax+0x73]
  41c568:	mov    r12,rbx
  41c56b:	cmp    ecx,edx
  41c56d:	jl     41c5a8 <__ctype_b_loc@plt+0x1a2d8>
  41c56f:	cmp    ecx,0xf9
  41c575:	jl     41c59b <__ctype_b_loc@plt+0x1a2cb>
  41c577:	mov    rdi,QWORD PTR [r13+0x18]
  41c57b:	mov    edx,DWORD PTR [rdi+0x10]
  41c57e:	lea    rsi,[rip+0xed99]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41c585:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41c58a:	mov    rax,QWORD PTR [r13+0x0]
  41c58e:	add    rax,0x73
  41c592:	mov    ecx,DWORD PTR [r13+0x3c]
  41c596:	add    ecx,0x1
  41c599:	jmp    41c5a2 <__ctype_b_loc@plt+0x1a2d2>
  41c59b:	add    rax,0x73
  41c59f:	mov    ecx,r14d
  41c5a2:	mov    BYTE PTR [rax],r14b
  41c5a5:	mov    r14d,ecx
  41c5a8:	lea    rbx,[r13+0x3c]
  41c5ac:	mov    DWORD PTR [r13+0x3c],r14d
  41c5b0:	add    r14d,0xffffffff
  41c5b4:	mov    rsi,rsp
  41c5b7:	mov    rdi,r13
  41c5ba:	mov    edx,r14d
  41c5bd:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  41c5c2:	mov    eax,ebp
  41c5c4:	not    eax
  41c5c6:	add    eax,DWORD PTR [rbx]
  41c5c8:	shl    eax,0x17
  41c5cb:	add    eax,0x800000
  41c5d0:	mov    rbx,r12
  41c5d3:	mov    esi,ebp
  41c5d5:	shl    esi,0x6
  41c5d8:	or     esi,eax
  41c5da:	or     esi,0x801c
  41c5e0:	mov    rax,QWORD PTR [r13+0x18]
  41c5e4:	mov    edx,DWORD PTR [rax+0x8]
  41c5e7:	mov    rdi,r13
  41c5ea:	call   419630 <__ctype_b_loc@plt+0x17360>
  41c5ef:	mov    QWORD PTR [rbx+0x10],0xffffffffffffffff
  41c5f7:	mov    DWORD PTR [rbx],0xd
  41c5fd:	mov    DWORD PTR [rbx+0x8],eax
  41c600:	mov    rax,QWORD PTR [r13+0x0]
  41c604:	mov    rax,QWORD PTR [rax+0x28]
  41c608:	movsxd rcx,DWORD PTR [r13+0x30]
  41c60c:	mov    DWORD PTR [rax+rcx*4-0x4],r15d
  41c611:	add    ebp,0x1
  41c614:	mov    DWORD PTR [r13+0x3c],ebp
  41c618:	add    rsp,0x38
  41c61c:	pop    rbx
  41c61d:	pop    r12
  41c61f:	pop    r13
  41c621:	pop    r14
  41c623:	pop    r15
  41c625:	pop    rbp
  41c626:	ret    
  41c627:	nop    WORD PTR [rax+rax*1+0x0]
  41c630:	push   rbp
  41c631:	push   r15
  41c633:	push   r14
  41c635:	push   r13
  41c637:	push   r12
  41c639:	push   rbx
  41c63a:	sub    rsp,0x28
  41c63e:	mov    r14,rdx
  41c641:	test   rdi,rdi
  41c644:	je     41c771 <__ctype_b_loc@plt+0x1a4a1>
  41c64a:	mov    r15,rsi
  41c64d:	mov    rbx,rdi
  41c650:	movzx  edx,BYTE PTR [rdi+0x4a]
  41c654:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c65e:	xchg   ax,ax
  41c660:	test   rdx,rdx
  41c663:	jle    41c6d9 <__ctype_b_loc@plt+0x1a409>
  41c665:	mov    rax,QWORD PTR [rbx]
  41c668:	mov    rax,QWORD PTR [rax+0x30]
  41c66c:	movzx  esi,WORD PTR [rbx+rdx*2+0xc2]
  41c674:	add    rdx,0xffffffffffffffff
  41c678:	shl    rsi,0x4
  41c67c:	cmp    QWORD PTR [rax+rsi*1],r15
  41c680:	jne    41c660 <__ctype_b_loc@plt+0x1a390>
  41c682:	test   edx,edx
  41c684:	js     41c6d9 <__ctype_b_loc@plt+0x1a409>
  41c686:	mov    QWORD PTR [r14+0x10],0xffffffffffffffff
  41c68e:	mov    DWORD PTR [r14],0x6
  41c695:	mov    DWORD PTR [r14+0x8],edx
  41c699:	mov    eax,0x6
  41c69e:	test   ecx,ecx
  41c6a0:	jne    41c9dd <__ctype_b_loc@plt+0x1a70d>
  41c6a6:	mov    rcx,QWORD PTR [rbx+0x28]
  41c6aa:	test   rcx,rcx
  41c6ad:	je     41c9dd <__ctype_b_loc@plt+0x1a70d>
  41c6b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c6bd:	nop    DWORD PTR [rax]
  41c6c0:	movzx  esi,BYTE PTR [rcx+0xc]
  41c6c4:	cmp    esi,edx
  41c6c6:	jle    41c799 <__ctype_b_loc@plt+0x1a4c9>
  41c6cc:	mov    rcx,QWORD PTR [rcx]
  41c6cf:	test   rcx,rcx
  41c6d2:	jne    41c6c0 <__ctype_b_loc@plt+0x1a3f0>
  41c6d4:	jmp    41c9dd <__ctype_b_loc@plt+0x1a70d>
  41c6d9:	mov    rdi,QWORD PTR [rbx+0x10]
  41c6dd:	xor    ecx,ecx
  41c6df:	mov    rsi,r15
  41c6e2:	mov    rdx,r14
  41c6e5:	call   41c630 <__ctype_b_loc@plt+0x1a360>
  41c6ea:	mov    ecx,eax
  41c6ec:	mov    eax,0x8
  41c6f1:	cmp    ecx,0x8
  41c6f4:	je     41c9dd <__ctype_b_loc@plt+0x1a70d>
  41c6fa:	mov    rbp,QWORD PTR [rbx]
  41c6fd:	mov    r12d,DWORD PTR [rbp+0x48]
  41c701:	movzx  eax,BYTE PTR [rbp+0x70]
  41c705:	test   rax,rax
  41c708:	je     41c792 <__ctype_b_loc@plt+0x1a4c2>
  41c70e:	mov    ecx,DWORD PTR [r14]
  41c711:	lea    rsi,[r14+0x8]
  41c715:	xor    edx,edx
  41c717:	nop    WORD PTR [rax+rax*1+0x0]
  41c720:	movzx  edi,BYTE PTR [rbx+rdx*2+0x4b]
  41c725:	cmp    ecx,edi
  41c727:	jne    41c736 <__ctype_b_loc@plt+0x1a466>
  41c729:	movzx  edi,BYTE PTR [rbx+rdx*2+0x4c]
  41c72e:	cmp    DWORD PTR [rsi],edi
  41c730:	je     41c9cf <__ctype_b_loc@plt+0x1a6ff>
  41c736:	add    rdx,0x1
  41c73a:	cmp    rdx,rax
  41c73d:	jb     41c720 <__ctype_b_loc@plt+0x1a450>
  41c73f:	mov    r13d,r12d
  41c742:	cmp    al,0x3c
  41c744:	jb     41c7d1 <__ctype_b_loc@plt+0x1a501>
  41c74a:	mov    edx,DWORD PTR [rbp+0x60]
  41c74d:	mov    rdi,QWORD PTR [rbx+0x20]
  41c751:	test   edx,edx
  41c753:	je     41c7a2 <__ctype_b_loc@plt+0x1a4d2>
  41c755:	lea    rsi,[rip+0xec49]        # 42b3a5 <__ctype_b_loc@plt+0x290d5>
  41c75c:	lea    r8,[rip+0xecb3]        # 42b416 <__ctype_b_loc@plt+0x29146>
  41c763:	mov    ecx,0x3c
  41c768:	xor    eax,eax
  41c76a:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41c76f:	jmp    41c7bc <__ctype_b_loc@plt+0x1a4ec>
  41c771:	mov    QWORD PTR [r14+0x10],0xffffffffffffffff
  41c779:	mov    DWORD PTR [r14],0x8
  41c780:	mov    DWORD PTR [r14+0x8],0xff
  41c788:	mov    eax,0x8
  41c78d:	jmp    41c9dd <__ctype_b_loc@plt+0x1a70d>
  41c792:	xor    eax,eax
  41c794:	mov    r13d,r12d
  41c797:	jmp    41c7d1 <__ctype_b_loc@plt+0x1a501>
  41c799:	mov    BYTE PTR [rcx+0xd],0x1
  41c79d:	jmp    41c9dd <__ctype_b_loc@plt+0x1a70d>
  41c7a2:	lea    rsi,[rip+0xebda]        # 42b383 <__ctype_b_loc@plt+0x290b3>
  41c7a9:	lea    rcx,[rip+0xec66]        # 42b416 <__ctype_b_loc@plt+0x29146>
  41c7b0:	mov    edx,0x3c
  41c7b5:	xor    eax,eax
  41c7b7:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41c7bc:	mov    rdi,QWORD PTR [rbx+0x18]
  41c7c0:	xor    edx,edx
  41c7c2:	mov    rsi,rax
  41c7c5:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41c7ca:	mov    al,BYTE PTR [rbp+0x70]
  41c7cd:	mov    r13d,DWORD PTR [rbp+0x48]
  41c7d1:	movzx  eax,al
  41c7d4:	cmp    r13d,eax
  41c7d7:	jle    41c7ef <__ctype_b_loc@plt+0x1a51f>
  41c7d9:	lea    rcx,[rbp+0x38]
  41c7dd:	mov    rax,QWORD PTR [rbp+0x38]
  41c7e1:	cmp    r12d,r13d
  41c7e4:	jl     41c8bf <__ctype_b_loc@plt+0x1a5ef>
  41c7ea:	jmp    41c968 <__ctype_b_loc@plt+0x1a698>
  41c7ef:	mov    rsi,QWORD PTR [rbx+0x20]
  41c7f3:	mov    r8,QWORD PTR [rbp+0x38]
  41c7f7:	cmp    r13d,0x3ffffffe
  41c7fe:	mov    QWORD PTR [rsp+0x8],rsi
  41c803:	mov    QWORD PTR [rsp+0x20],rbp
  41c808:	mov    DWORD PTR [rsp+0x14],r12d
  41c80d:	jge    41c827 <__ctype_b_loc@plt+0x1a557>
  41c80f:	lea    ecx,[r13+r13*1+0x0]
  41c814:	cmp    ecx,0x3
  41c817:	mov    eax,r13d
  41c81a:	mov    edx,0x4
  41c81f:	cmovg  edx,ecx
  41c822:	mov    r13d,edx
  41c825:	jmp    41c85c <__ctype_b_loc@plt+0x1a58c>
  41c827:	cmp    r13d,0x7ffffffd
  41c82e:	jge    41c835 <__ctype_b_loc@plt+0x1a565>
  41c830:	mov    eax,r13d
  41c833:	jmp    41c856 <__ctype_b_loc@plt+0x1a586>
  41c835:	lea    rsi,[rip+0xe85f]        # 42b09b <__ctype_b_loc@plt+0x28dcb>
  41c83c:	xor    eax,eax
  41c83e:	mov    rdi,QWORD PTR [rsp+0x8]
  41c843:	mov    r12,r8
  41c846:	call   404080 <__ctype_b_loc@plt+0x1db0>
  41c84b:	mov    r8,r12
  41c84e:	mov    rsi,QWORD PTR [rsp+0x8]
  41c853:	mov    eax,DWORD PTR [rbp+0x48]
  41c856:	mov    r13d,0x7ffffffd
  41c85c:	movsxd rbp,eax
  41c85f:	shl    rbp,0x3
  41c863:	mov    r12d,r13d
  41c866:	shl    r12,0x3
  41c86a:	mov    rax,QWORD PTR [rsi+0x20]
  41c86e:	mov    rdi,QWORD PTR [rax+0x18]
  41c872:	mov    rsi,r8
  41c875:	mov    rdx,rbp
  41c878:	mov    rcx,r12
  41c87b:	mov    QWORD PTR [rsp+0x18],rax
  41c880:	call   QWORD PTR [rax+0x10]
  41c883:	test   r13d,r13d
  41c886:	je     41c891 <__ctype_b_loc@plt+0x1a5c1>
  41c888:	test   rax,rax
  41c88b:	je     41c9ec <__ctype_b_loc@plt+0x1a71c>
  41c891:	mov    rdx,QWORD PTR [rsp+0x20]
  41c896:	lea    rcx,[rdx+0x38]
  41c89a:	sub    r12,rbp
  41c89d:	mov    rsi,QWORD PTR [rsp+0x18]
  41c8a2:	add    QWORD PTR [rsi+0x78],r12
  41c8a6:	mov    rbp,rdx
  41c8a9:	mov    DWORD PTR [rdx+0x48],r13d
  41c8ad:	mov    QWORD PTR [rdx+0x38],rax
  41c8b1:	mov    r12d,DWORD PTR [rsp+0x14]
  41c8b6:	cmp    r12d,r13d
  41c8b9:	jge    41c968 <__ctype_b_loc@plt+0x1a698>
  41c8bf:	movsxd rdx,r12d
  41c8c2:	movsxd rsi,r13d
  41c8c5:	sub    r13d,r12d
  41c8c8:	mov    rdi,rdx
  41c8cb:	not    rdi
  41c8ce:	add    rdi,rsi
  41c8d1:	and    r13,0x7
  41c8d5:	je     41c8f5 <__ctype_b_loc@plt+0x1a625>
  41c8d7:	neg    r13
  41c8da:	nop    WORD PTR [rax+rax*1+0x0]
  41c8e0:	mov    QWORD PTR [rax+rdx*8],0x0
  41c8e8:	add    rdx,0x1
  41c8ec:	mov    rax,QWORD PTR [rcx]
  41c8ef:	add    r13,0x1
  41c8f3:	jne    41c8e0 <__ctype_b_loc@plt+0x1a610>
  41c8f5:	cmp    rdi,0x7
  41c8f9:	jb     41c968 <__ctype_b_loc@plt+0x1a698>
  41c8fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41c900:	mov    QWORD PTR [rax+rdx*8],0x0
  41c908:	mov    rax,QWORD PTR [rcx]
  41c90b:	mov    QWORD PTR [rax+rdx*8+0x8],0x0
  41c914:	mov    rax,QWORD PTR [rcx]
  41c917:	mov    QWORD PTR [rax+rdx*8+0x10],0x0
  41c920:	mov    rax,QWORD PTR [rcx]
  41c923:	mov    QWORD PTR [rax+rdx*8+0x18],0x0
  41c92c:	mov    rax,QWORD PTR [rcx]
  41c92f:	mov    QWORD PTR [rax+rdx*8+0x20],0x0
  41c938:	mov    rax,QWORD PTR [rcx]
  41c93b:	mov    QWORD PTR [rax+rdx*8+0x28],0x0
  41c944:	mov    rax,QWORD PTR [rcx]
  41c947:	mov    QWORD PTR [rax+rdx*8+0x30],0x0
  41c950:	mov    rax,QWORD PTR [rcx]
  41c953:	mov    QWORD PTR [rax+rdx*8+0x38],0x0
  41c95c:	add    rdx,0x8
  41c960:	mov    rax,QWORD PTR [rcx]
  41c963:	cmp    rsi,rdx
  41c966:	jne    41c900 <__ctype_b_loc@plt+0x1a630>
  41c968:	mov    cl,BYTE PTR [rbp+0x70]
  41c96b:	movzx  edx,cl
  41c96e:	mov    QWORD PTR [rax+rdx*8],r15
  41c972:	test   BYTE PTR [r15+0x9],0x3
  41c977:	je     41c9b0 <__ctype_b_loc@plt+0x1a6e0>
  41c979:	mov    r8b,BYTE PTR [rbp+0x9]
  41c97d:	test   r8b,0x4
  41c981:	je     41c9b0 <__ctype_b_loc@plt+0x1a6e0>
  41c983:	mov    rsi,QWORD PTR [rbx+0x20]
  41c987:	mov    rdi,QWORD PTR [rsi+0x20]
  41c98b:	cmp    BYTE PTR [rdi+0x21],0x1
  41c98f:	jne    41c9a1 <__ctype_b_loc@plt+0x1a6d1>
  41c991:	mov    rsi,r15
  41c994:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  41c999:	mov    cl,BYTE PTR [rbp+0x70]
  41c99c:	movzx  edx,cl
  41c99f:	jmp    41c9b0 <__ctype_b_loc@plt+0x1a6e0>
  41c9a1:	and    r8b,0xf8
  41c9a5:	mov    al,BYTE PTR [rdi+0x20]
  41c9a8:	and    al,0x3
  41c9aa:	or     al,r8b
  41c9ad:	mov    BYTE PTR [rbp+0x9],al
  41c9b0:	mov    al,BYTE PTR [r14]
  41c9b3:	mov    BYTE PTR [rbx+rdx*2+0x4b],al
  41c9b7:	mov    al,BYTE PTR [r14+0x8]
  41c9bb:	mov    rsi,r14
  41c9be:	add    rsi,0x8
  41c9c2:	mov    BYTE PTR [rbx+rdx*2+0x4c],al
  41c9c6:	movzx  edx,cl
  41c9c9:	add    cl,0x1
  41c9cc:	mov    BYTE PTR [rbp+0x70],cl
  41c9cf:	mov    DWORD PTR [rsi],edx
  41c9d1:	mov    DWORD PTR [r14],0x7
  41c9d8:	mov    eax,0x7
  41c9dd:	add    rsp,0x28
  41c9e1:	pop    rbx
  41c9e2:	pop    r12
  41c9e4:	pop    r13
  41c9e6:	pop    r14
  41c9e8:	pop    r15
  41c9ea:	pop    rbp
  41c9eb:	ret    
  41c9ec:	mov    rax,QWORD PTR [rsp+0x8]
  41c9f1:	mov    rdi,QWORD PTR [rax+0xa8]
  41c9f8:	test   rdi,rdi
  41c9fb:	jne    41ca3d <__ctype_b_loc@plt+0x1a76d>
  41c9fd:	mov    rax,QWORD PTR [rsp+0x8]
  41ca02:	mov    BYTE PTR [rax+0xa],0x4
  41ca06:	mov    rax,QWORD PTR [rax+0x20]
  41ca0a:	cmp    QWORD PTR [rax+0x98],0x0
  41ca12:	je     41ca33 <__ctype_b_loc@plt+0x1a763>
  41ca14:	mov    esi,0x4
  41ca19:	mov    rbx,QWORD PTR [rsp+0x8]
  41ca1e:	mov    rdi,rbx
  41ca21:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  41ca26:	mov    rax,QWORD PTR [rbx+0x20]
  41ca2a:	mov    rdi,rbx
  41ca2d:	call   QWORD PTR [rax+0x98]
  41ca33:	mov    edi,0x1
  41ca38:	call   402280 <exit@plt>
  41ca3d:	mov    DWORD PTR [rdi+0xd0],0x4
  41ca47:	add    rdi,0x8
  41ca4b:	mov    esi,0x1
  41ca50:	call   402230 <longjmp@plt>
  41ca55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ca5f:	nop
  41ca60:	push   rbp
  41ca61:	push   r15
  41ca63:	push   r14
  41ca65:	push   rbx
  41ca66:	push   rax
  41ca67:	mov    ebp,edx
  41ca69:	mov    rbx,rsi
  41ca6c:	mov    r14,rdi
  41ca6f:	mov    eax,DWORD PTR [rsi]
  41ca71:	cmp    eax,0xc
  41ca74:	je     41cb27 <__ctype_b_loc@plt+0x1a857>
  41ca7a:	cmp    eax,0xb
  41ca7d:	jne    41cac1 <__ctype_b_loc@plt+0x1a7f1>
  41ca7f:	mov    rax,QWORD PTR [r14]
  41ca82:	mov    rax,QWORD PTR [rax+0x18]
  41ca86:	movsxd rcx,DWORD PTR [rbx+0x8]
  41ca8a:	mov    eax,DWORD PTR [rax+rcx*4]
  41ca8d:	mov    ecx,eax
  41ca8f:	and    ecx,0x3f
  41ca92:	cmp    ecx,0x13
  41ca95:	jne    41cac1 <__ctype_b_loc@plt+0x1a7f1>
  41ca97:	add    DWORD PTR [r14+0x30],0xffffffff
  41ca9c:	shr    eax,0x11
  41ca9f:	and    eax,0xffffffc0
  41caa2:	xor    esi,esi
  41caa4:	test   ebp,ebp
  41caa6:	sete   sil
  41caaa:	shl    esi,0xe
  41caad:	or     esi,eax
  41caaf:	or     esi,0x1a
  41cab2:	mov    rax,QWORD PTR [r14+0x18]
  41cab6:	mov    edx,DWORD PTR [rax+0x8]
  41cab9:	mov    rdi,r14
  41cabc:	jmp    41cb65 <__ctype_b_loc@plt+0x1a895>
  41cac1:	mov    ecx,DWORD PTR [r14+0x3c]
  41cac5:	lea    r15d,[rcx+0x1]
  41cac9:	mov    rax,QWORD PTR [r14]
  41cacc:	movzx  edx,BYTE PTR [rax+0x73]
  41cad0:	cmp    ecx,edx
  41cad2:	jl     41cb0c <__ctype_b_loc@plt+0x1a83c>
  41cad4:	cmp    ecx,0xf9
  41cada:	jl     41caff <__ctype_b_loc@plt+0x1a82f>
  41cadc:	mov    rdi,QWORD PTR [r14+0x18]
  41cae0:	mov    edx,DWORD PTR [rdi+0x10]
  41cae3:	lea    rsi,[rip+0xe834]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41caea:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41caef:	mov    rax,QWORD PTR [r14]
  41caf2:	add    rax,0x73
  41caf6:	mov    ecx,DWORD PTR [r14+0x3c]
  41cafa:	add    ecx,0x1
  41cafd:	jmp    41cb06 <__ctype_b_loc@plt+0x1a836>
  41caff:	add    rax,0x73
  41cb03:	mov    ecx,r15d
  41cb06:	mov    BYTE PTR [rax],r15b
  41cb09:	mov    r15d,ecx
  41cb0c:	mov    DWORD PTR [r14+0x3c],r15d
  41cb10:	add    r15d,0xffffffff
  41cb14:	mov    rdi,r14
  41cb17:	mov    rsi,rbx
  41cb1a:	mov    edx,r15d
  41cb1d:	call   419980 <__ctype_b_loc@plt+0x176b0>
  41cb22:	cmp    DWORD PTR [rbx],0xc
  41cb25:	jne    41cb45 <__ctype_b_loc@plt+0x1a875>
  41cb27:	mov    eax,DWORD PTR [rbx+0x8]
  41cb2a:	add    rbx,0x8
  41cb2e:	test   eax,0x100
  41cb33:	jne    41cb49 <__ctype_b_loc@plt+0x1a879>
  41cb35:	movzx  ecx,BYTE PTR [r14+0x4a]
  41cb3a:	cmp    eax,ecx
  41cb3c:	jl     41cb49 <__ctype_b_loc@plt+0x1a879>
  41cb3e:	add    DWORD PTR [r14+0x3c],0xffffffff
  41cb43:	jmp    41cb49 <__ctype_b_loc@plt+0x1a879>
  41cb45:	add    rbx,0x8
  41cb49:	mov    eax,DWORD PTR [rbx]
  41cb4b:	shl    eax,0x17
  41cb4e:	shl    ebp,0xe
  41cb51:	or     ebp,eax
  41cb53:	or     ebp,0x3fdb
  41cb59:	mov    rax,QWORD PTR [r14+0x18]
  41cb5d:	mov    edx,DWORD PTR [rax+0x8]
  41cb60:	mov    rdi,r14
  41cb63:	mov    esi,ebp
  41cb65:	call   419630 <__ctype_b_loc@plt+0x17360>
  41cb6a:	mov    rdi,r14
  41cb6d:	add    rsp,0x8
  41cb71:	pop    rbx
  41cb72:	pop    r14
  41cb74:	pop    r15
  41cb76:	pop    rbp
  41cb77:	jmp    417bd0 <__ctype_b_loc@plt+0x15900>
  41cb7c:	nop    DWORD PTR [rax+0x0]
  41cb80:	push   rbp
  41cb81:	push   r15
  41cb83:	push   r14
  41cb85:	push   r13
  41cb87:	push   r12
  41cb89:	push   rbx
  41cb8a:	push   rax
  41cb8b:	mov    rbp,r8
  41cb8e:	mov    r14,rcx
  41cb91:	mov    r13d,edx
  41cb94:	mov    r15d,esi
  41cb97:	mov    rbx,rdi
  41cb9a:	mov    rsi,rcx
  41cb9d:	call   419f50 <__ctype_b_loc@plt+0x17c80>
  41cba2:	mov    r12d,eax
  41cba5:	mov    rdi,rbx
  41cba8:	mov    rsi,rbp
  41cbab:	call   419f50 <__ctype_b_loc@plt+0x17c80>
  41cbb0:	cmp    DWORD PTR [rbp+0x0],0xc
  41cbb4:	jne    41cbcd <__ctype_b_loc@plt+0x1a8fd>
  41cbb6:	mov    ecx,DWORD PTR [rbp+0x8]
  41cbb9:	test   ecx,0x100
  41cbbf:	jne    41cbcd <__ctype_b_loc@plt+0x1a8fd>
  41cbc1:	movzx  edx,BYTE PTR [rbx+0x4a]
  41cbc5:	cmp    ecx,edx
  41cbc7:	jl     41cbcd <__ctype_b_loc@plt+0x1a8fd>
  41cbc9:	add    DWORD PTR [rbx+0x3c],0xffffffff
  41cbcd:	cmp    DWORD PTR [r14],0xc
  41cbd1:	jne    41cbeb <__ctype_b_loc@plt+0x1a91b>
  41cbd3:	mov    ecx,DWORD PTR [r14+0x8]
  41cbd7:	test   ecx,0x100
  41cbdd:	jne    41cbeb <__ctype_b_loc@plt+0x1a91b>
  41cbdf:	movzx  edx,BYTE PTR [rbx+0x4a]
  41cbe3:	cmp    ecx,edx
  41cbe5:	jl     41cbeb <__ctype_b_loc@plt+0x1a91b>
  41cbe7:	add    DWORD PTR [rbx+0x3c],0xffffffff
  41cbeb:	test   r13d,r13d
  41cbee:	sete   cl
  41cbf1:	cmp    r15d,0x17
  41cbf5:	setne  dl
  41cbf8:	shl    r13d,0x6
  41cbfc:	test   dl,cl
  41cbfe:	mov    ecx,r12d
  41cc01:	cmovne ecx,eax
  41cc04:	cmovne eax,r12d
  41cc08:	mov    edx,0x40
  41cc0d:	cmove  edx,r13d
  41cc11:	or     edx,r15d
  41cc14:	shl    ecx,0x17
  41cc17:	or     ecx,edx
  41cc19:	shl    eax,0xe
  41cc1c:	or     eax,ecx
  41cc1e:	mov    rcx,QWORD PTR [rbx+0x18]
  41cc22:	mov    edx,DWORD PTR [rcx+0x8]
  41cc25:	mov    rdi,rbx
  41cc28:	mov    esi,eax
  41cc2a:	call   419630 <__ctype_b_loc@plt+0x17360>
  41cc2f:	mov    rdi,rbx
  41cc32:	call   417bd0 <__ctype_b_loc@plt+0x15900>
  41cc37:	mov    DWORD PTR [r14+0x8],eax
  41cc3b:	mov    DWORD PTR [r14],0xa
  41cc42:	add    rsp,0x8
  41cc46:	pop    rbx
  41cc47:	pop    r12
  41cc49:	pop    r13
  41cc4b:	pop    r14
  41cc4d:	pop    r15
  41cc4f:	pop    rbp
  41cc50:	ret    
  41cc51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cc5b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cc60:	push   rbp
  41cc61:	push   r15
  41cc63:	push   r14
  41cc65:	push   r13
  41cc67:	push   r12
  41cc69:	push   rbx
  41cc6a:	push   rax
  41cc6b:	mov    r13d,edx
  41cc6e:	mov    ebx,esi
  41cc70:	mov    r14,rdi
  41cc73:	cmp    DWORD PTR [rdi+0x30],edx
  41cc76:	jne    41cd09 <__ctype_b_loc@plt+0x1aa39>
  41cc7c:	mov    DWORD PTR [r14+0x34],r13d
  41cc80:	cmp    ebx,0xffffffff
  41cc83:	je     41cdf0 <__ctype_b_loc@plt+0x1ab20>
  41cc89:	mov    ecx,DWORD PTR [r14+0x38]
  41cc8d:	cmp    ecx,0xffffffff
  41cc90:	je     41cdec <__ctype_b_loc@plt+0x1ab1c>
  41cc96:	mov    rax,QWORD PTR [r14]
  41cc99:	mov    r15,QWORD PTR [rax+0x18]
  41cc9d:	nop    DWORD PTR [rax]
  41cca0:	mov    ebp,ecx
  41cca2:	movsxd r12,ecx
  41cca5:	mov    eax,DWORD PTR [r15+r12*4]
  41cca9:	mov    ecx,eax
  41ccab:	shr    ecx,0xe
  41ccae:	lea    edx,[rcx-0x1ffff]
  41ccb4:	cmp    edx,0xffffffff
  41ccb7:	lea    ecx,[rbp+rcx*1-0x1fffe]
  41ccbe:	cmove  ecx,edx
  41ccc1:	cmp    ecx,0xffffffff
  41ccc4:	jne    41cca0 <__ctype_b_loc@plt+0x1a9d0>
  41ccc6:	not    ebp
  41ccc8:	add    ebp,ebx
  41ccca:	mov    ecx,ebp
  41cccc:	neg    ecx
  41ccce:	cmovl  ecx,ebp
  41ccd1:	cmp    ecx,0x20000
  41ccd7:	jl     41ccf0 <__ctype_b_loc@plt+0x1aa20>
  41ccd9:	mov    rdi,QWORD PTR [r14+0x18]
  41ccdd:	mov    edx,DWORD PTR [rdi+0x10]
  41cce0:	lea    rsi,[rip+0xe604]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  41cce7:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41ccec:	mov    eax,DWORD PTR [r15+r12*4]
  41ccf0:	and    eax,0x3fff
  41ccf5:	shl    ebp,0xe
  41ccf8:	lea    eax,[rax+rbp*1]
  41ccfb:	add    eax,0x7fffc000
  41cd00:	mov    DWORD PTR [r15+r12*4],eax
  41cd04:	jmp    41cdf0 <__ctype_b_loc@plt+0x1ab20>
  41cd09:	cmp    ebx,0xffffffff
  41cd0c:	je     41cdf0 <__ctype_b_loc@plt+0x1ab20>
  41cd12:	movabs r12,0x20f800000
  41cd1c:	nop    DWORD PTR [rax+0x0]
  41cd20:	mov    rax,QWORD PTR [r14]
  41cd23:	mov    rax,QWORD PTR [rax+0x18]
  41cd27:	movsxd rcx,ebx
  41cd2a:	lea    rbp,[rax+rcx*4]
  41cd2e:	mov    eax,DWORD PTR [rax+rcx*4]
  41cd31:	mov    edx,eax
  41cd33:	shr    edx,0xe
  41cd36:	lea    esi,[rdx-0x1ffff]
  41cd3c:	cmp    esi,0xffffffff
  41cd3f:	lea    r15d,[rbx+rdx*1-0x1fffe]
  41cd47:	cmove  r15d,esi
  41cd4b:	test   ecx,ecx
  41cd4d:	jle    41cd58 <__ctype_b_loc@plt+0x1aa88>
  41cd4f:	mov    ecx,DWORD PTR [rbp-0x4]
  41cd52:	bt     r12,rcx
  41cd56:	jb     41cd60 <__ctype_b_loc@plt+0x1aa90>
  41cd58:	mov    ecx,eax
  41cd5a:	mov    rdx,rbp
  41cd5d:	jmp    41cd64 <__ctype_b_loc@plt+0x1aa94>
  41cd5f:	nop
  41cd60:	lea    rdx,[rbp-0x4]
  41cd64:	mov    esi,ecx
  41cd66:	and    esi,0x3f
  41cd69:	cmp    esi,0x1b
  41cd6c:	jne    41cda0 <__ctype_b_loc@plt+0x1aad0>
  41cd6e:	mov    eax,ecx
  41cd70:	shr    eax,0x11
  41cd73:	and    eax,0xffffffc0
  41cd76:	and    ecx,0x7fc000
  41cd7c:	or     ecx,eax
  41cd7e:	or     ecx,0x1a
  41cd81:	mov    DWORD PTR [rdx],ecx
  41cd83:	not    ebx
  41cd85:	add    ebx,r13d
  41cd88:	mov    eax,ebx
  41cd8a:	neg    eax
  41cd8c:	cmovl  eax,ebx
  41cd8f:	cmp    eax,0x20000
  41cd94:	jge    41cdb4 <__ctype_b_loc@plt+0x1aae4>
  41cd96:	jmp    41cdc7 <__ctype_b_loc@plt+0x1aaf7>
  41cd98:	nop    DWORD PTR [rax+rax*1+0x0]
  41cda0:	not    ebx
  41cda2:	add    ebx,r13d
  41cda5:	mov    ecx,ebx
  41cda7:	neg    ecx
  41cda9:	cmovl  ecx,ebx
  41cdac:	cmp    ecx,0x20000
  41cdb2:	jl     41cdca <__ctype_b_loc@plt+0x1aafa>
  41cdb4:	mov    rdi,QWORD PTR [r14+0x18]
  41cdb8:	mov    edx,DWORD PTR [rdi+0x10]
  41cdbb:	lea    rsi,[rip+0xe529]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  41cdc2:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41cdc7:	mov    eax,DWORD PTR [rbp+0x0]
  41cdca:	and    eax,0x3fff
  41cdcf:	shl    ebx,0xe
  41cdd2:	lea    eax,[rax+rbx*1]
  41cdd5:	add    eax,0x7fffc000
  41cdda:	mov    DWORD PTR [rbp+0x0],eax
  41cddd:	mov    ebx,r15d
  41cde0:	cmp    r15d,0xffffffff
  41cde4:	jne    41cd20 <__ctype_b_loc@plt+0x1aa50>
  41cdea:	jmp    41cdf0 <__ctype_b_loc@plt+0x1ab20>
  41cdec:	mov    DWORD PTR [r14+0x38],ebx
  41cdf0:	add    rsp,0x8
  41cdf4:	pop    rbx
  41cdf5:	pop    r12
  41cdf7:	pop    r13
  41cdf9:	pop    r14
  41cdfb:	pop    r15
  41cdfd:	pop    rbp
  41cdfe:	ret    
  41cdff:	nop
  41ce00:	push   rbp
  41ce01:	push   r14
  41ce03:	push   rbx
  41ce04:	mov    ebp,esi
  41ce06:	mov    rbx,rdi
  41ce09:	mov    r14,QWORD PTR [rdi+0x38]
  41ce0d:	cmp    esi,0x100
  41ce13:	jg     41ce2f <__ctype_b_loc@plt+0x1ab5f>
  41ce15:	call   4022d0 <__ctype_b_loc@plt>
  41ce1a:	mov    rax,QWORD PTR [rax]
  41ce1d:	movsxd rcx,ebp
  41ce20:	test   BYTE PTR [rax+rcx*2],0x2
  41ce24:	jne    41ce43 <__ctype_b_loc@plt+0x1ab73>
  41ce26:	lea    rsi,[rip+0xe42e]        # 42b25b <__ctype_b_loc@plt+0x28f8b>
  41ce2d:	jmp    41ce4a <__ctype_b_loc@plt+0x1ab7a>
  41ce2f:	movsxd rax,ebp
  41ce32:	lea    rcx,[rip+0x13b97]        # 4309d0 <__ctype_b_loc@plt+0x2e700>
  41ce39:	mov    rdx,QWORD PTR [rcx+rax*8-0x808]
  41ce41:	jmp    41ce59 <__ctype_b_loc@plt+0x1ab89>
  41ce43:	lea    rsi,[rip+0xe408]        # 42b252 <__ctype_b_loc@plt+0x28f82>
  41ce4a:	xor    eax,eax
  41ce4c:	mov    rdi,r14
  41ce4f:	mov    edx,ebp
  41ce51:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41ce56:	mov    rdx,rax
  41ce59:	lea    rsi,[rip+0xe635]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  41ce60:	xor    eax,eax
  41ce62:	mov    rdi,r14
  41ce65:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41ce6a:	mov    edx,DWORD PTR [rbx+0x10]
  41ce6d:	mov    rdi,rbx
  41ce70:	mov    rsi,rax
  41ce73:	pop    rbx
  41ce74:	pop    r14
  41ce76:	pop    rbp
  41ce77:	jmp    413af0 <__ctype_b_loc@plt+0x11820>
  41ce7c:	nop    DWORD PTR [rax+0x0]
  41ce80:	push   rbp
  41ce81:	push   r15
  41ce83:	push   r14
  41ce85:	push   r13
  41ce87:	push   r12
  41ce89:	push   rbx
  41ce8a:	sub    rsp,0x28
  41ce8e:	mov    r12d,r8d
  41ce91:	mov    r15d,ecx
  41ce94:	mov    DWORD PTR [rsp+0x14],edx
  41ce98:	mov    DWORD PTR [rsp+0xc],esi
  41ce9c:	mov    r14,rdi
  41ce9f:	mov    r13,QWORD PTR [rdi+0x30]
  41cea3:	mov    al,BYTE PTR [r13+0x4a]
  41cea7:	add    al,0x3
  41cea9:	mov    BYTE PTR [r13+0x4a],al
  41cead:	mov    ecx,DWORD PTR [r13+0x30]
  41ceb1:	mov    rdx,QWORD PTR [r13+0x0]
  41ceb5:	mov    rdx,QWORD PTR [rdx+0x30]
  41ceb9:	movzx  eax,al
  41cebc:	movzx  esi,WORD PTR [r13+rax*2+0xbe]
  41cec5:	shl    rsi,0x4
  41cec9:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41cecd:	movzx  esi,WORD PTR [r13+rax*2+0xc0]
  41ced6:	shl    rsi,0x4
  41ceda:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41cede:	movzx  eax,WORD PTR [r13+rax*2+0xc2]
  41cee7:	shl    rax,0x4
  41ceeb:	mov    DWORD PTR [rdx+rax*1+0x8],ecx
  41ceef:	cmp    DWORD PTR [rdi+0x10],0x103
  41cef6:	je     41cf20 <__ctype_b_loc@plt+0x1ac50>
  41cef8:	mov    rdi,QWORD PTR [r14+0x38]
  41cefc:	lea    rsi,[rip+0xe592]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  41cf03:	lea    rdx,[rip+0xe0ee]        # 42aff8 <__ctype_b_loc@plt+0x28d28>
  41cf0a:	xor    eax,eax
  41cf0c:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41cf11:	mov    edx,DWORD PTR [r14+0x10]
  41cf15:	mov    rdi,r14
  41cf18:	mov    rsi,rax
  41cf1b:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41cf20:	mov    eax,DWORD PTR [r14+0x4]
  41cf24:	mov    ecx,DWORD PTR [r14+0x20]
  41cf28:	mov    DWORD PTR [r14+0x8],eax
  41cf2c:	cmp    ecx,0x11f
  41cf32:	jne    41cf53 <__ctype_b_loc@plt+0x1ac83>
  41cf34:	lea    rsi,[r14+0x18]
  41cf38:	mov    rdi,r14
  41cf3b:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41cf40:	mov    DWORD PTR [r14+0x10],eax
  41cf44:	test   r12d,r12d
  41cf47:	jne    41cf6e <__ctype_b_loc@plt+0x1ac9e>
  41cf49:	mov    rdi,r13
  41cf4c:	call   417bd0 <__ctype_b_loc@plt+0x15900>
  41cf51:	jmp    41cf8a <__ctype_b_loc@plt+0x1acba>
  41cf53:	lea    rax,[r14+0x20]
  41cf57:	vmovups xmm0,XMMWORD PTR [rax]
  41cf5b:	vmovups XMMWORD PTR [r14+0x10],xmm0
  41cf61:	mov    DWORD PTR [r14+0x20],0x11f
  41cf69:	test   r12d,r12d
  41cf6c:	je     41cf49 <__ctype_b_loc@plt+0x1ac79>
  41cf6e:	mov    esi,DWORD PTR [rsp+0xc]
  41cf72:	shl    esi,0x6
  41cf75:	or     esi,0x7fff8020
  41cf7b:	mov    rax,QWORD PTR [r13+0x18]
  41cf7f:	mov    edx,DWORD PTR [rax+0x8]
  41cf82:	mov    rdi,r13
  41cf85:	call   419630 <__ctype_b_loc@plt+0x17360>
  41cf8a:	mov    DWORD PTR [rsp+0x8],eax
  41cf8e:	mov    DWORD PTR [rsp+0x20],0xffffffff
  41cf96:	mov    BYTE PTR [rsp+0x26],0x0
  41cf9b:	mov    al,BYTE PTR [r13+0x4a]
  41cf9f:	mov    BYTE PTR [rsp+0x24],al
  41cfa3:	mov    BYTE PTR [rsp+0x25],0x0
  41cfa8:	mov    rax,QWORD PTR [r13+0x28]
  41cfac:	mov    QWORD PTR [rsp+0x18],rax
  41cfb1:	lea    rax,[rsp+0x18]
  41cfb6:	mov    QWORD PTR [r13+0x28],rax
  41cfba:	mov    rax,QWORD PTR [r14+0x30]
  41cfbe:	mov    bl,BYTE PTR [rax+0x4a]
  41cfc1:	add    bl,r15b
  41cfc4:	mov    BYTE PTR [rax+0x4a],bl
  41cfc7:	test   r15d,r15d
  41cfca:	mov    DWORD PTR [rsp+0x10],r12d
  41cfcf:	je     41d0c0 <__ctype_b_loc@plt+0x1adf0>
  41cfd5:	mov    ecx,DWORD PTR [rax+0x30]
  41cfd8:	mov    rdx,QWORD PTR [rax]
  41cfdb:	mov    rdx,QWORD PTR [rdx+0x30]
  41cfdf:	movsxd r10,r15d
  41cfe2:	movzx  r8d,bl
  41cfe6:	lea    r9d,[r15-0x1]
  41cfea:	test   r15b,0x7
  41cfee:	je     41d02c <__ctype_b_loc@plt+0x1ad5c>
  41cff0:	lea    rbx,[r8+r8*1]
  41cff4:	add    rbx,0xc4
  41cffb:	lea    rdi,[r10+r10*1]
  41cfff:	sub    rbx,rdi
  41d002:	add    rbx,rax
  41d005:	mov    edi,r15d
  41d008:	and    edi,0x7
  41d00b:	xor    ebp,ebp
  41d00d:	nop    DWORD PTR [rax]
  41d010:	movzx  esi,WORD PTR [rbx+rbp*2]
  41d014:	shl    rsi,0x4
  41d018:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41d01c:	add    rbp,0x1
  41d020:	cmp    edi,ebp
  41d022:	jne    41d010 <__ctype_b_loc@plt+0x1ad40>
  41d024:	sub    r10,rbp
  41d027:	mov    r12d,DWORD PTR [rsp+0x10]
  41d02c:	cmp    r9d,0x7
  41d030:	jb     41d0c0 <__ctype_b_loc@plt+0x1adf0>
  41d036:	lea    rsi,[r8+r8*1]
  41d03a:	add    rsi,0xd2
  41d041:	lea    rdi,[r10+r10*1]
  41d045:	sub    rsi,rdi
  41d048:	add    rax,rsi
  41d04b:	xor    edi,edi
  41d04d:	nop    DWORD PTR [rax]
  41d050:	movzx  esi,WORD PTR [rax+rdi*2-0xe]
  41d055:	shl    rsi,0x4
  41d059:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41d05d:	movzx  esi,WORD PTR [rax+rdi*2-0xc]
  41d062:	shl    rsi,0x4
  41d066:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41d06a:	movzx  esi,WORD PTR [rax+rdi*2-0xa]
  41d06f:	shl    rsi,0x4
  41d073:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41d077:	movzx  esi,WORD PTR [rax+rdi*2-0x8]
  41d07c:	shl    rsi,0x4
  41d080:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41d084:	movzx  esi,WORD PTR [rax+rdi*2-0x6]
  41d089:	shl    rsi,0x4
  41d08d:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41d091:	movzx  esi,WORD PTR [rax+rdi*2-0x4]
  41d096:	shl    rsi,0x4
  41d09a:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41d09e:	movzx  esi,WORD PTR [rax+rdi*2-0x2]
  41d0a3:	shl    rsi,0x4
  41d0a7:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41d0ab:	movzx  esi,WORD PTR [rax+rdi*2]
  41d0af:	shl    rsi,0x4
  41d0b3:	mov    DWORD PTR [rdx+rsi*1+0x8],ecx
  41d0b7:	add    rdi,0x8
  41d0bb:	cmp    r10d,edi
  41d0be:	jne    41d050 <__ctype_b_loc@plt+0x1ad80>
  41d0c0:	mov    ebx,DWORD PTR [r13+0x3c]
  41d0c4:	add    ebx,r15d
  41d0c7:	mov    rax,QWORD PTR [r13+0x0]
  41d0cb:	movzx  ecx,BYTE PTR [rax+0x73]
  41d0cf:	cmp    ebx,ecx
  41d0d1:	jle    41d109 <__ctype_b_loc@plt+0x1ae39>
  41d0d3:	cmp    ebx,0xfa
  41d0d9:	jl     41d0ff <__ctype_b_loc@plt+0x1ae2f>
  41d0db:	mov    rdi,QWORD PTR [r13+0x18]
  41d0df:	mov    edx,DWORD PTR [rdi+0x10]
  41d0e2:	lea    rsi,[rip+0xe235]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41d0e9:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41d0ee:	mov    rax,QWORD PTR [r13+0x0]
  41d0f2:	add    rax,0x73
  41d0f6:	mov    ecx,DWORD PTR [r13+0x3c]
  41d0fa:	add    ecx,r15d
  41d0fd:	jmp    41d105 <__ctype_b_loc@plt+0x1ae35>
  41d0ff:	add    rax,0x73
  41d103:	mov    ecx,ebx
  41d105:	mov    BYTE PTR [rax],bl
  41d107:	mov    ebx,ecx
  41d109:	mov    DWORD PTR [r13+0x3c],ebx
  41d10d:	mov    rdi,r14
  41d110:	call   417690 <__ctype_b_loc@plt+0x153c0>
  41d115:	mov    r8,QWORD PTR [r13+0x18]
  41d119:	mov    r14,QWORD PTR [r13+0x28]
  41d11d:	mov    rax,QWORD PTR [r14]
  41d120:	mov    QWORD PTR [r13+0x28],rax
  41d124:	mov    cl,BYTE PTR [r14+0xc]
  41d128:	mov    rdx,QWORD PTR [r8+0x30]
  41d12c:	movzx  esi,BYTE PTR [rdx+0x4a]
  41d130:	cmp    sil,cl
  41d133:	jbe    41d206 <__ctype_b_loc@plt+0x1af36>
  41d139:	mov    edi,DWORD PTR [rdx+0x30]
  41d13c:	mov    rax,QWORD PTR [rdx]
  41d13f:	mov    rax,QWORD PTR [rax+0x30]
  41d143:	mov    ebx,esi
  41d145:	sub    bl,cl
  41d147:	mov    r9d,ecx
  41d14a:	not    r9b
  41d14d:	add    r9b,sil
  41d150:	and    bl,0x3
  41d153:	je     41d184 <__ctype_b_loc@plt+0x1aeb4>
  41d155:	add    rsi,0xff
  41d15c:	neg    bl
  41d15e:	xchg   ax,ax
  41d160:	movzx  ebp,sil
  41d164:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  41d16c:	shl    rbp,0x4
  41d170:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  41d174:	add    rsi,0xffffffffffffffff
  41d178:	add    bl,0x1
  41d17b:	jne    41d160 <__ctype_b_loc@plt+0x1ae90>
  41d17d:	add    rsi,0xffffffffffffff01
  41d184:	cmp    r9b,0x3
  41d188:	jb     41d1fe <__ctype_b_loc@plt+0x1af2e>
  41d18a:	nop    WORD PTR [rax+rax*1+0x0]
  41d190:	lea    ebp,[rsi-0x1]
  41d193:	movzx  ebp,bpl
  41d197:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  41d19f:	shl    rbp,0x4
  41d1a3:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  41d1a7:	lea    ebp,[rsi+0xfe]
  41d1ad:	movzx  ebp,bpl
  41d1b1:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  41d1b9:	shl    rbp,0x4
  41d1bd:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  41d1c1:	lea    ebp,[rsi+0xfd]
  41d1c7:	movzx  ebp,bpl
  41d1cb:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  41d1d3:	shl    rbp,0x4
  41d1d7:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  41d1db:	lea    ebp,[rsi+0xfc]
  41d1e1:	movzx  ebp,bpl
  41d1e5:	movzx  ebp,WORD PTR [rdx+rbp*2+0xc4]
  41d1ed:	shl    rbp,0x4
  41d1f1:	mov    DWORD PTR [rax+rbp*1+0xc],edi
  41d1f5:	add    rsi,0xfffffffffffffffc
  41d1f9:	cmp    sil,cl
  41d1fc:	ja     41d190 <__ctype_b_loc@plt+0x1aec0>
  41d1fe:	mov    BYTE PTR [rdx+0x4a],cl
  41d201:	mov    r12d,DWORD PTR [rsp+0x10]
  41d206:	cmp    BYTE PTR [r14+0xd],0x0
  41d20b:	je     41d222 <__ctype_b_loc@plt+0x1af52>
  41d20d:	movzx  esi,cl
  41d210:	shl    esi,0x6
  41d213:	or     esi,0x23
  41d216:	mov    edx,DWORD PTR [r8+0x8]
  41d21a:	mov    rdi,r13
  41d21d:	call   419630 <__ctype_b_loc@plt+0x17360>
  41d222:	movzx  eax,BYTE PTR [r13+0x4a]
  41d227:	mov    DWORD PTR [r13+0x3c],eax
  41d22b:	mov    r14d,DWORD PTR [r14+0x8]
  41d22f:	mov    eax,DWORD PTR [r13+0x30]
  41d233:	mov    DWORD PTR [r13+0x34],eax
  41d237:	cmp    r14d,0xffffffff
  41d23b:	je     41d2d5 <__ctype_b_loc@plt+0x1b005>
  41d241:	mov    edx,DWORD PTR [r13+0x38]
  41d245:	cmp    edx,0xffffffff
  41d248:	je     41d2d1 <__ctype_b_loc@plt+0x1b001>
  41d24e:	mov    rax,QWORD PTR [r13+0x0]
  41d252:	mov    rbx,QWORD PTR [rax+0x18]
  41d256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d260:	mov    ecx,edx
  41d262:	movsxd rbp,edx
  41d265:	mov    eax,DWORD PTR [rbx+rbp*4]
  41d268:	mov    edx,eax
  41d26a:	shr    edx,0xe
  41d26d:	lea    esi,[rdx-0x1ffff]
  41d273:	cmp    esi,0xffffffff
  41d276:	lea    edx,[rcx+rdx*1-0x1fffe]
  41d27d:	cmove  edx,esi
  41d280:	cmp    edx,0xffffffff
  41d283:	jne    41d260 <__ctype_b_loc@plt+0x1af90>
  41d285:	not    ecx
  41d287:	add    r14d,ecx
  41d28a:	mov    ecx,r14d
  41d28d:	neg    ecx
  41d28f:	cmovl  ecx,r14d
  41d293:	cmp    ecx,0x20000
  41d299:	jl     41d2b1 <__ctype_b_loc@plt+0x1afe1>
  41d29b:	mov    rdi,QWORD PTR [r13+0x18]
  41d29f:	mov    edx,DWORD PTR [rdi+0x10]
  41d2a2:	lea    rsi,[rip+0xe042]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  41d2a9:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41d2ae:	mov    eax,DWORD PTR [rbx+rbp*4]
  41d2b1:	and    eax,0x3fff
  41d2b6:	shl    r14d,0xe
  41d2ba:	lea    eax,[rax+r14*1]
  41d2be:	add    eax,0x7fffc000
  41d2c3:	mov    DWORD PTR [rbx+rbp*4],eax
  41d2c6:	mov    eax,DWORD PTR [r13+0x30]
  41d2ca:	mov    r12d,DWORD PTR [rsp+0x10]
  41d2cf:	jmp    41d2d5 <__ctype_b_loc@plt+0x1b005>
  41d2d1:	mov    DWORD PTR [r13+0x38],r14d
  41d2d5:	mov    ebp,DWORD PTR [rsp+0x8]
  41d2d9:	mov    esi,DWORD PTR [rsp+0xc]
  41d2dd:	mov    DWORD PTR [r13+0x34],eax
  41d2e1:	cmp    ebp,0xffffffff
  41d2e4:	je     41d379 <__ctype_b_loc@plt+0x1b0a9>
  41d2ea:	mov    ecx,DWORD PTR [r13+0x38]
  41d2ee:	cmp    ecx,0xffffffff
  41d2f1:	je     41d375 <__ctype_b_loc@plt+0x1b0a5>
  41d2f7:	mov    rax,QWORD PTR [r13+0x0]
  41d2fb:	mov    r14,QWORD PTR [rax+0x18]
  41d2ff:	nop
  41d300:	mov    ebx,ecx
  41d302:	movsxd rbp,ecx
  41d305:	mov    eax,DWORD PTR [r14+rbp*4]
  41d309:	mov    ecx,eax
  41d30b:	shr    ecx,0xe
  41d30e:	lea    edx,[rcx-0x1ffff]
  41d314:	cmp    edx,0xffffffff
  41d317:	lea    ecx,[rbx+rcx*1-0x1fffe]
  41d31e:	cmove  ecx,edx
  41d321:	cmp    ecx,0xffffffff
  41d324:	jne    41d300 <__ctype_b_loc@plt+0x1b030>
  41d326:	not    ebx
  41d328:	add    ebx,DWORD PTR [rsp+0x8]
  41d32c:	mov    ecx,ebx
  41d32e:	neg    ecx
  41d330:	cmovl  ecx,ebx
  41d333:	cmp    ecx,0x20000
  41d339:	jl     41d352 <__ctype_b_loc@plt+0x1b082>
  41d33b:	mov    rdi,QWORD PTR [r13+0x18]
  41d33f:	mov    edx,DWORD PTR [rdi+0x10]
  41d342:	lea    rsi,[rip+0xdfa2]        # 42b2eb <__ctype_b_loc@plt+0x2901b>
  41d349:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41d34e:	mov    eax,DWORD PTR [r14+rbp*4]
  41d352:	and    eax,0x3fff
  41d357:	shl    ebx,0xe
  41d35a:	lea    eax,[rax+rbx*1]
  41d35d:	add    eax,0x7fffc000
  41d362:	mov    DWORD PTR [r14+rbp*4],eax
  41d366:	mov    r12d,DWORD PTR [rsp+0x10]
  41d36b:	mov    ebp,DWORD PTR [rsp+0x8]
  41d36f:	mov    esi,DWORD PTR [rsp+0xc]
  41d373:	jmp    41d379 <__ctype_b_loc@plt+0x1b0a9>
  41d375:	mov    DWORD PTR [r13+0x38],ebp
  41d379:	shl    esi,0x6
  41d37c:	test   r12d,r12d
  41d37f:	je     41d389 <__ctype_b_loc@plt+0x1b0b9>
  41d381:	or     esi,0x7fff801f
  41d387:	jmp    41d393 <__ctype_b_loc@plt+0x1b0c3>
  41d389:	shl    r15d,0xe
  41d38d:	or     esi,r15d
  41d390:	or     esi,0x21
  41d393:	mov    ebx,DWORD PTR [rsp+0x14]
  41d397:	mov    rax,QWORD PTR [r13+0x18]
  41d39b:	mov    edx,DWORD PTR [rax+0x8]
  41d39e:	mov    rdi,r13
  41d3a1:	call   419630 <__ctype_b_loc@plt+0x17360>
  41d3a6:	mov    rcx,QWORD PTR [r13+0x0]
  41d3aa:	mov    rcx,QWORD PTR [rcx+0x28]
  41d3ae:	movsxd rdx,DWORD PTR [r13+0x30]
  41d3b2:	mov    DWORD PTR [rcx+rdx*4-0x4],ebx
  41d3b6:	test   r12d,r12d
  41d3b9:	jne    41d3c3 <__ctype_b_loc@plt+0x1b0f3>
  41d3bb:	mov    rdi,r13
  41d3be:	call   417bd0 <__ctype_b_loc@plt+0x15900>
  41d3c3:	add    ebp,0x1
  41d3c6:	mov    rdi,r13
  41d3c9:	mov    esi,eax
  41d3cb:	mov    edx,ebp
  41d3cd:	call   41cc60 <__ctype_b_loc@plt+0x1a990>
  41d3d2:	add    rsp,0x28
  41d3d6:	pop    rbx
  41d3d7:	pop    r12
  41d3d9:	pop    r13
  41d3db:	pop    r14
  41d3dd:	pop    r15
  41d3df:	pop    rbp
  41d3e0:	ret    
  41d3e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d3eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d3f0:	push   rbp
  41d3f1:	push   r15
  41d3f3:	push   r14
  41d3f5:	push   rbx
  41d3f6:	push   rax
  41d3f7:	mov    r15,rcx
  41d3fa:	mov    ebx,esi
  41d3fc:	mov    r14,QWORD PTR [rdi+0x30]
  41d400:	sub    ebx,edx
  41d402:	mov    eax,DWORD PTR [rcx]
  41d404:	lea    ecx,[rax-0xd]
  41d407:	cmp    ecx,0x2
  41d40a:	jae    41d45e <__ctype_b_loc@plt+0x1b18e>
  41d40c:	add    ebx,0x1
  41d40f:	mov    ecx,ebx
  41d411:	sar    ecx,0x1f
  41d414:	andn   ebx,ecx,ebx
  41d419:	cmp    eax,0xe
  41d41c:	je     41d4d8 <__ctype_b_loc@plt+0x1b208>
  41d422:	cmp    eax,0xd
  41d425:	jne    41d450 <__ctype_b_loc@plt+0x1b180>
  41d427:	mov    rax,QWORD PTR [r14]
  41d42a:	mov    rax,QWORD PTR [rax+0x18]
  41d42e:	movsxd rcx,DWORD PTR [r15+0x8]
  41d432:	mov    edx,0xff803fff
  41d437:	and    edx,DWORD PTR [rax+rcx*4]
  41d43a:	mov    esi,ebx
  41d43c:	shl    esi,0xe
  41d43f:	add    esi,0x4000
  41d445:	and    esi,0x7fc000
  41d44b:	or     esi,edx
  41d44d:	mov    DWORD PTR [rax+rcx*4],esi
  41d450:	cmp    ebx,0x2
  41d453:	jge    41d676 <__ctype_b_loc@plt+0x1b3a6>
  41d459:	jmp    41d6c1 <__ctype_b_loc@plt+0x1b3f1>
  41d45e:	test   eax,eax
  41d460:	je     41d57e <__ctype_b_loc@plt+0x1b2ae>
  41d466:	mov    rdi,r14
  41d469:	mov    rsi,r15
  41d46c:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41d471:	cmp    DWORD PTR [r15],0xc
  41d475:	jne    41d490 <__ctype_b_loc@plt+0x1b1c0>
  41d477:	mov    eax,DWORD PTR [r15+0x8]
  41d47b:	test   eax,0x100
  41d480:	jne    41d490 <__ctype_b_loc@plt+0x1b1c0>
  41d482:	movzx  ecx,BYTE PTR [r14+0x4a]
  41d487:	cmp    eax,ecx
  41d489:	jl     41d490 <__ctype_b_loc@plt+0x1b1c0>
  41d48b:	add    DWORD PTR [r14+0x3c],0xffffffff
  41d490:	mov    ecx,DWORD PTR [r14+0x3c]
  41d494:	lea    ebp,[rcx+0x1]
  41d497:	mov    rax,QWORD PTR [r14]
  41d49a:	movzx  edx,BYTE PTR [rax+0x73]
  41d49e:	cmp    ecx,edx
  41d4a0:	jl     41d56a <__ctype_b_loc@plt+0x1b29a>
  41d4a6:	cmp    ecx,0xf9
  41d4ac:	jl     41d55f <__ctype_b_loc@plt+0x1b28f>
  41d4b2:	mov    rdi,QWORD PTR [r14+0x18]
  41d4b6:	mov    edx,DWORD PTR [rdi+0x10]
  41d4b9:	lea    rsi,[rip+0xde5e]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41d4c0:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41d4c5:	mov    rax,QWORD PTR [r14]
  41d4c8:	add    rax,0x73
  41d4cc:	mov    ecx,DWORD PTR [r14+0x3c]
  41d4d0:	add    ecx,0x1
  41d4d3:	jmp    41d565 <__ctype_b_loc@plt+0x1b295>
  41d4d8:	mov    rax,QWORD PTR [r14]
  41d4db:	mov    rcx,QWORD PTR [rax+0x18]
  41d4df:	movsxd rdx,DWORD PTR [r15+0x8]
  41d4e3:	mov    esi,0x7fffff
  41d4e8:	and    esi,DWORD PTR [rcx+rdx*4]
  41d4eb:	mov    edi,ebx
  41d4ed:	shl    edi,0x17
  41d4f0:	lea    esi,[rsi+rdi*1]
  41d4f3:	add    esi,0x800000
  41d4f9:	mov    DWORD PTR [rcx+rdx*4],esi
  41d4fc:	movsxd rdx,DWORD PTR [r15+0x8]
  41d500:	mov    esi,0xffffc03f
  41d505:	and    esi,DWORD PTR [rcx+rdx*4]
  41d508:	mov    edi,DWORD PTR [r14+0x3c]
  41d50c:	shl    edi,0x6
  41d50f:	and    edi,0x3fc0
  41d515:	or     edi,esi
  41d517:	mov    DWORD PTR [rcx+rdx*4],edi
  41d51a:	mov    ecx,DWORD PTR [r14+0x3c]
  41d51e:	lea    ebp,[rcx+0x1]
  41d521:	movzx  edx,BYTE PTR [rax+0x73]
  41d525:	cmp    ecx,edx
  41d527:	jl     41d66d <__ctype_b_loc@plt+0x1b39d>
  41d52d:	cmp    ecx,0xf9
  41d533:	jl     41d662 <__ctype_b_loc@plt+0x1b392>
  41d539:	mov    rdi,QWORD PTR [r14+0x18]
  41d53d:	mov    edx,DWORD PTR [rdi+0x10]
  41d540:	lea    rsi,[rip+0xddd7]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41d547:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41d54c:	mov    rax,QWORD PTR [r14]
  41d54f:	add    rax,0x73
  41d553:	mov    ecx,DWORD PTR [r14+0x3c]
  41d557:	add    ecx,0x1
  41d55a:	jmp    41d668 <__ctype_b_loc@plt+0x1b398>
  41d55f:	add    rax,0x73
  41d563:	mov    ecx,ebp
  41d565:	mov    BYTE PTR [rax],bpl
  41d568:	mov    ebp,ecx
  41d56a:	mov    DWORD PTR [r14+0x3c],ebp
  41d56e:	add    ebp,0xffffffff
  41d571:	mov    rdi,r14
  41d574:	mov    rsi,r15
  41d577:	mov    edx,ebp
  41d579:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  41d57e:	test   ebx,ebx
  41d580:	jle    41d6c1 <__ctype_b_loc@plt+0x1b3f1>
  41d586:	mov    r15d,DWORD PTR [r14+0x3c]
  41d58a:	lea    ebp,[r15+rbx*1]
  41d58e:	mov    rcx,QWORD PTR [r14]
  41d591:	movzx  eax,BYTE PTR [rcx+0x73]
  41d595:	cmp    ebp,eax
  41d597:	jle    41d5c5 <__ctype_b_loc@plt+0x1b2f5>
  41d599:	mov    eax,ebp
  41d59b:	cmp    ebp,0xfa
  41d5a1:	jl     41d5bf <__ctype_b_loc@plt+0x1b2ef>
  41d5a3:	mov    rdi,QWORD PTR [r14+0x18]
  41d5a7:	mov    edx,DWORD PTR [rdi+0x10]
  41d5aa:	lea    rsi,[rip+0xdd6d]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41d5b1:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41d5b6:	mov    rcx,QWORD PTR [r14]
  41d5b9:	add    ebx,DWORD PTR [r14+0x3c]
  41d5bd:	mov    eax,ebx
  41d5bf:	mov    BYTE PTR [rcx+0x73],bpl
  41d5c3:	jmp    41d5c7 <__ctype_b_loc@plt+0x1b2f7>
  41d5c5:	mov    eax,ebp
  41d5c7:	mov    DWORD PTR [r14+0x3c],eax
  41d5cb:	movsxd rax,DWORD PTR [r14+0x30]
  41d5cf:	cmp    eax,DWORD PTR [r14+0x34]
  41d5d3:	jle    41d634 <__ctype_b_loc@plt+0x1b364>
  41d5d5:	test   eax,eax
  41d5d7:	je     41d626 <__ctype_b_loc@plt+0x1b356>
  41d5d9:	mov    rcx,QWORD PTR [rcx+0x18]
  41d5dd:	mov    edx,DWORD PTR [rcx+rax*4-0x4]
  41d5e1:	mov    esi,edx
  41d5e3:	and    esi,0x3f
  41d5e6:	cmp    esi,0x3
  41d5e9:	jne    41d634 <__ctype_b_loc@plt+0x1b364>
  41d5eb:	mov    esi,0x806
  41d5f0:	bextr  esi,edx,esi
  41d5f5:	cmp    esi,r15d
  41d5f8:	jg     41d634 <__ctype_b_loc@plt+0x1b364>
  41d5fa:	mov    esi,edx
  41d5fc:	shr    esi,0x17
  41d5ff:	lea    edi,[rsi+0x1]
  41d602:	cmp    edi,r15d
  41d605:	jl     41d634 <__ctype_b_loc@plt+0x1b364>
  41d607:	add    ebp,0xffffffff
  41d60a:	cmp    ebp,esi
  41d60c:	jle    41d6c1 <__ctype_b_loc@plt+0x1b3f1>
  41d612:	and    edx,0x7fffff
  41d618:	shl    ebp,0x17
  41d61b:	or     ebp,edx
  41d61d:	mov    DWORD PTR [rcx+rax*4-0x4],ebp
  41d621:	jmp    41d6c1 <__ctype_b_loc@plt+0x1b3f1>
  41d626:	movzx  eax,BYTE PTR [r14+0x4a]
  41d62b:	cmp    r15d,eax
  41d62e:	jge    41d6c1 <__ctype_b_loc@plt+0x1b3f1>
  41d634:	shl    r15d,0x6
  41d638:	shl    ebp,0x17
  41d63b:	add    ebp,0xff800000
  41d641:	or     ebp,r15d
  41d644:	or     ebp,0x3
  41d647:	mov    rax,QWORD PTR [r14+0x18]
  41d64b:	mov    edx,DWORD PTR [rax+0x8]
  41d64e:	mov    rdi,r14
  41d651:	mov    esi,ebp
  41d653:	add    rsp,0x8
  41d657:	pop    rbx
  41d658:	pop    r14
  41d65a:	pop    r15
  41d65c:	pop    rbp
  41d65d:	jmp    419630 <__ctype_b_loc@plt+0x17360>
  41d662:	add    rax,0x73
  41d666:	mov    ecx,ebp
  41d668:	mov    BYTE PTR [rax],bpl
  41d66b:	mov    ebp,ecx
  41d66d:	mov    DWORD PTR [r14+0x3c],ebp
  41d671:	cmp    ebx,0x2
  41d674:	jl     41d6c1 <__ctype_b_loc@plt+0x1b3f1>
  41d676:	add    ebx,0xffffffff
  41d679:	mov    ebp,DWORD PTR [r14+0x3c]
  41d67d:	add    ebp,ebx
  41d67f:	mov    rax,QWORD PTR [r14]
  41d682:	movzx  ecx,BYTE PTR [rax+0x73]
  41d686:	cmp    ebp,ecx
  41d688:	jle    41d6bd <__ctype_b_loc@plt+0x1b3ed>
  41d68a:	cmp    ebp,0xfa
  41d690:	jl     41d6b2 <__ctype_b_loc@plt+0x1b3e2>
  41d692:	mov    rdi,QWORD PTR [r14+0x18]
  41d696:	mov    edx,DWORD PTR [rdi+0x10]
  41d699:	lea    rsi,[rip+0xdc7e]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41d6a0:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41d6a5:	mov    rax,QWORD PTR [r14]
  41d6a8:	add    rax,0x73
  41d6ac:	add    ebx,DWORD PTR [r14+0x3c]
  41d6b0:	jmp    41d6b8 <__ctype_b_loc@plt+0x1b3e8>
  41d6b2:	add    rax,0x73
  41d6b6:	mov    ebx,ebp
  41d6b8:	mov    BYTE PTR [rax],bpl
  41d6bb:	mov    ebp,ebx
  41d6bd:	mov    DWORD PTR [r14+0x3c],ebp
  41d6c1:	add    rsp,0x8
  41d6c5:	pop    rbx
  41d6c6:	pop    r14
  41d6c8:	pop    r15
  41d6ca:	pop    rbp
  41d6cb:	ret    
  41d6cc:	nop    DWORD PTR [rax+0x0]
  41d6d0:	push   rbp
  41d6d1:	push   r15
  41d6d3:	push   r14
  41d6d5:	push   r12
  41d6d7:	push   rbx
  41d6d8:	mov    rbx,rdx
  41d6db:	mov    r14,rdi
  41d6de:	mov    eax,DWORD PTR [rsi]
  41d6e0:	add    eax,0xfffffffa
  41d6e3:	cmp    eax,0x3
  41d6e6:	ja     41d927 <__ctype_b_loc@plt+0x1b657>
  41d6ec:	mov    r15,rsi
  41d6ef:	lea    rcx,[rip+0xd146]        # 42a83c <__ctype_b_loc@plt+0x2856c>
  41d6f6:	movsxd rax,DWORD PTR [rcx+rax*4]
  41d6fa:	add    rax,rcx
  41d6fd:	jmp    rax
  41d6ff:	cmp    DWORD PTR [rbx],0xc
  41d702:	jne    41d71c <__ctype_b_loc@plt+0x1b44c>
  41d704:	mov    eax,DWORD PTR [rbx+0x8]
  41d707:	test   eax,0x100
  41d70c:	jne    41d71c <__ctype_b_loc@plt+0x1b44c>
  41d70e:	movzx  ecx,BYTE PTR [r14+0x4a]
  41d713:	cmp    eax,ecx
  41d715:	jl     41d71c <__ctype_b_loc@plt+0x1b44c>
  41d717:	add    DWORD PTR [r14+0x3c],0xffffffff
  41d71c:	mov    edx,DWORD PTR [r15+0x8]
  41d720:	mov    rdi,r14
  41d723:	mov    rsi,rbx
  41d726:	pop    rbx
  41d727:	pop    r12
  41d729:	pop    r14
  41d72b:	pop    r15
  41d72d:	pop    rbp
  41d72e:	jmp    4190f0 <__ctype_b_loc@plt+0x16e20>
  41d733:	mov    rdi,r14
  41d736:	mov    rsi,rbx
  41d739:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41d73e:	cmp    DWORD PTR [rbx],0xc
  41d741:	jne    41d7d5 <__ctype_b_loc@plt+0x1b505>
  41d747:	mov    edx,DWORD PTR [rbx+0x8]
  41d74a:	mov    eax,DWORD PTR [rbx+0x10]
  41d74d:	cmp    eax,DWORD PTR [rbx+0x14]
  41d750:	je     41d909 <__ctype_b_loc@plt+0x1b639>
  41d756:	lea    r12,[rbx+0x8]
  41d75a:	movzx  eax,BYTE PTR [r14+0x4a]
  41d75f:	cmp    edx,eax
  41d761:	jl     41d7d9 <__ctype_b_loc@plt+0x1b509>
  41d763:	mov    rdi,r14
  41d766:	mov    rsi,rbx
  41d769:	jmp    41d900 <__ctype_b_loc@plt+0x1b630>
  41d76e:	mov    rdi,r14
  41d771:	mov    rsi,rbx
  41d774:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41d779:	cmp    DWORD PTR [rbx],0xc
  41d77c:	jne    41d849 <__ctype_b_loc@plt+0x1b579>
  41d782:	mov    edx,DWORD PTR [rbx+0x8]
  41d785:	mov    eax,DWORD PTR [rbx+0x10]
  41d788:	cmp    eax,DWORD PTR [rbx+0x14]
  41d78b:	je     41d8d5 <__ctype_b_loc@plt+0x1b605>
  41d791:	lea    r12,[rbx+0x8]
  41d795:	movzx  eax,BYTE PTR [r14+0x4a]
  41d79a:	cmp    edx,eax
  41d79c:	jl     41d84d <__ctype_b_loc@plt+0x1b57d>
  41d7a2:	mov    rdi,r14
  41d7a5:	mov    rsi,rbx
  41d7a8:	jmp    41d8cc <__ctype_b_loc@plt+0x1b5fc>
  41d7ad:	mov    rdi,r14
  41d7b0:	mov    rsi,rbx
  41d7b3:	call   419f50 <__ctype_b_loc@plt+0x17c80>
  41d7b8:	mov    esi,DWORD PTR [r15+0x8]
  41d7bc:	mov    ecx,DWORD PTR [r15+0xc]
  41d7c0:	shl    esi,0x6
  41d7c3:	shl    ecx,0x17
  41d7c6:	shl    eax,0xe
  41d7c9:	or     esi,eax
  41d7cb:	or     esi,ecx
  41d7cd:	or     esi,0x9
  41d7d0:	jmp    41d918 <__ctype_b_loc@plt+0x1b648>
  41d7d5:	lea    r12,[rbx+0x8]
  41d7d9:	mov    rdi,r14
  41d7dc:	mov    rsi,rbx
  41d7df:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41d7e4:	cmp    DWORD PTR [rbx],0xc
  41d7e7:	jne    41d801 <__ctype_b_loc@plt+0x1b531>
  41d7e9:	mov    eax,DWORD PTR [rbx+0x8]
  41d7ec:	test   eax,0x100
  41d7f1:	jne    41d801 <__ctype_b_loc@plt+0x1b531>
  41d7f3:	movzx  ecx,BYTE PTR [r14+0x4a]
  41d7f8:	cmp    eax,ecx
  41d7fa:	jl     41d801 <__ctype_b_loc@plt+0x1b531>
  41d7fc:	add    DWORD PTR [r14+0x3c],0xffffffff
  41d801:	mov    ecx,DWORD PTR [r14+0x3c]
  41d805:	lea    ebp,[rcx+0x1]
  41d808:	mov    rax,QWORD PTR [r14]
  41d80b:	movzx  edx,BYTE PTR [rax+0x73]
  41d80f:	cmp    ecx,edx
  41d811:	jl     41d8f1 <__ctype_b_loc@plt+0x1b621>
  41d817:	cmp    ecx,0xf9
  41d81d:	jl     41d8e6 <__ctype_b_loc@plt+0x1b616>
  41d823:	mov    rdi,QWORD PTR [r14+0x18]
  41d827:	mov    edx,DWORD PTR [rdi+0x10]
  41d82a:	lea    rsi,[rip+0xdaed]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41d831:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41d836:	mov    rax,QWORD PTR [r14]
  41d839:	add    rax,0x73
  41d83d:	mov    ecx,DWORD PTR [r14+0x3c]
  41d841:	add    ecx,0x1
  41d844:	jmp    41d8ec <__ctype_b_loc@plt+0x1b61c>
  41d849:	lea    r12,[rbx+0x8]
  41d84d:	mov    rdi,r14
  41d850:	mov    rsi,rbx
  41d853:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41d858:	cmp    DWORD PTR [rbx],0xc
  41d85b:	jne    41d875 <__ctype_b_loc@plt+0x1b5a5>
  41d85d:	mov    eax,DWORD PTR [rbx+0x8]
  41d860:	test   eax,0x100
  41d865:	jne    41d875 <__ctype_b_loc@plt+0x1b5a5>
  41d867:	movzx  ecx,BYTE PTR [r14+0x4a]
  41d86c:	cmp    eax,ecx
  41d86e:	jl     41d875 <__ctype_b_loc@plt+0x1b5a5>
  41d870:	add    DWORD PTR [r14+0x3c],0xffffffff
  41d875:	mov    ecx,DWORD PTR [r14+0x3c]
  41d879:	lea    ebp,[rcx+0x1]
  41d87c:	mov    rax,QWORD PTR [r14]
  41d87f:	movzx  edx,BYTE PTR [rax+0x73]
  41d883:	cmp    ecx,edx
  41d885:	jl     41d8bd <__ctype_b_loc@plt+0x1b5ed>
  41d887:	cmp    ecx,0xf9
  41d88d:	jl     41d8b2 <__ctype_b_loc@plt+0x1b5e2>
  41d88f:	mov    rdi,QWORD PTR [r14+0x18]
  41d893:	mov    edx,DWORD PTR [rdi+0x10]
  41d896:	lea    rsi,[rip+0xda81]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41d89d:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41d8a2:	mov    rax,QWORD PTR [r14]
  41d8a5:	add    rax,0x73
  41d8a9:	mov    ecx,DWORD PTR [r14+0x3c]
  41d8ad:	add    ecx,0x1
  41d8b0:	jmp    41d8b8 <__ctype_b_loc@plt+0x1b5e8>
  41d8b2:	add    rax,0x73
  41d8b6:	mov    ecx,ebp
  41d8b8:	mov    BYTE PTR [rax],bpl
  41d8bb:	mov    ebp,ecx
  41d8bd:	mov    DWORD PTR [r14+0x3c],ebp
  41d8c1:	add    ebp,0xffffffff
  41d8c4:	mov    rdi,r14
  41d8c7:	mov    rsi,rbx
  41d8ca:	mov    edx,ebp
  41d8cc:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  41d8d1:	mov    edx,DWORD PTR [r12]
  41d8d5:	mov    esi,DWORD PTR [r15+0x8]
  41d8d9:	shl    edx,0x6
  41d8dc:	shl    esi,0xe
  41d8df:	or     esi,edx
  41d8e1:	or     esi,0x7
  41d8e4:	jmp    41d918 <__ctype_b_loc@plt+0x1b648>
  41d8e6:	add    rax,0x73
  41d8ea:	mov    ecx,ebp
  41d8ec:	mov    BYTE PTR [rax],bpl
  41d8ef:	mov    ebp,ecx
  41d8f1:	mov    DWORD PTR [r14+0x3c],ebp
  41d8f5:	add    ebp,0xffffffff
  41d8f8:	mov    rdi,r14
  41d8fb:	mov    rsi,rbx
  41d8fe:	mov    edx,ebp
  41d900:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  41d905:	mov    edx,DWORD PTR [r12]
  41d909:	mov    esi,DWORD PTR [r15+0x8]
  41d90d:	shl    edx,0x6
  41d910:	shl    esi,0x17
  41d913:	or     esi,edx
  41d915:	or     esi,0x8
  41d918:	mov    rax,QWORD PTR [r14+0x18]
  41d91c:	mov    edx,DWORD PTR [rax+0x8]
  41d91f:	mov    rdi,r14
  41d922:	call   419630 <__ctype_b_loc@plt+0x17360>
  41d927:	cmp    DWORD PTR [rbx],0xc
  41d92a:	jne    41d944 <__ctype_b_loc@plt+0x1b674>
  41d92c:	mov    eax,DWORD PTR [rbx+0x8]
  41d92f:	test   eax,0x100
  41d934:	jne    41d944 <__ctype_b_loc@plt+0x1b674>
  41d936:	movzx  ecx,BYTE PTR [r14+0x4a]
  41d93b:	cmp    eax,ecx
  41d93d:	jl     41d944 <__ctype_b_loc@plt+0x1b674>
  41d93f:	add    DWORD PTR [r14+0x3c],0xffffffff
  41d944:	pop    rbx
  41d945:	pop    r12
  41d947:	pop    r14
  41d949:	pop    r15
  41d94b:	pop    rbp
  41d94c:	ret    
  41d94d:	nop    DWORD PTR [rax]
  41d950:	push   rbp
  41d951:	push   r15
  41d953:	push   r14
  41d955:	push   r13
  41d957:	push   r12
  41d959:	push   rbx
  41d95a:	sub    rsp,0x48
  41d95e:	mov    r12d,edx
  41d961:	mov    rbp,rsi
  41d964:	mov    rbx,rdi
  41d967:	mov    eax,DWORD PTR [rsi+0x8]
  41d96a:	add    eax,0xfffffffa
  41d96d:	cmp    eax,0x4
  41d970:	jb     41d984 <__ctype_b_loc@plt+0x1b6b4>
  41d972:	mov    edx,DWORD PTR [rbx+0x10]
  41d975:	lea    rsi,[rip+0xdb9a]        # 42b516 <__ctype_b_loc@plt+0x29246>
  41d97c:	mov    rdi,rbx
  41d97f:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41d984:	lea    r15,[rbp+0x8]
  41d988:	mov    eax,DWORD PTR [rbx+0x10]
  41d98b:	cmp    eax,0x3d
  41d98e:	je     41da1a <__ctype_b_loc@plt+0x1b74a>
  41d994:	cmp    eax,0x2c
  41d997:	jne    41d9c2 <__ctype_b_loc@plt+0x1b6f2>
  41d999:	mov    eax,DWORD PTR [rbx+0x4]
  41d99c:	mov    ecx,DWORD PTR [rbx+0x20]
  41d99f:	mov    DWORD PTR [rbx+0x8],eax
  41d9a2:	cmp    ecx,0x11f
  41d9a8:	jne    41dc1e <__ctype_b_loc@plt+0x1b94e>
  41d9ae:	lea    rsi,[rbx+0x18]
  41d9b2:	mov    rdi,rbx
  41d9b5:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41d9ba:	mov    DWORD PTR [rbx+0x10],eax
  41d9bd:	jmp    41dc32 <__ctype_b_loc@plt+0x1b962>
  41d9c2:	mov    rbp,QWORD PTR [rbx+0x38]
  41d9c6:	call   4022d0 <__ctype_b_loc@plt>
  41d9cb:	mov    rax,QWORD PTR [rax]
  41d9ce:	movzx  eax,WORD PTR [rax+0x7a]
  41d9d2:	test   al,0x2
  41d9d4:	lea    rax,[rip+0xd880]        # 42b25b <__ctype_b_loc@plt+0x28f8b>
  41d9db:	lea    rsi,[rip+0xd870]        # 42b252 <__ctype_b_loc@plt+0x28f82>
  41d9e2:	cmove  rsi,rax
  41d9e6:	mov    edx,0x3d
  41d9eb:	xor    eax,eax
  41d9ed:	mov    rdi,rbp
  41d9f0:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41d9f5:	mov    rcx,rax
  41d9f8:	lea    rsi,[rip+0xda96]        # 42b495 <__ctype_b_loc@plt+0x291c5>
  41d9ff:	xor    eax,eax
  41da01:	mov    rdi,rbp
  41da04:	mov    rdx,rcx
  41da07:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41da0c:	mov    edx,DWORD PTR [rbx+0x10]
  41da0f:	mov    rdi,rbx
  41da12:	mov    rsi,rax
  41da15:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41da1a:	mov    DWORD PTR [rsp+0x2c],r12d
  41da1f:	mov    QWORD PTR [rsp+0x30],r15
  41da24:	mov    eax,DWORD PTR [rbx+0x4]
  41da27:	mov    ecx,DWORD PTR [rbx+0x20]
  41da2a:	mov    DWORD PTR [rbx+0x8],eax
  41da2d:	lea    r12,[rbx+0x20]
  41da31:	cmp    ecx,0x11f
  41da37:	jne    41da4a <__ctype_b_loc@plt+0x1b77a>
  41da39:	lea    rsi,[rbx+0x18]
  41da3d:	mov    rdi,rbx
  41da40:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41da45:	mov    DWORD PTR [rbx+0x10],eax
  41da48:	jmp    41da5c <__ctype_b_loc@plt+0x1b78c>
  41da4a:	vmovups xmm0,XMMWORD PTR [r12]
  41da50:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41da55:	mov    DWORD PTR [rbx+0x20],0x11f
  41da5c:	lea    rsi,[rsp+0x8]
  41da61:	xor    edx,edx
  41da63:	mov    rdi,rbx
  41da66:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  41da6b:	mov    ebp,0x1
  41da70:	cmp    DWORD PTR [rbx+0x10],0x2c
  41da74:	jne    41db9d <__ctype_b_loc@plt+0x1b8cd>
  41da7a:	lea    rax,[rbx+0x18]
  41da7e:	mov    QWORD PTR [rsp+0x40],rax
  41da83:	lea    rax,[rbx+0x10]
  41da87:	mov    QWORD PTR [rsp+0x38],rax
  41da8c:	mov    ebp,0x1
  41da91:	lea    r13,[rsp+0x8]
  41da96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41daa0:	mov    eax,DWORD PTR [rbx+0x4]
  41daa3:	mov    ecx,DWORD PTR [rbx+0x20]
  41daa6:	mov    DWORD PTR [rbx+0x8],eax
  41daa9:	cmp    ecx,0x11f
  41daaf:	jne    41dad0 <__ctype_b_loc@plt+0x1b800>
  41dab1:	mov    rdi,rbx
  41dab4:	mov    rsi,QWORD PTR [rsp+0x40]
  41dab9:	call   4119c0 <__ctype_b_loc@plt+0xf6f0>
  41dabe:	mov    DWORD PTR [rbx+0x10],eax
  41dac1:	jmp    41dae7 <__ctype_b_loc@plt+0x1b817>
  41dac3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dacd:	nop    DWORD PTR [rax]
  41dad0:	vmovups xmm0,XMMWORD PTR [r12]
  41dad6:	mov    rax,QWORD PTR [rsp+0x38]
  41dadb:	vmovups XMMWORD PTR [rax],xmm0
  41dadf:	mov    DWORD PTR [r12],0x11f
  41dae7:	mov    r15,QWORD PTR [rbx+0x30]
  41daeb:	mov    rdi,r15
  41daee:	mov    rsi,r13
  41daf1:	call   419010 <__ctype_b_loc@plt+0x16d40>
  41daf6:	cmp    DWORD PTR [rsp+0x8],0xc
  41dafb:	jne    41db20 <__ctype_b_loc@plt+0x1b850>
  41dafd:	mov    eax,DWORD PTR [rsp+0x10]
  41db01:	test   eax,0x100
  41db06:	jne    41db20 <__ctype_b_loc@plt+0x1b850>
  41db08:	movzx  ecx,BYTE PTR [r15+0x4a]
  41db0d:	cmp    eax,ecx
  41db0f:	jl     41db20 <__ctype_b_loc@plt+0x1b850>
  41db11:	add    DWORD PTR [r15+0x3c],0xffffffff
  41db16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41db20:	mov    ecx,DWORD PTR [r15+0x3c]
  41db24:	lea    r14d,[rcx+0x1]
  41db28:	mov    rax,QWORD PTR [r15]
  41db2b:	movzx  edx,BYTE PTR [rax+0x73]
  41db2f:	cmp    ecx,edx
  41db31:	jl     41db6d <__ctype_b_loc@plt+0x1b89d>
  41db33:	cmp    ecx,0xf9
  41db39:	jl     41db60 <__ctype_b_loc@plt+0x1b890>
  41db3b:	mov    rdi,QWORD PTR [r15+0x18]
  41db3f:	mov    edx,DWORD PTR [rdi+0x10]
  41db42:	lea    rsi,[rip+0xd7d5]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41db49:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41db4e:	mov    rax,QWORD PTR [r15]
  41db51:	add    rax,0x73
  41db55:	mov    ecx,DWORD PTR [r15+0x3c]
  41db59:	add    ecx,0x1
  41db5c:	jmp    41db67 <__ctype_b_loc@plt+0x1b897>
  41db5e:	xchg   ax,ax
  41db60:	add    rax,0x73
  41db64:	mov    ecx,r14d
  41db67:	mov    BYTE PTR [rax],r14b
  41db6a:	mov    r14d,ecx
  41db6d:	mov    DWORD PTR [r15+0x3c],r14d
  41db71:	add    r14d,0xffffffff
  41db75:	mov    rdi,r15
  41db78:	mov    rsi,r13
  41db7b:	mov    edx,r14d
  41db7e:	call   4190f0 <__ctype_b_loc@plt+0x16e20>
  41db83:	xor    edx,edx
  41db85:	mov    rdi,rbx
  41db88:	mov    rsi,r13
  41db8b:	call   417e90 <__ctype_b_loc@plt+0x15bc0>
  41db90:	add    ebp,0x1
  41db93:	cmp    DWORD PTR [rbx+0x10],0x2c
  41db97:	je     41daa0 <__ctype_b_loc@plt+0x1b7d0>
  41db9d:	mov    r14d,DWORD PTR [rsp+0x2c]
  41dba2:	cmp    ebp,r14d
  41dba5:	jne    41dbee <__ctype_b_loc@plt+0x1b91e>
  41dba7:	mov    rdi,QWORD PTR [rbx+0x30]
  41dbab:	mov    eax,DWORD PTR [rsp+0x8]
  41dbaf:	cmp    eax,0xe
  41dbb2:	mov    rsi,QWORD PTR [rsp+0x30]
  41dbb7:	je     41dcf5 <__ctype_b_loc@plt+0x1ba25>
  41dbbd:	cmp    eax,0xd
  41dbc0:	jne    41dd1a <__ctype_b_loc@plt+0x1ba4a>
  41dbc6:	mov    DWORD PTR [rsp+0x8],0xc
  41dbce:	mov    rax,QWORD PTR [rdi]
  41dbd1:	mov    rax,QWORD PTR [rax+0x18]
  41dbd5:	movsxd rcx,DWORD PTR [rsp+0x10]
  41dbda:	mov    edx,0x806
  41dbdf:	bextr  eax,DWORD PTR [rax+rcx*4],edx
  41dbe5:	mov    DWORD PTR [rsp+0x10],eax
  41dbe9:	jmp    41dd1a <__ctype_b_loc@plt+0x1ba4a>
  41dbee:	lea    rcx,[rsp+0x8]
  41dbf3:	mov    rdi,rbx
  41dbf6:	mov    esi,r14d
  41dbf9:	mov    edx,ebp
  41dbfb:	call   41d3f0 <__ctype_b_loc@plt+0x1b120>
  41dc00:	cmp    ebp,r14d
  41dc03:	mov    r15,QWORD PTR [rsp+0x30]
  41dc08:	jle    41ddad <__ctype_b_loc@plt+0x1badd>
  41dc0e:	mov    rax,QWORD PTR [rbx+0x30]
  41dc12:	sub    r14d,ebp
  41dc15:	add    DWORD PTR [rax+0x3c],r14d
  41dc19:	jmp    41ddad <__ctype_b_loc@plt+0x1badd>
  41dc1e:	lea    rax,[rbx+0x20]
  41dc22:	vmovups xmm0,XMMWORD PTR [rax]
  41dc26:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41dc2b:	mov    DWORD PTR [rbx+0x20],0x11f
  41dc32:	mov    QWORD PTR [rsp+0x8],rbp
  41dc37:	lea    rsi,[rsp+0x10]
  41dc3c:	mov    rdi,rbx
  41dc3f:	call   41b1e0 <__ctype_b_loc@plt+0x18f10>
  41dc44:	cmp    DWORD PTR [rsp+0x10],0x6
  41dc49:	jne    41dd33 <__ctype_b_loc@plt+0x1ba63>
  41dc4f:	mov    r14,QWORD PTR [rbx+0x30]
  41dc53:	mov    eax,DWORD PTR [r14+0x3c]
  41dc57:	xor    ecx,ecx
  41dc59:	nop    DWORD PTR [rax+0x0]
  41dc60:	cmp    DWORD PTR [rbp+0x8],0x9
  41dc64:	jne    41dc88 <__ctype_b_loc@plt+0x1b9b8>
  41dc66:	mov    edx,DWORD PTR [rsp+0x18]
  41dc6a:	cmp    DWORD PTR [rbp+0x10],edx
  41dc6d:	jne    41dc7b <__ctype_b_loc@plt+0x1b9ab>
  41dc6f:	mov    DWORD PTR [rbp+0x10],eax
  41dc72:	mov    ecx,0x1
  41dc77:	mov    edx,DWORD PTR [rsp+0x18]
  41dc7b:	cmp    DWORD PTR [rbp+0x14],edx
  41dc7e:	jne    41dc88 <__ctype_b_loc@plt+0x1b9b8>
  41dc80:	mov    DWORD PTR [rbp+0x14],eax
  41dc83:	mov    ecx,0x1
  41dc88:	mov    rbp,QWORD PTR [rbp+0x0]
  41dc8c:	test   rbp,rbp
  41dc8f:	jne    41dc60 <__ctype_b_loc@plt+0x1b990>
  41dc91:	test   ecx,ecx
  41dc93:	je     41dd33 <__ctype_b_loc@plt+0x1ba63>
  41dc99:	mov    eax,DWORD PTR [r14+0x3c]
  41dc9d:	mov    esi,DWORD PTR [rsp+0x18]
  41dca1:	shl    eax,0x6
  41dca4:	shl    esi,0x17
  41dca7:	or     esi,eax
  41dca9:	mov    rax,QWORD PTR [r14+0x18]
  41dcad:	mov    edx,DWORD PTR [rax+0x8]
  41dcb0:	mov    rdi,r14
  41dcb3:	call   419630 <__ctype_b_loc@plt+0x17360>
  41dcb8:	mov    ecx,DWORD PTR [r14+0x3c]
  41dcbc:	lea    ebp,[rcx+0x1]
  41dcbf:	mov    rax,QWORD PTR [r14]
  41dcc2:	movzx  edx,BYTE PTR [rax+0x73]
  41dcc6:	cmp    ecx,edx
  41dcc8:	jl     41dd2f <__ctype_b_loc@plt+0x1ba5f>
  41dcca:	cmp    ecx,0xf9
  41dcd0:	jl     41dd24 <__ctype_b_loc@plt+0x1ba54>
  41dcd2:	mov    rdi,QWORD PTR [r14+0x18]
  41dcd6:	mov    edx,DWORD PTR [rdi+0x10]
  41dcd9:	lea    rsi,[rip+0xd63e]        # 42b31e <__ctype_b_loc@plt+0x2904e>
  41dce0:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41dce5:	mov    rax,QWORD PTR [r14]
  41dce8:	add    rax,0x73
  41dcec:	mov    ecx,DWORD PTR [r14+0x3c]
  41dcf0:	add    ecx,0x1
  41dcf3:	jmp    41dd2a <__ctype_b_loc@plt+0x1ba5a>
  41dcf5:	mov    rax,QWORD PTR [rdi]
  41dcf8:	mov    rax,QWORD PTR [rax+0x18]
  41dcfc:	movsxd rcx,DWORD PTR [rsp+0x10]
  41dd01:	mov    edx,0x7fffff
  41dd06:	and    edx,DWORD PTR [rax+rcx*4]
  41dd09:	or     edx,0x1000000
  41dd0f:	mov    DWORD PTR [rax+rcx*4],edx
  41dd12:	mov    DWORD PTR [rsp+0x8],0xb
  41dd1a:	lea    rdx,[rsp+0x8]
  41dd1f:	jmp    41ddd4 <__ctype_b_loc@plt+0x1bb04>
  41dd24:	add    rax,0x73
  41dd28:	mov    ecx,ebp
  41dd2a:	mov    BYTE PTR [rax],bpl
  41dd2d:	mov    ebp,ecx
  41dd2f:	mov    DWORD PTR [r14+0x3c],ebp
  41dd33:	mov    rax,QWORD PTR [rbx+0x38]
  41dd37:	movzx  eax,WORD PTR [rax+0x60]
  41dd3b:	mov    ecx,0xc8
  41dd40:	sub    ecx,eax
  41dd42:	cmp    ecx,r12d
  41dd45:	jge    41dd99 <__ctype_b_loc@plt+0x1bac9>
  41dd47:	mov    rbp,QWORD PTR [rbx+0x30]
  41dd4b:	mov    rax,QWORD PTR [rbp+0x0]
  41dd4f:	mov    rdi,QWORD PTR [rbp+0x20]
  41dd53:	mov    edx,DWORD PTR [rax+0x60]
  41dd56:	test   edx,edx
  41dd58:	je     41dd71 <__ctype_b_loc@plt+0x1baa1>
  41dd5a:	lea    rsi,[rip+0xd644]        # 42b3a5 <__ctype_b_loc@plt+0x290d5>
  41dd61:	lea    r8,[rip+0xd7bb]        # 42b523 <__ctype_b_loc@plt+0x29253>
  41dd68:	xor    eax,eax
  41dd6a:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41dd6f:	jmp    41dd8b <__ctype_b_loc@plt+0x1babb>
  41dd71:	lea    rsi,[rip+0xd60b]        # 42b383 <__ctype_b_loc@plt+0x290b3>
  41dd78:	lea    r8,[rip+0xd7a4]        # 42b523 <__ctype_b_loc@plt+0x29253>
  41dd7f:	xor    eax,eax
  41dd81:	mov    edx,ecx
  41dd83:	mov    rcx,r8
  41dd86:	call   4047b0 <__ctype_b_loc@plt+0x24e0>
  41dd8b:	mov    rsi,rax
  41dd8e:	mov    rdi,QWORD PTR [rbp+0x18]
  41dd92:	xor    edx,edx
  41dd94:	call   413af0 <__ctype_b_loc@plt+0x11820>
  41dd99:	add    r12d,0x1
  41dd9d:	lea    rsi,[rsp+0x8]
  41dda2:	mov    rdi,rbx
  41dda5:	mov    edx,r12d
  41dda8:	call   41d950 <__ctype_b_loc@plt+0x1b680>
  41ddad:	mov    rdi,QWORD PTR [rbx+0x30]
  41ddb1:	mov    eax,DWORD PTR [rdi+0x3c]
  41ddb4:	add    eax,0xffffffff
  41ddb7:	mov    QWORD PTR [rsp+0x18],0xffffffffffffffff
  41ddc0:	mov    DWORD PTR [rsp+0x8],0xc
  41ddc8:	mov    DWORD PTR [rsp+0x10],eax
  41ddcc:	lea    rdx,[rsp+0x8]
  41ddd1:	mov    rsi,r15
  41ddd4:	call   41d6d0 <__ctype_b_loc@plt+0x1b400>
  41ddd9:	add    rsp,0x48
  41dddd:	pop    rbx
  41ddde:	pop    r12
  41dde0:	pop    r13
  41dde2:	pop    r14
  41dde4:	pop    r15
  41dde6:	pop    rbp
  41dde7:	ret    
  41dde8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ddf0:	test   esi,esi
  41ddf2:	jle    41de1a <__ctype_b_loc@plt+0x1bb4a>
  41ddf4:	mov    rax,QWORD PTR [rdi+0x18]
  41ddf8:	movsxd rcx,esi
  41ddfb:	shl    rcx,0x4
  41ddff:	add    rcx,rax
  41de02:	add    rcx,0xfffffffffffffff0
  41de06:	cmp    rcx,QWORD PTR [rdi+0x10]
  41de0a:	lea    rax,[rip+0xcd07]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41de11:	cmovb  rax,rcx
  41de15:	jmp    41deb8 <__ctype_b_loc@plt+0x1bbe8>
  41de1a:	cmp    esi,0xffffd8f1
  41de20:	jl     41de32 <__ctype_b_loc@plt+0x1bb62>
  41de22:	movsxd rax,esi
  41de25:	shl    rax,0x4
  41de29:	add    rax,QWORD PTR [rdi+0x10]
  41de2d:	jmp    41deb8 <__ctype_b_loc@plt+0x1bbe8>
  41de32:	cmp    esi,0xffffd8ee
  41de38:	je     41de55 <__ctype_b_loc@plt+0x1bb85>
  41de3a:	cmp    esi,0xffffd8ef
  41de40:	je     41de5e <__ctype_b_loc@plt+0x1bb8e>
  41de42:	cmp    esi,0xffffd8f0
  41de48:	jne    41de87 <__ctype_b_loc@plt+0x1bbb7>
  41de4a:	mov    eax,0xa0
  41de4f:	add    rax,QWORD PTR [rdi+0x20]
  41de53:	jmp    41deb8 <__ctype_b_loc@plt+0x1bbe8>
  41de55:	add    rdi,0x78
  41de59:	mov    rax,rdi
  41de5c:	jmp    41deb8 <__ctype_b_loc@plt+0x1bbe8>
  41de5e:	mov    rax,QWORD PTR [rdi+0x28]
  41de62:	mov    rax,QWORD PTR [rax+0x8]
  41de66:	mov    rcx,QWORD PTR [rax]
  41de69:	lea    rax,[rdi+0x88]
  41de70:	mov    rcx,QWORD PTR [rcx+0x18]
  41de74:	mov    QWORD PTR [rdi+0x88],rcx
  41de7b:	mov    DWORD PTR [rdi+0x90],0x5
  41de85:	jmp    41deb8 <__ctype_b_loc@plt+0x1bbe8>
  41de87:	mov    rax,QWORD PTR [rdi+0x28]
  41de8b:	mov    rax,QWORD PTR [rax+0x8]
  41de8f:	mov    rax,QWORD PTR [rax]
  41de92:	mov    ecx,0xffffd8ee
  41de97:	sub    ecx,esi
  41de99:	movzx  edx,BYTE PTR [rax+0xb]
  41de9d:	cmp    ecx,edx
  41de9f:	jle    41deaa <__ctype_b_loc@plt+0x1bbda>
  41dea1:	lea    rax,[rip+0xcc70]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41dea8:	jmp    41deb8 <__ctype_b_loc@plt+0x1bbe8>
  41deaa:	movsxd rcx,ecx
  41dead:	shl    rcx,0x4
  41deb1:	add    rax,rcx
  41deb4:	add    rax,0x18
  41deb8:	push   rbp
  41deb9:	push   r14
  41debb:	push   rbx
  41debc:	sub    rsp,0x20
  41dec0:	mov    ecx,DWORD PTR [rax+0x8]
  41dec3:	vxorpd xmm0,xmm0,xmm0
  41dec7:	cmp    ecx,0x4
  41deca:	je     41dee2 <__ctype_b_loc@plt+0x1bc12>
  41decc:	cmp    ecx,0x3
  41decf:	jne    41df6b <__ctype_b_loc@plt+0x1bc9b>
  41ded5:	vmovsd xmm1,QWORD PTR [rax]
  41ded9:	vmovapd xmm0,xmm1
  41dedd:	jmp    41df6b <__ctype_b_loc@plt+0x1bc9b>
  41dee2:	mov    r14,QWORD PTR [rax]
  41dee5:	add    r14,0x18
  41dee9:	lea    rsi,[rsp+0x8]
  41deee:	mov    rdi,r14
  41def1:	call   4020b0 <strtod@plt>
  41def6:	mov    rbx,QWORD PTR [rsp+0x8]
  41defb:	cmp    rbx,r14
  41defe:	je     41df67 <__ctype_b_loc@plt+0x1bc97>
  41df00:	mov    bpl,BYTE PTR [rbx]
  41df03:	mov    eax,ebp
  41df05:	or     al,0x20
  41df07:	cmp    al,0x78
  41df09:	jne    41df45 <__ctype_b_loc@plt+0x1bc75>
  41df0b:	lea    rsi,[rsp+0x8]
  41df10:	mov    edx,0x10
  41df15:	mov    rdi,r14
  41df18:	call   402250 <strtoul@plt>
  41df1d:	vmovq  xmm0,rax
  41df22:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0xcd46]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  41df2a:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0xcd4e]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  41df32:	vhaddpd xmm1,xmm0,xmm0
  41df36:	mov    rbx,QWORD PTR [rsp+0x8]
  41df3b:	mov    bpl,BYTE PTR [rbx]
  41df3e:	test   bpl,bpl
  41df41:	jne    41df4e <__ctype_b_loc@plt+0x1bc7e>
  41df43:	jmp    41ded9 <__ctype_b_loc@plt+0x1bc09>
  41df45:	vmovapd xmm1,xmm0
  41df49:	test   bpl,bpl
  41df4c:	je     41ded9 <__ctype_b_loc@plt+0x1bc09>
  41df4e:	vmovapd XMMWORD PTR [rsp+0x10],xmm1
  41df54:	call   4022d0 <__ctype_b_loc@plt>
  41df59:	mov    rax,QWORD PTR [rax]
  41df5c:	movzx  ecx,bpl
  41df60:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41df65:	jne    41df74 <__ctype_b_loc@plt+0x1bca4>
  41df67:	vxorpd xmm0,xmm0,xmm0
  41df6b:	add    rsp,0x20
  41df6f:	pop    rbx
  41df70:	pop    r14
  41df72:	pop    rbp
  41df73:	ret    
  41df74:	add    rbx,0x1
  41df78:	vxorpd xmm0,xmm0,xmm0
  41df7c:	vmovapd xmm1,XMMWORD PTR [rsp+0x10]
  41df82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41df8c:	nop    DWORD PTR [rax+0x0]
  41df90:	movzx  ecx,BYTE PTR [rbx]
  41df93:	add    rbx,0x1
  41df97:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41df9c:	jne    41df90 <__ctype_b_loc@plt+0x1bcc0>
  41df9e:	test   cl,cl
  41dfa0:	jne    41df6b <__ctype_b_loc@plt+0x1bc9b>
  41dfa2:	jmp    41ded9 <__ctype_b_loc@plt+0x1bc09>
  41dfa7:	nop    WORD PTR [rax+rax*1+0x0]
  41dfb0:	push   r15
  41dfb2:	push   r14
  41dfb4:	push   r12
  41dfb6:	push   rbx
  41dfb7:	push   rax
  41dfb8:	mov    r14,rsi
  41dfbb:	mov    rbx,rdi
  41dfbe:	mov    rax,QWORD PTR [rdi+0x20]
  41dfc2:	mov    rcx,QWORD PTR [rax+0x78]
  41dfc6:	cmp    rcx,QWORD PTR [rax+0x70]
  41dfca:	jb     41dfd4 <__ctype_b_loc@plt+0x1bd04>
  41dfcc:	mov    rdi,rbx
  41dfcf:	call   408070 <__ctype_b_loc@plt+0x5da0>
  41dfd4:	mov    rax,QWORD PTR [rbx+0x28]
  41dfd8:	cmp    rax,QWORD PTR [rbx+0x50]
  41dfdc:	je     41dfeb <__ctype_b_loc@plt+0x1bd1b>
  41dfde:	mov    rax,QWORD PTR [rax+0x8]
  41dfe2:	mov    rax,QWORD PTR [rax]
  41dfe5:	add    rax,0x18
  41dfe9:	jmp    41dfef <__ctype_b_loc@plt+0x1bd1f>
  41dfeb:	lea    rax,[rbx+0x78]
  41dfef:	mov    r15,QWORD PTR [rax]
  41dff2:	cmp    r14,0xffffffffffffffd6
  41dff6:	jb     41e009 <__ctype_b_loc@plt+0x1bd39>
  41dff8:	lea    rsi,[rip+0xcdba]        # 42adb9 <__ctype_b_loc@plt+0x28ae9>
  41dfff:	xor    eax,eax
  41e001:	mov    rdi,rbx
  41e004:	call   404080 <__ctype_b_loc@plt+0x1db0>
  41e009:	mov    r12,QWORD PTR [rbx+0x20]
  41e00d:	mov    rdi,QWORD PTR [r12+0x18]
  41e012:	lea    rcx,[r14+0x28]
  41e016:	xor    esi,esi
  41e018:	xor    edx,edx
  41e01a:	call   QWORD PTR [r12+0x10]
  41e01f:	mov    rcx,r14
  41e022:	add    rcx,0x28
  41e026:	je     41e02d <__ctype_b_loc@plt+0x1bd5d>
  41e028:	test   rax,rax
  41e02b:	je     41e095 <__ctype_b_loc@plt+0x1bdc5>
  41e02d:	add    QWORD PTR [r12+0x78],rcx
  41e032:	mov    rcx,QWORD PTR [rbx+0x20]
  41e036:	mov    cl,BYTE PTR [rcx+0x20]
  41e039:	and    cl,0x3
  41e03c:	mov    BYTE PTR [rax+0x9],cl
  41e03f:	mov    BYTE PTR [rax+0x8],0x7
  41e043:	mov    QWORD PTR [rax+0x20],r14
  41e047:	mov    QWORD PTR [rax+0x10],0x0
  41e04f:	mov    QWORD PTR [rax+0x18],r15
  41e053:	mov    rcx,QWORD PTR [rbx+0x20]
  41e057:	mov    rcx,QWORD PTR [rcx+0xb0]
  41e05e:	mov    rcx,QWORD PTR [rcx]
  41e061:	mov    QWORD PTR [rax],rcx
  41e064:	mov    rcx,QWORD PTR [rbx+0x20]
  41e068:	mov    rcx,QWORD PTR [rcx+0xb0]
  41e06f:	mov    QWORD PTR [rcx],rax
  41e072:	mov    rcx,QWORD PTR [rbx+0x10]
  41e076:	mov    QWORD PTR [rcx],rax
  41e079:	mov    DWORD PTR [rcx+0x8],0x7
  41e080:	add    QWORD PTR [rbx+0x10],0x10
  41e085:	add    rax,0x28
  41e089:	add    rsp,0x8
  41e08d:	pop    rbx
  41e08e:	pop    r12
  41e090:	pop    r14
  41e092:	pop    r15
  41e094:	ret    
  41e095:	mov    rdi,QWORD PTR [rbx+0xa8]
  41e09c:	test   rdi,rdi
  41e09f:	jne    41e0d7 <__ctype_b_loc@plt+0x1be07>
  41e0a1:	mov    BYTE PTR [rbx+0xa],0x4
  41e0a5:	mov    rax,QWORD PTR [rbx+0x20]
  41e0a9:	cmp    QWORD PTR [rax+0x98],0x0
  41e0b1:	je     41e0cd <__ctype_b_loc@plt+0x1bdfd>
  41e0b3:	mov    esi,0x4
  41e0b8:	mov    rdi,rbx
  41e0bb:	call   403ce0 <__ctype_b_loc@plt+0x1a10>
  41e0c0:	mov    rax,QWORD PTR [rbx+0x20]
  41e0c4:	mov    rdi,rbx
  41e0c7:	call   QWORD PTR [rax+0x98]
  41e0cd:	mov    edi,0x1
  41e0d2:	call   402280 <exit@plt>
  41e0d7:	mov    DWORD PTR [rdi+0xd0],0x4
  41e0e1:	add    rdi,0x8
  41e0e5:	mov    esi,0x1
  41e0ea:	call   402230 <longjmp@plt>
  41e0ef:	nop
  41e0f0:	push   rbp
  41e0f1:	push   r15
  41e0f3:	push   r14
  41e0f5:	push   r13
  41e0f7:	push   r12
  41e0f9:	push   rbx
  41e0fa:	sub    rsp,0x2058
  41e101:	mov    r12,rdi
  41e104:	mov    rax,QWORD PTR [rdi+0x10]
  41e108:	mov    rbx,QWORD PTR [rdi+0x18]
  41e10c:	lea    rcx,[rbx+0x10]
  41e110:	xor    edx,edx
  41e112:	mov    QWORD PTR [rsp+0x10],rdx
  41e117:	lea    rdx,[rip+0xcf7d]        # 42b09b <__ctype_b_loc@plt+0x28dcb>
  41e11e:	mov    QWORD PTR [rsp+0x18],rdx
  41e123:	cmp    rcx,rax
  41e126:	jae    41e2b3 <__ctype_b_loc@plt+0x1bfe3>
  41e12c:	lea    r15,[rip+0xc9e5]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41e133:	cmp    rcx,r15
  41e136:	je     41e2b3 <__ctype_b_loc@plt+0x1bfe3>
  41e13c:	movsxd rdx,DWORD PTR [rbx+0x18]
  41e140:	test   rdx,rdx
  41e143:	jle    41e1d7 <__ctype_b_loc@plt+0x1bf07>
  41e149:	cmp    edx,0x4
  41e14c:	je     41e1c2 <__ctype_b_loc@plt+0x1bef2>
  41e14e:	cmp    edx,0x3
  41e151:	jne    41e1e3 <__ctype_b_loc@plt+0x1bf13>
  41e157:	vmovsd xmm0,QWORD PTR [rbx+0x10]
  41e15c:	lea    rsi,[rip+0xccbe]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  41e163:	lea    rbp,[rsp+0x40]
  41e168:	mov    al,0x1
  41e16a:	mov    rdi,rbp
  41e16d:	call   402270 <sprintf@plt>
  41e172:	mov    rdi,rbp
  41e175:	call   4020e0 <strlen@plt>
  41e17a:	mov    rdi,r12
  41e17d:	mov    rsi,rbp
  41e180:	mov    rdx,rax
  41e183:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  41e188:	mov    QWORD PTR [rbx+0x10],rax
  41e18c:	mov    DWORD PTR [rbx+0x18],0x4
  41e193:	mov    rax,QWORD PTR [r12+0x20]
  41e198:	mov    rcx,QWORD PTR [rax+0x78]
  41e19c:	cmp    rcx,QWORD PTR [rax+0x70]
  41e1a0:	jb     41e1aa <__ctype_b_loc@plt+0x1beda>
  41e1a2:	mov    rdi,r12
  41e1a5:	call   408070 <__ctype_b_loc@plt+0x5da0>
  41e1aa:	mov    rax,QWORD PTR [r12+0x10]
  41e1af:	mov    rbx,QWORD PTR [r12+0x18]
  41e1b4:	lea    rcx,[rbx+0x10]
  41e1b8:	cmp    rcx,rax
  41e1bb:	cmovb  r15,rcx
  41e1bf:	mov    rcx,r15
  41e1c2:	mov    rcx,QWORD PTR [rcx]
  41e1c5:	mov    rdx,QWORD PTR [rcx+0x10]
  41e1c9:	mov    QWORD PTR [rsp+0x10],rdx
  41e1ce:	add    rcx,0x18
  41e1d2:	jmp    41e2ae <__ctype_b_loc@plt+0x1bfde>
  41e1d7:	xor    ecx,ecx
  41e1d9:	mov    QWORD PTR [rsp+0x10],rcx
  41e1de:	jmp    41e2b3 <__ctype_b_loc@plt+0x1bfe3>
  41e1e3:	lea    rax,[rip+0x126f6]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  41e1ea:	mov    rcx,QWORD PTR [rax+rdx*8]
  41e1ee:	lea    rsi,[rip+0xcfcd]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  41e1f5:	lea    rdx,[rip+0xd06d]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  41e1fc:	xor    eax,eax
  41e1fe:	mov    rdi,r12
  41e201:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  41e206:	mov    rbx,rax
  41e209:	mov    rax,QWORD PTR [r12+0x28]
  41e20e:	sub    rax,QWORD PTR [r12+0x50]
  41e213:	jbe    41e282 <__ctype_b_loc@plt+0x1bfb2>
  41e215:	shr    rax,0x3
  41e219:	imul   eax,eax,0xcccccccd
  41e21f:	mov    DWORD PTR [rsp+0xb4],eax
  41e226:	lea    rsi,[rip+0xcc2a]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  41e22d:	lea    rdx,[rsp+0x40]
  41e232:	mov    rdi,r12
  41e235:	call   410310 <__ctype_b_loc@plt+0xe040>
  41e23a:	mov    rdi,QWORD PTR [rsp+0x50]
  41e23f:	lea    rsi,[rip+0xcf0a]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  41e246:	call   402180 <strcmp@plt>
  41e24b:	cmp    eax,0x1
  41e24e:	mov    edx,0x2
  41e253:	sbb    edx,0x0
  41e256:	mov    rcx,QWORD PTR [rsp+0x48]
  41e25b:	test   rcx,rcx
  41e25e:	jne    41e26c <__ctype_b_loc@plt+0x1bf9c>
  41e260:	lea    rcx,[rip+0xcf0e]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  41e267:	mov    QWORD PTR [rsp+0x48],rcx
  41e26c:	lea    rsi,[rip+0xcf04]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  41e273:	xor    eax,eax
  41e275:	mov    rdi,r12
  41e278:	mov    r8,rbx
  41e27b:	call   410070 <__ctype_b_loc@plt+0xdda0>
  41e280:	jmp    41e29b <__ctype_b_loc@plt+0x1bfcb>
  41e282:	lea    rsi,[rip+0xceb1]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  41e289:	mov    edx,0x2
  41e28e:	xor    eax,eax
  41e290:	mov    rdi,r12
  41e293:	mov    rcx,rbx
  41e296:	call   410070 <__ctype_b_loc@plt+0xdda0>
  41e29b:	mov    rax,QWORD PTR [r12+0x10]
  41e2a0:	mov    rbx,QWORD PTR [r12+0x18]
  41e2a5:	xor    ecx,ecx
  41e2a7:	mov    QWORD PTR [rsp+0x10],rcx
  41e2ac:	xor    ecx,ecx
  41e2ae:	mov    QWORD PTR [rsp+0x18],rcx
  41e2b3:	lea    r14,[rip+0xc85e]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41e2ba:	lea    rcx,[rip+0xcf15]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  41e2c1:	cmp    rbx,r14
  41e2c4:	je     41e2e5 <__ctype_b_loc@plt+0x1c015>
  41e2c6:	cmp    rbx,rax
  41e2c9:	jae    41e2e5 <__ctype_b_loc@plt+0x1c015>
  41e2cb:	movsxd rax,DWORD PTR [rbx+0x8]
  41e2cf:	cmp    rax,0xffffffffffffffff
  41e2d3:	je     41e2e5 <__ctype_b_loc@plt+0x1c015>
  41e2d5:	cmp    eax,0x5
  41e2d8:	je     41e30d <__ctype_b_loc@plt+0x1c03d>
  41e2da:	lea    rcx,[rip+0x125ff]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  41e2e1:	mov    rcx,QWORD PTR [rcx+rax*8]
  41e2e5:	lea    rsi,[rip+0xced6]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  41e2ec:	lea    rdx,[rip+0xd317]        # 42b60a <__ctype_b_loc@plt+0x2933a>
  41e2f3:	xor    eax,eax
  41e2f5:	mov    rdi,r12
  41e2f8:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  41e2fd:	mov    esi,0x1
  41e302:	mov    rdi,r12
  41e305:	mov    rdx,rax
  41e308:	call   410240 <__ctype_b_loc@plt+0xdf70>
  41e30d:	mov    esi,0x3
  41e312:	mov    edx,0x1
  41e317:	mov    rdi,r12
  41e31a:	call   410970 <__ctype_b_loc@plt+0xe6a0>
  41e31f:	mov    r13,rax
  41e322:	mov    rdx,QWORD PTR [r12+0x10]
  41e327:	mov    rcx,QWORD PTR [r12+0x18]
  41e32c:	lea    rax,[rcx+0x30]
  41e330:	cmp    rax,rdx
  41e333:	jae    41e3f5 <__ctype_b_loc@plt+0x1c125>
  41e339:	cmp    rax,r14
  41e33c:	je     41e3f5 <__ctype_b_loc@plt+0x1c125>
  41e342:	mov    esi,DWORD PTR [rcx+0x38]
  41e345:	test   esi,esi
  41e347:	jle    41e3f5 <__ctype_b_loc@plt+0x1c125>
  41e34d:	cmp    esi,0x3
  41e350:	je     41e4cd <__ctype_b_loc@plt+0x1c1fd>
  41e356:	cmp    esi,0x4
  41e359:	jne    41e4db <__ctype_b_loc@plt+0x1c20b>
  41e35f:	mov    r15,QWORD PTR [rax]
  41e362:	add    r15,0x18
  41e366:	lea    rsi,[rsp+0x40]
  41e36b:	mov    rdi,r15
  41e36e:	call   4020b0 <strtod@plt>
  41e373:	mov    rbx,QWORD PTR [rsp+0x40]
  41e378:	cmp    rbx,r15
  41e37b:	je     41e4db <__ctype_b_loc@plt+0x1c20b>
  41e381:	mov    QWORD PTR [rsp+0x8],r12
  41e386:	mov    r12b,BYTE PTR [rbx]
  41e389:	mov    eax,r12d
  41e38c:	or     al,0x20
  41e38e:	cmp    al,0x78
  41e390:	jne    41e3c5 <__ctype_b_loc@plt+0x1c0f5>
  41e392:	lea    rsi,[rsp+0x40]
  41e397:	mov    edx,0x10
  41e39c:	mov    rdi,r15
  41e39f:	call   402250 <strtoul@plt>
  41e3a4:	vmovq  xmm0,rax
  41e3a9:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0xc8bf]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  41e3b1:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0xc8c7]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  41e3b9:	vhaddpd xmm0,xmm0,xmm0
  41e3bd:	mov    rbx,QWORD PTR [rsp+0x40]
  41e3c2:	mov    r12b,BYTE PTR [rbx]
  41e3c5:	test   r12b,r12b
  41e3c8:	je     41e48f <__ctype_b_loc@plt+0x1c1bf>
  41e3ce:	vmovapd XMMWORD PTR [rsp+0x20],xmm0
  41e3d4:	call   4022d0 <__ctype_b_loc@plt>
  41e3d9:	mov    rax,QWORD PTR [rax]
  41e3dc:	movzx  ecx,r12b
  41e3e0:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41e3e5:	jne    41e496 <__ctype_b_loc@plt+0x1c1c6>
  41e3eb:	mov    r12,QWORD PTR [rsp+0x8]
  41e3f0:	jmp    41e4db <__ctype_b_loc@plt+0x1c20b>
  41e3f5:	cmp    rcx,rdx
  41e3f8:	lea    rbx,[rip+0xc719]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41e3ff:	cmovb  rbx,rcx
  41e403:	mov    eax,DWORD PTR [rbx+0x8]
  41e406:	xor    edx,edx
  41e408:	add    eax,0xfffffffd
  41e40b:	cmp    eax,0x4
  41e40e:	ja     41e676 <__ctype_b_loc@plt+0x1c3a6>
  41e414:	lea    rcx,[rip+0xc431]        # 42a84c <__ctype_b_loc@plt+0x2857c>
  41e41b:	movsxd rax,DWORD PTR [rcx+rax*4]
  41e41f:	add    rax,rcx
  41e422:	jmp    rax
  41e424:	vmovsd xmm0,QWORD PTR [rbx]
  41e428:	lea    rsi,[rip+0xc9f2]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  41e42f:	lea    r15,[rsp+0x40]
  41e434:	mov    al,0x1
  41e436:	mov    rdi,r15
  41e439:	call   402270 <sprintf@plt>
  41e43e:	mov    rdi,r15
  41e441:	call   4020e0 <strlen@plt>
  41e446:	mov    rdi,r12
  41e449:	mov    rsi,r15
  41e44c:	mov    rdx,rax
  41e44f:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  41e454:	mov    QWORD PTR [rbx],rax
  41e457:	mov    DWORD PTR [rbx+0x8],0x4
  41e45e:	mov    rdx,QWORD PTR [rax+0x10]
  41e462:	jmp    41e676 <__ctype_b_loc@plt+0x1c3a6>
  41e467:	mov    rax,QWORD PTR [rbx]
  41e46a:	mov    rdx,QWORD PTR [rax+0x10]
  41e46e:	jmp    41e676 <__ctype_b_loc@plt+0x1c3a6>
  41e473:	mov    rdi,QWORD PTR [rbx]
  41e476:	call   4095e0 <__ctype_b_loc@plt+0x7310>
  41e47b:	movsxd rdx,eax
  41e47e:	jmp    41e676 <__ctype_b_loc@plt+0x1c3a6>
  41e483:	mov    rax,QWORD PTR [rbx]
  41e486:	mov    rdx,QWORD PTR [rax+0x20]
  41e48a:	jmp    41e676 <__ctype_b_loc@plt+0x1c3a6>
  41e48f:	mov    r12,QWORD PTR [rsp+0x8]
  41e494:	jmp    41e4c2 <__ctype_b_loc@plt+0x1c1f2>
  41e496:	add    rbx,0x1
  41e49a:	mov    r12,QWORD PTR [rsp+0x8]
  41e49f:	vmovapd xmm0,XMMWORD PTR [rsp+0x20]
  41e4a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e4af:	nop
  41e4b0:	movzx  ecx,BYTE PTR [rbx]
  41e4b3:	add    rbx,0x1
  41e4b7:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41e4bc:	jne    41e4b0 <__ctype_b_loc@plt+0x1c1e0>
  41e4be:	test   cl,cl
  41e4c0:	jne    41e4db <__ctype_b_loc@plt+0x1c20b>
  41e4c2:	lea    rax,[rsp+0x38]
  41e4c7:	vmovsd QWORD PTR [rsp+0x38],xmm0
  41e4cd:	vcvttsd2si rdx,QWORD PTR [rax]
  41e4d2:	test   rdx,rdx
  41e4d5:	jne    41e676 <__ctype_b_loc@plt+0x1c3a6>
  41e4db:	mov    rax,QWORD PTR [r12+0x18]
  41e4e0:	add    rax,0x30
  41e4e4:	cmp    rax,QWORD PTR [r12+0x10]
  41e4e9:	cmovae rax,r14
  41e4ed:	mov    ecx,DWORD PTR [rax+0x8]
  41e4f0:	cmp    ecx,0x3
  41e4f3:	je     41e674 <__ctype_b_loc@plt+0x1c3a4>
  41e4f9:	cmp    ecx,0x4
  41e4fc:	jne    41e596 <__ctype_b_loc@plt+0x1c2c6>
  41e502:	mov    r15,QWORD PTR [rax]
  41e505:	add    r15,0x18
  41e509:	lea    rsi,[rsp+0x40]
  41e50e:	mov    rdi,r15
  41e511:	call   4020b0 <strtod@plt>
  41e516:	mov    rbx,QWORD PTR [rsp+0x40]
  41e51b:	cmp    rbx,r15
  41e51e:	je     41e596 <__ctype_b_loc@plt+0x1c2c6>
  41e520:	mov    QWORD PTR [rsp+0x8],r12
  41e525:	mov    r12b,BYTE PTR [rbx]
  41e528:	mov    eax,r12d
  41e52b:	or     al,0x20
  41e52d:	cmp    al,0x78
  41e52f:	jne    41e54b <__ctype_b_loc@plt+0x1c27b>
  41e531:	lea    rsi,[rsp+0x40]
  41e536:	mov    edx,0x10
  41e53b:	mov    rdi,r15
  41e53e:	call   402250 <strtoul@plt>
  41e543:	mov    rbx,QWORD PTR [rsp+0x40]
  41e548:	mov    r12b,BYTE PTR [rbx]
  41e54b:	test   r12b,r12b
  41e54e:	je     41e56a <__ctype_b_loc@plt+0x1c29a>
  41e550:	call   4022d0 <__ctype_b_loc@plt>
  41e555:	mov    rax,QWORD PTR [rax]
  41e558:	movzx  ecx,r12b
  41e55c:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41e561:	jne    41e576 <__ctype_b_loc@plt+0x1c2a6>
  41e563:	mov    r12,QWORD PTR [rsp+0x8]
  41e568:	jmp    41e596 <__ctype_b_loc@plt+0x1c2c6>
  41e56a:	xor    edx,edx
  41e56c:	mov    r12,QWORD PTR [rsp+0x8]
  41e571:	jmp    41e676 <__ctype_b_loc@plt+0x1c3a6>
  41e576:	add    rbx,0x1
  41e57a:	mov    r12,QWORD PTR [rsp+0x8]
  41e57f:	nop
  41e580:	movzx  ecx,BYTE PTR [rbx]
  41e583:	add    rbx,0x1
  41e587:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41e58c:	jne    41e580 <__ctype_b_loc@plt+0x1c2b0>
  41e58e:	test   cl,cl
  41e590:	je     41e674 <__ctype_b_loc@plt+0x1c3a4>
  41e596:	mov    rax,QWORD PTR [r12+0x18]
  41e59b:	lea    rdx,[rax+0x30]
  41e59f:	lea    rcx,[rip+0xcc30]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  41e5a6:	cmp    rdx,QWORD PTR [r12+0x10]
  41e5ab:	jae    41e5c7 <__ctype_b_loc@plt+0x1c2f7>
  41e5ad:	cmp    rdx,r14
  41e5b0:	je     41e5c7 <__ctype_b_loc@plt+0x1c2f7>
  41e5b2:	movsxd rax,DWORD PTR [rax+0x38]
  41e5b6:	cmp    rax,0xffffffffffffffff
  41e5ba:	je     41e5c7 <__ctype_b_loc@plt+0x1c2f7>
  41e5bc:	lea    rcx,[rip+0x1231d]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  41e5c3:	mov    rcx,QWORD PTR [rcx+rax*8]
  41e5c7:	lea    rsi,[rip+0xcbf4]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  41e5ce:	lea    rdx,[rip+0xc8cc]        # 42aea1 <__ctype_b_loc@plt+0x28bd1>
  41e5d5:	xor    eax,eax
  41e5d7:	mov    rdi,r12
  41e5da:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  41e5df:	mov    rbx,rax
  41e5e2:	mov    rax,QWORD PTR [r12+0x28]
  41e5e7:	sub    rax,QWORD PTR [r12+0x50]
  41e5ec:	jbe    41e65b <__ctype_b_loc@plt+0x1c38b>
  41e5ee:	shr    rax,0x3
  41e5f2:	imul   eax,eax,0xcccccccd
  41e5f8:	mov    DWORD PTR [rsp+0xb4],eax
  41e5ff:	lea    rsi,[rip+0xc851]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  41e606:	lea    rdx,[rsp+0x40]
  41e60b:	mov    rdi,r12
  41e60e:	call   410310 <__ctype_b_loc@plt+0xe040>
  41e613:	mov    rdi,QWORD PTR [rsp+0x50]
  41e618:	lea    rsi,[rip+0xcb31]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  41e61f:	call   402180 <strcmp@plt>
  41e624:	cmp    eax,0x1
  41e627:	mov    edx,0x4
  41e62c:	sbb    edx,0x0
  41e62f:	mov    rcx,QWORD PTR [rsp+0x48]
  41e634:	test   rcx,rcx
  41e637:	jne    41e645 <__ctype_b_loc@plt+0x1c375>
  41e639:	lea    rcx,[rip+0xcb35]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  41e640:	mov    QWORD PTR [rsp+0x48],rcx
  41e645:	lea    rsi,[rip+0xcb2b]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  41e64c:	xor    eax,eax
  41e64e:	mov    rdi,r12
  41e651:	mov    r8,rbx
  41e654:	call   410070 <__ctype_b_loc@plt+0xdda0>
  41e659:	jmp    41e674 <__ctype_b_loc@plt+0x1c3a4>
  41e65b:	lea    rsi,[rip+0xcad8]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  41e662:	mov    edx,0x4
  41e667:	xor    eax,eax
  41e669:	mov    rdi,r12
  41e66c:	mov    rcx,rbx
  41e66f:	call   410070 <__ctype_b_loc@plt+0xdda0>
  41e674:	xor    edx,edx
  41e676:	mov    QWORD PTR [rsp+0x50],r12
  41e67b:	lea    rax,[rsp+0x58]
  41e680:	mov    QWORD PTR [rsp+0x40],rax
  41e685:	mov    DWORD PTR [rsp+0x48],0x0
  41e68d:	cmp    r13d,edx
  41e690:	mov    QWORD PTR [rsp+0x8],rdx
  41e695:	jge    41e84d <__ctype_b_loc@plt+0x1c57d>
  41e69b:	lea    r15,[rsp+0x2058]
  41e6a3:	movsxd rbx,r13d
  41e6a6:	mov    eax,0xffffffff
  41e6ab:	xor    rax,r13
  41e6ae:	add    rax,rdx
  41e6b1:	add    rax,rbx
  41e6b4:	mov    QWORD PTR [rsp+0x20],rax
  41e6b9:	lea    rbp,[rip+0xc458]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41e6c0:	lea    r13,[rsp+0x40]
  41e6c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e6cf:	nop
  41e6d0:	mov    rcx,QWORD PTR [r12+0x10]
  41e6d5:	mov    rax,QWORD PTR [r12+0x18]
  41e6da:	cmp    rax,rcx
  41e6dd:	cmovae rax,rbp
  41e6e1:	mov    rsi,QWORD PTR [rax]
  41e6e4:	lea    eax,[rbx-0x1]
  41e6e7:	cmp    eax,DWORD PTR [rsi+0x38]
  41e6ea:	jae    41e700 <__ctype_b_loc@plt+0x1c430>
  41e6ec:	cdqe   
  41e6ee:	shl    rax,0x4
  41e6f2:	add    rax,QWORD PTR [rsi+0x18]
  41e6f6:	jmp    41e76f <__ctype_b_loc@plt+0x1c49f>
  41e6f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e700:	vcvtsi2sd xmm0,xmm2,ebx
  41e704:	test   rbx,rbx
  41e707:	je     41e747 <__ctype_b_loc@plt+0x1c477>
  41e709:	vmovq  rdx,xmm0
  41e70e:	mov    rax,rdx
  41e711:	shr    rax,0x20
  41e715:	add    eax,edx
  41e717:	mov    dl,BYTE PTR [rsi+0xb]
  41e71a:	mov    rdi,0xffffffffffffffff
  41e721:	shlx   rdi,rdi,rdx
  41e726:	or     rdi,0x1
  41e72a:	xor    rdi,0xfffffffffffffffe
  41e72e:	xor    edx,edx
  41e730:	div    rdi
  41e733:	lea    rax,[rdx+rdx*4]
  41e737:	shl    rax,0x3
  41e73b:	add    rax,QWORD PTR [rsi+0x20]
  41e73f:	cmp    DWORD PTR [rax+0x18],0x3
  41e743:	jne    41e763 <__ctype_b_loc@plt+0x1c493>
  41e745:	jmp    41e756 <__ctype_b_loc@plt+0x1c486>
  41e747:	mov    rax,QWORD PTR [rsi+0x20]
  41e74b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e750:	cmp    DWORD PTR [rax+0x18],0x3
  41e754:	jne    41e763 <__ctype_b_loc@plt+0x1c493>
  41e756:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41e75b:	vucomisd xmm1,xmm0
  41e75f:	jne    41e763 <__ctype_b_loc@plt+0x1c493>
  41e761:	jnp    41e76f <__ctype_b_loc@plt+0x1c49f>
  41e763:	mov    rax,QWORD PTR [rax+0x20]
  41e767:	test   rax,rax
  41e76a:	jne    41e750 <__ctype_b_loc@plt+0x1c480>
  41e76c:	mov    rax,rbp
  41e76f:	mov    rdx,QWORD PTR [rax]
  41e772:	mov    QWORD PTR [rcx],rdx
  41e775:	mov    eax,DWORD PTR [rax+0x8]
  41e778:	mov    DWORD PTR [rcx+0x8],eax
  41e77b:	mov    rax,QWORD PTR [r12+0x10]
  41e780:	lea    rcx,[rax+0x10]
  41e784:	mov    QWORD PTR [r12+0x10],rcx
  41e789:	lea    rdx,[rip+0xca46]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  41e790:	cmp    rax,rbp
  41e793:	je     41e7b8 <__ctype_b_loc@plt+0x1c4e8>
  41e795:	movsxd rax,DWORD PTR [rax+0x8]
  41e799:	lea    ecx,[rax-0x3]
  41e79c:	cmp    ecx,0x2
  41e79f:	jb     41e7cb <__ctype_b_loc@plt+0x1c4fb>
  41e7a1:	lea    rdx,[rip+0xca2e]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  41e7a8:	cmp    eax,0xffffffff
  41e7ab:	je     41e7b8 <__ctype_b_loc@plt+0x1c4e8>
  41e7ad:	lea    rcx,[rip+0x1212c]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  41e7b4:	mov    rdx,QWORD PTR [rcx+rax*8]
  41e7b8:	xor    eax,eax
  41e7ba:	mov    rdi,r12
  41e7bd:	lea    rsi,[rip+0xcebc]        # 42b680 <__ctype_b_loc@plt+0x293b0>
  41e7c4:	mov    ecx,ebx
  41e7c6:	call   410070 <__ctype_b_loc@plt+0xdda0>
  41e7cb:	mov    r14,r12
  41e7ce:	mov    rdi,r13
  41e7d1:	call   41f5e0 <__ctype_b_loc@plt+0x1d310>
  41e7d6:	cmp    QWORD PTR [rsp+0x10],0x0
  41e7dc:	je     41e827 <__ctype_b_loc@plt+0x1c557>
  41e7de:	xor    r12d,r12d
  41e7e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e7eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41e7f0:	mov    rax,QWORD PTR [rsp+0x40]
  41e7f5:	cmp    rax,r15
  41e7f8:	jb     41e807 <__ctype_b_loc@plt+0x1c537>
  41e7fa:	mov    rdi,r13
  41e7fd:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  41e802:	mov    rax,QWORD PTR [rsp+0x40]
  41e807:	mov    rcx,QWORD PTR [rsp+0x18]
  41e80c:	movzx  ecx,BYTE PTR [rcx+r12*1]
  41e811:	lea    rdx,[rax+0x1]
  41e815:	mov    QWORD PTR [rsp+0x40],rdx
  41e81a:	mov    BYTE PTR [rax],cl
  41e81c:	add    r12,0x1
  41e820:	cmp    QWORD PTR [rsp+0x10],r12
  41e825:	jne    41e7f0 <__ctype_b_loc@plt+0x1c520>
  41e827:	add    rbx,0x1
  41e82b:	mov    rdx,QWORD PTR [rsp+0x8]
  41e830:	cmp    ebx,edx
  41e832:	mov    r12,r14
  41e835:	jne    41e6d0 <__ctype_b_loc@plt+0x1c400>
  41e83b:	mov    rax,QWORD PTR [rsp+0x20]
  41e840:	add    eax,0x1
  41e843:	mov    r13d,eax
  41e846:	lea    r14,[rip+0xc2cb]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41e84d:	cmp    r13d,edx
  41e850:	jne    41e951 <__ctype_b_loc@plt+0x1c681>
  41e856:	mov    rcx,QWORD PTR [r12+0x10]
  41e85b:	mov    rax,QWORD PTR [r12+0x18]
  41e860:	cmp    rax,rcx
  41e863:	cmovae rax,r14
  41e867:	mov    rsi,QWORD PTR [rax]
  41e86a:	lea    eax,[rdx-0x1]
  41e86d:	cmp    eax,DWORD PTR [rsi+0x38]
  41e870:	jae    41e87e <__ctype_b_loc@plt+0x1c5ae>
  41e872:	cdqe   
  41e874:	shl    rax,0x4
  41e878:	add    rax,QWORD PTR [rsi+0x18]
  41e87c:	jmp    41e8ef <__ctype_b_loc@plt+0x1c61f>
  41e87e:	vcvtsi2sd xmm0,xmm2,edx
  41e882:	test   edx,edx
  41e884:	je     41e8c4 <__ctype_b_loc@plt+0x1c5f4>
  41e886:	vmovq  rdx,xmm0
  41e88b:	mov    rax,rdx
  41e88e:	shr    rax,0x20
  41e892:	add    eax,edx
  41e894:	mov    dl,BYTE PTR [rsi+0xb]
  41e897:	mov    rdi,0xffffffffffffffff
  41e89e:	shlx   rdi,rdi,rdx
  41e8a3:	or     rdi,0x1
  41e8a7:	xor    rdi,0xfffffffffffffffe
  41e8ab:	xor    edx,edx
  41e8ad:	div    rdi
  41e8b0:	lea    rax,[rdx+rdx*4]
  41e8b4:	shl    rax,0x3
  41e8b8:	add    rax,QWORD PTR [rsi+0x20]
  41e8bc:	cmp    DWORD PTR [rax+0x18],0x3
  41e8c0:	jne    41e8e3 <__ctype_b_loc@plt+0x1c613>
  41e8c2:	jmp    41e8d6 <__ctype_b_loc@plt+0x1c606>
  41e8c4:	mov    rax,QWORD PTR [rsi+0x20]
  41e8c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e8d0:	cmp    DWORD PTR [rax+0x18],0x3
  41e8d4:	jne    41e8e3 <__ctype_b_loc@plt+0x1c613>
  41e8d6:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41e8db:	vucomisd xmm1,xmm0
  41e8df:	jne    41e8e3 <__ctype_b_loc@plt+0x1c613>
  41e8e1:	jnp    41e8ef <__ctype_b_loc@plt+0x1c61f>
  41e8e3:	mov    rax,QWORD PTR [rax+0x20]
  41e8e7:	test   rax,rax
  41e8ea:	jne    41e8d0 <__ctype_b_loc@plt+0x1c600>
  41e8ec:	mov    rax,r14
  41e8ef:	mov    rdx,QWORD PTR [rax]
  41e8f2:	mov    QWORD PTR [rcx],rdx
  41e8f5:	mov    eax,DWORD PTR [rax+0x8]
  41e8f8:	mov    DWORD PTR [rcx+0x8],eax
  41e8fb:	mov    rax,QWORD PTR [r12+0x10]
  41e900:	lea    rcx,[rax+0x10]
  41e904:	mov    QWORD PTR [r12+0x10],rcx
  41e909:	lea    rdx,[rip+0xc8c6]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  41e910:	cmp    rax,r14
  41e913:	je     41e931 <__ctype_b_loc@plt+0x1c661>
  41e915:	movsxd rax,DWORD PTR [rax+0x8]
  41e919:	lea    ecx,[rax-0x3]
  41e91c:	cmp    ecx,0x2
  41e91f:	jb     41e947 <__ctype_b_loc@plt+0x1c677>
  41e921:	cmp    eax,0xffffffff
  41e924:	je     41e931 <__ctype_b_loc@plt+0x1c661>
  41e926:	lea    rcx,[rip+0x11fb3]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  41e92d:	mov    rdx,QWORD PTR [rcx+rax*8]
  41e931:	lea    rsi,[rip+0xcd48]        # 42b680 <__ctype_b_loc@plt+0x293b0>
  41e938:	xor    eax,eax
  41e93a:	mov    rdi,r12
  41e93d:	mov    rcx,QWORD PTR [rsp+0x8]
  41e942:	call   410070 <__ctype_b_loc@plt+0xdda0>
  41e947:	lea    rdi,[rsp+0x40]
  41e94c:	call   41f5e0 <__ctype_b_loc@plt+0x1d310>
  41e951:	lea    rdi,[rsp+0x40]
  41e956:	call   41f4d0 <__ctype_b_loc@plt+0x1d200>
  41e95b:	mov    eax,0x1
  41e960:	add    rsp,0x2058
  41e967:	pop    rbx
  41e968:	pop    r12
  41e96a:	pop    r13
  41e96c:	pop    r14
  41e96e:	pop    r15
  41e970:	pop    rbp
  41e971:	ret    
  41e972:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e97c:	nop    DWORD PTR [rax+0x0]
  41e980:	push   rbp
  41e981:	push   r15
  41e983:	push   r14
  41e985:	push   r13
  41e987:	push   r12
  41e989:	push   rbx
  41e98a:	sub    rsp,0x98
  41e991:	mov    r13,rdi
  41e994:	mov    rbp,QWORD PTR [rdi+0x18]
  41e998:	lea    r12,[rip+0xc179]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41e99f:	lea    rcx,[rip+0xc830]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  41e9a6:	cmp    rbp,r12
  41e9a9:	je     41e9ce <__ctype_b_loc@plt+0x1c6fe>
  41e9ab:	mov    r14,QWORD PTR [r13+0x10]
  41e9af:	cmp    rbp,r14
  41e9b2:	jae    41e9ce <__ctype_b_loc@plt+0x1c6fe>
  41e9b4:	movsxd rax,DWORD PTR [rbp+0x8]
  41e9b8:	cmp    rax,0xffffffffffffffff
  41e9bc:	je     41e9ce <__ctype_b_loc@plt+0x1c6fe>
  41e9be:	cmp    eax,0x5
  41e9c1:	je     41e9fe <__ctype_b_loc@plt+0x1c72e>
  41e9c3:	lea    rcx,[rip+0x11f16]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  41e9ca:	mov    rcx,QWORD PTR [rcx+rax*8]
  41e9ce:	lea    rsi,[rip+0xc7ed]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  41e9d5:	lea    rdx,[rip+0xcc2e]        # 42b60a <__ctype_b_loc@plt+0x2933a>
  41e9dc:	xor    eax,eax
  41e9de:	mov    rdi,r13
  41e9e1:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  41e9e6:	mov    esi,0x1
  41e9eb:	mov    rdi,r13
  41e9ee:	mov    rdx,rax
  41e9f1:	call   410240 <__ctype_b_loc@plt+0xdf70>
  41e9f6:	mov    r14,QWORD PTR [r13+0x10]
  41e9fa:	mov    rbp,QWORD PTR [r13+0x18]
  41e9fe:	cmp    rbp,r14
  41ea01:	mov    rbx,r12
  41ea04:	cmovb  rbx,rbp
  41ea08:	mov    eax,DWORD PTR [rbx+0x8]
  41ea0b:	xor    r15d,r15d
  41ea0e:	add    eax,0xfffffffd
  41ea11:	cmp    eax,0x4
  41ea14:	ja     41ea8b <__ctype_b_loc@plt+0x1c7bb>
  41ea16:	lea    rcx,[rip+0xbe43]        # 42a860 <__ctype_b_loc@plt+0x28590>
  41ea1d:	movsxd rax,DWORD PTR [rcx+rax*4]
  41ea21:	add    rax,rcx
  41ea24:	jmp    rax
  41ea26:	vmovsd xmm0,QWORD PTR [rbx]
  41ea2a:	lea    rsi,[rip+0xc3f0]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  41ea31:	lea    rbp,[rsp+0x20]
  41ea36:	mov    al,0x1
  41ea38:	mov    rdi,rbp
  41ea3b:	call   402270 <sprintf@plt>
  41ea40:	mov    rdi,rbp
  41ea43:	call   4020e0 <strlen@plt>
  41ea48:	mov    rdi,r13
  41ea4b:	mov    rsi,rbp
  41ea4e:	mov    rdx,rax
  41ea51:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  41ea56:	mov    QWORD PTR [rbx],rax
  41ea59:	mov    DWORD PTR [rbx+0x8],0x4
  41ea60:	mov    r15,QWORD PTR [rax+0x10]
  41ea64:	mov    r14,QWORD PTR [r13+0x10]
  41ea68:	mov    rbp,QWORD PTR [r13+0x18]
  41ea6c:	jmp    41ea8b <__ctype_b_loc@plt+0x1c7bb>
  41ea6e:	mov    rax,QWORD PTR [rbx]
  41ea71:	mov    r15,QWORD PTR [rax+0x10]
  41ea75:	jmp    41ea8b <__ctype_b_loc@plt+0x1c7bb>
  41ea77:	mov    rdi,QWORD PTR [rbx]
  41ea7a:	call   4095e0 <__ctype_b_loc@plt+0x7310>
  41ea7f:	movsxd r15,eax
  41ea82:	jmp    41ea8b <__ctype_b_loc@plt+0x1c7bb>
  41ea84:	mov    rax,QWORD PTR [rbx]
  41ea87:	mov    r15,QWORD PTR [rax+0x20]
  41ea8b:	mov    rax,r14
  41ea8e:	sub    rax,rbp
  41ea91:	lea    ebx,[r15+0x1]
  41ea95:	shr    rax,0x4
  41ea99:	cmp    eax,0x2
  41ea9c:	je     41ee4b <__ctype_b_loc@plt+0x1cb7b>
  41eaa2:	cmp    eax,0x3
  41eaa5:	jne    41eb51 <__ctype_b_loc@plt+0x1c881>
  41eaab:	add    rbp,0x10
  41eaaf:	cmp    rbp,r14
  41eab2:	cmovae rbp,r12
  41eab6:	mov    eax,DWORD PTR [rbp+0x8]
  41eab9:	cmp    eax,0x3
  41eabc:	je     41eba1 <__ctype_b_loc@plt+0x1c8d1>
  41eac2:	cmp    eax,0x4
  41eac5:	jne    41ebb0 <__ctype_b_loc@plt+0x1c8e0>
  41eacb:	mov    DWORD PTR [rsp+0x4],ebx
  41eacf:	mov    rbp,QWORD PTR [rbp+0x0]
  41ead3:	add    rbp,0x18
  41ead7:	lea    rsi,[rsp+0x20]
  41eadc:	mov    rdi,rbp
  41eadf:	call   4020b0 <strtod@plt>
  41eae4:	mov    rbx,QWORD PTR [rsp+0x20]
  41eae9:	cmp    rbx,rbp
  41eaec:	je     41eb4b <__ctype_b_loc@plt+0x1c87b>
  41eaee:	mov    r14b,BYTE PTR [rbx]
  41eaf1:	mov    eax,r14d
  41eaf4:	or     al,0x20
  41eaf6:	cmp    al,0x78
  41eaf8:	jne    41eb2d <__ctype_b_loc@plt+0x1c85d>
  41eafa:	lea    rsi,[rsp+0x20]
  41eaff:	mov    edx,0x10
  41eb04:	mov    rdi,rbp
  41eb07:	call   402250 <strtoul@plt>
  41eb0c:	vmovq  xmm0,rax
  41eb11:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0xc157]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  41eb19:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0xc15f]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  41eb21:	vhaddpd xmm0,xmm0,xmm0
  41eb25:	mov    rbx,QWORD PTR [rsp+0x20]
  41eb2a:	mov    r14b,BYTE PTR [rbx]
  41eb2d:	test   r14b,r14b
  41eb30:	je     41eb67 <__ctype_b_loc@plt+0x1c897>
  41eb32:	vmovapd XMMWORD PTR [rsp+0x10],xmm0
  41eb38:	call   4022d0 <__ctype_b_loc@plt>
  41eb3d:	mov    rax,QWORD PTR [rax]
  41eb40:	movzx  ecx,r14b
  41eb44:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41eb49:	jne    41eb6d <__ctype_b_loc@plt+0x1c89d>
  41eb4b:	mov    ebx,DWORD PTR [rsp+0x4]
  41eb4f:	jmp    41ebb0 <__ctype_b_loc@plt+0x1c8e0>
  41eb51:	lea    rsi,[rip+0xcb5d]        # 42b6b5 <__ctype_b_loc@plt+0x293e5>
  41eb58:	xor    eax,eax
  41eb5a:	mov    rdi,r13
  41eb5d:	call   410070 <__ctype_b_loc@plt+0xdda0>
  41eb62:	jmp    41ee5a <__ctype_b_loc@plt+0x1cb8a>
  41eb67:	mov    ebx,DWORD PTR [rsp+0x4]
  41eb6b:	jmp    41eb96 <__ctype_b_loc@plt+0x1c8c6>
  41eb6d:	add    rbx,0x1
  41eb71:	vmovapd xmm0,XMMWORD PTR [rsp+0x10]
  41eb77:	nop    WORD PTR [rax+rax*1+0x0]
  41eb80:	movzx  ecx,BYTE PTR [rbx]
  41eb83:	add    rbx,0x1
  41eb87:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41eb8c:	jne    41eb80 <__ctype_b_loc@plt+0x1c8b0>
  41eb8e:	test   cl,cl
  41eb90:	mov    ebx,DWORD PTR [rsp+0x4]
  41eb94:	jne    41ebb0 <__ctype_b_loc@plt+0x1c8e0>
  41eb96:	lea    rbp,[rsp+0x8]
  41eb9b:	vmovsd QWORD PTR [rsp+0x8],xmm0
  41eba1:	vcvttsd2si r14,QWORD PTR [rbp+0x0]
  41eba7:	test   r14,r14
  41ebaa:	jne    41ed67 <__ctype_b_loc@plt+0x1ca97>
  41ebb0:	mov    rax,QWORD PTR [r13+0x18]
  41ebb4:	add    rax,0x10
  41ebb8:	cmp    rax,QWORD PTR [r13+0x10]
  41ebbc:	lea    rbp,[rip+0xbf55]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41ebc3:	cmovae rax,rbp
  41ebc7:	mov    ecx,DWORD PTR [rax+0x8]
  41ebca:	cmp    ecx,0x3
  41ebcd:	je     41ed64 <__ctype_b_loc@plt+0x1ca94>
  41ebd3:	cmp    ecx,0x4
  41ebd6:	jne    41ec8a <__ctype_b_loc@plt+0x1c9ba>
  41ebdc:	mov    DWORD PTR [rsp+0x4],ebx
  41ebe0:	mov    r14,QWORD PTR [rax]
  41ebe3:	add    r14,0x18
  41ebe7:	lea    rsi,[rsp+0x20]
  41ebec:	mov    rdi,r14
  41ebef:	call   4020b0 <strtod@plt>
  41ebf4:	mov    rbx,QWORD PTR [rsp+0x20]
  41ebf9:	cmp    rbx,r14
  41ebfc:	je     41ec48 <__ctype_b_loc@plt+0x1c978>
  41ebfe:	mov    bpl,BYTE PTR [rbx]
  41ec01:	mov    eax,ebp
  41ec03:	or     al,0x20
  41ec05:	cmp    al,0x78
  41ec07:	jne    41ec23 <__ctype_b_loc@plt+0x1c953>
  41ec09:	lea    rsi,[rsp+0x20]
  41ec0e:	mov    edx,0x10
  41ec13:	mov    rdi,r14
  41ec16:	call   402250 <strtoul@plt>
  41ec1b:	mov    rbx,QWORD PTR [rsp+0x20]
  41ec20:	mov    bpl,BYTE PTR [rbx]
  41ec23:	test   bpl,bpl
  41ec26:	je     41ec4e <__ctype_b_loc@plt+0x1c97e>
  41ec28:	call   4022d0 <__ctype_b_loc@plt>
  41ec2d:	mov    rax,QWORD PTR [rax]
  41ec30:	movzx  ecx,bpl
  41ec34:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41ec39:	jne    41ec63 <__ctype_b_loc@plt+0x1c993>
  41ec3b:	mov    ebx,DWORD PTR [rsp+0x4]
  41ec3f:	lea    rbp,[rip+0xbed2]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41ec46:	jmp    41ec8a <__ctype_b_loc@plt+0x1c9ba>
  41ec48:	mov    ebx,DWORD PTR [rsp+0x4]
  41ec4c:	jmp    41ec8a <__ctype_b_loc@plt+0x1c9ba>
  41ec4e:	xor    r14d,r14d
  41ec51:	mov    ebx,DWORD PTR [rsp+0x4]
  41ec55:	cmp    r15d,r14d
  41ec58:	jge    41ed70 <__ctype_b_loc@plt+0x1caa0>
  41ec5e:	jmp    41ee48 <__ctype_b_loc@plt+0x1cb78>
  41ec63:	add    rbx,0x1
  41ec67:	lea    rbp,[rip+0xbeaa]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41ec6e:	xchg   ax,ax
  41ec70:	movzx  ecx,BYTE PTR [rbx]
  41ec73:	add    rbx,0x1
  41ec77:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41ec7c:	jne    41ec70 <__ctype_b_loc@plt+0x1c9a0>
  41ec7e:	test   cl,cl
  41ec80:	mov    ebx,DWORD PTR [rsp+0x4]
  41ec84:	je     41ed64 <__ctype_b_loc@plt+0x1ca94>
  41ec8a:	mov    rax,QWORD PTR [r13+0x18]
  41ec8e:	lea    rdx,[rax+0x10]
  41ec92:	lea    rcx,[rip+0xc53d]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  41ec99:	cmp    rdx,QWORD PTR [r13+0x10]
  41ec9d:	jae    41ecb9 <__ctype_b_loc@plt+0x1c9e9>
  41ec9f:	cmp    rdx,rbp
  41eca2:	je     41ecb9 <__ctype_b_loc@plt+0x1c9e9>
  41eca4:	movsxd rax,DWORD PTR [rax+0x18]
  41eca8:	cmp    rax,0xffffffffffffffff
  41ecac:	je     41ecb9 <__ctype_b_loc@plt+0x1c9e9>
  41ecae:	lea    rcx,[rip+0x11c2b]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  41ecb5:	mov    rcx,QWORD PTR [rcx+rax*8]
  41ecb9:	lea    rsi,[rip+0xc502]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  41ecc0:	lea    rdx,[rip+0xc1da]        # 42aea1 <__ctype_b_loc@plt+0x28bd1>
  41ecc7:	xor    eax,eax
  41ecc9:	mov    rdi,r13
  41eccc:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  41ecd1:	mov    r14,rax
  41ecd4:	mov    rax,QWORD PTR [r13+0x28]
  41ecd8:	sub    rax,QWORD PTR [r13+0x50]
  41ecdc:	jbe    41ed4b <__ctype_b_loc@plt+0x1ca7b>
  41ecde:	shr    rax,0x3
  41ece2:	imul   eax,eax,0xcccccccd
  41ece8:	mov    DWORD PTR [rsp+0x94],eax
  41ecef:	lea    rsi,[rip+0xc161]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  41ecf6:	lea    rdx,[rsp+0x20]
  41ecfb:	mov    rdi,r13
  41ecfe:	call   410310 <__ctype_b_loc@plt+0xe040>
  41ed03:	mov    rdi,QWORD PTR [rsp+0x30]
  41ed08:	lea    rsi,[rip+0xc441]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  41ed0f:	call   402180 <strcmp@plt>
  41ed14:	cmp    eax,0x1
  41ed17:	mov    edx,0x2
  41ed1c:	sbb    edx,0x0
  41ed1f:	mov    rcx,QWORD PTR [rsp+0x28]
  41ed24:	test   rcx,rcx
  41ed27:	jne    41ed35 <__ctype_b_loc@plt+0x1ca65>
  41ed29:	lea    rcx,[rip+0xc445]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  41ed30:	mov    QWORD PTR [rsp+0x28],rcx
  41ed35:	lea    rsi,[rip+0xc43b]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  41ed3c:	xor    eax,eax
  41ed3e:	mov    rdi,r13
  41ed41:	mov    r8,r14
  41ed44:	call   410070 <__ctype_b_loc@plt+0xdda0>
  41ed49:	jmp    41ed64 <__ctype_b_loc@plt+0x1ca94>
  41ed4b:	lea    rsi,[rip+0xc3e8]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  41ed52:	mov    edx,0x2
  41ed57:	xor    eax,eax
  41ed59:	mov    rdi,r13
  41ed5c:	mov    rcx,r14
  41ed5f:	call   410070 <__ctype_b_loc@plt+0xdda0>
  41ed64:	xor    r14d,r14d
  41ed67:	cmp    r15d,r14d
  41ed6a:	jl     41ee48 <__ctype_b_loc@plt+0x1cb78>
  41ed70:	cmp    ebx,r14d
  41ed73:	cmovl  ebx,r14d
  41ed77:	movsxd rbp,ebx
  41ed7a:	movsxd r15,r14d
  41ed7d:	nop    DWORD PTR [rax]
  41ed80:	mov    rsi,QWORD PTR [r13+0x10]
  41ed84:	mov    rax,QWORD PTR [r13+0x18]
  41ed88:	cmp    rax,rsi
  41ed8b:	cmovae rax,r12
  41ed8f:	mov    rdi,QWORD PTR [rax]
  41ed92:	mov    ecx,ebp
  41ed94:	lea    rbp,[rbp-0x1]
  41ed98:	lea    eax,[rcx-0x2]
  41ed9b:	cmp    eax,DWORD PTR [rdi+0x38]
  41ed9e:	jae    41edb0 <__ctype_b_loc@plt+0x1cae0>
  41eda0:	cdqe   
  41eda2:	shl    rax,0x4
  41eda6:	add    rax,QWORD PTR [rdi+0x18]
  41edaa:	jmp    41ee1f <__ctype_b_loc@plt+0x1cb4f>
  41edac:	nop    DWORD PTR [rax+0x0]
  41edb0:	vcvtsi2sd xmm0,xmm2,ebp
  41edb4:	test   ebp,ebp
  41edb6:	je     41edf7 <__ctype_b_loc@plt+0x1cb27>
  41edb8:	vmovq  rdx,xmm0
  41edbd:	mov    rax,rdx
  41edc0:	shr    rax,0x20
  41edc4:	add    eax,edx
  41edc6:	movzx  edx,BYTE PTR [rdi+0xb]
  41edca:	mov    rbx,0xffffffffffffffff
  41edd1:	shlx   rbx,rbx,rdx
  41edd6:	or     rbx,0x1
  41edda:	xor    rbx,0xfffffffffffffffe
  41edde:	xor    edx,edx
  41ede0:	div    rbx
  41ede3:	lea    rax,[rdx+rdx*4]
  41ede7:	shl    rax,0x3
  41edeb:	add    rax,QWORD PTR [rdi+0x20]
  41edef:	cmp    DWORD PTR [rax+0x18],0x3
  41edf3:	jne    41ee13 <__ctype_b_loc@plt+0x1cb43>
  41edf5:	jmp    41ee06 <__ctype_b_loc@plt+0x1cb36>
  41edf7:	mov    rax,QWORD PTR [rdi+0x20]
  41edfb:	nop    DWORD PTR [rax+rax*1+0x0]
  41ee00:	cmp    DWORD PTR [rax+0x18],0x3
  41ee04:	jne    41ee13 <__ctype_b_loc@plt+0x1cb43>
  41ee06:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41ee0b:	vucomisd xmm1,xmm0
  41ee0f:	jne    41ee13 <__ctype_b_loc@plt+0x1cb43>
  41ee11:	jnp    41ee1f <__ctype_b_loc@plt+0x1cb4f>
  41ee13:	mov    rax,QWORD PTR [rax+0x20]
  41ee17:	test   rax,rax
  41ee1a:	jne    41ee00 <__ctype_b_loc@plt+0x1cb30>
  41ee1c:	mov    rax,r12
  41ee1f:	mov    rdx,QWORD PTR [rax]
  41ee22:	mov    QWORD PTR [rsi],rdx
  41ee25:	mov    eax,DWORD PTR [rax+0x8]
  41ee28:	mov    DWORD PTR [rsi+0x8],eax
  41ee2b:	add    QWORD PTR [r13+0x10],0x10
  41ee30:	mov    esi,0x1
  41ee35:	mov    rdi,r13
  41ee38:	mov    edx,ecx
  41ee3a:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  41ee3f:	cmp    rbp,r15
  41ee42:	jg     41ed80 <__ctype_b_loc@plt+0x1cab0>
  41ee48:	mov    ebx,r14d
  41ee4b:	mov    esi,0x1
  41ee50:	mov    rdi,r13
  41ee53:	mov    edx,ebx
  41ee55:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  41ee5a:	xor    eax,eax
  41ee5c:	add    rsp,0x98
  41ee63:	pop    rbx
  41ee64:	pop    r12
  41ee66:	pop    r13
  41ee68:	pop    r14
  41ee6a:	pop    r15
  41ee6c:	pop    rbp
  41ee6d:	ret    
  41ee6e:	xchg   ax,ax
  41ee70:	push   rbp
  41ee71:	push   r15
  41ee73:	push   r14
  41ee75:	push   r13
  41ee77:	push   r12
  41ee79:	push   rbx
  41ee7a:	sub    rsp,0x28
  41ee7e:	mov    r13,rdi
  41ee81:	mov    rbp,QWORD PTR [rdi+0x18]
  41ee85:	lea    r12,[rip+0xbc8c]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41ee8c:	lea    rcx,[rip+0xc343]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  41ee93:	cmp    rbp,r12
  41ee96:	je     41eebb <__ctype_b_loc@plt+0x1cbeb>
  41ee98:	mov    rax,QWORD PTR [r13+0x10]
  41ee9c:	cmp    rbp,rax
  41ee9f:	jae    41eebb <__ctype_b_loc@plt+0x1cbeb>
  41eea1:	movsxd rdx,DWORD PTR [rbp+0x8]
  41eea5:	cmp    rdx,0xffffffffffffffff
  41eea9:	je     41eebb <__ctype_b_loc@plt+0x1cbeb>
  41eeab:	cmp    edx,0x5
  41eeae:	je     41eeeb <__ctype_b_loc@plt+0x1cc1b>
  41eeb0:	lea    rax,[rip+0x11a29]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  41eeb7:	mov    rcx,QWORD PTR [rax+rdx*8]
  41eebb:	lea    rsi,[rip+0xc300]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  41eec2:	lea    rdx,[rip+0xc741]        # 42b60a <__ctype_b_loc@plt+0x2933a>
  41eec9:	xor    eax,eax
  41eecb:	mov    rdi,r13
  41eece:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  41eed3:	mov    esi,0x1
  41eed8:	mov    rdi,r13
  41eedb:	mov    rdx,rax
  41eede:	call   410240 <__ctype_b_loc@plt+0xdf70>
  41eee3:	mov    rax,QWORD PTR [r13+0x10]
  41eee7:	mov    rbp,QWORD PTR [r13+0x18]
  41eeeb:	cmp    rbp,rax
  41eeee:	cmovae rbp,r12
  41eef2:	mov    eax,DWORD PTR [rbp+0x8]
  41eef5:	xor    r15d,r15d
  41eef8:	xor    r14d,r14d
  41eefb:	add    eax,0xfffffffd
  41eefe:	cmp    eax,0x4
  41ef01:	ja     41ef6f <__ctype_b_loc@plt+0x1cc9f>
  41ef03:	lea    rcx,[rip+0xb96a]        # 42a874 <__ctype_b_loc@plt+0x285a4>
  41ef0a:	movsxd rax,DWORD PTR [rcx+rax*4]
  41ef0e:	add    rax,rcx
  41ef11:	jmp    rax
  41ef13:	vmovq  xmm0,QWORD PTR [rbp+0x0]
  41ef18:	lea    rsi,[rip+0xbf02]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  41ef1f:	mov    r14,rsp
  41ef22:	mov    al,0x1
  41ef24:	mov    rdi,r14
  41ef27:	call   402270 <sprintf@plt>
  41ef2c:	mov    rdi,r14
  41ef2f:	call   4020e0 <strlen@plt>
  41ef34:	mov    rdi,r13
  41ef37:	mov    rsi,r14
  41ef3a:	mov    rdx,rax
  41ef3d:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  41ef42:	mov    QWORD PTR [rbp+0x0],rax
  41ef46:	mov    DWORD PTR [rbp+0x8],0x4
  41ef4d:	jmp    41ef53 <__ctype_b_loc@plt+0x1cc83>
  41ef4f:	mov    rax,QWORD PTR [rbp+0x0]
  41ef53:	mov    r14,QWORD PTR [rax+0x10]
  41ef57:	jmp    41ef6f <__ctype_b_loc@plt+0x1cc9f>
  41ef59:	mov    rdi,QWORD PTR [rbp+0x0]
  41ef5d:	call   4095e0 <__ctype_b_loc@plt+0x7310>
  41ef62:	movsxd r14,eax
  41ef65:	jmp    41ef6f <__ctype_b_loc@plt+0x1cc9f>
  41ef67:	mov    rax,QWORD PTR [rbp+0x0]
  41ef6b:	mov    r14,QWORD PTR [rax+0x20]
  41ef6f:	movsxd rdx,r14d
  41ef72:	mov    esi,0x2
  41ef77:	mov    rdi,r13
  41ef7a:	call   410970 <__ctype_b_loc@plt+0xe6a0>
  41ef7f:	mov    rcx,rax
  41ef82:	test   ecx,ecx
  41ef84:	jle    41f151 <__ctype_b_loc@plt+0x1ce81>
  41ef8a:	cmp    ecx,r14d
  41ef8d:	jg     41f151 <__ctype_b_loc@plt+0x1ce81>
  41ef93:	mov    rsi,QWORD PTR [r13+0x10]
  41ef97:	mov    rax,QWORD PTR [r13+0x18]
  41ef9b:	cmp    rax,rsi
  41ef9e:	cmovae rax,r12
  41efa2:	mov    rdi,QWORD PTR [rax]
  41efa5:	lea    eax,[rcx-0x1]
  41efa8:	cmp    eax,DWORD PTR [rdi+0x38]
  41efab:	jae    41efba <__ctype_b_loc@plt+0x1ccea>
  41efad:	movsxd r12,eax
  41efb0:	shl    r12,0x4
  41efb4:	add    r12,QWORD PTR [rdi+0x18]
  41efb8:	jmp    41f021 <__ctype_b_loc@plt+0x1cd51>
  41efba:	vcvtsi2sd xmm0,xmm1,ecx
  41efbe:	vmovq  rdx,xmm0
  41efc3:	mov    rax,rdx
  41efc6:	shr    rax,0x20
  41efca:	add    eax,edx
  41efcc:	mov    dl,BYTE PTR [rdi+0xb]
  41efcf:	mov    rbp,0xffffffffffffffff
  41efd6:	shlx   rbp,rbp,rdx
  41efdb:	or     rbp,0x1
  41efdf:	xor    rbp,0xfffffffffffffffe
  41efe3:	xor    edx,edx
  41efe5:	div    rbp
  41efe8:	lea    rax,[rdx+rdx*4]
  41efec:	shl    rax,0x3
  41eff0:	add    rax,QWORD PTR [rdi+0x20]
  41eff4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41effe:	xchg   ax,ax
  41f000:	cmp    DWORD PTR [rax+0x18],0x3
  41f004:	jne    41f013 <__ctype_b_loc@plt+0x1cd43>
  41f006:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41f00b:	vucomisd xmm1,xmm0
  41f00f:	jne    41f013 <__ctype_b_loc@plt+0x1cd43>
  41f011:	jnp    41f01e <__ctype_b_loc@plt+0x1cd4e>
  41f013:	mov    rax,QWORD PTR [rax+0x20]
  41f017:	test   rax,rax
  41f01a:	jne    41f000 <__ctype_b_loc@plt+0x1cd30>
  41f01c:	jmp    41f021 <__ctype_b_loc@plt+0x1cd51>
  41f01e:	mov    r12,rax
  41f021:	mov    rax,QWORD PTR [r12]
  41f025:	mov    QWORD PTR [rsi],rax
  41f028:	mov    eax,DWORD PTR [r12+0x8]
  41f02d:	mov    DWORD PTR [rsi+0x8],eax
  41f030:	mov    rsi,QWORD PTR [r13+0x10]
  41f034:	add    rsi,0x10
  41f038:	mov    QWORD PTR [r13+0x10],rsi
  41f03c:	cmp    ecx,r14d
  41f03f:	jge    41f12c <__ctype_b_loc@plt+0x1ce5c>
  41f045:	movsxd rbp,ecx
  41f048:	lea    r15,[rip+0xbac9]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41f04f:	mov    r12,0xffffffffffffffff
  41f056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f060:	mov    rcx,rbp
  41f063:	lea    rbp,[rbp+0x1]
  41f067:	mov    rax,QWORD PTR [r13+0x18]
  41f06b:	cmp    rax,rsi
  41f06e:	cmovae rax,r15
  41f072:	mov    rdi,QWORD PTR [rax]
  41f075:	cmp    DWORD PTR [rdi+0x38],ecx
  41f078:	jbe    41f090 <__ctype_b_loc@plt+0x1cdc0>
  41f07a:	mov    rax,rcx
  41f07d:	shl    rax,0x4
  41f081:	add    rax,QWORD PTR [rdi+0x18]
  41f085:	jmp    41f0ff <__ctype_b_loc@plt+0x1ce2f>
  41f087:	nop    WORD PTR [rax+rax*1+0x0]
  41f090:	vcvtsi2sd xmm0,xmm2,ebp
  41f094:	test   ebp,ebp
  41f096:	je     41f0d0 <__ctype_b_loc@plt+0x1ce00>
  41f098:	vmovq  rdx,xmm0
  41f09d:	mov    rax,rdx
  41f0a0:	shr    rax,0x20
  41f0a4:	add    eax,edx
  41f0a6:	movzx  edx,BYTE PTR [rdi+0xb]
  41f0aa:	shlx   rbx,r12,rdx
  41f0af:	or     rbx,0x1
  41f0b3:	xor    rbx,0xfffffffffffffffe
  41f0b7:	xor    edx,edx
  41f0b9:	div    rbx
  41f0bc:	lea    rax,[rdx+rdx*4]
  41f0c0:	shl    rax,0x3
  41f0c4:	add    rax,QWORD PTR [rdi+0x20]
  41f0c8:	cmp    DWORD PTR [rax+0x18],0x3
  41f0cc:	jne    41f0f3 <__ctype_b_loc@plt+0x1ce23>
  41f0ce:	jmp    41f0e6 <__ctype_b_loc@plt+0x1ce16>
  41f0d0:	mov    rax,QWORD PTR [rdi+0x20]
  41f0d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f0de:	xchg   ax,ax
  41f0e0:	cmp    DWORD PTR [rax+0x18],0x3
  41f0e4:	jne    41f0f3 <__ctype_b_loc@plt+0x1ce23>
  41f0e6:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41f0eb:	vucomisd xmm1,xmm0
  41f0ef:	jne    41f0f3 <__ctype_b_loc@plt+0x1ce23>
  41f0f1:	jnp    41f0ff <__ctype_b_loc@plt+0x1ce2f>
  41f0f3:	mov    rax,QWORD PTR [rax+0x20]
  41f0f7:	test   rax,rax
  41f0fa:	jne    41f0e0 <__ctype_b_loc@plt+0x1ce10>
  41f0fc:	mov    rax,r15
  41f0ff:	mov    rdx,QWORD PTR [rax]
  41f102:	mov    QWORD PTR [rsi],rdx
  41f105:	mov    eax,DWORD PTR [rax+0x8]
  41f108:	mov    DWORD PTR [rsi+0x8],eax
  41f10b:	add    QWORD PTR [r13+0x10],0x10
  41f110:	mov    esi,0x1
  41f115:	mov    rdi,r13
  41f118:	mov    edx,ecx
  41f11a:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  41f11f:	mov    rsi,QWORD PTR [r13+0x10]
  41f123:	cmp    ebp,r14d
  41f126:	jne    41f060 <__ctype_b_loc@plt+0x1cd90>
  41f12c:	mov    DWORD PTR [rsi+0x8],0x0
  41f133:	add    rsi,0x10
  41f137:	mov    QWORD PTR [r13+0x10],rsi
  41f13b:	mov    r15d,0x1
  41f141:	mov    esi,0x1
  41f146:	mov    rdi,r13
  41f149:	mov    edx,r14d
  41f14c:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  41f151:	mov    eax,r15d
  41f154:	add    rsp,0x28
  41f158:	pop    rbx
  41f159:	pop    r12
  41f15b:	pop    r13
  41f15d:	pop    r14
  41f15f:	pop    r15
  41f161:	pop    rbp
  41f162:	ret    
  41f163:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f16d:	nop    DWORD PTR [rax]
  41f170:	push   rbp
  41f171:	push   r15
  41f173:	push   r14
  41f175:	push   r13
  41f177:	push   r12
  41f179:	push   rbx
  41f17a:	sub    rsp,0x78
  41f17e:	mov    r12,rdi
  41f181:	mov    rbx,QWORD PTR [rdi+0x18]
  41f185:	lea    r15,[rip+0xb98c]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41f18c:	lea    rcx,[rip+0xc043]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  41f193:	cmp    rbx,r15
  41f196:	je     41f1bc <__ctype_b_loc@plt+0x1ceec>
  41f198:	mov    r13,QWORD PTR [r12+0x10]
  41f19d:	cmp    rbx,r13
  41f1a0:	jae    41f1bc <__ctype_b_loc@plt+0x1ceec>
  41f1a2:	movsxd rax,DWORD PTR [rbx+0x8]
  41f1a6:	cmp    rax,0xffffffffffffffff
  41f1aa:	je     41f1bc <__ctype_b_loc@plt+0x1ceec>
  41f1ac:	cmp    eax,0x5
  41f1af:	je     41f1ee <__ctype_b_loc@plt+0x1cf1e>
  41f1b1:	lea    rcx,[rip+0x11728]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  41f1b8:	mov    rcx,QWORD PTR [rcx+rax*8]
  41f1bc:	lea    rsi,[rip+0xbfff]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  41f1c3:	lea    rdx,[rip+0xc440]        # 42b60a <__ctype_b_loc@plt+0x2933a>
  41f1ca:	xor    eax,eax
  41f1cc:	mov    rdi,r12
  41f1cf:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  41f1d4:	mov    esi,0x1
  41f1d9:	mov    rdi,r12
  41f1dc:	mov    rdx,rax
  41f1df:	call   410240 <__ctype_b_loc@plt+0xdf70>
  41f1e4:	mov    r13,QWORD PTR [r12+0x10]
  41f1e9:	mov    rbx,QWORD PTR [r12+0x18]
  41f1ee:	cmp    rbx,r13
  41f1f1:	mov    rbp,r15
  41f1f4:	cmovb  rbp,rbx
  41f1f8:	mov    eax,DWORD PTR [rbp+0x8]
  41f1fb:	xor    r14d,r14d
  41f1fe:	add    eax,0xfffffffd
  41f201:	cmp    eax,0x4
  41f204:	ja     41f280 <__ctype_b_loc@plt+0x1cfb0>
  41f206:	lea    rcx,[rip+0xb67b]        # 42a888 <__ctype_b_loc@plt+0x285b8>
  41f20d:	movsxd rax,DWORD PTR [rcx+rax*4]
  41f211:	add    rax,rcx
  41f214:	jmp    rax
  41f216:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  41f21b:	lea    rsi,[rip+0xbbff]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  41f222:	mov    r14,rsp
  41f225:	mov    al,0x1
  41f227:	mov    rdi,r14
  41f22a:	call   402270 <sprintf@plt>
  41f22f:	mov    rdi,r14
  41f232:	call   4020e0 <strlen@plt>
  41f237:	mov    rdi,r12
  41f23a:	mov    rsi,r14
  41f23d:	mov    rdx,rax
  41f240:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  41f245:	mov    QWORD PTR [rbp+0x0],rax
  41f249:	mov    DWORD PTR [rbp+0x8],0x4
  41f250:	mov    r14,QWORD PTR [rax+0x10]
  41f254:	mov    r13,QWORD PTR [r12+0x10]
  41f259:	mov    rbx,QWORD PTR [r12+0x18]
  41f25e:	jmp    41f280 <__ctype_b_loc@plt+0x1cfb0>
  41f260:	mov    rax,QWORD PTR [rbp+0x0]
  41f264:	mov    r14,QWORD PTR [rax+0x10]
  41f268:	jmp    41f280 <__ctype_b_loc@plt+0x1cfb0>
  41f26a:	mov    rdi,QWORD PTR [rbp+0x0]
  41f26e:	call   4095e0 <__ctype_b_loc@plt+0x7310>
  41f273:	movsxd r14,eax
  41f276:	jmp    41f280 <__ctype_b_loc@plt+0x1cfb0>
  41f278:	mov    rax,QWORD PTR [rbp+0x0]
  41f27c:	mov    r14,QWORD PTR [rax+0x20]
  41f280:	mov    rax,r13
  41f283:	sub    rax,rbx
  41f286:	cmp    rax,0x1f180
  41f28c:	jle    41f2ad <__ctype_b_loc@plt+0x1cfdd>
  41f28e:	lea    rsi,[rip+0xc446]        # 42b6db <__ctype_b_loc@plt+0x2940b>
  41f295:	lea    rdx,[rip+0xbdff]        # 42b09b <__ctype_b_loc@plt+0x28dcb>
  41f29c:	xor    eax,eax
  41f29e:	mov    rdi,r12
  41f2a1:	call   410070 <__ctype_b_loc@plt+0xdda0>
  41f2a6:	mov    rax,QWORD PTR [r12+0x10]
  41f2ab:	jmp    41f2f1 <__ctype_b_loc@plt+0x1d021>
  41f2ad:	mov    rax,QWORD PTR [r12+0x38]
  41f2b2:	sub    rax,r13
  41f2b5:	cmp    rax,0x280
  41f2bb:	jg     41f2d6 <__ctype_b_loc@plt+0x1d006>
  41f2bd:	mov    esi,DWORD PTR [r12+0x58]
  41f2c2:	cmp    esi,0x28
  41f2c5:	jge    41f2cc <__ctype_b_loc@plt+0x1cffc>
  41f2c7:	add    esi,0x28
  41f2ca:	jmp    41f2ce <__ctype_b_loc@plt+0x1cffe>
  41f2cc:	add    esi,esi
  41f2ce:	mov    rdi,r12
  41f2d1:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  41f2d6:	mov    rax,QWORD PTR [r12+0x10]
  41f2db:	mov    rcx,QWORD PTR [r12+0x28]
  41f2e0:	lea    rdx,[rax+0x280]
  41f2e7:	cmp    QWORD PTR [rcx+0x10],rdx
  41f2eb:	jae    41f2f1 <__ctype_b_loc@plt+0x1d021>
  41f2ed:	mov    QWORD PTR [rcx+0x10],rdx
  41f2f1:	mov    rsi,QWORD PTR [r12+0x18]
  41f2f6:	lea    rcx,[rsi+0x10]
  41f2fa:	cmp    rcx,rax
  41f2fd:	jae    41f3df <__ctype_b_loc@plt+0x1d10f>
  41f303:	cmp    rcx,r15
  41f306:	je     41f3df <__ctype_b_loc@plt+0x1d10f>
  41f30c:	movsxd rcx,DWORD PTR [rsi+0x18]
  41f310:	test   rcx,rcx
  41f313:	jle    41f3df <__ctype_b_loc@plt+0x1d10f>
  41f319:	cmp    ecx,0x6
  41f31c:	je     41f3df <__ctype_b_loc@plt+0x1d10f>
  41f322:	lea    rax,[rip+0x115b7]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  41f329:	mov    rcx,QWORD PTR [rax+rcx*8]
  41f32d:	lea    rsi,[rip+0xbe8e]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  41f334:	lea    rdx,[rip+0xc028]        # 42b363 <__ctype_b_loc@plt+0x29093>
  41f33b:	xor    eax,eax
  41f33d:	mov    rdi,r12
  41f340:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  41f345:	mov    r15,rax
  41f348:	mov    rax,QWORD PTR [r12+0x28]
  41f34d:	sub    rax,QWORD PTR [r12+0x50]
  41f352:	jbe    41f3bc <__ctype_b_loc@plt+0x1d0ec>
  41f354:	shr    rax,0x3
  41f358:	imul   eax,eax,0xcccccccd
  41f35e:	mov    DWORD PTR [rsp+0x74],eax
  41f362:	lea    rsi,[rip+0xbaee]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  41f369:	mov    rdx,rsp
  41f36c:	mov    rdi,r12
  41f36f:	call   410310 <__ctype_b_loc@plt+0xe040>
  41f374:	mov    rdi,QWORD PTR [rsp+0x10]
  41f379:	lea    rsi,[rip+0xbdd0]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  41f380:	call   402180 <strcmp@plt>
  41f385:	cmp    eax,0x1
  41f388:	mov    edx,0x2
  41f38d:	sbb    edx,0x0
  41f390:	mov    rcx,QWORD PTR [rsp+0x8]
  41f395:	test   rcx,rcx
  41f398:	jne    41f3a6 <__ctype_b_loc@plt+0x1d0d6>
  41f39a:	lea    rcx,[rip+0xbdd4]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  41f3a1:	mov    QWORD PTR [rsp+0x8],rcx
  41f3a6:	lea    rsi,[rip+0xbdca]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  41f3ad:	xor    eax,eax
  41f3af:	mov    rdi,r12
  41f3b2:	mov    r8,r15
  41f3b5:	call   410070 <__ctype_b_loc@plt+0xdda0>
  41f3ba:	jmp    41f3d5 <__ctype_b_loc@plt+0x1d105>
  41f3bc:	lea    rsi,[rip+0xbd77]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  41f3c3:	mov    edx,0x2
  41f3c8:	xor    eax,eax
  41f3ca:	mov    rdi,r12
  41f3cd:	mov    rcx,r15
  41f3d0:	call   410070 <__ctype_b_loc@plt+0xdda0>
  41f3d5:	mov    rax,QWORD PTR [r12+0x10]
  41f3da:	mov    rsi,QWORD PTR [r12+0x18]
  41f3df:	lea    rcx,[rsi+0x20]
  41f3e3:	cmp    rax,rcx
  41f3e6:	jae    41f4a1 <__ctype_b_loc@plt+0x1d1d1>
  41f3ec:	lea    rdi,[rax+0x10]
  41f3f0:	cmp    rcx,rdi
  41f3f3:	cmova  rdi,rcx
  41f3f7:	mov    rdx,rax
  41f3fa:	not    rdx
  41f3fd:	add    rdx,rdi
  41f400:	mov    edi,0x3
  41f405:	sub    rdi,rax
  41f408:	lea    rbp,[rsi+rdi*1]
  41f40c:	add    rbp,0x1c
  41f410:	mov    edi,ebp
  41f412:	shr    edi,0x4
  41f415:	add    edi,0x1
  41f418:	mov    rsi,rax
  41f41b:	and    rdi,0x7
  41f41f:	je     41f441 <__ctype_b_loc@plt+0x1d171>
  41f421:	neg    rdi
  41f424:	mov    rsi,rax
  41f427:	nop    WORD PTR [rax+rax*1+0x0]
  41f430:	mov    DWORD PTR [rsi+0x8],0x0
  41f437:	add    rsi,0x10
  41f43b:	add    rdi,0x1
  41f43f:	jne    41f430 <__ctype_b_loc@plt+0x1d160>
  41f441:	shr    rdx,0x4
  41f445:	cmp    rbp,0x70
  41f449:	jb     41f491 <__ctype_b_loc@plt+0x1d1c1>
  41f44b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f450:	mov    DWORD PTR [rsi+0x8],0x0
  41f457:	mov    DWORD PTR [rsi+0x18],0x0
  41f45e:	mov    DWORD PTR [rsi+0x28],0x0
  41f465:	mov    DWORD PTR [rsi+0x38],0x0
  41f46c:	mov    DWORD PTR [rsi+0x48],0x0
  41f473:	mov    DWORD PTR [rsi+0x58],0x0
  41f47a:	mov    DWORD PTR [rsi+0x68],0x0
  41f481:	mov    DWORD PTR [rsi+0x78],0x0
  41f488:	sub    rsi,0xffffffffffffff80
  41f48c:	cmp    rsi,rcx
  41f48f:	jb     41f450 <__ctype_b_loc@plt+0x1d180>
  41f491:	shl    rdx,0x4
  41f495:	add    rax,rdx
  41f498:	add    rax,0x10
  41f49c:	mov    QWORD PTR [r12+0x10],rax
  41f4a1:	mov    QWORD PTR [r12+0x10],rcx
  41f4a6:	mov    esi,0x1
  41f4ab:	mov    rdi,r12
  41f4ae:	mov    edx,r14d
  41f4b1:	call   41fe40 <__ctype_b_loc@plt+0x1db70>
  41f4b6:	xor    eax,eax
  41f4b8:	add    rsp,0x78
  41f4bc:	pop    rbx
  41f4bd:	pop    r12
  41f4bf:	pop    r13
  41f4c1:	pop    r14
  41f4c3:	pop    r15
  41f4c5:	pop    rbp
  41f4c6:	ret    
  41f4c7:	nop    WORD PTR [rax+rax*1+0x0]
  41f4d0:	push   rbp
  41f4d1:	push   r15
  41f4d3:	push   r14
  41f4d5:	push   r12
  41f4d7:	push   rbx
  41f4d8:	mov    rbx,rdi
  41f4db:	mov    rbp,QWORD PTR [rdi]
  41f4de:	lea    r14,[rdi+0x18]
  41f4e2:	sub    rbp,r14
  41f4e5:	je     41f53b <__ctype_b_loc@plt+0x1d26b>
  41f4e7:	mov    r15,QWORD PTR [rbx+0x10]
  41f4eb:	mov    rax,QWORD PTR [r15+0x20]
  41f4ef:	mov    rcx,QWORD PTR [rax+0x78]
  41f4f3:	cmp    rcx,QWORD PTR [rax+0x70]
  41f4f7:	jb     41f501 <__ctype_b_loc@plt+0x1d231>
  41f4f9:	mov    rdi,r15
  41f4fc:	call   408070 <__ctype_b_loc@plt+0x5da0>
  41f501:	mov    r12,QWORD PTR [r15+0x10]
  41f505:	mov    rdi,r15
  41f508:	mov    rsi,r14
  41f50b:	mov    rdx,rbp
  41f50e:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  41f513:	mov    QWORD PTR [r12],rax
  41f517:	mov    DWORD PTR [r12+0x8],0x4
  41f520:	add    QWORD PTR [r15+0x10],0x10
  41f525:	mov    QWORD PTR [rbx],r14
  41f528:	lea    r14,[rbx+0x8]
  41f52c:	mov    ebp,DWORD PTR [rbx+0x8]
  41f52f:	add    ebp,0x1
  41f532:	mov    DWORD PTR [rbx+0x8],ebp
  41f535:	lea    rbx,[rbx+0x10]
  41f539:	jmp    41f546 <__ctype_b_loc@plt+0x1d276>
  41f53b:	lea    r14,[rbx+0x8]
  41f53f:	mov    ebp,DWORD PTR [rbx+0x8]
  41f542:	add    rbx,0x10
  41f546:	mov    rbx,QWORD PTR [rbx]
  41f549:	cmp    ebp,0x2
  41f54c:	jl     41f595 <__ctype_b_loc@plt+0x1d2c5>
  41f54e:	mov    rax,QWORD PTR [rbx+0x20]
  41f552:	mov    rcx,QWORD PTR [rax+0x78]
  41f556:	cmp    rcx,QWORD PTR [rax+0x70]
  41f55a:	jb     41f564 <__ctype_b_loc@plt+0x1d294>
  41f55c:	mov    rdi,rbx
  41f55f:	call   408070 <__ctype_b_loc@plt+0x5da0>
  41f564:	lea    r15,[rbx+0x10]
  41f568:	mov    rdx,QWORD PTR [rbx+0x10]
  41f56c:	sub    rdx,QWORD PTR [rbx+0x18]
  41f570:	shr    rdx,0x4
  41f574:	add    edx,0xffffffff
  41f577:	mov    rdi,rbx
  41f57a:	mov    esi,ebp
  41f57c:	call   404850 <__ctype_b_loc@plt+0x2580>
  41f581:	movsxd rcx,ebp
  41f584:	shl    rcx,0x4
  41f588:	mov    rax,QWORD PTR [rbx+0x10]
  41f58c:	add    rcx,0xfffffffffffffff0
  41f590:	sub    rax,rcx
  41f593:	jmp    41f5c5 <__ctype_b_loc@plt+0x1d2f5>
  41f595:	test   ebp,ebp
  41f597:	jne    41f5c8 <__ctype_b_loc@plt+0x1d2f8>
  41f599:	mov    rbp,QWORD PTR [rbx+0x10]
  41f59d:	lea    rsi,[rip+0xbaf7]        # 42b09b <__ctype_b_loc@plt+0x28dcb>
  41f5a4:	xor    edx,edx
  41f5a6:	mov    rdi,rbx
  41f5a9:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  41f5ae:	mov    QWORD PTR [rbp+0x0],rax
  41f5b2:	mov    DWORD PTR [rbp+0x8],0x4
  41f5b9:	mov    rax,QWORD PTR [rbx+0x10]
  41f5bd:	lea    r15,[rbx+0x10]
  41f5c1:	add    rax,0x10
  41f5c5:	mov    QWORD PTR [r15],rax
  41f5c8:	mov    DWORD PTR [r14],0x1
  41f5cf:	pop    rbx
  41f5d0:	pop    r12
  41f5d2:	pop    r14
  41f5d4:	pop    r15
  41f5d6:	pop    rbp
  41f5d7:	ret    
  41f5d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f5e0:	push   rbp
  41f5e1:	push   r15
  41f5e3:	push   r14
  41f5e5:	push   r13
  41f5e7:	push   r12
  41f5e9:	push   rbx
  41f5ea:	sub    rsp,0x48
  41f5ee:	mov    r15,rdi
  41f5f1:	mov    r14,QWORD PTR [rdi+0x10]
  41f5f5:	mov    rbp,QWORD PTR [r14+0x10]
  41f5f9:	mov    eax,DWORD PTR [rbp-0x8]
  41f5fc:	cmp    eax,0x4
  41f5ff:	je     41f664 <__ctype_b_loc@plt+0x1d394>
  41f601:	xor    r12d,r12d
  41f604:	mov    esi,0x0
  41f609:	cmp    eax,0x3
  41f60c:	jne    41f674 <__ctype_b_loc@plt+0x1d3a4>
  41f60e:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41f613:	lea    rsi,[rip+0xb807]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  41f61a:	lea    rbx,[rsp+0x20]
  41f61f:	mov    al,0x1
  41f621:	mov    rdi,rbx
  41f624:	call   402270 <sprintf@plt>
  41f629:	mov    rdi,rbx
  41f62c:	call   4020e0 <strlen@plt>
  41f631:	mov    rdi,r14
  41f634:	mov    rsi,rbx
  41f637:	mov    rdx,rax
  41f63a:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  41f63f:	mov    QWORD PTR [rbp-0x10],rax
  41f643:	mov    DWORD PTR [rbp-0x8],0x4
  41f64a:	mov    rax,QWORD PTR [r14+0x20]
  41f64e:	mov    rcx,QWORD PTR [rax+0x78]
  41f652:	cmp    rcx,QWORD PTR [rax+0x70]
  41f656:	jb     41f660 <__ctype_b_loc@plt+0x1d390>
  41f658:	mov    rdi,r14
  41f65b:	call   408070 <__ctype_b_loc@plt+0x5da0>
  41f660:	mov    rbp,QWORD PTR [r14+0x10]
  41f664:	add    rbp,0xfffffffffffffff0
  41f668:	mov    rsi,QWORD PTR [rbp+0x0]
  41f66c:	mov    r12,QWORD PTR [rsi+0x10]
  41f670:	add    rsi,0x18
  41f674:	mov    rbx,QWORD PTR [r15]
  41f677:	lea    rax,[r15+0x2018]
  41f67e:	sub    rax,rbx
  41f681:	cmp    r12,rax
  41f684:	jbe    41f711 <__ctype_b_loc@plt+0x1d441>
  41f68a:	lea    r12,[r15+0x18]
  41f68e:	sub    rbx,r12
  41f691:	je     41f729 <__ctype_b_loc@plt+0x1d459>
  41f697:	mov    r13,QWORD PTR [r15+0x10]
  41f69b:	mov    rax,QWORD PTR [r13+0x20]
  41f69f:	mov    rcx,QWORD PTR [rax+0x78]
  41f6a3:	cmp    rcx,QWORD PTR [rax+0x70]
  41f6a7:	jb     41f6b1 <__ctype_b_loc@plt+0x1d3e1>
  41f6a9:	mov    rdi,r13
  41f6ac:	call   408070 <__ctype_b_loc@plt+0x5da0>
  41f6b1:	mov    rbp,QWORD PTR [r13+0x10]
  41f6b5:	mov    rdi,r13
  41f6b8:	mov    rsi,r12
  41f6bb:	mov    rdx,rbx
  41f6be:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  41f6c3:	mov    QWORD PTR [rbp+0x0],rax
  41f6c7:	mov    DWORD PTR [rbp+0x8],0x4
  41f6ce:	add    QWORD PTR [r13+0x10],0x10
  41f6d3:	mov    QWORD PTR [r15],r12
  41f6d6:	lea    rsi,[r15+0x8]
  41f6da:	add    DWORD PTR [r15+0x8],0x1
  41f6df:	mov    rax,QWORD PTR [r14+0x10]
  41f6e3:	mov    rcx,QWORD PTR [rax-0x10]
  41f6e7:	mov    QWORD PTR [rax],rcx
  41f6ea:	mov    ecx,DWORD PTR [rax-0x8]
  41f6ed:	mov    DWORD PTR [rax+0x8],ecx
  41f6f0:	mov    rcx,QWORD PTR [rax-0x20]
  41f6f4:	mov    QWORD PTR [rax-0x10],rcx
  41f6f8:	mov    ecx,DWORD PTR [rax-0x18]
  41f6fb:	mov    DWORD PTR [rax-0x8],ecx
  41f6fe:	mov    rcx,QWORD PTR [r14+0x10]
  41f702:	mov    rdx,QWORD PTR [rcx]
  41f705:	mov    QWORD PTR [rax-0x20],rdx
  41f709:	mov    ecx,DWORD PTR [rcx+0x8]
  41f70c:	mov    DWORD PTR [rax-0x18],ecx
  41f70f:	jmp    41f72d <__ctype_b_loc@plt+0x1d45d>
  41f711:	mov    rdi,rbx
  41f714:	mov    rdx,r12
  41f717:	call   4021c0 <memcpy@plt>
  41f71c:	add    QWORD PTR [r15],r12
  41f71f:	add    QWORD PTR [r14+0x10],0xfffffffffffffff0
  41f724:	jmp    41fa0d <__ctype_b_loc@plt+0x1d73d>
  41f729:	lea    rsi,[r15+0x8]
  41f72d:	mov    eax,DWORD PTR [rsi]
  41f72f:	lea    ecx,[rax+0x1]
  41f732:	mov    DWORD PTR [rsi],ecx
  41f734:	test   eax,eax
  41f736:	jle    41fa0d <__ctype_b_loc@plt+0x1d73d>
  41f73c:	mov    r14,QWORD PTR [r15+0x10]
  41f740:	mov    rbx,QWORD PTR [r14+0x10]
  41f744:	mov    eax,DWORD PTR [rbx-0x8]
  41f747:	xor    ebp,ebp
  41f749:	add    eax,0xfffffffd
  41f74c:	cmp    eax,0x4
  41f74f:	mov    QWORD PTR [rsp+0x8],rsi
  41f754:	ja     41f7ce <__ctype_b_loc@plt+0x1d4fe>
  41f756:	lea    rcx,[rip+0xb13f]        # 42a89c <__ctype_b_loc@plt+0x285cc>
  41f75d:	movsxd rax,DWORD PTR [rcx+rax*4]
  41f761:	add    rax,rcx
  41f764:	jmp    rax
  41f766:	vmovsd xmm0,QWORD PTR [rbx-0x10]
  41f76b:	lea    rsi,[rip+0xb6af]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  41f772:	lea    rbp,[rsp+0x20]
  41f777:	mov    al,0x1
  41f779:	mov    rdi,rbp
  41f77c:	call   402270 <sprintf@plt>
  41f781:	mov    rdi,rbp
  41f784:	call   4020e0 <strlen@plt>
  41f789:	mov    rdi,r14
  41f78c:	mov    rsi,rbp
  41f78f:	mov    rdx,rax
  41f792:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  41f797:	mov    rsi,QWORD PTR [rsp+0x8]
  41f79c:	mov    QWORD PTR [rbx-0x10],rax
  41f7a0:	mov    DWORD PTR [rbx-0x8],0x4
  41f7a7:	jmp    41f7ad <__ctype_b_loc@plt+0x1d4dd>
  41f7a9:	mov    rax,QWORD PTR [rbx-0x10]
  41f7ad:	mov    rbp,QWORD PTR [rax+0x10]
  41f7b1:	jmp    41f7ce <__ctype_b_loc@plt+0x1d4fe>
  41f7b3:	mov    rdi,QWORD PTR [rbx-0x10]
  41f7b7:	call   4095e0 <__ctype_b_loc@plt+0x7310>
  41f7bc:	mov    rsi,QWORD PTR [rsp+0x8]
  41f7c1:	movsxd rbp,eax
  41f7c4:	jmp    41f7ce <__ctype_b_loc@plt+0x1d4fe>
  41f7c6:	mov    rax,QWORD PTR [rbx-0x10]
  41f7ca:	mov    rbp,QWORD PTR [rax+0x20]
  41f7ce:	lea    rax,[r14+0x88]
  41f7d5:	mov    QWORD PTR [rsp+0x10],rax
  41f7da:	lea    rax,[r14+0x78]
  41f7de:	mov    QWORD PTR [rsp+0x18],rax
  41f7e3:	mov    r13d,0x1
  41f7e9:	lea    r12,[rip+0xb0c0]        # 42a8b0 <__ctype_b_loc@plt+0x285e0>
  41f7f0:	mov    eax,r13d
  41f7f3:	not    eax
  41f7f5:	cmp    r13d,0x270e
  41f7fc:	ja     41f870 <__ctype_b_loc@plt+0x1d5a0>
  41f7fe:	movsxd r15,eax
  41f801:	shl    r15,0x4
  41f805:	add    r15,QWORD PTR [r14+0x10]
  41f809:	mov    eax,DWORD PTR [r15+0x8]
  41f80d:	add    eax,0xfffffffd
  41f810:	cmp    eax,0x4
  41f813:	ja     41f940 <__ctype_b_loc@plt+0x1d670>
  41f819:	movsxd rcx,DWORD PTR [r12+rax*4]
  41f81d:	add    rcx,r12
  41f820:	xor    eax,eax
  41f822:	jmp    rcx
  41f824:	vmovsd xmm0,QWORD PTR [r15]
  41f829:	mov    al,0x1
  41f82b:	lea    rbx,[rsp+0x20]
  41f830:	mov    rdi,rbx
  41f833:	lea    rsi,[rip+0xb5e7]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  41f83a:	call   402270 <sprintf@plt>
  41f83f:	mov    rdi,rbx
  41f842:	call   4020e0 <strlen@plt>
  41f847:	mov    rdi,r14
  41f84a:	mov    rsi,rbx
  41f84d:	mov    rdx,rax
  41f850:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  41f855:	mov    rsi,QWORD PTR [rsp+0x8]
  41f85a:	mov    QWORD PTR [r15],rax
  41f85d:	mov    DWORD PTR [r15+0x8],0x4
  41f865:	jmp    41f8a3 <__ctype_b_loc@plt+0x1d5d3>
  41f867:	nop    WORD PTR [rax+rax*1+0x0]
  41f870:	and    eax,0x7fffffff
  41f875:	mov    r15,QWORD PTR [rsp+0x18]
  41f87a:	cmp    eax,0x7fffd8ee
  41f87f:	je     41f809 <__ctype_b_loc@plt+0x1d539>
  41f881:	cmp    eax,0x7fffd8ef
  41f886:	je     41f8d9 <__ctype_b_loc@plt+0x1d609>
  41f888:	cmp    eax,0x7fffd8f0
  41f88d:	jne    41f904 <__ctype_b_loc@plt+0x1d634>
  41f88f:	mov    r15,QWORD PTR [r14+0x20]
  41f893:	mov    eax,0xa0
  41f898:	add    r15,rax
  41f89b:	jmp    41f809 <__ctype_b_loc@plt+0x1d539>
  41f8a0:	mov    rax,QWORD PTR [r15]
  41f8a3:	mov    rax,QWORD PTR [rax+0x10]
  41f8a7:	jmp    41f950 <__ctype_b_loc@plt+0x1d680>
  41f8ac:	nop    DWORD PTR [rax+0x0]
  41f8b0:	mov    rdi,QWORD PTR [r15]
  41f8b3:	call   4095e0 <__ctype_b_loc@plt+0x7310>
  41f8b8:	mov    rsi,QWORD PTR [rsp+0x8]
  41f8bd:	cdqe   
  41f8bf:	jmp    41f950 <__ctype_b_loc@plt+0x1d680>
  41f8c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f8ce:	xchg   ax,ax
  41f8d0:	mov    rax,QWORD PTR [r15]
  41f8d3:	mov    rax,QWORD PTR [rax+0x20]
  41f8d7:	jmp    41f950 <__ctype_b_loc@plt+0x1d680>
  41f8d9:	mov    rax,QWORD PTR [r14+0x28]
  41f8dd:	mov    rax,QWORD PTR [rax+0x8]
  41f8e1:	mov    rax,QWORD PTR [rax]
  41f8e4:	mov    rax,QWORD PTR [rax+0x18]
  41f8e8:	mov    QWORD PTR [r14+0x88],rax
  41f8ef:	mov    DWORD PTR [r14+0x90],0x5
  41f8fa:	mov    r15,QWORD PTR [rsp+0x10]
  41f8ff:	jmp    41f809 <__ctype_b_loc@plt+0x1d539>
  41f904:	mov    rax,QWORD PTR [r14+0x28]
  41f908:	mov    rax,QWORD PTR [rax+0x8]
  41f90c:	mov    rax,QWORD PTR [rax]
  41f90f:	lea    ecx,[r13-0x2711]
  41f916:	movzx  edx,BYTE PTR [rax+0xb]
  41f91a:	lea    r15,[rip+0xb1f7]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41f921:	cmp    ecx,edx
  41f923:	jg     41f809 <__ctype_b_loc@plt+0x1d539>
  41f929:	movsxd rcx,r13d
  41f92c:	shl    rcx,0x4
  41f930:	lea    r15,[rax+rcx*1]
  41f934:	add    r15,0xfffffffffffd8f08
  41f93b:	jmp    41f809 <__ctype_b_loc@plt+0x1d539>
  41f940:	xor    eax,eax
  41f942:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f94c:	nop    DWORD PTR [rax+0x0]
  41f950:	mov    ecx,DWORD PTR [rsi]
  41f952:	mov    edx,ecx
  41f954:	sub    edx,r13d
  41f957:	cmp    edx,0x8
  41f95a:	setg   dl
  41f95d:	cmp    rbp,rax
  41f960:	seta   bl
  41f963:	or     bl,dl
  41f965:	mov    edx,0x0
  41f96a:	cmove  rax,rdx
  41f96e:	movzx  edx,bl
  41f971:	add    r13d,edx
  41f974:	test   dl,dl
  41f976:	je     41f984 <__ctype_b_loc@plt+0x1d6b4>
  41f978:	add    rbp,rax
  41f97b:	cmp    r13d,ecx
  41f97e:	jl     41f7f0 <__ctype_b_loc@plt+0x1d520>
  41f984:	cmp    r13d,0x2
  41f988:	jb     41f9ce <__ctype_b_loc@plt+0x1d6fe>
  41f98a:	mov    rax,QWORD PTR [r14+0x20]
  41f98e:	mov    rcx,QWORD PTR [rax+0x78]
  41f992:	cmp    rcx,QWORD PTR [rax+0x70]
  41f996:	jb     41f9a0 <__ctype_b_loc@plt+0x1d6d0>
  41f998:	mov    rdi,r14
  41f99b:	call   408070 <__ctype_b_loc@plt+0x5da0>
  41f9a0:	mov    rdx,QWORD PTR [r14+0x10]
  41f9a4:	sub    rdx,QWORD PTR [r14+0x18]
  41f9a8:	shr    rdx,0x4
  41f9ac:	add    edx,0xffffffff
  41f9af:	mov    rdi,r14
  41f9b2:	mov    esi,r13d
  41f9b5:	call   404850 <__ctype_b_loc@plt+0x2580>
  41f9ba:	movsxd rcx,r13d
  41f9bd:	shl    rcx,0x4
  41f9c1:	mov    rax,QWORD PTR [r14+0x10]
  41f9c5:	add    rcx,0xfffffffffffffff0
  41f9c9:	sub    rax,rcx
  41f9cc:	jmp    41f9fa <__ctype_b_loc@plt+0x1d72a>
  41f9ce:	test   r13d,r13d
  41f9d1:	jne    41fa03 <__ctype_b_loc@plt+0x1d733>
  41f9d3:	mov    rbx,QWORD PTR [r14+0x10]
  41f9d7:	lea    rsi,[rip+0xb6bd]        # 42b09b <__ctype_b_loc@plt+0x28dcb>
  41f9de:	xor    edx,edx
  41f9e0:	mov    rdi,r14
  41f9e3:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  41f9e8:	mov    QWORD PTR [rbx],rax
  41f9eb:	mov    DWORD PTR [rbx+0x8],0x4
  41f9f2:	mov    rax,QWORD PTR [r14+0x10]
  41f9f6:	add    rax,0x10
  41f9fa:	mov    QWORD PTR [r14+0x10],rax
  41f9fe:	mov    rsi,QWORD PTR [rsp+0x8]
  41fa03:	mov    eax,0x1
  41fa08:	sub    eax,r13d
  41fa0b:	add    DWORD PTR [rsi],eax
  41fa0d:	add    rsp,0x48
  41fa11:	pop    rbx
  41fa12:	pop    r12
  41fa14:	pop    r13
  41fa16:	pop    r14
  41fa18:	pop    r15
  41fa1a:	pop    rbp
  41fa1b:	ret    
  41fa1c:	nop    DWORD PTR [rax+0x0]
  41fa20:	push   rbp
  41fa21:	push   r15
  41fa23:	push   r14
  41fa25:	push   r13
  41fa27:	push   r12
  41fa29:	push   rbx
  41fa2a:	sub    rsp,0x48
  41fa2e:	mov    rbx,QWORD PTR [rdi]
  41fa31:	lea    r15,[rdi+0x18]
  41fa35:	sub    rbx,r15
  41fa38:	je     41fd8a <__ctype_b_loc@plt+0x1daba>
  41fa3e:	mov    QWORD PTR [rsp],rdi
  41fa42:	mov    rbp,QWORD PTR [rdi+0x10]
  41fa46:	mov    rax,QWORD PTR [rbp+0x20]
  41fa4a:	mov    rcx,QWORD PTR [rax+0x78]
  41fa4e:	cmp    rcx,QWORD PTR [rax+0x70]
  41fa52:	jb     41fa5c <__ctype_b_loc@plt+0x1d78c>
  41fa54:	mov    rdi,rbp
  41fa57:	call   408070 <__ctype_b_loc@plt+0x5da0>
  41fa5c:	mov    r14,QWORD PTR [rbp+0x10]
  41fa60:	mov    rdi,rbp
  41fa63:	mov    rsi,r15
  41fa66:	mov    rdx,rbx
  41fa69:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  41fa6e:	mov    QWORD PTR [r14],rax
  41fa71:	mov    DWORD PTR [r14+0x8],0x4
  41fa79:	add    QWORD PTR [rbp+0x10],0x10
  41fa7e:	mov    rsi,QWORD PTR [rsp]
  41fa82:	mov    QWORD PTR [rsi],r15
  41fa85:	mov    eax,DWORD PTR [rsi+0x8]
  41fa88:	lea    ecx,[rax+0x1]
  41fa8b:	mov    DWORD PTR [rsi+0x8],ecx
  41fa8e:	test   eax,eax
  41fa90:	jle    41fd8a <__ctype_b_loc@plt+0x1daba>
  41fa96:	mov    r12,QWORD PTR [rsi+0x10]
  41fa9a:	mov    rbp,QWORD PTR [r12+0x10]
  41fa9f:	mov    eax,DWORD PTR [rbp-0x8]
  41faa2:	xor    r13d,r13d
  41faa5:	add    eax,0xfffffffd
  41faa8:	cmp    eax,0x4
  41faab:	mov    QWORD PTR [rsp+0x8],r15
  41fab0:	ja     41fb28 <__ctype_b_loc@plt+0x1d858>
  41fab2:	lea    rcx,[rip+0xae0b]        # 42a8c4 <__ctype_b_loc@plt+0x285f4>
  41fab9:	movsxd rax,DWORD PTR [rcx+rax*4]
  41fabd:	add    rax,rcx
  41fac0:	jmp    rax
  41fac2:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  41fac7:	lea    rsi,[rip+0xb353]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  41face:	lea    rbx,[rsp+0x20]
  41fad3:	mov    al,0x1
  41fad5:	mov    rdi,rbx
  41fad8:	call   402270 <sprintf@plt>
  41fadd:	mov    rdi,rbx
  41fae0:	call   4020e0 <strlen@plt>
  41fae5:	mov    rdi,r12
  41fae8:	mov    rsi,rbx
  41faeb:	mov    rdx,rax
  41faee:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  41faf3:	mov    rsi,QWORD PTR [rsp]
  41faf7:	mov    QWORD PTR [rbp-0x10],rax
  41fafb:	mov    DWORD PTR [rbp-0x8],0x4
  41fb02:	jmp    41fb08 <__ctype_b_loc@plt+0x1d838>
  41fb04:	mov    rax,QWORD PTR [rbp-0x10]
  41fb08:	mov    r13,QWORD PTR [rax+0x10]
  41fb0c:	jmp    41fb28 <__ctype_b_loc@plt+0x1d858>
  41fb0e:	mov    rdi,QWORD PTR [rbp-0x10]
  41fb12:	call   4095e0 <__ctype_b_loc@plt+0x7310>
  41fb17:	mov    rsi,QWORD PTR [rsp]
  41fb1b:	movsxd r13,eax
  41fb1e:	jmp    41fb28 <__ctype_b_loc@plt+0x1d858>
  41fb20:	mov    rax,QWORD PTR [rbp-0x10]
  41fb24:	mov    r13,QWORD PTR [rax+0x20]
  41fb28:	lea    rax,[r12+0x88]
  41fb30:	mov    QWORD PTR [rsp+0x10],rax
  41fb35:	lea    rax,[r12+0x78]
  41fb3a:	mov    QWORD PTR [rsp+0x18],rax
  41fb3f:	mov    r15d,0x1
  41fb45:	lea    rbp,[rip+0xad8c]        # 42a8d8 <__ctype_b_loc@plt+0x28608>
  41fb4c:	nop    DWORD PTR [rax+0x0]
  41fb50:	mov    eax,r15d
  41fb53:	not    eax
  41fb55:	cmp    r15d,0x270e
  41fb5c:	ja     41fbd0 <__ctype_b_loc@plt+0x1d900>
  41fb5e:	movsxd r14,eax
  41fb61:	shl    r14,0x4
  41fb65:	add    r14,QWORD PTR [r12+0x10]
  41fb6a:	mov    eax,DWORD PTR [r14+0x8]
  41fb6e:	add    eax,0xfffffffd
  41fb71:	cmp    eax,0x4
  41fb74:	ja     41fcb4 <__ctype_b_loc@plt+0x1d9e4>
  41fb7a:	movsxd rcx,DWORD PTR [rbp+rax*4+0x0]
  41fb7f:	add    rcx,rbp
  41fb82:	xor    eax,eax
  41fb84:	jmp    rcx
  41fb86:	vmovsd xmm0,QWORD PTR [r14]
  41fb8b:	mov    al,0x1
  41fb8d:	lea    rbx,[rsp+0x20]
  41fb92:	mov    rdi,rbx
  41fb95:	lea    rsi,[rip+0xb285]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  41fb9c:	call   402270 <sprintf@plt>
  41fba1:	mov    rdi,rbx
  41fba4:	call   4020e0 <strlen@plt>
  41fba9:	mov    rdi,r12
  41fbac:	mov    rsi,rbx
  41fbaf:	mov    rdx,rax
  41fbb2:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  41fbb7:	mov    rsi,QWORD PTR [rsp]
  41fbbb:	mov    QWORD PTR [r14],rax
  41fbbe:	mov    DWORD PTR [r14+0x8],0x4
  41fbc6:	jmp    41fc13 <__ctype_b_loc@plt+0x1d943>
  41fbc8:	nop    DWORD PTR [rax+rax*1+0x0]
  41fbd0:	and    eax,0x7fffffff
  41fbd5:	mov    r14,QWORD PTR [rsp+0x18]
  41fbda:	cmp    eax,0x7fffd8ee
  41fbdf:	je     41fb6a <__ctype_b_loc@plt+0x1d89a>
  41fbe1:	cmp    eax,0x7fffd8ef
  41fbe6:	je     41fc49 <__ctype_b_loc@plt+0x1d979>
  41fbe8:	cmp    eax,0x7fffd8f0
  41fbed:	jne    41fc77 <__ctype_b_loc@plt+0x1d9a7>
  41fbf3:	mov    r14,QWORD PTR [r12+0x20]
  41fbf8:	mov    eax,0xa0
  41fbfd:	add    r14,rax
  41fc00:	jmp    41fb6a <__ctype_b_loc@plt+0x1d89a>
  41fc05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fc0f:	nop
  41fc10:	mov    rax,QWORD PTR [r14]
  41fc13:	mov    rax,QWORD PTR [rax+0x10]
  41fc17:	jmp    41fcc0 <__ctype_b_loc@plt+0x1d9f0>
  41fc1c:	nop    DWORD PTR [rax+0x0]
  41fc20:	mov    rdi,QWORD PTR [r14]
  41fc23:	call   4095e0 <__ctype_b_loc@plt+0x7310>
  41fc28:	mov    rsi,QWORD PTR [rsp]
  41fc2c:	cdqe   
  41fc2e:	jmp    41fcc0 <__ctype_b_loc@plt+0x1d9f0>
  41fc33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fc3d:	nop    DWORD PTR [rax]
  41fc40:	mov    rax,QWORD PTR [r14]
  41fc43:	mov    rax,QWORD PTR [rax+0x20]
  41fc47:	jmp    41fcc0 <__ctype_b_loc@plt+0x1d9f0>
  41fc49:	mov    rax,QWORD PTR [r12+0x28]
  41fc4e:	mov    rax,QWORD PTR [rax+0x8]
  41fc52:	mov    rax,QWORD PTR [rax]
  41fc55:	mov    rax,QWORD PTR [rax+0x18]
  41fc59:	mov    QWORD PTR [r12+0x88],rax
  41fc61:	mov    DWORD PTR [r12+0x90],0x5
  41fc6d:	mov    r14,QWORD PTR [rsp+0x10]
  41fc72:	jmp    41fb6a <__ctype_b_loc@plt+0x1d89a>
  41fc77:	mov    rax,QWORD PTR [r12+0x28]
  41fc7c:	mov    rax,QWORD PTR [rax+0x8]
  41fc80:	mov    rax,QWORD PTR [rax]
  41fc83:	lea    ecx,[r15-0x2711]
  41fc8a:	movzx  edx,BYTE PTR [rax+0xb]
  41fc8e:	lea    r14,[rip+0xae83]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41fc95:	cmp    ecx,edx
  41fc97:	jg     41fb6a <__ctype_b_loc@plt+0x1d89a>
  41fc9d:	movsxd rcx,r15d
  41fca0:	shl    rcx,0x4
  41fca4:	lea    r14,[rax+rcx*1]
  41fca8:	add    r14,0xfffffffffffd8f08
  41fcaf:	jmp    41fb6a <__ctype_b_loc@plt+0x1d89a>
  41fcb4:	xor    eax,eax
  41fcb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fcc0:	mov    ecx,DWORD PTR [rsi+0x8]
  41fcc3:	mov    edx,ecx
  41fcc5:	sub    edx,r15d
  41fcc8:	cmp    edx,0x8
  41fccb:	setg   dl
  41fcce:	cmp    r13,rax
  41fcd1:	seta   bl
  41fcd4:	or     bl,dl
  41fcd6:	mov    edx,0x0
  41fcdb:	cmove  rax,rdx
  41fcdf:	movzx  edx,bl
  41fce2:	add    r15d,edx
  41fce5:	test   dl,dl
  41fce7:	je     41fcf5 <__ctype_b_loc@plt+0x1da25>
  41fce9:	add    r13,rax
  41fcec:	cmp    r15d,ecx
  41fcef:	jl     41fb50 <__ctype_b_loc@plt+0x1d880>
  41fcf5:	cmp    r15d,0x2
  41fcf9:	jb     41fd43 <__ctype_b_loc@plt+0x1da73>
  41fcfb:	mov    rax,QWORD PTR [r12+0x20]
  41fd00:	mov    rcx,QWORD PTR [rax+0x78]
  41fd04:	cmp    rcx,QWORD PTR [rax+0x70]
  41fd08:	jb     41fd12 <__ctype_b_loc@plt+0x1da42>
  41fd0a:	mov    rdi,r12
  41fd0d:	call   408070 <__ctype_b_loc@plt+0x5da0>
  41fd12:	mov    rdx,QWORD PTR [r12+0x10]
  41fd17:	sub    rdx,QWORD PTR [r12+0x18]
  41fd1c:	shr    rdx,0x4
  41fd20:	add    edx,0xffffffff
  41fd23:	mov    rdi,r12
  41fd26:	mov    esi,r15d
  41fd29:	call   404850 <__ctype_b_loc@plt+0x2580>
  41fd2e:	movsxd rcx,r15d
  41fd31:	shl    rcx,0x4
  41fd35:	mov    rax,QWORD PTR [r12+0x10]
  41fd3a:	add    rcx,0xfffffffffffffff0
  41fd3e:	sub    rax,rcx
  41fd41:	jmp    41fd71 <__ctype_b_loc@plt+0x1daa1>
  41fd43:	test   r15d,r15d
  41fd46:	jne    41fd7a <__ctype_b_loc@plt+0x1daaa>
  41fd48:	mov    rbx,QWORD PTR [r12+0x10]
  41fd4d:	lea    rsi,[rip+0xb347]        # 42b09b <__ctype_b_loc@plt+0x28dcb>
  41fd54:	xor    edx,edx
  41fd56:	mov    rdi,r12
  41fd59:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  41fd5e:	mov    QWORD PTR [rbx],rax
  41fd61:	mov    DWORD PTR [rbx+0x8],0x4
  41fd68:	mov    rax,QWORD PTR [r12+0x10]
  41fd6d:	add    rax,0x10
  41fd71:	mov    QWORD PTR [r12+0x10],rax
  41fd76:	mov    rsi,QWORD PTR [rsp]
  41fd7a:	mov    eax,0x1
  41fd7f:	sub    eax,r15d
  41fd82:	add    DWORD PTR [rsi+0x8],eax
  41fd85:	mov    r15,QWORD PTR [rsp+0x8]
  41fd8a:	mov    rax,r15
  41fd8d:	add    rsp,0x48
  41fd91:	pop    rbx
  41fd92:	pop    r12
  41fd94:	pop    r13
  41fd96:	pop    r14
  41fd98:	pop    r15
  41fd9a:	pop    rbp
  41fd9b:	ret    
  41fd9c:	nop    DWORD PTR [rax+0x0]
  41fda0:	push   r14
  41fda2:	push   rbx
  41fda3:	push   rax
  41fda4:	mov    rbx,rdi
  41fda7:	cmp    esi,0x1f40
  41fdad:	jg     41fdcd <__ctype_b_loc@plt+0x1dafd>
  41fdaf:	mov    rax,QWORD PTR [rbx+0x10]
  41fdb3:	mov    rcx,rax
  41fdb6:	sub    rcx,QWORD PTR [rbx+0x18]
  41fdba:	sar    rcx,0x4
  41fdbe:	movsxd r14,esi
  41fdc1:	add    rcx,r14
  41fdc4:	cmp    rcx,0x1f40
  41fdcb:	jle    41fde5 <__ctype_b_loc@plt+0x1db15>
  41fdcd:	lea    rsi,[rip+0xb907]        # 42b6db <__ctype_b_loc@plt+0x2940b>
  41fdd4:	xor    eax,eax
  41fdd6:	mov    rdi,rbx
  41fdd9:	add    rsp,0x8
  41fddd:	pop    rbx
  41fdde:	pop    r14
  41fde0:	jmp    410070 <__ctype_b_loc@plt+0xdda0>
  41fde5:	test   esi,esi
  41fde7:	jle    41fe29 <__ctype_b_loc@plt+0x1db59>
  41fde9:	mov    rcx,QWORD PTR [rbx+0x38]
  41fded:	sub    rcx,rax
  41fdf0:	mov    eax,esi
  41fdf2:	shl    eax,0x4
  41fdf5:	cdqe   
  41fdf7:	cmp    rcx,rax
  41fdfa:	jg     41fe13 <__ctype_b_loc@plt+0x1db43>
  41fdfc:	mov    eax,DWORD PTR [rbx+0x58]
  41fdff:	cmp    eax,esi
  41fe01:	jge    41fe07 <__ctype_b_loc@plt+0x1db37>
  41fe03:	add    eax,esi
  41fe05:	jmp    41fe09 <__ctype_b_loc@plt+0x1db39>
  41fe07:	add    eax,eax
  41fe09:	mov    rdi,rbx
  41fe0c:	mov    esi,eax
  41fe0e:	call   404e30 <__ctype_b_loc@plt+0x2b60>
  41fe13:	mov    rax,QWORD PTR [rbx+0x28]
  41fe17:	shl    r14,0x4
  41fe1b:	add    r14,QWORD PTR [rbx+0x10]
  41fe1f:	cmp    QWORD PTR [rax+0x10],r14
  41fe23:	jae    41fe29 <__ctype_b_loc@plt+0x1db59>
  41fe25:	mov    QWORD PTR [rax+0x10],r14
  41fe29:	add    rsp,0x8
  41fe2d:	pop    rbx
  41fe2e:	pop    r14
  41fe30:	ret    
  41fe31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fe3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41fe40:	push   rbp
  41fe41:	push   r15
  41fe43:	push   r14
  41fe45:	push   r13
  41fe47:	push   r12
  41fe49:	push   rbx
  41fe4a:	sub    rsp,0x28
  41fe4e:	cmp    edx,esi
  41fe50:	jle    42097a <__ctype_b_loc@plt+0x1e6aa>
  41fe56:	mov    r12d,edx
  41fe59:	mov    r15d,esi
  41fe5c:	mov    rbx,rdi
  41fe5f:	nop
  41fe60:	mov    rcx,QWORD PTR [rbx+0x10]
  41fe64:	mov    rax,QWORD PTR [rbx+0x18]
  41fe68:	cmp    rax,rcx
  41fe6b:	lea    rdx,[rip+0xaca6]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41fe72:	cmovae rax,rdx
  41fe76:	mov    rsi,QWORD PTR [rax]
  41fe79:	lea    eax,[r15-0x1]
  41fe7d:	cmp    eax,DWORD PTR [rsi+0x38]
  41fe80:	mov    DWORD PTR [rsp+0x10],eax
  41fe84:	jae    41fea0 <__ctype_b_loc@plt+0x1dbd0>
  41fe86:	cdqe   
  41fe88:	shl    rax,0x4
  41fe8c:	add    rax,QWORD PTR [rsi+0x18]
  41fe90:	jmp    41ff13 <__ctype_b_loc@plt+0x1dc43>
  41fe95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fe9f:	nop
  41fea0:	vcvtsi2sd xmm0,xmm2,r15d
  41fea5:	test   r15d,r15d
  41fea8:	je     41fee8 <__ctype_b_loc@plt+0x1dc18>
  41feaa:	vmovq  rdx,xmm0
  41feaf:	mov    rax,rdx
  41feb2:	shr    rax,0x20
  41feb6:	add    eax,edx
  41feb8:	mov    dl,BYTE PTR [rsi+0xb]
  41febb:	mov    rdi,0xffffffffffffffff
  41fec2:	shlx   rdi,rdi,rdx
  41fec7:	or     rdi,0x1
  41fecb:	xor    rdi,0xfffffffffffffffe
  41fecf:	xor    edx,edx
  41fed1:	div    rdi
  41fed4:	lea    rax,[rdx+rdx*4]
  41fed8:	shl    rax,0x3
  41fedc:	add    rax,QWORD PTR [rsi+0x20]
  41fee0:	cmp    DWORD PTR [rax+0x18],0x3
  41fee4:	jne    41ff03 <__ctype_b_loc@plt+0x1dc33>
  41fee6:	jmp    41fef6 <__ctype_b_loc@plt+0x1dc26>
  41fee8:	mov    rax,QWORD PTR [rsi+0x20]
  41feec:	nop    DWORD PTR [rax+0x0]
  41fef0:	cmp    DWORD PTR [rax+0x18],0x3
  41fef4:	jne    41ff03 <__ctype_b_loc@plt+0x1dc33>
  41fef6:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41fefb:	vucomisd xmm1,xmm0
  41feff:	jne    41ff03 <__ctype_b_loc@plt+0x1dc33>
  41ff01:	jnp    41ff13 <__ctype_b_loc@plt+0x1dc43>
  41ff03:	mov    rax,QWORD PTR [rax+0x20]
  41ff07:	test   rax,rax
  41ff0a:	jne    41fef0 <__ctype_b_loc@plt+0x1dc20>
  41ff0c:	lea    rax,[rip+0xac05]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41ff13:	mov    rdx,QWORD PTR [rax]
  41ff16:	mov    QWORD PTR [rcx],rdx
  41ff19:	mov    eax,DWORD PTR [rax+0x8]
  41ff1c:	mov    DWORD PTR [rcx+0x8],eax
  41ff1f:	mov    rcx,QWORD PTR [rbx+0x10]
  41ff23:	mov    rax,QWORD PTR [rbx+0x18]
  41ff27:	lea    rdx,[rcx+0x10]
  41ff2b:	mov    QWORD PTR [rbx+0x10],rdx
  41ff2f:	cmp    rax,rdx
  41ff32:	lea    rdx,[rip+0xabdf]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41ff39:	cmovae rax,rdx
  41ff3d:	mov    rsi,QWORD PTR [rax]
  41ff40:	lea    ebp,[r12-0x1]
  41ff45:	cmp    ebp,DWORD PTR [rsi+0x38]
  41ff48:	jae    41ff60 <__ctype_b_loc@plt+0x1dc90>
  41ff4a:	movsxd rax,ebp
  41ff4d:	shl    rax,0x4
  41ff51:	add    rax,QWORD PTR [rsi+0x18]
  41ff55:	jmp    41ffd3 <__ctype_b_loc@plt+0x1dd03>
  41ff57:	nop    WORD PTR [rax+rax*1+0x0]
  41ff60:	vcvtsi2sd xmm0,xmm2,r12d
  41ff65:	test   r12d,r12d
  41ff68:	je     41ffa8 <__ctype_b_loc@plt+0x1dcd8>
  41ff6a:	vmovq  rdx,xmm0
  41ff6f:	mov    rax,rdx
  41ff72:	shr    rax,0x20
  41ff76:	add    eax,edx
  41ff78:	mov    dl,BYTE PTR [rsi+0xb]
  41ff7b:	mov    rdi,0xffffffffffffffff
  41ff82:	shlx   rdi,rdi,rdx
  41ff87:	or     rdi,0x1
  41ff8b:	xor    rdi,0xfffffffffffffffe
  41ff8f:	xor    edx,edx
  41ff91:	div    rdi
  41ff94:	lea    rax,[rdx+rdx*4]
  41ff98:	shl    rax,0x3
  41ff9c:	add    rax,QWORD PTR [rsi+0x20]
  41ffa0:	cmp    DWORD PTR [rax+0x18],0x3
  41ffa4:	jne    41ffc3 <__ctype_b_loc@plt+0x1dcf3>
  41ffa6:	jmp    41ffb6 <__ctype_b_loc@plt+0x1dce6>
  41ffa8:	mov    rax,QWORD PTR [rsi+0x20]
  41ffac:	nop    DWORD PTR [rax+0x0]
  41ffb0:	cmp    DWORD PTR [rax+0x18],0x3
  41ffb4:	jne    41ffc3 <__ctype_b_loc@plt+0x1dcf3>
  41ffb6:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41ffbb:	vucomisd xmm1,xmm0
  41ffbf:	jne    41ffc3 <__ctype_b_loc@plt+0x1dcf3>
  41ffc1:	jnp    41ffd3 <__ctype_b_loc@plt+0x1dd03>
  41ffc3:	mov    rax,QWORD PTR [rax+0x20]
  41ffc7:	test   rax,rax
  41ffca:	jne    41ffb0 <__ctype_b_loc@plt+0x1dce0>
  41ffcc:	lea    rax,[rip+0xab45]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  41ffd3:	mov    rdx,QWORD PTR [rax]
  41ffd6:	mov    QWORD PTR [rcx+0x10],rdx
  41ffda:	mov    eax,DWORD PTR [rax+0x8]
  41ffdd:	mov    DWORD PTR [rcx+0x18],eax
  41ffe0:	add    QWORD PTR [rbx+0x10],0x10
  41ffe5:	mov    esi,0xffffffff
  41ffea:	mov    edx,0xfffffffe
  41ffef:	mov    rdi,rbx
  41fff2:	call   420990 <__ctype_b_loc@plt+0x1e6c0>
  41fff7:	test   eax,eax
  41fff9:	mov    DWORD PTR [rsp+0x4],ebp
  41fffd:	je     420030 <__ctype_b_loc@plt+0x1dd60>
  41ffff:	mov    esi,0x1
  420004:	mov    rdi,rbx
  420007:	mov    edx,r15d
  42000a:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  42000f:	mov    esi,0x1
  420014:	mov    rdi,rbx
  420017:	mov    edx,r12d
  42001a:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  42001f:	jmp    420035 <__ctype_b_loc@plt+0x1dd65>
  420021:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42002b:	nop    DWORD PTR [rax+rax*1+0x0]
  420030:	add    QWORD PTR [rbx+0x10],0xffffffffffffffe0
  420035:	mov    ebp,r12d
  420038:	sub    ebp,r15d
  42003b:	cmp    ebp,0x1
  42003e:	je     42097a <__ctype_b_loc@plt+0x1e6aa>
  420044:	lea    r14d,[r12+r15*1]
  420048:	mov    r13d,r14d
  42004b:	shr    r13d,0x1f
  42004f:	add    r13d,r14d
  420052:	sar    r13d,1
  420055:	mov    rcx,QWORD PTR [rbx+0x10]
  420059:	mov    rax,QWORD PTR [rbx+0x18]
  42005d:	cmp    rax,rcx
  420060:	lea    rdx,[rip+0xaab1]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  420067:	cmovae rax,rdx
  42006b:	mov    rsi,QWORD PTR [rax]
  42006e:	lea    edx,[r13-0x1]
  420072:	cmp    edx,DWORD PTR [rsi+0x38]
  420075:	mov    DWORD PTR [rsp+0x8],edx
  420079:	jae    420090 <__ctype_b_loc@plt+0x1ddc0>
  42007b:	movsxd rax,edx
  42007e:	shl    rax,0x4
  420082:	add    rax,QWORD PTR [rsi+0x18]
  420086:	jmp    420113 <__ctype_b_loc@plt+0x1de43>
  42008b:	nop    DWORD PTR [rax+rax*1+0x0]
  420090:	vcvtsi2sd xmm0,xmm2,r13d
  420095:	lea    eax,[r14+0x1]
  420099:	cmp    eax,0x2
  42009c:	ja     4200b0 <__ctype_b_loc@plt+0x1dde0>
  42009e:	mov    rax,QWORD PTR [rsi+0x20]
  4200a2:	cmp    DWORD PTR [rax+0x18],0x3
  4200a6:	jne    420103 <__ctype_b_loc@plt+0x1de33>
  4200a8:	jmp    4200f6 <__ctype_b_loc@plt+0x1de26>
  4200aa:	nop    WORD PTR [rax+rax*1+0x0]
  4200b0:	vmovq  rdx,xmm0
  4200b5:	mov    rax,rdx
  4200b8:	shr    rax,0x20
  4200bc:	add    eax,edx
  4200be:	mov    dl,BYTE PTR [rsi+0xb]
  4200c1:	mov    rdi,0xffffffffffffffff
  4200c8:	shlx   rdi,rdi,rdx
  4200cd:	or     rdi,0x1
  4200d1:	xor    rdi,0xfffffffffffffffe
  4200d5:	xor    edx,edx
  4200d7:	div    rdi
  4200da:	lea    rax,[rdx+rdx*4]
  4200de:	shl    rax,0x3
  4200e2:	add    rax,QWORD PTR [rsi+0x20]
  4200e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4200f0:	cmp    DWORD PTR [rax+0x18],0x3
  4200f4:	jne    420103 <__ctype_b_loc@plt+0x1de33>
  4200f6:	vmovsd xmm1,QWORD PTR [rax+0x10]
  4200fb:	vucomisd xmm1,xmm0
  4200ff:	jne    420103 <__ctype_b_loc@plt+0x1de33>
  420101:	jnp    420113 <__ctype_b_loc@plt+0x1de43>
  420103:	mov    rax,QWORD PTR [rax+0x20]
  420107:	test   rax,rax
  42010a:	jne    4200f0 <__ctype_b_loc@plt+0x1de20>
  42010c:	lea    rax,[rip+0xaa05]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  420113:	mov    rdx,QWORD PTR [rax]
  420116:	mov    QWORD PTR [rcx],rdx
  420119:	mov    eax,DWORD PTR [rax+0x8]
  42011c:	mov    DWORD PTR [rcx+0x8],eax
  42011f:	mov    rcx,QWORD PTR [rbx+0x10]
  420123:	mov    rax,QWORD PTR [rbx+0x18]
  420127:	lea    rdx,[rcx+0x10]
  42012b:	mov    QWORD PTR [rbx+0x10],rdx
  42012f:	cmp    rax,rdx
  420132:	lea    rdx,[rip+0xa9df]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  420139:	cmovae rax,rdx
  42013d:	mov    rsi,QWORD PTR [rax]
  420140:	mov    eax,DWORD PTR [rsp+0x10]
  420144:	cmp    eax,DWORD PTR [rsi+0x38]
  420147:	jae    420160 <__ctype_b_loc@plt+0x1de90>
  420149:	cdqe   
  42014b:	shl    rax,0x4
  42014f:	add    rax,QWORD PTR [rsi+0x18]
  420153:	jmp    4201d3 <__ctype_b_loc@plt+0x1df03>
  420155:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42015f:	nop
  420160:	vcvtsi2sd xmm0,xmm2,r15d
  420165:	test   r15d,r15d
  420168:	je     4201a8 <__ctype_b_loc@plt+0x1ded8>
  42016a:	vmovq  rdx,xmm0
  42016f:	mov    rax,rdx
  420172:	shr    rax,0x20
  420176:	add    eax,edx
  420178:	mov    dl,BYTE PTR [rsi+0xb]
  42017b:	mov    rdi,0xffffffffffffffff
  420182:	shlx   rdi,rdi,rdx
  420187:	or     rdi,0x1
  42018b:	xor    rdi,0xfffffffffffffffe
  42018f:	xor    edx,edx
  420191:	div    rdi
  420194:	lea    rax,[rdx+rdx*4]
  420198:	shl    rax,0x3
  42019c:	add    rax,QWORD PTR [rsi+0x20]
  4201a0:	cmp    DWORD PTR [rax+0x18],0x3
  4201a4:	jne    4201c3 <__ctype_b_loc@plt+0x1def3>
  4201a6:	jmp    4201b6 <__ctype_b_loc@plt+0x1dee6>
  4201a8:	mov    rax,QWORD PTR [rsi+0x20]
  4201ac:	nop    DWORD PTR [rax+0x0]
  4201b0:	cmp    DWORD PTR [rax+0x18],0x3
  4201b4:	jne    4201c3 <__ctype_b_loc@plt+0x1def3>
  4201b6:	vmovsd xmm1,QWORD PTR [rax+0x10]
  4201bb:	vucomisd xmm1,xmm0
  4201bf:	jne    4201c3 <__ctype_b_loc@plt+0x1def3>
  4201c1:	jnp    4201d3 <__ctype_b_loc@plt+0x1df03>
  4201c3:	mov    rax,QWORD PTR [rax+0x20]
  4201c7:	test   rax,rax
  4201ca:	jne    4201b0 <__ctype_b_loc@plt+0x1dee0>
  4201cc:	lea    rax,[rip+0xa945]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4201d3:	mov    rdx,QWORD PTR [rax]
  4201d6:	mov    QWORD PTR [rcx+0x10],rdx
  4201da:	mov    eax,DWORD PTR [rax+0x8]
  4201dd:	mov    DWORD PTR [rcx+0x18],eax
  4201e0:	add    QWORD PTR [rbx+0x10],0x10
  4201e5:	mov    esi,0xfffffffe
  4201ea:	mov    edx,0xffffffff
  4201ef:	mov    rdi,rbx
  4201f2:	call   420990 <__ctype_b_loc@plt+0x1e6c0>
  4201f7:	test   eax,eax
  4201f9:	je     420220 <__ctype_b_loc@plt+0x1df50>
  4201fb:	mov    esi,0x1
  420200:	mov    rdi,rbx
  420203:	mov    edx,r13d
  420206:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  42020b:	mov    esi,0x1
  420210:	mov    rdi,rbx
  420213:	mov    edx,r15d
  420216:	jmp    42031a <__ctype_b_loc@plt+0x1e04a>
  42021b:	nop    DWORD PTR [rax+rax*1+0x0]
  420220:	mov    rcx,QWORD PTR [rbx+0x10]
  420224:	mov    rax,QWORD PTR [rbx+0x18]
  420228:	lea    rdx,[rcx-0x10]
  42022c:	mov    QWORD PTR [rbx+0x10],rdx
  420230:	cmp    rax,rdx
  420233:	lea    rdx,[rip+0xa8de]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  42023a:	cmovae rax,rdx
  42023e:	mov    rsi,QWORD PTR [rax]
  420241:	mov    eax,DWORD PTR [rsp+0x4]
  420245:	cmp    eax,DWORD PTR [rsi+0x38]
  420248:	jae    420256 <__ctype_b_loc@plt+0x1df86>
  42024a:	cdqe   
  42024c:	shl    rax,0x4
  420250:	add    rax,QWORD PTR [rsi+0x18]
  420254:	jmp    4202d3 <__ctype_b_loc@plt+0x1e003>
  420256:	vcvtsi2sd xmm0,xmm2,r12d
  42025b:	test   r12d,r12d
  42025e:	je     42029e <__ctype_b_loc@plt+0x1dfce>
  420260:	vmovq  rdx,xmm0
  420265:	mov    rax,rdx
  420268:	shr    rax,0x20
  42026c:	add    eax,edx
  42026e:	mov    dl,BYTE PTR [rsi+0xb]
  420271:	mov    rdi,0xffffffffffffffff
  420278:	shlx   rdi,rdi,rdx
  42027d:	or     rdi,0x1
  420281:	xor    rdi,0xfffffffffffffffe
  420285:	xor    edx,edx
  420287:	div    rdi
  42028a:	lea    rax,[rdx+rdx*4]
  42028e:	shl    rax,0x3
  420292:	add    rax,QWORD PTR [rsi+0x20]
  420296:	cmp    DWORD PTR [rax+0x18],0x3
  42029a:	jne    4202c3 <__ctype_b_loc@plt+0x1dff3>
  42029c:	jmp    4202b6 <__ctype_b_loc@plt+0x1dfe6>
  42029e:	mov    rax,QWORD PTR [rsi+0x20]
  4202a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4202ac:	nop    DWORD PTR [rax+0x0]
  4202b0:	cmp    DWORD PTR [rax+0x18],0x3
  4202b4:	jne    4202c3 <__ctype_b_loc@plt+0x1dff3>
  4202b6:	vmovsd xmm1,QWORD PTR [rax+0x10]
  4202bb:	vucomisd xmm1,xmm0
  4202bf:	jne    4202c3 <__ctype_b_loc@plt+0x1dff3>
  4202c1:	jnp    4202d3 <__ctype_b_loc@plt+0x1e003>
  4202c3:	mov    rax,QWORD PTR [rax+0x20]
  4202c7:	test   rax,rax
  4202ca:	jne    4202b0 <__ctype_b_loc@plt+0x1dfe0>
  4202cc:	lea    rax,[rip+0xa845]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4202d3:	mov    rdx,QWORD PTR [rax]
  4202d6:	mov    QWORD PTR [rcx-0x10],rdx
  4202da:	mov    eax,DWORD PTR [rax+0x8]
  4202dd:	mov    DWORD PTR [rcx-0x8],eax
  4202e0:	add    QWORD PTR [rbx+0x10],0x10
  4202e5:	mov    esi,0xffffffff
  4202ea:	mov    edx,0xfffffffe
  4202ef:	mov    rdi,rbx
  4202f2:	call   420990 <__ctype_b_loc@plt+0x1e6c0>
  4202f7:	test   eax,eax
  4202f9:	je     42096c <__ctype_b_loc@plt+0x1e69c>
  4202ff:	mov    esi,0x1
  420304:	mov    rdi,rbx
  420307:	mov    edx,r13d
  42030a:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  42030f:	mov    esi,0x1
  420314:	mov    rdi,rbx
  420317:	mov    edx,r12d
  42031a:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  42031f:	cmp    ebp,0x2
  420322:	je     42097a <__ctype_b_loc@plt+0x1e6aa>
  420328:	mov    rcx,QWORD PTR [rbx+0x10]
  42032c:	mov    rax,QWORD PTR [rbx+0x18]
  420330:	cmp    rax,rcx
  420333:	lea    rdx,[rip+0xa7de]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  42033a:	cmovae rax,rdx
  42033e:	mov    rsi,QWORD PTR [rax]
  420341:	mov    eax,DWORD PTR [rsp+0x8]
  420345:	cmp    eax,DWORD PTR [rsi+0x38]
  420348:	mov    ebp,DWORD PTR [rsp+0x4]
  42034c:	jae    420360 <__ctype_b_loc@plt+0x1e090>
  42034e:	cdqe   
  420350:	shl    rax,0x4
  420354:	add    rax,QWORD PTR [rsi+0x18]
  420358:	jmp    4203e3 <__ctype_b_loc@plt+0x1e113>
  42035d:	nop    DWORD PTR [rax]
  420360:	vcvtsi2sd xmm0,xmm2,r13d
  420365:	add    r14d,0x1
  420369:	cmp    r14d,0x2
  42036d:	ja     420380 <__ctype_b_loc@plt+0x1e0b0>
  42036f:	mov    rax,QWORD PTR [rsi+0x20]
  420373:	cmp    DWORD PTR [rax+0x18],0x3
  420377:	jne    4203d3 <__ctype_b_loc@plt+0x1e103>
  420379:	jmp    4203c6 <__ctype_b_loc@plt+0x1e0f6>
  42037b:	nop    DWORD PTR [rax+rax*1+0x0]
  420380:	vmovq  rdx,xmm0
  420385:	mov    rax,rdx
  420388:	shr    rax,0x20
  42038c:	add    eax,edx
  42038e:	mov    dl,BYTE PTR [rsi+0xb]
  420391:	mov    rdi,0xffffffffffffffff
  420398:	shlx   rdi,rdi,rdx
  42039d:	or     rdi,0x1
  4203a1:	xor    rdi,0xfffffffffffffffe
  4203a5:	xor    edx,edx
  4203a7:	div    rdi
  4203aa:	lea    rax,[rdx+rdx*4]
  4203ae:	shl    rax,0x3
  4203b2:	add    rax,QWORD PTR [rsi+0x20]
  4203b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4203c0:	cmp    DWORD PTR [rax+0x18],0x3
  4203c4:	jne    4203d3 <__ctype_b_loc@plt+0x1e103>
  4203c6:	vmovsd xmm1,QWORD PTR [rax+0x10]
  4203cb:	vucomisd xmm1,xmm0
  4203cf:	jne    4203d3 <__ctype_b_loc@plt+0x1e103>
  4203d1:	jnp    4203e3 <__ctype_b_loc@plt+0x1e113>
  4203d3:	mov    rax,QWORD PTR [rax+0x20]
  4203d7:	test   rax,rax
  4203da:	jne    4203c0 <__ctype_b_loc@plt+0x1e0f0>
  4203dc:	lea    rax,[rip+0xa735]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4203e3:	mov    rdx,QWORD PTR [rax]
  4203e6:	mov    QWORD PTR [rcx],rdx
  4203e9:	mov    eax,DWORD PTR [rax+0x8]
  4203ec:	mov    DWORD PTR [rcx+0x8],eax
  4203ef:	mov    rax,QWORD PTR [rbx+0x10]
  4203f3:	lea    rcx,[rax+0x10]
  4203f7:	mov    QWORD PTR [rbx+0x10],rcx
  4203fb:	mov    rcx,QWORD PTR [rax]
  4203fe:	mov    QWORD PTR [rax+0x10],rcx
  420402:	mov    ecx,DWORD PTR [rax+0x8]
  420405:	mov    DWORD PTR [rax+0x18],ecx
  420408:	mov    rcx,QWORD PTR [rbx+0x10]
  42040c:	lea    rax,[rcx+0x10]
  420410:	mov    QWORD PTR [rbx+0x10],rax
  420414:	mov    rdx,QWORD PTR [rbx+0x18]
  420418:	cmp    rdx,rax
  42041b:	lea    rax,[rip+0xa6f6]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  420422:	cmovae rdx,rax
  420426:	mov    rsi,QWORD PTR [rdx]
  420429:	lea    eax,[r12-0x2]
  42042e:	cmp    eax,DWORD PTR [rsi+0x38]
  420431:	mov    DWORD PTR [rsp+0x1c],eax
  420435:	jae    420450 <__ctype_b_loc@plt+0x1e180>
  420437:	cdqe   
  420439:	shl    rax,0x4
  42043d:	add    rax,QWORD PTR [rsi+0x18]
  420441:	jmp    4204c3 <__ctype_b_loc@plt+0x1e1f3>
  420446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420450:	vcvtsi2sd xmm0,xmm2,ebp
  420454:	test   ebp,ebp
  420456:	je     420496 <__ctype_b_loc@plt+0x1e1c6>
  420458:	vmovq  rdx,xmm0
  42045d:	mov    rax,rdx
  420460:	shr    rax,0x20
  420464:	add    eax,edx
  420466:	mov    dl,BYTE PTR [rsi+0xb]
  420469:	mov    rdi,0xffffffffffffffff
  420470:	shlx   rdi,rdi,rdx
  420475:	or     rdi,0x1
  420479:	xor    rdi,0xfffffffffffffffe
  42047d:	xor    edx,edx
  42047f:	div    rdi
  420482:	lea    rax,[rdx+rdx*4]
  420486:	shl    rax,0x3
  42048a:	add    rax,QWORD PTR [rsi+0x20]
  42048e:	cmp    DWORD PTR [rax+0x18],0x3
  420492:	jne    4204b3 <__ctype_b_loc@plt+0x1e1e3>
  420494:	jmp    4204a6 <__ctype_b_loc@plt+0x1e1d6>
  420496:	mov    rax,QWORD PTR [rsi+0x20]
  42049a:	nop    WORD PTR [rax+rax*1+0x0]
  4204a0:	cmp    DWORD PTR [rax+0x18],0x3
  4204a4:	jne    4204b3 <__ctype_b_loc@plt+0x1e1e3>
  4204a6:	vmovsd xmm1,QWORD PTR [rax+0x10]
  4204ab:	vucomisd xmm1,xmm0
  4204af:	jne    4204b3 <__ctype_b_loc@plt+0x1e1e3>
  4204b1:	jnp    4204c3 <__ctype_b_loc@plt+0x1e1f3>
  4204b3:	mov    rax,QWORD PTR [rax+0x20]
  4204b7:	test   rax,rax
  4204ba:	jne    4204a0 <__ctype_b_loc@plt+0x1e1d0>
  4204bc:	lea    rax,[rip+0xa655]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4204c3:	mov    rdx,QWORD PTR [rax]
  4204c6:	mov    QWORD PTR [rcx+0x10],rdx
  4204ca:	mov    eax,DWORD PTR [rax+0x8]
  4204cd:	mov    DWORD PTR [rcx+0x18],eax
  4204d0:	add    QWORD PTR [rbx+0x10],0x10
  4204d5:	mov    esi,0x1
  4204da:	mov    rdi,rbx
  4204dd:	mov    edx,r13d
  4204e0:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  4204e5:	mov    esi,0x1
  4204ea:	mov    rdi,rbx
  4204ed:	mov    edx,ebp
  4204ef:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  4204f4:	mov    QWORD PTR [rsp+0x8],r12
  4204f9:	movsxd r13,r12d
  4204fc:	mov    rax,r15
  4204ff:	movsxd r15,eax
  420502:	mov    QWORD PTR [rsp+0x20],rax
  420507:	mov    r14d,eax
  42050a:	mov    r12d,ebp
  42050d:	mov    QWORD PTR [rsp+0x10],r13
  420512:	jmp    420545 <__ctype_b_loc@plt+0x1e275>
  420514:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42051e:	xchg   ax,ax
  420520:	mov    esi,0x1
  420525:	mov    rdi,rbx
  420528:	mov    edx,r14d
  42052b:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  420530:	mov    esi,0x1
  420535:	mov    rdi,rbx
  420538:	mov    edx,r12d
  42053b:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  420540:	mov    r13,QWORD PTR [rsp+0x10]
  420545:	movsxd rbp,r14d
  420548:	mov    rcx,QWORD PTR [rbx+0x10]
  42054c:	jmp    42055f <__ctype_b_loc@plt+0x1e28f>
  42054e:	xchg   ax,ax
  420550:	mov    rcx,QWORD PTR [rbx+0x10]
  420554:	add    rcx,0xfffffffffffffff0
  420558:	mov    QWORD PTR [rbx+0x10],rcx
  42055c:	mov    rbp,r14
  42055f:	lea    r14,[rbp+0x1]
  420563:	mov    rax,QWORD PTR [rbx+0x18]
  420567:	cmp    rax,rcx
  42056a:	lea    rdx,[rip+0xa5a7]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  420571:	cmovae rax,rdx
  420575:	mov    rsi,QWORD PTR [rax]
  420578:	cmp    DWORD PTR [rsi+0x38],ebp
  42057b:	jbe    420590 <__ctype_b_loc@plt+0x1e2c0>
  42057d:	mov    rax,rbp
  420580:	shl    rax,0x4
  420584:	add    rax,QWORD PTR [rsi+0x18]
  420588:	jmp    420603 <__ctype_b_loc@plt+0x1e333>
  42058a:	nop    WORD PTR [rax+rax*1+0x0]
  420590:	vcvtsi2sd xmm0,xmm2,r14d
  420595:	test   r14d,r14d
  420598:	je     4205d9 <__ctype_b_loc@plt+0x1e309>
  42059a:	vmovq  rdx,xmm0
  42059f:	mov    rax,rdx
  4205a2:	shr    rax,0x20
  4205a6:	add    eax,edx
  4205a8:	movzx  edx,BYTE PTR [rsi+0xb]
  4205ac:	mov    rdi,0xffffffffffffffff
  4205b3:	shlx   rdi,rdi,rdx
  4205b8:	or     rdi,0x1
  4205bc:	xor    rdi,0xfffffffffffffffe
  4205c0:	xor    edx,edx
  4205c2:	div    rdi
  4205c5:	lea    rax,[rdx+rdx*4]
  4205c9:	shl    rax,0x3
  4205cd:	add    rax,QWORD PTR [rsi+0x20]
  4205d1:	cmp    DWORD PTR [rax+0x18],0x3
  4205d5:	jne    4205f3 <__ctype_b_loc@plt+0x1e323>
  4205d7:	jmp    4205e6 <__ctype_b_loc@plt+0x1e316>
  4205d9:	mov    rax,QWORD PTR [rsi+0x20]
  4205dd:	nop    DWORD PTR [rax]
  4205e0:	cmp    DWORD PTR [rax+0x18],0x3
  4205e4:	jne    4205f3 <__ctype_b_loc@plt+0x1e323>
  4205e6:	vmovsd xmm1,QWORD PTR [rax+0x10]
  4205eb:	vucomisd xmm1,xmm0
  4205ef:	jne    4205f3 <__ctype_b_loc@plt+0x1e323>
  4205f1:	jnp    420603 <__ctype_b_loc@plt+0x1e333>
  4205f3:	mov    rax,QWORD PTR [rax+0x20]
  4205f7:	test   rax,rax
  4205fa:	jne    4205e0 <__ctype_b_loc@plt+0x1e310>
  4205fc:	lea    rax,[rip+0xa515]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  420603:	mov    rdx,QWORD PTR [rax]
  420606:	mov    QWORD PTR [rcx],rdx
  420609:	mov    eax,DWORD PTR [rax+0x8]
  42060c:	mov    DWORD PTR [rcx+0x8],eax
  42060f:	add    QWORD PTR [rbx+0x10],0x10
  420614:	mov    esi,0xffffffff
  420619:	mov    edx,0xfffffffe
  42061e:	mov    rdi,rbx
  420621:	call   420990 <__ctype_b_loc@plt+0x1e6c0>
  420626:	test   eax,eax
  420628:	je     420650 <__ctype_b_loc@plt+0x1e380>
  42062a:	cmp    rbp,r13
  42062d:	jl     420550 <__ctype_b_loc@plt+0x1e280>
  420633:	xor    eax,eax
  420635:	mov    rdi,rbx
  420638:	lea    rsi,[rip+0xb0b0]        # 42b6ef <__ctype_b_loc@plt+0x2941f>
  42063f:	call   410070 <__ctype_b_loc@plt+0xdda0>
  420644:	jmp    420550 <__ctype_b_loc@plt+0x1e280>
  420649:	nop    DWORD PTR [rax+0x0]
  420650:	movsxd r13,r12d
  420653:	mov    rcx,QWORD PTR [rbx+0x10]
  420657:	jmp    42066f <__ctype_b_loc@plt+0x1e39f>
  420659:	nop    DWORD PTR [rax+0x0]
  420660:	mov    rcx,QWORD PTR [rbx+0x10]
  420664:	add    rcx,0xfffffffffffffff0
  420668:	mov    QWORD PTR [rbx+0x10],rcx
  42066c:	mov    r13,r12
  42066f:	lea    r12,[r13-0x1]
  420673:	mov    rax,QWORD PTR [rbx+0x18]
  420677:	cmp    rax,rcx
  42067a:	lea    rdx,[rip+0xa497]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  420681:	cmovae rax,rdx
  420685:	mov    rsi,QWORD PTR [rax]
  420688:	lea    eax,[r13-0x2]
  42068c:	cmp    eax,DWORD PTR [rsi+0x38]
  42068f:	jae    4206a0 <__ctype_b_loc@plt+0x1e3d0>
  420691:	cdqe   
  420693:	shl    rax,0x4
  420697:	add    rax,QWORD PTR [rsi+0x18]
  42069b:	jmp    420713 <__ctype_b_loc@plt+0x1e443>
  42069d:	nop    DWORD PTR [rax]
  4206a0:	vcvtsi2sd xmm0,xmm2,r12d
  4206a5:	test   r12d,r12d
  4206a8:	je     4206e9 <__ctype_b_loc@plt+0x1e419>
  4206aa:	vmovq  rdx,xmm0
  4206af:	mov    rax,rdx
  4206b2:	shr    rax,0x20
  4206b6:	add    eax,edx
  4206b8:	movzx  edx,BYTE PTR [rsi+0xb]
  4206bc:	mov    rdi,0xffffffffffffffff
  4206c3:	shlx   rdi,rdi,rdx
  4206c8:	or     rdi,0x1
  4206cc:	xor    rdi,0xfffffffffffffffe
  4206d0:	xor    edx,edx
  4206d2:	div    rdi
  4206d5:	lea    rax,[rdx+rdx*4]
  4206d9:	shl    rax,0x3
  4206dd:	add    rax,QWORD PTR [rsi+0x20]
  4206e1:	cmp    DWORD PTR [rax+0x18],0x3
  4206e5:	jne    420703 <__ctype_b_loc@plt+0x1e433>
  4206e7:	jmp    4206f6 <__ctype_b_loc@plt+0x1e426>
  4206e9:	mov    rax,QWORD PTR [rsi+0x20]
  4206ed:	nop    DWORD PTR [rax]
  4206f0:	cmp    DWORD PTR [rax+0x18],0x3
  4206f4:	jne    420703 <__ctype_b_loc@plt+0x1e433>
  4206f6:	vmovsd xmm1,QWORD PTR [rax+0x10]
  4206fb:	vucomisd xmm1,xmm0
  4206ff:	jne    420703 <__ctype_b_loc@plt+0x1e433>
  420701:	jnp    420713 <__ctype_b_loc@plt+0x1e443>
  420703:	mov    rax,QWORD PTR [rax+0x20]
  420707:	test   rax,rax
  42070a:	jne    4206f0 <__ctype_b_loc@plt+0x1e420>
  42070c:	lea    rax,[rip+0xa405]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  420713:	mov    rdx,QWORD PTR [rax]
  420716:	mov    QWORD PTR [rcx],rdx
  420719:	mov    eax,DWORD PTR [rax+0x8]
  42071c:	mov    DWORD PTR [rcx+0x8],eax
  42071f:	add    QWORD PTR [rbx+0x10],0x10
  420724:	mov    esi,0xfffffffd
  420729:	mov    edx,0xffffffff
  42072e:	mov    rdi,rbx
  420731:	call   420990 <__ctype_b_loc@plt+0x1e6c0>
  420736:	test   eax,eax
  420738:	je     420760 <__ctype_b_loc@plt+0x1e490>
  42073a:	cmp    r13,r15
  42073d:	jg     420660 <__ctype_b_loc@plt+0x1e390>
  420743:	xor    eax,eax
  420745:	mov    rdi,rbx
  420748:	lea    rsi,[rip+0xafa0]        # 42b6ef <__ctype_b_loc@plt+0x2941f>
  42074f:	call   410070 <__ctype_b_loc@plt+0xdda0>
  420754:	jmp    420660 <__ctype_b_loc@plt+0x1e390>
  420759:	nop    DWORD PTR [rax+0x0]
  420760:	cmp    r13d,r14d
  420763:	jg     420520 <__ctype_b_loc@plt+0x1e250>
  420769:	mov    rcx,QWORD PTR [rbx+0x10]
  42076d:	mov    rax,QWORD PTR [rbx+0x18]
  420771:	lea    rdx,[rcx-0x30]
  420775:	mov    QWORD PTR [rbx+0x10],rdx
  420779:	cmp    rax,rdx
  42077c:	lea    rdx,[rip+0xa395]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  420783:	cmovae rax,rdx
  420787:	mov    rsi,QWORD PTR [rax]
  42078a:	mov    eax,DWORD PTR [rsp+0x1c]
  42078e:	cmp    eax,DWORD PTR [rsi+0x38]
  420791:	jae    4207b0 <__ctype_b_loc@plt+0x1e4e0>
  420793:	cdqe   
  420795:	shl    rax,0x4
  420799:	add    rax,QWORD PTR [rsi+0x18]
  42079d:	mov    r12,QWORD PTR [rsp+0x8]
  4207a2:	mov    r15,QWORD PTR [rsp+0x20]
  4207a7:	jmp    420833 <__ctype_b_loc@plt+0x1e563>
  4207ac:	nop    DWORD PTR [rax+0x0]
  4207b0:	mov    eax,DWORD PTR [rsp+0x4]
  4207b4:	vcvtsi2sd xmm0,xmm2,eax
  4207b8:	test   eax,eax
  4207ba:	mov    r12,QWORD PTR [rsp+0x8]
  4207bf:	mov    r15,QWORD PTR [rsp+0x20]
  4207c4:	je     420804 <__ctype_b_loc@plt+0x1e534>
  4207c6:	vmovq  rdx,xmm0
  4207cb:	mov    rax,rdx
  4207ce:	shr    rax,0x20
  4207d2:	add    eax,edx
  4207d4:	mov    dl,BYTE PTR [rsi+0xb]
  4207d7:	mov    rdi,0xffffffffffffffff
  4207de:	shlx   rdi,rdi,rdx
  4207e3:	or     rdi,0x1
  4207e7:	xor    rdi,0xfffffffffffffffe
  4207eb:	xor    edx,edx
  4207ed:	div    rdi
  4207f0:	lea    rax,[rdx+rdx*4]
  4207f4:	shl    rax,0x3
  4207f8:	add    rax,QWORD PTR [rsi+0x20]
  4207fc:	cmp    DWORD PTR [rax+0x18],0x3
  420800:	jne    420823 <__ctype_b_loc@plt+0x1e553>
  420802:	jmp    420816 <__ctype_b_loc@plt+0x1e546>
  420804:	mov    rax,QWORD PTR [rsi+0x20]
  420808:	nop    DWORD PTR [rax+rax*1+0x0]
  420810:	cmp    DWORD PTR [rax+0x18],0x3
  420814:	jne    420823 <__ctype_b_loc@plt+0x1e553>
  420816:	vmovsd xmm1,QWORD PTR [rax+0x10]
  42081b:	vucomisd xmm1,xmm0
  42081f:	jne    420823 <__ctype_b_loc@plt+0x1e553>
  420821:	jnp    420833 <__ctype_b_loc@plt+0x1e563>
  420823:	mov    rax,QWORD PTR [rax+0x20]
  420827:	test   rax,rax
  42082a:	jne    420810 <__ctype_b_loc@plt+0x1e540>
  42082c:	lea    rax,[rip+0xa2e5]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  420833:	mov    rdx,QWORD PTR [rax]
  420836:	mov    QWORD PTR [rcx-0x30],rdx
  42083a:	mov    eax,DWORD PTR [rax+0x8]
  42083d:	mov    DWORD PTR [rcx-0x28],eax
  420840:	mov    rcx,QWORD PTR [rbx+0x10]
  420844:	mov    rax,QWORD PTR [rbx+0x18]
  420848:	lea    rdx,[rcx+0x10]
  42084c:	mov    QWORD PTR [rbx+0x10],rdx
  420850:	cmp    rax,rdx
  420853:	lea    rdx,[rip+0xa2be]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  42085a:	cmovae rax,rdx
  42085e:	mov    rsi,QWORD PTR [rax]
  420861:	cmp    DWORD PTR [rsi+0x38],ebp
  420864:	jbe    420880 <__ctype_b_loc@plt+0x1e5b0>
  420866:	movsxd rax,ebp
  420869:	shl    rax,0x4
  42086d:	add    rax,QWORD PTR [rsi+0x18]
  420871:	jmp    4208f3 <__ctype_b_loc@plt+0x1e623>
  420876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420880:	vcvtsi2sd xmm0,xmm2,r14d
  420885:	test   r14d,r14d
  420888:	je     4208c8 <__ctype_b_loc@plt+0x1e5f8>
  42088a:	vmovq  rdx,xmm0
  42088f:	mov    rax,rdx
  420892:	shr    rax,0x20
  420896:	add    eax,edx
  420898:	mov    dl,BYTE PTR [rsi+0xb]
  42089b:	mov    rdi,0xffffffffffffffff
  4208a2:	shlx   rdi,rdi,rdx
  4208a7:	or     rdi,0x1
  4208ab:	xor    rdi,0xfffffffffffffffe
  4208af:	xor    edx,edx
  4208b1:	div    rdi
  4208b4:	lea    rax,[rdx+rdx*4]
  4208b8:	shl    rax,0x3
  4208bc:	add    rax,QWORD PTR [rsi+0x20]
  4208c0:	cmp    DWORD PTR [rax+0x18],0x3
  4208c4:	jne    4208e3 <__ctype_b_loc@plt+0x1e613>
  4208c6:	jmp    4208d6 <__ctype_b_loc@plt+0x1e606>
  4208c8:	mov    rax,QWORD PTR [rsi+0x20]
  4208cc:	nop    DWORD PTR [rax+0x0]
  4208d0:	cmp    DWORD PTR [rax+0x18],0x3
  4208d4:	jne    4208e3 <__ctype_b_loc@plt+0x1e613>
  4208d6:	vmovsd xmm1,QWORD PTR [rax+0x10]
  4208db:	vucomisd xmm1,xmm0
  4208df:	jne    4208e3 <__ctype_b_loc@plt+0x1e613>
  4208e1:	jnp    4208f3 <__ctype_b_loc@plt+0x1e623>
  4208e3:	mov    rax,QWORD PTR [rax+0x20]
  4208e7:	test   rax,rax
  4208ea:	jne    4208d0 <__ctype_b_loc@plt+0x1e600>
  4208ec:	lea    rax,[rip+0xa225]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4208f3:	mov    rdx,QWORD PTR [rax]
  4208f6:	mov    QWORD PTR [rcx+0x10],rdx
  4208fa:	mov    eax,DWORD PTR [rax+0x8]
  4208fd:	mov    DWORD PTR [rcx+0x18],eax
  420900:	add    QWORD PTR [rbx+0x10],0x10
  420905:	mov    esi,0x1
  42090a:	mov    rdi,rbx
  42090d:	mov    edx,DWORD PTR [rsp+0x4]
  420911:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  420916:	mov    esi,0x1
  42091b:	mov    rdi,rbx
  42091e:	mov    edx,r14d
  420921:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  420926:	mov    eax,r12d
  420929:	sub    eax,r14d
  42092c:	sub    r14d,r15d
  42092f:	lea    esi,[rbp+0x2]
  420932:	cmp    r14d,eax
  420935:	mov    r14d,r15d
  420938:	cmovl  r14d,esi
  42093c:	mov    rax,r15
  42093f:	mov    r15d,ebp
  420942:	cmovl  r15d,r12d
  420946:	cmovl  r12d,ebp
  42094a:	cmovl  esi,eax
  42094d:	mov    rdi,rbx
  420950:	mov    edx,r12d
  420953:	call   41fe40 <__ctype_b_loc@plt+0x1db70>
  420958:	mov    r12d,r15d
  42095b:	mov    eax,r14d
  42095e:	cmp    r15d,r14d
  420961:	mov    r15,rax
  420964:	jg     41fe60 <__ctype_b_loc@plt+0x1db90>
  42096a:	jmp    42097a <__ctype_b_loc@plt+0x1e6aa>
  42096c:	add    QWORD PTR [rbx+0x10],0xffffffffffffffe0
  420971:	cmp    ebp,0x2
  420974:	jne    420328 <__ctype_b_loc@plt+0x1e058>
  42097a:	add    rsp,0x28
  42097e:	pop    rbx
  42097f:	pop    r12
  420981:	pop    r13
  420983:	pop    r14
  420985:	pop    r15
  420987:	pop    rbp
  420988:	ret    
  420989:	nop    DWORD PTR [rax+0x0]
  420990:	push   r14
  420992:	push   rbx
  420993:	push   rax
  420994:	mov    ecx,esi
  420996:	mov    r14,rdi
  420999:	mov    rbx,QWORD PTR [rdi+0x10]
  42099d:	mov    rax,QWORD PTR [rdi+0x18]
  4209a1:	lea    rdi,[rax+0x10]
  4209a5:	lea    rsi,[rip+0xa16c]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4209ac:	cmp    rdi,rsi
  4209af:	je     4209c0 <__ctype_b_loc@plt+0x1e6f0>
  4209b1:	cmp    rdi,rbx
  4209b4:	jae    4209c0 <__ctype_b_loc@plt+0x1e6f0>
  4209b6:	cmp    DWORD PTR [rax+0x18],0x0
  4209ba:	je     420a5f <__ctype_b_loc@plt+0x1e78f>
  4209c0:	cmp    rdi,rbx
  4209c3:	lea    rsi,[rip+0xa14e]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4209ca:	cmovae rdi,rsi
  4209ce:	mov    rax,QWORD PTR [rdi]
  4209d1:	mov    QWORD PTR [rbx],rax
  4209d4:	mov    eax,DWORD PTR [rdi+0x8]
  4209d7:	mov    DWORD PTR [rbx+0x8],eax
  4209da:	mov    rax,QWORD PTR [r14+0x10]
  4209de:	lea    rdi,[rax+0x10]
  4209e2:	mov    QWORD PTR [r14+0x10],rdi
  4209e6:	cmp    ecx,0x2
  4209e9:	jl     420a10 <__ctype_b_loc@plt+0x1e740>
  4209eb:	mov    rsi,QWORD PTR [r14+0x18]
  4209ef:	movsxd rcx,ecx
  4209f2:	shl    rcx,0x4
  4209f6:	add    rcx,rsi
  4209f9:	add    rcx,0xffffffffffffffe0
  4209fd:	cmp    rcx,rdi
  420a00:	lea    rsi,[rip+0xa111]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  420a07:	cmovb  rsi,rcx
  420a0b:	jmp    420b1b <__ctype_b_loc@plt+0x1e84b>
  420a10:	cmp    ecx,0xffffd8f2
  420a16:	jl     420a2d <__ctype_b_loc@plt+0x1e75d>
  420a18:	add    ecx,0xffffffff
  420a1b:	movsxd rcx,ecx
  420a1e:	shl    rcx,0x4
  420a22:	add    rdi,rcx
  420a25:	mov    rsi,rdi
  420a28:	jmp    420b1b <__ctype_b_loc@plt+0x1e84b>
  420a2d:	cmp    ecx,0xffffd8ef
  420a33:	je     420ac2 <__ctype_b_loc@plt+0x1e7f2>
  420a39:	cmp    ecx,0xffffd8f0
  420a3f:	je     420ac8 <__ctype_b_loc@plt+0x1e7f8>
  420a45:	cmp    ecx,0xffffd8f1
  420a4b:	jne    420af2 <__ctype_b_loc@plt+0x1e822>
  420a51:	mov    esi,0xa0
  420a56:	add    rsi,QWORD PTR [r14+0x20]
  420a5a:	jmp    420b1b <__ctype_b_loc@plt+0x1e84b>
  420a5f:	test   ecx,ecx
  420a61:	jle    420aa2 <__ctype_b_loc@plt+0x1e7d2>
  420a63:	movsxd rcx,ecx
  420a66:	shl    rcx,0x4
  420a6a:	add    rcx,rax
  420a6d:	add    rcx,0xfffffffffffffff0
  420a71:	cmp    rcx,rbx
  420a74:	lea    rsi,[rip+0xa09d]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  420a7b:	cmovb  rsi,rcx
  420a7f:	test   edx,edx
  420a81:	jg     420da0 <__ctype_b_loc@plt+0x1ead0>
  420a87:	cmp    edx,0xffffd8f1
  420a8d:	jl     420bf7 <__ctype_b_loc@plt+0x1e927>
  420a93:	movsxd rax,edx
  420a96:	shl    rax,0x4
  420a9a:	add    rbx,rax
  420a9d:	jmp    420dbc <__ctype_b_loc@plt+0x1eaec>
  420aa2:	cmp    ecx,0xffffd8f1
  420aa8:	jl     420c29 <__ctype_b_loc@plt+0x1e959>
  420aae:	movsxd rsi,ecx
  420ab1:	shl    rsi,0x4
  420ab5:	add    rsi,rbx
  420ab8:	test   edx,edx
  420aba:	jg     420da0 <__ctype_b_loc@plt+0x1ead0>
  420ac0:	jmp    420a87 <__ctype_b_loc@plt+0x1e7b7>
  420ac2:	lea    rsi,[r14+0x78]
  420ac6:	jmp    420b1b <__ctype_b_loc@plt+0x1e84b>
  420ac8:	mov    rcx,QWORD PTR [r14+0x28]
  420acc:	mov    rcx,QWORD PTR [rcx+0x8]
  420ad0:	mov    rcx,QWORD PTR [rcx]
  420ad3:	lea    rsi,[r14+0x88]
  420ada:	mov    rcx,QWORD PTR [rcx+0x18]
  420ade:	mov    QWORD PTR [r14+0x88],rcx
  420ae5:	mov    DWORD PTR [r14+0x90],0x5
  420af0:	jmp    420b1b <__ctype_b_loc@plt+0x1e84b>
  420af2:	mov    rdi,QWORD PTR [r14+0x28]
  420af6:	mov    rdi,QWORD PTR [rdi+0x8]
  420afa:	mov    rdi,QWORD PTR [rdi]
  420afd:	mov    ebx,0xffffd8ef
  420b02:	sub    ebx,ecx
  420b04:	movzx  ecx,BYTE PTR [rdi+0xb]
  420b08:	cmp    ebx,ecx
  420b0a:	jg     420b1b <__ctype_b_loc@plt+0x1e84b>
  420b0c:	movsxd rcx,ebx
  420b0f:	shl    rcx,0x4
  420b13:	lea    rsi,[rdi+rcx*1]
  420b17:	add    rsi,0x18
  420b1b:	mov    rcx,QWORD PTR [rsi]
  420b1e:	mov    QWORD PTR [rax+0x10],rcx
  420b22:	mov    ecx,DWORD PTR [rsi+0x8]
  420b25:	mov    DWORD PTR [rax+0x18],ecx
  420b28:	mov    rax,QWORD PTR [r14+0x10]
  420b2c:	lea    rcx,[rax+0x10]
  420b30:	mov    QWORD PTR [r14+0x10],rcx
  420b34:	cmp    edx,0x3
  420b37:	jl     420b5e <__ctype_b_loc@plt+0x1e88e>
  420b39:	mov    rsi,QWORD PTR [r14+0x18]
  420b3d:	movsxd rdx,edx
  420b40:	shl    rdx,0x4
  420b44:	add    rdx,rsi
  420b47:	add    rdx,0xffffffffffffffd0
  420b4b:	cmp    rdx,rcx
  420b4e:	lea    rcx,[rip+0x9fc3]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  420b55:	cmovb  rcx,rdx
  420b59:	jmp    420c71 <__ctype_b_loc@plt+0x1e9a1>
  420b5e:	cmp    edx,0xffffd8f3
  420b64:	jl     420b78 <__ctype_b_loc@plt+0x1e8a8>
  420b66:	add    edx,0xfffffffe
  420b69:	movsxd rdx,edx
  420b6c:	shl    rdx,0x4
  420b70:	add    rcx,rdx
  420b73:	jmp    420c71 <__ctype_b_loc@plt+0x1e9a1>
  420b78:	cmp    edx,0xffffd8f0
  420b7e:	je     420b9e <__ctype_b_loc@plt+0x1e8ce>
  420b80:	cmp    edx,0xffffd8f1
  420b86:	je     420ba7 <__ctype_b_loc@plt+0x1e8d7>
  420b88:	cmp    edx,0xffffd8f2
  420b8e:	jne    420bd4 <__ctype_b_loc@plt+0x1e904>
  420b90:	mov    ecx,0xa0
  420b95:	add    rcx,QWORD PTR [r14+0x20]
  420b99:	jmp    420c71 <__ctype_b_loc@plt+0x1e9a1>
  420b9e:	lea    rcx,[r14+0x78]
  420ba2:	jmp    420c71 <__ctype_b_loc@plt+0x1e9a1>
  420ba7:	mov    rcx,QWORD PTR [r14+0x28]
  420bab:	mov    rcx,QWORD PTR [rcx+0x8]
  420baf:	mov    rdx,QWORD PTR [rcx]
  420bb2:	lea    rcx,[r14+0x88]
  420bb9:	mov    rdx,QWORD PTR [rdx+0x18]
  420bbd:	mov    QWORD PTR [r14+0x88],rdx
  420bc4:	mov    DWORD PTR [r14+0x90],0x5
  420bcf:	jmp    420c71 <__ctype_b_loc@plt+0x1e9a1>
  420bd4:	mov    rcx,QWORD PTR [r14+0x28]
  420bd8:	mov    rcx,QWORD PTR [rcx+0x8]
  420bdc:	mov    rcx,QWORD PTR [rcx]
  420bdf:	mov    esi,0xffffd8f0
  420be4:	sub    esi,edx
  420be6:	movzx  edx,BYTE PTR [rcx+0xb]
  420bea:	cmp    esi,edx
  420bec:	jle    420c63 <__ctype_b_loc@plt+0x1e993>
  420bee:	lea    rcx,[rip+0x9f23]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  420bf5:	jmp    420c71 <__ctype_b_loc@plt+0x1e9a1>
  420bf7:	cmp    edx,0xffffd8ee
  420bfd:	je     420cca <__ctype_b_loc@plt+0x1e9fa>
  420c03:	cmp    edx,0xffffd8ef
  420c09:	je     420cd3 <__ctype_b_loc@plt+0x1ea03>
  420c0f:	cmp    edx,0xffffd8f0
  420c15:	jne    420d00 <__ctype_b_loc@plt+0x1ea30>
  420c1b:	mov    ebx,0xa0
  420c20:	add    rbx,QWORD PTR [r14+0x20]
  420c24:	jmp    420dbc <__ctype_b_loc@plt+0x1eaec>
  420c29:	cmp    ecx,0xffffd8ee
  420c2f:	je     420d30 <__ctype_b_loc@plt+0x1ea60>
  420c35:	cmp    ecx,0xffffd8ef
  420c3b:	je     420d3d <__ctype_b_loc@plt+0x1ea6d>
  420c41:	cmp    ecx,0xffffd8f0
  420c47:	jne    420d6e <__ctype_b_loc@plt+0x1ea9e>
  420c4d:	mov    esi,0xa0
  420c52:	add    rsi,QWORD PTR [r14+0x20]
  420c56:	test   edx,edx
  420c58:	jg     420da0 <__ctype_b_loc@plt+0x1ead0>
  420c5e:	jmp    420a87 <__ctype_b_loc@plt+0x1e7b7>
  420c63:	movsxd rdx,esi
  420c66:	shl    rdx,0x4
  420c6a:	add    rcx,rdx
  420c6d:	add    rcx,0x18
  420c71:	mov    rdx,QWORD PTR [rcx]
  420c74:	mov    QWORD PTR [rax+0x10],rdx
  420c78:	mov    ecx,DWORD PTR [rcx+0x8]
  420c7b:	mov    DWORD PTR [rax+0x18],ecx
  420c7e:	mov    rsi,QWORD PTR [r14+0x10]
  420c82:	lea    rax,[rsi+0x10]
  420c86:	mov    QWORD PTR [r14+0x10],rax
  420c8a:	add    rsi,0xffffffffffffffe0
  420c8e:	mov    edx,0x1
  420c93:	mov    rdi,r14
  420c96:	call   404ff0 <__ctype_b_loc@plt+0x2d20>
  420c9b:	mov    rcx,QWORD PTR [r14+0x10]
  420c9f:	mov    eax,DWORD PTR [rcx-0x8]
  420ca2:	add    rcx,0xfffffffffffffff0
  420ca6:	test   eax,eax
  420ca8:	je     420cbe <__ctype_b_loc@plt+0x1e9ee>
  420caa:	cmp    eax,0x1
  420cad:	jne    420cb9 <__ctype_b_loc@plt+0x1e9e9>
  420caf:	xor    eax,eax
  420cb1:	cmp    DWORD PTR [rcx],0x0
  420cb4:	setne  al
  420cb7:	jmp    420cbe <__ctype_b_loc@plt+0x1e9ee>
  420cb9:	mov    eax,0x1
  420cbe:	mov    QWORD PTR [r14+0x10],rcx
  420cc2:	add    rsp,0x8
  420cc6:	pop    rbx
  420cc7:	pop    r14
  420cc9:	ret    
  420cca:	lea    rbx,[r14+0x78]
  420cce:	jmp    420dbc <__ctype_b_loc@plt+0x1eaec>
  420cd3:	mov    rax,QWORD PTR [r14+0x28]
  420cd7:	mov    rax,QWORD PTR [rax+0x8]
  420cdb:	mov    rax,QWORD PTR [rax]
  420cde:	lea    rbx,[r14+0x88]
  420ce5:	mov    rax,QWORD PTR [rax+0x18]
  420ce9:	mov    QWORD PTR [r14+0x88],rax
  420cf0:	mov    DWORD PTR [r14+0x90],0x5
  420cfb:	jmp    420dbc <__ctype_b_loc@plt+0x1eaec>
  420d00:	mov    rax,QWORD PTR [r14+0x28]
  420d04:	mov    rax,QWORD PTR [rax+0x8]
  420d08:	mov    rcx,QWORD PTR [rax]
  420d0b:	mov    edi,0xffffd8ee
  420d10:	sub    edi,edx
  420d12:	movzx  edx,BYTE PTR [rcx+0xb]
  420d16:	xor    eax,eax
  420d18:	cmp    edi,edx
  420d1a:	jg     420cc2 <__ctype_b_loc@plt+0x1e9f2>
  420d1c:	movsxd rax,edi
  420d1f:	shl    rax,0x4
  420d23:	lea    rbx,[rcx+rax*1]
  420d27:	add    rbx,0x18
  420d2b:	jmp    420dbc <__ctype_b_loc@plt+0x1eaec>
  420d30:	lea    rsi,[r14+0x78]
  420d34:	test   edx,edx
  420d36:	jg     420da0 <__ctype_b_loc@plt+0x1ead0>
  420d38:	jmp    420a87 <__ctype_b_loc@plt+0x1e7b7>
  420d3d:	mov    rcx,QWORD PTR [r14+0x28]
  420d41:	mov    rcx,QWORD PTR [rcx+0x8]
  420d45:	mov    rcx,QWORD PTR [rcx]
  420d48:	lea    rsi,[r14+0x88]
  420d4f:	mov    rcx,QWORD PTR [rcx+0x18]
  420d53:	mov    QWORD PTR [r14+0x88],rcx
  420d5a:	mov    DWORD PTR [r14+0x90],0x5
  420d65:	test   edx,edx
  420d67:	jg     420da0 <__ctype_b_loc@plt+0x1ead0>
  420d69:	jmp    420a87 <__ctype_b_loc@plt+0x1e7b7>
  420d6e:	mov    rdi,QWORD PTR [r14+0x28]
  420d72:	mov    rdi,QWORD PTR [rdi+0x8]
  420d76:	mov    r8,QWORD PTR [rdi]
  420d79:	mov    edi,0xffffd8ee
  420d7e:	sub    edi,ecx
  420d80:	movzx  ecx,BYTE PTR [r8+0xb]
  420d85:	cmp    edi,ecx
  420d87:	jg     420d98 <__ctype_b_loc@plt+0x1eac8>
  420d89:	movsxd rcx,edi
  420d8c:	shl    rcx,0x4
  420d90:	lea    rsi,[r8+rcx*1]
  420d94:	add    rsi,0x18
  420d98:	test   edx,edx
  420d9a:	jle    420a87 <__ctype_b_loc@plt+0x1e7b7>
  420da0:	movsxd rcx,edx
  420da3:	shl    rcx,0x4
  420da7:	add    rax,rcx
  420daa:	add    rax,0xfffffffffffffff0
  420dae:	cmp    rax,rbx
  420db1:	lea    rbx,[rip+0x9d60]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  420db8:	cmovb  rbx,rax
  420dbc:	lea    rcx,[rip+0x9d55]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  420dc3:	xor    eax,eax
  420dc5:	cmp    rsi,rcx
  420dc8:	je     420cc2 <__ctype_b_loc@plt+0x1e9f2>
  420dce:	cmp    rbx,rcx
  420dd1:	je     420cc2 <__ctype_b_loc@plt+0x1e9f2>
  420dd7:	mov    rdi,r14
  420dda:	mov    rdx,rbx
  420ddd:	add    rsp,0x8
  420de1:	pop    rbx
  420de2:	pop    r14
  420de4:	jmp    409880 <__ctype_b_loc@plt+0x75b0>
  420de9:	nop    DWORD PTR [rax+0x0]
  420df0:	push   rbp
  420df1:	push   r14
  420df3:	push   rbx
  420df4:	mov    r14,rdi
  420df7:	call   421370 <__ctype_b_loc@plt+0x1f0a0>
  420dfc:	mov    rbx,rax
  420dff:	mov    rdi,QWORD PTR [rax]
  420e02:	call   4020d0 <fclose@plt>
  420e07:	mov    ebp,eax
  420e09:	mov    QWORD PTR [rbx],0x0
  420e10:	call   402050 <__errno_location@plt>
  420e15:	mov    rcx,QWORD PTR [r14+0x10]
  420e19:	test   ebp,ebp
  420e1b:	je     420e5f <__ctype_b_loc@plt+0x1eb8f>
  420e1d:	mov    ebx,DWORD PTR [rax]
  420e1f:	mov    DWORD PTR [rcx+0x8],0x0
  420e26:	add    rcx,0x10
  420e2a:	mov    QWORD PTR [r14+0x10],rcx
  420e2e:	mov    edi,ebx
  420e30:	call   4022a0 <strerror@plt>
  420e35:	mov    rcx,rax
  420e38:	lea    rsi,[rip+0x9fa8]        # 42ade7 <__ctype_b_loc@plt+0x28b17>
  420e3f:	xor    eax,eax
  420e41:	mov    rdi,r14
  420e44:	mov    rdx,rcx
  420e47:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  420e4c:	mov    rcx,QWORD PTR [r14+0x10]
  420e50:	vcvtsi2sd xmm0,xmm0,ebx
  420e54:	vmovsd QWORD PTR [rcx],xmm0
  420e58:	mov    eax,0x3
  420e5d:	jmp    420e6a <__ctype_b_loc@plt+0x1eb9a>
  420e5f:	mov    DWORD PTR [rcx],0x1
  420e65:	mov    eax,0x1
  420e6a:	mov    DWORD PTR [rcx+0x8],eax
  420e6d:	add    QWORD PTR [r14+0x10],0x10
  420e72:	pop    rbx
  420e73:	pop    r14
  420e75:	pop    rbp
  420e76:	ret    
  420e77:	nop    WORD PTR [rax+rax*1+0x0]
  420e80:	push   r14
  420e82:	push   rbx
  420e83:	push   rax
  420e84:	mov    r14,rdi
  420e87:	mov    rbx,QWORD PTR [rdi+0x10]
  420e8b:	mov    DWORD PTR [rbx+0x8],0x0
  420e92:	add    rbx,0x10
  420e96:	mov    QWORD PTR [rdi+0x10],rbx
  420e9a:	mov    rax,QWORD PTR [rdi+0x20]
  420e9e:	mov    rcx,QWORD PTR [rax+0x78]
  420ea2:	cmp    rcx,QWORD PTR [rax+0x70]
  420ea6:	jb     420eb4 <__ctype_b_loc@plt+0x1ebe4>
  420ea8:	mov    rdi,r14
  420eab:	call   408070 <__ctype_b_loc@plt+0x5da0>
  420eb0:	mov    rbx,QWORD PTR [r14+0x10]
  420eb4:	lea    rsi,[rip+0xa92d]        # 42b7e8 <__ctype_b_loc@plt+0x29518>
  420ebb:	mov    edx,0x1a
  420ec0:	mov    rdi,r14
  420ec3:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  420ec8:	mov    QWORD PTR [rbx],rax
  420ecb:	mov    DWORD PTR [rbx+0x8],0x4
  420ed2:	add    QWORD PTR [r14+0x10],0x10
  420ed7:	mov    eax,0x2
  420edc:	add    rsp,0x8
  420ee0:	pop    rbx
  420ee1:	pop    r14
  420ee3:	ret    
  420ee4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420eee:	xchg   ax,ax
  420ef0:	push   rbp
  420ef1:	push   rbx
  420ef2:	push   rax
  420ef3:	mov    rbx,rdi
  420ef6:	call   421370 <__ctype_b_loc@plt+0x1f0a0>
  420efb:	mov    QWORD PTR [rax],0x0
  420f02:	call   402050 <__errno_location@plt>
  420f07:	mov    ebp,DWORD PTR [rax]
  420f09:	mov    rax,QWORD PTR [rbx+0x10]
  420f0d:	mov    DWORD PTR [rax+0x8],0x0
  420f14:	add    rax,0x10
  420f18:	mov    QWORD PTR [rbx+0x10],rax
  420f1c:	mov    edi,ebp
  420f1e:	call   4022a0 <strerror@plt>
  420f23:	mov    rcx,rax
  420f26:	lea    rsi,[rip+0x9eba]        # 42ade7 <__ctype_b_loc@plt+0x28b17>
  420f2d:	xor    eax,eax
  420f2f:	mov    rdi,rbx
  420f32:	mov    rdx,rcx
  420f35:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  420f3a:	mov    rax,QWORD PTR [rbx+0x10]
  420f3e:	vcvtsi2sd xmm0,xmm0,ebp
  420f42:	vmovsd QWORD PTR [rax],xmm0
  420f46:	mov    DWORD PTR [rax+0x8],0x3
  420f4d:	add    QWORD PTR [rbx+0x10],0x10
  420f52:	mov    eax,0x3
  420f57:	add    rsp,0x8
  420f5b:	pop    rbx
  420f5c:	pop    rbp
  420f5d:	ret    
  420f5e:	xchg   ax,ax
  420f60:	push   r14
  420f62:	push   rbx
  420f63:	sub    rsp,0x18
  420f67:	mov    rbx,rdi
  420f6a:	mov    rcx,QWORD PTR [rdi+0x10]
  420f6e:	mov    rax,QWORD PTR [rdi+0x18]
  420f72:	lea    r14,[rip+0x9b9f]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  420f79:	cmp    rax,r14
  420f7c:	je     420f8d <__ctype_b_loc@plt+0x1ecbd>
  420f7e:	cmp    rax,rcx
  420f81:	jae    420f8d <__ctype_b_loc@plt+0x1ecbd>
  420f83:	cmp    DWORD PTR [rax+0x8],0xffffffff
  420f87:	jne    421030 <__ctype_b_loc@plt+0x1ed60>
  420f8d:	mov    rax,QWORD PTR [rbx+0x28]
  420f91:	mov    rax,QWORD PTR [rax+0x8]
  420f95:	mov    rax,QWORD PTR [rax]
  420f98:	mov    rsi,QWORD PTR [rax+0x18]
  420f9c:	mov    QWORD PTR [rbx+0x88],rsi
  420fa3:	mov    DWORD PTR [rbx+0x90],0x5
  420fad:	cmp    DWORD PTR [rsi+0x38],0x2
  420fb1:	jb     420fbd <__ctype_b_loc@plt+0x1eced>
  420fb3:	mov    rax,QWORD PTR [rsi+0x18]
  420fb7:	add    rax,0x10
  420fbb:	jmp    42101f <__ctype_b_loc@plt+0x1ed4f>
  420fbd:	mov    al,BYTE PTR [rsi+0xb]
  420fc0:	mov    rdx,0xffffffffffffffff
  420fc7:	shlx   rdi,rdx,rax
  420fcc:	or     rdi,0x1
  420fd0:	xor    rdi,0xfffffffffffffffe
  420fd4:	mov    eax,0x40000000
  420fd9:	xor    edx,edx
  420fdb:	div    rdi
  420fde:	lea    rax,[rdx+rdx*4]
  420fe2:	shl    rax,0x3
  420fe6:	add    rax,QWORD PTR [rsi+0x20]
  420fea:	vmovsd xmm0,QWORD PTR [rip+0x9d66]        # 42ad58 <__ctype_b_loc@plt+0x28a88>
  420ff2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420ffc:	nop    DWORD PTR [rax+0x0]
  421000:	cmp    DWORD PTR [rax+0x18],0x3
  421004:	jne    421013 <__ctype_b_loc@plt+0x1ed43>
  421006:	vmovsd xmm1,QWORD PTR [rax+0x10]
  42100b:	vucomisd xmm1,xmm0
  42100f:	jne    421013 <__ctype_b_loc@plt+0x1ed43>
  421011:	jnp    42101f <__ctype_b_loc@plt+0x1ed4f>
  421013:	mov    rax,QWORD PTR [rax+0x20]
  421017:	test   rax,rax
  42101a:	jne    421000 <__ctype_b_loc@plt+0x1ed30>
  42101c:	mov    rax,r14
  42101f:	mov    rdx,QWORD PTR [rax]
  421022:	mov    QWORD PTR [rcx],rdx
  421025:	mov    eax,DWORD PTR [rax+0x8]
  421028:	mov    DWORD PTR [rcx+0x8],eax
  42102b:	add    QWORD PTR [rbx+0x10],0x10
  421030:	mov    rdi,rbx
  421033:	call   421370 <__ctype_b_loc@plt+0x1f0a0>
  421038:	cmp    QWORD PTR [rax],0x0
  42103c:	jne    42104f <__ctype_b_loc@plt+0x1ed7f>
  42103e:	lea    rsi,[rip+0xa6f3]        # 42b738 <__ctype_b_loc@plt+0x29468>
  421045:	xor    eax,eax
  421047:	mov    rdi,rbx
  42104a:	call   410070 <__ctype_b_loc@plt+0xdda0>
  42104f:	mov    rax,QWORD PTR [rbx+0x10]
  421053:	mov    rcx,QWORD PTR [rbx+0x18]
  421057:	cmp    rcx,rax
  42105a:	cmovb  r14,rcx
  42105e:	mov    edx,DWORD PTR [r14+0x8]
  421062:	cmp    edx,0x8
  421065:	je     421084 <__ctype_b_loc@plt+0x1edb4>
  421067:	cmp    edx,0x7
  42106a:	je     421073 <__ctype_b_loc@plt+0x1eda3>
  42106c:	xor    ecx,ecx
  42106e:	cmp    edx,0x6
  421071:	jne    421094 <__ctype_b_loc@plt+0x1edc4>
  421073:	mov    rcx,QWORD PTR [r14]
  421076:	mov    rcx,QWORD PTR [rcx+0x18]
  42107a:	mov    QWORD PTR [rax],rcx
  42107d:	mov    ecx,0x5
  421082:	jmp    421094 <__ctype_b_loc@plt+0x1edc4>
  421084:	mov    rcx,QWORD PTR [r14]
  421087:	mov    rdx,QWORD PTR [rcx+0x78]
  42108b:	mov    QWORD PTR [rax],rdx
  42108e:	mov    ecx,DWORD PTR [rcx+0x80]
  421094:	mov    DWORD PTR [rax+0x8],ecx
  421097:	mov    r14,QWORD PTR [rbx+0x10]
  42109b:	lea    rax,[r14+0x10]
  42109f:	mov    QWORD PTR [rbx+0x10],rax
  4210a3:	lea    rsi,[rip+0xa6ab]        # 42b755 <__ctype_b_loc@plt+0x29485>
  4210aa:	mov    edx,0x7
  4210af:	mov    rdi,rbx
  4210b2:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  4210b7:	mov    QWORD PTR [rsp+0x8],rax
  4210bc:	mov    DWORD PTR [rsp+0x10],0x4
  4210c4:	mov    rcx,QWORD PTR [rbx+0x10]
  4210c8:	lea    rdx,[rsp+0x8]
  4210cd:	mov    rdi,rbx
  4210d0:	mov    rsi,r14
  4210d3:	call   408700 <__ctype_b_loc@plt+0x6430>
  4210d8:	mov    rax,QWORD PTR [rbx+0x10]
  4210dc:	lea    rcx,[rax+0x10]
  4210e0:	mov    QWORD PTR [rbx+0x10],rcx
  4210e4:	mov    rax,QWORD PTR [rax]
  4210e7:	mov    rdi,rbx
  4210ea:	add    rsp,0x18
  4210ee:	pop    rbx
  4210ef:	pop    r14
  4210f1:	jmp    QWORD PTR [rax+0x20]
  4210f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4210fe:	xchg   ax,ax
  421100:	push   rbp
  421101:	push   r14
  421103:	push   rbx
  421104:	mov    rbx,rdi
  421107:	call   421370 <__ctype_b_loc@plt+0x1f0a0>
  42110c:	mov    rdi,QWORD PTR [rax]
  42110f:	test   rdi,rdi
  421112:	jne    42112b <__ctype_b_loc@plt+0x1ee5b>
  421114:	mov    r14,rax
  421117:	lea    rsi,[rip+0xa61a]        # 42b738 <__ctype_b_loc@plt+0x29468>
  42111e:	xor    eax,eax
  421120:	mov    rdi,rbx
  421123:	call   410070 <__ctype_b_loc@plt+0xdda0>
  421128:	mov    rdi,QWORD PTR [r14]
  42112b:	call   4021e0 <fflush@plt>
  421130:	mov    ebp,eax
  421132:	call   402050 <__errno_location@plt>
  421137:	mov    rcx,QWORD PTR [rbx+0x10]
  42113b:	test   ebp,ebp
  42113d:	je     421181 <__ctype_b_loc@plt+0x1eeb1>
  42113f:	mov    ebp,DWORD PTR [rax]
  421141:	mov    DWORD PTR [rcx+0x8],0x0
  421148:	add    rcx,0x10
  42114c:	mov    QWORD PTR [rbx+0x10],rcx
  421150:	mov    edi,ebp
  421152:	call   4022a0 <strerror@plt>
  421157:	mov    rcx,rax
  42115a:	lea    rsi,[rip+0x9c86]        # 42ade7 <__ctype_b_loc@plt+0x28b17>
  421161:	xor    eax,eax
  421163:	mov    rdi,rbx
  421166:	mov    rdx,rcx
  421169:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  42116e:	mov    rcx,QWORD PTR [rbx+0x10]
  421172:	vcvtsi2sd xmm0,xmm0,ebp
  421176:	vmovsd QWORD PTR [rcx],xmm0
  42117a:	mov    eax,0x3
  42117f:	jmp    42118c <__ctype_b_loc@plt+0x1eebc>
  421181:	mov    DWORD PTR [rcx],0x1
  421187:	mov    eax,0x1
  42118c:	mov    DWORD PTR [rcx+0x8],eax
  42118f:	add    QWORD PTR [rbx+0x10],0x10
  421194:	pop    rbx
  421195:	pop    r14
  421197:	pop    rbp
  421198:	ret    
  421199:	nop    DWORD PTR [rax+0x0]
  4211a0:	push   rbx
  4211a1:	mov    rbx,rdi
  4211a4:	call   421370 <__ctype_b_loc@plt+0x1f0a0>
  4211a9:	cmp    QWORD PTR [rax],0x0
  4211ad:	jne    4211c0 <__ctype_b_loc@plt+0x1eef0>
  4211af:	lea    rsi,[rip+0xa582]        # 42b738 <__ctype_b_loc@plt+0x29468>
  4211b6:	xor    eax,eax
  4211b8:	mov    rdi,rbx
  4211bb:	call   410070 <__ctype_b_loc@plt+0xdda0>
  4211c0:	mov    rax,QWORD PTR [rbx+0x10]
  4211c4:	mov    rcx,QWORD PTR [rbx+0x18]
  4211c8:	cmp    rcx,rax
  4211cb:	lea    rdx,[rip+0x9946]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4211d2:	cmovb  rdx,rcx
  4211d6:	mov    rcx,QWORD PTR [rdx]
  4211d9:	mov    QWORD PTR [rax],rcx
  4211dc:	mov    ecx,DWORD PTR [rdx+0x8]
  4211df:	mov    DWORD PTR [rax+0x8],ecx
  4211e2:	mov    rax,QWORD PTR [rbx+0x10]
  4211e6:	lea    rcx,[rax+0x10]
  4211ea:	mov    QWORD PTR [rbx+0x10],rcx
  4211ee:	mov    DWORD PTR [rax+0x10],0x0
  4211f5:	mov    DWORD PTR [rax+0x18],0x1
  4211fc:	add    QWORD PTR [rbx+0x10],0x10
  421201:	lea    rsi,[rip+0x2e8]        # 4214f0 <__ctype_b_loc@plt+0x1f220>
  421208:	mov    edx,0x2
  42120d:	mov    rdi,rbx
  421210:	call   40bb90 <__ctype_b_loc@plt+0x98c0>
  421215:	mov    eax,0x1
  42121a:	pop    rbx
  42121b:	ret    
  42121c:	nop    DWORD PTR [rax+0x0]
  421220:	push   r14
  421222:	push   rbx
  421223:	push   rax
  421224:	mov    rbx,rdi
  421227:	call   421370 <__ctype_b_loc@plt+0x1f0a0>
  42122c:	mov    rsi,QWORD PTR [rax]
  42122f:	test   rsi,rsi
  421232:	jne    42124b <__ctype_b_loc@plt+0x1ef7b>
  421234:	mov    r14,rax
  421237:	lea    rsi,[rip+0xa4fa]        # 42b738 <__ctype_b_loc@plt+0x29468>
  42123e:	xor    eax,eax
  421240:	mov    rdi,rbx
  421243:	call   410070 <__ctype_b_loc@plt+0xdda0>
  421248:	mov    rsi,QWORD PTR [r14]
  42124b:	mov    edx,0x2
  421250:	mov    rdi,rbx
  421253:	add    rsp,0x8
  421257:	pop    rbx
  421258:	pop    r14
  42125a:	jmp    4218c0 <__ctype_b_loc@plt+0x1f5f0>
  42125f:	nop
  421260:	push   r14
  421262:	push   rbx
  421263:	push   rax
  421264:	mov    rbx,rdi
  421267:	call   421370 <__ctype_b_loc@plt+0x1f0a0>
  42126c:	mov    rsi,QWORD PTR [rax]
  42126f:	test   rsi,rsi
  421272:	jne    42128b <__ctype_b_loc@plt+0x1efbb>
  421274:	mov    r14,rax
  421277:	lea    rsi,[rip+0xa4ba]        # 42b738 <__ctype_b_loc@plt+0x29468>
  42127e:	xor    eax,eax
  421280:	mov    rdi,rbx
  421283:	call   410070 <__ctype_b_loc@plt+0xdda0>
  421288:	mov    rsi,QWORD PTR [r14]
  42128b:	mov    edx,0x2
  421290:	mov    rdi,rbx
  421293:	add    rsp,0x8
  421297:	pop    rbx
  421298:	pop    r14
  42129a:	jmp    4221a0 <__ctype_b_loc@plt+0x1fed0>
  42129f:	nop
  4212a0:	push   r14
  4212a2:	push   rbx
  4212a3:	sub    rsp,0x18
  4212a7:	mov    rbx,rdi
  4212aa:	call   421370 <__ctype_b_loc@plt+0x1f0a0>
  4212af:	cmp    QWORD PTR [rax],0x0
  4212b3:	je     42135d <__ctype_b_loc@plt+0x1f08d>
  4212b9:	mov    rax,QWORD PTR [rbx+0x10]
  4212bd:	mov    rdx,QWORD PTR [rbx+0x18]
  4212c1:	cmp    rdx,rax
  4212c4:	lea    rcx,[rip+0x984d]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4212cb:	cmovb  rcx,rdx
  4212cf:	mov    esi,DWORD PTR [rcx+0x8]
  4212d2:	cmp    esi,0x8
  4212d5:	je     4212f4 <__ctype_b_loc@plt+0x1f024>
  4212d7:	cmp    esi,0x7
  4212da:	je     4212e3 <__ctype_b_loc@plt+0x1f013>
  4212dc:	xor    edx,edx
  4212de:	cmp    esi,0x6
  4212e1:	jne    421304 <__ctype_b_loc@plt+0x1f034>
  4212e3:	mov    rcx,QWORD PTR [rcx]
  4212e6:	mov    rcx,QWORD PTR [rcx+0x18]
  4212ea:	mov    QWORD PTR [rax],rcx
  4212ed:	mov    edx,0x5
  4212f2:	jmp    421304 <__ctype_b_loc@plt+0x1f034>
  4212f4:	mov    rcx,QWORD PTR [rcx]
  4212f7:	mov    rdx,QWORD PTR [rcx+0x78]
  4212fb:	mov    QWORD PTR [rax],rdx
  4212fe:	mov    edx,DWORD PTR [rcx+0x80]
  421304:	mov    DWORD PTR [rax+0x8],edx
  421307:	mov    r14,QWORD PTR [rbx+0x10]
  42130b:	lea    rax,[r14+0x10]
  42130f:	mov    QWORD PTR [rbx+0x10],rax
  421313:	lea    rsi,[rip+0xa43b]        # 42b755 <__ctype_b_loc@plt+0x29485>
  42131a:	mov    edx,0x7
  42131f:	mov    rdi,rbx
  421322:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  421327:	mov    QWORD PTR [rsp+0x8],rax
  42132c:	mov    DWORD PTR [rsp+0x10],0x4
  421334:	mov    rcx,QWORD PTR [rbx+0x10]
  421338:	lea    rdx,[rsp+0x8]
  42133d:	mov    rdi,rbx
  421340:	mov    rsi,r14
  421343:	call   408700 <__ctype_b_loc@plt+0x6430>
  421348:	mov    rax,QWORD PTR [rbx+0x10]
  42134c:	lea    rcx,[rax+0x10]
  421350:	mov    QWORD PTR [rbx+0x10],rcx
  421354:	mov    rax,QWORD PTR [rax]
  421357:	mov    rdi,rbx
  42135a:	call   QWORD PTR [rax+0x20]
  42135d:	xor    eax,eax
  42135f:	add    rsp,0x18
  421363:	pop    rbx
  421364:	pop    r14
  421366:	ret    
  421367:	nop    WORD PTR [rax+rax*1+0x0]
  421370:	push   r15
  421372:	push   r14
  421374:	push   r12
  421376:	push   rbx
  421377:	sub    rsp,0x18
  42137b:	mov    rbx,rdi
  42137e:	mov    rax,QWORD PTR [rdi+0x10]
  421382:	mov    rcx,QWORD PTR [rdi+0x18]
  421386:	cmp    rcx,rax
  421389:	lea    r12,[rip+0x9788]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  421390:	cmovae rcx,r12
  421394:	mov    edx,DWORD PTR [rcx+0x8]
  421397:	cmp    edx,0x7
  42139a:	je     4213bc <__ctype_b_loc@plt+0x1f0ec>
  42139c:	cmp    edx,0x2
  42139f:	jne    42146c <__ctype_b_loc@plt+0x1f19c>
  4213a5:	mov    r14,QWORD PTR [rcx]
  4213a8:	test   r14,r14
  4213ab:	je     42146c <__ctype_b_loc@plt+0x1f19c>
  4213b1:	mov    ecx,0xf0
  4213b6:	add    rcx,QWORD PTR [rbx+0x20]
  4213ba:	jmp    4213c7 <__ctype_b_loc@plt+0x1f0f7>
  4213bc:	mov    rcx,QWORD PTR [rcx]
  4213bf:	lea    r14,[rcx+0x28]
  4213c3:	add    rcx,0x10
  4213c7:	mov    rcx,QWORD PTR [rcx]
  4213ca:	test   rcx,rcx
  4213cd:	je     42146c <__ctype_b_loc@plt+0x1f19c>
  4213d3:	mov    QWORD PTR [rax],rcx
  4213d6:	mov    DWORD PTR [rax+0x8],0x5
  4213dd:	add    QWORD PTR [rbx+0x10],0x10
  4213e2:	mov    r15d,0xa0
  4213e8:	add    r15,QWORD PTR [rbx+0x20]
  4213ec:	lea    rsi,[rip+0xa333]        # 42b726 <__ctype_b_loc@plt+0x29456>
  4213f3:	mov    edx,0x5
  4213f8:	mov    rdi,rbx
  4213fb:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  421400:	mov    QWORD PTR [rsp+0x8],rax
  421405:	mov    DWORD PTR [rsp+0x10],0x4
  42140d:	mov    rcx,QWORD PTR [rbx+0x10]
  421411:	lea    rdx,[rsp+0x8]
  421416:	mov    rdi,rbx
  421419:	mov    rsi,r15
  42141c:	call   408700 <__ctype_b_loc@plt+0x6430>
  421421:	mov    rdx,QWORD PTR [rbx+0x10]
  421425:	lea    rax,[rdx+0x10]
  421429:	mov    QWORD PTR [rbx+0x10],rax
  42142d:	cmp    rdx,r12
  421430:	je     42146c <__ctype_b_loc@plt+0x1f19c>
  421432:	lea    rcx,[rdx-0x10]
  421436:	cmp    rcx,r12
  421439:	je     42146c <__ctype_b_loc@plt+0x1f19c>
  42143b:	mov    esi,DWORD PTR [rdx+0x8]
  42143e:	cmp    esi,DWORD PTR [rdx-0x8]
  421441:	jne    42146c <__ctype_b_loc@plt+0x1f19c>
  421443:	cmp    esi,0x3
  421446:	ja     421463 <__ctype_b_loc@plt+0x1f193>
  421448:	mov    esi,esi
  42144a:	lea    rdi,[rip+0x949b]        # 42a8ec <__ctype_b_loc@plt+0x2861c>
  421451:	movsxd rsi,DWORD PTR [rdi+rsi*4]
  421455:	add    rsi,rdi
  421458:	jmp    rsi
  42145a:	mov    esi,DWORD PTR [rdx]
  42145c:	cmp    esi,DWORD PTR [rdx-0x10]
  42145f:	jne    42146c <__ctype_b_loc@plt+0x1f19c>
  421461:	jmp    4214dd <__ctype_b_loc@plt+0x1f20d>
  421463:	mov    rsi,QWORD PTR [rdx]
  421466:	cmp    rsi,QWORD PTR [rdx-0x10]
  42146a:	je     4214dd <__ctype_b_loc@plt+0x1f20d>
  42146c:	mov    rdx,QWORD PTR [rbx+0x18]
  421470:	lea    rcx,[rip+0x9d5f]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  421477:	cmp    rdx,r12
  42147a:	je     421496 <__ctype_b_loc@plt+0x1f1c6>
  42147c:	cmp    rdx,rax
  42147f:	jae    421496 <__ctype_b_loc@plt+0x1f1c6>
  421481:	movsxd rax,DWORD PTR [rdx+0x8]
  421485:	cmp    rax,0xffffffffffffffff
  421489:	je     421496 <__ctype_b_loc@plt+0x1f1c6>
  42148b:	lea    rcx,[rip+0xf44e]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  421492:	mov    rcx,QWORD PTR [rcx+rax*8]
  421496:	lea    rsi,[rip+0x9d25]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  42149d:	lea    rdx,[rip+0xa282]        # 42b726 <__ctype_b_loc@plt+0x29456>
  4214a4:	xor    r14d,r14d
  4214a7:	xor    eax,eax
  4214a9:	mov    rdi,rbx
  4214ac:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  4214b1:	mov    esi,0x1
  4214b6:	mov    rdi,rbx
  4214b9:	mov    rdx,rax
  4214bc:	call   410240 <__ctype_b_loc@plt+0xdf70>
  4214c1:	mov    rax,r14
  4214c4:	add    rsp,0x18
  4214c8:	pop    rbx
  4214c9:	pop    r12
  4214cb:	pop    r14
  4214cd:	pop    r15
  4214cf:	ret    
  4214d0:	vmovsd xmm0,QWORD PTR [rdx]
  4214d4:	vucomisd xmm0,QWORD PTR [rdx-0x10]
  4214d9:	jne    42146c <__ctype_b_loc@plt+0x1f19c>
  4214db:	jp     42146c <__ctype_b_loc@plt+0x1f19c>
  4214dd:	mov    QWORD PTR [rbx+0x10],rcx
  4214e1:	jmp    4214c1 <__ctype_b_loc@plt+0x1f1f1>
  4214e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4214ed:	nop    DWORD PTR [rax]
  4214f0:	push   rbp
  4214f1:	push   r15
  4214f3:	push   r14
  4214f5:	push   rbx
  4214f6:	sub    rsp,0x18
  4214fa:	mov    r14,rdi
  4214fd:	mov    rax,QWORD PTR [rdi+0x28]
  421501:	mov    rax,QWORD PTR [rax+0x8]
  421505:	mov    rax,QWORD PTR [rax]
  421508:	cmp    BYTE PTR [rax+0xb],0x0
  42150c:	lea    rax,[rax+0x28]
  421510:	lea    r15,[rip+0x9601]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  421517:	cmove  rax,r15
  42151b:	mov    ecx,DWORD PTR [rax+0x8]
  42151e:	cmp    ecx,0x2
  421521:	je     421531 <__ctype_b_loc@plt+0x1f261>
  421523:	cmp    ecx,0x7
  421526:	jne    421536 <__ctype_b_loc@plt+0x1f266>
  421528:	mov    rax,QWORD PTR [rax]
  42152b:	add    rax,0x28
  42152f:	jmp    421538 <__ctype_b_loc@plt+0x1f268>
  421531:	mov    rax,QWORD PTR [rax]
  421534:	jmp    421538 <__ctype_b_loc@plt+0x1f268>
  421536:	xor    eax,eax
  421538:	mov    rbp,QWORD PTR [rax]
  42153b:	test   rbp,rbp
  42153e:	jne    421551 <__ctype_b_loc@plt+0x1f281>
  421540:	lea    rsi,[rip+0xa216]        # 42b75d <__ctype_b_loc@plt+0x2948d>
  421547:	xor    eax,eax
  421549:	mov    rdi,r14
  42154c:	call   410070 <__ctype_b_loc@plt+0xdda0>
  421551:	mov    rdi,r14
  421554:	mov    rsi,rbp
  421557:	call   421760 <__ctype_b_loc@plt+0x1f490>
  42155c:	mov    ebx,eax
  42155e:	mov    rdi,rbp
  421561:	call   402090 <ferror@plt>
  421566:	test   eax,eax
  421568:	je     421594 <__ctype_b_loc@plt+0x1f2c4>
  42156a:	call   402050 <__errno_location@plt>
  42156f:	mov    edi,DWORD PTR [rax]
  421571:	call   4022a0 <strerror@plt>
  421576:	mov    rcx,rax
  421579:	lea    rsi,[rip+0x9867]        # 42ade7 <__ctype_b_loc@plt+0x28b17>
  421580:	xor    ebp,ebp
  421582:	xor    eax,eax
  421584:	mov    rdi,r14
  421587:	mov    rdx,rcx
  42158a:	call   410070 <__ctype_b_loc@plt+0xdda0>
  42158f:	jmp    421748 <__ctype_b_loc@plt+0x1f478>
  421594:	mov    ebp,0x1
  421599:	test   ebx,ebx
  42159b:	jne    421748 <__ctype_b_loc@plt+0x1f478>
  4215a1:	mov    rax,QWORD PTR [r14+0x28]
  4215a5:	mov    rax,QWORD PTR [rax+0x8]
  4215a9:	mov    rcx,QWORD PTR [rax]
  4215ac:	cmp    BYTE PTR [rcx+0xb],0x2
  4215b0:	lea    rcx,[rcx+0x38]
  4215b4:	cmovb  rcx,r15
  4215b8:	mov    ebp,DWORD PTR [rcx+0x8]
  4215bb:	test   ebp,ebp
  4215bd:	je     421748 <__ctype_b_loc@plt+0x1f478>
  4215c3:	cmp    ebp,0x1
  4215c6:	jne    4215d1 <__ctype_b_loc@plt+0x1f301>
  4215c8:	cmp    DWORD PTR [rcx],0x0
  4215cb:	je     421746 <__ctype_b_loc@plt+0x1f476>
  4215d1:	mov    rbx,QWORD PTR [r14+0x10]
  4215d5:	mov    rcx,QWORD PTR [r14+0x18]
  4215d9:	cmp    rbx,rcx
  4215dc:	jae    421681 <__ctype_b_loc@plt+0x1f3b1>
  4215e2:	lea    rsi,[rbx+0x10]
  4215e6:	cmp    rcx,rsi
  4215e9:	cmova  rsi,rcx
  4215ed:	mov    rbp,rbx
  4215f0:	not    rbp
  4215f3:	add    rsi,rbp
  4215f6:	add    rbp,rcx
  4215f9:	mov    edx,ebp
  4215fb:	shr    edx,0x4
  4215fe:	add    edx,0x1
  421601:	mov    rdi,rbx
  421604:	and    rdx,0x7
  421608:	je     421621 <__ctype_b_loc@plt+0x1f351>
  42160a:	neg    rdx
  42160d:	mov    rdi,rbx
  421610:	mov    DWORD PTR [rdi+0x8],0x0
  421617:	add    rdi,0x10
  42161b:	add    rdx,0x1
  42161f:	jne    421610 <__ctype_b_loc@plt+0x1f340>
  421621:	shr    rsi,0x4
  421625:	cmp    rbp,0x70
  421629:	jb     421671 <__ctype_b_loc@plt+0x1f3a1>
  42162b:	nop    DWORD PTR [rax+rax*1+0x0]
  421630:	mov    DWORD PTR [rdi+0x8],0x0
  421637:	mov    DWORD PTR [rdi+0x18],0x0
  42163e:	mov    DWORD PTR [rdi+0x28],0x0
  421645:	mov    DWORD PTR [rdi+0x38],0x0
  42164c:	mov    DWORD PTR [rdi+0x48],0x0
  421653:	mov    DWORD PTR [rdi+0x58],0x0
  42165a:	mov    DWORD PTR [rdi+0x68],0x0
  421661:	mov    DWORD PTR [rdi+0x78],0x0
  421668:	sub    rdi,0xffffffffffffff80
  42166c:	cmp    rdi,rcx
  42166f:	jb     421630 <__ctype_b_loc@plt+0x1f360>
  421671:	shl    rsi,0x4
  421675:	lea    rdx,[rbx+rsi*1]
  421679:	add    rdx,0x10
  42167d:	mov    QWORD PTR [r14+0x10],rdx
  421681:	mov    QWORD PTR [r14+0x10],rcx
  421685:	mov    rax,QWORD PTR [rax]
  421688:	cmp    BYTE PTR [rax+0xb],0x0
  42168c:	lea    rax,[rax+0x28]
  421690:	cmove  rax,r15
  421694:	mov    rdx,QWORD PTR [rax]
  421697:	mov    QWORD PTR [rcx],rdx
  42169a:	mov    eax,DWORD PTR [rax+0x8]
  42169d:	mov    DWORD PTR [rcx+0x8],eax
  4216a0:	mov    rax,QWORD PTR [r14+0x10]
  4216a4:	mov    rdx,QWORD PTR [r14+0x18]
  4216a8:	lea    rcx,[rax+0x10]
  4216ac:	mov    QWORD PTR [r14+0x10],rcx
  4216b0:	cmp    rdx,rcx
  4216b3:	cmovb  r15,rdx
  4216b7:	mov    esi,DWORD PTR [r15+0x8]
  4216bb:	cmp    esi,0x8
  4216be:	je     4216dd <__ctype_b_loc@plt+0x1f40d>
  4216c0:	cmp    esi,0x7
  4216c3:	je     4216cc <__ctype_b_loc@plt+0x1f3fc>
  4216c5:	xor    edx,edx
  4216c7:	cmp    esi,0x6
  4216ca:	jne    4216ed <__ctype_b_loc@plt+0x1f41d>
  4216cc:	mov    rdx,QWORD PTR [r15]
  4216cf:	mov    rdx,QWORD PTR [rdx+0x18]
  4216d3:	mov    QWORD PTR [rcx],rdx
  4216d6:	mov    edx,0x5
  4216db:	jmp    4216ed <__ctype_b_loc@plt+0x1f41d>
  4216dd:	mov    rdx,QWORD PTR [r15]
  4216e0:	mov    rsi,QWORD PTR [rdx+0x78]
  4216e4:	mov    QWORD PTR [rcx],rsi
  4216e7:	mov    edx,DWORD PTR [rdx+0x80]
  4216ed:	mov    DWORD PTR [rax+0x18],edx
  4216f0:	mov    rbx,QWORD PTR [r14+0x10]
  4216f4:	lea    rax,[rbx+0x10]
  4216f8:	mov    QWORD PTR [r14+0x10],rax
  4216fc:	lea    rsi,[rip+0xa052]        # 42b755 <__ctype_b_loc@plt+0x29485>
  421703:	mov    edx,0x7
  421708:	mov    rdi,r14
  42170b:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  421710:	mov    QWORD PTR [rsp+0x8],rax
  421715:	mov    DWORD PTR [rsp+0x10],0x4
  42171d:	mov    rcx,QWORD PTR [r14+0x10]
  421721:	lea    rdx,[rsp+0x8]
  421726:	mov    rdi,r14
  421729:	mov    rsi,rbx
  42172c:	call   408700 <__ctype_b_loc@plt+0x6430>
  421731:	mov    rax,QWORD PTR [r14+0x10]
  421735:	lea    rcx,[rax+0x10]
  421739:	mov    QWORD PTR [r14+0x10],rcx
  42173d:	mov    rax,QWORD PTR [rax]
  421740:	mov    rdi,r14
  421743:	call   QWORD PTR [rax+0x20]
  421746:	xor    ebp,ebp
  421748:	mov    eax,ebp
  42174a:	add    rsp,0x18
  42174e:	pop    rbx
  42174f:	pop    r14
  421751:	pop    r15
  421753:	pop    rbp
  421754:	ret    
  421755:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42175f:	nop
  421760:	push   r15
  421762:	push   r14
  421764:	push   r12
  421766:	push   rbx
  421767:	sub    rsp,0x2038
  42176e:	mov    r15,rsi
  421771:	mov    r14,rdi
  421774:	mov    QWORD PTR [rsp+0x30],rdi
  421779:	lea    rax,[rsp+0x38]
  42177e:	mov    QWORD PTR [rsp+0x20],rax
  421783:	mov    DWORD PTR [rsp+0x28],0x0
  42178b:	lea    rdi,[rsp+0x20]
  421790:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  421795:	mov    rbx,rax
  421798:	mov    esi,0x2000
  42179d:	mov    rdi,rax
  4217a0:	mov    rdx,r15
  4217a3:	call   402160 <fgets@plt>
  4217a8:	test   rax,rax
  4217ab:	je     4217fd <__ctype_b_loc@plt+0x1f52d>
  4217ad:	lea    r12,[rsp+0x20]
  4217b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4217bc:	nop    DWORD PTR [rax+0x0]
  4217c0:	mov    rdi,rbx
  4217c3:	call   4020e0 <strlen@plt>
  4217c8:	test   rax,rax
  4217cb:	je     4217d8 <__ctype_b_loc@plt+0x1f508>
  4217cd:	cmp    BYTE PTR [rbx+rax*1-0x1],0xa
  4217d2:	je     421868 <__ctype_b_loc@plt+0x1f598>
  4217d8:	add    QWORD PTR [rsp+0x20],rax
  4217dd:	mov    rdi,r12
  4217e0:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  4217e5:	mov    rbx,rax
  4217e8:	mov    esi,0x2000
  4217ed:	mov    rdi,rax
  4217f0:	mov    rdx,r15
  4217f3:	call   402160 <fgets@plt>
  4217f8:	test   rax,rax
  4217fb:	jne    4217c0 <__ctype_b_loc@plt+0x1f4f0>
  4217fd:	lea    rdi,[rsp+0x20]
  421802:	call   41f4d0 <__ctype_b_loc@plt+0x1d200>
  421807:	mov    rbx,QWORD PTR [r14+0x10]
  42180b:	mov    eax,DWORD PTR [rbx-0x8]
  42180e:	xor    ecx,ecx
  421810:	add    eax,0xfffffffd
  421813:	cmp    eax,0x4
  421816:	ja     4218a2 <__ctype_b_loc@plt+0x1f5d2>
  42181c:	lea    rdx,[rip+0x90d9]        # 42a8fc <__ctype_b_loc@plt+0x2862c>
  421823:	movsxd rax,DWORD PTR [rdx+rax*4]
  421827:	add    rax,rdx
  42182a:	jmp    rax
  42182c:	vmovsd xmm0,QWORD PTR [rbx-0x10]
  421831:	lea    rsi,[rip+0x95e9]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  421838:	mov    r15,rsp
  42183b:	mov    al,0x1
  42183d:	mov    rdi,r15
  421840:	call   402270 <sprintf@plt>
  421845:	mov    rdi,r15
  421848:	call   4020e0 <strlen@plt>
  42184d:	mov    rdi,r14
  421850:	mov    rsi,r15
  421853:	mov    rdx,rax
  421856:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  42185b:	mov    QWORD PTR [rbx-0x10],rax
  42185f:	mov    DWORD PTR [rbx-0x8],0x4
  421866:	jmp    421886 <__ctype_b_loc@plt+0x1f5b6>
  421868:	add    rax,0xffffffffffffffff
  42186c:	add    QWORD PTR [rsp+0x20],rax
  421871:	lea    rdi,[rsp+0x20]
  421876:	call   41f4d0 <__ctype_b_loc@plt+0x1d200>
  42187b:	mov    eax,0x1
  421880:	jmp    4218aa <__ctype_b_loc@plt+0x1f5da>
  421882:	mov    rax,QWORD PTR [rbx-0x10]
  421886:	mov    rcx,QWORD PTR [rax+0x10]
  42188a:	jmp    4218a2 <__ctype_b_loc@plt+0x1f5d2>
  42188c:	mov    rdi,QWORD PTR [rbx-0x10]
  421890:	call   4095e0 <__ctype_b_loc@plt+0x7310>
  421895:	movsxd rcx,eax
  421898:	jmp    4218a2 <__ctype_b_loc@plt+0x1f5d2>
  42189a:	mov    rax,QWORD PTR [rbx-0x10]
  42189e:	mov    rcx,QWORD PTR [rax+0x20]
  4218a2:	xor    eax,eax
  4218a4:	test   rcx,rcx
  4218a7:	setne  al
  4218aa:	add    rsp,0x2038
  4218b1:	pop    rbx
  4218b2:	pop    r12
  4218b4:	pop    r14
  4218b6:	pop    r15
  4218b8:	ret    
  4218b9:	nop    DWORD PTR [rax+0x0]
  4218c0:	push   rbp
  4218c1:	push   r15
  4218c3:	push   r14
  4218c5:	push   r13
  4218c7:	push   r12
  4218c9:	push   rbx
  4218ca:	sub    rsp,0x68
  4218ce:	mov    ebx,edx
  4218d0:	mov    r15,rsi
  4218d3:	mov    r12,rdi
  4218d6:	mov    r13,QWORD PTR [rdi+0x10]
  4218da:	sub    r13,QWORD PTR [rdi+0x18]
  4218de:	shr    r13,0x4
  4218e2:	mov    rdi,rsi
  4218e5:	call   4021b0 <clearerr@plt>
  4218ea:	cmp    r13d,0x1
  4218ee:	mov    QWORD PTR [rsp+0x20],rbx
  4218f3:	jne    42190b <__ctype_b_loc@plt+0x1f63b>
  4218f5:	mov    rdi,r12
  4218f8:	mov    rsi,r15
  4218fb:	call   421760 <__ctype_b_loc@plt+0x1f490>
  421900:	mov    r14d,eax
  421903:	lea    ebx,[rbx+0x1]
  421906:	jmp    421fc9 <__ctype_b_loc@plt+0x1fcf9>
  42190b:	lea    esi,[r13+0x13]
  42190f:	lea    rdx,[rip+0x9e5e]        # 42b774 <__ctype_b_loc@plt+0x294a4>
  421916:	mov    rdi,r12
  421919:	call   41fda0 <__ctype_b_loc@plt+0x1dad0>
  42191e:	add    r13d,0xfffffffe
  421922:	lea    rax,[r12+0x88]
  42192a:	mov    QWORD PTR [rsp+0x8],rax
  42192f:	lea    rax,[r12+0x78]
  421934:	mov    QWORD PTR [rsp+0x18],rax
  421939:	movsxd rbx,ebx
  42193c:	mov    QWORD PTR [rsp+0x10],r15
  421941:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42194b:	nop    DWORD PTR [rax+rax*1+0x0]
  421950:	test   rbx,rbx
  421953:	jle    421980 <__ctype_b_loc@plt+0x1f6b0>
  421955:	mov    rax,QWORD PTR [r12+0x10]
  42195a:	mov    rcx,QWORD PTR [r12+0x18]
  42195f:	mov    rdx,rbx
  421962:	shl    rdx,0x4
  421966:	lea    rbp,[rcx+rdx*1]
  42196a:	add    rbp,0xfffffffffffffff0
  42196e:	cmp    rbp,rax
  421971:	jb     421a20 <__ctype_b_loc@plt+0x1f750>
  421977:	jmp    421a92 <__ctype_b_loc@plt+0x1f7c2>
  42197c:	nop    DWORD PTR [rax+0x0]
  421980:	cmp    rbx,0xffffffffffffd8f1
  421987:	jl     42199a <__ctype_b_loc@plt+0x1f6ca>
  421989:	mov    rbp,rbx
  42198c:	shl    rbp,0x4
  421990:	add    rbp,QWORD PTR [r12+0x10]
  421995:	jmp    421a20 <__ctype_b_loc@plt+0x1f750>
  42199a:	mov    rbp,QWORD PTR [rsp+0x18]
  42199f:	cmp    ebx,0xffffd8ee
  4219a5:	je     421a20 <__ctype_b_loc@plt+0x1f750>
  4219a7:	cmp    ebx,0xffffd8ef
  4219ad:	je     4219c6 <__ctype_b_loc@plt+0x1f6f6>
  4219af:	cmp    ebx,0xffffd8f0
  4219b5:	jne    4219f1 <__ctype_b_loc@plt+0x1f721>
  4219b7:	mov    rbp,QWORD PTR [r12+0x20]
  4219bc:	mov    eax,0xa0
  4219c1:	add    rbp,rax
  4219c4:	jmp    421a20 <__ctype_b_loc@plt+0x1f750>
  4219c6:	mov    rax,QWORD PTR [r12+0x28]
  4219cb:	mov    rax,QWORD PTR [rax+0x8]
  4219cf:	mov    rax,QWORD PTR [rax]
  4219d2:	mov    rax,QWORD PTR [rax+0x18]
  4219d6:	mov    QWORD PTR [r12+0x88],rax
  4219de:	mov    DWORD PTR [r12+0x90],0x5
  4219ea:	mov    rbp,QWORD PTR [rsp+0x8]
  4219ef:	jmp    421a20 <__ctype_b_loc@plt+0x1f750>
  4219f1:	mov    rax,QWORD PTR [r12+0x28]
  4219f6:	mov    rax,QWORD PTR [rax+0x8]
  4219fa:	mov    rax,QWORD PTR [rax]
  4219fd:	mov    rcx,0xffffffffffffd8ee
  421a04:	sub    rcx,rbx
  421a07:	movzx  edx,BYTE PTR [rax+0xb]
  421a0b:	cmp    rcx,rdx
  421a0e:	jg     421b61 <__ctype_b_loc@plt+0x1f891>
  421a14:	shl    rcx,0x4
  421a18:	lea    rbp,[rax+rcx*1]
  421a1c:	add    rbp,0x18
  421a20:	lea    rax,[rip+0x90f1]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  421a27:	cmp    rbp,rax
  421a2a:	je     421a70 <__ctype_b_loc@plt+0x1f7a0>
  421a2c:	cmp    DWORD PTR [rbp+0x8],0x3
  421a30:	jne    421a70 <__ctype_b_loc@plt+0x1f7a0>
  421a32:	test   rbx,rbx
  421a35:	jle    421c90 <__ctype_b_loc@plt+0x1f9c0>
  421a3b:	mov    rax,QWORD PTR [r12+0x18]
  421a40:	mov    rcx,rbx
  421a43:	shl    rcx,0x4
  421a47:	add    rax,rcx
  421a4a:	add    rax,0xfffffffffffffff0
  421a4e:	cmp    rax,QWORD PTR [r12+0x10]
  421a53:	lea    rcx,[rip+0x90be]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  421a5a:	cmovae rax,rcx
  421a5e:	jmp    421e50 <__ctype_b_loc@plt+0x1fb80>
  421a63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421a6d:	nop    DWORD PTR [rax]
  421a70:	test   rbx,rbx
  421a73:	jle    421b47 <__ctype_b_loc@plt+0x1f877>
  421a79:	mov    rax,QWORD PTR [r12+0x10]
  421a7e:	mov    rcx,QWORD PTR [r12+0x18]
  421a83:	mov    rdx,rbx
  421a86:	shl    rdx,0x4
  421a8a:	lea    rbp,[rcx+rdx*1]
  421a8e:	add    rbp,0xfffffffffffffff0
  421a92:	cmp    rbp,rax
  421a95:	lea    rax,[rip+0x907c]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  421a9c:	cmovae rbp,rax
  421aa0:	mov    eax,DWORD PTR [rbp+0x8]
  421aa3:	cmp    eax,0x4
  421aa6:	je     421bc0 <__ctype_b_loc@plt+0x1f8f0>
  421aac:	cmp    eax,0x3
  421aaf:	jne    421b40 <__ctype_b_loc@plt+0x1f870>
  421ab5:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  421aba:	mov    al,0x1
  421abc:	lea    r14,[rsp+0x30]
  421ac1:	mov    rdi,r14
  421ac4:	lea    rsi,[rip+0x9356]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  421acb:	call   402270 <sprintf@plt>
  421ad0:	mov    rdi,r14
  421ad3:	call   4020e0 <strlen@plt>
  421ad8:	mov    rdi,r12
  421adb:	mov    rsi,r14
  421ade:	mov    rdx,rax
  421ae1:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  421ae6:	mov    QWORD PTR [rbp+0x0],rax
  421aea:	mov    DWORD PTR [rbp+0x8],0x4
  421af1:	mov    rax,QWORD PTR [r12+0x20]
  421af6:	mov    rcx,QWORD PTR [rax+0x78]
  421afa:	cmp    rcx,QWORD PTR [rax+0x70]
  421afe:	jb     421b08 <__ctype_b_loc@plt+0x1f838>
  421b00:	mov    rdi,r12
  421b03:	call   408070 <__ctype_b_loc@plt+0x5da0>
  421b08:	test   rbx,rbx
  421b0b:	jle    421b9c <__ctype_b_loc@plt+0x1f8cc>
  421b11:	mov    rax,QWORD PTR [r12+0x18]
  421b16:	mov    rcx,rbx
  421b19:	shl    rcx,0x4
  421b1d:	lea    rbp,[rax+rcx*1]
  421b21:	add    rbp,0xfffffffffffffff0
  421b25:	cmp    rbp,QWORD PTR [r12+0x10]
  421b2a:	lea    rax,[rip+0x8fe7]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  421b31:	cmovae rbp,rax
  421b35:	jmp    421bc0 <__ctype_b_loc@plt+0x1f8f0>
  421b3a:	nop    WORD PTR [rax+rax*1+0x0]
  421b40:	xor    ebp,ebp
  421b42:	jmp    421bce <__ctype_b_loc@plt+0x1f8fe>
  421b47:	cmp    rbx,0xffffffffffffd8f0
  421b4e:	jle    421b61 <__ctype_b_loc@plt+0x1f891>
  421b50:	mov    rbp,rbx
  421b53:	shl    rbp,0x4
  421b57:	add    rbp,QWORD PTR [r12+0x10]
  421b5c:	jmp    421aa0 <__ctype_b_loc@plt+0x1f7d0>
  421b61:	mov    rbp,QWORD PTR [rsp+0x18]
  421b66:	cmp    ebx,0xffffd8ee
  421b6c:	je     421aa0 <__ctype_b_loc@plt+0x1f7d0>
  421b72:	cmp    ebx,0xffffd8ef
  421b78:	je     421d20 <__ctype_b_loc@plt+0x1fa50>
  421b7e:	cmp    ebx,0xffffd8f0
  421b84:	jne    421d4e <__ctype_b_loc@plt+0x1fa7e>
  421b8a:	mov    rbp,QWORD PTR [r12+0x20]
  421b8f:	mov    eax,0xa0
  421b94:	add    rbp,rax
  421b97:	jmp    421aa0 <__ctype_b_loc@plt+0x1f7d0>
  421b9c:	cmp    rbx,0xffffffffffffd8f1
  421ba3:	jl     421caa <__ctype_b_loc@plt+0x1f9da>
  421ba9:	mov    rbp,rbx
  421bac:	shl    rbp,0x4
  421bb0:	add    rbp,QWORD PTR [r12+0x10]
  421bb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421bbf:	nop
  421bc0:	mov    rax,QWORD PTR [rbp+0x0]
  421bc4:	cmp    BYTE PTR [rax+0x18],0x2a
  421bc8:	lea    rbp,[rax+0x18]
  421bcc:	je     421bdf <__ctype_b_loc@plt+0x1f90f>
  421bce:	mov    rdi,r12
  421bd1:	mov    esi,ebx
  421bd3:	lea    rdx,[rip+0x9bad]        # 42b787 <__ctype_b_loc@plt+0x294b7>
  421bda:	call   410240 <__ctype_b_loc@plt+0xdf70>
  421bdf:	movsx  eax,BYTE PTR [rbp+0x1]
  421be3:	cmp    eax,0x61
  421be6:	je     421c40 <__ctype_b_loc@plt+0x1f970>
  421be8:	cmp    eax,0x6c
  421beb:	je     421c60 <__ctype_b_loc@plt+0x1f990>
  421bed:	cmp    eax,0x6e
  421bf0:	jne    42204c <__ctype_b_loc@plt+0x1fd7c>
  421bf6:	xor    eax,eax
  421bf8:	mov    rdi,r15
  421bfb:	lea    rsi,[rip+0x9ba3]        # 42b7a5 <__ctype_b_loc@plt+0x294d5>
  421c02:	lea    rdx,[rsp+0x30]
  421c07:	call   402080 <__isoc99_fscanf@plt>
  421c0c:	cmp    eax,0x1
  421c0f:	jne    421c73 <__ctype_b_loc@plt+0x1f9a3>
  421c11:	mov    rax,QWORD PTR [rsp+0x30]
  421c16:	mov    rcx,QWORD PTR [r12+0x10]
  421c1b:	mov    QWORD PTR [rcx],rax
  421c1e:	mov    DWORD PTR [rcx+0x8],0x3
  421c25:	mov    rax,QWORD PTR [r12+0x10]
  421c2a:	mov    r14d,0x1
  421c30:	jmp    421c82 <__ctype_b_loc@plt+0x1f9b2>
  421c32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c3c:	nop    DWORD PTR [rax+0x0]
  421c40:	mov    rdx,0xffffffffffffffff
  421c47:	mov    rdi,r12
  421c4a:	mov    rsi,r15
  421c4d:	call   422070 <__ctype_b_loc@plt+0x1fda0>
  421c52:	mov    r14d,0x1
  421c58:	jmp    421fb0 <__ctype_b_loc@plt+0x1fce0>
  421c5d:	nop    DWORD PTR [rax]
  421c60:	mov    rdi,r12
  421c63:	mov    rsi,r15
  421c66:	call   421760 <__ctype_b_loc@plt+0x1f490>
  421c6b:	mov    r14d,eax
  421c6e:	jmp    421fb0 <__ctype_b_loc@plt+0x1fce0>
  421c73:	mov    rax,QWORD PTR [r12+0x10]
  421c78:	mov    DWORD PTR [rax+0x8],0x0
  421c7f:	xor    r14d,r14d
  421c82:	add    rax,0x10
  421c86:	mov    QWORD PTR [r12+0x10],rax
  421c8b:	jmp    421fb0 <__ctype_b_loc@plt+0x1fce0>
  421c90:	cmp    rbx,0xffffffffffffd8f1
  421c97:	jl     421ce5 <__ctype_b_loc@plt+0x1fa15>
  421c99:	mov    rax,rbx
  421c9c:	shl    rax,0x4
  421ca0:	add    rax,QWORD PTR [r12+0x10]
  421ca5:	jmp    421e50 <__ctype_b_loc@plt+0x1fb80>
  421caa:	mov    rbp,QWORD PTR [rsp+0x18]
  421caf:	cmp    ebx,0xffffd8ee
  421cb5:	je     421bc0 <__ctype_b_loc@plt+0x1f8f0>
  421cbb:	cmp    ebx,0xffffd8ef
  421cc1:	je     421d89 <__ctype_b_loc@plt+0x1fab9>
  421cc7:	cmp    ebx,0xffffd8f0
  421ccd:	jne    421db7 <__ctype_b_loc@plt+0x1fae7>
  421cd3:	mov    rbp,QWORD PTR [r12+0x20]
  421cd8:	mov    eax,0xa0
  421cdd:	add    rbp,rax
  421ce0:	jmp    421bc0 <__ctype_b_loc@plt+0x1f8f0>
  421ce5:	mov    rax,QWORD PTR [rsp+0x18]
  421cea:	cmp    ebx,0xffffd8ee
  421cf0:	je     421e50 <__ctype_b_loc@plt+0x1fb80>
  421cf6:	cmp    ebx,0xffffd8ef
  421cfc:	je     421df2 <__ctype_b_loc@plt+0x1fb22>
  421d02:	cmp    ebx,0xffffd8f0
  421d08:	jne    421e1d <__ctype_b_loc@plt+0x1fb4d>
  421d0e:	mov    rax,QWORD PTR [r12+0x20]
  421d13:	mov    ecx,0xa0
  421d18:	add    rax,rcx
  421d1b:	jmp    421e50 <__ctype_b_loc@plt+0x1fb80>
  421d20:	mov    rax,QWORD PTR [r12+0x28]
  421d25:	mov    rax,QWORD PTR [rax+0x8]
  421d29:	mov    rax,QWORD PTR [rax]
  421d2c:	mov    rax,QWORD PTR [rax+0x18]
  421d30:	mov    QWORD PTR [r12+0x88],rax
  421d38:	mov    DWORD PTR [r12+0x90],0x5
  421d44:	mov    rbp,QWORD PTR [rsp+0x8]
  421d49:	jmp    421aa0 <__ctype_b_loc@plt+0x1f7d0>
  421d4e:	mov    rax,QWORD PTR [r12+0x28]
  421d53:	mov    rax,QWORD PTR [rax+0x8]
  421d57:	mov    rax,QWORD PTR [rax]
  421d5a:	mov    rcx,0xffffffffffffd8ee
  421d61:	sub    rcx,rbx
  421d64:	movzx  edx,BYTE PTR [rax+0xb]
  421d68:	lea    rbp,[rip+0x8da9]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  421d6f:	cmp    rcx,rdx
  421d72:	jg     421aa0 <__ctype_b_loc@plt+0x1f7d0>
  421d78:	shl    rcx,0x4
  421d7c:	lea    rbp,[rax+rcx*1]
  421d80:	add    rbp,0x18
  421d84:	jmp    421aa0 <__ctype_b_loc@plt+0x1f7d0>
  421d89:	mov    rax,QWORD PTR [r12+0x28]
  421d8e:	mov    rax,QWORD PTR [rax+0x8]
  421d92:	mov    rax,QWORD PTR [rax]
  421d95:	mov    rax,QWORD PTR [rax+0x18]
  421d99:	mov    QWORD PTR [r12+0x88],rax
  421da1:	mov    DWORD PTR [r12+0x90],0x5
  421dad:	mov    rbp,QWORD PTR [rsp+0x8]
  421db2:	jmp    421bc0 <__ctype_b_loc@plt+0x1f8f0>
  421db7:	mov    rax,QWORD PTR [r12+0x28]
  421dbc:	mov    rax,QWORD PTR [rax+0x8]
  421dc0:	mov    rax,QWORD PTR [rax]
  421dc3:	mov    rcx,0xffffffffffffd8ee
  421dca:	sub    rcx,rbx
  421dcd:	movzx  edx,BYTE PTR [rax+0xb]
  421dd1:	lea    rbp,[rip+0x8d40]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  421dd8:	cmp    rcx,rdx
  421ddb:	jg     421bc0 <__ctype_b_loc@plt+0x1f8f0>
  421de1:	shl    rcx,0x4
  421de5:	lea    rbp,[rax+rcx*1]
  421de9:	add    rbp,0x18
  421ded:	jmp    421bc0 <__ctype_b_loc@plt+0x1f8f0>
  421df2:	mov    rax,QWORD PTR [r12+0x28]
  421df7:	mov    rax,QWORD PTR [rax+0x8]
  421dfb:	mov    rax,QWORD PTR [rax]
  421dfe:	mov    rax,QWORD PTR [rax+0x18]
  421e02:	mov    QWORD PTR [r12+0x88],rax
  421e0a:	mov    DWORD PTR [r12+0x90],0x5
  421e16:	mov    rax,QWORD PTR [rsp+0x8]
  421e1b:	jmp    421e50 <__ctype_b_loc@plt+0x1fb80>
  421e1d:	mov    rax,QWORD PTR [r12+0x28]
  421e22:	mov    rax,QWORD PTR [rax+0x8]
  421e26:	mov    rcx,QWORD PTR [rax]
  421e29:	mov    rdx,0xffffffffffffd8ee
  421e30:	sub    rdx,rbx
  421e33:	movzx  esi,BYTE PTR [rcx+0xb]
  421e37:	lea    rax,[rip+0x8cda]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  421e3e:	cmp    rdx,rsi
  421e41:	jg     421e50 <__ctype_b_loc@plt+0x1fb80>
  421e43:	shl    rdx,0x4
  421e47:	lea    rax,[rcx+rdx*1]
  421e4b:	add    rax,0x18
  421e4f:	nop
  421e50:	mov    ecx,DWORD PTR [rax+0x8]
  421e53:	cmp    ecx,0x3
  421e56:	je     421f2e <__ctype_b_loc@plt+0x1fc5e>
  421e5c:	cmp    ecx,0x4
  421e5f:	jne    421f48 <__ctype_b_loc@plt+0x1fc78>
  421e65:	mov    r14,QWORD PTR [rax]
  421e68:	add    r14,0x18
  421e6c:	mov    rdi,r14
  421e6f:	lea    rsi,[rsp+0x30]
  421e74:	call   4020b0 <strtod@plt>
  421e79:	mov    rbp,QWORD PTR [rsp+0x30]
  421e7e:	cmp    rbp,r14
  421e81:	je     421f48 <__ctype_b_loc@plt+0x1fc78>
  421e87:	mov    r15b,BYTE PTR [rbp+0x0]
  421e8b:	mov    eax,r15d
  421e8e:	or     al,0x20
  421e90:	cmp    al,0x78
  421e92:	jne    421ec8 <__ctype_b_loc@plt+0x1fbf8>
  421e94:	mov    edx,0x10
  421e99:	mov    rdi,r14
  421e9c:	lea    rsi,[rsp+0x30]
  421ea1:	call   402250 <strtoul@plt>
  421ea6:	vmovq  xmm0,rax
  421eab:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x8dbd]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  421eb3:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x8dc5]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  421ebb:	vhaddpd xmm0,xmm0,xmm0
  421ebf:	mov    rbp,QWORD PTR [rsp+0x30]
  421ec4:	mov    r15b,BYTE PTR [rbp+0x0]
  421ec8:	test   r15b,r15b
  421ecb:	je     421eed <__ctype_b_loc@plt+0x1fc1d>
  421ecd:	vmovapd XMMWORD PTR [rsp+0x50],xmm0
  421ed3:	call   4022d0 <__ctype_b_loc@plt>
  421ed8:	mov    rax,QWORD PTR [rax]
  421edb:	movzx  ecx,r15b
  421edf:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  421ee4:	jne    421ef4 <__ctype_b_loc@plt+0x1fc24>
  421ee6:	mov    r15,QWORD PTR [rsp+0x10]
  421eeb:	jmp    421f48 <__ctype_b_loc@plt+0x1fc78>
  421eed:	mov    r15,QWORD PTR [rsp+0x10]
  421ef2:	jmp    421f23 <__ctype_b_loc@plt+0x1fc53>
  421ef4:	add    rbp,0x1
  421ef8:	mov    r15,QWORD PTR [rsp+0x10]
  421efd:	vmovapd xmm0,XMMWORD PTR [rsp+0x50]
  421f03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421f0d:	nop    DWORD PTR [rax]
  421f10:	movzx  ecx,BYTE PTR [rbp+0x0]
  421f14:	add    rbp,0x1
  421f18:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  421f1d:	jne    421f10 <__ctype_b_loc@plt+0x1fc40>
  421f1f:	test   cl,cl
  421f21:	jne    421f48 <__ctype_b_loc@plt+0x1fc78>
  421f23:	vmovsd QWORD PTR [rsp+0x28],xmm0
  421f29:	lea    rax,[rsp+0x28]
  421f2e:	vcvttsd2si rdx,QWORD PTR [rax]
  421f33:	test   rdx,rdx
  421f36:	je     421f48 <__ctype_b_loc@plt+0x1fc78>
  421f38:	mov    rdi,r12
  421f3b:	mov    rsi,r15
  421f3e:	call   422070 <__ctype_b_loc@plt+0x1fda0>
  421f43:	jmp    421c6b <__ctype_b_loc@plt+0x1f99b>
  421f48:	mov    rdi,r15
  421f4b:	call   4022b0 <getc@plt>
  421f50:	mov    rsi,r15
  421f53:	mov    r15d,eax
  421f56:	mov    edi,eax
  421f58:	call   4021f0 <ungetc@plt>
  421f5d:	mov    rax,QWORD PTR [r12+0x20]
  421f62:	mov    rcx,QWORD PTR [rax+0x78]
  421f66:	cmp    rcx,QWORD PTR [rax+0x70]
  421f6a:	jb     421f74 <__ctype_b_loc@plt+0x1fca4>
  421f6c:	mov    rdi,r12
  421f6f:	call   408070 <__ctype_b_loc@plt+0x5da0>
  421f74:	mov    rbp,QWORD PTR [r12+0x10]
  421f79:	xor    esi,esi
  421f7b:	xor    edx,edx
  421f7d:	mov    rdi,r12
  421f80:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  421f85:	mov    QWORD PTR [rbp+0x0],rax
  421f89:	mov    DWORD PTR [rbp+0x8],0x4
  421f90:	add    QWORD PTR [r12+0x10],0x10
  421f96:	xor    r14d,r14d
  421f99:	cmp    r15d,0xffffffff
  421f9d:	setne  r14b
  421fa1:	mov    r15,QWORD PTR [rsp+0x10]
  421fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421fb0:	add    rbx,0x1
  421fb4:	test   r14d,r14d
  421fb7:	je     421fc9 <__ctype_b_loc@plt+0x1fcf9>
  421fb9:	lea    eax,[r13-0x1]
  421fbd:	test   r13d,r13d
  421fc0:	mov    r13d,eax
  421fc3:	jne    421950 <__ctype_b_loc@plt+0x1f680>
  421fc9:	mov    rdi,r15
  421fcc:	call   402090 <ferror@plt>
  421fd1:	test   eax,eax
  421fd3:	je     422030 <__ctype_b_loc@plt+0x1fd60>
  421fd5:	call   402050 <__errno_location@plt>
  421fda:	mov    ebx,DWORD PTR [rax]
  421fdc:	mov    rax,QWORD PTR [r12+0x10]
  421fe1:	mov    DWORD PTR [rax+0x8],0x0
  421fe8:	add    rax,0x10
  421fec:	mov    QWORD PTR [r12+0x10],rax
  421ff1:	mov    edi,ebx
  421ff3:	call   4022a0 <strerror@plt>
  421ff8:	mov    rcx,rax
  421ffb:	lea    rsi,[rip+0x8de5]        # 42ade7 <__ctype_b_loc@plt+0x28b17>
  422002:	xor    eax,eax
  422004:	mov    rdi,r12
  422007:	mov    rdx,rcx
  42200a:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  42200f:	mov    rax,QWORD PTR [r12+0x10]
  422014:	vcvtsi2sd xmm0,xmm1,ebx
  422018:	vmovsd QWORD PTR [rax],xmm0
  42201c:	mov    DWORD PTR [rax+0x8],0x3
  422023:	add    QWORD PTR [r12+0x10],0x10
  422029:	mov    ebx,0x3
  42202e:	jmp    42205f <__ctype_b_loc@plt+0x1fd8f>
  422030:	test   r14d,r14d
  422033:	jne    422046 <__ctype_b_loc@plt+0x1fd76>
  422035:	mov    rax,QWORD PTR [r12+0x10]
  42203a:	mov    DWORD PTR [rax-0x8],0x0
  422041:	mov    QWORD PTR [r12+0x10],rax
  422046:	sub    ebx,DWORD PTR [rsp+0x20]
  42204a:	jmp    42205f <__ctype_b_loc@plt+0x1fd8f>
  42204c:	lea    rdx,[rip+0x9743]        # 42b796 <__ctype_b_loc@plt+0x294c6>
  422053:	mov    rdi,r12
  422056:	mov    esi,ebx
  422058:	call   410240 <__ctype_b_loc@plt+0xdf70>
  42205d:	xor    ebx,ebx
  42205f:	mov    eax,ebx
  422061:	add    rsp,0x68
  422065:	pop    rbx
  422066:	pop    r12
  422068:	pop    r13
  42206a:	pop    r14
  42206c:	pop    r15
  42206e:	pop    rbp
  42206f:	ret    
  422070:	push   rbp
  422071:	push   r15
  422073:	push   r14
  422075:	push   r13
  422077:	push   r12
  422079:	push   rbx
  42207a:	sub    rsp,0x2038
  422081:	mov    rbx,rdx
  422084:	mov    r15,rsi
  422087:	mov    r14,rdi
  42208a:	mov    QWORD PTR [rsp+0x30],rdi
  42208f:	lea    rax,[rsp+0x38]
  422094:	mov    QWORD PTR [rsp+0x20],rax
  422099:	mov    DWORD PTR [rsp+0x28],0x0
  4220a1:	mov    ebp,0x2000
  4220a6:	lea    r12,[rsp+0x20]
  4220ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4220b0:	mov    rdi,r12
  4220b3:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  4220b8:	mov    r13,rbx
  4220bb:	cmp    rbp,rbx
  4220be:	ja     4220c3 <__ctype_b_loc@plt+0x1fdf3>
  4220c0:	mov    r13,rbp
  4220c3:	mov    esi,0x1
  4220c8:	mov    rdi,rax
  4220cb:	mov    rdx,r13
  4220ce:	mov    rcx,r15
  4220d1:	call   4020a0 <fread@plt>
  4220d6:	add    QWORD PTR [rsp+0x20],rax
  4220db:	sub    rbx,rax
  4220de:	cmp    rax,r13
  4220e1:	jne    4220eb <__ctype_b_loc@plt+0x1fe1b>
  4220e3:	mov    rbp,r13
  4220e6:	test   rbx,rbx
  4220e9:	jne    4220b0 <__ctype_b_loc@plt+0x1fde0>
  4220eb:	lea    rdi,[rsp+0x20]
  4220f0:	call   41f4d0 <__ctype_b_loc@plt+0x1d200>
  4220f5:	test   rbx,rbx
  4220f8:	je     422157 <__ctype_b_loc@plt+0x1fe87>
  4220fa:	mov    rbx,QWORD PTR [r14+0x10]
  4220fe:	mov    eax,DWORD PTR [rbx-0x8]
  422101:	xor    ecx,ecx
  422103:	add    eax,0xfffffffd
  422106:	cmp    eax,0x4
  422109:	ja     42217e <__ctype_b_loc@plt+0x1feae>
  42210b:	lea    rdx,[rip+0x87fe]        # 42a910 <__ctype_b_loc@plt+0x28640>
  422112:	movsxd rax,DWORD PTR [rdx+rax*4]
  422116:	add    rax,rdx
  422119:	jmp    rax
  42211b:	vmovsd xmm0,QWORD PTR [rbx-0x10]
  422120:	lea    rsi,[rip+0x8cfa]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  422127:	mov    r15,rsp
  42212a:	mov    al,0x1
  42212c:	mov    rdi,r15
  42212f:	call   402270 <sprintf@plt>
  422134:	mov    rdi,r15
  422137:	call   4020e0 <strlen@plt>
  42213c:	mov    rdi,r14
  42213f:	mov    rsi,r15
  422142:	mov    rdx,rax
  422145:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  42214a:	mov    QWORD PTR [rbx-0x10],rax
  42214e:	mov    DWORD PTR [rbx-0x8],0x4
  422155:	jmp    422162 <__ctype_b_loc@plt+0x1fe92>
  422157:	mov    eax,0x1
  42215c:	jmp    422186 <__ctype_b_loc@plt+0x1feb6>
  42215e:	mov    rax,QWORD PTR [rbx-0x10]
  422162:	mov    rcx,QWORD PTR [rax+0x10]
  422166:	jmp    42217e <__ctype_b_loc@plt+0x1feae>
  422168:	mov    rdi,QWORD PTR [rbx-0x10]
  42216c:	call   4095e0 <__ctype_b_loc@plt+0x7310>
  422171:	movsxd rcx,eax
  422174:	jmp    42217e <__ctype_b_loc@plt+0x1feae>
  422176:	mov    rax,QWORD PTR [rbx-0x10]
  42217a:	mov    rcx,QWORD PTR [rax+0x20]
  42217e:	xor    eax,eax
  422180:	test   rcx,rcx
  422183:	setne  al
  422186:	add    rsp,0x2038
  42218d:	pop    rbx
  42218e:	pop    r12
  422190:	pop    r13
  422192:	pop    r14
  422194:	pop    r15
  422196:	pop    rbp
  422197:	ret    
  422198:	nop    DWORD PTR [rax+rax*1+0x0]
  4221a0:	push   rbp
  4221a1:	push   r15
  4221a3:	push   r14
  4221a5:	push   r13
  4221a7:	push   r12
  4221a9:	push   rbx
  4221aa:	sub    rsp,0x58
  4221ae:	mov    QWORD PTR [rsp+0x20],rsi
  4221b3:	mov    r8,rdi
  4221b6:	mov    rbp,QWORD PTR [rdi+0x10]
  4221ba:	mov    rax,rbp
  4221bd:	sub    rax,QWORD PTR [rdi+0x18]
  4221c1:	shr    rax,0x4
  4221c5:	cmp    eax,0x1
  4221c8:	je     4225f3 <__ctype_b_loc@plt+0x20323>
  4221ce:	lea    rcx,[r8+0x88]
  4221d5:	mov    QWORD PTR [rsp+0x10],rcx
  4221da:	lea    rcx,[r8+0x78]
  4221de:	mov    QWORD PTR [rsp+0x18],rcx
  4221e3:	movsxd rbx,edx
  4221e6:	mov    r12,rbx
  4221e9:	shl    r12,0x4
  4221ed:	mov    r13,0xffffffffffffd8ee
  4221f4:	sub    r13,rbx
  4221f7:	mov    r14,0xfffffffffffd8ef8
  4221fe:	sub    r14,r12
  422201:	add    r12,0xfffffffffffffff0
  422205:	mov    esi,0x1
  42220a:	mov    r15d,0x1
  422210:	sub    r15d,eax
  422213:	mov    QWORD PTR [rsp+0x8],r8
  422218:	nop    DWORD PTR [rax+rax*1+0x0]
  422220:	test   rbx,rbx
  422223:	jle    422250 <__ctype_b_loc@plt+0x1ff80>
  422225:	mov    rax,QWORD PTR [r8+0x10]
  422229:	mov    rcx,QWORD PTR [r8+0x18]
  42222d:	mov    rdx,rbx
  422230:	shl    rdx,0x4
  422234:	lea    rbp,[rcx+rdx*1]
  422238:	add    rbp,0xfffffffffffffff0
  42223c:	add    rcx,r12
  42223f:	cmp    rcx,rax
  422242:	jb     422268 <__ctype_b_loc@plt+0x1ff98>
  422244:	jmp    4222c4 <__ctype_b_loc@plt+0x1fff4>
  422246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422250:	cmp    rbx,0xffffffffffffd8f1
  422257:	jl     4223ad <__ctype_b_loc@plt+0x200dd>
  42225d:	mov    rbp,rbx
  422260:	shl    rbp,0x4
  422264:	add    rbp,QWORD PTR [r8+0x10]
  422268:	lea    rax,[rip+0x88a9]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  42226f:	cmp    rbp,rax
  422272:	je     4222b0 <__ctype_b_loc@plt+0x1ffe0>
  422274:	cmp    DWORD PTR [rbp+0x8],0x3
  422278:	jne    4222b0 <__ctype_b_loc@plt+0x1ffe0>
  42227a:	test   esi,esi
  42227c:	je     4223a6 <__ctype_b_loc@plt+0x200d6>
  422282:	mov    rdi,r8
  422285:	mov    esi,ebx
  422287:	call   41ddf0 <__ctype_b_loc@plt+0x1bb20>
  42228c:	mov    al,0x1
  42228e:	mov    rdi,QWORD PTR [rsp+0x20]
  422293:	lea    rsi,[rip+0x8b87]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  42229a:	call   402190 <fprintf@plt>
  42229f:	mov    r8,QWORD PTR [rsp+0x8]
  4222a4:	test   eax,eax
  4222a6:	setg   al
  4222a9:	jmp    4225c1 <__ctype_b_loc@plt+0x202f1>
  4222ae:	xchg   ax,ax
  4222b0:	test   rbx,rbx
  4222b3:	jle    4223e7 <__ctype_b_loc@plt+0x20117>
  4222b9:	mov    rax,QWORD PTR [r8+0x10]
  4222bd:	mov    rbp,QWORD PTR [r8+0x18]
  4222c1:	add    rbp,r12
  4222c4:	cmp    rbp,rax
  4222c7:	lea    rax,[rip+0x884a]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4222ce:	cmovae rbp,rax
  4222d2:	mov    eax,DWORD PTR [rbp+0x8]
  4222d5:	cmp    eax,0x4
  4222d8:	je     422590 <__ctype_b_loc@plt+0x202c0>
  4222de:	mov    DWORD PTR [rsp+0x4],esi
  4222e2:	cmp    eax,0x3
  4222e5:	jne    422380 <__ctype_b_loc@plt+0x200b0>
  4222eb:	mov    QWORD PTR [rsp+0x28],r14
  4222f0:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  4222f5:	mov    al,0x1
  4222f7:	lea    r14,[rsp+0x30]
  4222fc:	mov    rdi,r14
  4222ff:	lea    rsi,[rip+0x8b1b]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  422306:	call   402270 <sprintf@plt>
  42230b:	mov    rdi,r14
  42230e:	call   4020e0 <strlen@plt>
  422313:	mov    rdi,QWORD PTR [rsp+0x8]
  422318:	mov    rsi,r14
  42231b:	mov    rdx,rax
  42231e:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  422323:	mov    r8,QWORD PTR [rsp+0x8]
  422328:	mov    QWORD PTR [rbp+0x0],rax
  42232c:	mov    DWORD PTR [rbp+0x8],0x4
  422333:	mov    rax,QWORD PTR [r8+0x20]
  422337:	mov    rcx,QWORD PTR [rax+0x78]
  42233b:	cmp    rcx,QWORD PTR [rax+0x70]
  42233f:	jb     42234e <__ctype_b_loc@plt+0x2007e>
  422341:	mov    rdi,r8
  422344:	call   408070 <__ctype_b_loc@plt+0x5da0>
  422349:	mov    r8,QWORD PTR [rsp+0x8]
  42234e:	test   rbx,rbx
  422351:	mov    r14,QWORD PTR [rsp+0x28]
  422356:	jle    422404 <__ctype_b_loc@plt+0x20134>
  42235c:	mov    rbp,QWORD PTR [r8+0x18]
  422360:	add    rbp,r12
  422363:	cmp    rbp,QWORD PTR [r8+0x10]
  422367:	lea    rax,[rip+0x87aa]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  42236e:	cmovae rbp,rax
  422372:	mov    esi,DWORD PTR [rsp+0x4]
  422376:	jmp    422590 <__ctype_b_loc@plt+0x202c0>
  42237b:	nop    DWORD PTR [rax+rax*1+0x0]
  422380:	mov    rdi,r8
  422383:	mov    esi,ebx
  422385:	lea    rdx,[rip+0x8edd]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  42238c:	call   410850 <__ctype_b_loc@plt+0xe580>
  422391:	mov    r8,QWORD PTR [rsp+0x8]
  422396:	xor    edi,edi
  422398:	xor    ebp,ebp
  42239a:	mov    esi,DWORD PTR [rsp+0x4]
  42239e:	test   esi,esi
  4223a0:	jne    4225a4 <__ctype_b_loc@plt+0x202d4>
  4223a6:	xor    eax,eax
  4223a8:	jmp    4225c1 <__ctype_b_loc@plt+0x202f1>
  4223ad:	mov    rbp,QWORD PTR [rsp+0x18]
  4223b2:	cmp    ebx,0xffffd8ee
  4223b8:	je     422268 <__ctype_b_loc@plt+0x1ff98>
  4223be:	cmp    ebx,0xffffd8ef
  4223c4:	je     42245c <__ctype_b_loc@plt+0x2018c>
  4223ca:	cmp    ebx,0xffffd8f0
  4223d0:	jne    422487 <__ctype_b_loc@plt+0x201b7>
  4223d6:	mov    rbp,QWORD PTR [r8+0x20]
  4223da:	mov    eax,0xa0
  4223df:	add    rbp,rax
  4223e2:	jmp    422268 <__ctype_b_loc@plt+0x1ff98>
  4223e7:	cmp    rbx,0xffffffffffffd8f1
  4223ee:	jl     42249f <__ctype_b_loc@plt+0x201cf>
  4223f4:	mov    rbp,rbx
  4223f7:	shl    rbp,0x4
  4223fb:	add    rbp,QWORD PTR [r8+0x10]
  4223ff:	jmp    4222d2 <__ctype_b_loc@plt+0x20002>
  422404:	cmp    rbx,0xffffffffffffd8f1
  42240b:	mov    esi,DWORD PTR [rsp+0x4]
  42240f:	jl     422422 <__ctype_b_loc@plt+0x20152>
  422411:	mov    rax,QWORD PTR [r8+0x10]
  422415:	lea    rbp,[rax+r12*1]
  422419:	add    rbp,0x10
  42241d:	jmp    422590 <__ctype_b_loc@plt+0x202c0>
  422422:	mov    rbp,QWORD PTR [rsp+0x18]
  422427:	cmp    ebx,0xffffd8ee
  42242d:	je     422590 <__ctype_b_loc@plt+0x202c0>
  422433:	cmp    ebx,0xffffd8ef
  422439:	je     42252e <__ctype_b_loc@plt+0x2025e>
  42243f:	cmp    ebx,0xffffd8f0
  422445:	jne    422556 <__ctype_b_loc@plt+0x20286>
  42244b:	mov    rbp,QWORD PTR [r8+0x20]
  42244f:	mov    eax,0xa0
  422454:	add    rbp,rax
  422457:	jmp    422590 <__ctype_b_loc@plt+0x202c0>
  42245c:	mov    rax,QWORD PTR [r8+0x28]
  422460:	mov    rax,QWORD PTR [rax+0x8]
  422464:	mov    rax,QWORD PTR [rax]
  422467:	mov    rax,QWORD PTR [rax+0x18]
  42246b:	mov    QWORD PTR [r8+0x88],rax
  422472:	mov    DWORD PTR [r8+0x90],0x5
  42247d:	mov    rbp,QWORD PTR [rsp+0x10]
  422482:	jmp    422268 <__ctype_b_loc@plt+0x1ff98>
  422487:	mov    rax,QWORD PTR [r8+0x28]
  42248b:	mov    rax,QWORD PTR [rax+0x8]
  42248f:	mov    rbp,QWORD PTR [rax]
  422492:	movzx  eax,BYTE PTR [rbp+0xb]
  422496:	cmp    r13,rax
  422499:	jle    422526 <__ctype_b_loc@plt+0x20256>
  42249f:	mov    rbp,QWORD PTR [rsp+0x18]
  4224a4:	cmp    ebx,0xffffd8ee
  4224aa:	je     4222d2 <__ctype_b_loc@plt+0x20002>
  4224b0:	cmp    ebx,0xffffd8ef
  4224b6:	je     4224d1 <__ctype_b_loc@plt+0x20201>
  4224b8:	cmp    ebx,0xffffd8f0
  4224be:	jne    4224fc <__ctype_b_loc@plt+0x2022c>
  4224c0:	mov    rbp,QWORD PTR [r8+0x20]
  4224c4:	mov    eax,0xa0
  4224c9:	add    rbp,rax
  4224cc:	jmp    4222d2 <__ctype_b_loc@plt+0x20002>
  4224d1:	mov    rax,QWORD PTR [r8+0x28]
  4224d5:	mov    rax,QWORD PTR [rax+0x8]
  4224d9:	mov    rax,QWORD PTR [rax]
  4224dc:	mov    rax,QWORD PTR [rax+0x18]
  4224e0:	mov    QWORD PTR [r8+0x88],rax
  4224e7:	mov    DWORD PTR [r8+0x90],0x5
  4224f2:	mov    rbp,QWORD PTR [rsp+0x10]
  4224f7:	jmp    4222d2 <__ctype_b_loc@plt+0x20002>
  4224fc:	mov    rax,QWORD PTR [r8+0x28]
  422500:	mov    rax,QWORD PTR [rax+0x8]
  422504:	mov    rax,QWORD PTR [rax]
  422507:	movzx  ecx,BYTE PTR [rax+0xb]
  42250b:	lea    rbp,[rip+0x8606]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  422512:	cmp    r13,rcx
  422515:	jg     4222d2 <__ctype_b_loc@plt+0x20002>
  42251b:	add    rax,r14
  42251e:	mov    rbp,rax
  422521:	jmp    4222d2 <__ctype_b_loc@plt+0x20002>
  422526:	add    rbp,r14
  422529:	jmp    422268 <__ctype_b_loc@plt+0x1ff98>
  42252e:	mov    rax,QWORD PTR [r8+0x28]
  422532:	mov    rax,QWORD PTR [rax+0x8]
  422536:	mov    rax,QWORD PTR [rax]
  422539:	mov    rax,QWORD PTR [rax+0x18]
  42253d:	mov    QWORD PTR [r8+0x88],rax
  422544:	mov    DWORD PTR [r8+0x90],0x5
  42254f:	mov    rbp,QWORD PTR [rsp+0x10]
  422554:	jmp    422590 <__ctype_b_loc@plt+0x202c0>
  422556:	mov    rax,QWORD PTR [r8+0x28]
  42255a:	mov    rax,QWORD PTR [rax+0x8]
  42255e:	mov    rax,QWORD PTR [rax]
  422561:	movzx  ecx,BYTE PTR [rax+0xb]
  422565:	lea    rbp,[rip+0x85ac]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  42256c:	cmp    r13,rcx
  42256f:	jg     422590 <__ctype_b_loc@plt+0x202c0>
  422571:	mov    rcx,0xffffffffffffd8ee
  422578:	sub    rcx,rbx
  42257b:	shl    rcx,0x4
  42257f:	lea    rbp,[rax+rcx*1]
  422583:	add    rbp,0x18
  422587:	nop    WORD PTR [rax+rax*1+0x0]
  422590:	mov    rdi,QWORD PTR [rbp+0x0]
  422594:	mov    rbp,QWORD PTR [rdi+0x10]
  422598:	add    rdi,0x18
  42259c:	test   esi,esi
  42259e:	je     4223a6 <__ctype_b_loc@plt+0x200d6>
  4225a4:	mov    esi,0x1
  4225a9:	mov    rdx,rbp
  4225ac:	mov    rcx,QWORD PTR [rsp+0x20]
  4225b1:	call   402290 <fwrite@plt>
  4225b6:	mov    r8,QWORD PTR [rsp+0x8]
  4225bb:	cmp    rax,rbp
  4225be:	sete   al
  4225c1:	movzx  esi,al
  4225c4:	add    rbx,0x1
  4225c8:	add    r12,0x10
  4225cc:	add    r13,0xffffffffffffffff
  4225d0:	add    r14,0xfffffffffffffff0
  4225d4:	add    r15d,0x1
  4225d8:	jne    422220 <__ctype_b_loc@plt+0x1ff50>
  4225de:	mov    rbp,QWORD PTR [r8+0x10]
  4225e2:	mov    r15,r8
  4225e5:	mov    ebx,esi
  4225e7:	call   402050 <__errno_location@plt>
  4225ec:	test   ebx,ebx
  4225ee:	je     422601 <__ctype_b_loc@plt+0x20331>
  4225f0:	mov    r8,r15
  4225f3:	mov    DWORD PTR [rbp+0x0],0x1
  4225fa:	mov    eax,0x1
  4225ff:	jmp    422648 <__ctype_b_loc@plt+0x20378>
  422601:	mov    r14d,DWORD PTR [rax]
  422604:	mov    DWORD PTR [rbp+0x8],0x0
  42260b:	add    rbp,0x10
  42260f:	mov    QWORD PTR [r15+0x10],rbp
  422613:	mov    edi,r14d
  422616:	call   4022a0 <strerror@plt>
  42261b:	mov    rcx,rax
  42261e:	lea    rsi,[rip+0x87c2]        # 42ade7 <__ctype_b_loc@plt+0x28b17>
  422625:	xor    eax,eax
  422627:	mov    rdi,r15
  42262a:	mov    rdx,rcx
  42262d:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  422632:	mov    rbp,QWORD PTR [r15+0x10]
  422636:	vcvtsi2sd xmm0,xmm1,r14d
  42263b:	vmovsd QWORD PTR [rbp+0x0],xmm0
  422640:	mov    eax,0x3
  422645:	mov    r8,r15
  422648:	mov    DWORD PTR [rbp+0x8],eax
  42264b:	add    QWORD PTR [r8+0x10],0x10
  422650:	add    rsp,0x58
  422654:	pop    rbx
  422655:	pop    r12
  422657:	pop    r13
  422659:	pop    r14
  42265b:	pop    r15
  42265d:	pop    rbp
  42265e:	ret    
  42265f:	nop
  422660:	push   r14
  422662:	push   rbx
  422663:	push   rax
  422664:	mov    r14,rdi
  422667:	mov    rax,QWORD PTR [rdi+0x28]
  42266b:	mov    rax,QWORD PTR [rax+0x8]
  42266f:	mov    rax,QWORD PTR [rax]
  422672:	mov    rcx,QWORD PTR [rax+0x18]
  422676:	mov    QWORD PTR [rdi+0x88],rcx
  42267d:	mov    DWORD PTR [rdi+0x90],0x5
  422687:	cmp    DWORD PTR [rcx+0x38],0x2
  42268b:	jb     422697 <__ctype_b_loc@plt+0x203c7>
  42268d:	mov    rax,QWORD PTR [rcx+0x18]
  422691:	add    rax,0x10
  422695:	jmp    422701 <__ctype_b_loc@plt+0x20431>
  422697:	mov    al,BYTE PTR [rcx+0xb]
  42269a:	mov    rdx,0xffffffffffffffff
  4226a1:	shlx   rsi,rdx,rax
  4226a6:	or     rsi,0x1
  4226aa:	xor    rsi,0xfffffffffffffffe
  4226ae:	mov    eax,0x40000000
  4226b3:	xor    edx,edx
  4226b5:	div    rsi
  4226b8:	lea    rdx,[rdx+rdx*4]
  4226bc:	shl    rdx,0x3
  4226c0:	add    rdx,QWORD PTR [rcx+0x20]
  4226c4:	vmovsd xmm0,QWORD PTR [rip+0x868c]        # 42ad58 <__ctype_b_loc@plt+0x28a88>
  4226cc:	lea    rax,[rip+0x8445]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4226d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4226dd:	nop    DWORD PTR [rax]
  4226e0:	cmp    DWORD PTR [rdx+0x18],0x3
  4226e4:	jne    4226f3 <__ctype_b_loc@plt+0x20423>
  4226e6:	vmovsd xmm1,QWORD PTR [rdx+0x10]
  4226eb:	vucomisd xmm1,xmm0
  4226ef:	jne    4226f3 <__ctype_b_loc@plt+0x20423>
  4226f1:	jnp    4226fe <__ctype_b_loc@plt+0x2042e>
  4226f3:	mov    rdx,QWORD PTR [rdx+0x20]
  4226f7:	test   rdx,rdx
  4226fa:	jne    4226e0 <__ctype_b_loc@plt+0x20410>
  4226fc:	jmp    422701 <__ctype_b_loc@plt+0x20431>
  4226fe:	mov    rax,rdx
  422701:	mov    rcx,QWORD PTR [r14+0x10]
  422705:	mov    rdx,QWORD PTR [rax]
  422708:	mov    QWORD PTR [rcx],rdx
  42270b:	mov    eax,DWORD PTR [rax+0x8]
  42270e:	mov    DWORD PTR [rcx+0x8],eax
  422711:	mov    rax,QWORD PTR [r14+0x10]
  422715:	lea    rcx,[rax+0x10]
  422719:	mov    QWORD PTR [r14+0x10],rcx
  42271d:	mov    ecx,DWORD PTR [rax+0x8]
  422720:	cmp    ecx,0x2
  422723:	je     422733 <__ctype_b_loc@plt+0x20463>
  422725:	cmp    ecx,0x7
  422728:	jne    422738 <__ctype_b_loc@plt+0x20468>
  42272a:	mov    rax,QWORD PTR [rax]
  42272d:	add    rax,0x28
  422731:	jmp    42273a <__ctype_b_loc@plt+0x2046a>
  422733:	mov    rax,QWORD PTR [rax]
  422736:	jmp    42273a <__ctype_b_loc@plt+0x2046a>
  422738:	xor    eax,eax
  42273a:	mov    rbx,QWORD PTR [rax]
  42273d:	test   rbx,rbx
  422740:	jne    42275a <__ctype_b_loc@plt+0x2048a>
  422742:	lea    rsi,[rip+0x9084]        # 42b7cd <__ctype_b_loc@plt+0x294fd>
  422749:	lea    rdx,[rip+0x9076]        # 42b7c6 <__ctype_b_loc@plt+0x294f6>
  422750:	xor    eax,eax
  422752:	mov    rdi,r14
  422755:	call   410070 <__ctype_b_loc@plt+0xdda0>
  42275a:	mov    rdi,rbx
  42275d:	call   4021e0 <fflush@plt>
  422762:	mov    ebx,eax
  422764:	call   402050 <__errno_location@plt>
  422769:	mov    rcx,QWORD PTR [r14+0x10]
  42276d:	test   ebx,ebx
  42276f:	je     4227b3 <__ctype_b_loc@plt+0x204e3>
  422771:	mov    ebx,DWORD PTR [rax]
  422773:	mov    DWORD PTR [rcx+0x8],0x0
  42277a:	add    rcx,0x10
  42277e:	mov    QWORD PTR [r14+0x10],rcx
  422782:	mov    edi,ebx
  422784:	call   4022a0 <strerror@plt>
  422789:	mov    rcx,rax
  42278c:	lea    rsi,[rip+0x8654]        # 42ade7 <__ctype_b_loc@plt+0x28b17>
  422793:	xor    eax,eax
  422795:	mov    rdi,r14
  422798:	mov    rdx,rcx
  42279b:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  4227a0:	mov    rcx,QWORD PTR [r14+0x10]
  4227a4:	vcvtsi2sd xmm0,xmm2,ebx
  4227a8:	vmovsd QWORD PTR [rcx],xmm0
  4227ac:	mov    eax,0x3
  4227b1:	jmp    4227be <__ctype_b_loc@plt+0x204ee>
  4227b3:	mov    DWORD PTR [rcx],0x1
  4227b9:	mov    eax,0x1
  4227be:	mov    DWORD PTR [rcx+0x8],eax
  4227c1:	add    QWORD PTR [r14+0x10],0x10
  4227c6:	add    rsp,0x8
  4227ca:	pop    rbx
  4227cb:	pop    r14
  4227cd:	ret    
  4227ce:	xchg   ax,ax
  4227d0:	push   rax
  4227d1:	lea    rdx,[rip+0x9038]        # 42b810 <__ctype_b_loc@plt+0x29540>
  4227d8:	mov    esi,0x1
  4227dd:	call   423370 <__ctype_b_loc@plt+0x210a0>
  4227e2:	mov    eax,0x1
  4227e7:	pop    rcx
  4227e8:	ret    
  4227e9:	nop    DWORD PTR [rax+0x0]
  4227f0:	push   rbp
  4227f1:	push   r15
  4227f3:	push   r14
  4227f5:	push   r13
  4227f7:	push   r12
  4227f9:	push   rbx
  4227fa:	sub    rsp,0x28
  4227fe:	mov    rbp,rdi
  422801:	mov    rcx,QWORD PTR [rdi+0x10]
  422805:	mov    rbx,QWORD PTR [rdi+0x18]
  422809:	lea    r13,[rip+0x8308]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  422810:	cmp    rbx,r13
  422813:	je     42289b <__ctype_b_loc@plt+0x205cb>
  422819:	cmp    rbx,rcx
  42281c:	jae    42289b <__ctype_b_loc@plt+0x205cb>
  42281e:	movsxd rax,DWORD PTR [rbx+0x8]
  422822:	test   rax,rax
  422825:	jle    42289b <__ctype_b_loc@plt+0x205cb>
  422827:	cmp    eax,0x4
  42282a:	je     42288f <__ctype_b_loc@plt+0x205bf>
  42282c:	cmp    eax,0x3
  42282f:	jne    422935 <__ctype_b_loc@plt+0x20665>
  422835:	vmovsd xmm0,QWORD PTR [rbx]
  422839:	lea    rsi,[rip+0x85e1]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  422840:	mov    r14,rsp
  422843:	mov    al,0x1
  422845:	mov    rdi,r14
  422848:	call   402270 <sprintf@plt>
  42284d:	mov    rdi,r14
  422850:	call   4020e0 <strlen@plt>
  422855:	mov    rdi,rbp
  422858:	mov    rsi,r14
  42285b:	mov    rdx,rax
  42285e:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  422863:	mov    QWORD PTR [rbx],rax
  422866:	mov    DWORD PTR [rbx+0x8],0x4
  42286d:	mov    rax,QWORD PTR [rbp+0x20]
  422871:	mov    rcx,QWORD PTR [rax+0x78]
  422875:	cmp    rcx,QWORD PTR [rax+0x70]
  422879:	jb     422883 <__ctype_b_loc@plt+0x205b3>
  42287b:	mov    rdi,rbp
  42287e:	call   408070 <__ctype_b_loc@plt+0x5da0>
  422883:	mov    rbx,QWORD PTR [rbp+0x18]
  422887:	cmp    rbx,QWORD PTR [rbp+0x10]
  42288b:	cmovae rbx,r13
  42288f:	mov    r14,QWORD PTR [rbx]
  422892:	add    r14,0x18
  422896:	jmp    42296b <__ctype_b_loc@plt+0x2069b>
  42289b:	mov    rax,QWORD PTR [rbp+0x28]
  42289f:	mov    rax,QWORD PTR [rax+0x8]
  4228a3:	mov    rax,QWORD PTR [rax]
  4228a6:	mov    rsi,QWORD PTR [rax+0x18]
  4228aa:	mov    QWORD PTR [rbp+0x88],rsi
  4228b1:	mov    DWORD PTR [rbp+0x90],0x5
  4228bb:	cmp    DWORD PTR [rsi+0x38],0x0
  4228bf:	je     4228ca <__ctype_b_loc@plt+0x205fa>
  4228c1:	mov    rax,QWORD PTR [rsi+0x18]
  4228c5:	jmp    422a58 <__ctype_b_loc@plt+0x20788>
  4228ca:	mov    al,BYTE PTR [rsi+0xb]
  4228cd:	mov    rdx,0xffffffffffffffff
  4228d4:	shlx   rdi,rdx,rax
  4228d9:	or     rdi,0x1
  4228dd:	xor    rdi,0xfffffffffffffffe
  4228e1:	mov    eax,0x3ff00000
  4228e6:	xor    edx,edx
  4228e8:	div    rdi
  4228eb:	lea    rdx,[rdx+rdx*4]
  4228ef:	shl    rdx,0x3
  4228f3:	add    rdx,QWORD PTR [rsi+0x20]
  4228f7:	vmovsd xmm0,QWORD PTR [rip+0x8461]        # 42ad60 <__ctype_b_loc@plt+0x28a90>
  4228ff:	lea    rax,[rip+0x8212]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  422906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422910:	cmp    DWORD PTR [rdx+0x18],0x3
  422914:	jne    422927 <__ctype_b_loc@plt+0x20657>
  422916:	vmovsd xmm1,QWORD PTR [rdx+0x10]
  42291b:	vucomisd xmm1,xmm0
  42291f:	jne    422927 <__ctype_b_loc@plt+0x20657>
  422921:	jnp    422a55 <__ctype_b_loc@plt+0x20785>
  422927:	mov    rdx,QWORD PTR [rdx+0x20]
  42292b:	test   rdx,rdx
  42292e:	jne    422910 <__ctype_b_loc@plt+0x20640>
  422930:	jmp    422a58 <__ctype_b_loc@plt+0x20788>
  422935:	lea    rcx,[rip+0xdfa4]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  42293c:	mov    rcx,QWORD PTR [rcx+rax*8]
  422940:	lea    rsi,[rip+0x887b]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  422947:	lea    rdx,[rip+0x891b]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  42294e:	xor    r14d,r14d
  422951:	xor    eax,eax
  422953:	mov    rdi,rbp
  422956:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  42295b:	mov    esi,0x1
  422960:	mov    rdi,rbp
  422963:	mov    rdx,rax
  422966:	call   410240 <__ctype_b_loc@plt+0xdf70>
  42296b:	mov    esi,0x8
  422970:	mov    rdi,rbp
  422973:	call   41dfb0 <__ctype_b_loc@plt+0x1bce0>
  422978:	mov    r15,rax
  42297b:	mov    QWORD PTR [rax],0x0
  422982:	mov    r12d,0xa0
  422988:	add    r12,QWORD PTR [rbp+0x20]
  42298c:	lea    rsi,[rip+0x8d93]        # 42b726 <__ctype_b_loc@plt+0x29456>
  422993:	mov    edx,0x5
  422998:	mov    rdi,rbp
  42299b:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  4229a0:	mov    QWORD PTR [rsp],rax
  4229a4:	mov    DWORD PTR [rsp+0x8],0x4
  4229ac:	mov    rcx,QWORD PTR [rbp+0x10]
  4229b0:	mov    rdx,rsp
  4229b3:	mov    rdi,rbp
  4229b6:	mov    rsi,r12
  4229b9:	call   408700 <__ctype_b_loc@plt+0x6430>
  4229be:	add    QWORD PTR [rbp+0x10],0x10
  4229c3:	mov    esi,0xfffffffe
  4229c8:	mov    rdi,rbp
  4229cb:	call   40d5b0 <__ctype_b_loc@plt+0xb2e0>
  4229d0:	lea    rsi,[rip+0x8e39]        # 42b810 <__ctype_b_loc@plt+0x29540>
  4229d7:	mov    rdi,r14
  4229da:	call   402240 <fopen@plt>
  4229df:	mov    QWORD PTR [r15],rax
  4229e2:	test   rax,rax
  4229e5:	jne    4229f2 <__ctype_b_loc@plt+0x20722>
  4229e7:	mov    rdi,rbp
  4229ea:	mov    rsi,r14
  4229ed:	call   4235e0 <__ctype_b_loc@plt+0x21310>
  4229f2:	mov    rax,QWORD PTR [rbp+0x10]
  4229f6:	mov    rsi,QWORD PTR [rbp+0x18]
  4229fa:	mov    rdx,rax
  4229fd:	sub    rdx,rsi
  422a00:	mov    rcx,rdx
  422a03:	shr    rcx,0x4
  422a07:	test   ecx,ecx
  422a09:	jle    422a36 <__ctype_b_loc@plt+0x20766>
  422a0b:	shl    rdx,0x1c
  422a0f:	movabs rcx,0xffffffff00000000
  422a19:	add    rcx,rdx
  422a1c:	sar    rcx,0x1c
  422a20:	add    rsi,rcx
  422a23:	cmp    rsi,rax
  422a26:	lea    r13,[rip+0x80eb]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  422a2d:	cmovb  r13,rsi
  422a31:	jmp    422b3e <__ctype_b_loc@plt+0x2086e>
  422a36:	cmp    ecx,0xffffd8f1
  422a3c:	jl     422ac2 <__ctype_b_loc@plt+0x207f2>
  422a42:	shl    rdx,0x1c
  422a46:	sar    rdx,0x1c
  422a4a:	add    rdx,rax
  422a4d:	mov    r13,rdx
  422a50:	jmp    422b3e <__ctype_b_loc@plt+0x2086e>
  422a55:	mov    rax,rdx
  422a58:	mov    rdx,QWORD PTR [rax]
  422a5b:	mov    QWORD PTR [rcx],rdx
  422a5e:	mov    eax,DWORD PTR [rax+0x8]
  422a61:	mov    DWORD PTR [rcx+0x8],eax
  422a64:	add    QWORD PTR [rbp+0x10],0x10
  422a69:	mov    rdi,rbp
  422a6c:	call   421370 <__ctype_b_loc@plt+0x1f0a0>
  422a71:	cmp    QWORD PTR [rax],0x0
  422a75:	jne    422a88 <__ctype_b_loc@plt+0x207b8>
  422a77:	lea    rsi,[rip+0x8cba]        # 42b738 <__ctype_b_loc@plt+0x29468>
  422a7e:	xor    eax,eax
  422a80:	mov    rdi,rbp
  422a83:	call   410070 <__ctype_b_loc@plt+0xdda0>
  422a88:	mov    rax,QWORD PTR [rbp+0x10]
  422a8c:	mov    rcx,QWORD PTR [rbp+0x18]
  422a90:	cmp    rcx,rax
  422a93:	lea    rdx,[rip+0x807e]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  422a9a:	cmovb  rdx,rcx
  422a9e:	mov    rcx,QWORD PTR [rdx]
  422aa1:	mov    QWORD PTR [rax],rcx
  422aa4:	mov    ecx,DWORD PTR [rdx+0x8]
  422aa7:	mov    DWORD PTR [rax+0x8],ecx
  422aaa:	mov    rax,QWORD PTR [rbp+0x10]
  422aae:	lea    rcx,[rax+0x10]
  422ab2:	mov    QWORD PTR [rbp+0x10],rcx
  422ab6:	mov    DWORD PTR [rax+0x10],0x0
  422abd:	jmp    422b5f <__ctype_b_loc@plt+0x2088f>
  422ac2:	cmp    ecx,0xffffd8ee
  422ac8:	je     422ae6 <__ctype_b_loc@plt+0x20816>
  422aca:	cmp    ecx,0xffffd8ef
  422ad0:	je     422aec <__ctype_b_loc@plt+0x2081c>
  422ad2:	cmp    ecx,0xffffd8f0
  422ad8:	jne    422b15 <__ctype_b_loc@plt+0x20845>
  422ada:	mov    r13d,0xa0
  422ae0:	add    r13,QWORD PTR [rbp+0x20]
  422ae4:	jmp    422b3e <__ctype_b_loc@plt+0x2086e>
  422ae6:	lea    r13,[rbp+0x78]
  422aea:	jmp    422b3e <__ctype_b_loc@plt+0x2086e>
  422aec:	mov    rcx,QWORD PTR [rbp+0x28]
  422af0:	mov    rcx,QWORD PTR [rcx+0x8]
  422af4:	mov    rcx,QWORD PTR [rcx]
  422af7:	lea    r13,[rbp+0x88]
  422afe:	mov    rcx,QWORD PTR [rcx+0x18]
  422b02:	mov    QWORD PTR [rbp+0x88],rcx
  422b09:	mov    DWORD PTR [rbp+0x90],0x5
  422b13:	jmp    422b3e <__ctype_b_loc@plt+0x2086e>
  422b15:	mov    rdx,QWORD PTR [rbp+0x28]
  422b19:	mov    rdx,QWORD PTR [rdx+0x8]
  422b1d:	mov    rdx,QWORD PTR [rdx]
  422b20:	mov    esi,0xffffd8ee
  422b25:	sub    esi,ecx
  422b27:	movzx  ecx,BYTE PTR [rdx+0xb]
  422b2b:	cmp    esi,ecx
  422b2d:	jg     422b3e <__ctype_b_loc@plt+0x2086e>
  422b2f:	movsxd rcx,esi
  422b32:	shl    rcx,0x4
  422b36:	lea    r13,[rdx+rcx*1]
  422b3a:	add    r13,0x18
  422b3e:	mov    rcx,QWORD PTR [r13+0x0]
  422b42:	mov    QWORD PTR [rax],rcx
  422b45:	mov    ecx,DWORD PTR [r13+0x8]
  422b49:	mov    DWORD PTR [rax+0x8],ecx
  422b4c:	mov    rax,QWORD PTR [rbp+0x10]
  422b50:	lea    rcx,[rax+0x10]
  422b54:	mov    QWORD PTR [rbp+0x10],rcx
  422b58:	mov    DWORD PTR [rax+0x10],0x1
  422b5f:	mov    DWORD PTR [rax+0x18],0x1
  422b66:	add    QWORD PTR [rbp+0x10],0x10
  422b6b:	lea    rsi,[rip+0xffffffffffffe97e]        # 4214f0 <__ctype_b_loc@plt+0x1f220>
  422b72:	mov    edx,0x2
  422b77:	mov    rdi,rbp
  422b7a:	call   40bb90 <__ctype_b_loc@plt+0x98c0>
  422b7f:	mov    eax,0x1
  422b84:	add    rsp,0x28
  422b88:	pop    rbx
  422b89:	pop    r12
  422b8b:	pop    r13
  422b8d:	pop    r14
  422b8f:	pop    r15
  422b91:	pop    rbp
  422b92:	ret    
  422b93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422b9d:	nop    DWORD PTR [rax]
  422ba0:	push   rbp
  422ba1:	push   r15
  422ba3:	push   r14
  422ba5:	push   r13
  422ba7:	push   r12
  422ba9:	push   rbx
  422baa:	sub    rsp,0x88
  422bb1:	mov    r12,rdi
  422bb4:	mov    rax,QWORD PTR [rdi+0x10]
  422bb8:	mov    r13,QWORD PTR [rdi+0x18]
  422bbc:	cmp    r13,rax
  422bbf:	lea    r14,[rip+0x7f52]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  422bc6:	mov    rbx,r14
  422bc9:	cmovb  rbx,r13
  422bcd:	mov    ecx,DWORD PTR [rbx+0x8]
  422bd0:	cmp    ecx,0x4
  422bd3:	je     422c3f <__ctype_b_loc@plt+0x2096f>
  422bd5:	cmp    ecx,0x3
  422bd8:	jne    422c50 <__ctype_b_loc@plt+0x20980>
  422bda:	vmovsd xmm0,QWORD PTR [rbx]
  422bde:	lea    rsi,[rip+0x823c]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  422be5:	lea    rbp,[rsp+0x10]
  422bea:	mov    al,0x1
  422bec:	mov    rdi,rbp
  422bef:	call   402270 <sprintf@plt>
  422bf4:	mov    rdi,rbp
  422bf7:	call   4020e0 <strlen@plt>
  422bfc:	mov    rdi,r12
  422bff:	mov    rsi,rbp
  422c02:	mov    rdx,rax
  422c05:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  422c0a:	mov    QWORD PTR [rbx],rax
  422c0d:	mov    DWORD PTR [rbx+0x8],0x4
  422c14:	mov    rax,QWORD PTR [r12+0x20]
  422c19:	mov    rcx,QWORD PTR [rax+0x78]
  422c1d:	cmp    rcx,QWORD PTR [rax+0x70]
  422c21:	jb     422c2b <__ctype_b_loc@plt+0x2095b>
  422c23:	mov    rdi,r12
  422c26:	call   408070 <__ctype_b_loc@plt+0x5da0>
  422c2b:	mov    rax,QWORD PTR [r12+0x10]
  422c30:	mov    r13,QWORD PTR [r12+0x18]
  422c35:	cmp    r13,rax
  422c38:	mov    rbx,r14
  422c3b:	cmovb  rbx,r13
  422c3f:	mov    rbx,QWORD PTR [rbx]
  422c42:	add    rbx,0x18
  422c46:	mov    DWORD PTR [rsp+0x4],0x0
  422c4e:	jmp    422cb0 <__ctype_b_loc@plt+0x209e0>
  422c50:	lea    rcx,[rip+0x857f]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  422c57:	cmp    r13,r14
  422c5a:	je     422c76 <__ctype_b_loc@plt+0x209a6>
  422c5c:	cmp    r13,rax
  422c5f:	jae    422c76 <__ctype_b_loc@plt+0x209a6>
  422c61:	movsxd rax,DWORD PTR [r13+0x8]
  422c65:	cmp    rax,0xffffffffffffffff
  422c69:	je     422c76 <__ctype_b_loc@plt+0x209a6>
  422c6b:	lea    rcx,[rip+0xdc6e]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  422c72:	mov    rcx,QWORD PTR [rcx+rax*8]
  422c76:	lea    rsi,[rip+0x8545]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  422c7d:	lea    rdx,[rip+0x85e5]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  422c84:	xor    ebx,ebx
  422c86:	xor    eax,eax
  422c88:	mov    rdi,r12
  422c8b:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  422c90:	mov    esi,0x1
  422c95:	mov    rdi,r12
  422c98:	mov    rdx,rax
  422c9b:	call   410240 <__ctype_b_loc@plt+0xdf70>
  422ca0:	mov    rax,QWORD PTR [r12+0x10]
  422ca5:	mov    r13,QWORD PTR [r12+0x18]
  422caa:	mov    cl,0x1
  422cac:	mov    DWORD PTR [rsp+0x4],ecx
  422cb0:	lea    rcx,[r13+0x10]
  422cb4:	lea    r15,[rip+0x8b55]        # 42b810 <__ctype_b_loc@plt+0x29540>
  422cbb:	cmp    rcx,rax
  422cbe:	mov    QWORD PTR [rsp+0x8],rbx
  422cc3:	jae    422e1a <__ctype_b_loc@plt+0x20b4a>
  422cc9:	cmp    rcx,r14
  422ccc:	je     422e1a <__ctype_b_loc@plt+0x20b4a>
  422cd2:	movsxd rax,DWORD PTR [r13+0x18]
  422cd6:	test   rax,rax
  422cd9:	jle    422e1a <__ctype_b_loc@plt+0x20b4a>
  422cdf:	cmp    eax,0x4
  422ce2:	je     422d53 <__ctype_b_loc@plt+0x20a83>
  422ce4:	cmp    eax,0x3
  422ce7:	jne    422d5f <__ctype_b_loc@plt+0x20a8f>
  422ce9:	vmovsd xmm0,QWORD PTR [r13+0x10]
  422cef:	lea    rsi,[rip+0x812b]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  422cf6:	lea    rbp,[rsp+0x10]
  422cfb:	mov    al,0x1
  422cfd:	mov    rdi,rbp
  422d00:	call   402270 <sprintf@plt>
  422d05:	mov    rdi,rbp
  422d08:	call   4020e0 <strlen@plt>
  422d0d:	mov    rdi,r12
  422d10:	mov    rsi,rbp
  422d13:	mov    rdx,rax
  422d16:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  422d1b:	mov    QWORD PTR [r13+0x10],rax
  422d1f:	mov    DWORD PTR [r13+0x18],0x4
  422d27:	mov    rax,QWORD PTR [r12+0x20]
  422d2c:	mov    rcx,QWORD PTR [rax+0x78]
  422d30:	cmp    rcx,QWORD PTR [rax+0x70]
  422d34:	jb     422d3e <__ctype_b_loc@plt+0x20a6e>
  422d36:	mov    rdi,r12
  422d39:	call   408070 <__ctype_b_loc@plt+0x5da0>
  422d3e:	mov    rax,QWORD PTR [r12+0x18]
  422d43:	add    rax,0x10
  422d47:	cmp    rax,QWORD PTR [r12+0x10]
  422d4c:	cmovb  r14,rax
  422d50:	mov    rcx,r14
  422d53:	mov    r15,QWORD PTR [rcx]
  422d56:	add    r15,0x18
  422d5a:	jmp    422e1a <__ctype_b_loc@plt+0x20b4a>
  422d5f:	lea    rcx,[rip+0xdb7a]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  422d66:	mov    rcx,QWORD PTR [rcx+rax*8]
  422d6a:	lea    rsi,[rip+0x8451]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  422d71:	lea    rdx,[rip+0x84f1]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  422d78:	xor    eax,eax
  422d7a:	mov    rdi,r12
  422d7d:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  422d82:	mov    r15,rax
  422d85:	mov    rax,QWORD PTR [r12+0x28]
  422d8a:	sub    rax,QWORD PTR [r12+0x50]
  422d8f:	jbe    422dfe <__ctype_b_loc@plt+0x20b2e>
  422d91:	shr    rax,0x3
  422d95:	imul   eax,eax,0xcccccccd
  422d9b:	mov    DWORD PTR [rsp+0x84],eax
  422da2:	lea    rsi,[rip+0x80ae]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  422da9:	lea    rdx,[rsp+0x10]
  422dae:	mov    rdi,r12
  422db1:	call   410310 <__ctype_b_loc@plt+0xe040>
  422db6:	mov    rdi,QWORD PTR [rsp+0x20]
  422dbb:	lea    rsi,[rip+0x838e]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  422dc2:	call   402180 <strcmp@plt>
  422dc7:	cmp    eax,0x1
  422dca:	mov    edx,0x2
  422dcf:	sbb    edx,0x0
  422dd2:	mov    rcx,QWORD PTR [rsp+0x18]
  422dd7:	test   rcx,rcx
  422dda:	jne    422de8 <__ctype_b_loc@plt+0x20b18>
  422ddc:	lea    rcx,[rip+0x8392]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  422de3:	mov    QWORD PTR [rsp+0x18],rcx
  422de8:	lea    rsi,[rip+0x8388]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  422def:	xor    eax,eax
  422df1:	mov    rdi,r12
  422df4:	mov    r8,r15
  422df7:	call   410070 <__ctype_b_loc@plt+0xdda0>
  422dfc:	jmp    422e17 <__ctype_b_loc@plt+0x20b47>
  422dfe:	lea    rsi,[rip+0x8335]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  422e05:	mov    edx,0x2
  422e0a:	xor    eax,eax
  422e0c:	mov    rdi,r12
  422e0f:	mov    rcx,r15
  422e12:	call   410070 <__ctype_b_loc@plt+0xdda0>
  422e17:	xor    r15d,r15d
  422e1a:	mov    esi,0x8
  422e1f:	mov    rdi,r12
  422e22:	call   41dfb0 <__ctype_b_loc@plt+0x1bce0>
  422e27:	mov    rbp,rax
  422e2a:	mov    QWORD PTR [rax],0x0
  422e31:	mov    ebx,0xa0
  422e36:	add    rbx,QWORD PTR [r12+0x20]
  422e3b:	lea    rsi,[rip+0x88e4]        # 42b726 <__ctype_b_loc@plt+0x29456>
  422e42:	mov    edx,0x5
  422e47:	mov    rdi,r12
  422e4a:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  422e4f:	mov    QWORD PTR [rsp+0x10],rax
  422e54:	mov    DWORD PTR [rsp+0x18],0x4
  422e5c:	mov    rcx,QWORD PTR [r12+0x10]
  422e61:	lea    rdx,[rsp+0x10]
  422e66:	mov    rdi,r12
  422e69:	mov    rsi,rbx
  422e6c:	call   408700 <__ctype_b_loc@plt+0x6430>
  422e71:	add    QWORD PTR [r12+0x10],0x10
  422e77:	mov    esi,0xfffffffe
  422e7c:	mov    rdi,r12
  422e7f:	call   40d5b0 <__ctype_b_loc@plt+0xb2e0>
  422e84:	mov    rbx,QWORD PTR [rsp+0x8]
  422e89:	mov    rdi,rbx
  422e8c:	mov    rsi,r15
  422e8f:	call   402240 <fopen@plt>
  422e94:	mov    rcx,rax
  422e97:	mov    QWORD PTR [rbp+0x0],rax
  422e9b:	mov    eax,0x1
  422ea0:	test   rcx,rcx
  422ea3:	jne    422f1b <__ctype_b_loc@plt+0x20c4b>
  422ea5:	call   402050 <__errno_location@plt>
  422eaa:	mov    ebp,DWORD PTR [rax]
  422eac:	mov    rax,QWORD PTR [r12+0x10]
  422eb1:	mov    DWORD PTR [rax+0x8],0x0
  422eb8:	add    rax,0x10
  422ebc:	mov    QWORD PTR [r12+0x10],rax
  422ec1:	mov    edi,ebp
  422ec3:	call   4022a0 <strerror@plt>
  422ec8:	mov    rcx,rax
  422ecb:	cmp    BYTE PTR [rsp+0x4],0x0
  422ed0:	je     422ee8 <__ctype_b_loc@plt+0x20c18>
  422ed2:	lea    rsi,[rip+0x7f0e]        # 42ade7 <__ctype_b_loc@plt+0x28b17>
  422ed9:	xor    eax,eax
  422edb:	mov    rdi,r12
  422ede:	mov    rdx,rcx
  422ee1:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  422ee6:	jmp    422efc <__ctype_b_loc@plt+0x20c2c>
  422ee8:	lea    rsi,[rip+0x8b8d]        # 42ba7c <__ctype_b_loc@plt+0x297ac>
  422eef:	xor    eax,eax
  422ef1:	mov    rdi,r12
  422ef4:	mov    rdx,rbx
  422ef7:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  422efc:	mov    rax,QWORD PTR [r12+0x10]
  422f01:	vcvtsi2sd xmm0,xmm1,ebp
  422f05:	vmovsd QWORD PTR [rax],xmm0
  422f09:	mov    DWORD PTR [rax+0x8],0x3
  422f10:	add    QWORD PTR [r12+0x10],0x10
  422f16:	mov    eax,0x3
  422f1b:	add    rsp,0x88
  422f22:	pop    rbx
  422f23:	pop    r12
  422f25:	pop    r13
  422f27:	pop    r14
  422f29:	pop    r15
  422f2b:	pop    rbp
  422f2c:	ret    
  422f2d:	nop    DWORD PTR [rax]
  422f30:	push   rax
  422f31:	lea    rdx,[rip+0x83e4]        # 42b31c <__ctype_b_loc@plt+0x2904c>
  422f38:	mov    esi,0x2
  422f3d:	call   423370 <__ctype_b_loc@plt+0x210a0>
  422f42:	mov    eax,0x1
  422f47:	pop    rcx
  422f48:	ret    
  422f49:	nop    DWORD PTR [rax+0x0]
  422f50:	push   r14
  422f52:	push   rbx
  422f53:	push   rax
  422f54:	mov    r14,rdi
  422f57:	mov    rax,QWORD PTR [rdi+0x28]
  422f5b:	mov    rax,QWORD PTR [rax+0x8]
  422f5f:	mov    rax,QWORD PTR [rax]
  422f62:	mov    rcx,QWORD PTR [rax+0x18]
  422f66:	mov    QWORD PTR [rdi+0x88],rcx
  422f6d:	mov    DWORD PTR [rdi+0x90],0x5
  422f77:	cmp    DWORD PTR [rcx+0x38],0x0
  422f7b:	je     422f83 <__ctype_b_loc@plt+0x20cb3>
  422f7d:	mov    rax,QWORD PTR [rcx+0x18]
  422f81:	jmp    422fe1 <__ctype_b_loc@plt+0x20d11>
  422f83:	mov    al,BYTE PTR [rcx+0xb]
  422f86:	mov    rdx,0xffffffffffffffff
  422f8d:	shlx   rsi,rdx,rax
  422f92:	or     rsi,0x1
  422f96:	xor    rsi,0xfffffffffffffffe
  422f9a:	mov    eax,0x3ff00000
  422f9f:	xor    edx,edx
  422fa1:	div    rsi
  422fa4:	lea    rdx,[rdx+rdx*4]
  422fa8:	shl    rdx,0x3
  422fac:	add    rdx,QWORD PTR [rcx+0x20]
  422fb0:	vmovsd xmm0,QWORD PTR [rip+0x7da8]        # 42ad60 <__ctype_b_loc@plt+0x28a90>
  422fb8:	lea    rax,[rip+0x7b59]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  422fbf:	nop
  422fc0:	cmp    DWORD PTR [rdx+0x18],0x3
  422fc4:	jne    422fd3 <__ctype_b_loc@plt+0x20d03>
  422fc6:	vmovsd xmm1,QWORD PTR [rdx+0x10]
  422fcb:	vucomisd xmm1,xmm0
  422fcf:	jne    422fd3 <__ctype_b_loc@plt+0x20d03>
  422fd1:	jnp    422fde <__ctype_b_loc@plt+0x20d0e>
  422fd3:	mov    rdx,QWORD PTR [rdx+0x20]
  422fd7:	test   rdx,rdx
  422fda:	jne    422fc0 <__ctype_b_loc@plt+0x20cf0>
  422fdc:	jmp    422fe1 <__ctype_b_loc@plt+0x20d11>
  422fde:	mov    rax,rdx
  422fe1:	mov    rcx,QWORD PTR [r14+0x10]
  422fe5:	mov    rdx,QWORD PTR [rax]
  422fe8:	mov    QWORD PTR [rcx],rdx
  422feb:	mov    eax,DWORD PTR [rax+0x8]
  422fee:	mov    DWORD PTR [rcx+0x8],eax
  422ff1:	mov    rax,QWORD PTR [r14+0x10]
  422ff5:	lea    rcx,[rax+0x10]
  422ff9:	mov    QWORD PTR [r14+0x10],rcx
  422ffd:	mov    ecx,DWORD PTR [rax+0x8]
  423000:	cmp    ecx,0x2
  423003:	je     423013 <__ctype_b_loc@plt+0x20d43>
  423005:	cmp    ecx,0x7
  423008:	jne    423018 <__ctype_b_loc@plt+0x20d48>
  42300a:	mov    rax,QWORD PTR [rax]
  42300d:	add    rax,0x28
  423011:	jmp    42301a <__ctype_b_loc@plt+0x20d4a>
  423013:	mov    rax,QWORD PTR [rax]
  423016:	jmp    42301a <__ctype_b_loc@plt+0x20d4a>
  423018:	xor    eax,eax
  42301a:	mov    rbx,QWORD PTR [rax]
  42301d:	test   rbx,rbx
  423020:	jne    42303a <__ctype_b_loc@plt+0x20d6a>
  423022:	lea    rsi,[rip+0x87a4]        # 42b7cd <__ctype_b_loc@plt+0x294fd>
  423029:	lea    rdx,[rip+0x8790]        # 42b7c0 <__ctype_b_loc@plt+0x294f0>
  423030:	xor    eax,eax
  423032:	mov    rdi,r14
  423035:	call   410070 <__ctype_b_loc@plt+0xdda0>
  42303a:	mov    edx,0x1
  42303f:	mov    rdi,r14
  423042:	mov    rsi,rbx
  423045:	add    rsp,0x8
  423049:	pop    rbx
  42304a:	pop    r14
  42304c:	jmp    4218c0 <__ctype_b_loc@plt+0x1f5f0>
  423051:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42305b:	nop    DWORD PTR [rax+rax*1+0x0]
  423060:	push   r15
  423062:	push   r14
  423064:	push   r12
  423066:	push   rbx
  423067:	sub    rsp,0x18
  42306b:	mov    r14,rdi
  42306e:	mov    rax,QWORD PTR [rdi+0x18]
  423072:	lea    r15,[rip+0x7a9f]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  423079:	cmp    rax,r15
  42307c:	je     42308d <__ctype_b_loc@plt+0x20dbd>
  42307e:	mov    rcx,QWORD PTR [r14+0x10]
  423082:	cmp    rax,rcx
  423085:	jae    42308d <__ctype_b_loc@plt+0x20dbd>
  423087:	cmp    DWORD PTR [rax+0x8],0xffffffff
  42308b:	jne    4230a9 <__ctype_b_loc@plt+0x20dd9>
  42308d:	lea    rdx,[rip+0x8097]        # 42b12b <__ctype_b_loc@plt+0x28e5b>
  423094:	mov    esi,0x1
  423099:	mov    rdi,r14
  42309c:	call   410240 <__ctype_b_loc@plt+0xdf70>
  4230a1:	mov    rcx,QWORD PTR [r14+0x10]
  4230a5:	mov    rax,QWORD PTR [r14+0x18]
  4230a9:	cmp    rax,rcx
  4230ac:	cmovae rax,r15
  4230b0:	mov    ecx,DWORD PTR [rax+0x8]
  4230b3:	cmp    ecx,0x2
  4230b6:	je     4230c6 <__ctype_b_loc@plt+0x20df6>
  4230b8:	cmp    ecx,0x7
  4230bb:	jne    4230cb <__ctype_b_loc@plt+0x20dfb>
  4230bd:	mov    r12,QWORD PTR [rax]
  4230c0:	add    r12,0x28
  4230c4:	jmp    4230ce <__ctype_b_loc@plt+0x20dfe>
  4230c6:	mov    r12,QWORD PTR [rax]
  4230c9:	jmp    4230ce <__ctype_b_loc@plt+0x20dfe>
  4230cb:	xor    r12d,r12d
  4230ce:	mov    ebx,0xa0
  4230d3:	add    rbx,QWORD PTR [r14+0x20]
  4230d7:	lea    rsi,[rip+0x8648]        # 42b726 <__ctype_b_loc@plt+0x29456>
  4230de:	mov    edx,0x5
  4230e3:	mov    rdi,r14
  4230e6:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  4230eb:	mov    QWORD PTR [rsp+0x8],rax
  4230f0:	mov    DWORD PTR [rsp+0x10],0x4
  4230f8:	mov    rcx,QWORD PTR [r14+0x10]
  4230fc:	lea    rdx,[rsp+0x8]
  423101:	mov    rdi,r14
  423104:	mov    rsi,rbx
  423107:	call   408700 <__ctype_b_loc@plt+0x6430>
  42310c:	mov    rax,QWORD PTR [r14+0x10]
  423110:	lea    rbx,[rax+0x10]
  423114:	mov    QWORD PTR [r14+0x10],rbx
  423118:	test   r12,r12
  42311b:	je     4231b1 <__ctype_b_loc@plt+0x20ee1>
  423121:	mov    rcx,QWORD PTR [r14+0x18]
  423125:	cmp    rcx,rbx
  423128:	cmovae rcx,r15
  42312c:	movsxd rdx,DWORD PTR [rcx+0x8]
  423130:	cmp    rdx,0x7
  423134:	je     42313b <__ctype_b_loc@plt+0x20e6b>
  423136:	cmp    edx,0x5
  423139:	jne    423144 <__ctype_b_loc@plt+0x20e74>
  42313b:	mov    rcx,QWORD PTR [rcx]
  42313e:	add    rcx,0x10
  423142:	jmp    423153 <__ctype_b_loc@plt+0x20e83>
  423144:	mov    rcx,QWORD PTR [r14+0x20]
  423148:	lea    rcx,[rcx+rdx*8]
  42314c:	add    rcx,0xe0
  423153:	mov    rcx,QWORD PTR [rcx]
  423156:	test   rcx,rcx
  423159:	je     4231b1 <__ctype_b_loc@plt+0x20ee1>
  42315b:	mov    QWORD PTR [rax+0x10],rcx
  42315f:	mov    DWORD PTR [rax+0x18],0x5
  423166:	mov    rax,QWORD PTR [r14+0x10]
  42316a:	lea    rbx,[rax+0x10]
  42316e:	mov    QWORD PTR [r14+0x10],rbx
  423172:	cmp    rax,r15
  423175:	je     4231b1 <__ctype_b_loc@plt+0x20ee1>
  423177:	lea    rcx,[rax-0x10]
  42317b:	cmp    rcx,r15
  42317e:	je     4231b1 <__ctype_b_loc@plt+0x20ee1>
  423180:	mov    ecx,DWORD PTR [rax-0x8]
  423183:	cmp    ecx,DWORD PTR [rax+0x8]
  423186:	jne    4231b1 <__ctype_b_loc@plt+0x20ee1>
  423188:	cmp    ecx,0x3
  42318b:	ja     4231a8 <__ctype_b_loc@plt+0x20ed8>
  42318d:	mov    ecx,ecx
  42318f:	lea    rdx,[rip+0x778e]        # 42a924 <__ctype_b_loc@plt+0x28654>
  423196:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  42319a:	add    rcx,rdx
  42319d:	jmp    rcx
  42319f:	mov    ecx,DWORD PTR [rax-0x10]
  4231a2:	cmp    ecx,DWORD PTR [rax]
  4231a4:	jne    4231b1 <__ctype_b_loc@plt+0x20ee1>
  4231a6:	jmp    4231de <__ctype_b_loc@plt+0x20f0e>
  4231a8:	mov    rcx,QWORD PTR [rax-0x10]
  4231ac:	cmp    rcx,QWORD PTR [rax]
  4231af:	je     4231de <__ctype_b_loc@plt+0x20f0e>
  4231b1:	mov    DWORD PTR [rbx+0x8],0x0
  4231b8:	add    rbx,0x10
  4231bc:	mov    QWORD PTR [r14+0x10],rbx
  4231c0:	mov    eax,0x1
  4231c5:	add    rsp,0x18
  4231c9:	pop    rbx
  4231ca:	pop    r12
  4231cc:	pop    r14
  4231ce:	pop    r15
  4231d0:	ret    
  4231d1:	vmovsd xmm0,QWORD PTR [rax-0x10]
  4231d6:	vucomisd xmm0,QWORD PTR [rax]
  4231da:	jne    4231b1 <__ctype_b_loc@plt+0x20ee1>
  4231dc:	jp     4231b1 <__ctype_b_loc@plt+0x20ee1>
  4231de:	cmp    QWORD PTR [r12],0x0
  4231e3:	mov    rcx,QWORD PTR [r14+0x20]
  4231e7:	mov    rax,QWORD PTR [rcx+0x70]
  4231eb:	mov    rcx,QWORD PTR [rcx+0x78]
  4231ef:	je     423210 <__ctype_b_loc@plt+0x20f40>
  4231f1:	cmp    rcx,rax
  4231f4:	jb     423202 <__ctype_b_loc@plt+0x20f32>
  4231f6:	mov    rdi,r14
  4231f9:	call   408070 <__ctype_b_loc@plt+0x5da0>
  4231fe:	mov    rbx,QWORD PTR [r14+0x10]
  423202:	lea    rsi,[rip+0x8547]        # 42b750 <__ctype_b_loc@plt+0x29480>
  423209:	mov    edx,0x4
  42320e:	jmp    42322d <__ctype_b_loc@plt+0x20f5d>
  423210:	cmp    rcx,rax
  423213:	jb     423221 <__ctype_b_loc@plt+0x20f51>
  423215:	mov    rdi,r14
  423218:	call   408070 <__ctype_b_loc@plt+0x5da0>
  42321d:	mov    rbx,QWORD PTR [r14+0x10]
  423221:	lea    rsi,[rip+0x8521]        # 42b749 <__ctype_b_loc@plt+0x29479>
  423228:	mov    edx,0xb
  42322d:	mov    rdi,r14
  423230:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  423235:	mov    QWORD PTR [rbx],rax
  423238:	mov    DWORD PTR [rbx+0x8],0x4
  42323f:	mov    rbx,QWORD PTR [r14+0x10]
  423243:	jmp    4231b8 <__ctype_b_loc@plt+0x20ee8>
  423248:	nop    DWORD PTR [rax+rax*1+0x0]
  423250:	push   r14
  423252:	push   rbx
  423253:	push   rax
  423254:	mov    r14,rdi
  423257:	mov    rax,QWORD PTR [rdi+0x28]
  42325b:	mov    rax,QWORD PTR [rax+0x8]
  42325f:	mov    rax,QWORD PTR [rax]
  423262:	mov    rcx,QWORD PTR [rax+0x18]
  423266:	mov    QWORD PTR [rdi+0x88],rcx
  42326d:	mov    DWORD PTR [rdi+0x90],0x5
  423277:	cmp    DWORD PTR [rcx+0x38],0x2
  42327b:	jb     423287 <__ctype_b_loc@plt+0x20fb7>
  42327d:	mov    rax,QWORD PTR [rcx+0x18]
  423281:	add    rax,0x10
  423285:	jmp    4232f1 <__ctype_b_loc@plt+0x21021>
  423287:	mov    al,BYTE PTR [rcx+0xb]
  42328a:	mov    rdx,0xffffffffffffffff
  423291:	shlx   rsi,rdx,rax
  423296:	or     rsi,0x1
  42329a:	xor    rsi,0xfffffffffffffffe
  42329e:	mov    eax,0x40000000
  4232a3:	xor    edx,edx
  4232a5:	div    rsi
  4232a8:	lea    rdx,[rdx+rdx*4]
  4232ac:	shl    rdx,0x3
  4232b0:	add    rdx,QWORD PTR [rcx+0x20]
  4232b4:	vmovsd xmm0,QWORD PTR [rip+0x7a9c]        # 42ad58 <__ctype_b_loc@plt+0x28a88>
  4232bc:	lea    rax,[rip+0x7855]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4232c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4232cd:	nop    DWORD PTR [rax]
  4232d0:	cmp    DWORD PTR [rdx+0x18],0x3
  4232d4:	jne    4232e3 <__ctype_b_loc@plt+0x21013>
  4232d6:	vmovsd xmm1,QWORD PTR [rdx+0x10]
  4232db:	vucomisd xmm1,xmm0
  4232df:	jne    4232e3 <__ctype_b_loc@plt+0x21013>
  4232e1:	jnp    4232ee <__ctype_b_loc@plt+0x2101e>
  4232e3:	mov    rdx,QWORD PTR [rdx+0x20]
  4232e7:	test   rdx,rdx
  4232ea:	jne    4232d0 <__ctype_b_loc@plt+0x21000>
  4232ec:	jmp    4232f1 <__ctype_b_loc@plt+0x21021>
  4232ee:	mov    rax,rdx
  4232f1:	mov    rcx,QWORD PTR [r14+0x10]
  4232f5:	mov    rdx,QWORD PTR [rax]
  4232f8:	mov    QWORD PTR [rcx],rdx
  4232fb:	mov    eax,DWORD PTR [rax+0x8]
  4232fe:	mov    DWORD PTR [rcx+0x8],eax
  423301:	mov    rax,QWORD PTR [r14+0x10]
  423305:	lea    rcx,[rax+0x10]
  423309:	mov    QWORD PTR [r14+0x10],rcx
  42330d:	mov    ecx,DWORD PTR [rax+0x8]
  423310:	cmp    ecx,0x2
  423313:	je     423323 <__ctype_b_loc@plt+0x21053>
  423315:	cmp    ecx,0x7
  423318:	jne    423328 <__ctype_b_loc@plt+0x21058>
  42331a:	mov    rax,QWORD PTR [rax]
  42331d:	add    rax,0x28
  423321:	jmp    42332a <__ctype_b_loc@plt+0x2105a>
  423323:	mov    rax,QWORD PTR [rax]
  423326:	jmp    42332a <__ctype_b_loc@plt+0x2105a>
  423328:	xor    eax,eax
  42332a:	mov    rbx,QWORD PTR [rax]
  42332d:	test   rbx,rbx
  423330:	jne    42334a <__ctype_b_loc@plt+0x2107a>
  423332:	lea    rsi,[rip+0x8494]        # 42b7cd <__ctype_b_loc@plt+0x294fd>
  423339:	lea    rdx,[rip+0x8486]        # 42b7c6 <__ctype_b_loc@plt+0x294f6>
  423340:	xor    eax,eax
  423342:	mov    rdi,r14
  423345:	call   410070 <__ctype_b_loc@plt+0xdda0>
  42334a:	mov    edx,0x1
  42334f:	mov    rdi,r14
  423352:	mov    rsi,rbx
  423355:	add    rsp,0x8
  423359:	pop    rbx
  42335a:	pop    r14
  42335c:	jmp    4221a0 <__ctype_b_loc@plt+0x1fed0>
  423361:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42336b:	nop    DWORD PTR [rax+rax*1+0x0]
  423370:	push   rbp
  423371:	push   r15
  423373:	push   r14
  423375:	push   r13
  423377:	push   r12
  423379:	push   rbx
  42337a:	sub    rsp,0x38
  42337e:	mov    r14d,esi
  423381:	mov    rbx,rdi
  423384:	mov    rbp,QWORD PTR [rdi+0x18]
  423388:	lea    r15,[rip+0x7789]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  42338f:	cmp    rbp,r15
  423392:	je     423505 <__ctype_b_loc@plt+0x21235>
  423398:	cmp    rbp,QWORD PTR [rbx+0x10]
  42339c:	jae    423505 <__ctype_b_loc@plt+0x21235>
  4233a2:	mov    eax,DWORD PTR [rbp+0x8]
  4233a5:	test   eax,eax
  4233a7:	jle    423505 <__ctype_b_loc@plt+0x21235>
  4233ad:	mov    r13,rdx
  4233b0:	cmp    eax,0x3
  4233b3:	je     423402 <__ctype_b_loc@plt+0x21132>
  4233b5:	cmp    eax,0x4
  4233b8:	je     423460 <__ctype_b_loc@plt+0x21190>
  4233be:	mov    rdi,rbx
  4233c1:	call   421370 <__ctype_b_loc@plt+0x1f0a0>
  4233c6:	cmp    QWORD PTR [rax],0x0
  4233ca:	jne    4233dd <__ctype_b_loc@plt+0x2110d>
  4233cc:	lea    rsi,[rip+0x8365]        # 42b738 <__ctype_b_loc@plt+0x29468>
  4233d3:	xor    eax,eax
  4233d5:	mov    rdi,rbx
  4233d8:	call   410070 <__ctype_b_loc@plt+0xdda0>
  4233dd:	mov    rax,QWORD PTR [rbx+0x10]
  4233e1:	mov    rcx,QWORD PTR [rbx+0x18]
  4233e5:	cmp    rcx,rax
  4233e8:	cmovae rcx,r15
  4233ec:	mov    rdx,QWORD PTR [rcx]
  4233ef:	mov    QWORD PTR [rax],rdx
  4233f2:	mov    ecx,DWORD PTR [rcx+0x8]
  4233f5:	mov    DWORD PTR [rax+0x8],ecx
  4233f8:	add    QWORD PTR [rbx+0x10],0x10
  4233fd:	jmp    4234f5 <__ctype_b_loc@plt+0x21225>
  423402:	vmovq  xmm0,QWORD PTR [rbp+0x0]
  423407:	lea    rsi,[rip+0x7a13]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  42340e:	lea    r12,[rsp+0x10]
  423413:	mov    al,0x1
  423415:	mov    rdi,r12
  423418:	call   402270 <sprintf@plt>
  42341d:	mov    rdi,r12
  423420:	call   4020e0 <strlen@plt>
  423425:	mov    rdi,rbx
  423428:	mov    rsi,r12
  42342b:	mov    rdx,rax
  42342e:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  423433:	mov    QWORD PTR [rbp+0x0],rax
  423437:	mov    DWORD PTR [rbp+0x8],0x4
  42343e:	mov    rax,QWORD PTR [rbx+0x20]
  423442:	mov    rcx,QWORD PTR [rax+0x78]
  423446:	cmp    rcx,QWORD PTR [rax+0x70]
  42344a:	jb     423454 <__ctype_b_loc@plt+0x21184>
  42344c:	mov    rdi,rbx
  42344f:	call   408070 <__ctype_b_loc@plt+0x5da0>
  423454:	mov    rbp,QWORD PTR [rbx+0x18]
  423458:	cmp    rbp,QWORD PTR [rbx+0x10]
  42345c:	cmovae rbp,r15
  423460:	mov    r12,QWORD PTR [rbp+0x0]
  423464:	add    r12,0x18
  423468:	mov    esi,0x8
  42346d:	mov    rdi,rbx
  423470:	call   41dfb0 <__ctype_b_loc@plt+0x1bce0>
  423475:	mov    QWORD PTR [rsp+0x8],r13
  42347a:	mov    r13,rax
  42347d:	mov    QWORD PTR [rax],0x0
  423484:	mov    ebp,0xa0
  423489:	add    rbp,QWORD PTR [rbx+0x20]
  42348d:	lea    rsi,[rip+0x8292]        # 42b726 <__ctype_b_loc@plt+0x29456>
  423494:	mov    edx,0x5
  423499:	mov    rdi,rbx
  42349c:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  4234a1:	mov    QWORD PTR [rsp+0x10],rax
  4234a6:	mov    DWORD PTR [rsp+0x18],0x4
  4234ae:	mov    rcx,QWORD PTR [rbx+0x10]
  4234b2:	lea    rdx,[rsp+0x10]
  4234b7:	mov    rdi,rbx
  4234ba:	mov    rsi,rbp
  4234bd:	call   408700 <__ctype_b_loc@plt+0x6430>
  4234c2:	add    QWORD PTR [rbx+0x10],0x10
  4234c7:	mov    esi,0xfffffffe
  4234cc:	mov    rdi,rbx
  4234cf:	call   40d5b0 <__ctype_b_loc@plt+0xb2e0>
  4234d4:	mov    rdi,r12
  4234d7:	mov    rsi,QWORD PTR [rsp+0x8]
  4234dc:	call   402240 <fopen@plt>
  4234e1:	mov    QWORD PTR [r13+0x0],rax
  4234e5:	test   rax,rax
  4234e8:	jne    4234f5 <__ctype_b_loc@plt+0x21225>
  4234ea:	mov    rdi,rbx
  4234ed:	mov    rsi,r12
  4234f0:	call   4235e0 <__ctype_b_loc@plt+0x21310>
  4234f5:	mov    esi,0xffffd8ef
  4234fa:	mov    rdi,rbx
  4234fd:	mov    edx,r14d
  423500:	call   402ba0 <__ctype_b_loc@plt+0x8d0>
  423505:	mov    rax,QWORD PTR [rbx+0x28]
  423509:	mov    rax,QWORD PTR [rax+0x8]
  42350d:	mov    rax,QWORD PTR [rax]
  423510:	mov    rcx,QWORD PTR [rax+0x18]
  423514:	mov    QWORD PTR [rbx+0x88],rcx
  42351b:	mov    DWORD PTR [rbx+0x90],0x5
  423525:	lea    eax,[r14-0x1]
  423529:	cmp    eax,DWORD PTR [rcx+0x38]
  42352c:	jae    42353b <__ctype_b_loc@plt+0x2126b>
  42352e:	movsxd r15,eax
  423531:	shl    r15,0x4
  423535:	add    r15,QWORD PTR [rcx+0x18]
  423539:	jmp    4235b1 <__ctype_b_loc@plt+0x212e1>
  42353b:	vcvtsi2sd xmm0,xmm1,r14d
  423540:	test   r14d,r14d
  423543:	je     423583 <__ctype_b_loc@plt+0x212b3>
  423545:	vmovq  rdx,xmm0
  42354a:	mov    rax,rdx
  42354d:	shr    rax,0x20
  423551:	add    eax,edx
  423553:	mov    dl,BYTE PTR [rcx+0xb]
  423556:	mov    rsi,0xffffffffffffffff
  42355d:	shlx   rsi,rsi,rdx
  423562:	or     rsi,0x1
  423566:	xor    rsi,0xfffffffffffffffe
  42356a:	xor    edx,edx
  42356c:	div    rsi
  42356f:	lea    rax,[rdx+rdx*4]
  423573:	shl    rax,0x3
  423577:	add    rax,QWORD PTR [rcx+0x20]
  42357b:	cmp    DWORD PTR [rax+0x18],0x3
  42357f:	jne    4235a3 <__ctype_b_loc@plt+0x212d3>
  423581:	jmp    423596 <__ctype_b_loc@plt+0x212c6>
  423583:	mov    rax,QWORD PTR [rcx+0x20]
  423587:	nop    WORD PTR [rax+rax*1+0x0]
  423590:	cmp    DWORD PTR [rax+0x18],0x3
  423594:	jne    4235a3 <__ctype_b_loc@plt+0x212d3>
  423596:	vmovsd xmm1,QWORD PTR [rax+0x10]
  42359b:	vucomisd xmm1,xmm0
  42359f:	jne    4235a3 <__ctype_b_loc@plt+0x212d3>
  4235a1:	jnp    4235ae <__ctype_b_loc@plt+0x212de>
  4235a3:	mov    rax,QWORD PTR [rax+0x20]
  4235a7:	test   rax,rax
  4235aa:	jne    423590 <__ctype_b_loc@plt+0x212c0>
  4235ac:	jmp    4235b1 <__ctype_b_loc@plt+0x212e1>
  4235ae:	mov    r15,rax
  4235b1:	mov    rax,QWORD PTR [rbx+0x10]
  4235b5:	mov    rcx,QWORD PTR [r15]
  4235b8:	mov    QWORD PTR [rax],rcx
  4235bb:	mov    ecx,DWORD PTR [r15+0x8]
  4235bf:	mov    DWORD PTR [rax+0x8],ecx
  4235c2:	add    QWORD PTR [rbx+0x10],0x10
  4235c7:	add    rsp,0x38
  4235cb:	pop    rbx
  4235cc:	pop    r12
  4235ce:	pop    r13
  4235d0:	pop    r14
  4235d2:	pop    r15
  4235d4:	pop    rbp
  4235d5:	ret    
  4235d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4235e0:	push   r15
  4235e2:	push   r14
  4235e4:	push   r12
  4235e6:	push   rbx
  4235e7:	sub    rsp,0x28
  4235eb:	mov    r15,rsi
  4235ee:	mov    r14,rdi
  4235f1:	call   402050 <__errno_location@plt>
  4235f6:	mov    edi,DWORD PTR [rax]
  4235f8:	call   4022a0 <strerror@plt>
  4235fd:	mov    rcx,rax
  423600:	lea    rsi,[rip+0x8475]        # 42ba7c <__ctype_b_loc@plt+0x297ac>
  423607:	xor    r12d,r12d
  42360a:	xor    eax,eax
  42360c:	mov    rdi,r14
  42360f:	mov    rdx,r15
  423612:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  423617:	mov    rbx,QWORD PTR [r14+0x10]
  42361b:	mov    eax,DWORD PTR [rbx-0x8]
  42361e:	cmp    eax,0x4
  423621:	je     42367c <__ctype_b_loc@plt+0x213ac>
  423623:	cmp    eax,0x3
  423626:	jne    423687 <__ctype_b_loc@plt+0x213b7>
  423628:	vmovsd xmm0,QWORD PTR [rbx-0x10]
  42362d:	lea    rsi,[rip+0x77ed]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  423634:	mov    r15,rsp
  423637:	mov    al,0x1
  423639:	mov    rdi,r15
  42363c:	call   402270 <sprintf@plt>
  423641:	mov    rdi,r15
  423644:	call   4020e0 <strlen@plt>
  423649:	mov    rdi,r14
  42364c:	mov    rsi,r15
  42364f:	mov    rdx,rax
  423652:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  423657:	mov    QWORD PTR [rbx-0x10],rax
  42365b:	mov    DWORD PTR [rbx-0x8],0x4
  423662:	mov    rax,QWORD PTR [r14+0x20]
  423666:	mov    rcx,QWORD PTR [rax+0x78]
  42366a:	cmp    rcx,QWORD PTR [rax+0x70]
  42366e:	jb     423678 <__ctype_b_loc@plt+0x213a8>
  423670:	mov    rdi,r14
  423673:	call   408070 <__ctype_b_loc@plt+0x5da0>
  423678:	mov    rbx,QWORD PTR [r14+0x10]
  42367c:	add    rbx,0xfffffffffffffff0
  423680:	mov    r12,QWORD PTR [rbx]
  423683:	add    r12,0x18
  423687:	mov    esi,0x1
  42368c:	mov    rdi,r14
  42368f:	mov    rdx,r12
  423692:	add    rsp,0x28
  423696:	pop    rbx
  423697:	pop    r12
  423699:	pop    r14
  42369b:	pop    r15
  42369d:	jmp    410240 <__ctype_b_loc@plt+0xdf70>
  4236a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4236ac:	nop    DWORD PTR [rax+0x0]
  4236b0:	push   rax
  4236b1:	mov    esi,0x1
  4236b6:	xor    edx,edx
  4236b8:	call   410970 <__ctype_b_loc@plt+0xe6a0>
  4236bd:	mov    edi,eax
  4236bf:	call   402280 <exit@plt>
  4236c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4236ce:	xchg   ax,ax
  4236d0:	push   rbp
  4236d1:	push   r15
  4236d3:	push   r14
  4236d5:	push   rbx
  4236d6:	sub    rsp,0x28
  4236da:	mov    rbx,rdi
  4236dd:	mov    rdx,QWORD PTR [rdi+0x10]
  4236e1:	mov    rax,QWORD PTR [rdi+0x18]
  4236e5:	cmp    rax,rdx
  4236e8:	lea    r15,[rip+0x7429]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4236ef:	mov    rbp,r15
  4236f2:	cmovb  rbp,rax
  4236f6:	mov    ecx,DWORD PTR [rbp+0x8]
  4236f9:	cmp    ecx,0x4
  4236fc:	je     423762 <__ctype_b_loc@plt+0x21492>
  4236fe:	cmp    ecx,0x3
  423701:	jne    42376c <__ctype_b_loc@plt+0x2149c>
  423703:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  423708:	lea    rsi,[rip+0x7712]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  42370f:	mov    r14,rsp
  423712:	mov    al,0x1
  423714:	mov    rdi,r14
  423717:	call   402270 <sprintf@plt>
  42371c:	mov    rdi,r14
  42371f:	call   4020e0 <strlen@plt>
  423724:	mov    rdi,rbx
  423727:	mov    rsi,r14
  42372a:	mov    rdx,rax
  42372d:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  423732:	mov    QWORD PTR [rbp+0x0],rax
  423736:	mov    DWORD PTR [rbp+0x8],0x4
  42373d:	mov    rax,QWORD PTR [rbx+0x20]
  423741:	mov    rcx,QWORD PTR [rax+0x78]
  423745:	cmp    rcx,QWORD PTR [rax+0x70]
  423749:	jb     423753 <__ctype_b_loc@plt+0x21483>
  42374b:	mov    rdi,rbx
  42374e:	call   408070 <__ctype_b_loc@plt+0x5da0>
  423753:	mov    rax,QWORD PTR [rbx+0x18]
  423757:	cmp    rax,QWORD PTR [rbx+0x10]
  42375b:	cmovb  r15,rax
  42375f:	mov    rbp,r15
  423762:	mov    r14,QWORD PTR [rbp+0x0]
  423766:	add    r14,0x18
  42376a:	jmp    4237bd <__ctype_b_loc@plt+0x214ed>
  42376c:	lea    rcx,[rip+0x7a63]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  423773:	cmp    rax,r15
  423776:	je     423792 <__ctype_b_loc@plt+0x214c2>
  423778:	cmp    rax,rdx
  42377b:	jae    423792 <__ctype_b_loc@plt+0x214c2>
  42377d:	movsxd rax,DWORD PTR [rax+0x8]
  423781:	cmp    rax,0xffffffffffffffff
  423785:	je     423792 <__ctype_b_loc@plt+0x214c2>
  423787:	lea    rcx,[rip+0xd152]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  42378e:	mov    rcx,QWORD PTR [rcx+rax*8]
  423792:	lea    rsi,[rip+0x7a29]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  423799:	lea    rdx,[rip+0x7ac9]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  4237a0:	xor    r14d,r14d
  4237a3:	xor    eax,eax
  4237a5:	mov    rdi,rbx
  4237a8:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  4237ad:	mov    esi,0x1
  4237b2:	mov    rdi,rbx
  4237b5:	mov    rdx,rax
  4237b8:	call   410240 <__ctype_b_loc@plt+0xdf70>
  4237bd:	mov    rdi,r14
  4237c0:	call   402070 <remove@plt>
  4237c5:	mov    ebp,eax
  4237c7:	call   402050 <__errno_location@plt>
  4237cc:	mov    rcx,QWORD PTR [rbx+0x10]
  4237d0:	test   ebp,ebp
  4237d2:	je     423816 <__ctype_b_loc@plt+0x21546>
  4237d4:	mov    ebp,DWORD PTR [rax]
  4237d6:	mov    DWORD PTR [rcx+0x8],0x0
  4237dd:	add    rcx,0x10
  4237e1:	mov    QWORD PTR [rbx+0x10],rcx
  4237e5:	mov    edi,ebp
  4237e7:	call   4022a0 <strerror@plt>
  4237ec:	mov    rcx,rax
  4237ef:	lea    rsi,[rip+0x8286]        # 42ba7c <__ctype_b_loc@plt+0x297ac>
  4237f6:	xor    eax,eax
  4237f8:	mov    rdi,rbx
  4237fb:	mov    rdx,r14
  4237fe:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  423803:	mov    rcx,QWORD PTR [rbx+0x10]
  423807:	vcvtsi2sd xmm0,xmm1,ebp
  42380b:	vmovsd QWORD PTR [rcx],xmm0
  42380f:	mov    eax,0x3
  423814:	jmp    423821 <__ctype_b_loc@plt+0x21551>
  423816:	mov    DWORD PTR [rcx],0x1
  42381c:	mov    eax,0x1
  423821:	mov    DWORD PTR [rcx+0x8],eax
  423824:	add    QWORD PTR [rbx+0x10],0x10
  423829:	add    rsp,0x28
  42382d:	pop    rbx
  42382e:	pop    r14
  423830:	pop    r15
  423832:	pop    rbp
  423833:	ret    
  423834:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42383e:	xchg   ax,ax
  423840:	push   rbp
  423841:	push   r15
  423843:	push   r14
  423845:	push   r13
  423847:	push   r12
  423849:	push   rbx
  42384a:	sub    rsp,0x28
  42384e:	mov    rbx,rdi
  423851:	mov    rdx,QWORD PTR [rdi+0x10]
  423855:	mov    rax,QWORD PTR [rdi+0x18]
  423859:	cmp    rax,rdx
  42385c:	lea    r15,[rip+0x72b5]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  423863:	mov    rbp,r15
  423866:	cmovb  rbp,rax
  42386a:	mov    ecx,DWORD PTR [rbp+0x8]
  42386d:	cmp    ecx,0x4
  423870:	je     4238d6 <__ctype_b_loc@plt+0x21606>
  423872:	cmp    ecx,0x3
  423875:	jne    4238e4 <__ctype_b_loc@plt+0x21614>
  423877:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  42387c:	lea    rsi,[rip+0x759e]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  423883:	mov    r14,rsp
  423886:	mov    al,0x1
  423888:	mov    rdi,r14
  42388b:	call   402270 <sprintf@plt>
  423890:	mov    rdi,r14
  423893:	call   4020e0 <strlen@plt>
  423898:	mov    rdi,rbx
  42389b:	mov    rsi,r14
  42389e:	mov    rdx,rax
  4238a1:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  4238a6:	mov    QWORD PTR [rbp+0x0],rax
  4238aa:	mov    DWORD PTR [rbp+0x8],0x4
  4238b1:	mov    rax,QWORD PTR [rbx+0x20]
  4238b5:	mov    rcx,QWORD PTR [rax+0x78]
  4238b9:	cmp    rcx,QWORD PTR [rax+0x70]
  4238bd:	jb     4238c7 <__ctype_b_loc@plt+0x215f7>
  4238bf:	mov    rdi,rbx
  4238c2:	call   408070 <__ctype_b_loc@plt+0x5da0>
  4238c7:	mov    rax,QWORD PTR [rbx+0x18]
  4238cb:	cmp    rax,QWORD PTR [rbx+0x10]
  4238cf:	cmovb  r15,rax
  4238d3:	mov    rbp,r15
  4238d6:	mov    r14,QWORD PTR [rbp+0x0]
  4238da:	mov    r12,QWORD PTR [r14+0x10]
  4238de:	add    r14,0x18
  4238e2:	jmp    423938 <__ctype_b_loc@plt+0x21668>
  4238e4:	lea    rcx,[rip+0x78eb]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  4238eb:	cmp    rax,r15
  4238ee:	je     42390a <__ctype_b_loc@plt+0x2163a>
  4238f0:	cmp    rax,rdx
  4238f3:	jae    42390a <__ctype_b_loc@plt+0x2163a>
  4238f5:	movsxd rax,DWORD PTR [rax+0x8]
  4238f9:	cmp    rax,0xffffffffffffffff
  4238fd:	je     42390a <__ctype_b_loc@plt+0x2163a>
  4238ff:	lea    rcx,[rip+0xcfda]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  423906:	mov    rcx,QWORD PTR [rcx+rax*8]
  42390a:	lea    rsi,[rip+0x78b1]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  423911:	lea    rdx,[rip+0x7951]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  423918:	xor    r14d,r14d
  42391b:	xor    eax,eax
  42391d:	mov    rdi,rbx
  423920:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  423925:	mov    esi,0x1
  42392a:	mov    rdi,rbx
  42392d:	mov    rdx,rax
  423930:	call   410240 <__ctype_b_loc@plt+0xdf70>
  423935:	xor    r12d,r12d
  423938:	mov    esi,0x2
  42393d:	mov    edx,0x1
  423942:	mov    rdi,rbx
  423945:	call   410970 <__ctype_b_loc@plt+0xe6a0>
  42394a:	lea    r13,[r12+0x1]
  42394f:	mov    rbp,rax
  423952:	sar    rbp,0x3f
  423956:	and    rbp,r13
  423959:	add    rbp,rax
  42395c:	mov    rax,rbp
  42395f:	sar    rax,0x3f
  423963:	andn   r15,rax,rbp
  423968:	mov    esi,0x3
  42396d:	mov    rdi,rbx
  423970:	mov    rdx,r15
  423973:	call   410970 <__ctype_b_loc@plt+0xe6a0>
  423978:	mov    rcx,rax
  42397b:	sar    rcx,0x3f
  42397f:	and    rcx,r13
  423982:	add    rcx,rax
  423985:	mov    rax,rcx
  423988:	sar    rax,0x3f
  42398c:	andn   rax,rax,rcx
  423991:	cmp    r15,0x1
  423995:	mov    ecx,0x1
  42399a:	cmovle rbp,rcx
  42399e:	cmp    rax,r12
  4239a1:	cmova  rax,r12
  4239a5:	xor    r15d,r15d
  4239a8:	cmp    rax,rbp
  4239ab:	jl     423b08 <__ctype_b_loc@plt+0x21838>
  4239b1:	mov    r15d,eax
  4239b4:	sub    r15d,ebp
  4239b7:	add    r15d,0x1
  4239bb:	movsxd r12,r15d
  4239be:	lea    rcx,[r12+rbp*1]
  4239c2:	cmp    rcx,rax
  4239c5:	jg     4239d8 <__ctype_b_loc@plt+0x21708>
  4239c7:	lea    rsi,[rip+0x7e65]        # 42b833 <__ctype_b_loc@plt+0x29563>
  4239ce:	xor    eax,eax
  4239d0:	mov    rdi,rbx
  4239d3:	call   410070 <__ctype_b_loc@plt+0xdda0>
  4239d8:	lea    rdx,[rip+0x7e54]        # 42b833 <__ctype_b_loc@plt+0x29563>
  4239df:	mov    rdi,rbx
  4239e2:	mov    esi,r15d
  4239e5:	call   41fda0 <__ctype_b_loc@plt+0x1dad0>
  4239ea:	test   r15d,r15d
  4239ed:	jle    423b08 <__ctype_b_loc@plt+0x21838>
  4239f3:	mov    rcx,QWORD PTR [rbx+0x10]
  4239f7:	lea    rdx,[r12-0x1]
  4239fc:	mov    eax,r15d
  4239ff:	and    eax,0x3
  423a02:	cmp    rdx,0x3
  423a06:	jae    423a18 <__ctype_b_loc@plt+0x21748>
  423a08:	xor    edx,edx
  423a0a:	test   rax,rax
  423a0d:	jne    423ac4 <__ctype_b_loc@plt+0x217f4>
  423a13:	jmp    423b08 <__ctype_b_loc@plt+0x21838>
  423a18:	lea    rsi,[r14+rbp*1]
  423a1c:	sub    r12,rax
  423a1f:	xor    edx,edx
  423a21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  423a30:	movzx  edi,BYTE PTR [rsi+rdx*1-0x1]
  423a35:	vcvtsi2sd xmm0,xmm1,edi
  423a39:	vmovsd QWORD PTR [rcx],xmm0
  423a3d:	mov    DWORD PTR [rcx+0x8],0x3
  423a44:	mov    rcx,QWORD PTR [rbx+0x10]
  423a48:	lea    rdi,[rcx+0x10]
  423a4c:	mov    QWORD PTR [rbx+0x10],rdi
  423a50:	movzx  edi,BYTE PTR [rsi+rdx*1]
  423a54:	vcvtsi2sd xmm0,xmm1,edi
  423a58:	vmovsd QWORD PTR [rcx+0x10],xmm0
  423a5d:	mov    DWORD PTR [rcx+0x18],0x3
  423a64:	mov    rcx,QWORD PTR [rbx+0x10]
  423a68:	lea    rdi,[rcx+0x10]
  423a6c:	mov    QWORD PTR [rbx+0x10],rdi
  423a70:	movzx  edi,BYTE PTR [rsi+rdx*1+0x1]
  423a75:	vcvtsi2sd xmm0,xmm1,edi
  423a79:	vmovsd QWORD PTR [rcx+0x10],xmm0
  423a7e:	mov    DWORD PTR [rcx+0x18],0x3
  423a85:	mov    rcx,QWORD PTR [rbx+0x10]
  423a89:	lea    rdi,[rcx+0x10]
  423a8d:	mov    QWORD PTR [rbx+0x10],rdi
  423a91:	movzx  edi,BYTE PTR [rsi+rdx*1+0x2]
  423a96:	vcvtsi2sd xmm0,xmm1,edi
  423a9a:	vmovsd QWORD PTR [rcx+0x10],xmm0
  423a9f:	mov    DWORD PTR [rcx+0x18],0x3
  423aa6:	mov    rcx,QWORD PTR [rbx+0x10]
  423aaa:	add    rcx,0x10
  423aae:	mov    QWORD PTR [rbx+0x10],rcx
  423ab2:	add    rdx,0x4
  423ab6:	cmp    r12,rdx
  423ab9:	jne    423a30 <__ctype_b_loc@plt+0x21760>
  423abf:	test   rax,rax
  423ac2:	je     423b08 <__ctype_b_loc@plt+0x21838>
  423ac4:	add    rbp,rdx
  423ac7:	lea    rdx,[r14+rbp*1]
  423acb:	add    rdx,0xffffffffffffffff
  423acf:	xor    esi,esi
  423ad1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423adb:	nop    DWORD PTR [rax+rax*1+0x0]
  423ae0:	movzx  edi,BYTE PTR [rdx+rsi*1]
  423ae4:	vcvtsi2sd xmm0,xmm1,edi
  423ae8:	vmovsd QWORD PTR [rcx],xmm0
  423aec:	mov    DWORD PTR [rcx+0x8],0x3
  423af3:	mov    rcx,QWORD PTR [rbx+0x10]
  423af7:	add    rcx,0x10
  423afb:	mov    QWORD PTR [rbx+0x10],rcx
  423aff:	add    rsi,0x1
  423b03:	cmp    rax,rsi
  423b06:	jne    423ae0 <__ctype_b_loc@plt+0x21810>
  423b08:	mov    eax,r15d
  423b0b:	add    rsp,0x28
  423b0f:	pop    rbx
  423b10:	pop    r12
  423b12:	pop    r13
  423b14:	pop    r14
  423b16:	pop    r15
  423b18:	pop    rbp
  423b19:	ret    
  423b1a:	nop    WORD PTR [rax+rax*1+0x0]
  423b20:	push   rbp
  423b21:	push   r15
  423b23:	push   r14
  423b25:	push   r13
  423b27:	push   r12
  423b29:	push   rbx
  423b2a:	sub    rsp,0x2048
  423b31:	mov    rcx,QWORD PTR [rdi+0x10]
  423b35:	mov    rax,QWORD PTR [rdi+0x18]
  423b39:	mov    r13,rcx
  423b3c:	sub    r13,rax
  423b3f:	shr    r13,0x4
  423b43:	mov    QWORD PTR [rsp+0x40],rdi
  423b48:	lea    rdx,[rsp+0x48]
  423b4d:	mov    QWORD PTR [rsp+0x30],rdx
  423b52:	mov    DWORD PTR [rsp+0x38],0x0
  423b5a:	test   r13d,r13d
  423b5d:	jle    423db8 <__ctype_b_loc@plt+0x21ae8>
  423b63:	mov    r14,rdi
  423b66:	add    r13d,0x1
  423b6a:	mov    r12d,0x1
  423b70:	lea    r15,[rip+0x6fa1]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  423b77:	mov    QWORD PTR [rsp+0x10],r13
  423b7c:	jmp    423b88 <__ctype_b_loc@plt+0x218b8>
  423b7e:	xchg   ax,ax
  423b80:	mov    rcx,QWORD PTR [r14+0x10]
  423b84:	mov    rax,QWORD PTR [r14+0x18]
  423b88:	lea    rbx,[r12-0x1]
  423b8d:	shl    rbx,0x4
  423b91:	add    rax,rbx
  423b94:	cmp    rax,rcx
  423b97:	cmovae rax,r15
  423b9b:	mov    ecx,DWORD PTR [rax+0x8]
  423b9e:	cmp    ecx,0x3
  423ba1:	je     423c7e <__ctype_b_loc@plt+0x219ae>
  423ba7:	cmp    ecx,0x4
  423baa:	jne    423cb0 <__ctype_b_loc@plt+0x219e0>
  423bb0:	mov    r15,QWORD PTR [rax]
  423bb3:	add    r15,0x18
  423bb7:	mov    rdi,r15
  423bba:	lea    rsi,[rsp+0x8]
  423bbf:	call   4020b0 <strtod@plt>
  423bc4:	mov    rbp,QWORD PTR [rsp+0x8]
  423bc9:	cmp    rbp,r15
  423bcc:	je     423c3b <__ctype_b_loc@plt+0x2196b>
  423bce:	mov    r13b,BYTE PTR [rbp+0x0]
  423bd2:	mov    eax,r13d
  423bd5:	or     al,0x20
  423bd7:	cmp    al,0x78
  423bd9:	jne    423c0f <__ctype_b_loc@plt+0x2193f>
  423bdb:	mov    edx,0x10
  423be0:	mov    rdi,r15
  423be3:	lea    rsi,[rsp+0x8]
  423be8:	call   402250 <strtoul@plt>
  423bed:	vmovq  xmm0,rax
  423bf2:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x7076]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  423bfa:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x707e]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  423c02:	vhaddpd xmm0,xmm0,xmm0
  423c06:	mov    rbp,QWORD PTR [rsp+0x8]
  423c0b:	mov    r13b,BYTE PTR [rbp+0x0]
  423c0f:	lea    r15,[rip+0x6f02]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  423c16:	test   r13b,r13b
  423c19:	je     423c44 <__ctype_b_loc@plt+0x21974>
  423c1b:	vmovapd XMMWORD PTR [rsp+0x20],xmm0
  423c21:	call   4022d0 <__ctype_b_loc@plt>
  423c26:	mov    rax,QWORD PTR [rax]
  423c29:	movzx  ecx,r13b
  423c2d:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  423c32:	jne    423c4b <__ctype_b_loc@plt+0x2197b>
  423c34:	mov    r13,QWORD PTR [rsp+0x10]
  423c39:	jmp    423cb0 <__ctype_b_loc@plt+0x219e0>
  423c3b:	lea    r15,[rip+0x6ed6]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  423c42:	jmp    423cb0 <__ctype_b_loc@plt+0x219e0>
  423c44:	mov    r13,QWORD PTR [rsp+0x10]
  423c49:	jmp    423c73 <__ctype_b_loc@plt+0x219a3>
  423c4b:	add    rbp,0x1
  423c4f:	mov    r13,QWORD PTR [rsp+0x10]
  423c54:	vmovapd xmm0,XMMWORD PTR [rsp+0x20]
  423c5a:	nop    WORD PTR [rax+rax*1+0x0]
  423c60:	movzx  ecx,BYTE PTR [rbp+0x0]
  423c64:	add    rbp,0x1
  423c68:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  423c6d:	jne    423c60 <__ctype_b_loc@plt+0x21990>
  423c6f:	test   cl,cl
  423c71:	jne    423cb0 <__ctype_b_loc@plt+0x219e0>
  423c73:	vmovsd QWORD PTR [rsp+0x18],xmm0
  423c79:	lea    rax,[rsp+0x18]
  423c7e:	vcvttsd2si rbp,QWORD PTR [rax]
  423c83:	test   rbp,rbp
  423c86:	je     423cb0 <__ctype_b_loc@plt+0x219e0>
  423c88:	cmp    ebp,0x100
  423c8e:	jb     423d3f <__ctype_b_loc@plt+0x21a6f>
  423c94:	mov    rdi,r14
  423c97:	mov    esi,r12d
  423c9a:	lea    rdx,[rip+0x7ba8]        # 42b849 <__ctype_b_loc@plt+0x29579>
  423ca1:	call   410240 <__ctype_b_loc@plt+0xdf70>
  423ca6:	jmp    423d3f <__ctype_b_loc@plt+0x21a6f>
  423cab:	nop    DWORD PTR [rax+rax*1+0x0]
  423cb0:	add    rbx,QWORD PTR [r14+0x18]
  423cb4:	cmp    rbx,QWORD PTR [r14+0x10]
  423cb8:	cmovae rbx,r15
  423cbc:	mov    eax,DWORD PTR [rbx+0x8]
  423cbf:	cmp    eax,0x3
  423cc2:	je     423d3d <__ctype_b_loc@plt+0x21a6d>
  423cc4:	cmp    eax,0x4
  423cc7:	jne    423d2b <__ctype_b_loc@plt+0x21a5b>
  423cc9:	mov    r15,QWORD PTR [rbx]
  423ccc:	add    r15,0x18
  423cd0:	mov    rdi,r15
  423cd3:	lea    rsi,[rsp+0x8]
  423cd8:	call   4020b0 <strtod@plt>
  423cdd:	mov    rbx,QWORD PTR [rsp+0x8]
  423ce2:	cmp    rbx,r15
  423ce5:	je     423d24 <__ctype_b_loc@plt+0x21a54>
  423ce7:	mov    bpl,BYTE PTR [rbx]
  423cea:	mov    eax,ebp
  423cec:	or     al,0x20
  423cee:	cmp    al,0x78
  423cf0:	jne    423d0c <__ctype_b_loc@plt+0x21a3c>
  423cf2:	mov    edx,0x10
  423cf7:	mov    rdi,r15
  423cfa:	lea    rsi,[rsp+0x8]
  423cff:	call   402250 <strtoul@plt>
  423d04:	mov    rbx,QWORD PTR [rsp+0x8]
  423d09:	mov    bpl,BYTE PTR [rbx]
  423d0c:	test   bpl,bpl
  423d0f:	je     423d7b <__ctype_b_loc@plt+0x21aab>
  423d11:	call   4022d0 <__ctype_b_loc@plt>
  423d16:	mov    rax,QWORD PTR [rax]
  423d19:	movzx  ecx,bpl
  423d1d:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  423d22:	jne    423d86 <__ctype_b_loc@plt+0x21ab6>
  423d24:	lea    r15,[rip+0x6ded]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  423d2b:	mov    rdi,r14
  423d2e:	mov    esi,r12d
  423d31:	lea    rdx,[rip+0x7169]        # 42aea1 <__ctype_b_loc@plt+0x28bd1>
  423d38:	call   410850 <__ctype_b_loc@plt+0xe580>
  423d3d:	xor    ebp,ebp
  423d3f:	mov    rax,QWORD PTR [rsp+0x30]
  423d44:	lea    rcx,[rsp+0x2048]
  423d4c:	cmp    rax,rcx
  423d4f:	jb     423d60 <__ctype_b_loc@plt+0x21a90>
  423d51:	lea    rdi,[rsp+0x30]
  423d56:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  423d5b:	mov    rax,QWORD PTR [rsp+0x30]
  423d60:	lea    rcx,[rax+0x1]
  423d64:	mov    QWORD PTR [rsp+0x30],rcx
  423d69:	mov    BYTE PTR [rax],bpl
  423d6c:	add    r12,0x1
  423d70:	cmp    r12,r13
  423d73:	jne    423b80 <__ctype_b_loc@plt+0x218b0>
  423d79:	jmp    423db8 <__ctype_b_loc@plt+0x21ae8>
  423d7b:	xor    ebp,ebp
  423d7d:	lea    r15,[rip+0x6d94]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  423d84:	jmp    423d3f <__ctype_b_loc@plt+0x21a6f>
  423d86:	add    rbx,0x1
  423d8a:	lea    r15,[rip+0x6d87]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  423d91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423d9b:	nop    DWORD PTR [rax+rax*1+0x0]
  423da0:	movzx  ecx,BYTE PTR [rbx]
  423da3:	add    rbx,0x1
  423da7:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  423dac:	jne    423da0 <__ctype_b_loc@plt+0x21ad0>
  423dae:	test   cl,cl
  423db0:	jne    423d2b <__ctype_b_loc@plt+0x21a5b>
  423db6:	jmp    423d3d <__ctype_b_loc@plt+0x21a6d>
  423db8:	lea    rdi,[rsp+0x30]
  423dbd:	call   41f4d0 <__ctype_b_loc@plt+0x1d200>
  423dc2:	mov    eax,0x1
  423dc7:	add    rsp,0x2048
  423dce:	pop    rbx
  423dcf:	pop    r12
  423dd1:	pop    r13
  423dd3:	pop    r14
  423dd5:	pop    r15
  423dd7:	pop    rbp
  423dd8:	ret    
  423dd9:	nop    DWORD PTR [rax+0x0]
  423de0:	mov    esi,0x1
  423de5:	jmp    426bd0 <__ctype_b_loc@plt+0x24900>
  423dea:	nop    WORD PTR [rax+rax*1+0x0]
  423df0:	push   rbp
  423df1:	push   r15
  423df3:	push   r14
  423df5:	push   r13
  423df7:	push   r12
  423df9:	push   rbx
  423dfa:	sub    rsp,0x2298
  423e01:	mov    rdx,QWORD PTR [rdi+0x10]
  423e05:	mov    QWORD PTR [rsp+0x8],rdi
  423e0a:	mov    rax,QWORD PTR [rdi+0x18]
  423e0e:	mov    rcx,rdx
  423e11:	sub    rcx,rax
  423e14:	mov    QWORD PTR [rsp+0x70],rcx
  423e19:	lea    rbp,[rip+0x6cf8]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  423e20:	cmova  rbp,rax
  423e24:	mov    ecx,DWORD PTR [rbp+0x8]
  423e27:	cmp    ecx,0x4
  423e2a:	je     423ea2 <__ctype_b_loc@plt+0x21bd2>
  423e2c:	cmp    ecx,0x3
  423e2f:	jne    423eb5 <__ctype_b_loc@plt+0x21be5>
  423e35:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  423e3a:	lea    rsi,[rip+0x6fe0]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  423e41:	lea    r14,[rsp+0x280]
  423e49:	mov    al,0x1
  423e4b:	mov    rdi,r14
  423e4e:	call   402270 <sprintf@plt>
  423e53:	mov    rdi,r14
  423e56:	call   4020e0 <strlen@plt>
  423e5b:	mov    rbx,QWORD PTR [rsp+0x8]
  423e60:	mov    rdi,rbx
  423e63:	mov    rsi,r14
  423e66:	mov    rdx,rax
  423e69:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  423e6e:	mov    QWORD PTR [rbp+0x0],rax
  423e72:	mov    DWORD PTR [rbp+0x8],0x4
  423e79:	mov    rax,QWORD PTR [rbx+0x20]
  423e7d:	mov    rcx,QWORD PTR [rax+0x78]
  423e81:	cmp    rcx,QWORD PTR [rax+0x70]
  423e85:	jb     423e8f <__ctype_b_loc@plt+0x21bbf>
  423e87:	mov    rdi,rbx
  423e8a:	call   408070 <__ctype_b_loc@plt+0x5da0>
  423e8f:	mov    rbp,QWORD PTR [rbx+0x18]
  423e93:	cmp    rbp,QWORD PTR [rbx+0x10]
  423e97:	lea    rax,[rip+0x6c7a]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  423e9e:	cmovae rbp,rax
  423ea2:	mov    r15,QWORD PTR [rbp+0x0]
  423ea6:	mov    rbx,QWORD PTR [r15+0x10]
  423eaa:	add    r15,0x18
  423eae:	mov    rbp,QWORD PTR [rsp+0x8]
  423eb3:	jmp    423f1b <__ctype_b_loc@plt+0x21c4b>
  423eb5:	lea    rcx,[rip+0x731a]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  423ebc:	lea    rsi,[rip+0x6c55]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  423ec3:	cmp    rax,rsi
  423ec6:	je     423ee9 <__ctype_b_loc@plt+0x21c19>
  423ec8:	cmp    rax,rdx
  423ecb:	mov    rbp,QWORD PTR [rsp+0x8]
  423ed0:	jae    423eee <__ctype_b_loc@plt+0x21c1e>
  423ed2:	movsxd rax,DWORD PTR [rax+0x8]
  423ed6:	cmp    rax,0xffffffffffffffff
  423eda:	je     423eee <__ctype_b_loc@plt+0x21c1e>
  423edc:	lea    rcx,[rip+0xc9fd]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  423ee3:	mov    rcx,QWORD PTR [rcx+rax*8]
  423ee7:	jmp    423eee <__ctype_b_loc@plt+0x21c1e>
  423ee9:	mov    rbp,QWORD PTR [rsp+0x8]
  423eee:	lea    rsi,[rip+0x72cd]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  423ef5:	lea    rdx,[rip+0x736d]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  423efc:	xor    r15d,r15d
  423eff:	xor    eax,eax
  423f01:	mov    rdi,rbp
  423f04:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  423f09:	mov    esi,0x1
  423f0e:	mov    rdi,rbp
  423f11:	mov    rdx,rax
  423f14:	call   410240 <__ctype_b_loc@plt+0xdf70>
  423f19:	xor    ebx,ebx
  423f1b:	mov    QWORD PTR [rsp+0x290],rbp
  423f23:	lea    rax,[rsp+0x298]
  423f2b:	mov    QWORD PTR [rsp+0x280],rax
  423f33:	mov    DWORD PTR [rsp+0x288],0x0
  423f3e:	test   rbx,rbx
  423f41:	jle    425331 <__ctype_b_loc@plt+0x23061>
  423f47:	shr    QWORD PTR [rsp+0x70],0x4
  423f4d:	add    rbx,r15
  423f50:	lea    r12,[rsp+0x2298]
  423f58:	lea    rax,[rbp+0x88]
  423f5f:	mov    QWORD PTR [rsp+0x20],rax
  423f64:	lea    rax,[rbp+0x78]
  423f68:	mov    QWORD PTR [rsp+0x28],rax
  423f6d:	mov    eax,0x1
  423f72:	mov    QWORD PTR [rsp+0x18],rax
  423f77:	lea    r14,[rsp+0x280]
  423f7f:	nop
  423f80:	mov    al,BYTE PTR [r15]
  423f83:	cmp    al,0x25
  423f85:	jne    424000 <__ctype_b_loc@plt+0x21d30>
  423f87:	mov    r14,rbx
  423f8a:	lea    r13,[r15+0x1]
  423f8e:	mov    bl,BYTE PTR [r15+0x1]
  423f92:	cmp    bl,0x25
  423f95:	jne    424040 <__ctype_b_loc@plt+0x21d70>
  423f9b:	mov    rax,QWORD PTR [rsp+0x280]
  423fa3:	mov    cl,0x25
  423fa5:	lea    rdx,[rsp+0x2298]
  423fad:	cmp    rax,rdx
  423fb0:	jb     423fcb <__ctype_b_loc@plt+0x21cfb>
  423fb2:	lea    rdi,[rsp+0x280]
  423fba:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  423fbf:	mov    cl,BYTE PTR [r13+0x0]
  423fc3:	mov    rax,QWORD PTR [rsp+0x280]
  423fcb:	add    r15,0x2
  423fcf:	lea    rdx,[rax+0x1]
  423fd3:	mov    QWORD PTR [rsp+0x280],rdx
  423fdb:	mov    BYTE PTR [rax],cl
  423fdd:	mov    rbx,r14
  423fe0:	lea    r14,[rsp+0x280]
  423fe8:	lea    r12,[rsp+0x2298]
  423ff0:	cmp    r15,rbx
  423ff3:	jb     423f80 <__ctype_b_loc@plt+0x21cb0>
  423ff5:	jmp    425331 <__ctype_b_loc@plt+0x23061>
  423ffa:	nop    WORD PTR [rax+rax*1+0x0]
  424000:	mov    rcx,QWORD PTR [rsp+0x280]
  424008:	cmp    rcx,r12
  42400b:	jb     424020 <__ctype_b_loc@plt+0x21d50>
  42400d:	mov    rdi,r14
  424010:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  424015:	mov    al,BYTE PTR [r15]
  424018:	mov    rcx,QWORD PTR [rsp+0x280]
  424020:	add    r15,0x1
  424024:	lea    rdx,[rcx+0x1]
  424028:	mov    QWORD PTR [rsp+0x280],rdx
  424030:	mov    BYTE PTR [rcx],al
  424032:	cmp    r15,rbx
  424035:	jb     423f80 <__ctype_b_loc@plt+0x21cb0>
  42403b:	jmp    425331 <__ctype_b_loc@plt+0x23061>
  424040:	mov    r12,QWORD PTR [rsp+0x18]
  424045:	lea    eax,[r12+0x1]
  42404a:	mov    DWORD PTR [rsp+0x4],eax
  42404e:	cmp    r12d,DWORD PTR [rsp+0x70]
  424053:	jl     42406c <__ctype_b_loc@plt+0x21d9c>
  424055:	mov    rdi,rbp
  424058:	mov    esi,DWORD PTR [rsp+0x4]
  42405c:	lea    rdx,[rip+0x7173]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  424063:	call   410240 <__ctype_b_loc@plt+0xdf70>
  424068:	mov    bl,BYTE PTR [r13+0x0]
  42406c:	test   bl,bl
  42406e:	mov    ecx,0x1
  424073:	movabs rdx,0x1280900000001
  42407d:	je     4240b6 <__ctype_b_loc@plt+0x21de6>
  42407f:	mov    rbp,r13
  424082:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42408c:	nop    DWORD PTR [rax+0x0]
  424090:	movsx  rax,bl
  424094:	mov    eax,eax
  424096:	cmp    rax,0x3f
  42409a:	ja     4240bb <__ctype_b_loc@plt+0x21deb>
  42409c:	shlx   rax,rcx,rbx
  4240a1:	and    rax,rdx
  4240a4:	je     4240bb <__ctype_b_loc@plt+0x21deb>
  4240a6:	movzx  ebx,BYTE PTR [rbp+0x1]
  4240aa:	add    rbp,0x1
  4240ae:	test   bl,bl
  4240b0:	jne    424090 <__ctype_b_loc@plt+0x21dc0>
  4240b2:	xor    ebx,ebx
  4240b4:	jmp    4240bb <__ctype_b_loc@plt+0x21deb>
  4240b6:	xor    ebx,ebx
  4240b8:	mov    rbp,r13
  4240bb:	mov    rax,rbp
  4240be:	sub    rax,r13
  4240c1:	cmp    rax,0x6
  4240c5:	jb     4240dd <__ctype_b_loc@plt+0x21e0d>
  4240c7:	xor    eax,eax
  4240c9:	mov    rdi,QWORD PTR [rsp+0x8]
  4240ce:	lea    rsi,[rip+0x787b]        # 42b950 <__ctype_b_loc@plt+0x29680>
  4240d5:	call   410070 <__ctype_b_loc@plt+0xdda0>
  4240da:	mov    bl,BYTE PTR [rbp+0x0]
  4240dd:	call   4022d0 <__ctype_b_loc@plt>
  4240e2:	mov    QWORD PTR [rsp+0x48],rax
  4240e7:	mov    rax,QWORD PTR [rax]
  4240ea:	movzx  ecx,bl
  4240ed:	lea    rdx,[rbp+0x1]
  4240f1:	test   BYTE PTR [rax+rcx*2+0x1],0x8
  4240f6:	cmove  rdx,rbp
  4240fa:	movzx  ecx,BYTE PTR [rdx]
  4240fd:	lea    r15,[rdx+0x1]
  424101:	test   BYTE PTR [rax+rcx*2+0x1],0x8
  424106:	cmove  r15,rdx
  42410a:	mov    cl,BYTE PTR [r15]
  42410d:	cmp    cl,0x2e
  424110:	jne    424147 <__ctype_b_loc@plt+0x21e77>
  424112:	lea    rcx,[r15+0x1]
  424116:	movzx  edx,BYTE PTR [r15+0x1]
  42411b:	lea    rsi,[r15+0x2]
  42411f:	xor    edi,edi
  424121:	test   BYTE PTR [rax+rdx*2+0x1],0x8
  424126:	sete   dil
  42412a:	cmove  rsi,rcx
  42412e:	neg    rdi
  424131:	movzx  ecx,BYTE PTR [r15+rdi*1+0x2]
  424137:	lea    r15,[rsi+0x1]
  42413b:	test   BYTE PTR [rax+rcx*2+0x1],0x8
  424140:	cmove  r15,rsi
  424144:	mov    cl,BYTE PTR [r15]
  424147:	mov    rbp,QWORD PTR [rsp+0x8]
  42414c:	movzx  ecx,cl
  42414f:	test   BYTE PTR [rax+rcx*2+0x1],0x8
  424154:	je     424167 <__ctype_b_loc@plt+0x21e97>
  424156:	xor    eax,eax
  424158:	mov    rdi,rbp
  42415b:	lea    rsi,[rip+0x780e]        # 42b970 <__ctype_b_loc@plt+0x296a0>
  424162:	call   410070 <__ctype_b_loc@plt+0xdda0>
  424167:	mov    BYTE PTR [rsp+0x30],0x25
  42416c:	mov    rbx,r15
  42416f:	sub    rbx,r13
  424172:	lea    rdx,[rbx+0x1]
  424176:	lea    rdi,[rsp+0x31]
  42417b:	mov    rsi,r13
  42417e:	call   402060 <strncpy@plt>
  424183:	mov    BYTE PTR [rsp+rbx*1+0x32],0x0
  424188:	movsx  edx,BYTE PTR [r15]
  42418c:	lea    eax,[rdx-0x45]
  42418f:	cmp    eax,0x33
  424192:	ja     425357 <__ctype_b_loc@plt+0x23087>
  424198:	add    r15,0x1
  42419c:	lea    rcx,[rip+0x6791]        # 42a934 <__ctype_b_loc@plt+0x28664>
  4241a3:	movsxd rax,DWORD PTR [rcx+rax*4]
  4241a7:	add    rax,rcx
  4241aa:	jmp    rax
  4241ac:	mov    rdi,rbp
  4241af:	mov    ebx,DWORD PTR [rsp+0x4]
  4241b3:	mov    esi,ebx
  4241b5:	call   41ddf0 <__ctype_b_loc@plt+0x1bb20>
  4241ba:	vucomisd xmm0,QWORD PTR [rip+0x6bae]        # 42ad70 <__ctype_b_loc@plt+0x28aa0>
  4241c2:	mov    r13,r14
  4241c5:	lea    r14,[rsp+0x280]
  4241cd:	lea    r12,[rsp+0x2298]
  4241d5:	jne    4247e9 <__ctype_b_loc@plt+0x22519>
  4241db:	jp     4247e9 <__ctype_b_loc@plt+0x22519>
  4241e1:	mov    rsi,QWORD PTR [rsp+0x18]
  4241e6:	test   esi,esi
  4241e8:	js     42430f <__ctype_b_loc@plt+0x2203f>
  4241ee:	movsxd rax,esi
  4241f1:	shl    rax,0x4
  4241f5:	add    rax,QWORD PTR [rbp+0x18]
  4241f9:	cmp    rax,QWORD PTR [rbp+0x10]
  4241fd:	lea    rcx,[rip+0x6914]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  424204:	cmovae rax,rcx
  424208:	jmp    42475d <__ctype_b_loc@plt+0x2248d>
  42420d:	lea    rdi,[rsp+0x30]
  424212:	call   4020e0 <strlen@plt>
  424217:	mov    cl,BYTE PTR [rsp+rax*1+0x2f]
  42421b:	mov    WORD PTR [rsp+rax*1+0x2f],0x6c
  424222:	mov    BYTE PTR [rsp+rax*1+0x30],cl
  424226:	mov    BYTE PTR [rsp+rax*1+0x31],0x0
  42422b:	mov    rdi,rbp
  42422e:	mov    ebx,DWORD PTR [rsp+0x4]
  424232:	mov    esi,ebx
  424234:	call   41ddf0 <__ctype_b_loc@plt+0x1bb20>
  424239:	vmovapd xmm2,xmm0
  42423d:	vucomisd xmm0,QWORD PTR [rip+0x6b2b]        # 42ad70 <__ctype_b_loc@plt+0x28aa0>
  424245:	mov    r13,r14
  424248:	lea    r14,[rsp+0x280]
  424250:	lea    r12,[rsp+0x2298]
  424258:	jne    42496b <__ctype_b_loc@plt+0x2269b>
  42425e:	jp     42496b <__ctype_b_loc@plt+0x2269b>
  424264:	mov    rsi,QWORD PTR [rsp+0x18]
  424269:	test   esi,esi
  42426b:	js     4243e6 <__ctype_b_loc@plt+0x22116>
  424271:	movsxd rax,esi
  424274:	shl    rax,0x4
  424278:	add    rax,QWORD PTR [rbp+0x18]
  42427c:	cmp    rax,QWORD PTR [rbp+0x10]
  424280:	lea    rcx,[rip+0x6891]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  424287:	cmovae rax,rcx
  42428b:	jmp    4248df <__ctype_b_loc@plt+0x2260f>
  424290:	lea    rdi,[rsp+0x30]
  424295:	call   4020e0 <strlen@plt>
  42429a:	mov    cl,BYTE PTR [rsp+rax*1+0x2f]
  42429e:	mov    WORD PTR [rsp+rax*1+0x2f],0x6c
  4242a5:	mov    BYTE PTR [rsp+rax*1+0x30],cl
  4242a9:	mov    BYTE PTR [rsp+rax*1+0x31],0x0
  4242ae:	mov    rdi,rbp
  4242b1:	mov    ebx,DWORD PTR [rsp+0x4]
  4242b5:	mov    esi,ebx
  4242b7:	call   41ddf0 <__ctype_b_loc@plt+0x1bb20>
  4242bc:	vucomisd xmm0,QWORD PTR [rip+0x6aac]        # 42ad70 <__ctype_b_loc@plt+0x28aa0>
  4242c4:	mov    r13,r14
  4242c7:	lea    r14,[rsp+0x280]
  4242cf:	lea    r12,[rsp+0x2298]
  4242d7:	jne    424b50 <__ctype_b_loc@plt+0x22880>
  4242dd:	jp     424b50 <__ctype_b_loc@plt+0x22880>
  4242e3:	mov    rsi,QWORD PTR [rsp+0x18]
  4242e8:	test   esi,esi
  4242ea:	js     424438 <__ctype_b_loc@plt+0x22168>
  4242f0:	movsxd rax,esi
  4242f3:	shl    rax,0x4
  4242f7:	add    rax,QWORD PTR [rbp+0x18]
  4242fb:	cmp    rax,QWORD PTR [rbp+0x10]
  4242ff:	lea    rcx,[rip+0x6812]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  424306:	cmovae rax,rcx
  42430a:	jmp    424a9d <__ctype_b_loc@plt+0x227cd>
  42430f:	cmp    esi,0xffffd8f0
  424315:	jl     4243fe <__ctype_b_loc@plt+0x2212e>
  42431b:	movsxd rax,ebx
  42431e:	shl    rax,0x4
  424322:	add    rax,QWORD PTR [rbp+0x10]
  424326:	jmp    42475d <__ctype_b_loc@plt+0x2248d>
  42432b:	mov    rdi,rbp
  42432e:	mov    ebx,DWORD PTR [rsp+0x4]
  424332:	mov    esi,ebx
  424334:	call   41ddf0 <__ctype_b_loc@plt+0x1bb20>
  424339:	vucomisd xmm0,QWORD PTR [rip+0x6a2f]        # 42ad70 <__ctype_b_loc@plt+0x28aa0>
  424341:	mov    r13,r14
  424344:	lea    r14,[rsp+0x280]
  42434c:	lea    r12,[rsp+0x2298]
  424354:	jne    4249eb <__ctype_b_loc@plt+0x2271b>
  42435a:	jp     4249eb <__ctype_b_loc@plt+0x2271b>
  424360:	mov    rsi,QWORD PTR [rsp+0x18]
  424365:	test   esi,esi
  424367:	js     42457c <__ctype_b_loc@plt+0x222ac>
  42436d:	movsxd rax,esi
  424370:	shl    rax,0x4
  424374:	add    rax,QWORD PTR [rbp+0x18]
  424378:	cmp    rax,QWORD PTR [rbp+0x10]
  42437c:	lea    rcx,[rip+0x6795]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  424383:	cmovae rax,rcx
  424387:	jmp    424593 <__ctype_b_loc@plt+0x222c3>
  42438c:	test   r12d,r12d
  42438f:	js     42448e <__ctype_b_loc@plt+0x221be>
  424395:	movsxd rbx,r12d
  424398:	shl    rbx,0x4
  42439c:	add    rbx,QWORD PTR [rbp+0x18]
  4243a0:	cmp    rbx,QWORD PTR [rbp+0x10]
  4243a4:	lea    rax,[rip+0x676d]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4243ab:	cmovae rbx,rax
  4243af:	mov    r13d,DWORD PTR [rsp+0x4]
  4243b4:	jmp    424c33 <__ctype_b_loc@plt+0x22963>
  4243b9:	test   r12d,r12d
  4243bc:	js     4244b0 <__ctype_b_loc@plt+0x221e0>
  4243c2:	movsxd rbx,r12d
  4243c5:	shl    rbx,0x4
  4243c9:	add    rbx,QWORD PTR [rbp+0x18]
  4243cd:	cmp    rbx,QWORD PTR [rbp+0x10]
  4243d1:	lea    rax,[rip+0x6740]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4243d8:	cmovae rbx,rax
  4243dc:	mov    r12d,DWORD PTR [rsp+0x4]
  4243e1:	jmp    4244cd <__ctype_b_loc@plt+0x221fd>
  4243e6:	cmp    esi,0xffffd8f0
  4243ec:	jl     424454 <__ctype_b_loc@plt+0x22184>
  4243ee:	movsxd rax,ebx
  4243f1:	shl    rax,0x4
  4243f5:	add    rax,QWORD PTR [rbp+0x10]
  4243f9:	jmp    4248df <__ctype_b_loc@plt+0x2260f>
  4243fe:	mov    rax,QWORD PTR [rsp+0x28]
  424403:	cmp    esi,0xffffd8ed
  424409:	je     42475d <__ctype_b_loc@plt+0x2248d>
  42440f:	cmp    esi,0xffffd8ee
  424415:	je     424707 <__ctype_b_loc@plt+0x22437>
  42441b:	cmp    esi,0xffffd8ef
  424421:	jne    42472e <__ctype_b_loc@plt+0x2245e>
  424427:	mov    rax,QWORD PTR [rbp+0x20]
  42442b:	mov    ecx,0xa0
  424430:	add    rax,rcx
  424433:	jmp    42475d <__ctype_b_loc@plt+0x2248d>
  424438:	cmp    esi,0xffffd8f0
  42443e:	jl     42464b <__ctype_b_loc@plt+0x2237b>
  424444:	movsxd rax,ebx
  424447:	shl    rax,0x4
  42444b:	add    rax,QWORD PTR [rbp+0x10]
  42444f:	jmp    424a9d <__ctype_b_loc@plt+0x227cd>
  424454:	mov    rax,QWORD PTR [rsp+0x28]
  424459:	cmp    esi,0xffffd8ed
  42445f:	je     4248df <__ctype_b_loc@plt+0x2260f>
  424465:	cmp    esi,0xffffd8ee
  42446b:	je     424889 <__ctype_b_loc@plt+0x225b9>
  424471:	cmp    esi,0xffffd8ef
  424477:	jne    4248b0 <__ctype_b_loc@plt+0x225e0>
  42447d:	mov    rax,QWORD PTR [rbp+0x20]
  424481:	mov    ecx,0xa0
  424486:	add    rax,rcx
  424489:	jmp    4248df <__ctype_b_loc@plt+0x2260f>
  42448e:	cmp    r12d,0xffffd8f0
  424495:	mov    r13d,DWORD PTR [rsp+0x4]
  42449a:	jl     424685 <__ctype_b_loc@plt+0x223b5>
  4244a0:	movsxd rbx,r13d
  4244a3:	shl    rbx,0x4
  4244a7:	add    rbx,QWORD PTR [rbp+0x10]
  4244ab:	jmp    424c33 <__ctype_b_loc@plt+0x22963>
  4244b0:	cmp    r12d,0xffffd8f0
  4244b7:	jl     4246c2 <__ctype_b_loc@plt+0x223f2>
  4244bd:	mov    r12d,DWORD PTR [rsp+0x4]
  4244c2:	movsxd rbx,r12d
  4244c5:	shl    rbx,0x4
  4244c9:	add    rbx,QWORD PTR [rbp+0x10]
  4244cd:	mov    eax,DWORD PTR [rbx+0x8]
  4244d0:	cmp    eax,0x4
  4244d3:	mov    QWORD PTR [rsp+0x78],r14
  4244d8:	je     42503e <__ctype_b_loc@plt+0x22d6e>
  4244de:	cmp    eax,0x3
  4244e1:	jne    42455f <__ctype_b_loc@plt+0x2228f>
  4244e3:	vmovsd xmm0,QWORD PTR [rbx]
  4244e7:	mov    al,0x1
  4244e9:	lea    r14,[rsp+0x50]
  4244ee:	mov    rdi,r14
  4244f1:	lea    rsi,[rip+0x6929]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  4244f8:	call   402270 <sprintf@plt>
  4244fd:	mov    rdi,r14
  424500:	call   4020e0 <strlen@plt>
  424505:	mov    rdi,rbp
  424508:	mov    rsi,r14
  42450b:	mov    rdx,rax
  42450e:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  424513:	mov    QWORD PTR [rbx],rax
  424516:	mov    DWORD PTR [rbx+0x8],0x4
  42451d:	mov    rax,QWORD PTR [rbp+0x20]
  424521:	mov    rcx,QWORD PTR [rax+0x78]
  424525:	cmp    rcx,QWORD PTR [rax+0x70]
  424529:	jb     424533 <__ctype_b_loc@plt+0x22263>
  42452b:	mov    rdi,rbp
  42452e:	call   408070 <__ctype_b_loc@plt+0x5da0>
  424533:	mov    rax,QWORD PTR [rsp+0x18]
  424538:	test   eax,eax
  42453a:	js     424834 <__ctype_b_loc@plt+0x22564>
  424540:	movsxd rbx,eax
  424543:	shl    rbx,0x4
  424547:	add    rbx,QWORD PTR [rbp+0x18]
  42454b:	cmp    rbx,QWORD PTR [rbp+0x10]
  42454f:	lea    rax,[rip+0x65c2]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  424556:	cmovae rbx,rax
  42455a:	jmp    42503e <__ctype_b_loc@plt+0x22d6e>
  42455f:	mov    rdi,rbp
  424562:	mov    esi,r12d
  424565:	lea    rdx,[rip+0x6cfd]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  42456c:	call   410850 <__ctype_b_loc@plt+0xe580>
  424571:	xor    r13d,r13d
  424574:	xor    r14d,r14d
  424577:	jmp    425049 <__ctype_b_loc@plt+0x22d79>
  42457c:	cmp    esi,0xffffd8f0
  424582:	jl     42484f <__ctype_b_loc@plt+0x2257f>
  424588:	movsxd rax,ebx
  42458b:	shl    rax,0x4
  42458f:	add    rax,QWORD PTR [rbp+0x10]
  424593:	mov    ecx,DWORD PTR [rax+0x8]
  424596:	cmp    ecx,0x3
  424599:	je     4249eb <__ctype_b_loc@plt+0x2271b>
  42459f:	cmp    ecx,0x4
  4245a2:	vmovsd QWORD PTR [rsp+0x10],xmm0
  4245a8:	jne    4249d4 <__ctype_b_loc@plt+0x22704>
  4245ae:	mov    rbp,QWORD PTR [rax]
  4245b1:	add    rbp,0x18
  4245b5:	mov    rdi,rbp
  4245b8:	lea    rsi,[rsp+0x50]
  4245bd:	call   4020b0 <strtod@plt>
  4245c2:	mov    rax,QWORD PTR [rsp+0x50]
  4245c7:	cmp    rax,rbp
  4245ca:	je     4249cf <__ctype_b_loc@plt+0x226ff>
  4245d0:	mov    dl,BYTE PTR [rax]
  4245d2:	mov    ecx,edx
  4245d4:	or     cl,0x20
  4245d7:	cmp    cl,0x78
  4245da:	jne    4245f5 <__ctype_b_loc@plt+0x22325>
  4245dc:	mov    edx,0x10
  4245e1:	mov    rdi,rbp
  4245e4:	lea    rsi,[rsp+0x50]
  4245e9:	call   402250 <strtoul@plt>
  4245ee:	mov    rax,QWORD PTR [rsp+0x50]
  4245f3:	mov    dl,BYTE PTR [rax]
  4245f5:	test   dl,dl
  4245f7:	je     4249e5 <__ctype_b_loc@plt+0x22715>
  4245fd:	mov    rcx,QWORD PTR [rsp+0x48]
  424602:	mov    rcx,QWORD PTR [rcx]
  424605:	movzx  edx,dl
  424608:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  42460d:	mov    rbp,QWORD PTR [rsp+0x8]
  424612:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  424618:	je     4249d4 <__ctype_b_loc@plt+0x22704>
  42461e:	add    rax,0x1
  424622:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42462c:	nop    DWORD PTR [rax+0x0]
  424630:	movzx  edx,BYTE PTR [rax]
  424633:	add    rax,0x1
  424637:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  42463c:	jne    424630 <__ctype_b_loc@plt+0x22360>
  42463e:	test   dl,dl
  424640:	jne    4249d4 <__ctype_b_loc@plt+0x22704>
  424646:	jmp    4249eb <__ctype_b_loc@plt+0x2271b>
  42464b:	mov    rax,QWORD PTR [rsp+0x28]
  424650:	cmp    esi,0xffffd8ed
  424656:	je     424a9d <__ctype_b_loc@plt+0x227cd>
  42465c:	cmp    esi,0xffffd8ee
  424662:	je     424a47 <__ctype_b_loc@plt+0x22777>
  424668:	cmp    esi,0xffffd8ef
  42466e:	jne    424a6e <__ctype_b_loc@plt+0x2279e>
  424674:	mov    rax,QWORD PTR [rbp+0x20]
  424678:	mov    ecx,0xa0
  42467d:	add    rax,rcx
  424680:	jmp    424a9d <__ctype_b_loc@plt+0x227cd>
  424685:	mov    rbx,QWORD PTR [rsp+0x28]
  42468a:	cmp    r12d,0xffffd8ed
  424691:	je     424c33 <__ctype_b_loc@plt+0x22963>
  424697:	cmp    r12d,0xffffd8ee
  42469e:	je     424bdb <__ctype_b_loc@plt+0x2290b>
  4246a4:	cmp    r12d,0xffffd8ef
  4246ab:	jne    424c02 <__ctype_b_loc@plt+0x22932>
  4246b1:	mov    rbx,QWORD PTR [rbp+0x20]
  4246b5:	mov    eax,0xa0
  4246ba:	add    rbx,rax
  4246bd:	jmp    424c33 <__ctype_b_loc@plt+0x22963>
  4246c2:	mov    rbx,QWORD PTR [rsp+0x28]
  4246c7:	cmp    r12d,0xffffd8ed
  4246ce:	mov    r12d,DWORD PTR [rsp+0x4]
  4246d3:	je     4244cd <__ctype_b_loc@plt+0x221fd>
  4246d9:	mov    rdx,QWORD PTR [rsp+0x18]
  4246de:	cmp    edx,0xffffd8ee
  4246e4:	je     424e44 <__ctype_b_loc@plt+0x22b74>
  4246ea:	cmp    edx,0xffffd8ef
  4246f0:	jne    424e6e <__ctype_b_loc@plt+0x22b9e>
  4246f6:	mov    rbx,QWORD PTR [rbp+0x20]
  4246fa:	mov    eax,0xa0
  4246ff:	add    rbx,rax
  424702:	jmp    4244cd <__ctype_b_loc@plt+0x221fd>
  424707:	mov    rax,QWORD PTR [rbp+0x28]
  42470b:	mov    rax,QWORD PTR [rax+0x8]
  42470f:	mov    rax,QWORD PTR [rax]
  424712:	mov    rax,QWORD PTR [rax+0x18]
  424716:	mov    QWORD PTR [rbp+0x88],rax
  42471d:	mov    DWORD PTR [rbp+0x90],0x5
  424727:	mov    rax,QWORD PTR [rsp+0x20]
  42472c:	jmp    42475d <__ctype_b_loc@plt+0x2248d>
  42472e:	mov    rax,QWORD PTR [rbp+0x28]
  424732:	mov    rax,QWORD PTR [rax+0x8]
  424736:	mov    rcx,QWORD PTR [rax]
  424739:	mov    edx,0xffffd8ed
  42473e:	sub    edx,esi
  424740:	movzx  esi,BYTE PTR [rcx+0xb]
  424744:	lea    rax,[rip+0x63cd]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  42474b:	cmp    edx,esi
  42474d:	jg     42475d <__ctype_b_loc@plt+0x2248d>
  42474f:	movsxd rax,edx
  424752:	shl    rax,0x4
  424756:	add    rax,rcx
  424759:	add    rax,0x18
  42475d:	mov    ecx,DWORD PTR [rax+0x8]
  424760:	cmp    ecx,0x3
  424763:	je     4247e9 <__ctype_b_loc@plt+0x22519>
  424769:	cmp    ecx,0x4
  42476c:	vmovsd QWORD PTR [rsp+0x10],xmm0
  424772:	jne    4247d2 <__ctype_b_loc@plt+0x22502>
  424774:	mov    rbp,QWORD PTR [rax]
  424777:	add    rbp,0x18
  42477b:	mov    rdi,rbp
  42477e:	lea    rsi,[rsp+0x50]
  424783:	call   4020b0 <strtod@plt>
  424788:	mov    rax,QWORD PTR [rsp+0x50]
  42478d:	cmp    rax,rbp
  424790:	je     4247cd <__ctype_b_loc@plt+0x224fd>
  424792:	mov    dl,BYTE PTR [rax]
  424794:	mov    ecx,edx
  424796:	or     cl,0x20
  424799:	cmp    cl,0x78
  42479c:	jne    4247b7 <__ctype_b_loc@plt+0x224e7>
  42479e:	mov    edx,0x10
  4247a3:	mov    rdi,rbp
  4247a6:	lea    rsi,[rsp+0x50]
  4247ab:	call   402250 <strtoul@plt>
  4247b0:	mov    rax,QWORD PTR [rsp+0x50]
  4247b5:	mov    dl,BYTE PTR [rax]
  4247b7:	test   dl,dl
  4247b9:	je     4247e3 <__ctype_b_loc@plt+0x22513>
  4247bb:	mov    rcx,QWORD PTR [rsp+0x48]
  4247c0:	mov    rcx,QWORD PTR [rcx]
  4247c3:	movzx  edx,dl
  4247c6:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  4247cb:	jne    424805 <__ctype_b_loc@plt+0x22535>
  4247cd:	mov    rbp,QWORD PTR [rsp+0x8]
  4247d2:	mov    rdi,rbp
  4247d5:	mov    esi,ebx
  4247d7:	lea    rdx,[rip+0x66c3]        # 42aea1 <__ctype_b_loc@plt+0x28bd1>
  4247de:	call   410850 <__ctype_b_loc@plt+0xe580>
  4247e3:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  4247e9:	mov    al,0x1
  4247eb:	lea    rbx,[rsp+0x80]
  4247f3:	mov    rdi,rbx
  4247f6:	lea    rsi,[rsp+0x30]
  4247fb:	call   402270 <sprintf@plt>
  424800:	jmp    424b6c <__ctype_b_loc@plt+0x2289c>
  424805:	add    rax,0x1
  424809:	mov    rbp,QWORD PTR [rsp+0x8]
  42480e:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  424814:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42481e:	xchg   ax,ax
  424820:	movzx  edx,BYTE PTR [rax]
  424823:	add    rax,0x1
  424827:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  42482c:	jne    424820 <__ctype_b_loc@plt+0x22550>
  42482e:	test   dl,dl
  424830:	jne    4247d2 <__ctype_b_loc@plt+0x22502>
  424832:	jmp    4247e9 <__ctype_b_loc@plt+0x22519>
  424834:	cmp    eax,0xffffd8f0
  424839:	jl     424a0b <__ctype_b_loc@plt+0x2273b>
  42483f:	movsxd rbx,r12d
  424842:	shl    rbx,0x4
  424846:	add    rbx,QWORD PTR [rbp+0x10]
  42484a:	jmp    42503e <__ctype_b_loc@plt+0x22d6e>
  42484f:	mov    rax,QWORD PTR [rsp+0x28]
  424854:	cmp    esi,0xffffd8ed
  42485a:	je     424593 <__ctype_b_loc@plt+0x222c3>
  424860:	cmp    esi,0xffffd8ee
  424866:	je     424ea7 <__ctype_b_loc@plt+0x22bd7>
  42486c:	cmp    esi,0xffffd8ef
  424872:	jne    424ed1 <__ctype_b_loc@plt+0x22c01>
  424878:	mov    rax,QWORD PTR [rbp+0x20]
  42487c:	mov    ecx,0xa0
  424881:	add    rax,rcx
  424884:	jmp    424593 <__ctype_b_loc@plt+0x222c3>
  424889:	mov    rax,QWORD PTR [rbp+0x28]
  42488d:	mov    rax,QWORD PTR [rax+0x8]
  424891:	mov    rax,QWORD PTR [rax]
  424894:	mov    rax,QWORD PTR [rax+0x18]
  424898:	mov    QWORD PTR [rbp+0x88],rax
  42489f:	mov    DWORD PTR [rbp+0x90],0x5
  4248a9:	mov    rax,QWORD PTR [rsp+0x20]
  4248ae:	jmp    4248df <__ctype_b_loc@plt+0x2260f>
  4248b0:	mov    rax,QWORD PTR [rbp+0x28]
  4248b4:	mov    rax,QWORD PTR [rax+0x8]
  4248b8:	mov    rcx,QWORD PTR [rax]
  4248bb:	mov    edx,0xffffd8ed
  4248c0:	sub    edx,esi
  4248c2:	movzx  esi,BYTE PTR [rcx+0xb]
  4248c6:	lea    rax,[rip+0x624b]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4248cd:	cmp    edx,esi
  4248cf:	jg     4248df <__ctype_b_loc@plt+0x2260f>
  4248d1:	movsxd rax,edx
  4248d4:	shl    rax,0x4
  4248d8:	add    rax,rcx
  4248db:	add    rax,0x18
  4248df:	mov    ecx,DWORD PTR [rax+0x8]
  4248e2:	cmp    ecx,0x3
  4248e5:	je     42496b <__ctype_b_loc@plt+0x2269b>
  4248eb:	cmp    ecx,0x4
  4248ee:	vmovsd QWORD PTR [rsp+0x10],xmm2
  4248f4:	jne    424954 <__ctype_b_loc@plt+0x22684>
  4248f6:	mov    rbp,QWORD PTR [rax]
  4248f9:	add    rbp,0x18
  4248fd:	mov    rdi,rbp
  424900:	lea    rsi,[rsp+0x50]
  424905:	call   4020b0 <strtod@plt>
  42490a:	mov    rax,QWORD PTR [rsp+0x50]
  42490f:	cmp    rax,rbp
  424912:	je     42494f <__ctype_b_loc@plt+0x2267f>
  424914:	mov    dl,BYTE PTR [rax]
  424916:	mov    ecx,edx
  424918:	or     cl,0x20
  42491b:	cmp    cl,0x78
  42491e:	jne    424939 <__ctype_b_loc@plt+0x22669>
  424920:	mov    edx,0x10
  424925:	mov    rdi,rbp
  424928:	lea    rsi,[rsp+0x50]
  42492d:	call   402250 <strtoul@plt>
  424932:	mov    rax,QWORD PTR [rsp+0x50]
  424937:	mov    dl,BYTE PTR [rax]
  424939:	test   dl,dl
  42493b:	je     424965 <__ctype_b_loc@plt+0x22695>
  42493d:	mov    rcx,QWORD PTR [rsp+0x48]
  424942:	mov    rcx,QWORD PTR [rcx]
  424945:	movzx  edx,dl
  424948:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  42494d:	jne    42499f <__ctype_b_loc@plt+0x226cf>
  42494f:	mov    rbp,QWORD PTR [rsp+0x8]
  424954:	mov    rdi,rbp
  424957:	mov    esi,ebx
  424959:	lea    rdx,[rip+0x6541]        # 42aea1 <__ctype_b_loc@plt+0x28bd1>
  424960:	call   410850 <__ctype_b_loc@plt+0xe580>
  424965:	vmovsd xmm2,QWORD PTR [rsp+0x10]
  42496b:	vmovsd xmm0,QWORD PTR [rip+0x63f5]        # 42ad68 <__ctype_b_loc@plt+0x28a98>
  424973:	vmovapd xmm1,xmm0
  424977:	vsubsd xmm0,xmm2,xmm0
  42497b:	vcvttsd2si rax,xmm0
  424980:	movabs rcx,0x8000000000000000
  42498a:	xor    rax,rcx
  42498d:	vcvttsd2si rdx,xmm2
  424992:	vucomisd xmm2,xmm1
  424996:	cmovae rdx,rax
  42499a:	jmp    424b55 <__ctype_b_loc@plt+0x22885>
  42499f:	add    rax,0x1
  4249a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4249ad:	nop    DWORD PTR [rax]
  4249b0:	movzx  edx,BYTE PTR [rax]
  4249b3:	add    rax,0x1
  4249b7:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  4249bc:	jne    4249b0 <__ctype_b_loc@plt+0x226e0>
  4249be:	test   dl,dl
  4249c0:	mov    rbp,QWORD PTR [rsp+0x8]
  4249c5:	vmovsd xmm2,QWORD PTR [rsp+0x10]
  4249cb:	jne    424954 <__ctype_b_loc@plt+0x22684>
  4249cd:	jmp    42496b <__ctype_b_loc@plt+0x2269b>
  4249cf:	mov    rbp,QWORD PTR [rsp+0x8]
  4249d4:	mov    rdi,rbp
  4249d7:	mov    esi,ebx
  4249d9:	lea    rdx,[rip+0x64c1]        # 42aea1 <__ctype_b_loc@plt+0x28bd1>
  4249e0:	call   410850 <__ctype_b_loc@plt+0xe580>
  4249e5:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  4249eb:	vcvttsd2si edx,xmm0
  4249ef:	xor    eax,eax
  4249f1:	lea    rbx,[rsp+0x80]
  4249f9:	mov    rdi,rbx
  4249fc:	lea    rsi,[rsp+0x30]
  424a01:	call   402270 <sprintf@plt>
  424a06:	jmp    424b6c <__ctype_b_loc@plt+0x2289c>
  424a0b:	mov    rbx,QWORD PTR [rsp+0x28]
  424a10:	cmp    eax,0xffffd8ed
  424a15:	je     42503e <__ctype_b_loc@plt+0x22d6e>
  424a1b:	mov    rdx,rax
  424a1e:	cmp    edx,0xffffd8ee
  424a24:	je     424f81 <__ctype_b_loc@plt+0x22cb1>
  424a2a:	cmp    edx,0xffffd8ef
  424a30:	jne    42500e <__ctype_b_loc@plt+0x22d3e>
  424a36:	mov    rbx,QWORD PTR [rbp+0x20]
  424a3a:	mov    eax,0xa0
  424a3f:	add    rbx,rax
  424a42:	jmp    42503e <__ctype_b_loc@plt+0x22d6e>
  424a47:	mov    rax,QWORD PTR [rbp+0x28]
  424a4b:	mov    rax,QWORD PTR [rax+0x8]
  424a4f:	mov    rax,QWORD PTR [rax]
  424a52:	mov    rax,QWORD PTR [rax+0x18]
  424a56:	mov    QWORD PTR [rbp+0x88],rax
  424a5d:	mov    DWORD PTR [rbp+0x90],0x5
  424a67:	mov    rax,QWORD PTR [rsp+0x20]
  424a6c:	jmp    424a9d <__ctype_b_loc@plt+0x227cd>
  424a6e:	mov    rax,QWORD PTR [rbp+0x28]
  424a72:	mov    rax,QWORD PTR [rax+0x8]
  424a76:	mov    rcx,QWORD PTR [rax]
  424a79:	mov    edx,0xffffd8ed
  424a7e:	sub    edx,esi
  424a80:	movzx  esi,BYTE PTR [rcx+0xb]
  424a84:	lea    rax,[rip+0x608d]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  424a8b:	cmp    edx,esi
  424a8d:	jg     424a9d <__ctype_b_loc@plt+0x227cd>
  424a8f:	movsxd rax,edx
  424a92:	shl    rax,0x4
  424a96:	add    rax,rcx
  424a99:	add    rax,0x18
  424a9d:	mov    ecx,DWORD PTR [rax+0x8]
  424aa0:	cmp    ecx,0x3
  424aa3:	je     424b50 <__ctype_b_loc@plt+0x22880>
  424aa9:	cmp    ecx,0x4
  424aac:	vmovsd QWORD PTR [rsp+0x10],xmm0
  424ab2:	jne    424b39 <__ctype_b_loc@plt+0x22869>
  424ab8:	mov    rbp,QWORD PTR [rax]
  424abb:	add    rbp,0x18
  424abf:	mov    rdi,rbp
  424ac2:	lea    rsi,[rsp+0x50]
  424ac7:	call   4020b0 <strtod@plt>
  424acc:	mov    rax,QWORD PTR [rsp+0x50]
  424ad1:	cmp    rax,rbp
  424ad4:	je     424b34 <__ctype_b_loc@plt+0x22864>
  424ad6:	mov    dl,BYTE PTR [rax]
  424ad8:	mov    ecx,edx
  424ada:	or     cl,0x20
  424add:	cmp    cl,0x78
  424ae0:	jne    424afb <__ctype_b_loc@plt+0x2282b>
  424ae2:	mov    edx,0x10
  424ae7:	mov    rdi,rbp
  424aea:	lea    rsi,[rsp+0x50]
  424aef:	call   402250 <strtoul@plt>
  424af4:	mov    rax,QWORD PTR [rsp+0x50]
  424af9:	mov    dl,BYTE PTR [rax]
  424afb:	test   dl,dl
  424afd:	je     424b4a <__ctype_b_loc@plt+0x2287a>
  424aff:	mov    rcx,QWORD PTR [rsp+0x48]
  424b04:	mov    rcx,QWORD PTR [rcx]
  424b07:	movzx  edx,dl
  424b0a:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  424b0f:	mov    rbp,QWORD PTR [rsp+0x8]
  424b14:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  424b1a:	je     424b39 <__ctype_b_loc@plt+0x22869>
  424b1c:	add    rax,0x1
  424b20:	movzx  edx,BYTE PTR [rax]
  424b23:	add    rax,0x1
  424b27:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  424b2c:	jne    424b20 <__ctype_b_loc@plt+0x22850>
  424b2e:	test   dl,dl
  424b30:	jne    424b39 <__ctype_b_loc@plt+0x22869>
  424b32:	jmp    424b50 <__ctype_b_loc@plt+0x22880>
  424b34:	mov    rbp,QWORD PTR [rsp+0x8]
  424b39:	mov    rdi,rbp
  424b3c:	mov    esi,ebx
  424b3e:	lea    rdx,[rip+0x635c]        # 42aea1 <__ctype_b_loc@plt+0x28bd1>
  424b45:	call   410850 <__ctype_b_loc@plt+0xe580>
  424b4a:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  424b50:	vcvttsd2si rdx,xmm0
  424b55:	xor    eax,eax
  424b57:	lea    rbx,[rsp+0x80]
  424b5f:	mov    rdi,rbx
  424b62:	lea    rsi,[rsp+0x30]
  424b67:	call   402270 <sprintf@plt>
  424b6c:	mov    rdi,rbx
  424b6f:	call   4020e0 <strlen@plt>
  424b74:	test   rax,rax
  424b77:	je     424bbc <__ctype_b_loc@plt+0x228ec>
  424b79:	mov    rbp,rax
  424b7c:	xor    ebx,ebx
  424b7e:	xchg   ax,ax
  424b80:	mov    rax,QWORD PTR [rsp+0x280]
  424b88:	cmp    rax,r12
  424b8b:	jb     424b9d <__ctype_b_loc@plt+0x228cd>
  424b8d:	mov    rdi,r14
  424b90:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  424b95:	mov    rax,QWORD PTR [rsp+0x280]
  424b9d:	movzx  ecx,BYTE PTR [rsp+rbx*1+0x80]
  424ba5:	lea    rdx,[rax+0x1]
  424ba9:	mov    QWORD PTR [rsp+0x280],rdx
  424bb1:	mov    BYTE PTR [rax],cl
  424bb3:	add    rbx,0x1
  424bb7:	cmp    rbp,rbx
  424bba:	jne    424b80 <__ctype_b_loc@plt+0x228b0>
  424bbc:	mov    eax,DWORD PTR [rsp+0x4]
  424bc0:	mov    QWORD PTR [rsp+0x18],rax
  424bc5:	mov    rbp,QWORD PTR [rsp+0x8]
  424bca:	mov    rbx,r13
  424bcd:	cmp    r15,rbx
  424bd0:	jb     423f80 <__ctype_b_loc@plt+0x21cb0>
  424bd6:	jmp    425331 <__ctype_b_loc@plt+0x23061>
  424bdb:	mov    rax,QWORD PTR [rbp+0x28]
  424bdf:	mov    rax,QWORD PTR [rax+0x8]
  424be3:	mov    rax,QWORD PTR [rax]
  424be6:	mov    rax,QWORD PTR [rax+0x18]
  424bea:	mov    QWORD PTR [rbp+0x88],rax
  424bf1:	mov    DWORD PTR [rbp+0x90],0x5
  424bfb:	mov    rbx,QWORD PTR [rsp+0x20]
  424c00:	jmp    424c33 <__ctype_b_loc@plt+0x22963>
  424c02:	mov    rax,QWORD PTR [rbp+0x28]
  424c06:	mov    rax,QWORD PTR [rax+0x8]
  424c0a:	mov    rax,QWORD PTR [rax]
  424c0d:	mov    ecx,0xffffd8ed
  424c12:	sub    ecx,r12d
  424c15:	movzx  edx,BYTE PTR [rax+0xb]
  424c19:	lea    rbx,[rip+0x5ef8]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  424c20:	cmp    ecx,edx
  424c22:	jg     424c33 <__ctype_b_loc@plt+0x22963>
  424c24:	movsxd rcx,ecx
  424c27:	shl    rcx,0x4
  424c2b:	lea    rbx,[rax+rcx*1]
  424c2f:	add    rbx,0x18
  424c33:	mov    eax,DWORD PTR [rbx+0x8]
  424c36:	cmp    eax,0x4
  424c39:	je     424ccf <__ctype_b_loc@plt+0x229ff>
  424c3f:	cmp    eax,0x3
  424c42:	jne    424cef <__ctype_b_loc@plt+0x22a1f>
  424c48:	vmovsd xmm0,QWORD PTR [rbx]
  424c4c:	mov    al,0x1
  424c4e:	lea    r12,[rsp+0x50]
  424c53:	mov    rdi,r12
  424c56:	lea    rsi,[rip+0x61c4]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  424c5d:	call   402270 <sprintf@plt>
  424c62:	mov    rdi,r12
  424c65:	call   4020e0 <strlen@plt>
  424c6a:	mov    rdi,rbp
  424c6d:	mov    rsi,r12
  424c70:	mov    rdx,rax
  424c73:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  424c78:	mov    QWORD PTR [rbx],rax
  424c7b:	mov    DWORD PTR [rbx+0x8],0x4
  424c82:	mov    rax,QWORD PTR [rbp+0x20]
  424c86:	mov    rcx,QWORD PTR [rax+0x78]
  424c8a:	cmp    rcx,QWORD PTR [rax+0x70]
  424c8e:	mov    rbx,r14
  424c91:	jb     424c9b <__ctype_b_loc@plt+0x229cb>
  424c93:	mov    rdi,rbp
  424c96:	call   408070 <__ctype_b_loc@plt+0x5da0>
  424c9b:	mov    rax,QWORD PTR [rsp+0x18]
  424ca0:	test   eax,eax
  424ca2:	lea    r14,[rsp+0x280]
  424caa:	mov    r13,rbx
  424cad:	js     424da6 <__ctype_b_loc@plt+0x22ad6>
  424cb3:	movsxd rbx,eax
  424cb6:	shl    rbx,0x4
  424cba:	add    rbx,QWORD PTR [rbp+0x18]
  424cbe:	cmp    rbx,QWORD PTR [rbp+0x10]
  424cc2:	lea    rax,[rip+0x5e4f]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  424cc9:	cmovae rbx,rax
  424ccd:	jmp    424cda <__ctype_b_loc@plt+0x22a0a>
  424ccf:	mov    r13,r14
  424cd2:	lea    r14,[rsp+0x280]
  424cda:	lea    r12,[rsp+0x2298]
  424ce2:	mov    rbp,QWORD PTR [rbx]
  424ce5:	mov    rbx,QWORD PTR [rbp+0x10]
  424ce9:	add    rbp,0x18
  424ced:	jmp    424d18 <__ctype_b_loc@plt+0x22a48>
  424cef:	mov    rdi,rbp
  424cf2:	mov    esi,r13d
  424cf5:	lea    rdx,[rip+0x656d]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  424cfc:	call   410850 <__ctype_b_loc@plt+0xe580>
  424d01:	xor    ebp,ebp
  424d03:	xor    ebx,ebx
  424d05:	mov    r13,r14
  424d08:	lea    r14,[rsp+0x280]
  424d10:	lea    r12,[rsp+0x2298]
  424d18:	mov    esi,0x2e
  424d1d:	lea    rdi,[rsp+0x30]
  424d22:	call   4020f0 <strchr@plt>
  424d27:	cmp    rbx,0x64
  424d2b:	jb     424d67 <__ctype_b_loc@plt+0x22a97>
  424d2d:	test   rax,rax
  424d30:	jne    424d67 <__ctype_b_loc@plt+0x22a97>
  424d32:	mov    rsi,QWORD PTR [rsp+0x18]
  424d37:	test   esi,esi
  424d39:	js     424d81 <__ctype_b_loc@plt+0x22ab1>
  424d3b:	movsxd rax,esi
  424d3e:	shl    rax,0x4
  424d42:	mov    rbp,QWORD PTR [rsp+0x8]
  424d47:	add    rax,QWORD PTR [rbp+0x18]
  424d4b:	cmp    rax,QWORD PTR [rbp+0x10]
  424d4f:	lea    rcx,[rip+0x5dc2]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  424d56:	cmovae rax,rcx
  424d5a:	mov    rbx,r13
  424d5d:	mov    r13d,DWORD PTR [rsp+0x4]
  424d62:	jmp    424f5f <__ctype_b_loc@plt+0x22c8f>
  424d67:	xor    eax,eax
  424d69:	lea    rdi,[rsp+0x80]
  424d71:	lea    rsi,[rsp+0x30]
  424d76:	mov    rdx,rbp
  424d79:	mov    rbx,rdi
  424d7c:	jmp    424b67 <__ctype_b_loc@plt+0x22897>
  424d81:	cmp    esi,0xffffd8f0
  424d87:	mov    rbp,QWORD PTR [rsp+0x8]
  424d8c:	mov    rbx,r13
  424d8f:	jl     424dc7 <__ctype_b_loc@plt+0x22af7>
  424d91:	mov    r13d,DWORD PTR [rsp+0x4]
  424d96:	movsxd rax,r13d
  424d99:	shl    rax,0x4
  424d9d:	add    rax,QWORD PTR [rbp+0x10]
  424da1:	jmp    424f5f <__ctype_b_loc@plt+0x22c8f>
  424da6:	cmp    eax,0xffffd8f0
  424dab:	lea    r12,[rsp+0x2298]
  424db3:	jl     424e06 <__ctype_b_loc@plt+0x22b36>
  424db5:	movsxd rbx,DWORD PTR [rsp+0x4]
  424dba:	shl    rbx,0x4
  424dbe:	add    rbx,QWORD PTR [rbp+0x10]
  424dc2:	jmp    424ce2 <__ctype_b_loc@plt+0x22a12>
  424dc7:	mov    rax,QWORD PTR [rsp+0x28]
  424dcc:	cmp    esi,0xffffd8ed
  424dd2:	mov    r13d,DWORD PTR [rsp+0x4]
  424dd7:	je     424f5f <__ctype_b_loc@plt+0x22c8f>
  424ddd:	cmp    esi,0xffffd8ee
  424de3:	je     424f09 <__ctype_b_loc@plt+0x22c39>
  424de9:	cmp    esi,0xffffd8ef
  424def:	jne    424f30 <__ctype_b_loc@plt+0x22c60>
  424df5:	mov    rax,QWORD PTR [rbp+0x20]
  424df9:	mov    ecx,0xa0
  424dfe:	add    rax,rcx
  424e01:	jmp    424f5f <__ctype_b_loc@plt+0x22c8f>
  424e06:	mov    rbx,QWORD PTR [rsp+0x28]
  424e0b:	cmp    eax,0xffffd8ed
  424e10:	je     424ce2 <__ctype_b_loc@plt+0x22a12>
  424e16:	mov    rdx,QWORD PTR [rsp+0x18]
  424e1b:	cmp    edx,0xffffd8ee
  424e21:	je     424fab <__ctype_b_loc@plt+0x22cdb>
  424e27:	cmp    edx,0xffffd8ef
  424e2d:	jne    424fd5 <__ctype_b_loc@plt+0x22d05>
  424e33:	mov    rbx,QWORD PTR [rbp+0x20]
  424e37:	mov    eax,0xa0
  424e3c:	add    rbx,rax
  424e3f:	jmp    424ce2 <__ctype_b_loc@plt+0x22a12>
  424e44:	mov    rax,QWORD PTR [rbp+0x28]
  424e48:	mov    rax,QWORD PTR [rax+0x8]
  424e4c:	mov    rax,QWORD PTR [rax]
  424e4f:	mov    rax,QWORD PTR [rax+0x18]
  424e53:	mov    QWORD PTR [rbp+0x88],rax
  424e5a:	mov    DWORD PTR [rbp+0x90],0x5
  424e64:	mov    rbx,QWORD PTR [rsp+0x20]
  424e69:	jmp    4244cd <__ctype_b_loc@plt+0x221fd>
  424e6e:	mov    rax,QWORD PTR [rbp+0x28]
  424e72:	mov    rax,QWORD PTR [rax+0x8]
  424e76:	mov    rax,QWORD PTR [rax]
  424e79:	mov    ecx,0xffffd8ed
  424e7e:	sub    ecx,edx
  424e80:	movzx  edx,BYTE PTR [rax+0xb]
  424e84:	lea    rbx,[rip+0x5c8d]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  424e8b:	cmp    ecx,edx
  424e8d:	jg     4244cd <__ctype_b_loc@plt+0x221fd>
  424e93:	movsxd rcx,ecx
  424e96:	shl    rcx,0x4
  424e9a:	lea    rbx,[rax+rcx*1]
  424e9e:	add    rbx,0x18
  424ea2:	jmp    4244cd <__ctype_b_loc@plt+0x221fd>
  424ea7:	mov    rax,QWORD PTR [rbp+0x28]
  424eab:	mov    rax,QWORD PTR [rax+0x8]
  424eaf:	mov    rax,QWORD PTR [rax]
  424eb2:	mov    rax,QWORD PTR [rax+0x18]
  424eb6:	mov    QWORD PTR [rbp+0x88],rax
  424ebd:	mov    DWORD PTR [rbp+0x90],0x5
  424ec7:	mov    rax,QWORD PTR [rsp+0x20]
  424ecc:	jmp    424593 <__ctype_b_loc@plt+0x222c3>
  424ed1:	mov    rax,QWORD PTR [rbp+0x28]
  424ed5:	mov    rax,QWORD PTR [rax+0x8]
  424ed9:	mov    rcx,QWORD PTR [rax]
  424edc:	mov    edx,0xffffd8ed
  424ee1:	sub    edx,esi
  424ee3:	movzx  esi,BYTE PTR [rcx+0xb]
  424ee7:	lea    rax,[rip+0x5c2a]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  424eee:	cmp    edx,esi
  424ef0:	jg     424593 <__ctype_b_loc@plt+0x222c3>
  424ef6:	movsxd rax,edx
  424ef9:	shl    rax,0x4
  424efd:	add    rax,rcx
  424f00:	add    rax,0x18
  424f04:	jmp    424593 <__ctype_b_loc@plt+0x222c3>
  424f09:	mov    rax,QWORD PTR [rbp+0x28]
  424f0d:	mov    rax,QWORD PTR [rax+0x8]
  424f11:	mov    rax,QWORD PTR [rax]
  424f14:	mov    rax,QWORD PTR [rax+0x18]
  424f18:	mov    QWORD PTR [rbp+0x88],rax
  424f1f:	mov    DWORD PTR [rbp+0x90],0x5
  424f29:	mov    rax,QWORD PTR [rsp+0x20]
  424f2e:	jmp    424f5f <__ctype_b_loc@plt+0x22c8f>
  424f30:	mov    rax,QWORD PTR [rbp+0x28]
  424f34:	mov    rax,QWORD PTR [rax+0x8]
  424f38:	mov    rcx,QWORD PTR [rax]
  424f3b:	mov    edx,0xffffd8ed
  424f40:	sub    edx,esi
  424f42:	movzx  esi,BYTE PTR [rcx+0xb]
  424f46:	lea    rax,[rip+0x5bcb]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  424f4d:	cmp    edx,esi
  424f4f:	jg     424f5f <__ctype_b_loc@plt+0x22c8f>
  424f51:	movsxd rax,edx
  424f54:	shl    rax,0x4
  424f58:	add    rax,rcx
  424f5b:	add    rax,0x18
  424f5f:	mov    rcx,QWORD PTR [rbp+0x10]
  424f63:	mov    rdx,QWORD PTR [rax]
  424f66:	mov    QWORD PTR [rcx],rdx
  424f69:	mov    eax,DWORD PTR [rax+0x8]
  424f6c:	mov    DWORD PTR [rcx+0x8],eax
  424f6f:	add    QWORD PTR [rbp+0x10],0x10
  424f74:	mov    rdi,r14
  424f77:	call   41f5e0 <__ctype_b_loc@plt+0x1d310>
  424f7c:	jmp    425320 <__ctype_b_loc@plt+0x23050>
  424f81:	mov    rax,QWORD PTR [rbp+0x28]
  424f85:	mov    rax,QWORD PTR [rax+0x8]
  424f89:	mov    rax,QWORD PTR [rax]
  424f8c:	mov    rax,QWORD PTR [rax+0x18]
  424f90:	mov    QWORD PTR [rbp+0x88],rax
  424f97:	mov    DWORD PTR [rbp+0x90],0x5
  424fa1:	mov    rbx,QWORD PTR [rsp+0x20]
  424fa6:	jmp    42503e <__ctype_b_loc@plt+0x22d6e>
  424fab:	mov    rax,QWORD PTR [rbp+0x28]
  424faf:	mov    rax,QWORD PTR [rax+0x8]
  424fb3:	mov    rax,QWORD PTR [rax]
  424fb6:	mov    rax,QWORD PTR [rax+0x18]
  424fba:	mov    QWORD PTR [rbp+0x88],rax
  424fc1:	mov    DWORD PTR [rbp+0x90],0x5
  424fcb:	mov    rbx,QWORD PTR [rsp+0x20]
  424fd0:	jmp    424ce2 <__ctype_b_loc@plt+0x22a12>
  424fd5:	mov    rax,QWORD PTR [rbp+0x28]
  424fd9:	mov    rax,QWORD PTR [rax+0x8]
  424fdd:	mov    rax,QWORD PTR [rax]
  424fe0:	mov    ecx,0xffffd8ed
  424fe5:	sub    ecx,edx
  424fe7:	movzx  edx,BYTE PTR [rax+0xb]
  424feb:	lea    rbx,[rip+0x5b26]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  424ff2:	cmp    ecx,edx
  424ff4:	jg     424ce2 <__ctype_b_loc@plt+0x22a12>
  424ffa:	movsxd rcx,ecx
  424ffd:	shl    rcx,0x4
  425001:	lea    rbx,[rax+rcx*1]
  425005:	add    rbx,0x18
  425009:	jmp    424ce2 <__ctype_b_loc@plt+0x22a12>
  42500e:	mov    rax,QWORD PTR [rbp+0x28]
  425012:	mov    rax,QWORD PTR [rax+0x8]
  425016:	mov    rax,QWORD PTR [rax]
  425019:	mov    ecx,0xffffd8ed
  42501e:	sub    ecx,edx
  425020:	movzx  edx,BYTE PTR [rax+0xb]
  425024:	lea    rbx,[rip+0x5aed]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  42502b:	cmp    ecx,edx
  42502d:	jg     42503e <__ctype_b_loc@plt+0x22d6e>
  42502f:	movsxd rcx,ecx
  425032:	shl    rcx,0x4
  425036:	lea    rbx,[rax+rcx*1]
  42503a:	add    rbx,0x18
  42503e:	mov    r13,QWORD PTR [rbx]
  425041:	mov    r14,QWORD PTR [r13+0x10]
  425045:	add    r13,0x18
  425049:	mov    rax,QWORD PTR [rsp+0x280]
  425051:	lea    rcx,[rsp+0x2298]
  425059:	cmp    rax,rcx
  42505c:	jb     425073 <__ctype_b_loc@plt+0x22da3>
  42505e:	lea    rdi,[rsp+0x280]
  425066:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  42506b:	mov    rax,QWORD PTR [rsp+0x280]
  425073:	lea    rcx,[rax+0x1]
  425077:	mov    QWORD PTR [rsp+0x280],rcx
  42507f:	mov    BYTE PTR [rax],0x22
  425082:	test   r14,r14
  425085:	je     4252cd <__ctype_b_loc@plt+0x22ffd>
  42508b:	xor    ebx,ebx
  42508d:	nop    DWORD PTR [rax]
  425090:	movzx  eax,BYTE PTR [r13+rbx*1+0x0]
  425096:	movsx  ecx,al
  425099:	cmp    ecx,0x22
  42509c:	ja     425190 <__ctype_b_loc@plt+0x22ec0>
  4250a2:	lea    rdx,[rip+0x595b]        # 42aa04 <__ctype_b_loc@plt+0x28734>
  4250a9:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4250ad:	add    rcx,rdx
  4250b0:	jmp    rcx
  4250b2:	mov    rax,QWORD PTR [rsp+0x280]
  4250ba:	lea    r12,[rsp+0x2298]
  4250c2:	cmp    rax,r12
  4250c5:	jb     4250dc <__ctype_b_loc@plt+0x22e0c>
  4250c7:	lea    rdi,[rsp+0x280]
  4250cf:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  4250d4:	mov    rax,QWORD PTR [rsp+0x280]
  4250dc:	lea    rcx,[rax+0x1]
  4250e0:	mov    QWORD PTR [rsp+0x280],rcx
  4250e8:	mov    BYTE PTR [rax],0x5c
  4250eb:	mov    rax,QWORD PTR [rsp+0x280]
  4250f3:	cmp    rax,r12
  4250f6:	jb     42510d <__ctype_b_loc@plt+0x22e3d>
  4250f8:	lea    rdi,[rsp+0x280]
  425100:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  425105:	mov    rax,QWORD PTR [rsp+0x280]
  42510d:	lea    rcx,[rax+0x1]
  425111:	mov    QWORD PTR [rsp+0x280],rcx
  425119:	mov    BYTE PTR [rax],0x30
  42511c:	mov    rax,QWORD PTR [rsp+0x280]
  425124:	cmp    rax,r12
  425127:	jb     42513e <__ctype_b_loc@plt+0x22e6e>
  425129:	lea    rdi,[rsp+0x280]
  425131:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  425136:	mov    rax,QWORD PTR [rsp+0x280]
  42513e:	lea    rcx,[rax+0x1]
  425142:	mov    QWORD PTR [rsp+0x280],rcx
  42514a:	mov    BYTE PTR [rax],0x30
  42514d:	mov    rax,QWORD PTR [rsp+0x280]
  425155:	cmp    rax,r12
  425158:	jb     42516f <__ctype_b_loc@plt+0x22e9f>
  42515a:	lea    rdi,[rsp+0x280]
  425162:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  425167:	mov    rax,QWORD PTR [rsp+0x280]
  42516f:	lea    rcx,[rax+0x1]
  425173:	mov    QWORD PTR [rsp+0x280],rcx
  42517b:	mov    BYTE PTR [rax],0x30
  42517e:	jmp    4252c0 <__ctype_b_loc@plt+0x22ff0>
  425183:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42518d:	nop    DWORD PTR [rax]
  425190:	cmp    ecx,0x5c
  425193:	jne    425209 <__ctype_b_loc@plt+0x22f39>
  425195:	mov    rax,QWORD PTR [rsp+0x280]
  42519d:	lea    rbp,[rsp+0x2298]
  4251a5:	cmp    rax,rbp
  4251a8:	jb     4251bf <__ctype_b_loc@plt+0x22eef>
  4251aa:	lea    rdi,[rsp+0x280]
  4251b2:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  4251b7:	mov    rax,QWORD PTR [rsp+0x280]
  4251bf:	lea    rcx,[rax+0x1]
  4251c3:	mov    QWORD PTR [rsp+0x280],rcx
  4251cb:	mov    BYTE PTR [rax],0x5c
  4251ce:	mov    rax,QWORD PTR [rsp+0x280]
  4251d6:	cmp    rax,rbp
  4251d9:	jb     4251f0 <__ctype_b_loc@plt+0x22f20>
  4251db:	lea    rdi,[rsp+0x280]
  4251e3:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  4251e8:	mov    rax,QWORD PTR [rsp+0x280]
  4251f0:	movzx  ecx,BYTE PTR [r13+rbx*1+0x0]
  4251f6:	lea    rdx,[rax+0x1]
  4251fa:	mov    QWORD PTR [rsp+0x280],rdx
  425202:	mov    BYTE PTR [rax],cl
  425204:	jmp    4252c0 <__ctype_b_loc@plt+0x22ff0>
  425209:	mov    rcx,QWORD PTR [rsp+0x280]
  425211:	lea    rdx,[rsp+0x2298]
  425219:	cmp    rcx,rdx
  42521c:	jb     425239 <__ctype_b_loc@plt+0x22f69>
  42521e:	lea    rdi,[rsp+0x280]
  425226:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  42522b:	movzx  eax,BYTE PTR [r13+rbx*1+0x0]
  425231:	mov    rcx,QWORD PTR [rsp+0x280]
  425239:	lea    rdx,[rcx+0x1]
  42523d:	mov    QWORD PTR [rsp+0x280],rdx
  425245:	mov    BYTE PTR [rcx],al
  425247:	jmp    4252c0 <__ctype_b_loc@plt+0x22ff0>
  425249:	mov    rax,QWORD PTR [rsp+0x280]
  425251:	lea    rbp,[rsp+0x2298]
  425259:	cmp    rax,rbp
  42525c:	jb     425273 <__ctype_b_loc@plt+0x22fa3>
  42525e:	lea    rdi,[rsp+0x280]
  425266:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  42526b:	mov    rax,QWORD PTR [rsp+0x280]
  425273:	lea    rcx,[rax+0x1]
  425277:	mov    QWORD PTR [rsp+0x280],rcx
  42527f:	mov    BYTE PTR [rax],0x5c
  425282:	mov    rax,QWORD PTR [rsp+0x280]
  42528a:	cmp    rax,rbp
  42528d:	jb     4252a4 <__ctype_b_loc@plt+0x22fd4>
  42528f:	lea    rdi,[rsp+0x280]
  425297:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  42529c:	mov    rax,QWORD PTR [rsp+0x280]
  4252a4:	lea    rcx,[rax+0x1]
  4252a8:	mov    QWORD PTR [rsp+0x280],rcx
  4252b0:	mov    BYTE PTR [rax],0x72
  4252b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4252bd:	nop    DWORD PTR [rax]
  4252c0:	add    rbx,0x1
  4252c4:	cmp    r14,rbx
  4252c7:	jne    425090 <__ctype_b_loc@plt+0x22dc0>
  4252cd:	mov    rax,QWORD PTR [rsp+0x280]
  4252d5:	lea    rcx,[rsp+0x2298]
  4252dd:	cmp    rax,rcx
  4252e0:	lea    r14,[rsp+0x280]
  4252e8:	jb     4252fa <__ctype_b_loc@plt+0x2302a>
  4252ea:	mov    rdi,r14
  4252ed:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  4252f2:	mov    rax,QWORD PTR [rsp+0x280]
  4252fa:	lea    rcx,[rax+0x1]
  4252fe:	mov    QWORD PTR [rsp+0x280],rcx
  425306:	mov    BYTE PTR [rax],0x22
  425309:	mov    rbp,QWORD PTR [rsp+0x8]
  42530e:	lea    r12,[rsp+0x2298]
  425316:	mov    r13d,DWORD PTR [rsp+0x4]
  42531b:	mov    rbx,QWORD PTR [rsp+0x78]
  425320:	mov    eax,r13d
  425323:	mov    QWORD PTR [rsp+0x18],rax
  425328:	cmp    r15,rbx
  42532b:	jb     423f80 <__ctype_b_loc@plt+0x21cb0>
  425331:	lea    rdi,[rsp+0x280]
  425339:	call   41f4d0 <__ctype_b_loc@plt+0x1d200>
  42533e:	mov    ebx,0x1
  425343:	mov    eax,ebx
  425345:	add    rsp,0x2298
  42534c:	pop    rbx
  42534d:	pop    r12
  42534f:	pop    r13
  425351:	pop    r14
  425353:	pop    r15
  425355:	pop    rbp
  425356:	ret    
  425357:	lea    rsi,[rip+0x65d0]        # 42b92e <__ctype_b_loc@plt+0x2965e>
  42535e:	xor    ebx,ebx
  425360:	xor    eax,eax
  425362:	mov    rdi,rbp
  425365:	call   410070 <__ctype_b_loc@plt+0xdda0>
  42536a:	jmp    425343 <__ctype_b_loc@plt+0x23073>
  42536c:	nop    DWORD PTR [rax+0x0]
  425370:	push   r15
  425372:	push   r14
  425374:	push   r12
  425376:	push   rbx
  425377:	sub    rsp,0x78
  42537b:	mov    r12,rdi
  42537e:	mov    rdx,QWORD PTR [rdi+0x10]
  425382:	mov    rax,QWORD PTR [rdi+0x18]
  425386:	cmp    rax,rdx
  425389:	lea    r15,[rip+0x5788]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  425390:	mov    rbx,r15
  425393:	cmovb  rbx,rax
  425397:	mov    ecx,DWORD PTR [rbx+0x8]
  42539a:	cmp    ecx,0x4
  42539d:	je     425447 <__ctype_b_loc@plt+0x23177>
  4253a3:	cmp    ecx,0x3
  4253a6:	jne    4253f9 <__ctype_b_loc@plt+0x23129>
  4253a8:	vmovsd xmm0,QWORD PTR [rbx]
  4253ac:	lea    rsi,[rip+0x5a6e]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  4253b3:	mov    r14,rsp
  4253b6:	mov    al,0x1
  4253b8:	mov    rdi,r14
  4253bb:	call   402270 <sprintf@plt>
  4253c0:	mov    rdi,r14
  4253c3:	call   4020e0 <strlen@plt>
  4253c8:	mov    rdi,r12
  4253cb:	mov    rsi,r14
  4253ce:	mov    rdx,rax
  4253d1:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  4253d6:	mov    QWORD PTR [rbx],rax
  4253d9:	mov    DWORD PTR [rbx+0x8],0x4
  4253e0:	mov    rax,QWORD PTR [r12+0x20]
  4253e5:	mov    rcx,QWORD PTR [rax+0x78]
  4253e9:	cmp    rcx,QWORD PTR [rax+0x70]
  4253ed:	jb     425447 <__ctype_b_loc@plt+0x23177>
  4253ef:	mov    rdi,r12
  4253f2:	call   408070 <__ctype_b_loc@plt+0x5da0>
  4253f7:	jmp    425447 <__ctype_b_loc@plt+0x23177>
  4253f9:	lea    rcx,[rip+0x5dd6]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  425400:	cmp    rax,r15
  425403:	je     42541f <__ctype_b_loc@plt+0x2314f>
  425405:	cmp    rax,rdx
  425408:	jae    42541f <__ctype_b_loc@plt+0x2314f>
  42540a:	movsxd rax,DWORD PTR [rax+0x8]
  42540e:	cmp    rax,0xffffffffffffffff
  425412:	je     42541f <__ctype_b_loc@plt+0x2314f>
  425414:	lea    rcx,[rip+0xb4c5]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  42541b:	mov    rcx,QWORD PTR [rcx+rax*8]
  42541f:	lea    rsi,[rip+0x5d9c]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  425426:	lea    rdx,[rip+0x5e3c]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  42542d:	xor    eax,eax
  42542f:	mov    rdi,r12
  425432:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  425437:	mov    esi,0x1
  42543c:	mov    rdi,r12
  42543f:	mov    rdx,rax
  425442:	call   410240 <__ctype_b_loc@plt+0xdf70>
  425447:	mov    rsi,QWORD PTR [r12+0x10]
  42544c:	mov    rax,QWORD PTR [r12+0x18]
  425451:	lea    rdx,[rax+0x10]
  425455:	cmp    rdx,rsi
  425458:	mov    rbx,r15
  42545b:	cmovb  rbx,rdx
  42545f:	mov    ecx,DWORD PTR [rbx+0x8]
  425462:	cmp    ecx,0x4
  425465:	je     425596 <__ctype_b_loc@plt+0x232c6>
  42546b:	cmp    ecx,0x3
  42546e:	jne    4254c8 <__ctype_b_loc@plt+0x231f8>
  425470:	vmovsd xmm0,QWORD PTR [rbx]
  425474:	lea    rsi,[rip+0x59a6]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  42547b:	mov    r14,rsp
  42547e:	mov    al,0x1
  425480:	mov    rdi,r14
  425483:	call   402270 <sprintf@plt>
  425488:	mov    rdi,r14
  42548b:	call   4020e0 <strlen@plt>
  425490:	mov    rdi,r12
  425493:	mov    rsi,r14
  425496:	mov    rdx,rax
  425499:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  42549e:	mov    QWORD PTR [rbx],rax
  4254a1:	mov    DWORD PTR [rbx+0x8],0x4
  4254a8:	mov    rax,QWORD PTR [r12+0x20]
  4254ad:	mov    rcx,QWORD PTR [rax+0x78]
  4254b1:	cmp    rcx,QWORD PTR [rax+0x70]
  4254b5:	jb     425596 <__ctype_b_loc@plt+0x232c6>
  4254bb:	mov    rdi,r12
  4254be:	call   408070 <__ctype_b_loc@plt+0x5da0>
  4254c3:	jmp    425596 <__ctype_b_loc@plt+0x232c6>
  4254c8:	lea    rcx,[rip+0x5d07]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  4254cf:	cmp    rdx,rsi
  4254d2:	jae    4254ee <__ctype_b_loc@plt+0x2321e>
  4254d4:	cmp    rdx,r15
  4254d7:	je     4254ee <__ctype_b_loc@plt+0x2321e>
  4254d9:	movsxd rax,DWORD PTR [rax+0x18]
  4254dd:	cmp    rax,0xffffffffffffffff
  4254e1:	je     4254ee <__ctype_b_loc@plt+0x2321e>
  4254e3:	lea    rcx,[rip+0xb3f6]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  4254ea:	mov    rcx,QWORD PTR [rcx+rax*8]
  4254ee:	lea    rsi,[rip+0x5ccd]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  4254f5:	lea    rdx,[rip+0x5d6d]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  4254fc:	xor    eax,eax
  4254fe:	mov    rdi,r12
  425501:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  425506:	mov    r14,rax
  425509:	mov    rax,QWORD PTR [r12+0x28]
  42550e:	sub    rax,QWORD PTR [r12+0x50]
  425513:	jbe    42557d <__ctype_b_loc@plt+0x232ad>
  425515:	shr    rax,0x3
  425519:	imul   eax,eax,0xcccccccd
  42551f:	mov    DWORD PTR [rsp+0x74],eax
  425523:	lea    rsi,[rip+0x592d]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  42552a:	mov    rdx,rsp
  42552d:	mov    rdi,r12
  425530:	call   410310 <__ctype_b_loc@plt+0xe040>
  425535:	mov    rdi,QWORD PTR [rsp+0x10]
  42553a:	lea    rsi,[rip+0x5c0f]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  425541:	call   402180 <strcmp@plt>
  425546:	cmp    eax,0x1
  425549:	mov    edx,0x2
  42554e:	sbb    edx,0x0
  425551:	mov    rcx,QWORD PTR [rsp+0x8]
  425556:	test   rcx,rcx
  425559:	jne    425567 <__ctype_b_loc@plt+0x23297>
  42555b:	lea    rcx,[rip+0x5c13]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  425562:	mov    QWORD PTR [rsp+0x8],rcx
  425567:	lea    rsi,[rip+0x5c09]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  42556e:	xor    eax,eax
  425570:	mov    rdi,r12
  425573:	mov    r8,r14
  425576:	call   410070 <__ctype_b_loc@plt+0xdda0>
  42557b:	jmp    425596 <__ctype_b_loc@plt+0x232c6>
  42557d:	lea    rsi,[rip+0x5bb6]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  425584:	mov    edx,0x2
  425589:	xor    eax,eax
  42558b:	mov    rdi,r12
  42558e:	mov    rcx,r14
  425591:	call   410070 <__ctype_b_loc@plt+0xdda0>
  425596:	mov    rdx,QWORD PTR [r12+0x10]
  42559b:	mov    rax,QWORD PTR [r12+0x18]
  4255a0:	lea    rcx,[rax+0x20]
  4255a4:	cmp    rdx,rcx
  4255a7:	jae    425661 <__ctype_b_loc@plt+0x23391>
  4255ad:	lea    rdi,[rdx+0x10]
  4255b1:	cmp    rcx,rdi
  4255b4:	cmova  rdi,rcx
  4255b8:	mov    rsi,rdx
  4255bb:	not    rsi
  4255be:	add    rsi,rdi
  4255c1:	mov    edi,0x3
  4255c6:	sub    rdi,rdx
  4255c9:	lea    r8,[rax+rdi*1]
  4255cd:	add    r8,0x1c
  4255d1:	mov    ebx,r8d
  4255d4:	shr    ebx,0x4
  4255d7:	add    ebx,0x1
  4255da:	mov    rdi,rdx
  4255dd:	and    rbx,0x7
  4255e1:	je     425601 <__ctype_b_loc@plt+0x23331>
  4255e3:	neg    rbx
  4255e6:	mov    rdi,rdx
  4255e9:	nop    DWORD PTR [rax+0x0]
  4255f0:	mov    DWORD PTR [rdi+0x8],0x0
  4255f7:	add    rdi,0x10
  4255fb:	add    rbx,0x1
  4255ff:	jne    4255f0 <__ctype_b_loc@plt+0x23320>
  425601:	shr    rsi,0x4
  425605:	cmp    r8,0x70
  425609:	jb     425651 <__ctype_b_loc@plt+0x23381>
  42560b:	nop    DWORD PTR [rax+rax*1+0x0]
  425610:	mov    DWORD PTR [rdi+0x8],0x0
  425617:	mov    DWORD PTR [rdi+0x18],0x0
  42561e:	mov    DWORD PTR [rdi+0x28],0x0
  425625:	mov    DWORD PTR [rdi+0x38],0x0
  42562c:	mov    DWORD PTR [rdi+0x48],0x0
  425633:	mov    DWORD PTR [rdi+0x58],0x0
  42563a:	mov    DWORD PTR [rdi+0x68],0x0
  425641:	mov    DWORD PTR [rdi+0x78],0x0
  425648:	sub    rdi,0xffffffffffffff80
  42564c:	cmp    rdi,rcx
  42564f:	jb     425610 <__ctype_b_loc@plt+0x23340>
  425651:	shl    rsi,0x4
  425655:	add    rdx,rsi
  425658:	add    rdx,0x10
  42565c:	mov    QWORD PTR [r12+0x10],rdx
  425661:	mov    QWORD PTR [r12+0x10],rcx
  425666:	mov    QWORD PTR [rax+0x20],0x0
  42566e:	mov    DWORD PTR [rax+0x28],0x3
  425675:	add    QWORD PTR [r12+0x10],0x10
  42567b:	lea    rsi,[rip+0x27ce]        # 427e50 <__ctype_b_loc@plt+0x25b80>
  425682:	mov    edx,0x3
  425687:	mov    rdi,r12
  42568a:	call   40bb90 <__ctype_b_loc@plt+0x98c0>
  42568f:	mov    eax,0x1
  425694:	add    rsp,0x78
  425698:	pop    rbx
  425699:	pop    r12
  42569b:	pop    r14
  42569d:	pop    r15
  42569f:	ret    
  4256a0:	push   rbp
  4256a1:	push   r15
  4256a3:	push   r14
  4256a5:	push   r13
  4256a7:	push   r12
  4256a9:	push   rbx
  4256aa:	sub    rsp,0x2288
  4256b1:	mov    r12,rdi
  4256b4:	mov    rdx,QWORD PTR [rdi+0x10]
  4256b8:	mov    rax,QWORD PTR [rdi+0x18]
  4256bc:	cmp    rax,rdx
  4256bf:	lea    rbp,[rip+0x5452]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4256c6:	cmovb  rbp,rax
  4256ca:	mov    ecx,DWORD PTR [rbp+0x8]
  4256cd:	cmp    ecx,0x4
  4256d0:	je     425745 <__ctype_b_loc@plt+0x23475>
  4256d2:	cmp    ecx,0x3
  4256d5:	jne    425753 <__ctype_b_loc@plt+0x23483>
  4256d7:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  4256dc:	lea    rsi,[rip+0x573e]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  4256e3:	lea    rbx,[rsp+0x270]
  4256eb:	mov    al,0x1
  4256ed:	mov    rdi,rbx
  4256f0:	call   402270 <sprintf@plt>
  4256f5:	mov    rdi,rbx
  4256f8:	call   4020e0 <strlen@plt>
  4256fd:	mov    rdi,r12
  425700:	mov    rsi,rbx
  425703:	mov    rdx,rax
  425706:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  42570b:	mov    QWORD PTR [rbp+0x0],rax
  42570f:	mov    DWORD PTR [rbp+0x8],0x4
  425716:	mov    rax,QWORD PTR [r12+0x20]
  42571b:	mov    rcx,QWORD PTR [rax+0x78]
  42571f:	cmp    rcx,QWORD PTR [rax+0x70]
  425723:	jb     42572d <__ctype_b_loc@plt+0x2345d>
  425725:	mov    rdi,r12
  425728:	call   408070 <__ctype_b_loc@plt+0x5da0>
  42572d:	mov    rdx,QWORD PTR [r12+0x10]
  425732:	mov    rax,QWORD PTR [r12+0x18]
  425737:	cmp    rax,rdx
  42573a:	lea    rbp,[rip+0x53d7]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  425741:	cmovb  rbp,rax
  425745:	mov    r13,QWORD PTR [rbp+0x0]
  425749:	mov    r14,QWORD PTR [r13+0x10]
  42574d:	add    r13,0x18
  425751:	jmp    4257b8 <__ctype_b_loc@plt+0x234e8>
  425753:	lea    rcx,[rip+0x5a7c]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  42575a:	lea    rsi,[rip+0x53b7]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  425761:	cmp    rax,rsi
  425764:	je     425780 <__ctype_b_loc@plt+0x234b0>
  425766:	cmp    rax,rdx
  425769:	jae    425780 <__ctype_b_loc@plt+0x234b0>
  42576b:	movsxd rax,DWORD PTR [rax+0x8]
  42576f:	cmp    rax,0xffffffffffffffff
  425773:	je     425780 <__ctype_b_loc@plt+0x234b0>
  425775:	lea    rcx,[rip+0xb164]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  42577c:	mov    rcx,QWORD PTR [rcx+rax*8]
  425780:	lea    rsi,[rip+0x5a3b]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  425787:	lea    rdx,[rip+0x5adb]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  42578e:	xor    r13d,r13d
  425791:	xor    eax,eax
  425793:	mov    rdi,r12
  425796:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  42579b:	mov    esi,0x1
  4257a0:	mov    rdi,r12
  4257a3:	mov    rdx,rax
  4257a6:	call   410240 <__ctype_b_loc@plt+0xdf70>
  4257ab:	mov    rdx,QWORD PTR [r12+0x10]
  4257b0:	mov    rax,QWORD PTR [r12+0x18]
  4257b5:	xor    r14d,r14d
  4257b8:	lea    rsi,[rax+0x10]
  4257bc:	cmp    rsi,rdx
  4257bf:	lea    rbx,[rip+0x5352]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4257c6:	cmovb  rbx,rsi
  4257ca:	mov    ecx,DWORD PTR [rbx+0x8]
  4257cd:	cmp    ecx,0x4
  4257d0:	je     425847 <__ctype_b_loc@plt+0x23577>
  4257d2:	cmp    ecx,0x3
  4257d5:	jne    425853 <__ctype_b_loc@plt+0x23583>
  4257d7:	vmovsd xmm0,QWORD PTR [rbx]
  4257db:	lea    rsi,[rip+0x563f]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  4257e2:	lea    rbp,[rsp+0x270]
  4257ea:	mov    al,0x1
  4257ec:	mov    rdi,rbp
  4257ef:	call   402270 <sprintf@plt>
  4257f4:	mov    rdi,rbp
  4257f7:	call   4020e0 <strlen@plt>
  4257fc:	mov    rdi,r12
  4257ff:	mov    rsi,rbp
  425802:	mov    rdx,rax
  425805:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  42580a:	mov    QWORD PTR [rbx],rax
  42580d:	mov    DWORD PTR [rbx+0x8],0x4
  425814:	mov    rax,QWORD PTR [r12+0x20]
  425819:	mov    rcx,QWORD PTR [rax+0x78]
  42581d:	cmp    rcx,QWORD PTR [rax+0x70]
  425821:	jb     42582b <__ctype_b_loc@plt+0x2355b>
  425823:	mov    rdi,r12
  425826:	call   408070 <__ctype_b_loc@plt+0x5da0>
  42582b:	mov    rdx,QWORD PTR [r12+0x10]
  425830:	mov    rax,QWORD PTR [r12+0x18]
  425835:	lea    rbx,[rax+0x10]
  425839:	cmp    rbx,rdx
  42583c:	lea    rcx,[rip+0x52d5]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  425843:	cmovae rbx,rcx
  425847:	mov    rbx,QWORD PTR [rbx]
  42584a:	add    rbx,0x18
  42584e:	jmp    425945 <__ctype_b_loc@plt+0x23675>
  425853:	lea    rcx,[rip+0x597c]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  42585a:	cmp    rsi,rdx
  42585d:	jae    425880 <__ctype_b_loc@plt+0x235b0>
  42585f:	lea    rdx,[rip+0x52b2]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  425866:	cmp    rsi,rdx
  425869:	je     425880 <__ctype_b_loc@plt+0x235b0>
  42586b:	movsxd rax,DWORD PTR [rax+0x18]
  42586f:	cmp    rax,0xffffffffffffffff
  425873:	je     425880 <__ctype_b_loc@plt+0x235b0>
  425875:	lea    rcx,[rip+0xb064]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  42587c:	mov    rcx,QWORD PTR [rcx+rax*8]
  425880:	lea    rsi,[rip+0x593b]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  425887:	lea    rdx,[rip+0x59db]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  42588e:	xor    eax,eax
  425890:	mov    rdi,r12
  425893:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  425898:	mov    rbp,rax
  42589b:	mov    rax,QWORD PTR [r12+0x28]
  4258a0:	sub    rax,QWORD PTR [r12+0x50]
  4258a5:	jbe    425920 <__ctype_b_loc@plt+0x23650>
  4258a7:	shr    rax,0x3
  4258ab:	imul   eax,eax,0xcccccccd
  4258b1:	mov    DWORD PTR [rsp+0x2e4],eax
  4258b8:	lea    rsi,[rip+0x5598]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  4258bf:	lea    rdx,[rsp+0x270]
  4258c7:	mov    rdi,r12
  4258ca:	call   410310 <__ctype_b_loc@plt+0xe040>
  4258cf:	mov    rdi,QWORD PTR [rsp+0x280]
  4258d7:	lea    rsi,[rip+0x5872]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  4258de:	call   402180 <strcmp@plt>
  4258e3:	cmp    eax,0x1
  4258e6:	mov    edx,0x2
  4258eb:	sbb    edx,0x0
  4258ee:	mov    rcx,QWORD PTR [rsp+0x278]
  4258f6:	test   rcx,rcx
  4258f9:	jne    42590a <__ctype_b_loc@plt+0x2363a>
  4258fb:	lea    rcx,[rip+0x5873]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  425902:	mov    QWORD PTR [rsp+0x278],rcx
  42590a:	lea    rsi,[rip+0x5866]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  425911:	xor    eax,eax
  425913:	mov    rdi,r12
  425916:	mov    r8,rbp
  425919:	call   410070 <__ctype_b_loc@plt+0xdda0>
  42591e:	jmp    425939 <__ctype_b_loc@plt+0x23669>
  425920:	lea    rsi,[rip+0x5813]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  425927:	mov    edx,0x2
  42592c:	xor    eax,eax
  42592e:	mov    rdi,r12
  425931:	mov    rcx,rbp
  425934:	call   410070 <__ctype_b_loc@plt+0xdda0>
  425939:	mov    rdx,QWORD PTR [r12+0x10]
  42593e:	mov    rax,QWORD PTR [r12+0x18]
  425943:	xor    ebx,ebx
  425945:	lea    rcx,[rax+0x20]
  425949:	xor    ebp,ebp
  42594b:	cmp    rcx,rdx
  42594e:	jae    425969 <__ctype_b_loc@plt+0x23699>
  425950:	lea    rdx,[rip+0x51c1]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  425957:	cmp    rcx,rdx
  42595a:	je     425969 <__ctype_b_loc@plt+0x23699>
  42595c:	mov    eax,DWORD PTR [rax+0x28]
  42595f:	add    eax,0xfffffffd
  425962:	cmp    eax,0x4
  425965:	setb   bpl
  425969:	lea    rdx,[r14+0x1]
  42596d:	mov    esi,0x4
  425972:	mov    rdi,r12
  425975:	call   410970 <__ctype_b_loc@plt+0xe6a0>
  42597a:	mov    QWORD PTR [rsp+0x10],rax
  42597f:	mov    al,BYTE PTR [rbx]
  425981:	lea    rcx,[rbx+0x1]
  425985:	mov    BYTE PTR [rsp+0xb],al
  425989:	cmp    al,0x5e
  42598b:	cmovne rcx,rbx
  42598f:	mov    QWORD PTR [rsp+0x28],rcx
  425994:	test   bpl,bpl
  425997:	jne    425a43 <__ctype_b_loc@plt+0x23773>
  42599d:	mov    rax,QWORD PTR [r12+0x28]
  4259a2:	sub    rax,QWORD PTR [r12+0x50]
  4259a7:	jbe    425a26 <__ctype_b_loc@plt+0x23756>
  4259a9:	shr    rax,0x3
  4259ad:	imul   eax,eax,0xcccccccd
  4259b3:	mov    DWORD PTR [rsp+0x2e4],eax
  4259ba:	lea    rsi,[rip+0x5496]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  4259c1:	lea    rdx,[rsp+0x270]
  4259c9:	mov    rdi,r12
  4259cc:	call   410310 <__ctype_b_loc@plt+0xe040>
  4259d1:	mov    rdi,QWORD PTR [rsp+0x280]
  4259d9:	lea    rsi,[rip+0x5770]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  4259e0:	call   402180 <strcmp@plt>
  4259e5:	cmp    eax,0x1
  4259e8:	mov    edx,0x3
  4259ed:	sbb    edx,0x0
  4259f0:	mov    rcx,QWORD PTR [rsp+0x278]
  4259f8:	test   rcx,rcx
  4259fb:	jne    425a0c <__ctype_b_loc@plt+0x2373c>
  4259fd:	lea    rcx,[rip+0x5771]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  425a04:	mov    QWORD PTR [rsp+0x278],rcx
  425a0c:	lea    rsi,[rip+0x5764]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  425a13:	lea    r8,[rip+0x5f83]        # 42b99d <__ctype_b_loc@plt+0x296cd>
  425a1a:	xor    eax,eax
  425a1c:	mov    rdi,r12
  425a1f:	call   410070 <__ctype_b_loc@plt+0xdda0>
  425a24:	jmp    425a43 <__ctype_b_loc@plt+0x23773>
  425a26:	lea    rsi,[rip+0x570d]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  425a2d:	lea    rcx,[rip+0x5f69]        # 42b99d <__ctype_b_loc@plt+0x296cd>
  425a34:	mov    edx,0x3
  425a39:	xor    eax,eax
  425a3b:	mov    rdi,r12
  425a3e:	call   410070 <__ctype_b_loc@plt+0xdda0>
  425a43:	mov    QWORD PTR [rsp+0x280],r12
  425a4b:	lea    rax,[rsp+0x288]
  425a53:	mov    QWORD PTR [rsp+0x270],rax
  425a5b:	mov    DWORD PTR [rsp+0x278],0x0
  425a66:	mov    QWORD PTR [rsp+0x60],r12
  425a6b:	mov    QWORD PTR [rsp+0x50],r13
  425a70:	add    r14,r13
  425a73:	mov    QWORD PTR [rsp+0x58],r14
  425a78:	xor    ebx,ebx
  425a7a:	mov    rbp,QWORD PTR [rsp+0x10]
  425a7f:	mov    QWORD PTR [rsp+0x18],r12
  425a84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425a8e:	xchg   ax,ax
  425a90:	cmp    ebx,ebp
  425a92:	jge    425f44 <__ctype_b_loc@plt+0x23c74>
  425a98:	mov    DWORD PTR [rsp+0x68],0x0
  425aa0:	lea    rdi,[rsp+0x50]
  425aa5:	mov    rsi,r13
  425aa8:	mov    rdx,QWORD PTR [rsp+0x28]
  425aad:	call   427190 <__ctype_b_loc@plt+0x24ec0>
  425ab2:	mov    r14,rax
  425ab5:	test   rax,rax
  425ab8:	je     425d10 <__ctype_b_loc@plt+0x23a40>
  425abe:	add    ebx,0x1
  425ac1:	mov    DWORD PTR [rsp+0xc],ebx
  425ac5:	mov    r15,QWORD PTR [rsp+0x60]
  425aca:	mov    rcx,QWORD PTR [r15+0x10]
  425ace:	mov    rbx,QWORD PTR [r15+0x18]
  425ad2:	lea    rax,[rbx+0x20]
  425ad6:	cmp    rax,rcx
  425ad9:	jae    425e50 <__ctype_b_loc@plt+0x23b80>
  425adf:	lea    rdx,[rip+0x5032]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  425ae6:	cmp    rax,rdx
  425ae9:	je     425e50 <__ctype_b_loc@plt+0x23b80>
  425aef:	mov    edx,DWORD PTR [rbx+0x28]
  425af2:	add    edx,0xfffffffd
  425af5:	cmp    edx,0x3
  425af8:	ja     425e50 <__ctype_b_loc@plt+0x23b80>
  425afe:	lea    rsi,[rip+0x4f8b]        # 42aa90 <__ctype_b_loc@plt+0x287c0>
  425b05:	movsxd rdx,DWORD PTR [rsi+rdx*4]
  425b09:	add    rdx,rsi
  425b0c:	jmp    rdx
  425b0e:	vmovsd xmm0,QWORD PTR [rbx+0x20]
  425b13:	mov    al,0x1
  425b15:	lea    r12,[rsp+0x30]
  425b1a:	mov    rdi,r12
  425b1d:	lea    rsi,[rip+0x52fd]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  425b24:	call   402270 <sprintf@plt>
  425b29:	mov    rdi,r12
  425b2c:	call   4020e0 <strlen@plt>
  425b31:	mov    rdi,r15
  425b34:	mov    rsi,r12
  425b37:	mov    rdx,rax
  425b3a:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  425b3f:	mov    QWORD PTR [rbx+0x20],rax
  425b43:	mov    DWORD PTR [rbx+0x28],0x4
  425b4a:	mov    rax,QWORD PTR [r15+0x20]
  425b4e:	mov    rcx,QWORD PTR [rax+0x78]
  425b52:	cmp    rcx,QWORD PTR [rax+0x70]
  425b56:	jb     425b60 <__ctype_b_loc@plt+0x23890>
  425b58:	mov    rdi,r15
  425b5b:	call   408070 <__ctype_b_loc@plt+0x5da0>
  425b60:	mov    rax,QWORD PTR [r15+0x18]
  425b64:	add    rax,0x20
  425b68:	cmp    rax,QWORD PTR [r15+0x10]
  425b6c:	lea    rcx,[rip+0x4fa5]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  425b73:	cmovae rax,rcx
  425b77:	mov    r12,QWORD PTR [rax]
  425b7a:	mov    r15,QWORD PTR [r12+0x10]
  425b7f:	test   r15,r15
  425b82:	je     425f30 <__ctype_b_loc@plt+0x23c60>
  425b88:	mov    rbx,r14
  425b8b:	sub    rbx,r13
  425b8e:	xor    ebp,ebp
  425b90:	mov    QWORD PTR [rsp+0x20],r15
  425b95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425b9f:	nop
  425ba0:	mov    al,BYTE PTR [r12+rbp*1+0x18]
  425ba5:	cmp    al,0x25
  425ba7:	jne    425c10 <__ctype_b_loc@plt+0x23940>
  425ba9:	call   4022d0 <__ctype_b_loc@plt>
  425bae:	mov    rcx,QWORD PTR [rax]
  425bb1:	movzx  eax,BYTE PTR [r12+rbp*1+0x19]
  425bb7:	lea    rbp,[rbp+0x1]
  425bbb:	test   BYTE PTR [rcx+rax*2+0x1],0x8
  425bc0:	jne    425c60 <__ctype_b_loc@plt+0x23990>
  425bc6:	mov    rcx,QWORD PTR [rsp+0x270]
  425bce:	lea    rdx,[rsp+0x2288]
  425bd6:	cmp    rcx,rdx
  425bd9:	jb     425bf5 <__ctype_b_loc@plt+0x23925>
  425bdb:	lea    rdi,[rsp+0x270]
  425be3:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  425be8:	mov    al,BYTE PTR [r12+rbp*1+0x18]
  425bed:	mov    rcx,QWORD PTR [rsp+0x270]
  425bf5:	lea    rdx,[rcx+0x1]
  425bf9:	mov    QWORD PTR [rsp+0x270],rdx
  425c01:	mov    BYTE PTR [rcx],al
  425c03:	jmp    425cf0 <__ctype_b_loc@plt+0x23a20>
  425c08:	nop    DWORD PTR [rax+rax*1+0x0]
  425c10:	mov    rcx,QWORD PTR [rsp+0x270]
  425c18:	lea    rdx,[rsp+0x2288]
  425c20:	cmp    rcx,rdx
  425c23:	jb     425c3f <__ctype_b_loc@plt+0x2396f>
  425c25:	lea    rdi,[rsp+0x270]
  425c2d:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  425c32:	mov    al,BYTE PTR [r12+rbp*1+0x18]
  425c37:	mov    rcx,QWORD PTR [rsp+0x270]
  425c3f:	lea    rdx,[rcx+0x1]
  425c43:	mov    QWORD PTR [rsp+0x270],rdx
  425c4b:	mov    BYTE PTR [rcx],al
  425c4d:	jmp    425cf0 <__ctype_b_loc@plt+0x23a20>
  425c52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425c5c:	nop    DWORD PTR [rax+0x0]
  425c60:	cmp    al,0x30
  425c62:	jne    425cbe <__ctype_b_loc@plt+0x239ee>
  425c64:	test   rbx,rbx
  425c67:	je     425cf0 <__ctype_b_loc@plt+0x23a20>
  425c6d:	xor    r15d,r15d
  425c70:	mov    rax,QWORD PTR [rsp+0x270]
  425c78:	lea    rcx,[rsp+0x2288]
  425c80:	cmp    rax,rcx
  425c83:	jb     425c9a <__ctype_b_loc@plt+0x239ca>
  425c85:	lea    rdi,[rsp+0x270]
  425c8d:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  425c92:	mov    rax,QWORD PTR [rsp+0x270]
  425c9a:	movzx  ecx,BYTE PTR [r13+r15*1+0x0]
  425ca0:	lea    rdx,[rax+0x1]
  425ca4:	mov    QWORD PTR [rsp+0x270],rdx
  425cac:	mov    BYTE PTR [rax],cl
  425cae:	add    r15,0x1
  425cb2:	cmp    rbx,r15
  425cb5:	jne    425c70 <__ctype_b_loc@plt+0x239a0>
  425cb7:	mov    r15,QWORD PTR [rsp+0x20]
  425cbc:	jmp    425cf0 <__ctype_b_loc@plt+0x23a20>
  425cbe:	movsx  esi,al
  425cc1:	add    esi,0xffffffcf
  425cc4:	lea    rdi,[rsp+0x50]
  425cc9:	mov    rdx,r13
  425ccc:	mov    rcx,r14
  425ccf:	call   427d30 <__ctype_b_loc@plt+0x25a60>
  425cd4:	lea    rdi,[rsp+0x270]
  425cdc:	call   41f5e0 <__ctype_b_loc@plt+0x1d310>
  425ce1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  425cf0:	add    rbp,0x1
  425cf4:	cmp    rbp,r15
  425cf7:	jb     425ba0 <__ctype_b_loc@plt+0x238d0>
  425cfd:	mov    r12,QWORD PTR [rsp+0x18]
  425d02:	mov    rbp,QWORD PTR [rsp+0x10]
  425d07:	mov    ebx,DWORD PTR [rsp+0xc]
  425d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  425d10:	cmp    r14,r13
  425d13:	ja     425f20 <__ctype_b_loc@plt+0x23c50>
  425d19:	cmp    r13,QWORD PTR [rsp+0x58]
  425d1e:	jae    425f44 <__ctype_b_loc@plt+0x23c74>
  425d24:	mov    rax,QWORD PTR [rsp+0x270]
  425d2c:	lea    rcx,[rsp+0x2288]
  425d34:	cmp    rax,rcx
  425d37:	jb     425d4e <__ctype_b_loc@plt+0x23a7e>
  425d39:	lea    rdi,[rsp+0x270]
  425d41:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  425d46:	mov    rax,QWORD PTR [rsp+0x270]
  425d4e:	mov    cl,BYTE PTR [r13+0x0]
  425d52:	add    r13,0x1
  425d56:	lea    rdx,[rax+0x1]
  425d5a:	mov    QWORD PTR [rsp+0x270],rdx
  425d62:	mov    BYTE PTR [rax],cl
  425d64:	mov    r14,r13
  425d67:	jmp    425f20 <__ctype_b_loc@plt+0x23c50>
  425d6c:	xor    esi,esi
  425d6e:	lea    rdi,[rsp+0x50]
  425d73:	mov    rdx,r13
  425d76:	mov    rcx,r14
  425d79:	call   427d30 <__ctype_b_loc@plt+0x25a60>
  425d7e:	mov    rdx,QWORD PTR [r15+0x10]
  425d82:	mov    rsi,QWORD PTR [r15+0x18]
  425d86:	add    rsi,0x20
  425d8a:	cmp    rsi,rdx
  425d8d:	lea    rax,[rip+0x4d84]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  425d94:	cmovae rsi,rax
  425d98:	add    rdx,0xfffffffffffffff0
  425d9c:	mov    rdi,r15
  425d9f:	mov    rcx,rdx
  425da2:	call   408700 <__ctype_b_loc@plt+0x6430>
  425da7:	jmp    425e50 <__ctype_b_loc@plt+0x23b80>
  425dac:	mov    rax,QWORD PTR [rbx+0x20]
  425db0:	mov    QWORD PTR [rcx],rax
  425db3:	mov    eax,DWORD PTR [rbx+0x28]
  425db6:	mov    DWORD PTR [rcx+0x8],eax
  425db9:	add    QWORD PTR [r15+0x10],0x10
  425dbe:	mov    eax,DWORD PTR [rsp+0x68]
  425dc2:	test   eax,eax
  425dc4:	mov    r12d,eax
  425dc7:	mov    ecx,0x1
  425dcc:	cmove  r12d,ecx
  425dd0:	test   r13,r13
  425dd3:	cmove  r12d,eax
  425dd7:	mov    rdi,QWORD PTR [rsp+0x60]
  425ddc:	mov    esi,r12d
  425ddf:	lea    rdx,[rip+0x5a9f]        # 42b885 <__ctype_b_loc@plt+0x295b5>
  425de6:	call   41fda0 <__ctype_b_loc@plt+0x1dad0>
  425deb:	test   r12d,r12d
  425dee:	lea    rbx,[rsp+0x50]
  425df3:	jle    425e18 <__ctype_b_loc@plt+0x23b48>
  425df5:	xor    ebp,ebp
  425df7:	nop    WORD PTR [rax+rax*1+0x0]
  425e00:	mov    rdi,rbx
  425e03:	mov    esi,ebp
  425e05:	mov    rdx,r13
  425e08:	mov    rcx,r14
  425e0b:	call   427d30 <__ctype_b_loc@plt+0x25a60>
  425e10:	add    ebp,0x1
  425e13:	cmp    r12d,ebp
  425e16:	jne    425e00 <__ctype_b_loc@plt+0x23b30>
  425e18:	mov    rsi,QWORD PTR [r15+0x10]
  425e1c:	movsxd rax,r12d
  425e1f:	shl    rax,0x4
  425e23:	add    rax,0x10
  425e27:	sub    rsi,rax
  425e2a:	mov    edx,0x1
  425e2f:	mov    rdi,r15
  425e32:	call   404ff0 <__ctype_b_loc@plt+0x2d20>
  425e37:	mov    r12,QWORD PTR [rsp+0x18]
  425e3c:	mov    rbp,QWORD PTR [rsp+0x10]
  425e41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  425e50:	mov    rbx,QWORD PTR [r15+0x10]
  425e54:	movsxd rax,DWORD PTR [rbx-0x8]
  425e58:	add    rbx,0xfffffffffffffff0
  425e5c:	test   rax,rax
  425e5f:	je     425ec0 <__ctype_b_loc@plt+0x23bf0>
  425e61:	cmp    eax,0x1
  425e64:	jne    425e6b <__ctype_b_loc@plt+0x23b9b>
  425e66:	cmp    DWORD PTR [rbx],0x0
  425e69:	je     425ec0 <__ctype_b_loc@plt+0x23bf0>
  425e6b:	lea    rdx,[rip+0x5364]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  425e72:	lea    rcx,[rip+0x4c9f]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  425e79:	cmp    rbx,rcx
  425e7c:	mov    ebx,DWORD PTR [rsp+0xc]
  425e80:	je     425ea5 <__ctype_b_loc@plt+0x23bd5>
  425e82:	lea    ecx,[rax-0x3]
  425e85:	cmp    ecx,0x2
  425e88:	jb     425f0a <__ctype_b_loc@plt+0x23c3a>
  425e8e:	lea    rdx,[rip+0x5341]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  425e95:	cmp    eax,0xffffffff
  425e98:	je     425ea5 <__ctype_b_loc@plt+0x23bd5>
  425e9a:	lea    rcx,[rip+0xaa3f]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  425ea1:	mov    rdx,QWORD PTR [rcx+rax*8]
  425ea5:	xor    eax,eax
  425ea7:	mov    rdi,r15
  425eaa:	lea    rsi,[rip+0x5b0b]        # 42b9bc <__ctype_b_loc@plt+0x296ec>
  425eb1:	call   410070 <__ctype_b_loc@plt+0xdda0>
  425eb6:	jmp    425f0a <__ctype_b_loc@plt+0x23c3a>
  425eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  425ec0:	mov    QWORD PTR [r15+0x10],rbx
  425ec4:	mov    rbp,r14
  425ec7:	sub    rbp,r13
  425eca:	mov    rax,QWORD PTR [r15+0x20]
  425ece:	mov    rcx,QWORD PTR [rax+0x78]
  425ed2:	cmp    rcx,QWORD PTR [rax+0x70]
  425ed6:	jb     425ee4 <__ctype_b_loc@plt+0x23c14>
  425ed8:	mov    rdi,r15
  425edb:	call   408070 <__ctype_b_loc@plt+0x5da0>
  425ee0:	mov    rbx,QWORD PTR [r15+0x10]
  425ee4:	mov    rdi,r15
  425ee7:	mov    rsi,r13
  425eea:	mov    rdx,rbp
  425eed:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  425ef2:	mov    QWORD PTR [rbx],rax
  425ef5:	mov    DWORD PTR [rbx+0x8],0x4
  425efc:	add    QWORD PTR [r15+0x10],0x10
  425f01:	mov    rbp,QWORD PTR [rsp+0x10]
  425f06:	mov    ebx,DWORD PTR [rsp+0xc]
  425f0a:	lea    rdi,[rsp+0x270]
  425f12:	call   41f5e0 <__ctype_b_loc@plt+0x1d310>
  425f17:	cmp    r14,r13
  425f1a:	jbe    425d19 <__ctype_b_loc@plt+0x23a49>
  425f20:	mov    r13,r14
  425f23:	cmp    BYTE PTR [rsp+0xb],0x5e
  425f28:	jne    425a90 <__ctype_b_loc@plt+0x237c0>
  425f2e:	jmp    425f47 <__ctype_b_loc@plt+0x23c77>
  425f30:	mov    r12,QWORD PTR [rsp+0x18]
  425f35:	mov    ebx,DWORD PTR [rsp+0xc]
  425f39:	cmp    r14,r13
  425f3c:	jbe    425d19 <__ctype_b_loc@plt+0x23a49>
  425f42:	jmp    425f20 <__ctype_b_loc@plt+0x23c50>
  425f44:	mov    r14,r13
  425f47:	mov    r13d,ebx
  425f4a:	mov    rbp,QWORD PTR [rsp+0x58]
  425f4f:	sub    rbp,r14
  425f52:	je     425fa1 <__ctype_b_loc@plt+0x23cd1>
  425f54:	xor    ebx,ebx
  425f56:	lea    r15,[rsp+0x270]
  425f5e:	xchg   ax,ax
  425f60:	mov    rax,QWORD PTR [rsp+0x270]
  425f68:	lea    rcx,[rsp+0x2288]
  425f70:	cmp    rax,rcx
  425f73:	jb     425f85 <__ctype_b_loc@plt+0x23cb5>
  425f75:	mov    rdi,r15
  425f78:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  425f7d:	mov    rax,QWORD PTR [rsp+0x270]
  425f85:	movzx  ecx,BYTE PTR [r14+rbx*1]
  425f8a:	lea    rdx,[rax+0x1]
  425f8e:	mov    QWORD PTR [rsp+0x270],rdx
  425f96:	mov    BYTE PTR [rax],cl
  425f98:	add    rbx,0x1
  425f9c:	cmp    rbp,rbx
  425f9f:	jne    425f60 <__ctype_b_loc@plt+0x23c90>
  425fa1:	lea    rdi,[rsp+0x270]
  425fa9:	call   41f4d0 <__ctype_b_loc@plt+0x1d200>
  425fae:	mov    rax,QWORD PTR [r12+0x10]
  425fb3:	vcvtsi2sd xmm0,xmm1,r13d
  425fb8:	vmovsd QWORD PTR [rax],xmm0
  425fbc:	mov    DWORD PTR [rax+0x8],0x3
  425fc3:	add    QWORD PTR [r12+0x10],0x10
  425fc9:	mov    eax,0x2
  425fce:	add    rsp,0x2288
  425fd5:	pop    rbx
  425fd6:	pop    r12
  425fd8:	pop    r13
  425fda:	pop    r14
  425fdc:	pop    r15
  425fde:	pop    rbp
  425fdf:	ret    
  425fe0:	push   rbp
  425fe1:	push   r15
  425fe3:	push   r14
  425fe5:	push   r13
  425fe7:	push   r12
  425fe9:	push   rbx
  425fea:	sub    rsp,0x2018
  425ff1:	mov    r15,rdi
  425ff4:	mov    rdx,QWORD PTR [rdi+0x10]
  425ff8:	mov    rax,QWORD PTR [rdi+0x18]
  425ffc:	cmp    rax,rdx
  425fff:	lea    r12,[rip+0x4b12]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  426006:	mov    rbx,r12
  426009:	cmovb  rbx,rax
  42600d:	mov    ecx,DWORD PTR [rbx+0x8]
  426010:	cmp    ecx,0x4
  426013:	je     426077 <__ctype_b_loc@plt+0x23da7>
  426015:	cmp    ecx,0x3
  426018:	jne    426085 <__ctype_b_loc@plt+0x23db5>
  42601a:	vmovsd xmm0,QWORD PTR [rbx]
  42601e:	lea    rsi,[rip+0x4dfc]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  426025:	mov    r14,rsp
  426028:	mov    al,0x1
  42602a:	mov    rdi,r14
  42602d:	call   402270 <sprintf@plt>
  426032:	mov    rdi,r14
  426035:	call   4020e0 <strlen@plt>
  42603a:	mov    rdi,r15
  42603d:	mov    rsi,r14
  426040:	mov    rdx,rax
  426043:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  426048:	mov    QWORD PTR [rbx],rax
  42604b:	mov    DWORD PTR [rbx+0x8],0x4
  426052:	mov    rax,QWORD PTR [r15+0x20]
  426056:	mov    rcx,QWORD PTR [rax+0x78]
  42605a:	cmp    rcx,QWORD PTR [rax+0x70]
  42605e:	jb     426068 <__ctype_b_loc@plt+0x23d98>
  426060:	mov    rdi,r15
  426063:	call   408070 <__ctype_b_loc@plt+0x5da0>
  426068:	mov    rax,QWORD PTR [r15+0x18]
  42606c:	cmp    rax,QWORD PTR [r15+0x10]
  426070:	cmovb  r12,rax
  426074:	mov    rbx,r12
  426077:	mov    r12,QWORD PTR [rbx]
  42607a:	mov    r13,QWORD PTR [r12+0x10]
  42607f:	add    r12,0x18
  426083:	jmp    4260d9 <__ctype_b_loc@plt+0x23e09>
  426085:	lea    rcx,[rip+0x514a]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  42608c:	cmp    rax,r12
  42608f:	je     4260ab <__ctype_b_loc@plt+0x23ddb>
  426091:	cmp    rax,rdx
  426094:	jae    4260ab <__ctype_b_loc@plt+0x23ddb>
  426096:	movsxd rax,DWORD PTR [rax+0x8]
  42609a:	cmp    rax,0xffffffffffffffff
  42609e:	je     4260ab <__ctype_b_loc@plt+0x23ddb>
  4260a0:	lea    rcx,[rip+0xa839]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  4260a7:	mov    rcx,QWORD PTR [rcx+rax*8]
  4260ab:	lea    rsi,[rip+0x5110]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  4260b2:	lea    rdx,[rip+0x51b0]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  4260b9:	xor    r12d,r12d
  4260bc:	xor    eax,eax
  4260be:	mov    rdi,r15
  4260c1:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  4260c6:	mov    esi,0x1
  4260cb:	mov    rdi,r15
  4260ce:	mov    rdx,rax
  4260d1:	call   410240 <__ctype_b_loc@plt+0xdf70>
  4260d6:	xor    r13d,r13d
  4260d9:	mov    QWORD PTR [rsp+0x10],r15
  4260de:	lea    rbp,[rsp+0x18]
  4260e3:	mov    QWORD PTR [rsp],rbp
  4260e7:	mov    DWORD PTR [rsp+0x8],0x0
  4260ef:	test   r13,r13
  4260f2:	je     42614a <__ctype_b_loc@plt+0x23e7a>
  4260f4:	lea    r15,[rsp+0x2018]
  4260fc:	add    r13,0xffffffffffffffff
  426100:	xor    ebx,ebx
  426102:	mov    r14,rsp
  426105:	cmp    rbp,r15
  426108:	jb     426129 <__ctype_b_loc@plt+0x23e59>
  42610a:	jmp    42611d <__ctype_b_loc@plt+0x23e4d>
  42610c:	nop    DWORD PTR [rax+0x0]
  426110:	add    rbx,0x1
  426114:	mov    rbp,QWORD PTR [rsp]
  426118:	cmp    rbp,r15
  42611b:	jb     426129 <__ctype_b_loc@plt+0x23e59>
  42611d:	mov    rdi,r14
  426120:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  426125:	mov    rbp,QWORD PTR [rsp]
  426129:	call   4022c0 <__ctype_tolower_loc@plt>
  42612e:	mov    rax,QWORD PTR [rax]
  426131:	movzx  ecx,BYTE PTR [r12+rbx*1]
  426136:	movzx  eax,BYTE PTR [rax+rcx*4]
  42613a:	lea    rcx,[rbp+0x1]
  42613e:	mov    QWORD PTR [rsp],rcx
  426142:	mov    BYTE PTR [rbp+0x0],al
  426145:	cmp    r13,rbx
  426148:	jne    426110 <__ctype_b_loc@plt+0x23e40>
  42614a:	mov    rdi,rsp
  42614d:	call   41f4d0 <__ctype_b_loc@plt+0x1d200>
  426152:	mov    eax,0x1
  426157:	add    rsp,0x2018
  42615e:	pop    rbx
  42615f:	pop    r12
  426161:	pop    r13
  426163:	pop    r14
  426165:	pop    r15
  426167:	pop    rbp
  426168:	ret    
  426169:	nop    DWORD PTR [rax+0x0]
  426170:	xor    esi,esi
  426172:	jmp    426bd0 <__ctype_b_loc@plt+0x24900>
  426177:	nop    WORD PTR [rax+rax*1+0x0]
  426180:	push   rbp
  426181:	push   r15
  426183:	push   r14
  426185:	push   r13
  426187:	push   r12
  426189:	push   rbx
  42618a:	sub    rsp,0x2038
  426191:	mov    r15,rdi
  426194:	mov    rdx,QWORD PTR [rdi+0x10]
  426198:	mov    rax,QWORD PTR [rdi+0x18]
  42619c:	cmp    rax,rdx
  42619f:	lea    rbx,[rip+0x4972]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4261a6:	mov    rbp,rbx
  4261a9:	cmovb  rbp,rax
  4261ad:	mov    ecx,DWORD PTR [rbp+0x8]
  4261b0:	cmp    ecx,0x4
  4261b3:	je     426224 <__ctype_b_loc@plt+0x23f54>
  4261b5:	cmp    ecx,0x3
  4261b8:	jne    426233 <__ctype_b_loc@plt+0x23f63>
  4261ba:	mov    r14,rbx
  4261bd:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  4261c2:	lea    rsi,[rip+0x4c58]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  4261c9:	lea    rbx,[rsp+0x20]
  4261ce:	mov    al,0x1
  4261d0:	mov    rdi,rbx
  4261d3:	call   402270 <sprintf@plt>
  4261d8:	mov    rdi,rbx
  4261db:	call   4020e0 <strlen@plt>
  4261e0:	mov    rdi,r15
  4261e3:	mov    rsi,rbx
  4261e6:	mov    rdx,rax
  4261e9:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  4261ee:	mov    QWORD PTR [rbp+0x0],rax
  4261f2:	mov    DWORD PTR [rbp+0x8],0x4
  4261f9:	mov    rax,QWORD PTR [r15+0x20]
  4261fd:	mov    rcx,QWORD PTR [rax+0x78]
  426201:	cmp    rcx,QWORD PTR [rax+0x70]
  426205:	jb     42620f <__ctype_b_loc@plt+0x23f3f>
  426207:	mov    rdi,r15
  42620a:	call   408070 <__ctype_b_loc@plt+0x5da0>
  42620f:	mov    rdx,QWORD PTR [r15+0x10]
  426213:	mov    rax,QWORD PTR [r15+0x18]
  426217:	cmp    rax,rdx
  42621a:	mov    rbx,r14
  42621d:	mov    rbp,r14
  426220:	cmovb  rbp,rax
  426224:	mov    r12,QWORD PTR [rbp+0x0]
  426228:	mov    r13,QWORD PTR [r12+0x10]
  42622d:	add    r12,0x18
  426231:	jmp    42628f <__ctype_b_loc@plt+0x23fbf>
  426233:	lea    rcx,[rip+0x4f9c]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  42623a:	cmp    rax,rbx
  42623d:	je     426259 <__ctype_b_loc@plt+0x23f89>
  42623f:	cmp    rax,rdx
  426242:	jae    426259 <__ctype_b_loc@plt+0x23f89>
  426244:	movsxd rax,DWORD PTR [rax+0x8]
  426248:	cmp    rax,0xffffffffffffffff
  42624c:	je     426259 <__ctype_b_loc@plt+0x23f89>
  42624e:	lea    rcx,[rip+0xa68b]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  426255:	mov    rcx,QWORD PTR [rcx+rax*8]
  426259:	lea    rsi,[rip+0x4f62]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  426260:	lea    rdx,[rip+0x5002]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  426267:	xor    r12d,r12d
  42626a:	xor    eax,eax
  42626c:	mov    rdi,r15
  42626f:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  426274:	mov    esi,0x1
  426279:	mov    rdi,r15
  42627c:	mov    rdx,rax
  42627f:	call   410240 <__ctype_b_loc@plt+0xdf70>
  426284:	mov    rdx,QWORD PTR [r15+0x10]
  426288:	mov    rax,QWORD PTR [r15+0x18]
  42628c:	xor    r13d,r13d
  42628f:	add    rax,0x10
  426293:	cmp    rax,rdx
  426296:	cmovae rax,rbx
  42629a:	mov    ecx,DWORD PTR [rax+0x8]
  42629d:	cmp    ecx,0x3
  4262a0:	je     42636e <__ctype_b_loc@plt+0x2409e>
  4262a6:	cmp    ecx,0x4
  4262a9:	jne    426385 <__ctype_b_loc@plt+0x240b5>
  4262af:	mov    rbx,QWORD PTR [rax]
  4262b2:	add    rbx,0x18
  4262b6:	lea    rsi,[rsp+0x20]
  4262bb:	mov    rdi,rbx
  4262be:	call   4020b0 <strtod@plt>
  4262c3:	mov    rbp,QWORD PTR [rsp+0x20]
  4262c8:	cmp    rbp,rbx
  4262cb:	je     42637e <__ctype_b_loc@plt+0x240ae>
  4262d1:	mov    r14b,BYTE PTR [rbp+0x0]
  4262d5:	mov    eax,r14d
  4262d8:	or     al,0x20
  4262da:	cmp    al,0x78
  4262dc:	jne    426312 <__ctype_b_loc@plt+0x24042>
  4262de:	lea    rsi,[rsp+0x20]
  4262e3:	mov    edx,0x10
  4262e8:	mov    rdi,rbx
  4262eb:	call   402250 <strtoul@plt>
  4262f0:	vmovq  xmm0,rax
  4262f5:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x4973]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  4262fd:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x497b]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  426305:	vhaddpd xmm0,xmm0,xmm0
  426309:	mov    rbp,QWORD PTR [rsp+0x20]
  42630e:	mov    r14b,BYTE PTR [rbp+0x0]
  426312:	lea    rbx,[rip+0x47ff]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  426319:	test   r14b,r14b
  42631c:	je     426363 <__ctype_b_loc@plt+0x24093>
  42631e:	vmovapd XMMWORD PTR [rsp+0x10],xmm0
  426324:	call   4022d0 <__ctype_b_loc@plt>
  426329:	mov    rax,QWORD PTR [rax]
  42632c:	movzx  ecx,r14b
  426330:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  426335:	je     426385 <__ctype_b_loc@plt+0x240b5>
  426337:	add    rbp,0x1
  42633b:	vmovapd xmm0,XMMWORD PTR [rsp+0x10]
  426341:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42634b:	nop    DWORD PTR [rax+rax*1+0x0]
  426350:	movzx  ecx,BYTE PTR [rbp+0x0]
  426354:	add    rbp,0x1
  426358:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  42635d:	jne    426350 <__ctype_b_loc@plt+0x24080>
  42635f:	test   cl,cl
  426361:	jne    426385 <__ctype_b_loc@plt+0x240b5>
  426363:	lea    rax,[rsp+0x8]
  426368:	vmovsd QWORD PTR [rsp+0x8],xmm0
  42636e:	vcvttsd2si r14,QWORD PTR [rax]
  426373:	test   r14,r14
  426376:	jne    4264f0 <__ctype_b_loc@plt+0x24220>
  42637c:	jmp    426385 <__ctype_b_loc@plt+0x240b5>
  42637e:	lea    rbx,[rip+0x4793]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  426385:	mov    rax,QWORD PTR [r15+0x18]
  426389:	add    rax,0x10
  42638d:	cmp    rax,QWORD PTR [r15+0x10]
  426391:	cmovae rax,rbx
  426395:	mov    ecx,DWORD PTR [rax+0x8]
  426398:	cmp    ecx,0x3
  42639b:	je     4264ed <__ctype_b_loc@plt+0x2421d>
  4263a1:	cmp    ecx,0x4
  4263a4:	jne    426413 <__ctype_b_loc@plt+0x24143>
  4263a6:	mov    rbx,QWORD PTR [rax]
  4263a9:	add    rbx,0x18
  4263ad:	lea    rsi,[rsp+0x20]
  4263b2:	mov    rdi,rbx
  4263b5:	call   4020b0 <strtod@plt>
  4263ba:	mov    rbp,QWORD PTR [rsp+0x20]
  4263bf:	cmp    rbp,rbx
  4263c2:	je     42640c <__ctype_b_loc@plt+0x2413c>
  4263c4:	mov    r14b,BYTE PTR [rbp+0x0]
  4263c8:	mov    eax,r14d
  4263cb:	or     al,0x20
  4263cd:	cmp    al,0x78
  4263cf:	jne    4263ec <__ctype_b_loc@plt+0x2411c>
  4263d1:	lea    rsi,[rsp+0x20]
  4263d6:	mov    edx,0x10
  4263db:	mov    rdi,rbx
  4263de:	call   402250 <strtoul@plt>
  4263e3:	mov    rbp,QWORD PTR [rsp+0x20]
  4263e8:	mov    r14b,BYTE PTR [rbp+0x0]
  4263ec:	test   r14b,r14b
  4263ef:	je     4264ed <__ctype_b_loc@plt+0x2421d>
  4263f5:	call   4022d0 <__ctype_b_loc@plt>
  4263fa:	mov    rax,QWORD PTR [rax]
  4263fd:	movzx  ecx,r14b
  426401:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  426406:	jne    42658e <__ctype_b_loc@plt+0x242be>
  42640c:	lea    rbx,[rip+0x4705]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  426413:	mov    rax,QWORD PTR [r15+0x18]
  426417:	lea    rdx,[rax+0x10]
  42641b:	lea    rcx,[rip+0x4db4]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  426422:	cmp    rdx,QWORD PTR [r15+0x10]
  426426:	jae    426442 <__ctype_b_loc@plt+0x24172>
  426428:	cmp    rdx,rbx
  42642b:	je     426442 <__ctype_b_loc@plt+0x24172>
  42642d:	movsxd rax,DWORD PTR [rax+0x18]
  426431:	cmp    rax,0xffffffffffffffff
  426435:	je     426442 <__ctype_b_loc@plt+0x24172>
  426437:	lea    rcx,[rip+0xa4a2]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  42643e:	mov    rcx,QWORD PTR [rcx+rax*8]
  426442:	lea    rsi,[rip+0x4d79]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  426449:	lea    rdx,[rip+0x4a51]        # 42aea1 <__ctype_b_loc@plt+0x28bd1>
  426450:	xor    eax,eax
  426452:	mov    rdi,r15
  426455:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  42645a:	mov    r14,rax
  42645d:	mov    rax,QWORD PTR [r15+0x28]
  426461:	sub    rax,QWORD PTR [r15+0x50]
  426465:	jbe    4264d4 <__ctype_b_loc@plt+0x24204>
  426467:	shr    rax,0x3
  42646b:	imul   eax,eax,0xcccccccd
  426471:	mov    DWORD PTR [rsp+0x94],eax
  426478:	lea    rsi,[rip+0x49d8]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  42647f:	lea    rdx,[rsp+0x20]
  426484:	mov    rdi,r15
  426487:	call   410310 <__ctype_b_loc@plt+0xe040>
  42648c:	mov    rdi,QWORD PTR [rsp+0x30]
  426491:	lea    rsi,[rip+0x4cb8]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  426498:	call   402180 <strcmp@plt>
  42649d:	cmp    eax,0x1
  4264a0:	mov    edx,0x2
  4264a5:	sbb    edx,0x0
  4264a8:	mov    rcx,QWORD PTR [rsp+0x28]
  4264ad:	test   rcx,rcx
  4264b0:	jne    4264be <__ctype_b_loc@plt+0x241ee>
  4264b2:	lea    rcx,[rip+0x4cbc]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  4264b9:	mov    QWORD PTR [rsp+0x28],rcx
  4264be:	lea    rsi,[rip+0x4cb2]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  4264c5:	xor    eax,eax
  4264c7:	mov    rdi,r15
  4264ca:	mov    r8,r14
  4264cd:	call   410070 <__ctype_b_loc@plt+0xdda0>
  4264d2:	jmp    4264ed <__ctype_b_loc@plt+0x2421d>
  4264d4:	lea    rsi,[rip+0x4c5f]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  4264db:	mov    edx,0x2
  4264e0:	xor    eax,eax
  4264e2:	mov    rdi,r15
  4264e5:	mov    rcx,r14
  4264e8:	call   410070 <__ctype_b_loc@plt+0xdda0>
  4264ed:	xor    r14d,r14d
  4264f0:	mov    QWORD PTR [rsp+0x30],r15
  4264f5:	lea    rax,[rsp+0x38]
  4264fa:	mov    QWORD PTR [rsp+0x20],rax
  4264ff:	mov    DWORD PTR [rsp+0x28],0x0
  426507:	test   r14d,r14d
  42650a:	jle    42656d <__ctype_b_loc@plt+0x2429d>
  42650c:	lea    rbp,[rsp+0x2038]
  426514:	lea    r15,[rsp+0x20]
  426519:	nop    DWORD PTR [rax+0x0]
  426520:	test   r13,r13
  426523:	je     426560 <__ctype_b_loc@plt+0x24290>
  426525:	xor    ebx,ebx
  426527:	nop    WORD PTR [rax+rax*1+0x0]
  426530:	mov    rax,QWORD PTR [rsp+0x20]
  426535:	cmp    rax,rbp
  426538:	jb     426547 <__ctype_b_loc@plt+0x24277>
  42653a:	mov    rdi,r15
  42653d:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  426542:	mov    rax,QWORD PTR [rsp+0x20]
  426547:	movzx  ecx,BYTE PTR [r12+rbx*1]
  42654c:	lea    rdx,[rax+0x1]
  426550:	mov    QWORD PTR [rsp+0x20],rdx
  426555:	mov    BYTE PTR [rax],cl
  426557:	add    rbx,0x1
  42655b:	cmp    r13,rbx
  42655e:	jne    426530 <__ctype_b_loc@plt+0x24260>
  426560:	lea    eax,[r14-0x1]
  426564:	cmp    r14d,0x1
  426568:	mov    r14d,eax
  42656b:	jg     426520 <__ctype_b_loc@plt+0x24250>
  42656d:	lea    rdi,[rsp+0x20]
  426572:	call   41f4d0 <__ctype_b_loc@plt+0x1d200>
  426577:	mov    eax,0x1
  42657c:	add    rsp,0x2038
  426583:	pop    rbx
  426584:	pop    r12
  426586:	pop    r13
  426588:	pop    r14
  42658a:	pop    r15
  42658c:	pop    rbp
  42658d:	ret    
  42658e:	add    rbp,0x1
  426592:	lea    rbx,[rip+0x457f]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  426599:	nop    DWORD PTR [rax+0x0]
  4265a0:	movzx  ecx,BYTE PTR [rbp+0x0]
  4265a4:	add    rbp,0x1
  4265a8:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4265ad:	jne    4265a0 <__ctype_b_loc@plt+0x242d0>
  4265af:	test   cl,cl
  4265b1:	jne    426413 <__ctype_b_loc@plt+0x24143>
  4265b7:	jmp    4264ed <__ctype_b_loc@plt+0x2421d>
  4265bc:	nop    DWORD PTR [rax+0x0]
  4265c0:	push   rbp
  4265c1:	push   r15
  4265c3:	push   r14
  4265c5:	push   r13
  4265c7:	push   r12
  4265c9:	push   rbx
  4265ca:	sub    rsp,0x98
  4265d1:	mov    r15,rdi
  4265d4:	mov    rdx,QWORD PTR [rdi+0x10]
  4265d8:	mov    rax,QWORD PTR [rdi+0x18]
  4265dc:	cmp    rax,rdx
  4265df:	lea    r14,[rip+0x4532]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4265e6:	mov    rbp,r14
  4265e9:	cmovb  rbp,rax
  4265ed:	mov    ecx,DWORD PTR [rbp+0x8]
  4265f0:	cmp    ecx,0x4
  4265f3:	je     42665e <__ctype_b_loc@plt+0x2438e>
  4265f5:	cmp    ecx,0x3
  4265f8:	jne    42666d <__ctype_b_loc@plt+0x2439d>
  4265fa:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  4265ff:	lea    rsi,[rip+0x481b]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  426606:	lea    rbx,[rsp+0x20]
  42660b:	mov    al,0x1
  42660d:	mov    rdi,rbx
  426610:	call   402270 <sprintf@plt>
  426615:	mov    rdi,rbx
  426618:	call   4020e0 <strlen@plt>
  42661d:	mov    rdi,r15
  426620:	mov    rsi,rbx
  426623:	mov    rdx,rax
  426626:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  42662b:	mov    QWORD PTR [rbp+0x0],rax
  42662f:	mov    DWORD PTR [rbp+0x8],0x4
  426636:	mov    rax,QWORD PTR [r15+0x20]
  42663a:	mov    rcx,QWORD PTR [rax+0x78]
  42663e:	cmp    rcx,QWORD PTR [rax+0x70]
  426642:	jb     42664c <__ctype_b_loc@plt+0x2437c>
  426644:	mov    rdi,r15
  426647:	call   408070 <__ctype_b_loc@plt+0x5da0>
  42664c:	mov    rdx,QWORD PTR [r15+0x10]
  426650:	mov    rax,QWORD PTR [r15+0x18]
  426654:	cmp    rax,rdx
  426657:	mov    rbp,r14
  42665a:	cmovb  rbp,rax
  42665e:	mov    r12,QWORD PTR [rbp+0x0]
  426662:	mov    r13,QWORD PTR [r12+0x10]
  426667:	add    r12,0x18
  42666b:	jmp    4266c9 <__ctype_b_loc@plt+0x243f9>
  42666d:	lea    rcx,[rip+0x4b62]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  426674:	cmp    rax,r14
  426677:	je     426693 <__ctype_b_loc@plt+0x243c3>
  426679:	cmp    rax,rdx
  42667c:	jae    426693 <__ctype_b_loc@plt+0x243c3>
  42667e:	movsxd rax,DWORD PTR [rax+0x8]
  426682:	cmp    rax,0xffffffffffffffff
  426686:	je     426693 <__ctype_b_loc@plt+0x243c3>
  426688:	lea    rcx,[rip+0xa251]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  42668f:	mov    rcx,QWORD PTR [rcx+rax*8]
  426693:	lea    rsi,[rip+0x4b28]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  42669a:	lea    rdx,[rip+0x4bc8]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  4266a1:	xor    r12d,r12d
  4266a4:	xor    eax,eax
  4266a6:	mov    rdi,r15
  4266a9:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  4266ae:	mov    esi,0x1
  4266b3:	mov    rdi,r15
  4266b6:	mov    rdx,rax
  4266b9:	call   410240 <__ctype_b_loc@plt+0xdf70>
  4266be:	mov    rdx,QWORD PTR [r15+0x10]
  4266c2:	mov    rax,QWORD PTR [r15+0x18]
  4266c6:	xor    r13d,r13d
  4266c9:	add    rax,0x10
  4266cd:	cmp    rax,rdx
  4266d0:	cmovae rax,r14
  4266d4:	mov    ecx,DWORD PTR [rax+0x8]
  4266d7:	cmp    ecx,0x3
  4266da:	je     4267b5 <__ctype_b_loc@plt+0x244e5>
  4266e0:	cmp    ecx,0x4
  4266e3:	jne    4267d2 <__ctype_b_loc@plt+0x24502>
  4266e9:	mov    rbx,QWORD PTR [rax]
  4266ec:	add    rbx,0x18
  4266f0:	lea    rsi,[rsp+0x20]
  4266f5:	mov    rdi,rbx
  4266f8:	call   4020b0 <strtod@plt>
  4266fd:	mov    rbp,QWORD PTR [rsp+0x20]
  426702:	cmp    rbp,rbx
  426705:	je     4267d2 <__ctype_b_loc@plt+0x24502>
  42670b:	mov    r14b,BYTE PTR [rbp+0x0]
  42670f:	mov    eax,r14d
  426712:	or     al,0x20
  426714:	cmp    al,0x78
  426716:	jne    42674c <__ctype_b_loc@plt+0x2447c>
  426718:	lea    rsi,[rsp+0x20]
  42671d:	mov    edx,0x10
  426722:	mov    rdi,rbx
  426725:	call   402250 <strtoul@plt>
  42672a:	vmovq  xmm0,rax
  42672f:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x4539]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  426737:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x4541]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  42673f:	vhaddpd xmm0,xmm0,xmm0
  426743:	mov    rbp,QWORD PTR [rsp+0x20]
  426748:	mov    r14b,BYTE PTR [rbp+0x0]
  42674c:	test   r14b,r14b
  42674f:	je     426773 <__ctype_b_loc@plt+0x244a3>
  426751:	vmovapd XMMWORD PTR [rsp+0x10],xmm0
  426757:	call   4022d0 <__ctype_b_loc@plt>
  42675c:	mov    rax,QWORD PTR [rax]
  42675f:	movzx  ecx,r14b
  426763:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  426768:	jne    42677c <__ctype_b_loc@plt+0x244ac>
  42676a:	lea    r14,[rip+0x43a7]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  426771:	jmp    4267d2 <__ctype_b_loc@plt+0x24502>
  426773:	lea    r14,[rip+0x439e]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  42677a:	jmp    4267aa <__ctype_b_loc@plt+0x244da>
  42677c:	add    rbp,0x1
  426780:	vmovapd xmm0,XMMWORD PTR [rsp+0x10]
  426786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426790:	movzx  ecx,BYTE PTR [rbp+0x0]
  426794:	add    rbp,0x1
  426798:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  42679d:	jne    426790 <__ctype_b_loc@plt+0x244c0>
  42679f:	test   cl,cl
  4267a1:	lea    r14,[rip+0x4370]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4267a8:	jne    4267d2 <__ctype_b_loc@plt+0x24502>
  4267aa:	lea    rax,[rsp+0x8]
  4267af:	vmovsd QWORD PTR [rsp+0x8],xmm0
  4267b5:	vcvttsd2si rbx,QWORD PTR [rax]
  4267ba:	test   rbx,rbx
  4267bd:	je     4267d2 <__ctype_b_loc@plt+0x24502>
  4267bf:	lea    rbp,[r13+0x1]
  4267c3:	mov    rax,rbx
  4267c6:	sar    rax,0x3f
  4267ca:	and    rax,rbp
  4267cd:	jmp    42693f <__ctype_b_loc@plt+0x2466f>
  4267d2:	mov    rax,QWORD PTR [r15+0x18]
  4267d6:	add    rax,0x10
  4267da:	cmp    rax,QWORD PTR [r15+0x10]
  4267de:	cmovae rax,r14
  4267e2:	mov    ecx,DWORD PTR [rax+0x8]
  4267e5:	cmp    ecx,0x3
  4267e8:	je     426937 <__ctype_b_loc@plt+0x24667>
  4267ee:	cmp    ecx,0x4
  4267f1:	jne    42685d <__ctype_b_loc@plt+0x2458d>
  4267f3:	mov    r14,QWORD PTR [rax]
  4267f6:	add    r14,0x18
  4267fa:	lea    rsi,[rsp+0x20]
  4267ff:	mov    rdi,r14
  426802:	call   4020b0 <strtod@plt>
  426807:	mov    rbx,QWORD PTR [rsp+0x20]
  42680c:	cmp    rbx,r14
  42680f:	je     426856 <__ctype_b_loc@plt+0x24586>
  426811:	mov    bpl,BYTE PTR [rbx]
  426814:	mov    eax,ebp
  426816:	or     al,0x20
  426818:	cmp    al,0x78
  42681a:	jne    426836 <__ctype_b_loc@plt+0x24566>
  42681c:	lea    rsi,[rsp+0x20]
  426821:	mov    edx,0x10
  426826:	mov    rdi,r14
  426829:	call   402250 <strtoul@plt>
  42682e:	mov    rbx,QWORD PTR [rsp+0x20]
  426833:	mov    bpl,BYTE PTR [rbx]
  426836:	test   bpl,bpl
  426839:	je     426937 <__ctype_b_loc@plt+0x24667>
  42683f:	call   4022d0 <__ctype_b_loc@plt>
  426844:	mov    rax,QWORD PTR [rax]
  426847:	movzx  ecx,bpl
  42684b:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  426850:	jne    426a11 <__ctype_b_loc@plt+0x24741>
  426856:	lea    r14,[rip+0x42bb]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  42685d:	mov    rax,QWORD PTR [r15+0x18]
  426861:	lea    rdx,[rax+0x10]
  426865:	lea    rcx,[rip+0x496a]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  42686c:	cmp    rdx,QWORD PTR [r15+0x10]
  426870:	jae    42688c <__ctype_b_loc@plt+0x245bc>
  426872:	cmp    rdx,r14
  426875:	je     42688c <__ctype_b_loc@plt+0x245bc>
  426877:	movsxd rax,DWORD PTR [rax+0x18]
  42687b:	cmp    rax,0xffffffffffffffff
  42687f:	je     42688c <__ctype_b_loc@plt+0x245bc>
  426881:	lea    rcx,[rip+0xa058]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  426888:	mov    rcx,QWORD PTR [rcx+rax*8]
  42688c:	lea    rsi,[rip+0x492f]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  426893:	lea    rdx,[rip+0x4607]        # 42aea1 <__ctype_b_loc@plt+0x28bd1>
  42689a:	xor    eax,eax
  42689c:	mov    rdi,r15
  42689f:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  4268a4:	mov    r14,rax
  4268a7:	mov    rax,QWORD PTR [r15+0x28]
  4268ab:	sub    rax,QWORD PTR [r15+0x50]
  4268af:	jbe    42691e <__ctype_b_loc@plt+0x2464e>
  4268b1:	shr    rax,0x3
  4268b5:	imul   eax,eax,0xcccccccd
  4268bb:	mov    DWORD PTR [rsp+0x94],eax
  4268c2:	lea    rsi,[rip+0x458e]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  4268c9:	lea    rdx,[rsp+0x20]
  4268ce:	mov    rdi,r15
  4268d1:	call   410310 <__ctype_b_loc@plt+0xe040>
  4268d6:	mov    rdi,QWORD PTR [rsp+0x30]
  4268db:	lea    rsi,[rip+0x486e]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  4268e2:	call   402180 <strcmp@plt>
  4268e7:	cmp    eax,0x1
  4268ea:	mov    edx,0x2
  4268ef:	sbb    edx,0x0
  4268f2:	mov    rcx,QWORD PTR [rsp+0x28]
  4268f7:	test   rcx,rcx
  4268fa:	jne    426908 <__ctype_b_loc@plt+0x24638>
  4268fc:	lea    rcx,[rip+0x4872]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  426903:	mov    QWORD PTR [rsp+0x28],rcx
  426908:	lea    rsi,[rip+0x4868]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  42690f:	xor    eax,eax
  426911:	mov    rdi,r15
  426914:	mov    r8,r14
  426917:	call   410070 <__ctype_b_loc@plt+0xdda0>
  42691c:	jmp    426937 <__ctype_b_loc@plt+0x24667>
  42691e:	lea    rsi,[rip+0x4815]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  426925:	mov    edx,0x2
  42692a:	xor    eax,eax
  42692c:	mov    rdi,r15
  42692f:	mov    rcx,r14
  426932:	call   410070 <__ctype_b_loc@plt+0xdda0>
  426937:	lea    rbp,[r13+0x1]
  42693b:	xor    ebx,ebx
  42693d:	xor    eax,eax
  42693f:	add    rbx,rax
  426942:	mov    esi,0x3
  426947:	mov    rdx,0xffffffffffffffff
  42694e:	mov    rdi,r15
  426951:	call   410970 <__ctype_b_loc@plt+0xe6a0>
  426956:	mov    rcx,rax
  426959:	sar    rcx,0x3f
  42695d:	and    rcx,rbp
  426960:	add    rcx,rax
  426963:	mov    rax,rcx
  426966:	sar    rax,0x3f
  42696a:	andn   rax,rax,rcx
  42696f:	test   rbx,rbx
  426972:	mov    ecx,0x1
  426977:	cmovg  rcx,rbx
  42697b:	cmp    rax,r13
  42697e:	cmovg  rax,r13
  426982:	cmp    rax,rcx
  426985:	jge    4269af <__ctype_b_loc@plt+0x246df>
  426987:	mov    rax,QWORD PTR [r15+0x20]
  42698b:	mov    rcx,QWORD PTR [rax+0x78]
  42698f:	cmp    rcx,QWORD PTR [rax+0x70]
  426993:	jb     42699d <__ctype_b_loc@plt+0x246cd>
  426995:	mov    rdi,r15
  426998:	call   408070 <__ctype_b_loc@plt+0x5da0>
  42699d:	mov    rbp,QWORD PTR [r15+0x10]
  4269a1:	lea    rsi,[rip+0x46f3]        # 42b09b <__ctype_b_loc@plt+0x28dcb>
  4269a8:	xor    edx,edx
  4269aa:	mov    rdi,r15
  4269ad:	jmp    4269e5 <__ctype_b_loc@plt+0x24715>
  4269af:	lea    r14,[r12+rcx*1]
  4269b3:	add    r14,0xffffffffffffffff
  4269b7:	mov    ebx,0x1
  4269bc:	sub    rbx,rcx
  4269bf:	add    rbx,rax
  4269c2:	mov    rax,QWORD PTR [r15+0x20]
  4269c6:	mov    rcx,QWORD PTR [rax+0x78]
  4269ca:	cmp    rcx,QWORD PTR [rax+0x70]
  4269ce:	jb     4269d8 <__ctype_b_loc@plt+0x24708>
  4269d0:	mov    rdi,r15
  4269d3:	call   408070 <__ctype_b_loc@plt+0x5da0>
  4269d8:	mov    rbp,QWORD PTR [r15+0x10]
  4269dc:	mov    rdi,r15
  4269df:	mov    rsi,r14
  4269e2:	mov    rdx,rbx
  4269e5:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  4269ea:	mov    QWORD PTR [rbp+0x0],rax
  4269ee:	mov    DWORD PTR [rbp+0x8],0x4
  4269f5:	add    QWORD PTR [r15+0x10],0x10
  4269fa:	mov    eax,0x1
  4269ff:	add    rsp,0x98
  426a06:	pop    rbx
  426a07:	pop    r12
  426a09:	pop    r13
  426a0b:	pop    r14
  426a0d:	pop    r15
  426a0f:	pop    rbp
  426a10:	ret    
  426a11:	add    rbx,0x1
  426a15:	lea    r14,[rip+0x40fc]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  426a1c:	nop    DWORD PTR [rax+0x0]
  426a20:	movzx  ecx,BYTE PTR [rbx]
  426a23:	add    rbx,0x1
  426a27:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  426a2c:	jne    426a20 <__ctype_b_loc@plt+0x24750>
  426a2e:	test   cl,cl
  426a30:	jne    42685d <__ctype_b_loc@plt+0x2458d>
  426a36:	jmp    426937 <__ctype_b_loc@plt+0x24667>
  426a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  426a40:	push   rbp
  426a41:	push   r15
  426a43:	push   r14
  426a45:	push   r13
  426a47:	push   r12
  426a49:	push   rbx
  426a4a:	sub    rsp,0x2018
  426a51:	mov    r15,rdi
  426a54:	mov    rdx,QWORD PTR [rdi+0x10]
  426a58:	mov    rax,QWORD PTR [rdi+0x18]
  426a5c:	cmp    rax,rdx
  426a5f:	lea    r12,[rip+0x40b2]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  426a66:	mov    rbx,r12
  426a69:	cmovb  rbx,rax
  426a6d:	mov    ecx,DWORD PTR [rbx+0x8]
  426a70:	cmp    ecx,0x4
  426a73:	je     426ad7 <__ctype_b_loc@plt+0x24807>
  426a75:	cmp    ecx,0x3
  426a78:	jne    426ae5 <__ctype_b_loc@plt+0x24815>
  426a7a:	vmovsd xmm0,QWORD PTR [rbx]
  426a7e:	lea    rsi,[rip+0x439c]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  426a85:	mov    r14,rsp
  426a88:	mov    al,0x1
  426a8a:	mov    rdi,r14
  426a8d:	call   402270 <sprintf@plt>
  426a92:	mov    rdi,r14
  426a95:	call   4020e0 <strlen@plt>
  426a9a:	mov    rdi,r15
  426a9d:	mov    rsi,r14
  426aa0:	mov    rdx,rax
  426aa3:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  426aa8:	mov    QWORD PTR [rbx],rax
  426aab:	mov    DWORD PTR [rbx+0x8],0x4
  426ab2:	mov    rax,QWORD PTR [r15+0x20]
  426ab6:	mov    rcx,QWORD PTR [rax+0x78]
  426aba:	cmp    rcx,QWORD PTR [rax+0x70]
  426abe:	jb     426ac8 <__ctype_b_loc@plt+0x247f8>
  426ac0:	mov    rdi,r15
  426ac3:	call   408070 <__ctype_b_loc@plt+0x5da0>
  426ac8:	mov    rax,QWORD PTR [r15+0x18]
  426acc:	cmp    rax,QWORD PTR [r15+0x10]
  426ad0:	cmovb  r12,rax
  426ad4:	mov    rbx,r12
  426ad7:	mov    r12,QWORD PTR [rbx]
  426ada:	mov    r13,QWORD PTR [r12+0x10]
  426adf:	add    r12,0x18
  426ae3:	jmp    426b39 <__ctype_b_loc@plt+0x24869>
  426ae5:	lea    rcx,[rip+0x46ea]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  426aec:	cmp    rax,r12
  426aef:	je     426b0b <__ctype_b_loc@plt+0x2483b>
  426af1:	cmp    rax,rdx
  426af4:	jae    426b0b <__ctype_b_loc@plt+0x2483b>
  426af6:	movsxd rax,DWORD PTR [rax+0x8]
  426afa:	cmp    rax,0xffffffffffffffff
  426afe:	je     426b0b <__ctype_b_loc@plt+0x2483b>
  426b00:	lea    rcx,[rip+0x9dd9]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  426b07:	mov    rcx,QWORD PTR [rcx+rax*8]
  426b0b:	lea    rsi,[rip+0x46b0]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  426b12:	lea    rdx,[rip+0x4750]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  426b19:	xor    r12d,r12d
  426b1c:	xor    eax,eax
  426b1e:	mov    rdi,r15
  426b21:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  426b26:	mov    esi,0x1
  426b2b:	mov    rdi,r15
  426b2e:	mov    rdx,rax
  426b31:	call   410240 <__ctype_b_loc@plt+0xdf70>
  426b36:	xor    r13d,r13d
  426b39:	mov    QWORD PTR [rsp+0x10],r15
  426b3e:	lea    rbp,[rsp+0x18]
  426b43:	mov    QWORD PTR [rsp],rbp
  426b47:	mov    DWORD PTR [rsp+0x8],0x0
  426b4f:	test   r13,r13
  426b52:	je     426baa <__ctype_b_loc@plt+0x248da>
  426b54:	lea    r15,[rsp+0x2018]
  426b5c:	add    r13,0xffffffffffffffff
  426b60:	xor    ebx,ebx
  426b62:	mov    r14,rsp
  426b65:	cmp    rbp,r15
  426b68:	jb     426b89 <__ctype_b_loc@plt+0x248b9>
  426b6a:	jmp    426b7d <__ctype_b_loc@plt+0x248ad>
  426b6c:	nop    DWORD PTR [rax+0x0]
  426b70:	add    rbx,0x1
  426b74:	mov    rbp,QWORD PTR [rsp]
  426b78:	cmp    rbp,r15
  426b7b:	jb     426b89 <__ctype_b_loc@plt+0x248b9>
  426b7d:	mov    rdi,r14
  426b80:	call   41fa20 <__ctype_b_loc@plt+0x1d750>
  426b85:	mov    rbp,QWORD PTR [rsp]
  426b89:	call   402030 <__ctype_toupper_loc@plt>
  426b8e:	mov    rax,QWORD PTR [rax]
  426b91:	movzx  ecx,BYTE PTR [r12+rbx*1]
  426b96:	movzx  eax,BYTE PTR [rax+rcx*4]
  426b9a:	lea    rcx,[rbp+0x1]
  426b9e:	mov    QWORD PTR [rsp],rcx
  426ba2:	mov    BYTE PTR [rbp+0x0],al
  426ba5:	cmp    r13,rbx
  426ba8:	jne    426b70 <__ctype_b_loc@plt+0x248a0>
  426baa:	mov    rdi,rsp
  426bad:	call   41f4d0 <__ctype_b_loc@plt+0x1d200>
  426bb2:	mov    eax,0x1
  426bb7:	add    rsp,0x2018
  426bbe:	pop    rbx
  426bbf:	pop    r12
  426bc1:	pop    r13
  426bc3:	pop    r14
  426bc5:	pop    r15
  426bc7:	pop    rbp
  426bc8:	ret    
  426bc9:	nop    DWORD PTR [rax+0x0]
  426bd0:	push   rbp
  426bd1:	push   r15
  426bd3:	push   r14
  426bd5:	push   r13
  426bd7:	push   r12
  426bd9:	push   rbx
  426bda:	sub    rsp,0x258
  426be1:	mov    DWORD PTR [rsp+0x18],esi
  426be5:	mov    rbx,rdi
  426be8:	mov    rdx,QWORD PTR [rdi+0x10]
  426bec:	mov    rax,QWORD PTR [rdi+0x18]
  426bf0:	cmp    rax,rdx
  426bf3:	lea    r14,[rip+0x3f1e]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  426bfa:	mov    rbp,r14
  426bfd:	cmovb  rbp,rax
  426c01:	mov    ecx,DWORD PTR [rbp+0x8]
  426c04:	cmp    ecx,0x4
  426c07:	je     426c72 <__ctype_b_loc@plt+0x249a2>
  426c09:	cmp    ecx,0x3
  426c0c:	jne    426c85 <__ctype_b_loc@plt+0x249b5>
  426c0e:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  426c13:	lea    rsi,[rip+0x4207]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  426c1a:	lea    r15,[rsp+0x30]
  426c1f:	mov    al,0x1
  426c21:	mov    rdi,r15
  426c24:	call   402270 <sprintf@plt>
  426c29:	mov    rdi,r15
  426c2c:	call   4020e0 <strlen@plt>
  426c31:	mov    rdi,rbx
  426c34:	mov    rsi,r15
  426c37:	mov    rdx,rax
  426c3a:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  426c3f:	mov    QWORD PTR [rbp+0x0],rax
  426c43:	mov    DWORD PTR [rbp+0x8],0x4
  426c4a:	mov    rax,QWORD PTR [rbx+0x20]
  426c4e:	mov    rcx,QWORD PTR [rax+0x78]
  426c52:	cmp    rcx,QWORD PTR [rax+0x70]
  426c56:	jb     426c60 <__ctype_b_loc@plt+0x24990>
  426c58:	mov    rdi,rbx
  426c5b:	call   408070 <__ctype_b_loc@plt+0x5da0>
  426c60:	mov    rdx,QWORD PTR [rbx+0x10]
  426c64:	mov    rax,QWORD PTR [rbx+0x18]
  426c68:	cmp    rax,rdx
  426c6b:	mov    rbp,r14
  426c6e:	cmovb  rbp,rax
  426c72:	mov    rcx,QWORD PTR [rbp+0x0]
  426c76:	mov    r13,QWORD PTR [rcx+0x10]
  426c7a:	add    rcx,0x18
  426c7e:	mov    QWORD PTR [rsp+0x10],rcx
  426c83:	jmp    426ce5 <__ctype_b_loc@plt+0x24a15>
  426c85:	lea    rcx,[rip+0x454a]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  426c8c:	cmp    rax,r14
  426c8f:	je     426cab <__ctype_b_loc@plt+0x249db>
  426c91:	cmp    rax,rdx
  426c94:	jae    426cab <__ctype_b_loc@plt+0x249db>
  426c96:	movsxd rax,DWORD PTR [rax+0x8]
  426c9a:	cmp    rax,0xffffffffffffffff
  426c9e:	je     426cab <__ctype_b_loc@plt+0x249db>
  426ca0:	lea    rcx,[rip+0x9c39]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  426ca7:	mov    rcx,QWORD PTR [rcx+rax*8]
  426cab:	lea    rsi,[rip+0x4510]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  426cb2:	lea    rdx,[rip+0x45b0]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  426cb9:	xor    eax,eax
  426cbb:	mov    QWORD PTR [rsp+0x10],rax
  426cc0:	xor    eax,eax
  426cc2:	mov    rdi,rbx
  426cc5:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  426cca:	mov    esi,0x1
  426ccf:	mov    rdi,rbx
  426cd2:	mov    rdx,rax
  426cd5:	call   410240 <__ctype_b_loc@plt+0xdf70>
  426cda:	mov    rdx,QWORD PTR [rbx+0x10]
  426cde:	mov    rax,QWORD PTR [rbx+0x18]
  426ce2:	xor    r13d,r13d
  426ce5:	lea    rsi,[rax+0x10]
  426ce9:	cmp    rsi,rdx
  426cec:	mov    rbp,r14
  426cef:	cmovb  rbp,rsi
  426cf3:	mov    ecx,DWORD PTR [rbp+0x8]
  426cf6:	cmp    ecx,0x4
  426cf9:	je     426d62 <__ctype_b_loc@plt+0x24a92>
  426cfb:	cmp    ecx,0x3
  426cfe:	jne    426d79 <__ctype_b_loc@plt+0x24aa9>
  426d00:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  426d05:	lea    rsi,[rip+0x4115]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  426d0c:	lea    r15,[rsp+0x30]
  426d11:	mov    al,0x1
  426d13:	mov    rdi,r15
  426d16:	call   402270 <sprintf@plt>
  426d1b:	mov    rdi,r15
  426d1e:	call   4020e0 <strlen@plt>
  426d23:	mov    rdi,rbx
  426d26:	mov    rsi,r15
  426d29:	mov    rdx,rax
  426d2c:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  426d31:	mov    QWORD PTR [rbp+0x0],rax
  426d35:	mov    DWORD PTR [rbp+0x8],0x4
  426d3c:	mov    rax,QWORD PTR [rbx+0x20]
  426d40:	mov    rcx,QWORD PTR [rax+0x78]
  426d44:	cmp    rcx,QWORD PTR [rax+0x70]
  426d48:	jb     426d52 <__ctype_b_loc@plt+0x24a82>
  426d4a:	mov    rdi,rbx
  426d4d:	call   408070 <__ctype_b_loc@plt+0x5da0>
  426d52:	mov    rbp,QWORD PTR [rbx+0x18]
  426d56:	add    rbp,0x10
  426d5a:	cmp    rbp,QWORD PTR [rbx+0x10]
  426d5e:	cmovae rbp,r14
  426d62:	mov    r12,QWORD PTR [rbp+0x0]
  426d66:	mov    rax,QWORD PTR [r12+0x10]
  426d6b:	mov    QWORD PTR [rsp+0x20],rax
  426d70:	add    r12,0x18
  426d74:	jmp    426e54 <__ctype_b_loc@plt+0x24b84>
  426d79:	lea    rcx,[rip+0x4456]        # 42b1d6 <__ctype_b_loc@plt+0x28f06>
  426d80:	cmp    rsi,rdx
  426d83:	jae    426d9f <__ctype_b_loc@plt+0x24acf>
  426d85:	cmp    rsi,r14
  426d88:	je     426d9f <__ctype_b_loc@plt+0x24acf>
  426d8a:	movsxd rax,DWORD PTR [rax+0x18]
  426d8e:	cmp    rax,0xffffffffffffffff
  426d92:	je     426d9f <__ctype_b_loc@plt+0x24acf>
  426d94:	lea    rcx,[rip+0x9b45]        # 4308e0 <__ctype_b_loc@plt+0x2e610>
  426d9b:	mov    rcx,QWORD PTR [rcx+rax*8]
  426d9f:	lea    rsi,[rip+0x441c]        # 42b1c2 <__ctype_b_loc@plt+0x28ef2>
  426da6:	lea    rdx,[rip+0x44bc]        # 42b269 <__ctype_b_loc@plt+0x28f99>
  426dad:	xor    eax,eax
  426daf:	mov    rdi,rbx
  426db2:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  426db7:	mov    rbp,rax
  426dba:	mov    rax,QWORD PTR [rbx+0x28]
  426dbe:	sub    rax,QWORD PTR [rbx+0x50]
  426dc2:	jbe    426e31 <__ctype_b_loc@plt+0x24b61>
  426dc4:	shr    rax,0x3
  426dc8:	imul   eax,eax,0xcccccccd
  426dce:	mov    DWORD PTR [rsp+0xa4],eax
  426dd5:	lea    rsi,[rip+0x407b]        # 42ae57 <__ctype_b_loc@plt+0x28b87>
  426ddc:	lea    rdx,[rsp+0x30]
  426de1:	mov    rdi,rbx
  426de4:	call   410310 <__ctype_b_loc@plt+0xe040>
  426de9:	mov    rdi,QWORD PTR [rsp+0x40]
  426dee:	lea    rsi,[rip+0x435b]        # 42b150 <__ctype_b_loc@plt+0x28e80>
  426df5:	call   402180 <strcmp@plt>
  426dfa:	cmp    eax,0x1
  426dfd:	mov    edx,0x2
  426e02:	sbb    edx,0x0
  426e05:	mov    rcx,QWORD PTR [rsp+0x38]
  426e0a:	test   rcx,rcx
  426e0d:	jne    426e1b <__ctype_b_loc@plt+0x24b4b>
  426e0f:	lea    rcx,[rip+0x435f]        # 42b175 <__ctype_b_loc@plt+0x28ea5>
  426e16:	mov    QWORD PTR [rsp+0x38],rcx
  426e1b:	lea    rsi,[rip+0x4355]        # 42b177 <__ctype_b_loc@plt+0x28ea7>
  426e22:	xor    eax,eax
  426e24:	mov    rdi,rbx
  426e27:	mov    r8,rbp
  426e2a:	call   410070 <__ctype_b_loc@plt+0xdda0>
  426e2f:	jmp    426e4a <__ctype_b_loc@plt+0x24b7a>
  426e31:	lea    rsi,[rip+0x4302]        # 42b13a <__ctype_b_loc@plt+0x28e6a>
  426e38:	mov    edx,0x2
  426e3d:	xor    eax,eax
  426e3f:	mov    rdi,rbx
  426e42:	mov    rcx,rbp
  426e45:	call   410070 <__ctype_b_loc@plt+0xdda0>
  426e4a:	xor    r12d,r12d
  426e4d:	xor    eax,eax
  426e4f:	mov    QWORD PTR [rsp+0x20],rax
  426e54:	mov    esi,0x3
  426e59:	mov    edx,0x1
  426e5e:	mov    QWORD PTR [rsp+0x8],rbx
  426e63:	mov    rdi,rbx
  426e66:	call   410970 <__ctype_b_loc@plt+0xe6a0>
  426e6b:	lea    rcx,[r13+0x1]
  426e6f:	mov    rdx,rax
  426e72:	sar    rdx,0x3f
  426e76:	and    rdx,rcx
  426e79:	add    rdx,rax
  426e7c:	mov    rax,rdx
  426e7f:	sar    rax,0x3f
  426e83:	andn   rax,rax,rdx
  426e88:	lea    rcx,[rax-0x1]
  426e8c:	cmp    rcx,r13
  426e8f:	cmova  rcx,r13
  426e93:	xor    ebx,ebx
  426e95:	test   rax,rax
  426e98:	cmovg  rbx,rcx
  426e9c:	cmp    DWORD PTR [rsp+0x18],0x0
  426ea1:	je     426eee <__ctype_b_loc@plt+0x24c1e>
  426ea3:	mov    rax,QWORD PTR [rsp+0x8]
  426ea8:	mov    r15,QWORD PTR [rax+0x10]
  426eac:	mov    rax,QWORD PTR [rax+0x18]
  426eb0:	add    rax,0x30
  426eb4:	cmp    rax,r15
  426eb7:	cmovb  r14,rax
  426ebb:	mov    eax,DWORD PTR [r14+0x8]
  426ebf:	test   eax,eax
  426ec1:	je     426ed6 <__ctype_b_loc@plt+0x24c06>
  426ec3:	cmp    eax,0x1
  426ec6:	jne    426f6e <__ctype_b_loc@plt+0x24c9e>
  426ecc:	cmp    DWORD PTR [r14],0x0
  426ed0:	jne    426f6e <__ctype_b_loc@plt+0x24c9e>
  426ed6:	lea    rsi,[rip+0x497a]        # 42b857 <__ctype_b_loc@plt+0x29587>
  426edd:	mov    rdi,r12
  426ee0:	call   402210 <strpbrk@plt>
  426ee5:	test   rax,rax
  426ee8:	je     426f6e <__ctype_b_loc@plt+0x24c9e>
  426eee:	mov    r15b,BYTE PTR [r12]
  426ef2:	lea    r14,[r12+0x1]
  426ef7:	cmp    r15b,0x5e
  426efb:	cmovne r14,r12
  426eff:	mov    rax,QWORD PTR [rsp+0x10]
  426f04:	mov    rcx,rax
  426f07:	add    rbx,rax
  426f0a:	mov    rax,QWORD PTR [rsp+0x8]
  426f0f:	mov    QWORD PTR [rsp+0x40],rax
  426f14:	mov    QWORD PTR [rsp+0x30],rcx
  426f19:	add    r13,rcx
  426f1c:	mov    QWORD PTR [rsp+0x38],r13
  426f21:	lea    r12,[rsp+0x30]
  426f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426f30:	mov    DWORD PTR [rsp+0x48],0x0
  426f38:	mov    rdi,r12
  426f3b:	mov    rsi,rbx
  426f3e:	mov    rdx,r14
  426f41:	call   427190 <__ctype_b_loc@plt+0x24ec0>
  426f46:	test   rax,rax
  426f49:	jne    426ff7 <__ctype_b_loc@plt+0x24d27>
  426f4f:	cmp    rbx,QWORD PTR [rsp+0x38]
  426f54:	jae    426f60 <__ctype_b_loc@plt+0x24c90>
  426f56:	add    rbx,0x1
  426f5a:	cmp    r15b,0x5e
  426f5e:	jne    426f30 <__ctype_b_loc@plt+0x24c60>
  426f60:	mov    rax,QWORD PTR [rsp+0x8]
  426f65:	mov    r15,QWORD PTR [rax+0x10]
  426f69:	jmp    4270aa <__ctype_b_loc@plt+0x24dda>
  426f6e:	mov    rax,QWORD PTR [rsp+0x10]
  426f73:	lea    rbp,[rax+rbx*1]
  426f77:	mov    rsi,QWORD PTR [rsp+0x20]
  426f7c:	test   rsi,rsi
  426f7f:	je     42709c <__ctype_b_loc@plt+0x24dcc>
  426f85:	sub    r13,rbx
  426f88:	cmp    rsi,r13
  426f8b:	ja     4270a5 <__ctype_b_loc@plt+0x24dd5>
  426f91:	lea    rax,[rsi-0x1]
  426f95:	mov    QWORD PTR [rsp+0x18],rax
  426f9a:	sub    r13,rax
  426f9d:	je     4270a5 <__ctype_b_loc@plt+0x24dd5>
  426fa3:	movsx  eax,BYTE PTR [r12]
  426fa8:	mov    DWORD PTR [rsp+0x2c],eax
  426fac:	add    r12,0x1
  426fb0:	mov    rdi,rbp
  426fb3:	mov    esi,DWORD PTR [rsp+0x2c]
  426fb7:	mov    rdx,r13
  426fba:	call   402140 <memchr@plt>
  426fbf:	test   rax,rax
  426fc2:	je     4270a5 <__ctype_b_loc@plt+0x24dd5>
  426fc8:	mov    rbx,rax
  426fcb:	lea    r14,[rax+0x1]
  426fcf:	mov    rdi,r14
  426fd2:	mov    rsi,r12
  426fd5:	mov    rdx,QWORD PTR [rsp+0x18]
  426fda:	call   402150 <memcmp@plt>
  426fdf:	test   eax,eax
  426fe1:	je     42712c <__ctype_b_loc@plt+0x24e5c>
  426fe7:	add    r13,rbp
  426fea:	mov    rbp,r14
  426fed:	sub    r13,r14
  426ff0:	jne    426fb0 <__ctype_b_loc@plt+0x24ce0>
  426ff2:	jmp    4270a5 <__ctype_b_loc@plt+0x24dd5>
  426ff7:	mov    rbp,rax
  426ffa:	cmp    DWORD PTR [rsp+0x18],0x0
  426fff:	je     4270d5 <__ctype_b_loc@plt+0x24e05>
  427005:	mov    eax,0x1
  42700a:	mov    rcx,QWORD PTR [rsp+0x10]
  42700f:	mov    rsi,rcx
  427012:	sub    rax,rcx
  427015:	add    rax,rbx
  427018:	vcvtsi2sd xmm0,xmm1,rax
  42701d:	mov    rdx,QWORD PTR [rsp+0x8]
  427022:	mov    rax,QWORD PTR [rdx+0x10]
  427026:	vmovsd QWORD PTR [rax],xmm0
  42702a:	mov    DWORD PTR [rax+0x8],0x3
  427031:	mov    rax,QWORD PTR [rdx+0x10]
  427035:	lea    rcx,[rax+0x10]
  427039:	mov    QWORD PTR [rdx+0x10],rcx
  42703d:	sub    rbp,rsi
  427040:	vcvtsi2sd xmm0,xmm1,rbp
  427045:	vmovsd QWORD PTR [rax+0x10],xmm0
  42704a:	mov    DWORD PTR [rax+0x18],0x3
  427051:	add    QWORD PTR [rdx+0x10],0x10
  427056:	mov    r14d,DWORD PTR [rsp+0x48]
  42705b:	mov    rdi,QWORD PTR [rsp+0x40]
  427060:	lea    rdx,[rip+0x481e]        # 42b885 <__ctype_b_loc@plt+0x295b5>
  427067:	mov    esi,r14d
  42706a:	call   41fda0 <__ctype_b_loc@plt+0x1dad0>
  42706f:	test   r14d,r14d
  427072:	jle    427096 <__ctype_b_loc@plt+0x24dc6>
  427074:	xor    ebx,ebx
  427076:	lea    rbp,[rsp+0x30]
  42707b:	nop    DWORD PTR [rax+rax*1+0x0]
  427080:	xor    edx,edx
  427082:	xor    ecx,ecx
  427084:	mov    rdi,rbp
  427087:	mov    esi,ebx
  427089:	call   427d30 <__ctype_b_loc@plt+0x25a60>
  42708e:	add    ebx,0x1
  427091:	cmp    r14d,ebx
  427094:	jne    427080 <__ctype_b_loc@plt+0x24db0>
  427096:	add    r14d,0x2
  42709a:	jmp    4270c0 <__ctype_b_loc@plt+0x24df0>
  42709c:	test   rbp,rbp
  42709f:	jne    427134 <__ctype_b_loc@plt+0x24e64>
  4270a5:	mov    rax,QWORD PTR [rsp+0x8]
  4270aa:	mov    DWORD PTR [r15+0x8],0x0
  4270b2:	add    r15,0x10
  4270b6:	mov    QWORD PTR [rax+0x10],r15
  4270ba:	mov    r14d,0x1
  4270c0:	mov    eax,r14d
  4270c3:	add    rsp,0x258
  4270ca:	pop    rbx
  4270cb:	pop    r12
  4270cd:	pop    r13
  4270cf:	pop    r14
  4270d1:	pop    r15
  4270d3:	pop    rbp
  4270d4:	ret    
  4270d5:	mov    eax,DWORD PTR [rsp+0x48]
  4270d9:	test   eax,eax
  4270db:	mov    r14d,0x1
  4270e1:	cmovne r14d,eax
  4270e5:	test   rbx,rbx
  4270e8:	cmove  r14d,eax
  4270ec:	mov    rdi,QWORD PTR [rsp+0x40]
  4270f1:	lea    rdx,[rip+0x478d]        # 42b885 <__ctype_b_loc@plt+0x295b5>
  4270f8:	mov    esi,r14d
  4270fb:	call   41fda0 <__ctype_b_loc@plt+0x1dad0>
  427100:	test   r14d,r14d
  427103:	jle    4270c0 <__ctype_b_loc@plt+0x24df0>
  427105:	xor    r15d,r15d
  427108:	lea    r12,[rsp+0x30]
  42710d:	nop    DWORD PTR [rax]
  427110:	mov    rdi,r12
  427113:	mov    esi,r15d
  427116:	mov    rdx,rbx
  427119:	mov    rcx,rbp
  42711c:	call   427d30 <__ctype_b_loc@plt+0x25a60>
  427121:	add    r15d,0x1
  427125:	cmp    r14d,r15d
  427128:	jne    427110 <__ctype_b_loc@plt+0x24e40>
  42712a:	jmp    4270c0 <__ctype_b_loc@plt+0x24df0>
  42712c:	mov    rbp,rbx
  42712f:	mov    rsi,QWORD PTR [rsp+0x20]
  427134:	sub    rbp,QWORD PTR [rsp+0x10]
  427139:	lea    rax,[rbp+0x1]
  42713d:	vcvtsi2sd xmm0,xmm1,rax
  427142:	vmovsd QWORD PTR [r15],xmm0
  427147:	mov    DWORD PTR [r15+0x8],0x3
  42714f:	mov    rdx,QWORD PTR [rsp+0x8]
  427154:	mov    rax,QWORD PTR [rdx+0x10]
  427158:	lea    rcx,[rax+0x10]
  42715c:	mov    QWORD PTR [rdx+0x10],rcx
  427160:	add    rbp,rsi
  427163:	vcvtsi2sd xmm0,xmm1,rbp
  427168:	vmovsd QWORD PTR [rax+0x10],xmm0
  42716d:	mov    DWORD PTR [rax+0x18],0x3
  427174:	add    QWORD PTR [rdx+0x10],0x10
  427179:	mov    r14d,0x2
  42717f:	jmp    4270c0 <__ctype_b_loc@plt+0x24df0>
  427184:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42718e:	xchg   ax,ax
  427190:	push   rbp
  427191:	push   r15
  427193:	push   r14
  427195:	push   r13
  427197:	push   r12
  427199:	push   rbx
  42719a:	sub    rsp,0x38
  42719e:	mov    r15,rdx
  4271a1:	mov    r14,rsi
  4271a4:	mov    r13,rdi
  4271a7:	lea    rbp,[rdi+0x28]
  4271ab:	mov    QWORD PTR [rsp+0x30],rdi
  4271b0:	mov    QWORD PTR [rsp+0x20],rbp
  4271b5:	jmp    4271d0 <__ctype_b_loc@plt+0x24f00>
  4271b7:	add    r14,0x1
  4271bb:	add    r12,0x4
  4271bf:	mov    r15,r12
  4271c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4271cc:	nop    DWORD PTR [rax+0x0]
  4271d0:	lea    rax,[r14+0x1]
  4271d4:	mov    QWORD PTR [rsp+0x28],rax
  4271d9:	mov    QWORD PTR [rsp+0x18],r14
  4271de:	xchg   ax,ax
  4271e0:	mov    r12,r15
  4271e3:	mov    al,BYTE PTR [r15]
  4271e6:	movsx  ecx,al
  4271e9:	cmp    ecx,0x25
  4271ec:	jne    427433 <__ctype_b_loc@plt+0x25163>
  4271f2:	movsx  ebp,BYTE PTR [r12+0x1]
  4271f8:	cmp    ebp,0x66
  4271fb:	jne    427463 <__ctype_b_loc@plt+0x25193>
  427201:	cmp    BYTE PTR [r12+0x2],0x5b
  427207:	jne    427220 <__ctype_b_loc@plt+0x24f50>
  427209:	lea    rbx,[r12+0x3]
  42720e:	lea    rbp,[rip+0x46d0]        # 42b8e5 <__ctype_b_loc@plt+0x29615>
  427215:	jmp    427270 <__ctype_b_loc@plt+0x24fa0>
  427217:	nop    WORD PTR [rax+rax*1+0x0]
  427220:	mov    rdi,QWORD PTR [r13+0x10]
  427224:	xor    eax,eax
  427226:	lea    rsi,[rip+0x4635]        # 42b862 <__ctype_b_loc@plt+0x29592>
  42722d:	call   410070 <__ctype_b_loc@plt+0xdda0>
  427232:	movsx  eax,BYTE PTR [r12+0x2]
  427238:	lea    rbx,[r12+0x3]
  42723d:	cmp    eax,0x5b
  427240:	lea    rbp,[rip+0x469e]        # 42b8e5 <__ctype_b_loc@plt+0x29615>
  427247:	je     427270 <__ctype_b_loc@plt+0x24fa0>
  427249:	cmp    eax,0x25
  42724c:	jne    42742b <__ctype_b_loc@plt+0x2515b>
  427252:	cmp    BYTE PTR [rbx],0x0
  427255:	jne    427269 <__ctype_b_loc@plt+0x24f99>
  427257:	mov    rdi,QWORD PTR [r13+0x10]
  42725b:	xor    eax,eax
  42725d:	lea    rsi,[rip+0x465e]        # 42b8c2 <__ctype_b_loc@plt+0x295f2>
  427264:	call   410070 <__ctype_b_loc@plt+0xdda0>
  427269:	lea    r15,[r12+0x4]
  42726e:	jmp    4272ca <__ctype_b_loc@plt+0x24ffa>
  427270:	lea    r15,[r12+0x4]
  427275:	xor    eax,eax
  427277:	cmp    BYTE PTR [r12+0x3],0x5e
  42727d:	sete   al
  427280:	cmovne r15,rbx
  427284:	mov    al,BYTE PTR [r12+rax*1+0x3]
  427289:	nop    DWORD PTR [rax+0x0]
  427290:	test   al,al
  427292:	jne    4272a6 <__ctype_b_loc@plt+0x24fd6>
  427294:	mov    rdi,QWORD PTR [r13+0x10]
  427298:	xor    eax,eax
  42729a:	mov    rsi,rbp
  42729d:	call   410070 <__ctype_b_loc@plt+0xdda0>
  4272a2:	movzx  eax,BYTE PTR [r15]
  4272a6:	lea    rcx,[r15+0x1]
  4272aa:	cmp    al,0x25
  4272ac:	jne    4272bc <__ctype_b_loc@plt+0x24fec>
  4272ae:	cmp    BYTE PTR [r15+0x1],0x0
  4272b3:	je     4272bc <__ctype_b_loc@plt+0x24fec>
  4272b5:	add    r15,0x2
  4272b9:	mov    rcx,r15
  4272bc:	mov    r15,rcx
  4272bf:	movzx  eax,BYTE PTR [rcx]
  4272c2:	cmp    al,0x5d
  4272c4:	jne    427290 <__ctype_b_loc@plt+0x24fc0>
  4272c6:	add    r15,0x1
  4272ca:	add    r12,0x2
  4272ce:	cmp    r14,QWORD PTR [r13+0x0]
  4272d2:	je     4272e0 <__ctype_b_loc@plt+0x25010>
  4272d4:	mov    r14b,BYTE PTR [r14-0x1]
  4272d8:	jmp    4272e3 <__ctype_b_loc@plt+0x25013>
  4272da:	nop    WORD PTR [rax+rax*1+0x0]
  4272e0:	xor    r14d,r14d
  4272e3:	lea    r13,[r15-0x1]
  4272e7:	xor    eax,eax
  4272e9:	cmp    BYTE PTR [rbx],0x5e
  4272ec:	setne  al
  4272ef:	mov    DWORD PTR [rsp+0x8],eax
  4272f3:	cmove  r12,rbx
  4272f7:	lea    rbx,[r12+0x1]
  4272fc:	cmp    rbx,r13
  4272ff:	jae    427371 <__ctype_b_loc@plt+0x250a1>
  427301:	movzx  eax,r14b
  427305:	mov    DWORD PTR [rsp+0x10],eax
  427309:	mov    rax,rbx
  42730c:	mov    rbp,r12
  42730f:	nop
  427310:	movzx  ecx,BYTE PTR [rbp+0x1]
  427314:	movzx  esi,BYTE PTR [rbp+0x2]
  427318:	cmp    cl,0x25
  42731b:	jne    427340 <__ctype_b_loc@plt+0x25070>
  42731d:	mov    edi,DWORD PTR [rsp+0x10]
  427321:	call   427be0 <__ctype_b_loc@plt+0x25910>
  427326:	test   eax,eax
  427328:	jne    427380 <__ctype_b_loc@plt+0x250b0>
  42732a:	add    rbp,0x2
  42732e:	mov    rax,rbp
  427331:	jmp    427365 <__ctype_b_loc@plt+0x25095>
  427333:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42733d:	nop    DWORD PTR [rax]
  427340:	cmp    sil,0x2d
  427344:	jne    427360 <__ctype_b_loc@plt+0x25090>
  427346:	add    rbp,0x3
  42734a:	cmp    rbp,r13
  42734d:	jae    427360 <__ctype_b_loc@plt+0x25090>
  42734f:	cmp    cl,r14b
  427352:	ja     42732e <__ctype_b_loc@plt+0x2505e>
  427354:	cmp    BYTE PTR [rbp+0x0],r14b
  427358:	mov    rax,rbp
  42735b:	jb     427365 <__ctype_b_loc@plt+0x25095>
  42735d:	jmp    427380 <__ctype_b_loc@plt+0x250b0>
  42735f:	nop
  427360:	cmp    cl,r14b
  427363:	je     427380 <__ctype_b_loc@plt+0x250b0>
  427365:	mov    rbp,rax
  427368:	lea    rax,[rax+0x1]
  42736c:	cmp    rax,r13
  42736f:	jb     427310 <__ctype_b_loc@plt+0x25040>
  427371:	mov    eax,DWORD PTR [rsp+0x8]
  427375:	xor    eax,0x1
  427378:	jmp    427384 <__ctype_b_loc@plt+0x250b4>
  42737a:	nop    WORD PTR [rax+rax*1+0x0]
  427380:	mov    eax,DWORD PTR [rsp+0x8]
  427384:	test   eax,eax
  427386:	mov    r14,QWORD PTR [rsp+0x18]
  42738b:	jne    4278ec <__ctype_b_loc@plt+0x2561c>
  427391:	cmp    rbx,r13
  427394:	jae    427401 <__ctype_b_loc@plt+0x25131>
  427396:	movzx  ebp,BYTE PTR [r14]
  42739a:	nop    WORD PTR [rax+rax*1+0x0]
  4273a0:	movzx  eax,BYTE PTR [r12+0x1]
  4273a6:	movzx  esi,BYTE PTR [r12+0x2]
  4273ac:	cmp    al,0x25
  4273ae:	jne    4273d0 <__ctype_b_loc@plt+0x25100>
  4273b0:	mov    edi,ebp
  4273b2:	call   427be0 <__ctype_b_loc@plt+0x25910>
  4273b7:	test   eax,eax
  4273b9:	jne    427410 <__ctype_b_loc@plt+0x25140>
  4273bb:	add    r12,0x2
  4273bf:	mov    rbx,r12
  4273c2:	jmp    4273f5 <__ctype_b_loc@plt+0x25125>
  4273c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4273ce:	xchg   ax,ax
  4273d0:	cmp    sil,0x2d
  4273d4:	jne    4273f0 <__ctype_b_loc@plt+0x25120>
  4273d6:	add    r12,0x3
  4273da:	cmp    r12,r13
  4273dd:	jae    4273f0 <__ctype_b_loc@plt+0x25120>
  4273df:	cmp    al,bpl
  4273e2:	ja     4273bf <__ctype_b_loc@plt+0x250ef>
  4273e4:	cmp    BYTE PTR [r12],bpl
  4273e8:	mov    rbx,r12
  4273eb:	jb     4273f5 <__ctype_b_loc@plt+0x25125>
  4273ed:	jmp    427410 <__ctype_b_loc@plt+0x25140>
  4273ef:	nop
  4273f0:	cmp    al,bpl
  4273f3:	je     427410 <__ctype_b_loc@plt+0x25140>
  4273f5:	mov    r12,rbx
  4273f8:	lea    rbx,[rbx+0x1]
  4273fc:	cmp    rbx,r13
  4273ff:	jb     4273a0 <__ctype_b_loc@plt+0x250d0>
  427401:	mov    eax,DWORD PTR [rsp+0x8]
  427405:	xor    eax,0x1
  427408:	jmp    427414 <__ctype_b_loc@plt+0x25144>
  42740a:	nop    WORD PTR [rax+rax*1+0x0]
  427410:	mov    eax,DWORD PTR [rsp+0x8]
  427414:	test   eax,eax
  427416:	mov    r13,QWORD PTR [rsp+0x30]
  42741b:	mov    rbp,QWORD PTR [rsp+0x20]
  427420:	jne    4271e0 <__ctype_b_loc@plt+0x24f10>
  427426:	jmp    4278ec <__ctype_b_loc@plt+0x2561c>
  42742b:	mov    r15,rbx
  42742e:	jmp    4272ca <__ctype_b_loc@plt+0x24ffa>
  427433:	cmp    ecx,0x27
  427436:	jg     4274e8 <__ctype_b_loc@plt+0x25218>
  42743c:	test   ecx,ecx
  42743e:	je     4277bc <__ctype_b_loc@plt+0x254ec>
  427444:	cmp    ecx,0x24
  427447:	jne    4274fa <__ctype_b_loc@plt+0x2522a>
  42744d:	cmp    BYTE PTR [r12+0x1],0x0
  427453:	je     427a2a <__ctype_b_loc@plt+0x2575a>
  427459:	lea    rbx,[r12+0x1]
  42745e:	jmp    427569 <__ctype_b_loc@plt+0x25299>
  427463:	cmp    ebp,0x62
  427466:	je     42767b <__ctype_b_loc@plt+0x253ab>
  42746c:	movzx  ebx,bpl
  427470:	call   4022d0 <__ctype_b_loc@plt>
  427475:	mov    rax,QWORD PTR [rax]
  427478:	test   BYTE PTR [rax+rbx*2+0x1],0x8
  42747d:	jne    427735 <__ctype_b_loc@plt+0x25465>
  427483:	test   bpl,bpl
  427486:	jne    42749a <__ctype_b_loc@plt+0x251ca>
  427488:	mov    rdi,QWORD PTR [r13+0x10]
  42748c:	xor    eax,eax
  42748e:	lea    rsi,[rip+0x442d]        # 42b8c2 <__ctype_b_loc@plt+0x295f2>
  427495:	call   410070 <__ctype_b_loc@plt+0xdda0>
  42749a:	lea    rbx,[r12+0x1]
  42749f:	lea    r15,[r12+0x2]
  4274a4:	mov    rbp,QWORD PTR [rsp+0x20]
  4274a9:	cmp    r14,QWORD PTR [r13+0x8]
  4274ad:	jae    427576 <__ctype_b_loc@plt+0x252a6>
  4274b3:	movzx  ebp,BYTE PTR [r14]
  4274b7:	mov    al,BYTE PTR [r12]
  4274bb:	movsx  ecx,al
  4274be:	cmp    ecx,0x5b
  4274c1:	je     42757d <__ctype_b_loc@plt+0x252ad>
  4274c7:	cmp    ecx,0x2e
  4274ca:	je     427615 <__ctype_b_loc@plt+0x25345>
  4274d0:	cmp    ecx,0x25
  4274d3:	jne    42761c <__ctype_b_loc@plt+0x2534c>
  4274d9:	movzx  esi,BYTE PTR [rbx]
  4274dc:	mov    edi,ebp
  4274de:	call   427be0 <__ctype_b_loc@plt+0x25910>
  4274e3:	jmp    42763a <__ctype_b_loc@plt+0x2536a>
  4274e8:	cmp    ecx,0x29
  4274eb:	je     4277c4 <__ctype_b_loc@plt+0x254f4>
  4274f1:	cmp    ecx,0x28
  4274f4:	je     427818 <__ctype_b_loc@plt+0x25548>
  4274fa:	lea    rbx,[r12+0x1]
  4274ff:	cmp    al,0x5b
  427501:	jne    427569 <__ctype_b_loc@plt+0x25299>
  427503:	lea    r15,[r12+0x2]
  427508:	xor    eax,eax
  42750a:	cmp    BYTE PTR [r12+0x1],0x5e
  427510:	sete   al
  427513:	cmovne r15,rbx
  427517:	mov    al,BYTE PTR [r12+rax*1+0x1]
  42751c:	nop    DWORD PTR [rax+0x0]
  427520:	test   al,al
  427522:	jne    42753a <__ctype_b_loc@plt+0x2526a>
  427524:	mov    rdi,QWORD PTR [r13+0x10]
  427528:	xor    eax,eax
  42752a:	lea    rsi,[rip+0x43b4]        # 42b8e5 <__ctype_b_loc@plt+0x29615>
  427531:	call   410070 <__ctype_b_loc@plt+0xdda0>
  427536:	movzx  eax,BYTE PTR [r15]
  42753a:	lea    rcx,[r15+0x1]
  42753e:	cmp    al,0x25
  427540:	jne    427550 <__ctype_b_loc@plt+0x25280>
  427542:	cmp    BYTE PTR [r15+0x1],0x0
  427547:	je     427550 <__ctype_b_loc@plt+0x25280>
  427549:	add    r15,0x2
  42754d:	mov    rcx,r15
  427550:	mov    r15,rcx
  427553:	movzx  eax,BYTE PTR [rcx]
  427556:	cmp    al,0x5d
  427558:	jne    427520 <__ctype_b_loc@plt+0x25250>
  42755a:	add    r15,0x1
  42755e:	cmp    r14,QWORD PTR [r13+0x8]
  427562:	jae    427576 <__ctype_b_loc@plt+0x252a6>
  427564:	jmp    4274b3 <__ctype_b_loc@plt+0x251e3>
  427569:	mov    r15,rbx
  42756c:	cmp    r14,QWORD PTR [r13+0x8]
  427570:	jb     4274b3 <__ctype_b_loc@plt+0x251e3>
  427576:	xor    eax,eax
  427578:	jmp    427644 <__ctype_b_loc@plt+0x25374>
  42757d:	lea    r14,[r15-0x1]
  427581:	xor    eax,eax
  427583:	cmp    BYTE PTR [r12+0x1],0x5e
  427589:	setne  al
  42758c:	mov    DWORD PTR [rsp+0x8],eax
  427590:	mov    rax,rbx
  427593:	mov    rbx,r12
  427596:	mov    QWORD PTR [rsp+0x10],rax
  42759b:	cmove  rbx,rax
  42759f:	lea    rax,[rbx+0x1]
  4275a3:	cmp    rax,r14
  4275a6:	jae    427629 <__ctype_b_loc@plt+0x25359>
  4275ac:	nop    DWORD PTR [rax+0x0]
  4275b0:	movzx  ecx,BYTE PTR [rbx+0x1]
  4275b4:	movzx  esi,BYTE PTR [rbx+0x2]
  4275b8:	cmp    cl,0x25
  4275bb:	jne    4275d1 <__ctype_b_loc@plt+0x25301>
  4275bd:	mov    edi,ebp
  4275bf:	call   427be0 <__ctype_b_loc@plt+0x25910>
  4275c4:	test   eax,eax
  4275c6:	jne    427605 <__ctype_b_loc@plt+0x25335>
  4275c8:	add    rbx,0x2
  4275cc:	mov    rax,rbx
  4275cf:	jmp    4275ef <__ctype_b_loc@plt+0x2531f>
  4275d1:	cmp    sil,0x2d
  4275d5:	jne    4275ea <__ctype_b_loc@plt+0x2531a>
  4275d7:	add    rbx,0x3
  4275db:	cmp    rbx,r14
  4275de:	jae    4275ea <__ctype_b_loc@plt+0x2531a>
  4275e0:	cmp    cl,bpl
  4275e3:	jbe    4275fd <__ctype_b_loc@plt+0x2532d>
  4275e5:	mov    rax,rbx
  4275e8:	jmp    4275ef <__ctype_b_loc@plt+0x2531f>
  4275ea:	cmp    cl,bpl
  4275ed:	je     427605 <__ctype_b_loc@plt+0x25335>
  4275ef:	mov    rbx,rax
  4275f2:	lea    rax,[rax+0x1]
  4275f6:	cmp    rax,r14
  4275f9:	jb     4275b0 <__ctype_b_loc@plt+0x252e0>
  4275fb:	jmp    427629 <__ctype_b_loc@plt+0x25359>
  4275fd:	cmp    BYTE PTR [rbx],bpl
  427600:	mov    rax,rbx
  427603:	jb     4275ef <__ctype_b_loc@plt+0x2531f>
  427605:	mov    r14,QWORD PTR [rsp+0x18]
  42760a:	mov    rbx,QWORD PTR [rsp+0x10]
  42760f:	mov    eax,DWORD PTR [rsp+0x8]
  427613:	jmp    42763a <__ctype_b_loc@plt+0x2536a>
  427615:	mov    eax,0x1
  42761a:	jmp    42763a <__ctype_b_loc@plt+0x2536a>
  42761c:	cmp    al,bpl
  42761f:	mov    eax,0x0
  427624:	sete   al
  427627:	jmp    42763a <__ctype_b_loc@plt+0x2536a>
  427629:	mov    eax,DWORD PTR [rsp+0x8]
  42762d:	xor    eax,0x1
  427630:	mov    r14,QWORD PTR [rsp+0x18]
  427635:	mov    rbx,QWORD PTR [rsp+0x10]
  42763a:	test   eax,eax
  42763c:	setne  al
  42763f:	mov    rbp,QWORD PTR [rsp+0x20]
  427644:	movsx  ecx,BYTE PTR [r15]
  427648:	cmp    ecx,0x3f
  42764b:	jne    427708 <__ctype_b_loc@plt+0x25438>
  427651:	add    r15,0x1
  427655:	test   al,al
  427657:	je     4271e0 <__ctype_b_loc@plt+0x24f10>
  42765d:	mov    rdi,r13
  427660:	mov    rsi,QWORD PTR [rsp+0x28]
  427665:	mov    rdx,r15
  427668:	call   427190 <__ctype_b_loc@plt+0x24ec0>
  42766d:	test   rax,rax
  427670:	je     4271e0 <__ctype_b_loc@plt+0x24f10>
  427676:	jmp    4278ee <__ctype_b_loc@plt+0x2561e>
  42767b:	mov    al,BYTE PTR [r12+0x2]
  427680:	test   al,al
  427682:	je     42768c <__ctype_b_loc@plt+0x253bc>
  427684:	cmp    BYTE PTR [r12+0x3],0x0
  42768a:	jne    4276a3 <__ctype_b_loc@plt+0x253d3>
  42768c:	mov    rdi,QWORD PTR [r13+0x10]
  427690:	xor    eax,eax
  427692:	lea    rsi,[rip+0x4216]        # 42b8af <__ctype_b_loc@plt+0x295df>
  427699:	call   410070 <__ctype_b_loc@plt+0xdda0>
  42769e:	mov    al,BYTE PTR [r12+0x2]
  4276a3:	cmp    BYTE PTR [r14],al
  4276a6:	mov    rbp,QWORD PTR [rsp+0x20]
  4276ab:	jne    4278ec <__ctype_b_loc@plt+0x2561c>
  4276b1:	add    r14,0x1
  4276b5:	mov    rcx,QWORD PTR [r13+0x8]
  4276b9:	cmp    r14,rcx
  4276bc:	jae    4278ec <__ctype_b_loc@plt+0x2561c>
  4276c2:	mov    dl,BYTE PTR [r12+0x3]
  4276c7:	mov    esi,0x1
  4276cc:	nop    DWORD PTR [rax+0x0]
  4276d0:	movzx  ebx,BYTE PTR [r14]
  4276d4:	cmp    bl,dl
  4276d6:	jne    4276f0 <__ctype_b_loc@plt+0x25420>
  4276d8:	add    esi,0xffffffff
  4276db:	jne    4276fa <__ctype_b_loc@plt+0x2542a>
  4276dd:	jmp    4271b7 <__ctype_b_loc@plt+0x24ee7>
  4276e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4276ec:	nop    DWORD PTR [rax+0x0]
  4276f0:	xor    edi,edi
  4276f2:	cmp    bl,al
  4276f4:	sete   dil
  4276f8:	add    esi,edi
  4276fa:	add    r14,0x1
  4276fe:	cmp    r14,rcx
  427701:	jb     4276d0 <__ctype_b_loc@plt+0x25400>
  427703:	jmp    4278ec <__ctype_b_loc@plt+0x2561c>
  427708:	cmp    ecx,0x2a
  42770b:	je     427905 <__ctype_b_loc@plt+0x25635>
  427711:	cmp    ecx,0x2b
  427714:	je     4278fd <__ctype_b_loc@plt+0x2562d>
  42771a:	cmp    ecx,0x2d
  42771d:	je     427924 <__ctype_b_loc@plt+0x25654>
  427723:	mov    r14,QWORD PTR [rsp+0x28]
  427728:	test   al,al
  42772a:	jne    4271d0 <__ctype_b_loc@plt+0x24f00>
  427730:	jmp    4278ec <__ctype_b_loc@plt+0x2561c>
  427735:	cmp    bl,0x31
  427738:	jb     427756 <__ctype_b_loc@plt+0x25486>
  42773a:	add    rbx,0xffffffffffffffcf
  42773e:	cmp    ebx,DWORD PTR [r13+0x18]
  427742:	jge    427756 <__ctype_b_loc@plt+0x25486>
  427744:	mov    rax,rbx
  427747:	shl    rax,0x4
  42774b:	mov    rbp,QWORD PTR [r13+rax*1+0x28]
  427750:	cmp    rbp,0xffffffffffffffff
  427754:	jne    42776e <__ctype_b_loc@plt+0x2549e>
  427756:	mov    rdi,QWORD PTR [r13+0x10]
  42775a:	xor    ebx,ebx
  42775c:	xor    eax,eax
  42775e:	lea    rsi,[rip+0x41a0]        # 42b905 <__ctype_b_loc@plt+0x29635>
  427765:	call   410070 <__ctype_b_loc@plt+0xdda0>
  42776a:	mov    rbp,QWORD PTR [r13+0x28]
  42776e:	mov    rax,QWORD PTR [r13+0x8]
  427772:	sub    rax,r14
  427775:	cmp    rax,rbp
  427778:	jb     4278ec <__ctype_b_loc@plt+0x2561c>
  42777e:	movsxd rax,ebx
  427781:	shl    rax,0x4
  427785:	mov    rdi,QWORD PTR [r13+rax*1+0x20]
  42778a:	mov    rsi,r14
  42778d:	mov    rdx,rbp
  427790:	call   402150 <memcmp@plt>
  427795:	add    r14,rbp
  427798:	je     4278ec <__ctype_b_loc@plt+0x2561c>
  42779e:	test   eax,eax
  4277a0:	mov    eax,0x0
  4277a5:	mov    rbp,QWORD PTR [rsp+0x20]
  4277aa:	jne    4278ee <__ctype_b_loc@plt+0x2561e>
  4277b0:	add    r12,0x2
  4277b4:	mov    r15,r12
  4277b7:	jmp    4271d0 <__ctype_b_loc@plt+0x24f00>
  4277bc:	mov    rax,r14
  4277bf:	jmp    4278ee <__ctype_b_loc@plt+0x2561e>
  4277c4:	add    r12,0x1
  4277c8:	movsxd rdx,DWORD PTR [r13+0x18]
  4277cc:	mov    rax,rdx
  4277cf:	shl    rax,0x20
  4277d3:	lea    rcx,[rdx+0x1]
  4277d7:	shl    rdx,0x4
  4277db:	add    rdx,r13
  4277de:	add    rdx,0x18
  4277e2:	movabs rsi,0xffffffff00000000
  4277ec:	nop    DWORD PTR [rax+0x0]
  4277f0:	add    rcx,0xffffffffffffffff
  4277f4:	jle    427857 <__ctype_b_loc@plt+0x25587>
  4277f6:	add    rax,rsi
  4277f9:	cmp    QWORD PTR [rdx],0xffffffffffffffff
  4277fd:	lea    rdx,[rdx-0x10]
  427801:	jne    4277f0 <__ctype_b_loc@plt+0x25520>
  427803:	mov    rbx,rax
  427806:	sar    rbx,0x20
  42780a:	sar    rax,0x1c
  42780e:	lea    rbp,[rax+r13*1]
  427812:	add    rbp,0x28
  427816:	jmp    42786b <__ctype_b_loc@plt+0x2559b>
  427818:	cmp    BYTE PTR [r12+0x1],0x29
  42781e:	jne    427898 <__ctype_b_loc@plt+0x255c8>
  427820:	add    r12,0x2
  427824:	movsxd rbx,DWORD PTR [r13+0x18]
  427828:	cmp    rbx,0x20
  42782c:	jl     427840 <__ctype_b_loc@plt+0x25570>
  42782e:	mov    rdi,QWORD PTR [r13+0x10]
  427832:	lea    rsi,[rip+0x404c]        # 42b885 <__ctype_b_loc@plt+0x295b5>
  427839:	xor    eax,eax
  42783b:	call   410070 <__ctype_b_loc@plt+0xdda0>
  427840:	mov    rax,rbx
  427843:	shl    rax,0x4
  427847:	mov    QWORD PTR [r13+rax*1+0x20],r14
  42784c:	mov    QWORD PTR [r13+rax*1+0x28],0xfffffffffffffffe
  427855:	jmp    4278cd <__ctype_b_loc@plt+0x255fd>
  427857:	mov    rdi,QWORD PTR [r13+0x10]
  42785b:	lea    rsi,[rip+0x4035]        # 42b897 <__ctype_b_loc@plt+0x295c7>
  427862:	xor    ebx,ebx
  427864:	xor    eax,eax
  427866:	call   410070 <__ctype_b_loc@plt+0xdda0>
  42786b:	shl    rbx,0x4
  42786f:	mov    rax,r14
  427872:	sub    rax,QWORD PTR [r13+rbx*1+0x20]
  427877:	mov    QWORD PTR [rbp+0x0],rax
  42787b:	mov    rdi,r13
  42787e:	mov    rsi,r14
  427881:	mov    rdx,r12
  427884:	call   427190 <__ctype_b_loc@plt+0x24ec0>
  427889:	test   rax,rax
  42788c:	jne    4278ee <__ctype_b_loc@plt+0x2561e>
  42788e:	mov    QWORD PTR [rbp+0x0],0xffffffffffffffff
  427896:	jmp    4278ec <__ctype_b_loc@plt+0x2561c>
  427898:	add    r12,0x1
  42789c:	movsxd rbx,DWORD PTR [r13+0x18]
  4278a0:	cmp    rbx,0x20
  4278a4:	jl     4278b8 <__ctype_b_loc@plt+0x255e8>
  4278a6:	mov    rdi,QWORD PTR [r13+0x10]
  4278aa:	lea    rsi,[rip+0x3fd4]        # 42b885 <__ctype_b_loc@plt+0x295b5>
  4278b1:	xor    eax,eax
  4278b3:	call   410070 <__ctype_b_loc@plt+0xdda0>
  4278b8:	mov    rax,rbx
  4278bb:	shl    rax,0x4
  4278bf:	mov    QWORD PTR [r13+rax*1+0x20],r14
  4278c4:	mov    QWORD PTR [r13+rax*1+0x28],0xffffffffffffffff
  4278cd:	lea    eax,[rbx+0x1]
  4278d0:	mov    DWORD PTR [r13+0x18],eax
  4278d4:	mov    rdi,r13
  4278d7:	mov    rsi,r14
  4278da:	mov    rdx,r12
  4278dd:	call   427190 <__ctype_b_loc@plt+0x24ec0>
  4278e2:	test   rax,rax
  4278e5:	jne    4278ee <__ctype_b_loc@plt+0x2561e>
  4278e7:	add    DWORD PTR [r13+0x18],0xffffffff
  4278ec:	xor    eax,eax
  4278ee:	add    rsp,0x38
  4278f2:	pop    rbx
  4278f3:	pop    r12
  4278f5:	pop    r13
  4278f7:	pop    r14
  4278f9:	pop    r15
  4278fb:	pop    rbp
  4278fc:	ret    
  4278fd:	test   al,al
  4278ff:	je     4278ec <__ctype_b_loc@plt+0x2561c>
  427901:	add    r14,0x1
  427905:	mov    rdi,r13
  427908:	mov    rsi,r14
  42790b:	mov    rdx,r12
  42790e:	mov    rcx,r15
  427911:	add    rsp,0x38
  427915:	pop    rbx
  427916:	pop    r12
  427918:	pop    r13
  42791a:	pop    r14
  42791c:	pop    r15
  42791e:	pop    rbp
  42791f:	jmp    427a40 <__ctype_b_loc@plt+0x25770>
  427924:	lea    rax,[r15+0x1]
  427928:	mov    QWORD PTR [rsp+0x8],rax
  42792d:	add    r15,0xffffffffffffffff
  427931:	mov    QWORD PTR [rsp+0x10],rbx
  427936:	mov    rdi,r13
  427939:	mov    rsi,r14
  42793c:	mov    rdx,QWORD PTR [rsp+0x8]
  427941:	call   427190 <__ctype_b_loc@plt+0x24ec0>
  427946:	test   rax,rax
  427949:	jne    4278ee <__ctype_b_loc@plt+0x2561e>
  42794b:	cmp    r14,QWORD PTR [r13+0x8]
  42794f:	jae    4278ec <__ctype_b_loc@plt+0x2561c>
  427951:	movzx  r13d,BYTE PTR [r14]
  427955:	mov    al,BYTE PTR [r12]
  427959:	movsx  ecx,al
  42795c:	cmp    ecx,0x5b
  42795f:	je     427985 <__ctype_b_loc@plt+0x256b5>
  427961:	cmp    ecx,0x2e
  427964:	je     4279ff <__ctype_b_loc@plt+0x2572f>
  42796a:	cmp    ecx,0x25
  42796d:	jne    427a06 <__ctype_b_loc@plt+0x25736>
  427973:	movzx  esi,BYTE PTR [rbx]
  427976:	mov    edi,r13d
  427979:	call   427be0 <__ctype_b_loc@plt+0x25910>
  42797e:	mov    ebp,eax
  427980:	jmp    427a0f <__ctype_b_loc@plt+0x2573f>
  427985:	xor    ebp,ebp
  427987:	cmp    BYTE PTR [r12+0x1],0x5e
  42798d:	setne  bpl
  427991:	mov    rax,rbx
  427994:	mov    rbx,r12
  427997:	cmove  rbx,rax
  42799b:	lea    rax,[rbx+0x1]
  42799f:	cmp    rax,r15
  4279a2:	jae    4279f5 <__ctype_b_loc@plt+0x25725>
  4279a4:	movzx  ecx,BYTE PTR [rbx+0x1]
  4279a8:	movzx  esi,BYTE PTR [rbx+0x2]
  4279ac:	cmp    cl,0x25
  4279af:	jne    4279c6 <__ctype_b_loc@plt+0x256f6>
  4279b1:	mov    edi,r13d
  4279b4:	call   427be0 <__ctype_b_loc@plt+0x25910>
  4279b9:	test   eax,eax
  4279bb:	jne    4279f8 <__ctype_b_loc@plt+0x25728>
  4279bd:	add    rbx,0x2
  4279c1:	mov    rax,rbx
  4279c4:	jmp    4279e9 <__ctype_b_loc@plt+0x25719>
  4279c6:	cmp    sil,0x2d
  4279ca:	jne    4279e4 <__ctype_b_loc@plt+0x25714>
  4279cc:	add    rbx,0x3
  4279d0:	cmp    rbx,r15
  4279d3:	jae    4279e4 <__ctype_b_loc@plt+0x25714>
  4279d5:	cmp    cl,r13b
  4279d8:	ja     4279c1 <__ctype_b_loc@plt+0x256f1>
  4279da:	cmp    BYTE PTR [rbx],r13b
  4279dd:	mov    rax,rbx
  4279e0:	jb     4279e9 <__ctype_b_loc@plt+0x25719>
  4279e2:	jmp    4279f8 <__ctype_b_loc@plt+0x25728>
  4279e4:	cmp    cl,r13b
  4279e7:	je     4279f8 <__ctype_b_loc@plt+0x25728>
  4279e9:	mov    rbx,rax
  4279ec:	lea    rax,[rax+0x1]
  4279f0:	cmp    rax,r15
  4279f3:	jb     4279a4 <__ctype_b_loc@plt+0x256d4>
  4279f5:	xor    ebp,0x1
  4279f8:	mov    rbx,QWORD PTR [rsp+0x10]
  4279fd:	jmp    427a0f <__ctype_b_loc@plt+0x2573f>
  4279ff:	mov    ebp,0x1
  427a04:	jmp    427a0f <__ctype_b_loc@plt+0x2573f>
  427a06:	xor    ebp,ebp
  427a08:	cmp    al,r13b
  427a0b:	sete   bpl
  427a0f:	add    r14,0x1
  427a13:	test   ebp,ebp
  427a15:	mov    r13,QWORD PTR [rsp+0x30]
  427a1a:	mov    eax,0x0
  427a1f:	jne    427936 <__ctype_b_loc@plt+0x25666>
  427a25:	jmp    4278ee <__ctype_b_loc@plt+0x2561e>
  427a2a:	xor    eax,eax
  427a2c:	cmp    r14,QWORD PTR [r13+0x8]
  427a30:	cmove  rax,r14
  427a34:	jmp    4278ee <__ctype_b_loc@plt+0x2561e>
  427a39:	nop    DWORD PTR [rax+0x0]
  427a40:	push   rbp
  427a41:	push   r15
  427a43:	push   r14
  427a45:	push   r13
  427a47:	push   r12
  427a49:	push   rbx
  427a4a:	sub    rsp,0x38
  427a4e:	mov    r13,rsi
  427a51:	mov    QWORD PTR [rsp+0x20],rdi
  427a56:	mov    rax,QWORD PTR [rdi+0x8]
  427a5a:	mov    QWORD PTR [rsp+0x30],rax
  427a5f:	cmp    rax,rsi
  427a62:	mov    QWORD PTR [rsp+0x28],rcx
  427a67:	jbe    427b89 <__ctype_b_loc@plt+0x258b9>
  427a6d:	mov    r15,rdx
  427a70:	movsx  edx,BYTE PTR [rdx]
  427a73:	lea    rax,[r15+0x1]
  427a77:	mov    QWORD PTR [rsp+0x18],rax
  427a7c:	lea    r14,[rcx-0x1]
  427a80:	xor    r12d,r12d
  427a83:	mov    DWORD PTR [rsp+0x14],edx
  427a87:	mov    QWORD PTR [rsp+0x8],r15
  427a8c:	nop    DWORD PTR [rax+0x0]
  427a90:	movzx  ebx,BYTE PTR [r13+r12*1+0x0]
  427a96:	cmp    edx,0x5b
  427a99:	je     427ad0 <__ctype_b_loc@plt+0x25800>
  427a9b:	cmp    edx,0x2e
  427a9e:	je     427b70 <__ctype_b_loc@plt+0x258a0>
  427aa4:	cmp    edx,0x25
  427aa7:	jne    427b60 <__ctype_b_loc@plt+0x25890>
  427aad:	mov    rax,QWORD PTR [rsp+0x18]
  427ab2:	movzx  esi,BYTE PTR [rax]
  427ab5:	mov    edi,ebx
  427ab7:	call   427be0 <__ctype_b_loc@plt+0x25910>
  427abc:	mov    ebp,eax
  427abe:	jmp    427b68 <__ctype_b_loc@plt+0x25898>
  427ac3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427acd:	nop    DWORD PTR [rax]
  427ad0:	xor    ebp,ebp
  427ad2:	cmp    BYTE PTR [r15+0x1],0x5e
  427ad7:	setne  bpl
  427adb:	cmove  r15,QWORD PTR [rsp+0x18]
  427ae1:	lea    rax,[r15+0x1]
  427ae5:	cmp    rax,r14
  427ae8:	jae    427b50 <__ctype_b_loc@plt+0x25880>
  427aea:	nop    WORD PTR [rax+rax*1+0x0]
  427af0:	movzx  ecx,BYTE PTR [r15+0x1]
  427af5:	movzx  esi,BYTE PTR [r15+0x2]
  427afa:	cmp    cl,0x25
  427afd:	jne    427b20 <__ctype_b_loc@plt+0x25850>
  427aff:	mov    edi,ebx
  427b01:	call   427be0 <__ctype_b_loc@plt+0x25910>
  427b06:	test   eax,eax
  427b08:	jne    427b53 <__ctype_b_loc@plt+0x25883>
  427b0a:	add    r15,0x2
  427b0e:	mov    rax,r15
  427b11:	jmp    427b44 <__ctype_b_loc@plt+0x25874>
  427b13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427b1d:	nop    DWORD PTR [rax]
  427b20:	cmp    sil,0x2d
  427b24:	jne    427b40 <__ctype_b_loc@plt+0x25870>
  427b26:	add    r15,0x3
  427b2a:	cmp    r15,r14
  427b2d:	jae    427b40 <__ctype_b_loc@plt+0x25870>
  427b2f:	cmp    cl,bl
  427b31:	ja     427b0e <__ctype_b_loc@plt+0x2583e>
  427b33:	cmp    BYTE PTR [r15],bl
  427b36:	mov    rax,r15
  427b39:	jb     427b44 <__ctype_b_loc@plt+0x25874>
  427b3b:	jmp    427b53 <__ctype_b_loc@plt+0x25883>
  427b3d:	nop    DWORD PTR [rax]
  427b40:	cmp    cl,bl
  427b42:	je     427b53 <__ctype_b_loc@plt+0x25883>
  427b44:	mov    r15,rax
  427b47:	lea    rax,[rax+0x1]
  427b4b:	cmp    rax,r14
  427b4e:	jb     427af0 <__ctype_b_loc@plt+0x25820>
  427b50:	xor    ebp,0x1
  427b53:	mov    r15,QWORD PTR [rsp+0x8]
  427b58:	jmp    427b68 <__ctype_b_loc@plt+0x25898>
  427b5a:	nop    WORD PTR [rax+rax*1+0x0]
  427b60:	xor    ebp,ebp
  427b62:	cmp    dl,bl
  427b64:	sete   bpl
  427b68:	test   ebp,ebp
  427b6a:	mov    edx,DWORD PTR [rsp+0x14]
  427b6e:	je     427b8c <__ctype_b_loc@plt+0x258bc>
  427b70:	lea    rax,[r12+r13*1]
  427b74:	add    rax,0x1
  427b78:	add    r12,0x1
  427b7c:	cmp    rax,QWORD PTR [rsp+0x30]
  427b81:	jb     427a90 <__ctype_b_loc@plt+0x257c0>
  427b87:	jmp    427b8c <__ctype_b_loc@plt+0x258bc>
  427b89:	xor    r12d,r12d
  427b8c:	mov    rbp,QWORD PTR [rsp+0x28]
  427b91:	add    rbp,0x1
  427b95:	xor    r14d,r14d
  427b98:	mov    rbx,QWORD PTR [rsp+0x20]
  427b9d:	nop    DWORD PTR [rax]
  427ba0:	test   r12,r12
  427ba3:	js     427bc0 <__ctype_b_loc@plt+0x258f0>
  427ba5:	lea    rsi,[r12+r13*1]
  427ba9:	mov    rdi,rbx
  427bac:	mov    rdx,rbp
  427baf:	call   427190 <__ctype_b_loc@plt+0x24ec0>
  427bb4:	add    r12,0xffffffffffffffff
  427bb8:	test   rax,rax
  427bbb:	je     427ba0 <__ctype_b_loc@plt+0x258d0>
  427bbd:	mov    r14,rax
  427bc0:	mov    rax,r14
  427bc3:	add    rsp,0x38
  427bc7:	pop    rbx
  427bc8:	pop    r12
  427bca:	pop    r13
  427bcc:	pop    r14
  427bce:	pop    r15
  427bd0:	pop    rbp
  427bd1:	ret    
  427bd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427bdc:	nop    DWORD PTR [rax+0x0]
  427be0:	push   rbp
  427be1:	push   r14
  427be3:	push   rbx
  427be4:	mov    ebx,esi
  427be6:	mov    r14d,edi
  427be9:	mov    ecx,esi
  427beb:	sub    ecx,0xffffff80
  427bee:	mov    eax,esi
  427bf0:	cmp    ecx,0x17f
  427bf6:	ja     427c06 <__ctype_b_loc@plt+0x25936>
  427bf8:	call   4022c0 <__ctype_tolower_loc@plt>
  427bfd:	mov    rax,QWORD PTR [rax]
  427c00:	movsxd rcx,ebx
  427c03:	mov    eax,DWORD PTR [rax+rcx*4]
  427c06:	add    eax,0xffffff9f
  427c09:	cmp    eax,0x19
  427c0c:	ja     427c38 <__ctype_b_loc@plt+0x25968>
  427c0e:	lea    rcx,[rip+0x2e8b]        # 42aaa0 <__ctype_b_loc@plt+0x287d0>
  427c15:	movsxd rax,DWORD PTR [rcx+rax*4]
  427c19:	add    rax,rcx
  427c1c:	jmp    rax
  427c1e:	call   4022d0 <__ctype_b_loc@plt>
  427c23:	mov    rcx,QWORD PTR [rax]
  427c26:	movsxd rdx,r14d
  427c29:	movzx  ebp,WORD PTR [rcx+rdx*2]
  427c2d:	and    ebp,0x400
  427c33:	jmp    427d08 <__ctype_b_loc@plt+0x25a38>
  427c38:	xor    eax,eax
  427c3a:	cmp    ebx,r14d
  427c3d:	sete   al
  427c40:	jmp    427d1d <__ctype_b_loc@plt+0x25a4d>
  427c45:	call   4022d0 <__ctype_b_loc@plt>
  427c4a:	mov    rcx,QWORD PTR [rax]
  427c4d:	movsxd rdx,r14d
  427c50:	movzx  ebp,WORD PTR [rcx+rdx*2]
  427c54:	and    ebp,0x2
  427c57:	jmp    427d08 <__ctype_b_loc@plt+0x25a38>
  427c5c:	call   4022d0 <__ctype_b_loc@plt>
  427c61:	mov    rcx,QWORD PTR [rax]
  427c64:	movsxd rdx,r14d
  427c67:	movzx  ebp,WORD PTR [rcx+rdx*2]
  427c6b:	and    ebp,0x800
  427c71:	jmp    427d08 <__ctype_b_loc@plt+0x25a38>
  427c76:	call   4022d0 <__ctype_b_loc@plt>
  427c7b:	mov    rcx,QWORD PTR [rax]
  427c7e:	movsxd rdx,r14d
  427c81:	movzx  ebp,WORD PTR [rcx+rdx*2]
  427c85:	and    ebp,0x200
  427c8b:	jmp    427d08 <__ctype_b_loc@plt+0x25a38>
  427c8d:	call   4022d0 <__ctype_b_loc@plt>
  427c92:	mov    rcx,QWORD PTR [rax]
  427c95:	movsxd rdx,r14d
  427c98:	movzx  ebp,WORD PTR [rcx+rdx*2]
  427c9c:	and    ebp,0x4
  427c9f:	jmp    427d08 <__ctype_b_loc@plt+0x25a38>
  427ca1:	call   4022d0 <__ctype_b_loc@plt>
  427ca6:	mov    rcx,QWORD PTR [rax]
  427ca9:	movsxd rdx,r14d
  427cac:	movzx  ebp,WORD PTR [rcx+rdx*2]
  427cb0:	and    ebp,0x2000
  427cb6:	jmp    427d08 <__ctype_b_loc@plt+0x25a38>
  427cb8:	call   4022d0 <__ctype_b_loc@plt>
  427cbd:	mov    rcx,QWORD PTR [rax]
  427cc0:	movsxd rdx,r14d
  427cc3:	movzx  ebp,WORD PTR [rcx+rdx*2]
  427cc7:	and    ebp,0x100
  427ccd:	jmp    427d08 <__ctype_b_loc@plt+0x25a38>
  427ccf:	call   4022d0 <__ctype_b_loc@plt>
  427cd4:	mov    rcx,QWORD PTR [rax]
  427cd7:	movsxd rdx,r14d
  427cda:	movzx  ebp,WORD PTR [rcx+rdx*2]
  427cde:	and    ebp,0x8
  427ce1:	jmp    427d08 <__ctype_b_loc@plt+0x25a38>
  427ce3:	call   4022d0 <__ctype_b_loc@plt>
  427ce8:	mov    rcx,QWORD PTR [rax]
  427ceb:	movsxd rdx,r14d
  427cee:	movzx  ebp,WORD PTR [rcx+rdx*2]
  427cf2:	and    ebp,0x1000
  427cf8:	jmp    427d08 <__ctype_b_loc@plt+0x25a38>
  427cfa:	xor    ebp,ebp
  427cfc:	test   r14d,r14d
  427cff:	sete   bpl
  427d03:	call   4022d0 <__ctype_b_loc@plt>
  427d08:	mov    rcx,QWORD PTR [rax]
  427d0b:	movsxd rdx,ebx
  427d0e:	xor    eax,eax
  427d10:	test   ebp,ebp
  427d12:	sete   al
  427d15:	test   BYTE PTR [rcx+rdx*2+0x1],0x2
  427d1a:	cmovne eax,ebp
  427d1d:	pop    rbx
  427d1e:	pop    r14
  427d20:	pop    rbp
  427d21:	ret    
  427d22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427d2c:	nop    DWORD PTR [rax+0x0]
  427d30:	push   r15
  427d32:	push   r14
  427d34:	push   r12
  427d36:	push   rbx
  427d37:	push   rax
  427d38:	mov    rbx,rdi
  427d3b:	cmp    DWORD PTR [rdi+0x18],esi
  427d3e:	jle    427d7e <__ctype_b_loc@plt+0x25aae>
  427d40:	movsxd r12,esi
  427d43:	shl    r12,0x4
  427d47:	mov    r14,QWORD PTR [rbx+r12*1+0x28]
  427d4c:	cmp    r14,0xffffffffffffffff
  427d50:	je     427da2 <__ctype_b_loc@plt+0x25ad2>
  427d52:	mov    r15,QWORD PTR [rbx+0x10]
  427d56:	mov    r12,QWORD PTR [rbx+r12*1+0x20]
  427d5b:	cmp    r14,0xfffffffffffffffe
  427d5f:	jne    427dbd <__ctype_b_loc@plt+0x25aed>
  427d61:	add    r12,0x1
  427d65:	sub    r12,QWORD PTR [rbx]
  427d68:	mov    rax,QWORD PTR [r15+0x10]
  427d6c:	vcvtsi2sd xmm0,xmm0,r12
  427d71:	vmovsd QWORD PTR [rax],xmm0
  427d75:	mov    DWORD PTR [rax+0x8],0x3
  427d7c:	jmp    427def <__ctype_b_loc@plt+0x25b1f>
  427d7e:	mov    rbx,QWORD PTR [rbx+0x10]
  427d82:	test   esi,esi
  427d84:	je     427df6 <__ctype_b_loc@plt+0x25b26>
  427d86:	lea    rsi,[rip+0x3b78]        # 42b905 <__ctype_b_loc@plt+0x29635>
  427d8d:	xor    eax,eax
  427d8f:	mov    rdi,rbx
  427d92:	add    rsp,0x8
  427d96:	pop    rbx
  427d97:	pop    r12
  427d99:	pop    r14
  427d9b:	pop    r15
  427d9d:	jmp    410070 <__ctype_b_loc@plt+0xdda0>
  427da2:	mov    rdi,QWORD PTR [rbx+0x10]
  427da6:	lea    rsi,[rip+0x3b6e]        # 42b91b <__ctype_b_loc@plt+0x2964b>
  427dad:	xor    eax,eax
  427daf:	call   410070 <__ctype_b_loc@plt+0xdda0>
  427db4:	mov    r15,QWORD PTR [rbx+0x10]
  427db8:	mov    r12,QWORD PTR [rbx+r12*1+0x20]
  427dbd:	mov    rax,QWORD PTR [r15+0x20]
  427dc1:	mov    rcx,QWORD PTR [rax+0x78]
  427dc5:	cmp    rcx,QWORD PTR [rax+0x70]
  427dc9:	jb     427dd3 <__ctype_b_loc@plt+0x25b03>
  427dcb:	mov    rdi,r15
  427dce:	call   408070 <__ctype_b_loc@plt+0x5da0>
  427dd3:	mov    rbx,QWORD PTR [r15+0x10]
  427dd7:	mov    rdi,r15
  427dda:	mov    rsi,r12
  427ddd:	mov    rdx,r14
  427de0:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  427de5:	mov    QWORD PTR [rbx],rax
  427de8:	mov    DWORD PTR [rbx+0x8],0x4
  427def:	add    QWORD PTR [r15+0x10],0x10
  427df4:	jmp    427e39 <__ctype_b_loc@plt+0x25b69>
  427df6:	mov    r14,rcx
  427df9:	mov    r15,rdx
  427dfc:	sub    r14,rdx
  427dff:	mov    rax,QWORD PTR [rbx+0x20]
  427e03:	mov    rcx,QWORD PTR [rax+0x78]
  427e07:	cmp    rcx,QWORD PTR [rax+0x70]
  427e0b:	jb     427e15 <__ctype_b_loc@plt+0x25b45>
  427e0d:	mov    rdi,rbx
  427e10:	call   408070 <__ctype_b_loc@plt+0x5da0>
  427e15:	mov    r12,QWORD PTR [rbx+0x10]
  427e19:	mov    rdi,rbx
  427e1c:	mov    rsi,r15
  427e1f:	mov    rdx,r14
  427e22:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  427e27:	mov    QWORD PTR [r12],rax
  427e2b:	mov    DWORD PTR [r12+0x8],0x4
  427e34:	add    QWORD PTR [rbx+0x10],0x10
  427e39:	add    rsp,0x8
  427e3d:	pop    rbx
  427e3e:	pop    r12
  427e40:	pop    r14
  427e42:	pop    r15
  427e44:	ret    
  427e45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427e4f:	nop
  427e50:	push   rbp
  427e51:	push   r15
  427e53:	push   r14
  427e55:	push   r13
  427e57:	push   r12
  427e59:	push   rbx
  427e5a:	sub    rsp,0x248
  427e61:	mov    r13,rdi
  427e64:	mov    rax,QWORD PTR [rdi+0x28]
  427e68:	mov    rax,QWORD PTR [rax+0x8]
  427e6c:	mov    rbx,QWORD PTR [rax]
  427e6f:	mov    cl,BYTE PTR [rbx+0xb]
  427e72:	lea    rbp,[rbx+0x28]
  427e76:	test   cl,cl
  427e78:	lea    rsi,[rip+0x2c99]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  427e7f:	cmove  rbp,rsi
  427e83:	mov    edx,DWORD PTR [rbp+0x8]
  427e86:	cmp    edx,0x4
  427e89:	je     427f0a <__ctype_b_loc@plt+0x25c3a>
  427e8b:	xor    r12d,r12d
  427e8e:	mov    r14d,0x0
  427e94:	cmp    edx,0x3
  427e97:	jne    427f16 <__ctype_b_loc@plt+0x25c46>
  427e99:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  427e9e:	lea    rsi,[rip+0x2f7c]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  427ea5:	lea    rbx,[rsp+0x20]
  427eaa:	mov    al,0x1
  427eac:	mov    rdi,rbx
  427eaf:	call   402270 <sprintf@plt>
  427eb4:	mov    rdi,rbx
  427eb7:	call   4020e0 <strlen@plt>
  427ebc:	mov    rdi,r13
  427ebf:	mov    rsi,rbx
  427ec2:	mov    rdx,rax
  427ec5:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  427eca:	mov    QWORD PTR [rbp+0x0],rax
  427ece:	mov    DWORD PTR [rbp+0x8],0x4
  427ed5:	mov    rax,QWORD PTR [r13+0x20]
  427ed9:	mov    rcx,QWORD PTR [rax+0x78]
  427edd:	cmp    rcx,QWORD PTR [rax+0x70]
  427ee1:	jb     427eeb <__ctype_b_loc@plt+0x25c1b>
  427ee3:	mov    rdi,r13
  427ee6:	call   408070 <__ctype_b_loc@plt+0x5da0>
  427eeb:	mov    rax,QWORD PTR [r13+0x28]
  427eef:	mov    rax,QWORD PTR [rax+0x8]
  427ef3:	mov    rbx,QWORD PTR [rax]
  427ef6:	mov    cl,BYTE PTR [rbx+0xb]
  427ef9:	lea    rbp,[rbx+0x28]
  427efd:	test   cl,cl
  427eff:	lea    rsi,[rip+0x2c12]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  427f06:	cmove  rbp,rsi
  427f0a:	mov    r14,QWORD PTR [rbp+0x0]
  427f0e:	mov    r12,QWORD PTR [r14+0x10]
  427f12:	add    r14,0x18
  427f16:	add    rbx,0x38
  427f1a:	cmp    cl,0x2
  427f1d:	cmovb  rbx,rsi
  427f21:	mov    ecx,DWORD PTR [rbx+0x8]
  427f24:	cmp    ecx,0x4
  427f27:	je     427f9c <__ctype_b_loc@plt+0x25ccc>
  427f29:	cmp    ecx,0x3
  427f2c:	jne    427fa5 <__ctype_b_loc@plt+0x25cd5>
  427f2e:	vmovsd xmm0,QWORD PTR [rbx]
  427f32:	lea    rsi,[rip+0x2ee8]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  427f39:	lea    r15,[rsp+0x20]
  427f3e:	mov    al,0x1
  427f40:	mov    rdi,r15
  427f43:	call   402270 <sprintf@plt>
  427f48:	mov    rdi,r15
  427f4b:	call   4020e0 <strlen@plt>
  427f50:	mov    rdi,r13
  427f53:	mov    rsi,r15
  427f56:	mov    rdx,rax
  427f59:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  427f5e:	mov    QWORD PTR [rbx],rax
  427f61:	mov    DWORD PTR [rbx+0x8],0x4
  427f68:	mov    rax,QWORD PTR [r13+0x20]
  427f6c:	mov    rcx,QWORD PTR [rax+0x78]
  427f70:	cmp    rcx,QWORD PTR [rax+0x70]
  427f74:	jb     427f7e <__ctype_b_loc@plt+0x25cae>
  427f76:	mov    rdi,r13
  427f79:	call   408070 <__ctype_b_loc@plt+0x5da0>
  427f7e:	mov    rax,QWORD PTR [r13+0x28]
  427f82:	mov    rax,QWORD PTR [rax+0x8]
  427f86:	mov    rcx,QWORD PTR [rax]
  427f89:	cmp    BYTE PTR [rcx+0xb],0x2
  427f8d:	lea    rbx,[rcx+0x38]
  427f91:	lea    rsi,[rip+0x2b80]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  427f98:	cmovb  rbx,rsi
  427f9c:	mov    r15,QWORD PTR [rbx]
  427f9f:	add    r15,0x18
  427fa3:	jmp    427fa8 <__ctype_b_loc@plt+0x25cd8>
  427fa5:	xor    r15d,r15d
  427fa8:	mov    QWORD PTR [rsp+0x30],r13
  427fad:	mov    QWORD PTR [rsp+0x20],r14
  427fb2:	add    r12,r14
  427fb5:	mov    QWORD PTR [rsp+0x28],r12
  427fba:	mov    rax,QWORD PTR [rax]
  427fbd:	cmp    BYTE PTR [rax+0xb],0x3
  427fc1:	lea    rbx,[rax+0x48]
  427fc5:	cmovb  rbx,rsi
  427fc9:	mov    eax,DWORD PTR [rbx+0x8]
  427fcc:	cmp    eax,0x3
  427fcf:	mov    QWORD PTR [rsp+0x8],r13
  427fd4:	je     42808c <__ctype_b_loc@plt+0x25dbc>
  427fda:	cmp    eax,0x4
  427fdd:	jne    428083 <__ctype_b_loc@plt+0x25db3>
  427fe3:	mov    r12,QWORD PTR [rbx]
  427fe6:	add    r12,0x18
  427fea:	mov    rbx,rsp
  427fed:	mov    rdi,r12
  427ff0:	mov    rsi,rbx
  427ff3:	call   4020b0 <strtod@plt>
  427ff8:	mov    rbp,QWORD PTR [rsp]
  427ffc:	cmp    rbp,r12
  427fff:	je     428083 <__ctype_b_loc@plt+0x25db3>
  428005:	mov    r13b,BYTE PTR [rbp+0x0]
  428009:	mov    eax,r13d
  42800c:	or     al,0x20
  42800e:	cmp    al,0x78
  428010:	jne    428043 <__ctype_b_loc@plt+0x25d73>
  428012:	mov    rsi,rsp
  428015:	mov    edx,0x10
  42801a:	mov    rdi,r12
  42801d:	call   402250 <strtoul@plt>
  428022:	vmovq  xmm0,rax
  428027:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x2c41]        # 42ac70 <__ctype_b_loc@plt+0x289a0>
  42802f:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x2c49]        # 42ac80 <__ctype_b_loc@plt+0x289b0>
  428037:	vhaddpd xmm0,xmm0,xmm0
  42803b:	mov    rbp,QWORD PTR [rsp]
  42803f:	mov    r13b,BYTE PTR [rbp+0x0]
  428043:	test   r13b,r13b
  428046:	je     428087 <__ctype_b_loc@plt+0x25db7>
  428048:	vmovapd XMMWORD PTR [rsp+0x10],xmm0
  42804e:	call   4022d0 <__ctype_b_loc@plt>
  428053:	mov    rax,QWORD PTR [rax]
  428056:	movzx  ecx,r13b
  42805a:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  42805f:	je     428083 <__ctype_b_loc@plt+0x25db3>
  428061:	add    rbp,0x1
  428065:	vmovapd xmm0,XMMWORD PTR [rsp+0x10]
  42806b:	nop    DWORD PTR [rax+rax*1+0x0]
  428070:	movzx  ecx,BYTE PTR [rbp+0x0]
  428074:	add    rbp,0x1
  428078:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  42807d:	jne    428070 <__ctype_b_loc@plt+0x25da0>
  42807f:	test   cl,cl
  428081:	je     428087 <__ctype_b_loc@plt+0x25db7>
  428083:	xor    ebx,ebx
  428085:	jmp    428091 <__ctype_b_loc@plt+0x25dc1>
  428087:	vmovsd QWORD PTR [rsp],xmm0
  42808c:	vcvttsd2si rbx,QWORD PTR [rbx]
  428091:	add    rbx,r14
  428094:	xor    r13d,r13d
  428097:	cmp    rbx,QWORD PTR [rsp+0x28]
  42809c:	ja     4281d8 <__ctype_b_loc@plt+0x25f08>
  4280a2:	lea    rbp,[rsp+0x20]
  4280a7:	nop    WORD PTR [rax+rax*1+0x0]
  4280b0:	mov    DWORD PTR [rsp+0x38],0x0
  4280b8:	mov    rdi,rbp
  4280bb:	mov    rsi,rbx
  4280be:	mov    rdx,r15
  4280c1:	call   427190 <__ctype_b_loc@plt+0x24ec0>
  4280c6:	test   rax,rax
  4280c9:	jne    4280db <__ctype_b_loc@plt+0x25e0b>
  4280cb:	add    rbx,0x1
  4280cf:	cmp    rbx,QWORD PTR [rsp+0x28]
  4280d4:	jbe    4280b0 <__ctype_b_loc@plt+0x25de0>
  4280d6:	jmp    4281d8 <__ctype_b_loc@plt+0x25f08>
  4280db:	mov    r12,rax
  4280de:	sub    rax,r14
  4280e1:	xor    ecx,ecx
  4280e3:	cmp    rbx,r12
  4280e6:	sete   cl
  4280e9:	add    rcx,rax
  4280ec:	mov    rbp,QWORD PTR [rsp+0x8]
  4280f1:	mov    rax,QWORD PTR [rbp+0x10]
  4280f5:	vcvtsi2sd xmm0,xmm1,rcx
  4280fa:	vmovsd QWORD PTR [rax],xmm0
  4280fe:	mov    DWORD PTR [rax+0x8],0x3
  428105:	mov    rax,QWORD PTR [rbp+0x10]
  428109:	mov    rcx,QWORD PTR [rbp+0x28]
  42810d:	lea    rdx,[rax+0x10]
  428111:	mov    QWORD PTR [rbp+0x10],rdx
  428115:	mov    rcx,QWORD PTR [rcx+0x8]
  428119:	mov    rcx,QWORD PTR [rcx]
  42811c:	cmp    BYTE PTR [rcx+0xb],0x3
  428120:	lea    rcx,[rcx+0x48]
  428124:	lea    rdx,[rip+0x29ed]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  42812b:	cmovb  rcx,rdx
  42812f:	mov    rdx,QWORD PTR [rax]
  428132:	mov    QWORD PTR [rcx],rdx
  428135:	mov    eax,DWORD PTR [rax+0x8]
  428138:	mov    DWORD PTR [rcx+0x8],eax
  42813b:	mov    rax,QWORD PTR [rbp+0x10]
  42813f:	cmp    DWORD PTR [rax-0x8],0x4
  428143:	jl     428181 <__ctype_b_loc@plt+0x25eb1>
  428145:	mov    rsi,QWORD PTR [rax-0x10]
  428149:	test   BYTE PTR [rsi+0x9],0x3
  42814d:	je     428181 <__ctype_b_loc@plt+0x25eb1>
  42814f:	mov    rax,QWORD PTR [rbp+0x28]
  428153:	mov    rax,QWORD PTR [rax+0x8]
  428157:	mov    rax,QWORD PTR [rax]
  42815a:	mov    cl,BYTE PTR [rax+0x9]
  42815d:	test   cl,0x4
  428160:	je     428181 <__ctype_b_loc@plt+0x25eb1>
  428162:	mov    rdi,QWORD PTR [rbp+0x20]
  428166:	cmp    BYTE PTR [rdi+0x21],0x1
  42816a:	jne    428173 <__ctype_b_loc@plt+0x25ea3>
  42816c:	call   403fb0 <__ctype_b_loc@plt+0x1ce0>
  428171:	jmp    428181 <__ctype_b_loc@plt+0x25eb1>
  428173:	and    cl,0xf8
  428176:	mov    dl,BYTE PTR [rdi+0x20]
  428179:	and    dl,0x3
  42817c:	or     dl,cl
  42817e:	mov    BYTE PTR [rax+0x9],dl
  428181:	add    QWORD PTR [rbp+0x10],0xfffffffffffffff0
  428186:	mov    eax,DWORD PTR [rsp+0x38]
  42818a:	test   eax,eax
  42818c:	mov    r13d,0x1
  428192:	cmovne r13d,eax
  428196:	test   rbx,rbx
  428199:	cmove  r13d,eax
  42819d:	mov    rdi,QWORD PTR [rsp+0x30]
  4281a2:	lea    rdx,[rip+0x36dc]        # 42b885 <__ctype_b_loc@plt+0x295b5>
  4281a9:	mov    esi,r13d
  4281ac:	call   41fda0 <__ctype_b_loc@plt+0x1dad0>
  4281b1:	test   r13d,r13d
  4281b4:	jle    4281d8 <__ctype_b_loc@plt+0x25f08>
  4281b6:	xor    ebp,ebp
  4281b8:	lea    r14,[rsp+0x20]
  4281bd:	nop    DWORD PTR [rax]
  4281c0:	mov    rdi,r14
  4281c3:	mov    esi,ebp
  4281c5:	mov    rdx,rbx
  4281c8:	mov    rcx,r12
  4281cb:	call   427d30 <__ctype_b_loc@plt+0x25a60>
  4281d0:	add    ebp,0x1
  4281d3:	cmp    r13d,ebp
  4281d6:	jne    4281c0 <__ctype_b_loc@plt+0x25ef0>
  4281d8:	mov    eax,r13d
  4281db:	add    rsp,0x248
  4281e2:	pop    rbx
  4281e3:	pop    r12
  4281e5:	pop    r13
  4281e7:	pop    r14
  4281e9:	pop    r15
  4281eb:	pop    rbp
  4281ec:	ret    
  4281ed:	nop    DWORD PTR [rax]
  4281f0:	push   rbp
  4281f1:	push   r15
  4281f3:	push   r14
  4281f5:	push   r13
  4281f7:	push   r12
  4281f9:	push   rbx
  4281fa:	sub    rsp,0x18
  4281fe:	mov    DWORD PTR [rsp+0x4],ecx
  428202:	mov    r14,rdx
  428205:	mov    r12,rdi
  428208:	test   esi,esi
  42820a:	jle    428234 <__ctype_b_loc@plt+0x25f64>
  42820c:	mov    rax,QWORD PTR [r12+0x18]
  428211:	movsxd rcx,esi
  428214:	shl    rcx,0x4
  428218:	add    rcx,rax
  42821b:	add    rcx,0xfffffffffffffff0
  42821f:	cmp    rcx,QWORD PTR [r12+0x10]
  428224:	lea    rax,[rip+0x28ed]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  42822b:	cmovb  rax,rcx
  42822f:	jmp    4282d8 <__ctype_b_loc@plt+0x26008>
  428234:	cmp    esi,0xffffd8f1
  42823a:	jl     42824d <__ctype_b_loc@plt+0x25f7d>
  42823c:	movsxd rax,esi
  42823f:	shl    rax,0x4
  428243:	add    rax,QWORD PTR [r12+0x10]
  428248:	jmp    4282d8 <__ctype_b_loc@plt+0x26008>
  42824d:	cmp    esi,0xffffd8ee
  428253:	je     428271 <__ctype_b_loc@plt+0x25fa1>
  428255:	cmp    esi,0xffffd8ef
  42825b:	je     428278 <__ctype_b_loc@plt+0x25fa8>
  42825d:	cmp    esi,0xffffd8f0
  428263:	jne    4282a6 <__ctype_b_loc@plt+0x25fd6>
  428265:	mov    eax,0xa0
  42826a:	add    rax,QWORD PTR [r12+0x20]
  42826f:	jmp    4282d8 <__ctype_b_loc@plt+0x26008>
  428271:	lea    rax,[r12+0x78]
  428276:	jmp    4282d8 <__ctype_b_loc@plt+0x26008>
  428278:	mov    rax,QWORD PTR [r12+0x28]
  42827d:	mov    rax,QWORD PTR [rax+0x8]
  428281:	mov    rcx,QWORD PTR [rax]
  428284:	lea    rax,[r12+0x88]
  42828c:	mov    rcx,QWORD PTR [rcx+0x18]
  428290:	mov    QWORD PTR [r12+0x88],rcx
  428298:	mov    DWORD PTR [r12+0x90],0x5
  4282a4:	jmp    4282d8 <__ctype_b_loc@plt+0x26008>
  4282a6:	mov    rax,QWORD PTR [r12+0x28]
  4282ab:	mov    rax,QWORD PTR [rax+0x8]
  4282af:	mov    rax,QWORD PTR [rax]
  4282b2:	mov    ecx,0xffffd8ee
  4282b7:	sub    ecx,esi
  4282b9:	movzx  edx,BYTE PTR [rax+0xb]
  4282bd:	cmp    ecx,edx
  4282bf:	jle    4282ca <__ctype_b_loc@plt+0x25ffa>
  4282c1:	lea    rax,[rip+0x2850]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  4282c8:	jmp    4282d8 <__ctype_b_loc@plt+0x26008>
  4282ca:	movsxd rcx,ecx
  4282cd:	shl    rcx,0x4
  4282d1:	add    rax,rcx
  4282d4:	add    rax,0x18
  4282d8:	mov    rcx,QWORD PTR [r12+0x10]
  4282dd:	mov    rdx,QWORD PTR [rax]
  4282e0:	mov    QWORD PTR [rcx],rdx
  4282e3:	mov    eax,DWORD PTR [rax+0x8]
  4282e6:	mov    DWORD PTR [rcx+0x8],eax
  4282e9:	mov    rbp,QWORD PTR [r12+0x10]
  4282ee:	add    rbp,0x10
  4282f2:	mov    QWORD PTR [r12+0x10],rbp
  4282f7:	lea    r15,[rip+0x280a]        # 42ab08 <__ctype_b_loc@plt+0x28838>
  4282fe:	xchg   ax,ax
  428300:	mov    esi,0x2e
  428305:	mov    rdi,r14
  428308:	call   4020f0 <strchr@plt>
  42830d:	mov    r13,rax
  428310:	test   rax,rax
  428313:	jne    428323 <__ctype_b_loc@plt+0x26053>
  428315:	mov    rdi,r14
  428318:	call   4020e0 <strlen@plt>
  42831d:	mov    r13,rax
  428320:	add    r13,r14
  428323:	mov    rbx,r13
  428326:	sub    rbx,r14
  428329:	mov    rax,QWORD PTR [r12+0x20]
  42832e:	mov    rcx,QWORD PTR [rax+0x78]
  428332:	cmp    rcx,QWORD PTR [rax+0x70]
  428336:	jb     428345 <__ctype_b_loc@plt+0x26075>
  428338:	mov    rdi,r12
  42833b:	call   408070 <__ctype_b_loc@plt+0x5da0>
  428340:	mov    rbp,QWORD PTR [r12+0x10]
  428345:	mov    rdi,r12
  428348:	mov    QWORD PTR [rsp+0x8],r14
  42834d:	mov    rsi,r14
  428350:	mov    QWORD PTR [rsp+0x10],rbx
  428355:	mov    rdx,rbx
  428358:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  42835d:	mov    QWORD PTR [rbp+0x0],rax
  428361:	mov    DWORD PTR [rbp+0x8],0x4
  428368:	mov    rbp,QWORD PTR [r12+0x10]
  42836d:	lea    rax,[rbp+0x10]
  428371:	mov    QWORD PTR [r12+0x10],rax
  428376:	mov    r14d,DWORD PTR [rbp+0x8]
  42837a:	lea    rsi,[rip+0x2797]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  428381:	mov    rax,rsi
  428384:	test   r14d,r14d
  428387:	je     428523 <__ctype_b_loc@plt+0x26253>
  42838d:	mov    rdi,QWORD PTR [rbp-0x10]
  428391:	cmp    r14d,0x3
  428395:	je     4283f0 <__ctype_b_loc@plt+0x26120>
  428397:	cmp    r14d,0x4
  42839b:	jne    428430 <__ctype_b_loc@plt+0x26160>
  4283a1:	mov    rcx,QWORD PTR [rbp+0x0]
  4283a5:	mov    al,BYTE PTR [rdi+0xb]
  4283a8:	mov    rdx,0xffffffffffffffff
  4283af:	shlx   rax,rdx,rax
  4283b4:	andn   eax,eax,DWORD PTR [rcx+0xc]
  4283ba:	cdqe   
  4283bc:	lea    rax,[rax+rax*4]
  4283c0:	shl    rax,0x3
  4283c4:	add    rax,QWORD PTR [rdi+0x20]
  4283c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4283d0:	cmp    DWORD PTR [rax+0x18],0x4
  4283d4:	jne    4283e0 <__ctype_b_loc@plt+0x26110>
  4283d6:	cmp    QWORD PTR [rax+0x10],rcx
  4283da:	je     428523 <__ctype_b_loc@plt+0x26253>
  4283e0:	mov    rax,QWORD PTR [rax+0x20]
  4283e4:	test   rax,rax
  4283e7:	jne    4283d0 <__ctype_b_loc@plt+0x26100>
  4283e9:	jmp    428520 <__ctype_b_loc@plt+0x26250>
  4283ee:	xchg   ax,ax
  4283f0:	vmovsd xmm1,QWORD PTR [rbp+0x0]
  4283f5:	vcvttsd2si eax,xmm1
  4283f9:	vcvtsi2sd xmm0,xmm2,eax
  4283fd:	vucomisd xmm1,xmm0
  428401:	jne    428430 <__ctype_b_loc@plt+0x26160>
  428403:	jp     428430 <__ctype_b_loc@plt+0x26160>
  428405:	lea    ecx,[rax-0x1]
  428408:	cmp    ecx,DWORD PTR [rdi+0x38]
  42840b:	jae    4284ab <__ctype_b_loc@plt+0x261db>
  428411:	movsxd rax,ecx
  428414:	shl    rax,0x4
  428418:	add    rax,QWORD PTR [rdi+0x18]
  42841c:	jmp    428523 <__ctype_b_loc@plt+0x26253>
  428421:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42842b:	nop    DWORD PTR [rax+rax*1+0x0]
  428430:	mov    rsi,rbp
  428433:	call   409bf0 <__ctype_b_loc@plt+0x7920>
  428438:	lea    rsi,[rip+0x26d9]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  42843f:	nop
  428440:	cmp    DWORD PTR [rax+0x18],r14d
  428444:	jne    4284a0 <__ctype_b_loc@plt+0x261d0>
  428446:	cmp    r14d,0x3
  42844a:	ja     428470 <__ctype_b_loc@plt+0x261a0>
  42844c:	mov    ecx,r14d
  42844f:	movsxd rcx,DWORD PTR [r15+rcx*4]
  428453:	add    rcx,r15
  428456:	jmp    rcx
  428458:	mov    ecx,DWORD PTR [rax+0x10]
  42845b:	cmp    ecx,DWORD PTR [rbp+0x0]
  42845e:	jne    4284a0 <__ctype_b_loc@plt+0x261d0>
  428460:	jmp    428523 <__ctype_b_loc@plt+0x26253>
  428465:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42846f:	nop
  428470:	mov    rcx,QWORD PTR [rax+0x10]
  428474:	cmp    rcx,QWORD PTR [rbp+0x0]
  428478:	jne    4284a0 <__ctype_b_loc@plt+0x261d0>
  42847a:	jmp    428523 <__ctype_b_loc@plt+0x26253>
  42847f:	vmovq  xmm0,QWORD PTR [rax+0x10]
  428484:	vucomisd xmm0,QWORD PTR [rbp+0x0]
  428489:	jne    4284a0 <__ctype_b_loc@plt+0x261d0>
  42848b:	jnp    428523 <__ctype_b_loc@plt+0x26253>
  428491:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42849b:	nop    DWORD PTR [rax+rax*1+0x0]
  4284a0:	mov    rax,QWORD PTR [rax+0x20]
  4284a4:	test   rax,rax
  4284a7:	jne    428440 <__ctype_b_loc@plt+0x26170>
  4284a9:	jmp    428520 <__ctype_b_loc@plt+0x26250>
  4284ab:	test   eax,eax
  4284ad:	je     4284ed <__ctype_b_loc@plt+0x2621d>
  4284af:	vmovq  rcx,xmm0
  4284b4:	mov    rax,rcx
  4284b7:	shr    rax,0x20
  4284bb:	add    eax,ecx
  4284bd:	mov    cl,BYTE PTR [rdi+0xb]
  4284c0:	mov    rdx,0xffffffffffffffff
  4284c7:	shlx   rcx,rdx,rcx
  4284cc:	or     rcx,0x1
  4284d0:	xor    rcx,0xfffffffffffffffe
  4284d4:	xor    edx,edx
  4284d6:	div    rcx
  4284d9:	lea    rax,[rdx+rdx*4]
  4284dd:	shl    rax,0x3
  4284e1:	add    rax,QWORD PTR [rdi+0x20]
  4284e5:	cmp    DWORD PTR [rax+0x18],0x3
  4284e9:	jne    428513 <__ctype_b_loc@plt+0x26243>
  4284eb:	jmp    428506 <__ctype_b_loc@plt+0x26236>
  4284ed:	mov    rax,QWORD PTR [rdi+0x20]
  4284f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4284fb:	nop    DWORD PTR [rax+rax*1+0x0]
  428500:	cmp    DWORD PTR [rax+0x18],0x3
  428504:	jne    428513 <__ctype_b_loc@plt+0x26243>
  428506:	vmovsd xmm1,QWORD PTR [rax+0x10]
  42850b:	vucomisd xmm1,xmm0
  42850f:	jne    428513 <__ctype_b_loc@plt+0x26243>
  428511:	jnp    428523 <__ctype_b_loc@plt+0x26253>
  428513:	mov    rax,QWORD PTR [rax+0x20]
  428517:	test   rax,rax
  42851a:	jne    428500 <__ctype_b_loc@plt+0x26230>
  42851c:	nop    DWORD PTR [rax+0x0]
  428520:	mov    rax,rsi
  428523:	mov    rcx,QWORD PTR [rax]
  428526:	mov    QWORD PTR [rbp+0x0],rcx
  42852a:	mov    eax,DWORD PTR [rax+0x8]
  42852d:	mov    DWORD PTR [rbp+0x8],eax
  428530:	mov    rax,QWORD PTR [r12+0x10]
  428535:	lea    rbx,[rax-0x10]
  428539:	cmp    rbx,rsi
  42853c:	je     428679 <__ctype_b_loc@plt+0x263a9>
  428542:	mov    ecx,DWORD PTR [rax-0x8]
  428545:	cmp    ecx,0x5
  428548:	je     428630 <__ctype_b_loc@plt+0x26360>
  42854e:	test   ecx,ecx
  428550:	jne    428679 <__ctype_b_loc@plt+0x263a9>
  428556:	mov    QWORD PTR [r12+0x10],rbx
  42855b:	cmp    BYTE PTR [r13+0x0],0x2e
  428560:	mov    ebp,DWORD PTR [rsp+0x4]
  428564:	mov    eax,0x1
  428569:	cmove  ebp,eax
  42856c:	mov    rax,QWORD PTR [r12+0x20]
  428571:	mov    rcx,QWORD PTR [rax+0x78]
  428575:	cmp    rcx,QWORD PTR [rax+0x70]
  428579:	jb     428588 <__ctype_b_loc@plt+0x262b8>
  42857b:	mov    rdi,r12
  42857e:	call   408070 <__ctype_b_loc@plt+0x5da0>
  428583:	mov    rbx,QWORD PTR [r12+0x10]
  428588:	xor    esi,esi
  42858a:	mov    rdi,r12
  42858d:	mov    edx,ebp
  42858f:	call   403720 <__ctype_b_loc@plt+0x1450>
  428594:	mov    QWORD PTR [rbx],rax
  428597:	mov    DWORD PTR [rbx+0x8],0x5
  42859e:	mov    rbx,QWORD PTR [r12+0x10]
  4285a3:	mov    rax,QWORD PTR [r12+0x20]
  4285a8:	add    rbx,0x10
  4285ac:	mov    QWORD PTR [r12+0x10],rbx
  4285b1:	mov    rcx,QWORD PTR [rax+0x78]
  4285b5:	cmp    rcx,QWORD PTR [rax+0x70]
  4285b9:	jb     4285c8 <__ctype_b_loc@plt+0x262f8>
  4285bb:	mov    rdi,r12
  4285be:	call   408070 <__ctype_b_loc@plt+0x5da0>
  4285c3:	mov    rbx,QWORD PTR [r12+0x10]
  4285c8:	mov    rdi,r12
  4285cb:	mov    rsi,QWORD PTR [rsp+0x8]
  4285d0:	mov    rdx,QWORD PTR [rsp+0x10]
  4285d5:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  4285da:	mov    QWORD PTR [rbx],rax
  4285dd:	mov    DWORD PTR [rbx+0x8],0x4
  4285e4:	mov    rax,QWORD PTR [r12+0x10]
  4285e9:	lea    rcx,[rax+0x10]
  4285ed:	mov    QWORD PTR [r12+0x10],rcx
  4285f2:	mov    rcx,QWORD PTR [rax-0x10]
  4285f6:	mov    QWORD PTR [rax+0x10],rcx
  4285fa:	mov    ecx,DWORD PTR [rax-0x8]
  4285fd:	mov    DWORD PTR [rax+0x18],ecx
  428600:	mov    rcx,QWORD PTR [r12+0x10]
  428605:	lea    rax,[rcx+0x10]
  428609:	mov    QWORD PTR [r12+0x10],rax
  42860e:	lea    rsi,[rcx-0x30]
  428612:	lea    rdx,[rcx-0x10]
  428616:	mov    rdi,r12
  428619:	call   408b60 <__ctype_b_loc@plt+0x6890>
  42861e:	mov    rbx,QWORD PTR [r12+0x10]
  428623:	lea    rax,[rbx-0x20]
  428627:	mov    QWORD PTR [r12+0x10],rax
  42862c:	add    rbx,0xffffffffffffffd0
  428630:	add    rax,0xffffffffffffffe0
  428634:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42863e:	xchg   ax,ax
  428640:	mov    rcx,QWORD PTR [rbx]
  428643:	mov    QWORD PTR [rax],rcx
  428646:	mov    ecx,DWORD PTR [rax+0x18]
  428649:	mov    DWORD PTR [rax+0x8],ecx
  42864c:	mov    rax,rbx
  42864f:	lea    rbx,[rbx+0x10]
  428653:	mov    rbp,QWORD PTR [r12+0x10]
  428658:	cmp    rbx,rbp
  42865b:	jb     428640 <__ctype_b_loc@plt+0x26370>
  42865d:	add    rbp,0xfffffffffffffff0
  428661:	mov    QWORD PTR [r12+0x10],rbp
  428666:	cmp    BYTE PTR [r13+0x0],0x2e
  42866b:	lea    r14,[r13+0x1]
  42866f:	je     428300 <__ctype_b_loc@plt+0x26030>
  428675:	xor    eax,eax
  428677:	jmp    428687 <__ctype_b_loc@plt+0x263b7>
  428679:	add    rax,0xffffffffffffffe0
  42867d:	mov    QWORD PTR [r12+0x10],rax
  428682:	mov    rax,QWORD PTR [rsp+0x8]
  428687:	add    rsp,0x18
  42868b:	pop    rbx
  42868c:	pop    r12
  42868e:	pop    r13
  428690:	pop    r14
  428692:	pop    r15
  428694:	pop    rbp
  428695:	ret    
  428696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4286a0:	push   rbx
  4286a1:	mov    rbx,rdi
  4286a4:	mov    esi,0x1
  4286a9:	call   428b10 <__ctype_b_loc@plt+0x26840>
  4286ae:	vcvtsi2sd xmm0,xmm0,eax
  4286b2:	mov    rax,QWORD PTR [rbx+0x10]
  4286b6:	vmovsd QWORD PTR [rax],xmm0
  4286ba:	mov    DWORD PTR [rax+0x8],0x3
  4286c1:	add    QWORD PTR [rbx+0x10],0x10
  4286c6:	mov    eax,0x1
  4286cb:	pop    rbx
  4286cc:	ret    
  4286cd:	nop    DWORD PTR [rax]
  4286d0:	push   rbx
  4286d1:	mov    rbx,rdi
  4286d4:	mov    esi,0x1
  4286d9:	call   428b10 <__ctype_b_loc@plt+0x26840>
  4286de:	not    eax
  4286e0:	vcvtsi2sd xmm0,xmm0,eax
  4286e4:	mov    rax,QWORD PTR [rbx+0x10]
  4286e8:	vmovsd QWORD PTR [rax],xmm0
  4286ec:	mov    DWORD PTR [rax+0x8],0x3
  4286f3:	add    QWORD PTR [rbx+0x10],0x10
  4286f8:	mov    eax,0x1
  4286fd:	pop    rbx
  4286fe:	ret    
  4286ff:	nop
  428700:	push   rbp
  428701:	push   r14
  428703:	push   rbx
  428704:	mov    r14,rdi
  428707:	mov    esi,0x1
  42870c:	call   428b10 <__ctype_b_loc@plt+0x26840>
  428711:	mov    ebp,eax
  428713:	mov    rax,QWORD PTR [r14+0x10]
  428717:	mov    rbx,rax
  42871a:	sub    rbx,QWORD PTR [r14+0x18]
  42871e:	shr    rbx,0x4
  428722:	cmp    ebx,0x2
  428725:	jl     428748 <__ctype_b_loc@plt+0x26478>
  428727:	add    ebx,0x1
  42872a:	nop    WORD PTR [rax+rax*1+0x0]
  428730:	add    ebx,0xffffffff
  428733:	mov    rdi,r14
  428736:	mov    esi,ebx
  428738:	call   428b10 <__ctype_b_loc@plt+0x26840>
  42873d:	and    ebp,eax
  42873f:	cmp    ebx,0x2
  428742:	jg     428730 <__ctype_b_loc@plt+0x26460>
  428744:	mov    rax,QWORD PTR [r14+0x10]
  428748:	vcvtsi2sd xmm0,xmm0,ebp
  42874c:	vmovsd QWORD PTR [rax],xmm0
  428750:	mov    DWORD PTR [rax+0x8],0x3
  428757:	add    QWORD PTR [r14+0x10],0x10
  42875c:	mov    eax,0x1
  428761:	pop    rbx
  428762:	pop    r14
  428764:	pop    rbp
  428765:	ret    
  428766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428770:	push   rbp
  428771:	push   r14
  428773:	push   rbx
  428774:	mov    r14,rdi
  428777:	mov    esi,0x1
  42877c:	call   428b10 <__ctype_b_loc@plt+0x26840>
  428781:	mov    ebp,eax
  428783:	mov    rax,QWORD PTR [r14+0x10]
  428787:	mov    rbx,rax
  42878a:	sub    rbx,QWORD PTR [r14+0x18]
  42878e:	shr    rbx,0x4
  428792:	cmp    ebx,0x2
  428795:	jl     4287b8 <__ctype_b_loc@plt+0x264e8>
  428797:	add    ebx,0x1
  42879a:	nop    WORD PTR [rax+rax*1+0x0]
  4287a0:	add    ebx,0xffffffff
  4287a3:	mov    rdi,r14
  4287a6:	mov    esi,ebx
  4287a8:	call   428b10 <__ctype_b_loc@plt+0x26840>
  4287ad:	or     ebp,eax
  4287af:	cmp    ebx,0x2
  4287b2:	jg     4287a0 <__ctype_b_loc@plt+0x264d0>
  4287b4:	mov    rax,QWORD PTR [r14+0x10]
  4287b8:	vcvtsi2sd xmm0,xmm0,ebp
  4287bc:	vmovsd QWORD PTR [rax],xmm0
  4287c0:	mov    DWORD PTR [rax+0x8],0x3
  4287c7:	add    QWORD PTR [r14+0x10],0x10
  4287cc:	mov    eax,0x1
  4287d1:	pop    rbx
  4287d2:	pop    r14
  4287d4:	pop    rbp
  4287d5:	ret    
  4287d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4287e0:	push   rbp
  4287e1:	push   r14
  4287e3:	push   rbx
  4287e4:	mov    r14,rdi
  4287e7:	mov    esi,0x1
  4287ec:	call   428b10 <__ctype_b_loc@plt+0x26840>
  4287f1:	mov    ebp,eax
  4287f3:	mov    rax,QWORD PTR [r14+0x10]
  4287f7:	mov    rbx,rax
  4287fa:	sub    rbx,QWORD PTR [r14+0x18]
  4287fe:	shr    rbx,0x4
  428802:	cmp    ebx,0x2
  428805:	jl     428828 <__ctype_b_loc@plt+0x26558>
  428807:	add    ebx,0x1
  42880a:	nop    WORD PTR [rax+rax*1+0x0]
  428810:	add    ebx,0xffffffff
  428813:	mov    rdi,r14
  428816:	mov    esi,ebx
  428818:	call   428b10 <__ctype_b_loc@plt+0x26840>
  42881d:	xor    ebp,eax
  42881f:	cmp    ebx,0x2
  428822:	jg     428810 <__ctype_b_loc@plt+0x26540>
  428824:	mov    rax,QWORD PTR [r14+0x10]
  428828:	vcvtsi2sd xmm0,xmm0,ebp
  42882c:	vmovsd QWORD PTR [rax],xmm0
  428830:	mov    DWORD PTR [rax+0x8],0x3
  428837:	add    QWORD PTR [r14+0x10],0x10
  42883c:	mov    eax,0x1
  428841:	pop    rbx
  428842:	pop    r14
  428844:	pop    rbp
  428845:	ret    
  428846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428850:	push   rbp
  428851:	push   rbx
  428852:	push   rax
  428853:	mov    rbx,rdi
  428856:	mov    esi,0x1
  42885b:	call   428b10 <__ctype_b_loc@plt+0x26840>
  428860:	mov    ebp,eax
  428862:	mov    esi,0x2
  428867:	mov    rdi,rbx
  42886a:	call   428b10 <__ctype_b_loc@plt+0x26840>
  42886f:	shlx   eax,ebp,eax
  428874:	vcvtsi2sd xmm0,xmm0,eax
  428878:	mov    rax,QWORD PTR [rbx+0x10]
  42887c:	vmovsd QWORD PTR [rax],xmm0
  428880:	mov    DWORD PTR [rax+0x8],0x3
  428887:	add    QWORD PTR [rbx+0x10],0x10
  42888c:	mov    eax,0x1
  428891:	add    rsp,0x8
  428895:	pop    rbx
  428896:	pop    rbp
  428897:	ret    
  428898:	nop    DWORD PTR [rax+rax*1+0x0]
  4288a0:	push   rbp
  4288a1:	push   rbx
  4288a2:	push   rax
  4288a3:	mov    rbx,rdi
  4288a6:	mov    esi,0x1
  4288ab:	call   428b10 <__ctype_b_loc@plt+0x26840>
  4288b0:	mov    ebp,eax
  4288b2:	mov    esi,0x2
  4288b7:	mov    rdi,rbx
  4288ba:	call   428b10 <__ctype_b_loc@plt+0x26840>
  4288bf:	shrx   eax,ebp,eax
  4288c4:	vcvtsi2sd xmm0,xmm0,eax
  4288c8:	mov    rax,QWORD PTR [rbx+0x10]
  4288cc:	vmovsd QWORD PTR [rax],xmm0
  4288d0:	mov    DWORD PTR [rax+0x8],0x3
  4288d7:	add    QWORD PTR [rbx+0x10],0x10
  4288dc:	mov    eax,0x1
  4288e1:	add    rsp,0x8
  4288e5:	pop    rbx
  4288e6:	pop    rbp
  4288e7:	ret    
  4288e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4288f0:	push   rbp
  4288f1:	push   rbx
  4288f2:	push   rax
  4288f3:	mov    rbx,rdi
  4288f6:	mov    esi,0x1
  4288fb:	call   428b10 <__ctype_b_loc@plt+0x26840>
  428900:	mov    ebp,eax
  428902:	mov    esi,0x2
  428907:	mov    rdi,rbx
  42890a:	call   428b10 <__ctype_b_loc@plt+0x26840>
  42890f:	sarx   eax,ebp,eax
  428914:	vcvtsi2sd xmm0,xmm0,eax
  428918:	mov    rax,QWORD PTR [rbx+0x10]
  42891c:	vmovsd QWORD PTR [rax],xmm0
  428920:	mov    DWORD PTR [rax+0x8],0x3
  428927:	add    QWORD PTR [rbx+0x10],0x10
  42892c:	mov    eax,0x1
  428931:	add    rsp,0x8
  428935:	pop    rbx
  428936:	pop    rbp
  428937:	ret    
  428938:	nop    DWORD PTR [rax+rax*1+0x0]
  428940:	push   rbp
  428941:	push   rbx
  428942:	push   rax
  428943:	mov    rbx,rdi
  428946:	mov    esi,0x1
  42894b:	call   428b10 <__ctype_b_loc@plt+0x26840>
  428950:	mov    ebp,eax
  428952:	mov    esi,0x2
  428957:	mov    rdi,rbx
  42895a:	call   428b10 <__ctype_b_loc@plt+0x26840>
  42895f:	mov    ecx,eax
  428961:	rol    ebp,cl
  428963:	vcvtsi2sd xmm0,xmm0,ebp
  428967:	mov    rax,QWORD PTR [rbx+0x10]
  42896b:	vmovsd QWORD PTR [rax],xmm0
  42896f:	mov    DWORD PTR [rax+0x8],0x3
  428976:	add    QWORD PTR [rbx+0x10],0x10
  42897b:	mov    eax,0x1
  428980:	add    rsp,0x8
  428984:	pop    rbx
  428985:	pop    rbp
  428986:	ret    
  428987:	nop    WORD PTR [rax+rax*1+0x0]
  428990:	push   rbp
  428991:	push   rbx
  428992:	push   rax
  428993:	mov    rbx,rdi
  428996:	mov    esi,0x1
  42899b:	call   428b10 <__ctype_b_loc@plt+0x26840>
  4289a0:	mov    ebp,eax
  4289a2:	mov    esi,0x2
  4289a7:	mov    rdi,rbx
  4289aa:	call   428b10 <__ctype_b_loc@plt+0x26840>
  4289af:	mov    ecx,eax
  4289b1:	ror    ebp,cl
  4289b3:	vcvtsi2sd xmm0,xmm0,ebp
  4289b7:	mov    rax,QWORD PTR [rbx+0x10]
  4289bb:	vmovsd QWORD PTR [rax],xmm0
  4289bf:	mov    DWORD PTR [rax+0x8],0x3
  4289c6:	add    QWORD PTR [rbx+0x10],0x10
  4289cb:	mov    eax,0x1
  4289d0:	add    rsp,0x8
  4289d4:	pop    rbx
  4289d5:	pop    rbp
  4289d6:	ret    
  4289d7:	nop    WORD PTR [rax+rax*1+0x0]
  4289e0:	push   rbx
  4289e1:	mov    rbx,rdi
  4289e4:	mov    esi,0x1
  4289e9:	call   428b10 <__ctype_b_loc@plt+0x26840>
  4289ee:	bswap  eax
  4289f0:	vcvtsi2sd xmm0,xmm0,eax
  4289f4:	mov    rax,QWORD PTR [rbx+0x10]
  4289f8:	vmovsd QWORD PTR [rax],xmm0
  4289fc:	mov    DWORD PTR [rax+0x8],0x3
  428a03:	add    QWORD PTR [rbx+0x10],0x10
  428a08:	mov    eax,0x1
  428a0d:	pop    rbx
  428a0e:	ret    
  428a0f:	nop
  428a10:	push   rbp
  428a11:	push   r14
  428a13:	push   rbx
  428a14:	sub    rsp,0x10
  428a18:	mov    r14,rdi
  428a1b:	mov    esi,0x1
  428a20:	call   428b10 <__ctype_b_loc@plt+0x26840>
  428a25:	mov    ebx,eax
  428a27:	mov    rcx,QWORD PTR [r14+0x18]
  428a2b:	lea    rdx,[rcx+0x10]
  428a2f:	mov    ebp,0x8
  428a34:	mov    eax,0x8
  428a39:	cmp    rdx,QWORD PTR [r14+0x10]
  428a3d:	jae    428a68 <__ctype_b_loc@plt+0x26798>
  428a3f:	lea    rsi,[rip+0x20d2]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  428a46:	mov    eax,0x8
  428a4b:	cmp    rdx,rsi
  428a4e:	je     428a68 <__ctype_b_loc@plt+0x26798>
  428a50:	cmp    DWORD PTR [rcx+0x18],0xffffffff
  428a54:	mov    eax,0x8
  428a59:	je     428a68 <__ctype_b_loc@plt+0x26798>
  428a5b:	mov    esi,0x2
  428a60:	mov    rdi,r14
  428a63:	call   428b10 <__ctype_b_loc@plt+0x26840>
  428a68:	mov    ecx,eax
  428a6a:	neg    ecx
  428a6c:	cmovl  ecx,eax
  428a6f:	test   eax,eax
  428a71:	lea    rdx,[rip+0x2fd4]        # 42ba4c <__ctype_b_loc@plt+0x2977c>
  428a78:	lea    rax,[rip+0x2fbc]        # 42ba3b <__ctype_b_loc@plt+0x2976b>
  428a7f:	cmovs  rax,rdx
  428a83:	cmp    ecx,0x9
  428a86:	cmovl  ebp,ecx
  428a89:	test   ecx,ecx
  428a8b:	jle    428aba <__ctype_b_loc@plt+0x267ea>
  428a8d:	mov    ecx,ebp
  428a8f:	add    rcx,0x1
  428a93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428a9d:	nop    DWORD PTR [rax]
  428aa0:	mov    edx,ebx
  428aa2:	and    edx,0xf
  428aa5:	movzx  edx,BYTE PTR [rax+rdx*1]
  428aa9:	mov    BYTE PTR [rsp+rcx*1+0x6],dl
  428aad:	shr    ebx,0x4
  428ab0:	add    rcx,0xffffffffffffffff
  428ab4:	cmp    rcx,0x1
  428ab8:	jg     428aa0 <__ctype_b_loc@plt+0x267d0>
  428aba:	mov    ebx,ebp
  428abc:	mov    rax,QWORD PTR [r14+0x20]
  428ac0:	mov    rcx,QWORD PTR [rax+0x78]
  428ac4:	cmp    rcx,QWORD PTR [rax+0x70]
  428ac8:	jb     428ad2 <__ctype_b_loc@plt+0x26802>
  428aca:	mov    rdi,r14
  428acd:	call   408070 <__ctype_b_loc@plt+0x5da0>
  428ad2:	mov    rbp,QWORD PTR [r14+0x10]
  428ad6:	lea    rsi,[rsp+0x8]
  428adb:	mov    rdi,r14
  428ade:	mov    rdx,rbx
  428ae1:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  428ae6:	mov    QWORD PTR [rbp+0x0],rax
  428aea:	mov    DWORD PTR [rbp+0x8],0x4
  428af1:	add    QWORD PTR [r14+0x10],0x10
  428af6:	mov    eax,0x1
  428afb:	add    rsp,0x10
  428aff:	pop    rbx
  428b00:	pop    r14
  428b02:	pop    rbp
  428b03:	ret    
  428b04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428b0e:	xchg   ax,ax
  428b10:	push   rbp
  428b11:	push   r15
  428b13:	push   r14
  428b15:	push   r13
  428b17:	push   r12
  428b19:	push   rbx
  428b1a:	push   rax
  428b1b:	mov    r12d,esi
  428b1e:	mov    r15,rdi
  428b21:	call   41ddf0 <__ctype_b_loc@plt+0x1bb20>
  428b26:	vaddsd xmm0,xmm0,QWORD PTR [rip+0x224a]        # 42ad78 <__ctype_b_loc@plt+0x28aa8>
  428b2e:	vmovq  r14,xmm0
  428b33:	vxorps xmm1,xmm1,xmm1
  428b37:	vucomisd xmm0,xmm1
  428b3b:	jne    428ca5 <__ctype_b_loc@plt+0x269d5>
  428b41:	jp     428ca5 <__ctype_b_loc@plt+0x269d5>
  428b47:	test   r12d,r12d
  428b4a:	jle    428b72 <__ctype_b_loc@plt+0x268a2>
  428b4c:	mov    rax,QWORD PTR [r15+0x18]
  428b50:	movsxd rcx,r12d
  428b53:	shl    rcx,0x4
  428b57:	add    rcx,rax
  428b5a:	add    rcx,0xfffffffffffffff0
  428b5e:	cmp    rcx,QWORD PTR [r15+0x10]
  428b62:	lea    rax,[rip+0x1faf]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  428b69:	cmovb  rax,rcx
  428b6d:	jmp    428c13 <__ctype_b_loc@plt+0x26943>
  428b72:	cmp    r12d,0xffffd8f1
  428b79:	jl     428b8b <__ctype_b_loc@plt+0x268bb>
  428b7b:	movsxd rax,r12d
  428b7e:	shl    rax,0x4
  428b82:	add    rax,QWORD PTR [r15+0x10]
  428b86:	jmp    428c13 <__ctype_b_loc@plt+0x26943>
  428b8b:	cmp    r12d,0xffffd8ee
  428b92:	je     428bb1 <__ctype_b_loc@plt+0x268e1>
  428b94:	cmp    r12d,0xffffd8ef
  428b9b:	je     428bb7 <__ctype_b_loc@plt+0x268e7>
  428b9d:	cmp    r12d,0xffffd8f0
  428ba4:	jne    428be1 <__ctype_b_loc@plt+0x26911>
  428ba6:	mov    eax,0xa0
  428bab:	add    rax,QWORD PTR [r15+0x20]
  428baf:	jmp    428c13 <__ctype_b_loc@plt+0x26943>
  428bb1:	lea    rax,[r15+0x78]
  428bb5:	jmp    428c13 <__ctype_b_loc@plt+0x26943>
  428bb7:	mov    rax,QWORD PTR [r15+0x28]
  428bbb:	mov    rax,QWORD PTR [rax+0x8]
  428bbf:	mov    rcx,QWORD PTR [rax]
  428bc2:	lea    rax,[r15+0x88]
  428bc9:	mov    rcx,QWORD PTR [rcx+0x18]
  428bcd:	mov    QWORD PTR [r15+0x88],rcx
  428bd4:	mov    DWORD PTR [r15+0x90],0x5
  428bdf:	jmp    428c13 <__ctype_b_loc@plt+0x26943>
  428be1:	mov    rax,QWORD PTR [r15+0x28]
  428be5:	mov    rax,QWORD PTR [rax+0x8]
  428be9:	mov    rax,QWORD PTR [rax]
  428bec:	mov    ecx,0xffffd8ee
  428bf1:	sub    ecx,r12d
  428bf4:	movzx  edx,BYTE PTR [rax+0xb]
  428bf8:	cmp    ecx,edx
  428bfa:	jle    428c05 <__ctype_b_loc@plt+0x26935>
  428bfc:	lea    rax,[rip+0x1f15]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  428c03:	jmp    428c13 <__ctype_b_loc@plt+0x26943>
  428c05:	movsxd rcx,ecx
  428c08:	shl    rcx,0x4
  428c0c:	add    rax,rcx
  428c0f:	add    rax,0x18
  428c13:	mov    ecx,DWORD PTR [rax+0x8]
  428c16:	cmp    ecx,0x3
  428c19:	je     428ca5 <__ctype_b_loc@plt+0x269d5>
  428c1f:	cmp    ecx,0x4
  428c22:	jne    428c93 <__ctype_b_loc@plt+0x269c3>
  428c24:	mov    rbx,QWORD PTR [rax]
  428c27:	add    rbx,0x18
  428c2b:	mov    rsi,rsp
  428c2e:	mov    rdi,rbx
  428c31:	call   4020b0 <strtod@plt>
  428c36:	mov    rbp,QWORD PTR [rsp]
  428c3a:	cmp    rbp,rbx
  428c3d:	je     428c93 <__ctype_b_loc@plt+0x269c3>
  428c3f:	mov    r13b,BYTE PTR [rbp+0x0]
  428c43:	mov    eax,r13d
  428c46:	or     al,0x20
  428c48:	cmp    al,0x78
  428c4a:	jne    428c64 <__ctype_b_loc@plt+0x26994>
  428c4c:	mov    rsi,rsp
  428c4f:	mov    edx,0x10
  428c54:	mov    rdi,rbx
  428c57:	call   402250 <strtoul@plt>
  428c5c:	mov    rbp,QWORD PTR [rsp]
  428c60:	mov    r13b,BYTE PTR [rbp+0x0]
  428c64:	test   r13b,r13b
  428c67:	je     428ca5 <__ctype_b_loc@plt+0x269d5>
  428c69:	call   4022d0 <__ctype_b_loc@plt>
  428c6e:	mov    rax,QWORD PTR [rax]
  428c71:	movzx  ecx,r13b
  428c75:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  428c7a:	je     428c93 <__ctype_b_loc@plt+0x269c3>
  428c7c:	add    rbp,0x1
  428c80:	movzx  ecx,BYTE PTR [rbp+0x0]
  428c84:	add    rbp,0x1
  428c88:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  428c8d:	jne    428c80 <__ctype_b_loc@plt+0x269b0>
  428c8f:	test   cl,cl
  428c91:	je     428ca5 <__ctype_b_loc@plt+0x269d5>
  428c93:	lea    rdx,[rip+0x2207]        # 42aea1 <__ctype_b_loc@plt+0x28bd1>
  428c9a:	mov    rdi,r15
  428c9d:	mov    esi,r12d
  428ca0:	call   410850 <__ctype_b_loc@plt+0xe580>
  428ca5:	mov    eax,r14d
  428ca8:	add    rsp,0x8
  428cac:	pop    rbx
  428cad:	pop    r12
  428caf:	pop    r13
  428cb1:	pop    r14
  428cb3:	pop    r15
  428cb5:	pop    rbp
  428cb6:	ret    
  428cb7:	nop    WORD PTR [rax+rax*1+0x0]
  428cc0:	push   rbp
  428cc1:	push   r15
  428cc3:	push   r14
  428cc5:	push   r13
  428cc7:	push   r12
  428cc9:	push   rbx
  428cca:	sub    rsp,0x28
  428cce:	mov    r13d,edx
  428cd1:	mov    r14,rsi
  428cd4:	mov    rbx,rdi
  428cd7:	call   402050 <__errno_location@plt>
  428cdc:	mov    edi,DWORD PTR [rax]
  428cde:	call   4022a0 <strerror@plt>
  428ce3:	mov    r15,rax
  428ce6:	test   r13d,r13d
  428ce9:	jle    428d11 <__ctype_b_loc@plt+0x26a41>
  428ceb:	mov    rax,QWORD PTR [rbx+0x18]
  428cef:	movsxd rcx,r13d
  428cf2:	shl    rcx,0x4
  428cf6:	add    rax,rcx
  428cf9:	add    rax,0xfffffffffffffff0
  428cfd:	cmp    rax,QWORD PTR [rbx+0x10]
  428d01:	lea    rbp,[rip+0x1e10]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  428d08:	cmovb  rbp,rax
  428d0c:	jmp    428db2 <__ctype_b_loc@plt+0x26ae2>
  428d11:	cmp    r13d,0xffffd8f1
  428d18:	jl     428d2a <__ctype_b_loc@plt+0x26a5a>
  428d1a:	movsxd rbp,r13d
  428d1d:	shl    rbp,0x4
  428d21:	add    rbp,QWORD PTR [rbx+0x10]
  428d25:	jmp    428db2 <__ctype_b_loc@plt+0x26ae2>
  428d2a:	cmp    r13d,0xffffd8ee
  428d31:	je     428d79 <__ctype_b_loc@plt+0x26aa9>
  428d33:	cmp    r13d,0xffffd8ef
  428d3a:	je     428d50 <__ctype_b_loc@plt+0x26a80>
  428d3c:	cmp    r13d,0xffffd8f0
  428d43:	jne    428d7f <__ctype_b_loc@plt+0x26aaf>
  428d45:	mov    ebp,0xa0
  428d4a:	add    rbp,QWORD PTR [rbx+0x20]
  428d4e:	jmp    428db2 <__ctype_b_loc@plt+0x26ae2>
  428d50:	mov    rax,QWORD PTR [rbx+0x28]
  428d54:	mov    rax,QWORD PTR [rax+0x8]
  428d58:	mov    rax,QWORD PTR [rax]
  428d5b:	lea    rbp,[rbx+0x88]
  428d62:	mov    rax,QWORD PTR [rax+0x18]
  428d66:	mov    QWORD PTR [rbx+0x88],rax
  428d6d:	mov    DWORD PTR [rbx+0x90],0x5
  428d77:	jmp    428db2 <__ctype_b_loc@plt+0x26ae2>
  428d79:	lea    rbp,[rbx+0x78]
  428d7d:	jmp    428db2 <__ctype_b_loc@plt+0x26ae2>
  428d7f:	mov    rax,QWORD PTR [rbx+0x28]
  428d83:	mov    rax,QWORD PTR [rax+0x8]
  428d87:	mov    rax,QWORD PTR [rax]
  428d8a:	mov    ecx,0xffffd8ee
  428d8f:	sub    ecx,r13d
  428d92:	movzx  edx,BYTE PTR [rax+0xb]
  428d96:	cmp    ecx,edx
  428d98:	jle    428da3 <__ctype_b_loc@plt+0x26ad3>
  428d9a:	lea    rbp,[rip+0x1d77]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  428da1:	jmp    428db2 <__ctype_b_loc@plt+0x26ae2>
  428da3:	movsxd rcx,ecx
  428da6:	shl    rcx,0x4
  428daa:	lea    rbp,[rax+rcx*1]
  428dae:	add    rbp,0x18
  428db2:	mov    eax,DWORD PTR [rbp+0x8]
  428db5:	cmp    eax,0x4
  428db8:	je     428ee6 <__ctype_b_loc@plt+0x26c16>
  428dbe:	cmp    eax,0x3
  428dc1:	jne    428e3e <__ctype_b_loc@plt+0x26b6e>
  428dc3:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  428dc8:	lea    rsi,[rip+0x2052]        # 42ae21 <__ctype_b_loc@plt+0x28b51>
  428dcf:	mov    r12,rsp
  428dd2:	mov    al,0x1
  428dd4:	mov    rdi,r12
  428dd7:	call   402270 <sprintf@plt>
  428ddc:	mov    rdi,r12
  428ddf:	call   4020e0 <strlen@plt>
  428de4:	mov    rdi,rbx
  428de7:	mov    rsi,r12
  428dea:	mov    rdx,rax
  428ded:	call   403a90 <__ctype_b_loc@plt+0x17c0>
  428df2:	mov    QWORD PTR [rbp+0x0],rax
  428df6:	mov    DWORD PTR [rbp+0x8],0x4
  428dfd:	mov    rax,QWORD PTR [rbx+0x20]
  428e01:	mov    rcx,QWORD PTR [rax+0x78]
  428e05:	cmp    rcx,QWORD PTR [rax+0x70]
  428e09:	jb     428e13 <__ctype_b_loc@plt+0x26b43>
  428e0b:	mov    rdi,rbx
  428e0e:	call   408070 <__ctype_b_loc@plt+0x5da0>
  428e13:	test   r13d,r13d
  428e16:	jle    428e45 <__ctype_b_loc@plt+0x26b75>
  428e18:	mov    rax,QWORD PTR [rbx+0x18]
  428e1c:	movsxd rcx,r13d
  428e1f:	shl    rcx,0x4
  428e23:	add    rax,rcx
  428e26:	add    rax,0xfffffffffffffff0
  428e2a:	cmp    rax,QWORD PTR [rbx+0x10]
  428e2e:	lea    rbp,[rip+0x1ce3]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  428e35:	cmovb  rbp,rax
  428e39:	jmp    428ee6 <__ctype_b_loc@plt+0x26c16>
  428e3e:	xor    ecx,ecx
  428e40:	jmp    428eee <__ctype_b_loc@plt+0x26c1e>
  428e45:	cmp    r13d,0xffffd8f1
  428e4c:	jl     428e5e <__ctype_b_loc@plt+0x26b8e>
  428e4e:	movsxd rbp,r13d
  428e51:	shl    rbp,0x4
  428e55:	add    rbp,QWORD PTR [rbx+0x10]
  428e59:	jmp    428ee6 <__ctype_b_loc@plt+0x26c16>
  428e5e:	cmp    r13d,0xffffd8ee
  428e65:	je     428e84 <__ctype_b_loc@plt+0x26bb4>
  428e67:	cmp    r13d,0xffffd8ef
  428e6e:	je     428e8a <__ctype_b_loc@plt+0x26bba>
  428e70:	cmp    r13d,0xffffd8f0
  428e77:	jne    428eb3 <__ctype_b_loc@plt+0x26be3>
  428e79:	mov    ebp,0xa0
  428e7e:	add    rbp,QWORD PTR [rbx+0x20]
  428e82:	jmp    428ee6 <__ctype_b_loc@plt+0x26c16>
  428e84:	lea    rbp,[rbx+0x78]
  428e88:	jmp    428ee6 <__ctype_b_loc@plt+0x26c16>
  428e8a:	mov    rax,QWORD PTR [rbx+0x28]
  428e8e:	mov    rax,QWORD PTR [rax+0x8]
  428e92:	mov    rax,QWORD PTR [rax]
  428e95:	lea    rbp,[rbx+0x88]
  428e9c:	mov    rax,QWORD PTR [rax+0x18]
  428ea0:	mov    QWORD PTR [rbx+0x88],rax
  428ea7:	mov    DWORD PTR [rbx+0x90],0x5
  428eb1:	jmp    428ee6 <__ctype_b_loc@plt+0x26c16>
  428eb3:	mov    rax,QWORD PTR [rbx+0x28]
  428eb7:	mov    rax,QWORD PTR [rax+0x8]
  428ebb:	mov    rax,QWORD PTR [rax]
  428ebe:	mov    ecx,0xffffd8ee
  428ec3:	sub    ecx,r13d
  428ec6:	movzx  edx,BYTE PTR [rax+0xb]
  428eca:	cmp    ecx,edx
  428ecc:	jle    428ed7 <__ctype_b_loc@plt+0x26c07>
  428ece:	lea    rbp,[rip+0x1c43]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  428ed5:	jmp    428ee6 <__ctype_b_loc@plt+0x26c16>
  428ed7:	movsxd rcx,ecx
  428eda:	shl    rcx,0x4
  428ede:	lea    rbp,[rax+rcx*1]
  428ee2:	add    rbp,0x18
  428ee6:	mov    rcx,QWORD PTR [rbp+0x0]
  428eea:	add    rcx,0x18
  428eee:	add    rcx,0x1
  428ef2:	lea    rsi,[rip+0x2b79]        # 42ba72 <__ctype_b_loc@plt+0x297a2>
  428ef9:	xor    eax,eax
  428efb:	mov    rdi,rbx
  428efe:	mov    rdx,r14
  428f01:	mov    r8,r15
  428f04:	call   410790 <__ctype_b_loc@plt+0xe4c0>
  428f09:	test   r13d,r13d
  428f0c:	jle    428f34 <__ctype_b_loc@plt+0x26c64>
  428f0e:	mov    rax,QWORD PTR [rbx+0x18]
  428f12:	movsxd rcx,r13d
  428f15:	shl    rcx,0x4
  428f19:	add    rcx,rax
  428f1c:	add    rcx,0xfffffffffffffff0
  428f20:	cmp    rcx,QWORD PTR [rbx+0x10]
  428f24:	lea    rax,[rip+0x1bed]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  428f2b:	cmovb  rax,rcx
  428f2f:	jmp    428fd4 <__ctype_b_loc@plt+0x26d04>
  428f34:	cmp    r13d,0xffffd8f1
  428f3b:	jl     428f4d <__ctype_b_loc@plt+0x26c7d>
  428f3d:	movsxd rax,r13d
  428f40:	shl    rax,0x4
  428f44:	add    rax,QWORD PTR [rbx+0x10]
  428f48:	jmp    428fd4 <__ctype_b_loc@plt+0x26d04>
  428f4d:	cmp    r13d,0xffffd8ee
  428f54:	je     428f9c <__ctype_b_loc@plt+0x26ccc>
  428f56:	cmp    r13d,0xffffd8ef
  428f5d:	je     428f73 <__ctype_b_loc@plt+0x26ca3>
  428f5f:	cmp    r13d,0xffffd8f0
  428f66:	jne    428fa2 <__ctype_b_loc@plt+0x26cd2>
  428f68:	mov    eax,0xa0
  428f6d:	add    rax,QWORD PTR [rbx+0x20]
  428f71:	jmp    428fd4 <__ctype_b_loc@plt+0x26d04>
  428f73:	mov    rax,QWORD PTR [rbx+0x28]
  428f77:	mov    rax,QWORD PTR [rax+0x8]
  428f7b:	mov    rcx,QWORD PTR [rax]
  428f7e:	lea    rax,[rbx+0x88]
  428f85:	mov    rcx,QWORD PTR [rcx+0x18]
  428f89:	mov    QWORD PTR [rbx+0x88],rcx
  428f90:	mov    DWORD PTR [rbx+0x90],0x5
  428f9a:	jmp    428fd4 <__ctype_b_loc@plt+0x26d04>
  428f9c:	lea    rax,[rbx+0x78]
  428fa0:	jmp    428fd4 <__ctype_b_loc@plt+0x26d04>
  428fa2:	mov    rax,QWORD PTR [rbx+0x28]
  428fa6:	mov    rax,QWORD PTR [rax+0x8]
  428faa:	mov    rax,QWORD PTR [rax]
  428fad:	mov    ecx,0xffffd8ee
  428fb2:	sub    ecx,r13d
  428fb5:	movzx  edx,BYTE PTR [rax+0xb]
  428fb9:	cmp    ecx,edx
  428fbb:	jle    428fc6 <__ctype_b_loc@plt+0x26cf6>
  428fbd:	lea    rax,[rip+0x1b54]        # 42ab18 <__ctype_b_loc@plt+0x28848>
  428fc4:	jmp    428fd4 <__ctype_b_loc@plt+0x26d04>
  428fc6:	movsxd rcx,ecx
  428fc9:	shl    rcx,0x4
  428fcd:	add    rax,rcx
  428fd0:	add    rax,0x18
  428fd4:	add    rax,0x10
  428fd8:	mov    rcx,QWORD PTR [rbx+0x10]
  428fdc:	cmp    rax,rcx
  428fdf:	jae    42900a <__ctype_b_loc@plt+0x26d3a>
  428fe1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428feb:	nop    DWORD PTR [rax+rax*1+0x0]
  428ff0:	mov    rcx,QWORD PTR [rax]
  428ff3:	mov    QWORD PTR [rax-0x10],rcx
  428ff7:	mov    ecx,DWORD PTR [rax+0x8]
  428ffa:	mov    DWORD PTR [rax-0x8],ecx
  428ffd:	mov    rcx,QWORD PTR [rbx+0x10]
  429001:	add    rax,0x10
  429005:	cmp    rax,rcx
  429008:	jb     428ff0 <__ctype_b_loc@plt+0x26d20>
  42900a:	add    rcx,0xfffffffffffffff0
  42900e:	mov    QWORD PTR [rbx+0x10],rcx
  429012:	add    rsp,0x28
  429016:	pop    rbx
  429017:	pop    r12
  429019:	pop    r13
  42901b:	pop    r14
  42901d:	pop    r15
  42901f:	pop    rbp
  429020:	ret    
  429021:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42902b:	nop    DWORD PTR [rax+rax*1+0x0]
  429030:	push   r14
  429032:	push   rbx
  429033:	push   rax
  429034:	mov    r14,rdx
  429037:	mov    rbx,rsi
  42903a:	cmp    DWORD PTR [rsi],0x0
  42903d:	je     429055 <__ctype_b_loc@plt+0x26d85>
  42903f:	mov    DWORD PTR [rbx],0x0
  429045:	mov    QWORD PTR [r14],0x1
  42904c:	lea    rbx,[rip+0x2047]        # 42b09a <__ctype_b_loc@plt+0x28dca>
  429053:	jmp    42908a <__ctype_b_loc@plt+0x26dba>
  429055:	mov    rdi,QWORD PTR [rbx+0x8]
  429059:	call   4021a0 <feof@plt>
  42905e:	test   eax,eax
  429060:	je     429066 <__ctype_b_loc@plt+0x26d96>
  429062:	xor    ebx,ebx
  429064:	jmp    42908a <__ctype_b_loc@plt+0x26dba>
  429066:	mov    rcx,QWORD PTR [rbx+0x8]
  42906a:	add    rbx,0x10
  42906e:	mov    esi,0x1
  429073:	mov    edx,0x2000
  429078:	mov    rdi,rbx
  42907b:	call   4020a0 <fread@plt>
  429080:	mov    QWORD PTR [r14],rax
  429083:	test   rax,rax
  429086:	cmove  rbx,rax
  42908a:	mov    rax,rbx
  42908d:	add    rsp,0x8
  429091:	pop    rbx
  429092:	pop    r14
  429094:	ret    
  429095:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42909f:	nop
  4290a0:	mov    rax,QWORD PTR [rsi]
  4290a3:	mov    edx,DWORD PTR [rsi+0x8]
  4290a6:	mov    rsi,rax
  4290a9:	jmp    404ff0 <__ctype_b_loc@plt+0x2d20>
  4290ae:	xchg   ax,ax
  4290b0:	push   rbx
  4290b1:	mov    rax,QWORD PTR [rdi+0x20]
  4290b5:	cmp    QWORD PTR [rax+0x50],0x0
  4290ba:	je     4290d3 <__ctype_b_loc@plt+0x26e03>
  4290bc:	mov    rbx,rdi
  4290bf:	nop
  4290c0:	mov    rdi,rbx
  4290c3:	call   40b6f0 <__ctype_b_loc@plt+0x9420>
  4290c8:	mov    rax,QWORD PTR [rbx+0x20]
  4290cc:	cmp    QWORD PTR [rax+0x50],0x0
  4290d1:	jne    4290c0 <__ctype_b_loc@plt+0x26df0>
  4290d3:	pop    rbx
  4290d4:	ret    
  4290d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4290df:	nop
  4290e0:	endbr64 
  4290e4:	push   r15
  4290e6:	lea    r15,[rip+0x7713]        # 430800 <__ctype_b_loc@plt+0x2e530>
  4290ed:	push   r14
  4290ef:	mov    r14,rdx
  4290f2:	push   r13
  4290f4:	mov    r13,rsi
  4290f7:	push   r12
  4290f9:	mov    r12d,edi
  4290fc:	push   rbp
  4290fd:	lea    rbp,[rip+0x7704]        # 430808 <__ctype_b_loc@plt+0x2e538>
  429104:	push   rbx
  429105:	sub    rbp,r15
  429108:	sub    rsp,0x8
  42910c:	call   402000 <__ctype_toupper_loc@plt-0x30>
  429111:	sar    rbp,0x3
  429115:	je     429136 <__ctype_b_loc@plt+0x26e66>
  429117:	xor    ebx,ebx
  429119:	nop    DWORD PTR [rax+0x0]
  429120:	mov    rdx,r14
  429123:	mov    rsi,r13
  429126:	mov    edi,r12d
  429129:	call   QWORD PTR [r15+rbx*8]
  42912d:	add    rbx,0x1
  429131:	cmp    rbp,rbx
  429134:	jne    429120 <__ctype_b_loc@plt+0x26e50>
  429136:	add    rsp,0x8
  42913a:	pop    rbx
  42913b:	pop    rbp
  42913c:	pop    r12
  42913e:	pop    r13
  429140:	pop    r14
  429142:	pop    r15
  429144:	ret    
  429145:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429150:	endbr64 
  429154:	ret    

Disassembly of section .fini:

0000000000429158 <.fini>:
  429158:	endbr64 
  42915c:	sub    rsp,0x8
  429160:	add    rsp,0x8
  429164:	ret    
