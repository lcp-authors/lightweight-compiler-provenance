
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uql:     file format elf64-x86-64


Disassembly of section .init:

0000000000406000 <.init>:
  406000:	endbr64 
  406004:	sub    rsp,0x8
  406008:	mov    rax,QWORD PTR [rip+0x40fd1]        # 446fe0 <__gmon_start__>
  40600f:	test   rax,rax
  406012:	je     406016 <free@plt-0x14a>
  406014:	call   rax
  406016:	add    rsp,0x8
  40601a:	ret    

Disassembly of section .plt:

0000000000406020 <.plt>:
  406020:	push   QWORD PTR [rip+0x40fe2]        # 447008 <flatcc_builder_padding_base@@Base+0xc088>
  406026:	bnd jmp QWORD PTR [rip+0x40fe3]        # 447010 <flatcc_builder_padding_base@@Base+0xc090>
  40602d:	nop    DWORD PTR [rax]
  406030:	endbr64 
  406034:	push   0x0
  406039:	bnd jmp 406020 <free@plt-0x140>
  40603f:	nop
  406040:	endbr64 
  406044:	push   0x1
  406049:	bnd jmp 406020 <free@plt-0x140>
  40604f:	nop
  406050:	endbr64 
  406054:	push   0x2
  406059:	bnd jmp 406020 <free@plt-0x140>
  40605f:	nop
  406060:	endbr64 
  406064:	push   0x3
  406069:	bnd jmp 406020 <free@plt-0x140>
  40606f:	nop
  406070:	endbr64 
  406074:	push   0x4
  406079:	bnd jmp 406020 <free@plt-0x140>
  40607f:	nop
  406080:	endbr64 
  406084:	push   0x5
  406089:	bnd jmp 406020 <free@plt-0x140>
  40608f:	nop
  406090:	endbr64 
  406094:	push   0x6
  406099:	bnd jmp 406020 <free@plt-0x140>
  40609f:	nop
  4060a0:	endbr64 
  4060a4:	push   0x7
  4060a9:	bnd jmp 406020 <free@plt-0x140>
  4060af:	nop
  4060b0:	endbr64 
  4060b4:	push   0x8
  4060b9:	bnd jmp 406020 <free@plt-0x140>
  4060bf:	nop
  4060c0:	endbr64 
  4060c4:	push   0x9
  4060c9:	bnd jmp 406020 <free@plt-0x140>
  4060cf:	nop
  4060d0:	endbr64 
  4060d4:	push   0xa
  4060d9:	bnd jmp 406020 <free@plt-0x140>
  4060df:	nop
  4060e0:	endbr64 
  4060e4:	push   0xb
  4060e9:	bnd jmp 406020 <free@plt-0x140>
  4060ef:	nop
  4060f0:	endbr64 
  4060f4:	push   0xc
  4060f9:	bnd jmp 406020 <free@plt-0x140>
  4060ff:	nop
  406100:	endbr64 
  406104:	push   0xd
  406109:	bnd jmp 406020 <free@plt-0x140>
  40610f:	nop
  406110:	endbr64 
  406114:	push   0xe
  406119:	bnd jmp 406020 <free@plt-0x140>
  40611f:	nop
  406120:	endbr64 
  406124:	push   0xf
  406129:	bnd jmp 406020 <free@plt-0x140>
  40612f:	nop
  406130:	endbr64 
  406134:	push   0x10
  406139:	bnd jmp 406020 <free@plt-0x140>
  40613f:	nop
  406140:	endbr64 
  406144:	push   0x11
  406149:	bnd jmp 406020 <free@plt-0x140>
  40614f:	nop
  406150:	endbr64 
  406154:	push   0x12
  406159:	bnd jmp 406020 <free@plt-0x140>
  40615f:	nop

Disassembly of section .plt.sec:

0000000000406160 <free@plt>:
  406160:	endbr64 
  406164:	bnd jmp QWORD PTR [rip+0x40ead]        # 447018 <free@GLIBC_2.2.5>
  40616b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406170 <strncpy@plt>:
  406170:	endbr64 
  406174:	bnd jmp QWORD PTR [rip+0x40ea5]        # 447020 <strncpy@GLIBC_2.2.5>
  40617b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406180 <strtod@plt>:
  406180:	endbr64 
  406184:	bnd jmp QWORD PTR [rip+0x40e9d]        # 447028 <strtod@GLIBC_2.2.5>
  40618b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406190 <strlen@plt>:
  406190:	endbr64 
  406194:	bnd jmp QWORD PTR [rip+0x40e95]        # 447030 <strlen@GLIBC_2.2.5>
  40619b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004061a0 <__stack_chk_fail@plt>:
  4061a0:	endbr64 
  4061a4:	bnd jmp QWORD PTR [rip+0x40e8d]        # 447038 <__stack_chk_fail@GLIBC_2.4>
  4061ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004061b0 <__assert_fail@plt>:
  4061b0:	endbr64 
  4061b4:	bnd jmp QWORD PTR [rip+0x40e85]        # 447040 <__assert_fail@GLIBC_2.2.5>
  4061bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004061c0 <memset@plt>:
  4061c0:	endbr64 
  4061c4:	bnd jmp QWORD PTR [rip+0x40e7d]        # 447048 <memset@GLIBC_2.2.5>
  4061cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004061d0 <fputc@plt>:
  4061d0:	endbr64 
  4061d4:	bnd jmp QWORD PTR [rip+0x40e75]        # 447050 <fputc@GLIBC_2.2.5>
  4061db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004061e0 <memchr@plt>:
  4061e0:	endbr64 
  4061e4:	bnd jmp QWORD PTR [rip+0x40e6d]        # 447058 <memchr@GLIBC_2.2.5>
  4061eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004061f0 <memcmp@plt>:
  4061f0:	endbr64 
  4061f4:	bnd jmp QWORD PTR [rip+0x40e65]        # 447060 <memcmp@GLIBC_2.2.5>
  4061fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406200 <strcmp@plt>:
  406200:	endbr64 
  406204:	bnd jmp QWORD PTR [rip+0x40e5d]        # 447068 <strcmp@GLIBC_2.2.5>
  40620b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406210 <fprintf@plt>:
  406210:	endbr64 
  406214:	bnd jmp QWORD PTR [rip+0x40e55]        # 447070 <fprintf@GLIBC_2.2.5>
  40621b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406220 <memcpy@plt>:
  406220:	endbr64 
  406224:	bnd jmp QWORD PTR [rip+0x40e4d]        # 447078 <memcpy@GLIBC_2.14>
  40622b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406230 <malloc@plt>:
  406230:	endbr64 
  406234:	bnd jmp QWORD PTR [rip+0x40e45]        # 447080 <malloc@GLIBC_2.2.5>
  40623b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406240 <realloc@plt>:
  406240:	endbr64 
  406244:	bnd jmp QWORD PTR [rip+0x40e3d]        # 447088 <realloc@GLIBC_2.2.5>
  40624b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406250 <memmove@plt>:
  406250:	endbr64 
  406254:	bnd jmp QWORD PTR [rip+0x40e35]        # 447090 <memmove@GLIBC_2.2.5>
  40625b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406260 <sprintf@plt>:
  406260:	endbr64 
  406264:	bnd jmp QWORD PTR [rip+0x40e2d]        # 447098 <sprintf@GLIBC_2.2.5>
  40626b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406270 <fwrite@plt>:
  406270:	endbr64 
  406274:	bnd jmp QWORD PTR [rip+0x40e25]        # 4470a0 <fwrite@GLIBC_2.2.5>
  40627b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406280 <posix_memalign@plt>:
  406280:	endbr64 
  406284:	bnd jmp QWORD PTR [rip+0x40e1d]        # 4470a8 <posix_memalign@GLIBC_2.2.5>
  40628b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000406290 <_start@@Base>:
  406290:	endbr64 
  406294:	xor    ebp,ebp
  406296:	mov    r9,rdx
  406299:	pop    rsi
  40629a:	mov    rdx,rsp
  40629d:	and    rsp,0xfffffffffffffff0
  4062a1:	push   rax
  4062a2:	push   rsp
  4062a3:	mov    r8,0x436700
  4062aa:	mov    rcx,0x436690
  4062b1:	mov    rdi,0x41af67
  4062b8:	call   QWORD PTR [rip+0x40d1a]        # 446fd8 <__libc_start_main@GLIBC_2.2.5>
  4062be:	hlt    
  4062bf:	nop
  4062c0:	endbr64 
  4062c4:	ret    
  4062c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4062cf:	nop
  4062d0:	mov    eax,0x447a70
  4062d5:	cmp    rax,0x447a70
  4062db:	je     4062f0 <_start@@Base+0x60>
  4062dd:	mov    eax,0x0
  4062e2:	test   rax,rax
  4062e5:	je     4062f0 <_start@@Base+0x60>
  4062e7:	mov    edi,0x447a70
  4062ec:	jmp    rax
  4062ee:	xchg   ax,ax
  4062f0:	ret    
  4062f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4062fc:	nop    DWORD PTR [rax+0x0]
  406300:	mov    esi,0x447a70
  406305:	sub    rsi,0x447a70
  40630c:	sar    rsi,0x3
  406310:	mov    rax,rsi
  406313:	shr    rax,0x3f
  406317:	add    rsi,rax
  40631a:	sar    rsi,1
  40631d:	je     406330 <_start@@Base+0xa0>
  40631f:	mov    eax,0x0
  406324:	test   rax,rax
  406327:	je     406330 <_start@@Base+0xa0>
  406329:	mov    edi,0x447a70
  40632e:	jmp    rax
  406330:	ret    
  406331:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40633c:	nop    DWORD PTR [rax+0x0]
  406340:	endbr64 
  406344:	cmp    BYTE PTR [rip+0x41725],0x0        # 447a70 <__bss_start@@Base>
  40634b:	jne    406360 <_start@@Base+0xd0>
  40634d:	push   rbp
  40634e:	mov    rbp,rsp
  406351:	call   4062d0 <_start@@Base+0x40>
  406356:	mov    BYTE PTR [rip+0x41713],0x1        # 447a70 <__bss_start@@Base>
  40635d:	pop    rbp
  40635e:	ret    
  40635f:	nop
  406360:	ret    
  406361:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40636c:	nop    DWORD PTR [rax+0x0]
  406370:	endbr64 
  406374:	jmp    406300 <_start@@Base+0x70>
  406376:	push   rbp
  406377:	mov    rbp,rsp
  40637a:	mov    eax,edi
  40637c:	mov    BYTE PTR [rbp-0x4],al
  40637f:	movzx  eax,BYTE PTR [rbp-0x4]
  406383:	pop    rbp
  406384:	ret    
  406385:	push   rbp
  406386:	mov    rbp,rsp
  406389:	sub    rsp,0x10
  40638d:	mov    QWORD PTR [rbp-0x8],rdi
  406391:	mov    eax,esi
  406393:	mov    BYTE PTR [rbp-0xc],al
  406396:	movzx  eax,BYTE PTR [rbp-0xc]
  40639a:	mov    edi,eax
  40639c:	call   406376 <_start@@Base+0xe6>
  4063a1:	mov    rdx,QWORD PTR [rbp-0x8]
  4063a5:	mov    BYTE PTR [rdx],al
  4063a7:	nop
  4063a8:	leave  
  4063a9:	ret    
  4063aa:	push   rbp
  4063ab:	mov    rbp,rsp
  4063ae:	mov    eax,edi
  4063b0:	mov    WORD PTR [rbp-0x4],ax
  4063b4:	movzx  eax,WORD PTR [rbp-0x4]
  4063b8:	pop    rbp
  4063b9:	ret    
  4063ba:	push   rbp
  4063bb:	mov    rbp,rsp
  4063be:	sub    rsp,0x10
  4063c2:	mov    QWORD PTR [rbp-0x8],rdi
  4063c6:	mov    eax,esi
  4063c8:	mov    WORD PTR [rbp-0xc],ax
  4063cc:	movzx  eax,WORD PTR [rbp-0xc]
  4063d0:	mov    edi,eax
  4063d2:	call   4063aa <_start@@Base+0x11a>
  4063d7:	mov    edx,eax
  4063d9:	mov    rax,QWORD PTR [rbp-0x8]
  4063dd:	mov    WORD PTR [rax],dx
  4063e0:	nop
  4063e1:	leave  
  4063e2:	ret    
  4063e3:	push   rbp
  4063e4:	mov    rbp,rsp
  4063e7:	mov    DWORD PTR [rbp-0x4],edi
  4063ea:	mov    eax,DWORD PTR [rbp-0x4]
  4063ed:	pop    rbp
  4063ee:	ret    
  4063ef:	push   rbp
  4063f0:	mov    rbp,rsp
  4063f3:	sub    rsp,0x10
  4063f7:	mov    QWORD PTR [rbp-0x8],rdi
  4063fb:	mov    DWORD PTR [rbp-0xc],esi
  4063fe:	mov    eax,DWORD PTR [rbp-0xc]
  406401:	mov    edi,eax
  406403:	call   4063e3 <_start@@Base+0x153>
  406408:	mov    edx,eax
  40640a:	mov    rax,QWORD PTR [rbp-0x8]
  40640e:	mov    DWORD PTR [rax],edx
  406410:	nop
  406411:	leave  
  406412:	ret    
  406413:	push   rbp
  406414:	mov    rbp,rsp
  406417:	mov    QWORD PTR [rbp-0x8],rdi
  40641b:	mov    rax,QWORD PTR [rbp-0x8]
  40641f:	pop    rbp
  406420:	ret    
  406421:	push   rbp
  406422:	mov    rbp,rsp
  406425:	sub    rsp,0x10
  406429:	mov    QWORD PTR [rbp-0x8],rdi
  40642d:	mov    QWORD PTR [rbp-0x10],rsi
  406431:	mov    rax,QWORD PTR [rbp-0x10]
  406435:	mov    rdi,rax
  406438:	call   406413 <_start@@Base+0x183>
  40643d:	mov    rdx,rax
  406440:	mov    rax,QWORD PTR [rbp-0x8]
  406444:	mov    QWORD PTR [rax],rdx
  406447:	nop
  406448:	leave  
  406449:	ret    
  40644a:	push   rbp
  40644b:	mov    rbp,rsp
  40644e:	mov    eax,edi
  406450:	mov    BYTE PTR [rbp-0x4],al
  406453:	movzx  eax,BYTE PTR [rbp-0x4]
  406457:	pop    rbp
  406458:	ret    
  406459:	push   rbp
  40645a:	mov    rbp,rsp
  40645d:	sub    rsp,0x10
  406461:	mov    QWORD PTR [rbp-0x8],rdi
  406465:	mov    eax,esi
  406467:	mov    BYTE PTR [rbp-0xc],al
  40646a:	movsx  eax,BYTE PTR [rbp-0xc]
  40646e:	mov    edi,eax
  406470:	call   40644a <_start@@Base+0x1ba>
  406475:	mov    rdx,QWORD PTR [rbp-0x8]
  406479:	mov    BYTE PTR [rdx],al
  40647b:	nop
  40647c:	leave  
  40647d:	ret    
  40647e:	push   rbp
  40647f:	mov    rbp,rsp
  406482:	mov    eax,edi
  406484:	mov    WORD PTR [rbp-0x4],ax
  406488:	movzx  eax,WORD PTR [rbp-0x4]
  40648c:	pop    rbp
  40648d:	ret    
  40648e:	push   rbp
  40648f:	mov    rbp,rsp
  406492:	sub    rsp,0x10
  406496:	mov    QWORD PTR [rbp-0x8],rdi
  40649a:	mov    eax,esi
  40649c:	mov    WORD PTR [rbp-0xc],ax
  4064a0:	movsx  eax,WORD PTR [rbp-0xc]
  4064a4:	mov    edi,eax
  4064a6:	call   40647e <_start@@Base+0x1ee>
  4064ab:	mov    edx,eax
  4064ad:	mov    rax,QWORD PTR [rbp-0x8]
  4064b1:	mov    WORD PTR [rax],dx
  4064b4:	nop
  4064b5:	leave  
  4064b6:	ret    
  4064b7:	push   rbp
  4064b8:	mov    rbp,rsp
  4064bb:	mov    DWORD PTR [rbp-0x4],edi
  4064be:	mov    eax,DWORD PTR [rbp-0x4]
  4064c1:	pop    rbp
  4064c2:	ret    
  4064c3:	push   rbp
  4064c4:	mov    rbp,rsp
  4064c7:	sub    rsp,0x10
  4064cb:	mov    QWORD PTR [rbp-0x8],rdi
  4064cf:	mov    DWORD PTR [rbp-0xc],esi
  4064d2:	mov    eax,DWORD PTR [rbp-0xc]
  4064d5:	mov    edi,eax
  4064d7:	call   4064b7 <_start@@Base+0x227>
  4064dc:	mov    edx,eax
  4064de:	mov    rax,QWORD PTR [rbp-0x8]
  4064e2:	mov    DWORD PTR [rax],edx
  4064e4:	nop
  4064e5:	leave  
  4064e6:	ret    
  4064e7:	push   rbp
  4064e8:	mov    rbp,rsp
  4064eb:	mov    QWORD PTR [rbp-0x8],rdi
  4064ef:	mov    rax,QWORD PTR [rbp-0x8]
  4064f3:	pop    rbp
  4064f4:	ret    
  4064f5:	push   rbp
  4064f6:	mov    rbp,rsp
  4064f9:	sub    rsp,0x10
  4064fd:	mov    QWORD PTR [rbp-0x8],rdi
  406501:	mov    QWORD PTR [rbp-0x10],rsi
  406505:	mov    rax,QWORD PTR [rbp-0x10]
  406509:	mov    rdi,rax
  40650c:	call   4064e7 <_start@@Base+0x257>
  406511:	mov    rdx,rax
  406514:	mov    rax,QWORD PTR [rbp-0x8]
  406518:	mov    QWORD PTR [rax],rdx
  40651b:	nop
  40651c:	leave  
  40651d:	ret    
  40651e:	push   rbp
  40651f:	mov    rbp,rsp
  406522:	vmovss DWORD PTR [rbp-0x14],xmm0
  406527:	vmovss xmm0,DWORD PTR [rbp-0x14]
  40652c:	vmovss DWORD PTR [rbp-0x4],xmm0
  406531:	mov    eax,DWORD PTR [rbp-0x4]
  406534:	mov    DWORD PTR [rbp-0x4],eax
  406537:	vmovss xmm0,DWORD PTR [rbp-0x4]
  40653c:	pop    rbp
  40653d:	ret    
  40653e:	push   rbp
  40653f:	mov    rbp,rsp
  406542:	sub    rsp,0x10
  406546:	mov    QWORD PTR [rbp-0x8],rdi
  40654a:	vmovss DWORD PTR [rbp-0xc],xmm0
  40654f:	mov    eax,DWORD PTR [rbp-0xc]
  406552:	vmovd  xmm0,eax
  406556:	call   40651e <_start@@Base+0x28e>
  40655b:	vmovd  eax,xmm0
  40655f:	mov    rdx,QWORD PTR [rbp-0x8]
  406563:	mov    DWORD PTR [rdx],eax
  406565:	nop
  406566:	leave  
  406567:	ret    
  406568:	push   rbp
  406569:	mov    rbp,rsp
  40656c:	vmovsd QWORD PTR [rbp-0x18],xmm0
  406571:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  406576:	vmovsd QWORD PTR [rbp-0x8],xmm0
  40657b:	mov    rax,QWORD PTR [rbp-0x8]
  40657f:	mov    QWORD PTR [rbp-0x8],rax
  406583:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  406588:	vmovq  rax,xmm0
  40658d:	vmovq  xmm0,rax
  406592:	pop    rbp
  406593:	ret    
  406594:	push   rbp
  406595:	mov    rbp,rsp
  406598:	sub    rsp,0x10
  40659c:	mov    QWORD PTR [rbp-0x8],rdi
  4065a0:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4065a5:	mov    rax,QWORD PTR [rbp-0x10]
  4065a9:	vmovq  xmm0,rax
  4065ae:	call   406568 <_start@@Base+0x2d8>
  4065b3:	vmovq  rax,xmm0
  4065b8:	mov    rdx,QWORD PTR [rbp-0x8]
  4065bc:	mov    QWORD PTR [rdx],rax
  4065bf:	nop
  4065c0:	leave  
  4065c1:	ret    
  4065c2:	push   rbp
  4065c3:	mov    rbp,rsp
  4065c6:	mov    eax,edi
  4065c8:	mov    BYTE PTR [rbp-0x4],al
  4065cb:	movzx  eax,BYTE PTR [rbp-0x4]
  4065cf:	pop    rbp
  4065d0:	ret    
  4065d1:	push   rbp
  4065d2:	mov    rbp,rsp
  4065d5:	sub    rsp,0x10
  4065d9:	mov    QWORD PTR [rbp-0x8],rdi
  4065dd:	mov    eax,esi
  4065df:	mov    BYTE PTR [rbp-0xc],al
  4065e2:	movzx  eax,BYTE PTR [rbp-0xc]
  4065e6:	mov    edi,eax
  4065e8:	call   4065c2 <_start@@Base+0x332>
  4065ed:	mov    rdx,QWORD PTR [rbp-0x8]
  4065f1:	mov    BYTE PTR [rdx],al
  4065f3:	nop
  4065f4:	leave  
  4065f5:	ret    
  4065f6:	push   rbp
  4065f7:	mov    rbp,rsp
  4065fa:	sub    rsp,0x30
  4065fe:	mov    QWORD PTR [rbp-0x8],rdi
  406602:	mov    QWORD PTR [rbp-0x10],rsi
  406606:	mov    QWORD PTR [rbp-0x18],rdx
  40660a:	mov    QWORD PTR [rbp-0x20],rcx
  40660e:	mov    DWORD PTR [rbp-0x24],r8d
  406612:	mov    rax,QWORD PTR [rbp-0x8]
  406616:	mov    edx,0x48
  40661b:	mov    esi,0x0
  406620:	mov    rdi,rax
  406623:	call   4061c0 <memset@plt>
  406628:	mov    rax,QWORD PTR [rbp-0x8]
  40662c:	mov    rdx,QWORD PTR [rbp-0x10]
  406630:	mov    QWORD PTR [rax],rdx
  406633:	mov    rax,QWORD PTR [rbp-0x8]
  406637:	mov    rdx,QWORD PTR [rbp-0x18]
  40663b:	mov    QWORD PTR [rax+0x8],rdx
  40663f:	mov    rax,QWORD PTR [rbp-0x8]
  406643:	mov    DWORD PTR [rax+0x18],0x1
  40664a:	mov    rax,QWORD PTR [rbp-0x8]
  40664e:	mov    edx,DWORD PTR [rbp-0x24]
  406651:	mov    DWORD PTR [rax+0x10],edx
  406654:	mov    rax,QWORD PTR [rbp-0x8]
  406658:	mov    rdx,QWORD PTR [rbp-0x18]
  40665c:	mov    QWORD PTR [rax+0x28],rdx
  406660:	mov    rax,QWORD PTR [rbp-0x8]
  406664:	mov    rdx,QWORD PTR [rbp-0x20]
  406668:	mov    QWORD PTR [rax+0x30],rdx
  40666c:	mov    rax,QWORD PTR [rbp-0x8]
  406670:	mov    rdx,QWORD PTR [rbp-0x18]
  406674:	mov    QWORD PTR [rax+0x38],rdx
  406678:	nop
  406679:	leave  
  40667a:	ret    
  40667b:	push   rbp
  40667c:	mov    rbp,rsp
  40667f:	sub    rsp,0x20
  406683:	mov    QWORD PTR [rbp-0x8],rdi
  406687:	mov    QWORD PTR [rbp-0x10],rsi
  40668b:	mov    QWORD PTR [rbp-0x18],rdx
  40668f:	mov    rax,QWORD PTR [rbp-0x18]
  406693:	sub    rax,QWORD PTR [rbp-0x10]
  406697:	cmp    rax,0x1
  40669b:	jle    4066d0 <_start@@Base+0x440>
  40669d:	mov    rax,QWORD PTR [rbp-0x10]
  4066a1:	movzx  eax,BYTE PTR [rax]
  4066a4:	cmp    al,0x20
  4066a6:	jle    4066ae <_start@@Base+0x41e>
  4066a8:	mov    rax,QWORD PTR [rbp-0x10]
  4066ac:	jmp    4066e7 <_start@@Base+0x457>
  4066ae:	mov    rax,QWORD PTR [rbp-0x10]
  4066b2:	movzx  eax,BYTE PTR [rax]
  4066b5:	cmp    al,0x20
  4066b7:	jne    4066d0 <_start@@Base+0x440>
  4066b9:	mov    rax,QWORD PTR [rbp-0x10]
  4066bd:	inc    rax
  4066c0:	movzx  eax,BYTE PTR [rax]
  4066c3:	cmp    al,0x20
  4066c5:	jle    4066d0 <_start@@Base+0x440>
  4066c7:	mov    rax,QWORD PTR [rbp-0x10]
  4066cb:	inc    rax
  4066ce:	jmp    4066e7 <_start@@Base+0x457>
  4066d0:	mov    rdx,QWORD PTR [rbp-0x18]
  4066d4:	mov    rcx,QWORD PTR [rbp-0x10]
  4066d8:	mov    rax,QWORD PTR [rbp-0x8]
  4066dc:	mov    rsi,rcx
  4066df:	mov    rdi,rax
  4066e2:	call   427df9 <flatcc_json_parser_space_ext@@Base>
  4066e7:	leave  
  4066e8:	ret    
  4066e9:	push   rbp
  4066ea:	mov    rbp,rsp
  4066ed:	sub    rsp,0x20
  4066f1:	mov    QWORD PTR [rbp-0x8],rdi
  4066f5:	mov    QWORD PTR [rbp-0x10],rsi
  4066f9:	mov    QWORD PTR [rbp-0x18],rdx
  4066fd:	mov    rax,QWORD PTR [rbp-0x10]
  406701:	cmp    rax,QWORD PTR [rbp-0x18]
  406705:	jne    40670d <_start@@Base+0x47d>
  406707:	mov    rax,QWORD PTR [rbp-0x10]
  40670b:	jmp    40675e <_start@@Base+0x4ce>
  40670d:	mov    rax,QWORD PTR [rbp-0x10]
  406711:	movzx  eax,BYTE PTR [rax]
  406714:	cmp    al,0x22
  406716:	jne    406729 <_start@@Base+0x499>
  406718:	inc    QWORD PTR [rbp-0x10]
  40671c:	mov    rax,QWORD PTR [rbp-0x8]
  406720:	mov    DWORD PTR [rax+0x14],0x0
  406727:	jmp    40675a <_start@@Base+0x4ca>
  406729:	mov    rax,QWORD PTR [rbp-0x10]
  40672d:	movzx  eax,BYTE PTR [rax]
  406730:	cmp    al,0x2e
  406732:	jne    40674f <_start@@Base+0x4bf>
  406734:	mov    rdx,QWORD PTR [rbp-0x18]
  406738:	mov    rsi,QWORD PTR [rbp-0x10]
  40673c:	mov    rax,QWORD PTR [rbp-0x8]
  406740:	mov    ecx,0x5
  406745:	mov    rdi,rax
  406748:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40674d:	jmp    40675e <_start@@Base+0x4ce>
  40674f:	mov    rax,QWORD PTR [rbp-0x8]
  406753:	mov    DWORD PTR [rax+0x14],0x1
  40675a:	mov    rax,QWORD PTR [rbp-0x10]
  40675e:	leave  
  40675f:	ret    
  406760:	push   rbp
  406761:	mov    rbp,rsp
  406764:	mov    QWORD PTR [rbp-0x18],rdi
  406768:	mov    QWORD PTR [rbp-0x20],rsi
  40676c:	mov    QWORD PTR [rbp-0x10],0x0
  406774:	mov    rax,QWORD PTR [rbp-0x20]
  406778:	sub    rax,QWORD PTR [rbp-0x18]
  40677c:	mov    QWORD PTR [rbp-0x8],rax
  406780:	cmp    QWORD PTR [rbp-0x8],0x8
  406785:	jbe    40678f <_start@@Base+0x4ff>
  406787:	mov    QWORD PTR [rbp-0x8],0x8
  40678f:	cmp    QWORD PTR [rbp-0x8],0x8
  406794:	ja     406870 <_start@@Base+0x5e0>
  40679a:	mov    rax,QWORD PTR [rbp-0x8]
  40679e:	lea    rdx,[rax*4+0x0]
  4067a6:	lea    rax,[rip+0x30867]        # 437014 <_IO_stdin_used@@Base+0x14>
  4067ad:	mov    eax,DWORD PTR [rdx+rax*1]
  4067b0:	movsxd rdx,eax
  4067b3:	lea    rax,[rip+0x3085a]        # 437014 <_IO_stdin_used@@Base+0x14>
  4067ba:	add    rax,rdx
  4067bd:	notrack jmp rax
  4067c0:	mov    rax,QWORD PTR [rbp-0x18]
  4067c4:	add    rax,0x7
  4067c8:	movzx  eax,BYTE PTR [rax]
  4067cb:	movsx  rax,al
  4067cf:	or     QWORD PTR [rbp-0x10],rax
  4067d3:	mov    rax,QWORD PTR [rbp-0x18]
  4067d7:	add    rax,0x6
  4067db:	movzx  eax,BYTE PTR [rax]
  4067de:	movsx  rax,al
  4067e2:	shl    rax,0x8
  4067e6:	or     QWORD PTR [rbp-0x10],rax
  4067ea:	mov    rax,QWORD PTR [rbp-0x18]
  4067ee:	add    rax,0x5
  4067f2:	movzx  eax,BYTE PTR [rax]
  4067f5:	movsx  rax,al
  4067f9:	shl    rax,0x10
  4067fd:	or     QWORD PTR [rbp-0x10],rax
  406801:	mov    rax,QWORD PTR [rbp-0x18]
  406805:	add    rax,0x4
  406809:	movzx  eax,BYTE PTR [rax]
  40680c:	movsx  rax,al
  406810:	shl    rax,0x18
  406814:	or     QWORD PTR [rbp-0x10],rax
  406818:	mov    rax,QWORD PTR [rbp-0x18]
  40681c:	add    rax,0x3
  406820:	movzx  eax,BYTE PTR [rax]
  406823:	movsx  rax,al
  406827:	shl    rax,0x20
  40682b:	or     QWORD PTR [rbp-0x10],rax
  40682f:	mov    rax,QWORD PTR [rbp-0x18]
  406833:	add    rax,0x2
  406837:	movzx  eax,BYTE PTR [rax]
  40683a:	movsx  rax,al
  40683e:	shl    rax,0x28
  406842:	or     QWORD PTR [rbp-0x10],rax
  406846:	mov    rax,QWORD PTR [rbp-0x18]
  40684a:	inc    rax
  40684d:	movzx  eax,BYTE PTR [rax]
  406850:	movsx  rax,al
  406854:	shl    rax,0x30
  406858:	or     QWORD PTR [rbp-0x10],rax
  40685c:	mov    rax,QWORD PTR [rbp-0x18]
  406860:	movzx  eax,BYTE PTR [rax]
  406863:	movsx  rax,al
  406867:	shl    rax,0x38
  40686b:	or     QWORD PTR [rbp-0x10],rax
  40686f:	nop
  406870:	mov    rax,QWORD PTR [rbp-0x10]
  406874:	pop    rbp
  406875:	ret    
  406876:	push   rbp
  406877:	mov    rbp,rsp
  40687a:	sub    rsp,0x20
  40687e:	mov    QWORD PTR [rbp-0x18],rdi
  406882:	mov    QWORD PTR [rbp-0x20],rsi
  406886:	mov    rax,QWORD PTR [rbp-0x20]
  40688a:	sub    rax,QWORD PTR [rbp-0x18]
  40688e:	mov    QWORD PTR [rbp-0x8],rax
  406892:	cmp    QWORD PTR [rbp-0x8],0x7
  406897:	jbe    4068a5 <_start@@Base+0x615>
  406899:	mov    rax,QWORD PTR [rbp-0x18]
  40689d:	mov    rax,QWORD PTR [rax]
  4068a0:	bswap  rax
  4068a3:	jmp    4068b8 <_start@@Base+0x628>
  4068a5:	mov    rdx,QWORD PTR [rbp-0x20]
  4068a9:	mov    rax,QWORD PTR [rbp-0x18]
  4068ad:	mov    rsi,rdx
  4068b0:	mov    rdi,rax
  4068b3:	call   406760 <_start@@Base+0x4d0>
  4068b8:	leave  
  4068b9:	ret    
  4068ba:	push   rbp
  4068bb:	mov    rbp,rsp
  4068be:	mov    QWORD PTR [rbp-0x18],rdi
  4068c2:	mov    QWORD PTR [rbp-0x20],rsi
  4068c6:	mov    QWORD PTR [rbp-0x28],rdx
  4068ca:	mov    DWORD PTR [rbp-0x2c],ecx
  4068cd:	mov    rax,QWORD PTR [rbp-0x20]
  4068d1:	mov    QWORD PTR [rbp-0x8],rax
  4068d5:	mov    rax,QWORD PTR [rbp-0x28]
  4068d9:	sub    rax,QWORD PTR [rbp-0x20]
  4068dd:	mov    rdx,rax
  4068e0:	mov    eax,DWORD PTR [rbp-0x2c]
  4068e3:	cdqe   
  4068e5:	cmp    rdx,rax
  4068e8:	jg     4068f0 <_start@@Base+0x660>
  4068ea:	mov    rax,QWORD PTR [rbp-0x8]
  4068ee:	jmp    40691a <_start@@Base+0x68a>
  4068f0:	mov    eax,DWORD PTR [rbp-0x2c]
  4068f3:	movsxd rdx,eax
  4068f6:	mov    rax,QWORD PTR [rbp-0x20]
  4068fa:	add    rax,rdx
  4068fd:	movzx  eax,BYTE PTR [rax]
  406900:	cmp    al,0x2e
  406902:	je     40690a <_start@@Base+0x67a>
  406904:	mov    rax,QWORD PTR [rbp-0x8]
  406908:	jmp    40691a <_start@@Base+0x68a>
  40690a:	mov    eax,DWORD PTR [rbp-0x2c]
  40690d:	cdqe   
  40690f:	lea    rdx,[rax+0x1]
  406913:	mov    rax,QWORD PTR [rbp-0x20]
  406917:	add    rax,rdx
  40691a:	pop    rbp
  40691b:	ret    
  40691c:	push   rbp
  40691d:	mov    rbp,rsp
  406920:	sub    rsp,0x20
  406924:	mov    QWORD PTR [rbp-0x8],rdi
  406928:	mov    QWORD PTR [rbp-0x10],rsi
  40692c:	mov    QWORD PTR [rbp-0x18],rdx
  406930:	mov    rdx,QWORD PTR [rbp-0x18]
  406934:	mov    rcx,QWORD PTR [rbp-0x10]
  406938:	mov    rax,QWORD PTR [rbp-0x8]
  40693c:	mov    rsi,rcx
  40693f:	mov    rdi,rax
  406942:	call   4066e9 <_start@@Base+0x459>
  406947:	mov    QWORD PTR [rbp-0x10],rax
  40694b:	mov    rax,QWORD PTR [rbp-0x8]
  40694f:	mov    eax,DWORD PTR [rax+0x14]
  406952:	test   eax,eax
  406954:	jne    406971 <_start@@Base+0x6e1>
  406956:	mov    rdx,QWORD PTR [rbp-0x18]
  40695a:	mov    rcx,QWORD PTR [rbp-0x10]
  40695e:	mov    rax,QWORD PTR [rbp-0x8]
  406962:	mov    rsi,rcx
  406965:	mov    rdi,rax
  406968:	call   40667b <_start@@Base+0x3eb>
  40696d:	mov    QWORD PTR [rbp-0x10],rax
  406971:	mov    rax,QWORD PTR [rbp-0x10]
  406975:	leave  
  406976:	ret    
  406977:	push   rbp
  406978:	mov    rbp,rsp
  40697b:	sub    rsp,0x20
  40697f:	mov    QWORD PTR [rbp-0x8],rdi
  406983:	mov    QWORD PTR [rbp-0x10],rsi
  406987:	mov    QWORD PTR [rbp-0x18],rdx
  40698b:	mov    QWORD PTR [rbp-0x20],rcx
  40698f:	mov    rax,QWORD PTR [rbp-0x10]
  406993:	cmp    rax,QWORD PTR [rbp-0x18]
  406997:	je     4069a4 <_start@@Base+0x714>
  406999:	mov    rax,QWORD PTR [rbp-0x10]
  40699d:	movzx  eax,BYTE PTR [rax]
  4069a0:	cmp    al,0x7b
  4069a2:	je     4069c9 <_start@@Base+0x739>
  4069a4:	mov    rax,QWORD PTR [rbp-0x20]
  4069a8:	mov    DWORD PTR [rax],0x0
  4069ae:	mov    rdx,QWORD PTR [rbp-0x18]
  4069b2:	mov    rsi,QWORD PTR [rbp-0x10]
  4069b6:	mov    rax,QWORD PTR [rbp-0x8]
  4069ba:	mov    ecx,0x15
  4069bf:	mov    rdi,rax
  4069c2:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4069c7:	jmp    406a32 <_start@@Base+0x7a2>
  4069c9:	mov    rax,QWORD PTR [rbp-0x10]
  4069cd:	lea    rcx,[rax+0x1]
  4069d1:	mov    rdx,QWORD PTR [rbp-0x18]
  4069d5:	mov    rax,QWORD PTR [rbp-0x8]
  4069d9:	mov    rsi,rcx
  4069dc:	mov    rdi,rax
  4069df:	call   40667b <_start@@Base+0x3eb>
  4069e4:	mov    QWORD PTR [rbp-0x10],rax
  4069e8:	mov    rax,QWORD PTR [rbp-0x10]
  4069ec:	cmp    rax,QWORD PTR [rbp-0x18]
  4069f0:	je     406a24 <_start@@Base+0x794>
  4069f2:	mov    rax,QWORD PTR [rbp-0x10]
  4069f6:	movzx  eax,BYTE PTR [rax]
  4069f9:	cmp    al,0x7d
  4069fb:	jne    406a24 <_start@@Base+0x794>
  4069fd:	mov    rax,QWORD PTR [rbp-0x20]
  406a01:	mov    DWORD PTR [rax],0x0
  406a07:	mov    rax,QWORD PTR [rbp-0x10]
  406a0b:	lea    rcx,[rax+0x1]
  406a0f:	mov    rdx,QWORD PTR [rbp-0x18]
  406a13:	mov    rax,QWORD PTR [rbp-0x8]
  406a17:	mov    rsi,rcx
  406a1a:	mov    rdi,rax
  406a1d:	call   40667b <_start@@Base+0x3eb>
  406a22:	jmp    406a32 <_start@@Base+0x7a2>
  406a24:	mov    rax,QWORD PTR [rbp-0x20]
  406a28:	mov    DWORD PTR [rax],0x1
  406a2e:	mov    rax,QWORD PTR [rbp-0x10]
  406a32:	leave  
  406a33:	ret    
  406a34:	push   rbp
  406a35:	mov    rbp,rsp
  406a38:	sub    rsp,0x20
  406a3c:	mov    QWORD PTR [rbp-0x8],rdi
  406a40:	mov    QWORD PTR [rbp-0x10],rsi
  406a44:	mov    QWORD PTR [rbp-0x18],rdx
  406a48:	mov    QWORD PTR [rbp-0x20],rcx
  406a4c:	mov    rdx,QWORD PTR [rbp-0x18]
  406a50:	mov    rcx,QWORD PTR [rbp-0x10]
  406a54:	mov    rax,QWORD PTR [rbp-0x8]
  406a58:	mov    rsi,rcx
  406a5b:	mov    rdi,rax
  406a5e:	call   40667b <_start@@Base+0x3eb>
  406a63:	mov    QWORD PTR [rbp-0x10],rax
  406a67:	mov    rax,QWORD PTR [rbp-0x10]
  406a6b:	cmp    rax,QWORD PTR [rbp-0x18]
  406a6f:	jne    406a84 <_start@@Base+0x7f4>
  406a71:	mov    rax,QWORD PTR [rbp-0x20]
  406a75:	mov    DWORD PTR [rax],0x0
  406a7b:	mov    rax,QWORD PTR [rbp-0x10]
  406a7f:	jmp    406b70 <_start@@Base+0x8e0>
  406a84:	mov    rax,QWORD PTR [rbp-0x10]
  406a88:	movzx  eax,BYTE PTR [rax]
  406a8b:	cmp    al,0x2c
  406a8d:	je     406ae2 <_start@@Base+0x852>
  406a8f:	mov    rax,QWORD PTR [rbp-0x20]
  406a93:	mov    DWORD PTR [rax],0x0
  406a99:	mov    rax,QWORD PTR [rbp-0x10]
  406a9d:	movzx  eax,BYTE PTR [rax]
  406aa0:	cmp    al,0x7d
  406aa2:	je     406ac2 <_start@@Base+0x832>
  406aa4:	mov    rdx,QWORD PTR [rbp-0x18]
  406aa8:	mov    rsi,QWORD PTR [rbp-0x10]
  406aac:	mov    rax,QWORD PTR [rbp-0x8]
  406ab0:	mov    ecx,0xa
  406ab5:	mov    rdi,rax
  406ab8:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  406abd:	jmp    406b70 <_start@@Base+0x8e0>
  406ac2:	mov    rax,QWORD PTR [rbp-0x10]
  406ac6:	lea    rcx,[rax+0x1]
  406aca:	mov    rdx,QWORD PTR [rbp-0x18]
  406ace:	mov    rax,QWORD PTR [rbp-0x8]
  406ad2:	mov    rsi,rcx
  406ad5:	mov    rdi,rax
  406ad8:	call   40667b <_start@@Base+0x3eb>
  406add:	jmp    406b70 <_start@@Base+0x8e0>
  406ae2:	mov    rax,QWORD PTR [rbp-0x10]
  406ae6:	lea    rcx,[rax+0x1]
  406aea:	mov    rdx,QWORD PTR [rbp-0x18]
  406aee:	mov    rax,QWORD PTR [rbp-0x8]
  406af2:	mov    rsi,rcx
  406af5:	mov    rdi,rax
  406af8:	call   40667b <_start@@Base+0x3eb>
  406afd:	mov    QWORD PTR [rbp-0x10],rax
  406b01:	mov    rax,QWORD PTR [rbp-0x10]
  406b05:	cmp    rax,QWORD PTR [rbp-0x18]
  406b09:	jne    406b30 <_start@@Base+0x8a0>
  406b0b:	mov    rax,QWORD PTR [rbp-0x20]
  406b0f:	mov    DWORD PTR [rax],0x0
  406b15:	mov    rdx,QWORD PTR [rbp-0x18]
  406b19:	mov    rsi,QWORD PTR [rbp-0x10]
  406b1d:	mov    rax,QWORD PTR [rbp-0x8]
  406b21:	mov    ecx,0xa
  406b26:	mov    rdi,rax
  406b29:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  406b2e:	jmp    406b70 <_start@@Base+0x8e0>
  406b30:	mov    rax,QWORD PTR [rbp-0x10]
  406b34:	movzx  eax,BYTE PTR [rax]
  406b37:	cmp    al,0x7d
  406b39:	jne    406b62 <_start@@Base+0x8d2>
  406b3b:	mov    rax,QWORD PTR [rbp-0x20]
  406b3f:	mov    DWORD PTR [rax],0x0
  406b45:	mov    rax,QWORD PTR [rbp-0x10]
  406b49:	lea    rcx,[rax+0x1]
  406b4d:	mov    rdx,QWORD PTR [rbp-0x18]
  406b51:	mov    rax,QWORD PTR [rbp-0x8]
  406b55:	mov    rsi,rcx
  406b58:	mov    rdi,rax
  406b5b:	call   40667b <_start@@Base+0x3eb>
  406b60:	jmp    406b70 <_start@@Base+0x8e0>
  406b62:	mov    rax,QWORD PTR [rbp-0x20]
  406b66:	mov    DWORD PTR [rax],0x1
  406b6c:	mov    rax,QWORD PTR [rbp-0x10]
  406b70:	leave  
  406b71:	ret    
  406b72:	push   rbp
  406b73:	mov    rbp,rsp
  406b76:	sub    rsp,0x20
  406b7a:	mov    QWORD PTR [rbp-0x8],rdi
  406b7e:	mov    QWORD PTR [rbp-0x10],rsi
  406b82:	mov    QWORD PTR [rbp-0x18],rdx
  406b86:	mov    QWORD PTR [rbp-0x20],rcx
  406b8a:	mov    rax,QWORD PTR [rbp-0x10]
  406b8e:	cmp    rax,QWORD PTR [rbp-0x18]
  406b92:	je     406b9f <_start@@Base+0x90f>
  406b94:	mov    rax,QWORD PTR [rbp-0x10]
  406b98:	movzx  eax,BYTE PTR [rax]
  406b9b:	cmp    al,0x5b
  406b9d:	je     406bc4 <_start@@Base+0x934>
  406b9f:	mov    rax,QWORD PTR [rbp-0x20]
  406ba3:	mov    DWORD PTR [rax],0x0
  406ba9:	mov    rdx,QWORD PTR [rbp-0x18]
  406bad:	mov    rsi,QWORD PTR [rbp-0x10]
  406bb1:	mov    rax,QWORD PTR [rbp-0x8]
  406bb5:	mov    ecx,0x16
  406bba:	mov    rdi,rax
  406bbd:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  406bc2:	jmp    406c2d <_start@@Base+0x99d>
  406bc4:	mov    rax,QWORD PTR [rbp-0x10]
  406bc8:	lea    rcx,[rax+0x1]
  406bcc:	mov    rdx,QWORD PTR [rbp-0x18]
  406bd0:	mov    rax,QWORD PTR [rbp-0x8]
  406bd4:	mov    rsi,rcx
  406bd7:	mov    rdi,rax
  406bda:	call   40667b <_start@@Base+0x3eb>
  406bdf:	mov    QWORD PTR [rbp-0x10],rax
  406be3:	mov    rax,QWORD PTR [rbp-0x10]
  406be7:	cmp    rax,QWORD PTR [rbp-0x18]
  406beb:	je     406c1f <_start@@Base+0x98f>
  406bed:	mov    rax,QWORD PTR [rbp-0x10]
  406bf1:	movzx  eax,BYTE PTR [rax]
  406bf4:	cmp    al,0x5d
  406bf6:	jne    406c1f <_start@@Base+0x98f>
  406bf8:	mov    rax,QWORD PTR [rbp-0x20]
  406bfc:	mov    DWORD PTR [rax],0x0
  406c02:	mov    rax,QWORD PTR [rbp-0x10]
  406c06:	lea    rcx,[rax+0x1]
  406c0a:	mov    rdx,QWORD PTR [rbp-0x18]
  406c0e:	mov    rax,QWORD PTR [rbp-0x8]
  406c12:	mov    rsi,rcx
  406c15:	mov    rdi,rax
  406c18:	call   40667b <_start@@Base+0x3eb>
  406c1d:	jmp    406c2d <_start@@Base+0x99d>
  406c1f:	mov    rax,QWORD PTR [rbp-0x20]
  406c23:	mov    DWORD PTR [rax],0x1
  406c29:	mov    rax,QWORD PTR [rbp-0x10]
  406c2d:	leave  
  406c2e:	ret    
  406c2f:	push   rbp
  406c30:	mov    rbp,rsp
  406c33:	sub    rsp,0x20
  406c37:	mov    QWORD PTR [rbp-0x8],rdi
  406c3b:	mov    QWORD PTR [rbp-0x10],rsi
  406c3f:	mov    QWORD PTR [rbp-0x18],rdx
  406c43:	mov    QWORD PTR [rbp-0x20],rcx
  406c47:	mov    rdx,QWORD PTR [rbp-0x18]
  406c4b:	mov    rcx,QWORD PTR [rbp-0x10]
  406c4f:	mov    rax,QWORD PTR [rbp-0x8]
  406c53:	mov    rsi,rcx
  406c56:	mov    rdi,rax
  406c59:	call   40667b <_start@@Base+0x3eb>
  406c5e:	mov    QWORD PTR [rbp-0x10],rax
  406c62:	mov    rax,QWORD PTR [rbp-0x10]
  406c66:	cmp    rax,QWORD PTR [rbp-0x18]
  406c6a:	jne    406c7f <_start@@Base+0x9ef>
  406c6c:	mov    rax,QWORD PTR [rbp-0x20]
  406c70:	mov    DWORD PTR [rax],0x0
  406c76:	mov    rax,QWORD PTR [rbp-0x10]
  406c7a:	jmp    406d6b <_start@@Base+0xadb>
  406c7f:	mov    rax,QWORD PTR [rbp-0x10]
  406c83:	movzx  eax,BYTE PTR [rax]
  406c86:	cmp    al,0x2c
  406c88:	je     406cdd <_start@@Base+0xa4d>
  406c8a:	mov    rax,QWORD PTR [rbp-0x20]
  406c8e:	mov    DWORD PTR [rax],0x0
  406c94:	mov    rax,QWORD PTR [rbp-0x10]
  406c98:	movzx  eax,BYTE PTR [rax]
  406c9b:	cmp    al,0x5d
  406c9d:	je     406cbd <_start@@Base+0xa2d>
  406c9f:	mov    rdx,QWORD PTR [rbp-0x18]
  406ca3:	mov    rsi,QWORD PTR [rbp-0x10]
  406ca7:	mov    rax,QWORD PTR [rbp-0x8]
  406cab:	mov    ecx,0x9
  406cb0:	mov    rdi,rax
  406cb3:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  406cb8:	jmp    406d6b <_start@@Base+0xadb>
  406cbd:	mov    rax,QWORD PTR [rbp-0x10]
  406cc1:	lea    rcx,[rax+0x1]
  406cc5:	mov    rdx,QWORD PTR [rbp-0x18]
  406cc9:	mov    rax,QWORD PTR [rbp-0x8]
  406ccd:	mov    rsi,rcx
  406cd0:	mov    rdi,rax
  406cd3:	call   40667b <_start@@Base+0x3eb>
  406cd8:	jmp    406d6b <_start@@Base+0xadb>
  406cdd:	mov    rax,QWORD PTR [rbp-0x10]
  406ce1:	lea    rcx,[rax+0x1]
  406ce5:	mov    rdx,QWORD PTR [rbp-0x18]
  406ce9:	mov    rax,QWORD PTR [rbp-0x8]
  406ced:	mov    rsi,rcx
  406cf0:	mov    rdi,rax
  406cf3:	call   40667b <_start@@Base+0x3eb>
  406cf8:	mov    QWORD PTR [rbp-0x10],rax
  406cfc:	mov    rax,QWORD PTR [rbp-0x10]
  406d00:	cmp    rax,QWORD PTR [rbp-0x18]
  406d04:	jne    406d2b <_start@@Base+0xa9b>
  406d06:	mov    rax,QWORD PTR [rbp-0x20]
  406d0a:	mov    DWORD PTR [rax],0x0
  406d10:	mov    rdx,QWORD PTR [rbp-0x18]
  406d14:	mov    rsi,QWORD PTR [rbp-0x10]
  406d18:	mov    rax,QWORD PTR [rbp-0x8]
  406d1c:	mov    ecx,0x9
  406d21:	mov    rdi,rax
  406d24:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  406d29:	jmp    406d6b <_start@@Base+0xadb>
  406d2b:	mov    rax,QWORD PTR [rbp-0x10]
  406d2f:	movzx  eax,BYTE PTR [rax]
  406d32:	cmp    al,0x5d
  406d34:	jne    406d5d <_start@@Base+0xacd>
  406d36:	mov    rax,QWORD PTR [rbp-0x20]
  406d3a:	mov    DWORD PTR [rax],0x0
  406d40:	mov    rax,QWORD PTR [rbp-0x10]
  406d44:	lea    rcx,[rax+0x1]
  406d48:	mov    rdx,QWORD PTR [rbp-0x18]
  406d4c:	mov    rax,QWORD PTR [rbp-0x8]
  406d50:	mov    rsi,rcx
  406d53:	mov    rdi,rax
  406d56:	call   40667b <_start@@Base+0x3eb>
  406d5b:	jmp    406d6b <_start@@Base+0xadb>
  406d5d:	mov    rax,QWORD PTR [rbp-0x20]
  406d61:	mov    DWORD PTR [rax],0x1
  406d67:	mov    rax,QWORD PTR [rbp-0x10]
  406d6b:	leave  
  406d6c:	ret    
  406d6d:	push   rbp
  406d6e:	mov    rbp,rsp
  406d71:	sub    rsp,0x30
  406d75:	mov    QWORD PTR [rbp-0x18],rdi
  406d79:	mov    QWORD PTR [rbp-0x20],rsi
  406d7d:	mov    QWORD PTR [rbp-0x28],rdx
  406d81:	mov    DWORD PTR [rbp-0x2c],ecx
  406d84:	mov    rax,QWORD PTR [rbp-0x20]
  406d88:	mov    QWORD PTR [rbp-0x8],rax
  406d8c:	mov    rax,QWORD PTR [rbp-0x28]
  406d90:	sub    rax,QWORD PTR [rbp-0x20]
  406d94:	mov    rdx,rax
  406d97:	mov    eax,DWORD PTR [rbp-0x2c]
  406d9a:	cdqe   
  406d9c:	cmp    rdx,rax
  406d9f:	jg     406daa <_start@@Base+0xb1a>
  406da1:	mov    rax,QWORD PTR [rbp-0x8]
  406da5:	jmp    406e88 <_start@@Base+0xbf8>
  406daa:	mov    rax,QWORD PTR [rbp-0x18]
  406dae:	mov    eax,DWORD PTR [rax+0x14]
  406db1:	test   eax,eax
  406db3:	je     406dfc <_start@@Base+0xb6c>
  406db5:	mov    eax,DWORD PTR [rbp-0x2c]
  406db8:	movsxd rdx,eax
  406dbb:	mov    rax,QWORD PTR [rbp-0x20]
  406dbf:	add    rax,rdx
  406dc2:	movzx  eax,BYTE PTR [rax]
  406dc5:	cmp    al,0x20
  406dc7:	jle    406de6 <_start@@Base+0xb56>
  406dc9:	mov    eax,DWORD PTR [rbp-0x2c]
  406dcc:	movsxd rdx,eax
  406dcf:	mov    rax,QWORD PTR [rbp-0x20]
  406dd3:	add    rax,rdx
  406dd6:	movzx  eax,BYTE PTR [rax]
  406dd9:	cmp    al,0x3a
  406ddb:	je     406de6 <_start@@Base+0xb56>
  406ddd:	mov    rax,QWORD PTR [rbp-0x8]
  406de1:	jmp    406e88 <_start@@Base+0xbf8>
  406de6:	mov    eax,DWORD PTR [rbp-0x2c]
  406de9:	cdqe   
  406deb:	add    QWORD PTR [rbp-0x20],rax
  406def:	mov    rax,QWORD PTR [rbp-0x18]
  406df3:	mov    DWORD PTR [rax+0x14],0x0
  406dfa:	jmp    406e22 <_start@@Base+0xb92>
  406dfc:	mov    eax,DWORD PTR [rbp-0x2c]
  406dff:	movsxd rdx,eax
  406e02:	mov    rax,QWORD PTR [rbp-0x20]
  406e06:	add    rax,rdx
  406e09:	movzx  eax,BYTE PTR [rax]
  406e0c:	cmp    al,0x22
  406e0e:	je     406e16 <_start@@Base+0xb86>
  406e10:	mov    rax,QWORD PTR [rbp-0x8]
  406e14:	jmp    406e88 <_start@@Base+0xbf8>
  406e16:	mov    eax,DWORD PTR [rbp-0x2c]
  406e19:	cdqe   
  406e1b:	inc    rax
  406e1e:	add    QWORD PTR [rbp-0x20],rax
  406e22:	mov    rdx,QWORD PTR [rbp-0x28]
  406e26:	mov    rcx,QWORD PTR [rbp-0x20]
  406e2a:	mov    rax,QWORD PTR [rbp-0x18]
  406e2e:	mov    rsi,rcx
  406e31:	mov    rdi,rax
  406e34:	call   40667b <_start@@Base+0x3eb>
  406e39:	mov    QWORD PTR [rbp-0x20],rax
  406e3d:	mov    rax,QWORD PTR [rbp-0x20]
  406e41:	cmp    rax,QWORD PTR [rbp-0x28]
  406e45:	je     406e6f <_start@@Base+0xbdf>
  406e47:	mov    rax,QWORD PTR [rbp-0x20]
  406e4b:	movzx  eax,BYTE PTR [rax]
  406e4e:	cmp    al,0x3a
  406e50:	jne    406e6f <_start@@Base+0xbdf>
  406e52:	inc    QWORD PTR [rbp-0x20]
  406e56:	mov    rdx,QWORD PTR [rbp-0x28]
  406e5a:	mov    rcx,QWORD PTR [rbp-0x20]
  406e5e:	mov    rax,QWORD PTR [rbp-0x18]
  406e62:	mov    rsi,rcx
  406e65:	mov    rdi,rax
  406e68:	call   40667b <_start@@Base+0x3eb>
  406e6d:	jmp    406e88 <_start@@Base+0xbf8>
  406e6f:	mov    rdx,QWORD PTR [rbp-0x28]
  406e73:	mov    rsi,QWORD PTR [rbp-0x20]
  406e77:	mov    rax,QWORD PTR [rbp-0x18]
  406e7b:	mov    ecx,0x4
  406e80:	mov    rdi,rax
  406e83:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  406e88:	leave  
  406e89:	ret    
  406e8a:	push   rbp
  406e8b:	mov    rbp,rsp
  406e8e:	sub    rsp,0x30
  406e92:	mov    QWORD PTR [rbp-0x8],rdi
  406e96:	mov    QWORD PTR [rbp-0x10],rsi
  406e9a:	mov    QWORD PTR [rbp-0x18],rdx
  406e9e:	mov    DWORD PTR [rbp-0x1c],ecx
  406ea1:	mov    QWORD PTR [rbp-0x28],r8
  406ea5:	mov    QWORD PTR [rbp-0x30],r9
  406ea9:	cmp    DWORD PTR [rbp-0x1c],0x0
  406ead:	je     406eca <_start@@Base+0xc3a>
  406eaf:	mov    rdx,QWORD PTR [rbp-0x18]
  406eb3:	mov    rsi,QWORD PTR [rbp-0x10]
  406eb7:	mov    rax,QWORD PTR [rbp-0x8]
  406ebb:	mov    ecx,0x8
  406ec0:	mov    rdi,rax
  406ec3:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  406ec8:	jmp    406ed9 <_start@@Base+0xc49>
  406eca:	mov    rax,QWORD PTR [rbp-0x30]
  406ece:	mov    rdx,QWORD PTR [rbp-0x28]
  406ed2:	mov    QWORD PTR [rax],rdx
  406ed5:	mov    rax,QWORD PTR [rbp-0x10]
  406ed9:	leave  
  406eda:	ret    
  406edb:	push   rbp
  406edc:	mov    rbp,rsp
  406edf:	sub    rsp,0x30
  406ee3:	mov    QWORD PTR [rbp-0x8],rdi
  406ee7:	mov    QWORD PTR [rbp-0x10],rsi
  406eeb:	mov    QWORD PTR [rbp-0x18],rdx
  406eef:	mov    DWORD PTR [rbp-0x1c],ecx
  406ef2:	mov    QWORD PTR [rbp-0x28],r8
  406ef6:	mov    QWORD PTR [rbp-0x30],r9
  406efa:	cmp    DWORD PTR [rbp-0x1c],0x0
  406efe:	je     406f1b <_start@@Base+0xc8b>
  406f00:	mov    rdx,QWORD PTR [rbp-0x18]
  406f04:	mov    rsi,QWORD PTR [rbp-0x10]
  406f08:	mov    rax,QWORD PTR [rbp-0x8]
  406f0c:	mov    ecx,0x8
  406f11:	mov    rdi,rax
  406f14:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  406f19:	jmp    406f2f <_start@@Base+0xc9f>
  406f1b:	cmp    QWORD PTR [rbp-0x28],0x0
  406f20:	setne  al
  406f23:	mov    edx,eax
  406f25:	mov    rax,QWORD PTR [rbp-0x30]
  406f29:	mov    BYTE PTR [rax],dl
  406f2b:	mov    rax,QWORD PTR [rbp-0x10]
  406f2f:	leave  
  406f30:	ret    
  406f31:	push   rbp
  406f32:	mov    rbp,rsp
  406f35:	sub    rsp,0x30
  406f39:	mov    QWORD PTR [rbp-0x8],rdi
  406f3d:	mov    QWORD PTR [rbp-0x10],rsi
  406f41:	mov    QWORD PTR [rbp-0x18],rdx
  406f45:	mov    DWORD PTR [rbp-0x1c],ecx
  406f48:	mov    QWORD PTR [rbp-0x28],r8
  406f4c:	mov    QWORD PTR [rbp-0x30],r9
  406f50:	cmp    DWORD PTR [rbp-0x1c],0x0
  406f54:	je     406f71 <_start@@Base+0xce1>
  406f56:	mov    rdx,QWORD PTR [rbp-0x18]
  406f5a:	mov    rsi,QWORD PTR [rbp-0x10]
  406f5e:	mov    rax,QWORD PTR [rbp-0x8]
  406f62:	mov    ecx,0x8
  406f67:	mov    rdi,rax
  406f6a:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  406f6f:	jmp    406fa7 <_start@@Base+0xd17>
  406f71:	mov    eax,0xffffffff
  406f76:	cmp    QWORD PTR [rbp-0x28],rax
  406f7a:	jbe    406f97 <_start@@Base+0xd07>
  406f7c:	mov    rdx,QWORD PTR [rbp-0x18]
  406f80:	mov    rsi,QWORD PTR [rbp-0x10]
  406f84:	mov    rax,QWORD PTR [rbp-0x8]
  406f88:	mov    ecx,0x7
  406f8d:	mov    rdi,rax
  406f90:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  406f95:	jmp    406fa7 <_start@@Base+0xd17>
  406f97:	mov    rax,QWORD PTR [rbp-0x28]
  406f9b:	mov    edx,eax
  406f9d:	mov    rax,QWORD PTR [rbp-0x30]
  406fa1:	mov    DWORD PTR [rax],edx
  406fa3:	mov    rax,QWORD PTR [rbp-0x10]
  406fa7:	leave  
  406fa8:	ret    
  406fa9:	push   rbp
  406faa:	mov    rbp,rsp
  406fad:	sub    rsp,0x30
  406fb1:	mov    QWORD PTR [rbp-0x8],rdi
  406fb5:	mov    QWORD PTR [rbp-0x10],rsi
  406fb9:	mov    QWORD PTR [rbp-0x18],rdx
  406fbd:	mov    DWORD PTR [rbp-0x1c],ecx
  406fc0:	mov    QWORD PTR [rbp-0x28],r8
  406fc4:	mov    QWORD PTR [rbp-0x30],r9
  406fc8:	cmp    DWORD PTR [rbp-0x1c],0x0
  406fcc:	je     406fe9 <_start@@Base+0xd59>
  406fce:	mov    rdx,QWORD PTR [rbp-0x18]
  406fd2:	mov    rsi,QWORD PTR [rbp-0x10]
  406fd6:	mov    rax,QWORD PTR [rbp-0x8]
  406fda:	mov    ecx,0x8
  406fdf:	mov    rdi,rax
  406fe2:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  406fe7:	jmp    40701f <_start@@Base+0xd8f>
  406fe9:	cmp    QWORD PTR [rbp-0x28],0xffff
  406ff1:	jbe    40700e <_start@@Base+0xd7e>
  406ff3:	mov    rdx,QWORD PTR [rbp-0x18]
  406ff7:	mov    rsi,QWORD PTR [rbp-0x10]
  406ffb:	mov    rax,QWORD PTR [rbp-0x8]
  406fff:	mov    ecx,0x7
  407004:	mov    rdi,rax
  407007:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40700c:	jmp    40701f <_start@@Base+0xd8f>
  40700e:	mov    rax,QWORD PTR [rbp-0x28]
  407012:	mov    edx,eax
  407014:	mov    rax,QWORD PTR [rbp-0x30]
  407018:	mov    WORD PTR [rax],dx
  40701b:	mov    rax,QWORD PTR [rbp-0x10]
  40701f:	leave  
  407020:	ret    
  407021:	push   rbp
  407022:	mov    rbp,rsp
  407025:	sub    rsp,0x30
  407029:	mov    QWORD PTR [rbp-0x8],rdi
  40702d:	mov    QWORD PTR [rbp-0x10],rsi
  407031:	mov    QWORD PTR [rbp-0x18],rdx
  407035:	mov    DWORD PTR [rbp-0x1c],ecx
  407038:	mov    QWORD PTR [rbp-0x28],r8
  40703c:	mov    QWORD PTR [rbp-0x30],r9
  407040:	cmp    DWORD PTR [rbp-0x1c],0x0
  407044:	je     407061 <_start@@Base+0xdd1>
  407046:	mov    rdx,QWORD PTR [rbp-0x18]
  40704a:	mov    rsi,QWORD PTR [rbp-0x10]
  40704e:	mov    rax,QWORD PTR [rbp-0x8]
  407052:	mov    ecx,0x8
  407057:	mov    rdi,rax
  40705a:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40705f:	jmp    407096 <_start@@Base+0xe06>
  407061:	cmp    QWORD PTR [rbp-0x28],0xff
  407069:	jbe    407086 <_start@@Base+0xdf6>
  40706b:	mov    rdx,QWORD PTR [rbp-0x18]
  40706f:	mov    rsi,QWORD PTR [rbp-0x10]
  407073:	mov    rax,QWORD PTR [rbp-0x8]
  407077:	mov    ecx,0x7
  40707c:	mov    rdi,rax
  40707f:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  407084:	jmp    407096 <_start@@Base+0xe06>
  407086:	mov    rax,QWORD PTR [rbp-0x28]
  40708a:	mov    edx,eax
  40708c:	mov    rax,QWORD PTR [rbp-0x30]
  407090:	mov    BYTE PTR [rax],dl
  407092:	mov    rax,QWORD PTR [rbp-0x10]
  407096:	leave  
  407097:	ret    
  407098:	push   rbp
  407099:	mov    rbp,rsp
  40709c:	sub    rsp,0x30
  4070a0:	mov    QWORD PTR [rbp-0x8],rdi
  4070a4:	mov    QWORD PTR [rbp-0x10],rsi
  4070a8:	mov    QWORD PTR [rbp-0x18],rdx
  4070ac:	mov    DWORD PTR [rbp-0x1c],ecx
  4070af:	mov    QWORD PTR [rbp-0x28],r8
  4070b3:	mov    QWORD PTR [rbp-0x30],r9
  4070b7:	cmp    DWORD PTR [rbp-0x1c],0x0
  4070bb:	je     4070fb <_start@@Base+0xe6b>
  4070bd:	movabs rax,0x8000000000000000
  4070c7:	cmp    QWORD PTR [rbp-0x28],rax
  4070cb:	jbe    4070e8 <_start@@Base+0xe58>
  4070cd:	mov    rdx,QWORD PTR [rbp-0x18]
  4070d1:	mov    rsi,QWORD PTR [rbp-0x10]
  4070d5:	mov    rax,QWORD PTR [rbp-0x8]
  4070d9:	mov    ecx,0x8
  4070de:	mov    rdi,rax
  4070e1:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4070e6:	jmp    40712e <_start@@Base+0xe9e>
  4070e8:	mov    rax,QWORD PTR [rbp-0x28]
  4070ec:	neg    rax
  4070ef:	mov    rdx,rax
  4070f2:	mov    rax,QWORD PTR [rbp-0x30]
  4070f6:	mov    QWORD PTR [rax],rdx
  4070f9:	jmp    40712a <_start@@Base+0xe9a>
  4070fb:	mov    rax,QWORD PTR [rbp-0x28]
  4070ff:	test   rax,rax
  407102:	jns    40711f <_start@@Base+0xe8f>
  407104:	mov    rdx,QWORD PTR [rbp-0x18]
  407108:	mov    rsi,QWORD PTR [rbp-0x10]
  40710c:	mov    rax,QWORD PTR [rbp-0x8]
  407110:	mov    ecx,0x7
  407115:	mov    rdi,rax
  407118:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40711d:	jmp    40712e <_start@@Base+0xe9e>
  40711f:	mov    rdx,QWORD PTR [rbp-0x28]
  407123:	mov    rax,QWORD PTR [rbp-0x30]
  407127:	mov    QWORD PTR [rax],rdx
  40712a:	mov    rax,QWORD PTR [rbp-0x10]
  40712e:	leave  
  40712f:	ret    
  407130:	push   rbp
  407131:	mov    rbp,rsp
  407134:	sub    rsp,0x30
  407138:	mov    QWORD PTR [rbp-0x8],rdi
  40713c:	mov    QWORD PTR [rbp-0x10],rsi
  407140:	mov    QWORD PTR [rbp-0x18],rdx
  407144:	mov    DWORD PTR [rbp-0x1c],ecx
  407147:	mov    QWORD PTR [rbp-0x28],r8
  40714b:	mov    QWORD PTR [rbp-0x30],r9
  40714f:	cmp    DWORD PTR [rbp-0x1c],0x0
  407153:	je     40718b <_start@@Base+0xefb>
  407155:	mov    eax,0x80000000
  40715a:	cmp    QWORD PTR [rbp-0x28],rax
  40715e:	jbe    40717b <_start@@Base+0xeeb>
  407160:	mov    rdx,QWORD PTR [rbp-0x18]
  407164:	mov    rsi,QWORD PTR [rbp-0x10]
  407168:	mov    rax,QWORD PTR [rbp-0x8]
  40716c:	mov    ecx,0x8
  407171:	mov    rdi,rax
  407174:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  407179:	jmp    4071c0 <_start@@Base+0xf30>
  40717b:	mov    rax,QWORD PTR [rbp-0x28]
  40717f:	neg    eax
  407181:	mov    edx,eax
  407183:	mov    rax,QWORD PTR [rbp-0x30]
  407187:	mov    DWORD PTR [rax],edx
  407189:	jmp    4071bc <_start@@Base+0xf2c>
  40718b:	cmp    QWORD PTR [rbp-0x28],0x7fffffff
  407193:	jbe    4071b0 <_start@@Base+0xf20>
  407195:	mov    rdx,QWORD PTR [rbp-0x18]
  407199:	mov    rsi,QWORD PTR [rbp-0x10]
  40719d:	mov    rax,QWORD PTR [rbp-0x8]
  4071a1:	mov    ecx,0x7
  4071a6:	mov    rdi,rax
  4071a9:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4071ae:	jmp    4071c0 <_start@@Base+0xf30>
  4071b0:	mov    rax,QWORD PTR [rbp-0x28]
  4071b4:	mov    edx,eax
  4071b6:	mov    rax,QWORD PTR [rbp-0x30]
  4071ba:	mov    DWORD PTR [rax],edx
  4071bc:	mov    rax,QWORD PTR [rbp-0x10]
  4071c0:	leave  
  4071c1:	ret    
  4071c2:	push   rbp
  4071c3:	mov    rbp,rsp
  4071c6:	sub    rsp,0x30
  4071ca:	mov    QWORD PTR [rbp-0x8],rdi
  4071ce:	mov    QWORD PTR [rbp-0x10],rsi
  4071d2:	mov    QWORD PTR [rbp-0x18],rdx
  4071d6:	mov    DWORD PTR [rbp-0x1c],ecx
  4071d9:	mov    QWORD PTR [rbp-0x28],r8
  4071dd:	mov    QWORD PTR [rbp-0x30],r9
  4071e1:	cmp    DWORD PTR [rbp-0x1c],0x0
  4071e5:	je     40721d <_start@@Base+0xf8d>
  4071e7:	cmp    QWORD PTR [rbp-0x28],0x8000
  4071ef:	jbe    40720c <_start@@Base+0xf7c>
  4071f1:	mov    rdx,QWORD PTR [rbp-0x18]
  4071f5:	mov    rsi,QWORD PTR [rbp-0x10]
  4071f9:	mov    rax,QWORD PTR [rbp-0x8]
  4071fd:	mov    ecx,0x8
  407202:	mov    rdi,rax
  407205:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40720a:	jmp    407253 <_start@@Base+0xfc3>
  40720c:	mov    rax,QWORD PTR [rbp-0x28]
  407210:	neg    eax
  407212:	mov    edx,eax
  407214:	mov    rax,QWORD PTR [rbp-0x30]
  407218:	mov    WORD PTR [rax],dx
  40721b:	jmp    40724f <_start@@Base+0xfbf>
  40721d:	cmp    QWORD PTR [rbp-0x28],0x7fff
  407225:	jbe    407242 <_start@@Base+0xfb2>
  407227:	mov    rdx,QWORD PTR [rbp-0x18]
  40722b:	mov    rsi,QWORD PTR [rbp-0x10]
  40722f:	mov    rax,QWORD PTR [rbp-0x8]
  407233:	mov    ecx,0x7
  407238:	mov    rdi,rax
  40723b:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  407240:	jmp    407253 <_start@@Base+0xfc3>
  407242:	mov    rax,QWORD PTR [rbp-0x28]
  407246:	mov    edx,eax
  407248:	mov    rax,QWORD PTR [rbp-0x30]
  40724c:	mov    WORD PTR [rax],dx
  40724f:	mov    rax,QWORD PTR [rbp-0x10]
  407253:	leave  
  407254:	ret    
  407255:	push   rbp
  407256:	mov    rbp,rsp
  407259:	sub    rsp,0x30
  40725d:	mov    QWORD PTR [rbp-0x8],rdi
  407261:	mov    QWORD PTR [rbp-0x10],rsi
  407265:	mov    QWORD PTR [rbp-0x18],rdx
  407269:	mov    DWORD PTR [rbp-0x1c],ecx
  40726c:	mov    QWORD PTR [rbp-0x28],r8
  407270:	mov    QWORD PTR [rbp-0x30],r9
  407274:	cmp    DWORD PTR [rbp-0x1c],0x0
  407278:	je     4072af <_start@@Base+0x101f>
  40727a:	cmp    QWORD PTR [rbp-0x28],0x80
  407282:	jbe    40729f <_start@@Base+0x100f>
  407284:	mov    rdx,QWORD PTR [rbp-0x18]
  407288:	mov    rsi,QWORD PTR [rbp-0x10]
  40728c:	mov    rax,QWORD PTR [rbp-0x8]
  407290:	mov    ecx,0x8
  407295:	mov    rdi,rax
  407298:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40729d:	jmp    4072e1 <_start@@Base+0x1051>
  40729f:	mov    rax,QWORD PTR [rbp-0x28]
  4072a3:	neg    eax
  4072a5:	mov    edx,eax
  4072a7:	mov    rax,QWORD PTR [rbp-0x30]
  4072ab:	mov    BYTE PTR [rax],dl
  4072ad:	jmp    4072dd <_start@@Base+0x104d>
  4072af:	cmp    QWORD PTR [rbp-0x28],0x7f
  4072b4:	jbe    4072d1 <_start@@Base+0x1041>
  4072b6:	mov    rdx,QWORD PTR [rbp-0x18]
  4072ba:	mov    rsi,QWORD PTR [rbp-0x10]
  4072be:	mov    rax,QWORD PTR [rbp-0x8]
  4072c2:	mov    ecx,0x7
  4072c7:	mov    rdi,rax
  4072ca:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4072cf:	jmp    4072e1 <_start@@Base+0x1051>
  4072d1:	mov    rax,QWORD PTR [rbp-0x28]
  4072d5:	mov    edx,eax
  4072d7:	mov    rax,QWORD PTR [rbp-0x30]
  4072db:	mov    BYTE PTR [rax],dl
  4072dd:	mov    rax,QWORD PTR [rbp-0x10]
  4072e1:	leave  
  4072e2:	ret    
  4072e3:	push   rbp
  4072e4:	mov    rbp,rsp
  4072e7:	mov    QWORD PTR [rbp-0x8],rdi
  4072eb:	mov    QWORD PTR [rbp-0x10],rsi
  4072ef:	mov    QWORD PTR [rbp-0x18],rdx
  4072f3:	mov    DWORD PTR [rbp-0x1c],ecx
  4072f6:	mov    QWORD PTR [rbp-0x28],r8
  4072fa:	mov    QWORD PTR [rbp-0x30],r9
  4072fe:	cmp    DWORD PTR [rbp-0x1c],0x0
  407302:	je     407337 <_start@@Base+0x10a7>
  407304:	mov    rax,QWORD PTR [rbp-0x28]
  407308:	test   rax,rax
  40730b:	js     407314 <_start@@Base+0x1084>
  40730d:	vcvtsi2ss xmm0,xmm0,rax
  407312:	jmp    407329 <_start@@Base+0x1099>
  407314:	mov    rdx,rax
  407317:	shr    rdx,1
  40731a:	and    eax,0x1
  40731d:	or     rdx,rax
  407320:	vcvtsi2ss xmm0,xmm0,rdx
  407325:	vaddss xmm0,xmm0,xmm0
  407329:	vmovss xmm1,DWORD PTR [rip+0x33bef]        # 43af20 <_IO_stdin_used@@Base+0x3f20>
  407331:	vxorps xmm0,xmm0,xmm1
  407335:	jmp    40735c <_start@@Base+0x10cc>
  407337:	mov    rax,QWORD PTR [rbp-0x28]
  40733b:	test   rax,rax
  40733e:	js     407347 <_start@@Base+0x10b7>
  407340:	vcvtsi2ss xmm0,xmm0,rax
  407345:	jmp    40735c <_start@@Base+0x10cc>
  407347:	mov    rdx,rax
  40734a:	shr    rdx,1
  40734d:	and    eax,0x1
  407350:	or     rdx,rax
  407353:	vcvtsi2ss xmm0,xmm0,rdx
  407358:	vaddss xmm0,xmm0,xmm0
  40735c:	mov    rax,QWORD PTR [rbp-0x30]
  407360:	vmovss DWORD PTR [rax],xmm0
  407364:	mov    rax,QWORD PTR [rbp-0x10]
  407368:	pop    rbp
  407369:	ret    
  40736a:	push   rbp
  40736b:	mov    rbp,rsp
  40736e:	mov    QWORD PTR [rbp-0x8],rdi
  407372:	mov    QWORD PTR [rbp-0x10],rsi
  407376:	mov    QWORD PTR [rbp-0x18],rdx
  40737a:	mov    DWORD PTR [rbp-0x1c],ecx
  40737d:	mov    QWORD PTR [rbp-0x28],r8
  407381:	mov    QWORD PTR [rbp-0x30],r9
  407385:	cmp    DWORD PTR [rbp-0x1c],0x0
  407389:	je     4073be <_start@@Base+0x112e>
  40738b:	mov    rax,QWORD PTR [rbp-0x28]
  40738f:	test   rax,rax
  407392:	js     40739b <_start@@Base+0x110b>
  407394:	vcvtsi2sd xmm0,xmm0,rax
  407399:	jmp    4073b0 <_start@@Base+0x1120>
  40739b:	mov    rdx,rax
  40739e:	shr    rdx,1
  4073a1:	and    eax,0x1
  4073a4:	or     rdx,rax
  4073a7:	vcvtsi2sd xmm0,xmm0,rdx
  4073ac:	vaddsd xmm0,xmm0,xmm0
  4073b0:	vmovq  xmm1,QWORD PTR [rip+0x33b78]        # 43af30 <_IO_stdin_used@@Base+0x3f30>
  4073b8:	vxorpd xmm0,xmm0,xmm1
  4073bc:	jmp    4073e3 <_start@@Base+0x1153>
  4073be:	mov    rax,QWORD PTR [rbp-0x28]
  4073c2:	test   rax,rax
  4073c5:	js     4073ce <_start@@Base+0x113e>
  4073c7:	vcvtsi2sd xmm0,xmm0,rax
  4073cc:	jmp    4073e3 <_start@@Base+0x1153>
  4073ce:	mov    rdx,rax
  4073d1:	shr    rdx,1
  4073d4:	and    eax,0x1
  4073d7:	or     rdx,rax
  4073da:	vcvtsi2sd xmm0,xmm0,rdx
  4073df:	vaddsd xmm0,xmm0,xmm0
  4073e3:	mov    rax,QWORD PTR [rbp-0x30]
  4073e7:	vmovsd QWORD PTR [rax],xmm0
  4073eb:	mov    rax,QWORD PTR [rbp-0x10]
  4073ef:	pop    rbp
  4073f0:	ret    
  4073f1:	push   rbp
  4073f2:	mov    rbp,rsp
  4073f5:	sub    rsp,0x20
  4073f9:	mov    QWORD PTR [rbp-0x8],rdi
  4073fd:	mov    QWORD PTR [rbp-0x10],rsi
  407401:	mov    QWORD PTR [rbp-0x18],rdx
  407405:	mov    rax,QWORD PTR [rbp-0x18]
  407409:	sub    rax,QWORD PTR [rbp-0x10]
  40740d:	cmp    rax,0x3
  407411:	jle    407439 <_start@@Base+0x11a9>
  407413:	mov    rax,QWORD PTR [rbp-0x10]
  407417:	mov    edx,0x4
  40741c:	lea    rsi,[rip+0x2fc15]        # 437038 <_IO_stdin_used@@Base+0x38>
  407423:	mov    rdi,rax
  407426:	call   4061f0 <memcmp@plt>
  40742b:	test   eax,eax
  40742d:	jne    407439 <_start@@Base+0x11a9>
  40742f:	mov    rax,QWORD PTR [rbp-0x10]
  407433:	add    rax,0x4
  407437:	jmp    407452 <_start@@Base+0x11c2>
  407439:	mov    rdx,QWORD PTR [rbp-0x18]
  40743d:	mov    rsi,QWORD PTR [rbp-0x10]
  407441:	mov    rax,QWORD PTR [rbp-0x8]
  407445:	mov    ecx,0x1a
  40744a:	mov    rdi,rax
  40744d:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  407452:	leave  
  407453:	ret    
  407454:	push   rbp
  407455:	mov    rbp,rsp
  407458:	sub    rsp,0x40
  40745c:	mov    QWORD PTR [rbp-0x28],rdi
  407460:	mov    QWORD PTR [rbp-0x30],rsi
  407464:	mov    QWORD PTR [rbp-0x38],rdx
  407468:	mov    QWORD PTR [rbp-0x40],rcx
  40746c:	mov    rax,QWORD PTR fs:0x28
  407475:	mov    QWORD PTR [rbp-0x8],rax
  407479:	xor    eax,eax
  40747b:	mov    QWORD PTR [rbp-0x18],0x0
  407483:	mov    DWORD PTR [rbp-0x1c],0x0
  40748a:	mov    rax,QWORD PTR [rbp-0x30]
  40748e:	mov    QWORD PTR [rbp-0x10],rax
  407492:	mov    rax,QWORD PTR [rbp-0x40]
  407496:	mov    QWORD PTR [rax],0x0
  40749d:	mov    rax,QWORD PTR [rbp-0x30]
  4074a1:	cmp    rax,QWORD PTR [rbp-0x38]
  4074a5:	jne    4074ad <_start@@Base+0x121d>
  4074a7:	mov    rax,QWORD PTR [rbp-0x30]
  4074ab:	jmp    407505 <_start@@Base+0x1275>
  4074ad:	lea    rdi,[rbp-0x18]
  4074b1:	lea    rcx,[rbp-0x1c]
  4074b5:	mov    rdx,QWORD PTR [rbp-0x38]
  4074b9:	mov    rsi,QWORD PTR [rbp-0x30]
  4074bd:	mov    rax,QWORD PTR [rbp-0x28]
  4074c1:	mov    r8,rdi
  4074c4:	mov    rdi,rax
  4074c7:	call   4293bb <flatcc_json_parser_integer@@Base>
  4074cc:	mov    QWORD PTR [rbp-0x30],rax
  4074d0:	mov    rax,QWORD PTR [rbp-0x30]
  4074d4:	cmp    rax,QWORD PTR [rbp-0x10]
  4074d8:	je     407501 <_start@@Base+0x1271>
  4074da:	mov    rdi,QWORD PTR [rbp-0x18]
  4074de:	mov    ecx,DWORD PTR [rbp-0x1c]
  4074e1:	mov    r8,QWORD PTR [rbp-0x40]
  4074e5:	mov    rdx,QWORD PTR [rbp-0x38]
  4074e9:	mov    rsi,QWORD PTR [rbp-0x30]
  4074ed:	mov    rax,QWORD PTR [rbp-0x28]
  4074f1:	mov    r9,r8
  4074f4:	mov    r8,rdi
  4074f7:	mov    rdi,rax
  4074fa:	call   406e8a <_start@@Base+0xbfa>
  4074ff:	jmp    407505 <_start@@Base+0x1275>
  407501:	mov    rax,QWORD PTR [rbp-0x30]
  407505:	mov    rdx,QWORD PTR [rbp-0x8]
  407509:	xor    rdx,QWORD PTR fs:0x28
  407512:	je     407519 <_start@@Base+0x1289>
  407514:	call   4061a0 <__stack_chk_fail@plt>
  407519:	leave  
  40751a:	ret    
  40751b:	push   rbp
  40751c:	mov    rbp,rsp
  40751f:	sub    rsp,0x40
  407523:	mov    QWORD PTR [rbp-0x28],rdi
  407527:	mov    QWORD PTR [rbp-0x30],rsi
  40752b:	mov    QWORD PTR [rbp-0x38],rdx
  40752f:	mov    QWORD PTR [rbp-0x40],rcx
  407533:	mov    rax,QWORD PTR fs:0x28
  40753c:	mov    QWORD PTR [rbp-0x8],rax
  407540:	xor    eax,eax
  407542:	mov    QWORD PTR [rbp-0x18],0x0
  40754a:	mov    DWORD PTR [rbp-0x1c],0x0
  407551:	mov    rax,QWORD PTR [rbp-0x30]
  407555:	mov    QWORD PTR [rbp-0x10],rax
  407559:	mov    rax,QWORD PTR [rbp-0x40]
  40755d:	mov    DWORD PTR [rax],0x0
  407563:	mov    rax,QWORD PTR [rbp-0x30]
  407567:	cmp    rax,QWORD PTR [rbp-0x38]
  40756b:	jne    407573 <_start@@Base+0x12e3>
  40756d:	mov    rax,QWORD PTR [rbp-0x30]
  407571:	jmp    4075cb <_start@@Base+0x133b>
  407573:	lea    rdi,[rbp-0x18]
  407577:	lea    rcx,[rbp-0x1c]
  40757b:	mov    rdx,QWORD PTR [rbp-0x38]
  40757f:	mov    rsi,QWORD PTR [rbp-0x30]
  407583:	mov    rax,QWORD PTR [rbp-0x28]
  407587:	mov    r8,rdi
  40758a:	mov    rdi,rax
  40758d:	call   4293bb <flatcc_json_parser_integer@@Base>
  407592:	mov    QWORD PTR [rbp-0x30],rax
  407596:	mov    rax,QWORD PTR [rbp-0x30]
  40759a:	cmp    rax,QWORD PTR [rbp-0x10]
  40759e:	je     4075c7 <_start@@Base+0x1337>
  4075a0:	mov    rdi,QWORD PTR [rbp-0x18]
  4075a4:	mov    ecx,DWORD PTR [rbp-0x1c]
  4075a7:	mov    r8,QWORD PTR [rbp-0x40]
  4075ab:	mov    rdx,QWORD PTR [rbp-0x38]
  4075af:	mov    rsi,QWORD PTR [rbp-0x30]
  4075b3:	mov    rax,QWORD PTR [rbp-0x28]
  4075b7:	mov    r9,r8
  4075ba:	mov    r8,rdi
  4075bd:	mov    rdi,rax
  4075c0:	call   406f31 <_start@@Base+0xca1>
  4075c5:	jmp    4075cb <_start@@Base+0x133b>
  4075c7:	mov    rax,QWORD PTR [rbp-0x30]
  4075cb:	mov    rdx,QWORD PTR [rbp-0x8]
  4075cf:	xor    rdx,QWORD PTR fs:0x28
  4075d8:	je     4075df <_start@@Base+0x134f>
  4075da:	call   4061a0 <__stack_chk_fail@plt>
  4075df:	leave  
  4075e0:	ret    
  4075e1:	push   rbp
  4075e2:	mov    rbp,rsp
  4075e5:	sub    rsp,0x40
  4075e9:	mov    QWORD PTR [rbp-0x28],rdi
  4075ed:	mov    QWORD PTR [rbp-0x30],rsi
  4075f1:	mov    QWORD PTR [rbp-0x38],rdx
  4075f5:	mov    QWORD PTR [rbp-0x40],rcx
  4075f9:	mov    rax,QWORD PTR fs:0x28
  407602:	mov    QWORD PTR [rbp-0x8],rax
  407606:	xor    eax,eax
  407608:	mov    QWORD PTR [rbp-0x18],0x0
  407610:	mov    DWORD PTR [rbp-0x1c],0x0
  407617:	mov    rax,QWORD PTR [rbp-0x30]
  40761b:	mov    QWORD PTR [rbp-0x10],rax
  40761f:	mov    rax,QWORD PTR [rbp-0x40]
  407623:	mov    WORD PTR [rax],0x0
  407628:	mov    rax,QWORD PTR [rbp-0x30]
  40762c:	cmp    rax,QWORD PTR [rbp-0x38]
  407630:	jne    407638 <_start@@Base+0x13a8>
  407632:	mov    rax,QWORD PTR [rbp-0x30]
  407636:	jmp    407690 <_start@@Base+0x1400>
  407638:	lea    rdi,[rbp-0x18]
  40763c:	lea    rcx,[rbp-0x1c]
  407640:	mov    rdx,QWORD PTR [rbp-0x38]
  407644:	mov    rsi,QWORD PTR [rbp-0x30]
  407648:	mov    rax,QWORD PTR [rbp-0x28]
  40764c:	mov    r8,rdi
  40764f:	mov    rdi,rax
  407652:	call   4293bb <flatcc_json_parser_integer@@Base>
  407657:	mov    QWORD PTR [rbp-0x30],rax
  40765b:	mov    rax,QWORD PTR [rbp-0x30]
  40765f:	cmp    rax,QWORD PTR [rbp-0x10]
  407663:	je     40768c <_start@@Base+0x13fc>
  407665:	mov    rdi,QWORD PTR [rbp-0x18]
  407669:	mov    ecx,DWORD PTR [rbp-0x1c]
  40766c:	mov    r8,QWORD PTR [rbp-0x40]
  407670:	mov    rdx,QWORD PTR [rbp-0x38]
  407674:	mov    rsi,QWORD PTR [rbp-0x30]
  407678:	mov    rax,QWORD PTR [rbp-0x28]
  40767c:	mov    r9,r8
  40767f:	mov    r8,rdi
  407682:	mov    rdi,rax
  407685:	call   406fa9 <_start@@Base+0xd19>
  40768a:	jmp    407690 <_start@@Base+0x1400>
  40768c:	mov    rax,QWORD PTR [rbp-0x30]
  407690:	mov    rdx,QWORD PTR [rbp-0x8]
  407694:	xor    rdx,QWORD PTR fs:0x28
  40769d:	je     4076a4 <_start@@Base+0x1414>
  40769f:	call   4061a0 <__stack_chk_fail@plt>
  4076a4:	leave  
  4076a5:	ret    
  4076a6:	push   rbp
  4076a7:	mov    rbp,rsp
  4076aa:	sub    rsp,0x40
  4076ae:	mov    QWORD PTR [rbp-0x28],rdi
  4076b2:	mov    QWORD PTR [rbp-0x30],rsi
  4076b6:	mov    QWORD PTR [rbp-0x38],rdx
  4076ba:	mov    QWORD PTR [rbp-0x40],rcx
  4076be:	mov    rax,QWORD PTR fs:0x28
  4076c7:	mov    QWORD PTR [rbp-0x8],rax
  4076cb:	xor    eax,eax
  4076cd:	mov    QWORD PTR [rbp-0x18],0x0
  4076d5:	mov    DWORD PTR [rbp-0x1c],0x0
  4076dc:	mov    rax,QWORD PTR [rbp-0x30]
  4076e0:	mov    QWORD PTR [rbp-0x10],rax
  4076e4:	mov    rax,QWORD PTR [rbp-0x40]
  4076e8:	mov    BYTE PTR [rax],0x0
  4076eb:	mov    rax,QWORD PTR [rbp-0x30]
  4076ef:	cmp    rax,QWORD PTR [rbp-0x38]
  4076f3:	jne    4076fb <_start@@Base+0x146b>
  4076f5:	mov    rax,QWORD PTR [rbp-0x30]
  4076f9:	jmp    407753 <_start@@Base+0x14c3>
  4076fb:	lea    rdi,[rbp-0x18]
  4076ff:	lea    rcx,[rbp-0x1c]
  407703:	mov    rdx,QWORD PTR [rbp-0x38]
  407707:	mov    rsi,QWORD PTR [rbp-0x30]
  40770b:	mov    rax,QWORD PTR [rbp-0x28]
  40770f:	mov    r8,rdi
  407712:	mov    rdi,rax
  407715:	call   4293bb <flatcc_json_parser_integer@@Base>
  40771a:	mov    QWORD PTR [rbp-0x30],rax
  40771e:	mov    rax,QWORD PTR [rbp-0x30]
  407722:	cmp    rax,QWORD PTR [rbp-0x10]
  407726:	je     40774f <_start@@Base+0x14bf>
  407728:	mov    rdi,QWORD PTR [rbp-0x18]
  40772c:	mov    ecx,DWORD PTR [rbp-0x1c]
  40772f:	mov    r8,QWORD PTR [rbp-0x40]
  407733:	mov    rdx,QWORD PTR [rbp-0x38]
  407737:	mov    rsi,QWORD PTR [rbp-0x30]
  40773b:	mov    rax,QWORD PTR [rbp-0x28]
  40773f:	mov    r9,r8
  407742:	mov    r8,rdi
  407745:	mov    rdi,rax
  407748:	call   407021 <_start@@Base+0xd91>
  40774d:	jmp    407753 <_start@@Base+0x14c3>
  40774f:	mov    rax,QWORD PTR [rbp-0x30]
  407753:	mov    rdx,QWORD PTR [rbp-0x8]
  407757:	xor    rdx,QWORD PTR fs:0x28
  407760:	je     407767 <_start@@Base+0x14d7>
  407762:	call   4061a0 <__stack_chk_fail@plt>
  407767:	leave  
  407768:	ret    
  407769:	push   rbp
  40776a:	mov    rbp,rsp
  40776d:	sub    rsp,0x40
  407771:	mov    QWORD PTR [rbp-0x28],rdi
  407775:	mov    QWORD PTR [rbp-0x30],rsi
  407779:	mov    QWORD PTR [rbp-0x38],rdx
  40777d:	mov    QWORD PTR [rbp-0x40],rcx
  407781:	mov    rax,QWORD PTR fs:0x28
  40778a:	mov    QWORD PTR [rbp-0x8],rax
  40778e:	xor    eax,eax
  407790:	mov    QWORD PTR [rbp-0x18],0x0
  407798:	mov    DWORD PTR [rbp-0x1c],0x0
  40779f:	mov    rax,QWORD PTR [rbp-0x30]
  4077a3:	mov    QWORD PTR [rbp-0x10],rax
  4077a7:	mov    rax,QWORD PTR [rbp-0x40]
  4077ab:	mov    QWORD PTR [rax],0x0
  4077b2:	mov    rax,QWORD PTR [rbp-0x30]
  4077b6:	cmp    rax,QWORD PTR [rbp-0x38]
  4077ba:	jne    4077c2 <_start@@Base+0x1532>
  4077bc:	mov    rax,QWORD PTR [rbp-0x30]
  4077c0:	jmp    40781a <_start@@Base+0x158a>
  4077c2:	lea    rdi,[rbp-0x18]
  4077c6:	lea    rcx,[rbp-0x1c]
  4077ca:	mov    rdx,QWORD PTR [rbp-0x38]
  4077ce:	mov    rsi,QWORD PTR [rbp-0x30]
  4077d2:	mov    rax,QWORD PTR [rbp-0x28]
  4077d6:	mov    r8,rdi
  4077d9:	mov    rdi,rax
  4077dc:	call   4293bb <flatcc_json_parser_integer@@Base>
  4077e1:	mov    QWORD PTR [rbp-0x30],rax
  4077e5:	mov    rax,QWORD PTR [rbp-0x30]
  4077e9:	cmp    rax,QWORD PTR [rbp-0x10]
  4077ed:	je     407816 <_start@@Base+0x1586>
  4077ef:	mov    rdi,QWORD PTR [rbp-0x18]
  4077f3:	mov    ecx,DWORD PTR [rbp-0x1c]
  4077f6:	mov    r8,QWORD PTR [rbp-0x40]
  4077fa:	mov    rdx,QWORD PTR [rbp-0x38]
  4077fe:	mov    rsi,QWORD PTR [rbp-0x30]
  407802:	mov    rax,QWORD PTR [rbp-0x28]
  407806:	mov    r9,r8
  407809:	mov    r8,rdi
  40780c:	mov    rdi,rax
  40780f:	call   407098 <_start@@Base+0xe08>
  407814:	jmp    40781a <_start@@Base+0x158a>
  407816:	mov    rax,QWORD PTR [rbp-0x30]
  40781a:	mov    rdx,QWORD PTR [rbp-0x8]
  40781e:	xor    rdx,QWORD PTR fs:0x28
  407827:	je     40782e <_start@@Base+0x159e>
  407829:	call   4061a0 <__stack_chk_fail@plt>
  40782e:	leave  
  40782f:	ret    
  407830:	push   rbp
  407831:	mov    rbp,rsp
  407834:	sub    rsp,0x40
  407838:	mov    QWORD PTR [rbp-0x28],rdi
  40783c:	mov    QWORD PTR [rbp-0x30],rsi
  407840:	mov    QWORD PTR [rbp-0x38],rdx
  407844:	mov    QWORD PTR [rbp-0x40],rcx
  407848:	mov    rax,QWORD PTR fs:0x28
  407851:	mov    QWORD PTR [rbp-0x8],rax
  407855:	xor    eax,eax
  407857:	mov    QWORD PTR [rbp-0x18],0x0
  40785f:	mov    DWORD PTR [rbp-0x1c],0x0
  407866:	mov    rax,QWORD PTR [rbp-0x30]
  40786a:	mov    QWORD PTR [rbp-0x10],rax
  40786e:	mov    rax,QWORD PTR [rbp-0x40]
  407872:	mov    DWORD PTR [rax],0x0
  407878:	mov    rax,QWORD PTR [rbp-0x30]
  40787c:	cmp    rax,QWORD PTR [rbp-0x38]
  407880:	jne    407888 <_start@@Base+0x15f8>
  407882:	mov    rax,QWORD PTR [rbp-0x30]
  407886:	jmp    4078e0 <_start@@Base+0x1650>
  407888:	lea    rdi,[rbp-0x18]
  40788c:	lea    rcx,[rbp-0x1c]
  407890:	mov    rdx,QWORD PTR [rbp-0x38]
  407894:	mov    rsi,QWORD PTR [rbp-0x30]
  407898:	mov    rax,QWORD PTR [rbp-0x28]
  40789c:	mov    r8,rdi
  40789f:	mov    rdi,rax
  4078a2:	call   4293bb <flatcc_json_parser_integer@@Base>
  4078a7:	mov    QWORD PTR [rbp-0x30],rax
  4078ab:	mov    rax,QWORD PTR [rbp-0x30]
  4078af:	cmp    rax,QWORD PTR [rbp-0x10]
  4078b3:	je     4078dc <_start@@Base+0x164c>
  4078b5:	mov    rdi,QWORD PTR [rbp-0x18]
  4078b9:	mov    ecx,DWORD PTR [rbp-0x1c]
  4078bc:	mov    r8,QWORD PTR [rbp-0x40]
  4078c0:	mov    rdx,QWORD PTR [rbp-0x38]
  4078c4:	mov    rsi,QWORD PTR [rbp-0x30]
  4078c8:	mov    rax,QWORD PTR [rbp-0x28]
  4078cc:	mov    r9,r8
  4078cf:	mov    r8,rdi
  4078d2:	mov    rdi,rax
  4078d5:	call   407130 <_start@@Base+0xea0>
  4078da:	jmp    4078e0 <_start@@Base+0x1650>
  4078dc:	mov    rax,QWORD PTR [rbp-0x30]
  4078e0:	mov    rdx,QWORD PTR [rbp-0x8]
  4078e4:	xor    rdx,QWORD PTR fs:0x28
  4078ed:	je     4078f4 <_start@@Base+0x1664>
  4078ef:	call   4061a0 <__stack_chk_fail@plt>
  4078f4:	leave  
  4078f5:	ret    
  4078f6:	push   rbp
  4078f7:	mov    rbp,rsp
  4078fa:	sub    rsp,0x40
  4078fe:	mov    QWORD PTR [rbp-0x28],rdi
  407902:	mov    QWORD PTR [rbp-0x30],rsi
  407906:	mov    QWORD PTR [rbp-0x38],rdx
  40790a:	mov    QWORD PTR [rbp-0x40],rcx
  40790e:	mov    rax,QWORD PTR fs:0x28
  407917:	mov    QWORD PTR [rbp-0x8],rax
  40791b:	xor    eax,eax
  40791d:	mov    QWORD PTR [rbp-0x18],0x0
  407925:	mov    DWORD PTR [rbp-0x1c],0x0
  40792c:	mov    rax,QWORD PTR [rbp-0x30]
  407930:	mov    QWORD PTR [rbp-0x10],rax
  407934:	mov    rax,QWORD PTR [rbp-0x40]
  407938:	mov    WORD PTR [rax],0x0
  40793d:	mov    rax,QWORD PTR [rbp-0x30]
  407941:	cmp    rax,QWORD PTR [rbp-0x38]
  407945:	jne    40794d <_start@@Base+0x16bd>
  407947:	mov    rax,QWORD PTR [rbp-0x30]
  40794b:	jmp    4079a5 <_start@@Base+0x1715>
  40794d:	lea    rdi,[rbp-0x18]
  407951:	lea    rcx,[rbp-0x1c]
  407955:	mov    rdx,QWORD PTR [rbp-0x38]
  407959:	mov    rsi,QWORD PTR [rbp-0x30]
  40795d:	mov    rax,QWORD PTR [rbp-0x28]
  407961:	mov    r8,rdi
  407964:	mov    rdi,rax
  407967:	call   4293bb <flatcc_json_parser_integer@@Base>
  40796c:	mov    QWORD PTR [rbp-0x30],rax
  407970:	mov    rax,QWORD PTR [rbp-0x30]
  407974:	cmp    rax,QWORD PTR [rbp-0x10]
  407978:	je     4079a1 <_start@@Base+0x1711>
  40797a:	mov    rdi,QWORD PTR [rbp-0x18]
  40797e:	mov    ecx,DWORD PTR [rbp-0x1c]
  407981:	mov    r8,QWORD PTR [rbp-0x40]
  407985:	mov    rdx,QWORD PTR [rbp-0x38]
  407989:	mov    rsi,QWORD PTR [rbp-0x30]
  40798d:	mov    rax,QWORD PTR [rbp-0x28]
  407991:	mov    r9,r8
  407994:	mov    r8,rdi
  407997:	mov    rdi,rax
  40799a:	call   4071c2 <_start@@Base+0xf32>
  40799f:	jmp    4079a5 <_start@@Base+0x1715>
  4079a1:	mov    rax,QWORD PTR [rbp-0x30]
  4079a5:	mov    rdx,QWORD PTR [rbp-0x8]
  4079a9:	xor    rdx,QWORD PTR fs:0x28
  4079b2:	je     4079b9 <_start@@Base+0x1729>
  4079b4:	call   4061a0 <__stack_chk_fail@plt>
  4079b9:	leave  
  4079ba:	ret    
  4079bb:	push   rbp
  4079bc:	mov    rbp,rsp
  4079bf:	sub    rsp,0x40
  4079c3:	mov    QWORD PTR [rbp-0x28],rdi
  4079c7:	mov    QWORD PTR [rbp-0x30],rsi
  4079cb:	mov    QWORD PTR [rbp-0x38],rdx
  4079cf:	mov    QWORD PTR [rbp-0x40],rcx
  4079d3:	mov    rax,QWORD PTR fs:0x28
  4079dc:	mov    QWORD PTR [rbp-0x8],rax
  4079e0:	xor    eax,eax
  4079e2:	mov    QWORD PTR [rbp-0x18],0x0
  4079ea:	mov    DWORD PTR [rbp-0x1c],0x0
  4079f1:	mov    rax,QWORD PTR [rbp-0x30]
  4079f5:	mov    QWORD PTR [rbp-0x10],rax
  4079f9:	mov    rax,QWORD PTR [rbp-0x40]
  4079fd:	mov    BYTE PTR [rax],0x0
  407a00:	mov    rax,QWORD PTR [rbp-0x30]
  407a04:	cmp    rax,QWORD PTR [rbp-0x38]
  407a08:	jne    407a10 <_start@@Base+0x1780>
  407a0a:	mov    rax,QWORD PTR [rbp-0x30]
  407a0e:	jmp    407a68 <_start@@Base+0x17d8>
  407a10:	lea    rdi,[rbp-0x18]
  407a14:	lea    rcx,[rbp-0x1c]
  407a18:	mov    rdx,QWORD PTR [rbp-0x38]
  407a1c:	mov    rsi,QWORD PTR [rbp-0x30]
  407a20:	mov    rax,QWORD PTR [rbp-0x28]
  407a24:	mov    r8,rdi
  407a27:	mov    rdi,rax
  407a2a:	call   4293bb <flatcc_json_parser_integer@@Base>
  407a2f:	mov    QWORD PTR [rbp-0x30],rax
  407a33:	mov    rax,QWORD PTR [rbp-0x30]
  407a37:	cmp    rax,QWORD PTR [rbp-0x10]
  407a3b:	je     407a64 <_start@@Base+0x17d4>
  407a3d:	mov    rdi,QWORD PTR [rbp-0x18]
  407a41:	mov    ecx,DWORD PTR [rbp-0x1c]
  407a44:	mov    r8,QWORD PTR [rbp-0x40]
  407a48:	mov    rdx,QWORD PTR [rbp-0x38]
  407a4c:	mov    rsi,QWORD PTR [rbp-0x30]
  407a50:	mov    rax,QWORD PTR [rbp-0x28]
  407a54:	mov    r9,r8
  407a57:	mov    r8,rdi
  407a5a:	mov    rdi,rax
  407a5d:	call   407255 <_start@@Base+0xfc5>
  407a62:	jmp    407a68 <_start@@Base+0x17d8>
  407a64:	mov    rax,QWORD PTR [rbp-0x30]
  407a68:	mov    rdx,QWORD PTR [rbp-0x8]
  407a6c:	xor    rdx,QWORD PTR fs:0x28
  407a75:	je     407a7c <_start@@Base+0x17ec>
  407a77:	call   4061a0 <__stack_chk_fail@plt>
  407a7c:	leave  
  407a7d:	ret    
  407a7e:	push   rbp
  407a7f:	mov    rbp,rsp
  407a82:	sub    rsp,0x40
  407a86:	mov    QWORD PTR [rbp-0x28],rdi
  407a8a:	mov    QWORD PTR [rbp-0x30],rsi
  407a8e:	mov    QWORD PTR [rbp-0x38],rdx
  407a92:	mov    QWORD PTR [rbp-0x40],rcx
  407a96:	mov    rax,QWORD PTR fs:0x28
  407a9f:	mov    QWORD PTR [rbp-0x8],rax
  407aa3:	xor    eax,eax
  407aa5:	mov    rax,QWORD PTR [rbp-0x30]
  407aa9:	mov    QWORD PTR [rbp-0x10],rax
  407aad:	mov    rax,QWORD PTR [rbp-0x38]
  407ab1:	sub    rax,QWORD PTR [rbp-0x30]
  407ab5:	cmp    rax,0x3
  407ab9:	jle    407ae8 <_start@@Base+0x1858>
  407abb:	mov    rax,QWORD PTR [rbp-0x30]
  407abf:	mov    edx,0x4
  407ac4:	lea    rsi,[rip+0x2f572]        # 43703d <_IO_stdin_used@@Base+0x3d>
  407acb:	mov    rdi,rax
  407ace:	call   4061f0 <memcmp@plt>
  407ad3:	test   eax,eax
  407ad5:	jne    407ae8 <_start@@Base+0x1858>
  407ad7:	mov    rax,QWORD PTR [rbp-0x40]
  407adb:	mov    BYTE PTR [rax],0x1
  407ade:	mov    rax,QWORD PTR [rbp-0x10]
  407ae2:	add    rax,0x4
  407ae6:	jmp    407b54 <_start@@Base+0x18c4>
  407ae8:	mov    rax,QWORD PTR [rbp-0x38]
  407aec:	sub    rax,QWORD PTR [rbp-0x30]
  407af0:	cmp    rax,0x4
  407af4:	jle    407b23 <_start@@Base+0x1893>
  407af6:	mov    rax,QWORD PTR [rbp-0x30]
  407afa:	mov    edx,0x5
  407aff:	lea    rsi,[rip+0x2f53c]        # 437042 <_IO_stdin_used@@Base+0x42>
  407b06:	mov    rdi,rax
  407b09:	call   4061f0 <memcmp@plt>
  407b0e:	test   eax,eax
  407b10:	jne    407b23 <_start@@Base+0x1893>
  407b12:	mov    rax,QWORD PTR [rbp-0x40]
  407b16:	mov    BYTE PTR [rax],0x0
  407b19:	mov    rax,QWORD PTR [rbp-0x10]
  407b1d:	add    rax,0x5
  407b21:	jmp    407b54 <_start@@Base+0x18c4>
  407b23:	lea    rcx,[rbp-0x11]
  407b27:	mov    rdx,QWORD PTR [rbp-0x38]
  407b2b:	mov    rsi,QWORD PTR [rbp-0x30]
  407b2f:	mov    rax,QWORD PTR [rbp-0x28]
  407b33:	mov    rdi,rax
  407b36:	call   4076a6 <_start@@Base+0x1416>
  407b3b:	mov    QWORD PTR [rbp-0x30],rax
  407b3f:	movzx  eax,BYTE PTR [rbp-0x11]
  407b43:	test   al,al
  407b45:	setne  al
  407b48:	mov    edx,eax
  407b4a:	mov    rax,QWORD PTR [rbp-0x40]
  407b4e:	mov    BYTE PTR [rax],dl
  407b50:	mov    rax,QWORD PTR [rbp-0x30]
  407b54:	mov    rcx,QWORD PTR [rbp-0x8]
  407b58:	xor    rcx,QWORD PTR fs:0x28
  407b61:	je     407b68 <_start@@Base+0x18d8>
  407b63:	call   4061a0 <__stack_chk_fail@plt>
  407b68:	leave  
  407b69:	ret    
  407b6a:	endbr64 
  407b6e:	push   rbp
  407b6f:	mov    rbp,rsp
  407b72:	sub    rsp,0x60
  407b76:	mov    QWORD PTR [rbp-0x38],rdi
  407b7a:	mov    QWORD PTR [rbp-0x40],rsi
  407b7e:	mov    QWORD PTR [rbp-0x48],rdx
  407b82:	mov    QWORD PTR [rbp-0x50],rcx
  407b86:	mov    QWORD PTR [rbp-0x58],r8
  407b8a:	mov    rax,QWORD PTR fs:0x28
  407b93:	mov    QWORD PTR [rbp-0x8],rax
  407b97:	xor    eax,eax
  407b99:	mov    QWORD PTR [rbp-0x28],0x0
  407ba1:	mov    rax,QWORD PTR [rbp-0x58]
  407ba5:	mov    QWORD PTR [rax],0x0
  407bac:	mov    rdx,QWORD PTR [rbp-0x48]
  407bb0:	mov    rcx,QWORD PTR [rbp-0x40]
  407bb4:	mov    rax,QWORD PTR [rbp-0x38]
  407bb8:	mov    rsi,rcx
  407bbb:	mov    rdi,rax
  407bbe:	call   40691c <_start@@Base+0x68c>
  407bc3:	mov    QWORD PTR [rbp-0x40],rax
  407bc7:	mov    rax,QWORD PTR [rbp-0x40]
  407bcb:	cmp    rax,QWORD PTR [rbp-0x48]
  407bcf:	jne    407bda <_start@@Base+0x194a>
  407bd1:	mov    rax,QWORD PTR [rbp-0x40]
  407bd5:	jmp    407cb7 <_start@@Base+0x1a27>
  407bda:	mov    rax,QWORD PTR [rbp-0x50]
  407bde:	mov    QWORD PTR [rbp-0x18],rax
  407be2:	mov    rax,QWORD PTR [rbp-0x18]
  407be6:	mov    rax,QWORD PTR [rax]
  407be9:	mov    rdx,QWORD PTR [rbp-0x40]
  407bed:	mov    QWORD PTR [rbp-0x10],rdx
  407bf1:	lea    r9,[rbp-0x2c]
  407bf5:	lea    r8,[rbp-0x20]
  407bf9:	lea    rcx,[rbp-0x30]
  407bfd:	mov    rdx,QWORD PTR [rbp-0x48]
  407c01:	mov    rsi,QWORD PTR [rbp-0x10]
  407c05:	mov    rdi,QWORD PTR [rbp-0x38]
  407c09:	call   rax
  407c0b:	mov    QWORD PTR [rbp-0x40],rax
  407c0f:	mov    rax,QWORD PTR [rbp-0x40]
  407c13:	cmp    rax,QWORD PTR [rbp-0x48]
  407c17:	jne    407c22 <_start@@Base+0x1992>
  407c19:	mov    rax,QWORD PTR [rbp-0x40]
  407c1d:	jmp    407cb7 <_start@@Base+0x1a27>
  407c22:	mov    rax,QWORD PTR [rbp-0x40]
  407c26:	cmp    rax,QWORD PTR [rbp-0x10]
  407c2a:	jne    407c3d <_start@@Base+0x19ad>
  407c2c:	add    QWORD PTR [rbp-0x18],0x8
  407c31:	mov    rax,QWORD PTR [rbp-0x18]
  407c35:	mov    rax,QWORD PTR [rax]
  407c38:	test   rax,rax
  407c3b:	jne    407be2 <_start@@Base+0x1952>
  407c3d:	mov    rax,QWORD PTR [rbp-0x10]
  407c41:	cmp    rax,QWORD PTR [rbp-0x40]
  407c45:	jne    407c62 <_start@@Base+0x19d2>
  407c47:	mov    rdx,QWORD PTR [rbp-0x48]
  407c4b:	mov    rsi,QWORD PTR [rbp-0x40]
  407c4f:	mov    rax,QWORD PTR [rbp-0x38]
  407c53:	mov    ecx,0x17
  407c58:	mov    rdi,rax
  407c5b:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  407c60:	jmp    407cb7 <_start@@Base+0x1a27>
  407c62:	mov    rdi,QWORD PTR [rbp-0x20]
  407c66:	mov    ecx,DWORD PTR [rbp-0x30]
  407c69:	lea    r8,[rbp-0x28]
  407c6d:	mov    rdx,QWORD PTR [rbp-0x48]
  407c71:	mov    rsi,QWORD PTR [rbp-0x40]
  407c75:	mov    rax,QWORD PTR [rbp-0x38]
  407c79:	mov    r9,r8
  407c7c:	mov    r8,rdi
  407c7f:	mov    rdi,rax
  407c82:	call   406e8a <_start@@Base+0xbfa>
  407c87:	cmp    QWORD PTR [rbp-0x48],rax
  407c8b:	jne    407c93 <_start@@Base+0x1a03>
  407c8d:	mov    rax,QWORD PTR [rbp-0x48]
  407c91:	jmp    407cb7 <_start@@Base+0x1a27>
  407c93:	mov    rax,QWORD PTR [rbp-0x58]
  407c97:	mov    rdx,QWORD PTR [rax]
  407c9a:	mov    rax,QWORD PTR [rbp-0x28]
  407c9e:	add    rdx,rax
  407ca1:	mov    rax,QWORD PTR [rbp-0x58]
  407ca5:	mov    QWORD PTR [rax],rdx
  407ca8:	mov    eax,DWORD PTR [rbp-0x2c]
  407cab:	test   eax,eax
  407cad:	jne    407bda <_start@@Base+0x194a>
  407cb3:	mov    rax,QWORD PTR [rbp-0x40]
  407cb7:	mov    rdi,QWORD PTR [rbp-0x8]
  407cbb:	xor    rdi,QWORD PTR fs:0x28
  407cc4:	je     407ccb <_start@@Base+0x1a3b>
  407cc6:	call   4061a0 <__stack_chk_fail@plt>
  407ccb:	leave  
  407ccc:	ret    
  407ccd:	endbr64 
  407cd1:	push   rbp
  407cd2:	mov    rbp,rsp
  407cd5:	sub    rsp,0x60
  407cd9:	mov    QWORD PTR [rbp-0x38],rdi
  407cdd:	mov    QWORD PTR [rbp-0x40],rsi
  407ce1:	mov    QWORD PTR [rbp-0x48],rdx
  407ce5:	mov    QWORD PTR [rbp-0x50],rcx
  407ce9:	mov    QWORD PTR [rbp-0x58],r8
  407ced:	mov    rax,QWORD PTR fs:0x28
  407cf6:	mov    QWORD PTR [rbp-0x8],rax
  407cfa:	xor    eax,eax
  407cfc:	mov    DWORD PTR [rbp-0x2c],0x0
  407d03:	mov    rax,QWORD PTR [rbp-0x58]
  407d07:	mov    DWORD PTR [rax],0x0
  407d0d:	mov    rdx,QWORD PTR [rbp-0x48]
  407d11:	mov    rcx,QWORD PTR [rbp-0x40]
  407d15:	mov    rax,QWORD PTR [rbp-0x38]
  407d19:	mov    rsi,rcx
  407d1c:	mov    rdi,rax
  407d1f:	call   40691c <_start@@Base+0x68c>
  407d24:	mov    QWORD PTR [rbp-0x40],rax
  407d28:	mov    rax,QWORD PTR [rbp-0x40]
  407d2c:	cmp    rax,QWORD PTR [rbp-0x48]
  407d30:	jne    407d3b <_start@@Base+0x1aab>
  407d32:	mov    rax,QWORD PTR [rbp-0x40]
  407d36:	jmp    407e14 <_start@@Base+0x1b84>
  407d3b:	mov    rax,QWORD PTR [rbp-0x50]
  407d3f:	mov    QWORD PTR [rbp-0x18],rax
  407d43:	mov    rax,QWORD PTR [rbp-0x18]
  407d47:	mov    rax,QWORD PTR [rax]
  407d4a:	mov    rdx,QWORD PTR [rbp-0x40]
  407d4e:	mov    QWORD PTR [rbp-0x10],rdx
  407d52:	lea    r9,[rbp-0x24]
  407d56:	lea    r8,[rbp-0x20]
  407d5a:	lea    rcx,[rbp-0x28]
  407d5e:	mov    rdx,QWORD PTR [rbp-0x48]
  407d62:	mov    rsi,QWORD PTR [rbp-0x10]
  407d66:	mov    rdi,QWORD PTR [rbp-0x38]
  407d6a:	call   rax
  407d6c:	mov    QWORD PTR [rbp-0x40],rax
  407d70:	mov    rax,QWORD PTR [rbp-0x40]
  407d74:	cmp    rax,QWORD PTR [rbp-0x48]
  407d78:	jne    407d83 <_start@@Base+0x1af3>
  407d7a:	mov    rax,QWORD PTR [rbp-0x40]
  407d7e:	jmp    407e14 <_start@@Base+0x1b84>
  407d83:	mov    rax,QWORD PTR [rbp-0x40]
  407d87:	cmp    rax,QWORD PTR [rbp-0x10]
  407d8b:	jne    407d9e <_start@@Base+0x1b0e>
  407d8d:	add    QWORD PTR [rbp-0x18],0x8
  407d92:	mov    rax,QWORD PTR [rbp-0x18]
  407d96:	mov    rax,QWORD PTR [rax]
  407d99:	test   rax,rax
  407d9c:	jne    407d43 <_start@@Base+0x1ab3>
  407d9e:	mov    rax,QWORD PTR [rbp-0x10]
  407da2:	cmp    rax,QWORD PTR [rbp-0x40]
  407da6:	jne    407dc3 <_start@@Base+0x1b33>
  407da8:	mov    rdx,QWORD PTR [rbp-0x48]
  407dac:	mov    rsi,QWORD PTR [rbp-0x40]
  407db0:	mov    rax,QWORD PTR [rbp-0x38]
  407db4:	mov    ecx,0x17
  407db9:	mov    rdi,rax
  407dbc:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  407dc1:	jmp    407e14 <_start@@Base+0x1b84>
  407dc3:	mov    rdi,QWORD PTR [rbp-0x20]
  407dc7:	mov    ecx,DWORD PTR [rbp-0x28]
  407dca:	lea    r8,[rbp-0x2c]
  407dce:	mov    rdx,QWORD PTR [rbp-0x48]
  407dd2:	mov    rsi,QWORD PTR [rbp-0x40]
  407dd6:	mov    rax,QWORD PTR [rbp-0x38]
  407dda:	mov    r9,r8
  407ddd:	mov    r8,rdi
  407de0:	mov    rdi,rax
  407de3:	call   406f31 <_start@@Base+0xca1>
  407de8:	cmp    QWORD PTR [rbp-0x48],rax
  407dec:	jne    407df4 <_start@@Base+0x1b64>
  407dee:	mov    rax,QWORD PTR [rbp-0x48]
  407df2:	jmp    407e14 <_start@@Base+0x1b84>
  407df4:	mov    rax,QWORD PTR [rbp-0x58]
  407df8:	mov    edx,DWORD PTR [rax]
  407dfa:	mov    eax,DWORD PTR [rbp-0x2c]
  407dfd:	add    edx,eax
  407dff:	mov    rax,QWORD PTR [rbp-0x58]
  407e03:	mov    DWORD PTR [rax],edx
  407e05:	mov    eax,DWORD PTR [rbp-0x24]
  407e08:	test   eax,eax
  407e0a:	jne    407d3b <_start@@Base+0x1aab>
  407e10:	mov    rax,QWORD PTR [rbp-0x40]
  407e14:	mov    rdi,QWORD PTR [rbp-0x8]
  407e18:	xor    rdi,QWORD PTR fs:0x28
  407e21:	je     407e28 <_start@@Base+0x1b98>
  407e23:	call   4061a0 <__stack_chk_fail@plt>
  407e28:	leave  
  407e29:	ret    
  407e2a:	endbr64 
  407e2e:	push   rbp
  407e2f:	mov    rbp,rsp
  407e32:	sub    rsp,0x60
  407e36:	mov    QWORD PTR [rbp-0x38],rdi
  407e3a:	mov    QWORD PTR [rbp-0x40],rsi
  407e3e:	mov    QWORD PTR [rbp-0x48],rdx
  407e42:	mov    QWORD PTR [rbp-0x50],rcx
  407e46:	mov    QWORD PTR [rbp-0x58],r8
  407e4a:	mov    rax,QWORD PTR fs:0x28
  407e53:	mov    QWORD PTR [rbp-0x8],rax
  407e57:	xor    eax,eax
  407e59:	mov    WORD PTR [rbp-0x2a],0x0
  407e5f:	mov    rax,QWORD PTR [rbp-0x58]
  407e63:	mov    WORD PTR [rax],0x0
  407e68:	mov    rdx,QWORD PTR [rbp-0x48]
  407e6c:	mov    rcx,QWORD PTR [rbp-0x40]
  407e70:	mov    rax,QWORD PTR [rbp-0x38]
  407e74:	mov    rsi,rcx
  407e77:	mov    rdi,rax
  407e7a:	call   40691c <_start@@Base+0x68c>
  407e7f:	mov    QWORD PTR [rbp-0x40],rax
  407e83:	mov    rax,QWORD PTR [rbp-0x40]
  407e87:	cmp    rax,QWORD PTR [rbp-0x48]
  407e8b:	jne    407e96 <_start@@Base+0x1c06>
  407e8d:	mov    rax,QWORD PTR [rbp-0x40]
  407e91:	jmp    407f72 <_start@@Base+0x1ce2>
  407e96:	mov    rax,QWORD PTR [rbp-0x50]
  407e9a:	mov    QWORD PTR [rbp-0x18],rax
  407e9e:	mov    rax,QWORD PTR [rbp-0x18]
  407ea2:	mov    rax,QWORD PTR [rax]
  407ea5:	mov    rdx,QWORD PTR [rbp-0x40]
  407ea9:	mov    QWORD PTR [rbp-0x10],rdx
  407ead:	lea    r9,[rbp-0x24]
  407eb1:	lea    r8,[rbp-0x20]
  407eb5:	lea    rcx,[rbp-0x28]
  407eb9:	mov    rdx,QWORD PTR [rbp-0x48]
  407ebd:	mov    rsi,QWORD PTR [rbp-0x10]
  407ec1:	mov    rdi,QWORD PTR [rbp-0x38]
  407ec5:	call   rax
  407ec7:	mov    QWORD PTR [rbp-0x40],rax
  407ecb:	mov    rax,QWORD PTR [rbp-0x40]
  407ecf:	cmp    rax,QWORD PTR [rbp-0x48]
  407ed3:	jne    407ede <_start@@Base+0x1c4e>
  407ed5:	mov    rax,QWORD PTR [rbp-0x40]
  407ed9:	jmp    407f72 <_start@@Base+0x1ce2>
  407ede:	mov    rax,QWORD PTR [rbp-0x40]
  407ee2:	cmp    rax,QWORD PTR [rbp-0x10]
  407ee6:	jne    407ef9 <_start@@Base+0x1c69>
  407ee8:	add    QWORD PTR [rbp-0x18],0x8
  407eed:	mov    rax,QWORD PTR [rbp-0x18]
  407ef1:	mov    rax,QWORD PTR [rax]
  407ef4:	test   rax,rax
  407ef7:	jne    407e9e <_start@@Base+0x1c0e>
  407ef9:	mov    rax,QWORD PTR [rbp-0x10]
  407efd:	cmp    rax,QWORD PTR [rbp-0x40]
  407f01:	jne    407f1e <_start@@Base+0x1c8e>
  407f03:	mov    rdx,QWORD PTR [rbp-0x48]
  407f07:	mov    rsi,QWORD PTR [rbp-0x40]
  407f0b:	mov    rax,QWORD PTR [rbp-0x38]
  407f0f:	mov    ecx,0x17
  407f14:	mov    rdi,rax
  407f17:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  407f1c:	jmp    407f72 <_start@@Base+0x1ce2>
  407f1e:	mov    rdi,QWORD PTR [rbp-0x20]
  407f22:	mov    ecx,DWORD PTR [rbp-0x28]
  407f25:	lea    r8,[rbp-0x2a]
  407f29:	mov    rdx,QWORD PTR [rbp-0x48]
  407f2d:	mov    rsi,QWORD PTR [rbp-0x40]
  407f31:	mov    rax,QWORD PTR [rbp-0x38]
  407f35:	mov    r9,r8
  407f38:	mov    r8,rdi
  407f3b:	mov    rdi,rax
  407f3e:	call   406fa9 <_start@@Base+0xd19>
  407f43:	cmp    QWORD PTR [rbp-0x48],rax
  407f47:	jne    407f4f <_start@@Base+0x1cbf>
  407f49:	mov    rax,QWORD PTR [rbp-0x48]
  407f4d:	jmp    407f72 <_start@@Base+0x1ce2>
  407f4f:	mov    rax,QWORD PTR [rbp-0x58]
  407f53:	movzx  edx,WORD PTR [rax]
  407f56:	movzx  eax,WORD PTR [rbp-0x2a]
  407f5a:	add    eax,edx
  407f5c:	mov    rdx,QWORD PTR [rbp-0x58]
  407f60:	mov    WORD PTR [rdx],ax
  407f63:	mov    eax,DWORD PTR [rbp-0x24]
  407f66:	test   eax,eax
  407f68:	jne    407e96 <_start@@Base+0x1c06>
  407f6e:	mov    rax,QWORD PTR [rbp-0x40]
  407f72:	mov    rdi,QWORD PTR [rbp-0x8]
  407f76:	xor    rdi,QWORD PTR fs:0x28
  407f7f:	je     407f86 <_start@@Base+0x1cf6>
  407f81:	call   4061a0 <__stack_chk_fail@plt>
  407f86:	leave  
  407f87:	ret    
  407f88:	endbr64 
  407f8c:	push   rbp
  407f8d:	mov    rbp,rsp
  407f90:	sub    rsp,0x60
  407f94:	mov    QWORD PTR [rbp-0x38],rdi
  407f98:	mov    QWORD PTR [rbp-0x40],rsi
  407f9c:	mov    QWORD PTR [rbp-0x48],rdx
  407fa0:	mov    QWORD PTR [rbp-0x50],rcx
  407fa4:	mov    QWORD PTR [rbp-0x58],r8
  407fa8:	mov    rax,QWORD PTR fs:0x28
  407fb1:	mov    QWORD PTR [rbp-0x8],rax
  407fb5:	xor    eax,eax
  407fb7:	mov    BYTE PTR [rbp-0x29],0x0
  407fbb:	mov    rax,QWORD PTR [rbp-0x58]
  407fbf:	mov    BYTE PTR [rax],0x0
  407fc2:	mov    rdx,QWORD PTR [rbp-0x48]
  407fc6:	mov    rcx,QWORD PTR [rbp-0x40]
  407fca:	mov    rax,QWORD PTR [rbp-0x38]
  407fce:	mov    rsi,rcx
  407fd1:	mov    rdi,rax
  407fd4:	call   40691c <_start@@Base+0x68c>
  407fd9:	mov    QWORD PTR [rbp-0x40],rax
  407fdd:	mov    rax,QWORD PTR [rbp-0x40]
  407fe1:	cmp    rax,QWORD PTR [rbp-0x48]
  407fe5:	jne    407ff0 <_start@@Base+0x1d60>
  407fe7:	mov    rax,QWORD PTR [rbp-0x40]
  407feb:	jmp    4080cb <_start@@Base+0x1e3b>
  407ff0:	mov    rax,QWORD PTR [rbp-0x50]
  407ff4:	mov    QWORD PTR [rbp-0x18],rax
  407ff8:	mov    rax,QWORD PTR [rbp-0x18]
  407ffc:	mov    rax,QWORD PTR [rax]
  407fff:	mov    rdx,QWORD PTR [rbp-0x40]
  408003:	mov    QWORD PTR [rbp-0x10],rdx
  408007:	lea    r9,[rbp-0x24]
  40800b:	lea    r8,[rbp-0x20]
  40800f:	lea    rcx,[rbp-0x28]
  408013:	mov    rdx,QWORD PTR [rbp-0x48]
  408017:	mov    rsi,QWORD PTR [rbp-0x10]
  40801b:	mov    rdi,QWORD PTR [rbp-0x38]
  40801f:	call   rax
  408021:	mov    QWORD PTR [rbp-0x40],rax
  408025:	mov    rax,QWORD PTR [rbp-0x40]
  408029:	cmp    rax,QWORD PTR [rbp-0x48]
  40802d:	jne    408038 <_start@@Base+0x1da8>
  40802f:	mov    rax,QWORD PTR [rbp-0x40]
  408033:	jmp    4080cb <_start@@Base+0x1e3b>
  408038:	mov    rax,QWORD PTR [rbp-0x40]
  40803c:	cmp    rax,QWORD PTR [rbp-0x10]
  408040:	jne    408053 <_start@@Base+0x1dc3>
  408042:	add    QWORD PTR [rbp-0x18],0x8
  408047:	mov    rax,QWORD PTR [rbp-0x18]
  40804b:	mov    rax,QWORD PTR [rax]
  40804e:	test   rax,rax
  408051:	jne    407ff8 <_start@@Base+0x1d68>
  408053:	mov    rax,QWORD PTR [rbp-0x10]
  408057:	cmp    rax,QWORD PTR [rbp-0x40]
  40805b:	jne    408078 <_start@@Base+0x1de8>
  40805d:	mov    rdx,QWORD PTR [rbp-0x48]
  408061:	mov    rsi,QWORD PTR [rbp-0x40]
  408065:	mov    rax,QWORD PTR [rbp-0x38]
  408069:	mov    ecx,0x17
  40806e:	mov    rdi,rax
  408071:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  408076:	jmp    4080cb <_start@@Base+0x1e3b>
  408078:	mov    rdi,QWORD PTR [rbp-0x20]
  40807c:	mov    ecx,DWORD PTR [rbp-0x28]
  40807f:	lea    r8,[rbp-0x29]
  408083:	mov    rdx,QWORD PTR [rbp-0x48]
  408087:	mov    rsi,QWORD PTR [rbp-0x40]
  40808b:	mov    rax,QWORD PTR [rbp-0x38]
  40808f:	mov    r9,r8
  408092:	mov    r8,rdi
  408095:	mov    rdi,rax
  408098:	call   407021 <_start@@Base+0xd91>
  40809d:	cmp    QWORD PTR [rbp-0x48],rax
  4080a1:	jne    4080a9 <_start@@Base+0x1e19>
  4080a3:	mov    rax,QWORD PTR [rbp-0x48]
  4080a7:	jmp    4080cb <_start@@Base+0x1e3b>
  4080a9:	mov    rax,QWORD PTR [rbp-0x58]
  4080ad:	movzx  edx,BYTE PTR [rax]
  4080b0:	movzx  eax,BYTE PTR [rbp-0x29]
  4080b4:	add    eax,edx
  4080b6:	mov    rdx,QWORD PTR [rbp-0x58]
  4080ba:	mov    BYTE PTR [rdx],al
  4080bc:	mov    eax,DWORD PTR [rbp-0x24]
  4080bf:	test   eax,eax
  4080c1:	jne    407ff0 <_start@@Base+0x1d60>
  4080c7:	mov    rax,QWORD PTR [rbp-0x40]
  4080cb:	mov    rdi,QWORD PTR [rbp-0x8]
  4080cf:	xor    rdi,QWORD PTR fs:0x28
  4080d8:	je     4080df <_start@@Base+0x1e4f>
  4080da:	call   4061a0 <__stack_chk_fail@plt>
  4080df:	leave  
  4080e0:	ret    
  4080e1:	endbr64 
  4080e5:	push   rbp
  4080e6:	mov    rbp,rsp
  4080e9:	sub    rsp,0x60
  4080ed:	mov    QWORD PTR [rbp-0x38],rdi
  4080f1:	mov    QWORD PTR [rbp-0x40],rsi
  4080f5:	mov    QWORD PTR [rbp-0x48],rdx
  4080f9:	mov    QWORD PTR [rbp-0x50],rcx
  4080fd:	mov    QWORD PTR [rbp-0x58],r8
  408101:	mov    rax,QWORD PTR fs:0x28
  40810a:	mov    QWORD PTR [rbp-0x8],rax
  40810e:	xor    eax,eax
  408110:	mov    QWORD PTR [rbp-0x28],0x0
  408118:	mov    rax,QWORD PTR [rbp-0x58]
  40811c:	mov    QWORD PTR [rax],0x0
  408123:	mov    rdx,QWORD PTR [rbp-0x48]
  408127:	mov    rcx,QWORD PTR [rbp-0x40]
  40812b:	mov    rax,QWORD PTR [rbp-0x38]
  40812f:	mov    rsi,rcx
  408132:	mov    rdi,rax
  408135:	call   40691c <_start@@Base+0x68c>
  40813a:	mov    QWORD PTR [rbp-0x40],rax
  40813e:	mov    rax,QWORD PTR [rbp-0x40]
  408142:	cmp    rax,QWORD PTR [rbp-0x48]
  408146:	jne    408151 <_start@@Base+0x1ec1>
  408148:	mov    rax,QWORD PTR [rbp-0x40]
  40814c:	jmp    40822e <_start@@Base+0x1f9e>
  408151:	mov    rax,QWORD PTR [rbp-0x50]
  408155:	mov    QWORD PTR [rbp-0x18],rax
  408159:	mov    rax,QWORD PTR [rbp-0x18]
  40815d:	mov    rax,QWORD PTR [rax]
  408160:	mov    rdx,QWORD PTR [rbp-0x40]
  408164:	mov    QWORD PTR [rbp-0x10],rdx
  408168:	lea    r9,[rbp-0x2c]
  40816c:	lea    r8,[rbp-0x20]
  408170:	lea    rcx,[rbp-0x30]
  408174:	mov    rdx,QWORD PTR [rbp-0x48]
  408178:	mov    rsi,QWORD PTR [rbp-0x10]
  40817c:	mov    rdi,QWORD PTR [rbp-0x38]
  408180:	call   rax
  408182:	mov    QWORD PTR [rbp-0x40],rax
  408186:	mov    rax,QWORD PTR [rbp-0x40]
  40818a:	cmp    rax,QWORD PTR [rbp-0x48]
  40818e:	jne    408199 <_start@@Base+0x1f09>
  408190:	mov    rax,QWORD PTR [rbp-0x40]
  408194:	jmp    40822e <_start@@Base+0x1f9e>
  408199:	mov    rax,QWORD PTR [rbp-0x40]
  40819d:	cmp    rax,QWORD PTR [rbp-0x10]
  4081a1:	jne    4081b4 <_start@@Base+0x1f24>
  4081a3:	add    QWORD PTR [rbp-0x18],0x8
  4081a8:	mov    rax,QWORD PTR [rbp-0x18]
  4081ac:	mov    rax,QWORD PTR [rax]
  4081af:	test   rax,rax
  4081b2:	jne    408159 <_start@@Base+0x1ec9>
  4081b4:	mov    rax,QWORD PTR [rbp-0x10]
  4081b8:	cmp    rax,QWORD PTR [rbp-0x40]
  4081bc:	jne    4081d9 <_start@@Base+0x1f49>
  4081be:	mov    rdx,QWORD PTR [rbp-0x48]
  4081c2:	mov    rsi,QWORD PTR [rbp-0x40]
  4081c6:	mov    rax,QWORD PTR [rbp-0x38]
  4081ca:	mov    ecx,0x17
  4081cf:	mov    rdi,rax
  4081d2:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4081d7:	jmp    40822e <_start@@Base+0x1f9e>
  4081d9:	mov    rdi,QWORD PTR [rbp-0x20]
  4081dd:	mov    ecx,DWORD PTR [rbp-0x30]
  4081e0:	lea    r8,[rbp-0x28]
  4081e4:	mov    rdx,QWORD PTR [rbp-0x48]
  4081e8:	mov    rsi,QWORD PTR [rbp-0x40]
  4081ec:	mov    rax,QWORD PTR [rbp-0x38]
  4081f0:	mov    r9,r8
  4081f3:	mov    r8,rdi
  4081f6:	mov    rdi,rax
  4081f9:	call   407098 <_start@@Base+0xe08>
  4081fe:	cmp    QWORD PTR [rbp-0x48],rax
  408202:	jne    40820a <_start@@Base+0x1f7a>
  408204:	mov    rax,QWORD PTR [rbp-0x48]
  408208:	jmp    40822e <_start@@Base+0x1f9e>
  40820a:	mov    rax,QWORD PTR [rbp-0x58]
  40820e:	mov    rdx,QWORD PTR [rax]
  408211:	mov    rax,QWORD PTR [rbp-0x28]
  408215:	add    rdx,rax
  408218:	mov    rax,QWORD PTR [rbp-0x58]
  40821c:	mov    QWORD PTR [rax],rdx
  40821f:	mov    eax,DWORD PTR [rbp-0x2c]
  408222:	test   eax,eax
  408224:	jne    408151 <_start@@Base+0x1ec1>
  40822a:	mov    rax,QWORD PTR [rbp-0x40]
  40822e:	mov    rdi,QWORD PTR [rbp-0x8]
  408232:	xor    rdi,QWORD PTR fs:0x28
  40823b:	je     408242 <_start@@Base+0x1fb2>
  40823d:	call   4061a0 <__stack_chk_fail@plt>
  408242:	leave  
  408243:	ret    
  408244:	endbr64 
  408248:	push   rbp
  408249:	mov    rbp,rsp
  40824c:	sub    rsp,0x60
  408250:	mov    QWORD PTR [rbp-0x38],rdi
  408254:	mov    QWORD PTR [rbp-0x40],rsi
  408258:	mov    QWORD PTR [rbp-0x48],rdx
  40825c:	mov    QWORD PTR [rbp-0x50],rcx
  408260:	mov    QWORD PTR [rbp-0x58],r8
  408264:	mov    rax,QWORD PTR fs:0x28
  40826d:	mov    QWORD PTR [rbp-0x8],rax
  408271:	xor    eax,eax
  408273:	mov    DWORD PTR [rbp-0x2c],0x0
  40827a:	mov    rax,QWORD PTR [rbp-0x58]
  40827e:	mov    DWORD PTR [rax],0x0
  408284:	mov    rdx,QWORD PTR [rbp-0x48]
  408288:	mov    rcx,QWORD PTR [rbp-0x40]
  40828c:	mov    rax,QWORD PTR [rbp-0x38]
  408290:	mov    rsi,rcx
  408293:	mov    rdi,rax
  408296:	call   40691c <_start@@Base+0x68c>
  40829b:	mov    QWORD PTR [rbp-0x40],rax
  40829f:	mov    rax,QWORD PTR [rbp-0x40]
  4082a3:	cmp    rax,QWORD PTR [rbp-0x48]
  4082a7:	jne    4082b2 <_start@@Base+0x2022>
  4082a9:	mov    rax,QWORD PTR [rbp-0x40]
  4082ad:	jmp    40838b <_start@@Base+0x20fb>
  4082b2:	mov    rax,QWORD PTR [rbp-0x50]
  4082b6:	mov    QWORD PTR [rbp-0x18],rax
  4082ba:	mov    rax,QWORD PTR [rbp-0x18]
  4082be:	mov    rax,QWORD PTR [rax]
  4082c1:	mov    rdx,QWORD PTR [rbp-0x40]
  4082c5:	mov    QWORD PTR [rbp-0x10],rdx
  4082c9:	lea    r9,[rbp-0x24]
  4082cd:	lea    r8,[rbp-0x20]
  4082d1:	lea    rcx,[rbp-0x28]
  4082d5:	mov    rdx,QWORD PTR [rbp-0x48]
  4082d9:	mov    rsi,QWORD PTR [rbp-0x10]
  4082dd:	mov    rdi,QWORD PTR [rbp-0x38]
  4082e1:	call   rax
  4082e3:	mov    QWORD PTR [rbp-0x40],rax
  4082e7:	mov    rax,QWORD PTR [rbp-0x40]
  4082eb:	cmp    rax,QWORD PTR [rbp-0x48]
  4082ef:	jne    4082fa <_start@@Base+0x206a>
  4082f1:	mov    rax,QWORD PTR [rbp-0x40]
  4082f5:	jmp    40838b <_start@@Base+0x20fb>
  4082fa:	mov    rax,QWORD PTR [rbp-0x40]
  4082fe:	cmp    rax,QWORD PTR [rbp-0x10]
  408302:	jne    408315 <_start@@Base+0x2085>
  408304:	add    QWORD PTR [rbp-0x18],0x8
  408309:	mov    rax,QWORD PTR [rbp-0x18]
  40830d:	mov    rax,QWORD PTR [rax]
  408310:	test   rax,rax
  408313:	jne    4082ba <_start@@Base+0x202a>
  408315:	mov    rax,QWORD PTR [rbp-0x10]
  408319:	cmp    rax,QWORD PTR [rbp-0x40]
  40831d:	jne    40833a <_start@@Base+0x20aa>
  40831f:	mov    rdx,QWORD PTR [rbp-0x48]
  408323:	mov    rsi,QWORD PTR [rbp-0x40]
  408327:	mov    rax,QWORD PTR [rbp-0x38]
  40832b:	mov    ecx,0x17
  408330:	mov    rdi,rax
  408333:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  408338:	jmp    40838b <_start@@Base+0x20fb>
  40833a:	mov    rdi,QWORD PTR [rbp-0x20]
  40833e:	mov    ecx,DWORD PTR [rbp-0x28]
  408341:	lea    r8,[rbp-0x2c]
  408345:	mov    rdx,QWORD PTR [rbp-0x48]
  408349:	mov    rsi,QWORD PTR [rbp-0x40]
  40834d:	mov    rax,QWORD PTR [rbp-0x38]
  408351:	mov    r9,r8
  408354:	mov    r8,rdi
  408357:	mov    rdi,rax
  40835a:	call   407130 <_start@@Base+0xea0>
  40835f:	cmp    QWORD PTR [rbp-0x48],rax
  408363:	jne    40836b <_start@@Base+0x20db>
  408365:	mov    rax,QWORD PTR [rbp-0x48]
  408369:	jmp    40838b <_start@@Base+0x20fb>
  40836b:	mov    rax,QWORD PTR [rbp-0x58]
  40836f:	mov    edx,DWORD PTR [rax]
  408371:	mov    eax,DWORD PTR [rbp-0x2c]
  408374:	add    edx,eax
  408376:	mov    rax,QWORD PTR [rbp-0x58]
  40837a:	mov    DWORD PTR [rax],edx
  40837c:	mov    eax,DWORD PTR [rbp-0x24]
  40837f:	test   eax,eax
  408381:	jne    4082b2 <_start@@Base+0x2022>
  408387:	mov    rax,QWORD PTR [rbp-0x40]
  40838b:	mov    rdi,QWORD PTR [rbp-0x8]
  40838f:	xor    rdi,QWORD PTR fs:0x28
  408398:	je     40839f <_start@@Base+0x210f>
  40839a:	call   4061a0 <__stack_chk_fail@plt>
  40839f:	leave  
  4083a0:	ret    
  4083a1:	endbr64 
  4083a5:	push   rbp
  4083a6:	mov    rbp,rsp
  4083a9:	sub    rsp,0x60
  4083ad:	mov    QWORD PTR [rbp-0x38],rdi
  4083b1:	mov    QWORD PTR [rbp-0x40],rsi
  4083b5:	mov    QWORD PTR [rbp-0x48],rdx
  4083b9:	mov    QWORD PTR [rbp-0x50],rcx
  4083bd:	mov    QWORD PTR [rbp-0x58],r8
  4083c1:	mov    rax,QWORD PTR fs:0x28
  4083ca:	mov    QWORD PTR [rbp-0x8],rax
  4083ce:	xor    eax,eax
  4083d0:	mov    WORD PTR [rbp-0x2a],0x0
  4083d6:	mov    rax,QWORD PTR [rbp-0x58]
  4083da:	mov    WORD PTR [rax],0x0
  4083df:	mov    rdx,QWORD PTR [rbp-0x48]
  4083e3:	mov    rcx,QWORD PTR [rbp-0x40]
  4083e7:	mov    rax,QWORD PTR [rbp-0x38]
  4083eb:	mov    rsi,rcx
  4083ee:	mov    rdi,rax
  4083f1:	call   40691c <_start@@Base+0x68c>
  4083f6:	mov    QWORD PTR [rbp-0x40],rax
  4083fa:	mov    rax,QWORD PTR [rbp-0x40]
  4083fe:	cmp    rax,QWORD PTR [rbp-0x48]
  408402:	jne    40840d <_start@@Base+0x217d>
  408404:	mov    rax,QWORD PTR [rbp-0x40]
  408408:	jmp    4084ed <_start@@Base+0x225d>
  40840d:	mov    rax,QWORD PTR [rbp-0x50]
  408411:	mov    QWORD PTR [rbp-0x18],rax
  408415:	mov    rax,QWORD PTR [rbp-0x18]
  408419:	mov    rax,QWORD PTR [rax]
  40841c:	mov    rdx,QWORD PTR [rbp-0x40]
  408420:	mov    QWORD PTR [rbp-0x10],rdx
  408424:	lea    r9,[rbp-0x24]
  408428:	lea    r8,[rbp-0x20]
  40842c:	lea    rcx,[rbp-0x28]
  408430:	mov    rdx,QWORD PTR [rbp-0x48]
  408434:	mov    rsi,QWORD PTR [rbp-0x10]
  408438:	mov    rdi,QWORD PTR [rbp-0x38]
  40843c:	call   rax
  40843e:	mov    QWORD PTR [rbp-0x40],rax
  408442:	mov    rax,QWORD PTR [rbp-0x40]
  408446:	cmp    rax,QWORD PTR [rbp-0x48]
  40844a:	jne    408455 <_start@@Base+0x21c5>
  40844c:	mov    rax,QWORD PTR [rbp-0x40]
  408450:	jmp    4084ed <_start@@Base+0x225d>
  408455:	mov    rax,QWORD PTR [rbp-0x40]
  408459:	cmp    rax,QWORD PTR [rbp-0x10]
  40845d:	jne    408470 <_start@@Base+0x21e0>
  40845f:	add    QWORD PTR [rbp-0x18],0x8
  408464:	mov    rax,QWORD PTR [rbp-0x18]
  408468:	mov    rax,QWORD PTR [rax]
  40846b:	test   rax,rax
  40846e:	jne    408415 <_start@@Base+0x2185>
  408470:	mov    rax,QWORD PTR [rbp-0x10]
  408474:	cmp    rax,QWORD PTR [rbp-0x40]
  408478:	jne    408495 <_start@@Base+0x2205>
  40847a:	mov    rdx,QWORD PTR [rbp-0x48]
  40847e:	mov    rsi,QWORD PTR [rbp-0x40]
  408482:	mov    rax,QWORD PTR [rbp-0x38]
  408486:	mov    ecx,0x17
  40848b:	mov    rdi,rax
  40848e:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  408493:	jmp    4084ed <_start@@Base+0x225d>
  408495:	mov    rdi,QWORD PTR [rbp-0x20]
  408499:	mov    ecx,DWORD PTR [rbp-0x28]
  40849c:	lea    r8,[rbp-0x2a]
  4084a0:	mov    rdx,QWORD PTR [rbp-0x48]
  4084a4:	mov    rsi,QWORD PTR [rbp-0x40]
  4084a8:	mov    rax,QWORD PTR [rbp-0x38]
  4084ac:	mov    r9,r8
  4084af:	mov    r8,rdi
  4084b2:	mov    rdi,rax
  4084b5:	call   4071c2 <_start@@Base+0xf32>
  4084ba:	cmp    QWORD PTR [rbp-0x48],rax
  4084be:	jne    4084c6 <_start@@Base+0x2236>
  4084c0:	mov    rax,QWORD PTR [rbp-0x48]
  4084c4:	jmp    4084ed <_start@@Base+0x225d>
  4084c6:	mov    rax,QWORD PTR [rbp-0x58]
  4084ca:	movzx  eax,WORD PTR [rax]
  4084cd:	mov    edx,eax
  4084cf:	movzx  eax,WORD PTR [rbp-0x2a]
  4084d3:	add    eax,edx
  4084d5:	mov    edx,eax
  4084d7:	mov    rax,QWORD PTR [rbp-0x58]
  4084db:	mov    WORD PTR [rax],dx
  4084de:	mov    eax,DWORD PTR [rbp-0x24]
  4084e1:	test   eax,eax
  4084e3:	jne    40840d <_start@@Base+0x217d>
  4084e9:	mov    rax,QWORD PTR [rbp-0x40]
  4084ed:	mov    rdi,QWORD PTR [rbp-0x8]
  4084f1:	xor    rdi,QWORD PTR fs:0x28
  4084fa:	je     408501 <_start@@Base+0x2271>
  4084fc:	call   4061a0 <__stack_chk_fail@plt>
  408501:	leave  
  408502:	ret    
  408503:	endbr64 
  408507:	push   rbp
  408508:	mov    rbp,rsp
  40850b:	sub    rsp,0x60
  40850f:	mov    QWORD PTR [rbp-0x38],rdi
  408513:	mov    QWORD PTR [rbp-0x40],rsi
  408517:	mov    QWORD PTR [rbp-0x48],rdx
  40851b:	mov    QWORD PTR [rbp-0x50],rcx
  40851f:	mov    QWORD PTR [rbp-0x58],r8
  408523:	mov    rax,QWORD PTR fs:0x28
  40852c:	mov    QWORD PTR [rbp-0x8],rax
  408530:	xor    eax,eax
  408532:	mov    BYTE PTR [rbp-0x29],0x0
  408536:	mov    rax,QWORD PTR [rbp-0x58]
  40853a:	mov    BYTE PTR [rax],0x0
  40853d:	mov    rdx,QWORD PTR [rbp-0x48]
  408541:	mov    rcx,QWORD PTR [rbp-0x40]
  408545:	mov    rax,QWORD PTR [rbp-0x38]
  408549:	mov    rsi,rcx
  40854c:	mov    rdi,rax
  40854f:	call   40691c <_start@@Base+0x68c>
  408554:	mov    QWORD PTR [rbp-0x40],rax
  408558:	mov    rax,QWORD PTR [rbp-0x40]
  40855c:	cmp    rax,QWORD PTR [rbp-0x48]
  408560:	jne    40856b <_start@@Base+0x22db>
  408562:	mov    rax,QWORD PTR [rbp-0x40]
  408566:	jmp    40864a <_start@@Base+0x23ba>
  40856b:	mov    rax,QWORD PTR [rbp-0x50]
  40856f:	mov    QWORD PTR [rbp-0x18],rax
  408573:	mov    rax,QWORD PTR [rbp-0x18]
  408577:	mov    rax,QWORD PTR [rax]
  40857a:	mov    rdx,QWORD PTR [rbp-0x40]
  40857e:	mov    QWORD PTR [rbp-0x10],rdx
  408582:	lea    r9,[rbp-0x24]
  408586:	lea    r8,[rbp-0x20]
  40858a:	lea    rcx,[rbp-0x28]
  40858e:	mov    rdx,QWORD PTR [rbp-0x48]
  408592:	mov    rsi,QWORD PTR [rbp-0x10]
  408596:	mov    rdi,QWORD PTR [rbp-0x38]
  40859a:	call   rax
  40859c:	mov    QWORD PTR [rbp-0x40],rax
  4085a0:	mov    rax,QWORD PTR [rbp-0x40]
  4085a4:	cmp    rax,QWORD PTR [rbp-0x48]
  4085a8:	jne    4085b3 <_start@@Base+0x2323>
  4085aa:	mov    rax,QWORD PTR [rbp-0x40]
  4085ae:	jmp    40864a <_start@@Base+0x23ba>
  4085b3:	mov    rax,QWORD PTR [rbp-0x40]
  4085b7:	cmp    rax,QWORD PTR [rbp-0x10]
  4085bb:	jne    4085ce <_start@@Base+0x233e>
  4085bd:	add    QWORD PTR [rbp-0x18],0x8
  4085c2:	mov    rax,QWORD PTR [rbp-0x18]
  4085c6:	mov    rax,QWORD PTR [rax]
  4085c9:	test   rax,rax
  4085cc:	jne    408573 <_start@@Base+0x22e3>
  4085ce:	mov    rax,QWORD PTR [rbp-0x10]
  4085d2:	cmp    rax,QWORD PTR [rbp-0x40]
  4085d6:	jne    4085f3 <_start@@Base+0x2363>
  4085d8:	mov    rdx,QWORD PTR [rbp-0x48]
  4085dc:	mov    rsi,QWORD PTR [rbp-0x40]
  4085e0:	mov    rax,QWORD PTR [rbp-0x38]
  4085e4:	mov    ecx,0x17
  4085e9:	mov    rdi,rax
  4085ec:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4085f1:	jmp    40864a <_start@@Base+0x23ba>
  4085f3:	mov    rdi,QWORD PTR [rbp-0x20]
  4085f7:	mov    ecx,DWORD PTR [rbp-0x28]
  4085fa:	lea    r8,[rbp-0x29]
  4085fe:	mov    rdx,QWORD PTR [rbp-0x48]
  408602:	mov    rsi,QWORD PTR [rbp-0x40]
  408606:	mov    rax,QWORD PTR [rbp-0x38]
  40860a:	mov    r9,r8
  40860d:	mov    r8,rdi
  408610:	mov    rdi,rax
  408613:	call   407255 <_start@@Base+0xfc5>
  408618:	cmp    QWORD PTR [rbp-0x48],rax
  40861c:	jne    408624 <_start@@Base+0x2394>
  40861e:	mov    rax,QWORD PTR [rbp-0x48]
  408622:	jmp    40864a <_start@@Base+0x23ba>
  408624:	mov    rax,QWORD PTR [rbp-0x58]
  408628:	movzx  eax,BYTE PTR [rax]
  40862b:	mov    edx,eax
  40862d:	movzx  eax,BYTE PTR [rbp-0x29]
  408631:	add    eax,edx
  408633:	mov    edx,eax
  408635:	mov    rax,QWORD PTR [rbp-0x58]
  408639:	mov    BYTE PTR [rax],dl
  40863b:	mov    eax,DWORD PTR [rbp-0x24]
  40863e:	test   eax,eax
  408640:	jne    40856b <_start@@Base+0x22db>
  408646:	mov    rax,QWORD PTR [rbp-0x40]
  40864a:	mov    rdi,QWORD PTR [rbp-0x8]
  40864e:	xor    rdi,QWORD PTR fs:0x28
  408657:	je     40865e <_start@@Base+0x23ce>
  408659:	call   4061a0 <__stack_chk_fail@plt>
  40865e:	leave  
  40865f:	ret    
  408660:	endbr64 
  408664:	push   rbp
  408665:	mov    rbp,rsp
  408668:	sub    rsp,0x60
  40866c:	mov    QWORD PTR [rbp-0x38],rdi
  408670:	mov    QWORD PTR [rbp-0x40],rsi
  408674:	mov    QWORD PTR [rbp-0x48],rdx
  408678:	mov    QWORD PTR [rbp-0x50],rcx
  40867c:	mov    QWORD PTR [rbp-0x58],r8
  408680:	mov    rax,QWORD PTR fs:0x28
  408689:	mov    QWORD PTR [rbp-0x8],rax
  40868d:	xor    eax,eax
  40868f:	mov    BYTE PTR [rbp-0x29],0x0
  408693:	mov    rax,QWORD PTR [rbp-0x58]
  408697:	mov    BYTE PTR [rax],0x0
  40869a:	mov    rdx,QWORD PTR [rbp-0x48]
  40869e:	mov    rcx,QWORD PTR [rbp-0x40]
  4086a2:	mov    rax,QWORD PTR [rbp-0x38]
  4086a6:	mov    rsi,rcx
  4086a9:	mov    rdi,rax
  4086ac:	call   40691c <_start@@Base+0x68c>
  4086b1:	mov    QWORD PTR [rbp-0x40],rax
  4086b5:	mov    rax,QWORD PTR [rbp-0x40]
  4086b9:	cmp    rax,QWORD PTR [rbp-0x48]
  4086bd:	jne    4086c8 <_start@@Base+0x2438>
  4086bf:	mov    rax,QWORD PTR [rbp-0x40]
  4086c3:	jmp    4087a3 <_start@@Base+0x2513>
  4086c8:	mov    rax,QWORD PTR [rbp-0x50]
  4086cc:	mov    QWORD PTR [rbp-0x18],rax
  4086d0:	mov    rax,QWORD PTR [rbp-0x18]
  4086d4:	mov    rax,QWORD PTR [rax]
  4086d7:	mov    rdx,QWORD PTR [rbp-0x40]
  4086db:	mov    QWORD PTR [rbp-0x10],rdx
  4086df:	lea    r9,[rbp-0x24]
  4086e3:	lea    r8,[rbp-0x20]
  4086e7:	lea    rcx,[rbp-0x28]
  4086eb:	mov    rdx,QWORD PTR [rbp-0x48]
  4086ef:	mov    rsi,QWORD PTR [rbp-0x10]
  4086f3:	mov    rdi,QWORD PTR [rbp-0x38]
  4086f7:	call   rax
  4086f9:	mov    QWORD PTR [rbp-0x40],rax
  4086fd:	mov    rax,QWORD PTR [rbp-0x40]
  408701:	cmp    rax,QWORD PTR [rbp-0x48]
  408705:	jne    408710 <_start@@Base+0x2480>
  408707:	mov    rax,QWORD PTR [rbp-0x40]
  40870b:	jmp    4087a3 <_start@@Base+0x2513>
  408710:	mov    rax,QWORD PTR [rbp-0x40]
  408714:	cmp    rax,QWORD PTR [rbp-0x10]
  408718:	jne    40872b <_start@@Base+0x249b>
  40871a:	add    QWORD PTR [rbp-0x18],0x8
  40871f:	mov    rax,QWORD PTR [rbp-0x18]
  408723:	mov    rax,QWORD PTR [rax]
  408726:	test   rax,rax
  408729:	jne    4086d0 <_start@@Base+0x2440>
  40872b:	mov    rax,QWORD PTR [rbp-0x10]
  40872f:	cmp    rax,QWORD PTR [rbp-0x40]
  408733:	jne    408750 <_start@@Base+0x24c0>
  408735:	mov    rdx,QWORD PTR [rbp-0x48]
  408739:	mov    rsi,QWORD PTR [rbp-0x40]
  40873d:	mov    rax,QWORD PTR [rbp-0x38]
  408741:	mov    ecx,0x17
  408746:	mov    rdi,rax
  408749:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40874e:	jmp    4087a3 <_start@@Base+0x2513>
  408750:	mov    rdi,QWORD PTR [rbp-0x20]
  408754:	mov    ecx,DWORD PTR [rbp-0x28]
  408757:	lea    r8,[rbp-0x29]
  40875b:	mov    rdx,QWORD PTR [rbp-0x48]
  40875f:	mov    rsi,QWORD PTR [rbp-0x40]
  408763:	mov    rax,QWORD PTR [rbp-0x38]
  408767:	mov    r9,r8
  40876a:	mov    r8,rdi
  40876d:	mov    rdi,rax
  408770:	call   406edb <_start@@Base+0xc4b>
  408775:	cmp    QWORD PTR [rbp-0x48],rax
  408779:	jne    408781 <_start@@Base+0x24f1>
  40877b:	mov    rax,QWORD PTR [rbp-0x48]
  40877f:	jmp    4087a3 <_start@@Base+0x2513>
  408781:	mov    rax,QWORD PTR [rbp-0x58]
  408785:	movzx  edx,BYTE PTR [rax]
  408788:	movzx  eax,BYTE PTR [rbp-0x29]
  40878c:	add    eax,edx
  40878e:	mov    rdx,QWORD PTR [rbp-0x58]
  408792:	mov    BYTE PTR [rdx],al
  408794:	mov    eax,DWORD PTR [rbp-0x24]
  408797:	test   eax,eax
  408799:	jne    4086c8 <_start@@Base+0x2438>
  40879f:	mov    rax,QWORD PTR [rbp-0x40]
  4087a3:	mov    rdi,QWORD PTR [rbp-0x8]
  4087a7:	xor    rdi,QWORD PTR fs:0x28
  4087b0:	je     4087b7 <_start@@Base+0x2527>
  4087b2:	call   4061a0 <__stack_chk_fail@plt>
  4087b7:	leave  
  4087b8:	ret    
  4087b9:	endbr64 
  4087bd:	push   rbp
  4087be:	mov    rbp,rsp
  4087c1:	sub    rsp,0x60
  4087c5:	mov    QWORD PTR [rbp-0x38],rdi
  4087c9:	mov    QWORD PTR [rbp-0x40],rsi
  4087cd:	mov    QWORD PTR [rbp-0x48],rdx
  4087d1:	mov    QWORD PTR [rbp-0x50],rcx
  4087d5:	mov    QWORD PTR [rbp-0x58],r8
  4087d9:	mov    rax,QWORD PTR fs:0x28
  4087e2:	mov    QWORD PTR [rbp-0x8],rax
  4087e6:	xor    eax,eax
  4087e8:	vxorps xmm0,xmm0,xmm0
  4087ec:	vmovss DWORD PTR [rbp-0x2c],xmm0
  4087f1:	mov    rax,QWORD PTR [rbp-0x58]
  4087f5:	vxorps xmm0,xmm0,xmm0
  4087f9:	vmovss DWORD PTR [rax],xmm0
  4087fd:	mov    rdx,QWORD PTR [rbp-0x48]
  408801:	mov    rcx,QWORD PTR [rbp-0x40]
  408805:	mov    rax,QWORD PTR [rbp-0x38]
  408809:	mov    rsi,rcx
  40880c:	mov    rdi,rax
  40880f:	call   40691c <_start@@Base+0x68c>
  408814:	mov    QWORD PTR [rbp-0x40],rax
  408818:	mov    rax,QWORD PTR [rbp-0x40]
  40881c:	cmp    rax,QWORD PTR [rbp-0x48]
  408820:	jne    40882b <_start@@Base+0x259b>
  408822:	mov    rax,QWORD PTR [rbp-0x40]
  408826:	jmp    40890c <_start@@Base+0x267c>
  40882b:	mov    rax,QWORD PTR [rbp-0x50]
  40882f:	mov    QWORD PTR [rbp-0x18],rax
  408833:	mov    rax,QWORD PTR [rbp-0x18]
  408837:	mov    rax,QWORD PTR [rax]
  40883a:	mov    rdx,QWORD PTR [rbp-0x40]
  40883e:	mov    QWORD PTR [rbp-0x10],rdx
  408842:	lea    r9,[rbp-0x24]
  408846:	lea    r8,[rbp-0x20]
  40884a:	lea    rcx,[rbp-0x28]
  40884e:	mov    rdx,QWORD PTR [rbp-0x48]
  408852:	mov    rsi,QWORD PTR [rbp-0x10]
  408856:	mov    rdi,QWORD PTR [rbp-0x38]
  40885a:	call   rax
  40885c:	mov    QWORD PTR [rbp-0x40],rax
  408860:	mov    rax,QWORD PTR [rbp-0x40]
  408864:	cmp    rax,QWORD PTR [rbp-0x48]
  408868:	jne    408873 <_start@@Base+0x25e3>
  40886a:	mov    rax,QWORD PTR [rbp-0x40]
  40886e:	jmp    40890c <_start@@Base+0x267c>
  408873:	mov    rax,QWORD PTR [rbp-0x40]
  408877:	cmp    rax,QWORD PTR [rbp-0x10]
  40887b:	jne    40888e <_start@@Base+0x25fe>
  40887d:	add    QWORD PTR [rbp-0x18],0x8
  408882:	mov    rax,QWORD PTR [rbp-0x18]
  408886:	mov    rax,QWORD PTR [rax]
  408889:	test   rax,rax
  40888c:	jne    408833 <_start@@Base+0x25a3>
  40888e:	mov    rax,QWORD PTR [rbp-0x10]
  408892:	cmp    rax,QWORD PTR [rbp-0x40]
  408896:	jne    4088b3 <_start@@Base+0x2623>
  408898:	mov    rdx,QWORD PTR [rbp-0x48]
  40889c:	mov    rsi,QWORD PTR [rbp-0x40]
  4088a0:	mov    rax,QWORD PTR [rbp-0x38]
  4088a4:	mov    ecx,0x17
  4088a9:	mov    rdi,rax
  4088ac:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4088b1:	jmp    40890c <_start@@Base+0x267c>
  4088b3:	mov    rdi,QWORD PTR [rbp-0x20]
  4088b7:	mov    ecx,DWORD PTR [rbp-0x28]
  4088ba:	lea    r8,[rbp-0x2c]
  4088be:	mov    rdx,QWORD PTR [rbp-0x48]
  4088c2:	mov    rsi,QWORD PTR [rbp-0x40]
  4088c6:	mov    rax,QWORD PTR [rbp-0x38]
  4088ca:	mov    r9,r8
  4088cd:	mov    r8,rdi
  4088d0:	mov    rdi,rax
  4088d3:	call   4072e3 <_start@@Base+0x1053>
  4088d8:	cmp    QWORD PTR [rbp-0x48],rax
  4088dc:	jne    4088e4 <_start@@Base+0x2654>
  4088de:	mov    rax,QWORD PTR [rbp-0x48]
  4088e2:	jmp    40890c <_start@@Base+0x267c>
  4088e4:	mov    rax,QWORD PTR [rbp-0x58]
  4088e8:	vmovss xmm1,DWORD PTR [rax]
  4088ec:	vmovss xmm0,DWORD PTR [rbp-0x2c]
  4088f1:	vaddss xmm0,xmm1,xmm0
  4088f5:	mov    rax,QWORD PTR [rbp-0x58]
  4088f9:	vmovss DWORD PTR [rax],xmm0
  4088fd:	mov    eax,DWORD PTR [rbp-0x24]
  408900:	test   eax,eax
  408902:	jne    40882b <_start@@Base+0x259b>
  408908:	mov    rax,QWORD PTR [rbp-0x40]
  40890c:	mov    rdi,QWORD PTR [rbp-0x8]
  408910:	xor    rdi,QWORD PTR fs:0x28
  408919:	je     408920 <_start@@Base+0x2690>
  40891b:	call   4061a0 <__stack_chk_fail@plt>
  408920:	leave  
  408921:	ret    
  408922:	endbr64 
  408926:	push   rbp
  408927:	mov    rbp,rsp
  40892a:	sub    rsp,0x60
  40892e:	mov    QWORD PTR [rbp-0x38],rdi
  408932:	mov    QWORD PTR [rbp-0x40],rsi
  408936:	mov    QWORD PTR [rbp-0x48],rdx
  40893a:	mov    QWORD PTR [rbp-0x50],rcx
  40893e:	mov    QWORD PTR [rbp-0x58],r8
  408942:	mov    rax,QWORD PTR fs:0x28
  40894b:	mov    QWORD PTR [rbp-0x8],rax
  40894f:	xor    eax,eax
  408951:	vxorpd xmm0,xmm0,xmm0
  408955:	vmovsd QWORD PTR [rbp-0x28],xmm0
  40895a:	mov    rax,QWORD PTR [rbp-0x58]
  40895e:	vxorpd xmm0,xmm0,xmm0
  408962:	vmovsd QWORD PTR [rax],xmm0
  408966:	mov    rdx,QWORD PTR [rbp-0x48]
  40896a:	mov    rcx,QWORD PTR [rbp-0x40]
  40896e:	mov    rax,QWORD PTR [rbp-0x38]
  408972:	mov    rsi,rcx
  408975:	mov    rdi,rax
  408978:	call   40691c <_start@@Base+0x68c>
  40897d:	mov    QWORD PTR [rbp-0x40],rax
  408981:	mov    rax,QWORD PTR [rbp-0x40]
  408985:	cmp    rax,QWORD PTR [rbp-0x48]
  408989:	jne    408994 <_start@@Base+0x2704>
  40898b:	mov    rax,QWORD PTR [rbp-0x40]
  40898f:	jmp    408a75 <_start@@Base+0x27e5>
  408994:	mov    rax,QWORD PTR [rbp-0x50]
  408998:	mov    QWORD PTR [rbp-0x18],rax
  40899c:	mov    rax,QWORD PTR [rbp-0x18]
  4089a0:	mov    rax,QWORD PTR [rax]
  4089a3:	mov    rdx,QWORD PTR [rbp-0x40]
  4089a7:	mov    QWORD PTR [rbp-0x10],rdx
  4089ab:	lea    r9,[rbp-0x2c]
  4089af:	lea    r8,[rbp-0x20]
  4089b3:	lea    rcx,[rbp-0x30]
  4089b7:	mov    rdx,QWORD PTR [rbp-0x48]
  4089bb:	mov    rsi,QWORD PTR [rbp-0x10]
  4089bf:	mov    rdi,QWORD PTR [rbp-0x38]
  4089c3:	call   rax
  4089c5:	mov    QWORD PTR [rbp-0x40],rax
  4089c9:	mov    rax,QWORD PTR [rbp-0x40]
  4089cd:	cmp    rax,QWORD PTR [rbp-0x48]
  4089d1:	jne    4089dc <_start@@Base+0x274c>
  4089d3:	mov    rax,QWORD PTR [rbp-0x40]
  4089d7:	jmp    408a75 <_start@@Base+0x27e5>
  4089dc:	mov    rax,QWORD PTR [rbp-0x40]
  4089e0:	cmp    rax,QWORD PTR [rbp-0x10]
  4089e4:	jne    4089f7 <_start@@Base+0x2767>
  4089e6:	add    QWORD PTR [rbp-0x18],0x8
  4089eb:	mov    rax,QWORD PTR [rbp-0x18]
  4089ef:	mov    rax,QWORD PTR [rax]
  4089f2:	test   rax,rax
  4089f5:	jne    40899c <_start@@Base+0x270c>
  4089f7:	mov    rax,QWORD PTR [rbp-0x10]
  4089fb:	cmp    rax,QWORD PTR [rbp-0x40]
  4089ff:	jne    408a1c <_start@@Base+0x278c>
  408a01:	mov    rdx,QWORD PTR [rbp-0x48]
  408a05:	mov    rsi,QWORD PTR [rbp-0x40]
  408a09:	mov    rax,QWORD PTR [rbp-0x38]
  408a0d:	mov    ecx,0x17
  408a12:	mov    rdi,rax
  408a15:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  408a1a:	jmp    408a75 <_start@@Base+0x27e5>
  408a1c:	mov    rdi,QWORD PTR [rbp-0x20]
  408a20:	mov    ecx,DWORD PTR [rbp-0x30]
  408a23:	lea    r8,[rbp-0x28]
  408a27:	mov    rdx,QWORD PTR [rbp-0x48]
  408a2b:	mov    rsi,QWORD PTR [rbp-0x40]
  408a2f:	mov    rax,QWORD PTR [rbp-0x38]
  408a33:	mov    r9,r8
  408a36:	mov    r8,rdi
  408a39:	mov    rdi,rax
  408a3c:	call   40736a <_start@@Base+0x10da>
  408a41:	cmp    QWORD PTR [rbp-0x48],rax
  408a45:	jne    408a4d <_start@@Base+0x27bd>
  408a47:	mov    rax,QWORD PTR [rbp-0x48]
  408a4b:	jmp    408a75 <_start@@Base+0x27e5>
  408a4d:	mov    rax,QWORD PTR [rbp-0x58]
  408a51:	vmovsd xmm1,QWORD PTR [rax]
  408a55:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  408a5a:	vaddsd xmm0,xmm1,xmm0
  408a5e:	mov    rax,QWORD PTR [rbp-0x58]
  408a62:	vmovsd QWORD PTR [rax],xmm0
  408a66:	mov    eax,DWORD PTR [rbp-0x2c]
  408a69:	test   eax,eax
  408a6b:	jne    408994 <_start@@Base+0x2704>
  408a71:	mov    rax,QWORD PTR [rbp-0x40]
  408a75:	mov    rdi,QWORD PTR [rbp-0x8]
  408a79:	xor    rdi,QWORD PTR fs:0x28
  408a82:	je     408a89 <_start@@Base+0x27f9>
  408a84:	call   4061a0 <__stack_chk_fail@plt>
  408a89:	leave  
  408a8a:	ret    
  408a8b:	endbr64 
  408a8f:	push   rbp
  408a90:	mov    rbp,rsp
  408a93:	sub    rsp,0x50
  408a97:	mov    QWORD PTR [rbp-0x28],rdi
  408a9b:	mov    QWORD PTR [rbp-0x30],rsi
  408a9f:	mov    QWORD PTR [rbp-0x38],rdx
  408aa3:	mov    QWORD PTR [rbp-0x40],rcx
  408aa7:	mov    QWORD PTR [rbp-0x48],r8
  408aab:	mov    QWORD PTR [rbp-0x50],r9
  408aaf:	mov    rax,QWORD PTR [rbp-0x30]
  408ab3:	mov    QWORD PTR [rbp-0x18],rax
  408ab7:	mov    rdx,QWORD PTR [rbp-0x38]
  408abb:	mov    rax,QWORD PTR [rbp-0x30]
  408abf:	mov    rsi,rdx
  408ac2:	mov    rdi,rax
  408ac5:	call   406876 <_start@@Base+0x5e6>
  408aca:	mov    QWORD PTR [rbp-0x10],rax
  408ace:	movabs rax,0xffffff0000000000
  408ad8:	and    rax,QWORD PTR [rbp-0x10]
  408adc:	mov    rdx,rax
  408adf:	movabs rax,0x466f6f0000000000
  408ae9:	cmp    rdx,rax
  408aec:	jne    408b3e <_start@@Base+0x28ae>
  408aee:	mov    rax,QWORD PTR [rbp-0x30]
  408af2:	mov    QWORD PTR [rbp-0x8],rax
  408af6:	mov    rcx,QWORD PTR [rbp-0x50]
  408afa:	mov    rdx,QWORD PTR [rbp-0x38]
  408afe:	mov    rsi,QWORD PTR [rbp-0x8]
  408b02:	mov    rax,QWORD PTR [rbp-0x28]
  408b06:	mov    r8,rcx
  408b09:	mov    ecx,0x3
  408b0e:	mov    rdi,rax
  408b11:	call   4285be <flatcc_json_parser_match_constant@@Base>
  408b16:	mov    QWORD PTR [rbp-0x30],rax
  408b1a:	mov    rax,QWORD PTR [rbp-0x30]
  408b1e:	cmp    rax,QWORD PTR [rbp-0x8]
  408b22:	je     408b41 <_start@@Base+0x28b1>
  408b24:	mov    rax,QWORD PTR [rbp-0x48]
  408b28:	mov    QWORD PTR [rax],0x11
  408b2f:	mov    rax,QWORD PTR [rbp-0x40]
  408b33:	mov    DWORD PTR [rax],0x0
  408b39:	jmp    408bf1 <_start@@Base+0x2961>
  408b3e:	nop
  408b3f:	jmp    408b42 <_start@@Base+0x28b2>
  408b41:	nop
  408b42:	movabs rax,0x496e636c75646556
  408b4c:	cmp    QWORD PTR [rbp-0x10],rax
  408b50:	jne    408beb <_start@@Base+0x295b>
  408b56:	add    QWORD PTR [rbp-0x30],0x8
  408b5b:	mov    rdx,QWORD PTR [rbp-0x38]
  408b5f:	mov    rax,QWORD PTR [rbp-0x30]
  408b63:	mov    rsi,rdx
  408b66:	mov    rdi,rax
  408b69:	call   406876 <_start@@Base+0x5e6>
  408b6e:	mov    QWORD PTR [rbp-0x10],rax
  408b72:	movabs rax,0xffff000000000000
  408b7c:	and    rax,QWORD PTR [rbp-0x10]
  408b80:	mov    rdx,rax
  408b83:	movabs rax,0x616c000000000000
  408b8d:	cmp    rdx,rax
  408b90:	jne    408be5 <_start@@Base+0x2955>
  408b92:	mov    rax,QWORD PTR [rbp-0x30]
  408b96:	mov    QWORD PTR [rbp-0x8],rax
  408b9a:	mov    rcx,QWORD PTR [rbp-0x50]
  408b9e:	mov    rdx,QWORD PTR [rbp-0x38]
  408ba2:	mov    rsi,QWORD PTR [rbp-0x8]
  408ba6:	mov    rax,QWORD PTR [rbp-0x28]
  408baa:	mov    r8,rcx
  408bad:	mov    ecx,0x2
  408bb2:	mov    rdi,rax
  408bb5:	call   4285be <flatcc_json_parser_match_constant@@Base>
  408bba:	mov    QWORD PTR [rbp-0x30],rax
  408bbe:	mov    rax,QWORD PTR [rbp-0x30]
  408bc2:	cmp    rax,QWORD PTR [rbp-0x8]
  408bc6:	je     408bdf <_start@@Base+0x294f>
  408bc8:	mov    rax,QWORD PTR [rbp-0x48]
  408bcc:	mov    QWORD PTR [rax],0x0
  408bd3:	mov    rax,QWORD PTR [rbp-0x40]
  408bd7:	mov    DWORD PTR [rax],0x0
  408bdd:	jmp    408bf1 <_start@@Base+0x2961>
  408bdf:	mov    rax,QWORD PTR [rbp-0x18]
  408be3:	jmp    408bf5 <_start@@Base+0x2965>
  408be5:	mov    rax,QWORD PTR [rbp-0x18]
  408be9:	jmp    408bf5 <_start@@Base+0x2965>
  408beb:	mov    rax,QWORD PTR [rbp-0x18]
  408bef:	jmp    408bf5 <_start@@Base+0x2965>
  408bf1:	mov    rax,QWORD PTR [rbp-0x30]
  408bf5:	leave  
  408bf6:	ret    
  408bf7:	endbr64 
  408bfb:	push   rbp
  408bfc:	mov    rbp,rsp
  408bff:	sub    rsp,0x30
  408c03:	mov    QWORD PTR [rbp-0x18],rdi
  408c07:	mov    QWORD PTR [rbp-0x20],rsi
  408c0b:	mov    QWORD PTR [rbp-0x28],rdx
  408c0f:	mov    QWORD PTR [rbp-0x30],rcx
  408c13:	mov    rax,QWORD PTR fs:0x28
  408c1c:	mov    QWORD PTR [rbp-0x8],rax
  408c20:	xor    eax,eax
  408c22:	lea    rcx,[rbp-0xc]
  408c26:	mov    rdx,QWORD PTR [rbp-0x28]
  408c2a:	mov    rsi,QWORD PTR [rbp-0x20]
  408c2e:	mov    rax,QWORD PTR [rbp-0x18]
  408c32:	mov    rdi,rax
  408c35:	call   406977 <_start@@Base+0x6e7>
  408c3a:	mov    QWORD PTR [rbp-0x20],rax
  408c3e:	jmp    408c77 <_start@@Base+0x29e7>
  408c40:	mov    rdx,QWORD PTR [rbp-0x28]
  408c44:	mov    rcx,QWORD PTR [rbp-0x20]
  408c48:	mov    rax,QWORD PTR [rbp-0x18]
  408c4c:	mov    rsi,rcx
  408c4f:	mov    rdi,rax
  408c52:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  408c57:	mov    QWORD PTR [rbp-0x20],rax
  408c5b:	lea    rcx,[rbp-0xc]
  408c5f:	mov    rdx,QWORD PTR [rbp-0x28]
  408c63:	mov    rsi,QWORD PTR [rbp-0x20]
  408c67:	mov    rax,QWORD PTR [rbp-0x18]
  408c6b:	mov    rdi,rax
  408c6e:	call   406a34 <_start@@Base+0x7a4>
  408c73:	mov    QWORD PTR [rbp-0x20],rax
  408c77:	mov    eax,DWORD PTR [rbp-0xc]
  408c7a:	test   eax,eax
  408c7c:	jne    408c40 <_start@@Base+0x29b0>
  408c7e:	mov    rax,QWORD PTR [rbp-0x20]
  408c82:	mov    rdi,QWORD PTR [rbp-0x8]
  408c86:	xor    rdi,QWORD PTR fs:0x28
  408c8f:	je     408c96 <_start@@Base+0x2a06>
  408c91:	call   4061a0 <__stack_chk_fail@plt>
  408c96:	leave  
  408c97:	ret    
  408c98:	endbr64 
  408c9c:	push   rbp
  408c9d:	mov    rbp,rsp
  408ca0:	sub    rsp,0x30
  408ca4:	mov    QWORD PTR [rbp-0x18],rdi
  408ca8:	mov    QWORD PTR [rbp-0x20],rsi
  408cac:	mov    QWORD PTR [rbp-0x28],rdx
  408cb0:	mov    QWORD PTR [rbp-0x30],rcx
  408cb4:	mov    rax,QWORD PTR [rbp-0x30]
  408cb8:	mov    DWORD PTR [rax],0x0
  408cbe:	mov    rax,QWORD PTR [rbp-0x18]
  408cc2:	mov    rax,QWORD PTR [rax]
  408cc5:	mov    edx,0x1
  408cca:	mov    esi,0x0
  408ccf:	mov    rdi,rax
  408cd2:	call   41e209 <flatcc_builder_start_struct@@Base>
  408cd7:	mov    QWORD PTR [rbp-0x8],rax
  408cdb:	cmp    QWORD PTR [rbp-0x8],0x0
  408ce0:	je     408d2f <_start@@Base+0x2a9f>
  408ce2:	mov    rcx,QWORD PTR [rbp-0x8]
  408ce6:	mov    rdx,QWORD PTR [rbp-0x28]
  408cea:	mov    rsi,QWORD PTR [rbp-0x20]
  408cee:	mov    rax,QWORD PTR [rbp-0x18]
  408cf2:	mov    rdi,rax
  408cf5:	call   408bf7 <_start@@Base+0x2967>
  408cfa:	mov    QWORD PTR [rbp-0x20],rax
  408cfe:	mov    rax,QWORD PTR [rbp-0x20]
  408d02:	cmp    rax,QWORD PTR [rbp-0x28]
  408d06:	je     408d32 <_start@@Base+0x2aa2>
  408d08:	mov    rax,QWORD PTR [rbp-0x18]
  408d0c:	mov    rax,QWORD PTR [rax]
  408d0f:	mov    rdi,rax
  408d12:	call   41e28b <flatcc_builder_end_struct@@Base>
  408d17:	mov    edx,eax
  408d19:	mov    rax,QWORD PTR [rbp-0x30]
  408d1d:	mov    DWORD PTR [rax],edx
  408d1f:	mov    rax,QWORD PTR [rbp-0x30]
  408d23:	mov    eax,DWORD PTR [rax]
  408d25:	test   eax,eax
  408d27:	je     408d32 <_start@@Base+0x2aa2>
  408d29:	mov    rax,QWORD PTR [rbp-0x20]
  408d2d:	jmp    408d4c <_start@@Base+0x2abc>
  408d2f:	nop
  408d30:	jmp    408d33 <_start@@Base+0x2aa3>
  408d32:	nop
  408d33:	mov    rdx,QWORD PTR [rbp-0x28]
  408d37:	mov    rsi,QWORD PTR [rbp-0x20]
  408d3b:	mov    rax,QWORD PTR [rbp-0x18]
  408d3f:	mov    ecx,0x21
  408d44:	mov    rdi,rax
  408d47:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  408d4c:	leave  
  408d4d:	ret    
  408d4e:	endbr64 
  408d52:	push   rbp
  408d53:	mov    rbp,rsp
  408d56:	mov    QWORD PTR [rbp-0x8],rdi
  408d5a:	mov    QWORD PTR [rbp-0x10],rsi
  408d5e:	mov    QWORD PTR [rbp-0x18],rdx
  408d62:	mov    QWORD PTR [rbp-0x20],rcx
  408d66:	mov    QWORD PTR [rbp-0x28],r8
  408d6a:	mov    QWORD PTR [rbp-0x30],r9
  408d6e:	mov    rax,QWORD PTR [rbp-0x10]
  408d72:	pop    rbp
  408d73:	ret    
  408d74:	endbr64 
  408d78:	push   rbp
  408d79:	mov    rbp,rsp
  408d7c:	mov    QWORD PTR [rbp-0x8],rdi
  408d80:	mov    QWORD PTR [rbp-0x10],rsi
  408d84:	mov    QWORD PTR [rbp-0x18],rdx
  408d88:	mov    QWORD PTR [rbp-0x20],rcx
  408d8c:	mov    QWORD PTR [rbp-0x28],r8
  408d90:	mov    QWORD PTR [rbp-0x30],r9
  408d94:	mov    rax,QWORD PTR [rbp-0x10]
  408d98:	pop    rbp
  408d99:	ret    
  408d9a:	endbr64 
  408d9e:	push   rbp
  408d9f:	mov    rbp,rsp
  408da2:	mov    QWORD PTR [rbp-0x8],rdi
  408da6:	mov    QWORD PTR [rbp-0x10],rsi
  408daa:	mov    QWORD PTR [rbp-0x18],rdx
  408dae:	mov    QWORD PTR [rbp-0x20],rcx
  408db2:	mov    QWORD PTR [rbp-0x28],r8
  408db6:	mov    QWORD PTR [rbp-0x30],r9
  408dba:	mov    rax,QWORD PTR [rbp-0x10]
  408dbe:	pop    rbp
  408dbf:	ret    
  408dc0:	endbr64 
  408dc4:	push   rbp
  408dc5:	mov    rbp,rsp
  408dc8:	mov    QWORD PTR [rbp-0x8],rdi
  408dcc:	mov    QWORD PTR [rbp-0x10],rsi
  408dd0:	mov    QWORD PTR [rbp-0x18],rdx
  408dd4:	mov    QWORD PTR [rbp-0x20],rcx
  408dd8:	mov    QWORD PTR [rbp-0x28],r8
  408ddc:	mov    QWORD PTR [rbp-0x30],r9
  408de0:	mov    rax,QWORD PTR [rbp-0x10]
  408de4:	pop    rbp
  408de5:	ret    
  408de6:	endbr64 
  408dea:	push   rbp
  408deb:	mov    rbp,rsp
  408dee:	mov    QWORD PTR [rbp-0x8],rdi
  408df2:	mov    QWORD PTR [rbp-0x10],rsi
  408df6:	mov    QWORD PTR [rbp-0x18],rdx
  408dfa:	mov    QWORD PTR [rbp-0x20],rcx
  408dfe:	mov    QWORD PTR [rbp-0x28],r8
  408e02:	mov    QWORD PTR [rbp-0x30],r9
  408e06:	mov    rax,QWORD PTR [rbp-0x10]
  408e0a:	pop    rbp
  408e0b:	ret    
  408e0c:	endbr64 
  408e10:	push   rbp
  408e11:	mov    rbp,rsp
  408e14:	sub    rsp,0x50
  408e18:	mov    QWORD PTR [rbp-0x28],rdi
  408e1c:	mov    QWORD PTR [rbp-0x30],rsi
  408e20:	mov    QWORD PTR [rbp-0x38],rdx
  408e24:	mov    QWORD PTR [rbp-0x40],rcx
  408e28:	mov    QWORD PTR [rbp-0x48],r8
  408e2c:	mov    QWORD PTR [rbp-0x50],r9
  408e30:	mov    rax,QWORD PTR [rbp-0x30]
  408e34:	mov    QWORD PTR [rbp-0x18],rax
  408e38:	mov    rdx,QWORD PTR [rbp-0x38]
  408e3c:	mov    rax,QWORD PTR [rbp-0x30]
  408e40:	mov    rsi,rdx
  408e43:	mov    rdi,rax
  408e46:	call   406876 <_start@@Base+0x5e6>
  408e4b:	mov    QWORD PTR [rbp-0x10],rax
  408e4f:	movabs rax,0x46726f6d496e636c
  408e59:	cmp    QWORD PTR [rbp-0x10],rax
  408e5d:	jne    408f0a <_start@@Base+0x2c7a>
  408e63:	add    QWORD PTR [rbp-0x30],0x8
  408e68:	mov    rdx,QWORD PTR [rbp-0x38]
  408e6c:	mov    rax,QWORD PTR [rbp-0x30]
  408e70:	mov    rsi,rdx
  408e73:	mov    rdi,rax
  408e76:	call   406876 <_start@@Base+0x5e6>
  408e7b:	mov    QWORD PTR [rbp-0x10],rax
  408e7f:	movabs rax,0xffffff0000000000
  408e89:	and    rax,QWORD PTR [rbp-0x10]
  408e8d:	mov    rdx,rax
  408e90:	movabs rax,0x7564650000000000
  408e9a:	cmp    rdx,rax
  408e9d:	jne    408f04 <_start@@Base+0x2c74>
  408e9f:	mov    rax,QWORD PTR [rbp-0x30]
  408ea3:	mov    QWORD PTR [rbp-0x8],rax
  408ea7:	mov    rdx,QWORD PTR [rbp-0x38]
  408eab:	mov    rsi,QWORD PTR [rbp-0x8]
  408eaf:	mov    rax,QWORD PTR [rbp-0x28]
  408eb3:	mov    ecx,0x3
  408eb8:	mov    rdi,rax
  408ebb:	call   4068ba <_start@@Base+0x62a>
  408ec0:	mov    QWORD PTR [rbp-0x30],rax
  408ec4:	mov    rax,QWORD PTR [rbp-0x30]
  408ec8:	cmp    rax,QWORD PTR [rbp-0x8]
  408ecc:	je     408efe <_start@@Base+0x2c6e>
  408ece:	mov    r8,QWORD PTR [rbp-0x50]
  408ed2:	mov    rdi,QWORD PTR [rbp-0x48]
  408ed6:	mov    rcx,QWORD PTR [rbp-0x40]
  408eda:	mov    rdx,QWORD PTR [rbp-0x38]
  408ede:	mov    rsi,QWORD PTR [rbp-0x30]
  408ee2:	mov    rax,QWORD PTR [rbp-0x28]
  408ee6:	mov    r9,r8
  408ee9:	mov    r8,rdi
  408eec:	mov    rdi,rax
  408eef:	call   408a8b <_start@@Base+0x27fb>
  408ef4:	mov    QWORD PTR [rbp-0x30],rax
  408ef8:	mov    rax,QWORD PTR [rbp-0x30]
  408efc:	jmp    408f0e <_start@@Base+0x2c7e>
  408efe:	mov    rax,QWORD PTR [rbp-0x18]
  408f02:	jmp    408f0e <_start@@Base+0x2c7e>
  408f04:	mov    rax,QWORD PTR [rbp-0x18]
  408f08:	jmp    408f0e <_start@@Base+0x2c7e>
  408f0a:	mov    rax,QWORD PTR [rbp-0x18]
  408f0e:	leave  
  408f0f:	ret    
  408f10:	endbr64 
  408f14:	push   rbp
  408f15:	mov    rbp,rsp
  408f18:	sub    rsp,0x50
  408f1c:	mov    QWORD PTR [rbp-0x28],rdi
  408f20:	mov    QWORD PTR [rbp-0x30],rsi
  408f24:	mov    QWORD PTR [rbp-0x38],rdx
  408f28:	mov    QWORD PTR [rbp-0x40],rcx
  408f2c:	mov    QWORD PTR [rbp-0x48],r8
  408f30:	mov    QWORD PTR [rbp-0x50],r9
  408f34:	mov    rax,QWORD PTR [rbp-0x30]
  408f38:	mov    QWORD PTR [rbp-0x18],rax
  408f3c:	mov    rdx,QWORD PTR [rbp-0x38]
  408f40:	mov    rax,QWORD PTR [rbp-0x30]
  408f44:	mov    rsi,rdx
  408f47:	mov    rdi,rax
  408f4a:	call   406876 <_start@@Base+0x5e6>
  408f4f:	mov    QWORD PTR [rbp-0x10],rax
  408f53:	movabs rax,0x4d7947616d652e4f
  408f5d:	cmp    QWORD PTR [rbp-0x10],rax
  408f61:	jne    4090b0 <_start@@Base+0x2e20>
  408f67:	add    QWORD PTR [rbp-0x30],0x8
  408f6c:	mov    rdx,QWORD PTR [rbp-0x38]
  408f70:	mov    rax,QWORD PTR [rbp-0x30]
  408f74:	mov    rsi,rdx
  408f77:	mov    rdi,rax
  408f7a:	call   406876 <_start@@Base+0x5e6>
  408f7f:	mov    QWORD PTR [rbp-0x10],rax
  408f83:	movabs rax,0x746865724e616d65
  408f8d:	cmp    QWORD PTR [rbp-0x10],rax
  408f91:	jne    4090aa <_start@@Base+0x2e1a>
  408f97:	add    QWORD PTR [rbp-0x30],0x8
  408f9c:	mov    rdx,QWORD PTR [rbp-0x38]
  408fa0:	mov    rax,QWORD PTR [rbp-0x30]
  408fa4:	mov    rsi,rdx
  408fa7:	mov    rdi,rax
  408faa:	call   406876 <_start@@Base+0x5e6>
  408faf:	mov    QWORD PTR [rbp-0x10],rax
  408fb3:	movabs rax,0x53706163652e4672
  408fbd:	cmp    QWORD PTR [rbp-0x10],rax
  408fc1:	jne    4090a4 <_start@@Base+0x2e14>
  408fc7:	add    QWORD PTR [rbp-0x30],0x8
  408fcc:	mov    rdx,QWORD PTR [rbp-0x38]
  408fd0:	mov    rax,QWORD PTR [rbp-0x30]
  408fd4:	mov    rsi,rdx
  408fd7:	mov    rdi,rax
  408fda:	call   406876 <_start@@Base+0x5e6>
  408fdf:	mov    QWORD PTR [rbp-0x10],rax
  408fe3:	movabs rax,0x6f6d496e636c7564
  408fed:	cmp    QWORD PTR [rbp-0x10],rax
  408ff1:	jne    40909e <_start@@Base+0x2e0e>
  408ff7:	add    QWORD PTR [rbp-0x30],0x8
  408ffc:	mov    rdx,QWORD PTR [rbp-0x38]
  409000:	mov    rax,QWORD PTR [rbp-0x30]
  409004:	mov    rsi,rdx
  409007:	mov    rdi,rax
  40900a:	call   406876 <_start@@Base+0x5e6>
  40900f:	mov    QWORD PTR [rbp-0x10],rax
  409013:	movabs rax,0xff00000000000000
  40901d:	and    rax,QWORD PTR [rbp-0x10]
  409021:	mov    rdx,rax
  409024:	movabs rax,0x6500000000000000
  40902e:	cmp    rdx,rax
  409031:	jne    409098 <_start@@Base+0x2e08>
  409033:	mov    rax,QWORD PTR [rbp-0x30]
  409037:	mov    QWORD PTR [rbp-0x8],rax
  40903b:	mov    rdx,QWORD PTR [rbp-0x38]
  40903f:	mov    rsi,QWORD PTR [rbp-0x8]
  409043:	mov    rax,QWORD PTR [rbp-0x28]
  409047:	mov    ecx,0x1
  40904c:	mov    rdi,rax
  40904f:	call   4068ba <_start@@Base+0x62a>
  409054:	mov    QWORD PTR [rbp-0x30],rax
  409058:	mov    rax,QWORD PTR [rbp-0x30]
  40905c:	cmp    rax,QWORD PTR [rbp-0x8]
  409060:	je     409092 <_start@@Base+0x2e02>
  409062:	mov    r8,QWORD PTR [rbp-0x50]
  409066:	mov    rdi,QWORD PTR [rbp-0x48]
  40906a:	mov    rcx,QWORD PTR [rbp-0x40]
  40906e:	mov    rdx,QWORD PTR [rbp-0x38]
  409072:	mov    rsi,QWORD PTR [rbp-0x30]
  409076:	mov    rax,QWORD PTR [rbp-0x28]
  40907a:	mov    r9,r8
  40907d:	mov    r8,rdi
  409080:	mov    rdi,rax
  409083:	call   408a8b <_start@@Base+0x27fb>
  409088:	mov    QWORD PTR [rbp-0x30],rax
  40908c:	mov    rax,QWORD PTR [rbp-0x30]
  409090:	jmp    4090b4 <_start@@Base+0x2e24>
  409092:	mov    rax,QWORD PTR [rbp-0x18]
  409096:	jmp    4090b4 <_start@@Base+0x2e24>
  409098:	mov    rax,QWORD PTR [rbp-0x18]
  40909c:	jmp    4090b4 <_start@@Base+0x2e24>
  40909e:	mov    rax,QWORD PTR [rbp-0x18]
  4090a2:	jmp    4090b4 <_start@@Base+0x2e24>
  4090a4:	mov    rax,QWORD PTR [rbp-0x18]
  4090a8:	jmp    4090b4 <_start@@Base+0x2e24>
  4090aa:	mov    rax,QWORD PTR [rbp-0x18]
  4090ae:	jmp    4090b4 <_start@@Base+0x2e24>
  4090b0:	mov    rax,QWORD PTR [rbp-0x18]
  4090b4:	leave  
  4090b5:	ret    
  4090b6:	endbr64 
  4090ba:	push   rbp
  4090bb:	mov    rbp,rsp
  4090be:	mov    QWORD PTR [rbp-0x8],rdi
  4090c2:	mov    QWORD PTR [rbp-0x10],rsi
  4090c6:	mov    QWORD PTR [rbp-0x18],rdx
  4090ca:	mov    QWORD PTR [rbp-0x20],rcx
  4090ce:	mov    QWORD PTR [rbp-0x28],r8
  4090d2:	mov    QWORD PTR [rbp-0x30],r9
  4090d6:	mov    rax,QWORD PTR [rbp-0x10]
  4090da:	pop    rbp
  4090db:	ret    
  4090dc:	endbr64 
  4090e0:	push   rbp
  4090e1:	mov    rbp,rsp
  4090e4:	mov    QWORD PTR [rbp-0x8],rdi
  4090e8:	mov    QWORD PTR [rbp-0x10],rsi
  4090ec:	mov    QWORD PTR [rbp-0x18],rdx
  4090f0:	mov    QWORD PTR [rbp-0x20],rcx
  4090f4:	mov    QWORD PTR [rbp-0x28],r8
  4090f8:	mov    QWORD PTR [rbp-0x30],r9
  4090fc:	mov    rax,QWORD PTR [rbp-0x10]
  409100:	pop    rbp
  409101:	ret    
  409102:	endbr64 
  409106:	push   rbp
  409107:	mov    rbp,rsp
  40910a:	mov    QWORD PTR [rbp-0x8],rdi
  40910e:	mov    QWORD PTR [rbp-0x10],rsi
  409112:	mov    QWORD PTR [rbp-0x18],rdx
  409116:	mov    QWORD PTR [rbp-0x20],rcx
  40911a:	mov    QWORD PTR [rbp-0x28],r8
  40911e:	mov    QWORD PTR [rbp-0x30],r9
  409122:	mov    rax,QWORD PTR [rbp-0x10]
  409126:	pop    rbp
  409127:	ret    
  409128:	endbr64 
  40912c:	push   rbp
  40912d:	mov    rbp,rsp
  409130:	mov    QWORD PTR [rbp-0x8],rdi
  409134:	mov    QWORD PTR [rbp-0x10],rsi
  409138:	mov    QWORD PTR [rbp-0x18],rdx
  40913c:	mov    QWORD PTR [rbp-0x20],rcx
  409140:	mov    QWORD PTR [rbp-0x28],r8
  409144:	mov    QWORD PTR [rbp-0x30],r9
  409148:	mov    rax,QWORD PTR [rbp-0x10]
  40914c:	pop    rbp
  40914d:	ret    
  40914e:	endbr64 
  409152:	push   rbp
  409153:	mov    rbp,rsp
  409156:	mov    QWORD PTR [rbp-0x8],rdi
  40915a:	mov    QWORD PTR [rbp-0x10],rsi
  40915e:	mov    QWORD PTR [rbp-0x18],rdx
  409162:	mov    QWORD PTR [rbp-0x20],rcx
  409166:	mov    QWORD PTR [rbp-0x28],r8
  40916a:	mov    QWORD PTR [rbp-0x30],r9
  40916e:	mov    rax,QWORD PTR [rbp-0x10]
  409172:	pop    rbp
  409173:	ret    
  409174:	endbr64 
  409178:	push   rbp
  409179:	mov    rbp,rsp
  40917c:	sub    rsp,0x50
  409180:	mov    QWORD PTR [rbp-0x28],rdi
  409184:	mov    QWORD PTR [rbp-0x30],rsi
  409188:	mov    QWORD PTR [rbp-0x38],rdx
  40918c:	mov    QWORD PTR [rbp-0x40],rcx
  409190:	mov    QWORD PTR [rbp-0x48],r8
  409194:	mov    QWORD PTR [rbp-0x50],r9
  409198:	mov    rax,QWORD PTR [rbp-0x30]
  40919c:	mov    QWORD PTR [rbp-0x18],rax
  4091a0:	mov    rdx,QWORD PTR [rbp-0x38]
  4091a4:	mov    rax,QWORD PTR [rbp-0x30]
  4091a8:	mov    rsi,rdx
  4091ab:	mov    rdi,rax
  4091ae:	call   406876 <_start@@Base+0x5e6>
  4091b3:	mov    QWORD PTR [rbp-0x10],rax
  4091b7:	movabs rax,0x46726f6d496e636c
  4091c1:	cmp    QWORD PTR [rbp-0x10],rax
  4091c5:	jne    409272 <_start@@Base+0x2fe2>
  4091cb:	add    QWORD PTR [rbp-0x30],0x8
  4091d0:	mov    rdx,QWORD PTR [rbp-0x38]
  4091d4:	mov    rax,QWORD PTR [rbp-0x30]
  4091d8:	mov    rsi,rdx
  4091db:	mov    rdi,rax
  4091de:	call   406876 <_start@@Base+0x5e6>
  4091e3:	mov    QWORD PTR [rbp-0x10],rax
  4091e7:	movabs rax,0xffffff0000000000
  4091f1:	and    rax,QWORD PTR [rbp-0x10]
  4091f5:	mov    rdx,rax
  4091f8:	movabs rax,0x7564650000000000
  409202:	cmp    rdx,rax
  409205:	jne    40926c <_start@@Base+0x2fdc>
  409207:	mov    rax,QWORD PTR [rbp-0x30]
  40920b:	mov    QWORD PTR [rbp-0x8],rax
  40920f:	mov    rdx,QWORD PTR [rbp-0x38]
  409213:	mov    rsi,QWORD PTR [rbp-0x8]
  409217:	mov    rax,QWORD PTR [rbp-0x28]
  40921b:	mov    ecx,0x3
  409220:	mov    rdi,rax
  409223:	call   4068ba <_start@@Base+0x62a>
  409228:	mov    QWORD PTR [rbp-0x30],rax
  40922c:	mov    rax,QWORD PTR [rbp-0x30]
  409230:	cmp    rax,QWORD PTR [rbp-0x8]
  409234:	je     409266 <_start@@Base+0x2fd6>
  409236:	mov    r8,QWORD PTR [rbp-0x50]
  40923a:	mov    rdi,QWORD PTR [rbp-0x48]
  40923e:	mov    rcx,QWORD PTR [rbp-0x40]
  409242:	mov    rdx,QWORD PTR [rbp-0x38]
  409246:	mov    rsi,QWORD PTR [rbp-0x30]
  40924a:	mov    rax,QWORD PTR [rbp-0x28]
  40924e:	mov    r9,r8
  409251:	mov    r8,rdi
  409254:	mov    rdi,rax
  409257:	call   408a8b <_start@@Base+0x27fb>
  40925c:	mov    QWORD PTR [rbp-0x30],rax
  409260:	mov    rax,QWORD PTR [rbp-0x30]
  409264:	jmp    409276 <_start@@Base+0x2fe6>
  409266:	mov    rax,QWORD PTR [rbp-0x18]
  40926a:	jmp    409276 <_start@@Base+0x2fe6>
  40926c:	mov    rax,QWORD PTR [rbp-0x18]
  409270:	jmp    409276 <_start@@Base+0x2fe6>
  409272:	mov    rax,QWORD PTR [rbp-0x18]
  409276:	leave  
  409277:	ret    
  409278:	endbr64 
  40927c:	push   rbp
  40927d:	mov    rbp,rsp
  409280:	sub    rsp,0x50
  409284:	mov    QWORD PTR [rbp-0x28],rdi
  409288:	mov    QWORD PTR [rbp-0x30],rsi
  40928c:	mov    QWORD PTR [rbp-0x38],rdx
  409290:	mov    QWORD PTR [rbp-0x40],rcx
  409294:	mov    QWORD PTR [rbp-0x48],r8
  409298:	mov    QWORD PTR [rbp-0x50],r9
  40929c:	mov    rax,QWORD PTR [rbp-0x30]
  4092a0:	mov    QWORD PTR [rbp-0x18],rax
  4092a4:	mov    rdx,QWORD PTR [rbp-0x38]
  4092a8:	mov    rax,QWORD PTR [rbp-0x30]
  4092ac:	mov    rsi,rdx
  4092af:	mov    rdi,rax
  4092b2:	call   406876 <_start@@Base+0x5e6>
  4092b7:	mov    QWORD PTR [rbp-0x10],rax
  4092bb:	movabs rax,0x4d7947616d652e4f
  4092c5:	cmp    QWORD PTR [rbp-0x10],rax
  4092c9:	jne    409418 <_start@@Base+0x3188>
  4092cf:	add    QWORD PTR [rbp-0x30],0x8
  4092d4:	mov    rdx,QWORD PTR [rbp-0x38]
  4092d8:	mov    rax,QWORD PTR [rbp-0x30]
  4092dc:	mov    rsi,rdx
  4092df:	mov    rdi,rax
  4092e2:	call   406876 <_start@@Base+0x5e6>
  4092e7:	mov    QWORD PTR [rbp-0x10],rax
  4092eb:	movabs rax,0x746865724e616d65
  4092f5:	cmp    QWORD PTR [rbp-0x10],rax
  4092f9:	jne    409412 <_start@@Base+0x3182>
  4092ff:	add    QWORD PTR [rbp-0x30],0x8
  409304:	mov    rdx,QWORD PTR [rbp-0x38]
  409308:	mov    rax,QWORD PTR [rbp-0x30]
  40930c:	mov    rsi,rdx
  40930f:	mov    rdi,rax
  409312:	call   406876 <_start@@Base+0x5e6>
  409317:	mov    QWORD PTR [rbp-0x10],rax
  40931b:	movabs rax,0x53706163652e4672
  409325:	cmp    QWORD PTR [rbp-0x10],rax
  409329:	jne    40940c <_start@@Base+0x317c>
  40932f:	add    QWORD PTR [rbp-0x30],0x8
  409334:	mov    rdx,QWORD PTR [rbp-0x38]
  409338:	mov    rax,QWORD PTR [rbp-0x30]
  40933c:	mov    rsi,rdx
  40933f:	mov    rdi,rax
  409342:	call   406876 <_start@@Base+0x5e6>
  409347:	mov    QWORD PTR [rbp-0x10],rax
  40934b:	movabs rax,0x6f6d496e636c7564
  409355:	cmp    QWORD PTR [rbp-0x10],rax
  409359:	jne    409406 <_start@@Base+0x3176>
  40935f:	add    QWORD PTR [rbp-0x30],0x8
  409364:	mov    rdx,QWORD PTR [rbp-0x38]
  409368:	mov    rax,QWORD PTR [rbp-0x30]
  40936c:	mov    rsi,rdx
  40936f:	mov    rdi,rax
  409372:	call   406876 <_start@@Base+0x5e6>
  409377:	mov    QWORD PTR [rbp-0x10],rax
  40937b:	movabs rax,0xff00000000000000
  409385:	and    rax,QWORD PTR [rbp-0x10]
  409389:	mov    rdx,rax
  40938c:	movabs rax,0x6500000000000000
  409396:	cmp    rdx,rax
  409399:	jne    409400 <_start@@Base+0x3170>
  40939b:	mov    rax,QWORD PTR [rbp-0x30]
  40939f:	mov    QWORD PTR [rbp-0x8],rax
  4093a3:	mov    rdx,QWORD PTR [rbp-0x38]
  4093a7:	mov    rsi,QWORD PTR [rbp-0x8]
  4093ab:	mov    rax,QWORD PTR [rbp-0x28]
  4093af:	mov    ecx,0x1
  4093b4:	mov    rdi,rax
  4093b7:	call   4068ba <_start@@Base+0x62a>
  4093bc:	mov    QWORD PTR [rbp-0x30],rax
  4093c0:	mov    rax,QWORD PTR [rbp-0x30]
  4093c4:	cmp    rax,QWORD PTR [rbp-0x8]
  4093c8:	je     4093fa <_start@@Base+0x316a>
  4093ca:	mov    r8,QWORD PTR [rbp-0x50]
  4093ce:	mov    rdi,QWORD PTR [rbp-0x48]
  4093d2:	mov    rcx,QWORD PTR [rbp-0x40]
  4093d6:	mov    rdx,QWORD PTR [rbp-0x38]
  4093da:	mov    rsi,QWORD PTR [rbp-0x30]
  4093de:	mov    rax,QWORD PTR [rbp-0x28]
  4093e2:	mov    r9,r8
  4093e5:	mov    r8,rdi
  4093e8:	mov    rdi,rax
  4093eb:	call   408a8b <_start@@Base+0x27fb>
  4093f0:	mov    QWORD PTR [rbp-0x30],rax
  4093f4:	mov    rax,QWORD PTR [rbp-0x30]
  4093f8:	jmp    40941c <_start@@Base+0x318c>
  4093fa:	mov    rax,QWORD PTR [rbp-0x18]
  4093fe:	jmp    40941c <_start@@Base+0x318c>
  409400:	mov    rax,QWORD PTR [rbp-0x18]
  409404:	jmp    40941c <_start@@Base+0x318c>
  409406:	mov    rax,QWORD PTR [rbp-0x18]
  40940a:	jmp    40941c <_start@@Base+0x318c>
  40940c:	mov    rax,QWORD PTR [rbp-0x18]
  409410:	jmp    40941c <_start@@Base+0x318c>
  409412:	mov    rax,QWORD PTR [rbp-0x18]
  409416:	jmp    40941c <_start@@Base+0x318c>
  409418:	mov    rax,QWORD PTR [rbp-0x18]
  40941c:	leave  
  40941d:	ret    
  40941e:	endbr64 
  409422:	push   rbp
  409423:	mov    rbp,rsp
  409426:	mov    QWORD PTR [rbp-0x8],rdi
  40942a:	mov    QWORD PTR [rbp-0x10],rsi
  40942e:	mov    QWORD PTR [rbp-0x18],rdx
  409432:	mov    QWORD PTR [rbp-0x20],rcx
  409436:	mov    QWORD PTR [rbp-0x28],r8
  40943a:	mov    QWORD PTR [rbp-0x30],r9
  40943e:	mov    rax,QWORD PTR [rbp-0x10]
  409442:	pop    rbp
  409443:	ret    
  409444:	endbr64 
  409448:	push   rbp
  409449:	mov    rbp,rsp
  40944c:	mov    QWORD PTR [rbp-0x8],rdi
  409450:	mov    QWORD PTR [rbp-0x10],rsi
  409454:	mov    QWORD PTR [rbp-0x18],rdx
  409458:	mov    QWORD PTR [rbp-0x20],rcx
  40945c:	mov    QWORD PTR [rbp-0x28],r8
  409460:	mov    QWORD PTR [rbp-0x30],r9
  409464:	mov    rax,QWORD PTR [rbp-0x10]
  409468:	pop    rbp
  409469:	ret    
  40946a:	endbr64 
  40946e:	push   rbp
  40946f:	mov    rbp,rsp
  409472:	mov    QWORD PTR [rbp-0x8],rdi
  409476:	mov    QWORD PTR [rbp-0x10],rsi
  40947a:	mov    QWORD PTR [rbp-0x18],rdx
  40947e:	mov    QWORD PTR [rbp-0x20],rcx
  409482:	mov    QWORD PTR [rbp-0x28],r8
  409486:	mov    QWORD PTR [rbp-0x30],r9
  40948a:	mov    rax,QWORD PTR [rbp-0x10]
  40948e:	pop    rbp
  40948f:	ret    
  409490:	endbr64 
  409494:	push   rbp
  409495:	mov    rbp,rsp
  409498:	mov    QWORD PTR [rbp-0x8],rdi
  40949c:	mov    QWORD PTR [rbp-0x10],rsi
  4094a0:	mov    QWORD PTR [rbp-0x18],rdx
  4094a4:	mov    QWORD PTR [rbp-0x20],rcx
  4094a8:	mov    QWORD PTR [rbp-0x28],r8
  4094ac:	mov    QWORD PTR [rbp-0x30],r9
  4094b0:	mov    rax,QWORD PTR [rbp-0x10]
  4094b4:	pop    rbp
  4094b5:	ret    
  4094b6:	endbr64 
  4094ba:	push   rbp
  4094bb:	mov    rbp,rsp
  4094be:	mov    QWORD PTR [rbp-0x8],rdi
  4094c2:	mov    QWORD PTR [rbp-0x10],rsi
  4094c6:	mov    QWORD PTR [rbp-0x18],rdx
  4094ca:	mov    QWORD PTR [rbp-0x20],rcx
  4094ce:	mov    QWORD PTR [rbp-0x28],r8
  4094d2:	mov    QWORD PTR [rbp-0x30],r9
  4094d6:	mov    rax,QWORD PTR [rbp-0x10]
  4094da:	pop    rbp
  4094db:	ret    
  4094dc:	endbr64 
  4094e0:	push   rbp
  4094e1:	mov    rbp,rsp
  4094e4:	mov    QWORD PTR [rbp-0x8],rdi
  4094e8:	mov    QWORD PTR [rbp-0x10],rsi
  4094ec:	mov    QWORD PTR [rbp-0x18],rdx
  4094f0:	mov    QWORD PTR [rbp-0x20],rcx
  4094f4:	mov    QWORD PTR [rbp-0x28],r8
  4094f8:	mov    QWORD PTR [rbp-0x30],r9
  4094fc:	mov    rax,QWORD PTR [rbp-0x10]
  409500:	pop    rbp
  409501:	ret    
  409502:	endbr64 
  409506:	push   rbp
  409507:	mov    rbp,rsp
  40950a:	mov    QWORD PTR [rbp-0x8],rdi
  40950e:	mov    QWORD PTR [rbp-0x10],rsi
  409512:	mov    QWORD PTR [rbp-0x18],rdx
  409516:	mov    QWORD PTR [rbp-0x20],rcx
  40951a:	mov    QWORD PTR [rbp-0x28],r8
  40951e:	mov    QWORD PTR [rbp-0x30],r9
  409522:	mov    rax,QWORD PTR [rbp-0x10]
  409526:	pop    rbp
  409527:	ret    
  409528:	endbr64 
  40952c:	push   rbp
  40952d:	mov    rbp,rsp
  409530:	sub    rsp,0x30
  409534:	mov    QWORD PTR [rbp-0x18],rdi
  409538:	mov    QWORD PTR [rbp-0x20],rsi
  40953c:	mov    QWORD PTR [rbp-0x28],rdx
  409540:	mov    QWORD PTR [rbp-0x30],rcx
  409544:	mov    rax,QWORD PTR fs:0x28
  40954d:	mov    QWORD PTR [rbp-0x8],rax
  409551:	xor    eax,eax
  409553:	lea    rcx,[rbp-0xc]
  409557:	mov    rdx,QWORD PTR [rbp-0x28]
  40955b:	mov    rsi,QWORD PTR [rbp-0x20]
  40955f:	mov    rax,QWORD PTR [rbp-0x18]
  409563:	mov    rdi,rax
  409566:	call   406977 <_start@@Base+0x6e7>
  40956b:	mov    QWORD PTR [rbp-0x20],rax
  40956f:	jmp    4095a8 <_start@@Base+0x3318>
  409571:	mov    rdx,QWORD PTR [rbp-0x28]
  409575:	mov    rcx,QWORD PTR [rbp-0x20]
  409579:	mov    rax,QWORD PTR [rbp-0x18]
  40957d:	mov    rsi,rcx
  409580:	mov    rdi,rax
  409583:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  409588:	mov    QWORD PTR [rbp-0x20],rax
  40958c:	lea    rcx,[rbp-0xc]
  409590:	mov    rdx,QWORD PTR [rbp-0x28]
  409594:	mov    rsi,QWORD PTR [rbp-0x20]
  409598:	mov    rax,QWORD PTR [rbp-0x18]
  40959c:	mov    rdi,rax
  40959f:	call   406a34 <_start@@Base+0x7a4>
  4095a4:	mov    QWORD PTR [rbp-0x20],rax
  4095a8:	mov    eax,DWORD PTR [rbp-0xc]
  4095ab:	test   eax,eax
  4095ad:	jne    409571 <_start@@Base+0x32e1>
  4095af:	mov    rax,QWORD PTR [rbp-0x20]
  4095b3:	mov    rdi,QWORD PTR [rbp-0x8]
  4095b7:	xor    rdi,QWORD PTR fs:0x28
  4095c0:	je     4095c7 <_start@@Base+0x3337>
  4095c2:	call   4061a0 <__stack_chk_fail@plt>
  4095c7:	leave  
  4095c8:	ret    
  4095c9:	endbr64 
  4095cd:	push   rbp
  4095ce:	mov    rbp,rsp
  4095d1:	sub    rsp,0x30
  4095d5:	mov    QWORD PTR [rbp-0x18],rdi
  4095d9:	mov    QWORD PTR [rbp-0x20],rsi
  4095dd:	mov    QWORD PTR [rbp-0x28],rdx
  4095e1:	mov    QWORD PTR [rbp-0x30],rcx
  4095e5:	mov    rax,QWORD PTR [rbp-0x30]
  4095e9:	mov    DWORD PTR [rax],0x0
  4095ef:	mov    rax,QWORD PTR [rbp-0x18]
  4095f3:	mov    rax,QWORD PTR [rax]
  4095f6:	mov    edx,0x1
  4095fb:	mov    esi,0x0
  409600:	mov    rdi,rax
  409603:	call   41e209 <flatcc_builder_start_struct@@Base>
  409608:	mov    QWORD PTR [rbp-0x8],rax
  40960c:	cmp    QWORD PTR [rbp-0x8],0x0
  409611:	je     409660 <_start@@Base+0x33d0>
  409613:	mov    rcx,QWORD PTR [rbp-0x8]
  409617:	mov    rdx,QWORD PTR [rbp-0x28]
  40961b:	mov    rsi,QWORD PTR [rbp-0x20]
  40961f:	mov    rax,QWORD PTR [rbp-0x18]
  409623:	mov    rdi,rax
  409626:	call   409528 <_start@@Base+0x3298>
  40962b:	mov    QWORD PTR [rbp-0x20],rax
  40962f:	mov    rax,QWORD PTR [rbp-0x20]
  409633:	cmp    rax,QWORD PTR [rbp-0x28]
  409637:	je     409663 <_start@@Base+0x33d3>
  409639:	mov    rax,QWORD PTR [rbp-0x18]
  40963d:	mov    rax,QWORD PTR [rax]
  409640:	mov    rdi,rax
  409643:	call   41e28b <flatcc_builder_end_struct@@Base>
  409648:	mov    edx,eax
  40964a:	mov    rax,QWORD PTR [rbp-0x30]
  40964e:	mov    DWORD PTR [rax],edx
  409650:	mov    rax,QWORD PTR [rbp-0x30]
  409654:	mov    eax,DWORD PTR [rax]
  409656:	test   eax,eax
  409658:	je     409663 <_start@@Base+0x33d3>
  40965a:	mov    rax,QWORD PTR [rbp-0x20]
  40965e:	jmp    40967d <_start@@Base+0x33ed>
  409660:	nop
  409661:	jmp    409664 <_start@@Base+0x33d4>
  409663:	nop
  409664:	mov    rdx,QWORD PTR [rbp-0x28]
  409668:	mov    rsi,QWORD PTR [rbp-0x20]
  40966c:	mov    rax,QWORD PTR [rbp-0x18]
  409670:	mov    ecx,0x21
  409675:	mov    rdi,rax
  409678:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40967d:	leave  
  40967e:	ret    
  40967f:	endbr64 
  409683:	push   rbp
  409684:	mov    rbp,rsp
  409687:	sub    rsp,0x30
  40968b:	mov    QWORD PTR [rbp-0x18],rdi
  40968f:	mov    QWORD PTR [rbp-0x20],rsi
  409693:	mov    QWORD PTR [rbp-0x28],rdx
  409697:	mov    QWORD PTR [rbp-0x30],rcx
  40969b:	mov    rax,QWORD PTR fs:0x28
  4096a4:	mov    QWORD PTR [rbp-0x8],rax
  4096a8:	xor    eax,eax
  4096aa:	mov    rax,QWORD PTR [rbp-0x30]
  4096ae:	mov    DWORD PTR [rax],0x0
  4096b4:	mov    rax,QWORD PTR [rbp-0x18]
  4096b8:	mov    rax,QWORD PTR [rax]
  4096bb:	mov    esi,0x0
  4096c0:	mov    rdi,rax
  4096c3:	call   41ed41 <flatcc_builder_start_table@@Base>
  4096c8:	test   eax,eax
  4096ca:	jne    409779 <_start@@Base+0x34e9>
  4096d0:	lea    rcx,[rbp-0xc]
  4096d4:	mov    rdx,QWORD PTR [rbp-0x28]
  4096d8:	mov    rsi,QWORD PTR [rbp-0x20]
  4096dc:	mov    rax,QWORD PTR [rbp-0x18]
  4096e0:	mov    rdi,rax
  4096e3:	call   406977 <_start@@Base+0x6e7>
  4096e8:	mov    QWORD PTR [rbp-0x20],rax
  4096ec:	jmp    409740 <_start@@Base+0x34b0>
  4096ee:	mov    rdx,QWORD PTR [rbp-0x28]
  4096f2:	mov    rcx,QWORD PTR [rbp-0x20]
  4096f6:	mov    rax,QWORD PTR [rbp-0x18]
  4096fa:	mov    rsi,rcx
  4096fd:	mov    rdi,rax
  409700:	call   4066e9 <_start@@Base+0x459>
  409705:	mov    QWORD PTR [rbp-0x20],rax
  409709:	mov    rdx,QWORD PTR [rbp-0x28]
  40970d:	mov    rcx,QWORD PTR [rbp-0x20]
  409711:	mov    rax,QWORD PTR [rbp-0x18]
  409715:	mov    rsi,rcx
  409718:	mov    rdi,rax
  40971b:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  409720:	mov    QWORD PTR [rbp-0x20],rax
  409724:	lea    rcx,[rbp-0xc]
  409728:	mov    rdx,QWORD PTR [rbp-0x28]
  40972c:	mov    rsi,QWORD PTR [rbp-0x20]
  409730:	mov    rax,QWORD PTR [rbp-0x18]
  409734:	mov    rdi,rax
  409737:	call   406a34 <_start@@Base+0x7a4>
  40973c:	mov    QWORD PTR [rbp-0x20],rax
  409740:	mov    eax,DWORD PTR [rbp-0xc]
  409743:	test   eax,eax
  409745:	jne    4096ee <_start@@Base+0x345e>
  409747:	mov    rax,QWORD PTR [rbp-0x18]
  40974b:	mov    eax,DWORD PTR [rax+0x20]
  40974e:	test   eax,eax
  409750:	jne    40977c <_start@@Base+0x34ec>
  409752:	mov    rax,QWORD PTR [rbp-0x18]
  409756:	mov    rax,QWORD PTR [rax]
  409759:	mov    rdi,rax
  40975c:	call   41f850 <flatcc_builder_end_table@@Base>
  409761:	mov    edx,eax
  409763:	mov    rax,QWORD PTR [rbp-0x30]
  409767:	mov    DWORD PTR [rax],edx
  409769:	mov    rax,QWORD PTR [rbp-0x30]
  40976d:	mov    eax,DWORD PTR [rax]
  40976f:	test   eax,eax
  409771:	je     40977f <_start@@Base+0x34ef>
  409773:	mov    rax,QWORD PTR [rbp-0x20]
  409777:	jmp    409799 <_start@@Base+0x3509>
  409779:	nop
  40977a:	jmp    409780 <_start@@Base+0x34f0>
  40977c:	nop
  40977d:	jmp    409780 <_start@@Base+0x34f0>
  40977f:	nop
  409780:	mov    rdx,QWORD PTR [rbp-0x28]
  409784:	mov    rsi,QWORD PTR [rbp-0x20]
  409788:	mov    rax,QWORD PTR [rbp-0x18]
  40978c:	mov    ecx,0x21
  409791:	mov    rdi,rax
  409794:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  409799:	mov    rdi,QWORD PTR [rbp-0x8]
  40979d:	xor    rdi,QWORD PTR fs:0x28
  4097a6:	je     4097ad <_start@@Base+0x351d>
  4097a8:	call   4061a0 <__stack_chk_fail@plt>
  4097ad:	leave  
  4097ae:	ret    
  4097af:	endbr64 
  4097b3:	push   rbp
  4097b4:	mov    rbp,rsp
  4097b7:	sub    rsp,0x30
  4097bb:	mov    QWORD PTR [rbp-0x18],rdi
  4097bf:	mov    QWORD PTR [rbp-0x20],rsi
  4097c3:	mov    QWORD PTR [rbp-0x28],rdx
  4097c7:	mov    QWORD PTR [rbp-0x30],rcx
  4097cb:	mov    rax,QWORD PTR fs:0x28
  4097d4:	mov    QWORD PTR [rbp-0x8],rax
  4097d8:	xor    eax,eax
  4097da:	mov    rax,QWORD PTR [rbp-0x30]
  4097de:	mov    DWORD PTR [rax],0x0
  4097e4:	mov    rax,QWORD PTR [rbp-0x18]
  4097e8:	mov    rax,QWORD PTR [rax]
  4097eb:	mov    esi,0x0
  4097f0:	mov    rdi,rax
  4097f3:	call   41ed41 <flatcc_builder_start_table@@Base>
  4097f8:	test   eax,eax
  4097fa:	jne    4098a9 <_start@@Base+0x3619>
  409800:	lea    rcx,[rbp-0xc]
  409804:	mov    rdx,QWORD PTR [rbp-0x28]
  409808:	mov    rsi,QWORD PTR [rbp-0x20]
  40980c:	mov    rax,QWORD PTR [rbp-0x18]
  409810:	mov    rdi,rax
  409813:	call   406977 <_start@@Base+0x6e7>
  409818:	mov    QWORD PTR [rbp-0x20],rax
  40981c:	jmp    409870 <_start@@Base+0x35e0>
  40981e:	mov    rdx,QWORD PTR [rbp-0x28]
  409822:	mov    rcx,QWORD PTR [rbp-0x20]
  409826:	mov    rax,QWORD PTR [rbp-0x18]
  40982a:	mov    rsi,rcx
  40982d:	mov    rdi,rax
  409830:	call   4066e9 <_start@@Base+0x459>
  409835:	mov    QWORD PTR [rbp-0x20],rax
  409839:	mov    rdx,QWORD PTR [rbp-0x28]
  40983d:	mov    rcx,QWORD PTR [rbp-0x20]
  409841:	mov    rax,QWORD PTR [rbp-0x18]
  409845:	mov    rsi,rcx
  409848:	mov    rdi,rax
  40984b:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  409850:	mov    QWORD PTR [rbp-0x20],rax
  409854:	lea    rcx,[rbp-0xc]
  409858:	mov    rdx,QWORD PTR [rbp-0x28]
  40985c:	mov    rsi,QWORD PTR [rbp-0x20]
  409860:	mov    rax,QWORD PTR [rbp-0x18]
  409864:	mov    rdi,rax
  409867:	call   406a34 <_start@@Base+0x7a4>
  40986c:	mov    QWORD PTR [rbp-0x20],rax
  409870:	mov    eax,DWORD PTR [rbp-0xc]
  409873:	test   eax,eax
  409875:	jne    40981e <_start@@Base+0x358e>
  409877:	mov    rax,QWORD PTR [rbp-0x18]
  40987b:	mov    eax,DWORD PTR [rax+0x20]
  40987e:	test   eax,eax
  409880:	jne    4098ac <_start@@Base+0x361c>
  409882:	mov    rax,QWORD PTR [rbp-0x18]
  409886:	mov    rax,QWORD PTR [rax]
  409889:	mov    rdi,rax
  40988c:	call   41f850 <flatcc_builder_end_table@@Base>
  409891:	mov    edx,eax
  409893:	mov    rax,QWORD PTR [rbp-0x30]
  409897:	mov    DWORD PTR [rax],edx
  409899:	mov    rax,QWORD PTR [rbp-0x30]
  40989d:	mov    eax,DWORD PTR [rax]
  40989f:	test   eax,eax
  4098a1:	je     4098af <_start@@Base+0x361f>
  4098a3:	mov    rax,QWORD PTR [rbp-0x20]
  4098a7:	jmp    4098c9 <_start@@Base+0x3639>
  4098a9:	nop
  4098aa:	jmp    4098b0 <_start@@Base+0x3620>
  4098ac:	nop
  4098ad:	jmp    4098b0 <_start@@Base+0x3620>
  4098af:	nop
  4098b0:	mov    rdx,QWORD PTR [rbp-0x28]
  4098b4:	mov    rsi,QWORD PTR [rbp-0x20]
  4098b8:	mov    rax,QWORD PTR [rbp-0x18]
  4098bc:	mov    ecx,0x21
  4098c1:	mov    rdi,rax
  4098c4:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4098c9:	mov    rdi,QWORD PTR [rbp-0x8]
  4098cd:	xor    rdi,QWORD PTR fs:0x28
  4098d6:	je     4098dd <_start@@Base+0x364d>
  4098d8:	call   4061a0 <__stack_chk_fail@plt>
  4098dd:	leave  
  4098de:	ret    
  4098df:	endbr64 
  4098e3:	push   rbp
  4098e4:	mov    rbp,rsp
  4098e7:	sub    rsp,0x30
  4098eb:	mov    QWORD PTR [rbp-0x8],rdi
  4098ef:	mov    QWORD PTR [rbp-0x10],rsi
  4098f3:	mov    QWORD PTR [rbp-0x18],rdx
  4098f7:	mov    eax,ecx
  4098f9:	mov    QWORD PTR [rbp-0x28],r8
  4098fd:	mov    BYTE PTR [rbp-0x1c],al
  409900:	mov    rax,QWORD PTR [rbp-0x28]
  409904:	mov    DWORD PTR [rax],0x0
  40990a:	movzx  eax,BYTE PTR [rbp-0x1c]
  40990e:	test   eax,eax
  409910:	je     409919 <_start@@Base+0x3689>
  409912:	cmp    eax,0x1
  409915:	je     409935 <_start@@Base+0x36a5>
  409917:	jmp    40995f <_start@@Base+0x36cf>
  409919:	mov    rdx,QWORD PTR [rbp-0x18]
  40991d:	mov    rcx,QWORD PTR [rbp-0x10]
  409921:	mov    rax,QWORD PTR [rbp-0x8]
  409925:	mov    rsi,rcx
  409928:	mov    rdi,rax
  40992b:	call   4073f1 <_start@@Base+0x1161>
  409930:	jmp    4099d0 <_start@@Base+0x3740>
  409935:	mov    rcx,QWORD PTR [rbp-0x28]
  409939:	mov    rdx,QWORD PTR [rbp-0x18]
  40993d:	mov    rsi,QWORD PTR [rbp-0x10]
  409941:	mov    rax,QWORD PTR [rbp-0x8]
  409945:	mov    rdi,rax
  409948:	call   40967f <_start@@Base+0x33ef>
  40994d:	mov    QWORD PTR [rbp-0x10],rax
  409951:	nop
  409952:	mov    rax,QWORD PTR [rbp-0x8]
  409956:	mov    eax,DWORD PTR [rax+0x20]
  409959:	test   eax,eax
  40995b:	je     4099a7 <_start@@Base+0x3717>
  40995d:	jmp    4099a1 <_start@@Base+0x3711>
  40995f:	mov    rax,QWORD PTR [rbp-0x8]
  409963:	mov    eax,DWORD PTR [rax+0x10]
  409966:	and    eax,0x1
  409969:	test   eax,eax
  40996b:	jne    409988 <_start@@Base+0x36f8>
  40996d:	mov    rdx,QWORD PTR [rbp-0x18]
  409971:	mov    rsi,QWORD PTR [rbp-0x10]
  409975:	mov    rax,QWORD PTR [rbp-0x8]
  409979:	mov    ecx,0xf
  40997e:	mov    rdi,rax
  409981:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  409986:	jmp    4099d0 <_start@@Base+0x3740>
  409988:	mov    rdx,QWORD PTR [rbp-0x18]
  40998c:	mov    rcx,QWORD PTR [rbp-0x10]
  409990:	mov    rax,QWORD PTR [rbp-0x8]
  409994:	mov    rsi,rcx
  409997:	mov    rdi,rax
  40999a:	call   428dd2 <flatcc_json_parser_generic_json@@Base>
  40999f:	jmp    4099d0 <_start@@Base+0x3740>
  4099a1:	mov    rax,QWORD PTR [rbp-0x10]
  4099a5:	jmp    4099d0 <_start@@Base+0x3740>
  4099a7:	mov    rax,QWORD PTR [rbp-0x28]
  4099ab:	mov    eax,DWORD PTR [rax]
  4099ad:	test   eax,eax
  4099af:	jne    4099cc <_start@@Base+0x373c>
  4099b1:	mov    rdx,QWORD PTR [rbp-0x18]
  4099b5:	mov    rsi,QWORD PTR [rbp-0x10]
  4099b9:	mov    rax,QWORD PTR [rbp-0x8]
  4099bd:	mov    ecx,0x21
  4099c2:	mov    rdi,rax
  4099c5:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4099ca:	jmp    4099d0 <_start@@Base+0x3740>
  4099cc:	mov    rax,QWORD PTR [rbp-0x10]
  4099d0:	leave  
  4099d1:	ret    
  4099d2:	endbr64 
  4099d6:	push   rbp
  4099d7:	mov    rbp,rsp
  4099da:	mov    eax,edi
  4099dc:	mov    BYTE PTR [rbp-0x4],al
  4099df:	movzx  eax,BYTE PTR [rbp-0x4]
  4099e3:	test   eax,eax
  4099e5:	je     4099ee <_start@@Base+0x375e>
  4099e7:	cmp    eax,0x1
  4099ea:	je     4099f5 <_start@@Base+0x3765>
  4099ec:	jmp    4099fc <_start@@Base+0x376c>
  4099ee:	mov    eax,0x1
  4099f3:	jmp    409a01 <_start@@Base+0x3771>
  4099f5:	mov    eax,0x1
  4099fa:	jmp    409a01 <_start@@Base+0x3771>
  4099fc:	mov    eax,0x0
  409a01:	pop    rbp
  409a02:	ret    
  409a03:	endbr64 
  409a07:	push   rbp
  409a08:	mov    rbp,rsp
  409a0b:	sub    rsp,0x50
  409a0f:	mov    QWORD PTR [rbp-0x28],rdi
  409a13:	mov    QWORD PTR [rbp-0x30],rsi
  409a17:	mov    QWORD PTR [rbp-0x38],rdx
  409a1b:	mov    QWORD PTR [rbp-0x40],rcx
  409a1f:	mov    QWORD PTR [rbp-0x48],r8
  409a23:	mov    QWORD PTR [rbp-0x50],r9
  409a27:	mov    rax,QWORD PTR [rbp-0x30]
  409a2b:	mov    QWORD PTR [rbp-0x18],rax
  409a2f:	mov    rdx,QWORD PTR [rbp-0x38]
  409a33:	mov    rax,QWORD PTR [rbp-0x30]
  409a37:	mov    rsi,rdx
  409a3a:	mov    rdi,rax
  409a3d:	call   406876 <_start@@Base+0x5e6>
  409a42:	mov    QWORD PTR [rbp-0x10],rax
  409a46:	movabs rax,0x496e506172656e74
  409a50:	cmp    QWORD PTR [rbp-0x10],rax
  409a54:	jne    409b2e <_start@@Base+0x389e>
  409a5a:	add    QWORD PTR [rbp-0x30],0x8
  409a5f:	mov    rdx,QWORD PTR [rbp-0x38]
  409a63:	mov    rax,QWORD PTR [rbp-0x30]
  409a67:	mov    rsi,rdx
  409a6a:	mov    rdi,rax
  409a6d:	call   406876 <_start@@Base+0x5e6>
  409a72:	mov    QWORD PTR [rbp-0x10],rax
  409a76:	movabs rax,0x4e616d6573706163
  409a80:	cmp    QWORD PTR [rbp-0x10],rax
  409a84:	jne    409b28 <_start@@Base+0x3898>
  409a8a:	add    QWORD PTR [rbp-0x30],0x8
  409a8f:	mov    rdx,QWORD PTR [rbp-0x38]
  409a93:	mov    rax,QWORD PTR [rbp-0x30]
  409a97:	mov    rsi,rdx
  409a9a:	mov    rdi,rax
  409a9d:	call   406876 <_start@@Base+0x5e6>
  409aa2:	mov    QWORD PTR [rbp-0x10],rax
  409aa6:	movabs rax,0xff00000000000000
  409ab0:	and    rax,QWORD PTR [rbp-0x10]
  409ab4:	mov    rdx,rax
  409ab7:	movabs rax,0x6500000000000000
  409ac1:	cmp    rdx,rax
  409ac4:	jne    409b1f <_start@@Base+0x388f>
  409ac6:	mov    rax,QWORD PTR [rbp-0x30]
  409aca:	mov    QWORD PTR [rbp-0x8],rax
  409ace:	mov    rcx,QWORD PTR [rbp-0x50]
  409ad2:	mov    rdx,QWORD PTR [rbp-0x38]
  409ad6:	mov    rsi,QWORD PTR [rbp-0x8]
  409ada:	mov    rax,QWORD PTR [rbp-0x28]
  409ade:	mov    r8,rcx
  409ae1:	mov    ecx,0x1
  409ae6:	mov    rdi,rax
  409ae9:	call   4285be <flatcc_json_parser_match_constant@@Base>
  409aee:	mov    QWORD PTR [rbp-0x30],rax
  409af2:	mov    rax,QWORD PTR [rbp-0x30]
  409af6:	cmp    rax,QWORD PTR [rbp-0x8]
  409afa:	je     409b16 <_start@@Base+0x3886>
  409afc:	mov    rax,QWORD PTR [rbp-0x48]
  409b00:	mov    QWORD PTR [rax],0x1
  409b07:	mov    rax,QWORD PTR [rbp-0x40]
  409b0b:	mov    DWORD PTR [rax],0x0
  409b11:	jmp    409ba7 <_start@@Base+0x3917>
  409b16:	mov    rax,QWORD PTR [rbp-0x18]
  409b1a:	jmp    409bab <_start@@Base+0x391b>
  409b1f:	mov    rax,QWORD PTR [rbp-0x18]
  409b23:	jmp    409bab <_start@@Base+0x391b>
  409b28:	mov    rax,QWORD PTR [rbp-0x18]
  409b2c:	jmp    409bab <_start@@Base+0x391b>
  409b2e:	movabs rax,0xffffffff00000000
  409b38:	and    rax,QWORD PTR [rbp-0x10]
  409b3c:	mov    rdx,rax
  409b3f:	movabs rax,0x4e4f4e4500000000
  409b49:	cmp    rdx,rax
  409b4c:	jne    409ba1 <_start@@Base+0x3911>
  409b4e:	mov    rax,QWORD PTR [rbp-0x30]
  409b52:	mov    QWORD PTR [rbp-0x8],rax
  409b56:	mov    rcx,QWORD PTR [rbp-0x50]
  409b5a:	mov    rdx,QWORD PTR [rbp-0x38]
  409b5e:	mov    rsi,QWORD PTR [rbp-0x8]
  409b62:	mov    rax,QWORD PTR [rbp-0x28]
  409b66:	mov    r8,rcx
  409b69:	mov    ecx,0x4
  409b6e:	mov    rdi,rax
  409b71:	call   4285be <flatcc_json_parser_match_constant@@Base>
  409b76:	mov    QWORD PTR [rbp-0x30],rax
  409b7a:	mov    rax,QWORD PTR [rbp-0x30]
  409b7e:	cmp    rax,QWORD PTR [rbp-0x8]
  409b82:	je     409b9b <_start@@Base+0x390b>
  409b84:	mov    rax,QWORD PTR [rbp-0x48]
  409b88:	mov    QWORD PTR [rax],0x0
  409b8f:	mov    rax,QWORD PTR [rbp-0x40]
  409b93:	mov    DWORD PTR [rax],0x0
  409b99:	jmp    409ba7 <_start@@Base+0x3917>
  409b9b:	mov    rax,QWORD PTR [rbp-0x18]
  409b9f:	jmp    409bab <_start@@Base+0x391b>
  409ba1:	mov    rax,QWORD PTR [rbp-0x18]
  409ba5:	jmp    409bab <_start@@Base+0x391b>
  409ba7:	mov    rax,QWORD PTR [rbp-0x30]
  409bab:	leave  
  409bac:	ret    
  409bad:	endbr64 
  409bb1:	push   rbp
  409bb2:	mov    rbp,rsp
  409bb5:	sub    rsp,0x50
  409bb9:	mov    QWORD PTR [rbp-0x28],rdi
  409bbd:	mov    QWORD PTR [rbp-0x30],rsi
  409bc1:	mov    QWORD PTR [rbp-0x38],rdx
  409bc5:	mov    QWORD PTR [rbp-0x40],rcx
  409bc9:	mov    QWORD PTR [rbp-0x48],r8
  409bcd:	mov    QWORD PTR [rbp-0x50],r9
  409bd1:	mov    rax,QWORD PTR [rbp-0x30]
  409bd5:	mov    QWORD PTR [rbp-0x18],rax
  409bd9:	mov    rdx,QWORD PTR [rbp-0x38]
  409bdd:	mov    rax,QWORD PTR [rbp-0x30]
  409be1:	mov    rsi,rdx
  409be4:	mov    rdi,rax
  409be7:	call   406876 <_start@@Base+0x5e6>
  409bec:	mov    QWORD PTR [rbp-0x10],rax
  409bf0:	movabs rax,0x6e656731ffffffff
  409bfa:	cmp    QWORD PTR [rbp-0x10],rax
  409bfe:	ja     409c86 <_start@@Base+0x39f6>
  409c04:	movabs rax,0xffffffff00000000
  409c0e:	and    rax,QWORD PTR [rbp-0x10]
  409c12:	mov    rdx,rax
  409c15:	movabs rax,0x6e65673100000000
  409c1f:	cmp    rdx,rax
  409c22:	jne    409c7d <_start@@Base+0x39ed>
  409c24:	mov    rax,QWORD PTR [rbp-0x30]
  409c28:	mov    QWORD PTR [rbp-0x8],rax
  409c2c:	mov    rcx,QWORD PTR [rbp-0x50]
  409c30:	mov    rdx,QWORD PTR [rbp-0x38]
  409c34:	mov    rsi,QWORD PTR [rbp-0x8]
  409c38:	mov    rax,QWORD PTR [rbp-0x28]
  409c3c:	mov    r8,rcx
  409c3f:	mov    ecx,0x4
  409c44:	mov    rdi,rax
  409c47:	call   4285be <flatcc_json_parser_match_constant@@Base>
  409c4c:	mov    QWORD PTR [rbp-0x30],rax
  409c50:	mov    rax,QWORD PTR [rbp-0x30]
  409c54:	cmp    rax,QWORD PTR [rbp-0x8]
  409c58:	je     409c74 <_start@@Base+0x39e4>
  409c5a:	mov    rax,QWORD PTR [rbp-0x48]
  409c5e:	mov    QWORD PTR [rax],0xfffffffffffffff4
  409c65:	mov    rax,QWORD PTR [rbp-0x40]
  409c69:	mov    DWORD PTR [rax],0x1
  409c6f:	jmp    409d72 <_start@@Base+0x3ae2>
  409c74:	mov    rax,QWORD PTR [rbp-0x18]
  409c78:	jmp    409d76 <_start@@Base+0x3ae6>
  409c7d:	mov    rax,QWORD PTR [rbp-0x18]
  409c81:	jmp    409d76 <_start@@Base+0x3ae6>
  409c86:	movabs rax,0xffffffff00000000
  409c90:	and    rax,QWORD PTR [rbp-0x10]
  409c94:	mov    rdx,rax
  409c97:	movabs rax,0x6e65673300000000
  409ca1:	cmp    rdx,rax
  409ca4:	jne    409cf9 <_start@@Base+0x3a69>
  409ca6:	mov    rax,QWORD PTR [rbp-0x30]
  409caa:	mov    QWORD PTR [rbp-0x8],rax
  409cae:	mov    rcx,QWORD PTR [rbp-0x50]
  409cb2:	mov    rdx,QWORD PTR [rbp-0x38]
  409cb6:	mov    rsi,QWORD PTR [rbp-0x8]
  409cba:	mov    rax,QWORD PTR [rbp-0x28]
  409cbe:	mov    r8,rcx
  409cc1:	mov    ecx,0x4
  409cc6:	mov    rdi,rax
  409cc9:	call   4285be <flatcc_json_parser_match_constant@@Base>
  409cce:	mov    QWORD PTR [rbp-0x30],rax
  409cd2:	mov    rax,QWORD PTR [rbp-0x30]
  409cd6:	cmp    rax,QWORD PTR [rbp-0x8]
  409cda:	je     409cf3 <_start@@Base+0x3a63>
  409cdc:	mov    rax,QWORD PTR [rbp-0x48]
  409ce0:	mov    QWORD PTR [rax],0xfffffffffffffff6
  409ce7:	mov    rax,QWORD PTR [rbp-0x40]
  409ceb:	mov    DWORD PTR [rax],0x1
  409cf1:	jmp    409d72 <_start@@Base+0x3ae2>
  409cf3:	mov    rax,QWORD PTR [rbp-0x18]
  409cf7:	jmp    409d76 <_start@@Base+0x3ae6>
  409cf9:	movabs rax,0xffffffff00000000
  409d03:	and    rax,QWORD PTR [rbp-0x10]
  409d07:	mov    rdx,rax
  409d0a:	movabs rax,0x6e65673200000000
  409d14:	cmp    rdx,rax
  409d17:	jne    409d6c <_start@@Base+0x3adc>
  409d19:	mov    rax,QWORD PTR [rbp-0x30]
  409d1d:	mov    QWORD PTR [rbp-0x8],rax
  409d21:	mov    rcx,QWORD PTR [rbp-0x50]
  409d25:	mov    rdx,QWORD PTR [rbp-0x38]
  409d29:	mov    rsi,QWORD PTR [rbp-0x8]
  409d2d:	mov    rax,QWORD PTR [rbp-0x28]
  409d31:	mov    r8,rcx
  409d34:	mov    ecx,0x4
  409d39:	mov    rdi,rax
  409d3c:	call   4285be <flatcc_json_parser_match_constant@@Base>
  409d41:	mov    QWORD PTR [rbp-0x30],rax
  409d45:	mov    rax,QWORD PTR [rbp-0x30]
  409d49:	cmp    rax,QWORD PTR [rbp-0x8]
  409d4d:	je     409d66 <_start@@Base+0x3ad6>
  409d4f:	mov    rax,QWORD PTR [rbp-0x48]
  409d53:	mov    QWORD PTR [rax],0xfffffffffffffff5
  409d5a:	mov    rax,QWORD PTR [rbp-0x40]
  409d5e:	mov    DWORD PTR [rax],0x1
  409d64:	jmp    409d72 <_start@@Base+0x3ae2>
  409d66:	mov    rax,QWORD PTR [rbp-0x18]
  409d6a:	jmp    409d76 <_start@@Base+0x3ae6>
  409d6c:	mov    rax,QWORD PTR [rbp-0x18]
  409d70:	jmp    409d76 <_start@@Base+0x3ae6>
  409d72:	mov    rax,QWORD PTR [rbp-0x30]
  409d76:	leave  
  409d77:	ret    
  409d78:	endbr64 
  409d7c:	push   rbp
  409d7d:	mov    rbp,rsp
  409d80:	sub    rsp,0x50
  409d84:	mov    QWORD PTR [rbp-0x28],rdi
  409d88:	mov    QWORD PTR [rbp-0x30],rsi
  409d8c:	mov    QWORD PTR [rbp-0x38],rdx
  409d90:	mov    QWORD PTR [rbp-0x40],rcx
  409d94:	mov    QWORD PTR [rbp-0x48],r8
  409d98:	mov    QWORD PTR [rbp-0x50],r9
  409d9c:	mov    rax,QWORD PTR [rbp-0x30]
  409da0:	mov    QWORD PTR [rbp-0x18],rax
  409da4:	mov    rdx,QWORD PTR [rbp-0x38]
  409da8:	mov    rax,QWORD PTR [rbp-0x30]
  409dac:	mov    rsi,rdx
  409daf:	mov    rdi,rax
  409db2:	call   406876 <_start@@Base+0x5e6>
  409db7:	mov    QWORD PTR [rbp-0x10],rax
  409dbb:	movabs rax,0x696e7431ffffffff
  409dc5:	cmp    QWORD PTR [rbp-0x10],rax
  409dc9:	ja     409e51 <_start@@Base+0x3bc1>
  409dcf:	movabs rax,0xffffffff00000000
  409dd9:	and    rax,QWORD PTR [rbp-0x10]
  409ddd:	mov    rdx,rax
  409de0:	movabs rax,0x696e743100000000
  409dea:	cmp    rdx,rax
  409ded:	jne    409e48 <_start@@Base+0x3bb8>
  409def:	mov    rax,QWORD PTR [rbp-0x30]
  409df3:	mov    QWORD PTR [rbp-0x8],rax
  409df7:	mov    rcx,QWORD PTR [rbp-0x50]
  409dfb:	mov    rdx,QWORD PTR [rbp-0x38]
  409dff:	mov    rsi,QWORD PTR [rbp-0x8]
  409e03:	mov    rax,QWORD PTR [rbp-0x28]
  409e07:	mov    r8,rcx
  409e0a:	mov    ecx,0x4
  409e0f:	mov    rdi,rax
  409e12:	call   4285be <flatcc_json_parser_match_constant@@Base>
  409e17:	mov    QWORD PTR [rbp-0x30],rax
  409e1b:	mov    rax,QWORD PTR [rbp-0x30]
  409e1f:	cmp    rax,QWORD PTR [rbp-0x8]
  409e23:	je     409e3f <_start@@Base+0x3baf>
  409e25:	mov    rax,QWORD PTR [rbp-0x48]
  409e29:	mov    QWORD PTR [rax],0x2
  409e30:	mov    rax,QWORD PTR [rbp-0x40]
  409e34:	mov    DWORD PTR [rax],0x0
  409e3a:	jmp    409fc5 <_start@@Base+0x3d35>
  409e3f:	mov    rax,QWORD PTR [rbp-0x18]
  409e43:	jmp    409fc9 <_start@@Base+0x3d39>
  409e48:	mov    rax,QWORD PTR [rbp-0x18]
  409e4c:	jmp    409fc9 <_start@@Base+0x3d39>
  409e51:	movabs rax,0x696e746e6566ffff
  409e5b:	cmp    QWORD PTR [rbp-0x10],rax
  409e5f:	ja     409ee7 <_start@@Base+0x3c57>
  409e65:	movabs rax,0xffffffff00000000
  409e6f:	and    rax,QWORD PTR [rbp-0x10]
  409e73:	mov    rdx,rax
  409e76:	movabs rax,0x696e743200000000
  409e80:	cmp    rdx,rax
  409e83:	jne    409ede <_start@@Base+0x3c4e>
  409e85:	mov    rax,QWORD PTR [rbp-0x30]
  409e89:	mov    QWORD PTR [rbp-0x8],rax
  409e8d:	mov    rcx,QWORD PTR [rbp-0x50]
  409e91:	mov    rdx,QWORD PTR [rbp-0x38]
  409e95:	mov    rsi,QWORD PTR [rbp-0x8]
  409e99:	mov    rax,QWORD PTR [rbp-0x28]
  409e9d:	mov    r8,rcx
  409ea0:	mov    ecx,0x4
  409ea5:	mov    rdi,rax
  409ea8:	call   4285be <flatcc_json_parser_match_constant@@Base>
  409ead:	mov    QWORD PTR [rbp-0x30],rax
  409eb1:	mov    rax,QWORD PTR [rbp-0x30]
  409eb5:	cmp    rax,QWORD PTR [rbp-0x8]
  409eb9:	je     409ed5 <_start@@Base+0x3c45>
  409ebb:	mov    rax,QWORD PTR [rbp-0x48]
  409ebf:	mov    QWORD PTR [rax],0x2a
  409ec6:	mov    rax,QWORD PTR [rbp-0x40]
  409eca:	mov    DWORD PTR [rax],0x0
  409ed0:	jmp    409fc5 <_start@@Base+0x3d35>
  409ed5:	mov    rax,QWORD PTR [rbp-0x18]
  409ed9:	jmp    409fc9 <_start@@Base+0x3d39>
  409ede:	mov    rax,QWORD PTR [rbp-0x18]
  409ee2:	jmp    409fc9 <_start@@Base+0x3d39>
  409ee7:	mov    rax,QWORD PTR [rbp-0x10]
  409eeb:	mov    al,0x0
  409eed:	mov    rdx,rax
  409ef0:	movabs rax,0x696e746e65673200
  409efa:	cmp    rdx,rax
  409efd:	jne    409f52 <_start@@Base+0x3cc2>
  409eff:	mov    rax,QWORD PTR [rbp-0x30]
  409f03:	mov    QWORD PTR [rbp-0x8],rax
  409f07:	mov    rcx,QWORD PTR [rbp-0x50]
  409f0b:	mov    rdx,QWORD PTR [rbp-0x38]
  409f0f:	mov    rsi,QWORD PTR [rbp-0x8]
  409f13:	mov    rax,QWORD PTR [rbp-0x28]
  409f17:	mov    r8,rcx
  409f1a:	mov    ecx,0x7
  409f1f:	mov    rdi,rax
  409f22:	call   4285be <flatcc_json_parser_match_constant@@Base>
  409f27:	mov    QWORD PTR [rbp-0x30],rax
  409f2b:	mov    rax,QWORD PTR [rbp-0x30]
  409f2f:	cmp    rax,QWORD PTR [rbp-0x8]
  409f33:	je     409f4c <_start@@Base+0x3cbc>
  409f35:	mov    rax,QWORD PTR [rbp-0x48]
  409f39:	mov    QWORD PTR [rax],0xffffffffffffffff
  409f40:	mov    rax,QWORD PTR [rbp-0x40]
  409f44:	mov    DWORD PTR [rax],0x1
  409f4a:	jmp    409fc5 <_start@@Base+0x3d35>
  409f4c:	mov    rax,QWORD PTR [rbp-0x18]
  409f50:	jmp    409fc9 <_start@@Base+0x3d39>
  409f52:	mov    rax,QWORD PTR [rbp-0x10]
  409f56:	mov    ax,0x0
  409f5a:	mov    rdx,rax
  409f5d:	movabs rax,0x696e746e65670000
  409f67:	cmp    rdx,rax
  409f6a:	jne    409fbf <_start@@Base+0x3d2f>
  409f6c:	mov    rax,QWORD PTR [rbp-0x30]
  409f70:	mov    QWORD PTR [rbp-0x8],rax
  409f74:	mov    rcx,QWORD PTR [rbp-0x50]
  409f78:	mov    rdx,QWORD PTR [rbp-0x38]
  409f7c:	mov    rsi,QWORD PTR [rbp-0x8]
  409f80:	mov    rax,QWORD PTR [rbp-0x28]
  409f84:	mov    r8,rcx
  409f87:	mov    ecx,0x6
  409f8c:	mov    rdi,rax
  409f8f:	call   4285be <flatcc_json_parser_match_constant@@Base>
  409f94:	mov    QWORD PTR [rbp-0x30],rax
  409f98:	mov    rax,QWORD PTR [rbp-0x30]
  409f9c:	cmp    rax,QWORD PTR [rbp-0x8]
  409fa0:	je     409fb9 <_start@@Base+0x3d29>
  409fa2:	mov    rax,QWORD PTR [rbp-0x48]
  409fa6:	mov    QWORD PTR [rax],0xfffffffffffffffe
  409fad:	mov    rax,QWORD PTR [rbp-0x40]
  409fb1:	mov    DWORD PTR [rax],0x1
  409fb7:	jmp    409fc5 <_start@@Base+0x3d35>
  409fb9:	mov    rax,QWORD PTR [rbp-0x18]
  409fbd:	jmp    409fc9 <_start@@Base+0x3d39>
  409fbf:	mov    rax,QWORD PTR [rbp-0x18]
  409fc3:	jmp    409fc9 <_start@@Base+0x3d39>
  409fc5:	mov    rax,QWORD PTR [rbp-0x30]
  409fc9:	leave  
  409fca:	ret    
  409fcb:	endbr64 
  409fcf:	push   rbp
  409fd0:	mov    rbp,rsp
  409fd3:	sub    rsp,0x50
  409fd7:	mov    QWORD PTR [rbp-0x28],rdi
  409fdb:	mov    QWORD PTR [rbp-0x30],rsi
  409fdf:	mov    QWORD PTR [rbp-0x38],rdx
  409fe3:	mov    QWORD PTR [rbp-0x40],rcx
  409fe7:	mov    QWORD PTR [rbp-0x48],r8
  409feb:	mov    QWORD PTR [rbp-0x50],r9
  409fef:	mov    rax,QWORD PTR [rbp-0x30]
  409ff3:	mov    QWORD PTR [rbp-0x18],rax
  409ff7:	mov    rdx,QWORD PTR [rbp-0x38]
  409ffb:	mov    rax,QWORD PTR [rbp-0x30]
  409fff:	mov    rsi,rdx
  40a002:	mov    rdi,rax
  40a005:	call   406876 <_start@@Base+0x5e6>
  40a00a:	mov    QWORD PTR [rbp-0x10],rax
  40a00e:	movabs rax,0x68657831ffffffff
  40a018:	cmp    QWORD PTR [rbp-0x10],rax
  40a01c:	ja     40a0a4 <_start@@Base+0x3e14>
  40a022:	movabs rax,0xffffffff00000000
  40a02c:	and    rax,QWORD PTR [rbp-0x10]
  40a030:	mov    rdx,rax
  40a033:	movabs rax,0x6865783100000000
  40a03d:	cmp    rdx,rax
  40a040:	jne    40a09b <_start@@Base+0x3e0b>
  40a042:	mov    rax,QWORD PTR [rbp-0x30]
  40a046:	mov    QWORD PTR [rbp-0x8],rax
  40a04a:	mov    rcx,QWORD PTR [rbp-0x50]
  40a04e:	mov    rdx,QWORD PTR [rbp-0x38]
  40a052:	mov    rsi,QWORD PTR [rbp-0x8]
  40a056:	mov    rax,QWORD PTR [rbp-0x28]
  40a05a:	mov    r8,rcx
  40a05d:	mov    ecx,0x4
  40a062:	mov    rdi,rax
  40a065:	call   4285be <flatcc_json_parser_match_constant@@Base>
  40a06a:	mov    QWORD PTR [rbp-0x30],rax
  40a06e:	mov    rax,QWORD PTR [rbp-0x30]
  40a072:	cmp    rax,QWORD PTR [rbp-0x8]
  40a076:	je     40a092 <_start@@Base+0x3e02>
  40a078:	mov    rax,QWORD PTR [rbp-0x48]
  40a07c:	mov    QWORD PTR [rax],0x3
  40a083:	mov    rax,QWORD PTR [rbp-0x40]
  40a087:	mov    DWORD PTR [rax],0x0
  40a08d:	jmp    40a18a <_start@@Base+0x3efa>
  40a092:	mov    rax,QWORD PTR [rbp-0x18]
  40a096:	jmp    40a18e <_start@@Base+0x3efe>
  40a09b:	mov    rax,QWORD PTR [rbp-0x18]
  40a09f:	jmp    40a18e <_start@@Base+0x3efe>
  40a0a4:	mov    rax,QWORD PTR [rbp-0x10]
  40a0a8:	mov    ax,0x0
  40a0ac:	mov    rdx,rax
  40a0af:	movabs rax,0x6865786e65670000
  40a0b9:	cmp    rdx,rax
  40a0bc:	jne    40a111 <_start@@Base+0x3e81>
  40a0be:	mov    rax,QWORD PTR [rbp-0x30]
  40a0c2:	mov    QWORD PTR [rbp-0x8],rax
  40a0c6:	mov    rcx,QWORD PTR [rbp-0x50]
  40a0ca:	mov    rdx,QWORD PTR [rbp-0x38]
  40a0ce:	mov    rsi,QWORD PTR [rbp-0x8]
  40a0d2:	mov    rax,QWORD PTR [rbp-0x28]
  40a0d6:	mov    r8,rcx
  40a0d9:	mov    ecx,0x6
  40a0de:	mov    rdi,rax
  40a0e1:	call   4285be <flatcc_json_parser_match_constant@@Base>
  40a0e6:	mov    QWORD PTR [rbp-0x30],rax
  40a0ea:	mov    rax,QWORD PTR [rbp-0x30]
  40a0ee:	cmp    rax,QWORD PTR [rbp-0x8]
  40a0f2:	je     40a10b <_start@@Base+0x3e7b>
  40a0f4:	mov    rax,QWORD PTR [rbp-0x48]
  40a0f8:	mov    QWORD PTR [rax],0xfffffffffffffffe
  40a0ff:	mov    rax,QWORD PTR [rbp-0x40]
  40a103:	mov    DWORD PTR [rax],0x1
  40a109:	jmp    40a18a <_start@@Base+0x3efa>
  40a10b:	mov    rax,QWORD PTR [rbp-0x18]
  40a10f:	jmp    40a18e <_start@@Base+0x3efe>
  40a111:	movabs rax,0xffffffff00000000
  40a11b:	and    rax,QWORD PTR [rbp-0x10]
  40a11f:	mov    rdx,rax
  40a122:	movabs rax,0x6865783200000000
  40a12c:	cmp    rdx,rax
  40a12f:	jne    40a184 <_start@@Base+0x3ef4>
  40a131:	mov    rax,QWORD PTR [rbp-0x30]
  40a135:	mov    QWORD PTR [rbp-0x8],rax
  40a139:	mov    rcx,QWORD PTR [rbp-0x50]
  40a13d:	mov    rdx,QWORD PTR [rbp-0x38]
  40a141:	mov    rsi,QWORD PTR [rbp-0x8]
  40a145:	mov    rax,QWORD PTR [rbp-0x28]
  40a149:	mov    r8,rcx
  40a14c:	mov    ecx,0x4
  40a151:	mov    rdi,rax
  40a154:	call   4285be <flatcc_json_parser_match_constant@@Base>
  40a159:	mov    QWORD PTR [rbp-0x30],rax
  40a15d:	mov    rax,QWORD PTR [rbp-0x30]
  40a161:	cmp    rax,QWORD PTR [rbp-0x8]
  40a165:	je     40a17e <_start@@Base+0x3eee>
  40a167:	mov    rax,QWORD PTR [rbp-0x48]
  40a16b:	mov    QWORD PTR [rax],0x7eafbeaf
  40a172:	mov    rax,QWORD PTR [rbp-0x40]
  40a176:	mov    DWORD PTR [rax],0x0
  40a17c:	jmp    40a18a <_start@@Base+0x3efa>
  40a17e:	mov    rax,QWORD PTR [rbp-0x18]
  40a182:	jmp    40a18e <_start@@Base+0x3efe>
  40a184:	mov    rax,QWORD PTR [rbp-0x18]
  40a188:	jmp    40a18e <_start@@Base+0x3efe>
  40a18a:	mov    rax,QWORD PTR [rbp-0x30]
  40a18e:	leave  
  40a18f:	ret    
  40a190:	endbr64 
  40a194:	push   rbp
  40a195:	mov    rbp,rsp
  40a198:	sub    rsp,0x50
  40a19c:	mov    QWORD PTR [rbp-0x28],rdi
  40a1a0:	mov    QWORD PTR [rbp-0x30],rsi
  40a1a4:	mov    QWORD PTR [rbp-0x38],rdx
  40a1a8:	mov    QWORD PTR [rbp-0x40],rcx
  40a1ac:	mov    QWORD PTR [rbp-0x48],r8
  40a1b0:	mov    QWORD PTR [rbp-0x50],r9
  40a1b4:	mov    rax,QWORD PTR [rbp-0x30]
  40a1b8:	mov    QWORD PTR [rbp-0x18],rax
  40a1bc:	mov    rdx,QWORD PTR [rbp-0x38]
  40a1c0:	mov    rax,QWORD PTR [rbp-0x30]
  40a1c4:	mov    rsi,rdx
  40a1c7:	mov    rdi,rax
  40a1ca:	call   406876 <_start@@Base+0x5e6>
  40a1cf:	mov    QWORD PTR [rbp-0x10],rax
  40a1d3:	movabs rax,0x477265656dffffff
  40a1dd:	cmp    QWORD PTR [rbp-0x10],rax
  40a1e1:	ja     40a269 <_start@@Base+0x3fd9>
  40a1e7:	movabs rax,0xffffffff00000000
  40a1f1:	and    rax,QWORD PTR [rbp-0x10]
  40a1f5:	mov    rdx,rax
  40a1f8:	movabs rax,0x426c756500000000
  40a202:	cmp    rdx,rax
  40a205:	jne    40a260 <_start@@Base+0x3fd0>
  40a207:	mov    rax,QWORD PTR [rbp-0x30]
  40a20b:	mov    QWORD PTR [rbp-0x8],rax
  40a20f:	mov    rcx,QWORD PTR [rbp-0x50]
  40a213:	mov    rdx,QWORD PTR [rbp-0x38]
  40a217:	mov    rsi,QWORD PTR [rbp-0x8]
  40a21b:	mov    rax,QWORD PTR [rbp-0x28]
  40a21f:	mov    r8,rcx
  40a222:	mov    ecx,0x4
  40a227:	mov    rdi,rax
  40a22a:	call   4285be <flatcc_json_parser_match_constant@@Base>
  40a22f:	mov    QWORD PTR [rbp-0x30],rax
  40a233:	mov    rax,QWORD PTR [rbp-0x30]
  40a237:	cmp    rax,QWORD PTR [rbp-0x8]
  40a23b:	je     40a257 <_start@@Base+0x3fc7>
  40a23d:	mov    rax,QWORD PTR [rbp-0x48]
  40a241:	mov    QWORD PTR [rax],0x8
  40a248:	mov    rax,QWORD PTR [rbp-0x40]
  40a24c:	mov    DWORD PTR [rax],0x0
  40a252:	jmp    40a351 <_start@@Base+0x40c1>
  40a257:	mov    rax,QWORD PTR [rbp-0x18]
  40a25b:	jmp    40a355 <_start@@Base+0x40c5>
  40a260:	mov    rax,QWORD PTR [rbp-0x18]
  40a264:	jmp    40a355 <_start@@Base+0x40c5>
  40a269:	movabs rax,0xffffff0000000000
  40a273:	and    rax,QWORD PTR [rbp-0x10]
  40a277:	mov    rdx,rax
  40a27a:	movabs rax,0x5265640000000000
  40a284:	cmp    rdx,rax
  40a287:	jne    40a2dc <_start@@Base+0x404c>
  40a289:	mov    rax,QWORD PTR [rbp-0x30]
  40a28d:	mov    QWORD PTR [rbp-0x8],rax
  40a291:	mov    rcx,QWORD PTR [rbp-0x50]
  40a295:	mov    rdx,QWORD PTR [rbp-0x38]
  40a299:	mov    rsi,QWORD PTR [rbp-0x8]
  40a29d:	mov    rax,QWORD PTR [rbp-0x28]
  40a2a1:	mov    r8,rcx
  40a2a4:	mov    ecx,0x3
  40a2a9:	mov    rdi,rax
  40a2ac:	call   4285be <flatcc_json_parser_match_constant@@Base>
  40a2b1:	mov    QWORD PTR [rbp-0x30],rax
  40a2b5:	mov    rax,QWORD PTR [rbp-0x30]
  40a2b9:	cmp    rax,QWORD PTR [rbp-0x8]
  40a2bd:	je     40a2d6 <_start@@Base+0x4046>
  40a2bf:	mov    rax,QWORD PTR [rbp-0x48]
  40a2c3:	mov    QWORD PTR [rax],0x1
  40a2ca:	mov    rax,QWORD PTR [rbp-0x40]
  40a2ce:	mov    DWORD PTR [rax],0x0
  40a2d4:	jmp    40a351 <_start@@Base+0x40c1>
  40a2d6:	mov    rax,QWORD PTR [rbp-0x18]
  40a2da:	jmp    40a355 <_start@@Base+0x40c5>
  40a2dc:	mov    rax,QWORD PTR [rbp-0x10]
  40a2e0:	and    rax,0xffffffffff000000
  40a2e6:	mov    rdx,rax
  40a2e9:	movabs rax,0x477265656e000000
  40a2f3:	cmp    rdx,rax
  40a2f6:	jne    40a34b <_start@@Base+0x40bb>
  40a2f8:	mov    rax,QWORD PTR [rbp-0x30]
  40a2fc:	mov    QWORD PTR [rbp-0x8],rax
  40a300:	mov    rcx,QWORD PTR [rbp-0x50]
  40a304:	mov    rdx,QWORD PTR [rbp-0x38]
  40a308:	mov    rsi,QWORD PTR [rbp-0x8]
  40a30c:	mov    rax,QWORD PTR [rbp-0x28]
  40a310:	mov    r8,rcx
  40a313:	mov    ecx,0x5
  40a318:	mov    rdi,rax
  40a31b:	call   4285be <flatcc_json_parser_match_constant@@Base>
  40a320:	mov    QWORD PTR [rbp-0x30],rax
  40a324:	mov    rax,QWORD PTR [rbp-0x30]
  40a328:	cmp    rax,QWORD PTR [rbp-0x8]
  40a32c:	je     40a345 <_start@@Base+0x40b5>
  40a32e:	mov    rax,QWORD PTR [rbp-0x48]
  40a332:	mov    QWORD PTR [rax],0x2
  40a339:	mov    rax,QWORD PTR [rbp-0x40]
  40a33d:	mov    DWORD PTR [rax],0x0
  40a343:	jmp    40a351 <_start@@Base+0x40c1>
  40a345:	mov    rax,QWORD PTR [rbp-0x18]
  40a349:	jmp    40a355 <_start@@Base+0x40c5>
  40a34b:	mov    rax,QWORD PTR [rbp-0x18]
  40a34f:	jmp    40a355 <_start@@Base+0x40c5>
  40a351:	mov    rax,QWORD PTR [rbp-0x30]
  40a355:	leave  
  40a356:	ret    
  40a357:	endbr64 
  40a35b:	push   rbp
  40a35c:	mov    rbp,rsp
  40a35f:	sub    rsp,0x30
  40a363:	mov    QWORD PTR [rbp-0x8],rdi
  40a367:	mov    QWORD PTR [rbp-0x10],rsi
  40a36b:	mov    QWORD PTR [rbp-0x18],rdx
  40a36f:	mov    eax,ecx
  40a371:	mov    QWORD PTR [rbp-0x28],r8
  40a375:	mov    BYTE PTR [rbp-0x1c],al
  40a378:	mov    rax,QWORD PTR [rbp-0x28]
  40a37c:	mov    DWORD PTR [rax],0x0
  40a382:	movzx  eax,BYTE PTR [rbp-0x1c]
  40a386:	cmp    eax,0x4
  40a389:	ja     40a44a <_start@@Base+0x41ba>
  40a38f:	mov    eax,eax
  40a391:	lea    rdx,[rax*4+0x0]
  40a399:	lea    rax,[rip+0x2cca8]        # 437048 <_IO_stdin_used@@Base+0x48>
  40a3a0:	mov    eax,DWORD PTR [rdx+rax*1]
  40a3a3:	movsxd rdx,eax
  40a3a6:	lea    rax,[rip+0x2cc9b]        # 437048 <_IO_stdin_used@@Base+0x48>
  40a3ad:	add    rax,rdx
  40a3b0:	notrack jmp rax
  40a3b3:	mov    rdx,QWORD PTR [rbp-0x18]
  40a3b7:	mov    rcx,QWORD PTR [rbp-0x10]
  40a3bb:	mov    rax,QWORD PTR [rbp-0x8]
  40a3bf:	mov    rsi,rcx
  40a3c2:	mov    rdi,rax
  40a3c5:	call   4073f1 <_start@@Base+0x1161>
  40a3ca:	jmp    40a4c6 <_start@@Base+0x4236>
  40a3cf:	mov    rcx,QWORD PTR [rbp-0x28]
  40a3d3:	mov    rdx,QWORD PTR [rbp-0x18]
  40a3d7:	mov    rsi,QWORD PTR [rbp-0x10]
  40a3db:	mov    rax,QWORD PTR [rbp-0x8]
  40a3df:	mov    rdi,rax
  40a3e2:	call   40f3c3 <_start@@Base+0x9133>
  40a3e7:	mov    QWORD PTR [rbp-0x10],rax
  40a3eb:	jmp    40a48c <_start@@Base+0x41fc>
  40a3f0:	mov    rcx,QWORD PTR [rbp-0x28]
  40a3f4:	mov    rdx,QWORD PTR [rbp-0x18]
  40a3f8:	mov    rsi,QWORD PTR [rbp-0x10]
  40a3fc:	mov    rax,QWORD PTR [rbp-0x8]
  40a400:	mov    rdi,rax
  40a403:	call   40b153 <_start@@Base+0x4ec3>
  40a408:	mov    QWORD PTR [rbp-0x10],rax
  40a40c:	jmp    40a48c <_start@@Base+0x41fc>
  40a40e:	mov    rcx,QWORD PTR [rbp-0x28]
  40a412:	mov    rdx,QWORD PTR [rbp-0x18]
  40a416:	mov    rsi,QWORD PTR [rbp-0x10]
  40a41a:	mov    rax,QWORD PTR [rbp-0x8]
  40a41e:	mov    rdi,rax
  40a421:	call   4097af <_start@@Base+0x351f>
  40a426:	mov    QWORD PTR [rbp-0x10],rax
  40a42a:	jmp    40a48c <_start@@Base+0x41fc>
  40a42c:	mov    rcx,QWORD PTR [rbp-0x28]
  40a430:	mov    rdx,QWORD PTR [rbp-0x18]
  40a434:	mov    rsi,QWORD PTR [rbp-0x10]
  40a438:	mov    rax,QWORD PTR [rbp-0x8]
  40a43c:	mov    rdi,rax
  40a43f:	call   40d229 <_start@@Base+0x6f99>
  40a444:	mov    QWORD PTR [rbp-0x10],rax
  40a448:	jmp    40a48c <_start@@Base+0x41fc>
  40a44a:	mov    rax,QWORD PTR [rbp-0x8]
  40a44e:	mov    eax,DWORD PTR [rax+0x10]
  40a451:	and    eax,0x1
  40a454:	test   eax,eax
  40a456:	jne    40a473 <_start@@Base+0x41e3>
  40a458:	mov    rdx,QWORD PTR [rbp-0x18]
  40a45c:	mov    rsi,QWORD PTR [rbp-0x10]
  40a460:	mov    rax,QWORD PTR [rbp-0x8]
  40a464:	mov    ecx,0xf
  40a469:	mov    rdi,rax
  40a46c:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40a471:	jmp    40a4c6 <_start@@Base+0x4236>
  40a473:	mov    rdx,QWORD PTR [rbp-0x18]
  40a477:	mov    rcx,QWORD PTR [rbp-0x10]
  40a47b:	mov    rax,QWORD PTR [rbp-0x8]
  40a47f:	mov    rsi,rcx
  40a482:	mov    rdi,rax
  40a485:	call   428dd2 <flatcc_json_parser_generic_json@@Base>
  40a48a:	jmp    40a4c6 <_start@@Base+0x4236>
  40a48c:	mov    rax,QWORD PTR [rbp-0x8]
  40a490:	mov    eax,DWORD PTR [rax+0x20]
  40a493:	test   eax,eax
  40a495:	je     40a49d <_start@@Base+0x420d>
  40a497:	mov    rax,QWORD PTR [rbp-0x10]
  40a49b:	jmp    40a4c6 <_start@@Base+0x4236>
  40a49d:	mov    rax,QWORD PTR [rbp-0x28]
  40a4a1:	mov    eax,DWORD PTR [rax]
  40a4a3:	test   eax,eax
  40a4a5:	jne    40a4c2 <_start@@Base+0x4232>
  40a4a7:	mov    rdx,QWORD PTR [rbp-0x18]
  40a4ab:	mov    rsi,QWORD PTR [rbp-0x10]
  40a4af:	mov    rax,QWORD PTR [rbp-0x8]
  40a4b3:	mov    ecx,0x21
  40a4b8:	mov    rdi,rax
  40a4bb:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40a4c0:	jmp    40a4c6 <_start@@Base+0x4236>
  40a4c2:	mov    rax,QWORD PTR [rbp-0x10]
  40a4c6:	leave  
  40a4c7:	ret    
  40a4c8:	endbr64 
  40a4cc:	push   rbp
  40a4cd:	mov    rbp,rsp
  40a4d0:	mov    eax,edi
  40a4d2:	mov    BYTE PTR [rbp-0x4],al
  40a4d5:	movzx  eax,BYTE PTR [rbp-0x4]
  40a4d9:	cmp    eax,0x4
  40a4dc:	ja     40a525 <_start@@Base+0x4295>
  40a4de:	mov    eax,eax
  40a4e0:	lea    rdx,[rax*4+0x0]
  40a4e8:	lea    rax,[rip+0x2cb6d]        # 43705c <_IO_stdin_used@@Base+0x5c>
  40a4ef:	mov    eax,DWORD PTR [rdx+rax*1]
  40a4f2:	movsxd rdx,eax
  40a4f5:	lea    rax,[rip+0x2cb60]        # 43705c <_IO_stdin_used@@Base+0x5c>
  40a4fc:	add    rax,rdx
  40a4ff:	notrack jmp rax
  40a502:	mov    eax,0x1
  40a507:	jmp    40a52a <_start@@Base+0x429a>
  40a509:	mov    eax,0x1
  40a50e:	jmp    40a52a <_start@@Base+0x429a>
  40a510:	mov    eax,0x1
  40a515:	jmp    40a52a <_start@@Base+0x429a>
  40a517:	mov    eax,0x1
  40a51c:	jmp    40a52a <_start@@Base+0x429a>
  40a51e:	mov    eax,0x1
  40a523:	jmp    40a52a <_start@@Base+0x429a>
  40a525:	mov    eax,0x0
  40a52a:	pop    rbp
  40a52b:	ret    
  40a52c:	endbr64 
  40a530:	push   rbp
  40a531:	mov    rbp,rsp
  40a534:	sub    rsp,0x50
  40a538:	mov    QWORD PTR [rbp-0x28],rdi
  40a53c:	mov    QWORD PTR [rbp-0x30],rsi
  40a540:	mov    QWORD PTR [rbp-0x38],rdx
  40a544:	mov    QWORD PTR [rbp-0x40],rcx
  40a548:	mov    QWORD PTR [rbp-0x48],r8
  40a54c:	mov    QWORD PTR [rbp-0x50],r9
  40a550:	mov    rax,QWORD PTR [rbp-0x30]
  40a554:	mov    QWORD PTR [rbp-0x18],rax
  40a558:	mov    rdx,QWORD PTR [rbp-0x38]
  40a55c:	mov    rax,QWORD PTR [rbp-0x30]
  40a560:	mov    rsi,rdx
  40a563:	mov    rdi,rax
  40a566:	call   406876 <_start@@Base+0x5e6>
  40a56b:	mov    QWORD PTR [rbp-0x10],rax
  40a56f:	movabs rax,0x4d6f6e73746571ff
  40a579:	cmp    QWORD PTR [rbp-0x10],rax
  40a57d:	ja     40a605 <_start@@Base+0x4375>
  40a583:	movabs rax,0xffffff0000000000
  40a58d:	and    rax,QWORD PTR [rbp-0x10]
  40a591:	mov    rdx,rax
  40a594:	movabs rax,0x416c740000000000
  40a59e:	cmp    rdx,rax
  40a5a1:	jne    40a5fc <_start@@Base+0x436c>
  40a5a3:	mov    rax,QWORD PTR [rbp-0x30]
  40a5a7:	mov    QWORD PTR [rbp-0x8],rax
  40a5ab:	mov    rcx,QWORD PTR [rbp-0x50]
  40a5af:	mov    rdx,QWORD PTR [rbp-0x38]
  40a5b3:	mov    rsi,QWORD PTR [rbp-0x8]
  40a5b7:	mov    rax,QWORD PTR [rbp-0x28]
  40a5bb:	mov    r8,rcx
  40a5be:	mov    ecx,0x3
  40a5c3:	mov    rdi,rax
  40a5c6:	call   4285be <flatcc_json_parser_match_constant@@Base>
  40a5cb:	mov    QWORD PTR [rbp-0x30],rax
  40a5cf:	mov    rax,QWORD PTR [rbp-0x30]
  40a5d3:	cmp    rax,QWORD PTR [rbp-0x8]
  40a5d7:	je     40a5f3 <_start@@Base+0x4363>
  40a5d9:	mov    rax,QWORD PTR [rbp-0x48]
  40a5dd:	mov    QWORD PTR [rax],0x4
  40a5e4:	mov    rax,QWORD PTR [rbp-0x40]
  40a5e8:	mov    DWORD PTR [rax],0x0
  40a5ee:	jmp    40a829 <_start@@Base+0x4599>
  40a5f3:	mov    rax,QWORD PTR [rbp-0x18]
  40a5f7:	jmp    40a82d <_start@@Base+0x459d>
  40a5fc:	mov    rax,QWORD PTR [rbp-0x18]
  40a600:	jmp    40a82d <_start@@Base+0x459d>
  40a605:	movabs rax,0x4d6f6e7374657232
  40a60f:	cmp    QWORD PTR [rbp-0x10],rax
  40a613:	jne    40a669 <_start@@Base+0x43d9>
  40a615:	mov    rax,QWORD PTR [rbp-0x30]
  40a619:	mov    QWORD PTR [rbp-0x8],rax
  40a61d:	mov    rcx,QWORD PTR [rbp-0x50]
  40a621:	mov    rdx,QWORD PTR [rbp-0x38]
  40a625:	mov    rsi,QWORD PTR [rbp-0x8]
  40a629:	mov    rax,QWORD PTR [rbp-0x28]
  40a62d:	mov    r8,rcx
  40a630:	mov    ecx,0x8
  40a635:	mov    rdi,rax
  40a638:	call   4285be <flatcc_json_parser_match_constant@@Base>
  40a63d:	mov    QWORD PTR [rbp-0x30],rax
  40a641:	mov    rax,QWORD PTR [rbp-0x30]
  40a645:	cmp    rax,QWORD PTR [rbp-0x8]
  40a649:	je     40a6d1 <_start@@Base+0x4441>
  40a64f:	mov    rax,QWORD PTR [rbp-0x48]
  40a653:	mov    QWORD PTR [rax],0x3
  40a65a:	mov    rax,QWORD PTR [rbp-0x40]
  40a65e:	mov    DWORD PTR [rax],0x0
  40a664:	jmp    40a829 <_start@@Base+0x4599>
  40a669:	mov    rax,QWORD PTR [rbp-0x10]
  40a66d:	mov    al,0x0
  40a66f:	mov    rdx,rax
  40a672:	movabs rax,0x4d6f6e7374657200
  40a67c:	cmp    rdx,rax
  40a67f:	jne    40a6d4 <_start@@Base+0x4444>
  40a681:	mov    rax,QWORD PTR [rbp-0x30]
  40a685:	mov    QWORD PTR [rbp-0x8],rax
  40a689:	mov    rcx,QWORD PTR [rbp-0x50]
  40a68d:	mov    rdx,QWORD PTR [rbp-0x38]
  40a691:	mov    rsi,QWORD PTR [rbp-0x8]
  40a695:	mov    rax,QWORD PTR [rbp-0x28]
  40a699:	mov    r8,rcx
  40a69c:	mov    ecx,0x7
  40a6a1:	mov    rdi,rax
  40a6a4:	call   4285be <flatcc_json_parser_match_constant@@Base>
  40a6a9:	mov    QWORD PTR [rbp-0x30],rax
  40a6ad:	mov    rax,QWORD PTR [rbp-0x30]
  40a6b1:	cmp    rax,QWORD PTR [rbp-0x8]
  40a6b5:	je     40a6d7 <_start@@Base+0x4447>
  40a6b7:	mov    rax,QWORD PTR [rbp-0x48]
  40a6bb:	mov    QWORD PTR [rax],0x1
  40a6c2:	mov    rax,QWORD PTR [rbp-0x40]
  40a6c6:	mov    DWORD PTR [rax],0x0
  40a6cc:	jmp    40a829 <_start@@Base+0x4599>
  40a6d1:	nop
  40a6d2:	jmp    40a6d8 <_start@@Base+0x4448>
  40a6d4:	nop
  40a6d5:	jmp    40a6d8 <_start@@Base+0x4448>
  40a6d7:	nop
  40a6d8:	movabs rax,0xffffffff00000000
  40a6e2:	and    rax,QWORD PTR [rbp-0x10]
  40a6e6:	mov    rdx,rax
  40a6e9:	movabs rax,0x4e4f4e4500000000
  40a6f3:	cmp    rdx,rax
  40a6f6:	jne    40a748 <_start@@Base+0x44b8>
  40a6f8:	mov    rax,QWORD PTR [rbp-0x30]
  40a6fc:	mov    QWORD PTR [rbp-0x8],rax
  40a700:	mov    rcx,QWORD PTR [rbp-0x50]
  40a704:	mov    rdx,QWORD PTR [rbp-0x38]
  40a708:	mov    rsi,QWORD PTR [rbp-0x8]
  40a70c:	mov    rax,QWORD PTR [rbp-0x28]
  40a710:	mov    r8,rcx
  40a713:	mov    ecx,0x4
  40a718:	mov    rdi,rax
  40a71b:	call   4285be <flatcc_json_parser_match_constant@@Base>
  40a720:	mov    QWORD PTR [rbp-0x30],rax
  40a724:	mov    rax,QWORD PTR [rbp-0x30]
  40a728:	cmp    rax,QWORD PTR [rbp-0x8]
  40a72c:	je     40a74b <_start@@Base+0x44bb>
  40a72e:	mov    rax,QWORD PTR [rbp-0x48]
  40a732:	mov    QWORD PTR [rax],0x0
  40a739:	mov    rax,QWORD PTR [rbp-0x40]
  40a73d:	mov    DWORD PTR [rax],0x0
  40a743:	jmp    40a829 <_start@@Base+0x4599>
  40a748:	nop
  40a749:	jmp    40a74c <_start@@Base+0x44bc>
  40a74b:	nop
  40a74c:	movabs rax,0x5465737453696d70
  40a756:	cmp    QWORD PTR [rbp-0x10],rax
  40a75a:	jne    40a823 <_start@@Base+0x4593>
  40a760:	add    QWORD PTR [rbp-0x30],0x8
  40a765:	mov    rdx,QWORD PTR [rbp-0x38]
  40a769:	mov    rax,QWORD PTR [rbp-0x30]
  40a76d:	mov    rsi,rdx
  40a770:	mov    rdi,rax
  40a773:	call   406876 <_start@@Base+0x5e6>
  40a778:	mov    QWORD PTR [rbp-0x10],rax
  40a77c:	movabs rax,0x6c655461626c6557
  40a786:	cmp    QWORD PTR [rbp-0x10],rax
  40a78a:	jne    40a81d <_start@@Base+0x458d>
  40a790:	add    QWORD PTR [rbp-0x30],0x8
  40a795:	mov    rdx,QWORD PTR [rbp-0x38]
  40a799:	mov    rax,QWORD PTR [rbp-0x30]
  40a79d:	mov    rsi,rdx
  40a7a0:	mov    rdi,rax
  40a7a3:	call   406876 <_start@@Base+0x5e6>
  40a7a8:	mov    QWORD PTR [rbp-0x10],rax
  40a7ac:	mov    rax,QWORD PTR [rbp-0x10]
  40a7b0:	mov    al,0x0
  40a7b2:	mov    rdx,rax
  40a7b5:	movabs rax,0x697468456e756d00
  40a7bf:	cmp    rdx,rax
  40a7c2:	jne    40a817 <_start@@Base+0x4587>
  40a7c4:	mov    rax,QWORD PTR [rbp-0x30]
  40a7c8:	mov    QWORD PTR [rbp-0x8],rax
  40a7cc:	mov    rcx,QWORD PTR [rbp-0x50]
  40a7d0:	mov    rdx,QWORD PTR [rbp-0x38]
  40a7d4:	mov    rsi,QWORD PTR [rbp-0x8]
  40a7d8:	mov    rax,QWORD PTR [rbp-0x28]
  40a7dc:	mov    r8,rcx
  40a7df:	mov    ecx,0x7
  40a7e4:	mov    rdi,rax
  40a7e7:	call   4285be <flatcc_json_parser_match_constant@@Base>
  40a7ec:	mov    QWORD PTR [rbp-0x30],rax
  40a7f0:	mov    rax,QWORD PTR [rbp-0x30]
  40a7f4:	cmp    rax,QWORD PTR [rbp-0x8]
  40a7f8:	je     40a811 <_start@@Base+0x4581>
  40a7fa:	mov    rax,QWORD PTR [rbp-0x48]
  40a7fe:	mov    QWORD PTR [rax],0x2
  40a805:	mov    rax,QWORD PTR [rbp-0x40]
  40a809:	mov    DWORD PTR [rax],0x0
  40a80f:	jmp    40a829 <_start@@Base+0x4599>
  40a811:	mov    rax,QWORD PTR [rbp-0x18]
  40a815:	jmp    40a82d <_start@@Base+0x459d>
  40a817:	mov    rax,QWORD PTR [rbp-0x18]
  40a81b:	jmp    40a82d <_start@@Base+0x459d>
  40a81d:	mov    rax,QWORD PTR [rbp-0x18]
  40a821:	jmp    40a82d <_start@@Base+0x459d>
  40a823:	mov    rax,QWORD PTR [rbp-0x18]
  40a827:	jmp    40a82d <_start@@Base+0x459d>
  40a829:	mov    rax,QWORD PTR [rbp-0x30]
  40a82d:	leave  
  40a82e:	ret    
  40a82f:	endbr64 
  40a833:	push   rbp
  40a834:	mov    rbp,rsp
  40a837:	sub    rsp,0x50
  40a83b:	mov    QWORD PTR [rbp-0x38],rdi
  40a83f:	mov    QWORD PTR [rbp-0x40],rsi
  40a843:	mov    QWORD PTR [rbp-0x48],rdx
  40a847:	mov    QWORD PTR [rbp-0x50],rcx
  40a84b:	mov    rax,QWORD PTR fs:0x28
  40a854:	mov    QWORD PTR [rbp-0x8],rax
  40a858:	xor    eax,eax
  40a85a:	lea    rcx,[rbp-0x24]
  40a85e:	mov    rdx,QWORD PTR [rbp-0x48]
  40a862:	mov    rsi,QWORD PTR [rbp-0x40]
  40a866:	mov    rax,QWORD PTR [rbp-0x38]
  40a86a:	mov    rdi,rax
  40a86d:	call   406977 <_start@@Base+0x6e7>
  40a872:	mov    QWORD PTR [rbp-0x40],rax
  40a876:	jmp    40ab0a <_start@@Base+0x487a>
  40a87b:	mov    rdx,QWORD PTR [rbp-0x48]
  40a87f:	mov    rcx,QWORD PTR [rbp-0x40]
  40a883:	mov    rax,QWORD PTR [rbp-0x38]
  40a887:	mov    rsi,rcx
  40a88a:	mov    rdi,rax
  40a88d:	call   4066e9 <_start@@Base+0x459>
  40a892:	mov    QWORD PTR [rbp-0x40],rax
  40a896:	mov    rdx,QWORD PTR [rbp-0x48]
  40a89a:	mov    rax,QWORD PTR [rbp-0x40]
  40a89e:	mov    rsi,rdx
  40a8a1:	mov    rdi,rax
  40a8a4:	call   406876 <_start@@Base+0x5e6>
  40a8a9:	mov    QWORD PTR [rbp-0x20],rax
  40a8ad:	movabs rax,0xff00000000000000
  40a8b7:	and    rax,QWORD PTR [rbp-0x20]
  40a8bb:	mov    rdx,rax
  40a8be:	movabs rax,0x6200000000000000
  40a8c8:	cmp    rdx,rax
  40a8cb:	jne    40a9c6 <_start@@Base+0x4736>
  40a8d1:	mov    rax,QWORD PTR [rbp-0x40]
  40a8d5:	mov    QWORD PTR [rbp-0x18],rax
  40a8d9:	mov    rdx,QWORD PTR [rbp-0x48]
  40a8dd:	mov    rsi,QWORD PTR [rbp-0x18]
  40a8e1:	mov    rax,QWORD PTR [rbp-0x38]
  40a8e5:	mov    ecx,0x1
  40a8ea:	mov    rdi,rax
  40a8ed:	call   406d6d <_start@@Base+0xadd>
  40a8f2:	mov    QWORD PTR [rbp-0x40],rax
  40a8f6:	mov    rax,QWORD PTR [rbp-0x18]
  40a8fa:	cmp    rax,QWORD PTR [rbp-0x40]
  40a8fe:	je     40a9a6 <_start@@Base+0x4716>
  40a904:	mov    BYTE PTR [rbp-0x26],0x0
  40a908:	mov    rax,QWORD PTR [rbp-0x50]
  40a90c:	add    rax,0x2
  40a910:	mov    QWORD PTR [rbp-0x10],rax
  40a914:	mov    rax,QWORD PTR [rbp-0x40]
  40a918:	mov    QWORD PTR [rbp-0x18],rax
  40a91c:	lea    rcx,[rbp-0x26]
  40a920:	mov    rdx,QWORD PTR [rbp-0x48]
  40a924:	mov    rsi,QWORD PTR [rbp-0x18]
  40a928:	mov    rax,QWORD PTR [rbp-0x38]
  40a92c:	mov    rdi,rax
  40a92f:	call   4079bb <_start@@Base+0x172b>
  40a934:	mov    QWORD PTR [rbp-0x40],rax
  40a938:	mov    rax,QWORD PTR [rbp-0x18]
  40a93c:	cmp    rax,QWORD PTR [rbp-0x40]
  40a940:	jne    40a98c <_start@@Base+0x46fc>
  40a942:	mov    rax,QWORD PTR [rbp-0x40]
  40a946:	mov    QWORD PTR [rbp-0x18],rax
  40a94a:	lea    rcx,[rbp-0x26]
  40a94e:	mov    rdx,QWORD PTR [rbp-0x48]
  40a952:	mov    rsi,QWORD PTR [rbp-0x18]
  40a956:	mov    rax,QWORD PTR [rbp-0x38]
  40a95a:	mov    r8,rcx
  40a95d:	lea    rcx,[rip+0x3c77c]        # 4470e0 <__data_start@@Base+0x20>
  40a964:	mov    rdi,rax
  40a967:	call   408503 <_start@@Base+0x2273>
  40a96c:	mov    QWORD PTR [rbp-0x40],rax
  40a970:	mov    rax,QWORD PTR [rbp-0x40]
  40a974:	cmp    rax,QWORD PTR [rbp-0x18]
  40a978:	je     40ab1b <_start@@Base+0x488b>
  40a97e:	mov    rax,QWORD PTR [rbp-0x40]
  40a982:	cmp    rax,QWORD PTR [rbp-0x48]
  40a986:	je     40ab1b <_start@@Base+0x488b>
  40a98c:	movzx  eax,BYTE PTR [rbp-0x26]
  40a990:	movsx  edx,al
  40a993:	mov    rax,QWORD PTR [rbp-0x10]
  40a997:	mov    esi,edx
  40a999:	mov    rdi,rax
  40a99c:	call   406459 <_start@@Base+0x1c9>
  40a9a1:	jmp    40aaee <_start@@Base+0x485e>
  40a9a6:	mov    rdx,QWORD PTR [rbp-0x48]
  40a9aa:	mov    rcx,QWORD PTR [rbp-0x40]
  40a9ae:	mov    rax,QWORD PTR [rbp-0x38]
  40a9b2:	mov    rsi,rcx
  40a9b5:	mov    rdi,rax
  40a9b8:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40a9bd:	mov    QWORD PTR [rbp-0x40],rax
  40a9c1:	jmp    40aaee <_start@@Base+0x485e>
  40a9c6:	movabs rax,0xff00000000000000
  40a9d0:	and    rax,QWORD PTR [rbp-0x20]
  40a9d4:	mov    rdx,rax
  40a9d7:	movabs rax,0x6100000000000000
  40a9e1:	cmp    rdx,rax
  40a9e4:	jne    40aad3 <_start@@Base+0x4843>
  40a9ea:	mov    rax,QWORD PTR [rbp-0x40]
  40a9ee:	mov    QWORD PTR [rbp-0x18],rax
  40a9f2:	mov    rdx,QWORD PTR [rbp-0x48]
  40a9f6:	mov    rsi,QWORD PTR [rbp-0x18]
  40a9fa:	mov    rax,QWORD PTR [rbp-0x38]
  40a9fe:	mov    ecx,0x1
  40aa03:	mov    rdi,rax
  40aa06:	call   406d6d <_start@@Base+0xadd>
  40aa0b:	mov    QWORD PTR [rbp-0x40],rax
  40aa0f:	mov    rax,QWORD PTR [rbp-0x18]
  40aa13:	cmp    rax,QWORD PTR [rbp-0x40]
  40aa17:	je     40aab6 <_start@@Base+0x4826>
  40aa1d:	mov    WORD PTR [rbp-0x26],0x0
  40aa23:	mov    rax,QWORD PTR [rbp-0x50]
  40aa27:	mov    QWORD PTR [rbp-0x10],rax
  40aa2b:	mov    rax,QWORD PTR [rbp-0x40]
  40aa2f:	mov    QWORD PTR [rbp-0x18],rax
  40aa33:	lea    rcx,[rbp-0x26]
  40aa37:	mov    rdx,QWORD PTR [rbp-0x48]
  40aa3b:	mov    rsi,QWORD PTR [rbp-0x18]
  40aa3f:	mov    rax,QWORD PTR [rbp-0x38]
  40aa43:	mov    rdi,rax
  40aa46:	call   4078f6 <_start@@Base+0x1666>
  40aa4b:	mov    QWORD PTR [rbp-0x40],rax
  40aa4f:	mov    rax,QWORD PTR [rbp-0x18]
  40aa53:	cmp    rax,QWORD PTR [rbp-0x40]
  40aa57:	jne    40aa9f <_start@@Base+0x480f>
  40aa59:	mov    rax,QWORD PTR [rbp-0x40]
  40aa5d:	mov    QWORD PTR [rbp-0x18],rax
  40aa61:	lea    rcx,[rbp-0x26]
  40aa65:	mov    rdx,QWORD PTR [rbp-0x48]
  40aa69:	mov    rsi,QWORD PTR [rbp-0x18]
  40aa6d:	mov    rax,QWORD PTR [rbp-0x38]
  40aa71:	mov    r8,rcx
  40aa74:	lea    rcx,[rip+0x3c685]        # 447100 <__data_start@@Base+0x40>
  40aa7b:	mov    rdi,rax
  40aa7e:	call   4083a1 <_start@@Base+0x2111>
  40aa83:	mov    QWORD PTR [rbp-0x40],rax
  40aa87:	mov    rax,QWORD PTR [rbp-0x40]
  40aa8b:	cmp    rax,QWORD PTR [rbp-0x18]
  40aa8f:	je     40ab1e <_start@@Base+0x488e>
  40aa95:	mov    rax,QWORD PTR [rbp-0x40]
  40aa99:	cmp    rax,QWORD PTR [rbp-0x48]
  40aa9d:	je     40ab1e <_start@@Base+0x488e>
  40aa9f:	movzx  eax,WORD PTR [rbp-0x26]
  40aaa3:	movsx  edx,ax
  40aaa6:	mov    rax,QWORD PTR [rbp-0x10]
  40aaaa:	mov    esi,edx
  40aaac:	mov    rdi,rax
  40aaaf:	call   40648e <_start@@Base+0x1fe>
  40aab4:	jmp    40aaee <_start@@Base+0x485e>
  40aab6:	mov    rdx,QWORD PTR [rbp-0x48]
  40aaba:	mov    rcx,QWORD PTR [rbp-0x40]
  40aabe:	mov    rax,QWORD PTR [rbp-0x38]
  40aac2:	mov    rsi,rcx
  40aac5:	mov    rdi,rax
  40aac8:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40aacd:	mov    QWORD PTR [rbp-0x40],rax
  40aad1:	jmp    40aaee <_start@@Base+0x485e>
  40aad3:	mov    rdx,QWORD PTR [rbp-0x48]
  40aad7:	mov    rcx,QWORD PTR [rbp-0x40]
  40aadb:	mov    rax,QWORD PTR [rbp-0x38]
  40aadf:	mov    rsi,rcx
  40aae2:	mov    rdi,rax
  40aae5:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40aaea:	mov    QWORD PTR [rbp-0x40],rax
  40aaee:	lea    rcx,[rbp-0x24]
  40aaf2:	mov    rdx,QWORD PTR [rbp-0x48]
  40aaf6:	mov    rsi,QWORD PTR [rbp-0x40]
  40aafa:	mov    rax,QWORD PTR [rbp-0x38]
  40aafe:	mov    rdi,rax
  40ab01:	call   406a34 <_start@@Base+0x7a4>
  40ab06:	mov    QWORD PTR [rbp-0x40],rax
  40ab0a:	mov    eax,DWORD PTR [rbp-0x24]
  40ab0d:	test   eax,eax
  40ab0f:	jne    40a87b <_start@@Base+0x45eb>
  40ab15:	mov    rax,QWORD PTR [rbp-0x40]
  40ab19:	jmp    40ab38 <_start@@Base+0x48a8>
  40ab1b:	nop
  40ab1c:	jmp    40ab1f <_start@@Base+0x488f>
  40ab1e:	nop
  40ab1f:	mov    rdx,QWORD PTR [rbp-0x48]
  40ab23:	mov    rsi,QWORD PTR [rbp-0x40]
  40ab27:	mov    rax,QWORD PTR [rbp-0x38]
  40ab2b:	mov    ecx,0x21
  40ab30:	mov    rdi,rax
  40ab33:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40ab38:	mov    rdi,QWORD PTR [rbp-0x8]
  40ab3c:	xor    rdi,QWORD PTR fs:0x28
  40ab45:	je     40ab4c <_start@@Base+0x48bc>
  40ab47:	call   4061a0 <__stack_chk_fail@plt>
  40ab4c:	leave  
  40ab4d:	ret    
  40ab4e:	endbr64 
  40ab52:	push   rbp
  40ab53:	mov    rbp,rsp
  40ab56:	sub    rsp,0x30
  40ab5a:	mov    QWORD PTR [rbp-0x18],rdi
  40ab5e:	mov    QWORD PTR [rbp-0x20],rsi
  40ab62:	mov    QWORD PTR [rbp-0x28],rdx
  40ab66:	mov    QWORD PTR [rbp-0x30],rcx
  40ab6a:	mov    rax,QWORD PTR [rbp-0x30]
  40ab6e:	mov    DWORD PTR [rax],0x0
  40ab74:	mov    rax,QWORD PTR [rbp-0x18]
  40ab78:	mov    rax,QWORD PTR [rax]
  40ab7b:	mov    edx,0x2
  40ab80:	mov    esi,0x4
  40ab85:	mov    rdi,rax
  40ab88:	call   41e209 <flatcc_builder_start_struct@@Base>
  40ab8d:	mov    QWORD PTR [rbp-0x8],rax
  40ab91:	cmp    QWORD PTR [rbp-0x8],0x0
  40ab96:	je     40abe5 <_start@@Base+0x4955>
  40ab98:	mov    rcx,QWORD PTR [rbp-0x8]
  40ab9c:	mov    rdx,QWORD PTR [rbp-0x28]
  40aba0:	mov    rsi,QWORD PTR [rbp-0x20]
  40aba4:	mov    rax,QWORD PTR [rbp-0x18]
  40aba8:	mov    rdi,rax
  40abab:	call   40a82f <_start@@Base+0x459f>
  40abb0:	mov    QWORD PTR [rbp-0x20],rax
  40abb4:	mov    rax,QWORD PTR [rbp-0x20]
  40abb8:	cmp    rax,QWORD PTR [rbp-0x28]
  40abbc:	je     40abe8 <_start@@Base+0x4958>
  40abbe:	mov    rax,QWORD PTR [rbp-0x18]
  40abc2:	mov    rax,QWORD PTR [rax]
  40abc5:	mov    rdi,rax
  40abc8:	call   41e28b <flatcc_builder_end_struct@@Base>
  40abcd:	mov    edx,eax
  40abcf:	mov    rax,QWORD PTR [rbp-0x30]
  40abd3:	mov    DWORD PTR [rax],edx
  40abd5:	mov    rax,QWORD PTR [rbp-0x30]
  40abd9:	mov    eax,DWORD PTR [rax]
  40abdb:	test   eax,eax
  40abdd:	je     40abe8 <_start@@Base+0x4958>
  40abdf:	mov    rax,QWORD PTR [rbp-0x20]
  40abe3:	jmp    40ac02 <_start@@Base+0x4972>
  40abe5:	nop
  40abe6:	jmp    40abe9 <_start@@Base+0x4959>
  40abe8:	nop
  40abe9:	mov    rdx,QWORD PTR [rbp-0x28]
  40abed:	mov    rsi,QWORD PTR [rbp-0x20]
  40abf1:	mov    rax,QWORD PTR [rbp-0x18]
  40abf5:	mov    ecx,0x21
  40abfa:	mov    rdi,rax
  40abfd:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40ac02:	leave  
  40ac03:	ret    
  40ac04:	endbr64 
  40ac08:	push   rbp
  40ac09:	mov    rbp,rsp
  40ac0c:	sub    rsp,0x30
  40ac10:	mov    QWORD PTR [rbp-0x18],rdi
  40ac14:	mov    QWORD PTR [rbp-0x20],rsi
  40ac18:	mov    QWORD PTR [rbp-0x28],rdx
  40ac1c:	mov    QWORD PTR [rbp-0x30],rcx
  40ac20:	mov    rax,QWORD PTR fs:0x28
  40ac29:	mov    QWORD PTR [rbp-0x8],rax
  40ac2d:	xor    eax,eax
  40ac2f:	lea    rcx,[rbp-0xc]
  40ac33:	mov    rdx,QWORD PTR [rbp-0x28]
  40ac37:	mov    rsi,QWORD PTR [rbp-0x20]
  40ac3b:	mov    rax,QWORD PTR [rbp-0x18]
  40ac3f:	mov    rdi,rax
  40ac42:	call   406977 <_start@@Base+0x6e7>
  40ac47:	mov    QWORD PTR [rbp-0x20],rax
  40ac4b:	jmp    40ac84 <_start@@Base+0x49f4>
  40ac4d:	mov    rdx,QWORD PTR [rbp-0x28]
  40ac51:	mov    rcx,QWORD PTR [rbp-0x20]
  40ac55:	mov    rax,QWORD PTR [rbp-0x18]
  40ac59:	mov    rsi,rcx
  40ac5c:	mov    rdi,rax
  40ac5f:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40ac64:	mov    QWORD PTR [rbp-0x20],rax
  40ac68:	lea    rcx,[rbp-0xc]
  40ac6c:	mov    rdx,QWORD PTR [rbp-0x28]
  40ac70:	mov    rsi,QWORD PTR [rbp-0x20]
  40ac74:	mov    rax,QWORD PTR [rbp-0x18]
  40ac78:	mov    rdi,rax
  40ac7b:	call   406a34 <_start@@Base+0x7a4>
  40ac80:	mov    QWORD PTR [rbp-0x20],rax
  40ac84:	mov    eax,DWORD PTR [rbp-0xc]
  40ac87:	test   eax,eax
  40ac89:	jne    40ac4d <_start@@Base+0x49bd>
  40ac8b:	mov    rax,QWORD PTR [rbp-0x20]
  40ac8f:	mov    rdi,QWORD PTR [rbp-0x8]
  40ac93:	xor    rdi,QWORD PTR fs:0x28
  40ac9c:	je     40aca3 <_start@@Base+0x4a13>
  40ac9e:	call   4061a0 <__stack_chk_fail@plt>
  40aca3:	leave  
  40aca4:	ret    
  40aca5:	endbr64 
  40aca9:	push   rbp
  40acaa:	mov    rbp,rsp
  40acad:	sub    rsp,0x30
  40acb1:	mov    QWORD PTR [rbp-0x18],rdi
  40acb5:	mov    QWORD PTR [rbp-0x20],rsi
  40acb9:	mov    QWORD PTR [rbp-0x28],rdx
  40acbd:	mov    QWORD PTR [rbp-0x30],rcx
  40acc1:	mov    rax,QWORD PTR [rbp-0x30]
  40acc5:	mov    DWORD PTR [rax],0x0
  40accb:	mov    rax,QWORD PTR [rbp-0x18]
  40accf:	mov    rax,QWORD PTR [rax]
  40acd2:	mov    edx,0x1
  40acd7:	mov    esi,0x0
  40acdc:	mov    rdi,rax
  40acdf:	call   41e209 <flatcc_builder_start_struct@@Base>
  40ace4:	mov    QWORD PTR [rbp-0x8],rax
  40ace8:	cmp    QWORD PTR [rbp-0x8],0x0
  40aced:	je     40ad3c <_start@@Base+0x4aac>
  40acef:	mov    rcx,QWORD PTR [rbp-0x8]
  40acf3:	mov    rdx,QWORD PTR [rbp-0x28]
  40acf7:	mov    rsi,QWORD PTR [rbp-0x20]
  40acfb:	mov    rax,QWORD PTR [rbp-0x18]
  40acff:	mov    rdi,rax
  40ad02:	call   40ac04 <_start@@Base+0x4974>
  40ad07:	mov    QWORD PTR [rbp-0x20],rax
  40ad0b:	mov    rax,QWORD PTR [rbp-0x20]
  40ad0f:	cmp    rax,QWORD PTR [rbp-0x28]
  40ad13:	je     40ad3f <_start@@Base+0x4aaf>
  40ad15:	mov    rax,QWORD PTR [rbp-0x18]
  40ad19:	mov    rax,QWORD PTR [rax]
  40ad1c:	mov    rdi,rax
  40ad1f:	call   41e28b <flatcc_builder_end_struct@@Base>
  40ad24:	mov    edx,eax
  40ad26:	mov    rax,QWORD PTR [rbp-0x30]
  40ad2a:	mov    DWORD PTR [rax],edx
  40ad2c:	mov    rax,QWORD PTR [rbp-0x30]
  40ad30:	mov    eax,DWORD PTR [rax]
  40ad32:	test   eax,eax
  40ad34:	je     40ad3f <_start@@Base+0x4aaf>
  40ad36:	mov    rax,QWORD PTR [rbp-0x20]
  40ad3a:	jmp    40ad59 <_start@@Base+0x4ac9>
  40ad3c:	nop
  40ad3d:	jmp    40ad40 <_start@@Base+0x4ab0>
  40ad3f:	nop
  40ad40:	mov    rdx,QWORD PTR [rbp-0x28]
  40ad44:	mov    rsi,QWORD PTR [rbp-0x20]
  40ad48:	mov    rax,QWORD PTR [rbp-0x18]
  40ad4c:	mov    ecx,0x21
  40ad51:	mov    rdi,rax
  40ad54:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40ad59:	leave  
  40ad5a:	ret    
  40ad5b:	endbr64 
  40ad5f:	push   rbp
  40ad60:	mov    rbp,rsp
  40ad63:	sub    rsp,0x30
  40ad67:	mov    QWORD PTR [rbp-0x18],rdi
  40ad6b:	mov    QWORD PTR [rbp-0x20],rsi
  40ad6f:	mov    QWORD PTR [rbp-0x28],rdx
  40ad73:	mov    QWORD PTR [rbp-0x30],rcx
  40ad77:	mov    rax,QWORD PTR fs:0x28
  40ad80:	mov    QWORD PTR [rbp-0x8],rax
  40ad84:	xor    eax,eax
  40ad86:	mov    rax,QWORD PTR [rbp-0x30]
  40ad8a:	mov    DWORD PTR [rax],0x0
  40ad90:	mov    rax,QWORD PTR [rbp-0x18]
  40ad94:	mov    rax,QWORD PTR [rax]
  40ad97:	mov    esi,0x0
  40ad9c:	mov    rdi,rax
  40ad9f:	call   41ed41 <flatcc_builder_start_table@@Base>
  40ada4:	test   eax,eax
  40ada6:	jne    40ae55 <_start@@Base+0x4bc5>
  40adac:	lea    rcx,[rbp-0xc]
  40adb0:	mov    rdx,QWORD PTR [rbp-0x28]
  40adb4:	mov    rsi,QWORD PTR [rbp-0x20]
  40adb8:	mov    rax,QWORD PTR [rbp-0x18]
  40adbc:	mov    rdi,rax
  40adbf:	call   406977 <_start@@Base+0x6e7>
  40adc4:	mov    QWORD PTR [rbp-0x20],rax
  40adc8:	jmp    40ae1c <_start@@Base+0x4b8c>
  40adca:	mov    rdx,QWORD PTR [rbp-0x28]
  40adce:	mov    rcx,QWORD PTR [rbp-0x20]
  40add2:	mov    rax,QWORD PTR [rbp-0x18]
  40add6:	mov    rsi,rcx
  40add9:	mov    rdi,rax
  40addc:	call   4066e9 <_start@@Base+0x459>
  40ade1:	mov    QWORD PTR [rbp-0x20],rax
  40ade5:	mov    rdx,QWORD PTR [rbp-0x28]
  40ade9:	mov    rcx,QWORD PTR [rbp-0x20]
  40aded:	mov    rax,QWORD PTR [rbp-0x18]
  40adf1:	mov    rsi,rcx
  40adf4:	mov    rdi,rax
  40adf7:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40adfc:	mov    QWORD PTR [rbp-0x20],rax
  40ae00:	lea    rcx,[rbp-0xc]
  40ae04:	mov    rdx,QWORD PTR [rbp-0x28]
  40ae08:	mov    rsi,QWORD PTR [rbp-0x20]
  40ae0c:	mov    rax,QWORD PTR [rbp-0x18]
  40ae10:	mov    rdi,rax
  40ae13:	call   406a34 <_start@@Base+0x7a4>
  40ae18:	mov    QWORD PTR [rbp-0x20],rax
  40ae1c:	mov    eax,DWORD PTR [rbp-0xc]
  40ae1f:	test   eax,eax
  40ae21:	jne    40adca <_start@@Base+0x4b3a>
  40ae23:	mov    rax,QWORD PTR [rbp-0x18]
  40ae27:	mov    eax,DWORD PTR [rax+0x20]
  40ae2a:	test   eax,eax
  40ae2c:	jne    40ae58 <_start@@Base+0x4bc8>
  40ae2e:	mov    rax,QWORD PTR [rbp-0x18]
  40ae32:	mov    rax,QWORD PTR [rax]
  40ae35:	mov    rdi,rax
  40ae38:	call   41f850 <flatcc_builder_end_table@@Base>
  40ae3d:	mov    edx,eax
  40ae3f:	mov    rax,QWORD PTR [rbp-0x30]
  40ae43:	mov    DWORD PTR [rax],edx
  40ae45:	mov    rax,QWORD PTR [rbp-0x30]
  40ae49:	mov    eax,DWORD PTR [rax]
  40ae4b:	test   eax,eax
  40ae4d:	je     40ae5b <_start@@Base+0x4bcb>
  40ae4f:	mov    rax,QWORD PTR [rbp-0x20]
  40ae53:	jmp    40ae75 <_start@@Base+0x4be5>
  40ae55:	nop
  40ae56:	jmp    40ae5c <_start@@Base+0x4bcc>
  40ae58:	nop
  40ae59:	jmp    40ae5c <_start@@Base+0x4bcc>
  40ae5b:	nop
  40ae5c:	mov    rdx,QWORD PTR [rbp-0x28]
  40ae60:	mov    rsi,QWORD PTR [rbp-0x20]
  40ae64:	mov    rax,QWORD PTR [rbp-0x18]
  40ae68:	mov    ecx,0x21
  40ae6d:	mov    rdi,rax
  40ae70:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40ae75:	mov    rdi,QWORD PTR [rbp-0x8]
  40ae79:	xor    rdi,QWORD PTR fs:0x28
  40ae82:	je     40ae89 <_start@@Base+0x4bf9>
  40ae84:	call   4061a0 <__stack_chk_fail@plt>
  40ae89:	leave  
  40ae8a:	ret    
  40ae8b:	endbr64 
  40ae8f:	push   rbp
  40ae90:	mov    rbp,rsp
  40ae93:	sub    rsp,0x50
  40ae97:	mov    QWORD PTR [rbp-0x38],rdi
  40ae9b:	mov    QWORD PTR [rbp-0x40],rsi
  40ae9f:	mov    QWORD PTR [rbp-0x48],rdx
  40aea3:	mov    QWORD PTR [rbp-0x50],rcx
  40aea7:	mov    rax,QWORD PTR fs:0x28
  40aeb0:	mov    QWORD PTR [rbp-0x8],rax
  40aeb4:	xor    eax,eax
  40aeb6:	mov    rax,QWORD PTR [rbp-0x50]
  40aeba:	mov    DWORD PTR [rax],0x0
  40aec0:	mov    rax,QWORD PTR [rbp-0x38]
  40aec4:	mov    rax,QWORD PTR [rax]
  40aec7:	mov    esi,0x1
  40aecc:	mov    rdi,rax
  40aecf:	call   41ed41 <flatcc_builder_start_table@@Base>
  40aed4:	test   eax,eax
  40aed6:	jne    40b05a <_start@@Base+0x4dca>
  40aedc:	lea    rcx,[rbp-0x24]
  40aee0:	mov    rdx,QWORD PTR [rbp-0x48]
  40aee4:	mov    rsi,QWORD PTR [rbp-0x40]
  40aee8:	mov    rax,QWORD PTR [rbp-0x38]
  40aeec:	mov    rdi,rax
  40aeef:	call   406977 <_start@@Base+0x6e7>
  40aef4:	mov    QWORD PTR [rbp-0x40],rax
  40aef8:	jmp    40b01d <_start@@Base+0x4d8d>
  40aefd:	mov    rdx,QWORD PTR [rbp-0x48]
  40af01:	mov    rcx,QWORD PTR [rbp-0x40]
  40af05:	mov    rax,QWORD PTR [rbp-0x38]
  40af09:	mov    rsi,rcx
  40af0c:	mov    rdi,rax
  40af0f:	call   4066e9 <_start@@Base+0x459>
  40af14:	mov    QWORD PTR [rbp-0x40],rax
  40af18:	mov    rdx,QWORD PTR [rbp-0x48]
  40af1c:	mov    rax,QWORD PTR [rbp-0x40]
  40af20:	mov    rsi,rdx
  40af23:	mov    rdi,rax
  40af26:	call   406876 <_start@@Base+0x5e6>
  40af2b:	mov    QWORD PTR [rbp-0x20],rax
  40af2f:	mov    rax,QWORD PTR [rbp-0x20]
  40af33:	and    rax,0xffffffffff000000
  40af39:	mov    rdx,rax
  40af3c:	movabs rax,0x656d707479000000
  40af46:	cmp    rdx,rax
  40af49:	jne    40afe6 <_start@@Base+0x4d56>
  40af4f:	mov    rax,QWORD PTR [rbp-0x40]
  40af53:	mov    QWORD PTR [rbp-0x18],rax
  40af57:	mov    rdx,QWORD PTR [rbp-0x48]
  40af5b:	mov    rsi,QWORD PTR [rbp-0x18]
  40af5f:	mov    rax,QWORD PTR [rbp-0x38]
  40af63:	mov    ecx,0x5
  40af68:	mov    rdi,rax
  40af6b:	call   406d6d <_start@@Base+0xadd>
  40af70:	mov    QWORD PTR [rbp-0x40],rax
  40af74:	mov    rax,QWORD PTR [rbp-0x18]
  40af78:	cmp    rax,QWORD PTR [rbp-0x40]
  40af7c:	je     40afc9 <_start@@Base+0x4d39>
  40af7e:	mov    rax,QWORD PTR [rbp-0x38]
  40af82:	mov    rax,QWORD PTR [rax]
  40af85:	mov    ecx,0x1
  40af8a:	mov    edx,0x0
  40af8f:	mov    esi,0x0
  40af94:	mov    rdi,rax
  40af97:	call   420ef1 <flatcc_builder_table_add@@Base>
  40af9c:	mov    QWORD PTR [rbp-0x10],rax
  40afa0:	cmp    QWORD PTR [rbp-0x10],0x0
  40afa5:	je     40b05d <_start@@Base+0x4dcd>
  40afab:	mov    rcx,QWORD PTR [rbp-0x10]
  40afaf:	mov    rdx,QWORD PTR [rbp-0x48]
  40afb3:	mov    rsi,QWORD PTR [rbp-0x40]
  40afb7:	mov    rax,QWORD PTR [rbp-0x38]
  40afbb:	mov    rdi,rax
  40afbe:	call   40ac04 <_start@@Base+0x4974>
  40afc3:	mov    QWORD PTR [rbp-0x40],rax
  40afc7:	jmp    40b001 <_start@@Base+0x4d71>
  40afc9:	mov    rdx,QWORD PTR [rbp-0x48]
  40afcd:	mov    rcx,QWORD PTR [rbp-0x40]
  40afd1:	mov    rax,QWORD PTR [rbp-0x38]
  40afd5:	mov    rsi,rcx
  40afd8:	mov    rdi,rax
  40afdb:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40afe0:	mov    QWORD PTR [rbp-0x40],rax
  40afe4:	jmp    40b001 <_start@@Base+0x4d71>
  40afe6:	mov    rdx,QWORD PTR [rbp-0x48]
  40afea:	mov    rcx,QWORD PTR [rbp-0x40]
  40afee:	mov    rax,QWORD PTR [rbp-0x38]
  40aff2:	mov    rsi,rcx
  40aff5:	mov    rdi,rax
  40aff8:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40affd:	mov    QWORD PTR [rbp-0x40],rax
  40b001:	lea    rcx,[rbp-0x24]
  40b005:	mov    rdx,QWORD PTR [rbp-0x48]
  40b009:	mov    rsi,QWORD PTR [rbp-0x40]
  40b00d:	mov    rax,QWORD PTR [rbp-0x38]
  40b011:	mov    rdi,rax
  40b014:	call   406a34 <_start@@Base+0x7a4>
  40b019:	mov    QWORD PTR [rbp-0x40],rax
  40b01d:	mov    eax,DWORD PTR [rbp-0x24]
  40b020:	test   eax,eax
  40b022:	jne    40aefd <_start@@Base+0x4c6d>
  40b028:	mov    rax,QWORD PTR [rbp-0x38]
  40b02c:	mov    eax,DWORD PTR [rax+0x20]
  40b02f:	test   eax,eax
  40b031:	jne    40b060 <_start@@Base+0x4dd0>
  40b033:	mov    rax,QWORD PTR [rbp-0x38]
  40b037:	mov    rax,QWORD PTR [rax]
  40b03a:	mov    rdi,rax
  40b03d:	call   41f850 <flatcc_builder_end_table@@Base>
  40b042:	mov    edx,eax
  40b044:	mov    rax,QWORD PTR [rbp-0x50]
  40b048:	mov    DWORD PTR [rax],edx
  40b04a:	mov    rax,QWORD PTR [rbp-0x50]
  40b04e:	mov    eax,DWORD PTR [rax]
  40b050:	test   eax,eax
  40b052:	je     40b063 <_start@@Base+0x4dd3>
  40b054:	mov    rax,QWORD PTR [rbp-0x40]
  40b058:	jmp    40b07d <_start@@Base+0x4ded>
  40b05a:	nop
  40b05b:	jmp    40b064 <_start@@Base+0x4dd4>
  40b05d:	nop
  40b05e:	jmp    40b064 <_start@@Base+0x4dd4>
  40b060:	nop
  40b061:	jmp    40b064 <_start@@Base+0x4dd4>
  40b063:	nop
  40b064:	mov    rdx,QWORD PTR [rbp-0x48]
  40b068:	mov    rsi,QWORD PTR [rbp-0x40]
  40b06c:	mov    rax,QWORD PTR [rbp-0x38]
  40b070:	mov    ecx,0x21
  40b075:	mov    rdi,rax
  40b078:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40b07d:	mov    rdi,QWORD PTR [rbp-0x8]
  40b081:	xor    rdi,QWORD PTR fs:0x28
  40b08a:	je     40b091 <_start@@Base+0x4e01>
  40b08c:	call   4061a0 <__stack_chk_fail@plt>
  40b091:	leave  
  40b092:	ret    
  40b093:	endbr64 
  40b097:	push   rbp
  40b098:	mov    rbp,rsp
  40b09b:	sub    rsp,0x50
  40b09f:	mov    QWORD PTR [rbp-0x28],rdi
  40b0a3:	mov    QWORD PTR [rbp-0x30],rsi
  40b0a7:	mov    QWORD PTR [rbp-0x38],rdx
  40b0ab:	mov    QWORD PTR [rbp-0x40],rcx
  40b0af:	mov    QWORD PTR [rbp-0x48],r8
  40b0b3:	mov    QWORD PTR [rbp-0x50],r9
  40b0b7:	mov    rax,QWORD PTR [rbp-0x30]
  40b0bb:	mov    QWORD PTR [rbp-0x18],rax
  40b0bf:	mov    rdx,QWORD PTR [rbp-0x38]
  40b0c3:	mov    rax,QWORD PTR [rbp-0x30]
  40b0c7:	mov    rsi,rdx
  40b0ca:	mov    rdi,rax
  40b0cd:	call   406876 <_start@@Base+0x5e6>
  40b0d2:	mov    QWORD PTR [rbp-0x10],rax
  40b0d6:	movabs rax,0xff00000000000000
  40b0e0:	and    rax,QWORD PTR [rbp-0x10]
  40b0e4:	mov    rdx,rax
  40b0e7:	movabs rax,0x7800000000000000
  40b0f1:	cmp    rdx,rax
  40b0f4:	jne    40b14d <_start@@Base+0x4ebd>
  40b0f6:	mov    rax,QWORD PTR [rbp-0x30]
  40b0fa:	mov    QWORD PTR [rbp-0x8],rax
  40b0fe:	mov    rcx,QWORD PTR [rbp-0x50]
  40b102:	mov    rdx,QWORD PTR [rbp-0x38]
  40b106:	mov    rsi,QWORD PTR [rbp-0x8]
  40b10a:	mov    rax,QWORD PTR [rbp-0x28]
  40b10e:	mov    r8,rcx
  40b111:	mov    ecx,0x1
  40b116:	mov    rdi,rax
  40b119:	call   4285be <flatcc_json_parser_match_constant@@Base>
  40b11e:	mov    QWORD PTR [rbp-0x30],rax
  40b122:	mov    rax,QWORD PTR [rbp-0x30]
  40b126:	cmp    rax,QWORD PTR [rbp-0x8]
  40b12a:	je     40b147 <_start@@Base+0x4eb7>
  40b12c:	mov    rax,QWORD PTR [rbp-0x48]
  40b130:	mov    QWORD PTR [rax],0x0
  40b137:	mov    rax,QWORD PTR [rbp-0x40]
  40b13b:	mov    DWORD PTR [rax],0x0
  40b141:	mov    rax,QWORD PTR [rbp-0x30]
  40b145:	jmp    40b151 <_start@@Base+0x4ec1>
  40b147:	mov    rax,QWORD PTR [rbp-0x18]
  40b14b:	jmp    40b151 <_start@@Base+0x4ec1>
  40b14d:	mov    rax,QWORD PTR [rbp-0x18]
  40b151:	leave  
  40b152:	ret    
  40b153:	endbr64 
  40b157:	push   rbp
  40b158:	mov    rbp,rsp
  40b15b:	sub    rsp,0x50
  40b15f:	mov    QWORD PTR [rbp-0x38],rdi
  40b163:	mov    QWORD PTR [rbp-0x40],rsi
  40b167:	mov    QWORD PTR [rbp-0x48],rdx
  40b16b:	mov    QWORD PTR [rbp-0x50],rcx
  40b16f:	mov    rax,QWORD PTR fs:0x28
  40b178:	mov    QWORD PTR [rbp-0x8],rax
  40b17c:	xor    eax,eax
  40b17e:	mov    rax,QWORD PTR [rbp-0x50]
  40b182:	mov    DWORD PTR [rax],0x0
  40b188:	mov    rax,QWORD PTR [rbp-0x38]
  40b18c:	mov    rax,QWORD PTR [rax]
  40b18f:	mov    esi,0x4
  40b194:	mov    rdi,rax
  40b197:	call   41ed41 <flatcc_builder_start_table@@Base>
  40b19c:	test   eax,eax
  40b19e:	jne    40b771 <_start@@Base+0x54e1>
  40b1a4:	lea    rcx,[rbp-0x24]
  40b1a8:	mov    rdx,QWORD PTR [rbp-0x48]
  40b1ac:	mov    rsi,QWORD PTR [rbp-0x40]
  40b1b0:	mov    rax,QWORD PTR [rbp-0x38]
  40b1b4:	mov    rdi,rax
  40b1b7:	call   406977 <_start@@Base+0x6e7>
  40b1bc:	mov    QWORD PTR [rbp-0x40],rax
  40b1c0:	jmp    40b734 <_start@@Base+0x54a4>
  40b1c5:	mov    rdx,QWORD PTR [rbp-0x48]
  40b1c9:	mov    rcx,QWORD PTR [rbp-0x40]
  40b1cd:	mov    rax,QWORD PTR [rbp-0x38]
  40b1d1:	mov    rsi,rcx
  40b1d4:	mov    rdi,rax
  40b1d7:	call   4066e9 <_start@@Base+0x459>
  40b1dc:	mov    QWORD PTR [rbp-0x40],rax
  40b1e0:	mov    rdx,QWORD PTR [rbp-0x48]
  40b1e4:	mov    rax,QWORD PTR [rbp-0x40]
  40b1e8:	mov    rsi,rdx
  40b1eb:	mov    rdi,rax
  40b1ee:	call   406876 <_start@@Base+0x5e6>
  40b1f3:	mov    QWORD PTR [rbp-0x20],rax
  40b1f7:	mov    rax,QWORD PTR [rbp-0x20]
  40b1fb:	mov    ax,0x0
  40b1ff:	mov    rdx,rax
  40b202:	movabs rax,0x636f6c6f72320000
  40b20c:	cmp    rdx,rax
  40b20f:	jne    40b325 <_start@@Base+0x5095>
  40b215:	mov    rax,QWORD PTR [rbp-0x40]
  40b219:	mov    QWORD PTR [rbp-0x18],rax
  40b21d:	mov    rdx,QWORD PTR [rbp-0x48]
  40b221:	mov    rsi,QWORD PTR [rbp-0x18]
  40b225:	mov    rax,QWORD PTR [rbp-0x38]
  40b229:	mov    ecx,0x6
  40b22e:	mov    rdi,rax
  40b231:	call   406d6d <_start@@Base+0xadd>
  40b236:	mov    QWORD PTR [rbp-0x40],rax
  40b23a:	mov    rax,QWORD PTR [rbp-0x18]
  40b23e:	cmp    rax,QWORD PTR [rbp-0x40]
  40b242:	je     40b455 <_start@@Base+0x51c5>
  40b248:	mov    BYTE PTR [rbp-0x25],0x0
  40b24c:	mov    rax,QWORD PTR [rbp-0x40]
  40b250:	mov    QWORD PTR [rbp-0x18],rax
  40b254:	lea    rcx,[rbp-0x25]
  40b258:	mov    rdx,QWORD PTR [rbp-0x48]
  40b25c:	mov    rsi,QWORD PTR [rbp-0x18]
  40b260:	mov    rax,QWORD PTR [rbp-0x38]
  40b264:	mov    rdi,rax
  40b267:	call   4079bb <_start@@Base+0x172b>
  40b26c:	mov    QWORD PTR [rbp-0x40],rax
  40b270:	mov    rax,QWORD PTR [rbp-0x18]
  40b274:	cmp    rax,QWORD PTR [rbp-0x40]
  40b278:	jne    40b2c4 <_start@@Base+0x5034>
  40b27a:	mov    rax,QWORD PTR [rbp-0x40]
  40b27e:	mov    QWORD PTR [rbp-0x18],rax
  40b282:	lea    rcx,[rbp-0x25]
  40b286:	mov    rdx,QWORD PTR [rbp-0x48]
  40b28a:	mov    rsi,QWORD PTR [rbp-0x18]
  40b28e:	mov    rax,QWORD PTR [rbp-0x38]
  40b292:	mov    r8,rcx
  40b295:	lea    rcx,[rip+0x3be84]        # 447120 <__data_start@@Base+0x60>
  40b29c:	mov    rdi,rax
  40b29f:	call   408503 <_start@@Base+0x2273>
  40b2a4:	mov    QWORD PTR [rbp-0x40],rax
  40b2a8:	mov    rax,QWORD PTR [rbp-0x40]
  40b2ac:	cmp    rax,QWORD PTR [rbp-0x18]
  40b2b0:	je     40b774 <_start@@Base+0x54e4>
  40b2b6:	mov    rax,QWORD PTR [rbp-0x40]
  40b2ba:	cmp    rax,QWORD PTR [rbp-0x48]
  40b2be:	je     40b774 <_start@@Base+0x54e4>
  40b2c4:	movzx  eax,BYTE PTR [rbp-0x25]
  40b2c8:	cmp    al,0x2
  40b2ca:	jne    40b2de <_start@@Base+0x504e>
  40b2cc:	mov    rax,QWORD PTR [rbp-0x38]
  40b2d0:	mov    eax,DWORD PTR [rax+0x10]
  40b2d3:	and    eax,0x2
  40b2d6:	test   eax,eax
  40b2d8:	je     40b717 <_start@@Base+0x5487>
  40b2de:	mov    rax,QWORD PTR [rbp-0x38]
  40b2e2:	mov    rax,QWORD PTR [rax]
  40b2e5:	mov    ecx,0x1
  40b2ea:	mov    edx,0x1
  40b2ef:	mov    esi,0x1
  40b2f4:	mov    rdi,rax
  40b2f7:	call   420ef1 <flatcc_builder_table_add@@Base>
  40b2fc:	mov    QWORD PTR [rbp-0x10],rax
  40b300:	cmp    QWORD PTR [rbp-0x10],0x0
  40b305:	je     40b777 <_start@@Base+0x54e7>
  40b30b:	movzx  eax,BYTE PTR [rbp-0x25]
  40b30f:	movsx  edx,al
  40b312:	mov    rax,QWORD PTR [rbp-0x10]
  40b316:	mov    esi,edx
  40b318:	mov    rdi,rax
  40b31b:	call   406459 <_start@@Base+0x1c9>
  40b320:	jmp    40b717 <_start@@Base+0x5487>
  40b325:	mov    rax,QWORD PTR [rbp-0x20]
  40b329:	and    rax,0xffffffffff000000
  40b32f:	mov    rdx,rax
  40b332:	movabs rax,0x636f6c6f72000000
  40b33c:	cmp    rdx,rax
  40b33f:	jne    40b458 <_start@@Base+0x51c8>
  40b345:	mov    rax,QWORD PTR [rbp-0x40]
  40b349:	mov    QWORD PTR [rbp-0x18],rax
  40b34d:	mov    rdx,QWORD PTR [rbp-0x48]
  40b351:	mov    rsi,QWORD PTR [rbp-0x18]
  40b355:	mov    rax,QWORD PTR [rbp-0x38]
  40b359:	mov    ecx,0x5
  40b35e:	mov    rdi,rax
  40b361:	call   406d6d <_start@@Base+0xadd>
  40b366:	mov    QWORD PTR [rbp-0x40],rax
  40b36a:	mov    rax,QWORD PTR [rbp-0x18]
  40b36e:	cmp    rax,QWORD PTR [rbp-0x40]
  40b372:	je     40b45b <_start@@Base+0x51cb>
  40b378:	mov    BYTE PTR [rbp-0x25],0x0
  40b37c:	mov    rax,QWORD PTR [rbp-0x40]
  40b380:	mov    QWORD PTR [rbp-0x18],rax
  40b384:	lea    rcx,[rbp-0x25]
  40b388:	mov    rdx,QWORD PTR [rbp-0x48]
  40b38c:	mov    rsi,QWORD PTR [rbp-0x18]
  40b390:	mov    rax,QWORD PTR [rbp-0x38]
  40b394:	mov    rdi,rax
  40b397:	call   4079bb <_start@@Base+0x172b>
  40b39c:	mov    QWORD PTR [rbp-0x40],rax
  40b3a0:	mov    rax,QWORD PTR [rbp-0x18]
  40b3a4:	cmp    rax,QWORD PTR [rbp-0x40]
  40b3a8:	jne    40b3f4 <_start@@Base+0x5164>
  40b3aa:	mov    rax,QWORD PTR [rbp-0x40]
  40b3ae:	mov    QWORD PTR [rbp-0x18],rax
  40b3b2:	lea    rcx,[rbp-0x25]
  40b3b6:	mov    rdx,QWORD PTR [rbp-0x48]
  40b3ba:	mov    rsi,QWORD PTR [rbp-0x18]
  40b3be:	mov    rax,QWORD PTR [rbp-0x38]
  40b3c2:	mov    r8,rcx
  40b3c5:	lea    rcx,[rip+0x3bd74]        # 447140 <__data_start@@Base+0x80>
  40b3cc:	mov    rdi,rax
  40b3cf:	call   408503 <_start@@Base+0x2273>
  40b3d4:	mov    QWORD PTR [rbp-0x40],rax
  40b3d8:	mov    rax,QWORD PTR [rbp-0x40]
  40b3dc:	cmp    rax,QWORD PTR [rbp-0x18]
  40b3e0:	je     40b77a <_start@@Base+0x54ea>
  40b3e6:	mov    rax,QWORD PTR [rbp-0x40]
  40b3ea:	cmp    rax,QWORD PTR [rbp-0x48]
  40b3ee:	je     40b77a <_start@@Base+0x54ea>
  40b3f4:	movzx  eax,BYTE PTR [rbp-0x25]
  40b3f8:	cmp    al,0x2
  40b3fa:	jne    40b40e <_start@@Base+0x517e>
  40b3fc:	mov    rax,QWORD PTR [rbp-0x38]
  40b400:	mov    eax,DWORD PTR [rax+0x10]
  40b403:	and    eax,0x2
  40b406:	test   eax,eax
  40b408:	je     40b717 <_start@@Base+0x5487>
  40b40e:	mov    rax,QWORD PTR [rbp-0x38]
  40b412:	mov    rax,QWORD PTR [rax]
  40b415:	mov    ecx,0x1
  40b41a:	mov    edx,0x1
  40b41f:	mov    esi,0x0
  40b424:	mov    rdi,rax
  40b427:	call   420ef1 <flatcc_builder_table_add@@Base>
  40b42c:	mov    QWORD PTR [rbp-0x10],rax
  40b430:	cmp    QWORD PTR [rbp-0x10],0x0
  40b435:	je     40b77d <_start@@Base+0x54ed>
  40b43b:	movzx  eax,BYTE PTR [rbp-0x25]
  40b43f:	movsx  edx,al
  40b442:	mov    rax,QWORD PTR [rbp-0x10]
  40b446:	mov    esi,edx
  40b448:	mov    rdi,rax
  40b44b:	call   406459 <_start@@Base+0x1c9>
  40b450:	jmp    40b717 <_start@@Base+0x5487>
  40b455:	nop
  40b456:	jmp    40b45c <_start@@Base+0x51cc>
  40b458:	nop
  40b459:	jmp    40b45c <_start@@Base+0x51cc>
  40b45b:	nop
  40b45c:	movabs rax,0xffffff0000000000
  40b466:	and    rax,QWORD PTR [rbp-0x20]
  40b46a:	mov    rdx,rax
  40b46d:	movabs rax,0x7563320000000000
  40b477:	cmp    rdx,rax
  40b47a:	jne    40b5b0 <_start@@Base+0x5320>
  40b480:	mov    rax,QWORD PTR [rbp-0x40]
  40b484:	mov    QWORD PTR [rbp-0x18],rax
  40b488:	mov    rdx,QWORD PTR [rbp-0x48]
  40b48c:	mov    rsi,QWORD PTR [rbp-0x18]
  40b490:	mov    rax,QWORD PTR [rbp-0x38]
  40b494:	mov    ecx,0x3
  40b499:	mov    rdi,rax
  40b49c:	call   406d6d <_start@@Base+0xadd>
  40b4a1:	mov    QWORD PTR [rbp-0x40],rax
  40b4a5:	mov    rax,QWORD PTR [rbp-0x18]
  40b4a9:	cmp    rax,QWORD PTR [rbp-0x40]
  40b4ad:	je     40b590 <_start@@Base+0x5300>
  40b4b3:	mov    BYTE PTR [rbp-0x25],0x0
  40b4b7:	mov    rax,QWORD PTR [rbp-0x40]
  40b4bb:	mov    QWORD PTR [rbp-0x18],rax
  40b4bf:	lea    rcx,[rbp-0x25]
  40b4c3:	mov    rdx,QWORD PTR [rbp-0x48]
  40b4c7:	mov    rsi,QWORD PTR [rbp-0x18]
  40b4cb:	mov    rax,QWORD PTR [rbp-0x38]
  40b4cf:	mov    rdi,rax
  40b4d2:	call   4076a6 <_start@@Base+0x1416>
  40b4d7:	mov    QWORD PTR [rbp-0x40],rax
  40b4db:	mov    rax,QWORD PTR [rbp-0x18]
  40b4df:	cmp    rax,QWORD PTR [rbp-0x40]
  40b4e3:	jne    40b52f <_start@@Base+0x529f>
  40b4e5:	mov    rax,QWORD PTR [rbp-0x40]
  40b4e9:	mov    QWORD PTR [rbp-0x18],rax
  40b4ed:	lea    rcx,[rbp-0x25]
  40b4f1:	mov    rdx,QWORD PTR [rbp-0x48]
  40b4f5:	mov    rsi,QWORD PTR [rbp-0x18]
  40b4f9:	mov    rax,QWORD PTR [rbp-0x38]
  40b4fd:	mov    r8,rcx
  40b500:	lea    rcx,[rip+0x3bc59]        # 447160 <__data_start@@Base+0xa0>
  40b507:	mov    rdi,rax
  40b50a:	call   407f88 <_start@@Base+0x1cf8>
  40b50f:	mov    QWORD PTR [rbp-0x40],rax
  40b513:	mov    rax,QWORD PTR [rbp-0x40]
  40b517:	cmp    rax,QWORD PTR [rbp-0x18]
  40b51b:	je     40b780 <_start@@Base+0x54f0>
  40b521:	mov    rax,QWORD PTR [rbp-0x40]
  40b525:	cmp    rax,QWORD PTR [rbp-0x48]
  40b529:	je     40b780 <_start@@Base+0x54f0>
  40b52f:	movzx  eax,BYTE PTR [rbp-0x25]
  40b533:	cmp    al,0x2
  40b535:	jne    40b549 <_start@@Base+0x52b9>
  40b537:	mov    rax,QWORD PTR [rbp-0x38]
  40b53b:	mov    eax,DWORD PTR [rax+0x10]
  40b53e:	and    eax,0x2
  40b541:	test   eax,eax
  40b543:	je     40b718 <_start@@Base+0x5488>
  40b549:	mov    rax,QWORD PTR [rbp-0x38]
  40b54d:	mov    rax,QWORD PTR [rax]
  40b550:	mov    ecx,0x1
  40b555:	mov    edx,0x1
  40b55a:	mov    esi,0x3
  40b55f:	mov    rdi,rax
  40b562:	call   420ef1 <flatcc_builder_table_add@@Base>
  40b567:	mov    QWORD PTR [rbp-0x10],rax
  40b56b:	cmp    QWORD PTR [rbp-0x10],0x0
  40b570:	je     40b783 <_start@@Base+0x54f3>
  40b576:	movzx  eax,BYTE PTR [rbp-0x25]
  40b57a:	movzx  edx,al
  40b57d:	mov    rax,QWORD PTR [rbp-0x10]
  40b581:	mov    esi,edx
  40b583:	mov    rdi,rax
  40b586:	call   406385 <_start@@Base+0xf5>
  40b58b:	jmp    40b718 <_start@@Base+0x5488>
  40b590:	mov    rdx,QWORD PTR [rbp-0x48]
  40b594:	mov    rcx,QWORD PTR [rbp-0x40]
  40b598:	mov    rax,QWORD PTR [rbp-0x38]
  40b59c:	mov    rsi,rcx
  40b59f:	mov    rdi,rax
  40b5a2:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40b5a7:	mov    QWORD PTR [rbp-0x40],rax
  40b5ab:	jmp    40b718 <_start@@Base+0x5488>
  40b5b0:	movabs rax,0xffff000000000000
  40b5ba:	and    rax,QWORD PTR [rbp-0x20]
  40b5be:	mov    rdx,rax
  40b5c1:	movabs rax,0x7563000000000000
  40b5cb:	cmp    rdx,rax
  40b5ce:	jne    40b6fa <_start@@Base+0x546a>
  40b5d4:	mov    rax,QWORD PTR [rbp-0x40]
  40b5d8:	mov    QWORD PTR [rbp-0x18],rax
  40b5dc:	mov    rdx,QWORD PTR [rbp-0x48]
  40b5e0:	mov    rsi,QWORD PTR [rbp-0x18]
  40b5e4:	mov    rax,QWORD PTR [rbp-0x38]
  40b5e8:	mov    ecx,0x2
  40b5ed:	mov    rdi,rax
  40b5f0:	call   406d6d <_start@@Base+0xadd>
  40b5f5:	mov    QWORD PTR [rbp-0x40],rax
  40b5f9:	mov    rax,QWORD PTR [rbp-0x18]
  40b5fd:	cmp    rax,QWORD PTR [rbp-0x40]
  40b601:	je     40b6dd <_start@@Base+0x544d>
  40b607:	mov    BYTE PTR [rbp-0x25],0x0
  40b60b:	mov    rax,QWORD PTR [rbp-0x40]
  40b60f:	mov    QWORD PTR [rbp-0x18],rax
  40b613:	lea    rcx,[rbp-0x25]
  40b617:	mov    rdx,QWORD PTR [rbp-0x48]
  40b61b:	mov    rsi,QWORD PTR [rbp-0x18]
  40b61f:	mov    rax,QWORD PTR [rbp-0x38]
  40b623:	mov    rdi,rax
  40b626:	call   4076a6 <_start@@Base+0x1416>
  40b62b:	mov    QWORD PTR [rbp-0x40],rax
  40b62f:	mov    rax,QWORD PTR [rbp-0x18]
  40b633:	cmp    rax,QWORD PTR [rbp-0x40]
  40b637:	jne    40b683 <_start@@Base+0x53f3>
  40b639:	mov    rax,QWORD PTR [rbp-0x40]
  40b63d:	mov    QWORD PTR [rbp-0x18],rax
  40b641:	lea    rcx,[rbp-0x25]
  40b645:	mov    rdx,QWORD PTR [rbp-0x48]
  40b649:	mov    rsi,QWORD PTR [rbp-0x18]
  40b64d:	mov    rax,QWORD PTR [rbp-0x38]
  40b651:	mov    r8,rcx
  40b654:	lea    rcx,[rip+0x3bb25]        # 447180 <__data_start@@Base+0xc0>
  40b65b:	mov    rdi,rax
  40b65e:	call   407f88 <_start@@Base+0x1cf8>
  40b663:	mov    QWORD PTR [rbp-0x40],rax
  40b667:	mov    rax,QWORD PTR [rbp-0x40]
  40b66b:	cmp    rax,QWORD PTR [rbp-0x18]
  40b66f:	je     40b786 <_start@@Base+0x54f6>
  40b675:	mov    rax,QWORD PTR [rbp-0x40]
  40b679:	cmp    rax,QWORD PTR [rbp-0x48]
  40b67d:	je     40b786 <_start@@Base+0x54f6>
  40b683:	movzx  eax,BYTE PTR [rbp-0x25]
  40b687:	cmp    al,0x2
  40b689:	jne    40b699 <_start@@Base+0x5409>
  40b68b:	mov    rax,QWORD PTR [rbp-0x38]
  40b68f:	mov    eax,DWORD PTR [rax+0x10]
  40b692:	and    eax,0x2
  40b695:	test   eax,eax
  40b697:	je     40b718 <_start@@Base+0x5488>
  40b699:	mov    rax,QWORD PTR [rbp-0x38]
  40b69d:	mov    rax,QWORD PTR [rax]
  40b6a0:	mov    ecx,0x1
  40b6a5:	mov    edx,0x1
  40b6aa:	mov    esi,0x2
  40b6af:	mov    rdi,rax
  40b6b2:	call   420ef1 <flatcc_builder_table_add@@Base>
  40b6b7:	mov    QWORD PTR [rbp-0x10],rax
  40b6bb:	cmp    QWORD PTR [rbp-0x10],0x0
  40b6c0:	je     40b789 <_start@@Base+0x54f9>
  40b6c6:	movzx  eax,BYTE PTR [rbp-0x25]
  40b6ca:	movzx  edx,al
  40b6cd:	mov    rax,QWORD PTR [rbp-0x10]
  40b6d1:	mov    esi,edx
  40b6d3:	mov    rdi,rax
  40b6d6:	call   406385 <_start@@Base+0xf5>
  40b6db:	jmp    40b718 <_start@@Base+0x5488>
  40b6dd:	mov    rdx,QWORD PTR [rbp-0x48]
  40b6e1:	mov    rcx,QWORD PTR [rbp-0x40]
  40b6e5:	mov    rax,QWORD PTR [rbp-0x38]
  40b6e9:	mov    rsi,rcx
  40b6ec:	mov    rdi,rax
  40b6ef:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40b6f4:	mov    QWORD PTR [rbp-0x40],rax
  40b6f8:	jmp    40b718 <_start@@Base+0x5488>
  40b6fa:	mov    rdx,QWORD PTR [rbp-0x48]
  40b6fe:	mov    rcx,QWORD PTR [rbp-0x40]
  40b702:	mov    rax,QWORD PTR [rbp-0x38]
  40b706:	mov    rsi,rcx
  40b709:	mov    rdi,rax
  40b70c:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40b711:	mov    QWORD PTR [rbp-0x40],rax
  40b715:	jmp    40b718 <_start@@Base+0x5488>
  40b717:	nop
  40b718:	lea    rcx,[rbp-0x24]
  40b71c:	mov    rdx,QWORD PTR [rbp-0x48]
  40b720:	mov    rsi,QWORD PTR [rbp-0x40]
  40b724:	mov    rax,QWORD PTR [rbp-0x38]
  40b728:	mov    rdi,rax
  40b72b:	call   406a34 <_start@@Base+0x7a4>
  40b730:	mov    QWORD PTR [rbp-0x40],rax
  40b734:	mov    eax,DWORD PTR [rbp-0x24]
  40b737:	test   eax,eax
  40b739:	jne    40b1c5 <_start@@Base+0x4f35>
  40b73f:	mov    rax,QWORD PTR [rbp-0x38]
  40b743:	mov    eax,DWORD PTR [rax+0x20]
  40b746:	test   eax,eax
  40b748:	jne    40b78c <_start@@Base+0x54fc>
  40b74a:	mov    rax,QWORD PTR [rbp-0x38]
  40b74e:	mov    rax,QWORD PTR [rax]
  40b751:	mov    rdi,rax
  40b754:	call   41f850 <flatcc_builder_end_table@@Base>
  40b759:	mov    edx,eax
  40b75b:	mov    rax,QWORD PTR [rbp-0x50]
  40b75f:	mov    DWORD PTR [rax],edx
  40b761:	mov    rax,QWORD PTR [rbp-0x50]
  40b765:	mov    eax,DWORD PTR [rax]
  40b767:	test   eax,eax
  40b769:	je     40b78f <_start@@Base+0x54ff>
  40b76b:	mov    rax,QWORD PTR [rbp-0x40]
  40b76f:	jmp    40b7a9 <_start@@Base+0x5519>
  40b771:	nop
  40b772:	jmp    40b790 <_start@@Base+0x5500>
  40b774:	nop
  40b775:	jmp    40b790 <_start@@Base+0x5500>
  40b777:	nop
  40b778:	jmp    40b790 <_start@@Base+0x5500>
  40b77a:	nop
  40b77b:	jmp    40b790 <_start@@Base+0x5500>
  40b77d:	nop
  40b77e:	jmp    40b790 <_start@@Base+0x5500>
  40b780:	nop
  40b781:	jmp    40b790 <_start@@Base+0x5500>
  40b783:	nop
  40b784:	jmp    40b790 <_start@@Base+0x5500>
  40b786:	nop
  40b787:	jmp    40b790 <_start@@Base+0x5500>
  40b789:	nop
  40b78a:	jmp    40b790 <_start@@Base+0x5500>
  40b78c:	nop
  40b78d:	jmp    40b790 <_start@@Base+0x5500>
  40b78f:	nop
  40b790:	mov    rdx,QWORD PTR [rbp-0x48]
  40b794:	mov    rsi,QWORD PTR [rbp-0x40]
  40b798:	mov    rax,QWORD PTR [rbp-0x38]
  40b79c:	mov    ecx,0x21
  40b7a1:	mov    rdi,rax
  40b7a4:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40b7a9:	mov    rdi,QWORD PTR [rbp-0x8]
  40b7ad:	xor    rdi,QWORD PTR fs:0x28
  40b7b6:	je     40b7bd <_start@@Base+0x552d>
  40b7b8:	call   4061a0 <__stack_chk_fail@plt>
  40b7bd:	leave  
  40b7be:	ret    
  40b7bf:	endbr64 
  40b7c3:	push   rbp
  40b7c4:	mov    rbp,rsp
  40b7c7:	sub    rsp,0x50
  40b7cb:	mov    QWORD PTR [rbp-0x38],rdi
  40b7cf:	mov    QWORD PTR [rbp-0x40],rsi
  40b7d3:	mov    QWORD PTR [rbp-0x48],rdx
  40b7d7:	mov    QWORD PTR [rbp-0x50],rcx
  40b7db:	mov    rax,QWORD PTR fs:0x28
  40b7e4:	mov    QWORD PTR [rbp-0x8],rax
  40b7e8:	xor    eax,eax
  40b7ea:	mov    rax,QWORD PTR [rbp-0x50]
  40b7ee:	mov    DWORD PTR [rax],0x0
  40b7f4:	mov    rax,QWORD PTR [rbp-0x38]
  40b7f8:	mov    rax,QWORD PTR [rax]
  40b7fb:	mov    esi,0x6
  40b800:	mov    rdi,rax
  40b803:	call   41ed41 <flatcc_builder_start_table@@Base>
  40b808:	test   eax,eax
  40b80a:	jne    40c0ac <_start@@Base+0x5e1c>
  40b810:	lea    rcx,[rbp-0x2c]
  40b814:	mov    rdx,QWORD PTR [rbp-0x48]
  40b818:	mov    rsi,QWORD PTR [rbp-0x40]
  40b81c:	mov    rax,QWORD PTR [rbp-0x38]
  40b820:	mov    rdi,rax
  40b823:	call   406977 <_start@@Base+0x6e7>
  40b828:	mov    QWORD PTR [rbp-0x40],rax
  40b82c:	jmp    40c06f <_start@@Base+0x5ddf>
  40b831:	mov    rdx,QWORD PTR [rbp-0x48]
  40b835:	mov    rcx,QWORD PTR [rbp-0x40]
  40b839:	mov    rax,QWORD PTR [rbp-0x38]
  40b83d:	mov    rsi,rcx
  40b840:	mov    rdi,rax
  40b843:	call   4066e9 <_start@@Base+0x459>
  40b848:	mov    QWORD PTR [rbp-0x40],rax
  40b84c:	mov    rdx,QWORD PTR [rbp-0x48]
  40b850:	mov    rax,QWORD PTR [rbp-0x40]
  40b854:	mov    rsi,rdx
  40b857:	mov    rdi,rax
  40b85a:	call   406876 <_start@@Base+0x5e6>
  40b85f:	mov    QWORD PTR [rbp-0x20],rax
  40b863:	movabs rax,0x696e6376616bffff
  40b86d:	cmp    QWORD PTR [rbp-0x20],rax
  40b871:	ja     40b952 <_start@@Base+0x56c2>
  40b877:	mov    rax,QWORD PTR [rbp-0x20]
  40b87b:	mov    ax,0x0
  40b87f:	mov    rdx,rax
  40b882:	movabs rax,0x676c6f62616c0000
  40b88c:	cmp    rdx,rax
  40b88f:	jne    40b932 <_start@@Base+0x56a2>
  40b895:	mov    rax,QWORD PTR [rbp-0x40]
  40b899:	mov    QWORD PTR [rbp-0x18],rax
  40b89d:	mov    rdx,QWORD PTR [rbp-0x48]
  40b8a1:	mov    rsi,QWORD PTR [rbp-0x18]
  40b8a5:	mov    rax,QWORD PTR [rbp-0x38]
  40b8a9:	mov    ecx,0x6
  40b8ae:	mov    rdi,rax
  40b8b1:	call   406d6d <_start@@Base+0xadd>
  40b8b6:	mov    QWORD PTR [rbp-0x40],rax
  40b8ba:	mov    rax,QWORD PTR [rbp-0x18]
  40b8be:	cmp    rax,QWORD PTR [rbp-0x40]
  40b8c2:	je     40b912 <_start@@Base+0x5682>
  40b8c4:	mov    rax,QWORD PTR [rbp-0x38]
  40b8c8:	mov    rax,QWORD PTR [rax]
  40b8cb:	mov    ecx,0x1
  40b8d0:	mov    edx,0x0
  40b8d5:	mov    esi,0x0
  40b8da:	mov    rdi,rax
  40b8dd:	call   420ef1 <flatcc_builder_table_add@@Base>
  40b8e2:	mov    QWORD PTR [rbp-0x10],rax
  40b8e6:	cmp    QWORD PTR [rbp-0x10],0x0
  40b8eb:	je     40c0af <_start@@Base+0x5e1f>
  40b8f1:	mov    rcx,QWORD PTR [rbp-0x10]
  40b8f5:	mov    rdx,QWORD PTR [rbp-0x48]
  40b8f9:	mov    rsi,QWORD PTR [rbp-0x40]
  40b8fd:	mov    rax,QWORD PTR [rbp-0x38]
  40b901:	mov    rdi,rax
  40b904:	call   409528 <_start@@Base+0x3298>
  40b909:	mov    QWORD PTR [rbp-0x40],rax
  40b90d:	jmp    40c053 <_start@@Base+0x5dc3>
  40b912:	mov    rdx,QWORD PTR [rbp-0x48]
  40b916:	mov    rcx,QWORD PTR [rbp-0x40]
  40b91a:	mov    rax,QWORD PTR [rbp-0x38]
  40b91e:	mov    rsi,rcx
  40b921:	mov    rdi,rax
  40b924:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40b929:	mov    QWORD PTR [rbp-0x40],rax
  40b92d:	jmp    40c053 <_start@@Base+0x5dc3>
  40b932:	mov    rdx,QWORD PTR [rbp-0x48]
  40b936:	mov    rcx,QWORD PTR [rbp-0x40]
  40b93a:	mov    rax,QWORD PTR [rbp-0x38]
  40b93e:	mov    rsi,rcx
  40b941:	mov    rdi,rax
  40b944:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40b949:	mov    QWORD PTR [rbp-0x40],rax
  40b94d:	jmp    40c053 <_start@@Base+0x5dc3>
  40b952:	movabs rax,0x696e6376616c32ff
  40b95c:	cmp    QWORD PTR [rbp-0x20],rax
  40b960:	ja     40bc26 <_start@@Base+0x5996>
  40b966:	mov    rax,QWORD PTR [rbp-0x20]
  40b96a:	mov    al,0x0
  40b96c:	mov    rdx,rax
  40b96f:	movabs rax,0x696e6376616c3200
  40b979:	cmp    rdx,rax
  40b97c:	jne    40bab5 <_start@@Base+0x5825>
  40b982:	mov    rax,QWORD PTR [rbp-0x40]
  40b986:	mov    QWORD PTR [rbp-0x18],rax
  40b98a:	mov    rdx,QWORD PTR [rbp-0x48]
  40b98e:	mov    rsi,QWORD PTR [rbp-0x18]
  40b992:	mov    rax,QWORD PTR [rbp-0x38]
  40b996:	mov    ecx,0x7
  40b99b:	mov    rdi,rax
  40b99e:	call   406d6d <_start@@Base+0xadd>
  40b9a3:	mov    QWORD PTR [rbp-0x40],rax
  40b9a7:	mov    rax,QWORD PTR [rbp-0x18]
  40b9ab:	cmp    rax,QWORD PTR [rbp-0x40]
  40b9af:	je     40ba95 <_start@@Base+0x5805>
  40b9b5:	mov    QWORD PTR [rbp-0x28],0x0
  40b9bd:	mov    rax,QWORD PTR [rbp-0x40]
  40b9c1:	mov    QWORD PTR [rbp-0x18],rax
  40b9c5:	lea    rcx,[rbp-0x28]
  40b9c9:	mov    rdx,QWORD PTR [rbp-0x48]
  40b9cd:	mov    rsi,QWORD PTR [rbp-0x18]
  40b9d1:	mov    rax,QWORD PTR [rbp-0x38]
  40b9d5:	mov    rdi,rax
  40b9d8:	call   407769 <_start@@Base+0x14d9>
  40b9dd:	mov    QWORD PTR [rbp-0x40],rax
  40b9e1:	mov    rax,QWORD PTR [rbp-0x18]
  40b9e5:	cmp    rax,QWORD PTR [rbp-0x40]
  40b9e9:	jne    40ba35 <_start@@Base+0x57a5>
  40b9eb:	mov    rax,QWORD PTR [rbp-0x40]
  40b9ef:	mov    QWORD PTR [rbp-0x18],rax
  40b9f3:	lea    rcx,[rbp-0x28]
  40b9f7:	mov    rdx,QWORD PTR [rbp-0x48]
  40b9fb:	mov    rsi,QWORD PTR [rbp-0x18]
  40b9ff:	mov    rax,QWORD PTR [rbp-0x38]
  40ba03:	mov    r8,rcx
  40ba06:	lea    rcx,[rip+0x3b793]        # 4471a0 <__data_start@@Base+0xe0>
  40ba0d:	mov    rdi,rax
  40ba10:	call   4080e1 <_start@@Base+0x1e51>
  40ba15:	mov    QWORD PTR [rbp-0x40],rax
  40ba19:	mov    rax,QWORD PTR [rbp-0x40]
  40ba1d:	cmp    rax,QWORD PTR [rbp-0x18]
  40ba21:	je     40c0b2 <_start@@Base+0x5e22>
  40ba27:	mov    rax,QWORD PTR [rbp-0x40]
  40ba2b:	cmp    rax,QWORD PTR [rbp-0x48]
  40ba2f:	je     40c0b2 <_start@@Base+0x5e22>
  40ba35:	mov    rax,QWORD PTR [rbp-0x28]
  40ba39:	test   rax,rax
  40ba3c:	jne    40ba50 <_start@@Base+0x57c0>
  40ba3e:	mov    rax,QWORD PTR [rbp-0x38]
  40ba42:	mov    eax,DWORD PTR [rax+0x10]
  40ba45:	and    eax,0x2
  40ba48:	test   eax,eax
  40ba4a:	je     40c053 <_start@@Base+0x5dc3>
  40ba50:	mov    rax,QWORD PTR [rbp-0x38]
  40ba54:	mov    rax,QWORD PTR [rax]
  40ba57:	mov    ecx,0x8
  40ba5c:	mov    edx,0x8
  40ba61:	mov    esi,0x2
  40ba66:	mov    rdi,rax
  40ba69:	call   420ef1 <flatcc_builder_table_add@@Base>
  40ba6e:	mov    QWORD PTR [rbp-0x10],rax
  40ba72:	cmp    QWORD PTR [rbp-0x10],0x0
  40ba77:	je     40c0b5 <_start@@Base+0x5e25>
  40ba7d:	mov    rdx,QWORD PTR [rbp-0x28]
  40ba81:	mov    rax,QWORD PTR [rbp-0x10]
  40ba85:	mov    rsi,rdx
  40ba88:	mov    rdi,rax
  40ba8b:	call   4064f5 <_start@@Base+0x265>
  40ba90:	jmp    40c053 <_start@@Base+0x5dc3>
  40ba95:	mov    rdx,QWORD PTR [rbp-0x48]
  40ba99:	mov    rcx,QWORD PTR [rbp-0x40]
  40ba9d:	mov    rax,QWORD PTR [rbp-0x38]
  40baa1:	mov    rsi,rcx
  40baa4:	mov    rdi,rax
  40baa7:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40baac:	mov    QWORD PTR [rbp-0x40],rax
  40bab0:	jmp    40c053 <_start@@Base+0x5dc3>
  40bab5:	mov    rax,QWORD PTR [rbp-0x20]
  40bab9:	mov    ax,0x0
  40babd:	mov    rdx,rax
  40bac0:	movabs rax,0x696e6376616c0000
  40baca:	cmp    rdx,rax
  40bacd:	jne    40bc06 <_start@@Base+0x5976>
  40bad3:	mov    rax,QWORD PTR [rbp-0x40]
  40bad7:	mov    QWORD PTR [rbp-0x18],rax
  40badb:	mov    rdx,QWORD PTR [rbp-0x48]
  40badf:	mov    rsi,QWORD PTR [rbp-0x18]
  40bae3:	mov    rax,QWORD PTR [rbp-0x38]
  40bae7:	mov    ecx,0x6
  40baec:	mov    rdi,rax
  40baef:	call   406d6d <_start@@Base+0xadd>
  40baf4:	mov    QWORD PTR [rbp-0x40],rax
  40baf8:	mov    rax,QWORD PTR [rbp-0x18]
  40bafc:	cmp    rax,QWORD PTR [rbp-0x40]
  40bb00:	je     40bbe6 <_start@@Base+0x5956>
  40bb06:	mov    QWORD PTR [rbp-0x28],0x0
  40bb0e:	mov    rax,QWORD PTR [rbp-0x40]
  40bb12:	mov    QWORD PTR [rbp-0x18],rax
  40bb16:	lea    rcx,[rbp-0x28]
  40bb1a:	mov    rdx,QWORD PTR [rbp-0x48]
  40bb1e:	mov    rsi,QWORD PTR [rbp-0x18]
  40bb22:	mov    rax,QWORD PTR [rbp-0x38]
  40bb26:	mov    rdi,rax
  40bb29:	call   407769 <_start@@Base+0x14d9>
  40bb2e:	mov    QWORD PTR [rbp-0x40],rax
  40bb32:	mov    rax,QWORD PTR [rbp-0x18]
  40bb36:	cmp    rax,QWORD PTR [rbp-0x40]
  40bb3a:	jne    40bb86 <_start@@Base+0x58f6>
  40bb3c:	mov    rax,QWORD PTR [rbp-0x40]
  40bb40:	mov    QWORD PTR [rbp-0x18],rax
  40bb44:	lea    rcx,[rbp-0x28]
  40bb48:	mov    rdx,QWORD PTR [rbp-0x48]
  40bb4c:	mov    rsi,QWORD PTR [rbp-0x18]
  40bb50:	mov    rax,QWORD PTR [rbp-0x38]
  40bb54:	mov    r8,rcx
  40bb57:	lea    rcx,[rip+0x3b662]        # 4471c0 <__data_start@@Base+0x100>
  40bb5e:	mov    rdi,rax
  40bb61:	call   4080e1 <_start@@Base+0x1e51>
  40bb66:	mov    QWORD PTR [rbp-0x40],rax
  40bb6a:	mov    rax,QWORD PTR [rbp-0x40]
  40bb6e:	cmp    rax,QWORD PTR [rbp-0x18]
  40bb72:	je     40c0b8 <_start@@Base+0x5e28>
  40bb78:	mov    rax,QWORD PTR [rbp-0x40]
  40bb7c:	cmp    rax,QWORD PTR [rbp-0x48]
  40bb80:	je     40c0b8 <_start@@Base+0x5e28>
  40bb86:	mov    rax,QWORD PTR [rbp-0x28]
  40bb8a:	test   rax,rax
  40bb8d:	jne    40bba1 <_start@@Base+0x5911>
  40bb8f:	mov    rax,QWORD PTR [rbp-0x38]
  40bb93:	mov    eax,DWORD PTR [rax+0x10]
  40bb96:	and    eax,0x2
  40bb99:	test   eax,eax
  40bb9b:	je     40c053 <_start@@Base+0x5dc3>
  40bba1:	mov    rax,QWORD PTR [rbp-0x38]
  40bba5:	mov    rax,QWORD PTR [rax]
  40bba8:	mov    ecx,0x8
  40bbad:	mov    edx,0x8
  40bbb2:	mov    esi,0x1
  40bbb7:	mov    rdi,rax
  40bbba:	call   420ef1 <flatcc_builder_table_add@@Base>
  40bbbf:	mov    QWORD PTR [rbp-0x10],rax
  40bbc3:	cmp    QWORD PTR [rbp-0x10],0x0
  40bbc8:	je     40c0bb <_start@@Base+0x5e2b>
  40bbce:	mov    rdx,QWORD PTR [rbp-0x28]
  40bbd2:	mov    rax,QWORD PTR [rbp-0x10]
  40bbd6:	mov    rsi,rdx
  40bbd9:	mov    rdi,rax
  40bbdc:	call   4064f5 <_start@@Base+0x265>
  40bbe1:	jmp    40c053 <_start@@Base+0x5dc3>
  40bbe6:	mov    rdx,QWORD PTR [rbp-0x48]
  40bbea:	mov    rcx,QWORD PTR [rbp-0x40]
  40bbee:	mov    rax,QWORD PTR [rbp-0x38]
  40bbf2:	mov    rsi,rcx
  40bbf5:	mov    rdi,rax
  40bbf8:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40bbfd:	mov    QWORD PTR [rbp-0x40],rax
  40bc01:	jmp    40c053 <_start@@Base+0x5dc3>
  40bc06:	mov    rdx,QWORD PTR [rbp-0x48]
  40bc0a:	mov    rcx,QWORD PTR [rbp-0x40]
  40bc0e:	mov    rax,QWORD PTR [rbp-0x38]
  40bc12:	mov    rsi,rcx
  40bc15:	mov    rdi,rax
  40bc18:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40bc1d:	mov    QWORD PTR [rbp-0x40],rax
  40bc21:	jmp    40c053 <_start@@Base+0x5dc3>
  40bc26:	movabs rax,0x696e6376616c33ff
  40bc30:	cmp    QWORD PTR [rbp-0x20],rax
  40bc34:	ja     40bda4 <_start@@Base+0x5b14>
  40bc3a:	mov    rax,QWORD PTR [rbp-0x20]
  40bc3e:	mov    al,0x0
  40bc40:	mov    rdx,rax
  40bc43:	movabs rax,0x696e6376616c3300
  40bc4d:	cmp    rdx,rax
  40bc50:	jne    40bd84 <_start@@Base+0x5af4>
  40bc56:	mov    rax,QWORD PTR [rbp-0x40]
  40bc5a:	mov    QWORD PTR [rbp-0x18],rax
  40bc5e:	mov    rdx,QWORD PTR [rbp-0x48]
  40bc62:	mov    rsi,QWORD PTR [rbp-0x18]
  40bc66:	mov    rax,QWORD PTR [rbp-0x38]
  40bc6a:	mov    ecx,0x7
  40bc6f:	mov    rdi,rax
  40bc72:	call   406d6d <_start@@Base+0xadd>
  40bc77:	mov    QWORD PTR [rbp-0x40],rax
  40bc7b:	mov    rax,QWORD PTR [rbp-0x18]
  40bc7f:	cmp    rax,QWORD PTR [rbp-0x40]
  40bc83:	je     40bd64 <_start@@Base+0x5ad4>
  40bc89:	mov    DWORD PTR [rbp-0x28],0x0
  40bc90:	mov    rax,QWORD PTR [rbp-0x40]
  40bc94:	mov    QWORD PTR [rbp-0x18],rax
  40bc98:	lea    rcx,[rbp-0x28]
  40bc9c:	mov    rdx,QWORD PTR [rbp-0x48]
  40bca0:	mov    rsi,QWORD PTR [rbp-0x18]
  40bca4:	mov    rax,QWORD PTR [rbp-0x38]
  40bca8:	mov    rdi,rax
  40bcab:	call   407830 <_start@@Base+0x15a0>
  40bcb0:	mov    QWORD PTR [rbp-0x40],rax
  40bcb4:	mov    rax,QWORD PTR [rbp-0x18]
  40bcb8:	cmp    rax,QWORD PTR [rbp-0x40]
  40bcbc:	jne    40bd08 <_start@@Base+0x5a78>
  40bcbe:	mov    rax,QWORD PTR [rbp-0x40]
  40bcc2:	mov    QWORD PTR [rbp-0x18],rax
  40bcc6:	lea    rcx,[rbp-0x28]
  40bcca:	mov    rdx,QWORD PTR [rbp-0x48]
  40bcce:	mov    rsi,QWORD PTR [rbp-0x18]
  40bcd2:	mov    rax,QWORD PTR [rbp-0x38]
  40bcd6:	mov    r8,rcx
  40bcd9:	lea    rcx,[rip+0x3b500]        # 4471e0 <__data_start@@Base+0x120>
  40bce0:	mov    rdi,rax
  40bce3:	call   408244 <_start@@Base+0x1fb4>
  40bce8:	mov    QWORD PTR [rbp-0x40],rax
  40bcec:	mov    rax,QWORD PTR [rbp-0x40]
  40bcf0:	cmp    rax,QWORD PTR [rbp-0x18]
  40bcf4:	je     40c0be <_start@@Base+0x5e2e>
  40bcfa:	mov    rax,QWORD PTR [rbp-0x40]
  40bcfe:	cmp    rax,QWORD PTR [rbp-0x48]
  40bd02:	je     40c0be <_start@@Base+0x5e2e>
  40bd08:	mov    eax,DWORD PTR [rbp-0x28]
  40bd0b:	test   eax,eax
  40bd0d:	jne    40bd21 <_start@@Base+0x5a91>
  40bd0f:	mov    rax,QWORD PTR [rbp-0x38]
  40bd13:	mov    eax,DWORD PTR [rax+0x10]
  40bd16:	and    eax,0x2
  40bd19:	test   eax,eax
  40bd1b:	je     40c053 <_start@@Base+0x5dc3>
  40bd21:	mov    rax,QWORD PTR [rbp-0x38]
  40bd25:	mov    rax,QWORD PTR [rax]
  40bd28:	mov    ecx,0x4
  40bd2d:	mov    edx,0x4
  40bd32:	mov    esi,0x3
  40bd37:	mov    rdi,rax
  40bd3a:	call   420ef1 <flatcc_builder_table_add@@Base>
  40bd3f:	mov    QWORD PTR [rbp-0x10],rax
  40bd43:	cmp    QWORD PTR [rbp-0x10],0x0
  40bd48:	je     40c0c1 <_start@@Base+0x5e31>
  40bd4e:	mov    edx,DWORD PTR [rbp-0x28]
  40bd51:	mov    rax,QWORD PTR [rbp-0x10]
  40bd55:	mov    esi,edx
  40bd57:	mov    rdi,rax
  40bd5a:	call   4064c3 <_start@@Base+0x233>
  40bd5f:	jmp    40c053 <_start@@Base+0x5dc3>
  40bd64:	mov    rdx,QWORD PTR [rbp-0x48]
  40bd68:	mov    rcx,QWORD PTR [rbp-0x40]
  40bd6c:	mov    rax,QWORD PTR [rbp-0x38]
  40bd70:	mov    rsi,rcx
  40bd73:	mov    rdi,rax
  40bd76:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40bd7b:	mov    QWORD PTR [rbp-0x40],rax
  40bd7f:	jmp    40c053 <_start@@Base+0x5dc3>
  40bd84:	mov    rdx,QWORD PTR [rbp-0x48]
  40bd88:	mov    rcx,QWORD PTR [rbp-0x40]
  40bd8c:	mov    rax,QWORD PTR [rbp-0x38]
  40bd90:	mov    rsi,rcx
  40bd93:	mov    rdi,rax
  40bd96:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40bd9b:	mov    QWORD PTR [rbp-0x40],rax
  40bd9f:	jmp    40c053 <_start@@Base+0x5dc3>
  40bda4:	mov    rax,QWORD PTR [rbp-0x20]
  40bda8:	mov    al,0x0
  40bdaa:	mov    rdx,rax
  40bdad:	movabs rax,0x696e6376616c3500
  40bdb7:	cmp    rdx,rax
  40bdba:	jne    40bef3 <_start@@Base+0x5c63>
  40bdc0:	mov    rax,QWORD PTR [rbp-0x40]
  40bdc4:	mov    QWORD PTR [rbp-0x18],rax
  40bdc8:	mov    rdx,QWORD PTR [rbp-0x48]
  40bdcc:	mov    rsi,QWORD PTR [rbp-0x18]
  40bdd0:	mov    rax,QWORD PTR [rbp-0x38]
  40bdd4:	mov    ecx,0x7
  40bdd9:	mov    rdi,rax
  40bddc:	call   406d6d <_start@@Base+0xadd>
  40bde1:	mov    QWORD PTR [rbp-0x40],rax
  40bde5:	mov    rax,QWORD PTR [rbp-0x18]
  40bde9:	cmp    rax,QWORD PTR [rbp-0x40]
  40bded:	je     40bed3 <_start@@Base+0x5c43>
  40bdf3:	mov    QWORD PTR [rbp-0x28],0x0
  40bdfb:	mov    rax,QWORD PTR [rbp-0x40]
  40bdff:	mov    QWORD PTR [rbp-0x18],rax
  40be03:	lea    rcx,[rbp-0x28]
  40be07:	mov    rdx,QWORD PTR [rbp-0x48]
  40be0b:	mov    rsi,QWORD PTR [rbp-0x18]
  40be0f:	mov    rax,QWORD PTR [rbp-0x38]
  40be13:	mov    rdi,rax
  40be16:	call   407769 <_start@@Base+0x14d9>
  40be1b:	mov    QWORD PTR [rbp-0x40],rax
  40be1f:	mov    rax,QWORD PTR [rbp-0x18]
  40be23:	cmp    rax,QWORD PTR [rbp-0x40]
  40be27:	jne    40be73 <_start@@Base+0x5be3>
  40be29:	mov    rax,QWORD PTR [rbp-0x40]
  40be2d:	mov    QWORD PTR [rbp-0x18],rax
  40be31:	lea    rcx,[rbp-0x28]
  40be35:	mov    rdx,QWORD PTR [rbp-0x48]
  40be39:	mov    rsi,QWORD PTR [rbp-0x18]
  40be3d:	mov    rax,QWORD PTR [rbp-0x38]
  40be41:	mov    r8,rcx
  40be44:	lea    rcx,[rip+0x3b3b5]        # 447200 <__data_start@@Base+0x140>
  40be4b:	mov    rdi,rax
  40be4e:	call   4080e1 <_start@@Base+0x1e51>
  40be53:	mov    QWORD PTR [rbp-0x40],rax
  40be57:	mov    rax,QWORD PTR [rbp-0x40]
  40be5b:	cmp    rax,QWORD PTR [rbp-0x18]
  40be5f:	je     40c0c4 <_start@@Base+0x5e34>
  40be65:	mov    rax,QWORD PTR [rbp-0x40]
  40be69:	cmp    rax,QWORD PTR [rbp-0x48]
  40be6d:	je     40c0c4 <_start@@Base+0x5e34>
  40be73:	mov    rax,QWORD PTR [rbp-0x28]
  40be77:	test   rax,rax
  40be7a:	jne    40be8e <_start@@Base+0x5bfe>
  40be7c:	mov    rax,QWORD PTR [rbp-0x38]
  40be80:	mov    eax,DWORD PTR [rax+0x10]
  40be83:	and    eax,0x2
  40be86:	test   eax,eax
  40be88:	je     40c053 <_start@@Base+0x5dc3>
  40be8e:	mov    rax,QWORD PTR [rbp-0x38]
  40be92:	mov    rax,QWORD PTR [rax]
  40be95:	mov    ecx,0x8
  40be9a:	mov    edx,0x8
  40be9f:	mov    esi,0x5
  40bea4:	mov    rdi,rax
  40bea7:	call   420ef1 <flatcc_builder_table_add@@Base>
  40beac:	mov    QWORD PTR [rbp-0x10],rax
  40beb0:	cmp    QWORD PTR [rbp-0x10],0x0
  40beb5:	je     40c0c7 <_start@@Base+0x5e37>
  40bebb:	mov    rdx,QWORD PTR [rbp-0x28]
  40bebf:	mov    rax,QWORD PTR [rbp-0x10]
  40bec3:	mov    rsi,rdx
  40bec6:	mov    rdi,rax
  40bec9:	call   4064f5 <_start@@Base+0x265>
  40bece:	jmp    40c053 <_start@@Base+0x5dc3>
  40bed3:	mov    rdx,QWORD PTR [rbp-0x48]
  40bed7:	mov    rcx,QWORD PTR [rbp-0x40]
  40bedb:	mov    rax,QWORD PTR [rbp-0x38]
  40bedf:	mov    rsi,rcx
  40bee2:	mov    rdi,rax
  40bee5:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40beea:	mov    QWORD PTR [rbp-0x40],rax
  40beee:	jmp    40c053 <_start@@Base+0x5dc3>
  40bef3:	mov    rax,QWORD PTR [rbp-0x20]
  40bef7:	mov    al,0x0
  40bef9:	mov    rdx,rax
  40befc:	movabs rax,0x696e6376616c3400
  40bf06:	cmp    rdx,rax
  40bf09:	jne    40c038 <_start@@Base+0x5da8>
  40bf0f:	mov    rax,QWORD PTR [rbp-0x40]
  40bf13:	mov    QWORD PTR [rbp-0x18],rax
  40bf17:	mov    rdx,QWORD PTR [rbp-0x48]
  40bf1b:	mov    rsi,QWORD PTR [rbp-0x18]
  40bf1f:	mov    rax,QWORD PTR [rbp-0x38]
  40bf23:	mov    ecx,0x7
  40bf28:	mov    rdi,rax
  40bf2b:	call   406d6d <_start@@Base+0xadd>
  40bf30:	mov    QWORD PTR [rbp-0x40],rax
  40bf34:	mov    rax,QWORD PTR [rbp-0x18]
  40bf38:	cmp    rax,QWORD PTR [rbp-0x40]
  40bf3c:	je     40c01b <_start@@Base+0x5d8b>
  40bf42:	mov    QWORD PTR [rbp-0x28],0x0
  40bf4a:	mov    rax,QWORD PTR [rbp-0x40]
  40bf4e:	mov    QWORD PTR [rbp-0x18],rax
  40bf52:	lea    rcx,[rbp-0x28]
  40bf56:	mov    rdx,QWORD PTR [rbp-0x48]
  40bf5a:	mov    rsi,QWORD PTR [rbp-0x18]
  40bf5e:	mov    rax,QWORD PTR [rbp-0x38]
  40bf62:	mov    rdi,rax
  40bf65:	call   407769 <_start@@Base+0x14d9>
  40bf6a:	mov    QWORD PTR [rbp-0x40],rax
  40bf6e:	mov    rax,QWORD PTR [rbp-0x18]
  40bf72:	cmp    rax,QWORD PTR [rbp-0x40]
  40bf76:	jne    40bfc2 <_start@@Base+0x5d32>
  40bf78:	mov    rax,QWORD PTR [rbp-0x40]
  40bf7c:	mov    QWORD PTR [rbp-0x18],rax
  40bf80:	lea    rcx,[rbp-0x28]
  40bf84:	mov    rdx,QWORD PTR [rbp-0x48]
  40bf88:	mov    rsi,QWORD PTR [rbp-0x18]
  40bf8c:	mov    rax,QWORD PTR [rbp-0x38]
  40bf90:	mov    r8,rcx
  40bf93:	lea    rcx,[rip+0x3b286]        # 447220 <__data_start@@Base+0x160>
  40bf9a:	mov    rdi,rax
  40bf9d:	call   4080e1 <_start@@Base+0x1e51>
  40bfa2:	mov    QWORD PTR [rbp-0x40],rax
  40bfa6:	mov    rax,QWORD PTR [rbp-0x40]
  40bfaa:	cmp    rax,QWORD PTR [rbp-0x18]
  40bfae:	je     40c0ca <_start@@Base+0x5e3a>
  40bfb4:	mov    rax,QWORD PTR [rbp-0x40]
  40bfb8:	cmp    rax,QWORD PTR [rbp-0x48]
  40bfbc:	je     40c0ca <_start@@Base+0x5e3a>
  40bfc2:	mov    rax,QWORD PTR [rbp-0x28]
  40bfc6:	test   rax,rax
  40bfc9:	jne    40bfd9 <_start@@Base+0x5d49>
  40bfcb:	mov    rax,QWORD PTR [rbp-0x38]
  40bfcf:	mov    eax,DWORD PTR [rax+0x10]
  40bfd2:	and    eax,0x2
  40bfd5:	test   eax,eax
  40bfd7:	je     40c053 <_start@@Base+0x5dc3>
  40bfd9:	mov    rax,QWORD PTR [rbp-0x38]
  40bfdd:	mov    rax,QWORD PTR [rax]
  40bfe0:	mov    ecx,0x8
  40bfe5:	mov    edx,0x8
  40bfea:	mov    esi,0x4
  40bfef:	mov    rdi,rax
  40bff2:	call   420ef1 <flatcc_builder_table_add@@Base>
  40bff7:	mov    QWORD PTR [rbp-0x10],rax
  40bffb:	cmp    QWORD PTR [rbp-0x10],0x0
  40c000:	je     40c0cd <_start@@Base+0x5e3d>
  40c006:	mov    rdx,QWORD PTR [rbp-0x28]
  40c00a:	mov    rax,QWORD PTR [rbp-0x10]
  40c00e:	mov    rsi,rdx
  40c011:	mov    rdi,rax
  40c014:	call   4064f5 <_start@@Base+0x265>
  40c019:	jmp    40c053 <_start@@Base+0x5dc3>
  40c01b:	mov    rdx,QWORD PTR [rbp-0x48]
  40c01f:	mov    rcx,QWORD PTR [rbp-0x40]
  40c023:	mov    rax,QWORD PTR [rbp-0x38]
  40c027:	mov    rsi,rcx
  40c02a:	mov    rdi,rax
  40c02d:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40c032:	mov    QWORD PTR [rbp-0x40],rax
  40c036:	jmp    40c053 <_start@@Base+0x5dc3>
  40c038:	mov    rdx,QWORD PTR [rbp-0x48]
  40c03c:	mov    rcx,QWORD PTR [rbp-0x40]
  40c040:	mov    rax,QWORD PTR [rbp-0x38]
  40c044:	mov    rsi,rcx
  40c047:	mov    rdi,rax
  40c04a:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40c04f:	mov    QWORD PTR [rbp-0x40],rax
  40c053:	lea    rcx,[rbp-0x2c]
  40c057:	mov    rdx,QWORD PTR [rbp-0x48]
  40c05b:	mov    rsi,QWORD PTR [rbp-0x40]
  40c05f:	mov    rax,QWORD PTR [rbp-0x38]
  40c063:	mov    rdi,rax
  40c066:	call   406a34 <_start@@Base+0x7a4>
  40c06b:	mov    QWORD PTR [rbp-0x40],rax
  40c06f:	mov    eax,DWORD PTR [rbp-0x2c]
  40c072:	test   eax,eax
  40c074:	jne    40b831 <_start@@Base+0x55a1>
  40c07a:	mov    rax,QWORD PTR [rbp-0x38]
  40c07e:	mov    eax,DWORD PTR [rax+0x20]
  40c081:	test   eax,eax
  40c083:	jne    40c0d0 <_start@@Base+0x5e40>
  40c085:	mov    rax,QWORD PTR [rbp-0x38]
  40c089:	mov    rax,QWORD PTR [rax]
  40c08c:	mov    rdi,rax
  40c08f:	call   41f850 <flatcc_builder_end_table@@Base>
  40c094:	mov    edx,eax
  40c096:	mov    rax,QWORD PTR [rbp-0x50]
  40c09a:	mov    DWORD PTR [rax],edx
  40c09c:	mov    rax,QWORD PTR [rbp-0x50]
  40c0a0:	mov    eax,DWORD PTR [rax]
  40c0a2:	test   eax,eax
  40c0a4:	je     40c0d3 <_start@@Base+0x5e43>
  40c0a6:	mov    rax,QWORD PTR [rbp-0x40]
  40c0aa:	jmp    40c0ed <_start@@Base+0x5e5d>
  40c0ac:	nop
  40c0ad:	jmp    40c0d4 <_start@@Base+0x5e44>
  40c0af:	nop
  40c0b0:	jmp    40c0d4 <_start@@Base+0x5e44>
  40c0b2:	nop
  40c0b3:	jmp    40c0d4 <_start@@Base+0x5e44>
  40c0b5:	nop
  40c0b6:	jmp    40c0d4 <_start@@Base+0x5e44>
  40c0b8:	nop
  40c0b9:	jmp    40c0d4 <_start@@Base+0x5e44>
  40c0bb:	nop
  40c0bc:	jmp    40c0d4 <_start@@Base+0x5e44>
  40c0be:	nop
  40c0bf:	jmp    40c0d4 <_start@@Base+0x5e44>
  40c0c1:	nop
  40c0c2:	jmp    40c0d4 <_start@@Base+0x5e44>
  40c0c4:	nop
  40c0c5:	jmp    40c0d4 <_start@@Base+0x5e44>
  40c0c7:	nop
  40c0c8:	jmp    40c0d4 <_start@@Base+0x5e44>
  40c0ca:	nop
  40c0cb:	jmp    40c0d4 <_start@@Base+0x5e44>
  40c0cd:	nop
  40c0ce:	jmp    40c0d4 <_start@@Base+0x5e44>
  40c0d0:	nop
  40c0d1:	jmp    40c0d4 <_start@@Base+0x5e44>
  40c0d3:	nop
  40c0d4:	mov    rdx,QWORD PTR [rbp-0x48]
  40c0d8:	mov    rsi,QWORD PTR [rbp-0x40]
  40c0dc:	mov    rax,QWORD PTR [rbp-0x38]
  40c0e0:	mov    ecx,0x21
  40c0e5:	mov    rdi,rax
  40c0e8:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40c0ed:	mov    rdi,QWORD PTR [rbp-0x8]
  40c0f1:	xor    rdi,QWORD PTR fs:0x28
  40c0fa:	je     40c101 <_start@@Base+0x5e71>
  40c0fc:	call   4061a0 <__stack_chk_fail@plt>
  40c101:	leave  
  40c102:	ret    
  40c103:	endbr64 
  40c107:	push   rbp
  40c108:	mov    rbp,rsp
  40c10b:	sub    rsp,0x50
  40c10f:	mov    QWORD PTR [rbp-0x38],rdi
  40c113:	mov    QWORD PTR [rbp-0x40],rsi
  40c117:	mov    QWORD PTR [rbp-0x48],rdx
  40c11b:	mov    QWORD PTR [rbp-0x50],rcx
  40c11f:	mov    rax,QWORD PTR fs:0x28
  40c128:	mov    QWORD PTR [rbp-0x8],rax
  40c12c:	xor    eax,eax
  40c12e:	lea    rcx,[rbp-0x2c]
  40c132:	mov    rdx,QWORD PTR [rbp-0x48]
  40c136:	mov    rsi,QWORD PTR [rbp-0x40]
  40c13a:	mov    rax,QWORD PTR [rbp-0x38]
  40c13e:	mov    rdi,rax
  40c141:	call   406977 <_start@@Base+0x6e7>
  40c146:	mov    QWORD PTR [rbp-0x40],rax
  40c14a:	jmp    40c865 <_start@@Base+0x65d5>
  40c14f:	mov    rdx,QWORD PTR [rbp-0x48]
  40c153:	mov    rcx,QWORD PTR [rbp-0x40]
  40c157:	mov    rax,QWORD PTR [rbp-0x38]
  40c15b:	mov    rsi,rcx
  40c15e:	mov    rdi,rax
  40c161:	call   4066e9 <_start@@Base+0x459>
  40c166:	mov    QWORD PTR [rbp-0x40],rax
  40c16a:	mov    rdx,QWORD PTR [rbp-0x48]
  40c16e:	mov    rax,QWORD PTR [rbp-0x40]
  40c172:	mov    rsi,rdx
  40c175:	mov    rdi,rax
  40c178:	call   406876 <_start@@Base+0x5e6>
  40c17d:	mov    QWORD PTR [rbp-0x20],rax
  40c181:	movabs rax,0x7465737432ffffff
  40c18b:	cmp    QWORD PTR [rbp-0x20],rax
  40c18f:	ja     40c3e4 <_start@@Base+0x6154>
  40c195:	mov    rax,QWORD PTR [rbp-0x20]
  40c199:	and    rax,0xffffffffff000000
  40c19f:	mov    rdx,rax
  40c1a2:	movabs rax,0x7465737432000000
  40c1ac:	cmp    rdx,rax
  40c1af:	jne    40c2aa <_start@@Base+0x601a>
  40c1b5:	mov    rax,QWORD PTR [rbp-0x40]
  40c1b9:	mov    QWORD PTR [rbp-0x18],rax
  40c1bd:	mov    rdx,QWORD PTR [rbp-0x48]
  40c1c1:	mov    rsi,QWORD PTR [rbp-0x18]
  40c1c5:	mov    rax,QWORD PTR [rbp-0x38]
  40c1c9:	mov    ecx,0x5
  40c1ce:	mov    rdi,rax
  40c1d1:	call   406d6d <_start@@Base+0xadd>
  40c1d6:	mov    QWORD PTR [rbp-0x40],rax
  40c1da:	mov    rax,QWORD PTR [rbp-0x18]
  40c1de:	cmp    rax,QWORD PTR [rbp-0x40]
  40c1e2:	je     40c28a <_start@@Base+0x5ffa>
  40c1e8:	mov    BYTE PTR [rbp-0x28],0x0
  40c1ec:	mov    rax,QWORD PTR [rbp-0x50]
  40c1f0:	add    rax,0x18
  40c1f4:	mov    QWORD PTR [rbp-0x10],rax
  40c1f8:	mov    rax,QWORD PTR [rbp-0x40]
  40c1fc:	mov    QWORD PTR [rbp-0x18],rax
  40c200:	lea    rcx,[rbp-0x28]
  40c204:	mov    rdx,QWORD PTR [rbp-0x48]
  40c208:	mov    rsi,QWORD PTR [rbp-0x18]
  40c20c:	mov    rax,QWORD PTR [rbp-0x38]
  40c210:	mov    rdi,rax
  40c213:	call   4079bb <_start@@Base+0x172b>
  40c218:	mov    QWORD PTR [rbp-0x40],rax
  40c21c:	mov    rax,QWORD PTR [rbp-0x18]
  40c220:	cmp    rax,QWORD PTR [rbp-0x40]
  40c224:	jne    40c270 <_start@@Base+0x5fe0>
  40c226:	mov    rax,QWORD PTR [rbp-0x40]
  40c22a:	mov    QWORD PTR [rbp-0x18],rax
  40c22e:	lea    rcx,[rbp-0x28]
  40c232:	mov    rdx,QWORD PTR [rbp-0x48]
  40c236:	mov    rsi,QWORD PTR [rbp-0x18]
  40c23a:	mov    rax,QWORD PTR [rbp-0x38]
  40c23e:	mov    r8,rcx
  40c241:	lea    rcx,[rip+0x3aff8]        # 447240 <__data_start@@Base+0x180>
  40c248:	mov    rdi,rax
  40c24b:	call   408503 <_start@@Base+0x2273>
  40c250:	mov    QWORD PTR [rbp-0x40],rax
  40c254:	mov    rax,QWORD PTR [rbp-0x40]
  40c258:	cmp    rax,QWORD PTR [rbp-0x18]
  40c25c:	je     40c876 <_start@@Base+0x65e6>
  40c262:	mov    rax,QWORD PTR [rbp-0x40]
  40c266:	cmp    rax,QWORD PTR [rbp-0x48]
  40c26a:	je     40c876 <_start@@Base+0x65e6>
  40c270:	movzx  eax,BYTE PTR [rbp-0x28]
  40c274:	movsx  edx,al
  40c277:	mov    rax,QWORD PTR [rbp-0x10]
  40c27b:	mov    esi,edx
  40c27d:	mov    rdi,rax
  40c280:	call   406459 <_start@@Base+0x1c9>
  40c285:	jmp    40c849 <_start@@Base+0x65b9>
  40c28a:	mov    rdx,QWORD PTR [rbp-0x48]
  40c28e:	mov    rcx,QWORD PTR [rbp-0x40]
  40c292:	mov    rax,QWORD PTR [rbp-0x38]
  40c296:	mov    rsi,rcx
  40c299:	mov    rdi,rax
  40c29c:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40c2a1:	mov    QWORD PTR [rbp-0x40],rax
  40c2a5:	jmp    40c849 <_start@@Base+0x65b9>
  40c2aa:	mov    rax,QWORD PTR [rbp-0x20]
  40c2ae:	and    rax,0xffffffffff000000
  40c2b4:	mov    rdx,rax
  40c2b7:	movabs rax,0x7465737431000000
  40c2c1:	cmp    rdx,rax
  40c2c4:	jne    40c3c4 <_start@@Base+0x6134>
  40c2ca:	mov    rax,QWORD PTR [rbp-0x40]
  40c2ce:	mov    QWORD PTR [rbp-0x18],rax
  40c2d2:	mov    rdx,QWORD PTR [rbp-0x48]
  40c2d6:	mov    rsi,QWORD PTR [rbp-0x18]
  40c2da:	mov    rax,QWORD PTR [rbp-0x38]
  40c2de:	mov    ecx,0x5
  40c2e3:	mov    rdi,rax
  40c2e6:	call   406d6d <_start@@Base+0xadd>
  40c2eb:	mov    QWORD PTR [rbp-0x40],rax
  40c2ef:	mov    rax,QWORD PTR [rbp-0x18]
  40c2f3:	cmp    rax,QWORD PTR [rbp-0x40]
  40c2f7:	je     40c3a4 <_start@@Base+0x6114>
  40c2fd:	vxorpd xmm0,xmm0,xmm0
  40c301:	vmovsd QWORD PTR [rbp-0x28],xmm0
  40c306:	mov    rax,QWORD PTR [rbp-0x50]
  40c30a:	add    rax,0x10
  40c30e:	mov    QWORD PTR [rbp-0x10],rax
  40c312:	mov    rax,QWORD PTR [rbp-0x40]
  40c316:	mov    QWORD PTR [rbp-0x18],rax
  40c31a:	lea    rcx,[rbp-0x28]
  40c31e:	mov    rdx,QWORD PTR [rbp-0x48]
  40c322:	mov    rsi,QWORD PTR [rbp-0x18]
  40c326:	mov    rax,QWORD PTR [rbp-0x38]
  40c32a:	mov    rdi,rax
  40c32d:	call   428b48 <flatcc_json_parser_double@@Base>
  40c332:	mov    QWORD PTR [rbp-0x40],rax
  40c336:	mov    rax,QWORD PTR [rbp-0x18]
  40c33a:	cmp    rax,QWORD PTR [rbp-0x40]
  40c33e:	jne    40c38a <_start@@Base+0x60fa>
  40c340:	mov    rax,QWORD PTR [rbp-0x40]
  40c344:	mov    QWORD PTR [rbp-0x18],rax
  40c348:	lea    rcx,[rbp-0x28]
  40c34c:	mov    rdx,QWORD PTR [rbp-0x48]
  40c350:	mov    rsi,QWORD PTR [rbp-0x18]
  40c354:	mov    rax,QWORD PTR [rbp-0x38]
  40c358:	mov    r8,rcx
  40c35b:	lea    rcx,[rip+0x3aefe]        # 447260 <__data_start@@Base+0x1a0>
  40c362:	mov    rdi,rax
  40c365:	call   408922 <_start@@Base+0x2692>
  40c36a:	mov    QWORD PTR [rbp-0x40],rax
  40c36e:	mov    rax,QWORD PTR [rbp-0x40]
  40c372:	cmp    rax,QWORD PTR [rbp-0x18]
  40c376:	je     40c879 <_start@@Base+0x65e9>
  40c37c:	mov    rax,QWORD PTR [rbp-0x40]
  40c380:	cmp    rax,QWORD PTR [rbp-0x48]
  40c384:	je     40c879 <_start@@Base+0x65e9>
  40c38a:	mov    rdx,QWORD PTR [rbp-0x28]
  40c38e:	mov    rax,QWORD PTR [rbp-0x10]
  40c392:	vmovq  xmm0,rdx
  40c397:	mov    rdi,rax
  40c39a:	call   406594 <_start@@Base+0x304>
  40c39f:	jmp    40c849 <_start@@Base+0x65b9>
  40c3a4:	mov    rdx,QWORD PTR [rbp-0x48]
  40c3a8:	mov    rcx,QWORD PTR [rbp-0x40]
  40c3ac:	mov    rax,QWORD PTR [rbp-0x38]
  40c3b0:	mov    rsi,rcx
  40c3b3:	mov    rdi,rax
  40c3b6:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40c3bb:	mov    QWORD PTR [rbp-0x40],rax
  40c3bf:	jmp    40c849 <_start@@Base+0x65b9>
  40c3c4:	mov    rdx,QWORD PTR [rbp-0x48]
  40c3c8:	mov    rcx,QWORD PTR [rbp-0x40]
  40c3cc:	mov    rax,QWORD PTR [rbp-0x38]
  40c3d0:	mov    rsi,rcx
  40c3d3:	mov    rdi,rax
  40c3d6:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40c3db:	mov    QWORD PTR [rbp-0x40],rax
  40c3df:	jmp    40c849 <_start@@Base+0x65b9>
  40c3e4:	movabs rax,0x77ffffffffffffff
  40c3ee:	cmp    QWORD PTR [rbp-0x20],rax
  40c3f2:	ja     40c4b0 <_start@@Base+0x6220>
  40c3f8:	mov    rax,QWORD PTR [rbp-0x20]
  40c3fc:	and    rax,0xffffffffff000000
  40c402:	mov    rdx,rax
  40c405:	movabs rax,0x7465737433000000
  40c40f:	cmp    rdx,rax
  40c412:	jne    40c490 <_start@@Base+0x6200>
  40c414:	mov    rax,QWORD PTR [rbp-0x40]
  40c418:	mov    QWORD PTR [rbp-0x18],rax
  40c41c:	mov    rdx,QWORD PTR [rbp-0x48]
  40c420:	mov    rsi,QWORD PTR [rbp-0x18]
  40c424:	mov    rax,QWORD PTR [rbp-0x38]
  40c428:	mov    ecx,0x5
  40c42d:	mov    rdi,rax
  40c430:	call   406d6d <_start@@Base+0xadd>
  40c435:	mov    QWORD PTR [rbp-0x40],rax
  40c439:	mov    rax,QWORD PTR [rbp-0x18]
  40c43d:	cmp    rax,QWORD PTR [rbp-0x40]
  40c441:	je     40c470 <_start@@Base+0x61e0>
  40c443:	mov    rax,QWORD PTR [rbp-0x50]
  40c447:	add    rax,0x1a
  40c44b:	mov    QWORD PTR [rbp-0x10],rax
  40c44f:	mov    rcx,QWORD PTR [rbp-0x10]
  40c453:	mov    rdx,QWORD PTR [rbp-0x48]
  40c457:	mov    rsi,QWORD PTR [rbp-0x40]
  40c45b:	mov    rax,QWORD PTR [rbp-0x38]
  40c45f:	mov    rdi,rax
  40c462:	call   40a82f <_start@@Base+0x459f>
  40c467:	mov    QWORD PTR [rbp-0x40],rax
  40c46b:	jmp    40c849 <_start@@Base+0x65b9>
  40c470:	mov    rdx,QWORD PTR [rbp-0x48]
  40c474:	mov    rcx,QWORD PTR [rbp-0x40]
  40c478:	mov    rax,QWORD PTR [rbp-0x38]
  40c47c:	mov    rsi,rcx
  40c47f:	mov    rdi,rax
  40c482:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40c487:	mov    QWORD PTR [rbp-0x40],rax
  40c48b:	jmp    40c849 <_start@@Base+0x65b9>
  40c490:	mov    rdx,QWORD PTR [rbp-0x48]
  40c494:	mov    rcx,QWORD PTR [rbp-0x40]
  40c498:	mov    rax,QWORD PTR [rbp-0x38]
  40c49c:	mov    rsi,rcx
  40c49f:	mov    rdi,rax
  40c4a2:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40c4a7:	mov    QWORD PTR [rbp-0x40],rax
  40c4ab:	jmp    40c849 <_start@@Base+0x65b9>
  40c4b0:	movabs rax,0x78ffffffffffffff
  40c4ba:	cmp    QWORD PTR [rbp-0x20],rax
  40c4be:	ja     40c5fc <_start@@Base+0x636c>
  40c4c4:	movabs rax,0xff00000000000000
  40c4ce:	and    rax,QWORD PTR [rbp-0x20]
  40c4d2:	mov    rdx,rax
  40c4d5:	movabs rax,0x7800000000000000
  40c4df:	cmp    rdx,rax
  40c4e2:	jne    40c5dc <_start@@Base+0x634c>
  40c4e8:	mov    rax,QWORD PTR [rbp-0x40]
  40c4ec:	mov    QWORD PTR [rbp-0x18],rax
  40c4f0:	mov    rdx,QWORD PTR [rbp-0x48]
  40c4f4:	mov    rsi,QWORD PTR [rbp-0x18]
  40c4f8:	mov    rax,QWORD PTR [rbp-0x38]
  40c4fc:	mov    ecx,0x1
  40c501:	mov    rdi,rax
  40c504:	call   406d6d <_start@@Base+0xadd>
  40c509:	mov    QWORD PTR [rbp-0x40],rax
  40c50d:	mov    rax,QWORD PTR [rbp-0x18]
  40c511:	cmp    rax,QWORD PTR [rbp-0x40]
  40c515:	je     40c5bc <_start@@Base+0x632c>
  40c51b:	vxorps xmm0,xmm0,xmm0
  40c51f:	vmovss DWORD PTR [rbp-0x28],xmm0
  40c524:	mov    rax,QWORD PTR [rbp-0x50]
  40c528:	mov    QWORD PTR [rbp-0x10],rax
  40c52c:	mov    rax,QWORD PTR [rbp-0x40]
  40c530:	mov    QWORD PTR [rbp-0x18],rax
  40c534:	lea    rcx,[rbp-0x28]
  40c538:	mov    rdx,QWORD PTR [rbp-0x48]
  40c53c:	mov    rsi,QWORD PTR [rbp-0x18]
  40c540:	mov    rax,QWORD PTR [rbp-0x38]
  40c544:	mov    rdi,rax
  40c547:	call   428c8d <flatcc_json_parser_float@@Base>
  40c54c:	mov    QWORD PTR [rbp-0x40],rax
  40c550:	mov    rax,QWORD PTR [rbp-0x18]
  40c554:	cmp    rax,QWORD PTR [rbp-0x40]
  40c558:	jne    40c5a4 <_start@@Base+0x6314>
  40c55a:	mov    rax,QWORD PTR [rbp-0x40]
  40c55e:	mov    QWORD PTR [rbp-0x18],rax
  40c562:	lea    rcx,[rbp-0x28]
  40c566:	mov    rdx,QWORD PTR [rbp-0x48]
  40c56a:	mov    rsi,QWORD PTR [rbp-0x18]
  40c56e:	mov    rax,QWORD PTR [rbp-0x38]
  40c572:	mov    r8,rcx
  40c575:	lea    rcx,[rip+0x3ad04]        # 447280 <__data_start@@Base+0x1c0>
  40c57c:	mov    rdi,rax
  40c57f:	call   4087b9 <_start@@Base+0x2529>
  40c584:	mov    QWORD PTR [rbp-0x40],rax
  40c588:	mov    rax,QWORD PTR [rbp-0x40]
  40c58c:	cmp    rax,QWORD PTR [rbp-0x18]
  40c590:	je     40c87c <_start@@Base+0x65ec>
  40c596:	mov    rax,QWORD PTR [rbp-0x40]
  40c59a:	cmp    rax,QWORD PTR [rbp-0x48]
  40c59e:	je     40c87c <_start@@Base+0x65ec>
  40c5a4:	mov    edx,DWORD PTR [rbp-0x28]
  40c5a7:	mov    rax,QWORD PTR [rbp-0x10]
  40c5ab:	vmovd  xmm0,edx
  40c5af:	mov    rdi,rax
  40c5b2:	call   40653e <_start@@Base+0x2ae>
  40c5b7:	jmp    40c849 <_start@@Base+0x65b9>
  40c5bc:	mov    rdx,QWORD PTR [rbp-0x48]
  40c5c0:	mov    rcx,QWORD PTR [rbp-0x40]
  40c5c4:	mov    rax,QWORD PTR [rbp-0x38]
  40c5c8:	mov    rsi,rcx
  40c5cb:	mov    rdi,rax
  40c5ce:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40c5d3:	mov    QWORD PTR [rbp-0x40],rax
  40c5d7:	jmp    40c849 <_start@@Base+0x65b9>
  40c5dc:	mov    rdx,QWORD PTR [rbp-0x48]
  40c5e0:	mov    rcx,QWORD PTR [rbp-0x40]
  40c5e4:	mov    rax,QWORD PTR [rbp-0x38]
  40c5e8:	mov    rsi,rcx
  40c5eb:	mov    rdi,rax
  40c5ee:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40c5f3:	mov    QWORD PTR [rbp-0x40],rax
  40c5f7:	jmp    40c849 <_start@@Base+0x65b9>
  40c5fc:	movabs rax,0xff00000000000000
  40c606:	and    rax,QWORD PTR [rbp-0x20]
  40c60a:	mov    rdx,rax
  40c60d:	movabs rax,0x7a00000000000000
  40c617:	cmp    rdx,rax
  40c61a:	jne    40c718 <_start@@Base+0x6488>
  40c620:	mov    rax,QWORD PTR [rbp-0x40]
  40c624:	mov    QWORD PTR [rbp-0x18],rax
  40c628:	mov    rdx,QWORD PTR [rbp-0x48]
  40c62c:	mov    rsi,QWORD PTR [rbp-0x18]
  40c630:	mov    rax,QWORD PTR [rbp-0x38]
  40c634:	mov    ecx,0x1
  40c639:	mov    rdi,rax
  40c63c:	call   406d6d <_start@@Base+0xadd>
  40c641:	mov    QWORD PTR [rbp-0x40],rax
  40c645:	mov    rax,QWORD PTR [rbp-0x18]
  40c649:	cmp    rax,QWORD PTR [rbp-0x40]
  40c64d:	je     40c6f8 <_start@@Base+0x6468>
  40c653:	vxorps xmm0,xmm0,xmm0
  40c657:	vmovss DWORD PTR [rbp-0x28],xmm0
  40c65c:	mov    rax,QWORD PTR [rbp-0x50]
  40c660:	add    rax,0x8
  40c664:	mov    QWORD PTR [rbp-0x10],rax
  40c668:	mov    rax,QWORD PTR [rbp-0x40]
  40c66c:	mov    QWORD PTR [rbp-0x18],rax
  40c670:	lea    rcx,[rbp-0x28]
  40c674:	mov    rdx,QWORD PTR [rbp-0x48]
  40c678:	mov    rsi,QWORD PTR [rbp-0x18]
  40c67c:	mov    rax,QWORD PTR [rbp-0x38]
  40c680:	mov    rdi,rax
  40c683:	call   428c8d <flatcc_json_parser_float@@Base>
  40c688:	mov    QWORD PTR [rbp-0x40],rax
  40c68c:	mov    rax,QWORD PTR [rbp-0x18]
  40c690:	cmp    rax,QWORD PTR [rbp-0x40]
  40c694:	jne    40c6e0 <_start@@Base+0x6450>
  40c696:	mov    rax,QWORD PTR [rbp-0x40]
  40c69a:	mov    QWORD PTR [rbp-0x18],rax
  40c69e:	lea    rcx,[rbp-0x28]
  40c6a2:	mov    rdx,QWORD PTR [rbp-0x48]
  40c6a6:	mov    rsi,QWORD PTR [rbp-0x18]
  40c6aa:	mov    rax,QWORD PTR [rbp-0x38]
  40c6ae:	mov    r8,rcx
  40c6b1:	lea    rcx,[rip+0x3abe8]        # 4472a0 <__data_start@@Base+0x1e0>
  40c6b8:	mov    rdi,rax
  40c6bb:	call   4087b9 <_start@@Base+0x2529>
  40c6c0:	mov    QWORD PTR [rbp-0x40],rax
  40c6c4:	mov    rax,QWORD PTR [rbp-0x40]
  40c6c8:	cmp    rax,QWORD PTR [rbp-0x18]
  40c6cc:	je     40c87f <_start@@Base+0x65ef>
  40c6d2:	mov    rax,QWORD PTR [rbp-0x40]
  40c6d6:	cmp    rax,QWORD PTR [rbp-0x48]
  40c6da:	je     40c87f <_start@@Base+0x65ef>
  40c6e0:	mov    edx,DWORD PTR [rbp-0x28]
  40c6e3:	mov    rax,QWORD PTR [rbp-0x10]
  40c6e7:	vmovd  xmm0,edx
  40c6eb:	mov    rdi,rax
  40c6ee:	call   40653e <_start@@Base+0x2ae>
  40c6f3:	jmp    40c849 <_start@@Base+0x65b9>
  40c6f8:	mov    rdx,QWORD PTR [rbp-0x48]
  40c6fc:	mov    rcx,QWORD PTR [rbp-0x40]
  40c700:	mov    rax,QWORD PTR [rbp-0x38]
  40c704:	mov    rsi,rcx
  40c707:	mov    rdi,rax
  40c70a:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40c70f:	mov    QWORD PTR [rbp-0x40],rax
  40c713:	jmp    40c849 <_start@@Base+0x65b9>
  40c718:	movabs rax,0xff00000000000000
  40c722:	and    rax,QWORD PTR [rbp-0x20]
  40c726:	mov    rdx,rax
  40c729:	movabs rax,0x7900000000000000
  40c733:	cmp    rdx,rax
  40c736:	jne    40c82e <_start@@Base+0x659e>
  40c73c:	mov    rax,QWORD PTR [rbp-0x40]
  40c740:	mov    QWORD PTR [rbp-0x18],rax
  40c744:	mov    rdx,QWORD PTR [rbp-0x48]
  40c748:	mov    rsi,QWORD PTR [rbp-0x18]
  40c74c:	mov    rax,QWORD PTR [rbp-0x38]
  40c750:	mov    ecx,0x1
  40c755:	mov    rdi,rax
  40c758:	call   406d6d <_start@@Base+0xadd>
  40c75d:	mov    QWORD PTR [rbp-0x40],rax
  40c761:	mov    rax,QWORD PTR [rbp-0x18]
  40c765:	cmp    rax,QWORD PTR [rbp-0x40]
  40c769:	je     40c811 <_start@@Base+0x6581>
  40c76f:	vxorps xmm0,xmm0,xmm0
  40c773:	vmovss DWORD PTR [rbp-0x28],xmm0
  40c778:	mov    rax,QWORD PTR [rbp-0x50]
  40c77c:	add    rax,0x4
  40c780:	mov    QWORD PTR [rbp-0x10],rax
  40c784:	mov    rax,QWORD PTR [rbp-0x40]
  40c788:	mov    QWORD PTR [rbp-0x18],rax
  40c78c:	lea    rcx,[rbp-0x28]
  40c790:	mov    rdx,QWORD PTR [rbp-0x48]
  40c794:	mov    rsi,QWORD PTR [rbp-0x18]
  40c798:	mov    rax,QWORD PTR [rbp-0x38]
  40c79c:	mov    rdi,rax
  40c79f:	call   428c8d <flatcc_json_parser_float@@Base>
  40c7a4:	mov    QWORD PTR [rbp-0x40],rax
  40c7a8:	mov    rax,QWORD PTR [rbp-0x18]
  40c7ac:	cmp    rax,QWORD PTR [rbp-0x40]
  40c7b0:	jne    40c7fc <_start@@Base+0x656c>
  40c7b2:	mov    rax,QWORD PTR [rbp-0x40]
  40c7b6:	mov    QWORD PTR [rbp-0x18],rax
  40c7ba:	lea    rcx,[rbp-0x28]
  40c7be:	mov    rdx,QWORD PTR [rbp-0x48]
  40c7c2:	mov    rsi,QWORD PTR [rbp-0x18]
  40c7c6:	mov    rax,QWORD PTR [rbp-0x38]
  40c7ca:	mov    r8,rcx
  40c7cd:	lea    rcx,[rip+0x3aaec]        # 4472c0 <__data_start@@Base+0x200>
  40c7d4:	mov    rdi,rax
  40c7d7:	call   4087b9 <_start@@Base+0x2529>
  40c7dc:	mov    QWORD PTR [rbp-0x40],rax
  40c7e0:	mov    rax,QWORD PTR [rbp-0x40]
  40c7e4:	cmp    rax,QWORD PTR [rbp-0x18]
  40c7e8:	je     40c882 <_start@@Base+0x65f2>
  40c7ee:	mov    rax,QWORD PTR [rbp-0x40]
  40c7f2:	cmp    rax,QWORD PTR [rbp-0x48]
  40c7f6:	je     40c882 <_start@@Base+0x65f2>
  40c7fc:	mov    edx,DWORD PTR [rbp-0x28]
  40c7ff:	mov    rax,QWORD PTR [rbp-0x10]
  40c803:	vmovd  xmm0,edx
  40c807:	mov    rdi,rax
  40c80a:	call   40653e <_start@@Base+0x2ae>
  40c80f:	jmp    40c849 <_start@@Base+0x65b9>
  40c811:	mov    rdx,QWORD PTR [rbp-0x48]
  40c815:	mov    rcx,QWORD PTR [rbp-0x40]
  40c819:	mov    rax,QWORD PTR [rbp-0x38]
  40c81d:	mov    rsi,rcx
  40c820:	mov    rdi,rax
  40c823:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40c828:	mov    QWORD PTR [rbp-0x40],rax
  40c82c:	jmp    40c849 <_start@@Base+0x65b9>
  40c82e:	mov    rdx,QWORD PTR [rbp-0x48]
  40c832:	mov    rcx,QWORD PTR [rbp-0x40]
  40c836:	mov    rax,QWORD PTR [rbp-0x38]
  40c83a:	mov    rsi,rcx
  40c83d:	mov    rdi,rax
  40c840:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40c845:	mov    QWORD PTR [rbp-0x40],rax
  40c849:	lea    rcx,[rbp-0x2c]
  40c84d:	mov    rdx,QWORD PTR [rbp-0x48]
  40c851:	mov    rsi,QWORD PTR [rbp-0x40]
  40c855:	mov    rax,QWORD PTR [rbp-0x38]
  40c859:	mov    rdi,rax
  40c85c:	call   406a34 <_start@@Base+0x7a4>
  40c861:	mov    QWORD PTR [rbp-0x40],rax
  40c865:	mov    eax,DWORD PTR [rbp-0x2c]
  40c868:	test   eax,eax
  40c86a:	jne    40c14f <_start@@Base+0x5ebf>
  40c870:	mov    rax,QWORD PTR [rbp-0x40]
  40c874:	jmp    40c89c <_start@@Base+0x660c>
  40c876:	nop
  40c877:	jmp    40c883 <_start@@Base+0x65f3>
  40c879:	nop
  40c87a:	jmp    40c883 <_start@@Base+0x65f3>
  40c87c:	nop
  40c87d:	jmp    40c883 <_start@@Base+0x65f3>
  40c87f:	nop
  40c880:	jmp    40c883 <_start@@Base+0x65f3>
  40c882:	nop
  40c883:	mov    rdx,QWORD PTR [rbp-0x48]
  40c887:	mov    rsi,QWORD PTR [rbp-0x40]
  40c88b:	mov    rax,QWORD PTR [rbp-0x38]
  40c88f:	mov    ecx,0x21
  40c894:	mov    rdi,rax
  40c897:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40c89c:	mov    rdi,QWORD PTR [rbp-0x8]
  40c8a0:	xor    rdi,QWORD PTR fs:0x28
  40c8a9:	je     40c8b0 <_start@@Base+0x6620>
  40c8ab:	call   4061a0 <__stack_chk_fail@plt>
  40c8b0:	leave  
  40c8b1:	ret    
  40c8b2:	endbr64 
  40c8b6:	push   rbp
  40c8b7:	mov    rbp,rsp
  40c8ba:	sub    rsp,0x30
  40c8be:	mov    QWORD PTR [rbp-0x18],rdi
  40c8c2:	mov    QWORD PTR [rbp-0x20],rsi
  40c8c6:	mov    QWORD PTR [rbp-0x28],rdx
  40c8ca:	mov    QWORD PTR [rbp-0x30],rcx
  40c8ce:	mov    rax,QWORD PTR [rbp-0x30]
  40c8d2:	mov    DWORD PTR [rax],0x0
  40c8d8:	mov    rax,QWORD PTR [rbp-0x18]
  40c8dc:	mov    rax,QWORD PTR [rax]
  40c8df:	mov    edx,0x10
  40c8e4:	mov    esi,0x20
  40c8e9:	mov    rdi,rax
  40c8ec:	call   41e209 <flatcc_builder_start_struct@@Base>
  40c8f1:	mov    QWORD PTR [rbp-0x8],rax
  40c8f5:	cmp    QWORD PTR [rbp-0x8],0x0
  40c8fa:	je     40c949 <_start@@Base+0x66b9>
  40c8fc:	mov    rcx,QWORD PTR [rbp-0x8]
  40c900:	mov    rdx,QWORD PTR [rbp-0x28]
  40c904:	mov    rsi,QWORD PTR [rbp-0x20]
  40c908:	mov    rax,QWORD PTR [rbp-0x18]
  40c90c:	mov    rdi,rax
  40c90f:	call   40c103 <_start@@Base+0x5e73>
  40c914:	mov    QWORD PTR [rbp-0x20],rax
  40c918:	mov    rax,QWORD PTR [rbp-0x20]
  40c91c:	cmp    rax,QWORD PTR [rbp-0x28]
  40c920:	je     40c94c <_start@@Base+0x66bc>
  40c922:	mov    rax,QWORD PTR [rbp-0x18]
  40c926:	mov    rax,QWORD PTR [rax]
  40c929:	mov    rdi,rax
  40c92c:	call   41e28b <flatcc_builder_end_struct@@Base>
  40c931:	mov    edx,eax
  40c933:	mov    rax,QWORD PTR [rbp-0x30]
  40c937:	mov    DWORD PTR [rax],edx
  40c939:	mov    rax,QWORD PTR [rbp-0x30]
  40c93d:	mov    eax,DWORD PTR [rax]
  40c93f:	test   eax,eax
  40c941:	je     40c94c <_start@@Base+0x66bc>
  40c943:	mov    rax,QWORD PTR [rbp-0x20]
  40c947:	jmp    40c966 <_start@@Base+0x66d6>
  40c949:	nop
  40c94a:	jmp    40c94d <_start@@Base+0x66bd>
  40c94c:	nop
  40c94d:	mov    rdx,QWORD PTR [rbp-0x28]
  40c951:	mov    rsi,QWORD PTR [rbp-0x20]
  40c955:	mov    rax,QWORD PTR [rbp-0x18]
  40c959:	mov    ecx,0x21
  40c95e:	mov    rdi,rax
  40c961:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40c966:	leave  
  40c967:	ret    
  40c968:	endbr64 
  40c96c:	push   rbp
  40c96d:	mov    rbp,rsp
  40c970:	sub    rsp,0x50
  40c974:	mov    QWORD PTR [rbp-0x38],rdi
  40c978:	mov    QWORD PTR [rbp-0x40],rsi
  40c97c:	mov    QWORD PTR [rbp-0x48],rdx
  40c980:	mov    QWORD PTR [rbp-0x50],rcx
  40c984:	mov    rax,QWORD PTR fs:0x28
  40c98d:	mov    QWORD PTR [rbp-0x8],rax
  40c991:	xor    eax,eax
  40c993:	lea    rcx,[rbp-0x28]
  40c997:	mov    rdx,QWORD PTR [rbp-0x48]
  40c99b:	mov    rsi,QWORD PTR [rbp-0x40]
  40c99f:	mov    rax,QWORD PTR [rbp-0x38]
  40c9a3:	mov    rdi,rax
  40c9a6:	call   406977 <_start@@Base+0x6e7>
  40c9ab:	mov    QWORD PTR [rbp-0x40],rax
  40c9af:	jmp    40cc2f <_start@@Base+0x699f>
  40c9b4:	mov    rdx,QWORD PTR [rbp-0x48]
  40c9b8:	mov    rcx,QWORD PTR [rbp-0x40]
  40c9bc:	mov    rax,QWORD PTR [rbp-0x38]
  40c9c0:	mov    rsi,rcx
  40c9c3:	mov    rdi,rax
  40c9c6:	call   4066e9 <_start@@Base+0x459>
  40c9cb:	mov    QWORD PTR [rbp-0x40],rax
  40c9cf:	mov    rdx,QWORD PTR [rbp-0x48]
  40c9d3:	mov    rax,QWORD PTR [rbp-0x40]
  40c9d7:	mov    rsi,rdx
  40c9da:	mov    rdi,rax
  40c9dd:	call   406876 <_start@@Base+0x5e6>
  40c9e2:	mov    QWORD PTR [rbp-0x20],rax
  40c9e6:	movabs rax,0xffff000000000000
  40c9f0:	and    rax,QWORD PTR [rbp-0x20]
  40c9f4:	mov    rdx,rax
  40c9f7:	movabs rax,0x6964000000000000
  40ca01:	cmp    rdx,rax
  40ca04:	jne    40cafa <_start@@Base+0x686a>
  40ca0a:	mov    rax,QWORD PTR [rbp-0x40]
  40ca0e:	mov    QWORD PTR [rbp-0x18],rax
  40ca12:	mov    rdx,QWORD PTR [rbp-0x48]
  40ca16:	mov    rsi,QWORD PTR [rbp-0x18]
  40ca1a:	mov    rax,QWORD PTR [rbp-0x38]
  40ca1e:	mov    ecx,0x2
  40ca23:	mov    rdi,rax
  40ca26:	call   406d6d <_start@@Base+0xadd>
  40ca2b:	mov    QWORD PTR [rbp-0x40],rax
  40ca2f:	mov    rax,QWORD PTR [rbp-0x18]
  40ca33:	cmp    rax,QWORD PTR [rbp-0x40]
  40ca37:	je     40cada <_start@@Base+0x684a>
  40ca3d:	mov    DWORD PTR [rbp-0x24],0x0
  40ca44:	mov    rax,QWORD PTR [rbp-0x50]
  40ca48:	mov    QWORD PTR [rbp-0x10],rax
  40ca4c:	mov    rax,QWORD PTR [rbp-0x40]
  40ca50:	mov    QWORD PTR [rbp-0x18],rax
  40ca54:	lea    rcx,[rbp-0x24]
  40ca58:	mov    rdx,QWORD PTR [rbp-0x48]
  40ca5c:	mov    rsi,QWORD PTR [rbp-0x18]
  40ca60:	mov    rax,QWORD PTR [rbp-0x38]
  40ca64:	mov    rdi,rax
  40ca67:	call   40751b <_start@@Base+0x128b>
  40ca6c:	mov    QWORD PTR [rbp-0x40],rax
  40ca70:	mov    rax,QWORD PTR [rbp-0x18]
  40ca74:	cmp    rax,QWORD PTR [rbp-0x40]
  40ca78:	jne    40cac4 <_start@@Base+0x6834>
  40ca7a:	mov    rax,QWORD PTR [rbp-0x40]
  40ca7e:	mov    QWORD PTR [rbp-0x18],rax
  40ca82:	lea    rcx,[rbp-0x24]
  40ca86:	mov    rdx,QWORD PTR [rbp-0x48]
  40ca8a:	mov    rsi,QWORD PTR [rbp-0x18]
  40ca8e:	mov    rax,QWORD PTR [rbp-0x38]
  40ca92:	mov    r8,rcx
  40ca95:	lea    rcx,[rip+0x3a844]        # 4472e0 <__data_start@@Base+0x220>
  40ca9c:	mov    rdi,rax
  40ca9f:	call   407ccd <_start@@Base+0x1a3d>
  40caa4:	mov    QWORD PTR [rbp-0x40],rax
  40caa8:	mov    rax,QWORD PTR [rbp-0x40]
  40caac:	cmp    rax,QWORD PTR [rbp-0x18]
  40cab0:	je     40cc40 <_start@@Base+0x69b0>
  40cab6:	mov    rax,QWORD PTR [rbp-0x40]
  40caba:	cmp    rax,QWORD PTR [rbp-0x48]
  40cabe:	je     40cc40 <_start@@Base+0x69b0>
  40cac4:	mov    edx,DWORD PTR [rbp-0x24]
  40cac7:	mov    rax,QWORD PTR [rbp-0x10]
  40cacb:	mov    esi,edx
  40cacd:	mov    rdi,rax
  40cad0:	call   4063ef <_start@@Base+0x15f>
  40cad5:	jmp    40cc13 <_start@@Base+0x6983>
  40cada:	mov    rdx,QWORD PTR [rbp-0x48]
  40cade:	mov    rcx,QWORD PTR [rbp-0x40]
  40cae2:	mov    rax,QWORD PTR [rbp-0x38]
  40cae6:	mov    rsi,rcx
  40cae9:	mov    rdi,rax
  40caec:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40caf1:	mov    QWORD PTR [rbp-0x40],rax
  40caf5:	jmp    40cc13 <_start@@Base+0x6983>
  40cafa:	movabs rax,0x64697374616e6365
  40cb04:	cmp    QWORD PTR [rbp-0x20],rax
  40cb08:	jne    40cbf8 <_start@@Base+0x6968>
  40cb0e:	mov    rax,QWORD PTR [rbp-0x40]
  40cb12:	mov    QWORD PTR [rbp-0x18],rax
  40cb16:	mov    rdx,QWORD PTR [rbp-0x48]
  40cb1a:	mov    rsi,QWORD PTR [rbp-0x18]
  40cb1e:	mov    rax,QWORD PTR [rbp-0x38]
  40cb22:	mov    ecx,0x8
  40cb27:	mov    rdi,rax
  40cb2a:	call   406d6d <_start@@Base+0xadd>
  40cb2f:	mov    QWORD PTR [rbp-0x40],rax
  40cb33:	mov    rax,QWORD PTR [rbp-0x18]
  40cb37:	cmp    rax,QWORD PTR [rbp-0x40]
  40cb3b:	je     40cbdb <_start@@Base+0x694b>
  40cb41:	mov    DWORD PTR [rbp-0x24],0x0
  40cb48:	mov    rax,QWORD PTR [rbp-0x50]
  40cb4c:	add    rax,0x4
  40cb50:	mov    QWORD PTR [rbp-0x10],rax
  40cb54:	mov    rax,QWORD PTR [rbp-0x40]
  40cb58:	mov    QWORD PTR [rbp-0x18],rax
  40cb5c:	lea    rcx,[rbp-0x24]
  40cb60:	mov    rdx,QWORD PTR [rbp-0x48]
  40cb64:	mov    rsi,QWORD PTR [rbp-0x18]
  40cb68:	mov    rax,QWORD PTR [rbp-0x38]
  40cb6c:	mov    rdi,rax
  40cb6f:	call   40751b <_start@@Base+0x128b>
  40cb74:	mov    QWORD PTR [rbp-0x40],rax
  40cb78:	mov    rax,QWORD PTR [rbp-0x18]
  40cb7c:	cmp    rax,QWORD PTR [rbp-0x40]
  40cb80:	jne    40cbc8 <_start@@Base+0x6938>
  40cb82:	mov    rax,QWORD PTR [rbp-0x40]
  40cb86:	mov    QWORD PTR [rbp-0x18],rax
  40cb8a:	lea    rcx,[rbp-0x24]
  40cb8e:	mov    rdx,QWORD PTR [rbp-0x48]
  40cb92:	mov    rsi,QWORD PTR [rbp-0x18]
  40cb96:	mov    rax,QWORD PTR [rbp-0x38]
  40cb9a:	mov    r8,rcx
  40cb9d:	lea    rcx,[rip+0x3a75c]        # 447300 <__data_start@@Base+0x240>
  40cba4:	mov    rdi,rax
  40cba7:	call   407ccd <_start@@Base+0x1a3d>
  40cbac:	mov    QWORD PTR [rbp-0x40],rax
  40cbb0:	mov    rax,QWORD PTR [rbp-0x40]
  40cbb4:	cmp    rax,QWORD PTR [rbp-0x18]
  40cbb8:	je     40cc43 <_start@@Base+0x69b3>
  40cbbe:	mov    rax,QWORD PTR [rbp-0x40]
  40cbc2:	cmp    rax,QWORD PTR [rbp-0x48]
  40cbc6:	je     40cc43 <_start@@Base+0x69b3>
  40cbc8:	mov    edx,DWORD PTR [rbp-0x24]
  40cbcb:	mov    rax,QWORD PTR [rbp-0x10]
  40cbcf:	mov    esi,edx
  40cbd1:	mov    rdi,rax
  40cbd4:	call   4063ef <_start@@Base+0x15f>
  40cbd9:	jmp    40cc13 <_start@@Base+0x6983>
  40cbdb:	mov    rdx,QWORD PTR [rbp-0x48]
  40cbdf:	mov    rcx,QWORD PTR [rbp-0x40]
  40cbe3:	mov    rax,QWORD PTR [rbp-0x38]
  40cbe7:	mov    rsi,rcx
  40cbea:	mov    rdi,rax
  40cbed:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40cbf2:	mov    QWORD PTR [rbp-0x40],rax
  40cbf6:	jmp    40cc13 <_start@@Base+0x6983>
  40cbf8:	mov    rdx,QWORD PTR [rbp-0x48]
  40cbfc:	mov    rcx,QWORD PTR [rbp-0x40]
  40cc00:	mov    rax,QWORD PTR [rbp-0x38]
  40cc04:	mov    rsi,rcx
  40cc07:	mov    rdi,rax
  40cc0a:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40cc0f:	mov    QWORD PTR [rbp-0x40],rax
  40cc13:	lea    rcx,[rbp-0x28]
  40cc17:	mov    rdx,QWORD PTR [rbp-0x48]
  40cc1b:	mov    rsi,QWORD PTR [rbp-0x40]
  40cc1f:	mov    rax,QWORD PTR [rbp-0x38]
  40cc23:	mov    rdi,rax
  40cc26:	call   406a34 <_start@@Base+0x7a4>
  40cc2b:	mov    QWORD PTR [rbp-0x40],rax
  40cc2f:	mov    eax,DWORD PTR [rbp-0x28]
  40cc32:	test   eax,eax
  40cc34:	jne    40c9b4 <_start@@Base+0x6724>
  40cc3a:	mov    rax,QWORD PTR [rbp-0x40]
  40cc3e:	jmp    40cc5d <_start@@Base+0x69cd>
  40cc40:	nop
  40cc41:	jmp    40cc44 <_start@@Base+0x69b4>
  40cc43:	nop
  40cc44:	mov    rdx,QWORD PTR [rbp-0x48]
  40cc48:	mov    rsi,QWORD PTR [rbp-0x40]
  40cc4c:	mov    rax,QWORD PTR [rbp-0x38]
  40cc50:	mov    ecx,0x21
  40cc55:	mov    rdi,rax
  40cc58:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40cc5d:	mov    rdi,QWORD PTR [rbp-0x8]
  40cc61:	xor    rdi,QWORD PTR fs:0x28
  40cc6a:	je     40cc71 <_start@@Base+0x69e1>
  40cc6c:	call   4061a0 <__stack_chk_fail@plt>
  40cc71:	leave  
  40cc72:	ret    
  40cc73:	endbr64 
  40cc77:	push   rbp
  40cc78:	mov    rbp,rsp
  40cc7b:	sub    rsp,0x30
  40cc7f:	mov    QWORD PTR [rbp-0x18],rdi
  40cc83:	mov    QWORD PTR [rbp-0x20],rsi
  40cc87:	mov    QWORD PTR [rbp-0x28],rdx
  40cc8b:	mov    QWORD PTR [rbp-0x30],rcx
  40cc8f:	mov    rax,QWORD PTR [rbp-0x30]
  40cc93:	mov    DWORD PTR [rax],0x0
  40cc99:	mov    rax,QWORD PTR [rbp-0x18]
  40cc9d:	mov    rax,QWORD PTR [rax]
  40cca0:	mov    edx,0x4
  40cca5:	mov    esi,0x8
  40ccaa:	mov    rdi,rax
  40ccad:	call   41e209 <flatcc_builder_start_struct@@Base>
  40ccb2:	mov    QWORD PTR [rbp-0x8],rax
  40ccb6:	cmp    QWORD PTR [rbp-0x8],0x0
  40ccbb:	je     40cd0a <_start@@Base+0x6a7a>
  40ccbd:	mov    rcx,QWORD PTR [rbp-0x8]
  40ccc1:	mov    rdx,QWORD PTR [rbp-0x28]
  40ccc5:	mov    rsi,QWORD PTR [rbp-0x20]
  40ccc9:	mov    rax,QWORD PTR [rbp-0x18]
  40cccd:	mov    rdi,rax
  40ccd0:	call   40c968 <_start@@Base+0x66d8>
  40ccd5:	mov    QWORD PTR [rbp-0x20],rax
  40ccd9:	mov    rax,QWORD PTR [rbp-0x20]
  40ccdd:	cmp    rax,QWORD PTR [rbp-0x28]
  40cce1:	je     40cd0d <_start@@Base+0x6a7d>
  40cce3:	mov    rax,QWORD PTR [rbp-0x18]
  40cce7:	mov    rax,QWORD PTR [rax]
  40ccea:	mov    rdi,rax
  40cced:	call   41e28b <flatcc_builder_end_struct@@Base>
  40ccf2:	mov    edx,eax
  40ccf4:	mov    rax,QWORD PTR [rbp-0x30]
  40ccf8:	mov    DWORD PTR [rax],edx
  40ccfa:	mov    rax,QWORD PTR [rbp-0x30]
  40ccfe:	mov    eax,DWORD PTR [rax]
  40cd00:	test   eax,eax
  40cd02:	je     40cd0d <_start@@Base+0x6a7d>
  40cd04:	mov    rax,QWORD PTR [rbp-0x20]
  40cd08:	jmp    40cd27 <_start@@Base+0x6a97>
  40cd0a:	nop
  40cd0b:	jmp    40cd0e <_start@@Base+0x6a7e>
  40cd0d:	nop
  40cd0e:	mov    rdx,QWORD PTR [rbp-0x28]
  40cd12:	mov    rsi,QWORD PTR [rbp-0x20]
  40cd16:	mov    rax,QWORD PTR [rbp-0x18]
  40cd1a:	mov    ecx,0x21
  40cd1f:	mov    rdi,rax
  40cd22:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40cd27:	leave  
  40cd28:	ret    
  40cd29:	endbr64 
  40cd2d:	push   rbp
  40cd2e:	mov    rbp,rsp
  40cd31:	sub    rsp,0x60
  40cd35:	mov    QWORD PTR [rbp-0x48],rdi
  40cd39:	mov    QWORD PTR [rbp-0x50],rsi
  40cd3d:	mov    QWORD PTR [rbp-0x58],rdx
  40cd41:	mov    QWORD PTR [rbp-0x60],rcx
  40cd45:	mov    rax,QWORD PTR fs:0x28
  40cd4e:	mov    QWORD PTR [rbp-0x8],rax
  40cd52:	xor    eax,eax
  40cd54:	mov    rax,QWORD PTR [rbp-0x60]
  40cd58:	mov    DWORD PTR [rax],0x0
  40cd5e:	mov    rax,QWORD PTR [rbp-0x48]
  40cd62:	mov    rax,QWORD PTR [rax]
  40cd65:	mov    esi,0x3
  40cd6a:	mov    rdi,rax
  40cd6d:	call   41ed41 <flatcc_builder_start_table@@Base>
  40cd72:	test   eax,eax
  40cd74:	jne    40d1e4 <_start@@Base+0x6f54>
  40cd7a:	lea    rcx,[rbp-0x38]
  40cd7e:	mov    rdx,QWORD PTR [rbp-0x58]
  40cd82:	mov    rsi,QWORD PTR [rbp-0x50]
  40cd86:	mov    rax,QWORD PTR [rbp-0x48]
  40cd8a:	mov    rdi,rax
  40cd8d:	call   406977 <_start@@Base+0x6e7>
  40cd92:	mov    QWORD PTR [rbp-0x50],rax
  40cd96:	jmp    40d1a7 <_start@@Base+0x6f17>
  40cd9b:	mov    rdx,QWORD PTR [rbp-0x58]
  40cd9f:	mov    rcx,QWORD PTR [rbp-0x50]
  40cda3:	mov    rax,QWORD PTR [rbp-0x48]
  40cda7:	mov    rsi,rcx
  40cdaa:	mov    rdi,rax
  40cdad:	call   4066e9 <_start@@Base+0x459>
  40cdb2:	mov    QWORD PTR [rbp-0x50],rax
  40cdb6:	mov    rdx,QWORD PTR [rbp-0x58]
  40cdba:	mov    rax,QWORD PTR [rbp-0x50]
  40cdbe:	mov    rsi,rdx
  40cdc1:	mov    rdi,rax
  40cdc4:	call   406876 <_start@@Base+0x5e6>
  40cdc9:	mov    QWORD PTR [rbp-0x28],rax
  40cdcd:	movabs rax,0x6963ffffffffffff
  40cdd7:	cmp    QWORD PTR [rbp-0x28],rax
  40cddb:	ja     40cf54 <_start@@Base+0x6cc4>
  40cde1:	mov    rax,QWORD PTR [rbp-0x28]
  40cde5:	and    rax,0xffffffffff000000
  40cdeb:	mov    rdx,rax
  40cdee:	movabs rax,0x636f756e74000000
  40cdf8:	cmp    rdx,rax
  40cdfb:	jne    40cf34 <_start@@Base+0x6ca4>
  40ce01:	mov    rax,QWORD PTR [rbp-0x50]
  40ce05:	mov    QWORD PTR [rbp-0x20],rax
  40ce09:	mov    rdx,QWORD PTR [rbp-0x58]
  40ce0d:	mov    rsi,QWORD PTR [rbp-0x20]
  40ce11:	mov    rax,QWORD PTR [rbp-0x48]
  40ce15:	mov    ecx,0x5
  40ce1a:	mov    rdi,rax
  40ce1d:	call   406d6d <_start@@Base+0xadd>
  40ce22:	mov    QWORD PTR [rbp-0x50],rax
  40ce26:	mov    rax,QWORD PTR [rbp-0x20]
  40ce2a:	cmp    rax,QWORD PTR [rbp-0x50]
  40ce2e:	je     40cf14 <_start@@Base+0x6c84>
  40ce34:	mov    WORD PTR [rbp-0x30],0x0
  40ce3a:	mov    rax,QWORD PTR [rbp-0x50]
  40ce3e:	mov    QWORD PTR [rbp-0x20],rax
  40ce42:	lea    rcx,[rbp-0x30]
  40ce46:	mov    rdx,QWORD PTR [rbp-0x58]
  40ce4a:	mov    rsi,QWORD PTR [rbp-0x20]
  40ce4e:	mov    rax,QWORD PTR [rbp-0x48]
  40ce52:	mov    rdi,rax
  40ce55:	call   4075e1 <_start@@Base+0x1351>
  40ce5a:	mov    QWORD PTR [rbp-0x50],rax
  40ce5e:	mov    rax,QWORD PTR [rbp-0x20]
  40ce62:	cmp    rax,QWORD PTR [rbp-0x50]
  40ce66:	jne    40ceb2 <_start@@Base+0x6c22>
  40ce68:	mov    rax,QWORD PTR [rbp-0x50]
  40ce6c:	mov    QWORD PTR [rbp-0x20],rax
  40ce70:	lea    rcx,[rbp-0x30]
  40ce74:	mov    rdx,QWORD PTR [rbp-0x58]
  40ce78:	mov    rsi,QWORD PTR [rbp-0x20]
  40ce7c:	mov    rax,QWORD PTR [rbp-0x48]
  40ce80:	mov    r8,rcx
  40ce83:	lea    rcx,[rip+0x3a496]        # 447320 <__data_start@@Base+0x260>
  40ce8a:	mov    rdi,rax
  40ce8d:	call   407e2a <_start@@Base+0x1b9a>
  40ce92:	mov    QWORD PTR [rbp-0x50],rax
  40ce96:	mov    rax,QWORD PTR [rbp-0x50]
  40ce9a:	cmp    rax,QWORD PTR [rbp-0x20]
  40ce9e:	je     40d1e7 <_start@@Base+0x6f57>
  40cea4:	mov    rax,QWORD PTR [rbp-0x50]
  40cea8:	cmp    rax,QWORD PTR [rbp-0x58]
  40ceac:	je     40d1e7 <_start@@Base+0x6f57>
  40ceb2:	movzx  eax,WORD PTR [rbp-0x30]
  40ceb6:	test   ax,ax
  40ceb9:	jne    40cecd <_start@@Base+0x6c3d>
  40cebb:	mov    rax,QWORD PTR [rbp-0x48]
  40cebf:	mov    eax,DWORD PTR [rax+0x10]
  40cec2:	and    eax,0x2
  40cec5:	test   eax,eax
  40cec7:	je     40d18b <_start@@Base+0x6efb>
  40cecd:	mov    rax,QWORD PTR [rbp-0x48]
  40ced1:	mov    rax,QWORD PTR [rax]
  40ced4:	mov    ecx,0x2
  40ced9:	mov    edx,0x2
  40cede:	mov    esi,0x2
  40cee3:	mov    rdi,rax
  40cee6:	call   420ef1 <flatcc_builder_table_add@@Base>
  40ceeb:	mov    QWORD PTR [rbp-0x18],rax
  40ceef:	cmp    QWORD PTR [rbp-0x18],0x0
  40cef4:	je     40d1ea <_start@@Base+0x6f5a>
  40cefa:	movzx  eax,WORD PTR [rbp-0x30]
  40cefe:	movzx  edx,ax
  40cf01:	mov    rax,QWORD PTR [rbp-0x18]
  40cf05:	mov    esi,edx
  40cf07:	mov    rdi,rax
  40cf0a:	call   4063ba <_start@@Base+0x12a>
  40cf0f:	jmp    40d18b <_start@@Base+0x6efb>
  40cf14:	mov    rdx,QWORD PTR [rbp-0x58]
  40cf18:	mov    rcx,QWORD PTR [rbp-0x50]
  40cf1c:	mov    rax,QWORD PTR [rbp-0x48]
  40cf20:	mov    rsi,rcx
  40cf23:	mov    rdi,rax
  40cf26:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40cf2b:	mov    QWORD PTR [rbp-0x50],rax
  40cf2f:	jmp    40d18b <_start@@Base+0x6efb>
  40cf34:	mov    rdx,QWORD PTR [rbp-0x58]
  40cf38:	mov    rcx,QWORD PTR [rbp-0x50]
  40cf3c:	mov    rax,QWORD PTR [rbp-0x48]
  40cf40:	mov    rsi,rcx
  40cf43:	mov    rdi,rax
  40cf46:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40cf4b:	mov    QWORD PTR [rbp-0x50],rax
  40cf4f:	jmp    40d18b <_start@@Base+0x6efb>
  40cf54:	movabs rax,0xffffff0000000000
  40cf5e:	and    rax,QWORD PTR [rbp-0x28]
  40cf62:	mov    rdx,rax
  40cf65:	movabs rax,0x76616c0000000000
  40cf6f:	cmp    rdx,rax
  40cf72:	jne    40d0ab <_start@@Base+0x6e1b>
  40cf78:	mov    rax,QWORD PTR [rbp-0x50]
  40cf7c:	mov    QWORD PTR [rbp-0x20],rax
  40cf80:	mov    rdx,QWORD PTR [rbp-0x58]
  40cf84:	mov    rsi,QWORD PTR [rbp-0x20]
  40cf88:	mov    rax,QWORD PTR [rbp-0x48]
  40cf8c:	mov    ecx,0x3
  40cf91:	mov    rdi,rax
  40cf94:	call   406d6d <_start@@Base+0xadd>
  40cf99:	mov    QWORD PTR [rbp-0x50],rax
  40cf9d:	mov    rax,QWORD PTR [rbp-0x20]
  40cfa1:	cmp    rax,QWORD PTR [rbp-0x50]
  40cfa5:	je     40d08b <_start@@Base+0x6dfb>
  40cfab:	mov    QWORD PTR [rbp-0x30],0x0
  40cfb3:	mov    rax,QWORD PTR [rbp-0x50]
  40cfb7:	mov    QWORD PTR [rbp-0x20],rax
  40cfbb:	lea    rcx,[rbp-0x30]
  40cfbf:	mov    rdx,QWORD PTR [rbp-0x58]
  40cfc3:	mov    rsi,QWORD PTR [rbp-0x20]
  40cfc7:	mov    rax,QWORD PTR [rbp-0x48]
  40cfcb:	mov    rdi,rax
  40cfce:	call   407769 <_start@@Base+0x14d9>
  40cfd3:	mov    QWORD PTR [rbp-0x50],rax
  40cfd7:	mov    rax,QWORD PTR [rbp-0x20]
  40cfdb:	cmp    rax,QWORD PTR [rbp-0x50]
  40cfdf:	jne    40d02b <_start@@Base+0x6d9b>
  40cfe1:	mov    rax,QWORD PTR [rbp-0x50]
  40cfe5:	mov    QWORD PTR [rbp-0x20],rax
  40cfe9:	lea    rcx,[rbp-0x30]
  40cfed:	mov    rdx,QWORD PTR [rbp-0x58]
  40cff1:	mov    rsi,QWORD PTR [rbp-0x20]
  40cff5:	mov    rax,QWORD PTR [rbp-0x48]
  40cff9:	mov    r8,rcx
  40cffc:	lea    rcx,[rip+0x3a33d]        # 447340 <__data_start@@Base+0x280>
  40d003:	mov    rdi,rax
  40d006:	call   4080e1 <_start@@Base+0x1e51>
  40d00b:	mov    QWORD PTR [rbp-0x50],rax
  40d00f:	mov    rax,QWORD PTR [rbp-0x50]
  40d013:	cmp    rax,QWORD PTR [rbp-0x20]
  40d017:	je     40d1ed <_start@@Base+0x6f5d>
  40d01d:	mov    rax,QWORD PTR [rbp-0x50]
  40d021:	cmp    rax,QWORD PTR [rbp-0x58]
  40d025:	je     40d1ed <_start@@Base+0x6f5d>
  40d02b:	mov    rax,QWORD PTR [rbp-0x30]
  40d02f:	test   rax,rax
  40d032:	jne    40d046 <_start@@Base+0x6db6>
  40d034:	mov    rax,QWORD PTR [rbp-0x48]
  40d038:	mov    eax,DWORD PTR [rax+0x10]
  40d03b:	and    eax,0x2
  40d03e:	test   eax,eax
  40d040:	je     40d18b <_start@@Base+0x6efb>
  40d046:	mov    rax,QWORD PTR [rbp-0x48]
  40d04a:	mov    rax,QWORD PTR [rax]
  40d04d:	mov    ecx,0x8
  40d052:	mov    edx,0x8
  40d057:	mov    esi,0x1
  40d05c:	mov    rdi,rax
  40d05f:	call   420ef1 <flatcc_builder_table_add@@Base>
  40d064:	mov    QWORD PTR [rbp-0x18],rax
  40d068:	cmp    QWORD PTR [rbp-0x18],0x0
  40d06d:	je     40d1f0 <_start@@Base+0x6f60>
  40d073:	mov    rdx,QWORD PTR [rbp-0x30]
  40d077:	mov    rax,QWORD PTR [rbp-0x18]
  40d07b:	mov    rsi,rdx
  40d07e:	mov    rdi,rax
  40d081:	call   4064f5 <_start@@Base+0x265>
  40d086:	jmp    40d18b <_start@@Base+0x6efb>
  40d08b:	mov    rdx,QWORD PTR [rbp-0x58]
  40d08f:	mov    rcx,QWORD PTR [rbp-0x50]
  40d093:	mov    rax,QWORD PTR [rbp-0x48]
  40d097:	mov    rsi,rcx
  40d09a:	mov    rdi,rax
  40d09d:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40d0a2:	mov    QWORD PTR [rbp-0x50],rax
  40d0a6:	jmp    40d18b <_start@@Base+0x6efb>
  40d0ab:	movabs rax,0xffff000000000000
  40d0b5:	and    rax,QWORD PTR [rbp-0x28]
  40d0b9:	mov    rdx,rax
  40d0bc:	movabs rax,0x6964000000000000
  40d0c6:	cmp    rdx,rax
  40d0c9:	jne    40d170 <_start@@Base+0x6ee0>
  40d0cf:	mov    rax,QWORD PTR [rbp-0x50]
  40d0d3:	mov    QWORD PTR [rbp-0x20],rax
  40d0d7:	mov    rdx,QWORD PTR [rbp-0x58]
  40d0db:	mov    rsi,QWORD PTR [rbp-0x20]
  40d0df:	mov    rax,QWORD PTR [rbp-0x48]
  40d0e3:	mov    ecx,0x2
  40d0e8:	mov    rdi,rax
  40d0eb:	call   406d6d <_start@@Base+0xadd>
  40d0f0:	mov    QWORD PTR [rbp-0x50],rax
  40d0f4:	mov    rax,QWORD PTR [rbp-0x20]
  40d0f8:	cmp    rax,QWORD PTR [rbp-0x50]
  40d0fc:	je     40d153 <_start@@Base+0x6ec3>
  40d0fe:	lea    rcx,[rbp-0x34]
  40d102:	mov    rdx,QWORD PTR [rbp-0x58]
  40d106:	mov    rsi,QWORD PTR [rbp-0x50]
  40d10a:	mov    rax,QWORD PTR [rbp-0x48]
  40d10e:	mov    rdi,rax
  40d111:	call   42975d <flatcc_json_parser_build_string@@Base>
  40d116:	mov    QWORD PTR [rbp-0x50],rax
  40d11a:	mov    eax,DWORD PTR [rbp-0x34]
  40d11d:	test   eax,eax
  40d11f:	je     40d1f3 <_start@@Base+0x6f63>
  40d125:	mov    rax,QWORD PTR [rbp-0x48]
  40d129:	mov    rax,QWORD PTR [rax]
  40d12c:	mov    esi,0x0
  40d131:	mov    rdi,rax
  40d134:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  40d139:	mov    QWORD PTR [rbp-0x10],rax
  40d13d:	cmp    QWORD PTR [rbp-0x10],0x0
  40d142:	je     40d1f3 <_start@@Base+0x6f63>
  40d148:	mov    edx,DWORD PTR [rbp-0x34]
  40d14b:	mov    rax,QWORD PTR [rbp-0x10]
  40d14f:	mov    DWORD PTR [rax],edx
  40d151:	jmp    40d18b <_start@@Base+0x6efb>
  40d153:	mov    rdx,QWORD PTR [rbp-0x58]
  40d157:	mov    rcx,QWORD PTR [rbp-0x50]
  40d15b:	mov    rax,QWORD PTR [rbp-0x48]
  40d15f:	mov    rsi,rcx
  40d162:	mov    rdi,rax
  40d165:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40d16a:	mov    QWORD PTR [rbp-0x50],rax
  40d16e:	jmp    40d18b <_start@@Base+0x6efb>
  40d170:	mov    rdx,QWORD PTR [rbp-0x58]
  40d174:	mov    rcx,QWORD PTR [rbp-0x50]
  40d178:	mov    rax,QWORD PTR [rbp-0x48]
  40d17c:	mov    rsi,rcx
  40d17f:	mov    rdi,rax
  40d182:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40d187:	mov    QWORD PTR [rbp-0x50],rax
  40d18b:	lea    rcx,[rbp-0x38]
  40d18f:	mov    rdx,QWORD PTR [rbp-0x58]
  40d193:	mov    rsi,QWORD PTR [rbp-0x50]
  40d197:	mov    rax,QWORD PTR [rbp-0x48]
  40d19b:	mov    rdi,rax
  40d19e:	call   406a34 <_start@@Base+0x7a4>
  40d1a3:	mov    QWORD PTR [rbp-0x50],rax
  40d1a7:	mov    eax,DWORD PTR [rbp-0x38]
  40d1aa:	test   eax,eax
  40d1ac:	jne    40cd9b <_start@@Base+0x6b0b>
  40d1b2:	mov    rax,QWORD PTR [rbp-0x48]
  40d1b6:	mov    eax,DWORD PTR [rax+0x20]
  40d1b9:	test   eax,eax
  40d1bb:	jne    40d1f6 <_start@@Base+0x6f66>
  40d1bd:	mov    rax,QWORD PTR [rbp-0x48]
  40d1c1:	mov    rax,QWORD PTR [rax]
  40d1c4:	mov    rdi,rax
  40d1c7:	call   41f850 <flatcc_builder_end_table@@Base>
  40d1cc:	mov    edx,eax
  40d1ce:	mov    rax,QWORD PTR [rbp-0x60]
  40d1d2:	mov    DWORD PTR [rax],edx
  40d1d4:	mov    rax,QWORD PTR [rbp-0x60]
  40d1d8:	mov    eax,DWORD PTR [rax]
  40d1da:	test   eax,eax
  40d1dc:	je     40d1f9 <_start@@Base+0x6f69>
  40d1de:	mov    rax,QWORD PTR [rbp-0x50]
  40d1e2:	jmp    40d213 <_start@@Base+0x6f83>
  40d1e4:	nop
  40d1e5:	jmp    40d1fa <_start@@Base+0x6f6a>
  40d1e7:	nop
  40d1e8:	jmp    40d1fa <_start@@Base+0x6f6a>
  40d1ea:	nop
  40d1eb:	jmp    40d1fa <_start@@Base+0x6f6a>
  40d1ed:	nop
  40d1ee:	jmp    40d1fa <_start@@Base+0x6f6a>
  40d1f0:	nop
  40d1f1:	jmp    40d1fa <_start@@Base+0x6f6a>
  40d1f3:	nop
  40d1f4:	jmp    40d1fa <_start@@Base+0x6f6a>
  40d1f6:	nop
  40d1f7:	jmp    40d1fa <_start@@Base+0x6f6a>
  40d1f9:	nop
  40d1fa:	mov    rdx,QWORD PTR [rbp-0x58]
  40d1fe:	mov    rsi,QWORD PTR [rbp-0x50]
  40d202:	mov    rax,QWORD PTR [rbp-0x48]
  40d206:	mov    ecx,0x21
  40d20b:	mov    rdi,rax
  40d20e:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40d213:	mov    rdi,QWORD PTR [rbp-0x8]
  40d217:	xor    rdi,QWORD PTR fs:0x28
  40d220:	je     40d227 <_start@@Base+0x6f97>
  40d222:	call   4061a0 <__stack_chk_fail@plt>
  40d227:	leave  
  40d228:	ret    
  40d229:	endbr64 
  40d22d:	push   rbp
  40d22e:	mov    rbp,rsp
  40d231:	sub    rsp,0x50
  40d235:	mov    QWORD PTR [rbp-0x38],rdi
  40d239:	mov    QWORD PTR [rbp-0x40],rsi
  40d23d:	mov    QWORD PTR [rbp-0x48],rdx
  40d241:	mov    QWORD PTR [rbp-0x50],rcx
  40d245:	mov    rax,QWORD PTR fs:0x28
  40d24e:	mov    QWORD PTR [rbp-0x8],rax
  40d252:	xor    eax,eax
  40d254:	mov    rax,QWORD PTR [rbp-0x50]
  40d258:	mov    DWORD PTR [rax],0x0
  40d25e:	mov    rax,QWORD PTR [rbp-0x38]
  40d262:	mov    rax,QWORD PTR [rax]
  40d265:	mov    esi,0x4
  40d26a:	mov    rdi,rax
  40d26d:	call   41ed41 <flatcc_builder_start_table@@Base>
  40d272:	test   eax,eax
  40d274:	jne    40d6a9 <_start@@Base+0x7419>
  40d27a:	lea    rcx,[rbp-0x28]
  40d27e:	mov    rdx,QWORD PTR [rbp-0x48]
  40d282:	mov    rsi,QWORD PTR [rbp-0x40]
  40d286:	mov    rax,QWORD PTR [rbp-0x38]
  40d28a:	mov    r8,rcx
  40d28d:	mov    ecx,0x1
  40d292:	mov    rdi,rax
  40d295:	call   42995c <flatcc_json_parser_prepare_unions@@Base>
  40d29a:	cmp    QWORD PTR [rbp-0x48],rax
  40d29e:	je     40d6ac <_start@@Base+0x741c>
  40d2a4:	lea    rcx,[rbp-0x30]
  40d2a8:	mov    rdx,QWORD PTR [rbp-0x48]
  40d2ac:	mov    rsi,QWORD PTR [rbp-0x40]
  40d2b0:	mov    rax,QWORD PTR [rbp-0x38]
  40d2b4:	mov    rdi,rax
  40d2b7:	call   406977 <_start@@Base+0x6e7>
  40d2bc:	mov    QWORD PTR [rbp-0x40],rax
  40d2c0:	jmp    40d650 <_start@@Base+0x73c0>
  40d2c5:	mov    rdx,QWORD PTR [rbp-0x48]
  40d2c9:	mov    rcx,QWORD PTR [rbp-0x40]
  40d2cd:	mov    rax,QWORD PTR [rbp-0x38]
  40d2d1:	mov    rsi,rcx
  40d2d4:	mov    rdi,rax
  40d2d7:	call   4066e9 <_start@@Base+0x459>
  40d2dc:	mov    QWORD PTR [rbp-0x40],rax
  40d2e0:	mov    rdx,QWORD PTR [rbp-0x48]
  40d2e4:	mov    rax,QWORD PTR [rbp-0x40]
  40d2e8:	mov    rsi,rdx
  40d2eb:	mov    rdi,rax
  40d2ee:	call   406876 <_start@@Base+0x5e6>
  40d2f3:	mov    QWORD PTR [rbp-0x20],rax
  40d2f7:	movabs rax,0x6d616e79616e795f
  40d301:	cmp    QWORD PTR [rbp-0x20],rax
  40d305:	jne    40d409 <_start@@Base+0x7179>
  40d30b:	add    QWORD PTR [rbp-0x40],0x8
  40d310:	mov    rdx,QWORD PTR [rbp-0x48]
  40d314:	mov    rax,QWORD PTR [rbp-0x40]
  40d318:	mov    rsi,rdx
  40d31b:	mov    rdi,rax
  40d31e:	call   406876 <_start@@Base+0x5e6>
  40d323:	mov    QWORD PTR [rbp-0x20],rax
  40d327:	movabs rax,0xffffffff00000000
  40d331:	and    rax,QWORD PTR [rbp-0x20]
  40d335:	mov    rdx,rax
  40d338:	movabs rax,0x7479706500000000
  40d342:	cmp    rdx,rax
  40d345:	jne    40d3e9 <_start@@Base+0x7159>
  40d34b:	mov    rax,QWORD PTR [rbp-0x40]
  40d34f:	mov    QWORD PTR [rbp-0x18],rax
  40d353:	mov    rdx,QWORD PTR [rbp-0x48]
  40d357:	mov    rsi,QWORD PTR [rbp-0x18]
  40d35b:	mov    rax,QWORD PTR [rbp-0x38]
  40d35f:	mov    ecx,0x4
  40d364:	mov    rdi,rax
  40d367:	call   406d6d <_start@@Base+0xadd>
  40d36c:	mov    QWORD PTR [rbp-0x40],rax
  40d370:	mov    rax,QWORD PTR [rbp-0x18]
  40d374:	cmp    rax,QWORD PTR [rbp-0x40]
  40d378:	je     40d3c9 <_start@@Base+0x7139>
  40d37a:	mov    rdi,QWORD PTR [rbp-0x28]
  40d37e:	mov    rdx,QWORD PTR [rbp-0x48]
  40d382:	mov    rsi,QWORD PTR [rbp-0x40]
  40d386:	mov    rax,QWORD PTR [rbp-0x38]
  40d38a:	sub    rsp,0x8
  40d38e:	lea    rcx,[rip+0xffffffffffffd133]        # 40a4c8 <_start@@Base+0x4238>
  40d395:	push   rcx
  40d396:	lea    rcx,[rip+0xffffffffffffcfba]        # 40a357 <_start@@Base+0x40c7>
  40d39d:	push   rcx
  40d39e:	lea    rcx,[rip+0x39fbb]        # 447360 <__data_start@@Base+0x2a0>
  40d3a5:	push   rcx
  40d3a6:	mov    r9,rdi
  40d3a9:	mov    r8d,0x3
  40d3af:	mov    ecx,0x0
  40d3b4:	mov    rdi,rax
  40d3b7:	call   42a22b <flatcc_json_parser_union_type_vector@@Base>
  40d3bc:	add    rsp,0x20
  40d3c0:	mov    QWORD PTR [rbp-0x40],rax
  40d3c4:	jmp    40d634 <_start@@Base+0x73a4>
  40d3c9:	mov    rdx,QWORD PTR [rbp-0x48]
  40d3cd:	mov    rcx,QWORD PTR [rbp-0x40]
  40d3d1:	mov    rax,QWORD PTR [rbp-0x38]
  40d3d5:	mov    rsi,rcx
  40d3d8:	mov    rdi,rax
  40d3db:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40d3e0:	mov    QWORD PTR [rbp-0x40],rax
  40d3e4:	jmp    40d634 <_start@@Base+0x73a4>
  40d3e9:	mov    rdx,QWORD PTR [rbp-0x48]
  40d3ed:	mov    rcx,QWORD PTR [rbp-0x40]
  40d3f1:	mov    rax,QWORD PTR [rbp-0x38]
  40d3f5:	mov    rsi,rcx
  40d3f8:	mov    rdi,rax
  40d3fb:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40d400:	mov    QWORD PTR [rbp-0x40],rax
  40d404:	jmp    40d634 <_start@@Base+0x73a4>
  40d409:	mov    rax,QWORD PTR [rbp-0x20]
  40d40d:	mov    al,0x0
  40d40f:	mov    rdx,rax
  40d412:	movabs rax,0x6d616e79616e7900
  40d41c:	cmp    rdx,rax
  40d41f:	jne    40d48f <_start@@Base+0x71ff>
  40d421:	mov    rax,QWORD PTR [rbp-0x40]
  40d425:	mov    QWORD PTR [rbp-0x18],rax
  40d429:	mov    rdx,QWORD PTR [rbp-0x48]
  40d42d:	mov    rsi,QWORD PTR [rbp-0x18]
  40d431:	mov    rax,QWORD PTR [rbp-0x38]
  40d435:	mov    ecx,0x7
  40d43a:	mov    rdi,rax
  40d43d:	call   406d6d <_start@@Base+0xadd>
  40d442:	mov    QWORD PTR [rbp-0x40],rax
  40d446:	mov    rax,QWORD PTR [rbp-0x18]
  40d44a:	cmp    rax,QWORD PTR [rbp-0x40]
  40d44e:	je     40d492 <_start@@Base+0x7202>
  40d450:	mov    rdi,QWORD PTR [rbp-0x28]
  40d454:	mov    rdx,QWORD PTR [rbp-0x48]
  40d458:	mov    rsi,QWORD PTR [rbp-0x40]
  40d45c:	mov    rax,QWORD PTR [rbp-0x38]
  40d460:	sub    rsp,0x8
  40d464:	lea    rcx,[rip+0xffffffffffffceec]        # 40a357 <_start@@Base+0x40c7>
  40d46b:	push   rcx
  40d46c:	mov    r9,rdi
  40d46f:	mov    r8d,0x3
  40d475:	mov    ecx,0x0
  40d47a:	mov    rdi,rax
  40d47d:	call   42a0df <flatcc_json_parser_union_vector@@Base>
  40d482:	add    rsp,0x10
  40d486:	mov    QWORD PTR [rbp-0x40],rax
  40d48a:	jmp    40d634 <_start@@Base+0x73a4>
  40d48f:	nop
  40d490:	jmp    40d493 <_start@@Base+0x7203>
  40d492:	nop
  40d493:	mov    rax,QWORD PTR [rbp-0x20]
  40d497:	mov    ax,0x0
  40d49b:	mov    rdx,rax
  40d49e:	movabs rax,0x7072656669780000
  40d4a8:	cmp    rdx,rax
  40d4ab:	jne    40d558 <_start@@Base+0x72c8>
  40d4b1:	mov    rax,QWORD PTR [rbp-0x40]
  40d4b5:	mov    QWORD PTR [rbp-0x18],rax
  40d4b9:	mov    rdx,QWORD PTR [rbp-0x48]
  40d4bd:	mov    rsi,QWORD PTR [rbp-0x18]
  40d4c1:	mov    rax,QWORD PTR [rbp-0x38]
  40d4c5:	mov    ecx,0x6
  40d4ca:	mov    rdi,rax
  40d4cd:	call   406d6d <_start@@Base+0xadd>
  40d4d2:	mov    QWORD PTR [rbp-0x40],rax
  40d4d6:	mov    rax,QWORD PTR [rbp-0x18]
  40d4da:	cmp    rax,QWORD PTR [rbp-0x40]
  40d4de:	je     40d538 <_start@@Base+0x72a8>
  40d4e0:	lea    rcx,[rbp-0x2c]
  40d4e4:	mov    rdx,QWORD PTR [rbp-0x48]
  40d4e8:	mov    rsi,QWORD PTR [rbp-0x40]
  40d4ec:	mov    rax,QWORD PTR [rbp-0x38]
  40d4f0:	mov    rdi,rax
  40d4f3:	call   40d6e8 <_start@@Base+0x7458>
  40d4f8:	mov    QWORD PTR [rbp-0x40],rax
  40d4fc:	mov    eax,DWORD PTR [rbp-0x2c]
  40d4ff:	test   eax,eax
  40d501:	je     40d6af <_start@@Base+0x741f>
  40d507:	mov    rax,QWORD PTR [rbp-0x38]
  40d50b:	mov    rax,QWORD PTR [rax]
  40d50e:	mov    esi,0x0
  40d513:	mov    rdi,rax
  40d516:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  40d51b:	mov    QWORD PTR [rbp-0x10],rax
  40d51f:	cmp    QWORD PTR [rbp-0x10],0x0
  40d524:	je     40d6af <_start@@Base+0x741f>
  40d52a:	mov    edx,DWORD PTR [rbp-0x2c]
  40d52d:	mov    rax,QWORD PTR [rbp-0x10]
  40d531:	mov    DWORD PTR [rax],edx
  40d533:	jmp    40d634 <_start@@Base+0x73a4>
  40d538:	mov    rdx,QWORD PTR [rbp-0x48]
  40d53c:	mov    rcx,QWORD PTR [rbp-0x40]
  40d540:	mov    rax,QWORD PTR [rbp-0x38]
  40d544:	mov    rsi,rcx
  40d547:	mov    rdi,rax
  40d54a:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40d54f:	mov    QWORD PTR [rbp-0x40],rax
  40d553:	jmp    40d634 <_start@@Base+0x73a4>
  40d558:	mov    rax,QWORD PTR [rbp-0x20]
  40d55c:	and    rax,0xffffffffff000000
  40d562:	mov    rdx,rax
  40d565:	movabs rax,0x6d6f766965000000
  40d56f:	cmp    rdx,rax
  40d572:	jne    40d619 <_start@@Base+0x7389>
  40d578:	mov    rax,QWORD PTR [rbp-0x40]
  40d57c:	mov    QWORD PTR [rbp-0x18],rax
  40d580:	mov    rdx,QWORD PTR [rbp-0x48]
  40d584:	mov    rsi,QWORD PTR [rbp-0x18]
  40d588:	mov    rax,QWORD PTR [rbp-0x38]
  40d58c:	mov    ecx,0x5
  40d591:	mov    rdi,rax
  40d594:	call   406d6d <_start@@Base+0xadd>
  40d599:	mov    QWORD PTR [rbp-0x40],rax
  40d59d:	mov    rax,QWORD PTR [rbp-0x18]
  40d5a1:	cmp    rax,QWORD PTR [rbp-0x40]
  40d5a5:	je     40d5fc <_start@@Base+0x736c>
  40d5a7:	lea    rcx,[rbp-0x2c]
  40d5ab:	mov    rdx,QWORD PTR [rbp-0x48]
  40d5af:	mov    rsi,QWORD PTR [rbp-0x40]
  40d5b3:	mov    rax,QWORD PTR [rbp-0x38]
  40d5b7:	mov    rdi,rax
  40d5ba:	call   4150bf <_start@@Base+0xee2f>
  40d5bf:	mov    QWORD PTR [rbp-0x40],rax
  40d5c3:	mov    eax,DWORD PTR [rbp-0x2c]
  40d5c6:	test   eax,eax
  40d5c8:	je     40d6b2 <_start@@Base+0x7422>
  40d5ce:	mov    rax,QWORD PTR [rbp-0x38]
  40d5d2:	mov    rax,QWORD PTR [rax]
  40d5d5:	mov    esi,0x1
  40d5da:	mov    rdi,rax
  40d5dd:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  40d5e2:	mov    QWORD PTR [rbp-0x10],rax
  40d5e6:	cmp    QWORD PTR [rbp-0x10],0x0
  40d5eb:	je     40d6b2 <_start@@Base+0x7422>
  40d5f1:	mov    edx,DWORD PTR [rbp-0x2c]
  40d5f4:	mov    rax,QWORD PTR [rbp-0x10]
  40d5f8:	mov    DWORD PTR [rax],edx
  40d5fa:	jmp    40d634 <_start@@Base+0x73a4>
  40d5fc:	mov    rdx,QWORD PTR [rbp-0x48]
  40d600:	mov    rcx,QWORD PTR [rbp-0x40]
  40d604:	mov    rax,QWORD PTR [rbp-0x38]
  40d608:	mov    rsi,rcx
  40d60b:	mov    rdi,rax
  40d60e:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40d613:	mov    QWORD PTR [rbp-0x40],rax
  40d617:	jmp    40d634 <_start@@Base+0x73a4>
  40d619:	mov    rdx,QWORD PTR [rbp-0x48]
  40d61d:	mov    rcx,QWORD PTR [rbp-0x40]
  40d621:	mov    rax,QWORD PTR [rbp-0x38]
  40d625:	mov    rsi,rcx
  40d628:	mov    rdi,rax
  40d62b:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40d630:	mov    QWORD PTR [rbp-0x40],rax
  40d634:	lea    rcx,[rbp-0x30]
  40d638:	mov    rdx,QWORD PTR [rbp-0x48]
  40d63c:	mov    rsi,QWORD PTR [rbp-0x40]
  40d640:	mov    rax,QWORD PTR [rbp-0x38]
  40d644:	mov    rdi,rax
  40d647:	call   406a34 <_start@@Base+0x7a4>
  40d64c:	mov    QWORD PTR [rbp-0x40],rax
  40d650:	mov    eax,DWORD PTR [rbp-0x30]
  40d653:	test   eax,eax
  40d655:	jne    40d2c5 <_start@@Base+0x7035>
  40d65b:	mov    rax,QWORD PTR [rbp-0x38]
  40d65f:	mov    eax,DWORD PTR [rax+0x20]
  40d662:	test   eax,eax
  40d664:	jne    40d6b5 <_start@@Base+0x7425>
  40d666:	mov    rcx,QWORD PTR [rbp-0x28]
  40d66a:	mov    rdx,QWORD PTR [rbp-0x48]
  40d66e:	mov    rsi,QWORD PTR [rbp-0x40]
  40d672:	mov    rax,QWORD PTR [rbp-0x38]
  40d676:	mov    rdi,rax
  40d679:	call   429a03 <flatcc_json_parser_finalize_unions@@Base>
  40d67e:	mov    QWORD PTR [rbp-0x40],rax
  40d682:	mov    rax,QWORD PTR [rbp-0x38]
  40d686:	mov    rax,QWORD PTR [rax]
  40d689:	mov    rdi,rax
  40d68c:	call   41f850 <flatcc_builder_end_table@@Base>
  40d691:	mov    edx,eax
  40d693:	mov    rax,QWORD PTR [rbp-0x50]
  40d697:	mov    DWORD PTR [rax],edx
  40d699:	mov    rax,QWORD PTR [rbp-0x50]
  40d69d:	mov    eax,DWORD PTR [rax]
  40d69f:	test   eax,eax
  40d6a1:	je     40d6b8 <_start@@Base+0x7428>
  40d6a3:	mov    rax,QWORD PTR [rbp-0x40]
  40d6a7:	jmp    40d6d2 <_start@@Base+0x7442>
  40d6a9:	nop
  40d6aa:	jmp    40d6b9 <_start@@Base+0x7429>
  40d6ac:	nop
  40d6ad:	jmp    40d6b9 <_start@@Base+0x7429>
  40d6af:	nop
  40d6b0:	jmp    40d6b9 <_start@@Base+0x7429>
  40d6b2:	nop
  40d6b3:	jmp    40d6b9 <_start@@Base+0x7429>
  40d6b5:	nop
  40d6b6:	jmp    40d6b9 <_start@@Base+0x7429>
  40d6b8:	nop
  40d6b9:	mov    rdx,QWORD PTR [rbp-0x48]
  40d6bd:	mov    rsi,QWORD PTR [rbp-0x40]
  40d6c1:	mov    rax,QWORD PTR [rbp-0x38]
  40d6c5:	mov    ecx,0x21
  40d6ca:	mov    rdi,rax
  40d6cd:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40d6d2:	mov    rdi,QWORD PTR [rbp-0x8]
  40d6d6:	xor    rdi,QWORD PTR fs:0x28
  40d6df:	je     40d6e6 <_start@@Base+0x7456>
  40d6e1:	call   4061a0 <__stack_chk_fail@plt>
  40d6e6:	leave  
  40d6e7:	ret    
  40d6e8:	endbr64 
  40d6ec:	push   rbp
  40d6ed:	mov    rbp,rsp
  40d6f0:	sub    rsp,0x50
  40d6f4:	mov    QWORD PTR [rbp-0x38],rdi
  40d6f8:	mov    QWORD PTR [rbp-0x40],rsi
  40d6fc:	mov    QWORD PTR [rbp-0x48],rdx
  40d700:	mov    QWORD PTR [rbp-0x50],rcx
  40d704:	mov    rax,QWORD PTR fs:0x28
  40d70d:	mov    QWORD PTR [rbp-0x8],rax
  40d711:	xor    eax,eax
  40d713:	mov    rax,QWORD PTR [rbp-0x50]
  40d717:	mov    DWORD PTR [rax],0x0
  40d71d:	mov    rax,QWORD PTR [rbp-0x38]
  40d721:	mov    rax,QWORD PTR [rax]
  40d724:	mov    esi,0x3
  40d729:	mov    rdi,rax
  40d72c:	call   41ed41 <flatcc_builder_start_table@@Base>
  40d731:	test   eax,eax
  40d733:	jne    40dab4 <_start@@Base+0x7824>
  40d739:	lea    rcx,[rbp-0x28]
  40d73d:	mov    rdx,QWORD PTR [rbp-0x48]
  40d741:	mov    rsi,QWORD PTR [rbp-0x40]
  40d745:	mov    rax,QWORD PTR [rbp-0x38]
  40d749:	mov    rdi,rax
  40d74c:	call   406977 <_start@@Base+0x6e7>
  40d751:	mov    QWORD PTR [rbp-0x40],rax
  40d755:	jmp    40da77 <_start@@Base+0x77e7>
  40d75a:	mov    rdx,QWORD PTR [rbp-0x48]
  40d75e:	mov    rcx,QWORD PTR [rbp-0x40]
  40d762:	mov    rax,QWORD PTR [rbp-0x38]
  40d766:	mov    rsi,rcx
  40d769:	mov    rdi,rax
  40d76c:	call   4066e9 <_start@@Base+0x459>
  40d771:	mov    QWORD PTR [rbp-0x40],rax
  40d775:	mov    rdx,QWORD PTR [rbp-0x48]
  40d779:	mov    rax,QWORD PTR [rbp-0x40]
  40d77d:	mov    rsi,rdx
  40d780:	mov    rdi,rax
  40d783:	call   406876 <_start@@Base+0x5e6>
  40d788:	mov    QWORD PTR [rbp-0x20],rax
  40d78c:	movabs rax,0x746573746a736f6e
  40d796:	cmp    QWORD PTR [rbp-0x20],rax
  40d79a:	jne    40da40 <_start@@Base+0x77b0>
  40d7a0:	add    QWORD PTR [rbp-0x40],0x8
  40d7a5:	mov    rdx,QWORD PTR [rbp-0x48]
  40d7a9:	mov    rax,QWORD PTR [rbp-0x40]
  40d7ad:	mov    rsi,rdx
  40d7b0:	mov    rdi,rax
  40d7b3:	call   406876 <_start@@Base+0x5e6>
  40d7b8:	mov    QWORD PTR [rbp-0x20],rax
  40d7bc:	movabs rax,0x7072656669787061
  40d7c6:	cmp    QWORD PTR [rbp-0x20],rax
  40d7ca:	jne    40da23 <_start@@Base+0x7793>
  40d7d0:	add    QWORD PTR [rbp-0x40],0x8
  40d7d5:	mov    rdx,QWORD PTR [rbp-0x48]
  40d7d9:	mov    rax,QWORD PTR [rbp-0x40]
  40d7dd:	mov    rsi,rdx
  40d7e0:	mov    rdi,rax
  40d7e3:	call   406876 <_start@@Base+0x5e6>
  40d7e8:	mov    QWORD PTR [rbp-0x20],rax
  40d7ec:	mov    rax,QWORD PTR [rbp-0x20]
  40d7f0:	mov    ax,0x0
  40d7f4:	mov    rdx,rax
  40d7f7:	movabs rax,0x7273696e67320000
  40d801:	cmp    rdx,rax
  40d804:	jne    40d895 <_start@@Base+0x7605>
  40d80a:	mov    rax,QWORD PTR [rbp-0x40]
  40d80e:	mov    QWORD PTR [rbp-0x18],rax
  40d812:	mov    rdx,QWORD PTR [rbp-0x48]
  40d816:	mov    rsi,QWORD PTR [rbp-0x18]
  40d81a:	mov    rax,QWORD PTR [rbp-0x38]
  40d81e:	mov    ecx,0x6
  40d823:	mov    rdi,rax
  40d826:	call   406d6d <_start@@Base+0xadd>
  40d82b:	mov    QWORD PTR [rbp-0x40],rax
  40d82f:	mov    rax,QWORD PTR [rbp-0x18]
  40d833:	cmp    rax,QWORD PTR [rbp-0x40]
  40d837:	je     40d93c <_start@@Base+0x76ac>
  40d83d:	lea    rcx,[rbp-0x24]
  40d841:	mov    rdx,QWORD PTR [rbp-0x48]
  40d845:	mov    rsi,QWORD PTR [rbp-0x40]
  40d849:	mov    rax,QWORD PTR [rbp-0x38]
  40d84d:	mov    rdi,rax
  40d850:	call   40e719 <_start@@Base+0x8489>
  40d855:	mov    QWORD PTR [rbp-0x40],rax
  40d859:	mov    eax,DWORD PTR [rbp-0x24]
  40d85c:	test   eax,eax
  40d85e:	je     40dab7 <_start@@Base+0x7827>
  40d864:	mov    rax,QWORD PTR [rbp-0x38]
  40d868:	mov    rax,QWORD PTR [rax]
  40d86b:	mov    esi,0x1
  40d870:	mov    rdi,rax
  40d873:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  40d878:	mov    QWORD PTR [rbp-0x10],rax
  40d87c:	cmp    QWORD PTR [rbp-0x10],0x0
  40d881:	je     40dab7 <_start@@Base+0x7827>
  40d887:	mov    edx,DWORD PTR [rbp-0x24]
  40d88a:	mov    rax,QWORD PTR [rbp-0x10]
  40d88e:	mov    DWORD PTR [rax],edx
  40d890:	jmp    40da5b <_start@@Base+0x77cb>
  40d895:	mov    rax,QWORD PTR [rbp-0x20]
  40d899:	and    rax,0xffffffffff000000
  40d89f:	mov    rdx,rax
  40d8a2:	movabs rax,0x7273696e67000000
  40d8ac:	cmp    rdx,rax
  40d8af:	jne    40d93f <_start@@Base+0x76af>
  40d8b5:	mov    rax,QWORD PTR [rbp-0x40]
  40d8b9:	mov    QWORD PTR [rbp-0x18],rax
  40d8bd:	mov    rdx,QWORD PTR [rbp-0x48]
  40d8c1:	mov    rsi,QWORD PTR [rbp-0x18]
  40d8c5:	mov    rax,QWORD PTR [rbp-0x38]
  40d8c9:	mov    ecx,0x5
  40d8ce:	mov    rdi,rax
  40d8d1:	call   406d6d <_start@@Base+0xadd>
  40d8d6:	mov    QWORD PTR [rbp-0x40],rax
  40d8da:	mov    rax,QWORD PTR [rbp-0x18]
  40d8de:	cmp    rax,QWORD PTR [rbp-0x40]
  40d8e2:	je     40d942 <_start@@Base+0x76b2>
  40d8e4:	lea    rcx,[rbp-0x24]
  40d8e8:	mov    rdx,QWORD PTR [rbp-0x48]
  40d8ec:	mov    rsi,QWORD PTR [rbp-0x40]
  40d8f0:	mov    rax,QWORD PTR [rbp-0x38]
  40d8f4:	mov    rdi,rax
  40d8f7:	call   40daf3 <_start@@Base+0x7863>
  40d8fc:	mov    QWORD PTR [rbp-0x40],rax
  40d900:	mov    eax,DWORD PTR [rbp-0x24]
  40d903:	test   eax,eax
  40d905:	je     40daba <_start@@Base+0x782a>
  40d90b:	mov    rax,QWORD PTR [rbp-0x38]
  40d90f:	mov    rax,QWORD PTR [rax]
  40d912:	mov    esi,0x0
  40d917:	mov    rdi,rax
  40d91a:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  40d91f:	mov    QWORD PTR [rbp-0x10],rax
  40d923:	cmp    QWORD PTR [rbp-0x10],0x0
  40d928:	je     40daba <_start@@Base+0x782a>
  40d92e:	mov    edx,DWORD PTR [rbp-0x24]
  40d931:	mov    rax,QWORD PTR [rbp-0x10]
  40d935:	mov    DWORD PTR [rax],edx
  40d937:	jmp    40da5b <_start@@Base+0x77cb>
  40d93c:	nop
  40d93d:	jmp    40d943 <_start@@Base+0x76b3>
  40d93f:	nop
  40d940:	jmp    40d943 <_start@@Base+0x76b3>
  40d942:	nop
  40d943:	mov    rax,QWORD PTR [rbp-0x20]
  40d947:	mov    ax,0x0
  40d94b:	mov    rdx,rax
  40d94e:	movabs rax,0x7273696e67330000
  40d958:	cmp    rdx,rax
  40d95b:	jne    40da02 <_start@@Base+0x7772>
  40d961:	mov    rax,QWORD PTR [rbp-0x40]
  40d965:	mov    QWORD PTR [rbp-0x18],rax
  40d969:	mov    rdx,QWORD PTR [rbp-0x48]
  40d96d:	mov    rsi,QWORD PTR [rbp-0x18]
  40d971:	mov    rax,QWORD PTR [rbp-0x38]
  40d975:	mov    ecx,0x6
  40d97a:	mov    rdi,rax
  40d97d:	call   406d6d <_start@@Base+0xadd>
  40d982:	mov    QWORD PTR [rbp-0x40],rax
  40d986:	mov    rax,QWORD PTR [rbp-0x18]
  40d98a:	cmp    rax,QWORD PTR [rbp-0x40]
  40d98e:	je     40d9e5 <_start@@Base+0x7755>
  40d990:	lea    rcx,[rbp-0x24]
  40d994:	mov    rdx,QWORD PTR [rbp-0x48]
  40d998:	mov    rsi,QWORD PTR [rbp-0x40]
  40d99c:	mov    rax,QWORD PTR [rbp-0x38]
  40d9a0:	mov    rdi,rax
  40d9a3:	call   40eb4b <_start@@Base+0x88bb>
  40d9a8:	mov    QWORD PTR [rbp-0x40],rax
  40d9ac:	mov    eax,DWORD PTR [rbp-0x24]
  40d9af:	test   eax,eax
  40d9b1:	je     40dabd <_start@@Base+0x782d>
  40d9b7:	mov    rax,QWORD PTR [rbp-0x38]
  40d9bb:	mov    rax,QWORD PTR [rax]
  40d9be:	mov    esi,0x2
  40d9c3:	mov    rdi,rax
  40d9c6:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  40d9cb:	mov    QWORD PTR [rbp-0x10],rax
  40d9cf:	cmp    QWORD PTR [rbp-0x10],0x0
  40d9d4:	je     40dabd <_start@@Base+0x782d>
  40d9da:	mov    edx,DWORD PTR [rbp-0x24]
  40d9dd:	mov    rax,QWORD PTR [rbp-0x10]
  40d9e1:	mov    DWORD PTR [rax],edx
  40d9e3:	jmp    40da5b <_start@@Base+0x77cb>
  40d9e5:	mov    rdx,QWORD PTR [rbp-0x48]
  40d9e9:	mov    rcx,QWORD PTR [rbp-0x40]
  40d9ed:	mov    rax,QWORD PTR [rbp-0x38]
  40d9f1:	mov    rsi,rcx
  40d9f4:	mov    rdi,rax
  40d9f7:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40d9fc:	mov    QWORD PTR [rbp-0x40],rax
  40da00:	jmp    40da5b <_start@@Base+0x77cb>
  40da02:	mov    rdx,QWORD PTR [rbp-0x48]
  40da06:	mov    rcx,QWORD PTR [rbp-0x40]
  40da0a:	mov    rax,QWORD PTR [rbp-0x38]
  40da0e:	mov    rsi,rcx
  40da11:	mov    rdi,rax
  40da14:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40da19:	mov    QWORD PTR [rbp-0x40],rax
  40da1d:	endbr64 
  40da21:	jmp    40da5b <_start@@Base+0x77cb>
  40da23:	mov    rdx,QWORD PTR [rbp-0x48]
  40da27:	mov    rcx,QWORD PTR [rbp-0x40]
  40da2b:	mov    rax,QWORD PTR [rbp-0x38]
  40da2f:	mov    rsi,rcx
  40da32:	mov    rdi,rax
  40da35:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40da3a:	mov    QWORD PTR [rbp-0x40],rax
  40da3e:	jmp    40da5b <_start@@Base+0x77cb>
  40da40:	mov    rdx,QWORD PTR [rbp-0x48]
  40da44:	mov    rcx,QWORD PTR [rbp-0x40]
  40da48:	mov    rax,QWORD PTR [rbp-0x38]
  40da4c:	mov    rsi,rcx
  40da4f:	mov    rdi,rax
  40da52:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40da57:	mov    QWORD PTR [rbp-0x40],rax
  40da5b:	lea    rcx,[rbp-0x28]
  40da5f:	mov    rdx,QWORD PTR [rbp-0x48]
  40da63:	mov    rsi,QWORD PTR [rbp-0x40]
  40da67:	mov    rax,QWORD PTR [rbp-0x38]
  40da6b:	mov    rdi,rax
  40da6e:	call   406a34 <_start@@Base+0x7a4>
  40da73:	mov    QWORD PTR [rbp-0x40],rax
  40da77:	mov    eax,DWORD PTR [rbp-0x28]
  40da7a:	test   eax,eax
  40da7c:	jne    40d75a <_start@@Base+0x74ca>
  40da82:	mov    rax,QWORD PTR [rbp-0x38]
  40da86:	mov    eax,DWORD PTR [rax+0x20]
  40da89:	test   eax,eax
  40da8b:	jne    40dac0 <_start@@Base+0x7830>
  40da8d:	mov    rax,QWORD PTR [rbp-0x38]
  40da91:	mov    rax,QWORD PTR [rax]
  40da94:	mov    rdi,rax
  40da97:	call   41f850 <flatcc_builder_end_table@@Base>
  40da9c:	mov    edx,eax
  40da9e:	mov    rax,QWORD PTR [rbp-0x50]
  40daa2:	mov    DWORD PTR [rax],edx
  40daa4:	mov    rax,QWORD PTR [rbp-0x50]
  40daa8:	mov    eax,DWORD PTR [rax]
  40daaa:	test   eax,eax
  40daac:	je     40dac3 <_start@@Base+0x7833>
  40daae:	mov    rax,QWORD PTR [rbp-0x40]
  40dab2:	jmp    40dadd <_start@@Base+0x784d>
  40dab4:	nop
  40dab5:	jmp    40dac4 <_start@@Base+0x7834>
  40dab7:	nop
  40dab8:	jmp    40dac4 <_start@@Base+0x7834>
  40daba:	nop
  40dabb:	jmp    40dac4 <_start@@Base+0x7834>
  40dabd:	nop
  40dabe:	jmp    40dac4 <_start@@Base+0x7834>
  40dac0:	nop
  40dac1:	jmp    40dac4 <_start@@Base+0x7834>
  40dac3:	nop
  40dac4:	mov    rdx,QWORD PTR [rbp-0x48]
  40dac8:	mov    rsi,QWORD PTR [rbp-0x40]
  40dacc:	mov    rax,QWORD PTR [rbp-0x38]
  40dad0:	mov    ecx,0x21
  40dad5:	mov    rdi,rax
  40dad8:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40dadd:	mov    rdi,QWORD PTR [rbp-0x8]
  40dae1:	xor    rdi,QWORD PTR fs:0x28
  40daea:	je     40daf1 <_start@@Base+0x7861>
  40daec:	call   4061a0 <__stack_chk_fail@plt>
  40daf1:	leave  
  40daf2:	ret    
  40daf3:	endbr64 
  40daf7:	push   rbp
  40daf8:	mov    rbp,rsp
  40dafb:	sub    rsp,0x60
  40daff:	mov    QWORD PTR [rbp-0x48],rdi
  40db03:	mov    QWORD PTR [rbp-0x50],rsi
  40db07:	mov    QWORD PTR [rbp-0x58],rdx
  40db0b:	mov    QWORD PTR [rbp-0x60],rcx
  40db0f:	mov    rax,QWORD PTR fs:0x28
  40db18:	mov    QWORD PTR [rbp-0x8],rax
  40db1c:	xor    eax,eax
  40db1e:	mov    rax,QWORD PTR [rbp-0x60]
  40db22:	mov    DWORD PTR [rax],0x0
  40db28:	mov    rax,QWORD PTR [rbp-0x48]
  40db2c:	mov    rax,QWORD PTR [rax]
  40db2f:	mov    esi,0x9
  40db34:	mov    rdi,rax
  40db37:	call   41ed41 <flatcc_builder_start_table@@Base>
  40db3c:	test   eax,eax
  40db3e:	jne    40e6b6 <_start@@Base+0x8426>
  40db44:	lea    rcx,[rbp-0x38]
  40db48:	mov    rdx,QWORD PTR [rbp-0x58]
  40db4c:	mov    rsi,QWORD PTR [rbp-0x50]
  40db50:	mov    rax,QWORD PTR [rbp-0x48]
  40db54:	mov    rdi,rax
  40db57:	call   406977 <_start@@Base+0x6e7>
  40db5c:	mov    QWORD PTR [rbp-0x50],rax
  40db60:	jmp    40e679 <_start@@Base+0x83e9>
  40db65:	mov    rdx,QWORD PTR [rbp-0x58]
  40db69:	mov    rcx,QWORD PTR [rbp-0x50]
  40db6d:	mov    rax,QWORD PTR [rbp-0x48]
  40db71:	mov    rsi,rcx
  40db74:	mov    rdi,rax
  40db77:	call   4066e9 <_start@@Base+0x459>
  40db7c:	mov    QWORD PTR [rbp-0x50],rax
  40db80:	mov    rdx,QWORD PTR [rbp-0x58]
  40db84:	mov    rax,QWORD PTR [rbp-0x50]
  40db88:	mov    rsi,rdx
  40db8b:	mov    rdi,rax
  40db8e:	call   406876 <_start@@Base+0x5e6>
  40db93:	mov    QWORD PTR [rbp-0x28],rax
  40db97:	movabs rax,0x63636362ffffffff
  40dba1:	cmp    QWORD PTR [rbp-0x28],rax
  40dba5:	ja     40e032 <_start@@Base+0x7da2>
  40dbab:	movabs rax,0x6161616131323334
  40dbb5:	cmp    QWORD PTR [rbp-0x28],rax
  40dbb9:	jne    40dd4d <_start@@Base+0x7abd>
  40dbbf:	add    QWORD PTR [rbp-0x50],0x8
  40dbc4:	mov    rdx,QWORD PTR [rbp-0x58]
  40dbc8:	mov    rax,QWORD PTR [rbp-0x50]
  40dbcc:	mov    rsi,rdx
  40dbcf:	mov    rdi,rax
  40dbd2:	call   406876 <_start@@Base+0x5e6>
  40dbd7:	mov    QWORD PTR [rbp-0x28],rax
  40dbdb:	movabs rax,0xff00000000000000
  40dbe5:	and    rax,QWORD PTR [rbp-0x28]
  40dbe9:	mov    rdx,rax
  40dbec:	movabs rax,0x3500000000000000
  40dbf6:	cmp    rdx,rax
  40dbf9:	jne    40dd2d <_start@@Base+0x7a9d>
  40dbff:	mov    rax,QWORD PTR [rbp-0x50]
  40dc03:	mov    QWORD PTR [rbp-0x20],rax
  40dc07:	mov    rdx,QWORD PTR [rbp-0x58]
  40dc0b:	mov    rsi,QWORD PTR [rbp-0x20]
  40dc0f:	mov    rax,QWORD PTR [rbp-0x48]
  40dc13:	mov    ecx,0x1
  40dc18:	mov    rdi,rax
  40dc1b:	call   406d6d <_start@@Base+0xadd>
  40dc20:	mov    QWORD PTR [rbp-0x50],rax
  40dc24:	mov    rax,QWORD PTR [rbp-0x20]
  40dc28:	cmp    rax,QWORD PTR [rbp-0x50]
  40dc2c:	je     40dd0d <_start@@Base+0x7a7d>
  40dc32:	mov    DWORD PTR [rbp-0x30],0x0
  40dc39:	mov    rax,QWORD PTR [rbp-0x50]
  40dc3d:	mov    QWORD PTR [rbp-0x20],rax
  40dc41:	lea    rcx,[rbp-0x30]
  40dc45:	mov    rdx,QWORD PTR [rbp-0x58]
  40dc49:	mov    rsi,QWORD PTR [rbp-0x20]
  40dc4d:	mov    rax,QWORD PTR [rbp-0x48]
  40dc51:	mov    rdi,rax
  40dc54:	call   40751b <_start@@Base+0x128b>
  40dc59:	mov    QWORD PTR [rbp-0x50],rax
  40dc5d:	mov    rax,QWORD PTR [rbp-0x20]
  40dc61:	cmp    rax,QWORD PTR [rbp-0x50]
  40dc65:	jne    40dcb1 <_start@@Base+0x7a21>
  40dc67:	mov    rax,QWORD PTR [rbp-0x50]
  40dc6b:	mov    QWORD PTR [rbp-0x20],rax
  40dc6f:	lea    rcx,[rbp-0x30]
  40dc73:	mov    rdx,QWORD PTR [rbp-0x58]
  40dc77:	mov    rsi,QWORD PTR [rbp-0x20]
  40dc7b:	mov    rax,QWORD PTR [rbp-0x48]
  40dc7f:	mov    r8,rcx
  40dc82:	lea    rcx,[rip+0x396f7]        # 447380 <__data_start@@Base+0x2c0>
  40dc89:	mov    rdi,rax
  40dc8c:	call   407ccd <_start@@Base+0x1a3d>
  40dc91:	mov    QWORD PTR [rbp-0x50],rax
  40dc95:	mov    rax,QWORD PTR [rbp-0x50]
  40dc99:	cmp    rax,QWORD PTR [rbp-0x20]
  40dc9d:	je     40e6b9 <_start@@Base+0x8429>
  40dca3:	mov    rax,QWORD PTR [rbp-0x50]
  40dca7:	cmp    rax,QWORD PTR [rbp-0x58]
  40dcab:	je     40e6b9 <_start@@Base+0x8429>
  40dcb1:	mov    eax,DWORD PTR [rbp-0x30]
  40dcb4:	test   eax,eax
  40dcb6:	jne    40dcca <_start@@Base+0x7a3a>
  40dcb8:	mov    rax,QWORD PTR [rbp-0x48]
  40dcbc:	mov    eax,DWORD PTR [rax+0x10]
  40dcbf:	and    eax,0x2
  40dcc2:	test   eax,eax
  40dcc4:	je     40e65d <_start@@Base+0x83cd>
  40dcca:	mov    rax,QWORD PTR [rbp-0x48]
  40dcce:	mov    rax,QWORD PTR [rax]
  40dcd1:	mov    ecx,0x4
  40dcd6:	mov    edx,0x4
  40dcdb:	mov    esi,0x1
  40dce0:	mov    rdi,rax
  40dce3:	call   420ef1 <flatcc_builder_table_add@@Base>
  40dce8:	mov    QWORD PTR [rbp-0x18],rax
  40dcec:	cmp    QWORD PTR [rbp-0x18],0x0
  40dcf1:	je     40e6bc <_start@@Base+0x842c>
  40dcf7:	mov    edx,DWORD PTR [rbp-0x30]
  40dcfa:	mov    rax,QWORD PTR [rbp-0x18]
  40dcfe:	mov    esi,edx
  40dd00:	mov    rdi,rax
  40dd03:	call   4063ef <_start@@Base+0x15f>
  40dd08:	jmp    40e65d <_start@@Base+0x83cd>
  40dd0d:	mov    rdx,QWORD PTR [rbp-0x58]
  40dd11:	mov    rcx,QWORD PTR [rbp-0x50]
  40dd15:	mov    rax,QWORD PTR [rbp-0x48]
  40dd19:	mov    rsi,rcx
  40dd1c:	mov    rdi,rax
  40dd1f:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40dd24:	mov    QWORD PTR [rbp-0x50],rax
  40dd28:	jmp    40e65d <_start@@Base+0x83cd>
  40dd2d:	mov    rdx,QWORD PTR [rbp-0x58]
  40dd31:	mov    rcx,QWORD PTR [rbp-0x50]
  40dd35:	mov    rax,QWORD PTR [rbp-0x48]
  40dd39:	mov    rsi,rcx
  40dd3c:	mov    rdi,rax
  40dd3f:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40dd44:	mov    QWORD PTR [rbp-0x50],rax
  40dd48:	jmp    40e65d <_start@@Base+0x83cd>
  40dd4d:	movabs rax,0xffffffff00000000
  40dd57:	and    rax,QWORD PTR [rbp-0x28]
  40dd5b:	mov    rdx,rax
  40dd5e:	movabs rax,0x6161616100000000
  40dd68:	cmp    rdx,rax
  40dd6b:	jne    40ddf8 <_start@@Base+0x7b68>
  40dd71:	mov    rax,QWORD PTR [rbp-0x50]
  40dd75:	mov    QWORD PTR [rbp-0x20],rax
  40dd79:	mov    rdx,QWORD PTR [rbp-0x58]
  40dd7d:	mov    rsi,QWORD PTR [rbp-0x20]
  40dd81:	mov    rax,QWORD PTR [rbp-0x48]
  40dd85:	mov    ecx,0x4
  40dd8a:	mov    rdi,rax
  40dd8d:	call   406d6d <_start@@Base+0xadd>
  40dd92:	mov    QWORD PTR [rbp-0x50],rax
  40dd96:	mov    rax,QWORD PTR [rbp-0x20]
  40dd9a:	cmp    rax,QWORD PTR [rbp-0x50]
  40dd9e:	je     40ddfb <_start@@Base+0x7b6b>
  40dda0:	lea    rcx,[rbp-0x34]
  40dda4:	mov    rdx,QWORD PTR [rbp-0x58]
  40dda8:	mov    rsi,QWORD PTR [rbp-0x50]
  40ddac:	mov    rax,QWORD PTR [rbp-0x48]
  40ddb0:	mov    rdi,rax
  40ddb3:	call   42975d <flatcc_json_parser_build_string@@Base>
  40ddb8:	mov    QWORD PTR [rbp-0x50],rax
  40ddbc:	mov    eax,DWORD PTR [rbp-0x34]
  40ddbf:	test   eax,eax
  40ddc1:	je     40e6bf <_start@@Base+0x842f>
  40ddc7:	mov    rax,QWORD PTR [rbp-0x48]
  40ddcb:	mov    rax,QWORD PTR [rax]
  40ddce:	mov    esi,0x0
  40ddd3:	mov    rdi,rax
  40ddd6:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  40dddb:	mov    QWORD PTR [rbp-0x10],rax
  40dddf:	cmp    QWORD PTR [rbp-0x10],0x0
  40dde4:	je     40e6bf <_start@@Base+0x842f>
  40ddea:	mov    edx,DWORD PTR [rbp-0x34]
  40dded:	mov    rax,QWORD PTR [rbp-0x10]
  40ddf1:	mov    DWORD PTR [rax],edx
  40ddf3:	jmp    40e65d <_start@@Base+0x83cd>
  40ddf8:	nop
  40ddf9:	jmp    40ddfc <_start@@Base+0x7b6c>
  40ddfb:	nop
  40ddfc:	movabs rax,0x6262626231323334
  40de06:	cmp    QWORD PTR [rbp-0x28],rax
  40de0a:	jne    40df43 <_start@@Base+0x7cb3>
  40de10:	mov    rax,QWORD PTR [rbp-0x50]
  40de14:	mov    QWORD PTR [rbp-0x20],rax
  40de18:	mov    rdx,QWORD PTR [rbp-0x58]
  40de1c:	mov    rsi,QWORD PTR [rbp-0x20]
  40de20:	mov    rax,QWORD PTR [rbp-0x48]
  40de24:	mov    ecx,0x8
  40de29:	mov    rdi,rax
  40de2c:	call   406d6d <_start@@Base+0xadd>
  40de31:	mov    QWORD PTR [rbp-0x50],rax
  40de35:	mov    rax,QWORD PTR [rbp-0x20]
  40de39:	cmp    rax,QWORD PTR [rbp-0x50]
  40de3d:	je     40df23 <_start@@Base+0x7c93>
  40de43:	mov    QWORD PTR [rbp-0x30],0x0
  40de4b:	mov    rax,QWORD PTR [rbp-0x50]
  40de4f:	mov    QWORD PTR [rbp-0x20],rax
  40de53:	lea    rcx,[rbp-0x30]
  40de57:	mov    rdx,QWORD PTR [rbp-0x58]
  40de5b:	mov    rsi,QWORD PTR [rbp-0x20]
  40de5f:	mov    rax,QWORD PTR [rbp-0x48]
  40de63:	mov    rdi,rax
  40de66:	call   407769 <_start@@Base+0x14d9>
  40de6b:	mov    QWORD PTR [rbp-0x50],rax
  40de6f:	mov    rax,QWORD PTR [rbp-0x20]
  40de73:	cmp    rax,QWORD PTR [rbp-0x50]
  40de77:	jne    40dec3 <_start@@Base+0x7c33>
  40de79:	mov    rax,QWORD PTR [rbp-0x50]
  40de7d:	mov    QWORD PTR [rbp-0x20],rax
  40de81:	lea    rcx,[rbp-0x30]
  40de85:	mov    rdx,QWORD PTR [rbp-0x58]
  40de89:	mov    rsi,QWORD PTR [rbp-0x20]
  40de8d:	mov    rax,QWORD PTR [rbp-0x48]
  40de91:	mov    r8,rcx
  40de94:	lea    rcx,[rip+0x39505]        # 4473a0 <__data_start@@Base+0x2e0>
  40de9b:	mov    rdi,rax
  40de9e:	call   4080e1 <_start@@Base+0x1e51>
  40dea3:	mov    QWORD PTR [rbp-0x50],rax
  40dea7:	mov    rax,QWORD PTR [rbp-0x50]
  40deab:	cmp    rax,QWORD PTR [rbp-0x20]
  40deaf:	je     40e6c2 <_start@@Base+0x8432>
  40deb5:	mov    rax,QWORD PTR [rbp-0x50]
  40deb9:	cmp    rax,QWORD PTR [rbp-0x58]
  40debd:	je     40e6c2 <_start@@Base+0x8432>
  40dec3:	mov    rax,QWORD PTR [rbp-0x30]
  40dec7:	test   rax,rax
  40deca:	jne    40dede <_start@@Base+0x7c4e>
  40decc:	mov    rax,QWORD PTR [rbp-0x48]
  40ded0:	mov    eax,DWORD PTR [rax+0x10]
  40ded3:	and    eax,0x2
  40ded6:	test   eax,eax
  40ded8:	je     40e65d <_start@@Base+0x83cd>
  40dede:	mov    rax,QWORD PTR [rbp-0x48]
  40dee2:	mov    rax,QWORD PTR [rax]
  40dee5:	mov    ecx,0x8
  40deea:	mov    edx,0x8
  40deef:	mov    esi,0x3
  40def4:	mov    rdi,rax
  40def7:	call   420ef1 <flatcc_builder_table_add@@Base>
  40defc:	mov    QWORD PTR [rbp-0x18],rax
  40df00:	cmp    QWORD PTR [rbp-0x18],0x0
  40df05:	je     40e6c5 <_start@@Base+0x8435>
  40df0b:	mov    rdx,QWORD PTR [rbp-0x30]
  40df0f:	mov    rax,QWORD PTR [rbp-0x18]
  40df13:	mov    rsi,rdx
  40df16:	mov    rdi,rax
  40df19:	call   4064f5 <_start@@Base+0x265>
  40df1e:	jmp    40e65d <_start@@Base+0x83cd>
  40df23:	mov    rdx,QWORD PTR [rbp-0x58]
  40df27:	mov    rcx,QWORD PTR [rbp-0x50]
  40df2b:	mov    rax,QWORD PTR [rbp-0x48]
  40df2f:	mov    rsi,rcx
  40df32:	mov    rdi,rax
  40df35:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40df3a:	mov    QWORD PTR [rbp-0x50],rax
  40df3e:	jmp    40e65d <_start@@Base+0x83cd>
  40df43:	movabs rax,0xffffffff00000000
  40df4d:	and    rax,QWORD PTR [rbp-0x28]
  40df51:	mov    rdx,rax
  40df54:	movabs rax,0x6262626200000000
  40df5e:	cmp    rdx,rax
  40df61:	jne    40e00e <_start@@Base+0x7d7e>
  40df67:	mov    rax,QWORD PTR [rbp-0x50]
  40df6b:	mov    QWORD PTR [rbp-0x20],rax
  40df6f:	mov    rdx,QWORD PTR [rbp-0x58]
  40df73:	mov    rsi,QWORD PTR [rbp-0x20]
  40df77:	mov    rax,QWORD PTR [rbp-0x48]
  40df7b:	mov    ecx,0x4
  40df80:	mov    rdi,rax
  40df83:	call   406d6d <_start@@Base+0xadd>
  40df88:	mov    QWORD PTR [rbp-0x50],rax
  40df8c:	mov    rax,QWORD PTR [rbp-0x20]
  40df90:	cmp    rax,QWORD PTR [rbp-0x50]
  40df94:	je     40dfee <_start@@Base+0x7d5e>
  40df96:	lea    rcx,[rbp-0x34]
  40df9a:	mov    rdx,QWORD PTR [rbp-0x58]
  40df9e:	mov    rsi,QWORD PTR [rbp-0x50]
  40dfa2:	mov    rax,QWORD PTR [rbp-0x48]
  40dfa6:	mov    rdi,rax
  40dfa9:	call   42975d <flatcc_json_parser_build_string@@Base>
  40dfae:	mov    QWORD PTR [rbp-0x50],rax
  40dfb2:	mov    eax,DWORD PTR [rbp-0x34]
  40dfb5:	test   eax,eax
  40dfb7:	je     40e6c8 <_start@@Base+0x8438>
  40dfbd:	mov    rax,QWORD PTR [rbp-0x48]
  40dfc1:	mov    rax,QWORD PTR [rax]
  40dfc4:	mov    esi,0x2
  40dfc9:	mov    rdi,rax
  40dfcc:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  40dfd1:	mov    QWORD PTR [rbp-0x10],rax
  40dfd5:	cmp    QWORD PTR [rbp-0x10],0x0
  40dfda:	je     40e6c8 <_start@@Base+0x8438>
  40dfe0:	mov    edx,DWORD PTR [rbp-0x34]
  40dfe3:	mov    rax,QWORD PTR [rbp-0x10]
  40dfe7:	mov    DWORD PTR [rax],edx
  40dfe9:	jmp    40e65d <_start@@Base+0x83cd>
  40dfee:	mov    rdx,QWORD PTR [rbp-0x58]
  40dff2:	mov    rcx,QWORD PTR [rbp-0x50]
  40dff6:	mov    rax,QWORD PTR [rbp-0x48]
  40dffa:	mov    rsi,rcx
  40dffd:	mov    rdi,rax
  40e000:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40e005:	mov    QWORD PTR [rbp-0x50],rax
  40e009:	jmp    40e65d <_start@@Base+0x83cd>
  40e00e:	mov    rdx,QWORD PTR [rbp-0x58]
  40e012:	mov    rcx,QWORD PTR [rbp-0x50]
  40e016:	mov    rax,QWORD PTR [rbp-0x48]
  40e01a:	mov    rsi,rcx
  40e01d:	mov    rdi,rax
  40e020:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40e025:	mov    QWORD PTR [rbp-0x50],rax
  40e029:	endbr64 
  40e02d:	jmp    40e65d <_start@@Base+0x83cd>
  40e032:	movabs rax,0x6363636331323334
  40e03c:	cmp    QWORD PTR [rbp-0x28],rax
  40e040:	jne    40e2e7 <_start@@Base+0x8057>
  40e046:	mov    rax,QWORD PTR [rbp-0x50]
  40e04a:	mov    QWORD PTR [rbp-0x20],rax
  40e04e:	mov    rdx,QWORD PTR [rbp-0x58]
  40e052:	mov    rsi,QWORD PTR [rbp-0x20]
  40e056:	mov    rax,QWORD PTR [rbp-0x48]
  40e05a:	mov    ecx,0x8
  40e05f:	mov    rdi,rax
  40e062:	call   406d6d <_start@@Base+0xadd>
  40e067:	mov    QWORD PTR [rbp-0x50],rax
  40e06b:	mov    rax,QWORD PTR [rbp-0x20]
  40e06f:	cmp    rax,QWORD PTR [rbp-0x50]
  40e073:	je     40e159 <_start@@Base+0x7ec9>
  40e079:	mov    QWORD PTR [rbp-0x30],0x0
  40e081:	mov    rax,QWORD PTR [rbp-0x50]
  40e085:	mov    QWORD PTR [rbp-0x20],rax
  40e089:	lea    rcx,[rbp-0x30]
  40e08d:	mov    rdx,QWORD PTR [rbp-0x58]
  40e091:	mov    rsi,QWORD PTR [rbp-0x20]
  40e095:	mov    rax,QWORD PTR [rbp-0x48]
  40e099:	mov    rdi,rax
  40e09c:	call   407769 <_start@@Base+0x14d9>
  40e0a1:	mov    QWORD PTR [rbp-0x50],rax
  40e0a5:	mov    rax,QWORD PTR [rbp-0x20]
  40e0a9:	cmp    rax,QWORD PTR [rbp-0x50]
  40e0ad:	jne    40e0f9 <_start@@Base+0x7e69>
  40e0af:	mov    rax,QWORD PTR [rbp-0x50]
  40e0b3:	mov    QWORD PTR [rbp-0x20],rax
  40e0b7:	lea    rcx,[rbp-0x30]
  40e0bb:	mov    rdx,QWORD PTR [rbp-0x58]
  40e0bf:	mov    rsi,QWORD PTR [rbp-0x20]
  40e0c3:	mov    rax,QWORD PTR [rbp-0x48]
  40e0c7:	mov    r8,rcx
  40e0ca:	lea    rcx,[rip+0x392ef]        # 4473c0 <__data_start@@Base+0x300>
  40e0d1:	mov    rdi,rax
  40e0d4:	call   4080e1 <_start@@Base+0x1e51>
  40e0d9:	mov    QWORD PTR [rbp-0x50],rax
  40e0dd:	mov    rax,QWORD PTR [rbp-0x50]
  40e0e1:	cmp    rax,QWORD PTR [rbp-0x20]
  40e0e5:	je     40e6cb <_start@@Base+0x843b>
  40e0eb:	mov    rax,QWORD PTR [rbp-0x50]
  40e0ef:	cmp    rax,QWORD PTR [rbp-0x58]
  40e0f3:	je     40e6cb <_start@@Base+0x843b>
  40e0f9:	mov    rax,QWORD PTR [rbp-0x30]
  40e0fd:	test   rax,rax
  40e100:	jne    40e114 <_start@@Base+0x7e84>
  40e102:	mov    rax,QWORD PTR [rbp-0x48]
  40e106:	mov    eax,DWORD PTR [rax+0x10]
  40e109:	and    eax,0x2
  40e10c:	test   eax,eax
  40e10e:	je     40e65d <_start@@Base+0x83cd>
  40e114:	mov    rax,QWORD PTR [rbp-0x48]
  40e118:	mov    rax,QWORD PTR [rax]
  40e11b:	mov    ecx,0x8
  40e120:	mov    edx,0x8
  40e125:	mov    esi,0x5
  40e12a:	mov    rdi,rax
  40e12d:	call   420ef1 <flatcc_builder_table_add@@Base>
  40e132:	mov    QWORD PTR [rbp-0x18],rax
  40e136:	cmp    QWORD PTR [rbp-0x18],0x0
  40e13b:	je     40e6ce <_start@@Base+0x843e>
  40e141:	mov    rdx,QWORD PTR [rbp-0x30]
  40e145:	mov    rax,QWORD PTR [rbp-0x18]
  40e149:	mov    rsi,rdx
  40e14c:	mov    rdi,rax
  40e14f:	call   4064f5 <_start@@Base+0x265>
  40e154:	jmp    40e65d <_start@@Base+0x83cd>
  40e159:	add    QWORD PTR [rbp-0x50],0x8
  40e15e:	mov    rdx,QWORD PTR [rbp-0x58]
  40e162:	mov    rax,QWORD PTR [rbp-0x50]
  40e166:	mov    rsi,rdx
  40e169:	mov    rdi,rax
  40e16c:	call   406876 <_start@@Base+0x5e6>
  40e171:	mov    QWORD PTR [rbp-0x28],rax
  40e175:	movabs rax,0xff00000000000000
  40e17f:	and    rax,QWORD PTR [rbp-0x28]
  40e183:	mov    rdx,rax
  40e186:	movabs rax,0x3500000000000000
  40e190:	cmp    rdx,rax
  40e193:	jne    40e2c7 <_start@@Base+0x8037>
  40e199:	mov    rax,QWORD PTR [rbp-0x50]
  40e19d:	mov    QWORD PTR [rbp-0x20],rax
  40e1a1:	mov    rdx,QWORD PTR [rbp-0x58]
  40e1a5:	mov    rsi,QWORD PTR [rbp-0x20]
  40e1a9:	mov    rax,QWORD PTR [rbp-0x48]
  40e1ad:	mov    ecx,0x1
  40e1b2:	mov    rdi,rax
  40e1b5:	call   406d6d <_start@@Base+0xadd>
  40e1ba:	mov    QWORD PTR [rbp-0x50],rax
  40e1be:	mov    rax,QWORD PTR [rbp-0x20]
  40e1c2:	cmp    rax,QWORD PTR [rbp-0x50]
  40e1c6:	je     40e2a7 <_start@@Base+0x8017>
  40e1cc:	mov    DWORD PTR [rbp-0x30],0x0
  40e1d3:	mov    rax,QWORD PTR [rbp-0x50]
  40e1d7:	mov    QWORD PTR [rbp-0x20],rax
  40e1db:	lea    rcx,[rbp-0x30]
  40e1df:	mov    rdx,QWORD PTR [rbp-0x58]
  40e1e3:	mov    rsi,QWORD PTR [rbp-0x20]
  40e1e7:	mov    rax,QWORD PTR [rbp-0x48]
  40e1eb:	mov    rdi,rax
  40e1ee:	call   40751b <_start@@Base+0x128b>
  40e1f3:	mov    QWORD PTR [rbp-0x50],rax
  40e1f7:	mov    rax,QWORD PTR [rbp-0x20]
  40e1fb:	cmp    rax,QWORD PTR [rbp-0x50]
  40e1ff:	jne    40e24b <_start@@Base+0x7fbb>
  40e201:	mov    rax,QWORD PTR [rbp-0x50]
  40e205:	mov    QWORD PTR [rbp-0x20],rax
  40e209:	lea    rcx,[rbp-0x30]
  40e20d:	mov    rdx,QWORD PTR [rbp-0x58]
  40e211:	mov    rsi,QWORD PTR [rbp-0x20]
  40e215:	mov    rax,QWORD PTR [rbp-0x48]
  40e219:	mov    r8,rcx
  40e21c:	lea    rcx,[rip+0x391bd]        # 4473e0 <__data_start@@Base+0x320>
  40e223:	mov    rdi,rax
  40e226:	call   407ccd <_start@@Base+0x1a3d>
  40e22b:	mov    QWORD PTR [rbp-0x50],rax
  40e22f:	mov    rax,QWORD PTR [rbp-0x50]
  40e233:	cmp    rax,QWORD PTR [rbp-0x20]
  40e237:	je     40e6d1 <_start@@Base+0x8441>
  40e23d:	mov    rax,QWORD PTR [rbp-0x50]
  40e241:	cmp    rax,QWORD PTR [rbp-0x58]
  40e245:	je     40e6d1 <_start@@Base+0x8441>
  40e24b:	mov    eax,DWORD PTR [rbp-0x30]
  40e24e:	test   eax,eax
  40e250:	jne    40e264 <_start@@Base+0x7fd4>
  40e252:	mov    rax,QWORD PTR [rbp-0x48]
  40e256:	mov    eax,DWORD PTR [rax+0x10]
  40e259:	and    eax,0x2
  40e25c:	test   eax,eax
  40e25e:	je     40e65d <_start@@Base+0x83cd>
  40e264:	mov    rax,QWORD PTR [rbp-0x48]
  40e268:	mov    rax,QWORD PTR [rax]
  40e26b:	mov    ecx,0x4
  40e270:	mov    edx,0x4
  40e275:	mov    esi,0x6
  40e27a:	mov    rdi,rax
  40e27d:	call   420ef1 <flatcc_builder_table_add@@Base>
  40e282:	mov    QWORD PTR [rbp-0x18],rax
  40e286:	cmp    QWORD PTR [rbp-0x18],0x0
  40e28b:	je     40e6d4 <_start@@Base+0x8444>
  40e291:	mov    edx,DWORD PTR [rbp-0x30]
  40e294:	mov    rax,QWORD PTR [rbp-0x18]
  40e298:	mov    esi,edx
  40e29a:	mov    rdi,rax
  40e29d:	call   4063ef <_start@@Base+0x15f>
  40e2a2:	jmp    40e65d <_start@@Base+0x83cd>
  40e2a7:	mov    rdx,QWORD PTR [rbp-0x58]
  40e2ab:	mov    rcx,QWORD PTR [rbp-0x50]
  40e2af:	mov    rax,QWORD PTR [rbp-0x48]
  40e2b3:	mov    rsi,rcx
  40e2b6:	mov    rdi,rax
  40e2b9:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40e2be:	mov    QWORD PTR [rbp-0x50],rax
  40e2c2:	jmp    40e65d <_start@@Base+0x83cd>
  40e2c7:	mov    rdx,QWORD PTR [rbp-0x58]
  40e2cb:	mov    rcx,QWORD PTR [rbp-0x50]
  40e2cf:	mov    rax,QWORD PTR [rbp-0x48]
  40e2d3:	mov    rsi,rcx
  40e2d6:	mov    rdi,rax
  40e2d9:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40e2de:	mov    QWORD PTR [rbp-0x50],rax
  40e2e2:	jmp    40e65d <_start@@Base+0x83cd>
  40e2e7:	movabs rax,0xffffffff00000000
  40e2f1:	and    rax,QWORD PTR [rbp-0x28]
  40e2f5:	mov    rdx,rax
  40e2f8:	movabs rax,0x6363636300000000
  40e302:	cmp    rdx,rax
  40e305:	jne    40e392 <_start@@Base+0x8102>
  40e30b:	mov    rax,QWORD PTR [rbp-0x50]
  40e30f:	mov    QWORD PTR [rbp-0x20],rax
  40e313:	mov    rdx,QWORD PTR [rbp-0x58]
  40e317:	mov    rsi,QWORD PTR [rbp-0x20]
  40e31b:	mov    rax,QWORD PTR [rbp-0x48]
  40e31f:	mov    ecx,0x4
  40e324:	mov    rdi,rax
  40e327:	call   406d6d <_start@@Base+0xadd>
  40e32c:	mov    QWORD PTR [rbp-0x50],rax
  40e330:	mov    rax,QWORD PTR [rbp-0x20]
  40e334:	cmp    rax,QWORD PTR [rbp-0x50]
  40e338:	je     40e395 <_start@@Base+0x8105>
  40e33a:	lea    rcx,[rbp-0x34]
  40e33e:	mov    rdx,QWORD PTR [rbp-0x58]
  40e342:	mov    rsi,QWORD PTR [rbp-0x50]
  40e346:	mov    rax,QWORD PTR [rbp-0x48]
  40e34a:	mov    rdi,rax
  40e34d:	call   42975d <flatcc_json_parser_build_string@@Base>
  40e352:	mov    QWORD PTR [rbp-0x50],rax
  40e356:	mov    eax,DWORD PTR [rbp-0x34]
  40e359:	test   eax,eax
  40e35b:	je     40e6d7 <_start@@Base+0x8447>
  40e361:	mov    rax,QWORD PTR [rbp-0x48]
  40e365:	mov    rax,QWORD PTR [rax]
  40e368:	mov    esi,0x4
  40e36d:	mov    rdi,rax
  40e370:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  40e375:	mov    QWORD PTR [rbp-0x10],rax
  40e379:	cmp    QWORD PTR [rbp-0x10],0x0
  40e37e:	je     40e6d7 <_start@@Base+0x8447>
  40e384:	mov    edx,DWORD PTR [rbp-0x34]
  40e387:	mov    rax,QWORD PTR [rbp-0x10]
  40e38b:	mov    DWORD PTR [rax],edx
  40e38d:	jmp    40e65d <_start@@Base+0x83cd>
  40e392:	nop
  40e393:	jmp    40e396 <_start@@Base+0x8106>
  40e395:	nop
  40e396:	movabs rax,0x6464646431323334
  40e3a0:	cmp    QWORD PTR [rbp-0x28],rax
  40e3a4:	jne    40e642 <_start@@Base+0x83b2>
  40e3aa:	mov    rax,QWORD PTR [rbp-0x50]
  40e3ae:	mov    QWORD PTR [rbp-0x20],rax
  40e3b2:	mov    rdx,QWORD PTR [rbp-0x58]
  40e3b6:	mov    rsi,QWORD PTR [rbp-0x20]
  40e3ba:	mov    rax,QWORD PTR [rbp-0x48]
  40e3be:	mov    ecx,0x8
  40e3c3:	mov    rdi,rax
  40e3c6:	call   406d6d <_start@@Base+0xadd>
  40e3cb:	mov    QWORD PTR [rbp-0x50],rax
  40e3cf:	mov    rax,QWORD PTR [rbp-0x20]
  40e3d3:	cmp    rax,QWORD PTR [rbp-0x50]
  40e3d7:	je     40e4bd <_start@@Base+0x822d>
  40e3dd:	mov    QWORD PTR [rbp-0x30],0x0
  40e3e5:	mov    rax,QWORD PTR [rbp-0x50]
  40e3e9:	mov    QWORD PTR [rbp-0x20],rax
  40e3ed:	lea    rcx,[rbp-0x30]
  40e3f1:	mov    rdx,QWORD PTR [rbp-0x58]
  40e3f5:	mov    rsi,QWORD PTR [rbp-0x20]
  40e3f9:	mov    rax,QWORD PTR [rbp-0x48]
  40e3fd:	mov    rdi,rax
  40e400:	call   407769 <_start@@Base+0x14d9>
  40e405:	mov    QWORD PTR [rbp-0x50],rax
  40e409:	mov    rax,QWORD PTR [rbp-0x20]
  40e40d:	cmp    rax,QWORD PTR [rbp-0x50]
  40e411:	jne    40e45d <_start@@Base+0x81cd>
  40e413:	mov    rax,QWORD PTR [rbp-0x50]
  40e417:	mov    QWORD PTR [rbp-0x20],rax
  40e41b:	lea    rcx,[rbp-0x30]
  40e41f:	mov    rdx,QWORD PTR [rbp-0x58]
  40e423:	mov    rsi,QWORD PTR [rbp-0x20]
  40e427:	mov    rax,QWORD PTR [rbp-0x48]
  40e42b:	mov    r8,rcx
  40e42e:	lea    rcx,[rip+0x38fcb]        # 447400 <__data_start@@Base+0x340>
  40e435:	mov    rdi,rax
  40e438:	call   4080e1 <_start@@Base+0x1e51>
  40e43d:	mov    QWORD PTR [rbp-0x50],rax
  40e441:	mov    rax,QWORD PTR [rbp-0x50]
  40e445:	cmp    rax,QWORD PTR [rbp-0x20]
  40e449:	je     40e6da <_start@@Base+0x844a>
  40e44f:	mov    rax,QWORD PTR [rbp-0x50]
  40e453:	cmp    rax,QWORD PTR [rbp-0x58]
  40e457:	je     40e6da <_start@@Base+0x844a>
  40e45d:	mov    rax,QWORD PTR [rbp-0x30]
  40e461:	test   rax,rax
  40e464:	jne    40e478 <_start@@Base+0x81e8>
  40e466:	mov    rax,QWORD PTR [rbp-0x48]
  40e46a:	mov    eax,DWORD PTR [rax+0x10]
  40e46d:	and    eax,0x2
  40e470:	test   eax,eax
  40e472:	je     40e65d <_start@@Base+0x83cd>
  40e478:	mov    rax,QWORD PTR [rbp-0x48]
  40e47c:	mov    rax,QWORD PTR [rax]
  40e47f:	mov    ecx,0x8
  40e484:	mov    edx,0x8
  40e489:	mov    esi,0x7
  40e48e:	mov    rdi,rax
  40e491:	call   420ef1 <flatcc_builder_table_add@@Base>
  40e496:	mov    QWORD PTR [rbp-0x18],rax
  40e49a:	cmp    QWORD PTR [rbp-0x18],0x0
  40e49f:	je     40e6dd <_start@@Base+0x844d>
  40e4a5:	mov    rdx,QWORD PTR [rbp-0x30]
  40e4a9:	mov    rax,QWORD PTR [rbp-0x18]
  40e4ad:	mov    rsi,rdx
  40e4b0:	mov    rdi,rax
  40e4b3:	call   4064f5 <_start@@Base+0x265>
  40e4b8:	jmp    40e65d <_start@@Base+0x83cd>
  40e4bd:	add    QWORD PTR [rbp-0x50],0x8
  40e4c2:	mov    rdx,QWORD PTR [rbp-0x58]
  40e4c6:	mov    rax,QWORD PTR [rbp-0x50]
  40e4ca:	mov    rsi,rdx
  40e4cd:	mov    rdi,rax
  40e4d0:	call   406876 <_start@@Base+0x5e6>
  40e4d5:	mov    QWORD PTR [rbp-0x28],rax
  40e4d9:	movabs rax,0xff00000000000000
  40e4e3:	and    rax,QWORD PTR [rbp-0x28]
  40e4e7:	mov    rdx,rax
  40e4ea:	movabs rax,0x3500000000000000
  40e4f4:	cmp    rdx,rax
  40e4f7:	jne    40e625 <_start@@Base+0x8395>
  40e4fd:	mov    rax,QWORD PTR [rbp-0x50]
  40e501:	mov    QWORD PTR [rbp-0x20],rax
  40e505:	mov    rdx,QWORD PTR [rbp-0x58]
  40e509:	mov    rsi,QWORD PTR [rbp-0x20]
  40e50d:	mov    rax,QWORD PTR [rbp-0x48]
  40e511:	mov    ecx,0x1
  40e516:	mov    rdi,rax
  40e519:	call   406d6d <_start@@Base+0xadd>
  40e51e:	mov    QWORD PTR [rbp-0x50],rax
  40e522:	mov    rax,QWORD PTR [rbp-0x20]
  40e526:	cmp    rax,QWORD PTR [rbp-0x50]
  40e52a:	je     40e608 <_start@@Base+0x8378>
  40e530:	mov    DWORD PTR [rbp-0x30],0x0
  40e537:	mov    rax,QWORD PTR [rbp-0x50]
  40e53b:	mov    QWORD PTR [rbp-0x20],rax
  40e53f:	lea    rcx,[rbp-0x30]
  40e543:	mov    rdx,QWORD PTR [rbp-0x58]
  40e547:	mov    rsi,QWORD PTR [rbp-0x20]
  40e54b:	mov    rax,QWORD PTR [rbp-0x48]
  40e54f:	mov    rdi,rax
  40e552:	call   40751b <_start@@Base+0x128b>
  40e557:	mov    QWORD PTR [rbp-0x50],rax
  40e55b:	mov    rax,QWORD PTR [rbp-0x20]
  40e55f:	cmp    rax,QWORD PTR [rbp-0x50]
  40e563:	jne    40e5af <_start@@Base+0x831f>
  40e565:	mov    rax,QWORD PTR [rbp-0x50]
  40e569:	mov    QWORD PTR [rbp-0x20],rax
  40e56d:	lea    rcx,[rbp-0x30]
  40e571:	mov    rdx,QWORD PTR [rbp-0x58]
  40e575:	mov    rsi,QWORD PTR [rbp-0x20]
  40e579:	mov    rax,QWORD PTR [rbp-0x48]
  40e57d:	mov    r8,rcx
  40e580:	lea    rcx,[rip+0x38e99]        # 447420 <__data_start@@Base+0x360>
  40e587:	mov    rdi,rax
  40e58a:	call   407ccd <_start@@Base+0x1a3d>
  40e58f:	mov    QWORD PTR [rbp-0x50],rax
  40e593:	mov    rax,QWORD PTR [rbp-0x50]
  40e597:	cmp    rax,QWORD PTR [rbp-0x20]
  40e59b:	je     40e6e0 <_start@@Base+0x8450>
  40e5a1:	mov    rax,QWORD PTR [rbp-0x50]
  40e5a5:	cmp    rax,QWORD PTR [rbp-0x58]
  40e5a9:	je     40e6e0 <_start@@Base+0x8450>
  40e5af:	mov    eax,DWORD PTR [rbp-0x30]
  40e5b2:	test   eax,eax
  40e5b4:	jne    40e5c8 <_start@@Base+0x8338>
  40e5b6:	mov    rax,QWORD PTR [rbp-0x48]
  40e5ba:	mov    eax,DWORD PTR [rax+0x10]
  40e5bd:	and    eax,0x2
  40e5c0:	test   eax,eax
  40e5c2:	je     40e65d <_start@@Base+0x83cd>
  40e5c8:	mov    rax,QWORD PTR [rbp-0x48]
  40e5cc:	mov    rax,QWORD PTR [rax]
  40e5cf:	mov    ecx,0x4
  40e5d4:	mov    edx,0x4
  40e5d9:	mov    esi,0x8
  40e5de:	mov    rdi,rax
  40e5e1:	call   420ef1 <flatcc_builder_table_add@@Base>
  40e5e6:	mov    QWORD PTR [rbp-0x18],rax
  40e5ea:	cmp    QWORD PTR [rbp-0x18],0x0
  40e5ef:	je     40e6e3 <_start@@Base+0x8453>
  40e5f5:	mov    edx,DWORD PTR [rbp-0x30]
  40e5f8:	mov    rax,QWORD PTR [rbp-0x18]
  40e5fc:	mov    esi,edx
  40e5fe:	mov    rdi,rax
  40e601:	call   4063ef <_start@@Base+0x15f>
  40e606:	jmp    40e65d <_start@@Base+0x83cd>
  40e608:	mov    rdx,QWORD PTR [rbp-0x58]
  40e60c:	mov    rcx,QWORD PTR [rbp-0x50]
  40e610:	mov    rax,QWORD PTR [rbp-0x48]
  40e614:	mov    rsi,rcx
  40e617:	mov    rdi,rax
  40e61a:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40e61f:	mov    QWORD PTR [rbp-0x50],rax
  40e623:	jmp    40e65d <_start@@Base+0x83cd>
  40e625:	mov    rdx,QWORD PTR [rbp-0x58]
  40e629:	mov    rcx,QWORD PTR [rbp-0x50]
  40e62d:	mov    rax,QWORD PTR [rbp-0x48]
  40e631:	mov    rsi,rcx
  40e634:	mov    rdi,rax
  40e637:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40e63c:	mov    QWORD PTR [rbp-0x50],rax
  40e640:	jmp    40e65d <_start@@Base+0x83cd>
  40e642:	mov    rdx,QWORD PTR [rbp-0x58]
  40e646:	mov    rcx,QWORD PTR [rbp-0x50]
  40e64a:	mov    rax,QWORD PTR [rbp-0x48]
  40e64e:	mov    rsi,rcx
  40e651:	mov    rdi,rax
  40e654:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40e659:	mov    QWORD PTR [rbp-0x50],rax
  40e65d:	lea    rcx,[rbp-0x38]
  40e661:	mov    rdx,QWORD PTR [rbp-0x58]
  40e665:	mov    rsi,QWORD PTR [rbp-0x50]
  40e669:	mov    rax,QWORD PTR [rbp-0x48]
  40e66d:	mov    rdi,rax
  40e670:	call   406a34 <_start@@Base+0x7a4>
  40e675:	mov    QWORD PTR [rbp-0x50],rax
  40e679:	mov    eax,DWORD PTR [rbp-0x38]
  40e67c:	test   eax,eax
  40e67e:	jne    40db65 <_start@@Base+0x78d5>
  40e684:	mov    rax,QWORD PTR [rbp-0x48]
  40e688:	mov    eax,DWORD PTR [rax+0x20]
  40e68b:	test   eax,eax
  40e68d:	jne    40e6e6 <_start@@Base+0x8456>
  40e68f:	mov    rax,QWORD PTR [rbp-0x48]
  40e693:	mov    rax,QWORD PTR [rax]
  40e696:	mov    rdi,rax
  40e699:	call   41f850 <flatcc_builder_end_table@@Base>
  40e69e:	mov    edx,eax
  40e6a0:	mov    rax,QWORD PTR [rbp-0x60]
  40e6a4:	mov    DWORD PTR [rax],edx
  40e6a6:	mov    rax,QWORD PTR [rbp-0x60]
  40e6aa:	mov    eax,DWORD PTR [rax]
  40e6ac:	test   eax,eax
  40e6ae:	je     40e6e9 <_start@@Base+0x8459>
  40e6b0:	mov    rax,QWORD PTR [rbp-0x50]
  40e6b4:	jmp    40e703 <_start@@Base+0x8473>
  40e6b6:	nop
  40e6b7:	jmp    40e6ea <_start@@Base+0x845a>
  40e6b9:	nop
  40e6ba:	jmp    40e6ea <_start@@Base+0x845a>
  40e6bc:	nop
  40e6bd:	jmp    40e6ea <_start@@Base+0x845a>
  40e6bf:	nop
  40e6c0:	jmp    40e6ea <_start@@Base+0x845a>
  40e6c2:	nop
  40e6c3:	jmp    40e6ea <_start@@Base+0x845a>
  40e6c5:	nop
  40e6c6:	jmp    40e6ea <_start@@Base+0x845a>
  40e6c8:	nop
  40e6c9:	jmp    40e6ea <_start@@Base+0x845a>
  40e6cb:	nop
  40e6cc:	jmp    40e6ea <_start@@Base+0x845a>
  40e6ce:	nop
  40e6cf:	jmp    40e6ea <_start@@Base+0x845a>
  40e6d1:	nop
  40e6d2:	jmp    40e6ea <_start@@Base+0x845a>
  40e6d4:	nop
  40e6d5:	jmp    40e6ea <_start@@Base+0x845a>
  40e6d7:	nop
  40e6d8:	jmp    40e6ea <_start@@Base+0x845a>
  40e6da:	nop
  40e6db:	jmp    40e6ea <_start@@Base+0x845a>
  40e6dd:	nop
  40e6de:	jmp    40e6ea <_start@@Base+0x845a>
  40e6e0:	nop
  40e6e1:	jmp    40e6ea <_start@@Base+0x845a>
  40e6e3:	nop
  40e6e4:	jmp    40e6ea <_start@@Base+0x845a>
  40e6e6:	nop
  40e6e7:	jmp    40e6ea <_start@@Base+0x845a>
  40e6e9:	nop
  40e6ea:	mov    rdx,QWORD PTR [rbp-0x58]
  40e6ee:	mov    rsi,QWORD PTR [rbp-0x50]
  40e6f2:	mov    rax,QWORD PTR [rbp-0x48]
  40e6f6:	mov    ecx,0x21
  40e6fb:	mov    rdi,rax
  40e6fe:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40e703:	mov    rdi,QWORD PTR [rbp-0x8]
  40e707:	xor    rdi,QWORD PTR fs:0x28
  40e710:	je     40e717 <_start@@Base+0x8487>
  40e712:	call   4061a0 <__stack_chk_fail@plt>
  40e717:	leave  
  40e718:	ret    
  40e719:	endbr64 
  40e71d:	push   rbp
  40e71e:	mov    rbp,rsp
  40e721:	sub    rsp,0x50
  40e725:	mov    QWORD PTR [rbp-0x38],rdi
  40e729:	mov    QWORD PTR [rbp-0x40],rsi
  40e72d:	mov    QWORD PTR [rbp-0x48],rdx
  40e731:	mov    QWORD PTR [rbp-0x50],rcx
  40e735:	mov    rax,QWORD PTR fs:0x28
  40e73e:	mov    QWORD PTR [rbp-0x8],rax
  40e742:	xor    eax,eax
  40e744:	mov    rax,QWORD PTR [rbp-0x50]
  40e748:	mov    DWORD PTR [rax],0x0
  40e74e:	mov    rax,QWORD PTR [rbp-0x38]
  40e752:	mov    rax,QWORD PTR [rax]
  40e755:	mov    esi,0x2
  40e75a:	mov    rdi,rax
  40e75d:	call   41ed41 <flatcc_builder_start_table@@Base>
  40e762:	test   eax,eax
  40e764:	jne    40eb09 <_start@@Base+0x8879>
  40e76a:	lea    rcx,[rbp-0x2c]
  40e76e:	mov    rdx,QWORD PTR [rbp-0x48]
  40e772:	mov    rsi,QWORD PTR [rbp-0x40]
  40e776:	mov    rax,QWORD PTR [rbp-0x38]
  40e77a:	mov    rdi,rax
  40e77d:	call   406977 <_start@@Base+0x6e7>
  40e782:	mov    QWORD PTR [rbp-0x40],rax
  40e786:	jmp    40eacc <_start@@Base+0x883c>
  40e78b:	mov    rdx,QWORD PTR [rbp-0x48]
  40e78f:	mov    rcx,QWORD PTR [rbp-0x40]
  40e793:	mov    rax,QWORD PTR [rbp-0x38]
  40e797:	mov    rsi,rcx
  40e79a:	mov    rdi,rax
  40e79d:	call   4066e9 <_start@@Base+0x459>
  40e7a2:	mov    QWORD PTR [rbp-0x40],rax
  40e7a6:	mov    rdx,QWORD PTR [rbp-0x48]
  40e7aa:	mov    rax,QWORD PTR [rbp-0x40]
  40e7ae:	mov    rsi,rdx
  40e7b1:	mov    rdi,rax
  40e7b4:	call   406876 <_start@@Base+0x5e6>
  40e7b9:	mov    QWORD PTR [rbp-0x20],rax
  40e7bd:	movabs rax,0x616161615f626262
  40e7c7:	cmp    QWORD PTR [rbp-0x20],rax
  40e7cb:	jne    40ea95 <_start@@Base+0x8805>
  40e7d1:	add    QWORD PTR [rbp-0x40],0x8
  40e7d6:	mov    rdx,QWORD PTR [rbp-0x48]
  40e7da:	mov    rax,QWORD PTR [rbp-0x40]
  40e7de:	mov    rsi,rdx
  40e7e1:	mov    rdi,rax
  40e7e4:	call   406876 <_start@@Base+0x5e6>
  40e7e9:	mov    QWORD PTR [rbp-0x20],rax
  40e7ed:	mov    rax,QWORD PTR [rbp-0x20]
  40e7f1:	mov    al,0x0
  40e7f3:	mov    rdx,rax
  40e7f6:	movabs rax,0x625f737465707300
  40e800:	cmp    rdx,rax
  40e803:	jne    40e93c <_start@@Base+0x86ac>
  40e809:	mov    rax,QWORD PTR [rbp-0x40]
  40e80d:	mov    QWORD PTR [rbp-0x18],rax
  40e811:	mov    rdx,QWORD PTR [rbp-0x48]
  40e815:	mov    rsi,QWORD PTR [rbp-0x18]
  40e819:	mov    rax,QWORD PTR [rbp-0x38]
  40e81d:	mov    ecx,0x7
  40e822:	mov    rdi,rax
  40e825:	call   406d6d <_start@@Base+0xadd>
  40e82a:	mov    QWORD PTR [rbp-0x40],rax
  40e82e:	mov    rax,QWORD PTR [rbp-0x18]
  40e832:	cmp    rax,QWORD PTR [rbp-0x40]
  40e836:	je     40e91c <_start@@Base+0x868c>
  40e83c:	mov    QWORD PTR [rbp-0x28],0x0
  40e844:	mov    rax,QWORD PTR [rbp-0x40]
  40e848:	mov    QWORD PTR [rbp-0x18],rax
  40e84c:	lea    rcx,[rbp-0x28]
  40e850:	mov    rdx,QWORD PTR [rbp-0x48]
  40e854:	mov    rsi,QWORD PTR [rbp-0x18]
  40e858:	mov    rax,QWORD PTR [rbp-0x38]
  40e85c:	mov    rdi,rax
  40e85f:	call   407769 <_start@@Base+0x14d9>
  40e864:	mov    QWORD PTR [rbp-0x40],rax
  40e868:	mov    rax,QWORD PTR [rbp-0x18]
  40e86c:	cmp    rax,QWORD PTR [rbp-0x40]
  40e870:	jne    40e8bc <_start@@Base+0x862c>
  40e872:	mov    rax,QWORD PTR [rbp-0x40]
  40e876:	mov    QWORD PTR [rbp-0x18],rax
  40e87a:	lea    rcx,[rbp-0x28]
  40e87e:	mov    rdx,QWORD PTR [rbp-0x48]
  40e882:	mov    rsi,QWORD PTR [rbp-0x18]
  40e886:	mov    rax,QWORD PTR [rbp-0x38]
  40e88a:	mov    r8,rcx
  40e88d:	lea    rcx,[rip+0x38bac]        # 447440 <__data_start@@Base+0x380>
  40e894:	mov    rdi,rax
  40e897:	call   4080e1 <_start@@Base+0x1e51>
  40e89c:	mov    QWORD PTR [rbp-0x40],rax
  40e8a0:	mov    rax,QWORD PTR [rbp-0x40]
  40e8a4:	cmp    rax,QWORD PTR [rbp-0x18]
  40e8a8:	je     40eb0c <_start@@Base+0x887c>
  40e8ae:	mov    rax,QWORD PTR [rbp-0x40]
  40e8b2:	cmp    rax,QWORD PTR [rbp-0x48]
  40e8b6:	je     40eb0c <_start@@Base+0x887c>
  40e8bc:	mov    rax,QWORD PTR [rbp-0x28]
  40e8c0:	test   rax,rax
  40e8c3:	jne    40e8d7 <_start@@Base+0x8647>
  40e8c5:	mov    rax,QWORD PTR [rbp-0x38]
  40e8c9:	mov    eax,DWORD PTR [rax+0x10]
  40e8cc:	and    eax,0x2
  40e8cf:	test   eax,eax
  40e8d1:	je     40eab0 <_start@@Base+0x8820>
  40e8d7:	mov    rax,QWORD PTR [rbp-0x38]
  40e8db:	mov    rax,QWORD PTR [rax]
  40e8de:	mov    ecx,0x8
  40e8e3:	mov    edx,0x8
  40e8e8:	mov    esi,0x0
  40e8ed:	mov    rdi,rax
  40e8f0:	call   420ef1 <flatcc_builder_table_add@@Base>
  40e8f5:	mov    QWORD PTR [rbp-0x10],rax
  40e8f9:	cmp    QWORD PTR [rbp-0x10],0x0
  40e8fe:	je     40eb0f <_start@@Base+0x887f>
  40e904:	mov    rdx,QWORD PTR [rbp-0x28]
  40e908:	mov    rax,QWORD PTR [rbp-0x10]
  40e90c:	mov    rsi,rdx
  40e90f:	mov    rdi,rax
  40e912:	call   4064f5 <_start@@Base+0x265>
  40e917:	jmp    40eab0 <_start@@Base+0x8820>
  40e91c:	mov    rdx,QWORD PTR [rbp-0x48]
  40e920:	mov    rcx,QWORD PTR [rbp-0x40]
  40e924:	mov    rax,QWORD PTR [rbp-0x38]
  40e928:	mov    rsi,rcx
  40e92b:	mov    rdi,rax
  40e92e:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40e933:	mov    QWORD PTR [rbp-0x40],rax
  40e937:	jmp    40eab0 <_start@@Base+0x8820>
  40e93c:	movabs rax,0x625f73746172745f
  40e946:	cmp    QWORD PTR [rbp-0x20],rax
  40e94a:	jne    40ea78 <_start@@Base+0x87e8>
  40e950:	mov    rax,QWORD PTR [rbp-0x40]
  40e954:	mov    QWORD PTR [rbp-0x18],rax
  40e958:	mov    rdx,QWORD PTR [rbp-0x48]
  40e95c:	mov    rsi,QWORD PTR [rbp-0x18]
  40e960:	mov    rax,QWORD PTR [rbp-0x38]
  40e964:	mov    ecx,0x8
  40e969:	mov    rdi,rax
  40e96c:	call   406d6d <_start@@Base+0xadd>
  40e971:	mov    QWORD PTR [rbp-0x40],rax
  40e975:	mov    rax,QWORD PTR [rbp-0x18]
  40e979:	cmp    rax,QWORD PTR [rbp-0x40]
  40e97d:	je     40ea5b <_start@@Base+0x87cb>
  40e983:	mov    DWORD PTR [rbp-0x28],0x0
  40e98a:	mov    rax,QWORD PTR [rbp-0x40]
  40e98e:	mov    QWORD PTR [rbp-0x18],rax
  40e992:	lea    rcx,[rbp-0x28]
  40e996:	mov    rdx,QWORD PTR [rbp-0x48]
  40e99a:	mov    rsi,QWORD PTR [rbp-0x18]
  40e99e:	mov    rax,QWORD PTR [rbp-0x38]
  40e9a2:	mov    rdi,rax
  40e9a5:	call   40751b <_start@@Base+0x128b>
  40e9aa:	mov    QWORD PTR [rbp-0x40],rax
  40e9ae:	mov    rax,QWORD PTR [rbp-0x18]
  40e9b2:	cmp    rax,QWORD PTR [rbp-0x40]
  40e9b6:	jne    40ea02 <_start@@Base+0x8772>
  40e9b8:	mov    rax,QWORD PTR [rbp-0x40]
  40e9bc:	mov    QWORD PTR [rbp-0x18],rax
  40e9c0:	lea    rcx,[rbp-0x28]
  40e9c4:	mov    rdx,QWORD PTR [rbp-0x48]
  40e9c8:	mov    rsi,QWORD PTR [rbp-0x18]
  40e9cc:	mov    rax,QWORD PTR [rbp-0x38]
  40e9d0:	mov    r8,rcx
  40e9d3:	lea    rcx,[rip+0x38a86]        # 447460 <__data_start@@Base+0x3a0>
  40e9da:	mov    rdi,rax
  40e9dd:	call   407ccd <_start@@Base+0x1a3d>
  40e9e2:	mov    QWORD PTR [rbp-0x40],rax
  40e9e6:	mov    rax,QWORD PTR [rbp-0x40]
  40e9ea:	cmp    rax,QWORD PTR [rbp-0x18]
  40e9ee:	je     40eb12 <_start@@Base+0x8882>
  40e9f4:	mov    rax,QWORD PTR [rbp-0x40]
  40e9f8:	cmp    rax,QWORD PTR [rbp-0x48]
  40e9fc:	je     40eb12 <_start@@Base+0x8882>
  40ea02:	mov    eax,DWORD PTR [rbp-0x28]
  40ea05:	test   eax,eax
  40ea07:	jne    40ea1b <_start@@Base+0x878b>
  40ea09:	mov    rax,QWORD PTR [rbp-0x38]
  40ea0d:	mov    eax,DWORD PTR [rax+0x10]
  40ea10:	and    eax,0x2
  40ea13:	test   eax,eax
  40ea15:	je     40eab0 <_start@@Base+0x8820>
  40ea1b:	mov    rax,QWORD PTR [rbp-0x38]
  40ea1f:	mov    rax,QWORD PTR [rax]
  40ea22:	mov    ecx,0x4
  40ea27:	mov    edx,0x4
  40ea2c:	mov    esi,0x1
  40ea31:	mov    rdi,rax
  40ea34:	call   420ef1 <flatcc_builder_table_add@@Base>
  40ea39:	mov    QWORD PTR [rbp-0x10],rax
  40ea3d:	cmp    QWORD PTR [rbp-0x10],0x0
  40ea42:	je     40eb15 <_start@@Base+0x8885>
  40ea48:	mov    edx,DWORD PTR [rbp-0x28]
  40ea4b:	mov    rax,QWORD PTR [rbp-0x10]
  40ea4f:	mov    esi,edx
  40ea51:	mov    rdi,rax
  40ea54:	call   4063ef <_start@@Base+0x15f>
  40ea59:	jmp    40eab0 <_start@@Base+0x8820>
  40ea5b:	mov    rdx,QWORD PTR [rbp-0x48]
  40ea5f:	mov    rcx,QWORD PTR [rbp-0x40]
  40ea63:	mov    rax,QWORD PTR [rbp-0x38]
  40ea67:	mov    rsi,rcx
  40ea6a:	mov    rdi,rax
  40ea6d:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40ea72:	mov    QWORD PTR [rbp-0x40],rax
  40ea76:	jmp    40eab0 <_start@@Base+0x8820>
  40ea78:	mov    rdx,QWORD PTR [rbp-0x48]
  40ea7c:	mov    rcx,QWORD PTR [rbp-0x40]
  40ea80:	mov    rax,QWORD PTR [rbp-0x38]
  40ea84:	mov    rsi,rcx
  40ea87:	mov    rdi,rax
  40ea8a:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40ea8f:	mov    QWORD PTR [rbp-0x40],rax
  40ea93:	jmp    40eab0 <_start@@Base+0x8820>
  40ea95:	mov    rdx,QWORD PTR [rbp-0x48]
  40ea99:	mov    rcx,QWORD PTR [rbp-0x40]
  40ea9d:	mov    rax,QWORD PTR [rbp-0x38]
  40eaa1:	mov    rsi,rcx
  40eaa4:	mov    rdi,rax
  40eaa7:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40eaac:	mov    QWORD PTR [rbp-0x40],rax
  40eab0:	lea    rcx,[rbp-0x2c]
  40eab4:	mov    rdx,QWORD PTR [rbp-0x48]
  40eab8:	mov    rsi,QWORD PTR [rbp-0x40]
  40eabc:	mov    rax,QWORD PTR [rbp-0x38]
  40eac0:	mov    rdi,rax
  40eac3:	call   406a34 <_start@@Base+0x7a4>
  40eac8:	mov    QWORD PTR [rbp-0x40],rax
  40eacc:	mov    eax,DWORD PTR [rbp-0x2c]
  40eacf:	test   eax,eax
  40ead1:	jne    40e78b <_start@@Base+0x84fb>
  40ead7:	mov    rax,QWORD PTR [rbp-0x38]
  40eadb:	mov    eax,DWORD PTR [rax+0x20]
  40eade:	test   eax,eax
  40eae0:	jne    40eb18 <_start@@Base+0x8888>
  40eae2:	mov    rax,QWORD PTR [rbp-0x38]
  40eae6:	mov    rax,QWORD PTR [rax]
  40eae9:	mov    rdi,rax
  40eaec:	call   41f850 <flatcc_builder_end_table@@Base>
  40eaf1:	mov    edx,eax
  40eaf3:	mov    rax,QWORD PTR [rbp-0x50]
  40eaf7:	mov    DWORD PTR [rax],edx
  40eaf9:	mov    rax,QWORD PTR [rbp-0x50]
  40eafd:	mov    eax,DWORD PTR [rax]
  40eaff:	test   eax,eax
  40eb01:	je     40eb1b <_start@@Base+0x888b>
  40eb03:	mov    rax,QWORD PTR [rbp-0x40]
  40eb07:	jmp    40eb35 <_start@@Base+0x88a5>
  40eb09:	nop
  40eb0a:	jmp    40eb1c <_start@@Base+0x888c>
  40eb0c:	nop
  40eb0d:	jmp    40eb1c <_start@@Base+0x888c>
  40eb0f:	nop
  40eb10:	jmp    40eb1c <_start@@Base+0x888c>
  40eb12:	nop
  40eb13:	jmp    40eb1c <_start@@Base+0x888c>
  40eb15:	nop
  40eb16:	jmp    40eb1c <_start@@Base+0x888c>
  40eb18:	nop
  40eb19:	jmp    40eb1c <_start@@Base+0x888c>
  40eb1b:	nop
  40eb1c:	mov    rdx,QWORD PTR [rbp-0x48]
  40eb20:	mov    rsi,QWORD PTR [rbp-0x40]
  40eb24:	mov    rax,QWORD PTR [rbp-0x38]
  40eb28:	mov    ecx,0x21
  40eb2d:	mov    rdi,rax
  40eb30:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40eb35:	mov    rdi,QWORD PTR [rbp-0x8]
  40eb39:	xor    rdi,QWORD PTR fs:0x28
  40eb42:	je     40eb49 <_start@@Base+0x88b9>
  40eb44:	call   4061a0 <__stack_chk_fail@plt>
  40eb49:	leave  
  40eb4a:	ret    
  40eb4b:	endbr64 
  40eb4f:	push   rbp
  40eb50:	mov    rbp,rsp
  40eb53:	sub    rsp,0x50
  40eb57:	mov    QWORD PTR [rbp-0x38],rdi
  40eb5b:	mov    QWORD PTR [rbp-0x40],rsi
  40eb5f:	mov    QWORD PTR [rbp-0x48],rdx
  40eb63:	mov    QWORD PTR [rbp-0x50],rcx
  40eb67:	mov    rax,QWORD PTR fs:0x28
  40eb70:	mov    QWORD PTR [rbp-0x8],rax
  40eb74:	xor    eax,eax
  40eb76:	mov    rax,QWORD PTR [rbp-0x50]
  40eb7a:	mov    DWORD PTR [rax],0x0
  40eb80:	mov    rax,QWORD PTR [rbp-0x38]
  40eb84:	mov    rax,QWORD PTR [rax]
  40eb87:	mov    esi,0x2
  40eb8c:	mov    rdi,rax
  40eb8f:	call   41ed41 <flatcc_builder_start_table@@Base>
  40eb94:	test   eax,eax
  40eb96:	jne    40ef97 <_start@@Base+0x8d07>
  40eb9c:	lea    rcx,[rbp-0x2c]
  40eba0:	mov    rdx,QWORD PTR [rbp-0x48]
  40eba4:	mov    rsi,QWORD PTR [rbp-0x40]
  40eba8:	mov    rax,QWORD PTR [rbp-0x38]
  40ebac:	mov    rdi,rax
  40ebaf:	call   406977 <_start@@Base+0x6e7>
  40ebb4:	mov    QWORD PTR [rbp-0x40],rax
  40ebb8:	jmp    40ef5a <_start@@Base+0x8cca>
  40ebbd:	mov    rdx,QWORD PTR [rbp-0x48]
  40ebc1:	mov    rcx,QWORD PTR [rbp-0x40]
  40ebc5:	mov    rax,QWORD PTR [rbp-0x38]
  40ebc9:	mov    rsi,rcx
  40ebcc:	mov    rdi,rax
  40ebcf:	call   4066e9 <_start@@Base+0x459>
  40ebd4:	mov    QWORD PTR [rbp-0x40],rax
  40ebd8:	mov    rdx,QWORD PTR [rbp-0x48]
  40ebdc:	mov    rax,QWORD PTR [rbp-0x40]
  40ebe0:	mov    rsi,rdx
  40ebe3:	mov    rdi,rax
  40ebe6:	call   406876 <_start@@Base+0x5e6>
  40ebeb:	mov    QWORD PTR [rbp-0x20],rax
  40ebef:	movabs rax,0x616161615f626262
  40ebf9:	cmp    QWORD PTR [rbp-0x20],rax
  40ebfd:	jne    40ef23 <_start@@Base+0x8c93>
  40ec03:	add    QWORD PTR [rbp-0x40],0x8
  40ec08:	mov    rdx,QWORD PTR [rbp-0x48]
  40ec0c:	mov    rax,QWORD PTR [rbp-0x40]
  40ec10:	mov    rsi,rdx
  40ec13:	mov    rdi,rax
  40ec16:	call   406876 <_start@@Base+0x5e6>
  40ec1b:	mov    QWORD PTR [rbp-0x20],rax
  40ec1f:	movabs rax,0x625f73746172745f
  40ec29:	cmp    QWORD PTR [rbp-0x20],rax
  40ec2d:	jne    40edbd <_start@@Base+0x8b2d>
  40ec33:	add    QWORD PTR [rbp-0x40],0x8
  40ec38:	mov    rdx,QWORD PTR [rbp-0x48]
  40ec3c:	mov    rax,QWORD PTR [rbp-0x40]
  40ec40:	mov    rsi,rdx
  40ec43:	mov    rdi,rax
  40ec46:	call   406876 <_start@@Base+0x5e6>
  40ec4b:	mov    QWORD PTR [rbp-0x20],rax
  40ec4f:	mov    rax,QWORD PTR [rbp-0x20]
  40ec53:	and    rax,0xffffffffff000000
  40ec59:	mov    rdx,rax
  40ec5c:	movabs rax,0x7374657073000000
  40ec66:	cmp    rdx,rax
  40ec69:	jne    40ed9d <_start@@Base+0x8b0d>
  40ec6f:	mov    rax,QWORD PTR [rbp-0x40]
  40ec73:	mov    QWORD PTR [rbp-0x18],rax
  40ec77:	mov    rdx,QWORD PTR [rbp-0x48]
  40ec7b:	mov    rsi,QWORD PTR [rbp-0x18]
  40ec7f:	mov    rax,QWORD PTR [rbp-0x38]
  40ec83:	mov    ecx,0x5
  40ec88:	mov    rdi,rax
  40ec8b:	call   406d6d <_start@@Base+0xadd>
  40ec90:	mov    QWORD PTR [rbp-0x40],rax
  40ec94:	mov    rax,QWORD PTR [rbp-0x18]
  40ec98:	cmp    rax,QWORD PTR [rbp-0x40]
  40ec9c:	je     40ed7d <_start@@Base+0x8aed>
  40eca2:	mov    DWORD PTR [rbp-0x28],0x0
  40eca9:	mov    rax,QWORD PTR [rbp-0x40]
  40ecad:	mov    QWORD PTR [rbp-0x18],rax
  40ecb1:	lea    rcx,[rbp-0x28]
  40ecb5:	mov    rdx,QWORD PTR [rbp-0x48]
  40ecb9:	mov    rsi,QWORD PTR [rbp-0x18]
  40ecbd:	mov    rax,QWORD PTR [rbp-0x38]
  40ecc1:	mov    rdi,rax
  40ecc4:	call   40751b <_start@@Base+0x128b>
  40ecc9:	mov    QWORD PTR [rbp-0x40],rax
  40eccd:	mov    rax,QWORD PTR [rbp-0x18]
  40ecd1:	cmp    rax,QWORD PTR [rbp-0x40]
  40ecd5:	jne    40ed21 <_start@@Base+0x8a91>
  40ecd7:	mov    rax,QWORD PTR [rbp-0x40]
  40ecdb:	mov    QWORD PTR [rbp-0x18],rax
  40ecdf:	lea    rcx,[rbp-0x28]
  40ece3:	mov    rdx,QWORD PTR [rbp-0x48]
  40ece7:	mov    rsi,QWORD PTR [rbp-0x18]
  40eceb:	mov    rax,QWORD PTR [rbp-0x38]
  40ecef:	mov    r8,rcx
  40ecf2:	lea    rcx,[rip+0x38787]        # 447480 <__data_start@@Base+0x3c0>
  40ecf9:	mov    rdi,rax
  40ecfc:	call   407ccd <_start@@Base+0x1a3d>
  40ed01:	mov    QWORD PTR [rbp-0x40],rax
  40ed05:	mov    rax,QWORD PTR [rbp-0x40]
  40ed09:	cmp    rax,QWORD PTR [rbp-0x18]
  40ed0d:	je     40ef9a <_start@@Base+0x8d0a>
  40ed13:	mov    rax,QWORD PTR [rbp-0x40]
  40ed17:	cmp    rax,QWORD PTR [rbp-0x48]
  40ed1b:	je     40ef9a <_start@@Base+0x8d0a>
  40ed21:	mov    eax,DWORD PTR [rbp-0x28]
  40ed24:	test   eax,eax
  40ed26:	jne    40ed3a <_start@@Base+0x8aaa>
  40ed28:	mov    rax,QWORD PTR [rbp-0x38]
  40ed2c:	mov    eax,DWORD PTR [rax+0x10]
  40ed2f:	and    eax,0x2
  40ed32:	test   eax,eax
  40ed34:	je     40ef3e <_start@@Base+0x8cae>
  40ed3a:	mov    rax,QWORD PTR [rbp-0x38]
  40ed3e:	mov    rax,QWORD PTR [rax]
  40ed41:	mov    ecx,0x4
  40ed46:	mov    edx,0x4
  40ed4b:	mov    esi,0x1
  40ed50:	mov    rdi,rax
  40ed53:	call   420ef1 <flatcc_builder_table_add@@Base>
  40ed58:	mov    QWORD PTR [rbp-0x10],rax
  40ed5c:	cmp    QWORD PTR [rbp-0x10],0x0
  40ed61:	je     40ef9d <_start@@Base+0x8d0d>
  40ed67:	mov    edx,DWORD PTR [rbp-0x28]
  40ed6a:	mov    rax,QWORD PTR [rbp-0x10]
  40ed6e:	mov    esi,edx
  40ed70:	mov    rdi,rax
  40ed73:	call   4063ef <_start@@Base+0x15f>
  40ed78:	jmp    40ef3e <_start@@Base+0x8cae>
  40ed7d:	mov    rdx,QWORD PTR [rbp-0x48]
  40ed81:	mov    rcx,QWORD PTR [rbp-0x40]
  40ed85:	mov    rax,QWORD PTR [rbp-0x38]
  40ed89:	mov    rsi,rcx
  40ed8c:	mov    rdi,rax
  40ed8f:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40ed94:	mov    QWORD PTR [rbp-0x40],rax
  40ed98:	jmp    40ef3e <_start@@Base+0x8cae>
  40ed9d:	mov    rdx,QWORD PTR [rbp-0x48]
  40eda1:	mov    rcx,QWORD PTR [rbp-0x40]
  40eda5:	mov    rax,QWORD PTR [rbp-0x38]
  40eda9:	mov    rsi,rcx
  40edac:	mov    rdi,rax
  40edaf:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40edb4:	mov    QWORD PTR [rbp-0x40],rax
  40edb8:	jmp    40ef3e <_start@@Base+0x8cae>
  40edbd:	mov    rax,QWORD PTR [rbp-0x20]
  40edc1:	mov    al,0x0
  40edc3:	mov    rdx,rax
  40edc6:	movabs rax,0x625f737465707300
  40edd0:	cmp    rdx,rax
  40edd3:	jne    40ef06 <_start@@Base+0x8c76>
  40edd9:	mov    rax,QWORD PTR [rbp-0x40]
  40eddd:	mov    QWORD PTR [rbp-0x18],rax
  40ede1:	mov    rdx,QWORD PTR [rbp-0x48]
  40ede5:	mov    rsi,QWORD PTR [rbp-0x18]
  40ede9:	mov    rax,QWORD PTR [rbp-0x38]
  40eded:	mov    ecx,0x7
  40edf2:	mov    rdi,rax
  40edf5:	call   406d6d <_start@@Base+0xadd>
  40edfa:	mov    QWORD PTR [rbp-0x40],rax
  40edfe:	mov    rax,QWORD PTR [rbp-0x18]
  40ee02:	cmp    rax,QWORD PTR [rbp-0x40]
  40ee06:	je     40eee9 <_start@@Base+0x8c59>
  40ee0c:	mov    QWORD PTR [rbp-0x28],0x0
  40ee14:	mov    rax,QWORD PTR [rbp-0x40]
  40ee18:	mov    QWORD PTR [rbp-0x18],rax
  40ee1c:	lea    rcx,[rbp-0x28]
  40ee20:	mov    rdx,QWORD PTR [rbp-0x48]
  40ee24:	mov    rsi,QWORD PTR [rbp-0x18]
  40ee28:	mov    rax,QWORD PTR [rbp-0x38]
  40ee2c:	mov    rdi,rax
  40ee2f:	call   407769 <_start@@Base+0x14d9>
  40ee34:	mov    QWORD PTR [rbp-0x40],rax
  40ee38:	mov    rax,QWORD PTR [rbp-0x18]
  40ee3c:	cmp    rax,QWORD PTR [rbp-0x40]
  40ee40:	jne    40ee8c <_start@@Base+0x8bfc>
  40ee42:	mov    rax,QWORD PTR [rbp-0x40]
  40ee46:	mov    QWORD PTR [rbp-0x18],rax
  40ee4a:	lea    rcx,[rbp-0x28]
  40ee4e:	mov    rdx,QWORD PTR [rbp-0x48]
  40ee52:	mov    rsi,QWORD PTR [rbp-0x18]
  40ee56:	mov    rax,QWORD PTR [rbp-0x38]
  40ee5a:	mov    r8,rcx
  40ee5d:	lea    rcx,[rip+0x3863c]        # 4474a0 <__data_start@@Base+0x3e0>
  40ee64:	mov    rdi,rax
  40ee67:	call   4080e1 <_start@@Base+0x1e51>
  40ee6c:	mov    QWORD PTR [rbp-0x40],rax
  40ee70:	mov    rax,QWORD PTR [rbp-0x40]
  40ee74:	cmp    rax,QWORD PTR [rbp-0x18]
  40ee78:	je     40efa0 <_start@@Base+0x8d10>
  40ee7e:	mov    rax,QWORD PTR [rbp-0x40]
  40ee82:	cmp    rax,QWORD PTR [rbp-0x48]
  40ee86:	je     40efa0 <_start@@Base+0x8d10>
  40ee8c:	mov    rax,QWORD PTR [rbp-0x28]
  40ee90:	test   rax,rax
  40ee93:	jne    40eea7 <_start@@Base+0x8c17>
  40ee95:	mov    rax,QWORD PTR [rbp-0x38]
  40ee99:	mov    eax,DWORD PTR [rax+0x10]
  40ee9c:	and    eax,0x2
  40ee9f:	test   eax,eax
  40eea1:	je     40ef3e <_start@@Base+0x8cae>
  40eea7:	mov    rax,QWORD PTR [rbp-0x38]
  40eeab:	mov    rax,QWORD PTR [rax]
  40eeae:	mov    ecx,0x8
  40eeb3:	mov    edx,0x8
  40eeb8:	mov    esi,0x0
  40eebd:	mov    rdi,rax
  40eec0:	call   420ef1 <flatcc_builder_table_add@@Base>
  40eec5:	mov    QWORD PTR [rbp-0x10],rax
  40eec9:	cmp    QWORD PTR [rbp-0x10],0x0
  40eece:	je     40efa3 <_start@@Base+0x8d13>
  40eed4:	mov    rdx,QWORD PTR [rbp-0x28]
  40eed8:	mov    rax,QWORD PTR [rbp-0x10]
  40eedc:	mov    rsi,rdx
  40eedf:	mov    rdi,rax
  40eee2:	call   4064f5 <_start@@Base+0x265>
  40eee7:	jmp    40ef3e <_start@@Base+0x8cae>
  40eee9:	mov    rdx,QWORD PTR [rbp-0x48]
  40eeed:	mov    rcx,QWORD PTR [rbp-0x40]
  40eef1:	mov    rax,QWORD PTR [rbp-0x38]
  40eef5:	mov    rsi,rcx
  40eef8:	mov    rdi,rax
  40eefb:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40ef00:	mov    QWORD PTR [rbp-0x40],rax
  40ef04:	jmp    40ef3e <_start@@Base+0x8cae>
  40ef06:	mov    rdx,QWORD PTR [rbp-0x48]
  40ef0a:	mov    rcx,QWORD PTR [rbp-0x40]
  40ef0e:	mov    rax,QWORD PTR [rbp-0x38]
  40ef12:	mov    rsi,rcx
  40ef15:	mov    rdi,rax
  40ef18:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40ef1d:	mov    QWORD PTR [rbp-0x40],rax
  40ef21:	jmp    40ef3e <_start@@Base+0x8cae>
  40ef23:	mov    rdx,QWORD PTR [rbp-0x48]
  40ef27:	mov    rcx,QWORD PTR [rbp-0x40]
  40ef2b:	mov    rax,QWORD PTR [rbp-0x38]
  40ef2f:	mov    rsi,rcx
  40ef32:	mov    rdi,rax
  40ef35:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40ef3a:	mov    QWORD PTR [rbp-0x40],rax
  40ef3e:	lea    rcx,[rbp-0x2c]
  40ef42:	mov    rdx,QWORD PTR [rbp-0x48]
  40ef46:	mov    rsi,QWORD PTR [rbp-0x40]
  40ef4a:	mov    rax,QWORD PTR [rbp-0x38]
  40ef4e:	mov    rdi,rax
  40ef51:	call   406a34 <_start@@Base+0x7a4>
  40ef56:	mov    QWORD PTR [rbp-0x40],rax
  40ef5a:	mov    eax,DWORD PTR [rbp-0x2c]
  40ef5d:	test   eax,eax
  40ef5f:	jne    40ebbd <_start@@Base+0x892d>
  40ef65:	mov    rax,QWORD PTR [rbp-0x38]
  40ef69:	mov    eax,DWORD PTR [rax+0x20]
  40ef6c:	test   eax,eax
  40ef6e:	jne    40efa6 <_start@@Base+0x8d16>
  40ef70:	mov    rax,QWORD PTR [rbp-0x38]
  40ef74:	mov    rax,QWORD PTR [rax]
  40ef77:	mov    rdi,rax
  40ef7a:	call   41f850 <flatcc_builder_end_table@@Base>
  40ef7f:	mov    edx,eax
  40ef81:	mov    rax,QWORD PTR [rbp-0x50]
  40ef85:	mov    DWORD PTR [rax],edx
  40ef87:	mov    rax,QWORD PTR [rbp-0x50]
  40ef8b:	mov    eax,DWORD PTR [rax]
  40ef8d:	test   eax,eax
  40ef8f:	je     40efa9 <_start@@Base+0x8d19>
  40ef91:	mov    rax,QWORD PTR [rbp-0x40]
  40ef95:	jmp    40efc3 <_start@@Base+0x8d33>
  40ef97:	nop
  40ef98:	jmp    40efaa <_start@@Base+0x8d1a>
  40ef9a:	nop
  40ef9b:	jmp    40efaa <_start@@Base+0x8d1a>
  40ef9d:	nop
  40ef9e:	jmp    40efaa <_start@@Base+0x8d1a>
  40efa0:	nop
  40efa1:	jmp    40efaa <_start@@Base+0x8d1a>
  40efa3:	nop
  40efa4:	jmp    40efaa <_start@@Base+0x8d1a>
  40efa6:	nop
  40efa7:	jmp    40efaa <_start@@Base+0x8d1a>
  40efa9:	nop
  40efaa:	mov    rdx,QWORD PTR [rbp-0x48]
  40efae:	mov    rsi,QWORD PTR [rbp-0x40]
  40efb2:	mov    rax,QWORD PTR [rbp-0x38]
  40efb6:	mov    ecx,0x21
  40efbb:	mov    rdi,rax
  40efbe:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40efc3:	mov    rdi,QWORD PTR [rbp-0x8]
  40efc7:	xor    rdi,QWORD PTR fs:0x28
  40efd0:	je     40efd7 <_start@@Base+0x8d47>
  40efd2:	call   4061a0 <__stack_chk_fail@plt>
  40efd7:	leave  
  40efd8:	ret    
  40efd9:	endbr64 
  40efdd:	push   rbp
  40efde:	mov    rbp,rsp
  40efe1:	sub    rsp,0x50
  40efe5:	mov    QWORD PTR [rbp-0x38],rdi
  40efe9:	mov    QWORD PTR [rbp-0x40],rsi
  40efed:	mov    QWORD PTR [rbp-0x48],rdx
  40eff1:	mov    QWORD PTR [rbp-0x50],rcx
  40eff5:	mov    rax,QWORD PTR fs:0x28
  40effe:	mov    QWORD PTR [rbp-0x8],rax
  40f002:	xor    eax,eax
  40f004:	mov    rax,QWORD PTR [rbp-0x50]
  40f008:	mov    DWORD PTR [rax],0x0
  40f00e:	mov    rax,QWORD PTR [rbp-0x38]
  40f012:	mov    rax,QWORD PTR [rax]
  40f015:	mov    esi,0x3
  40f01a:	mov    rdi,rax
  40f01d:	call   41ed41 <flatcc_builder_start_table@@Base>
  40f022:	test   eax,eax
  40f024:	jne    40f384 <_start@@Base+0x90f4>
  40f02a:	lea    rcx,[rbp-0x28]
  40f02e:	mov    rdx,QWORD PTR [rbp-0x48]
  40f032:	mov    rsi,QWORD PTR [rbp-0x40]
  40f036:	mov    rax,QWORD PTR [rbp-0x38]
  40f03a:	mov    rdi,rax
  40f03d:	call   406977 <_start@@Base+0x6e7>
  40f042:	mov    QWORD PTR [rbp-0x40],rax
  40f046:	jmp    40f347 <_start@@Base+0x90b7>
  40f04b:	mov    rdx,QWORD PTR [rbp-0x48]
  40f04f:	mov    rcx,QWORD PTR [rbp-0x40]
  40f053:	mov    rax,QWORD PTR [rbp-0x38]
  40f057:	mov    rsi,rcx
  40f05a:	mov    rdi,rax
  40f05d:	call   4066e9 <_start@@Base+0x459>
  40f062:	mov    QWORD PTR [rbp-0x40],rax
  40f066:	mov    rdx,QWORD PTR [rbp-0x48]
  40f06a:	mov    rax,QWORD PTR [rbp-0x40]
  40f06e:	mov    rsi,rdx
  40f071:	mov    rdi,rax
  40f074:	call   406876 <_start@@Base+0x5e6>
  40f079:	mov    QWORD PTR [rbp-0x20],rax
  40f07d:	movabs rax,0x6e6573746563ffff
  40f087:	cmp    QWORD PTR [rbp-0x20],rax
  40f08b:	ja     40f182 <_start@@Base+0x8ef2>
  40f091:	movabs rax,0xffffffff00000000
  40f09b:	and    rax,QWORD PTR [rbp-0x20]
  40f09f:	mov    rdx,rax
  40f0a2:	movabs rax,0x6461746100000000
  40f0ac:	cmp    rdx,rax
  40f0af:	jne    40f162 <_start@@Base+0x8ed2>
  40f0b5:	mov    rax,QWORD PTR [rbp-0x40]
  40f0b9:	mov    QWORD PTR [rbp-0x18],rax
  40f0bd:	mov    rdx,QWORD PTR [rbp-0x48]
  40f0c1:	mov    rsi,QWORD PTR [rbp-0x18]
  40f0c5:	mov    rax,QWORD PTR [rbp-0x38]
  40f0c9:	mov    ecx,0x4
  40f0ce:	mov    rdi,rax
  40f0d1:	call   406d6d <_start@@Base+0xadd>
  40f0d6:	mov    QWORD PTR [rbp-0x40],rax
  40f0da:	mov    rax,QWORD PTR [rbp-0x18]
  40f0de:	cmp    rax,QWORD PTR [rbp-0x40]
  40f0e2:	je     40f142 <_start@@Base+0x8eb2>
  40f0e4:	lea    rcx,[rbp-0x24]
  40f0e8:	mov    rdx,QWORD PTR [rbp-0x48]
  40f0ec:	mov    rsi,QWORD PTR [rbp-0x40]
  40f0f0:	mov    rax,QWORD PTR [rbp-0x38]
  40f0f4:	mov    r8d,0x0
  40f0fa:	mov    rdi,rax
  40f0fd:	call   429518 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40f102:	mov    QWORD PTR [rbp-0x40],rax
  40f106:	mov    eax,DWORD PTR [rbp-0x24]
  40f109:	test   eax,eax
  40f10b:	je     40f387 <_start@@Base+0x90f7>
  40f111:	mov    rax,QWORD PTR [rbp-0x38]
  40f115:	mov    rax,QWORD PTR [rax]
  40f118:	mov    esi,0x0
  40f11d:	mov    rdi,rax
  40f120:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  40f125:	mov    QWORD PTR [rbp-0x10],rax
  40f129:	cmp    QWORD PTR [rbp-0x10],0x0
  40f12e:	je     40f387 <_start@@Base+0x90f7>
  40f134:	mov    edx,DWORD PTR [rbp-0x24]
  40f137:	mov    rax,QWORD PTR [rbp-0x10]
  40f13b:	mov    DWORD PTR [rax],edx
  40f13d:	jmp    40f32b <_start@@Base+0x909b>
  40f142:	mov    rdx,QWORD PTR [rbp-0x48]
  40f146:	mov    rcx,QWORD PTR [rbp-0x40]
  40f14a:	mov    rax,QWORD PTR [rbp-0x38]
  40f14e:	mov    rsi,rcx
  40f151:	mov    rdi,rax
  40f154:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40f159:	mov    QWORD PTR [rbp-0x40],rax
  40f15d:	jmp    40f32b <_start@@Base+0x909b>
  40f162:	mov    rdx,QWORD PTR [rbp-0x48]
  40f166:	mov    rcx,QWORD PTR [rbp-0x40]
  40f16a:	mov    rax,QWORD PTR [rbp-0x38]
  40f16e:	mov    rsi,rcx
  40f171:	mov    rdi,rax
  40f174:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40f179:	mov    QWORD PTR [rbp-0x40],rax
  40f17d:	jmp    40f32b <_start@@Base+0x909b>
  40f182:	mov    rax,QWORD PTR [rbp-0x20]
  40f186:	mov    al,0x0
  40f188:	mov    rdx,rax
  40f18b:	movabs rax,0x75726c6461746100
  40f195:	cmp    rdx,rax
  40f198:	jne    40f24b <_start@@Base+0x8fbb>
  40f19e:	mov    rax,QWORD PTR [rbp-0x40]
  40f1a2:	mov    QWORD PTR [rbp-0x18],rax
  40f1a6:	mov    rdx,QWORD PTR [rbp-0x48]
  40f1aa:	mov    rsi,QWORD PTR [rbp-0x18]
  40f1ae:	mov    rax,QWORD PTR [rbp-0x38]
  40f1b2:	mov    ecx,0x7
  40f1b7:	mov    rdi,rax
  40f1ba:	call   406d6d <_start@@Base+0xadd>
  40f1bf:	mov    QWORD PTR [rbp-0x40],rax
  40f1c3:	mov    rax,QWORD PTR [rbp-0x18]
  40f1c7:	cmp    rax,QWORD PTR [rbp-0x40]
  40f1cb:	je     40f22b <_start@@Base+0x8f9b>
  40f1cd:	lea    rcx,[rbp-0x24]
  40f1d1:	mov    rdx,QWORD PTR [rbp-0x48]
  40f1d5:	mov    rsi,QWORD PTR [rbp-0x40]
  40f1d9:	mov    rax,QWORD PTR [rbp-0x38]
  40f1dd:	mov    r8d,0x1
  40f1e3:	mov    rdi,rax
  40f1e6:	call   429518 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40f1eb:	mov    QWORD PTR [rbp-0x40],rax
  40f1ef:	mov    eax,DWORD PTR [rbp-0x24]
  40f1f2:	test   eax,eax
  40f1f4:	je     40f38a <_start@@Base+0x90fa>
  40f1fa:	mov    rax,QWORD PTR [rbp-0x38]
  40f1fe:	mov    rax,QWORD PTR [rax]
  40f201:	mov    esi,0x1
  40f206:	mov    rdi,rax
  40f209:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  40f20e:	mov    QWORD PTR [rbp-0x10],rax
  40f212:	cmp    QWORD PTR [rbp-0x10],0x0
  40f217:	je     40f38a <_start@@Base+0x90fa>
  40f21d:	mov    edx,DWORD PTR [rbp-0x24]
  40f220:	mov    rax,QWORD PTR [rbp-0x10]
  40f224:	mov    DWORD PTR [rax],edx
  40f226:	jmp    40f32b <_start@@Base+0x909b>
  40f22b:	mov    rdx,QWORD PTR [rbp-0x48]
  40f22f:	mov    rcx,QWORD PTR [rbp-0x40]
  40f233:	mov    rax,QWORD PTR [rbp-0x38]
  40f237:	mov    rsi,rcx
  40f23a:	mov    rdi,rax
  40f23d:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40f242:	mov    QWORD PTR [rbp-0x40],rax
  40f246:	jmp    40f32b <_start@@Base+0x909b>
  40f24b:	mov    rax,QWORD PTR [rbp-0x20]
  40f24f:	mov    ax,0x0
  40f253:	mov    rdx,rax
  40f256:	movabs rax,0x6e65737465640000
  40f260:	cmp    rdx,rax
  40f263:	jne    40f310 <_start@@Base+0x9080>
  40f269:	mov    rax,QWORD PTR [rbp-0x40]
  40f26d:	mov    QWORD PTR [rbp-0x18],rax
  40f271:	mov    rdx,QWORD PTR [rbp-0x48]
  40f275:	mov    rsi,QWORD PTR [rbp-0x18]
  40f279:	mov    rax,QWORD PTR [rbp-0x38]
  40f27d:	mov    ecx,0x6
  40f282:	mov    rdi,rax
  40f285:	call   406d6d <_start@@Base+0xadd>
  40f28a:	mov    QWORD PTR [rbp-0x40],rax
  40f28e:	mov    rax,QWORD PTR [rbp-0x18]
  40f292:	cmp    rax,QWORD PTR [rbp-0x40]
  40f296:	je     40f2f3 <_start@@Base+0x9063>
  40f298:	lea    rcx,[rbp-0x24]
  40f29c:	mov    rdx,QWORD PTR [rbp-0x48]
  40f2a0:	mov    rsi,QWORD PTR [rbp-0x40]
  40f2a4:	mov    rax,QWORD PTR [rbp-0x38]
  40f2a8:	mov    r8d,0x0
  40f2ae:	mov    rdi,rax
  40f2b1:	call   429518 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40f2b6:	mov    QWORD PTR [rbp-0x40],rax
  40f2ba:	mov    eax,DWORD PTR [rbp-0x24]
  40f2bd:	test   eax,eax
  40f2bf:	je     40f38d <_start@@Base+0x90fd>
  40f2c5:	mov    rax,QWORD PTR [rbp-0x38]
  40f2c9:	mov    rax,QWORD PTR [rax]
  40f2cc:	mov    esi,0x2
  40f2d1:	mov    rdi,rax
  40f2d4:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  40f2d9:	mov    QWORD PTR [rbp-0x10],rax
  40f2dd:	cmp    QWORD PTR [rbp-0x10],0x0
  40f2e2:	je     40f38d <_start@@Base+0x90fd>
  40f2e8:	mov    edx,DWORD PTR [rbp-0x24]
  40f2eb:	mov    rax,QWORD PTR [rbp-0x10]
  40f2ef:	mov    DWORD PTR [rax],edx
  40f2f1:	jmp    40f32b <_start@@Base+0x909b>
  40f2f3:	mov    rdx,QWORD PTR [rbp-0x48]
  40f2f7:	mov    rcx,QWORD PTR [rbp-0x40]
  40f2fb:	mov    rax,QWORD PTR [rbp-0x38]
  40f2ff:	mov    rsi,rcx
  40f302:	mov    rdi,rax
  40f305:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40f30a:	mov    QWORD PTR [rbp-0x40],rax
  40f30e:	jmp    40f32b <_start@@Base+0x909b>
  40f310:	mov    rdx,QWORD PTR [rbp-0x48]
  40f314:	mov    rcx,QWORD PTR [rbp-0x40]
  40f318:	mov    rax,QWORD PTR [rbp-0x38]
  40f31c:	mov    rsi,rcx
  40f31f:	mov    rdi,rax
  40f322:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40f327:	mov    QWORD PTR [rbp-0x40],rax
  40f32b:	lea    rcx,[rbp-0x28]
  40f32f:	mov    rdx,QWORD PTR [rbp-0x48]
  40f333:	mov    rsi,QWORD PTR [rbp-0x40]
  40f337:	mov    rax,QWORD PTR [rbp-0x38]
  40f33b:	mov    rdi,rax
  40f33e:	call   406a34 <_start@@Base+0x7a4>
  40f343:	mov    QWORD PTR [rbp-0x40],rax
  40f347:	mov    eax,DWORD PTR [rbp-0x28]
  40f34a:	test   eax,eax
  40f34c:	jne    40f04b <_start@@Base+0x8dbb>
  40f352:	mov    rax,QWORD PTR [rbp-0x38]
  40f356:	mov    eax,DWORD PTR [rax+0x20]
  40f359:	test   eax,eax
  40f35b:	jne    40f390 <_start@@Base+0x9100>
  40f35d:	mov    rax,QWORD PTR [rbp-0x38]
  40f361:	mov    rax,QWORD PTR [rax]
  40f364:	mov    rdi,rax
  40f367:	call   41f850 <flatcc_builder_end_table@@Base>
  40f36c:	mov    edx,eax
  40f36e:	mov    rax,QWORD PTR [rbp-0x50]
  40f372:	mov    DWORD PTR [rax],edx
  40f374:	mov    rax,QWORD PTR [rbp-0x50]
  40f378:	mov    eax,DWORD PTR [rax]
  40f37a:	test   eax,eax
  40f37c:	je     40f393 <_start@@Base+0x9103>
  40f37e:	mov    rax,QWORD PTR [rbp-0x40]
  40f382:	jmp    40f3ad <_start@@Base+0x911d>
  40f384:	nop
  40f385:	jmp    40f394 <_start@@Base+0x9104>
  40f387:	nop
  40f388:	jmp    40f394 <_start@@Base+0x9104>
  40f38a:	nop
  40f38b:	jmp    40f394 <_start@@Base+0x9104>
  40f38d:	nop
  40f38e:	jmp    40f394 <_start@@Base+0x9104>
  40f390:	nop
  40f391:	jmp    40f394 <_start@@Base+0x9104>
  40f393:	nop
  40f394:	mov    rdx,QWORD PTR [rbp-0x48]
  40f398:	mov    rsi,QWORD PTR [rbp-0x40]
  40f39c:	mov    rax,QWORD PTR [rbp-0x38]
  40f3a0:	mov    ecx,0x21
  40f3a5:	mov    rdi,rax
  40f3a8:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  40f3ad:	mov    rdi,QWORD PTR [rbp-0x8]
  40f3b1:	xor    rdi,QWORD PTR fs:0x28
  40f3ba:	je     40f3c1 <_start@@Base+0x9131>
  40f3bc:	call   4061a0 <__stack_chk_fail@plt>
  40f3c1:	leave  
  40f3c2:	ret    
  40f3c3:	endbr64 
  40f3c7:	push   rbp
  40f3c8:	mov    rbp,rsp
  40f3cb:	sub    rsp,0x60
  40f3cf:	mov    QWORD PTR [rbp-0x48],rdi
  40f3d3:	mov    QWORD PTR [rbp-0x50],rsi
  40f3d7:	mov    QWORD PTR [rbp-0x58],rdx
  40f3db:	mov    QWORD PTR [rbp-0x60],rcx
  40f3df:	mov    rax,QWORD PTR fs:0x28
  40f3e8:	mov    QWORD PTR [rbp-0x8],rax
  40f3ec:	xor    eax,eax
  40f3ee:	mov    rax,QWORD PTR [rbp-0x60]
  40f3f2:	mov    DWORD PTR [rax],0x0
  40f3f8:	mov    rax,QWORD PTR [rbp-0x48]
  40f3fc:	mov    rax,QWORD PTR [rax]
  40f3ff:	mov    esi,0x24
  40f404:	mov    rdi,rax
  40f407:	call   41ed41 <flatcc_builder_start_table@@Base>
  40f40c:	test   eax,eax
  40f40e:	jne    412b65 <_start@@Base+0xc8d5>
  40f414:	lea    rcx,[rbp-0x38]
  40f418:	mov    rdx,QWORD PTR [rbp-0x58]
  40f41c:	mov    rsi,QWORD PTR [rbp-0x50]
  40f420:	mov    rax,QWORD PTR [rbp-0x48]
  40f424:	mov    r8,rcx
  40f427:	mov    ecx,0x1
  40f42c:	mov    rdi,rax
  40f42f:	call   42995c <flatcc_json_parser_prepare_unions@@Base>
  40f434:	cmp    QWORD PTR [rbp-0x58],rax
  40f438:	je     412b6b <_start@@Base+0xc8db>
  40f43e:	lea    rcx,[rbp-0x40]
  40f442:	mov    rdx,QWORD PTR [rbp-0x58]
  40f446:	mov    rsi,QWORD PTR [rbp-0x50]
  40f44a:	mov    rax,QWORD PTR [rbp-0x48]
  40f44e:	mov    rdi,rax
  40f451:	call   406977 <_start@@Base+0x6e7>
  40f456:	mov    QWORD PTR [rbp-0x50],rax
  40f45a:	jmp    412ac7 <_start@@Base+0xc837>
  40f45f:	mov    rdx,QWORD PTR [rbp-0x58]
  40f463:	mov    rcx,QWORD PTR [rbp-0x50]
  40f467:	mov    rax,QWORD PTR [rbp-0x48]
  40f46b:	mov    rsi,rcx
  40f46e:	mov    rdi,rax
  40f471:	call   4066e9 <_start@@Base+0x459>
  40f476:	mov    QWORD PTR [rbp-0x50],rax
  40f47a:	mov    rdx,QWORD PTR [rbp-0x58]
  40f47e:	mov    rax,QWORD PTR [rbp-0x50]
  40f482:	mov    rsi,rdx
  40f485:	mov    rdi,rax
  40f488:	call   406876 <_start@@Base+0x5e6>
  40f48d:	mov    QWORD PTR [rbp-0x28],rax
  40f491:	movabs rax,0x7465737461727260
  40f49b:	cmp    QWORD PTR [rbp-0x28],rax
  40f49f:	ja     41060a <_start@@Base+0xa37a>
  40f4a5:	movabs rax,0x6e616d64ffffffff
  40f4af:	cmp    QWORD PTR [rbp-0x28],rax
  40f4b3:	ja     40fe5a <_start@@Base+0x9bca>
  40f4b9:	movabs rax,0x666c6577ffffffff
  40f4c3:	cmp    QWORD PTR [rbp-0x28],rax
  40f4c7:	ja     40f704 <_start@@Base+0x9474>
  40f4cd:	mov    rax,QWORD PTR [rbp-0x28]
  40f4d1:	and    rax,0xffffffffff000000
  40f4d7:	mov    rdx,rax
  40f4da:	movabs rax,0x656e656d79000000
  40f4e4:	cmp    rdx,rax
  40f4e7:	jne    40f594 <_start@@Base+0x9304>
  40f4ed:	mov    rax,QWORD PTR [rbp-0x50]
  40f4f1:	mov    QWORD PTR [rbp-0x20],rax
  40f4f5:	mov    rdx,QWORD PTR [rbp-0x58]
  40f4f9:	mov    rsi,QWORD PTR [rbp-0x20]
  40f4fd:	mov    rax,QWORD PTR [rbp-0x48]
  40f501:	mov    ecx,0x5
  40f506:	mov    rdi,rax
  40f509:	call   406d6d <_start@@Base+0xadd>
  40f50e:	mov    QWORD PTR [rbp-0x50],rax
  40f512:	mov    rax,QWORD PTR [rbp-0x20]
  40f516:	cmp    rax,QWORD PTR [rbp-0x50]
  40f51a:	je     40f574 <_start@@Base+0x92e4>
  40f51c:	lea    rcx,[rbp-0x3c]
  40f520:	mov    rdx,QWORD PTR [rbp-0x58]
  40f524:	mov    rsi,QWORD PTR [rbp-0x50]
  40f528:	mov    rax,QWORD PTR [rbp-0x48]
  40f52c:	mov    rdi,rax
  40f52f:	call   40f3c3 <_start@@Base+0x9133>
  40f534:	mov    QWORD PTR [rbp-0x50],rax
  40f538:	mov    eax,DWORD PTR [rbp-0x3c]
  40f53b:	test   eax,eax
  40f53d:	je     412b71 <_start@@Base+0xc8e1>
  40f543:	mov    rax,QWORD PTR [rbp-0x48]
  40f547:	mov    rax,QWORD PTR [rax]
  40f54a:	mov    esi,0xc
  40f54f:	mov    rdi,rax
  40f552:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  40f557:	mov    QWORD PTR [rbp-0x18],rax
  40f55b:	cmp    QWORD PTR [rbp-0x18],0x0
  40f560:	je     412b71 <_start@@Base+0xc8e1>
  40f566:	mov    edx,DWORD PTR [rbp-0x3c]
  40f569:	mov    rax,QWORD PTR [rbp-0x18]
  40f56d:	mov    DWORD PTR [rax],edx
  40f56f:	jmp    412aab <_start@@Base+0xc81b>
  40f574:	mov    rdx,QWORD PTR [rbp-0x58]
  40f578:	mov    rcx,QWORD PTR [rbp-0x50]
  40f57c:	mov    rax,QWORD PTR [rbp-0x48]
  40f580:	mov    rsi,rcx
  40f583:	mov    rdi,rax
  40f586:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40f58b:	mov    QWORD PTR [rbp-0x50],rax
  40f58f:	jmp    412aab <_start@@Base+0xc81b>
  40f594:	mov    rax,QWORD PTR [rbp-0x28]
  40f598:	and    rax,0xffffffffff000000
  40f59e:	mov    rdx,rax
  40f5a1:	movabs rax,0x636f6c6f72000000
  40f5ab:	cmp    rdx,rax
  40f5ae:	jne    40f6e4 <_start@@Base+0x9454>
  40f5b4:	mov    rax,QWORD PTR [rbp-0x50]
  40f5b8:	mov    QWORD PTR [rbp-0x20],rax
  40f5bc:	mov    rdx,QWORD PTR [rbp-0x58]
  40f5c0:	mov    rsi,QWORD PTR [rbp-0x20]
  40f5c4:	mov    rax,QWORD PTR [rbp-0x48]
  40f5c8:	mov    ecx,0x5
  40f5cd:	mov    rdi,rax
  40f5d0:	call   406d6d <_start@@Base+0xadd>
  40f5d5:	mov    QWORD PTR [rbp-0x50],rax
  40f5d9:	mov    rax,QWORD PTR [rbp-0x20]
  40f5dd:	cmp    rax,QWORD PTR [rbp-0x50]
  40f5e1:	je     40f6c4 <_start@@Base+0x9434>
  40f5e7:	mov    BYTE PTR [rbp-0x30],0x0
  40f5eb:	mov    rax,QWORD PTR [rbp-0x50]
  40f5ef:	mov    QWORD PTR [rbp-0x20],rax
  40f5f3:	lea    rcx,[rbp-0x30]
  40f5f7:	mov    rdx,QWORD PTR [rbp-0x58]
  40f5fb:	mov    rsi,QWORD PTR [rbp-0x20]
  40f5ff:	mov    rax,QWORD PTR [rbp-0x48]
  40f603:	mov    rdi,rax
  40f606:	call   4079bb <_start@@Base+0x172b>
  40f60b:	mov    QWORD PTR [rbp-0x50],rax
  40f60f:	mov    rax,QWORD PTR [rbp-0x20]
  40f613:	cmp    rax,QWORD PTR [rbp-0x50]
  40f617:	jne    40f663 <_start@@Base+0x93d3>
  40f619:	mov    rax,QWORD PTR [rbp-0x50]
  40f61d:	mov    QWORD PTR [rbp-0x20],rax
  40f621:	lea    rcx,[rbp-0x30]
  40f625:	mov    rdx,QWORD PTR [rbp-0x58]
  40f629:	mov    rsi,QWORD PTR [rbp-0x20]
  40f62d:	mov    rax,QWORD PTR [rbp-0x48]
  40f631:	mov    r8,rcx
  40f634:	lea    rcx,[rip+0x37e85]        # 4474c0 <__data_start@@Base+0x400>
  40f63b:	mov    rdi,rax
  40f63e:	call   408503 <_start@@Base+0x2273>
  40f643:	mov    QWORD PTR [rbp-0x50],rax
  40f647:	mov    rax,QWORD PTR [rbp-0x50]
  40f64b:	cmp    rax,QWORD PTR [rbp-0x20]
  40f64f:	je     412b77 <_start@@Base+0xc8e7>
  40f655:	mov    rax,QWORD PTR [rbp-0x50]
  40f659:	cmp    rax,QWORD PTR [rbp-0x58]
  40f65d:	je     412b77 <_start@@Base+0xc8e7>
  40f663:	movzx  eax,BYTE PTR [rbp-0x30]
  40f667:	cmp    al,0x8
  40f669:	jne    40f67d <_start@@Base+0x93ed>
  40f66b:	mov    rax,QWORD PTR [rbp-0x48]
  40f66f:	mov    eax,DWORD PTR [rax+0x10]
  40f672:	and    eax,0x2
  40f675:	test   eax,eax
  40f677:	je     412aab <_start@@Base+0xc81b>
  40f67d:	mov    rax,QWORD PTR [rbp-0x48]
  40f681:	mov    rax,QWORD PTR [rax]
  40f684:	mov    ecx,0x1
  40f689:	mov    edx,0x1
  40f68e:	mov    esi,0x6
  40f693:	mov    rdi,rax
  40f696:	call   420ef1 <flatcc_builder_table_add@@Base>
  40f69b:	mov    QWORD PTR [rbp-0x10],rax
  40f69f:	cmp    QWORD PTR [rbp-0x10],0x0
  40f6a4:	je     412b7d <_start@@Base+0xc8ed>
  40f6aa:	movzx  eax,BYTE PTR [rbp-0x30]
  40f6ae:	movsx  edx,al
  40f6b1:	mov    rax,QWORD PTR [rbp-0x10]
  40f6b5:	mov    esi,edx
  40f6b7:	mov    rdi,rax
  40f6ba:	call   406459 <_start@@Base+0x1c9>
  40f6bf:	jmp    412aab <_start@@Base+0xc81b>
  40f6c4:	mov    rdx,QWORD PTR [rbp-0x58]
  40f6c8:	mov    rcx,QWORD PTR [rbp-0x50]
  40f6cc:	mov    rax,QWORD PTR [rbp-0x48]
  40f6d0:	mov    rsi,rcx
  40f6d3:	mov    rdi,rax
  40f6d6:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40f6db:	mov    QWORD PTR [rbp-0x50],rax
  40f6df:	jmp    412aab <_start@@Base+0xc81b>
  40f6e4:	mov    rdx,QWORD PTR [rbp-0x58]
  40f6e8:	mov    rcx,QWORD PTR [rbp-0x50]
  40f6ec:	mov    rax,QWORD PTR [rbp-0x48]
  40f6f0:	mov    rsi,rcx
  40f6f3:	mov    rdi,rax
  40f6f6:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40f6fb:	mov    QWORD PTR [rbp-0x50],rax
  40f6ff:	jmp    412aab <_start@@Base+0xc81b>
  40f704:	movabs rax,0x686fffffffffffff
  40f70e:	cmp    QWORD PTR [rbp-0x28],rax
  40f712:	ja     40f91f <_start@@Base+0x968f>
  40f718:	movabs rax,0xffffffff00000000
  40f722:	and    rax,QWORD PTR [rbp-0x28]
  40f726:	mov    rdx,rax
  40f729:	movabs rax,0x666c657800000000
  40f733:	cmp    rdx,rax
  40f736:	jne    40f8ff <_start@@Base+0x966f>
  40f73c:	mov    rax,QWORD PTR [rbp-0x50]
  40f740:	mov    QWORD PTR [rbp-0x20],rax
  40f744:	mov    rdx,QWORD PTR [rbp-0x58]
  40f748:	mov    rsi,QWORD PTR [rbp-0x20]
  40f74c:	mov    rax,QWORD PTR [rbp-0x48]
  40f750:	mov    ecx,0x4
  40f755:	mov    rdi,rax
  40f758:	call   406d6d <_start@@Base+0xadd>
  40f75d:	mov    QWORD PTR [rbp-0x50],rax
  40f761:	mov    rax,QWORD PTR [rbp-0x20]
  40f765:	cmp    rax,QWORD PTR [rbp-0x50]
  40f769:	je     40f8df <_start@@Base+0x964f>
  40f76f:	mov    rax,QWORD PTR [rbp-0x48]
  40f773:	mov    rax,QWORD PTR [rax]
  40f776:	mov    ecx,0xffffffff
  40f77b:	mov    edx,0x1
  40f780:	mov    esi,0x1
  40f785:	mov    rdi,rax
  40f788:	call   41eaf3 <flatcc_builder_start_vector@@Base>
  40f78d:	test   eax,eax
  40f78f:	jne    412b83 <_start@@Base+0xc8f3>
  40f795:	lea    rcx,[rbp-0x40]
  40f799:	mov    rdx,QWORD PTR [rbp-0x58]
  40f79d:	mov    rsi,QWORD PTR [rbp-0x50]
  40f7a1:	mov    rax,QWORD PTR [rbp-0x48]
  40f7a5:	mov    rdi,rax
  40f7a8:	call   406b72 <_start@@Base+0x8e2>
  40f7ad:	mov    QWORD PTR [rbp-0x50],rax
  40f7b1:	jmp    40f886 <_start@@Base+0x95f6>
  40f7b6:	mov    BYTE PTR [rbp-0x30],0x0
  40f7ba:	mov    rax,QWORD PTR [rbp-0x48]
  40f7be:	mov    rax,QWORD PTR [rax]
  40f7c1:	mov    esi,0x1
  40f7c6:	mov    rdi,rax
  40f7c9:	call   41e3a3 <flatcc_builder_extend_vector@@Base>
  40f7ce:	mov    QWORD PTR [rbp-0x10],rax
  40f7d2:	cmp    QWORD PTR [rbp-0x10],0x0
  40f7d7:	je     412b89 <_start@@Base+0xc8f9>
  40f7dd:	mov    rax,QWORD PTR [rbp-0x50]
  40f7e1:	mov    QWORD PTR [rbp-0x20],rax
  40f7e5:	lea    rcx,[rbp-0x30]
  40f7e9:	mov    rdx,QWORD PTR [rbp-0x58]
  40f7ed:	mov    rsi,QWORD PTR [rbp-0x20]
  40f7f1:	mov    rax,QWORD PTR [rbp-0x48]
  40f7f5:	mov    rdi,rax
  40f7f8:	call   4076a6 <_start@@Base+0x1416>
  40f7fd:	mov    QWORD PTR [rbp-0x50],rax
  40f801:	mov    rax,QWORD PTR [rbp-0x20]
  40f805:	cmp    rax,QWORD PTR [rbp-0x50]
  40f809:	jne    40f855 <_start@@Base+0x95c5>
  40f80b:	mov    rax,QWORD PTR [rbp-0x50]
  40f80f:	mov    QWORD PTR [rbp-0x20],rax
  40f813:	lea    rcx,[rbp-0x30]
  40f817:	mov    rdx,QWORD PTR [rbp-0x58]
  40f81b:	mov    rsi,QWORD PTR [rbp-0x20]
  40f81f:	mov    rax,QWORD PTR [rbp-0x48]
  40f823:	mov    r8,rcx
  40f826:	lea    rcx,[rip+0x37cb3]        # 4474e0 <__data_start@@Base+0x420>
  40f82d:	mov    rdi,rax
  40f830:	call   407f88 <_start@@Base+0x1cf8>
  40f835:	mov    QWORD PTR [rbp-0x50],rax
  40f839:	mov    rax,QWORD PTR [rbp-0x50]
  40f83d:	cmp    rax,QWORD PTR [rbp-0x20]
  40f841:	je     412b8f <_start@@Base+0xc8ff>
  40f847:	mov    rax,QWORD PTR [rbp-0x50]
  40f84b:	cmp    rax,QWORD PTR [rbp-0x58]
  40f84f:	je     412b8f <_start@@Base+0xc8ff>
  40f855:	movzx  eax,BYTE PTR [rbp-0x30]
  40f859:	movzx  edx,al
  40f85c:	mov    rax,QWORD PTR [rbp-0x10]
  40f860:	mov    esi,edx
  40f862:	mov    rdi,rax
  40f865:	call   406385 <_start@@Base+0xf5>
  40f86a:	lea    rcx,[rbp-0x40]
  40f86e:	mov    rdx,QWORD PTR [rbp-0x58]
  40f872:	mov    rsi,QWORD PTR [rbp-0x50]
  40f876:	mov    rax,QWORD PTR [rbp-0x48]
  40f87a:	mov    rdi,rax
  40f87d:	call   406c2f <_start@@Base+0x99f>
  40f882:	mov    QWORD PTR [rbp-0x50],rax
  40f886:	mov    eax,DWORD PTR [rbp-0x40]
  40f889:	test   eax,eax
  40f88b:	jne    40f7b6 <_start@@Base+0x9526>
  40f891:	mov    rax,QWORD PTR [rbp-0x48]
  40f895:	mov    rax,QWORD PTR [rax]
  40f898:	mov    rdi,rax
  40f89b:	call   41fce8 <flatcc_builder_end_vector@@Base>
  40f8a0:	mov    DWORD PTR [rbp-0x3c],eax
  40f8a3:	mov    eax,DWORD PTR [rbp-0x3c]
  40f8a6:	test   eax,eax
  40f8a8:	je     412b95 <_start@@Base+0xc905>
  40f8ae:	mov    rax,QWORD PTR [rbp-0x48]
  40f8b2:	mov    rax,QWORD PTR [rax]
  40f8b5:	mov    esi,0x1e
  40f8ba:	mov    rdi,rax
  40f8bd:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  40f8c2:	mov    QWORD PTR [rbp-0x18],rax
  40f8c6:	cmp    QWORD PTR [rbp-0x18],0x0
  40f8cb:	je     412b95 <_start@@Base+0xc905>
  40f8d1:	mov    edx,DWORD PTR [rbp-0x3c]
  40f8d4:	mov    rax,QWORD PTR [rbp-0x18]
  40f8d8:	mov    DWORD PTR [rax],edx
  40f8da:	jmp    412aab <_start@@Base+0xc81b>
  40f8df:	mov    rdx,QWORD PTR [rbp-0x58]
  40f8e3:	mov    rcx,QWORD PTR [rbp-0x50]
  40f8e7:	mov    rax,QWORD PTR [rbp-0x48]
  40f8eb:	mov    rsi,rcx
  40f8ee:	mov    rdi,rax
  40f8f1:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40f8f6:	mov    QWORD PTR [rbp-0x50],rax
  40f8fa:	jmp    412aab <_start@@Base+0xc81b>
  40f8ff:	mov    rdx,QWORD PTR [rbp-0x58]
  40f903:	mov    rcx,QWORD PTR [rbp-0x50]
  40f907:	mov    rax,QWORD PTR [rbp-0x48]
  40f90b:	mov    rsi,rcx
  40f90e:	mov    rdi,rax
  40f911:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40f916:	mov    QWORD PTR [rbp-0x50],rax
  40f91a:	jmp    412aab <_start@@Base+0xc81b>
  40f91f:	movabs rax,0x696e76656e746f71
  40f929:	cmp    QWORD PTR [rbp-0x28],rax
  40f92d:	ja     40faab <_start@@Base+0x981b>
  40f933:	movabs rax,0xffff000000000000
  40f93d:	and    rax,QWORD PTR [rbp-0x28]
  40f941:	mov    rdx,rax
  40f944:	movabs rax,0x6870000000000000
  40f94e:	cmp    rdx,rax
  40f951:	jne    40fa8b <_start@@Base+0x97fb>
  40f957:	mov    rax,QWORD PTR [rbp-0x50]
  40f95b:	mov    QWORD PTR [rbp-0x20],rax
  40f95f:	mov    rdx,QWORD PTR [rbp-0x58]
  40f963:	mov    rsi,QWORD PTR [rbp-0x20]
  40f967:	mov    rax,QWORD PTR [rbp-0x48]
  40f96b:	mov    ecx,0x2
  40f970:	mov    rdi,rax
  40f973:	call   406d6d <_start@@Base+0xadd>
  40f978:	mov    QWORD PTR [rbp-0x50],rax
  40f97c:	mov    rax,QWORD PTR [rbp-0x20]
  40f980:	cmp    rax,QWORD PTR [rbp-0x50]
  40f984:	je     40fa6b <_start@@Base+0x97db>
  40f98a:	mov    WORD PTR [rbp-0x30],0x0
  40f990:	mov    rax,QWORD PTR [rbp-0x50]
  40f994:	mov    QWORD PTR [rbp-0x20],rax
  40f998:	lea    rcx,[rbp-0x30]
  40f99c:	mov    rdx,QWORD PTR [rbp-0x58]
  40f9a0:	mov    rsi,QWORD PTR [rbp-0x20]
  40f9a4:	mov    rax,QWORD PTR [rbp-0x48]
  40f9a8:	mov    rdi,rax
  40f9ab:	call   4078f6 <_start@@Base+0x1666>
  40f9b0:	mov    QWORD PTR [rbp-0x50],rax
  40f9b4:	mov    rax,QWORD PTR [rbp-0x20]
  40f9b8:	cmp    rax,QWORD PTR [rbp-0x50]
  40f9bc:	jne    40fa08 <_start@@Base+0x9778>
  40f9be:	mov    rax,QWORD PTR [rbp-0x50]
  40f9c2:	mov    QWORD PTR [rbp-0x20],rax
  40f9c6:	lea    rcx,[rbp-0x30]
  40f9ca:	mov    rdx,QWORD PTR [rbp-0x58]
  40f9ce:	mov    rsi,QWORD PTR [rbp-0x20]
  40f9d2:	mov    rax,QWORD PTR [rbp-0x48]
  40f9d6:	mov    r8,rcx
  40f9d9:	lea    rcx,[rip+0x37b20]        # 447500 <__data_start@@Base+0x440>
  40f9e0:	mov    rdi,rax
  40f9e3:	call   4083a1 <_start@@Base+0x2111>
  40f9e8:	mov    QWORD PTR [rbp-0x50],rax
  40f9ec:	mov    rax,QWORD PTR [rbp-0x50]
  40f9f0:	cmp    rax,QWORD PTR [rbp-0x20]
  40f9f4:	je     412b9b <_start@@Base+0xc90b>
  40f9fa:	mov    rax,QWORD PTR [rbp-0x50]
  40f9fe:	cmp    rax,QWORD PTR [rbp-0x58]
  40fa02:	je     412b9b <_start@@Base+0xc90b>
  40fa08:	movzx  eax,WORD PTR [rbp-0x30]
  40fa0c:	cmp    ax,0x64
  40fa10:	jne    40fa24 <_start@@Base+0x9794>
  40fa12:	mov    rax,QWORD PTR [rbp-0x48]
  40fa16:	mov    eax,DWORD PTR [rax+0x10]
  40fa19:	and    eax,0x2
  40fa1c:	test   eax,eax
  40fa1e:	je     412aab <_start@@Base+0xc81b>
  40fa24:	mov    rax,QWORD PTR [rbp-0x48]
  40fa28:	mov    rax,QWORD PTR [rax]
  40fa2b:	mov    ecx,0x2
  40fa30:	mov    edx,0x2
  40fa35:	mov    esi,0x2
  40fa3a:	mov    rdi,rax
  40fa3d:	call   420ef1 <flatcc_builder_table_add@@Base>
  40fa42:	mov    QWORD PTR [rbp-0x10],rax
  40fa46:	cmp    QWORD PTR [rbp-0x10],0x0
  40fa4b:	je     412ba1 <_start@@Base+0xc911>
  40fa51:	movzx  eax,WORD PTR [rbp-0x30]
  40fa55:	movsx  edx,ax
  40fa58:	mov    rax,QWORD PTR [rbp-0x10]
  40fa5c:	mov    esi,edx
  40fa5e:	mov    rdi,rax
  40fa61:	call   40648e <_start@@Base+0x1fe>
  40fa66:	jmp    412aab <_start@@Base+0xc81b>
  40fa6b:	mov    rdx,QWORD PTR [rbp-0x58]
  40fa6f:	mov    rcx,QWORD PTR [rbp-0x50]
  40fa73:	mov    rax,QWORD PTR [rbp-0x48]
  40fa77:	mov    rsi,rcx
  40fa7a:	mov    rdi,rax
  40fa7d:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40fa82:	mov    QWORD PTR [rbp-0x50],rax
  40fa86:	jmp    412aab <_start@@Base+0xc81b>
  40fa8b:	mov    rdx,QWORD PTR [rbp-0x58]
  40fa8f:	mov    rcx,QWORD PTR [rbp-0x50]
  40fa93:	mov    rax,QWORD PTR [rbp-0x48]
  40fa97:	mov    rsi,rcx
  40fa9a:	mov    rdi,rax
  40fa9d:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40faa2:	mov    QWORD PTR [rbp-0x50],rax
  40faa6:	jmp    412aab <_start@@Base+0xc81b>
  40faab:	movabs rax,0x696e76656e746f72
  40fab5:	cmp    QWORD PTR [rbp-0x28],rax
  40fab9:	jne    40fce2 <_start@@Base+0x9a52>
  40fabf:	add    QWORD PTR [rbp-0x50],0x8
  40fac4:	mov    rdx,QWORD PTR [rbp-0x58]
  40fac8:	mov    rax,QWORD PTR [rbp-0x50]
  40facc:	mov    rsi,rdx
  40facf:	mov    rdi,rax
  40fad2:	call   406876 <_start@@Base+0x5e6>
  40fad7:	mov    QWORD PTR [rbp-0x28],rax
  40fadb:	movabs rax,0xff00000000000000
  40fae5:	and    rax,QWORD PTR [rbp-0x28]
  40fae9:	mov    rdx,rax
  40faec:	movabs rax,0x7900000000000000
  40faf6:	cmp    rdx,rax
  40faf9:	jne    40fcc2 <_start@@Base+0x9a32>
  40faff:	mov    rax,QWORD PTR [rbp-0x50]
  40fb03:	mov    QWORD PTR [rbp-0x20],rax
  40fb07:	mov    rdx,QWORD PTR [rbp-0x58]
  40fb0b:	mov    rsi,QWORD PTR [rbp-0x20]
  40fb0f:	mov    rax,QWORD PTR [rbp-0x48]
  40fb13:	mov    ecx,0x1
  40fb18:	mov    rdi,rax
  40fb1b:	call   406d6d <_start@@Base+0xadd>
  40fb20:	mov    QWORD PTR [rbp-0x50],rax
  40fb24:	mov    rax,QWORD PTR [rbp-0x20]
  40fb28:	cmp    rax,QWORD PTR [rbp-0x50]
  40fb2c:	je     40fca2 <_start@@Base+0x9a12>
  40fb32:	mov    rax,QWORD PTR [rbp-0x48]
  40fb36:	mov    rax,QWORD PTR [rax]
  40fb39:	mov    ecx,0xffffffff
  40fb3e:	mov    edx,0x1
  40fb43:	mov    esi,0x1
  40fb48:	mov    rdi,rax
  40fb4b:	call   41eaf3 <flatcc_builder_start_vector@@Base>
  40fb50:	test   eax,eax
  40fb52:	jne    412ba7 <_start@@Base+0xc917>
  40fb58:	lea    rcx,[rbp-0x40]
  40fb5c:	mov    rdx,QWORD PTR [rbp-0x58]
  40fb60:	mov    rsi,QWORD PTR [rbp-0x50]
  40fb64:	mov    rax,QWORD PTR [rbp-0x48]
  40fb68:	mov    rdi,rax
  40fb6b:	call   406b72 <_start@@Base+0x8e2>
  40fb70:	mov    QWORD PTR [rbp-0x50],rax
  40fb74:	jmp    40fc49 <_start@@Base+0x99b9>
  40fb79:	mov    BYTE PTR [rbp-0x30],0x0
  40fb7d:	mov    rax,QWORD PTR [rbp-0x48]
  40fb81:	mov    rax,QWORD PTR [rax]
  40fb84:	mov    esi,0x1
  40fb89:	mov    rdi,rax
  40fb8c:	call   41e3a3 <flatcc_builder_extend_vector@@Base>
  40fb91:	mov    QWORD PTR [rbp-0x10],rax
  40fb95:	cmp    QWORD PTR [rbp-0x10],0x0
  40fb9a:	je     412bad <_start@@Base+0xc91d>
  40fba0:	mov    rax,QWORD PTR [rbp-0x50]
  40fba4:	mov    QWORD PTR [rbp-0x20],rax
  40fba8:	lea    rcx,[rbp-0x30]
  40fbac:	mov    rdx,QWORD PTR [rbp-0x58]
  40fbb0:	mov    rsi,QWORD PTR [rbp-0x20]
  40fbb4:	mov    rax,QWORD PTR [rbp-0x48]
  40fbb8:	mov    rdi,rax
  40fbbb:	call   4076a6 <_start@@Base+0x1416>
  40fbc0:	mov    QWORD PTR [rbp-0x50],rax
  40fbc4:	mov    rax,QWORD PTR [rbp-0x20]
  40fbc8:	cmp    rax,QWORD PTR [rbp-0x50]
  40fbcc:	jne    40fc18 <_start@@Base+0x9988>
  40fbce:	mov    rax,QWORD PTR [rbp-0x50]
  40fbd2:	mov    QWORD PTR [rbp-0x20],rax
  40fbd6:	lea    rcx,[rbp-0x30]
  40fbda:	mov    rdx,QWORD PTR [rbp-0x58]
  40fbde:	mov    rsi,QWORD PTR [rbp-0x20]
  40fbe2:	mov    rax,QWORD PTR [rbp-0x48]
  40fbe6:	mov    r8,rcx
  40fbe9:	lea    rcx,[rip+0x37930]        # 447520 <__data_start@@Base+0x460>
  40fbf0:	mov    rdi,rax
  40fbf3:	call   407f88 <_start@@Base+0x1cf8>
  40fbf8:	mov    QWORD PTR [rbp-0x50],rax
  40fbfc:	mov    rax,QWORD PTR [rbp-0x50]
  40fc00:	cmp    rax,QWORD PTR [rbp-0x20]
  40fc04:	je     412bb3 <_start@@Base+0xc923>
  40fc0a:	mov    rax,QWORD PTR [rbp-0x50]
  40fc0e:	cmp    rax,QWORD PTR [rbp-0x58]
  40fc12:	je     412bb3 <_start@@Base+0xc923>
  40fc18:	movzx  eax,BYTE PTR [rbp-0x30]
  40fc1c:	movzx  edx,al
  40fc1f:	mov    rax,QWORD PTR [rbp-0x10]
  40fc23:	mov    esi,edx
  40fc25:	mov    rdi,rax
  40fc28:	call   406385 <_start@@Base+0xf5>
  40fc2d:	lea    rcx,[rbp-0x40]
  40fc31:	mov    rdx,QWORD PTR [rbp-0x58]
  40fc35:	mov    rsi,QWORD PTR [rbp-0x50]
  40fc39:	mov    rax,QWORD PTR [rbp-0x48]
  40fc3d:	mov    rdi,rax
  40fc40:	call   406c2f <_start@@Base+0x99f>
  40fc45:	mov    QWORD PTR [rbp-0x50],rax
  40fc49:	mov    eax,DWORD PTR [rbp-0x40]
  40fc4c:	test   eax,eax
  40fc4e:	jne    40fb79 <_start@@Base+0x98e9>
  40fc54:	mov    rax,QWORD PTR [rbp-0x48]
  40fc58:	mov    rax,QWORD PTR [rax]
  40fc5b:	mov    rdi,rax
  40fc5e:	call   41fce8 <flatcc_builder_end_vector@@Base>
  40fc63:	mov    DWORD PTR [rbp-0x3c],eax
  40fc66:	mov    eax,DWORD PTR [rbp-0x3c]
  40fc69:	test   eax,eax
  40fc6b:	je     412bb9 <_start@@Base+0xc929>
  40fc71:	mov    rax,QWORD PTR [rbp-0x48]
  40fc75:	mov    rax,QWORD PTR [rax]
  40fc78:	mov    esi,0x5
  40fc7d:	mov    rdi,rax
  40fc80:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  40fc85:	mov    QWORD PTR [rbp-0x18],rax
  40fc89:	cmp    QWORD PTR [rbp-0x18],0x0
  40fc8e:	je     412bb9 <_start@@Base+0xc929>
  40fc94:	mov    edx,DWORD PTR [rbp-0x3c]
  40fc97:	mov    rax,QWORD PTR [rbp-0x18]
  40fc9b:	mov    DWORD PTR [rax],edx
  40fc9d:	jmp    412aab <_start@@Base+0xc81b>
  40fca2:	mov    rdx,QWORD PTR [rbp-0x58]
  40fca6:	mov    rcx,QWORD PTR [rbp-0x50]
  40fcaa:	mov    rax,QWORD PTR [rbp-0x48]
  40fcae:	mov    rsi,rcx
  40fcb1:	mov    rdi,rax
  40fcb4:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40fcb9:	mov    QWORD PTR [rbp-0x50],rax
  40fcbd:	jmp    412aab <_start@@Base+0xc81b>
  40fcc2:	mov    rdx,QWORD PTR [rbp-0x58]
  40fcc6:	mov    rcx,QWORD PTR [rbp-0x50]
  40fcca:	mov    rax,QWORD PTR [rbp-0x48]
  40fcce:	mov    rsi,rcx
  40fcd1:	mov    rdi,rax
  40fcd4:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40fcd9:	mov    QWORD PTR [rbp-0x50],rax
  40fcdd:	jmp    412aab <_start@@Base+0xc81b>
  40fce2:	movabs rax,0xffffffff00000000
  40fcec:	and    rax,QWORD PTR [rbp-0x28]
  40fcf0:	mov    rdx,rax
  40fcf3:	movabs rax,0x6d616e6100000000
  40fcfd:	cmp    rdx,rax
  40fd00:	jne    40fe3a <_start@@Base+0x9baa>
  40fd06:	mov    rax,QWORD PTR [rbp-0x50]
  40fd0a:	mov    QWORD PTR [rbp-0x20],rax
  40fd0e:	mov    rdx,QWORD PTR [rbp-0x58]
  40fd12:	mov    rsi,QWORD PTR [rbp-0x20]
  40fd16:	mov    rax,QWORD PTR [rbp-0x48]
  40fd1a:	mov    ecx,0x4
  40fd1f:	mov    rdi,rax
  40fd22:	call   406d6d <_start@@Base+0xadd>
  40fd27:	mov    QWORD PTR [rbp-0x50],rax
  40fd2b:	mov    rax,QWORD PTR [rbp-0x20]
  40fd2f:	cmp    rax,QWORD PTR [rbp-0x50]
  40fd33:	je     40fe1a <_start@@Base+0x9b8a>
  40fd39:	mov    WORD PTR [rbp-0x30],0x0
  40fd3f:	mov    rax,QWORD PTR [rbp-0x50]
  40fd43:	mov    QWORD PTR [rbp-0x20],rax
  40fd47:	lea    rcx,[rbp-0x30]
  40fd4b:	mov    rdx,QWORD PTR [rbp-0x58]
  40fd4f:	mov    rsi,QWORD PTR [rbp-0x20]
  40fd53:	mov    rax,QWORD PTR [rbp-0x48]
  40fd57:	mov    rdi,rax
  40fd5a:	call   4078f6 <_start@@Base+0x1666>
  40fd5f:	mov    QWORD PTR [rbp-0x50],rax
  40fd63:	mov    rax,QWORD PTR [rbp-0x20]
  40fd67:	cmp    rax,QWORD PTR [rbp-0x50]
  40fd6b:	jne    40fdb7 <_start@@Base+0x9b27>
  40fd6d:	mov    rax,QWORD PTR [rbp-0x50]
  40fd71:	mov    QWORD PTR [rbp-0x20],rax
  40fd75:	lea    rcx,[rbp-0x30]
  40fd79:	mov    rdx,QWORD PTR [rbp-0x58]
  40fd7d:	mov    rsi,QWORD PTR [rbp-0x20]
  40fd81:	mov    rax,QWORD PTR [rbp-0x48]
  40fd85:	mov    r8,rcx
  40fd88:	lea    rcx,[rip+0x377b1]        # 447540 <__data_start@@Base+0x480>
  40fd8f:	mov    rdi,rax
  40fd92:	call   4083a1 <_start@@Base+0x2111>
  40fd97:	mov    QWORD PTR [rbp-0x50],rax
  40fd9b:	mov    rax,QWORD PTR [rbp-0x50]
  40fd9f:	cmp    rax,QWORD PTR [rbp-0x20]
  40fda3:	je     412bbf <_start@@Base+0xc92f>
  40fda9:	mov    rax,QWORD PTR [rbp-0x50]
  40fdad:	cmp    rax,QWORD PTR [rbp-0x58]
  40fdb1:	je     412bbf <_start@@Base+0xc92f>
  40fdb7:	movzx  eax,WORD PTR [rbp-0x30]
  40fdbb:	cmp    ax,0x96
  40fdbf:	jne    40fdd3 <_start@@Base+0x9b43>
  40fdc1:	mov    rax,QWORD PTR [rbp-0x48]
  40fdc5:	mov    eax,DWORD PTR [rax+0x10]
  40fdc8:	and    eax,0x2
  40fdcb:	test   eax,eax
  40fdcd:	je     412aab <_start@@Base+0xc81b>
  40fdd3:	mov    rax,QWORD PTR [rbp-0x48]
  40fdd7:	mov    rax,QWORD PTR [rax]
  40fdda:	mov    ecx,0x2
  40fddf:	mov    edx,0x2
  40fde4:	mov    esi,0x1
  40fde9:	mov    rdi,rax
  40fdec:	call   420ef1 <flatcc_builder_table_add@@Base>
  40fdf1:	mov    QWORD PTR [rbp-0x10],rax
  40fdf5:	cmp    QWORD PTR [rbp-0x10],0x0
  40fdfa:	je     412bc5 <_start@@Base+0xc935>
  40fe00:	movzx  eax,WORD PTR [rbp-0x30]
  40fe04:	movsx  edx,ax
  40fe07:	mov    rax,QWORD PTR [rbp-0x10]
  40fe0b:	mov    esi,edx
  40fe0d:	mov    rdi,rax
  40fe10:	call   40648e <_start@@Base+0x1fe>
  40fe15:	jmp    412aab <_start@@Base+0xc81b>
  40fe1a:	mov    rdx,QWORD PTR [rbp-0x58]
  40fe1e:	mov    rcx,QWORD PTR [rbp-0x50]
  40fe22:	mov    rax,QWORD PTR [rbp-0x48]
  40fe26:	mov    rsi,rcx
  40fe29:	mov    rdi,rax
  40fe2c:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40fe31:	mov    QWORD PTR [rbp-0x50],rax
  40fe35:	jmp    412aab <_start@@Base+0xc81b>
  40fe3a:	mov    rdx,QWORD PTR [rbp-0x58]
  40fe3e:	mov    rcx,QWORD PTR [rbp-0x50]
  40fe42:	mov    rax,QWORD PTR [rbp-0x48]
  40fe46:	mov    rsi,rcx
  40fe49:	mov    rdi,rax
  40fe4c:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40fe51:	mov    QWORD PTR [rbp-0x50],rax
  40fe55:	jmp    412aab <_start@@Base+0xc81b>
  40fe5a:	movabs rax,0x74657373ffffffff
  40fe64:	cmp    QWORD PTR [rbp-0x28],rax
  40fe68:	ja     4101b5 <_start@@Base+0x9f25>
  40fe6e:	movabs rax,0x706172656e745f6d
  40fe78:	cmp    QWORD PTR [rbp-0x28],rax
  40fe7c:	ja     40ff6d <_start@@Base+0x9cdd>
  40fe82:	movabs rax,0xffffffff00000000
  40fe8c:	and    rax,QWORD PTR [rbp-0x28]
  40fe90:	mov    rdx,rax
  40fe93:	movabs rax,0x6e616d6500000000
  40fe9d:	cmp    rdx,rax
  40fea0:	jne    40ff4d <_start@@Base+0x9cbd>
  40fea6:	mov    rax,QWORD PTR [rbp-0x50]
  40feaa:	mov    QWORD PTR [rbp-0x20],rax
  40feae:	mov    rdx,QWORD PTR [rbp-0x58]
  40feb2:	mov    rsi,QWORD PTR [rbp-0x20]
  40feb6:	mov    rax,QWORD PTR [rbp-0x48]
  40feba:	mov    ecx,0x4
  40febf:	mov    rdi,rax
  40fec2:	call   406d6d <_start@@Base+0xadd>
  40fec7:	mov    QWORD PTR [rbp-0x50],rax
  40fecb:	mov    rax,QWORD PTR [rbp-0x20]
  40fecf:	cmp    rax,QWORD PTR [rbp-0x50]
  40fed3:	je     40ff2d <_start@@Base+0x9c9d>
  40fed5:	lea    rcx,[rbp-0x3c]
  40fed9:	mov    rdx,QWORD PTR [rbp-0x58]
  40fedd:	mov    rsi,QWORD PTR [rbp-0x50]
  40fee1:	mov    rax,QWORD PTR [rbp-0x48]
  40fee5:	mov    rdi,rax
  40fee8:	call   42975d <flatcc_json_parser_build_string@@Base>
  40feed:	mov    QWORD PTR [rbp-0x50],rax
  40fef1:	mov    eax,DWORD PTR [rbp-0x3c]
  40fef4:	test   eax,eax
  40fef6:	je     412bcb <_start@@Base+0xc93b>
  40fefc:	mov    rax,QWORD PTR [rbp-0x48]
  40ff00:	mov    rax,QWORD PTR [rax]
  40ff03:	mov    esi,0x3
  40ff08:	mov    rdi,rax
  40ff0b:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  40ff10:	mov    QWORD PTR [rbp-0x18],rax
  40ff14:	cmp    QWORD PTR [rbp-0x18],0x0
  40ff19:	je     412bcb <_start@@Base+0xc93b>
  40ff1f:	mov    edx,DWORD PTR [rbp-0x3c]
  40ff22:	mov    rax,QWORD PTR [rbp-0x18]
  40ff26:	mov    DWORD PTR [rax],edx
  40ff28:	jmp    412aab <_start@@Base+0xc81b>
  40ff2d:	mov    rdx,QWORD PTR [rbp-0x58]
  40ff31:	mov    rcx,QWORD PTR [rbp-0x50]
  40ff35:	mov    rax,QWORD PTR [rbp-0x48]
  40ff39:	mov    rsi,rcx
  40ff3c:	mov    rdi,rax
  40ff3f:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40ff44:	mov    QWORD PTR [rbp-0x50],rax
  40ff48:	jmp    412aab <_start@@Base+0xc81b>
  40ff4d:	mov    rdx,QWORD PTR [rbp-0x58]
  40ff51:	mov    rcx,QWORD PTR [rbp-0x50]
  40ff55:	mov    rax,QWORD PTR [rbp-0x48]
  40ff59:	mov    rsi,rcx
  40ff5c:	mov    rdi,rax
  40ff5f:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  40ff64:	mov    QWORD PTR [rbp-0x50],rax
  40ff68:	jmp    412aab <_start@@Base+0xc81b>
  40ff6d:	movabs rax,0x706172656e745f6e
  40ff77:	cmp    QWORD PTR [rbp-0x28],rax
  40ff7b:	jne    4100d4 <_start@@Base+0x9e44>
  40ff81:	add    QWORD PTR [rbp-0x50],0x8
  40ff86:	mov    rdx,QWORD PTR [rbp-0x58]
  40ff8a:	mov    rax,QWORD PTR [rbp-0x50]
  40ff8e:	mov    rsi,rdx
  40ff91:	mov    rdi,rax
  40ff94:	call   406876 <_start@@Base+0x5e6>
  40ff99:	mov    QWORD PTR [rbp-0x28],rax
  40ff9d:	movabs rax,0x616d657370616365
  40ffa7:	cmp    QWORD PTR [rbp-0x28],rax
  40ffab:	jne    4100b4 <_start@@Base+0x9e24>
  40ffb1:	add    QWORD PTR [rbp-0x50],0x8
  40ffb6:	mov    rdx,QWORD PTR [rbp-0x58]
  40ffba:	mov    rax,QWORD PTR [rbp-0x50]
  40ffbe:	mov    rsi,rdx
  40ffc1:	mov    rdi,rax
  40ffc4:	call   406876 <_start@@Base+0x5e6>
  40ffc9:	mov    QWORD PTR [rbp-0x28],rax
  40ffcd:	mov    rax,QWORD PTR [rbp-0x28]
  40ffd1:	and    rax,0xffffffffff000000
  40ffd7:	mov    rdx,rax
  40ffda:	movabs rax,0x5f74657374000000
  40ffe4:	cmp    rdx,rax
  40ffe7:	jne    410094 <_start@@Base+0x9e04>
  40ffed:	mov    rax,QWORD PTR [rbp-0x50]
  40fff1:	mov    QWORD PTR [rbp-0x20],rax
  40fff5:	mov    rdx,QWORD PTR [rbp-0x58]
  40fff9:	mov    rsi,QWORD PTR [rbp-0x20]
  40fffd:	mov    rax,QWORD PTR [rbp-0x48]
  410001:	mov    ecx,0x5
  410006:	mov    rdi,rax
  410009:	call   406d6d <_start@@Base+0xadd>
  41000e:	mov    QWORD PTR [rbp-0x50],rax
  410012:	mov    rax,QWORD PTR [rbp-0x20]
  410016:	cmp    rax,QWORD PTR [rbp-0x50]
  41001a:	je     410074 <_start@@Base+0x9de4>
  41001c:	lea    rcx,[rbp-0x3c]
  410020:	mov    rdx,QWORD PTR [rbp-0x58]
  410024:	mov    rsi,QWORD PTR [rbp-0x50]
  410028:	mov    rax,QWORD PTR [rbp-0x48]
  41002c:	mov    rdi,rax
  41002f:	call   40967f <_start@@Base+0x33ef>
  410034:	mov    QWORD PTR [rbp-0x50],rax
  410038:	mov    eax,DWORD PTR [rbp-0x3c]
  41003b:	test   eax,eax
  41003d:	je     412bd1 <_start@@Base+0xc941>
  410043:	mov    rax,QWORD PTR [rbp-0x48]
  410047:	mov    rax,QWORD PTR [rax]
  41004a:	mov    esi,0x22
  41004f:	mov    rdi,rax
  410052:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  410057:	mov    QWORD PTR [rbp-0x18],rax
  41005b:	cmp    QWORD PTR [rbp-0x18],0x0
  410060:	je     412bd1 <_start@@Base+0xc941>
  410066:	mov    edx,DWORD PTR [rbp-0x3c]
  410069:	mov    rax,QWORD PTR [rbp-0x18]
  41006d:	mov    DWORD PTR [rax],edx
  41006f:	jmp    412aab <_start@@Base+0xc81b>
  410074:	mov    rdx,QWORD PTR [rbp-0x58]
  410078:	mov    rcx,QWORD PTR [rbp-0x50]
  41007c:	mov    rax,QWORD PTR [rbp-0x48]
  410080:	mov    rsi,rcx
  410083:	mov    rdi,rax
  410086:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41008b:	mov    QWORD PTR [rbp-0x50],rax
  41008f:	jmp    412aab <_start@@Base+0xc81b>
  410094:	mov    rdx,QWORD PTR [rbp-0x58]
  410098:	mov    rcx,QWORD PTR [rbp-0x50]
  41009c:	mov    rax,QWORD PTR [rbp-0x48]
  4100a0:	mov    rsi,rcx
  4100a3:	mov    rdi,rax
  4100a6:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4100ab:	mov    QWORD PTR [rbp-0x50],rax
  4100af:	jmp    412aab <_start@@Base+0xc81b>
  4100b4:	mov    rdx,QWORD PTR [rbp-0x58]
  4100b8:	mov    rcx,QWORD PTR [rbp-0x50]
  4100bc:	mov    rax,QWORD PTR [rbp-0x48]
  4100c0:	mov    rsi,rcx
  4100c3:	mov    rdi,rax
  4100c6:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4100cb:	mov    QWORD PTR [rbp-0x50],rax
  4100cf:	jmp    412aab <_start@@Base+0xc81b>
  4100d4:	movabs rax,0xffffff0000000000
  4100de:	and    rax,QWORD PTR [rbp-0x28]
  4100e2:	mov    rdx,rax
  4100e5:	movabs rax,0x706f730000000000
  4100ef:	cmp    rdx,rax
  4100f2:	jne    410195 <_start@@Base+0x9f05>
  4100f8:	mov    rax,QWORD PTR [rbp-0x50]
  4100fc:	mov    QWORD PTR [rbp-0x20],rax
  410100:	mov    rdx,QWORD PTR [rbp-0x58]
  410104:	mov    rsi,QWORD PTR [rbp-0x20]
  410108:	mov    rax,QWORD PTR [rbp-0x48]
  41010c:	mov    ecx,0x3
  410111:	mov    rdi,rax
  410114:	call   406d6d <_start@@Base+0xadd>
  410119:	mov    QWORD PTR [rbp-0x50],rax
  41011d:	mov    rax,QWORD PTR [rbp-0x20]
  410121:	cmp    rax,QWORD PTR [rbp-0x50]
  410125:	je     410175 <_start@@Base+0x9ee5>
  410127:	mov    rax,QWORD PTR [rbp-0x48]
  41012b:	mov    rax,QWORD PTR [rax]
  41012e:	mov    ecx,0x10
  410133:	mov    edx,0x20
  410138:	mov    esi,0x0
  41013d:	mov    rdi,rax
  410140:	call   420ef1 <flatcc_builder_table_add@@Base>
  410145:	mov    QWORD PTR [rbp-0x10],rax
  410149:	cmp    QWORD PTR [rbp-0x10],0x0
  41014e:	je     412bd7 <_start@@Base+0xc947>
  410154:	mov    rcx,QWORD PTR [rbp-0x10]
  410158:	mov    rdx,QWORD PTR [rbp-0x58]
  41015c:	mov    rsi,QWORD PTR [rbp-0x50]
  410160:	mov    rax,QWORD PTR [rbp-0x48]
  410164:	mov    rdi,rax
  410167:	call   40c103 <_start@@Base+0x5e73>
  41016c:	mov    QWORD PTR [rbp-0x50],rax
  410170:	jmp    412aab <_start@@Base+0xc81b>
  410175:	mov    rdx,QWORD PTR [rbp-0x58]
  410179:	mov    rcx,QWORD PTR [rbp-0x50]
  41017d:	mov    rax,QWORD PTR [rbp-0x48]
  410181:	mov    rsi,rcx
  410184:	mov    rdi,rax
  410187:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41018c:	mov    QWORD PTR [rbp-0x50],rax
  410190:	jmp    412aab <_start@@Base+0xc81b>
  410195:	mov    rdx,QWORD PTR [rbp-0x58]
  410199:	mov    rcx,QWORD PTR [rbp-0x50]
  41019d:	mov    rax,QWORD PTR [rbp-0x48]
  4101a1:	mov    rsi,rcx
  4101a4:	mov    rdi,rax
  4101a7:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4101ac:	mov    QWORD PTR [rbp-0x50],rax
  4101b0:	jmp    412aab <_start@@Base+0xc81b>
  4101b5:	mov    rax,QWORD PTR [rbp-0x28]
  4101b9:	and    rax,0xffffffffff000000
  4101bf:	mov    rdx,rax
  4101c2:	movabs rax,0x7465737434000000
  4101cc:	cmp    rdx,rax
  4101cf:	jne    4102fc <_start@@Base+0xa06c>
  4101d5:	mov    rax,QWORD PTR [rbp-0x50]
  4101d9:	mov    QWORD PTR [rbp-0x20],rax
  4101dd:	mov    rdx,QWORD PTR [rbp-0x58]
  4101e1:	mov    rsi,QWORD PTR [rbp-0x20]
  4101e5:	mov    rax,QWORD PTR [rbp-0x48]
  4101e9:	mov    ecx,0x5
  4101ee:	mov    rdi,rax
  4101f1:	call   406d6d <_start@@Base+0xadd>
  4101f6:	mov    QWORD PTR [rbp-0x50],rax
  4101fa:	mov    rax,QWORD PTR [rbp-0x20]
  4101fe:	cmp    rax,QWORD PTR [rbp-0x50]
  410202:	je     41038a <_start@@Base+0xa0fa>
  410208:	mov    rax,QWORD PTR [rbp-0x48]
  41020c:	mov    rax,QWORD PTR [rax]
  41020f:	mov    ecx,0x3fffffff
  410214:	mov    edx,0x2
  410219:	mov    esi,0x4
  41021e:	mov    rdi,rax
  410221:	call   41eaf3 <flatcc_builder_start_vector@@Base>
  410226:	test   eax,eax
  410228:	jne    412bdd <_start@@Base+0xc94d>
  41022e:	lea    rcx,[rbp-0x40]
  410232:	mov    rdx,QWORD PTR [rbp-0x58]
  410236:	mov    rsi,QWORD PTR [rbp-0x50]
  41023a:	mov    rax,QWORD PTR [rbp-0x48]
  41023e:	mov    rdi,rax
  410241:	call   406b72 <_start@@Base+0x8e2>
  410246:	mov    QWORD PTR [rbp-0x50],rax
  41024a:	jmp    4102a7 <_start@@Base+0xa017>
  41024c:	mov    rax,QWORD PTR [rbp-0x48]
  410250:	mov    rax,QWORD PTR [rax]
  410253:	mov    esi,0x1
  410258:	mov    rdi,rax
  41025b:	call   41e3a3 <flatcc_builder_extend_vector@@Base>
  410260:	mov    QWORD PTR [rbp-0x10],rax
  410264:	cmp    QWORD PTR [rbp-0x10],0x0
  410269:	je     412be3 <_start@@Base+0xc953>
  41026f:	mov    rcx,QWORD PTR [rbp-0x10]
  410273:	mov    rdx,QWORD PTR [rbp-0x58]
  410277:	mov    rsi,QWORD PTR [rbp-0x50]
  41027b:	mov    rax,QWORD PTR [rbp-0x48]
  41027f:	mov    rdi,rax
  410282:	call   40a82f <_start@@Base+0x459f>
  410287:	mov    QWORD PTR [rbp-0x50],rax
  41028b:	lea    rcx,[rbp-0x40]
  41028f:	mov    rdx,QWORD PTR [rbp-0x58]
  410293:	mov    rsi,QWORD PTR [rbp-0x50]
  410297:	mov    rax,QWORD PTR [rbp-0x48]
  41029b:	mov    rdi,rax
  41029e:	call   406c2f <_start@@Base+0x99f>
  4102a3:	mov    QWORD PTR [rbp-0x50],rax
  4102a7:	mov    eax,DWORD PTR [rbp-0x40]
  4102aa:	test   eax,eax
  4102ac:	jne    41024c <_start@@Base+0x9fbc>
  4102ae:	mov    rax,QWORD PTR [rbp-0x48]
  4102b2:	mov    rax,QWORD PTR [rax]
  4102b5:	mov    rdi,rax
  4102b8:	call   41fce8 <flatcc_builder_end_vector@@Base>
  4102bd:	mov    DWORD PTR [rbp-0x3c],eax
  4102c0:	mov    eax,DWORD PTR [rbp-0x3c]
  4102c3:	test   eax,eax
  4102c5:	je     412be9 <_start@@Base+0xc959>
  4102cb:	mov    rax,QWORD PTR [rbp-0x48]
  4102cf:	mov    rax,QWORD PTR [rax]
  4102d2:	mov    esi,0x9
  4102d7:	mov    rdi,rax
  4102da:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  4102df:	mov    QWORD PTR [rbp-0x18],rax
  4102e3:	cmp    QWORD PTR [rbp-0x18],0x0
  4102e8:	je     412be9 <_start@@Base+0xc959>
  4102ee:	mov    edx,DWORD PTR [rbp-0x3c]
  4102f1:	mov    rax,QWORD PTR [rbp-0x18]
  4102f5:	mov    DWORD PTR [rax],edx
  4102f7:	jmp    412aab <_start@@Base+0xc81b>
  4102fc:	movabs rax,0xffffffff00000000
  410306:	and    rax,QWORD PTR [rbp-0x28]
  41030a:	mov    rdx,rax
  41030d:	movabs rax,0x7465737400000000
  410317:	cmp    rdx,rax
  41031a:	jne    41038d <_start@@Base+0xa0fd>
  41031c:	mov    rax,QWORD PTR [rbp-0x50]
  410320:	mov    QWORD PTR [rbp-0x20],rax
  410324:	mov    rdx,QWORD PTR [rbp-0x58]
  410328:	mov    rsi,QWORD PTR [rbp-0x20]
  41032c:	mov    rax,QWORD PTR [rbp-0x48]
  410330:	mov    ecx,0x4
  410335:	mov    rdi,rax
  410338:	call   406d6d <_start@@Base+0xadd>
  41033d:	mov    QWORD PTR [rbp-0x50],rax
  410341:	mov    rax,QWORD PTR [rbp-0x20]
  410345:	cmp    rax,QWORD PTR [rbp-0x50]
  410349:	je     410390 <_start@@Base+0xa100>
  41034b:	mov    rdi,QWORD PTR [rbp-0x38]
  41034f:	mov    rdx,QWORD PTR [rbp-0x58]
  410353:	mov    rsi,QWORD PTR [rbp-0x50]
  410357:	mov    rax,QWORD PTR [rbp-0x48]
  41035b:	sub    rsp,0x8
  41035f:	lea    rcx,[rip+0xffffffffffff9ff1]        # 40a357 <_start@@Base+0x40c7>
  410366:	push   rcx
  410367:	mov    r9,rdi
  41036a:	mov    r8d,0x8
  410370:	mov    ecx,0x0
  410375:	mov    rdi,rax
  410378:	call   429a7f <flatcc_json_parser_union@@Base>
  41037d:	add    rsp,0x10
  410381:	mov    QWORD PTR [rbp-0x50],rax
  410385:	jmp    412aab <_start@@Base+0xc81b>
  41038a:	nop
  41038b:	jmp    410391 <_start@@Base+0xa101>
  41038d:	nop
  41038e:	jmp    410391 <_start@@Base+0xa101>
  410390:	nop
  410391:	mov    rax,QWORD PTR [rbp-0x28]
  410395:	and    rax,0xffffffffff000000
  41039b:	mov    rdx,rax
  41039e:	movabs rax,0x7465737435000000
  4103a8:	cmp    rdx,rax
  4103ab:	jne    4104d8 <_start@@Base+0xa248>
  4103b1:	mov    rax,QWORD PTR [rbp-0x50]
  4103b5:	mov    QWORD PTR [rbp-0x20],rax
  4103b9:	mov    rdx,QWORD PTR [rbp-0x58]
  4103bd:	mov    rsi,QWORD PTR [rbp-0x20]
  4103c1:	mov    rax,QWORD PTR [rbp-0x48]
  4103c5:	mov    ecx,0x5
  4103ca:	mov    rdi,rax
  4103cd:	call   406d6d <_start@@Base+0xadd>
  4103d2:	mov    QWORD PTR [rbp-0x50],rax
  4103d6:	mov    rax,QWORD PTR [rbp-0x20]
  4103da:	cmp    rax,QWORD PTR [rbp-0x50]
  4103de:	je     4104db <_start@@Base+0xa24b>
  4103e4:	mov    rax,QWORD PTR [rbp-0x48]
  4103e8:	mov    rax,QWORD PTR [rax]
  4103eb:	mov    ecx,0x3fffffff
  4103f0:	mov    edx,0x2
  4103f5:	mov    esi,0x4
  4103fa:	mov    rdi,rax
  4103fd:	call   41eaf3 <flatcc_builder_start_vector@@Base>
  410402:	test   eax,eax
  410404:	jne    412bef <_start@@Base+0xc95f>
  41040a:	lea    rcx,[rbp-0x40]
  41040e:	mov    rdx,QWORD PTR [rbp-0x58]
  410412:	mov    rsi,QWORD PTR [rbp-0x50]
  410416:	mov    rax,QWORD PTR [rbp-0x48]
  41041a:	mov    rdi,rax
  41041d:	call   406b72 <_start@@Base+0x8e2>
  410422:	mov    QWORD PTR [rbp-0x50],rax
  410426:	jmp    410483 <_start@@Base+0xa1f3>
  410428:	mov    rax,QWORD PTR [rbp-0x48]
  41042c:	mov    rax,QWORD PTR [rax]
  41042f:	mov    esi,0x1
  410434:	mov    rdi,rax
  410437:	call   41e3a3 <flatcc_builder_extend_vector@@Base>
  41043c:	mov    QWORD PTR [rbp-0x10],rax
  410440:	cmp    QWORD PTR [rbp-0x10],0x0
  410445:	je     412bf5 <_start@@Base+0xc965>
  41044b:	mov    rcx,QWORD PTR [rbp-0x10]
  41044f:	mov    rdx,QWORD PTR [rbp-0x58]
  410453:	mov    rsi,QWORD PTR [rbp-0x50]
  410457:	mov    rax,QWORD PTR [rbp-0x48]
  41045b:	mov    rdi,rax
  41045e:	call   40a82f <_start@@Base+0x459f>
  410463:	mov    QWORD PTR [rbp-0x50],rax
  410467:	lea    rcx,[rbp-0x40]
  41046b:	mov    rdx,QWORD PTR [rbp-0x58]
  41046f:	mov    rsi,QWORD PTR [rbp-0x50]
  410473:	mov    rax,QWORD PTR [rbp-0x48]
  410477:	mov    rdi,rax
  41047a:	call   406c2f <_start@@Base+0x99f>
  41047f:	mov    QWORD PTR [rbp-0x50],rax
  410483:	mov    eax,DWORD PTR [rbp-0x40]
  410486:	test   eax,eax
  410488:	jne    410428 <_start@@Base+0xa198>
  41048a:	mov    rax,QWORD PTR [rbp-0x48]
  41048e:	mov    rax,QWORD PTR [rax]
  410491:	mov    rdi,rax
  410494:	call   41fce8 <flatcc_builder_end_vector@@Base>
  410499:	mov    DWORD PTR [rbp-0x3c],eax
  41049c:	mov    eax,DWORD PTR [rbp-0x3c]
  41049f:	test   eax,eax
  4104a1:	je     412bfb <_start@@Base+0xc96b>
  4104a7:	mov    rax,QWORD PTR [rbp-0x48]
  4104ab:	mov    rax,QWORD PTR [rax]
  4104ae:	mov    esi,0x1f
  4104b3:	mov    rdi,rax
  4104b6:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  4104bb:	mov    QWORD PTR [rbp-0x18],rax
  4104bf:	cmp    QWORD PTR [rbp-0x18],0x0
  4104c4:	je     412bfb <_start@@Base+0xc96b>
  4104ca:	mov    edx,DWORD PTR [rbp-0x3c]
  4104cd:	mov    rax,QWORD PTR [rbp-0x18]
  4104d1:	mov    DWORD PTR [rax],edx
  4104d3:	jmp    412aab <_start@@Base+0xc81b>
  4104d8:	nop
  4104d9:	jmp    4104dc <_start@@Base+0xa24c>
  4104db:	nop
  4104dc:	movabs rax,0x746573745f747970
  4104e6:	cmp    QWORD PTR [rbp-0x28],rax
  4104ea:	jne    4105e2 <_start@@Base+0xa352>
  4104f0:	add    QWORD PTR [rbp-0x50],0x8
  4104f5:	mov    rdx,QWORD PTR [rbp-0x58]
  4104f9:	mov    rax,QWORD PTR [rbp-0x50]
  4104fd:	mov    rsi,rdx
  410500:	mov    rdi,rax
  410503:	call   406876 <_start@@Base+0x5e6>
  410508:	mov    QWORD PTR [rbp-0x28],rax
  41050c:	movabs rax,0xff00000000000000
  410516:	and    rax,QWORD PTR [rbp-0x28]
  41051a:	mov    rdx,rax
  41051d:	movabs rax,0x6500000000000000
  410527:	cmp    rdx,rax
  41052a:	jne    4105c2 <_start@@Base+0xa332>
  410530:	mov    rax,QWORD PTR [rbp-0x50]
  410534:	mov    QWORD PTR [rbp-0x20],rax
  410538:	mov    rdx,QWORD PTR [rbp-0x58]
  41053c:	mov    rsi,QWORD PTR [rbp-0x20]
  410540:	mov    rax,QWORD PTR [rbp-0x48]
  410544:	mov    ecx,0x1
  410549:	mov    rdi,rax
  41054c:	call   406d6d <_start@@Base+0xadd>
  410551:	mov    QWORD PTR [rbp-0x50],rax
  410555:	mov    rax,QWORD PTR [rbp-0x20]
  410559:	cmp    rax,QWORD PTR [rbp-0x50]
  41055d:	je     4105a2 <_start@@Base+0xa312>
  41055f:	mov    rdi,QWORD PTR [rbp-0x38]
  410563:	mov    rdx,QWORD PTR [rbp-0x58]
  410567:	mov    rsi,QWORD PTR [rbp-0x50]
  41056b:	mov    rax,QWORD PTR [rbp-0x48]
  41056f:	lea    rcx,[rip+0xffffffffffff9de1]        # 40a357 <_start@@Base+0x40c7>
  410576:	push   rcx
  410577:	lea    rcx,[rip+0x36fe2]        # 447560 <__data_start@@Base+0x4a0>
  41057e:	push   rcx
  41057f:	mov    r9,rdi
  410582:	mov    r8d,0x8
  410588:	mov    ecx,0x0
  41058d:	mov    rdi,rax
  410590:	call   429c5c <flatcc_json_parser_union_type@@Base>
  410595:	add    rsp,0x10
  410599:	mov    QWORD PTR [rbp-0x50],rax
  41059d:	jmp    412aab <_start@@Base+0xc81b>
  4105a2:	mov    rdx,QWORD PTR [rbp-0x58]
  4105a6:	mov    rcx,QWORD PTR [rbp-0x50]
  4105aa:	mov    rax,QWORD PTR [rbp-0x48]
  4105ae:	mov    rsi,rcx
  4105b1:	mov    rdi,rax
  4105b4:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4105b9:	mov    QWORD PTR [rbp-0x50],rax
  4105bd:	jmp    412aab <_start@@Base+0xc81b>
  4105c2:	mov    rdx,QWORD PTR [rbp-0x58]
  4105c6:	mov    rcx,QWORD PTR [rbp-0x50]
  4105ca:	mov    rax,QWORD PTR [rbp-0x48]
  4105ce:	mov    rsi,rcx
  4105d1:	mov    rdi,rax
  4105d4:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4105d9:	mov    QWORD PTR [rbp-0x50],rax
  4105dd:	jmp    412aab <_start@@Base+0xc81b>
  4105e2:	mov    rdx,QWORD PTR [rbp-0x58]
  4105e6:	mov    rcx,QWORD PTR [rbp-0x50]
  4105ea:	mov    rax,QWORD PTR [rbp-0x48]
  4105ee:	mov    rsi,rcx
  4105f1:	mov    rdi,rax
  4105f4:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4105f9:	mov    QWORD PTR [rbp-0x50],rax
  4105fd:	endbr64 
  410601:	endbr64 
  410605:	jmp    412aab <_start@@Base+0xc81b>
  41060a:	movabs rax,0x746573746632ffff
  410614:	cmp    QWORD PTR [rbp-0x28],rax
  410618:	ja     4115cc <_start@@Base+0xb33c>
  41061e:	movabs rax,0x7465737461727261
  410628:	cmp    QWORD PTR [rbp-0x28],rax
  41062c:	jne    410f04 <_start@@Base+0xac74>
  410632:	add    QWORD PTR [rbp-0x50],0x8
  410637:	mov    rdx,QWORD PTR [rbp-0x58]
  41063b:	mov    rax,QWORD PTR [rbp-0x50]
  41063f:	mov    rsi,rdx
  410642:	mov    rdi,rax
  410645:	call   406876 <_start@@Base+0x5e6>
  41064a:	mov    QWORD PTR [rbp-0x28],rax
  41064e:	movabs rax,0x796f66737472696d
  410658:	cmp    QWORD PTR [rbp-0x28],rax
  41065c:	ja     4109f4 <_start@@Base+0xa764>
  410662:	movabs rax,0x796f66626f6f6c73
  41066c:	cmp    QWORD PTR [rbp-0x28],rax
  410670:	jne    410819 <_start@@Base+0xa589>
  410676:	mov    rax,QWORD PTR [rbp-0x50]
  41067a:	mov    QWORD PTR [rbp-0x20],rax
  41067e:	mov    rdx,QWORD PTR [rbp-0x58]
  410682:	mov    rsi,QWORD PTR [rbp-0x20]
  410686:	mov    rax,QWORD PTR [rbp-0x48]
  41068a:	mov    ecx,0x8
  41068f:	mov    rdi,rax
  410692:	call   406d6d <_start@@Base+0xadd>
  410697:	mov    QWORD PTR [rbp-0x50],rax
  41069b:	mov    rax,QWORD PTR [rbp-0x20]
  41069f:	cmp    rax,QWORD PTR [rbp-0x50]
  4106a3:	je     41081c <_start@@Base+0xa58c>
  4106a9:	mov    rax,QWORD PTR [rbp-0x48]
  4106ad:	mov    rax,QWORD PTR [rax]
  4106b0:	mov    ecx,0xffffffff
  4106b5:	mov    edx,0x1
  4106ba:	mov    esi,0x1
  4106bf:	mov    rdi,rax
  4106c2:	call   41eaf3 <flatcc_builder_start_vector@@Base>
  4106c7:	test   eax,eax
  4106c9:	jne    412c01 <_start@@Base+0xc971>
  4106cf:	lea    rcx,[rbp-0x40]
  4106d3:	mov    rdx,QWORD PTR [rbp-0x58]
  4106d7:	mov    rsi,QWORD PTR [rbp-0x50]
  4106db:	mov    rax,QWORD PTR [rbp-0x48]
  4106df:	mov    rdi,rax
  4106e2:	call   406b72 <_start@@Base+0x8e2>
  4106e7:	mov    QWORD PTR [rbp-0x50],rax
  4106eb:	jmp    4107c0 <_start@@Base+0xa530>
  4106f0:	mov    BYTE PTR [rbp-0x30],0x0
  4106f4:	mov    rax,QWORD PTR [rbp-0x48]
  4106f8:	mov    rax,QWORD PTR [rax]
  4106fb:	mov    esi,0x1
  410700:	mov    rdi,rax
  410703:	call   41e3a3 <flatcc_builder_extend_vector@@Base>
  410708:	mov    QWORD PTR [rbp-0x10],rax
  41070c:	cmp    QWORD PTR [rbp-0x10],0x0
  410711:	je     412c07 <_start@@Base+0xc977>
  410717:	mov    rax,QWORD PTR [rbp-0x50]
  41071b:	mov    QWORD PTR [rbp-0x20],rax
  41071f:	lea    rcx,[rbp-0x30]
  410723:	mov    rdx,QWORD PTR [rbp-0x58]
  410727:	mov    rsi,QWORD PTR [rbp-0x20]
  41072b:	mov    rax,QWORD PTR [rbp-0x48]
  41072f:	mov    rdi,rax
  410732:	call   407a7e <_start@@Base+0x17ee>
  410737:	mov    QWORD PTR [rbp-0x50],rax
  41073b:	mov    rax,QWORD PTR [rbp-0x20]
  41073f:	cmp    rax,QWORD PTR [rbp-0x50]
  410743:	jne    41078f <_start@@Base+0xa4ff>
  410745:	mov    rax,QWORD PTR [rbp-0x50]
  410749:	mov    QWORD PTR [rbp-0x20],rax
  41074d:	lea    rcx,[rbp-0x30]
  410751:	mov    rdx,QWORD PTR [rbp-0x58]
  410755:	mov    rsi,QWORD PTR [rbp-0x20]
  410759:	mov    rax,QWORD PTR [rbp-0x48]
  41075d:	mov    r8,rcx
  410760:	lea    rcx,[rip+0x36e19]        # 447580 <__data_start@@Base+0x4c0>
  410767:	mov    rdi,rax
  41076a:	call   408660 <_start@@Base+0x23d0>
  41076f:	mov    QWORD PTR [rbp-0x50],rax
  410773:	mov    rax,QWORD PTR [rbp-0x50]
  410777:	cmp    rax,QWORD PTR [rbp-0x20]
  41077b:	je     412c0d <_start@@Base+0xc97d>
  410781:	mov    rax,QWORD PTR [rbp-0x50]
  410785:	cmp    rax,QWORD PTR [rbp-0x58]
  410789:	je     412c0d <_start@@Base+0xc97d>
  41078f:	movzx  eax,BYTE PTR [rbp-0x30]
  410793:	movzx  edx,al
  410796:	mov    rax,QWORD PTR [rbp-0x10]
  41079a:	mov    esi,edx
  41079c:	mov    rdi,rax
  41079f:	call   4065d1 <_start@@Base+0x341>
  4107a4:	lea    rcx,[rbp-0x40]
  4107a8:	mov    rdx,QWORD PTR [rbp-0x58]
  4107ac:	mov    rsi,QWORD PTR [rbp-0x50]
  4107b0:	mov    rax,QWORD PTR [rbp-0x48]
  4107b4:	mov    rdi,rax
  4107b7:	call   406c2f <_start@@Base+0x99f>
  4107bc:	mov    QWORD PTR [rbp-0x50],rax
  4107c0:	mov    eax,DWORD PTR [rbp-0x40]
  4107c3:	test   eax,eax
  4107c5:	jne    4106f0 <_start@@Base+0xa460>
  4107cb:	mov    rax,QWORD PTR [rbp-0x48]
  4107cf:	mov    rax,QWORD PTR [rax]
  4107d2:	mov    rdi,rax
  4107d5:	call   41fce8 <flatcc_builder_end_vector@@Base>
  4107da:	mov    DWORD PTR [rbp-0x3c],eax
  4107dd:	mov    eax,DWORD PTR [rbp-0x3c]
  4107e0:	test   eax,eax
  4107e2:	je     412c13 <_start@@Base+0xc983>
  4107e8:	mov    rax,QWORD PTR [rbp-0x48]
  4107ec:	mov    rax,QWORD PTR [rax]
  4107ef:	mov    esi,0x18
  4107f4:	mov    rdi,rax
  4107f7:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  4107fc:	mov    QWORD PTR [rbp-0x18],rax
  410800:	cmp    QWORD PTR [rbp-0x18],0x0
  410805:	je     412c13 <_start@@Base+0xc983>
  41080b:	mov    edx,DWORD PTR [rbp-0x3c]
  41080e:	mov    rax,QWORD PTR [rbp-0x18]
  410812:	mov    DWORD PTR [rax],edx
  410814:	jmp    412aab <_start@@Base+0xc81b>
  410819:	nop
  41081a:	jmp    41081d <_start@@Base+0xa58d>
  41081c:	nop
  41081d:	movabs rax,0x796f66736f727465
  410827:	cmp    QWORD PTR [rbp-0x28],rax
  41082b:	jne    4109d0 <_start@@Base+0xa740>
  410831:	add    QWORD PTR [rbp-0x50],0x8
  410836:	mov    rdx,QWORD PTR [rbp-0x58]
  41083a:	mov    rax,QWORD PTR [rbp-0x50]
  41083e:	mov    rsi,rdx
  410841:	mov    rdi,rax
  410844:	call   406876 <_start@@Base+0x5e6>
  410849:	mov    QWORD PTR [rbp-0x28],rax
  41084d:	mov    rax,QWORD PTR [rbp-0x28]
  410851:	mov    al,0x0
  410853:	mov    rdx,rax
  410856:	movabs rax,0x6473747275637400
  410860:	cmp    rdx,rax
  410863:	jne    4109b0 <_start@@Base+0xa720>
  410869:	mov    rax,QWORD PTR [rbp-0x50]
  41086d:	mov    QWORD PTR [rbp-0x20],rax
  410871:	mov    rdx,QWORD PTR [rbp-0x58]
  410875:	mov    rsi,QWORD PTR [rbp-0x20]
  410879:	mov    rax,QWORD PTR [rbp-0x48]
  41087d:	mov    ecx,0x7
  410882:	mov    rdi,rax
  410885:	call   406d6d <_start@@Base+0xadd>
  41088a:	mov    QWORD PTR [rbp-0x50],rax
  41088e:	mov    rax,QWORD PTR [rbp-0x20]
  410892:	cmp    rax,QWORD PTR [rbp-0x50]
  410896:	je     410990 <_start@@Base+0xa700>
  41089c:	mov    rax,QWORD PTR [rbp-0x48]
  4108a0:	mov    rax,QWORD PTR [rax]
  4108a3:	mov    ecx,0x1fffffff
  4108a8:	mov    edx,0x4
  4108ad:	mov    esi,0x8
  4108b2:	mov    rdi,rax
  4108b5:	call   41eaf3 <flatcc_builder_start_vector@@Base>
  4108ba:	test   eax,eax
  4108bc:	jne    412c19 <_start@@Base+0xc989>
  4108c2:	lea    rcx,[rbp-0x40]
  4108c6:	mov    rdx,QWORD PTR [rbp-0x58]
  4108ca:	mov    rsi,QWORD PTR [rbp-0x50]
  4108ce:	mov    rax,QWORD PTR [rbp-0x48]
  4108d2:	mov    rdi,rax
  4108d5:	call   406b72 <_start@@Base+0x8e2>
  4108da:	mov    QWORD PTR [rbp-0x50],rax
  4108de:	jmp    41093b <_start@@Base+0xa6ab>
  4108e0:	mov    rax,QWORD PTR [rbp-0x48]
  4108e4:	mov    rax,QWORD PTR [rax]
  4108e7:	mov    esi,0x1
  4108ec:	mov    rdi,rax
  4108ef:	call   41e3a3 <flatcc_builder_extend_vector@@Base>
  4108f4:	mov    QWORD PTR [rbp-0x10],rax
  4108f8:	cmp    QWORD PTR [rbp-0x10],0x0
  4108fd:	je     412c1f <_start@@Base+0xc98f>
  410903:	mov    rcx,QWORD PTR [rbp-0x10]
  410907:	mov    rdx,QWORD PTR [rbp-0x58]
  41090b:	mov    rsi,QWORD PTR [rbp-0x50]
  41090f:	mov    rax,QWORD PTR [rbp-0x48]
  410913:	mov    rdi,rax
  410916:	call   40c968 <_start@@Base+0x66d8>
  41091b:	mov    QWORD PTR [rbp-0x50],rax
  41091f:	lea    rcx,[rbp-0x40]
  410923:	mov    rdx,QWORD PTR [rbp-0x58]
  410927:	mov    rsi,QWORD PTR [rbp-0x50]
  41092b:	mov    rax,QWORD PTR [rbp-0x48]
  41092f:	mov    rdi,rax
  410932:	call   406c2f <_start@@Base+0x99f>
  410937:	mov    QWORD PTR [rbp-0x50],rax
  41093b:	mov    eax,DWORD PTR [rbp-0x40]
  41093e:	test   eax,eax
  410940:	jne    4108e0 <_start@@Base+0xa650>
  410942:	mov    rax,QWORD PTR [rbp-0x48]
  410946:	mov    rax,QWORD PTR [rax]
  410949:	mov    rdi,rax
  41094c:	call   41fce8 <flatcc_builder_end_vector@@Base>
  410951:	mov    DWORD PTR [rbp-0x3c],eax
  410954:	mov    eax,DWORD PTR [rbp-0x3c]
  410957:	test   eax,eax
  410959:	je     412c25 <_start@@Base+0xc995>
  41095f:	mov    rax,QWORD PTR [rbp-0x48]
  410963:	mov    rax,QWORD PTR [rax]
  410966:	mov    esi,0x1d
  41096b:	mov    rdi,rax
  41096e:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  410973:	mov    QWORD PTR [rbp-0x18],rax
  410977:	cmp    QWORD PTR [rbp-0x18],0x0
  41097c:	je     412c25 <_start@@Base+0xc995>
  410982:	mov    edx,DWORD PTR [rbp-0x3c]
  410985:	mov    rax,QWORD PTR [rbp-0x18]
  410989:	mov    DWORD PTR [rax],edx
  41098b:	jmp    412aab <_start@@Base+0xc81b>
  410990:	mov    rdx,QWORD PTR [rbp-0x58]
  410994:	mov    rcx,QWORD PTR [rbp-0x50]
  410998:	mov    rax,QWORD PTR [rbp-0x48]
  41099c:	mov    rsi,rcx
  41099f:	mov    rdi,rax
  4109a2:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4109a7:	mov    QWORD PTR [rbp-0x50],rax
  4109ab:	jmp    412aab <_start@@Base+0xc81b>
  4109b0:	mov    rdx,QWORD PTR [rbp-0x58]
  4109b4:	mov    rcx,QWORD PTR [rbp-0x50]
  4109b8:	mov    rax,QWORD PTR [rbp-0x48]
  4109bc:	mov    rsi,rcx
  4109bf:	mov    rdi,rax
  4109c2:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4109c7:	mov    QWORD PTR [rbp-0x50],rax
  4109cb:	jmp    412aab <_start@@Base+0xc81b>
  4109d0:	mov    rdx,QWORD PTR [rbp-0x58]
  4109d4:	mov    rcx,QWORD PTR [rbp-0x50]
  4109d8:	mov    rax,QWORD PTR [rbp-0x48]
  4109dc:	mov    rsi,rcx
  4109df:	mov    rdi,rax
  4109e2:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4109e7:	mov    QWORD PTR [rbp-0x50],rax
  4109eb:	endbr64 
  4109ef:	jmp    412aab <_start@@Base+0xc81b>
  4109f4:	movabs rax,0x796f66737472696e
  4109fe:	cmp    QWORD PTR [rbp-0x28],rax
  410a02:	jne    410d24 <_start@@Base+0xaa94>
  410a08:	add    QWORD PTR [rbp-0x50],0x8
  410a0d:	mov    rdx,QWORD PTR [rbp-0x58]
  410a11:	mov    rax,QWORD PTR [rbp-0x50]
  410a15:	mov    rsi,rdx
  410a18:	mov    rdi,rax
  410a1b:	call   406876 <_start@@Base+0x5e6>
  410a20:	mov    QWORD PTR [rbp-0x28],rax
  410a24:	movabs rax,0xffff000000000000
  410a2e:	and    rax,QWORD PTR [rbp-0x28]
  410a32:	mov    rdx,rax
  410a35:	movabs rax,0x6732000000000000
  410a3f:	cmp    rdx,rax
  410a42:	jne    410b94 <_start@@Base+0xa904>
  410a48:	mov    rax,QWORD PTR [rbp-0x50]
  410a4c:	mov    QWORD PTR [rbp-0x20],rax
  410a50:	mov    rdx,QWORD PTR [rbp-0x58]
  410a54:	mov    rsi,QWORD PTR [rbp-0x20]
  410a58:	mov    rax,QWORD PTR [rbp-0x48]
  410a5c:	mov    ecx,0x2
  410a61:	mov    rdi,rax
  410a64:	call   406d6d <_start@@Base+0xadd>
  410a69:	mov    QWORD PTR [rbp-0x50],rax
  410a6d:	mov    rax,QWORD PTR [rbp-0x20]
  410a71:	cmp    rax,QWORD PTR [rbp-0x50]
  410a75:	je     410b74 <_start@@Base+0xa8e4>
  410a7b:	mov    rax,QWORD PTR [rbp-0x48]
  410a7f:	mov    rax,QWORD PTR [rax]
  410a82:	mov    rdi,rax
  410a85:	call   41eb95 <flatcc_builder_start_offset_vector@@Base>
  410a8a:	test   eax,eax
  410a8c:	jne    412c2b <_start@@Base+0xc99b>
  410a92:	lea    rcx,[rbp-0x40]
  410a96:	mov    rdx,QWORD PTR [rbp-0x58]
  410a9a:	mov    rsi,QWORD PTR [rbp-0x50]
  410a9e:	mov    rax,QWORD PTR [rbp-0x48]
  410aa2:	mov    rdi,rax
  410aa5:	call   406b72 <_start@@Base+0x8e2>
  410aaa:	mov    QWORD PTR [rbp-0x50],rax
  410aae:	jmp    410b1f <_start@@Base+0xa88f>
  410ab0:	lea    rcx,[rbp-0x3c]
  410ab4:	mov    rdx,QWORD PTR [rbp-0x58]
  410ab8:	mov    rsi,QWORD PTR [rbp-0x50]
  410abc:	mov    rax,QWORD PTR [rbp-0x48]
  410ac0:	mov    rdi,rax
  410ac3:	call   42975d <flatcc_json_parser_build_string@@Base>
  410ac8:	mov    QWORD PTR [rbp-0x50],rax
  410acc:	mov    eax,DWORD PTR [rbp-0x3c]
  410acf:	test   eax,eax
  410ad1:	je     412c31 <_start@@Base+0xc9a1>
  410ad7:	mov    rax,QWORD PTR [rbp-0x48]
  410adb:	mov    rax,QWORD PTR [rax]
  410ade:	mov    esi,0x1
  410ae3:	mov    rdi,rax
  410ae6:	call   41e574 <flatcc_builder_extend_offset_vector@@Base>
  410aeb:	mov    QWORD PTR [rbp-0x18],rax
  410aef:	cmp    QWORD PTR [rbp-0x18],0x0
  410af4:	je     412c31 <_start@@Base+0xc9a1>
  410afa:	mov    edx,DWORD PTR [rbp-0x3c]
  410afd:	mov    rax,QWORD PTR [rbp-0x18]
  410b01:	mov    DWORD PTR [rax],edx
  410b03:	lea    rcx,[rbp-0x40]
  410b07:	mov    rdx,QWORD PTR [rbp-0x58]
  410b0b:	mov    rsi,QWORD PTR [rbp-0x50]
  410b0f:	mov    rax,QWORD PTR [rbp-0x48]
  410b13:	mov    rdi,rax
  410b16:	call   406c2f <_start@@Base+0x99f>
  410b1b:	mov    QWORD PTR [rbp-0x50],rax
  410b1f:	mov    eax,DWORD PTR [rbp-0x40]
  410b22:	test   eax,eax
  410b24:	jne    410ab0 <_start@@Base+0xa820>
  410b26:	mov    rax,QWORD PTR [rbp-0x48]
  410b2a:	mov    rax,QWORD PTR [rax]
  410b2d:	mov    rdi,rax
  410b30:	call   420192 <flatcc_builder_end_offset_vector@@Base>
  410b35:	mov    DWORD PTR [rbp-0x3c],eax
  410b38:	mov    eax,DWORD PTR [rbp-0x3c]
  410b3b:	test   eax,eax
  410b3d:	je     412c37 <_start@@Base+0xc9a7>
  410b43:	mov    rax,QWORD PTR [rbp-0x48]
  410b47:	mov    rax,QWORD PTR [rax]
  410b4a:	mov    esi,0x1c
  410b4f:	mov    rdi,rax
  410b52:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  410b57:	mov    QWORD PTR [rbp-0x18],rax
  410b5b:	cmp    QWORD PTR [rbp-0x18],0x0
  410b60:	je     412c37 <_start@@Base+0xc9a7>
  410b66:	mov    edx,DWORD PTR [rbp-0x3c]
  410b69:	mov    rax,QWORD PTR [rbp-0x18]
  410b6d:	mov    DWORD PTR [rax],edx
  410b6f:	jmp    412aab <_start@@Base+0xc81b>
  410b74:	mov    rdx,QWORD PTR [rbp-0x58]
  410b78:	mov    rcx,QWORD PTR [rbp-0x50]
  410b7c:	mov    rax,QWORD PTR [rbp-0x48]
  410b80:	mov    rsi,rcx
  410b83:	mov    rdi,rax
  410b86:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  410b8b:	mov    QWORD PTR [rbp-0x50],rax
  410b8f:	jmp    412aab <_start@@Base+0xc81b>
  410b94:	movabs rax,0xff00000000000000
  410b9e:	and    rax,QWORD PTR [rbp-0x28]
  410ba2:	mov    rdx,rax
  410ba5:	movabs rax,0x6700000000000000
  410baf:	cmp    rdx,rax
  410bb2:	jne    410d04 <_start@@Base+0xaa74>
  410bb8:	mov    rax,QWORD PTR [rbp-0x50]
  410bbc:	mov    QWORD PTR [rbp-0x20],rax
  410bc0:	mov    rdx,QWORD PTR [rbp-0x58]
  410bc4:	mov    rsi,QWORD PTR [rbp-0x20]
  410bc8:	mov    rax,QWORD PTR [rbp-0x48]
  410bcc:	mov    ecx,0x1
  410bd1:	mov    rdi,rax
  410bd4:	call   406d6d <_start@@Base+0xadd>
  410bd9:	mov    QWORD PTR [rbp-0x50],rax
  410bdd:	mov    rax,QWORD PTR [rbp-0x20]
  410be1:	cmp    rax,QWORD PTR [rbp-0x50]
  410be5:	je     410ce4 <_start@@Base+0xaa54>
  410beb:	mov    rax,QWORD PTR [rbp-0x48]
  410bef:	mov    rax,QWORD PTR [rax]
  410bf2:	mov    rdi,rax
  410bf5:	call   41eb95 <flatcc_builder_start_offset_vector@@Base>
  410bfa:	test   eax,eax
  410bfc:	jne    412c3d <_start@@Base+0xc9ad>
  410c02:	lea    rcx,[rbp-0x40]
  410c06:	mov    rdx,QWORD PTR [rbp-0x58]
  410c0a:	mov    rsi,QWORD PTR [rbp-0x50]
  410c0e:	mov    rax,QWORD PTR [rbp-0x48]
  410c12:	mov    rdi,rax
  410c15:	call   406b72 <_start@@Base+0x8e2>
  410c1a:	mov    QWORD PTR [rbp-0x50],rax
  410c1e:	jmp    410c8f <_start@@Base+0xa9ff>
  410c20:	lea    rcx,[rbp-0x3c]
  410c24:	mov    rdx,QWORD PTR [rbp-0x58]
  410c28:	mov    rsi,QWORD PTR [rbp-0x50]
  410c2c:	mov    rax,QWORD PTR [rbp-0x48]
  410c30:	mov    rdi,rax
  410c33:	call   42975d <flatcc_json_parser_build_string@@Base>
  410c38:	mov    QWORD PTR [rbp-0x50],rax
  410c3c:	mov    eax,DWORD PTR [rbp-0x3c]
  410c3f:	test   eax,eax
  410c41:	je     412c43 <_start@@Base+0xc9b3>
  410c47:	mov    rax,QWORD PTR [rbp-0x48]
  410c4b:	mov    rax,QWORD PTR [rax]
  410c4e:	mov    esi,0x1
  410c53:	mov    rdi,rax
  410c56:	call   41e574 <flatcc_builder_extend_offset_vector@@Base>
  410c5b:	mov    QWORD PTR [rbp-0x18],rax
  410c5f:	cmp    QWORD PTR [rbp-0x18],0x0
  410c64:	je     412c43 <_start@@Base+0xc9b3>
  410c6a:	mov    edx,DWORD PTR [rbp-0x3c]
  410c6d:	mov    rax,QWORD PTR [rbp-0x18]
  410c71:	mov    DWORD PTR [rax],edx
  410c73:	lea    rcx,[rbp-0x40]
  410c77:	mov    rdx,QWORD PTR [rbp-0x58]
  410c7b:	mov    rsi,QWORD PTR [rbp-0x50]
  410c7f:	mov    rax,QWORD PTR [rbp-0x48]
  410c83:	mov    rdi,rax
  410c86:	call   406c2f <_start@@Base+0x99f>
  410c8b:	mov    QWORD PTR [rbp-0x50],rax
  410c8f:	mov    eax,DWORD PTR [rbp-0x40]
  410c92:	test   eax,eax
  410c94:	jne    410c20 <_start@@Base+0xa990>
  410c96:	mov    rax,QWORD PTR [rbp-0x48]
  410c9a:	mov    rax,QWORD PTR [rax]
  410c9d:	mov    rdi,rax
  410ca0:	call   420192 <flatcc_builder_end_offset_vector@@Base>
  410ca5:	mov    DWORD PTR [rbp-0x3c],eax
  410ca8:	mov    eax,DWORD PTR [rbp-0x3c]
  410cab:	test   eax,eax
  410cad:	je     412c49 <_start@@Base+0xc9b9>
  410cb3:	mov    rax,QWORD PTR [rbp-0x48]
  410cb7:	mov    rax,QWORD PTR [rax]
  410cba:	mov    esi,0xa
  410cbf:	mov    rdi,rax
  410cc2:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  410cc7:	mov    QWORD PTR [rbp-0x18],rax
  410ccb:	cmp    QWORD PTR [rbp-0x18],0x0
  410cd0:	je     412c49 <_start@@Base+0xc9b9>
  410cd6:	mov    edx,DWORD PTR [rbp-0x3c]
  410cd9:	mov    rax,QWORD PTR [rbp-0x18]
  410cdd:	mov    DWORD PTR [rax],edx
  410cdf:	jmp    412aab <_start@@Base+0xc81b>
  410ce4:	mov    rdx,QWORD PTR [rbp-0x58]
  410ce8:	mov    rcx,QWORD PTR [rbp-0x50]
  410cec:	mov    rax,QWORD PTR [rbp-0x48]
  410cf0:	mov    rsi,rcx
  410cf3:	mov    rdi,rax
  410cf6:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  410cfb:	mov    QWORD PTR [rbp-0x50],rax
  410cff:	jmp    412aab <_start@@Base+0xc81b>
  410d04:	mov    rdx,QWORD PTR [rbp-0x58]
  410d08:	mov    rcx,QWORD PTR [rbp-0x50]
  410d0c:	mov    rax,QWORD PTR [rbp-0x48]
  410d10:	mov    rsi,rcx
  410d13:	mov    rdi,rax
  410d16:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  410d1b:	mov    QWORD PTR [rbp-0x50],rax
  410d1f:	jmp    412aab <_start@@Base+0xc81b>
  410d24:	movabs rax,0x796f667461626c65
  410d2e:	cmp    QWORD PTR [rbp-0x28],rax
  410d32:	jne    410ee4 <_start@@Base+0xac54>
  410d38:	add    QWORD PTR [rbp-0x50],0x8
  410d3d:	mov    rdx,QWORD PTR [rbp-0x58]
  410d41:	mov    rax,QWORD PTR [rbp-0x50]
  410d45:	mov    rsi,rdx
  410d48:	mov    rdi,rax
  410d4b:	call   406876 <_start@@Base+0x5e6>
  410d50:	mov    QWORD PTR [rbp-0x28],rax
  410d54:	movabs rax,0xff00000000000000
  410d5e:	and    rax,QWORD PTR [rbp-0x28]
  410d62:	mov    rdx,rax
  410d65:	movabs rax,0x7300000000000000
  410d6f:	cmp    rdx,rax
  410d72:	jne    410ec4 <_start@@Base+0xac34>
  410d78:	mov    rax,QWORD PTR [rbp-0x50]
  410d7c:	mov    QWORD PTR [rbp-0x20],rax
  410d80:	mov    rdx,QWORD PTR [rbp-0x58]
  410d84:	mov    rsi,QWORD PTR [rbp-0x20]
  410d88:	mov    rax,QWORD PTR [rbp-0x48]
  410d8c:	mov    ecx,0x1
  410d91:	mov    rdi,rax
  410d94:	call   406d6d <_start@@Base+0xadd>
  410d99:	mov    QWORD PTR [rbp-0x50],rax
  410d9d:	mov    rax,QWORD PTR [rbp-0x20]
  410da1:	cmp    rax,QWORD PTR [rbp-0x50]
  410da5:	je     410ea4 <_start@@Base+0xac14>
  410dab:	mov    rax,QWORD PTR [rbp-0x48]
  410daf:	mov    rax,QWORD PTR [rax]
  410db2:	mov    rdi,rax
  410db5:	call   41eb95 <flatcc_builder_start_offset_vector@@Base>
  410dba:	test   eax,eax
  410dbc:	jne    412c4f <_start@@Base+0xc9bf>
  410dc2:	lea    rcx,[rbp-0x40]
  410dc6:	mov    rdx,QWORD PTR [rbp-0x58]
  410dca:	mov    rsi,QWORD PTR [rbp-0x50]
  410dce:	mov    rax,QWORD PTR [rbp-0x48]
  410dd2:	mov    rdi,rax
  410dd5:	call   406b72 <_start@@Base+0x8e2>
  410dda:	mov    QWORD PTR [rbp-0x50],rax
  410dde:	jmp    410e4f <_start@@Base+0xabbf>
  410de0:	lea    rcx,[rbp-0x3c]
  410de4:	mov    rdx,QWORD PTR [rbp-0x58]
  410de8:	mov    rsi,QWORD PTR [rbp-0x50]
  410dec:	mov    rax,QWORD PTR [rbp-0x48]
  410df0:	mov    rdi,rax
  410df3:	call   40f3c3 <_start@@Base+0x9133>
  410df8:	mov    QWORD PTR [rbp-0x50],rax
  410dfc:	mov    eax,DWORD PTR [rbp-0x3c]
  410dff:	test   eax,eax
  410e01:	je     412c55 <_start@@Base+0xc9c5>
  410e07:	mov    rax,QWORD PTR [rbp-0x48]
  410e0b:	mov    rax,QWORD PTR [rax]
  410e0e:	mov    esi,0x1
  410e13:	mov    rdi,rax
  410e16:	call   41e574 <flatcc_builder_extend_offset_vector@@Base>
  410e1b:	mov    QWORD PTR [rbp-0x18],rax
  410e1f:	cmp    QWORD PTR [rbp-0x18],0x0
  410e24:	je     412c55 <_start@@Base+0xc9c5>
  410e2a:	mov    edx,DWORD PTR [rbp-0x3c]
  410e2d:	mov    rax,QWORD PTR [rbp-0x18]
  410e31:	mov    DWORD PTR [rax],edx
  410e33:	lea    rcx,[rbp-0x40]
  410e37:	mov    rdx,QWORD PTR [rbp-0x58]
  410e3b:	mov    rsi,QWORD PTR [rbp-0x50]
  410e3f:	mov    rax,QWORD PTR [rbp-0x48]
  410e43:	mov    rdi,rax
  410e46:	call   406c2f <_start@@Base+0x99f>
  410e4b:	mov    QWORD PTR [rbp-0x50],rax
  410e4f:	mov    eax,DWORD PTR [rbp-0x40]
  410e52:	test   eax,eax
  410e54:	jne    410de0 <_start@@Base+0xab50>
  410e56:	mov    rax,QWORD PTR [rbp-0x48]
  410e5a:	mov    rax,QWORD PTR [rax]
  410e5d:	mov    rdi,rax
  410e60:	call   420192 <flatcc_builder_end_offset_vector@@Base>
  410e65:	mov    DWORD PTR [rbp-0x3c],eax
  410e68:	mov    eax,DWORD PTR [rbp-0x3c]
  410e6b:	test   eax,eax
  410e6d:	je     412c58 <_start@@Base+0xc9c8>
  410e73:	mov    rax,QWORD PTR [rbp-0x48]
  410e77:	mov    rax,QWORD PTR [rax]
  410e7a:	mov    esi,0xb
  410e7f:	mov    rdi,rax
  410e82:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  410e87:	mov    QWORD PTR [rbp-0x18],rax
  410e8b:	cmp    QWORD PTR [rbp-0x18],0x0
  410e90:	je     412c58 <_start@@Base+0xc9c8>
  410e96:	mov    edx,DWORD PTR [rbp-0x3c]
  410e99:	mov    rax,QWORD PTR [rbp-0x18]
  410e9d:	mov    DWORD PTR [rax],edx
  410e9f:	jmp    412aab <_start@@Base+0xc81b>
  410ea4:	mov    rdx,QWORD PTR [rbp-0x58]
  410ea8:	mov    rcx,QWORD PTR [rbp-0x50]
  410eac:	mov    rax,QWORD PTR [rbp-0x48]
  410eb0:	mov    rsi,rcx
  410eb3:	mov    rdi,rax
  410eb6:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  410ebb:	mov    QWORD PTR [rbp-0x50],rax
  410ebf:	jmp    412aab <_start@@Base+0xc81b>
  410ec4:	mov    rdx,QWORD PTR [rbp-0x58]
  410ec8:	mov    rcx,QWORD PTR [rbp-0x50]
  410ecc:	mov    rax,QWORD PTR [rbp-0x48]
  410ed0:	mov    rsi,rcx
  410ed3:	mov    rdi,rax
  410ed6:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  410edb:	mov    QWORD PTR [rbp-0x50],rax
  410edf:	jmp    412aab <_start@@Base+0xc81b>
  410ee4:	mov    rdx,QWORD PTR [rbp-0x58]
  410ee8:	mov    rcx,QWORD PTR [rbp-0x50]
  410eec:	mov    rax,QWORD PTR [rbp-0x48]
  410ef0:	mov    rsi,rcx
  410ef3:	mov    rdi,rax
  410ef6:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  410efb:	mov    QWORD PTR [rbp-0x50],rax
  410eff:	jmp    412aab <_start@@Base+0xc81b>
  410f04:	movabs rax,0x74657374656d7073
  410f0e:	cmp    QWORD PTR [rbp-0x28],rax
  410f12:	ja     411197 <_start@@Base+0xaf07>
  410f18:	movabs rax,0x7465737462617365
  410f22:	cmp    QWORD PTR [rbp-0x28],rax
  410f26:	jne    411033 <_start@@Base+0xada3>
  410f2c:	add    QWORD PTR [rbp-0x50],0x8
  410f31:	mov    rdx,QWORD PTR [rbp-0x58]
  410f35:	mov    rax,QWORD PTR [rbp-0x50]
  410f39:	mov    rsi,rdx
  410f3c:	mov    rdi,rax
  410f3f:	call   406876 <_start@@Base+0x5e6>
  410f44:	mov    QWORD PTR [rbp-0x28],rax
  410f48:	movabs rax,0xffff000000000000
  410f52:	and    rax,QWORD PTR [rbp-0x28]
  410f56:	mov    rdx,rax
  410f59:	movabs rax,0x3634000000000000
  410f63:	cmp    rdx,rax
  410f66:	jne    411013 <_start@@Base+0xad83>
  410f6c:	mov    rax,QWORD PTR [rbp-0x50]
  410f70:	mov    QWORD PTR [rbp-0x20],rax
  410f74:	mov    rdx,QWORD PTR [rbp-0x58]
  410f78:	mov    rsi,QWORD PTR [rbp-0x20]
  410f7c:	mov    rax,QWORD PTR [rbp-0x48]
  410f80:	mov    ecx,0x2
  410f85:	mov    rdi,rax
  410f88:	call   406d6d <_start@@Base+0xadd>
  410f8d:	mov    QWORD PTR [rbp-0x50],rax
  410f91:	mov    rax,QWORD PTR [rbp-0x20]
  410f95:	cmp    rax,QWORD PTR [rbp-0x50]
  410f99:	je     410ff3 <_start@@Base+0xad63>
  410f9b:	lea    rcx,[rbp-0x3c]
  410f9f:	mov    rdx,QWORD PTR [rbp-0x58]
  410fa3:	mov    rsi,QWORD PTR [rbp-0x50]
  410fa7:	mov    rax,QWORD PTR [rbp-0x48]
  410fab:	mov    rdi,rax
  410fae:	call   40efd9 <_start@@Base+0x8d49>
  410fb3:	mov    QWORD PTR [rbp-0x50],rax
  410fb7:	mov    eax,DWORD PTR [rbp-0x3c]
  410fba:	test   eax,eax
  410fbc:	je     412c5b <_start@@Base+0xc9cb>
  410fc2:	mov    rax,QWORD PTR [rbp-0x48]
  410fc6:	mov    rax,QWORD PTR [rax]
  410fc9:	mov    esi,0x23
  410fce:	mov    rdi,rax
  410fd1:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  410fd6:	mov    QWORD PTR [rbp-0x18],rax
  410fda:	cmp    QWORD PTR [rbp-0x18],0x0
  410fdf:	je     412c5b <_start@@Base+0xc9cb>
  410fe5:	mov    edx,DWORD PTR [rbp-0x3c]
  410fe8:	mov    rax,QWORD PTR [rbp-0x18]
  410fec:	mov    DWORD PTR [rax],edx
  410fee:	jmp    412aab <_start@@Base+0xc81b>
  410ff3:	mov    rdx,QWORD PTR [rbp-0x58]
  410ff7:	mov    rcx,QWORD PTR [rbp-0x50]
  410ffb:	mov    rax,QWORD PTR [rbp-0x48]
  410fff:	mov    rsi,rcx
  411002:	mov    rdi,rax
  411005:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41100a:	mov    QWORD PTR [rbp-0x50],rax
  41100e:	jmp    412aab <_start@@Base+0xc81b>
  411013:	mov    rdx,QWORD PTR [rbp-0x58]
  411017:	mov    rcx,QWORD PTR [rbp-0x50]
  41101b:	mov    rax,QWORD PTR [rbp-0x48]
  41101f:	mov    rsi,rcx
  411022:	mov    rdi,rax
  411025:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41102a:	mov    QWORD PTR [rbp-0x50],rax
  41102e:	jmp    412aab <_start@@Base+0xc81b>
  411033:	movabs rax,0x74657374626f6f6c
  41103d:	cmp    QWORD PTR [rbp-0x28],rax
  411041:	jne    411177 <_start@@Base+0xaee7>
  411047:	mov    rax,QWORD PTR [rbp-0x50]
  41104b:	mov    QWORD PTR [rbp-0x20],rax
  41104f:	mov    rdx,QWORD PTR [rbp-0x58]
  411053:	mov    rsi,QWORD PTR [rbp-0x20]
  411057:	mov    rax,QWORD PTR [rbp-0x48]
  41105b:	mov    ecx,0x8
  411060:	mov    rdi,rax
  411063:	call   406d6d <_start@@Base+0xadd>
  411068:	mov    QWORD PTR [rbp-0x50],rax
  41106c:	mov    rax,QWORD PTR [rbp-0x20]
  411070:	cmp    rax,QWORD PTR [rbp-0x50]
  411074:	je     411157 <_start@@Base+0xaec7>
  41107a:	mov    BYTE PTR [rbp-0x30],0x0
  41107e:	mov    rax,QWORD PTR [rbp-0x50]
  411082:	mov    QWORD PTR [rbp-0x20],rax
  411086:	lea    rcx,[rbp-0x30]
  41108a:	mov    rdx,QWORD PTR [rbp-0x58]
  41108e:	mov    rsi,QWORD PTR [rbp-0x20]
  411092:	mov    rax,QWORD PTR [rbp-0x48]
  411096:	mov    rdi,rax
  411099:	call   407a7e <_start@@Base+0x17ee>
  41109e:	mov    QWORD PTR [rbp-0x50],rax
  4110a2:	mov    rax,QWORD PTR [rbp-0x20]
  4110a6:	cmp    rax,QWORD PTR [rbp-0x50]
  4110aa:	jne    4110f6 <_start@@Base+0xae66>
  4110ac:	mov    rax,QWORD PTR [rbp-0x50]
  4110b0:	mov    QWORD PTR [rbp-0x20],rax
  4110b4:	lea    rcx,[rbp-0x30]
  4110b8:	mov    rdx,QWORD PTR [rbp-0x58]
  4110bc:	mov    rsi,QWORD PTR [rbp-0x20]
  4110c0:	mov    rax,QWORD PTR [rbp-0x48]
  4110c4:	mov    r8,rcx
  4110c7:	lea    rcx,[rip+0x364d2]        # 4475a0 <__data_start@@Base+0x4e0>
  4110ce:	mov    rdi,rax
  4110d1:	call   408660 <_start@@Base+0x23d0>
  4110d6:	mov    QWORD PTR [rbp-0x50],rax
  4110da:	mov    rax,QWORD PTR [rbp-0x50]
  4110de:	cmp    rax,QWORD PTR [rbp-0x20]
  4110e2:	je     412c5e <_start@@Base+0xc9ce>
  4110e8:	mov    rax,QWORD PTR [rbp-0x50]
  4110ec:	cmp    rax,QWORD PTR [rbp-0x58]
  4110f0:	je     412c5e <_start@@Base+0xc9ce>
  4110f6:	movzx  eax,BYTE PTR [rbp-0x30]
  4110fa:	cmp    al,0x1
  4110fc:	jne    411110 <_start@@Base+0xae80>
  4110fe:	mov    rax,QWORD PTR [rbp-0x48]
  411102:	mov    eax,DWORD PTR [rax+0x10]
  411105:	and    eax,0x2
  411108:	test   eax,eax
  41110a:	je     412aab <_start@@Base+0xc81b>
  411110:	mov    rax,QWORD PTR [rbp-0x48]
  411114:	mov    rax,QWORD PTR [rax]
  411117:	mov    ecx,0x1
  41111c:	mov    edx,0x1
  411121:	mov    esi,0xf
  411126:	mov    rdi,rax
  411129:	call   420ef1 <flatcc_builder_table_add@@Base>
  41112e:	mov    QWORD PTR [rbp-0x10],rax
  411132:	cmp    QWORD PTR [rbp-0x10],0x0
  411137:	je     412c61 <_start@@Base+0xc9d1>
  41113d:	movzx  eax,BYTE PTR [rbp-0x30]
  411141:	movzx  edx,al
  411144:	mov    rax,QWORD PTR [rbp-0x10]
  411148:	mov    esi,edx
  41114a:	mov    rdi,rax
  41114d:	call   4065d1 <_start@@Base+0x341>
  411152:	jmp    412aab <_start@@Base+0xc81b>
  411157:	mov    rdx,QWORD PTR [rbp-0x58]
  41115b:	mov    rcx,QWORD PTR [rbp-0x50]
  41115f:	mov    rax,QWORD PTR [rbp-0x48]
  411163:	mov    rsi,rcx
  411166:	mov    rdi,rax
  411169:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41116e:	mov    QWORD PTR [rbp-0x50],rax
  411172:	jmp    412aab <_start@@Base+0xc81b>
  411177:	mov    rdx,QWORD PTR [rbp-0x58]
  41117b:	mov    rcx,QWORD PTR [rbp-0x50]
  41117f:	mov    rax,QWORD PTR [rbp-0x48]
  411183:	mov    rsi,rcx
  411186:	mov    rdi,rax
  411189:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41118e:	mov    QWORD PTR [rbp-0x50],rax
  411192:	jmp    412aab <_start@@Base+0xc81b>
  411197:	movabs rax,0x7465737465ffffff
  4111a1:	cmp    QWORD PTR [rbp-0x28],rax
  4111a5:	ja     4112e6 <_start@@Base+0xb056>
  4111ab:	movabs rax,0x74657374656d7074
  4111b5:	cmp    QWORD PTR [rbp-0x28],rax
  4111b9:	jne    4112c6 <_start@@Base+0xb036>
  4111bf:	add    QWORD PTR [rbp-0x50],0x8
  4111c4:	mov    rdx,QWORD PTR [rbp-0x58]
  4111c8:	mov    rax,QWORD PTR [rbp-0x50]
  4111cc:	mov    rsi,rdx
  4111cf:	mov    rdi,rax
  4111d2:	call   406876 <_start@@Base+0x5e6>
  4111d7:	mov    QWORD PTR [rbp-0x28],rax
  4111db:	movabs rax,0xff00000000000000
  4111e5:	and    rax,QWORD PTR [rbp-0x28]
  4111e9:	mov    rdx,rax
  4111ec:	movabs rax,0x7900000000000000
  4111f6:	cmp    rdx,rax
  4111f9:	jne    4112a6 <_start@@Base+0xb016>
  4111ff:	mov    rax,QWORD PTR [rbp-0x50]
  411203:	mov    QWORD PTR [rbp-0x20],rax
  411207:	mov    rdx,QWORD PTR [rbp-0x58]
  41120b:	mov    rsi,QWORD PTR [rbp-0x20]
  41120f:	mov    rax,QWORD PTR [rbp-0x48]
  411213:	mov    ecx,0x1
  411218:	mov    rdi,rax
  41121b:	call   406d6d <_start@@Base+0xadd>
  411220:	mov    QWORD PTR [rbp-0x50],rax
  411224:	mov    rax,QWORD PTR [rbp-0x20]
  411228:	cmp    rax,QWORD PTR [rbp-0x50]
  41122c:	je     411286 <_start@@Base+0xaff6>
  41122e:	lea    rcx,[rbp-0x3c]
  411232:	mov    rdx,QWORD PTR [rbp-0x58]
  411236:	mov    rsi,QWORD PTR [rbp-0x50]
  41123a:	mov    rax,QWORD PTR [rbp-0x48]
  41123e:	mov    rdi,rax
  411241:	call   40cd29 <_start@@Base+0x6a99>
  411246:	mov    QWORD PTR [rbp-0x50],rax
  41124a:	mov    eax,DWORD PTR [rbp-0x3c]
  41124d:	test   eax,eax
  41124f:	je     412c64 <_start@@Base+0xc9d4>
  411255:	mov    rax,QWORD PTR [rbp-0x48]
  411259:	mov    rax,QWORD PTR [rax]
  41125c:	mov    esi,0xe
  411261:	mov    rdi,rax
  411264:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  411269:	mov    QWORD PTR [rbp-0x18],rax
  41126d:	cmp    QWORD PTR [rbp-0x18],0x0
  411272:	je     412c64 <_start@@Base+0xc9d4>
  411278:	mov    edx,DWORD PTR [rbp-0x3c]
  41127b:	mov    rax,QWORD PTR [rbp-0x18]
  41127f:	mov    DWORD PTR [rax],edx
  411281:	jmp    412aab <_start@@Base+0xc81b>
  411286:	mov    rdx,QWORD PTR [rbp-0x58]
  41128a:	mov    rcx,QWORD PTR [rbp-0x50]
  41128e:	mov    rax,QWORD PTR [rbp-0x48]
  411292:	mov    rsi,rcx
  411295:	mov    rdi,rax
  411298:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41129d:	mov    QWORD PTR [rbp-0x50],rax
  4112a1:	jmp    412aab <_start@@Base+0xc81b>
  4112a6:	mov    rdx,QWORD PTR [rbp-0x58]
  4112aa:	mov    rcx,QWORD PTR [rbp-0x50]
  4112ae:	mov    rax,QWORD PTR [rbp-0x48]
  4112b2:	mov    rsi,rcx
  4112b5:	mov    rdi,rax
  4112b8:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4112bd:	mov    QWORD PTR [rbp-0x50],rax
  4112c1:	jmp    412aab <_start@@Base+0xc81b>
  4112c6:	mov    rdx,QWORD PTR [rbp-0x58]
  4112ca:	mov    rcx,QWORD PTR [rbp-0x50]
  4112ce:	mov    rax,QWORD PTR [rbp-0x48]
  4112d2:	mov    rsi,rcx
  4112d5:	mov    rdi,rax
  4112d8:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4112dd:	mov    QWORD PTR [rbp-0x50],rax
  4112e1:	jmp    412aab <_start@@Base+0xc81b>
  4112e6:	mov    rax,QWORD PTR [rbp-0x28]
  4112ea:	mov    ax,0x0
  4112ee:	mov    rdx,rax
  4112f1:	movabs rax,0x7465737466320000
  4112fb:	cmp    rdx,rax
  4112fe:	jne    411448 <_start@@Base+0xb1b8>
  411304:	mov    rax,QWORD PTR [rbp-0x50]
  411308:	mov    QWORD PTR [rbp-0x20],rax
  41130c:	mov    rdx,QWORD PTR [rbp-0x58]
  411310:	mov    rsi,QWORD PTR [rbp-0x20]
  411314:	mov    rax,QWORD PTR [rbp-0x48]
  411318:	mov    ecx,0x6
  41131d:	mov    rdi,rax
  411320:	call   406d6d <_start@@Base+0xadd>
  411325:	mov    QWORD PTR [rbp-0x50],rax
  411329:	mov    rax,QWORD PTR [rbp-0x20]
  41132d:	cmp    rax,QWORD PTR [rbp-0x50]
  411331:	je     411428 <_start@@Base+0xb198>
  411337:	vxorps xmm0,xmm0,xmm0
  41133b:	vmovss DWORD PTR [rbp-0x30],xmm0
  411340:	mov    rax,QWORD PTR [rbp-0x50]
  411344:	mov    QWORD PTR [rbp-0x20],rax
  411348:	lea    rcx,[rbp-0x30]
  41134c:	mov    rdx,QWORD PTR [rbp-0x58]
  411350:	mov    rsi,QWORD PTR [rbp-0x20]
  411354:	mov    rax,QWORD PTR [rbp-0x48]
  411358:	mov    rdi,rax
  41135b:	call   428c8d <flatcc_json_parser_float@@Base>
  411360:	mov    QWORD PTR [rbp-0x50],rax
  411364:	mov    rax,QWORD PTR [rbp-0x20]
  411368:	cmp    rax,QWORD PTR [rbp-0x50]
  41136c:	jne    4113b8 <_start@@Base+0xb128>
  41136e:	mov    rax,QWORD PTR [rbp-0x50]
  411372:	mov    QWORD PTR [rbp-0x20],rax
  411376:	lea    rcx,[rbp-0x30]
  41137a:	mov    rdx,QWORD PTR [rbp-0x58]
  41137e:	mov    rsi,QWORD PTR [rbp-0x20]
  411382:	mov    rax,QWORD PTR [rbp-0x48]
  411386:	mov    r8,rcx
  411389:	lea    rcx,[rip+0x36230]        # 4475c0 <__data_start@@Base+0x500>
  411390:	mov    rdi,rax
  411393:	call   4087b9 <_start@@Base+0x2529>
  411398:	mov    QWORD PTR [rbp-0x50],rax
  41139c:	mov    rax,QWORD PTR [rbp-0x50]
  4113a0:	cmp    rax,QWORD PTR [rbp-0x20]
  4113a4:	je     412c67 <_start@@Base+0xc9d7>
  4113aa:	mov    rax,QWORD PTR [rbp-0x50]
  4113ae:	cmp    rax,QWORD PTR [rbp-0x58]
  4113b2:	je     412c67 <_start@@Base+0xc9d7>
  4113b8:	vmovss xmm0,DWORD PTR [rbp-0x30]
  4113bd:	vucomiss xmm0,DWORD PTR [rip+0x29b7b]        # 43af40 <_IO_stdin_used@@Base+0x3f40>
  4113c5:	jp     4113e3 <_start@@Base+0xb153>
  4113c7:	vucomiss xmm0,DWORD PTR [rip+0x29b71]        # 43af40 <_IO_stdin_used@@Base+0x3f40>
  4113cf:	jne    4113e3 <_start@@Base+0xb153>
  4113d1:	mov    rax,QWORD PTR [rbp-0x48]
  4113d5:	mov    eax,DWORD PTR [rax+0x10]
  4113d8:	and    eax,0x2
  4113db:	test   eax,eax
  4113dd:	je     412aab <_start@@Base+0xc81b>
  4113e3:	mov    rax,QWORD PTR [rbp-0x48]
  4113e7:	mov    rax,QWORD PTR [rax]
  4113ea:	mov    ecx,0x4
  4113ef:	mov    edx,0x4
  4113f4:	mov    esi,0x1a
  4113f9:	mov    rdi,rax
  4113fc:	call   420ef1 <flatcc_builder_table_add@@Base>
  411401:	mov    QWORD PTR [rbp-0x10],rax
  411405:	cmp    QWORD PTR [rbp-0x10],0x0
  41140a:	je     412c6a <_start@@Base+0xc9da>
  411410:	mov    edx,DWORD PTR [rbp-0x30]
  411413:	mov    rax,QWORD PTR [rbp-0x10]
  411417:	vmovd  xmm0,edx
  41141b:	mov    rdi,rax
  41141e:	call   40653e <_start@@Base+0x2ae>
  411423:	jmp    412aab <_start@@Base+0xc81b>
  411428:	mov    rdx,QWORD PTR [rbp-0x58]
  41142c:	mov    rcx,QWORD PTR [rbp-0x50]
  411430:	mov    rax,QWORD PTR [rbp-0x48]
  411434:	mov    rsi,rcx
  411437:	mov    rdi,rax
  41143a:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41143f:	mov    QWORD PTR [rbp-0x50],rax
  411443:	jmp    412aab <_start@@Base+0xc81b>
  411448:	mov    rax,QWORD PTR [rbp-0x28]
  41144c:	and    rax,0xffffffffff000000
  411452:	mov    rdx,rax
  411455:	movabs rax,0x7465737466000000
  41145f:	cmp    rdx,rax
  411462:	jne    4115ac <_start@@Base+0xb31c>
  411468:	mov    rax,QWORD PTR [rbp-0x50]
  41146c:	mov    QWORD PTR [rbp-0x20],rax
  411470:	mov    rdx,QWORD PTR [rbp-0x58]
  411474:	mov    rsi,QWORD PTR [rbp-0x20]
  411478:	mov    rax,QWORD PTR [rbp-0x48]
  41147c:	mov    ecx,0x5
  411481:	mov    rdi,rax
  411484:	call   406d6d <_start@@Base+0xadd>
  411489:	mov    QWORD PTR [rbp-0x50],rax
  41148d:	mov    rax,QWORD PTR [rbp-0x20]
  411491:	cmp    rax,QWORD PTR [rbp-0x50]
  411495:	je     41158c <_start@@Base+0xb2fc>
  41149b:	vxorps xmm0,xmm0,xmm0
  41149f:	vmovss DWORD PTR [rbp-0x30],xmm0
  4114a4:	mov    rax,QWORD PTR [rbp-0x50]
  4114a8:	mov    QWORD PTR [rbp-0x20],rax
  4114ac:	lea    rcx,[rbp-0x30]
  4114b0:	mov    rdx,QWORD PTR [rbp-0x58]
  4114b4:	mov    rsi,QWORD PTR [rbp-0x20]
  4114b8:	mov    rax,QWORD PTR [rbp-0x48]
  4114bc:	mov    rdi,rax
  4114bf:	call   428c8d <flatcc_json_parser_float@@Base>
  4114c4:	mov    QWORD PTR [rbp-0x50],rax
  4114c8:	mov    rax,QWORD PTR [rbp-0x20]
  4114cc:	cmp    rax,QWORD PTR [rbp-0x50]
  4114d0:	jne    41151c <_start@@Base+0xb28c>
  4114d2:	mov    rax,QWORD PTR [rbp-0x50]
  4114d6:	mov    QWORD PTR [rbp-0x20],rax
  4114da:	lea    rcx,[rbp-0x30]
  4114de:	mov    rdx,QWORD PTR [rbp-0x58]
  4114e2:	mov    rsi,QWORD PTR [rbp-0x20]
  4114e6:	mov    rax,QWORD PTR [rbp-0x48]
  4114ea:	mov    r8,rcx
  4114ed:	lea    rcx,[rip+0x360ec]        # 4475e0 <__data_start@@Base+0x520>
  4114f4:	mov    rdi,rax
  4114f7:	call   4087b9 <_start@@Base+0x2529>
  4114fc:	mov    QWORD PTR [rbp-0x50],rax
  411500:	mov    rax,QWORD PTR [rbp-0x50]
  411504:	cmp    rax,QWORD PTR [rbp-0x20]
  411508:	je     412c6d <_start@@Base+0xc9dd>
  41150e:	mov    rax,QWORD PTR [rbp-0x50]
  411512:	cmp    rax,QWORD PTR [rbp-0x58]
  411516:	je     412c6d <_start@@Base+0xc9dd>
  41151c:	vmovss xmm0,DWORD PTR [rbp-0x30]
  411521:	vucomiss xmm0,DWORD PTR [rip+0x29a1b]        # 43af44 <_IO_stdin_used@@Base+0x3f44>
  411529:	jp     411547 <_start@@Base+0xb2b7>
  41152b:	vucomiss xmm0,DWORD PTR [rip+0x29a11]        # 43af44 <_IO_stdin_used@@Base+0x3f44>
  411533:	jne    411547 <_start@@Base+0xb2b7>
  411535:	mov    rax,QWORD PTR [rbp-0x48]
  411539:	mov    eax,DWORD PTR [rax+0x10]
  41153c:	and    eax,0x2
  41153f:	test   eax,eax
  411541:	je     412aab <_start@@Base+0xc81b>
  411547:	mov    rax,QWORD PTR [rbp-0x48]
  41154b:	mov    rax,QWORD PTR [rax]
  41154e:	mov    ecx,0x4
  411553:	mov    edx,0x4
  411558:	mov    esi,0x19
  41155d:	mov    rdi,rax
  411560:	call   420ef1 <flatcc_builder_table_add@@Base>
  411565:	mov    QWORD PTR [rbp-0x10],rax
  411569:	cmp    QWORD PTR [rbp-0x10],0x0
  41156e:	je     412c70 <_start@@Base+0xc9e0>
  411574:	mov    edx,DWORD PTR [rbp-0x30]
  411577:	mov    rax,QWORD PTR [rbp-0x10]
  41157b:	vmovd  xmm0,edx
  41157f:	mov    rdi,rax
  411582:	call   40653e <_start@@Base+0x2ae>
  411587:	jmp    412aab <_start@@Base+0xc81b>
  41158c:	mov    rdx,QWORD PTR [rbp-0x58]
  411590:	mov    rcx,QWORD PTR [rbp-0x50]
  411594:	mov    rax,QWORD PTR [rbp-0x48]
  411598:	mov    rsi,rcx
  41159b:	mov    rdi,rax
  41159e:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4115a3:	mov    QWORD PTR [rbp-0x50],rax
  4115a7:	jmp    412aab <_start@@Base+0xc81b>
  4115ac:	mov    rdx,QWORD PTR [rbp-0x58]
  4115b0:	mov    rcx,QWORD PTR [rbp-0x50]
  4115b4:	mov    rax,QWORD PTR [rbp-0x48]
  4115b8:	mov    rsi,rcx
  4115bb:	mov    rdi,rax
  4115be:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4115c3:	mov    QWORD PTR [rbp-0x50],rax
  4115c7:	jmp    412aab <_start@@Base+0xc81b>
  4115cc:	movabs rax,0x7465737468617367
  4115d6:	cmp    QWORD PTR [rbp-0x28],rax
  4115da:	ja     411762 <_start@@Base+0xb4d2>
  4115e0:	mov    rax,QWORD PTR [rbp-0x28]
  4115e4:	mov    ax,0x0
  4115e8:	mov    rdx,rax
  4115eb:	movabs rax,0x7465737466330000
  4115f5:	cmp    rdx,rax
  4115f8:	jne    411742 <_start@@Base+0xb4b2>
  4115fe:	mov    rax,QWORD PTR [rbp-0x50]
  411602:	mov    QWORD PTR [rbp-0x20],rax
  411606:	mov    rdx,QWORD PTR [rbp-0x58]
  41160a:	mov    rsi,QWORD PTR [rbp-0x20]
  41160e:	mov    rax,QWORD PTR [rbp-0x48]
  411612:	mov    ecx,0x6
  411617:	mov    rdi,rax
  41161a:	call   406d6d <_start@@Base+0xadd>
  41161f:	mov    QWORD PTR [rbp-0x50],rax
  411623:	mov    rax,QWORD PTR [rbp-0x20]
  411627:	cmp    rax,QWORD PTR [rbp-0x50]
  41162b:	je     411722 <_start@@Base+0xb492>
  411631:	vxorps xmm0,xmm0,xmm0
  411635:	vmovss DWORD PTR [rbp-0x30],xmm0
  41163a:	mov    rax,QWORD PTR [rbp-0x50]
  41163e:	mov    QWORD PTR [rbp-0x20],rax
  411642:	lea    rcx,[rbp-0x30]
  411646:	mov    rdx,QWORD PTR [rbp-0x58]
  41164a:	mov    rsi,QWORD PTR [rbp-0x20]
  41164e:	mov    rax,QWORD PTR [rbp-0x48]
  411652:	mov    rdi,rax
  411655:	call   428c8d <flatcc_json_parser_float@@Base>
  41165a:	mov    QWORD PTR [rbp-0x50],rax
  41165e:	mov    rax,QWORD PTR [rbp-0x20]
  411662:	cmp    rax,QWORD PTR [rbp-0x50]
  411666:	jne    4116b2 <_start@@Base+0xb422>
  411668:	mov    rax,QWORD PTR [rbp-0x50]
  41166c:	mov    QWORD PTR [rbp-0x20],rax
  411670:	lea    rcx,[rbp-0x30]
  411674:	mov    rdx,QWORD PTR [rbp-0x58]
  411678:	mov    rsi,QWORD PTR [rbp-0x20]
  41167c:	mov    rax,QWORD PTR [rbp-0x48]
  411680:	mov    r8,rcx
  411683:	lea    rcx,[rip+0x35f76]        # 447600 <__data_start@@Base+0x540>
  41168a:	mov    rdi,rax
  41168d:	call   4087b9 <_start@@Base+0x2529>
  411692:	mov    QWORD PTR [rbp-0x50],rax
  411696:	mov    rax,QWORD PTR [rbp-0x50]
  41169a:	cmp    rax,QWORD PTR [rbp-0x20]
  41169e:	je     412c73 <_start@@Base+0xc9e3>
  4116a4:	mov    rax,QWORD PTR [rbp-0x50]
  4116a8:	cmp    rax,QWORD PTR [rbp-0x58]
  4116ac:	je     412c73 <_start@@Base+0xc9e3>
  4116b2:	vmovss xmm0,DWORD PTR [rbp-0x30]
  4116b7:	vxorps xmm1,xmm1,xmm1
  4116bb:	vucomiss xmm0,xmm1
  4116bf:	jp     4116dd <_start@@Base+0xb44d>
  4116c1:	vxorps xmm1,xmm1,xmm1
  4116c5:	vucomiss xmm0,xmm1
  4116c9:	jne    4116dd <_start@@Base+0xb44d>
  4116cb:	mov    rax,QWORD PTR [rbp-0x48]
  4116cf:	mov    eax,DWORD PTR [rax+0x10]
  4116d2:	and    eax,0x2
  4116d5:	test   eax,eax
  4116d7:	je     412aab <_start@@Base+0xc81b>
  4116dd:	mov    rax,QWORD PTR [rbp-0x48]
  4116e1:	mov    rax,QWORD PTR [rax]
  4116e4:	mov    ecx,0x4
  4116e9:	mov    edx,0x4
  4116ee:	mov    esi,0x1b
  4116f3:	mov    rdi,rax
  4116f6:	call   420ef1 <flatcc_builder_table_add@@Base>
  4116fb:	mov    QWORD PTR [rbp-0x10],rax
  4116ff:	cmp    QWORD PTR [rbp-0x10],0x0
  411704:	je     412c76 <_start@@Base+0xc9e6>
  41170a:	mov    edx,DWORD PTR [rbp-0x30]
  41170d:	mov    rax,QWORD PTR [rbp-0x10]
  411711:	vmovd  xmm0,edx
  411715:	mov    rdi,rax
  411718:	call   40653e <_start@@Base+0x2ae>
  41171d:	jmp    412aab <_start@@Base+0xc81b>
  411722:	mov    rdx,QWORD PTR [rbp-0x58]
  411726:	mov    rcx,QWORD PTR [rbp-0x50]
  41172a:	mov    rax,QWORD PTR [rbp-0x48]
  41172e:	mov    rsi,rcx
  411731:	mov    rdi,rax
  411734:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  411739:	mov    QWORD PTR [rbp-0x50],rax
  41173d:	jmp    412aab <_start@@Base+0xc81b>
  411742:	mov    rdx,QWORD PTR [rbp-0x58]
  411746:	mov    rcx,QWORD PTR [rbp-0x50]
  41174a:	mov    rax,QWORD PTR [rbp-0x48]
  41174e:	mov    rsi,rcx
  411751:	mov    rdi,rax
  411754:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  411759:	mov    QWORD PTR [rbp-0x50],rax
  41175d:	jmp    412aab <_start@@Base+0xc81b>
  411762:	movabs rax,0x7465737468617368
  41176c:	cmp    QWORD PTR [rbp-0x28],rax
  411770:	jne    4122ee <_start@@Base+0xc05e>
  411776:	add    QWORD PTR [rbp-0x50],0x8
  41177b:	mov    rdx,QWORD PTR [rbp-0x58]
  41177f:	mov    rax,QWORD PTR [rbp-0x50]
  411783:	mov    rsi,rdx
  411786:	mov    rdi,rax
  411789:	call   406876 <_start@@Base+0x5e6>
  41178e:	mov    QWORD PTR [rbp-0x28],rax
  411792:	movabs rax,0x7336345f666e7630
  41179c:	cmp    QWORD PTR [rbp-0x28],rax
  4117a0:	ja     411a76 <_start@@Base+0xb7e6>
  4117a6:	movabs rax,0x7333325f666e7631
  4117b0:	cmp    QWORD PTR [rbp-0x28],rax
  4117b4:	jne    411a56 <_start@@Base+0xb7c6>
  4117ba:	mov    rax,QWORD PTR [rbp-0x50]
  4117be:	mov    QWORD PTR [rbp-0x20],rax
  4117c2:	mov    rdx,QWORD PTR [rbp-0x58]
  4117c6:	mov    rsi,QWORD PTR [rbp-0x20]
  4117ca:	mov    rax,QWORD PTR [rbp-0x48]
  4117ce:	mov    ecx,0x8
  4117d3:	mov    rdi,rax
  4117d6:	call   406d6d <_start@@Base+0xadd>
  4117db:	mov    QWORD PTR [rbp-0x50],rax
  4117df:	mov    rax,QWORD PTR [rbp-0x20]
  4117e3:	cmp    rax,QWORD PTR [rbp-0x50]
  4117e7:	je     4118c8 <_start@@Base+0xb638>
  4117ed:	mov    DWORD PTR [rbp-0x30],0x0
  4117f4:	mov    rax,QWORD PTR [rbp-0x50]
  4117f8:	mov    QWORD PTR [rbp-0x20],rax
  4117fc:	lea    rcx,[rbp-0x30]
  411800:	mov    rdx,QWORD PTR [rbp-0x58]
  411804:	mov    rsi,QWORD PTR [rbp-0x20]
  411808:	mov    rax,QWORD PTR [rbp-0x48]
  41180c:	mov    rdi,rax
  41180f:	call   407830 <_start@@Base+0x15a0>
  411814:	mov    QWORD PTR [rbp-0x50],rax
  411818:	mov    rax,QWORD PTR [rbp-0x20]
  41181c:	cmp    rax,QWORD PTR [rbp-0x50]
  411820:	jne    41186c <_start@@Base+0xb5dc>
  411822:	mov    rax,QWORD PTR [rbp-0x50]
  411826:	mov    QWORD PTR [rbp-0x20],rax
  41182a:	lea    rcx,[rbp-0x30]
  41182e:	mov    rdx,QWORD PTR [rbp-0x58]
  411832:	mov    rsi,QWORD PTR [rbp-0x20]
  411836:	mov    rax,QWORD PTR [rbp-0x48]
  41183a:	mov    r8,rcx
  41183d:	lea    rcx,[rip+0x35ddc]        # 447620 <__data_start@@Base+0x560>
  411844:	mov    rdi,rax
  411847:	call   408244 <_start@@Base+0x1fb4>
  41184c:	mov    QWORD PTR [rbp-0x50],rax
  411850:	mov    rax,QWORD PTR [rbp-0x50]
  411854:	cmp    rax,QWORD PTR [rbp-0x20]
  411858:	je     412c79 <_start@@Base+0xc9e9>
  41185e:	mov    rax,QWORD PTR [rbp-0x50]
  411862:	cmp    rax,QWORD PTR [rbp-0x58]
  411866:	je     412c79 <_start@@Base+0xc9e9>
  41186c:	mov    eax,DWORD PTR [rbp-0x30]
  41186f:	test   eax,eax
  411871:	jne    411885 <_start@@Base+0xb5f5>
  411873:	mov    rax,QWORD PTR [rbp-0x48]
  411877:	mov    eax,DWORD PTR [rax+0x10]
  41187a:	and    eax,0x2
  41187d:	test   eax,eax
  41187f:	je     412aab <_start@@Base+0xc81b>
  411885:	mov    rax,QWORD PTR [rbp-0x48]
  411889:	mov    rax,QWORD PTR [rax]
  41188c:	mov    ecx,0x4
  411891:	mov    edx,0x4
  411896:	mov    esi,0x10
  41189b:	mov    rdi,rax
  41189e:	call   420ef1 <flatcc_builder_table_add@@Base>
  4118a3:	mov    QWORD PTR [rbp-0x10],rax
  4118a7:	cmp    QWORD PTR [rbp-0x10],0x0
  4118ac:	je     412c7c <_start@@Base+0xc9ec>
  4118b2:	mov    edx,DWORD PTR [rbp-0x30]
  4118b5:	mov    rax,QWORD PTR [rbp-0x10]
  4118b9:	mov    esi,edx
  4118bb:	mov    rdi,rax
  4118be:	call   4064c3 <_start@@Base+0x233>
  4118c3:	jmp    412aab <_start@@Base+0xc81b>
  4118c8:	add    QWORD PTR [rbp-0x50],0x8
  4118cd:	mov    rdx,QWORD PTR [rbp-0x58]
  4118d1:	mov    rax,QWORD PTR [rbp-0x50]
  4118d5:	mov    rsi,rdx
  4118d8:	mov    rdi,rax
  4118db:	call   406876 <_start@@Base+0x5e6>
  4118e0:	mov    QWORD PTR [rbp-0x28],rax
  4118e4:	movabs rax,0xff00000000000000
  4118ee:	and    rax,QWORD PTR [rbp-0x28]
  4118f2:	mov    rdx,rax
  4118f5:	movabs rax,0x6100000000000000
  4118ff:	cmp    rdx,rax
  411902:	jne    411a36 <_start@@Base+0xb7a6>
  411908:	mov    rax,QWORD PTR [rbp-0x50]
  41190c:	mov    QWORD PTR [rbp-0x20],rax
  411910:	mov    rdx,QWORD PTR [rbp-0x58]
  411914:	mov    rsi,QWORD PTR [rbp-0x20]
  411918:	mov    rax,QWORD PTR [rbp-0x48]
  41191c:	mov    ecx,0x1
  411921:	mov    rdi,rax
  411924:	call   406d6d <_start@@Base+0xadd>
  411929:	mov    QWORD PTR [rbp-0x50],rax
  41192d:	mov    rax,QWORD PTR [rbp-0x20]
  411931:	cmp    rax,QWORD PTR [rbp-0x50]
  411935:	je     411a16 <_start@@Base+0xb786>
  41193b:	mov    DWORD PTR [rbp-0x30],0x0
  411942:	mov    rax,QWORD PTR [rbp-0x50]
  411946:	mov    QWORD PTR [rbp-0x20],rax
  41194a:	lea    rcx,[rbp-0x30]
  41194e:	mov    rdx,QWORD PTR [rbp-0x58]
  411952:	mov    rsi,QWORD PTR [rbp-0x20]
  411956:	mov    rax,QWORD PTR [rbp-0x48]
  41195a:	mov    rdi,rax
  41195d:	call   407830 <_start@@Base+0x15a0>
  411962:	mov    QWORD PTR [rbp-0x50],rax
  411966:	mov    rax,QWORD PTR [rbp-0x20]
  41196a:	cmp    rax,QWORD PTR [rbp-0x50]
  41196e:	jne    4119ba <_start@@Base+0xb72a>
  411970:	mov    rax,QWORD PTR [rbp-0x50]
  411974:	mov    QWORD PTR [rbp-0x20],rax
  411978:	lea    rcx,[rbp-0x30]
  41197c:	mov    rdx,QWORD PTR [rbp-0x58]
  411980:	mov    rsi,QWORD PTR [rbp-0x20]
  411984:	mov    rax,QWORD PTR [rbp-0x48]
  411988:	mov    r8,rcx
  41198b:	lea    rcx,[rip+0x35cae]        # 447640 <__data_start@@Base+0x580>
  411992:	mov    rdi,rax
  411995:	call   408244 <_start@@Base+0x1fb4>
  41199a:	mov    QWORD PTR [rbp-0x50],rax
  41199e:	mov    rax,QWORD PTR [rbp-0x50]
  4119a2:	cmp    rax,QWORD PTR [rbp-0x20]
  4119a6:	je     412c7f <_start@@Base+0xc9ef>
  4119ac:	mov    rax,QWORD PTR [rbp-0x50]
  4119b0:	cmp    rax,QWORD PTR [rbp-0x58]
  4119b4:	je     412c7f <_start@@Base+0xc9ef>
  4119ba:	mov    eax,DWORD PTR [rbp-0x30]
  4119bd:	test   eax,eax
  4119bf:	jne    4119d3 <_start@@Base+0xb743>
  4119c1:	mov    rax,QWORD PTR [rbp-0x48]
  4119c5:	mov    eax,DWORD PTR [rax+0x10]
  4119c8:	and    eax,0x2
  4119cb:	test   eax,eax
  4119cd:	je     412aab <_start@@Base+0xc81b>
  4119d3:	mov    rax,QWORD PTR [rbp-0x48]
  4119d7:	mov    rax,QWORD PTR [rax]
  4119da:	mov    ecx,0x4
  4119df:	mov    edx,0x4
  4119e4:	mov    esi,0x14
  4119e9:	mov    rdi,rax
  4119ec:	call   420ef1 <flatcc_builder_table_add@@Base>
  4119f1:	mov    QWORD PTR [rbp-0x10],rax
  4119f5:	cmp    QWORD PTR [rbp-0x10],0x0
  4119fa:	je     412c82 <_start@@Base+0xc9f2>
  411a00:	mov    edx,DWORD PTR [rbp-0x30]
  411a03:	mov    rax,QWORD PTR [rbp-0x10]
  411a07:	mov    esi,edx
  411a09:	mov    rdi,rax
  411a0c:	call   4064c3 <_start@@Base+0x233>
  411a11:	jmp    412aab <_start@@Base+0xc81b>
  411a16:	mov    rdx,QWORD PTR [rbp-0x58]
  411a1a:	mov    rcx,QWORD PTR [rbp-0x50]
  411a1e:	mov    rax,QWORD PTR [rbp-0x48]
  411a22:	mov    rsi,rcx
  411a25:	mov    rdi,rax
  411a28:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  411a2d:	mov    QWORD PTR [rbp-0x50],rax
  411a31:	jmp    412aab <_start@@Base+0xc81b>
  411a36:	mov    rdx,QWORD PTR [rbp-0x58]
  411a3a:	mov    rcx,QWORD PTR [rbp-0x50]
  411a3e:	mov    rax,QWORD PTR [rbp-0x48]
  411a42:	mov    rsi,rcx
  411a45:	mov    rdi,rax
  411a48:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  411a4d:	mov    QWORD PTR [rbp-0x50],rax
  411a51:	jmp    412aab <_start@@Base+0xc81b>
  411a56:	mov    rdx,QWORD PTR [rbp-0x58]
  411a5a:	mov    rcx,QWORD PTR [rbp-0x50]
  411a5e:	mov    rax,QWORD PTR [rbp-0x48]
  411a62:	mov    rsi,rcx
  411a65:	mov    rdi,rax
  411a68:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  411a6d:	mov    QWORD PTR [rbp-0x50],rax
  411a71:	jmp    412aab <_start@@Base+0xc81b>
  411a76:	movabs rax,0x7533325f666e7630
  411a80:	cmp    QWORD PTR [rbp-0x28],rax
  411a84:	ja     411d64 <_start@@Base+0xbad4>
  411a8a:	movabs rax,0x7336345f666e7631
  411a94:	cmp    QWORD PTR [rbp-0x28],rax
  411a98:	jne    411d44 <_start@@Base+0xbab4>
  411a9e:	mov    rax,QWORD PTR [rbp-0x50]
  411aa2:	mov    QWORD PTR [rbp-0x20],rax
  411aa6:	mov    rdx,QWORD PTR [rbp-0x58]
  411aaa:	mov    rsi,QWORD PTR [rbp-0x20]
  411aae:	mov    rax,QWORD PTR [rbp-0x48]
  411ab2:	mov    ecx,0x8
  411ab7:	mov    rdi,rax
  411aba:	call   406d6d <_start@@Base+0xadd>
  411abf:	mov    QWORD PTR [rbp-0x50],rax
  411ac3:	mov    rax,QWORD PTR [rbp-0x20]
  411ac7:	cmp    rax,QWORD PTR [rbp-0x50]
  411acb:	je     411bb1 <_start@@Base+0xb921>
  411ad1:	mov    QWORD PTR [rbp-0x30],0x0
  411ad9:	mov    rax,QWORD PTR [rbp-0x50]
  411add:	mov    QWORD PTR [rbp-0x20],rax
  411ae1:	lea    rcx,[rbp-0x30]
  411ae5:	mov    rdx,QWORD PTR [rbp-0x58]
  411ae9:	mov    rsi,QWORD PTR [rbp-0x20]
  411aed:	mov    rax,QWORD PTR [rbp-0x48]
  411af1:	mov    rdi,rax
  411af4:	call   407769 <_start@@Base+0x14d9>
  411af9:	mov    QWORD PTR [rbp-0x50],rax
  411afd:	mov    rax,QWORD PTR [rbp-0x20]
  411b01:	cmp    rax,QWORD PTR [rbp-0x50]
  411b05:	jne    411b51 <_start@@Base+0xb8c1>
  411b07:	mov    rax,QWORD PTR [rbp-0x50]
  411b0b:	mov    QWORD PTR [rbp-0x20],rax
  411b0f:	lea    rcx,[rbp-0x30]
  411b13:	mov    rdx,QWORD PTR [rbp-0x58]
  411b17:	mov    rsi,QWORD PTR [rbp-0x20]
  411b1b:	mov    rax,QWORD PTR [rbp-0x48]
  411b1f:	mov    r8,rcx
  411b22:	lea    rcx,[rip+0x35b37]        # 447660 <__data_start@@Base+0x5a0>
  411b29:	mov    rdi,rax
  411b2c:	call   4080e1 <_start@@Base+0x1e51>
  411b31:	mov    QWORD PTR [rbp-0x50],rax
  411b35:	mov    rax,QWORD PTR [rbp-0x50]
  411b39:	cmp    rax,QWORD PTR [rbp-0x20]
  411b3d:	je     412c85 <_start@@Base+0xc9f5>
  411b43:	mov    rax,QWORD PTR [rbp-0x50]
  411b47:	cmp    rax,QWORD PTR [rbp-0x58]
  411b4b:	je     412c85 <_start@@Base+0xc9f5>
  411b51:	mov    rax,QWORD PTR [rbp-0x30]
  411b55:	test   rax,rax
  411b58:	jne    411b6c <_start@@Base+0xb8dc>
  411b5a:	mov    rax,QWORD PTR [rbp-0x48]
  411b5e:	mov    eax,DWORD PTR [rax+0x10]
  411b61:	and    eax,0x2
  411b64:	test   eax,eax
  411b66:	je     412aab <_start@@Base+0xc81b>
  411b6c:	mov    rax,QWORD PTR [rbp-0x48]
  411b70:	mov    rax,QWORD PTR [rax]
  411b73:	mov    ecx,0x8
  411b78:	mov    edx,0x8
  411b7d:	mov    esi,0x12
  411b82:	mov    rdi,rax
  411b85:	call   420ef1 <flatcc_builder_table_add@@Base>
  411b8a:	mov    QWORD PTR [rbp-0x10],rax
  411b8e:	cmp    QWORD PTR [rbp-0x10],0x0
  411b93:	je     412c88 <_start@@Base+0xc9f8>
  411b99:	mov    rdx,QWORD PTR [rbp-0x30]
  411b9d:	mov    rax,QWORD PTR [rbp-0x10]
  411ba1:	mov    rsi,rdx
  411ba4:	mov    rdi,rax
  411ba7:	call   4064f5 <_start@@Base+0x265>
  411bac:	jmp    412aab <_start@@Base+0xc81b>
  411bb1:	add    QWORD PTR [rbp-0x50],0x8
  411bb6:	mov    rdx,QWORD PTR [rbp-0x58]
  411bba:	mov    rax,QWORD PTR [rbp-0x50]
  411bbe:	mov    rsi,rdx
  411bc1:	mov    rdi,rax
  411bc4:	call   406876 <_start@@Base+0x5e6>
  411bc9:	mov    QWORD PTR [rbp-0x28],rax
  411bcd:	movabs rax,0xff00000000000000
  411bd7:	and    rax,QWORD PTR [rbp-0x28]
  411bdb:	mov    rdx,rax
  411bde:	movabs rax,0x6100000000000000
  411be8:	cmp    rdx,rax
  411beb:	jne    411d24 <_start@@Base+0xba94>
  411bf1:	mov    rax,QWORD PTR [rbp-0x50]
  411bf5:	mov    QWORD PTR [rbp-0x20],rax
  411bf9:	mov    rdx,QWORD PTR [rbp-0x58]
  411bfd:	mov    rsi,QWORD PTR [rbp-0x20]
  411c01:	mov    rax,QWORD PTR [rbp-0x48]
  411c05:	mov    ecx,0x1
  411c0a:	mov    rdi,rax
  411c0d:	call   406d6d <_start@@Base+0xadd>
  411c12:	mov    QWORD PTR [rbp-0x50],rax
  411c16:	mov    rax,QWORD PTR [rbp-0x20]
  411c1a:	cmp    rax,QWORD PTR [rbp-0x50]
  411c1e:	je     411d04 <_start@@Base+0xba74>
  411c24:	mov    QWORD PTR [rbp-0x30],0x0
  411c2c:	mov    rax,QWORD PTR [rbp-0x50]
  411c30:	mov    QWORD PTR [rbp-0x20],rax
  411c34:	lea    rcx,[rbp-0x30]
  411c38:	mov    rdx,QWORD PTR [rbp-0x58]
  411c3c:	mov    rsi,QWORD PTR [rbp-0x20]
  411c40:	mov    rax,QWORD PTR [rbp-0x48]
  411c44:	mov    rdi,rax
  411c47:	call   407769 <_start@@Base+0x14d9>
  411c4c:	mov    QWORD PTR [rbp-0x50],rax
  411c50:	mov    rax,QWORD PTR [rbp-0x20]
  411c54:	cmp    rax,QWORD PTR [rbp-0x50]
  411c58:	jne    411ca4 <_start@@Base+0xba14>
  411c5a:	mov    rax,QWORD PTR [rbp-0x50]
  411c5e:	mov    QWORD PTR [rbp-0x20],rax
  411c62:	lea    rcx,[rbp-0x30]
  411c66:	mov    rdx,QWORD PTR [rbp-0x58]
  411c6a:	mov    rsi,QWORD PTR [rbp-0x20]
  411c6e:	mov    rax,QWORD PTR [rbp-0x48]
  411c72:	mov    r8,rcx
  411c75:	lea    rcx,[rip+0x35a04]        # 447680 <__data_start@@Base+0x5c0>
  411c7c:	mov    rdi,rax
  411c7f:	call   4080e1 <_start@@Base+0x1e51>
  411c84:	mov    QWORD PTR [rbp-0x50],rax
  411c88:	mov    rax,QWORD PTR [rbp-0x50]
  411c8c:	cmp    rax,QWORD PTR [rbp-0x20]
  411c90:	je     412c8b <_start@@Base+0xc9fb>
  411c96:	mov    rax,QWORD PTR [rbp-0x50]
  411c9a:	cmp    rax,QWORD PTR [rbp-0x58]
  411c9e:	je     412c8b <_start@@Base+0xc9fb>
  411ca4:	mov    rax,QWORD PTR [rbp-0x30]
  411ca8:	test   rax,rax
  411cab:	jne    411cbf <_start@@Base+0xba2f>
  411cad:	mov    rax,QWORD PTR [rbp-0x48]
  411cb1:	mov    eax,DWORD PTR [rax+0x10]
  411cb4:	and    eax,0x2
  411cb7:	test   eax,eax
  411cb9:	je     412aab <_start@@Base+0xc81b>
  411cbf:	mov    rax,QWORD PTR [rbp-0x48]
  411cc3:	mov    rax,QWORD PTR [rax]
  411cc6:	mov    ecx,0x8
  411ccb:	mov    edx,0x8
  411cd0:	mov    esi,0x16
  411cd5:	mov    rdi,rax
  411cd8:	call   420ef1 <flatcc_builder_table_add@@Base>
  411cdd:	mov    QWORD PTR [rbp-0x10],rax
  411ce1:	cmp    QWORD PTR [rbp-0x10],0x0
  411ce6:	je     412c8e <_start@@Base+0xc9fe>
  411cec:	mov    rdx,QWORD PTR [rbp-0x30]
  411cf0:	mov    rax,QWORD PTR [rbp-0x10]
  411cf4:	mov    rsi,rdx
  411cf7:	mov    rdi,rax
  411cfa:	call   4064f5 <_start@@Base+0x265>
  411cff:	jmp    412aab <_start@@Base+0xc81b>
  411d04:	mov    rdx,QWORD PTR [rbp-0x58]
  411d08:	mov    rcx,QWORD PTR [rbp-0x50]
  411d0c:	mov    rax,QWORD PTR [rbp-0x48]
  411d10:	mov    rsi,rcx
  411d13:	mov    rdi,rax
  411d16:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  411d1b:	mov    QWORD PTR [rbp-0x50],rax
  411d1f:	jmp    412aab <_start@@Base+0xc81b>
  411d24:	mov    rdx,QWORD PTR [rbp-0x58]
  411d28:	mov    rcx,QWORD PTR [rbp-0x50]
  411d2c:	mov    rax,QWORD PTR [rbp-0x48]
  411d30:	mov    rsi,rcx
  411d33:	mov    rdi,rax
  411d36:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  411d3b:	mov    QWORD PTR [rbp-0x50],rax
  411d3f:	jmp    412aab <_start@@Base+0xc81b>
  411d44:	mov    rdx,QWORD PTR [rbp-0x58]
  411d48:	mov    rcx,QWORD PTR [rbp-0x50]
  411d4c:	mov    rax,QWORD PTR [rbp-0x48]
  411d50:	mov    rsi,rcx
  411d53:	mov    rdi,rax
  411d56:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  411d5b:	mov    QWORD PTR [rbp-0x50],rax
  411d5f:	jmp    412aab <_start@@Base+0xc81b>
  411d64:	movabs rax,0x7533325f666e7631
  411d6e:	cmp    QWORD PTR [rbp-0x28],rax
  411d72:	jne    412014 <_start@@Base+0xbd84>
  411d78:	mov    rax,QWORD PTR [rbp-0x50]
  411d7c:	mov    QWORD PTR [rbp-0x20],rax
  411d80:	mov    rdx,QWORD PTR [rbp-0x58]
  411d84:	mov    rsi,QWORD PTR [rbp-0x20]
  411d88:	mov    rax,QWORD PTR [rbp-0x48]
  411d8c:	mov    ecx,0x8
  411d91:	mov    rdi,rax
  411d94:	call   406d6d <_start@@Base+0xadd>
  411d99:	mov    QWORD PTR [rbp-0x50],rax
  411d9d:	mov    rax,QWORD PTR [rbp-0x20]
  411da1:	cmp    rax,QWORD PTR [rbp-0x50]
  411da5:	je     411e86 <_start@@Base+0xbbf6>
  411dab:	mov    DWORD PTR [rbp-0x30],0x0
  411db2:	mov    rax,QWORD PTR [rbp-0x50]
  411db6:	mov    QWORD PTR [rbp-0x20],rax
  411dba:	lea    rcx,[rbp-0x30]
  411dbe:	mov    rdx,QWORD PTR [rbp-0x58]
  411dc2:	mov    rsi,QWORD PTR [rbp-0x20]
  411dc6:	mov    rax,QWORD PTR [rbp-0x48]
  411dca:	mov    rdi,rax
  411dcd:	call   40751b <_start@@Base+0x128b>
  411dd2:	mov    QWORD PTR [rbp-0x50],rax
  411dd6:	mov    rax,QWORD PTR [rbp-0x20]
  411dda:	cmp    rax,QWORD PTR [rbp-0x50]
  411dde:	jne    411e2a <_start@@Base+0xbb9a>
  411de0:	mov    rax,QWORD PTR [rbp-0x50]
  411de4:	mov    QWORD PTR [rbp-0x20],rax
  411de8:	lea    rcx,[rbp-0x30]
  411dec:	mov    rdx,QWORD PTR [rbp-0x58]
  411df0:	mov    rsi,QWORD PTR [rbp-0x20]
  411df4:	mov    rax,QWORD PTR [rbp-0x48]
  411df8:	mov    r8,rcx
  411dfb:	lea    rcx,[rip+0x3589e]        # 4476a0 <__data_start@@Base+0x5e0>
  411e02:	mov    rdi,rax
  411e05:	call   407ccd <_start@@Base+0x1a3d>
  411e0a:	mov    QWORD PTR [rbp-0x50],rax
  411e0e:	mov    rax,QWORD PTR [rbp-0x50]
  411e12:	cmp    rax,QWORD PTR [rbp-0x20]
  411e16:	je     412c91 <_start@@Base+0xca01>
  411e1c:	mov    rax,QWORD PTR [rbp-0x50]
  411e20:	cmp    rax,QWORD PTR [rbp-0x58]
  411e24:	je     412c91 <_start@@Base+0xca01>
  411e2a:	mov    eax,DWORD PTR [rbp-0x30]
  411e2d:	test   eax,eax
  411e2f:	jne    411e43 <_start@@Base+0xbbb3>
  411e31:	mov    rax,QWORD PTR [rbp-0x48]
  411e35:	mov    eax,DWORD PTR [rax+0x10]
  411e38:	and    eax,0x2
  411e3b:	test   eax,eax
  411e3d:	je     412aab <_start@@Base+0xc81b>
  411e43:	mov    rax,QWORD PTR [rbp-0x48]
  411e47:	mov    rax,QWORD PTR [rax]
  411e4a:	mov    ecx,0x4
  411e4f:	mov    edx,0x4
  411e54:	mov    esi,0x11
  411e59:	mov    rdi,rax
  411e5c:	call   420ef1 <flatcc_builder_table_add@@Base>
  411e61:	mov    QWORD PTR [rbp-0x10],rax
  411e65:	cmp    QWORD PTR [rbp-0x10],0x0
  411e6a:	je     412c94 <_start@@Base+0xca04>
  411e70:	mov    edx,DWORD PTR [rbp-0x30]
  411e73:	mov    rax,QWORD PTR [rbp-0x10]
  411e77:	mov    esi,edx
  411e79:	mov    rdi,rax
  411e7c:	call   4063ef <_start@@Base+0x15f>
  411e81:	jmp    412aab <_start@@Base+0xc81b>
  411e86:	add    QWORD PTR [rbp-0x50],0x8
  411e8b:	mov    rdx,QWORD PTR [rbp-0x58]
  411e8f:	mov    rax,QWORD PTR [rbp-0x50]
  411e93:	mov    rsi,rdx
  411e96:	mov    rdi,rax
  411e99:	call   406876 <_start@@Base+0x5e6>
  411e9e:	mov    QWORD PTR [rbp-0x28],rax
  411ea2:	movabs rax,0xff00000000000000
  411eac:	and    rax,QWORD PTR [rbp-0x28]
  411eb0:	mov    rdx,rax
  411eb3:	movabs rax,0x6100000000000000
  411ebd:	cmp    rdx,rax
  411ec0:	jne    411ff4 <_start@@Base+0xbd64>
  411ec6:	mov    rax,QWORD PTR [rbp-0x50]
  411eca:	mov    QWORD PTR [rbp-0x20],rax
  411ece:	mov    rdx,QWORD PTR [rbp-0x58]
  411ed2:	mov    rsi,QWORD PTR [rbp-0x20]
  411ed6:	mov    rax,QWORD PTR [rbp-0x48]
  411eda:	mov    ecx,0x1
  411edf:	mov    rdi,rax
  411ee2:	call   406d6d <_start@@Base+0xadd>
  411ee7:	mov    QWORD PTR [rbp-0x50],rax
  411eeb:	mov    rax,QWORD PTR [rbp-0x20]
  411eef:	cmp    rax,QWORD PTR [rbp-0x50]
  411ef3:	je     411fd4 <_start@@Base+0xbd44>
  411ef9:	mov    DWORD PTR [rbp-0x30],0x0
  411f00:	mov    rax,QWORD PTR [rbp-0x50]
  411f04:	mov    QWORD PTR [rbp-0x20],rax
  411f08:	lea    rcx,[rbp-0x30]
  411f0c:	mov    rdx,QWORD PTR [rbp-0x58]
  411f10:	mov    rsi,QWORD PTR [rbp-0x20]
  411f14:	mov    rax,QWORD PTR [rbp-0x48]
  411f18:	mov    rdi,rax
  411f1b:	call   40751b <_start@@Base+0x128b>
  411f20:	mov    QWORD PTR [rbp-0x50],rax
  411f24:	mov    rax,QWORD PTR [rbp-0x20]
  411f28:	cmp    rax,QWORD PTR [rbp-0x50]
  411f2c:	jne    411f78 <_start@@Base+0xbce8>
  411f2e:	mov    rax,QWORD PTR [rbp-0x50]
  411f32:	mov    QWORD PTR [rbp-0x20],rax
  411f36:	lea    rcx,[rbp-0x30]
  411f3a:	mov    rdx,QWORD PTR [rbp-0x58]
  411f3e:	mov    rsi,QWORD PTR [rbp-0x20]
  411f42:	mov    rax,QWORD PTR [rbp-0x48]
  411f46:	mov    r8,rcx
  411f49:	lea    rcx,[rip+0x35770]        # 4476c0 <__data_start@@Base+0x600>
  411f50:	mov    rdi,rax
  411f53:	call   407ccd <_start@@Base+0x1a3d>
  411f58:	mov    QWORD PTR [rbp-0x50],rax
  411f5c:	mov    rax,QWORD PTR [rbp-0x50]
  411f60:	cmp    rax,QWORD PTR [rbp-0x20]
  411f64:	je     412c97 <_start@@Base+0xca07>
  411f6a:	mov    rax,QWORD PTR [rbp-0x50]
  411f6e:	cmp    rax,QWORD PTR [rbp-0x58]
  411f72:	je     412c97 <_start@@Base+0xca07>
  411f78:	mov    eax,DWORD PTR [rbp-0x30]
  411f7b:	test   eax,eax
  411f7d:	jne    411f91 <_start@@Base+0xbd01>
  411f7f:	mov    rax,QWORD PTR [rbp-0x48]
  411f83:	mov    eax,DWORD PTR [rax+0x10]
  411f86:	and    eax,0x2
  411f89:	test   eax,eax
  411f8b:	je     412aab <_start@@Base+0xc81b>
  411f91:	mov    rax,QWORD PTR [rbp-0x48]
  411f95:	mov    rax,QWORD PTR [rax]
  411f98:	mov    ecx,0x4
  411f9d:	mov    edx,0x4
  411fa2:	mov    esi,0x15
  411fa7:	mov    rdi,rax
  411faa:	call   420ef1 <flatcc_builder_table_add@@Base>
  411faf:	mov    QWORD PTR [rbp-0x10],rax
  411fb3:	cmp    QWORD PTR [rbp-0x10],0x0
  411fb8:	je     412c9a <_start@@Base+0xca0a>
  411fbe:	mov    edx,DWORD PTR [rbp-0x30]
  411fc1:	mov    rax,QWORD PTR [rbp-0x10]
  411fc5:	mov    esi,edx
  411fc7:	mov    rdi,rax
  411fca:	call   4063ef <_start@@Base+0x15f>
  411fcf:	jmp    412aab <_start@@Base+0xc81b>
  411fd4:	mov    rdx,QWORD PTR [rbp-0x58]
  411fd8:	mov    rcx,QWORD PTR [rbp-0x50]
  411fdc:	mov    rax,QWORD PTR [rbp-0x48]
  411fe0:	mov    rsi,rcx
  411fe3:	mov    rdi,rax
  411fe6:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  411feb:	mov    QWORD PTR [rbp-0x50],rax
  411fef:	jmp    412aab <_start@@Base+0xc81b>
  411ff4:	mov    rdx,QWORD PTR [rbp-0x58]
  411ff8:	mov    rcx,QWORD PTR [rbp-0x50]
  411ffc:	mov    rax,QWORD PTR [rbp-0x48]
  412000:	mov    rsi,rcx
  412003:	mov    rdi,rax
  412006:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41200b:	mov    QWORD PTR [rbp-0x50],rax
  41200f:	jmp    412aab <_start@@Base+0xc81b>
  412014:	movabs rax,0x7536345f666e7631
  41201e:	cmp    QWORD PTR [rbp-0x28],rax
  412022:	jne    4122ce <_start@@Base+0xc03e>
  412028:	mov    rax,QWORD PTR [rbp-0x50]
  41202c:	mov    QWORD PTR [rbp-0x20],rax
  412030:	mov    rdx,QWORD PTR [rbp-0x58]
  412034:	mov    rsi,QWORD PTR [rbp-0x20]
  412038:	mov    rax,QWORD PTR [rbp-0x48]
  41203c:	mov    ecx,0x8
  412041:	mov    rdi,rax
  412044:	call   406d6d <_start@@Base+0xadd>
  412049:	mov    QWORD PTR [rbp-0x50],rax
  41204d:	mov    rax,QWORD PTR [rbp-0x20]
  412051:	cmp    rax,QWORD PTR [rbp-0x50]
  412055:	je     41213b <_start@@Base+0xbeab>
  41205b:	mov    QWORD PTR [rbp-0x30],0x0
  412063:	mov    rax,QWORD PTR [rbp-0x50]
  412067:	mov    QWORD PTR [rbp-0x20],rax
  41206b:	lea    rcx,[rbp-0x30]
  41206f:	mov    rdx,QWORD PTR [rbp-0x58]
  412073:	mov    rsi,QWORD PTR [rbp-0x20]
  412077:	mov    rax,QWORD PTR [rbp-0x48]
  41207b:	mov    rdi,rax
  41207e:	call   407454 <_start@@Base+0x11c4>
  412083:	mov    QWORD PTR [rbp-0x50],rax
  412087:	mov    rax,QWORD PTR [rbp-0x20]
  41208b:	cmp    rax,QWORD PTR [rbp-0x50]
  41208f:	jne    4120db <_start@@Base+0xbe4b>
  412091:	mov    rax,QWORD PTR [rbp-0x50]
  412095:	mov    QWORD PTR [rbp-0x20],rax
  412099:	lea    rcx,[rbp-0x30]
  41209d:	mov    rdx,QWORD PTR [rbp-0x58]
  4120a1:	mov    rsi,QWORD PTR [rbp-0x20]
  4120a5:	mov    rax,QWORD PTR [rbp-0x48]
  4120a9:	mov    r8,rcx
  4120ac:	lea    rcx,[rip+0x3562d]        # 4476e0 <__data_start@@Base+0x620>
  4120b3:	mov    rdi,rax
  4120b6:	call   407b6a <_start@@Base+0x18da>
  4120bb:	mov    QWORD PTR [rbp-0x50],rax
  4120bf:	mov    rax,QWORD PTR [rbp-0x50]
  4120c3:	cmp    rax,QWORD PTR [rbp-0x20]
  4120c7:	je     412c9d <_start@@Base+0xca0d>
  4120cd:	mov    rax,QWORD PTR [rbp-0x50]
  4120d1:	cmp    rax,QWORD PTR [rbp-0x58]
  4120d5:	je     412c9d <_start@@Base+0xca0d>
  4120db:	mov    rax,QWORD PTR [rbp-0x30]
  4120df:	test   rax,rax
  4120e2:	jne    4120f6 <_start@@Base+0xbe66>
  4120e4:	mov    rax,QWORD PTR [rbp-0x48]
  4120e8:	mov    eax,DWORD PTR [rax+0x10]
  4120eb:	and    eax,0x2
  4120ee:	test   eax,eax
  4120f0:	je     412aab <_start@@Base+0xc81b>
  4120f6:	mov    rax,QWORD PTR [rbp-0x48]
  4120fa:	mov    rax,QWORD PTR [rax]
  4120fd:	mov    ecx,0x8
  412102:	mov    edx,0x8
  412107:	mov    esi,0x13
  41210c:	mov    rdi,rax
  41210f:	call   420ef1 <flatcc_builder_table_add@@Base>
  412114:	mov    QWORD PTR [rbp-0x10],rax
  412118:	cmp    QWORD PTR [rbp-0x10],0x0
  41211d:	je     412ca0 <_start@@Base+0xca10>
  412123:	mov    rdx,QWORD PTR [rbp-0x30]
  412127:	mov    rax,QWORD PTR [rbp-0x10]
  41212b:	mov    rsi,rdx
  41212e:	mov    rdi,rax
  412131:	call   406421 <_start@@Base+0x191>
  412136:	jmp    412aab <_start@@Base+0xc81b>
  41213b:	add    QWORD PTR [rbp-0x50],0x8
  412140:	mov    rdx,QWORD PTR [rbp-0x58]
  412144:	mov    rax,QWORD PTR [rbp-0x50]
  412148:	mov    rsi,rdx
  41214b:	mov    rdi,rax
  41214e:	call   406876 <_start@@Base+0x5e6>
  412153:	mov    QWORD PTR [rbp-0x28],rax
  412157:	movabs rax,0xff00000000000000
  412161:	and    rax,QWORD PTR [rbp-0x28]
  412165:	mov    rdx,rax
  412168:	movabs rax,0x6100000000000000
  412172:	cmp    rdx,rax
  412175:	jne    4122ae <_start@@Base+0xc01e>
  41217b:	mov    rax,QWORD PTR [rbp-0x50]
  41217f:	mov    QWORD PTR [rbp-0x20],rax
  412183:	mov    rdx,QWORD PTR [rbp-0x58]
  412187:	mov    rsi,QWORD PTR [rbp-0x20]
  41218b:	mov    rax,QWORD PTR [rbp-0x48]
  41218f:	mov    ecx,0x1
  412194:	mov    rdi,rax
  412197:	call   406d6d <_start@@Base+0xadd>
  41219c:	mov    QWORD PTR [rbp-0x50],rax
  4121a0:	mov    rax,QWORD PTR [rbp-0x20]
  4121a4:	cmp    rax,QWORD PTR [rbp-0x50]
  4121a8:	je     41228e <_start@@Base+0xbffe>
  4121ae:	mov    QWORD PTR [rbp-0x30],0x0
  4121b6:	mov    rax,QWORD PTR [rbp-0x50]
  4121ba:	mov    QWORD PTR [rbp-0x20],rax
  4121be:	lea    rcx,[rbp-0x30]
  4121c2:	mov    rdx,QWORD PTR [rbp-0x58]
  4121c6:	mov    rsi,QWORD PTR [rbp-0x20]
  4121ca:	mov    rax,QWORD PTR [rbp-0x48]
  4121ce:	mov    rdi,rax
  4121d1:	call   407454 <_start@@Base+0x11c4>
  4121d6:	mov    QWORD PTR [rbp-0x50],rax
  4121da:	mov    rax,QWORD PTR [rbp-0x20]
  4121de:	cmp    rax,QWORD PTR [rbp-0x50]
  4121e2:	jne    41222e <_start@@Base+0xbf9e>
  4121e4:	mov    rax,QWORD PTR [rbp-0x50]
  4121e8:	mov    QWORD PTR [rbp-0x20],rax
  4121ec:	lea    rcx,[rbp-0x30]
  4121f0:	mov    rdx,QWORD PTR [rbp-0x58]
  4121f4:	mov    rsi,QWORD PTR [rbp-0x20]
  4121f8:	mov    rax,QWORD PTR [rbp-0x48]
  4121fc:	mov    r8,rcx
  4121ff:	lea    rcx,[rip+0x354fa]        # 447700 <__data_start@@Base+0x640>
  412206:	mov    rdi,rax
  412209:	call   407b6a <_start@@Base+0x18da>
  41220e:	mov    QWORD PTR [rbp-0x50],rax
  412212:	mov    rax,QWORD PTR [rbp-0x50]
  412216:	cmp    rax,QWORD PTR [rbp-0x20]
  41221a:	je     412ca3 <_start@@Base+0xca13>
  412220:	mov    rax,QWORD PTR [rbp-0x50]
  412224:	cmp    rax,QWORD PTR [rbp-0x58]
  412228:	je     412ca3 <_start@@Base+0xca13>
  41222e:	mov    rax,QWORD PTR [rbp-0x30]
  412232:	test   rax,rax
  412235:	jne    412249 <_start@@Base+0xbfb9>
  412237:	mov    rax,QWORD PTR [rbp-0x48]
  41223b:	mov    eax,DWORD PTR [rax+0x10]
  41223e:	and    eax,0x2
  412241:	test   eax,eax
  412243:	je     412aab <_start@@Base+0xc81b>
  412249:	mov    rax,QWORD PTR [rbp-0x48]
  41224d:	mov    rax,QWORD PTR [rax]
  412250:	mov    ecx,0x8
  412255:	mov    edx,0x8
  41225a:	mov    esi,0x17
  41225f:	mov    rdi,rax
  412262:	call   420ef1 <flatcc_builder_table_add@@Base>
  412267:	mov    QWORD PTR [rbp-0x10],rax
  41226b:	cmp    QWORD PTR [rbp-0x10],0x0
  412270:	je     412ca6 <_start@@Base+0xca16>
  412276:	mov    rdx,QWORD PTR [rbp-0x30]
  41227a:	mov    rax,QWORD PTR [rbp-0x10]
  41227e:	mov    rsi,rdx
  412281:	mov    rdi,rax
  412284:	call   406421 <_start@@Base+0x191>
  412289:	jmp    412aab <_start@@Base+0xc81b>
  41228e:	mov    rdx,QWORD PTR [rbp-0x58]
  412292:	mov    rcx,QWORD PTR [rbp-0x50]
  412296:	mov    rax,QWORD PTR [rbp-0x48]
  41229a:	mov    rsi,rcx
  41229d:	mov    rdi,rax
  4122a0:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4122a5:	mov    QWORD PTR [rbp-0x50],rax
  4122a9:	jmp    412aab <_start@@Base+0xc81b>
  4122ae:	mov    rdx,QWORD PTR [rbp-0x58]
  4122b2:	mov    rcx,QWORD PTR [rbp-0x50]
  4122b6:	mov    rax,QWORD PTR [rbp-0x48]
  4122ba:	mov    rsi,rcx
  4122bd:	mov    rdi,rax
  4122c0:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4122c5:	mov    QWORD PTR [rbp-0x50],rax
  4122c9:	jmp    412aab <_start@@Base+0xc81b>
  4122ce:	mov    rdx,QWORD PTR [rbp-0x58]
  4122d2:	mov    rcx,QWORD PTR [rbp-0x50]
  4122d6:	mov    rax,QWORD PTR [rbp-0x48]
  4122da:	mov    rsi,rcx
  4122dd:	mov    rdi,rax
  4122e0:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4122e5:	mov    QWORD PTR [rbp-0x50],rax
  4122e9:	jmp    412aab <_start@@Base+0xc81b>
  4122ee:	movabs rax,0x766563746f725f6e
  4122f8:	cmp    QWORD PTR [rbp-0x28],rax
  4122fc:	ja     41262c <_start@@Base+0xc39c>
  412302:	movabs rax,0x746573746e657374
  41230c:	cmp    QWORD PTR [rbp-0x28],rax
  412310:	jne    41260c <_start@@Base+0xc37c>
  412316:	add    QWORD PTR [rbp-0x50],0x8
  41231b:	mov    rdx,QWORD PTR [rbp-0x58]
  41231f:	mov    rax,QWORD PTR [rbp-0x50]
  412323:	mov    rsi,rdx
  412326:	mov    rdi,rax
  412329:	call   406876 <_start@@Base+0x5e6>
  41232e:	mov    QWORD PTR [rbp-0x28],rax
  412332:	movabs rax,0x6564666c61746275
  41233c:	cmp    QWORD PTR [rbp-0x28],rax
  412340:	jne    4125ec <_start@@Base+0xc35c>
  412346:	add    QWORD PTR [rbp-0x50],0x8
  41234b:	mov    rdx,QWORD PTR [rbp-0x58]
  41234f:	mov    rax,QWORD PTR [rbp-0x50]
  412353:	mov    rsi,rdx
  412356:	mov    rdi,rax
  412359:	call   406876 <_start@@Base+0x5e6>
  41235e:	mov    QWORD PTR [rbp-0x28],rax
  412362:	movabs rax,0xffffffff00000000
  41236c:	and    rax,QWORD PTR [rbp-0x28]
  412370:	mov    rdx,rax
  412373:	movabs rax,0x6666657200000000
  41237d:	cmp    rdx,rax
  412380:	jne    4125cc <_start@@Base+0xc33c>
  412386:	mov    rax,QWORD PTR [rbp-0x50]
  41238a:	mov    QWORD PTR [rbp-0x20],rax
  41238e:	mov    rdx,QWORD PTR [rbp-0x58]
  412392:	mov    rsi,QWORD PTR [rbp-0x20]
  412396:	mov    rax,QWORD PTR [rbp-0x48]
  41239a:	mov    ecx,0x4
  41239f:	mov    rdi,rax
  4123a2:	call   406d6d <_start@@Base+0xadd>
  4123a7:	mov    QWORD PTR [rbp-0x50],rax
  4123ab:	mov    rax,QWORD PTR [rbp-0x20]
  4123af:	cmp    rax,QWORD PTR [rbp-0x50]
  4123b3:	je     4125ac <_start@@Base+0xc31c>
  4123b9:	mov    rax,QWORD PTR [rbp-0x50]
  4123bd:	cmp    rax,QWORD PTR [rbp-0x58]
  4123c1:	je     41250c <_start@@Base+0xc27c>
  4123c7:	mov    rax,QWORD PTR [rbp-0x50]
  4123cb:	movzx  eax,BYTE PTR [rax]
  4123ce:	cmp    al,0x5b
  4123d0:	jne    41250c <_start@@Base+0xc27c>
  4123d6:	mov    rax,QWORD PTR [rbp-0x48]
  4123da:	mov    rax,QWORD PTR [rax]
  4123dd:	mov    ecx,0xffffffff
  4123e2:	mov    edx,0x1
  4123e7:	mov    esi,0x1
  4123ec:	mov    rdi,rax
  4123ef:	call   41eaf3 <flatcc_builder_start_vector@@Base>
  4123f4:	test   eax,eax
  4123f6:	jne    412ca9 <_start@@Base+0xca19>
  4123fc:	lea    rcx,[rbp-0x40]
  412400:	mov    rdx,QWORD PTR [rbp-0x58]
  412404:	mov    rsi,QWORD PTR [rbp-0x50]
  412408:	mov    rax,QWORD PTR [rbp-0x48]
  41240c:	mov    rdi,rax
  41240f:	call   406b72 <_start@@Base+0x8e2>
  412414:	mov    QWORD PTR [rbp-0x50],rax
  412418:	jmp    4124ed <_start@@Base+0xc25d>
  41241d:	mov    BYTE PTR [rbp-0x30],0x0
  412421:	mov    rax,QWORD PTR [rbp-0x48]
  412425:	mov    rax,QWORD PTR [rax]
  412428:	mov    esi,0x1
  41242d:	mov    rdi,rax
  412430:	call   41e3a3 <flatcc_builder_extend_vector@@Base>
  412435:	mov    QWORD PTR [rbp-0x10],rax
  412439:	cmp    QWORD PTR [rbp-0x10],0x0
  41243e:	je     412cac <_start@@Base+0xca1c>
  412444:	mov    rax,QWORD PTR [rbp-0x50]
  412448:	mov    QWORD PTR [rbp-0x20],rax
  41244c:	lea    rcx,[rbp-0x30]
  412450:	mov    rdx,QWORD PTR [rbp-0x58]
  412454:	mov    rsi,QWORD PTR [rbp-0x20]
  412458:	mov    rax,QWORD PTR [rbp-0x48]
  41245c:	mov    rdi,rax
  41245f:	call   4076a6 <_start@@Base+0x1416>
  412464:	mov    QWORD PTR [rbp-0x50],rax
  412468:	mov    rax,QWORD PTR [rbp-0x20]
  41246c:	cmp    rax,QWORD PTR [rbp-0x50]
  412470:	jne    4124bc <_start@@Base+0xc22c>
  412472:	mov    rax,QWORD PTR [rbp-0x50]
  412476:	mov    QWORD PTR [rbp-0x20],rax
  41247a:	lea    rcx,[rbp-0x30]
  41247e:	mov    rdx,QWORD PTR [rbp-0x58]
  412482:	mov    rsi,QWORD PTR [rbp-0x20]
  412486:	mov    rax,QWORD PTR [rbp-0x48]
  41248a:	mov    r8,rcx
  41248d:	lea    rcx,[rip+0x3528c]        # 447720 <__data_start@@Base+0x660>
  412494:	mov    rdi,rax
  412497:	call   407f88 <_start@@Base+0x1cf8>
  41249c:	mov    QWORD PTR [rbp-0x50],rax
  4124a0:	mov    rax,QWORD PTR [rbp-0x50]
  4124a4:	cmp    rax,QWORD PTR [rbp-0x20]
  4124a8:	je     412caf <_start@@Base+0xca1f>
  4124ae:	mov    rax,QWORD PTR [rbp-0x50]
  4124b2:	cmp    rax,QWORD PTR [rbp-0x58]
  4124b6:	je     412caf <_start@@Base+0xca1f>
  4124bc:	movzx  eax,BYTE PTR [rbp-0x30]
  4124c0:	movzx  edx,al
  4124c3:	mov    rax,QWORD PTR [rbp-0x10]
  4124c7:	mov    esi,edx
  4124c9:	mov    rdi,rax
  4124cc:	call   406385 <_start@@Base+0xf5>
  4124d1:	lea    rcx,[rbp-0x40]
  4124d5:	mov    rdx,QWORD PTR [rbp-0x58]
  4124d9:	mov    rsi,QWORD PTR [rbp-0x50]
  4124dd:	mov    rax,QWORD PTR [rbp-0x48]
  4124e1:	mov    rdi,rax
  4124e4:	call   406c2f <_start@@Base+0x99f>
  4124e9:	mov    QWORD PTR [rbp-0x50],rax
  4124ed:	mov    eax,DWORD PTR [rbp-0x40]
  4124f0:	test   eax,eax
  4124f2:	jne    41241d <_start@@Base+0xc18d>
  4124f8:	mov    rax,QWORD PTR [rbp-0x48]
  4124fc:	mov    rax,QWORD PTR [rax]
  4124ff:	mov    rdi,rax
  412502:	call   41fce8 <flatcc_builder_end_vector@@Base>
  412507:	mov    DWORD PTR [rbp-0x3c],eax
  41250a:	jmp    412570 <_start@@Base+0xc2e0>
  41250c:	mov    rax,QWORD PTR [rbp-0x48]
  412510:	mov    rax,QWORD PTR [rax]
  412513:	mov    ecx,0x0
  412518:	mov    edx,0x0
  41251d:	mov    esi,0x0
  412522:	mov    rdi,rax
  412525:	call   41df7c <flatcc_builder_start_buffer@@Base>
  41252a:	test   eax,eax
  41252c:	jne    412cb2 <_start@@Base+0xca22>
  412532:	lea    rcx,[rbp-0x3c]
  412536:	mov    rdx,QWORD PTR [rbp-0x58]
  41253a:	mov    rsi,QWORD PTR [rbp-0x50]
  41253e:	mov    rax,QWORD PTR [rbp-0x48]
  412542:	mov    rdi,rax
  412545:	call   40f3c3 <_start@@Base+0x9133>
  41254a:	mov    QWORD PTR [rbp-0x50],rax
  41254e:	mov    eax,DWORD PTR [rbp-0x3c]
  412551:	test   eax,eax
  412553:	je     412cb5 <_start@@Base+0xca25>
  412559:	mov    edx,DWORD PTR [rbp-0x3c]
  41255c:	mov    rax,QWORD PTR [rbp-0x48]
  412560:	mov    rax,QWORD PTR [rax]
  412563:	mov    esi,edx
  412565:	mov    rdi,rax
  412568:	call   41e0c9 <flatcc_builder_end_buffer@@Base>
  41256d:	mov    DWORD PTR [rbp-0x3c],eax
  412570:	mov    eax,DWORD PTR [rbp-0x3c]
  412573:	test   eax,eax
  412575:	je     412cb8 <_start@@Base+0xca28>
  41257b:	mov    rax,QWORD PTR [rbp-0x48]
  41257f:	mov    rax,QWORD PTR [rax]
  412582:	mov    esi,0xd
  412587:	mov    rdi,rax
  41258a:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  41258f:	mov    QWORD PTR [rbp-0x18],rax
  412593:	cmp    QWORD PTR [rbp-0x18],0x0
  412598:	je     412cb8 <_start@@Base+0xca28>
  41259e:	mov    edx,DWORD PTR [rbp-0x3c]
  4125a1:	mov    rax,QWORD PTR [rbp-0x18]
  4125a5:	mov    DWORD PTR [rax],edx
  4125a7:	jmp    412aab <_start@@Base+0xc81b>
  4125ac:	mov    rdx,QWORD PTR [rbp-0x58]
  4125b0:	mov    rcx,QWORD PTR [rbp-0x50]
  4125b4:	mov    rax,QWORD PTR [rbp-0x48]
  4125b8:	mov    rsi,rcx
  4125bb:	mov    rdi,rax
  4125be:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4125c3:	mov    QWORD PTR [rbp-0x50],rax
  4125c7:	jmp    412aab <_start@@Base+0xc81b>
  4125cc:	mov    rdx,QWORD PTR [rbp-0x58]
  4125d0:	mov    rcx,QWORD PTR [rbp-0x50]
  4125d4:	mov    rax,QWORD PTR [rbp-0x48]
  4125d8:	mov    rsi,rcx
  4125db:	mov    rdi,rax
  4125de:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4125e3:	mov    QWORD PTR [rbp-0x50],rax
  4125e7:	jmp    412aab <_start@@Base+0xc81b>
  4125ec:	mov    rdx,QWORD PTR [rbp-0x58]
  4125f0:	mov    rcx,QWORD PTR [rbp-0x50]
  4125f4:	mov    rax,QWORD PTR [rbp-0x48]
  4125f8:	mov    rsi,rcx
  4125fb:	mov    rdi,rax
  4125fe:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  412603:	mov    QWORD PTR [rbp-0x50],rax
  412607:	jmp    412aab <_start@@Base+0xc81b>
  41260c:	mov    rdx,QWORD PTR [rbp-0x58]
  412610:	mov    rcx,QWORD PTR [rbp-0x50]
  412614:	mov    rax,QWORD PTR [rbp-0x48]
  412618:	mov    rsi,rcx
  41261b:	mov    rdi,rax
  41261e:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  412623:	mov    QWORD PTR [rbp-0x50],rax
  412627:	jmp    412aab <_start@@Base+0xc81b>
  41262c:	movabs rax,0x766563746f725f6f
  412636:	cmp    QWORD PTR [rbp-0x28],rax
  41263a:	jne    412a90 <_start@@Base+0xc800>
  412640:	add    QWORD PTR [rbp-0x50],0x8
  412645:	mov    rdx,QWORD PTR [rbp-0x58]
  412649:	mov    rax,QWORD PTR [rbp-0x50]
  41264d:	mov    rsi,rdx
  412650:	mov    rdi,rax
  412653:	call   406876 <_start@@Base+0x5e6>
  412658:	mov    QWORD PTR [rbp-0x28],rax
  41265c:	movabs rax,0x665f646f75626c65
  412666:	cmp    QWORD PTR [rbp-0x28],rax
  41266a:	jne    412898 <_start@@Base+0xc608>
  412670:	add    QWORD PTR [rbp-0x50],0x8
  412675:	mov    rdx,QWORD PTR [rbp-0x58]
  412679:	mov    rax,QWORD PTR [rbp-0x50]
  41267d:	mov    rsi,rdx
  412680:	mov    rdi,rax
  412683:	call   406876 <_start@@Base+0x5e6>
  412688:	mov    QWORD PTR [rbp-0x28],rax
  41268c:	movabs rax,0xff00000000000000
  412696:	and    rax,QWORD PTR [rbp-0x28]
  41269a:	mov    rdx,rax
  41269d:	movabs rax,0x7300000000000000
  4126a7:	cmp    rdx,rax
  4126aa:	jne    412878 <_start@@Base+0xc5e8>
  4126b0:	mov    rax,QWORD PTR [rbp-0x50]
  4126b4:	mov    QWORD PTR [rbp-0x20],rax
  4126b8:	mov    rdx,QWORD PTR [rbp-0x58]
  4126bc:	mov    rsi,QWORD PTR [rbp-0x20]
  4126c0:	mov    rax,QWORD PTR [rbp-0x48]
  4126c4:	mov    ecx,0x1
  4126c9:	mov    rdi,rax
  4126cc:	call   406d6d <_start@@Base+0xadd>
  4126d1:	mov    QWORD PTR [rbp-0x50],rax
  4126d5:	mov    rax,QWORD PTR [rbp-0x20]
  4126d9:	cmp    rax,QWORD PTR [rbp-0x50]
  4126dd:	je     412858 <_start@@Base+0xc5c8>
  4126e3:	mov    rax,QWORD PTR [rbp-0x48]
  4126e7:	mov    rax,QWORD PTR [rax]
  4126ea:	mov    ecx,0x1fffffff
  4126ef:	mov    edx,0x8
  4126f4:	mov    esi,0x8
  4126f9:	mov    rdi,rax
  4126fc:	call   41eaf3 <flatcc_builder_start_vector@@Base>
  412701:	test   eax,eax
  412703:	jne    412cbb <_start@@Base+0xca2b>
  412709:	lea    rcx,[rbp-0x40]
  41270d:	mov    rdx,QWORD PTR [rbp-0x58]
  412711:	mov    rsi,QWORD PTR [rbp-0x50]
  412715:	mov    rax,QWORD PTR [rbp-0x48]
  412719:	mov    rdi,rax
  41271c:	call   406b72 <_start@@Base+0x8e2>
  412721:	mov    QWORD PTR [rbp-0x50],rax
  412725:	jmp    4127ff <_start@@Base+0xc56f>
  41272a:	vxorpd xmm0,xmm0,xmm0
  41272e:	vmovsd QWORD PTR [rbp-0x30],xmm0
  412733:	mov    rax,QWORD PTR [rbp-0x48]
  412737:	mov    rax,QWORD PTR [rax]
  41273a:	mov    esi,0x1
  41273f:	mov    rdi,rax
  412742:	call   41e3a3 <flatcc_builder_extend_vector@@Base>
  412747:	mov    QWORD PTR [rbp-0x10],rax
  41274b:	cmp    QWORD PTR [rbp-0x10],0x0
  412750:	je     412cbe <_start@@Base+0xca2e>
  412756:	mov    rax,QWORD PTR [rbp-0x50]
  41275a:	mov    QWORD PTR [rbp-0x20],rax
  41275e:	lea    rcx,[rbp-0x30]
  412762:	mov    rdx,QWORD PTR [rbp-0x58]
  412766:	mov    rsi,QWORD PTR [rbp-0x20]
  41276a:	mov    rax,QWORD PTR [rbp-0x48]
  41276e:	mov    rdi,rax
  412771:	call   428b48 <flatcc_json_parser_double@@Base>
  412776:	mov    QWORD PTR [rbp-0x50],rax
  41277a:	mov    rax,QWORD PTR [rbp-0x20]
  41277e:	cmp    rax,QWORD PTR [rbp-0x50]
  412782:	jne    4127ce <_start@@Base+0xc53e>
  412784:	mov    rax,QWORD PTR [rbp-0x50]
  412788:	mov    QWORD PTR [rbp-0x20],rax
  41278c:	lea    rcx,[rbp-0x30]
  412790:	mov    rdx,QWORD PTR [rbp-0x58]
  412794:	mov    rsi,QWORD PTR [rbp-0x20]
  412798:	mov    rax,QWORD PTR [rbp-0x48]
  41279c:	mov    r8,rcx
  41279f:	lea    rcx,[rip+0x34f9a]        # 447740 <__data_start@@Base+0x680>
  4127a6:	mov    rdi,rax
  4127a9:	call   408922 <_start@@Base+0x2692>
  4127ae:	mov    QWORD PTR [rbp-0x50],rax
  4127b2:	mov    rax,QWORD PTR [rbp-0x50]
  4127b6:	cmp    rax,QWORD PTR [rbp-0x20]
  4127ba:	je     412cc1 <_start@@Base+0xca31>
  4127c0:	mov    rax,QWORD PTR [rbp-0x50]
  4127c4:	cmp    rax,QWORD PTR [rbp-0x58]
  4127c8:	je     412cc1 <_start@@Base+0xca31>
  4127ce:	mov    rdx,QWORD PTR [rbp-0x30]
  4127d2:	mov    rax,QWORD PTR [rbp-0x10]
  4127d6:	vmovq  xmm0,rdx
  4127db:	mov    rdi,rax
  4127de:	call   406594 <_start@@Base+0x304>
  4127e3:	lea    rcx,[rbp-0x40]
  4127e7:	mov    rdx,QWORD PTR [rbp-0x58]
  4127eb:	mov    rsi,QWORD PTR [rbp-0x50]
  4127ef:	mov    rax,QWORD PTR [rbp-0x48]
  4127f3:	mov    rdi,rax
  4127f6:	call   406c2f <_start@@Base+0x99f>
  4127fb:	mov    QWORD PTR [rbp-0x50],rax
  4127ff:	mov    eax,DWORD PTR [rbp-0x40]
  412802:	test   eax,eax
  412804:	jne    41272a <_start@@Base+0xc49a>
  41280a:	mov    rax,QWORD PTR [rbp-0x48]
  41280e:	mov    rax,QWORD PTR [rax]
  412811:	mov    rdi,rax
  412814:	call   41fce8 <flatcc_builder_end_vector@@Base>
  412819:	mov    DWORD PTR [rbp-0x3c],eax
  41281c:	mov    eax,DWORD PTR [rbp-0x3c]
  41281f:	test   eax,eax
  412821:	je     412cc4 <_start@@Base+0xca34>
  412827:	mov    rax,QWORD PTR [rbp-0x48]
  41282b:	mov    rax,QWORD PTR [rax]
  41282e:	mov    esi,0x21
  412833:	mov    rdi,rax
  412836:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  41283b:	mov    QWORD PTR [rbp-0x18],rax
  41283f:	cmp    QWORD PTR [rbp-0x18],0x0
  412844:	je     412cc4 <_start@@Base+0xca34>
  41284a:	mov    edx,DWORD PTR [rbp-0x3c]
  41284d:	mov    rax,QWORD PTR [rbp-0x18]
  412851:	mov    DWORD PTR [rax],edx
  412853:	jmp    412aab <_start@@Base+0xc81b>
  412858:	mov    rdx,QWORD PTR [rbp-0x58]
  41285c:	mov    rcx,QWORD PTR [rbp-0x50]
  412860:	mov    rax,QWORD PTR [rbp-0x48]
  412864:	mov    rsi,rcx
  412867:	mov    rdi,rax
  41286a:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41286f:	mov    QWORD PTR [rbp-0x50],rax
  412873:	jmp    412aab <_start@@Base+0xc81b>
  412878:	mov    rdx,QWORD PTR [rbp-0x58]
  41287c:	mov    rcx,QWORD PTR [rbp-0x50]
  412880:	mov    rax,QWORD PTR [rbp-0x48]
  412884:	mov    rsi,rcx
  412887:	mov    rdi,rax
  41288a:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41288f:	mov    QWORD PTR [rbp-0x50],rax
  412893:	jmp    412aab <_start@@Base+0xc81b>
  412898:	mov    rax,QWORD PTR [rbp-0x28]
  41289c:	mov    al,0x0
  41289e:	mov    rdx,rax
  4128a1:	movabs rax,0x665f6c6f6e677300
  4128ab:	cmp    rdx,rax
  4128ae:	jne    412a73 <_start@@Base+0xc7e3>
  4128b4:	mov    rax,QWORD PTR [rbp-0x50]
  4128b8:	mov    QWORD PTR [rbp-0x20],rax
  4128bc:	mov    rdx,QWORD PTR [rbp-0x58]
  4128c0:	mov    rsi,QWORD PTR [rbp-0x20]
  4128c4:	mov    rax,QWORD PTR [rbp-0x48]
  4128c8:	mov    ecx,0x7
  4128cd:	mov    rdi,rax
  4128d0:	call   406d6d <_start@@Base+0xadd>
  4128d5:	mov    QWORD PTR [rbp-0x50],rax
  4128d9:	mov    rax,QWORD PTR [rbp-0x20]
  4128dd:	cmp    rax,QWORD PTR [rbp-0x50]
  4128e1:	je     412a56 <_start@@Base+0xc7c6>
  4128e7:	mov    rax,QWORD PTR [rbp-0x48]
  4128eb:	mov    rax,QWORD PTR [rax]
  4128ee:	mov    ecx,0x1fffffff
  4128f3:	mov    edx,0x8
  4128f8:	mov    esi,0x8
  4128fd:	mov    rdi,rax
  412900:	call   41eaf3 <flatcc_builder_start_vector@@Base>
  412905:	test   eax,eax
  412907:	jne    412cc7 <_start@@Base+0xca37>
  41290d:	lea    rcx,[rbp-0x40]
  412911:	mov    rdx,QWORD PTR [rbp-0x58]
  412915:	mov    rsi,QWORD PTR [rbp-0x50]
  412919:	mov    rax,QWORD PTR [rbp-0x48]
  41291d:	mov    rdi,rax
  412920:	call   406b72 <_start@@Base+0x8e2>
  412925:	mov    QWORD PTR [rbp-0x50],rax
  412929:	jmp    412a00 <_start@@Base+0xc770>
  41292e:	mov    QWORD PTR [rbp-0x30],0x0
  412936:	mov    rax,QWORD PTR [rbp-0x48]
  41293a:	mov    rax,QWORD PTR [rax]
  41293d:	mov    esi,0x1
  412942:	mov    rdi,rax
  412945:	call   41e3a3 <flatcc_builder_extend_vector@@Base>
  41294a:	mov    QWORD PTR [rbp-0x10],rax
  41294e:	cmp    QWORD PTR [rbp-0x10],0x0
  412953:	je     412cca <_start@@Base+0xca3a>
  412959:	mov    rax,QWORD PTR [rbp-0x50]
  41295d:	mov    QWORD PTR [rbp-0x20],rax
  412961:	lea    rcx,[rbp-0x30]
  412965:	mov    rdx,QWORD PTR [rbp-0x58]
  412969:	mov    rsi,QWORD PTR [rbp-0x20]
  41296d:	mov    rax,QWORD PTR [rbp-0x48]
  412971:	mov    rdi,rax
  412974:	call   407769 <_start@@Base+0x14d9>
  412979:	mov    QWORD PTR [rbp-0x50],rax
  41297d:	mov    rax,QWORD PTR [rbp-0x20]
  412981:	cmp    rax,QWORD PTR [rbp-0x50]
  412985:	jne    4129d1 <_start@@Base+0xc741>
  412987:	mov    rax,QWORD PTR [rbp-0x50]
  41298b:	mov    QWORD PTR [rbp-0x20],rax
  41298f:	lea    rcx,[rbp-0x30]
  412993:	mov    rdx,QWORD PTR [rbp-0x58]
  412997:	mov    rsi,QWORD PTR [rbp-0x20]
  41299b:	mov    rax,QWORD PTR [rbp-0x48]
  41299f:	mov    r8,rcx
  4129a2:	lea    rcx,[rip+0x34db7]        # 447760 <__data_start@@Base+0x6a0>
  4129a9:	mov    rdi,rax
  4129ac:	call   4080e1 <_start@@Base+0x1e51>
  4129b1:	mov    QWORD PTR [rbp-0x50],rax
  4129b5:	mov    rax,QWORD PTR [rbp-0x50]
  4129b9:	cmp    rax,QWORD PTR [rbp-0x20]
  4129bd:	je     412ccd <_start@@Base+0xca3d>
  4129c3:	mov    rax,QWORD PTR [rbp-0x50]
  4129c7:	cmp    rax,QWORD PTR [rbp-0x58]
  4129cb:	je     412ccd <_start@@Base+0xca3d>
  4129d1:	mov    rdx,QWORD PTR [rbp-0x30]
  4129d5:	mov    rax,QWORD PTR [rbp-0x10]
  4129d9:	mov    rsi,rdx
  4129dc:	mov    rdi,rax
  4129df:	call   4064f5 <_start@@Base+0x265>
  4129e4:	lea    rcx,[rbp-0x40]
  4129e8:	mov    rdx,QWORD PTR [rbp-0x58]
  4129ec:	mov    rsi,QWORD PTR [rbp-0x50]
  4129f0:	mov    rax,QWORD PTR [rbp-0x48]
  4129f4:	mov    rdi,rax
  4129f7:	call   406c2f <_start@@Base+0x99f>
  4129fc:	mov    QWORD PTR [rbp-0x50],rax
  412a00:	mov    eax,DWORD PTR [rbp-0x40]
  412a03:	test   eax,eax
  412a05:	jne    41292e <_start@@Base+0xc69e>
  412a0b:	mov    rax,QWORD PTR [rbp-0x48]
  412a0f:	mov    rax,QWORD PTR [rax]
  412a12:	mov    rdi,rax
  412a15:	call   41fce8 <flatcc_builder_end_vector@@Base>
  412a1a:	mov    DWORD PTR [rbp-0x3c],eax
  412a1d:	mov    eax,DWORD PTR [rbp-0x3c]
  412a20:	test   eax,eax
  412a22:	je     412cd0 <_start@@Base+0xca40>
  412a28:	mov    rax,QWORD PTR [rbp-0x48]
  412a2c:	mov    rax,QWORD PTR [rax]
  412a2f:	mov    esi,0x20
  412a34:	mov    rdi,rax
  412a37:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  412a3c:	mov    QWORD PTR [rbp-0x18],rax
  412a40:	cmp    QWORD PTR [rbp-0x18],0x0
  412a45:	je     412cd0 <_start@@Base+0xca40>
  412a4b:	mov    edx,DWORD PTR [rbp-0x3c]
  412a4e:	mov    rax,QWORD PTR [rbp-0x18]
  412a52:	mov    DWORD PTR [rax],edx
  412a54:	jmp    412aab <_start@@Base+0xc81b>
  412a56:	mov    rdx,QWORD PTR [rbp-0x58]
  412a5a:	mov    rcx,QWORD PTR [rbp-0x50]
  412a5e:	mov    rax,QWORD PTR [rbp-0x48]
  412a62:	mov    rsi,rcx
  412a65:	mov    rdi,rax
  412a68:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  412a6d:	mov    QWORD PTR [rbp-0x50],rax
  412a71:	jmp    412aab <_start@@Base+0xc81b>
  412a73:	mov    rdx,QWORD PTR [rbp-0x58]
  412a77:	mov    rcx,QWORD PTR [rbp-0x50]
  412a7b:	mov    rax,QWORD PTR [rbp-0x48]
  412a7f:	mov    rsi,rcx
  412a82:	mov    rdi,rax
  412a85:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  412a8a:	mov    QWORD PTR [rbp-0x50],rax
  412a8e:	jmp    412aab <_start@@Base+0xc81b>
  412a90:	mov    rdx,QWORD PTR [rbp-0x58]
  412a94:	mov    rcx,QWORD PTR [rbp-0x50]
  412a98:	mov    rax,QWORD PTR [rbp-0x48]
  412a9c:	mov    rsi,rcx
  412a9f:	mov    rdi,rax
  412aa2:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  412aa7:	mov    QWORD PTR [rbp-0x50],rax
  412aab:	lea    rcx,[rbp-0x40]
  412aaf:	mov    rdx,QWORD PTR [rbp-0x58]
  412ab3:	mov    rsi,QWORD PTR [rbp-0x50]
  412ab7:	mov    rax,QWORD PTR [rbp-0x48]
  412abb:	mov    rdi,rax
  412abe:	call   406a34 <_start@@Base+0x7a4>
  412ac3:	mov    QWORD PTR [rbp-0x50],rax
  412ac7:	mov    eax,DWORD PTR [rbp-0x40]
  412aca:	test   eax,eax
  412acc:	jne    40f45f <_start@@Base+0x91cf>
  412ad2:	mov    rax,QWORD PTR [rbp-0x48]
  412ad6:	mov    eax,DWORD PTR [rax+0x20]
  412ad9:	test   eax,eax
  412adb:	jne    412cd3 <_start@@Base+0xca43>
  412ae1:	mov    rax,QWORD PTR [rbp-0x48]
  412ae5:	mov    rax,QWORD PTR [rax]
  412ae8:	mov    esi,0x3
  412aed:	mov    rdi,rax
  412af0:	call   41f614 <flatcc_builder_check_required_field@@Base>
  412af5:	test   eax,eax
  412af7:	jne    412b1b <_start@@Base+0xc88b>
  412af9:	mov    rdx,QWORD PTR [rbp-0x58]
  412afd:	mov    rsi,QWORD PTR [rbp-0x50]
  412b01:	mov    rax,QWORD PTR [rbp-0x48]
  412b05:	mov    ecx,0x1d
  412b0a:	mov    rdi,rax
  412b0d:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  412b12:	mov    QWORD PTR [rbp-0x50],rax
  412b16:	jmp    412cd7 <_start@@Base+0xca47>
  412b1b:	mov    rcx,QWORD PTR [rbp-0x38]
  412b1f:	mov    rdx,QWORD PTR [rbp-0x58]
  412b23:	mov    rsi,QWORD PTR [rbp-0x50]
  412b27:	mov    rax,QWORD PTR [rbp-0x48]
  412b2b:	mov    rdi,rax
  412b2e:	call   429a03 <flatcc_json_parser_finalize_unions@@Base>
  412b33:	mov    QWORD PTR [rbp-0x50],rax
  412b37:	mov    rax,QWORD PTR [rbp-0x48]
  412b3b:	mov    rax,QWORD PTR [rax]
  412b3e:	mov    rdi,rax
  412b41:	call   41f850 <flatcc_builder_end_table@@Base>
  412b46:	mov    edx,eax
  412b48:	mov    rax,QWORD PTR [rbp-0x60]
  412b4c:	mov    DWORD PTR [rax],edx
  412b4e:	mov    rax,QWORD PTR [rbp-0x60]
  412b52:	mov    eax,DWORD PTR [rax]
  412b54:	test   eax,eax
  412b56:	je     412cd6 <_start@@Base+0xca46>
  412b5c:	mov    rax,QWORD PTR [rbp-0x50]
  412b60:	jmp    412cf0 <_start@@Base+0xca60>
  412b65:	nop
  412b66:	jmp    412cd7 <_start@@Base+0xca47>
  412b6b:	nop
  412b6c:	jmp    412cd7 <_start@@Base+0xca47>
  412b71:	nop
  412b72:	jmp    412cd7 <_start@@Base+0xca47>
  412b77:	nop
  412b78:	jmp    412cd7 <_start@@Base+0xca47>
  412b7d:	nop
  412b7e:	jmp    412cd7 <_start@@Base+0xca47>
  412b83:	nop
  412b84:	jmp    412cd7 <_start@@Base+0xca47>
  412b89:	nop
  412b8a:	jmp    412cd7 <_start@@Base+0xca47>
  412b8f:	nop
  412b90:	jmp    412cd7 <_start@@Base+0xca47>
  412b95:	nop
  412b96:	jmp    412cd7 <_start@@Base+0xca47>
  412b9b:	nop
  412b9c:	jmp    412cd7 <_start@@Base+0xca47>
  412ba1:	nop
  412ba2:	jmp    412cd7 <_start@@Base+0xca47>
  412ba7:	nop
  412ba8:	jmp    412cd7 <_start@@Base+0xca47>
  412bad:	nop
  412bae:	jmp    412cd7 <_start@@Base+0xca47>
  412bb3:	nop
  412bb4:	jmp    412cd7 <_start@@Base+0xca47>
  412bb9:	nop
  412bba:	jmp    412cd7 <_start@@Base+0xca47>
  412bbf:	nop
  412bc0:	jmp    412cd7 <_start@@Base+0xca47>
  412bc5:	nop
  412bc6:	jmp    412cd7 <_start@@Base+0xca47>
  412bcb:	nop
  412bcc:	jmp    412cd7 <_start@@Base+0xca47>
  412bd1:	nop
  412bd2:	jmp    412cd7 <_start@@Base+0xca47>
  412bd7:	nop
  412bd8:	jmp    412cd7 <_start@@Base+0xca47>
  412bdd:	nop
  412bde:	jmp    412cd7 <_start@@Base+0xca47>
  412be3:	nop
  412be4:	jmp    412cd7 <_start@@Base+0xca47>
  412be9:	nop
  412bea:	jmp    412cd7 <_start@@Base+0xca47>
  412bef:	nop
  412bf0:	jmp    412cd7 <_start@@Base+0xca47>
  412bf5:	nop
  412bf6:	jmp    412cd7 <_start@@Base+0xca47>
  412bfb:	nop
  412bfc:	jmp    412cd7 <_start@@Base+0xca47>
  412c01:	nop
  412c02:	jmp    412cd7 <_start@@Base+0xca47>
  412c07:	nop
  412c08:	jmp    412cd7 <_start@@Base+0xca47>
  412c0d:	nop
  412c0e:	jmp    412cd7 <_start@@Base+0xca47>
  412c13:	nop
  412c14:	jmp    412cd7 <_start@@Base+0xca47>
  412c19:	nop
  412c1a:	jmp    412cd7 <_start@@Base+0xca47>
  412c1f:	nop
  412c20:	jmp    412cd7 <_start@@Base+0xca47>
  412c25:	nop
  412c26:	jmp    412cd7 <_start@@Base+0xca47>
  412c2b:	nop
  412c2c:	jmp    412cd7 <_start@@Base+0xca47>
  412c31:	nop
  412c32:	jmp    412cd7 <_start@@Base+0xca47>
  412c37:	nop
  412c38:	jmp    412cd7 <_start@@Base+0xca47>
  412c3d:	nop
  412c3e:	jmp    412cd7 <_start@@Base+0xca47>
  412c43:	nop
  412c44:	jmp    412cd7 <_start@@Base+0xca47>
  412c49:	nop
  412c4a:	jmp    412cd7 <_start@@Base+0xca47>
  412c4f:	nop
  412c50:	jmp    412cd7 <_start@@Base+0xca47>
  412c55:	nop
  412c56:	jmp    412cd7 <_start@@Base+0xca47>
  412c58:	nop
  412c59:	jmp    412cd7 <_start@@Base+0xca47>
  412c5b:	nop
  412c5c:	jmp    412cd7 <_start@@Base+0xca47>
  412c5e:	nop
  412c5f:	jmp    412cd7 <_start@@Base+0xca47>
  412c61:	nop
  412c62:	jmp    412cd7 <_start@@Base+0xca47>
  412c64:	nop
  412c65:	jmp    412cd7 <_start@@Base+0xca47>
  412c67:	nop
  412c68:	jmp    412cd7 <_start@@Base+0xca47>
  412c6a:	nop
  412c6b:	jmp    412cd7 <_start@@Base+0xca47>
  412c6d:	nop
  412c6e:	jmp    412cd7 <_start@@Base+0xca47>
  412c70:	nop
  412c71:	jmp    412cd7 <_start@@Base+0xca47>
  412c73:	nop
  412c74:	jmp    412cd7 <_start@@Base+0xca47>
  412c76:	nop
  412c77:	jmp    412cd7 <_start@@Base+0xca47>
  412c79:	nop
  412c7a:	jmp    412cd7 <_start@@Base+0xca47>
  412c7c:	nop
  412c7d:	jmp    412cd7 <_start@@Base+0xca47>
  412c7f:	nop
  412c80:	jmp    412cd7 <_start@@Base+0xca47>
  412c82:	nop
  412c83:	jmp    412cd7 <_start@@Base+0xca47>
  412c85:	nop
  412c86:	jmp    412cd7 <_start@@Base+0xca47>
  412c88:	nop
  412c89:	jmp    412cd7 <_start@@Base+0xca47>
  412c8b:	nop
  412c8c:	jmp    412cd7 <_start@@Base+0xca47>
  412c8e:	nop
  412c8f:	jmp    412cd7 <_start@@Base+0xca47>
  412c91:	nop
  412c92:	jmp    412cd7 <_start@@Base+0xca47>
  412c94:	nop
  412c95:	jmp    412cd7 <_start@@Base+0xca47>
  412c97:	nop
  412c98:	jmp    412cd7 <_start@@Base+0xca47>
  412c9a:	nop
  412c9b:	jmp    412cd7 <_start@@Base+0xca47>
  412c9d:	nop
  412c9e:	jmp    412cd7 <_start@@Base+0xca47>
  412ca0:	nop
  412ca1:	jmp    412cd7 <_start@@Base+0xca47>
  412ca3:	nop
  412ca4:	jmp    412cd7 <_start@@Base+0xca47>
  412ca6:	nop
  412ca7:	jmp    412cd7 <_start@@Base+0xca47>
  412ca9:	nop
  412caa:	jmp    412cd7 <_start@@Base+0xca47>
  412cac:	nop
  412cad:	jmp    412cd7 <_start@@Base+0xca47>
  412caf:	nop
  412cb0:	jmp    412cd7 <_start@@Base+0xca47>
  412cb2:	nop
  412cb3:	jmp    412cd7 <_start@@Base+0xca47>
  412cb5:	nop
  412cb6:	jmp    412cd7 <_start@@Base+0xca47>
  412cb8:	nop
  412cb9:	jmp    412cd7 <_start@@Base+0xca47>
  412cbb:	nop
  412cbc:	jmp    412cd7 <_start@@Base+0xca47>
  412cbe:	nop
  412cbf:	jmp    412cd7 <_start@@Base+0xca47>
  412cc1:	nop
  412cc2:	jmp    412cd7 <_start@@Base+0xca47>
  412cc4:	nop
  412cc5:	jmp    412cd7 <_start@@Base+0xca47>
  412cc7:	nop
  412cc8:	jmp    412cd7 <_start@@Base+0xca47>
  412cca:	nop
  412ccb:	jmp    412cd7 <_start@@Base+0xca47>
  412ccd:	nop
  412cce:	jmp    412cd7 <_start@@Base+0xca47>
  412cd0:	nop
  412cd1:	jmp    412cd7 <_start@@Base+0xca47>
  412cd3:	nop
  412cd4:	jmp    412cd7 <_start@@Base+0xca47>
  412cd6:	nop
  412cd7:	mov    rdx,QWORD PTR [rbp-0x58]
  412cdb:	mov    rsi,QWORD PTR [rbp-0x50]
  412cdf:	mov    rax,QWORD PTR [rbp-0x48]
  412ce3:	mov    ecx,0x21
  412ce8:	mov    rdi,rax
  412ceb:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  412cf0:	mov    rdi,QWORD PTR [rbp-0x8]
  412cf4:	xor    rdi,QWORD PTR fs:0x28
  412cfd:	je     412d04 <_start@@Base+0xca74>
  412cff:	call   4061a0 <__stack_chk_fail@plt>
  412d04:	leave  
  412d05:	ret    
  412d06:	endbr64 
  412d0a:	push   rbp
  412d0b:	mov    rbp,rsp
  412d0e:	sub    rsp,0x60
  412d12:	mov    QWORD PTR [rbp-0x48],rdi
  412d16:	mov    QWORD PTR [rbp-0x50],rsi
  412d1a:	mov    QWORD PTR [rbp-0x58],rdx
  412d1e:	mov    QWORD PTR [rbp-0x60],rcx
  412d22:	mov    rax,QWORD PTR fs:0x28
  412d2b:	mov    QWORD PTR [rbp-0x8],rax
  412d2f:	xor    eax,eax
  412d31:	mov    rax,QWORD PTR [rbp-0x60]
  412d35:	mov    DWORD PTR [rax],0x0
  412d3b:	mov    rax,QWORD PTR [rbp-0x48]
  412d3f:	mov    rax,QWORD PTR [rax]
  412d42:	mov    esi,0xc
  412d47:	mov    rdi,rax
  412d4a:	call   41ed41 <flatcc_builder_start_table@@Base>
  412d4f:	test   eax,eax
  412d51:	jne    4140cf <_start@@Base+0xde3f>
  412d57:	lea    rcx,[rbp-0x38]
  412d5b:	mov    rdx,QWORD PTR [rbp-0x58]
  412d5f:	mov    rsi,QWORD PTR [rbp-0x50]
  412d63:	mov    rax,QWORD PTR [rbp-0x48]
  412d67:	mov    rdi,rax
  412d6a:	call   406977 <_start@@Base+0x6e7>
  412d6f:	mov    QWORD PTR [rbp-0x50],rax
  412d73:	jmp    414092 <_start@@Base+0xde02>
  412d78:	mov    rdx,QWORD PTR [rbp-0x58]
  412d7c:	mov    rcx,QWORD PTR [rbp-0x50]
  412d80:	mov    rax,QWORD PTR [rbp-0x48]
  412d84:	mov    rsi,rcx
  412d87:	mov    rdi,rax
  412d8a:	call   4066e9 <_start@@Base+0x459>
  412d8f:	mov    QWORD PTR [rbp-0x50],rax
  412d93:	mov    rdx,QWORD PTR [rbp-0x58]
  412d97:	mov    rax,QWORD PTR [rbp-0x50]
  412d9b:	mov    rsi,rdx
  412d9e:	mov    rdi,rax
  412da1:	call   406876 <_start@@Base+0x5e6>
  412da6:	mov    QWORD PTR [rbp-0x28],rax
  412daa:	movabs rax,0x6937ffffffffffff
  412db4:	cmp    QWORD PTR [rbp-0x28],rax
  412db8:	ja     413518 <_start@@Base+0xd288>
  412dbe:	movabs rax,0x693135ffffffffff
  412dc8:	cmp    QWORD PTR [rbp-0x28],rax
  412dcc:	ja     4130c4 <_start@@Base+0xce34>
  412dd2:	movabs rax,0xffffff0000000000
  412ddc:	and    rax,QWORD PTR [rbp-0x28]
  412de0:	mov    rdx,rax
  412de3:	movabs rax,0x6636340000000000
  412ded:	cmp    rdx,rax
  412df0:	jne    412f3c <_start@@Base+0xccac>
  412df6:	mov    rax,QWORD PTR [rbp-0x50]
  412dfa:	mov    QWORD PTR [rbp-0x20],rax
  412dfe:	mov    rdx,QWORD PTR [rbp-0x58]
  412e02:	mov    rsi,QWORD PTR [rbp-0x20]
  412e06:	mov    rax,QWORD PTR [rbp-0x48]
  412e0a:	mov    ecx,0x3
  412e0f:	mov    rdi,rax
  412e12:	call   406d6d <_start@@Base+0xadd>
  412e17:	mov    QWORD PTR [rbp-0x50],rax
  412e1b:	mov    rax,QWORD PTR [rbp-0x20]
  412e1f:	cmp    rax,QWORD PTR [rbp-0x50]
  412e23:	je     412f1c <_start@@Base+0xcc8c>
  412e29:	vxorpd xmm0,xmm0,xmm0
  412e2d:	vmovsd QWORD PTR [rbp-0x30],xmm0
  412e32:	mov    rax,QWORD PTR [rbp-0x50]
  412e36:	mov    QWORD PTR [rbp-0x20],rax
  412e3a:	lea    rcx,[rbp-0x30]
  412e3e:	mov    rdx,QWORD PTR [rbp-0x58]
  412e42:	mov    rsi,QWORD PTR [rbp-0x20]
  412e46:	mov    rax,QWORD PTR [rbp-0x48]
  412e4a:	mov    rdi,rax
  412e4d:	call   428b48 <flatcc_json_parser_double@@Base>
  412e52:	mov    QWORD PTR [rbp-0x50],rax
  412e56:	mov    rax,QWORD PTR [rbp-0x20]
  412e5a:	cmp    rax,QWORD PTR [rbp-0x50]
  412e5e:	jne    412eaa <_start@@Base+0xcc1a>
  412e60:	mov    rax,QWORD PTR [rbp-0x50]
  412e64:	mov    QWORD PTR [rbp-0x20],rax
  412e68:	lea    rcx,[rbp-0x30]
  412e6c:	mov    rdx,QWORD PTR [rbp-0x58]
  412e70:	mov    rsi,QWORD PTR [rbp-0x20]
  412e74:	mov    rax,QWORD PTR [rbp-0x48]
  412e78:	mov    r8,rcx
  412e7b:	lea    rcx,[rip+0x348fe]        # 447780 <__data_start@@Base+0x6c0>
  412e82:	mov    rdi,rax
  412e85:	call   408922 <_start@@Base+0x2692>
  412e8a:	mov    QWORD PTR [rbp-0x50],rax
  412e8e:	mov    rax,QWORD PTR [rbp-0x50]
  412e92:	cmp    rax,QWORD PTR [rbp-0x20]
  412e96:	je     4140d2 <_start@@Base+0xde42>
  412e9c:	mov    rax,QWORD PTR [rbp-0x50]
  412ea0:	cmp    rax,QWORD PTR [rbp-0x58]
  412ea4:	je     4140d2 <_start@@Base+0xde42>
  412eaa:	vmovsd xmm0,QWORD PTR [rbp-0x30]
  412eaf:	vxorpd xmm1,xmm1,xmm1
  412eb3:	vucomisd xmm0,xmm1
  412eb7:	jp     412ed5 <_start@@Base+0xcc45>
  412eb9:	vxorpd xmm1,xmm1,xmm1
  412ebd:	vucomisd xmm0,xmm1
  412ec1:	jne    412ed5 <_start@@Base+0xcc45>
  412ec3:	mov    rax,QWORD PTR [rbp-0x48]
  412ec7:	mov    eax,DWORD PTR [rax+0x10]
  412eca:	and    eax,0x2
  412ecd:	test   eax,eax
  412ecf:	je     414076 <_start@@Base+0xdde6>
  412ed5:	mov    rax,QWORD PTR [rbp-0x48]
  412ed9:	mov    rax,QWORD PTR [rax]
  412edc:	mov    ecx,0x8
  412ee1:	mov    edx,0x8
  412ee6:	mov    esi,0x9
  412eeb:	mov    rdi,rax
  412eee:	call   420ef1 <flatcc_builder_table_add@@Base>
  412ef3:	mov    QWORD PTR [rbp-0x18],rax
  412ef7:	cmp    QWORD PTR [rbp-0x18],0x0
  412efc:	je     4140d5 <_start@@Base+0xde45>
  412f02:	mov    rdx,QWORD PTR [rbp-0x30]
  412f06:	mov    rax,QWORD PTR [rbp-0x18]
  412f0a:	vmovq  xmm0,rdx
  412f0f:	mov    rdi,rax
  412f12:	call   406594 <_start@@Base+0x304>
  412f17:	jmp    414076 <_start@@Base+0xdde6>
  412f1c:	mov    rdx,QWORD PTR [rbp-0x58]
  412f20:	mov    rcx,QWORD PTR [rbp-0x50]
  412f24:	mov    rax,QWORD PTR [rbp-0x48]
  412f28:	mov    rsi,rcx
  412f2b:	mov    rdi,rax
  412f2e:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  412f33:	mov    QWORD PTR [rbp-0x50],rax
  412f37:	jmp    414076 <_start@@Base+0xdde6>
  412f3c:	movabs rax,0xffffff0000000000
  412f46:	and    rax,QWORD PTR [rbp-0x28]
  412f4a:	mov    rdx,rax
  412f4d:	movabs rax,0x6633320000000000
  412f57:	cmp    rdx,rax
  412f5a:	jne    4130a4 <_start@@Base+0xce14>
  412f60:	mov    rax,QWORD PTR [rbp-0x50]
  412f64:	mov    QWORD PTR [rbp-0x20],rax
  412f68:	mov    rdx,QWORD PTR [rbp-0x58]
  412f6c:	mov    rsi,QWORD PTR [rbp-0x20]
  412f70:	mov    rax,QWORD PTR [rbp-0x48]
  412f74:	mov    ecx,0x3
  412f79:	mov    rdi,rax
  412f7c:	call   406d6d <_start@@Base+0xadd>
  412f81:	mov    QWORD PTR [rbp-0x50],rax
  412f85:	mov    rax,QWORD PTR [rbp-0x20]
  412f89:	cmp    rax,QWORD PTR [rbp-0x50]
  412f8d:	je     413084 <_start@@Base+0xcdf4>
  412f93:	vxorps xmm0,xmm0,xmm0
  412f97:	vmovss DWORD PTR [rbp-0x30],xmm0
  412f9c:	mov    rax,QWORD PTR [rbp-0x50]
  412fa0:	mov    QWORD PTR [rbp-0x20],rax
  412fa4:	lea    rcx,[rbp-0x30]
  412fa8:	mov    rdx,QWORD PTR [rbp-0x58]
  412fac:	mov    rsi,QWORD PTR [rbp-0x20]
  412fb0:	mov    rax,QWORD PTR [rbp-0x48]
  412fb4:	mov    rdi,rax
  412fb7:	call   428c8d <flatcc_json_parser_float@@Base>
  412fbc:	mov    QWORD PTR [rbp-0x50],rax
  412fc0:	mov    rax,QWORD PTR [rbp-0x20]
  412fc4:	cmp    rax,QWORD PTR [rbp-0x50]
  412fc8:	jne    413014 <_start@@Base+0xcd84>
  412fca:	mov    rax,QWORD PTR [rbp-0x50]
  412fce:	mov    QWORD PTR [rbp-0x20],rax
  412fd2:	lea    rcx,[rbp-0x30]
  412fd6:	mov    rdx,QWORD PTR [rbp-0x58]
  412fda:	mov    rsi,QWORD PTR [rbp-0x20]
  412fde:	mov    rax,QWORD PTR [rbp-0x48]
  412fe2:	mov    r8,rcx
  412fe5:	lea    rcx,[rip+0x347b4]        # 4477a0 <__data_start@@Base+0x6e0>
  412fec:	mov    rdi,rax
  412fef:	call   4087b9 <_start@@Base+0x2529>
  412ff4:	mov    QWORD PTR [rbp-0x50],rax
  412ff8:	mov    rax,QWORD PTR [rbp-0x50]
  412ffc:	cmp    rax,QWORD PTR [rbp-0x20]
  413000:	je     4140d8 <_start@@Base+0xde48>
  413006:	mov    rax,QWORD PTR [rbp-0x50]
  41300a:	cmp    rax,QWORD PTR [rbp-0x58]
  41300e:	je     4140d8 <_start@@Base+0xde48>
  413014:	vmovss xmm0,DWORD PTR [rbp-0x30]
  413019:	vxorps xmm1,xmm1,xmm1
  41301d:	vucomiss xmm0,xmm1
  413021:	jp     41303f <_start@@Base+0xcdaf>
  413023:	vxorps xmm1,xmm1,xmm1
  413027:	vucomiss xmm0,xmm1
  41302b:	jne    41303f <_start@@Base+0xcdaf>
  41302d:	mov    rax,QWORD PTR [rbp-0x48]
  413031:	mov    eax,DWORD PTR [rax+0x10]
  413034:	and    eax,0x2
  413037:	test   eax,eax
  413039:	je     414076 <_start@@Base+0xdde6>
  41303f:	mov    rax,QWORD PTR [rbp-0x48]
  413043:	mov    rax,QWORD PTR [rax]
  413046:	mov    ecx,0x4
  41304b:	mov    edx,0x4
  413050:	mov    esi,0x8
  413055:	mov    rdi,rax
  413058:	call   420ef1 <flatcc_builder_table_add@@Base>
  41305d:	mov    QWORD PTR [rbp-0x18],rax
  413061:	cmp    QWORD PTR [rbp-0x18],0x0
  413066:	je     4140db <_start@@Base+0xde4b>
  41306c:	mov    edx,DWORD PTR [rbp-0x30]
  41306f:	mov    rax,QWORD PTR [rbp-0x18]
  413073:	vmovd  xmm0,edx
  413077:	mov    rdi,rax
  41307a:	call   40653e <_start@@Base+0x2ae>
  41307f:	jmp    414076 <_start@@Base+0xdde6>
  413084:	mov    rdx,QWORD PTR [rbp-0x58]
  413088:	mov    rcx,QWORD PTR [rbp-0x50]
  41308c:	mov    rax,QWORD PTR [rbp-0x48]
  413090:	mov    rsi,rcx
  413093:	mov    rdi,rax
  413096:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41309b:	mov    QWORD PTR [rbp-0x50],rax
  41309f:	jmp    414076 <_start@@Base+0xdde6>
  4130a4:	mov    rdx,QWORD PTR [rbp-0x58]
  4130a8:	mov    rcx,QWORD PTR [rbp-0x50]
  4130ac:	mov    rax,QWORD PTR [rbp-0x48]
  4130b0:	mov    rsi,rcx
  4130b3:	mov    rdi,rax
  4130b6:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4130bb:	mov    QWORD PTR [rbp-0x50],rax
  4130bf:	jmp    414076 <_start@@Base+0xdde6>
  4130c4:	movabs rax,0x693331ffffffffff
  4130ce:	cmp    QWORD PTR [rbp-0x28],rax
  4130d2:	ja     41324f <_start@@Base+0xcfbf>
  4130d8:	movabs rax,0xffffff0000000000
  4130e2:	and    rax,QWORD PTR [rbp-0x28]
  4130e6:	mov    rdx,rax
  4130e9:	movabs rax,0x6931360000000000
  4130f3:	cmp    rdx,rax
  4130f6:	jne    41322f <_start@@Base+0xcf9f>
  4130fc:	mov    rax,QWORD PTR [rbp-0x50]
  413100:	mov    QWORD PTR [rbp-0x20],rax
  413104:	mov    rdx,QWORD PTR [rbp-0x58]
  413108:	mov    rsi,QWORD PTR [rbp-0x20]
  41310c:	mov    rax,QWORD PTR [rbp-0x48]
  413110:	mov    ecx,0x3
  413115:	mov    rdi,rax
  413118:	call   406d6d <_start@@Base+0xadd>
  41311d:	mov    QWORD PTR [rbp-0x50],rax
  413121:	mov    rax,QWORD PTR [rbp-0x20]
  413125:	cmp    rax,QWORD PTR [rbp-0x50]
  413129:	je     41320f <_start@@Base+0xcf7f>
  41312f:	mov    WORD PTR [rbp-0x30],0x0
  413135:	mov    rax,QWORD PTR [rbp-0x50]
  413139:	mov    QWORD PTR [rbp-0x20],rax
  41313d:	lea    rcx,[rbp-0x30]
  413141:	mov    rdx,QWORD PTR [rbp-0x58]
  413145:	mov    rsi,QWORD PTR [rbp-0x20]
  413149:	mov    rax,QWORD PTR [rbp-0x48]
  41314d:	mov    rdi,rax
  413150:	call   4078f6 <_start@@Base+0x1666>
  413155:	mov    QWORD PTR [rbp-0x50],rax
  413159:	mov    rax,QWORD PTR [rbp-0x20]
  41315d:	cmp    rax,QWORD PTR [rbp-0x50]
  413161:	jne    4131ad <_start@@Base+0xcf1d>
  413163:	mov    rax,QWORD PTR [rbp-0x50]
  413167:	mov    QWORD PTR [rbp-0x20],rax
  41316b:	lea    rcx,[rbp-0x30]
  41316f:	mov    rdx,QWORD PTR [rbp-0x58]
  413173:	mov    rsi,QWORD PTR [rbp-0x20]
  413177:	mov    rax,QWORD PTR [rbp-0x48]
  41317b:	mov    r8,rcx
  41317e:	lea    rcx,[rip+0x3463b]        # 4477c0 <__data_start@@Base+0x700>
  413185:	mov    rdi,rax
  413188:	call   4083a1 <_start@@Base+0x2111>
  41318d:	mov    QWORD PTR [rbp-0x50],rax
  413191:	mov    rax,QWORD PTR [rbp-0x50]
  413195:	cmp    rax,QWORD PTR [rbp-0x20]
  413199:	je     4140de <_start@@Base+0xde4e>
  41319f:	mov    rax,QWORD PTR [rbp-0x50]
  4131a3:	cmp    rax,QWORD PTR [rbp-0x58]
  4131a7:	je     4140de <_start@@Base+0xde4e>
  4131ad:	movzx  eax,WORD PTR [rbp-0x30]
  4131b1:	test   ax,ax
  4131b4:	jne    4131c8 <_start@@Base+0xcf38>
  4131b6:	mov    rax,QWORD PTR [rbp-0x48]
  4131ba:	mov    eax,DWORD PTR [rax+0x10]
  4131bd:	and    eax,0x2
  4131c0:	test   eax,eax
  4131c2:	je     414076 <_start@@Base+0xdde6>
  4131c8:	mov    rax,QWORD PTR [rbp-0x48]
  4131cc:	mov    rax,QWORD PTR [rax]
  4131cf:	mov    ecx,0x2
  4131d4:	mov    edx,0x2
  4131d9:	mov    esi,0x2
  4131de:	mov    rdi,rax
  4131e1:	call   420ef1 <flatcc_builder_table_add@@Base>
  4131e6:	mov    QWORD PTR [rbp-0x18],rax
  4131ea:	cmp    QWORD PTR [rbp-0x18],0x0
  4131ef:	je     4140e1 <_start@@Base+0xde51>
  4131f5:	movzx  eax,WORD PTR [rbp-0x30]
  4131f9:	movsx  edx,ax
  4131fc:	mov    rax,QWORD PTR [rbp-0x18]
  413200:	mov    esi,edx
  413202:	mov    rdi,rax
  413205:	call   40648e <_start@@Base+0x1fe>
  41320a:	jmp    414076 <_start@@Base+0xdde6>
  41320f:	mov    rdx,QWORD PTR [rbp-0x58]
  413213:	mov    rcx,QWORD PTR [rbp-0x50]
  413217:	mov    rax,QWORD PTR [rbp-0x48]
  41321b:	mov    rsi,rcx
  41321e:	mov    rdi,rax
  413221:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  413226:	mov    QWORD PTR [rbp-0x50],rax
  41322a:	jmp    414076 <_start@@Base+0xdde6>
  41322f:	mov    rdx,QWORD PTR [rbp-0x58]
  413233:	mov    rcx,QWORD PTR [rbp-0x50]
  413237:	mov    rax,QWORD PTR [rbp-0x48]
  41323b:	mov    rsi,rcx
  41323e:	mov    rdi,rax
  413241:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  413246:	mov    QWORD PTR [rbp-0x50],rax
  41324a:	jmp    414076 <_start@@Base+0xdde6>
  41324f:	movabs rax,0xffffff0000000000
  413259:	and    rax,QWORD PTR [rbp-0x28]
  41325d:	mov    rdx,rax
  413260:	movabs rax,0x6936340000000000
  41326a:	cmp    rdx,rax
  41326d:	jne    4133a6 <_start@@Base+0xd116>
  413273:	mov    rax,QWORD PTR [rbp-0x50]
  413277:	mov    QWORD PTR [rbp-0x20],rax
  41327b:	mov    rdx,QWORD PTR [rbp-0x58]
  41327f:	mov    rsi,QWORD PTR [rbp-0x20]
  413283:	mov    rax,QWORD PTR [rbp-0x48]
  413287:	mov    ecx,0x3
  41328c:	mov    rdi,rax
  41328f:	call   406d6d <_start@@Base+0xadd>
  413294:	mov    QWORD PTR [rbp-0x50],rax
  413298:	mov    rax,QWORD PTR [rbp-0x20]
  41329c:	cmp    rax,QWORD PTR [rbp-0x50]
  4132a0:	je     413386 <_start@@Base+0xd0f6>
  4132a6:	mov    QWORD PTR [rbp-0x30],0x0
  4132ae:	mov    rax,QWORD PTR [rbp-0x50]
  4132b2:	mov    QWORD PTR [rbp-0x20],rax
  4132b6:	lea    rcx,[rbp-0x30]
  4132ba:	mov    rdx,QWORD PTR [rbp-0x58]
  4132be:	mov    rsi,QWORD PTR [rbp-0x20]
  4132c2:	mov    rax,QWORD PTR [rbp-0x48]
  4132c6:	mov    rdi,rax
  4132c9:	call   407769 <_start@@Base+0x14d9>
  4132ce:	mov    QWORD PTR [rbp-0x50],rax
  4132d2:	mov    rax,QWORD PTR [rbp-0x20]
  4132d6:	cmp    rax,QWORD PTR [rbp-0x50]
  4132da:	jne    413326 <_start@@Base+0xd096>
  4132dc:	mov    rax,QWORD PTR [rbp-0x50]
  4132e0:	mov    QWORD PTR [rbp-0x20],rax
  4132e4:	lea    rcx,[rbp-0x30]
  4132e8:	mov    rdx,QWORD PTR [rbp-0x58]
  4132ec:	mov    rsi,QWORD PTR [rbp-0x20]
  4132f0:	mov    rax,QWORD PTR [rbp-0x48]
  4132f4:	mov    r8,rcx
  4132f7:	lea    rcx,[rip+0x344e2]        # 4477e0 <__data_start@@Base+0x720>
  4132fe:	mov    rdi,rax
  413301:	call   4080e1 <_start@@Base+0x1e51>
  413306:	mov    QWORD PTR [rbp-0x50],rax
  41330a:	mov    rax,QWORD PTR [rbp-0x50]
  41330e:	cmp    rax,QWORD PTR [rbp-0x20]
  413312:	je     4140e4 <_start@@Base+0xde54>
  413318:	mov    rax,QWORD PTR [rbp-0x50]
  41331c:	cmp    rax,QWORD PTR [rbp-0x58]
  413320:	je     4140e4 <_start@@Base+0xde54>
  413326:	mov    rax,QWORD PTR [rbp-0x30]
  41332a:	test   rax,rax
  41332d:	jne    413341 <_start@@Base+0xd0b1>
  41332f:	mov    rax,QWORD PTR [rbp-0x48]
  413333:	mov    eax,DWORD PTR [rax+0x10]
  413336:	and    eax,0x2
  413339:	test   eax,eax
  41333b:	je     414076 <_start@@Base+0xdde6>
  413341:	mov    rax,QWORD PTR [rbp-0x48]
  413345:	mov    rax,QWORD PTR [rax]
  413348:	mov    ecx,0x8
  41334d:	mov    edx,0x8
  413352:	mov    esi,0x6
  413357:	mov    rdi,rax
  41335a:	call   420ef1 <flatcc_builder_table_add@@Base>
  41335f:	mov    QWORD PTR [rbp-0x18],rax
  413363:	cmp    QWORD PTR [rbp-0x18],0x0
  413368:	je     4140e7 <_start@@Base+0xde57>
  41336e:	mov    rdx,QWORD PTR [rbp-0x30]
  413372:	mov    rax,QWORD PTR [rbp-0x18]
  413376:	mov    rsi,rdx
  413379:	mov    rdi,rax
  41337c:	call   4064f5 <_start@@Base+0x265>
  413381:	jmp    414076 <_start@@Base+0xdde6>
  413386:	mov    rdx,QWORD PTR [rbp-0x58]
  41338a:	mov    rcx,QWORD PTR [rbp-0x50]
  41338e:	mov    rax,QWORD PTR [rbp-0x48]
  413392:	mov    rsi,rcx
  413395:	mov    rdi,rax
  413398:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41339d:	mov    QWORD PTR [rbp-0x50],rax
  4133a1:	jmp    414076 <_start@@Base+0xdde6>
  4133a6:	movabs rax,0xffffff0000000000
  4133b0:	and    rax,QWORD PTR [rbp-0x28]
  4133b4:	mov    rdx,rax
  4133b7:	movabs rax,0x6933320000000000
  4133c1:	cmp    rdx,rax
  4133c4:	jne    4134f8 <_start@@Base+0xd268>
  4133ca:	mov    rax,QWORD PTR [rbp-0x50]
  4133ce:	mov    QWORD PTR [rbp-0x20],rax
  4133d2:	mov    rdx,QWORD PTR [rbp-0x58]
  4133d6:	mov    rsi,QWORD PTR [rbp-0x20]
  4133da:	mov    rax,QWORD PTR [rbp-0x48]
  4133de:	mov    ecx,0x3
  4133e3:	mov    rdi,rax
  4133e6:	call   406d6d <_start@@Base+0xadd>
  4133eb:	mov    QWORD PTR [rbp-0x50],rax
  4133ef:	mov    rax,QWORD PTR [rbp-0x20]
  4133f3:	cmp    rax,QWORD PTR [rbp-0x50]
  4133f7:	je     4134d8 <_start@@Base+0xd248>
  4133fd:	mov    DWORD PTR [rbp-0x30],0x0
  413404:	mov    rax,QWORD PTR [rbp-0x50]
  413408:	mov    QWORD PTR [rbp-0x20],rax
  41340c:	lea    rcx,[rbp-0x30]
  413410:	mov    rdx,QWORD PTR [rbp-0x58]
  413414:	mov    rsi,QWORD PTR [rbp-0x20]
  413418:	mov    rax,QWORD PTR [rbp-0x48]
  41341c:	mov    rdi,rax
  41341f:	call   407830 <_start@@Base+0x15a0>
  413424:	mov    QWORD PTR [rbp-0x50],rax
  413428:	mov    rax,QWORD PTR [rbp-0x20]
  41342c:	cmp    rax,QWORD PTR [rbp-0x50]
  413430:	jne    41347c <_start@@Base+0xd1ec>
  413432:	mov    rax,QWORD PTR [rbp-0x50]
  413436:	mov    QWORD PTR [rbp-0x20],rax
  41343a:	lea    rcx,[rbp-0x30]
  41343e:	mov    rdx,QWORD PTR [rbp-0x58]
  413442:	mov    rsi,QWORD PTR [rbp-0x20]
  413446:	mov    rax,QWORD PTR [rbp-0x48]
  41344a:	mov    r8,rcx
  41344d:	lea    rcx,[rip+0x343ac]        # 447800 <__data_start@@Base+0x740>
  413454:	mov    rdi,rax
  413457:	call   408244 <_start@@Base+0x1fb4>
  41345c:	mov    QWORD PTR [rbp-0x50],rax
  413460:	mov    rax,QWORD PTR [rbp-0x50]
  413464:	cmp    rax,QWORD PTR [rbp-0x20]
  413468:	je     4140ea <_start@@Base+0xde5a>
  41346e:	mov    rax,QWORD PTR [rbp-0x50]
  413472:	cmp    rax,QWORD PTR [rbp-0x58]
  413476:	je     4140ea <_start@@Base+0xde5a>
  41347c:	mov    eax,DWORD PTR [rbp-0x30]
  41347f:	test   eax,eax
  413481:	jne    413495 <_start@@Base+0xd205>
  413483:	mov    rax,QWORD PTR [rbp-0x48]
  413487:	mov    eax,DWORD PTR [rax+0x10]
  41348a:	and    eax,0x2
  41348d:	test   eax,eax
  41348f:	je     414076 <_start@@Base+0xdde6>
  413495:	mov    rax,QWORD PTR [rbp-0x48]
  413499:	mov    rax,QWORD PTR [rax]
  41349c:	mov    ecx,0x4
  4134a1:	mov    edx,0x4
  4134a6:	mov    esi,0x4
  4134ab:	mov    rdi,rax
  4134ae:	call   420ef1 <flatcc_builder_table_add@@Base>
  4134b3:	mov    QWORD PTR [rbp-0x18],rax
  4134b7:	cmp    QWORD PTR [rbp-0x18],0x0
  4134bc:	je     4140ed <_start@@Base+0xde5d>
  4134c2:	mov    edx,DWORD PTR [rbp-0x30]
  4134c5:	mov    rax,QWORD PTR [rbp-0x18]
  4134c9:	mov    esi,edx
  4134cb:	mov    rdi,rax
  4134ce:	call   4064c3 <_start@@Base+0x233>
  4134d3:	jmp    414076 <_start@@Base+0xdde6>
  4134d8:	mov    rdx,QWORD PTR [rbp-0x58]
  4134dc:	mov    rcx,QWORD PTR [rbp-0x50]
  4134e0:	mov    rax,QWORD PTR [rbp-0x48]
  4134e4:	mov    rsi,rcx
  4134e7:	mov    rdi,rax
  4134ea:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4134ef:	mov    QWORD PTR [rbp-0x50],rax
  4134f3:	jmp    414076 <_start@@Base+0xdde6>
  4134f8:	mov    rdx,QWORD PTR [rbp-0x58]
  4134fc:	mov    rcx,QWORD PTR [rbp-0x50]
  413500:	mov    rax,QWORD PTR [rbp-0x48]
  413504:	mov    rsi,rcx
  413507:	mov    rdi,rax
  41350a:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41350f:	mov    QWORD PTR [rbp-0x50],rax
  413513:	jmp    414076 <_start@@Base+0xdde6>
  413518:	movabs rax,0x753633ffffffffff
  413522:	cmp    QWORD PTR [rbp-0x28],rax
  413526:	ja     41397d <_start@@Base+0xd6ed>
  41352c:	movabs rax,0x753135ffffffffff
  413536:	cmp    QWORD PTR [rbp-0x28],rax
  41353a:	ja     4136b4 <_start@@Base+0xd424>
  413540:	movabs rax,0xffff000000000000
  41354a:	and    rax,QWORD PTR [rbp-0x28]
  41354e:	mov    rdx,rax
  413551:	movabs rax,0x6938000000000000
  41355b:	cmp    rdx,rax
  41355e:	jne    413694 <_start@@Base+0xd404>
  413564:	mov    rax,QWORD PTR [rbp-0x50]
  413568:	mov    QWORD PTR [rbp-0x20],rax
  41356c:	mov    rdx,QWORD PTR [rbp-0x58]
  413570:	mov    rsi,QWORD PTR [rbp-0x20]
  413574:	mov    rax,QWORD PTR [rbp-0x48]
  413578:	mov    ecx,0x2
  41357d:	mov    rdi,rax
  413580:	call   406d6d <_start@@Base+0xadd>
  413585:	mov    QWORD PTR [rbp-0x50],rax
  413589:	mov    rax,QWORD PTR [rbp-0x20]
  41358d:	cmp    rax,QWORD PTR [rbp-0x50]
  413591:	je     413674 <_start@@Base+0xd3e4>
  413597:	mov    BYTE PTR [rbp-0x30],0x0
  41359b:	mov    rax,QWORD PTR [rbp-0x50]
  41359f:	mov    QWORD PTR [rbp-0x20],rax
  4135a3:	lea    rcx,[rbp-0x30]
  4135a7:	mov    rdx,QWORD PTR [rbp-0x58]
  4135ab:	mov    rsi,QWORD PTR [rbp-0x20]
  4135af:	mov    rax,QWORD PTR [rbp-0x48]
  4135b3:	mov    rdi,rax
  4135b6:	call   4079bb <_start@@Base+0x172b>
  4135bb:	mov    QWORD PTR [rbp-0x50],rax
  4135bf:	mov    rax,QWORD PTR [rbp-0x20]
  4135c3:	cmp    rax,QWORD PTR [rbp-0x50]
  4135c7:	jne    413613 <_start@@Base+0xd383>
  4135c9:	mov    rax,QWORD PTR [rbp-0x50]
  4135cd:	mov    QWORD PTR [rbp-0x20],rax
  4135d1:	lea    rcx,[rbp-0x30]
  4135d5:	mov    rdx,QWORD PTR [rbp-0x58]
  4135d9:	mov    rsi,QWORD PTR [rbp-0x20]
  4135dd:	mov    rax,QWORD PTR [rbp-0x48]
  4135e1:	mov    r8,rcx
  4135e4:	lea    rcx,[rip+0x34235]        # 447820 <__data_start@@Base+0x760>
  4135eb:	mov    rdi,rax
  4135ee:	call   408503 <_start@@Base+0x2273>
  4135f3:	mov    QWORD PTR [rbp-0x50],rax
  4135f7:	mov    rax,QWORD PTR [rbp-0x50]
  4135fb:	cmp    rax,QWORD PTR [rbp-0x20]
  4135ff:	je     4140f0 <_start@@Base+0xde60>
  413605:	mov    rax,QWORD PTR [rbp-0x50]
  413609:	cmp    rax,QWORD PTR [rbp-0x58]
  41360d:	je     4140f0 <_start@@Base+0xde60>
  413613:	movzx  eax,BYTE PTR [rbp-0x30]
  413617:	test   al,al
  413619:	jne    41362d <_start@@Base+0xd39d>
  41361b:	mov    rax,QWORD PTR [rbp-0x48]
  41361f:	mov    eax,DWORD PTR [rax+0x10]
  413622:	and    eax,0x2
  413625:	test   eax,eax
  413627:	je     414076 <_start@@Base+0xdde6>
  41362d:	mov    rax,QWORD PTR [rbp-0x48]
  413631:	mov    rax,QWORD PTR [rax]
  413634:	mov    ecx,0x1
  413639:	mov    edx,0x1
  41363e:	mov    esi,0x0
  413643:	mov    rdi,rax
  413646:	call   420ef1 <flatcc_builder_table_add@@Base>
  41364b:	mov    QWORD PTR [rbp-0x18],rax
  41364f:	cmp    QWORD PTR [rbp-0x18],0x0
  413654:	je     4140f3 <_start@@Base+0xde63>
  41365a:	movzx  eax,BYTE PTR [rbp-0x30]
  41365e:	movsx  edx,al
  413661:	mov    rax,QWORD PTR [rbp-0x18]
  413665:	mov    esi,edx
  413667:	mov    rdi,rax
  41366a:	call   406459 <_start@@Base+0x1c9>
  41366f:	jmp    414076 <_start@@Base+0xdde6>
  413674:	mov    rdx,QWORD PTR [rbp-0x58]
  413678:	mov    rcx,QWORD PTR [rbp-0x50]
  41367c:	mov    rax,QWORD PTR [rbp-0x48]
  413680:	mov    rsi,rcx
  413683:	mov    rdi,rax
  413686:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41368b:	mov    QWORD PTR [rbp-0x50],rax
  41368f:	jmp    414076 <_start@@Base+0xdde6>
  413694:	mov    rdx,QWORD PTR [rbp-0x58]
  413698:	mov    rcx,QWORD PTR [rbp-0x50]
  41369c:	mov    rax,QWORD PTR [rbp-0x48]
  4136a0:	mov    rsi,rcx
  4136a3:	mov    rdi,rax
  4136a6:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4136ab:	mov    QWORD PTR [rbp-0x50],rax
  4136af:	jmp    414076 <_start@@Base+0xdde6>
  4136b4:	movabs rax,0xffffff0000000000
  4136be:	and    rax,QWORD PTR [rbp-0x28]
  4136c2:	mov    rdx,rax
  4136c5:	movabs rax,0x7533320000000000
  4136cf:	cmp    rdx,rax
  4136d2:	jne    413806 <_start@@Base+0xd576>
  4136d8:	mov    rax,QWORD PTR [rbp-0x50]
  4136dc:	mov    QWORD PTR [rbp-0x20],rax
  4136e0:	mov    rdx,QWORD PTR [rbp-0x58]
  4136e4:	mov    rsi,QWORD PTR [rbp-0x20]
  4136e8:	mov    rax,QWORD PTR [rbp-0x48]
  4136ec:	mov    ecx,0x3
  4136f1:	mov    rdi,rax
  4136f4:	call   406d6d <_start@@Base+0xadd>
  4136f9:	mov    QWORD PTR [rbp-0x50],rax
  4136fd:	mov    rax,QWORD PTR [rbp-0x20]
  413701:	cmp    rax,QWORD PTR [rbp-0x50]
  413705:	je     4137e6 <_start@@Base+0xd556>
  41370b:	mov    DWORD PTR [rbp-0x30],0x0
  413712:	mov    rax,QWORD PTR [rbp-0x50]
  413716:	mov    QWORD PTR [rbp-0x20],rax
  41371a:	lea    rcx,[rbp-0x30]
  41371e:	mov    rdx,QWORD PTR [rbp-0x58]
  413722:	mov    rsi,QWORD PTR [rbp-0x20]
  413726:	mov    rax,QWORD PTR [rbp-0x48]
  41372a:	mov    rdi,rax
  41372d:	call   40751b <_start@@Base+0x128b>
  413732:	mov    QWORD PTR [rbp-0x50],rax
  413736:	mov    rax,QWORD PTR [rbp-0x20]
  41373a:	cmp    rax,QWORD PTR [rbp-0x50]
  41373e:	jne    41378a <_start@@Base+0xd4fa>
  413740:	mov    rax,QWORD PTR [rbp-0x50]
  413744:	mov    QWORD PTR [rbp-0x20],rax
  413748:	lea    rcx,[rbp-0x30]
  41374c:	mov    rdx,QWORD PTR [rbp-0x58]
  413750:	mov    rsi,QWORD PTR [rbp-0x20]
  413754:	mov    rax,QWORD PTR [rbp-0x48]
  413758:	mov    r8,rcx
  41375b:	lea    rcx,[rip+0x340de]        # 447840 <__data_start@@Base+0x780>
  413762:	mov    rdi,rax
  413765:	call   407ccd <_start@@Base+0x1a3d>
  41376a:	mov    QWORD PTR [rbp-0x50],rax
  41376e:	mov    rax,QWORD PTR [rbp-0x50]
  413772:	cmp    rax,QWORD PTR [rbp-0x20]
  413776:	je     4140f6 <_start@@Base+0xde66>
  41377c:	mov    rax,QWORD PTR [rbp-0x50]
  413780:	cmp    rax,QWORD PTR [rbp-0x58]
  413784:	je     4140f6 <_start@@Base+0xde66>
  41378a:	mov    eax,DWORD PTR [rbp-0x30]
  41378d:	test   eax,eax
  41378f:	jne    4137a3 <_start@@Base+0xd513>
  413791:	mov    rax,QWORD PTR [rbp-0x48]
  413795:	mov    eax,DWORD PTR [rax+0x10]
  413798:	and    eax,0x2
  41379b:	test   eax,eax
  41379d:	je     414076 <_start@@Base+0xdde6>
  4137a3:	mov    rax,QWORD PTR [rbp-0x48]
  4137a7:	mov    rax,QWORD PTR [rax]
  4137aa:	mov    ecx,0x4
  4137af:	mov    edx,0x4
  4137b4:	mov    esi,0x5
  4137b9:	mov    rdi,rax
  4137bc:	call   420ef1 <flatcc_builder_table_add@@Base>
  4137c1:	mov    QWORD PTR [rbp-0x18],rax
  4137c5:	cmp    QWORD PTR [rbp-0x18],0x0
  4137ca:	je     4140f9 <_start@@Base+0xde69>
  4137d0:	mov    edx,DWORD PTR [rbp-0x30]
  4137d3:	mov    rax,QWORD PTR [rbp-0x18]
  4137d7:	mov    esi,edx
  4137d9:	mov    rdi,rax
  4137dc:	call   4063ef <_start@@Base+0x15f>
  4137e1:	jmp    414076 <_start@@Base+0xdde6>
  4137e6:	mov    rdx,QWORD PTR [rbp-0x58]
  4137ea:	mov    rcx,QWORD PTR [rbp-0x50]
  4137ee:	mov    rax,QWORD PTR [rbp-0x48]
  4137f2:	mov    rsi,rcx
  4137f5:	mov    rdi,rax
  4137f8:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4137fd:	mov    QWORD PTR [rbp-0x50],rax
  413801:	jmp    414076 <_start@@Base+0xdde6>
  413806:	movabs rax,0xffffff0000000000
  413810:	and    rax,QWORD PTR [rbp-0x28]
  413814:	mov    rdx,rax
  413817:	movabs rax,0x7531360000000000
  413821:	cmp    rdx,rax
  413824:	jne    41395d <_start@@Base+0xd6cd>
  41382a:	mov    rax,QWORD PTR [rbp-0x50]
  41382e:	mov    QWORD PTR [rbp-0x20],rax
  413832:	mov    rdx,QWORD PTR [rbp-0x58]
  413836:	mov    rsi,QWORD PTR [rbp-0x20]
  41383a:	mov    rax,QWORD PTR [rbp-0x48]
  41383e:	mov    ecx,0x3
  413843:	mov    rdi,rax
  413846:	call   406d6d <_start@@Base+0xadd>
  41384b:	mov    QWORD PTR [rbp-0x50],rax
  41384f:	mov    rax,QWORD PTR [rbp-0x20]
  413853:	cmp    rax,QWORD PTR [rbp-0x50]
  413857:	je     41393d <_start@@Base+0xd6ad>
  41385d:	mov    WORD PTR [rbp-0x30],0x0
  413863:	mov    rax,QWORD PTR [rbp-0x50]
  413867:	mov    QWORD PTR [rbp-0x20],rax
  41386b:	lea    rcx,[rbp-0x30]
  41386f:	mov    rdx,QWORD PTR [rbp-0x58]
  413873:	mov    rsi,QWORD PTR [rbp-0x20]
  413877:	mov    rax,QWORD PTR [rbp-0x48]
  41387b:	mov    rdi,rax
  41387e:	call   4075e1 <_start@@Base+0x1351>
  413883:	mov    QWORD PTR [rbp-0x50],rax
  413887:	mov    rax,QWORD PTR [rbp-0x20]
  41388b:	cmp    rax,QWORD PTR [rbp-0x50]
  41388f:	jne    4138db <_start@@Base+0xd64b>
  413891:	mov    rax,QWORD PTR [rbp-0x50]
  413895:	mov    QWORD PTR [rbp-0x20],rax
  413899:	lea    rcx,[rbp-0x30]
  41389d:	mov    rdx,QWORD PTR [rbp-0x58]
  4138a1:	mov    rsi,QWORD PTR [rbp-0x20]
  4138a5:	mov    rax,QWORD PTR [rbp-0x48]
  4138a9:	mov    r8,rcx
  4138ac:	lea    rcx,[rip+0x33fad]        # 447860 <__data_start@@Base+0x7a0>
  4138b3:	mov    rdi,rax
  4138b6:	call   407e2a <_start@@Base+0x1b9a>
  4138bb:	mov    QWORD PTR [rbp-0x50],rax
  4138bf:	mov    rax,QWORD PTR [rbp-0x50]
  4138c3:	cmp    rax,QWORD PTR [rbp-0x20]
  4138c7:	je     4140fc <_start@@Base+0xde6c>
  4138cd:	mov    rax,QWORD PTR [rbp-0x50]
  4138d1:	cmp    rax,QWORD PTR [rbp-0x58]
  4138d5:	je     4140fc <_start@@Base+0xde6c>
  4138db:	movzx  eax,WORD PTR [rbp-0x30]
  4138df:	test   ax,ax
  4138e2:	jne    4138f6 <_start@@Base+0xd666>
  4138e4:	mov    rax,QWORD PTR [rbp-0x48]
  4138e8:	mov    eax,DWORD PTR [rax+0x10]
  4138eb:	and    eax,0x2
  4138ee:	test   eax,eax
  4138f0:	je     414076 <_start@@Base+0xdde6>
  4138f6:	mov    rax,QWORD PTR [rbp-0x48]
  4138fa:	mov    rax,QWORD PTR [rax]
  4138fd:	mov    ecx,0x2
  413902:	mov    edx,0x2
  413907:	mov    esi,0x3
  41390c:	mov    rdi,rax
  41390f:	call   420ef1 <flatcc_builder_table_add@@Base>
  413914:	mov    QWORD PTR [rbp-0x18],rax
  413918:	cmp    QWORD PTR [rbp-0x18],0x0
  41391d:	je     4140ff <_start@@Base+0xde6f>
  413923:	movzx  eax,WORD PTR [rbp-0x30]
  413927:	movzx  edx,ax
  41392a:	mov    rax,QWORD PTR [rbp-0x18]
  41392e:	mov    esi,edx
  413930:	mov    rdi,rax
  413933:	call   4063ba <_start@@Base+0x12a>
  413938:	jmp    414076 <_start@@Base+0xdde6>
  41393d:	mov    rdx,QWORD PTR [rbp-0x58]
  413941:	mov    rcx,QWORD PTR [rbp-0x50]
  413945:	mov    rax,QWORD PTR [rbp-0x48]
  413949:	mov    rsi,rcx
  41394c:	mov    rdi,rax
  41394f:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  413954:	mov    QWORD PTR [rbp-0x50],rax
  413958:	jmp    414076 <_start@@Base+0xdde6>
  41395d:	mov    rdx,QWORD PTR [rbp-0x58]
  413961:	mov    rcx,QWORD PTR [rbp-0x50]
  413965:	mov    rax,QWORD PTR [rbp-0x48]
  413969:	mov    rsi,rcx
  41396c:	mov    rdi,rax
  41396f:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  413974:	mov    QWORD PTR [rbp-0x50],rax
  413978:	jmp    414076 <_start@@Base+0xdde6>
  41397d:	movabs rax,0x7537ffffffffffff
  413987:	cmp    QWORD PTR [rbp-0x28],rax
  41398b:	ja     413b08 <_start@@Base+0xd878>
  413991:	movabs rax,0xffffff0000000000
  41399b:	and    rax,QWORD PTR [rbp-0x28]
  41399f:	mov    rdx,rax
  4139a2:	movabs rax,0x7536340000000000
  4139ac:	cmp    rdx,rax
  4139af:	jne    413ae8 <_start@@Base+0xd858>
  4139b5:	mov    rax,QWORD PTR [rbp-0x50]
  4139b9:	mov    QWORD PTR [rbp-0x20],rax
  4139bd:	mov    rdx,QWORD PTR [rbp-0x58]
  4139c1:	mov    rsi,QWORD PTR [rbp-0x20]
  4139c5:	mov    rax,QWORD PTR [rbp-0x48]
  4139c9:	mov    ecx,0x3
  4139ce:	mov    rdi,rax
  4139d1:	call   406d6d <_start@@Base+0xadd>
  4139d6:	mov    QWORD PTR [rbp-0x50],rax
  4139da:	mov    rax,QWORD PTR [rbp-0x20]
  4139de:	cmp    rax,QWORD PTR [rbp-0x50]
  4139e2:	je     413ac8 <_start@@Base+0xd838>
  4139e8:	mov    QWORD PTR [rbp-0x30],0x0
  4139f0:	mov    rax,QWORD PTR [rbp-0x50]
  4139f4:	mov    QWORD PTR [rbp-0x20],rax
  4139f8:	lea    rcx,[rbp-0x30]
  4139fc:	mov    rdx,QWORD PTR [rbp-0x58]
  413a00:	mov    rsi,QWORD PTR [rbp-0x20]
  413a04:	mov    rax,QWORD PTR [rbp-0x48]
  413a08:	mov    rdi,rax
  413a0b:	call   407454 <_start@@Base+0x11c4>
  413a10:	mov    QWORD PTR [rbp-0x50],rax
  413a14:	mov    rax,QWORD PTR [rbp-0x20]
  413a18:	cmp    rax,QWORD PTR [rbp-0x50]
  413a1c:	jne    413a68 <_start@@Base+0xd7d8>
  413a1e:	mov    rax,QWORD PTR [rbp-0x50]
  413a22:	mov    QWORD PTR [rbp-0x20],rax
  413a26:	lea    rcx,[rbp-0x30]
  413a2a:	mov    rdx,QWORD PTR [rbp-0x58]
  413a2e:	mov    rsi,QWORD PTR [rbp-0x20]
  413a32:	mov    rax,QWORD PTR [rbp-0x48]
  413a36:	mov    r8,rcx
  413a39:	lea    rcx,[rip+0x33e40]        # 447880 <__data_start@@Base+0x7c0>
  413a40:	mov    rdi,rax
  413a43:	call   407b6a <_start@@Base+0x18da>
  413a48:	mov    QWORD PTR [rbp-0x50],rax
  413a4c:	mov    rax,QWORD PTR [rbp-0x50]
  413a50:	cmp    rax,QWORD PTR [rbp-0x20]
  413a54:	je     414102 <_start@@Base+0xde72>
  413a5a:	mov    rax,QWORD PTR [rbp-0x50]
  413a5e:	cmp    rax,QWORD PTR [rbp-0x58]
  413a62:	je     414102 <_start@@Base+0xde72>
  413a68:	mov    rax,QWORD PTR [rbp-0x30]
  413a6c:	test   rax,rax
  413a6f:	jne    413a83 <_start@@Base+0xd7f3>
  413a71:	mov    rax,QWORD PTR [rbp-0x48]
  413a75:	mov    eax,DWORD PTR [rax+0x10]
  413a78:	and    eax,0x2
  413a7b:	test   eax,eax
  413a7d:	je     414076 <_start@@Base+0xdde6>
  413a83:	mov    rax,QWORD PTR [rbp-0x48]
  413a87:	mov    rax,QWORD PTR [rax]
  413a8a:	mov    ecx,0x8
  413a8f:	mov    edx,0x8
  413a94:	mov    esi,0x7
  413a99:	mov    rdi,rax
  413a9c:	call   420ef1 <flatcc_builder_table_add@@Base>
  413aa1:	mov    QWORD PTR [rbp-0x18],rax
  413aa5:	cmp    QWORD PTR [rbp-0x18],0x0
  413aaa:	je     414105 <_start@@Base+0xde75>
  413ab0:	mov    rdx,QWORD PTR [rbp-0x30]
  413ab4:	mov    rax,QWORD PTR [rbp-0x18]
  413ab8:	mov    rsi,rdx
  413abb:	mov    rdi,rax
  413abe:	call   406421 <_start@@Base+0x191>
  413ac3:	jmp    414076 <_start@@Base+0xdde6>
  413ac8:	mov    rdx,QWORD PTR [rbp-0x58]
  413acc:	mov    rcx,QWORD PTR [rbp-0x50]
  413ad0:	mov    rax,QWORD PTR [rbp-0x48]
  413ad4:	mov    rsi,rcx
  413ad7:	mov    rdi,rax
  413ada:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  413adf:	mov    QWORD PTR [rbp-0x50],rax
  413ae3:	jmp    414076 <_start@@Base+0xdde6>
  413ae8:	mov    rdx,QWORD PTR [rbp-0x58]
  413aec:	mov    rcx,QWORD PTR [rbp-0x50]
  413af0:	mov    rax,QWORD PTR [rbp-0x48]
  413af4:	mov    rsi,rcx
  413af7:	mov    rdi,rax
  413afa:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  413aff:	mov    QWORD PTR [rbp-0x50],rax
  413b03:	jmp    414076 <_start@@Base+0xdde6>
  413b08:	movabs rax,0x7637ffffffffffff
  413b12:	cmp    QWORD PTR [rbp-0x28],rax
  413b16:	ja     413c90 <_start@@Base+0xda00>
  413b1c:	movabs rax,0xffff000000000000
  413b26:	and    rax,QWORD PTR [rbp-0x28]
  413b2a:	mov    rdx,rax
  413b2d:	movabs rax,0x7538000000000000
  413b37:	cmp    rdx,rax
  413b3a:	jne    413c70 <_start@@Base+0xd9e0>
  413b40:	mov    rax,QWORD PTR [rbp-0x50]
  413b44:	mov    QWORD PTR [rbp-0x20],rax
  413b48:	mov    rdx,QWORD PTR [rbp-0x58]
  413b4c:	mov    rsi,QWORD PTR [rbp-0x20]
  413b50:	mov    rax,QWORD PTR [rbp-0x48]
  413b54:	mov    ecx,0x2
  413b59:	mov    rdi,rax
  413b5c:	call   406d6d <_start@@Base+0xadd>
  413b61:	mov    QWORD PTR [rbp-0x50],rax
  413b65:	mov    rax,QWORD PTR [rbp-0x20]
  413b69:	cmp    rax,QWORD PTR [rbp-0x50]
  413b6d:	je     413c50 <_start@@Base+0xd9c0>
  413b73:	mov    BYTE PTR [rbp-0x30],0x0
  413b77:	mov    rax,QWORD PTR [rbp-0x50]
  413b7b:	mov    QWORD PTR [rbp-0x20],rax
  413b7f:	lea    rcx,[rbp-0x30]
  413b83:	mov    rdx,QWORD PTR [rbp-0x58]
  413b87:	mov    rsi,QWORD PTR [rbp-0x20]
  413b8b:	mov    rax,QWORD PTR [rbp-0x48]
  413b8f:	mov    rdi,rax
  413b92:	call   4076a6 <_start@@Base+0x1416>
  413b97:	mov    QWORD PTR [rbp-0x50],rax
  413b9b:	mov    rax,QWORD PTR [rbp-0x20]
  413b9f:	cmp    rax,QWORD PTR [rbp-0x50]
  413ba3:	jne    413bef <_start@@Base+0xd95f>
  413ba5:	mov    rax,QWORD PTR [rbp-0x50]
  413ba9:	mov    QWORD PTR [rbp-0x20],rax
  413bad:	lea    rcx,[rbp-0x30]
  413bb1:	mov    rdx,QWORD PTR [rbp-0x58]
  413bb5:	mov    rsi,QWORD PTR [rbp-0x20]
  413bb9:	mov    rax,QWORD PTR [rbp-0x48]
  413bbd:	mov    r8,rcx
  413bc0:	lea    rcx,[rip+0x33cd9]        # 4478a0 <__data_start@@Base+0x7e0>
  413bc7:	mov    rdi,rax
  413bca:	call   407f88 <_start@@Base+0x1cf8>
  413bcf:	mov    QWORD PTR [rbp-0x50],rax
  413bd3:	mov    rax,QWORD PTR [rbp-0x50]
  413bd7:	cmp    rax,QWORD PTR [rbp-0x20]
  413bdb:	je     414108 <_start@@Base+0xde78>
  413be1:	mov    rax,QWORD PTR [rbp-0x50]
  413be5:	cmp    rax,QWORD PTR [rbp-0x58]
  413be9:	je     414108 <_start@@Base+0xde78>
  413bef:	movzx  eax,BYTE PTR [rbp-0x30]
  413bf3:	test   al,al
  413bf5:	jne    413c09 <_start@@Base+0xd979>
  413bf7:	mov    rax,QWORD PTR [rbp-0x48]
  413bfb:	mov    eax,DWORD PTR [rax+0x10]
  413bfe:	and    eax,0x2
  413c01:	test   eax,eax
  413c03:	je     414076 <_start@@Base+0xdde6>
  413c09:	mov    rax,QWORD PTR [rbp-0x48]
  413c0d:	mov    rax,QWORD PTR [rax]
  413c10:	mov    ecx,0x1
  413c15:	mov    edx,0x1
  413c1a:	mov    esi,0x1
  413c1f:	mov    rdi,rax
  413c22:	call   420ef1 <flatcc_builder_table_add@@Base>
  413c27:	mov    QWORD PTR [rbp-0x18],rax
  413c2b:	cmp    QWORD PTR [rbp-0x18],0x0
  413c30:	je     41410b <_start@@Base+0xde7b>
  413c36:	movzx  eax,BYTE PTR [rbp-0x30]
  413c3a:	movzx  edx,al
  413c3d:	mov    rax,QWORD PTR [rbp-0x18]
  413c41:	mov    esi,edx
  413c43:	mov    rdi,rax
  413c46:	call   406385 <_start@@Base+0xf5>
  413c4b:	jmp    414076 <_start@@Base+0xdde6>
  413c50:	mov    rdx,QWORD PTR [rbp-0x58]
  413c54:	mov    rcx,QWORD PTR [rbp-0x50]
  413c58:	mov    rax,QWORD PTR [rbp-0x48]
  413c5c:	mov    rsi,rcx
  413c5f:	mov    rdi,rax
  413c62:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  413c67:	mov    QWORD PTR [rbp-0x50],rax
  413c6b:	jmp    414076 <_start@@Base+0xdde6>
  413c70:	mov    rdx,QWORD PTR [rbp-0x58]
  413c74:	mov    rcx,QWORD PTR [rbp-0x50]
  413c78:	mov    rax,QWORD PTR [rbp-0x48]
  413c7c:	mov    rsi,rcx
  413c7f:	mov    rdi,rax
  413c82:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  413c87:	mov    QWORD PTR [rbp-0x50],rax
  413c8b:	jmp    414076 <_start@@Base+0xdde6>
  413c90:	movabs rax,0xffffffff00000000
  413c9a:	and    rax,QWORD PTR [rbp-0x28]
  413c9e:	mov    rdx,rax
  413ca1:	movabs rax,0x7666363400000000
  413cab:	cmp    rdx,rax
  413cae:	jne    413e7b <_start@@Base+0xdbeb>
  413cb4:	mov    rax,QWORD PTR [rbp-0x50]
  413cb8:	mov    QWORD PTR [rbp-0x20],rax
  413cbc:	mov    rdx,QWORD PTR [rbp-0x58]
  413cc0:	mov    rsi,QWORD PTR [rbp-0x20]
  413cc4:	mov    rax,QWORD PTR [rbp-0x48]
  413cc8:	mov    ecx,0x4
  413ccd:	mov    rdi,rax
  413cd0:	call   406d6d <_start@@Base+0xadd>
  413cd5:	mov    QWORD PTR [rbp-0x50],rax
  413cd9:	mov    rax,QWORD PTR [rbp-0x20]
  413cdd:	cmp    rax,QWORD PTR [rbp-0x50]
  413ce1:	je     413e5b <_start@@Base+0xdbcb>
  413ce7:	mov    rax,QWORD PTR [rbp-0x48]
  413ceb:	mov    rax,QWORD PTR [rax]
  413cee:	mov    ecx,0x1fffffff
  413cf3:	mov    edx,0x8
  413cf8:	mov    esi,0x8
  413cfd:	mov    rdi,rax
  413d00:	call   41eaf3 <flatcc_builder_start_vector@@Base>
  413d05:	test   eax,eax
  413d07:	jne    41410e <_start@@Base+0xde7e>
  413d0d:	lea    rcx,[rbp-0x38]
  413d11:	mov    rdx,QWORD PTR [rbp-0x58]
  413d15:	mov    rsi,QWORD PTR [rbp-0x50]
  413d19:	mov    rax,QWORD PTR [rbp-0x48]
  413d1d:	mov    rdi,rax
  413d20:	call   406b72 <_start@@Base+0x8e2>
  413d25:	mov    QWORD PTR [rbp-0x50],rax
  413d29:	jmp    413e03 <_start@@Base+0xdb73>
  413d2e:	vxorpd xmm0,xmm0,xmm0
  413d32:	vmovsd QWORD PTR [rbp-0x30],xmm0
  413d37:	mov    rax,QWORD PTR [rbp-0x48]
  413d3b:	mov    rax,QWORD PTR [rax]
  413d3e:	mov    esi,0x1
  413d43:	mov    rdi,rax
  413d46:	call   41e3a3 <flatcc_builder_extend_vector@@Base>
  413d4b:	mov    QWORD PTR [rbp-0x18],rax
  413d4f:	cmp    QWORD PTR [rbp-0x18],0x0
  413d54:	je     414111 <_start@@Base+0xde81>
  413d5a:	mov    rax,QWORD PTR [rbp-0x50]
  413d5e:	mov    QWORD PTR [rbp-0x20],rax
  413d62:	lea    rcx,[rbp-0x30]
  413d66:	mov    rdx,QWORD PTR [rbp-0x58]
  413d6a:	mov    rsi,QWORD PTR [rbp-0x20]
  413d6e:	mov    rax,QWORD PTR [rbp-0x48]
  413d72:	mov    rdi,rax
  413d75:	call   428b48 <flatcc_json_parser_double@@Base>
  413d7a:	mov    QWORD PTR [rbp-0x50],rax
  413d7e:	mov    rax,QWORD PTR [rbp-0x20]
  413d82:	cmp    rax,QWORD PTR [rbp-0x50]
  413d86:	jne    413dd2 <_start@@Base+0xdb42>
  413d88:	mov    rax,QWORD PTR [rbp-0x50]
  413d8c:	mov    QWORD PTR [rbp-0x20],rax
  413d90:	lea    rcx,[rbp-0x30]
  413d94:	mov    rdx,QWORD PTR [rbp-0x58]
  413d98:	mov    rsi,QWORD PTR [rbp-0x20]
  413d9c:	mov    rax,QWORD PTR [rbp-0x48]
  413da0:	mov    r8,rcx
  413da3:	lea    rcx,[rip+0x33b16]        # 4478c0 <__data_start@@Base+0x800>
  413daa:	mov    rdi,rax
  413dad:	call   408922 <_start@@Base+0x2692>
  413db2:	mov    QWORD PTR [rbp-0x50],rax
  413db6:	mov    rax,QWORD PTR [rbp-0x50]
  413dba:	cmp    rax,QWORD PTR [rbp-0x20]
  413dbe:	je     414114 <_start@@Base+0xde84>
  413dc4:	mov    rax,QWORD PTR [rbp-0x50]
  413dc8:	cmp    rax,QWORD PTR [rbp-0x58]
  413dcc:	je     414114 <_start@@Base+0xde84>
  413dd2:	mov    rdx,QWORD PTR [rbp-0x30]
  413dd6:	mov    rax,QWORD PTR [rbp-0x18]
  413dda:	vmovq  xmm0,rdx
  413ddf:	mov    rdi,rax
  413de2:	call   406594 <_start@@Base+0x304>
  413de7:	lea    rcx,[rbp-0x38]
  413deb:	mov    rdx,QWORD PTR [rbp-0x58]
  413def:	mov    rsi,QWORD PTR [rbp-0x50]
  413df3:	mov    rax,QWORD PTR [rbp-0x48]
  413df7:	mov    rdi,rax
  413dfa:	call   406c2f <_start@@Base+0x99f>
  413dff:	mov    QWORD PTR [rbp-0x50],rax
  413e03:	mov    eax,DWORD PTR [rbp-0x38]
  413e06:	test   eax,eax
  413e08:	jne    413d2e <_start@@Base+0xda9e>
  413e0e:	mov    rax,QWORD PTR [rbp-0x48]
  413e12:	mov    rax,QWORD PTR [rax]
  413e15:	mov    rdi,rax
  413e18:	call   41fce8 <flatcc_builder_end_vector@@Base>
  413e1d:	mov    DWORD PTR [rbp-0x34],eax
  413e20:	cmp    DWORD PTR [rbp-0x34],0x0
  413e24:	je     414117 <_start@@Base+0xde87>
  413e2a:	mov    rax,QWORD PTR [rbp-0x48]
  413e2e:	mov    rax,QWORD PTR [rax]
  413e31:	mov    esi,0xb
  413e36:	mov    rdi,rax
  413e39:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  413e3e:	mov    QWORD PTR [rbp-0x10],rax
  413e42:	cmp    QWORD PTR [rbp-0x10],0x0
  413e47:	je     414117 <_start@@Base+0xde87>
  413e4d:	mov    rax,QWORD PTR [rbp-0x10]
  413e51:	mov    edx,DWORD PTR [rbp-0x34]
  413e54:	mov    DWORD PTR [rax],edx
  413e56:	jmp    414076 <_start@@Base+0xdde6>
  413e5b:	mov    rdx,QWORD PTR [rbp-0x58]
  413e5f:	mov    rcx,QWORD PTR [rbp-0x50]
  413e63:	mov    rax,QWORD PTR [rbp-0x48]
  413e67:	mov    rsi,rcx
  413e6a:	mov    rdi,rax
  413e6d:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  413e72:	mov    QWORD PTR [rbp-0x50],rax
  413e76:	jmp    414076 <_start@@Base+0xdde6>
  413e7b:	movabs rax,0xffff000000000000
  413e85:	and    rax,QWORD PTR [rbp-0x28]
  413e89:	mov    rdx,rax
  413e8c:	movabs rax,0x7638000000000000
  413e96:	cmp    rdx,rax
  413e99:	jne    41405b <_start@@Base+0xddcb>
  413e9f:	mov    rax,QWORD PTR [rbp-0x50]
  413ea3:	mov    QWORD PTR [rbp-0x20],rax
  413ea7:	mov    rdx,QWORD PTR [rbp-0x58]
  413eab:	mov    rsi,QWORD PTR [rbp-0x20]
  413eaf:	mov    rax,QWORD PTR [rbp-0x48]
  413eb3:	mov    ecx,0x2
  413eb8:	mov    rdi,rax
  413ebb:	call   406d6d <_start@@Base+0xadd>
  413ec0:	mov    QWORD PTR [rbp-0x50],rax
  413ec4:	mov    rax,QWORD PTR [rbp-0x20]
  413ec8:	cmp    rax,QWORD PTR [rbp-0x50]
  413ecc:	je     41403e <_start@@Base+0xddae>
  413ed2:	mov    rax,QWORD PTR [rbp-0x48]
  413ed6:	mov    rax,QWORD PTR [rax]
  413ed9:	mov    ecx,0xffffffff
  413ede:	mov    edx,0x1
  413ee3:	mov    esi,0x1
  413ee8:	mov    rdi,rax
  413eeb:	call   41eaf3 <flatcc_builder_start_vector@@Base>
  413ef0:	test   eax,eax
  413ef2:	jne    41411a <_start@@Base+0xde8a>
  413ef8:	lea    rcx,[rbp-0x38]
  413efc:	mov    rdx,QWORD PTR [rbp-0x58]
  413f00:	mov    rsi,QWORD PTR [rbp-0x50]
  413f04:	mov    rax,QWORD PTR [rbp-0x48]
  413f08:	mov    rdi,rax
  413f0b:	call   406b72 <_start@@Base+0x8e2>
  413f10:	mov    QWORD PTR [rbp-0x50],rax
  413f14:	jmp    413fe9 <_start@@Base+0xdd59>
  413f19:	mov    BYTE PTR [rbp-0x30],0x0
  413f1d:	mov    rax,QWORD PTR [rbp-0x48]
  413f21:	mov    rax,QWORD PTR [rax]
  413f24:	mov    esi,0x1
  413f29:	mov    rdi,rax
  413f2c:	call   41e3a3 <flatcc_builder_extend_vector@@Base>
  413f31:	mov    QWORD PTR [rbp-0x18],rax
  413f35:	cmp    QWORD PTR [rbp-0x18],0x0
  413f3a:	je     41411d <_start@@Base+0xde8d>
  413f40:	mov    rax,QWORD PTR [rbp-0x50]
  413f44:	mov    QWORD PTR [rbp-0x20],rax
  413f48:	lea    rcx,[rbp-0x30]
  413f4c:	mov    rdx,QWORD PTR [rbp-0x58]
  413f50:	mov    rsi,QWORD PTR [rbp-0x20]
  413f54:	mov    rax,QWORD PTR [rbp-0x48]
  413f58:	mov    rdi,rax
  413f5b:	call   4079bb <_start@@Base+0x172b>
  413f60:	mov    QWORD PTR [rbp-0x50],rax
  413f64:	mov    rax,QWORD PTR [rbp-0x20]
  413f68:	cmp    rax,QWORD PTR [rbp-0x50]
  413f6c:	jne    413fb8 <_start@@Base+0xdd28>
  413f6e:	mov    rax,QWORD PTR [rbp-0x50]
  413f72:	mov    QWORD PTR [rbp-0x20],rax
  413f76:	lea    rcx,[rbp-0x30]
  413f7a:	mov    rdx,QWORD PTR [rbp-0x58]
  413f7e:	mov    rsi,QWORD PTR [rbp-0x20]
  413f82:	mov    rax,QWORD PTR [rbp-0x48]
  413f86:	mov    r8,rcx
  413f89:	lea    rcx,[rip+0x33950]        # 4478e0 <__data_start@@Base+0x820>
  413f90:	mov    rdi,rax
  413f93:	call   408503 <_start@@Base+0x2273>
  413f98:	mov    QWORD PTR [rbp-0x50],rax
  413f9c:	mov    rax,QWORD PTR [rbp-0x50]
  413fa0:	cmp    rax,QWORD PTR [rbp-0x20]
  413fa4:	je     414120 <_start@@Base+0xde90>
  413faa:	mov    rax,QWORD PTR [rbp-0x50]
  413fae:	cmp    rax,QWORD PTR [rbp-0x58]
  413fb2:	je     414120 <_start@@Base+0xde90>
  413fb8:	movzx  eax,BYTE PTR [rbp-0x30]
  413fbc:	movsx  edx,al
  413fbf:	mov    rax,QWORD PTR [rbp-0x18]
  413fc3:	mov    esi,edx
  413fc5:	mov    rdi,rax
  413fc8:	call   406459 <_start@@Base+0x1c9>
  413fcd:	lea    rcx,[rbp-0x38]
  413fd1:	mov    rdx,QWORD PTR [rbp-0x58]
  413fd5:	mov    rsi,QWORD PTR [rbp-0x50]
  413fd9:	mov    rax,QWORD PTR [rbp-0x48]
  413fdd:	mov    rdi,rax
  413fe0:	call   406c2f <_start@@Base+0x99f>
  413fe5:	mov    QWORD PTR [rbp-0x50],rax
  413fe9:	mov    eax,DWORD PTR [rbp-0x38]
  413fec:	test   eax,eax
  413fee:	jne    413f19 <_start@@Base+0xdc89>
  413ff4:	mov    rax,QWORD PTR [rbp-0x48]
  413ff8:	mov    rax,QWORD PTR [rax]
  413ffb:	mov    rdi,rax
  413ffe:	call   41fce8 <flatcc_builder_end_vector@@Base>
  414003:	mov    DWORD PTR [rbp-0x34],eax
  414006:	cmp    DWORD PTR [rbp-0x34],0x0
  41400a:	je     414123 <_start@@Base+0xde93>
  414010:	mov    rax,QWORD PTR [rbp-0x48]
  414014:	mov    rax,QWORD PTR [rax]
  414017:	mov    esi,0xa
  41401c:	mov    rdi,rax
  41401f:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  414024:	mov    QWORD PTR [rbp-0x10],rax
  414028:	cmp    QWORD PTR [rbp-0x10],0x0
  41402d:	je     414123 <_start@@Base+0xde93>
  414033:	mov    rax,QWORD PTR [rbp-0x10]
  414037:	mov    edx,DWORD PTR [rbp-0x34]
  41403a:	mov    DWORD PTR [rax],edx
  41403c:	jmp    414076 <_start@@Base+0xdde6>
  41403e:	mov    rdx,QWORD PTR [rbp-0x58]
  414042:	mov    rcx,QWORD PTR [rbp-0x50]
  414046:	mov    rax,QWORD PTR [rbp-0x48]
  41404a:	mov    rsi,rcx
  41404d:	mov    rdi,rax
  414050:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  414055:	mov    QWORD PTR [rbp-0x50],rax
  414059:	jmp    414076 <_start@@Base+0xdde6>
  41405b:	mov    rdx,QWORD PTR [rbp-0x58]
  41405f:	mov    rcx,QWORD PTR [rbp-0x50]
  414063:	mov    rax,QWORD PTR [rbp-0x48]
  414067:	mov    rsi,rcx
  41406a:	mov    rdi,rax
  41406d:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  414072:	mov    QWORD PTR [rbp-0x50],rax
  414076:	lea    rcx,[rbp-0x38]
  41407a:	mov    rdx,QWORD PTR [rbp-0x58]
  41407e:	mov    rsi,QWORD PTR [rbp-0x50]
  414082:	mov    rax,QWORD PTR [rbp-0x48]
  414086:	mov    rdi,rax
  414089:	call   406a34 <_start@@Base+0x7a4>
  41408e:	mov    QWORD PTR [rbp-0x50],rax
  414092:	mov    eax,DWORD PTR [rbp-0x38]
  414095:	test   eax,eax
  414097:	jne    412d78 <_start@@Base+0xcae8>
  41409d:	mov    rax,QWORD PTR [rbp-0x48]
  4140a1:	mov    eax,DWORD PTR [rax+0x20]
  4140a4:	test   eax,eax
  4140a6:	jne    414126 <_start@@Base+0xde96>
  4140a8:	mov    rax,QWORD PTR [rbp-0x48]
  4140ac:	mov    rax,QWORD PTR [rax]
  4140af:	mov    rdi,rax
  4140b2:	call   41f850 <flatcc_builder_end_table@@Base>
  4140b7:	mov    edx,eax
  4140b9:	mov    rax,QWORD PTR [rbp-0x60]
  4140bd:	mov    DWORD PTR [rax],edx
  4140bf:	mov    rax,QWORD PTR [rbp-0x60]
  4140c3:	mov    eax,DWORD PTR [rax]
  4140c5:	test   eax,eax
  4140c7:	je     414129 <_start@@Base+0xde99>
  4140c9:	mov    rax,QWORD PTR [rbp-0x50]
  4140cd:	jmp    414143 <_start@@Base+0xdeb3>
  4140cf:	nop
  4140d0:	jmp    41412a <_start@@Base+0xde9a>
  4140d2:	nop
  4140d3:	jmp    41412a <_start@@Base+0xde9a>
  4140d5:	nop
  4140d6:	jmp    41412a <_start@@Base+0xde9a>
  4140d8:	nop
  4140d9:	jmp    41412a <_start@@Base+0xde9a>
  4140db:	nop
  4140dc:	jmp    41412a <_start@@Base+0xde9a>
  4140de:	nop
  4140df:	jmp    41412a <_start@@Base+0xde9a>
  4140e1:	nop
  4140e2:	jmp    41412a <_start@@Base+0xde9a>
  4140e4:	nop
  4140e5:	jmp    41412a <_start@@Base+0xde9a>
  4140e7:	nop
  4140e8:	jmp    41412a <_start@@Base+0xde9a>
  4140ea:	nop
  4140eb:	jmp    41412a <_start@@Base+0xde9a>
  4140ed:	nop
  4140ee:	jmp    41412a <_start@@Base+0xde9a>
  4140f0:	nop
  4140f1:	jmp    41412a <_start@@Base+0xde9a>
  4140f3:	nop
  4140f4:	jmp    41412a <_start@@Base+0xde9a>
  4140f6:	nop
  4140f7:	jmp    41412a <_start@@Base+0xde9a>
  4140f9:	nop
  4140fa:	jmp    41412a <_start@@Base+0xde9a>
  4140fc:	nop
  4140fd:	jmp    41412a <_start@@Base+0xde9a>
  4140ff:	nop
  414100:	jmp    41412a <_start@@Base+0xde9a>
  414102:	nop
  414103:	jmp    41412a <_start@@Base+0xde9a>
  414105:	nop
  414106:	jmp    41412a <_start@@Base+0xde9a>
  414108:	nop
  414109:	jmp    41412a <_start@@Base+0xde9a>
  41410b:	nop
  41410c:	jmp    41412a <_start@@Base+0xde9a>
  41410e:	nop
  41410f:	jmp    41412a <_start@@Base+0xde9a>
  414111:	nop
  414112:	jmp    41412a <_start@@Base+0xde9a>
  414114:	nop
  414115:	jmp    41412a <_start@@Base+0xde9a>
  414117:	nop
  414118:	jmp    41412a <_start@@Base+0xde9a>
  41411a:	nop
  41411b:	jmp    41412a <_start@@Base+0xde9a>
  41411d:	nop
  41411e:	jmp    41412a <_start@@Base+0xde9a>
  414120:	nop
  414121:	jmp    41412a <_start@@Base+0xde9a>
  414123:	nop
  414124:	jmp    41412a <_start@@Base+0xde9a>
  414126:	nop
  414127:	jmp    41412a <_start@@Base+0xde9a>
  414129:	nop
  41412a:	mov    rdx,QWORD PTR [rbp-0x58]
  41412e:	mov    rsi,QWORD PTR [rbp-0x50]
  414132:	mov    rax,QWORD PTR [rbp-0x48]
  414136:	mov    ecx,0x21
  41413b:	mov    rdi,rax
  41413e:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  414143:	mov    rdi,QWORD PTR [rbp-0x8]
  414147:	xor    rdi,QWORD PTR fs:0x28
  414150:	je     414157 <_start@@Base+0xdec7>
  414152:	call   4061a0 <__stack_chk_fail@plt>
  414157:	leave  
  414158:	ret    
  414159:	endbr64 
  41415d:	push   rbp
  41415e:	mov    rbp,rsp
  414161:	sub    rsp,0x50
  414165:	mov    QWORD PTR [rbp-0x38],rdi
  414169:	mov    QWORD PTR [rbp-0x40],rsi
  41416d:	mov    QWORD PTR [rbp-0x48],rdx
  414171:	mov    QWORD PTR [rbp-0x50],rcx
  414175:	mov    rax,QWORD PTR fs:0x28
  41417e:	mov    QWORD PTR [rbp-0x8],rax
  414182:	xor    eax,eax
  414184:	mov    rax,QWORD PTR [rbp-0x50]
  414188:	mov    DWORD PTR [rax],0x0
  41418e:	mov    rax,QWORD PTR [rbp-0x38]
  414192:	mov    rax,QWORD PTR [rax]
  414195:	mov    esi,0x1
  41419a:	mov    rdi,rax
  41419d:	call   41ed41 <flatcc_builder_start_table@@Base>
  4141a2:	test   eax,eax
  4141a4:	jne    414457 <_start@@Base+0xe1c7>
  4141aa:	lea    rcx,[rbp-0x28]
  4141ae:	mov    rdx,QWORD PTR [rbp-0x48]
  4141b2:	mov    rsi,QWORD PTR [rbp-0x40]
  4141b6:	mov    rax,QWORD PTR [rbp-0x38]
  4141ba:	mov    rdi,rax
  4141bd:	call   406977 <_start@@Base+0x6e7>
  4141c2:	mov    QWORD PTR [rbp-0x40],rax
  4141c6:	jmp    41441a <_start@@Base+0xe18a>
  4141cb:	mov    rdx,QWORD PTR [rbp-0x48]
  4141cf:	mov    rcx,QWORD PTR [rbp-0x40]
  4141d3:	mov    rax,QWORD PTR [rbp-0x38]
  4141d7:	mov    rsi,rcx
  4141da:	mov    rdi,rax
  4141dd:	call   4066e9 <_start@@Base+0x459>
  4141e2:	mov    QWORD PTR [rbp-0x40],rax
  4141e6:	mov    rdx,QWORD PTR [rbp-0x48]
  4141ea:	mov    rax,QWORD PTR [rbp-0x40]
  4141ee:	mov    rsi,rdx
  4141f1:	mov    rdi,rax
  4141f4:	call   406876 <_start@@Base+0x5e6>
  4141f9:	mov    QWORD PTR [rbp-0x20],rax
  4141fd:	movabs rax,0x73776f72645f6174
  414207:	cmp    QWORD PTR [rbp-0x20],rax
  41420b:	jne    4143e3 <_start@@Base+0xe153>
  414211:	add    QWORD PTR [rbp-0x40],0x8
  414216:	mov    rdx,QWORD PTR [rbp-0x48]
  41421a:	mov    rax,QWORD PTR [rbp-0x40]
  41421e:	mov    rsi,rdx
  414221:	mov    rdi,rax
  414224:	call   406876 <_start@@Base+0x5e6>
  414229:	mov    QWORD PTR [rbp-0x20],rax
  41422d:	movabs rax,0x7461636b5f64616d
  414237:	cmp    QWORD PTR [rbp-0x20],rax
  41423b:	jne    4143c6 <_start@@Base+0xe136>
  414241:	add    QWORD PTR [rbp-0x40],0x8
  414246:	mov    rdx,QWORD PTR [rbp-0x48]
  41424a:	mov    rax,QWORD PTR [rbp-0x40]
  41424e:	mov    rsi,rdx
  414251:	mov    rdi,rax
  414254:	call   406876 <_start@@Base+0x5e6>
  414259:	mov    QWORD PTR [rbp-0x20],rax
  41425d:	movabs rax,0xffffff0000000000
  414267:	and    rax,QWORD PTR [rbp-0x20]
  41426b:	mov    rdx,rax
  41426e:	movabs rax,0x6167650000000000
  414278:	cmp    rdx,rax
  41427b:	jne    4143a9 <_start@@Base+0xe119>
  414281:	mov    rax,QWORD PTR [rbp-0x40]
  414285:	mov    QWORD PTR [rbp-0x18],rax
  414289:	mov    rdx,QWORD PTR [rbp-0x48]
  41428d:	mov    rsi,QWORD PTR [rbp-0x18]
  414291:	mov    rax,QWORD PTR [rbp-0x38]
  414295:	mov    ecx,0x3
  41429a:	mov    rdi,rax
  41429d:	call   406d6d <_start@@Base+0xadd>
  4142a2:	mov    QWORD PTR [rbp-0x40],rax
  4142a6:	mov    rax,QWORD PTR [rbp-0x18]
  4142aa:	cmp    rax,QWORD PTR [rbp-0x40]
  4142ae:	je     41438c <_start@@Base+0xe0fc>
  4142b4:	mov    DWORD PTR [rbp-0x24],0x0
  4142bb:	mov    rax,QWORD PTR [rbp-0x40]
  4142bf:	mov    QWORD PTR [rbp-0x18],rax
  4142c3:	lea    rcx,[rbp-0x24]
  4142c7:	mov    rdx,QWORD PTR [rbp-0x48]
  4142cb:	mov    rsi,QWORD PTR [rbp-0x18]
  4142cf:	mov    rax,QWORD PTR [rbp-0x38]
  4142d3:	mov    rdi,rax
  4142d6:	call   407830 <_start@@Base+0x15a0>
  4142db:	mov    QWORD PTR [rbp-0x40],rax
  4142df:	mov    rax,QWORD PTR [rbp-0x18]
  4142e3:	cmp    rax,QWORD PTR [rbp-0x40]
  4142e7:	jne    414333 <_start@@Base+0xe0a3>
  4142e9:	mov    rax,QWORD PTR [rbp-0x40]
  4142ed:	mov    QWORD PTR [rbp-0x18],rax
  4142f1:	lea    rcx,[rbp-0x24]
  4142f5:	mov    rdx,QWORD PTR [rbp-0x48]
  4142f9:	mov    rsi,QWORD PTR [rbp-0x18]
  4142fd:	mov    rax,QWORD PTR [rbp-0x38]
  414301:	mov    r8,rcx
  414304:	lea    rcx,[rip+0x335f5]        # 447900 <__data_start@@Base+0x840>
  41430b:	mov    rdi,rax
  41430e:	call   408244 <_start@@Base+0x1fb4>
  414313:	mov    QWORD PTR [rbp-0x40],rax
  414317:	mov    rax,QWORD PTR [rbp-0x40]
  41431b:	cmp    rax,QWORD PTR [rbp-0x18]
  41431f:	je     41445a <_start@@Base+0xe1ca>
  414325:	mov    rax,QWORD PTR [rbp-0x40]
  414329:	cmp    rax,QWORD PTR [rbp-0x48]
  41432d:	je     41445a <_start@@Base+0xe1ca>
  414333:	mov    eax,DWORD PTR [rbp-0x24]
  414336:	test   eax,eax
  414338:	jne    41434c <_start@@Base+0xe0bc>
  41433a:	mov    rax,QWORD PTR [rbp-0x38]
  41433e:	mov    eax,DWORD PTR [rax+0x10]
  414341:	and    eax,0x2
  414344:	test   eax,eax
  414346:	je     4143fe <_start@@Base+0xe16e>
  41434c:	mov    rax,QWORD PTR [rbp-0x38]
  414350:	mov    rax,QWORD PTR [rax]
  414353:	mov    ecx,0x4
  414358:	mov    edx,0x4
  41435d:	mov    esi,0x0
  414362:	mov    rdi,rax
  414365:	call   420ef1 <flatcc_builder_table_add@@Base>
  41436a:	mov    QWORD PTR [rbp-0x10],rax
  41436e:	cmp    QWORD PTR [rbp-0x10],0x0
  414373:	je     41445d <_start@@Base+0xe1cd>
  414379:	mov    edx,DWORD PTR [rbp-0x24]
  41437c:	mov    rax,QWORD PTR [rbp-0x10]
  414380:	mov    esi,edx
  414382:	mov    rdi,rax
  414385:	call   4064c3 <_start@@Base+0x233>
  41438a:	jmp    4143fe <_start@@Base+0xe16e>
  41438c:	mov    rdx,QWORD PTR [rbp-0x48]
  414390:	mov    rcx,QWORD PTR [rbp-0x40]
  414394:	mov    rax,QWORD PTR [rbp-0x38]
  414398:	mov    rsi,rcx
  41439b:	mov    rdi,rax
  41439e:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4143a3:	mov    QWORD PTR [rbp-0x40],rax
  4143a7:	jmp    4143fe <_start@@Base+0xe16e>
  4143a9:	mov    rdx,QWORD PTR [rbp-0x48]
  4143ad:	mov    rcx,QWORD PTR [rbp-0x40]
  4143b1:	mov    rax,QWORD PTR [rbp-0x38]
  4143b5:	mov    rsi,rcx
  4143b8:	mov    rdi,rax
  4143bb:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4143c0:	mov    QWORD PTR [rbp-0x40],rax
  4143c4:	jmp    4143fe <_start@@Base+0xe16e>
  4143c6:	mov    rdx,QWORD PTR [rbp-0x48]
  4143ca:	mov    rcx,QWORD PTR [rbp-0x40]
  4143ce:	mov    rax,QWORD PTR [rbp-0x38]
  4143d2:	mov    rsi,rcx
  4143d5:	mov    rdi,rax
  4143d8:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4143dd:	mov    QWORD PTR [rbp-0x40],rax
  4143e1:	jmp    4143fe <_start@@Base+0xe16e>
  4143e3:	mov    rdx,QWORD PTR [rbp-0x48]
  4143e7:	mov    rcx,QWORD PTR [rbp-0x40]
  4143eb:	mov    rax,QWORD PTR [rbp-0x38]
  4143ef:	mov    rsi,rcx
  4143f2:	mov    rdi,rax
  4143f5:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4143fa:	mov    QWORD PTR [rbp-0x40],rax
  4143fe:	lea    rcx,[rbp-0x28]
  414402:	mov    rdx,QWORD PTR [rbp-0x48]
  414406:	mov    rsi,QWORD PTR [rbp-0x40]
  41440a:	mov    rax,QWORD PTR [rbp-0x38]
  41440e:	mov    rdi,rax
  414411:	call   406a34 <_start@@Base+0x7a4>
  414416:	mov    QWORD PTR [rbp-0x40],rax
  41441a:	mov    eax,DWORD PTR [rbp-0x28]
  41441d:	test   eax,eax
  41441f:	jne    4141cb <_start@@Base+0xdf3b>
  414425:	mov    rax,QWORD PTR [rbp-0x38]
  414429:	mov    eax,DWORD PTR [rax+0x20]
  41442c:	test   eax,eax
  41442e:	jne    414460 <_start@@Base+0xe1d0>
  414430:	mov    rax,QWORD PTR [rbp-0x38]
  414434:	mov    rax,QWORD PTR [rax]
  414437:	mov    rdi,rax
  41443a:	call   41f850 <flatcc_builder_end_table@@Base>
  41443f:	mov    edx,eax
  414441:	mov    rax,QWORD PTR [rbp-0x50]
  414445:	mov    DWORD PTR [rax],edx
  414447:	mov    rax,QWORD PTR [rbp-0x50]
  41444b:	mov    eax,DWORD PTR [rax]
  41444d:	test   eax,eax
  41444f:	je     414463 <_start@@Base+0xe1d3>
  414451:	mov    rax,QWORD PTR [rbp-0x40]
  414455:	jmp    41447d <_start@@Base+0xe1ed>
  414457:	nop
  414458:	jmp    414464 <_start@@Base+0xe1d4>
  41445a:	nop
  41445b:	jmp    414464 <_start@@Base+0xe1d4>
  41445d:	nop
  41445e:	jmp    414464 <_start@@Base+0xe1d4>
  414460:	nop
  414461:	jmp    414464 <_start@@Base+0xe1d4>
  414463:	nop
  414464:	mov    rdx,QWORD PTR [rbp-0x48]
  414468:	mov    rsi,QWORD PTR [rbp-0x40]
  41446c:	mov    rax,QWORD PTR [rbp-0x38]
  414470:	mov    ecx,0x21
  414475:	mov    rdi,rax
  414478:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  41447d:	mov    rdi,QWORD PTR [rbp-0x8]
  414481:	xor    rdi,QWORD PTR fs:0x28
  41448a:	je     414491 <_start@@Base+0xe201>
  41448c:	call   4061a0 <__stack_chk_fail@plt>
  414491:	leave  
  414492:	ret    
  414493:	endbr64 
  414497:	push   rbp
  414498:	mov    rbp,rsp
  41449b:	sub    rsp,0x50
  41449f:	mov    QWORD PTR [rbp-0x38],rdi
  4144a3:	mov    QWORD PTR [rbp-0x40],rsi
  4144a7:	mov    QWORD PTR [rbp-0x48],rdx
  4144ab:	mov    QWORD PTR [rbp-0x50],rcx
  4144af:	mov    rax,QWORD PTR fs:0x28
  4144b8:	mov    QWORD PTR [rbp-0x8],rax
  4144bc:	xor    eax,eax
  4144be:	lea    rcx,[rbp-0x24]
  4144c2:	mov    rdx,QWORD PTR [rbp-0x48]
  4144c6:	mov    rsi,QWORD PTR [rbp-0x40]
  4144ca:	mov    rax,QWORD PTR [rbp-0x38]
  4144ce:	mov    rdi,rax
  4144d1:	call   406977 <_start@@Base+0x6e7>
  4144d6:	mov    QWORD PTR [rbp-0x40],rax
  4144da:	jmp    4146a6 <_start@@Base+0xe416>
  4144df:	mov    rdx,QWORD PTR [rbp-0x48]
  4144e3:	mov    rcx,QWORD PTR [rbp-0x40]
  4144e7:	mov    rax,QWORD PTR [rbp-0x38]
  4144eb:	mov    rsi,rcx
  4144ee:	mov    rdi,rax
  4144f1:	call   4066e9 <_start@@Base+0x459>
  4144f6:	mov    QWORD PTR [rbp-0x40],rax
  4144fa:	mov    rdx,QWORD PTR [rbp-0x48]
  4144fe:	mov    rax,QWORD PTR [rbp-0x40]
  414502:	mov    rsi,rdx
  414505:	mov    rdi,rax
  414508:	call   406876 <_start@@Base+0x5e6>
  41450d:	mov    QWORD PTR [rbp-0x20],rax
  414511:	movabs rax,0x686169725f6c656e
  41451b:	cmp    QWORD PTR [rbp-0x20],rax
  41451f:	jne    41466f <_start@@Base+0xe3df>
  414525:	add    QWORD PTR [rbp-0x40],0x8
  41452a:	mov    rdx,QWORD PTR [rbp-0x48]
  41452e:	mov    rax,QWORD PTR [rbp-0x40]
  414532:	mov    rsi,rdx
  414535:	mov    rdi,rax
  414538:	call   406876 <_start@@Base+0x5e6>
  41453d:	mov    QWORD PTR [rbp-0x20],rax
  414541:	movabs rax,0xffffff0000000000
  41454b:	and    rax,QWORD PTR [rbp-0x20]
  41454f:	mov    rdx,rax
  414552:	movabs rax,0x6774680000000000
  41455c:	cmp    rdx,rax
  41455f:	jne    414652 <_start@@Base+0xe3c2>
  414565:	mov    rax,QWORD PTR [rbp-0x40]
  414569:	mov    QWORD PTR [rbp-0x18],rax
  41456d:	mov    rdx,QWORD PTR [rbp-0x48]
  414571:	mov    rsi,QWORD PTR [rbp-0x18]
  414575:	mov    rax,QWORD PTR [rbp-0x38]
  414579:	mov    ecx,0x3
  41457e:	mov    rdi,rax
  414581:	call   406d6d <_start@@Base+0xadd>
  414586:	mov    QWORD PTR [rbp-0x40],rax
  41458a:	mov    rax,QWORD PTR [rbp-0x18]
  41458e:	cmp    rax,QWORD PTR [rbp-0x40]
  414592:	je     414635 <_start@@Base+0xe3a5>
  414598:	mov    WORD PTR [rbp-0x26],0x0
  41459e:	mov    rax,QWORD PTR [rbp-0x50]
  4145a2:	mov    QWORD PTR [rbp-0x10],rax
  4145a6:	mov    rax,QWORD PTR [rbp-0x40]
  4145aa:	mov    QWORD PTR [rbp-0x18],rax
  4145ae:	lea    rcx,[rbp-0x26]
  4145b2:	mov    rdx,QWORD PTR [rbp-0x48]
  4145b6:	mov    rsi,QWORD PTR [rbp-0x18]
  4145ba:	mov    rax,QWORD PTR [rbp-0x38]
  4145be:	mov    rdi,rax
  4145c1:	call   4075e1 <_start@@Base+0x1351>
  4145c6:	mov    QWORD PTR [rbp-0x40],rax
  4145ca:	mov    rax,QWORD PTR [rbp-0x18]
  4145ce:	cmp    rax,QWORD PTR [rbp-0x40]
  4145d2:	jne    41461e <_start@@Base+0xe38e>
  4145d4:	mov    rax,QWORD PTR [rbp-0x40]
  4145d8:	mov    QWORD PTR [rbp-0x18],rax
  4145dc:	lea    rcx,[rbp-0x26]
  4145e0:	mov    rdx,QWORD PTR [rbp-0x48]
  4145e4:	mov    rsi,QWORD PTR [rbp-0x18]
  4145e8:	mov    rax,QWORD PTR [rbp-0x38]
  4145ec:	mov    r8,rcx
  4145ef:	lea    rcx,[rip+0x3332a]        # 447920 <__data_start@@Base+0x860>
  4145f6:	mov    rdi,rax
  4145f9:	call   407e2a <_start@@Base+0x1b9a>
  4145fe:	mov    QWORD PTR [rbp-0x40],rax
  414602:	mov    rax,QWORD PTR [rbp-0x40]
  414606:	cmp    rax,QWORD PTR [rbp-0x18]
  41460a:	je     4146b7 <_start@@Base+0xe427>
  414610:	mov    rax,QWORD PTR [rbp-0x40]
  414614:	cmp    rax,QWORD PTR [rbp-0x48]
  414618:	je     4146b7 <_start@@Base+0xe427>
  41461e:	movzx  eax,WORD PTR [rbp-0x26]
  414622:	movzx  edx,ax
  414625:	mov    rax,QWORD PTR [rbp-0x10]
  414629:	mov    esi,edx
  41462b:	mov    rdi,rax
  41462e:	call   4063ba <_start@@Base+0x12a>
  414633:	jmp    41468a <_start@@Base+0xe3fa>
  414635:	mov    rdx,QWORD PTR [rbp-0x48]
  414639:	mov    rcx,QWORD PTR [rbp-0x40]
  41463d:	mov    rax,QWORD PTR [rbp-0x38]
  414641:	mov    rsi,rcx
  414644:	mov    rdi,rax
  414647:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41464c:	mov    QWORD PTR [rbp-0x40],rax
  414650:	jmp    41468a <_start@@Base+0xe3fa>
  414652:	mov    rdx,QWORD PTR [rbp-0x48]
  414656:	mov    rcx,QWORD PTR [rbp-0x40]
  41465a:	mov    rax,QWORD PTR [rbp-0x38]
  41465e:	mov    rsi,rcx
  414661:	mov    rdi,rax
  414664:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  414669:	mov    QWORD PTR [rbp-0x40],rax
  41466d:	jmp    41468a <_start@@Base+0xe3fa>
  41466f:	mov    rdx,QWORD PTR [rbp-0x48]
  414673:	mov    rcx,QWORD PTR [rbp-0x40]
  414677:	mov    rax,QWORD PTR [rbp-0x38]
  41467b:	mov    rsi,rcx
  41467e:	mov    rdi,rax
  414681:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  414686:	mov    QWORD PTR [rbp-0x40],rax
  41468a:	lea    rcx,[rbp-0x24]
  41468e:	mov    rdx,QWORD PTR [rbp-0x48]
  414692:	mov    rsi,QWORD PTR [rbp-0x40]
  414696:	mov    rax,QWORD PTR [rbp-0x38]
  41469a:	mov    rdi,rax
  41469d:	call   406a34 <_start@@Base+0x7a4>
  4146a2:	mov    QWORD PTR [rbp-0x40],rax
  4146a6:	mov    eax,DWORD PTR [rbp-0x24]
  4146a9:	test   eax,eax
  4146ab:	jne    4144df <_start@@Base+0xe24f>
  4146b1:	mov    rax,QWORD PTR [rbp-0x40]
  4146b5:	jmp    4146d5 <_start@@Base+0xe445>
  4146b7:	nop
  4146b8:	endbr64 
  4146bc:	mov    rdx,QWORD PTR [rbp-0x48]
  4146c0:	mov    rsi,QWORD PTR [rbp-0x40]
  4146c4:	mov    rax,QWORD PTR [rbp-0x38]
  4146c8:	mov    ecx,0x21
  4146cd:	mov    rdi,rax
  4146d0:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4146d5:	mov    rdi,QWORD PTR [rbp-0x8]
  4146d9:	xor    rdi,QWORD PTR fs:0x28
  4146e2:	je     4146e9 <_start@@Base+0xe459>
  4146e4:	call   4061a0 <__stack_chk_fail@plt>
  4146e9:	leave  
  4146ea:	ret    
  4146eb:	endbr64 
  4146ef:	push   rbp
  4146f0:	mov    rbp,rsp
  4146f3:	sub    rsp,0x30
  4146f7:	mov    QWORD PTR [rbp-0x18],rdi
  4146fb:	mov    QWORD PTR [rbp-0x20],rsi
  4146ff:	mov    QWORD PTR [rbp-0x28],rdx
  414703:	mov    QWORD PTR [rbp-0x30],rcx
  414707:	mov    rax,QWORD PTR [rbp-0x30]
  41470b:	mov    DWORD PTR [rax],0x0
  414711:	mov    rax,QWORD PTR [rbp-0x18]
  414715:	mov    rax,QWORD PTR [rax]
  414718:	mov    edx,0x2
  41471d:	mov    esi,0x2
  414722:	mov    rdi,rax
  414725:	call   41e209 <flatcc_builder_start_struct@@Base>
  41472a:	mov    QWORD PTR [rbp-0x8],rax
  41472e:	cmp    QWORD PTR [rbp-0x8],0x0
  414733:	je     414782 <_start@@Base+0xe4f2>
  414735:	mov    rcx,QWORD PTR [rbp-0x8]
  414739:	mov    rdx,QWORD PTR [rbp-0x28]
  41473d:	mov    rsi,QWORD PTR [rbp-0x20]
  414741:	mov    rax,QWORD PTR [rbp-0x18]
  414745:	mov    rdi,rax
  414748:	call   414493 <_start@@Base+0xe203>
  41474d:	mov    QWORD PTR [rbp-0x20],rax
  414751:	mov    rax,QWORD PTR [rbp-0x20]
  414755:	cmp    rax,QWORD PTR [rbp-0x28]
  414759:	je     414785 <_start@@Base+0xe4f5>
  41475b:	mov    rax,QWORD PTR [rbp-0x18]
  41475f:	mov    rax,QWORD PTR [rax]
  414762:	mov    rdi,rax
  414765:	call   41e28b <flatcc_builder_end_struct@@Base>
  41476a:	mov    edx,eax
  41476c:	mov    rax,QWORD PTR [rbp-0x30]
  414770:	mov    DWORD PTR [rax],edx
  414772:	mov    rax,QWORD PTR [rbp-0x30]
  414776:	mov    eax,DWORD PTR [rax]
  414778:	test   eax,eax
  41477a:	je     414785 <_start@@Base+0xe4f5>
  41477c:	mov    rax,QWORD PTR [rbp-0x20]
  414780:	jmp    41479f <_start@@Base+0xe50f>
  414782:	nop
  414783:	jmp    414786 <_start@@Base+0xe4f6>
  414785:	nop
  414786:	mov    rdx,QWORD PTR [rbp-0x28]
  41478a:	mov    rsi,QWORD PTR [rbp-0x20]
  41478e:	mov    rax,QWORD PTR [rbp-0x18]
  414792:	mov    ecx,0x21
  414797:	mov    rdi,rax
  41479a:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  41479f:	leave  
  4147a0:	ret    
  4147a1:	endbr64 
  4147a5:	push   rbp
  4147a6:	mov    rbp,rsp
  4147a9:	sub    rsp,0x50
  4147ad:	mov    QWORD PTR [rbp-0x38],rdi
  4147b1:	mov    QWORD PTR [rbp-0x40],rsi
  4147b5:	mov    QWORD PTR [rbp-0x48],rdx
  4147b9:	mov    QWORD PTR [rbp-0x50],rcx
  4147bd:	mov    rax,QWORD PTR fs:0x28
  4147c6:	mov    QWORD PTR [rbp-0x8],rax
  4147ca:	xor    eax,eax
  4147cc:	lea    rcx,[rbp-0x28]
  4147d0:	mov    rdx,QWORD PTR [rbp-0x48]
  4147d4:	mov    rsi,QWORD PTR [rbp-0x40]
  4147d8:	mov    rax,QWORD PTR [rbp-0x38]
  4147dc:	mov    rdi,rax
  4147df:	call   406977 <_start@@Base+0x6e7>
  4147e4:	mov    QWORD PTR [rbp-0x40],rax
  4147e8:	jmp    4149b1 <_start@@Base+0xe721>
  4147ed:	mov    rdx,QWORD PTR [rbp-0x48]
  4147f1:	mov    rcx,QWORD PTR [rbp-0x40]
  4147f5:	mov    rax,QWORD PTR [rbp-0x38]
  4147f9:	mov    rsi,rcx
  4147fc:	mov    rdi,rax
  4147ff:	call   4066e9 <_start@@Base+0x459>
  414804:	mov    QWORD PTR [rbp-0x40],rax
  414808:	mov    rdx,QWORD PTR [rbp-0x48]
  41480c:	mov    rax,QWORD PTR [rbp-0x40]
  414810:	mov    rsi,rdx
  414813:	mov    rdi,rax
  414816:	call   406876 <_start@@Base+0x5e6>
  41481b:	mov    QWORD PTR [rbp-0x20],rax
  41481f:	movabs rax,0x626f6f6b735f7265
  414829:	cmp    QWORD PTR [rbp-0x20],rax
  41482d:	jne    41497a <_start@@Base+0xe6ea>
  414833:	add    QWORD PTR [rbp-0x40],0x8
  414838:	mov    rdx,QWORD PTR [rbp-0x48]
  41483c:	mov    rax,QWORD PTR [rbp-0x40]
  414840:	mov    rsi,rdx
  414843:	mov    rdi,rax
  414846:	call   406876 <_start@@Base+0x5e6>
  41484b:	mov    QWORD PTR [rbp-0x20],rax
  41484f:	movabs rax,0xffff000000000000
  414859:	and    rax,QWORD PTR [rbp-0x20]
  41485d:	mov    rdx,rax
  414860:	movabs rax,0x6164000000000000
  41486a:	cmp    rdx,rax
  41486d:	jne    41495d <_start@@Base+0xe6cd>
  414873:	mov    rax,QWORD PTR [rbp-0x40]
  414877:	mov    QWORD PTR [rbp-0x18],rax
  41487b:	mov    rdx,QWORD PTR [rbp-0x48]
  41487f:	mov    rsi,QWORD PTR [rbp-0x18]
  414883:	mov    rax,QWORD PTR [rbp-0x38]
  414887:	mov    ecx,0x2
  41488c:	mov    rdi,rax
  41488f:	call   406d6d <_start@@Base+0xadd>
  414894:	mov    QWORD PTR [rbp-0x40],rax
  414898:	mov    rax,QWORD PTR [rbp-0x18]
  41489c:	cmp    rax,QWORD PTR [rbp-0x40]
  4148a0:	je     414940 <_start@@Base+0xe6b0>
  4148a6:	mov    DWORD PTR [rbp-0x24],0x0
  4148ad:	mov    rax,QWORD PTR [rbp-0x50]
  4148b1:	mov    QWORD PTR [rbp-0x10],rax
  4148b5:	mov    rax,QWORD PTR [rbp-0x40]
  4148b9:	mov    QWORD PTR [rbp-0x18],rax
  4148bd:	lea    rcx,[rbp-0x24]
  4148c1:	mov    rdx,QWORD PTR [rbp-0x48]
  4148c5:	mov    rsi,QWORD PTR [rbp-0x18]
  4148c9:	mov    rax,QWORD PTR [rbp-0x38]
  4148cd:	mov    rdi,rax
  4148d0:	call   407830 <_start@@Base+0x15a0>
  4148d5:	mov    QWORD PTR [rbp-0x40],rax
  4148d9:	mov    rax,QWORD PTR [rbp-0x18]
  4148dd:	cmp    rax,QWORD PTR [rbp-0x40]
  4148e1:	jne    41492d <_start@@Base+0xe69d>
  4148e3:	mov    rax,QWORD PTR [rbp-0x40]
  4148e7:	mov    QWORD PTR [rbp-0x18],rax
  4148eb:	lea    rcx,[rbp-0x24]
  4148ef:	mov    rdx,QWORD PTR [rbp-0x48]
  4148f3:	mov    rsi,QWORD PTR [rbp-0x18]
  4148f7:	mov    rax,QWORD PTR [rbp-0x38]
  4148fb:	mov    r8,rcx
  4148fe:	lea    rcx,[rip+0x3303b]        # 447940 <__data_start@@Base+0x880>
  414905:	mov    rdi,rax
  414908:	call   408244 <_start@@Base+0x1fb4>
  41490d:	mov    QWORD PTR [rbp-0x40],rax
  414911:	mov    rax,QWORD PTR [rbp-0x40]
  414915:	cmp    rax,QWORD PTR [rbp-0x18]
  414919:	je     4149c2 <_start@@Base+0xe732>
  41491f:	mov    rax,QWORD PTR [rbp-0x40]
  414923:	cmp    rax,QWORD PTR [rbp-0x48]
  414927:	je     4149c2 <_start@@Base+0xe732>
  41492d:	mov    edx,DWORD PTR [rbp-0x24]
  414930:	mov    rax,QWORD PTR [rbp-0x10]
  414934:	mov    esi,edx
  414936:	mov    rdi,rax
  414939:	call   4064c3 <_start@@Base+0x233>
  41493e:	jmp    414995 <_start@@Base+0xe705>
  414940:	mov    rdx,QWORD PTR [rbp-0x48]
  414944:	mov    rcx,QWORD PTR [rbp-0x40]
  414948:	mov    rax,QWORD PTR [rbp-0x38]
  41494c:	mov    rsi,rcx
  41494f:	mov    rdi,rax
  414952:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  414957:	mov    QWORD PTR [rbp-0x40],rax
  41495b:	jmp    414995 <_start@@Base+0xe705>
  41495d:	mov    rdx,QWORD PTR [rbp-0x48]
  414961:	mov    rcx,QWORD PTR [rbp-0x40]
  414965:	mov    rax,QWORD PTR [rbp-0x38]
  414969:	mov    rsi,rcx
  41496c:	mov    rdi,rax
  41496f:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  414974:	mov    QWORD PTR [rbp-0x40],rax
  414978:	jmp    414995 <_start@@Base+0xe705>
  41497a:	mov    rdx,QWORD PTR [rbp-0x48]
  41497e:	mov    rcx,QWORD PTR [rbp-0x40]
  414982:	mov    rax,QWORD PTR [rbp-0x38]
  414986:	mov    rsi,rcx
  414989:	mov    rdi,rax
  41498c:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  414991:	mov    QWORD PTR [rbp-0x40],rax
  414995:	lea    rcx,[rbp-0x28]
  414999:	mov    rdx,QWORD PTR [rbp-0x48]
  41499d:	mov    rsi,QWORD PTR [rbp-0x40]
  4149a1:	mov    rax,QWORD PTR [rbp-0x38]
  4149a5:	mov    rdi,rax
  4149a8:	call   406a34 <_start@@Base+0x7a4>
  4149ad:	mov    QWORD PTR [rbp-0x40],rax
  4149b1:	mov    eax,DWORD PTR [rbp-0x28]
  4149b4:	test   eax,eax
  4149b6:	jne    4147ed <_start@@Base+0xe55d>
  4149bc:	mov    rax,QWORD PTR [rbp-0x40]
  4149c0:	jmp    4149e0 <_start@@Base+0xe750>
  4149c2:	nop
  4149c3:	endbr64 
  4149c7:	mov    rdx,QWORD PTR [rbp-0x48]
  4149cb:	mov    rsi,QWORD PTR [rbp-0x40]
  4149cf:	mov    rax,QWORD PTR [rbp-0x38]
  4149d3:	mov    ecx,0x21
  4149d8:	mov    rdi,rax
  4149db:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4149e0:	mov    rdi,QWORD PTR [rbp-0x8]
  4149e4:	xor    rdi,QWORD PTR fs:0x28
  4149ed:	je     4149f4 <_start@@Base+0xe764>
  4149ef:	call   4061a0 <__stack_chk_fail@plt>
  4149f4:	leave  
  4149f5:	ret    
  4149f6:	endbr64 
  4149fa:	push   rbp
  4149fb:	mov    rbp,rsp
  4149fe:	sub    rsp,0x30
  414a02:	mov    QWORD PTR [rbp-0x18],rdi
  414a06:	mov    QWORD PTR [rbp-0x20],rsi
  414a0a:	mov    QWORD PTR [rbp-0x28],rdx
  414a0e:	mov    QWORD PTR [rbp-0x30],rcx
  414a12:	mov    rax,QWORD PTR [rbp-0x30]
  414a16:	mov    DWORD PTR [rax],0x0
  414a1c:	mov    rax,QWORD PTR [rbp-0x18]
  414a20:	mov    rax,QWORD PTR [rax]
  414a23:	mov    edx,0x4
  414a28:	mov    esi,0x4
  414a2d:	mov    rdi,rax
  414a30:	call   41e209 <flatcc_builder_start_struct@@Base>
  414a35:	mov    QWORD PTR [rbp-0x8],rax
  414a39:	cmp    QWORD PTR [rbp-0x8],0x0
  414a3e:	je     414a8d <_start@@Base+0xe7fd>
  414a40:	mov    rcx,QWORD PTR [rbp-0x8]
  414a44:	mov    rdx,QWORD PTR [rbp-0x28]
  414a48:	mov    rsi,QWORD PTR [rbp-0x20]
  414a4c:	mov    rax,QWORD PTR [rbp-0x18]
  414a50:	mov    rdi,rax
  414a53:	call   4147a1 <_start@@Base+0xe511>
  414a58:	mov    QWORD PTR [rbp-0x20],rax
  414a5c:	mov    rax,QWORD PTR [rbp-0x20]
  414a60:	cmp    rax,QWORD PTR [rbp-0x28]
  414a64:	je     414a90 <_start@@Base+0xe800>
  414a66:	mov    rax,QWORD PTR [rbp-0x18]
  414a6a:	mov    rax,QWORD PTR [rax]
  414a6d:	mov    rdi,rax
  414a70:	call   41e28b <flatcc_builder_end_struct@@Base>
  414a75:	mov    edx,eax
  414a77:	mov    rax,QWORD PTR [rbp-0x30]
  414a7b:	mov    DWORD PTR [rax],edx
  414a7d:	mov    rax,QWORD PTR [rbp-0x30]
  414a81:	mov    eax,DWORD PTR [rax]
  414a83:	test   eax,eax
  414a85:	je     414a90 <_start@@Base+0xe800>
  414a87:	mov    rax,QWORD PTR [rbp-0x20]
  414a8b:	jmp    414aaa <_start@@Base+0xe81a>
  414a8d:	nop
  414a8e:	jmp    414a91 <_start@@Base+0xe801>
  414a90:	nop
  414a91:	mov    rdx,QWORD PTR [rbp-0x28]
  414a95:	mov    rsi,QWORD PTR [rbp-0x20]
  414a99:	mov    rax,QWORD PTR [rbp-0x18]
  414a9d:	mov    ecx,0x21
  414aa2:	mov    rdi,rax
  414aa5:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  414aaa:	leave  
  414aab:	ret    
  414aac:	endbr64 
  414ab0:	push   rbp
  414ab1:	mov    rbp,rsp
  414ab4:	sub    rsp,0x30
  414ab8:	mov    QWORD PTR [rbp-0x8],rdi
  414abc:	mov    QWORD PTR [rbp-0x10],rsi
  414ac0:	mov    QWORD PTR [rbp-0x18],rdx
  414ac4:	mov    eax,ecx
  414ac6:	mov    QWORD PTR [rbp-0x28],r8
  414aca:	mov    BYTE PTR [rbp-0x1c],al
  414acd:	mov    rax,QWORD PTR [rbp-0x28]
  414ad1:	mov    DWORD PTR [rax],0x0
  414ad7:	movzx  eax,BYTE PTR [rbp-0x1c]
  414adb:	cmp    eax,0x9
  414ade:	je     414b7c <_start@@Base+0xe8ec>
  414ae4:	cmp    eax,0x9
  414ae7:	jg     414afc <_start@@Base+0xe86c>
  414ae9:	cmp    eax,0x2
  414aec:	je     414b3a <_start@@Base+0xe8aa>
  414aee:	cmp    eax,0x8
  414af1:	je     414b5b <_start@@Base+0xe8cb>
  414af3:	test   eax,eax
  414af5:	je     414b1e <_start@@Base+0xe88e>
  414af7:	jmp    414bf7 <_start@@Base+0xe967>
  414afc:	cmp    eax,0xb
  414aff:	je     414bbb <_start@@Base+0xe92b>
  414b05:	cmp    eax,0xb
  414b08:	jl     414b9d <_start@@Base+0xe90d>
  414b0e:	cmp    eax,0xff
  414b13:	je     414bd9 <_start@@Base+0xe949>
  414b19:	jmp    414bf7 <_start@@Base+0xe967>
  414b1e:	mov    rdx,QWORD PTR [rbp-0x18]
  414b22:	mov    rcx,QWORD PTR [rbp-0x10]
  414b26:	mov    rax,QWORD PTR [rbp-0x8]
  414b2a:	mov    rsi,rcx
  414b2d:	mov    rdi,rax
  414b30:	call   4073f1 <_start@@Base+0x1161>
  414b35:	jmp    414c73 <_start@@Base+0xe9e3>
  414b3a:	mov    rcx,QWORD PTR [rbp-0x28]
  414b3e:	mov    rdx,QWORD PTR [rbp-0x18]
  414b42:	mov    rsi,QWORD PTR [rbp-0x10]
  414b46:	mov    rax,QWORD PTR [rbp-0x8]
  414b4a:	mov    rdi,rax
  414b4d:	call   414159 <_start@@Base+0xdec9>
  414b52:	mov    QWORD PTR [rbp-0x10],rax
  414b56:	jmp    414c39 <_start@@Base+0xe9a9>
  414b5b:	mov    rcx,QWORD PTR [rbp-0x28]
  414b5f:	mov    rdx,QWORD PTR [rbp-0x18]
  414b63:	mov    rsi,QWORD PTR [rbp-0x10]
  414b67:	mov    rax,QWORD PTR [rbp-0x8]
  414b6b:	mov    rdi,rax
  414b6e:	call   4146eb <_start@@Base+0xe45b>
  414b73:	mov    QWORD PTR [rbp-0x10],rax
  414b77:	jmp    414c39 <_start@@Base+0xe9a9>
  414b7c:	mov    rcx,QWORD PTR [rbp-0x28]
  414b80:	mov    rdx,QWORD PTR [rbp-0x18]
  414b84:	mov    rsi,QWORD PTR [rbp-0x10]
  414b88:	mov    rax,QWORD PTR [rbp-0x8]
  414b8c:	mov    rdi,rax
  414b8f:	call   4149f6 <_start@@Base+0xe766>
  414b94:	mov    QWORD PTR [rbp-0x10],rax
  414b98:	jmp    414c39 <_start@@Base+0xe9a9>
  414b9d:	mov    rcx,QWORD PTR [rbp-0x28]
  414ba1:	mov    rdx,QWORD PTR [rbp-0x18]
  414ba5:	mov    rsi,QWORD PTR [rbp-0x10]
  414ba9:	mov    rax,QWORD PTR [rbp-0x8]
  414bad:	mov    rdi,rax
  414bb0:	call   4149f6 <_start@@Base+0xe766>
  414bb5:	mov    QWORD PTR [rbp-0x10],rax
  414bb9:	jmp    414c39 <_start@@Base+0xe9a9>
  414bbb:	mov    rcx,QWORD PTR [rbp-0x28]
  414bbf:	mov    rdx,QWORD PTR [rbp-0x18]
  414bc3:	mov    rsi,QWORD PTR [rbp-0x10]
  414bc7:	mov    rax,QWORD PTR [rbp-0x8]
  414bcb:	mov    rdi,rax
  414bce:	call   42975d <flatcc_json_parser_build_string@@Base>
  414bd3:	mov    QWORD PTR [rbp-0x10],rax
  414bd7:	jmp    414c39 <_start@@Base+0xe9a9>
  414bd9:	mov    rcx,QWORD PTR [rbp-0x28]
  414bdd:	mov    rdx,QWORD PTR [rbp-0x18]
  414be1:	mov    rsi,QWORD PTR [rbp-0x10]
  414be5:	mov    rax,QWORD PTR [rbp-0x8]
  414be9:	mov    rdi,rax
  414bec:	call   42975d <flatcc_json_parser_build_string@@Base>
  414bf1:	mov    QWORD PTR [rbp-0x10],rax
  414bf5:	jmp    414c39 <_start@@Base+0xe9a9>
  414bf7:	mov    rax,QWORD PTR [rbp-0x8]
  414bfb:	mov    eax,DWORD PTR [rax+0x10]
  414bfe:	and    eax,0x1
  414c01:	test   eax,eax
  414c03:	jne    414c20 <_start@@Base+0xe990>
  414c05:	mov    rdx,QWORD PTR [rbp-0x18]
  414c09:	mov    rsi,QWORD PTR [rbp-0x10]
  414c0d:	mov    rax,QWORD PTR [rbp-0x8]
  414c11:	mov    ecx,0xf
  414c16:	mov    rdi,rax
  414c19:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  414c1e:	jmp    414c73 <_start@@Base+0xe9e3>
  414c20:	mov    rdx,QWORD PTR [rbp-0x18]
  414c24:	mov    rcx,QWORD PTR [rbp-0x10]
  414c28:	mov    rax,QWORD PTR [rbp-0x8]
  414c2c:	mov    rsi,rcx
  414c2f:	mov    rdi,rax
  414c32:	call   428dd2 <flatcc_json_parser_generic_json@@Base>
  414c37:	jmp    414c73 <_start@@Base+0xe9e3>
  414c39:	mov    rax,QWORD PTR [rbp-0x8]
  414c3d:	mov    eax,DWORD PTR [rax+0x20]
  414c40:	test   eax,eax
  414c42:	je     414c4a <_start@@Base+0xe9ba>
  414c44:	mov    rax,QWORD PTR [rbp-0x10]
  414c48:	jmp    414c73 <_start@@Base+0xe9e3>
  414c4a:	mov    rax,QWORD PTR [rbp-0x28]
  414c4e:	mov    eax,DWORD PTR [rax]
  414c50:	test   eax,eax
  414c52:	jne    414c6f <_start@@Base+0xe9df>
  414c54:	mov    rdx,QWORD PTR [rbp-0x18]
  414c58:	mov    rsi,QWORD PTR [rbp-0x10]
  414c5c:	mov    rax,QWORD PTR [rbp-0x8]
  414c60:	mov    ecx,0x21
  414c65:	mov    rdi,rax
  414c68:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  414c6d:	jmp    414c73 <_start@@Base+0xe9e3>
  414c6f:	mov    rax,QWORD PTR [rbp-0x10]
  414c73:	leave  
  414c74:	ret    
  414c75:	endbr64 
  414c79:	push   rbp
  414c7a:	mov    rbp,rsp
  414c7d:	mov    eax,edi
  414c7f:	mov    BYTE PTR [rbp-0x4],al
  414c82:	movzx  eax,BYTE PTR [rbp-0x4]
  414c86:	cmp    eax,0x9
  414c89:	je     414cc8 <_start@@Base+0xea38>
  414c8b:	cmp    eax,0x9
  414c8e:	jg     414ca0 <_start@@Base+0xea10>
  414c90:	cmp    eax,0x2
  414c93:	je     414cba <_start@@Base+0xea2a>
  414c95:	cmp    eax,0x8
  414c98:	je     414cc1 <_start@@Base+0xea31>
  414c9a:	test   eax,eax
  414c9c:	je     414cb3 <_start@@Base+0xea23>
  414c9e:	jmp    414ce4 <_start@@Base+0xea54>
  414ca0:	cmp    eax,0xb
  414ca3:	je     414cd6 <_start@@Base+0xea46>
  414ca5:	cmp    eax,0xb
  414ca8:	jl     414ccf <_start@@Base+0xea3f>
  414caa:	cmp    eax,0xff
  414caf:	je     414cdd <_start@@Base+0xea4d>
  414cb1:	jmp    414ce4 <_start@@Base+0xea54>
  414cb3:	mov    eax,0x1
  414cb8:	jmp    414ce9 <_start@@Base+0xea59>
  414cba:	mov    eax,0x1
  414cbf:	jmp    414ce9 <_start@@Base+0xea59>
  414cc1:	mov    eax,0x1
  414cc6:	jmp    414ce9 <_start@@Base+0xea59>
  414cc8:	mov    eax,0x1
  414ccd:	jmp    414ce9 <_start@@Base+0xea59>
  414ccf:	mov    eax,0x1
  414cd4:	jmp    414ce9 <_start@@Base+0xea59>
  414cd6:	mov    eax,0x1
  414cdb:	jmp    414ce9 <_start@@Base+0xea59>
  414cdd:	mov    eax,0x1
  414ce2:	jmp    414ce9 <_start@@Base+0xea59>
  414ce4:	mov    eax,0x0
  414ce9:	pop    rbp
  414cea:	ret    
  414ceb:	endbr64 
  414cef:	push   rbp
  414cf0:	mov    rbp,rsp
  414cf3:	sub    rsp,0x50
  414cf7:	mov    QWORD PTR [rbp-0x28],rdi
  414cfb:	mov    QWORD PTR [rbp-0x30],rsi
  414cff:	mov    QWORD PTR [rbp-0x38],rdx
  414d03:	mov    QWORD PTR [rbp-0x40],rcx
  414d07:	mov    QWORD PTR [rbp-0x48],r8
  414d0b:	mov    QWORD PTR [rbp-0x50],r9
  414d0f:	mov    rax,QWORD PTR [rbp-0x30]
  414d13:	mov    QWORD PTR [rbp-0x18],rax
  414d17:	mov    rdx,QWORD PTR [rbp-0x38]
  414d1b:	mov    rax,QWORD PTR [rbp-0x30]
  414d1f:	mov    rsi,rdx
  414d22:	mov    rdi,rax
  414d25:	call   406876 <_start@@Base+0x5e6>
  414d2a:	mov    QWORD PTR [rbp-0x10],rax
  414d2e:	movabs rax,0x4e4f4e44ffffffff
  414d38:	cmp    QWORD PTR [rbp-0x10],rax
  414d3c:	ja     414ebf <_start@@Base+0xec2f>
  414d42:	movabs rax,0x426f6f6b46616dff
  414d4c:	cmp    QWORD PTR [rbp-0x10],rax
  414d50:	ja     414dd0 <_start@@Base+0xeb40>
  414d52:	mov    rax,QWORD PTR [rbp-0x10]
  414d56:	and    rax,0xffffffffff000000
  414d5c:	mov    rdx,rax
  414d5f:	movabs rax,0x42656c6c65000000
  414d69:	cmp    rdx,rax
  414d6c:	jne    414dc7 <_start@@Base+0xeb37>
  414d6e:	mov    rax,QWORD PTR [rbp-0x30]
  414d72:	mov    QWORD PTR [rbp-0x8],rax
  414d76:	mov    rcx,QWORD PTR [rbp-0x50]
  414d7a:	mov    rdx,QWORD PTR [rbp-0x38]
  414d7e:	mov    rsi,QWORD PTR [rbp-0x8]
  414d82:	mov    rax,QWORD PTR [rbp-0x28]
  414d86:	mov    r8,rcx
  414d89:	mov    ecx,0x5
  414d8e:	mov    rdi,rax
  414d91:	call   4285be <flatcc_json_parser_match_constant@@Base>
  414d96:	mov    QWORD PTR [rbp-0x30],rax
  414d9a:	mov    rax,QWORD PTR [rbp-0x30]
  414d9e:	cmp    rax,QWORD PTR [rbp-0x8]
  414da2:	je     414dbe <_start@@Base+0xeb2e>
  414da4:	mov    rax,QWORD PTR [rbp-0x48]
  414da8:	mov    QWORD PTR [rax],0x9
  414daf:	mov    rax,QWORD PTR [rbp-0x40]
  414db3:	mov    DWORD PTR [rax],0x0
  414db9:	jmp    4150b9 <_start@@Base+0xee29>
  414dbe:	mov    rax,QWORD PTR [rbp-0x18]
  414dc2:	jmp    4150bd <_start@@Base+0xee2d>
  414dc7:	mov    rax,QWORD PTR [rbp-0x18]
  414dcb:	jmp    4150bd <_start@@Base+0xee2d>
  414dd0:	mov    rax,QWORD PTR [rbp-0x10]
  414dd4:	and    rax,0xffffffffff000000
  414dda:	mov    rdx,rax
  414ddd:	movabs rax,0x4d754c616e000000
  414de7:	cmp    rdx,rax
  414dea:	jne    414e45 <_start@@Base+0xebb5>
  414dec:	mov    rax,QWORD PTR [rbp-0x30]
  414df0:	mov    QWORD PTR [rbp-0x8],rax
  414df4:	mov    rcx,QWORD PTR [rbp-0x50]
  414df8:	mov    rdx,QWORD PTR [rbp-0x38]
  414dfc:	mov    rsi,QWORD PTR [rbp-0x8]
  414e00:	mov    rax,QWORD PTR [rbp-0x28]
  414e04:	mov    r8,rcx
  414e07:	mov    ecx,0x5
  414e0c:	mov    rdi,rax
  414e0f:	call   4285be <flatcc_json_parser_match_constant@@Base>
  414e14:	mov    QWORD PTR [rbp-0x30],rax
  414e18:	mov    rax,QWORD PTR [rbp-0x30]
  414e1c:	cmp    rax,QWORD PTR [rbp-0x8]
  414e20:	je     414e3c <_start@@Base+0xebac>
  414e22:	mov    rax,QWORD PTR [rbp-0x48]
  414e26:	mov    QWORD PTR [rax],0x2
  414e2d:	mov    rax,QWORD PTR [rbp-0x40]
  414e31:	mov    DWORD PTR [rax],0x0
  414e37:	jmp    4150b9 <_start@@Base+0xee29>
  414e3c:	mov    rax,QWORD PTR [rbp-0x18]
  414e40:	jmp    4150bd <_start@@Base+0xee2d>
  414e45:	mov    rax,QWORD PTR [rbp-0x10]
  414e49:	mov    al,0x0
  414e4b:	mov    rdx,rax
  414e4e:	movabs rax,0x426f6f6b46616e00
  414e58:	cmp    rdx,rax
  414e5b:	jne    414eb6 <_start@@Base+0xec26>
  414e5d:	mov    rax,QWORD PTR [rbp-0x30]
  414e61:	mov    QWORD PTR [rbp-0x8],rax
  414e65:	mov    rcx,QWORD PTR [rbp-0x50]
  414e69:	mov    rdx,QWORD PTR [rbp-0x38]
  414e6d:	mov    rsi,QWORD PTR [rbp-0x8]
  414e71:	mov    rax,QWORD PTR [rbp-0x28]
  414e75:	mov    r8,rcx
  414e78:	mov    ecx,0x7
  414e7d:	mov    rdi,rax
  414e80:	call   4285be <flatcc_json_parser_match_constant@@Base>
  414e85:	mov    QWORD PTR [rbp-0x30],rax
  414e89:	mov    rax,QWORD PTR [rbp-0x30]
  414e8d:	cmp    rax,QWORD PTR [rbp-0x8]
  414e91:	je     414ead <_start@@Base+0xec1d>
  414e93:	mov    rax,QWORD PTR [rbp-0x48]
  414e97:	mov    QWORD PTR [rax],0xa
  414e9e:	mov    rax,QWORD PTR [rbp-0x40]
  414ea2:	mov    DWORD PTR [rax],0x0
  414ea8:	jmp    4150b9 <_start@@Base+0xee29>
  414ead:	mov    rax,QWORD PTR [rbp-0x18]
  414eb1:	jmp    4150bd <_start@@Base+0xee2d>
  414eb6:	mov    rax,QWORD PTR [rbp-0x18]
  414eba:	jmp    4150bd <_start@@Base+0xee2d>
  414ebf:	movabs rax,0x4f74686571ffffff
  414ec9:	cmp    QWORD PTR [rbp-0x10],rax
  414ecd:	ja     414f55 <_start@@Base+0xecc5>
  414ed3:	movabs rax,0xffffffff00000000
  414edd:	and    rax,QWORD PTR [rbp-0x10]
  414ee1:	mov    rdx,rax
  414ee4:	movabs rax,0x4e4f4e4500000000
  414eee:	cmp    rdx,rax
  414ef1:	jne    414f4c <_start@@Base+0xecbc>
  414ef3:	mov    rax,QWORD PTR [rbp-0x30]
  414ef7:	mov    QWORD PTR [rbp-0x8],rax
  414efb:	mov    rcx,QWORD PTR [rbp-0x50]
  414eff:	mov    rdx,QWORD PTR [rbp-0x38]
  414f03:	mov    rsi,QWORD PTR [rbp-0x8]
  414f07:	mov    rax,QWORD PTR [rbp-0x28]
  414f0b:	mov    r8,rcx
  414f0e:	mov    ecx,0x4
  414f13:	mov    rdi,rax
  414f16:	call   4285be <flatcc_json_parser_match_constant@@Base>
  414f1b:	mov    QWORD PTR [rbp-0x30],rax
  414f1f:	mov    rax,QWORD PTR [rbp-0x30]
  414f23:	cmp    rax,QWORD PTR [rbp-0x8]
  414f27:	je     414f43 <_start@@Base+0xecb3>
  414f29:	mov    rax,QWORD PTR [rbp-0x48]
  414f2d:	mov    QWORD PTR [rax],0x0
  414f34:	mov    rax,QWORD PTR [rbp-0x40]
  414f38:	mov    DWORD PTR [rax],0x0
  414f3e:	jmp    4150b9 <_start@@Base+0xee29>
  414f43:	mov    rax,QWORD PTR [rbp-0x18]
  414f47:	jmp    4150bd <_start@@Base+0xee2d>
  414f4c:	mov    rax,QWORD PTR [rbp-0x18]
  414f50:	jmp    4150bd <_start@@Base+0xee2d>
  414f55:	movabs rax,0x526170756e7a656b
  414f5f:	cmp    QWORD PTR [rbp-0x10],rax
  414f63:	ja     414fe3 <_start@@Base+0xed53>
  414f65:	mov    rax,QWORD PTR [rbp-0x10]
  414f69:	and    rax,0xffffffffff000000
  414f6f:	mov    rdx,rax
  414f72:	movabs rax,0x4f74686572000000
  414f7c:	cmp    rdx,rax
  414f7f:	jne    414fda <_start@@Base+0xed4a>
  414f81:	mov    rax,QWORD PTR [rbp-0x30]
  414f85:	mov    QWORD PTR [rbp-0x8],rax
  414f89:	mov    rcx,QWORD PTR [rbp-0x50]
  414f8d:	mov    rdx,QWORD PTR [rbp-0x38]
  414f91:	mov    rsi,QWORD PTR [rbp-0x8]
  414f95:	mov    rax,QWORD PTR [rbp-0x28]
  414f99:	mov    r8,rcx
  414f9c:	mov    ecx,0x5
  414fa1:	mov    rdi,rax
  414fa4:	call   4285be <flatcc_json_parser_match_constant@@Base>
  414fa9:	mov    QWORD PTR [rbp-0x30],rax
  414fad:	mov    rax,QWORD PTR [rbp-0x30]
  414fb1:	cmp    rax,QWORD PTR [rbp-0x8]
  414fb5:	je     414fd1 <_start@@Base+0xed41>
  414fb7:	mov    rax,QWORD PTR [rbp-0x48]
  414fbb:	mov    QWORD PTR [rax],0xb
  414fc2:	mov    rax,QWORD PTR [rbp-0x40]
  414fc6:	mov    DWORD PTR [rax],0x0
  414fcc:	jmp    4150b9 <_start@@Base+0xee29>
  414fd1:	mov    rax,QWORD PTR [rbp-0x18]
  414fd5:	jmp    4150bd <_start@@Base+0xee2d>
  414fda:	mov    rax,QWORD PTR [rbp-0x18]
  414fde:	jmp    4150bd <_start@@Base+0xee2d>
  414fe3:	mov    rax,QWORD PTR [rbp-0x10]
  414fe7:	mov    ax,0x0
  414feb:	mov    rdx,rax
  414fee:	movabs rax,0x556e757365640000
  414ff8:	cmp    rdx,rax
  414ffb:	jne    415050 <_start@@Base+0xedc0>
  414ffd:	mov    rax,QWORD PTR [rbp-0x30]
  415001:	mov    QWORD PTR [rbp-0x8],rax
  415005:	mov    rcx,QWORD PTR [rbp-0x50]
  415009:	mov    rdx,QWORD PTR [rbp-0x38]
  41500d:	mov    rsi,QWORD PTR [rbp-0x8]
  415011:	mov    rax,QWORD PTR [rbp-0x28]
  415015:	mov    r8,rcx
  415018:	mov    ecx,0x6
  41501d:	mov    rdi,rax
  415020:	call   4285be <flatcc_json_parser_match_constant@@Base>
  415025:	mov    QWORD PTR [rbp-0x30],rax
  415029:	mov    rax,QWORD PTR [rbp-0x30]
  41502d:	cmp    rax,QWORD PTR [rbp-0x8]
  415031:	je     41504a <_start@@Base+0xedba>
  415033:	mov    rax,QWORD PTR [rbp-0x48]
  415037:	mov    QWORD PTR [rax],0xff
  41503e:	mov    rax,QWORD PTR [rbp-0x40]
  415042:	mov    DWORD PTR [rax],0x0
  415048:	jmp    4150b9 <_start@@Base+0xee29>
  41504a:	mov    rax,QWORD PTR [rbp-0x18]
  41504e:	jmp    4150bd <_start@@Base+0xee2d>
  415050:	movabs rax,0x526170756e7a656c
  41505a:	cmp    QWORD PTR [rbp-0x10],rax
  41505e:	jne    4150b3 <_start@@Base+0xee23>
  415060:	mov    rax,QWORD PTR [rbp-0x30]
  415064:	mov    QWORD PTR [rbp-0x8],rax
  415068:	mov    rcx,QWORD PTR [rbp-0x50]
  41506c:	mov    rdx,QWORD PTR [rbp-0x38]
  415070:	mov    rsi,QWORD PTR [rbp-0x8]
  415074:	mov    rax,QWORD PTR [rbp-0x28]
  415078:	mov    r8,rcx
  41507b:	mov    ecx,0x8
  415080:	mov    rdi,rax
  415083:	call   4285be <flatcc_json_parser_match_constant@@Base>
  415088:	mov    QWORD PTR [rbp-0x30],rax
  41508c:	mov    rax,QWORD PTR [rbp-0x30]
  415090:	cmp    rax,QWORD PTR [rbp-0x8]
  415094:	je     4150ad <_start@@Base+0xee1d>
  415096:	mov    rax,QWORD PTR [rbp-0x48]
  41509a:	mov    QWORD PTR [rax],0x8
  4150a1:	mov    rax,QWORD PTR [rbp-0x40]
  4150a5:	mov    DWORD PTR [rax],0x0
  4150ab:	jmp    4150b9 <_start@@Base+0xee29>
  4150ad:	mov    rax,QWORD PTR [rbp-0x18]
  4150b1:	jmp    4150bd <_start@@Base+0xee2d>
  4150b3:	mov    rax,QWORD PTR [rbp-0x18]
  4150b7:	jmp    4150bd <_start@@Base+0xee2d>
  4150b9:	mov    rax,QWORD PTR [rbp-0x30]
  4150bd:	leave  
  4150be:	ret    
  4150bf:	endbr64 
  4150c3:	push   rbp
  4150c4:	mov    rbp,rsp
  4150c7:	sub    rsp,0x50
  4150cb:	mov    QWORD PTR [rbp-0x38],rdi
  4150cf:	mov    QWORD PTR [rbp-0x40],rsi
  4150d3:	mov    QWORD PTR [rbp-0x48],rdx
  4150d7:	mov    QWORD PTR [rbp-0x50],rcx
  4150db:	mov    rax,QWORD PTR fs:0x28
  4150e4:	mov    QWORD PTR [rbp-0x8],rax
  4150e8:	xor    eax,eax
  4150ea:	mov    rax,QWORD PTR [rbp-0x50]
  4150ee:	mov    DWORD PTR [rax],0x0
  4150f4:	mov    rax,QWORD PTR [rbp-0x38]
  4150f8:	mov    rax,QWORD PTR [rax]
  4150fb:	mov    esi,0xa
  415100:	mov    rdi,rax
  415103:	call   41ed41 <flatcc_builder_start_table@@Base>
  415108:	test   eax,eax
  41510a:	jne    415b50 <_start@@Base+0xf8c0>
  415110:	lea    rcx,[rbp-0x20]
  415114:	mov    rdx,QWORD PTR [rbp-0x48]
  415118:	mov    rsi,QWORD PTR [rbp-0x40]
  41511c:	mov    rax,QWORD PTR [rbp-0x38]
  415120:	mov    r8,rcx
  415123:	mov    ecx,0x5
  415128:	mov    rdi,rax
  41512b:	call   42995c <flatcc_json_parser_prepare_unions@@Base>
  415130:	cmp    QWORD PTR [rbp-0x48],rax
  415134:	je     415b53 <_start@@Base+0xf8c3>
  41513a:	lea    rcx,[rbp-0x24]
  41513e:	mov    rdx,QWORD PTR [rbp-0x48]
  415142:	mov    rsi,QWORD PTR [rbp-0x40]
  415146:	mov    rax,QWORD PTR [rbp-0x38]
  41514a:	mov    rdi,rax
  41514d:	call   406977 <_start@@Base+0x6e7>
  415152:	mov    QWORD PTR [rbp-0x40],rax
  415156:	jmp    415af7 <_start@@Base+0xf867>
  41515b:	mov    rdx,QWORD PTR [rbp-0x48]
  41515f:	mov    rcx,QWORD PTR [rbp-0x40]
  415163:	mov    rax,QWORD PTR [rbp-0x38]
  415167:	mov    rsi,rcx
  41516a:	mov    rdi,rax
  41516d:	call   4066e9 <_start@@Base+0x459>
  415172:	mov    QWORD PTR [rbp-0x40],rax
  415176:	mov    rdx,QWORD PTR [rbp-0x48]
  41517a:	mov    rax,QWORD PTR [rbp-0x40]
  41517e:	mov    rsi,rdx
  415181:	mov    rdi,rax
  415184:	call   406876 <_start@@Base+0x5e6>
  415189:	mov    QWORD PTR [rbp-0x18],rax
  41518d:	movabs rax,0x6368617261637464
  415197:	cmp    QWORD PTR [rbp-0x18],rax
  41519b:	ja     415525 <_start@@Base+0xf295>
  4151a1:	movabs rax,0x616e7461676f6e69
  4151ab:	cmp    QWORD PTR [rbp-0x18],rax
  4151af:	jne    415351 <_start@@Base+0xf0c1>
  4151b5:	add    QWORD PTR [rbp-0x40],0x8
  4151ba:	mov    rdx,QWORD PTR [rbp-0x48]
  4151be:	mov    rax,QWORD PTR [rbp-0x40]
  4151c2:	mov    rsi,rdx
  4151c5:	mov    rdi,rax
  4151c8:	call   406876 <_start@@Base+0x5e6>
  4151cd:	mov    QWORD PTR [rbp-0x18],rax
  4151d1:	mov    rax,QWORD PTR [rbp-0x18]
  4151d5:	mov    al,0x0
  4151d7:	mov    rdx,rax
  4151da:	movabs rax,0x73745f7479706500
  4151e4:	cmp    rdx,rax
  4151e7:	jne    41527f <_start@@Base+0xefef>
  4151ed:	mov    rax,QWORD PTR [rbp-0x40]
  4151f1:	mov    QWORD PTR [rbp-0x10],rax
  4151f5:	mov    rdx,QWORD PTR [rbp-0x48]
  4151f9:	mov    rsi,QWORD PTR [rbp-0x10]
  4151fd:	mov    rax,QWORD PTR [rbp-0x38]
  415201:	mov    ecx,0x7
  415206:	mov    rdi,rax
  415209:	call   406d6d <_start@@Base+0xadd>
  41520e:	mov    QWORD PTR [rbp-0x40],rax
  415212:	mov    rax,QWORD PTR [rbp-0x10]
  415216:	cmp    rax,QWORD PTR [rbp-0x40]
  41521a:	je     41525f <_start@@Base+0xefcf>
  41521c:	mov    rdi,QWORD PTR [rbp-0x20]
  415220:	mov    rdx,QWORD PTR [rbp-0x48]
  415224:	mov    rsi,QWORD PTR [rbp-0x40]
  415228:	mov    rax,QWORD PTR [rbp-0x38]
  41522c:	lea    rcx,[rip+0xfffffffffffff879]        # 414aac <_start@@Base+0xe81c>
  415233:	push   rcx
  415234:	lea    rcx,[rip+0x32725]        # 447960 <__data_start@@Base+0x8a0>
  41523b:	push   rcx
  41523c:	mov    r9,rdi
  41523f:	mov    r8d,0x3
  415245:	mov    ecx,0x1
  41524a:	mov    rdi,rax
  41524d:	call   429c5c <flatcc_json_parser_union_type@@Base>
  415252:	add    rsp,0x10
  415256:	mov    QWORD PTR [rbp-0x40],rax
  41525a:	jmp    415adb <_start@@Base+0xf84b>
  41525f:	mov    rdx,QWORD PTR [rbp-0x48]
  415263:	mov    rcx,QWORD PTR [rbp-0x40]
  415267:	mov    rax,QWORD PTR [rbp-0x38]
  41526b:	mov    rsi,rcx
  41526e:	mov    rdi,rax
  415271:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  415276:	mov    QWORD PTR [rbp-0x40],rax
  41527a:	jmp    415adb <_start@@Base+0xf84b>
  41527f:	movabs rax,0xffff000000000000
  415289:	and    rax,QWORD PTR [rbp-0x18]
  41528d:	mov    rdx,rax
  415290:	movabs rax,0x7374000000000000
  41529a:	cmp    rdx,rax
  41529d:	jne    415331 <_start@@Base+0xf0a1>
  4152a3:	mov    rax,QWORD PTR [rbp-0x40]
  4152a7:	mov    QWORD PTR [rbp-0x10],rax
  4152ab:	mov    rdx,QWORD PTR [rbp-0x48]
  4152af:	mov    rsi,QWORD PTR [rbp-0x10]
  4152b3:	mov    rax,QWORD PTR [rbp-0x38]
  4152b7:	mov    ecx,0x2
  4152bc:	mov    rdi,rax
  4152bf:	call   406d6d <_start@@Base+0xadd>
  4152c4:	mov    QWORD PTR [rbp-0x40],rax
  4152c8:	mov    rax,QWORD PTR [rbp-0x10]
  4152cc:	cmp    rax,QWORD PTR [rbp-0x40]
  4152d0:	je     415311 <_start@@Base+0xf081>
  4152d2:	mov    rdi,QWORD PTR [rbp-0x20]
  4152d6:	mov    rdx,QWORD PTR [rbp-0x48]
  4152da:	mov    rsi,QWORD PTR [rbp-0x40]
  4152de:	mov    rax,QWORD PTR [rbp-0x38]
  4152e2:	sub    rsp,0x8
  4152e6:	lea    rcx,[rip+0xfffffffffffff7bf]        # 414aac <_start@@Base+0xe81c>
  4152ed:	push   rcx
  4152ee:	mov    r9,rdi
  4152f1:	mov    r8d,0x3
  4152f7:	mov    ecx,0x1
  4152fc:	mov    rdi,rax
  4152ff:	call   429a7f <flatcc_json_parser_union@@Base>
  415304:	add    rsp,0x10
  415308:	mov    QWORD PTR [rbp-0x40],rax
  41530c:	jmp    415adb <_start@@Base+0xf84b>
  415311:	mov    rdx,QWORD PTR [rbp-0x48]
  415315:	mov    rcx,QWORD PTR [rbp-0x40]
  415319:	mov    rax,QWORD PTR [rbp-0x38]
  41531d:	mov    rsi,rcx
  415320:	mov    rdi,rax
  415323:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  415328:	mov    QWORD PTR [rbp-0x40],rax
  41532c:	jmp    415adb <_start@@Base+0xf84b>
  415331:	mov    rdx,QWORD PTR [rbp-0x48]
  415335:	mov    rcx,QWORD PTR [rbp-0x40]
  415339:	mov    rax,QWORD PTR [rbp-0x38]
  41533d:	mov    rsi,rcx
  415340:	mov    rdi,rax
  415343:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  415348:	mov    QWORD PTR [rbp-0x40],rax
  41534c:	jmp    415adb <_start@@Base+0xf84b>
  415351:	movabs rax,0x63616d656f5f7479
  41535b:	cmp    QWORD PTR [rbp-0x18],rax
  41535f:	jne    415457 <_start@@Base+0xf1c7>
  415365:	add    QWORD PTR [rbp-0x40],0x8
  41536a:	mov    rdx,QWORD PTR [rbp-0x48]
  41536e:	mov    rax,QWORD PTR [rbp-0x40]
  415372:	mov    rsi,rdx
  415375:	mov    rdi,rax
  415378:	call   406876 <_start@@Base+0x5e6>
  41537d:	mov    QWORD PTR [rbp-0x18],rax
  415381:	movabs rax,0xffff000000000000
  41538b:	and    rax,QWORD PTR [rbp-0x18]
  41538f:	mov    rdx,rax
  415392:	movabs rax,0x7065000000000000
  41539c:	cmp    rdx,rax
  41539f:	jne    415437 <_start@@Base+0xf1a7>
  4153a5:	mov    rax,QWORD PTR [rbp-0x40]
  4153a9:	mov    QWORD PTR [rbp-0x10],rax
  4153ad:	mov    rdx,QWORD PTR [rbp-0x48]
  4153b1:	mov    rsi,QWORD PTR [rbp-0x10]
  4153b5:	mov    rax,QWORD PTR [rbp-0x38]
  4153b9:	mov    ecx,0x2
  4153be:	mov    rdi,rax
  4153c1:	call   406d6d <_start@@Base+0xadd>
  4153c6:	mov    QWORD PTR [rbp-0x40],rax
  4153ca:	mov    rax,QWORD PTR [rbp-0x10]
  4153ce:	cmp    rax,QWORD PTR [rbp-0x40]
  4153d2:	je     415417 <_start@@Base+0xf187>
  4153d4:	mov    rdi,QWORD PTR [rbp-0x20]
  4153d8:	mov    rdx,QWORD PTR [rbp-0x48]
  4153dc:	mov    rsi,QWORD PTR [rbp-0x40]
  4153e0:	mov    rax,QWORD PTR [rbp-0x38]
  4153e4:	lea    rcx,[rip+0xfffffffffffff6c1]        # 414aac <_start@@Base+0xe81c>
  4153eb:	push   rcx
  4153ec:	lea    rcx,[rip+0x3258d]        # 447980 <__data_start@@Base+0x8c0>
  4153f3:	push   rcx
  4153f4:	mov    r9,rdi
  4153f7:	mov    r8d,0x7
  4153fd:	mov    ecx,0x3
  415402:	mov    rdi,rax
  415405:	call   429c5c <flatcc_json_parser_union_type@@Base>
  41540a:	add    rsp,0x10
  41540e:	mov    QWORD PTR [rbp-0x40],rax
  415412:	jmp    415adb <_start@@Base+0xf84b>
  415417:	mov    rdx,QWORD PTR [rbp-0x48]
  41541b:	mov    rcx,QWORD PTR [rbp-0x40]
  41541f:	mov    rax,QWORD PTR [rbp-0x38]
  415423:	mov    rsi,rcx
  415426:	mov    rdi,rax
  415429:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41542e:	mov    QWORD PTR [rbp-0x40],rax
  415432:	jmp    415adb <_start@@Base+0xf84b>
  415437:	mov    rdx,QWORD PTR [rbp-0x48]
  41543b:	mov    rcx,QWORD PTR [rbp-0x40]
  41543f:	mov    rax,QWORD PTR [rbp-0x38]
  415443:	mov    rsi,rcx
  415446:	mov    rdi,rax
  415449:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41544e:	mov    QWORD PTR [rbp-0x40],rax
  415452:	jmp    415adb <_start@@Base+0xf84b>
  415457:	mov    rax,QWORD PTR [rbp-0x18]
  41545b:	and    rax,0xffffffffff000000
  415461:	mov    rdx,rax
  415464:	movabs rax,0x63616d656f000000
  41546e:	cmp    rdx,rax
  415471:	jne    415505 <_start@@Base+0xf275>
  415477:	mov    rax,QWORD PTR [rbp-0x40]
  41547b:	mov    QWORD PTR [rbp-0x10],rax
  41547f:	mov    rdx,QWORD PTR [rbp-0x48]
  415483:	mov    rsi,QWORD PTR [rbp-0x10]
  415487:	mov    rax,QWORD PTR [rbp-0x38]
  41548b:	mov    ecx,0x5
  415490:	mov    rdi,rax
  415493:	call   406d6d <_start@@Base+0xadd>
  415498:	mov    QWORD PTR [rbp-0x40],rax
  41549c:	mov    rax,QWORD PTR [rbp-0x10]
  4154a0:	cmp    rax,QWORD PTR [rbp-0x40]
  4154a4:	je     4154e5 <_start@@Base+0xf255>
  4154a6:	mov    rdi,QWORD PTR [rbp-0x20]
  4154aa:	mov    rdx,QWORD PTR [rbp-0x48]
  4154ae:	mov    rsi,QWORD PTR [rbp-0x40]
  4154b2:	mov    rax,QWORD PTR [rbp-0x38]
  4154b6:	sub    rsp,0x8
  4154ba:	lea    rcx,[rip+0xfffffffffffff5eb]        # 414aac <_start@@Base+0xe81c>
  4154c1:	push   rcx
  4154c2:	mov    r9,rdi
  4154c5:	mov    r8d,0x7
  4154cb:	mov    ecx,0x3
  4154d0:	mov    rdi,rax
  4154d3:	call   429a7f <flatcc_json_parser_union@@Base>
  4154d8:	add    rsp,0x10
  4154dc:	mov    QWORD PTR [rbp-0x40],rax
  4154e0:	jmp    415adb <_start@@Base+0xf84b>
  4154e5:	mov    rdx,QWORD PTR [rbp-0x48]
  4154e9:	mov    rcx,QWORD PTR [rbp-0x40]
  4154ed:	mov    rax,QWORD PTR [rbp-0x38]
  4154f1:	mov    rsi,rcx
  4154f4:	mov    rdi,rax
  4154f7:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4154fc:	mov    QWORD PTR [rbp-0x40],rax
  415500:	jmp    415adb <_start@@Base+0xf84b>
  415505:	mov    rdx,QWORD PTR [rbp-0x48]
  415509:	mov    rcx,QWORD PTR [rbp-0x40]
  41550d:	mov    rax,QWORD PTR [rbp-0x38]
  415511:	mov    rsi,rcx
  415514:	mov    rdi,rax
  415517:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41551c:	mov    QWORD PTR [rbp-0x40],rax
  415520:	jmp    415adb <_start@@Base+0xf84b>
  415525:	movabs rax,0x6d61696e5f636860
  41552f:	cmp    QWORD PTR [rbp-0x18],rax
  415533:	ja     415715 <_start@@Base+0xf485>
  415539:	movabs rax,0x6368617261637465
  415543:	cmp    QWORD PTR [rbp-0x18],rax
  415547:	jne    4156f5 <_start@@Base+0xf465>
  41554d:	add    QWORD PTR [rbp-0x40],0x8
  415552:	mov    rdx,QWORD PTR [rbp-0x48]
  415556:	mov    rax,QWORD PTR [rbp-0x40]
  41555a:	mov    rsi,rdx
  41555d:	mov    rdi,rax
  415560:	call   406876 <_start@@Base+0x5e6>
  415565:	mov    QWORD PTR [rbp-0x18],rax
  415569:	mov    rax,QWORD PTR [rbp-0x18]
  41556d:	mov    al,0x0
  41556f:	mov    rdx,rax
  415572:	movabs rax,0x72735f7479706500
  41557c:	cmp    rdx,rax
  41557f:	jne    415623 <_start@@Base+0xf393>
  415585:	mov    rax,QWORD PTR [rbp-0x40]
  415589:	mov    QWORD PTR [rbp-0x10],rax
  41558d:	mov    rdx,QWORD PTR [rbp-0x48]
  415591:	mov    rsi,QWORD PTR [rbp-0x10]
  415595:	mov    rax,QWORD PTR [rbp-0x38]
  415599:	mov    ecx,0x7
  41559e:	mov    rdi,rax
  4155a1:	call   406d6d <_start@@Base+0xadd>
  4155a6:	mov    QWORD PTR [rbp-0x40],rax
  4155aa:	mov    rax,QWORD PTR [rbp-0x10]
  4155ae:	cmp    rax,QWORD PTR [rbp-0x40]
  4155b2:	je     415603 <_start@@Base+0xf373>
  4155b4:	mov    rdi,QWORD PTR [rbp-0x20]
  4155b8:	mov    rdx,QWORD PTR [rbp-0x48]
  4155bc:	mov    rsi,QWORD PTR [rbp-0x40]
  4155c0:	mov    rax,QWORD PTR [rbp-0x38]
  4155c4:	sub    rsp,0x8
  4155c8:	lea    rcx,[rip+0xfffffffffffff6a6]        # 414c75 <_start@@Base+0xe9e5>
  4155cf:	push   rcx
  4155d0:	lea    rcx,[rip+0xfffffffffffff4d5]        # 414aac <_start@@Base+0xe81c>
  4155d7:	push   rcx
  4155d8:	lea    rcx,[rip+0x323c1]        # 4479a0 <__data_start@@Base+0x8e0>
  4155df:	push   rcx
  4155e0:	mov    r9,rdi
  4155e3:	mov    r8d,0x9
  4155e9:	mov    ecx,0x4
  4155ee:	mov    rdi,rax
  4155f1:	call   42a22b <flatcc_json_parser_union_type_vector@@Base>
  4155f6:	add    rsp,0x20
  4155fa:	mov    QWORD PTR [rbp-0x40],rax
  4155fe:	jmp    415adb <_start@@Base+0xf84b>
  415603:	mov    rdx,QWORD PTR [rbp-0x48]
  415607:	mov    rcx,QWORD PTR [rbp-0x40]
  41560b:	mov    rax,QWORD PTR [rbp-0x38]
  41560f:	mov    rsi,rcx
  415612:	mov    rdi,rax
  415615:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41561a:	mov    QWORD PTR [rbp-0x40],rax
  41561e:	jmp    415adb <_start@@Base+0xf84b>
  415623:	movabs rax,0xffff000000000000
  41562d:	and    rax,QWORD PTR [rbp-0x18]
  415631:	mov    rdx,rax
  415634:	movabs rax,0x7273000000000000
  41563e:	cmp    rdx,rax
  415641:	jne    4156d5 <_start@@Base+0xf445>
  415647:	mov    rax,QWORD PTR [rbp-0x40]
  41564b:	mov    QWORD PTR [rbp-0x10],rax
  41564f:	mov    rdx,QWORD PTR [rbp-0x48]
  415653:	mov    rsi,QWORD PTR [rbp-0x10]
  415657:	mov    rax,QWORD PTR [rbp-0x38]
  41565b:	mov    ecx,0x2
  415660:	mov    rdi,rax
  415663:	call   406d6d <_start@@Base+0xadd>
  415668:	mov    QWORD PTR [rbp-0x40],rax
  41566c:	mov    rax,QWORD PTR [rbp-0x10]
  415670:	cmp    rax,QWORD PTR [rbp-0x40]
  415674:	je     4156b5 <_start@@Base+0xf425>
  415676:	mov    rdi,QWORD PTR [rbp-0x20]
  41567a:	mov    rdx,QWORD PTR [rbp-0x48]
  41567e:	mov    rsi,QWORD PTR [rbp-0x40]
  415682:	mov    rax,QWORD PTR [rbp-0x38]
  415686:	sub    rsp,0x8
  41568a:	lea    rcx,[rip+0xfffffffffffff41b]        # 414aac <_start@@Base+0xe81c>
  415691:	push   rcx
  415692:	mov    r9,rdi
  415695:	mov    r8d,0x9
  41569b:	mov    ecx,0x4
  4156a0:	mov    rdi,rax
  4156a3:	call   42a0df <flatcc_json_parser_union_vector@@Base>
  4156a8:	add    rsp,0x10
  4156ac:	mov    QWORD PTR [rbp-0x40],rax
  4156b0:	jmp    415adb <_start@@Base+0xf84b>
  4156b5:	mov    rdx,QWORD PTR [rbp-0x48]
  4156b9:	mov    rcx,QWORD PTR [rbp-0x40]
  4156bd:	mov    rax,QWORD PTR [rbp-0x38]
  4156c1:	mov    rsi,rcx
  4156c4:	mov    rdi,rax
  4156c7:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4156cc:	mov    QWORD PTR [rbp-0x40],rax
  4156d0:	jmp    415adb <_start@@Base+0xf84b>
  4156d5:	mov    rdx,QWORD PTR [rbp-0x48]
  4156d9:	mov    rcx,QWORD PTR [rbp-0x40]
  4156dd:	mov    rax,QWORD PTR [rbp-0x38]
  4156e1:	mov    rsi,rcx
  4156e4:	mov    rdi,rax
  4156e7:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4156ec:	mov    QWORD PTR [rbp-0x40],rax
  4156f0:	jmp    415adb <_start@@Base+0xf84b>
  4156f5:	mov    rdx,QWORD PTR [rbp-0x48]
  4156f9:	mov    rcx,QWORD PTR [rbp-0x40]
  4156fd:	mov    rax,QWORD PTR [rbp-0x38]
  415701:	mov    rsi,rcx
  415704:	mov    rdi,rax
  415707:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41570c:	mov    QWORD PTR [rbp-0x40],rax
  415710:	jmp    415adb <_start@@Base+0xf84b>
  415715:	movabs rax,0x6d61696e5f636861
  41571f:	cmp    QWORD PTR [rbp-0x18],rax
  415723:	jne    415917 <_start@@Base+0xf687>
  415729:	add    QWORD PTR [rbp-0x40],0x8
  41572e:	mov    rdx,QWORD PTR [rbp-0x48]
  415732:	mov    rax,QWORD PTR [rbp-0x40]
  415736:	mov    rsi,rdx
  415739:	mov    rdi,rax
  41573c:	call   406876 <_start@@Base+0x5e6>
  415741:	mov    QWORD PTR [rbp-0x18],rax
  415745:	movabs rax,0x7261637465725f74
  41574f:	cmp    QWORD PTR [rbp-0x18],rax
  415753:	jne    41584b <_start@@Base+0xf5bb>
  415759:	add    QWORD PTR [rbp-0x40],0x8
  41575e:	mov    rdx,QWORD PTR [rbp-0x48]
  415762:	mov    rax,QWORD PTR [rbp-0x40]
  415766:	mov    rsi,rdx
  415769:	mov    rdi,rax
  41576c:	call   406876 <_start@@Base+0x5e6>
  415771:	mov    QWORD PTR [rbp-0x18],rax
  415775:	movabs rax,0xffffff0000000000
  41577f:	and    rax,QWORD PTR [rbp-0x18]
  415783:	mov    rdx,rax
  415786:	movabs rax,0x7970650000000000
  415790:	cmp    rdx,rax
  415793:	jne    41582b <_start@@Base+0xf59b>
  415799:	mov    rax,QWORD PTR [rbp-0x40]
  41579d:	mov    QWORD PTR [rbp-0x10],rax
  4157a1:	mov    rdx,QWORD PTR [rbp-0x48]
  4157a5:	mov    rsi,QWORD PTR [rbp-0x10]
  4157a9:	mov    rax,QWORD PTR [rbp-0x38]
  4157ad:	mov    ecx,0x3
  4157b2:	mov    rdi,rax
  4157b5:	call   406d6d <_start@@Base+0xadd>
  4157ba:	mov    QWORD PTR [rbp-0x40],rax
  4157be:	mov    rax,QWORD PTR [rbp-0x10]
  4157c2:	cmp    rax,QWORD PTR [rbp-0x40]
  4157c6:	je     41580b <_start@@Base+0xf57b>
  4157c8:	mov    rdi,QWORD PTR [rbp-0x20]
  4157cc:	mov    rdx,QWORD PTR [rbp-0x48]
  4157d0:	mov    rsi,QWORD PTR [rbp-0x40]
  4157d4:	mov    rax,QWORD PTR [rbp-0x38]
  4157d8:	lea    rcx,[rip+0xfffffffffffff2cd]        # 414aac <_start@@Base+0xe81c>
  4157df:	push   rcx
  4157e0:	lea    rcx,[rip+0x321d9]        # 4479c0 <__data_start@@Base+0x900>
  4157e7:	push   rcx
  4157e8:	mov    r9,rdi
  4157eb:	mov    r8d,0x1
  4157f1:	mov    ecx,0x0
  4157f6:	mov    rdi,rax
  4157f9:	call   429c5c <flatcc_json_parser_union_type@@Base>
  4157fe:	add    rsp,0x10
  415802:	mov    QWORD PTR [rbp-0x40],rax
  415806:	jmp    415adb <_start@@Base+0xf84b>
  41580b:	mov    rdx,QWORD PTR [rbp-0x48]
  41580f:	mov    rcx,QWORD PTR [rbp-0x40]
  415813:	mov    rax,QWORD PTR [rbp-0x38]
  415817:	mov    rsi,rcx
  41581a:	mov    rdi,rax
  41581d:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  415822:	mov    QWORD PTR [rbp-0x40],rax
  415826:	jmp    415adb <_start@@Base+0xf84b>
  41582b:	mov    rdx,QWORD PTR [rbp-0x48]
  41582f:	mov    rcx,QWORD PTR [rbp-0x40]
  415833:	mov    rax,QWORD PTR [rbp-0x38]
  415837:	mov    rsi,rcx
  41583a:	mov    rdi,rax
  41583d:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  415842:	mov    QWORD PTR [rbp-0x40],rax
  415846:	jmp    415adb <_start@@Base+0xf84b>
  41584b:	mov    rax,QWORD PTR [rbp-0x18]
  41584f:	mov    ax,0x0
  415853:	mov    rdx,rax
  415856:	movabs rax,0x7261637465720000
  415860:	cmp    rdx,rax
  415863:	jne    4158f7 <_start@@Base+0xf667>
  415869:	mov    rax,QWORD PTR [rbp-0x40]
  41586d:	mov    QWORD PTR [rbp-0x10],rax
  415871:	mov    rdx,QWORD PTR [rbp-0x48]
  415875:	mov    rsi,QWORD PTR [rbp-0x10]
  415879:	mov    rax,QWORD PTR [rbp-0x38]
  41587d:	mov    ecx,0x6
  415882:	mov    rdi,rax
  415885:	call   406d6d <_start@@Base+0xadd>
  41588a:	mov    QWORD PTR [rbp-0x40],rax
  41588e:	mov    rax,QWORD PTR [rbp-0x10]
  415892:	cmp    rax,QWORD PTR [rbp-0x40]
  415896:	je     4158d7 <_start@@Base+0xf647>
  415898:	mov    rdi,QWORD PTR [rbp-0x20]
  41589c:	mov    rdx,QWORD PTR [rbp-0x48]
  4158a0:	mov    rsi,QWORD PTR [rbp-0x40]
  4158a4:	mov    rax,QWORD PTR [rbp-0x38]
  4158a8:	sub    rsp,0x8
  4158ac:	lea    rcx,[rip+0xfffffffffffff1f9]        # 414aac <_start@@Base+0xe81c>
  4158b3:	push   rcx
  4158b4:	mov    r9,rdi
  4158b7:	mov    r8d,0x1
  4158bd:	mov    ecx,0x0
  4158c2:	mov    rdi,rax
  4158c5:	call   429a7f <flatcc_json_parser_union@@Base>
  4158ca:	add    rsp,0x10
  4158ce:	mov    QWORD PTR [rbp-0x40],rax
  4158d2:	jmp    415adb <_start@@Base+0xf84b>
  4158d7:	mov    rdx,QWORD PTR [rbp-0x48]
  4158db:	mov    rcx,QWORD PTR [rbp-0x40]
  4158df:	mov    rax,QWORD PTR [rbp-0x38]
  4158e3:	mov    rsi,rcx
  4158e6:	mov    rdi,rax
  4158e9:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4158ee:	mov    QWORD PTR [rbp-0x40],rax
  4158f2:	jmp    415adb <_start@@Base+0xf84b>
  4158f7:	mov    rdx,QWORD PTR [rbp-0x48]
  4158fb:	mov    rcx,QWORD PTR [rbp-0x40]
  4158ff:	mov    rax,QWORD PTR [rbp-0x38]
  415903:	mov    rsi,rcx
  415906:	mov    rdi,rax
  415909:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  41590e:	mov    QWORD PTR [rbp-0x40],rax
  415912:	jmp    415adb <_start@@Base+0xf84b>
  415917:	movabs rax,0x736964655f6b6963
  415921:	cmp    QWORD PTR [rbp-0x18],rax
  415925:	jne    415ac0 <_start@@Base+0xf830>
  41592b:	add    QWORD PTR [rbp-0x40],0x8
  415930:	mov    rdx,QWORD PTR [rbp-0x48]
  415934:	mov    rax,QWORD PTR [rbp-0x40]
  415938:	mov    rsi,rdx
  41593b:	mov    rdi,rax
  41593e:	call   406876 <_start@@Base+0x5e6>
  415943:	mov    QWORD PTR [rbp-0x18],rax
  415947:	mov    rax,QWORD PTR [rbp-0x18]
  41594b:	mov    ax,0x0
  41594f:	mov    rdx,rax
  415952:	movabs rax,0x6b5f747970650000
  41595c:	cmp    rdx,rax
  41595f:	jne    4159f7 <_start@@Base+0xf767>
  415965:	mov    rax,QWORD PTR [rbp-0x40]
  415969:	mov    QWORD PTR [rbp-0x10],rax
  41596d:	mov    rdx,QWORD PTR [rbp-0x48]
  415971:	mov    rsi,QWORD PTR [rbp-0x10]
  415975:	mov    rax,QWORD PTR [rbp-0x38]
  415979:	mov    ecx,0x6
  41597e:	mov    rdi,rax
  415981:	call   406d6d <_start@@Base+0xadd>
  415986:	mov    QWORD PTR [rbp-0x40],rax
  41598a:	mov    rax,QWORD PTR [rbp-0x10]
  41598e:	cmp    rax,QWORD PTR [rbp-0x40]
  415992:	je     4159d7 <_start@@Base+0xf747>
  415994:	mov    rdi,QWORD PTR [rbp-0x20]
  415998:	mov    rdx,QWORD PTR [rbp-0x48]
  41599c:	mov    rsi,QWORD PTR [rbp-0x40]
  4159a0:	mov    rax,QWORD PTR [rbp-0x38]
  4159a4:	lea    rcx,[rip+0xfffffffffffff101]        # 414aac <_start@@Base+0xe81c>
  4159ab:	push   rcx
  4159ac:	lea    rcx,[rip+0x3202d]        # 4479e0 <__data_start@@Base+0x920>
  4159b3:	push   rcx
  4159b4:	mov    r9,rdi
  4159b7:	mov    r8d,0x5
  4159bd:	mov    ecx,0x2
  4159c2:	mov    rdi,rax
  4159c5:	call   429c5c <flatcc_json_parser_union_type@@Base>
  4159ca:	add    rsp,0x10
  4159ce:	mov    QWORD PTR [rbp-0x40],rax
  4159d2:	jmp    415adb <_start@@Base+0xf84b>
  4159d7:	mov    rdx,QWORD PTR [rbp-0x48]
  4159db:	mov    rcx,QWORD PTR [rbp-0x40]
  4159df:	mov    rax,QWORD PTR [rbp-0x38]
  4159e3:	mov    rsi,rcx
  4159e6:	mov    rdi,rax
  4159e9:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  4159ee:	mov    QWORD PTR [rbp-0x40],rax
  4159f2:	jmp    415adb <_start@@Base+0xf84b>
  4159f7:	movabs rax,0xff00000000000000
  415a01:	and    rax,QWORD PTR [rbp-0x18]
  415a05:	mov    rdx,rax
  415a08:	movabs rax,0x6b00000000000000
  415a12:	cmp    rdx,rax
  415a15:	jne    415aa3 <_start@@Base+0xf813>
  415a1b:	mov    rax,QWORD PTR [rbp-0x40]
  415a1f:	mov    QWORD PTR [rbp-0x10],rax
  415a23:	mov    rdx,QWORD PTR [rbp-0x48]
  415a27:	mov    rsi,QWORD PTR [rbp-0x10]
  415a2b:	mov    rax,QWORD PTR [rbp-0x38]
  415a2f:	mov    ecx,0x1
  415a34:	mov    rdi,rax
  415a37:	call   406d6d <_start@@Base+0xadd>
  415a3c:	mov    QWORD PTR [rbp-0x40],rax
  415a40:	mov    rax,QWORD PTR [rbp-0x10]
  415a44:	cmp    rax,QWORD PTR [rbp-0x40]
  415a48:	je     415a86 <_start@@Base+0xf7f6>
  415a4a:	mov    rdi,QWORD PTR [rbp-0x20]
  415a4e:	mov    rdx,QWORD PTR [rbp-0x48]
  415a52:	mov    rsi,QWORD PTR [rbp-0x40]
  415a56:	mov    rax,QWORD PTR [rbp-0x38]
  415a5a:	sub    rsp,0x8
  415a5e:	lea    rcx,[rip+0xfffffffffffff047]        # 414aac <_start@@Base+0xe81c>
  415a65:	push   rcx
  415a66:	mov    r9,rdi
  415a69:	mov    r8d,0x5
  415a6f:	mov    ecx,0x2
  415a74:	mov    rdi,rax
  415a77:	call   429a7f <flatcc_json_parser_union@@Base>
  415a7c:	add    rsp,0x10
  415a80:	mov    QWORD PTR [rbp-0x40],rax
  415a84:	jmp    415adb <_start@@Base+0xf84b>
  415a86:	mov    rdx,QWORD PTR [rbp-0x48]
  415a8a:	mov    rcx,QWORD PTR [rbp-0x40]
  415a8e:	mov    rax,QWORD PTR [rbp-0x38]
  415a92:	mov    rsi,rcx
  415a95:	mov    rdi,rax
  415a98:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  415a9d:	mov    QWORD PTR [rbp-0x40],rax
  415aa1:	jmp    415adb <_start@@Base+0xf84b>
  415aa3:	mov    rdx,QWORD PTR [rbp-0x48]
  415aa7:	mov    rcx,QWORD PTR [rbp-0x40]
  415aab:	mov    rax,QWORD PTR [rbp-0x38]
  415aaf:	mov    rsi,rcx
  415ab2:	mov    rdi,rax
  415ab5:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  415aba:	mov    QWORD PTR [rbp-0x40],rax
  415abe:	jmp    415adb <_start@@Base+0xf84b>
  415ac0:	mov    rdx,QWORD PTR [rbp-0x48]
  415ac4:	mov    rcx,QWORD PTR [rbp-0x40]
  415ac8:	mov    rax,QWORD PTR [rbp-0x38]
  415acc:	mov    rsi,rcx
  415acf:	mov    rdi,rax
  415ad2:	call   4287db <flatcc_json_parser_unmatched_symbol@@Base>
  415ad7:	mov    QWORD PTR [rbp-0x40],rax
  415adb:	lea    rcx,[rbp-0x24]
  415adf:	mov    rdx,QWORD PTR [rbp-0x48]
  415ae3:	mov    rsi,QWORD PTR [rbp-0x40]
  415ae7:	mov    rax,QWORD PTR [rbp-0x38]
  415aeb:	mov    rdi,rax
  415aee:	call   406a34 <_start@@Base+0x7a4>
  415af3:	mov    QWORD PTR [rbp-0x40],rax
  415af7:	mov    eax,DWORD PTR [rbp-0x24]
  415afa:	test   eax,eax
  415afc:	jne    41515b <_start@@Base+0xeecb>
  415b02:	mov    rax,QWORD PTR [rbp-0x38]
  415b06:	mov    eax,DWORD PTR [rax+0x20]
  415b09:	test   eax,eax
  415b0b:	jne    415b56 <_start@@Base+0xf8c6>
  415b0d:	mov    rcx,QWORD PTR [rbp-0x20]
  415b11:	mov    rdx,QWORD PTR [rbp-0x48]
  415b15:	mov    rsi,QWORD PTR [rbp-0x40]
  415b19:	mov    rax,QWORD PTR [rbp-0x38]
  415b1d:	mov    rdi,rax
  415b20:	call   429a03 <flatcc_json_parser_finalize_unions@@Base>
  415b25:	mov    QWORD PTR [rbp-0x40],rax
  415b29:	mov    rax,QWORD PTR [rbp-0x38]
  415b2d:	mov    rax,QWORD PTR [rax]
  415b30:	mov    rdi,rax
  415b33:	call   41f850 <flatcc_builder_end_table@@Base>
  415b38:	mov    edx,eax
  415b3a:	mov    rax,QWORD PTR [rbp-0x50]
  415b3e:	mov    DWORD PTR [rax],edx
  415b40:	mov    rax,QWORD PTR [rbp-0x50]
  415b44:	mov    eax,DWORD PTR [rax]
  415b46:	test   eax,eax
  415b48:	je     415b59 <_start@@Base+0xf8c9>
  415b4a:	mov    rax,QWORD PTR [rbp-0x40]
  415b4e:	jmp    415b73 <_start@@Base+0xf8e3>
  415b50:	nop
  415b51:	jmp    415b5a <_start@@Base+0xf8ca>
  415b53:	nop
  415b54:	jmp    415b5a <_start@@Base+0xf8ca>
  415b56:	nop
  415b57:	jmp    415b5a <_start@@Base+0xf8ca>
  415b59:	nop
  415b5a:	mov    rdx,QWORD PTR [rbp-0x48]
  415b5e:	mov    rsi,QWORD PTR [rbp-0x40]
  415b62:	mov    rax,QWORD PTR [rbp-0x38]
  415b66:	mov    ecx,0x21
  415b6b:	mov    rdi,rax
  415b6e:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  415b73:	mov    rdi,QWORD PTR [rbp-0x8]
  415b77:	xor    rdi,QWORD PTR fs:0x28
  415b80:	je     415b87 <_start@@Base+0xf8f7>
  415b82:	call   4061a0 <__stack_chk_fail@plt>
  415b87:	leave  
  415b88:	ret    
  415b89:	endbr64 
  415b8d:	push   rbp
  415b8e:	mov    rbp,rsp
  415b91:	mov    QWORD PTR [rbp-0x8],rdi
  415b95:	mov    QWORD PTR [rbp-0x10],rsi
  415b99:	mov    QWORD PTR [rbp-0x18],rdx
  415b9d:	mov    QWORD PTR [rbp-0x20],rcx
  415ba1:	mov    QWORD PTR [rbp-0x28],r8
  415ba5:	mov    QWORD PTR [rbp-0x30],r9
  415ba9:	mov    rax,QWORD PTR [rbp-0x10]
  415bad:	pop    rbp
  415bae:	ret    
  415baf:	endbr64 
  415bb3:	push   rbp
  415bb4:	mov    rbp,rsp
  415bb7:	sub    rsp,0x50
  415bbb:	mov    QWORD PTR [rbp-0x28],rdi
  415bbf:	mov    QWORD PTR [rbp-0x30],rsi
  415bc3:	mov    QWORD PTR [rbp-0x38],rdx
  415bc7:	mov    QWORD PTR [rbp-0x40],rcx
  415bcb:	mov    QWORD PTR [rbp-0x48],r8
  415bcf:	mov    QWORD PTR [rbp-0x50],r9
  415bd3:	mov    rax,QWORD PTR [rbp-0x30]
  415bd7:	mov    QWORD PTR [rbp-0x18],rax
  415bdb:	mov    rdx,QWORD PTR [rbp-0x38]
  415bdf:	mov    rax,QWORD PTR [rbp-0x30]
  415be3:	mov    rsi,rdx
  415be6:	mov    rdi,rax
  415be9:	call   406876 <_start@@Base+0x5e6>
  415bee:	mov    QWORD PTR [rbp-0x10],rax
  415bf2:	movabs rax,0x6865785f656e756c
  415bfc:	cmp    QWORD PTR [rbp-0x10],rax
  415c00:	ja     415dbd <_start@@Base+0xfb2d>
  415c06:	movabs rax,0x436f6c6f71ffffff
  415c10:	cmp    QWORD PTR [rbp-0x10],rax
  415c14:	ja     415caa <_start@@Base+0xfa1a>
  415c1a:	movabs rax,0xffffff0000000000
  415c24:	and    rax,QWORD PTR [rbp-0x10]
  415c28:	mov    rdx,rax
  415c2b:	movabs rax,0x416e790000000000
  415c35:	cmp    rdx,rax
  415c38:	jne    415ca1 <_start@@Base+0xfa11>
  415c3a:	mov    rax,QWORD PTR [rbp-0x30]
  415c3e:	mov    QWORD PTR [rbp-0x8],rax
  415c42:	mov    rdx,QWORD PTR [rbp-0x38]
  415c46:	mov    rsi,QWORD PTR [rbp-0x8]
  415c4a:	mov    rax,QWORD PTR [rbp-0x28]
  415c4e:	mov    ecx,0x3
  415c53:	mov    rdi,rax
  415c56:	call   4068ba <_start@@Base+0x62a>
  415c5b:	mov    QWORD PTR [rbp-0x30],rax
  415c5f:	mov    rax,QWORD PTR [rbp-0x30]
  415c63:	cmp    rax,QWORD PTR [rbp-0x8]
  415c67:	je     415c98 <_start@@Base+0xfa08>
  415c69:	mov    r8,QWORD PTR [rbp-0x50]
  415c6d:	mov    rdi,QWORD PTR [rbp-0x48]
  415c71:	mov    rcx,QWORD PTR [rbp-0x40]
  415c75:	mov    rdx,QWORD PTR [rbp-0x38]
  415c79:	mov    rsi,QWORD PTR [rbp-0x30]
  415c7d:	mov    rax,QWORD PTR [rbp-0x28]
  415c81:	mov    r9,r8
  415c84:	mov    r8,rdi
  415c87:	mov    rdi,rax
  415c8a:	call   40a52c <_start@@Base+0x429c>
  415c8f:	mov    QWORD PTR [rbp-0x30],rax
  415c93:	jmp    416014 <_start@@Base+0xfd84>
  415c98:	mov    rax,QWORD PTR [rbp-0x18]
  415c9c:	jmp    416018 <_start@@Base+0xfd88>
  415ca1:	mov    rax,QWORD PTR [rbp-0x18]
  415ca5:	jmp    416018 <_start@@Base+0xfd88>
  415caa:	movabs rax,0xffffff0000000000
  415cb4:	and    rax,QWORD PTR [rbp-0x10]
  415cb8:	mov    rdx,rax
  415cbb:	movabs rax,0x466f6f0000000000
  415cc5:	cmp    rdx,rax
  415cc8:	jne    415d31 <_start@@Base+0xfaa1>
  415cca:	mov    rax,QWORD PTR [rbp-0x30]
  415cce:	mov    QWORD PTR [rbp-0x8],rax
  415cd2:	mov    rdx,QWORD PTR [rbp-0x38]
  415cd6:	mov    rsi,QWORD PTR [rbp-0x8]
  415cda:	mov    rax,QWORD PTR [rbp-0x28]
  415cde:	mov    ecx,0x3
  415ce3:	mov    rdi,rax
  415ce6:	call   4068ba <_start@@Base+0x62a>
  415ceb:	mov    QWORD PTR [rbp-0x30],rax
  415cef:	mov    rax,QWORD PTR [rbp-0x30]
  415cf3:	cmp    rax,QWORD PTR [rbp-0x8]
  415cf7:	je     415d28 <_start@@Base+0xfa98>
  415cf9:	mov    r8,QWORD PTR [rbp-0x50]
  415cfd:	mov    rdi,QWORD PTR [rbp-0x48]
  415d01:	mov    rcx,QWORD PTR [rbp-0x40]
  415d05:	mov    rdx,QWORD PTR [rbp-0x38]
  415d09:	mov    rsi,QWORD PTR [rbp-0x30]
  415d0d:	mov    rax,QWORD PTR [rbp-0x28]
  415d11:	mov    r9,r8
  415d14:	mov    r8,rdi
  415d17:	mov    rdi,rax
  415d1a:	call   409a03 <_start@@Base+0x3773>
  415d1f:	mov    QWORD PTR [rbp-0x30],rax
  415d23:	jmp    416014 <_start@@Base+0xfd84>
  415d28:	mov    rax,QWORD PTR [rbp-0x18]
  415d2c:	jmp    416018 <_start@@Base+0xfd88>
  415d31:	mov    rax,QWORD PTR [rbp-0x10]
  415d35:	and    rax,0xffffffffff000000
  415d3b:	mov    rdx,rax
  415d3e:	movabs rax,0x436f6c6f72000000
  415d48:	cmp    rdx,rax
  415d4b:	jne    415db4 <_start@@Base+0xfb24>
  415d4d:	mov    rax,QWORD PTR [rbp-0x30]
  415d51:	mov    QWORD PTR [rbp-0x8],rax
  415d55:	mov    rdx,QWORD PTR [rbp-0x38]
  415d59:	mov    rsi,QWORD PTR [rbp-0x8]
  415d5d:	mov    rax,QWORD PTR [rbp-0x28]
  415d61:	mov    ecx,0x5
  415d66:	mov    rdi,rax
  415d69:	call   4068ba <_start@@Base+0x62a>
  415d6e:	mov    QWORD PTR [rbp-0x30],rax
  415d72:	mov    rax,QWORD PTR [rbp-0x30]
  415d76:	cmp    rax,QWORD PTR [rbp-0x8]
  415d7a:	je     415dab <_start@@Base+0xfb1b>
  415d7c:	mov    r8,QWORD PTR [rbp-0x50]
  415d80:	mov    rdi,QWORD PTR [rbp-0x48]
  415d84:	mov    rcx,QWORD PTR [rbp-0x40]
  415d88:	mov    rdx,QWORD PTR [rbp-0x38]
  415d8c:	mov    rsi,QWORD PTR [rbp-0x30]
  415d90:	mov    rax,QWORD PTR [rbp-0x28]
  415d94:	mov    r9,r8
  415d97:	mov    r8,rdi
  415d9a:	mov    rdi,rax
  415d9d:	call   40a190 <_start@@Base+0x3f00>
  415da2:	mov    QWORD PTR [rbp-0x30],rax
  415da6:	jmp    416014 <_start@@Base+0xfd84>
  415dab:	mov    rax,QWORD PTR [rbp-0x18]
  415daf:	jmp    416018 <_start@@Base+0xfd88>
  415db4:	mov    rax,QWORD PTR [rbp-0x18]
  415db8:	jmp    416018 <_start@@Base+0xfd88>
  415dbd:	movabs rax,0x696e745f656e756c
  415dc7:	cmp    QWORD PTR [rbp-0x10],rax
  415dcb:	ja     415e51 <_start@@Base+0xfbc1>
  415dd1:	movabs rax,0x6865785f656e756d
  415ddb:	cmp    QWORD PTR [rbp-0x10],rax
  415ddf:	jne    415e48 <_start@@Base+0xfbb8>
  415de1:	mov    rax,QWORD PTR [rbp-0x30]
  415de5:	mov    QWORD PTR [rbp-0x8],rax
  415de9:	mov    rdx,QWORD PTR [rbp-0x38]
  415ded:	mov    rsi,QWORD PTR [rbp-0x8]
  415df1:	mov    rax,QWORD PTR [rbp-0x28]
  415df5:	mov    ecx,0x8
  415dfa:	mov    rdi,rax
  415dfd:	call   4068ba <_start@@Base+0x62a>
  415e02:	mov    QWORD PTR [rbp-0x30],rax
  415e06:	mov    rax,QWORD PTR [rbp-0x30]
  415e0a:	cmp    rax,QWORD PTR [rbp-0x8]
  415e0e:	je     415e3f <_start@@Base+0xfbaf>
  415e10:	mov    r8,QWORD PTR [rbp-0x50]
  415e14:	mov    rdi,QWORD PTR [rbp-0x48]
  415e18:	mov    rcx,QWORD PTR [rbp-0x40]
  415e1c:	mov    rdx,QWORD PTR [rbp-0x38]
  415e20:	mov    rsi,QWORD PTR [rbp-0x30]
  415e24:	mov    rax,QWORD PTR [rbp-0x28]
  415e28:	mov    r9,r8
  415e2b:	mov    r8,rdi
  415e2e:	mov    rdi,rax
  415e31:	call   409fcb <_start@@Base+0x3d3b>
  415e36:	mov    QWORD PTR [rbp-0x30],rax
  415e3a:	jmp    416014 <_start@@Base+0xfd84>
  415e3f:	mov    rax,QWORD PTR [rbp-0x18]
  415e43:	jmp    416018 <_start@@Base+0xfd88>
  415e48:	mov    rax,QWORD PTR [rbp-0x18]
  415e4c:	jmp    416018 <_start@@Base+0xfd88>
  415e51:	movabs rax,0x6e65675f656e756c
  415e5b:	cmp    QWORD PTR [rbp-0x10],rax
  415e5f:	ja     415ee5 <_start@@Base+0xfc55>
  415e65:	movabs rax,0x696e745f656e756d
  415e6f:	cmp    QWORD PTR [rbp-0x10],rax
  415e73:	jne    415edc <_start@@Base+0xfc4c>
  415e75:	mov    rax,QWORD PTR [rbp-0x30]
  415e79:	mov    QWORD PTR [rbp-0x8],rax
  415e7d:	mov    rdx,QWORD PTR [rbp-0x38]
  415e81:	mov    rsi,QWORD PTR [rbp-0x8]
  415e85:	mov    rax,QWORD PTR [rbp-0x28]
  415e89:	mov    ecx,0x8
  415e8e:	mov    rdi,rax
  415e91:	call   4068ba <_start@@Base+0x62a>
  415e96:	mov    QWORD PTR [rbp-0x30],rax
  415e9a:	mov    rax,QWORD PTR [rbp-0x30]
  415e9e:	cmp    rax,QWORD PTR [rbp-0x8]
  415ea2:	je     415ed3 <_start@@Base+0xfc43>
  415ea4:	mov    r8,QWORD PTR [rbp-0x50]
  415ea8:	mov    rdi,QWORD PTR [rbp-0x48]
  415eac:	mov    rcx,QWORD PTR [rbp-0x40]
  415eb0:	mov    rdx,QWORD PTR [rbp-0x38]
  415eb4:	mov    rsi,QWORD PTR [rbp-0x30]
  415eb8:	mov    rax,QWORD PTR [rbp-0x28]
  415ebc:	mov    r9,r8
  415ebf:	mov    r8,rdi
  415ec2:	mov    rdi,rax
  415ec5:	call   409d78 <_start@@Base+0x3ae8>
  415eca:	mov    QWORD PTR [rbp-0x30],rax
  415ece:	jmp    416014 <_start@@Base+0xfd84>
  415ed3:	mov    rax,QWORD PTR [rbp-0x18]
  415ed7:	jmp    416018 <_start@@Base+0xfd88>
  415edc:	mov    rax,QWORD PTR [rbp-0x18]
  415ee0:	jmp    416018 <_start@@Base+0xfd88>
  415ee5:	movabs rax,0x6e65675f656e756d
  415eef:	cmp    QWORD PTR [rbp-0x10],rax
  415ef3:	jne    415f53 <_start@@Base+0xfcc3>
  415ef5:	mov    rax,QWORD PTR [rbp-0x30]
  415ef9:	mov    QWORD PTR [rbp-0x8],rax
  415efd:	mov    rdx,QWORD PTR [rbp-0x38]
  415f01:	mov    rsi,QWORD PTR [rbp-0x8]
  415f05:	mov    rax,QWORD PTR [rbp-0x28]
  415f09:	mov    ecx,0x8
  415f0e:	mov    rdi,rax
  415f11:	call   4068ba <_start@@Base+0x62a>
  415f16:	mov    QWORD PTR [rbp-0x30],rax
  415f1a:	mov    rax,QWORD PTR [rbp-0x30]
  415f1e:	cmp    rax,QWORD PTR [rbp-0x8]
  415f22:	je     415f56 <_start@@Base+0xfcc6>
  415f24:	mov    r8,QWORD PTR [rbp-0x50]
  415f28:	mov    rdi,QWORD PTR [rbp-0x48]
  415f2c:	mov    rcx,QWORD PTR [rbp-0x40]
  415f30:	mov    rdx,QWORD PTR [rbp-0x38]
  415f34:	mov    rsi,QWORD PTR [rbp-0x30]
  415f38:	mov    rax,QWORD PTR [rbp-0x28]
  415f3c:	mov    r9,r8
  415f3f:	mov    r8,rdi
  415f42:	mov    rdi,rax
  415f45:	call   409bad <_start@@Base+0x391d>
  415f4a:	mov    QWORD PTR [rbp-0x30],rax
  415f4e:	jmp    416014 <_start@@Base+0xfd84>
  415f53:	nop
  415f54:	jmp    415f57 <_start@@Base+0xfcc7>
  415f56:	nop
  415f57:	movabs rax,0x6e6f74656d707479
  415f61:	cmp    QWORD PTR [rbp-0x10],rax
  415f65:	jne    41600e <_start@@Base+0xfd7e>
  415f6b:	add    QWORD PTR [rbp-0x30],0x8
  415f70:	mov    rdx,QWORD PTR [rbp-0x38]
  415f74:	mov    rax,QWORD PTR [rbp-0x30]
  415f78:	mov    rsi,rdx
  415f7b:	mov    rdi,rax
  415f7e:	call   406876 <_start@@Base+0x5e6>
  415f83:	mov    QWORD PTR [rbp-0x10],rax
  415f87:	movabs rax,0xffffffff00000000
  415f91:	and    rax,QWORD PTR [rbp-0x10]
  415f95:	mov    rdx,rax
  415f98:	movabs rax,0x656e756d00000000
  415fa2:	cmp    rdx,rax
  415fa5:	jne    416008 <_start@@Base+0xfd78>
  415fa7:	mov    rax,QWORD PTR [rbp-0x30]
  415fab:	mov    QWORD PTR [rbp-0x8],rax
  415faf:	mov    rdx,QWORD PTR [rbp-0x38]
  415fb3:	mov    rsi,QWORD PTR [rbp-0x8]
  415fb7:	mov    rax,QWORD PTR [rbp-0x28]
  415fbb:	mov    ecx,0x4
  415fc0:	mov    rdi,rax
  415fc3:	call   4068ba <_start@@Base+0x62a>
  415fc8:	mov    QWORD PTR [rbp-0x30],rax
  415fcc:	mov    rax,QWORD PTR [rbp-0x30]
  415fd0:	cmp    rax,QWORD PTR [rbp-0x8]
  415fd4:	je     416002 <_start@@Base+0xfd72>
  415fd6:	mov    r8,QWORD PTR [rbp-0x50]
  415fda:	mov    rdi,QWORD PTR [rbp-0x48]
  415fde:	mov    rcx,QWORD PTR [rbp-0x40]
  415fe2:	mov    rdx,QWORD PTR [rbp-0x38]
  415fe6:	mov    rsi,QWORD PTR [rbp-0x30]
  415fea:	mov    rax,QWORD PTR [rbp-0x28]
  415fee:	mov    r9,r8
  415ff1:	mov    r8,rdi
  415ff4:	mov    rdi,rax
  415ff7:	call   40b093 <_start@@Base+0x4e03>
  415ffc:	mov    QWORD PTR [rbp-0x30],rax
  416000:	jmp    416014 <_start@@Base+0xfd84>
  416002:	mov    rax,QWORD PTR [rbp-0x18]
  416006:	jmp    416018 <_start@@Base+0xfd88>
  416008:	mov    rax,QWORD PTR [rbp-0x18]
  41600c:	jmp    416018 <_start@@Base+0xfd88>
  41600e:	mov    rax,QWORD PTR [rbp-0x18]
  416012:	jmp    416018 <_start@@Base+0xfd88>
  416014:	mov    rax,QWORD PTR [rbp-0x30]
  416018:	leave  
  416019:	ret    
  41601a:	endbr64 
  41601e:	push   rbp
  41601f:	mov    rbp,rsp
  416022:	mov    QWORD PTR [rbp-0x8],rdi
  416026:	mov    QWORD PTR [rbp-0x10],rsi
  41602a:	mov    QWORD PTR [rbp-0x18],rdx
  41602e:	mov    QWORD PTR [rbp-0x20],rcx
  416032:	mov    QWORD PTR [rbp-0x28],r8
  416036:	mov    QWORD PTR [rbp-0x30],r9
  41603a:	mov    rax,QWORD PTR [rbp-0x10]
  41603e:	pop    rbp
  41603f:	ret    
  416040:	endbr64 
  416044:	push   rbp
  416045:	mov    rbp,rsp
  416048:	mov    QWORD PTR [rbp-0x8],rdi
  41604c:	mov    QWORD PTR [rbp-0x10],rsi
  416050:	mov    QWORD PTR [rbp-0x18],rdx
  416054:	mov    QWORD PTR [rbp-0x20],rcx
  416058:	mov    QWORD PTR [rbp-0x28],r8
  41605c:	mov    QWORD PTR [rbp-0x30],r9
  416060:	mov    rax,QWORD PTR [rbp-0x10]
  416064:	pop    rbp
  416065:	ret    
  416066:	endbr64 
  41606a:	push   rbp
  41606b:	mov    rbp,rsp
  41606e:	sub    rsp,0x50
  416072:	mov    QWORD PTR [rbp-0x28],rdi
  416076:	mov    QWORD PTR [rbp-0x30],rsi
  41607a:	mov    QWORD PTR [rbp-0x38],rdx
  41607e:	mov    QWORD PTR [rbp-0x40],rcx
  416082:	mov    QWORD PTR [rbp-0x48],r8
  416086:	mov    QWORD PTR [rbp-0x50],r9
  41608a:	mov    rax,QWORD PTR [rbp-0x30]
  41608e:	mov    QWORD PTR [rbp-0x18],rax
  416092:	mov    rdx,QWORD PTR [rbp-0x38]
  416096:	mov    rax,QWORD PTR [rbp-0x30]
  41609a:	mov    rsi,rdx
  41609d:	mov    rdi,rax
  4160a0:	call   406876 <_start@@Base+0x5e6>
  4160a5:	mov    QWORD PTR [rbp-0x10],rax
  4160a9:	movabs rax,0x4368617261637465
  4160b3:	cmp    QWORD PTR [rbp-0x10],rax
  4160b7:	jne    416164 <_start@@Base+0xfed4>
  4160bd:	add    QWORD PTR [rbp-0x30],0x8
  4160c2:	mov    rdx,QWORD PTR [rbp-0x38]
  4160c6:	mov    rax,QWORD PTR [rbp-0x30]
  4160ca:	mov    rsi,rdx
  4160cd:	mov    rdi,rax
  4160d0:	call   406876 <_start@@Base+0x5e6>
  4160d5:	mov    QWORD PTR [rbp-0x10],rax
  4160d9:	movabs rax,0xff00000000000000
  4160e3:	and    rax,QWORD PTR [rbp-0x10]
  4160e7:	mov    rdx,rax
  4160ea:	movabs rax,0x7200000000000000
  4160f4:	cmp    rdx,rax
  4160f7:	jne    41615e <_start@@Base+0xfece>
  4160f9:	mov    rax,QWORD PTR [rbp-0x30]
  4160fd:	mov    QWORD PTR [rbp-0x8],rax
  416101:	mov    rdx,QWORD PTR [rbp-0x38]
  416105:	mov    rsi,QWORD PTR [rbp-0x8]
  416109:	mov    rax,QWORD PTR [rbp-0x28]
  41610d:	mov    ecx,0x1
  416112:	mov    rdi,rax
  416115:	call   4068ba <_start@@Base+0x62a>
  41611a:	mov    QWORD PTR [rbp-0x30],rax
  41611e:	mov    rax,QWORD PTR [rbp-0x30]
  416122:	cmp    rax,QWORD PTR [rbp-0x8]
  416126:	je     416158 <_start@@Base+0xfec8>
  416128:	mov    r8,QWORD PTR [rbp-0x50]
  41612c:	mov    rdi,QWORD PTR [rbp-0x48]
  416130:	mov    rcx,QWORD PTR [rbp-0x40]
  416134:	mov    rdx,QWORD PTR [rbp-0x38]
  416138:	mov    rsi,QWORD PTR [rbp-0x30]
  41613c:	mov    rax,QWORD PTR [rbp-0x28]
  416140:	mov    r9,r8
  416143:	mov    r8,rdi
  416146:	mov    rdi,rax
  416149:	call   414ceb <_start@@Base+0xea5b>
  41614e:	mov    QWORD PTR [rbp-0x30],rax
  416152:	mov    rax,QWORD PTR [rbp-0x30]
  416156:	jmp    416168 <_start@@Base+0xfed8>
  416158:	mov    rax,QWORD PTR [rbp-0x18]
  41615c:	jmp    416168 <_start@@Base+0xfed8>
  41615e:	mov    rax,QWORD PTR [rbp-0x18]
  416162:	jmp    416168 <_start@@Base+0xfed8>
  416164:	mov    rax,QWORD PTR [rbp-0x18]
  416168:	leave  
  416169:	ret    
  41616a:	endbr64 
  41616e:	push   rbp
  41616f:	mov    rbp,rsp
  416172:	sub    rsp,0x50
  416176:	mov    QWORD PTR [rbp-0x28],rdi
  41617a:	mov    QWORD PTR [rbp-0x30],rsi
  41617e:	mov    QWORD PTR [rbp-0x38],rdx
  416182:	mov    QWORD PTR [rbp-0x40],rcx
  416186:	mov    QWORD PTR [rbp-0x48],r8
  41618a:	mov    QWORD PTR [rbp-0x50],r9
  41618e:	mov    rax,QWORD PTR [rbp-0x30]
  416192:	mov    QWORD PTR [rbp-0x18],rax
  416196:	mov    rdx,QWORD PTR [rbp-0x38]
  41619a:	mov    rax,QWORD PTR [rbp-0x30]
  41619e:	mov    rsi,rdx
  4161a1:	mov    rdi,rax
  4161a4:	call   406876 <_start@@Base+0x5e6>
  4161a9:	mov    QWORD PTR [rbp-0x10],rax
  4161ad:	movabs rax,0x46726f6d496e636c
  4161b7:	cmp    QWORD PTR [rbp-0x10],rax
  4161bb:	jne    416268 <_start@@Base+0xffd8>
  4161c1:	add    QWORD PTR [rbp-0x30],0x8
  4161c6:	mov    rdx,QWORD PTR [rbp-0x38]
  4161ca:	mov    rax,QWORD PTR [rbp-0x30]
  4161ce:	mov    rsi,rdx
  4161d1:	mov    rdi,rax
  4161d4:	call   406876 <_start@@Base+0x5e6>
  4161d9:	mov    QWORD PTR [rbp-0x10],rax
  4161dd:	movabs rax,0xffffff0000000000
  4161e7:	and    rax,QWORD PTR [rbp-0x10]
  4161eb:	mov    rdx,rax
  4161ee:	movabs rax,0x7564650000000000
  4161f8:	cmp    rdx,rax
  4161fb:	jne    416262 <_start@@Base+0xffd2>
  4161fd:	mov    rax,QWORD PTR [rbp-0x30]
  416201:	mov    QWORD PTR [rbp-0x8],rax
  416205:	mov    rdx,QWORD PTR [rbp-0x38]
  416209:	mov    rsi,QWORD PTR [rbp-0x8]
  41620d:	mov    rax,QWORD PTR [rbp-0x28]
  416211:	mov    ecx,0x3
  416216:	mov    rdi,rax
  416219:	call   4068ba <_start@@Base+0x62a>
  41621e:	mov    QWORD PTR [rbp-0x30],rax
  416222:	mov    rax,QWORD PTR [rbp-0x30]
  416226:	cmp    rax,QWORD PTR [rbp-0x8]
  41622a:	je     41625c <_start@@Base+0xffcc>
  41622c:	mov    r8,QWORD PTR [rbp-0x50]
  416230:	mov    rdi,QWORD PTR [rbp-0x48]
  416234:	mov    rcx,QWORD PTR [rbp-0x40]
  416238:	mov    rdx,QWORD PTR [rbp-0x38]
  41623c:	mov    rsi,QWORD PTR [rbp-0x30]
  416240:	mov    rax,QWORD PTR [rbp-0x28]
  416244:	mov    r9,r8
  416247:	mov    r8,rdi
  41624a:	mov    rdi,rax
  41624d:	call   408a8b <_start@@Base+0x27fb>
  416252:	mov    QWORD PTR [rbp-0x30],rax
  416256:	mov    rax,QWORD PTR [rbp-0x30]
  41625a:	jmp    41626c <_start@@Base+0xffdc>
  41625c:	mov    rax,QWORD PTR [rbp-0x18]
  416260:	jmp    41626c <_start@@Base+0xffdc>
  416262:	mov    rax,QWORD PTR [rbp-0x18]
  416266:	jmp    41626c <_start@@Base+0xffdc>
  416268:	mov    rax,QWORD PTR [rbp-0x18]
  41626c:	leave  
  41626d:	ret    
  41626e:	endbr64 
  416272:	push   rbp
  416273:	mov    rbp,rsp
  416276:	sub    rsp,0x50
  41627a:	mov    QWORD PTR [rbp-0x28],rdi
  41627e:	mov    QWORD PTR [rbp-0x30],rsi
  416282:	mov    QWORD PTR [rbp-0x38],rdx
  416286:	mov    QWORD PTR [rbp-0x40],rcx
  41628a:	mov    QWORD PTR [rbp-0x48],r8
  41628e:	mov    QWORD PTR [rbp-0x50],r9
  416292:	mov    rax,QWORD PTR [rbp-0x30]
  416296:	mov    QWORD PTR [rbp-0x18],rax
  41629a:	mov    rdx,QWORD PTR [rbp-0x38]
  41629e:	mov    rax,QWORD PTR [rbp-0x30]
  4162a2:	mov    rsi,rdx
  4162a5:	mov    rdi,rax
  4162a8:	call   406876 <_start@@Base+0x5e6>
  4162ad:	mov    QWORD PTR [rbp-0x10],rax
  4162b1:	movabs rax,0x4d7947616d652e44
  4162bb:	cmp    QWORD PTR [rbp-0x10],rax
  4162bf:	ja     4163c7 <_start@@Base+0x10137>
  4162c5:	movabs rax,0x46616e746173792e
  4162cf:	cmp    QWORD PTR [rbp-0x10],rax
  4162d3:	jne    4163be <_start@@Base+0x1012e>
  4162d9:	add    QWORD PTR [rbp-0x30],0x8
  4162de:	mov    rdx,QWORD PTR [rbp-0x38]
  4162e2:	mov    rax,QWORD PTR [rbp-0x30]
  4162e6:	mov    rsi,rdx
  4162e9:	mov    rdi,rax
  4162ec:	call   406876 <_start@@Base+0x5e6>
  4162f1:	mov    QWORD PTR [rbp-0x10],rax
  4162f5:	movabs rax,0x4368617261637465
  4162ff:	cmp    QWORD PTR [rbp-0x10],rax
  416303:	jne    4163b5 <_start@@Base+0x10125>
  416309:	add    QWORD PTR [rbp-0x30],0x8
  41630e:	mov    rdx,QWORD PTR [rbp-0x38]
  416312:	mov    rax,QWORD PTR [rbp-0x30]
  416316:	mov    rsi,rdx
  416319:	mov    rdi,rax
  41631c:	call   406876 <_start@@Base+0x5e6>
  416321:	mov    QWORD PTR [rbp-0x10],rax
  416325:	movabs rax,0xff00000000000000
  41632f:	and    rax,QWORD PTR [rbp-0x10]
  416333:	mov    rdx,rax
  416336:	movabs rax,0x7200000000000000
  416340:	cmp    rdx,rax
  416343:	jne    4163ac <_start@@Base+0x1011c>
  416345:	mov    rax,QWORD PTR [rbp-0x30]
  416349:	mov    QWORD PTR [rbp-0x8],rax
  41634d:	mov    rdx,QWORD PTR [rbp-0x38]
  416351:	mov    rsi,QWORD PTR [rbp-0x8]
  416355:	mov    rax,QWORD PTR [rbp-0x28]
  416359:	mov    ecx,0x1
  41635e:	mov    rdi,rax
  416361:	call   4068ba <_start@@Base+0x62a>
  416366:	mov    QWORD PTR [rbp-0x30],rax
  41636a:	mov    rax,QWORD PTR [rbp-0x30]
  41636e:	cmp    rax,QWORD PTR [rbp-0x8]
  416372:	je     4163a3 <_start@@Base+0x10113>
  416374:	mov    r8,QWORD PTR [rbp-0x50]
  416378:	mov    rdi,QWORD PTR [rbp-0x48]
  41637c:	mov    rcx,QWORD PTR [rbp-0x40]
  416380:	mov    rdx,QWORD PTR [rbp-0x38]
  416384:	mov    rsi,QWORD PTR [rbp-0x30]
  416388:	mov    rax,QWORD PTR [rbp-0x28]
  41638c:	mov    r9,r8
  41638f:	mov    r8,rdi
  416392:	mov    rdi,rax
  416395:	call   414ceb <_start@@Base+0xea5b>
  41639a:	mov    QWORD PTR [rbp-0x30],rax
  41639e:	jmp    416af6 <_start@@Base+0x10866>
  4163a3:	mov    rax,QWORD PTR [rbp-0x18]
  4163a7:	jmp    416afa <_start@@Base+0x1086a>
  4163ac:	mov    rax,QWORD PTR [rbp-0x18]
  4163b0:	jmp    416afa <_start@@Base+0x1086a>
  4163b5:	mov    rax,QWORD PTR [rbp-0x18]
  4163b9:	jmp    416afa <_start@@Base+0x1086a>
  4163be:	mov    rax,QWORD PTR [rbp-0x18]
  4163c2:	jmp    416afa <_start@@Base+0x1086a>
  4163c7:	movabs rax,0x4d7947616d652e45
  4163d1:	cmp    QWORD PTR [rbp-0x10],rax
  4163d5:	jne    416997 <_start@@Base+0x10707>
  4163db:	add    QWORD PTR [rbp-0x30],0x8
  4163e0:	mov    rdx,QWORD PTR [rbp-0x38]
  4163e4:	mov    rax,QWORD PTR [rbp-0x30]
  4163e8:	mov    rsi,rdx
  4163eb:	mov    rdi,rax
  4163ee:	call   406876 <_start@@Base+0x5e6>
  4163f3:	mov    QWORD PTR [rbp-0x10],rax
  4163f7:	movabs rax,0x78616d706c652e67
  416401:	cmp    QWORD PTR [rbp-0x10],rax
  416405:	ja     416671 <_start@@Base+0x103e1>
  41640b:	movabs rax,0x78616d706c652e42
  416415:	cmp    QWORD PTR [rbp-0x10],rax
  416419:	ja     4164e8 <_start@@Base+0x10258>
  41641f:	movabs rax,0x78616d706c652e41
  416429:	cmp    QWORD PTR [rbp-0x10],rax
  41642d:	jne    4164df <_start@@Base+0x1024f>
  416433:	add    QWORD PTR [rbp-0x30],0x8
  416438:	mov    rdx,QWORD PTR [rbp-0x38]
  41643c:	mov    rax,QWORD PTR [rbp-0x30]
  416440:	mov    rsi,rdx
  416443:	mov    rdi,rax
  416446:	call   406876 <_start@@Base+0x5e6>
  41644b:	mov    QWORD PTR [rbp-0x10],rax
  41644f:	movabs rax,0xffff000000000000
  416459:	and    rax,QWORD PTR [rbp-0x10]
  41645d:	mov    rdx,rax
  416460:	movabs rax,0x6e79000000000000
  41646a:	cmp    rdx,rax
  41646d:	jne    4164d6 <_start@@Base+0x10246>
  41646f:	mov    rax,QWORD PTR [rbp-0x30]
  416473:	mov    QWORD PTR [rbp-0x8],rax
  416477:	mov    rdx,QWORD PTR [rbp-0x38]
  41647b:	mov    rsi,QWORD PTR [rbp-0x8]
  41647f:	mov    rax,QWORD PTR [rbp-0x28]
  416483:	mov    ecx,0x2
  416488:	mov    rdi,rax
  41648b:	call   4068ba <_start@@Base+0x62a>
  416490:	mov    QWORD PTR [rbp-0x30],rax
  416494:	mov    rax,QWORD PTR [rbp-0x30]
  416498:	cmp    rax,QWORD PTR [rbp-0x8]
  41649c:	je     4164cd <_start@@Base+0x1023d>
  41649e:	mov    r8,QWORD PTR [rbp-0x50]
  4164a2:	mov    rdi,QWORD PTR [rbp-0x48]
  4164a6:	mov    rcx,QWORD PTR [rbp-0x40]
  4164aa:	mov    rdx,QWORD PTR [rbp-0x38]
  4164ae:	mov    rsi,QWORD PTR [rbp-0x30]
  4164b2:	mov    rax,QWORD PTR [rbp-0x28]
  4164b6:	mov    r9,r8
  4164b9:	mov    r8,rdi
  4164bc:	mov    rdi,rax
  4164bf:	call   40a52c <_start@@Base+0x429c>
  4164c4:	mov    QWORD PTR [rbp-0x30],rax
  4164c8:	jmp    416af6 <_start@@Base+0x10866>
  4164cd:	mov    rax,QWORD PTR [rbp-0x18]
  4164d1:	jmp    416afa <_start@@Base+0x1086a>
  4164d6:	mov    rax,QWORD PTR [rbp-0x18]
  4164da:	jmp    416afa <_start@@Base+0x1086a>
  4164df:	mov    rax,QWORD PTR [rbp-0x18]
  4164e3:	jmp    416afa <_start@@Base+0x1086a>
  4164e8:	movabs rax,0x78616d706c652e43
  4164f2:	cmp    QWORD PTR [rbp-0x10],rax
  4164f6:	jne    4165a8 <_start@@Base+0x10318>
  4164fc:	add    QWORD PTR [rbp-0x30],0x8
  416501:	mov    rdx,QWORD PTR [rbp-0x38]
  416505:	mov    rax,QWORD PTR [rbp-0x30]
  416509:	mov    rsi,rdx
  41650c:	mov    rdi,rax
  41650f:	call   406876 <_start@@Base+0x5e6>
  416514:	mov    QWORD PTR [rbp-0x10],rax
  416518:	movabs rax,0xffffffff00000000
  416522:	and    rax,QWORD PTR [rbp-0x10]
  416526:	mov    rdx,rax
  416529:	movabs rax,0x6f6c6f7200000000
  416533:	cmp    rdx,rax
  416536:	jne    41659f <_start@@Base+0x1030f>
  416538:	mov    rax,QWORD PTR [rbp-0x30]
  41653c:	mov    QWORD PTR [rbp-0x8],rax
  416540:	mov    rdx,QWORD PTR [rbp-0x38]
  416544:	mov    rsi,QWORD PTR [rbp-0x8]
  416548:	mov    rax,QWORD PTR [rbp-0x28]
  41654c:	mov    ecx,0x4
  416551:	mov    rdi,rax
  416554:	call   4068ba <_start@@Base+0x62a>
  416559:	mov    QWORD PTR [rbp-0x30],rax
  41655d:	mov    rax,QWORD PTR [rbp-0x30]
  416561:	cmp    rax,QWORD PTR [rbp-0x8]
  416565:	je     416596 <_start@@Base+0x10306>
  416567:	mov    r8,QWORD PTR [rbp-0x50]
  41656b:	mov    rdi,QWORD PTR [rbp-0x48]
  41656f:	mov    rcx,QWORD PTR [rbp-0x40]
  416573:	mov    rdx,QWORD PTR [rbp-0x38]
  416577:	mov    rsi,QWORD PTR [rbp-0x30]
  41657b:	mov    rax,QWORD PTR [rbp-0x28]
  41657f:	mov    r9,r8
  416582:	mov    r8,rdi
  416585:	mov    rdi,rax
  416588:	call   40a190 <_start@@Base+0x3f00>
  41658d:	mov    QWORD PTR [rbp-0x30],rax
  416591:	jmp    416af6 <_start@@Base+0x10866>
  416596:	mov    rax,QWORD PTR [rbp-0x18]
  41659a:	jmp    416afa <_start@@Base+0x1086a>
  41659f:	mov    rax,QWORD PTR [rbp-0x18]
  4165a3:	jmp    416afa <_start@@Base+0x1086a>
  4165a8:	movabs rax,0x78616d706c652e46
  4165b2:	cmp    QWORD PTR [rbp-0x10],rax
  4165b6:	jne    416668 <_start@@Base+0x103d8>
  4165bc:	add    QWORD PTR [rbp-0x30],0x8
  4165c1:	mov    rdx,QWORD PTR [rbp-0x38]
  4165c5:	mov    rax,QWORD PTR [rbp-0x30]
  4165c9:	mov    rsi,rdx
  4165cc:	mov    rdi,rax
  4165cf:	call   406876 <_start@@Base+0x5e6>
  4165d4:	mov    QWORD PTR [rbp-0x10],rax
  4165d8:	movabs rax,0xffff000000000000
  4165e2:	and    rax,QWORD PTR [rbp-0x10]
  4165e6:	mov    rdx,rax
  4165e9:	movabs rax,0x6f6f000000000000
  4165f3:	cmp    rdx,rax
  4165f6:	jne    41665f <_start@@Base+0x103cf>
  4165f8:	mov    rax,QWORD PTR [rbp-0x30]
  4165fc:	mov    QWORD PTR [rbp-0x8],rax
  416600:	mov    rdx,QWORD PTR [rbp-0x38]
  416604:	mov    rsi,QWORD PTR [rbp-0x8]
  416608:	mov    rax,QWORD PTR [rbp-0x28]
  41660c:	mov    ecx,0x2
  416611:	mov    rdi,rax
  416614:	call   4068ba <_start@@Base+0x62a>
  416619:	mov    QWORD PTR [rbp-0x30],rax
  41661d:	mov    rax,QWORD PTR [rbp-0x30]
  416621:	cmp    rax,QWORD PTR [rbp-0x8]
  416625:	je     416656 <_start@@Base+0x103c6>
  416627:	mov    r8,QWORD PTR [rbp-0x50]
  41662b:	mov    rdi,QWORD PTR [rbp-0x48]
  41662f:	mov    rcx,QWORD PTR [rbp-0x40]
  416633:	mov    rdx,QWORD PTR [rbp-0x38]
  416637:	mov    rsi,QWORD PTR [rbp-0x30]
  41663b:	mov    rax,QWORD PTR [rbp-0x28]
  41663f:	mov    r9,r8
  416642:	mov    r8,rdi
  416645:	mov    rdi,rax
  416648:	call   409a03 <_start@@Base+0x3773>
  41664d:	mov    QWORD PTR [rbp-0x30],rax
  416651:	jmp    416af6 <_start@@Base+0x10866>
  416656:	mov    rax,QWORD PTR [rbp-0x18]
  41665a:	jmp    416afa <_start@@Base+0x1086a>
  41665f:	mov    rax,QWORD PTR [rbp-0x18]
  416663:	jmp    416afa <_start@@Base+0x1086a>
  416668:	mov    rax,QWORD PTR [rbp-0x18]
  41666c:	jmp    416afa <_start@@Base+0x1086a>
  416671:	movabs rax,0x78616d706c652e68
  41667b:	cmp    QWORD PTR [rbp-0x10],rax
  41667f:	ja     416746 <_start@@Base+0x104b6>
  416685:	movabs rax,0x78616d706c652e68
  41668f:	cmp    QWORD PTR [rbp-0x10],rax
  416693:	jne    41673d <_start@@Base+0x104ad>
  416699:	add    QWORD PTR [rbp-0x30],0x8
  41669e:	mov    rdx,QWORD PTR [rbp-0x38]
  4166a2:	mov    rax,QWORD PTR [rbp-0x30]
  4166a6:	mov    rsi,rdx
  4166a9:	mov    rdi,rax
  4166ac:	call   406876 <_start@@Base+0x5e6>
  4166b1:	mov    QWORD PTR [rbp-0x10],rax
  4166b5:	mov    rax,QWORD PTR [rbp-0x10]
  4166b9:	mov    al,0x0
  4166bb:	mov    rdx,rax
  4166be:	movabs rax,0x65785f656e756d00
  4166c8:	cmp    rdx,rax
  4166cb:	jne    416734 <_start@@Base+0x104a4>
  4166cd:	mov    rax,QWORD PTR [rbp-0x30]
  4166d1:	mov    QWORD PTR [rbp-0x8],rax
  4166d5:	mov    rdx,QWORD PTR [rbp-0x38]
  4166d9:	mov    rsi,QWORD PTR [rbp-0x8]
  4166dd:	mov    rax,QWORD PTR [rbp-0x28]
  4166e1:	mov    ecx,0x7
  4166e6:	mov    rdi,rax
  4166e9:	call   4068ba <_start@@Base+0x62a>
  4166ee:	mov    QWORD PTR [rbp-0x30],rax
  4166f2:	mov    rax,QWORD PTR [rbp-0x30]
  4166f6:	cmp    rax,QWORD PTR [rbp-0x8]
  4166fa:	je     41672b <_start@@Base+0x1049b>
  4166fc:	mov    r8,QWORD PTR [rbp-0x50]
  416700:	mov    rdi,QWORD PTR [rbp-0x48]
  416704:	mov    rcx,QWORD PTR [rbp-0x40]
  416708:	mov    rdx,QWORD PTR [rbp-0x38]
  41670c:	mov    rsi,QWORD PTR [rbp-0x30]
  416710:	mov    rax,QWORD PTR [rbp-0x28]
  416714:	mov    r9,r8
  416717:	mov    r8,rdi
  41671a:	mov    rdi,rax
  41671d:	call   409fcb <_start@@Base+0x3d3b>
  416722:	mov    QWORD PTR [rbp-0x30],rax
  416726:	jmp    416af6 <_start@@Base+0x10866>
  41672b:	mov    rax,QWORD PTR [rbp-0x18]
  41672f:	jmp    416afa <_start@@Base+0x1086a>
  416734:	mov    rax,QWORD PTR [rbp-0x18]
  416738:	jmp    416afa <_start@@Base+0x1086a>
  41673d:	mov    rax,QWORD PTR [rbp-0x18]
  416741:	jmp    416afa <_start@@Base+0x1086a>
  416746:	movabs rax,0x78616d706c652e6d
  416750:	cmp    QWORD PTR [rbp-0x10],rax
  416754:	ja     41681b <_start@@Base+0x1058b>
  41675a:	movabs rax,0x78616d706c652e69
  416764:	cmp    QWORD PTR [rbp-0x10],rax
  416768:	jne    416812 <_start@@Base+0x10582>
  41676e:	add    QWORD PTR [rbp-0x30],0x8
  416773:	mov    rdx,QWORD PTR [rbp-0x38]
  416777:	mov    rax,QWORD PTR [rbp-0x30]
  41677b:	mov    rsi,rdx
  41677e:	mov    rdi,rax
  416781:	call   406876 <_start@@Base+0x5e6>
  416786:	mov    QWORD PTR [rbp-0x10],rax
  41678a:	mov    rax,QWORD PTR [rbp-0x10]
  41678e:	mov    al,0x0
  416790:	mov    rdx,rax
  416793:	movabs rax,0x6e745f656e756d00
  41679d:	cmp    rdx,rax
  4167a0:	jne    416809 <_start@@Base+0x10579>
  4167a2:	mov    rax,QWORD PTR [rbp-0x30]
  4167a6:	mov    QWORD PTR [rbp-0x8],rax
  4167aa:	mov    rdx,QWORD PTR [rbp-0x38]
  4167ae:	mov    rsi,QWORD PTR [rbp-0x8]
  4167b2:	mov    rax,QWORD PTR [rbp-0x28]
  4167b6:	mov    ecx,0x7
  4167bb:	mov    rdi,rax
  4167be:	call   4068ba <_start@@Base+0x62a>
  4167c3:	mov    QWORD PTR [rbp-0x30],rax
  4167c7:	mov    rax,QWORD PTR [rbp-0x30]
  4167cb:	cmp    rax,QWORD PTR [rbp-0x8]
  4167cf:	je     416800 <_start@@Base+0x10570>
  4167d1:	mov    r8,QWORD PTR [rbp-0x50]
  4167d5:	mov    rdi,QWORD PTR [rbp-0x48]
  4167d9:	mov    rcx,QWORD PTR [rbp-0x40]
  4167dd:	mov    rdx,QWORD PTR [rbp-0x38]
  4167e1:	mov    rsi,QWORD PTR [rbp-0x30]
  4167e5:	mov    rax,QWORD PTR [rbp-0x28]
  4167e9:	mov    r9,r8
  4167ec:	mov    r8,rdi
  4167ef:	mov    rdi,rax
  4167f2:	call   409d78 <_start@@Base+0x3ae8>
  4167f7:	mov    QWORD PTR [rbp-0x30],rax
  4167fb:	jmp    416af6 <_start@@Base+0x10866>
  416800:	mov    rax,QWORD PTR [rbp-0x18]
  416804:	jmp    416afa <_start@@Base+0x1086a>
  416809:	mov    rax,QWORD PTR [rbp-0x18]
  41680d:	jmp    416afa <_start@@Base+0x1086a>
  416812:	mov    rax,QWORD PTR [rbp-0x18]
  416816:	jmp    416afa <_start@@Base+0x1086a>
  41681b:	movabs rax,0x78616d706c652e6e
  416825:	cmp    QWORD PTR [rbp-0x10],rax
  416829:	jne    41698e <_start@@Base+0x106fe>
  41682f:	add    QWORD PTR [rbp-0x30],0x8
  416834:	mov    rdx,QWORD PTR [rbp-0x38]
  416838:	mov    rax,QWORD PTR [rbp-0x30]
  41683c:	mov    rsi,rdx
  41683f:	mov    rdi,rax
  416842:	call   406876 <_start@@Base+0x5e6>
  416847:	mov    QWORD PTR [rbp-0x10],rax
  41684b:	mov    rax,QWORD PTR [rbp-0x10]
  41684f:	mov    al,0x0
  416851:	mov    rdx,rax
  416854:	movabs rax,0x65675f656e756d00
  41685e:	cmp    rdx,rax
  416861:	jne    4168c1 <_start@@Base+0x10631>
  416863:	mov    rax,QWORD PTR [rbp-0x30]
  416867:	mov    QWORD PTR [rbp-0x8],rax
  41686b:	mov    rdx,QWORD PTR [rbp-0x38]
  41686f:	mov    rsi,QWORD PTR [rbp-0x8]
  416873:	mov    rax,QWORD PTR [rbp-0x28]
  416877:	mov    ecx,0x7
  41687c:	mov    rdi,rax
  41687f:	call   4068ba <_start@@Base+0x62a>
  416884:	mov    QWORD PTR [rbp-0x30],rax
  416888:	mov    rax,QWORD PTR [rbp-0x30]
  41688c:	cmp    rax,QWORD PTR [rbp-0x8]
  416890:	je     4168c4 <_start@@Base+0x10634>
  416892:	mov    r8,QWORD PTR [rbp-0x50]
  416896:	mov    rdi,QWORD PTR [rbp-0x48]
  41689a:	mov    rcx,QWORD PTR [rbp-0x40]
  41689e:	mov    rdx,QWORD PTR [rbp-0x38]
  4168a2:	mov    rsi,QWORD PTR [rbp-0x30]
  4168a6:	mov    rax,QWORD PTR [rbp-0x28]
  4168aa:	mov    r9,r8
  4168ad:	mov    r8,rdi
  4168b0:	mov    rdi,rax
  4168b3:	call   409bad <_start@@Base+0x391d>
  4168b8:	mov    QWORD PTR [rbp-0x30],rax
  4168bc:	jmp    416af6 <_start@@Base+0x10866>
  4168c1:	nop
  4168c2:	jmp    4168c5 <_start@@Base+0x10635>
  4168c4:	nop
  4168c5:	movabs rax,0x6f74656d70747965
  4168cf:	cmp    QWORD PTR [rbp-0x10],rax
  4168d3:	jne    416985 <_start@@Base+0x106f5>
  4168d9:	add    QWORD PTR [rbp-0x30],0x8
  4168de:	mov    rdx,QWORD PTR [rbp-0x38]
  4168e2:	mov    rax,QWORD PTR [rbp-0x30]
  4168e6:	mov    rsi,rdx
  4168e9:	mov    rdi,rax
  4168ec:	call   406876 <_start@@Base+0x5e6>
  4168f1:	mov    QWORD PTR [rbp-0x10],rax
  4168f5:	movabs rax,0xffffff0000000000
  4168ff:	and    rax,QWORD PTR [rbp-0x10]
  416903:	mov    rdx,rax
  416906:	movabs rax,0x6e756d0000000000
  416910:	cmp    rdx,rax
  416913:	jne    41697c <_start@@Base+0x106ec>
  416915:	mov    rax,QWORD PTR [rbp-0x30]
  416919:	mov    QWORD PTR [rbp-0x8],rax
  41691d:	mov    rdx,QWORD PTR [rbp-0x38]
  416921:	mov    rsi,QWORD PTR [rbp-0x8]
  416925:	mov    rax,QWORD PTR [rbp-0x28]
  416929:	mov    ecx,0x3
  41692e:	mov    rdi,rax
  416931:	call   4068ba <_start@@Base+0x62a>
  416936:	mov    QWORD PTR [rbp-0x30],rax
  41693a:	mov    rax,QWORD PTR [rbp-0x30]
  41693e:	cmp    rax,QWORD PTR [rbp-0x8]
  416942:	je     416973 <_start@@Base+0x106e3>
  416944:	mov    r8,QWORD PTR [rbp-0x50]
  416948:	mov    rdi,QWORD PTR [rbp-0x48]
  41694c:	mov    rcx,QWORD PTR [rbp-0x40]
  416950:	mov    rdx,QWORD PTR [rbp-0x38]
  416954:	mov    rsi,QWORD PTR [rbp-0x30]
  416958:	mov    rax,QWORD PTR [rbp-0x28]
  41695c:	mov    r9,r8
  41695f:	mov    r8,rdi
  416962:	mov    rdi,rax
  416965:	call   40b093 <_start@@Base+0x4e03>
  41696a:	mov    QWORD PTR [rbp-0x30],rax
  41696e:	jmp    416af6 <_start@@Base+0x10866>
  416973:	mov    rax,QWORD PTR [rbp-0x18]
  416977:	jmp    416afa <_start@@Base+0x1086a>
  41697c:	mov    rax,QWORD PTR [rbp-0x18]
  416980:	jmp    416afa <_start@@Base+0x1086a>
  416985:	mov    rax,QWORD PTR [rbp-0x18]
  416989:	jmp    416afa <_start@@Base+0x1086a>
  41698e:	mov    rax,QWORD PTR [rbp-0x18]
  416992:	jmp    416afa <_start@@Base+0x1086a>
  416997:	movabs rax,0x4d7947616d652e4f
  4169a1:	cmp    QWORD PTR [rbp-0x10],rax
  4169a5:	jne    416af0 <_start@@Base+0x10860>
  4169ab:	add    QWORD PTR [rbp-0x30],0x8
  4169b0:	mov    rdx,QWORD PTR [rbp-0x38]
  4169b4:	mov    rax,QWORD PTR [rbp-0x30]
  4169b8:	mov    rsi,rdx
  4169bb:	mov    rdi,rax
  4169be:	call   406876 <_start@@Base+0x5e6>
  4169c3:	mov    QWORD PTR [rbp-0x10],rax
  4169c7:	movabs rax,0x746865724e616d65
  4169d1:	cmp    QWORD PTR [rbp-0x10],rax
  4169d5:	jne    416aea <_start@@Base+0x1085a>
  4169db:	add    QWORD PTR [rbp-0x30],0x8
  4169e0:	mov    rdx,QWORD PTR [rbp-0x38]
  4169e4:	mov    rax,QWORD PTR [rbp-0x30]
  4169e8:	mov    rsi,rdx
  4169eb:	mov    rdi,rax
  4169ee:	call   406876 <_start@@Base+0x5e6>
  4169f3:	mov    QWORD PTR [rbp-0x10],rax
  4169f7:	movabs rax,0x53706163652e4672
  416a01:	cmp    QWORD PTR [rbp-0x10],rax
  416a05:	jne    416ae4 <_start@@Base+0x10854>
  416a0b:	add    QWORD PTR [rbp-0x30],0x8
  416a10:	mov    rdx,QWORD PTR [rbp-0x38]
  416a14:	mov    rax,QWORD PTR [rbp-0x30]
  416a18:	mov    rsi,rdx
  416a1b:	mov    rdi,rax
  416a1e:	call   406876 <_start@@Base+0x5e6>
  416a23:	mov    QWORD PTR [rbp-0x10],rax
  416a27:	movabs rax,0x6f6d496e636c7564
  416a31:	cmp    QWORD PTR [rbp-0x10],rax
  416a35:	jne    416ade <_start@@Base+0x1084e>
  416a3b:	add    QWORD PTR [rbp-0x30],0x8
  416a40:	mov    rdx,QWORD PTR [rbp-0x38]
  416a44:	mov    rax,QWORD PTR [rbp-0x30]
  416a48:	mov    rsi,rdx
  416a4b:	mov    rdi,rax
  416a4e:	call   406876 <_start@@Base+0x5e6>
  416a53:	mov    QWORD PTR [rbp-0x10],rax
  416a57:	movabs rax,0xff00000000000000
  416a61:	and    rax,QWORD PTR [rbp-0x10]
  416a65:	mov    rdx,rax
  416a68:	movabs rax,0x6500000000000000
  416a72:	cmp    rdx,rax
  416a75:	jne    416ad8 <_start@@Base+0x10848>
  416a77:	mov    rax,QWORD PTR [rbp-0x30]
  416a7b:	mov    QWORD PTR [rbp-0x8],rax
  416a7f:	mov    rdx,QWORD PTR [rbp-0x38]
  416a83:	mov    rsi,QWORD PTR [rbp-0x8]
  416a87:	mov    rax,QWORD PTR [rbp-0x28]
  416a8b:	mov    ecx,0x1
  416a90:	mov    rdi,rax
  416a93:	call   4068ba <_start@@Base+0x62a>
  416a98:	mov    QWORD PTR [rbp-0x30],rax
  416a9c:	mov    rax,QWORD PTR [rbp-0x30]
  416aa0:	cmp    rax,QWORD PTR [rbp-0x8]
  416aa4:	je     416ad2 <_start@@Base+0x10842>
  416aa6:	mov    r8,QWORD PTR [rbp-0x50]
  416aaa:	mov    rdi,QWORD PTR [rbp-0x48]
  416aae:	mov    rcx,QWORD PTR [rbp-0x40]
  416ab2:	mov    rdx,QWORD PTR [rbp-0x38]
  416ab6:	mov    rsi,QWORD PTR [rbp-0x30]
  416aba:	mov    rax,QWORD PTR [rbp-0x28]
  416abe:	mov    r9,r8
  416ac1:	mov    r8,rdi
  416ac4:	mov    rdi,rax
  416ac7:	call   408a8b <_start@@Base+0x27fb>
  416acc:	mov    QWORD PTR [rbp-0x30],rax
  416ad0:	jmp    416af6 <_start@@Base+0x10866>
  416ad2:	mov    rax,QWORD PTR [rbp-0x18]
  416ad6:	jmp    416afa <_start@@Base+0x1086a>
  416ad8:	mov    rax,QWORD PTR [rbp-0x18]
  416adc:	jmp    416afa <_start@@Base+0x1086a>
  416ade:	mov    rax,QWORD PTR [rbp-0x18]
  416ae2:	jmp    416afa <_start@@Base+0x1086a>
  416ae4:	mov    rax,QWORD PTR [rbp-0x18]
  416ae8:	jmp    416afa <_start@@Base+0x1086a>
  416aea:	mov    rax,QWORD PTR [rbp-0x18]
  416aee:	jmp    416afa <_start@@Base+0x1086a>
  416af0:	mov    rax,QWORD PTR [rbp-0x18]
  416af4:	jmp    416afa <_start@@Base+0x1086a>
  416af6:	mov    rax,QWORD PTR [rbp-0x30]
  416afa:	leave  
  416afb:	ret    
  416afc:	endbr64 
  416b00:	push   rbp
  416b01:	mov    rbp,rsp
  416b04:	sub    rsp,0x90
  416b0b:	mov    QWORD PTR [rbp-0x68],rdi
  416b0f:	mov    QWORD PTR [rbp-0x70],rsi
  416b13:	mov    QWORD PTR [rbp-0x78],rdx
  416b17:	mov    QWORD PTR [rbp-0x80],rcx
  416b1b:	mov    DWORD PTR [rbp-0x84],r8d
  416b22:	mov    rax,QWORD PTR fs:0x28
  416b2b:	mov    QWORD PTR [rbp-0x8],rax
  416b2f:	xor    eax,eax
  416b31:	cmp    QWORD PTR [rbp-0x70],0x0
  416b36:	jne    416b3e <_start@@Base+0x108ae>
  416b38:	lea    rax,[rbp-0x50]
  416b3c:	jmp    416b42 <_start@@Base+0x108b2>
  416b3e:	mov    rax,QWORD PTR [rbp-0x70]
  416b42:	mov    QWORD PTR [rbp-0x70],rax
  416b46:	mov    rdx,QWORD PTR [rbp-0x78]
  416b4a:	mov    rax,QWORD PTR [rbp-0x80]
  416b4e:	lea    rcx,[rdx+rax*1]
  416b52:	mov    edi,DWORD PTR [rbp-0x84]
  416b58:	mov    rdx,QWORD PTR [rbp-0x78]
  416b5c:	mov    rsi,QWORD PTR [rbp-0x68]
  416b60:	mov    rax,QWORD PTR [rbp-0x70]
  416b64:	mov    r8d,edi
  416b67:	mov    rdi,rax
  416b6a:	call   4065f6 <_start@@Base+0x366>
  416b6f:	mov    rax,QWORD PTR [rbp-0x68]
  416b73:	mov    ecx,0x0
  416b78:	mov    edx,0x0
  416b7d:	lea    rsi,[rip+0x204ec]        # 437070 <_IO_stdin_used@@Base+0x70>
  416b84:	mov    rdi,rax
  416b87:	call   41df7c <flatcc_builder_start_buffer@@Base>
  416b8c:	test   eax,eax
  416b8e:	je     416b97 <_start@@Base+0x10907>
  416b90:	mov    eax,0xffffffff
  416b95:	jmp    416bfe <_start@@Base+0x1096e>
  416b97:	mov    rdx,QWORD PTR [rbp-0x78]
  416b9b:	mov    rax,QWORD PTR [rbp-0x80]
  416b9f:	lea    rdi,[rdx+rax*1]
  416ba3:	lea    rdx,[rbp-0x54]
  416ba7:	mov    rsi,QWORD PTR [rbp-0x78]
  416bab:	mov    rax,QWORD PTR [rbp-0x70]
  416baf:	mov    rcx,rdx
  416bb2:	mov    rdx,rdi
  416bb5:	mov    rdi,rax
  416bb8:	call   40f3c3 <_start@@Base+0x9133>
  416bbd:	mov    rax,QWORD PTR [rbp-0x70]
  416bc1:	mov    eax,DWORD PTR [rax+0x20]
  416bc4:	test   eax,eax
  416bc6:	je     416bd1 <_start@@Base+0x10941>
  416bc8:	mov    rax,QWORD PTR [rbp-0x70]
  416bcc:	mov    eax,DWORD PTR [rax+0x20]
  416bcf:	jmp    416bfe <_start@@Base+0x1096e>
  416bd1:	mov    edx,DWORD PTR [rbp-0x54]
  416bd4:	mov    rax,QWORD PTR [rbp-0x68]
  416bd8:	mov    esi,edx
  416bda:	mov    rdi,rax
  416bdd:	call   41e0c9 <flatcc_builder_end_buffer@@Base>
  416be2:	test   eax,eax
  416be4:	jne    416bed <_start@@Base+0x1095d>
  416be6:	mov    eax,0xffffffff
  416beb:	jmp    416bfe <_start@@Base+0x1096e>
  416bed:	mov    rax,QWORD PTR [rbp-0x70]
  416bf1:	mov    rdx,QWORD PTR [rbp-0x78]
  416bf5:	mov    QWORD PTR [rax+0x40],rdx
  416bf9:	mov    eax,0x0
  416bfe:	mov    rcx,QWORD PTR [rbp-0x8]
  416c02:	xor    rcx,QWORD PTR fs:0x28
  416c0b:	je     416c12 <_start@@Base+0x10982>
  416c0d:	call   4061a0 <__stack_chk_fail@plt>
  416c12:	leave  
  416c13:	ret    
  416c14:	push   rbp
  416c15:	mov    rbp,rsp
  416c18:	mov    QWORD PTR [rbp-0x8],rdi
  416c1c:	mov    DWORD PTR [rbp-0xc],esi
  416c1f:	cmp    DWORD PTR [rbp-0xc],0x0
  416c23:	setne  al
  416c26:	mov    edx,eax
  416c28:	mov    rax,QWORD PTR [rbp-0x8]
  416c2c:	mov    BYTE PTR [rax+0x32],dl
  416c2f:	nop
  416c30:	pop    rbp
  416c31:	ret    
  416c32:	push   rbp
  416c33:	mov    rbp,rsp
  416c36:	mov    QWORD PTR [rbp-0x8],rdi
  416c3a:	mov    DWORD PTR [rbp-0xc],esi
  416c3d:	cmp    DWORD PTR [rbp-0xc],0x0
  416c41:	setne  al
  416c44:	mov    edx,eax
  416c46:	mov    rax,QWORD PTR [rbp-0x8]
  416c4a:	mov    BYTE PTR [rax+0x33],dl
  416c4d:	nop
  416c4e:	pop    rbp
  416c4f:	ret    
  416c50:	push   rbp
  416c51:	mov    rbp,rsp
  416c54:	mov    QWORD PTR [rbp-0x8],rdi
  416c58:	mov    eax,esi
  416c5a:	mov    BYTE PTR [rbp-0xc],al
  416c5d:	mov    rdx,QWORD PTR [rbp-0x8]
  416c61:	movzx  eax,BYTE PTR [rbp-0xc]
  416c65:	mov    BYTE PTR [rdx+0x31],al
  416c68:	nop
  416c69:	pop    rbp
  416c6a:	ret    
  416c6b:	push   rbp
  416c6c:	mov    rbp,rsp
  416c6f:	sub    rsp,0x8
  416c73:	mov    QWORD PTR [rbp-0x8],rdi
  416c77:	mov    rax,QWORD PTR [rbp-0x8]
  416c7b:	mov    esi,0x2
  416c80:	mov    rdi,rax
  416c83:	call   416c50 <_start@@Base+0x109c0>
  416c88:	mov    rax,QWORD PTR [rbp-0x8]
  416c8c:	mov    esi,0x1
  416c91:	mov    rdi,rax
  416c94:	call   416c14 <_start@@Base+0x10984>
  416c99:	mov    rax,QWORD PTR [rbp-0x8]
  416c9d:	mov    esi,0x0
  416ca2:	mov    rdi,rax
  416ca5:	call   416c32 <_start@@Base+0x109a2>
  416caa:	nop
  416cab:	leave  
  416cac:	ret    
  416cad:	push   rbp
  416cae:	mov    rbp,rsp
  416cb1:	sub    rsp,0x10
  416cb5:	mov    QWORD PTR [rbp-0x8],rdi
  416cb9:	mov    DWORD PTR [rbp-0xc],esi
  416cbc:	mov    eax,DWORD PTR [rbp-0xc]
  416cbf:	and    eax,0x1
  416cc2:	test   eax,eax
  416cc4:	setne  al
  416cc7:	mov    edx,eax
  416cc9:	mov    rax,QWORD PTR [rbp-0x8]
  416ccd:	mov    BYTE PTR [rax+0x32],dl
  416cd0:	mov    eax,DWORD PTR [rbp-0xc]
  416cd3:	and    eax,0x2
  416cd6:	test   eax,eax
  416cd8:	setne  al
  416cdb:	mov    edx,eax
  416cdd:	mov    rax,QWORD PTR [rbp-0x8]
  416ce1:	mov    BYTE PTR [rax+0x33],dl
  416ce4:	mov    eax,DWORD PTR [rbp-0xc]
  416ce7:	and    eax,0x4
  416cea:	test   eax,eax
  416cec:	setne  al
  416cef:	mov    edx,eax
  416cf1:	mov    rax,QWORD PTR [rbp-0x8]
  416cf5:	mov    BYTE PTR [rax+0x34],dl
  416cf8:	mov    eax,DWORD PTR [rbp-0xc]
  416cfb:	and    eax,0x8
  416cfe:	test   eax,eax
  416d00:	setne  al
  416d03:	mov    edx,eax
  416d05:	mov    rax,QWORD PTR [rbp-0x8]
  416d09:	mov    BYTE PTR [rax+0x35],dl
  416d0c:	mov    eax,DWORD PTR [rbp-0xc]
  416d0f:	and    eax,0x10
  416d12:	test   eax,eax
  416d14:	je     416d27 <_start@@Base+0x10a97>
  416d16:	mov    rax,QWORD PTR [rbp-0x8]
  416d1a:	mov    esi,0x2
  416d1f:	mov    rdi,rax
  416d22:	call   416c50 <_start@@Base+0x109c0>
  416d27:	mov    eax,DWORD PTR [rbp-0xc]
  416d2a:	and    eax,0x20
  416d2d:	test   eax,eax
  416d2f:	je     416d3d <_start@@Base+0x10aad>
  416d31:	mov    rax,QWORD PTR [rbp-0x8]
  416d35:	mov    rdi,rax
  416d38:	call   416c6b <_start@@Base+0x109db>
  416d3d:	nop
  416d3e:	leave  
  416d3f:	ret    
  416d40:	endbr64 
  416d44:	push   rbp
  416d45:	mov    rbp,rsp
  416d48:	sub    rsp,0x10
  416d4c:	mov    QWORD PTR [rbp-0x8],rdi
  416d50:	mov    QWORD PTR [rbp-0x10],rsi
  416d54:	cmp    QWORD PTR [rbp-0x10],0x0
  416d59:	je     416d64 <_start@@Base+0x10ad4>
  416d5b:	cmp    QWORD PTR [rbp-0x10],0x11
  416d60:	je     416d7e <_start@@Base+0x10aee>
  416d62:	jmp    416d98 <_start@@Base+0x10b08>
  416d64:	mov    rax,QWORD PTR [rbp-0x8]
  416d68:	mov    edx,0xa
  416d6d:	lea    rsi,[rip+0x20301]        # 437075 <_IO_stdin_used@@Base+0x75>
  416d74:	mov    rdi,rax
  416d77:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  416d7c:	jmp    416dac <_start@@Base+0x10b1c>
  416d7e:	mov    rax,QWORD PTR [rbp-0x8]
  416d82:	mov    edx,0x3
  416d87:	lea    rsi,[rip+0x202f2]        # 437080 <_IO_stdin_used@@Base+0x80>
  416d8e:	mov    rdi,rax
  416d91:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  416d96:	jmp    416dac <_start@@Base+0x10b1c>
  416d98:	mov    rdx,QWORD PTR [rbp-0x10]
  416d9c:	mov    rax,QWORD PTR [rbp-0x8]
  416da0:	mov    rsi,rdx
  416da3:	mov    rdi,rax
  416da6:	call   42ead9 <flatcc_json_printer_int64@@Base>
  416dab:	nop
  416dac:	nop
  416dad:	leave  
  416dae:	ret    
  416daf:	endbr64 
  416db3:	push   rbp
  416db4:	mov    rbp,rsp
  416db7:	mov    QWORD PTR [rbp-0x8],rdi
  416dbb:	mov    QWORD PTR [rbp-0x10],rsi
  416dbf:	nop
  416dc0:	pop    rbp
  416dc1:	ret    
  416dc2:	endbr64 
  416dc6:	push   rbp
  416dc7:	mov    rbp,rsp
  416dca:	sub    rsp,0x10
  416dce:	mov    QWORD PTR [rbp-0x8],rdi
  416dd2:	mov    DWORD PTR [rbp-0xc],esi
  416dd5:	cmp    DWORD PTR [rbp-0xc],0xfffffff5
  416dd9:	je     416e01 <_start@@Base+0x10b71>
  416ddb:	cmp    DWORD PTR [rbp-0xc],0xfffffff6
  416ddf:	je     416e1b <_start@@Base+0x10b8b>
  416de1:	cmp    DWORD PTR [rbp-0xc],0xfffffff4
  416de5:	jne    416e35 <_start@@Base+0x10ba5>
  416de7:	mov    rax,QWORD PTR [rbp-0x8]
  416deb:	mov    edx,0x4
  416df0:	lea    rsi,[rip+0x2028d]        # 437084 <_IO_stdin_used@@Base+0x84>
  416df7:	mov    rdi,rax
  416dfa:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  416dff:	jmp    416e47 <_start@@Base+0x10bb7>
  416e01:	mov    rax,QWORD PTR [rbp-0x8]
  416e05:	mov    edx,0x4
  416e0a:	lea    rsi,[rip+0x20278]        # 437089 <_IO_stdin_used@@Base+0x89>
  416e11:	mov    rdi,rax
  416e14:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  416e19:	jmp    416e47 <_start@@Base+0x10bb7>
  416e1b:	mov    rax,QWORD PTR [rbp-0x8]
  416e1f:	mov    edx,0x4
  416e24:	lea    rsi,[rip+0x20263]        # 43708e <_IO_stdin_used@@Base+0x8e>
  416e2b:	mov    rdi,rax
  416e2e:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  416e33:	jmp    416e47 <_start@@Base+0x10bb7>
  416e35:	mov    edx,DWORD PTR [rbp-0xc]
  416e38:	mov    rax,QWORD PTR [rbp-0x8]
  416e3c:	mov    esi,edx
  416e3e:	mov    rdi,rax
  416e41:	call   42ea96 <flatcc_json_printer_int32@@Base>
  416e46:	nop
  416e47:	nop
  416e48:	leave  
  416e49:	ret    
  416e4a:	endbr64 
  416e4e:	push   rbp
  416e4f:	mov    rbp,rsp
  416e52:	sub    rsp,0x10
  416e56:	mov    QWORD PTR [rbp-0x8],rdi
  416e5a:	mov    DWORD PTR [rbp-0xc],esi
  416e5d:	cmp    DWORD PTR [rbp-0xc],0xffffffff
  416e61:	je     416e99 <_start@@Base+0x10c09>
  416e63:	cmp    DWORD PTR [rbp-0xc],0x0
  416e67:	jns    416e71 <_start@@Base+0x10be1>
  416e69:	cmp    DWORD PTR [rbp-0xc],0xfffffffe
  416e6d:	je     416e7f <_start@@Base+0x10bef>
  416e6f:	jmp    416ee7 <_start@@Base+0x10c57>
  416e71:	cmp    DWORD PTR [rbp-0xc],0x2
  416e75:	je     416eb3 <_start@@Base+0x10c23>
  416e77:	cmp    DWORD PTR [rbp-0xc],0x2a
  416e7b:	je     416ecd <_start@@Base+0x10c3d>
  416e7d:	jmp    416ee7 <_start@@Base+0x10c57>
  416e7f:	mov    rax,QWORD PTR [rbp-0x8]
  416e83:	mov    edx,0x6
  416e88:	lea    rsi,[rip+0x20204]        # 437093 <_IO_stdin_used@@Base+0x93>
  416e8f:	mov    rdi,rax
  416e92:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  416e97:	jmp    416ef9 <_start@@Base+0x10c69>
  416e99:	mov    rax,QWORD PTR [rbp-0x8]
  416e9d:	mov    edx,0x7
  416ea2:	lea    rsi,[rip+0x201f1]        # 43709a <_IO_stdin_used@@Base+0x9a>
  416ea9:	mov    rdi,rax
  416eac:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  416eb1:	jmp    416ef9 <_start@@Base+0x10c69>
  416eb3:	mov    rax,QWORD PTR [rbp-0x8]
  416eb7:	mov    edx,0x4
  416ebc:	lea    rsi,[rip+0x201df]        # 4370a2 <_IO_stdin_used@@Base+0xa2>
  416ec3:	mov    rdi,rax
  416ec6:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  416ecb:	jmp    416ef9 <_start@@Base+0x10c69>
  416ecd:	mov    rax,QWORD PTR [rbp-0x8]
  416ed1:	mov    edx,0x4
  416ed6:	lea    rsi,[rip+0x201ca]        # 4370a7 <_IO_stdin_used@@Base+0xa7>
  416edd:	mov    rdi,rax
  416ee0:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  416ee5:	jmp    416ef9 <_start@@Base+0x10c69>
  416ee7:	mov    edx,DWORD PTR [rbp-0xc]
  416eea:	mov    rax,QWORD PTR [rbp-0x8]
  416eee:	mov    esi,edx
  416ef0:	mov    rdi,rax
  416ef3:	call   42ea96 <flatcc_json_printer_int32@@Base>
  416ef8:	nop
  416ef9:	nop
  416efa:	leave  
  416efb:	ret    
  416efc:	endbr64 
  416f00:	push   rbp
  416f01:	mov    rbp,rsp
  416f04:	sub    rsp,0x10
  416f08:	mov    QWORD PTR [rbp-0x8],rdi
  416f0c:	mov    DWORD PTR [rbp-0xc],esi
  416f0f:	cmp    DWORD PTR [rbp-0xc],0x3
  416f13:	je     416f3e <_start@@Base+0x10cae>
  416f15:	cmp    DWORD PTR [rbp-0xc],0x7eafbeaf
  416f1c:	je     416f58 <_start@@Base+0x10cc8>
  416f1e:	cmp    DWORD PTR [rbp-0xc],0xfffffffe
  416f22:	jne    416f72 <_start@@Base+0x10ce2>
  416f24:	mov    rax,QWORD PTR [rbp-0x8]
  416f28:	mov    edx,0x6
  416f2d:	lea    rsi,[rip+0x20178]        # 4370ac <_IO_stdin_used@@Base+0xac>
  416f34:	mov    rdi,rax
  416f37:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  416f3c:	jmp    416f84 <_start@@Base+0x10cf4>
  416f3e:	mov    rax,QWORD PTR [rbp-0x8]
  416f42:	mov    edx,0x4
  416f47:	lea    rsi,[rip+0x20165]        # 4370b3 <_IO_stdin_used@@Base+0xb3>
  416f4e:	mov    rdi,rax
  416f51:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  416f56:	jmp    416f84 <_start@@Base+0x10cf4>
  416f58:	mov    rax,QWORD PTR [rbp-0x8]
  416f5c:	mov    edx,0x4
  416f61:	lea    rsi,[rip+0x20150]        # 4370b8 <_IO_stdin_used@@Base+0xb8>
  416f68:	mov    rdi,rax
  416f6b:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  416f70:	jmp    416f84 <_start@@Base+0x10cf4>
  416f72:	mov    edx,DWORD PTR [rbp-0xc]
  416f75:	mov    rax,QWORD PTR [rbp-0x8]
  416f79:	mov    esi,edx
  416f7b:	mov    rdi,rax
  416f7e:	call   42ea96 <flatcc_json_printer_int32@@Base>
  416f83:	nop
  416f84:	nop
  416f85:	leave  
  416f86:	ret    
  416f87:	endbr64 
  416f8b:	push   rbp
  416f8c:	mov    rbp,rsp
  416f8f:	sub    rsp,0x20
  416f93:	mov    QWORD PTR [rbp-0x18],rdi
  416f97:	mov    eax,esi
  416f99:	mov    BYTE PTR [rbp-0x1c],al
  416f9c:	movzx  eax,BYTE PTR [rbp-0x1c]
  416fa0:	mov    BYTE PTR [rbp-0x9],al
  416fa3:	movzx  eax,BYTE PTR [rbp-0x9]
  416fa7:	movzx  edx,BYTE PTR [rbp-0x9]
  416fab:	dec    edx
  416fad:	and    eax,edx
  416faf:	test   eax,eax
  416fb1:	setne  al
  416fb4:	movzx  eax,al
  416fb7:	mov    DWORD PTR [rbp-0x4],eax
  416fba:	mov    DWORD PTR [rbp-0x8],0x0
  416fc1:	movzx  eax,BYTE PTR [rbp-0x9]
  416fc5:	and    eax,0xf4
  416fca:	test   eax,eax
  416fcc:	jne    416fd4 <_start@@Base+0x10d44>
  416fce:	cmp    BYTE PTR [rbp-0x9],0x0
  416fd2:	jne    416feb <_start@@Base+0x10d5b>
  416fd4:	movsx  edx,BYTE PTR [rbp-0x1c]
  416fd8:	mov    rax,QWORD PTR [rbp-0x18]
  416fdc:	mov    esi,edx
  416fde:	mov    rdi,rax
  416fe1:	call   42ea09 <flatcc_json_printer_int8@@Base>
  416fe6:	jmp    41708e <_start@@Base+0x10dfe>
  416feb:	mov    edx,DWORD PTR [rbp-0x4]
  416fee:	mov    rax,QWORD PTR [rbp-0x18]
  416ff2:	mov    esi,edx
  416ff4:	mov    rdi,rax
  416ff7:	call   42ebea <flatcc_json_printer_delimit_enum_flags@@Base>
  416ffc:	movzx  eax,BYTE PTR [rbp-0x9]
  417000:	and    eax,0x1
  417003:	test   eax,eax
  417005:	je     417027 <_start@@Base+0x10d97>
  417007:	mov    eax,DWORD PTR [rbp-0x8]
  41700a:	lea    edx,[rax+0x1]
  41700d:	mov    DWORD PTR [rbp-0x8],edx
  417010:	mov    rdi,QWORD PTR [rbp-0x18]
  417014:	mov    ecx,0x3
  417019:	lea    rdx,[rip+0x2009d]        # 4370bd <_IO_stdin_used@@Base+0xbd>
  417020:	mov    esi,eax
  417022:	call   42ec40 <flatcc_json_printer_enum_flag@@Base>
  417027:	movzx  eax,BYTE PTR [rbp-0x9]
  41702b:	and    eax,0x2
  41702e:	test   eax,eax
  417030:	je     417052 <_start@@Base+0x10dc2>
  417032:	mov    eax,DWORD PTR [rbp-0x8]
  417035:	lea    edx,[rax+0x1]
  417038:	mov    DWORD PTR [rbp-0x8],edx
  41703b:	mov    rdi,QWORD PTR [rbp-0x18]
  41703f:	mov    ecx,0x5
  417044:	lea    rdx,[rip+0x20076]        # 4370c1 <_IO_stdin_used@@Base+0xc1>
  41704b:	mov    esi,eax
  41704d:	call   42ec40 <flatcc_json_printer_enum_flag@@Base>
  417052:	movzx  eax,BYTE PTR [rbp-0x9]
  417056:	and    eax,0x8
  417059:	test   eax,eax
  41705b:	je     41707d <_start@@Base+0x10ded>
  41705d:	mov    eax,DWORD PTR [rbp-0x8]
  417060:	lea    edx,[rax+0x1]
  417063:	mov    DWORD PTR [rbp-0x8],edx
  417066:	mov    rdi,QWORD PTR [rbp-0x18]
  41706a:	mov    ecx,0x4
  41706f:	lea    rdx,[rip+0x20051]        # 4370c7 <_IO_stdin_used@@Base+0xc7>
  417076:	mov    esi,eax
  417078:	call   42ec40 <flatcc_json_printer_enum_flag@@Base>
  41707d:	mov    edx,DWORD PTR [rbp-0x4]
  417080:	mov    rax,QWORD PTR [rbp-0x18]
  417084:	mov    esi,edx
  417086:	mov    rdi,rax
  417089:	call   42ebea <flatcc_json_printer_delimit_enum_flags@@Base>
  41708e:	leave  
  41708f:	ret    
  417090:	endbr64 
  417094:	push   rbp
  417095:	mov    rbp,rsp
  417098:	sub    rsp,0x10
  41709c:	mov    QWORD PTR [rbp-0x8],rdi
  4170a0:	mov    DWORD PTR [rbp-0xc],esi
  4170a3:	cmp    DWORD PTR [rbp-0xc],0x0
  4170a7:	jne    4170c3 <_start@@Base+0x10e33>
  4170a9:	mov    rax,QWORD PTR [rbp-0x8]
  4170ad:	mov    edx,0x1
  4170b2:	lea    rsi,[rip+0x20013]        # 4370cc <_IO_stdin_used@@Base+0xcc>
  4170b9:	mov    rdi,rax
  4170bc:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  4170c1:	jmp    4170d5 <_start@@Base+0x10e45>
  4170c3:	mov    edx,DWORD PTR [rbp-0xc]
  4170c6:	mov    rax,QWORD PTR [rbp-0x8]
  4170ca:	mov    esi,edx
  4170cc:	mov    rdi,rax
  4170cf:	call   42ea96 <flatcc_json_printer_int32@@Base>
  4170d4:	nop
  4170d5:	nop
  4170d6:	leave  
  4170d7:	ret    
  4170d8:	endbr64 
  4170dc:	push   rbp
  4170dd:	mov    rbp,rsp
  4170e0:	sub    rsp,0x10
  4170e4:	mov    QWORD PTR [rbp-0x8],rdi
  4170e8:	mov    eax,esi
  4170ea:	mov    BYTE PTR [rbp-0xc],al
  4170ed:	movzx  eax,BYTE PTR [rbp-0xc]
  4170f1:	cmp    eax,0x1
  4170f4:	jne    417110 <_start@@Base+0x10e80>
  4170f6:	mov    rax,QWORD PTR [rbp-0x8]
  4170fa:	mov    edx,0x11
  4170ff:	lea    rsi,[rip+0x1ffc8]        # 4370ce <_IO_stdin_used@@Base+0xce>
  417106:	mov    rdi,rax
  417109:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  41710e:	jmp    417129 <_start@@Base+0x10e99>
  417110:	mov    rax,QWORD PTR [rbp-0x8]
  417114:	mov    edx,0x4
  417119:	lea    rsi,[rip+0x1ffc0]        # 4370e0 <_IO_stdin_used@@Base+0xe0>
  417120:	mov    rdi,rax
  417123:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  417128:	nop
  417129:	nop
  41712a:	leave  
  41712b:	ret    
  41712c:	endbr64 
  417130:	push   rbp
  417131:	mov    rbp,rsp
  417134:	sub    rsp,0x10
  417138:	mov    QWORD PTR [rbp-0x8],rdi
  41713c:	mov    QWORD PTR [rbp-0x10],rsi
  417140:	mov    rax,QWORD PTR [rbp-0x10]
  417144:	movzx  eax,BYTE PTR [rax+0xc]
  417148:	movzx  eax,al
  41714b:	cmp    eax,0x1
  41714e:	jne    41716c <_start@@Base+0x10edc>
  417150:	mov    rcx,QWORD PTR [rbp-0x10]
  417154:	mov    rax,QWORD PTR [rbp-0x8]
  417158:	lea    rdx,[rip+0x606]        # 417765 <_start@@Base+0x114d5>
  41715f:	mov    rsi,rcx
  417162:	mov    rdi,rax
  417165:	call   4356cd <flatcc_json_printer_union_table@@Base>
  41716a:	jmp    41716d <_start@@Base+0x10edd>
  41716c:	nop
  41716d:	nop
  41716e:	leave  
  41716f:	ret    
  417170:	endbr64 
  417174:	push   rbp
  417175:	mov    rbp,rsp
  417178:	sub    rsp,0x10
  41717c:	mov    QWORD PTR [rbp-0x8],rdi
  417180:	mov    eax,esi
  417182:	mov    BYTE PTR [rbp-0xc],al
  417185:	movzx  eax,BYTE PTR [rbp-0xc]
  417189:	cmp    eax,0x2
  41718c:	je     4171c0 <_start@@Base+0x10f30>
  41718e:	cmp    eax,0x2
  417191:	jg     41719a <_start@@Base+0x10f0a>
  417193:	cmp    eax,0x1
  417196:	je     4171a6 <_start@@Base+0x10f16>
  417198:	jmp    41720e <_start@@Base+0x10f7e>
  41719a:	cmp    eax,0x3
  41719d:	je     4171da <_start@@Base+0x10f4a>
  41719f:	cmp    eax,0x4
  4171a2:	je     4171f4 <_start@@Base+0x10f64>
  4171a4:	jmp    41720e <_start@@Base+0x10f7e>
  4171a6:	mov    rax,QWORD PTR [rbp-0x8]
  4171aa:	mov    edx,0x7
  4171af:	lea    rsi,[rip+0x1ff2f]        # 4370e5 <_IO_stdin_used@@Base+0xe5>
  4171b6:	mov    rdi,rax
  4171b9:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  4171be:	jmp    417227 <_start@@Base+0x10f97>
  4171c0:	mov    rax,QWORD PTR [rbp-0x8]
  4171c4:	mov    edx,0x17
  4171c9:	lea    rsi,[rip+0x1ff1d]        # 4370ed <_IO_stdin_used@@Base+0xed>
  4171d0:	mov    rdi,rax
  4171d3:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  4171d8:	jmp    417227 <_start@@Base+0x10f97>
  4171da:	mov    rax,QWORD PTR [rbp-0x8]
  4171de:	mov    edx,0x8
  4171e3:	lea    rsi,[rip+0x1ff1b]        # 437105 <_IO_stdin_used@@Base+0x105>
  4171ea:	mov    rdi,rax
  4171ed:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  4171f2:	jmp    417227 <_start@@Base+0x10f97>
  4171f4:	mov    rax,QWORD PTR [rbp-0x8]
  4171f8:	mov    edx,0x3
  4171fd:	lea    rsi,[rip+0x1ff0a]        # 43710e <_IO_stdin_used@@Base+0x10e>
  417204:	mov    rdi,rax
  417207:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  41720c:	jmp    417227 <_start@@Base+0x10f97>
  41720e:	mov    rax,QWORD PTR [rbp-0x8]
  417212:	mov    edx,0x4
  417217:	lea    rsi,[rip+0x1fec2]        # 4370e0 <_IO_stdin_used@@Base+0xe0>
  41721e:	mov    rdi,rax
  417221:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  417226:	nop
  417227:	nop
  417228:	leave  
  417229:	ret    
  41722a:	endbr64 
  41722e:	push   rbp
  41722f:	mov    rbp,rsp
  417232:	sub    rsp,0x10
  417236:	mov    QWORD PTR [rbp-0x8],rdi
  41723a:	mov    QWORD PTR [rbp-0x10],rsi
  41723e:	mov    rax,QWORD PTR [rbp-0x10]
  417242:	movzx  eax,BYTE PTR [rax+0xc]
  417246:	movzx  eax,al
  417249:	cmp    eax,0x2
  41724c:	je     417282 <_start@@Base+0x10ff2>
  41724e:	cmp    eax,0x2
  417251:	jg     41725a <_start@@Base+0x10fca>
  417253:	cmp    eax,0x1
  417256:	je     417266 <_start@@Base+0x10fd6>
  417258:	jmp    4172d5 <_start@@Base+0x11045>
  41725a:	cmp    eax,0x3
  41725d:	je     41729e <_start@@Base+0x1100e>
  41725f:	cmp    eax,0x4
  417262:	je     4172ba <_start@@Base+0x1102a>
  417264:	jmp    4172d5 <_start@@Base+0x11045>
  417266:	mov    rcx,QWORD PTR [rbp-0x10]
  41726a:	mov    rax,QWORD PTR [rbp-0x8]
  41726e:	lea    rdx,[rip+0xbff]        # 417e74 <_start@@Base+0x11be4>
  417275:	mov    rsi,rcx
  417278:	mov    rdi,rax
  41727b:	call   4356cd <flatcc_json_printer_union_table@@Base>
  417280:	jmp    4172d5 <_start@@Base+0x11045>
  417282:	mov    rcx,QWORD PTR [rbp-0x10]
  417286:	mov    rax,QWORD PTR [rbp-0x8]
  41728a:	lea    rdx,[rip+0x54d]        # 4177de <_start@@Base+0x1154e>
  417291:	mov    rsi,rcx
  417294:	mov    rdi,rax
  417297:	call   4356cd <flatcc_json_printer_union_table@@Base>
  41729c:	jmp    4172d5 <_start@@Base+0x11045>
  41729e:	mov    rcx,QWORD PTR [rbp-0x10]
  4172a2:	mov    rax,QWORD PTR [rbp-0x8]
  4172a6:	lea    rdx,[rip+0x4cb]        # 417778 <_start@@Base+0x114e8>
  4172ad:	mov    rsi,rcx
  4172b0:	mov    rdi,rax
  4172b3:	call   4356cd <flatcc_json_printer_union_table@@Base>
  4172b8:	jmp    4172d5 <_start@@Base+0x11045>
  4172ba:	mov    rcx,QWORD PTR [rbp-0x10]
  4172be:	mov    rax,QWORD PTR [rbp-0x8]
  4172c2:	lea    rdx,[rip+0x7ad]        # 417a76 <_start@@Base+0x117e6>
  4172c9:	mov    rsi,rcx
  4172cc:	mov    rdi,rax
  4172cf:	call   4356cd <flatcc_json_printer_union_table@@Base>
  4172d4:	nop
  4172d5:	nop
  4172d6:	leave  
  4172d7:	ret    
  4172d8:	endbr64 
  4172dc:	push   rbp
  4172dd:	mov    rbp,rsp
  4172e0:	sub    rsp,0x10
  4172e4:	mov    QWORD PTR [rbp-0x8],rdi
  4172e8:	mov    eax,esi
  4172ea:	mov    BYTE PTR [rbp-0xc],al
  4172ed:	movzx  eax,BYTE PTR [rbp-0xc]
  4172f1:	cmp    eax,0x9
  4172f4:	je     417362 <_start@@Base+0x110d2>
  4172f6:	cmp    eax,0x9
  4172f9:	jg     41730a <_start@@Base+0x1107a>
  4172fb:	cmp    eax,0x2
  4172fe:	je     417328 <_start@@Base+0x11098>
  417300:	cmp    eax,0x8
  417303:	je     417345 <_start@@Base+0x110b5>
  417305:	jmp    4173ca <_start@@Base+0x1113a>
  41730a:	cmp    eax,0xb
  41730d:	je     417396 <_start@@Base+0x11106>
  417313:	cmp    eax,0xb
  417316:	jl     41737c <_start@@Base+0x110ec>
  417318:	cmp    eax,0xff
  41731d:	je     4173b0 <_start@@Base+0x11120>
  417323:	jmp    4173ca <_start@@Base+0x1113a>
  417328:	mov    rax,QWORD PTR [rbp-0x8]
  41732c:	mov    edx,0x5
  417331:	lea    rsi,[rip+0x1fdda]        # 437112 <_IO_stdin_used@@Base+0x112>
  417338:	mov    rdi,rax
  41733b:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  417340:	jmp    4173e3 <_start@@Base+0x11153>
  417345:	mov    rax,QWORD PTR [rbp-0x8]
  417349:	mov    edx,0x8
  41734e:	lea    rsi,[rip+0x1fdc3]        # 437118 <_IO_stdin_used@@Base+0x118>
  417355:	mov    rdi,rax
  417358:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  41735d:	jmp    4173e3 <_start@@Base+0x11153>
  417362:	mov    rax,QWORD PTR [rbp-0x8]
  417366:	mov    edx,0x5
  41736b:	lea    rsi,[rip+0x1fdaf]        # 437121 <_IO_stdin_used@@Base+0x121>
  417372:	mov    rdi,rax
  417375:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  41737a:	jmp    4173e3 <_start@@Base+0x11153>
  41737c:	mov    rax,QWORD PTR [rbp-0x8]
  417380:	mov    edx,0x7
  417385:	lea    rsi,[rip+0x1fd9b]        # 437127 <_IO_stdin_used@@Base+0x127>
  41738c:	mov    rdi,rax
  41738f:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  417394:	jmp    4173e3 <_start@@Base+0x11153>
  417396:	mov    rax,QWORD PTR [rbp-0x8]
  41739a:	mov    edx,0x5
  41739f:	lea    rsi,[rip+0x1fd89]        # 43712f <_IO_stdin_used@@Base+0x12f>
  4173a6:	mov    rdi,rax
  4173a9:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  4173ae:	jmp    4173e3 <_start@@Base+0x11153>
  4173b0:	mov    rax,QWORD PTR [rbp-0x8]
  4173b4:	mov    edx,0x6
  4173b9:	lea    rsi,[rip+0x1fd75]        # 437135 <_IO_stdin_used@@Base+0x135>
  4173c0:	mov    rdi,rax
  4173c3:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  4173c8:	jmp    4173e3 <_start@@Base+0x11153>
  4173ca:	mov    rax,QWORD PTR [rbp-0x8]
  4173ce:	mov    edx,0x4
  4173d3:	lea    rsi,[rip+0x1fd06]        # 4370e0 <_IO_stdin_used@@Base+0xe0>
  4173da:	mov    rdi,rax
  4173dd:	call   42ebb7 <flatcc_json_printer_enum@@Base>
  4173e2:	nop
  4173e3:	nop
  4173e4:	leave  
  4173e5:	ret    
  4173e6:	endbr64 
  4173ea:	push   rbp
  4173eb:	mov    rbp,rsp
  4173ee:	sub    rsp,0x10
  4173f2:	mov    QWORD PTR [rbp-0x8],rdi
  4173f6:	mov    QWORD PTR [rbp-0x10],rsi
  4173fa:	mov    rax,QWORD PTR [rbp-0x10]
  4173fe:	movzx  eax,BYTE PTR [rax+0xc]
  417402:	movzx  eax,al
  417405:	cmp    eax,0x9
  417408:	je     417474 <_start@@Base+0x111e4>
  41740a:	cmp    eax,0x9
  41740d:	jg     41741e <_start@@Base+0x1118e>
  41740f:	cmp    eax,0x2
  417412:	je     41743c <_start@@Base+0x111ac>
  417414:	cmp    eax,0x8
  417417:	je     417458 <_start@@Base+0x111c8>
  417419:	jmp    4174d5 <_start@@Base+0x11245>
  41741e:	cmp    eax,0xb
  417421:	je     4174ac <_start@@Base+0x1121c>
  417427:	cmp    eax,0xb
  41742a:	jl     417490 <_start@@Base+0x11200>
  41742c:	cmp    eax,0xff
  417431:	je     4174c1 <_start@@Base+0x11231>
  417437:	jmp    4174d5 <_start@@Base+0x11245>
  41743c:	mov    rcx,QWORD PTR [rbp-0x10]
  417440:	mov    rax,QWORD PTR [rbp-0x8]
  417444:	lea    rdx,[rip+0x11e9]        # 418634 <_start@@Base+0x123a4>
  41744b:	mov    rsi,rcx
  41744e:	mov    rdi,rax
  417451:	call   4356cd <flatcc_json_printer_union_table@@Base>
  417456:	jmp    4174d5 <_start@@Base+0x11245>
  417458:	mov    rcx,QWORD PTR [rbp-0x10]
  41745c:	mov    rax,QWORD PTR [rbp-0x8]
  417460:	lea    rdx,[rip+0x282]        # 4176e9 <_start@@Base+0x11459>
  417467:	mov    rsi,rcx
  41746a:	mov    rdi,rax
  41746d:	call   43571c <flatcc_json_printer_union_struct@@Base>
  417472:	jmp    4174d5 <_start@@Base+0x11245>
  417474:	mov    rcx,QWORD PTR [rbp-0x10]
  417478:	mov    rax,QWORD PTR [rbp-0x8]
  41747c:	lea    rdx,[rip+0x2a4]        # 417727 <_start@@Base+0x11497>
  417483:	mov    rsi,rcx
  417486:	mov    rdi,rax
  417489:	call   43571c <flatcc_json_printer_union_struct@@Base>
  41748e:	jmp    4174d5 <_start@@Base+0x11245>
  417490:	mov    rcx,QWORD PTR [rbp-0x10]
  417494:	mov    rax,QWORD PTR [rbp-0x8]
  417498:	lea    rdx,[rip+0x288]        # 417727 <_start@@Base+0x11497>
  41749f:	mov    rsi,rcx
  4174a2:	mov    rdi,rax
  4174a5:	call   43571c <flatcc_json_printer_union_struct@@Base>
  4174aa:	jmp    4174d5 <_start@@Base+0x11245>
  4174ac:	mov    rdx,QWORD PTR [rbp-0x10]
  4174b0:	mov    rax,QWORD PTR [rbp-0x8]
  4174b4:	mov    rsi,rdx
  4174b7:	mov    rdi,rax
  4174ba:	call   4357d8 <flatcc_json_printer_union_string@@Base>
  4174bf:	jmp    4174d5 <_start@@Base+0x11245>
  4174c1:	mov    rdx,QWORD PTR [rbp-0x10]
  4174c5:	mov    rax,QWORD PTR [rbp-0x8]
  4174c9:	mov    rsi,rdx
  4174cc:	mov    rdi,rax
  4174cf:	call   4357d8 <flatcc_json_printer_union_string@@Base>
  4174d4:	nop
  4174d5:	nop
  4174d6:	leave  
  4174d7:	ret    
  4174d8:	endbr64 
  4174dc:	push   rbp
  4174dd:	mov    rbp,rsp
  4174e0:	mov    QWORD PTR [rbp-0x8],rdi
  4174e4:	mov    QWORD PTR [rbp-0x10],rsi
  4174e8:	nop
  4174e9:	pop    rbp
  4174ea:	ret    
  4174eb:	endbr64 
  4174ef:	push   rbp
  4174f0:	mov    rbp,rsp
  4174f3:	sub    rsp,0x10
  4174f7:	mov    QWORD PTR [rbp-0x8],rdi
  4174fb:	mov    QWORD PTR [rbp-0x10],rsi
  4174ff:	mov    rdx,QWORD PTR [rbp-0x10]
  417503:	mov    rax,QWORD PTR [rbp-0x8]
  417507:	mov    r9d,0x1
  41750d:	lea    r8,[rip+0x1fc28]        # 43713c <_IO_stdin_used@@Base+0x13c>
  417514:	mov    ecx,0x0
  417519:	mov    esi,0x0
  41751e:	mov    rdi,rax
  417521:	call   43074e <flatcc_json_printer_int16_struct_field@@Base>
  417526:	mov    rdx,QWORD PTR [rbp-0x10]
  41752a:	mov    rax,QWORD PTR [rbp-0x8]
  41752e:	mov    r9d,0x1
  417534:	lea    r8,[rip+0x1fc03]        # 43713e <_IO_stdin_used@@Base+0x13e>
  41753b:	mov    ecx,0x2
  417540:	mov    esi,0x1
  417545:	mov    rdi,rax
  417548:	call   4306ae <flatcc_json_printer_int8_struct_field@@Base>
  41754d:	nop
  41754e:	leave  
  41754f:	ret    
  417550:	endbr64 
  417554:	push   rbp
  417555:	mov    rbp,rsp
  417558:	mov    QWORD PTR [rbp-0x8],rdi
  41755c:	mov    QWORD PTR [rbp-0x10],rsi
  417560:	nop
  417561:	pop    rbp
  417562:	ret    
  417563:	endbr64 
  417567:	push   rbp
  417568:	mov    rbp,rsp
  41756b:	sub    rsp,0x10
  41756f:	mov    QWORD PTR [rbp-0x8],rdi
  417573:	mov    QWORD PTR [rbp-0x10],rsi
  417577:	mov    rdx,QWORD PTR [rbp-0x10]
  41757b:	mov    rax,QWORD PTR [rbp-0x8]
  41757f:	mov    r9d,0x1
  417585:	lea    r8,[rip+0x1fb40]        # 4370cc <_IO_stdin_used@@Base+0xcc>
  41758c:	mov    ecx,0x0
  417591:	mov    esi,0x0
  417596:	mov    rdi,rax
  417599:	call   4309d0 <flatcc_json_printer_float_struct_field@@Base>
  41759e:	mov    rdx,QWORD PTR [rbp-0x10]
  4175a2:	mov    rax,QWORD PTR [rbp-0x8]
  4175a6:	mov    r9d,0x1
  4175ac:	lea    r8,[rip+0x1fb8d]        # 437140 <_IO_stdin_used@@Base+0x140>
  4175b3:	mov    ecx,0x4
  4175b8:	mov    esi,0x1
  4175bd:	mov    rdi,rax
  4175c0:	call   4309d0 <flatcc_json_printer_float_struct_field@@Base>
  4175c5:	mov    rdx,QWORD PTR [rbp-0x10]
  4175c9:	mov    rax,QWORD PTR [rbp-0x8]
  4175cd:	mov    r9d,0x1
  4175d3:	lea    r8,[rip+0x1fb68]        # 437142 <_IO_stdin_used@@Base+0x142>
  4175da:	mov    ecx,0x8
  4175df:	mov    esi,0x2
  4175e4:	mov    rdi,rax
  4175e7:	call   4309d0 <flatcc_json_printer_float_struct_field@@Base>
  4175ec:	mov    rdx,QWORD PTR [rbp-0x10]
  4175f0:	mov    rax,QWORD PTR [rbp-0x8]
  4175f4:	mov    r9d,0x5
  4175fa:	lea    r8,[rip+0x1fb43]        # 437144 <_IO_stdin_used@@Base+0x144>
  417601:	mov    ecx,0x10
  417606:	mov    esi,0x3
  41760b:	mov    rdi,rax
  41760e:	call   430a7d <flatcc_json_printer_double_struct_field@@Base>
  417613:	mov    rdx,QWORD PTR [rbp-0x10]
  417617:	mov    rax,QWORD PTR [rbp-0x8]
  41761b:	sub    rsp,0x8
  41761f:	lea    rcx,[rip+0xfffffffffffff961]        # 416f87 <_start@@Base+0x10cf7>
  417626:	push   rcx
  417627:	mov    r9d,0x5
  41762d:	lea    r8,[rip+0x1fb16]        # 43714a <_IO_stdin_used@@Base+0x14a>
  417634:	mov    ecx,0x18
  417639:	mov    esi,0x4
  41763e:	mov    rdi,rax
  417641:	call   430e2c <flatcc_json_printer_int8_enum_struct_field@@Base>
  417646:	add    rsp,0x10
  41764a:	mov    rdx,QWORD PTR [rbp-0x10]
  41764e:	mov    rax,QWORD PTR [rbp-0x8]
  417652:	sub    rsp,0x8
  417656:	lea    rcx,[rip+0xfffffffffffffe8e]        # 4174eb <_start@@Base+0x1125b>
  41765d:	push   rcx
  41765e:	mov    r9d,0x5
  417664:	lea    r8,[rip+0x1fae5]        # 437150 <_IO_stdin_used@@Base+0x150>
  41766b:	mov    ecx,0x1a
  417670:	mov    esi,0x5
  417675:	mov    rdi,rax
  417678:	call   435810 <flatcc_json_printer_embedded_struct_field@@Base>
  41767d:	add    rsp,0x10
  417681:	nop
  417682:	leave  
  417683:	ret    
  417684:	endbr64 
  417688:	push   rbp
  417689:	mov    rbp,rsp
  41768c:	sub    rsp,0x10
  417690:	mov    QWORD PTR [rbp-0x8],rdi
  417694:	mov    QWORD PTR [rbp-0x10],rsi
  417698:	mov    rdx,QWORD PTR [rbp-0x10]
  41769c:	mov    rax,QWORD PTR [rbp-0x8]
  4176a0:	mov    r9d,0x2
  4176a6:	lea    r8,[rip+0x1faa9]        # 437156 <_IO_stdin_used@@Base+0x156>
  4176ad:	mov    ecx,0x0
  4176b2:	mov    esi,0x0
  4176b7:	mov    rdi,rax
  4176ba:	call   43056d <flatcc_json_printer_uint32_struct_field@@Base>
  4176bf:	mov    rdx,QWORD PTR [rbp-0x10]
  4176c3:	mov    rax,QWORD PTR [rbp-0x8]
  4176c7:	mov    r9d,0x8
  4176cd:	lea    r8,[rip+0x1fa85]        # 437159 <_IO_stdin_used@@Base+0x159>
  4176d4:	mov    ecx,0x4
  4176d9:	mov    esi,0x1
  4176de:	mov    rdi,rax
  4176e1:	call   43056d <flatcc_json_printer_uint32_struct_field@@Base>
  4176e6:	nop
  4176e7:	leave  
  4176e8:	ret    
  4176e9:	endbr64 
  4176ed:	push   rbp
  4176ee:	mov    rbp,rsp
  4176f1:	sub    rsp,0x10
  4176f5:	mov    QWORD PTR [rbp-0x8],rdi
  4176f9:	mov    QWORD PTR [rbp-0x10],rsi
  4176fd:	mov    rdx,QWORD PTR [rbp-0x10]
  417701:	mov    rax,QWORD PTR [rbp-0x8]
  417705:	mov    r9d,0xb
  41770b:	lea    r8,[rip+0x1fa50]        # 437162 <_IO_stdin_used@@Base+0x162>
  417712:	mov    ecx,0x0
  417717:	mov    esi,0x0
  41771c:	mov    rdi,rax
  41771f:	call   4304cc <flatcc_json_printer_uint16_struct_field@@Base>
  417724:	nop
  417725:	leave  
  417726:	ret    
  417727:	endbr64 
  41772b:	push   rbp
  41772c:	mov    rbp,rsp
  41772f:	sub    rsp,0x10
  417733:	mov    QWORD PTR [rbp-0x8],rdi
  417737:	mov    QWORD PTR [rbp-0x10],rsi
  41773b:	mov    rdx,QWORD PTR [rbp-0x10]
  41773f:	mov    rax,QWORD PTR [rbp-0x8]
  417743:	mov    r9d,0xa
  417749:	lea    r8,[rip+0x1fa1e]        # 43716e <_IO_stdin_used@@Base+0x16e>
  417750:	mov    ecx,0x0
  417755:	mov    esi,0x0
  41775a:	mov    rdi,rax
  41775d:	call   4307ef <flatcc_json_printer_int32_struct_field@@Base>
  417762:	nop
  417763:	leave  
  417764:	ret    
  417765:	endbr64 
  417769:	push   rbp
  41776a:	mov    rbp,rsp
  41776d:	mov    QWORD PTR [rbp-0x8],rdi
  417771:	mov    QWORD PTR [rbp-0x10],rsi
  417775:	nop
  417776:	pop    rbp
  417777:	ret    
  417778:	endbr64 
  41777c:	push   rbp
  41777d:	mov    rbp,rsp
  417780:	mov    QWORD PTR [rbp-0x8],rdi
  417784:	mov    QWORD PTR [rbp-0x10],rsi
  417788:	nop
  417789:	pop    rbp
  41778a:	ret    
  41778b:	endbr64 
  41778f:	push   rbp
  417790:	mov    rbp,rsp
  417793:	mov    QWORD PTR [rbp-0x8],rdi
  417797:	mov    QWORD PTR [rbp-0x10],rsi
  41779b:	nop
  41779c:	pop    rbp
  41779d:	ret    
  41779e:	endbr64 
  4177a2:	push   rbp
  4177a3:	mov    rbp,rsp
  4177a6:	sub    rsp,0x10
  4177aa:	mov    QWORD PTR [rbp-0x8],rdi
  4177ae:	mov    QWORD PTR [rbp-0x10],rsi
  4177b2:	mov    rsi,QWORD PTR [rbp-0x10]
  4177b6:	mov    rax,QWORD PTR [rbp-0x8]
  4177ba:	lea    r9,[rip+0xfffffffffffffd8f]        # 417550 <_start@@Base+0x112c0>
  4177c1:	mov    r8d,0x5
  4177c7:	lea    rcx,[rip+0x1f9ab]        # 437179 <_IO_stdin_used@@Base+0x179>
  4177ce:	mov    edx,0x0
  4177d3:	mov    rdi,rax
  4177d6:	call   435907 <flatcc_json_printer_struct_field@@Base>
  4177db:	nop
  4177dc:	leave  
  4177dd:	ret    
  4177de:	endbr64 
  4177e2:	push   rbp
  4177e3:	mov    rbp,rsp
  4177e6:	sub    rsp,0x10
  4177ea:	mov    QWORD PTR [rbp-0x8],rdi
  4177ee:	mov    QWORD PTR [rbp-0x10],rsi
  4177f2:	mov    rsi,QWORD PTR [rbp-0x10]
  4177f6:	mov    rax,QWORD PTR [rbp-0x8]
  4177fa:	sub    rsp,0x8
  4177fe:	lea    rdx,[rip+0xfffffffffffff782]        # 416f87 <_start@@Base+0x10cf7>
  417805:	push   rdx
  417806:	mov    r9d,0x2
  41780c:	mov    r8d,0x5
  417812:	lea    rcx,[rip+0x1f966]        # 43717f <_IO_stdin_used@@Base+0x17f>
  417819:	mov    edx,0x0
  41781e:	mov    rdi,rax
  417821:	call   42fea9 <flatcc_json_printer_int8_enum_field@@Base>
  417826:	add    rsp,0x10
  41782a:	mov    rsi,QWORD PTR [rbp-0x10]
  41782e:	mov    rax,QWORD PTR [rbp-0x8]
  417832:	sub    rsp,0x8
  417836:	lea    rdx,[rip+0xfffffffffffff74a]        # 416f87 <_start@@Base+0x10cf7>
  41783d:	push   rdx
  41783e:	mov    r9d,0x2
  417844:	mov    r8d,0x6
  41784a:	lea    rcx,[rip+0x1f934]        # 437185 <_IO_stdin_used@@Base+0x185>
  417851:	mov    edx,0x1
  417856:	mov    rdi,rax
  417859:	call   42fea9 <flatcc_json_printer_int8_enum_field@@Base>
  41785e:	add    rsp,0x10
  417862:	mov    rsi,QWORD PTR [rbp-0x10]
  417866:	mov    rax,QWORD PTR [rbp-0x8]
  41786a:	mov    r9d,0x2
  417870:	mov    r8d,0x2
  417876:	lea    rcx,[rip+0x1f90f]        # 43718c <_IO_stdin_used@@Base+0x18c>
  41787d:	mov    edx,0x2
  417882:	mov    rdi,rax
  417885:	call   42ef77 <flatcc_json_printer_uint8_field@@Base>
  41788a:	mov    rsi,QWORD PTR [rbp-0x10]
  41788e:	mov    rax,QWORD PTR [rbp-0x8]
  417892:	mov    r9d,0x2
  417898:	mov    r8d,0x3
  41789e:	lea    rcx,[rip+0x1f8ea]        # 43718f <_IO_stdin_used@@Base+0x18f>
  4178a5:	mov    edx,0x3
  4178aa:	mov    rdi,rax
  4178ad:	call   42ef77 <flatcc_json_printer_uint8_field@@Base>
  4178b2:	nop
  4178b3:	leave  
  4178b4:	ret    
  4178b5:	endbr64 
  4178b9:	push   rbp
  4178ba:	mov    rbp,rsp
  4178bd:	sub    rsp,0x10
  4178c1:	mov    QWORD PTR [rbp-0x8],rdi
  4178c5:	mov    QWORD PTR [rbp-0x10],rsi
  4178c9:	mov    rsi,QWORD PTR [rbp-0x10]
  4178cd:	mov    rax,QWORD PTR [rbp-0x8]
  4178d1:	lea    r9,[rip+0xfffffffffffffc00]        # 4174d8 <_start@@Base+0x11248>
  4178d8:	mov    r8d,0x6
  4178de:	lea    rcx,[rip+0x1f8ae]        # 437193 <_IO_stdin_used@@Base+0x193>
  4178e5:	mov    edx,0x0
  4178ea:	mov    rdi,rax
  4178ed:	call   435907 <flatcc_json_printer_struct_field@@Base>
  4178f2:	mov    rsi,QWORD PTR [rbp-0x10]
  4178f6:	mov    rax,QWORD PTR [rbp-0x8]
  4178fa:	sub    rsp,0x8
  4178fe:	lea    rdx,[rip+0xfffffffffffff43b]        # 416d40 <_start@@Base+0x10ab0>
  417905:	push   rdx
  417906:	mov    r9d,0x0
  41790c:	mov    r8d,0x6
  417912:	lea    rcx,[rip+0x1f881]        # 43719a <_IO_stdin_used@@Base+0x19a>
  417919:	mov    edx,0x1
  41791e:	mov    rdi,rax
  417921:	call   4301f5 <flatcc_json_printer_int64_enum_field@@Base>
  417926:	add    rsp,0x10
  41792a:	mov    rsi,QWORD PTR [rbp-0x10]
  41792e:	mov    rax,QWORD PTR [rbp-0x8]
  417932:	sub    rsp,0x8
  417936:	lea    rdx,[rip+0xfffffffffffff403]        # 416d40 <_start@@Base+0x10ab0>
  41793d:	push   rdx
  41793e:	mov    r9d,0x0
  417944:	mov    r8d,0x7
  41794a:	lea    rcx,[rip+0x1f850]        # 4371a1 <_IO_stdin_used@@Base+0x1a1>
  417951:	mov    edx,0x2
  417956:	mov    rdi,rax
  417959:	call   4301f5 <flatcc_json_printer_int64_enum_field@@Base>
  41795e:	add    rsp,0x10
  417962:	mov    rsi,QWORD PTR [rbp-0x10]
  417966:	mov    rax,QWORD PTR [rbp-0x8]
  41796a:	mov    r9d,0x0
  417970:	mov    r8d,0x7
  417976:	lea    rcx,[rip+0x1f82c]        # 4371a9 <_IO_stdin_used@@Base+0x1a9>
  41797d:	mov    edx,0x3
  417982:	mov    rdi,rax
  417985:	call   42f53a <flatcc_json_printer_int32_field@@Base>
  41798a:	mov    rsi,QWORD PTR [rbp-0x10]
  41798e:	mov    rax,QWORD PTR [rbp-0x8]
  417992:	sub    rsp,0x8
  417996:	lea    rdx,[rip+0xfffffffffffff3a3]        # 416d40 <_start@@Base+0x10ab0>
  41799d:	push   rdx
  41799e:	mov    r9d,0x0
  4179a4:	mov    r8d,0x7
  4179aa:	lea    rcx,[rip+0x1f800]        # 4371b1 <_IO_stdin_used@@Base+0x1b1>
  4179b1:	mov    edx,0x4
  4179b6:	mov    rdi,rax
  4179b9:	call   4301f5 <flatcc_json_printer_int64_enum_field@@Base>
  4179be:	add    rsp,0x10
  4179c2:	mov    rsi,QWORD PTR [rbp-0x10]
  4179c6:	mov    rax,QWORD PTR [rbp-0x8]
  4179ca:	mov    r9d,0x0
  4179d0:	mov    r8d,0x7
  4179d6:	lea    rcx,[rip+0x1f7dc]        # 4371b9 <_IO_stdin_used@@Base+0x1b9>
  4179dd:	mov    edx,0x5
  4179e2:	mov    rdi,rax
  4179e5:	call   42f62a <flatcc_json_printer_int64_field@@Base>
  4179ea:	nop
  4179eb:	leave  
  4179ec:	ret    
  4179ed:	endbr64 
  4179f1:	push   rbp
  4179f2:	mov    rbp,rsp
  4179f5:	sub    rsp,0x10
  4179f9:	mov    QWORD PTR [rbp-0x8],rdi
  4179fd:	mov    QWORD PTR [rbp-0x10],rsi
  417a01:	mov    rsi,QWORD PTR [rbp-0x10]
  417a05:	mov    rax,QWORD PTR [rbp-0x8]
  417a09:	mov    r8d,0x2
  417a0f:	lea    rcx,[rip+0x1f740]        # 437156 <_IO_stdin_used@@Base+0x156>
  417a16:	mov    edx,0x0
  417a1b:	mov    rdi,rax
  417a1e:	call   42ee1a <flatcc_json_printer_string_field@@Base>
  417a23:	mov    rsi,QWORD PTR [rbp-0x10]
  417a27:	mov    rax,QWORD PTR [rbp-0x8]
  417a2b:	mov    r9d,0x0
  417a31:	mov    r8d,0x3
  417a37:	lea    rcx,[rip+0x1f783]        # 4371c1 <_IO_stdin_used@@Base+0x1c1>
  417a3e:	mov    edx,0x1
  417a43:	mov    rdi,rax
  417a46:	call   42f62a <flatcc_json_printer_int64_field@@Base>
  417a4b:	mov    rsi,QWORD PTR [rbp-0x10]
  417a4f:	mov    rax,QWORD PTR [rbp-0x8]
  417a53:	mov    r9d,0x0
  417a59:	mov    r8d,0x5
  417a5f:	lea    rcx,[rip+0x1f75f]        # 4371c5 <_IO_stdin_used@@Base+0x1c5>
  417a66:	mov    edx,0x2
  417a6b:	mov    rdi,rax
  417a6e:	call   42f06c <flatcc_json_printer_uint16_field@@Base>
  417a73:	nop
  417a74:	leave  
  417a75:	ret    
  417a76:	endbr64 
  417a7a:	push   rbp
  417a7b:	mov    rbp,rsp
  417a7e:	sub    rsp,0x10
  417a82:	mov    QWORD PTR [rbp-0x8],rdi
  417a86:	mov    QWORD PTR [rbp-0x10],rsi
  417a8a:	mov    rsi,QWORD PTR [rbp-0x10]
  417a8e:	mov    rax,QWORD PTR [rbp-0x8]
  417a92:	lea    r9,[rip+0x7f]        # 417b18 <_start@@Base+0x11888>
  417a99:	mov    r8d,0x6
  417a9f:	lea    rcx,[rip+0x1f725]        # 4371cb <_IO_stdin_used@@Base+0x1cb>
  417aa6:	mov    edx,0x0
  417aab:	mov    rdi,rax
  417aae:	call   43532f <flatcc_json_printer_table_field@@Base>
  417ab3:	mov    rsi,QWORD PTR [rbp-0x10]
  417ab7:	mov    rax,QWORD PTR [rbp-0x8]
  417abb:	lea    r9,[rip+0xbb1]        # 418673 <_start@@Base+0x123e3>
  417ac2:	mov    r8d,0x5
  417ac8:	lea    rcx,[rip+0x1f703]        # 4371d2 <_IO_stdin_used@@Base+0x1d2>
  417acf:	mov    edx,0x1
  417ad4:	mov    rdi,rax
  417ad7:	call   43532f <flatcc_json_printer_table_field@@Base>
  417adc:	mov    rsi,QWORD PTR [rbp-0x10]
  417ae0:	mov    rax,QWORD PTR [rbp-0x8]
  417ae4:	sub    rsp,0x8
  417ae8:	lea    rdx,[rip+0xfffffffffffff73b]        # 41722a <_start@@Base+0x10f9a>
  417aef:	push   rdx
  417af0:	lea    r9,[rip+0xfffffffffffff679]        # 417170 <_start@@Base+0x10ee0>
  417af7:	mov    r8d,0x7
  417afd:	lea    rcx,[rip+0x1f6d4]        # 4371d8 <_IO_stdin_used@@Base+0x1d8>
  417b04:	mov    edx,0x3
  417b09:	mov    rdi,rax
  417b0c:	call   434e53 <flatcc_json_printer_union_vector_field@@Base>
  417b11:	add    rsp,0x10
  417b15:	nop
  417b16:	leave  
  417b17:	ret    
  417b18:	endbr64 
  417b1c:	push   rbp
  417b1d:	mov    rbp,rsp
  417b20:	sub    rsp,0x10
  417b24:	mov    QWORD PTR [rbp-0x8],rdi
  417b28:	mov    QWORD PTR [rbp-0x10],rsi
  417b2c:	mov    rsi,QWORD PTR [rbp-0x10]
  417b30:	mov    rax,QWORD PTR [rbp-0x8]
  417b34:	lea    r9,[rip+0x6f]        # 417baa <_start@@Base+0x1191a>
  417b3b:	mov    r8d,0x15
  417b41:	lea    rcx,[rip+0x1f698]        # 4371e0 <_IO_stdin_used@@Base+0x1e0>
  417b48:	mov    edx,0x0
  417b4d:	mov    rdi,rax
  417b50:	call   43532f <flatcc_json_printer_table_field@@Base>
  417b55:	mov    rsi,QWORD PTR [rbp-0x10]
  417b59:	mov    rax,QWORD PTR [rbp-0x8]
  417b5d:	lea    r9,[rip+0x1b3]        # 417d17 <_start@@Base+0x11a87>
  417b64:	mov    r8d,0x16
  417b6a:	lea    rcx,[rip+0x1f685]        # 4371f6 <_IO_stdin_used@@Base+0x1f6>
  417b71:	mov    edx,0x1
  417b76:	mov    rdi,rax
  417b79:	call   43532f <flatcc_json_printer_table_field@@Base>
  417b7e:	mov    rsi,QWORD PTR [rbp-0x10]
  417b82:	mov    rax,QWORD PTR [rbp-0x8]
  417b86:	lea    r9,[rip+0x1f1]        # 417d7e <_start@@Base+0x11aee>
  417b8d:	mov    r8d,0x16
  417b93:	lea    rcx,[rip+0x1f673]        # 43720d <_IO_stdin_used@@Base+0x20d>
  417b9a:	mov    edx,0x2
  417b9f:	mov    rdi,rax
  417ba2:	call   43532f <flatcc_json_printer_table_field@@Base>
  417ba7:	nop
  417ba8:	leave  
  417ba9:	ret    
  417baa:	endbr64 
  417bae:	push   rbp
  417baf:	mov    rbp,rsp
  417bb2:	sub    rsp,0x10
  417bb6:	mov    QWORD PTR [rbp-0x8],rdi
  417bba:	mov    QWORD PTR [rbp-0x10],rsi
  417bbe:	mov    rsi,QWORD PTR [rbp-0x10]
  417bc2:	mov    rax,QWORD PTR [rbp-0x8]
  417bc6:	mov    r8d,0x4
  417bcc:	lea    rcx,[rip+0x1f651]        # 437224 <_IO_stdin_used@@Base+0x224>
  417bd3:	mov    edx,0x0
  417bd8:	mov    rdi,rax
  417bdb:	call   42ee1a <flatcc_json_printer_string_field@@Base>
  417be0:	mov    rsi,QWORD PTR [rbp-0x10]
  417be4:	mov    rax,QWORD PTR [rbp-0x8]
  417be8:	mov    r9d,0x0
  417bee:	mov    r8d,0x9
  417bf4:	lea    rcx,[rip+0x1f62e]        # 437229 <_IO_stdin_used@@Base+0x229>
  417bfb:	mov    edx,0x1
  417c00:	mov    rdi,rax
  417c03:	call   42f165 <flatcc_json_printer_uint32_field@@Base>
  417c08:	mov    rsi,QWORD PTR [rbp-0x10]
  417c0c:	mov    rax,QWORD PTR [rbp-0x8]
  417c10:	mov    r8d,0x4
  417c16:	lea    rcx,[rip+0x1f616]        # 437233 <_IO_stdin_used@@Base+0x233>
  417c1d:	mov    edx,0x2
  417c22:	mov    rdi,rax
  417c25:	call   42ee1a <flatcc_json_printer_string_field@@Base>
  417c2a:	mov    rsi,QWORD PTR [rbp-0x10]
  417c2e:	mov    rax,QWORD PTR [rbp-0x8]
  417c32:	mov    r9d,0x0
  417c38:	mov    r8d,0x8
  417c3e:	lea    rcx,[rip+0x1f5f3]        # 437238 <_IO_stdin_used@@Base+0x238>
  417c45:	mov    edx,0x3
  417c4a:	mov    rdi,rax
  417c4d:	call   42f62a <flatcc_json_printer_int64_field@@Base>
  417c52:	mov    rsi,QWORD PTR [rbp-0x10]
  417c56:	mov    rax,QWORD PTR [rbp-0x8]
  417c5a:	mov    r8d,0x4
  417c60:	lea    rcx,[rip+0x1f5da]        # 437241 <_IO_stdin_used@@Base+0x241>
  417c67:	mov    edx,0x4
  417c6c:	mov    rdi,rax
  417c6f:	call   42ee1a <flatcc_json_printer_string_field@@Base>
  417c74:	mov    rsi,QWORD PTR [rbp-0x10]
  417c78:	mov    rax,QWORD PTR [rbp-0x8]
  417c7c:	mov    r9d,0x0
  417c82:	mov    r8d,0x8
  417c88:	lea    rcx,[rip+0x1f5b7]        # 437246 <_IO_stdin_used@@Base+0x246>
  417c8f:	mov    edx,0x5
  417c94:	mov    rdi,rax
  417c97:	call   42f62a <flatcc_json_printer_int64_field@@Base>
  417c9c:	mov    rsi,QWORD PTR [rbp-0x10]
  417ca0:	mov    rax,QWORD PTR [rbp-0x8]
  417ca4:	mov    r9d,0x0
  417caa:	mov    r8d,0x9
  417cb0:	lea    rcx,[rip+0x1f598]        # 43724f <_IO_stdin_used@@Base+0x24f>
  417cb7:	mov    edx,0x6
  417cbc:	mov    rdi,rax
  417cbf:	call   42f165 <flatcc_json_printer_uint32_field@@Base>
  417cc4:	mov    rsi,QWORD PTR [rbp-0x10]
  417cc8:	mov    rax,QWORD PTR [rbp-0x8]
  417ccc:	mov    r9d,0x0
  417cd2:	mov    r8d,0x8
  417cd8:	lea    rcx,[rip+0x1f57a]        # 437259 <_IO_stdin_used@@Base+0x259>
  417cdf:	mov    edx,0x7
  417ce4:	mov    rdi,rax
  417ce7:	call   42f62a <flatcc_json_printer_int64_field@@Base>
  417cec:	mov    rsi,QWORD PTR [rbp-0x10]
  417cf0:	mov    rax,QWORD PTR [rbp-0x8]
  417cf4:	mov    r9d,0x0
  417cfa:	mov    r8d,0x9
  417d00:	lea    rcx,[rip+0x1f55b]        # 437262 <_IO_stdin_used@@Base+0x262>
  417d07:	mov    edx,0x8
  417d0c:	mov    rdi,rax
  417d0f:	call   42f165 <flatcc_json_printer_uint32_field@@Base>
  417d14:	nop
  417d15:	leave  
  417d16:	ret    
  417d17:	endbr64 
  417d1b:	push   rbp
  417d1c:	mov    rbp,rsp
  417d1f:	sub    rsp,0x10
  417d23:	mov    QWORD PTR [rbp-0x8],rdi
  417d27:	mov    QWORD PTR [rbp-0x10],rsi
  417d2b:	mov    rsi,QWORD PTR [rbp-0x10]
  417d2f:	mov    rax,QWORD PTR [rbp-0x8]
  417d33:	mov    r9d,0x0
  417d39:	mov    r8d,0xf
  417d3f:	lea    rcx,[rip+0x1f526]        # 43726c <_IO_stdin_used@@Base+0x26c>
  417d46:	mov    edx,0x0
  417d4b:	mov    rdi,rax
  417d4e:	call   42f62a <flatcc_json_printer_int64_field@@Base>
  417d53:	mov    rsi,QWORD PTR [rbp-0x10]
  417d57:	mov    rax,QWORD PTR [rbp-0x8]
  417d5b:	mov    r9d,0x0
  417d61:	mov    r8d,0x10
  417d67:	lea    rcx,[rip+0x1f50e]        # 43727c <_IO_stdin_used@@Base+0x27c>
  417d6e:	mov    edx,0x1
  417d73:	mov    rdi,rax
  417d76:	call   42f165 <flatcc_json_printer_uint32_field@@Base>
  417d7b:	nop
  417d7c:	leave  
  417d7d:	ret    
  417d7e:	endbr64 
  417d82:	push   rbp
  417d83:	mov    rbp,rsp
  417d86:	sub    rsp,0x10
  417d8a:	mov    QWORD PTR [rbp-0x8],rdi
  417d8e:	mov    QWORD PTR [rbp-0x10],rsi
  417d92:	mov    rsi,QWORD PTR [rbp-0x10]
  417d96:	mov    rax,QWORD PTR [rbp-0x8]
  417d9a:	mov    r9d,0x0
  417da0:	mov    r8d,0xf
  417da6:	lea    rcx,[rip+0x1f4bf]        # 43726c <_IO_stdin_used@@Base+0x26c>
  417dad:	mov    edx,0x0
  417db2:	mov    rdi,rax
  417db5:	call   42f62a <flatcc_json_printer_int64_field@@Base>
  417dba:	mov    rsi,QWORD PTR [rbp-0x10]
  417dbe:	mov    rax,QWORD PTR [rbp-0x8]
  417dc2:	mov    r9d,0x0
  417dc8:	mov    r8d,0x15
  417dce:	lea    rcx,[rip+0x1f4b8]        # 43728d <_IO_stdin_used@@Base+0x28d>
  417dd5:	mov    edx,0x1
  417dda:	mov    rdi,rax
  417ddd:	call   42f165 <flatcc_json_printer_uint32_field@@Base>
  417de2:	nop
  417de3:	leave  
  417de4:	ret    
  417de5:	endbr64 
  417de9:	push   rbp
  417dea:	mov    rbp,rsp
  417ded:	sub    rsp,0x10
  417df1:	mov    QWORD PTR [rbp-0x8],rdi
  417df5:	mov    QWORD PTR [rbp-0x10],rsi
  417df9:	mov    rsi,QWORD PTR [rbp-0x10]
  417dfd:	mov    rax,QWORD PTR [rbp-0x8]
  417e01:	mov    r9d,0x0
  417e07:	mov    r8d,0x4
  417e0d:	lea    rcx,[rip+0x1f48f]        # 4372a3 <_IO_stdin_used@@Base+0x2a3>
  417e14:	mov    edx,0x0
  417e19:	mov    rdi,rax
  417e1c:	call   42eebb <flatcc_json_printer_uint8_vector_base64_field@@Base>
  417e21:	mov    rsi,QWORD PTR [rbp-0x10]
  417e25:	mov    rax,QWORD PTR [rbp-0x8]
  417e29:	mov    r9d,0x1
  417e2f:	mov    r8d,0x7
  417e35:	lea    rcx,[rip+0x1f46c]        # 4372a8 <_IO_stdin_used@@Base+0x2a8>
  417e3c:	mov    edx,0x1
  417e41:	mov    rdi,rax
  417e44:	call   42eebb <flatcc_json_printer_uint8_vector_base64_field@@Base>
  417e49:	mov    rsi,QWORD PTR [rbp-0x10]
  417e4d:	mov    rax,QWORD PTR [rbp-0x8]
  417e51:	mov    r9d,0x0
  417e57:	mov    r8d,0x6
  417e5d:	lea    rcx,[rip+0x1f44c]        # 4372b0 <_IO_stdin_used@@Base+0x2b0>
  417e64:	mov    edx,0x2
  417e69:	mov    rdi,rax
  417e6c:	call   42eebb <flatcc_json_printer_uint8_vector_base64_field@@Base>
  417e71:	nop
  417e72:	leave  
  417e73:	ret    
  417e74:	endbr64 
  417e78:	push   rbp
  417e79:	mov    rbp,rsp
  417e7c:	sub    rsp,0x10
  417e80:	mov    QWORD PTR [rbp-0x8],rdi
  417e84:	mov    QWORD PTR [rbp-0x10],rsi
  417e88:	mov    rsi,QWORD PTR [rbp-0x10]
  417e8c:	mov    rax,QWORD PTR [rbp-0x8]
  417e90:	lea    r9,[rip+0xfffffffffffff6cc]        # 417563 <_start@@Base+0x112d3>
  417e97:	mov    r8d,0x3
  417e9d:	lea    rcx,[rip+0x1f413]        # 4372b7 <_IO_stdin_used@@Base+0x2b7>
  417ea4:	mov    edx,0x0
  417ea9:	mov    rdi,rax
  417eac:	call   435907 <flatcc_json_printer_struct_field@@Base>
  417eb1:	mov    rsi,QWORD PTR [rbp-0x10]
  417eb5:	mov    rax,QWORD PTR [rbp-0x8]
  417eb9:	mov    r9d,0x96
  417ebf:	mov    r8d,0x4
  417ec5:	lea    rcx,[rip+0x1f3ef]        # 4372bb <_IO_stdin_used@@Base+0x2bb>
  417ecc:	mov    edx,0x1
  417ed1:	mov    rdi,rax
  417ed4:	call   42f441 <flatcc_json_printer_int16_field@@Base>
  417ed9:	mov    rsi,QWORD PTR [rbp-0x10]
  417edd:	mov    rax,QWORD PTR [rbp-0x8]
  417ee1:	mov    r9d,0x64
  417ee7:	mov    r8d,0x2
  417eed:	lea    rcx,[rip+0x1f3cc]        # 4372c0 <_IO_stdin_used@@Base+0x2c0>
  417ef4:	mov    edx,0x2
  417ef9:	mov    rdi,rax
  417efc:	call   42f441 <flatcc_json_printer_int16_field@@Base>
  417f01:	mov    rsi,QWORD PTR [rbp-0x10]
  417f05:	mov    rax,QWORD PTR [rbp-0x8]
  417f09:	mov    r8d,0x4
  417f0f:	lea    rcx,[rip+0x1f3ad]        # 4372c3 <_IO_stdin_used@@Base+0x2c3>
  417f16:	mov    edx,0x3
  417f1b:	mov    rdi,rax
  417f1e:	call   42ee1a <flatcc_json_printer_string_field@@Base>
  417f23:	mov    rsi,QWORD PTR [rbp-0x10]
  417f27:	mov    rax,QWORD PTR [rbp-0x8]
  417f2b:	mov    r8d,0x9
  417f31:	lea    rcx,[rip+0x1f390]        # 4372c8 <_IO_stdin_used@@Base+0x2c8>
  417f38:	mov    edx,0x5
  417f3d:	mov    rdi,rax
  417f40:	call   431466 <flatcc_json_printer_uint8_vector_field@@Base>
  417f45:	mov    rsi,QWORD PTR [rbp-0x10]
  417f49:	mov    rax,QWORD PTR [rbp-0x8]
  417f4d:	sub    rsp,0x8
  417f51:	lea    rdx,[rip+0xfffffffffffff02f]        # 416f87 <_start@@Base+0x10cf7>
  417f58:	push   rdx
  417f59:	mov    r9d,0x8
  417f5f:	mov    r8d,0x5
  417f65:	lea    rcx,[rip+0x1f213]        # 43717f <_IO_stdin_used@@Base+0x17f>
  417f6c:	mov    edx,0x6
  417f71:	mov    rdi,rax
  417f74:	call   42fea9 <flatcc_json_printer_int8_enum_field@@Base>
  417f79:	add    rsp,0x10
  417f7d:	mov    rsi,QWORD PTR [rbp-0x10]
  417f81:	mov    rax,QWORD PTR [rbp-0x8]
  417f85:	sub    rsp,0x8
  417f89:	lea    rdx,[rip+0xfffffffffffff29a]        # 41722a <_start@@Base+0x10f9a>
  417f90:	push   rdx
  417f91:	lea    r9,[rip+0xfffffffffffff1d8]        # 417170 <_start@@Base+0x10ee0>
  417f98:	mov    r8d,0x4
  417f9e:	lea    rcx,[rip+0x1f32d]        # 4372d2 <_IO_stdin_used@@Base+0x2d2>
  417fa5:	mov    edx,0x8
  417faa:	mov    rdi,rax
  417fad:	call   4353e7 <flatcc_json_printer_union_field@@Base>
  417fb2:	add    rsp,0x10
  417fb6:	mov    rsi,QWORD PTR [rbp-0x10]
  417fba:	mov    rax,QWORD PTR [rbp-0x8]
  417fbe:	sub    rsp,0x8
  417fc2:	lea    rdx,[rip+0xfffffffffffff522]        # 4174eb <_start@@Base+0x1125b>
  417fc9:	push   rdx
  417fca:	mov    r9d,0x4
  417fd0:	mov    r8d,0x5
  417fd6:	lea    rcx,[rip+0x1f2fa]        # 4372d7 <_IO_stdin_used@@Base+0x2d7>
  417fdd:	mov    edx,0x9
  417fe2:	mov    rdi,rax
  417fe5:	call   434769 <flatcc_json_printer_struct_vector_field@@Base>
  417fea:	add    rsp,0x10
  417fee:	mov    rsi,QWORD PTR [rbp-0x10]
  417ff2:	mov    rax,QWORD PTR [rbp-0x8]
  417ff6:	mov    r8d,0x11
  417ffc:	lea    rcx,[rip+0x1f2da]        # 4372dd <_IO_stdin_used@@Base+0x2dd>
  418003:	mov    edx,0xa
  418008:	mov    rdi,rax
  41800b:	call   434a79 <flatcc_json_printer_string_vector_field@@Base>
  418010:	mov    rsi,QWORD PTR [rbp-0x10]
  418014:	mov    rax,QWORD PTR [rbp-0x8]
  418018:	lea    r9,[rip+0xfffffffffffffe55]        # 417e74 <_start@@Base+0x11be4>
  41801f:	mov    r8d,0x11
  418025:	lea    rcx,[rip+0x1f2c3]        # 4372ef <_IO_stdin_used@@Base+0x2ef>
  41802c:	mov    edx,0xb
  418031:	mov    rdi,rax
  418034:	call   434c95 <flatcc_json_printer_table_vector_field@@Base>
  418039:	mov    rsi,QWORD PTR [rbp-0x10]
  41803d:	mov    rax,QWORD PTR [rbp-0x8]
  418041:	lea    r9,[rip+0xfffffffffffffe2c]        # 417e74 <_start@@Base+0x11be4>
  418048:	mov    r8d,0x5
  41804e:	lea    rcx,[rip+0x1f2ac]        # 437301 <_IO_stdin_used@@Base+0x301>
  418055:	mov    edx,0xc
  41805a:	mov    rdi,rax
  41805d:	call   43532f <flatcc_json_printer_table_field@@Base>
  418062:	mov    rsi,QWORD PTR [rbp-0x10]
  418066:	mov    rax,QWORD PTR [rbp-0x8]
  41806a:	sub    rsp,0x8
  41806e:	lea    rdx,[rip+0xfffffffffffffdff]        # 417e74 <_start@@Base+0x11be4>
  418075:	push   rdx
  418076:	mov    r9d,0x0
  41807c:	mov    r8d,0x14
  418082:	lea    rcx,[rip+0x1f27e]        # 437307 <_IO_stdin_used@@Base+0x307>
  418089:	mov    edx,0xd
  41808e:	mov    rdi,rax
  418091:	call   435ef0 <flatcc_json_printer_table_as_nested_root@@Base>
  418096:	add    rsp,0x10
  41809a:	mov    rsi,QWORD PTR [rbp-0x10]
  41809e:	mov    rax,QWORD PTR [rbp-0x8]
  4180a2:	lea    r9,[rip+0xfffffffffffff944]        # 4179ed <_start@@Base+0x1175d>
  4180a9:	mov    r8d,0x9
  4180af:	lea    rcx,[rip+0x1f266]        # 43731c <_IO_stdin_used@@Base+0x31c>
  4180b6:	mov    edx,0xe
  4180bb:	mov    rdi,rax
  4180be:	call   43532f <flatcc_json_printer_table_field@@Base>
  4180c3:	mov    rsi,QWORD PTR [rbp-0x10]
  4180c7:	mov    rax,QWORD PTR [rbp-0x8]
  4180cb:	mov    r9d,0x1
  4180d1:	mov    r8d,0x8
  4180d7:	lea    rcx,[rip+0x1f248]        # 437326 <_IO_stdin_used@@Base+0x326>
  4180de:	mov    edx,0xf
  4180e3:	mov    rdi,rax
  4180e6:	call   42f721 <flatcc_json_printer_bool_field@@Base>
  4180eb:	mov    rsi,QWORD PTR [rbp-0x10]
  4180ef:	mov    rax,QWORD PTR [rbp-0x8]
  4180f3:	mov    r9d,0x0
  4180f9:	mov    r8d,0x10
  4180ff:	lea    rcx,[rip+0x1f229]        # 43732f <_IO_stdin_used@@Base+0x32f>
  418106:	mov    edx,0x10
  41810b:	mov    rdi,rax
  41810e:	call   42f53a <flatcc_json_printer_int32_field@@Base>
  418113:	mov    rsi,QWORD PTR [rbp-0x10]
  418117:	mov    rax,QWORD PTR [rbp-0x8]
  41811b:	mov    r9d,0x0
  418121:	mov    r8d,0x10
  418127:	lea    rcx,[rip+0x1f212]        # 437340 <_IO_stdin_used@@Base+0x340>
  41812e:	mov    edx,0x11
  418133:	mov    rdi,rax
  418136:	call   42f165 <flatcc_json_printer_uint32_field@@Base>
  41813b:	mov    rsi,QWORD PTR [rbp-0x10]
  41813f:	mov    rax,QWORD PTR [rbp-0x8]
  418143:	mov    r9d,0x0
  418149:	mov    r8d,0x10
  41814f:	lea    rcx,[rip+0x1f1fb]        # 437351 <_IO_stdin_used@@Base+0x351>
  418156:	mov    edx,0x12
  41815b:	mov    rdi,rax
  41815e:	call   42f62a <flatcc_json_printer_int64_field@@Base>
  418163:	mov    rsi,QWORD PTR [rbp-0x10]
  418167:	mov    rax,QWORD PTR [rbp-0x8]
  41816b:	mov    r9d,0x0
  418171:	mov    r8d,0x10
  418177:	lea    rcx,[rip+0x1f1e4]        # 437362 <_IO_stdin_used@@Base+0x362>
  41817e:	mov    edx,0x13
  418183:	mov    rdi,rax
  418186:	call   42f255 <flatcc_json_printer_uint64_field@@Base>
  41818b:	mov    rsi,QWORD PTR [rbp-0x10]
  41818f:	mov    rax,QWORD PTR [rbp-0x8]
  418193:	mov    r9d,0x0
  418199:	mov    r8d,0x11
  41819f:	lea    rcx,[rip+0x1f1cd]        # 437373 <_IO_stdin_used@@Base+0x373>
  4181a6:	mov    edx,0x14
  4181ab:	mov    rdi,rax
  4181ae:	call   42f53a <flatcc_json_printer_int32_field@@Base>
  4181b3:	mov    rsi,QWORD PTR [rbp-0x10]
  4181b7:	mov    rax,QWORD PTR [rbp-0x8]
  4181bb:	mov    r9d,0x0
  4181c1:	mov    r8d,0x11
  4181c7:	lea    rcx,[rip+0x1f1b7]        # 437385 <_IO_stdin_used@@Base+0x385>
  4181ce:	mov    edx,0x15
  4181d3:	mov    rdi,rax
  4181d6:	call   42f165 <flatcc_json_printer_uint32_field@@Base>
  4181db:	mov    rsi,QWORD PTR [rbp-0x10]
  4181df:	mov    rax,QWORD PTR [rbp-0x8]
  4181e3:	mov    r9d,0x0
  4181e9:	mov    r8d,0x11
  4181ef:	lea    rcx,[rip+0x1f1a1]        # 437397 <_IO_stdin_used@@Base+0x397>
  4181f6:	mov    edx,0x16
  4181fb:	mov    rdi,rax
  4181fe:	call   42f62a <flatcc_json_printer_int64_field@@Base>
  418203:	mov    rsi,QWORD PTR [rbp-0x10]
  418207:	mov    rax,QWORD PTR [rbp-0x8]
  41820b:	mov    r9d,0x0
  418211:	mov    r8d,0x11
  418217:	lea    rcx,[rip+0x1f18b]        # 4373a9 <_IO_stdin_used@@Base+0x3a9>
  41821e:	mov    edx,0x17
  418223:	mov    rdi,rax
  418226:	call   42f255 <flatcc_json_printer_uint64_field@@Base>
  41822b:	mov    rsi,QWORD PTR [rbp-0x10]
  41822f:	mov    rax,QWORD PTR [rbp-0x8]
  418233:	mov    r8d,0x10
  418239:	lea    rcx,[rip+0x1f17b]        # 4373bb <_IO_stdin_used@@Base+0x3bb>
  418240:	mov    edx,0x18
  418245:	mov    rdi,rax
  418248:	call   4327f2 <flatcc_json_printer_bool_vector_field@@Base>
  41824d:	mov    rsi,QWORD PTR [rbp-0x10]
  418251:	mov    rax,QWORD PTR [rbp-0x8]
  418255:	vmovss xmm0,DWORD PTR [rip+0x22ce7]        # 43af44 <_IO_stdin_used@@Base+0x3f44>
  41825d:	mov    r8d,0x5
  418263:	lea    rcx,[rip+0x1f162]        # 4373cc <_IO_stdin_used@@Base+0x3cc>
  41826a:	mov    edx,0x19
  41826f:	mov    rdi,rax
  418272:	call   42f816 <flatcc_json_printer_float_field@@Base>
  418277:	mov    rsi,QWORD PTR [rbp-0x10]
  41827b:	mov    rax,QWORD PTR [rbp-0x8]
  41827f:	vmovss xmm0,DWORD PTR [rip+0x22cb9]        # 43af40 <_IO_stdin_used@@Base+0x3f40>
  418287:	mov    r8d,0x6
  41828d:	lea    rcx,[rip+0x1f13e]        # 4373d2 <_IO_stdin_used@@Base+0x3d2>
  418294:	mov    edx,0x1a
  418299:	mov    rdi,rax
  41829c:	call   42f816 <flatcc_json_printer_float_field@@Base>
  4182a1:	mov    rsi,QWORD PTR [rbp-0x10]
  4182a5:	mov    rax,QWORD PTR [rbp-0x8]
  4182a9:	vxorps xmm0,xmm0,xmm0
  4182ad:	mov    r8d,0x6
  4182b3:	lea    rcx,[rip+0x1f11f]        # 4373d9 <_IO_stdin_used@@Base+0x3d9>
  4182ba:	mov    edx,0x1b
  4182bf:	mov    rdi,rax
  4182c2:	call   42f816 <flatcc_json_printer_float_field@@Base>
  4182c7:	mov    rsi,QWORD PTR [rbp-0x10]
  4182cb:	mov    rax,QWORD PTR [rbp-0x8]
  4182cf:	mov    r8d,0x12
  4182d5:	lea    rcx,[rip+0x1f104]        # 4373e0 <_IO_stdin_used@@Base+0x3e0>
  4182dc:	mov    edx,0x1c
  4182e1:	mov    rdi,rax
  4182e4:	call   434a79 <flatcc_json_printer_string_vector_field@@Base>
  4182e9:	mov    rsi,QWORD PTR [rbp-0x10]
  4182ed:	mov    rax,QWORD PTR [rbp-0x8]
  4182f1:	sub    rsp,0x8
  4182f5:	lea    rdx,[rip+0xfffffffffffff388]        # 417684 <_start@@Base+0x113f4>
  4182fc:	push   rdx
  4182fd:	mov    r9d,0x8
  418303:	mov    r8d,0x17
  418309:	lea    rcx,[rip+0x1f0e3]        # 4373f3 <_IO_stdin_used@@Base+0x3f3>
  418310:	mov    edx,0x1d
  418315:	mov    rdi,rax
  418318:	call   434769 <flatcc_json_printer_struct_vector_field@@Base>
  41831d:	add    rsp,0x10
  418321:	mov    rsi,QWORD PTR [rbp-0x10]
  418325:	mov    rax,QWORD PTR [rbp-0x8]
  418329:	mov    r8d,0x4
  41832f:	lea    rcx,[rip+0x1f0d5]        # 43740b <_IO_stdin_used@@Base+0x40b>
  418336:	mov    edx,0x1e
  41833b:	mov    rdi,rax
  41833e:	call   431466 <flatcc_json_printer_uint8_vector_field@@Base>
  418343:	mov    rsi,QWORD PTR [rbp-0x10]
  418347:	mov    rax,QWORD PTR [rbp-0x8]
  41834b:	sub    rsp,0x8
  41834f:	lea    rdx,[rip+0xfffffffffffff195]        # 4174eb <_start@@Base+0x1125b>
  418356:	push   rdx
  418357:	mov    r9d,0x4
  41835d:	mov    r8d,0x5
  418363:	lea    rcx,[rip+0x1f0a6]        # 437410 <_IO_stdin_used@@Base+0x410>
  41836a:	mov    edx,0x1f
  41836f:	mov    rdi,rax
  418372:	call   434769 <flatcc_json_printer_struct_vector_field@@Base>
  418377:	add    rsp,0x10
  41837b:	mov    rsi,QWORD PTR [rbp-0x10]
  41837f:	mov    rax,QWORD PTR [rbp-0x8]
  418383:	mov    r8d,0xf
  418389:	lea    rcx,[rip+0x1f086]        # 437416 <_IO_stdin_used@@Base+0x416>
  418390:	mov    edx,0x20
  418395:	mov    rdi,rax
  418398:	call   432581 <flatcc_json_printer_int64_vector_field@@Base>
  41839d:	mov    rsi,QWORD PTR [rbp-0x10]
  4183a1:	mov    rax,QWORD PTR [rbp-0x8]
  4183a5:	mov    r8d,0x11
  4183ab:	lea    rcx,[rip+0x1f074]        # 437426 <_IO_stdin_used@@Base+0x426>
  4183b2:	mov    edx,0x21
  4183b7:	mov    rdi,rax
  4183ba:	call   432cec <flatcc_json_printer_double_vector_field@@Base>
  4183bf:	mov    rsi,QWORD PTR [rbp-0x10]
  4183c3:	mov    rax,QWORD PTR [rbp-0x8]
  4183c7:	lea    r9,[rip+0xfffffffffffff397]        # 417765 <_start@@Base+0x114d5>
  4183ce:	mov    r8d,0x15
  4183d4:	lea    rcx,[rip+0x1f05d]        # 437438 <_IO_stdin_used@@Base+0x438>
  4183db:	mov    edx,0x22
  4183e0:	mov    rdi,rax
  4183e3:	call   43532f <flatcc_json_printer_table_field@@Base>
  4183e8:	mov    rsi,QWORD PTR [rbp-0x10]
  4183ec:	mov    rax,QWORD PTR [rbp-0x8]
  4183f0:	lea    r9,[rip+0xfffffffffffff9ee]        # 417de5 <_start@@Base+0x11b55>
  4183f7:	mov    r8d,0xa
  4183fd:	lea    rcx,[rip+0x1f04a]        # 43744e <_IO_stdin_used@@Base+0x44e>
  418404:	mov    edx,0x23
  418409:	mov    rdi,rax
  41840c:	call   43532f <flatcc_json_printer_table_field@@Base>
  418411:	nop
  418412:	leave  
  418413:	ret    
  418414:	push   rbp
  418415:	mov    rbp,rsp
  418418:	sub    rsp,0x20
  41841c:	mov    QWORD PTR [rbp-0x8],rdi
  418420:	mov    QWORD PTR [rbp-0x10],rsi
  418424:	mov    QWORD PTR [rbp-0x18],rdx
  418428:	mov    QWORD PTR [rbp-0x20],rcx
  41842c:	mov    rcx,QWORD PTR [rbp-0x20]
  418430:	mov    rdx,QWORD PTR [rbp-0x18]
  418434:	mov    rsi,QWORD PTR [rbp-0x10]
  418438:	mov    rax,QWORD PTR [rbp-0x8]
  41843c:	lea    r8,[rip+0xfffffffffffffa31]        # 417e74 <_start@@Base+0x11be4>
  418443:	mov    rdi,rax
  418446:	call   435c90 <flatcc_json_printer_table_as_root@@Base>
  41844b:	leave  
  41844c:	ret    
  41844d:	endbr64 
  418451:	push   rbp
  418452:	mov    rbp,rsp
  418455:	sub    rsp,0x10
  418459:	mov    QWORD PTR [rbp-0x8],rdi
  41845d:	mov    QWORD PTR [rbp-0x10],rsi
  418461:	mov    rsi,QWORD PTR [rbp-0x10]
  418465:	mov    rax,QWORD PTR [rbp-0x8]
  418469:	mov    r9d,0x0
  41846f:	mov    r8d,0x2
  418475:	lea    rcx,[rip+0x1efdd]        # 437459 <_IO_stdin_used@@Base+0x459>
  41847c:	mov    edx,0x0
  418481:	mov    rdi,rax
  418484:	call   42f34c <flatcc_json_printer_int8_field@@Base>
  418489:	mov    rsi,QWORD PTR [rbp-0x10]
  41848d:	mov    rax,QWORD PTR [rbp-0x8]
  418491:	mov    r9d,0x0
  418497:	mov    r8d,0x2
  41849d:	lea    rcx,[rip+0x1efb8]        # 43745c <_IO_stdin_used@@Base+0x45c>
  4184a4:	mov    edx,0x1
  4184a9:	mov    rdi,rax
  4184ac:	call   42ef77 <flatcc_json_printer_uint8_field@@Base>
  4184b1:	mov    rsi,QWORD PTR [rbp-0x10]
  4184b5:	mov    rax,QWORD PTR [rbp-0x8]
  4184b9:	mov    r9d,0x0
  4184bf:	mov    r8d,0x3
  4184c5:	lea    rcx,[rip+0x1ef93]        # 43745f <_IO_stdin_used@@Base+0x45f>
  4184cc:	mov    edx,0x2
  4184d1:	mov    rdi,rax
  4184d4:	call   42f441 <flatcc_json_printer_int16_field@@Base>
  4184d9:	mov    rsi,QWORD PTR [rbp-0x10]
  4184dd:	mov    rax,QWORD PTR [rbp-0x8]
  4184e1:	mov    r9d,0x0
  4184e7:	mov    r8d,0x3
  4184ed:	lea    rcx,[rip+0x1ef6f]        # 437463 <_IO_stdin_used@@Base+0x463>
  4184f4:	mov    edx,0x3
  4184f9:	mov    rdi,rax
  4184fc:	call   42f06c <flatcc_json_printer_uint16_field@@Base>
  418501:	mov    rsi,QWORD PTR [rbp-0x10]
  418505:	mov    rax,QWORD PTR [rbp-0x8]
  418509:	mov    r9d,0x0
  41850f:	mov    r8d,0x3
  418515:	lea    rcx,[rip+0x1ef4b]        # 437467 <_IO_stdin_used@@Base+0x467>
  41851c:	mov    edx,0x4
  418521:	mov    rdi,rax
  418524:	call   42f53a <flatcc_json_printer_int32_field@@Base>
  418529:	mov    rsi,QWORD PTR [rbp-0x10]
  41852d:	mov    rax,QWORD PTR [rbp-0x8]
  418531:	mov    r9d,0x0
  418537:	mov    r8d,0x3
  41853d:	lea    rcx,[rip+0x1ef27]        # 43746b <_IO_stdin_used@@Base+0x46b>
  418544:	mov    edx,0x5
  418549:	mov    rdi,rax
  41854c:	call   42f165 <flatcc_json_printer_uint32_field@@Base>
  418551:	mov    rsi,QWORD PTR [rbp-0x10]
  418555:	mov    rax,QWORD PTR [rbp-0x8]
  418559:	mov    r9d,0x0
  41855f:	mov    r8d,0x3
  418565:	lea    rcx,[rip+0x1ef03]        # 43746f <_IO_stdin_used@@Base+0x46f>
  41856c:	mov    edx,0x6
  418571:	mov    rdi,rax
  418574:	call   42f62a <flatcc_json_printer_int64_field@@Base>
  418579:	mov    rsi,QWORD PTR [rbp-0x10]
  41857d:	mov    rax,QWORD PTR [rbp-0x8]
  418581:	mov    r9d,0x0
  418587:	mov    r8d,0x3
  41858d:	lea    rcx,[rip+0x1eedf]        # 437473 <_IO_stdin_used@@Base+0x473>
  418594:	mov    edx,0x7
  418599:	mov    rdi,rax
  41859c:	call   42f255 <flatcc_json_printer_uint64_field@@Base>
  4185a1:	mov    rsi,QWORD PTR [rbp-0x10]
  4185a5:	mov    rax,QWORD PTR [rbp-0x8]
  4185a9:	vxorps xmm0,xmm0,xmm0
  4185ad:	mov    r8d,0x3
  4185b3:	lea    rcx,[rip+0x1eebd]        # 437477 <_IO_stdin_used@@Base+0x477>
  4185ba:	mov    edx,0x8
  4185bf:	mov    rdi,rax
  4185c2:	call   42f816 <flatcc_json_printer_float_field@@Base>
  4185c7:	mov    rsi,QWORD PTR [rbp-0x10]
  4185cb:	mov    rax,QWORD PTR [rbp-0x8]
  4185cf:	vxorpd xmm0,xmm0,xmm0
  4185d3:	mov    r8d,0x3
  4185d9:	lea    rcx,[rip+0x1ee9b]        # 43747b <_IO_stdin_used@@Base+0x47b>
  4185e0:	mov    edx,0x9
  4185e5:	mov    rdi,rax
  4185e8:	call   42f92d <flatcc_json_printer_double_field@@Base>
  4185ed:	mov    rsi,QWORD PTR [rbp-0x10]
  4185f1:	mov    rax,QWORD PTR [rbp-0x8]
  4185f5:	mov    r8d,0x2
  4185fb:	lea    rcx,[rip+0x1ee7d]        # 43747f <_IO_stdin_used@@Base+0x47f>
  418602:	mov    edx,0xa
  418607:	mov    rdi,rax
  41860a:	call   431e2e <flatcc_json_printer_int8_vector_field@@Base>
  41860f:	mov    rsi,QWORD PTR [rbp-0x10]
  418613:	mov    rax,QWORD PTR [rbp-0x8]
  418617:	mov    r8d,0x4
  41861d:	lea    rcx,[rip+0x1ee5e]        # 437482 <_IO_stdin_used@@Base+0x482>
  418624:	mov    edx,0xb
  418629:	mov    rdi,rax
  41862c:	call   432cec <flatcc_json_printer_double_vector_field@@Base>
  418631:	nop
  418632:	leave  
  418633:	ret    
  418634:	endbr64 
  418638:	push   rbp
  418639:	mov    rbp,rsp
  41863c:	sub    rsp,0x10
  418640:	mov    QWORD PTR [rbp-0x8],rdi
  418644:	mov    QWORD PTR [rbp-0x10],rsi
  418648:	mov    rsi,QWORD PTR [rbp-0x10]
  41864c:	mov    rax,QWORD PTR [rbp-0x8]
  418650:	mov    r9d,0x0
  418656:	mov    r8d,0x13
  41865c:	lea    rcx,[rip+0x1ee24]        # 437487 <_IO_stdin_used@@Base+0x487>
  418663:	mov    edx,0x0
  418668:	mov    rdi,rax
  41866b:	call   42f53a <flatcc_json_printer_int32_field@@Base>
  418670:	nop
  418671:	leave  
  418672:	ret    
  418673:	endbr64 
  418677:	push   rbp
  418678:	mov    rbp,rsp
  41867b:	sub    rsp,0x10
  41867f:	mov    QWORD PTR [rbp-0x8],rdi
  418683:	mov    QWORD PTR [rbp-0x10],rsi
  418687:	mov    rsi,QWORD PTR [rbp-0x10]
  41868b:	mov    rax,QWORD PTR [rbp-0x8]
  41868f:	sub    rsp,0x8
  418693:	lea    rdx,[rip+0xffffffffffffed4c]        # 4173e6 <_start@@Base+0x11156>
  41869a:	push   rdx
  41869b:	lea    r9,[rip+0xffffffffffffec36]        # 4172d8 <_start@@Base+0x11048>
  4186a2:	mov    r8d,0xe
  4186a8:	lea    rcx,[rip+0x1edec]        # 43749b <_IO_stdin_used@@Base+0x49b>
  4186af:	mov    edx,0x1
  4186b4:	mov    rdi,rax
  4186b7:	call   4353e7 <flatcc_json_printer_union_field@@Base>
  4186bc:	add    rsp,0x10
  4186c0:	mov    rsi,QWORD PTR [rbp-0x10]
  4186c4:	mov    rax,QWORD PTR [rbp-0x8]
  4186c8:	sub    rsp,0x8
  4186cc:	lea    rdx,[rip+0xffffffffffffed13]        # 4173e6 <_start@@Base+0x11156>
  4186d3:	push   rdx
  4186d4:	lea    r9,[rip+0xffffffffffffebfd]        # 4172d8 <_start@@Base+0x11048>
  4186db:	mov    r8d,0xa
  4186e1:	lea    rcx,[rip+0x1edc2]        # 4374aa <_IO_stdin_used@@Base+0x4aa>
  4186e8:	mov    edx,0x3
  4186ed:	mov    rdi,rax
  4186f0:	call   4353e7 <flatcc_json_printer_union_field@@Base>
  4186f5:	add    rsp,0x10
  4186f9:	mov    rsi,QWORD PTR [rbp-0x10]
  4186fd:	mov    rax,QWORD PTR [rbp-0x8]
  418701:	sub    rsp,0x8
  418705:	lea    rdx,[rip+0xffffffffffffecda]        # 4173e6 <_start@@Base+0x11156>
  41870c:	push   rdx
  41870d:	lea    r9,[rip+0xffffffffffffebc4]        # 4172d8 <_start@@Base+0x11048>
  418714:	mov    r8d,0x9
  41871a:	lea    rcx,[rip+0x1ed94]        # 4374b5 <_IO_stdin_used@@Base+0x4b5>
  418721:	mov    edx,0x5
  418726:	mov    rdi,rax
  418729:	call   4353e7 <flatcc_json_printer_union_field@@Base>
  41872e:	add    rsp,0x10
  418732:	mov    rsi,QWORD PTR [rbp-0x10]
  418736:	mov    rax,QWORD PTR [rbp-0x8]
  41873a:	sub    rsp,0x8
  41873e:	lea    rdx,[rip+0xffffffffffffeca1]        # 4173e6 <_start@@Base+0x11156>
  418745:	push   rdx
  418746:	lea    r9,[rip+0xffffffffffffeb8b]        # 4172d8 <_start@@Base+0x11048>
  41874d:	mov    r8d,0x5
  418753:	lea    rcx,[rip+0x1ed65]        # 4374bf <_IO_stdin_used@@Base+0x4bf>
  41875a:	mov    edx,0x7
  41875f:	mov    rdi,rax
  418762:	call   4353e7 <flatcc_json_printer_union_field@@Base>
  418767:	add    rsp,0x10
  41876b:	mov    rsi,QWORD PTR [rbp-0x10]
  41876f:	mov    rax,QWORD PTR [rbp-0x8]
  418773:	sub    rsp,0x8
  418777:	lea    rdx,[rip+0xffffffffffffec68]        # 4173e6 <_start@@Base+0x11156>
  41877e:	push   rdx
  41877f:	lea    r9,[rip+0xffffffffffffeb52]        # 4172d8 <_start@@Base+0x11048>
  418786:	mov    r8d,0xa
  41878c:	lea    rcx,[rip+0x1ed32]        # 4374c5 <_IO_stdin_used@@Base+0x4c5>
  418793:	mov    edx,0x9
  418798:	mov    rdi,rax
  41879b:	call   434e53 <flatcc_json_printer_union_vector_field@@Base>
  4187a0:	add    rsp,0x10
  4187a4:	nop
  4187a5:	leave  
  4187a6:	ret    
  4187a7:	endbr64 
  4187ab:	push   rbp
  4187ac:	mov    rbp,rsp
  4187af:	add    rsp,0xffffffffffffff80
  4187b3:	mov    QWORD PTR [rbp-0x68],rdi
  4187b7:	mov    QWORD PTR [rbp-0x70],rsi
  4187bb:	mov    QWORD PTR [rbp-0x78],rdx
  4187bf:	mov    rax,QWORD PTR fs:0x28
  4187c8:	mov    QWORD PTR [rbp-0x8],rax
  4187cc:	xor    eax,eax
  4187ce:	cmp    QWORD PTR [rbp-0x68],0x0
  4187d3:	jne    4187ee <_start@@Base+0x1255e>
  4187d5:	lea    rax,[rbp-0x60]
  4187d9:	mov    QWORD PTR [rbp-0x68],rax
  4187dd:	mov    rax,QWORD PTR [rbp-0x68]
  4187e1:	mov    esi,0x0
  4187e6:	mov    rdi,rax
  4187e9:	call   436139 <flatcc_json_printer_init@@Base>
  4187ee:	mov    rdx,QWORD PTR [rbp-0x78]
  4187f2:	mov    rsi,QWORD PTR [rbp-0x70]
  4187f6:	mov    rax,QWORD PTR [rbp-0x68]
  4187fa:	lea    rcx,[rip+0x1e86f]        # 437070 <_IO_stdin_used@@Base+0x70>
  418801:	mov    rdi,rax
  418804:	call   418414 <_start@@Base+0x12184>
  418809:	mov    rcx,QWORD PTR [rbp-0x8]
  41880d:	xor    rcx,QWORD PTR fs:0x28
  418816:	je     41881d <_start@@Base+0x1258d>
  418818:	call   4061a0 <__stack_chk_fail@plt>
  41881d:	leave  
  41881e:	ret    
  41881f:	endbr64 
  418823:	push   rbp
  418824:	mov    rbp,rsp
  418827:	sub    rsp,0x10
  41882b:	mov    QWORD PTR [rbp-0x8],rdi
  41882f:	mov    rax,QWORD PTR [rbp-0x8]
  418833:	movzx  eax,BYTE PTR [rax+0x10]
  418837:	movzx  eax,al
  41883a:	cmp    eax,0x1
  41883d:	jne    418854 <_start@@Base+0x125c4>
  41883f:	mov    rax,QWORD PTR [rbp-0x8]
  418843:	lea    rsi,[rip+0x16b]        # 4189b5 <_start@@Base+0x12725>
  41884a:	mov    rdi,rax
  41884d:	call   4234c1 <flatcc_verify_union_table@@Base>
  418852:	jmp    418859 <_start@@Base+0x125c9>
  418854:	mov    eax,0x0
  418859:	leave  
  41885a:	ret    
  41885b:	endbr64 
  41885f:	push   rbp
  418860:	mov    rbp,rsp
  418863:	sub    rsp,0x10
  418867:	mov    QWORD PTR [rbp-0x8],rdi
  41886b:	mov    rax,QWORD PTR [rbp-0x8]
  41886f:	movzx  eax,BYTE PTR [rax+0x10]
  418873:	movzx  eax,al
  418876:	cmp    eax,0x2
  418879:	je     4188a8 <_start@@Base+0x12618>
  41887b:	cmp    eax,0x2
  41887e:	jg     418887 <_start@@Base+0x125f7>
  418880:	cmp    eax,0x1
  418883:	je     418893 <_start@@Base+0x12603>
  418885:	jmp    4188e7 <_start@@Base+0x12657>
  418887:	cmp    eax,0x3
  41888a:	je     4188bd <_start@@Base+0x1262d>
  41888c:	cmp    eax,0x4
  41888f:	je     4188d2 <_start@@Base+0x12642>
  418891:	jmp    4188e7 <_start@@Base+0x12657>
  418893:	mov    rax,QWORD PTR [rbp-0x8]
  418897:	lea    rsi,[rip+0x835]        # 4190d3 <_start@@Base+0x12e43>
  41889e:	mov    rdi,rax
  4188a1:	call   4234c1 <flatcc_verify_union_table@@Base>
  4188a6:	jmp    4188ec <_start@@Base+0x1265c>
  4188a8:	mov    rax,QWORD PTR [rbp-0x8]
  4188ac:	lea    rsi,[rip+0x17b]        # 418a2e <_start@@Base+0x1279e>
  4188b3:	mov    rdi,rax
  4188b6:	call   4234c1 <flatcc_verify_union_table@@Base>
  4188bb:	jmp    4188ec <_start@@Base+0x1265c>
  4188bd:	mov    rax,QWORD PTR [rbp-0x8]
  4188c1:	lea    rsi,[rip+0x100]        # 4189c8 <_start@@Base+0x12738>
  4188c8:	mov    rdi,rax
  4188cb:	call   4234c1 <flatcc_verify_union_table@@Base>
  4188d0:	jmp    4188ec <_start@@Base+0x1265c>
  4188d2:	mov    rax,QWORD PTR [rbp-0x8]
  4188d6:	lea    rsi,[rip+0x3b2]        # 418c8f <_start@@Base+0x129ff>
  4188dd:	mov    rdi,rax
  4188e0:	call   4234c1 <flatcc_verify_union_table@@Base>
  4188e5:	jmp    4188ec <_start@@Base+0x1265c>
  4188e7:	mov    eax,0x0
  4188ec:	leave  
  4188ed:	ret    
  4188ee:	endbr64 
  4188f2:	push   rbp
  4188f3:	mov    rbp,rsp
  4188f6:	sub    rsp,0x10
  4188fa:	mov    QWORD PTR [rbp-0x8],rdi
  4188fe:	mov    rax,QWORD PTR [rbp-0x8]
  418902:	movzx  eax,BYTE PTR [rax+0x10]
  418906:	movzx  eax,al
  418909:	cmp    eax,0x9
  41890c:	je     418962 <_start@@Base+0x126d2>
  41890e:	cmp    eax,0x9
  418911:	jg     418922 <_start@@Base+0x12692>
  418913:	cmp    eax,0x2
  418916:	je     418935 <_start@@Base+0x126a5>
  418918:	cmp    eax,0x8
  41891b:	je     41894a <_start@@Base+0x126ba>
  41891d:	jmp    4189ae <_start@@Base+0x1271e>
  418922:	cmp    eax,0xb
  418925:	je     418992 <_start@@Base+0x12702>
  418927:	cmp    eax,0xb
  41892a:	jl     41897a <_start@@Base+0x126ea>
  41892c:	cmp    eax,0xff
  418931:	je     4189a0 <_start@@Base+0x12710>
  418933:	jmp    4189ae <_start@@Base+0x1271e>
  418935:	mov    rax,QWORD PTR [rbp-0x8]
  418939:	lea    rsi,[rip+0x1019]        # 419959 <_start@@Base+0x136c9>
  418940:	mov    rdi,rax
  418943:	call   4234c1 <flatcc_verify_union_table@@Base>
  418948:	jmp    4189b3 <_start@@Base+0x12723>
  41894a:	mov    rax,QWORD PTR [rbp-0x8]
  41894e:	mov    edx,0x2
  418953:	mov    esi,0x2
  418958:	mov    rdi,rax
  41895b:	call   42350c <flatcc_verify_union_struct@@Base>
  418960:	jmp    4189b3 <_start@@Base+0x12723>
  418962:	mov    rax,QWORD PTR [rbp-0x8]
  418966:	mov    edx,0x4
  41896b:	mov    esi,0x4
  418970:	mov    rdi,rax
  418973:	call   42350c <flatcc_verify_union_struct@@Base>
  418978:	jmp    4189b3 <_start@@Base+0x12723>
  41897a:	mov    rax,QWORD PTR [rbp-0x8]
  41897e:	mov    edx,0x4
  418983:	mov    esi,0x4
  418988:	mov    rdi,rax
  41898b:	call   42350c <flatcc_verify_union_struct@@Base>
  418990:	jmp    4189b3 <_start@@Base+0x12723>
  418992:	mov    rax,QWORD PTR [rbp-0x8]
  418996:	mov    rdi,rax
  418999:	call   423553 <flatcc_verify_union_string@@Base>
  41899e:	jmp    4189b3 <_start@@Base+0x12723>
  4189a0:	mov    rax,QWORD PTR [rbp-0x8]
  4189a4:	mov    rdi,rax
  4189a7:	call   423553 <flatcc_verify_union_string@@Base>
  4189ac:	jmp    4189b3 <_start@@Base+0x12723>
  4189ae:	mov    eax,0x0
  4189b3:	leave  
  4189b4:	ret    
  4189b5:	endbr64 
  4189b9:	push   rbp
  4189ba:	mov    rbp,rsp
  4189bd:	mov    QWORD PTR [rbp-0x8],rdi
  4189c1:	mov    eax,0x0
  4189c6:	pop    rbp
  4189c7:	ret    
  4189c8:	endbr64 
  4189cc:	push   rbp
  4189cd:	mov    rbp,rsp
  4189d0:	mov    QWORD PTR [rbp-0x8],rdi
  4189d4:	mov    eax,0x0
  4189d9:	pop    rbp
  4189da:	ret    
  4189db:	endbr64 
  4189df:	push   rbp
  4189e0:	mov    rbp,rsp
  4189e3:	mov    QWORD PTR [rbp-0x8],rdi
  4189e7:	mov    eax,0x0
  4189ec:	pop    rbp
  4189ed:	ret    
  4189ee:	endbr64 
  4189f2:	push   rbp
  4189f3:	mov    rbp,rsp
  4189f6:	sub    rsp,0x20
  4189fa:	mov    QWORD PTR [rbp-0x18],rdi
  4189fe:	mov    rax,QWORD PTR [rbp-0x18]
  418a02:	mov    ecx,0x1
  418a07:	mov    edx,0x0
  418a0c:	mov    esi,0x0
  418a11:	mov    rdi,rax
  418a14:	call   4230dc <flatcc_verify_field@@Base>
  418a19:	mov    DWORD PTR [rbp-0x4],eax
  418a1c:	cmp    DWORD PTR [rbp-0x4],0x0
  418a20:	je     418a27 <_start@@Base+0x12797>
  418a22:	mov    eax,DWORD PTR [rbp-0x4]
  418a25:	jmp    418a2c <_start@@Base+0x1279c>
  418a27:	mov    eax,0x0
  418a2c:	leave  
  418a2d:	ret    
  418a2e:	endbr64 
  418a32:	push   rbp
  418a33:	mov    rbp,rsp
  418a36:	sub    rsp,0x20
  418a3a:	mov    QWORD PTR [rbp-0x18],rdi
  418a3e:	mov    rax,QWORD PTR [rbp-0x18]
  418a42:	mov    ecx,0x1
  418a47:	mov    edx,0x1
  418a4c:	mov    esi,0x0
  418a51:	mov    rdi,rax
  418a54:	call   4230dc <flatcc_verify_field@@Base>
  418a59:	mov    DWORD PTR [rbp-0x4],eax
  418a5c:	cmp    DWORD PTR [rbp-0x4],0x0
  418a60:	je     418a6a <_start@@Base+0x127da>
  418a62:	mov    eax,DWORD PTR [rbp-0x4]
  418a65:	jmp    418aea <_start@@Base+0x1285a>
  418a6a:	mov    rax,QWORD PTR [rbp-0x18]
  418a6e:	mov    ecx,0x1
  418a73:	mov    edx,0x1
  418a78:	mov    esi,0x1
  418a7d:	mov    rdi,rax
  418a80:	call   4230dc <flatcc_verify_field@@Base>
  418a85:	mov    DWORD PTR [rbp-0x4],eax
  418a88:	cmp    DWORD PTR [rbp-0x4],0x0
  418a8c:	je     418a93 <_start@@Base+0x12803>
  418a8e:	mov    eax,DWORD PTR [rbp-0x4]
  418a91:	jmp    418aea <_start@@Base+0x1285a>
  418a93:	mov    rax,QWORD PTR [rbp-0x18]
  418a97:	mov    ecx,0x1
  418a9c:	mov    edx,0x1
  418aa1:	mov    esi,0x2
  418aa6:	mov    rdi,rax
  418aa9:	call   4230dc <flatcc_verify_field@@Base>
  418aae:	mov    DWORD PTR [rbp-0x4],eax
  418ab1:	cmp    DWORD PTR [rbp-0x4],0x0
  418ab5:	je     418abc <_start@@Base+0x1282c>
  418ab7:	mov    eax,DWORD PTR [rbp-0x4]
  418aba:	jmp    418aea <_start@@Base+0x1285a>
  418abc:	mov    rax,QWORD PTR [rbp-0x18]
  418ac0:	mov    ecx,0x1
  418ac5:	mov    edx,0x1
  418aca:	mov    esi,0x3
  418acf:	mov    rdi,rax
  418ad2:	call   4230dc <flatcc_verify_field@@Base>
  418ad7:	mov    DWORD PTR [rbp-0x4],eax
  418ada:	cmp    DWORD PTR [rbp-0x4],0x0
  418ade:	je     418ae5 <_start@@Base+0x12855>
  418ae0:	mov    eax,DWORD PTR [rbp-0x4]
  418ae3:	jmp    418aea <_start@@Base+0x1285a>
  418ae5:	mov    eax,0x0
  418aea:	leave  
  418aeb:	ret    
  418aec:	endbr64 
  418af0:	push   rbp
  418af1:	mov    rbp,rsp
  418af4:	sub    rsp,0x20
  418af8:	mov    QWORD PTR [rbp-0x18],rdi
  418afc:	mov    rax,QWORD PTR [rbp-0x18]
  418b00:	mov    ecx,0x1
  418b05:	mov    edx,0x0
  418b0a:	mov    esi,0x0
  418b0f:	mov    rdi,rax
  418b12:	call   4230dc <flatcc_verify_field@@Base>
  418b17:	mov    DWORD PTR [rbp-0x4],eax
  418b1a:	cmp    DWORD PTR [rbp-0x4],0x0
  418b1e:	je     418b28 <_start@@Base+0x12898>
  418b20:	mov    eax,DWORD PTR [rbp-0x4]
  418b23:	jmp    418c00 <_start@@Base+0x12970>
  418b28:	mov    rax,QWORD PTR [rbp-0x18]
  418b2c:	mov    ecx,0x8
  418b31:	mov    edx,0x8
  418b36:	mov    esi,0x1
  418b3b:	mov    rdi,rax
  418b3e:	call   4230dc <flatcc_verify_field@@Base>
  418b43:	mov    DWORD PTR [rbp-0x4],eax
  418b46:	cmp    DWORD PTR [rbp-0x4],0x0
  418b4a:	je     418b54 <_start@@Base+0x128c4>
  418b4c:	mov    eax,DWORD PTR [rbp-0x4]
  418b4f:	jmp    418c00 <_start@@Base+0x12970>
  418b54:	mov    rax,QWORD PTR [rbp-0x18]
  418b58:	mov    ecx,0x8
  418b5d:	mov    edx,0x8
  418b62:	mov    esi,0x2
  418b67:	mov    rdi,rax
  418b6a:	call   4230dc <flatcc_verify_field@@Base>
  418b6f:	mov    DWORD PTR [rbp-0x4],eax
  418b72:	cmp    DWORD PTR [rbp-0x4],0x0
  418b76:	je     418b80 <_start@@Base+0x128f0>
  418b78:	mov    eax,DWORD PTR [rbp-0x4]
  418b7b:	jmp    418c00 <_start@@Base+0x12970>
  418b80:	mov    rax,QWORD PTR [rbp-0x18]
  418b84:	mov    ecx,0x4
  418b89:	mov    edx,0x4
  418b8e:	mov    esi,0x3
  418b93:	mov    rdi,rax
  418b96:	call   4230dc <flatcc_verify_field@@Base>
  418b9b:	mov    DWORD PTR [rbp-0x4],eax
  418b9e:	cmp    DWORD PTR [rbp-0x4],0x0
  418ba2:	je     418ba9 <_start@@Base+0x12919>
  418ba4:	mov    eax,DWORD PTR [rbp-0x4]
  418ba7:	jmp    418c00 <_start@@Base+0x12970>
  418ba9:	mov    rax,QWORD PTR [rbp-0x18]
  418bad:	mov    ecx,0x8
  418bb2:	mov    edx,0x8
  418bb7:	mov    esi,0x4
  418bbc:	mov    rdi,rax
  418bbf:	call   4230dc <flatcc_verify_field@@Base>
  418bc4:	mov    DWORD PTR [rbp-0x4],eax
  418bc7:	cmp    DWORD PTR [rbp-0x4],0x0
  418bcb:	je     418bd2 <_start@@Base+0x12942>
  418bcd:	mov    eax,DWORD PTR [rbp-0x4]
  418bd0:	jmp    418c00 <_start@@Base+0x12970>
  418bd2:	mov    rax,QWORD PTR [rbp-0x18]
  418bd6:	mov    ecx,0x8
  418bdb:	mov    edx,0x8
  418be0:	mov    esi,0x5
  418be5:	mov    rdi,rax
  418be8:	call   4230dc <flatcc_verify_field@@Base>
  418bed:	mov    DWORD PTR [rbp-0x4],eax
  418bf0:	cmp    DWORD PTR [rbp-0x4],0x0
  418bf4:	je     418bfb <_start@@Base+0x1296b>
  418bf6:	mov    eax,DWORD PTR [rbp-0x4]
  418bf9:	jmp    418c00 <_start@@Base+0x12970>
  418bfb:	mov    eax,0x0
  418c00:	leave  
  418c01:	ret    
  418c02:	endbr64 
  418c06:	push   rbp
  418c07:	mov    rbp,rsp
  418c0a:	sub    rsp,0x20
  418c0e:	mov    QWORD PTR [rbp-0x18],rdi
  418c12:	mov    rax,QWORD PTR [rbp-0x18]
  418c16:	mov    edx,0x0
  418c1b:	mov    esi,0x0
  418c20:	mov    rdi,rax
  418c23:	call   42314d <flatcc_verify_string_field@@Base>
  418c28:	mov    DWORD PTR [rbp-0x4],eax
  418c2b:	cmp    DWORD PTR [rbp-0x4],0x0
  418c2f:	je     418c36 <_start@@Base+0x129a6>
  418c31:	mov    eax,DWORD PTR [rbp-0x4]
  418c34:	jmp    418c8d <_start@@Base+0x129fd>
  418c36:	mov    rax,QWORD PTR [rbp-0x18]
  418c3a:	mov    ecx,0x8
  418c3f:	mov    edx,0x8
  418c44:	mov    esi,0x1
  418c49:	mov    rdi,rax
  418c4c:	call   4230dc <flatcc_verify_field@@Base>
  418c51:	mov    DWORD PTR [rbp-0x4],eax
  418c54:	cmp    DWORD PTR [rbp-0x4],0x0
  418c58:	je     418c5f <_start@@Base+0x129cf>
  418c5a:	mov    eax,DWORD PTR [rbp-0x4]
  418c5d:	jmp    418c8d <_start@@Base+0x129fd>
  418c5f:	mov    rax,QWORD PTR [rbp-0x18]
  418c63:	mov    ecx,0x2
  418c68:	mov    edx,0x2
  418c6d:	mov    esi,0x2
  418c72:	mov    rdi,rax
  418c75:	call   4230dc <flatcc_verify_field@@Base>
  418c7a:	mov    DWORD PTR [rbp-0x4],eax
  418c7d:	cmp    DWORD PTR [rbp-0x4],0x0
  418c81:	je     418c88 <_start@@Base+0x129f8>
  418c83:	mov    eax,DWORD PTR [rbp-0x4]
  418c86:	jmp    418c8d <_start@@Base+0x129fd>
  418c88:	mov    eax,0x0
  418c8d:	leave  
  418c8e:	ret    
  418c8f:	endbr64 
  418c93:	push   rbp
  418c94:	mov    rbp,rsp
  418c97:	sub    rsp,0x20
  418c9b:	mov    QWORD PTR [rbp-0x18],rdi
  418c9f:	mov    rax,QWORD PTR [rbp-0x18]
  418ca3:	lea    rcx,[rip+0x7d]        # 418d27 <_start@@Base+0x12a97>
  418caa:	mov    edx,0x0
  418caf:	mov    esi,0x0
  418cb4:	mov    rdi,rax
  418cb7:	call   423355 <flatcc_verify_table_field@@Base>
  418cbc:	mov    DWORD PTR [rbp-0x4],eax
  418cbf:	cmp    DWORD PTR [rbp-0x4],0x0
  418cc3:	je     418cca <_start@@Base+0x12a3a>
  418cc5:	mov    eax,DWORD PTR [rbp-0x4]
  418cc8:	jmp    418d25 <_start@@Base+0x12a95>
  418cca:	mov    rax,QWORD PTR [rbp-0x18]
  418cce:	lea    rcx,[rip+0xcc4]        # 419999 <_start@@Base+0x13709>
  418cd5:	mov    edx,0x0
  418cda:	mov    esi,0x1
  418cdf:	mov    rdi,rax
  418ce2:	call   423355 <flatcc_verify_table_field@@Base>
  418ce7:	mov    DWORD PTR [rbp-0x4],eax
  418cea:	cmp    DWORD PTR [rbp-0x4],0x0
  418cee:	je     418cf5 <_start@@Base+0x12a65>
  418cf0:	mov    eax,DWORD PTR [rbp-0x4]
  418cf3:	jmp    418d25 <_start@@Base+0x12a95>
  418cf5:	mov    rax,QWORD PTR [rbp-0x18]
  418cf9:	lea    rcx,[rip+0xfffffffffffffb5b]        # 41885b <_start@@Base+0x125cb>
  418d00:	mov    edx,0x0
  418d05:	mov    esi,0x3
  418d0a:	mov    rdi,rax
  418d0d:	call   423da2 <flatcc_verify_union_vector_field@@Base>
  418d12:	mov    DWORD PTR [rbp-0x4],eax
  418d15:	cmp    DWORD PTR [rbp-0x4],0x0
  418d19:	je     418d20 <_start@@Base+0x12a90>
  418d1b:	mov    eax,DWORD PTR [rbp-0x4]
  418d1e:	jmp    418d25 <_start@@Base+0x12a95>
  418d20:	mov    eax,0x0
  418d25:	leave  
  418d26:	ret    
  418d27:	endbr64 
  418d2b:	push   rbp
  418d2c:	mov    rbp,rsp
  418d2f:	sub    rsp,0x20
  418d33:	mov    QWORD PTR [rbp-0x18],rdi
  418d37:	mov    rax,QWORD PTR [rbp-0x18]
  418d3b:	lea    rcx,[rip+0x7d]        # 418dbf <_start@@Base+0x12b2f>
  418d42:	mov    edx,0x0
  418d47:	mov    esi,0x0
  418d4c:	mov    rdi,rax
  418d4f:	call   423355 <flatcc_verify_table_field@@Base>
  418d54:	mov    DWORD PTR [rbp-0x4],eax
  418d57:	cmp    DWORD PTR [rbp-0x4],0x0
  418d5b:	je     418d62 <_start@@Base+0x12ad2>
  418d5d:	mov    eax,DWORD PTR [rbp-0x4]
  418d60:	jmp    418dbd <_start@@Base+0x12b2d>
  418d62:	mov    rax,QWORD PTR [rbp-0x18]
  418d66:	lea    rcx,[rip+0x1dd]        # 418f4a <_start@@Base+0x12cba>
  418d6d:	mov    edx,0x0
  418d72:	mov    esi,0x1
  418d77:	mov    rdi,rax
  418d7a:	call   423355 <flatcc_verify_table_field@@Base>
  418d7f:	mov    DWORD PTR [rbp-0x4],eax
  418d82:	cmp    DWORD PTR [rbp-0x4],0x0
  418d86:	je     418d8d <_start@@Base+0x12afd>
  418d88:	mov    eax,DWORD PTR [rbp-0x4]
  418d8b:	jmp    418dbd <_start@@Base+0x12b2d>
  418d8d:	mov    rax,QWORD PTR [rbp-0x18]
  418d91:	lea    rcx,[rip+0x21b]        # 418fb3 <_start@@Base+0x12d23>
  418d98:	mov    edx,0x0
  418d9d:	mov    esi,0x2
  418da2:	mov    rdi,rax
  418da5:	call   423355 <flatcc_verify_table_field@@Base>
  418daa:	mov    DWORD PTR [rbp-0x4],eax
  418dad:	cmp    DWORD PTR [rbp-0x4],0x0
  418db1:	je     418db8 <_start@@Base+0x12b28>
  418db3:	mov    eax,DWORD PTR [rbp-0x4]
  418db6:	jmp    418dbd <_start@@Base+0x12b2d>
  418db8:	mov    eax,0x0
  418dbd:	leave  
  418dbe:	ret    
  418dbf:	endbr64 
  418dc3:	push   rbp
  418dc4:	mov    rbp,rsp
  418dc7:	sub    rsp,0x20
  418dcb:	mov    QWORD PTR [rbp-0x18],rdi
  418dcf:	mov    rax,QWORD PTR [rbp-0x18]
  418dd3:	mov    edx,0x0
  418dd8:	mov    esi,0x0
  418ddd:	mov    rdi,rax
  418de0:	call   42314d <flatcc_verify_string_field@@Base>
  418de5:	mov    DWORD PTR [rbp-0x4],eax
  418de8:	cmp    DWORD PTR [rbp-0x4],0x0
  418dec:	je     418df6 <_start@@Base+0x12b66>
  418dee:	mov    eax,DWORD PTR [rbp-0x4]
  418df1:	jmp    418f48 <_start@@Base+0x12cb8>
  418df6:	mov    rax,QWORD PTR [rbp-0x18]
  418dfa:	mov    ecx,0x4
  418dff:	mov    edx,0x4
  418e04:	mov    esi,0x1
  418e09:	mov    rdi,rax
  418e0c:	call   4230dc <flatcc_verify_field@@Base>
  418e11:	mov    DWORD PTR [rbp-0x4],eax
  418e14:	cmp    DWORD PTR [rbp-0x4],0x0
  418e18:	je     418e22 <_start@@Base+0x12b92>
  418e1a:	mov    eax,DWORD PTR [rbp-0x4]
  418e1d:	jmp    418f48 <_start@@Base+0x12cb8>
  418e22:	mov    rax,QWORD PTR [rbp-0x18]
  418e26:	mov    edx,0x0
  418e2b:	mov    esi,0x2
  418e30:	mov    rdi,rax
  418e33:	call   42314d <flatcc_verify_string_field@@Base>
  418e38:	mov    DWORD PTR [rbp-0x4],eax
  418e3b:	cmp    DWORD PTR [rbp-0x4],0x0
  418e3f:	je     418e49 <_start@@Base+0x12bb9>
  418e41:	mov    eax,DWORD PTR [rbp-0x4]
  418e44:	jmp    418f48 <_start@@Base+0x12cb8>
  418e49:	mov    rax,QWORD PTR [rbp-0x18]
  418e4d:	mov    ecx,0x8
  418e52:	mov    edx,0x8
  418e57:	mov    esi,0x3
  418e5c:	mov    rdi,rax
  418e5f:	call   4230dc <flatcc_verify_field@@Base>
  418e64:	mov    DWORD PTR [rbp-0x4],eax
  418e67:	cmp    DWORD PTR [rbp-0x4],0x0
  418e6b:	je     418e75 <_start@@Base+0x12be5>
  418e6d:	mov    eax,DWORD PTR [rbp-0x4]
  418e70:	jmp    418f48 <_start@@Base+0x12cb8>
  418e75:	mov    rax,QWORD PTR [rbp-0x18]
  418e79:	mov    edx,0x0
  418e7e:	mov    esi,0x4
  418e83:	mov    rdi,rax
  418e86:	call   42314d <flatcc_verify_string_field@@Base>
  418e8b:	mov    DWORD PTR [rbp-0x4],eax
  418e8e:	cmp    DWORD PTR [rbp-0x4],0x0
  418e92:	je     418e9c <_start@@Base+0x12c0c>
  418e94:	mov    eax,DWORD PTR [rbp-0x4]
  418e97:	jmp    418f48 <_start@@Base+0x12cb8>
  418e9c:	mov    rax,QWORD PTR [rbp-0x18]
  418ea0:	mov    ecx,0x8
  418ea5:	mov    edx,0x8
  418eaa:	mov    esi,0x5
  418eaf:	mov    rdi,rax
  418eb2:	call   4230dc <flatcc_verify_field@@Base>
  418eb7:	mov    DWORD PTR [rbp-0x4],eax
  418eba:	cmp    DWORD PTR [rbp-0x4],0x0
  418ebe:	je     418ec8 <_start@@Base+0x12c38>
  418ec0:	mov    eax,DWORD PTR [rbp-0x4]
  418ec3:	jmp    418f48 <_start@@Base+0x12cb8>
  418ec8:	mov    rax,QWORD PTR [rbp-0x18]
  418ecc:	mov    ecx,0x4
  418ed1:	mov    edx,0x4
  418ed6:	mov    esi,0x6
  418edb:	mov    rdi,rax
  418ede:	call   4230dc <flatcc_verify_field@@Base>
  418ee3:	mov    DWORD PTR [rbp-0x4],eax
  418ee6:	cmp    DWORD PTR [rbp-0x4],0x0
  418eea:	je     418ef1 <_start@@Base+0x12c61>
  418eec:	mov    eax,DWORD PTR [rbp-0x4]
  418eef:	jmp    418f48 <_start@@Base+0x12cb8>
  418ef1:	mov    rax,QWORD PTR [rbp-0x18]
  418ef5:	mov    ecx,0x8
  418efa:	mov    edx,0x8
  418eff:	mov    esi,0x7
  418f04:	mov    rdi,rax
  418f07:	call   4230dc <flatcc_verify_field@@Base>
  418f0c:	mov    DWORD PTR [rbp-0x4],eax
  418f0f:	cmp    DWORD PTR [rbp-0x4],0x0
  418f13:	je     418f1a <_start@@Base+0x12c8a>
  418f15:	mov    eax,DWORD PTR [rbp-0x4]
  418f18:	jmp    418f48 <_start@@Base+0x12cb8>
  418f1a:	mov    rax,QWORD PTR [rbp-0x18]
  418f1e:	mov    ecx,0x4
  418f23:	mov    edx,0x4
  418f28:	mov    esi,0x8
  418f2d:	mov    rdi,rax
  418f30:	call   4230dc <flatcc_verify_field@@Base>
  418f35:	mov    DWORD PTR [rbp-0x4],eax
  418f38:	cmp    DWORD PTR [rbp-0x4],0x0
  418f3c:	je     418f43 <_start@@Base+0x12cb3>
  418f3e:	mov    eax,DWORD PTR [rbp-0x4]
  418f41:	jmp    418f48 <_start@@Base+0x12cb8>
  418f43:	mov    eax,0x0
  418f48:	leave  
  418f49:	ret    
  418f4a:	endbr64 
  418f4e:	push   rbp
  418f4f:	mov    rbp,rsp
  418f52:	sub    rsp,0x20
  418f56:	mov    QWORD PTR [rbp-0x18],rdi
  418f5a:	mov    rax,QWORD PTR [rbp-0x18]
  418f5e:	mov    ecx,0x8
  418f63:	mov    edx,0x8
  418f68:	mov    esi,0x0
  418f6d:	mov    rdi,rax
  418f70:	call   4230dc <flatcc_verify_field@@Base>
  418f75:	mov    DWORD PTR [rbp-0x4],eax
  418f78:	cmp    DWORD PTR [rbp-0x4],0x0
  418f7c:	je     418f83 <_start@@Base+0x12cf3>
  418f7e:	mov    eax,DWORD PTR [rbp-0x4]
  418f81:	jmp    418fb1 <_start@@Base+0x12d21>
  418f83:	mov    rax,QWORD PTR [rbp-0x18]
  418f87:	mov    ecx,0x4
  418f8c:	mov    edx,0x4
  418f91:	mov    esi,0x1
  418f96:	mov    rdi,rax
  418f99:	call   4230dc <flatcc_verify_field@@Base>
  418f9e:	mov    DWORD PTR [rbp-0x4],eax
  418fa1:	cmp    DWORD PTR [rbp-0x4],0x0
  418fa5:	je     418fac <_start@@Base+0x12d1c>
  418fa7:	mov    eax,DWORD PTR [rbp-0x4]
  418faa:	jmp    418fb1 <_start@@Base+0x12d21>
  418fac:	mov    eax,0x0
  418fb1:	leave  
  418fb2:	ret    
  418fb3:	endbr64 
  418fb7:	push   rbp
  418fb8:	mov    rbp,rsp
  418fbb:	sub    rsp,0x20
  418fbf:	mov    QWORD PTR [rbp-0x18],rdi
  418fc3:	mov    rax,QWORD PTR [rbp-0x18]
  418fc7:	mov    ecx,0x8
  418fcc:	mov    edx,0x8
  418fd1:	mov    esi,0x0
  418fd6:	mov    rdi,rax
  418fd9:	call   4230dc <flatcc_verify_field@@Base>
  418fde:	mov    DWORD PTR [rbp-0x4],eax
  418fe1:	cmp    DWORD PTR [rbp-0x4],0x0
  418fe5:	je     418fec <_start@@Base+0x12d5c>
  418fe7:	mov    eax,DWORD PTR [rbp-0x4]
  418fea:	jmp    41901a <_start@@Base+0x12d8a>
  418fec:	mov    rax,QWORD PTR [rbp-0x18]
  418ff0:	mov    ecx,0x4
  418ff5:	mov    edx,0x4
  418ffa:	mov    esi,0x1
  418fff:	mov    rdi,rax
  419002:	call   4230dc <flatcc_verify_field@@Base>
  419007:	mov    DWORD PTR [rbp-0x4],eax
  41900a:	cmp    DWORD PTR [rbp-0x4],0x0
  41900e:	je     419015 <_start@@Base+0x12d85>
  419010:	mov    eax,DWORD PTR [rbp-0x4]
  419013:	jmp    41901a <_start@@Base+0x12d8a>
  419015:	mov    eax,0x0
  41901a:	leave  
  41901b:	ret    
  41901c:	endbr64 
  419020:	push   rbp
  419021:	mov    rbp,rsp
  419024:	sub    rsp,0x20
  419028:	mov    QWORD PTR [rbp-0x18],rdi
  41902c:	mov    rax,QWORD PTR [rbp-0x18]
  419030:	mov    r9d,0xffffffff
  419036:	mov    r8d,0x1
  41903c:	mov    ecx,0x1
  419041:	mov    edx,0x0
  419046:	mov    esi,0x0
  41904b:	mov    rdi,rax
  41904e:	call   4231e6 <flatcc_verify_vector_field@@Base>
  419053:	mov    DWORD PTR [rbp-0x4],eax
  419056:	cmp    DWORD PTR [rbp-0x4],0x0
  41905a:	je     419061 <_start@@Base+0x12dd1>
  41905c:	mov    eax,DWORD PTR [rbp-0x4]
  41905f:	jmp    4190d1 <_start@@Base+0x12e41>
  419061:	mov    rax,QWORD PTR [rbp-0x18]
  419065:	mov    r9d,0xffffffff
  41906b:	mov    r8d,0x1
  419071:	mov    ecx,0x1
  419076:	mov    edx,0x0
  41907b:	mov    esi,0x1
  419080:	mov    rdi,rax
  419083:	call   4231e6 <flatcc_verify_vector_field@@Base>
  419088:	mov    DWORD PTR [rbp-0x4],eax
  41908b:	cmp    DWORD PTR [rbp-0x4],0x0
  41908f:	je     419096 <_start@@Base+0x12e06>
  419091:	mov    eax,DWORD PTR [rbp-0x4]
  419094:	jmp    4190d1 <_start@@Base+0x12e41>
  419096:	mov    rax,QWORD PTR [rbp-0x18]
  41909a:	lea    r9,[rip+0x32]        # 4190d3 <_start@@Base+0x12e43>
  4190a1:	mov    r8d,0x1
  4190a7:	mov    ecx,0x0
  4190ac:	mov    edx,0x0
  4190b1:	mov    esi,0x2
  4190b6:	mov    rdi,rax
  4190b9:	call   423a51 <flatcc_verify_table_as_nested_root@@Base>
  4190be:	mov    DWORD PTR [rbp-0x4],eax
  4190c1:	cmp    DWORD PTR [rbp-0x4],0x0
  4190c5:	je     4190cc <_start@@Base+0x12e3c>
  4190c7:	mov    eax,DWORD PTR [rbp-0x4]
  4190ca:	jmp    4190d1 <_start@@Base+0x12e41>
  4190cc:	mov    eax,0x0
  4190d1:	leave  
  4190d2:	ret    
  4190d3:	endbr64 
  4190d7:	push   rbp
  4190d8:	mov    rbp,rsp
  4190db:	sub    rsp,0x20
  4190df:	mov    QWORD PTR [rbp-0x18],rdi
  4190e3:	mov    rax,QWORD PTR [rbp-0x18]
  4190e7:	mov    ecx,0x10
  4190ec:	mov    edx,0x20
  4190f1:	mov    esi,0x0
  4190f6:	mov    rdi,rax
  4190f9:	call   4230dc <flatcc_verify_field@@Base>
  4190fe:	mov    DWORD PTR [rbp-0x4],eax
  419101:	cmp    DWORD PTR [rbp-0x4],0x0
  419105:	je     41910f <_start@@Base+0x12e7f>
  419107:	mov    eax,DWORD PTR [rbp-0x4]
  41910a:	jmp    419721 <_start@@Base+0x13491>
  41910f:	mov    rax,QWORD PTR [rbp-0x18]
  419113:	mov    ecx,0x2
  419118:	mov    edx,0x2
  41911d:	mov    esi,0x2
  419122:	mov    rdi,rax
  419125:	call   4230dc <flatcc_verify_field@@Base>
  41912a:	mov    DWORD PTR [rbp-0x4],eax
  41912d:	cmp    DWORD PTR [rbp-0x4],0x0
  419131:	je     41913b <_start@@Base+0x12eab>
  419133:	mov    eax,DWORD PTR [rbp-0x4]
  419136:	jmp    419721 <_start@@Base+0x13491>
  41913b:	mov    rax,QWORD PTR [rbp-0x18]
  41913f:	mov    ecx,0x2
  419144:	mov    edx,0x2
  419149:	mov    esi,0x1
  41914e:	mov    rdi,rax
  419151:	call   4230dc <flatcc_verify_field@@Base>
  419156:	mov    DWORD PTR [rbp-0x4],eax
  419159:	cmp    DWORD PTR [rbp-0x4],0x0
  41915d:	je     419167 <_start@@Base+0x12ed7>
  41915f:	mov    eax,DWORD PTR [rbp-0x4]
  419162:	jmp    419721 <_start@@Base+0x13491>
  419167:	mov    rax,QWORD PTR [rbp-0x18]
  41916b:	mov    edx,0x1
  419170:	mov    esi,0x3
  419175:	mov    rdi,rax
  419178:	call   42314d <flatcc_verify_string_field@@Base>
  41917d:	mov    DWORD PTR [rbp-0x4],eax
  419180:	cmp    DWORD PTR [rbp-0x4],0x0
  419184:	je     41918e <_start@@Base+0x12efe>
  419186:	mov    eax,DWORD PTR [rbp-0x4]
  419189:	jmp    419721 <_start@@Base+0x13491>
  41918e:	mov    rax,QWORD PTR [rbp-0x18]
  419192:	mov    ecx,0x1
  419197:	mov    edx,0x1
  41919c:	mov    esi,0x6
  4191a1:	mov    rdi,rax
  4191a4:	call   4230dc <flatcc_verify_field@@Base>
  4191a9:	mov    DWORD PTR [rbp-0x4],eax
  4191ac:	cmp    DWORD PTR [rbp-0x4],0x0
  4191b0:	je     4191ba <_start@@Base+0x12f2a>
  4191b2:	mov    eax,DWORD PTR [rbp-0x4]
  4191b5:	jmp    419721 <_start@@Base+0x13491>
  4191ba:	mov    rax,QWORD PTR [rbp-0x18]
  4191be:	mov    r9d,0xffffffff
  4191c4:	mov    r8d,0x1
  4191ca:	mov    ecx,0x1
  4191cf:	mov    edx,0x0
  4191d4:	mov    esi,0x5
  4191d9:	mov    rdi,rax
  4191dc:	call   4231e6 <flatcc_verify_vector_field@@Base>
  4191e1:	mov    DWORD PTR [rbp-0x4],eax
  4191e4:	cmp    DWORD PTR [rbp-0x4],0x0
  4191e8:	je     4191f2 <_start@@Base+0x12f62>
  4191ea:	mov    eax,DWORD PTR [rbp-0x4]
  4191ed:	jmp    419721 <_start@@Base+0x13491>
  4191f2:	mov    rax,QWORD PTR [rbp-0x18]
  4191f6:	lea    rcx,[rip+0xfffffffffffffed6]        # 4190d3 <_start@@Base+0x12e43>
  4191fd:	mov    edx,0x0
  419202:	mov    esi,0xb
  419207:	mov    rdi,rax
  41920a:	call   42340b <flatcc_verify_table_vector_field@@Base>
  41920f:	mov    DWORD PTR [rbp-0x4],eax
  419212:	cmp    DWORD PTR [rbp-0x4],0x0
  419216:	je     419220 <_start@@Base+0x12f90>
  419218:	mov    eax,DWORD PTR [rbp-0x4]
  41921b:	jmp    419721 <_start@@Base+0x13491>
  419220:	mov    rax,QWORD PTR [rbp-0x18]
  419224:	mov    edx,0x0
  419229:	mov    esi,0xa
  41922e:	mov    rdi,rax
  419231:	call   4232bc <flatcc_verify_string_vector_field@@Base>
  419236:	mov    DWORD PTR [rbp-0x4],eax
  419239:	cmp    DWORD PTR [rbp-0x4],0x0
  41923d:	je     419247 <_start@@Base+0x12fb7>
  41923f:	mov    eax,DWORD PTR [rbp-0x4]
  419242:	jmp    419721 <_start@@Base+0x13491>
  419247:	mov    rax,QWORD PTR [rbp-0x18]
  41924b:	mov    edx,0x0
  419250:	mov    esi,0x1c
  419255:	mov    rdi,rax
  419258:	call   4232bc <flatcc_verify_string_vector_field@@Base>
  41925d:	mov    DWORD PTR [rbp-0x4],eax
  419260:	cmp    DWORD PTR [rbp-0x4],0x0
  419264:	je     41926e <_start@@Base+0x12fde>
  419266:	mov    eax,DWORD PTR [rbp-0x4]
  419269:	jmp    419721 <_start@@Base+0x13491>
  41926e:	mov    rax,QWORD PTR [rbp-0x18]
  419272:	mov    r9d,0xffffffff
  419278:	mov    r8d,0x1
  41927e:	mov    ecx,0x1
  419283:	mov    edx,0x0
  419288:	mov    esi,0x18
  41928d:	mov    rdi,rax
  419290:	call   4231e6 <flatcc_verify_vector_field@@Base>
  419295:	mov    DWORD PTR [rbp-0x4],eax
  419298:	cmp    DWORD PTR [rbp-0x4],0x0
  41929c:	je     4192a6 <_start@@Base+0x13016>
  41929e:	mov    eax,DWORD PTR [rbp-0x4]
  4192a1:	jmp    419721 <_start@@Base+0x13491>
  4192a6:	mov    rax,QWORD PTR [rbp-0x18]
  4192aa:	mov    r9d,0x1fffffff
  4192b0:	mov    r8d,0x4
  4192b6:	mov    ecx,0x8
  4192bb:	mov    edx,0x0
  4192c0:	mov    esi,0x1d
  4192c5:	mov    rdi,rax
  4192c8:	call   4231e6 <flatcc_verify_vector_field@@Base>
  4192cd:	mov    DWORD PTR [rbp-0x4],eax
  4192d0:	cmp    DWORD PTR [rbp-0x4],0x0
  4192d4:	je     4192de <_start@@Base+0x1304e>
  4192d6:	mov    eax,DWORD PTR [rbp-0x4]
  4192d9:	jmp    419721 <_start@@Base+0x13491>
  4192de:	mov    rax,QWORD PTR [rbp-0x18]
  4192e2:	lea    rcx,[rip+0xfffffffffffffdea]        # 4190d3 <_start@@Base+0x12e43>
  4192e9:	mov    edx,0x0
  4192ee:	mov    esi,0xc
  4192f3:	mov    rdi,rax
  4192f6:	call   423355 <flatcc_verify_table_field@@Base>
  4192fb:	mov    DWORD PTR [rbp-0x4],eax
  4192fe:	cmp    DWORD PTR [rbp-0x4],0x0
  419302:	je     41930c <_start@@Base+0x1307c>
  419304:	mov    eax,DWORD PTR [rbp-0x4]
  419307:	jmp    419721 <_start@@Base+0x13491>
  41930c:	mov    rax,QWORD PTR [rbp-0x18]
  419310:	lea    rcx,[rip+0xfffffffffffff544]        # 41885b <_start@@Base+0x125cb>
  419317:	mov    edx,0x0
  41931c:	mov    esi,0x8
  419321:	mov    rdi,rax
  419324:	call   423b9a <flatcc_verify_union_field@@Base>
  419329:	mov    DWORD PTR [rbp-0x4],eax
  41932c:	cmp    DWORD PTR [rbp-0x4],0x0
  419330:	je     41933a <_start@@Base+0x130aa>
  419332:	mov    eax,DWORD PTR [rbp-0x4]
  419335:	jmp    419721 <_start@@Base+0x13491>
  41933a:	mov    rax,QWORD PTR [rbp-0x18]
  41933e:	mov    r9d,0x3fffffff
  419344:	mov    r8d,0x2
  41934a:	mov    ecx,0x4
  41934f:	mov    edx,0x0
  419354:	mov    esi,0x9
  419359:	mov    rdi,rax
  41935c:	call   4231e6 <flatcc_verify_vector_field@@Base>
  419361:	mov    DWORD PTR [rbp-0x4],eax
  419364:	cmp    DWORD PTR [rbp-0x4],0x0
  419368:	je     419372 <_start@@Base+0x130e2>
  41936a:	mov    eax,DWORD PTR [rbp-0x4]
  41936d:	jmp    419721 <_start@@Base+0x13491>
  419372:	mov    rax,QWORD PTR [rbp-0x18]
  419376:	mov    r9d,0x3fffffff
  41937c:	mov    r8d,0x2
  419382:	mov    ecx,0x4
  419387:	mov    edx,0x0
  41938c:	mov    esi,0x1f
  419391:	mov    rdi,rax
  419394:	call   4231e6 <flatcc_verify_vector_field@@Base>
  419399:	mov    DWORD PTR [rbp-0x4],eax
  41939c:	cmp    DWORD PTR [rbp-0x4],0x0
  4193a0:	je     4193aa <_start@@Base+0x1311a>
  4193a2:	mov    eax,DWORD PTR [rbp-0x4]
  4193a5:	jmp    419721 <_start@@Base+0x13491>
  4193aa:	mov    rax,QWORD PTR [rbp-0x18]
  4193ae:	lea    r9,[rip+0xfffffffffffffd1e]        # 4190d3 <_start@@Base+0x12e43>
  4193b5:	mov    r8d,0x1
  4193bb:	mov    ecx,0x0
  4193c0:	mov    edx,0x0
  4193c5:	mov    esi,0xd
  4193ca:	mov    rdi,rax
  4193cd:	call   423a51 <flatcc_verify_table_as_nested_root@@Base>
  4193d2:	mov    DWORD PTR [rbp-0x4],eax
  4193d5:	cmp    DWORD PTR [rbp-0x4],0x0
  4193d9:	je     4193e3 <_start@@Base+0x13153>
  4193db:	mov    eax,DWORD PTR [rbp-0x4]
  4193de:	jmp    419721 <_start@@Base+0x13491>
  4193e3:	mov    rax,QWORD PTR [rbp-0x18]
  4193e7:	lea    rcx,[rip+0xfffffffffffff814]        # 418c02 <_start@@Base+0x12972>
  4193ee:	mov    edx,0x0
  4193f3:	mov    esi,0xe
  4193f8:	mov    rdi,rax
  4193fb:	call   423355 <flatcc_verify_table_field@@Base>
  419400:	mov    DWORD PTR [rbp-0x4],eax
  419403:	cmp    DWORD PTR [rbp-0x4],0x0
  419407:	je     419411 <_start@@Base+0x13181>
  419409:	mov    eax,DWORD PTR [rbp-0x4]
  41940c:	jmp    419721 <_start@@Base+0x13491>
  419411:	mov    rax,QWORD PTR [rbp-0x18]
  419415:	mov    ecx,0x1
  41941a:	mov    edx,0x1
  41941f:	mov    esi,0xf
  419424:	mov    rdi,rax
  419427:	call   4230dc <flatcc_verify_field@@Base>
  41942c:	mov    DWORD PTR [rbp-0x4],eax
  41942f:	cmp    DWORD PTR [rbp-0x4],0x0
  419433:	je     41943d <_start@@Base+0x131ad>
  419435:	mov    eax,DWORD PTR [rbp-0x4]
  419438:	jmp    419721 <_start@@Base+0x13491>
  41943d:	mov    rax,QWORD PTR [rbp-0x18]
  419441:	mov    ecx,0x4
  419446:	mov    edx,0x4
  41944b:	mov    esi,0x10
  419450:	mov    rdi,rax
  419453:	call   4230dc <flatcc_verify_field@@Base>
  419458:	mov    DWORD PTR [rbp-0x4],eax
  41945b:	cmp    DWORD PTR [rbp-0x4],0x0
  41945f:	je     419469 <_start@@Base+0x131d9>
  419461:	mov    eax,DWORD PTR [rbp-0x4]
  419464:	jmp    419721 <_start@@Base+0x13491>
  419469:	mov    rax,QWORD PTR [rbp-0x18]
  41946d:	mov    ecx,0x4
  419472:	mov    edx,0x4
  419477:	mov    esi,0x11
  41947c:	mov    rdi,rax
  41947f:	call   4230dc <flatcc_verify_field@@Base>
  419484:	mov    DWORD PTR [rbp-0x4],eax
  419487:	cmp    DWORD PTR [rbp-0x4],0x0
  41948b:	je     419495 <_start@@Base+0x13205>
  41948d:	mov    eax,DWORD PTR [rbp-0x4]
  419490:	jmp    419721 <_start@@Base+0x13491>
  419495:	mov    rax,QWORD PTR [rbp-0x18]
  419499:	mov    ecx,0x8
  41949e:	mov    edx,0x8
  4194a3:	mov    esi,0x12
  4194a8:	mov    rdi,rax
  4194ab:	call   4230dc <flatcc_verify_field@@Base>
  4194b0:	mov    DWORD PTR [rbp-0x4],eax
  4194b3:	cmp    DWORD PTR [rbp-0x4],0x0
  4194b7:	je     4194c1 <_start@@Base+0x13231>
  4194b9:	mov    eax,DWORD PTR [rbp-0x4]
  4194bc:	jmp    419721 <_start@@Base+0x13491>
  4194c1:	mov    rax,QWORD PTR [rbp-0x18]
  4194c5:	mov    ecx,0x8
  4194ca:	mov    edx,0x8
  4194cf:	mov    esi,0x13
  4194d4:	mov    rdi,rax
  4194d7:	call   4230dc <flatcc_verify_field@@Base>
  4194dc:	mov    DWORD PTR [rbp-0x4],eax
  4194df:	cmp    DWORD PTR [rbp-0x4],0x0
  4194e3:	je     4194ed <_start@@Base+0x1325d>
  4194e5:	mov    eax,DWORD PTR [rbp-0x4]
  4194e8:	jmp    419721 <_start@@Base+0x13491>
  4194ed:	mov    rax,QWORD PTR [rbp-0x18]
  4194f1:	mov    ecx,0x4
  4194f6:	mov    edx,0x4
  4194fb:	mov    esi,0x14
  419500:	mov    rdi,rax
  419503:	call   4230dc <flatcc_verify_field@@Base>
  419508:	mov    DWORD PTR [rbp-0x4],eax
  41950b:	cmp    DWORD PTR [rbp-0x4],0x0
  41950f:	je     419519 <_start@@Base+0x13289>
  419511:	mov    eax,DWORD PTR [rbp-0x4]
  419514:	jmp    419721 <_start@@Base+0x13491>
  419519:	mov    rax,QWORD PTR [rbp-0x18]
  41951d:	mov    ecx,0x4
  419522:	mov    edx,0x4
  419527:	mov    esi,0x15
  41952c:	mov    rdi,rax
  41952f:	call   4230dc <flatcc_verify_field@@Base>
  419534:	mov    DWORD PTR [rbp-0x4],eax
  419537:	cmp    DWORD PTR [rbp-0x4],0x0
  41953b:	je     419545 <_start@@Base+0x132b5>
  41953d:	mov    eax,DWORD PTR [rbp-0x4]
  419540:	jmp    419721 <_start@@Base+0x13491>
  419545:	mov    rax,QWORD PTR [rbp-0x18]
  419549:	mov    ecx,0x8
  41954e:	mov    edx,0x8
  419553:	mov    esi,0x16
  419558:	mov    rdi,rax
  41955b:	call   4230dc <flatcc_verify_field@@Base>
  419560:	mov    DWORD PTR [rbp-0x4],eax
  419563:	cmp    DWORD PTR [rbp-0x4],0x0
  419567:	je     419571 <_start@@Base+0x132e1>
  419569:	mov    eax,DWORD PTR [rbp-0x4]
  41956c:	jmp    419721 <_start@@Base+0x13491>
  419571:	mov    rax,QWORD PTR [rbp-0x18]
  419575:	mov    ecx,0x8
  41957a:	mov    edx,0x8
  41957f:	mov    esi,0x17
  419584:	mov    rdi,rax
  419587:	call   4230dc <flatcc_verify_field@@Base>
  41958c:	mov    DWORD PTR [rbp-0x4],eax
  41958f:	cmp    DWORD PTR [rbp-0x4],0x0
  419593:	je     41959d <_start@@Base+0x1330d>
  419595:	mov    eax,DWORD PTR [rbp-0x4]
  419598:	jmp    419721 <_start@@Base+0x13491>
  41959d:	mov    rax,QWORD PTR [rbp-0x18]
  4195a1:	mov    ecx,0x4
  4195a6:	mov    edx,0x4
  4195ab:	mov    esi,0x19
  4195b0:	mov    rdi,rax
  4195b3:	call   4230dc <flatcc_verify_field@@Base>
  4195b8:	mov    DWORD PTR [rbp-0x4],eax
  4195bb:	cmp    DWORD PTR [rbp-0x4],0x0
  4195bf:	je     4195c9 <_start@@Base+0x13339>
  4195c1:	mov    eax,DWORD PTR [rbp-0x4]
  4195c4:	jmp    419721 <_start@@Base+0x13491>
  4195c9:	mov    rax,QWORD PTR [rbp-0x18]
  4195cd:	mov    ecx,0x4
  4195d2:	mov    edx,0x4
  4195d7:	mov    esi,0x1a
  4195dc:	mov    rdi,rax
  4195df:	call   4230dc <flatcc_verify_field@@Base>
  4195e4:	mov    DWORD PTR [rbp-0x4],eax
  4195e7:	cmp    DWORD PTR [rbp-0x4],0x0
  4195eb:	je     4195f5 <_start@@Base+0x13365>
  4195ed:	mov    eax,DWORD PTR [rbp-0x4]
  4195f0:	jmp    419721 <_start@@Base+0x13491>
  4195f5:	mov    rax,QWORD PTR [rbp-0x18]
  4195f9:	mov    ecx,0x4
  4195fe:	mov    edx,0x4
  419603:	mov    esi,0x1b
  419608:	mov    rdi,rax
  41960b:	call   4230dc <flatcc_verify_field@@Base>
  419610:	mov    DWORD PTR [rbp-0x4],eax
  419613:	cmp    DWORD PTR [rbp-0x4],0x0
  419617:	je     419621 <_start@@Base+0x13391>
  419619:	mov    eax,DWORD PTR [rbp-0x4]
  41961c:	jmp    419721 <_start@@Base+0x13491>
  419621:	mov    rax,QWORD PTR [rbp-0x18]
  419625:	mov    r9d,0xffffffff
  41962b:	mov    r8d,0x1
  419631:	mov    ecx,0x1
  419636:	mov    edx,0x0
  41963b:	mov    esi,0x1e
  419640:	mov    rdi,rax
  419643:	call   4231e6 <flatcc_verify_vector_field@@Base>
  419648:	mov    DWORD PTR [rbp-0x4],eax
  41964b:	cmp    DWORD PTR [rbp-0x4],0x0
  41964f:	je     419659 <_start@@Base+0x133c9>
  419651:	mov    eax,DWORD PTR [rbp-0x4]
  419654:	jmp    419721 <_start@@Base+0x13491>
  419659:	mov    rax,QWORD PTR [rbp-0x18]
  41965d:	mov    r9d,0x1fffffff
  419663:	mov    r8d,0x8
  419669:	mov    ecx,0x8
  41966e:	mov    edx,0x0
  419673:	mov    esi,0x20
  419678:	mov    rdi,rax
  41967b:	call   4231e6 <flatcc_verify_vector_field@@Base>
  419680:	mov    DWORD PTR [rbp-0x4],eax
  419683:	cmp    DWORD PTR [rbp-0x4],0x0
  419687:	je     419691 <_start@@Base+0x13401>
  419689:	mov    eax,DWORD PTR [rbp-0x4]
  41968c:	jmp    419721 <_start@@Base+0x13491>
  419691:	mov    rax,QWORD PTR [rbp-0x18]
  419695:	mov    r9d,0x1fffffff
  41969b:	mov    r8d,0x8
  4196a1:	mov    ecx,0x8
  4196a6:	mov    edx,0x0
  4196ab:	mov    esi,0x21
  4196b0:	mov    rdi,rax
  4196b3:	call   4231e6 <flatcc_verify_vector_field@@Base>
  4196b8:	mov    DWORD PTR [rbp-0x4],eax
  4196bb:	cmp    DWORD PTR [rbp-0x4],0x0
  4196bf:	je     4196c6 <_start@@Base+0x13436>
  4196c1:	mov    eax,DWORD PTR [rbp-0x4]
  4196c4:	jmp    419721 <_start@@Base+0x13491>
  4196c6:	mov    rax,QWORD PTR [rbp-0x18]
  4196ca:	lea    rcx,[rip+0xfffffffffffff2e4]        # 4189b5 <_start@@Base+0x12725>
  4196d1:	mov    edx,0x0
  4196d6:	mov    esi,0x22
  4196db:	mov    rdi,rax
  4196de:	call   423355 <flatcc_verify_table_field@@Base>
  4196e3:	mov    DWORD PTR [rbp-0x4],eax
  4196e6:	cmp    DWORD PTR [rbp-0x4],0x0
  4196ea:	je     4196f1 <_start@@Base+0x13461>
  4196ec:	mov    eax,DWORD PTR [rbp-0x4]
  4196ef:	jmp    419721 <_start@@Base+0x13491>
  4196f1:	mov    rax,QWORD PTR [rbp-0x18]
  4196f5:	lea    rcx,[rip+0xfffffffffffff920]        # 41901c <_start@@Base+0x12d8c>
  4196fc:	mov    edx,0x0
  419701:	mov    esi,0x23
  419706:	mov    rdi,rax
  419709:	call   423355 <flatcc_verify_table_field@@Base>
  41970e:	mov    DWORD PTR [rbp-0x4],eax
  419711:	cmp    DWORD PTR [rbp-0x4],0x0
  419715:	je     41971c <_start@@Base+0x1348c>
  419717:	mov    eax,DWORD PTR [rbp-0x4]
  41971a:	jmp    419721 <_start@@Base+0x13491>
  41971c:	mov    eax,0x0
  419721:	leave  
  419722:	ret    
  419723:	endbr64 
  419727:	push   rbp
  419728:	mov    rbp,rsp
  41972b:	sub    rsp,0x20
  41972f:	mov    QWORD PTR [rbp-0x18],rdi
  419733:	mov    rax,QWORD PTR [rbp-0x18]
  419737:	mov    ecx,0x1
  41973c:	mov    edx,0x1
  419741:	mov    esi,0x0
  419746:	mov    rdi,rax
  419749:	call   4230dc <flatcc_verify_field@@Base>
  41974e:	mov    DWORD PTR [rbp-0x4],eax
  419751:	cmp    DWORD PTR [rbp-0x4],0x0
  419755:	je     41975f <_start@@Base+0x134cf>
  419757:	mov    eax,DWORD PTR [rbp-0x4]
  41975a:	jmp    419957 <_start@@Base+0x136c7>
  41975f:	mov    rax,QWORD PTR [rbp-0x18]
  419763:	mov    ecx,0x1
  419768:	mov    edx,0x1
  41976d:	mov    esi,0x1
  419772:	mov    rdi,rax
  419775:	call   4230dc <flatcc_verify_field@@Base>
  41977a:	mov    DWORD PTR [rbp-0x4],eax
  41977d:	cmp    DWORD PTR [rbp-0x4],0x0
  419781:	je     41978b <_start@@Base+0x134fb>
  419783:	mov    eax,DWORD PTR [rbp-0x4]
  419786:	jmp    419957 <_start@@Base+0x136c7>
  41978b:	mov    rax,QWORD PTR [rbp-0x18]
  41978f:	mov    ecx,0x2
  419794:	mov    edx,0x2
  419799:	mov    esi,0x2
  41979e:	mov    rdi,rax
  4197a1:	call   4230dc <flatcc_verify_field@@Base>
  4197a6:	mov    DWORD PTR [rbp-0x4],eax
  4197a9:	cmp    DWORD PTR [rbp-0x4],0x0
  4197ad:	je     4197b7 <_start@@Base+0x13527>
  4197af:	mov    eax,DWORD PTR [rbp-0x4]
  4197b2:	jmp    419957 <_start@@Base+0x136c7>
  4197b7:	mov    rax,QWORD PTR [rbp-0x18]
  4197bb:	mov    ecx,0x2
  4197c0:	mov    edx,0x2
  4197c5:	mov    esi,0x3
  4197ca:	mov    rdi,rax
  4197cd:	call   4230dc <flatcc_verify_field@@Base>
  4197d2:	mov    DWORD PTR [rbp-0x4],eax
  4197d5:	cmp    DWORD PTR [rbp-0x4],0x0
  4197d9:	je     4197e3 <_start@@Base+0x13553>
  4197db:	mov    eax,DWORD PTR [rbp-0x4]
  4197de:	jmp    419957 <_start@@Base+0x136c7>
  4197e3:	mov    rax,QWORD PTR [rbp-0x18]
  4197e7:	mov    ecx,0x4
  4197ec:	mov    edx,0x4
  4197f1:	mov    esi,0x4
  4197f6:	mov    rdi,rax
  4197f9:	call   4230dc <flatcc_verify_field@@Base>
  4197fe:	mov    DWORD PTR [rbp-0x4],eax
  419801:	cmp    DWORD PTR [rbp-0x4],0x0
  419805:	je     41980f <_start@@Base+0x1357f>
  419807:	mov    eax,DWORD PTR [rbp-0x4]
  41980a:	jmp    419957 <_start@@Base+0x136c7>
  41980f:	mov    rax,QWORD PTR [rbp-0x18]
  419813:	mov    ecx,0x4
  419818:	mov    edx,0x4
  41981d:	mov    esi,0x5
  419822:	mov    rdi,rax
  419825:	call   4230dc <flatcc_verify_field@@Base>
  41982a:	mov    DWORD PTR [rbp-0x4],eax
  41982d:	cmp    DWORD PTR [rbp-0x4],0x0
  419831:	je     41983b <_start@@Base+0x135ab>
  419833:	mov    eax,DWORD PTR [rbp-0x4]
  419836:	jmp    419957 <_start@@Base+0x136c7>
  41983b:	mov    rax,QWORD PTR [rbp-0x18]
  41983f:	mov    ecx,0x8
  419844:	mov    edx,0x8
  419849:	mov    esi,0x6
  41984e:	mov    rdi,rax
  419851:	call   4230dc <flatcc_verify_field@@Base>
  419856:	mov    DWORD PTR [rbp-0x4],eax
  419859:	cmp    DWORD PTR [rbp-0x4],0x0
  41985d:	je     419867 <_start@@Base+0x135d7>
  41985f:	mov    eax,DWORD PTR [rbp-0x4]
  419862:	jmp    419957 <_start@@Base+0x136c7>
  419867:	mov    rax,QWORD PTR [rbp-0x18]
  41986b:	mov    ecx,0x8
  419870:	mov    edx,0x8
  419875:	mov    esi,0x7
  41987a:	mov    rdi,rax
  41987d:	call   4230dc <flatcc_verify_field@@Base>
  419882:	mov    DWORD PTR [rbp-0x4],eax
  419885:	cmp    DWORD PTR [rbp-0x4],0x0
  419889:	je     419893 <_start@@Base+0x13603>
  41988b:	mov    eax,DWORD PTR [rbp-0x4]
  41988e:	jmp    419957 <_start@@Base+0x136c7>
  419893:	mov    rax,QWORD PTR [rbp-0x18]
  419897:	mov    ecx,0x4
  41989c:	mov    edx,0x4
  4198a1:	mov    esi,0x8
  4198a6:	mov    rdi,rax
  4198a9:	call   4230dc <flatcc_verify_field@@Base>
  4198ae:	mov    DWORD PTR [rbp-0x4],eax
  4198b1:	cmp    DWORD PTR [rbp-0x4],0x0
  4198b5:	je     4198bf <_start@@Base+0x1362f>
  4198b7:	mov    eax,DWORD PTR [rbp-0x4]
  4198ba:	jmp    419957 <_start@@Base+0x136c7>
  4198bf:	mov    rax,QWORD PTR [rbp-0x18]
  4198c3:	mov    ecx,0x8
  4198c8:	mov    edx,0x8
  4198cd:	mov    esi,0x9
  4198d2:	mov    rdi,rax
  4198d5:	call   4230dc <flatcc_verify_field@@Base>
  4198da:	mov    DWORD PTR [rbp-0x4],eax
  4198dd:	cmp    DWORD PTR [rbp-0x4],0x0
  4198e1:	je     4198e8 <_start@@Base+0x13658>
  4198e3:	mov    eax,DWORD PTR [rbp-0x4]
  4198e6:	jmp    419957 <_start@@Base+0x136c7>
  4198e8:	mov    rax,QWORD PTR [rbp-0x18]
  4198ec:	mov    r9d,0xffffffff
  4198f2:	mov    r8d,0x1
  4198f8:	mov    ecx,0x1
  4198fd:	mov    edx,0x0
  419902:	mov    esi,0xa
  419907:	mov    rdi,rax
  41990a:	call   4231e6 <flatcc_verify_vector_field@@Base>
  41990f:	mov    DWORD PTR [rbp-0x4],eax
  419912:	cmp    DWORD PTR [rbp-0x4],0x0
  419916:	je     41991d <_start@@Base+0x1368d>
  419918:	mov    eax,DWORD PTR [rbp-0x4]
  41991b:	jmp    419957 <_start@@Base+0x136c7>
  41991d:	mov    rax,QWORD PTR [rbp-0x18]
  419921:	mov    r9d,0x1fffffff
  419927:	mov    r8d,0x8
  41992d:	mov    ecx,0x8
  419932:	mov    edx,0x0
  419937:	mov    esi,0xb
  41993c:	mov    rdi,rax
  41993f:	call   4231e6 <flatcc_verify_vector_field@@Base>
  419944:	mov    DWORD PTR [rbp-0x4],eax
  419947:	cmp    DWORD PTR [rbp-0x4],0x0
  41994b:	je     419952 <_start@@Base+0x136c2>
  41994d:	mov    eax,DWORD PTR [rbp-0x4]
  419950:	jmp    419957 <_start@@Base+0x136c7>
  419952:	mov    eax,0x0
  419957:	leave  
  419958:	ret    
  419959:	endbr64 
  41995d:	push   rbp
  41995e:	mov    rbp,rsp
  419961:	sub    rsp,0x20
  419965:	mov    QWORD PTR [rbp-0x18],rdi
  419969:	mov    rax,QWORD PTR [rbp-0x18]
  41996d:	mov    ecx,0x4
  419972:	mov    edx,0x4
  419977:	mov    esi,0x0
  41997c:	mov    rdi,rax
  41997f:	call   4230dc <flatcc_verify_field@@Base>
  419984:	mov    DWORD PTR [rbp-0x4],eax
  419987:	cmp    DWORD PTR [rbp-0x4],0x0
  41998b:	je     419992 <_start@@Base+0x13702>
  41998d:	mov    eax,DWORD PTR [rbp-0x4]
  419990:	jmp    419997 <_start@@Base+0x13707>
  419992:	mov    eax,0x0
  419997:	leave  
  419998:	ret    
  419999:	endbr64 
  41999d:	push   rbp
  41999e:	mov    rbp,rsp
  4199a1:	sub    rsp,0x20
  4199a5:	mov    QWORD PTR [rbp-0x18],rdi
  4199a9:	mov    rax,QWORD PTR [rbp-0x18]
  4199ad:	lea    rcx,[rip+0xffffffffffffef3a]        # 4188ee <_start@@Base+0x1265e>
  4199b4:	mov    edx,0x0
  4199b9:	mov    esi,0x1
  4199be:	mov    rdi,rax
  4199c1:	call   423b9a <flatcc_verify_union_field@@Base>
  4199c6:	mov    DWORD PTR [rbp-0x4],eax
  4199c9:	cmp    DWORD PTR [rbp-0x4],0x0
  4199cd:	je     4199d7 <_start@@Base+0x13747>
  4199cf:	mov    eax,DWORD PTR [rbp-0x4]
  4199d2:	jmp    419a8b <_start@@Base+0x137fb>
  4199d7:	mov    rax,QWORD PTR [rbp-0x18]
  4199db:	lea    rcx,[rip+0xffffffffffffef0c]        # 4188ee <_start@@Base+0x1265e>
  4199e2:	mov    edx,0x0
  4199e7:	mov    esi,0x3
  4199ec:	mov    rdi,rax
  4199ef:	call   423b9a <flatcc_verify_union_field@@Base>
  4199f4:	mov    DWORD PTR [rbp-0x4],eax
  4199f7:	cmp    DWORD PTR [rbp-0x4],0x0
  4199fb:	je     419a05 <_start@@Base+0x13775>
  4199fd:	mov    eax,DWORD PTR [rbp-0x4]
  419a00:	jmp    419a8b <_start@@Base+0x137fb>
  419a05:	mov    rax,QWORD PTR [rbp-0x18]
  419a09:	lea    rcx,[rip+0xffffffffffffeede]        # 4188ee <_start@@Base+0x1265e>
  419a10:	mov    edx,0x0
  419a15:	mov    esi,0x5
  419a1a:	mov    rdi,rax
  419a1d:	call   423b9a <flatcc_verify_union_field@@Base>
  419a22:	mov    DWORD PTR [rbp-0x4],eax
  419a25:	cmp    DWORD PTR [rbp-0x4],0x0
  419a29:	je     419a30 <_start@@Base+0x137a0>
  419a2b:	mov    eax,DWORD PTR [rbp-0x4]
  419a2e:	jmp    419a8b <_start@@Base+0x137fb>
  419a30:	mov    rax,QWORD PTR [rbp-0x18]
  419a34:	lea    rcx,[rip+0xffffffffffffeeb3]        # 4188ee <_start@@Base+0x1265e>
  419a3b:	mov    edx,0x0
  419a40:	mov    esi,0x7
  419a45:	mov    rdi,rax
  419a48:	call   423b9a <flatcc_verify_union_field@@Base>
  419a4d:	mov    DWORD PTR [rbp-0x4],eax
  419a50:	cmp    DWORD PTR [rbp-0x4],0x0
  419a54:	je     419a5b <_start@@Base+0x137cb>
  419a56:	mov    eax,DWORD PTR [rbp-0x4]
  419a59:	jmp    419a8b <_start@@Base+0x137fb>
  419a5b:	mov    rax,QWORD PTR [rbp-0x18]
  419a5f:	lea    rcx,[rip+0xffffffffffffee88]        # 4188ee <_start@@Base+0x1265e>
  419a66:	mov    edx,0x0
  419a6b:	mov    esi,0x9
  419a70:	mov    rdi,rax
  419a73:	call   423da2 <flatcc_verify_union_vector_field@@Base>
  419a78:	mov    DWORD PTR [rbp-0x4],eax
  419a7b:	cmp    DWORD PTR [rbp-0x4],0x0
  419a7f:	je     419a86 <_start@@Base+0x137f6>
  419a81:	mov    eax,DWORD PTR [rbp-0x4]
  419a84:	jmp    419a8b <_start@@Base+0x137fb>
  419a86:	mov    eax,0x0
  419a8b:	leave  
  419a8c:	ret    
  419a8d:	endbr64 
  419a91:	push   rbp
  419a92:	mov    rbp,rsp
  419a95:	sub    rsp,0x50
  419a99:	mov    QWORD PTR [rbp-0x38],rdi
  419a9d:	mov    QWORD PTR [rbp-0x40],rsi
  419aa1:	mov    QWORD PTR [rbp-0x48],rdx
  419aa5:	mov    QWORD PTR [rbp-0x50],rcx
  419aa9:	mov    rax,QWORD PTR fs:0x28
  419ab2:	mov    QWORD PTR [rbp-0x8],rax
  419ab6:	xor    eax,eax
  419ab8:	mov    rax,QWORD PTR [rbp-0x40]
  419abc:	mov    QWORD PTR [rbp-0x28],rax
  419ac0:	cmp    QWORD PTR [rbp-0x38],0x0
  419ac5:	je     419ae3 <_start@@Base+0x13853>
  419ac7:	mov    rdx,QWORD PTR [rbp-0x38]
  419acb:	mov    rax,QWORD PTR [rbp-0x50]
  419acf:	lea    rsi,[rip+0x1d9fa]        # 4374d0 <_IO_stdin_used@@Base+0x4d0>
  419ad6:	mov    rdi,rax
  419ad9:	mov    eax,0x0
  419ade:	call   406210 <fprintf@plt>
  419ae3:	mov    DWORD PTR [rbp-0x2c],0x0
  419aea:	jmp    419bd7 <_start@@Base+0x13947>
  419aef:	mov    eax,DWORD PTR [rbp-0x2c]
  419af2:	and    eax,0xf
  419af5:	test   eax,eax
  419af7:	jne    419b38 <_start@@Base+0x138a8>
  419af9:	cmp    DWORD PTR [rbp-0x2c],0x0
  419afd:	je     419b1b <_start@@Base+0x1388b>
  419aff:	lea    rdx,[rbp-0x20]
  419b03:	mov    rax,QWORD PTR [rbp-0x50]
  419b07:	lea    rsi,[rip+0x1d9c7]        # 4374d5 <_IO_stdin_used@@Base+0x4d5>
  419b0e:	mov    rdi,rax
  419b11:	mov    eax,0x0
  419b16:	call   406210 <fprintf@plt>
  419b1b:	mov    edx,DWORD PTR [rbp-0x2c]
  419b1e:	mov    rax,QWORD PTR [rbp-0x50]
  419b22:	lea    rsi,[rip+0x1d9b2]        # 4374db <_IO_stdin_used@@Base+0x4db>
  419b29:	mov    rdi,rax
  419b2c:	mov    eax,0x0
  419b31:	call   406210 <fprintf@plt>
  419b36:	jmp    419b53 <_start@@Base+0x138c3>
  419b38:	mov    eax,DWORD PTR [rbp-0x2c]
  419b3b:	and    eax,0x7
  419b3e:	test   eax,eax
  419b40:	jne    419b53 <_start@@Base+0x138c3>
  419b42:	mov    rax,QWORD PTR [rbp-0x50]
  419b46:	mov    rsi,rax
  419b49:	mov    edi,0x20
  419b4e:	call   4061d0 <fputc@plt>
  419b53:	mov    edx,DWORD PTR [rbp-0x2c]
  419b56:	mov    rax,QWORD PTR [rbp-0x28]
  419b5a:	add    rax,rdx
  419b5d:	movzx  eax,BYTE PTR [rax]
  419b60:	movzx  edx,al
  419b63:	mov    rax,QWORD PTR [rbp-0x50]
  419b67:	lea    rsi,[rip+0x1d975]        # 4374e3 <_IO_stdin_used@@Base+0x4e3>
  419b6e:	mov    rdi,rax
  419b71:	mov    eax,0x0
  419b76:	call   406210 <fprintf@plt>
  419b7b:	mov    edx,DWORD PTR [rbp-0x2c]
  419b7e:	mov    rax,QWORD PTR [rbp-0x28]
  419b82:	add    rax,rdx
  419b85:	movzx  eax,BYTE PTR [rax]
  419b88:	cmp    al,0x1f
  419b8a:	jbe    419b9d <_start@@Base+0x1390d>
  419b8c:	mov    edx,DWORD PTR [rbp-0x2c]
  419b8f:	mov    rax,QWORD PTR [rbp-0x28]
  419b93:	add    rax,rdx
  419b96:	movzx  eax,BYTE PTR [rax]
  419b99:	cmp    al,0x7e
  419b9b:	jbe    419bac <_start@@Base+0x1391c>
  419b9d:	mov    eax,DWORD PTR [rbp-0x2c]
  419ba0:	and    eax,0xf
  419ba3:	mov    eax,eax
  419ba5:	mov    BYTE PTR [rbp+rax*1-0x20],0x2e
  419baa:	jmp    419bc5 <_start@@Base+0x13935>
  419bac:	mov    edx,DWORD PTR [rbp-0x2c]
  419baf:	mov    rax,QWORD PTR [rbp-0x28]
  419bb3:	add    rax,rdx
  419bb6:	mov    edx,DWORD PTR [rbp-0x2c]
  419bb9:	and    edx,0xf
  419bbc:	movzx  eax,BYTE PTR [rax]
  419bbf:	mov    edx,edx
  419bc1:	mov    BYTE PTR [rbp+rdx*1-0x20],al
  419bc5:	mov    eax,DWORD PTR [rbp-0x2c]
  419bc8:	and    eax,0xf
  419bcb:	inc    eax
  419bcd:	mov    eax,eax
  419bcf:	mov    BYTE PTR [rbp+rax*1-0x20],0x0
  419bd4:	inc    DWORD PTR [rbp-0x2c]
  419bd7:	mov    rax,QWORD PTR [rbp-0x48]
  419bdb:	cmp    DWORD PTR [rbp-0x2c],eax
  419bde:	jb     419aef <_start@@Base+0x1385f>
  419be4:	jmp    419c06 <_start@@Base+0x13976>
  419be6:	mov    rax,QWORD PTR [rbp-0x50]
  419bea:	mov    rcx,rax
  419bed:	mov    edx,0x3
  419bf2:	mov    esi,0x1
  419bf7:	lea    rdi,[rip+0x1d8eb]        # 4374e9 <_IO_stdin_used@@Base+0x4e9>
  419bfe:	call   406270 <fwrite@plt>
  419c03:	inc    DWORD PTR [rbp-0x2c]
  419c06:	mov    eax,DWORD PTR [rbp-0x2c]
  419c09:	and    eax,0xf
  419c0c:	test   eax,eax
  419c0e:	jne    419be6 <_start@@Base+0x13956>
  419c10:	lea    rdx,[rbp-0x20]
  419c14:	mov    rax,QWORD PTR [rbp-0x50]
  419c18:	lea    rsi,[rip+0x1d8b6]        # 4374d5 <_IO_stdin_used@@Base+0x4d5>
  419c1f:	mov    rdi,rax
  419c22:	mov    eax,0x0
  419c27:	call   406210 <fprintf@plt>
  419c2c:	nop
  419c2d:	mov    rax,QWORD PTR [rbp-0x8]
  419c31:	xor    rax,QWORD PTR fs:0x28
  419c3a:	je     419c41 <_start@@Base+0x139b1>
  419c3c:	call   4061a0 <__stack_chk_fail@plt>
  419c41:	leave  
  419c42:	ret    

0000000000419c43 <test_json@@Base>:
  419c43:	endbr64 
  419c47:	push   rbp
  419c48:	mov    rbp,rsp
  419c4b:	push   r12
  419c4d:	push   rbx
  419c4e:	sub    rsp,0x2a0
  419c55:	mov    QWORD PTR [rbp-0x288],rdi
  419c5c:	mov    QWORD PTR [rbp-0x290],rsi
  419c63:	mov    QWORD PTR [rbp-0x298],rdx
  419c6a:	mov    DWORD PTR [rbp-0x29c],ecx
  419c70:	mov    DWORD PTR [rbp-0x2a0],r8d
  419c77:	mov    DWORD PTR [rbp-0x2a4],r9d
  419c7e:	mov    rax,QWORD PTR fs:0x28
  419c87:	mov    QWORD PTR [rbp-0x18],rax
  419c8b:	xor    eax,eax
  419c8d:	mov    DWORD PTR [rbp-0x274],0xffffffff
  419c97:	mov    QWORD PTR [rbp-0x258],0x0
  419ca2:	mov    QWORD PTR [rbp-0x250],0x0
  419cad:	lea    rax,[rbp-0x1a0]
  419cb4:	mov    QWORD PTR [rbp-0x248],rax
  419cbb:	mov    rax,QWORD PTR [rbp-0x248]
  419cc2:	mov    rdi,rax
  419cc5:	call   41ca72 <flatcc_builder_init@@Base>
  419cca:	lea    rax,[rbp-0x1f0]
  419cd1:	mov    esi,0x0
  419cd6:	mov    rdi,rax
  419cd9:	call   4364ac <flatcc_json_printer_init_dynamic_buffer@@Base>
  419cde:	mov    edx,DWORD PTR [rbp-0x2a4]
  419ce4:	lea    rax,[rbp-0x1f0]
  419ceb:	mov    esi,edx
  419ced:	mov    rdi,rax
  419cf0:	call   416cad <_start@@Base+0x10a1d>
  419cf5:	mov    rax,QWORD PTR [rbp-0x288]
  419cfc:	mov    rbx,QWORD PTR [rax+0x8]
  419d00:	mov    rax,QWORD PTR [rbp-0x288]
  419d07:	mov    r12,QWORD PTR [rax]
  419d0a:	mov    rax,QWORD PTR [rbp-0x290]
  419d11:	mov    rdi,rax
  419d14:	call   406190 <strlen@plt>
  419d19:	mov    rdi,rax
  419d1c:	mov    ecx,DWORD PTR [rbp-0x2a0]
  419d22:	mov    rdx,QWORD PTR [rbp-0x290]
  419d29:	lea    rsi,[rbp-0x240]
  419d30:	mov    rax,QWORD PTR [rbp-0x248]
  419d37:	sub    rsp,0x8
  419d3b:	push   rbx
  419d3c:	mov    r9,r12
  419d3f:	mov    r8d,ecx
  419d42:	mov    rcx,rdi
  419d45:	mov    rdi,rax
  419d48:	call   42a6dc <flatcc_json_parser_table_as_root@@Base>
  419d4d:	add    rsp,0x10
  419d51:	mov    DWORD PTR [rbp-0x26c],eax
  419d57:	mov    eax,DWORD PTR [rbp-0x26c]
  419d5d:	cmp    eax,DWORD PTR [rbp-0x29c]
  419d63:	je     419f24 <test_json@@Base+0x2e1>
  419d69:	cmp    DWORD PTR [rbp-0x29c],0x0
  419d70:	je     419e6a <test_json@@Base+0x227>
  419d76:	cmp    DWORD PTR [rbp-0x26c],0x0
  419d7d:	je     419e0f <test_json@@Base+0x1cc>
  419d83:	mov    eax,DWORD PTR [rbp-0x26c]
  419d89:	mov    edi,eax
  419d8b:	call   427b36 <flatcc_json_parser_error_string@@Base>
  419d90:	mov    rdx,rax
  419d93:	mov    rax,QWORD PTR [rip+0x2d24e]        # 446fe8 <stderr@GLIBC_2.2.5>
  419d9a:	mov    rax,QWORD PTR [rax]
  419d9d:	mov    rcx,rdx
  419da0:	mov    edx,DWORD PTR [rbp+0x10]
  419da3:	lea    rsi,[rip+0x1d74e]        # 4374f8 <_IO_stdin_used@@Base+0x4f8>
  419daa:	mov    rdi,rax
  419dad:	mov    eax,0x0
  419db2:	call   406210 <fprintf@plt>
  419db7:	mov    eax,DWORD PTR [rbp-0x29c]
  419dbd:	mov    edi,eax
  419dbf:	call   427b36 <flatcc_json_parser_error_string@@Base>
  419dc4:	mov    rdx,rax
  419dc7:	mov    rax,QWORD PTR [rip+0x2d21a]        # 446fe8 <stderr@GLIBC_2.2.5>
  419dce:	mov    rax,QWORD PTR [rax]
  419dd1:	lea    rsi,[rip+0x1d748]        # 437520 <_IO_stdin_used@@Base+0x520>
  419dd8:	mov    rdi,rax
  419ddb:	mov    eax,0x0
  419de0:	call   406210 <fprintf@plt>
  419de5:	mov    rax,QWORD PTR [rip+0x2d1fc]        # 446fe8 <stderr@GLIBC_2.2.5>
  419dec:	mov    rax,QWORD PTR [rax]
  419def:	mov    rdx,QWORD PTR [rbp-0x290]
  419df6:	lea    rsi,[rip+0x1d742]        # 43753f <_IO_stdin_used@@Base+0x53f>
  419dfd:	mov    rdi,rax
  419e00:	mov    eax,0x0
  419e05:	call   406210 <fprintf@plt>
  419e0a:	jmp    419ec3 <test_json@@Base+0x280>
  419e0f:	mov    eax,DWORD PTR [rbp-0x29c]
  419e15:	mov    edi,eax
  419e17:	call   427b36 <flatcc_json_parser_error_string@@Base>
  419e1c:	mov    rdx,rax
  419e1f:	mov    rax,QWORD PTR [rip+0x2d1c2]        # 446fe8 <stderr@GLIBC_2.2.5>
  419e26:	mov    rax,QWORD PTR [rax]
  419e29:	mov    rcx,rdx
  419e2c:	mov    edx,DWORD PTR [rbp+0x10]
  419e2f:	lea    rsi,[rip+0x1d712]        # 437548 <_IO_stdin_used@@Base+0x548>
  419e36:	mov    rdi,rax
  419e39:	mov    eax,0x0
  419e3e:	call   406210 <fprintf@plt>
  419e43:	mov    rax,QWORD PTR [rip+0x2d19e]        # 446fe8 <stderr@GLIBC_2.2.5>
  419e4a:	mov    rax,QWORD PTR [rax]
  419e4d:	mov    rdx,QWORD PTR [rbp-0x290]
  419e54:	lea    rsi,[rip+0x1d6e4]        # 43753f <_IO_stdin_used@@Base+0x53f>
  419e5b:	mov    rdi,rax
  419e5e:	mov    eax,0x0
  419e63:	call   406210 <fprintf@plt>
  419e68:	jmp    419ec3 <test_json@@Base+0x280>
  419e6a:	mov    eax,DWORD PTR [rbp-0x26c]
  419e70:	mov    edi,eax
  419e72:	call   427b36 <flatcc_json_parser_error_string@@Base>
  419e77:	mov    rdx,rax
  419e7a:	mov    rax,QWORD PTR [rip+0x2d167]        # 446fe8 <stderr@GLIBC_2.2.5>
  419e81:	mov    rax,QWORD PTR [rax]
  419e84:	mov    rcx,rdx
  419e87:	mov    edx,DWORD PTR [rbp+0x10]
  419e8a:	lea    rsi,[rip+0x1d6f7]        # 437588 <_IO_stdin_used@@Base+0x588>
  419e91:	mov    rdi,rax
  419e94:	mov    eax,0x0
  419e99:	call   406210 <fprintf@plt>
  419e9e:	mov    rax,QWORD PTR [rip+0x2d143]        # 446fe8 <stderr@GLIBC_2.2.5>
  419ea5:	mov    rax,QWORD PTR [rax]
  419ea8:	mov    rdx,QWORD PTR [rbp-0x290]
  419eaf:	lea    rsi,[rip+0x1d689]        # 43753f <_IO_stdin_used@@Base+0x53f>
  419eb6:	mov    rdi,rax
  419eb9:	mov    eax,0x0
  419ebe:	call   406210 <fprintf@plt>
  419ec3:	mov    DWORD PTR [rbp-0x270],0x0
  419ecd:	jmp    419eec <test_json@@Base+0x2a9>
  419ecf:	mov    rax,QWORD PTR [rip+0x2d112]        # 446fe8 <stderr@GLIBC_2.2.5>
  419ed6:	mov    rax,QWORD PTR [rax]
  419ed9:	mov    rsi,rax
  419edc:	mov    edi,0x20
  419ee1:	call   4061d0 <fputc@plt>
  419ee6:	inc    DWORD PTR [rbp-0x270]
  419eec:	mov    eax,DWORD PTR [rbp-0x224]
  419ef2:	dec    eax
  419ef4:	cmp    DWORD PTR [rbp-0x270],eax
  419efa:	jl     419ecf <test_json@@Base+0x28c>
  419efc:	mov    rax,QWORD PTR [rip+0x2d0e5]        # 446fe8 <stderr@GLIBC_2.2.5>
  419f03:	mov    rax,QWORD PTR [rax]
  419f06:	mov    rcx,rax
  419f09:	mov    edx,0x2
  419f0e:	mov    esi,0x1
  419f13:	lea    rdi,[rip+0x1d68f]        # 4375a9 <_IO_stdin_used@@Base+0x5a9>
  419f1a:	call   406270 <fwrite@plt>
  419f1f:	jmp    41a134 <test_json@@Base+0x4f1>
  419f24:	cmp    DWORD PTR [rbp-0x29c],0x0
  419f2b:	je     419f3c <test_json@@Base+0x2f9>
  419f2d:	mov    DWORD PTR [rbp-0x274],0x0
  419f37:	jmp    41a0f0 <test_json@@Base+0x4ad>
  419f3c:	lea    rdx,[rbp-0x268]
  419f43:	mov    rax,QWORD PTR [rbp-0x248]
  419f4a:	mov    rsi,rdx
  419f4d:	mov    rdi,rax
  419f50:	call   4215ae <flatcc_builder_finalize_aligned_buffer@@Base>
  419f55:	mov    QWORD PTR [rbp-0x258],rax
  419f5c:	mov    rax,QWORD PTR [rbp-0x288]
  419f63:	mov    rcx,QWORD PTR [rax+0x18]
  419f67:	mov    rax,QWORD PTR [rbp-0x288]
  419f6e:	mov    rdx,QWORD PTR [rax]
  419f71:	mov    rsi,QWORD PTR [rbp-0x268]
  419f78:	mov    rax,QWORD PTR [rbp-0x258]
  419f7f:	mov    rdi,rax
  419f82:	call   423849 <flatcc_verify_table_as_root@@Base>
  419f87:	mov    DWORD PTR [rbp-0x274],eax
  419f8d:	cmp    DWORD PTR [rbp-0x274],0x0
  419f94:	je     419fd6 <test_json@@Base+0x393>
  419f96:	mov    eax,DWORD PTR [rbp-0x274]
  419f9c:	mov    edi,eax
  419f9e:	call   4222db <flatcc_verify_error_string@@Base>
  419fa3:	mov    rdx,rax
  419fa6:	mov    rax,QWORD PTR [rip+0x2d03b]        # 446fe8 <stderr@GLIBC_2.2.5>
  419fad:	mov    rax,QWORD PTR [rax]
  419fb0:	mov    r8,rdx
  419fb3:	mov    ecx,DWORD PTR [rbp+0x10]
  419fb6:	lea    rdx,[rip+0x1d5f3]        # 4375b0 <_IO_stdin_used@@Base+0x5b0>
  419fbd:	lea    rsi,[rip+0x1d654]        # 437618 <_IO_stdin_used@@Base+0x618>
  419fc4:	mov    rdi,rax
  419fc7:	mov    eax,0x0
  419fcc:	call   406210 <fprintf@plt>
  419fd1:	jmp    41a134 <test_json@@Base+0x4f1>
  419fd6:	mov    rax,QWORD PTR [rbp-0x288]
  419fdd:	mov    rdi,QWORD PTR [rax+0x10]
  419fe1:	mov    rax,QWORD PTR [rbp-0x288]
  419fe8:	mov    rcx,QWORD PTR [rax]
  419feb:	mov    rdx,QWORD PTR [rbp-0x268]
  419ff2:	mov    rsi,QWORD PTR [rbp-0x258]
  419ff9:	lea    rax,[rbp-0x1f0]
  41a000:	mov    r8,rdi
  41a003:	mov    rdi,rax
  41a006:	call   435c90 <flatcc_json_printer_table_as_root@@Base>
  41a00b:	lea    rdx,[rbp-0x260]
  41a012:	lea    rax,[rbp-0x1f0]
  41a019:	mov    rsi,rdx
  41a01c:	mov    rdi,rax
  41a01f:	call   436595 <flatcc_json_printer_get_buffer@@Base>
  41a024:	mov    QWORD PTR [rbp-0x250],rax
  41a02b:	cmp    QWORD PTR [rbp-0x250],0x0
  41a033:	je     41a056 <test_json@@Base+0x413>
  41a035:	mov    rdx,QWORD PTR [rbp-0x250]
  41a03c:	mov    rax,QWORD PTR [rbp-0x298]
  41a043:	mov    rsi,rdx
  41a046:	mov    rdi,rax
  41a049:	call   406200 <strcmp@plt>
  41a04e:	test   eax,eax
  41a050:	je     41a0e6 <test_json@@Base+0x4a3>
  41a056:	mov    rax,QWORD PTR [rip+0x2cf8b]        # 446fe8 <stderr@GLIBC_2.2.5>
  41a05d:	mov    rax,QWORD PTR [rax]
  41a060:	mov    edx,DWORD PTR [rbp+0x10]
  41a063:	lea    rsi,[rip+0x1d5d6]        # 437640 <_IO_stdin_used@@Base+0x640>
  41a06a:	mov    rdi,rax
  41a06d:	mov    eax,0x0
  41a072:	call   406210 <fprintf@plt>
  41a077:	mov    rax,QWORD PTR [rip+0x2cf6a]        # 446fe8 <stderr@GLIBC_2.2.5>
  41a07e:	mov    rax,QWORD PTR [rax]
  41a081:	mov    rdx,QWORD PTR [rbp-0x250]
  41a088:	lea    rsi,[rip+0x1d4b0]        # 43753f <_IO_stdin_used@@Base+0x53f>
  41a08f:	mov    rdi,rax
  41a092:	mov    eax,0x0
  41a097:	call   406210 <fprintf@plt>
  41a09c:	mov    rax,QWORD PTR [rip+0x2cf45]        # 446fe8 <stderr@GLIBC_2.2.5>
  41a0a3:	mov    rax,QWORD PTR [rax]
  41a0a6:	mov    rcx,rax
  41a0a9:	mov    edx,0xa
  41a0ae:	mov    esi,0x1
  41a0b3:	lea    rdi,[rip+0x1d5bb]        # 437675 <_IO_stdin_used@@Base+0x675>
  41a0ba:	call   406270 <fwrite@plt>
  41a0bf:	mov    rax,QWORD PTR [rip+0x2cf22]        # 446fe8 <stderr@GLIBC_2.2.5>
  41a0c6:	mov    rax,QWORD PTR [rax]
  41a0c9:	mov    rdx,QWORD PTR [rbp-0x298]
  41a0d0:	lea    rsi,[rip+0x1d468]        # 43753f <_IO_stdin_used@@Base+0x53f>
  41a0d7:	mov    rdi,rax
  41a0da:	mov    eax,0x0
  41a0df:	call   406210 <fprintf@plt>
  41a0e4:	jmp    41a134 <test_json@@Base+0x4f1>
  41a0e6:	mov    DWORD PTR [rbp-0x274],0x0
  41a0f0:	mov    rax,QWORD PTR [rbp-0x258]
  41a0f7:	mov    rdi,rax
  41a0fa:	call   4216b0 <flatcc_builder_aligned_free@@Base>
  41a0ff:	mov    rax,QWORD PTR [rbp-0x248]
  41a106:	mov    rdi,rax
  41a109:	call   41cce1 <flatcc_builder_clear@@Base>
  41a10e:	lea    rax,[rbp-0x1f0]
  41a115:	mov    rdi,rax
  41a118:	call   436635 <flatcc_json_printer_clear@@Base>
  41a11d:	mov    eax,DWORD PTR [rbp-0x274]
  41a123:	mov    rbx,QWORD PTR [rbp-0x18]
  41a127:	xor    rbx,QWORD PTR fs:0x28
  41a130:	je     41a179 <test_json@@Base+0x536>
  41a132:	jmp    41a174 <test_json@@Base+0x531>
  41a134:	cmp    QWORD PTR [rbp-0x258],0x0
  41a13c:	je     41a165 <test_json@@Base+0x522>
  41a13e:	mov    rax,QWORD PTR [rip+0x2cea3]        # 446fe8 <stderr@GLIBC_2.2.5>
  41a145:	mov    rcx,QWORD PTR [rax]
  41a148:	mov    rdx,QWORD PTR [rbp-0x268]
  41a14f:	mov    rax,QWORD PTR [rbp-0x258]
  41a156:	mov    rsi,rax
  41a159:	lea    rdi,[rip+0x1d520]        # 437680 <_IO_stdin_used@@Base+0x680>
  41a160:	call   419a8d <_start@@Base+0x137fd>
  41a165:	mov    DWORD PTR [rbp-0x274],0xffffffff
  41a16f:	jmp    41a0f0 <test_json@@Base+0x4ad>
  41a174:	call   4061a0 <__stack_chk_fail@plt>
  41a179:	lea    rsp,[rbp-0x10]
  41a17d:	pop    rbx
  41a17e:	pop    r12
  41a180:	pop    rbp
  41a181:	ret    

000000000041a182 <edge_case_tests@@Base>:
  41a182:	endbr64 
  41a186:	push   rbp
  41a187:	mov    rbp,rsp
  41a18a:	sub    rsp,0x10
  41a18e:	mov    DWORD PTR [rbp-0xc],0x0
  41a195:	lea    rax,[rip+0x2cc04]        # 446da0 <flatcc_builder_padding_base@@Base+0xbe20>
  41a19c:	mov    QWORD PTR [rbp-0x8],rax
  41a1a0:	mov    rax,QWORD PTR [rbp-0x8]
  41a1a4:	sub    rsp,0x8
  41a1a8:	push   0x9b
  41a1ad:	mov    r9d,0x0
  41a1b3:	mov    r8d,0x0
  41a1b9:	mov    ecx,0x0
  41a1be:	lea    rdx,[rip+0x1d4c9]        # 43768e <_IO_stdin_used@@Base+0x68e>
  41a1c5:	lea    rsi,[rip+0x1d4e4]        # 4376b0 <_IO_stdin_used@@Base+0x6b0>
  41a1cc:	mov    rdi,rax
  41a1cf:	call   419c43 <test_json@@Base>
  41a1d4:	add    rsp,0x10
  41a1d8:	or     DWORD PTR [rbp-0xc],eax
  41a1db:	mov    rax,QWORD PTR [rbp-0x8]
  41a1df:	sub    rsp,0x8
  41a1e3:	push   0xa8
  41a1e8:	mov    r9d,0x0
  41a1ee:	mov    r8d,0x2
  41a1f4:	mov    ecx,0x0
  41a1f9:	lea    rdx,[rip+0x1d4e8]        # 4376e8 <_IO_stdin_used@@Base+0x6e8>
  41a200:	lea    rsi,[rip+0x1d509]        # 437710 <_IO_stdin_used@@Base+0x710>
  41a207:	mov    rdi,rax
  41a20a:	call   419c43 <test_json@@Base>
  41a20f:	add    rsp,0x10
  41a213:	or     DWORD PTR [rbp-0xc],eax
  41a216:	mov    rax,QWORD PTR [rbp-0x8]
  41a21a:	sub    rsp,0x8
  41a21e:	push   0xac
  41a223:	mov    r9d,0x2
  41a229:	mov    r8d,0x0
  41a22f:	mov    ecx,0x0
  41a234:	lea    rdx,[rip+0x1d4f6]        # 437731 <_IO_stdin_used@@Base+0x731>
  41a23b:	lea    rsi,[rip+0x1d50e]        # 437750 <_IO_stdin_used@@Base+0x750>
  41a242:	mov    rdi,rax
  41a245:	call   419c43 <test_json@@Base>
  41a24a:	add    rsp,0x10
  41a24e:	or     DWORD PTR [rbp-0xc],eax
  41a251:	mov    rax,QWORD PTR [rbp-0x8]
  41a255:	sub    rsp,0x8
  41a259:	push   0xb0
  41a25e:	mov    r9d,0x4
  41a264:	mov    r8d,0x2
  41a26a:	mov    ecx,0x0
  41a26f:	lea    rdx,[rip+0x1d501]        # 437777 <_IO_stdin_used@@Base+0x777>
  41a276:	lea    rsi,[rip+0x1d493]        # 437710 <_IO_stdin_used@@Base+0x710>
  41a27d:	mov    rdi,rax
  41a280:	call   419c43 <test_json@@Base>
  41a285:	add    rsp,0x10
  41a289:	or     DWORD PTR [rbp-0xc],eax
  41a28c:	mov    rax,QWORD PTR [rbp-0x8]
  41a290:	sub    rsp,0x8
  41a294:	push   0xb4
  41a299:	mov    r9d,0x8
  41a29f:	mov    r8d,0x0
  41a2a5:	mov    ecx,0x0
  41a2aa:	lea    rdx,[rip+0x1d4df]        # 437790 <_IO_stdin_used@@Base+0x790>
  41a2b1:	lea    rsi,[rip+0x1d5f0]        # 4378a8 <_IO_stdin_used@@Base+0x8a8>
  41a2b8:	mov    rdi,rax
  41a2bb:	call   419c43 <test_json@@Base>
  41a2c0:	add    rsp,0x10
  41a2c4:	or     DWORD PTR [rbp-0xc],eax
  41a2c7:	mov    rax,QWORD PTR [rbp-0x8]
  41a2cb:	sub    rsp,0x8
  41a2cf:	push   0xc3
  41a2d4:	mov    r9d,0x0
  41a2da:	mov    r8d,0x2
  41a2e0:	mov    ecx,0x0
  41a2e5:	lea    rdx,[rip+0x1d3fc]        # 4376e8 <_IO_stdin_used@@Base+0x6e8>
  41a2ec:	lea    rsi,[rip+0x1d5dd]        # 4378d0 <_IO_stdin_used@@Base+0x8d0>
  41a2f3:	mov    rdi,rax
  41a2f6:	call   419c43 <test_json@@Base>
  41a2fb:	add    rsp,0x10
  41a2ff:	or     DWORD PTR [rbp-0xc],eax
  41a302:	mov    rax,QWORD PTR [rbp-0x8]
  41a306:	sub    rsp,0x8
  41a30a:	push   0xc7
  41a30f:	mov    r9d,0x0
  41a315:	mov    r8d,0x1
  41a31b:	mov    ecx,0x0
  41a320:	lea    rdx,[rip+0x1d5cf]        # 4378f6 <_IO_stdin_used@@Base+0x8f6>
  41a327:	lea    rsi,[rip+0x1d5ea]        # 437918 <_IO_stdin_used@@Base+0x918>
  41a32e:	mov    rdi,rax
  41a331:	call   419c43 <test_json@@Base>
  41a336:	add    rsp,0x10
  41a33a:	or     DWORD PTR [rbp-0xc],eax
  41a33d:	mov    rax,QWORD PTR [rbp-0x8]
  41a341:	sub    rsp,0x8
  41a345:	push   0xcb
  41a34a:	mov    r9d,0x1
  41a350:	mov    r8d,0x1
  41a356:	mov    ecx,0x0
  41a35b:	lea    rdx,[rip+0x1d5e8]        # 43794a <_IO_stdin_used@@Base+0x94a>
  41a362:	lea    rsi,[rip+0x1d5af]        # 437918 <_IO_stdin_used@@Base+0x918>
  41a369:	mov    rdi,rax
  41a36c:	call   419c43 <test_json@@Base>
  41a371:	add    rsp,0x10
  41a375:	or     DWORD PTR [rbp-0xc],eax
  41a378:	mov    rax,QWORD PTR [rbp-0x8]
  41a37c:	sub    rsp,0x8
  41a380:	push   0xd1
  41a385:	mov    r9d,0x0
  41a38b:	mov    r8d,0x1
  41a391:	mov    ecx,0x0
  41a396:	lea    rdx,[rip+0x1d559]        # 4378f6 <_IO_stdin_used@@Base+0x8f6>
  41a39d:	lea    rsi,[rip+0x1d5c4]        # 437968 <_IO_stdin_used@@Base+0x968>
  41a3a4:	mov    rdi,rax
  41a3a7:	call   419c43 <test_json@@Base>
  41a3ac:	add    rsp,0x10
  41a3b0:	or     DWORD PTR [rbp-0xc],eax
  41a3b3:	mov    rax,QWORD PTR [rbp-0x8]
  41a3b7:	sub    rsp,0x8
  41a3bb:	push   0xd9
  41a3c0:	mov    r9d,0x0
  41a3c6:	mov    r8d,0x2
  41a3cc:	mov    ecx,0x0
  41a3d1:	lea    rdx,[rip+0x1d310]        # 4376e8 <_IO_stdin_used@@Base+0x6e8>
  41a3d8:	lea    rsi,[rip+0x1d5fa]        # 4379d9 <_IO_stdin_used@@Base+0x9d9>
  41a3df:	mov    rdi,rax
  41a3e2:	call   419c43 <test_json@@Base>
  41a3e7:	add    rsp,0x10
  41a3eb:	or     DWORD PTR [rbp-0xc],eax
  41a3ee:	mov    rax,QWORD PTR [rbp-0x8]
  41a3f2:	sub    rsp,0x8
  41a3f6:	push   0xdd
  41a3fb:	mov    r9d,0x2
  41a401:	mov    r8d,0x0
  41a407:	mov    ecx,0x0
  41a40c:	lea    rdx,[rip+0x1d31e]        # 437731 <_IO_stdin_used@@Base+0x731>
  41a413:	lea    rsi,[rip+0x1d5de]        # 4379f8 <_IO_stdin_used@@Base+0x9f8>
  41a41a:	mov    rdi,rax
  41a41d:	call   419c43 <test_json@@Base>
  41a422:	add    rsp,0x10
  41a426:	or     DWORD PTR [rbp-0xc],eax
  41a429:	mov    rax,QWORD PTR [rbp-0x8]
  41a42d:	sub    rsp,0x8
  41a431:	push   0xe1
  41a436:	mov    r9d,0x4
  41a43c:	mov    r8d,0x2
  41a442:	mov    ecx,0x0
  41a447:	lea    rdx,[rip+0x1d329]        # 437777 <_IO_stdin_used@@Base+0x777>
  41a44e:	lea    rsi,[rip+0x1d584]        # 4379d9 <_IO_stdin_used@@Base+0x9d9>
  41a455:	mov    rdi,rax
  41a458:	call   419c43 <test_json@@Base>
  41a45d:	add    rsp,0x10
  41a461:	or     DWORD PTR [rbp-0xc],eax
  41a464:	mov    rax,QWORD PTR [rbp-0x8]
  41a468:	sub    rsp,0x8
  41a46c:	push   0xe5
  41a471:	mov    r9d,0x8
  41a477:	mov    r8d,0x0
  41a47d:	mov    ecx,0x0
  41a482:	lea    rdx,[rip+0x1d597]        # 437a20 <_IO_stdin_used@@Base+0xa20>
  41a489:	lea    rsi,[rip+0x1d6a7]        # 437b37 <_IO_stdin_used@@Base+0xb37>
  41a490:	mov    rdi,rax
  41a493:	call   419c43 <test_json@@Base>
  41a498:	add    rsp,0x10
  41a49c:	or     DWORD PTR [rbp-0xc],eax
  41a49f:	mov    rax,QWORD PTR [rbp-0x8]
  41a4a3:	sub    rsp,0x8
  41a4a7:	push   0xe9
  41a4ac:	mov    r9d,0x0
  41a4b2:	mov    r8d,0x2
  41a4b8:	mov    ecx,0x0
  41a4bd:	lea    rdx,[rip+0x1d224]        # 4376e8 <_IO_stdin_used@@Base+0x6e8>
  41a4c4:	lea    rsi,[rip+0x1d685]        # 437b50 <_IO_stdin_used@@Base+0xb50>
  41a4cb:	mov    rdi,rax
  41a4ce:	call   419c43 <test_json@@Base>
  41a4d3:	add    rsp,0x10
  41a4d7:	or     DWORD PTR [rbp-0xc],eax
  41a4da:	mov    rax,QWORD PTR [rbp-0x8]
  41a4de:	sub    rsp,0x8
  41a4e2:	push   0xed
  41a4e7:	mov    r9d,0x0
  41a4ed:	mov    r8d,0x1
  41a4f3:	mov    ecx,0x0
  41a4f8:	lea    rdx,[rip+0x1d3f7]        # 4378f6 <_IO_stdin_used@@Base+0x8f6>
  41a4ff:	lea    rsi,[rip+0x1d66a]        # 437b70 <_IO_stdin_used@@Base+0xb70>
  41a506:	mov    rdi,rax
  41a509:	call   419c43 <test_json@@Base>
  41a50e:	add    rsp,0x10
  41a512:	or     DWORD PTR [rbp-0xc],eax
  41a515:	mov    rax,QWORD PTR [rbp-0x8]
  41a519:	sub    rsp,0x8
  41a51d:	push   0xf1
  41a522:	mov    r9d,0x1
  41a528:	mov    r8d,0x1
  41a52e:	mov    ecx,0x0
  41a533:	lea    rdx,[rip+0x1d410]        # 43794a <_IO_stdin_used@@Base+0x94a>
  41a53a:	lea    rsi,[rip+0x1d62f]        # 437b70 <_IO_stdin_used@@Base+0xb70>
  41a541:	mov    rdi,rax
  41a544:	call   419c43 <test_json@@Base>
  41a549:	add    rsp,0x10
  41a54d:	or     DWORD PTR [rbp-0xc],eax
  41a550:	mov    rax,QWORD PTR [rbp-0x8]
  41a554:	sub    rsp,0x8
  41a558:	push   0xf7
  41a55d:	mov    r9d,0x0
  41a563:	mov    r8d,0x1
  41a569:	mov    ecx,0x0
  41a56e:	lea    rdx,[rip+0x1d381]        # 4378f6 <_IO_stdin_used@@Base+0x8f6>
  41a575:	lea    rsi,[rip+0x1d624]        # 437ba0 <_IO_stdin_used@@Base+0xba0>
  41a57c:	mov    rdi,rax
  41a57f:	call   419c43 <test_json@@Base>
  41a584:	add    rsp,0x10
  41a588:	or     DWORD PTR [rbp-0xc],eax
  41a58b:	mov    eax,DWORD PTR [rbp-0xc]
  41a58e:	leave  
  41a58f:	ret    

000000000041a590 <error_case_tests@@Base>:
  41a590:	endbr64 
  41a594:	push   rbp
  41a595:	mov    rbp,rsp
  41a598:	sub    rsp,0x10
  41a59c:	mov    DWORD PTR [rbp-0xc],0x0
  41a5a3:	lea    rax,[rip+0x2c7f6]        # 446da0 <flatcc_builder_padding_base@@Base+0xbe20>
  41a5aa:	mov    QWORD PTR [rbp-0x8],rax
  41a5ae:	mov    rax,QWORD PTR [rbp-0x8]
  41a5b2:	sub    rsp,0x8
  41a5b6:	push   0x11d
  41a5bb:	mov    r9d,0x0
  41a5c1:	mov    r8d,0x0
  41a5c7:	mov    ecx,0xd
  41a5cc:	mov    edx,0x0
  41a5d1:	lea    rsi,[rip+0x1d627]        # 437bff <_IO_stdin_used@@Base+0xbff>
  41a5d8:	mov    rdi,rax
  41a5db:	call   419c43 <test_json@@Base>
  41a5e0:	add    rsp,0x10
  41a5e4:	or     DWORD PTR [rbp-0xc],eax
  41a5e7:	mov    rax,QWORD PTR [rbp-0x8]
  41a5eb:	sub    rsp,0x8
  41a5ef:	push   0x11f
  41a5f4:	mov    r9d,0x0
  41a5fa:	mov    r8d,0x0
  41a600:	mov    ecx,0xd
  41a605:	mov    edx,0x0
  41a60a:	lea    rsi,[rip+0x1d60f]        # 437c20 <_IO_stdin_used@@Base+0xc20>
  41a611:	mov    rdi,rax
  41a614:	call   419c43 <test_json@@Base>
  41a619:	add    rsp,0x10
  41a61d:	or     DWORD PTR [rbp-0xc],eax
  41a620:	mov    rax,QWORD PTR [rbp-0x8]
  41a624:	sub    rsp,0x8
  41a628:	push   0x121
  41a62d:	mov    r9d,0x0
  41a633:	mov    r8d,0x0
  41a639:	mov    ecx,0xd
  41a63e:	mov    edx,0x0
  41a643:	lea    rsi,[rip+0x1d63e]        # 437c88 <_IO_stdin_used@@Base+0xc88>
  41a64a:	mov    rdi,rax
  41a64d:	call   419c43 <test_json@@Base>
  41a652:	add    rsp,0x10
  41a656:	or     DWORD PTR [rbp-0xc],eax
  41a659:	mov    rax,QWORD PTR [rbp-0x8]
  41a65d:	sub    rsp,0x8
  41a661:	push   0x123
  41a666:	mov    r9d,0x0
  41a66c:	mov    r8d,0x0
  41a672:	mov    ecx,0xd
  41a677:	mov    edx,0x0
  41a67c:	lea    rsi,[rip+0x1d665]        # 437ce8 <_IO_stdin_used@@Base+0xce8>
  41a683:	mov    rdi,rax
  41a686:	call   419c43 <test_json@@Base>
  41a68b:	add    rsp,0x10
  41a68f:	or     DWORD PTR [rbp-0xc],eax
  41a692:	mov    rax,QWORD PTR [rbp-0x8]
  41a696:	sub    rsp,0x8
  41a69a:	push   0x125
  41a69f:	mov    r9d,0x0
  41a6a5:	mov    r8d,0x0
  41a6ab:	mov    ecx,0xd
  41a6b0:	mov    edx,0x0
  41a6b5:	lea    rsi,[rip+0x1d684]        # 437d40 <_IO_stdin_used@@Base+0xd40>
  41a6bc:	mov    rdi,rax
  41a6bf:	call   419c43 <test_json@@Base>
  41a6c4:	add    rsp,0x10
  41a6c8:	or     DWORD PTR [rbp-0xc],eax
  41a6cb:	mov    rax,QWORD PTR [rbp-0x8]
  41a6cf:	sub    rsp,0x8
  41a6d3:	push   0x128
  41a6d8:	mov    r9d,0x0
  41a6de:	mov    r8d,0x0
  41a6e4:	mov    ecx,0xd
  41a6e9:	mov    edx,0x0
  41a6ee:	lea    rsi,[rip+0x1d6a3]        # 437d98 <_IO_stdin_used@@Base+0xd98>
  41a6f5:	mov    rdi,rax
  41a6f8:	call   419c43 <test_json@@Base>
  41a6fd:	add    rsp,0x10
  41a701:	or     DWORD PTR [rbp-0xc],eax
  41a704:	mov    rax,QWORD PTR [rbp-0x8]
  41a708:	sub    rsp,0x8
  41a70c:	push   0x12b
  41a711:	mov    r9d,0x0
  41a717:	mov    r8d,0x0
  41a71d:	mov    ecx,0xd
  41a722:	mov    edx,0x0
  41a727:	lea    rsi,[rip+0x1d70a]        # 437e38 <_IO_stdin_used@@Base+0xe38>
  41a72e:	mov    rdi,rax
  41a731:	call   419c43 <test_json@@Base>
  41a736:	add    rsp,0x10
  41a73a:	or     DWORD PTR [rbp-0xc],eax
  41a73d:	mov    rax,QWORD PTR [rbp-0x8]
  41a741:	sub    rsp,0x8
  41a745:	push   0x12f
  41a74a:	mov    r9d,0x0
  41a750:	mov    r8d,0x0
  41a756:	mov    ecx,0xd
  41a75b:	mov    edx,0x0
  41a760:	lea    rsi,[rip+0x1d771]        # 437ed8 <_IO_stdin_used@@Base+0xed8>
  41a767:	mov    rdi,rax
  41a76a:	call   419c43 <test_json@@Base>
  41a76f:	add    rsp,0x10
  41a773:	or     DWORD PTR [rbp-0xc],eax
  41a776:	mov    rax,QWORD PTR [rbp-0x8]
  41a77a:	sub    rsp,0x8
  41a77e:	push   0x133
  41a783:	mov    r9d,0x0
  41a789:	mov    r8d,0x0
  41a78f:	mov    ecx,0xd
  41a794:	mov    edx,0x0
  41a799:	lea    rsi,[rip+0x1d800]        # 437fa0 <_IO_stdin_used@@Base+0xfa0>
  41a7a0:	mov    rdi,rax
  41a7a3:	call   419c43 <test_json@@Base>
  41a7a8:	add    rsp,0x10
  41a7ac:	or     DWORD PTR [rbp-0xc],eax
  41a7af:	mov    rax,QWORD PTR [rbp-0x8]
  41a7b3:	sub    rsp,0x8
  41a7b7:	push   0x142
  41a7bc:	mov    r9d,0x0
  41a7c2:	mov    r8d,0x0
  41a7c8:	mov    ecx,0xd
  41a7cd:	mov    edx,0x0
  41a7d2:	lea    rsi,[rip+0x1d88e]        # 438067 <_IO_stdin_used@@Base+0x1067>
  41a7d9:	mov    rdi,rax
  41a7dc:	call   419c43 <test_json@@Base>
  41a7e1:	add    rsp,0x10
  41a7e5:	or     DWORD PTR [rbp-0xc],eax
  41a7e8:	mov    rax,QWORD PTR [rbp-0x8]
  41a7ec:	sub    rsp,0x8
  41a7f0:	push   0x144
  41a7f5:	mov    r9d,0x0
  41a7fb:	mov    r8d,0x0
  41a801:	mov    ecx,0xd
  41a806:	mov    edx,0x0
  41a80b:	lea    rsi,[rip+0x1d86e]        # 438080 <_IO_stdin_used@@Base+0x1080>
  41a812:	mov    rdi,rax
  41a815:	call   419c43 <test_json@@Base>
  41a81a:	add    rsp,0x10
  41a81e:	or     DWORD PTR [rbp-0xc],eax
  41a821:	mov    rax,QWORD PTR [rbp-0x8]
  41a825:	sub    rsp,0x8
  41a829:	push   0x146
  41a82e:	mov    r9d,0x0
  41a834:	mov    r8d,0x0
  41a83a:	mov    ecx,0xd
  41a83f:	mov    edx,0x0
  41a844:	lea    rsi,[rip+0x1d88d]        # 4380d8 <_IO_stdin_used@@Base+0x10d8>
  41a84b:	mov    rdi,rax
  41a84e:	call   419c43 <test_json@@Base>
  41a853:	add    rsp,0x10
  41a857:	or     DWORD PTR [rbp-0xc],eax
  41a85a:	mov    rax,QWORD PTR [rbp-0x8]
  41a85e:	sub    rsp,0x8
  41a862:	push   0x148
  41a867:	mov    r9d,0x0
  41a86d:	mov    r8d,0x0
  41a873:	mov    ecx,0xd
  41a878:	mov    edx,0x0
  41a87d:	lea    rsi,[rip+0x1d8ac]        # 438130 <_IO_stdin_used@@Base+0x1130>
  41a884:	mov    rdi,rax
  41a887:	call   419c43 <test_json@@Base>
  41a88c:	add    rsp,0x10
  41a890:	or     DWORD PTR [rbp-0xc],eax
  41a893:	mov    rax,QWORD PTR [rbp-0x8]
  41a897:	sub    rsp,0x8
  41a89b:	push   0x14a
  41a8a0:	mov    r9d,0x0
  41a8a6:	mov    r8d,0x0
  41a8ac:	mov    ecx,0xd
  41a8b1:	mov    edx,0x0
  41a8b6:	lea    rsi,[rip+0x1d8c3]        # 438180 <_IO_stdin_used@@Base+0x1180>
  41a8bd:	mov    rdi,rax
  41a8c0:	call   419c43 <test_json@@Base>
  41a8c5:	add    rsp,0x10
  41a8c9:	or     DWORD PTR [rbp-0xc],eax
  41a8cc:	mov    rax,QWORD PTR [rbp-0x8]
  41a8d0:	sub    rsp,0x8
  41a8d4:	push   0x14d
  41a8d9:	mov    r9d,0x0
  41a8df:	mov    r8d,0x0
  41a8e5:	mov    ecx,0xd
  41a8ea:	mov    edx,0x0
  41a8ef:	lea    rsi,[rip+0x1d8da]        # 4381d0 <_IO_stdin_used@@Base+0x11d0>
  41a8f6:	mov    rdi,rax
  41a8f9:	call   419c43 <test_json@@Base>
  41a8fe:	add    rsp,0x10
  41a902:	or     DWORD PTR [rbp-0xc],eax
  41a905:	mov    rax,QWORD PTR [rbp-0x8]
  41a909:	sub    rsp,0x8
  41a90d:	push   0x150
  41a912:	mov    r9d,0x0
  41a918:	mov    r8d,0x0
  41a91e:	mov    ecx,0xd
  41a923:	mov    edx,0x0
  41a928:	lea    rsi,[rip+0x1d931]        # 438260 <_IO_stdin_used@@Base+0x1260>
  41a92f:	mov    rdi,rax
  41a932:	call   419c43 <test_json@@Base>
  41a937:	add    rsp,0x10
  41a93b:	or     DWORD PTR [rbp-0xc],eax
  41a93e:	mov    rax,QWORD PTR [rbp-0x8]
  41a942:	sub    rsp,0x8
  41a946:	push   0x154
  41a94b:	mov    r9d,0x0
  41a951:	mov    r8d,0x0
  41a957:	mov    ecx,0xd
  41a95c:	mov    edx,0x0
  41a961:	lea    rsi,[rip+0x1d988]        # 4382f0 <_IO_stdin_used@@Base+0x12f0>
  41a968:	mov    rdi,rax
  41a96b:	call   419c43 <test_json@@Base>
  41a970:	add    rsp,0x10
  41a974:	or     DWORD PTR [rbp-0xc],eax
  41a977:	mov    rax,QWORD PTR [rbp-0x8]
  41a97b:	sub    rsp,0x8
  41a97f:	push   0x158
  41a984:	mov    r9d,0x0
  41a98a:	mov    r8d,0x0
  41a990:	mov    ecx,0xd
  41a995:	mov    edx,0x0
  41a99a:	lea    rsi,[rip+0x1d9ff]        # 4383a0 <_IO_stdin_used@@Base+0x13a0>
  41a9a1:	mov    rdi,rax
  41a9a4:	call   419c43 <test_json@@Base>
  41a9a9:	add    rsp,0x10
  41a9ad:	or     DWORD PTR [rbp-0xc],eax
  41a9b0:	mov    eax,DWORD PTR [rbp-0xc]
  41a9b3:	leave  
  41a9b4:	ret    

000000000041a9b5 <base64_tests@@Base>:
  41a9b5:	endbr64 
  41a9b9:	push   rbp
  41a9ba:	mov    rbp,rsp
  41a9bd:	sub    rsp,0x10
  41a9c1:	mov    DWORD PTR [rbp-0xc],0x0
  41a9c8:	lea    rax,[rip+0x2c3d1]        # 446da0 <flatcc_builder_padding_base@@Base+0xbe20>
  41a9cf:	mov    QWORD PTR [rbp-0x8],rax
  41a9d3:	mov    rax,QWORD PTR [rbp-0x8]
  41a9d7:	sub    rsp,0x8
  41a9db:	push   0x171
  41a9e0:	mov    r9d,0x0
  41a9e6:	mov    r8d,0x0
  41a9ec:	mov    ecx,0x0
  41a9f1:	lea    rdx,[rip+0x1cd7f]        # 437777 <_IO_stdin_used@@Base+0x777>
  41a9f8:	lea    rsi,[rip+0x1da50]        # 43844f <_IO_stdin_used@@Base+0x144f>
  41a9ff:	mov    rdi,rax
  41aa02:	call   419c43 <test_json@@Base>
  41aa07:	add    rsp,0x10
  41aa0b:	or     DWORD PTR [rbp-0xc],eax
  41aa0e:	mov    rax,QWORD PTR [rbp-0x8]
  41aa12:	sub    rsp,0x8
  41aa16:	push   0x174
  41aa1b:	mov    r9d,0x0
  41aa21:	mov    r8d,0x0
  41aa27:	mov    ecx,0x0
  41aa2c:	lea    rdx,[rip+0x1da35]        # 438468 <_IO_stdin_used@@Base+0x1468>
  41aa33:	lea    rsi,[rip+0x1da56]        # 438490 <_IO_stdin_used@@Base+0x1490>
  41aa3a:	mov    rdi,rax
  41aa3d:	call   419c43 <test_json@@Base>
  41aa42:	add    rsp,0x10
  41aa46:	or     DWORD PTR [rbp-0xc],eax
  41aa49:	mov    rax,QWORD PTR [rbp-0x8]
  41aa4d:	sub    rsp,0x8
  41aa51:	push   0x178
  41aa56:	mov    r9d,0x0
  41aa5c:	mov    r8d,0x0
  41aa62:	mov    ecx,0x0
  41aa67:	lea    rdx,[rip+0x1da4a]        # 4384b8 <_IO_stdin_used@@Base+0x14b8>
  41aa6e:	lea    rsi,[rip+0x1dafb]        # 438570 <_IO_stdin_used@@Base+0x1570>
  41aa75:	mov    rdi,rax
  41aa78:	call   419c43 <test_json@@Base>
  41aa7d:	add    rsp,0x10
  41aa81:	or     DWORD PTR [rbp-0xc],eax
  41aa84:	mov    rax,QWORD PTR [rbp-0x8]
  41aa88:	sub    rsp,0x8
  41aa8c:	push   0x17b
  41aa91:	mov    r9d,0x0
  41aa97:	mov    r8d,0x0
  41aa9d:	mov    ecx,0x0
  41aaa2:	lea    rdx,[rip+0x1db87]        # 438630 <_IO_stdin_used@@Base+0x1630>
  41aaa9:	lea    rsi,[rip+0x1dc38]        # 4386e8 <_IO_stdin_used@@Base+0x16e8>
  41aab0:	mov    rdi,rax
  41aab3:	call   419c43 <test_json@@Base>
  41aab8:	add    rsp,0x10
  41aabc:	or     DWORD PTR [rbp-0xc],eax
  41aabf:	mov    rax,QWORD PTR [rbp-0x8]
  41aac3:	sub    rsp,0x8
  41aac7:	push   0x17e
  41aacc:	mov    r9d,0x0
  41aad2:	mov    r8d,0x0
  41aad8:	mov    ecx,0x0
  41aadd:	lea    rdx,[rip+0x1d9d4]        # 4384b8 <_IO_stdin_used@@Base+0x14b8>
  41aae4:	lea    rsi,[rip+0x1dcbd]        # 4387a8 <_IO_stdin_used@@Base+0x17a8>
  41aaeb:	mov    rdi,rax
  41aaee:	call   419c43 <test_json@@Base>
  41aaf3:	add    rsp,0x10
  41aaf7:	or     DWORD PTR [rbp-0xc],eax
  41aafa:	mov    rax,QWORD PTR [rbp-0x8]
  41aafe:	sub    rsp,0x8
  41ab02:	push   0x181
  41ab07:	mov    r9d,0x0
  41ab0d:	mov    r8d,0x0
  41ab13:	mov    ecx,0x0
  41ab18:	lea    rdx,[rip+0x1db11]        # 438630 <_IO_stdin_used@@Base+0x1630>
  41ab1f:	lea    rsi,[rip+0x1dd3a]        # 438860 <_IO_stdin_used@@Base+0x1860>
  41ab26:	mov    rdi,rax
  41ab29:	call   419c43 <test_json@@Base>
  41ab2e:	add    rsp,0x10
  41ab32:	or     DWORD PTR [rbp-0xc],eax
  41ab35:	mov    rax,QWORD PTR [rbp-0x8]
  41ab39:	sub    rsp,0x8
  41ab3d:	push   0x184
  41ab42:	mov    r9d,0x0
  41ab48:	mov    r8d,0x0
  41ab4e:	mov    ecx,0x1f
  41ab53:	mov    edx,0x0
  41ab58:	lea    rsi,[rip+0x1ddc1]        # 438920 <_IO_stdin_used@@Base+0x1920>
  41ab5f:	mov    rdi,rax
  41ab62:	call   419c43 <test_json@@Base>
  41ab67:	add    rsp,0x10
  41ab6b:	or     DWORD PTR [rbp-0xc],eax
  41ab6e:	mov    rax,QWORD PTR [rbp-0x8]
  41ab72:	sub    rsp,0x8
  41ab76:	push   0x187
  41ab7b:	mov    r9d,0x0
  41ab81:	mov    r8d,0x0
  41ab87:	mov    ecx,0x20
  41ab8c:	mov    edx,0x0
  41ab91:	lea    rsi,[rip+0x1de48]        # 4389e0 <_IO_stdin_used@@Base+0x19e0>
  41ab98:	mov    rdi,rax
  41ab9b:	call   419c43 <test_json@@Base>
  41aba0:	add    rsp,0x10
  41aba4:	or     DWORD PTR [rbp-0xc],eax
  41aba7:	mov    rax,QWORD PTR [rbp-0x8]
  41abab:	sub    rsp,0x8
  41abaf:	push   0x196
  41abb4:	mov    r9d,0x0
  41abba:	mov    r8d,0x0
  41abc0:	mov    ecx,0x0
  41abc5:	lea    rdx,[rip+0x1ded4]        # 438aa0 <_IO_stdin_used@@Base+0x1aa0>
  41abcc:	lea    rsi,[rip+0x1dfa5]        # 438b78 <_IO_stdin_used@@Base+0x1b78>
  41abd3:	mov    rdi,rax
  41abd6:	call   419c43 <test_json@@Base>
  41abdb:	add    rsp,0x10
  41abdf:	or     DWORD PTR [rbp-0xc],eax
  41abe2:	mov    rax,QWORD PTR [rbp-0x8]
  41abe6:	sub    rsp,0x8
  41abea:	push   0x1a3
  41abef:	mov    r9d,0x0
  41abf5:	mov    r8d,0x0
  41abfb:	mov    ecx,0x0
  41ac00:	lea    rdx,[rip+0x1de99]        # 438aa0 <_IO_stdin_used@@Base+0x1aa0>
  41ac07:	lea    rsi,[rip+0x1e03a]        # 438c48 <_IO_stdin_used@@Base+0x1c48>
  41ac0e:	mov    rdi,rax
  41ac11:	call   419c43 <test_json@@Base>
  41ac16:	add    rsp,0x10
  41ac1a:	or     DWORD PTR [rbp-0xc],eax
  41ac1d:	mov    eax,DWORD PTR [rbp-0xc]
  41ac20:	leave  
  41ac21:	ret    

000000000041ac22 <mixed_type_union_tests@@Base>:
  41ac22:	endbr64 
  41ac26:	push   rbp
  41ac27:	mov    rbp,rsp
  41ac2a:	sub    rsp,0x10
  41ac2e:	mov    DWORD PTR [rbp-0xc],0x0
  41ac35:	lea    rax,[rip+0x2c1a4]        # 446de0 <flatcc_builder_padding_base@@Base+0xbe60>
  41ac3c:	mov    QWORD PTR [rbp-0x8],rax
  41ac40:	mov    rax,QWORD PTR [rbp-0x8]
  41ac44:	sub    rsp,0x8
  41ac48:	push   0x1b0
  41ac4d:	mov    r9d,0x0
  41ac53:	mov    r8d,0x0
  41ac59:	mov    ecx,0x0
  41ac5e:	lea    rdx,[rip+0x1e0b3]        # 438d18 <_IO_stdin_used@@Base+0x1d18>
  41ac65:	lea    rsi,[rip+0x1e0f4]        # 438d60 <_IO_stdin_used@@Base+0x1d60>
  41ac6c:	mov    rdi,rax
  41ac6f:	call   419c43 <test_json@@Base>
  41ac74:	add    rsp,0x10
  41ac78:	or     DWORD PTR [rbp-0xc],eax
  41ac7b:	mov    rax,QWORD PTR [rbp-0x8]
  41ac7f:	sub    rsp,0x8
  41ac83:	push   0x1b5
  41ac88:	mov    r9d,0x0
  41ac8e:	mov    r8d,0x0
  41ac94:	mov    ecx,0x0
  41ac99:	lea    rdx,[rip+0x1e110]        # 438db0 <_IO_stdin_used@@Base+0x1db0>
  41aca0:	lea    rsi,[rip+0x1e181]        # 438e28 <_IO_stdin_used@@Base+0x1e28>
  41aca7:	mov    rdi,rax
  41acaa:	call   419c43 <test_json@@Base>
  41acaf:	add    rsp,0x10
  41acb3:	or     DWORD PTR [rbp-0xc],eax
  41acb6:	mov    rax,QWORD PTR [rbp-0x8]
  41acba:	sub    rsp,0x8
  41acbe:	push   0x1ba
  41acc3:	mov    r9d,0x0
  41acc9:	mov    r8d,0x0
  41accf:	mov    ecx,0x0
  41acd4:	lea    rdx,[rip+0x1e0d5]        # 438db0 <_IO_stdin_used@@Base+0x1db0>
  41acdb:	lea    rsi,[rip+0x1e1ce]        # 438eb0 <_IO_stdin_used@@Base+0x1eb0>
  41ace2:	mov    rdi,rax
  41ace5:	call   419c43 <test_json@@Base>
  41acea:	add    rsp,0x10
  41acee:	or     DWORD PTR [rbp-0xc],eax
  41acf1:	mov    rax,QWORD PTR [rbp-0x8]
  41acf5:	sub    rsp,0x8
  41acf9:	push   0x1c1
  41acfe:	mov    r9d,0x0
  41ad04:	mov    r8d,0x0
  41ad0a:	mov    ecx,0x0
  41ad0f:	lea    rdx,[rip+0x1e232]        # 438f48 <_IO_stdin_used@@Base+0x1f48>
  41ad16:	lea    rsi,[rip+0x1e2eb]        # 439008 <_IO_stdin_used@@Base+0x2008>
  41ad1d:	mov    rdi,rax
  41ad20:	call   419c43 <test_json@@Base>
  41ad25:	add    rsp,0x10
  41ad29:	or     DWORD PTR [rbp-0xc],eax
  41ad2c:	mov    rax,QWORD PTR [rbp-0x8]
  41ad30:	sub    rsp,0x8
  41ad34:	push   0x1ca
  41ad39:	mov    r9d,0x0
  41ad3f:	mov    r8d,0x0
  41ad45:	mov    ecx,0x0
  41ad4a:	lea    rdx,[rip+0x1e397]        # 4390e8 <_IO_stdin_used@@Base+0x20e8>
  41ad51:	lea    rsi,[rip+0x1e470]        # 4391c8 <_IO_stdin_used@@Base+0x21c8>
  41ad58:	mov    rdi,rax
  41ad5b:	call   419c43 <test_json@@Base>
  41ad60:	add    rsp,0x10
  41ad64:	or     DWORD PTR [rbp-0xc],eax
  41ad67:	mov    rax,QWORD PTR [rbp-0x8]
  41ad6b:	sub    rsp,0x8
  41ad6f:	push   0x1d5
  41ad74:	mov    r9d,0x0
  41ad7a:	mov    r8d,0x0
  41ad80:	mov    ecx,0x0
  41ad85:	lea    rdx,[rip+0x1e544]        # 4392d0 <_IO_stdin_used@@Base+0x22d0>
  41ad8c:	lea    rsi,[rip+0x1e685]        # 439418 <_IO_stdin_used@@Base+0x2418>
  41ad93:	mov    rdi,rax
  41ad96:	call   419c43 <test_json@@Base>
  41ad9b:	add    rsp,0x10
  41ad9f:	or     DWORD PTR [rbp-0xc],eax
  41ada2:	mov    rax,QWORD PTR [rbp-0x8]
  41ada6:	sub    rsp,0x8
  41adaa:	push   0x1da
  41adaf:	mov    r9d,0x0
  41adb5:	mov    r8d,0x0
  41adbb:	mov    ecx,0x0
  41adc0:	lea    rdx,[rip+0x1dfe9]        # 438db0 <_IO_stdin_used@@Base+0x1db0>
  41adc7:	lea    rsi,[rip+0x1e7d2]        # 4395a0 <_IO_stdin_used@@Base+0x25a0>
  41adce:	mov    rdi,rax
  41add1:	call   419c43 <test_json@@Base>
  41add6:	add    rsp,0x10
  41adda:	or     DWORD PTR [rbp-0xc],eax
  41addd:	mov    eax,DWORD PTR [rbp-0xc]
  41ade0:	leave  
  41ade1:	ret    

000000000041ade2 <union_vector_tests@@Base>:
  41ade2:	endbr64 
  41ade6:	push   rbp
  41ade7:	mov    rbp,rsp
  41adea:	sub    rsp,0x10
  41adee:	mov    DWORD PTR [rbp-0xc],0x0
  41adf5:	lea    rax,[rip+0x2bfc4]        # 446dc0 <flatcc_builder_padding_base@@Base+0xbe40>
  41adfc:	mov    QWORD PTR [rbp-0x8],rax
  41ae00:	mov    rax,QWORD PTR [rbp-0x8]
  41ae04:	sub    rsp,0x8
  41ae08:	push   0x1e5
  41ae0d:	mov    r9d,0x0
  41ae13:	mov    r8d,0x0
  41ae19:	mov    ecx,0x0
  41ae1e:	lea    rdx,[rip+0x1e80b]        # 439630 <_IO_stdin_used@@Base+0x2630>
  41ae25:	lea    rsi,[rip+0x1e83c]        # 439668 <_IO_stdin_used@@Base+0x2668>
  41ae2c:	mov    rdi,rax
  41ae2f:	call   419c43 <test_json@@Base>
  41ae34:	add    rsp,0x10
  41ae38:	or     DWORD PTR [rbp-0xc],eax
  41ae3b:	mov    rax,QWORD PTR [rbp-0x8]
  41ae3f:	sub    rsp,0x8
  41ae43:	push   0x1e8
  41ae48:	mov    r9d,0x0
  41ae4e:	mov    r8d,0x0
  41ae54:	mov    ecx,0x0
  41ae59:	lea    rdx,[rip+0x1e848]        # 4396a8 <_IO_stdin_used@@Base+0x26a8>
  41ae60:	lea    rsi,[rip+0x1e871]        # 4396d8 <_IO_stdin_used@@Base+0x26d8>
  41ae67:	mov    rdi,rax
  41ae6a:	call   419c43 <test_json@@Base>
  41ae6f:	add    rsp,0x10
  41ae73:	or     DWORD PTR [rbp-0xc],eax
  41ae76:	mov    rax,QWORD PTR [rbp-0x8]
  41ae7a:	sub    rsp,0x8
  41ae7e:	push   0x1eb
  41ae83:	mov    r9d,0x0
  41ae89:	mov    r8d,0x0
  41ae8f:	mov    ecx,0x0
  41ae94:	lea    rdx,[rip+0x1e875]        # 439710 <_IO_stdin_used@@Base+0x2710>
  41ae9b:	lea    rsi,[rip+0x1e8b6]        # 439758 <_IO_stdin_used@@Base+0x2758>
  41aea2:	mov    rdi,rax
  41aea5:	call   419c43 <test_json@@Base>
  41aeaa:	add    rsp,0x10
  41aeae:	or     DWORD PTR [rbp-0xc],eax
  41aeb1:	mov    rax,QWORD PTR [rbp-0x8]
  41aeb5:	sub    rsp,0x8
  41aeb9:	push   0x1ee
  41aebe:	mov    r9d,0x0
  41aec4:	mov    r8d,0x0
  41aeca:	mov    ecx,0x0
  41aecf:	lea    rdx,[rip+0x1e8d2]        # 4397a8 <_IO_stdin_used@@Base+0x27a8>
  41aed6:	lea    rsi,[rip+0x1e93b]        # 439818 <_IO_stdin_used@@Base+0x2818>
  41aedd:	mov    rdi,rax
  41aee0:	call   419c43 <test_json@@Base>
  41aee5:	add    rsp,0x10
  41aee9:	or     DWORD PTR [rbp-0xc],eax
  41aeec:	mov    rax,QWORD PTR [rbp-0x8]
  41aef0:	sub    rsp,0x8
  41aef4:	push   0x1f1
  41aef9:	mov    r9d,0x0
  41aeff:	mov    r8d,0x0
  41af05:	mov    ecx,0x0
  41af0a:	lea    rdx,[rip+0x1e71f]        # 439630 <_IO_stdin_used@@Base+0x2630>
  41af11:	lea    rsi,[rip+0x1e980]        # 439898 <_IO_stdin_used@@Base+0x2898>
  41af18:	mov    rdi,rax
  41af1b:	call   419c43 <test_json@@Base>
  41af20:	add    rsp,0x10
  41af24:	or     DWORD PTR [rbp-0xc],eax
  41af27:	mov    rax,QWORD PTR [rbp-0x8]
  41af2b:	sub    rsp,0x8
  41af2f:	push   0x1f4
  41af34:	mov    r9d,0x0
  41af3a:	mov    r8d,0x0
  41af40:	mov    ecx,0x0
  41af45:	lea    rdx,[rip+0x1e98c]        # 4398d8 <_IO_stdin_used@@Base+0x28d8>
  41af4c:	lea    rsi,[rip+0x1e9e5]        # 439938 <_IO_stdin_used@@Base+0x2938>
  41af53:	mov    rdi,rax
  41af56:	call   419c43 <test_json@@Base>
  41af5b:	add    rsp,0x10
  41af5f:	or     DWORD PTR [rbp-0xc],eax
  41af62:	mov    eax,DWORD PTR [rbp-0xc]
  41af65:	leave  
  41af66:	ret    

000000000041af67 <main@@Base>:
  41af67:	endbr64 
  41af6b:	push   rbp
  41af6c:	mov    rbp,rsp
  41af6f:	sub    rsp,0x10
  41af73:	mov    DWORD PTR [rbp-0xc],0x0
  41af7a:	lea    rax,[rip+0x2be1f]        # 446da0 <flatcc_builder_padding_base@@Base+0xbe20>
  41af81:	mov    QWORD PTR [rbp-0x8],rax
  41af85:	mov    eax,0x0
  41af8a:	call   41a182 <edge_case_tests@@Base>
  41af8f:	or     DWORD PTR [rbp-0xc],eax
  41af92:	mov    eax,0x0
  41af97:	call   41a590 <error_case_tests@@Base>
  41af9c:	or     DWORD PTR [rbp-0xc],eax
  41af9f:	mov    eax,0x0
  41afa4:	call   41ade2 <union_vector_tests@@Base>
  41afa9:	or     DWORD PTR [rbp-0xc],eax
  41afac:	mov    eax,0x0
  41afb1:	call   41a9b5 <base64_tests@@Base>
  41afb6:	or     DWORD PTR [rbp-0xc],eax
  41afb9:	mov    eax,0x0
  41afbe:	call   41ac22 <mixed_type_union_tests@@Base>
  41afc3:	or     DWORD PTR [rbp-0xc],eax
  41afc6:	mov    rax,QWORD PTR [rbp-0x8]
  41afca:	sub    rsp,0x8
  41afce:	push   0x20d
  41afd3:	mov    r9d,0x0
  41afd9:	mov    r8d,0x0
  41afdf:	mov    ecx,0x0
  41afe4:	lea    rdx,[rip+0x1c78c]        # 437777 <_IO_stdin_used@@Base+0x777>
  41afeb:	lea    rsi,[rip+0x1e9ac]        # 43999e <_IO_stdin_used@@Base+0x299e>
  41aff2:	mov    rdi,rax
  41aff5:	call   419c43 <test_json@@Base>
  41affa:	add    rsp,0x10
  41affe:	or     DWORD PTR [rbp-0xc],eax
  41b001:	mov    rax,QWORD PTR [rbp-0x8]
  41b005:	sub    rsp,0x8
  41b009:	push   0x210
  41b00e:	mov    r9d,0x0
  41b014:	mov    r8d,0x0
  41b01a:	mov    ecx,0x0
  41b01f:	lea    rdx,[rip+0x1e992]        # 4399b8 <_IO_stdin_used@@Base+0x29b8>
  41b026:	lea    rsi,[rip+0x1e9b3]        # 4399e0 <_IO_stdin_used@@Base+0x29e0>
  41b02d:	mov    rdi,rax
  41b030:	call   419c43 <test_json@@Base>
  41b035:	add    rsp,0x10
  41b039:	or     DWORD PTR [rbp-0xc],eax
  41b03c:	mov    rax,QWORD PTR [rbp-0x8]
  41b040:	sub    rsp,0x8
  41b044:	push   0x213
  41b049:	mov    r9d,0x0
  41b04f:	mov    r8d,0x0
  41b055:	mov    ecx,0x0
  41b05a:	lea    rdx,[rip+0x1e9a7]        # 439a08 <_IO_stdin_used@@Base+0x2a08>
  41b061:	lea    rsi,[rip+0x1e9c8]        # 439a30 <_IO_stdin_used@@Base+0x2a30>
  41b068:	mov    rdi,rax
  41b06b:	call   419c43 <test_json@@Base>
  41b070:	add    rsp,0x10
  41b074:	or     DWORD PTR [rbp-0xc],eax
  41b077:	mov    rax,QWORD PTR [rbp-0x8]
  41b07b:	sub    rsp,0x8
  41b07f:	push   0x216
  41b084:	mov    r9d,0x0
  41b08a:	mov    r8d,0x0
  41b090:	mov    ecx,0x0
  41b095:	lea    rdx,[rip+0x1e9bc]        # 439a58 <_IO_stdin_used@@Base+0x2a58>
  41b09c:	lea    rsi,[rip+0x1e9e5]        # 439a88 <_IO_stdin_used@@Base+0x2a88>
  41b0a3:	mov    rdi,rax
  41b0a6:	call   419c43 <test_json@@Base>
  41b0ab:	add    rsp,0x10
  41b0af:	or     DWORD PTR [rbp-0xc],eax
  41b0b2:	mov    rax,QWORD PTR [rbp-0x8]
  41b0b6:	sub    rsp,0x8
  41b0ba:	push   0x219
  41b0bf:	mov    r9d,0x0
  41b0c5:	mov    r8d,0x0
  41b0cb:	mov    ecx,0x0
  41b0d0:	lea    rdx,[rip+0x1e981]        # 439a58 <_IO_stdin_used@@Base+0x2a58>
  41b0d7:	lea    rsi,[rip+0x1e9e2]        # 439ac0 <_IO_stdin_used@@Base+0x2ac0>
  41b0de:	mov    rdi,rax
  41b0e1:	call   419c43 <test_json@@Base>
  41b0e6:	add    rsp,0x10
  41b0ea:	or     DWORD PTR [rbp-0xc],eax
  41b0ed:	mov    rax,QWORD PTR [rbp-0x8]
  41b0f1:	sub    rsp,0x8
  41b0f5:	push   0x21c
  41b0fa:	mov    r9d,0x0
  41b100:	mov    r8d,0x0
  41b106:	mov    ecx,0x0
  41b10b:	lea    rdx,[rip+0x1e8a6]        # 4399b8 <_IO_stdin_used@@Base+0x29b8>
  41b112:	lea    rsi,[rip+0x1e9e7]        # 439b00 <_IO_stdin_used@@Base+0x2b00>
  41b119:	mov    rdi,rax
  41b11c:	call   419c43 <test_json@@Base>
  41b121:	add    rsp,0x10
  41b125:	or     DWORD PTR [rbp-0xc],eax
  41b128:	mov    rax,QWORD PTR [rbp-0x8]
  41b12c:	sub    rsp,0x8
  41b130:	push   0x21f
  41b135:	mov    r9d,0x0
  41b13b:	mov    r8d,0x0
  41b141:	mov    ecx,0x0
  41b146:	lea    rdx,[rip+0x1e8bb]        # 439a08 <_IO_stdin_used@@Base+0x2a08>
  41b14d:	lea    rsi,[rip+0x1e9d4]        # 439b28 <_IO_stdin_used@@Base+0x2b28>
  41b154:	mov    rdi,rax
  41b157:	call   419c43 <test_json@@Base>
  41b15c:	add    rsp,0x10
  41b160:	or     DWORD PTR [rbp-0xc],eax
  41b163:	mov    rax,QWORD PTR [rbp-0x8]
  41b167:	sub    rsp,0x8
  41b16b:	push   0x223
  41b170:	mov    r9d,0x0
  41b176:	mov    r8d,0x0
  41b17c:	mov    ecx,0x0
  41b181:	lea    rdx,[rip+0x1c5ef]        # 437777 <_IO_stdin_used@@Base+0x777>
  41b188:	lea    rsi,[rip+0x1e9c9]        # 439b58 <_IO_stdin_used@@Base+0x2b58>
  41b18f:	mov    rdi,rax
  41b192:	call   419c43 <test_json@@Base>
  41b197:	add    rsp,0x10
  41b19b:	or     DWORD PTR [rbp-0xc],eax
  41b19e:	mov    rax,QWORD PTR [rbp-0x8]
  41b1a2:	sub    rsp,0x8
  41b1a6:	push   0x227
  41b1ab:	mov    r9d,0x0
  41b1b1:	mov    r8d,0x0
  41b1b7:	mov    ecx,0x0
  41b1bc:	lea    rdx,[rip+0x1c5b4]        # 437777 <_IO_stdin_used@@Base+0x777>
  41b1c3:	lea    rsi,[rip+0x1c546]        # 437710 <_IO_stdin_used@@Base+0x710>
  41b1ca:	mov    rdi,rax
  41b1cd:	call   419c43 <test_json@@Base>
  41b1d2:	add    rsp,0x10
  41b1d6:	or     DWORD PTR [rbp-0xc],eax
  41b1d9:	mov    rax,QWORD PTR [rbp-0x8]
  41b1dd:	sub    rsp,0x8
  41b1e1:	push   0x22b
  41b1e6:	mov    r9d,0x0
  41b1ec:	mov    r8d,0x0
  41b1f2:	mov    ecx,0x0
  41b1f7:	lea    rdx,[rip+0x1c579]        # 437777 <_IO_stdin_used@@Base+0x777>
  41b1fe:	lea    rsi,[rip+0x1e97a]        # 439b7f <_IO_stdin_used@@Base+0x2b7f>
  41b205:	mov    rdi,rax
  41b208:	call   419c43 <test_json@@Base>
  41b20d:	add    rsp,0x10
  41b211:	or     DWORD PTR [rbp-0xc],eax
  41b214:	mov    rax,QWORD PTR [rbp-0x8]
  41b218:	sub    rsp,0x8
  41b21c:	push   0x22e
  41b221:	mov    r9d,0x0
  41b227:	mov    r8d,0x0
  41b22d:	mov    ecx,0x0
  41b232:	lea    rdx,[rip+0x1e77f]        # 4399b8 <_IO_stdin_used@@Base+0x29b8>
  41b239:	lea    rsi,[rip+0x1e958]        # 439b98 <_IO_stdin_used@@Base+0x2b98>
  41b240:	mov    rdi,rax
  41b243:	call   419c43 <test_json@@Base>
  41b248:	add    rsp,0x10
  41b24c:	or     DWORD PTR [rbp-0xc],eax
  41b24f:	mov    rax,QWORD PTR [rbp-0x8]
  41b253:	sub    rsp,0x8
  41b257:	push   0x231
  41b25c:	mov    r9d,0x0
  41b262:	mov    r8d,0x0
  41b268:	mov    ecx,0x0
  41b26d:	lea    rdx,[rip+0x1e794]        # 439a08 <_IO_stdin_used@@Base+0x2a08>
  41b274:	lea    rsi,[rip+0x1e945]        # 439bc0 <_IO_stdin_used@@Base+0x2bc0>
  41b27b:	mov    rdi,rax
  41b27e:	call   419c43 <test_json@@Base>
  41b283:	add    rsp,0x10
  41b287:	or     DWORD PTR [rbp-0xc],eax
  41b28a:	mov    rax,QWORD PTR [rbp-0x8]
  41b28e:	sub    rsp,0x8
  41b292:	push   0x234
  41b297:	mov    r9d,0x0
  41b29d:	mov    r8d,0x0
  41b2a3:	mov    ecx,0x0
  41b2a8:	lea    rdx,[rip+0x1e7a9]        # 439a58 <_IO_stdin_used@@Base+0x2a58>
  41b2af:	lea    rsi,[rip+0x1e932]        # 439be8 <_IO_stdin_used@@Base+0x2be8>
  41b2b6:	mov    rdi,rax
  41b2b9:	call   419c43 <test_json@@Base>
  41b2be:	add    rsp,0x10
  41b2c2:	or     DWORD PTR [rbp-0xc],eax
  41b2c5:	mov    rax,QWORD PTR [rbp-0x8]
  41b2c9:	sub    rsp,0x8
  41b2cd:	push   0x237
  41b2d2:	mov    r9d,0x0
  41b2d8:	mov    r8d,0x0
  41b2de:	mov    ecx,0x0
  41b2e3:	lea    rdx,[rip+0x1e76e]        # 439a58 <_IO_stdin_used@@Base+0x2a58>
  41b2ea:	lea    rsi,[rip+0x1e927]        # 439c18 <_IO_stdin_used@@Base+0x2c18>
  41b2f1:	mov    rdi,rax
  41b2f4:	call   419c43 <test_json@@Base>
  41b2f9:	add    rsp,0x10
  41b2fd:	or     DWORD PTR [rbp-0xc],eax
  41b300:	mov    rax,QWORD PTR [rbp-0x8]
  41b304:	sub    rsp,0x8
  41b308:	push   0x23a
  41b30d:	mov    r9d,0x0
  41b313:	mov    r8d,0x0
  41b319:	mov    ecx,0x0
  41b31e:	lea    rdx,[rip+0x1e693]        # 4399b8 <_IO_stdin_used@@Base+0x29b8>
  41b325:	lea    rsi,[rip+0x1e924]        # 439c50 <_IO_stdin_used@@Base+0x2c50>
  41b32c:	mov    rdi,rax
  41b32f:	call   419c43 <test_json@@Base>
  41b334:	add    rsp,0x10
  41b338:	or     DWORD PTR [rbp-0xc],eax
  41b33b:	mov    rax,QWORD PTR [rbp-0x8]
  41b33f:	sub    rsp,0x8
  41b343:	push   0x23d
  41b348:	mov    r9d,0x0
  41b34e:	mov    r8d,0x0
  41b354:	mov    ecx,0x0
  41b359:	lea    rdx,[rip+0x1e6a8]        # 439a08 <_IO_stdin_used@@Base+0x2a08>
  41b360:	lea    rsi,[rip+0x1e909]        # 439c70 <_IO_stdin_used@@Base+0x2c70>
  41b367:	mov    rdi,rax
  41b36a:	call   419c43 <test_json@@Base>
  41b36f:	add    rsp,0x10
  41b373:	or     DWORD PTR [rbp-0xc],eax
  41b376:	mov    rax,QWORD PTR [rbp-0x8]
  41b37a:	sub    rsp,0x8
  41b37e:	push   0x241
  41b383:	mov    r9d,0x0
  41b389:	mov    r8d,0x0
  41b38f:	mov    ecx,0x0
  41b394:	lea    rdx,[rip+0x1c3dc]        # 437777 <_IO_stdin_used@@Base+0x777>
  41b39b:	lea    rsi,[rip+0x1e8f6]        # 439c98 <_IO_stdin_used@@Base+0x2c98>
  41b3a2:	mov    rdi,rax
  41b3a5:	call   419c43 <test_json@@Base>
  41b3aa:	add    rsp,0x10
  41b3ae:	or     DWORD PTR [rbp-0xc],eax
  41b3b1:	mov    rax,QWORD PTR [rbp-0x8]
  41b3b5:	sub    rsp,0x8
  41b3b9:	push   0x245
  41b3be:	mov    r9d,0x0
  41b3c4:	mov    r8d,0x0
  41b3ca:	mov    ecx,0x0
  41b3cf:	lea    rdx,[rip+0x1c3a1]        # 437777 <_IO_stdin_used@@Base+0x777>
  41b3d6:	lea    rsi,[rip+0x1c5fc]        # 4379d9 <_IO_stdin_used@@Base+0x9d9>
  41b3dd:	mov    rdi,rax
  41b3e0:	call   419c43 <test_json@@Base>
  41b3e5:	add    rsp,0x10
  41b3e9:	or     DWORD PTR [rbp-0xc],eax
  41b3ec:	mov    rax,QWORD PTR [rbp-0x8]
  41b3f0:	sub    rsp,0x8
  41b3f4:	push   0x249
  41b3f9:	mov    r9d,0x0
  41b3ff:	mov    r8d,0x0
  41b405:	mov    ecx,0x0
  41b40a:	lea    rdx,[rip+0x1e8af]        # 439cc0 <_IO_stdin_used@@Base+0x2cc0>
  41b411:	lea    rsi,[rip+0x1e8d0]        # 439ce8 <_IO_stdin_used@@Base+0x2ce8>
  41b418:	mov    rdi,rax
  41b41b:	call   419c43 <test_json@@Base>
  41b420:	add    rsp,0x10
  41b424:	or     DWORD PTR [rbp-0xc],eax
  41b427:	mov    rax,QWORD PTR [rbp-0x8]
  41b42b:	sub    rsp,0x8
  41b42f:	push   0x24f
  41b434:	mov    r9d,0x0
  41b43a:	mov    r8d,0x0
  41b440:	mov    ecx,0x0
  41b445:	lea    rdx,[rip+0x1e874]        # 439cc0 <_IO_stdin_used@@Base+0x2cc0>
  41b44c:	lea    rsi,[rip+0x1e8bd]        # 439d10 <_IO_stdin_used@@Base+0x2d10>
  41b453:	mov    rdi,rax
  41b456:	call   419c43 <test_json@@Base>
  41b45b:	add    rsp,0x10
  41b45f:	or     DWORD PTR [rbp-0xc],eax
  41b462:	mov    rax,QWORD PTR [rbp-0x8]
  41b466:	sub    rsp,0x8
  41b46a:	push   0x252
  41b46f:	mov    r9d,0x0
  41b475:	mov    r8d,0x0
  41b47b:	mov    ecx,0x0
  41b480:	lea    rdx,[rip+0x1e839]        # 439cc0 <_IO_stdin_used@@Base+0x2cc0>
  41b487:	lea    rsi,[rip+0x1e8aa]        # 439d38 <_IO_stdin_used@@Base+0x2d38>
  41b48e:	mov    rdi,rax
  41b491:	call   419c43 <test_json@@Base>
  41b496:	add    rsp,0x10
  41b49a:	or     DWORD PTR [rbp-0xc],eax
  41b49d:	mov    rax,QWORD PTR [rbp-0x8]
  41b4a1:	sub    rsp,0x8
  41b4a5:	push   0x255
  41b4aa:	mov    r9d,0x0
  41b4b0:	mov    r8d,0x0
  41b4b6:	mov    ecx,0x0
  41b4bb:	lea    rdx,[rip+0x1e596]        # 439a58 <_IO_stdin_used@@Base+0x2a58>
  41b4c2:	lea    rsi,[rip+0x1e897]        # 439d60 <_IO_stdin_used@@Base+0x2d60>
  41b4c9:	mov    rdi,rax
  41b4cc:	call   419c43 <test_json@@Base>
  41b4d1:	add    rsp,0x10
  41b4d5:	or     DWORD PTR [rbp-0xc],eax
  41b4d8:	mov    rax,QWORD PTR [rbp-0x8]
  41b4dc:	sub    rsp,0x8
  41b4e0:	push   0x259
  41b4e5:	mov    r9d,0x0
  41b4eb:	mov    r8d,0x0
  41b4f1:	mov    ecx,0x0
  41b4f6:	lea    rdx,[rip+0x1e4bb]        # 4399b8 <_IO_stdin_used@@Base+0x29b8>
  41b4fd:	lea    rsi,[rip+0x1e88c]        # 439d90 <_IO_stdin_used@@Base+0x2d90>
  41b504:	mov    rdi,rax
  41b507:	call   419c43 <test_json@@Base>
  41b50c:	add    rsp,0x10
  41b510:	or     DWORD PTR [rbp-0xc],eax
  41b513:	mov    rax,QWORD PTR [rbp-0x8]
  41b517:	sub    rsp,0x8
  41b51b:	push   0x25c
  41b520:	mov    r9d,0x0
  41b526:	mov    r8d,0x0
  41b52c:	mov    ecx,0x0
  41b531:	lea    rdx,[rip+0x1e4d0]        # 439a08 <_IO_stdin_used@@Base+0x2a08>
  41b538:	lea    rsi,[rip+0x1e879]        # 439db8 <_IO_stdin_used@@Base+0x2db8>
  41b53f:	mov    rdi,rax
  41b542:	call   419c43 <test_json@@Base>
  41b547:	add    rsp,0x10
  41b54b:	or     DWORD PTR [rbp-0xc],eax
  41b54e:	mov    rax,QWORD PTR [rbp-0x8]
  41b552:	sub    rsp,0x8
  41b556:	push   0x25f
  41b55b:	mov    r9d,0x0
  41b561:	mov    r8d,0x0
  41b567:	mov    ecx,0x0
  41b56c:	lea    rdx,[rip+0x1e86d]        # 439de0 <_IO_stdin_used@@Base+0x2de0>
  41b573:	lea    rsi,[rip+0x1e88e]        # 439e08 <_IO_stdin_used@@Base+0x2e08>
  41b57a:	mov    rdi,rax
  41b57d:	call   419c43 <test_json@@Base>
  41b582:	add    rsp,0x10
  41b586:	or     DWORD PTR [rbp-0xc],eax
  41b589:	mov    rax,QWORD PTR [rbp-0x8]
  41b58d:	sub    rsp,0x8
  41b591:	push   0x262
  41b596:	mov    r9d,0x0
  41b59c:	mov    r8d,0x0
  41b5a2:	mov    ecx,0x0
  41b5a7:	lea    rdx,[rip+0x1e4aa]        # 439a58 <_IO_stdin_used@@Base+0x2a58>
  41b5ae:	lea    rsi,[rip+0x1e87b]        # 439e30 <_IO_stdin_used@@Base+0x2e30>
  41b5b5:	mov    rdi,rax
  41b5b8:	call   419c43 <test_json@@Base>
  41b5bd:	add    rsp,0x10
  41b5c1:	or     DWORD PTR [rbp-0xc],eax
  41b5c4:	mov    rax,QWORD PTR [rbp-0x8]
  41b5c8:	sub    rsp,0x8
  41b5cc:	push   0x265
  41b5d1:	mov    r9d,0x0
  41b5d7:	mov    r8d,0x0
  41b5dd:	mov    ecx,0x0
  41b5e2:	lea    rdx,[rip+0x1e869]        # 439e52 <_IO_stdin_used@@Base+0x2e52>
  41b5e9:	lea    rsi,[rip+0x1e880]        # 439e70 <_IO_stdin_used@@Base+0x2e70>
  41b5f0:	mov    rdi,rax
  41b5f3:	call   419c43 <test_json@@Base>
  41b5f8:	add    rsp,0x10
  41b5fc:	or     DWORD PTR [rbp-0xc],eax
  41b5ff:	mov    rax,QWORD PTR [rbp-0x8]
  41b603:	sub    rsp,0x8
  41b607:	push   0x268
  41b60c:	mov    r9d,0x0
  41b612:	mov    r8d,0x0
  41b618:	mov    ecx,0x0
  41b61d:	lea    rdx,[rip+0x1e86e]        # 439e92 <_IO_stdin_used@@Base+0x2e92>
  41b624:	lea    rsi,[rip+0x1e885]        # 439eb0 <_IO_stdin_used@@Base+0x2eb0>
  41b62b:	mov    rdi,rax
  41b62e:	call   419c43 <test_json@@Base>
  41b633:	add    rsp,0x10
  41b637:	or     DWORD PTR [rbp-0xc],eax
  41b63a:	mov    rax,QWORD PTR [rbp-0x8]
  41b63e:	sub    rsp,0x8
  41b642:	push   0x26b
  41b647:	mov    r9d,0x0
  41b64d:	mov    r8d,0x0
  41b653:	mov    ecx,0x0
  41b658:	lea    rdx,[rip+0x1e873]        # 439ed2 <_IO_stdin_used@@Base+0x2ed2>
  41b65f:	lea    rsi,[rip+0x1e88a]        # 439ef0 <_IO_stdin_used@@Base+0x2ef0>
  41b666:	mov    rdi,rax
  41b669:	call   419c43 <test_json@@Base>
  41b66e:	add    rsp,0x10
  41b672:	or     DWORD PTR [rbp-0xc],eax
  41b675:	mov    rax,QWORD PTR [rbp-0x8]
  41b679:	sub    rsp,0x8
  41b67d:	push   0x26e
  41b682:	mov    r9d,0x0
  41b688:	mov    r8d,0x0
  41b68e:	mov    ecx,0x0
  41b693:	lea    rdx,[rip+0x1e31e]        # 4399b8 <_IO_stdin_used@@Base+0x29b8>
  41b69a:	lea    rsi,[rip+0x1e877]        # 439f18 <_IO_stdin_used@@Base+0x2f18>
  41b6a1:	mov    rdi,rax
  41b6a4:	call   419c43 <test_json@@Base>
  41b6a9:	add    rsp,0x10
  41b6ad:	or     DWORD PTR [rbp-0xc],eax
  41b6b0:	mov    rax,QWORD PTR [rbp-0x8]
  41b6b4:	sub    rsp,0x8
  41b6b8:	push   0x271
  41b6bd:	mov    r9d,0x0
  41b6c3:	mov    r8d,0x0
  41b6c9:	mov    ecx,0x0
  41b6ce:	lea    rdx,[rip+0x1e2e3]        # 4399b8 <_IO_stdin_used@@Base+0x29b8>
  41b6d5:	lea    rsi,[rip+0x1e86c]        # 439f48 <_IO_stdin_used@@Base+0x2f48>
  41b6dc:	mov    rdi,rax
  41b6df:	call   419c43 <test_json@@Base>
  41b6e4:	add    rsp,0x10
  41b6e8:	or     DWORD PTR [rbp-0xc],eax
  41b6eb:	mov    rax,QWORD PTR [rbp-0x8]
  41b6ef:	sub    rsp,0x8
  41b6f3:	push   0x274
  41b6f8:	mov    r9d,0x0
  41b6fe:	mov    r8d,0x0
  41b704:	mov    ecx,0x0
  41b709:	lea    rdx,[rip+0x1e872]        # 439f82 <_IO_stdin_used@@Base+0x2f82>
  41b710:	lea    rsi,[rip+0x1e889]        # 439fa0 <_IO_stdin_used@@Base+0x2fa0>
  41b717:	mov    rdi,rax
  41b71a:	call   419c43 <test_json@@Base>
  41b71f:	add    rsp,0x10
  41b723:	or     DWORD PTR [rbp-0xc],eax
  41b726:	mov    rax,QWORD PTR [rbp-0x8]
  41b72a:	sub    rsp,0x8
  41b72e:	push   0x277
  41b733:	mov    r9d,0x0
  41b739:	mov    r8d,0x0
  41b73f:	mov    ecx,0x0
  41b744:	lea    rdx,[rip+0x1e837]        # 439f82 <_IO_stdin_used@@Base+0x2f82>
  41b74b:	lea    rsi,[rip+0x1e84e]        # 439fa0 <_IO_stdin_used@@Base+0x2fa0>
  41b752:	mov    rdi,rax
  41b755:	call   419c43 <test_json@@Base>
  41b75a:	add    rsp,0x10
  41b75e:	or     DWORD PTR [rbp-0xc],eax
  41b761:	mov    rax,QWORD PTR [rbp-0x8]
  41b765:	sub    rsp,0x8
  41b769:	push   0x27a
  41b76e:	mov    r9d,0x0
  41b774:	mov    r8d,0x0
  41b77a:	mov    ecx,0x0
  41b77f:	lea    rdx,[rip+0x1e84a]        # 439fd0 <_IO_stdin_used@@Base+0x2fd0>
  41b786:	lea    rsi,[rip+0x1e88b]        # 43a018 <_IO_stdin_used@@Base+0x3018>
  41b78d:	mov    rdi,rax
  41b790:	call   419c43 <test_json@@Base>
  41b795:	add    rsp,0x10
  41b799:	or     DWORD PTR [rbp-0xc],eax
  41b79c:	mov    rax,QWORD PTR [rbp-0x8]
  41b7a0:	sub    rsp,0x8
  41b7a4:	push   0x27e
  41b7a9:	mov    r9d,0x0
  41b7af:	mov    r8d,0x0
  41b7b5:	mov    ecx,0x0
  41b7ba:	lea    rdx,[rip+0x1e8af]        # 43a070 <_IO_stdin_used@@Base+0x3070>
  41b7c1:	lea    rsi,[rip+0x1e8f8]        # 43a0c0 <_IO_stdin_used@@Base+0x30c0>
  41b7c8:	mov    rdi,rax
  41b7cb:	call   419c43 <test_json@@Base>
  41b7d0:	add    rsp,0x10
  41b7d4:	or     DWORD PTR [rbp-0xc],eax
  41b7d7:	mov    rax,QWORD PTR [rbp-0x8]
  41b7db:	sub    rsp,0x8
  41b7df:	push   0x282
  41b7e4:	mov    r9d,0x0
  41b7ea:	mov    r8d,0x0
  41b7f0:	mov    ecx,0x0
  41b7f5:	lea    rdx,[rip+0x1e91c]        # 43a118 <_IO_stdin_used@@Base+0x3118>
  41b7fc:	lea    rsi,[rip+0x1e97d]        # 43a180 <_IO_stdin_used@@Base+0x3180>
  41b803:	mov    rdi,rax
  41b806:	call   419c43 <test_json@@Base>
  41b80b:	add    rsp,0x10
  41b80f:	or     DWORD PTR [rbp-0xc],eax
  41b812:	mov    rax,QWORD PTR [rbp-0x8]
  41b816:	sub    rsp,0x8
  41b81a:	push   0x286
  41b81f:	mov    r9d,0x0
  41b825:	mov    r8d,0x0
  41b82b:	mov    ecx,0x0
  41b830:	lea    rdx,[rip+0x1bf40]        # 437777 <_IO_stdin_used@@Base+0x777>
  41b837:	lea    rsi,[rip+0x1e9b2]        # 43a1f0 <_IO_stdin_used@@Base+0x31f0>
  41b83e:	mov    rdi,rax
  41b841:	call   419c43 <test_json@@Base>
  41b846:	add    rsp,0x10
  41b84a:	or     DWORD PTR [rbp-0xc],eax
  41b84d:	mov    rax,QWORD PTR [rbp-0x8]
  41b851:	sub    rsp,0x8
  41b855:	push   0x289
  41b85a:	mov    r9d,0x0
  41b860:	mov    r8d,0x0
  41b866:	mov    ecx,0x0
  41b86b:	lea    rdx,[rip+0x1bf05]        # 437777 <_IO_stdin_used@@Base+0x777>
  41b872:	lea    rsi,[rip+0x1e9a7]        # 43a220 <_IO_stdin_used@@Base+0x3220>
  41b879:	mov    rdi,rax
  41b87c:	call   419c43 <test_json@@Base>
  41b881:	add    rsp,0x10
  41b885:	or     DWORD PTR [rbp-0xc],eax
  41b888:	mov    rax,QWORD PTR [rbp-0x8]
  41b88c:	sub    rsp,0x8
  41b890:	push   0x28d
  41b895:	mov    r9d,0x0
  41b89b:	mov    r8d,0x0
  41b8a1:	mov    ecx,0x0
  41b8a6:	lea    rdx,[rip+0x1e10b]        # 4399b8 <_IO_stdin_used@@Base+0x29b8>
  41b8ad:	lea    rsi,[rip+0x1e992]        # 43a246 <_IO_stdin_used@@Base+0x3246>
  41b8b4:	mov    rdi,rax
  41b8b7:	call   419c43 <test_json@@Base>
  41b8bc:	add    rsp,0x10
  41b8c0:	or     DWORD PTR [rbp-0xc],eax
  41b8c3:	mov    rax,QWORD PTR [rbp-0x8]
  41b8c7:	sub    rsp,0x8
  41b8cb:	push   0x290
  41b8d0:	mov    r9d,0x0
  41b8d6:	mov    r8d,0x0
  41b8dc:	mov    ecx,0x0
  41b8e1:	lea    rdx,[rip+0x1e120]        # 439a08 <_IO_stdin_used@@Base+0x2a08>
  41b8e8:	lea    rsi,[rip+0x1e974]        # 43a263 <_IO_stdin_used@@Base+0x3263>
  41b8ef:	mov    rdi,rax
  41b8f2:	call   419c43 <test_json@@Base>
  41b8f7:	add    rsp,0x10
  41b8fb:	or     DWORD PTR [rbp-0xc],eax
  41b8fe:	mov    rax,QWORD PTR [rbp-0x8]
  41b902:	sub    rsp,0x8
  41b906:	push   0x293
  41b90b:	mov    r9d,0x0
  41b911:	mov    r8d,0x0
  41b917:	mov    ecx,0x0
  41b91c:	lea    rdx,[rip+0x1e4bd]        # 439de0 <_IO_stdin_used@@Base+0x2de0>
  41b923:	lea    rsi,[rip+0x1e956]        # 43a280 <_IO_stdin_used@@Base+0x3280>
  41b92a:	mov    rdi,rax
  41b92d:	call   419c43 <test_json@@Base>
  41b932:	add    rsp,0x10
  41b936:	or     DWORD PTR [rbp-0xc],eax
  41b939:	mov    rax,QWORD PTR [rbp-0x8]
  41b93d:	sub    rsp,0x8
  41b941:	push   0x296
  41b946:	mov    r9d,0x0
  41b94c:	mov    r8d,0x0
  41b952:	mov    ecx,0x0
  41b957:	lea    rdx,[rip+0x1e0fa]        # 439a58 <_IO_stdin_used@@Base+0x2a58>
  41b95e:	lea    rsi,[rip+0x1e938]        # 43a29d <_IO_stdin_used@@Base+0x329d>
  41b965:	mov    rdi,rax
  41b968:	call   419c43 <test_json@@Base>
  41b96d:	add    rsp,0x10
  41b971:	or     DWORD PTR [rbp-0xc],eax
  41b974:	mov    rax,QWORD PTR [rbp-0x8]
  41b978:	sub    rsp,0x8
  41b97c:	push   0x299
  41b981:	mov    r9d,0x0
  41b987:	mov    r8d,0x0
  41b98d:	mov    ecx,0x0
  41b992:	lea    rdx,[rip+0x1e4b9]        # 439e52 <_IO_stdin_used@@Base+0x2e52>
  41b999:	lea    rsi,[rip+0x1e91b]        # 43a2bb <_IO_stdin_used@@Base+0x32bb>
  41b9a0:	mov    rdi,rax
  41b9a3:	call   419c43 <test_json@@Base>
  41b9a8:	add    rsp,0x10
  41b9ac:	or     DWORD PTR [rbp-0xc],eax
  41b9af:	mov    rax,QWORD PTR [rbp-0x8]
  41b9b3:	sub    rsp,0x8
  41b9b7:	push   0x29c
  41b9bc:	mov    r9d,0x0
  41b9c2:	mov    r8d,0x0
  41b9c8:	mov    ecx,0x0
  41b9cd:	lea    rdx,[rip+0x1e4be]        # 439e92 <_IO_stdin_used@@Base+0x2e92>
  41b9d4:	lea    rsi,[rip+0x1e8fe]        # 43a2d9 <_IO_stdin_used@@Base+0x32d9>
  41b9db:	mov    rdi,rax
  41b9de:	call   419c43 <test_json@@Base>
  41b9e3:	add    rsp,0x10
  41b9e7:	or     DWORD PTR [rbp-0xc],eax
  41b9ea:	mov    rax,QWORD PTR [rbp-0x8]
  41b9ee:	sub    rsp,0x8
  41b9f2:	push   0x29f
  41b9f7:	mov    r9d,0x0
  41b9fd:	mov    r8d,0x0
  41ba03:	mov    ecx,0x0
  41ba08:	lea    rdx,[rip+0x1e4c3]        # 439ed2 <_IO_stdin_used@@Base+0x2ed2>
  41ba0f:	lea    rsi,[rip+0x1e8e1]        # 43a2f7 <_IO_stdin_used@@Base+0x32f7>
  41ba16:	mov    rdi,rax
  41ba19:	call   419c43 <test_json@@Base>
  41ba1e:	add    rsp,0x10
  41ba22:	or     DWORD PTR [rbp-0xc],eax
  41ba25:	mov    rax,QWORD PTR [rbp-0x8]
  41ba29:	sub    rsp,0x8
  41ba2d:	push   0x2a2
  41ba32:	mov    r9d,0x0
  41ba38:	mov    r8d,0x0
  41ba3e:	mov    ecx,0x0
  41ba43:	lea    rdx,[rip+0x1df6e]        # 4399b8 <_IO_stdin_used@@Base+0x29b8>
  41ba4a:	lea    rsi,[rip+0x1e8c7]        # 43a318 <_IO_stdin_used@@Base+0x3318>
  41ba51:	mov    rdi,rax
  41ba54:	call   419c43 <test_json@@Base>
  41ba59:	add    rsp,0x10
  41ba5d:	or     DWORD PTR [rbp-0xc],eax
  41ba60:	mov    rax,QWORD PTR [rbp-0x8]
  41ba64:	sub    rsp,0x8
  41ba68:	push   0x2a5
  41ba6d:	mov    r9d,0x0
  41ba73:	mov    r8d,0x0
  41ba79:	mov    ecx,0x0
  41ba7e:	lea    rdx,[rip+0x1df33]        # 4399b8 <_IO_stdin_used@@Base+0x29b8>
  41ba85:	lea    rsi,[rip+0x1e8b4]        # 43a340 <_IO_stdin_used@@Base+0x3340>
  41ba8c:	mov    rdi,rax
  41ba8f:	call   419c43 <test_json@@Base>
  41ba94:	add    rsp,0x10
  41ba98:	or     DWORD PTR [rbp-0xc],eax
  41ba9b:	mov    rax,QWORD PTR [rbp-0x8]
  41ba9f:	sub    rsp,0x8
  41baa3:	push   0x2a8
  41baa8:	mov    r9d,0x0
  41baae:	mov    r8d,0x0
  41bab4:	mov    ecx,0x0
  41bab9:	lea    rdx,[rip+0x1e4c2]        # 439f82 <_IO_stdin_used@@Base+0x2f82>
  41bac0:	lea    rsi,[rip+0x1e8b1]        # 43a378 <_IO_stdin_used@@Base+0x3378>
  41bac7:	mov    rdi,rax
  41baca:	call   419c43 <test_json@@Base>
  41bacf:	add    rsp,0x10
  41bad3:	or     DWORD PTR [rbp-0xc],eax
  41bad6:	mov    rax,QWORD PTR [rbp-0x8]
  41bada:	sub    rsp,0x8
  41bade:	push   0x2ab
  41bae3:	mov    r9d,0x0
  41bae9:	mov    r8d,0x0
  41baef:	mov    ecx,0x0
  41baf4:	lea    rdx,[rip+0x1e487]        # 439f82 <_IO_stdin_used@@Base+0x2f82>
  41bafb:	lea    rsi,[rip+0x1e876]        # 43a378 <_IO_stdin_used@@Base+0x3378>
  41bb02:	mov    rdi,rax
  41bb05:	call   419c43 <test_json@@Base>
  41bb0a:	add    rsp,0x10
  41bb0e:	or     DWORD PTR [rbp-0xc],eax
  41bb11:	mov    rax,QWORD PTR [rbp-0x8]
  41bb15:	sub    rsp,0x8
  41bb19:	push   0x2ae
  41bb1e:	mov    r9d,0x0
  41bb24:	mov    r8d,0x0
  41bb2a:	mov    ecx,0x0
  41bb2f:	lea    rdx,[rip+0x1e49a]        # 439fd0 <_IO_stdin_used@@Base+0x2fd0>
  41bb36:	lea    rsi,[rip+0x1e863]        # 43a3a0 <_IO_stdin_used@@Base+0x33a0>
  41bb3d:	mov    rdi,rax
  41bb40:	call   419c43 <test_json@@Base>
  41bb45:	add    rsp,0x10
  41bb49:	or     DWORD PTR [rbp-0xc],eax
  41bb4c:	mov    rax,QWORD PTR [rbp-0x8]
  41bb50:	sub    rsp,0x8
  41bb54:	push   0x2b2
  41bb59:	mov    r9d,0x0
  41bb5f:	mov    r8d,0x0
  41bb65:	mov    ecx,0x0
  41bb6a:	lea    rdx,[rip+0x1e4ff]        # 43a070 <_IO_stdin_used@@Base+0x3070>
  41bb71:	lea    rsi,[rip+0x1e870]        # 43a3e8 <_IO_stdin_used@@Base+0x33e8>
  41bb78:	mov    rdi,rax
  41bb7b:	call   419c43 <test_json@@Base>
  41bb80:	add    rsp,0x10
  41bb84:	or     DWORD PTR [rbp-0xc],eax
  41bb87:	mov    rax,QWORD PTR [rbp-0x8]
  41bb8b:	sub    rsp,0x8
  41bb8f:	push   0x2b6
  41bb94:	mov    r9d,0x0
  41bb9a:	mov    r8d,0x0
  41bba0:	mov    ecx,0x0
  41bba5:	lea    rdx,[rip+0x1e56c]        # 43a118 <_IO_stdin_used@@Base+0x3118>
  41bbac:	lea    rsi,[rip+0x1e885]        # 43a438 <_IO_stdin_used@@Base+0x3438>
  41bbb3:	mov    rdi,rax
  41bbb6:	call   419c43 <test_json@@Base>
  41bbbb:	add    rsp,0x10
  41bbbf:	or     DWORD PTR [rbp-0xc],eax
  41bbc2:	mov    rax,QWORD PTR [rbp-0x8]
  41bbc6:	sub    rsp,0x8
  41bbca:	push   0x2ba
  41bbcf:	mov    r9d,0x0
  41bbd5:	mov    r8d,0x0
  41bbdb:	mov    ecx,0x0
  41bbe0:	lea    rdx,[rip+0x1bb90]        # 437777 <_IO_stdin_used@@Base+0x777>
  41bbe7:	lea    rsi,[rip+0x1e8aa]        # 43a498 <_IO_stdin_used@@Base+0x3498>
  41bbee:	mov    rdi,rax
  41bbf1:	call   419c43 <test_json@@Base>
  41bbf6:	add    rsp,0x10
  41bbfa:	or     DWORD PTR [rbp-0xc],eax
  41bbfd:	mov    rax,QWORD PTR [rbp-0x8]
  41bc01:	sub    rsp,0x8
  41bc05:	push   0x2bd
  41bc0a:	mov    r9d,0x0
  41bc10:	mov    r8d,0x0
  41bc16:	mov    ecx,0x0
  41bc1b:	lea    rdx,[rip+0x1bb55]        # 437777 <_IO_stdin_used@@Base+0x777>
  41bc22:	lea    rsi,[rip+0x1e897]        # 43a4c0 <_IO_stdin_used@@Base+0x34c0>
  41bc29:	mov    rdi,rax
  41bc2c:	call   419c43 <test_json@@Base>
  41bc31:	add    rsp,0x10
  41bc35:	or     DWORD PTR [rbp-0xc],eax
  41bc38:	mov    rax,QWORD PTR [rbp-0x8]
  41bc3c:	sub    rsp,0x8
  41bc40:	push   0x2c7
  41bc45:	mov    r9d,0x0
  41bc4b:	mov    r8d,0x0
  41bc51:	mov    ecx,0x0
  41bc56:	lea    rdx,[rip+0x1e88b]        # 43a4e8 <_IO_stdin_used@@Base+0x34e8>
  41bc5d:	lea    rsi,[rip+0x1e8e4]        # 43a548 <_IO_stdin_used@@Base+0x3548>
  41bc64:	mov    rdi,rax
  41bc67:	call   419c43 <test_json@@Base>
  41bc6c:	add    rsp,0x10
  41bc70:	or     DWORD PTR [rbp-0xc],eax
  41bc73:	mov    rax,QWORD PTR [rbp-0x8]
  41bc77:	sub    rsp,0x8
  41bc7b:	push   0x2cc
  41bc80:	mov    r9d,0x0
  41bc86:	mov    r8d,0x0
  41bc8c:	mov    ecx,0x0
  41bc91:	lea    rdx,[rip+0x1e850]        # 43a4e8 <_IO_stdin_used@@Base+0x34e8>
  41bc98:	lea    rsi,[rip+0x1e909]        # 43a5a8 <_IO_stdin_used@@Base+0x35a8>
  41bc9f:	mov    rdi,rax
  41bca2:	call   419c43 <test_json@@Base>
  41bca7:	add    rsp,0x10
  41bcab:	or     DWORD PTR [rbp-0xc],eax
  41bcae:	mov    rax,QWORD PTR [rbp-0x8]
  41bcb2:	sub    rsp,0x8
  41bcb6:	push   0x2db
  41bcbb:	mov    r9d,0x0
  41bcc1:	mov    r8d,0x0
  41bcc7:	mov    ecx,0x0
  41bccc:	lea    rdx,[rip+0x1e945]        # 43a618 <_IO_stdin_used@@Base+0x3618>
  41bcd3:	lea    rsi,[rip+0x1e96e]        # 43a648 <_IO_stdin_used@@Base+0x3648>
  41bcda:	mov    rdi,rax
  41bcdd:	call   419c43 <test_json@@Base>
  41bce2:	add    rsp,0x10
  41bce6:	or     DWORD PTR [rbp-0xc],eax
  41bce9:	mov    rax,QWORD PTR [rbp-0x8]
  41bced:	sub    rsp,0x8
  41bcf1:	push   0x2de
  41bcf6:	mov    r9d,0x0
  41bcfc:	mov    r8d,0x0
  41bd02:	mov    ecx,0x0
  41bd07:	lea    rdx,[rip+0x1e977]        # 43a685 <_IO_stdin_used@@Base+0x3685>
  41bd0e:	lea    rsi,[rip+0x1e982]        # 43a697 <_IO_stdin_used@@Base+0x3697>
  41bd15:	mov    rdi,rax
  41bd18:	call   419c43 <test_json@@Base>
  41bd1d:	add    rsp,0x10
  41bd21:	or     DWORD PTR [rbp-0xc],eax
  41bd24:	mov    rax,QWORD PTR [rbp-0x8]
  41bd28:	sub    rsp,0x8
  41bd2c:	push   0x2e2
  41bd31:	mov    r9d,0x0
  41bd37:	mov    r8d,0x0
  41bd3d:	mov    ecx,0x0
  41bd42:	lea    rdx,[rip+0x1e96f]        # 43a6b8 <_IO_stdin_used@@Base+0x36b8>
  41bd49:	lea    rsi,[rip+0x1e9b0]        # 43a700 <_IO_stdin_used@@Base+0x3700>
  41bd50:	mov    rdi,rax
  41bd53:	call   419c43 <test_json@@Base>
  41bd58:	add    rsp,0x10
  41bd5c:	or     DWORD PTR [rbp-0xc],eax
  41bd5f:	mov    rax,QWORD PTR [rbp-0x8]
  41bd63:	sub    rsp,0x8
  41bd67:	push   0x2ee
  41bd6c:	mov    r9d,0x0
  41bd72:	mov    r8d,0x0
  41bd78:	mov    ecx,0x0
  41bd7d:	lea    rdx,[rip+0x1e934]        # 43a6b8 <_IO_stdin_used@@Base+0x36b8>
  41bd84:	lea    rsi,[rip+0x1e9bd]        # 43a748 <_IO_stdin_used@@Base+0x3748>
  41bd8b:	mov    rdi,rax
  41bd8e:	call   419c43 <test_json@@Base>
  41bd93:	add    rsp,0x10
  41bd97:	or     DWORD PTR [rbp-0xc],eax
  41bd9a:	mov    rax,QWORD PTR [rbp-0x8]
  41bd9e:	sub    rsp,0x8
  41bda2:	push   0x2fe
  41bda7:	mov    r9d,0x0
  41bdad:	mov    r8d,0x0
  41bdb3:	mov    ecx,0x0
  41bdb8:	lea    rdx,[rip+0x1ea29]        # 43a7e8 <_IO_stdin_used@@Base+0x37e8>
  41bdbf:	lea    rsi,[rip+0x1ea4a]        # 43a810 <_IO_stdin_used@@Base+0x3810>
  41bdc6:	mov    rdi,rax
  41bdc9:	call   419c43 <test_json@@Base>
  41bdce:	add    rsp,0x10
  41bdd2:	or     DWORD PTR [rbp-0xc],eax
  41bdd5:	mov    rax,QWORD PTR [rbp-0x8]
  41bdd9:	sub    rsp,0x8
  41bddd:	push   0x302
  41bde2:	mov    r9d,0x0
  41bde8:	mov    r8d,0x0
  41bdee:	mov    ecx,0x0
  41bdf3:	lea    rdx,[rip+0x1ea3e]        # 43a838 <_IO_stdin_used@@Base+0x3838>
  41bdfa:	lea    rsi,[rip+0x1ea67]        # 43a868 <_IO_stdin_used@@Base+0x3868>
  41be01:	mov    rdi,rax
  41be04:	call   419c43 <test_json@@Base>
  41be09:	add    rsp,0x10
  41be0d:	or     DWORD PTR [rbp-0xc],eax
  41be10:	mov    rax,QWORD PTR [rbp-0x8]
  41be14:	sub    rsp,0x8
  41be18:	push   0x308
  41be1d:	mov    r9d,0x0
  41be23:	mov    r8d,0x0
  41be29:	mov    ecx,0x0
  41be2e:	lea    rdx,[rip+0x1ea63]        # 43a898 <_IO_stdin_used@@Base+0x3898>
  41be35:	lea    rsi,[rip+0x1eacc]        # 43a908 <_IO_stdin_used@@Base+0x3908>
  41be3c:	mov    rdi,rax
  41be3f:	call   419c43 <test_json@@Base>
  41be44:	add    rsp,0x10
  41be48:	or     DWORD PTR [rbp-0xc],eax
  41be4b:	mov    rax,QWORD PTR [rbp-0x8]
  41be4f:	sub    rsp,0x8
  41be53:	push   0x30d
  41be58:	mov    r9d,0x0
  41be5e:	mov    r8d,0x0
  41be64:	mov    ecx,0x0
  41be69:	lea    rdx,[rip+0x1b907]        # 437777 <_IO_stdin_used@@Base+0x777>
  41be70:	lea    rsi,[rip+0x1eb11]        # 43a988 <_IO_stdin_used@@Base+0x3988>
  41be77:	mov    rdi,rax
  41be7a:	call   419c43 <test_json@@Base>
  41be7f:	add    rsp,0x10
  41be83:	or     DWORD PTR [rbp-0xc],eax
  41be86:	mov    rax,QWORD PTR [rbp-0x8]
  41be8a:	sub    rsp,0x8
  41be8e:	push   0x312
  41be93:	mov    r9d,0x0
  41be99:	mov    r8d,0x0
  41be9f:	mov    ecx,0x0
  41bea4:	lea    rdx,[rip+0x1eb55]        # 43aa00 <_IO_stdin_used@@Base+0x3a00>
  41beab:	lea    rsi,[rip+0x1ebbe]        # 43aa70 <_IO_stdin_used@@Base+0x3a70>
  41beb2:	mov    rdi,rax
  41beb5:	call   419c43 <test_json@@Base>
  41beba:	add    rsp,0x10
  41bebe:	or     DWORD PTR [rbp-0xc],eax
  41bec1:	mov    rax,QWORD PTR [rbp-0x8]
  41bec5:	sub    rsp,0x8
  41bec9:	push   0x317
  41bece:	mov    r9d,0x0
  41bed4:	mov    r8d,0x0
  41beda:	mov    ecx,0x0
  41bedf:	lea    rdx,[rip+0x1ec0a]        # 43aaf0 <_IO_stdin_used@@Base+0x3af0>
  41bee6:	lea    rsi,[rip+0x1ec83]        # 43ab70 <_IO_stdin_used@@Base+0x3b70>
  41beed:	mov    rdi,rax
  41bef0:	call   419c43 <test_json@@Base>
  41bef5:	add    rsp,0x10
  41bef9:	or     DWORD PTR [rbp-0xc],eax
  41befc:	mov    rax,QWORD PTR [rbp-0x8]
  41bf00:	sub    rsp,0x8
  41bf04:	push   0x31c
  41bf09:	mov    r9d,0x0
  41bf0f:	mov    r8d,0x0
  41bf15:	mov    ecx,0x0
  41bf1a:	lea    rdx,[rip+0x1ecdf]        # 43ac00 <_IO_stdin_used@@Base+0x3c00>
  41bf21:	lea    rsi,[rip+0x1ed48]        # 43ac70 <_IO_stdin_used@@Base+0x3c70>
  41bf28:	mov    rdi,rax
  41bf2b:	call   419c43 <test_json@@Base>
  41bf30:	add    rsp,0x10
  41bf34:	or     DWORD PTR [rbp-0xc],eax
  41bf37:	mov    rax,QWORD PTR [rbp-0x8]
  41bf3b:	sub    rsp,0x8
  41bf3f:	push   0x321
  41bf44:	mov    r9d,0x0
  41bf4a:	mov    r8d,0x0
  41bf50:	mov    ecx,0x0
  41bf55:	lea    rdx,[rip+0x1ed94]        # 43acf0 <_IO_stdin_used@@Base+0x3cf0>
  41bf5c:	lea    rsi,[rip+0x1ee0d]        # 43ad70 <_IO_stdin_used@@Base+0x3d70>
  41bf63:	mov    rdi,rax
  41bf66:	call   419c43 <test_json@@Base>
  41bf6b:	add    rsp,0x10
  41bf6f:	or     DWORD PTR [rbp-0xc],eax
  41bf72:	mov    rax,QWORD PTR [rbp-0x8]
  41bf76:	sub    rsp,0x8
  41bf7a:	push   0x326
  41bf7f:	mov    r9d,0x0
  41bf85:	mov    r8d,0x0
  41bf8b:	mov    ecx,0x0
  41bf90:	lea    rdx,[rip+0x1ee69]        # 43ae00 <_IO_stdin_used@@Base+0x3e00>
  41bf97:	lea    rsi,[rip+0x1eeea]        # 43ae88 <_IO_stdin_used@@Base+0x3e88>
  41bf9e:	mov    rdi,rax
  41bfa1:	call   419c43 <test_json@@Base>
  41bfa6:	add    rsp,0x10
  41bfaa:	or     DWORD PTR [rbp-0xc],eax
  41bfad:	cmp    DWORD PTR [rbp-0xc],0x0
  41bfb1:	je     41bfba <main@@Base+0x1053>
  41bfb3:	mov    eax,0xffffffff
  41bfb8:	jmp    41bfbf <main@@Base+0x1058>
  41bfba:	mov    eax,0x0
  41bfbf:	leave  
  41bfc0:	ret    
  41bfc1:	push   rbp
  41bfc2:	mov    rbp,rsp
  41bfc5:	sub    rsp,0x30
  41bfc9:	mov    QWORD PTR [rbp-0x28],rdi
  41bfcd:	mov    QWORD PTR [rbp-0x30],rsi
  41bfd1:	mov    rax,QWORD PTR fs:0x28
  41bfda:	mov    QWORD PTR [rbp-0x8],rax
  41bfde:	xor    eax,eax
  41bfe0:	mov    QWORD PTR [rbp-0x10],0x0
  41bfe8:	cmp    QWORD PTR [rbp-0x28],0x7
  41bfed:	ja     41bff7 <main@@Base+0x1090>
  41bfef:	mov    QWORD PTR [rbp-0x28],0x8
  41bff7:	mov    rdx,QWORD PTR [rbp-0x30]
  41bffb:	mov    rcx,QWORD PTR [rbp-0x28]
  41bfff:	lea    rax,[rbp-0x10]
  41c003:	mov    rsi,rcx
  41c006:	mov    rdi,rax
  41c009:	call   406280 <posix_memalign@plt>
  41c00e:	mov    DWORD PTR [rbp-0x14],eax
  41c011:	cmp    DWORD PTR [rbp-0x14],0x0
  41c015:	je     41c034 <main@@Base+0x10cd>
  41c017:	mov    rax,QWORD PTR [rbp-0x10]
  41c01b:	test   rax,rax
  41c01e:	je     41c034 <main@@Base+0x10cd>
  41c020:	mov    rax,QWORD PTR [rbp-0x10]
  41c024:	mov    rdi,rax
  41c027:	call   406160 <free@plt>
  41c02c:	mov    QWORD PTR [rbp-0x10],0x0
  41c034:	mov    rax,QWORD PTR [rbp-0x10]
  41c038:	mov    rcx,QWORD PTR [rbp-0x8]
  41c03c:	xor    rcx,QWORD PTR fs:0x28
  41c045:	je     41c04c <main@@Base+0x10e5>
  41c047:	call   4061a0 <__stack_chk_fail@plt>
  41c04c:	leave  
  41c04d:	ret    
  41c04e:	push   rbp
  41c04f:	mov    rbp,rsp
  41c052:	mov    DWORD PTR [rbp-0x4],edi
  41c055:	mov    eax,DWORD PTR [rbp-0x4]
  41c058:	pop    rbp
  41c059:	ret    
  41c05a:	push   rbp
  41c05b:	mov    rbp,rsp
  41c05e:	mov    eax,edi
  41c060:	mov    BYTE PTR [rbp-0x4],al
  41c063:	movzx  eax,BYTE PTR [rbp-0x4]
  41c067:	pop    rbp
  41c068:	ret    
  41c069:	push   rbp
  41c06a:	mov    rbp,rsp
  41c06d:	mov    DWORD PTR [rbp-0x4],edi
  41c070:	mov    eax,DWORD PTR [rbp-0x4]
  41c073:	pop    rbp
  41c074:	ret    
  41c075:	push   rbp
  41c076:	mov    rbp,rsp
  41c079:	mov    QWORD PTR [rbp-0x8],rdi
  41c07d:	mov    QWORD PTR [rbp-0x10],rsi
  41c081:	mov    rax,QWORD PTR [rbp-0x8]
  41c085:	mov    rdx,QWORD PTR [rax]
  41c088:	mov    rax,QWORD PTR [rbp-0x8]
  41c08c:	mov    rax,QWORD PTR [rax+0x8]
  41c090:	cmp    rdx,rax
  41c093:	jne    41c0b5 <main@@Base+0x114e>
  41c095:	cmp    QWORD PTR [rbp-0x10],0x0
  41c09a:	je     41c0ab <main@@Base+0x1144>
  41c09c:	mov    rax,QWORD PTR [rbp-0x8]
  41c0a0:	mov    rdx,QWORD PTR [rax+0x30]
  41c0a4:	mov    rax,QWORD PTR [rbp-0x10]
  41c0a8:	mov    QWORD PTR [rax],rdx
  41c0ab:	mov    rax,QWORD PTR [rbp-0x8]
  41c0af:	mov    rax,QWORD PTR [rax+0x10]
  41c0b3:	jmp    41c0cc <main@@Base+0x1165>
  41c0b5:	cmp    QWORD PTR [rbp-0x10],0x0
  41c0ba:	je     41c0c7 <main@@Base+0x1160>
  41c0bc:	mov    rax,QWORD PTR [rbp-0x10]
  41c0c0:	mov    QWORD PTR [rax],0x0
  41c0c7:	mov    eax,0x0
  41c0cc:	pop    rbp
  41c0cd:	ret    
  41c0ce:	push   rbp
  41c0cf:	mov    rbp,rsp
  41c0d2:	sub    rsp,0x20
  41c0d6:	mov    QWORD PTR [rbp-0x18],rdi
  41c0da:	mov    QWORD PTR [rbp-0x20],rsi
  41c0de:	mov    rdx,QWORD PTR [rbp-0x20]
  41c0e2:	mov    rax,QWORD PTR [rbp-0x18]
  41c0e6:	mov    esi,0x0
  41c0eb:	mov    rdi,rax
  41c0ee:	call   4061e0 <memchr@plt>
  41c0f3:	mov    QWORD PTR [rbp-0x8],rax
  41c0f7:	cmp    QWORD PTR [rbp-0x8],0x0
  41c0fc:	je     41c108 <main@@Base+0x11a1>
  41c0fe:	mov    rax,QWORD PTR [rbp-0x8]
  41c102:	sub    rax,QWORD PTR [rbp-0x18]
  41c106:	jmp    41c10c <main@@Base+0x11a5>
  41c108:	mov    rax,QWORD PTR [rbp-0x20]
  41c10c:	leave  
  41c10d:	ret    

000000000041c10e <flatcc_builder_default_alloc@@Base>:
  41c10e:	endbr64 
  41c112:	push   rbp
  41c113:	mov    rbp,rsp
  41c116:	sub    rsp,0x30
  41c11a:	mov    QWORD PTR [rbp-0x18],rdi
  41c11e:	mov    QWORD PTR [rbp-0x20],rsi
  41c122:	mov    QWORD PTR [rbp-0x28],rdx
  41c126:	mov    DWORD PTR [rbp-0x2c],ecx
  41c129:	mov    DWORD PTR [rbp-0x30],r8d
  41c12d:	cmp    QWORD PTR [rbp-0x28],0x0
  41c132:	jne    41c170 <flatcc_builder_default_alloc@@Base+0x62>
  41c134:	mov    rax,QWORD PTR [rbp-0x20]
  41c138:	mov    rax,QWORD PTR [rax]
  41c13b:	test   rax,rax
  41c13e:	je     41c166 <flatcc_builder_default_alloc@@Base+0x58>
  41c140:	mov    rax,QWORD PTR [rbp-0x20]
  41c144:	mov    rax,QWORD PTR [rax]
  41c147:	mov    rdi,rax
  41c14a:	call   406160 <free@plt>
  41c14f:	mov    rax,QWORD PTR [rbp-0x20]
  41c153:	mov    QWORD PTR [rax],0x0
  41c15a:	mov    rax,QWORD PTR [rbp-0x20]
  41c15e:	mov    QWORD PTR [rax+0x8],0x0
  41c166:	mov    eax,0x0
  41c16b:	jmp    41c27f <flatcc_builder_default_alloc@@Base+0x171>
  41c170:	cmp    DWORD PTR [rbp-0x30],0x4
  41c174:	je     41c1a6 <flatcc_builder_default_alloc@@Base+0x98>
  41c176:	cmp    DWORD PTR [rbp-0x30],0x4
  41c17a:	jg     41c184 <flatcc_builder_default_alloc@@Base+0x76>
  41c17c:	cmp    DWORD PTR [rbp-0x30],0x1
  41c180:	je     41c192 <flatcc_builder_default_alloc@@Base+0x84>
  41c182:	jmp    41c1ba <flatcc_builder_default_alloc@@Base+0xac>
  41c184:	cmp    DWORD PTR [rbp-0x30],0x5
  41c188:	je     41c19c <flatcc_builder_default_alloc@@Base+0x8e>
  41c18a:	cmp    DWORD PTR [rbp-0x30],0x7
  41c18e:	je     41c1b0 <flatcc_builder_default_alloc@@Base+0xa2>
  41c190:	jmp    41c1ba <flatcc_builder_default_alloc@@Base+0xac>
  41c192:	mov    QWORD PTR [rbp-0x10],0x100
  41c19a:	jmp    41c1c3 <flatcc_builder_default_alloc@@Base+0xb5>
  41c19c:	mov    rax,QWORD PTR [rbp-0x28]
  41c1a0:	mov    QWORD PTR [rbp-0x10],rax
  41c1a4:	jmp    41c1c3 <flatcc_builder_default_alloc@@Base+0xb5>
  41c1a6:	mov    QWORD PTR [rbp-0x10],0x120
  41c1ae:	jmp    41c1c3 <flatcc_builder_default_alloc@@Base+0xb5>
  41c1b0:	mov    QWORD PTR [rbp-0x10],0x40
  41c1b8:	jmp    41c1c3 <flatcc_builder_default_alloc@@Base+0xb5>
  41c1ba:	mov    QWORD PTR [rbp-0x10],0x20
  41c1c2:	nop
  41c1c3:	jmp    41c1c9 <flatcc_builder_default_alloc@@Base+0xbb>
  41c1c5:	shl    QWORD PTR [rbp-0x10],1
  41c1c9:	mov    rax,QWORD PTR [rbp-0x10]
  41c1cd:	cmp    rax,QWORD PTR [rbp-0x28]
  41c1d1:	jb     41c1c5 <flatcc_builder_default_alloc@@Base+0xb7>
  41c1d3:	mov    rax,QWORD PTR [rbp-0x20]
  41c1d7:	mov    rax,QWORD PTR [rax+0x8]
  41c1db:	cmp    QWORD PTR [rbp-0x28],rax
  41c1df:	ja     41c1fc <flatcc_builder_default_alloc@@Base+0xee>
  41c1e1:	mov    rax,QWORD PTR [rbp-0x20]
  41c1e5:	mov    rax,QWORD PTR [rax+0x8]
  41c1e9:	shr    rax,1
  41c1ec:	cmp    QWORD PTR [rbp-0x10],rax
  41c1f0:	ja     41c1fc <flatcc_builder_default_alloc@@Base+0xee>
  41c1f2:	mov    eax,0x0
  41c1f7:	jmp    41c27f <flatcc_builder_default_alloc@@Base+0x171>
  41c1fc:	mov    rax,QWORD PTR [rbp-0x20]
  41c200:	mov    rax,QWORD PTR [rax]
  41c203:	mov    rdx,QWORD PTR [rbp-0x10]
  41c207:	mov    rsi,rdx
  41c20a:	mov    rdi,rax
  41c20d:	call   406240 <realloc@plt>
  41c212:	mov    QWORD PTR [rbp-0x8],rax
  41c216:	cmp    QWORD PTR [rbp-0x8],0x0
  41c21b:	jne    41c224 <flatcc_builder_default_alloc@@Base+0x116>
  41c21d:	mov    eax,0xffffffff
  41c222:	jmp    41c27f <flatcc_builder_default_alloc@@Base+0x171>
  41c224:	cmp    DWORD PTR [rbp-0x2c],0x0
  41c228:	je     41c263 <flatcc_builder_default_alloc@@Base+0x155>
  41c22a:	mov    rax,QWORD PTR [rbp-0x20]
  41c22e:	mov    rax,QWORD PTR [rax+0x8]
  41c232:	cmp    QWORD PTR [rbp-0x10],rax
  41c236:	jbe    41c263 <flatcc_builder_default_alloc@@Base+0x155>
  41c238:	mov    rax,QWORD PTR [rbp-0x20]
  41c23c:	mov    rax,QWORD PTR [rax+0x8]
  41c240:	mov    rdx,QWORD PTR [rbp-0x10]
  41c244:	sub    rdx,rax
  41c247:	mov    rax,QWORD PTR [rbp-0x20]
  41c24b:	mov    rcx,QWORD PTR [rax+0x8]
  41c24f:	mov    rax,QWORD PTR [rbp-0x8]
  41c253:	add    rax,rcx
  41c256:	mov    esi,0x0
  41c25b:	mov    rdi,rax
  41c25e:	call   4061c0 <memset@plt>
  41c263:	mov    rax,QWORD PTR [rbp-0x20]
  41c267:	mov    rdx,QWORD PTR [rbp-0x8]
  41c26b:	mov    QWORD PTR [rax],rdx
  41c26e:	mov    rax,QWORD PTR [rbp-0x20]
  41c272:	mov    rdx,QWORD PTR [rbp-0x10]
  41c276:	mov    QWORD PTR [rax+0x8],rdx
  41c27a:	mov    eax,0x0
  41c27f:	leave  
  41c280:	ret    
  41c281:	push   rbp
  41c282:	mov    rbp,rsp
  41c285:	mov    QWORD PTR [rbp-0x18],rdi
  41c289:	mov    DWORD PTR [rbp-0x1c],esi
  41c28c:	mov    rax,QWORD PTR [rbp-0x18]
  41c290:	add    rax,0x58
  41c294:	add    rax,0x10
  41c298:	mov    QWORD PTR [rbp-0x8],rax
  41c29c:	mov    rax,QWORD PTR [rbp-0x18]
  41c2a0:	mov    rdx,QWORD PTR [rax+0x68]
  41c2a4:	mov    rax,QWORD PTR [rbp-0x18]
  41c2a8:	mov    eax,DWORD PTR [rax+0x28]
  41c2ab:	mov    eax,eax
  41c2ad:	add    rdx,rax
  41c2b0:	mov    rax,QWORD PTR [rbp-0x18]
  41c2b4:	mov    QWORD PTR [rax+0x18],rdx
  41c2b8:	mov    rax,QWORD PTR [rbp-0x8]
  41c2bc:	mov    rax,QWORD PTR [rax+0x8]
  41c2c0:	mov    edx,eax
  41c2c2:	mov    rax,QWORD PTR [rbp-0x18]
  41c2c6:	mov    eax,DWORD PTR [rax+0x28]
  41c2c9:	sub    edx,eax
  41c2cb:	mov    rax,QWORD PTR [rbp-0x18]
  41c2cf:	mov    DWORD PTR [rax+0x24],edx
  41c2d2:	mov    rax,QWORD PTR [rbp-0x18]
  41c2d6:	mov    eax,DWORD PTR [rax+0x24]
  41c2d9:	cmp    DWORD PTR [rbp-0x1c],eax
  41c2dc:	jae    41c2e8 <flatcc_builder_default_alloc@@Base+0x1da>
  41c2de:	mov    rax,QWORD PTR [rbp-0x18]
  41c2e2:	mov    edx,DWORD PTR [rbp-0x1c]
  41c2e5:	mov    DWORD PTR [rax+0x24],edx
  41c2e8:	mov    rax,QWORD PTR [rbp-0x18]
  41c2ec:	mov    rax,QWORD PTR [rax+0x30]
  41c2f0:	mov    edx,DWORD PTR [rbp-0x1c]
  41c2f3:	mov    DWORD PTR [rax+0x4],edx
  41c2f6:	nop
  41c2f7:	pop    rbp
  41c2f8:	ret    
  41c2f9:	endbr64 
  41c2fd:	push   rbp
  41c2fe:	mov    rbp,rsp
  41c301:	sub    rsp,0x30
  41c305:	mov    QWORD PTR [rbp-0x18],rdi
  41c309:	mov    QWORD PTR [rbp-0x20],rsi
  41c30d:	mov    DWORD PTR [rbp-0x24],edx
  41c310:	mov    rax,QWORD PTR [rbp-0x18]
  41c314:	add    rax,0x58
  41c318:	add    rax,0x10
  41c31c:	mov    QWORD PTR [rbp-0x8],rax
  41c320:	mov    rax,QWORD PTR [rbp-0x18]
  41c324:	mov    rax,QWORD PTR [rax+0x50]
  41c328:	mov    rdx,QWORD PTR [rbp-0x18]
  41c32c:	mov    edx,DWORD PTR [rdx+0x28]
  41c32f:	mov    ecx,edx
  41c331:	mov    rdx,QWORD PTR [rbp-0x20]
  41c335:	lea    r9,[rcx+rdx*1]
  41c339:	mov    rdx,QWORD PTR [rbp-0x18]
  41c33d:	mov    rdi,QWORD PTR [rdx+0x40]
  41c341:	mov    rsi,QWORD PTR [rbp-0x8]
  41c345:	mov    r8d,0x1
  41c34b:	mov    ecx,0x1
  41c350:	mov    rdx,r9
  41c353:	call   rax
  41c355:	test   eax,eax
  41c357:	je     41c360 <flatcc_builder_default_alloc@@Base+0x252>
  41c359:	mov    eax,0xffffffff
  41c35e:	jmp    41c376 <flatcc_builder_default_alloc@@Base+0x268>
  41c360:	mov    edx,DWORD PTR [rbp-0x24]
  41c363:	mov    rax,QWORD PTR [rbp-0x18]
  41c367:	mov    esi,edx
  41c369:	mov    rdi,rax
  41c36c:	call   41c281 <flatcc_builder_default_alloc@@Base+0x173>
  41c371:	mov    eax,0x0
  41c376:	leave  
  41c377:	ret    
  41c378:	push   rbp
  41c379:	mov    rbp,rsp
  41c37c:	sub    rsp,0x20
  41c380:	mov    QWORD PTR [rbp-0x18],rdi
  41c384:	mov    DWORD PTR [rbp-0x1c],esi
  41c387:	mov    rax,QWORD PTR [rbp-0x18]
  41c38b:	mov    eax,DWORD PTR [rax+0x20]
  41c38e:	mov    eax,eax
  41c390:	mov    QWORD PTR [rbp-0x8],rax
  41c394:	mov    rax,QWORD PTR [rbp-0x18]
  41c398:	mov    edx,DWORD PTR [rax+0x20]
  41c39b:	mov    eax,DWORD PTR [rbp-0x1c]
  41c39e:	add    edx,eax
  41c3a0:	mov    rax,QWORD PTR [rbp-0x18]
  41c3a4:	mov    DWORD PTR [rax+0x20],edx
  41c3a7:	mov    rax,QWORD PTR [rbp-0x18]
  41c3ab:	mov    edx,DWORD PTR [rax+0x20]
  41c3ae:	mov    rax,QWORD PTR [rbp-0x18]
  41c3b2:	mov    eax,DWORD PTR [rax+0x24]
  41c3b5:	cmp    edx,eax
  41c3b7:	jb     41c3e3 <flatcc_builder_default_alloc@@Base+0x2d5>
  41c3b9:	mov    rax,QWORD PTR [rbp-0x18]
  41c3bd:	mov    eax,DWORD PTR [rax+0x20]
  41c3c0:	inc    eax
  41c3c2:	mov    ecx,eax
  41c3c4:	mov    rax,QWORD PTR [rbp-0x18]
  41c3c8:	mov    edx,0xfffffffc
  41c3cd:	mov    rsi,rcx
  41c3d0:	mov    rdi,rax
  41c3d3:	call   41c2f9 <flatcc_builder_default_alloc@@Base+0x1eb>
  41c3d8:	test   eax,eax
  41c3da:	je     41c3e3 <flatcc_builder_default_alloc@@Base+0x2d5>
  41c3dc:	mov    eax,0x0
  41c3e1:	jmp    41c3f2 <flatcc_builder_default_alloc@@Base+0x2e4>
  41c3e3:	mov    rax,QWORD PTR [rbp-0x18]
  41c3e7:	mov    rdx,QWORD PTR [rax+0x18]
  41c3eb:	mov    rax,QWORD PTR [rbp-0x8]
  41c3ef:	add    rax,rdx
  41c3f2:	leave  
  41c3f3:	ret    
  41c3f4:	push   rbp
  41c3f5:	mov    rbp,rsp
  41c3f8:	sub    rsp,0x10
  41c3fc:	mov    QWORD PTR [rbp-0x8],rdi
  41c400:	mov    DWORD PTR [rbp-0xc],esi
  41c403:	mov    rax,QWORD PTR [rbp-0x8]
  41c407:	mov    eax,DWORD PTR [rax+0x20]
  41c40a:	sub    eax,DWORD PTR [rbp-0xc]
  41c40d:	mov    edx,eax
  41c40f:	mov    rax,QWORD PTR [rbp-0x8]
  41c413:	mov    DWORD PTR [rax+0x20],edx
  41c416:	mov    eax,DWORD PTR [rbp-0xc]
  41c419:	mov    rdx,QWORD PTR [rbp-0x8]
  41c41d:	mov    rcx,QWORD PTR [rdx+0x18]
  41c421:	mov    rdx,QWORD PTR [rbp-0x8]
  41c425:	mov    edx,DWORD PTR [rdx+0x20]
  41c428:	mov    edx,edx
  41c42a:	add    rcx,rdx
  41c42d:	mov    rdx,rax
  41c430:	mov    esi,0x0
  41c435:	mov    rdi,rcx
  41c438:	call   4061c0 <memset@plt>
  41c43d:	nop
  41c43e:	leave  
  41c43f:	ret    
  41c440:	push   rbp
  41c441:	mov    rbp,rsp
  41c444:	sub    rsp,0x30
  41c448:	mov    QWORD PTR [rbp-0x18],rdi
  41c44c:	mov    QWORD PTR [rbp-0x20],rsi
  41c450:	mov    DWORD PTR [rbp-0x24],edx
  41c453:	mov    edx,DWORD PTR [rbp-0x24]
  41c456:	mov    rax,QWORD PTR [rbp-0x18]
  41c45a:	mov    esi,edx
  41c45c:	mov    rdi,rax
  41c45f:	call   41c378 <flatcc_builder_default_alloc@@Base+0x26a>
  41c464:	mov    QWORD PTR [rbp-0x8],rax
  41c468:	cmp    QWORD PTR [rbp-0x8],0x0
  41c46d:	jne    41c476 <flatcc_builder_default_alloc@@Base+0x368>
  41c46f:	mov    eax,0x0
  41c474:	jmp    41c490 <flatcc_builder_default_alloc@@Base+0x382>
  41c476:	mov    edx,DWORD PTR [rbp-0x24]
  41c479:	mov    rcx,QWORD PTR [rbp-0x20]
  41c47d:	mov    rax,QWORD PTR [rbp-0x8]
  41c481:	mov    rsi,rcx
  41c484:	mov    rdi,rax
  41c487:	call   406220 <memcpy@plt>
  41c48c:	mov    rax,QWORD PTR [rbp-0x8]
  41c490:	leave  
  41c491:	ret    
  41c492:	push   rbp
  41c493:	mov    rbp,rsp
  41c496:	sub    rsp,0x30
  41c49a:	mov    QWORD PTR [rbp-0x18],rdi
  41c49e:	mov    DWORD PTR [rbp-0x1c],esi
  41c4a1:	mov    eax,ecx
  41c4a3:	mov    WORD PTR [rbp-0x20],dx
  41c4a7:	mov    WORD PTR [rbp-0x24],ax
  41c4ab:	mov    rax,QWORD PTR [rbp-0x18]
  41c4af:	mov    edx,DWORD PTR [rax+0x20]
  41c4b2:	movzx  eax,WORD PTR [rbp-0x20]
  41c4b6:	add    eax,edx
  41c4b8:	lea    edx,[rax-0x1]
  41c4bb:	movzx  eax,WORD PTR [rbp-0x20]
  41c4bf:	neg    eax
  41c4c1:	and    eax,edx
  41c4c3:	mov    DWORD PTR [rbp-0x4],eax
  41c4c6:	mov    edx,DWORD PTR [rbp-0x4]
  41c4c9:	mov    eax,DWORD PTR [rbp-0x1c]
  41c4cc:	add    edx,eax
  41c4ce:	mov    rax,QWORD PTR [rbp-0x18]
  41c4d2:	mov    DWORD PTR [rax+0x20],edx
  41c4d5:	mov    rax,QWORD PTR [rbp-0x18]
  41c4d9:	mov    edx,DWORD PTR [rax+0x20]
  41c4dc:	mov    rax,QWORD PTR [rbp-0x18]
  41c4e0:	mov    eax,DWORD PTR [rax+0x24]
  41c4e3:	cmp    edx,eax
  41c4e5:	jb     41c511 <flatcc_builder_default_alloc@@Base+0x403>
  41c4e7:	mov    rax,QWORD PTR [rbp-0x18]
  41c4eb:	mov    eax,DWORD PTR [rax+0x20]
  41c4ee:	inc    eax
  41c4f0:	mov    ecx,eax
  41c4f2:	mov    rax,QWORD PTR [rbp-0x18]
  41c4f6:	mov    edx,0xfffc
  41c4fb:	mov    rsi,rcx
  41c4fe:	mov    rdi,rax
  41c501:	call   41c2f9 <flatcc_builder_default_alloc@@Base+0x1eb>
  41c506:	test   eax,eax
  41c508:	je     41c511 <flatcc_builder_default_alloc@@Base+0x403>
  41c50a:	mov    eax,0x0
  41c50f:	jmp    41c558 <flatcc_builder_default_alloc@@Base+0x44a>
  41c511:	mov    eax,DWORD PTR [rbp-0x4]
  41c514:	mov    ecx,eax
  41c516:	mov    rax,QWORD PTR [rbp-0x18]
  41c51a:	mov    rax,QWORD PTR [rax+0x8]
  41c51e:	movzx  edx,WORD PTR [rbp-0x24]
  41c522:	add    rdx,rdx
  41c525:	add    rdx,rax
  41c528:	lea    eax,[rcx+0x4]
  41c52b:	mov    WORD PTR [rdx],ax
  41c52e:	mov    rax,QWORD PTR [rbp-0x18]
  41c532:	movzx  eax,WORD PTR [rax+0x10]
  41c536:	cmp    WORD PTR [rbp-0x24],ax
  41c53a:	jb     41c54a <flatcc_builder_default_alloc@@Base+0x43c>
  41c53c:	movzx  eax,WORD PTR [rbp-0x24]
  41c540:	inc    eax
  41c542:	mov    rdx,QWORD PTR [rbp-0x18]
  41c546:	mov    WORD PTR [rdx+0x10],ax
  41c54a:	mov    rax,QWORD PTR [rbp-0x18]
  41c54e:	mov    rdx,QWORD PTR [rax+0x18]
  41c552:	mov    eax,DWORD PTR [rbp-0x4]
  41c555:	add    rax,rdx
  41c558:	leave  
  41c559:	ret    
  41c55a:	push   rbp
  41c55b:	mov    rbp,rsp
  41c55e:	sub    rsp,0x20
  41c562:	mov    QWORD PTR [rbp-0x18],rdi
  41c566:	mov    eax,esi
  41c568:	mov    WORD PTR [rbp-0x1c],ax
  41c56c:	mov    rax,QWORD PTR [rbp-0x18]
  41c570:	mov    eax,DWORD PTR [rax+0x20]
  41c573:	add    eax,0x3
  41c576:	and    eax,0xfffffffc
  41c579:	mov    DWORD PTR [rbp-0x4],eax
  41c57c:	mov    eax,DWORD PTR [rbp-0x4]
  41c57f:	lea    edx,[rax+0x4]
  41c582:	mov    rax,QWORD PTR [rbp-0x18]
  41c586:	mov    DWORD PTR [rax+0x20],edx
  41c589:	mov    rax,QWORD PTR [rbp-0x18]
  41c58d:	mov    edx,DWORD PTR [rax+0x20]
  41c590:	mov    rax,QWORD PTR [rbp-0x18]
  41c594:	mov    eax,DWORD PTR [rax+0x24]
  41c597:	cmp    edx,eax
  41c599:	jbe    41c5c3 <flatcc_builder_default_alloc@@Base+0x4b5>
  41c59b:	mov    rax,QWORD PTR [rbp-0x18]
  41c59f:	mov    eax,DWORD PTR [rax+0x20]
  41c5a2:	mov    ecx,eax
  41c5a4:	mov    rax,QWORD PTR [rbp-0x18]
  41c5a8:	mov    edx,0xfffc
  41c5ad:	mov    rsi,rcx
  41c5b0:	mov    rdi,rax
  41c5b3:	call   41c2f9 <flatcc_builder_default_alloc@@Base+0x1eb>
  41c5b8:	test   eax,eax
  41c5ba:	je     41c5c3 <flatcc_builder_default_alloc@@Base+0x4b5>
  41c5bc:	mov    eax,0x0
  41c5c1:	jmp    41c622 <flatcc_builder_default_alloc@@Base+0x514>
  41c5c3:	mov    eax,DWORD PTR [rbp-0x4]
  41c5c6:	mov    ecx,eax
  41c5c8:	mov    rax,QWORD PTR [rbp-0x18]
  41c5cc:	mov    rax,QWORD PTR [rax+0x8]
  41c5d0:	movzx  edx,WORD PTR [rbp-0x1c]
  41c5d4:	add    rdx,rdx
  41c5d7:	add    rdx,rax
  41c5da:	lea    eax,[rcx+0x4]
  41c5dd:	mov    WORD PTR [rdx],ax
  41c5e0:	mov    rax,QWORD PTR [rbp-0x18]
  41c5e4:	movzx  eax,WORD PTR [rax+0x10]
  41c5e8:	cmp    WORD PTR [rbp-0x1c],ax
  41c5ec:	jb     41c5fc <flatcc_builder_default_alloc@@Base+0x4ee>
  41c5ee:	movzx  eax,WORD PTR [rbp-0x1c]
  41c5f2:	inc    eax
  41c5f4:	mov    rdx,QWORD PTR [rbp-0x18]
  41c5f8:	mov    WORD PTR [rdx+0x10],ax
  41c5fc:	mov    rax,QWORD PTR [rbp-0x18]
  41c600:	mov    rax,QWORD PTR [rax]
  41c603:	lea    rcx,[rax+0x2]
  41c607:	mov    rdx,QWORD PTR [rbp-0x18]
  41c60b:	mov    QWORD PTR [rdx],rcx
  41c60e:	mov    edx,DWORD PTR [rbp-0x4]
  41c611:	mov    WORD PTR [rax],dx
  41c614:	mov    rax,QWORD PTR [rbp-0x18]
  41c618:	mov    rdx,QWORD PTR [rax+0x18]
  41c61c:	mov    eax,DWORD PTR [rbp-0x4]
  41c61f:	add    rax,rdx
  41c622:	leave  
  41c623:	ret    
  41c624:	push   rbp
  41c625:	mov    rbp,rsp
  41c628:	sub    rsp,0x30
  41c62c:	mov    QWORD PTR [rbp-0x18],rdi
  41c630:	mov    DWORD PTR [rbp-0x1c],esi
  41c633:	mov    QWORD PTR [rbp-0x28],rdx
  41c637:	mov    QWORD PTR [rbp-0x30],rcx
  41c63b:	mov    DWORD PTR [rbp-0x20],r8d
  41c63f:	mov    rax,QWORD PTR [rbp-0x18]
  41c643:	lea    rdx,[rax+0x58]
  41c647:	mov    eax,DWORD PTR [rbp-0x1c]
  41c64a:	cdqe   
  41c64c:	shl    rax,0x4
  41c650:	add    rax,rdx
  41c653:	mov    QWORD PTR [rbp-0x8],rax
  41c657:	mov    rdx,QWORD PTR [rbp-0x28]
  41c65b:	mov    rax,QWORD PTR [rbp-0x30]
  41c65f:	add    rdx,rax
  41c662:	mov    rax,QWORD PTR [rbp-0x8]
  41c666:	mov    rax,QWORD PTR [rax+0x8]
  41c66a:	cmp    rdx,rax
  41c66d:	jbe    41c6c2 <flatcc_builder_default_alloc@@Base+0x5b4>
  41c66f:	mov    rax,QWORD PTR [rbp-0x18]
  41c673:	mov    rax,QWORD PTR [rax+0x50]
  41c677:	mov    rcx,QWORD PTR [rbp-0x28]
  41c67b:	mov    rdx,QWORD PTR [rbp-0x30]
  41c67f:	lea    r9,[rcx+rdx*1]
  41c683:	mov    rdx,QWORD PTR [rbp-0x18]
  41c687:	mov    rdi,QWORD PTR [rdx+0x40]
  41c68b:	mov    ecx,DWORD PTR [rbp-0x1c]
  41c68e:	mov    edx,DWORD PTR [rbp-0x20]
  41c691:	mov    rsi,QWORD PTR [rbp-0x8]
  41c695:	mov    r8d,ecx
  41c698:	mov    ecx,edx
  41c69a:	mov    rdx,r9
  41c69d:	call   rax
  41c69f:	test   eax,eax
  41c6a1:	je     41c6c2 <flatcc_builder_default_alloc@@Base+0x5b4>
  41c6a3:	lea    rcx,[rip+0x1ef2e]        # 43b5d8 <flatcc_builder_padding_base@@Base+0x658>
  41c6aa:	mov    edx,0x134
  41c6af:	lea    rsi,[rip+0x1eaca]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41c6b6:	lea    rdi,[rip+0x1eb23]        # 43b1e0 <flatcc_builder_padding_base@@Base+0x260>
  41c6bd:	call   4061b0 <__assert_fail@plt>
  41c6c2:	mov    rax,QWORD PTR [rbp-0x8]
  41c6c6:	mov    rax,QWORD PTR [rax]
  41c6c9:	mov    rdx,rax
  41c6cc:	mov    rax,QWORD PTR [rbp-0x28]
  41c6d0:	add    rax,rdx
  41c6d3:	leave  
  41c6d4:	ret    
  41c6d5:	push   rbp
  41c6d6:	mov    rbp,rsp
  41c6d9:	sub    rsp,0x20
  41c6dd:	mov    QWORD PTR [rbp-0x18],rdi
  41c6e1:	mov    DWORD PTR [rbp-0x1c],esi
  41c6e4:	mov    rax,QWORD PTR [rbp-0x18]
  41c6e8:	mov    rax,QWORD PTR [rax+0x30]
  41c6ec:	mov    edx,DWORD PTR [rax+0x10]
  41c6ef:	mov    rax,QWORD PTR [rbp-0x18]
  41c6f3:	mov    rax,QWORD PTR [rax+0x30]
  41c6f7:	movzx  eax,WORD PTR [rax+0x1c]
  41c6fb:	movzx  eax,ax
  41c6fe:	add    eax,eax
  41c700:	add    eax,edx
  41c702:	mov    DWORD PTR [rbp-0x8],eax
  41c705:	mov    eax,DWORD PTR [rbp-0x1c]
  41c708:	add    eax,0x2
  41c70b:	cdqe   
  41c70d:	add    eax,eax
  41c70f:	mov    DWORD PTR [rbp-0x4],eax
  41c712:	mov    ecx,DWORD PTR [rbp-0x4]
  41c715:	mov    edx,DWORD PTR [rbp-0x8]
  41c718:	mov    rax,QWORD PTR [rbp-0x18]
  41c71c:	mov    r8d,0x1
  41c722:	mov    esi,0x0
  41c727:	mov    rdi,rax
  41c72a:	call   41c624 <flatcc_builder_default_alloc@@Base+0x516>
  41c72f:	mov    rdx,rax
  41c732:	mov    rax,QWORD PTR [rbp-0x18]
  41c736:	mov    QWORD PTR [rax+0x8],rdx
  41c73a:	mov    rax,QWORD PTR [rbp-0x18]
  41c73e:	mov    rax,QWORD PTR [rax+0x8]
  41c742:	test   rax,rax
  41c745:	jne    41c74e <flatcc_builder_default_alloc@@Base+0x640>
  41c747:	mov    eax,0xffffffff
  41c74c:	jmp    41c7bb <flatcc_builder_default_alloc@@Base+0x6ad>
  41c74e:	mov    rax,QWORD PTR [rbp-0x18]
  41c752:	mov    rax,QWORD PTR [rax+0x8]
  41c756:	lea    rdx,[rax+0x4]
  41c75a:	mov    rax,QWORD PTR [rbp-0x18]
  41c75e:	mov    QWORD PTR [rax+0x8],rdx
  41c762:	mov    rax,QWORD PTR [rbp-0x18]
  41c766:	mov    rax,QWORD PTR [rax+0x30]
  41c76a:	mov    eax,DWORD PTR [rax+0x14]
  41c76d:	mov    DWORD PTR [rbp-0x8],eax
  41c770:	mov    eax,DWORD PTR [rbp-0x1c]
  41c773:	cdqe   
  41c775:	add    eax,eax
  41c777:	inc    eax
  41c779:	mov    DWORD PTR [rbp-0x4],eax
  41c77c:	mov    ecx,DWORD PTR [rbp-0x4]
  41c77f:	mov    edx,DWORD PTR [rbp-0x8]
  41c782:	mov    rax,QWORD PTR [rbp-0x18]
  41c786:	mov    r8d,0x0
  41c78c:	mov    esi,0x3
  41c791:	mov    rdi,rax
  41c794:	call   41c624 <flatcc_builder_default_alloc@@Base+0x516>
  41c799:	mov    rdx,rax
  41c79c:	mov    rax,QWORD PTR [rbp-0x18]
  41c7a0:	mov    QWORD PTR [rax],rdx
  41c7a3:	mov    rax,QWORD PTR [rbp-0x18]
  41c7a7:	mov    rax,QWORD PTR [rax]
  41c7aa:	test   rax,rax
  41c7ad:	jne    41c7b6 <flatcc_builder_default_alloc@@Base+0x6a8>
  41c7af:	mov    eax,0xffffffff
  41c7b4:	jmp    41c7bb <flatcc_builder_default_alloc@@Base+0x6ad>
  41c7b6:	mov    eax,0x0
  41c7bb:	leave  
  41c7bc:	ret    
  41c7bd:	endbr64 
  41c7c1:	push   rbp
  41c7c2:	mov    rbp,rsp
  41c7c5:	sub    rsp,0x30
  41c7c9:	mov    QWORD PTR [rbp-0x28],rdi
  41c7cd:	mov    rax,QWORD PTR [rbp-0x28]
  41c7d1:	add    rax,0x58
  41c7d5:	add    rax,0x50
  41c7d9:	mov    QWORD PTR [rbp-0x8],rax
  41c7dd:	mov    rax,QWORD PTR [rbp-0x28]
  41c7e1:	mov    eax,DWORD PTR [rax+0xe4]
  41c7e7:	test   eax,eax
  41c7e9:	je     41c80a <flatcc_builder_default_alloc@@Base+0x6fc>
  41c7eb:	lea    rcx,[rip+0x1edd6]        # 43b5c8 <flatcc_builder_padding_base@@Base+0x648>
  41c7f2:	mov    edx,0x156
  41c7f7:	lea    rsi,[rip+0x1e982]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41c7fe:	lea    rdi,[rip+0x1e9dd]        # 43b1e2 <flatcc_builder_padding_base@@Base+0x262>
  41c805:	call   4061b0 <__assert_fail@plt>
  41c80a:	mov    rax,QWORD PTR [rbp-0x28]
  41c80e:	mov    eax,DWORD PTR [rax+0xe4]
  41c814:	mov    edx,eax
  41c816:	mov    rax,QWORD PTR [rbp-0x28]
  41c81a:	mov    r8d,0x0
  41c820:	mov    ecx,0x10
  41c825:	mov    esi,0x6
  41c82a:	mov    rdi,rax
  41c82d:	call   41c624 <flatcc_builder_default_alloc@@Base+0x516>
  41c832:	test   rax,rax
  41c835:	jne    41c841 <flatcc_builder_default_alloc@@Base+0x733>
  41c837:	mov    eax,0xffffffff
  41c83c:	jmp    41c8e2 <flatcc_builder_default_alloc@@Base+0x7d4>
  41c841:	mov    rax,QWORD PTR [rbp-0x28]
  41c845:	mov    DWORD PTR [rax+0xe4],0x10
  41c84f:	mov    QWORD PTR [rbp-0x18],0x100
  41c857:	mov    rax,QWORD PTR [rbp-0x28]
  41c85b:	mov    rax,QWORD PTR [rax+0x50]
  41c85f:	mov    rdx,QWORD PTR [rbp-0x28]
  41c863:	mov    rdi,QWORD PTR [rdx+0x40]
  41c867:	mov    rdx,QWORD PTR [rbp-0x18]
  41c86b:	mov    rsi,QWORD PTR [rbp-0x8]
  41c86f:	mov    r8d,0x5
  41c875:	mov    ecx,0x1
  41c87a:	call   rax
  41c87c:	test   eax,eax
  41c87e:	je     41c88b <flatcc_builder_default_alloc@@Base+0x77d>
  41c880:	mov    eax,0xffffffff
  41c885:	jmp    41c8e2 <flatcc_builder_default_alloc@@Base+0x7d4>
  41c887:	shl    QWORD PTR [rbp-0x18],1
  41c88b:	mov    rax,QWORD PTR [rbp-0x18]
  41c88f:	lea    rdx,[rax+rax*1]
  41c893:	mov    rax,QWORD PTR [rbp-0x8]
  41c897:	mov    rax,QWORD PTR [rax+0x8]
  41c89b:	cmp    rdx,rax
  41c89e:	jbe    41c887 <flatcc_builder_default_alloc@@Base+0x779>
  41c8a0:	mov    rax,QWORD PTR [rbp-0x18]
  41c8a4:	shr    rax,0x2
  41c8a8:	mov    QWORD PTR [rbp-0x18],rax
  41c8ac:	mov    QWORD PTR [rbp-0x10],0x0
  41c8b4:	jmp    41c8ba <flatcc_builder_default_alloc@@Base+0x7ac>
  41c8b6:	inc    QWORD PTR [rbp-0x10]
  41c8ba:	mov    rax,QWORD PTR [rbp-0x10]
  41c8be:	mov    edx,0x1
  41c8c3:	shlx   rax,rdx,rax
  41c8c8:	cmp    QWORD PTR [rbp-0x18],rax
  41c8cc:	ja     41c8b6 <flatcc_builder_default_alloc@@Base+0x7a8>
  41c8ce:	mov    rax,QWORD PTR [rbp-0x28]
  41c8d2:	mov    rdx,QWORD PTR [rbp-0x10]
  41c8d6:	mov    QWORD PTR [rax+0xd8],rdx
  41c8dd:	mov    eax,0x0
  41c8e2:	leave  
  41c8e3:	ret    
  41c8e4:	push   rbp
  41c8e5:	mov    rbp,rsp
  41c8e8:	sub    rsp,0x20
  41c8ec:	mov    QWORD PTR [rbp-0x18],rdi
  41c8f0:	mov    DWORD PTR [rbp-0x1c],esi
  41c8f3:	mov    rax,QWORD PTR [rbp-0x18]
  41c8f7:	mov    rax,QWORD PTR [rax+0xd8]
  41c8fe:	test   rax,rax
  41c901:	jne    41c91a <flatcc_builder_default_alloc@@Base+0x80c>
  41c903:	mov    rax,QWORD PTR [rbp-0x18]
  41c907:	mov    rdi,rax
  41c90a:	call   41c7bd <flatcc_builder_default_alloc@@Base+0x6af>
  41c90f:	test   eax,eax
  41c911:	je     41c91a <flatcc_builder_default_alloc@@Base+0x80c>
  41c913:	mov    eax,0x0
  41c918:	jmp    41c956 <flatcc_builder_default_alloc@@Base+0x848>
  41c91a:	mov    rax,QWORD PTR [rbp-0x18]
  41c91e:	mov    rax,QWORD PTR [rax+0xa8]
  41c925:	mov    QWORD PTR [rbp-0x8],rax
  41c929:	mov    rax,QWORD PTR [rbp-0x18]
  41c92d:	mov    rax,QWORD PTR [rax+0xd8]
  41c934:	mov    edx,0x20
  41c939:	sub    edx,eax
  41c93b:	mov    eax,edx
  41c93d:	mov    edx,DWORD PTR [rbp-0x1c]
  41c940:	shrx   eax,edx,eax
  41c945:	mov    eax,eax
  41c947:	lea    rdx,[rax*4+0x0]
  41c94f:	mov    rax,QWORD PTR [rbp-0x8]
  41c953:	add    rax,rdx
  41c956:	leave  
  41c957:	ret    

000000000041c958 <flatcc_builder_flush_vtable_cache@@Base>:
  41c958:	endbr64 
  41c95c:	push   rbp
  41c95d:	mov    rbp,rsp
  41c960:	sub    rsp,0x20
  41c964:	mov    QWORD PTR [rbp-0x18],rdi
  41c968:	mov    rax,QWORD PTR [rbp-0x18]
  41c96c:	add    rax,0x58
  41c970:	add    rax,0x50
  41c974:	mov    QWORD PTR [rbp-0x8],rax
  41c978:	mov    rax,QWORD PTR [rbp-0x18]
  41c97c:	mov    rax,QWORD PTR [rax+0xd8]
  41c983:	test   rax,rax
  41c986:	je     41c9c2 <flatcc_builder_flush_vtable_cache@@Base+0x6a>
  41c988:	mov    rax,QWORD PTR [rbp-0x8]
  41c98c:	mov    rdx,QWORD PTR [rax+0x8]
  41c990:	mov    rax,QWORD PTR [rbp-0x8]
  41c994:	mov    rax,QWORD PTR [rax]
  41c997:	mov    esi,0x0
  41c99c:	mov    rdi,rax
  41c99f:	call   4061c0 <memset@plt>
  41c9a4:	mov    rax,QWORD PTR [rbp-0x18]
  41c9a8:	mov    DWORD PTR [rax+0xe4],0x10
  41c9b2:	mov    rax,QWORD PTR [rbp-0x18]
  41c9b6:	mov    DWORD PTR [rax+0xe0],0x0
  41c9c0:	jmp    41c9c3 <flatcc_builder_flush_vtable_cache@@Base+0x6b>
  41c9c2:	nop
  41c9c3:	leave  
  41c9c4:	ret    

000000000041c9c5 <flatcc_builder_custom_init@@Base>:
  41c9c5:	endbr64 
  41c9c9:	push   rbp
  41c9ca:	mov    rbp,rsp
  41c9cd:	sub    rsp,0x30
  41c9d1:	mov    QWORD PTR [rbp-0x8],rdi
  41c9d5:	mov    QWORD PTR [rbp-0x10],rsi
  41c9d9:	mov    QWORD PTR [rbp-0x18],rdx
  41c9dd:	mov    QWORD PTR [rbp-0x20],rcx
  41c9e1:	mov    QWORD PTR [rbp-0x28],r8
  41c9e5:	mov    rax,QWORD PTR [rbp-0x8]
  41c9e9:	mov    edx,0x188
  41c9ee:	mov    esi,0x0
  41c9f3:	mov    rdi,rax
  41c9f6:	call   4061c0 <memset@plt>
  41c9fb:	cmp    QWORD PTR [rbp-0x10],0x0
  41ca00:	jne    41ca29 <flatcc_builder_custom_init@@Base+0x64>
  41ca02:	mov    rax,QWORD PTR [rbp-0x8]
  41ca06:	mov    DWORD PTR [rax+0x128],0x1
  41ca10:	mov    rax,0x421f62
  41ca17:	mov    QWORD PTR [rbp-0x10],rax
  41ca1b:	mov    rax,QWORD PTR [rbp-0x8]
  41ca1f:	add    rax,0x130
  41ca25:	mov    QWORD PTR [rbp-0x18],rax
  41ca29:	cmp    QWORD PTR [rbp-0x20],0x0
  41ca2e:	jne    41ca3b <flatcc_builder_custom_init@@Base+0x76>
  41ca30:	mov    rax,0x41c10e
  41ca37:	mov    QWORD PTR [rbp-0x20],rax
  41ca3b:	mov    rax,QWORD PTR [rbp-0x8]
  41ca3f:	mov    rdx,QWORD PTR [rbp-0x28]
  41ca43:	mov    QWORD PTR [rax+0x40],rdx
  41ca47:	mov    rax,QWORD PTR [rbp-0x8]
  41ca4b:	mov    rdx,QWORD PTR [rbp-0x20]
  41ca4f:	mov    QWORD PTR [rax+0x50],rdx
  41ca53:	mov    rax,QWORD PTR [rbp-0x8]
  41ca57:	mov    rdx,QWORD PTR [rbp-0x18]
  41ca5b:	mov    QWORD PTR [rax+0x38],rdx
  41ca5f:	mov    rax,QWORD PTR [rbp-0x8]
  41ca63:	mov    rdx,QWORD PTR [rbp-0x10]
  41ca67:	mov    QWORD PTR [rax+0x48],rdx
  41ca6b:	mov    eax,0x0
  41ca70:	leave  
  41ca71:	ret    

000000000041ca72 <flatcc_builder_init@@Base>:
  41ca72:	endbr64 
  41ca76:	push   rbp
  41ca77:	mov    rbp,rsp
  41ca7a:	sub    rsp,0x10
  41ca7e:	mov    QWORD PTR [rbp-0x8],rdi
  41ca82:	mov    rax,QWORD PTR [rbp-0x8]
  41ca86:	mov    r8d,0x0
  41ca8c:	mov    ecx,0x0
  41ca91:	mov    edx,0x0
  41ca96:	mov    esi,0x0
  41ca9b:	mov    rdi,rax
  41ca9e:	call   41c9c5 <flatcc_builder_custom_init@@Base>
  41caa3:	leave  
  41caa4:	ret    

000000000041caa5 <flatcc_builder_custom_reset@@Base>:
  41caa5:	endbr64 
  41caa9:	push   rbp
  41caaa:	mov    rbp,rsp
  41caad:	sub    rsp,0x20
  41cab1:	mov    QWORD PTR [rbp-0x18],rdi
  41cab5:	mov    DWORD PTR [rbp-0x1c],esi
  41cab8:	mov    DWORD PTR [rbp-0x20],edx
  41cabb:	mov    DWORD PTR [rbp-0xc],0x0
  41cac2:	jmp    41cb78 <flatcc_builder_custom_reset@@Base+0xd3>
  41cac7:	mov    rax,QWORD PTR [rbp-0x18]
  41cacb:	lea    rdx,[rax+0x58]
  41cacf:	mov    eax,DWORD PTR [rbp-0xc]
  41cad2:	cdqe   
  41cad4:	shl    rax,0x4
  41cad8:	add    rax,rdx
  41cadb:	mov    QWORD PTR [rbp-0x8],rax
  41cadf:	mov    rax,QWORD PTR [rbp-0x8]
  41cae3:	mov    rax,QWORD PTR [rax]
  41cae6:	test   rax,rax
  41cae9:	je     41cb49 <flatcc_builder_custom_reset@@Base+0xa4>
  41caeb:	cmp    DWORD PTR [rbp-0xc],0x5
  41caef:	je     41cb2b <flatcc_builder_custom_reset@@Base+0x86>
  41caf1:	cmp    DWORD PTR [rbp-0x20],0x0
  41caf5:	je     41cb2b <flatcc_builder_custom_reset@@Base+0x86>
  41caf7:	mov    rax,QWORD PTR [rbp-0x18]
  41cafb:	mov    rax,QWORD PTR [rax+0x50]
  41caff:	mov    rdx,QWORD PTR [rbp-0x18]
  41cb03:	mov    rdi,QWORD PTR [rdx+0x40]
  41cb07:	mov    edx,DWORD PTR [rbp-0xc]
  41cb0a:	mov    rsi,QWORD PTR [rbp-0x8]
  41cb0e:	mov    r8d,edx
  41cb11:	mov    ecx,0x1
  41cb16:	mov    edx,0x1
  41cb1b:	call   rax
  41cb1d:	test   eax,eax
  41cb1f:	je     41cb2b <flatcc_builder_custom_reset@@Base+0x86>
  41cb21:	mov    eax,0xffffffff
  41cb26:	jmp    41ccb7 <flatcc_builder_custom_reset@@Base+0x212>
  41cb2b:	mov    rax,QWORD PTR [rbp-0x8]
  41cb2f:	mov    rdx,QWORD PTR [rax+0x8]
  41cb33:	mov    rax,QWORD PTR [rbp-0x8]
  41cb37:	mov    rax,QWORD PTR [rax]
  41cb3a:	mov    esi,0x0
  41cb3f:	mov    rdi,rax
  41cb42:	call   4061c0 <memset@plt>
  41cb47:	jmp    41cb75 <flatcc_builder_custom_reset@@Base+0xd0>
  41cb49:	mov    rax,QWORD PTR [rbp-0x8]
  41cb4d:	mov    rax,QWORD PTR [rax+0x8]
  41cb51:	test   rax,rax
  41cb54:	je     41cb75 <flatcc_builder_custom_reset@@Base+0xd0>
  41cb56:	lea    rcx,[rip+0x1ea93]        # 43b5f0 <flatcc_builder_padding_base@@Base+0x670>
  41cb5d:	mov    edx,0x1b2
  41cb62:	lea    rsi,[rip+0x1e617]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41cb69:	lea    rdi,[rip+0x1e681]        # 43b1f1 <flatcc_builder_padding_base@@Base+0x271>
  41cb70:	call   4061b0 <__assert_fail@plt>
  41cb75:	inc    DWORD PTR [rbp-0xc]
  41cb78:	cmp    DWORD PTR [rbp-0xc],0x7
  41cb7c:	jle    41cac7 <flatcc_builder_custom_reset@@Base+0x22>
  41cb82:	mov    rax,QWORD PTR [rbp-0x18]
  41cb86:	mov    DWORD PTR [rax+0xe0],0x0
  41cb90:	mov    rax,QWORD PTR [rbp-0x18]
  41cb94:	mov    eax,DWORD PTR [rax+0xe4]
  41cb9a:	test   eax,eax
  41cb9c:	je     41cbac <flatcc_builder_custom_reset@@Base+0x107>
  41cb9e:	mov    rax,QWORD PTR [rbp-0x18]
  41cba2:	mov    DWORD PTR [rax+0xe4],0x10
  41cbac:	mov    rax,QWORD PTR [rbp-0x18]
  41cbb0:	mov    WORD PTR [rax+0xe8],0x0
  41cbb9:	mov    rax,QWORD PTR [rbp-0x18]
  41cbbd:	mov    DWORD PTR [rax+0xf0],0x0
  41cbc7:	mov    rax,QWORD PTR [rbp-0x18]
  41cbcb:	mov    DWORD PTR [rax+0xf4],0x0
  41cbd5:	mov    rax,QWORD PTR [rbp-0x18]
  41cbd9:	mov    DWORD PTR [rax+0x104],0x0
  41cbe3:	mov    rax,QWORD PTR [rbp-0x18]
  41cbe7:	mov    DWORD PTR [rax+0x108],0x0
  41cbf1:	mov    rax,QWORD PTR [rbp-0x18]
  41cbf5:	mov    DWORD PTR [rax+0x20],0x0
  41cbfc:	mov    rax,QWORD PTR [rbp-0x18]
  41cc00:	mov    DWORD PTR [rax+0x24],0x0
  41cc07:	mov    rax,QWORD PTR [rbp-0x18]
  41cc0b:	mov    DWORD PTR [rax+0xfc],0x0
  41cc15:	mov    rax,QWORD PTR [rbp-0x18]
  41cc19:	mov    DWORD PTR [rax+0x100],0x0
  41cc23:	mov    rax,QWORD PTR [rbp-0x18]
  41cc27:	mov    rdx,QWORD PTR [rax+0x68]
  41cc2b:	mov    rax,QWORD PTR [rbp-0x18]
  41cc2f:	mov    QWORD PTR [rax+0x18],rdx
  41cc33:	mov    rax,QWORD PTR [rbp-0x18]
  41cc37:	mov    rdx,QWORD PTR [rax+0x88]
  41cc3e:	mov    rax,QWORD PTR [rbp-0x18]
  41cc42:	mov    QWORD PTR [rax],rdx
  41cc45:	mov    rax,QWORD PTR [rbp-0x18]
  41cc49:	mov    rdx,QWORD PTR [rax+0x58]
  41cc4d:	mov    rax,QWORD PTR [rbp-0x18]
  41cc51:	mov    QWORD PTR [rax+0x8],rdx
  41cc55:	mov    rax,QWORD PTR [rbp-0x18]
  41cc59:	mov    QWORD PTR [rax+0x30],0x0
  41cc61:	cmp    DWORD PTR [rbp-0x1c],0x0
  41cc65:	je     41cc92 <flatcc_builder_custom_reset@@Base+0x1ed>
  41cc67:	mov    rax,QWORD PTR [rbp-0x18]
  41cc6b:	mov    QWORD PTR [rax+0x118],0x0
  41cc76:	mov    rax,QWORD PTR [rbp-0x18]
  41cc7a:	mov    DWORD PTR [rax+0x120],0x0
  41cc84:	mov    rax,QWORD PTR [rbp-0x18]
  41cc88:	mov    DWORD PTR [rax+0x124],0x0
  41cc92:	mov    rax,QWORD PTR [rbp-0x18]
  41cc96:	mov    eax,DWORD PTR [rax+0x128]
  41cc9c:	test   eax,eax
  41cc9e:	je     41ccb2 <flatcc_builder_custom_reset@@Base+0x20d>
  41cca0:	mov    rax,QWORD PTR [rbp-0x18]
  41cca4:	add    rax,0x130
  41ccaa:	mov    rdi,rax
  41ccad:	call   421d3d <flatcc_emitter_reset@@Base>
  41ccb2:	mov    eax,0x0
  41ccb7:	leave  
  41ccb8:	ret    

000000000041ccb9 <flatcc_builder_reset@@Base>:
  41ccb9:	endbr64 
  41ccbd:	push   rbp
  41ccbe:	mov    rbp,rsp
  41ccc1:	sub    rsp,0x10
  41ccc5:	mov    QWORD PTR [rbp-0x8],rdi
  41ccc9:	mov    rax,QWORD PTR [rbp-0x8]
  41cccd:	mov    edx,0x0
  41ccd2:	mov    esi,0x0
  41ccd7:	mov    rdi,rax
  41ccda:	call   41caa5 <flatcc_builder_custom_reset@@Base>
  41ccdf:	leave  
  41cce0:	ret    

000000000041cce1 <flatcc_builder_clear@@Base>:
  41cce1:	endbr64 
  41cce5:	push   rbp
  41cce6:	mov    rbp,rsp
  41cce9:	sub    rsp,0x20
  41cced:	mov    QWORD PTR [rbp-0x18],rdi
  41ccf1:	mov    DWORD PTR [rbp-0xc],0x0
  41ccf8:	jmp    41cd3b <flatcc_builder_clear@@Base+0x5a>
  41ccfa:	mov    rax,QWORD PTR [rbp-0x18]
  41ccfe:	lea    rdx,[rax+0x58]
  41cd02:	mov    eax,DWORD PTR [rbp-0xc]
  41cd05:	cdqe   
  41cd07:	shl    rax,0x4
  41cd0b:	add    rax,rdx
  41cd0e:	mov    QWORD PTR [rbp-0x8],rax
  41cd12:	mov    rax,QWORD PTR [rbp-0x18]
  41cd16:	mov    rax,QWORD PTR [rax+0x50]
  41cd1a:	mov    rdx,QWORD PTR [rbp-0x18]
  41cd1e:	mov    rdi,QWORD PTR [rdx+0x40]
  41cd22:	mov    edx,DWORD PTR [rbp-0xc]
  41cd25:	mov    rsi,QWORD PTR [rbp-0x8]
  41cd29:	mov    r8d,edx
  41cd2c:	mov    ecx,0x0
  41cd31:	mov    edx,0x0
  41cd36:	call   rax
  41cd38:	inc    DWORD PTR [rbp-0xc]
  41cd3b:	cmp    DWORD PTR [rbp-0xc],0x7
  41cd3f:	jle    41ccfa <flatcc_builder_clear@@Base+0x19>
  41cd41:	mov    rax,QWORD PTR [rbp-0x18]
  41cd45:	mov    eax,DWORD PTR [rax+0x128]
  41cd4b:	test   eax,eax
  41cd4d:	je     41cd61 <flatcc_builder_clear@@Base+0x80>
  41cd4f:	mov    rax,QWORD PTR [rbp-0x18]
  41cd53:	add    rax,0x130
  41cd59:	mov    rdi,rax
  41cd5c:	call   421ecf <flatcc_emitter_clear@@Base>
  41cd61:	mov    rax,QWORD PTR [rbp-0x18]
  41cd65:	mov    edx,0x188
  41cd6a:	mov    esi,0x0
  41cd6f:	mov    rdi,rax
  41cd72:	call   4061c0 <memset@plt>
  41cd77:	nop
  41cd78:	leave  
  41cd79:	ret    
  41cd7a:	push   rbp
  41cd7b:	mov    rbp,rsp
  41cd7e:	mov    QWORD PTR [rbp-0x8],rdi
  41cd82:	mov    eax,esi
  41cd84:	mov    WORD PTR [rbp-0xc],ax
  41cd88:	mov    rax,QWORD PTR [rbp-0x8]
  41cd8c:	movzx  eax,WORD PTR [rax+0xe8]
  41cd93:	cmp    WORD PTR [rbp-0xc],ax
  41cd97:	jbe    41cda8 <flatcc_builder_clear@@Base+0xc7>
  41cd99:	mov    rdx,QWORD PTR [rbp-0x8]
  41cd9d:	movzx  eax,WORD PTR [rbp-0xc]
  41cda1:	mov    WORD PTR [rdx+0xe8],ax
  41cda8:	nop
  41cda9:	pop    rbp
  41cdaa:	ret    
  41cdab:	push   rbp
  41cdac:	mov    rbp,rsp
  41cdaf:	mov    QWORD PTR [rbp-0x8],rdi
  41cdb3:	mov    eax,esi
  41cdb5:	mov    WORD PTR [rbp-0xc],ax
  41cdb9:	mov    rax,QWORD PTR [rbp-0x8]
  41cdbd:	movzx  eax,WORD PTR [rax]
  41cdc0:	cmp    WORD PTR [rbp-0xc],ax
  41cdc4:	jbe    41cdd1 <flatcc_builder_clear@@Base+0xf0>
  41cdc6:	mov    rdx,QWORD PTR [rbp-0x8]
  41cdca:	movzx  eax,WORD PTR [rbp-0xc]
  41cdce:	mov    WORD PTR [rdx],ax
  41cdd1:	nop
  41cdd2:	pop    rbp
  41cdd3:	ret    

000000000041cdd4 <flatcc_builder_enter_user_frame_ptr@@Base>:
  41cdd4:	endbr64 
  41cdd8:	push   rbp
  41cdd9:	mov    rbp,rsp
  41cddc:	sub    rsp,0x20
  41cde0:	mov    QWORD PTR [rbp-0x18],rdi
  41cde4:	mov    QWORD PTR [rbp-0x20],rsi
  41cde8:	mov    rax,QWORD PTR [rbp-0x20]
  41cdec:	add    rax,0x7
  41cdf0:	and    rax,0xfffffffffffffff8
  41cdf4:	add    rax,0x8
  41cdf8:	mov    QWORD PTR [rbp-0x20],rax
  41cdfc:	mov    rax,QWORD PTR [rbp-0x18]
  41ce00:	mov    rdx,QWORD PTR [rax+0x180]
  41ce07:	mov    rcx,QWORD PTR [rbp-0x20]
  41ce0b:	mov    rax,QWORD PTR [rbp-0x18]
  41ce0f:	mov    r8d,0x0
  41ce15:	mov    esi,0x7
  41ce1a:	mov    rdi,rax
  41ce1d:	call   41c624 <flatcc_builder_default_alloc@@Base+0x516>
  41ce22:	mov    QWORD PTR [rbp-0x8],rax
  41ce26:	cmp    QWORD PTR [rbp-0x8],0x0
  41ce2b:	jne    41ce34 <flatcc_builder_enter_user_frame_ptr@@Base+0x60>
  41ce2d:	mov    eax,0x0
  41ce32:	jmp    41ce9e <flatcc_builder_enter_user_frame_ptr@@Base+0xca>
  41ce34:	mov    rdx,QWORD PTR [rbp-0x20]
  41ce38:	mov    rax,QWORD PTR [rbp-0x8]
  41ce3c:	mov    esi,0x0
  41ce41:	mov    rdi,rax
  41ce44:	call   4061c0 <memset@plt>
  41ce49:	mov    rax,QWORD PTR [rbp-0x8]
  41ce4d:	lea    rdx,[rax+0x8]
  41ce51:	mov    QWORD PTR [rbp-0x8],rdx
  41ce55:	mov    rdx,QWORD PTR [rbp-0x18]
  41ce59:	mov    rdx,QWORD PTR [rdx+0x178]
  41ce60:	mov    QWORD PTR [rax],rdx
  41ce63:	mov    rax,QWORD PTR [rbp-0x18]
  41ce67:	mov    rax,QWORD PTR [rax+0x180]
  41ce6e:	lea    rdx,[rax+0x8]
  41ce72:	mov    rax,QWORD PTR [rbp-0x18]
  41ce76:	mov    QWORD PTR [rax+0x178],rdx
  41ce7d:	mov    rax,QWORD PTR [rbp-0x18]
  41ce81:	mov    rdx,QWORD PTR [rax+0x180]
  41ce88:	mov    rax,QWORD PTR [rbp-0x20]
  41ce8c:	add    rdx,rax
  41ce8f:	mov    rax,QWORD PTR [rbp-0x18]
  41ce93:	mov    QWORD PTR [rax+0x180],rdx
  41ce9a:	mov    rax,QWORD PTR [rbp-0x8]
  41ce9e:	leave  
  41ce9f:	ret    

000000000041cea0 <flatcc_builder_enter_user_frame@@Base>:
  41cea0:	endbr64 
  41cea4:	push   rbp
  41cea5:	mov    rbp,rsp
  41cea8:	sub    rsp,0x20
  41ceac:	mov    QWORD PTR [rbp-0x18],rdi
  41ceb0:	mov    QWORD PTR [rbp-0x20],rsi
  41ceb4:	mov    rax,QWORD PTR [rbp-0x20]
  41ceb8:	add    rax,0x7
  41cebc:	and    rax,0xfffffffffffffff8
  41cec0:	add    rax,0x8
  41cec4:	mov    QWORD PTR [rbp-0x20],rax
  41cec8:	mov    rax,QWORD PTR [rbp-0x18]
  41cecc:	mov    rdx,QWORD PTR [rax+0x180]
  41ced3:	mov    rcx,QWORD PTR [rbp-0x20]
  41ced7:	mov    rax,QWORD PTR [rbp-0x18]
  41cedb:	mov    r8d,0x0
  41cee1:	mov    esi,0x7
  41cee6:	mov    rdi,rax
  41cee9:	call   41c624 <flatcc_builder_default_alloc@@Base+0x516>
  41ceee:	mov    QWORD PTR [rbp-0x8],rax
  41cef2:	cmp    QWORD PTR [rbp-0x8],0x0
  41cef7:	jne    41cf00 <flatcc_builder_enter_user_frame@@Base+0x60>
  41cef9:	mov    eax,0x0
  41cefe:	jmp    41cf71 <flatcc_builder_enter_user_frame@@Base+0xd1>
  41cf00:	mov    rdx,QWORD PTR [rbp-0x20]
  41cf04:	mov    rax,QWORD PTR [rbp-0x8]
  41cf08:	mov    esi,0x0
  41cf0d:	mov    rdi,rax
  41cf10:	call   4061c0 <memset@plt>
  41cf15:	mov    rax,QWORD PTR [rbp-0x8]
  41cf19:	lea    rdx,[rax+0x8]
  41cf1d:	mov    QWORD PTR [rbp-0x8],rdx
  41cf21:	mov    rdx,QWORD PTR [rbp-0x18]
  41cf25:	mov    rdx,QWORD PTR [rdx+0x178]
  41cf2c:	mov    QWORD PTR [rax],rdx
  41cf2f:	mov    rax,QWORD PTR [rbp-0x18]
  41cf33:	mov    rax,QWORD PTR [rax+0x180]
  41cf3a:	lea    rdx,[rax+0x8]
  41cf3e:	mov    rax,QWORD PTR [rbp-0x18]
  41cf42:	mov    QWORD PTR [rax+0x178],rdx
  41cf49:	mov    rax,QWORD PTR [rbp-0x18]
  41cf4d:	mov    rdx,QWORD PTR [rax+0x180]
  41cf54:	mov    rax,QWORD PTR [rbp-0x20]
  41cf58:	add    rdx,rax
  41cf5b:	mov    rax,QWORD PTR [rbp-0x18]
  41cf5f:	mov    QWORD PTR [rax+0x180],rdx
  41cf66:	mov    rax,QWORD PTR [rbp-0x18]
  41cf6a:	mov    rax,QWORD PTR [rax+0x178]
  41cf71:	leave  
  41cf72:	ret    

000000000041cf73 <flatcc_builder_exit_user_frame@@Base>:
  41cf73:	endbr64 
  41cf77:	push   rbp
  41cf78:	mov    rbp,rsp
  41cf7b:	sub    rsp,0x20
  41cf7f:	mov    QWORD PTR [rbp-0x18],rdi
  41cf83:	mov    rax,QWORD PTR [rbp-0x18]
  41cf87:	mov    rax,QWORD PTR [rax+0x178]
  41cf8e:	test   rax,rax
  41cf91:	jne    41cfb2 <flatcc_builder_exit_user_frame@@Base+0x3f>
  41cf93:	lea    rcx,[rip+0x1e676]        # 43b610 <flatcc_builder_padding_base@@Base+0x690>
  41cf9a:	mov    edx,0x21e
  41cf9f:	lea    rsi,[rip+0x1e1da]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41cfa6:	lea    rdi,[rip+0x1e256]        # 43b203 <flatcc_builder_padding_base@@Base+0x283>
  41cfad:	call   4061b0 <__assert_fail@plt>
  41cfb2:	mov    rax,QWORD PTR [rbp-0x18]
  41cfb6:	mov    rdx,QWORD PTR [rax+0xc8]
  41cfbd:	mov    rax,QWORD PTR [rbp-0x18]
  41cfc1:	mov    rax,QWORD PTR [rax+0x178]
  41cfc8:	mov    eax,eax
  41cfca:	add    rax,rdx
  41cfcd:	mov    QWORD PTR [rbp-0x8],rax
  41cfd1:	mov    rax,QWORD PTR [rbp-0x18]
  41cfd5:	mov    rax,QWORD PTR [rax+0x178]
  41cfdc:	lea    rdx,[rax-0x8]
  41cfe0:	mov    rax,QWORD PTR [rbp-0x18]
  41cfe4:	mov    QWORD PTR [rax+0x180],rdx
  41cfeb:	mov    rax,QWORD PTR [rbp-0x8]
  41cfef:	mov    rdx,QWORD PTR [rax-0x8]
  41cff3:	mov    rax,QWORD PTR [rbp-0x18]
  41cff7:	mov    QWORD PTR [rax+0x178],rdx
  41cffe:	mov    rax,QWORD PTR [rbp-0x18]
  41d002:	mov    rax,QWORD PTR [rax+0x178]
  41d009:	leave  
  41d00a:	ret    

000000000041d00b <flatcc_builder_exit_user_frame_at@@Base>:
  41d00b:	endbr64 
  41d00f:	push   rbp
  41d010:	mov    rbp,rsp
  41d013:	sub    rsp,0x10
  41d017:	mov    QWORD PTR [rbp-0x8],rdi
  41d01b:	mov    QWORD PTR [rbp-0x10],rsi
  41d01f:	mov    rax,QWORD PTR [rbp-0x8]
  41d023:	mov    rax,QWORD PTR [rax+0x178]
  41d02a:	cmp    QWORD PTR [rbp-0x10],rax
  41d02e:	jbe    41d04f <flatcc_builder_exit_user_frame_at@@Base+0x44>
  41d030:	lea    rcx,[rip+0x1e609]        # 43b640 <flatcc_builder_padding_base@@Base+0x6c0>
  41d037:	mov    edx,0x227
  41d03c:	lea    rsi,[rip+0x1e13d]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41d043:	lea    rdi,[rip+0x1e1d6]        # 43b220 <flatcc_builder_padding_base@@Base+0x2a0>
  41d04a:	call   4061b0 <__assert_fail@plt>
  41d04f:	mov    rax,QWORD PTR [rbp-0x8]
  41d053:	mov    rdx,QWORD PTR [rbp-0x10]
  41d057:	mov    QWORD PTR [rax+0x178],rdx
  41d05e:	mov    rax,QWORD PTR [rbp-0x8]
  41d062:	mov    rdi,rax
  41d065:	call   41cf73 <flatcc_builder_exit_user_frame@@Base>
  41d06a:	leave  
  41d06b:	ret    

000000000041d06c <flatcc_builder_get_current_user_frame@@Base>:
  41d06c:	endbr64 
  41d070:	push   rbp
  41d071:	mov    rbp,rsp
  41d074:	mov    QWORD PTR [rbp-0x8],rdi
  41d078:	mov    rax,QWORD PTR [rbp-0x8]
  41d07c:	mov    rax,QWORD PTR [rax+0x178]
  41d083:	pop    rbp
  41d084:	ret    

000000000041d085 <flatcc_builder_get_user_frame_ptr@@Base>:
  41d085:	endbr64 
  41d089:	push   rbp
  41d08a:	mov    rbp,rsp
  41d08d:	mov    QWORD PTR [rbp-0x8],rdi
  41d091:	mov    QWORD PTR [rbp-0x10],rsi
  41d095:	mov    rax,QWORD PTR [rbp-0x8]
  41d099:	mov    rax,QWORD PTR [rax+0xc8]
  41d0a0:	mov    rdx,QWORD PTR [rbp-0x10]
  41d0a4:	mov    edx,edx
  41d0a6:	add    rax,rdx
  41d0a9:	pop    rbp
  41d0aa:	ret    
  41d0ab:	endbr64 
  41d0af:	push   rbp
  41d0b0:	mov    rbp,rsp
  41d0b3:	sub    rsp,0x10
  41d0b7:	mov    QWORD PTR [rbp-0x8],rdi
  41d0bb:	mov    eax,esi
  41d0bd:	mov    WORD PTR [rbp-0xc],ax
  41d0c1:	mov    rax,QWORD PTR [rbp-0x8]
  41d0c5:	mov    eax,DWORD PTR [rax+0x104]
  41d0cb:	lea    edx,[rax+0x1]
  41d0ce:	mov    rax,QWORD PTR [rbp-0x8]
  41d0d2:	mov    DWORD PTR [rax+0x104],edx
  41d0d8:	mov    rax,QWORD PTR [rbp-0x8]
  41d0dc:	mov    edx,DWORD PTR [rax+0x104]
  41d0e2:	mov    rax,QWORD PTR [rbp-0x8]
  41d0e6:	mov    eax,DWORD PTR [rax+0x108]
  41d0ec:	cmp    edx,eax
  41d0ee:	jle    41d1e9 <flatcc_builder_get_user_frame_ptr@@Base+0x164>
  41d0f4:	mov    rax,QWORD PTR [rbp-0x8]
  41d0f8:	mov    eax,DWORD PTR [rax+0x120]
  41d0fe:	test   eax,eax
  41d100:	jle    41d124 <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  41d102:	mov    rax,QWORD PTR [rbp-0x8]
  41d106:	mov    edx,DWORD PTR [rax+0x104]
  41d10c:	mov    rax,QWORD PTR [rbp-0x8]
  41d110:	mov    eax,DWORD PTR [rax+0x120]
  41d116:	cmp    edx,eax
  41d118:	jle    41d124 <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  41d11a:	mov    eax,0xffffffff
  41d11f:	jmp    41d284 <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  41d124:	mov    rax,QWORD PTR [rbp-0x8]
  41d128:	mov    eax,DWORD PTR [rax+0x104]
  41d12e:	dec    eax
  41d130:	movsxd rdx,eax
  41d133:	mov    rax,rdx
  41d136:	shl    rax,0x3
  41d13a:	add    rax,rdx
  41d13d:	shl    rax,0x2
  41d141:	mov    rdx,rax
  41d144:	mov    rax,QWORD PTR [rbp-0x8]
  41d148:	mov    r8d,0x0
  41d14e:	mov    ecx,0x24
  41d153:	mov    esi,0x4
  41d158:	mov    rdi,rax
  41d15b:	call   41c624 <flatcc_builder_default_alloc@@Base+0x516>
  41d160:	mov    rdx,rax
  41d163:	mov    rax,QWORD PTR [rbp-0x8]
  41d167:	mov    QWORD PTR [rax+0x30],rdx
  41d16b:	mov    rax,QWORD PTR [rbp-0x8]
  41d16f:	mov    rax,QWORD PTR [rax+0x30]
  41d173:	test   rax,rax
  41d176:	jne    41d182 <flatcc_builder_get_user_frame_ptr@@Base+0xfd>
  41d178:	mov    eax,0xffffffff
  41d17d:	jmp    41d284 <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  41d182:	mov    rax,QWORD PTR [rbp-0x8]
  41d186:	mov    rax,QWORD PTR [rax+0xa0]
  41d18d:	movabs rdx,0xe38e38e38e38e38f
  41d197:	mul    rdx
  41d19a:	mov    rax,rdx
  41d19d:	shr    rax,0x5
  41d1a1:	mov    edx,eax
  41d1a3:	mov    rax,QWORD PTR [rbp-0x8]
  41d1a7:	mov    DWORD PTR [rax+0x108],edx
  41d1ad:	mov    rax,QWORD PTR [rbp-0x8]
  41d1b1:	mov    eax,DWORD PTR [rax+0x120]
  41d1b7:	test   eax,eax
  41d1b9:	jle    41d1fd <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  41d1bb:	mov    rax,QWORD PTR [rbp-0x8]
  41d1bf:	mov    edx,DWORD PTR [rax+0x120]
  41d1c5:	mov    rax,QWORD PTR [rbp-0x8]
  41d1c9:	mov    eax,DWORD PTR [rax+0x108]
  41d1cf:	cmp    edx,eax
  41d1d1:	jge    41d1fd <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  41d1d3:	mov    rax,QWORD PTR [rbp-0x8]
  41d1d7:	mov    edx,DWORD PTR [rax+0x120]
  41d1dd:	mov    rax,QWORD PTR [rbp-0x8]
  41d1e1:	mov    DWORD PTR [rax+0x108],edx
  41d1e7:	jmp    41d1fd <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  41d1e9:	mov    rax,QWORD PTR [rbp-0x8]
  41d1ed:	mov    rax,QWORD PTR [rax+0x30]
  41d1f1:	lea    rdx,[rax+0x24]
  41d1f5:	mov    rax,QWORD PTR [rbp-0x8]
  41d1f9:	mov    QWORD PTR [rax+0x30],rdx
  41d1fd:	mov    rax,QWORD PTR [rbp-0x8]
  41d201:	mov    rax,QWORD PTR [rax+0x30]
  41d205:	mov    rdx,QWORD PTR [rbp-0x8]
  41d209:	mov    edx,DWORD PTR [rdx+0x20]
  41d20c:	mov    DWORD PTR [rax+0x8],edx
  41d20f:	mov    rax,QWORD PTR [rbp-0x8]
  41d213:	mov    rdx,QWORD PTR [rax+0x30]
  41d217:	mov    rax,QWORD PTR [rbp-0x8]
  41d21b:	movzx  eax,WORD PTR [rax+0xea]
  41d222:	mov    WORD PTR [rdx+0xc],ax
  41d226:	mov    rdx,QWORD PTR [rbp-0x8]
  41d22a:	movzx  eax,WORD PTR [rbp-0xc]
  41d22e:	mov    WORD PTR [rdx+0xea],ax
  41d235:	mov    rax,QWORD PTR [rbp-0x8]
  41d239:	mov    rax,QWORD PTR [rax+0x30]
  41d23d:	mov    rdx,QWORD PTR [rbp-0x8]
  41d241:	mov    edx,DWORD PTR [rdx+0x28]
  41d244:	mov    DWORD PTR [rax],edx
  41d246:	mov    rax,QWORD PTR [rbp-0x8]
  41d24a:	mov    rax,QWORD PTR [rax+0x30]
  41d24e:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41d255:	mov    rax,QWORD PTR [rbp-0x8]
  41d259:	mov    edx,DWORD PTR [rax+0x28]
  41d25c:	mov    rax,QWORD PTR [rbp-0x8]
  41d260:	mov    eax,DWORD PTR [rax+0x20]
  41d263:	add    eax,edx
  41d265:	add    eax,0x7
  41d268:	and    eax,0xfffffff8
  41d26b:	mov    edx,eax
  41d26d:	mov    rax,QWORD PTR [rbp-0x8]
  41d271:	mov    DWORD PTR [rax+0x28],edx
  41d274:	mov    rax,QWORD PTR [rbp-0x8]
  41d278:	mov    DWORD PTR [rax+0x20],0x0
  41d27f:	mov    eax,0x0
  41d284:	leave  
  41d285:	ret    
  41d286:	push   rbp
  41d287:	mov    rbp,rsp
  41d28a:	sub    rsp,0x10
  41d28e:	mov    QWORD PTR [rbp-0x8],rdi
  41d292:	mov    rax,QWORD PTR [rbp-0x8]
  41d296:	mov    eax,DWORD PTR [rax+0x20]
  41d299:	mov    edx,eax
  41d29b:	mov    rax,QWORD PTR [rbp-0x8]
  41d29f:	mov    rax,QWORD PTR [rax+0x18]
  41d2a3:	mov    esi,0x0
  41d2a8:	mov    rdi,rax
  41d2ab:	call   4061c0 <memset@plt>
  41d2b0:	mov    rax,QWORD PTR [rbp-0x8]
  41d2b4:	mov    rax,QWORD PTR [rax+0x30]
  41d2b8:	mov    edx,DWORD PTR [rax+0x8]
  41d2bb:	mov    rax,QWORD PTR [rbp-0x8]
  41d2bf:	mov    DWORD PTR [rax+0x20],edx
  41d2c2:	mov    rax,QWORD PTR [rbp-0x8]
  41d2c6:	mov    rax,QWORD PTR [rax+0x30]
  41d2ca:	mov    edx,DWORD PTR [rax]
  41d2cc:	mov    rax,QWORD PTR [rbp-0x8]
  41d2d0:	mov    DWORD PTR [rax+0x28],edx
  41d2d3:	mov    rax,QWORD PTR [rbp-0x8]
  41d2d7:	mov    rax,QWORD PTR [rax+0x30]
  41d2db:	mov    edx,DWORD PTR [rax+0x4]
  41d2de:	mov    rax,QWORD PTR [rbp-0x8]
  41d2e2:	mov    esi,edx
  41d2e4:	mov    rdi,rax
  41d2e7:	call   41c281 <flatcc_builder_default_alloc@@Base+0x173>
  41d2ec:	mov    rax,QWORD PTR [rbp-0x8]
  41d2f0:	movzx  eax,WORD PTR [rax+0xea]
  41d2f7:	movzx  edx,ax
  41d2fa:	mov    rax,QWORD PTR [rbp-0x8]
  41d2fe:	mov    esi,edx
  41d300:	mov    rdi,rax
  41d303:	call   41cd7a <flatcc_builder_clear@@Base+0x99>
  41d308:	mov    rax,QWORD PTR [rbp-0x8]
  41d30c:	mov    rax,QWORD PTR [rax+0x30]
  41d310:	movzx  eax,WORD PTR [rax+0xc]
  41d314:	mov    rdx,QWORD PTR [rbp-0x8]
  41d318:	mov    WORD PTR [rdx+0xea],ax
  41d31f:	mov    rax,QWORD PTR [rbp-0x8]
  41d323:	mov    rax,QWORD PTR [rax+0x30]
  41d327:	lea    rdx,[rax-0x24]
  41d32b:	mov    rax,QWORD PTR [rbp-0x8]
  41d32f:	mov    QWORD PTR [rax+0x30],rdx
  41d333:	mov    rax,QWORD PTR [rbp-0x8]
  41d337:	mov    eax,DWORD PTR [rax+0x104]
  41d33d:	lea    edx,[rax-0x1]
  41d340:	mov    rax,QWORD PTR [rbp-0x8]
  41d344:	mov    DWORD PTR [rax+0x104],edx
  41d34a:	nop
  41d34b:	leave  
  41d34c:	ret    
  41d34d:	push   rbp
  41d34e:	mov    rbp,rsp
  41d351:	mov    QWORD PTR [rbp-0x8],rdi
  41d355:	mov    DWORD PTR [rbp-0xc],esi
  41d358:	mov    eax,edx
  41d35a:	mov    WORD PTR [rbp-0x10],ax
  41d35e:	mov    rax,QWORD PTR [rbp-0x8]
  41d362:	mov    eax,DWORD PTR [rax+0xf0]
  41d368:	sub    eax,DWORD PTR [rbp-0xc]
  41d36b:	movzx  edx,WORD PTR [rbp-0x10]
  41d36f:	dec    edx
  41d371:	and    eax,edx
  41d373:	pop    rbp
  41d374:	ret    
  41d375:	push   rbp
  41d376:	mov    rbp,rsp
  41d379:	mov    QWORD PTR [rbp-0x8],rdi
  41d37d:	mov    eax,esi
  41d37f:	mov    WORD PTR [rbp-0xc],ax
  41d383:	mov    rax,QWORD PTR [rbp-0x8]
  41d387:	mov    eax,DWORD PTR [rax+0xf4]
  41d38d:	movzx  edx,WORD PTR [rbp-0xc]
  41d391:	dec    edx
  41d393:	and    eax,edx
  41d395:	pop    rbp
  41d396:	ret    
  41d397:	push   rbp
  41d398:	mov    rbp,rsp
  41d39b:	sub    rsp,0x20
  41d39f:	mov    QWORD PTR [rbp-0x18],rdi
  41d3a3:	mov    QWORD PTR [rbp-0x20],rsi
  41d3a7:	mov    rax,QWORD PTR [rbp-0x18]
  41d3ab:	mov    edx,DWORD PTR [rax+0xf0]
  41d3b1:	mov    rax,QWORD PTR [rbp-0x20]
  41d3b5:	mov    rax,QWORD PTR [rax]
  41d3b8:	sub    edx,eax
  41d3ba:	mov    eax,edx
  41d3bc:	mov    DWORD PTR [rbp-0x4],eax
  41d3bf:	mov    rax,QWORD PTR [rbp-0x20]
  41d3c3:	mov    rax,QWORD PTR [rax]
  41d3c6:	cmp    rax,0x10
  41d3ca:	jbe    41d3e1 <flatcc_builder_get_user_frame_ptr@@Base+0x35c>
  41d3cc:	mov    rax,QWORD PTR [rbp-0x20]
  41d3d0:	mov    rax,QWORD PTR [rax]
  41d3d3:	lea    rdx,[rax-0x10]
  41d3d7:	mov    eax,0xffffffff
  41d3dc:	cmp    rdx,rax
  41d3df:	ja     41d3f0 <flatcc_builder_get_user_frame_ptr@@Base+0x36b>
  41d3e1:	mov    rax,QWORD PTR [rbp-0x18]
  41d3e5:	mov    eax,DWORD PTR [rax+0xf0]
  41d3eb:	cmp    DWORD PTR [rbp-0x4],eax
  41d3ee:	jl     41d40f <flatcc_builder_get_user_frame_ptr@@Base+0x38a>
  41d3f0:	lea    rcx,[rip+0x1e291]        # 43b688 <flatcc_builder_padding_base@@Base+0x708>
  41d3f7:	mov    edx,0x287
  41d3fc:	lea    rsi,[rip+0x1dd7d]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41d403:	lea    rdi,[rip+0x1ddd6]        # 43b1e0 <flatcc_builder_padding_base@@Base+0x260>
  41d40a:	call   4061b0 <__assert_fail@plt>
  41d40f:	mov    rax,QWORD PTR [rbp-0x18]
  41d413:	mov    rax,QWORD PTR [rax+0x48]
  41d417:	mov    rdx,QWORD PTR [rbp-0x20]
  41d41b:	mov    r8,QWORD PTR [rdx]
  41d41e:	mov    rdx,QWORD PTR [rbp-0x20]
  41d422:	mov    edx,DWORD PTR [rdx+0x8]
  41d425:	mov    rcx,QWORD PTR [rbp-0x20]
  41d429:	lea    rsi,[rcx+0x10]
  41d42d:	mov    rcx,QWORD PTR [rbp-0x18]
  41d431:	mov    rdi,QWORD PTR [rcx+0x38]
  41d435:	mov    ecx,DWORD PTR [rbp-0x4]
  41d438:	call   rax
  41d43a:	test   eax,eax
  41d43c:	je     41d45d <flatcc_builder_get_user_frame_ptr@@Base+0x3d8>
  41d43e:	lea    rcx,[rip+0x1e243]        # 43b688 <flatcc_builder_padding_base@@Base+0x708>
  41d445:	mov    edx,0x28b
  41d44a:	lea    rsi,[rip+0x1dd2f]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41d451:	lea    rdi,[rip+0x1dd88]        # 43b1e0 <flatcc_builder_padding_base@@Base+0x260>
  41d458:	call   4061b0 <__assert_fail@plt>
  41d45d:	mov    rax,QWORD PTR [rbp-0x18]
  41d461:	mov    edx,DWORD PTR [rbp-0x4]
  41d464:	mov    DWORD PTR [rax+0xf0],edx
  41d46a:	mov    rax,QWORD PTR [rbp-0x18]
  41d46e:	mov    eax,DWORD PTR [rax+0xf0]
  41d474:	leave  
  41d475:	ret    
  41d476:	push   rbp
  41d477:	mov    rbp,rsp
  41d47a:	sub    rsp,0x20
  41d47e:	mov    QWORD PTR [rbp-0x18],rdi
  41d482:	mov    QWORD PTR [rbp-0x20],rsi
  41d486:	mov    rax,QWORD PTR [rbp-0x18]
  41d48a:	mov    eax,DWORD PTR [rax+0xf4]
  41d490:	mov    DWORD PTR [rbp-0x4],eax
  41d493:	mov    rax,QWORD PTR [rbp-0x20]
  41d497:	mov    rax,QWORD PTR [rax]
  41d49a:	mov    edx,eax
  41d49c:	mov    eax,DWORD PTR [rbp-0x4]
  41d49f:	add    edx,eax
  41d4a1:	mov    rax,QWORD PTR [rbp-0x18]
  41d4a5:	mov    DWORD PTR [rax+0xf4],edx
  41d4ab:	mov    rax,QWORD PTR [rbp-0x18]
  41d4af:	mov    eax,DWORD PTR [rax+0xf4]
  41d4b5:	cmp    DWORD PTR [rbp-0x4],eax
  41d4b8:	jle    41d4d9 <flatcc_builder_get_user_frame_ptr@@Base+0x454>
  41d4ba:	lea    rcx,[rip+0x1e1b7]        # 43b678 <flatcc_builder_padding_base@@Base+0x6f8>
  41d4c1:	mov    edx,0x2a1
  41d4c6:	lea    rsi,[rip+0x1dcb3]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41d4cd:	lea    rdi,[rip+0x1dd0c]        # 43b1e0 <flatcc_builder_padding_base@@Base+0x260>
  41d4d4:	call   4061b0 <__assert_fail@plt>
  41d4d9:	mov    rax,QWORD PTR [rbp-0x18]
  41d4dd:	mov    rax,QWORD PTR [rax+0x48]
  41d4e1:	mov    rdx,QWORD PTR [rbp-0x20]
  41d4e5:	mov    r8,QWORD PTR [rdx]
  41d4e8:	mov    rdx,QWORD PTR [rbp-0x20]
  41d4ec:	mov    edx,DWORD PTR [rdx+0x8]
  41d4ef:	mov    rcx,QWORD PTR [rbp-0x20]
  41d4f3:	lea    rsi,[rcx+0x10]
  41d4f7:	mov    rcx,QWORD PTR [rbp-0x18]
  41d4fb:	mov    rdi,QWORD PTR [rcx+0x38]
  41d4ff:	mov    ecx,DWORD PTR [rbp-0x4]
  41d502:	call   rax
  41d504:	test   eax,eax
  41d506:	je     41d527 <flatcc_builder_get_user_frame_ptr@@Base+0x4a2>
  41d508:	lea    rcx,[rip+0x1e169]        # 43b678 <flatcc_builder_padding_base@@Base+0x6f8>
  41d50f:	mov    edx,0x2a5
  41d514:	lea    rsi,[rip+0x1dc65]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41d51b:	lea    rdi,[rip+0x1dcbe]        # 43b1e0 <flatcc_builder_padding_base@@Base+0x260>
  41d522:	call   4061b0 <__assert_fail@plt>
  41d527:	mov    eax,DWORD PTR [rbp-0x4]
  41d52a:	inc    eax
  41d52c:	leave  
  41d52d:	ret    
  41d52e:	endbr64 
  41d532:	push   rbp
  41d533:	mov    rbp,rsp
  41d536:	sub    rsp,0xd0
  41d53d:	mov    QWORD PTR [rbp-0xb8],rdi
  41d544:	mov    QWORD PTR [rbp-0xc0],rsi
  41d54b:	mov    eax,edx
  41d54d:	mov    DWORD PTR [rbp-0xc8],ecx
  41d553:	mov    WORD PTR [rbp-0xc4],ax
  41d55a:	mov    rax,QWORD PTR fs:0x28
  41d563:	mov    QWORD PTR [rbp-0x8],rax
  41d567:	xor    eax,eax
  41d569:	cmp    WORD PTR [rbp-0xc4],0x0
  41d571:	jne    41d59d <flatcc_builder_get_user_frame_ptr@@Base+0x518>
  41d573:	mov    rax,QWORD PTR [rbp-0xb8]
  41d57a:	movzx  eax,WORD PTR [rax+0xec]
  41d581:	test   ax,ax
  41d584:	je     41d596 <flatcc_builder_get_user_frame_ptr@@Base+0x511>
  41d586:	mov    rax,QWORD PTR [rbp-0xb8]
  41d58d:	movzx  eax,WORD PTR [rax+0xec]
  41d594:	jmp    41d5a4 <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  41d596:	mov    eax,0x1
  41d59b:	jmp    41d5a4 <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  41d59d:	movzx  eax,WORD PTR [rbp-0xc4]
  41d5a4:	mov    WORD PTR [rbp-0xc4],ax
  41d5ab:	mov    rax,QWORD PTR [rbp-0xc0]
  41d5b2:	mov    esi,0x4
  41d5b7:	mov    rdi,rax
  41d5ba:	call   41cdab <flatcc_builder_clear@@Base+0xca>
  41d5bf:	movzx  edx,WORD PTR [rbp-0xc4]
  41d5c6:	mov    rax,QWORD PTR [rbp-0xc0]
  41d5cd:	mov    esi,edx
  41d5cf:	mov    rdi,rax
  41d5d2:	call   41cdab <flatcc_builder_clear@@Base+0xca>
  41d5d7:	cmp    DWORD PTR [rbp-0xc8],0x0
  41d5de:	jne    41d6d3 <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  41d5e4:	movzx  edx,WORD PTR [rbp-0xc4]
  41d5eb:	mov    rax,QWORD PTR [rbp-0xb8]
  41d5f2:	mov    esi,edx
  41d5f4:	mov    rdi,rax
  41d5f7:	call   41d375 <flatcc_builder_get_user_frame_ptr@@Base+0x2f0>
  41d5fc:	mov    eax,eax
  41d5fe:	mov    QWORD PTR [rbp-0xa8],rax
  41d605:	cmp    QWORD PTR [rbp-0xa8],0x0
  41d60d:	je     41d6d3 <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  41d613:	mov    QWORD PTR [rbp-0xa0],0x0
  41d61e:	mov    DWORD PTR [rbp-0x98],0x0
  41d628:	cmp    QWORD PTR [rbp-0xa8],0x0
  41d630:	je     41d697 <flatcc_builder_get_user_frame_ptr@@Base+0x612>
  41d632:	mov    rdx,QWORD PTR [rbp-0xa0]
  41d639:	mov    rax,QWORD PTR [rbp-0xa8]
  41d640:	add    rax,rdx
  41d643:	mov    QWORD PTR [rbp-0xa0],rax
  41d64a:	mov    eax,DWORD PTR [rbp-0x98]
  41d650:	cdqe   
  41d652:	shl    rax,0x4
  41d656:	add    rax,rbp
  41d659:	sub    rax,0x90
  41d65f:	mov    rdx,0x43af80
  41d666:	mov    QWORD PTR [rax],rdx
  41d669:	mov    eax,DWORD PTR [rbp-0x98]
  41d66f:	cdqe   
  41d671:	shl    rax,0x4
  41d675:	add    rax,rbp
  41d678:	lea    rdx,[rax-0x88]
  41d67f:	mov    rax,QWORD PTR [rbp-0xa8]
  41d686:	mov    QWORD PTR [rdx],rax
  41d689:	mov    eax,DWORD PTR [rbp-0x98]
  41d68f:	inc    eax
  41d691:	mov    DWORD PTR [rbp-0x98],eax
  41d697:	lea    rdx,[rbp-0xa0]
  41d69e:	mov    rax,QWORD PTR [rbp-0xb8]
  41d6a5:	mov    rsi,rdx
  41d6a8:	mov    rdi,rax
  41d6ab:	call   41d476 <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  41d6b0:	test   eax,eax
  41d6b2:	jne    41d6d3 <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  41d6b4:	lea    rcx,[rip+0x1dfad]        # 43b668 <flatcc_builder_padding_base@@Base+0x6e8>
  41d6bb:	mov    edx,0x2be
  41d6c0:	lea    rsi,[rip+0x1dab9]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41d6c7:	lea    rdi,[rip+0x1db12]        # 43b1e0 <flatcc_builder_padding_base@@Base+0x260>
  41d6ce:	call   4061b0 <__assert_fail@plt>
  41d6d3:	mov    eax,0x0
  41d6d8:	mov    rcx,QWORD PTR [rbp-0x8]
  41d6dc:	xor    rcx,QWORD PTR fs:0x28
  41d6e5:	je     41d6ec <flatcc_builder_get_user_frame_ptr@@Base+0x667>
  41d6e7:	call   4061a0 <__stack_chk_fail@plt>
  41d6ec:	leave  
  41d6ed:	ret    

000000000041d6ee <flatcc_builder_embed_buffer@@Base>:
  41d6ee:	endbr64 
  41d6f2:	push   rbp
  41d6f3:	mov    rbp,rsp
  41d6f6:	sub    rsp,0xe0
  41d6fd:	mov    QWORD PTR [rbp-0xb8],rdi
  41d704:	mov    eax,esi
  41d706:	mov    QWORD PTR [rbp-0xc8],rdx
  41d70d:	mov    QWORD PTR [rbp-0xd0],rcx
  41d714:	mov    edx,r8d
  41d717:	mov    DWORD PTR [rbp-0xd4],r9d
  41d71e:	mov    WORD PTR [rbp-0xbc],ax
  41d725:	mov    eax,edx
  41d727:	mov    WORD PTR [rbp-0xc0],ax
  41d72e:	mov    rax,QWORD PTR fs:0x28
  41d737:	mov    QWORD PTR [rbp-0x8],rax
  41d73b:	xor    eax,eax
  41d73d:	mov    eax,DWORD PTR [rbp-0xd4]
  41d743:	and    eax,0x2
  41d746:	mov    DWORD PTR [rbp-0xa8],eax
  41d74c:	mov    rax,QWORD PTR [rbp-0xb8]
  41d753:	mov    eax,DWORD PTR [rax+0x100]
  41d759:	test   eax,eax
  41d75b:	setne  al
  41d75e:	movzx  ecx,al
  41d761:	movzx  edx,WORD PTR [rbp-0xbc]
  41d768:	lea    rsi,[rbp-0xc0]
  41d76f:	mov    rax,QWORD PTR [rbp-0xb8]
  41d776:	mov    rdi,rax
  41d779:	call   41d52e <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  41d77e:	test   eax,eax
  41d780:	je     41d78c <flatcc_builder_embed_buffer@@Base+0x9e>
  41d782:	mov    eax,0x0
  41d787:	jmp    41d963 <flatcc_builder_embed_buffer@@Base+0x275>
  41d78c:	movzx  eax,WORD PTR [rbp-0xc0]
  41d793:	movzx  edx,ax
  41d796:	mov    rax,QWORD PTR [rbp-0xd0]
  41d79d:	mov    ecx,eax
  41d79f:	cmp    DWORD PTR [rbp-0xa8],0x0
  41d7a6:	je     41d7af <flatcc_builder_embed_buffer@@Base+0xc1>
  41d7a8:	mov    eax,0x4
  41d7ad:	jmp    41d7b4 <flatcc_builder_embed_buffer@@Base+0xc6>
  41d7af:	mov    eax,0x0
  41d7b4:	add    ecx,eax
  41d7b6:	mov    rax,QWORD PTR [rbp-0xb8]
  41d7bd:	mov    esi,ecx
  41d7bf:	mov    rdi,rax
  41d7c2:	call   41d34d <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  41d7c7:	mov    DWORD PTR [rbp-0xa4],eax
  41d7cd:	mov    rax,QWORD PTR [rbp-0xd0]
  41d7d4:	mov    edx,eax
  41d7d6:	mov    eax,DWORD PTR [rbp-0xa4]
  41d7dc:	add    eax,edx
  41d7de:	mov    edi,eax
  41d7e0:	call   41c04e <main@@Base+0x10e7>
  41d7e5:	mov    DWORD PTR [rbp-0xac],eax
  41d7eb:	mov    QWORD PTR [rbp-0xa0],0x0
  41d7f6:	mov    DWORD PTR [rbp-0x98],0x0
  41d800:	mov    rax,QWORD PTR [rbp-0xb8]
  41d807:	mov    eax,DWORD PTR [rax+0x100]
  41d80d:	test   eax,eax
  41d80f:	je     41d86d <flatcc_builder_embed_buffer@@Base+0x17f>
  41d811:	mov    rax,QWORD PTR [rbp-0xa0]
  41d818:	add    rax,0x4
  41d81c:	mov    QWORD PTR [rbp-0xa0],rax
  41d823:	mov    eax,DWORD PTR [rbp-0x98]
  41d829:	cdqe   
  41d82b:	shl    rax,0x4
  41d82f:	add    rax,rbp
  41d832:	lea    rdx,[rax-0x90]
  41d839:	lea    rax,[rbp-0xac]
  41d840:	mov    QWORD PTR [rdx],rax
  41d843:	mov    eax,DWORD PTR [rbp-0x98]
  41d849:	cdqe   
  41d84b:	shl    rax,0x4
  41d84f:	add    rax,rbp
  41d852:	sub    rax,0x88
  41d858:	mov    QWORD PTR [rax],0x4
  41d85f:	mov    eax,DWORD PTR [rbp-0x98]
  41d865:	inc    eax
  41d867:	mov    DWORD PTR [rbp-0x98],eax
  41d86d:	cmp    QWORD PTR [rbp-0xd0],0x0
  41d875:	je     41d8dd <flatcc_builder_embed_buffer@@Base+0x1ef>
  41d877:	mov    rdx,QWORD PTR [rbp-0xa0]
  41d87e:	mov    rax,QWORD PTR [rbp-0xd0]
  41d885:	add    rax,rdx
  41d888:	mov    QWORD PTR [rbp-0xa0],rax
  41d88f:	mov    eax,DWORD PTR [rbp-0x98]
  41d895:	cdqe   
  41d897:	shl    rax,0x4
  41d89b:	add    rax,rbp
  41d89e:	lea    rdx,[rax-0x90]
  41d8a5:	mov    rax,QWORD PTR [rbp-0xc8]
  41d8ac:	mov    QWORD PTR [rdx],rax
  41d8af:	mov    eax,DWORD PTR [rbp-0x98]
  41d8b5:	cdqe   
  41d8b7:	shl    rax,0x4
  41d8bb:	add    rax,rbp
  41d8be:	lea    rdx,[rax-0x88]
  41d8c5:	mov    rax,QWORD PTR [rbp-0xd0]
  41d8cc:	mov    QWORD PTR [rdx],rax
  41d8cf:	mov    eax,DWORD PTR [rbp-0x98]
  41d8d5:	inc    eax
  41d8d7:	mov    DWORD PTR [rbp-0x98],eax
  41d8dd:	cmp    DWORD PTR [rbp-0xa4],0x0
  41d8e4:	je     41d94a <flatcc_builder_embed_buffer@@Base+0x25c>
  41d8e6:	mov    rdx,QWORD PTR [rbp-0xa0]
  41d8ed:	mov    eax,DWORD PTR [rbp-0xa4]
  41d8f3:	add    rax,rdx
  41d8f6:	mov    QWORD PTR [rbp-0xa0],rax
  41d8fd:	mov    eax,DWORD PTR [rbp-0x98]
  41d903:	cdqe   
  41d905:	shl    rax,0x4
  41d909:	add    rax,rbp
  41d90c:	sub    rax,0x90
  41d912:	mov    rdx,0x43af80
  41d919:	mov    QWORD PTR [rax],rdx
  41d91c:	mov    edx,DWORD PTR [rbp-0x98]
  41d922:	mov    eax,DWORD PTR [rbp-0xa4]
  41d928:	movsxd rdx,edx
  41d92b:	shl    rdx,0x4
  41d92f:	add    rdx,rbp
  41d932:	sub    rdx,0x88
  41d939:	mov    QWORD PTR [rdx],rax
  41d93c:	mov    eax,DWORD PTR [rbp-0x98]
  41d942:	inc    eax
  41d944:	mov    DWORD PTR [rbp-0x98],eax
  41d94a:	lea    rdx,[rbp-0xa0]
  41d951:	mov    rax,QWORD PTR [rbp-0xb8]
  41d958:	mov    rsi,rdx
  41d95b:	mov    rdi,rax
  41d95e:	call   41d397 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  41d963:	mov    rdi,QWORD PTR [rbp-0x8]
  41d967:	xor    rdi,QWORD PTR fs:0x28
  41d970:	je     41d977 <flatcc_builder_embed_buffer@@Base+0x289>
  41d972:	call   4061a0 <__stack_chk_fail@plt>
  41d977:	leave  
  41d978:	ret    

000000000041d979 <flatcc_builder_create_buffer@@Base>:
  41d979:	endbr64 
  41d97d:	push   rbp
  41d97e:	mov    rbp,rsp
  41d981:	sub    rsp,0xf0
  41d988:	mov    QWORD PTR [rbp-0xd8],rdi
  41d98f:	mov    QWORD PTR [rbp-0xe0],rsi
  41d996:	mov    eax,edx
  41d998:	mov    DWORD PTR [rbp-0xe8],ecx
  41d99e:	mov    edx,r8d
  41d9a1:	mov    DWORD PTR [rbp-0xf0],r9d
  41d9a8:	mov    WORD PTR [rbp-0xe4],ax
  41d9af:	mov    eax,edx
  41d9b1:	mov    WORD PTR [rbp-0xec],ax
  41d9b8:	mov    rax,QWORD PTR fs:0x28
  41d9c1:	mov    QWORD PTR [rbp-0x8],rax
  41d9c5:	xor    eax,eax
  41d9c7:	mov    DWORD PTR [rbp-0xb8],0x0
  41d9d1:	mov    DWORD PTR [rbp-0xbc],0x0
  41d9db:	mov    eax,DWORD PTR [rbp-0xf0]
  41d9e1:	and    eax,0x1
  41d9e4:	test   eax,eax
  41d9e6:	setne  al
  41d9e9:	movzx  eax,al
  41d9ec:	mov    DWORD PTR [rbp-0xb4],eax
  41d9f2:	mov    eax,DWORD PTR [rbp-0xf0]
  41d9f8:	and    eax,0x2
  41d9fb:	test   eax,eax
  41d9fd:	setne  al
  41da00:	movzx  eax,al
  41da03:	mov    DWORD PTR [rbp-0xb0],eax
  41da09:	movzx  edx,WORD PTR [rbp-0xe4]
  41da10:	mov    ecx,DWORD PTR [rbp-0xb4]
  41da16:	lea    rsi,[rbp-0xec]
  41da1d:	mov    rax,QWORD PTR [rbp-0xd8]
  41da24:	mov    rdi,rax
  41da27:	call   41d52e <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  41da2c:	test   eax,eax
  41da2e:	je     41da3a <flatcc_builder_create_buffer@@Base+0xc1>
  41da30:	mov    eax,0x0
  41da35:	jmp    41dd9c <flatcc_builder_create_buffer@@Base+0x423>
  41da3a:	movzx  eax,WORD PTR [rbp-0xec]
  41da41:	movzx  edx,ax
  41da44:	mov    rax,QWORD PTR [rbp-0xd8]
  41da4b:	mov    esi,edx
  41da4d:	mov    rdi,rax
  41da50:	call   41cd7a <flatcc_builder_clear@@Base+0x99>
  41da55:	cmp    QWORD PTR [rbp-0xe0],0x0
  41da5d:	je     41da94 <flatcc_builder_create_buffer@@Base+0x11b>
  41da5f:	mov    rax,QWORD PTR [rbp-0xe0]
  41da66:	mov    eax,DWORD PTR [rax]
  41da68:	mov    DWORD PTR [rbp-0xbc],eax
  41da6e:	mov    eax,DWORD PTR [rbp-0xbc]
  41da74:	mov    edi,eax
  41da76:	call   41c069 <main@@Base+0x1102>
  41da7b:	mov    DWORD PTR [rbp-0xbc],eax
  41da81:	mov    eax,DWORD PTR [rbp-0xbc]
  41da87:	mov    edi,eax
  41da89:	call   41c04e <main@@Base+0x10e7>
  41da8e:	mov    DWORD PTR [rbp-0xbc],eax
  41da94:	mov    eax,DWORD PTR [rbp-0xbc]
  41da9a:	test   eax,eax
  41da9c:	je     41daa5 <flatcc_builder_create_buffer@@Base+0x12c>
  41da9e:	mov    eax,0x4
  41daa3:	jmp    41daaa <flatcc_builder_create_buffer@@Base+0x131>
  41daa5:	mov    eax,0x0
  41daaa:	mov    DWORD PTR [rbp-0xb8],eax
  41dab0:	movzx  eax,WORD PTR [rbp-0xec]
  41dab7:	movzx  edx,ax
  41daba:	cmp    DWORD PTR [rbp-0xb0],0x0
  41dac1:	je     41daca <flatcc_builder_create_buffer@@Base+0x151>
  41dac3:	mov    ecx,0x4
  41dac8:	jmp    41dacf <flatcc_builder_create_buffer@@Base+0x156>
  41daca:	mov    ecx,0x0
  41dacf:	mov    eax,DWORD PTR [rbp-0xb8]
  41dad5:	add    eax,ecx
  41dad7:	lea    ecx,[rax+0x4]
  41dada:	mov    rax,QWORD PTR [rbp-0xd8]
  41dae1:	mov    esi,ecx
  41dae3:	mov    rdi,rax
  41dae6:	call   41d34d <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  41daeb:	mov    DWORD PTR [rbp-0xac],eax
  41daf1:	mov    QWORD PTR [rbp-0xa0],0x0
  41dafc:	mov    DWORD PTR [rbp-0x98],0x0
  41db06:	cmp    DWORD PTR [rbp-0xb4],0x0
  41db0d:	jne    41db18 <flatcc_builder_create_buffer@@Base+0x19f>
  41db0f:	cmp    DWORD PTR [rbp-0xb0],0x0
  41db16:	je     41db74 <flatcc_builder_create_buffer@@Base+0x1fb>
  41db18:	mov    rax,QWORD PTR [rbp-0xa0]
  41db1f:	add    rax,0x4
  41db23:	mov    QWORD PTR [rbp-0xa0],rax
  41db2a:	mov    eax,DWORD PTR [rbp-0x98]
  41db30:	cdqe   
  41db32:	shl    rax,0x4
  41db36:	add    rax,rbp
  41db39:	lea    rdx,[rax-0x90]
  41db40:	lea    rax,[rbp-0xc0]
  41db47:	mov    QWORD PTR [rdx],rax
  41db4a:	mov    eax,DWORD PTR [rbp-0x98]
  41db50:	cdqe   
  41db52:	shl    rax,0x4
  41db56:	add    rax,rbp
  41db59:	sub    rax,0x88
  41db5f:	mov    QWORD PTR [rax],0x4
  41db66:	mov    eax,DWORD PTR [rbp-0x98]
  41db6c:	inc    eax
  41db6e:	mov    DWORD PTR [rbp-0x98],eax
  41db74:	mov    rax,QWORD PTR [rbp-0xa0]
  41db7b:	add    rax,0x4
  41db7f:	mov    QWORD PTR [rbp-0xa0],rax
  41db86:	mov    eax,DWORD PTR [rbp-0x98]
  41db8c:	cdqe   
  41db8e:	shl    rax,0x4
  41db92:	add    rax,rbp
  41db95:	lea    rdx,[rax-0x90]
  41db9c:	lea    rax,[rbp-0xc4]
  41dba3:	mov    QWORD PTR [rdx],rax
  41dba6:	mov    eax,DWORD PTR [rbp-0x98]
  41dbac:	cdqe   
  41dbae:	shl    rax,0x4
  41dbb2:	add    rax,rbp
  41dbb5:	sub    rax,0x88
  41dbbb:	mov    QWORD PTR [rax],0x4
  41dbc2:	mov    eax,DWORD PTR [rbp-0x98]
  41dbc8:	inc    eax
  41dbca:	mov    DWORD PTR [rbp-0x98],eax
  41dbd0:	cmp    DWORD PTR [rbp-0xb8],0x0
  41dbd7:	je     41dc3e <flatcc_builder_create_buffer@@Base+0x2c5>
  41dbd9:	mov    rdx,QWORD PTR [rbp-0xa0]
  41dbe0:	mov    eax,DWORD PTR [rbp-0xb8]
  41dbe6:	add    rax,rdx
  41dbe9:	mov    QWORD PTR [rbp-0xa0],rax
  41dbf0:	mov    eax,DWORD PTR [rbp-0x98]
  41dbf6:	cdqe   
  41dbf8:	shl    rax,0x4
  41dbfc:	add    rax,rbp
  41dbff:	lea    rdx,[rax-0x90]
  41dc06:	lea    rax,[rbp-0xbc]
  41dc0d:	mov    QWORD PTR [rdx],rax
  41dc10:	mov    edx,DWORD PTR [rbp-0x98]
  41dc16:	mov    eax,DWORD PTR [rbp-0xb8]
  41dc1c:	movsxd rdx,edx
  41dc1f:	shl    rdx,0x4
  41dc23:	add    rdx,rbp
  41dc26:	sub    rdx,0x88
  41dc2d:	mov    QWORD PTR [rdx],rax
  41dc30:	mov    eax,DWORD PTR [rbp-0x98]
  41dc36:	inc    eax
  41dc38:	mov    DWORD PTR [rbp-0x98],eax
  41dc3e:	cmp    DWORD PTR [rbp-0xac],0x0
  41dc45:	je     41dcab <flatcc_builder_create_buffer@@Base+0x332>
  41dc47:	mov    rdx,QWORD PTR [rbp-0xa0]
  41dc4e:	mov    eax,DWORD PTR [rbp-0xac]
  41dc54:	add    rax,rdx
  41dc57:	mov    QWORD PTR [rbp-0xa0],rax
  41dc5e:	mov    eax,DWORD PTR [rbp-0x98]
  41dc64:	cdqe   
  41dc66:	shl    rax,0x4
  41dc6a:	add    rax,rbp
  41dc6d:	sub    rax,0x90
  41dc73:	mov    rdx,0x43af80
  41dc7a:	mov    QWORD PTR [rax],rdx
  41dc7d:	mov    edx,DWORD PTR [rbp-0x98]
  41dc83:	mov    eax,DWORD PTR [rbp-0xac]
  41dc89:	movsxd rdx,edx
  41dc8c:	shl    rdx,0x4
  41dc90:	add    rdx,rbp
  41dc93:	sub    rdx,0x88
  41dc9a:	mov    QWORD PTR [rdx],rax
  41dc9d:	mov    eax,DWORD PTR [rbp-0x98]
  41dca3:	inc    eax
  41dca5:	mov    DWORD PTR [rbp-0x98],eax
  41dcab:	mov    rax,QWORD PTR [rbp-0xd8]
  41dcb2:	mov    eax,DWORD PTR [rax+0xf0]
  41dcb8:	mov    edx,eax
  41dcba:	mov    rax,QWORD PTR [rbp-0xa0]
  41dcc1:	sub    edx,eax
  41dcc3:	mov    eax,edx
  41dcc5:	cmp    DWORD PTR [rbp-0xb4],0x0
  41dccc:	jne    41dcd7 <flatcc_builder_create_buffer@@Base+0x35e>
  41dcce:	cmp    DWORD PTR [rbp-0xb0],0x0
  41dcd5:	je     41dcde <flatcc_builder_create_buffer@@Base+0x365>
  41dcd7:	mov    edx,0x4
  41dcdc:	jmp    41dce3 <flatcc_builder_create_buffer@@Base+0x36a>
  41dcde:	mov    edx,0x0
  41dce3:	add    eax,edx
  41dce5:	mov    DWORD PTR [rbp-0xa8],eax
  41dceb:	cmp    DWORD PTR [rbp-0xb4],0x0
  41dcf2:	je     41dd16 <flatcc_builder_create_buffer@@Base+0x39d>
  41dcf4:	mov    rax,QWORD PTR [rbp-0xd8]
  41dcfb:	mov    eax,DWORD PTR [rax+0xf8]
  41dd01:	sub    eax,DWORD PTR [rbp-0xa8]
  41dd07:	mov    edi,eax
  41dd09:	call   41c04e <main@@Base+0x10e7>
  41dd0e:	mov    DWORD PTR [rbp-0xc0],eax
  41dd14:	jmp    41dd36 <flatcc_builder_create_buffer@@Base+0x3bd>
  41dd16:	mov    rax,QWORD PTR [rbp-0xd8]
  41dd1d:	mov    eax,DWORD PTR [rax+0xf4]
  41dd23:	sub    eax,DWORD PTR [rbp-0xa8]
  41dd29:	mov    edi,eax
  41dd2b:	call   41c04e <main@@Base+0x10e7>
  41dd30:	mov    DWORD PTR [rbp-0xc0],eax
  41dd36:	mov    eax,DWORD PTR [rbp-0xe8]
  41dd3c:	sub    eax,DWORD PTR [rbp-0xa8]
  41dd42:	mov    edi,eax
  41dd44:	call   41c04e <main@@Base+0x10e7>
  41dd49:	mov    DWORD PTR [rbp-0xc4],eax
  41dd4f:	lea    rdx,[rbp-0xa0]
  41dd56:	mov    rax,QWORD PTR [rbp-0xd8]
  41dd5d:	mov    rsi,rdx
  41dd60:	mov    rdi,rax
  41dd63:	call   41d397 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  41dd68:	mov    DWORD PTR [rbp-0xa4],eax
  41dd6e:	cmp    DWORD PTR [rbp-0xa4],0x0
  41dd75:	jne    41dd96 <flatcc_builder_create_buffer@@Base+0x41d>
  41dd77:	lea    rcx,[rip+0x1d922]        # 43b6a0 <flatcc_builder_padding_base@@Base+0x720>
  41dd7e:	mov    edx,0x304
  41dd83:	lea    rsi,[rip+0x1d3f6]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41dd8a:	lea    rdi,[rip+0x1d44f]        # 43b1e0 <flatcc_builder_padding_base@@Base+0x260>
  41dd91:	call   4061b0 <__assert_fail@plt>
  41dd96:	mov    eax,DWORD PTR [rbp-0xa4]
  41dd9c:	mov    rsi,QWORD PTR [rbp-0x8]
  41dda0:	xor    rsi,QWORD PTR fs:0x28
  41dda9:	je     41ddb0 <flatcc_builder_create_buffer@@Base+0x437>
  41ddab:	call   4061a0 <__stack_chk_fail@plt>
  41ddb0:	leave  
  41ddb1:	ret    

000000000041ddb2 <flatcc_builder_create_struct@@Base>:
  41ddb2:	endbr64 
  41ddb6:	push   rbp
  41ddb7:	mov    rbp,rsp
  41ddba:	sub    rsp,0xd0
  41ddc1:	mov    QWORD PTR [rbp-0xb8],rdi
  41ddc8:	mov    QWORD PTR [rbp-0xc0],rsi
  41ddcf:	mov    QWORD PTR [rbp-0xc8],rdx
  41ddd6:	mov    eax,ecx
  41ddd8:	mov    WORD PTR [rbp-0xcc],ax
  41dddf:	mov    rax,QWORD PTR fs:0x28
  41dde8:	mov    QWORD PTR [rbp-0x8],rax
  41ddec:	xor    eax,eax
  41ddee:	cmp    WORD PTR [rbp-0xcc],0x0
  41ddf6:	jne    41de17 <flatcc_builder_create_struct@@Base+0x65>
  41ddf8:	lea    rcx,[rip+0x1d8c1]        # 43b6c0 <flatcc_builder_padding_base@@Base+0x740>
  41ddff:	mov    edx,0x30f
  41de04:	lea    rsi,[rip+0x1d375]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41de0b:	lea    rdi,[rip+0x1d42d]        # 43b23f <flatcc_builder_padding_base@@Base+0x2bf>
  41de12:	call   4061b0 <__assert_fail@plt>
  41de17:	movzx  edx,WORD PTR [rbp-0xcc]
  41de1e:	mov    rax,QWORD PTR [rbp-0xb8]
  41de25:	mov    esi,edx
  41de27:	mov    rdi,rax
  41de2a:	call   41cd7a <flatcc_builder_clear@@Base+0x99>
  41de2f:	movzx  edx,WORD PTR [rbp-0xcc]
  41de36:	mov    rax,QWORD PTR [rbp-0xc8]
  41de3d:	mov    ecx,eax
  41de3f:	mov    rax,QWORD PTR [rbp-0xb8]
  41de46:	mov    esi,ecx
  41de48:	mov    rdi,rax
  41de4b:	call   41d34d <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  41de50:	mov    eax,eax
  41de52:	mov    QWORD PTR [rbp-0xa8],rax
  41de59:	mov    QWORD PTR [rbp-0xa0],0x0
  41de64:	mov    DWORD PTR [rbp-0x98],0x0
  41de6e:	cmp    QWORD PTR [rbp-0xc8],0x0
  41de76:	je     41dede <flatcc_builder_create_struct@@Base+0x12c>
  41de78:	mov    rdx,QWORD PTR [rbp-0xa0]
  41de7f:	mov    rax,QWORD PTR [rbp-0xc8]
  41de86:	add    rax,rdx
  41de89:	mov    QWORD PTR [rbp-0xa0],rax
  41de90:	mov    eax,DWORD PTR [rbp-0x98]
  41de96:	cdqe   
  41de98:	shl    rax,0x4
  41de9c:	add    rax,rbp
  41de9f:	lea    rdx,[rax-0x90]
  41dea6:	mov    rax,QWORD PTR [rbp-0xc0]
  41dead:	mov    QWORD PTR [rdx],rax
  41deb0:	mov    eax,DWORD PTR [rbp-0x98]
  41deb6:	cdqe   
  41deb8:	shl    rax,0x4
  41debc:	add    rax,rbp
  41debf:	lea    rdx,[rax-0x88]
  41dec6:	mov    rax,QWORD PTR [rbp-0xc8]
  41decd:	mov    QWORD PTR [rdx],rax
  41ded0:	mov    eax,DWORD PTR [rbp-0x98]
  41ded6:	inc    eax
  41ded8:	mov    DWORD PTR [rbp-0x98],eax
  41dede:	cmp    QWORD PTR [rbp-0xa8],0x0
  41dee6:	je     41df4d <flatcc_builder_create_struct@@Base+0x19b>
  41dee8:	mov    rdx,QWORD PTR [rbp-0xa0]
  41deef:	mov    rax,QWORD PTR [rbp-0xa8]
  41def6:	add    rax,rdx
  41def9:	mov    QWORD PTR [rbp-0xa0],rax
  41df00:	mov    eax,DWORD PTR [rbp-0x98]
  41df06:	cdqe   
  41df08:	shl    rax,0x4
  41df0c:	add    rax,rbp
  41df0f:	sub    rax,0x90
  41df15:	mov    rdx,0x43af80
  41df1c:	mov    QWORD PTR [rax],rdx
  41df1f:	mov    eax,DWORD PTR [rbp-0x98]
  41df25:	cdqe   
  41df27:	shl    rax,0x4
  41df2b:	add    rax,rbp
  41df2e:	lea    rdx,[rax-0x88]
  41df35:	mov    rax,QWORD PTR [rbp-0xa8]
  41df3c:	mov    QWORD PTR [rdx],rax
  41df3f:	mov    eax,DWORD PTR [rbp-0x98]
  41df45:	inc    eax
  41df47:	mov    DWORD PTR [rbp-0x98],eax
  41df4d:	lea    rdx,[rbp-0xa0]
  41df54:	mov    rax,QWORD PTR [rbp-0xb8]
  41df5b:	mov    rsi,rdx
  41df5e:	mov    rdi,rax
  41df61:	call   41d397 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  41df66:	mov    rcx,QWORD PTR [rbp-0x8]
  41df6a:	xor    rcx,QWORD PTR fs:0x28
  41df73:	je     41df7a <flatcc_builder_create_struct@@Base+0x1c8>
  41df75:	call   4061a0 <__stack_chk_fail@plt>
  41df7a:	leave  
  41df7b:	ret    

000000000041df7c <flatcc_builder_start_buffer@@Base>:
  41df7c:	endbr64 
  41df80:	push   rbp
  41df81:	mov    rbp,rsp
  41df84:	sub    rsp,0x20
  41df88:	mov    QWORD PTR [rbp-0x8],rdi
  41df8c:	mov    QWORD PTR [rbp-0x10],rsi
  41df90:	mov    eax,edx
  41df92:	mov    DWORD PTR [rbp-0x18],ecx
  41df95:	mov    WORD PTR [rbp-0x14],ax
  41df99:	mov    rax,QWORD PTR [rbp-0x8]
  41df9d:	movzx  eax,WORD PTR [rax+0xe8]
  41dfa4:	movzx  edx,ax
  41dfa7:	mov    rax,QWORD PTR [rbp-0x8]
  41dfab:	mov    esi,edx
  41dfad:	mov    rdi,rax
  41dfb0:	call   41d0ab <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  41dfb5:	test   eax,eax
  41dfb7:	je     41dfc3 <flatcc_builder_start_buffer@@Base+0x47>
  41dfb9:	mov    eax,0xffffffff
  41dfbe:	jmp    41e0c7 <flatcc_builder_start_buffer@@Base+0x14b>
  41dfc3:	mov    rax,QWORD PTR [rbp-0x8]
  41dfc7:	mov    WORD PTR [rax+0xe8],0x1
  41dfd0:	mov    rax,QWORD PTR [rbp-0x8]
  41dfd4:	mov    rdx,QWORD PTR [rax+0x30]
  41dfd8:	mov    rax,QWORD PTR [rbp-0x8]
  41dfdc:	movzx  eax,WORD PTR [rax+0xec]
  41dfe3:	mov    WORD PTR [rdx+0x22],ax
  41dfe7:	mov    rdx,QWORD PTR [rbp-0x8]
  41dfeb:	movzx  eax,WORD PTR [rbp-0x14]
  41dfef:	mov    WORD PTR [rdx+0xec],ax
  41dff6:	mov    rax,QWORD PTR [rbp-0x8]
  41dffa:	mov    rdx,QWORD PTR [rax+0x30]
  41dffe:	mov    rax,QWORD PTR [rbp-0x8]
  41e002:	movzx  eax,WORD PTR [rax+0x10c]
  41e009:	mov    WORD PTR [rdx+0x20],ax
  41e00d:	mov    eax,DWORD PTR [rbp-0x18]
  41e010:	mov    edx,eax
  41e012:	mov    rax,QWORD PTR [rbp-0x8]
  41e016:	mov    WORD PTR [rax+0x10c],dx
  41e01d:	mov    rax,QWORD PTR [rbp-0x8]
  41e021:	mov    rax,QWORD PTR [rax+0x30]
  41e025:	mov    rdx,QWORD PTR [rbp-0x8]
  41e029:	mov    edx,DWORD PTR [rdx+0xf8]
  41e02f:	mov    DWORD PTR [rax+0x14],edx
  41e032:	mov    rax,QWORD PTR [rbp-0x8]
  41e036:	mov    rax,QWORD PTR [rax+0x30]
  41e03a:	mov    rdx,QWORD PTR [rbp-0x8]
  41e03e:	mov    edx,DWORD PTR [rdx+0x100]
  41e044:	mov    DWORD PTR [rax+0x1c],edx
  41e047:	mov    rax,QWORD PTR [rbp-0x8]
  41e04b:	mov    edx,DWORD PTR [rax+0xf0]
  41e051:	mov    rax,QWORD PTR [rbp-0x8]
  41e055:	mov    DWORD PTR [rax+0xf8],edx
  41e05b:	mov    rax,QWORD PTR [rbp-0x8]
  41e05f:	mov    eax,DWORD PTR [rax+0xfc]
  41e065:	lea    ecx,[rax+0x1]
  41e068:	mov    rdx,QWORD PTR [rbp-0x8]
  41e06c:	mov    DWORD PTR [rdx+0xfc],ecx
  41e072:	mov    rdx,QWORD PTR [rbp-0x8]
  41e076:	mov    DWORD PTR [rdx+0x100],eax
  41e07c:	mov    rax,QWORD PTR [rbp-0x8]
  41e080:	mov    rax,QWORD PTR [rax+0x30]
  41e084:	mov    rdx,QWORD PTR [rbp-0x8]
  41e088:	mov    edx,DWORD PTR [rdx+0x110]
  41e08e:	mov    DWORD PTR [rax+0x10],edx
  41e091:	cmp    QWORD PTR [rbp-0x10],0x0
  41e096:	je     41e09e <flatcc_builder_start_buffer@@Base+0x122>
  41e098:	mov    rax,QWORD PTR [rbp-0x10]
  41e09c:	jmp    41e0a5 <flatcc_builder_start_buffer@@Base+0x129>
  41e09e:	mov    rax,0x43af80
  41e0a5:	mov    rdx,QWORD PTR [rbp-0x8]
  41e0a9:	add    rdx,0x110
  41e0b0:	mov    eax,DWORD PTR [rax]
  41e0b2:	mov    DWORD PTR [rdx],eax
  41e0b4:	mov    rax,QWORD PTR [rbp-0x8]
  41e0b8:	mov    rax,QWORD PTR [rax+0x30]
  41e0bc:	mov    WORD PTR [rax+0xe],0x1
  41e0c2:	mov    eax,0x0
  41e0c7:	leave  
  41e0c8:	ret    

000000000041e0c9 <flatcc_builder_end_buffer@@Base>:
  41e0c9:	endbr64 
  41e0cd:	push   rbp
  41e0ce:	mov    rbp,rsp
  41e0d1:	sub    rsp,0x20
  41e0d5:	mov    QWORD PTR [rbp-0x18],rdi
  41e0d9:	mov    DWORD PTR [rbp-0x1c],esi
  41e0dc:	mov    rax,QWORD PTR [rbp-0x18]
  41e0e0:	movzx  eax,WORD PTR [rax+0x10c]
  41e0e7:	movzx  eax,ax
  41e0ea:	and    eax,0x2
  41e0ed:	mov    DWORD PTR [rbp-0x8],eax
  41e0f0:	mov    rax,QWORD PTR [rbp-0x18]
  41e0f4:	mov    eax,DWORD PTR [rax+0x100]
  41e0fa:	test   eax,eax
  41e0fc:	setne  al
  41e0ff:	movzx  eax,al
  41e102:	or     DWORD PTR [rbp-0x8],eax
  41e105:	mov    rax,QWORD PTR [rbp-0x18]
  41e109:	mov    rax,QWORD PTR [rax+0x30]
  41e10d:	movzx  eax,WORD PTR [rax+0xe]
  41e111:	cmp    ax,0x1
  41e115:	je     41e136 <flatcc_builder_end_buffer@@Base+0x6d>
  41e117:	lea    rcx,[rip+0x1d5c2]        # 43b6e0 <flatcc_builder_padding_base@@Base+0x760>
  41e11e:	mov    edx,0x346
  41e123:	lea    rsi,[rip+0x1d056]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41e12a:	lea    rdi,[rip+0x1d11f]        # 43b250 <flatcc_builder_padding_base@@Base+0x2d0>
  41e131:	call   4061b0 <__assert_fail@plt>
  41e136:	mov    rax,QWORD PTR [rbp-0x18]
  41e13a:	movzx  eax,WORD PTR [rax+0xec]
  41e141:	movzx  edx,ax
  41e144:	mov    rax,QWORD PTR [rbp-0x18]
  41e148:	mov    esi,edx
  41e14a:	mov    rdi,rax
  41e14d:	call   41cd7a <flatcc_builder_clear@@Base+0x99>
  41e152:	mov    rax,QWORD PTR [rbp-0x18]
  41e156:	movzx  eax,WORD PTR [rax+0xe8]
  41e15d:	movzx  edi,ax
  41e160:	mov    rax,QWORD PTR [rbp-0x18]
  41e164:	movzx  eax,WORD PTR [rax+0xec]
  41e16b:	movzx  edx,ax
  41e16e:	mov    rax,QWORD PTR [rbp-0x18]
  41e172:	lea    rsi,[rax+0x110]
  41e179:	mov    r8d,DWORD PTR [rbp-0x8]
  41e17d:	mov    ecx,DWORD PTR [rbp-0x1c]
  41e180:	mov    rax,QWORD PTR [rbp-0x18]
  41e184:	mov    r9d,r8d
  41e187:	mov    r8d,edi
  41e18a:	mov    rdi,rax
  41e18d:	call   41d979 <flatcc_builder_create_buffer@@Base>
  41e192:	mov    DWORD PTR [rbp-0x4],eax
  41e195:	cmp    DWORD PTR [rbp-0x4],0x0
  41e199:	jne    41e1a2 <flatcc_builder_end_buffer@@Base+0xd9>
  41e19b:	mov    eax,0x0
  41e1a0:	jmp    41e207 <flatcc_builder_end_buffer@@Base+0x13e>
  41e1a2:	mov    rax,QWORD PTR [rbp-0x18]
  41e1a6:	mov    rax,QWORD PTR [rax+0x30]
  41e1aa:	mov    edx,DWORD PTR [rax+0x14]
  41e1ad:	mov    rax,QWORD PTR [rbp-0x18]
  41e1b1:	mov    DWORD PTR [rax+0xf8],edx
  41e1b7:	mov    rax,QWORD PTR [rbp-0x18]
  41e1bb:	mov    rax,QWORD PTR [rax+0x30]
  41e1bf:	mov    edx,DWORD PTR [rax+0x1c]
  41e1c2:	mov    rax,QWORD PTR [rbp-0x18]
  41e1c6:	mov    DWORD PTR [rax+0x100],edx
  41e1cc:	mov    rax,QWORD PTR [rbp-0x18]
  41e1d0:	mov    rax,QWORD PTR [rax+0x30]
  41e1d4:	mov    edx,DWORD PTR [rax+0x10]
  41e1d7:	mov    rax,QWORD PTR [rbp-0x18]
  41e1db:	mov    DWORD PTR [rax+0x110],edx
  41e1e1:	mov    rax,QWORD PTR [rbp-0x18]
  41e1e5:	mov    rax,QWORD PTR [rax+0x30]
  41e1e9:	movzx  eax,WORD PTR [rax+0x20]
  41e1ed:	mov    rdx,QWORD PTR [rbp-0x18]
  41e1f1:	mov    WORD PTR [rdx+0x10c],ax
  41e1f8:	mov    rax,QWORD PTR [rbp-0x18]
  41e1fc:	mov    rdi,rax
  41e1ff:	call   41d286 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  41e204:	mov    eax,DWORD PTR [rbp-0x4]
  41e207:	leave  
  41e208:	ret    

000000000041e209 <flatcc_builder_start_struct@@Base>:
  41e209:	endbr64 
  41e20d:	push   rbp
  41e20e:	mov    rbp,rsp
  41e211:	sub    rsp,0x20
  41e215:	mov    QWORD PTR [rbp-0x8],rdi
  41e219:	mov    QWORD PTR [rbp-0x10],rsi
  41e21d:	mov    eax,edx
  41e21f:	mov    WORD PTR [rbp-0x14],ax
  41e223:	movzx  edx,WORD PTR [rbp-0x14]
  41e227:	mov    rax,QWORD PTR [rbp-0x8]
  41e22b:	mov    esi,edx
  41e22d:	mov    rdi,rax
  41e230:	call   41d0ab <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  41e235:	test   eax,eax
  41e237:	je     41e240 <flatcc_builder_start_struct@@Base+0x37>
  41e239:	mov    eax,0x0
  41e23e:	jmp    41e273 <flatcc_builder_start_struct@@Base+0x6a>
  41e240:	mov    rax,QWORD PTR [rbp-0x8]
  41e244:	mov    rax,QWORD PTR [rax+0x30]
  41e248:	mov    WORD PTR [rax+0xe],0x2
  41e24e:	mov    rax,QWORD PTR [rbp-0x8]
  41e252:	mov    esi,0xfffffffc
  41e257:	mov    rdi,rax
  41e25a:	call   41c281 <flatcc_builder_default_alloc@@Base+0x173>
  41e25f:	mov    rax,QWORD PTR [rbp-0x10]
  41e263:	mov    edx,eax
  41e265:	mov    rax,QWORD PTR [rbp-0x8]
  41e269:	mov    esi,edx
  41e26b:	mov    rdi,rax
  41e26e:	call   41c378 <flatcc_builder_default_alloc@@Base+0x26a>
  41e273:	leave  
  41e274:	ret    

000000000041e275 <flatcc_builder_struct_edit@@Base>:
  41e275:	endbr64 
  41e279:	push   rbp
  41e27a:	mov    rbp,rsp
  41e27d:	mov    QWORD PTR [rbp-0x8],rdi
  41e281:	mov    rax,QWORD PTR [rbp-0x8]
  41e285:	mov    rax,QWORD PTR [rax+0x18]
  41e289:	pop    rbp
  41e28a:	ret    

000000000041e28b <flatcc_builder_end_struct@@Base>:
  41e28b:	endbr64 
  41e28f:	push   rbp
  41e290:	mov    rbp,rsp
  41e293:	sub    rsp,0x20
  41e297:	mov    QWORD PTR [rbp-0x18],rdi
  41e29b:	mov    rax,QWORD PTR [rbp-0x18]
  41e29f:	mov    rax,QWORD PTR [rax+0x30]
  41e2a3:	movzx  eax,WORD PTR [rax+0xe]
  41e2a7:	cmp    ax,0x2
  41e2ab:	je     41e2cc <flatcc_builder_end_struct@@Base+0x41>
  41e2ad:	lea    rcx,[rip+0x1d44c]        # 43b700 <flatcc_builder_padding_base@@Base+0x780>
  41e2b4:	mov    edx,0x368
  41e2b9:	lea    rsi,[rip+0x1cec0]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41e2c0:	lea    rdi,[rip+0x1cfb9]        # 43b280 <flatcc_builder_padding_base@@Base+0x300>
  41e2c7:	call   4061b0 <__assert_fail@plt>
  41e2cc:	mov    rax,QWORD PTR [rbp-0x18]
  41e2d0:	movzx  eax,WORD PTR [rax+0xea]
  41e2d7:	movzx  edx,ax
  41e2da:	mov    rax,QWORD PTR [rbp-0x18]
  41e2de:	mov    eax,DWORD PTR [rax+0x20]
  41e2e1:	mov    edi,eax
  41e2e3:	mov    rax,QWORD PTR [rbp-0x18]
  41e2e7:	mov    rsi,QWORD PTR [rax+0x18]
  41e2eb:	mov    rax,QWORD PTR [rbp-0x18]
  41e2ef:	mov    ecx,edx
  41e2f1:	mov    rdx,rdi
  41e2f4:	mov    rdi,rax
  41e2f7:	call   41ddb2 <flatcc_builder_create_struct@@Base>
  41e2fc:	mov    DWORD PTR [rbp-0x4],eax
  41e2ff:	cmp    DWORD PTR [rbp-0x4],0x0
  41e303:	jne    41e30c <flatcc_builder_end_struct@@Base+0x81>
  41e305:	mov    eax,0x0
  41e30a:	jmp    41e31b <flatcc_builder_end_struct@@Base+0x90>
  41e30c:	mov    rax,QWORD PTR [rbp-0x18]
  41e310:	mov    rdi,rax
  41e313:	call   41d286 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  41e318:	mov    eax,DWORD PTR [rbp-0x4]
  41e31b:	leave  
  41e31c:	ret    
  41e31d:	push   rbp
  41e31e:	mov    rbp,rsp
  41e321:	sub    rsp,0x20
  41e325:	mov    QWORD PTR [rbp-0x18],rdi
  41e329:	mov    DWORD PTR [rbp-0x1c],esi
  41e32c:	mov    DWORD PTR [rbp-0x20],edx
  41e32f:	mov    rax,QWORD PTR [rbp-0x18]
  41e333:	mov    rax,QWORD PTR [rax+0x30]
  41e337:	mov    eax,DWORD PTR [rax+0x14]
  41e33a:	mov    DWORD PTR [rbp-0x8],eax
  41e33d:	mov    edx,DWORD PTR [rbp-0x8]
  41e340:	mov    eax,DWORD PTR [rbp-0x1c]
  41e343:	add    eax,edx
  41e345:	mov    DWORD PTR [rbp-0x4],eax
  41e348:	mov    eax,DWORD PTR [rbp-0x8]
  41e34b:	cmp    eax,DWORD PTR [rbp-0x4]
  41e34e:	ja     41e358 <flatcc_builder_end_struct@@Base+0xcd>
  41e350:	mov    eax,DWORD PTR [rbp-0x4]
  41e353:	cmp    eax,DWORD PTR [rbp-0x20]
  41e356:	jbe    41e38e <flatcc_builder_end_struct@@Base+0x103>
  41e358:	mov    eax,DWORD PTR [rbp-0x8]
  41e35b:	cmp    eax,DWORD PTR [rbp-0x4]
  41e35e:	ja     41e368 <flatcc_builder_end_struct@@Base+0xdd>
  41e360:	mov    eax,DWORD PTR [rbp-0x4]
  41e363:	cmp    eax,DWORD PTR [rbp-0x20]
  41e366:	jbe    41e387 <flatcc_builder_end_struct@@Base+0xfc>
  41e368:	lea    rcx,[rip+0x1d3b1]        # 43b720 <flatcc_builder_padding_base@@Base+0x7a0>
  41e36f:	mov    edx,0x37c
  41e374:	lea    rsi,[rip+0x1ce05]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41e37b:	lea    rdi,[rip+0x1cf2a]        # 43b2ac <flatcc_builder_padding_base@@Base+0x32c>
  41e382:	call   4061b0 <__assert_fail@plt>
  41e387:	mov    eax,0xffffffff
  41e38c:	jmp    41e3a1 <flatcc_builder_end_struct@@Base+0x116>
  41e38e:	mov    rax,QWORD PTR [rbp-0x18]
  41e392:	mov    rax,QWORD PTR [rax+0x30]
  41e396:	mov    edx,DWORD PTR [rbp-0x4]
  41e399:	mov    DWORD PTR [rax+0x14],edx
  41e39c:	mov    eax,0x0
  41e3a1:	leave  
  41e3a2:	ret    

000000000041e3a3 <flatcc_builder_extend_vector@@Base>:
  41e3a3:	endbr64 
  41e3a7:	push   rbp
  41e3a8:	mov    rbp,rsp
  41e3ab:	sub    rsp,0x10
  41e3af:	mov    QWORD PTR [rbp-0x8],rdi
  41e3b3:	mov    QWORD PTR [rbp-0x10],rsi
  41e3b7:	mov    rax,QWORD PTR [rbp-0x8]
  41e3bb:	mov    rax,QWORD PTR [rax+0x30]
  41e3bf:	mov    edx,DWORD PTR [rax+0x18]
  41e3c2:	mov    rax,QWORD PTR [rbp-0x10]
  41e3c6:	mov    ecx,eax
  41e3c8:	mov    rax,QWORD PTR [rbp-0x8]
  41e3cc:	mov    esi,ecx
  41e3ce:	mov    rdi,rax
  41e3d1:	call   41e31d <flatcc_builder_end_struct@@Base+0x92>
  41e3d6:	test   eax,eax
  41e3d8:	je     41e3e1 <flatcc_builder_extend_vector@@Base+0x3e>
  41e3da:	mov    eax,0x0
  41e3df:	jmp    41e401 <flatcc_builder_extend_vector@@Base+0x5e>
  41e3e1:	mov    rax,QWORD PTR [rbp-0x8]
  41e3e5:	mov    rax,QWORD PTR [rax+0x30]
  41e3e9:	mov    eax,DWORD PTR [rax+0x10]
  41e3ec:	mov    rdx,QWORD PTR [rbp-0x10]
  41e3f0:	imul   edx,eax
  41e3f3:	mov    rax,QWORD PTR [rbp-0x8]
  41e3f7:	mov    esi,edx
  41e3f9:	mov    rdi,rax
  41e3fc:	call   41c378 <flatcc_builder_default_alloc@@Base+0x26a>
  41e401:	leave  
  41e402:	ret    

000000000041e403 <flatcc_builder_vector_push@@Base>:
  41e403:	endbr64 
  41e407:	push   rbp
  41e408:	mov    rbp,rsp
  41e40b:	sub    rsp,0x10
  41e40f:	mov    QWORD PTR [rbp-0x8],rdi
  41e413:	mov    QWORD PTR [rbp-0x10],rsi
  41e417:	mov    rax,QWORD PTR [rbp-0x8]
  41e41b:	mov    rax,QWORD PTR [rax+0x30]
  41e41f:	movzx  eax,WORD PTR [rax+0xe]
  41e423:	cmp    ax,0x4
  41e427:	je     41e448 <flatcc_builder_vector_push@@Base+0x45>
  41e429:	lea    rcx,[rip+0x1d310]        # 43b740 <flatcc_builder_padding_base@@Base+0x7c0>
  41e430:	mov    edx,0x38b
  41e435:	lea    rsi,[rip+0x1cd44]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41e43c:	lea    rdi,[rip+0x1ce85]        # 43b2c8 <flatcc_builder_padding_base@@Base+0x348>
  41e443:	call   4061b0 <__assert_fail@plt>
  41e448:	mov    rax,QWORD PTR [rbp-0x8]
  41e44c:	mov    rax,QWORD PTR [rax+0x30]
  41e450:	mov    edx,DWORD PTR [rax+0x14]
  41e453:	mov    rax,QWORD PTR [rbp-0x8]
  41e457:	mov    rax,QWORD PTR [rax+0x30]
  41e45b:	mov    eax,DWORD PTR [rax+0x18]
  41e45e:	cmp    edx,eax
  41e460:	jbe    41e4a2 <flatcc_builder_vector_push@@Base+0x9f>
  41e462:	mov    rax,QWORD PTR [rbp-0x8]
  41e466:	mov    rax,QWORD PTR [rax+0x30]
  41e46a:	mov    edx,DWORD PTR [rax+0x14]
  41e46d:	mov    rax,QWORD PTR [rbp-0x8]
  41e471:	mov    rax,QWORD PTR [rax+0x30]
  41e475:	mov    eax,DWORD PTR [rax+0x18]
  41e478:	cmp    edx,eax
  41e47a:	jbe    41e49b <flatcc_builder_vector_push@@Base+0x98>
  41e47c:	lea    rcx,[rip+0x1d2bd]        # 43b740 <flatcc_builder_padding_base@@Base+0x7c0>
  41e483:	mov    edx,0x38c
  41e488:	lea    rsi,[rip+0x1ccf1]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41e48f:	lea    rdi,[rip+0x1ce62]        # 43b2f8 <flatcc_builder_padding_base@@Base+0x378>
  41e496:	call   4061b0 <__assert_fail@plt>
  41e49b:	mov    eax,0x0
  41e4a0:	jmp    41e4d8 <flatcc_builder_vector_push@@Base+0xd5>
  41e4a2:	mov    rax,QWORD PTR [rbp-0x8]
  41e4a6:	mov    rax,QWORD PTR [rax+0x30]
  41e4aa:	mov    edx,DWORD PTR [rax+0x14]
  41e4ad:	mov    rax,QWORD PTR [rbp-0x8]
  41e4b1:	mov    rax,QWORD PTR [rax+0x30]
  41e4b5:	inc    edx
  41e4b7:	mov    DWORD PTR [rax+0x14],edx
  41e4ba:	mov    rax,QWORD PTR [rbp-0x8]
  41e4be:	mov    rax,QWORD PTR [rax+0x30]
  41e4c2:	mov    edx,DWORD PTR [rax+0x10]
  41e4c5:	mov    rcx,QWORD PTR [rbp-0x10]
  41e4c9:	mov    rax,QWORD PTR [rbp-0x8]
  41e4cd:	mov    rsi,rcx
  41e4d0:	mov    rdi,rax
  41e4d3:	call   41c440 <flatcc_builder_default_alloc@@Base+0x332>
  41e4d8:	leave  
  41e4d9:	ret    

000000000041e4da <flatcc_builder_append_vector@@Base>:
  41e4da:	endbr64 
  41e4de:	push   rbp
  41e4df:	mov    rbp,rsp
  41e4e2:	sub    rsp,0x20
  41e4e6:	mov    QWORD PTR [rbp-0x8],rdi
  41e4ea:	mov    QWORD PTR [rbp-0x10],rsi
  41e4ee:	mov    QWORD PTR [rbp-0x18],rdx
  41e4f2:	mov    rax,QWORD PTR [rbp-0x8]
  41e4f6:	mov    rax,QWORD PTR [rax+0x30]
  41e4fa:	movzx  eax,WORD PTR [rax+0xe]
  41e4fe:	cmp    ax,0x4
  41e502:	je     41e523 <flatcc_builder_append_vector@@Base+0x49>
  41e504:	lea    rcx,[rip+0x1d255]        # 43b760 <flatcc_builder_padding_base@@Base+0x7e0>
  41e50b:	mov    edx,0x393
  41e510:	lea    rsi,[rip+0x1cc69]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41e517:	lea    rdi,[rip+0x1cdaa]        # 43b2c8 <flatcc_builder_padding_base@@Base+0x348>
  41e51e:	call   4061b0 <__assert_fail@plt>
  41e523:	mov    rax,QWORD PTR [rbp-0x8]
  41e527:	mov    rax,QWORD PTR [rax+0x30]
  41e52b:	mov    edx,DWORD PTR [rax+0x18]
  41e52e:	mov    rax,QWORD PTR [rbp-0x18]
  41e532:	mov    ecx,eax
  41e534:	mov    rax,QWORD PTR [rbp-0x8]
  41e538:	mov    esi,ecx
  41e53a:	mov    rdi,rax
  41e53d:	call   41e31d <flatcc_builder_end_struct@@Base+0x92>
  41e542:	test   eax,eax
  41e544:	je     41e54d <flatcc_builder_append_vector@@Base+0x73>
  41e546:	mov    eax,0x0
  41e54b:	jmp    41e572 <flatcc_builder_append_vector@@Base+0x98>
  41e54d:	mov    rax,QWORD PTR [rbp-0x8]
  41e551:	mov    rax,QWORD PTR [rax+0x30]
  41e555:	mov    eax,DWORD PTR [rax+0x10]
  41e558:	mov    rdx,QWORD PTR [rbp-0x18]
  41e55c:	imul   edx,eax
  41e55f:	mov    rcx,QWORD PTR [rbp-0x10]
  41e563:	mov    rax,QWORD PTR [rbp-0x8]
  41e567:	mov    rsi,rcx
  41e56a:	mov    rdi,rax
  41e56d:	call   41c440 <flatcc_builder_default_alloc@@Base+0x332>
  41e572:	leave  
  41e573:	ret    

000000000041e574 <flatcc_builder_extend_offset_vector@@Base>:
  41e574:	endbr64 
  41e578:	push   rbp
  41e579:	mov    rbp,rsp
  41e57c:	sub    rsp,0x10
  41e580:	mov    QWORD PTR [rbp-0x8],rdi
  41e584:	mov    QWORD PTR [rbp-0x10],rsi
  41e588:	mov    rax,QWORD PTR [rbp-0x10]
  41e58c:	mov    ecx,eax
  41e58e:	mov    rax,QWORD PTR [rbp-0x8]
  41e592:	mov    edx,0x3fffffff
  41e597:	mov    esi,ecx
  41e599:	mov    rdi,rax
  41e59c:	call   41e31d <flatcc_builder_end_struct@@Base+0x92>
  41e5a1:	test   eax,eax
  41e5a3:	je     41e5ac <flatcc_builder_extend_offset_vector@@Base+0x38>
  41e5a5:	mov    eax,0x0
  41e5aa:	jmp    41e5c5 <flatcc_builder_extend_offset_vector@@Base+0x51>
  41e5ac:	mov    rax,QWORD PTR [rbp-0x10]
  41e5b0:	lea    edx,[rax*4+0x0]
  41e5b7:	mov    rax,QWORD PTR [rbp-0x8]
  41e5bb:	mov    esi,edx
  41e5bd:	mov    rdi,rax
  41e5c0:	call   41c378 <flatcc_builder_default_alloc@@Base+0x26a>
  41e5c5:	leave  
  41e5c6:	ret    

000000000041e5c7 <flatcc_builder_offset_vector_push@@Base>:
  41e5c7:	endbr64 
  41e5cb:	push   rbp
  41e5cc:	mov    rbp,rsp
  41e5cf:	sub    rsp,0x20
  41e5d3:	mov    QWORD PTR [rbp-0x18],rdi
  41e5d7:	mov    DWORD PTR [rbp-0x1c],esi
  41e5da:	mov    rax,QWORD PTR [rbp-0x18]
  41e5de:	mov    rax,QWORD PTR [rax+0x30]
  41e5e2:	movzx  eax,WORD PTR [rax+0xe]
  41e5e6:	cmp    ax,0x5
  41e5ea:	je     41e60b <flatcc_builder_offset_vector_push@@Base+0x44>
  41e5ec:	lea    rcx,[rip+0x1d18d]        # 43b780 <flatcc_builder_padding_base@@Base+0x800>
  41e5f3:	mov    edx,0x3a6
  41e5f8:	lea    rsi,[rip+0x1cb81]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41e5ff:	lea    rdi,[rip+0x1cd32]        # 43b338 <flatcc_builder_padding_base@@Base+0x3b8>
  41e606:	call   4061b0 <__assert_fail@plt>
  41e60b:	mov    rax,QWORD PTR [rbp-0x18]
  41e60f:	mov    rax,QWORD PTR [rax+0x30]
  41e613:	mov    eax,DWORD PTR [rax+0x14]
  41e616:	cmp    eax,0x3fffffff
  41e61b:	jne    41e624 <flatcc_builder_offset_vector_push@@Base+0x5d>
  41e61d:	mov    eax,0x0
  41e622:	jmp    41e66c <flatcc_builder_offset_vector_push@@Base+0xa5>
  41e624:	mov    rax,QWORD PTR [rbp-0x18]
  41e628:	mov    rax,QWORD PTR [rax+0x30]
  41e62c:	mov    edx,DWORD PTR [rax+0x14]
  41e62f:	mov    rax,QWORD PTR [rbp-0x18]
  41e633:	mov    rax,QWORD PTR [rax+0x30]
  41e637:	inc    edx
  41e639:	mov    DWORD PTR [rax+0x14],edx
  41e63c:	mov    rax,QWORD PTR [rbp-0x18]
  41e640:	mov    esi,0x4
  41e645:	mov    rdi,rax
  41e648:	call   41c378 <flatcc_builder_default_alloc@@Base+0x26a>
  41e64d:	mov    QWORD PTR [rbp-0x8],rax
  41e651:	cmp    QWORD PTR [rbp-0x8],0x0
  41e656:	jne    41e65f <flatcc_builder_offset_vector_push@@Base+0x98>
  41e658:	mov    eax,0x0
  41e65d:	jmp    41e66c <flatcc_builder_offset_vector_push@@Base+0xa5>
  41e65f:	mov    rax,QWORD PTR [rbp-0x8]
  41e663:	mov    edx,DWORD PTR [rbp-0x1c]
  41e666:	mov    DWORD PTR [rax],edx
  41e668:	mov    rax,QWORD PTR [rbp-0x8]
  41e66c:	leave  
  41e66d:	ret    

000000000041e66e <flatcc_builder_append_offset_vector@@Base>:
  41e66e:	endbr64 
  41e672:	push   rbp
  41e673:	mov    rbp,rsp
  41e676:	sub    rsp,0x20
  41e67a:	mov    QWORD PTR [rbp-0x8],rdi
  41e67e:	mov    QWORD PTR [rbp-0x10],rsi
  41e682:	mov    QWORD PTR [rbp-0x18],rdx
  41e686:	mov    rax,QWORD PTR [rbp-0x8]
  41e68a:	mov    rax,QWORD PTR [rax+0x30]
  41e68e:	movzx  eax,WORD PTR [rax+0xe]
  41e692:	cmp    ax,0x5
  41e696:	je     41e6b7 <flatcc_builder_append_offset_vector@@Base+0x49>
  41e698:	lea    rcx,[rip+0x1d121]        # 43b7c0 <flatcc_builder_padding_base@@Base+0x840>
  41e69f:	mov    edx,0x3b4
  41e6a4:	lea    rsi,[rip+0x1cad5]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41e6ab:	lea    rdi,[rip+0x1cc86]        # 43b338 <flatcc_builder_padding_base@@Base+0x3b8>
  41e6b2:	call   4061b0 <__assert_fail@plt>
  41e6b7:	mov    rax,QWORD PTR [rbp-0x18]
  41e6bb:	mov    ecx,eax
  41e6bd:	mov    rax,QWORD PTR [rbp-0x8]
  41e6c1:	mov    edx,0x3fffffff
  41e6c6:	mov    esi,ecx
  41e6c8:	mov    rdi,rax
  41e6cb:	call   41e31d <flatcc_builder_end_struct@@Base+0x92>
  41e6d0:	test   eax,eax
  41e6d2:	je     41e6db <flatcc_builder_append_offset_vector@@Base+0x6d>
  41e6d4:	mov    eax,0x0
  41e6d9:	jmp    41e6f9 <flatcc_builder_append_offset_vector@@Base+0x8b>
  41e6db:	mov    rax,QWORD PTR [rbp-0x18]
  41e6df:	lea    edx,[rax*4+0x0]
  41e6e6:	mov    rcx,QWORD PTR [rbp-0x10]
  41e6ea:	mov    rax,QWORD PTR [rbp-0x8]
  41e6ee:	mov    rsi,rcx
  41e6f1:	mov    rdi,rax
  41e6f4:	call   41c440 <flatcc_builder_default_alloc@@Base+0x332>
  41e6f9:	leave  
  41e6fa:	ret    

000000000041e6fb <flatcc_builder_extend_string@@Base>:
  41e6fb:	endbr64 
  41e6ff:	push   rbp
  41e700:	mov    rbp,rsp
  41e703:	sub    rsp,0x10
  41e707:	mov    QWORD PTR [rbp-0x8],rdi
  41e70b:	mov    QWORD PTR [rbp-0x10],rsi
  41e70f:	mov    rax,QWORD PTR [rbp-0x8]
  41e713:	mov    rax,QWORD PTR [rax+0x30]
  41e717:	movzx  eax,WORD PTR [rax+0xe]
  41e71b:	cmp    ax,0x6
  41e71f:	je     41e740 <flatcc_builder_extend_string@@Base+0x45>
  41e721:	lea    rcx,[rip+0x1d0c8]        # 43b7f0 <flatcc_builder_padding_base@@Base+0x870>
  41e728:	mov    edx,0x3bd
  41e72d:	lea    rsi,[rip+0x1ca4c]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41e734:	lea    rdi,[rip+0x1cc35]        # 43b370 <flatcc_builder_padding_base@@Base+0x3f0>
  41e73b:	call   4061b0 <__assert_fail@plt>
  41e740:	mov    rax,QWORD PTR [rbp-0x10]
  41e744:	mov    ecx,eax
  41e746:	mov    rax,QWORD PTR [rbp-0x8]
  41e74a:	mov    edx,0xffffffff
  41e74f:	mov    esi,ecx
  41e751:	mov    rdi,rax
  41e754:	call   41e31d <flatcc_builder_end_struct@@Base+0x92>
  41e759:	test   eax,eax
  41e75b:	je     41e764 <flatcc_builder_extend_string@@Base+0x69>
  41e75d:	mov    eax,0x0
  41e762:	jmp    41e778 <flatcc_builder_extend_string@@Base+0x7d>
  41e764:	mov    rax,QWORD PTR [rbp-0x10]
  41e768:	mov    edx,eax
  41e76a:	mov    rax,QWORD PTR [rbp-0x8]
  41e76e:	mov    esi,edx
  41e770:	mov    rdi,rax
  41e773:	call   41c378 <flatcc_builder_default_alloc@@Base+0x26a>
  41e778:	leave  
  41e779:	ret    

000000000041e77a <flatcc_builder_append_string@@Base>:
  41e77a:	endbr64 
  41e77e:	push   rbp
  41e77f:	mov    rbp,rsp
  41e782:	sub    rsp,0x20
  41e786:	mov    QWORD PTR [rbp-0x8],rdi
  41e78a:	mov    QWORD PTR [rbp-0x10],rsi
  41e78e:	mov    QWORD PTR [rbp-0x18],rdx
  41e792:	mov    rax,QWORD PTR [rbp-0x8]
  41e796:	mov    rax,QWORD PTR [rax+0x30]
  41e79a:	movzx  eax,WORD PTR [rax+0xe]
  41e79e:	cmp    ax,0x6
  41e7a2:	je     41e7c3 <flatcc_builder_append_string@@Base+0x49>
  41e7a4:	lea    rcx,[rip+0x1d065]        # 43b810 <flatcc_builder_padding_base@@Base+0x890>
  41e7ab:	mov    edx,0x3c6
  41e7b0:	lea    rsi,[rip+0x1c9c9]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41e7b7:	lea    rdi,[rip+0x1cbb2]        # 43b370 <flatcc_builder_padding_base@@Base+0x3f0>
  41e7be:	call   4061b0 <__assert_fail@plt>
  41e7c3:	mov    rax,QWORD PTR [rbp-0x18]
  41e7c7:	mov    ecx,eax
  41e7c9:	mov    rax,QWORD PTR [rbp-0x8]
  41e7cd:	mov    edx,0xffffffff
  41e7d2:	mov    esi,ecx
  41e7d4:	mov    rdi,rax
  41e7d7:	call   41e31d <flatcc_builder_end_struct@@Base+0x92>
  41e7dc:	test   eax,eax
  41e7de:	je     41e7e7 <flatcc_builder_append_string@@Base+0x6d>
  41e7e0:	mov    eax,0x0
  41e7e5:	jmp    41e800 <flatcc_builder_append_string@@Base+0x86>
  41e7e7:	mov    rax,QWORD PTR [rbp-0x18]
  41e7eb:	mov    edx,eax
  41e7ed:	mov    rcx,QWORD PTR [rbp-0x10]
  41e7f1:	mov    rax,QWORD PTR [rbp-0x8]
  41e7f5:	mov    rsi,rcx
  41e7f8:	mov    rdi,rax
  41e7fb:	call   41c440 <flatcc_builder_default_alloc@@Base+0x332>
  41e800:	leave  
  41e801:	ret    

000000000041e802 <flatcc_builder_append_string_str@@Base>:
  41e802:	endbr64 
  41e806:	push   rbp
  41e807:	mov    rbp,rsp
  41e80a:	sub    rsp,0x10
  41e80e:	mov    QWORD PTR [rbp-0x8],rdi
  41e812:	mov    QWORD PTR [rbp-0x10],rsi
  41e816:	mov    rax,QWORD PTR [rbp-0x10]
  41e81a:	mov    rdi,rax
  41e81d:	call   406190 <strlen@plt>
  41e822:	mov    rdx,rax
  41e825:	mov    rcx,QWORD PTR [rbp-0x10]
  41e829:	mov    rax,QWORD PTR [rbp-0x8]
  41e82d:	mov    rsi,rcx
  41e830:	mov    rdi,rax
  41e833:	call   41e77a <flatcc_builder_append_string@@Base>
  41e838:	leave  
  41e839:	ret    

000000000041e83a <flatcc_builder_append_string_strn@@Base>:
  41e83a:	endbr64 
  41e83e:	push   rbp
  41e83f:	mov    rbp,rsp
  41e842:	sub    rsp,0x20
  41e846:	mov    QWORD PTR [rbp-0x8],rdi
  41e84a:	mov    QWORD PTR [rbp-0x10],rsi
  41e84e:	mov    QWORD PTR [rbp-0x18],rdx
  41e852:	mov    rdx,QWORD PTR [rbp-0x18]
  41e856:	mov    rax,QWORD PTR [rbp-0x10]
  41e85a:	mov    rsi,rdx
  41e85d:	mov    rdi,rax
  41e860:	call   41c0ce <main@@Base+0x1167>
  41e865:	mov    rdx,rax
  41e868:	mov    rcx,QWORD PTR [rbp-0x10]
  41e86c:	mov    rax,QWORD PTR [rbp-0x8]
  41e870:	mov    rsi,rcx
  41e873:	mov    rdi,rax
  41e876:	call   41e77a <flatcc_builder_append_string@@Base>
  41e87b:	leave  
  41e87c:	ret    

000000000041e87d <flatcc_builder_truncate_vector@@Base>:
  41e87d:	endbr64 
  41e881:	push   rbp
  41e882:	mov    rbp,rsp
  41e885:	sub    rsp,0x10
  41e889:	mov    QWORD PTR [rbp-0x8],rdi
  41e88d:	mov    QWORD PTR [rbp-0x10],rsi
  41e891:	mov    rax,QWORD PTR [rbp-0x8]
  41e895:	mov    rax,QWORD PTR [rax+0x30]
  41e899:	movzx  eax,WORD PTR [rax+0xe]
  41e89d:	cmp    ax,0x4
  41e8a1:	je     41e8c2 <flatcc_builder_truncate_vector@@Base+0x45>
  41e8a3:	lea    rcx,[rip+0x1cf86]        # 43b830 <flatcc_builder_padding_base@@Base+0x8b0>
  41e8aa:	mov    edx,0x3d9
  41e8af:	lea    rsi,[rip+0x1c8ca]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41e8b6:	lea    rdi,[rip+0x1ca0b]        # 43b2c8 <flatcc_builder_padding_base@@Base+0x348>
  41e8bd:	call   4061b0 <__assert_fail@plt>
  41e8c2:	mov    rax,QWORD PTR [rbp-0x8]
  41e8c6:	mov    rax,QWORD PTR [rax+0x30]
  41e8ca:	mov    eax,DWORD PTR [rax+0x14]
  41e8cd:	mov    eax,eax
  41e8cf:	cmp    QWORD PTR [rbp-0x10],rax
  41e8d3:	jbe    41e90e <flatcc_builder_truncate_vector@@Base+0x91>
  41e8d5:	mov    rax,QWORD PTR [rbp-0x8]
  41e8d9:	mov    rax,QWORD PTR [rax+0x30]
  41e8dd:	mov    eax,DWORD PTR [rax+0x14]
  41e8e0:	mov    eax,eax
  41e8e2:	cmp    QWORD PTR [rbp-0x10],rax
  41e8e6:	jbe    41e907 <flatcc_builder_truncate_vector@@Base+0x8a>
  41e8e8:	lea    rcx,[rip+0x1cf41]        # 43b830 <flatcc_builder_padding_base@@Base+0x8b0>
  41e8ef:	mov    edx,0x3da
  41e8f4:	lea    rsi,[rip+0x1c885]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41e8fb:	lea    rdi,[rip+0x1ca9e]        # 43b3a0 <flatcc_builder_padding_base@@Base+0x420>
  41e902:	call   4061b0 <__assert_fail@plt>
  41e907:	mov    eax,0xffffffff
  41e90c:	jmp    41e951 <flatcc_builder_truncate_vector@@Base+0xd4>
  41e90e:	mov    rax,QWORD PTR [rbp-0x8]
  41e912:	mov    rax,QWORD PTR [rax+0x30]
  41e916:	mov    edx,DWORD PTR [rax+0x14]
  41e919:	mov    rax,QWORD PTR [rbp-0x10]
  41e91d:	mov    ecx,eax
  41e91f:	mov    rax,QWORD PTR [rbp-0x8]
  41e923:	mov    rax,QWORD PTR [rax+0x30]
  41e927:	sub    edx,ecx
  41e929:	mov    DWORD PTR [rax+0x14],edx
  41e92c:	mov    rax,QWORD PTR [rbp-0x8]
  41e930:	mov    rax,QWORD PTR [rax+0x30]
  41e934:	mov    eax,DWORD PTR [rax+0x10]
  41e937:	mov    rdx,QWORD PTR [rbp-0x10]
  41e93b:	imul   edx,eax
  41e93e:	mov    rax,QWORD PTR [rbp-0x8]
  41e942:	mov    esi,edx
  41e944:	mov    rdi,rax
  41e947:	call   41c3f4 <flatcc_builder_default_alloc@@Base+0x2e6>
  41e94c:	mov    eax,0x0
  41e951:	leave  
  41e952:	ret    

000000000041e953 <flatcc_builder_truncate_offset_vector@@Base>:
  41e953:	endbr64 
  41e957:	push   rbp
  41e958:	mov    rbp,rsp
  41e95b:	sub    rsp,0x10
  41e95f:	mov    QWORD PTR [rbp-0x8],rdi
  41e963:	mov    QWORD PTR [rbp-0x10],rsi
  41e967:	mov    rax,QWORD PTR [rbp-0x8]
  41e96b:	mov    rax,QWORD PTR [rax+0x30]
  41e96f:	movzx  eax,WORD PTR [rax+0xe]
  41e973:	cmp    ax,0x5
  41e977:	je     41e998 <flatcc_builder_truncate_offset_vector@@Base+0x45>
  41e979:	lea    rcx,[rip+0x1cee0]        # 43b860 <flatcc_builder_padding_base@@Base+0x8e0>
  41e980:	mov    edx,0x3e2
  41e985:	lea    rsi,[rip+0x1c7f4]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41e98c:	lea    rdi,[rip+0x1c9a5]        # 43b338 <flatcc_builder_padding_base@@Base+0x3b8>
  41e993:	call   4061b0 <__assert_fail@plt>
  41e998:	mov    rax,QWORD PTR [rbp-0x8]
  41e99c:	mov    rax,QWORD PTR [rax+0x30]
  41e9a0:	mov    eax,DWORD PTR [rax+0x14]
  41e9a3:	mov    rdx,QWORD PTR [rbp-0x10]
  41e9a7:	cmp    eax,edx
  41e9a9:	jae    41e9e4 <flatcc_builder_truncate_offset_vector@@Base+0x91>
  41e9ab:	mov    rax,QWORD PTR [rbp-0x8]
  41e9af:	mov    rax,QWORD PTR [rax+0x30]
  41e9b3:	mov    eax,DWORD PTR [rax+0x14]
  41e9b6:	mov    rdx,QWORD PTR [rbp-0x10]
  41e9ba:	cmp    eax,edx
  41e9bc:	jae    41e9dd <flatcc_builder_truncate_offset_vector@@Base+0x8a>
  41e9be:	lea    rcx,[rip+0x1ce9b]        # 43b860 <flatcc_builder_padding_base@@Base+0x8e0>
  41e9c5:	mov    edx,0x3e3
  41e9ca:	lea    rsi,[rip+0x1c7af]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41e9d1:	lea    rdi,[rip+0x1c9f0]        # 43b3c8 <flatcc_builder_padding_base@@Base+0x448>
  41e9d8:	call   4061b0 <__assert_fail@plt>
  41e9dd:	mov    eax,0xffffffff
  41e9e2:	jmp    41ea27 <flatcc_builder_truncate_offset_vector@@Base+0xd4>
  41e9e4:	mov    rax,QWORD PTR [rbp-0x8]
  41e9e8:	mov    rax,QWORD PTR [rax+0x30]
  41e9ec:	mov    edx,DWORD PTR [rax+0x14]
  41e9ef:	mov    rax,QWORD PTR [rbp-0x10]
  41e9f3:	mov    ecx,eax
  41e9f5:	mov    rax,QWORD PTR [rbp-0x8]
  41e9f9:	mov    rax,QWORD PTR [rax+0x30]
  41e9fd:	sub    edx,ecx
  41e9ff:	mov    DWORD PTR [rax+0x14],edx
  41ea02:	mov    rax,QWORD PTR [rbp-0x8]
  41ea06:	mov    rax,QWORD PTR [rax+0x30]
  41ea0a:	mov    eax,DWORD PTR [rax+0x10]
  41ea0d:	mov    rdx,QWORD PTR [rbp-0x10]
  41ea11:	imul   edx,eax
  41ea14:	mov    rax,QWORD PTR [rbp-0x8]
  41ea18:	mov    esi,edx
  41ea1a:	mov    rdi,rax
  41ea1d:	call   41c3f4 <flatcc_builder_default_alloc@@Base+0x2e6>
  41ea22:	mov    eax,0x0
  41ea27:	leave  
  41ea28:	ret    

000000000041ea29 <flatcc_builder_truncate_string@@Base>:
  41ea29:	endbr64 
  41ea2d:	push   rbp
  41ea2e:	mov    rbp,rsp
  41ea31:	sub    rsp,0x10
  41ea35:	mov    QWORD PTR [rbp-0x8],rdi
  41ea39:	mov    QWORD PTR [rbp-0x10],rsi
  41ea3d:	mov    rax,QWORD PTR [rbp-0x8]
  41ea41:	mov    rax,QWORD PTR [rax+0x30]
  41ea45:	movzx  eax,WORD PTR [rax+0xe]
  41ea49:	cmp    ax,0x6
  41ea4d:	je     41ea6e <flatcc_builder_truncate_string@@Base+0x45>
  41ea4f:	lea    rcx,[rip+0x1ce3a]        # 43b890 <flatcc_builder_padding_base@@Base+0x910>
  41ea56:	mov    edx,0x3eb
  41ea5b:	lea    rsi,[rip+0x1c71e]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41ea62:	lea    rdi,[rip+0x1c907]        # 43b370 <flatcc_builder_padding_base@@Base+0x3f0>
  41ea69:	call   4061b0 <__assert_fail@plt>
  41ea6e:	mov    rax,QWORD PTR [rbp-0x8]
  41ea72:	mov    rax,QWORD PTR [rax+0x30]
  41ea76:	mov    eax,DWORD PTR [rax+0x14]
  41ea79:	mov    eax,eax
  41ea7b:	cmp    QWORD PTR [rbp-0x10],rax
  41ea7f:	jbe    41eaba <flatcc_builder_truncate_string@@Base+0x91>
  41ea81:	mov    rax,QWORD PTR [rbp-0x8]
  41ea85:	mov    rax,QWORD PTR [rax+0x30]
  41ea89:	mov    eax,DWORD PTR [rax+0x14]
  41ea8c:	mov    eax,eax
  41ea8e:	cmp    QWORD PTR [rbp-0x10],rax
  41ea92:	jbe    41eab3 <flatcc_builder_truncate_string@@Base+0x8a>
  41ea94:	lea    rcx,[rip+0x1cdf5]        # 43b890 <flatcc_builder_padding_base@@Base+0x910>
  41ea9b:	mov    edx,0x3ec
  41eaa0:	lea    rsi,[rip+0x1c6d9]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41eaa7:	lea    rdi,[rip+0x1c95a]        # 43b408 <flatcc_builder_padding_base@@Base+0x488>
  41eaae:	call   4061b0 <__assert_fail@plt>
  41eab3:	mov    eax,0xffffffff
  41eab8:	jmp    41eaf1 <flatcc_builder_truncate_string@@Base+0xc8>
  41eaba:	mov    rax,QWORD PTR [rbp-0x8]
  41eabe:	mov    rax,QWORD PTR [rax+0x30]
  41eac2:	mov    edx,DWORD PTR [rax+0x14]
  41eac5:	mov    rax,QWORD PTR [rbp-0x10]
  41eac9:	mov    ecx,eax
  41eacb:	mov    rax,QWORD PTR [rbp-0x8]
  41eacf:	mov    rax,QWORD PTR [rax+0x30]
  41ead3:	sub    edx,ecx
  41ead5:	mov    DWORD PTR [rax+0x14],edx
  41ead8:	mov    rax,QWORD PTR [rbp-0x10]
  41eadc:	mov    edx,eax
  41eade:	mov    rax,QWORD PTR [rbp-0x8]
  41eae2:	mov    esi,edx
  41eae4:	mov    rdi,rax
  41eae7:	call   41c3f4 <flatcc_builder_default_alloc@@Base+0x2e6>
  41eaec:	mov    eax,0x0
  41eaf1:	leave  
  41eaf2:	ret    

000000000041eaf3 <flatcc_builder_start_vector@@Base>:
  41eaf3:	endbr64 
  41eaf7:	push   rbp
  41eaf8:	mov    rbp,rsp
  41eafb:	sub    rsp,0x20
  41eaff:	mov    QWORD PTR [rbp-0x8],rdi
  41eb03:	mov    QWORD PTR [rbp-0x10],rsi
  41eb07:	mov    eax,edx
  41eb09:	mov    QWORD PTR [rbp-0x20],rcx
  41eb0d:	mov    WORD PTR [rbp-0x14],ax
  41eb11:	lea    rax,[rbp-0x14]
  41eb15:	mov    esi,0x4
  41eb1a:	mov    rdi,rax
  41eb1d:	call   41cdab <flatcc_builder_clear@@Base+0xca>
  41eb22:	movzx  eax,WORD PTR [rbp-0x14]
  41eb26:	movzx  edx,ax
  41eb29:	mov    rax,QWORD PTR [rbp-0x8]
  41eb2d:	mov    esi,edx
  41eb2f:	mov    rdi,rax
  41eb32:	call   41d0ab <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  41eb37:	test   eax,eax
  41eb39:	je     41eb42 <flatcc_builder_start_vector@@Base+0x4f>
  41eb3b:	mov    eax,0xffffffff
  41eb40:	jmp    41eb93 <flatcc_builder_start_vector@@Base+0xa0>
  41eb42:	mov    rax,QWORD PTR [rbp-0x8]
  41eb46:	mov    rax,QWORD PTR [rax+0x30]
  41eb4a:	mov    rdx,QWORD PTR [rbp-0x10]
  41eb4e:	mov    DWORD PTR [rax+0x10],edx
  41eb51:	mov    rax,QWORD PTR [rbp-0x8]
  41eb55:	mov    rax,QWORD PTR [rax+0x30]
  41eb59:	mov    DWORD PTR [rax+0x14],0x0
  41eb60:	mov    rax,QWORD PTR [rbp-0x8]
  41eb64:	mov    rax,QWORD PTR [rax+0x30]
  41eb68:	mov    rdx,QWORD PTR [rbp-0x20]
  41eb6c:	mov    DWORD PTR [rax+0x18],edx
  41eb6f:	mov    rax,QWORD PTR [rbp-0x8]
  41eb73:	mov    rax,QWORD PTR [rax+0x30]
  41eb77:	mov    WORD PTR [rax+0xe],0x4
  41eb7d:	mov    rax,QWORD PTR [rbp-0x8]
  41eb81:	mov    esi,0xfffffffc
  41eb86:	mov    rdi,rax
  41eb89:	call   41c281 <flatcc_builder_default_alloc@@Base+0x173>
  41eb8e:	mov    eax,0x0
  41eb93:	leave  
  41eb94:	ret    

000000000041eb95 <flatcc_builder_start_offset_vector@@Base>:
  41eb95:	endbr64 
  41eb99:	push   rbp
  41eb9a:	mov    rbp,rsp
  41eb9d:	sub    rsp,0x10
  41eba1:	mov    QWORD PTR [rbp-0x8],rdi
  41eba5:	mov    rax,QWORD PTR [rbp-0x8]
  41eba9:	mov    esi,0x4
  41ebae:	mov    rdi,rax
  41ebb1:	call   41d0ab <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  41ebb6:	test   eax,eax
  41ebb8:	je     41ebc1 <flatcc_builder_start_offset_vector@@Base+0x2c>
  41ebba:	mov    eax,0xffffffff
  41ebbf:	jmp    41ec03 <flatcc_builder_start_offset_vector@@Base+0x6e>
  41ebc1:	mov    rax,QWORD PTR [rbp-0x8]
  41ebc5:	mov    rax,QWORD PTR [rax+0x30]
  41ebc9:	mov    DWORD PTR [rax+0x10],0x4
  41ebd0:	mov    rax,QWORD PTR [rbp-0x8]
  41ebd4:	mov    rax,QWORD PTR [rax+0x30]
  41ebd8:	mov    DWORD PTR [rax+0x14],0x0
  41ebdf:	mov    rax,QWORD PTR [rbp-0x8]
  41ebe3:	mov    rax,QWORD PTR [rax+0x30]
  41ebe7:	mov    WORD PTR [rax+0xe],0x5
  41ebed:	mov    rax,QWORD PTR [rbp-0x8]
  41ebf1:	mov    esi,0xfffffffc
  41ebf6:	mov    rdi,rax
  41ebf9:	call   41c281 <flatcc_builder_default_alloc@@Base+0x173>
  41ebfe:	mov    eax,0x0
  41ec03:	leave  
  41ec04:	ret    

000000000041ec05 <flatcc_builder_create_offset_vector@@Base>:
  41ec05:	endbr64 
  41ec09:	push   rbp
  41ec0a:	mov    rbp,rsp
  41ec0d:	sub    rsp,0x30
  41ec11:	mov    QWORD PTR [rbp-0x18],rdi
  41ec15:	mov    QWORD PTR [rbp-0x20],rsi
  41ec19:	mov    QWORD PTR [rbp-0x28],rdx
  41ec1d:	mov    rax,QWORD PTR [rbp-0x18]
  41ec21:	mov    rdi,rax
  41ec24:	call   41eb95 <flatcc_builder_start_offset_vector@@Base>
  41ec29:	test   eax,eax
  41ec2b:	je     41ec34 <flatcc_builder_create_offset_vector@@Base+0x2f>
  41ec2d:	mov    eax,0x0
  41ec32:	jmp    41ec84 <flatcc_builder_create_offset_vector@@Base+0x7f>
  41ec34:	mov    rdx,QWORD PTR [rbp-0x28]
  41ec38:	mov    rax,QWORD PTR [rbp-0x18]
  41ec3c:	mov    rsi,rdx
  41ec3f:	mov    rdi,rax
  41ec42:	call   41e574 <flatcc_builder_extend_offset_vector@@Base>
  41ec47:	mov    QWORD PTR [rbp-0x8],rax
  41ec4b:	cmp    QWORD PTR [rbp-0x8],0x0
  41ec50:	jne    41ec59 <flatcc_builder_create_offset_vector@@Base+0x54>
  41ec52:	mov    eax,0x0
  41ec57:	jmp    41ec84 <flatcc_builder_create_offset_vector@@Base+0x7f>
  41ec59:	mov    rax,QWORD PTR [rbp-0x28]
  41ec5d:	lea    rdx,[rax*4+0x0]
  41ec65:	mov    rcx,QWORD PTR [rbp-0x20]
  41ec69:	mov    rax,QWORD PTR [rbp-0x8]
  41ec6d:	mov    rsi,rcx
  41ec70:	mov    rdi,rax
  41ec73:	call   406220 <memcpy@plt>
  41ec78:	mov    rax,QWORD PTR [rbp-0x18]
  41ec7c:	mov    rdi,rax
  41ec7f:	call   420192 <flatcc_builder_end_offset_vector@@Base>
  41ec84:	leave  
  41ec85:	ret    

000000000041ec86 <flatcc_builder_start_string@@Base>:
  41ec86:	endbr64 
  41ec8a:	push   rbp
  41ec8b:	mov    rbp,rsp
  41ec8e:	sub    rsp,0x10
  41ec92:	mov    QWORD PTR [rbp-0x8],rdi
  41ec96:	mov    rax,QWORD PTR [rbp-0x8]
  41ec9a:	mov    esi,0x1
  41ec9f:	mov    rdi,rax
  41eca2:	call   41d0ab <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  41eca7:	test   eax,eax
  41eca9:	je     41ecb2 <flatcc_builder_start_string@@Base+0x2c>
  41ecab:	mov    eax,0xffffffff
  41ecb0:	jmp    41ecf4 <flatcc_builder_start_string@@Base+0x6e>
  41ecb2:	mov    rax,QWORD PTR [rbp-0x8]
  41ecb6:	mov    rax,QWORD PTR [rax+0x30]
  41ecba:	mov    DWORD PTR [rax+0x10],0x1
  41ecc1:	mov    rax,QWORD PTR [rbp-0x8]
  41ecc5:	mov    rax,QWORD PTR [rax+0x30]
  41ecc9:	mov    DWORD PTR [rax+0x14],0x0
  41ecd0:	mov    rax,QWORD PTR [rbp-0x8]
  41ecd4:	mov    rax,QWORD PTR [rax+0x30]
  41ecd8:	mov    WORD PTR [rax+0xe],0x6
  41ecde:	mov    rax,QWORD PTR [rbp-0x8]
  41ece2:	mov    esi,0xfffffffc
  41ece7:	mov    rdi,rax
  41ecea:	call   41c281 <flatcc_builder_default_alloc@@Base+0x173>
  41ecef:	mov    eax,0x0
  41ecf4:	leave  
  41ecf5:	ret    

000000000041ecf6 <flatcc_builder_reserve_table@@Base>:
  41ecf6:	endbr64 
  41ecfa:	push   rbp
  41ecfb:	mov    rbp,rsp
  41ecfe:	sub    rsp,0x10
  41ed02:	mov    QWORD PTR [rbp-0x8],rdi
  41ed06:	mov    DWORD PTR [rbp-0xc],esi
  41ed09:	cmp    DWORD PTR [rbp-0xc],0x0
  41ed0d:	jns    41ed2e <flatcc_builder_reserve_table@@Base+0x38>
  41ed0f:	lea    rcx,[rip+0x1cb9a]        # 43b8b0 <flatcc_builder_padding_base@@Base+0x930>
  41ed16:	mov    edx,0x429
  41ed1b:	lea    rsi,[rip+0x1c45e]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41ed22:	lea    rdi,[rip+0x1c701]        # 43b42a <flatcc_builder_padding_base@@Base+0x4aa>
  41ed29:	call   4061b0 <__assert_fail@plt>
  41ed2e:	mov    edx,DWORD PTR [rbp-0xc]
  41ed31:	mov    rax,QWORD PTR [rbp-0x8]
  41ed35:	mov    esi,edx
  41ed37:	mov    rdi,rax
  41ed3a:	call   41c6d5 <flatcc_builder_default_alloc@@Base+0x5c7>
  41ed3f:	leave  
  41ed40:	ret    

000000000041ed41 <flatcc_builder_start_table@@Base>:
  41ed41:	endbr64 
  41ed45:	push   rbp
  41ed46:	mov    rbp,rsp
  41ed49:	sub    rsp,0x10
  41ed4d:	mov    QWORD PTR [rbp-0x8],rdi
  41ed51:	mov    DWORD PTR [rbp-0xc],esi
  41ed54:	mov    rax,QWORD PTR [rbp-0x8]
  41ed58:	mov    esi,0x4
  41ed5d:	mov    rdi,rax
  41ed60:	call   41d0ab <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  41ed65:	test   eax,eax
  41ed67:	je     41ed73 <flatcc_builder_start_table@@Base+0x32>
  41ed69:	mov    eax,0xffffffff
  41ed6e:	jmp    41ee3d <flatcc_builder_start_table@@Base+0xfc>
  41ed73:	mov    rax,QWORD PTR [rbp-0x8]
  41ed77:	mov    rax,QWORD PTR [rax+0x8]
  41ed7b:	mov    rdx,rax
  41ed7e:	mov    rax,QWORD PTR [rbp-0x8]
  41ed82:	mov    rax,QWORD PTR [rax+0x58]
  41ed86:	sub    rdx,rax
  41ed89:	mov    rax,QWORD PTR [rbp-0x8]
  41ed8d:	mov    rax,QWORD PTR [rax+0x30]
  41ed91:	mov    DWORD PTR [rax+0x10],edx
  41ed94:	mov    rax,QWORD PTR [rbp-0x8]
  41ed98:	mov    rax,QWORD PTR [rax]
  41ed9b:	mov    rdx,rax
  41ed9e:	mov    rax,QWORD PTR [rbp-0x8]
  41eda2:	mov    rax,QWORD PTR [rax+0x88]
  41eda9:	sub    rdx,rax
  41edac:	mov    rax,QWORD PTR [rbp-0x8]
  41edb0:	mov    rax,QWORD PTR [rax+0x30]
  41edb4:	mov    DWORD PTR [rax+0x14],edx
  41edb7:	mov    rax,QWORD PTR [rbp-0x8]
  41edbb:	mov    rax,QWORD PTR [rax+0x30]
  41edbf:	mov    rdx,QWORD PTR [rbp-0x8]
  41edc3:	mov    edx,DWORD PTR [rdx+0x14]
  41edc6:	mov    DWORD PTR [rax+0x18],edx
  41edc9:	mov    rax,QWORD PTR [rbp-0x8]
  41edcd:	mov    rdx,QWORD PTR [rax+0x30]
  41edd1:	mov    rax,QWORD PTR [rbp-0x8]
  41edd5:	movzx  eax,WORD PTR [rax+0x10]
  41edd9:	mov    WORD PTR [rdx+0x1c],ax
  41eddd:	mov    rax,QWORD PTR [rbp-0x8]
  41ede1:	mov    DWORD PTR [rax+0x14],0x0
  41ede8:	mov    rax,QWORD PTR [rbp-0x8]
  41edec:	mov    DWORD PTR [rax+0x14],0x2f693b52
  41edf3:	mov    rax,QWORD PTR [rbp-0x8]
  41edf7:	mov    WORD PTR [rax+0x10],0x0
  41edfd:	mov    rax,QWORD PTR [rbp-0x8]
  41ee01:	mov    rax,QWORD PTR [rax+0x30]
  41ee05:	mov    WORD PTR [rax+0xe],0x3
  41ee0b:	mov    edx,DWORD PTR [rbp-0xc]
  41ee0e:	mov    rax,QWORD PTR [rbp-0x8]
  41ee12:	mov    esi,edx
  41ee14:	mov    rdi,rax
  41ee17:	call   41c6d5 <flatcc_builder_default_alloc@@Base+0x5c7>
  41ee1c:	test   eax,eax
  41ee1e:	je     41ee27 <flatcc_builder_start_table@@Base+0xe6>
  41ee20:	mov    eax,0xffffffff
  41ee25:	jmp    41ee3d <flatcc_builder_start_table@@Base+0xfc>
  41ee27:	mov    rax,QWORD PTR [rbp-0x8]
  41ee2b:	mov    esi,0xfffc
  41ee30:	mov    rdi,rax
  41ee33:	call   41c281 <flatcc_builder_default_alloc@@Base+0x173>
  41ee38:	mov    eax,0x0
  41ee3d:	leave  
  41ee3e:	ret    

000000000041ee3f <flatcc_builder_create_vtable@@Base>:
  41ee3f:	endbr64 
  41ee43:	push   rbp
  41ee44:	mov    rbp,rsp
  41ee47:	sub    rsp,0xd0
  41ee4e:	mov    QWORD PTR [rbp-0xb8],rdi
  41ee55:	mov    QWORD PTR [rbp-0xc0],rsi
  41ee5c:	mov    eax,edx
  41ee5e:	mov    WORD PTR [rbp-0xc4],ax
  41ee65:	mov    rax,QWORD PTR fs:0x28
  41ee6e:	mov    QWORD PTR [rbp-0x8],rax
  41ee72:	xor    eax,eax
  41ee74:	mov    QWORD PTR [rbp-0xa0],0x0
  41ee7f:	mov    DWORD PTR [rbp-0x98],0x0
  41ee89:	cmp    WORD PTR [rbp-0xc4],0x0
  41ee91:	je     41eefa <flatcc_builder_create_vtable@@Base+0xbb>
  41ee93:	mov    rdx,QWORD PTR [rbp-0xa0]
  41ee9a:	movzx  eax,WORD PTR [rbp-0xc4]
  41eea1:	add    rax,rdx
  41eea4:	mov    QWORD PTR [rbp-0xa0],rax
  41eeab:	mov    eax,DWORD PTR [rbp-0x98]
  41eeb1:	cdqe   
  41eeb3:	shl    rax,0x4
  41eeb7:	add    rax,rbp
  41eeba:	lea    rdx,[rax-0x90]
  41eec1:	mov    rax,QWORD PTR [rbp-0xc0]
  41eec8:	mov    QWORD PTR [rdx],rax
  41eecb:	mov    edx,DWORD PTR [rbp-0x98]
  41eed1:	movzx  eax,WORD PTR [rbp-0xc4]
  41eed8:	movsxd rdx,edx
  41eedb:	shl    rdx,0x4
  41eedf:	add    rdx,rbp
  41eee2:	sub    rdx,0x88
  41eee9:	mov    QWORD PTR [rdx],rax
  41eeec:	mov    eax,DWORD PTR [rbp-0x98]
  41eef2:	inc    eax
  41eef4:	mov    DWORD PTR [rbp-0x98],eax
  41eefa:	mov    rax,QWORD PTR [rbp-0xb8]
  41ef01:	mov    eax,DWORD PTR [rax+0x100]
  41ef07:	test   eax,eax
  41ef09:	jne    41ef4b <flatcc_builder_create_vtable@@Base+0x10c>
  41ef0b:	mov    rax,QWORD PTR [rbp-0xb8]
  41ef12:	mov    eax,DWORD PTR [rax+0x124]
  41ef18:	test   eax,eax
  41ef1a:	jne    41ef4b <flatcc_builder_create_vtable@@Base+0x10c>
  41ef1c:	lea    rdx,[rbp-0xa0]
  41ef23:	mov    rax,QWORD PTR [rbp-0xb8]
  41ef2a:	mov    rsi,rdx
  41ef2d:	mov    rdi,rax
  41ef30:	call   41d476 <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  41ef35:	mov    DWORD PTR [rbp-0xa4],eax
  41ef3b:	cmp    DWORD PTR [rbp-0xa4],0x0
  41ef42:	jne    41ef80 <flatcc_builder_create_vtable@@Base+0x141>
  41ef44:	mov    eax,0x0
  41ef49:	jmp    41ef86 <flatcc_builder_create_vtable@@Base+0x147>
  41ef4b:	lea    rdx,[rbp-0xa0]
  41ef52:	mov    rax,QWORD PTR [rbp-0xb8]
  41ef59:	mov    rsi,rdx
  41ef5c:	mov    rdi,rax
  41ef5f:	call   41d397 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  41ef64:	mov    DWORD PTR [rbp-0xa4],eax
  41ef6a:	cmp    DWORD PTR [rbp-0xa4],0x0
  41ef71:	jne    41ef7a <flatcc_builder_create_vtable@@Base+0x13b>
  41ef73:	mov    eax,0x0
  41ef78:	jmp    41ef86 <flatcc_builder_create_vtable@@Base+0x147>
  41ef7a:	inc    DWORD PTR [rbp-0xa4]
  41ef80:	mov    eax,DWORD PTR [rbp-0xa4]
  41ef86:	mov    rcx,QWORD PTR [rbp-0x8]
  41ef8a:	xor    rcx,QWORD PTR fs:0x28
  41ef93:	je     41ef9a <flatcc_builder_create_vtable@@Base+0x15b>
  41ef95:	call   4061a0 <__stack_chk_fail@plt>
  41ef9a:	leave  
  41ef9b:	ret    

000000000041ef9c <flatcc_builder_create_cached_vtable@@Base>:
  41ef9c:	endbr64 
  41efa0:	push   rbp
  41efa1:	mov    rbp,rsp
  41efa4:	sub    rsp,0x50
  41efa8:	mov    QWORD PTR [rbp-0x38],rdi
  41efac:	mov    QWORD PTR [rbp-0x40],rsi
  41efb0:	mov    eax,edx
  41efb2:	mov    DWORD PTR [rbp-0x48],ecx
  41efb5:	mov    WORD PTR [rbp-0x44],ax
  41efb9:	mov    edx,DWORD PTR [rbp-0x48]
  41efbc:	mov    rax,QWORD PTR [rbp-0x38]
  41efc0:	mov    esi,edx
  41efc2:	mov    rdi,rax
  41efc5:	call   41c8e4 <flatcc_builder_default_alloc@@Base+0x7d6>
  41efca:	mov    QWORD PTR [rbp-0x18],rax
  41efce:	cmp    QWORD PTR [rbp-0x18],0x0
  41efd3:	jne    41efdf <flatcc_builder_create_cached_vtable@@Base+0x43>
  41efd5:	mov    eax,0x0
  41efda:	jmp    41f280 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  41efdf:	mov    rax,QWORD PTR [rbp-0x18]
  41efe3:	mov    QWORD PTR [rbp-0x20],rax
  41efe7:	mov    rax,QWORD PTR [rbp-0x20]
  41efeb:	mov    eax,DWORD PTR [rax]
  41efed:	mov    DWORD PTR [rbp-0x2c],eax
  41eff0:	mov    QWORD PTR [rbp-0x28],0x0
  41eff8:	jmp    41f0d7 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  41effd:	mov    rax,QWORD PTR [rbp-0x38]
  41f001:	mov    rdx,QWORD PTR [rax+0xb8]
  41f008:	mov    eax,DWORD PTR [rbp-0x2c]
  41f00b:	add    rax,rdx
  41f00e:	mov    QWORD PTR [rbp-0x10],rax
  41f012:	mov    rax,QWORD PTR [rbp-0x38]
  41f016:	mov    rdx,QWORD PTR [rax+0x78]
  41f01a:	mov    rax,QWORD PTR [rbp-0x10]
  41f01e:	mov    eax,DWORD PTR [rax+0x8]
  41f021:	mov    eax,eax
  41f023:	add    rax,rdx
  41f026:	mov    QWORD PTR [rbp-0x8],rax
  41f02a:	mov    rax,QWORD PTR [rbp-0x8]
  41f02e:	movzx  eax,WORD PTR [rax]
  41f031:	cmp    WORD PTR [rbp-0x44],ax
  41f035:	jne    41f052 <flatcc_builder_create_cached_vtable@@Base+0xb6>
  41f037:	movzx  edx,WORD PTR [rbp-0x44]
  41f03b:	mov    rcx,QWORD PTR [rbp-0x8]
  41f03f:	mov    rax,QWORD PTR [rbp-0x40]
  41f043:	mov    rsi,rcx
  41f046:	mov    rdi,rax
  41f049:	call   4061f0 <memcmp@plt>
  41f04e:	test   eax,eax
  41f050:	je     41f06a <flatcc_builder_create_cached_vtable@@Base+0xce>
  41f052:	mov    rax,QWORD PTR [rbp-0x10]
  41f056:	add    rax,0xc
  41f05a:	mov    QWORD PTR [rbp-0x20],rax
  41f05e:	mov    rax,QWORD PTR [rbp-0x10]
  41f062:	mov    eax,DWORD PTR [rax+0xc]
  41f065:	mov    DWORD PTR [rbp-0x2c],eax
  41f068:	jmp    41f0d7 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  41f06a:	mov    rax,QWORD PTR [rbp-0x10]
  41f06e:	mov    edx,DWORD PTR [rax+0x4]
  41f071:	mov    rax,QWORD PTR [rbp-0x38]
  41f075:	mov    eax,DWORD PTR [rax+0x100]
  41f07b:	cmp    edx,eax
  41f07d:	je     41f09f <flatcc_builder_create_cached_vtable@@Base+0x103>
  41f07f:	mov    rax,QWORD PTR [rbp-0x10]
  41f083:	mov    QWORD PTR [rbp-0x28],rax
  41f087:	mov    rax,QWORD PTR [rbp-0x10]
  41f08b:	add    rax,0xc
  41f08f:	mov    QWORD PTR [rbp-0x20],rax
  41f093:	mov    rax,QWORD PTR [rbp-0x10]
  41f097:	mov    eax,DWORD PTR [rax+0xc]
  41f09a:	mov    DWORD PTR [rbp-0x2c],eax
  41f09d:	jmp    41f0d7 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  41f09f:	mov    rax,QWORD PTR [rbp-0x20]
  41f0a3:	cmp    rax,QWORD PTR [rbp-0x18]
  41f0a7:	je     41f0cc <flatcc_builder_create_cached_vtable@@Base+0x130>
  41f0a9:	mov    rax,QWORD PTR [rbp-0x10]
  41f0ad:	mov    edx,DWORD PTR [rax+0xc]
  41f0b0:	mov    rax,QWORD PTR [rbp-0x20]
  41f0b4:	mov    DWORD PTR [rax],edx
  41f0b6:	mov    rax,QWORD PTR [rbp-0x18]
  41f0ba:	mov    edx,DWORD PTR [rax]
  41f0bc:	mov    rax,QWORD PTR [rbp-0x10]
  41f0c0:	mov    DWORD PTR [rax+0xc],edx
  41f0c3:	mov    rax,QWORD PTR [rbp-0x18]
  41f0c7:	mov    edx,DWORD PTR [rbp-0x2c]
  41f0ca:	mov    DWORD PTR [rax],edx
  41f0cc:	mov    rax,QWORD PTR [rbp-0x10]
  41f0d0:	mov    eax,DWORD PTR [rax]
  41f0d2:	jmp    41f280 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  41f0d7:	cmp    DWORD PTR [rbp-0x2c],0x0
  41f0db:	jne    41effd <flatcc_builder_create_cached_vtable@@Base+0x61>
  41f0e1:	mov    rax,QWORD PTR [rbp-0x38]
  41f0e5:	mov    eax,DWORD PTR [rax+0xe4]
  41f0eb:	mov    edx,eax
  41f0ed:	mov    rax,QWORD PTR [rbp-0x38]
  41f0f1:	mov    r8d,0x0
  41f0f7:	mov    ecx,0x10
  41f0fc:	mov    esi,0x6
  41f101:	mov    rdi,rax
  41f104:	call   41c624 <flatcc_builder_default_alloc@@Base+0x516>
  41f109:	mov    QWORD PTR [rbp-0x10],rax
  41f10d:	cmp    QWORD PTR [rbp-0x10],0x0
  41f112:	jne    41f11e <flatcc_builder_create_cached_vtable@@Base+0x182>
  41f114:	mov    eax,0x0
  41f119:	jmp    41f280 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  41f11e:	mov    rax,QWORD PTR [rbp-0x38]
  41f122:	mov    eax,DWORD PTR [rax+0xe4]
  41f128:	mov    DWORD PTR [rbp-0x2c],eax
  41f12b:	mov    rax,QWORD PTR [rbp-0x38]
  41f12f:	mov    eax,DWORD PTR [rax+0xe4]
  41f135:	lea    edx,[rax+0x10]
  41f138:	mov    rax,QWORD PTR [rbp-0x38]
  41f13c:	mov    DWORD PTR [rax+0xe4],edx
  41f142:	mov    rax,QWORD PTR [rbp-0x38]
  41f146:	mov    edx,DWORD PTR [rax+0x100]
  41f14c:	mov    rax,QWORD PTR [rbp-0x10]
  41f150:	mov    DWORD PTR [rax+0x4],edx
  41f153:	mov    rax,QWORD PTR [rbp-0x18]
  41f157:	mov    edx,DWORD PTR [rax]
  41f159:	mov    rax,QWORD PTR [rbp-0x10]
  41f15d:	mov    DWORD PTR [rax+0xc],edx
  41f160:	mov    rax,QWORD PTR [rbp-0x18]
  41f164:	mov    edx,DWORD PTR [rbp-0x2c]
  41f167:	mov    DWORD PTR [rax],edx
  41f169:	movzx  edx,WORD PTR [rbp-0x44]
  41f16d:	mov    rcx,QWORD PTR [rbp-0x40]
  41f171:	mov    rax,QWORD PTR [rbp-0x38]
  41f175:	mov    rsi,rcx
  41f178:	mov    rdi,rax
  41f17b:	call   41ee3f <flatcc_builder_create_vtable@@Base>
  41f180:	mov    edx,eax
  41f182:	mov    rax,QWORD PTR [rbp-0x10]
  41f186:	mov    DWORD PTR [rax],edx
  41f188:	mov    rax,QWORD PTR [rbp-0x10]
  41f18c:	mov    eax,DWORD PTR [rax]
  41f18e:	test   eax,eax
  41f190:	jne    41f19c <flatcc_builder_create_cached_vtable@@Base+0x200>
  41f192:	mov    eax,0x0
  41f197:	jmp    41f280 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  41f19c:	cmp    QWORD PTR [rbp-0x28],0x0
  41f1a1:	je     41f1b6 <flatcc_builder_create_cached_vtable@@Base+0x21a>
  41f1a3:	mov    rax,QWORD PTR [rbp-0x28]
  41f1a7:	mov    edx,DWORD PTR [rax+0x8]
  41f1aa:	mov    rax,QWORD PTR [rbp-0x10]
  41f1ae:	mov    DWORD PTR [rax+0x8],edx
  41f1b1:	jmp    41f27a <flatcc_builder_create_cached_vtable@@Base+0x2de>
  41f1b6:	mov    rax,QWORD PTR [rbp-0x38]
  41f1ba:	mov    rax,QWORD PTR [rax+0x118]
  41f1c1:	test   rax,rax
  41f1c4:	je     41f1f9 <flatcc_builder_create_cached_vtable@@Base+0x25d>
  41f1c6:	mov    rax,QWORD PTR [rbp-0x38]
  41f1ca:	mov    rdx,QWORD PTR [rax+0x118]
  41f1d1:	mov    rax,QWORD PTR [rbp-0x38]
  41f1d5:	mov    ecx,DWORD PTR [rax+0xe0]
  41f1db:	movzx  eax,WORD PTR [rbp-0x44]
  41f1df:	add    eax,ecx
  41f1e1:	mov    eax,eax
  41f1e3:	cmp    rdx,rax
  41f1e6:	jae    41f1f9 <flatcc_builder_create_cached_vtable@@Base+0x25d>
  41f1e8:	mov    rax,QWORD PTR [rbp-0x38]
  41f1ec:	mov    rdi,rax
  41f1ef:	call   41c958 <flatcc_builder_flush_vtable_cache@@Base>
  41f1f4:	jmp    41f27a <flatcc_builder_create_cached_vtable@@Base+0x2de>
  41f1f9:	movzx  edx,WORD PTR [rbp-0x44]
  41f1fd:	mov    rax,QWORD PTR [rbp-0x38]
  41f201:	mov    eax,DWORD PTR [rax+0xe0]
  41f207:	mov    esi,eax
  41f209:	mov    rax,QWORD PTR [rbp-0x38]
  41f20d:	mov    r8d,0x0
  41f213:	mov    rcx,rdx
  41f216:	mov    rdx,rsi
  41f219:	mov    esi,0x2
  41f21e:	mov    rdi,rax
  41f221:	call   41c624 <flatcc_builder_default_alloc@@Base+0x516>
  41f226:	mov    QWORD PTR [rbp-0x8],rax
  41f22a:	cmp    QWORD PTR [rbp-0x8],0x0
  41f22f:	jne    41f238 <flatcc_builder_create_cached_vtable@@Base+0x29c>
  41f231:	mov    eax,0xffffffff
  41f236:	jmp    41f280 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  41f238:	mov    rax,QWORD PTR [rbp-0x38]
  41f23c:	mov    edx,DWORD PTR [rax+0xe0]
  41f242:	mov    rax,QWORD PTR [rbp-0x10]
  41f246:	mov    DWORD PTR [rax+0x8],edx
  41f249:	mov    rax,QWORD PTR [rbp-0x38]
  41f24d:	mov    edx,DWORD PTR [rax+0xe0]
  41f253:	movzx  eax,WORD PTR [rbp-0x44]
  41f257:	add    edx,eax
  41f259:	mov    rax,QWORD PTR [rbp-0x38]
  41f25d:	mov    DWORD PTR [rax+0xe0],edx
  41f263:	movzx  edx,WORD PTR [rbp-0x44]
  41f267:	mov    rcx,QWORD PTR [rbp-0x40]
  41f26b:	mov    rax,QWORD PTR [rbp-0x8]
  41f26f:	mov    rsi,rcx
  41f272:	mov    rdi,rax
  41f275:	call   406220 <memcpy@plt>
  41f27a:	mov    rax,QWORD PTR [rbp-0x10]
  41f27e:	mov    eax,DWORD PTR [rax]
  41f280:	leave  
  41f281:	ret    

000000000041f282 <flatcc_builder_create_table@@Base>:
  41f282:	endbr64 
  41f286:	push   rbp
  41f287:	mov    rbp,rsp
  41f28a:	sub    rsp,0x100
  41f291:	mov    QWORD PTR [rbp-0xd8],rdi
  41f298:	mov    QWORD PTR [rbp-0xe0],rsi
  41f29f:	mov    QWORD PTR [rbp-0xe8],rdx
  41f2a6:	mov    eax,ecx
  41f2a8:	mov    QWORD PTR [rbp-0xf8],r8
  41f2af:	mov    DWORD PTR [rbp-0xf0],r9d
  41f2b6:	mov    WORD PTR [rbp-0xec],ax
  41f2bd:	mov    rax,QWORD PTR fs:0x28
  41f2c6:	mov    QWORD PTR [rbp-0x8],rax
  41f2ca:	xor    eax,eax
  41f2cc:	cmp    DWORD PTR [rbp-0xf0],0x0
  41f2d3:	jns    41f2f4 <flatcc_builder_create_table@@Base+0x72>
  41f2d5:	lea    rcx,[rip+0x1c5f4]        # 43b8d0 <flatcc_builder_padding_base@@Base+0x950>
  41f2dc:	mov    edx,0x4d5
  41f2e1:	lea    rsi,[rip+0x1be98]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41f2e8:	lea    rdi,[rip+0x1c146]        # 43b435 <flatcc_builder_padding_base@@Base+0x4b5>
  41f2ef:	call   4061b0 <__assert_fail@plt>
  41f2f4:	mov    eax,DWORD PTR [rbp+0x10]
  41f2f7:	and    eax,0x1
  41f2fa:	test   eax,eax
  41f2fc:	jne    41f31d <flatcc_builder_create_table@@Base+0x9b>
  41f2fe:	lea    rcx,[rip+0x1c5cb]        # 43b8d0 <flatcc_builder_padding_base@@Base+0x950>
  41f305:	mov    edx,0x4db
  41f30a:	lea    rsi,[rip+0x1be6f]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41f311:	lea    rdi,[rip+0x1c12f]        # 43b447 <flatcc_builder_padding_base@@Base+0x4c7>
  41f318:	call   4061b0 <__assert_fail@plt>
  41f31d:	lea    rax,[rbp-0xec]
  41f324:	mov    esi,0x4
  41f329:	mov    rdi,rax
  41f32c:	call   41cdab <flatcc_builder_clear@@Base+0xca>
  41f331:	movzx  eax,WORD PTR [rbp-0xec]
  41f338:	movzx  edx,ax
  41f33b:	mov    rax,QWORD PTR [rbp-0xd8]
  41f342:	mov    esi,edx
  41f344:	mov    rdi,rax
  41f347:	call   41cd7a <flatcc_builder_clear@@Base+0x99>
  41f34c:	movzx  eax,WORD PTR [rbp-0xec]
  41f353:	movzx  edx,ax
  41f356:	mov    rax,QWORD PTR [rbp-0xe8]
  41f35d:	mov    ecx,eax
  41f35f:	mov    rax,QWORD PTR [rbp-0xd8]
  41f366:	mov    esi,ecx
  41f368:	mov    rdi,rax
  41f36b:	call   41d34d <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  41f370:	mov    DWORD PTR [rbp-0xbc],eax
  41f376:	mov    rax,QWORD PTR [rbp-0xd8]
  41f37d:	mov    eax,DWORD PTR [rax+0xf0]
  41f383:	mov    edx,eax
  41f385:	mov    rax,QWORD PTR [rbp-0xe8]
  41f38c:	mov    ecx,eax
  41f38e:	mov    eax,DWORD PTR [rbp-0xbc]
  41f394:	add    eax,ecx
  41f396:	sub    edx,eax
  41f398:	mov    eax,edx
  41f39a:	sub    eax,0x4
  41f39d:	mov    DWORD PTR [rbp-0xb8],eax
  41f3a3:	mov    eax,DWORD PTR [rbp+0x10]
  41f3a6:	dec    eax
  41f3a8:	mov    DWORD PTR [rbp-0xb4],eax
  41f3ae:	mov    eax,DWORD PTR [rbp-0xb8]
  41f3b4:	sub    eax,DWORD PTR [rbp-0xb4]
  41f3ba:	mov    DWORD PTR [rbp-0xb0],eax
  41f3c0:	mov    eax,DWORD PTR [rbp-0xb8]
  41f3c6:	sub    eax,DWORD PTR [rbp-0xb0]
  41f3cc:	cmp    DWORD PTR [rbp-0xb4],eax
  41f3d2:	je     41f3de <flatcc_builder_create_table@@Base+0x15c>
  41f3d4:	mov    eax,0xffffffff
  41f3d9:	jmp    41f5fe <flatcc_builder_create_table@@Base+0x37c>
  41f3de:	mov    eax,DWORD PTR [rbp-0xb0]
  41f3e4:	mov    edi,eax
  41f3e6:	call   41c04e <main@@Base+0x10e7>
  41f3eb:	mov    DWORD PTR [rbp-0xc4],eax
  41f3f1:	mov    DWORD PTR [rbp-0xc0],0x0
  41f3fb:	jmp    41f485 <flatcc_builder_create_table@@Base+0x203>
  41f400:	mov    eax,DWORD PTR [rbp-0xc0]
  41f406:	cdqe   
  41f408:	lea    rdx,[rax+rax*1]
  41f40c:	mov    rax,QWORD PTR [rbp-0xf8]
  41f413:	add    rax,rdx
  41f416:	movzx  eax,WORD PTR [rax]
  41f419:	movzx  edx,ax
  41f41c:	mov    rax,QWORD PTR [rbp-0xe0]
  41f423:	add    rax,rdx
  41f426:	mov    QWORD PTR [rbp-0xa8],rax
  41f42d:	mov    rax,QWORD PTR [rbp-0xa8]
  41f434:	mov    eax,DWORD PTR [rax]
  41f436:	sub    eax,DWORD PTR [rbp-0xb8]
  41f43c:	mov    edx,eax
  41f43e:	mov    eax,DWORD PTR [rbp-0xc0]
  41f444:	cdqe   
  41f446:	lea    rcx,[rax+rax*1]
  41f44a:	mov    rax,QWORD PTR [rbp-0xf8]
  41f451:	add    rax,rcx
  41f454:	movzx  eax,WORD PTR [rax]
  41f457:	movzx  eax,ax
  41f45a:	sub    edx,eax
  41f45c:	mov    eax,edx
  41f45e:	sub    eax,0x4
  41f461:	mov    DWORD PTR [rbp-0xac],eax
  41f467:	mov    eax,DWORD PTR [rbp-0xac]
  41f46d:	mov    edi,eax
  41f46f:	call   41c04e <main@@Base+0x10e7>
  41f474:	mov    edx,eax
  41f476:	mov    rax,QWORD PTR [rbp-0xa8]
  41f47d:	mov    DWORD PTR [rax],edx
  41f47f:	inc    DWORD PTR [rbp-0xc0]
  41f485:	mov    eax,DWORD PTR [rbp-0xc0]
  41f48b:	cmp    eax,DWORD PTR [rbp-0xf0]
  41f491:	jl     41f400 <flatcc_builder_create_table@@Base+0x17e>
  41f497:	mov    QWORD PTR [rbp-0xa0],0x0
  41f4a2:	mov    DWORD PTR [rbp-0x98],0x0
  41f4ac:	mov    rax,QWORD PTR [rbp-0xa0]
  41f4b3:	add    rax,0x4
  41f4b7:	mov    QWORD PTR [rbp-0xa0],rax
  41f4be:	mov    eax,DWORD PTR [rbp-0x98]
  41f4c4:	cdqe   
  41f4c6:	shl    rax,0x4
  41f4ca:	add    rax,rbp
  41f4cd:	lea    rdx,[rax-0x90]
  41f4d4:	lea    rax,[rbp-0xc4]
  41f4db:	mov    QWORD PTR [rdx],rax
  41f4de:	mov    eax,DWORD PTR [rbp-0x98]
  41f4e4:	cdqe   
  41f4e6:	shl    rax,0x4
  41f4ea:	add    rax,rbp
  41f4ed:	sub    rax,0x88
  41f4f3:	mov    QWORD PTR [rax],0x4
  41f4fa:	mov    eax,DWORD PTR [rbp-0x98]
  41f500:	inc    eax
  41f502:	mov    DWORD PTR [rbp-0x98],eax
  41f508:	cmp    QWORD PTR [rbp-0xe8],0x0
  41f510:	je     41f578 <flatcc_builder_create_table@@Base+0x2f6>
  41f512:	mov    rdx,QWORD PTR [rbp-0xa0]
  41f519:	mov    rax,QWORD PTR [rbp-0xe8]
  41f520:	add    rax,rdx
  41f523:	mov    QWORD PTR [rbp-0xa0],rax
  41f52a:	mov    eax,DWORD PTR [rbp-0x98]
  41f530:	cdqe   
  41f532:	shl    rax,0x4
  41f536:	add    rax,rbp
  41f539:	lea    rdx,[rax-0x90]
  41f540:	mov    rax,QWORD PTR [rbp-0xe0]
  41f547:	mov    QWORD PTR [rdx],rax
  41f54a:	mov    eax,DWORD PTR [rbp-0x98]
  41f550:	cdqe   
  41f552:	shl    rax,0x4
  41f556:	add    rax,rbp
  41f559:	lea    rdx,[rax-0x88]
  41f560:	mov    rax,QWORD PTR [rbp-0xe8]
  41f567:	mov    QWORD PTR [rdx],rax
  41f56a:	mov    eax,DWORD PTR [rbp-0x98]
  41f570:	inc    eax
  41f572:	mov    DWORD PTR [rbp-0x98],eax
  41f578:	cmp    DWORD PTR [rbp-0xbc],0x0
  41f57f:	je     41f5e5 <flatcc_builder_create_table@@Base+0x363>
  41f581:	mov    rdx,QWORD PTR [rbp-0xa0]
  41f588:	mov    eax,DWORD PTR [rbp-0xbc]
  41f58e:	add    rax,rdx
  41f591:	mov    QWORD PTR [rbp-0xa0],rax
  41f598:	mov    eax,DWORD PTR [rbp-0x98]
  41f59e:	cdqe   
  41f5a0:	shl    rax,0x4
  41f5a4:	add    rax,rbp
  41f5a7:	sub    rax,0x90
  41f5ad:	mov    rdx,0x43af80
  41f5b4:	mov    QWORD PTR [rax],rdx
  41f5b7:	mov    edx,DWORD PTR [rbp-0x98]
  41f5bd:	mov    eax,DWORD PTR [rbp-0xbc]
  41f5c3:	movsxd rdx,edx
  41f5c6:	shl    rdx,0x4
  41f5ca:	add    rdx,rbp
  41f5cd:	sub    rdx,0x88
  41f5d4:	mov    QWORD PTR [rdx],rax
  41f5d7:	mov    eax,DWORD PTR [rbp-0x98]
  41f5dd:	inc    eax
  41f5df:	mov    DWORD PTR [rbp-0x98],eax
  41f5e5:	lea    rdx,[rbp-0xa0]
  41f5ec:	mov    rax,QWORD PTR [rbp-0xd8]
  41f5f3:	mov    rsi,rdx
  41f5f6:	mov    rdi,rax
  41f5f9:	call   41d397 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  41f5fe:	mov    rsi,QWORD PTR [rbp-0x8]
  41f602:	xor    rsi,QWORD PTR fs:0x28
  41f60b:	je     41f612 <flatcc_builder_create_table@@Base+0x390>
  41f60d:	call   4061a0 <__stack_chk_fail@plt>
  41f612:	leave  
  41f613:	ret    

000000000041f614 <flatcc_builder_check_required_field@@Base>:
  41f614:	endbr64 
  41f618:	push   rbp
  41f619:	mov    rbp,rsp
  41f61c:	sub    rsp,0x10
  41f620:	mov    QWORD PTR [rbp-0x8],rdi
  41f624:	mov    eax,esi
  41f626:	mov    WORD PTR [rbp-0xc],ax
  41f62a:	mov    rax,QWORD PTR [rbp-0x8]
  41f62e:	mov    rax,QWORD PTR [rax+0x30]
  41f632:	movzx  eax,WORD PTR [rax+0xe]
  41f636:	cmp    ax,0x3
  41f63a:	je     41f65b <flatcc_builder_check_required_field@@Base+0x47>
  41f63c:	lea    rcx,[rip+0x1c2bd]        # 43b900 <flatcc_builder_padding_base@@Base+0x980>
  41f643:	mov    edx,0x4f8
  41f648:	lea    rsi,[rip+0x1bb31]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41f64f:	lea    rdi,[rip+0x1be02]        # 43b458 <flatcc_builder_padding_base@@Base+0x4d8>
  41f656:	call   4061b0 <__assert_fail@plt>
  41f65b:	mov    rax,QWORD PTR [rbp-0x8]
  41f65f:	movzx  eax,WORD PTR [rax+0x10]
  41f663:	cmp    WORD PTR [rbp-0xc],ax
  41f667:	jae    41f68a <flatcc_builder_check_required_field@@Base+0x76>
  41f669:	mov    rax,QWORD PTR [rbp-0x8]
  41f66d:	mov    rax,QWORD PTR [rax+0x8]
  41f671:	movzx  edx,WORD PTR [rbp-0xc]
  41f675:	add    rdx,rdx
  41f678:	add    rax,rdx
  41f67b:	movzx  eax,WORD PTR [rax]
  41f67e:	test   ax,ax
  41f681:	je     41f68a <flatcc_builder_check_required_field@@Base+0x76>
  41f683:	mov    eax,0x1
  41f688:	jmp    41f68f <flatcc_builder_check_required_field@@Base+0x7b>
  41f68a:	mov    eax,0x0
  41f68f:	leave  
  41f690:	ret    

000000000041f691 <flatcc_builder_check_union_field@@Base>:
  41f691:	endbr64 
  41f695:	push   rbp
  41f696:	mov    rbp,rsp
  41f699:	sub    rsp,0x10
  41f69d:	mov    QWORD PTR [rbp-0x8],rdi
  41f6a1:	mov    eax,esi
  41f6a3:	mov    WORD PTR [rbp-0xc],ax
  41f6a7:	mov    rax,QWORD PTR [rbp-0x8]
  41f6ab:	mov    rax,QWORD PTR [rax+0x30]
  41f6af:	movzx  eax,WORD PTR [rax+0xe]
  41f6b3:	cmp    ax,0x3
  41f6b7:	je     41f6d8 <flatcc_builder_check_union_field@@Base+0x47>
  41f6b9:	lea    rcx,[rip+0x1c280]        # 43b940 <flatcc_builder_padding_base@@Base+0x9c0>
  41f6c0:	mov    edx,0x4ff
  41f6c5:	lea    rsi,[rip+0x1bab4]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41f6cc:	lea    rdi,[rip+0x1bd85]        # 43b458 <flatcc_builder_padding_base@@Base+0x4d8>
  41f6d3:	call   4061b0 <__assert_fail@plt>
  41f6d8:	cmp    WORD PTR [rbp-0xc],0x0
  41f6dd:	je     41f6ed <flatcc_builder_check_union_field@@Base+0x5c>
  41f6df:	mov    rax,QWORD PTR [rbp-0x8]
  41f6e3:	movzx  eax,WORD PTR [rax+0x10]
  41f6e7:	cmp    WORD PTR [rbp-0xc],ax
  41f6eb:	jb     41f6f7 <flatcc_builder_check_union_field@@Base+0x66>
  41f6ed:	mov    eax,0x0
  41f6f2:	jmp    41f7a1 <flatcc_builder_check_union_field@@Base+0x110>
  41f6f7:	mov    rax,QWORD PTR [rbp-0x8]
  41f6fb:	mov    rax,QWORD PTR [rax+0x8]
  41f6ff:	movzx  edx,WORD PTR [rbp-0xc]
  41f703:	add    rdx,rdx
  41f706:	sub    rdx,0x2
  41f70a:	add    rax,rdx
  41f70d:	movzx  eax,WORD PTR [rax]
  41f710:	test   ax,ax
  41f713:	jne    41f735 <flatcc_builder_check_union_field@@Base+0xa4>
  41f715:	mov    rax,QWORD PTR [rbp-0x8]
  41f719:	mov    rax,QWORD PTR [rax+0x8]
  41f71d:	movzx  edx,WORD PTR [rbp-0xc]
  41f721:	add    rdx,rdx
  41f724:	add    rax,rdx
  41f727:	movzx  eax,WORD PTR [rax]
  41f72a:	test   ax,ax
  41f72d:	sete   al
  41f730:	movzx  eax,al
  41f733:	jmp    41f7a1 <flatcc_builder_check_union_field@@Base+0x110>
  41f735:	mov    rax,QWORD PTR [rbp-0x8]
  41f739:	mov    rdx,QWORD PTR [rax+0x18]
  41f73d:	mov    rax,QWORD PTR [rbp-0x8]
  41f741:	mov    rax,QWORD PTR [rax+0x8]
  41f745:	movzx  ecx,WORD PTR [rbp-0xc]
  41f749:	add    rcx,rcx
  41f74c:	sub    rcx,0x2
  41f750:	add    rax,rcx
  41f753:	movzx  eax,WORD PTR [rax]
  41f756:	movzx  eax,ax
  41f759:	add    rax,rdx
  41f75c:	movzx  eax,BYTE PTR [rax]
  41f75f:	test   al,al
  41f761:	je     41f783 <flatcc_builder_check_union_field@@Base+0xf2>
  41f763:	mov    rax,QWORD PTR [rbp-0x8]
  41f767:	mov    rax,QWORD PTR [rax+0x8]
  41f76b:	movzx  edx,WORD PTR [rbp-0xc]
  41f76f:	add    rdx,rdx
  41f772:	add    rax,rdx
  41f775:	movzx  eax,WORD PTR [rax]
  41f778:	test   ax,ax
  41f77b:	setne  al
  41f77e:	movzx  eax,al
  41f781:	jmp    41f7a1 <flatcc_builder_check_union_field@@Base+0x110>
  41f783:	mov    rax,QWORD PTR [rbp-0x8]
  41f787:	mov    rax,QWORD PTR [rax+0x8]
  41f78b:	movzx  edx,WORD PTR [rbp-0xc]
  41f78f:	add    rdx,rdx
  41f792:	add    rax,rdx
  41f795:	movzx  eax,WORD PTR [rax]
  41f798:	test   ax,ax
  41f79b:	sete   al
  41f79e:	movzx  eax,al
  41f7a1:	leave  
  41f7a2:	ret    

000000000041f7a3 <flatcc_builder_check_required@@Base>:
  41f7a3:	endbr64 
  41f7a7:	push   rbp
  41f7a8:	mov    rbp,rsp
  41f7ab:	sub    rsp,0x30
  41f7af:	mov    QWORD PTR [rbp-0x18],rdi
  41f7b3:	mov    QWORD PTR [rbp-0x20],rsi
  41f7b7:	mov    DWORD PTR [rbp-0x24],edx
  41f7ba:	mov    rax,QWORD PTR [rbp-0x18]
  41f7be:	mov    rax,QWORD PTR [rax+0x30]
  41f7c2:	movzx  eax,WORD PTR [rax+0xe]
  41f7c6:	cmp    ax,0x3
  41f7ca:	je     41f7eb <flatcc_builder_check_required@@Base+0x48>
  41f7cc:	lea    rcx,[rip+0x1c19d]        # 43b970 <flatcc_builder_padding_base@@Base+0x9f0>
  41f7d3:	mov    edx,0x511
  41f7d8:	lea    rsi,[rip+0x1b9a1]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41f7df:	lea    rdi,[rip+0x1bc72]        # 43b458 <flatcc_builder_padding_base@@Base+0x4d8>
  41f7e6:	call   4061b0 <__assert_fail@plt>
  41f7eb:	mov    rax,QWORD PTR [rbp-0x18]
  41f7ef:	movzx  eax,WORD PTR [rax+0x10]
  41f7f3:	movzx  eax,ax
  41f7f6:	cmp    DWORD PTR [rbp-0x24],eax
  41f7f9:	jle    41f802 <flatcc_builder_check_required@@Base+0x5f>
  41f7fb:	mov    eax,0x0
  41f800:	jmp    41f84e <flatcc_builder_check_required@@Base+0xab>
  41f802:	mov    DWORD PTR [rbp-0x4],0x0
  41f809:	jmp    41f841 <flatcc_builder_check_required@@Base+0x9e>
  41f80b:	mov    rax,QWORD PTR [rbp-0x18]
  41f80f:	mov    rdx,QWORD PTR [rax+0x8]
  41f813:	mov    eax,DWORD PTR [rbp-0x4]
  41f816:	cdqe   
  41f818:	lea    rcx,[rax+rax*1]
  41f81c:	mov    rax,QWORD PTR [rbp-0x20]
  41f820:	add    rax,rcx
  41f823:	movzx  eax,WORD PTR [rax]
  41f826:	movzx  eax,ax
  41f829:	add    rax,rax
  41f82c:	add    rax,rdx
  41f82f:	movzx  eax,WORD PTR [rax]
  41f832:	test   ax,ax
  41f835:	jne    41f83e <flatcc_builder_check_required@@Base+0x9b>
  41f837:	mov    eax,0x0
  41f83c:	jmp    41f84e <flatcc_builder_check_required@@Base+0xab>
  41f83e:	inc    DWORD PTR [rbp-0x4]
  41f841:	mov    eax,DWORD PTR [rbp-0x4]
  41f844:	cmp    eax,DWORD PTR [rbp-0x24]
  41f847:	jl     41f80b <flatcc_builder_check_required@@Base+0x68>
  41f849:	mov    eax,0x1
  41f84e:	leave  
  41f84f:	ret    

000000000041f850 <flatcc_builder_end_table@@Base>:
  41f850:	endbr64 
  41f854:	push   rbp
  41f855:	mov    rbp,rsp
  41f858:	sub    rsp,0x30
  41f85c:	mov    QWORD PTR [rbp-0x28],rdi
  41f860:	mov    rax,QWORD PTR [rbp-0x28]
  41f864:	mov    rax,QWORD PTR [rax+0x30]
  41f868:	movzx  eax,WORD PTR [rax+0xe]
  41f86c:	cmp    ax,0x3
  41f870:	je     41f891 <flatcc_builder_end_table@@Base+0x41>
  41f872:	lea    rcx,[rip+0x1c117]        # 43b990 <flatcc_builder_padding_base@@Base+0xa10>
  41f879:	mov    edx,0x525
  41f87e:	lea    rsi,[rip+0x1b8fb]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41f885:	lea    rdi,[rip+0x1bbcc]        # 43b458 <flatcc_builder_padding_base@@Base+0x4d8>
  41f88c:	call   4061b0 <__assert_fail@plt>
  41f891:	mov    rax,QWORD PTR [rbp-0x28]
  41f895:	mov    rax,QWORD PTR [rax+0x8]
  41f899:	sub    rax,0x4
  41f89d:	mov    QWORD PTR [rbp-0x10],rax
  41f8a1:	mov    rax,QWORD PTR [rbp-0x28]
  41f8a5:	movzx  eax,WORD PTR [rax+0x10]
  41f8a9:	movzx  eax,ax
  41f8ac:	add    eax,0x2
  41f8af:	cdqe   
  41f8b1:	add    eax,eax
  41f8b3:	mov    WORD PTR [rbp-0x1e],ax
  41f8b7:	mov    rdx,QWORD PTR [rbp-0x10]
  41f8bb:	movzx  eax,WORD PTR [rbp-0x1e]
  41f8bf:	mov    WORD PTR [rdx],ax
  41f8c2:	mov    rax,QWORD PTR [rbp-0x28]
  41f8c6:	mov    eax,DWORD PTR [rax+0x20]
  41f8c9:	mov    ecx,eax
  41f8cb:	mov    rax,QWORD PTR [rbp-0x10]
  41f8cf:	lea    rdx,[rax+0x2]
  41f8d3:	lea    eax,[rcx+0x4]
  41f8d6:	mov    WORD PTR [rdx],ax
  41f8d9:	mov    rax,QWORD PTR [rbp-0x10]
  41f8dd:	movzx  eax,WORD PTR [rax]
  41f8e0:	movzx  edx,ax
  41f8e3:	mov    rax,QWORD PTR [rbp-0x28]
  41f8e7:	mov    eax,DWORD PTR [rax+0x14]
  41f8ea:	xor    eax,edx
  41f8ec:	imul   edx,eax,0x9e3779b1
  41f8f2:	mov    rax,QWORD PTR [rbp-0x10]
  41f8f6:	add    rax,0x2
  41f8fa:	movzx  eax,WORD PTR [rax]
  41f8fd:	movzx  eax,ax
  41f900:	xor    eax,edx
  41f902:	imul   edx,eax,0x9e3779b1
  41f908:	mov    rax,QWORD PTR [rbp-0x28]
  41f90c:	mov    DWORD PTR [rax+0x14],edx
  41f90f:	mov    rax,QWORD PTR [rbp-0x28]
  41f913:	mov    ecx,DWORD PTR [rax+0x14]
  41f916:	movzx  edx,WORD PTR [rbp-0x1e]
  41f91a:	mov    rsi,QWORD PTR [rbp-0x10]
  41f91e:	mov    rax,QWORD PTR [rbp-0x28]
  41f922:	mov    rdi,rax
  41f925:	call   41ef9c <flatcc_builder_create_cached_vtable@@Base>
  41f92a:	mov    DWORD PTR [rbp-0x1c],eax
  41f92d:	cmp    DWORD PTR [rbp-0x1c],0x0
  41f931:	jne    41f93d <flatcc_builder_end_table@@Base+0xed>
  41f933:	mov    eax,0x0
  41f938:	jmp    41fa54 <flatcc_builder_end_table@@Base+0x204>
  41f93d:	movzx  edx,WORD PTR [rbp-0x1e]
  41f941:	mov    rax,QWORD PTR [rbp-0x10]
  41f945:	mov    esi,0x0
  41f94a:	mov    rdi,rax
  41f94d:	call   4061c0 <memset@plt>
  41f952:	mov    rax,QWORD PTR [rbp-0x28]
  41f956:	mov    rdx,QWORD PTR [rax+0x88]
  41f95d:	mov    rax,QWORD PTR [rbp-0x28]
  41f961:	mov    rax,QWORD PTR [rax+0x30]
  41f965:	mov    eax,DWORD PTR [rax+0x14]
  41f968:	mov    eax,eax
  41f96a:	add    rax,rdx
  41f96d:	mov    QWORD PTR [rbp-0x8],rax
  41f971:	mov    rax,QWORD PTR [rbp-0x28]
  41f975:	mov    rax,QWORD PTR [rax]
  41f978:	sub    rax,QWORD PTR [rbp-0x8]
  41f97c:	sar    rax,1
  41f97f:	mov    DWORD PTR [rbp-0x18],eax
  41f982:	mov    rax,QWORD PTR [rbp-0x28]
  41f986:	movzx  eax,WORD PTR [rax+0xea]
  41f98d:	movzx  edx,ax
  41f990:	mov    rax,QWORD PTR [rbp-0x28]
  41f994:	mov    eax,DWORD PTR [rax+0x20]
  41f997:	mov    r10d,eax
  41f99a:	mov    rax,QWORD PTR [rbp-0x28]
  41f99e:	mov    rsi,QWORD PTR [rax+0x18]
  41f9a2:	mov    r8d,DWORD PTR [rbp-0x18]
  41f9a6:	mov    rdi,QWORD PTR [rbp-0x8]
  41f9aa:	mov    rax,QWORD PTR [rbp-0x28]
  41f9ae:	sub    rsp,0x8
  41f9b2:	mov    ecx,DWORD PTR [rbp-0x1c]
  41f9b5:	push   rcx
  41f9b6:	mov    r9d,r8d
  41f9b9:	mov    r8,rdi
  41f9bc:	mov    ecx,edx
  41f9be:	mov    rdx,r10
  41f9c1:	mov    rdi,rax
  41f9c4:	call   41f282 <flatcc_builder_create_table@@Base>
  41f9c9:	add    rsp,0x10
  41f9cd:	mov    DWORD PTR [rbp-0x14],eax
  41f9d0:	cmp    DWORD PTR [rbp-0x14],0x0
  41f9d4:	jne    41f9dd <flatcc_builder_end_table@@Base+0x18d>
  41f9d6:	mov    eax,0x0
  41f9db:	jmp    41fa54 <flatcc_builder_end_table@@Base+0x204>
  41f9dd:	mov    rax,QWORD PTR [rbp-0x28]
  41f9e1:	mov    rax,QWORD PTR [rax+0x30]
  41f9e5:	mov    edx,DWORD PTR [rax+0x18]
  41f9e8:	mov    rax,QWORD PTR [rbp-0x28]
  41f9ec:	mov    DWORD PTR [rax+0x14],edx
  41f9ef:	mov    rax,QWORD PTR [rbp-0x28]
  41f9f3:	mov    rax,QWORD PTR [rax+0x30]
  41f9f7:	movzx  eax,WORD PTR [rax+0x1c]
  41f9fb:	mov    rdx,QWORD PTR [rbp-0x28]
  41f9ff:	mov    WORD PTR [rdx+0x10],ax
  41fa03:	mov    rax,QWORD PTR [rbp-0x28]
  41fa07:	mov    rdx,QWORD PTR [rax+0x58]
  41fa0b:	mov    rax,QWORD PTR [rbp-0x28]
  41fa0f:	mov    rax,QWORD PTR [rax+0x30]
  41fa13:	mov    eax,DWORD PTR [rax+0x10]
  41fa16:	mov    eax,eax
  41fa18:	add    rdx,rax
  41fa1b:	mov    rax,QWORD PTR [rbp-0x28]
  41fa1f:	mov    QWORD PTR [rax+0x8],rdx
  41fa23:	mov    rax,QWORD PTR [rbp-0x28]
  41fa27:	mov    rdx,QWORD PTR [rax+0x88]
  41fa2e:	mov    rax,QWORD PTR [rbp-0x28]
  41fa32:	mov    rax,QWORD PTR [rax+0x30]
  41fa36:	mov    eax,DWORD PTR [rax+0x14]
  41fa39:	mov    eax,eax
  41fa3b:	add    rdx,rax
  41fa3e:	mov    rax,QWORD PTR [rbp-0x28]
  41fa42:	mov    QWORD PTR [rax],rdx
  41fa45:	mov    rax,QWORD PTR [rbp-0x28]
  41fa49:	mov    rdi,rax
  41fa4c:	call   41d286 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  41fa51:	mov    eax,DWORD PTR [rbp-0x14]
  41fa54:	leave  
  41fa55:	ret    

000000000041fa56 <flatcc_builder_create_vector@@Base>:
  41fa56:	endbr64 
  41fa5a:	push   rbp
  41fa5b:	mov    rbp,rsp
  41fa5e:	sub    rsp,0xe0
  41fa65:	mov    QWORD PTR [rbp-0xb8],rdi
  41fa6c:	mov    QWORD PTR [rbp-0xc0],rsi
  41fa73:	mov    QWORD PTR [rbp-0xc8],rdx
  41fa7a:	mov    QWORD PTR [rbp-0xd0],rcx
  41fa81:	mov    eax,r8d
  41fa84:	mov    QWORD PTR [rbp-0xe0],r9
  41fa8b:	mov    WORD PTR [rbp-0xd4],ax
  41fa92:	mov    rax,QWORD PTR fs:0x28
  41fa9b:	mov    QWORD PTR [rbp-0x8],rax
  41fa9f:	xor    eax,eax
  41faa1:	mov    rax,QWORD PTR [rbp-0xc8]
  41faa8:	cmp    rax,QWORD PTR [rbp-0xe0]
  41faaf:	jbe    41faea <flatcc_builder_create_vector@@Base+0x94>
  41fab1:	mov    rax,QWORD PTR [rbp-0xc8]
  41fab8:	cmp    rax,QWORD PTR [rbp-0xe0]
  41fabf:	jbe    41fae0 <flatcc_builder_create_vector@@Base+0x8a>
  41fac1:	lea    rcx,[rip+0x1bee8]        # 43b9b0 <flatcc_builder_padding_base@@Base+0xa30>
  41fac8:	mov    edx,0x555
  41facd:	lea    rsi,[rip+0x1b6ac]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41fad4:	lea    rdi,[rip+0x1b9a8]        # 43b483 <flatcc_builder_padding_base@@Base+0x503>
  41fadb:	call   4061b0 <__assert_fail@plt>
  41fae0:	mov    eax,0x0
  41fae5:	jmp    41fcd2 <flatcc_builder_create_vector@@Base+0x27c>
  41faea:	lea    rax,[rbp-0xd4]
  41faf1:	mov    esi,0x4
  41faf6:	mov    rdi,rax
  41faf9:	call   41cdab <flatcc_builder_clear@@Base+0xca>
  41fafe:	movzx  eax,WORD PTR [rbp-0xd4]
  41fb05:	movzx  edx,ax
  41fb08:	mov    rax,QWORD PTR [rbp-0xb8]
  41fb0f:	mov    esi,edx
  41fb11:	mov    rdi,rax
  41fb14:	call   41cd7a <flatcc_builder_clear@@Base+0x99>
  41fb19:	mov    rax,QWORD PTR [rbp-0xc8]
  41fb20:	mov    edx,eax
  41fb22:	mov    rax,QWORD PTR [rbp-0xd0]
  41fb29:	imul   eax,edx
  41fb2c:	mov    DWORD PTR [rbp-0xa8],eax
  41fb32:	mov    rax,QWORD PTR [rbp-0xc8]
  41fb39:	mov    edi,eax
  41fb3b:	call   41c04e <main@@Base+0x10e7>
  41fb40:	mov    DWORD PTR [rbp-0xac],eax
  41fb46:	movzx  eax,WORD PTR [rbp-0xd4]
  41fb4d:	movzx  edx,ax
  41fb50:	mov    ecx,DWORD PTR [rbp-0xa8]
  41fb56:	mov    rax,QWORD PTR [rbp-0xb8]
  41fb5d:	mov    esi,ecx
  41fb5f:	mov    rdi,rax
  41fb62:	call   41d34d <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  41fb67:	mov    DWORD PTR [rbp-0xa4],eax
  41fb6d:	mov    QWORD PTR [rbp-0xa0],0x0
  41fb78:	mov    DWORD PTR [rbp-0x98],0x0
  41fb82:	mov    rax,QWORD PTR [rbp-0xa0]
  41fb89:	add    rax,0x4
  41fb8d:	mov    QWORD PTR [rbp-0xa0],rax
  41fb94:	mov    eax,DWORD PTR [rbp-0x98]
  41fb9a:	cdqe   
  41fb9c:	shl    rax,0x4
  41fba0:	add    rax,rbp
  41fba3:	lea    rdx,[rax-0x90]
  41fbaa:	lea    rax,[rbp-0xac]
  41fbb1:	mov    QWORD PTR [rdx],rax
  41fbb4:	mov    eax,DWORD PTR [rbp-0x98]
  41fbba:	cdqe   
  41fbbc:	shl    rax,0x4
  41fbc0:	add    rax,rbp
  41fbc3:	sub    rax,0x88
  41fbc9:	mov    QWORD PTR [rax],0x4
  41fbd0:	mov    eax,DWORD PTR [rbp-0x98]
  41fbd6:	inc    eax
  41fbd8:	mov    DWORD PTR [rbp-0x98],eax
  41fbde:	cmp    DWORD PTR [rbp-0xa8],0x0
  41fbe5:	je     41fc4c <flatcc_builder_create_vector@@Base+0x1f6>
  41fbe7:	mov    rdx,QWORD PTR [rbp-0xa0]
  41fbee:	mov    eax,DWORD PTR [rbp-0xa8]
  41fbf4:	add    rax,rdx
  41fbf7:	mov    QWORD PTR [rbp-0xa0],rax
  41fbfe:	mov    eax,DWORD PTR [rbp-0x98]
  41fc04:	cdqe   
  41fc06:	shl    rax,0x4
  41fc0a:	add    rax,rbp
  41fc0d:	lea    rdx,[rax-0x90]
  41fc14:	mov    rax,QWORD PTR [rbp-0xc0]
  41fc1b:	mov    QWORD PTR [rdx],rax
  41fc1e:	mov    edx,DWORD PTR [rbp-0x98]
  41fc24:	mov    eax,DWORD PTR [rbp-0xa8]
  41fc2a:	movsxd rdx,edx
  41fc2d:	shl    rdx,0x4
  41fc31:	add    rdx,rbp
  41fc34:	sub    rdx,0x88
  41fc3b:	mov    QWORD PTR [rdx],rax
  41fc3e:	mov    eax,DWORD PTR [rbp-0x98]
  41fc44:	inc    eax
  41fc46:	mov    DWORD PTR [rbp-0x98],eax
  41fc4c:	cmp    DWORD PTR [rbp-0xa4],0x0
  41fc53:	je     41fcb9 <flatcc_builder_create_vector@@Base+0x263>
  41fc55:	mov    rdx,QWORD PTR [rbp-0xa0]
  41fc5c:	mov    eax,DWORD PTR [rbp-0xa4]
  41fc62:	add    rax,rdx
  41fc65:	mov    QWORD PTR [rbp-0xa0],rax
  41fc6c:	mov    eax,DWORD PTR [rbp-0x98]
  41fc72:	cdqe   
  41fc74:	shl    rax,0x4
  41fc78:	add    rax,rbp
  41fc7b:	sub    rax,0x90
  41fc81:	mov    rdx,0x43af80
  41fc88:	mov    QWORD PTR [rax],rdx
  41fc8b:	mov    edx,DWORD PTR [rbp-0x98]
  41fc91:	mov    eax,DWORD PTR [rbp-0xa4]
  41fc97:	movsxd rdx,edx
  41fc9a:	shl    rdx,0x4
  41fc9e:	add    rdx,rbp
  41fca1:	sub    rdx,0x88
  41fca8:	mov    QWORD PTR [rdx],rax
  41fcab:	mov    eax,DWORD PTR [rbp-0x98]
  41fcb1:	inc    eax
  41fcb3:	mov    DWORD PTR [rbp-0x98],eax
  41fcb9:	lea    rdx,[rbp-0xa0]
  41fcc0:	mov    rax,QWORD PTR [rbp-0xb8]
  41fcc7:	mov    rsi,rdx
  41fcca:	mov    rdi,rax
  41fccd:	call   41d397 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  41fcd2:	mov    rcx,QWORD PTR [rbp-0x8]
  41fcd6:	xor    rcx,QWORD PTR fs:0x28
  41fcdf:	je     41fce6 <flatcc_builder_create_vector@@Base+0x290>
  41fce1:	call   4061a0 <__stack_chk_fail@plt>
  41fce6:	leave  
  41fce7:	ret    

000000000041fce8 <flatcc_builder_end_vector@@Base>:
  41fce8:	endbr64 
  41fcec:	push   rbp
  41fced:	mov    rbp,rsp
  41fcf0:	sub    rsp,0x20
  41fcf4:	mov    QWORD PTR [rbp-0x18],rdi
  41fcf8:	mov    rax,QWORD PTR [rbp-0x18]
  41fcfc:	mov    rax,QWORD PTR [rax+0x30]
  41fd00:	movzx  eax,WORD PTR [rax+0xe]
  41fd04:	cmp    ax,0x4
  41fd08:	je     41fd29 <flatcc_builder_end_vector@@Base+0x41>
  41fd0a:	lea    rcx,[rip+0x1bcbf]        # 43b9d0 <flatcc_builder_padding_base@@Base+0xa50>
  41fd11:	mov    edx,0x578
  41fd16:	lea    rsi,[rip+0x1b463]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  41fd1d:	lea    rdi,[rip+0x1b5a4]        # 43b2c8 <flatcc_builder_padding_base@@Base+0x348>
  41fd24:	call   4061b0 <__assert_fail@plt>
  41fd29:	mov    rax,QWORD PTR [rbp-0x18]
  41fd2d:	mov    rax,QWORD PTR [rax+0x30]
  41fd31:	mov    eax,DWORD PTR [rax+0x18]
  41fd34:	mov    r8d,eax
  41fd37:	mov    rax,QWORD PTR [rbp-0x18]
  41fd3b:	movzx  eax,WORD PTR [rax+0xea]
  41fd42:	movzx  edx,ax
  41fd45:	mov    rax,QWORD PTR [rbp-0x18]
  41fd49:	mov    rax,QWORD PTR [rax+0x30]
  41fd4d:	mov    eax,DWORD PTR [rax+0x10]
  41fd50:	mov    ecx,eax
  41fd52:	mov    rax,QWORD PTR [rbp-0x18]
  41fd56:	mov    rax,QWORD PTR [rax+0x30]
  41fd5a:	mov    eax,DWORD PTR [rax+0x14]
  41fd5d:	mov    edi,eax
  41fd5f:	mov    rax,QWORD PTR [rbp-0x18]
  41fd63:	mov    rsi,QWORD PTR [rax+0x18]
  41fd67:	mov    rax,QWORD PTR [rbp-0x18]
  41fd6b:	mov    r9,r8
  41fd6e:	mov    r8d,edx
  41fd71:	mov    rdx,rdi
  41fd74:	mov    rdi,rax
  41fd77:	call   41fa56 <flatcc_builder_create_vector@@Base>
  41fd7c:	mov    DWORD PTR [rbp-0x4],eax
  41fd7f:	cmp    DWORD PTR [rbp-0x4],0x0
  41fd83:	jne    41fd8c <flatcc_builder_end_vector@@Base+0xa4>
  41fd85:	mov    eax,0x0
  41fd8a:	jmp    41fd9b <flatcc_builder_end_vector@@Base+0xb3>
  41fd8c:	mov    rax,QWORD PTR [rbp-0x18]
  41fd90:	mov    rdi,rax
  41fd93:	call   41d286 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  41fd98:	mov    eax,DWORD PTR [rbp-0x4]
  41fd9b:	leave  
  41fd9c:	ret    

000000000041fd9d <flatcc_builder_vector_count@@Base>:
  41fd9d:	endbr64 
  41fda1:	push   rbp
  41fda2:	mov    rbp,rsp
  41fda5:	mov    QWORD PTR [rbp-0x8],rdi
  41fda9:	mov    rax,QWORD PTR [rbp-0x8]
  41fdad:	mov    rax,QWORD PTR [rax+0x30]
  41fdb1:	mov    eax,DWORD PTR [rax+0x14]
  41fdb4:	mov    eax,eax
  41fdb6:	pop    rbp
  41fdb7:	ret    

000000000041fdb8 <flatcc_builder_vector_edit@@Base>:
  41fdb8:	endbr64 
  41fdbc:	push   rbp
  41fdbd:	mov    rbp,rsp
  41fdc0:	mov    QWORD PTR [rbp-0x8],rdi
  41fdc4:	mov    rax,QWORD PTR [rbp-0x8]
  41fdc8:	mov    rax,QWORD PTR [rax+0x18]
  41fdcc:	pop    rbp
  41fdcd:	ret    
  41fdce:	endbr64 
  41fdd2:	push   rbp
  41fdd3:	mov    rbp,rsp
  41fdd6:	sub    rsp,0xe0
  41fddd:	mov    QWORD PTR [rbp-0xc8],rdi
  41fde4:	mov    QWORD PTR [rbp-0xd0],rsi
  41fdeb:	mov    QWORD PTR [rbp-0xd8],rdx
  41fdf2:	mov    QWORD PTR [rbp-0xe0],rcx
  41fdf9:	mov    rax,QWORD PTR fs:0x28
  41fe02:	mov    QWORD PTR [rbp-0x8],rax
  41fe06:	xor    eax,eax
  41fe08:	mov    rax,QWORD PTR [rbp-0xd8]
  41fe0f:	cmp    eax,0x3fffffff
  41fe14:	jbe    41fe20 <flatcc_builder_vector_edit@@Base+0x68>
  41fe16:	mov    eax,0x0
  41fe1b:	jmp    420149 <flatcc_builder_vector_edit@@Base+0x391>
  41fe20:	mov    rax,QWORD PTR [rbp-0xc8]
  41fe27:	mov    esi,0x4
  41fe2c:	mov    rdi,rax
  41fe2f:	call   41cd7a <flatcc_builder_clear@@Base+0x99>
  41fe34:	mov    rax,QWORD PTR [rbp-0xd8]
  41fe3b:	shl    eax,0x2
  41fe3e:	mov    DWORD PTR [rbp-0xb0],eax
  41fe44:	mov    rax,QWORD PTR [rbp-0xd8]
  41fe4b:	mov    edi,eax
  41fe4d:	call   41c04e <main@@Base+0x10e7>
  41fe52:	mov    DWORD PTR [rbp-0xb8],eax
  41fe58:	mov    ecx,DWORD PTR [rbp-0xb0]
  41fe5e:	mov    rax,QWORD PTR [rbp-0xc8]
  41fe65:	mov    edx,0x4
  41fe6a:	mov    esi,ecx
  41fe6c:	mov    rdi,rax
  41fe6f:	call   41d34d <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  41fe74:	mov    DWORD PTR [rbp-0xac],eax
  41fe7a:	mov    QWORD PTR [rbp-0xa0],0x0
  41fe85:	mov    DWORD PTR [rbp-0x98],0x0
  41fe8f:	mov    rax,QWORD PTR [rbp-0xa0]
  41fe96:	add    rax,0x4
  41fe9a:	mov    QWORD PTR [rbp-0xa0],rax
  41fea1:	mov    eax,DWORD PTR [rbp-0x98]
  41fea7:	cdqe   
  41fea9:	shl    rax,0x4
  41fead:	add    rax,rbp
  41feb0:	lea    rdx,[rax-0x90]
  41feb7:	lea    rax,[rbp-0xb8]
  41febe:	mov    QWORD PTR [rdx],rax
  41fec1:	mov    eax,DWORD PTR [rbp-0x98]
  41fec7:	cdqe   
  41fec9:	shl    rax,0x4
  41fecd:	add    rax,rbp
  41fed0:	sub    rax,0x88
  41fed6:	mov    QWORD PTR [rax],0x4
  41fedd:	mov    eax,DWORD PTR [rbp-0x98]
  41fee3:	inc    eax
  41fee5:	mov    DWORD PTR [rbp-0x98],eax
  41feeb:	cmp    DWORD PTR [rbp-0xb0],0x0
  41fef2:	je     41ff59 <flatcc_builder_vector_edit@@Base+0x1a1>
  41fef4:	mov    rdx,QWORD PTR [rbp-0xa0]
  41fefb:	mov    eax,DWORD PTR [rbp-0xb0]
  41ff01:	add    rax,rdx
  41ff04:	mov    QWORD PTR [rbp-0xa0],rax
  41ff0b:	mov    eax,DWORD PTR [rbp-0x98]
  41ff11:	cdqe   
  41ff13:	shl    rax,0x4
  41ff17:	add    rax,rbp
  41ff1a:	lea    rdx,[rax-0x90]
  41ff21:	mov    rax,QWORD PTR [rbp-0xd0]
  41ff28:	mov    QWORD PTR [rdx],rax
  41ff2b:	mov    edx,DWORD PTR [rbp-0x98]
  41ff31:	mov    eax,DWORD PTR [rbp-0xb0]
  41ff37:	movsxd rdx,edx
  41ff3a:	shl    rdx,0x4
  41ff3e:	add    rdx,rbp
  41ff41:	sub    rdx,0x88
  41ff48:	mov    QWORD PTR [rdx],rax
  41ff4b:	mov    eax,DWORD PTR [rbp-0x98]
  41ff51:	inc    eax
  41ff53:	mov    DWORD PTR [rbp-0x98],eax
  41ff59:	cmp    DWORD PTR [rbp-0xac],0x0
  41ff60:	je     41ffc6 <flatcc_builder_vector_edit@@Base+0x20e>
  41ff62:	mov    rdx,QWORD PTR [rbp-0xa0]
  41ff69:	mov    eax,DWORD PTR [rbp-0xac]
  41ff6f:	add    rax,rdx
  41ff72:	mov    QWORD PTR [rbp-0xa0],rax
  41ff79:	mov    eax,DWORD PTR [rbp-0x98]
  41ff7f:	cdqe   
  41ff81:	shl    rax,0x4
  41ff85:	add    rax,rbp
  41ff88:	sub    rax,0x90
  41ff8e:	mov    rdx,0x43af80
  41ff95:	mov    QWORD PTR [rax],rdx
  41ff98:	mov    edx,DWORD PTR [rbp-0x98]
  41ff9e:	mov    eax,DWORD PTR [rbp-0xac]
  41ffa4:	movsxd rdx,edx
  41ffa7:	shl    rdx,0x4
  41ffab:	add    rdx,rbp
  41ffae:	sub    rdx,0x88
  41ffb5:	mov    QWORD PTR [rdx],rax
  41ffb8:	mov    eax,DWORD PTR [rbp-0x98]
  41ffbe:	inc    eax
  41ffc0:	mov    DWORD PTR [rbp-0x98],eax
  41ffc6:	mov    rax,QWORD PTR [rbp-0xc8]
  41ffcd:	mov    eax,DWORD PTR [rax+0xf0]
  41ffd3:	mov    edx,eax
  41ffd5:	mov    rax,QWORD PTR [rbp-0xa0]
  41ffdc:	sub    edx,eax
  41ffde:	mov    eax,edx
  41ffe0:	mov    DWORD PTR [rbp-0xa8],eax
  41ffe6:	mov    DWORD PTR [rbp-0xb4],0x0
  41fff0:	jmp    42011d <flatcc_builder_vector_edit@@Base+0x365>
  41fff5:	mov    eax,DWORD PTR [rbp-0xb4]
  41fffb:	lea    rdx,[rax*4+0x0]
  420003:	mov    rax,QWORD PTR [rbp-0xd0]
  42000a:	add    rax,rdx
  42000d:	mov    eax,DWORD PTR [rax]
  42000f:	test   eax,eax
  420011:	je     4200b8 <flatcc_builder_vector_edit@@Base+0x300>
  420017:	mov    eax,DWORD PTR [rbp-0xb4]
  42001d:	lea    rdx,[rax*4+0x0]
  420025:	mov    rax,QWORD PTR [rbp-0xd0]
  42002c:	add    rax,rdx
  42002f:	mov    eax,DWORD PTR [rax]
  420031:	sub    eax,DWORD PTR [rbp-0xa8]
  420037:	mov    edx,DWORD PTR [rbp-0xb4]
  42003d:	shl    edx,0x2
  420040:	sub    eax,edx
  420042:	sub    eax,0x4
  420045:	mov    DWORD PTR [rbp-0xa4],eax
  42004b:	mov    eax,DWORD PTR [rbp-0xa4]
  420051:	mov    edi,eax
  420053:	call   41c04e <main@@Base+0x10e7>
  420058:	mov    edx,eax
  42005a:	mov    eax,DWORD PTR [rbp-0xb4]
  420060:	lea    rcx,[rax*4+0x0]
  420068:	mov    rax,QWORD PTR [rbp-0xd0]
  42006f:	add    rax,rcx
  420072:	mov    DWORD PTR [rax],edx
  420074:	cmp    QWORD PTR [rbp-0xe0],0x0
  42007c:	je     420117 <flatcc_builder_vector_edit@@Base+0x35f>
  420082:	mov    edx,DWORD PTR [rbp-0xb4]
  420088:	mov    rax,QWORD PTR [rbp-0xe0]
  42008f:	add    rax,rdx
  420092:	movzx  eax,BYTE PTR [rax]
  420095:	test   al,al
  420097:	jne    420117 <flatcc_builder_vector_edit@@Base+0x35f>
  420099:	lea    rcx,[rip+0x1b950]        # 43b9f0 <flatcc_builder_padding_base@@Base+0xa70>
  4200a0:	mov    edx,0x5b1
  4200a5:	lea    rsi,[rip+0x1b0d4]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  4200ac:	lea    rdi,[rip+0x1b3e3]        # 43b496 <flatcc_builder_padding_base@@Base+0x516>
  4200b3:	call   4061b0 <__assert_fail@plt>
  4200b8:	cmp    QWORD PTR [rbp-0xe0],0x0
  4200c0:	je     4200f8 <flatcc_builder_vector_edit@@Base+0x340>
  4200c2:	mov    edx,DWORD PTR [rbp-0xb4]
  4200c8:	mov    rax,QWORD PTR [rbp-0xe0]
  4200cf:	add    rax,rdx
  4200d2:	movzx  eax,BYTE PTR [rax]
  4200d5:	test   al,al
  4200d7:	je     420117 <flatcc_builder_vector_edit@@Base+0x35f>
  4200d9:	lea    rcx,[rip+0x1b910]        # 43b9f0 <flatcc_builder_padding_base@@Base+0xa70>
  4200e0:	mov    edx,0x5b5
  4200e5:	lea    rsi,[rip+0x1b094]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  4200ec:	lea    rdi,[rip+0x1b3b1]        # 43b4a4 <flatcc_builder_padding_base@@Base+0x524>
  4200f3:	call   4061b0 <__assert_fail@plt>
  4200f8:	lea    rcx,[rip+0x1b8f1]        # 43b9f0 <flatcc_builder_padding_base@@Base+0xa70>
  4200ff:	mov    edx,0x5b7
  420104:	lea    rsi,[rip+0x1b075]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  42010b:	lea    rdi,[rip+0x1b0ce]        # 43b1e0 <flatcc_builder_padding_base@@Base+0x260>
  420112:	call   4061b0 <__assert_fail@plt>
  420117:	inc    DWORD PTR [rbp-0xb4]
  42011d:	mov    rax,QWORD PTR [rbp-0xd8]
  420124:	cmp    DWORD PTR [rbp-0xb4],eax
  42012a:	jb     41fff5 <flatcc_builder_vector_edit@@Base+0x23d>
  420130:	lea    rdx,[rbp-0xa0]
  420137:	mov    rax,QWORD PTR [rbp-0xc8]
  42013e:	mov    rsi,rdx
  420141:	mov    rdi,rax
  420144:	call   41d397 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  420149:	mov    rsi,QWORD PTR [rbp-0x8]
  42014d:	xor    rsi,QWORD PTR fs:0x28
  420156:	je     42015d <flatcc_builder_vector_edit@@Base+0x3a5>
  420158:	call   4061a0 <__stack_chk_fail@plt>
  42015d:	leave  
  42015e:	ret    

000000000042015f <flatcc_builder_create_offset_vector_direct@@Base>:
  42015f:	endbr64 
  420163:	push   rbp
  420164:	mov    rbp,rsp
  420167:	sub    rsp,0x20
  42016b:	mov    QWORD PTR [rbp-0x8],rdi
  42016f:	mov    QWORD PTR [rbp-0x10],rsi
  420173:	mov    QWORD PTR [rbp-0x18],rdx
  420177:	mov    rdx,QWORD PTR [rbp-0x18]
  42017b:	mov    rsi,QWORD PTR [rbp-0x10]
  42017f:	mov    rax,QWORD PTR [rbp-0x8]
  420183:	mov    ecx,0x0
  420188:	mov    rdi,rax
  42018b:	call   41fdce <flatcc_builder_vector_edit@@Base+0x16>
  420190:	leave  
  420191:	ret    

0000000000420192 <flatcc_builder_end_offset_vector@@Base>:
  420192:	endbr64 
  420196:	push   rbp
  420197:	mov    rbp,rsp
  42019a:	sub    rsp,0x20
  42019e:	mov    QWORD PTR [rbp-0x18],rdi
  4201a2:	mov    rax,QWORD PTR [rbp-0x18]
  4201a6:	mov    rax,QWORD PTR [rax+0x30]
  4201aa:	movzx  eax,WORD PTR [rax+0xe]
  4201ae:	cmp    ax,0x5
  4201b2:	je     4201d3 <flatcc_builder_end_offset_vector@@Base+0x41>
  4201b4:	lea    rcx,[rip+0x1b865]        # 43ba20 <flatcc_builder_padding_base@@Base+0xaa0>
  4201bb:	mov    edx,0x5c8
  4201c0:	lea    rsi,[rip+0x1afb9]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  4201c7:	lea    rdi,[rip+0x1b16a]        # 43b338 <flatcc_builder_padding_base@@Base+0x3b8>
  4201ce:	call   4061b0 <__assert_fail@plt>
  4201d3:	mov    rax,QWORD PTR [rbp-0x18]
  4201d7:	mov    rax,QWORD PTR [rax+0x30]
  4201db:	mov    eax,DWORD PTR [rax+0x14]
  4201de:	mov    edx,eax
  4201e0:	mov    rax,QWORD PTR [rbp-0x18]
  4201e4:	mov    rcx,QWORD PTR [rax+0x18]
  4201e8:	mov    rax,QWORD PTR [rbp-0x18]
  4201ec:	mov    rsi,rcx
  4201ef:	mov    rdi,rax
  4201f2:	call   42015f <flatcc_builder_create_offset_vector_direct@@Base>
  4201f7:	mov    DWORD PTR [rbp-0x4],eax
  4201fa:	cmp    DWORD PTR [rbp-0x4],0x0
  4201fe:	jne    420207 <flatcc_builder_end_offset_vector@@Base+0x75>
  420200:	mov    eax,0x0
  420205:	jmp    420216 <flatcc_builder_end_offset_vector@@Base+0x84>
  420207:	mov    rax,QWORD PTR [rbp-0x18]
  42020b:	mov    rdi,rax
  42020e:	call   41d286 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  420213:	mov    eax,DWORD PTR [rbp-0x4]
  420216:	leave  
  420217:	ret    

0000000000420218 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  420218:	endbr64 
  42021c:	push   rbp
  42021d:	mov    rbp,rsp
  420220:	sub    rsp,0x20
  420224:	mov    QWORD PTR [rbp-0x18],rdi
  420228:	mov    QWORD PTR [rbp-0x20],rsi
  42022c:	mov    rax,QWORD PTR [rbp-0x18]
  420230:	mov    rax,QWORD PTR [rax+0x30]
  420234:	movzx  eax,WORD PTR [rax+0xe]
  420238:	cmp    ax,0x5
  42023c:	je     42025d <flatcc_builder_end_offset_vector_for_unions@@Base+0x45>
  42023e:	lea    rcx,[rip+0x1b81b]        # 43ba60 <flatcc_builder_padding_base@@Base+0xae0>
  420245:	mov    edx,0x5d5
  42024a:	lea    rsi,[rip+0x1af2f]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  420251:	lea    rdi,[rip+0x1b0e0]        # 43b338 <flatcc_builder_padding_base@@Base+0x3b8>
  420258:	call   4061b0 <__assert_fail@plt>
  42025d:	mov    rax,QWORD PTR [rbp-0x18]
  420261:	mov    rax,QWORD PTR [rax+0x30]
  420265:	mov    eax,DWORD PTR [rax+0x14]
  420268:	mov    edi,eax
  42026a:	mov    rax,QWORD PTR [rbp-0x18]
  42026e:	mov    rsi,QWORD PTR [rax+0x18]
  420272:	mov    rdx,QWORD PTR [rbp-0x20]
  420276:	mov    rax,QWORD PTR [rbp-0x18]
  42027a:	mov    rcx,rdx
  42027d:	mov    rdx,rdi
  420280:	mov    rdi,rax
  420283:	call   41fdce <flatcc_builder_vector_edit@@Base+0x16>
  420288:	mov    DWORD PTR [rbp-0x4],eax
  42028b:	cmp    DWORD PTR [rbp-0x4],0x0
  42028f:	jne    420298 <flatcc_builder_end_offset_vector_for_unions@@Base+0x80>
  420291:	mov    eax,0x0
  420296:	jmp    4202a7 <flatcc_builder_end_offset_vector_for_unions@@Base+0x8f>
  420298:	mov    rax,QWORD PTR [rbp-0x18]
  42029c:	mov    rdi,rax
  42029f:	call   41d286 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  4202a4:	mov    eax,DWORD PTR [rbp-0x4]
  4202a7:	leave  
  4202a8:	ret    

00000000004202a9 <flatcc_builder_offset_vector_edit@@Base>:
  4202a9:	endbr64 
  4202ad:	push   rbp
  4202ae:	mov    rbp,rsp
  4202b1:	mov    QWORD PTR [rbp-0x8],rdi
  4202b5:	mov    rax,QWORD PTR [rbp-0x8]
  4202b9:	mov    rax,QWORD PTR [rax+0x18]
  4202bd:	pop    rbp
  4202be:	ret    

00000000004202bf <flatcc_builder_offset_vector_count@@Base>:
  4202bf:	endbr64 
  4202c3:	push   rbp
  4202c4:	mov    rbp,rsp
  4202c7:	mov    QWORD PTR [rbp-0x8],rdi
  4202cb:	mov    rax,QWORD PTR [rbp-0x8]
  4202cf:	mov    rax,QWORD PTR [rax+0x30]
  4202d3:	mov    eax,DWORD PTR [rax+0x14]
  4202d6:	mov    eax,eax
  4202d8:	pop    rbp
  4202d9:	ret    

00000000004202da <flatcc_builder_table_add_union@@Base>:
  4202da:	endbr64 
  4202de:	push   rbp
  4202df:	mov    rbp,rsp
  4202e2:	sub    rsp,0x30
  4202e6:	mov    QWORD PTR [rbp-0x18],rdi
  4202ea:	mov    DWORD PTR [rbp-0x1c],esi
  4202ed:	mov    QWORD PTR [rbp-0x24],rdx
  4202f1:	mov    rax,QWORD PTR [rbp-0x18]
  4202f5:	mov    rax,QWORD PTR [rax+0x30]
  4202f9:	movzx  eax,WORD PTR [rax+0xe]
  4202fd:	cmp    ax,0x3
  420301:	je     420322 <flatcc_builder_table_add_union@@Base+0x48>
  420303:	lea    rcx,[rip+0x1b786]        # 43ba90 <flatcc_builder_padding_base@@Base+0xb10>
  42030a:	mov    edx,0x5ee
  42030f:	lea    rsi,[rip+0x1ae6a]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  420316:	lea    rdi,[rip+0x1b13b]        # 43b458 <flatcc_builder_padding_base@@Base+0x4d8>
  42031d:	call   4061b0 <__assert_fail@plt>
  420322:	movzx  eax,BYTE PTR [rbp-0x24]
  420326:	test   al,al
  420328:	jne    420369 <flatcc_builder_table_add_union@@Base+0x8f>
  42032a:	mov    eax,DWORD PTR [rbp-0x20]
  42032d:	test   eax,eax
  42032f:	je     420369 <flatcc_builder_table_add_union@@Base+0x8f>
  420331:	movzx  eax,BYTE PTR [rbp-0x24]
  420335:	test   al,al
  420337:	jne    42035f <flatcc_builder_table_add_union@@Base+0x85>
  420339:	mov    eax,DWORD PTR [rbp-0x20]
  42033c:	test   eax,eax
  42033e:	je     42035f <flatcc_builder_table_add_union@@Base+0x85>
  420340:	lea    rcx,[rip+0x1b749]        # 43ba90 <flatcc_builder_padding_base@@Base+0xb10>
  420347:	mov    edx,0x5ef
  42034c:	lea    rsi,[rip+0x1ae2d]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  420353:	lea    rdi,[rip+0x1b15e]        # 43b4b8 <flatcc_builder_padding_base@@Base+0x538>
  42035a:	call   4061b0 <__assert_fail@plt>
  42035f:	mov    eax,0xffffffff
  420364:	jmp    42042f <flatcc_builder_table_add_union@@Base+0x155>
  420369:	mov    eax,DWORD PTR [rbp-0x20]
  42036c:	test   eax,eax
  42036e:	je     4203c2 <flatcc_builder_table_add_union@@Base+0xe8>
  420370:	mov    edx,DWORD PTR [rbp-0x1c]
  420373:	mov    rax,QWORD PTR [rbp-0x18]
  420377:	mov    esi,edx
  420379:	mov    rdi,rax
  42037c:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  420381:	mov    QWORD PTR [rbp-0x10],rax
  420385:	cmp    QWORD PTR [rbp-0x10],0x0
  42038a:	jne    4203b9 <flatcc_builder_table_add_union@@Base+0xdf>
  42038c:	cmp    QWORD PTR [rbp-0x10],0x0
  420391:	jne    4203b2 <flatcc_builder_table_add_union@@Base+0xd8>
  420393:	lea    rcx,[rip+0x1b6f6]        # 43ba90 <flatcc_builder_padding_base@@Base+0xb10>
  42039a:	mov    edx,0x5f2
  42039f:	lea    rsi,[rip+0x1adda]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  4203a6:	lea    rdi,[rip+0x1b12d]        # 43b4da <flatcc_builder_padding_base@@Base+0x55a>
  4203ad:	call   4061b0 <__assert_fail@plt>
  4203b2:	mov    eax,0xffffffff
  4203b7:	jmp    42042f <flatcc_builder_table_add_union@@Base+0x155>
  4203b9:	mov    edx,DWORD PTR [rbp-0x20]
  4203bc:	mov    rax,QWORD PTR [rbp-0x10]
  4203c0:	mov    DWORD PTR [rax],edx
  4203c2:	mov    eax,DWORD PTR [rbp-0x1c]
  4203c5:	lea    esi,[rax-0x1]
  4203c8:	mov    rax,QWORD PTR [rbp-0x18]
  4203cc:	mov    ecx,0x1
  4203d1:	mov    edx,0x1
  4203d6:	mov    rdi,rax
  4203d9:	call   420ef1 <flatcc_builder_table_add@@Base>
  4203de:	mov    QWORD PTR [rbp-0x8],rax
  4203e2:	cmp    QWORD PTR [rbp-0x8],0x0
  4203e7:	jne    420416 <flatcc_builder_table_add_union@@Base+0x13c>
  4203e9:	cmp    QWORD PTR [rbp-0x8],0x0
  4203ee:	jne    42040f <flatcc_builder_table_add_union@@Base+0x135>
  4203f0:	lea    rcx,[rip+0x1b699]        # 43ba90 <flatcc_builder_padding_base@@Base+0xb10>
  4203f7:	mov    edx,0x5f6
  4203fc:	lea    rsi,[rip+0x1ad7d]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  420403:	lea    rdi,[rip+0x1b0da]        # 43b4e4 <flatcc_builder_padding_base@@Base+0x564>
  42040a:	call   4061b0 <__assert_fail@plt>
  42040f:	mov    eax,0xffffffff
  420414:	jmp    42042f <flatcc_builder_table_add_union@@Base+0x155>
  420416:	movzx  eax,BYTE PTR [rbp-0x24]
  42041a:	movzx  eax,al
  42041d:	mov    edi,eax
  42041f:	call   41c05a <main@@Base+0x10f3>
  420424:	mov    rdx,QWORD PTR [rbp-0x8]
  420428:	mov    BYTE PTR [rdx],al
  42042a:	mov    eax,0x0
  42042f:	leave  
  420430:	ret    

0000000000420431 <flatcc_builder_table_add_union_vector@@Base>:
  420431:	endbr64 
  420435:	push   rbp
  420436:	mov    rbp,rsp
  420439:	sub    rsp,0x30
  42043d:	mov    QWORD PTR [rbp-0x18],rdi
  420441:	mov    DWORD PTR [rbp-0x1c],esi
  420444:	mov    QWORD PTR [rbp-0x24],rdx
  420448:	mov    rax,QWORD PTR [rbp-0x18]
  42044c:	mov    rax,QWORD PTR [rax+0x30]
  420450:	movzx  eax,WORD PTR [rax+0xe]
  420454:	cmp    ax,0x3
  420458:	je     420479 <flatcc_builder_table_add_union_vector@@Base+0x48>
  42045a:	lea    rcx,[rip+0x1b65f]        # 43bac0 <flatcc_builder_padding_base@@Base+0xb40>
  420461:	mov    edx,0x600
  420466:	lea    rsi,[rip+0x1ad13]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  42046d:	lea    rdi,[rip+0x1afe4]        # 43b458 <flatcc_builder_padding_base@@Base+0x4d8>
  420474:	call   4061b0 <__assert_fail@plt>
  420479:	mov    eax,DWORD PTR [rbp-0x24]
  42047c:	test   eax,eax
  42047e:	sete   dl
  420481:	mov    eax,DWORD PTR [rbp-0x20]
  420484:	test   eax,eax
  420486:	sete   al
  420489:	xor    eax,edx
  42048b:	test   al,al
  42048d:	je     4204ce <flatcc_builder_table_add_union_vector@@Base+0x9d>
  42048f:	mov    eax,DWORD PTR [rbp-0x24]
  420492:	test   eax,eax
  420494:	setne  dl
  420497:	mov    eax,DWORD PTR [rbp-0x20]
  42049a:	test   eax,eax
  42049c:	sete   al
  42049f:	xor    eax,edx
  4204a1:	test   al,al
  4204a3:	jne    4204c4 <flatcc_builder_table_add_union_vector@@Base+0x93>
  4204a5:	lea    rcx,[rip+0x1b614]        # 43bac0 <flatcc_builder_padding_base@@Base+0xb40>
  4204ac:	mov    edx,0x601
  4204b1:	lea    rsi,[rip+0x1acc8]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  4204b8:	lea    rdi,[rip+0x1b031]        # 43b4f0 <flatcc_builder_padding_base@@Base+0x570>
  4204bf:	call   4061b0 <__assert_fail@plt>
  4204c4:	mov    eax,0xffffffff
  4204c9:	jmp    420585 <flatcc_builder_table_add_union_vector@@Base+0x154>
  4204ce:	mov    eax,DWORD PTR [rbp-0x24]
  4204d1:	test   eax,eax
  4204d3:	je     420580 <flatcc_builder_table_add_union_vector@@Base+0x14f>
  4204d9:	mov    eax,DWORD PTR [rbp-0x1c]
  4204dc:	lea    edx,[rax-0x1]
  4204df:	mov    rax,QWORD PTR [rbp-0x18]
  4204e3:	mov    esi,edx
  4204e5:	mov    rdi,rax
  4204e8:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  4204ed:	mov    QWORD PTR [rbp-0x8],rax
  4204f1:	cmp    QWORD PTR [rbp-0x8],0x0
  4204f6:	jne    420525 <flatcc_builder_table_add_union_vector@@Base+0xf4>
  4204f8:	cmp    QWORD PTR [rbp-0x8],0x0
  4204fd:	jne    42051e <flatcc_builder_table_add_union_vector@@Base+0xed>
  4204ff:	lea    rcx,[rip+0x1b5ba]        # 43bac0 <flatcc_builder_padding_base@@Base+0xb40>
  420506:	mov    edx,0x604
  42050b:	lea    rsi,[rip+0x1ac6e]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  420512:	lea    rdi,[rip+0x1afc1]        # 43b4da <flatcc_builder_padding_base@@Base+0x55a>
  420519:	call   4061b0 <__assert_fail@plt>
  42051e:	mov    eax,0xffffffff
  420523:	jmp    420585 <flatcc_builder_table_add_union_vector@@Base+0x154>
  420525:	mov    edx,DWORD PTR [rbp-0x24]
  420528:	mov    rax,QWORD PTR [rbp-0x8]
  42052c:	mov    DWORD PTR [rax],edx
  42052e:	mov    edx,DWORD PTR [rbp-0x1c]
  420531:	mov    rax,QWORD PTR [rbp-0x18]
  420535:	mov    esi,edx
  420537:	mov    rdi,rax
  42053a:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  42053f:	mov    QWORD PTR [rbp-0x8],rax
  420543:	cmp    QWORD PTR [rbp-0x8],0x0
  420548:	jne    420577 <flatcc_builder_table_add_union_vector@@Base+0x146>
  42054a:	cmp    QWORD PTR [rbp-0x8],0x0
  42054f:	jne    420570 <flatcc_builder_table_add_union_vector@@Base+0x13f>
  420551:	lea    rcx,[rip+0x1b568]        # 43bac0 <flatcc_builder_padding_base@@Base+0xb40>
  420558:	mov    edx,0x608
  42055d:	lea    rsi,[rip+0x1ac1c]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  420564:	lea    rdi,[rip+0x1af6f]        # 43b4da <flatcc_builder_padding_base@@Base+0x55a>
  42056b:	call   4061b0 <__assert_fail@plt>
  420570:	mov    eax,0xffffffff
  420575:	jmp    420585 <flatcc_builder_table_add_union_vector@@Base+0x154>
  420577:	mov    edx,DWORD PTR [rbp-0x20]
  42057a:	mov    rax,QWORD PTR [rbp-0x8]
  42057e:	mov    DWORD PTR [rax],edx
  420580:	mov    eax,0x0
  420585:	leave  
  420586:	ret    

0000000000420587 <flatcc_builder_create_union_vector@@Base>:
  420587:	endbr64 
  42058b:	push   rbp
  42058c:	mov    rbp,rsp
  42058f:	sub    rsp,0x40
  420593:	mov    QWORD PTR [rbp-0x28],rdi
  420597:	mov    QWORD PTR [rbp-0x30],rsi
  42059b:	mov    QWORD PTR [rbp-0x38],rdx
  42059f:	mov    DWORD PTR [rbp-0x8],0x0
  4205a6:	mov    DWORD PTR [rbp-0x4],0x0
  4205ad:	mov    rax,QWORD PTR [rbp-0x28]
  4205b1:	mov    rdi,rax
  4205b4:	call   41eb95 <flatcc_builder_start_offset_vector@@Base>
  4205b9:	test   eax,eax
  4205bb:	je     4205c6 <flatcc_builder_create_union_vector@@Base+0x3f>
  4205bd:	mov    rax,QWORD PTR [rbp-0x8]
  4205c1:	jmp    4206b1 <flatcc_builder_create_union_vector@@Base+0x12a>
  4205c6:	mov    rdx,QWORD PTR [rbp-0x38]
  4205ca:	mov    rax,QWORD PTR [rbp-0x28]
  4205ce:	mov    rsi,rdx
  4205d1:	mov    rdi,rax
  4205d4:	call   41e574 <flatcc_builder_extend_offset_vector@@Base>
  4205d9:	test   rax,rax
  4205dc:	jne    4205e7 <flatcc_builder_create_union_vector@@Base+0x60>
  4205de:	mov    rax,QWORD PTR [rbp-0x8]
  4205e2:	jmp    4206b1 <flatcc_builder_create_union_vector@@Base+0x12a>
  4205e7:	mov    rax,QWORD PTR [rbp-0x38]
  4205eb:	mov    edx,eax
  4205ed:	mov    rax,QWORD PTR [rbp-0x28]
  4205f1:	mov    esi,edx
  4205f3:	mov    rdi,rax
  4205f6:	call   41c378 <flatcc_builder_default_alloc@@Base+0x26a>
  4205fb:	mov    QWORD PTR [rbp-0x18],rax
  4205ff:	cmp    QWORD PTR [rbp-0x18],0x0
  420604:	jne    42060f <flatcc_builder_create_union_vector@@Base+0x88>
  420606:	mov    rax,QWORD PTR [rbp-0x8]
  42060a:	jmp    4206b1 <flatcc_builder_create_union_vector@@Base+0x12a>
  42060f:	mov    rax,QWORD PTR [rbp-0x28]
  420613:	mov    rdi,rax
  420616:	call   4202a9 <flatcc_builder_offset_vector_edit@@Base>
  42061b:	mov    QWORD PTR [rbp-0x10],rax
  42061f:	mov    QWORD PTR [rbp-0x20],0x0
  420627:	jmp    42067b <flatcc_builder_create_union_vector@@Base+0xf4>
  420629:	mov    rax,QWORD PTR [rbp-0x20]
  42062d:	lea    rdx,[rax*8+0x0]
  420635:	mov    rax,QWORD PTR [rbp-0x30]
  420639:	add    rax,rdx
  42063c:	mov    rcx,QWORD PTR [rbp-0x18]
  420640:	mov    rdx,QWORD PTR [rbp-0x20]
  420644:	add    rdx,rcx
  420647:	movzx  eax,BYTE PTR [rax]
  42064a:	mov    BYTE PTR [rdx],al
  42064c:	mov    rax,QWORD PTR [rbp-0x20]
  420650:	lea    rdx,[rax*8+0x0]
  420658:	mov    rax,QWORD PTR [rbp-0x30]
  42065c:	add    rax,rdx
  42065f:	mov    rdx,QWORD PTR [rbp-0x20]
  420663:	lea    rcx,[rdx*4+0x0]
  42066b:	mov    rdx,QWORD PTR [rbp-0x10]
  42066f:	add    rdx,rcx
  420672:	mov    eax,DWORD PTR [rax+0x4]
  420675:	mov    DWORD PTR [rdx],eax
  420677:	inc    QWORD PTR [rbp-0x20]
  42067b:	mov    rax,QWORD PTR [rbp-0x20]
  42067f:	cmp    rax,QWORD PTR [rbp-0x38]
  420683:	jb     420629 <flatcc_builder_create_union_vector@@Base+0xa2>
  420685:	mov    rcx,QWORD PTR [rbp-0x38]
  420689:	mov    rdx,QWORD PTR [rbp-0x10]
  42068d:	mov    rsi,QWORD PTR [rbp-0x18]
  420691:	mov    rax,QWORD PTR [rbp-0x28]
  420695:	mov    rdi,rax
  420698:	call   4206b3 <flatcc_builder_create_union_vector_direct@@Base>
  42069d:	mov    QWORD PTR [rbp-0x8],rax
  4206a1:	mov    rax,QWORD PTR [rbp-0x28]
  4206a5:	mov    rdi,rax
  4206a8:	call   41d286 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  4206ad:	mov    rax,QWORD PTR [rbp-0x8]
  4206b1:	leave  
  4206b2:	ret    

00000000004206b3 <flatcc_builder_create_union_vector_direct@@Base>:
  4206b3:	endbr64 
  4206b7:	push   rbp
  4206b8:	mov    rbp,rsp
  4206bb:	sub    rsp,0x30
  4206bf:	mov    QWORD PTR [rbp-0x18],rdi
  4206c3:	mov    QWORD PTR [rbp-0x20],rsi
  4206c7:	mov    QWORD PTR [rbp-0x28],rdx
  4206cb:	mov    QWORD PTR [rbp-0x30],rcx
  4206cf:	mov    DWORD PTR [rbp-0x8],0x0
  4206d6:	mov    DWORD PTR [rbp-0x4],0x0
  4206dd:	mov    rcx,QWORD PTR [rbp-0x20]
  4206e1:	mov    rdx,QWORD PTR [rbp-0x30]
  4206e5:	mov    rsi,QWORD PTR [rbp-0x28]
  4206e9:	mov    rax,QWORD PTR [rbp-0x18]
  4206ed:	mov    rdi,rax
  4206f0:	call   41fdce <flatcc_builder_vector_edit@@Base+0x16>
  4206f5:	mov    DWORD PTR [rbp-0x4],eax
  4206f8:	mov    eax,DWORD PTR [rbp-0x4]
  4206fb:	test   eax,eax
  4206fd:	jne    420705 <flatcc_builder_create_union_vector_direct@@Base+0x52>
  4206ff:	mov    rax,QWORD PTR [rbp-0x8]
  420703:	jmp    42073e <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  420705:	mov    rdx,QWORD PTR [rbp-0x30]
  420709:	mov    rsi,QWORD PTR [rbp-0x20]
  42070d:	mov    rax,QWORD PTR [rbp-0x18]
  420711:	mov    r9d,0xffffffff
  420717:	mov    r8d,0x1
  42071d:	mov    ecx,0x1
  420722:	mov    rdi,rax
  420725:	call   41fa56 <flatcc_builder_create_vector@@Base>
  42072a:	mov    DWORD PTR [rbp-0x8],eax
  42072d:	mov    eax,DWORD PTR [rbp-0x8]
  420730:	test   eax,eax
  420732:	jne    42073a <flatcc_builder_create_union_vector_direct@@Base+0x87>
  420734:	mov    rax,QWORD PTR [rbp-0x8]
  420738:	jmp    42073e <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  42073a:	mov    rax,QWORD PTR [rbp-0x8]
  42073e:	leave  
  42073f:	ret    

0000000000420740 <flatcc_builder_start_union_vector@@Base>:
  420740:	endbr64 
  420744:	push   rbp
  420745:	mov    rbp,rsp
  420748:	sub    rsp,0x10
  42074c:	mov    QWORD PTR [rbp-0x8],rdi
  420750:	mov    rax,QWORD PTR [rbp-0x8]
  420754:	mov    esi,0x4
  420759:	mov    rdi,rax
  42075c:	call   41d0ab <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  420761:	test   eax,eax
  420763:	je     42076c <flatcc_builder_start_union_vector@@Base+0x2c>
  420765:	mov    eax,0xffffffff
  42076a:	jmp    4207ae <flatcc_builder_start_union_vector@@Base+0x6e>
  42076c:	mov    rax,QWORD PTR [rbp-0x8]
  420770:	mov    rax,QWORD PTR [rax+0x30]
  420774:	mov    DWORD PTR [rax+0x10],0x8
  42077b:	mov    rax,QWORD PTR [rbp-0x8]
  42077f:	mov    rax,QWORD PTR [rax+0x30]
  420783:	mov    DWORD PTR [rax+0x14],0x0
  42078a:	mov    rax,QWORD PTR [rbp-0x8]
  42078e:	mov    rax,QWORD PTR [rax+0x30]
  420792:	mov    WORD PTR [rax+0xe],0x7
  420798:	mov    rax,QWORD PTR [rbp-0x8]
  42079c:	mov    esi,0xfffffffc
  4207a1:	mov    rdi,rax
  4207a4:	call   41c281 <flatcc_builder_default_alloc@@Base+0x173>
  4207a9:	mov    eax,0x0
  4207ae:	leave  
  4207af:	ret    

00000000004207b0 <flatcc_builder_end_union_vector@@Base>:
  4207b0:	endbr64 
  4207b4:	push   rbp
  4207b5:	mov    rbp,rsp
  4207b8:	sub    rsp,0x40
  4207bc:	mov    QWORD PTR [rbp-0x38],rdi
  4207c0:	mov    DWORD PTR [rbp-0x8],0x0
  4207c7:	mov    DWORD PTR [rbp-0x4],0x0
  4207ce:	mov    rax,QWORD PTR [rbp-0x38]
  4207d2:	mov    rax,QWORD PTR [rax+0x30]
  4207d6:	movzx  eax,WORD PTR [rax+0xe]
  4207da:	cmp    ax,0x7
  4207de:	je     4207ff <flatcc_builder_end_union_vector@@Base+0x4f>
  4207e0:	lea    rcx,[rip+0x1b319]        # 43bb00 <flatcc_builder_padding_base@@Base+0xb80>
  4207e7:	mov    edx,0x651
  4207ec:	lea    rsi,[rip+0x1a98d]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  4207f3:	lea    rdi,[rip+0x1ad1e]        # 43b518 <flatcc_builder_padding_base@@Base+0x598>
  4207fa:	call   4061b0 <__assert_fail@plt>
  4207ff:	mov    rax,QWORD PTR [rbp-0x38]
  420803:	mov    rdi,rax
  420806:	call   42090f <flatcc_builder_union_vector_count@@Base>
  42080b:	mov    QWORD PTR [rbp-0x28],rax
  42080f:	mov    rax,QWORD PTR [rbp-0x28]
  420813:	mov    edx,eax
  420815:	mov    eax,edx
  420817:	shl    eax,0x2
  42081a:	add    edx,eax
  42081c:	mov    rax,QWORD PTR [rbp-0x38]
  420820:	mov    esi,edx
  420822:	mov    rdi,rax
  420825:	call   41c378 <flatcc_builder_default_alloc@@Base+0x26a>
  42082a:	mov    QWORD PTR [rbp-0x20],rax
  42082e:	cmp    QWORD PTR [rbp-0x20],0x0
  420833:	jne    42083e <flatcc_builder_end_union_vector@@Base+0x8e>
  420835:	mov    rax,QWORD PTR [rbp-0x8]
  420839:	jmp    4208f7 <flatcc_builder_end_union_vector@@Base+0x147>
  42083e:	mov    rax,QWORD PTR [rbp-0x28]
  420842:	lea    rdx,[rax*4+0x0]
  42084a:	mov    rax,QWORD PTR [rbp-0x20]
  42084e:	add    rax,rdx
  420851:	mov    QWORD PTR [rbp-0x18],rax
  420855:	mov    rax,QWORD PTR [rbp-0x38]
  420859:	mov    rdi,rax
  42085c:	call   4208f9 <flatcc_builder_union_vector_edit@@Base>
  420861:	mov    QWORD PTR [rbp-0x10],rax
  420865:	mov    QWORD PTR [rbp-0x30],0x0
  42086d:	jmp    4208c1 <flatcc_builder_end_union_vector@@Base+0x111>
  42086f:	mov    rax,QWORD PTR [rbp-0x30]
  420873:	lea    rdx,[rax*8+0x0]
  42087b:	mov    rax,QWORD PTR [rbp-0x10]
  42087f:	add    rax,rdx
  420882:	mov    rcx,QWORD PTR [rbp-0x18]
  420886:	mov    rdx,QWORD PTR [rbp-0x30]
  42088a:	add    rdx,rcx
  42088d:	movzx  eax,BYTE PTR [rax]
  420890:	mov    BYTE PTR [rdx],al
  420892:	mov    rax,QWORD PTR [rbp-0x30]
  420896:	lea    rdx,[rax*8+0x0]
  42089e:	mov    rax,QWORD PTR [rbp-0x10]
  4208a2:	add    rax,rdx
  4208a5:	mov    rdx,QWORD PTR [rbp-0x30]
  4208a9:	lea    rcx,[rdx*4+0x0]
  4208b1:	mov    rdx,QWORD PTR [rbp-0x20]
  4208b5:	add    rdx,rcx
  4208b8:	mov    eax,DWORD PTR [rax+0x4]
  4208bb:	mov    DWORD PTR [rdx],eax
  4208bd:	inc    QWORD PTR [rbp-0x30]
  4208c1:	mov    rax,QWORD PTR [rbp-0x30]
  4208c5:	cmp    rax,QWORD PTR [rbp-0x28]
  4208c9:	jb     42086f <flatcc_builder_end_union_vector@@Base+0xbf>
  4208cb:	mov    rcx,QWORD PTR [rbp-0x28]
  4208cf:	mov    rdx,QWORD PTR [rbp-0x20]
  4208d3:	mov    rsi,QWORD PTR [rbp-0x18]
  4208d7:	mov    rax,QWORD PTR [rbp-0x38]
  4208db:	mov    rdi,rax
  4208de:	call   4206b3 <flatcc_builder_create_union_vector_direct@@Base>
  4208e3:	mov    QWORD PTR [rbp-0x8],rax
  4208e7:	mov    rax,QWORD PTR [rbp-0x38]
  4208eb:	mov    rdi,rax
  4208ee:	call   41d286 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  4208f3:	mov    rax,QWORD PTR [rbp-0x8]
  4208f7:	leave  
  4208f8:	ret    

00000000004208f9 <flatcc_builder_union_vector_edit@@Base>:
  4208f9:	endbr64 
  4208fd:	push   rbp
  4208fe:	mov    rbp,rsp
  420901:	mov    QWORD PTR [rbp-0x8],rdi
  420905:	mov    rax,QWORD PTR [rbp-0x8]
  420909:	mov    rax,QWORD PTR [rax+0x18]
  42090d:	pop    rbp
  42090e:	ret    

000000000042090f <flatcc_builder_union_vector_count@@Base>:
  42090f:	endbr64 
  420913:	push   rbp
  420914:	mov    rbp,rsp
  420917:	mov    QWORD PTR [rbp-0x8],rdi
  42091b:	mov    rax,QWORD PTR [rbp-0x8]
  42091f:	mov    rax,QWORD PTR [rax+0x30]
  420923:	mov    eax,DWORD PTR [rax+0x14]
  420926:	mov    eax,eax
  420928:	pop    rbp
  420929:	ret    

000000000042092a <flatcc_builder_extend_union_vector@@Base>:
  42092a:	endbr64 
  42092e:	push   rbp
  42092f:	mov    rbp,rsp
  420932:	sub    rsp,0x10
  420936:	mov    QWORD PTR [rbp-0x8],rdi
  42093a:	mov    QWORD PTR [rbp-0x10],rsi
  42093e:	mov    rax,QWORD PTR [rbp-0x10]
  420942:	mov    ecx,eax
  420944:	mov    rax,QWORD PTR [rbp-0x8]
  420948:	mov    edx,0x1fffffff
  42094d:	mov    esi,ecx
  42094f:	mov    rdi,rax
  420952:	call   41e31d <flatcc_builder_end_struct@@Base+0x92>
  420957:	test   eax,eax
  420959:	je     420962 <flatcc_builder_extend_union_vector@@Base+0x38>
  42095b:	mov    eax,0x0
  420960:	jmp    42097b <flatcc_builder_extend_union_vector@@Base+0x51>
  420962:	mov    rax,QWORD PTR [rbp-0x10]
  420966:	lea    edx,[rax*8+0x0]
  42096d:	mov    rax,QWORD PTR [rbp-0x8]
  420971:	mov    esi,edx
  420973:	mov    rdi,rax
  420976:	call   41c378 <flatcc_builder_default_alloc@@Base+0x26a>
  42097b:	leave  
  42097c:	ret    

000000000042097d <flatcc_builder_truncate_union_vector@@Base>:
  42097d:	endbr64 
  420981:	push   rbp
  420982:	mov    rbp,rsp
  420985:	sub    rsp,0x10
  420989:	mov    QWORD PTR [rbp-0x8],rdi
  42098d:	mov    QWORD PTR [rbp-0x10],rsi
  420991:	mov    rax,QWORD PTR [rbp-0x8]
  420995:	mov    rax,QWORD PTR [rax+0x30]
  420999:	movzx  eax,WORD PTR [rax+0xe]
  42099d:	cmp    ax,0x7
  4209a1:	je     4209c2 <flatcc_builder_truncate_union_vector@@Base+0x45>
  4209a3:	lea    rcx,[rip+0x1b176]        # 43bb20 <flatcc_builder_padding_base@@Base+0xba0>
  4209aa:	mov    edx,0x681
  4209af:	lea    rsi,[rip+0x1a7ca]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  4209b6:	lea    rdi,[rip+0x1ab5b]        # 43b518 <flatcc_builder_padding_base@@Base+0x598>
  4209bd:	call   4061b0 <__assert_fail@plt>
  4209c2:	mov    rax,QWORD PTR [rbp-0x8]
  4209c6:	mov    rax,QWORD PTR [rax+0x30]
  4209ca:	mov    eax,DWORD PTR [rax+0x14]
  4209cd:	mov    rdx,QWORD PTR [rbp-0x10]
  4209d1:	cmp    eax,edx
  4209d3:	jae    420a0e <flatcc_builder_truncate_union_vector@@Base+0x91>
  4209d5:	mov    rax,QWORD PTR [rbp-0x8]
  4209d9:	mov    rax,QWORD PTR [rax+0x30]
  4209dd:	mov    eax,DWORD PTR [rax+0x14]
  4209e0:	mov    rdx,QWORD PTR [rbp-0x10]
  4209e4:	cmp    eax,edx
  4209e6:	jae    420a07 <flatcc_builder_truncate_union_vector@@Base+0x8a>
  4209e8:	lea    rcx,[rip+0x1b131]        # 43bb20 <flatcc_builder_padding_base@@Base+0xba0>
  4209ef:	mov    edx,0x682
  4209f4:	lea    rsi,[rip+0x1a785]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  4209fb:	lea    rdi,[rip+0x1a9c6]        # 43b3c8 <flatcc_builder_padding_base@@Base+0x448>
  420a02:	call   4061b0 <__assert_fail@plt>
  420a07:	mov    eax,0xffffffff
  420a0c:	jmp    420a51 <flatcc_builder_truncate_union_vector@@Base+0xd4>
  420a0e:	mov    rax,QWORD PTR [rbp-0x8]
  420a12:	mov    rax,QWORD PTR [rax+0x30]
  420a16:	mov    edx,DWORD PTR [rax+0x14]
  420a19:	mov    rax,QWORD PTR [rbp-0x10]
  420a1d:	mov    ecx,eax
  420a1f:	mov    rax,QWORD PTR [rbp-0x8]
  420a23:	mov    rax,QWORD PTR [rax+0x30]
  420a27:	sub    edx,ecx
  420a29:	mov    DWORD PTR [rax+0x14],edx
  420a2c:	mov    rax,QWORD PTR [rbp-0x8]
  420a30:	mov    rax,QWORD PTR [rax+0x30]
  420a34:	mov    eax,DWORD PTR [rax+0x10]
  420a37:	mov    rdx,QWORD PTR [rbp-0x10]
  420a3b:	imul   edx,eax
  420a3e:	mov    rax,QWORD PTR [rbp-0x8]
  420a42:	mov    esi,edx
  420a44:	mov    rdi,rax
  420a47:	call   41c3f4 <flatcc_builder_default_alloc@@Base+0x2e6>
  420a4c:	mov    eax,0x0
  420a51:	leave  
  420a52:	ret    

0000000000420a53 <flatcc_builder_union_vector_push@@Base>:
  420a53:	endbr64 
  420a57:	push   rbp
  420a58:	mov    rbp,rsp
  420a5b:	sub    rsp,0x20
  420a5f:	mov    QWORD PTR [rbp-0x18],rdi
  420a63:	mov    QWORD PTR [rbp-0x20],rsi
  420a67:	mov    rax,QWORD PTR [rbp-0x18]
  420a6b:	mov    rax,QWORD PTR [rax+0x30]
  420a6f:	movzx  eax,WORD PTR [rax+0xe]
  420a73:	cmp    ax,0x7
  420a77:	je     420a98 <flatcc_builder_union_vector_push@@Base+0x45>
  420a79:	lea    rcx,[rip+0x1b0e0]        # 43bb60 <flatcc_builder_padding_base@@Base+0xbe0>
  420a80:	mov    edx,0x68d
  420a85:	lea    rsi,[rip+0x1a6f4]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  420a8c:	lea    rdi,[rip+0x1aa85]        # 43b518 <flatcc_builder_padding_base@@Base+0x598>
  420a93:	call   4061b0 <__assert_fail@plt>
  420a98:	mov    rax,QWORD PTR [rbp-0x18]
  420a9c:	mov    rax,QWORD PTR [rax+0x30]
  420aa0:	mov    eax,DWORD PTR [rax+0x14]
  420aa3:	cmp    eax,0x1fffffff
  420aa8:	jne    420ab1 <flatcc_builder_union_vector_push@@Base+0x5e>
  420aaa:	mov    eax,0x0
  420aaf:	jmp    420afb <flatcc_builder_union_vector_push@@Base+0xa8>
  420ab1:	mov    rax,QWORD PTR [rbp-0x18]
  420ab5:	mov    rax,QWORD PTR [rax+0x30]
  420ab9:	mov    edx,DWORD PTR [rax+0x14]
  420abc:	mov    rax,QWORD PTR [rbp-0x18]
  420ac0:	mov    rax,QWORD PTR [rax+0x30]
  420ac4:	inc    edx
  420ac6:	mov    DWORD PTR [rax+0x14],edx
  420ac9:	mov    rax,QWORD PTR [rbp-0x18]
  420acd:	mov    esi,0x8
  420ad2:	mov    rdi,rax
  420ad5:	call   41c378 <flatcc_builder_default_alloc@@Base+0x26a>
  420ada:	mov    QWORD PTR [rbp-0x8],rax
  420ade:	cmp    QWORD PTR [rbp-0x8],0x0
  420ae3:	jne    420aec <flatcc_builder_union_vector_push@@Base+0x99>
  420ae5:	mov    eax,0x0
  420aea:	jmp    420afb <flatcc_builder_union_vector_push@@Base+0xa8>
  420aec:	mov    rax,QWORD PTR [rbp-0x8]
  420af0:	mov    rdx,QWORD PTR [rbp-0x20]
  420af4:	mov    QWORD PTR [rax],rdx
  420af7:	mov    rax,QWORD PTR [rbp-0x8]
  420afb:	leave  
  420afc:	ret    

0000000000420afd <flatcc_builder_append_union_vector@@Base>:
  420afd:	endbr64 
  420b01:	push   rbp
  420b02:	mov    rbp,rsp
  420b05:	sub    rsp,0x20
  420b09:	mov    QWORD PTR [rbp-0x8],rdi
  420b0d:	mov    QWORD PTR [rbp-0x10],rsi
  420b11:	mov    QWORD PTR [rbp-0x18],rdx
  420b15:	mov    rax,QWORD PTR [rbp-0x8]
  420b19:	mov    rax,QWORD PTR [rax+0x30]
  420b1d:	movzx  eax,WORD PTR [rax+0xe]
  420b21:	cmp    ax,0x7
  420b25:	je     420b46 <flatcc_builder_append_union_vector@@Base+0x49>
  420b27:	lea    rcx,[rip+0x1b072]        # 43bba0 <flatcc_builder_padding_base@@Base+0xc20>
  420b2e:	mov    edx,0x69c
  420b33:	lea    rsi,[rip+0x1a646]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  420b3a:	lea    rdi,[rip+0x1a9d7]        # 43b518 <flatcc_builder_padding_base@@Base+0x598>
  420b41:	call   4061b0 <__assert_fail@plt>
  420b46:	mov    rax,QWORD PTR [rbp-0x18]
  420b4a:	mov    ecx,eax
  420b4c:	mov    rax,QWORD PTR [rbp-0x8]
  420b50:	mov    edx,0x1fffffff
  420b55:	mov    esi,ecx
  420b57:	mov    rdi,rax
  420b5a:	call   41e31d <flatcc_builder_end_struct@@Base+0x92>
  420b5f:	test   eax,eax
  420b61:	je     420b6a <flatcc_builder_append_union_vector@@Base+0x6d>
  420b63:	mov    eax,0x0
  420b68:	jmp    420b88 <flatcc_builder_append_union_vector@@Base+0x8b>
  420b6a:	mov    rax,QWORD PTR [rbp-0x18]
  420b6e:	lea    edx,[rax*8+0x0]
  420b75:	mov    rcx,QWORD PTR [rbp-0x10]
  420b79:	mov    rax,QWORD PTR [rbp-0x8]
  420b7d:	mov    rsi,rcx
  420b80:	mov    rdi,rax
  420b83:	call   41c440 <flatcc_builder_default_alloc@@Base+0x332>
  420b88:	leave  
  420b89:	ret    

0000000000420b8a <flatcc_builder_create_string@@Base>:
  420b8a:	endbr64 
  420b8e:	push   rbp
  420b8f:	mov    rbp,rsp
  420b92:	sub    rsp,0xd0
  420b99:	mov    QWORD PTR [rbp-0xb8],rdi
  420ba0:	mov    QWORD PTR [rbp-0xc0],rsi
  420ba7:	mov    QWORD PTR [rbp-0xc8],rdx
  420bae:	mov    rax,QWORD PTR fs:0x28
  420bb7:	mov    QWORD PTR [rbp-0x8],rax
  420bbb:	xor    eax,eax
  420bbd:	mov    eax,0xffffffff
  420bc2:	cmp    QWORD PTR [rbp-0xc8],rax
  420bc9:	jbe    420bd5 <flatcc_builder_create_string@@Base+0x4b>
  420bcb:	mov    eax,0x0
  420bd0:	jmp    420d78 <flatcc_builder_create_string@@Base+0x1ee>
  420bd5:	mov    rax,QWORD PTR [rbp-0xc8]
  420bdc:	mov    edi,eax
  420bde:	call   41c04e <main@@Base+0x10e7>
  420be3:	mov    DWORD PTR [rbp-0xa8],eax
  420be9:	mov    rax,QWORD PTR [rbp-0xc8]
  420bf0:	lea    ecx,[rax+0x1]
  420bf3:	mov    rax,QWORD PTR [rbp-0xb8]
  420bfa:	mov    edx,0x4
  420bff:	mov    esi,ecx
  420c01:	mov    rdi,rax
  420c04:	call   41d34d <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  420c09:	inc    eax
  420c0b:	mov    DWORD PTR [rbp-0xa4],eax
  420c11:	mov    QWORD PTR [rbp-0xa0],0x0
  420c1c:	mov    DWORD PTR [rbp-0x98],0x0
  420c26:	mov    rax,QWORD PTR [rbp-0xa0]
  420c2d:	add    rax,0x4
  420c31:	mov    QWORD PTR [rbp-0xa0],rax
  420c38:	mov    eax,DWORD PTR [rbp-0x98]
  420c3e:	cdqe   
  420c40:	shl    rax,0x4
  420c44:	add    rax,rbp
  420c47:	lea    rdx,[rax-0x90]
  420c4e:	lea    rax,[rbp-0xa8]
  420c55:	mov    QWORD PTR [rdx],rax
  420c58:	mov    eax,DWORD PTR [rbp-0x98]
  420c5e:	cdqe   
  420c60:	shl    rax,0x4
  420c64:	add    rax,rbp
  420c67:	sub    rax,0x88
  420c6d:	mov    QWORD PTR [rax],0x4
  420c74:	mov    eax,DWORD PTR [rbp-0x98]
  420c7a:	inc    eax
  420c7c:	mov    DWORD PTR [rbp-0x98],eax
  420c82:	cmp    QWORD PTR [rbp-0xc8],0x0
  420c8a:	je     420cf2 <flatcc_builder_create_string@@Base+0x168>
  420c8c:	mov    rdx,QWORD PTR [rbp-0xa0]
  420c93:	mov    rax,QWORD PTR [rbp-0xc8]
  420c9a:	add    rax,rdx
  420c9d:	mov    QWORD PTR [rbp-0xa0],rax
  420ca4:	mov    eax,DWORD PTR [rbp-0x98]
  420caa:	cdqe   
  420cac:	shl    rax,0x4
  420cb0:	add    rax,rbp
  420cb3:	lea    rdx,[rax-0x90]
  420cba:	mov    rax,QWORD PTR [rbp-0xc0]
  420cc1:	mov    QWORD PTR [rdx],rax
  420cc4:	mov    eax,DWORD PTR [rbp-0x98]
  420cca:	cdqe   
  420ccc:	shl    rax,0x4
  420cd0:	add    rax,rbp
  420cd3:	lea    rdx,[rax-0x88]
  420cda:	mov    rax,QWORD PTR [rbp-0xc8]
  420ce1:	mov    QWORD PTR [rdx],rax
  420ce4:	mov    eax,DWORD PTR [rbp-0x98]
  420cea:	inc    eax
  420cec:	mov    DWORD PTR [rbp-0x98],eax
  420cf2:	cmp    DWORD PTR [rbp-0xa4],0x0
  420cf9:	je     420d5f <flatcc_builder_create_string@@Base+0x1d5>
  420cfb:	mov    rdx,QWORD PTR [rbp-0xa0]
  420d02:	mov    eax,DWORD PTR [rbp-0xa4]
  420d08:	add    rax,rdx
  420d0b:	mov    QWORD PTR [rbp-0xa0],rax
  420d12:	mov    eax,DWORD PTR [rbp-0x98]
  420d18:	cdqe   
  420d1a:	shl    rax,0x4
  420d1e:	add    rax,rbp
  420d21:	sub    rax,0x90
  420d27:	mov    rdx,0x43af80
  420d2e:	mov    QWORD PTR [rax],rdx
  420d31:	mov    edx,DWORD PTR [rbp-0x98]
  420d37:	mov    eax,DWORD PTR [rbp-0xa4]
  420d3d:	movsxd rdx,edx
  420d40:	shl    rdx,0x4
  420d44:	add    rdx,rbp
  420d47:	sub    rdx,0x88
  420d4e:	mov    QWORD PTR [rdx],rax
  420d51:	mov    eax,DWORD PTR [rbp-0x98]
  420d57:	inc    eax
  420d59:	mov    DWORD PTR [rbp-0x98],eax
  420d5f:	lea    rdx,[rbp-0xa0]
  420d66:	mov    rax,QWORD PTR [rbp-0xb8]
  420d6d:	mov    rsi,rdx
  420d70:	mov    rdi,rax
  420d73:	call   41d397 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  420d78:	mov    rcx,QWORD PTR [rbp-0x8]
  420d7c:	xor    rcx,QWORD PTR fs:0x28
  420d85:	je     420d8c <flatcc_builder_create_string@@Base+0x202>
  420d87:	call   4061a0 <__stack_chk_fail@plt>
  420d8c:	leave  
  420d8d:	ret    

0000000000420d8e <flatcc_builder_create_string_str@@Base>:
  420d8e:	endbr64 
  420d92:	push   rbp
  420d93:	mov    rbp,rsp
  420d96:	sub    rsp,0x10
  420d9a:	mov    QWORD PTR [rbp-0x8],rdi
  420d9e:	mov    QWORD PTR [rbp-0x10],rsi
  420da2:	mov    rax,QWORD PTR [rbp-0x10]
  420da6:	mov    rdi,rax
  420da9:	call   406190 <strlen@plt>
  420dae:	mov    rdx,rax
  420db1:	mov    rcx,QWORD PTR [rbp-0x10]
  420db5:	mov    rax,QWORD PTR [rbp-0x8]
  420db9:	mov    rsi,rcx
  420dbc:	mov    rdi,rax
  420dbf:	call   420b8a <flatcc_builder_create_string@@Base>
  420dc4:	leave  
  420dc5:	ret    

0000000000420dc6 <flatcc_builder_create_string_strn@@Base>:
  420dc6:	endbr64 
  420dca:	push   rbp
  420dcb:	mov    rbp,rsp
  420dce:	sub    rsp,0x20
  420dd2:	mov    QWORD PTR [rbp-0x8],rdi
  420dd6:	mov    QWORD PTR [rbp-0x10],rsi
  420dda:	mov    QWORD PTR [rbp-0x18],rdx
  420dde:	mov    rdx,QWORD PTR [rbp-0x18]
  420de2:	mov    rax,QWORD PTR [rbp-0x10]
  420de6:	mov    rsi,rdx
  420de9:	mov    rdi,rax
  420dec:	call   41c0ce <main@@Base+0x1167>
  420df1:	mov    rdx,rax
  420df4:	mov    rcx,QWORD PTR [rbp-0x10]
  420df8:	mov    rax,QWORD PTR [rbp-0x8]
  420dfc:	mov    rsi,rcx
  420dff:	mov    rdi,rax
  420e02:	call   420b8a <flatcc_builder_create_string@@Base>
  420e07:	leave  
  420e08:	ret    

0000000000420e09 <flatcc_builder_end_string@@Base>:
  420e09:	endbr64 
  420e0d:	push   rbp
  420e0e:	mov    rbp,rsp
  420e11:	sub    rsp,0x20
  420e15:	mov    QWORD PTR [rbp-0x18],rdi
  420e19:	mov    rax,QWORD PTR [rbp-0x18]
  420e1d:	mov    rax,QWORD PTR [rax+0x30]
  420e21:	movzx  eax,WORD PTR [rax+0xe]
  420e25:	cmp    ax,0x6
  420e29:	je     420e4a <flatcc_builder_end_string@@Base+0x41>
  420e2b:	lea    rcx,[rip+0x1ad9e]        # 43bbd0 <flatcc_builder_padding_base@@Base+0xc50>
  420e32:	mov    edx,0x6c4
  420e37:	lea    rsi,[rip+0x1a342]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  420e3e:	lea    rdi,[rip+0x1a52b]        # 43b370 <flatcc_builder_padding_base@@Base+0x3f0>
  420e45:	call   4061b0 <__assert_fail@plt>
  420e4a:	mov    rax,QWORD PTR [rbp-0x18]
  420e4e:	mov    rax,QWORD PTR [rax+0x30]
  420e52:	mov    edx,DWORD PTR [rax+0x14]
  420e55:	mov    rax,QWORD PTR [rbp-0x18]
  420e59:	mov    eax,DWORD PTR [rax+0x20]
  420e5c:	cmp    edx,eax
  420e5e:	je     420e7f <flatcc_builder_end_string@@Base+0x76>
  420e60:	lea    rcx,[rip+0x1ad69]        # 43bbd0 <flatcc_builder_padding_base@@Base+0xc50>
  420e67:	mov    edx,0x6c5
  420e6c:	lea    rsi,[rip+0x1a30d]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  420e73:	lea    rdi,[rip+0x1a6d6]        # 43b550 <flatcc_builder_padding_base@@Base+0x5d0>
  420e7a:	call   4061b0 <__assert_fail@plt>
  420e7f:	mov    rax,QWORD PTR [rbp-0x18]
  420e83:	mov    eax,DWORD PTR [rax+0x20]
  420e86:	mov    edx,eax
  420e88:	mov    rax,QWORD PTR [rbp-0x18]
  420e8c:	mov    rcx,QWORD PTR [rax+0x18]
  420e90:	mov    rax,QWORD PTR [rbp-0x18]
  420e94:	mov    rsi,rcx
  420e97:	mov    rdi,rax
  420e9a:	call   420b8a <flatcc_builder_create_string@@Base>
  420e9f:	mov    DWORD PTR [rbp-0x4],eax
  420ea2:	cmp    DWORD PTR [rbp-0x4],0x0
  420ea6:	jne    420eaf <flatcc_builder_end_string@@Base+0xa6>
  420ea8:	mov    eax,0x0
  420ead:	jmp    420ebe <flatcc_builder_end_string@@Base+0xb5>
  420eaf:	mov    rax,QWORD PTR [rbp-0x18]
  420eb3:	mov    rdi,rax
  420eb6:	call   41d286 <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  420ebb:	mov    eax,DWORD PTR [rbp-0x4]
  420ebe:	leave  
  420ebf:	ret    

0000000000420ec0 <flatcc_builder_string_edit@@Base>:
  420ec0:	endbr64 
  420ec4:	push   rbp
  420ec5:	mov    rbp,rsp
  420ec8:	mov    QWORD PTR [rbp-0x8],rdi
  420ecc:	mov    rax,QWORD PTR [rbp-0x8]
  420ed0:	mov    rax,QWORD PTR [rax+0x18]
  420ed4:	pop    rbp
  420ed5:	ret    

0000000000420ed6 <flatcc_builder_string_len@@Base>:
  420ed6:	endbr64 
  420eda:	push   rbp
  420edb:	mov    rbp,rsp
  420ede:	mov    QWORD PTR [rbp-0x8],rdi
  420ee2:	mov    rax,QWORD PTR [rbp-0x8]
  420ee6:	mov    rax,QWORD PTR [rax+0x30]
  420eea:	mov    eax,DWORD PTR [rax+0x14]
  420eed:	mov    eax,eax
  420eef:	pop    rbp
  420ef0:	ret    

0000000000420ef1 <flatcc_builder_table_add@@Base>:
  420ef1:	endbr64 
  420ef5:	push   rbp
  420ef6:	mov    rbp,rsp
  420ef9:	sub    rsp,0x20
  420efd:	mov    QWORD PTR [rbp-0x8],rdi
  420f01:	mov    DWORD PTR [rbp-0xc],esi
  420f04:	mov    QWORD PTR [rbp-0x18],rdx
  420f08:	mov    eax,ecx
  420f0a:	mov    WORD PTR [rbp-0x10],ax
  420f0e:	mov    rax,QWORD PTR [rbp-0x8]
  420f12:	mov    rax,QWORD PTR [rax+0x30]
  420f16:	movzx  eax,WORD PTR [rax+0xe]
  420f1a:	cmp    ax,0x3
  420f1e:	je     420f3f <flatcc_builder_table_add@@Base+0x4e>
  420f20:	lea    rcx,[rip+0x1acc9]        # 43bbf0 <flatcc_builder_padding_base@@Base+0xc70>
  420f27:	mov    edx,0x6ed
  420f2c:	lea    rsi,[rip+0x1a24d]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  420f33:	lea    rdi,[rip+0x1a51e]        # 43b458 <flatcc_builder_padding_base@@Base+0x4d8>
  420f3a:	call   4061b0 <__assert_fail@plt>
  420f3f:	cmp    DWORD PTR [rbp-0xc],0x0
  420f43:	js     420f4e <flatcc_builder_table_add@@Base+0x5d>
  420f45:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  420f4c:	jle    420f6d <flatcc_builder_table_add@@Base+0x7c>
  420f4e:	lea    rcx,[rip+0x1ac9b]        # 43bbf0 <flatcc_builder_padding_base@@Base+0xc70>
  420f55:	mov    edx,0x6ee
  420f5a:	lea    rsi,[rip+0x1a21f]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  420f61:	lea    rdi,[rip+0x1a610]        # 43b578 <flatcc_builder_padding_base@@Base+0x5f8>
  420f68:	call   4061b0 <__assert_fail@plt>
  420f6d:	mov    rax,QWORD PTR [rbp-0x8]
  420f71:	movzx  eax,WORD PTR [rax+0xea]
  420f78:	cmp    WORD PTR [rbp-0x10],ax
  420f7c:	jbe    420f8d <flatcc_builder_table_add@@Base+0x9c>
  420f7e:	mov    rdx,QWORD PTR [rbp-0x8]
  420f82:	movzx  eax,WORD PTR [rbp-0x10]
  420f86:	mov    WORD PTR [rdx+0xea],ax
  420f8d:	mov    rax,QWORD PTR [rbp-0x8]
  420f91:	mov    rax,QWORD PTR [rax+0x8]
  420f95:	mov    edx,DWORD PTR [rbp-0xc]
  420f98:	movsxd rdx,edx
  420f9b:	add    rdx,rdx
  420f9e:	add    rax,rdx
  420fa1:	movzx  eax,WORD PTR [rax]
  420fa4:	test   ax,ax
  420fa7:	je     420fc8 <flatcc_builder_table_add@@Base+0xd7>
  420fa9:	lea    rcx,[rip+0x1ac40]        # 43bbf0 <flatcc_builder_padding_base@@Base+0xc70>
  420fb0:	mov    edx,0x6f8
  420fb5:	lea    rsi,[rip+0x1a1c4]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  420fbc:	lea    rdi,[rip+0x1a21d]        # 43b1e0 <flatcc_builder_padding_base@@Base+0x260>
  420fc3:	call   4061b0 <__assert_fail@plt>
  420fc8:	mov    rax,QWORD PTR [rbp-0x8]
  420fcc:	mov    edx,DWORD PTR [rax+0x14]
  420fcf:	mov    eax,DWORD PTR [rbp-0xc]
  420fd2:	xor    eax,edx
  420fd4:	imul   eax,eax,0x9e3779b1
  420fda:	mov    rdx,QWORD PTR [rbp-0x18]
  420fde:	xor    eax,edx
  420fe0:	imul   edx,eax,0x9e3779b1
  420fe6:	mov    rax,QWORD PTR [rbp-0x8]
  420fea:	mov    DWORD PTR [rax+0x14],edx
  420fed:	mov    eax,DWORD PTR [rbp-0xc]
  420ff0:	movzx  ecx,ax
  420ff3:	movzx  edx,WORD PTR [rbp-0x10]
  420ff7:	mov    rax,QWORD PTR [rbp-0x18]
  420ffb:	mov    esi,eax
  420ffd:	mov    rax,QWORD PTR [rbp-0x8]
  421001:	mov    rdi,rax
  421004:	call   41c492 <flatcc_builder_default_alloc@@Base+0x384>
  421009:	leave  
  42100a:	ret    

000000000042100b <flatcc_builder_table_edit@@Base>:
  42100b:	endbr64 
  42100f:	push   rbp
  421010:	mov    rbp,rsp
  421013:	sub    rsp,0x10
  421017:	mov    QWORD PTR [rbp-0x8],rdi
  42101b:	mov    QWORD PTR [rbp-0x10],rsi
  42101f:	mov    rax,QWORD PTR [rbp-0x8]
  421023:	mov    rax,QWORD PTR [rax+0x30]
  421027:	movzx  eax,WORD PTR [rax+0xe]
  42102b:	cmp    ax,0x3
  42102f:	je     421050 <flatcc_builder_table_edit@@Base+0x45>
  421031:	lea    rcx,[rip+0x1abd8]        # 43bc10 <flatcc_builder_padding_base@@Base+0xc90>
  421038:	mov    edx,0x702
  42103d:	lea    rsi,[rip+0x1a13c]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  421044:	lea    rdi,[rip+0x1a40d]        # 43b458 <flatcc_builder_padding_base@@Base+0x4d8>
  42104b:	call   4061b0 <__assert_fail@plt>
  421050:	mov    rax,QWORD PTR [rbp-0x8]
  421054:	mov    rdx,QWORD PTR [rax+0x18]
  421058:	mov    rax,QWORD PTR [rbp-0x8]
  42105c:	mov    eax,DWORD PTR [rax+0x20]
  42105f:	mov    eax,eax
  421061:	sub    rax,QWORD PTR [rbp-0x10]
  421065:	add    rax,rdx
  421068:	leave  
  421069:	ret    

000000000042106a <flatcc_builder_table_add_copy@@Base>:
  42106a:	endbr64 
  42106e:	push   rbp
  42106f:	mov    rbp,rsp
  421072:	sub    rsp,0x30
  421076:	mov    QWORD PTR [rbp-0x18],rdi
  42107a:	mov    DWORD PTR [rbp-0x1c],esi
  42107d:	mov    QWORD PTR [rbp-0x28],rdx
  421081:	mov    QWORD PTR [rbp-0x30],rcx
  421085:	mov    eax,r8d
  421088:	mov    WORD PTR [rbp-0x20],ax
  42108c:	movzx  ecx,WORD PTR [rbp-0x20]
  421090:	mov    rdx,QWORD PTR [rbp-0x30]
  421094:	mov    esi,DWORD PTR [rbp-0x1c]
  421097:	mov    rax,QWORD PTR [rbp-0x18]
  42109b:	mov    rdi,rax
  42109e:	call   420ef1 <flatcc_builder_table_add@@Base>
  4210a3:	mov    QWORD PTR [rbp-0x8],rax
  4210a7:	cmp    QWORD PTR [rbp-0x8],0x0
  4210ac:	je     4210c5 <flatcc_builder_table_add_copy@@Base+0x5b>
  4210ae:	mov    rdx,QWORD PTR [rbp-0x30]
  4210b2:	mov    rcx,QWORD PTR [rbp-0x28]
  4210b6:	mov    rax,QWORD PTR [rbp-0x8]
  4210ba:	mov    rsi,rcx
  4210bd:	mov    rdi,rax
  4210c0:	call   406220 <memcpy@plt>
  4210c5:	mov    rax,QWORD PTR [rbp-0x8]
  4210c9:	leave  
  4210ca:	ret    

00000000004210cb <flatcc_builder_table_add_offset@@Base>:
  4210cb:	endbr64 
  4210cf:	push   rbp
  4210d0:	mov    rbp,rsp
  4210d3:	sub    rsp,0x10
  4210d7:	mov    QWORD PTR [rbp-0x8],rdi
  4210db:	mov    DWORD PTR [rbp-0xc],esi
  4210de:	mov    rax,QWORD PTR [rbp-0x8]
  4210e2:	mov    rax,QWORD PTR [rax+0x30]
  4210e6:	movzx  eax,WORD PTR [rax+0xe]
  4210ea:	cmp    ax,0x3
  4210ee:	je     42110f <flatcc_builder_table_add_offset@@Base+0x44>
  4210f0:	lea    rcx,[rip+0x1ab49]        # 43bc40 <flatcc_builder_padding_base@@Base+0xcc0>
  4210f7:	mov    edx,0x713
  4210fc:	lea    rsi,[rip+0x1a07d]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  421103:	lea    rdi,[rip+0x1a34e]        # 43b458 <flatcc_builder_padding_base@@Base+0x4d8>
  42110a:	call   4061b0 <__assert_fail@plt>
  42110f:	cmp    DWORD PTR [rbp-0xc],0x0
  421113:	js     42111e <flatcc_builder_table_add_offset@@Base+0x53>
  421115:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  42111c:	jle    42113d <flatcc_builder_table_add_offset@@Base+0x72>
  42111e:	lea    rcx,[rip+0x1ab1b]        # 43bc40 <flatcc_builder_padding_base@@Base+0xcc0>
  421125:	mov    edx,0x714
  42112a:	lea    rsi,[rip+0x1a04f]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  421131:	lea    rdi,[rip+0x1a440]        # 43b578 <flatcc_builder_padding_base@@Base+0x5f8>
  421138:	call   4061b0 <__assert_fail@plt>
  42113d:	mov    rax,QWORD PTR [rbp-0x8]
  421141:	mov    rax,QWORD PTR [rax+0x8]
  421145:	mov    edx,DWORD PTR [rbp-0xc]
  421148:	movsxd rdx,edx
  42114b:	add    rdx,rdx
  42114e:	add    rax,rdx
  421151:	movzx  eax,WORD PTR [rax]
  421154:	test   ax,ax
  421157:	je     421178 <flatcc_builder_table_add_offset@@Base+0xad>
  421159:	lea    rcx,[rip+0x1aae0]        # 43bc40 <flatcc_builder_padding_base@@Base+0xcc0>
  421160:	mov    edx,0x71b
  421165:	lea    rsi,[rip+0x1a014]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  42116c:	lea    rdi,[rip+0x1a06d]        # 43b1e0 <flatcc_builder_padding_base@@Base+0x260>
  421173:	call   4061b0 <__assert_fail@plt>
  421178:	mov    rax,QWORD PTR [rbp-0x8]
  42117c:	mov    edx,DWORD PTR [rax+0x14]
  42117f:	mov    eax,DWORD PTR [rbp-0xc]
  421182:	xor    eax,edx
  421184:	imul   eax,eax,0x9e3779b1
  42118a:	xor    eax,0x4
  42118d:	imul   edx,eax,0x9e3779b1
  421193:	mov    rax,QWORD PTR [rbp-0x8]
  421197:	mov    DWORD PTR [rax+0x14],edx
  42119a:	mov    eax,DWORD PTR [rbp-0xc]
  42119d:	movzx  edx,ax
  4211a0:	mov    rax,QWORD PTR [rbp-0x8]
  4211a4:	mov    esi,edx
  4211a6:	mov    rdi,rax
  4211a9:	call   41c55a <flatcc_builder_default_alloc@@Base+0x44c>
  4211ae:	leave  
  4211af:	ret    

00000000004211b0 <flatcc_builder_push_buffer_alignment@@Base>:
  4211b0:	endbr64 
  4211b4:	push   rbp
  4211b5:	mov    rbp,rsp
  4211b8:	mov    QWORD PTR [rbp-0x18],rdi
  4211bc:	mov    rax,QWORD PTR [rbp-0x18]
  4211c0:	movzx  eax,WORD PTR [rax+0xe8]
  4211c7:	mov    WORD PTR [rbp-0x2],ax
  4211cb:	mov    rax,QWORD PTR [rbp-0x18]
  4211cf:	mov    WORD PTR [rax+0xe8],0x4
  4211d8:	movzx  eax,WORD PTR [rbp-0x2]
  4211dc:	pop    rbp
  4211dd:	ret    

00000000004211de <flatcc_builder_pop_buffer_alignment@@Base>:
  4211de:	endbr64 
  4211e2:	push   rbp
  4211e3:	mov    rbp,rsp
  4211e6:	sub    rsp,0x10
  4211ea:	mov    QWORD PTR [rbp-0x8],rdi
  4211ee:	mov    eax,esi
  4211f0:	mov    WORD PTR [rbp-0xc],ax
  4211f4:	movzx  edx,WORD PTR [rbp-0xc]
  4211f8:	mov    rax,QWORD PTR [rbp-0x8]
  4211fc:	mov    esi,edx
  4211fe:	mov    rdi,rax
  421201:	call   41cd7a <flatcc_builder_clear@@Base+0x99>
  421206:	nop
  421207:	leave  
  421208:	ret    

0000000000421209 <flatcc_builder_get_buffer_alignment@@Base>:
  421209:	endbr64 
  42120d:	push   rbp
  42120e:	mov    rbp,rsp
  421211:	mov    QWORD PTR [rbp-0x8],rdi
  421215:	mov    rax,QWORD PTR [rbp-0x8]
  421219:	movzx  eax,WORD PTR [rax+0xe8]
  421220:	pop    rbp
  421221:	ret    

0000000000421222 <flatcc_builder_set_vtable_clustering@@Base>:
  421222:	endbr64 
  421226:	push   rbp
  421227:	mov    rbp,rsp
  42122a:	mov    QWORD PTR [rbp-0x8],rdi
  42122e:	mov    DWORD PTR [rbp-0xc],esi
  421231:	cmp    DWORD PTR [rbp-0xc],0x0
  421235:	sete   al
  421238:	movzx  edx,al
  42123b:	mov    rax,QWORD PTR [rbp-0x8]
  42123f:	mov    DWORD PTR [rax+0x124],edx
  421245:	nop
  421246:	pop    rbp
  421247:	ret    

0000000000421248 <flatcc_builder_set_block_align@@Base>:
  421248:	endbr64 
  42124c:	push   rbp
  42124d:	mov    rbp,rsp
  421250:	mov    QWORD PTR [rbp-0x8],rdi
  421254:	mov    eax,esi
  421256:	mov    WORD PTR [rbp-0xc],ax
  42125a:	mov    rdx,QWORD PTR [rbp-0x8]
  42125e:	movzx  eax,WORD PTR [rbp-0xc]
  421262:	mov    WORD PTR [rdx+0xec],ax
  421269:	nop
  42126a:	pop    rbp
  42126b:	ret    

000000000042126c <flatcc_builder_get_level@@Base>:
  42126c:	endbr64 
  421270:	push   rbp
  421271:	mov    rbp,rsp
  421274:	mov    QWORD PTR [rbp-0x8],rdi
  421278:	mov    rax,QWORD PTR [rbp-0x8]
  42127c:	mov    eax,DWORD PTR [rax+0x104]
  421282:	pop    rbp
  421283:	ret    

0000000000421284 <flatcc_builder_set_max_level@@Base>:
  421284:	endbr64 
  421288:	push   rbp
  421289:	mov    rbp,rsp
  42128c:	mov    QWORD PTR [rbp-0x8],rdi
  421290:	mov    DWORD PTR [rbp-0xc],esi
  421293:	mov    rax,QWORD PTR [rbp-0x8]
  421297:	mov    edx,DWORD PTR [rbp-0xc]
  42129a:	mov    DWORD PTR [rax+0x120],edx
  4212a0:	mov    rax,QWORD PTR [rbp-0x8]
  4212a4:	mov    edx,DWORD PTR [rax+0x108]
  4212aa:	mov    rax,QWORD PTR [rbp-0x8]
  4212ae:	mov    eax,DWORD PTR [rax+0x120]
  4212b4:	cmp    edx,eax
  4212b6:	jge    4212cc <flatcc_builder_set_max_level@@Base+0x48>
  4212b8:	mov    rax,QWORD PTR [rbp-0x8]
  4212bc:	mov    edx,DWORD PTR [rax+0x120]
  4212c2:	mov    rax,QWORD PTR [rbp-0x8]
  4212c6:	mov    DWORD PTR [rax+0x108],edx
  4212cc:	nop
  4212cd:	pop    rbp
  4212ce:	ret    

00000000004212cf <flatcc_builder_get_buffer_size@@Base>:
  4212cf:	endbr64 
  4212d3:	push   rbp
  4212d4:	mov    rbp,rsp
  4212d7:	mov    QWORD PTR [rbp-0x8],rdi
  4212db:	mov    rax,QWORD PTR [rbp-0x8]
  4212df:	mov    edx,DWORD PTR [rax+0xf4]
  4212e5:	mov    rax,QWORD PTR [rbp-0x8]
  4212e9:	mov    eax,DWORD PTR [rax+0xf0]
  4212ef:	sub    edx,eax
  4212f1:	mov    eax,edx
  4212f3:	cdqe   
  4212f5:	pop    rbp
  4212f6:	ret    

00000000004212f7 <flatcc_builder_get_buffer_start@@Base>:
  4212f7:	endbr64 
  4212fb:	push   rbp
  4212fc:	mov    rbp,rsp
  4212ff:	mov    QWORD PTR [rbp-0x8],rdi
  421303:	mov    rax,QWORD PTR [rbp-0x8]
  421307:	mov    eax,DWORD PTR [rax+0xf0]
  42130d:	pop    rbp
  42130e:	ret    

000000000042130f <flatcc_builder_get_buffer_end@@Base>:
  42130f:	endbr64 
  421313:	push   rbp
  421314:	mov    rbp,rsp
  421317:	mov    QWORD PTR [rbp-0x8],rdi
  42131b:	mov    rax,QWORD PTR [rbp-0x8]
  42131f:	mov    eax,DWORD PTR [rax+0xf4]
  421325:	pop    rbp
  421326:	ret    

0000000000421327 <flatcc_builder_set_vtable_cache_limit@@Base>:
  421327:	endbr64 
  42132b:	push   rbp
  42132c:	mov    rbp,rsp
  42132f:	mov    QWORD PTR [rbp-0x8],rdi
  421333:	mov    QWORD PTR [rbp-0x10],rsi
  421337:	mov    rax,QWORD PTR [rbp-0x8]
  42133b:	mov    rdx,QWORD PTR [rbp-0x10]
  42133f:	mov    QWORD PTR [rax+0x118],rdx
  421346:	nop
  421347:	pop    rbp
  421348:	ret    

0000000000421349 <flatcc_builder_set_identifier@@Base>:
  421349:	endbr64 
  42134d:	push   rbp
  42134e:	mov    rbp,rsp
  421351:	mov    QWORD PTR [rbp-0x8],rdi
  421355:	mov    QWORD PTR [rbp-0x10],rsi
  421359:	cmp    QWORD PTR [rbp-0x10],0x0
  42135e:	je     421366 <flatcc_builder_set_identifier@@Base+0x1d>
  421360:	mov    rax,QWORD PTR [rbp-0x10]
  421364:	jmp    42136d <flatcc_builder_set_identifier@@Base+0x24>
  421366:	mov    rax,0x43af80
  42136d:	mov    rdx,QWORD PTR [rbp-0x8]
  421371:	add    rdx,0x110
  421378:	mov    eax,DWORD PTR [rax]
  42137a:	mov    DWORD PTR [rdx],eax
  42137c:	nop
  42137d:	pop    rbp
  42137e:	ret    

000000000042137f <flatcc_builder_get_type@@Base>:
  42137f:	endbr64 
  421383:	push   rbp
  421384:	mov    rbp,rsp
  421387:	mov    QWORD PTR [rbp-0x8],rdi
  42138b:	mov    rax,QWORD PTR [rbp-0x8]
  42138f:	mov    rax,QWORD PTR [rax+0x30]
  421393:	test   rax,rax
  421396:	je     4213a9 <flatcc_builder_get_type@@Base+0x2a>
  421398:	mov    rax,QWORD PTR [rbp-0x8]
  42139c:	mov    rax,QWORD PTR [rax+0x30]
  4213a0:	movzx  eax,WORD PTR [rax+0xe]
  4213a4:	movzx  eax,ax
  4213a7:	jmp    4213ae <flatcc_builder_get_type@@Base+0x2f>
  4213a9:	mov    eax,0x0
  4213ae:	pop    rbp
  4213af:	ret    

00000000004213b0 <flatcc_builder_get_type_at@@Base>:
  4213b0:	endbr64 
  4213b4:	push   rbp
  4213b5:	mov    rbp,rsp
  4213b8:	mov    QWORD PTR [rbp-0x8],rdi
  4213bc:	mov    DWORD PTR [rbp-0xc],esi
  4213bf:	cmp    DWORD PTR [rbp-0xc],0x0
  4213c3:	jle    4213d4 <flatcc_builder_get_type_at@@Base+0x24>
  4213c5:	mov    rax,QWORD PTR [rbp-0x8]
  4213c9:	mov    eax,DWORD PTR [rax+0x104]
  4213cf:	cmp    DWORD PTR [rbp-0xc],eax
  4213d2:	jle    4213db <flatcc_builder_get_type_at@@Base+0x2b>
  4213d4:	mov    eax,0x0
  4213d9:	jmp    42140f <flatcc_builder_get_type_at@@Base+0x5f>
  4213db:	mov    rax,QWORD PTR [rbp-0x8]
  4213df:	mov    rcx,QWORD PTR [rax+0x30]
  4213e3:	mov    rax,QWORD PTR [rbp-0x8]
  4213e7:	mov    eax,DWORD PTR [rax+0x104]
  4213ed:	mov    edx,DWORD PTR [rbp-0xc]
  4213f0:	sub    edx,eax
  4213f2:	mov    eax,edx
  4213f4:	movsxd rdx,eax
  4213f7:	mov    rax,rdx
  4213fa:	shl    rax,0x3
  4213fe:	add    rax,rdx
  421401:	shl    rax,0x2
  421405:	add    rax,rcx
  421408:	movzx  eax,WORD PTR [rax+0xe]
  42140c:	movzx  eax,ax
  42140f:	pop    rbp
  421410:	ret    

0000000000421411 <flatcc_builder_get_direct_buffer@@Base>:
  421411:	endbr64 
  421415:	push   rbp
  421416:	mov    rbp,rsp
  421419:	sub    rsp,0x10
  42141d:	mov    QWORD PTR [rbp-0x8],rdi
  421421:	mov    QWORD PTR [rbp-0x10],rsi
  421425:	mov    rax,QWORD PTR [rbp-0x8]
  421429:	mov    eax,DWORD PTR [rax+0x128]
  42142f:	test   eax,eax
  421431:	je     42144f <flatcc_builder_get_direct_buffer@@Base+0x3e>
  421433:	mov    rax,QWORD PTR [rbp-0x8]
  421437:	lea    rdx,[rax+0x130]
  42143e:	mov    rax,QWORD PTR [rbp-0x10]
  421442:	mov    rsi,rax
  421445:	mov    rdi,rdx
  421448:	call   41c075 <main@@Base+0x110e>
  42144d:	jmp    421466 <flatcc_builder_get_direct_buffer@@Base+0x55>
  42144f:	cmp    QWORD PTR [rbp-0x10],0x0
  421454:	je     421461 <flatcc_builder_get_direct_buffer@@Base+0x50>
  421456:	mov    rax,QWORD PTR [rbp-0x10]
  42145a:	mov    QWORD PTR [rax],0x0
  421461:	mov    eax,0x0
  421466:	leave  
  421467:	ret    

0000000000421468 <flatcc_builder_copy_buffer@@Base>:
  421468:	endbr64 
  42146c:	push   rbp
  42146d:	mov    rbp,rsp
  421470:	sub    rsp,0x20
  421474:	mov    QWORD PTR [rbp-0x8],rdi
  421478:	mov    QWORD PTR [rbp-0x10],rsi
  42147c:	mov    QWORD PTR [rbp-0x18],rdx
  421480:	mov    rax,QWORD PTR [rbp-0x8]
  421484:	mov    eax,DWORD PTR [rax+0x128]
  42148a:	test   eax,eax
  42148c:	jne    421495 <flatcc_builder_copy_buffer@@Base+0x2d>
  42148e:	mov    eax,0x0
  421493:	jmp    4214e1 <flatcc_builder_copy_buffer@@Base+0x79>
  421495:	mov    rax,QWORD PTR [rbp-0x8]
  421499:	lea    rcx,[rax+0x130]
  4214a0:	mov    rdx,QWORD PTR [rbp-0x18]
  4214a4:	mov    rax,QWORD PTR [rbp-0x10]
  4214a8:	mov    rsi,rax
  4214ab:	mov    rdi,rcx
  4214ae:	call   42211c <flatcc_emitter_copy_buffer@@Base>
  4214b3:	mov    QWORD PTR [rbp-0x10],rax
  4214b7:	cmp    QWORD PTR [rbp-0x10],0x0
  4214bc:	jne    4214dd <flatcc_builder_copy_buffer@@Base+0x75>
  4214be:	lea    rcx,[rip+0x1a79b]        # 43bc60 <flatcc_builder_padding_base@@Base+0xce0>
  4214c5:	mov    edx,0x786
  4214ca:	lea    rsi,[rip+0x19caf]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  4214d1:	lea    rdi,[rip+0x1a0e4]        # 43b5bc <flatcc_builder_padding_base@@Base+0x63c>
  4214d8:	call   4061b0 <__assert_fail@plt>
  4214dd:	mov    rax,QWORD PTR [rbp-0x10]
  4214e1:	leave  
  4214e2:	ret    

00000000004214e3 <flatcc_builder_finalize_buffer@@Base>:
  4214e3:	endbr64 
  4214e7:	push   rbp
  4214e8:	mov    rbp,rsp
  4214eb:	sub    rsp,0x20
  4214ef:	mov    QWORD PTR [rbp-0x18],rdi
  4214f3:	mov    QWORD PTR [rbp-0x20],rsi
  4214f7:	mov    rax,QWORD PTR [rbp-0x18]
  4214fb:	mov    rdi,rax
  4214fe:	call   4212cf <flatcc_builder_get_buffer_size@@Base>
  421503:	mov    QWORD PTR [rbp-0x10],rax
  421507:	cmp    QWORD PTR [rbp-0x20],0x0
  42150c:	je     421519 <flatcc_builder_finalize_buffer@@Base+0x36>
  42150e:	mov    rax,QWORD PTR [rbp-0x20]
  421512:	mov    rdx,QWORD PTR [rbp-0x10]
  421516:	mov    QWORD PTR [rax],rdx
  421519:	mov    rax,QWORD PTR [rbp-0x10]
  42151d:	mov    rdi,rax
  421520:	call   406230 <malloc@plt>
  421525:	mov    QWORD PTR [rbp-0x8],rax
  421529:	cmp    QWORD PTR [rbp-0x8],0x0
  42152e:	jne    42154f <flatcc_builder_finalize_buffer@@Base+0x6c>
  421530:	lea    rcx,[rip+0x1a749]        # 43bc80 <flatcc_builder_padding_base@@Base+0xd00>
  421537:	mov    edx,0x798
  42153c:	lea    rsi,[rip+0x19c3d]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  421543:	lea    rdi,[rip+0x19c96]        # 43b1e0 <flatcc_builder_padding_base@@Base+0x260>
  42154a:	call   4061b0 <__assert_fail@plt>
  42154f:	mov    rdx,QWORD PTR [rbp-0x10]
  421553:	mov    rcx,QWORD PTR [rbp-0x8]
  421557:	mov    rax,QWORD PTR [rbp-0x18]
  42155b:	mov    rsi,rcx
  42155e:	mov    rdi,rax
  421561:	call   421468 <flatcc_builder_copy_buffer@@Base>
  421566:	test   rax,rax
  421569:	jne    42158a <flatcc_builder_finalize_buffer@@Base+0xa7>
  42156b:	lea    rcx,[rip+0x1a70e]        # 43bc80 <flatcc_builder_padding_base@@Base+0xd00>
  421572:	mov    edx,0x79c
  421577:	lea    rsi,[rip+0x19c02]        # 43b180 <flatcc_builder_padding_base@@Base+0x200>
  42157e:	lea    rdi,[rip+0x19c5b]        # 43b1e0 <flatcc_builder_padding_base@@Base+0x260>
  421585:	call   4061b0 <__assert_fail@plt>
  42158a:	nop
  42158b:	endbr64 
  42158f:	cmp    QWORD PTR [rbp-0x8],0x0
  421594:	jne    4215a8 <flatcc_builder_finalize_buffer@@Base+0xc5>
  421596:	cmp    QWORD PTR [rbp-0x20],0x0
  42159b:	je     4215a8 <flatcc_builder_finalize_buffer@@Base+0xc5>
  42159d:	mov    rax,QWORD PTR [rbp-0x20]
  4215a1:	mov    QWORD PTR [rax],0x0
  4215a8:	mov    rax,QWORD PTR [rbp-0x8]
  4215ac:	leave  
  4215ad:	ret    

00000000004215ae <flatcc_builder_finalize_aligned_buffer@@Base>:
  4215ae:	endbr64 
  4215b2:	push   rbp
  4215b3:	mov    rbp,rsp
  4215b6:	sub    rsp,0x30
  4215ba:	mov    QWORD PTR [rbp-0x28],rdi
  4215be:	mov    QWORD PTR [rbp-0x30],rsi
  4215c2:	mov    rax,QWORD PTR [rbp-0x28]
  4215c6:	mov    rdi,rax
  4215c9:	call   4212cf <flatcc_builder_get_buffer_size@@Base>
  4215ce:	mov    QWORD PTR [rbp-0x10],rax
  4215d2:	cmp    QWORD PTR [rbp-0x30],0x0
  4215d7:	je     4215e4 <flatcc_builder_finalize_aligned_buffer@@Base+0x36>
  4215d9:	mov    rax,QWORD PTR [rbp-0x30]
  4215dd:	mov    rdx,QWORD PTR [rbp-0x10]
  4215e1:	mov    QWORD PTR [rax],rdx
  4215e4:	mov    rax,QWORD PTR [rbp-0x28]
  4215e8:	mov    rdi,rax
  4215eb:	call   421209 <flatcc_builder_get_buffer_alignment@@Base>
  4215f0:	movzx  eax,ax
  4215f3:	mov    QWORD PTR [rbp-0x8],rax
  4215f7:	mov    rdx,QWORD PTR [rbp-0x10]
  4215fb:	mov    rax,QWORD PTR [rbp-0x8]
  4215ff:	add    rax,rdx
  421602:	lea    rdx,[rax-0x1]
  421606:	mov    rax,QWORD PTR [rbp-0x8]
  42160a:	neg    rax
  42160d:	and    rax,rdx
  421610:	mov    QWORD PTR [rbp-0x10],rax
  421614:	mov    rdx,QWORD PTR [rbp-0x10]
  421618:	mov    rax,QWORD PTR [rbp-0x8]
  42161c:	mov    rsi,rdx
  42161f:	mov    rdi,rax
  421622:	call   41bfc1 <main@@Base+0x105a>
  421627:	mov    QWORD PTR [rbp-0x18],rax
  42162b:	cmp    QWORD PTR [rbp-0x18],0x0
  421630:	je     421664 <flatcc_builder_finalize_aligned_buffer@@Base+0xb6>
  421632:	mov    rdx,QWORD PTR [rbp-0x10]
  421636:	mov    rcx,QWORD PTR [rbp-0x18]
  42163a:	mov    rax,QWORD PTR [rbp-0x28]
  42163e:	mov    rsi,rcx
  421641:	mov    rdi,rax
  421644:	call   421468 <flatcc_builder_copy_buffer@@Base>
  421649:	test   rax,rax
  42164c:	jne    421667 <flatcc_builder_finalize_aligned_buffer@@Base+0xb9>
  42164e:	mov    rax,QWORD PTR [rbp-0x18]
  421652:	mov    rdi,rax
  421655:	call   406160 <free@plt>
  42165a:	mov    QWORD PTR [rbp-0x18],0x0
  421662:	jmp    421668 <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  421664:	nop
  421665:	jmp    421668 <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  421667:	nop
  421668:	cmp    QWORD PTR [rbp-0x18],0x0
  42166d:	jne    421681 <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  42166f:	cmp    QWORD PTR [rbp-0x30],0x0
  421674:	je     421681 <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  421676:	mov    rax,QWORD PTR [rbp-0x30]
  42167a:	mov    QWORD PTR [rax],0x0
  421681:	mov    rax,QWORD PTR [rbp-0x18]
  421685:	leave  
  421686:	ret    

0000000000421687 <flatcc_builder_aligned_alloc@@Base>:
  421687:	endbr64 
  42168b:	push   rbp
  42168c:	mov    rbp,rsp
  42168f:	sub    rsp,0x10
  421693:	mov    QWORD PTR [rbp-0x8],rdi
  421697:	mov    QWORD PTR [rbp-0x10],rsi
  42169b:	mov    rdx,QWORD PTR [rbp-0x10]
  42169f:	mov    rax,QWORD PTR [rbp-0x8]
  4216a3:	mov    rsi,rdx
  4216a6:	mov    rdi,rax
  4216a9:	call   41bfc1 <main@@Base+0x105a>
  4216ae:	leave  
  4216af:	ret    

00000000004216b0 <flatcc_builder_aligned_free@@Base>:
  4216b0:	endbr64 
  4216b4:	push   rbp
  4216b5:	mov    rbp,rsp
  4216b8:	sub    rsp,0x10
  4216bc:	mov    QWORD PTR [rbp-0x8],rdi
  4216c0:	mov    rax,QWORD PTR [rbp-0x8]
  4216c4:	mov    rdi,rax
  4216c7:	call   406160 <free@plt>
  4216cc:	nop
  4216cd:	leave  
  4216ce:	ret    

00000000004216cf <flatcc_builder_get_emit_context@@Base>:
  4216cf:	endbr64 
  4216d3:	push   rbp
  4216d4:	mov    rbp,rsp
  4216d7:	mov    QWORD PTR [rbp-0x8],rdi
  4216db:	mov    rax,QWORD PTR [rbp-0x8]
  4216df:	mov    rax,QWORD PTR [rax+0x38]
  4216e3:	pop    rbp
  4216e4:	ret    
  4216e5:	endbr64 
  4216e9:	push   rbp
  4216ea:	mov    rbp,rsp
  4216ed:	sub    rsp,0x20
  4216f1:	mov    QWORD PTR [rbp-0x18],rdi
  4216f5:	mov    QWORD PTR [rbp-0x8],0x0
  4216fd:	mov    rax,QWORD PTR [rbp-0x18]
  421701:	mov    rax,QWORD PTR [rax]
  421704:	test   rax,rax
  421707:	je     421765 <flatcc_builder_get_emit_context@@Base+0x96>
  421709:	mov    rax,QWORD PTR [rbp-0x18]
  42170d:	mov    rax,QWORD PTR [rax]
  421710:	mov    rdx,QWORD PTR [rax+0xb88]
  421717:	mov    rax,QWORD PTR [rbp-0x18]
  42171b:	mov    rax,QWORD PTR [rax+0x8]
  42171f:	cmp    rdx,rax
  421722:	je     421765 <flatcc_builder_get_emit_context@@Base+0x96>
  421724:	mov    rax,QWORD PTR [rbp-0x18]
  421728:	mov    rax,QWORD PTR [rax]
  42172b:	mov    edx,DWORD PTR [rax+0xb90]
  421731:	mov    rax,QWORD PTR [rbp-0x18]
  421735:	mov    rax,QWORD PTR [rax]
  421738:	mov    rax,QWORD PTR [rax+0xb88]
  42173f:	sub    edx,0xb80
  421745:	mov    DWORD PTR [rax+0xb90],edx
  42174b:	mov    rax,QWORD PTR [rbp-0x18]
  42174f:	mov    rax,QWORD PTR [rax]
  421752:	mov    rdx,QWORD PTR [rax+0xb88]
  421759:	mov    rax,QWORD PTR [rbp-0x18]
  42175d:	mov    QWORD PTR [rax],rdx
  421760:	jmp    42189d <flatcc_builder_get_emit_context@@Base+0x1ce>
  421765:	mov    edi,0xb98
  42176a:	call   406230 <malloc@plt>
  42176f:	mov    QWORD PTR [rbp-0x8],rax
  421773:	cmp    QWORD PTR [rbp-0x8],0x0
  421778:	jne    421784 <flatcc_builder_get_emit_context@@Base+0xb5>
  42177a:	mov    eax,0xffffffff
  42177f:	jmp    4218eb <flatcc_builder_get_emit_context@@Base+0x21c>
  421784:	mov    rax,QWORD PTR [rbp-0x18]
  421788:	mov    rax,QWORD PTR [rax+0x38]
  42178c:	lea    rdx,[rax+0xb80]
  421793:	mov    rax,QWORD PTR [rbp-0x18]
  421797:	mov    QWORD PTR [rax+0x38],rdx
  42179b:	mov    rax,QWORD PTR [rbp-0x18]
  42179f:	mov    rax,QWORD PTR [rax]
  4217a2:	test   rax,rax
  4217a5:	je     421801 <flatcc_builder_get_emit_context@@Base+0x132>
  4217a7:	mov    rax,QWORD PTR [rbp-0x18]
  4217ab:	mov    rdx,QWORD PTR [rax+0x8]
  4217af:	mov    rax,QWORD PTR [rbp-0x8]
  4217b3:	mov    QWORD PTR [rax+0xb88],rdx
  4217ba:	mov    rax,QWORD PTR [rbp-0x18]
  4217be:	mov    rdx,QWORD PTR [rax]
  4217c1:	mov    rax,QWORD PTR [rbp-0x8]
  4217c5:	mov    QWORD PTR [rax+0xb80],rdx
  4217cc:	mov    rax,QWORD PTR [rbp-0x18]
  4217d0:	mov    rax,QWORD PTR [rax]
  4217d3:	mov    rdx,QWORD PTR [rbp-0x8]
  4217d7:	mov    QWORD PTR [rax+0xb88],rdx
  4217de:	mov    rax,QWORD PTR [rbp-0x18]
  4217e2:	mov    rax,QWORD PTR [rax+0x8]
  4217e6:	mov    rdx,QWORD PTR [rbp-0x8]
  4217ea:	mov    QWORD PTR [rax+0xb80],rdx
  4217f1:	mov    rax,QWORD PTR [rbp-0x18]
  4217f5:	mov    rdx,QWORD PTR [rbp-0x8]
  4217f9:	mov    QWORD PTR [rax],rdx
  4217fc:	jmp    42189d <flatcc_builder_get_emit_context@@Base+0x1ce>
  421801:	mov    rax,QWORD PTR [rbp-0x18]
  421805:	mov    rdx,QWORD PTR [rbp-0x8]
  421809:	mov    QWORD PTR [rax],rdx
  42180c:	mov    rax,QWORD PTR [rbp-0x18]
  421810:	mov    rdx,QWORD PTR [rbp-0x8]
  421814:	mov    QWORD PTR [rax+0x8],rdx
  421818:	mov    rax,QWORD PTR [rbp-0x8]
  42181c:	mov    rdx,QWORD PTR [rbp-0x8]
  421820:	mov    QWORD PTR [rax+0xb80],rdx
  421827:	mov    rax,QWORD PTR [rbp-0x8]
  42182b:	mov    rdx,QWORD PTR [rbp-0x8]
  42182f:	mov    QWORD PTR [rax+0xb88],rdx
  421836:	mov    rax,QWORD PTR [rbp-0x18]
  42183a:	mov    rax,QWORD PTR [rax]
  42183d:	lea    rdx,[rax+0x5c0]
  421844:	mov    rax,QWORD PTR [rbp-0x18]
  421848:	mov    QWORD PTR [rax+0x10],rdx
  42184c:	mov    rax,QWORD PTR [rbp-0x18]
  421850:	mov    rdx,QWORD PTR [rax+0x10]
  421854:	mov    rax,QWORD PTR [rbp-0x18]
  421858:	mov    QWORD PTR [rax+0x20],rdx
  42185c:	mov    rax,QWORD PTR [rbp-0x18]
  421860:	mov    QWORD PTR [rax+0x18],0x5c0
  421868:	mov    rax,QWORD PTR [rbp-0x18]
  42186c:	mov    rax,QWORD PTR [rax+0x18]
  421870:	mov    edx,0xb80
  421875:	sub    rdx,rax
  421878:	mov    rax,QWORD PTR [rbp-0x18]
  42187c:	mov    QWORD PTR [rax+0x28],rdx
  421880:	mov    rax,QWORD PTR [rbp-0x18]
  421884:	mov    rax,QWORD PTR [rax+0x18]
  421888:	neg    eax
  42188a:	mov    edx,eax
  42188c:	mov    rax,QWORD PTR [rbp-0x8]
  421890:	mov    DWORD PTR [rax+0xb90],edx
  421896:	mov    eax,0x0
  42189b:	jmp    4218eb <flatcc_builder_get_emit_context@@Base+0x21c>
  42189d:	mov    rax,QWORD PTR [rbp-0x18]
  4218a1:	mov    rax,QWORD PTR [rax]
  4218a4:	lea    rdx,[rax+0xb80]
  4218ab:	mov    rax,QWORD PTR [rbp-0x18]
  4218af:	mov    QWORD PTR [rax+0x10],rdx
  4218b3:	mov    rax,QWORD PTR [rbp-0x18]
  4218b7:	mov    QWORD PTR [rax+0x18],0xb80
  4218bf:	mov    rax,QWORD PTR [rbp-0x18]
  4218c3:	mov    rax,QWORD PTR [rax]
  4218c6:	mov    rax,QWORD PTR [rax+0xb80]
  4218cd:	mov    edx,DWORD PTR [rax+0xb90]
  4218d3:	mov    rax,QWORD PTR [rbp-0x18]
  4218d7:	mov    rax,QWORD PTR [rax]
  4218da:	sub    edx,0xb80
  4218e0:	mov    DWORD PTR [rax+0xb90],edx
  4218e6:	mov    eax,0x0
  4218eb:	leave  
  4218ec:	ret    
  4218ed:	endbr64 
  4218f1:	push   rbp
  4218f2:	mov    rbp,rsp
  4218f5:	sub    rsp,0x20
  4218f9:	mov    QWORD PTR [rbp-0x18],rdi
  4218fd:	mov    QWORD PTR [rbp-0x8],0x0
  421905:	mov    rax,QWORD PTR [rbp-0x18]
  421909:	mov    rax,QWORD PTR [rax+0x8]
  42190d:	test   rax,rax
  421910:	je     421949 <flatcc_builder_get_emit_context@@Base+0x27a>
  421912:	mov    rax,QWORD PTR [rbp-0x18]
  421916:	mov    rax,QWORD PTR [rax+0x8]
  42191a:	mov    rdx,QWORD PTR [rax+0xb80]
  421921:	mov    rax,QWORD PTR [rbp-0x18]
  421925:	mov    rax,QWORD PTR [rax]
  421928:	cmp    rdx,rax
  42192b:	je     421949 <flatcc_builder_get_emit_context@@Base+0x27a>
  42192d:	mov    rax,QWORD PTR [rbp-0x18]
  421931:	mov    rax,QWORD PTR [rax+0x8]
  421935:	mov    rdx,QWORD PTR [rax+0xb80]
  42193c:	mov    rax,QWORD PTR [rbp-0x18]
  421940:	mov    QWORD PTR [rax+0x8],rdx
  421944:	jmp    421a83 <flatcc_builder_get_emit_context@@Base+0x3b4>
  421949:	mov    edi,0xb98
  42194e:	call   406230 <malloc@plt>
  421953:	mov    QWORD PTR [rbp-0x8],rax
  421957:	cmp    QWORD PTR [rbp-0x8],0x0
  42195c:	jne    421968 <flatcc_builder_get_emit_context@@Base+0x299>
  42195e:	mov    eax,0xffffffff
  421963:	jmp    421ad0 <flatcc_builder_get_emit_context@@Base+0x401>
  421968:	mov    rax,QWORD PTR [rbp-0x18]
  42196c:	mov    rax,QWORD PTR [rax+0x38]
  421970:	lea    rdx,[rax+0xb80]
  421977:	mov    rax,QWORD PTR [rbp-0x18]
  42197b:	mov    QWORD PTR [rax+0x38],rdx
  42197f:	mov    rax,QWORD PTR [rbp-0x18]
  421983:	mov    rax,QWORD PTR [rax+0x8]
  421987:	test   rax,rax
  42198a:	je     4219e7 <flatcc_builder_get_emit_context@@Base+0x318>
  42198c:	mov    rax,QWORD PTR [rbp-0x18]
  421990:	mov    rdx,QWORD PTR [rax+0x8]
  421994:	mov    rax,QWORD PTR [rbp-0x8]
  421998:	mov    QWORD PTR [rax+0xb88],rdx
  42199f:	mov    rax,QWORD PTR [rbp-0x18]
  4219a3:	mov    rdx,QWORD PTR [rax]
  4219a6:	mov    rax,QWORD PTR [rbp-0x8]
  4219aa:	mov    QWORD PTR [rax+0xb80],rdx
  4219b1:	mov    rax,QWORD PTR [rbp-0x18]
  4219b5:	mov    rax,QWORD PTR [rax]
  4219b8:	mov    rdx,QWORD PTR [rbp-0x8]
  4219bc:	mov    QWORD PTR [rax+0xb88],rdx
  4219c3:	mov    rax,QWORD PTR [rbp-0x18]
  4219c7:	mov    rax,QWORD PTR [rax+0x8]
  4219cb:	mov    rdx,QWORD PTR [rbp-0x8]
  4219cf:	mov    QWORD PTR [rax+0xb80],rdx
  4219d6:	mov    rax,QWORD PTR [rbp-0x18]
  4219da:	mov    rdx,QWORD PTR [rbp-0x8]
  4219de:	mov    QWORD PTR [rax+0x8],rdx
  4219e2:	jmp    421a83 <flatcc_builder_get_emit_context@@Base+0x3b4>
  4219e7:	mov    rax,QWORD PTR [rbp-0x18]
  4219eb:	mov    rdx,QWORD PTR [rbp-0x8]
  4219ef:	mov    QWORD PTR [rax],rdx
  4219f2:	mov    rax,QWORD PTR [rbp-0x18]
  4219f6:	mov    rdx,QWORD PTR [rbp-0x8]
  4219fa:	mov    QWORD PTR [rax+0x8],rdx
  4219fe:	mov    rax,QWORD PTR [rbp-0x8]
  421a02:	mov    rdx,QWORD PTR [rbp-0x8]
  421a06:	mov    QWORD PTR [rax+0xb80],rdx
  421a0d:	mov    rax,QWORD PTR [rbp-0x8]
  421a11:	mov    rdx,QWORD PTR [rbp-0x8]
  421a15:	mov    QWORD PTR [rax+0xb88],rdx
  421a1c:	mov    rax,QWORD PTR [rbp-0x18]
  421a20:	mov    rax,QWORD PTR [rax]
  421a23:	lea    rdx,[rax+0x5c0]
  421a2a:	mov    rax,QWORD PTR [rbp-0x18]
  421a2e:	mov    QWORD PTR [rax+0x10],rdx
  421a32:	mov    rax,QWORD PTR [rbp-0x18]
  421a36:	mov    rdx,QWORD PTR [rax+0x10]
  421a3a:	mov    rax,QWORD PTR [rbp-0x18]
  421a3e:	mov    QWORD PTR [rax+0x20],rdx
  421a42:	mov    rax,QWORD PTR [rbp-0x18]
  421a46:	mov    QWORD PTR [rax+0x18],0x5c0
  421a4e:	mov    rax,QWORD PTR [rbp-0x18]
  421a52:	mov    rax,QWORD PTR [rax+0x18]
  421a56:	mov    edx,0xb80
  421a5b:	sub    rdx,rax
  421a5e:	mov    rax,QWORD PTR [rbp-0x18]
  421a62:	mov    QWORD PTR [rax+0x28],rdx
  421a66:	mov    rax,QWORD PTR [rbp-0x18]
  421a6a:	mov    rax,QWORD PTR [rax+0x18]
  421a6e:	neg    eax
  421a70:	mov    edx,eax
  421a72:	mov    rax,QWORD PTR [rbp-0x8]
  421a76:	mov    DWORD PTR [rax+0xb90],edx
  421a7c:	mov    eax,0x0
  421a81:	jmp    421ad0 <flatcc_builder_get_emit_context@@Base+0x401>
  421a83:	mov    rax,QWORD PTR [rbp-0x18]
  421a87:	mov    rax,QWORD PTR [rax+0x8]
  421a8b:	mov    rdx,rax
  421a8e:	mov    rax,QWORD PTR [rbp-0x18]
  421a92:	mov    QWORD PTR [rax+0x20],rdx
  421a96:	mov    rax,QWORD PTR [rbp-0x18]
  421a9a:	mov    QWORD PTR [rax+0x28],0xb80
  421aa2:	mov    rax,QWORD PTR [rbp-0x18]
  421aa6:	mov    rax,QWORD PTR [rax+0x8]
  421aaa:	mov    rax,QWORD PTR [rax+0xb88]
  421ab1:	mov    edx,DWORD PTR [rax+0xb90]
  421ab7:	mov    rax,QWORD PTR [rbp-0x18]
  421abb:	mov    rax,QWORD PTR [rax+0x8]
  421abf:	add    edx,0xb80
  421ac5:	mov    DWORD PTR [rax+0xb90],edx
  421acb:	mov    eax,0x0
  421ad0:	leave  
  421ad1:	ret    
  421ad2:	endbr64 
  421ad6:	push   rbp
  421ad7:	mov    rbp,rsp
  421ada:	sub    rsp,0x30
  421ade:	mov    QWORD PTR [rbp-0x18],rdi
  421ae2:	mov    QWORD PTR [rbp-0x20],rsi
  421ae6:	mov    QWORD PTR [rbp-0x28],rdx
  421aea:	mov    rax,QWORD PTR [rbp-0x28]
  421aee:	add    QWORD PTR [rbp-0x20],rax
  421af2:	jmp    421b96 <flatcc_builder_get_emit_context@@Base+0x4c7>
  421af7:	mov    rax,QWORD PTR [rbp-0x28]
  421afb:	mov    QWORD PTR [rbp-0x8],rax
  421aff:	mov    rax,QWORD PTR [rbp-0x18]
  421b03:	mov    rax,QWORD PTR [rax+0x18]
  421b07:	cmp    QWORD PTR [rbp-0x8],rax
  421b0b:	jbe    421b37 <flatcc_builder_get_emit_context@@Base+0x468>
  421b0d:	mov    rax,QWORD PTR [rbp-0x18]
  421b11:	mov    rax,QWORD PTR [rax+0x18]
  421b15:	mov    QWORD PTR [rbp-0x8],rax
  421b19:	cmp    QWORD PTR [rbp-0x8],0x0
  421b1e:	jne    421b37 <flatcc_builder_get_emit_context@@Base+0x468>
  421b20:	mov    rax,QWORD PTR [rbp-0x18]
  421b24:	mov    rdi,rax
  421b27:	call   4216e5 <flatcc_builder_get_emit_context@@Base+0x16>
  421b2c:	test   eax,eax
  421b2e:	je     421b96 <flatcc_builder_get_emit_context@@Base+0x4c7>
  421b30:	mov    eax,0xffffffff
  421b35:	jmp    421ba6 <flatcc_builder_get_emit_context@@Base+0x4d7>
  421b37:	mov    rax,QWORD PTR [rbp-0x18]
  421b3b:	mov    rax,QWORD PTR [rax+0x10]
  421b3f:	mov    rdx,QWORD PTR [rbp-0x8]
  421b43:	neg    rdx
  421b46:	add    rdx,rax
  421b49:	mov    rax,QWORD PTR [rbp-0x18]
  421b4d:	mov    QWORD PTR [rax+0x10],rdx
  421b51:	mov    rax,QWORD PTR [rbp-0x18]
  421b55:	mov    rax,QWORD PTR [rax+0x18]
  421b59:	sub    rax,QWORD PTR [rbp-0x8]
  421b5d:	mov    rdx,rax
  421b60:	mov    rax,QWORD PTR [rbp-0x18]
  421b64:	mov    QWORD PTR [rax+0x18],rdx
  421b68:	mov    rax,QWORD PTR [rbp-0x8]
  421b6c:	neg    rax
  421b6f:	add    QWORD PTR [rbp-0x20],rax
  421b73:	mov    rax,QWORD PTR [rbp-0x8]
  421b77:	sub    QWORD PTR [rbp-0x28],rax
  421b7b:	mov    rax,QWORD PTR [rbp-0x18]
  421b7f:	mov    rax,QWORD PTR [rax+0x10]
  421b83:	mov    rdx,QWORD PTR [rbp-0x8]
  421b87:	mov    rcx,QWORD PTR [rbp-0x20]
  421b8b:	mov    rsi,rcx
  421b8e:	mov    rdi,rax
  421b91:	call   406220 <memcpy@plt>
  421b96:	cmp    QWORD PTR [rbp-0x28],0x0
  421b9b:	jne    421af7 <flatcc_builder_get_emit_context@@Base+0x428>
  421ba1:	mov    eax,0x0
  421ba6:	leave  
  421ba7:	ret    
  421ba8:	endbr64 
  421bac:	push   rbp
  421bad:	mov    rbp,rsp
  421bb0:	sub    rsp,0x30
  421bb4:	mov    QWORD PTR [rbp-0x18],rdi
  421bb8:	mov    QWORD PTR [rbp-0x20],rsi
  421bbc:	mov    QWORD PTR [rbp-0x28],rdx
  421bc0:	jmp    421c5e <flatcc_builder_get_emit_context@@Base+0x58f>
  421bc5:	mov    rax,QWORD PTR [rbp-0x28]
  421bc9:	mov    QWORD PTR [rbp-0x8],rax
  421bcd:	mov    rax,QWORD PTR [rbp-0x18]
  421bd1:	mov    rax,QWORD PTR [rax+0x28]
  421bd5:	cmp    QWORD PTR [rbp-0x8],rax
  421bd9:	jbe    421c05 <flatcc_builder_get_emit_context@@Base+0x536>
  421bdb:	mov    rax,QWORD PTR [rbp-0x18]
  421bdf:	mov    rax,QWORD PTR [rax+0x28]
  421be3:	mov    QWORD PTR [rbp-0x8],rax
  421be7:	cmp    QWORD PTR [rbp-0x8],0x0
  421bec:	jne    421c05 <flatcc_builder_get_emit_context@@Base+0x536>
  421bee:	mov    rax,QWORD PTR [rbp-0x18]
  421bf2:	mov    rdi,rax
  421bf5:	call   4218ed <flatcc_builder_get_emit_context@@Base+0x21e>
  421bfa:	test   eax,eax
  421bfc:	je     421c5e <flatcc_builder_get_emit_context@@Base+0x58f>
  421bfe:	mov    eax,0xffffffff
  421c03:	jmp    421c6e <flatcc_builder_get_emit_context@@Base+0x59f>
  421c05:	mov    rax,QWORD PTR [rbp-0x18]
  421c09:	mov    rax,QWORD PTR [rax+0x20]
  421c0d:	mov    rdx,QWORD PTR [rbp-0x8]
  421c11:	mov    rcx,QWORD PTR [rbp-0x20]
  421c15:	mov    rsi,rcx
  421c18:	mov    rdi,rax
  421c1b:	call   406220 <memcpy@plt>
  421c20:	mov    rax,QWORD PTR [rbp-0x8]
  421c24:	sub    QWORD PTR [rbp-0x28],rax
  421c28:	mov    rax,QWORD PTR [rbp-0x8]
  421c2c:	add    QWORD PTR [rbp-0x20],rax
  421c30:	mov    rax,QWORD PTR [rbp-0x18]
  421c34:	mov    rdx,QWORD PTR [rax+0x20]
  421c38:	mov    rax,QWORD PTR [rbp-0x8]
  421c3c:	add    rdx,rax
  421c3f:	mov    rax,QWORD PTR [rbp-0x18]
  421c43:	mov    QWORD PTR [rax+0x20],rdx
  421c47:	mov    rax,QWORD PTR [rbp-0x18]
  421c4b:	mov    rax,QWORD PTR [rax+0x28]
  421c4f:	sub    rax,QWORD PTR [rbp-0x8]
  421c53:	mov    rdx,rax
  421c56:	mov    rax,QWORD PTR [rbp-0x18]
  421c5a:	mov    QWORD PTR [rax+0x28],rdx
  421c5e:	cmp    QWORD PTR [rbp-0x28],0x0
  421c63:	jne    421bc5 <flatcc_builder_get_emit_context@@Base+0x4f6>
  421c69:	mov    eax,0x0
  421c6e:	leave  
  421c6f:	ret    

0000000000421c70 <flatcc_emitter_recycle_page@@Base>:
  421c70:	endbr64 
  421c74:	push   rbp
  421c75:	mov    rbp,rsp
  421c78:	mov    QWORD PTR [rbp-0x8],rdi
  421c7c:	mov    QWORD PTR [rbp-0x10],rsi
  421c80:	mov    rax,QWORD PTR [rbp-0x8]
  421c84:	mov    rax,QWORD PTR [rax]
  421c87:	cmp    QWORD PTR [rbp-0x10],rax
  421c8b:	je     421c9b <flatcc_emitter_recycle_page@@Base+0x2b>
  421c8d:	mov    rax,QWORD PTR [rbp-0x8]
  421c91:	mov    rax,QWORD PTR [rax+0x8]
  421c95:	cmp    QWORD PTR [rbp-0x10],rax
  421c99:	jne    421ca5 <flatcc_emitter_recycle_page@@Base+0x35>
  421c9b:	mov    eax,0xffffffff
  421ca0:	jmp    421d3b <flatcc_emitter_recycle_page@@Base+0xcb>
  421ca5:	mov    rax,QWORD PTR [rbp-0x10]
  421ca9:	mov    rax,QWORD PTR [rax+0xb80]
  421cb0:	mov    rdx,QWORD PTR [rbp-0x10]
  421cb4:	mov    rdx,QWORD PTR [rdx+0xb88]
  421cbb:	mov    QWORD PTR [rax+0xb88],rdx
  421cc2:	mov    rax,QWORD PTR [rbp-0x10]
  421cc6:	mov    rax,QWORD PTR [rax+0xb88]
  421ccd:	mov    rdx,QWORD PTR [rbp-0x10]
  421cd1:	mov    rdx,QWORD PTR [rdx+0xb80]
  421cd8:	mov    QWORD PTR [rax+0xb80],rdx
  421cdf:	mov    rax,QWORD PTR [rbp-0x8]
  421ce3:	mov    rax,QWORD PTR [rax]
  421ce6:	mov    rdx,QWORD PTR [rax+0xb88]
  421ced:	mov    rax,QWORD PTR [rbp-0x10]
  421cf1:	mov    QWORD PTR [rax+0xb88],rdx
  421cf8:	mov    rax,QWORD PTR [rbp-0x8]
  421cfc:	mov    rdx,QWORD PTR [rax]
  421cff:	mov    rax,QWORD PTR [rbp-0x10]
  421d03:	mov    QWORD PTR [rax+0xb80],rdx
  421d0a:	mov    rax,QWORD PTR [rbp-0x10]
  421d0e:	mov    rax,QWORD PTR [rax+0xb88]
  421d15:	mov    rdx,QWORD PTR [rbp-0x10]
  421d19:	mov    QWORD PTR [rax+0xb80],rdx
  421d20:	mov    rax,QWORD PTR [rbp-0x10]
  421d24:	mov    rax,QWORD PTR [rax+0xb80]
  421d2b:	mov    rdx,QWORD PTR [rbp-0x10]
  421d2f:	mov    QWORD PTR [rax+0xb88],rdx
  421d36:	mov    eax,0x0
  421d3b:	pop    rbp
  421d3c:	ret    

0000000000421d3d <flatcc_emitter_reset@@Base>:
  421d3d:	endbr64 
  421d41:	push   rbp
  421d42:	mov    rbp,rsp
  421d45:	sub    rsp,0x20
  421d49:	mov    QWORD PTR [rbp-0x18],rdi
  421d4d:	mov    rax,QWORD PTR [rbp-0x18]
  421d51:	mov    rax,QWORD PTR [rax]
  421d54:	mov    QWORD PTR [rbp-0x8],rax
  421d58:	mov    rax,QWORD PTR [rbp-0x18]
  421d5c:	mov    rax,QWORD PTR [rax]
  421d5f:	test   rax,rax
  421d62:	je     421ecc <flatcc_emitter_reset@@Base+0x18f>
  421d68:	mov    rax,QWORD PTR [rbp-0x18]
  421d6c:	mov    rdx,QWORD PTR [rax]
  421d6f:	mov    rax,QWORD PTR [rbp-0x18]
  421d73:	mov    QWORD PTR [rax+0x8],rdx
  421d77:	mov    rax,QWORD PTR [rbp-0x18]
  421d7b:	mov    rax,QWORD PTR [rax]
  421d7e:	lea    rdx,[rax+0x5c0]
  421d85:	mov    rax,QWORD PTR [rbp-0x18]
  421d89:	mov    QWORD PTR [rax+0x10],rdx
  421d8d:	mov    rax,QWORD PTR [rbp-0x18]
  421d91:	mov    rdx,QWORD PTR [rax+0x10]
  421d95:	mov    rax,QWORD PTR [rbp-0x18]
  421d99:	mov    QWORD PTR [rax+0x20],rdx
  421d9d:	mov    rax,QWORD PTR [rbp-0x18]
  421da1:	mov    QWORD PTR [rax+0x18],0x5c0
  421da9:	mov    rax,QWORD PTR [rbp-0x18]
  421dad:	mov    QWORD PTR [rax+0x28],0x5c0
  421db5:	mov    rax,QWORD PTR [rbp-0x18]
  421db9:	mov    rax,QWORD PTR [rax+0x18]
  421dbd:	mov    edx,eax
  421dbf:	mov    rax,QWORD PTR [rbp-0x18]
  421dc3:	mov    rax,QWORD PTR [rax]
  421dc6:	neg    edx
  421dc8:	mov    DWORD PTR [rax+0xb90],edx
  421dce:	mov    rax,QWORD PTR [rbp-0x18]
  421dd2:	mov    rax,QWORD PTR [rax+0x40]
  421dd6:	test   rax,rax
  421dd9:	jne    421deb <flatcc_emitter_reset@@Base+0xae>
  421ddb:	mov    rax,QWORD PTR [rbp-0x18]
  421ddf:	mov    rdx,QWORD PTR [rax+0x30]
  421de3:	mov    rax,QWORD PTR [rbp-0x18]
  421de7:	mov    QWORD PTR [rax+0x40],rdx
  421deb:	mov    rax,QWORD PTR [rbp-0x18]
  421def:	mov    rdx,QWORD PTR [rax+0x40]
  421df3:	mov    rax,rdx
  421df6:	add    rax,rax
  421df9:	add    rax,rdx
  421dfc:	shr    rax,0x2
  421e00:	mov    rdx,rax
  421e03:	mov    rax,QWORD PTR [rbp-0x18]
  421e07:	mov    rax,QWORD PTR [rax+0x30]
  421e0b:	shr    rax,0x2
  421e0f:	add    rdx,rax
  421e12:	mov    rax,QWORD PTR [rbp-0x18]
  421e16:	mov    QWORD PTR [rax+0x40],rdx
  421e1a:	mov    rax,QWORD PTR [rbp-0x18]
  421e1e:	mov    QWORD PTR [rax+0x30],0x0
  421e26:	jmp    421e92 <flatcc_emitter_reset@@Base+0x155>
  421e28:	mov    rax,QWORD PTR [rbp-0x18]
  421e2c:	mov    rax,QWORD PTR [rax+0x8]
  421e30:	mov    rax,QWORD PTR [rax+0xb80]
  421e37:	mov    QWORD PTR [rbp-0x8],rax
  421e3b:	mov    rax,QWORD PTR [rbp-0x18]
  421e3f:	mov    rax,QWORD PTR [rax+0x8]
  421e43:	mov    rdx,QWORD PTR [rbp-0x8]
  421e47:	mov    rdx,QWORD PTR [rdx+0xb80]
  421e4e:	mov    QWORD PTR [rax+0xb80],rdx
  421e55:	mov    rax,QWORD PTR [rbp-0x8]
  421e59:	mov    rax,QWORD PTR [rax+0xb80]
  421e60:	mov    rdx,QWORD PTR [rbp-0x18]
  421e64:	mov    rdx,QWORD PTR [rdx+0x8]
  421e68:	mov    QWORD PTR [rax+0xb88],rdx
  421e6f:	mov    rax,QWORD PTR [rbp-0x8]
  421e73:	mov    rdi,rax
  421e76:	call   406160 <free@plt>
  421e7b:	mov    rax,QWORD PTR [rbp-0x18]
  421e7f:	mov    rax,QWORD PTR [rax+0x38]
  421e83:	lea    rdx,[rax-0xb80]
  421e8a:	mov    rax,QWORD PTR [rbp-0x18]
  421e8e:	mov    QWORD PTR [rax+0x38],rdx
  421e92:	mov    rax,QWORD PTR [rbp-0x18]
  421e96:	mov    rax,QWORD PTR [rax+0x40]
  421e9a:	lea    rdx,[rax+rax*1]
  421e9e:	mov    rax,QWORD PTR [rbp-0x18]
  421ea2:	mov    rax,QWORD PTR [rax+0x38]
  421ea6:	cmp    rdx,rax
  421ea9:	jae    421ecd <flatcc_emitter_reset@@Base+0x190>
  421eab:	mov    rax,QWORD PTR [rbp-0x18]
  421eaf:	mov    rax,QWORD PTR [rax+0x8]
  421eb3:	mov    rdx,QWORD PTR [rax+0xb80]
  421eba:	mov    rax,QWORD PTR [rbp-0x18]
  421ebe:	mov    rax,QWORD PTR [rax]
  421ec1:	cmp    rdx,rax
  421ec4:	jne    421e28 <flatcc_emitter_reset@@Base+0xeb>
  421eca:	jmp    421ecd <flatcc_emitter_reset@@Base+0x190>
  421ecc:	nop
  421ecd:	leave  
  421ece:	ret    

0000000000421ecf <flatcc_emitter_clear@@Base>:
  421ecf:	endbr64 
  421ed3:	push   rbp
  421ed4:	mov    rbp,rsp
  421ed7:	sub    rsp,0x20
  421edb:	mov    QWORD PTR [rbp-0x18],rdi
  421edf:	mov    rax,QWORD PTR [rbp-0x18]
  421ee3:	mov    rax,QWORD PTR [rax]
  421ee6:	mov    QWORD PTR [rbp-0x8],rax
  421eea:	cmp    QWORD PTR [rbp-0x8],0x0
  421eef:	je     421f5f <flatcc_emitter_clear@@Base+0x90>
  421ef1:	mov    rax,QWORD PTR [rbp-0x8]
  421ef5:	mov    rax,QWORD PTR [rax+0xb88]
  421efc:	mov    QWORD PTR [rax+0xb80],0x0
  421f07:	jmp    421f2b <flatcc_emitter_clear@@Base+0x5c>
  421f09:	mov    rax,QWORD PTR [rbp-0x8]
  421f0d:	mov    rax,QWORD PTR [rax+0xb80]
  421f14:	mov    QWORD PTR [rbp-0x8],rax
  421f18:	mov    rax,QWORD PTR [rbp-0x8]
  421f1c:	mov    rax,QWORD PTR [rax+0xb88]
  421f23:	mov    rdi,rax
  421f26:	call   406160 <free@plt>
  421f2b:	mov    rax,QWORD PTR [rbp-0x8]
  421f2f:	mov    rax,QWORD PTR [rax+0xb80]
  421f36:	test   rax,rax
  421f39:	jne    421f09 <flatcc_emitter_clear@@Base+0x3a>
  421f3b:	mov    rax,QWORD PTR [rbp-0x8]
  421f3f:	mov    rdi,rax
  421f42:	call   406160 <free@plt>
  421f47:	mov    rax,QWORD PTR [rbp-0x18]
  421f4b:	mov    edx,0x48
  421f50:	mov    esi,0x0
  421f55:	mov    rdi,rax
  421f58:	call   4061c0 <memset@plt>
  421f5d:	jmp    421f60 <flatcc_emitter_clear@@Base+0x91>
  421f5f:	nop
  421f60:	leave  
  421f61:	ret    

0000000000421f62 <flatcc_emitter@@Base>:
  421f62:	endbr64 
  421f66:	push   rbp
  421f67:	mov    rbp,rsp
  421f6a:	sub    rsp,0x30
  421f6e:	mov    QWORD PTR [rbp-0x18],rdi
  421f72:	mov    QWORD PTR [rbp-0x20],rsi
  421f76:	mov    DWORD PTR [rbp-0x24],edx
  421f79:	mov    DWORD PTR [rbp-0x28],ecx
  421f7c:	mov    QWORD PTR [rbp-0x30],r8
  421f80:	mov    rax,QWORD PTR [rbp-0x18]
  421f84:	mov    QWORD PTR [rbp-0x8],rax
  421f88:	mov    rax,QWORD PTR [rbp-0x8]
  421f8c:	mov    rdx,QWORD PTR [rax+0x30]
  421f90:	mov    rax,QWORD PTR [rbp-0x30]
  421f94:	add    rdx,rax
  421f97:	mov    rax,QWORD PTR [rbp-0x8]
  421f9b:	mov    QWORD PTR [rax+0x30],rdx
  421f9f:	cmp    DWORD PTR [rbp-0x28],0x0
  421fa3:	jns    42204b <flatcc_emitter@@Base+0xe9>
  421fa9:	mov    rax,QWORD PTR [rbp-0x8]
  421fad:	mov    rax,QWORD PTR [rax+0x18]
  421fb1:	cmp    QWORD PTR [rbp-0x30],rax
  421fb5:	ja     421ff9 <flatcc_emitter@@Base+0x97>
  421fb7:	mov    rax,QWORD PTR [rbp-0x8]
  421fbb:	mov    rax,QWORD PTR [rax+0x10]
  421fbf:	mov    rdx,QWORD PTR [rbp-0x30]
  421fc3:	neg    rdx
  421fc6:	add    rdx,rax
  421fc9:	mov    rax,QWORD PTR [rbp-0x8]
  421fcd:	mov    QWORD PTR [rax+0x10],rdx
  421fd1:	mov    rax,QWORD PTR [rbp-0x8]
  421fd5:	mov    rax,QWORD PTR [rax+0x18]
  421fd9:	sub    rax,QWORD PTR [rbp-0x30]
  421fdd:	mov    rdx,rax
  421fe0:	mov    rax,QWORD PTR [rbp-0x8]
  421fe4:	mov    QWORD PTR [rax+0x18],rdx
  421fe8:	mov    rax,QWORD PTR [rbp-0x8]
  421fec:	mov    rax,QWORD PTR [rax+0x10]
  421ff0:	mov    QWORD PTR [rbp-0x10],rax
  421ff4:	jmp    4220d7 <flatcc_emitter@@Base+0x175>
  421ff9:	mov    eax,DWORD PTR [rbp-0x24]
  421ffc:	cdqe   
  421ffe:	shl    rax,0x4
  422002:	add    QWORD PTR [rbp-0x20],rax
  422006:	jmp    422039 <flatcc_emitter@@Base+0xd7>
  422008:	sub    QWORD PTR [rbp-0x20],0x10
  42200d:	mov    rax,QWORD PTR [rbp-0x20]
  422011:	mov    rdx,QWORD PTR [rax+0x8]
  422015:	mov    rax,QWORD PTR [rbp-0x20]
  422019:	mov    rcx,QWORD PTR [rax]
  42201c:	mov    rax,QWORD PTR [rbp-0x8]
  422020:	mov    rsi,rcx
  422023:	mov    rdi,rax
  422026:	call   421ad2 <flatcc_builder_get_emit_context@@Base+0x403>
  42202b:	test   eax,eax
  42202d:	je     422039 <flatcc_emitter@@Base+0xd7>
  42202f:	mov    eax,0xffffffff
  422034:	jmp    42211a <flatcc_emitter@@Base+0x1b8>
  422039:	mov    eax,DWORD PTR [rbp-0x24]
  42203c:	lea    edx,[rax-0x1]
  42203f:	mov    DWORD PTR [rbp-0x24],edx
  422042:	test   eax,eax
  422044:	jne    422008 <flatcc_emitter@@Base+0xa6>
  422046:	jmp    4220d0 <flatcc_emitter@@Base+0x16e>
  42204b:	mov    rax,QWORD PTR [rbp-0x8]
  42204f:	mov    rax,QWORD PTR [rax+0x28]
  422053:	cmp    QWORD PTR [rbp-0x30],rax
  422057:	ja     4220c3 <flatcc_emitter@@Base+0x161>
  422059:	mov    rax,QWORD PTR [rbp-0x8]
  42205d:	mov    rax,QWORD PTR [rax+0x20]
  422061:	mov    QWORD PTR [rbp-0x10],rax
  422065:	mov    rax,QWORD PTR [rbp-0x8]
  422069:	mov    rdx,QWORD PTR [rax+0x20]
  42206d:	mov    rax,QWORD PTR [rbp-0x30]
  422071:	add    rdx,rax
  422074:	mov    rax,QWORD PTR [rbp-0x8]
  422078:	mov    QWORD PTR [rax+0x20],rdx
  42207c:	mov    rax,QWORD PTR [rbp-0x8]
  422080:	mov    rax,QWORD PTR [rax+0x28]
  422084:	sub    rax,QWORD PTR [rbp-0x30]
  422088:	mov    rdx,rax
  42208b:	mov    rax,QWORD PTR [rbp-0x8]
  42208f:	mov    QWORD PTR [rax+0x28],rdx
  422093:	jmp    4220d7 <flatcc_emitter@@Base+0x175>
  422095:	mov    rax,QWORD PTR [rbp-0x20]
  422099:	mov    rdx,QWORD PTR [rax+0x8]
  42209d:	mov    rax,QWORD PTR [rbp-0x20]
  4220a1:	mov    rcx,QWORD PTR [rax]
  4220a4:	mov    rax,QWORD PTR [rbp-0x8]
  4220a8:	mov    rsi,rcx
  4220ab:	mov    rdi,rax
  4220ae:	call   421ba8 <flatcc_builder_get_emit_context@@Base+0x4d9>
  4220b3:	test   eax,eax
  4220b5:	je     4220be <flatcc_emitter@@Base+0x15c>
  4220b7:	mov    eax,0xffffffff
  4220bc:	jmp    42211a <flatcc_emitter@@Base+0x1b8>
  4220be:	add    QWORD PTR [rbp-0x20],0x10
  4220c3:	mov    eax,DWORD PTR [rbp-0x24]
  4220c6:	lea    edx,[rax-0x1]
  4220c9:	mov    DWORD PTR [rbp-0x24],edx
  4220cc:	test   eax,eax
  4220ce:	jne    422095 <flatcc_emitter@@Base+0x133>
  4220d0:	mov    eax,0x0
  4220d5:	jmp    42211a <flatcc_emitter@@Base+0x1b8>
  4220d7:	jmp    422108 <flatcc_emitter@@Base+0x1a6>
  4220d9:	mov    rax,QWORD PTR [rbp-0x20]
  4220dd:	mov    rdx,QWORD PTR [rax+0x8]
  4220e1:	mov    rax,QWORD PTR [rbp-0x20]
  4220e5:	mov    rcx,QWORD PTR [rax]
  4220e8:	mov    rax,QWORD PTR [rbp-0x10]
  4220ec:	mov    rsi,rcx
  4220ef:	mov    rdi,rax
  4220f2:	call   406220 <memcpy@plt>
  4220f7:	mov    rax,QWORD PTR [rbp-0x20]
  4220fb:	mov    rax,QWORD PTR [rax+0x8]
  4220ff:	add    QWORD PTR [rbp-0x10],rax
  422103:	add    QWORD PTR [rbp-0x20],0x10
  422108:	mov    eax,DWORD PTR [rbp-0x24]
  42210b:	lea    edx,[rax-0x1]
  42210e:	mov    DWORD PTR [rbp-0x24],edx
  422111:	test   eax,eax
  422113:	jne    4220d9 <flatcc_emitter@@Base+0x177>
  422115:	mov    eax,0x0
  42211a:	leave  
  42211b:	ret    

000000000042211c <flatcc_emitter_copy_buffer@@Base>:
  42211c:	endbr64 
  422120:	push   rbp
  422121:	mov    rbp,rsp
  422124:	sub    rsp,0x30
  422128:	mov    QWORD PTR [rbp-0x18],rdi
  42212c:	mov    QWORD PTR [rbp-0x20],rsi
  422130:	mov    QWORD PTR [rbp-0x28],rdx
  422134:	mov    rax,QWORD PTR [rbp-0x18]
  422138:	mov    rax,QWORD PTR [rax+0x30]
  42213c:	cmp    QWORD PTR [rbp-0x28],rax
  422140:	jae    42214c <flatcc_emitter_copy_buffer@@Base+0x30>
  422142:	mov    eax,0x0
  422147:	jmp    422250 <flatcc_emitter_copy_buffer@@Base+0x134>
  42214c:	mov    rax,QWORD PTR [rbp-0x18]
  422150:	mov    rax,QWORD PTR [rax]
  422153:	test   rax,rax
  422156:	jne    422162 <flatcc_emitter_copy_buffer@@Base+0x46>
  422158:	mov    eax,0x0
  42215d:	jmp    422250 <flatcc_emitter_copy_buffer@@Base+0x134>
  422162:	mov    rax,QWORD PTR [rbp-0x18]
  422166:	mov    rdx,QWORD PTR [rax]
  422169:	mov    rax,QWORD PTR [rbp-0x18]
  42216d:	mov    rax,QWORD PTR [rax+0x8]
  422171:	cmp    rdx,rax
  422174:	jne    42219e <flatcc_emitter_copy_buffer@@Base+0x82>
  422176:	mov    rax,QWORD PTR [rbp-0x18]
  42217a:	mov    rdx,QWORD PTR [rax+0x30]
  42217e:	mov    rax,QWORD PTR [rbp-0x18]
  422182:	mov    rcx,QWORD PTR [rax+0x10]
  422186:	mov    rax,QWORD PTR [rbp-0x20]
  42218a:	mov    rsi,rcx
  42218d:	mov    rdi,rax
  422190:	call   406220 <memcpy@plt>
  422195:	mov    rax,QWORD PTR [rbp-0x20]
  422199:	jmp    422250 <flatcc_emitter_copy_buffer@@Base+0x134>
  42219e:	mov    rax,QWORD PTR [rbp-0x18]
  4221a2:	mov    rax,QWORD PTR [rax+0x18]
  4221a6:	mov    edx,0xb80
  4221ab:	sub    rdx,rax
  4221ae:	mov    rax,rdx
  4221b1:	mov    QWORD PTR [rbp-0x8],rax
  4221b5:	mov    rax,QWORD PTR [rbp-0x18]
  4221b9:	mov    rcx,QWORD PTR [rax+0x10]
  4221bd:	mov    rdx,QWORD PTR [rbp-0x8]
  4221c1:	mov    rax,QWORD PTR [rbp-0x20]
  4221c5:	mov    rsi,rcx
  4221c8:	mov    rdi,rax
  4221cb:	call   406220 <memcpy@plt>
  4221d0:	mov    rax,QWORD PTR [rbp-0x8]
  4221d4:	add    QWORD PTR [rbp-0x20],rax
  4221d8:	mov    rax,QWORD PTR [rbp-0x18]
  4221dc:	mov    rax,QWORD PTR [rax]
  4221df:	mov    rax,QWORD PTR [rax+0xb80]
  4221e6:	mov    QWORD PTR [rbp-0x10],rax
  4221ea:	jmp    42221b <flatcc_emitter_copy_buffer@@Base+0xff>
  4221ec:	mov    rcx,QWORD PTR [rbp-0x10]
  4221f0:	mov    rax,QWORD PTR [rbp-0x20]
  4221f4:	mov    edx,0xb80
  4221f9:	mov    rsi,rcx
  4221fc:	mov    rdi,rax
  4221ff:	call   406220 <memcpy@plt>
  422204:	add    QWORD PTR [rbp-0x20],0xb80
  42220c:	mov    rax,QWORD PTR [rbp-0x10]
  422210:	mov    rax,QWORD PTR [rax+0xb80]
  422217:	mov    QWORD PTR [rbp-0x10],rax
  42221b:	mov    rax,QWORD PTR [rbp-0x18]
  42221f:	mov    rax,QWORD PTR [rax+0x8]
  422223:	cmp    QWORD PTR [rbp-0x10],rax
  422227:	jne    4221ec <flatcc_emitter_copy_buffer@@Base+0xd0>
  422229:	mov    rax,QWORD PTR [rbp-0x18]
  42222d:	mov    rax,QWORD PTR [rax+0x28]
  422231:	mov    edx,0xb80
  422236:	sub    rdx,rax
  422239:	mov    rcx,QWORD PTR [rbp-0x10]
  42223d:	mov    rax,QWORD PTR [rbp-0x20]
  422241:	mov    rsi,rcx
  422244:	mov    rdi,rax
  422247:	call   406220 <memcpy@plt>
  42224c:	mov    rax,QWORD PTR [rbp-0x20]
  422250:	leave  
  422251:	ret    
  422252:	push   rbp
  422253:	mov    rbp,rsp
  422256:	mov    DWORD PTR [rbp-0x4],edi
  422259:	mov    eax,DWORD PTR [rbp-0x4]
  42225c:	pop    rbp
  42225d:	ret    
  42225e:	push   rbp
  42225f:	mov    rbp,rsp
  422262:	sub    rsp,0x8
  422266:	mov    QWORD PTR [rbp-0x8],rdi
  42226a:	mov    rax,QWORD PTR [rbp-0x8]
  42226e:	mov    eax,DWORD PTR [rax]
  422270:	mov    edi,eax
  422272:	call   422252 <flatcc_emitter_copy_buffer@@Base+0x136>
  422277:	leave  
  422278:	ret    
  422279:	push   rbp
  42227a:	mov    rbp,rsp
  42227d:	mov    eax,edi
  42227f:	mov    WORD PTR [rbp-0x4],ax
  422283:	movzx  eax,WORD PTR [rbp-0x4]
  422287:	pop    rbp
  422288:	ret    
  422289:	push   rbp
  42228a:	mov    rbp,rsp
  42228d:	sub    rsp,0x8
  422291:	mov    QWORD PTR [rbp-0x8],rdi
  422295:	mov    rax,QWORD PTR [rbp-0x8]
  422299:	movzx  eax,WORD PTR [rax]
  42229c:	movzx  eax,ax
  42229f:	mov    edi,eax
  4222a1:	call   422279 <flatcc_emitter_copy_buffer@@Base+0x15d>
  4222a6:	leave  
  4222a7:	ret    
  4222a8:	push   rbp
  4222a9:	mov    rbp,rsp
  4222ac:	mov    DWORD PTR [rbp-0x4],edi
  4222af:	mov    eax,DWORD PTR [rbp-0x4]
  4222b2:	pop    rbp
  4222b3:	ret    
  4222b4:	push   rbp
  4222b5:	mov    rbp,rsp
  4222b8:	mov    DWORD PTR [rbp-0x4],edi
  4222bb:	mov    eax,DWORD PTR [rbp-0x4]
  4222be:	pop    rbp
  4222bf:	ret    
  4222c0:	push   rbp
  4222c1:	mov    rbp,rsp
  4222c4:	sub    rsp,0x8
  4222c8:	mov    QWORD PTR [rbp-0x8],rdi
  4222cc:	mov    rax,QWORD PTR [rbp-0x8]
  4222d0:	mov    eax,DWORD PTR [rax]
  4222d2:	mov    edi,eax
  4222d4:	call   4222a8 <flatcc_emitter_copy_buffer@@Base+0x18c>
  4222d9:	leave  
  4222da:	ret    

00000000004222db <flatcc_verify_error_string@@Base>:
  4222db:	endbr64 
  4222df:	push   rbp
  4222e0:	mov    rbp,rsp
  4222e3:	mov    DWORD PTR [rbp-0x4],edi
  4222e6:	cmp    DWORD PTR [rbp-0x4],0x24
  4222ea:	ja     4224a7 <flatcc_verify_error_string@@Base+0x1cc>
  4222f0:	mov    eax,DWORD PTR [rbp-0x4]
  4222f3:	lea    rdx,[rax*4+0x0]
  4222fb:	lea    rax,[rip+0x19e4e]        # 43c150 <flatcc_builder_padding_base@@Base+0x11d0>
  422302:	mov    eax,DWORD PTR [rdx+rax*1]
  422305:	movsxd rdx,eax
  422308:	lea    rax,[rip+0x19e41]        # 43c150 <flatcc_builder_padding_base@@Base+0x11d0>
  42230f:	add    rax,rdx
  422312:	notrack jmp rax
  422315:	lea    rax,[rip+0x1998e]        # 43bcaa <flatcc_builder_padding_base@@Base+0xd2a>
  42231c:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  422321:	lea    rax,[rip+0x19985]        # 43bcad <flatcc_builder_padding_base@@Base+0xd2d>
  422328:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  42232d:	lea    rax,[rip+0x19991]        # 43bcc5 <flatcc_builder_padding_base@@Base+0xd45>
  422334:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  422339:	lea    rax,[rip+0x19999]        # 43bcd9 <flatcc_builder_padding_base@@Base+0xd59>
  422340:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  422345:	lea    rax,[rip+0x199a7]        # 43bcf3 <flatcc_builder_padding_base@@Base+0xd73>
  42234c:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  422351:	lea    rax,[rip+0x199b8]        # 43bd10 <flatcc_builder_padding_base@@Base+0xd90>
  422358:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  42235d:	lea    rax,[rip+0x199d4]        # 43bd38 <flatcc_builder_padding_base@@Base+0xdb8>
  422364:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  422369:	lea    rax,[rip+0x199e7]        # 43bd57 <flatcc_builder_padding_base@@Base+0xdd7>
  422370:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  422375:	lea    rax,[rip+0x199f6]        # 43bd72 <flatcc_builder_padding_base@@Base+0xdf2>
  42237c:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  422381:	lea    rax,[rip+0x199fe]        # 43bd86 <flatcc_builder_padding_base@@Base+0xe06>
  422388:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  42238d:	lea    rax,[rip+0x19a06]        # 43bd9a <flatcc_builder_padding_base@@Base+0xe1a>
  422394:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  422399:	lea    rax,[rip+0x19a0f]        # 43bdaf <flatcc_builder_padding_base@@Base+0xe2f>
  4223a0:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  4223a5:	lea    rax,[rip+0x19a14]        # 43bdc0 <flatcc_builder_padding_base@@Base+0xe40>
  4223ac:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  4223b1:	lea    rax,[rip+0x19a20]        # 43bdd8 <flatcc_builder_padding_base@@Base+0xe58>
  4223b8:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  4223bd:	lea    rax,[rip+0x19a2d]        # 43bdf1 <flatcc_builder_padding_base@@Base+0xe71>
  4223c4:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  4223c9:	lea    rax,[rip+0x19a40]        # 43be10 <flatcc_builder_padding_base@@Base+0xe90>
  4223d0:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  4223d5:	lea    rax,[rip+0x19a5c]        # 43be38 <flatcc_builder_padding_base@@Base+0xeb8>
  4223dc:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  4223e1:	lea    rax,[rip+0x19a78]        # 43be60 <flatcc_builder_padding_base@@Base+0xee0>
  4223e8:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  4223ed:	lea    rax,[rip+0x19a94]        # 43be88 <flatcc_builder_padding_base@@Base+0xf08>
  4223f4:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  4223f9:	lea    rax,[rip+0x19aa0]        # 43bea0 <flatcc_builder_padding_base@@Base+0xf20>
  422400:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  422405:	lea    rax,[rip+0x19abb]        # 43bec7 <flatcc_builder_padding_base@@Base+0xf47>
  42240c:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  422411:	lea    rax,[rip+0x19ac8]        # 43bee0 <flatcc_builder_padding_base@@Base+0xf60>
  422418:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  42241d:	lea    rax,[rip+0x19aec]        # 43bf10 <flatcc_builder_padding_base@@Base+0xf90>
  422424:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  422429:	lea    rax,[rip+0x19b18]        # 43bf48 <flatcc_builder_padding_base@@Base+0xfc8>
  422430:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  422432:	lea    rax,[rip+0x19b3f]        # 43bf78 <flatcc_builder_padding_base@@Base+0xff8>
  422439:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  42243b:	lea    rax,[rip+0x19b66]        # 43bfa8 <flatcc_builder_padding_base@@Base+0x1028>
  422442:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  422444:	lea    rax,[rip+0x19b8c]        # 43bfd7 <flatcc_builder_padding_base@@Base+0x1057>
  42244b:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  42244d:	lea    rax,[rip+0x19b97]        # 43bfeb <flatcc_builder_padding_base@@Base+0x106b>
  422454:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  422456:	lea    rax,[rip+0x19ba9]        # 43c006 <flatcc_builder_padding_base@@Base+0x1086>
  42245d:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  42245f:	lea    rax,[rip+0x19bba]        # 43c020 <flatcc_builder_padding_base@@Base+0x10a0>
  422466:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  422468:	lea    rax,[rip+0x19bd9]        # 43c048 <flatcc_builder_padding_base@@Base+0x10c8>
  42246f:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  422471:	lea    rax,[rip+0x19bf6]        # 43c06e <flatcc_builder_padding_base@@Base+0x10ee>
  422478:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  42247a:	lea    rax,[rip+0x19c07]        # 43c088 <flatcc_builder_padding_base@@Base+0x1108>
  422481:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  422483:	lea    rax,[rip+0x19c26]        # 43c0b0 <flatcc_builder_padding_base@@Base+0x1130>
  42248a:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  42248c:	lea    rax,[rip+0x19c45]        # 43c0d8 <flatcc_builder_padding_base@@Base+0x1158>
  422493:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  422495:	lea    rax,[rip+0x19c74]        # 43c110 <flatcc_builder_padding_base@@Base+0x1190>
  42249c:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  42249e:	lea    rax,[rip+0x19c93]        # 43c138 <flatcc_builder_padding_base@@Base+0x11b8>
  4224a5:	jmp    4224ae <flatcc_verify_error_string@@Base+0x1d3>
  4224a7:	lea    rax,[rip+0x19c98]        # 43c146 <flatcc_builder_padding_base@@Base+0x11c6>
  4224ae:	pop    rbp
  4224af:	ret    
  4224b0:	push   rbp
  4224b1:	mov    rbp,rsp
  4224b4:	sub    rsp,0x10
  4224b8:	mov    QWORD PTR [rbp-0x8],rdi
  4224bc:	mov    DWORD PTR [rbp-0xc],esi
  4224bf:	mov    edx,DWORD PTR [rbp-0xc]
  4224c2:	mov    rax,QWORD PTR [rbp-0x8]
  4224c6:	add    rax,rdx
  4224c9:	mov    rdi,rax
  4224cc:	call   42225e <flatcc_emitter_copy_buffer@@Base+0x142>
  4224d1:	leave  
  4224d2:	ret    
  4224d3:	push   rbp
  4224d4:	mov    rbp,rsp
  4224d7:	sub    rsp,0x20
  4224db:	mov    QWORD PTR [rbp-0x18],rdi
  4224df:	mov    rax,QWORD PTR fs:0x28
  4224e8:	mov    QWORD PTR [rbp-0x8],rax
  4224ec:	xor    eax,eax
  4224ee:	mov    DWORD PTR [rbp-0xc],0x0
  4224f5:	mov    rcx,QWORD PTR [rbp-0x18]
  4224f9:	lea    rax,[rbp-0xc]
  4224fd:	mov    edx,0x4
  422502:	mov    rsi,rcx
  422505:	mov    rdi,rax
  422508:	call   406170 <strncpy@plt>
  42250d:	mov    eax,DWORD PTR [rbp-0xc]
  422510:	mov    edi,eax
  422512:	call   4222b4 <flatcc_emitter_copy_buffer@@Base+0x198>
  422517:	mov    rdx,QWORD PTR [rbp-0x8]
  42251b:	xor    rdx,QWORD PTR fs:0x28
  422524:	je     42252b <flatcc_verify_error_string@@Base+0x250>
  422526:	call   4061a0 <__stack_chk_fail@plt>
  42252b:	leave  
  42252c:	ret    
  42252d:	push   rbp
  42252e:	mov    rbp,rsp
  422531:	sub    rsp,0x10
  422535:	mov    QWORD PTR [rbp-0x8],rdi
  422539:	mov    DWORD PTR [rbp-0xc],esi
  42253c:	mov    edx,DWORD PTR [rbp-0xc]
  42253f:	mov    rax,QWORD PTR [rbp-0x8]
  422543:	add    rax,rdx
  422546:	mov    rdi,rax
  422549:	call   4222c0 <flatcc_emitter_copy_buffer@@Base+0x1a4>
  42254e:	leave  
  42254f:	ret    
  422550:	push   rbp
  422551:	mov    rbp,rsp
  422554:	sub    rsp,0x10
  422558:	mov    QWORD PTR [rbp-0x8],rdi
  42255c:	mov    DWORD PTR [rbp-0xc],esi
  42255f:	mov    edx,DWORD PTR [rbp-0xc]
  422562:	mov    rax,QWORD PTR [rbp-0x8]
  422566:	add    rax,rdx
  422569:	mov    rdi,rax
  42256c:	call   422289 <flatcc_emitter_copy_buffer@@Base+0x16d>
  422571:	leave  
  422572:	ret    
  422573:	push   rbp
  422574:	mov    rbp,rsp
  422577:	mov    DWORD PTR [rbp-0x14],edi
  42257a:	mov    DWORD PTR [rbp-0x18],esi
  42257d:	mov    DWORD PTR [rbp-0x1c],edx
  422580:	mov    edx,DWORD PTR [rbp-0x18]
  422583:	mov    eax,DWORD PTR [rbp-0x1c]
  422586:	add    eax,edx
  422588:	mov    DWORD PTR [rbp-0x4],eax
  42258b:	mov    eax,DWORD PTR [rbp-0x4]
  42258e:	cmp    eax,DWORD PTR [rbp-0x18]
  422591:	jbe    4225b4 <flatcc_verify_error_string@@Base+0x2d9>
  422593:	mov    eax,DWORD PTR [rbp-0x4]
  422596:	lea    rdx,[rax+0x4]
  42259a:	mov    eax,DWORD PTR [rbp-0x14]
  42259d:	cmp    rdx,rax
  4225a0:	ja     4225b4 <flatcc_verify_error_string@@Base+0x2d9>
  4225a2:	mov    eax,DWORD PTR [rbp-0x4]
  4225a5:	and    eax,0x3
  4225a8:	test   rax,rax
  4225ab:	jne    4225b4 <flatcc_verify_error_string@@Base+0x2d9>
  4225ad:	mov    eax,0x1
  4225b2:	jmp    4225b9 <flatcc_verify_error_string@@Base+0x2de>
  4225b4:	mov    eax,0x0
  4225b9:	pop    rbp
  4225ba:	ret    
  4225bb:	push   rbp
  4225bc:	mov    rbp,rsp
  4225bf:	mov    DWORD PTR [rbp-0x14],edi
  4225c2:	mov    DWORD PTR [rbp-0x18],esi
  4225c5:	mov    DWORD PTR [rbp-0x1c],edx
  4225c8:	mov    eax,ecx
  4225ca:	mov    WORD PTR [rbp-0x20],ax
  4225ce:	mov    edx,DWORD PTR [rbp-0x18]
  4225d1:	mov    eax,DWORD PTR [rbp-0x1c]
  4225d4:	add    eax,edx
  4225d6:	mov    DWORD PTR [rbp-0x4],eax
  4225d9:	mov    eax,0x4
  4225de:	cmp    WORD PTR [rbp-0x20],0x4
  4225e3:	cmovae ax,WORD PTR [rbp-0x20]
  4225e8:	mov    WORD PTR [rbp-0x20],ax
  4225ec:	mov    eax,DWORD PTR [rbp-0x4]
  4225ef:	cmp    eax,DWORD PTR [rbp-0x18]
  4225f2:	jbe    422624 <flatcc_verify_error_string@@Base+0x349>
  4225f4:	mov    eax,DWORD PTR [rbp-0x4]
  4225f7:	lea    rdx,[rax+0x4]
  4225fb:	mov    eax,DWORD PTR [rbp-0x14]
  4225fe:	cmp    rdx,rax
  422601:	ja     422624 <flatcc_verify_error_string@@Base+0x349>
  422603:	mov    eax,DWORD PTR [rbp-0x4]
  422606:	lea    rdx,[rax+0x4]
  42260a:	movzx  eax,WORD PTR [rbp-0x20]
  42260e:	dec    eax
  422610:	or     eax,0x3
  422613:	cdqe   
  422615:	and    rax,rdx
  422618:	test   rax,rax
  42261b:	jne    422624 <flatcc_verify_error_string@@Base+0x349>
  42261d:	mov    eax,0x1
  422622:	jmp    422629 <flatcc_verify_error_string@@Base+0x34e>
  422624:	mov    eax,0x0
  422629:	pop    rbp
  42262a:	ret    
  42262b:	push   rbp
  42262c:	mov    rbp,rsp
  42262f:	mov    DWORD PTR [rbp-0x14],edi
  422632:	mov    DWORD PTR [rbp-0x18],esi
  422635:	mov    DWORD PTR [rbp-0x1c],edx
  422638:	mov    DWORD PTR [rbp-0x20],ecx
  42263b:	mov    eax,r8d
  42263e:	mov    WORD PTR [rbp-0x24],ax
  422642:	cmp    DWORD PTR [rbp-0x1c],0x0
  422646:	je     422655 <flatcc_verify_error_string@@Base+0x37a>
  422648:	mov    edx,DWORD PTR [rbp-0x18]
  42264b:	mov    eax,DWORD PTR [rbp-0x1c]
  42264e:	add    eax,edx
  422650:	cmp    DWORD PTR [rbp-0x14],eax
  422653:	jae    42265c <flatcc_verify_error_string@@Base+0x381>
  422655:	mov    eax,0x12
  42265a:	jmp    4226ca <flatcc_verify_error_string@@Base+0x3ef>
  42265c:	mov    eax,DWORD PTR [rbp-0x1c]
  42265f:	add    DWORD PTR [rbp-0x18],eax
  422662:	mov    edx,DWORD PTR [rbp-0x18]
  422665:	mov    eax,DWORD PTR [rbp-0x20]
  422668:	add    eax,edx
  42266a:	cmp    DWORD PTR [rbp-0x18],eax
  42266d:	setbe  al
  422670:	movzx  eax,al
  422673:	mov    DWORD PTR [rbp-0xc],eax
  422676:	cmp    DWORD PTR [rbp-0xc],0x0
  42267a:	jne    422683 <flatcc_verify_error_string@@Base+0x3a8>
  42267c:	mov    eax,0xa
  422681:	jmp    4226ca <flatcc_verify_error_string@@Base+0x3ef>
  422683:	mov    edx,DWORD PTR [rbp-0x18]
  422686:	mov    eax,DWORD PTR [rbp-0x20]
  422689:	add    eax,edx
  42268b:	cmp    DWORD PTR [rbp-0x14],eax
  42268e:	setae  al
  422691:	movzx  eax,al
  422694:	mov    DWORD PTR [rbp-0x8],eax
  422697:	cmp    DWORD PTR [rbp-0x8],0x0
  42269b:	jne    4226a4 <flatcc_verify_error_string@@Base+0x3c9>
  42269d:	mov    eax,0x9
  4226a2:	jmp    4226ca <flatcc_verify_error_string@@Base+0x3ef>
  4226a4:	movzx  eax,WORD PTR [rbp-0x24]
  4226a8:	dec    eax
  4226aa:	and    eax,DWORD PTR [rbp-0x18]
  4226ad:	test   eax,eax
  4226af:	sete   al
  4226b2:	movzx  eax,al
  4226b5:	mov    DWORD PTR [rbp-0x4],eax
  4226b8:	cmp    DWORD PTR [rbp-0x4],0x0
  4226bc:	jne    4226c5 <flatcc_verify_error_string@@Base+0x3ea>
  4226be:	mov    eax,0xb
  4226c3:	jmp    4226ca <flatcc_verify_error_string@@Base+0x3ef>
  4226c5:	mov    eax,0x0
  4226ca:	pop    rbp
  4226cb:	ret    
  4226cc:	push   rbp
  4226cd:	mov    rbp,rsp
  4226d0:	sub    rsp,0x20
  4226d4:	mov    QWORD PTR [rbp-0x18],rdi
  4226d8:	mov    eax,esi
  4226da:	mov    WORD PTR [rbp-0x1c],ax
  4226de:	movzx  eax,WORD PTR [rbp-0x1c]
  4226e2:	add    eax,0x2
  4226e5:	cdqe   
  4226e7:	add    eax,eax
  4226e9:	mov    WORD PTR [rbp-0x2],ax
  4226ed:	mov    rax,QWORD PTR [rbp-0x18]
  4226f1:	movzx  eax,WORD PTR [rax+0x1e]
  4226f5:	cmp    WORD PTR [rbp-0x2],ax
  4226f9:	jb     422702 <flatcc_verify_error_string@@Base+0x427>
  4226fb:	mov    eax,0x0
  422700:	jmp    42271b <flatcc_verify_error_string@@Base+0x440>
  422702:	movzx  edx,WORD PTR [rbp-0x2]
  422706:	mov    rax,QWORD PTR [rbp-0x18]
  42270a:	mov    rax,QWORD PTR [rax+0x10]
  42270e:	mov    esi,edx
  422710:	mov    rdi,rax
  422713:	call   422550 <flatcc_verify_error_string@@Base+0x275>
  422718:	movzx  eax,ax
  42271b:	leave  
  42271c:	ret    
  42271d:	push   rbp
  42271e:	mov    rbp,rsp
  422721:	sub    rsp,0x20
  422725:	mov    QWORD PTR [rbp-0x18],rdi
  422729:	mov    eax,esi
  42272b:	mov    WORD PTR [rbp-0x1c],ax
  42272f:	movzx  edx,WORD PTR [rbp-0x1c]
  422733:	mov    rax,QWORD PTR [rbp-0x18]
  422737:	mov    esi,edx
  422739:	mov    rdi,rax
  42273c:	call   4226cc <flatcc_verify_error_string@@Base+0x3f1>
  422741:	mov    WORD PTR [rbp-0x2],ax
  422745:	cmp    WORD PTR [rbp-0x2],0x0
  42274a:	je     422768 <flatcc_verify_error_string@@Base+0x48d>
  42274c:	mov    rax,QWORD PTR [rbp-0x18]
  422750:	mov    rdx,QWORD PTR [rax]
  422753:	mov    rax,QWORD PTR [rbp-0x18]
  422757:	mov    eax,DWORD PTR [rax+0x18]
  42275a:	mov    ecx,eax
  42275c:	movzx  eax,WORD PTR [rbp-0x2]
  422760:	add    rax,rcx
  422763:	add    rax,rdx
  422766:	jmp    42276d <flatcc_verify_error_string@@Base+0x492>
  422768:	mov    eax,0x0
  42276d:	leave  
  42276e:	ret    
  42276f:	endbr64 
  422773:	push   rbp
  422774:	mov    rbp,rsp
  422777:	sub    rsp,0x38
  42277b:	mov    QWORD PTR [rbp-0x28],rdi
  42277f:	mov    eax,esi
  422781:	mov    DWORD PTR [rbp-0x30],edx
  422784:	mov    DWORD PTR [rbp-0x34],ecx
  422787:	mov    edx,r8d
  42278a:	mov    WORD PTR [rbp-0x2c],ax
  42278e:	mov    eax,edx
  422790:	mov    WORD PTR [rbp-0x38],ax
  422794:	mov    rax,QWORD PTR [rbp-0x28]
  422798:	mov    rax,QWORD PTR [rax]
  42279b:	mov    DWORD PTR [rbp-0x1c],eax
  42279e:	movzx  edx,WORD PTR [rbp-0x2c]
  4227a2:	mov    rax,QWORD PTR [rbp-0x28]
  4227a6:	mov    esi,edx
  4227a8:	mov    rdi,rax
  4227ab:	call   4226cc <flatcc_verify_error_string@@Base+0x3f1>
  4227b0:	mov    WORD PTR [rbp-0x1e],ax
  4227b4:	cmp    WORD PTR [rbp-0x1e],0x0
  4227b9:	jne    4227df <flatcc_verify_error_string@@Base+0x504>
  4227bb:	cmp    DWORD PTR [rbp-0x30],0x0
  4227bf:	sete   al
  4227c2:	movzx  eax,al
  4227c5:	mov    DWORD PTR [rbp-0x18],eax
  4227c8:	cmp    DWORD PTR [rbp-0x18],0x0
  4227cc:	jne    4227d8 <flatcc_verify_error_string@@Base+0x4fd>
  4227ce:	mov    eax,0x4
  4227d3:	jmp    42285e <flatcc_verify_error_string@@Base+0x583>
  4227d8:	mov    eax,0x0
  4227dd:	jmp    42285e <flatcc_verify_error_string@@Base+0x583>
  4227df:	movzx  eax,WORD PTR [rbp-0x1e]
  4227e3:	mov    DWORD PTR [rbp-0x14],eax
  4227e6:	mov    edx,DWORD PTR [rbp-0x14]
  4227e9:	mov    eax,DWORD PTR [rbp-0x34]
  4227ec:	add    eax,edx
  4227ee:	mov    DWORD PTR [rbp-0x10],eax
  4227f1:	mov    rax,QWORD PTR [rbp-0x28]
  4227f5:	movzx  eax,WORD PTR [rax+0x1c]
  4227f9:	movzx  eax,ax
  4227fc:	cmp    DWORD PTR [rbp-0x10],eax
  4227ff:	setbe  al
  422802:	movzx  eax,al
  422805:	mov    DWORD PTR [rbp-0xc],eax
  422808:	cmp    DWORD PTR [rbp-0xc],0x0
  42280c:	jne    422815 <flatcc_verify_error_string@@Base+0x53a>
  42280e:	mov    eax,0xd
  422813:	jmp    42285e <flatcc_verify_error_string@@Base+0x583>
  422815:	mov    DWORD PTR [rbp-0x8],0x1
  42281c:	cmp    DWORD PTR [rbp-0x8],0x0
  422820:	jne    422829 <flatcc_verify_error_string@@Base+0x54e>
  422822:	mov    eax,0xe
  422827:	jmp    42285e <flatcc_verify_error_string@@Base+0x583>
  422829:	mov    rax,QWORD PTR [rbp-0x28]
  42282d:	mov    edx,DWORD PTR [rax+0x18]
  422830:	mov    eax,DWORD PTR [rbp-0x1c]
  422833:	add    eax,edx
  422835:	add    DWORD PTR [rbp-0x14],eax
  422838:	movzx  eax,WORD PTR [rbp-0x38]
  42283c:	dec    eax
  42283e:	and    eax,DWORD PTR [rbp-0x14]
  422841:	test   eax,eax
  422843:	sete   al
  422846:	movzx  eax,al
  422849:	mov    DWORD PTR [rbp-0x4],eax
  42284c:	cmp    DWORD PTR [rbp-0x4],0x0
  422850:	jne    422859 <flatcc_verify_error_string@@Base+0x57e>
  422852:	mov    eax,0xc
  422857:	jmp    42285e <flatcc_verify_error_string@@Base+0x583>
  422859:	mov    eax,0x0
  42285e:	leave  
  42285f:	ret    
  422860:	endbr64 
  422864:	push   rbp
  422865:	mov    rbp,rsp
  422868:	sub    rsp,0x38
  42286c:	mov    QWORD PTR [rbp-0x28],rdi
  422870:	mov    eax,esi
  422872:	mov    DWORD PTR [rbp-0x30],edx
  422875:	mov    QWORD PTR [rbp-0x38],rcx
  422879:	mov    WORD PTR [rbp-0x2c],ax
  42287d:	movzx  edx,WORD PTR [rbp-0x2c]
  422881:	mov    rax,QWORD PTR [rbp-0x28]
  422885:	mov    esi,edx
  422887:	mov    rdi,rax
  42288a:	call   4226cc <flatcc_verify_error_string@@Base+0x3f1>
  42288f:	mov    WORD PTR [rbp-0x16],ax
  422893:	cmp    WORD PTR [rbp-0x16],0x0
  422898:	jne    4228bb <flatcc_verify_error_string@@Base+0x5e0>
  42289a:	mov    rax,QWORD PTR [rbp-0x38]
  42289e:	mov    DWORD PTR [rax],0x0
  4228a4:	cmp    DWORD PTR [rbp-0x30],0x0
  4228a8:	je     4228b4 <flatcc_verify_error_string@@Base+0x5d9>
  4228aa:	mov    eax,0x4
  4228af:	jmp    42293a <flatcc_verify_error_string@@Base+0x65f>
  4228b4:	mov    eax,0x0
  4228b9:	jmp    42293a <flatcc_verify_error_string@@Base+0x65f>
  4228bb:	movzx  eax,WORD PTR [rbp-0x16]
  4228bf:	mov    DWORD PTR [rbp-0x14],eax
  4228c2:	mov    eax,DWORD PTR [rbp-0x14]
  4228c5:	add    eax,0x4
  4228c8:	mov    DWORD PTR [rbp-0x10],eax
  4228cb:	mov    rax,QWORD PTR [rbp-0x28]
  4228cf:	movzx  eax,WORD PTR [rax+0x1c]
  4228d3:	movzx  eax,ax
  4228d6:	cmp    DWORD PTR [rbp-0x10],eax
  4228d9:	setbe  al
  4228dc:	movzx  eax,al
  4228df:	mov    DWORD PTR [rbp-0xc],eax
  4228e2:	cmp    DWORD PTR [rbp-0xc],0x0
  4228e6:	jne    4228ef <flatcc_verify_error_string@@Base+0x614>
  4228e8:	mov    eax,0xd
  4228ed:	jmp    42293a <flatcc_verify_error_string@@Base+0x65f>
  4228ef:	mov    DWORD PTR [rbp-0x8],0x1
  4228f6:	cmp    DWORD PTR [rbp-0x8],0x0
  4228fa:	jne    422903 <flatcc_verify_error_string@@Base+0x628>
  4228fc:	mov    eax,0xe
  422901:	jmp    42293a <flatcc_verify_error_string@@Base+0x65f>
  422903:	mov    rax,QWORD PTR [rbp-0x28]
  422907:	mov    eax,DWORD PTR [rax+0x18]
  42290a:	add    DWORD PTR [rbp-0x14],eax
  42290d:	mov    eax,DWORD PTR [rbp-0x14]
  422910:	and    eax,0x3
  422913:	test   rax,rax
  422916:	sete   al
  422919:	movzx  eax,al
  42291c:	mov    DWORD PTR [rbp-0x4],eax
  42291f:	cmp    DWORD PTR [rbp-0x4],0x0
  422923:	jne    42292c <flatcc_verify_error_string@@Base+0x651>
  422925:	mov    eax,0xc
  42292a:	jmp    42293a <flatcc_verify_error_string@@Base+0x65f>
  42292c:	mov    rax,QWORD PTR [rbp-0x38]
  422930:	mov    edx,DWORD PTR [rbp-0x14]
  422933:	mov    DWORD PTR [rax],edx
  422935:	mov    eax,0x0
  42293a:	leave  
  42293b:	ret    
  42293c:	push   rbp
  42293d:	mov    rbp,rsp
  422940:	sub    rsp,0x28
  422944:	mov    QWORD PTR [rbp-0x18],rdi
  422948:	mov    DWORD PTR [rbp-0x1c],esi
  42294b:	mov    DWORD PTR [rbp-0x20],edx
  42294e:	mov    DWORD PTR [rbp-0x24],ecx
  422951:	mov    edx,DWORD PTR [rbp-0x24]
  422954:	mov    ecx,DWORD PTR [rbp-0x20]
  422957:	mov    eax,DWORD PTR [rbp-0x1c]
  42295a:	mov    esi,ecx
  42295c:	mov    edi,eax
  42295e:	call   422573 <flatcc_verify_error_string@@Base+0x298>
  422963:	mov    DWORD PTR [rbp-0x10],eax
  422966:	cmp    DWORD PTR [rbp-0x10],0x0
  42296a:	jne    422973 <flatcc_verify_error_string@@Base+0x698>
  42296c:	mov    eax,0x11
  422971:	jmp    4229e4 <flatcc_verify_error_string@@Base+0x709>
  422973:	mov    eax,DWORD PTR [rbp-0x24]
  422976:	add    DWORD PTR [rbp-0x20],eax
  422979:	mov    edx,DWORD PTR [rbp-0x20]
  42297c:	mov    rax,QWORD PTR [rbp-0x18]
  422980:	mov    esi,edx
  422982:	mov    rdi,rax
  422985:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  42298a:	mov    DWORD PTR [rbp-0xc],eax
  42298d:	add    DWORD PTR [rbp-0x20],0x4
  422991:	mov    eax,DWORD PTR [rbp-0x1c]
  422994:	sub    eax,DWORD PTR [rbp-0x20]
  422997:	mov    edx,DWORD PTR [rbp-0xc]
  42299a:	inc    edx
  42299c:	cmp    eax,edx
  42299e:	setae  al
  4229a1:	movzx  eax,al
  4229a4:	mov    DWORD PTR [rbp-0x8],eax
  4229a7:	cmp    DWORD PTR [rbp-0x8],0x0
  4229ab:	jne    4229b4 <flatcc_verify_error_string@@Base+0x6d9>
  4229ad:	mov    eax,0x8
  4229b2:	jmp    4229e4 <flatcc_verify_error_string@@Base+0x709>
  4229b4:	mov    edx,DWORD PTR [rbp-0x20]
  4229b7:	mov    eax,DWORD PTR [rbp-0xc]
  4229ba:	add    rdx,rax
  4229bd:	mov    rax,QWORD PTR [rbp-0x18]
  4229c1:	add    rax,rdx
  4229c4:	movzx  eax,BYTE PTR [rax]
  4229c7:	test   al,al
  4229c9:	sete   al
  4229cc:	movzx  eax,al
  4229cf:	mov    DWORD PTR [rbp-0x4],eax
  4229d2:	cmp    DWORD PTR [rbp-0x4],0x0
  4229d6:	jne    4229df <flatcc_verify_error_string@@Base+0x704>
  4229d8:	mov    eax,0x7
  4229dd:	jmp    4229e4 <flatcc_verify_error_string@@Base+0x709>
  4229df:	mov    eax,0x0
  4229e4:	leave  
  4229e5:	ret    
  4229e6:	push   rbp
  4229e7:	mov    rbp,rsp
  4229ea:	sub    rsp,0x30
  4229ee:	mov    QWORD PTR [rbp-0x18],rdi
  4229f2:	mov    DWORD PTR [rbp-0x1c],esi
  4229f5:	mov    DWORD PTR [rbp-0x20],edx
  4229f8:	mov    DWORD PTR [rbp-0x24],ecx
  4229fb:	mov    DWORD PTR [rbp-0x28],r8d
  4229ff:	mov    eax,r9d
  422a02:	mov    WORD PTR [rbp-0x2c],ax
  422a06:	movzx  ecx,WORD PTR [rbp-0x2c]
  422a0a:	mov    edx,DWORD PTR [rbp-0x24]
  422a0d:	mov    esi,DWORD PTR [rbp-0x20]
  422a10:	mov    eax,DWORD PTR [rbp-0x1c]
  422a13:	mov    edi,eax
  422a15:	call   4225bb <flatcc_verify_error_string@@Base+0x2e0>
  422a1a:	mov    DWORD PTR [rbp-0x10],eax
  422a1d:	cmp    DWORD PTR [rbp-0x10],0x0
  422a21:	jne    422a2a <flatcc_verify_error_string@@Base+0x74f>
  422a23:	mov    eax,0x10
  422a28:	jmp    422a90 <flatcc_verify_error_string@@Base+0x7b5>
  422a2a:	mov    eax,DWORD PTR [rbp-0x24]
  422a2d:	add    DWORD PTR [rbp-0x20],eax
  422a30:	mov    edx,DWORD PTR [rbp-0x20]
  422a33:	mov    rax,QWORD PTR [rbp-0x18]
  422a37:	mov    esi,edx
  422a39:	mov    rdi,rax
  422a3c:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  422a41:	mov    DWORD PTR [rbp-0xc],eax
  422a44:	add    DWORD PTR [rbp-0x20],0x4
  422a48:	mov    eax,DWORD PTR [rbp-0xc]
  422a4b:	cmp    eax,DWORD PTR [rbp+0x10]
  422a4e:	setbe  al
  422a51:	movzx  eax,al
  422a54:	mov    DWORD PTR [rbp-0x8],eax
  422a57:	cmp    DWORD PTR [rbp-0x8],0x0
  422a5b:	jne    422a64 <flatcc_verify_error_string@@Base+0x789>
  422a5d:	mov    eax,0x19
  422a62:	jmp    422a90 <flatcc_verify_error_string@@Base+0x7b5>
  422a64:	mov    eax,DWORD PTR [rbp-0x1c]
  422a67:	sub    eax,DWORD PTR [rbp-0x20]
  422a6a:	mov    edx,eax
  422a6c:	mov    eax,DWORD PTR [rbp-0xc]
  422a6f:	imul   eax,DWORD PTR [rbp-0x28]
  422a73:	cmp    edx,eax
  422a75:	setae  al
  422a78:	movzx  eax,al
  422a7b:	mov    DWORD PTR [rbp-0x4],eax
  422a7e:	cmp    DWORD PTR [rbp-0x4],0x0
  422a82:	jne    422a8b <flatcc_verify_error_string@@Base+0x7b0>
  422a84:	mov    eax,0x1a
  422a89:	jmp    422a90 <flatcc_verify_error_string@@Base+0x7b5>
  422a8b:	mov    eax,0x0
  422a90:	leave  
  422a91:	ret    
  422a92:	push   rbp
  422a93:	mov    rbp,rsp
  422a96:	sub    rsp,0x28
  422a9a:	mov    QWORD PTR [rbp-0x18],rdi
  422a9e:	mov    DWORD PTR [rbp-0x1c],esi
  422aa1:	mov    DWORD PTR [rbp-0x20],edx
  422aa4:	mov    DWORD PTR [rbp-0x24],ecx
  422aa7:	mov    ecx,DWORD PTR [rbp-0x24]
  422aaa:	mov    edx,DWORD PTR [rbp-0x20]
  422aad:	mov    esi,DWORD PTR [rbp-0x1c]
  422ab0:	mov    rax,QWORD PTR [rbp-0x18]
  422ab4:	push   0x3fffffff
  422ab9:	mov    r9d,0x4
  422abf:	mov    r8d,0x4
  422ac5:	mov    rdi,rax
  422ac8:	call   4229e6 <flatcc_verify_error_string@@Base+0x70b>
  422acd:	add    rsp,0x8
  422ad1:	test   eax,eax
  422ad3:	je     422b04 <flatcc_verify_error_string@@Base+0x829>
  422ad5:	mov    ecx,DWORD PTR [rbp-0x24]
  422ad8:	mov    edx,DWORD PTR [rbp-0x20]
  422adb:	mov    esi,DWORD PTR [rbp-0x1c]
  422ade:	mov    rax,QWORD PTR [rbp-0x18]
  422ae2:	push   0x3fffffff
  422ae7:	mov    r9d,0x4
  422aed:	mov    r8d,0x4
  422af3:	mov    rdi,rax
  422af6:	call   4229e6 <flatcc_verify_error_string@@Base+0x70b>
  422afb:	add    rsp,0x8
  422aff:	jmp    422b8f <flatcc_verify_error_string@@Base+0x8b4>
  422b04:	mov    eax,DWORD PTR [rbp-0x24]
  422b07:	add    DWORD PTR [rbp-0x20],eax
  422b0a:	mov    edx,DWORD PTR [rbp-0x20]
  422b0d:	mov    rax,QWORD PTR [rbp-0x18]
  422b11:	mov    esi,edx
  422b13:	mov    rdi,rax
  422b16:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  422b1b:	mov    DWORD PTR [rbp-0x4],eax
  422b1e:	add    DWORD PTR [rbp-0x20],0x4
  422b22:	mov    DWORD PTR [rbp-0x8],0x0
  422b29:	jmp    422b82 <flatcc_verify_error_string@@Base+0x8a7>
  422b2b:	mov    edx,DWORD PTR [rbp-0x20]
  422b2e:	mov    rax,QWORD PTR [rbp-0x18]
  422b32:	mov    esi,edx
  422b34:	mov    rdi,rax
  422b37:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  422b3c:	mov    ecx,eax
  422b3e:	mov    edx,DWORD PTR [rbp-0x20]
  422b41:	mov    esi,DWORD PTR [rbp-0x1c]
  422b44:	mov    rax,QWORD PTR [rbp-0x18]
  422b48:	mov    rdi,rax
  422b4b:	call   42293c <flatcc_verify_error_string@@Base+0x661>
  422b50:	test   eax,eax
  422b52:	je     422b7b <flatcc_verify_error_string@@Base+0x8a0>
  422b54:	mov    edx,DWORD PTR [rbp-0x20]
  422b57:	mov    rax,QWORD PTR [rbp-0x18]
  422b5b:	mov    esi,edx
  422b5d:	mov    rdi,rax
  422b60:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  422b65:	mov    ecx,eax
  422b67:	mov    edx,DWORD PTR [rbp-0x20]
  422b6a:	mov    esi,DWORD PTR [rbp-0x1c]
  422b6d:	mov    rax,QWORD PTR [rbp-0x18]
  422b71:	mov    rdi,rax
  422b74:	call   42293c <flatcc_verify_error_string@@Base+0x661>
  422b79:	jmp    422b8f <flatcc_verify_error_string@@Base+0x8b4>
  422b7b:	inc    DWORD PTR [rbp-0x8]
  422b7e:	add    DWORD PTR [rbp-0x20],0x4
  422b82:	mov    eax,DWORD PTR [rbp-0x8]
  422b85:	cmp    eax,DWORD PTR [rbp-0x4]
  422b88:	jb     422b2b <flatcc_verify_error_string@@Base+0x850>
  422b8a:	mov    eax,0x0
  422b8f:	leave  
  422b90:	ret    
  422b91:	push   rbp
  422b92:	mov    rbp,rsp
  422b95:	push   rbx
  422b96:	sub    rsp,0x88
  422b9d:	mov    QWORD PTR [rbp-0x78],rdi
  422ba1:	mov    DWORD PTR [rbp-0x7c],esi
  422ba4:	mov    DWORD PTR [rbp-0x80],edx
  422ba7:	mov    DWORD PTR [rbp-0x84],ecx
  422bad:	mov    DWORD PTR [rbp-0x88],r8d
  422bb4:	mov    QWORD PTR [rbp-0x90],r9
  422bbb:	mov    rax,QWORD PTR fs:0x28
  422bc4:	mov    QWORD PTR [rbp-0x18],rax
  422bc8:	xor    eax,eax
  422bca:	mov    eax,DWORD PTR [rbp-0x88]
  422bd0:	dec    eax
  422bd2:	mov    DWORD PTR [rbp-0x34],eax
  422bd5:	mov    eax,DWORD PTR [rbp-0x34]
  422bd8:	mov    DWORD PTR [rbp-0x68],eax
  422bdb:	cmp    DWORD PTR [rbp-0x68],0x0
  422bdf:	jne    422beb <flatcc_verify_error_string@@Base+0x910>
  422be1:	mov    eax,0x3
  422be6:	jmp    422d8d <flatcc_verify_error_string@@Base+0xab2>
  422beb:	mov    edx,DWORD PTR [rbp-0x84]
  422bf1:	mov    ecx,DWORD PTR [rbp-0x80]
  422bf4:	mov    eax,DWORD PTR [rbp-0x7c]
  422bf7:	mov    esi,ecx
  422bf9:	mov    edi,eax
  422bfb:	call   422573 <flatcc_verify_error_string@@Base+0x298>
  422c00:	mov    DWORD PTR [rbp-0x64],eax
  422c03:	cmp    DWORD PTR [rbp-0x64],0x0
  422c07:	jne    422c13 <flatcc_verify_error_string@@Base+0x938>
  422c09:	mov    eax,0xf
  422c0e:	jmp    422d8d <flatcc_verify_error_string@@Base+0xab2>
  422c13:	mov    edx,DWORD PTR [rbp-0x80]
  422c16:	mov    eax,DWORD PTR [rbp-0x84]
  422c1c:	add    eax,edx
  422c1e:	mov    DWORD PTR [rbp-0x28],eax
  422c21:	mov    ebx,DWORD PTR [rbp-0x28]
  422c24:	mov    edx,DWORD PTR [rbp-0x28]
  422c27:	mov    rax,QWORD PTR [rbp-0x78]
  422c2b:	mov    esi,edx
  422c2d:	mov    rdi,rax
  422c30:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  422c35:	sub    ebx,eax
  422c37:	mov    eax,ebx
  422c39:	mov    DWORD PTR [rbp-0x60],eax
  422c3c:	mov    eax,DWORD PTR [rbp-0x60]
  422c3f:	test   eax,eax
  422c41:	js     422c55 <flatcc_verify_error_string@@Base+0x97a>
  422c43:	mov    eax,DWORD PTR [rbp-0x60]
  422c46:	and    eax,0x1
  422c49:	test   rax,rax
  422c4c:	jne    422c55 <flatcc_verify_error_string@@Base+0x97a>
  422c4e:	mov    eax,0x1
  422c53:	jmp    422c5a <flatcc_verify_error_string@@Base+0x97f>
  422c55:	mov    eax,0x0
  422c5a:	mov    DWORD PTR [rbp-0x5c],eax
  422c5d:	cmp    DWORD PTR [rbp-0x5c],0x0
  422c61:	jne    422c6d <flatcc_verify_error_string@@Base+0x992>
  422c63:	mov    eax,0x1d
  422c68:	jmp    422d8d <flatcc_verify_error_string@@Base+0xab2>
  422c6d:	mov    eax,DWORD PTR [rbp-0x60]
  422c70:	lea    rdx,[rax+0x2]
  422c74:	mov    eax,DWORD PTR [rbp-0x7c]
  422c77:	cmp    rdx,rax
  422c7a:	setbe  al
  422c7d:	movzx  eax,al
  422c80:	mov    DWORD PTR [rbp-0x58],eax
  422c83:	cmp    DWORD PTR [rbp-0x58],0x0
  422c87:	jne    422c93 <flatcc_verify_error_string@@Base+0x9b8>
  422c89:	mov    eax,0x1b
  422c8e:	jmp    422d8d <flatcc_verify_error_string@@Base+0xab2>
  422c93:	mov    edx,DWORD PTR [rbp-0x60]
  422c96:	mov    rax,QWORD PTR [rbp-0x78]
  422c9a:	mov    esi,edx
  422c9c:	mov    rdi,rax
  422c9f:	call   422550 <flatcc_verify_error_string@@Base+0x275>
  422ca4:	mov    WORD PTR [rbp-0x22],ax
  422ca8:	movzx  eax,WORD PTR [rbp-0x22]
  422cac:	movzx  edx,ax
  422caf:	mov    eax,DWORD PTR [rbp-0x60]
  422cb2:	add    eax,edx
  422cb4:	mov    DWORD PTR [rbp-0x54],eax
  422cb7:	mov    eax,DWORD PTR [rbp-0x54]
  422cba:	cmp    eax,DWORD PTR [rbp-0x7c]
  422cbd:	ja     422cd5 <flatcc_verify_error_string@@Base+0x9fa>
  422cbf:	movzx  eax,WORD PTR [rbp-0x22]
  422cc3:	movzx  eax,ax
  422cc6:	and    eax,0x1
  422cc9:	test   rax,rax
  422ccc:	jne    422cd5 <flatcc_verify_error_string@@Base+0x9fa>
  422cce:	mov    eax,0x1
  422cd3:	jmp    422cda <flatcc_verify_error_string@@Base+0x9ff>
  422cd5:	mov    eax,0x0
  422cda:	mov    DWORD PTR [rbp-0x50],eax
  422cdd:	cmp    DWORD PTR [rbp-0x50],0x0
  422ce1:	jne    422ced <flatcc_verify_error_string@@Base+0xa12>
  422ce3:	mov    eax,0x1e
  422ce8:	jmp    422d8d <flatcc_verify_error_string@@Base+0xab2>
  422ced:	mov    DWORD PTR [rbp-0x4c],0x1
  422cf4:	cmp    DWORD PTR [rbp-0x4c],0x0
  422cf8:	jne    422d04 <flatcc_verify_error_string@@Base+0xa29>
  422cfa:	mov    eax,0x1f
  422cff:	jmp    422d8d <flatcc_verify_error_string@@Base+0xab2>
  422d04:	movzx  eax,WORD PTR [rbp-0x22]
  422d08:	cmp    ax,0x3
  422d0c:	seta   al
  422d0f:	movzx  eax,al
  422d12:	mov    DWORD PTR [rbp-0x48],eax
  422d15:	cmp    DWORD PTR [rbp-0x48],0x0
  422d19:	jne    422d22 <flatcc_verify_error_string@@Base+0xa47>
  422d1b:	mov    eax,0x1c
  422d20:	jmp    422d8d <flatcc_verify_error_string@@Base+0xab2>
  422d22:	mov    eax,DWORD PTR [rbp-0x60]
  422d25:	lea    edx,[rax+0x2]
  422d28:	mov    rax,QWORD PTR [rbp-0x78]
  422d2c:	mov    esi,edx
  422d2e:	mov    rdi,rax
  422d31:	call   422550 <flatcc_verify_error_string@@Base+0x275>
  422d36:	mov    WORD PTR [rbp-0x24],ax
  422d3a:	mov    eax,DWORD PTR [rbp-0x28]
  422d3d:	mov    edx,DWORD PTR [rbp-0x7c]
  422d40:	sub    edx,eax
  422d42:	movzx  eax,WORD PTR [rbp-0x24]
  422d46:	movzx  eax,ax
  422d49:	cmp    edx,eax
  422d4b:	setae  al
  422d4e:	movzx  eax,al
  422d51:	mov    DWORD PTR [rbp-0x44],eax
  422d54:	cmp    DWORD PTR [rbp-0x44],0x0
  422d58:	jne    422d61 <flatcc_verify_error_string@@Base+0xa86>
  422d5a:	mov    eax,0x14
  422d5f:	jmp    422d8d <flatcc_verify_error_string@@Base+0xab2>
  422d61:	mov    edx,DWORD PTR [rbp-0x60]
  422d64:	mov    rax,QWORD PTR [rbp-0x78]
  422d68:	add    rax,rdx
  422d6b:	mov    QWORD PTR [rbp-0x30],rax
  422d6f:	mov    rax,QWORD PTR [rbp-0x78]
  422d73:	mov    QWORD PTR [rbp-0x40],rax
  422d77:	mov    eax,DWORD PTR [rbp-0x7c]
  422d7a:	mov    DWORD PTR [rbp-0x38],eax
  422d7d:	lea    rdx,[rbp-0x40]
  422d81:	mov    rax,QWORD PTR [rbp-0x90]
  422d88:	mov    rdi,rdx
  422d8b:	call   rax
  422d8d:	mov    rcx,QWORD PTR [rbp-0x18]
  422d91:	xor    rcx,QWORD PTR fs:0x28
  422d9a:	je     422da1 <flatcc_verify_error_string@@Base+0xac6>
  422d9c:	call   4061a0 <__stack_chk_fail@plt>
  422da1:	add    rsp,0x88
  422da8:	pop    rbx
  422da9:	pop    rbp
  422daa:	ret    
  422dab:	push   rbp
  422dac:	mov    rbp,rsp
  422daf:	sub    rsp,0x30
  422db3:	mov    QWORD PTR [rbp-0x18],rdi
  422db7:	mov    DWORD PTR [rbp-0x1c],esi
  422dba:	mov    DWORD PTR [rbp-0x20],edx
  422dbd:	mov    DWORD PTR [rbp-0x24],ecx
  422dc0:	mov    DWORD PTR [rbp-0x28],r8d
  422dc4:	mov    QWORD PTR [rbp-0x30],r9
  422dc8:	mov    eax,DWORD PTR [rbp-0x28]
  422dcb:	lea    edx,[rax-0x1]
  422dce:	mov    DWORD PTR [rbp-0x28],edx
  422dd1:	test   eax,eax
  422dd3:	setg   al
  422dd6:	movzx  eax,al
  422dd9:	mov    DWORD PTR [rbp-0x8],eax
  422ddc:	cmp    DWORD PTR [rbp-0x8],0x0
  422de0:	jne    422dec <flatcc_verify_error_string@@Base+0xb11>
  422de2:	mov    eax,0x3
  422de7:	jmp    422efa <flatcc_verify_error_string@@Base+0xc1f>
  422dec:	mov    ecx,DWORD PTR [rbp-0x24]
  422def:	mov    edx,DWORD PTR [rbp-0x20]
  422df2:	mov    esi,DWORD PTR [rbp-0x1c]
  422df5:	mov    rax,QWORD PTR [rbp-0x18]
  422df9:	push   0x3fffffff
  422dfe:	mov    r9d,0x4
  422e04:	mov    r8d,0x4
  422e0a:	mov    rdi,rax
  422e0d:	call   4229e6 <flatcc_verify_error_string@@Base+0x70b>
  422e12:	add    rsp,0x8
  422e16:	test   eax,eax
  422e18:	je     422e49 <flatcc_verify_error_string@@Base+0xb6e>
  422e1a:	mov    ecx,DWORD PTR [rbp-0x24]
  422e1d:	mov    edx,DWORD PTR [rbp-0x20]
  422e20:	mov    esi,DWORD PTR [rbp-0x1c]
  422e23:	mov    rax,QWORD PTR [rbp-0x18]
  422e27:	push   0x3fffffff
  422e2c:	mov    r9d,0x4
  422e32:	mov    r8d,0x4
  422e38:	mov    rdi,rax
  422e3b:	call   4229e6 <flatcc_verify_error_string@@Base+0x70b>
  422e40:	add    rsp,0x8
  422e44:	jmp    422efa <flatcc_verify_error_string@@Base+0xc1f>
  422e49:	mov    eax,DWORD PTR [rbp-0x24]
  422e4c:	add    DWORD PTR [rbp-0x20],eax
  422e4f:	mov    edx,DWORD PTR [rbp-0x20]
  422e52:	mov    rax,QWORD PTR [rbp-0x18]
  422e56:	mov    esi,edx
  422e58:	mov    rdi,rax
  422e5b:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  422e60:	mov    DWORD PTR [rbp-0x4],eax
  422e63:	add    DWORD PTR [rbp-0x20],0x4
  422e67:	mov    DWORD PTR [rbp-0xc],0x0
  422e6e:	jmp    422ee9 <flatcc_verify_error_string@@Base+0xc0e>
  422e70:	mov    edx,DWORD PTR [rbp-0x20]
  422e73:	mov    rax,QWORD PTR [rbp-0x18]
  422e77:	mov    esi,edx
  422e79:	mov    rdi,rax
  422e7c:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  422e81:	mov    r10d,eax
  422e84:	mov    rdi,QWORD PTR [rbp-0x30]
  422e88:	mov    ecx,DWORD PTR [rbp-0x28]
  422e8b:	mov    edx,DWORD PTR [rbp-0x20]
  422e8e:	mov    esi,DWORD PTR [rbp-0x1c]
  422e91:	mov    rax,QWORD PTR [rbp-0x18]
  422e95:	mov    r9,rdi
  422e98:	mov    r8d,ecx
  422e9b:	mov    ecx,r10d
  422e9e:	mov    rdi,rax
  422ea1:	call   422b91 <flatcc_verify_error_string@@Base+0x8b6>
  422ea6:	test   eax,eax
  422ea8:	je     422ee2 <flatcc_verify_error_string@@Base+0xc07>
  422eaa:	mov    edx,DWORD PTR [rbp-0x20]
  422ead:	mov    rax,QWORD PTR [rbp-0x18]
  422eb1:	mov    esi,edx
  422eb3:	mov    rdi,rax
  422eb6:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  422ebb:	mov    r10d,eax
  422ebe:	mov    rdi,QWORD PTR [rbp-0x30]
  422ec2:	mov    ecx,DWORD PTR [rbp-0x28]
  422ec5:	mov    edx,DWORD PTR [rbp-0x20]
  422ec8:	mov    esi,DWORD PTR [rbp-0x1c]
  422ecb:	mov    rax,QWORD PTR [rbp-0x18]
  422ecf:	mov    r9,rdi
  422ed2:	mov    r8d,ecx
  422ed5:	mov    ecx,r10d
  422ed8:	mov    rdi,rax
  422edb:	call   422b91 <flatcc_verify_error_string@@Base+0x8b6>
  422ee0:	jmp    422efa <flatcc_verify_error_string@@Base+0xc1f>
  422ee2:	inc    DWORD PTR [rbp-0xc]
  422ee5:	add    DWORD PTR [rbp-0x20],0x4
  422ee9:	mov    eax,DWORD PTR [rbp-0xc]
  422eec:	cmp    eax,DWORD PTR [rbp-0x4]
  422eef:	jb     422e70 <flatcc_verify_error_string@@Base+0xb95>
  422ef5:	mov    eax,0x0
  422efa:	leave  
  422efb:	ret    
  422efc:	push   rbp
  422efd:	mov    rbp,rsp
  422f00:	add    rsp,0xffffffffffffff80
  422f04:	mov    QWORD PTR [rbp-0x58],rdi
  422f08:	mov    DWORD PTR [rbp-0x5c],esi
  422f0b:	mov    DWORD PTR [rbp-0x60],edx
  422f0e:	mov    DWORD PTR [rbp-0x64],ecx
  422f11:	mov    DWORD PTR [rbp-0x68],r8d
  422f15:	mov    QWORD PTR [rbp-0x70],r9
  422f19:	mov    rax,QWORD PTR [rbp+0x18]
  422f1d:	mov    QWORD PTR [rbp-0x78],rax
  422f21:	mov    rax,QWORD PTR fs:0x28
  422f2a:	mov    QWORD PTR [rbp-0x8],rax
  422f2e:	xor    eax,eax
  422f30:	mov    eax,DWORD PTR [rbp+0x10]
  422f33:	lea    edx,[rax-0x1]
  422f36:	mov    DWORD PTR [rbp+0x10],edx
  422f39:	test   eax,eax
  422f3b:	setg   al
  422f3e:	movzx  eax,al
  422f41:	mov    DWORD PTR [rbp-0x48],eax
  422f44:	cmp    DWORD PTR [rbp-0x48],0x0
  422f48:	jne    422f54 <flatcc_verify_error_string@@Base+0xc79>
  422f4a:	mov    eax,0x3
  422f4f:	jmp    4230c6 <flatcc_verify_error_string@@Base+0xdeb>
  422f54:	mov    ecx,DWORD PTR [rbp-0x64]
  422f57:	mov    edx,DWORD PTR [rbp-0x60]
  422f5a:	mov    esi,DWORD PTR [rbp-0x5c]
  422f5d:	mov    rax,QWORD PTR [rbp-0x58]
  422f61:	push   0x3fffffff
  422f66:	mov    r9d,0x4
  422f6c:	mov    r8d,0x4
  422f72:	mov    rdi,rax
  422f75:	call   4229e6 <flatcc_verify_error_string@@Base+0x70b>
  422f7a:	add    rsp,0x8
  422f7e:	test   eax,eax
  422f80:	je     422fb1 <flatcc_verify_error_string@@Base+0xcd6>
  422f82:	mov    ecx,DWORD PTR [rbp-0x64]
  422f85:	mov    edx,DWORD PTR [rbp-0x60]
  422f88:	mov    esi,DWORD PTR [rbp-0x5c]
  422f8b:	mov    rax,QWORD PTR [rbp-0x58]
  422f8f:	push   0x3fffffff
  422f94:	mov    r9d,0x4
  422f9a:	mov    r8d,0x4
  422fa0:	mov    rdi,rax
  422fa3:	call   4229e6 <flatcc_verify_error_string@@Base+0x70b>
  422fa8:	add    rsp,0x8
  422fac:	jmp    4230c6 <flatcc_verify_error_string@@Base+0xdeb>
  422fb1:	mov    eax,DWORD PTR [rbp-0x64]
  422fb4:	add    DWORD PTR [rbp-0x60],eax
  422fb7:	mov    edx,DWORD PTR [rbp-0x60]
  422fba:	mov    rax,QWORD PTR [rbp-0x58]
  422fbe:	mov    esi,edx
  422fc0:	mov    rdi,rax
  422fc3:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  422fc8:	mov    DWORD PTR [rbp-0x44],eax
  422fcb:	mov    eax,DWORD PTR [rbp-0x44]
  422fce:	cmp    eax,DWORD PTR [rbp-0x68]
  422fd1:	sete   al
  422fd4:	movzx  eax,al
  422fd7:	mov    DWORD PTR [rbp-0x40],eax
  422fda:	cmp    DWORD PTR [rbp-0x40],0x0
  422fde:	jne    422fea <flatcc_verify_error_string@@Base+0xd0f>
  422fe0:	mov    eax,0x22
  422fe5:	jmp    4230c6 <flatcc_verify_error_string@@Base+0xdeb>
  422fea:	add    DWORD PTR [rbp-0x60],0x4
  422fee:	mov    rax,QWORD PTR [rbp-0x58]
  422ff2:	mov    QWORD PTR [rbp-0x30],rax
  422ff6:	mov    eax,DWORD PTR [rbp-0x5c]
  422ff9:	mov    DWORD PTR [rbp-0x28],eax
  422ffc:	mov    eax,DWORD PTR [rbp+0x10]
  422fff:	mov    DWORD PTR [rbp-0x24],eax
  423002:	mov    DWORD PTR [rbp-0x4c],0x0
  423009:	jmp    4230b5 <flatcc_verify_error_string@@Base+0xdda>
  42300e:	mov    edx,DWORD PTR [rbp-0x60]
  423011:	mov    rax,QWORD PTR [rbp-0x58]
  423015:	mov    esi,edx
  423017:	mov    rdi,rax
  42301a:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  42301f:	mov    DWORD PTR [rbp-0x3c],eax
  423022:	cmp    DWORD PTR [rbp-0x3c],0x0
  423026:	jne    42304d <flatcc_verify_error_string@@Base+0xd72>
  423028:	mov    edx,DWORD PTR [rbp-0x4c]
  42302b:	mov    rax,QWORD PTR [rbp-0x70]
  42302f:	add    rax,rdx
  423032:	movzx  eax,BYTE PTR [rax]
  423035:	test   al,al
  423037:	sete   al
  42303a:	movzx  eax,al
  42303d:	mov    DWORD PTR [rbp-0x38],eax
  423040:	cmp    DWORD PTR [rbp-0x38],0x0
  423044:	jne    4230ae <flatcc_verify_error_string@@Base+0xdd3>
  423046:	mov    eax,0x20
  42304b:	jmp    4230c6 <flatcc_verify_error_string@@Base+0xdeb>
  42304d:	mov    edx,DWORD PTR [rbp-0x4c]
  423050:	mov    rax,QWORD PTR [rbp-0x70]
  423054:	add    rax,rdx
  423057:	movzx  eax,BYTE PTR [rax]
  42305a:	test   al,al
  42305c:	setne  al
  42305f:	movzx  eax,al
  423062:	mov    DWORD PTR [rbp-0x34],eax
  423065:	cmp    DWORD PTR [rbp-0x34],0x0
  423069:	jne    423072 <flatcc_verify_error_string@@Base+0xd97>
  42306b:	mov    eax,0x21
  423070:	jmp    4230c6 <flatcc_verify_error_string@@Base+0xdeb>
  423072:	mov    edx,DWORD PTR [rbp-0x4c]
  423075:	mov    rax,QWORD PTR [rbp-0x70]
  423079:	add    rax,rdx
  42307c:	movzx  eax,BYTE PTR [rax]
  42307f:	mov    BYTE PTR [rbp-0x20],al
  423082:	mov    eax,DWORD PTR [rbp-0x60]
  423085:	mov    DWORD PTR [rbp-0x1c],eax
  423088:	mov    eax,DWORD PTR [rbp-0x3c]
  42308b:	mov    DWORD PTR [rbp-0x18],eax
  42308e:	lea    rdx,[rbp-0x30]
  423092:	mov    rax,QWORD PTR [rbp-0x78]
  423096:	mov    rdi,rdx
  423099:	call   rax
  42309b:	test   eax,eax
  42309d:	je     4230ae <flatcc_verify_error_string@@Base+0xdd3>
  42309f:	lea    rdx,[rbp-0x30]
  4230a3:	mov    rax,QWORD PTR [rbp-0x78]
  4230a7:	mov    rdi,rdx
  4230aa:	call   rax
  4230ac:	jmp    4230c6 <flatcc_verify_error_string@@Base+0xdeb>
  4230ae:	inc    DWORD PTR [rbp-0x4c]
  4230b1:	add    DWORD PTR [rbp-0x60],0x4
  4230b5:	mov    eax,DWORD PTR [rbp-0x4c]
  4230b8:	cmp    eax,DWORD PTR [rbp-0x44]
  4230bb:	jb     42300e <flatcc_verify_error_string@@Base+0xd33>
  4230c1:	mov    eax,0x0
  4230c6:	mov    rcx,QWORD PTR [rbp-0x8]
  4230ca:	xor    rcx,QWORD PTR fs:0x28
  4230d3:	je     4230da <flatcc_verify_error_string@@Base+0xdff>
  4230d5:	call   4061a0 <__stack_chk_fail@plt>
  4230da:	leave  
  4230db:	ret    

00000000004230dc <flatcc_verify_field@@Base>:
  4230dc:	endbr64 
  4230e0:	push   rbp
  4230e1:	mov    rbp,rsp
  4230e4:	sub    rsp,0x18
  4230e8:	mov    QWORD PTR [rbp-0x8],rdi
  4230ec:	mov    QWORD PTR [rbp-0x18],rdx
  4230f0:	mov    eax,ecx
  4230f2:	mov    edx,esi
  4230f4:	mov    WORD PTR [rbp-0xc],dx
  4230f8:	mov    WORD PTR [rbp-0x10],ax
  4230fc:	movzx  edx,WORD PTR [rbp-0x10]
  423100:	mov    rax,QWORD PTR [rbp-0x18]
  423104:	mov    ecx,eax
  423106:	movzx  esi,WORD PTR [rbp-0xc]
  42310a:	mov    rax,QWORD PTR [rbp-0x8]
  42310e:	mov    r8d,edx
  423111:	mov    edx,0x0
  423116:	mov    rdi,rax
  423119:	call   42276f <flatcc_verify_error_string@@Base+0x494>
  42311e:	test   eax,eax
  423120:	je     423146 <flatcc_verify_field@@Base+0x6a>
  423122:	movzx  edx,WORD PTR [rbp-0x10]
  423126:	mov    rax,QWORD PTR [rbp-0x18]
  42312a:	mov    ecx,eax
  42312c:	movzx  esi,WORD PTR [rbp-0xc]
  423130:	mov    rax,QWORD PTR [rbp-0x8]
  423134:	mov    r8d,edx
  423137:	mov    edx,0x0
  42313c:	mov    rdi,rax
  42313f:	call   42276f <flatcc_verify_error_string@@Base+0x494>
  423144:	jmp    42314b <flatcc_verify_field@@Base+0x6f>
  423146:	mov    eax,0x0
  42314b:	leave  
  42314c:	ret    

000000000042314d <flatcc_verify_string_field@@Base>:
  42314d:	endbr64 
  423151:	push   rbp
  423152:	mov    rbp,rsp
  423155:	sub    rsp,0x20
  423159:	mov    QWORD PTR [rbp-0x18],rdi
  42315d:	mov    eax,esi
  42315f:	mov    DWORD PTR [rbp-0x20],edx
  423162:	mov    WORD PTR [rbp-0x1c],ax
  423166:	mov    rax,QWORD PTR fs:0x28
  42316f:	mov    QWORD PTR [rbp-0x8],rax
  423173:	xor    eax,eax
  423175:	movzx  esi,WORD PTR [rbp-0x1c]
  423179:	lea    rcx,[rbp-0x10]
  42317d:	mov    edx,DWORD PTR [rbp-0x20]
  423180:	mov    rax,QWORD PTR [rbp-0x18]
  423184:	mov    rdi,rax
  423187:	call   422860 <flatcc_verify_error_string@@Base+0x585>
  42318c:	mov    DWORD PTR [rbp-0xc],eax
  42318f:	cmp    DWORD PTR [rbp-0xc],0x0
  423193:	jne    42319c <flatcc_verify_string_field@@Base+0x4f>
  423195:	mov    eax,DWORD PTR [rbp-0x10]
  423198:	test   eax,eax
  42319a:	jne    4231a1 <flatcc_verify_string_field@@Base+0x54>
  42319c:	mov    eax,DWORD PTR [rbp-0xc]
  42319f:	jmp    4231d0 <flatcc_verify_string_field@@Base+0x83>
  4231a1:	mov    edx,DWORD PTR [rbp-0x10]
  4231a4:	mov    rax,QWORD PTR [rbp-0x18]
  4231a8:	mov    rax,QWORD PTR [rax]
  4231ab:	mov    esi,edx
  4231ad:	mov    rdi,rax
  4231b0:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  4231b5:	mov    ecx,eax
  4231b7:	mov    edx,DWORD PTR [rbp-0x10]
  4231ba:	mov    rax,QWORD PTR [rbp-0x18]
  4231be:	mov    esi,DWORD PTR [rax+0x8]
  4231c1:	mov    rax,QWORD PTR [rbp-0x18]
  4231c5:	mov    rax,QWORD PTR [rax]
  4231c8:	mov    rdi,rax
  4231cb:	call   42293c <flatcc_verify_error_string@@Base+0x661>
  4231d0:	mov    rdi,QWORD PTR [rbp-0x8]
  4231d4:	xor    rdi,QWORD PTR fs:0x28
  4231dd:	je     4231e4 <flatcc_verify_string_field@@Base+0x97>
  4231df:	call   4061a0 <__stack_chk_fail@plt>
  4231e4:	leave  
  4231e5:	ret    

00000000004231e6 <flatcc_verify_vector_field@@Base>:
  4231e6:	endbr64 
  4231ea:	push   rbp
  4231eb:	mov    rbp,rsp
  4231ee:	push   r13
  4231f0:	push   r12
  4231f2:	push   rbx
  4231f3:	sub    rsp,0x48
  4231f7:	mov    QWORD PTR [rbp-0x38],rdi
  4231fb:	mov    eax,esi
  4231fd:	mov    DWORD PTR [rbp-0x40],edx
  423200:	mov    QWORD PTR [rbp-0x48],rcx
  423204:	mov    edx,r8d
  423207:	mov    QWORD PTR [rbp-0x58],r9
  42320b:	mov    WORD PTR [rbp-0x3c],ax
  42320f:	mov    eax,edx
  423211:	mov    WORD PTR [rbp-0x4c],ax
  423215:	mov    rax,QWORD PTR fs:0x28
  42321e:	mov    QWORD PTR [rbp-0x28],rax
  423222:	xor    eax,eax
  423224:	movzx  esi,WORD PTR [rbp-0x3c]
  423228:	lea    rcx,[rbp-0x30]
  42322c:	mov    edx,DWORD PTR [rbp-0x40]
  42322f:	mov    rax,QWORD PTR [rbp-0x38]
  423233:	mov    rdi,rax
  423236:	call   422860 <flatcc_verify_error_string@@Base+0x585>
  42323b:	mov    DWORD PTR [rbp-0x2c],eax
  42323e:	cmp    DWORD PTR [rbp-0x2c],0x0
  423242:	jne    42324b <flatcc_verify_vector_field@@Base+0x65>
  423244:	mov    eax,DWORD PTR [rbp-0x30]
  423247:	test   eax,eax
  423249:	jne    423250 <flatcc_verify_vector_field@@Base+0x6a>
  42324b:	mov    eax,DWORD PTR [rbp-0x2c]
  42324e:	jmp    42329d <flatcc_verify_vector_field@@Base+0xb7>
  423250:	mov    rax,QWORD PTR [rbp-0x58]
  423254:	mov    r12d,eax
  423257:	movzx  ebx,WORD PTR [rbp-0x4c]
  42325b:	mov    rax,QWORD PTR [rbp-0x48]
  42325f:	mov    r13d,eax
  423262:	mov    edx,DWORD PTR [rbp-0x30]
  423265:	mov    rax,QWORD PTR [rbp-0x38]
  423269:	mov    rax,QWORD PTR [rax]
  42326c:	mov    esi,edx
  42326e:	mov    rdi,rax
  423271:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  423276:	mov    ecx,eax
  423278:	mov    edx,DWORD PTR [rbp-0x30]
  42327b:	mov    rax,QWORD PTR [rbp-0x38]
  42327f:	mov    esi,DWORD PTR [rax+0x8]
  423282:	mov    rax,QWORD PTR [rbp-0x38]
  423286:	mov    rax,QWORD PTR [rax]
  423289:	push   r12
  42328b:	mov    r9d,ebx
  42328e:	mov    r8d,r13d
  423291:	mov    rdi,rax
  423294:	call   4229e6 <flatcc_verify_error_string@@Base+0x70b>
  423299:	add    rsp,0x8
  42329d:	mov    rbx,QWORD PTR [rbp-0x28]
  4232a1:	xor    rbx,QWORD PTR fs:0x28
  4232aa:	je     4232b1 <flatcc_verify_vector_field@@Base+0xcb>
  4232ac:	call   4061a0 <__stack_chk_fail@plt>
  4232b1:	lea    rsp,[rbp-0x18]
  4232b5:	pop    rbx
  4232b6:	pop    r12
  4232b8:	pop    r13
  4232ba:	pop    rbp
  4232bb:	ret    

00000000004232bc <flatcc_verify_string_vector_field@@Base>:
  4232bc:	endbr64 
  4232c0:	push   rbp
  4232c1:	mov    rbp,rsp
  4232c4:	sub    rsp,0x20
  4232c8:	mov    QWORD PTR [rbp-0x18],rdi
  4232cc:	mov    eax,esi
  4232ce:	mov    DWORD PTR [rbp-0x20],edx
  4232d1:	mov    WORD PTR [rbp-0x1c],ax
  4232d5:	mov    rax,QWORD PTR fs:0x28
  4232de:	mov    QWORD PTR [rbp-0x8],rax
  4232e2:	xor    eax,eax
  4232e4:	movzx  esi,WORD PTR [rbp-0x1c]
  4232e8:	lea    rcx,[rbp-0x10]
  4232ec:	mov    edx,DWORD PTR [rbp-0x20]
  4232ef:	mov    rax,QWORD PTR [rbp-0x18]
  4232f3:	mov    rdi,rax
  4232f6:	call   422860 <flatcc_verify_error_string@@Base+0x585>
  4232fb:	mov    DWORD PTR [rbp-0xc],eax
  4232fe:	cmp    DWORD PTR [rbp-0xc],0x0
  423302:	jne    42330b <flatcc_verify_string_vector_field@@Base+0x4f>
  423304:	mov    eax,DWORD PTR [rbp-0x10]
  423307:	test   eax,eax
  423309:	jne    423310 <flatcc_verify_string_vector_field@@Base+0x54>
  42330b:	mov    eax,DWORD PTR [rbp-0xc]
  42330e:	jmp    42333f <flatcc_verify_string_vector_field@@Base+0x83>
  423310:	mov    edx,DWORD PTR [rbp-0x10]
  423313:	mov    rax,QWORD PTR [rbp-0x18]
  423317:	mov    rax,QWORD PTR [rax]
  42331a:	mov    esi,edx
  42331c:	mov    rdi,rax
  42331f:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  423324:	mov    ecx,eax
  423326:	mov    edx,DWORD PTR [rbp-0x10]
  423329:	mov    rax,QWORD PTR [rbp-0x18]
  42332d:	mov    esi,DWORD PTR [rax+0x8]
  423330:	mov    rax,QWORD PTR [rbp-0x18]
  423334:	mov    rax,QWORD PTR [rax]
  423337:	mov    rdi,rax
  42333a:	call   422a92 <flatcc_verify_error_string@@Base+0x7b7>
  42333f:	mov    rdi,QWORD PTR [rbp-0x8]
  423343:	xor    rdi,QWORD PTR fs:0x28
  42334c:	je     423353 <flatcc_verify_string_vector_field@@Base+0x97>
  42334e:	call   4061a0 <__stack_chk_fail@plt>
  423353:	leave  
  423354:	ret    

0000000000423355 <flatcc_verify_table_field@@Base>:
  423355:	endbr64 
  423359:	push   rbp
  42335a:	mov    rbp,rsp
  42335d:	push   rbx
  42335e:	sub    rsp,0x38
  423362:	mov    QWORD PTR [rbp-0x28],rdi
  423366:	mov    eax,esi
  423368:	mov    DWORD PTR [rbp-0x30],edx
  42336b:	mov    QWORD PTR [rbp-0x38],rcx
  42336f:	mov    WORD PTR [rbp-0x2c],ax
  423373:	mov    rax,QWORD PTR fs:0x28
  42337c:	mov    QWORD PTR [rbp-0x18],rax
  423380:	xor    eax,eax
  423382:	movzx  esi,WORD PTR [rbp-0x2c]
  423386:	lea    rcx,[rbp-0x20]
  42338a:	mov    edx,DWORD PTR [rbp-0x30]
  42338d:	mov    rax,QWORD PTR [rbp-0x28]
  423391:	mov    rdi,rax
  423394:	call   422860 <flatcc_verify_error_string@@Base+0x585>
  423399:	mov    DWORD PTR [rbp-0x1c],eax
  42339c:	cmp    DWORD PTR [rbp-0x1c],0x0
  4233a0:	jne    4233a9 <flatcc_verify_table_field@@Base+0x54>
  4233a2:	mov    eax,DWORD PTR [rbp-0x20]
  4233a5:	test   eax,eax
  4233a7:	jne    4233ae <flatcc_verify_table_field@@Base+0x59>
  4233a9:	mov    eax,DWORD PTR [rbp-0x1c]
  4233ac:	jmp    4233f0 <flatcc_verify_table_field@@Base+0x9b>
  4233ae:	mov    rax,QWORD PTR [rbp-0x28]
  4233b2:	mov    ebx,DWORD PTR [rax+0xc]
  4233b5:	mov    edx,DWORD PTR [rbp-0x20]
  4233b8:	mov    rax,QWORD PTR [rbp-0x28]
  4233bc:	mov    rax,QWORD PTR [rax]
  4233bf:	mov    esi,edx
  4233c1:	mov    rdi,rax
  4233c4:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  4233c9:	mov    edi,eax
  4233cb:	mov    edx,DWORD PTR [rbp-0x20]
  4233ce:	mov    rax,QWORD PTR [rbp-0x28]
  4233d2:	mov    esi,DWORD PTR [rax+0x8]
  4233d5:	mov    rax,QWORD PTR [rbp-0x28]
  4233d9:	mov    rax,QWORD PTR [rax]
  4233dc:	mov    rcx,QWORD PTR [rbp-0x38]
  4233e0:	mov    r9,rcx
  4233e3:	mov    r8d,ebx
  4233e6:	mov    ecx,edi
  4233e8:	mov    rdi,rax
  4233eb:	call   422b91 <flatcc_verify_error_string@@Base+0x8b6>
  4233f0:	mov    rbx,QWORD PTR [rbp-0x18]
  4233f4:	xor    rbx,QWORD PTR fs:0x28
  4233fd:	je     423404 <flatcc_verify_table_field@@Base+0xaf>
  4233ff:	call   4061a0 <__stack_chk_fail@plt>
  423404:	add    rsp,0x38
  423408:	pop    rbx
  423409:	pop    rbp
  42340a:	ret    

000000000042340b <flatcc_verify_table_vector_field@@Base>:
  42340b:	endbr64 
  42340f:	push   rbp
  423410:	mov    rbp,rsp
  423413:	push   rbx
  423414:	sub    rsp,0x38
  423418:	mov    QWORD PTR [rbp-0x28],rdi
  42341c:	mov    eax,esi
  42341e:	mov    DWORD PTR [rbp-0x30],edx
  423421:	mov    QWORD PTR [rbp-0x38],rcx
  423425:	mov    WORD PTR [rbp-0x2c],ax
  423429:	mov    rax,QWORD PTR fs:0x28
  423432:	mov    QWORD PTR [rbp-0x18],rax
  423436:	xor    eax,eax
  423438:	movzx  esi,WORD PTR [rbp-0x2c]
  42343c:	lea    rcx,[rbp-0x20]
  423440:	mov    edx,DWORD PTR [rbp-0x30]
  423443:	mov    rax,QWORD PTR [rbp-0x28]
  423447:	mov    rdi,rax
  42344a:	call   422860 <flatcc_verify_error_string@@Base+0x585>
  42344f:	mov    DWORD PTR [rbp-0x1c],eax
  423452:	cmp    DWORD PTR [rbp-0x1c],0x0
  423456:	jne    42345f <flatcc_verify_table_vector_field@@Base+0x54>
  423458:	mov    eax,DWORD PTR [rbp-0x20]
  42345b:	test   eax,eax
  42345d:	jne    423464 <flatcc_verify_table_vector_field@@Base+0x59>
  42345f:	mov    eax,DWORD PTR [rbp-0x1c]
  423462:	jmp    4234a6 <flatcc_verify_table_vector_field@@Base+0x9b>
  423464:	mov    rax,QWORD PTR [rbp-0x28]
  423468:	mov    ebx,DWORD PTR [rax+0xc]
  42346b:	mov    edx,DWORD PTR [rbp-0x20]
  42346e:	mov    rax,QWORD PTR [rbp-0x28]
  423472:	mov    rax,QWORD PTR [rax]
  423475:	mov    esi,edx
  423477:	mov    rdi,rax
  42347a:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  42347f:	mov    edi,eax
  423481:	mov    edx,DWORD PTR [rbp-0x20]
  423484:	mov    rax,QWORD PTR [rbp-0x28]
  423488:	mov    esi,DWORD PTR [rax+0x8]
  42348b:	mov    rax,QWORD PTR [rbp-0x28]
  42348f:	mov    rax,QWORD PTR [rax]
  423492:	mov    rcx,QWORD PTR [rbp-0x38]
  423496:	mov    r9,rcx
  423499:	mov    r8d,ebx
  42349c:	mov    ecx,edi
  42349e:	mov    rdi,rax
  4234a1:	call   422dab <flatcc_verify_error_string@@Base+0xad0>
  4234a6:	mov    rbx,QWORD PTR [rbp-0x18]
  4234aa:	xor    rbx,QWORD PTR fs:0x28
  4234b3:	je     4234ba <flatcc_verify_table_vector_field@@Base+0xaf>
  4234b5:	call   4061a0 <__stack_chk_fail@plt>
  4234ba:	add    rsp,0x38
  4234be:	pop    rbx
  4234bf:	pop    rbp
  4234c0:	ret    

00000000004234c1 <flatcc_verify_union_table@@Base>:
  4234c1:	endbr64 
  4234c5:	push   rbp
  4234c6:	mov    rbp,rsp
  4234c9:	sub    rsp,0x10
  4234cd:	mov    QWORD PTR [rbp-0x8],rdi
  4234d1:	mov    QWORD PTR [rbp-0x10],rsi
  4234d5:	mov    rax,QWORD PTR [rbp-0x8]
  4234d9:	mov    edi,DWORD PTR [rax+0xc]
  4234dc:	mov    rax,QWORD PTR [rbp-0x8]
  4234e0:	mov    ecx,DWORD PTR [rax+0x18]
  4234e3:	mov    rax,QWORD PTR [rbp-0x8]
  4234e7:	mov    edx,DWORD PTR [rax+0x14]
  4234ea:	mov    rax,QWORD PTR [rbp-0x8]
  4234ee:	mov    esi,DWORD PTR [rax+0x8]
  4234f1:	mov    rax,QWORD PTR [rbp-0x8]
  4234f5:	mov    rax,QWORD PTR [rax]
  4234f8:	mov    r8,QWORD PTR [rbp-0x10]
  4234fc:	mov    r9,r8
  4234ff:	mov    r8d,edi
  423502:	mov    rdi,rax
  423505:	call   422b91 <flatcc_verify_error_string@@Base+0x8b6>
  42350a:	leave  
  42350b:	ret    

000000000042350c <flatcc_verify_union_struct@@Base>:
  42350c:	endbr64 
  423510:	push   rbp
  423511:	mov    rbp,rsp
  423514:	sub    rsp,0x18
  423518:	mov    QWORD PTR [rbp-0x8],rdi
  42351c:	mov    QWORD PTR [rbp-0x10],rsi
  423520:	mov    eax,edx
  423522:	mov    WORD PTR [rbp-0x14],ax
  423526:	movzx  ecx,WORD PTR [rbp-0x14]
  42352a:	mov    rax,QWORD PTR [rbp-0x10]
  42352e:	mov    edi,eax
  423530:	mov    rax,QWORD PTR [rbp-0x8]
  423534:	mov    edx,DWORD PTR [rax+0x18]
  423537:	mov    rax,QWORD PTR [rbp-0x8]
  42353b:	mov    esi,DWORD PTR [rax+0x14]
  42353e:	mov    rax,QWORD PTR [rbp-0x8]
  423542:	mov    eax,DWORD PTR [rax+0x8]
  423545:	mov    r8d,ecx
  423548:	mov    ecx,edi
  42354a:	mov    edi,eax
  42354c:	call   42262b <flatcc_verify_error_string@@Base+0x350>
  423551:	leave  
  423552:	ret    

0000000000423553 <flatcc_verify_union_string@@Base>:
  423553:	endbr64 
  423557:	push   rbp
  423558:	mov    rbp,rsp
  42355b:	sub    rsp,0x8
  42355f:	mov    QWORD PTR [rbp-0x8],rdi
  423563:	mov    rax,QWORD PTR [rbp-0x8]
  423567:	mov    ecx,DWORD PTR [rax+0x18]
  42356a:	mov    rax,QWORD PTR [rbp-0x8]
  42356e:	mov    edx,DWORD PTR [rax+0x14]
  423571:	mov    rax,QWORD PTR [rbp-0x8]
  423575:	mov    esi,DWORD PTR [rax+0x8]
  423578:	mov    rax,QWORD PTR [rbp-0x8]
  42357c:	mov    rax,QWORD PTR [rax]
  42357f:	mov    rdi,rax
  423582:	call   42293c <flatcc_verify_error_string@@Base+0x661>
  423587:	leave  
  423588:	ret    

0000000000423589 <flatcc_verify_buffer_header@@Base>:
  423589:	endbr64 
  42358d:	push   rbp
  42358e:	mov    rbp,rsp
  423591:	sub    rsp,0x40
  423595:	mov    QWORD PTR [rbp-0x28],rdi
  423599:	mov    QWORD PTR [rbp-0x30],rsi
  42359d:	mov    QWORD PTR [rbp-0x38],rdx
  4235a1:	mov    rax,QWORD PTR [rbp-0x28]
  4235a5:	and    eax,0x3
  4235a8:	test   rax,rax
  4235ab:	sete   al
  4235ae:	movzx  eax,al
  4235b1:	mov    DWORD PTR [rbp-0x18],eax
  4235b4:	cmp    DWORD PTR [rbp-0x18],0x0
  4235b8:	jne    4235c4 <flatcc_verify_buffer_header@@Base+0x3b>
  4235ba:	mov    eax,0x5
  4235bf:	jmp    423657 <flatcc_verify_buffer_header@@Base+0xce>
  4235c4:	mov    eax,0xfffffff7
  4235c9:	cmp    QWORD PTR [rbp-0x30],rax
  4235cd:	setbe  al
  4235d0:	movzx  eax,al
  4235d3:	mov    DWORD PTR [rbp-0x14],eax
  4235d6:	cmp    DWORD PTR [rbp-0x14],0x0
  4235da:	jne    4235e3 <flatcc_verify_buffer_header@@Base+0x5a>
  4235dc:	mov    eax,0x6
  4235e1:	jmp    423657 <flatcc_verify_buffer_header@@Base+0xce>
  4235e3:	cmp    QWORD PTR [rbp-0x30],0x7
  4235e8:	seta   al
  4235eb:	movzx  eax,al
  4235ee:	mov    DWORD PTR [rbp-0x10],eax
  4235f1:	cmp    DWORD PTR [rbp-0x10],0x0
  4235f5:	jne    4235fe <flatcc_verify_buffer_header@@Base+0x75>
  4235f7:	mov    eax,0x1
  4235fc:	jmp    423657 <flatcc_verify_buffer_header@@Base+0xce>
  4235fe:	cmp    QWORD PTR [rbp-0x38],0x0
  423603:	je     423652 <flatcc_verify_buffer_header@@Base+0xc9>
  423605:	mov    rax,QWORD PTR [rbp-0x38]
  423609:	mov    rdi,rax
  42360c:	call   4224d3 <flatcc_verify_error_string@@Base+0x1f8>
  423611:	mov    DWORD PTR [rbp-0xc],eax
  423614:	mov    rax,QWORD PTR [rbp-0x28]
  423618:	mov    esi,0x4
  42361d:	mov    rdi,rax
  423620:	call   42252d <flatcc_verify_error_string@@Base+0x252>
  423625:	mov    DWORD PTR [rbp-0x8],eax
  423628:	cmp    DWORD PTR [rbp-0xc],0x0
  42362c:	je     423636 <flatcc_verify_buffer_header@@Base+0xad>
  42362e:	mov    eax,DWORD PTR [rbp-0x8]
  423631:	cmp    eax,DWORD PTR [rbp-0xc]
  423634:	jne    42363d <flatcc_verify_buffer_header@@Base+0xb4>
  423636:	mov    eax,0x1
  42363b:	jmp    423642 <flatcc_verify_buffer_header@@Base+0xb9>
  42363d:	mov    eax,0x0
  423642:	mov    DWORD PTR [rbp-0x4],eax
  423645:	cmp    DWORD PTR [rbp-0x4],0x0
  423649:	jne    423652 <flatcc_verify_buffer_header@@Base+0xc9>
  42364b:	mov    eax,0x2
  423650:	jmp    423657 <flatcc_verify_buffer_header@@Base+0xce>
  423652:	mov    eax,0x0
  423657:	leave  
  423658:	ret    

0000000000423659 <flatcc_verify_typed_buffer_header@@Base>:
  423659:	endbr64 
  42365d:	push   rbp
  42365e:	mov    rbp,rsp
  423661:	sub    rsp,0x38
  423665:	mov    QWORD PTR [rbp-0x28],rdi
  423669:	mov    QWORD PTR [rbp-0x30],rsi
  42366d:	mov    DWORD PTR [rbp-0x34],edx
  423670:	mov    rax,QWORD PTR [rbp-0x28]
  423674:	and    eax,0x3
  423677:	test   rax,rax
  42367a:	sete   al
  42367d:	movzx  eax,al
  423680:	mov    DWORD PTR [rbp-0x18],eax
  423683:	cmp    DWORD PTR [rbp-0x18],0x0
  423687:	jne    423693 <flatcc_verify_typed_buffer_header@@Base+0x3a>
  423689:	mov    eax,0x5
  42368e:	jmp    42371c <flatcc_verify_typed_buffer_header@@Base+0xc3>
  423693:	mov    eax,0xfffffff7
  423698:	cmp    QWORD PTR [rbp-0x30],rax
  42369c:	setbe  al
  42369f:	movzx  eax,al
  4236a2:	mov    DWORD PTR [rbp-0x14],eax
  4236a5:	cmp    DWORD PTR [rbp-0x14],0x0
  4236a9:	jne    4236b2 <flatcc_verify_typed_buffer_header@@Base+0x59>
  4236ab:	mov    eax,0x6
  4236b0:	jmp    42371c <flatcc_verify_typed_buffer_header@@Base+0xc3>
  4236b2:	cmp    QWORD PTR [rbp-0x30],0x7
  4236b7:	seta   al
  4236ba:	movzx  eax,al
  4236bd:	mov    DWORD PTR [rbp-0x10],eax
  4236c0:	cmp    DWORD PTR [rbp-0x10],0x0
  4236c4:	jne    4236cd <flatcc_verify_typed_buffer_header@@Base+0x74>
  4236c6:	mov    eax,0x1
  4236cb:	jmp    42371c <flatcc_verify_typed_buffer_header@@Base+0xc3>
  4236cd:	cmp    DWORD PTR [rbp-0x34],0x0
  4236d1:	je     423717 <flatcc_verify_typed_buffer_header@@Base+0xbe>
  4236d3:	mov    eax,DWORD PTR [rbp-0x34]
  4236d6:	mov    DWORD PTR [rbp-0xc],eax
  4236d9:	mov    rax,QWORD PTR [rbp-0x28]
  4236dd:	mov    esi,0x4
  4236e2:	mov    rdi,rax
  4236e5:	call   42252d <flatcc_verify_error_string@@Base+0x252>
  4236ea:	mov    DWORD PTR [rbp-0x8],eax
  4236ed:	cmp    DWORD PTR [rbp-0xc],0x0
  4236f1:	je     4236fb <flatcc_verify_typed_buffer_header@@Base+0xa2>
  4236f3:	mov    eax,DWORD PTR [rbp-0x8]
  4236f6:	cmp    eax,DWORD PTR [rbp-0xc]
  4236f9:	jne    423702 <flatcc_verify_typed_buffer_header@@Base+0xa9>
  4236fb:	mov    eax,0x1
  423700:	jmp    423707 <flatcc_verify_typed_buffer_header@@Base+0xae>
  423702:	mov    eax,0x0
  423707:	mov    DWORD PTR [rbp-0x4],eax
  42370a:	cmp    DWORD PTR [rbp-0x4],0x0
  42370e:	jne    423717 <flatcc_verify_typed_buffer_header@@Base+0xbe>
  423710:	mov    eax,0x2
  423715:	jmp    42371c <flatcc_verify_typed_buffer_header@@Base+0xc3>
  423717:	mov    eax,0x0
  42371c:	leave  
  42371d:	ret    

000000000042371e <flatcc_verify_struct_as_root@@Base>:
  42371e:	endbr64 
  423722:	push   rbp
  423723:	mov    rbp,rsp
  423726:	push   r12
  423728:	push   rbx
  423729:	sub    rsp,0x30
  42372d:	mov    QWORD PTR [rbp-0x18],rdi
  423731:	mov    QWORD PTR [rbp-0x20],rsi
  423735:	mov    QWORD PTR [rbp-0x28],rdx
  423739:	mov    QWORD PTR [rbp-0x30],rcx
  42373d:	mov    eax,r8d
  423740:	mov    WORD PTR [rbp-0x34],ax
  423744:	mov    rdx,QWORD PTR [rbp-0x28]
  423748:	mov    rcx,QWORD PTR [rbp-0x20]
  42374c:	mov    rax,QWORD PTR [rbp-0x18]
  423750:	mov    rsi,rcx
  423753:	mov    rdi,rax
  423756:	call   423589 <flatcc_verify_buffer_header@@Base>
  42375b:	test   eax,eax
  42375d:	je     423778 <flatcc_verify_struct_as_root@@Base+0x5a>
  42375f:	mov    rdx,QWORD PTR [rbp-0x28]
  423763:	mov    rcx,QWORD PTR [rbp-0x20]
  423767:	mov    rax,QWORD PTR [rbp-0x18]
  42376b:	mov    rsi,rcx
  42376e:	mov    rdi,rax
  423771:	call   423589 <flatcc_verify_buffer_header@@Base>
  423776:	jmp    4237ac <flatcc_verify_struct_as_root@@Base+0x8e>
  423778:	movzx  ebx,WORD PTR [rbp-0x34]
  42377c:	mov    rax,QWORD PTR [rbp-0x30]
  423780:	mov    r12d,eax
  423783:	mov    rax,QWORD PTR [rbp-0x18]
  423787:	mov    esi,0x0
  42378c:	mov    rdi,rax
  42378f:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  423794:	mov    edx,eax
  423796:	mov    rax,QWORD PTR [rbp-0x20]
  42379a:	mov    r8d,ebx
  42379d:	mov    ecx,r12d
  4237a0:	mov    esi,0x0
  4237a5:	mov    edi,eax
  4237a7:	call   42262b <flatcc_verify_error_string@@Base+0x350>
  4237ac:	add    rsp,0x30
  4237b0:	pop    rbx
  4237b1:	pop    r12
  4237b3:	pop    rbp
  4237b4:	ret    

00000000004237b5 <flatcc_verify_struct_as_typed_root@@Base>:
  4237b5:	endbr64 
  4237b9:	push   rbp
  4237ba:	mov    rbp,rsp
  4237bd:	push   r12
  4237bf:	push   rbx
  4237c0:	sub    rsp,0x20
  4237c4:	mov    QWORD PTR [rbp-0x18],rdi
  4237c8:	mov    QWORD PTR [rbp-0x20],rsi
  4237cc:	mov    DWORD PTR [rbp-0x24],edx
  4237cf:	mov    QWORD PTR [rbp-0x30],rcx
  4237d3:	mov    eax,r8d
  4237d6:	mov    WORD PTR [rbp-0x28],ax
  4237da:	mov    edx,DWORD PTR [rbp-0x24]
  4237dd:	mov    rcx,QWORD PTR [rbp-0x20]
  4237e1:	mov    rax,QWORD PTR [rbp-0x18]
  4237e5:	mov    rsi,rcx
  4237e8:	mov    rdi,rax
  4237eb:	call   423659 <flatcc_verify_typed_buffer_header@@Base>
  4237f0:	test   eax,eax
  4237f2:	je     42380c <flatcc_verify_struct_as_typed_root@@Base+0x57>
  4237f4:	mov    edx,DWORD PTR [rbp-0x24]
  4237f7:	mov    rcx,QWORD PTR [rbp-0x20]
  4237fb:	mov    rax,QWORD PTR [rbp-0x18]
  4237ff:	mov    rsi,rcx
  423802:	mov    rdi,rax
  423805:	call   423659 <flatcc_verify_typed_buffer_header@@Base>
  42380a:	jmp    423840 <flatcc_verify_struct_as_typed_root@@Base+0x8b>
  42380c:	movzx  ebx,WORD PTR [rbp-0x28]
  423810:	mov    rax,QWORD PTR [rbp-0x30]
  423814:	mov    r12d,eax
  423817:	mov    rax,QWORD PTR [rbp-0x18]
  42381b:	mov    esi,0x0
  423820:	mov    rdi,rax
  423823:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  423828:	mov    edx,eax
  42382a:	mov    rax,QWORD PTR [rbp-0x20]
  42382e:	mov    r8d,ebx
  423831:	mov    ecx,r12d
  423834:	mov    esi,0x0
  423839:	mov    edi,eax
  42383b:	call   42262b <flatcc_verify_error_string@@Base+0x350>
  423840:	add    rsp,0x20
  423844:	pop    rbx
  423845:	pop    r12
  423847:	pop    rbp
  423848:	ret    

0000000000423849 <flatcc_verify_table_as_root@@Base>:
  423849:	endbr64 
  42384d:	push   rbp
  42384e:	mov    rbp,rsp
  423851:	sub    rsp,0x20
  423855:	mov    QWORD PTR [rbp-0x8],rdi
  423859:	mov    QWORD PTR [rbp-0x10],rsi
  42385d:	mov    QWORD PTR [rbp-0x18],rdx
  423861:	mov    QWORD PTR [rbp-0x20],rcx
  423865:	mov    rax,QWORD PTR [rbp-0x10]
  423869:	mov    ecx,eax
  42386b:	mov    rdx,QWORD PTR [rbp-0x18]
  42386f:	mov    rax,QWORD PTR [rbp-0x8]
  423873:	mov    rsi,rcx
  423876:	mov    rdi,rax
  423879:	call   423589 <flatcc_verify_buffer_header@@Base>
  42387e:	test   eax,eax
  423880:	je     42389d <flatcc_verify_table_as_root@@Base+0x54>
  423882:	mov    rax,QWORD PTR [rbp-0x10]
  423886:	mov    ecx,eax
  423888:	mov    rdx,QWORD PTR [rbp-0x18]
  42388c:	mov    rax,QWORD PTR [rbp-0x8]
  423890:	mov    rsi,rcx
  423893:	mov    rdi,rax
  423896:	call   423589 <flatcc_verify_buffer_header@@Base>
  42389b:	jmp    4238d4 <flatcc_verify_table_as_root@@Base+0x8b>
  42389d:	mov    rax,QWORD PTR [rbp-0x8]
  4238a1:	mov    esi,0x0
  4238a6:	mov    rdi,rax
  4238a9:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  4238ae:	mov    ecx,eax
  4238b0:	mov    rax,QWORD PTR [rbp-0x10]
  4238b4:	mov    esi,eax
  4238b6:	mov    rdx,QWORD PTR [rbp-0x20]
  4238ba:	mov    rax,QWORD PTR [rbp-0x8]
  4238be:	mov    r9,rdx
  4238c1:	mov    r8d,0x64
  4238c7:	mov    edx,0x0
  4238cc:	mov    rdi,rax
  4238cf:	call   422b91 <flatcc_verify_error_string@@Base+0x8b6>
  4238d4:	leave  
  4238d5:	ret    

00000000004238d6 <flatcc_verify_table_as_typed_root@@Base>:
  4238d6:	endbr64 
  4238da:	push   rbp
  4238db:	mov    rbp,rsp
  4238de:	sub    rsp,0x20
  4238e2:	mov    QWORD PTR [rbp-0x8],rdi
  4238e6:	mov    QWORD PTR [rbp-0x10],rsi
  4238ea:	mov    DWORD PTR [rbp-0x14],edx
  4238ed:	mov    QWORD PTR [rbp-0x20],rcx
  4238f1:	mov    rax,QWORD PTR [rbp-0x10]
  4238f5:	mov    ecx,eax
  4238f7:	mov    edx,DWORD PTR [rbp-0x14]
  4238fa:	mov    rax,QWORD PTR [rbp-0x8]
  4238fe:	mov    rsi,rcx
  423901:	mov    rdi,rax
  423904:	call   423659 <flatcc_verify_typed_buffer_header@@Base>
  423909:	test   eax,eax
  42390b:	je     423927 <flatcc_verify_table_as_typed_root@@Base+0x51>
  42390d:	mov    rax,QWORD PTR [rbp-0x10]
  423911:	mov    ecx,eax
  423913:	mov    edx,DWORD PTR [rbp-0x14]
  423916:	mov    rax,QWORD PTR [rbp-0x8]
  42391a:	mov    rsi,rcx
  42391d:	mov    rdi,rax
  423920:	call   423659 <flatcc_verify_typed_buffer_header@@Base>
  423925:	jmp    42395e <flatcc_verify_table_as_typed_root@@Base+0x88>
  423927:	mov    rax,QWORD PTR [rbp-0x8]
  42392b:	mov    esi,0x0
  423930:	mov    rdi,rax
  423933:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  423938:	mov    ecx,eax
  42393a:	mov    rax,QWORD PTR [rbp-0x10]
  42393e:	mov    esi,eax
  423940:	mov    rdx,QWORD PTR [rbp-0x20]
  423944:	mov    rax,QWORD PTR [rbp-0x8]
  423948:	mov    r9,rdx
  42394b:	mov    r8d,0x64
  423951:	mov    edx,0x0
  423956:	mov    rdi,rax
  423959:	call   422b91 <flatcc_verify_error_string@@Base+0x8b6>
  42395e:	leave  
  42395f:	ret    

0000000000423960 <flatcc_verify_struct_as_nested_root@@Base>:
  423960:	endbr64 
  423964:	push   rbp
  423965:	mov    rbp,rsp
  423968:	sub    rsp,0x40
  42396c:	mov    QWORD PTR [rbp-0x18],rdi
  423970:	mov    eax,esi
  423972:	mov    DWORD PTR [rbp-0x20],edx
  423975:	mov    QWORD PTR [rbp-0x28],rcx
  423979:	mov    QWORD PTR [rbp-0x30],r8
  42397d:	mov    edx,r9d
  423980:	mov    WORD PTR [rbp-0x1c],ax
  423984:	mov    eax,edx
  423986:	mov    WORD PTR [rbp-0x34],ax
  42398a:	movzx  ecx,WORD PTR [rbp-0x34]
  42398e:	movzx  esi,WORD PTR [rbp-0x1c]
  423992:	mov    edx,DWORD PTR [rbp-0x20]
  423995:	mov    rax,QWORD PTR [rbp-0x18]
  423999:	mov    r9d,0xffffffff
  42399f:	mov    r8d,0x1
  4239a5:	mov    rdi,rax
  4239a8:	call   4231e6 <flatcc_verify_vector_field@@Base>
  4239ad:	test   eax,eax
  4239af:	je     4239d6 <flatcc_verify_struct_as_nested_root@@Base+0x76>
  4239b1:	movzx  ecx,WORD PTR [rbp-0x34]
  4239b5:	movzx  esi,WORD PTR [rbp-0x1c]
  4239b9:	mov    edx,DWORD PTR [rbp-0x20]
  4239bc:	mov    rax,QWORD PTR [rbp-0x18]
  4239c0:	mov    r9d,0xffffffff
  4239c6:	mov    r8d,0x1
  4239cc:	mov    rdi,rax
  4239cf:	call   4231e6 <flatcc_verify_vector_field@@Base>
  4239d4:	jmp    423a4f <flatcc_verify_struct_as_nested_root@@Base+0xef>
  4239d6:	movzx  edx,WORD PTR [rbp-0x1c]
  4239da:	mov    rax,QWORD PTR [rbp-0x18]
  4239de:	mov    esi,edx
  4239e0:	mov    rdi,rax
  4239e3:	call   42271d <flatcc_verify_error_string@@Base+0x442>
  4239e8:	mov    QWORD PTR [rbp-0x8],rax
  4239ec:	cmp    QWORD PTR [rbp-0x8],0x0
  4239f1:	jne    4239fa <flatcc_verify_struct_as_nested_root@@Base+0x9a>
  4239f3:	mov    eax,0x0
  4239f8:	jmp    423a4f <flatcc_verify_struct_as_nested_root@@Base+0xef>
  4239fa:	mov    rax,QWORD PTR [rbp-0x8]
  4239fe:	mov    esi,0x0
  423a03:	mov    rdi,rax
  423a06:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  423a0b:	mov    edx,eax
  423a0d:	mov    rax,QWORD PTR [rbp-0x8]
  423a11:	add    rax,rdx
  423a14:	mov    QWORD PTR [rbp-0x8],rax
  423a18:	mov    rax,QWORD PTR [rbp-0x8]
  423a1c:	mov    esi,0x0
  423a21:	mov    rdi,rax
  423a24:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  423a29:	mov    DWORD PTR [rbp-0xc],eax
  423a2c:	add    QWORD PTR [rbp-0x8],0x4
  423a31:	movzx  edi,WORD PTR [rbp-0x34]
  423a35:	mov    esi,DWORD PTR [rbp-0xc]
  423a38:	mov    rcx,QWORD PTR [rbp-0x30]
  423a3c:	mov    rdx,QWORD PTR [rbp-0x28]
  423a40:	mov    rax,QWORD PTR [rbp-0x8]
  423a44:	mov    r8d,edi
  423a47:	mov    rdi,rax
  423a4a:	call   42371e <flatcc_verify_struct_as_root@@Base>
  423a4f:	leave  
  423a50:	ret    

0000000000423a51 <flatcc_verify_table_as_nested_root@@Base>:
  423a51:	endbr64 
  423a55:	push   rbp
  423a56:	mov    rbp,rsp
  423a59:	push   rbx
  423a5a:	sub    rsp,0x48
  423a5e:	mov    QWORD PTR [rbp-0x28],rdi
  423a62:	mov    eax,esi
  423a64:	mov    DWORD PTR [rbp-0x30],edx
  423a67:	mov    QWORD PTR [rbp-0x38],rcx
  423a6b:	mov    edx,r8d
  423a6e:	mov    QWORD PTR [rbp-0x48],r9
  423a72:	mov    WORD PTR [rbp-0x2c],ax
  423a76:	mov    eax,edx
  423a78:	mov    WORD PTR [rbp-0x3c],ax
  423a7c:	movzx  ecx,WORD PTR [rbp-0x3c]
  423a80:	movzx  esi,WORD PTR [rbp-0x2c]
  423a84:	mov    edx,DWORD PTR [rbp-0x30]
  423a87:	mov    rax,QWORD PTR [rbp-0x28]
  423a8b:	mov    r9d,0xffffffff
  423a91:	mov    r8d,0x1
  423a97:	mov    rdi,rax
  423a9a:	call   4231e6 <flatcc_verify_vector_field@@Base>
  423a9f:	test   eax,eax
  423aa1:	je     423acb <flatcc_verify_table_as_nested_root@@Base+0x7a>
  423aa3:	movzx  ecx,WORD PTR [rbp-0x3c]
  423aa7:	movzx  esi,WORD PTR [rbp-0x2c]
  423aab:	mov    edx,DWORD PTR [rbp-0x30]
  423aae:	mov    rax,QWORD PTR [rbp-0x28]
  423ab2:	mov    r9d,0xffffffff
  423ab8:	mov    r8d,0x1
  423abe:	mov    rdi,rax
  423ac1:	call   4231e6 <flatcc_verify_vector_field@@Base>
  423ac6:	jmp    423b93 <flatcc_verify_table_as_nested_root@@Base+0x142>
  423acb:	movzx  edx,WORD PTR [rbp-0x2c]
  423acf:	mov    rax,QWORD PTR [rbp-0x28]
  423ad3:	mov    esi,edx
  423ad5:	mov    rdi,rax
  423ad8:	call   42271d <flatcc_verify_error_string@@Base+0x442>
  423add:	mov    QWORD PTR [rbp-0x18],rax
  423ae1:	cmp    QWORD PTR [rbp-0x18],0x0
  423ae6:	jne    423af2 <flatcc_verify_table_as_nested_root@@Base+0xa1>
  423ae8:	mov    eax,0x0
  423aed:	jmp    423b93 <flatcc_verify_table_as_nested_root@@Base+0x142>
  423af2:	mov    rax,QWORD PTR [rbp-0x18]
  423af6:	mov    esi,0x0
  423afb:	mov    rdi,rax
  423afe:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  423b03:	mov    edx,eax
  423b05:	mov    rax,QWORD PTR [rbp-0x18]
  423b09:	add    rax,rdx
  423b0c:	mov    QWORD PTR [rbp-0x18],rax
  423b10:	mov    rax,QWORD PTR [rbp-0x18]
  423b14:	mov    esi,0x0
  423b19:	mov    rdi,rax
  423b1c:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  423b21:	mov    DWORD PTR [rbp-0x1c],eax
  423b24:	add    QWORD PTR [rbp-0x18],0x4
  423b29:	mov    ecx,DWORD PTR [rbp-0x1c]
  423b2c:	mov    rdx,QWORD PTR [rbp-0x38]
  423b30:	mov    rax,QWORD PTR [rbp-0x18]
  423b34:	mov    rsi,rcx
  423b37:	mov    rdi,rax
  423b3a:	call   423589 <flatcc_verify_buffer_header@@Base>
  423b3f:	test   eax,eax
  423b41:	je     423b5b <flatcc_verify_table_as_nested_root@@Base+0x10a>
  423b43:	mov    ecx,DWORD PTR [rbp-0x1c]
  423b46:	mov    rdx,QWORD PTR [rbp-0x38]
  423b4a:	mov    rax,QWORD PTR [rbp-0x18]
  423b4e:	mov    rsi,rcx
  423b51:	mov    rdi,rax
  423b54:	call   423589 <flatcc_verify_buffer_header@@Base>
  423b59:	jmp    423b93 <flatcc_verify_table_as_nested_root@@Base+0x142>
  423b5b:	mov    rax,QWORD PTR [rbp-0x28]
  423b5f:	mov    ebx,DWORD PTR [rax+0xc]
  423b62:	mov    rax,QWORD PTR [rbp-0x18]
  423b66:	mov    esi,0x0
  423b6b:	mov    rdi,rax
  423b6e:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  423b73:	mov    ecx,eax
  423b75:	mov    rdx,QWORD PTR [rbp-0x48]
  423b79:	mov    esi,DWORD PTR [rbp-0x1c]
  423b7c:	mov    rax,QWORD PTR [rbp-0x18]
  423b80:	mov    r9,rdx
  423b83:	mov    r8d,ebx
  423b86:	mov    edx,0x0
  423b8b:	mov    rdi,rax
  423b8e:	call   422b91 <flatcc_verify_error_string@@Base+0x8b6>
  423b93:	add    rsp,0x48
  423b97:	pop    rbx
  423b98:	pop    rbp
  423b99:	ret    

0000000000423b9a <flatcc_verify_union_field@@Base>:
  423b9a:	endbr64 
  423b9e:	push   rbp
  423b9f:	mov    rbp,rsp
  423ba2:	sub    rsp,0x70
  423ba6:	mov    QWORD PTR [rbp-0x58],rdi
  423baa:	mov    eax,esi
  423bac:	mov    DWORD PTR [rbp-0x60],edx
  423baf:	mov    QWORD PTR [rbp-0x68],rcx
  423bb3:	mov    WORD PTR [rbp-0x5c],ax
  423bb7:	mov    rax,QWORD PTR fs:0x28
  423bc0:	mov    QWORD PTR [rbp-0x8],rax
  423bc4:	xor    eax,eax
  423bc6:	movzx  eax,WORD PTR [rbp-0x5c]
  423bca:	dec    eax
  423bcc:	movzx  edx,ax
  423bcf:	mov    rax,QWORD PTR [rbp-0x58]
  423bd3:	mov    esi,edx
  423bd5:	mov    rdi,rax
  423bd8:	call   4226cc <flatcc_verify_error_string@@Base+0x3f1>
  423bdd:	mov    WORD PTR [rbp-0x50],ax
  423be1:	cmp    WORD PTR [rbp-0x50],0x0
  423be6:	jne    423c43 <flatcc_verify_union_field@@Base+0xa9>
  423be8:	movzx  edx,WORD PTR [rbp-0x5c]
  423bec:	mov    rax,QWORD PTR [rbp-0x58]
  423bf0:	mov    esi,edx
  423bf2:	mov    rdi,rax
  423bf5:	call   4226cc <flatcc_verify_error_string@@Base+0x3f1>
  423bfa:	mov    WORD PTR [rbp-0x4e],ax
  423bfe:	cmp    WORD PTR [rbp-0x4e],0x0
  423c03:	sete   al
  423c06:	movzx  eax,al
  423c09:	mov    DWORD PTR [rbp-0x48],eax
  423c0c:	cmp    DWORD PTR [rbp-0x48],0x0
  423c10:	jne    423c1c <flatcc_verify_union_field@@Base+0x82>
  423c12:	mov    eax,0x17
  423c17:	jmp    423d8c <flatcc_verify_union_field@@Base+0x1f2>
  423c1c:	cmp    DWORD PTR [rbp-0x60],0x0
  423c20:	sete   al
  423c23:	movzx  eax,al
  423c26:	mov    DWORD PTR [rbp-0x44],eax
  423c29:	cmp    DWORD PTR [rbp-0x44],0x0
  423c2d:	jne    423c39 <flatcc_verify_union_field@@Base+0x9f>
  423c2f:	mov    eax,0x15
  423c34:	jmp    423d8c <flatcc_verify_union_field@@Base+0x1f2>
  423c39:	mov    eax,0x0
  423c3e:	jmp    423d8c <flatcc_verify_union_field@@Base+0x1f2>
  423c43:	movzx  eax,WORD PTR [rbp-0x5c]
  423c47:	dec    eax
  423c49:	movzx  esi,ax
  423c4c:	mov    rax,QWORD PTR [rbp-0x58]
  423c50:	mov    r8d,0x1
  423c56:	mov    ecx,0x1
  423c5b:	mov    edx,0x0
  423c60:	mov    rdi,rax
  423c63:	call   42276f <flatcc_verify_error_string@@Base+0x494>
  423c68:	test   eax,eax
  423c6a:	je     423c96 <flatcc_verify_union_field@@Base+0xfc>
  423c6c:	movzx  eax,WORD PTR [rbp-0x5c]
  423c70:	dec    eax
  423c72:	movzx  esi,ax
  423c75:	mov    rax,QWORD PTR [rbp-0x58]
  423c79:	mov    r8d,0x1
  423c7f:	mov    ecx,0x1
  423c84:	mov    edx,0x0
  423c89:	mov    rdi,rax
  423c8c:	call   42276f <flatcc_verify_error_string@@Base+0x494>
  423c91:	jmp    423d8c <flatcc_verify_union_field@@Base+0x1f2>
  423c96:	movzx  edx,WORD PTR [rbp-0x5c]
  423c9a:	mov    rax,QWORD PTR [rbp-0x58]
  423c9e:	mov    esi,edx
  423ca0:	mov    rdi,rax
  423ca3:	call   4226cc <flatcc_verify_error_string@@Base+0x3f1>
  423ca8:	mov    WORD PTR [rbp-0x4e],ax
  423cac:	mov    rax,QWORD PTR [rbp-0x58]
  423cb0:	mov    rdx,QWORD PTR [rax]
  423cb3:	mov    rax,QWORD PTR [rbp-0x58]
  423cb7:	mov    eax,DWORD PTR [rax+0x18]
  423cba:	mov    ecx,eax
  423cbc:	movzx  eax,WORD PTR [rbp-0x50]
  423cc0:	add    rax,rcx
  423cc3:	add    rax,rdx
  423cc6:	mov    QWORD PTR [rbp-0x38],rax
  423cca:	mov    rax,QWORD PTR [rbp-0x38]
  423cce:	movzx  eax,BYTE PTR [rax]
  423cd1:	test   al,al
  423cd3:	jne    423cdc <flatcc_verify_union_field@@Base+0x142>
  423cd5:	cmp    WORD PTR [rbp-0x4e],0x0
  423cda:	jne    423ce3 <flatcc_verify_union_field@@Base+0x149>
  423cdc:	mov    eax,0x1
  423ce1:	jmp    423ce8 <flatcc_verify_union_field@@Base+0x14e>
  423ce3:	mov    eax,0x0
  423ce8:	mov    DWORD PTR [rbp-0x40],eax
  423ceb:	cmp    DWORD PTR [rbp-0x40],0x0
  423cef:	jne    423cfb <flatcc_verify_union_field@@Base+0x161>
  423cf1:	mov    eax,0x18
  423cf6:	jmp    423d8c <flatcc_verify_union_field@@Base+0x1f2>
  423cfb:	mov    rax,QWORD PTR [rbp-0x38]
  423cff:	movzx  eax,BYTE PTR [rax]
  423d02:	test   al,al
  423d04:	jne    423d0d <flatcc_verify_union_field@@Base+0x173>
  423d06:	mov    eax,0x0
  423d0b:	jmp    423d8c <flatcc_verify_union_field@@Base+0x1f2>
  423d0d:	movzx  esi,WORD PTR [rbp-0x5c]
  423d11:	lea    rcx,[rbp-0x4c]
  423d15:	mov    edx,DWORD PTR [rbp-0x60]
  423d18:	mov    rax,QWORD PTR [rbp-0x58]
  423d1c:	mov    rdi,rax
  423d1f:	call   422860 <flatcc_verify_error_string@@Base+0x585>
  423d24:	mov    DWORD PTR [rbp-0x3c],eax
  423d27:	cmp    DWORD PTR [rbp-0x3c],0x0
  423d2b:	jne    423d34 <flatcc_verify_union_field@@Base+0x19a>
  423d2d:	mov    eax,DWORD PTR [rbp-0x4c]
  423d30:	test   eax,eax
  423d32:	jne    423d39 <flatcc_verify_union_field@@Base+0x19f>
  423d34:	mov    eax,DWORD PTR [rbp-0x3c]
  423d37:	jmp    423d8c <flatcc_verify_union_field@@Base+0x1f2>
  423d39:	mov    rax,QWORD PTR [rbp-0x58]
  423d3d:	mov    rax,QWORD PTR [rax]
  423d40:	mov    QWORD PTR [rbp-0x30],rax
  423d44:	mov    rax,QWORD PTR [rbp-0x58]
  423d48:	mov    eax,DWORD PTR [rax+0x8]
  423d4b:	mov    DWORD PTR [rbp-0x28],eax
  423d4e:	mov    rax,QWORD PTR [rbp-0x58]
  423d52:	mov    eax,DWORD PTR [rax+0xc]
  423d55:	mov    DWORD PTR [rbp-0x24],eax
  423d58:	mov    eax,DWORD PTR [rbp-0x4c]
  423d5b:	mov    DWORD PTR [rbp-0x1c],eax
  423d5e:	mov    edx,DWORD PTR [rbp-0x4c]
  423d61:	mov    rax,QWORD PTR [rbp-0x58]
  423d65:	mov    rax,QWORD PTR [rax]
  423d68:	mov    esi,edx
  423d6a:	mov    rdi,rax
  423d6d:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  423d72:	mov    DWORD PTR [rbp-0x18],eax
  423d75:	mov    rax,QWORD PTR [rbp-0x38]
  423d79:	movzx  eax,BYTE PTR [rax]
  423d7c:	mov    BYTE PTR [rbp-0x20],al
  423d7f:	lea    rdx,[rbp-0x30]
  423d83:	mov    rax,QWORD PTR [rbp-0x68]
  423d87:	mov    rdi,rdx
  423d8a:	call   rax
  423d8c:	mov    rcx,QWORD PTR [rbp-0x8]
  423d90:	xor    rcx,QWORD PTR fs:0x28
  423d99:	je     423da0 <flatcc_verify_union_field@@Base+0x206>
  423d9b:	call   4061a0 <__stack_chk_fail@plt>
  423da0:	leave  
  423da1:	ret    

0000000000423da2 <flatcc_verify_union_vector_field@@Base>:
  423da2:	endbr64 
  423da6:	push   rbp
  423da7:	mov    rbp,rsp
  423daa:	push   rbx
  423dab:	sub    rsp,0x58
  423daf:	mov    QWORD PTR [rbp-0x48],rdi
  423db3:	mov    eax,esi
  423db5:	mov    DWORD PTR [rbp-0x50],edx
  423db8:	mov    QWORD PTR [rbp-0x58],rcx
  423dbc:	mov    WORD PTR [rbp-0x4c],ax
  423dc0:	mov    rax,QWORD PTR fs:0x28
  423dc9:	mov    QWORD PTR [rbp-0x18],rax
  423dcd:	xor    eax,eax
  423dcf:	movzx  eax,WORD PTR [rbp-0x4c]
  423dd3:	dec    eax
  423dd5:	movzx  edx,ax
  423dd8:	mov    rax,QWORD PTR [rbp-0x48]
  423ddc:	mov    esi,edx
  423dde:	mov    rdi,rax
  423de1:	call   4226cc <flatcc_verify_error_string@@Base+0x3f1>
  423de6:	mov    WORD PTR [rbp-0x3c],ax
  423dea:	cmp    WORD PTR [rbp-0x3c],0x0
  423def:	jne    423e2b <flatcc_verify_union_vector_field@@Base+0x89>
  423df1:	movzx  edx,WORD PTR [rbp-0x4c]
  423df5:	mov    rax,QWORD PTR [rbp-0x48]
  423df9:	mov    esi,edx
  423dfb:	mov    rdi,rax
  423dfe:	call   4226cc <flatcc_verify_error_string@@Base+0x3f1>
  423e03:	mov    WORD PTR [rbp-0x3a],ax
  423e07:	cmp    WORD PTR [rbp-0x3a],0x0
  423e0c:	jne    423e2b <flatcc_verify_union_vector_field@@Base+0x89>
  423e0e:	cmp    DWORD PTR [rbp-0x50],0x0
  423e12:	sete   al
  423e15:	movzx  eax,al
  423e18:	mov    DWORD PTR [rbp-0x34],eax
  423e1b:	cmp    DWORD PTR [rbp-0x34],0x0
  423e1f:	jne    423e2b <flatcc_verify_union_vector_field@@Base+0x89>
  423e21:	mov    eax,0x16
  423e26:	jmp    423f6c <flatcc_verify_union_vector_field@@Base+0x1ca>
  423e2b:	movzx  eax,WORD PTR [rbp-0x4c]
  423e2f:	dec    eax
  423e31:	movzx  esi,ax
  423e34:	mov    edx,DWORD PTR [rbp-0x50]
  423e37:	mov    rax,QWORD PTR [rbp-0x48]
  423e3b:	mov    r9d,0xffffffff
  423e41:	mov    r8d,0x1
  423e47:	mov    ecx,0x1
  423e4c:	mov    rdi,rax
  423e4f:	call   4231e6 <flatcc_verify_vector_field@@Base>
  423e54:	test   eax,eax
  423e56:	je     423e86 <flatcc_verify_union_vector_field@@Base+0xe4>
  423e58:	movzx  eax,WORD PTR [rbp-0x4c]
  423e5c:	dec    eax
  423e5e:	movzx  esi,ax
  423e61:	mov    edx,DWORD PTR [rbp-0x50]
  423e64:	mov    rax,QWORD PTR [rbp-0x48]
  423e68:	mov    r9d,0xffffffff
  423e6e:	mov    r8d,0x1
  423e74:	mov    ecx,0x1
  423e79:	mov    rdi,rax
  423e7c:	call   4231e6 <flatcc_verify_vector_field@@Base>
  423e81:	jmp    423f6c <flatcc_verify_union_vector_field@@Base+0x1ca>
  423e86:	movzx  eax,WORD PTR [rbp-0x4c]
  423e8a:	dec    eax
  423e8c:	movzx  edx,ax
  423e8f:	mov    rax,QWORD PTR [rbp-0x48]
  423e93:	mov    esi,edx
  423e95:	mov    rdi,rax
  423e98:	call   42271d <flatcc_verify_error_string@@Base+0x442>
  423e9d:	mov    QWORD PTR [rbp-0x28],rax
  423ea1:	cmp    QWORD PTR [rbp-0x28],0x0
  423ea6:	jne    423eb2 <flatcc_verify_union_vector_field@@Base+0x110>
  423ea8:	mov    eax,0x0
  423ead:	jmp    423f6c <flatcc_verify_union_vector_field@@Base+0x1ca>
  423eb2:	mov    rax,QWORD PTR [rbp-0x28]
  423eb6:	mov    esi,0x0
  423ebb:	mov    rdi,rax
  423ebe:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  423ec3:	mov    edx,eax
  423ec5:	mov    rax,QWORD PTR [rbp-0x28]
  423ec9:	add    rax,rdx
  423ecc:	mov    QWORD PTR [rbp-0x28],rax
  423ed0:	mov    rax,QWORD PTR [rbp-0x28]
  423ed4:	mov    esi,0x0
  423ed9:	mov    rdi,rax
  423edc:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  423ee1:	mov    DWORD PTR [rbp-0x30],eax
  423ee4:	add    QWORD PTR [rbp-0x28],0x4
  423ee9:	mov    rax,QWORD PTR [rbp-0x28]
  423eed:	mov    QWORD PTR [rbp-0x20],rax
  423ef1:	movzx  esi,WORD PTR [rbp-0x4c]
  423ef5:	lea    rcx,[rbp-0x38]
  423ef9:	mov    edx,DWORD PTR [rbp-0x50]
  423efc:	mov    rax,QWORD PTR [rbp-0x48]
  423f00:	mov    rdi,rax
  423f03:	call   422860 <flatcc_verify_error_string@@Base+0x585>
  423f08:	mov    DWORD PTR [rbp-0x2c],eax
  423f0b:	cmp    DWORD PTR [rbp-0x2c],0x0
  423f0f:	jne    423f18 <flatcc_verify_union_vector_field@@Base+0x176>
  423f11:	mov    eax,DWORD PTR [rbp-0x38]
  423f14:	test   eax,eax
  423f16:	jne    423f1d <flatcc_verify_union_vector_field@@Base+0x17b>
  423f18:	mov    eax,DWORD PTR [rbp-0x2c]
  423f1b:	jmp    423f6c <flatcc_verify_union_vector_field@@Base+0x1ca>
  423f1d:	mov    rax,QWORD PTR [rbp-0x48]
  423f21:	mov    ebx,DWORD PTR [rax+0xc]
  423f24:	mov    edx,DWORD PTR [rbp-0x38]
  423f27:	mov    rax,QWORD PTR [rbp-0x48]
  423f2b:	mov    rax,QWORD PTR [rax]
  423f2e:	mov    esi,edx
  423f30:	mov    rdi,rax
  423f33:	call   4224b0 <flatcc_verify_error_string@@Base+0x1d5>
  423f38:	mov    r10d,eax
  423f3b:	mov    edx,DWORD PTR [rbp-0x38]
  423f3e:	mov    rax,QWORD PTR [rbp-0x48]
  423f42:	mov    esi,DWORD PTR [rax+0x8]
  423f45:	mov    rax,QWORD PTR [rbp-0x48]
  423f49:	mov    rax,QWORD PTR [rax]
  423f4c:	mov    rdi,QWORD PTR [rbp-0x20]
  423f50:	mov    ecx,DWORD PTR [rbp-0x30]
  423f53:	push   QWORD PTR [rbp-0x58]
  423f56:	push   rbx
  423f57:	mov    r9,rdi
  423f5a:	mov    r8d,ecx
  423f5d:	mov    ecx,r10d
  423f60:	mov    rdi,rax
  423f63:	call   422efc <flatcc_verify_error_string@@Base+0xc21>
  423f68:	add    rsp,0x10
  423f6c:	mov    rbx,QWORD PTR [rbp-0x18]
  423f70:	xor    rbx,QWORD PTR fs:0x28
  423f79:	je     423f80 <flatcc_verify_union_vector_field@@Base+0x1de>
  423f7b:	call   4061a0 <__stack_chk_fail@plt>
  423f80:	mov    rbx,QWORD PTR [rbp-0x8]
  423f84:	leave  
  423f85:	ret    
  423f86:	push   rbp
  423f87:	mov    rbp,rsp
  423f8a:	mov    eax,edi
  423f8c:	mov    BYTE PTR [rbp-0x4],al
  423f8f:	movzx  eax,BYTE PTR [rbp-0x4]
  423f93:	pop    rbp
  423f94:	ret    
  423f95:	push   rbp
  423f96:	mov    rbp,rsp
  423f99:	sub    rsp,0x10
  423f9d:	mov    QWORD PTR [rbp-0x8],rdi
  423fa1:	mov    eax,esi
  423fa3:	mov    BYTE PTR [rbp-0xc],al
  423fa6:	movzx  eax,BYTE PTR [rbp-0xc]
  423faa:	mov    edi,eax
  423fac:	call   423f86 <flatcc_verify_union_vector_field@@Base+0x1e4>
  423fb1:	mov    rdx,QWORD PTR [rbp-0x8]
  423fb5:	mov    BYTE PTR [rdx],al
  423fb7:	nop
  423fb8:	leave  
  423fb9:	ret    
  423fba:	push   rbp
  423fbb:	mov    rbp,rsp
  423fbe:	sub    rsp,0x30
  423fc2:	mov    QWORD PTR [rbp-0x8],rdi
  423fc6:	mov    QWORD PTR [rbp-0x10],rsi
  423fca:	mov    QWORD PTR [rbp-0x18],rdx
  423fce:	mov    QWORD PTR [rbp-0x20],rcx
  423fd2:	mov    DWORD PTR [rbp-0x24],r8d
  423fd6:	mov    rax,QWORD PTR [rbp-0x8]
  423fda:	mov    edx,0x48
  423fdf:	mov    esi,0x0
  423fe4:	mov    rdi,rax
  423fe7:	call   4061c0 <memset@plt>
  423fec:	mov    rax,QWORD PTR [rbp-0x8]
  423ff0:	mov    rdx,QWORD PTR [rbp-0x10]
  423ff4:	mov    QWORD PTR [rax],rdx
  423ff7:	mov    rax,QWORD PTR [rbp-0x8]
  423ffb:	mov    rdx,QWORD PTR [rbp-0x18]
  423fff:	mov    QWORD PTR [rax+0x8],rdx
  424003:	mov    rax,QWORD PTR [rbp-0x8]
  424007:	mov    DWORD PTR [rax+0x18],0x1
  42400e:	mov    rax,QWORD PTR [rbp-0x8]
  424012:	mov    edx,DWORD PTR [rbp-0x24]
  424015:	mov    DWORD PTR [rax+0x10],edx
  424018:	mov    rax,QWORD PTR [rbp-0x8]
  42401c:	mov    rdx,QWORD PTR [rbp-0x18]
  424020:	mov    QWORD PTR [rax+0x28],rdx
  424024:	mov    rax,QWORD PTR [rbp-0x8]
  424028:	mov    rdx,QWORD PTR [rbp-0x20]
  42402c:	mov    QWORD PTR [rax+0x30],rdx
  424030:	mov    rax,QWORD PTR [rbp-0x8]
  424034:	mov    rdx,QWORD PTR [rbp-0x18]
  424038:	mov    QWORD PTR [rax+0x38],rdx
  42403c:	nop
  42403d:	leave  
  42403e:	ret    
  42403f:	push   rbp
  424040:	mov    rbp,rsp
  424043:	sub    rsp,0x20
  424047:	mov    QWORD PTR [rbp-0x8],rdi
  42404b:	mov    QWORD PTR [rbp-0x10],rsi
  42404f:	mov    QWORD PTR [rbp-0x18],rdx
  424053:	mov    rax,QWORD PTR [rbp-0x18]
  424057:	sub    rax,QWORD PTR [rbp-0x10]
  42405b:	cmp    rax,0x1
  42405f:	jle    424094 <flatcc_verify_union_vector_field@@Base+0x2f2>
  424061:	mov    rax,QWORD PTR [rbp-0x10]
  424065:	movzx  eax,BYTE PTR [rax]
  424068:	cmp    al,0x20
  42406a:	jle    424072 <flatcc_verify_union_vector_field@@Base+0x2d0>
  42406c:	mov    rax,QWORD PTR [rbp-0x10]
  424070:	jmp    4240ab <flatcc_verify_union_vector_field@@Base+0x309>
  424072:	mov    rax,QWORD PTR [rbp-0x10]
  424076:	movzx  eax,BYTE PTR [rax]
  424079:	cmp    al,0x20
  42407b:	jne    424094 <flatcc_verify_union_vector_field@@Base+0x2f2>
  42407d:	mov    rax,QWORD PTR [rbp-0x10]
  424081:	inc    rax
  424084:	movzx  eax,BYTE PTR [rax]
  424087:	cmp    al,0x20
  424089:	jle    424094 <flatcc_verify_union_vector_field@@Base+0x2f2>
  42408b:	mov    rax,QWORD PTR [rbp-0x10]
  42408f:	inc    rax
  424092:	jmp    4240ab <flatcc_verify_union_vector_field@@Base+0x309>
  424094:	mov    rdx,QWORD PTR [rbp-0x18]
  424098:	mov    rcx,QWORD PTR [rbp-0x10]
  42409c:	mov    rax,QWORD PTR [rbp-0x8]
  4240a0:	mov    rsi,rcx
  4240a3:	mov    rdi,rax
  4240a6:	call   427df9 <flatcc_json_parser_space_ext@@Base>
  4240ab:	leave  
  4240ac:	ret    
  4240ad:	push   rbp
  4240ae:	mov    rbp,rsp
  4240b1:	sub    rsp,0x20
  4240b5:	mov    QWORD PTR [rbp-0x8],rdi
  4240b9:	mov    QWORD PTR [rbp-0x10],rsi
  4240bd:	mov    QWORD PTR [rbp-0x18],rdx
  4240c1:	mov    rax,QWORD PTR [rbp-0x10]
  4240c5:	cmp    rax,QWORD PTR [rbp-0x18]
  4240c9:	je     4240d6 <flatcc_verify_union_vector_field@@Base+0x334>
  4240cb:	mov    rax,QWORD PTR [rbp-0x10]
  4240cf:	movzx  eax,BYTE PTR [rax]
  4240d2:	cmp    al,0x22
  4240d4:	je     4240f1 <flatcc_verify_union_vector_field@@Base+0x34f>
  4240d6:	mov    rdx,QWORD PTR [rbp-0x18]
  4240da:	mov    rsi,QWORD PTR [rbp-0x10]
  4240de:	mov    rax,QWORD PTR [rbp-0x8]
  4240e2:	mov    ecx,0x10
  4240e7:	mov    rdi,rax
  4240ea:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4240ef:	jmp    4240f9 <flatcc_verify_union_vector_field@@Base+0x357>
  4240f1:	inc    QWORD PTR [rbp-0x10]
  4240f5:	mov    rax,QWORD PTR [rbp-0x10]
  4240f9:	leave  
  4240fa:	ret    
  4240fb:	push   rbp
  4240fc:	mov    rbp,rsp
  4240ff:	sub    rsp,0x20
  424103:	mov    QWORD PTR [rbp-0x8],rdi
  424107:	mov    QWORD PTR [rbp-0x10],rsi
  42410b:	mov    QWORD PTR [rbp-0x18],rdx
  42410f:	mov    rax,QWORD PTR [rbp-0x10]
  424113:	cmp    rax,QWORD PTR [rbp-0x18]
  424117:	je     424124 <flatcc_verify_union_vector_field@@Base+0x382>
  424119:	mov    rax,QWORD PTR [rbp-0x10]
  42411d:	movzx  eax,BYTE PTR [rax]
  424120:	cmp    al,0x22
  424122:	je     42413f <flatcc_verify_union_vector_field@@Base+0x39d>
  424124:	mov    rdx,QWORD PTR [rbp-0x18]
  424128:	mov    rsi,QWORD PTR [rbp-0x10]
  42412c:	mov    rax,QWORD PTR [rbp-0x8]
  424130:	mov    ecx,0x14
  424135:	mov    rdi,rax
  424138:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  42413d:	jmp    424147 <flatcc_verify_union_vector_field@@Base+0x3a5>
  42413f:	inc    QWORD PTR [rbp-0x10]
  424143:	mov    rax,QWORD PTR [rbp-0x10]
  424147:	leave  
  424148:	ret    
  424149:	push   rbp
  42414a:	mov    rbp,rsp
  42414d:	sub    rsp,0x20
  424151:	mov    QWORD PTR [rbp-0x8],rdi
  424155:	mov    QWORD PTR [rbp-0x10],rsi
  424159:	mov    QWORD PTR [rbp-0x18],rdx
  42415d:	mov    rax,QWORD PTR [rbp-0x10]
  424161:	cmp    rax,QWORD PTR [rbp-0x18]
  424165:	jne    42416d <flatcc_verify_union_vector_field@@Base+0x3cb>
  424167:	mov    rax,QWORD PTR [rbp-0x10]
  42416b:	jmp    4241be <flatcc_verify_union_vector_field@@Base+0x41c>
  42416d:	mov    rax,QWORD PTR [rbp-0x10]
  424171:	movzx  eax,BYTE PTR [rax]
  424174:	cmp    al,0x22
  424176:	jne    424189 <flatcc_verify_union_vector_field@@Base+0x3e7>
  424178:	inc    QWORD PTR [rbp-0x10]
  42417c:	mov    rax,QWORD PTR [rbp-0x8]
  424180:	mov    DWORD PTR [rax+0x14],0x0
  424187:	jmp    4241ba <flatcc_verify_union_vector_field@@Base+0x418>
  424189:	mov    rax,QWORD PTR [rbp-0x10]
  42418d:	movzx  eax,BYTE PTR [rax]
  424190:	cmp    al,0x2e
  424192:	jne    4241af <flatcc_verify_union_vector_field@@Base+0x40d>
  424194:	mov    rdx,QWORD PTR [rbp-0x18]
  424198:	mov    rsi,QWORD PTR [rbp-0x10]
  42419c:	mov    rax,QWORD PTR [rbp-0x8]
  4241a0:	mov    ecx,0x5
  4241a5:	mov    rdi,rax
  4241a8:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4241ad:	jmp    4241be <flatcc_verify_union_vector_field@@Base+0x41c>
  4241af:	mov    rax,QWORD PTR [rbp-0x8]
  4241b3:	mov    DWORD PTR [rax+0x14],0x1
  4241ba:	mov    rax,QWORD PTR [rbp-0x10]
  4241be:	leave  
  4241bf:	ret    
  4241c0:	push   rbp
  4241c1:	mov    rbp,rsp
  4241c4:	sub    rsp,0x30
  4241c8:	mov    QWORD PTR [rbp-0x18],rdi
  4241cc:	mov    QWORD PTR [rbp-0x20],rsi
  4241d0:	mov    QWORD PTR [rbp-0x28],rdx
  4241d4:	mov    BYTE PTR [rbp-0x2],0x0
  4241d8:	mov    rax,QWORD PTR [rbp-0x18]
  4241dc:	mov    eax,DWORD PTR [rax+0x14]
  4241df:	test   eax,eax
  4241e1:	je     424291 <flatcc_verify_union_vector_field@@Base+0x4ef>
  4241e7:	jmp    424233 <flatcc_verify_union_vector_field@@Base+0x491>
  4241e9:	mov    rax,QWORD PTR [rbp-0x20]
  4241ed:	movzx  eax,BYTE PTR [rax]
  4241f0:	mov    BYTE PTR [rbp-0x1],al
  4241f3:	movzx  eax,BYTE PTR [rbp-0x1]
  4241f7:	mov    BYTE PTR [rbp-0x2],al
  4241fa:	cmp    BYTE PTR [rbp-0x1],0x5f
  4241fe:	je     424218 <flatcc_verify_union_vector_field@@Base+0x476>
  424200:	cmp    BYTE PTR [rbp-0x1],0x2e
  424204:	je     424218 <flatcc_verify_union_vector_field@@Base+0x476>
  424206:	cmp    BYTE PTR [rbp-0x1],0x0
  42420a:	js     424218 <flatcc_verify_union_vector_field@@Base+0x476>
  42420c:	cmp    BYTE PTR [rbp-0x1],0x2f
  424210:	jle    42421e <flatcc_verify_union_vector_field@@Base+0x47c>
  424212:	cmp    BYTE PTR [rbp-0x1],0x39
  424216:	jg     42421e <flatcc_verify_union_vector_field@@Base+0x47c>
  424218:	inc    QWORD PTR [rbp-0x20]
  42421c:	jmp    424233 <flatcc_verify_union_vector_field@@Base+0x491>
  42421e:	or     BYTE PTR [rbp-0x1],0x20
  424222:	cmp    BYTE PTR [rbp-0x1],0x60
  424226:	jle    42424a <flatcc_verify_union_vector_field@@Base+0x4a8>
  424228:	cmp    BYTE PTR [rbp-0x1],0x7a
  42422c:	jg     42424a <flatcc_verify_union_vector_field@@Base+0x4a8>
  42422e:	inc    QWORD PTR [rbp-0x20]
  424232:	nop
  424233:	mov    rax,QWORD PTR [rbp-0x20]
  424237:	cmp    rax,QWORD PTR [rbp-0x28]
  42423b:	je     42424b <flatcc_verify_union_vector_field@@Base+0x4a9>
  42423d:	mov    rax,QWORD PTR [rbp-0x20]
  424241:	movzx  eax,BYTE PTR [rax]
  424244:	cmp    al,0x20
  424246:	jg     4241e9 <flatcc_verify_union_vector_field@@Base+0x447>
  424248:	jmp    42424b <flatcc_verify_union_vector_field@@Base+0x4a9>
  42424a:	nop
  42424b:	cmp    BYTE PTR [rbp-0x2],0x2e
  42424f:	jne    4242dd <flatcc_verify_union_vector_field@@Base+0x53b>
  424255:	mov    rdx,QWORD PTR [rbp-0x28]
  424259:	mov    rsi,QWORD PTR [rbp-0x20]
  42425d:	mov    rax,QWORD PTR [rbp-0x18]
  424261:	mov    ecx,0x5
  424266:	mov    rdi,rax
  424269:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  42426e:	jmp    4242e1 <flatcc_verify_union_vector_field@@Base+0x53f>
  424270:	mov    rax,QWORD PTR [rbp-0x20]
  424274:	movzx  eax,BYTE PTR [rax]
  424277:	cmp    al,0x5c
  424279:	jne    42428d <flatcc_verify_union_vector_field@@Base+0x4eb>
  42427b:	mov    rax,QWORD PTR [rbp-0x28]
  42427f:	sub    rax,QWORD PTR [rbp-0x20]
  424283:	cmp    rax,0x1
  424287:	jle    4242a8 <flatcc_verify_union_vector_field@@Base+0x506>
  424289:	inc    QWORD PTR [rbp-0x20]
  42428d:	inc    QWORD PTR [rbp-0x20]
  424291:	mov    rax,QWORD PTR [rbp-0x20]
  424295:	cmp    rax,QWORD PTR [rbp-0x28]
  424299:	je     4242a9 <flatcc_verify_union_vector_field@@Base+0x507>
  42429b:	mov    rax,QWORD PTR [rbp-0x20]
  42429f:	movzx  eax,BYTE PTR [rax]
  4242a2:	cmp    al,0x22
  4242a4:	jne    424270 <flatcc_verify_union_vector_field@@Base+0x4ce>
  4242a6:	jmp    4242a9 <flatcc_verify_union_vector_field@@Base+0x507>
  4242a8:	nop
  4242a9:	mov    rax,QWORD PTR [rbp-0x20]
  4242ad:	cmp    rax,QWORD PTR [rbp-0x28]
  4242b1:	je     4242be <flatcc_verify_union_vector_field@@Base+0x51c>
  4242b3:	mov    rax,QWORD PTR [rbp-0x20]
  4242b7:	movzx  eax,BYTE PTR [rax]
  4242ba:	cmp    al,0x22
  4242bc:	je     4242d9 <flatcc_verify_union_vector_field@@Base+0x537>
  4242be:	mov    rdx,QWORD PTR [rbp-0x28]
  4242c2:	mov    rsi,QWORD PTR [rbp-0x20]
  4242c6:	mov    rax,QWORD PTR [rbp-0x18]
  4242ca:	mov    ecx,0x14
  4242cf:	mov    rdi,rax
  4242d2:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4242d7:	jmp    4242e1 <flatcc_verify_union_vector_field@@Base+0x53f>
  4242d9:	inc    QWORD PTR [rbp-0x20]
  4242dd:	mov    rax,QWORD PTR [rbp-0x20]
  4242e1:	leave  
  4242e2:	ret    
  4242e3:	push   rbp
  4242e4:	mov    rbp,rsp
  4242e7:	sub    rsp,0x20
  4242eb:	mov    QWORD PTR [rbp-0x8],rdi
  4242ef:	mov    QWORD PTR [rbp-0x10],rsi
  4242f3:	mov    QWORD PTR [rbp-0x18],rdx
  4242f7:	mov    rdx,QWORD PTR [rbp-0x18]
  4242fb:	mov    rcx,QWORD PTR [rbp-0x10]
  4242ff:	mov    rax,QWORD PTR [rbp-0x8]
  424303:	mov    rsi,rcx
  424306:	mov    rdi,rax
  424309:	call   424149 <flatcc_verify_union_vector_field@@Base+0x3a7>
  42430e:	mov    QWORD PTR [rbp-0x10],rax
  424312:	mov    rax,QWORD PTR [rbp-0x8]
  424316:	mov    eax,DWORD PTR [rax+0x14]
  424319:	test   eax,eax
  42431b:	jne    424338 <flatcc_verify_union_vector_field@@Base+0x596>
  42431d:	mov    rdx,QWORD PTR [rbp-0x18]
  424321:	mov    rcx,QWORD PTR [rbp-0x10]
  424325:	mov    rax,QWORD PTR [rbp-0x8]
  424329:	mov    rsi,rcx
  42432c:	mov    rdi,rax
  42432f:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  424334:	mov    QWORD PTR [rbp-0x10],rax
  424338:	mov    rax,QWORD PTR [rbp-0x10]
  42433c:	leave  
  42433d:	ret    
  42433e:	push   rbp
  42433f:	mov    rbp,rsp
  424342:	sub    rsp,0x20
  424346:	mov    QWORD PTR [rbp-0x8],rdi
  42434a:	mov    QWORD PTR [rbp-0x10],rsi
  42434e:	mov    QWORD PTR [rbp-0x18],rdx
  424352:	mov    QWORD PTR [rbp-0x20],rcx
  424356:	mov    rdx,QWORD PTR [rbp-0x18]
  42435a:	mov    rcx,QWORD PTR [rbp-0x10]
  42435e:	mov    rax,QWORD PTR [rbp-0x8]
  424362:	mov    rsi,rcx
  424365:	mov    rdi,rax
  424368:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  42436d:	mov    QWORD PTR [rbp-0x10],rax
  424371:	mov    rax,QWORD PTR [rbp-0x10]
  424375:	cmp    rax,QWORD PTR [rbp-0x18]
  424379:	jne    42438e <flatcc_verify_union_vector_field@@Base+0x5ec>
  42437b:	mov    rax,QWORD PTR [rbp-0x20]
  42437f:	mov    DWORD PTR [rax],0x0
  424385:	mov    rax,QWORD PTR [rbp-0x10]
  424389:	jmp    42447a <flatcc_verify_union_vector_field@@Base+0x6d8>
  42438e:	mov    rax,QWORD PTR [rbp-0x10]
  424392:	movzx  eax,BYTE PTR [rax]
  424395:	cmp    al,0x2c
  424397:	je     4243ec <flatcc_verify_union_vector_field@@Base+0x64a>
  424399:	mov    rax,QWORD PTR [rbp-0x20]
  42439d:	mov    DWORD PTR [rax],0x0
  4243a3:	mov    rax,QWORD PTR [rbp-0x10]
  4243a7:	movzx  eax,BYTE PTR [rax]
  4243aa:	cmp    al,0x7d
  4243ac:	je     4243cc <flatcc_verify_union_vector_field@@Base+0x62a>
  4243ae:	mov    rdx,QWORD PTR [rbp-0x18]
  4243b2:	mov    rsi,QWORD PTR [rbp-0x10]
  4243b6:	mov    rax,QWORD PTR [rbp-0x8]
  4243ba:	mov    ecx,0xa
  4243bf:	mov    rdi,rax
  4243c2:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4243c7:	jmp    42447a <flatcc_verify_union_vector_field@@Base+0x6d8>
  4243cc:	mov    rax,QWORD PTR [rbp-0x10]
  4243d0:	lea    rcx,[rax+0x1]
  4243d4:	mov    rdx,QWORD PTR [rbp-0x18]
  4243d8:	mov    rax,QWORD PTR [rbp-0x8]
  4243dc:	mov    rsi,rcx
  4243df:	mov    rdi,rax
  4243e2:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  4243e7:	jmp    42447a <flatcc_verify_union_vector_field@@Base+0x6d8>
  4243ec:	mov    rax,QWORD PTR [rbp-0x10]
  4243f0:	lea    rcx,[rax+0x1]
  4243f4:	mov    rdx,QWORD PTR [rbp-0x18]
  4243f8:	mov    rax,QWORD PTR [rbp-0x8]
  4243fc:	mov    rsi,rcx
  4243ff:	mov    rdi,rax
  424402:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  424407:	mov    QWORD PTR [rbp-0x10],rax
  42440b:	mov    rax,QWORD PTR [rbp-0x10]
  42440f:	cmp    rax,QWORD PTR [rbp-0x18]
  424413:	jne    42443a <flatcc_verify_union_vector_field@@Base+0x698>
  424415:	mov    rax,QWORD PTR [rbp-0x20]
  424419:	mov    DWORD PTR [rax],0x0
  42441f:	mov    rdx,QWORD PTR [rbp-0x18]
  424423:	mov    rsi,QWORD PTR [rbp-0x10]
  424427:	mov    rax,QWORD PTR [rbp-0x8]
  42442b:	mov    ecx,0xa
  424430:	mov    rdi,rax
  424433:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  424438:	jmp    42447a <flatcc_verify_union_vector_field@@Base+0x6d8>
  42443a:	mov    rax,QWORD PTR [rbp-0x10]
  42443e:	movzx  eax,BYTE PTR [rax]
  424441:	cmp    al,0x7d
  424443:	jne    42446c <flatcc_verify_union_vector_field@@Base+0x6ca>
  424445:	mov    rax,QWORD PTR [rbp-0x20]
  424449:	mov    DWORD PTR [rax],0x0
  42444f:	mov    rax,QWORD PTR [rbp-0x10]
  424453:	lea    rcx,[rax+0x1]
  424457:	mov    rdx,QWORD PTR [rbp-0x18]
  42445b:	mov    rax,QWORD PTR [rbp-0x8]
  42445f:	mov    rsi,rcx
  424462:	mov    rdi,rax
  424465:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  42446a:	jmp    42447a <flatcc_verify_union_vector_field@@Base+0x6d8>
  42446c:	mov    rax,QWORD PTR [rbp-0x20]
  424470:	mov    DWORD PTR [rax],0x1
  424476:	mov    rax,QWORD PTR [rbp-0x10]
  42447a:	leave  
  42447b:	ret    
  42447c:	push   rbp
  42447d:	mov    rbp,rsp
  424480:	sub    rsp,0x20
  424484:	mov    QWORD PTR [rbp-0x8],rdi
  424488:	mov    QWORD PTR [rbp-0x10],rsi
  42448c:	mov    QWORD PTR [rbp-0x18],rdx
  424490:	mov    QWORD PTR [rbp-0x20],rcx
  424494:	mov    rax,QWORD PTR [rbp-0x10]
  424498:	cmp    rax,QWORD PTR [rbp-0x18]
  42449c:	je     4244a9 <flatcc_verify_union_vector_field@@Base+0x707>
  42449e:	mov    rax,QWORD PTR [rbp-0x10]
  4244a2:	movzx  eax,BYTE PTR [rax]
  4244a5:	cmp    al,0x5b
  4244a7:	je     4244ce <flatcc_verify_union_vector_field@@Base+0x72c>
  4244a9:	mov    rax,QWORD PTR [rbp-0x20]
  4244ad:	mov    DWORD PTR [rax],0x0
  4244b3:	mov    rdx,QWORD PTR [rbp-0x18]
  4244b7:	mov    rsi,QWORD PTR [rbp-0x10]
  4244bb:	mov    rax,QWORD PTR [rbp-0x8]
  4244bf:	mov    ecx,0x16
  4244c4:	mov    rdi,rax
  4244c7:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4244cc:	jmp    424537 <flatcc_verify_union_vector_field@@Base+0x795>
  4244ce:	mov    rax,QWORD PTR [rbp-0x10]
  4244d2:	lea    rcx,[rax+0x1]
  4244d6:	mov    rdx,QWORD PTR [rbp-0x18]
  4244da:	mov    rax,QWORD PTR [rbp-0x8]
  4244de:	mov    rsi,rcx
  4244e1:	mov    rdi,rax
  4244e4:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  4244e9:	mov    QWORD PTR [rbp-0x10],rax
  4244ed:	mov    rax,QWORD PTR [rbp-0x10]
  4244f1:	cmp    rax,QWORD PTR [rbp-0x18]
  4244f5:	je     424529 <flatcc_verify_union_vector_field@@Base+0x787>
  4244f7:	mov    rax,QWORD PTR [rbp-0x10]
  4244fb:	movzx  eax,BYTE PTR [rax]
  4244fe:	cmp    al,0x5d
  424500:	jne    424529 <flatcc_verify_union_vector_field@@Base+0x787>
  424502:	mov    rax,QWORD PTR [rbp-0x20]
  424506:	mov    DWORD PTR [rax],0x0
  42450c:	mov    rax,QWORD PTR [rbp-0x10]
  424510:	lea    rcx,[rax+0x1]
  424514:	mov    rdx,QWORD PTR [rbp-0x18]
  424518:	mov    rax,QWORD PTR [rbp-0x8]
  42451c:	mov    rsi,rcx
  42451f:	mov    rdi,rax
  424522:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  424527:	jmp    424537 <flatcc_verify_union_vector_field@@Base+0x795>
  424529:	mov    rax,QWORD PTR [rbp-0x20]
  42452d:	mov    DWORD PTR [rax],0x1
  424533:	mov    rax,QWORD PTR [rbp-0x10]
  424537:	leave  
  424538:	ret    
  424539:	push   rbp
  42453a:	mov    rbp,rsp
  42453d:	sub    rsp,0x20
  424541:	mov    QWORD PTR [rbp-0x8],rdi
  424545:	mov    QWORD PTR [rbp-0x10],rsi
  424549:	mov    QWORD PTR [rbp-0x18],rdx
  42454d:	mov    QWORD PTR [rbp-0x20],rcx
  424551:	mov    rdx,QWORD PTR [rbp-0x18]
  424555:	mov    rcx,QWORD PTR [rbp-0x10]
  424559:	mov    rax,QWORD PTR [rbp-0x8]
  42455d:	mov    rsi,rcx
  424560:	mov    rdi,rax
  424563:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  424568:	mov    QWORD PTR [rbp-0x10],rax
  42456c:	mov    rax,QWORD PTR [rbp-0x10]
  424570:	cmp    rax,QWORD PTR [rbp-0x18]
  424574:	jne    424589 <flatcc_verify_union_vector_field@@Base+0x7e7>
  424576:	mov    rax,QWORD PTR [rbp-0x20]
  42457a:	mov    DWORD PTR [rax],0x0
  424580:	mov    rax,QWORD PTR [rbp-0x10]
  424584:	jmp    424675 <flatcc_verify_union_vector_field@@Base+0x8d3>
  424589:	mov    rax,QWORD PTR [rbp-0x10]
  42458d:	movzx  eax,BYTE PTR [rax]
  424590:	cmp    al,0x2c
  424592:	je     4245e7 <flatcc_verify_union_vector_field@@Base+0x845>
  424594:	mov    rax,QWORD PTR [rbp-0x20]
  424598:	mov    DWORD PTR [rax],0x0
  42459e:	mov    rax,QWORD PTR [rbp-0x10]
  4245a2:	movzx  eax,BYTE PTR [rax]
  4245a5:	cmp    al,0x5d
  4245a7:	je     4245c7 <flatcc_verify_union_vector_field@@Base+0x825>
  4245a9:	mov    rdx,QWORD PTR [rbp-0x18]
  4245ad:	mov    rsi,QWORD PTR [rbp-0x10]
  4245b1:	mov    rax,QWORD PTR [rbp-0x8]
  4245b5:	mov    ecx,0x9
  4245ba:	mov    rdi,rax
  4245bd:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4245c2:	jmp    424675 <flatcc_verify_union_vector_field@@Base+0x8d3>
  4245c7:	mov    rax,QWORD PTR [rbp-0x10]
  4245cb:	lea    rcx,[rax+0x1]
  4245cf:	mov    rdx,QWORD PTR [rbp-0x18]
  4245d3:	mov    rax,QWORD PTR [rbp-0x8]
  4245d7:	mov    rsi,rcx
  4245da:	mov    rdi,rax
  4245dd:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  4245e2:	jmp    424675 <flatcc_verify_union_vector_field@@Base+0x8d3>
  4245e7:	mov    rax,QWORD PTR [rbp-0x10]
  4245eb:	lea    rcx,[rax+0x1]
  4245ef:	mov    rdx,QWORD PTR [rbp-0x18]
  4245f3:	mov    rax,QWORD PTR [rbp-0x8]
  4245f7:	mov    rsi,rcx
  4245fa:	mov    rdi,rax
  4245fd:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  424602:	mov    QWORD PTR [rbp-0x10],rax
  424606:	mov    rax,QWORD PTR [rbp-0x10]
  42460a:	cmp    rax,QWORD PTR [rbp-0x18]
  42460e:	jne    424635 <flatcc_verify_union_vector_field@@Base+0x893>
  424610:	mov    rax,QWORD PTR [rbp-0x20]
  424614:	mov    DWORD PTR [rax],0x0
  42461a:	mov    rdx,QWORD PTR [rbp-0x18]
  42461e:	mov    rsi,QWORD PTR [rbp-0x10]
  424622:	mov    rax,QWORD PTR [rbp-0x8]
  424626:	mov    ecx,0x9
  42462b:	mov    rdi,rax
  42462e:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  424633:	jmp    424675 <flatcc_verify_union_vector_field@@Base+0x8d3>
  424635:	mov    rax,QWORD PTR [rbp-0x10]
  424639:	movzx  eax,BYTE PTR [rax]
  42463c:	cmp    al,0x5d
  42463e:	jne    424667 <flatcc_verify_union_vector_field@@Base+0x8c5>
  424640:	mov    rax,QWORD PTR [rbp-0x20]
  424644:	mov    DWORD PTR [rax],0x0
  42464a:	mov    rax,QWORD PTR [rbp-0x10]
  42464e:	lea    rcx,[rax+0x1]
  424652:	mov    rdx,QWORD PTR [rbp-0x18]
  424656:	mov    rax,QWORD PTR [rbp-0x8]
  42465a:	mov    rsi,rcx
  42465d:	mov    rdi,rax
  424660:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  424665:	jmp    424675 <flatcc_verify_union_vector_field@@Base+0x8d3>
  424667:	mov    rax,QWORD PTR [rbp-0x20]
  42466b:	mov    DWORD PTR [rax],0x1
  424671:	mov    rax,QWORD PTR [rbp-0x10]
  424675:	leave  
  424676:	ret    
  424677:	push   rbp
  424678:	mov    rbp,rsp
  42467b:	sub    rsp,0x30
  42467f:	mov    QWORD PTR [rbp-0x8],rdi
  424683:	mov    QWORD PTR [rbp-0x10],rsi
  424687:	mov    QWORD PTR [rbp-0x18],rdx
  42468b:	mov    DWORD PTR [rbp-0x1c],ecx
  42468e:	mov    QWORD PTR [rbp-0x28],r8
  424692:	mov    QWORD PTR [rbp-0x30],r9
  424696:	cmp    DWORD PTR [rbp-0x1c],0x0
  42469a:	je     4246b7 <flatcc_verify_union_vector_field@@Base+0x915>
  42469c:	mov    rdx,QWORD PTR [rbp-0x18]
  4246a0:	mov    rsi,QWORD PTR [rbp-0x10]
  4246a4:	mov    rax,QWORD PTR [rbp-0x8]
  4246a8:	mov    ecx,0x8
  4246ad:	mov    rdi,rax
  4246b0:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4246b5:	jmp    4246c6 <flatcc_verify_union_vector_field@@Base+0x924>
  4246b7:	mov    rax,QWORD PTR [rbp-0x30]
  4246bb:	mov    rdx,QWORD PTR [rbp-0x28]
  4246bf:	mov    QWORD PTR [rax],rdx
  4246c2:	mov    rax,QWORD PTR [rbp-0x10]
  4246c6:	leave  
  4246c7:	ret    
  4246c8:	push   rbp
  4246c9:	mov    rbp,rsp
  4246cc:	sub    rsp,0x30
  4246d0:	mov    QWORD PTR [rbp-0x8],rdi
  4246d4:	mov    QWORD PTR [rbp-0x10],rsi
  4246d8:	mov    QWORD PTR [rbp-0x18],rdx
  4246dc:	mov    DWORD PTR [rbp-0x1c],ecx
  4246df:	mov    QWORD PTR [rbp-0x28],r8
  4246e3:	mov    QWORD PTR [rbp-0x30],r9
  4246e7:	cmp    DWORD PTR [rbp-0x1c],0x0
  4246eb:	je     424708 <flatcc_verify_union_vector_field@@Base+0x966>
  4246ed:	mov    rdx,QWORD PTR [rbp-0x18]
  4246f1:	mov    rsi,QWORD PTR [rbp-0x10]
  4246f5:	mov    rax,QWORD PTR [rbp-0x8]
  4246f9:	mov    ecx,0x8
  4246fe:	mov    rdi,rax
  424701:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  424706:	jmp    42471c <flatcc_verify_union_vector_field@@Base+0x97a>
  424708:	cmp    QWORD PTR [rbp-0x28],0x0
  42470d:	setne  al
  424710:	mov    edx,eax
  424712:	mov    rax,QWORD PTR [rbp-0x30]
  424716:	mov    BYTE PTR [rax],dl
  424718:	mov    rax,QWORD PTR [rbp-0x10]
  42471c:	leave  
  42471d:	ret    
  42471e:	push   rbp
  42471f:	mov    rbp,rsp
  424722:	sub    rsp,0x30
  424726:	mov    QWORD PTR [rbp-0x8],rdi
  42472a:	mov    QWORD PTR [rbp-0x10],rsi
  42472e:	mov    QWORD PTR [rbp-0x18],rdx
  424732:	mov    DWORD PTR [rbp-0x1c],ecx
  424735:	mov    QWORD PTR [rbp-0x28],r8
  424739:	mov    QWORD PTR [rbp-0x30],r9
  42473d:	cmp    DWORD PTR [rbp-0x1c],0x0
  424741:	je     42475e <flatcc_verify_union_vector_field@@Base+0x9bc>
  424743:	mov    rdx,QWORD PTR [rbp-0x18]
  424747:	mov    rsi,QWORD PTR [rbp-0x10]
  42474b:	mov    rax,QWORD PTR [rbp-0x8]
  42474f:	mov    ecx,0x8
  424754:	mov    rdi,rax
  424757:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  42475c:	jmp    424794 <flatcc_verify_union_vector_field@@Base+0x9f2>
  42475e:	mov    eax,0xffffffff
  424763:	cmp    QWORD PTR [rbp-0x28],rax
  424767:	jbe    424784 <flatcc_verify_union_vector_field@@Base+0x9e2>
  424769:	mov    rdx,QWORD PTR [rbp-0x18]
  42476d:	mov    rsi,QWORD PTR [rbp-0x10]
  424771:	mov    rax,QWORD PTR [rbp-0x8]
  424775:	mov    ecx,0x7
  42477a:	mov    rdi,rax
  42477d:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  424782:	jmp    424794 <flatcc_verify_union_vector_field@@Base+0x9f2>
  424784:	mov    rax,QWORD PTR [rbp-0x28]
  424788:	mov    edx,eax
  42478a:	mov    rax,QWORD PTR [rbp-0x30]
  42478e:	mov    DWORD PTR [rax],edx
  424790:	mov    rax,QWORD PTR [rbp-0x10]
  424794:	leave  
  424795:	ret    
  424796:	push   rbp
  424797:	mov    rbp,rsp
  42479a:	sub    rsp,0x30
  42479e:	mov    QWORD PTR [rbp-0x8],rdi
  4247a2:	mov    QWORD PTR [rbp-0x10],rsi
  4247a6:	mov    QWORD PTR [rbp-0x18],rdx
  4247aa:	mov    DWORD PTR [rbp-0x1c],ecx
  4247ad:	mov    QWORD PTR [rbp-0x28],r8
  4247b1:	mov    QWORD PTR [rbp-0x30],r9
  4247b5:	cmp    DWORD PTR [rbp-0x1c],0x0
  4247b9:	je     4247d6 <flatcc_verify_union_vector_field@@Base+0xa34>
  4247bb:	mov    rdx,QWORD PTR [rbp-0x18]
  4247bf:	mov    rsi,QWORD PTR [rbp-0x10]
  4247c3:	mov    rax,QWORD PTR [rbp-0x8]
  4247c7:	mov    ecx,0x8
  4247cc:	mov    rdi,rax
  4247cf:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4247d4:	jmp    42480c <flatcc_verify_union_vector_field@@Base+0xa6a>
  4247d6:	cmp    QWORD PTR [rbp-0x28],0xffff
  4247de:	jbe    4247fb <flatcc_verify_union_vector_field@@Base+0xa59>
  4247e0:	mov    rdx,QWORD PTR [rbp-0x18]
  4247e4:	mov    rsi,QWORD PTR [rbp-0x10]
  4247e8:	mov    rax,QWORD PTR [rbp-0x8]
  4247ec:	mov    ecx,0x7
  4247f1:	mov    rdi,rax
  4247f4:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4247f9:	jmp    42480c <flatcc_verify_union_vector_field@@Base+0xa6a>
  4247fb:	mov    rax,QWORD PTR [rbp-0x28]
  4247ff:	mov    edx,eax
  424801:	mov    rax,QWORD PTR [rbp-0x30]
  424805:	mov    WORD PTR [rax],dx
  424808:	mov    rax,QWORD PTR [rbp-0x10]
  42480c:	leave  
  42480d:	ret    
  42480e:	push   rbp
  42480f:	mov    rbp,rsp
  424812:	sub    rsp,0x30
  424816:	mov    QWORD PTR [rbp-0x8],rdi
  42481a:	mov    QWORD PTR [rbp-0x10],rsi
  42481e:	mov    QWORD PTR [rbp-0x18],rdx
  424822:	mov    DWORD PTR [rbp-0x1c],ecx
  424825:	mov    QWORD PTR [rbp-0x28],r8
  424829:	mov    QWORD PTR [rbp-0x30],r9
  42482d:	cmp    DWORD PTR [rbp-0x1c],0x0
  424831:	je     42484e <flatcc_verify_union_vector_field@@Base+0xaac>
  424833:	mov    rdx,QWORD PTR [rbp-0x18]
  424837:	mov    rsi,QWORD PTR [rbp-0x10]
  42483b:	mov    rax,QWORD PTR [rbp-0x8]
  42483f:	mov    ecx,0x8
  424844:	mov    rdi,rax
  424847:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  42484c:	jmp    424883 <flatcc_verify_union_vector_field@@Base+0xae1>
  42484e:	cmp    QWORD PTR [rbp-0x28],0xff
  424856:	jbe    424873 <flatcc_verify_union_vector_field@@Base+0xad1>
  424858:	mov    rdx,QWORD PTR [rbp-0x18]
  42485c:	mov    rsi,QWORD PTR [rbp-0x10]
  424860:	mov    rax,QWORD PTR [rbp-0x8]
  424864:	mov    ecx,0x7
  424869:	mov    rdi,rax
  42486c:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  424871:	jmp    424883 <flatcc_verify_union_vector_field@@Base+0xae1>
  424873:	mov    rax,QWORD PTR [rbp-0x28]
  424877:	mov    edx,eax
  424879:	mov    rax,QWORD PTR [rbp-0x30]
  42487d:	mov    BYTE PTR [rax],dl
  42487f:	mov    rax,QWORD PTR [rbp-0x10]
  424883:	leave  
  424884:	ret    
  424885:	push   rbp
  424886:	mov    rbp,rsp
  424889:	sub    rsp,0x30
  42488d:	mov    QWORD PTR [rbp-0x8],rdi
  424891:	mov    QWORD PTR [rbp-0x10],rsi
  424895:	mov    QWORD PTR [rbp-0x18],rdx
  424899:	mov    DWORD PTR [rbp-0x1c],ecx
  42489c:	mov    QWORD PTR [rbp-0x28],r8
  4248a0:	mov    QWORD PTR [rbp-0x30],r9
  4248a4:	cmp    DWORD PTR [rbp-0x1c],0x0
  4248a8:	je     4248e8 <flatcc_verify_union_vector_field@@Base+0xb46>
  4248aa:	movabs rax,0x8000000000000000
  4248b4:	cmp    QWORD PTR [rbp-0x28],rax
  4248b8:	jbe    4248d5 <flatcc_verify_union_vector_field@@Base+0xb33>
  4248ba:	mov    rdx,QWORD PTR [rbp-0x18]
  4248be:	mov    rsi,QWORD PTR [rbp-0x10]
  4248c2:	mov    rax,QWORD PTR [rbp-0x8]
  4248c6:	mov    ecx,0x8
  4248cb:	mov    rdi,rax
  4248ce:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4248d3:	jmp    42491b <flatcc_verify_union_vector_field@@Base+0xb79>
  4248d5:	mov    rax,QWORD PTR [rbp-0x28]
  4248d9:	neg    rax
  4248dc:	mov    rdx,rax
  4248df:	mov    rax,QWORD PTR [rbp-0x30]
  4248e3:	mov    QWORD PTR [rax],rdx
  4248e6:	jmp    424917 <flatcc_verify_union_vector_field@@Base+0xb75>
  4248e8:	mov    rax,QWORD PTR [rbp-0x28]
  4248ec:	test   rax,rax
  4248ef:	jns    42490c <flatcc_verify_union_vector_field@@Base+0xb6a>
  4248f1:	mov    rdx,QWORD PTR [rbp-0x18]
  4248f5:	mov    rsi,QWORD PTR [rbp-0x10]
  4248f9:	mov    rax,QWORD PTR [rbp-0x8]
  4248fd:	mov    ecx,0x7
  424902:	mov    rdi,rax
  424905:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  42490a:	jmp    42491b <flatcc_verify_union_vector_field@@Base+0xb79>
  42490c:	mov    rdx,QWORD PTR [rbp-0x28]
  424910:	mov    rax,QWORD PTR [rbp-0x30]
  424914:	mov    QWORD PTR [rax],rdx
  424917:	mov    rax,QWORD PTR [rbp-0x10]
  42491b:	leave  
  42491c:	ret    
  42491d:	push   rbp
  42491e:	mov    rbp,rsp
  424921:	sub    rsp,0x30
  424925:	mov    QWORD PTR [rbp-0x8],rdi
  424929:	mov    QWORD PTR [rbp-0x10],rsi
  42492d:	mov    QWORD PTR [rbp-0x18],rdx
  424931:	mov    DWORD PTR [rbp-0x1c],ecx
  424934:	mov    QWORD PTR [rbp-0x28],r8
  424938:	mov    QWORD PTR [rbp-0x30],r9
  42493c:	cmp    DWORD PTR [rbp-0x1c],0x0
  424940:	je     424978 <flatcc_verify_union_vector_field@@Base+0xbd6>
  424942:	mov    eax,0x80000000
  424947:	cmp    QWORD PTR [rbp-0x28],rax
  42494b:	jbe    424968 <flatcc_verify_union_vector_field@@Base+0xbc6>
  42494d:	mov    rdx,QWORD PTR [rbp-0x18]
  424951:	mov    rsi,QWORD PTR [rbp-0x10]
  424955:	mov    rax,QWORD PTR [rbp-0x8]
  424959:	mov    ecx,0x8
  42495e:	mov    rdi,rax
  424961:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  424966:	jmp    4249ad <flatcc_verify_union_vector_field@@Base+0xc0b>
  424968:	mov    rax,QWORD PTR [rbp-0x28]
  42496c:	neg    eax
  42496e:	mov    edx,eax
  424970:	mov    rax,QWORD PTR [rbp-0x30]
  424974:	mov    DWORD PTR [rax],edx
  424976:	jmp    4249a9 <flatcc_verify_union_vector_field@@Base+0xc07>
  424978:	cmp    QWORD PTR [rbp-0x28],0x7fffffff
  424980:	jbe    42499d <flatcc_verify_union_vector_field@@Base+0xbfb>
  424982:	mov    rdx,QWORD PTR [rbp-0x18]
  424986:	mov    rsi,QWORD PTR [rbp-0x10]
  42498a:	mov    rax,QWORD PTR [rbp-0x8]
  42498e:	mov    ecx,0x7
  424993:	mov    rdi,rax
  424996:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  42499b:	jmp    4249ad <flatcc_verify_union_vector_field@@Base+0xc0b>
  42499d:	mov    rax,QWORD PTR [rbp-0x28]
  4249a1:	mov    edx,eax
  4249a3:	mov    rax,QWORD PTR [rbp-0x30]
  4249a7:	mov    DWORD PTR [rax],edx
  4249a9:	mov    rax,QWORD PTR [rbp-0x10]
  4249ad:	leave  
  4249ae:	ret    
  4249af:	push   rbp
  4249b0:	mov    rbp,rsp
  4249b3:	sub    rsp,0x30
  4249b7:	mov    QWORD PTR [rbp-0x8],rdi
  4249bb:	mov    QWORD PTR [rbp-0x10],rsi
  4249bf:	mov    QWORD PTR [rbp-0x18],rdx
  4249c3:	mov    DWORD PTR [rbp-0x1c],ecx
  4249c6:	mov    QWORD PTR [rbp-0x28],r8
  4249ca:	mov    QWORD PTR [rbp-0x30],r9
  4249ce:	cmp    DWORD PTR [rbp-0x1c],0x0
  4249d2:	je     424a0a <flatcc_verify_union_vector_field@@Base+0xc68>
  4249d4:	cmp    QWORD PTR [rbp-0x28],0x8000
  4249dc:	jbe    4249f9 <flatcc_verify_union_vector_field@@Base+0xc57>
  4249de:	mov    rdx,QWORD PTR [rbp-0x18]
  4249e2:	mov    rsi,QWORD PTR [rbp-0x10]
  4249e6:	mov    rax,QWORD PTR [rbp-0x8]
  4249ea:	mov    ecx,0x8
  4249ef:	mov    rdi,rax
  4249f2:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4249f7:	jmp    424a40 <flatcc_verify_union_vector_field@@Base+0xc9e>
  4249f9:	mov    rax,QWORD PTR [rbp-0x28]
  4249fd:	neg    eax
  4249ff:	mov    edx,eax
  424a01:	mov    rax,QWORD PTR [rbp-0x30]
  424a05:	mov    WORD PTR [rax],dx
  424a08:	jmp    424a3c <flatcc_verify_union_vector_field@@Base+0xc9a>
  424a0a:	cmp    QWORD PTR [rbp-0x28],0x7fff
  424a12:	jbe    424a2f <flatcc_verify_union_vector_field@@Base+0xc8d>
  424a14:	mov    rdx,QWORD PTR [rbp-0x18]
  424a18:	mov    rsi,QWORD PTR [rbp-0x10]
  424a1c:	mov    rax,QWORD PTR [rbp-0x8]
  424a20:	mov    ecx,0x7
  424a25:	mov    rdi,rax
  424a28:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  424a2d:	jmp    424a40 <flatcc_verify_union_vector_field@@Base+0xc9e>
  424a2f:	mov    rax,QWORD PTR [rbp-0x28]
  424a33:	mov    edx,eax
  424a35:	mov    rax,QWORD PTR [rbp-0x30]
  424a39:	mov    WORD PTR [rax],dx
  424a3c:	mov    rax,QWORD PTR [rbp-0x10]
  424a40:	leave  
  424a41:	ret    
  424a42:	push   rbp
  424a43:	mov    rbp,rsp
  424a46:	sub    rsp,0x30
  424a4a:	mov    QWORD PTR [rbp-0x8],rdi
  424a4e:	mov    QWORD PTR [rbp-0x10],rsi
  424a52:	mov    QWORD PTR [rbp-0x18],rdx
  424a56:	mov    DWORD PTR [rbp-0x1c],ecx
  424a59:	mov    QWORD PTR [rbp-0x28],r8
  424a5d:	mov    QWORD PTR [rbp-0x30],r9
  424a61:	cmp    DWORD PTR [rbp-0x1c],0x0
  424a65:	je     424a9c <flatcc_verify_union_vector_field@@Base+0xcfa>
  424a67:	cmp    QWORD PTR [rbp-0x28],0x80
  424a6f:	jbe    424a8c <flatcc_verify_union_vector_field@@Base+0xcea>
  424a71:	mov    rdx,QWORD PTR [rbp-0x18]
  424a75:	mov    rsi,QWORD PTR [rbp-0x10]
  424a79:	mov    rax,QWORD PTR [rbp-0x8]
  424a7d:	mov    ecx,0x8
  424a82:	mov    rdi,rax
  424a85:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  424a8a:	jmp    424ace <flatcc_verify_union_vector_field@@Base+0xd2c>
  424a8c:	mov    rax,QWORD PTR [rbp-0x28]
  424a90:	neg    eax
  424a92:	mov    edx,eax
  424a94:	mov    rax,QWORD PTR [rbp-0x30]
  424a98:	mov    BYTE PTR [rax],dl
  424a9a:	jmp    424aca <flatcc_verify_union_vector_field@@Base+0xd28>
  424a9c:	cmp    QWORD PTR [rbp-0x28],0x7f
  424aa1:	jbe    424abe <flatcc_verify_union_vector_field@@Base+0xd1c>
  424aa3:	mov    rdx,QWORD PTR [rbp-0x18]
  424aa7:	mov    rsi,QWORD PTR [rbp-0x10]
  424aab:	mov    rax,QWORD PTR [rbp-0x8]
  424aaf:	mov    ecx,0x7
  424ab4:	mov    rdi,rax
  424ab7:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  424abc:	jmp    424ace <flatcc_verify_union_vector_field@@Base+0xd2c>
  424abe:	mov    rax,QWORD PTR [rbp-0x28]
  424ac2:	mov    edx,eax
  424ac4:	mov    rax,QWORD PTR [rbp-0x30]
  424ac8:	mov    BYTE PTR [rax],dl
  424aca:	mov    rax,QWORD PTR [rbp-0x10]
  424ace:	leave  
  424acf:	ret    
  424ad0:	push   rbp
  424ad1:	mov    rbp,rsp
  424ad4:	mov    QWORD PTR [rbp-0x8],rdi
  424ad8:	mov    QWORD PTR [rbp-0x10],rsi
  424adc:	mov    QWORD PTR [rbp-0x18],rdx
  424ae0:	mov    DWORD PTR [rbp-0x1c],ecx
  424ae3:	mov    QWORD PTR [rbp-0x28],r8
  424ae7:	mov    QWORD PTR [rbp-0x30],r9
  424aeb:	cmp    DWORD PTR [rbp-0x1c],0x0
  424aef:	je     424b24 <flatcc_verify_union_vector_field@@Base+0xd82>
  424af1:	mov    rax,QWORD PTR [rbp-0x28]
  424af5:	test   rax,rax
  424af8:	js     424b01 <flatcc_verify_union_vector_field@@Base+0xd5f>
  424afa:	vcvtsi2ss xmm0,xmm0,rax
  424aff:	jmp    424b16 <flatcc_verify_union_vector_field@@Base+0xd74>
  424b01:	mov    rdx,rax
  424b04:	shr    rdx,1
  424b07:	and    eax,0x1
  424b0a:	or     rdx,rax
  424b0d:	vcvtsi2ss xmm0,xmm0,rdx
  424b12:	vaddss xmm0,xmm0,xmm0
  424b16:	vmovss xmm1,DWORD PTR [rip+0x18a12]        # 43d530 <flatcc_builder_padding_base@@Base+0x25b0>
  424b1e:	vxorps xmm0,xmm0,xmm1
  424b22:	jmp    424b49 <flatcc_verify_union_vector_field@@Base+0xda7>
  424b24:	mov    rax,QWORD PTR [rbp-0x28]
  424b28:	test   rax,rax
  424b2b:	js     424b34 <flatcc_verify_union_vector_field@@Base+0xd92>
  424b2d:	vcvtsi2ss xmm0,xmm0,rax
  424b32:	jmp    424b49 <flatcc_verify_union_vector_field@@Base+0xda7>
  424b34:	mov    rdx,rax
  424b37:	shr    rdx,1
  424b3a:	and    eax,0x1
  424b3d:	or     rdx,rax
  424b40:	vcvtsi2ss xmm0,xmm0,rdx
  424b45:	vaddss xmm0,xmm0,xmm0
  424b49:	mov    rax,QWORD PTR [rbp-0x30]
  424b4d:	vmovss DWORD PTR [rax],xmm0
  424b51:	mov    rax,QWORD PTR [rbp-0x10]
  424b55:	pop    rbp
  424b56:	ret    
  424b57:	push   rbp
  424b58:	mov    rbp,rsp
  424b5b:	mov    QWORD PTR [rbp-0x8],rdi
  424b5f:	mov    QWORD PTR [rbp-0x10],rsi
  424b63:	mov    QWORD PTR [rbp-0x18],rdx
  424b67:	mov    DWORD PTR [rbp-0x1c],ecx
  424b6a:	mov    QWORD PTR [rbp-0x28],r8
  424b6e:	mov    QWORD PTR [rbp-0x30],r9
  424b72:	cmp    DWORD PTR [rbp-0x1c],0x0
  424b76:	je     424bab <flatcc_verify_union_vector_field@@Base+0xe09>
  424b78:	mov    rax,QWORD PTR [rbp-0x28]
  424b7c:	test   rax,rax
  424b7f:	js     424b88 <flatcc_verify_union_vector_field@@Base+0xde6>
  424b81:	vcvtsi2sd xmm0,xmm0,rax
  424b86:	jmp    424b9d <flatcc_verify_union_vector_field@@Base+0xdfb>
  424b88:	mov    rdx,rax
  424b8b:	shr    rdx,1
  424b8e:	and    eax,0x1
  424b91:	or     rdx,rax
  424b94:	vcvtsi2sd xmm0,xmm0,rdx
  424b99:	vaddsd xmm0,xmm0,xmm0
  424b9d:	vmovq  xmm1,QWORD PTR [rip+0x1899b]        # 43d540 <flatcc_builder_padding_base@@Base+0x25c0>
  424ba5:	vxorpd xmm0,xmm0,xmm1
  424ba9:	jmp    424bd0 <flatcc_verify_union_vector_field@@Base+0xe2e>
  424bab:	mov    rax,QWORD PTR [rbp-0x28]
  424baf:	test   rax,rax
  424bb2:	js     424bbb <flatcc_verify_union_vector_field@@Base+0xe19>
  424bb4:	vcvtsi2sd xmm0,xmm0,rax
  424bb9:	jmp    424bd0 <flatcc_verify_union_vector_field@@Base+0xe2e>
  424bbb:	mov    rdx,rax
  424bbe:	shr    rdx,1
  424bc1:	and    eax,0x1
  424bc4:	or     rdx,rax
  424bc7:	vcvtsi2sd xmm0,xmm0,rdx
  424bcc:	vaddsd xmm0,xmm0,xmm0
  424bd0:	mov    rax,QWORD PTR [rbp-0x30]
  424bd4:	vmovsd QWORD PTR [rax],xmm0
  424bd8:	mov    rax,QWORD PTR [rbp-0x10]
  424bdc:	pop    rbp
  424bdd:	ret    
  424bde:	push   rbp
  424bdf:	mov    rbp,rsp
  424be2:	sub    rsp,0x40
  424be6:	mov    QWORD PTR [rbp-0x28],rdi
  424bea:	mov    QWORD PTR [rbp-0x30],rsi
  424bee:	mov    QWORD PTR [rbp-0x38],rdx
  424bf2:	mov    QWORD PTR [rbp-0x40],rcx
  424bf6:	mov    rax,QWORD PTR fs:0x28
  424bff:	mov    QWORD PTR [rbp-0x8],rax
  424c03:	xor    eax,eax
  424c05:	mov    QWORD PTR [rbp-0x18],0x0
  424c0d:	mov    DWORD PTR [rbp-0x1c],0x0
  424c14:	mov    rax,QWORD PTR [rbp-0x30]
  424c18:	mov    QWORD PTR [rbp-0x10],rax
  424c1c:	mov    rax,QWORD PTR [rbp-0x40]
  424c20:	mov    BYTE PTR [rax],0x0
  424c23:	mov    rax,QWORD PTR [rbp-0x30]
  424c27:	cmp    rax,QWORD PTR [rbp-0x38]
  424c2b:	jne    424c33 <flatcc_verify_union_vector_field@@Base+0xe91>
  424c2d:	mov    rax,QWORD PTR [rbp-0x30]
  424c31:	jmp    424c8b <flatcc_verify_union_vector_field@@Base+0xee9>
  424c33:	lea    rdi,[rbp-0x18]
  424c37:	lea    rcx,[rbp-0x1c]
  424c3b:	mov    rdx,QWORD PTR [rbp-0x38]
  424c3f:	mov    rsi,QWORD PTR [rbp-0x30]
  424c43:	mov    rax,QWORD PTR [rbp-0x28]
  424c47:	mov    r8,rdi
  424c4a:	mov    rdi,rax
  424c4d:	call   4293bb <flatcc_json_parser_integer@@Base>
  424c52:	mov    QWORD PTR [rbp-0x30],rax
  424c56:	mov    rax,QWORD PTR [rbp-0x30]
  424c5a:	cmp    rax,QWORD PTR [rbp-0x10]
  424c5e:	je     424c87 <flatcc_verify_union_vector_field@@Base+0xee5>
  424c60:	mov    rdi,QWORD PTR [rbp-0x18]
  424c64:	mov    ecx,DWORD PTR [rbp-0x1c]
  424c67:	mov    r8,QWORD PTR [rbp-0x40]
  424c6b:	mov    rdx,QWORD PTR [rbp-0x38]
  424c6f:	mov    rsi,QWORD PTR [rbp-0x30]
  424c73:	mov    rax,QWORD PTR [rbp-0x28]
  424c77:	mov    r9,r8
  424c7a:	mov    r8,rdi
  424c7d:	mov    rdi,rax
  424c80:	call   42480e <flatcc_verify_union_vector_field@@Base+0xa6c>
  424c85:	jmp    424c8b <flatcc_verify_union_vector_field@@Base+0xee9>
  424c87:	mov    rax,QWORD PTR [rbp-0x30]
  424c8b:	mov    rdx,QWORD PTR [rbp-0x8]
  424c8f:	xor    rdx,QWORD PTR fs:0x28
  424c98:	je     424c9f <flatcc_verify_union_vector_field@@Base+0xefd>
  424c9a:	call   4061a0 <__stack_chk_fail@plt>
  424c9f:	leave  
  424ca0:	ret    
  424ca1:	endbr64 
  424ca5:	push   rbp
  424ca6:	mov    rbp,rsp
  424ca9:	sub    rsp,0x60
  424cad:	mov    QWORD PTR [rbp-0x38],rdi
  424cb1:	mov    QWORD PTR [rbp-0x40],rsi
  424cb5:	mov    QWORD PTR [rbp-0x48],rdx
  424cb9:	mov    QWORD PTR [rbp-0x50],rcx
  424cbd:	mov    QWORD PTR [rbp-0x58],r8
  424cc1:	mov    rax,QWORD PTR fs:0x28
  424cca:	mov    QWORD PTR [rbp-0x8],rax
  424cce:	xor    eax,eax
  424cd0:	mov    QWORD PTR [rbp-0x28],0x0
  424cd8:	mov    rax,QWORD PTR [rbp-0x58]
  424cdc:	mov    QWORD PTR [rax],0x0
  424ce3:	mov    rdx,QWORD PTR [rbp-0x48]
  424ce7:	mov    rcx,QWORD PTR [rbp-0x40]
  424ceb:	mov    rax,QWORD PTR [rbp-0x38]
  424cef:	mov    rsi,rcx
  424cf2:	mov    rdi,rax
  424cf5:	call   4242e3 <flatcc_verify_union_vector_field@@Base+0x541>
  424cfa:	mov    QWORD PTR [rbp-0x40],rax
  424cfe:	mov    rax,QWORD PTR [rbp-0x40]
  424d02:	cmp    rax,QWORD PTR [rbp-0x48]
  424d06:	jne    424d11 <flatcc_verify_union_vector_field@@Base+0xf6f>
  424d08:	mov    rax,QWORD PTR [rbp-0x40]
  424d0c:	jmp    424dee <flatcc_verify_union_vector_field@@Base+0x104c>
  424d11:	mov    rax,QWORD PTR [rbp-0x50]
  424d15:	mov    QWORD PTR [rbp-0x18],rax
  424d19:	mov    rax,QWORD PTR [rbp-0x18]
  424d1d:	mov    rax,QWORD PTR [rax]
  424d20:	mov    rdx,QWORD PTR [rbp-0x40]
  424d24:	mov    QWORD PTR [rbp-0x10],rdx
  424d28:	lea    r9,[rbp-0x2c]
  424d2c:	lea    r8,[rbp-0x20]
  424d30:	lea    rcx,[rbp-0x30]
  424d34:	mov    rdx,QWORD PTR [rbp-0x48]
  424d38:	mov    rsi,QWORD PTR [rbp-0x10]
  424d3c:	mov    rdi,QWORD PTR [rbp-0x38]
  424d40:	call   rax
  424d42:	mov    QWORD PTR [rbp-0x40],rax
  424d46:	mov    rax,QWORD PTR [rbp-0x40]
  424d4a:	cmp    rax,QWORD PTR [rbp-0x48]
  424d4e:	jne    424d59 <flatcc_verify_union_vector_field@@Base+0xfb7>
  424d50:	mov    rax,QWORD PTR [rbp-0x40]
  424d54:	jmp    424dee <flatcc_verify_union_vector_field@@Base+0x104c>
  424d59:	mov    rax,QWORD PTR [rbp-0x40]
  424d5d:	cmp    rax,QWORD PTR [rbp-0x10]
  424d61:	jne    424d74 <flatcc_verify_union_vector_field@@Base+0xfd2>
  424d63:	add    QWORD PTR [rbp-0x18],0x8
  424d68:	mov    rax,QWORD PTR [rbp-0x18]
  424d6c:	mov    rax,QWORD PTR [rax]
  424d6f:	test   rax,rax
  424d72:	jne    424d19 <flatcc_verify_union_vector_field@@Base+0xf77>
  424d74:	mov    rax,QWORD PTR [rbp-0x10]
  424d78:	cmp    rax,QWORD PTR [rbp-0x40]
  424d7c:	jne    424d99 <flatcc_verify_union_vector_field@@Base+0xff7>
  424d7e:	mov    rdx,QWORD PTR [rbp-0x48]
  424d82:	mov    rsi,QWORD PTR [rbp-0x40]
  424d86:	mov    rax,QWORD PTR [rbp-0x38]
  424d8a:	mov    ecx,0x17
  424d8f:	mov    rdi,rax
  424d92:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  424d97:	jmp    424dee <flatcc_verify_union_vector_field@@Base+0x104c>
  424d99:	mov    rdi,QWORD PTR [rbp-0x20]
  424d9d:	mov    ecx,DWORD PTR [rbp-0x30]
  424da0:	lea    r8,[rbp-0x28]
  424da4:	mov    rdx,QWORD PTR [rbp-0x48]
  424da8:	mov    rsi,QWORD PTR [rbp-0x40]
  424dac:	mov    rax,QWORD PTR [rbp-0x38]
  424db0:	mov    r9,r8
  424db3:	mov    r8,rdi
  424db6:	mov    rdi,rax
  424db9:	call   424677 <flatcc_verify_union_vector_field@@Base+0x8d5>
  424dbe:	cmp    QWORD PTR [rbp-0x48],rax
  424dc2:	jne    424dca <flatcc_verify_union_vector_field@@Base+0x1028>
  424dc4:	mov    rax,QWORD PTR [rbp-0x48]
  424dc8:	jmp    424dee <flatcc_verify_union_vector_field@@Base+0x104c>
  424dca:	mov    rax,QWORD PTR [rbp-0x58]
  424dce:	mov    rdx,QWORD PTR [rax]
  424dd1:	mov    rax,QWORD PTR [rbp-0x28]
  424dd5:	add    rdx,rax
  424dd8:	mov    rax,QWORD PTR [rbp-0x58]
  424ddc:	mov    QWORD PTR [rax],rdx
  424ddf:	mov    eax,DWORD PTR [rbp-0x2c]
  424de2:	test   eax,eax
  424de4:	jne    424d11 <flatcc_verify_union_vector_field@@Base+0xf6f>
  424dea:	mov    rax,QWORD PTR [rbp-0x40]
  424dee:	mov    rdi,QWORD PTR [rbp-0x8]
  424df2:	xor    rdi,QWORD PTR fs:0x28
  424dfb:	je     424e02 <flatcc_verify_union_vector_field@@Base+0x1060>
  424dfd:	call   4061a0 <__stack_chk_fail@plt>
  424e02:	leave  
  424e03:	ret    
  424e04:	endbr64 
  424e08:	push   rbp
  424e09:	mov    rbp,rsp
  424e0c:	sub    rsp,0x60
  424e10:	mov    QWORD PTR [rbp-0x38],rdi
  424e14:	mov    QWORD PTR [rbp-0x40],rsi
  424e18:	mov    QWORD PTR [rbp-0x48],rdx
  424e1c:	mov    QWORD PTR [rbp-0x50],rcx
  424e20:	mov    QWORD PTR [rbp-0x58],r8
  424e24:	mov    rax,QWORD PTR fs:0x28
  424e2d:	mov    QWORD PTR [rbp-0x8],rax
  424e31:	xor    eax,eax
  424e33:	mov    DWORD PTR [rbp-0x2c],0x0
  424e3a:	mov    rax,QWORD PTR [rbp-0x58]
  424e3e:	mov    DWORD PTR [rax],0x0
  424e44:	mov    rdx,QWORD PTR [rbp-0x48]
  424e48:	mov    rcx,QWORD PTR [rbp-0x40]
  424e4c:	mov    rax,QWORD PTR [rbp-0x38]
  424e50:	mov    rsi,rcx
  424e53:	mov    rdi,rax
  424e56:	call   4242e3 <flatcc_verify_union_vector_field@@Base+0x541>
  424e5b:	mov    QWORD PTR [rbp-0x40],rax
  424e5f:	mov    rax,QWORD PTR [rbp-0x40]
  424e63:	cmp    rax,QWORD PTR [rbp-0x48]
  424e67:	jne    424e72 <flatcc_verify_union_vector_field@@Base+0x10d0>
  424e69:	mov    rax,QWORD PTR [rbp-0x40]
  424e6d:	jmp    424f4b <flatcc_verify_union_vector_field@@Base+0x11a9>
  424e72:	mov    rax,QWORD PTR [rbp-0x50]
  424e76:	mov    QWORD PTR [rbp-0x18],rax
  424e7a:	mov    rax,QWORD PTR [rbp-0x18]
  424e7e:	mov    rax,QWORD PTR [rax]
  424e81:	mov    rdx,QWORD PTR [rbp-0x40]
  424e85:	mov    QWORD PTR [rbp-0x10],rdx
  424e89:	lea    r9,[rbp-0x24]
  424e8d:	lea    r8,[rbp-0x20]
  424e91:	lea    rcx,[rbp-0x28]
  424e95:	mov    rdx,QWORD PTR [rbp-0x48]
  424e99:	mov    rsi,QWORD PTR [rbp-0x10]
  424e9d:	mov    rdi,QWORD PTR [rbp-0x38]
  424ea1:	call   rax
  424ea3:	mov    QWORD PTR [rbp-0x40],rax
  424ea7:	mov    rax,QWORD PTR [rbp-0x40]
  424eab:	cmp    rax,QWORD PTR [rbp-0x48]
  424eaf:	jne    424eba <flatcc_verify_union_vector_field@@Base+0x1118>
  424eb1:	mov    rax,QWORD PTR [rbp-0x40]
  424eb5:	jmp    424f4b <flatcc_verify_union_vector_field@@Base+0x11a9>
  424eba:	mov    rax,QWORD PTR [rbp-0x40]
  424ebe:	cmp    rax,QWORD PTR [rbp-0x10]
  424ec2:	jne    424ed5 <flatcc_verify_union_vector_field@@Base+0x1133>
  424ec4:	add    QWORD PTR [rbp-0x18],0x8
  424ec9:	mov    rax,QWORD PTR [rbp-0x18]
  424ecd:	mov    rax,QWORD PTR [rax]
  424ed0:	test   rax,rax
  424ed3:	jne    424e7a <flatcc_verify_union_vector_field@@Base+0x10d8>
  424ed5:	mov    rax,QWORD PTR [rbp-0x10]
  424ed9:	cmp    rax,QWORD PTR [rbp-0x40]
  424edd:	jne    424efa <flatcc_verify_union_vector_field@@Base+0x1158>
  424edf:	mov    rdx,QWORD PTR [rbp-0x48]
  424ee3:	mov    rsi,QWORD PTR [rbp-0x40]
  424ee7:	mov    rax,QWORD PTR [rbp-0x38]
  424eeb:	mov    ecx,0x17
  424ef0:	mov    rdi,rax
  424ef3:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  424ef8:	jmp    424f4b <flatcc_verify_union_vector_field@@Base+0x11a9>
  424efa:	mov    rdi,QWORD PTR [rbp-0x20]
  424efe:	mov    ecx,DWORD PTR [rbp-0x28]
  424f01:	lea    r8,[rbp-0x2c]
  424f05:	mov    rdx,QWORD PTR [rbp-0x48]
  424f09:	mov    rsi,QWORD PTR [rbp-0x40]
  424f0d:	mov    rax,QWORD PTR [rbp-0x38]
  424f11:	mov    r9,r8
  424f14:	mov    r8,rdi
  424f17:	mov    rdi,rax
  424f1a:	call   42471e <flatcc_verify_union_vector_field@@Base+0x97c>
  424f1f:	cmp    QWORD PTR [rbp-0x48],rax
  424f23:	jne    424f2b <flatcc_verify_union_vector_field@@Base+0x1189>
  424f25:	mov    rax,QWORD PTR [rbp-0x48]
  424f29:	jmp    424f4b <flatcc_verify_union_vector_field@@Base+0x11a9>
  424f2b:	mov    rax,QWORD PTR [rbp-0x58]
  424f2f:	mov    edx,DWORD PTR [rax]
  424f31:	mov    eax,DWORD PTR [rbp-0x2c]
  424f34:	add    edx,eax
  424f36:	mov    rax,QWORD PTR [rbp-0x58]
  424f3a:	mov    DWORD PTR [rax],edx
  424f3c:	mov    eax,DWORD PTR [rbp-0x24]
  424f3f:	test   eax,eax
  424f41:	jne    424e72 <flatcc_verify_union_vector_field@@Base+0x10d0>
  424f47:	mov    rax,QWORD PTR [rbp-0x40]
  424f4b:	mov    rdi,QWORD PTR [rbp-0x8]
  424f4f:	xor    rdi,QWORD PTR fs:0x28
  424f58:	je     424f5f <flatcc_verify_union_vector_field@@Base+0x11bd>
  424f5a:	call   4061a0 <__stack_chk_fail@plt>
  424f5f:	leave  
  424f60:	ret    
  424f61:	endbr64 
  424f65:	push   rbp
  424f66:	mov    rbp,rsp
  424f69:	sub    rsp,0x60
  424f6d:	mov    QWORD PTR [rbp-0x38],rdi
  424f71:	mov    QWORD PTR [rbp-0x40],rsi
  424f75:	mov    QWORD PTR [rbp-0x48],rdx
  424f79:	mov    QWORD PTR [rbp-0x50],rcx
  424f7d:	mov    QWORD PTR [rbp-0x58],r8
  424f81:	mov    rax,QWORD PTR fs:0x28
  424f8a:	mov    QWORD PTR [rbp-0x8],rax
  424f8e:	xor    eax,eax
  424f90:	mov    WORD PTR [rbp-0x2a],0x0
  424f96:	mov    rax,QWORD PTR [rbp-0x58]
  424f9a:	mov    WORD PTR [rax],0x0
  424f9f:	mov    rdx,QWORD PTR [rbp-0x48]
  424fa3:	mov    rcx,QWORD PTR [rbp-0x40]
  424fa7:	mov    rax,QWORD PTR [rbp-0x38]
  424fab:	mov    rsi,rcx
  424fae:	mov    rdi,rax
  424fb1:	call   4242e3 <flatcc_verify_union_vector_field@@Base+0x541>
  424fb6:	mov    QWORD PTR [rbp-0x40],rax
  424fba:	mov    rax,QWORD PTR [rbp-0x40]
  424fbe:	cmp    rax,QWORD PTR [rbp-0x48]
  424fc2:	jne    424fcd <flatcc_verify_union_vector_field@@Base+0x122b>
  424fc4:	mov    rax,QWORD PTR [rbp-0x40]
  424fc8:	jmp    4250a9 <flatcc_verify_union_vector_field@@Base+0x1307>
  424fcd:	mov    rax,QWORD PTR [rbp-0x50]
  424fd1:	mov    QWORD PTR [rbp-0x18],rax
  424fd5:	mov    rax,QWORD PTR [rbp-0x18]
  424fd9:	mov    rax,QWORD PTR [rax]
  424fdc:	mov    rdx,QWORD PTR [rbp-0x40]
  424fe0:	mov    QWORD PTR [rbp-0x10],rdx
  424fe4:	lea    r9,[rbp-0x24]
  424fe8:	lea    r8,[rbp-0x20]
  424fec:	lea    rcx,[rbp-0x28]
  424ff0:	mov    rdx,QWORD PTR [rbp-0x48]
  424ff4:	mov    rsi,QWORD PTR [rbp-0x10]
  424ff8:	mov    rdi,QWORD PTR [rbp-0x38]
  424ffc:	call   rax
  424ffe:	mov    QWORD PTR [rbp-0x40],rax
  425002:	mov    rax,QWORD PTR [rbp-0x40]
  425006:	cmp    rax,QWORD PTR [rbp-0x48]
  42500a:	jne    425015 <flatcc_verify_union_vector_field@@Base+0x1273>
  42500c:	mov    rax,QWORD PTR [rbp-0x40]
  425010:	jmp    4250a9 <flatcc_verify_union_vector_field@@Base+0x1307>
  425015:	mov    rax,QWORD PTR [rbp-0x40]
  425019:	cmp    rax,QWORD PTR [rbp-0x10]
  42501d:	jne    425030 <flatcc_verify_union_vector_field@@Base+0x128e>
  42501f:	add    QWORD PTR [rbp-0x18],0x8
  425024:	mov    rax,QWORD PTR [rbp-0x18]
  425028:	mov    rax,QWORD PTR [rax]
  42502b:	test   rax,rax
  42502e:	jne    424fd5 <flatcc_verify_union_vector_field@@Base+0x1233>
  425030:	mov    rax,QWORD PTR [rbp-0x10]
  425034:	cmp    rax,QWORD PTR [rbp-0x40]
  425038:	jne    425055 <flatcc_verify_union_vector_field@@Base+0x12b3>
  42503a:	mov    rdx,QWORD PTR [rbp-0x48]
  42503e:	mov    rsi,QWORD PTR [rbp-0x40]
  425042:	mov    rax,QWORD PTR [rbp-0x38]
  425046:	mov    ecx,0x17
  42504b:	mov    rdi,rax
  42504e:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  425053:	jmp    4250a9 <flatcc_verify_union_vector_field@@Base+0x1307>
  425055:	mov    rdi,QWORD PTR [rbp-0x20]
  425059:	mov    ecx,DWORD PTR [rbp-0x28]
  42505c:	lea    r8,[rbp-0x2a]
  425060:	mov    rdx,QWORD PTR [rbp-0x48]
  425064:	mov    rsi,QWORD PTR [rbp-0x40]
  425068:	mov    rax,QWORD PTR [rbp-0x38]
  42506c:	mov    r9,r8
  42506f:	mov    r8,rdi
  425072:	mov    rdi,rax
  425075:	call   424796 <flatcc_verify_union_vector_field@@Base+0x9f4>
  42507a:	cmp    QWORD PTR [rbp-0x48],rax
  42507e:	jne    425086 <flatcc_verify_union_vector_field@@Base+0x12e4>
  425080:	mov    rax,QWORD PTR [rbp-0x48]
  425084:	jmp    4250a9 <flatcc_verify_union_vector_field@@Base+0x1307>
  425086:	mov    rax,QWORD PTR [rbp-0x58]
  42508a:	movzx  edx,WORD PTR [rax]
  42508d:	movzx  eax,WORD PTR [rbp-0x2a]
  425091:	add    eax,edx
  425093:	mov    rdx,QWORD PTR [rbp-0x58]
  425097:	mov    WORD PTR [rdx],ax
  42509a:	mov    eax,DWORD PTR [rbp-0x24]
  42509d:	test   eax,eax
  42509f:	jne    424fcd <flatcc_verify_union_vector_field@@Base+0x122b>
  4250a5:	mov    rax,QWORD PTR [rbp-0x40]
  4250a9:	mov    rdi,QWORD PTR [rbp-0x8]
  4250ad:	xor    rdi,QWORD PTR fs:0x28
  4250b6:	je     4250bd <flatcc_verify_union_vector_field@@Base+0x131b>
  4250b8:	call   4061a0 <__stack_chk_fail@plt>
  4250bd:	leave  
  4250be:	ret    
  4250bf:	endbr64 
  4250c3:	push   rbp
  4250c4:	mov    rbp,rsp
  4250c7:	sub    rsp,0x60
  4250cb:	mov    QWORD PTR [rbp-0x38],rdi
  4250cf:	mov    QWORD PTR [rbp-0x40],rsi
  4250d3:	mov    QWORD PTR [rbp-0x48],rdx
  4250d7:	mov    QWORD PTR [rbp-0x50],rcx
  4250db:	mov    QWORD PTR [rbp-0x58],r8
  4250df:	mov    rax,QWORD PTR fs:0x28
  4250e8:	mov    QWORD PTR [rbp-0x8],rax
  4250ec:	xor    eax,eax
  4250ee:	mov    BYTE PTR [rbp-0x29],0x0
  4250f2:	mov    rax,QWORD PTR [rbp-0x58]
  4250f6:	mov    BYTE PTR [rax],0x0
  4250f9:	mov    rdx,QWORD PTR [rbp-0x48]
  4250fd:	mov    rcx,QWORD PTR [rbp-0x40]
  425101:	mov    rax,QWORD PTR [rbp-0x38]
  425105:	mov    rsi,rcx
  425108:	mov    rdi,rax
  42510b:	call   4242e3 <flatcc_verify_union_vector_field@@Base+0x541>
  425110:	mov    QWORD PTR [rbp-0x40],rax
  425114:	mov    rax,QWORD PTR [rbp-0x40]
  425118:	cmp    rax,QWORD PTR [rbp-0x48]
  42511c:	jne    425127 <flatcc_verify_union_vector_field@@Base+0x1385>
  42511e:	mov    rax,QWORD PTR [rbp-0x40]
  425122:	jmp    425202 <flatcc_verify_union_vector_field@@Base+0x1460>
  425127:	mov    rax,QWORD PTR [rbp-0x50]
  42512b:	mov    QWORD PTR [rbp-0x18],rax
  42512f:	mov    rax,QWORD PTR [rbp-0x18]
  425133:	mov    rax,QWORD PTR [rax]
  425136:	mov    rdx,QWORD PTR [rbp-0x40]
  42513a:	mov    QWORD PTR [rbp-0x10],rdx
  42513e:	lea    r9,[rbp-0x24]
  425142:	lea    r8,[rbp-0x20]
  425146:	lea    rcx,[rbp-0x28]
  42514a:	mov    rdx,QWORD PTR [rbp-0x48]
  42514e:	mov    rsi,QWORD PTR [rbp-0x10]
  425152:	mov    rdi,QWORD PTR [rbp-0x38]
  425156:	call   rax
  425158:	mov    QWORD PTR [rbp-0x40],rax
  42515c:	mov    rax,QWORD PTR [rbp-0x40]
  425160:	cmp    rax,QWORD PTR [rbp-0x48]
  425164:	jne    42516f <flatcc_verify_union_vector_field@@Base+0x13cd>
  425166:	mov    rax,QWORD PTR [rbp-0x40]
  42516a:	jmp    425202 <flatcc_verify_union_vector_field@@Base+0x1460>
  42516f:	mov    rax,QWORD PTR [rbp-0x40]
  425173:	cmp    rax,QWORD PTR [rbp-0x10]
  425177:	jne    42518a <flatcc_verify_union_vector_field@@Base+0x13e8>
  425179:	add    QWORD PTR [rbp-0x18],0x8
  42517e:	mov    rax,QWORD PTR [rbp-0x18]
  425182:	mov    rax,QWORD PTR [rax]
  425185:	test   rax,rax
  425188:	jne    42512f <flatcc_verify_union_vector_field@@Base+0x138d>
  42518a:	mov    rax,QWORD PTR [rbp-0x10]
  42518e:	cmp    rax,QWORD PTR [rbp-0x40]
  425192:	jne    4251af <flatcc_verify_union_vector_field@@Base+0x140d>
  425194:	mov    rdx,QWORD PTR [rbp-0x48]
  425198:	mov    rsi,QWORD PTR [rbp-0x40]
  42519c:	mov    rax,QWORD PTR [rbp-0x38]
  4251a0:	mov    ecx,0x17
  4251a5:	mov    rdi,rax
  4251a8:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4251ad:	jmp    425202 <flatcc_verify_union_vector_field@@Base+0x1460>
  4251af:	mov    rdi,QWORD PTR [rbp-0x20]
  4251b3:	mov    ecx,DWORD PTR [rbp-0x28]
  4251b6:	lea    r8,[rbp-0x29]
  4251ba:	mov    rdx,QWORD PTR [rbp-0x48]
  4251be:	mov    rsi,QWORD PTR [rbp-0x40]
  4251c2:	mov    rax,QWORD PTR [rbp-0x38]
  4251c6:	mov    r9,r8
  4251c9:	mov    r8,rdi
  4251cc:	mov    rdi,rax
  4251cf:	call   42480e <flatcc_verify_union_vector_field@@Base+0xa6c>
  4251d4:	cmp    QWORD PTR [rbp-0x48],rax
  4251d8:	jne    4251e0 <flatcc_verify_union_vector_field@@Base+0x143e>
  4251da:	mov    rax,QWORD PTR [rbp-0x48]
  4251de:	jmp    425202 <flatcc_verify_union_vector_field@@Base+0x1460>
  4251e0:	mov    rax,QWORD PTR [rbp-0x58]
  4251e4:	movzx  edx,BYTE PTR [rax]
  4251e7:	movzx  eax,BYTE PTR [rbp-0x29]
  4251eb:	add    eax,edx
  4251ed:	mov    rdx,QWORD PTR [rbp-0x58]
  4251f1:	mov    BYTE PTR [rdx],al
  4251f3:	mov    eax,DWORD PTR [rbp-0x24]
  4251f6:	test   eax,eax
  4251f8:	jne    425127 <flatcc_verify_union_vector_field@@Base+0x1385>
  4251fe:	mov    rax,QWORD PTR [rbp-0x40]
  425202:	mov    rdi,QWORD PTR [rbp-0x8]
  425206:	xor    rdi,QWORD PTR fs:0x28
  42520f:	je     425216 <flatcc_verify_union_vector_field@@Base+0x1474>
  425211:	call   4061a0 <__stack_chk_fail@plt>
  425216:	leave  
  425217:	ret    
  425218:	endbr64 
  42521c:	push   rbp
  42521d:	mov    rbp,rsp
  425220:	sub    rsp,0x60
  425224:	mov    QWORD PTR [rbp-0x38],rdi
  425228:	mov    QWORD PTR [rbp-0x40],rsi
  42522c:	mov    QWORD PTR [rbp-0x48],rdx
  425230:	mov    QWORD PTR [rbp-0x50],rcx
  425234:	mov    QWORD PTR [rbp-0x58],r8
  425238:	mov    rax,QWORD PTR fs:0x28
  425241:	mov    QWORD PTR [rbp-0x8],rax
  425245:	xor    eax,eax
  425247:	mov    QWORD PTR [rbp-0x28],0x0
  42524f:	mov    rax,QWORD PTR [rbp-0x58]
  425253:	mov    QWORD PTR [rax],0x0
  42525a:	mov    rdx,QWORD PTR [rbp-0x48]
  42525e:	mov    rcx,QWORD PTR [rbp-0x40]
  425262:	mov    rax,QWORD PTR [rbp-0x38]
  425266:	mov    rsi,rcx
  425269:	mov    rdi,rax
  42526c:	call   4242e3 <flatcc_verify_union_vector_field@@Base+0x541>
  425271:	mov    QWORD PTR [rbp-0x40],rax
  425275:	mov    rax,QWORD PTR [rbp-0x40]
  425279:	cmp    rax,QWORD PTR [rbp-0x48]
  42527d:	jne    425288 <flatcc_verify_union_vector_field@@Base+0x14e6>
  42527f:	mov    rax,QWORD PTR [rbp-0x40]
  425283:	jmp    425365 <flatcc_verify_union_vector_field@@Base+0x15c3>
  425288:	mov    rax,QWORD PTR [rbp-0x50]
  42528c:	mov    QWORD PTR [rbp-0x18],rax
  425290:	mov    rax,QWORD PTR [rbp-0x18]
  425294:	mov    rax,QWORD PTR [rax]
  425297:	mov    rdx,QWORD PTR [rbp-0x40]
  42529b:	mov    QWORD PTR [rbp-0x10],rdx
  42529f:	lea    r9,[rbp-0x2c]
  4252a3:	lea    r8,[rbp-0x20]
  4252a7:	lea    rcx,[rbp-0x30]
  4252ab:	mov    rdx,QWORD PTR [rbp-0x48]
  4252af:	mov    rsi,QWORD PTR [rbp-0x10]
  4252b3:	mov    rdi,QWORD PTR [rbp-0x38]
  4252b7:	call   rax
  4252b9:	mov    QWORD PTR [rbp-0x40],rax
  4252bd:	mov    rax,QWORD PTR [rbp-0x40]
  4252c1:	cmp    rax,QWORD PTR [rbp-0x48]
  4252c5:	jne    4252d0 <flatcc_verify_union_vector_field@@Base+0x152e>
  4252c7:	mov    rax,QWORD PTR [rbp-0x40]
  4252cb:	jmp    425365 <flatcc_verify_union_vector_field@@Base+0x15c3>
  4252d0:	mov    rax,QWORD PTR [rbp-0x40]
  4252d4:	cmp    rax,QWORD PTR [rbp-0x10]
  4252d8:	jne    4252eb <flatcc_verify_union_vector_field@@Base+0x1549>
  4252da:	add    QWORD PTR [rbp-0x18],0x8
  4252df:	mov    rax,QWORD PTR [rbp-0x18]
  4252e3:	mov    rax,QWORD PTR [rax]
  4252e6:	test   rax,rax
  4252e9:	jne    425290 <flatcc_verify_union_vector_field@@Base+0x14ee>
  4252eb:	mov    rax,QWORD PTR [rbp-0x10]
  4252ef:	cmp    rax,QWORD PTR [rbp-0x40]
  4252f3:	jne    425310 <flatcc_verify_union_vector_field@@Base+0x156e>
  4252f5:	mov    rdx,QWORD PTR [rbp-0x48]
  4252f9:	mov    rsi,QWORD PTR [rbp-0x40]
  4252fd:	mov    rax,QWORD PTR [rbp-0x38]
  425301:	mov    ecx,0x17
  425306:	mov    rdi,rax
  425309:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  42530e:	jmp    425365 <flatcc_verify_union_vector_field@@Base+0x15c3>
  425310:	mov    rdi,QWORD PTR [rbp-0x20]
  425314:	mov    ecx,DWORD PTR [rbp-0x30]
  425317:	lea    r8,[rbp-0x28]
  42531b:	mov    rdx,QWORD PTR [rbp-0x48]
  42531f:	mov    rsi,QWORD PTR [rbp-0x40]
  425323:	mov    rax,QWORD PTR [rbp-0x38]
  425327:	mov    r9,r8
  42532a:	mov    r8,rdi
  42532d:	mov    rdi,rax
  425330:	call   424885 <flatcc_verify_union_vector_field@@Base+0xae3>
  425335:	cmp    QWORD PTR [rbp-0x48],rax
  425339:	jne    425341 <flatcc_verify_union_vector_field@@Base+0x159f>
  42533b:	mov    rax,QWORD PTR [rbp-0x48]
  42533f:	jmp    425365 <flatcc_verify_union_vector_field@@Base+0x15c3>
  425341:	mov    rax,QWORD PTR [rbp-0x58]
  425345:	mov    rdx,QWORD PTR [rax]
  425348:	mov    rax,QWORD PTR [rbp-0x28]
  42534c:	add    rdx,rax
  42534f:	mov    rax,QWORD PTR [rbp-0x58]
  425353:	mov    QWORD PTR [rax],rdx
  425356:	mov    eax,DWORD PTR [rbp-0x2c]
  425359:	test   eax,eax
  42535b:	jne    425288 <flatcc_verify_union_vector_field@@Base+0x14e6>
  425361:	mov    rax,QWORD PTR [rbp-0x40]
  425365:	mov    rdi,QWORD PTR [rbp-0x8]
  425369:	xor    rdi,QWORD PTR fs:0x28
  425372:	je     425379 <flatcc_verify_union_vector_field@@Base+0x15d7>
  425374:	call   4061a0 <__stack_chk_fail@plt>
  425379:	leave  
  42537a:	ret    
  42537b:	endbr64 
  42537f:	push   rbp
  425380:	mov    rbp,rsp
  425383:	sub    rsp,0x60
  425387:	mov    QWORD PTR [rbp-0x38],rdi
  42538b:	mov    QWORD PTR [rbp-0x40],rsi
  42538f:	mov    QWORD PTR [rbp-0x48],rdx
  425393:	mov    QWORD PTR [rbp-0x50],rcx
  425397:	mov    QWORD PTR [rbp-0x58],r8
  42539b:	mov    rax,QWORD PTR fs:0x28
  4253a4:	mov    QWORD PTR [rbp-0x8],rax
  4253a8:	xor    eax,eax
  4253aa:	mov    DWORD PTR [rbp-0x2c],0x0
  4253b1:	mov    rax,QWORD PTR [rbp-0x58]
  4253b5:	mov    DWORD PTR [rax],0x0
  4253bb:	mov    rdx,QWORD PTR [rbp-0x48]
  4253bf:	mov    rcx,QWORD PTR [rbp-0x40]
  4253c3:	mov    rax,QWORD PTR [rbp-0x38]
  4253c7:	mov    rsi,rcx
  4253ca:	mov    rdi,rax
  4253cd:	call   4242e3 <flatcc_verify_union_vector_field@@Base+0x541>
  4253d2:	mov    QWORD PTR [rbp-0x40],rax
  4253d6:	mov    rax,QWORD PTR [rbp-0x40]
  4253da:	cmp    rax,QWORD PTR [rbp-0x48]
  4253de:	jne    4253e9 <flatcc_verify_union_vector_field@@Base+0x1647>
  4253e0:	mov    rax,QWORD PTR [rbp-0x40]
  4253e4:	jmp    4254c2 <flatcc_verify_union_vector_field@@Base+0x1720>
  4253e9:	mov    rax,QWORD PTR [rbp-0x50]
  4253ed:	mov    QWORD PTR [rbp-0x18],rax
  4253f1:	mov    rax,QWORD PTR [rbp-0x18]
  4253f5:	mov    rax,QWORD PTR [rax]
  4253f8:	mov    rdx,QWORD PTR [rbp-0x40]
  4253fc:	mov    QWORD PTR [rbp-0x10],rdx
  425400:	lea    r9,[rbp-0x24]
  425404:	lea    r8,[rbp-0x20]
  425408:	lea    rcx,[rbp-0x28]
  42540c:	mov    rdx,QWORD PTR [rbp-0x48]
  425410:	mov    rsi,QWORD PTR [rbp-0x10]
  425414:	mov    rdi,QWORD PTR [rbp-0x38]
  425418:	call   rax
  42541a:	mov    QWORD PTR [rbp-0x40],rax
  42541e:	mov    rax,QWORD PTR [rbp-0x40]
  425422:	cmp    rax,QWORD PTR [rbp-0x48]
  425426:	jne    425431 <flatcc_verify_union_vector_field@@Base+0x168f>
  425428:	mov    rax,QWORD PTR [rbp-0x40]
  42542c:	jmp    4254c2 <flatcc_verify_union_vector_field@@Base+0x1720>
  425431:	mov    rax,QWORD PTR [rbp-0x40]
  425435:	cmp    rax,QWORD PTR [rbp-0x10]
  425439:	jne    42544c <flatcc_verify_union_vector_field@@Base+0x16aa>
  42543b:	add    QWORD PTR [rbp-0x18],0x8
  425440:	mov    rax,QWORD PTR [rbp-0x18]
  425444:	mov    rax,QWORD PTR [rax]
  425447:	test   rax,rax
  42544a:	jne    4253f1 <flatcc_verify_union_vector_field@@Base+0x164f>
  42544c:	mov    rax,QWORD PTR [rbp-0x10]
  425450:	cmp    rax,QWORD PTR [rbp-0x40]
  425454:	jne    425471 <flatcc_verify_union_vector_field@@Base+0x16cf>
  425456:	mov    rdx,QWORD PTR [rbp-0x48]
  42545a:	mov    rsi,QWORD PTR [rbp-0x40]
  42545e:	mov    rax,QWORD PTR [rbp-0x38]
  425462:	mov    ecx,0x17
  425467:	mov    rdi,rax
  42546a:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  42546f:	jmp    4254c2 <flatcc_verify_union_vector_field@@Base+0x1720>
  425471:	mov    rdi,QWORD PTR [rbp-0x20]
  425475:	mov    ecx,DWORD PTR [rbp-0x28]
  425478:	lea    r8,[rbp-0x2c]
  42547c:	mov    rdx,QWORD PTR [rbp-0x48]
  425480:	mov    rsi,QWORD PTR [rbp-0x40]
  425484:	mov    rax,QWORD PTR [rbp-0x38]
  425488:	mov    r9,r8
  42548b:	mov    r8,rdi
  42548e:	mov    rdi,rax
  425491:	call   42491d <flatcc_verify_union_vector_field@@Base+0xb7b>
  425496:	cmp    QWORD PTR [rbp-0x48],rax
  42549a:	jne    4254a2 <flatcc_verify_union_vector_field@@Base+0x1700>
  42549c:	mov    rax,QWORD PTR [rbp-0x48]
  4254a0:	jmp    4254c2 <flatcc_verify_union_vector_field@@Base+0x1720>
  4254a2:	mov    rax,QWORD PTR [rbp-0x58]
  4254a6:	mov    edx,DWORD PTR [rax]
  4254a8:	mov    eax,DWORD PTR [rbp-0x2c]
  4254ab:	add    edx,eax
  4254ad:	mov    rax,QWORD PTR [rbp-0x58]
  4254b1:	mov    DWORD PTR [rax],edx
  4254b3:	mov    eax,DWORD PTR [rbp-0x24]
  4254b6:	test   eax,eax
  4254b8:	jne    4253e9 <flatcc_verify_union_vector_field@@Base+0x1647>
  4254be:	mov    rax,QWORD PTR [rbp-0x40]
  4254c2:	mov    rdi,QWORD PTR [rbp-0x8]
  4254c6:	xor    rdi,QWORD PTR fs:0x28
  4254cf:	je     4254d6 <flatcc_verify_union_vector_field@@Base+0x1734>
  4254d1:	call   4061a0 <__stack_chk_fail@plt>
  4254d6:	leave  
  4254d7:	ret    
  4254d8:	endbr64 
  4254dc:	push   rbp
  4254dd:	mov    rbp,rsp
  4254e0:	sub    rsp,0x60
  4254e4:	mov    QWORD PTR [rbp-0x38],rdi
  4254e8:	mov    QWORD PTR [rbp-0x40],rsi
  4254ec:	mov    QWORD PTR [rbp-0x48],rdx
  4254f0:	mov    QWORD PTR [rbp-0x50],rcx
  4254f4:	mov    QWORD PTR [rbp-0x58],r8
  4254f8:	mov    rax,QWORD PTR fs:0x28
  425501:	mov    QWORD PTR [rbp-0x8],rax
  425505:	xor    eax,eax
  425507:	mov    WORD PTR [rbp-0x2a],0x0
  42550d:	mov    rax,QWORD PTR [rbp-0x58]
  425511:	mov    WORD PTR [rax],0x0
  425516:	mov    rdx,QWORD PTR [rbp-0x48]
  42551a:	mov    rcx,QWORD PTR [rbp-0x40]
  42551e:	mov    rax,QWORD PTR [rbp-0x38]
  425522:	mov    rsi,rcx
  425525:	mov    rdi,rax
  425528:	call   4242e3 <flatcc_verify_union_vector_field@@Base+0x541>
  42552d:	mov    QWORD PTR [rbp-0x40],rax
  425531:	mov    rax,QWORD PTR [rbp-0x40]
  425535:	cmp    rax,QWORD PTR [rbp-0x48]
  425539:	jne    425544 <flatcc_verify_union_vector_field@@Base+0x17a2>
  42553b:	mov    rax,QWORD PTR [rbp-0x40]
  42553f:	jmp    425624 <flatcc_verify_union_vector_field@@Base+0x1882>
  425544:	mov    rax,QWORD PTR [rbp-0x50]
  425548:	mov    QWORD PTR [rbp-0x18],rax
  42554c:	mov    rax,QWORD PTR [rbp-0x18]
  425550:	mov    rax,QWORD PTR [rax]
  425553:	mov    rdx,QWORD PTR [rbp-0x40]
  425557:	mov    QWORD PTR [rbp-0x10],rdx
  42555b:	lea    r9,[rbp-0x24]
  42555f:	lea    r8,[rbp-0x20]
  425563:	lea    rcx,[rbp-0x28]
  425567:	mov    rdx,QWORD PTR [rbp-0x48]
  42556b:	mov    rsi,QWORD PTR [rbp-0x10]
  42556f:	mov    rdi,QWORD PTR [rbp-0x38]
  425573:	call   rax
  425575:	mov    QWORD PTR [rbp-0x40],rax
  425579:	mov    rax,QWORD PTR [rbp-0x40]
  42557d:	cmp    rax,QWORD PTR [rbp-0x48]
  425581:	jne    42558c <flatcc_verify_union_vector_field@@Base+0x17ea>
  425583:	mov    rax,QWORD PTR [rbp-0x40]
  425587:	jmp    425624 <flatcc_verify_union_vector_field@@Base+0x1882>
  42558c:	mov    rax,QWORD PTR [rbp-0x40]
  425590:	cmp    rax,QWORD PTR [rbp-0x10]
  425594:	jne    4255a7 <flatcc_verify_union_vector_field@@Base+0x1805>
  425596:	add    QWORD PTR [rbp-0x18],0x8
  42559b:	mov    rax,QWORD PTR [rbp-0x18]
  42559f:	mov    rax,QWORD PTR [rax]
  4255a2:	test   rax,rax
  4255a5:	jne    42554c <flatcc_verify_union_vector_field@@Base+0x17aa>
  4255a7:	mov    rax,QWORD PTR [rbp-0x10]
  4255ab:	cmp    rax,QWORD PTR [rbp-0x40]
  4255af:	jne    4255cc <flatcc_verify_union_vector_field@@Base+0x182a>
  4255b1:	mov    rdx,QWORD PTR [rbp-0x48]
  4255b5:	mov    rsi,QWORD PTR [rbp-0x40]
  4255b9:	mov    rax,QWORD PTR [rbp-0x38]
  4255bd:	mov    ecx,0x17
  4255c2:	mov    rdi,rax
  4255c5:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4255ca:	jmp    425624 <flatcc_verify_union_vector_field@@Base+0x1882>
  4255cc:	mov    rdi,QWORD PTR [rbp-0x20]
  4255d0:	mov    ecx,DWORD PTR [rbp-0x28]
  4255d3:	lea    r8,[rbp-0x2a]
  4255d7:	mov    rdx,QWORD PTR [rbp-0x48]
  4255db:	mov    rsi,QWORD PTR [rbp-0x40]
  4255df:	mov    rax,QWORD PTR [rbp-0x38]
  4255e3:	mov    r9,r8
  4255e6:	mov    r8,rdi
  4255e9:	mov    rdi,rax
  4255ec:	call   4249af <flatcc_verify_union_vector_field@@Base+0xc0d>
  4255f1:	cmp    QWORD PTR [rbp-0x48],rax
  4255f5:	jne    4255fd <flatcc_verify_union_vector_field@@Base+0x185b>
  4255f7:	mov    rax,QWORD PTR [rbp-0x48]
  4255fb:	jmp    425624 <flatcc_verify_union_vector_field@@Base+0x1882>
  4255fd:	mov    rax,QWORD PTR [rbp-0x58]
  425601:	movzx  eax,WORD PTR [rax]
  425604:	mov    edx,eax
  425606:	movzx  eax,WORD PTR [rbp-0x2a]
  42560a:	add    eax,edx
  42560c:	mov    edx,eax
  42560e:	mov    rax,QWORD PTR [rbp-0x58]
  425612:	mov    WORD PTR [rax],dx
  425615:	mov    eax,DWORD PTR [rbp-0x24]
  425618:	test   eax,eax
  42561a:	jne    425544 <flatcc_verify_union_vector_field@@Base+0x17a2>
  425620:	mov    rax,QWORD PTR [rbp-0x40]
  425624:	mov    rdi,QWORD PTR [rbp-0x8]
  425628:	xor    rdi,QWORD PTR fs:0x28
  425631:	je     425638 <flatcc_verify_union_vector_field@@Base+0x1896>
  425633:	call   4061a0 <__stack_chk_fail@plt>
  425638:	leave  
  425639:	ret    
  42563a:	endbr64 
  42563e:	push   rbp
  42563f:	mov    rbp,rsp
  425642:	sub    rsp,0x60
  425646:	mov    QWORD PTR [rbp-0x38],rdi
  42564a:	mov    QWORD PTR [rbp-0x40],rsi
  42564e:	mov    QWORD PTR [rbp-0x48],rdx
  425652:	mov    QWORD PTR [rbp-0x50],rcx
  425656:	mov    QWORD PTR [rbp-0x58],r8
  42565a:	mov    rax,QWORD PTR fs:0x28
  425663:	mov    QWORD PTR [rbp-0x8],rax
  425667:	xor    eax,eax
  425669:	mov    BYTE PTR [rbp-0x29],0x0
  42566d:	mov    rax,QWORD PTR [rbp-0x58]
  425671:	mov    BYTE PTR [rax],0x0
  425674:	mov    rdx,QWORD PTR [rbp-0x48]
  425678:	mov    rcx,QWORD PTR [rbp-0x40]
  42567c:	mov    rax,QWORD PTR [rbp-0x38]
  425680:	mov    rsi,rcx
  425683:	mov    rdi,rax
  425686:	call   4242e3 <flatcc_verify_union_vector_field@@Base+0x541>
  42568b:	mov    QWORD PTR [rbp-0x40],rax
  42568f:	mov    rax,QWORD PTR [rbp-0x40]
  425693:	cmp    rax,QWORD PTR [rbp-0x48]
  425697:	jne    4256a2 <flatcc_verify_union_vector_field@@Base+0x1900>
  425699:	mov    rax,QWORD PTR [rbp-0x40]
  42569d:	jmp    425781 <flatcc_verify_union_vector_field@@Base+0x19df>
  4256a2:	mov    rax,QWORD PTR [rbp-0x50]
  4256a6:	mov    QWORD PTR [rbp-0x18],rax
  4256aa:	mov    rax,QWORD PTR [rbp-0x18]
  4256ae:	mov    rax,QWORD PTR [rax]
  4256b1:	mov    rdx,QWORD PTR [rbp-0x40]
  4256b5:	mov    QWORD PTR [rbp-0x10],rdx
  4256b9:	lea    r9,[rbp-0x24]
  4256bd:	lea    r8,[rbp-0x20]
  4256c1:	lea    rcx,[rbp-0x28]
  4256c5:	mov    rdx,QWORD PTR [rbp-0x48]
  4256c9:	mov    rsi,QWORD PTR [rbp-0x10]
  4256cd:	mov    rdi,QWORD PTR [rbp-0x38]
  4256d1:	call   rax
  4256d3:	mov    QWORD PTR [rbp-0x40],rax
  4256d7:	mov    rax,QWORD PTR [rbp-0x40]
  4256db:	cmp    rax,QWORD PTR [rbp-0x48]
  4256df:	jne    4256ea <flatcc_verify_union_vector_field@@Base+0x1948>
  4256e1:	mov    rax,QWORD PTR [rbp-0x40]
  4256e5:	jmp    425781 <flatcc_verify_union_vector_field@@Base+0x19df>
  4256ea:	mov    rax,QWORD PTR [rbp-0x40]
  4256ee:	cmp    rax,QWORD PTR [rbp-0x10]
  4256f2:	jne    425705 <flatcc_verify_union_vector_field@@Base+0x1963>
  4256f4:	add    QWORD PTR [rbp-0x18],0x8
  4256f9:	mov    rax,QWORD PTR [rbp-0x18]
  4256fd:	mov    rax,QWORD PTR [rax]
  425700:	test   rax,rax
  425703:	jne    4256aa <flatcc_verify_union_vector_field@@Base+0x1908>
  425705:	mov    rax,QWORD PTR [rbp-0x10]
  425709:	cmp    rax,QWORD PTR [rbp-0x40]
  42570d:	jne    42572a <flatcc_verify_union_vector_field@@Base+0x1988>
  42570f:	mov    rdx,QWORD PTR [rbp-0x48]
  425713:	mov    rsi,QWORD PTR [rbp-0x40]
  425717:	mov    rax,QWORD PTR [rbp-0x38]
  42571b:	mov    ecx,0x17
  425720:	mov    rdi,rax
  425723:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  425728:	jmp    425781 <flatcc_verify_union_vector_field@@Base+0x19df>
  42572a:	mov    rdi,QWORD PTR [rbp-0x20]
  42572e:	mov    ecx,DWORD PTR [rbp-0x28]
  425731:	lea    r8,[rbp-0x29]
  425735:	mov    rdx,QWORD PTR [rbp-0x48]
  425739:	mov    rsi,QWORD PTR [rbp-0x40]
  42573d:	mov    rax,QWORD PTR [rbp-0x38]
  425741:	mov    r9,r8
  425744:	mov    r8,rdi
  425747:	mov    rdi,rax
  42574a:	call   424a42 <flatcc_verify_union_vector_field@@Base+0xca0>
  42574f:	cmp    QWORD PTR [rbp-0x48],rax
  425753:	jne    42575b <flatcc_verify_union_vector_field@@Base+0x19b9>
  425755:	mov    rax,QWORD PTR [rbp-0x48]
  425759:	jmp    425781 <flatcc_verify_union_vector_field@@Base+0x19df>
  42575b:	mov    rax,QWORD PTR [rbp-0x58]
  42575f:	movzx  eax,BYTE PTR [rax]
  425762:	mov    edx,eax
  425764:	movzx  eax,BYTE PTR [rbp-0x29]
  425768:	add    eax,edx
  42576a:	mov    edx,eax
  42576c:	mov    rax,QWORD PTR [rbp-0x58]
  425770:	mov    BYTE PTR [rax],dl
  425772:	mov    eax,DWORD PTR [rbp-0x24]
  425775:	test   eax,eax
  425777:	jne    4256a2 <flatcc_verify_union_vector_field@@Base+0x1900>
  42577d:	mov    rax,QWORD PTR [rbp-0x40]
  425781:	mov    rdi,QWORD PTR [rbp-0x8]
  425785:	xor    rdi,QWORD PTR fs:0x28
  42578e:	je     425795 <flatcc_verify_union_vector_field@@Base+0x19f3>
  425790:	call   4061a0 <__stack_chk_fail@plt>
  425795:	leave  
  425796:	ret    
  425797:	endbr64 
  42579b:	push   rbp
  42579c:	mov    rbp,rsp
  42579f:	sub    rsp,0x60
  4257a3:	mov    QWORD PTR [rbp-0x38],rdi
  4257a7:	mov    QWORD PTR [rbp-0x40],rsi
  4257ab:	mov    QWORD PTR [rbp-0x48],rdx
  4257af:	mov    QWORD PTR [rbp-0x50],rcx
  4257b3:	mov    QWORD PTR [rbp-0x58],r8
  4257b7:	mov    rax,QWORD PTR fs:0x28
  4257c0:	mov    QWORD PTR [rbp-0x8],rax
  4257c4:	xor    eax,eax
  4257c6:	mov    BYTE PTR [rbp-0x29],0x0
  4257ca:	mov    rax,QWORD PTR [rbp-0x58]
  4257ce:	mov    BYTE PTR [rax],0x0
  4257d1:	mov    rdx,QWORD PTR [rbp-0x48]
  4257d5:	mov    rcx,QWORD PTR [rbp-0x40]
  4257d9:	mov    rax,QWORD PTR [rbp-0x38]
  4257dd:	mov    rsi,rcx
  4257e0:	mov    rdi,rax
  4257e3:	call   4242e3 <flatcc_verify_union_vector_field@@Base+0x541>
  4257e8:	mov    QWORD PTR [rbp-0x40],rax
  4257ec:	mov    rax,QWORD PTR [rbp-0x40]
  4257f0:	cmp    rax,QWORD PTR [rbp-0x48]
  4257f4:	jne    4257ff <flatcc_verify_union_vector_field@@Base+0x1a5d>
  4257f6:	mov    rax,QWORD PTR [rbp-0x40]
  4257fa:	jmp    4258da <flatcc_verify_union_vector_field@@Base+0x1b38>
  4257ff:	mov    rax,QWORD PTR [rbp-0x50]
  425803:	mov    QWORD PTR [rbp-0x18],rax
  425807:	mov    rax,QWORD PTR [rbp-0x18]
  42580b:	mov    rax,QWORD PTR [rax]
  42580e:	mov    rdx,QWORD PTR [rbp-0x40]
  425812:	mov    QWORD PTR [rbp-0x10],rdx
  425816:	lea    r9,[rbp-0x24]
  42581a:	lea    r8,[rbp-0x20]
  42581e:	lea    rcx,[rbp-0x28]
  425822:	mov    rdx,QWORD PTR [rbp-0x48]
  425826:	mov    rsi,QWORD PTR [rbp-0x10]
  42582a:	mov    rdi,QWORD PTR [rbp-0x38]
  42582e:	call   rax
  425830:	mov    QWORD PTR [rbp-0x40],rax
  425834:	mov    rax,QWORD PTR [rbp-0x40]
  425838:	cmp    rax,QWORD PTR [rbp-0x48]
  42583c:	jne    425847 <flatcc_verify_union_vector_field@@Base+0x1aa5>
  42583e:	mov    rax,QWORD PTR [rbp-0x40]
  425842:	jmp    4258da <flatcc_verify_union_vector_field@@Base+0x1b38>
  425847:	mov    rax,QWORD PTR [rbp-0x40]
  42584b:	cmp    rax,QWORD PTR [rbp-0x10]
  42584f:	jne    425862 <flatcc_verify_union_vector_field@@Base+0x1ac0>
  425851:	add    QWORD PTR [rbp-0x18],0x8
  425856:	mov    rax,QWORD PTR [rbp-0x18]
  42585a:	mov    rax,QWORD PTR [rax]
  42585d:	test   rax,rax
  425860:	jne    425807 <flatcc_verify_union_vector_field@@Base+0x1a65>
  425862:	mov    rax,QWORD PTR [rbp-0x10]
  425866:	cmp    rax,QWORD PTR [rbp-0x40]
  42586a:	jne    425887 <flatcc_verify_union_vector_field@@Base+0x1ae5>
  42586c:	mov    rdx,QWORD PTR [rbp-0x48]
  425870:	mov    rsi,QWORD PTR [rbp-0x40]
  425874:	mov    rax,QWORD PTR [rbp-0x38]
  425878:	mov    ecx,0x17
  42587d:	mov    rdi,rax
  425880:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  425885:	jmp    4258da <flatcc_verify_union_vector_field@@Base+0x1b38>
  425887:	mov    rdi,QWORD PTR [rbp-0x20]
  42588b:	mov    ecx,DWORD PTR [rbp-0x28]
  42588e:	lea    r8,[rbp-0x29]
  425892:	mov    rdx,QWORD PTR [rbp-0x48]
  425896:	mov    rsi,QWORD PTR [rbp-0x40]
  42589a:	mov    rax,QWORD PTR [rbp-0x38]
  42589e:	mov    r9,r8
  4258a1:	mov    r8,rdi
  4258a4:	mov    rdi,rax
  4258a7:	call   4246c8 <flatcc_verify_union_vector_field@@Base+0x926>
  4258ac:	cmp    QWORD PTR [rbp-0x48],rax
  4258b0:	jne    4258b8 <flatcc_verify_union_vector_field@@Base+0x1b16>
  4258b2:	mov    rax,QWORD PTR [rbp-0x48]
  4258b6:	jmp    4258da <flatcc_verify_union_vector_field@@Base+0x1b38>
  4258b8:	mov    rax,QWORD PTR [rbp-0x58]
  4258bc:	movzx  edx,BYTE PTR [rax]
  4258bf:	movzx  eax,BYTE PTR [rbp-0x29]
  4258c3:	add    eax,edx
  4258c5:	mov    rdx,QWORD PTR [rbp-0x58]
  4258c9:	mov    BYTE PTR [rdx],al
  4258cb:	mov    eax,DWORD PTR [rbp-0x24]
  4258ce:	test   eax,eax
  4258d0:	jne    4257ff <flatcc_verify_union_vector_field@@Base+0x1a5d>
  4258d6:	mov    rax,QWORD PTR [rbp-0x40]
  4258da:	mov    rdi,QWORD PTR [rbp-0x8]
  4258de:	xor    rdi,QWORD PTR fs:0x28
  4258e7:	je     4258ee <flatcc_verify_union_vector_field@@Base+0x1b4c>
  4258e9:	call   4061a0 <__stack_chk_fail@plt>
  4258ee:	leave  
  4258ef:	ret    
  4258f0:	endbr64 
  4258f4:	push   rbp
  4258f5:	mov    rbp,rsp
  4258f8:	sub    rsp,0x60
  4258fc:	mov    QWORD PTR [rbp-0x38],rdi
  425900:	mov    QWORD PTR [rbp-0x40],rsi
  425904:	mov    QWORD PTR [rbp-0x48],rdx
  425908:	mov    QWORD PTR [rbp-0x50],rcx
  42590c:	mov    QWORD PTR [rbp-0x58],r8
  425910:	mov    rax,QWORD PTR fs:0x28
  425919:	mov    QWORD PTR [rbp-0x8],rax
  42591d:	xor    eax,eax
  42591f:	vxorps xmm0,xmm0,xmm0
  425923:	vmovss DWORD PTR [rbp-0x2c],xmm0
  425928:	mov    rax,QWORD PTR [rbp-0x58]
  42592c:	vxorps xmm0,xmm0,xmm0
  425930:	vmovss DWORD PTR [rax],xmm0
  425934:	mov    rdx,QWORD PTR [rbp-0x48]
  425938:	mov    rcx,QWORD PTR [rbp-0x40]
  42593c:	mov    rax,QWORD PTR [rbp-0x38]
  425940:	mov    rsi,rcx
  425943:	mov    rdi,rax
  425946:	call   4242e3 <flatcc_verify_union_vector_field@@Base+0x541>
  42594b:	mov    QWORD PTR [rbp-0x40],rax
  42594f:	mov    rax,QWORD PTR [rbp-0x40]
  425953:	cmp    rax,QWORD PTR [rbp-0x48]
  425957:	jne    425962 <flatcc_verify_union_vector_field@@Base+0x1bc0>
  425959:	mov    rax,QWORD PTR [rbp-0x40]
  42595d:	jmp    425a43 <flatcc_verify_union_vector_field@@Base+0x1ca1>
  425962:	mov    rax,QWORD PTR [rbp-0x50]
  425966:	mov    QWORD PTR [rbp-0x18],rax
  42596a:	mov    rax,QWORD PTR [rbp-0x18]
  42596e:	mov    rax,QWORD PTR [rax]
  425971:	mov    rdx,QWORD PTR [rbp-0x40]
  425975:	mov    QWORD PTR [rbp-0x10],rdx
  425979:	lea    r9,[rbp-0x24]
  42597d:	lea    r8,[rbp-0x20]
  425981:	lea    rcx,[rbp-0x28]
  425985:	mov    rdx,QWORD PTR [rbp-0x48]
  425989:	mov    rsi,QWORD PTR [rbp-0x10]
  42598d:	mov    rdi,QWORD PTR [rbp-0x38]
  425991:	call   rax
  425993:	mov    QWORD PTR [rbp-0x40],rax
  425997:	mov    rax,QWORD PTR [rbp-0x40]
  42599b:	cmp    rax,QWORD PTR [rbp-0x48]
  42599f:	jne    4259aa <flatcc_verify_union_vector_field@@Base+0x1c08>
  4259a1:	mov    rax,QWORD PTR [rbp-0x40]
  4259a5:	jmp    425a43 <flatcc_verify_union_vector_field@@Base+0x1ca1>
  4259aa:	mov    rax,QWORD PTR [rbp-0x40]
  4259ae:	cmp    rax,QWORD PTR [rbp-0x10]
  4259b2:	jne    4259c5 <flatcc_verify_union_vector_field@@Base+0x1c23>
  4259b4:	add    QWORD PTR [rbp-0x18],0x8
  4259b9:	mov    rax,QWORD PTR [rbp-0x18]
  4259bd:	mov    rax,QWORD PTR [rax]
  4259c0:	test   rax,rax
  4259c3:	jne    42596a <flatcc_verify_union_vector_field@@Base+0x1bc8>
  4259c5:	mov    rax,QWORD PTR [rbp-0x10]
  4259c9:	cmp    rax,QWORD PTR [rbp-0x40]
  4259cd:	jne    4259ea <flatcc_verify_union_vector_field@@Base+0x1c48>
  4259cf:	mov    rdx,QWORD PTR [rbp-0x48]
  4259d3:	mov    rsi,QWORD PTR [rbp-0x40]
  4259d7:	mov    rax,QWORD PTR [rbp-0x38]
  4259db:	mov    ecx,0x17
  4259e0:	mov    rdi,rax
  4259e3:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4259e8:	jmp    425a43 <flatcc_verify_union_vector_field@@Base+0x1ca1>
  4259ea:	mov    rdi,QWORD PTR [rbp-0x20]
  4259ee:	mov    ecx,DWORD PTR [rbp-0x28]
  4259f1:	lea    r8,[rbp-0x2c]
  4259f5:	mov    rdx,QWORD PTR [rbp-0x48]
  4259f9:	mov    rsi,QWORD PTR [rbp-0x40]
  4259fd:	mov    rax,QWORD PTR [rbp-0x38]
  425a01:	mov    r9,r8
  425a04:	mov    r8,rdi
  425a07:	mov    rdi,rax
  425a0a:	call   424ad0 <flatcc_verify_union_vector_field@@Base+0xd2e>
  425a0f:	cmp    QWORD PTR [rbp-0x48],rax
  425a13:	jne    425a1b <flatcc_verify_union_vector_field@@Base+0x1c79>
  425a15:	mov    rax,QWORD PTR [rbp-0x48]
  425a19:	jmp    425a43 <flatcc_verify_union_vector_field@@Base+0x1ca1>
  425a1b:	mov    rax,QWORD PTR [rbp-0x58]
  425a1f:	vmovss xmm1,DWORD PTR [rax]
  425a23:	vmovss xmm0,DWORD PTR [rbp-0x2c]
  425a28:	vaddss xmm0,xmm1,xmm0
  425a2c:	mov    rax,QWORD PTR [rbp-0x58]
  425a30:	vmovss DWORD PTR [rax],xmm0
  425a34:	mov    eax,DWORD PTR [rbp-0x24]
  425a37:	test   eax,eax
  425a39:	jne    425962 <flatcc_verify_union_vector_field@@Base+0x1bc0>
  425a3f:	mov    rax,QWORD PTR [rbp-0x40]
  425a43:	mov    rdi,QWORD PTR [rbp-0x8]
  425a47:	xor    rdi,QWORD PTR fs:0x28
  425a50:	je     425a57 <flatcc_verify_union_vector_field@@Base+0x1cb5>
  425a52:	call   4061a0 <__stack_chk_fail@plt>
  425a57:	leave  
  425a58:	ret    
  425a59:	endbr64 
  425a5d:	push   rbp
  425a5e:	mov    rbp,rsp
  425a61:	sub    rsp,0x60
  425a65:	mov    QWORD PTR [rbp-0x38],rdi
  425a69:	mov    QWORD PTR [rbp-0x40],rsi
  425a6d:	mov    QWORD PTR [rbp-0x48],rdx
  425a71:	mov    QWORD PTR [rbp-0x50],rcx
  425a75:	mov    QWORD PTR [rbp-0x58],r8
  425a79:	mov    rax,QWORD PTR fs:0x28
  425a82:	mov    QWORD PTR [rbp-0x8],rax
  425a86:	xor    eax,eax
  425a88:	vxorpd xmm0,xmm0,xmm0
  425a8c:	vmovsd QWORD PTR [rbp-0x28],xmm0
  425a91:	mov    rax,QWORD PTR [rbp-0x58]
  425a95:	vxorpd xmm0,xmm0,xmm0
  425a99:	vmovsd QWORD PTR [rax],xmm0
  425a9d:	mov    rdx,QWORD PTR [rbp-0x48]
  425aa1:	mov    rcx,QWORD PTR [rbp-0x40]
  425aa5:	mov    rax,QWORD PTR [rbp-0x38]
  425aa9:	mov    rsi,rcx
  425aac:	mov    rdi,rax
  425aaf:	call   4242e3 <flatcc_verify_union_vector_field@@Base+0x541>
  425ab4:	mov    QWORD PTR [rbp-0x40],rax
  425ab8:	mov    rax,QWORD PTR [rbp-0x40]
  425abc:	cmp    rax,QWORD PTR [rbp-0x48]
  425ac0:	jne    425acb <flatcc_verify_union_vector_field@@Base+0x1d29>
  425ac2:	mov    rax,QWORD PTR [rbp-0x40]
  425ac6:	jmp    425bac <flatcc_verify_union_vector_field@@Base+0x1e0a>
  425acb:	mov    rax,QWORD PTR [rbp-0x50]
  425acf:	mov    QWORD PTR [rbp-0x18],rax
  425ad3:	mov    rax,QWORD PTR [rbp-0x18]
  425ad7:	mov    rax,QWORD PTR [rax]
  425ada:	mov    rdx,QWORD PTR [rbp-0x40]
  425ade:	mov    QWORD PTR [rbp-0x10],rdx
  425ae2:	lea    r9,[rbp-0x2c]
  425ae6:	lea    r8,[rbp-0x20]
  425aea:	lea    rcx,[rbp-0x30]
  425aee:	mov    rdx,QWORD PTR [rbp-0x48]
  425af2:	mov    rsi,QWORD PTR [rbp-0x10]
  425af6:	mov    rdi,QWORD PTR [rbp-0x38]
  425afa:	call   rax
  425afc:	mov    QWORD PTR [rbp-0x40],rax
  425b00:	mov    rax,QWORD PTR [rbp-0x40]
  425b04:	cmp    rax,QWORD PTR [rbp-0x48]
  425b08:	jne    425b13 <flatcc_verify_union_vector_field@@Base+0x1d71>
  425b0a:	mov    rax,QWORD PTR [rbp-0x40]
  425b0e:	jmp    425bac <flatcc_verify_union_vector_field@@Base+0x1e0a>
  425b13:	mov    rax,QWORD PTR [rbp-0x40]
  425b17:	cmp    rax,QWORD PTR [rbp-0x10]
  425b1b:	jne    425b2e <flatcc_verify_union_vector_field@@Base+0x1d8c>
  425b1d:	add    QWORD PTR [rbp-0x18],0x8
  425b22:	mov    rax,QWORD PTR [rbp-0x18]
  425b26:	mov    rax,QWORD PTR [rax]
  425b29:	test   rax,rax
  425b2c:	jne    425ad3 <flatcc_verify_union_vector_field@@Base+0x1d31>
  425b2e:	mov    rax,QWORD PTR [rbp-0x10]
  425b32:	cmp    rax,QWORD PTR [rbp-0x40]
  425b36:	jne    425b53 <flatcc_verify_union_vector_field@@Base+0x1db1>
  425b38:	mov    rdx,QWORD PTR [rbp-0x48]
  425b3c:	mov    rsi,QWORD PTR [rbp-0x40]
  425b40:	mov    rax,QWORD PTR [rbp-0x38]
  425b44:	mov    ecx,0x17
  425b49:	mov    rdi,rax
  425b4c:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  425b51:	jmp    425bac <flatcc_verify_union_vector_field@@Base+0x1e0a>
  425b53:	mov    rdi,QWORD PTR [rbp-0x20]
  425b57:	mov    ecx,DWORD PTR [rbp-0x30]
  425b5a:	lea    r8,[rbp-0x28]
  425b5e:	mov    rdx,QWORD PTR [rbp-0x48]
  425b62:	mov    rsi,QWORD PTR [rbp-0x40]
  425b66:	mov    rax,QWORD PTR [rbp-0x38]
  425b6a:	mov    r9,r8
  425b6d:	mov    r8,rdi
  425b70:	mov    rdi,rax
  425b73:	call   424b57 <flatcc_verify_union_vector_field@@Base+0xdb5>
  425b78:	cmp    QWORD PTR [rbp-0x48],rax
  425b7c:	jne    425b84 <flatcc_verify_union_vector_field@@Base+0x1de2>
  425b7e:	mov    rax,QWORD PTR [rbp-0x48]
  425b82:	jmp    425bac <flatcc_verify_union_vector_field@@Base+0x1e0a>
  425b84:	mov    rax,QWORD PTR [rbp-0x58]
  425b88:	vmovsd xmm1,QWORD PTR [rax]
  425b8c:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  425b91:	vaddsd xmm0,xmm1,xmm0
  425b95:	mov    rax,QWORD PTR [rbp-0x58]
  425b99:	vmovsd QWORD PTR [rax],xmm0
  425b9d:	mov    eax,DWORD PTR [rbp-0x2c]
  425ba0:	test   eax,eax
  425ba2:	jne    425acb <flatcc_verify_union_vector_field@@Base+0x1d29>
  425ba8:	mov    rax,QWORD PTR [rbp-0x40]
  425bac:	mov    rdi,QWORD PTR [rbp-0x8]
  425bb0:	xor    rdi,QWORD PTR fs:0x28
  425bb9:	je     425bc0 <flatcc_verify_union_vector_field@@Base+0x1e1e>
  425bbb:	call   4061a0 <__stack_chk_fail@plt>
  425bc0:	leave  
  425bc1:	ret    
  425bc2:	endbr64 
  425bc6:	push   rbp
  425bc7:	mov    rbp,rsp
  425bca:	vmovsd QWORD PTR [rbp-0x18],xmm0
  425bcf:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  425bd4:	vmovsd QWORD PTR [rbp-0x8],xmm0
  425bd9:	mov    rax,QWORD PTR [rbp-0x8]
  425bdd:	pop    rbp
  425bde:	ret    
  425bdf:	endbr64 
  425be3:	push   rbp
  425be4:	mov    rbp,rsp
  425be7:	mov    QWORD PTR [rbp-0x18],rdi
  425beb:	mov    rax,QWORD PTR [rbp-0x18]
  425bef:	mov    QWORD PTR [rbp-0x8],rax
  425bf3:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  425bf8:	vmovq  rax,xmm0
  425bfd:	vmovq  xmm0,rax
  425c02:	pop    rbp
  425c03:	ret    
  425c04:	endbr64 
  425c08:	push   rbp
  425c09:	mov    rbp,rsp
  425c0c:	vmovsd QWORD PTR [rbp-0x18],xmm0
  425c11:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  425c16:	vcvttsd2si eax,xmm0
  425c1a:	mov    DWORD PTR [rbp-0x4],eax
  425c1d:	vxorpd xmm0,xmm0,xmm0
  425c21:	vcomisd xmm0,QWORD PTR [rbp-0x18]
  425c26:	jbe    425c2d <flatcc_verify_union_vector_field@@Base+0x1e8b>
  425c28:	mov    eax,DWORD PTR [rbp-0x4]
  425c2b:	jmp    425c59 <flatcc_verify_union_vector_field@@Base+0x1eb7>
  425c2d:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x4]
  425c32:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  425c37:	vsubsd xmm0,xmm1,xmm0
  425c3b:	vxorpd xmm1,xmm1,xmm1
  425c3f:	vucomisd xmm0,xmm1
  425c43:	jp     425c4f <flatcc_verify_union_vector_field@@Base+0x1ead>
  425c45:	vxorpd xmm1,xmm1,xmm1
  425c49:	vucomisd xmm0,xmm1
  425c4d:	je     425c56 <flatcc_verify_union_vector_field@@Base+0x1eb4>
  425c4f:	mov    eax,DWORD PTR [rbp-0x4]
  425c52:	inc    eax
  425c54:	jmp    425c59 <flatcc_verify_union_vector_field@@Base+0x1eb7>
  425c56:	mov    eax,DWORD PTR [rbp-0x4]
  425c59:	pop    rbp
  425c5a:	ret    
  425c5b:	endbr64 
  425c5f:	push   rbp
  425c60:	mov    rbp,rsp
  425c63:	sub    rsp,0x20
  425c67:	mov    DWORD PTR [rbp-0x14],edi
  425c6a:	mov    QWORD PTR [rbp-0x20],rsi
  425c6e:	mov    eax,DWORD PTR [rbp-0x14]
  425c71:	add    eax,0x3f
  425c74:	vcvtsi2sd xmm0,xmm0,eax
  425c78:	vmovsd xmm1,QWORD PTR [rip+0x178d8]        # 43d558 <flatcc_builder_padding_base@@Base+0x25d8>
  425c80:	vmulsd xmm2,xmm0,xmm1
  425c84:	vmovq  rax,xmm2
  425c89:	vmovq  xmm0,rax
  425c8e:	call   425c04 <flatcc_verify_union_vector_field@@Base+0x1e62>
  425c93:	mov    DWORD PTR [rbp-0x8],eax
  425c96:	mov    eax,DWORD PTR [rbp-0x8]
  425c99:	add    eax,0x15b
  425c9e:	lea    edx,[rax+0x7]
  425ca1:	test   eax,eax
  425ca3:	cmovs  eax,edx
  425ca6:	sar    eax,0x3
  425ca9:	inc    eax
  425cab:	mov    DWORD PTR [rbp-0x4],eax
  425cae:	mov    eax,DWORD PTR [rbp-0x4]
  425cb1:	cdqe   
  425cb3:	shl    rax,0x4
  425cb7:	mov    rdx,rax
  425cba:	lea    rax,[rip+0x1655f]        # 43c220 <flatcc_builder_padding_base@@Base+0x12a0>
  425cc1:	mov    rdx,QWORD PTR [rdx+rax*1]
  425cc5:	mov    rax,QWORD PTR [rbp-0x20]
  425cc9:	mov    QWORD PTR [rax],rdx
  425ccc:	mov    eax,DWORD PTR [rbp-0x4]
  425ccf:	cdqe   
  425cd1:	shl    rax,0x4
  425cd5:	mov    rdx,rax
  425cd8:	lea    rax,[rip+0x16549]        # 43c228 <flatcc_builder_padding_base@@Base+0x12a8>
  425cdf:	movzx  eax,WORD PTR [rdx+rax*1]
  425ce3:	movsx  edx,ax
  425ce6:	mov    rax,QWORD PTR [rbp-0x20]
  425cea:	mov    DWORD PTR [rax+0x8],edx
  425ced:	mov    eax,DWORD PTR [rbp-0x4]
  425cf0:	cdqe   
  425cf2:	shl    rax,0x4
  425cf6:	mov    rdx,rax
  425cf9:	lea    rax,[rip+0x1652a]        # 43c22a <flatcc_builder_padding_base@@Base+0x12aa>
  425d00:	movzx  eax,WORD PTR [rdx+rax*1]
  425d04:	cwde   
  425d05:	leave  
  425d06:	ret    
  425d07:	endbr64 
  425d0b:	push   rbp
  425d0c:	mov    rbp,rsp
  425d0f:	sub    rsp,0x30
  425d13:	mov    rax,rdi
  425d16:	mov    r8,rsi
  425d19:	mov    rsi,rax
  425d1c:	mov    rdi,rdx
  425d1f:	mov    rdi,r8
  425d22:	mov    QWORD PTR [rbp-0x20],rsi
  425d26:	mov    QWORD PTR [rbp-0x18],rdi
  425d2a:	mov    QWORD PTR [rbp-0x30],rdx
  425d2e:	mov    QWORD PTR [rbp-0x28],rcx
  425d32:	mov    rdx,QWORD PTR [rbp-0x20]
  425d36:	mov    rax,QWORD PTR [rbp-0x30]
  425d3a:	sub    rdx,rax
  425d3d:	mov    rax,rdx
  425d40:	mov    QWORD PTR [rbp-0x10],rax
  425d44:	mov    eax,DWORD PTR [rbp-0x18]
  425d47:	mov    DWORD PTR [rbp-0x8],eax
  425d4a:	mov    edx,DWORD PTR [rbp-0x18]
  425d4d:	mov    eax,DWORD PTR [rbp-0x28]
  425d50:	cmp    edx,eax
  425d52:	jne    425d61 <flatcc_verify_union_vector_field@@Base+0x1fbf>
  425d54:	mov    rdx,QWORD PTR [rbp-0x20]
  425d58:	mov    rax,QWORD PTR [rbp-0x30]
  425d5c:	cmp    rdx,rax
  425d5f:	jae    425d80 <flatcc_verify_union_vector_field@@Base+0x1fde>
  425d61:	lea    rcx,[rip+0x172c8]        # 43d030 <flatcc_builder_padding_base@@Base+0x20b0>
  425d68:	mov    edx,0xef
  425d6d:	lea    rsi,[rip+0x16a1c]        # 43c790 <flatcc_builder_padding_base@@Base+0x1810>
  425d74:	lea    rdi,[rip+0x16a85]        # 43c800 <flatcc_builder_padding_base@@Base+0x1880>
  425d7b:	call   4061b0 <__assert_fail@plt>
  425d80:	mov    rax,QWORD PTR [rbp-0x10]
  425d84:	mov    rdx,QWORD PTR [rbp-0x8]
  425d88:	leave  
  425d89:	ret    
  425d8a:	endbr64 
  425d8e:	push   rbp
  425d8f:	mov    rbp,rsp
  425d92:	sub    rsp,0x8
  425d96:	mov    rax,rdi
  425d99:	mov    r8,rsi
  425d9c:	mov    rsi,rax
  425d9f:	mov    rdi,rdx
  425da2:	mov    rdi,r8
  425da5:	mov    QWORD PTR [rbp-0x70],rsi
  425da9:	mov    QWORD PTR [rbp-0x68],rdi
  425dad:	mov    QWORD PTR [rbp-0x80],rdx
  425db1:	mov    QWORD PTR [rbp-0x78],rcx
  425db5:	mov    rax,QWORD PTR [rbp-0x70]
  425db9:	shr    rax,0x20
  425dbd:	mov    QWORD PTR [rbp-0x58],rax
  425dc1:	mov    rax,QWORD PTR [rbp-0x70]
  425dc5:	and    eax,0xffffffff
  425dc8:	mov    QWORD PTR [rbp-0x50],rax
  425dcc:	mov    rax,QWORD PTR [rbp-0x80]
  425dd0:	shr    rax,0x20
  425dd4:	mov    QWORD PTR [rbp-0x48],rax
  425dd8:	mov    rax,QWORD PTR [rbp-0x80]
  425ddc:	and    eax,0xffffffff
  425ddf:	mov    QWORD PTR [rbp-0x40],rax
  425de3:	mov    rax,QWORD PTR [rbp-0x58]
  425de7:	imul   rax,QWORD PTR [rbp-0x48]
  425dec:	mov    QWORD PTR [rbp-0x38],rax
  425df0:	mov    rax,QWORD PTR [rbp-0x50]
  425df4:	imul   rax,QWORD PTR [rbp-0x48]
  425df9:	mov    QWORD PTR [rbp-0x30],rax
  425dfd:	mov    rax,QWORD PTR [rbp-0x58]
  425e01:	imul   rax,QWORD PTR [rbp-0x40]
  425e06:	mov    QWORD PTR [rbp-0x28],rax
  425e0a:	mov    rax,QWORD PTR [rbp-0x50]
  425e0e:	imul   rax,QWORD PTR [rbp-0x40]
  425e13:	mov    QWORD PTR [rbp-0x20],rax
  425e17:	mov    rax,QWORD PTR [rbp-0x20]
  425e1b:	shr    rax,0x20
  425e1f:	mov    rdx,QWORD PTR [rbp-0x28]
  425e23:	mov    edx,edx
  425e25:	add    rax,rdx
  425e28:	mov    rdx,QWORD PTR [rbp-0x30]
  425e2c:	mov    edx,edx
  425e2e:	add    rax,rdx
  425e31:	mov    QWORD PTR [rbp-0x18],rax
  425e35:	mov    eax,0x80000000
  425e3a:	add    QWORD PTR [rbp-0x18],rax
  425e3e:	mov    rax,QWORD PTR [rbp-0x28]
  425e42:	shr    rax,0x20
  425e46:	mov    rdx,rax
  425e49:	mov    rax,QWORD PTR [rbp-0x38]
  425e4d:	add    rdx,rax
  425e50:	mov    rax,QWORD PTR [rbp-0x30]
  425e54:	shr    rax,0x20
  425e58:	add    rdx,rax
  425e5b:	mov    rax,QWORD PTR [rbp-0x18]
  425e5f:	shr    rax,0x20
  425e63:	add    rax,rdx
  425e66:	mov    QWORD PTR [rbp-0x10],rax
  425e6a:	mov    edx,DWORD PTR [rbp-0x68]
  425e6d:	mov    eax,DWORD PTR [rbp-0x78]
  425e70:	add    eax,edx
  425e72:	add    eax,0x40
  425e75:	mov    DWORD PTR [rbp-0x8],eax
  425e78:	mov    rax,QWORD PTR [rbp-0x10]
  425e7c:	mov    rdx,QWORD PTR [rbp-0x8]
  425e80:	leave  
  425e81:	ret    
  425e82:	endbr64 
  425e86:	push   rbp
  425e87:	mov    rbp,rsp
  425e8a:	sub    rsp,0x10
  425e8e:	mov    rax,rdi
  425e91:	mov    rcx,rsi
  425e94:	mov    rdx,rcx
  425e97:	mov    QWORD PTR [rbp-0x10],rax
  425e9b:	mov    QWORD PTR [rbp-0x8],rdx
  425e9f:	mov    rax,QWORD PTR [rbp-0x10]
  425ea3:	test   rax,rax
  425ea6:	jne    425edc <flatcc_verify_union_vector_field@@Base+0x213a>
  425ea8:	lea    rcx,[rip+0x171a1]        # 43d050 <flatcc_builder_padding_base@@Base+0x20d0>
  425eaf:	mov    edx,0x104
  425eb4:	lea    rsi,[rip+0x168d5]        # 43c790 <flatcc_builder_padding_base@@Base+0x1810>
  425ebb:	lea    rdi,[rip+0x16957]        # 43c819 <flatcc_builder_padding_base@@Base+0x1899>
  425ec2:	call   4061b0 <__assert_fail@plt>
  425ec7:	mov    rax,QWORD PTR [rbp-0x10]
  425ecb:	shl    rax,0xa
  425ecf:	mov    QWORD PTR [rbp-0x10],rax
  425ed3:	mov    eax,DWORD PTR [rbp-0x8]
  425ed6:	sub    eax,0xa
  425ed9:	mov    DWORD PTR [rbp-0x8],eax
  425edc:	mov    rdx,QWORD PTR [rbp-0x10]
  425ee0:	movabs rax,0xffc0000000000000
  425eea:	and    rax,rdx
  425eed:	test   rax,rax
  425ef0:	je     425ec7 <flatcc_verify_union_vector_field@@Base+0x2125>
  425ef2:	jmp    425f07 <flatcc_verify_union_vector_field@@Base+0x2165>
  425ef4:	mov    rax,QWORD PTR [rbp-0x10]
  425ef8:	add    rax,rax
  425efb:	mov    QWORD PTR [rbp-0x10],rax
  425eff:	mov    eax,DWORD PTR [rbp-0x8]
  425f02:	dec    eax
  425f04:	mov    DWORD PTR [rbp-0x8],eax
  425f07:	mov    rax,QWORD PTR [rbp-0x10]
  425f0b:	test   rax,rax
  425f0e:	jns    425ef4 <flatcc_verify_union_vector_field@@Base+0x2152>
  425f10:	mov    rax,QWORD PTR [rbp-0x10]
  425f14:	mov    rdx,QWORD PTR [rbp-0x8]
  425f18:	leave  
  425f19:	ret    
  425f1a:	endbr64 
  425f1e:	push   rbp
  425f1f:	mov    rbp,rsp
  425f22:	sub    rsp,0x28
  425f26:	vmovsd QWORD PTR [rbp-0x28],xmm0
  425f2b:	mov    rax,QWORD PTR [rbp-0x28]
  425f2f:	vmovq  xmm0,rax
  425f34:	call   425bc2 <flatcc_verify_union_vector_field@@Base+0x1e20>
  425f39:	mov    QWORD PTR [rbp-0x18],rax
  425f3d:	movabs rax,0x7ff0000000000000
  425f47:	and    rax,QWORD PTR [rbp-0x18]
  425f4b:	test   rax,rax
  425f4e:	jne    425f6b <flatcc_verify_union_vector_field@@Base+0x21c9>
  425f50:	movabs rax,0xfffffffffffff
  425f5a:	and    rax,QWORD PTR [rbp-0x18]
  425f5e:	mov    QWORD PTR [rbp-0x10],rax
  425f62:	mov    DWORD PTR [rbp-0x8],0xfffffbce
  425f69:	jmp    425fa2 <flatcc_verify_union_vector_field@@Base+0x2200>
  425f6b:	movabs rax,0xfffffffffffff
  425f75:	and    rax,QWORD PTR [rbp-0x18]
  425f79:	mov    rdx,rax
  425f7c:	movabs rax,0x10000000000000
  425f86:	add    rax,rdx
  425f89:	mov    QWORD PTR [rbp-0x10],rax
  425f8d:	mov    rax,QWORD PTR [rbp-0x18]
  425f91:	shr    rax,0x34
  425f95:	and    eax,0x7ff
  425f9a:	sub    eax,0x433
  425f9f:	mov    DWORD PTR [rbp-0x8],eax
  425fa2:	mov    rax,QWORD PTR [rbp-0x10]
  425fa6:	mov    rdx,QWORD PTR [rbp-0x8]
  425faa:	leave  
  425fab:	ret    
  425fac:	endbr64 
  425fb0:	push   rbp
  425fb1:	mov    rbp,rsp
  425fb4:	sub    rsp,0x50
  425fb8:	mov    rax,rdi
  425fbb:	mov    rcx,rsi
  425fbe:	mov    rdx,rcx
  425fc1:	mov    QWORD PTR [rbp-0x50],rax
  425fc5:	mov    QWORD PTR [rbp-0x48],rdx
  425fc9:	movabs rax,0x10000000000000
  425fd3:	mov    QWORD PTR [rbp-0x20],rax
  425fd7:	movabs rax,0xfffffffffffff
  425fe1:	mov    QWORD PTR [rbp-0x18],rax
  425fe5:	mov    DWORD PTR [rbp-0x34],0xfffffbce
  425fec:	mov    DWORD PTR [rbp-0x30],0x433
  425ff3:	mov    DWORD PTR [rbp-0x2c],0x34
  425ffa:	mov    rax,QWORD PTR [rbp-0x50]
  425ffe:	mov    rdx,QWORD PTR [rbp-0x48]
  426002:	mov    QWORD PTR [rbp-0x10],rax
  426006:	mov    QWORD PTR [rbp-0x8],rdx
  42600a:	jmp    42601f <flatcc_verify_union_vector_field@@Base+0x227d>
  42600c:	mov    rax,QWORD PTR [rbp-0x10]
  426010:	shr    rax,1
  426013:	mov    QWORD PTR [rbp-0x10],rax
  426017:	mov    eax,DWORD PTR [rbp-0x8]
  42601a:	inc    eax
  42601c:	mov    DWORD PTR [rbp-0x8],eax
  42601f:	mov    rax,QWORD PTR [rbp-0x10]
  426023:	mov    rcx,QWORD PTR [rbp-0x20]
  426027:	mov    rdx,QWORD PTR [rbp-0x18]
  42602b:	add    rdx,rcx
  42602e:	cmp    rax,rdx
  426031:	ja     42600c <flatcc_verify_union_vector_field@@Base+0x226a>
  426033:	mov    eax,DWORD PTR [rbp-0x8]
  426036:	cmp    DWORD PTR [rbp-0x34],eax
  426039:	jle    426057 <flatcc_verify_union_vector_field@@Base+0x22b5>
  42603b:	mov    rax,QWORD PTR [rip+0x1750e]        # 43d550 <flatcc_builder_padding_base@@Base+0x25d0>
  426042:	jmp    4260c0 <flatcc_verify_union_vector_field@@Base+0x231e>
  426044:	mov    rax,QWORD PTR [rbp-0x10]
  426048:	add    rax,rax
  42604b:	mov    QWORD PTR [rbp-0x10],rax
  42604f:	mov    eax,DWORD PTR [rbp-0x8]
  426052:	dec    eax
  426054:	mov    DWORD PTR [rbp-0x8],eax
  426057:	mov    eax,DWORD PTR [rbp-0x8]
  42605a:	cmp    DWORD PTR [rbp-0x34],eax
  42605d:	jge    42606c <flatcc_verify_union_vector_field@@Base+0x22ca>
  42605f:	mov    rax,QWORD PTR [rbp-0x10]
  426063:	and    rax,QWORD PTR [rbp-0x20]
  426067:	test   rax,rax
  42606a:	je     426044 <flatcc_verify_union_vector_field@@Base+0x22a2>
  42606c:	mov    eax,DWORD PTR [rbp-0x8]
  42606f:	cmp    DWORD PTR [rbp-0x34],eax
  426072:	jne    42608b <flatcc_verify_union_vector_field@@Base+0x22e9>
  426074:	mov    rax,QWORD PTR [rbp-0x10]
  426078:	and    rax,QWORD PTR [rbp-0x20]
  42607c:	test   rax,rax
  42607f:	jne    42608b <flatcc_verify_union_vector_field@@Base+0x22e9>
  426081:	mov    QWORD PTR [rbp-0x28],0x0
  426089:	jmp    426099 <flatcc_verify_union_vector_field@@Base+0x22f7>
  42608b:	mov    edx,DWORD PTR [rbp-0x8]
  42608e:	mov    eax,DWORD PTR [rbp-0x30]
  426091:	add    eax,edx
  426093:	cdqe   
  426095:	mov    QWORD PTR [rbp-0x28],rax
  426099:	mov    rax,QWORD PTR [rbp-0x10]
  42609d:	and    rax,QWORD PTR [rbp-0x18]
  4260a1:	mov    rdx,rax
  4260a4:	mov    eax,DWORD PTR [rbp-0x2c]
  4260a7:	mov    rcx,QWORD PTR [rbp-0x28]
  4260ab:	shlx   rax,rcx,rax
  4260b0:	or     rax,rdx
  4260b3:	mov    rdi,rax
  4260b6:	call   425bdf <flatcc_verify_union_vector_field@@Base+0x1e3d>
  4260bb:	vmovq  rax,xmm0
  4260c0:	vmovq  xmm0,rax
  4260c5:	leave  
  4260c6:	ret    
  4260c7:	endbr64 
  4260cb:	push   rbp
  4260cc:	mov    rbp,rsp
  4260cf:	mov    DWORD PTR [rbp-0x14],edi
  4260d2:	mov    DWORD PTR [rbp-0x18],esi
  4260d5:	mov    QWORD PTR [rbp-0x20],rdx
  4260d9:	mov    eax,DWORD PTR [rbp-0x18]
  4260dc:	inc    eax
  4260de:	imul   eax,eax,0x4d1
  4260e4:	sar    eax,0xc
  4260e7:	inc    eax
  4260e9:	mov    DWORD PTR [rbp-0x4],eax
  4260ec:	mov    eax,DWORD PTR [rbp-0x4]
  4260ef:	cdqe   
  4260f1:	lea    rdx,[rax*4+0x0]
  4260f9:	lea    rax,[rip+0x16740]        # 43c840 <flatcc_builder_padding_base@@Base+0x18c0>
  426100:	mov    eax,DWORD PTR [rdx+rax*1]
  426103:	cmp    DWORD PTR [rbp-0x14],eax
  426106:	jae    42610b <flatcc_verify_union_vector_field@@Base+0x2369>
  426108:	dec    DWORD PTR [rbp-0x4]
  42610b:	mov    eax,DWORD PTR [rbp-0x4]
  42610e:	cdqe   
  426110:	lea    rdx,[rax*4+0x0]
  426118:	lea    rax,[rip+0x16721]        # 43c840 <flatcc_builder_padding_base@@Base+0x18c0>
  42611f:	mov    edx,DWORD PTR [rdx+rax*1]
  426122:	mov    rax,QWORD PTR [rbp-0x20]
  426126:	mov    DWORD PTR [rax],edx
  426128:	mov    eax,DWORD PTR [rbp-0x4]
  42612b:	pop    rbp
  42612c:	ret    
  42612d:	endbr64 
  426131:	push   rbp
  426132:	mov    rbp,rsp
  426135:	sub    rsp,0x20
  426139:	mov    DWORD PTR [rbp-0x14],edi
  42613c:	mov    QWORD PTR [rbp-0x20],rsi
  426140:	mov    DWORD PTR [rbp-0x10],0x15c
  426147:	mov    DWORD PTR [rbp-0xc],0x8
  42614e:	cmp    DWORD PTR [rbp-0x14],0xfffffea4
  426155:	jge    426176 <flatcc_verify_union_vector_field@@Base+0x23d4>
  426157:	lea    rcx,[rip+0x16f12]        # 43d070 <flatcc_builder_padding_base@@Base+0x20f0>
  42615e:	mov    edx,0x50
  426163:	lea    rsi,[rip+0x16706]        # 43c870 <flatcc_builder_padding_base@@Base+0x18f0>
  42616a:	lea    rdi,[rip+0x16777]        # 43c8e8 <flatcc_builder_padding_base@@Base+0x1968>
  426171:	call   4061b0 <__assert_fail@plt>
  426176:	mov    eax,DWORD PTR [rbp-0xc]
  426179:	add    eax,0x153
  42617e:	cmp    DWORD PTR [rbp-0x14],eax
  426181:	jle    4261a2 <flatcc_verify_union_vector_field@@Base+0x2400>
  426183:	lea    rcx,[rip+0x16ee6]        # 43d070 <flatcc_builder_padding_base@@Base+0x20f0>
  42618a:	mov    edx,0x51
  42618f:	lea    rsi,[rip+0x166da]        # 43c870 <flatcc_builder_padding_base@@Base+0x18f0>
  426196:	lea    rdi,[rip+0x1676b]        # 43c908 <flatcc_builder_padding_base@@Base+0x1988>
  42619d:	call   4061b0 <__assert_fail@plt>
  4261a2:	mov    edx,DWORD PTR [rbp-0x14]
  4261a5:	mov    eax,DWORD PTR [rbp-0x10]
  4261a8:	add    eax,edx
  4261aa:	cdq    
  4261ab:	idiv   DWORD PTR [rbp-0xc]
  4261ae:	mov    DWORD PTR [rbp-0x8],eax
  4261b1:	mov    eax,DWORD PTR [rbp-0x8]
  4261b4:	cdqe   
  4261b6:	shl    rax,0x4
  4261ba:	mov    rdx,rax
  4261bd:	lea    rax,[rip+0x16066]        # 43c22a <flatcc_builder_padding_base@@Base+0x12aa>
  4261c4:	movzx  eax,WORD PTR [rdx+rax*1]
  4261c8:	cwde   
  4261c9:	mov    DWORD PTR [rbp-0x4],eax
  4261cc:	mov    eax,DWORD PTR [rbp-0x8]
  4261cf:	cdqe   
  4261d1:	shl    rax,0x4
  4261d5:	mov    rdx,rax
  4261d8:	lea    rax,[rip+0x16041]        # 43c220 <flatcc_builder_padding_base@@Base+0x12a0>
  4261df:	mov    rdx,QWORD PTR [rdx+rax*1]
  4261e3:	mov    rax,QWORD PTR [rbp-0x20]
  4261e7:	mov    QWORD PTR [rax],rdx
  4261ea:	mov    eax,DWORD PTR [rbp-0x8]
  4261ed:	cdqe   
  4261ef:	shl    rax,0x4
  4261f3:	mov    rdx,rax
  4261f6:	lea    rax,[rip+0x1602b]        # 43c228 <flatcc_builder_padding_base@@Base+0x12a8>
  4261fd:	movzx  eax,WORD PTR [rdx+rax*1]
  426201:	movsx  edx,ax
  426204:	mov    rax,QWORD PTR [rbp-0x20]
  426208:	mov    DWORD PTR [rax+0x8],edx
  42620b:	mov    eax,DWORD PTR [rbp-0x4]
  42620e:	cmp    eax,DWORD PTR [rbp-0x14]
  426211:	jle    426232 <flatcc_verify_union_vector_field@@Base+0x2490>
  426213:	lea    rcx,[rip+0x16e56]        # 43d070 <flatcc_builder_padding_base@@Base+0x20f0>
  42621a:	mov    edx,0x58
  42621f:	lea    rsi,[rip+0x1664a]        # 43c870 <flatcc_builder_padding_base@@Base+0x18f0>
  426226:	lea    rdi,[rip+0x16706]        # 43c933 <flatcc_builder_padding_base@@Base+0x19b3>
  42622d:	call   4061b0 <__assert_fail@plt>
  426232:	mov    edx,DWORD PTR [rbp-0x4]
  426235:	mov    eax,DWORD PTR [rbp-0xc]
  426238:	add    eax,edx
  42623a:	cmp    DWORD PTR [rbp-0x14],eax
  42623d:	jl     42625e <flatcc_verify_union_vector_field@@Base+0x24bc>
  42623f:	lea    rcx,[rip+0x16e2a]        # 43d070 <flatcc_builder_padding_base@@Base+0x20f0>
  426246:	mov    edx,0x59
  42624b:	lea    rsi,[rip+0x1661e]        # 43c870 <flatcc_builder_padding_base@@Base+0x18f0>
  426252:	lea    rdi,[rip+0x166e9]        # 43c942 <flatcc_builder_padding_base@@Base+0x19c2>
  426259:	call   4061b0 <__assert_fail@plt>
  42625e:	mov    eax,DWORD PTR [rbp-0x4]
  426261:	leave  
  426262:	ret    

0000000000426263 <grisu3_diy_fp_encode_double@@Base>:
  426263:	endbr64 
  426267:	push   rbp
  426268:	mov    rbp,rsp
  42626b:	sub    rsp,0xb0
  426272:	mov    QWORD PTR [rbp-0x98],rdi
  426279:	mov    DWORD PTR [rbp-0x9c],esi
  42627f:	mov    DWORD PTR [rbp-0xa0],edx
  426285:	mov    DWORD PTR [rbp-0xa4],ecx
  42628b:	mov    QWORD PTR [rbp-0xb0],r8
  426292:	mov    rax,QWORD PTR fs:0x28
  42629b:	mov    QWORD PTR [rbp-0x8],rax
  42629f:	xor    eax,eax
  4262a1:	mov    DWORD PTR [rbp-0x7c],0x3
  4262a8:	mov    eax,DWORD PTR [rbp-0x7c]
  4262ab:	mov    edx,0x1
  4262b0:	shlx   eax,edx,eax
  4262b5:	mov    DWORD PTR [rbp-0x78],eax
  4262b8:	mov    DWORD PTR [rbp-0x74],0xfffffbce
  4262bf:	movabs rax,0x10000000000000
  4262c9:	mov    QWORD PTR [rbp-0x48],rax
  4262cd:	mov    DWORD PTR [rbp-0x70],0x40
  4262d4:	mov    DWORD PTR [rbp-0x6c],0x13
  4262db:	cmp    DWORD PTR [rbp-0xa4],0x0
  4262e2:	je     4262f2 <grisu3_diy_fp_encode_double@@Base+0x8f>
  4262e4:	mov    eax,DWORD PTR [rbp-0x78]
  4262e7:	mov    edx,eax
  4262e9:	shr    edx,0x1f
  4262ec:	add    eax,edx
  4262ee:	sar    eax,1
  4262f0:	jmp    4262f7 <grisu3_diy_fp_encode_double@@Base+0x94>
  4262f2:	mov    eax,0x0
  4262f7:	mov    DWORD PTR [rbp-0x84],eax
  4262fd:	mov    eax,DWORD PTR [rbp-0x9c]
  426303:	sub    eax,DWORD PTR [rbp-0xa0]
  426309:	mov    DWORD PTR [rbp-0x68],eax
  42630c:	mov    rax,QWORD PTR [rbp-0x98]
  426313:	mov    QWORD PTR [rbp-0x40],rax
  426317:	mov    DWORD PTR [rbp-0x38],0x0
  42631e:	mov    rdx,QWORD PTR [rbp-0x40]
  426322:	mov    rax,QWORD PTR [rbp-0x38]
  426326:	mov    rdi,rdx
  426329:	mov    rsi,rax
  42632c:	call   425e82 <flatcc_verify_union_vector_field@@Base+0x20e0>
  426331:	mov    QWORD PTR [rbp-0x40],rax
  426335:	mov    QWORD PTR [rbp-0x38],rdx
  426339:	mov    eax,DWORD PTR [rbp-0x38]
  42633c:	neg    eax
  42633e:	mov    ecx,eax
  426340:	shl    DWORD PTR [rbp-0x84],cl
  426346:	lea    rdx,[rbp-0x30]
  42634a:	mov    eax,DWORD PTR [rbp-0x68]
  42634d:	mov    rsi,rdx
  426350:	mov    edi,eax
  426352:	call   42612d <flatcc_verify_union_vector_field@@Base+0x238b>
  426357:	mov    DWORD PTR [rbp-0x64],eax
  42635a:	mov    eax,DWORD PTR [rbp-0x64]
  42635d:	cmp    eax,DWORD PTR [rbp-0x68]
  426360:	je     4263fa <grisu3_diy_fp_encode_double@@Base+0x197>
  426366:	mov    eax,DWORD PTR [rbp-0x68]
  426369:	sub    eax,DWORD PTR [rbp-0x64]
  42636c:	dec    eax
  42636e:	mov    DWORD PTR [rbp-0x60],eax
  426371:	cmp    DWORD PTR [rbp-0x60],0x0
  426375:	js     42637d <grisu3_diy_fp_encode_double@@Base+0x11a>
  426377:	cmp    DWORD PTR [rbp-0x60],0x6
  42637b:	jle    42639c <grisu3_diy_fp_encode_double@@Base+0x139>
  42637d:	lea    rcx,[rip+0x16d0c]        # 43d090 <flatcc_builder_padding_base@@Base+0x2110>
  426384:	mov    edx,0xb9
  426389:	lea    rsi,[rip+0x164e0]        # 43c870 <flatcc_builder_padding_base@@Base+0x18f0>
  426390:	lea    rdi,[rip+0x165c6]        # 43c95d <flatcc_builder_padding_base@@Base+0x19dd>
  426397:	call   4061b0 <__assert_fail@plt>
  42639c:	mov    eax,DWORD PTR [rbp-0x60]
  42639f:	cdqe   
  4263a1:	shl    rax,0x4
  4263a5:	mov    rdx,rax
  4263a8:	lea    rax,[rip+0x21651]        # 447a00 <__data_start@@Base+0x940>
  4263af:	lea    rdx,[rdx+rax*1]
  4263b3:	mov    rax,QWORD PTR [rdx]
  4263b6:	mov    rdx,QWORD PTR [rdx+0x8]
  4263ba:	mov    rdi,QWORD PTR [rbp-0x40]
  4263be:	mov    rsi,QWORD PTR [rbp-0x38]
  4263c2:	mov    rcx,rdx
  4263c5:	mov    rdx,rax
  4263c8:	call   425d8a <flatcc_verify_union_vector_field@@Base+0x1fe8>
  4263cd:	mov    QWORD PTR [rbp-0x40],rax
  4263d1:	mov    QWORD PTR [rbp-0x38],rdx
  4263d5:	mov    eax,DWORD PTR [rbp-0xa0]
  4263db:	lea    edx,[rax+0x1]
  4263de:	mov    eax,DWORD PTR [rbp-0x60]
  4263e1:	add    eax,edx
  4263e3:	cmp    DWORD PTR [rbp-0x6c],eax
  4263e6:	jge    4263fa <grisu3_diy_fp_encode_double@@Base+0x197>
  4263e8:	mov    eax,DWORD PTR [rbp-0x78]
  4263eb:	mov    edx,eax
  4263ed:	shr    edx,0x1f
  4263f0:	add    eax,edx
  4263f2:	sar    eax,1
  4263f4:	add    DWORD PTR [rbp-0x84],eax
  4263fa:	mov    rax,QWORD PTR [rbp-0x30]
  4263fe:	mov    rdx,QWORD PTR [rbp-0x28]
  426402:	mov    rdi,QWORD PTR [rbp-0x40]
  426406:	mov    rsi,QWORD PTR [rbp-0x38]
  42640a:	mov    rcx,rdx
  42640d:	mov    rdx,rax
  426410:	call   425d8a <flatcc_verify_union_vector_field@@Base+0x1fe8>
  426415:	mov    QWORD PTR [rbp-0x40],rax
  426419:	mov    QWORD PTR [rbp-0x38],rdx
  42641d:	cmp    DWORD PTR [rbp-0x84],0x0
  426424:	setne  al
  426427:	movzx  edx,al
  42642a:	mov    eax,DWORD PTR [rbp-0x78]
  42642d:	add    eax,edx
  42642f:	add    DWORD PTR [rbp-0x84],eax
  426435:	mov    eax,DWORD PTR [rbp-0x38]
  426438:	mov    DWORD PTR [rbp-0x5c],eax
  42643b:	mov    rdx,QWORD PTR [rbp-0x40]
  42643f:	mov    rax,QWORD PTR [rbp-0x38]
  426443:	mov    rdi,rdx
  426446:	mov    rsi,rax
  426449:	call   425e82 <flatcc_verify_union_vector_field@@Base+0x20e0>
  42644e:	mov    QWORD PTR [rbp-0x40],rax
  426452:	mov    QWORD PTR [rbp-0x38],rdx
  426456:	mov    eax,DWORD PTR [rbp-0x38]
  426459:	mov    edx,DWORD PTR [rbp-0x5c]
  42645c:	sub    edx,eax
  42645e:	mov    eax,edx
  426460:	mov    ecx,eax
  426462:	shl    DWORD PTR [rbp-0x84],cl
  426468:	mov    edx,DWORD PTR [rbp-0x38]
  42646b:	mov    eax,DWORD PTR [rbp-0x70]
  42646e:	add    eax,edx
  426470:	mov    DWORD PTR [rbp-0x58],eax
  426473:	mov    edx,DWORD PTR [rbp-0x70]
  426476:	mov    eax,DWORD PTR [rbp-0x74]
  426479:	add    eax,edx
  42647b:	cmp    DWORD PTR [rbp-0x58],eax
  42647e:	jge    426497 <grisu3_diy_fp_encode_double@@Base+0x234>
  426480:	mov    eax,DWORD PTR [rbp-0x58]
  426483:	cmp    eax,DWORD PTR [rbp-0x74]
  426486:	jle    426490 <grisu3_diy_fp_encode_double@@Base+0x22d>
  426488:	mov    eax,DWORD PTR [rbp-0x58]
  42648b:	sub    eax,DWORD PTR [rbp-0x74]
  42648e:	jmp    42649a <grisu3_diy_fp_encode_double@@Base+0x237>
  426490:	mov    eax,0x0
  426495:	jmp    42649a <grisu3_diy_fp_encode_double@@Base+0x237>
  426497:	mov    eax,DWORD PTR [rbp-0x70]
  42649a:	mov    DWORD PTR [rbp-0x58],eax
  42649d:	mov    eax,DWORD PTR [rbp-0x70]
  4264a0:	sub    eax,DWORD PTR [rbp-0x58]
  4264a3:	mov    DWORD PTR [rbp-0x80],eax
  4264a6:	mov    edx,DWORD PTR [rbp-0x80]
  4264a9:	mov    eax,DWORD PTR [rbp-0x7c]
  4264ac:	add    eax,edx
  4264ae:	cmp    DWORD PTR [rbp-0x70],eax
  4264b1:	jg     426500 <grisu3_diy_fp_encode_double@@Base+0x29d>
  4264b3:	mov    edx,DWORD PTR [rbp-0x80]
  4264b6:	mov    eax,DWORD PTR [rbp-0x7c]
  4264b9:	add    eax,edx
  4264bb:	sub    eax,DWORD PTR [rbp-0x70]
  4264be:	dec    eax
  4264c0:	mov    DWORD PTR [rbp-0x54],eax
  4264c3:	mov    rdx,QWORD PTR [rbp-0x40]
  4264c7:	mov    eax,DWORD PTR [rbp-0x54]
  4264ca:	shrx   rax,rdx,rax
  4264cf:	mov    QWORD PTR [rbp-0x40],rax
  4264d3:	mov    edx,DWORD PTR [rbp-0x38]
  4264d6:	mov    eax,DWORD PTR [rbp-0x54]
  4264d9:	add    eax,edx
  4264db:	mov    DWORD PTR [rbp-0x38],eax
  4264de:	mov    eax,DWORD PTR [rbp-0x54]
  4264e1:	mov    edx,DWORD PTR [rbp-0x84]
  4264e7:	sarx   eax,edx,eax
  4264ec:	lea    edx,[rax+0x1]
  4264ef:	mov    eax,DWORD PTR [rbp-0x78]
  4264f2:	add    eax,edx
  4264f4:	mov    DWORD PTR [rbp-0x84],eax
  4264fa:	mov    eax,DWORD PTR [rbp-0x54]
  4264fd:	sub    DWORD PTR [rbp-0x80],eax
  426500:	mov    rdx,QWORD PTR [rbp-0x40]
  426504:	mov    eax,DWORD PTR [rbp-0x80]
  426507:	shrx   rax,rdx,rax
  42650c:	mov    QWORD PTR [rbp-0x20],rax
  426510:	mov    edx,DWORD PTR [rbp-0x38]
  426513:	mov    eax,DWORD PTR [rbp-0x80]
  426516:	add    eax,edx
  426518:	mov    DWORD PTR [rbp-0x18],eax
  42651b:	mov    rdx,QWORD PTR [rbp-0x40]
  42651f:	mov    eax,DWORD PTR [rbp-0x80]
  426522:	dec    eax
  426524:	mov    ecx,0x1
  426529:	shlx   rax,rcx,rax
  42652e:	and    rax,rdx
  426531:	mov    edx,eax
  426533:	mov    eax,DWORD PTR [rbp-0x78]
  426536:	cdqe   
  426538:	imul   eax,edx
  42653b:	mov    DWORD PTR [rbp-0x50],eax
  42653e:	mov    eax,DWORD PTR [rbp-0x78]
  426541:	movsxd rdx,eax
  426544:	mov    eax,DWORD PTR [rbp-0x80]
  426547:	dec    eax
  426549:	shlx   rax,rdx,rax
  42654e:	mov    DWORD PTR [rbp-0x4c],eax
  426551:	mov    edx,DWORD PTR [rbp-0x4c]
  426554:	mov    eax,DWORD PTR [rbp-0x84]
  42655a:	add    eax,edx
  42655c:	cmp    DWORD PTR [rbp-0x80],eax
  42655f:	jl     426592 <grisu3_diy_fp_encode_double@@Base+0x32f>
  426561:	mov    rax,QWORD PTR [rbp-0x20]
  426565:	inc    rax
  426568:	mov    QWORD PTR [rbp-0x20],rax
  42656c:	mov    rax,QWORD PTR [rbp-0x20]
  426570:	mov    rdx,QWORD PTR [rbp-0x48]
  426574:	add    rdx,rdx
  426577:	and    rax,rdx
  42657a:	test   rax,rax
  42657d:	je     426592 <grisu3_diy_fp_encode_double@@Base+0x32f>
  42657f:	mov    rax,QWORD PTR [rbp-0x20]
  426583:	shr    rax,1
  426586:	mov    QWORD PTR [rbp-0x20],rax
  42658a:	mov    eax,DWORD PTR [rbp-0x18]
  42658d:	inc    eax
  42658f:	mov    DWORD PTR [rbp-0x18],eax
  426592:	mov    rdx,QWORD PTR [rbp-0x20]
  426596:	mov    rax,QWORD PTR [rbp-0x18]
  42659a:	mov    rdi,rdx
  42659d:	mov    rsi,rax
  4265a0:	call   425fac <flatcc_verify_union_vector_field@@Base+0x220a>
  4265a5:	vmovq  rax,xmm0
  4265aa:	mov    rdx,QWORD PTR [rbp-0xb0]
  4265b1:	mov    QWORD PTR [rdx],rax
  4265b4:	mov    eax,DWORD PTR [rbp-0x4c]
  4265b7:	sub    eax,DWORD PTR [rbp-0x84]
  4265bd:	cmp    DWORD PTR [rbp-0x50],eax
  4265c0:	jle    4265d2 <grisu3_diy_fp_encode_double@@Base+0x36f>
  4265c2:	mov    edx,DWORD PTR [rbp-0x4c]
  4265c5:	mov    eax,DWORD PTR [rbp-0x84]
  4265cb:	add    eax,edx
  4265cd:	cmp    DWORD PTR [rbp-0x50],eax
  4265d0:	jl     4265d9 <grisu3_diy_fp_encode_double@@Base+0x376>
  4265d2:	mov    eax,0x1
  4265d7:	jmp    4265de <grisu3_diy_fp_encode_double@@Base+0x37b>
  4265d9:	mov    eax,0x0
  4265de:	mov    rcx,QWORD PTR [rbp-0x8]
  4265e2:	xor    rcx,QWORD PTR fs:0x28
  4265eb:	je     4265f2 <grisu3_diy_fp_encode_double@@Base+0x38f>
  4265ed:	call   4061a0 <__stack_chk_fail@plt>
  4265f2:	leave  
  4265f3:	ret    
  4265f4:	endbr64 
  4265f8:	push   rbp
  4265f9:	mov    rbp,rsp
  4265fc:	sub    rsp,0x50
  426600:	mov    QWORD PTR [rbp-0x28],rdi
  426604:	mov    QWORD PTR [rbp-0x30],rsi
  426608:	mov    DWORD PTR [rbp-0x34],edx
  42660b:	mov    QWORD PTR [rbp-0x40],rcx
  42660f:	mov    DWORD PTR [rbp-0x38],r8d
  426613:	mov    DWORD PTR [rbp-0x44],r9d
  426617:	mov    rax,QWORD PTR [rbp+0x18]
  42661b:	mov    QWORD PTR [rbp-0x50],rax
  42661f:	mov    rax,QWORD PTR fs:0x28
  426628:	mov    QWORD PTR [rbp-0x8],rax
  42662c:	xor    eax,eax
  42662e:	mov    DWORD PTR [rbp-0x20],0x135
  426635:	mov    DWORD PTR [rbp-0x1c],0xfffffebc
  42663c:	cmp    QWORD PTR [rbp-0x40],0x0
  426641:	je     42664b <grisu3_diy_fp_encode_double@@Base+0x3e8>
  426643:	mov    eax,DWORD PTR [rbp-0x38]
  426646:	cmp    eax,DWORD PTR [rbp-0x1c]
  426649:	jge    42665c <grisu3_diy_fp_encode_double@@Base+0x3f9>
  42664b:	mov    rax,QWORD PTR [rbp-0x50]
  42664f:	vxorpd xmm0,xmm0,xmm0
  426653:	vmovsd QWORD PTR [rax],xmm0
  426657:	jmp    426c06 <grisu3_diy_fp_encode_double@@Base+0x9a3>
  42665c:	mov    eax,DWORD PTR [rbp-0x38]
  42665f:	dec    eax
  426661:	cmp    DWORD PTR [rbp-0x20],eax
  426664:	jge    426686 <grisu3_diy_fp_encode_double@@Base+0x423>
  426666:	movabs rdi,0x7ff0000000000000
  426670:	call   425bdf <flatcc_verify_union_vector_field@@Base+0x1e3d>
  426675:	vmovq  rax,xmm0
  42667a:	mov    rdx,QWORD PTR [rbp-0x50]
  42667e:	mov    QWORD PTR [rdx],rax
  426681:	jmp    426c06 <grisu3_diy_fp_encode_double@@Base+0x9a3>
  426686:	movabs rax,0x1fffffffffffff
  426690:	cmp    QWORD PTR [rbp-0x40],rax
  426694:	ja     426bb0 <grisu3_diy_fp_encode_double@@Base+0x94d>
  42669a:	cmp    DWORD PTR [rbp-0x38],0x0
  42669e:	js     426bb0 <grisu3_diy_fp_encode_double@@Base+0x94d>
  4266a4:	cmp    DWORD PTR [rbp-0x38],0x16
  4266a8:	jg     426bb0 <grisu3_diy_fp_encode_double@@Base+0x94d>
  4266ae:	mov    rax,QWORD PTR [rbp-0x40]
  4266b2:	test   rax,rax
  4266b5:	js     4266be <grisu3_diy_fp_encode_double@@Base+0x45b>
  4266b7:	vcvtsi2sd xmm0,xmm0,rax
  4266bc:	jmp    4266d3 <grisu3_diy_fp_encode_double@@Base+0x470>
  4266be:	mov    rdx,rax
  4266c1:	shr    rdx,1
  4266c4:	and    eax,0x1
  4266c7:	or     rdx,rax
  4266ca:	vcvtsi2sd xmm0,xmm0,rdx
  4266cf:	vaddsd xmm0,xmm0,xmm0
  4266d3:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4266d8:	mov    eax,DWORD PTR [rbp-0x38]
  4266db:	sub    eax,DWORD PTR [rbp-0x44]
  4266de:	add    eax,0x16
  4266e1:	cmp    eax,0x2c
  4266e4:	ja     426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  4266ea:	mov    eax,eax
  4266ec:	lea    rdx,[rax*4+0x0]
  4266f4:	lea    rax,[rip+0x16281]        # 43c97c <flatcc_builder_padding_base@@Base+0x19fc>
  4266fb:	mov    eax,DWORD PTR [rdx+rax*1]
  4266fe:	movsxd rdx,eax
  426701:	lea    rax,[rip+0x16274]        # 43c97c <flatcc_builder_padding_base@@Base+0x19fc>
  426708:	add    rax,rdx
  42670b:	notrack jmp rax
  42670e:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  426713:	vmovsd xmm1,QWORD PTR [rip+0x16e45]        # 43d560 <flatcc_builder_padding_base@@Base+0x25e0>
  42671b:	vdivsd xmm0,xmm0,xmm1
  42671f:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426724:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426729:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42672e:	vmovsd xmm1,QWORD PTR [rip+0x16e32]        # 43d568 <flatcc_builder_padding_base@@Base+0x25e8>
  426736:	vdivsd xmm0,xmm0,xmm1
  42673a:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42673f:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426744:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  426749:	vmovsd xmm1,QWORD PTR [rip+0x16e1f]        # 43d570 <flatcc_builder_padding_base@@Base+0x25f0>
  426751:	vdivsd xmm0,xmm0,xmm1
  426755:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42675a:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  42675f:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  426764:	vmovsd xmm1,QWORD PTR [rip+0x16e0c]        # 43d578 <flatcc_builder_padding_base@@Base+0x25f8>
  42676c:	vdivsd xmm0,xmm0,xmm1
  426770:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426775:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  42677a:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42677f:	vmovsd xmm1,QWORD PTR [rip+0x16df9]        # 43d580 <flatcc_builder_padding_base@@Base+0x2600>
  426787:	vdivsd xmm0,xmm0,xmm1
  42678b:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426790:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426795:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42679a:	vmovsd xmm1,QWORD PTR [rip+0x16de6]        # 43d588 <flatcc_builder_padding_base@@Base+0x2608>
  4267a2:	vdivsd xmm0,xmm0,xmm1
  4267a6:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4267ab:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  4267b0:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4267b5:	vmovsd xmm1,QWORD PTR [rip+0x16dd3]        # 43d590 <flatcc_builder_padding_base@@Base+0x2610>
  4267bd:	vdivsd xmm0,xmm0,xmm1
  4267c1:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4267c6:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  4267cb:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4267d0:	vmovsd xmm1,QWORD PTR [rip+0x16dc0]        # 43d598 <flatcc_builder_padding_base@@Base+0x2618>
  4267d8:	vdivsd xmm0,xmm0,xmm1
  4267dc:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4267e1:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  4267e6:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4267eb:	vmovsd xmm1,QWORD PTR [rip+0x16dad]        # 43d5a0 <flatcc_builder_padding_base@@Base+0x2620>
  4267f3:	vdivsd xmm0,xmm0,xmm1
  4267f7:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4267fc:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426801:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  426806:	vmovsd xmm1,QWORD PTR [rip+0x16d9a]        # 43d5a8 <flatcc_builder_padding_base@@Base+0x2628>
  42680e:	vdivsd xmm0,xmm0,xmm1
  426812:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426817:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  42681c:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  426821:	vmovsd xmm1,QWORD PTR [rip+0x16d87]        # 43d5b0 <flatcc_builder_padding_base@@Base+0x2630>
  426829:	vdivsd xmm0,xmm0,xmm1
  42682d:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426832:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426837:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42683c:	vmovsd xmm1,QWORD PTR [rip+0x16d74]        # 43d5b8 <flatcc_builder_padding_base@@Base+0x2638>
  426844:	vdivsd xmm0,xmm0,xmm1
  426848:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42684d:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426852:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  426857:	vmovsd xmm1,QWORD PTR [rip+0x16d61]        # 43d5c0 <flatcc_builder_padding_base@@Base+0x2640>
  42685f:	vdivsd xmm0,xmm0,xmm1
  426863:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426868:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  42686d:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  426872:	vmovsd xmm1,QWORD PTR [rip+0x16d4e]        # 43d5c8 <flatcc_builder_padding_base@@Base+0x2648>
  42687a:	vdivsd xmm0,xmm0,xmm1
  42687e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426883:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426888:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42688d:	vmovsd xmm1,QWORD PTR [rip+0x16d3b]        # 43d5d0 <flatcc_builder_padding_base@@Base+0x2650>
  426895:	vdivsd xmm0,xmm0,xmm1
  426899:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42689e:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  4268a3:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4268a8:	vmovsd xmm1,QWORD PTR [rip+0x16d28]        # 43d5d8 <flatcc_builder_padding_base@@Base+0x2658>
  4268b0:	vdivsd xmm0,xmm0,xmm1
  4268b4:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4268b9:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  4268be:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4268c3:	vmovsd xmm1,QWORD PTR [rip+0x16d15]        # 43d5e0 <flatcc_builder_padding_base@@Base+0x2660>
  4268cb:	vdivsd xmm0,xmm0,xmm1
  4268cf:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4268d4:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  4268d9:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4268de:	vmovsd xmm1,QWORD PTR [rip+0x16d02]        # 43d5e8 <flatcc_builder_padding_base@@Base+0x2668>
  4268e6:	vdivsd xmm0,xmm0,xmm1
  4268ea:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4268ef:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  4268f4:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4268f9:	vmovsd xmm1,QWORD PTR [rip+0x16cef]        # 43d5f0 <flatcc_builder_padding_base@@Base+0x2670>
  426901:	vdivsd xmm0,xmm0,xmm1
  426905:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42690a:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  42690f:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  426914:	vmovsd xmm1,QWORD PTR [rip+0x16cdc]        # 43d5f8 <flatcc_builder_padding_base@@Base+0x2678>
  42691c:	vdivsd xmm0,xmm0,xmm1
  426920:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426925:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  42692a:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42692f:	vmovsd xmm1,QWORD PTR [rip+0x16cc9]        # 43d600 <flatcc_builder_padding_base@@Base+0x2680>
  426937:	vdivsd xmm0,xmm0,xmm1
  42693b:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426940:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426945:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42694a:	vmovsd xmm1,QWORD PTR [rip+0x16cb6]        # 43d608 <flatcc_builder_padding_base@@Base+0x2688>
  426952:	vdivsd xmm0,xmm0,xmm1
  426956:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42695b:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426960:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426965:	vmovsd xmm0,QWORD PTR [rip+0x16c9b]        # 43d608 <flatcc_builder_padding_base@@Base+0x2688>
  42696d:	vmulsd xmm0,xmm1,xmm0
  426971:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426976:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  42697b:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426980:	vmovsd xmm0,QWORD PTR [rip+0x16c78]        # 43d600 <flatcc_builder_padding_base@@Base+0x2680>
  426988:	vmulsd xmm0,xmm1,xmm0
  42698c:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426991:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426996:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  42699b:	vmovsd xmm0,QWORD PTR [rip+0x16c55]        # 43d5f8 <flatcc_builder_padding_base@@Base+0x2678>
  4269a3:	vmulsd xmm0,xmm1,xmm0
  4269a7:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4269ac:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  4269b1:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4269b6:	vmovsd xmm0,QWORD PTR [rip+0x16c32]        # 43d5f0 <flatcc_builder_padding_base@@Base+0x2670>
  4269be:	vmulsd xmm0,xmm1,xmm0
  4269c2:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4269c7:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  4269cc:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4269d1:	vmovsd xmm0,QWORD PTR [rip+0x16c0f]        # 43d5e8 <flatcc_builder_padding_base@@Base+0x2668>
  4269d9:	vmulsd xmm0,xmm1,xmm0
  4269dd:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4269e2:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  4269e7:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  4269ec:	vmovsd xmm0,QWORD PTR [rip+0x16bec]        # 43d5e0 <flatcc_builder_padding_base@@Base+0x2660>
  4269f4:	vmulsd xmm0,xmm1,xmm0
  4269f8:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4269fd:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426a02:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426a07:	vmovsd xmm0,QWORD PTR [rip+0x16bc9]        # 43d5d8 <flatcc_builder_padding_base@@Base+0x2658>
  426a0f:	vmulsd xmm0,xmm1,xmm0
  426a13:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426a18:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426a1d:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426a22:	vmovsd xmm0,QWORD PTR [rip+0x16ba6]        # 43d5d0 <flatcc_builder_padding_base@@Base+0x2650>
  426a2a:	vmulsd xmm0,xmm1,xmm0
  426a2e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426a33:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426a38:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426a3d:	vmovsd xmm0,QWORD PTR [rip+0x16b83]        # 43d5c8 <flatcc_builder_padding_base@@Base+0x2648>
  426a45:	vmulsd xmm0,xmm1,xmm0
  426a49:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426a4e:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426a53:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426a58:	vmovsd xmm0,QWORD PTR [rip+0x16b60]        # 43d5c0 <flatcc_builder_padding_base@@Base+0x2640>
  426a60:	vmulsd xmm0,xmm1,xmm0
  426a64:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426a69:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426a6e:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426a73:	vmovsd xmm0,QWORD PTR [rip+0x16b3d]        # 43d5b8 <flatcc_builder_padding_base@@Base+0x2638>
  426a7b:	vmulsd xmm0,xmm1,xmm0
  426a7f:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426a84:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426a89:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426a8e:	vmovsd xmm0,QWORD PTR [rip+0x16b1a]        # 43d5b0 <flatcc_builder_padding_base@@Base+0x2630>
  426a96:	vmulsd xmm0,xmm1,xmm0
  426a9a:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426a9f:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426aa4:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426aa9:	vmovsd xmm0,QWORD PTR [rip+0x16af7]        # 43d5a8 <flatcc_builder_padding_base@@Base+0x2628>
  426ab1:	vmulsd xmm0,xmm1,xmm0
  426ab5:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426aba:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426abf:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426ac4:	vmovsd xmm0,QWORD PTR [rip+0x16ad4]        # 43d5a0 <flatcc_builder_padding_base@@Base+0x2620>
  426acc:	vmulsd xmm0,xmm1,xmm0
  426ad0:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426ad5:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426ada:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426adf:	vmovsd xmm0,QWORD PTR [rip+0x16ab1]        # 43d598 <flatcc_builder_padding_base@@Base+0x2618>
  426ae7:	vmulsd xmm0,xmm1,xmm0
  426aeb:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426af0:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426af5:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426afa:	vmovsd xmm0,QWORD PTR [rip+0x16a8e]        # 43d590 <flatcc_builder_padding_base@@Base+0x2610>
  426b02:	vmulsd xmm0,xmm1,xmm0
  426b06:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426b0b:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426b10:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426b15:	vmovsd xmm0,QWORD PTR [rip+0x16a6b]        # 43d588 <flatcc_builder_padding_base@@Base+0x2608>
  426b1d:	vmulsd xmm0,xmm1,xmm0
  426b21:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426b26:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426b28:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426b2d:	vmovsd xmm0,QWORD PTR [rip+0x16a4b]        # 43d580 <flatcc_builder_padding_base@@Base+0x2600>
  426b35:	vmulsd xmm0,xmm1,xmm0
  426b39:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426b3e:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426b40:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426b45:	vmovsd xmm0,QWORD PTR [rip+0x16a2b]        # 43d578 <flatcc_builder_padding_base@@Base+0x25f8>
  426b4d:	vmulsd xmm0,xmm1,xmm0
  426b51:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426b56:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426b58:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426b5d:	vmovsd xmm0,QWORD PTR [rip+0x16a0b]        # 43d570 <flatcc_builder_padding_base@@Base+0x25f0>
  426b65:	vmulsd xmm0,xmm1,xmm0
  426b69:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426b6e:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426b70:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426b75:	vmovsd xmm0,QWORD PTR [rip+0x169eb]        # 43d568 <flatcc_builder_padding_base@@Base+0x25e8>
  426b7d:	vmulsd xmm0,xmm1,xmm0
  426b81:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426b86:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426b88:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  426b8d:	vmovsd xmm0,QWORD PTR [rip+0x169cb]        # 43d560 <flatcc_builder_padding_base@@Base+0x25e0>
  426b95:	vmulsd xmm0,xmm1,xmm0
  426b99:	vmovsd QWORD PTR [rbp-0x10],xmm0
  426b9e:	jmp    426ba1 <grisu3_diy_fp_encode_double@@Base+0x93e>
  426ba0:	nop
  426ba1:	mov    rax,QWORD PTR [rbp-0x50]
  426ba5:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  426baa:	vmovsd QWORD PTR [rax],xmm0
  426bae:	jmp    426c06 <grisu3_diy_fp_encode_double@@Base+0x9a3>
  426bb0:	mov    rcx,QWORD PTR [rbp-0x50]
  426bb4:	mov    edx,DWORD PTR [rbp-0x44]
  426bb7:	mov    esi,DWORD PTR [rbp-0x38]
  426bba:	mov    rax,QWORD PTR [rbp-0x40]
  426bbe:	mov    r8,rcx
  426bc1:	mov    ecx,DWORD PTR [rbp+0x10]
  426bc4:	mov    rdi,rax
  426bc7:	call   426263 <grisu3_diy_fp_encode_double@@Base>
  426bcc:	test   eax,eax
  426bce:	jne    426c05 <grisu3_diy_fp_encode_double@@Base+0x9a2>
  426bd0:	lea    rdx,[rbp-0x18]
  426bd4:	mov    rax,QWORD PTR [rbp-0x28]
  426bd8:	mov    rsi,rdx
  426bdb:	mov    rdi,rax
  426bde:	call   406180 <strtod@plt>
  426be3:	vmovq  rax,xmm0
  426be8:	mov    rdx,QWORD PTR [rbp-0x50]
  426bec:	mov    QWORD PTR [rdx],rax
  426bef:	mov    rax,QWORD PTR [rbp-0x18]
  426bf3:	cmp    QWORD PTR [rbp-0x30],rax
  426bf7:	jbe    426bff <grisu3_diy_fp_encode_double@@Base+0x99c>
  426bf9:	mov    rax,QWORD PTR [rbp-0x18]
  426bfd:	jmp    426c2c <grisu3_diy_fp_encode_double@@Base+0x9c9>
  426bff:	mov    rax,QWORD PTR [rbp-0x30]
  426c03:	jmp    426c2c <grisu3_diy_fp_encode_double@@Base+0x9c9>
  426c05:	nop
  426c06:	cmp    DWORD PTR [rbp-0x34],0x0
  426c0a:	je     426c28 <grisu3_diy_fp_encode_double@@Base+0x9c5>
  426c0c:	mov    rax,QWORD PTR [rbp-0x50]
  426c10:	vmovsd xmm1,QWORD PTR [rax]
  426c14:	vmovq  xmm0,QWORD PTR [rip+0x16924]        # 43d540 <flatcc_builder_padding_base@@Base+0x25c0>
  426c1c:	vxorpd xmm0,xmm0,xmm1
  426c20:	mov    rax,QWORD PTR [rbp-0x50]
  426c24:	vmovsd QWORD PTR [rax],xmm0
  426c28:	mov    rax,QWORD PTR [rbp-0x30]
  426c2c:	mov    rcx,QWORD PTR [rbp-0x8]
  426c30:	xor    rcx,QWORD PTR fs:0x28
  426c39:	je     426c40 <grisu3_diy_fp_encode_double@@Base+0x9dd>
  426c3b:	call   4061a0 <__stack_chk_fail@plt>
  426c40:	leave  
  426c41:	ret    
  426c42:	endbr64 
  426c46:	push   rbp
  426c47:	mov    rbp,rsp
  426c4a:	mov    QWORD PTR [rbp-0x8],rdi
  426c4e:	mov    QWORD PTR [rbp-0x10],rsi
  426c52:	mov    DWORD PTR [rbp-0x14],edx
  426c55:	mov    QWORD PTR [rbp-0x20],rcx
  426c59:	mov    rax,QWORD PTR [rbp-0x20]
  426c5d:	vxorpd xmm0,xmm0,xmm0
  426c61:	vmovsd QWORD PTR [rax],xmm0
  426c65:	mov    rax,QWORD PTR [rbp-0x8]
  426c69:	pop    rbp
  426c6a:	ret    
  426c6b:	endbr64 
  426c6f:	push   rbp
  426c70:	mov    rbp,rsp
  426c73:	sub    rsp,0x60
  426c77:	mov    QWORD PTR [rbp-0x48],rdi
  426c7b:	mov    DWORD PTR [rbp-0x4c],esi
  426c7e:	mov    QWORD PTR [rbp-0x58],rdx
  426c82:	mov    DWORD PTR [rbp-0x38],0x0
  426c89:	mov    DWORD PTR [rbp-0x34],0x0
  426c90:	mov    QWORD PTR [rbp-0x18],0x0
  426c98:	mov    DWORD PTR [rbp-0x30],0x0
  426c9f:	mov    DWORD PTR [rbp-0x2c],0x0
  426ca6:	mov    DWORD PTR [rbp-0x28],0x0
  426cad:	mov    DWORD PTR [rbp-0x24],0x0
  426cb4:	mov    rax,QWORD PTR [rbp-0x58]
  426cb8:	vxorpd xmm0,xmm0,xmm0
  426cbc:	vmovsd QWORD PTR [rax],xmm0
  426cc0:	mov    eax,DWORD PTR [rbp-0x4c]
  426cc3:	cdqe   
  426cc5:	lea    rdx,[rax+0x1]
  426cc9:	mov    rax,QWORD PTR [rbp-0x48]
  426ccd:	add    rax,rdx
  426cd0:	mov    QWORD PTR [rbp-0x20],rax
  426cd4:	cmp    DWORD PTR [rbp-0x4c],0x3e8
  426cdb:	jle    426ceb <grisu3_diy_fp_encode_double@@Base+0xa88>
  426cdd:	mov    rax,QWORD PTR [rbp-0x48]
  426ce1:	add    rax,0x3e9
  426ce7:	mov    QWORD PTR [rbp-0x20],rax
  426ceb:	mov    rax,QWORD PTR [rbp-0x48]
  426cef:	cmp    rax,QWORD PTR [rbp-0x20]
  426cf3:	jne    426cfe <grisu3_diy_fp_encode_double@@Base+0xa9b>
  426cf5:	mov    rax,QWORD PTR [rbp-0x48]
  426cf9:	jmp    4271b0 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  426cfe:	mov    rax,QWORD PTR [rbp-0x48]
  426d02:	mov    QWORD PTR [rbp-0x10],rax
  426d06:	mov    rax,QWORD PTR [rbp-0x48]
  426d0a:	movzx  eax,BYTE PTR [rax]
  426d0d:	cmp    al,0x2d
  426d0f:	jne    426d30 <grisu3_diy_fp_encode_double@@Base+0xacd>
  426d11:	inc    QWORD PTR [rbp-0x48]
  426d15:	mov    DWORD PTR [rbp-0x38],0x1
  426d1c:	mov    rax,QWORD PTR [rbp-0x48]
  426d20:	cmp    rax,QWORD PTR [rbp-0x20]
  426d24:	jne    426d30 <grisu3_diy_fp_encode_double@@Base+0xacd>
  426d26:	mov    eax,0x0
  426d2b:	jmp    4271b0 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  426d30:	mov    rax,QWORD PTR [rbp-0x48]
  426d34:	movzx  eax,BYTE PTR [rax]
  426d37:	cmp    al,0x30
  426d39:	jne    426da9 <grisu3_diy_fp_encode_double@@Base+0xb46>
  426d3b:	inc    QWORD PTR [rbp-0x48]
  426d3f:	mov    rax,QWORD PTR [rbp-0x48]
  426d43:	cmp    rax,QWORD PTR [rbp-0x20]
  426d47:	je     426d92 <grisu3_diy_fp_encode_double@@Base+0xb2f>
  426d49:	mov    rax,QWORD PTR [rbp-0x48]
  426d4d:	movzx  eax,BYTE PTR [rax]
  426d50:	or     eax,0x20
  426d53:	cmp    al,0x78
  426d55:	jne    426d92 <grisu3_diy_fp_encode_double@@Base+0xb2f>
  426d57:	mov    rcx,QWORD PTR [rbp-0x58]
  426d5b:	mov    edx,DWORD PTR [rbp-0x38]
  426d5e:	mov    rsi,QWORD PTR [rbp-0x20]
  426d62:	mov    rax,QWORD PTR [rbp-0x48]
  426d66:	mov    rdi,rax
  426d69:	call   426c42 <grisu3_diy_fp_encode_double@@Base+0x9df>
  426d6e:	mov    QWORD PTR [rbp-0x8],rax
  426d72:	mov    rax,QWORD PTR [rbp-0x8]
  426d76:	cmp    rax,QWORD PTR [rbp-0x48]
  426d7a:	jne    426d85 <grisu3_diy_fp_encode_double@@Base+0xb22>
  426d7c:	mov    rax,QWORD PTR [rbp-0x10]
  426d80:	jmp    4271b0 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  426d85:	mov    rax,QWORD PTR [rbp-0x8]
  426d89:	jmp    4271b0 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  426d8e:	inc    QWORD PTR [rbp-0x48]
  426d92:	mov    rax,QWORD PTR [rbp-0x48]
  426d96:	cmp    rax,QWORD PTR [rbp-0x20]
  426d9a:	je     426df3 <grisu3_diy_fp_encode_double@@Base+0xb90>
  426d9c:	mov    rax,QWORD PTR [rbp-0x48]
  426da0:	movzx  eax,BYTE PTR [rax]
  426da3:	cmp    al,0x30
  426da5:	je     426d8e <grisu3_diy_fp_encode_double@@Base+0xb2b>
  426da7:	jmp    426df3 <grisu3_diy_fp_encode_double@@Base+0xb90>
  426da9:	mov    rax,QWORD PTR [rbp-0x48]
  426dad:	movzx  eax,BYTE PTR [rax]
  426db0:	cmp    al,0x30
  426db2:	jle    426dbf <grisu3_diy_fp_encode_double@@Base+0xb5c>
  426db4:	mov    rax,QWORD PTR [rbp-0x48]
  426db8:	movzx  eax,BYTE PTR [rax]
  426dbb:	cmp    al,0x39
  426dbd:	jle    426dd8 <grisu3_diy_fp_encode_double@@Base+0xb75>
  426dbf:	cmp    DWORD PTR [rbp-0x38],0x0
  426dc3:	jne    426dce <grisu3_diy_fp_encode_double@@Base+0xb6b>
  426dc5:	mov    rax,QWORD PTR [rbp-0x10]
  426dc9:	jmp    4271b0 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  426dce:	mov    eax,0x0
  426dd3:	jmp    4271b0 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  426dd8:	mov    rax,QWORD PTR [rbp-0x48]
  426ddc:	lea    rdx,[rax+0x1]
  426de0:	mov    QWORD PTR [rbp-0x48],rdx
  426de4:	movzx  eax,BYTE PTR [rax]
  426de7:	movsx  eax,al
  426dea:	sub    eax,0x30
  426ded:	cdqe   
  426def:	mov    QWORD PTR [rbp-0x18],rax
  426df3:	mov    rax,QWORD PTR [rbp-0x48]
  426df7:	mov    QWORD PTR [rbp-0x8],rax
  426dfb:	jmp    426e5b <grisu3_diy_fp_encode_double@@Base+0xbf8>
  426dfd:	movabs rax,0x1999999999999998
  426e07:	cmp    QWORD PTR [rbp-0x18],rax
  426e0b:	jbe    426e29 <grisu3_diy_fp_encode_double@@Base+0xbc6>
  426e0d:	mov    rax,QWORD PTR [rbp-0x48]
  426e11:	movzx  eax,BYTE PTR [rax]
  426e14:	cmp    al,0x34
  426e16:	setg   al
  426e19:	movzx  eax,al
  426e1c:	add    QWORD PTR [rbp-0x18],rax
  426e20:	mov    DWORD PTR [rbp-0x24],0x1
  426e27:	jmp    426e7b <grisu3_diy_fp_encode_double@@Base+0xc18>
  426e29:	mov    rdx,QWORD PTR [rbp-0x18]
  426e2d:	mov    rax,rdx
  426e30:	shl    rax,0x2
  426e34:	add    rax,rdx
  426e37:	add    rax,rax
  426e3a:	mov    rcx,rax
  426e3d:	mov    rax,QWORD PTR [rbp-0x48]
  426e41:	lea    rdx,[rax+0x1]
  426e45:	mov    QWORD PTR [rbp-0x48],rdx
  426e49:	movzx  eax,BYTE PTR [rax]
  426e4c:	movsx  rax,al
  426e50:	add    rax,rcx
  426e53:	sub    rax,0x30
  426e57:	mov    QWORD PTR [rbp-0x18],rax
  426e5b:	mov    rax,QWORD PTR [rbp-0x48]
  426e5f:	cmp    rax,QWORD PTR [rbp-0x20]
  426e63:	je     426e7b <grisu3_diy_fp_encode_double@@Base+0xc18>
  426e65:	mov    rax,QWORD PTR [rbp-0x48]
  426e69:	movzx  eax,BYTE PTR [rax]
  426e6c:	cmp    al,0x2f
  426e6e:	jle    426e7b <grisu3_diy_fp_encode_double@@Base+0xc18>
  426e70:	mov    rax,QWORD PTR [rbp-0x48]
  426e74:	movzx  eax,BYTE PTR [rax]
  426e77:	cmp    al,0x39
  426e79:	jle    426dfd <grisu3_diy_fp_encode_double@@Base+0xb9a>
  426e7b:	mov    rax,QWORD PTR [rbp-0x48]
  426e7f:	sub    rax,QWORD PTR [rbp-0x8]
  426e83:	mov    DWORD PTR [rbp-0x28],eax
  426e86:	jmp    426e8f <grisu3_diy_fp_encode_double@@Base+0xc2c>
  426e88:	inc    DWORD PTR [rbp-0x30]
  426e8b:	inc    QWORD PTR [rbp-0x48]
  426e8f:	mov    rax,QWORD PTR [rbp-0x48]
  426e93:	cmp    rax,QWORD PTR [rbp-0x20]
  426e97:	je     426ea4 <grisu3_diy_fp_encode_double@@Base+0xc41>
  426e99:	mov    rax,QWORD PTR [rbp-0x48]
  426e9d:	movzx  eax,BYTE PTR [rax]
  426ea0:	cmp    al,0x30
  426ea2:	je     426e88 <grisu3_diy_fp_encode_double@@Base+0xc25>
  426ea4:	mov    rax,QWORD PTR [rbp-0x48]
  426ea8:	cmp    rax,QWORD PTR [rbp-0x20]
  426eac:	je     426efb <grisu3_diy_fp_encode_double@@Base+0xc98>
  426eae:	mov    rax,QWORD PTR [rbp-0x48]
  426eb2:	movzx  eax,BYTE PTR [rax]
  426eb5:	cmp    al,0x30
  426eb7:	jle    426efb <grisu3_diy_fp_encode_double@@Base+0xc98>
  426eb9:	mov    rax,QWORD PTR [rbp-0x48]
  426ebd:	movzx  eax,BYTE PTR [rax]
  426ec0:	cmp    al,0x39
  426ec2:	jg     426efb <grisu3_diy_fp_encode_double@@Base+0xc98>
  426ec4:	mov    DWORD PTR [rbp-0x24],0x1
  426ecb:	inc    DWORD PTR [rbp-0x30]
  426ece:	inc    QWORD PTR [rbp-0x48]
  426ed2:	jmp    426edb <grisu3_diy_fp_encode_double@@Base+0xc78>
  426ed4:	inc    DWORD PTR [rbp-0x30]
  426ed7:	inc    QWORD PTR [rbp-0x48]
  426edb:	mov    rax,QWORD PTR [rbp-0x48]
  426edf:	cmp    rax,QWORD PTR [rbp-0x20]
  426ee3:	je     426efb <grisu3_diy_fp_encode_double@@Base+0xc98>
  426ee5:	mov    rax,QWORD PTR [rbp-0x48]
  426ee9:	movzx  eax,BYTE PTR [rax]
  426eec:	cmp    al,0x2f
  426eee:	jle    426efb <grisu3_diy_fp_encode_double@@Base+0xc98>
  426ef0:	mov    rax,QWORD PTR [rbp-0x48]
  426ef4:	movzx  eax,BYTE PTR [rax]
  426ef7:	cmp    al,0x39
  426ef9:	jle    426ed4 <grisu3_diy_fp_encode_double@@Base+0xc71>
  426efb:	mov    rax,QWORD PTR [rbp-0x48]
  426eff:	cmp    rax,QWORD PTR [rbp-0x20]
  426f03:	je     42704c <grisu3_diy_fp_encode_double@@Base+0xde9>
  426f09:	mov    rax,QWORD PTR [rbp-0x48]
  426f0d:	movzx  eax,BYTE PTR [rax]
  426f10:	cmp    al,0x2e
  426f12:	jne    42704c <grisu3_diy_fp_encode_double@@Base+0xde9>
  426f18:	inc    QWORD PTR [rbp-0x48]
  426f1c:	mov    rax,QWORD PTR [rbp-0x48]
  426f20:	mov    QWORD PTR [rbp-0x8],rax
  426f24:	mov    rax,QWORD PTR [rbp-0x48]
  426f28:	movzx  eax,BYTE PTR [rax]
  426f2b:	cmp    al,0x2f
  426f2d:	jle    426f3a <grisu3_diy_fp_encode_double@@Base+0xcd7>
  426f2f:	mov    rax,QWORD PTR [rbp-0x48]
  426f33:	movzx  eax,BYTE PTR [rax]
  426f36:	cmp    al,0x39
  426f38:	jle    426fab <grisu3_diy_fp_encode_double@@Base+0xd48>
  426f3a:	mov    eax,0x0
  426f3f:	jmp    4271b0 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  426f44:	movabs rax,0x1999999999999998
  426f4e:	cmp    QWORD PTR [rbp-0x18],rax
  426f52:	jbe    426f76 <grisu3_diy_fp_encode_double@@Base+0xd13>
  426f54:	cmp    DWORD PTR [rbp-0x24],0x0
  426f58:	jne    426fd1 <grisu3_diy_fp_encode_double@@Base+0xd6e>
  426f5a:	mov    rax,QWORD PTR [rbp-0x48]
  426f5e:	movzx  eax,BYTE PTR [rax]
  426f61:	cmp    al,0x34
  426f63:	setg   al
  426f66:	movzx  eax,al
  426f69:	add    QWORD PTR [rbp-0x18],rax
  426f6d:	mov    DWORD PTR [rbp-0x24],0x1
  426f74:	jmp    426fd1 <grisu3_diy_fp_encode_double@@Base+0xd6e>
  426f76:	mov    rdx,QWORD PTR [rbp-0x18]
  426f7a:	mov    rax,rdx
  426f7d:	shl    rax,0x2
  426f81:	add    rax,rdx
  426f84:	add    rax,rax
  426f87:	mov    rcx,rax
  426f8a:	mov    rax,QWORD PTR [rbp-0x48]
  426f8e:	lea    rdx,[rax+0x1]
  426f92:	mov    QWORD PTR [rbp-0x48],rdx
  426f96:	movzx  eax,BYTE PTR [rax]
  426f99:	movsx  rax,al
  426f9d:	add    rax,rcx
  426fa0:	sub    rax,0x30
  426fa4:	mov    QWORD PTR [rbp-0x18],rax
  426fa8:	dec    DWORD PTR [rbp-0x30]
  426fab:	mov    rax,QWORD PTR [rbp-0x48]
  426faf:	cmp    rax,QWORD PTR [rbp-0x20]
  426fb3:	je     426fd2 <grisu3_diy_fp_encode_double@@Base+0xd6f>
  426fb5:	mov    rax,QWORD PTR [rbp-0x48]
  426fb9:	movzx  eax,BYTE PTR [rax]
  426fbc:	cmp    al,0x2f
  426fbe:	jle    426fd2 <grisu3_diy_fp_encode_double@@Base+0xd6f>
  426fc0:	mov    rax,QWORD PTR [rbp-0x48]
  426fc4:	movzx  eax,BYTE PTR [rax]
  426fc7:	cmp    al,0x39
  426fc9:	jle    426f44 <grisu3_diy_fp_encode_double@@Base+0xce1>
  426fcf:	jmp    426fd2 <grisu3_diy_fp_encode_double@@Base+0xd6f>
  426fd1:	nop
  426fd2:	mov    rax,QWORD PTR [rbp-0x48]
  426fd6:	sub    rax,QWORD PTR [rbp-0x8]
  426fda:	add    DWORD PTR [rbp-0x28],eax
  426fdd:	jmp    426fe6 <grisu3_diy_fp_encode_double@@Base+0xd83>
  426fdf:	inc    DWORD PTR [rbp-0x30]
  426fe2:	inc    QWORD PTR [rbp-0x48]
  426fe6:	mov    rax,QWORD PTR [rbp-0x48]
  426fea:	cmp    rax,QWORD PTR [rbp-0x20]
  426fee:	je     426ffb <grisu3_diy_fp_encode_double@@Base+0xd98>
  426ff0:	mov    rax,QWORD PTR [rbp-0x48]
  426ff4:	movzx  eax,BYTE PTR [rax]
  426ff7:	cmp    al,0x30
  426ff9:	je     426fdf <grisu3_diy_fp_encode_double@@Base+0xd7c>
  426ffb:	mov    rax,QWORD PTR [rbp-0x48]
  426fff:	cmp    rax,QWORD PTR [rbp-0x20]
  427003:	je     42704c <grisu3_diy_fp_encode_double@@Base+0xde9>
  427005:	mov    rax,QWORD PTR [rbp-0x48]
  427009:	movzx  eax,BYTE PTR [rax]
  42700c:	cmp    al,0x30
  42700e:	jle    42704c <grisu3_diy_fp_encode_double@@Base+0xde9>
  427010:	mov    rax,QWORD PTR [rbp-0x48]
  427014:	movzx  eax,BYTE PTR [rax]
  427017:	cmp    al,0x39
  427019:	jg     42704c <grisu3_diy_fp_encode_double@@Base+0xde9>
  42701b:	mov    DWORD PTR [rbp-0x24],0x1
  427022:	inc    QWORD PTR [rbp-0x48]
  427026:	jmp    42702c <grisu3_diy_fp_encode_double@@Base+0xdc9>
  427028:	inc    QWORD PTR [rbp-0x48]
  42702c:	mov    rax,QWORD PTR [rbp-0x48]
  427030:	cmp    rax,QWORD PTR [rbp-0x20]
  427034:	je     42704c <grisu3_diy_fp_encode_double@@Base+0xde9>
  427036:	mov    rax,QWORD PTR [rbp-0x48]
  42703a:	movzx  eax,BYTE PTR [rax]
  42703d:	cmp    al,0x2f
  42703f:	jle    42704c <grisu3_diy_fp_encode_double@@Base+0xde9>
  427041:	mov    rax,QWORD PTR [rbp-0x48]
  427045:	movzx  eax,BYTE PTR [rax]
  427048:	cmp    al,0x39
  42704a:	jle    427028 <grisu3_diy_fp_encode_double@@Base+0xdc5>
  42704c:	mov    eax,DWORD PTR [rbp-0x28]
  42704f:	add    DWORD PTR [rbp-0x30],eax
  427052:	mov    rax,QWORD PTR [rbp-0x48]
  427056:	cmp    rax,QWORD PTR [rbp-0x20]
  42705a:	je     427162 <grisu3_diy_fp_encode_double@@Base+0xeff>
  427060:	mov    rax,QWORD PTR [rbp-0x48]
  427064:	movzx  eax,BYTE PTR [rax]
  427067:	or     eax,0x20
  42706a:	cmp    al,0x65
  42706c:	jne    427162 <grisu3_diy_fp_encode_double@@Base+0xeff>
  427072:	mov    rax,QWORD PTR [rbp-0x20]
  427076:	sub    rax,QWORD PTR [rbp-0x48]
  42707a:	cmp    rax,0x1
  42707e:	jg     42708a <grisu3_diy_fp_encode_double@@Base+0xe27>
  427080:	mov    eax,0x0
  427085:	jmp    4271b0 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  42708a:	inc    QWORD PTR [rbp-0x48]
  42708e:	mov    rax,QWORD PTR [rbp-0x48]
  427092:	movzx  eax,BYTE PTR [rax]
  427095:	cmp    al,0x2b
  427097:	jne    4270b1 <grisu3_diy_fp_encode_double@@Base+0xe4e>
  427099:	inc    QWORD PTR [rbp-0x48]
  42709d:	mov    rax,QWORD PTR [rbp-0x48]
  4270a1:	cmp    rax,QWORD PTR [rbp-0x20]
  4270a5:	jne    4270db <grisu3_diy_fp_encode_double@@Base+0xe78>
  4270a7:	mov    eax,0x0
  4270ac:	jmp    4271b0 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  4270b1:	mov    rax,QWORD PTR [rbp-0x48]
  4270b5:	movzx  eax,BYTE PTR [rax]
  4270b8:	cmp    al,0x2d
  4270ba:	jne    4270db <grisu3_diy_fp_encode_double@@Base+0xe78>
  4270bc:	mov    DWORD PTR [rbp-0x34],0x1
  4270c3:	inc    QWORD PTR [rbp-0x48]
  4270c7:	mov    rax,QWORD PTR [rbp-0x48]
  4270cb:	cmp    rax,QWORD PTR [rbp-0x20]
  4270cf:	jne    4270db <grisu3_diy_fp_encode_double@@Base+0xe78>
  4270d1:	mov    eax,0x0
  4270d6:	jmp    4271b0 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  4270db:	mov    rax,QWORD PTR [rbp-0x48]
  4270df:	movzx  eax,BYTE PTR [rax]
  4270e2:	cmp    al,0x2f
  4270e4:	jle    4270f1 <grisu3_diy_fp_encode_double@@Base+0xe8e>
  4270e6:	mov    rax,QWORD PTR [rbp-0x48]
  4270ea:	movzx  eax,BYTE PTR [rax]
  4270ed:	cmp    al,0x39
  4270ef:	jle    4270fb <grisu3_diy_fp_encode_double@@Base+0xe98>
  4270f1:	mov    eax,0x0
  4270f6:	jmp    4271b0 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  4270fb:	mov    rax,QWORD PTR [rbp-0x48]
  4270ff:	lea    rdx,[rax+0x1]
  427103:	mov    QWORD PTR [rbp-0x48],rdx
  427107:	movzx  eax,BYTE PTR [rax]
  42710a:	movsx  eax,al
  42710d:	sub    eax,0x30
  427110:	mov    DWORD PTR [rbp-0x2c],eax
  427113:	jmp    427142 <grisu3_diy_fp_encode_double@@Base+0xedf>
  427115:	cmp    DWORD PTR [rbp-0x2c],0x7fff
  42711c:	jg     42713e <grisu3_diy_fp_encode_double@@Base+0xedb>
  42711e:	mov    edx,DWORD PTR [rbp-0x2c]
  427121:	mov    eax,edx
  427123:	shl    eax,0x2
  427126:	add    eax,edx
  427128:	add    eax,eax
  42712a:	mov    edx,eax
  42712c:	mov    rax,QWORD PTR [rbp-0x48]
  427130:	movzx  eax,BYTE PTR [rax]
  427133:	movsx  eax,al
  427136:	add    eax,edx
  427138:	sub    eax,0x30
  42713b:	mov    DWORD PTR [rbp-0x2c],eax
  42713e:	inc    QWORD PTR [rbp-0x48]
  427142:	mov    rax,QWORD PTR [rbp-0x48]
  427146:	cmp    rax,QWORD PTR [rbp-0x20]
  42714a:	je     427162 <grisu3_diy_fp_encode_double@@Base+0xeff>
  42714c:	mov    rax,QWORD PTR [rbp-0x48]
  427150:	movzx  eax,BYTE PTR [rax]
  427153:	cmp    al,0x2f
  427155:	jle    427162 <grisu3_diy_fp_encode_double@@Base+0xeff>
  427157:	mov    rax,QWORD PTR [rbp-0x48]
  42715b:	movzx  eax,BYTE PTR [rax]
  42715e:	cmp    al,0x39
  427160:	jle    427115 <grisu3_diy_fp_encode_double@@Base+0xeb2>
  427162:	cmp    DWORD PTR [rbp-0x34],0x0
  427166:	je     42716f <grisu3_diy_fp_encode_double@@Base+0xf0c>
  427168:	mov    eax,DWORD PTR [rbp-0x2c]
  42716b:	neg    eax
  42716d:	jmp    427172 <grisu3_diy_fp_encode_double@@Base+0xf0f>
  42716f:	mov    eax,DWORD PTR [rbp-0x2c]
  427172:	add    DWORD PTR [rbp-0x30],eax
  427175:	mov    rax,QWORD PTR [rbp-0x48]
  427179:	cmp    rax,QWORD PTR [rbp-0x20]
  42717d:	jne    427186 <grisu3_diy_fp_encode_double@@Base+0xf23>
  42717f:	mov    eax,0x0
  427184:	jmp    4271b0 <grisu3_diy_fp_encode_double@@Base+0xf4d>
  427186:	mov    r9d,DWORD PTR [rbp-0x28]
  42718a:	mov    r8d,DWORD PTR [rbp-0x30]
  42718e:	mov    rcx,QWORD PTR [rbp-0x18]
  427192:	mov    edx,DWORD PTR [rbp-0x38]
  427195:	mov    rsi,QWORD PTR [rbp-0x48]
  427199:	mov    rax,QWORD PTR [rbp-0x10]
  42719d:	push   QWORD PTR [rbp-0x58]
  4271a0:	mov    edi,DWORD PTR [rbp-0x24]
  4271a3:	push   rdi
  4271a4:	mov    rdi,rax
  4271a7:	call   4265f4 <grisu3_diy_fp_encode_double@@Base+0x391>
  4271ac:	add    rsp,0x10
  4271b0:	leave  
  4271b1:	ret    
  4271b2:	push   rbp
  4271b3:	mov    rbp,rsp
  4271b6:	sub    rsp,0x20
  4271ba:	mov    QWORD PTR [rbp-0x8],rdi
  4271be:	mov    DWORD PTR [rbp-0xc],esi
  4271c1:	mov    QWORD PTR [rbp-0x18],rdx
  4271c5:	mov    rdx,QWORD PTR [rbp-0x18]
  4271c9:	mov    ecx,DWORD PTR [rbp-0xc]
  4271cc:	mov    rax,QWORD PTR [rbp-0x8]
  4271d0:	mov    esi,ecx
  4271d2:	mov    rdi,rax
  4271d5:	call   426c6b <grisu3_diy_fp_encode_double@@Base+0xa08>
  4271da:	leave  
  4271db:	ret    
  4271dc:	push   rbp
  4271dd:	mov    rbp,rsp
  4271e0:	sub    rsp,0x40
  4271e4:	mov    QWORD PTR [rbp-0x28],rdi
  4271e8:	mov    DWORD PTR [rbp-0x2c],esi
  4271eb:	mov    QWORD PTR [rbp-0x38],rdx
  4271ef:	mov    rax,QWORD PTR fs:0x28
  4271f8:	mov    QWORD PTR [rbp-0x8],rax
  4271fc:	xor    eax,eax
  4271fe:	mov    DWORD PTR [rbp-0x1c],0x7f800000
  427205:	lea    rdx,[rbp-0x18]
  427209:	mov    ecx,DWORD PTR [rbp-0x2c]
  42720c:	mov    rax,QWORD PTR [rbp-0x28]
  427210:	mov    esi,ecx
  427212:	mov    rdi,rax
  427215:	call   4271b2 <grisu3_diy_fp_encode_double@@Base+0xf4f>
  42721a:	mov    QWORD PTR [rbp-0x10],rax
  42721e:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  427223:	vcvtsd2ss xmm0,xmm0,xmm0
  427227:	mov    rax,QWORD PTR [rbp-0x38]
  42722b:	vmovss DWORD PTR [rax],xmm0
  42722f:	mov    rax,QWORD PTR [rbp-0x38]
  427233:	vmovss xmm1,DWORD PTR [rax]
  427237:	vmovss xmm0,DWORD PTR [rip+0x163d1]        # 43d610 <flatcc_builder_padding_base@@Base+0x2690>
  42723f:	vandps xmm0,xmm0,xmm1
  427243:	vucomiss xmm0,DWORD PTR [rip+0x163d5]        # 43d620 <flatcc_builder_padding_base@@Base+0x26a0>
  42724b:	setbe  al
  42724e:	xor    eax,0x1
  427251:	test   al,al
  427253:	je     42725c <grisu3_diy_fp_encode_double@@Base+0xff9>
  427255:	mov    eax,0x1
  42725a:	jmp    427261 <grisu3_diy_fp_encode_double@@Base+0xffe>
  42725c:	mov    eax,0x0
  427261:	test   al,al
  427263:	je     42729a <grisu3_diy_fp_encode_double@@Base+0x1037>
  427265:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  42726a:	vxorpd xmm0,xmm0,xmm0
  42726e:	vcomisd xmm0,xmm1
  427272:	jbe    427287 <grisu3_diy_fp_encode_double@@Base+0x1024>
  427274:	vmovss xmm1,DWORD PTR [rbp-0x1c]
  427279:	vmovss xmm0,DWORD PTR [rip+0x162af]        # 43d530 <flatcc_builder_padding_base@@Base+0x25b0>
  427281:	vxorps xmm0,xmm0,xmm1
  427285:	jmp    42728c <grisu3_diy_fp_encode_double@@Base+0x1029>
  427287:	vmovss xmm0,DWORD PTR [rbp-0x1c]
  42728c:	mov    rax,QWORD PTR [rbp-0x38]
  427290:	vmovss DWORD PTR [rax],xmm0
  427294:	mov    rax,QWORD PTR [rbp-0x28]
  427298:	jmp    42729e <grisu3_diy_fp_encode_double@@Base+0x103b>
  42729a:	mov    rax,QWORD PTR [rbp-0x10]
  42729e:	mov    rcx,QWORD PTR [rbp-0x8]
  4272a2:	xor    rcx,QWORD PTR fs:0x28
  4272ab:	je     4272b2 <grisu3_diy_fp_encode_double@@Base+0x104f>
  4272ad:	call   4061a0 <__stack_chk_fail@plt>
  4272b2:	leave  
  4272b3:	ret    
  4272b4:	endbr64 
  4272b8:	push   rbp
  4272b9:	mov    rbp,rsp
  4272bc:	mov    DWORD PTR [rbp-0x4],edi
  4272bf:	cmp    DWORD PTR [rbp-0x4],0x5
  4272c3:	ja     427320 <grisu3_diy_fp_encode_double@@Base+0x10bd>
  4272c5:	mov    eax,DWORD PTR [rbp-0x4]
  4272c8:	lea    rdx,[rax*4+0x0]
  4272d0:	lea    rax,[rip+0x157c5]        # 43ca9c <flatcc_builder_padding_base@@Base+0x1b1c>
  4272d7:	mov    eax,DWORD PTR [rdx+rax*1]
  4272da:	movsxd rdx,eax
  4272dd:	lea    rax,[rip+0x157b8]        # 43ca9c <flatcc_builder_padding_base@@Base+0x1b1c>
  4272e4:	add    rax,rdx
  4272e7:	notrack jmp rax
  4272ea:	lea    rax,[rip+0x1573f]        # 43ca30 <flatcc_builder_padding_base@@Base+0x1ab0>
  4272f1:	jmp    427327 <grisu3_diy_fp_encode_double@@Base+0x10c4>
  4272f3:	lea    rax,[rip+0x15739]        # 43ca33 <flatcc_builder_padding_base@@Base+0x1ab3>
  4272fa:	jmp    427327 <grisu3_diy_fp_encode_double@@Base+0x10c4>
  4272fc:	lea    rax,[rip+0x15741]        # 43ca44 <flatcc_builder_padding_base@@Base+0x1ac4>
  427303:	jmp    427327 <grisu3_diy_fp_encode_double@@Base+0x10c4>
  427305:	lea    rax,[rip+0x15745]        # 43ca51 <flatcc_builder_padding_base@@Base+0x1ad1>
  42730c:	jmp    427327 <grisu3_diy_fp_encode_double@@Base+0x10c4>
  42730e:	lea    rax,[rip+0x1574d]        # 43ca62 <flatcc_builder_padding_base@@Base+0x1ae2>
  427315:	jmp    427327 <grisu3_diy_fp_encode_double@@Base+0x10c4>
  427317:	lea    rax,[rip+0x15758]        # 43ca76 <flatcc_builder_padding_base@@Base+0x1af6>
  42731e:	jmp    427327 <grisu3_diy_fp_encode_double@@Base+0x10c4>
  427320:	lea    rax,[rip+0x15764]        # 43ca8b <flatcc_builder_padding_base@@Base+0x1b0b>
  427327:	pop    rbp
  427328:	ret    
  427329:	endbr64 
  42732d:	push   rbp
  42732e:	mov    rbp,rsp
  427331:	mov    QWORD PTR [rbp-0x28],rdi
  427335:	mov    DWORD PTR [rbp-0x2c],esi
  427338:	mov    rcx,QWORD PTR [rbp-0x28]
  42733c:	movabs rdx,0xaaaaaaaaaaaaaaab
  427346:	mov    rax,rcx
  427349:	mul    rdx
  42734c:	shr    rdx,1
  42734f:	mov    rax,rdx
  427352:	add    rax,rax
  427355:	add    rax,rdx
  427358:	sub    rcx,rax
  42735b:	mov    rax,rcx
  42735e:	mov    QWORD PTR [rbp-0x8],rax
  427362:	mov    rax,QWORD PTR [rbp-0x28]
  427366:	shl    rax,0x2
  42736a:	movabs rdx,0xaaaaaaaaaaaaaaab
  427374:	mul    rdx
  427377:	mov    rax,rdx
  42737a:	shr    rax,1
  42737d:	add    rax,0x3
  427381:	and    rax,0xfffffffffffffffc
  427385:	mov    QWORD PTR [rbp-0x10],rax
  427389:	mov    eax,DWORD PTR [rbp-0x2c]
  42738c:	and    eax,0x80
  427391:	mov    DWORD PTR [rbp-0x14],eax
  427394:	cmp    DWORD PTR [rbp-0x14],0x0
  427398:	jne    4273b5 <grisu3_diy_fp_encode_double@@Base+0x1152>
  42739a:	cmp    QWORD PTR [rbp-0x8],0x1
  42739f:	je     4273ae <grisu3_diy_fp_encode_double@@Base+0x114b>
  4273a1:	cmp    QWORD PTR [rbp-0x8],0x2
  4273a6:	jne    4273b8 <grisu3_diy_fp_encode_double@@Base+0x1155>
  4273a8:	dec    QWORD PTR [rbp-0x10]
  4273ac:	jmp    4273b9 <grisu3_diy_fp_encode_double@@Base+0x1156>
  4273ae:	sub    QWORD PTR [rbp-0x10],0x2
  4273b3:	jmp    4273b9 <grisu3_diy_fp_encode_double@@Base+0x1156>
  4273b5:	nop
  4273b6:	jmp    4273b9 <grisu3_diy_fp_encode_double@@Base+0x1156>
  4273b8:	nop
  4273b9:	mov    rax,QWORD PTR [rbp-0x10]
  4273bd:	pop    rbp
  4273be:	ret    
  4273bf:	endbr64 
  4273c3:	push   rbp
  4273c4:	mov    rbp,rsp
  4273c7:	mov    QWORD PTR [rbp-0x18],rdi
  4273cb:	mov    rax,QWORD PTR [rbp-0x18]
  4273cf:	and    eax,0x3
  4273d2:	mov    QWORD PTR [rbp-0x10],rax
  4273d6:	mov    rax,QWORD PTR [rbp-0x18]
  4273da:	shr    rax,0x2
  4273de:	mov    rdx,rax
  4273e1:	mov    rax,rdx
  4273e4:	add    rax,rax
  4273e7:	add    rax,rdx
  4273ea:	mov    QWORD PTR [rbp-0x8],rax
  4273ee:	cmp    QWORD PTR [rbp-0x10],0x2
  4273f3:	je     427406 <grisu3_diy_fp_encode_double@@Base+0x11a3>
  4273f5:	cmp    QWORD PTR [rbp-0x10],0x3
  4273fa:	jne    42740f <grisu3_diy_fp_encode_double@@Base+0x11ac>
  4273fc:	mov    rax,QWORD PTR [rbp-0x8]
  427400:	add    rax,0x2
  427404:	jmp    427413 <grisu3_diy_fp_encode_double@@Base+0x11b0>
  427406:	mov    rax,QWORD PTR [rbp-0x8]
  42740a:	inc    rax
  42740d:	jmp    427413 <grisu3_diy_fp_encode_double@@Base+0x11b0>
  42740f:	mov    rax,QWORD PTR [rbp-0x8]
  427413:	pop    rbp
  427414:	ret    
  427415:	endbr64 
  427419:	push   rbp
  42741a:	mov    rbp,rsp
  42741d:	mov    QWORD PTR [rbp-0x38],rdi
  427421:	mov    QWORD PTR [rbp-0x40],rsi
  427425:	mov    QWORD PTR [rbp-0x48],rdx
  427429:	mov    QWORD PTR [rbp-0x50],rcx
  42742d:	mov    DWORD PTR [rbp-0x54],r8d
  427431:	lea    rax,[rip+0x15680]        # 43cab8 <flatcc_builder_padding_base@@Base+0x1b38>
  427438:	mov    QWORD PTR [rbp-0x18],rax
  42743c:	lea    rax,[rip+0x156bd]        # 43cb00 <flatcc_builder_padding_base@@Base+0x1b80>
  427443:	mov    QWORD PTR [rbp-0x10],rax
  427447:	mov    rax,QWORD PTR [rbp-0x38]
  42744b:	mov    QWORD PTR [rbp-0x8],rax
  42744f:	mov    eax,DWORD PTR [rbp-0x54]
  427452:	and    eax,0x80
  427457:	mov    DWORD PTR [rbp-0x2c],eax
  42745a:	mov    QWORD PTR [rbp-0x20],0x0
  427462:	mov    DWORD PTR [rbp-0x30],0x3
  427469:	cmp    QWORD PTR [rbp-0x50],0x0
  42746e:	jne    42747c <grisu3_diy_fp_encode_double@@Base+0x1219>
  427470:	mov    DWORD PTR [rbp-0x30],0x2
  427477:	jmp    4276d4 <grisu3_diy_fp_encode_double@@Base+0x1471>
  42747c:	mov    rax,QWORD PTR [rbp-0x50]
  427480:	mov    rax,QWORD PTR [rax]
  427483:	mov    QWORD PTR [rbp-0x20],rax
  427487:	and    DWORD PTR [rbp-0x54],0xffffff1f
  42748e:	cmp    DWORD PTR [rbp-0x54],0x0
  427492:	je     42749f <grisu3_diy_fp_encode_double@@Base+0x123c>
  427494:	cmp    DWORD PTR [rbp-0x54],0x1
  427498:	je     4274a9 <grisu3_diy_fp_encode_double@@Base+0x1246>
  42749a:	jmp    4276d4 <grisu3_diy_fp_encode_double@@Base+0x1471>
  42749f:	mov    rax,QWORD PTR [rbp-0x18]
  4274a3:	mov    QWORD PTR [rbp-0x28],rax
  4274a7:	jmp    4274b2 <grisu3_diy_fp_encode_double@@Base+0x124f>
  4274a9:	mov    rax,QWORD PTR [rbp-0x10]
  4274ad:	mov    QWORD PTR [rbp-0x28],rax
  4274b1:	nop
  4274b2:	mov    DWORD PTR [rbp-0x30],0x0
  4274b9:	jmp    42758b <grisu3_diy_fp_encode_double@@Base+0x1328>
  4274be:	mov    rax,QWORD PTR [rbp-0x40]
  4274c2:	movzx  eax,BYTE PTR [rax]
  4274c5:	shr    al,0x2
  4274c8:	movzx  edx,al
  4274cb:	mov    rax,QWORD PTR [rbp-0x28]
  4274cf:	add    rax,rdx
  4274d2:	movzx  eax,BYTE PTR [rax]
  4274d5:	mov    rdx,QWORD PTR [rbp-0x38]
  4274d9:	mov    BYTE PTR [rdx],al
  4274db:	mov    rax,QWORD PTR [rbp-0x40]
  4274df:	movzx  eax,BYTE PTR [rax]
  4274e2:	movzx  eax,al
  4274e5:	shl    eax,0x4
  4274e8:	and    eax,0x30
  4274eb:	mov    edx,eax
  4274ed:	mov    rax,QWORD PTR [rbp-0x40]
  4274f1:	inc    rax
  4274f4:	movzx  eax,BYTE PTR [rax]
  4274f7:	shr    al,0x4
  4274fa:	movzx  eax,al
  4274fd:	or     eax,edx
  4274ff:	movsxd rdx,eax
  427502:	mov    rax,QWORD PTR [rbp-0x28]
  427506:	add    rax,rdx
  427509:	mov    rdx,QWORD PTR [rbp-0x38]
  42750d:	inc    rdx
  427510:	movzx  eax,BYTE PTR [rax]
  427513:	mov    BYTE PTR [rdx],al
  427515:	mov    rax,QWORD PTR [rbp-0x40]
  427519:	inc    rax
  42751c:	movzx  eax,BYTE PTR [rax]
  42751f:	movzx  eax,al
  427522:	shl    eax,0x2
  427525:	and    eax,0x3c
  427528:	mov    edx,eax
  42752a:	mov    rax,QWORD PTR [rbp-0x40]
  42752e:	add    rax,0x2
  427532:	movzx  eax,BYTE PTR [rax]
  427535:	shr    al,0x6
  427538:	movzx  eax,al
  42753b:	or     eax,edx
  42753d:	movsxd rdx,eax
  427540:	mov    rax,QWORD PTR [rbp-0x28]
  427544:	add    rax,rdx
  427547:	mov    rdx,QWORD PTR [rbp-0x38]
  42754b:	add    rdx,0x2
  42754f:	movzx  eax,BYTE PTR [rax]
  427552:	mov    BYTE PTR [rdx],al
  427554:	mov    rax,QWORD PTR [rbp-0x40]
  427558:	add    rax,0x2
  42755c:	movzx  eax,BYTE PTR [rax]
  42755f:	movzx  eax,al
  427562:	and    eax,0x3f
  427565:	mov    rdx,rax
  427568:	mov    rax,QWORD PTR [rbp-0x28]
  42756c:	add    rax,rdx
  42756f:	mov    rdx,QWORD PTR [rbp-0x38]
  427573:	add    rdx,0x3
  427577:	movzx  eax,BYTE PTR [rax]
  42757a:	mov    BYTE PTR [rdx],al
  42757c:	sub    QWORD PTR [rbp-0x20],0x3
  427581:	add    QWORD PTR [rbp-0x38],0x4
  427586:	add    QWORD PTR [rbp-0x40],0x3
  42758b:	cmp    QWORD PTR [rbp-0x20],0x2
  427590:	ja     4274be <grisu3_diy_fp_encode_double@@Base+0x125b>
  427596:	cmp    QWORD PTR [rbp-0x20],0x1
  42759b:	je     42764f <grisu3_diy_fp_encode_double@@Base+0x13ec>
  4275a1:	cmp    QWORD PTR [rbp-0x20],0x2
  4275a6:	jne    4276bf <grisu3_diy_fp_encode_double@@Base+0x145c>
  4275ac:	mov    rax,QWORD PTR [rbp-0x40]
  4275b0:	movzx  eax,BYTE PTR [rax]
  4275b3:	shr    al,0x2
  4275b6:	movzx  edx,al
  4275b9:	mov    rax,QWORD PTR [rbp-0x28]
  4275bd:	add    rax,rdx
  4275c0:	movzx  eax,BYTE PTR [rax]
  4275c3:	mov    rdx,QWORD PTR [rbp-0x38]
  4275c7:	mov    BYTE PTR [rdx],al
  4275c9:	mov    rax,QWORD PTR [rbp-0x40]
  4275cd:	movzx  eax,BYTE PTR [rax]
  4275d0:	movzx  eax,al
  4275d3:	shl    eax,0x4
  4275d6:	and    eax,0x30
  4275d9:	mov    edx,eax
  4275db:	mov    rax,QWORD PTR [rbp-0x40]
  4275df:	inc    rax
  4275e2:	movzx  eax,BYTE PTR [rax]
  4275e5:	shr    al,0x4
  4275e8:	movzx  eax,al
  4275eb:	or     eax,edx
  4275ed:	movsxd rdx,eax
  4275f0:	mov    rax,QWORD PTR [rbp-0x28]
  4275f4:	add    rax,rdx
  4275f7:	mov    rdx,QWORD PTR [rbp-0x38]
  4275fb:	inc    rdx
  4275fe:	movzx  eax,BYTE PTR [rax]
  427601:	mov    BYTE PTR [rdx],al
  427603:	mov    rax,QWORD PTR [rbp-0x40]
  427607:	inc    rax
  42760a:	movzx  eax,BYTE PTR [rax]
  42760d:	movzx  eax,al
  427610:	shl    eax,0x2
  427613:	cdqe   
  427615:	and    eax,0x3c
  427618:	mov    rdx,rax
  42761b:	mov    rax,QWORD PTR [rbp-0x28]
  42761f:	add    rax,rdx
  427622:	mov    rdx,QWORD PTR [rbp-0x38]
  427626:	add    rdx,0x2
  42762a:	movzx  eax,BYTE PTR [rax]
  42762d:	mov    BYTE PTR [rdx],al
  42762f:	add    QWORD PTR [rbp-0x38],0x3
  427634:	cmp    DWORD PTR [rbp-0x2c],0x0
  427638:	je     4276c8 <grisu3_diy_fp_encode_double@@Base+0x1465>
  42763e:	mov    rax,QWORD PTR [rbp-0x38]
  427642:	lea    rdx,[rax+0x1]
  427646:	mov    QWORD PTR [rbp-0x38],rdx
  42764a:	mov    BYTE PTR [rax],0x3d
  42764d:	jmp    4276c8 <grisu3_diy_fp_encode_double@@Base+0x1465>
  42764f:	mov    rax,QWORD PTR [rbp-0x40]
  427653:	movzx  eax,BYTE PTR [rax]
  427656:	shr    al,0x2
  427659:	movzx  edx,al
  42765c:	mov    rax,QWORD PTR [rbp-0x28]
  427660:	add    rax,rdx
  427663:	movzx  eax,BYTE PTR [rax]
  427666:	mov    rdx,QWORD PTR [rbp-0x38]
  42766a:	mov    BYTE PTR [rdx],al
  42766c:	mov    rax,QWORD PTR [rbp-0x40]
  427670:	movzx  eax,BYTE PTR [rax]
  427673:	movzx  eax,al
  427676:	shl    eax,0x4
  427679:	cdqe   
  42767b:	and    eax,0x30
  42767e:	mov    rdx,rax
  427681:	mov    rax,QWORD PTR [rbp-0x28]
  427685:	add    rax,rdx
  427688:	mov    rdx,QWORD PTR [rbp-0x38]
  42768c:	inc    rdx
  42768f:	movzx  eax,BYTE PTR [rax]
  427692:	mov    BYTE PTR [rdx],al
  427694:	add    QWORD PTR [rbp-0x38],0x2
  427699:	cmp    DWORD PTR [rbp-0x2c],0x0
  42769d:	je     4276cb <grisu3_diy_fp_encode_double@@Base+0x1468>
  42769f:	mov    rax,QWORD PTR [rbp-0x38]
  4276a3:	lea    rdx,[rax+0x1]
  4276a7:	mov    QWORD PTR [rbp-0x38],rdx
  4276ab:	mov    BYTE PTR [rax],0x3d
  4276ae:	mov    rax,QWORD PTR [rbp-0x38]
  4276b2:	lea    rdx,[rax+0x1]
  4276b6:	mov    QWORD PTR [rbp-0x38],rdx
  4276ba:	mov    BYTE PTR [rax],0x3d
  4276bd:	jmp    4276cb <grisu3_diy_fp_encode_double@@Base+0x1468>
  4276bf:	mov    DWORD PTR [rbp-0x2c],0x0
  4276c6:	jmp    4276cc <grisu3_diy_fp_encode_double@@Base+0x1469>
  4276c8:	nop
  4276c9:	jmp    4276cc <grisu3_diy_fp_encode_double@@Base+0x1469>
  4276cb:	nop
  4276cc:	mov    QWORD PTR [rbp-0x20],0x0
  4276d4:	cmp    QWORD PTR [rbp-0x48],0x0
  4276d9:	je     4276ed <grisu3_diy_fp_encode_double@@Base+0x148a>
  4276db:	mov    rax,QWORD PTR [rbp-0x38]
  4276df:	sub    rax,QWORD PTR [rbp-0x8]
  4276e3:	mov    rdx,rax
  4276e6:	mov    rax,QWORD PTR [rbp-0x48]
  4276ea:	mov    QWORD PTR [rax],rdx
  4276ed:	cmp    QWORD PTR [rbp-0x50],0x0
  4276f2:	je     427709 <grisu3_diy_fp_encode_double@@Base+0x14a6>
  4276f4:	mov    rax,QWORD PTR [rbp-0x50]
  4276f8:	mov    rax,QWORD PTR [rax]
  4276fb:	sub    rax,QWORD PTR [rbp-0x20]
  4276ff:	mov    rdx,rax
  427702:	mov    rax,QWORD PTR [rbp-0x50]
  427706:	mov    QWORD PTR [rax],rdx
  427709:	mov    eax,DWORD PTR [rbp-0x30]
  42770c:	pop    rbp
  42770d:	ret    
  42770e:	endbr64 
  427712:	push   rbp
  427713:	mov    rbp,rsp
  427716:	add    rsp,0xffffffffffffff80
  42771a:	mov    QWORD PTR [rbp-0x58],rdi
  42771e:	mov    QWORD PTR [rbp-0x60],rsi
  427722:	mov    QWORD PTR [rbp-0x68],rdx
  427726:	mov    QWORD PTR [rbp-0x70],rcx
  42772a:	mov    DWORD PTR [rbp-0x74],r8d
  42772e:	mov    rax,QWORD PTR fs:0x28
  427737:	mov    QWORD PTR [rbp-0x8],rax
  42773b:	xor    eax,eax
  42773d:	mov    DWORD PTR [rbp-0x50],0x0
  427744:	mov    rax,QWORD PTR [rbp-0x58]
  427748:	mov    QWORD PTR [rbp-0x18],rax
  42774c:	mov    QWORD PTR [rbp-0x38],0xffffffffffffffff
  427754:	mov    QWORD PTR [rbp-0x30],0xffffffffffffffff
  42775c:	lea    rax,[rip+0x1595d]        # 43d0c0 <flatcc_builder_padding_base@@Base+0x2140>
  427763:	mov    QWORD PTR [rbp-0x20],rax
  427767:	mov    eax,DWORD PTR [rbp-0x74]
  42776a:	and    eax,0x20
  42776d:	mov    DWORD PTR [rbp-0x4c],eax
  427770:	cmp    QWORD PTR [rbp-0x70],0x0
  427775:	je     427782 <grisu3_diy_fp_encode_double@@Base+0x151f>
  427777:	mov    rax,QWORD PTR [rbp-0x70]
  42777b:	mov    rax,QWORD PTR [rax]
  42777e:	mov    QWORD PTR [rbp-0x30],rax
  427782:	mov    rax,QWORD PTR [rbp-0x30]
  427786:	mov    QWORD PTR [rbp-0x28],rax
  42778a:	and    DWORD PTR [rbp-0x74],0xffffff1f
  427791:	cmp    DWORD PTR [rbp-0x74],0x0
  427795:	je     42779f <grisu3_diy_fp_encode_double@@Base+0x153c>
  427797:	cmp    DWORD PTR [rbp-0x74],0x1
  42779b:	je     4277bb <grisu3_diy_fp_encode_double@@Base+0x1558>
  42779d:	jmp    4277d7 <grisu3_diy_fp_encode_double@@Base+0x1574>
  42779f:	cmp    DWORD PTR [rbp-0x4c],0x0
  4277a3:	je     4277ae <grisu3_diy_fp_encode_double@@Base+0x154b>
  4277a5:	lea    rax,[rip+0x15a14]        # 43d1c0 <flatcc_builder_padding_base@@Base+0x2240>
  4277ac:	jmp    4277b5 <grisu3_diy_fp_encode_double@@Base+0x1552>
  4277ae:	lea    rax,[rip+0x1590b]        # 43d0c0 <flatcc_builder_padding_base@@Base+0x2140>
  4277b5:	mov    QWORD PTR [rbp-0x20],rax
  4277b9:	jmp    4277e3 <grisu3_diy_fp_encode_double@@Base+0x1580>
  4277bb:	cmp    DWORD PTR [rbp-0x4c],0x0
  4277bf:	je     4277ca <grisu3_diy_fp_encode_double@@Base+0x1567>
  4277c1:	lea    rax,[rip+0x15af8]        # 43d2c0 <flatcc_builder_padding_base@@Base+0x2340>
  4277c8:	jmp    4277d1 <grisu3_diy_fp_encode_double@@Base+0x156e>
  4277ca:	lea    rax,[rip+0x15bef]        # 43d3c0 <flatcc_builder_padding_base@@Base+0x2440>
  4277d1:	mov    QWORD PTR [rbp-0x20],rax
  4277d5:	jmp    4277e3 <grisu3_diy_fp_encode_double@@Base+0x1580>
  4277d7:	mov    DWORD PTR [rbp-0x50],0x3
  4277de:	jmp    4279e3 <grisu3_diy_fp_encode_double@@Base+0x1780>
  4277e3:	cmp    QWORD PTR [rbp-0x68],0x0
  4277e8:	je     4279d7 <grisu3_diy_fp_encode_double@@Base+0x1774>
  4277ee:	mov    rax,QWORD PTR [rbp-0x68]
  4277f2:	mov    rax,QWORD PTR [rax]
  4277f5:	test   rax,rax
  4277f8:	je     4279d7 <grisu3_diy_fp_encode_double@@Base+0x1774>
  4277fe:	mov    rax,QWORD PTR [rbp-0x68]
  427802:	mov    rax,QWORD PTR [rax]
  427805:	mov    QWORD PTR [rbp-0x38],rax
  427809:	jmp    4279d7 <grisu3_diy_fp_encode_double@@Base+0x1774>
  42780e:	mov    QWORD PTR [rbp-0x48],0x0
  427816:	jmp    427945 <grisu3_diy_fp_encode_double@@Base+0x16e2>
  42781b:	mov    rax,QWORD PTR [rbp-0x30]
  42781f:	cmp    rax,QWORD PTR [rbp-0x48]
  427823:	jne    42783a <grisu3_diy_fp_encode_double@@Base+0x15d7>
  427825:	mov    rax,QWORD PTR [rbp-0x48]
  427829:	mov    QWORD PTR [rbp-0x40],rax
  42782d:	mov    rax,QWORD PTR [rbp-0x48]
  427831:	sub    QWORD PTR [rbp-0x30],rax
  427835:	jmp    427a33 <grisu3_diy_fp_encode_double@@Base+0x17d0>
  42783a:	mov    rdx,QWORD PTR [rbp-0x60]
  42783e:	mov    rax,QWORD PTR [rbp-0x48]
  427842:	add    rax,rdx
  427845:	movzx  eax,BYTE PTR [rax]
  427848:	movzx  edx,al
  42784b:	mov    rax,QWORD PTR [rbp-0x20]
  42784f:	add    rax,rdx
  427852:	movzx  eax,BYTE PTR [rax]
  427855:	lea    rcx,[rbp-0xc]
  427859:	mov    rdx,QWORD PTR [rbp-0x48]
  42785d:	add    rdx,rcx
  427860:	mov    BYTE PTR [rdx],al
  427862:	lea    rdx,[rbp-0xc]
  427866:	mov    rax,QWORD PTR [rbp-0x48]
  42786a:	add    rax,rdx
  42786d:	movzx  edx,BYTE PTR [rax]
  427870:	movzx  eax,BYTE PTR [rip+0x15c49]        # 43d4c0 <flatcc_builder_padding_base@@Base+0x2540>
  427877:	cmp    dl,al
  427879:	jb     427941 <grisu3_diy_fp_encode_double@@Base+0x16de>
  42787f:	lea    rdx,[rbp-0xc]
  427883:	mov    rax,QWORD PTR [rbp-0x48]
  427887:	add    rax,rdx
  42788a:	movzx  edx,BYTE PTR [rax]
  42788d:	movzx  eax,BYTE PTR [rip+0x15c2d]        # 43d4c1 <flatcc_builder_padding_base@@Base+0x2541>
  427894:	cmp    dl,al
  427896:	jne    4278a9 <grisu3_diy_fp_encode_double@@Base+0x1646>
  427898:	inc    QWORD PTR [rbp-0x60]
  42789c:	dec    QWORD PTR [rbp-0x30]
  4278a0:	dec    QWORD PTR [rbp-0x48]
  4278a4:	jmp    427941 <grisu3_diy_fp_encode_double@@Base+0x16de>
  4278a9:	mov    rax,QWORD PTR [rbp-0x48]
  4278ad:	mov    QWORD PTR [rbp-0x40],rax
  4278b1:	lea    rdx,[rbp-0xc]
  4278b5:	mov    rax,QWORD PTR [rbp-0x48]
  4278b9:	add    rax,rdx
  4278bc:	movzx  edx,BYTE PTR [rax]
  4278bf:	movzx  eax,BYTE PTR [rip+0x15bfc]        # 43d4c2 <flatcc_builder_padding_base@@Base+0x2542>
  4278c6:	cmp    dl,al
  4278c8:	jne    427934 <grisu3_diy_fp_encode_double@@Base+0x16d1>
  4278ca:	inc    QWORD PTR [rbp-0x48]
  4278ce:	jmp    427920 <grisu3_diy_fp_encode_double@@Base+0x16bd>
  4278d0:	mov    rdx,QWORD PTR [rbp-0x60]
  4278d4:	mov    rax,QWORD PTR [rbp-0x48]
  4278d8:	add    rax,rdx
  4278db:	movzx  eax,BYTE PTR [rax]
  4278de:	movzx  edx,al
  4278e1:	mov    rax,QWORD PTR [rbp-0x20]
  4278e5:	add    rax,rdx
  4278e8:	movzx  edx,BYTE PTR [rax]
  4278eb:	movzx  eax,BYTE PTR [rip+0x15bd0]        # 43d4c2 <flatcc_builder_padding_base@@Base+0x2542>
  4278f2:	cmp    dl,al
  4278f4:	je     42791c <grisu3_diy_fp_encode_double@@Base+0x16b9>
  4278f6:	mov    rdx,QWORD PTR [rbp-0x60]
  4278fa:	mov    rax,QWORD PTR [rbp-0x48]
  4278fe:	add    rax,rdx
  427901:	movzx  eax,BYTE PTR [rax]
  427904:	movzx  edx,al
  427907:	mov    rax,QWORD PTR [rbp-0x20]
  42790b:	add    rax,rdx
  42790e:	movzx  edx,BYTE PTR [rax]
  427911:	movzx  eax,BYTE PTR [rip+0x15ba9]        # 43d4c1 <flatcc_builder_padding_base@@Base+0x2541>
  427918:	cmp    dl,al
  42791a:	jne    427933 <grisu3_diy_fp_encode_double@@Base+0x16d0>
  42791c:	inc    QWORD PTR [rbp-0x48]
  427920:	mov    rax,QWORD PTR [rbp-0x48]
  427924:	cmp    rax,QWORD PTR [rbp-0x30]
  427928:	jae    427934 <grisu3_diy_fp_encode_double@@Base+0x16d1>
  42792a:	cmp    QWORD PTR [rbp-0x48],0x7
  42792f:	jbe    4278d0 <grisu3_diy_fp_encode_double@@Base+0x166d>
  427931:	jmp    427934 <grisu3_diy_fp_encode_double@@Base+0x16d1>
  427933:	nop
  427934:	mov    rax,QWORD PTR [rbp-0x48]
  427938:	sub    QWORD PTR [rbp-0x30],rax
  42793c:	jmp    427a33 <grisu3_diy_fp_encode_double@@Base+0x17d0>
  427941:	inc    QWORD PTR [rbp-0x48]
  427945:	cmp    QWORD PTR [rbp-0x48],0x3
  42794a:	jbe    42781b <grisu3_diy_fp_encode_double@@Base+0x15b8>
  427950:	cmp    QWORD PTR [rbp-0x38],0x2
  427955:	jbe    427b1c <grisu3_diy_fp_encode_double@@Base+0x18b9>
  42795b:	movzx  eax,BYTE PTR [rbp-0xc]
  42795f:	movzx  eax,al
  427962:	shl    eax,0x2
  427965:	mov    edx,eax
  427967:	movzx  eax,BYTE PTR [rbp-0xb]
  42796b:	shr    al,0x4
  42796e:	or     eax,edx
  427970:	mov    edx,eax
  427972:	mov    rax,QWORD PTR [rbp-0x58]
  427976:	mov    BYTE PTR [rax],dl
  427978:	movzx  eax,BYTE PTR [rbp-0xb]
  42797c:	movzx  eax,al
  42797f:	shl    eax,0x4
  427982:	mov    edx,eax
  427984:	movzx  eax,BYTE PTR [rbp-0xa]
  427988:	shr    al,0x2
  42798b:	mov    ecx,edx
  42798d:	or     ecx,eax
  42798f:	mov    rax,QWORD PTR [rbp-0x58]
  427993:	lea    rdx,[rax+0x1]
  427997:	mov    eax,ecx
  427999:	mov    BYTE PTR [rdx],al
  42799b:	movzx  eax,BYTE PTR [rbp-0xa]
  42799f:	movzx  eax,al
  4279a2:	shl    eax,0x6
  4279a5:	mov    edx,eax
  4279a7:	movzx  eax,BYTE PTR [rbp-0x9]
  4279ab:	mov    ecx,edx
  4279ad:	or     ecx,eax
  4279af:	mov    rax,QWORD PTR [rbp-0x58]
  4279b3:	lea    rdx,[rax+0x2]
  4279b7:	mov    eax,ecx
  4279b9:	mov    BYTE PTR [rdx],al
  4279bb:	add    QWORD PTR [rbp-0x58],0x3
  4279c0:	add    QWORD PTR [rbp-0x60],0x4
  4279c5:	sub    QWORD PTR [rbp-0x38],0x3
  4279ca:	sub    QWORD PTR [rbp-0x30],0x4
  4279cf:	mov    rax,QWORD PTR [rbp-0x30]
  4279d3:	mov    QWORD PTR [rbp-0x28],rax
  4279d7:	cmp    QWORD PTR [rbp-0x38],0x0
  4279dc:	jne    42780e <grisu3_diy_fp_encode_double@@Base+0x15ab>
  4279e2:	nop
  4279e3:	cmp    QWORD PTR [rbp-0x68],0x0
  4279e8:	je     4279fc <grisu3_diy_fp_encode_double@@Base+0x1799>
  4279ea:	mov    rax,QWORD PTR [rbp-0x58]
  4279ee:	sub    rax,QWORD PTR [rbp-0x18]
  4279f2:	mov    rdx,rax
  4279f5:	mov    rax,QWORD PTR [rbp-0x68]
  4279f9:	mov    QWORD PTR [rax],rdx
  4279fc:	cmp    QWORD PTR [rbp-0x70],0x0
  427a01:	je     427a18 <grisu3_diy_fp_encode_double@@Base+0x17b5>
  427a03:	mov    rax,QWORD PTR [rbp-0x70]
  427a07:	mov    rax,QWORD PTR [rax]
  427a0a:	sub    rax,QWORD PTR [rbp-0x28]
  427a0e:	mov    rdx,rax
  427a11:	mov    rax,QWORD PTR [rbp-0x70]
  427a15:	mov    QWORD PTR [rax],rdx
  427a18:	mov    eax,DWORD PTR [rbp-0x50]
  427a1b:	mov    rsi,QWORD PTR [rbp-0x8]
  427a1f:	xor    rsi,QWORD PTR fs:0x28
  427a28:	je     427b34 <grisu3_diy_fp_encode_double@@Base+0x18d1>
  427a2e:	jmp    427b2f <grisu3_diy_fp_encode_double@@Base+0x18cc>
  427a33:	cmp    QWORD PTR [rbp-0x40],0x2
  427a38:	je     427a51 <grisu3_diy_fp_encode_double@@Base+0x17ee>
  427a3a:	cmp    QWORD PTR [rbp-0x40],0x3
  427a3f:	je     427a94 <grisu3_diy_fp_encode_double@@Base+0x1831>
  427a41:	cmp    QWORD PTR [rbp-0x40],0x0
  427a46:	jne    427af3 <grisu3_diy_fp_encode_double@@Base+0x1890>
  427a4c:	jmp    427aff <grisu3_diy_fp_encode_double@@Base+0x189c>
  427a51:	movzx  eax,BYTE PTR [rbp-0xb]
  427a55:	movzx  eax,al
  427a58:	shl    eax,0x4
  427a5b:	movzx  eax,al
  427a5e:	test   eax,eax
  427a60:	jne    427b0c <grisu3_diy_fp_encode_double@@Base+0x18a9>
  427a66:	cmp    QWORD PTR [rbp-0x38],0x0
  427a6b:	je     427b1f <grisu3_diy_fp_encode_double@@Base+0x18bc>
  427a71:	movzx  eax,BYTE PTR [rbp-0xc]
  427a75:	movzx  eax,al
  427a78:	shl    eax,0x2
  427a7b:	mov    edx,eax
  427a7d:	movzx  eax,BYTE PTR [rbp-0xb]
  427a81:	shr    al,0x4
  427a84:	or     eax,edx
  427a86:	mov    edx,eax
  427a88:	mov    rax,QWORD PTR [rbp-0x58]
  427a8c:	mov    BYTE PTR [rax],dl
  427a8e:	inc    QWORD PTR [rbp-0x58]
  427a92:	jmp    427aff <grisu3_diy_fp_encode_double@@Base+0x189c>
  427a94:	movzx  eax,BYTE PTR [rbp-0xa]
  427a98:	movzx  eax,al
  427a9b:	shl    eax,0x6
  427a9e:	movzx  eax,al
  427aa1:	test   eax,eax
  427aa3:	jne    427b0f <grisu3_diy_fp_encode_double@@Base+0x18ac>
  427aa5:	cmp    QWORD PTR [rbp-0x38],0x1
  427aaa:	jbe    427b22 <grisu3_diy_fp_encode_double@@Base+0x18bf>
  427aac:	movzx  eax,BYTE PTR [rbp-0xc]
  427ab0:	movzx  eax,al
  427ab3:	shl    eax,0x2
  427ab6:	mov    edx,eax
  427ab8:	movzx  eax,BYTE PTR [rbp-0xb]
  427abc:	shr    al,0x4
  427abf:	or     eax,edx
  427ac1:	mov    edx,eax
  427ac3:	mov    rax,QWORD PTR [rbp-0x58]
  427ac7:	mov    BYTE PTR [rax],dl
  427ac9:	movzx  eax,BYTE PTR [rbp-0xb]
  427acd:	movzx  eax,al
  427ad0:	shl    eax,0x4
  427ad3:	mov    edx,eax
  427ad5:	movzx  eax,BYTE PTR [rbp-0xa]
  427ad9:	shr    al,0x2
  427adc:	mov    ecx,edx
  427ade:	or     ecx,eax
  427ae0:	mov    rax,QWORD PTR [rbp-0x58]
  427ae4:	lea    rdx,[rax+0x1]
  427ae8:	mov    eax,ecx
  427aea:	mov    BYTE PTR [rdx],al
  427aec:	add    QWORD PTR [rbp-0x58],0x2
  427af1:	jmp    427aff <grisu3_diy_fp_encode_double@@Base+0x189c>
  427af3:	mov    DWORD PTR [rbp-0x50],0x4
  427afa:	jmp    4279e3 <grisu3_diy_fp_encode_double@@Base+0x1780>
  427aff:	mov    rax,QWORD PTR [rbp-0x30]
  427b03:	mov    QWORD PTR [rbp-0x28],rax
  427b07:	jmp    4279e3 <grisu3_diy_fp_encode_double@@Base+0x1780>
  427b0c:	nop
  427b0d:	jmp    427b10 <grisu3_diy_fp_encode_double@@Base+0x18ad>
  427b0f:	nop
  427b10:	mov    DWORD PTR [rbp-0x50],0x5
  427b17:	jmp    4279e3 <grisu3_diy_fp_encode_double@@Base+0x1780>
  427b1c:	nop
  427b1d:	jmp    427b23 <grisu3_diy_fp_encode_double@@Base+0x18c0>
  427b1f:	nop
  427b20:	jmp    427b23 <grisu3_diy_fp_encode_double@@Base+0x18c0>
  427b22:	nop
  427b23:	mov    DWORD PTR [rbp-0x50],0x1
  427b2a:	jmp    4279e3 <grisu3_diy_fp_encode_double@@Base+0x1780>
  427b2f:	call   4061a0 <__stack_chk_fail@plt>
  427b34:	leave  
  427b35:	ret    

0000000000427b36 <flatcc_json_parser_error_string@@Base>:
  427b36:	endbr64 
  427b3a:	push   rbp
  427b3b:	mov    rbp,rsp
  427b3e:	mov    DWORD PTR [rbp-0x4],edi
  427b41:	cmp    DWORD PTR [rbp-0x4],0x22
  427b45:	ja     427cea <flatcc_json_parser_error_string@@Base+0x1b4>
  427b4b:	mov    eax,DWORD PTR [rbp-0x4]
  427b4e:	lea    rdx,[rax*4+0x0]
  427b56:	lea    rax,[rip+0x15273]        # 43cdd0 <flatcc_builder_padding_base@@Base+0x1e50>
  427b5d:	mov    eax,DWORD PTR [rdx+rax*1]
  427b60:	movsxd rdx,eax
  427b63:	lea    rax,[rip+0x15266]        # 43cdd0 <flatcc_builder_padding_base@@Base+0x1e50>
  427b6a:	add    rax,rdx
  427b6d:	notrack jmp rax
  427b70:	lea    rax,[rip+0x14eb9]        # 43ca30 <flatcc_builder_padding_base@@Base+0x1ab0>
  427b77:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427b7c:	lea    rax,[rip+0x14fbe]        # 43cb41 <flatcc_builder_padding_base@@Base+0x1bc1>
  427b83:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427b88:	lea    rax,[rip+0x14fb6]        # 43cb45 <flatcc_builder_padding_base@@Base+0x1bc5>
  427b8f:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427b94:	lea    rax,[rip+0x14fb7]        # 43cb52 <flatcc_builder_padding_base@@Base+0x1bd2>
  427b9b:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427ba0:	lea    rax,[rip+0x14fba]        # 43cb61 <flatcc_builder_padding_base@@Base+0x1be1>
  427ba7:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427bac:	lea    rax,[rip+0x14fbd]        # 43cb70 <flatcc_builder_padding_base@@Base+0x1bf0>
  427bb3:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427bb8:	lea    rax,[rip+0x14fc6]        # 43cb85 <flatcc_builder_padding_base@@Base+0x1c05>
  427bbf:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427bc4:	lea    rax,[rip+0x14fca]        # 43cb95 <flatcc_builder_padding_base@@Base+0x1c15>
  427bcb:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427bd0:	lea    rax,[rip+0x14fc7]        # 43cb9e <flatcc_builder_padding_base@@Base+0x1c1e>
  427bd7:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427bdc:	lea    rax,[rip+0x14fc5]        # 43cba8 <flatcc_builder_padding_base@@Base+0x1c28>
  427be3:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427be8:	lea    rax,[rip+0x14fca]        # 43cbb9 <flatcc_builder_padding_base@@Base+0x1c39>
  427bef:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427bf4:	lea    rax,[rip+0x14fd0]        # 43cbcb <flatcc_builder_padding_base@@Base+0x1c4b>
  427bfb:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427c00:	lea    rax,[rip+0x14fd3]        # 43cbda <flatcc_builder_padding_base@@Base+0x1c5a>
  427c07:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427c0c:	lea    rax,[rip+0x14fd8]        # 43cbeb <flatcc_builder_padding_base@@Base+0x1c6b>
  427c13:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427c18:	lea    rax,[rip+0x14fdb]        # 43cbfa <flatcc_builder_padding_base@@Base+0x1c7a>
  427c1f:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427c24:	lea    rax,[rip+0x14fe8]        # 43cc13 <flatcc_builder_padding_base@@Base+0x1c93>
  427c2b:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427c30:	lea    rax,[rip+0x14fef]        # 43cc26 <flatcc_builder_padding_base@@Base+0x1ca6>
  427c37:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427c3c:	lea    rax,[rip+0x14ff3]        # 43cc36 <flatcc_builder_padding_base@@Base+0x1cb6>
  427c43:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427c48:	lea    rax,[rip+0x14ff9]        # 43cc48 <flatcc_builder_padding_base@@Base+0x1cc8>
  427c4f:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427c54:	lea    rax,[rip+0x14ffc]        # 43cc57 <flatcc_builder_padding_base@@Base+0x1cd7>
  427c5b:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427c60:	lea    rax,[rip+0x14ffd]        # 43cc64 <flatcc_builder_padding_base@@Base+0x1ce4>
  427c67:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427c6c:	lea    rax,[rip+0x15005]        # 43cc78 <flatcc_builder_padding_base@@Base+0x1cf8>
  427c73:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427c75:	lea    rax,[rip+0x1500c]        # 43cc88 <flatcc_builder_padding_base@@Base+0x1d08>
  427c7c:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427c7e:	lea    rax,[rip+0x15013]        # 43cc98 <flatcc_builder_padding_base@@Base+0x1d18>
  427c85:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427c87:	lea    rax,[rip+0x1502e]        # 43ccbc <flatcc_builder_padding_base@@Base+0x1d3c>
  427c8e:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427c90:	lea    rax,[rip+0x15039]        # 43ccd0 <flatcc_builder_padding_base@@Base+0x1d50>
  427c97:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427c99:	lea    rax,[rip+0x15050]        # 43ccf0 <flatcc_builder_padding_base@@Base+0x1d70>
  427ca0:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427ca2:	lea    rax,[rip+0x15066]        # 43cd0f <flatcc_builder_padding_base@@Base+0x1d8f>
  427ca9:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427cab:	lea    rax,[rip+0x15078]        # 43cd2a <flatcc_builder_padding_base@@Base+0x1daa>
  427cb2:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427cb4:	lea    rax,[rip+0x15089]        # 43cd44 <flatcc_builder_padding_base@@Base+0x1dc4>
  427cbb:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427cbd:	lea    rax,[rip+0x15097]        # 43cd5b <flatcc_builder_padding_base@@Base+0x1ddb>
  427cc4:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427cc6:	lea    rax,[rip+0x150ab]        # 43cd78 <flatcc_builder_padding_base@@Base+0x1df8>
  427ccd:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427ccf:	lea    rax,[rip+0x150b9]        # 43cd8f <flatcc_builder_padding_base@@Base+0x1e0f>
  427cd6:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427cd8:	lea    rax,[rip+0x150ca]        # 43cda9 <flatcc_builder_padding_base@@Base+0x1e29>
  427cdf:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427ce1:	lea    rax,[rip+0x150cf]        # 43cdb7 <flatcc_builder_padding_base@@Base+0x1e37>
  427ce8:	jmp    427cf1 <flatcc_json_parser_error_string@@Base+0x1bb>
  427cea:	lea    rax,[rip+0x150d4]        # 43cdc5 <flatcc_builder_padding_base@@Base+0x1e45>
  427cf1:	pop    rbp
  427cf2:	ret    

0000000000427cf3 <flatcc_json_parser_set_error@@Base>:
  427cf3:	endbr64 
  427cf7:	push   rbp
  427cf8:	mov    rbp,rsp
  427cfb:	mov    QWORD PTR [rbp-0x8],rdi
  427cff:	mov    QWORD PTR [rbp-0x10],rsi
  427d03:	mov    QWORD PTR [rbp-0x18],rdx
  427d07:	mov    DWORD PTR [rbp-0x1c],ecx
  427d0a:	mov    rax,QWORD PTR [rbp-0x8]
  427d0e:	mov    eax,DWORD PTR [rax+0x20]
  427d11:	test   eax,eax
  427d13:	jne    427d48 <flatcc_json_parser_set_error@@Base+0x55>
  427d15:	mov    rax,QWORD PTR [rbp-0x8]
  427d19:	mov    edx,DWORD PTR [rbp-0x1c]
  427d1c:	mov    DWORD PTR [rax+0x20],edx
  427d1f:	mov    rax,QWORD PTR [rbp-0x8]
  427d23:	mov    rax,QWORD PTR [rax+0x8]
  427d27:	mov    rdx,QWORD PTR [rbp-0x10]
  427d2b:	sub    rdx,rax
  427d2e:	mov    rax,rdx
  427d31:	inc    eax
  427d33:	mov    edx,eax
  427d35:	mov    rax,QWORD PTR [rbp-0x8]
  427d39:	mov    DWORD PTR [rax+0x1c],edx
  427d3c:	mov    rax,QWORD PTR [rbp-0x8]
  427d40:	mov    rdx,QWORD PTR [rbp-0x10]
  427d44:	mov    QWORD PTR [rax+0x38],rdx
  427d48:	mov    rax,QWORD PTR [rbp-0x18]
  427d4c:	pop    rbp
  427d4d:	ret    

0000000000427d4e <flatcc_json_parser_string_part@@Base>:
  427d4e:	endbr64 
  427d52:	push   rbp
  427d53:	mov    rbp,rsp
  427d56:	sub    rsp,0x20
  427d5a:	mov    QWORD PTR [rbp-0x8],rdi
  427d5e:	mov    QWORD PTR [rbp-0x10],rsi
  427d62:	mov    QWORD PTR [rbp-0x18],rdx
  427d66:	jmp    427d6c <flatcc_json_parser_string_part@@Base+0x1e>
  427d68:	inc    QWORD PTR [rbp-0x10]
  427d6c:	mov    rax,QWORD PTR [rbp-0x10]
  427d70:	cmp    rax,QWORD PTR [rbp-0x18]
  427d74:	je     427d97 <flatcc_json_parser_string_part@@Base+0x49>
  427d76:	mov    rax,QWORD PTR [rbp-0x10]
  427d7a:	movzx  eax,BYTE PTR [rax]
  427d7d:	cmp    al,0x22
  427d7f:	je     427d97 <flatcc_json_parser_string_part@@Base+0x49>
  427d81:	mov    rax,QWORD PTR [rbp-0x10]
  427d85:	movzx  eax,BYTE PTR [rax]
  427d88:	cmp    al,0x1f
  427d8a:	jbe    427d97 <flatcc_json_parser_string_part@@Base+0x49>
  427d8c:	mov    rax,QWORD PTR [rbp-0x10]
  427d90:	movzx  eax,BYTE PTR [rax]
  427d93:	cmp    al,0x5c
  427d95:	jne    427d68 <flatcc_json_parser_string_part@@Base+0x1a>
  427d97:	mov    rax,QWORD PTR [rbp-0x10]
  427d9b:	cmp    rax,QWORD PTR [rbp-0x18]
  427d9f:	jne    427dbc <flatcc_json_parser_string_part@@Base+0x6e>
  427da1:	mov    rdx,QWORD PTR [rbp-0x18]
  427da5:	mov    rsi,QWORD PTR [rbp-0x10]
  427da9:	mov    rax,QWORD PTR [rbp-0x8]
  427dad:	mov    ecx,0x14
  427db2:	mov    rdi,rax
  427db5:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  427dba:	jmp    427df7 <flatcc_json_parser_string_part@@Base+0xa9>
  427dbc:	mov    rax,QWORD PTR [rbp-0x10]
  427dc0:	movzx  eax,BYTE PTR [rax]
  427dc3:	cmp    al,0x22
  427dc5:	jne    427dcd <flatcc_json_parser_string_part@@Base+0x7f>
  427dc7:	mov    rax,QWORD PTR [rbp-0x10]
  427dcb:	jmp    427df7 <flatcc_json_parser_string_part@@Base+0xa9>
  427dcd:	mov    rax,QWORD PTR [rbp-0x10]
  427dd1:	movzx  eax,BYTE PTR [rax]
  427dd4:	cmp    al,0x1f
  427dd6:	jg     427df3 <flatcc_json_parser_string_part@@Base+0xa5>
  427dd8:	mov    rdx,QWORD PTR [rbp-0x18]
  427ddc:	mov    rsi,QWORD PTR [rbp-0x10]
  427de0:	mov    rax,QWORD PTR [rbp-0x8]
  427de4:	mov    ecx,0x11
  427de9:	mov    rdi,rax
  427dec:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  427df1:	jmp    427df7 <flatcc_json_parser_string_part@@Base+0xa9>
  427df3:	mov    rax,QWORD PTR [rbp-0x10]
  427df7:	leave  
  427df8:	ret    

0000000000427df9 <flatcc_json_parser_space_ext@@Base>:
  427df9:	endbr64 
  427dfd:	push   rbp
  427dfe:	mov    rbp,rsp
  427e01:	sub    rsp,0x20
  427e05:	mov    QWORD PTR [rbp-0x8],rdi
  427e09:	mov    QWORD PTR [rbp-0x10],rsi
  427e0d:	mov    QWORD PTR [rbp-0x18],rdx
  427e11:	nop
  427e12:	mov    rax,QWORD PTR [rbp-0x18]
  427e16:	sub    rax,QWORD PTR [rbp-0x10]
  427e1a:	cmp    rax,0xf
  427e1e:	jle    427e70 <flatcc_json_parser_space_ext@@Base+0x77>
  427e20:	mov    rax,QWORD PTR [rbp-0x10]
  427e24:	movzx  eax,BYTE PTR [rax]
  427e27:	cmp    al,0x20
  427e29:	jle    427e34 <flatcc_json_parser_space_ext@@Base+0x3b>
  427e2b:	mov    rax,QWORD PTR [rbp-0x10]
  427e2f:	jmp    427f48 <flatcc_json_parser_space_ext@@Base+0x14f>
  427e34:	mov    rax,QWORD PTR [rbp-0x10]
  427e38:	movzx  eax,WORD PTR [rax]
  427e3b:	cmp    ax,0x2020
  427e3f:	jne    427e46 <flatcc_json_parser_space_ext@@Base+0x4d>
  427e41:	add    QWORD PTR [rbp-0x10],0x2
  427e46:	mov    rax,QWORD PTR [rbp-0x10]
  427e4a:	movzx  eax,BYTE PTR [rax]
  427e4d:	cmp    al,0x20
  427e4f:	jne    427e55 <flatcc_json_parser_space_ext@@Base+0x5c>
  427e51:	inc    QWORD PTR [rbp-0x10]
  427e55:	mov    rax,QWORD PTR [rbp-0x10]
  427e59:	movzx  eax,BYTE PTR [rax]
  427e5c:	cmp    al,0x20
  427e5e:	jle    427e69 <flatcc_json_parser_space_ext@@Base+0x70>
  427e60:	mov    rax,QWORD PTR [rbp-0x10]
  427e64:	jmp    427f48 <flatcc_json_parser_space_ext@@Base+0x14f>
  427e69:	nop
  427e6a:	jmp    427e70 <flatcc_json_parser_space_ext@@Base+0x77>
  427e6c:	inc    QWORD PTR [rbp-0x10]
  427e70:	mov    rax,QWORD PTR [rbp-0x10]
  427e74:	cmp    rax,QWORD PTR [rbp-0x18]
  427e78:	je     427f2b <flatcc_json_parser_space_ext@@Base+0x132>
  427e7e:	mov    rax,QWORD PTR [rbp-0x10]
  427e82:	movzx  eax,BYTE PTR [rax]
  427e85:	cmp    al,0x20
  427e87:	je     427e6c <flatcc_json_parser_space_ext@@Base+0x73>
  427e89:	jmp    427f2b <flatcc_json_parser_space_ext@@Base+0x132>
  427e8e:	mov    rax,QWORD PTR [rbp-0x10]
  427e92:	movzx  eax,BYTE PTR [rax]
  427e95:	movsx  eax,al
  427e98:	cmp    eax,0xa
  427e9b:	je     427ee7 <flatcc_json_parser_space_ext@@Base+0xee>
  427e9d:	cmp    eax,0xa
  427ea0:	jg     427ea9 <flatcc_json_parser_space_ext@@Base+0xb0>
  427ea2:	cmp    eax,0x9
  427ea5:	je     427f0a <flatcc_json_parser_space_ext@@Base+0x111>
  427ea7:	jmp    427f10 <flatcc_json_parser_space_ext@@Base+0x117>
  427ea9:	cmp    eax,0xd
  427eac:	je     427eb9 <flatcc_json_parser_space_ext@@Base+0xc0>
  427eae:	cmp    eax,0x20
  427eb1:	je     427e11 <flatcc_json_parser_space_ext@@Base+0x18>
  427eb7:	jmp    427f10 <flatcc_json_parser_space_ext@@Base+0x117>
  427eb9:	mov    rax,QWORD PTR [rbp-0x18]
  427ebd:	sub    rax,QWORD PTR [rbp-0x10]
  427ec1:	cmp    rax,0x1
  427ec5:	jle    427edc <flatcc_json_parser_space_ext@@Base+0xe3>
  427ec7:	mov    rax,QWORD PTR [rbp-0x10]
  427ecb:	inc    rax
  427ece:	movzx  eax,BYTE PTR [rax]
  427ed1:	cmp    al,0xa
  427ed3:	jne    427edc <flatcc_json_parser_space_ext@@Base+0xe3>
  427ed5:	mov    eax,0x1
  427eda:	jmp    427ee1 <flatcc_json_parser_space_ext@@Base+0xe8>
  427edc:	mov    eax,0x0
  427ee1:	cdqe   
  427ee3:	add    QWORD PTR [rbp-0x10],rax
  427ee7:	mov    rax,QWORD PTR [rbp-0x8]
  427eeb:	mov    eax,DWORD PTR [rax+0x18]
  427eee:	lea    edx,[rax+0x1]
  427ef1:	mov    rax,QWORD PTR [rbp-0x8]
  427ef5:	mov    DWORD PTR [rax+0x18],edx
  427ef8:	inc    QWORD PTR [rbp-0x10]
  427efc:	mov    rax,QWORD PTR [rbp-0x8]
  427f00:	mov    rdx,QWORD PTR [rbp-0x10]
  427f04:	mov    QWORD PTR [rax+0x8],rdx
  427f08:	jmp    427f2b <flatcc_json_parser_space_ext@@Base+0x132>
  427f0a:	inc    QWORD PTR [rbp-0x10]
  427f0e:	jmp    427f2b <flatcc_json_parser_space_ext@@Base+0x132>
  427f10:	mov    rdx,QWORD PTR [rbp-0x18]
  427f14:	mov    rsi,QWORD PTR [rbp-0x10]
  427f18:	mov    rax,QWORD PTR [rbp-0x8]
  427f1c:	mov    ecx,0x5
  427f21:	mov    rdi,rax
  427f24:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  427f29:	jmp    427f48 <flatcc_json_parser_space_ext@@Base+0x14f>
  427f2b:	mov    rax,QWORD PTR [rbp-0x10]
  427f2f:	cmp    rax,QWORD PTR [rbp-0x18]
  427f33:	je     427f44 <flatcc_json_parser_space_ext@@Base+0x14b>
  427f35:	mov    rax,QWORD PTR [rbp-0x10]
  427f39:	movzx  eax,BYTE PTR [rax]
  427f3c:	cmp    al,0x20
  427f3e:	jle    427e8e <flatcc_json_parser_space_ext@@Base+0x95>
  427f44:	mov    rax,QWORD PTR [rbp-0x10]
  427f48:	leave  
  427f49:	ret    

0000000000427f4a <flatcc_json_parser_string_escape@@Base>:
  427f4a:	endbr64 
  427f4e:	push   rbp
  427f4f:	mov    rbp,rsp
  427f52:	sub    rsp,0x30
  427f56:	mov    QWORD PTR [rbp-0x18],rdi
  427f5a:	mov    QWORD PTR [rbp-0x20],rsi
  427f5e:	mov    QWORD PTR [rbp-0x28],rdx
  427f62:	mov    QWORD PTR [rbp-0x30],rcx
  427f66:	mov    rax,QWORD PTR [rbp-0x28]
  427f6a:	sub    rax,QWORD PTR [rbp-0x20]
  427f6e:	cmp    rax,0x1
  427f72:	jle    427f7f <flatcc_json_parser_string_escape@@Base+0x35>
  427f74:	mov    rax,QWORD PTR [rbp-0x20]
  427f78:	movzx  eax,BYTE PTR [rax]
  427f7b:	cmp    al,0x5c
  427f7d:	je     427fa4 <flatcc_json_parser_string_escape@@Base+0x5a>
  427f7f:	mov    rax,QWORD PTR [rbp-0x30]
  427f83:	mov    BYTE PTR [rax],0x0
  427f86:	mov    rdx,QWORD PTR [rbp-0x28]
  427f8a:	mov    rsi,QWORD PTR [rbp-0x20]
  427f8e:	mov    rax,QWORD PTR [rbp-0x18]
  427f92:	mov    ecx,0x12
  427f97:	mov    rdi,rax
  427f9a:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  427f9f:	jmp    428517 <flatcc_json_parser_string_escape@@Base+0x5cd>
  427fa4:	mov    rax,QWORD PTR [rbp-0x20]
  427fa8:	inc    rax
  427fab:	movzx  eax,BYTE PTR [rax]
  427fae:	movsx  eax,al
  427fb1:	sub    eax,0x22
  427fb4:	cmp    eax,0x56
  427fb7:	ja     4284f7 <flatcc_json_parser_string_escape@@Base+0x5ad>
  427fbd:	mov    eax,eax
  427fbf:	lea    rdx,[rax*4+0x0]
  427fc7:	lea    rax,[rip+0x14e8e]        # 43ce5c <flatcc_builder_padding_base@@Base+0x1edc>
  427fce:	mov    eax,DWORD PTR [rdx+rax*1]
  427fd1:	movsxd rdx,eax
  427fd4:	lea    rax,[rip+0x14e81]        # 43ce5c <flatcc_builder_padding_base@@Base+0x1edc>
  427fdb:	add    rax,rdx
  427fde:	notrack jmp rax
  427fe1:	mov    BYTE PTR [rbp-0x6],0x0
  427fe5:	mov    rax,QWORD PTR [rbp-0x30]
  427fe9:	mov    BYTE PTR [rax],0x1
  427fec:	mov    rax,QWORD PTR [rbp-0x28]
  427ff0:	sub    rax,QWORD PTR [rbp-0x20]
  427ff4:	cmp    rax,0x3
  427ff8:	jg     42801f <flatcc_json_parser_string_escape@@Base+0xd5>
  427ffa:	mov    rax,QWORD PTR [rbp-0x30]
  427ffe:	mov    BYTE PTR [rax],0x0
  428001:	mov    rdx,QWORD PTR [rbp-0x28]
  428005:	mov    rsi,QWORD PTR [rbp-0x20]
  428009:	mov    rax,QWORD PTR [rbp-0x18]
  42800d:	mov    ecx,0x12
  428012:	mov    rdi,rax
  428015:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  42801a:	jmp    428517 <flatcc_json_parser_string_escape@@Base+0x5cd>
  42801f:	mov    rax,QWORD PTR [rbp-0x20]
  428023:	movzx  eax,BYTE PTR [rax+0x2]
  428027:	mov    BYTE PTR [rbp-0x5],al
  42802a:	cmp    BYTE PTR [rbp-0x5],0x2f
  42802e:	jle    428045 <flatcc_json_parser_string_escape@@Base+0xfb>
  428030:	cmp    BYTE PTR [rbp-0x5],0x39
  428034:	jg     428045 <flatcc_json_parser_string_escape@@Base+0xfb>
  428036:	movsx  eax,BYTE PTR [rbp-0x5]
  42803a:	sub    eax,0x30
  42803d:	shl    eax,0x4
  428040:	or     BYTE PTR [rbp-0x6],al
  428043:	jmp    428089 <flatcc_json_parser_string_escape@@Base+0x13f>
  428045:	or     BYTE PTR [rbp-0x5],0x20
  428049:	cmp    BYTE PTR [rbp-0x5],0x60
  42804d:	jle    428064 <flatcc_json_parser_string_escape@@Base+0x11a>
  42804f:	cmp    BYTE PTR [rbp-0x5],0x66
  428053:	jg     428064 <flatcc_json_parser_string_escape@@Base+0x11a>
  428055:	movsx  eax,BYTE PTR [rbp-0x5]
  428059:	sub    eax,0x57
  42805c:	shl    eax,0x4
  42805f:	or     BYTE PTR [rbp-0x6],al
  428062:	jmp    428089 <flatcc_json_parser_string_escape@@Base+0x13f>
  428064:	mov    rax,QWORD PTR [rbp-0x30]
  428068:	mov    BYTE PTR [rax],0x0
  42806b:	mov    rdx,QWORD PTR [rbp-0x28]
  42806f:	mov    rsi,QWORD PTR [rbp-0x20]
  428073:	mov    rax,QWORD PTR [rbp-0x18]
  428077:	mov    ecx,0x12
  42807c:	mov    rdi,rax
  42807f:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  428084:	jmp    428517 <flatcc_json_parser_string_escape@@Base+0x5cd>
  428089:	mov    rax,QWORD PTR [rbp-0x20]
  42808d:	movzx  eax,BYTE PTR [rax+0x3]
  428091:	mov    BYTE PTR [rbp-0x5],al
  428094:	cmp    BYTE PTR [rbp-0x5],0x2f
  428098:	jle    4280ac <flatcc_json_parser_string_escape@@Base+0x162>
  42809a:	cmp    BYTE PTR [rbp-0x5],0x39
  42809e:	jg     4280ac <flatcc_json_parser_string_escape@@Base+0x162>
  4280a0:	movzx  eax,BYTE PTR [rbp-0x5]
  4280a4:	sub    eax,0x30
  4280a7:	or     BYTE PTR [rbp-0x6],al
  4280aa:	jmp    4280ed <flatcc_json_parser_string_escape@@Base+0x1a3>
  4280ac:	or     BYTE PTR [rbp-0x5],0x20
  4280b0:	cmp    BYTE PTR [rbp-0x5],0x60
  4280b4:	jle    4280c8 <flatcc_json_parser_string_escape@@Base+0x17e>
  4280b6:	cmp    BYTE PTR [rbp-0x5],0x66
  4280ba:	jg     4280c8 <flatcc_json_parser_string_escape@@Base+0x17e>
  4280bc:	movzx  eax,BYTE PTR [rbp-0x5]
  4280c0:	sub    eax,0x57
  4280c3:	or     BYTE PTR [rbp-0x6],al
  4280c6:	jmp    4280ed <flatcc_json_parser_string_escape@@Base+0x1a3>
  4280c8:	mov    rax,QWORD PTR [rbp-0x30]
  4280cc:	mov    BYTE PTR [rax],0x0
  4280cf:	mov    rdx,QWORD PTR [rbp-0x28]
  4280d3:	mov    rsi,QWORD PTR [rbp-0x20]
  4280d7:	mov    rax,QWORD PTR [rbp-0x18]
  4280db:	mov    ecx,0x12
  4280e0:	mov    rdi,rax
  4280e3:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4280e8:	jmp    428517 <flatcc_json_parser_string_escape@@Base+0x5cd>
  4280ed:	mov    rax,QWORD PTR [rbp-0x30]
  4280f1:	lea    rdx,[rax+0x1]
  4280f5:	movzx  eax,BYTE PTR [rbp-0x6]
  4280f9:	mov    BYTE PTR [rdx],al
  4280fb:	mov    rax,QWORD PTR [rbp-0x20]
  4280ff:	add    rax,0x4
  428103:	jmp    428517 <flatcc_json_parser_string_escape@@Base+0x5cd>
  428108:	mov    rax,QWORD PTR [rbp-0x28]
  42810c:	sub    rax,QWORD PTR [rbp-0x20]
  428110:	cmp    rax,0x5
  428114:	jg     42813b <flatcc_json_parser_string_escape@@Base+0x1f1>
  428116:	mov    rax,QWORD PTR [rbp-0x30]
  42811a:	mov    BYTE PTR [rax],0x0
  42811d:	mov    rdx,QWORD PTR [rbp-0x28]
  428121:	mov    rsi,QWORD PTR [rbp-0x20]
  428125:	mov    rax,QWORD PTR [rbp-0x18]
  428129:	mov    ecx,0x12
  42812e:	mov    rdi,rax
  428131:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  428136:	jmp    428517 <flatcc_json_parser_string_escape@@Base+0x5cd>
  42813b:	mov    WORD PTR [rbp-0x4],0x0
  428141:	mov    rax,QWORD PTR [rbp-0x20]
  428145:	movzx  eax,BYTE PTR [rax+0x2]
  428149:	mov    BYTE PTR [rbp-0x5],al
  42814c:	cmp    BYTE PTR [rbp-0x5],0x2f
  428150:	jle    428171 <flatcc_json_parser_string_escape@@Base+0x227>
  428152:	cmp    BYTE PTR [rbp-0x5],0x39
  428156:	jg     428171 <flatcc_json_parser_string_escape@@Base+0x227>
  428158:	movsx  ax,BYTE PTR [rbp-0x5]
  42815d:	sub    eax,0x30
  428160:	mov    WORD PTR [rbp-0x2],ax
  428164:	movzx  eax,WORD PTR [rbp-0x2]
  428168:	shl    eax,0xc
  42816b:	mov    WORD PTR [rbp-0x4],ax
  42816f:	jmp    4281c7 <flatcc_json_parser_string_escape@@Base+0x27d>
  428171:	or     BYTE PTR [rbp-0x5],0x20
  428175:	cmp    BYTE PTR [rbp-0x5],0x60
  428179:	jle    4281a2 <flatcc_json_parser_string_escape@@Base+0x258>
  42817b:	cmp    BYTE PTR [rbp-0x5],0x66
  42817f:	jg     4281a2 <flatcc_json_parser_string_escape@@Base+0x258>
  428181:	movsx  ax,BYTE PTR [rbp-0x5]
  428186:	sub    eax,0x57
  428189:	mov    WORD PTR [rbp-0x2],ax
  42818d:	movzx  eax,WORD PTR [rbp-0x2]
  428191:	shl    eax,0xc
  428194:	mov    edx,eax
  428196:	movzx  eax,WORD PTR [rbp-0x4]
  42819a:	or     eax,edx
  42819c:	mov    WORD PTR [rbp-0x4],ax
  4281a0:	jmp    4281c7 <flatcc_json_parser_string_escape@@Base+0x27d>
  4281a2:	mov    rax,QWORD PTR [rbp-0x30]
  4281a6:	mov    BYTE PTR [rax],0x0
  4281a9:	mov    rdx,QWORD PTR [rbp-0x28]
  4281ad:	mov    rsi,QWORD PTR [rbp-0x20]
  4281b1:	mov    rax,QWORD PTR [rbp-0x18]
  4281b5:	mov    ecx,0x12
  4281ba:	mov    rdi,rax
  4281bd:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4281c2:	jmp    428517 <flatcc_json_parser_string_escape@@Base+0x5cd>
  4281c7:	mov    rax,QWORD PTR [rbp-0x20]
  4281cb:	movzx  eax,BYTE PTR [rax+0x3]
  4281cf:	mov    BYTE PTR [rbp-0x5],al
  4281d2:	cmp    BYTE PTR [rbp-0x5],0x2f
  4281d6:	jle    4281ff <flatcc_json_parser_string_escape@@Base+0x2b5>
  4281d8:	cmp    BYTE PTR [rbp-0x5],0x39
  4281dc:	jg     4281ff <flatcc_json_parser_string_escape@@Base+0x2b5>
  4281de:	movsx  ax,BYTE PTR [rbp-0x5]
  4281e3:	sub    eax,0x30
  4281e6:	mov    WORD PTR [rbp-0x2],ax
  4281ea:	movzx  eax,WORD PTR [rbp-0x2]
  4281ee:	shl    eax,0x8
  4281f1:	mov    edx,eax
  4281f3:	movzx  eax,WORD PTR [rbp-0x4]
  4281f7:	or     eax,edx
  4281f9:	mov    WORD PTR [rbp-0x4],ax
  4281fd:	jmp    428255 <flatcc_json_parser_string_escape@@Base+0x30b>
  4281ff:	or     BYTE PTR [rbp-0x5],0x20
  428203:	cmp    BYTE PTR [rbp-0x5],0x60
  428207:	jle    428230 <flatcc_json_parser_string_escape@@Base+0x2e6>
  428209:	cmp    BYTE PTR [rbp-0x5],0x66
  42820d:	jg     428230 <flatcc_json_parser_string_escape@@Base+0x2e6>
  42820f:	movsx  ax,BYTE PTR [rbp-0x5]
  428214:	sub    eax,0x57
  428217:	mov    WORD PTR [rbp-0x2],ax
  42821b:	movzx  eax,WORD PTR [rbp-0x2]
  42821f:	shl    eax,0x8
  428222:	mov    edx,eax
  428224:	movzx  eax,WORD PTR [rbp-0x4]
  428228:	or     eax,edx
  42822a:	mov    WORD PTR [rbp-0x4],ax
  42822e:	jmp    428255 <flatcc_json_parser_string_escape@@Base+0x30b>
  428230:	mov    rax,QWORD PTR [rbp-0x30]
  428234:	mov    BYTE PTR [rax],0x0
  428237:	mov    rdx,QWORD PTR [rbp-0x28]
  42823b:	mov    rsi,QWORD PTR [rbp-0x20]
  42823f:	mov    rax,QWORD PTR [rbp-0x18]
  428243:	mov    ecx,0x12
  428248:	mov    rdi,rax
  42824b:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  428250:	jmp    428517 <flatcc_json_parser_string_escape@@Base+0x5cd>
  428255:	mov    rax,QWORD PTR [rbp-0x20]
  428259:	movzx  eax,BYTE PTR [rax+0x4]
  42825d:	mov    BYTE PTR [rbp-0x5],al
  428260:	cmp    BYTE PTR [rbp-0x5],0x2f
  428264:	jle    42828d <flatcc_json_parser_string_escape@@Base+0x343>
  428266:	cmp    BYTE PTR [rbp-0x5],0x39
  42826a:	jg     42828d <flatcc_json_parser_string_escape@@Base+0x343>
  42826c:	movsx  ax,BYTE PTR [rbp-0x5]
  428271:	sub    eax,0x30
  428274:	mov    WORD PTR [rbp-0x2],ax
  428278:	movzx  eax,WORD PTR [rbp-0x2]
  42827c:	shl    eax,0x4
  42827f:	mov    edx,eax
  428281:	movzx  eax,WORD PTR [rbp-0x4]
  428285:	or     eax,edx
  428287:	mov    WORD PTR [rbp-0x4],ax
  42828b:	jmp    4282e3 <flatcc_json_parser_string_escape@@Base+0x399>
  42828d:	or     BYTE PTR [rbp-0x5],0x20
  428291:	cmp    BYTE PTR [rbp-0x5],0x60
  428295:	jle    4282be <flatcc_json_parser_string_escape@@Base+0x374>
  428297:	cmp    BYTE PTR [rbp-0x5],0x66
  42829b:	jg     4282be <flatcc_json_parser_string_escape@@Base+0x374>
  42829d:	movsx  ax,BYTE PTR [rbp-0x5]
  4282a2:	sub    eax,0x57
  4282a5:	mov    WORD PTR [rbp-0x2],ax
  4282a9:	movzx  eax,WORD PTR [rbp-0x2]
  4282ad:	shl    eax,0x4
  4282b0:	mov    edx,eax
  4282b2:	movzx  eax,WORD PTR [rbp-0x4]
  4282b6:	or     eax,edx
  4282b8:	mov    WORD PTR [rbp-0x4],ax
  4282bc:	jmp    4282e3 <flatcc_json_parser_string_escape@@Base+0x399>
  4282be:	mov    rax,QWORD PTR [rbp-0x30]
  4282c2:	mov    BYTE PTR [rax],0x0
  4282c5:	mov    rdx,QWORD PTR [rbp-0x28]
  4282c9:	mov    rsi,QWORD PTR [rbp-0x20]
  4282cd:	mov    rax,QWORD PTR [rbp-0x18]
  4282d1:	mov    ecx,0x12
  4282d6:	mov    rdi,rax
  4282d9:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4282de:	jmp    428517 <flatcc_json_parser_string_escape@@Base+0x5cd>
  4282e3:	mov    rax,QWORD PTR [rbp-0x20]
  4282e7:	movzx  eax,BYTE PTR [rax+0x5]
  4282eb:	mov    BYTE PTR [rbp-0x5],al
  4282ee:	cmp    BYTE PTR [rbp-0x5],0x2f
  4282f2:	jle    428310 <flatcc_json_parser_string_escape@@Base+0x3c6>
  4282f4:	cmp    BYTE PTR [rbp-0x5],0x39
  4282f8:	jg     428310 <flatcc_json_parser_string_escape@@Base+0x3c6>
  4282fa:	movsx  ax,BYTE PTR [rbp-0x5]
  4282ff:	sub    eax,0x30
  428302:	mov    WORD PTR [rbp-0x2],ax
  428306:	movzx  eax,WORD PTR [rbp-0x2]
  42830a:	or     WORD PTR [rbp-0x4],ax
  42830e:	jmp    42835b <flatcc_json_parser_string_escape@@Base+0x411>
  428310:	or     BYTE PTR [rbp-0x5],0x20
  428314:	cmp    BYTE PTR [rbp-0x5],0x60
  428318:	jle    428336 <flatcc_json_parser_string_escape@@Base+0x3ec>
  42831a:	cmp    BYTE PTR [rbp-0x5],0x66
  42831e:	jg     428336 <flatcc_json_parser_string_escape@@Base+0x3ec>
  428320:	movsx  ax,BYTE PTR [rbp-0x5]
  428325:	sub    eax,0x57
  428328:	mov    WORD PTR [rbp-0x2],ax
  42832c:	movzx  eax,WORD PTR [rbp-0x2]
  428330:	or     WORD PTR [rbp-0x4],ax
  428334:	jmp    42835b <flatcc_json_parser_string_escape@@Base+0x411>
  428336:	mov    rax,QWORD PTR [rbp-0x30]
  42833a:	mov    BYTE PTR [rax],0x0
  42833d:	mov    rdx,QWORD PTR [rbp-0x28]
  428341:	mov    rsi,QWORD PTR [rbp-0x20]
  428345:	mov    rax,QWORD PTR [rbp-0x18]
  428349:	mov    ecx,0x12
  42834e:	mov    rdi,rax
  428351:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  428356:	jmp    428517 <flatcc_json_parser_string_escape@@Base+0x5cd>
  42835b:	cmp    WORD PTR [rbp-0x4],0x7f
  428360:	ja     42837c <flatcc_json_parser_string_escape@@Base+0x432>
  428362:	mov    rax,QWORD PTR [rbp-0x30]
  428366:	mov    BYTE PTR [rax],0x1
  428369:	mov    rax,QWORD PTR [rbp-0x30]
  42836d:	lea    rdx,[rax+0x1]
  428371:	movzx  eax,WORD PTR [rbp-0x4]
  428375:	mov    BYTE PTR [rdx],al
  428377:	jmp    428406 <flatcc_json_parser_string_escape@@Base+0x4bc>
  42837c:	cmp    WORD PTR [rbp-0x4],0x7ff
  428382:	ja     4283ba <flatcc_json_parser_string_escape@@Base+0x470>
  428384:	mov    rax,QWORD PTR [rbp-0x30]
  428388:	mov    BYTE PTR [rax],0x2
  42838b:	movzx  eax,WORD PTR [rbp-0x4]
  42838f:	shr    ax,0x6
  428393:	or     eax,0xffffffc0
  428396:	mov    ecx,eax
  428398:	mov    rax,QWORD PTR [rbp-0x30]
  42839c:	lea    rdx,[rax+0x1]
  4283a0:	mov    eax,ecx
  4283a2:	mov    BYTE PTR [rdx],al
  4283a4:	movzx  eax,WORD PTR [rbp-0x4]
  4283a8:	and    eax,0x3f
  4283ab:	mov    rdx,QWORD PTR [rbp-0x30]
  4283af:	add    rdx,0x2
  4283b3:	or     eax,0xffffff80
  4283b6:	mov    BYTE PTR [rdx],al
  4283b8:	jmp    428406 <flatcc_json_parser_string_escape@@Base+0x4bc>
  4283ba:	mov    rax,QWORD PTR [rbp-0x30]
  4283be:	mov    BYTE PTR [rax],0x3
  4283c1:	movzx  eax,WORD PTR [rbp-0x4]
  4283c5:	shr    ax,0xc
  4283c9:	or     eax,0xffffffe0
  4283cc:	mov    ecx,eax
  4283ce:	mov    rax,QWORD PTR [rbp-0x30]
  4283d2:	lea    rdx,[rax+0x1]
  4283d6:	mov    eax,ecx
  4283d8:	mov    BYTE PTR [rdx],al
  4283da:	movzx  eax,WORD PTR [rbp-0x4]
  4283de:	shr    ax,0x6
  4283e2:	and    eax,0x3f
  4283e5:	mov    rdx,QWORD PTR [rbp-0x30]
  4283e9:	add    rdx,0x2
  4283ed:	or     eax,0xffffff80
  4283f0:	mov    BYTE PTR [rdx],al
  4283f2:	movzx  eax,WORD PTR [rbp-0x4]
  4283f6:	and    eax,0x3f
  4283f9:	mov    rdx,QWORD PTR [rbp-0x30]
  4283fd:	add    rdx,0x3
  428401:	or     eax,0xffffff80
  428404:	mov    BYTE PTR [rdx],al
  428406:	mov    rax,QWORD PTR [rbp-0x20]
  42840a:	add    rax,0x6
  42840e:	jmp    428517 <flatcc_json_parser_string_escape@@Base+0x5cd>
  428413:	mov    rax,QWORD PTR [rbp-0x30]
  428417:	mov    BYTE PTR [rax],0x1
  42841a:	mov    rax,QWORD PTR [rbp-0x30]
  42841e:	inc    rax
  428421:	mov    BYTE PTR [rax],0x9
  428424:	mov    rax,QWORD PTR [rbp-0x20]
  428428:	add    rax,0x2
  42842c:	jmp    428517 <flatcc_json_parser_string_escape@@Base+0x5cd>
  428431:	mov    rax,QWORD PTR [rbp-0x30]
  428435:	mov    BYTE PTR [rax],0x1
  428438:	mov    rax,QWORD PTR [rbp-0x30]
  42843c:	inc    rax
  42843f:	mov    BYTE PTR [rax],0xa
  428442:	mov    rax,QWORD PTR [rbp-0x20]
  428446:	add    rax,0x2
  42844a:	jmp    428517 <flatcc_json_parser_string_escape@@Base+0x5cd>
  42844f:	mov    rax,QWORD PTR [rbp-0x30]
  428453:	mov    BYTE PTR [rax],0x1
  428456:	mov    rax,QWORD PTR [rbp-0x30]
  42845a:	inc    rax
  42845d:	mov    BYTE PTR [rax],0xd
  428460:	mov    rax,QWORD PTR [rbp-0x20]
  428464:	add    rax,0x2
  428468:	jmp    428517 <flatcc_json_parser_string_escape@@Base+0x5cd>
  42846d:	mov    rax,QWORD PTR [rbp-0x30]
  428471:	mov    BYTE PTR [rax],0x1
  428474:	mov    rax,QWORD PTR [rbp-0x30]
  428478:	inc    rax
  42847b:	mov    BYTE PTR [rax],0x8
  42847e:	mov    rax,QWORD PTR [rbp-0x20]
  428482:	add    rax,0x2
  428486:	jmp    428517 <flatcc_json_parser_string_escape@@Base+0x5cd>
  42848b:	mov    rax,QWORD PTR [rbp-0x30]
  42848f:	mov    BYTE PTR [rax],0x1
  428492:	mov    rax,QWORD PTR [rbp-0x30]
  428496:	inc    rax
  428499:	mov    BYTE PTR [rax],0xc
  42849c:	mov    rax,QWORD PTR [rbp-0x20]
  4284a0:	add    rax,0x2
  4284a4:	jmp    428517 <flatcc_json_parser_string_escape@@Base+0x5cd>
  4284a6:	mov    rax,QWORD PTR [rbp-0x30]
  4284aa:	mov    BYTE PTR [rax],0x1
  4284ad:	mov    rax,QWORD PTR [rbp-0x30]
  4284b1:	inc    rax
  4284b4:	mov    BYTE PTR [rax],0x22
  4284b7:	mov    rax,QWORD PTR [rbp-0x20]
  4284bb:	add    rax,0x2
  4284bf:	jmp    428517 <flatcc_json_parser_string_escape@@Base+0x5cd>
  4284c1:	mov    rax,QWORD PTR [rbp-0x30]
  4284c5:	mov    BYTE PTR [rax],0x1
  4284c8:	mov    rax,QWORD PTR [rbp-0x30]
  4284cc:	inc    rax
  4284cf:	mov    BYTE PTR [rax],0x5c
  4284d2:	mov    rax,QWORD PTR [rbp-0x20]
  4284d6:	add    rax,0x2
  4284da:	jmp    428517 <flatcc_json_parser_string_escape@@Base+0x5cd>
  4284dc:	mov    rax,QWORD PTR [rbp-0x30]
  4284e0:	mov    BYTE PTR [rax],0x1
  4284e3:	mov    rax,QWORD PTR [rbp-0x30]
  4284e7:	inc    rax
  4284ea:	mov    BYTE PTR [rax],0x2f
  4284ed:	mov    rax,QWORD PTR [rbp-0x20]
  4284f1:	add    rax,0x2
  4284f5:	jmp    428517 <flatcc_json_parser_string_escape@@Base+0x5cd>
  4284f7:	mov    rax,QWORD PTR [rbp-0x30]
  4284fb:	mov    BYTE PTR [rax],0x0
  4284fe:	mov    rdx,QWORD PTR [rbp-0x28]
  428502:	mov    rsi,QWORD PTR [rbp-0x20]
  428506:	mov    rax,QWORD PTR [rbp-0x18]
  42850a:	mov    ecx,0x12
  42850f:	mov    rdi,rax
  428512:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  428517:	leave  
  428518:	ret    

0000000000428519 <flatcc_json_parser_skip_constant@@Base>:
  428519:	endbr64 
  42851d:	push   rbp
  42851e:	mov    rbp,rsp
  428521:	sub    rsp,0x30
  428525:	mov    QWORD PTR [rbp-0x18],rdi
  428529:	mov    QWORD PTR [rbp-0x20],rsi
  42852d:	mov    QWORD PTR [rbp-0x28],rdx
  428531:	jmp    4285aa <flatcc_json_parser_skip_constant@@Base+0x91>
  428533:	mov    rax,QWORD PTR [rbp-0x20]
  428537:	movzx  eax,BYTE PTR [rax]
  42853a:	mov    BYTE PTR [rbp-0x9],al
  42853d:	cmp    BYTE PTR [rbp-0x9],0x0
  428541:	js     42855b <flatcc_json_parser_skip_constant@@Base+0x42>
  428543:	cmp    BYTE PTR [rbp-0x9],0x5f
  428547:	je     42855b <flatcc_json_parser_skip_constant@@Base+0x42>
  428549:	cmp    BYTE PTR [rbp-0x9],0x2f
  42854d:	jle    428555 <flatcc_json_parser_skip_constant@@Base+0x3c>
  42854f:	cmp    BYTE PTR [rbp-0x9],0x39
  428553:	jle    42855b <flatcc_json_parser_skip_constant@@Base+0x42>
  428555:	cmp    BYTE PTR [rbp-0x9],0x2e
  428559:	jne    428561 <flatcc_json_parser_skip_constant@@Base+0x48>
  42855b:	inc    QWORD PTR [rbp-0x20]
  42855f:	jmp    4285aa <flatcc_json_parser_skip_constant@@Base+0x91>
  428561:	or     BYTE PTR [rbp-0x9],0x20
  428565:	cmp    BYTE PTR [rbp-0x9],0x60
  428569:	jle    428577 <flatcc_json_parser_skip_constant@@Base+0x5e>
  42856b:	cmp    BYTE PTR [rbp-0x9],0x7a
  42856f:	jg     428577 <flatcc_json_parser_skip_constant@@Base+0x5e>
  428571:	inc    QWORD PTR [rbp-0x20]
  428575:	jmp    4285aa <flatcc_json_parser_skip_constant@@Base+0x91>
  428577:	mov    rax,QWORD PTR [rbp-0x20]
  42857b:	mov    QWORD PTR [rbp-0x8],rax
  42857f:	mov    rdx,QWORD PTR [rbp-0x28]
  428583:	mov    rcx,QWORD PTR [rbp-0x8]
  428587:	mov    rax,QWORD PTR [rbp-0x18]
  42858b:	mov    rsi,rcx
  42858e:	mov    rdi,rax
  428591:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  428596:	mov    QWORD PTR [rbp-0x20],rax
  42859a:	mov    rax,QWORD PTR [rbp-0x20]
  42859e:	cmp    rax,QWORD PTR [rbp-0x8]
  4285a2:	jne    4285aa <flatcc_json_parser_skip_constant@@Base+0x91>
  4285a4:	mov    rax,QWORD PTR [rbp-0x20]
  4285a8:	jmp    4285bc <flatcc_json_parser_skip_constant@@Base+0xa3>
  4285aa:	mov    rax,QWORD PTR [rbp-0x20]
  4285ae:	cmp    rax,QWORD PTR [rbp-0x28]
  4285b2:	jne    428533 <flatcc_json_parser_skip_constant@@Base+0x1a>
  4285b8:	mov    rax,QWORD PTR [rbp-0x20]
  4285bc:	leave  
  4285bd:	ret    

00000000004285be <flatcc_json_parser_match_constant@@Base>:
  4285be:	endbr64 
  4285c2:	push   rbp
  4285c3:	mov    rbp,rsp
  4285c6:	sub    rsp,0x50
  4285ca:	mov    QWORD PTR [rbp-0x28],rdi
  4285ce:	mov    QWORD PTR [rbp-0x30],rsi
  4285d2:	mov    QWORD PTR [rbp-0x38],rdx
  4285d6:	mov    DWORD PTR [rbp-0x3c],ecx
  4285d9:	mov    QWORD PTR [rbp-0x48],r8
  4285dd:	mov    rax,QWORD PTR [rbp-0x30]
  4285e1:	mov    QWORD PTR [rbp-0x10],rax
  4285e5:	mov    eax,DWORD PTR [rbp-0x3c]
  4285e8:	movsxd rdx,eax
  4285eb:	mov    rax,QWORD PTR [rbp-0x30]
  4285ef:	add    rax,rdx
  4285f2:	mov    QWORD PTR [rbp-0x8],rax
  4285f6:	mov    rax,QWORD PTR [rbp-0x38]
  4285fa:	sub    rax,QWORD PTR [rbp-0x30]
  4285fe:	mov    rdx,rax
  428601:	mov    eax,DWORD PTR [rbp-0x3c]
  428604:	cdqe   
  428606:	cmp    rdx,rax
  428609:	jg     42861e <flatcc_json_parser_match_constant@@Base+0x60>
  42860b:	mov    rax,QWORD PTR [rbp-0x48]
  42860f:	mov    DWORD PTR [rax],0x0
  428615:	mov    rax,QWORD PTR [rbp-0x30]
  428619:	jmp    4287d9 <flatcc_json_parser_match_constant@@Base+0x21b>
  42861e:	mov    rax,QWORD PTR [rbp-0x28]
  428622:	mov    eax,DWORD PTR [rax+0x14]
  428625:	test   eax,eax
  428627:	je     4286f8 <flatcc_json_parser_match_constant@@Base+0x13a>
  42862d:	mov    rdx,QWORD PTR [rbp-0x38]
  428631:	mov    rcx,QWORD PTR [rbp-0x8]
  428635:	mov    rax,QWORD PTR [rbp-0x28]
  428639:	mov    rsi,rcx
  42863c:	mov    rdi,rax
  42863f:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  428644:	mov    QWORD PTR [rbp-0x30],rax
  428648:	mov    rax,QWORD PTR [rbp-0x30]
  42864c:	cmp    rax,QWORD PTR [rbp-0x38]
  428650:	jne    428665 <flatcc_json_parser_match_constant@@Base+0xa7>
  428652:	mov    rax,QWORD PTR [rbp-0x48]
  428656:	mov    DWORD PTR [rax],0x0
  42865c:	mov    rax,QWORD PTR [rbp-0x30]
  428660:	jmp    4287d9 <flatcc_json_parser_match_constant@@Base+0x21b>
  428665:	mov    rax,QWORD PTR [rbp-0x30]
  428669:	cmp    rax,QWORD PTR [rbp-0x8]
  42866d:	je     4286bb <flatcc_json_parser_match_constant@@Base+0xfd>
  42866f:	mov    rax,QWORD PTR [rbp-0x30]
  428673:	movzx  eax,BYTE PTR [rax]
  428676:	mov    BYTE PTR [rbp-0x11],al
  428679:	cmp    BYTE PTR [rbp-0x11],0x5f
  42867d:	je     428685 <flatcc_json_parser_match_constant@@Base+0xc7>
  42867f:	cmp    BYTE PTR [rbp-0x11],0x0
  428683:	jns    428698 <flatcc_json_parser_match_constant@@Base+0xda>
  428685:	mov    rax,QWORD PTR [rbp-0x48]
  428689:	mov    DWORD PTR [rax],0x1
  42868f:	mov    rax,QWORD PTR [rbp-0x30]
  428693:	jmp    4287d9 <flatcc_json_parser_match_constant@@Base+0x21b>
  428698:	or     BYTE PTR [rbp-0x11],0x20
  42869c:	cmp    BYTE PTR [rbp-0x11],0x60
  4286a0:	jle    4286bb <flatcc_json_parser_match_constant@@Base+0xfd>
  4286a2:	cmp    BYTE PTR [rbp-0x11],0x7a
  4286a6:	jg     4286bb <flatcc_json_parser_match_constant@@Base+0xfd>
  4286a8:	mov    rax,QWORD PTR [rbp-0x48]
  4286ac:	mov    DWORD PTR [rax],0x1
  4286b2:	mov    rax,QWORD PTR [rbp-0x30]
  4286b6:	jmp    4287d9 <flatcc_json_parser_match_constant@@Base+0x21b>
  4286bb:	mov    rax,QWORD PTR [rbp-0x48]
  4286bf:	mov    DWORD PTR [rax],0x0
  4286c5:	mov    rax,QWORD PTR [rbp-0x30]
  4286c9:	movzx  eax,BYTE PTR [rax]
  4286cc:	cmp    al,0x2c
  4286ce:	je     4286e6 <flatcc_json_parser_match_constant@@Base+0x128>
  4286d0:	mov    rax,QWORD PTR [rbp-0x30]
  4286d4:	movzx  eax,BYTE PTR [rax]
  4286d7:	cmp    al,0x7d
  4286d9:	je     4286e6 <flatcc_json_parser_match_constant@@Base+0x128>
  4286db:	mov    rax,QWORD PTR [rbp-0x30]
  4286df:	movzx  eax,BYTE PTR [rax]
  4286e2:	cmp    al,0x5d
  4286e4:	jne    4286ef <flatcc_json_parser_match_constant@@Base+0x131>
  4286e6:	mov    rax,QWORD PTR [rbp-0x30]
  4286ea:	jmp    4287d9 <flatcc_json_parser_match_constant@@Base+0x21b>
  4286ef:	mov    rax,QWORD PTR [rbp-0x10]
  4286f3:	jmp    4287d9 <flatcc_json_parser_match_constant@@Base+0x21b>
  4286f8:	mov    rax,QWORD PTR [rbp-0x8]
  4286fc:	mov    QWORD PTR [rbp-0x30],rax
  428700:	mov    rax,QWORD PTR [rbp-0x30]
  428704:	movzx  eax,BYTE PTR [rax]
  428707:	cmp    al,0x20
  428709:	jne    428762 <flatcc_json_parser_match_constant@@Base+0x1a4>
  42870b:	inc    QWORD PTR [rbp-0x30]
  42870f:	jmp    428715 <flatcc_json_parser_match_constant@@Base+0x157>
  428711:	inc    QWORD PTR [rbp-0x30]
  428715:	mov    rax,QWORD PTR [rbp-0x30]
  428719:	cmp    rax,QWORD PTR [rbp-0x38]
  42871d:	je     42872a <flatcc_json_parser_match_constant@@Base+0x16c>
  42871f:	mov    rax,QWORD PTR [rbp-0x30]
  428723:	movzx  eax,BYTE PTR [rax]
  428726:	cmp    al,0x20
  428728:	je     428711 <flatcc_json_parser_match_constant@@Base+0x153>
  42872a:	mov    rax,QWORD PTR [rbp-0x30]
  42872e:	cmp    rax,QWORD PTR [rbp-0x38]
  428732:	jne    428747 <flatcc_json_parser_match_constant@@Base+0x189>
  428734:	mov    rax,QWORD PTR [rbp-0x48]
  428738:	mov    DWORD PTR [rax],0x0
  42873e:	mov    rax,QWORD PTR [rbp-0x30]
  428742:	jmp    4287d9 <flatcc_json_parser_match_constant@@Base+0x21b>
  428747:	mov    rax,QWORD PTR [rbp-0x30]
  42874b:	movzx  eax,BYTE PTR [rax]
  42874e:	cmp    al,0x22
  428750:	je     428762 <flatcc_json_parser_match_constant@@Base+0x1a4>
  428752:	mov    rax,QWORD PTR [rbp-0x48]
  428756:	mov    DWORD PTR [rax],0x1
  42875c:	mov    rax,QWORD PTR [rbp-0x30]
  428760:	jmp    4287d9 <flatcc_json_parser_match_constant@@Base+0x21b>
  428762:	mov    rax,QWORD PTR [rbp-0x30]
  428766:	movzx  eax,BYTE PTR [rax]
  428769:	movsx  eax,al
  42876c:	cmp    eax,0x22
  42876f:	je     42879b <flatcc_json_parser_match_constant@@Base+0x1dd>
  428771:	cmp    eax,0x5c
  428774:	jne    4287cb <flatcc_json_parser_match_constant@@Base+0x20d>
  428776:	mov    rax,QWORD PTR [rbp-0x48]
  42877a:	mov    DWORD PTR [rax],0x0
  428780:	mov    rdx,QWORD PTR [rbp-0x38]
  428784:	mov    rsi,QWORD PTR [rbp-0x30]
  428788:	mov    rax,QWORD PTR [rbp-0x28]
  42878c:	mov    ecx,0x12
  428791:	mov    rdi,rax
  428794:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  428799:	jmp    4287d9 <flatcc_json_parser_match_constant@@Base+0x21b>
  42879b:	mov    rax,QWORD PTR [rbp-0x30]
  42879f:	lea    rcx,[rax+0x1]
  4287a3:	mov    rax,QWORD PTR [rbp-0x28]
  4287a7:	mov    edx,0x0
  4287ac:	mov    rsi,rcx
  4287af:	mov    rdi,rax
  4287b2:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  4287b7:	mov    QWORD PTR [rbp-0x30],rax
  4287bb:	mov    rax,QWORD PTR [rbp-0x48]
  4287bf:	mov    DWORD PTR [rax],0x0
  4287c5:	mov    rax,QWORD PTR [rbp-0x30]
  4287c9:	jmp    4287d9 <flatcc_json_parser_match_constant@@Base+0x21b>
  4287cb:	mov    rax,QWORD PTR [rbp-0x48]
  4287cf:	mov    DWORD PTR [rax],0x0
  4287d5:	mov    rax,QWORD PTR [rbp-0x10]
  4287d9:	leave  
  4287da:	ret    

00000000004287db <flatcc_json_parser_unmatched_symbol@@Base>:
  4287db:	endbr64 
  4287df:	push   rbp
  4287e0:	mov    rbp,rsp
  4287e3:	sub    rsp,0x20
  4287e7:	mov    QWORD PTR [rbp-0x8],rdi
  4287eb:	mov    QWORD PTR [rbp-0x10],rsi
  4287ef:	mov    QWORD PTR [rbp-0x18],rdx
  4287f3:	mov    rax,QWORD PTR [rbp-0x8]
  4287f7:	mov    eax,DWORD PTR [rax+0x10]
  4287fa:	and    eax,0x1
  4287fd:	test   eax,eax
  4287ff:	je     4288a4 <flatcc_json_parser_unmatched_symbol@@Base+0xc9>
  428805:	mov    rdx,QWORD PTR [rbp-0x18]
  428809:	mov    rcx,QWORD PTR [rbp-0x10]
  42880d:	mov    rax,QWORD PTR [rbp-0x8]
  428811:	mov    rsi,rcx
  428814:	mov    rdi,rax
  428817:	call   4241c0 <flatcc_verify_union_vector_field@@Base+0x41e>
  42881c:	mov    QWORD PTR [rbp-0x10],rax
  428820:	mov    rdx,QWORD PTR [rbp-0x18]
  428824:	mov    rcx,QWORD PTR [rbp-0x10]
  428828:	mov    rax,QWORD PTR [rbp-0x8]
  42882c:	mov    rsi,rcx
  42882f:	mov    rdi,rax
  428832:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  428837:	mov    QWORD PTR [rbp-0x10],rax
  42883b:	mov    rax,QWORD PTR [rbp-0x10]
  42883f:	cmp    rax,QWORD PTR [rbp-0x18]
  428843:	je     428889 <flatcc_json_parser_unmatched_symbol@@Base+0xae>
  428845:	mov    rax,QWORD PTR [rbp-0x10]
  428849:	movzx  eax,BYTE PTR [rax]
  42884c:	cmp    al,0x3a
  42884e:	jne    428889 <flatcc_json_parser_unmatched_symbol@@Base+0xae>
  428850:	inc    QWORD PTR [rbp-0x10]
  428854:	mov    rdx,QWORD PTR [rbp-0x18]
  428858:	mov    rcx,QWORD PTR [rbp-0x10]
  42885c:	mov    rax,QWORD PTR [rbp-0x8]
  428860:	mov    rsi,rcx
  428863:	mov    rdi,rax
  428866:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  42886b:	mov    QWORD PTR [rbp-0x10],rax
  42886f:	nop
  428870:	mov    rdx,QWORD PTR [rbp-0x18]
  428874:	mov    rcx,QWORD PTR [rbp-0x10]
  428878:	mov    rax,QWORD PTR [rbp-0x8]
  42887c:	mov    rsi,rcx
  42887f:	mov    rdi,rax
  428882:	call   428dd2 <flatcc_json_parser_generic_json@@Base>
  428887:	jmp    4288bd <flatcc_json_parser_unmatched_symbol@@Base+0xe2>
  428889:	mov    rdx,QWORD PTR [rbp-0x18]
  42888d:	mov    rsi,QWORD PTR [rbp-0x10]
  428891:	mov    rax,QWORD PTR [rbp-0x8]
  428895:	mov    ecx,0x4
  42889a:	mov    rdi,rax
  42889d:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4288a2:	jmp    4288bd <flatcc_json_parser_unmatched_symbol@@Base+0xe2>
  4288a4:	mov    rdx,QWORD PTR [rbp-0x18]
  4288a8:	mov    rsi,QWORD PTR [rbp-0x10]
  4288ac:	mov    rax,QWORD PTR [rbp-0x8]
  4288b0:	mov    ecx,0xd
  4288b5:	mov    rdi,rax
  4288b8:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4288bd:	leave  
  4288be:	ret    
  4288bf:	endbr64 
  4288c3:	push   rbp
  4288c4:	mov    rbp,rsp
  4288c7:	sub    rsp,0x20
  4288cb:	mov    QWORD PTR [rbp-0x8],rdi
  4288cf:	mov    QWORD PTR [rbp-0x10],rsi
  4288d3:	mov    QWORD PTR [rbp-0x18],rdx
  4288d7:	mov    rax,QWORD PTR [rbp-0x10]
  4288db:	cmp    rax,QWORD PTR [rbp-0x18]
  4288df:	jne    4288ea <flatcc_json_parser_unmatched_symbol@@Base+0x10f>
  4288e1:	mov    rax,QWORD PTR [rbp-0x10]
  4288e5:	jmp    428b46 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  4288ea:	mov    rax,QWORD PTR [rbp-0x10]
  4288ee:	movzx  eax,BYTE PTR [rax]
  4288f1:	cmp    al,0x2d
  4288f3:	jne    428921 <flatcc_json_parser_unmatched_symbol@@Base+0x146>
  4288f5:	inc    QWORD PTR [rbp-0x10]
  4288f9:	mov    rax,QWORD PTR [rbp-0x10]
  4288fd:	cmp    rax,QWORD PTR [rbp-0x18]
  428901:	jne    428921 <flatcc_json_parser_unmatched_symbol@@Base+0x146>
  428903:	mov    rdx,QWORD PTR [rbp-0x18]
  428907:	mov    rsi,QWORD PTR [rbp-0x10]
  42890b:	mov    rax,QWORD PTR [rbp-0x8]
  42890f:	mov    ecx,0x6
  428914:	mov    rdi,rax
  428917:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  42891c:	jmp    428b46 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  428921:	mov    rax,QWORD PTR [rbp-0x10]
  428925:	movzx  eax,BYTE PTR [rax]
  428928:	cmp    al,0x30
  42892a:	jne    428932 <flatcc_json_parser_unmatched_symbol@@Base+0x157>
  42892c:	inc    QWORD PTR [rbp-0x10]
  428930:	jmp    428990 <flatcc_json_parser_unmatched_symbol@@Base+0x1b5>
  428932:	mov    rax,QWORD PTR [rbp-0x10]
  428936:	movzx  eax,BYTE PTR [rax]
  428939:	cmp    al,0x30
  42893b:	jle    428948 <flatcc_json_parser_unmatched_symbol@@Base+0x16d>
  42893d:	mov    rax,QWORD PTR [rbp-0x10]
  428941:	movzx  eax,BYTE PTR [rax]
  428944:	cmp    al,0x39
  428946:	jle    428966 <flatcc_json_parser_unmatched_symbol@@Base+0x18b>
  428948:	mov    rdx,QWORD PTR [rbp-0x18]
  42894c:	mov    rsi,QWORD PTR [rbp-0x10]
  428950:	mov    rax,QWORD PTR [rbp-0x8]
  428954:	mov    ecx,0x6
  428959:	mov    rdi,rax
  42895c:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  428961:	jmp    428b46 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  428966:	inc    QWORD PTR [rbp-0x10]
  42896a:	jmp    428970 <flatcc_json_parser_unmatched_symbol@@Base+0x195>
  42896c:	inc    QWORD PTR [rbp-0x10]
  428970:	mov    rax,QWORD PTR [rbp-0x10]
  428974:	cmp    rax,QWORD PTR [rbp-0x18]
  428978:	je     428990 <flatcc_json_parser_unmatched_symbol@@Base+0x1b5>
  42897a:	mov    rax,QWORD PTR [rbp-0x10]
  42897e:	movzx  eax,BYTE PTR [rax]
  428981:	cmp    al,0x2f
  428983:	jle    428990 <flatcc_json_parser_unmatched_symbol@@Base+0x1b5>
  428985:	mov    rax,QWORD PTR [rbp-0x10]
  428989:	movzx  eax,BYTE PTR [rax]
  42898c:	cmp    al,0x39
  42898e:	jle    42896c <flatcc_json_parser_unmatched_symbol@@Base+0x191>
  428990:	mov    rax,QWORD PTR [rbp-0x10]
  428994:	cmp    rax,QWORD PTR [rbp-0x18]
  428998:	je     428a07 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
  42899a:	mov    rax,QWORD PTR [rbp-0x10]
  42899e:	movzx  eax,BYTE PTR [rax]
  4289a1:	cmp    al,0x2e
  4289a3:	jne    428a07 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
  4289a5:	inc    QWORD PTR [rbp-0x10]
  4289a9:	mov    rax,QWORD PTR [rbp-0x10]
  4289ad:	movzx  eax,BYTE PTR [rax]
  4289b0:	cmp    al,0x2f
  4289b2:	jle    4289bf <flatcc_json_parser_unmatched_symbol@@Base+0x1e4>
  4289b4:	mov    rax,QWORD PTR [rbp-0x10]
  4289b8:	movzx  eax,BYTE PTR [rax]
  4289bb:	cmp    al,0x39
  4289bd:	jle    4289dd <flatcc_json_parser_unmatched_symbol@@Base+0x202>
  4289bf:	mov    rdx,QWORD PTR [rbp-0x18]
  4289c3:	mov    rsi,QWORD PTR [rbp-0x10]
  4289c7:	mov    rax,QWORD PTR [rbp-0x8]
  4289cb:	mov    ecx,0x6
  4289d0:	mov    rdi,rax
  4289d3:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4289d8:	jmp    428b46 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  4289dd:	inc    QWORD PTR [rbp-0x10]
  4289e1:	jmp    4289e7 <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
  4289e3:	inc    QWORD PTR [rbp-0x10]
  4289e7:	mov    rax,QWORD PTR [rbp-0x10]
  4289eb:	cmp    rax,QWORD PTR [rbp-0x18]
  4289ef:	je     428a07 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
  4289f1:	mov    rax,QWORD PTR [rbp-0x10]
  4289f5:	movzx  eax,BYTE PTR [rax]
  4289f8:	cmp    al,0x2f
  4289fa:	jle    428a07 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
  4289fc:	mov    rax,QWORD PTR [rbp-0x10]
  428a00:	movzx  eax,BYTE PTR [rax]
  428a03:	cmp    al,0x39
  428a05:	jle    4289e3 <flatcc_json_parser_unmatched_symbol@@Base+0x208>
  428a07:	mov    rax,QWORD PTR [rbp-0x10]
  428a0b:	cmp    rax,QWORD PTR [rbp-0x18]
  428a0f:	je     428add <flatcc_json_parser_unmatched_symbol@@Base+0x302>
  428a15:	mov    rax,QWORD PTR [rbp-0x10]
  428a19:	movzx  eax,BYTE PTR [rax]
  428a1c:	cmp    al,0x65
  428a1e:	je     428a2f <flatcc_json_parser_unmatched_symbol@@Base+0x254>
  428a20:	mov    rax,QWORD PTR [rbp-0x10]
  428a24:	movzx  eax,BYTE PTR [rax]
  428a27:	cmp    al,0x45
  428a29:	jne    428add <flatcc_json_parser_unmatched_symbol@@Base+0x302>
  428a2f:	inc    QWORD PTR [rbp-0x10]
  428a33:	mov    rax,QWORD PTR [rbp-0x10]
  428a37:	cmp    rax,QWORD PTR [rbp-0x18]
  428a3b:	jne    428a5b <flatcc_json_parser_unmatched_symbol@@Base+0x280>
  428a3d:	mov    rdx,QWORD PTR [rbp-0x18]
  428a41:	mov    rsi,QWORD PTR [rbp-0x10]
  428a45:	mov    rax,QWORD PTR [rbp-0x8]
  428a49:	mov    ecx,0x6
  428a4e:	mov    rdi,rax
  428a51:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  428a56:	jmp    428b46 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  428a5b:	mov    rax,QWORD PTR [rbp-0x10]
  428a5f:	movzx  eax,BYTE PTR [rax]
  428a62:	cmp    al,0x2b
  428a64:	je     428a71 <flatcc_json_parser_unmatched_symbol@@Base+0x296>
  428a66:	mov    rax,QWORD PTR [rbp-0x10]
  428a6a:	movzx  eax,BYTE PTR [rax]
  428a6d:	cmp    al,0x2d
  428a6f:	jne    428a75 <flatcc_json_parser_unmatched_symbol@@Base+0x29a>
  428a71:	inc    QWORD PTR [rbp-0x10]
  428a75:	mov    rax,QWORD PTR [rbp-0x10]
  428a79:	cmp    rax,QWORD PTR [rbp-0x18]
  428a7d:	je     428a95 <flatcc_json_parser_unmatched_symbol@@Base+0x2ba>
  428a7f:	mov    rax,QWORD PTR [rbp-0x10]
  428a83:	movzx  eax,BYTE PTR [rax]
  428a86:	cmp    al,0x2f
  428a88:	jle    428a95 <flatcc_json_parser_unmatched_symbol@@Base+0x2ba>
  428a8a:	mov    rax,QWORD PTR [rbp-0x10]
  428a8e:	movzx  eax,BYTE PTR [rax]
  428a91:	cmp    al,0x39
  428a93:	jle    428ab3 <flatcc_json_parser_unmatched_symbol@@Base+0x2d8>
  428a95:	mov    rdx,QWORD PTR [rbp-0x18]
  428a99:	mov    rsi,QWORD PTR [rbp-0x10]
  428a9d:	mov    rax,QWORD PTR [rbp-0x8]
  428aa1:	mov    ecx,0x6
  428aa6:	mov    rdi,rax
  428aa9:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  428aae:	jmp    428b46 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  428ab3:	inc    QWORD PTR [rbp-0x10]
  428ab7:	jmp    428abd <flatcc_json_parser_unmatched_symbol@@Base+0x2e2>
  428ab9:	inc    QWORD PTR [rbp-0x10]
  428abd:	mov    rax,QWORD PTR [rbp-0x10]
  428ac1:	cmp    rax,QWORD PTR [rbp-0x18]
  428ac5:	je     428add <flatcc_json_parser_unmatched_symbol@@Base+0x302>
  428ac7:	mov    rax,QWORD PTR [rbp-0x10]
  428acb:	movzx  eax,BYTE PTR [rax]
  428ace:	cmp    al,0x2f
  428ad0:	jle    428add <flatcc_json_parser_unmatched_symbol@@Base+0x302>
  428ad2:	mov    rax,QWORD PTR [rbp-0x10]
  428ad6:	movzx  eax,BYTE PTR [rax]
  428ad9:	cmp    al,0x39
  428adb:	jle    428ab9 <flatcc_json_parser_unmatched_symbol@@Base+0x2de>
  428add:	mov    rax,QWORD PTR [rbp-0x10]
  428ae1:	cmp    rax,QWORD PTR [rbp-0x18]
  428ae5:	je     428b2d <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  428ae7:	mov    rax,QWORD PTR [rbp-0x10]
  428aeb:	movzx  eax,BYTE PTR [rax]
  428aee:	movsx  eax,al
  428af1:	cmp    eax,0x20
  428af4:	je     428b27 <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  428af6:	cmp    eax,0x20
  428af9:	jg     428b0c <flatcc_json_parser_unmatched_symbol@@Base+0x331>
  428afb:	cmp    eax,0x9
  428afe:	jl     428b2d <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  428b00:	cmp    eax,0xb
  428b03:	jle    428b27 <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  428b05:	cmp    eax,0xd
  428b08:	je     428b27 <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  428b0a:	jmp    428b2d <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  428b0c:	cmp    eax,0x3a
  428b0f:	je     428b27 <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  428b11:	cmp    eax,0x3a
  428b14:	jg     428b1d <flatcc_json_parser_unmatched_symbol@@Base+0x342>
  428b16:	cmp    eax,0x2c
  428b19:	je     428b27 <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  428b1b:	jmp    428b2d <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  428b1d:	cmp    eax,0x5d
  428b20:	je     428b27 <flatcc_json_parser_unmatched_symbol@@Base+0x34c>
  428b22:	cmp    eax,0x7d
  428b25:	jne    428b2d <flatcc_json_parser_unmatched_symbol@@Base+0x352>
  428b27:	mov    rax,QWORD PTR [rbp-0x10]
  428b2b:	jmp    428b46 <flatcc_json_parser_unmatched_symbol@@Base+0x36b>
  428b2d:	mov    rdx,QWORD PTR [rbp-0x18]
  428b31:	mov    rsi,QWORD PTR [rbp-0x10]
  428b35:	mov    rax,QWORD PTR [rbp-0x8]
  428b39:	mov    ecx,0x6
  428b3e:	mov    rdi,rax
  428b41:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  428b46:	leave  
  428b47:	ret    

0000000000428b48 <flatcc_json_parser_double@@Base>:
  428b48:	endbr64 
  428b4c:	push   rbp
  428b4d:	mov    rbp,rsp
  428b50:	sub    rsp,0x30
  428b54:	mov    QWORD PTR [rbp-0x18],rdi
  428b58:	mov    QWORD PTR [rbp-0x20],rsi
  428b5c:	mov    QWORD PTR [rbp-0x28],rdx
  428b60:	mov    QWORD PTR [rbp-0x30],rcx
  428b64:	mov    rax,QWORD PTR [rbp-0x30]
  428b68:	vxorpd xmm0,xmm0,xmm0
  428b6c:	vmovsd QWORD PTR [rax],xmm0
  428b70:	mov    rax,QWORD PTR [rbp-0x20]
  428b74:	cmp    rax,QWORD PTR [rbp-0x28]
  428b78:	jne    428b83 <flatcc_json_parser_double@@Base+0x3b>
  428b7a:	mov    rax,QWORD PTR [rbp-0x20]
  428b7e:	jmp    428c8b <flatcc_json_parser_double@@Base+0x143>
  428b83:	mov    rax,QWORD PTR [rbp-0x20]
  428b87:	mov    QWORD PTR [rbp-0x10],rax
  428b8b:	mov    rax,QWORD PTR [rbp-0x20]
  428b8f:	movzx  eax,BYTE PTR [rax]
  428b92:	cmp    al,0x2d
  428b94:	jne    428b9a <flatcc_json_parser_double@@Base+0x52>
  428b96:	inc    QWORD PTR [rbp-0x10]
  428b9a:	mov    rax,QWORD PTR [rbp-0x28]
  428b9e:	sub    rax,QWORD PTR [rbp-0x10]
  428ba2:	cmp    rax,0x1
  428ba6:	jle    428bea <flatcc_json_parser_double@@Base+0xa2>
  428ba8:	mov    rax,QWORD PTR [rbp-0x10]
  428bac:	movzx  eax,BYTE PTR [rax]
  428baf:	cmp    al,0x2e
  428bb1:	je     428bcc <flatcc_json_parser_double@@Base+0x84>
  428bb3:	mov    rax,QWORD PTR [rbp-0x10]
  428bb7:	movzx  eax,BYTE PTR [rax]
  428bba:	cmp    al,0x30
  428bbc:	jne    428bea <flatcc_json_parser_double@@Base+0xa2>
  428bbe:	mov    rax,QWORD PTR [rbp-0x10]
  428bc2:	inc    rax
  428bc5:	movzx  eax,BYTE PTR [rax]
  428bc8:	cmp    al,0x30
  428bca:	jne    428bea <flatcc_json_parser_double@@Base+0xa2>
  428bcc:	mov    rdx,QWORD PTR [rbp-0x28]
  428bd0:	mov    rsi,QWORD PTR [rbp-0x20]
  428bd4:	mov    rax,QWORD PTR [rbp-0x18]
  428bd8:	mov    ecx,0x6
  428bdd:	mov    rdi,rax
  428be0:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  428be5:	jmp    428c8b <flatcc_json_parser_double@@Base+0x143>
  428bea:	mov    rax,QWORD PTR [rbp-0x28]
  428bee:	sub    rax,QWORD PTR [rbp-0x20]
  428bf2:	mov    ecx,eax
  428bf4:	mov    rdx,QWORD PTR [rbp-0x30]
  428bf8:	mov    rax,QWORD PTR [rbp-0x20]
  428bfc:	mov    esi,ecx
  428bfe:	mov    rdi,rax
  428c01:	call   4271b2 <grisu3_diy_fp_encode_double@@Base+0xf4f>
  428c06:	mov    QWORD PTR [rbp-0x8],rax
  428c0a:	cmp    QWORD PTR [rbp-0x8],0x0
  428c0f:	je     428c1b <flatcc_json_parser_double@@Base+0xd3>
  428c11:	mov    rax,QWORD PTR [rbp-0x8]
  428c15:	cmp    rax,QWORD PTR [rbp-0x20]
  428c19:	jne    428c87 <flatcc_json_parser_double@@Base+0x13f>
  428c1b:	mov    rax,QWORD PTR [rbp-0x30]
  428c1f:	vmovsd xmm1,QWORD PTR [rax]
  428c23:	vmovq  xmm0,QWORD PTR [rip+0x14a05]        # 43d630 <flatcc_builder_padding_base@@Base+0x26b0>
  428c2b:	vandpd xmm0,xmm0,xmm1
  428c2f:	vucomisd xmm0,QWORD PTR [rip+0x14a09]        # 43d640 <flatcc_builder_padding_base@@Base+0x26c0>
  428c37:	setbe  al
  428c3a:	xor    eax,0x1
  428c3d:	test   al,al
  428c3f:	je     428c48 <flatcc_json_parser_double@@Base+0x100>
  428c41:	mov    eax,0x1
  428c46:	jmp    428c4d <flatcc_json_parser_double@@Base+0x105>
  428c48:	mov    eax,0x0
  428c4d:	test   al,al
  428c4f:	je     428c6c <flatcc_json_parser_double@@Base+0x124>
  428c51:	mov    rdx,QWORD PTR [rbp-0x28]
  428c55:	mov    rsi,QWORD PTR [rbp-0x20]
  428c59:	mov    rax,QWORD PTR [rbp-0x18]
  428c5d:	mov    ecx,0x7
  428c62:	mov    rdi,rax
  428c65:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  428c6a:	jmp    428c8b <flatcc_json_parser_double@@Base+0x143>
  428c6c:	mov    rdx,QWORD PTR [rbp-0x28]
  428c70:	mov    rsi,QWORD PTR [rbp-0x20]
  428c74:	mov    rax,QWORD PTR [rbp-0x18]
  428c78:	mov    ecx,0x6
  428c7d:	mov    rdi,rax
  428c80:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  428c85:	jmp    428c8b <flatcc_json_parser_double@@Base+0x143>
  428c87:	mov    rax,QWORD PTR [rbp-0x8]
  428c8b:	leave  
  428c8c:	ret    

0000000000428c8d <flatcc_json_parser_float@@Base>:
  428c8d:	endbr64 
  428c91:	push   rbp
  428c92:	mov    rbp,rsp
  428c95:	sub    rsp,0x30
  428c99:	mov    QWORD PTR [rbp-0x18],rdi
  428c9d:	mov    QWORD PTR [rbp-0x20],rsi
  428ca1:	mov    QWORD PTR [rbp-0x28],rdx
  428ca5:	mov    QWORD PTR [rbp-0x30],rcx
  428ca9:	mov    rax,QWORD PTR [rbp-0x30]
  428cad:	vxorps xmm0,xmm0,xmm0
  428cb1:	vmovss DWORD PTR [rax],xmm0
  428cb5:	mov    rax,QWORD PTR [rbp-0x20]
  428cb9:	cmp    rax,QWORD PTR [rbp-0x28]
  428cbd:	jne    428cc8 <flatcc_json_parser_float@@Base+0x3b>
  428cbf:	mov    rax,QWORD PTR [rbp-0x20]
  428cc3:	jmp    428dd0 <flatcc_json_parser_float@@Base+0x143>
  428cc8:	mov    rax,QWORD PTR [rbp-0x20]
  428ccc:	mov    QWORD PTR [rbp-0x10],rax
  428cd0:	mov    rax,QWORD PTR [rbp-0x20]
  428cd4:	movzx  eax,BYTE PTR [rax]
  428cd7:	cmp    al,0x2d
  428cd9:	jne    428cdf <flatcc_json_parser_float@@Base+0x52>
  428cdb:	inc    QWORD PTR [rbp-0x10]
  428cdf:	mov    rax,QWORD PTR [rbp-0x28]
  428ce3:	sub    rax,QWORD PTR [rbp-0x10]
  428ce7:	cmp    rax,0x1
  428ceb:	jle    428d2f <flatcc_json_parser_float@@Base+0xa2>
  428ced:	mov    rax,QWORD PTR [rbp-0x10]
  428cf1:	movzx  eax,BYTE PTR [rax]
  428cf4:	cmp    al,0x2e
  428cf6:	je     428d11 <flatcc_json_parser_float@@Base+0x84>
  428cf8:	mov    rax,QWORD PTR [rbp-0x10]
  428cfc:	movzx  eax,BYTE PTR [rax]
  428cff:	cmp    al,0x30
  428d01:	jne    428d2f <flatcc_json_parser_float@@Base+0xa2>
  428d03:	mov    rax,QWORD PTR [rbp-0x10]
  428d07:	inc    rax
  428d0a:	movzx  eax,BYTE PTR [rax]
  428d0d:	cmp    al,0x30
  428d0f:	jne    428d2f <flatcc_json_parser_float@@Base+0xa2>
  428d11:	mov    rdx,QWORD PTR [rbp-0x28]
  428d15:	mov    rsi,QWORD PTR [rbp-0x20]
  428d19:	mov    rax,QWORD PTR [rbp-0x18]
  428d1d:	mov    ecx,0x6
  428d22:	mov    rdi,rax
  428d25:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  428d2a:	jmp    428dd0 <flatcc_json_parser_float@@Base+0x143>
  428d2f:	mov    rax,QWORD PTR [rbp-0x28]
  428d33:	sub    rax,QWORD PTR [rbp-0x20]
  428d37:	mov    ecx,eax
  428d39:	mov    rdx,QWORD PTR [rbp-0x30]
  428d3d:	mov    rax,QWORD PTR [rbp-0x20]
  428d41:	mov    esi,ecx
  428d43:	mov    rdi,rax
  428d46:	call   4271dc <grisu3_diy_fp_encode_double@@Base+0xf79>
  428d4b:	mov    QWORD PTR [rbp-0x8],rax
  428d4f:	cmp    QWORD PTR [rbp-0x8],0x0
  428d54:	je     428d60 <flatcc_json_parser_float@@Base+0xd3>
  428d56:	mov    rax,QWORD PTR [rbp-0x8]
  428d5a:	cmp    rax,QWORD PTR [rbp-0x20]
  428d5e:	jne    428dcc <flatcc_json_parser_float@@Base+0x13f>
  428d60:	mov    rax,QWORD PTR [rbp-0x30]
  428d64:	vmovss xmm1,DWORD PTR [rax]
  428d68:	vmovss xmm0,DWORD PTR [rip+0x148a0]        # 43d610 <flatcc_builder_padding_base@@Base+0x2690>
  428d70:	vandps xmm0,xmm0,xmm1
  428d74:	vucomiss xmm0,DWORD PTR [rip+0x148a4]        # 43d620 <flatcc_builder_padding_base@@Base+0x26a0>
  428d7c:	setbe  al
  428d7f:	xor    eax,0x1
  428d82:	test   al,al
  428d84:	je     428d8d <flatcc_json_parser_float@@Base+0x100>
  428d86:	mov    eax,0x1
  428d8b:	jmp    428d92 <flatcc_json_parser_float@@Base+0x105>
  428d8d:	mov    eax,0x0
  428d92:	test   al,al
  428d94:	je     428db1 <flatcc_json_parser_float@@Base+0x124>
  428d96:	mov    rdx,QWORD PTR [rbp-0x28]
  428d9a:	mov    rsi,QWORD PTR [rbp-0x20]
  428d9e:	mov    rax,QWORD PTR [rbp-0x18]
  428da2:	mov    ecx,0x7
  428da7:	mov    rdi,rax
  428daa:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  428daf:	jmp    428dd0 <flatcc_json_parser_float@@Base+0x143>
  428db1:	mov    rdx,QWORD PTR [rbp-0x28]
  428db5:	mov    rsi,QWORD PTR [rbp-0x20]
  428db9:	mov    rax,QWORD PTR [rbp-0x18]
  428dbd:	mov    ecx,0x6
  428dc2:	mov    rdi,rax
  428dc5:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  428dca:	jmp    428dd0 <flatcc_json_parser_float@@Base+0x143>
  428dcc:	mov    rax,QWORD PTR [rbp-0x8]
  428dd0:	leave  
  428dd1:	ret    

0000000000428dd2 <flatcc_json_parser_generic_json@@Base>:
  428dd2:	endbr64 
  428dd6:	push   rbp
  428dd7:	mov    rbp,rsp
  428dda:	sub    rsp,0x260
  428de1:	mov    QWORD PTR [rbp-0x248],rdi
  428de8:	mov    QWORD PTR [rbp-0x250],rsi
  428def:	mov    QWORD PTR [rbp-0x258],rdx
  428df6:	mov    rax,QWORD PTR fs:0x28
  428dff:	mov    QWORD PTR [rbp-0x8],rax
  428e03:	xor    eax,eax
  428e05:	mov    DWORD PTR [rbp-0x234],0x0
  428e0f:	lea    rax,[rbp-0x210]
  428e16:	mov    QWORD PTR [rbp-0x230],rax
  428e1d:	mov    rax,QWORD PTR [rbp-0x230]
  428e24:	add    rax,0x200
  428e2a:	mov    QWORD PTR [rbp-0x228],rax
  428e31:	mov    rax,QWORD PTR [rbp-0x250]
  428e38:	cmp    rax,QWORD PTR [rbp-0x258]
  428e3f:	jne    428e4d <flatcc_json_parser_generic_json@@Base+0x7b>
  428e41:	mov    rax,QWORD PTR [rbp-0x250]
  428e48:	jmp    4293a5 <flatcc_json_parser_generic_json@@Base+0x5d3>
  428e4d:	lea    rax,[rbp-0x210]
  428e54:	cmp    QWORD PTR [rbp-0x230],rax
  428e5b:	je     428f82 <flatcc_json_parser_generic_json@@Base+0x1b0>
  428e61:	mov    rax,QWORD PTR [rbp-0x230]
  428e68:	dec    rax
  428e6b:	movzx  eax,BYTE PTR [rax]
  428e6e:	cmp    al,0x7d
  428e70:	jne    428f82 <flatcc_json_parser_generic_json@@Base+0x1b0>
  428e76:	mov    rdx,QWORD PTR [rbp-0x258]
  428e7d:	mov    rcx,QWORD PTR [rbp-0x250]
  428e84:	mov    rax,QWORD PTR [rbp-0x248]
  428e8b:	mov    rsi,rcx
  428e8e:	mov    rdi,rax
  428e91:	call   424149 <flatcc_verify_union_vector_field@@Base+0x3a7>
  428e96:	mov    QWORD PTR [rbp-0x250],rax
  428e9d:	mov    rdx,QWORD PTR [rbp-0x258]
  428ea4:	mov    rcx,QWORD PTR [rbp-0x250]
  428eab:	mov    rax,QWORD PTR [rbp-0x248]
  428eb2:	mov    rsi,rcx
  428eb5:	mov    rdi,rax
  428eb8:	call   4241c0 <flatcc_verify_union_vector_field@@Base+0x41e>
  428ebd:	mov    QWORD PTR [rbp-0x250],rax
  428ec4:	mov    rdx,QWORD PTR [rbp-0x258]
  428ecb:	mov    rcx,QWORD PTR [rbp-0x250]
  428ed2:	mov    rax,QWORD PTR [rbp-0x248]
  428ed9:	mov    rsi,rcx
  428edc:	mov    rdi,rax
  428edf:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  428ee4:	mov    QWORD PTR [rbp-0x250],rax
  428eeb:	mov    rax,QWORD PTR [rbp-0x250]
  428ef2:	cmp    rax,QWORD PTR [rbp-0x258]
  428ef9:	jne    428f22 <flatcc_json_parser_generic_json@@Base+0x150>
  428efb:	mov    rdx,QWORD PTR [rbp-0x258]
  428f02:	mov    rsi,QWORD PTR [rbp-0x250]
  428f09:	mov    rax,QWORD PTR [rbp-0x248]
  428f10:	mov    ecx,0xa
  428f15:	mov    rdi,rax
  428f18:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  428f1d:	jmp    4293a5 <flatcc_json_parser_generic_json@@Base+0x5d3>
  428f22:	mov    rax,QWORD PTR [rbp-0x250]
  428f29:	movzx  eax,BYTE PTR [rax]
  428f2c:	cmp    al,0x3a
  428f2e:	je     428f57 <flatcc_json_parser_generic_json@@Base+0x185>
  428f30:	mov    rdx,QWORD PTR [rbp-0x258]
  428f37:	mov    rsi,QWORD PTR [rbp-0x250]
  428f3e:	mov    rax,QWORD PTR [rbp-0x248]
  428f45:	mov    ecx,0x4
  428f4a:	mov    rdi,rax
  428f4d:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  428f52:	jmp    4293a5 <flatcc_json_parser_generic_json@@Base+0x5d3>
  428f57:	mov    rax,QWORD PTR [rbp-0x250]
  428f5e:	lea    rcx,[rax+0x1]
  428f62:	mov    rdx,QWORD PTR [rbp-0x258]
  428f69:	mov    rax,QWORD PTR [rbp-0x248]
  428f70:	mov    rsi,rcx
  428f73:	mov    rdi,rax
  428f76:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  428f7b:	mov    QWORD PTR [rbp-0x250],rax
  428f82:	mov    rax,QWORD PTR [rbp-0x250]
  428f89:	movzx  eax,BYTE PTR [rax]
  428f8c:	movsx  eax,al
  428f8f:	cmp    eax,0x39
  428f92:	jg     428fb0 <flatcc_json_parser_generic_json@@Base+0x1de>
  428f94:	cmp    eax,0x30
  428f97:	jge    4290b1 <flatcc_json_parser_generic_json@@Base+0x2df>
  428f9d:	cmp    eax,0x22
  428fa0:	je     428fc7 <flatcc_json_parser_generic_json@@Base+0x1f5>
  428fa2:	cmp    eax,0x2d
  428fa5:	je     4290b1 <flatcc_json_parser_generic_json@@Base+0x2df>
  428fab:	jmp    42921d <flatcc_json_parser_generic_json@@Base+0x44b>
  428fb0:	cmp    eax,0x5b
  428fb3:	je     4290dd <flatcc_json_parser_generic_json@@Base+0x30b>
  428fb9:	cmp    eax,0x7b
  428fbc:	je     42917f <flatcc_json_parser_generic_json@@Base+0x3ad>
  428fc2:	jmp    42921d <flatcc_json_parser_generic_json@@Base+0x44b>
  428fc7:	mov    rdx,QWORD PTR [rbp-0x258]
  428fce:	mov    rcx,QWORD PTR [rbp-0x250]
  428fd5:	mov    rax,QWORD PTR [rbp-0x248]
  428fdc:	mov    rsi,rcx
  428fdf:	mov    rdi,rax
  428fe2:	call   4240ad <flatcc_verify_union_vector_field@@Base+0x30b>
  428fe7:	mov    QWORD PTR [rbp-0x250],rax
  428fee:	jmp    429060 <flatcc_json_parser_generic_json@@Base+0x28e>
  428ff0:	mov    rdx,QWORD PTR [rbp-0x258]
  428ff7:	mov    rcx,QWORD PTR [rbp-0x250]
  428ffe:	mov    rax,QWORD PTR [rbp-0x248]
  429005:	mov    rsi,rcx
  429008:	mov    rdi,rax
  42900b:	call   427d4e <flatcc_json_parser_string_part@@Base>
  429010:	mov    QWORD PTR [rbp-0x250],rax
  429017:	mov    rax,QWORD PTR [rbp-0x250]
  42901e:	cmp    rax,QWORD PTR [rbp-0x258]
  429025:	je     429035 <flatcc_json_parser_generic_json@@Base+0x263>
  429027:	mov    rax,QWORD PTR [rbp-0x250]
  42902e:	movzx  eax,BYTE PTR [rax]
  429031:	cmp    al,0x22
  429033:	je     429084 <flatcc_json_parser_generic_json@@Base+0x2b2>
  429035:	lea    rcx,[rbp-0x214]
  42903c:	mov    rdx,QWORD PTR [rbp-0x258]
  429043:	mov    rsi,QWORD PTR [rbp-0x250]
  42904a:	mov    rax,QWORD PTR [rbp-0x248]
  429051:	mov    rdi,rax
  429054:	call   427f4a <flatcc_json_parser_string_escape@@Base>
  429059:	mov    QWORD PTR [rbp-0x250],rax
  429060:	mov    rax,QWORD PTR [rbp-0x250]
  429067:	cmp    rax,QWORD PTR [rbp-0x258]
  42906e:	je     429085 <flatcc_json_parser_generic_json@@Base+0x2b3>
  429070:	mov    rax,QWORD PTR [rbp-0x250]
  429077:	movzx  eax,BYTE PTR [rax]
  42907a:	cmp    al,0x22
  42907c:	jne    428ff0 <flatcc_json_parser_generic_json@@Base+0x21e>
  429082:	jmp    429085 <flatcc_json_parser_generic_json@@Base+0x2b3>
  429084:	nop
  429085:	mov    rdx,QWORD PTR [rbp-0x258]
  42908c:	mov    rcx,QWORD PTR [rbp-0x250]
  429093:	mov    rax,QWORD PTR [rbp-0x248]
  42909a:	mov    rsi,rcx
  42909d:	mov    rdi,rax
  4290a0:	call   4240fb <flatcc_verify_union_vector_field@@Base+0x359>
  4290a5:	mov    QWORD PTR [rbp-0x250],rax
  4290ac:	jmp    429296 <flatcc_json_parser_generic_json@@Base+0x4c4>
  4290b1:	mov    rdx,QWORD PTR [rbp-0x258]
  4290b8:	mov    rcx,QWORD PTR [rbp-0x250]
  4290bf:	mov    rax,QWORD PTR [rbp-0x248]
  4290c6:	mov    rsi,rcx
  4290c9:	mov    rdi,rax
  4290cc:	call   4288bf <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
  4290d1:	mov    QWORD PTR [rbp-0x250],rax
  4290d8:	jmp    429296 <flatcc_json_parser_generic_json@@Base+0x4c4>
  4290dd:	mov    rax,QWORD PTR [rbp-0x230]
  4290e4:	cmp    rax,QWORD PTR [rbp-0x228]
  4290eb:	jne    429114 <flatcc_json_parser_generic_json@@Base+0x342>
  4290ed:	mov    rdx,QWORD PTR [rbp-0x258]
  4290f4:	mov    rsi,QWORD PTR [rbp-0x250]
  4290fb:	mov    rax,QWORD PTR [rbp-0x248]
  429102:	mov    ecx,0x2
  429107:	mov    rdi,rax
  42910a:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  42910f:	jmp    4293a5 <flatcc_json_parser_generic_json@@Base+0x5d3>
  429114:	mov    rax,QWORD PTR [rbp-0x230]
  42911b:	lea    rdx,[rax+0x1]
  42911f:	mov    QWORD PTR [rbp-0x230],rdx
  429126:	mov    BYTE PTR [rax],0x5d
  429129:	mov    rax,QWORD PTR [rbp-0x250]
  429130:	lea    rcx,[rax+0x1]
  429134:	mov    rdx,QWORD PTR [rbp-0x258]
  42913b:	mov    rax,QWORD PTR [rbp-0x248]
  429142:	mov    rsi,rcx
  429145:	mov    rdi,rax
  429148:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  42914d:	mov    QWORD PTR [rbp-0x250],rax
  429154:	mov    rax,QWORD PTR [rbp-0x250]
  42915b:	cmp    rax,QWORD PTR [rbp-0x258]
  429162:	je     428e31 <flatcc_json_parser_generic_json@@Base+0x5f>
  429168:	mov    rax,QWORD PTR [rbp-0x250]
  42916f:	movzx  eax,BYTE PTR [rax]
  429172:	cmp    al,0x5d
  429174:	je     429289 <flatcc_json_parser_generic_json@@Base+0x4b7>
  42917a:	jmp    428e31 <flatcc_json_parser_generic_json@@Base+0x5f>
  42917f:	mov    rax,QWORD PTR [rbp-0x230]
  429186:	cmp    rax,QWORD PTR [rbp-0x228]
  42918d:	jne    4291b6 <flatcc_json_parser_generic_json@@Base+0x3e4>
  42918f:	mov    rdx,QWORD PTR [rbp-0x258]
  429196:	mov    rsi,QWORD PTR [rbp-0x250]
  42919d:	mov    rax,QWORD PTR [rbp-0x248]
  4291a4:	mov    ecx,0x2
  4291a9:	mov    rdi,rax
  4291ac:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4291b1:	jmp    4293a5 <flatcc_json_parser_generic_json@@Base+0x5d3>
  4291b6:	mov    rax,QWORD PTR [rbp-0x230]
  4291bd:	lea    rdx,[rax+0x1]
  4291c1:	mov    QWORD PTR [rbp-0x230],rdx
  4291c8:	mov    BYTE PTR [rax],0x7d
  4291cb:	mov    rax,QWORD PTR [rbp-0x250]
  4291d2:	lea    rcx,[rax+0x1]
  4291d6:	mov    rdx,QWORD PTR [rbp-0x258]
  4291dd:	mov    rax,QWORD PTR [rbp-0x248]
  4291e4:	mov    rsi,rcx
  4291e7:	mov    rdi,rax
  4291ea:	call   42403f <flatcc_verify_union_vector_field@@Base+0x29d>
  4291ef:	mov    QWORD PTR [rbp-0x250],rax
  4291f6:	mov    rax,QWORD PTR [rbp-0x250]
  4291fd:	cmp    rax,QWORD PTR [rbp-0x258]
  429204:	je     428e31 <flatcc_json_parser_generic_json@@Base+0x5f>
  42920a:	mov    rax,QWORD PTR [rbp-0x250]
  429211:	movzx  eax,BYTE PTR [rax]
  429214:	cmp    al,0x7d
  429216:	je     42928f <flatcc_json_parser_generic_json@@Base+0x4bd>
  429218:	jmp    428e31 <flatcc_json_parser_generic_json@@Base+0x5f>
  42921d:	mov    rax,QWORD PTR [rbp-0x250]
  429224:	mov    QWORD PTR [rbp-0x220],rax
  42922b:	mov    rdx,QWORD PTR [rbp-0x258]
  429232:	mov    rcx,QWORD PTR [rbp-0x220]
  429239:	mov    rax,QWORD PTR [rbp-0x248]
  429240:	mov    rsi,rcx
  429243:	mov    rdi,rax
  429246:	call   428519 <flatcc_json_parser_skip_constant@@Base>
  42924b:	mov    QWORD PTR [rbp-0x250],rax
  429252:	mov    rax,QWORD PTR [rbp-0x220]
  429259:	cmp    rax,QWORD PTR [rbp-0x250]
  429260:	jne    429295 <flatcc_json_parser_generic_json@@Base+0x4c3>
  429262:	mov    rdx,QWORD PTR [rbp-0x258]
  429269:	mov    rsi,QWORD PTR [rbp-0x250]
  429270:	mov    rax,QWORD PTR [rbp-0x248]
  429277:	mov    ecx,0x5
  42927c:	mov    rdi,rax
  42927f:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  429284:	jmp    4293a5 <flatcc_json_parser_generic_json@@Base+0x5d3>
  429289:	nop
  42928a:	jmp    42931e <flatcc_json_parser_generic_json@@Base+0x54c>
  42928f:	nop
  429290:	jmp    42931e <flatcc_json_parser_generic_json@@Base+0x54c>
  429295:	nop
  429296:	jmp    42931e <flatcc_json_parser_generic_json@@Base+0x54c>
  42929b:	dec    QWORD PTR [rbp-0x230]
  4292a2:	mov    rax,QWORD PTR [rbp-0x230]
  4292a9:	movzx  eax,BYTE PTR [rax]
  4292ac:	cmp    al,0x5d
  4292ae:	jne    4292dd <flatcc_json_parser_generic_json@@Base+0x50b>
  4292b0:	lea    rcx,[rbp-0x234]
  4292b7:	mov    rdx,QWORD PTR [rbp-0x258]
  4292be:	mov    rsi,QWORD PTR [rbp-0x250]
  4292c5:	mov    rax,QWORD PTR [rbp-0x248]
  4292cc:	mov    rdi,rax
  4292cf:	call   424539 <flatcc_verify_union_vector_field@@Base+0x797>
  4292d4:	mov    QWORD PTR [rbp-0x250],rax
  4292db:	jmp    429308 <flatcc_json_parser_generic_json@@Base+0x536>
  4292dd:	lea    rcx,[rbp-0x234]
  4292e4:	mov    rdx,QWORD PTR [rbp-0x258]
  4292eb:	mov    rsi,QWORD PTR [rbp-0x250]
  4292f2:	mov    rax,QWORD PTR [rbp-0x248]
  4292f9:	mov    rdi,rax
  4292fc:	call   42433e <flatcc_verify_union_vector_field@@Base+0x59c>
  429301:	mov    QWORD PTR [rbp-0x250],rax
  429308:	mov    eax,DWORD PTR [rbp-0x234]
  42930e:	test   eax,eax
  429310:	je     42931e <flatcc_json_parser_generic_json@@Base+0x54c>
  429312:	inc    QWORD PTR [rbp-0x230]
  429319:	jmp    428e31 <flatcc_json_parser_generic_json@@Base+0x5f>
  42931e:	mov    rax,QWORD PTR [rbp-0x250]
  429325:	cmp    rax,QWORD PTR [rbp-0x258]
  42932c:	je     429342 <flatcc_json_parser_generic_json@@Base+0x570>
  42932e:	lea    rax,[rbp-0x210]
  429335:	cmp    QWORD PTR [rbp-0x230],rax
  42933c:	jne    42929b <flatcc_json_parser_generic_json@@Base+0x4c9>
  429342:	mov    rax,QWORD PTR [rbp-0x250]
  429349:	cmp    rax,QWORD PTR [rbp-0x258]
  429350:	jne    42939e <flatcc_json_parser_generic_json@@Base+0x5cc>
  429352:	lea    rax,[rbp-0x210]
  429359:	cmp    QWORD PTR [rbp-0x230],rax
  429360:	je     42939e <flatcc_json_parser_generic_json@@Base+0x5cc>
  429362:	mov    rax,QWORD PTR [rbp-0x230]
  429369:	dec    rax
  42936c:	movzx  eax,BYTE PTR [rax]
  42936f:	cmp    al,0x5d
  429371:	jne    42937a <flatcc_json_parser_generic_json@@Base+0x5a8>
  429373:	mov    ecx,0x9
  429378:	jmp    42937f <flatcc_json_parser_generic_json@@Base+0x5ad>
  42937a:	mov    ecx,0xa
  42937f:	mov    rdx,QWORD PTR [rbp-0x258]
  429386:	mov    rsi,QWORD PTR [rbp-0x250]
  42938d:	mov    rax,QWORD PTR [rbp-0x248]
  429394:	mov    rdi,rax
  429397:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  42939c:	jmp    4293a5 <flatcc_json_parser_generic_json@@Base+0x5d3>
  42939e:	mov    rax,QWORD PTR [rbp-0x250]
  4293a5:	mov    rdi,QWORD PTR [rbp-0x8]
  4293a9:	xor    rdi,QWORD PTR fs:0x28
  4293b2:	je     4293b9 <flatcc_json_parser_generic_json@@Base+0x5e7>
  4293b4:	call   4061a0 <__stack_chk_fail@plt>
  4293b9:	leave  
  4293ba:	ret    

00000000004293bb <flatcc_json_parser_integer@@Base>:
  4293bb:	endbr64 
  4293bf:	push   rbp
  4293c0:	mov    rbp,rsp
  4293c3:	sub    rsp,0x50
  4293c7:	mov    QWORD PTR [rbp-0x28],rdi
  4293cb:	mov    QWORD PTR [rbp-0x30],rsi
  4293cf:	mov    QWORD PTR [rbp-0x38],rdx
  4293d3:	mov    QWORD PTR [rbp-0x40],rcx
  4293d7:	mov    QWORD PTR [rbp-0x48],r8
  4293db:	mov    QWORD PTR [rbp-0x18],0x0
  4293e3:	mov    rax,QWORD PTR [rbp-0x30]
  4293e7:	cmp    rax,QWORD PTR [rbp-0x38]
  4293eb:	jne    4293f6 <flatcc_json_parser_integer@@Base+0x3b>
  4293ed:	mov    rax,QWORD PTR [rbp-0x30]
  4293f1:	jmp    429516 <flatcc_json_parser_integer@@Base+0x15b>
  4293f6:	mov    rax,QWORD PTR [rbp-0x30]
  4293fa:	mov    QWORD PTR [rbp-0x10],rax
  4293fe:	mov    rax,QWORD PTR [rbp-0x30]
  429402:	movzx  eax,BYTE PTR [rax]
  429405:	cmp    al,0x2d
  429407:	sete   al
  42940a:	movzx  edx,al
  42940d:	mov    rax,QWORD PTR [rbp-0x40]
  429411:	mov    DWORD PTR [rax],edx
  429413:	mov    rax,QWORD PTR [rbp-0x40]
  429417:	mov    eax,DWORD PTR [rax]
  429419:	cdqe   
  42941b:	add    QWORD PTR [rbp-0x30],rax
  42941f:	jmp    42948d <flatcc_json_parser_integer@@Base+0xd2>
  429421:	mov    rax,QWORD PTR [rbp-0x18]
  429425:	mov    QWORD PTR [rbp-0x8],rax
  429429:	mov    rdx,QWORD PTR [rbp-0x18]
  42942d:	mov    rax,rdx
  429430:	shl    rax,0x2
  429434:	add    rax,rdx
  429437:	add    rax,rax
  42943a:	mov    rdx,rax
  42943d:	mov    rax,QWORD PTR [rbp-0x30]
  429441:	movzx  eax,BYTE PTR [rax]
  429444:	movsx  rax,al
  429448:	add    rax,rdx
  42944b:	sub    rax,0x30
  42944f:	mov    QWORD PTR [rbp-0x18],rax
  429453:	mov    rax,QWORD PTR [rbp-0x8]
  429457:	cmp    rax,QWORD PTR [rbp-0x18]
  42945b:	jbe    429489 <flatcc_json_parser_integer@@Base+0xce>
  42945d:	cmp    QWORD PTR [rbp-0x40],0x0
  429462:	je     42946b <flatcc_json_parser_integer@@Base+0xb0>
  429464:	mov    ecx,0x8
  429469:	jmp    429470 <flatcc_json_parser_integer@@Base+0xb5>
  42946b:	mov    ecx,0x7
  429470:	mov    rdx,QWORD PTR [rbp-0x38]
  429474:	mov    rsi,QWORD PTR [rbp-0x30]
  429478:	mov    rax,QWORD PTR [rbp-0x28]
  42947c:	mov    rdi,rax
  42947f:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  429484:	jmp    429516 <flatcc_json_parser_integer@@Base+0x15b>
  429489:	inc    QWORD PTR [rbp-0x30]
  42948d:	mov    rax,QWORD PTR [rbp-0x30]
  429491:	cmp    rax,QWORD PTR [rbp-0x38]
  429495:	je     4294b1 <flatcc_json_parser_integer@@Base+0xf6>
  429497:	mov    rax,QWORD PTR [rbp-0x30]
  42949b:	movzx  eax,BYTE PTR [rax]
  42949e:	cmp    al,0x2f
  4294a0:	jle    4294b1 <flatcc_json_parser_integer@@Base+0xf6>
  4294a2:	mov    rax,QWORD PTR [rbp-0x30]
  4294a6:	movzx  eax,BYTE PTR [rax]
  4294a9:	cmp    al,0x39
  4294ab:	jle    429421 <flatcc_json_parser_integer@@Base+0x66>
  4294b1:	mov    rax,QWORD PTR [rbp-0x30]
  4294b5:	cmp    rax,QWORD PTR [rbp-0x10]
  4294b9:	jne    4294c1 <flatcc_json_parser_integer@@Base+0x106>
  4294bb:	mov    rax,QWORD PTR [rbp-0x30]
  4294bf:	jmp    429516 <flatcc_json_parser_integer@@Base+0x15b>
  4294c1:	mov    rax,QWORD PTR [rbp-0x30]
  4294c5:	cmp    rax,QWORD PTR [rbp-0x38]
  4294c9:	je     429507 <flatcc_json_parser_integer@@Base+0x14c>
  4294cb:	mov    rax,QWORD PTR [rbp-0x30]
  4294cf:	movzx  eax,BYTE PTR [rax]
  4294d2:	cmp    al,0x65
  4294d4:	je     4294ec <flatcc_json_parser_integer@@Base+0x131>
  4294d6:	mov    rax,QWORD PTR [rbp-0x30]
  4294da:	movzx  eax,BYTE PTR [rax]
  4294dd:	cmp    al,0x45
  4294df:	je     4294ec <flatcc_json_parser_integer@@Base+0x131>
  4294e1:	mov    rax,QWORD PTR [rbp-0x30]
  4294e5:	movzx  eax,BYTE PTR [rax]
  4294e8:	cmp    al,0x2e
  4294ea:	jne    429507 <flatcc_json_parser_integer@@Base+0x14c>
  4294ec:	mov    rdx,QWORD PTR [rbp-0x38]
  4294f0:	mov    rsi,QWORD PTR [rbp-0x30]
  4294f4:	mov    rax,QWORD PTR [rbp-0x28]
  4294f8:	mov    ecx,0xc
  4294fd:	mov    rdi,rax
  429500:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  429505:	jmp    429516 <flatcc_json_parser_integer@@Base+0x15b>
  429507:	mov    rax,QWORD PTR [rbp-0x48]
  42950b:	mov    rdx,QWORD PTR [rbp-0x18]
  42950f:	mov    QWORD PTR [rax],rdx
  429512:	mov    rax,QWORD PTR [rbp-0x30]
  429516:	leave  
  429517:	ret    

0000000000429518 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
  429518:	endbr64 
  42951c:	push   rbp
  42951d:	mov    rbp,rsp
  429520:	sub    rsp,0x70
  429524:	mov    QWORD PTR [rbp-0x48],rdi
  429528:	mov    QWORD PTR [rbp-0x50],rsi
  42952c:	mov    QWORD PTR [rbp-0x58],rdx
  429530:	mov    QWORD PTR [rbp-0x60],rcx
  429534:	mov    DWORD PTR [rbp-0x64],r8d
  429538:	mov    rax,QWORD PTR fs:0x28
  429541:	mov    QWORD PTR [rbp-0x8],rax
  429545:	xor    eax,eax
  429547:	cmp    DWORD PTR [rbp-0x64],0x0
  42954b:	setne  al
  42954e:	movzx  eax,al
  429551:	mov    DWORD PTR [rbp-0x38],eax
  429554:	mov    rdx,QWORD PTR [rbp-0x58]
  429558:	mov    rcx,QWORD PTR [rbp-0x50]
  42955c:	mov    rax,QWORD PTR [rbp-0x48]
  429560:	mov    rsi,rcx
  429563:	mov    rdi,rax
  429566:	call   4240ad <flatcc_verify_union_vector_field@@Base+0x30b>
  42956b:	mov    QWORD PTR [rbp-0x50],rax
  42956f:	mov    rax,QWORD PTR [rbp-0x50]
  429573:	mov    QWORD PTR [rbp-0x20],rax
  429577:	mov    rdx,QWORD PTR [rbp-0x58]
  42957b:	mov    rcx,QWORD PTR [rbp-0x20]
  42957f:	mov    rax,QWORD PTR [rbp-0x48]
  429583:	mov    rsi,rcx
  429586:	mov    rdi,rax
  429589:	call   427d4e <flatcc_json_parser_string_part@@Base>
  42958e:	mov    QWORD PTR [rbp-0x50],rax
  429592:	mov    rax,QWORD PTR [rbp-0x50]
  429596:	cmp    rax,QWORD PTR [rbp-0x58]
  42959a:	je     429716 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1fe>
  4295a0:	mov    rax,QWORD PTR [rbp-0x50]
  4295a4:	movzx  eax,BYTE PTR [rax]
  4295a7:	cmp    al,0x22
  4295a9:	jne    429716 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1fe>
  4295af:	mov    rax,QWORD PTR [rbp-0x50]
  4295b3:	sub    rax,QWORD PTR [rbp-0x20]
  4295b7:	mov    rdi,rax
  4295ba:	call   4273bf <grisu3_diy_fp_encode_double@@Base+0x115c>
  4295bf:	mov    QWORD PTR [rbp-0x18],rax
  4295c3:	mov    rax,QWORD PTR [rbp-0x48]
  4295c7:	mov    rax,QWORD PTR [rax]
  4295ca:	mov    ecx,0xffffffff
  4295cf:	mov    edx,0x1
  4295d4:	mov    esi,0x1
  4295d9:	mov    rdi,rax
  4295dc:	call   41eaf3 <flatcc_builder_start_vector@@Base>
  4295e1:	test   eax,eax
  4295e3:	jne    4296e7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1cf>
  4295e9:	mov    rax,QWORD PTR [rbp-0x48]
  4295ed:	mov    rax,QWORD PTR [rax]
  4295f0:	mov    rdx,QWORD PTR [rbp-0x18]
  4295f4:	mov    rsi,rdx
  4295f7:	mov    rdi,rax
  4295fa:	call   41e3a3 <flatcc_builder_extend_vector@@Base>
  4295ff:	mov    QWORD PTR [rbp-0x10],rax
  429603:	cmp    QWORD PTR [rbp-0x10],0x0
  429608:	je     4296ea <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d2>
  42960e:	mov    rax,QWORD PTR [rbp-0x50]
  429612:	sub    rax,QWORD PTR [rbp-0x20]
  429616:	mov    QWORD PTR [rbp-0x28],rax
  42961a:	mov    rax,QWORD PTR [rbp-0x18]
  42961e:	mov    QWORD PTR [rbp-0x30],rax
  429622:	mov    edi,DWORD PTR [rbp-0x38]
  429625:	lea    rcx,[rbp-0x28]
  429629:	lea    rdx,[rbp-0x30]
  42962d:	mov    rsi,QWORD PTR [rbp-0x20]
  429631:	mov    rax,QWORD PTR [rbp-0x10]
  429635:	mov    r8d,edi
  429638:	mov    rdi,rax
  42963b:	call   42770e <grisu3_diy_fp_encode_double@@Base+0x14ab>
  429640:	mov    DWORD PTR [rbp-0x34],eax
  429643:	cmp    DWORD PTR [rbp-0x34],0x0
  429647:	je     42965d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x145>
  429649:	mov    rdx,QWORD PTR [rbp-0x28]
  42964d:	mov    rax,QWORD PTR [rbp-0x20]
  429651:	add    rax,rdx
  429654:	mov    QWORD PTR [rbp-0x50],rax
  429658:	jmp    429717 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ff>
  42965d:	mov    rax,QWORD PTR [rbp-0x50]
  429661:	sub    rax,QWORD PTR [rbp-0x20]
  429665:	mov    rdx,QWORD PTR [rbp-0x28]
  429669:	cmp    rax,rdx
  42966c:	je     429682 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x16a>
  42966e:	mov    rdx,QWORD PTR [rbp-0x28]
  429672:	mov    rax,QWORD PTR [rbp-0x20]
  429676:	add    rax,rdx
  429679:	mov    QWORD PTR [rbp-0x50],rax
  42967d:	jmp    429717 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ff>
  429682:	mov    rax,QWORD PTR [rbp-0x30]
  429686:	cmp    QWORD PTR [rbp-0x18],rax
  42968a:	jbe    4296ad <flatcc_json_parser_build_uint8_vector_base64@@Base+0x195>
  42968c:	mov    rax,QWORD PTR [rbp-0x30]
  429690:	mov    rdx,QWORD PTR [rbp-0x18]
  429694:	sub    rdx,rax
  429697:	mov    rax,QWORD PTR [rbp-0x48]
  42969b:	mov    rax,QWORD PTR [rax]
  42969e:	mov    rsi,rdx
  4296a1:	mov    rdi,rax
  4296a4:	call   41e87d <flatcc_builder_truncate_vector@@Base>
  4296a9:	test   eax,eax
  4296ab:	jne    4296ed <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d5>
  4296ad:	mov    rax,QWORD PTR [rbp-0x48]
  4296b1:	mov    rax,QWORD PTR [rax]
  4296b4:	mov    rdi,rax
  4296b7:	call   41fce8 <flatcc_builder_end_vector@@Base>
  4296bc:	mov    edx,eax
  4296be:	mov    rax,QWORD PTR [rbp-0x60]
  4296c2:	mov    DWORD PTR [rax],edx
  4296c4:	mov    rax,QWORD PTR [rbp-0x60]
  4296c8:	mov    eax,DWORD PTR [rax]
  4296ca:	test   eax,eax
  4296cc:	je     4296f0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d8>
  4296ce:	mov    rdx,QWORD PTR [rbp-0x58]
  4296d2:	mov    rcx,QWORD PTR [rbp-0x50]
  4296d6:	mov    rax,QWORD PTR [rbp-0x48]
  4296da:	mov    rsi,rcx
  4296dd:	mov    rdi,rax
  4296e0:	call   4240fb <flatcc_verify_union_vector_field@@Base+0x359>
  4296e5:	jmp    429747 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x22f>
  4296e7:	nop
  4296e8:	jmp    4296f1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d9>
  4296ea:	nop
  4296eb:	jmp    4296f1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d9>
  4296ed:	nop
  4296ee:	jmp    4296f1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d9>
  4296f0:	nop
  4296f1:	mov    rax,QWORD PTR [rbp-0x60]
  4296f5:	mov    DWORD PTR [rax],0x0
  4296fb:	mov    rdx,QWORD PTR [rbp-0x58]
  4296ff:	mov    rsi,QWORD PTR [rbp-0x50]
  429703:	mov    rax,QWORD PTR [rbp-0x48]
  429707:	mov    ecx,0x21
  42970c:	mov    rdi,rax
  42970f:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  429714:	jmp    429747 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x22f>
  429716:	nop
  429717:	mov    rax,QWORD PTR [rbp-0x60]
  42971b:	mov    DWORD PTR [rax],0x0
  429721:	cmp    DWORD PTR [rbp-0x64],0x0
  429725:	je     42972e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x216>
  429727:	mov    ecx,0x20
  42972c:	jmp    429733 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x21b>
  42972e:	mov    ecx,0x1f
  429733:	mov    rdx,QWORD PTR [rbp-0x58]
  429737:	mov    rsi,QWORD PTR [rbp-0x50]
  42973b:	mov    rax,QWORD PTR [rbp-0x48]
  42973f:	mov    rdi,rax
  429742:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  429747:	mov    rdi,QWORD PTR [rbp-0x8]
  42974b:	xor    rdi,QWORD PTR fs:0x28
  429754:	je     42975b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x243>
  429756:	call   4061a0 <__stack_chk_fail@plt>
  42975b:	leave  
  42975c:	ret    

000000000042975d <flatcc_json_parser_build_string@@Base>:
  42975d:	endbr64 
  429761:	push   rbp
  429762:	mov    rbp,rsp
  429765:	sub    rsp,0x40
  429769:	mov    QWORD PTR [rbp-0x28],rdi
  42976d:	mov    QWORD PTR [rbp-0x30],rsi
  429771:	mov    QWORD PTR [rbp-0x38],rdx
  429775:	mov    QWORD PTR [rbp-0x40],rcx
  429779:	mov    rax,QWORD PTR fs:0x28
  429782:	mov    QWORD PTR [rbp-0x8],rax
  429786:	xor    eax,eax
  429788:	mov    rdx,QWORD PTR [rbp-0x38]
  42978c:	mov    rcx,QWORD PTR [rbp-0x30]
  429790:	mov    rax,QWORD PTR [rbp-0x28]
  429794:	mov    rsi,rcx
  429797:	mov    rdi,rax
  42979a:	call   4240ad <flatcc_verify_union_vector_field@@Base+0x30b>
  42979f:	mov    QWORD PTR [rbp-0x30],rax
  4297a3:	mov    rax,QWORD PTR [rbp-0x30]
  4297a7:	mov    QWORD PTR [rbp-0x18],rax
  4297ab:	mov    rdx,QWORD PTR [rbp-0x38]
  4297af:	mov    rcx,QWORD PTR [rbp-0x18]
  4297b3:	mov    rax,QWORD PTR [rbp-0x28]
  4297b7:	mov    rsi,rcx
  4297ba:	mov    rdi,rax
  4297bd:	call   427d4e <flatcc_json_parser_string_part@@Base>
  4297c2:	mov    QWORD PTR [rbp-0x30],rax
  4297c6:	mov    rax,QWORD PTR [rbp-0x30]
  4297ca:	cmp    rax,QWORD PTR [rbp-0x38]
  4297ce:	je     429809 <flatcc_json_parser_build_string@@Base+0xac>
  4297d0:	mov    rax,QWORD PTR [rbp-0x30]
  4297d4:	movzx  eax,BYTE PTR [rax]
  4297d7:	cmp    al,0x22
  4297d9:	jne    429809 <flatcc_json_parser_build_string@@Base+0xac>
  4297db:	mov    rax,QWORD PTR [rbp-0x30]
  4297df:	sub    rax,QWORD PTR [rbp-0x18]
  4297e3:	mov    rdx,rax
  4297e6:	mov    rax,QWORD PTR [rbp-0x28]
  4297ea:	mov    rax,QWORD PTR [rax]
  4297ed:	mov    rcx,QWORD PTR [rbp-0x18]
  4297f1:	mov    rsi,rcx
  4297f4:	mov    rdi,rax
  4297f7:	call   420b8a <flatcc_builder_create_string@@Base>
  4297fc:	mov    edx,eax
  4297fe:	mov    rax,QWORD PTR [rbp-0x40]
  429802:	mov    DWORD PTR [rax],edx
  429804:	jmp    429918 <flatcc_json_parser_build_string@@Base+0x1bb>
  429809:	mov    rax,QWORD PTR [rbp-0x28]
  42980d:	mov    rax,QWORD PTR [rax]
  429810:	mov    rdi,rax
  429813:	call   41ec86 <flatcc_builder_start_string@@Base>
  429818:	test   eax,eax
  42981a:	jne    429931 <flatcc_json_parser_build_string@@Base+0x1d4>
  429820:	mov    rax,QWORD PTR [rbp-0x30]
  429824:	sub    rax,QWORD PTR [rbp-0x18]
  429828:	mov    rdx,rax
  42982b:	mov    rax,QWORD PTR [rbp-0x28]
  42982f:	mov    rax,QWORD PTR [rax]
  429832:	mov    rcx,QWORD PTR [rbp-0x18]
  429836:	mov    rsi,rcx
  429839:	mov    rdi,rax
  42983c:	call   41e77a <flatcc_builder_append_string@@Base>
  429841:	test   rax,rax
  429844:	je     429931 <flatcc_json_parser_build_string@@Base+0x1d4>
  42984a:	jmp    4298e8 <flatcc_json_parser_build_string@@Base+0x18b>
  42984f:	lea    rcx,[rbp-0xc]
  429853:	mov    rdx,QWORD PTR [rbp-0x38]
  429857:	mov    rsi,QWORD PTR [rbp-0x30]
  42985b:	mov    rax,QWORD PTR [rbp-0x28]
  42985f:	mov    rdi,rax
  429862:	call   427f4a <flatcc_json_parser_string_escape@@Base>
  429867:	mov    QWORD PTR [rbp-0x30],rax
  42986b:	movzx  eax,BYTE PTR [rbp-0xc]
  42986f:	movsx  rdx,al
  429873:	lea    rax,[rbp-0xc]
  429877:	inc    rax
  42987a:	mov    rcx,QWORD PTR [rbp-0x28]
  42987e:	mov    rcx,QWORD PTR [rcx]
  429881:	mov    rsi,rax
  429884:	mov    rdi,rcx
  429887:	call   41e77a <flatcc_builder_append_string@@Base>
  42988c:	test   rax,rax
  42988f:	je     429934 <flatcc_json_parser_build_string@@Base+0x1d7>
  429895:	mov    rax,QWORD PTR [rbp-0x30]
  429899:	mov    QWORD PTR [rbp-0x18],rax
  42989d:	mov    rdx,QWORD PTR [rbp-0x38]
  4298a1:	mov    rcx,QWORD PTR [rbp-0x18]
  4298a5:	mov    rax,QWORD PTR [rbp-0x28]
  4298a9:	mov    rsi,rcx
  4298ac:	mov    rdi,rax
  4298af:	call   427d4e <flatcc_json_parser_string_part@@Base>
  4298b4:	mov    QWORD PTR [rbp-0x30],rax
  4298b8:	mov    rax,QWORD PTR [rbp-0x30]
  4298bc:	cmp    rax,QWORD PTR [rbp-0x38]
  4298c0:	je     4298e8 <flatcc_json_parser_build_string@@Base+0x18b>
  4298c2:	mov    rax,QWORD PTR [rbp-0x30]
  4298c6:	sub    rax,QWORD PTR [rbp-0x18]
  4298ca:	mov    rdx,rax
  4298cd:	mov    rax,QWORD PTR [rbp-0x28]
  4298d1:	mov    rax,QWORD PTR [rax]
  4298d4:	mov    rcx,QWORD PTR [rbp-0x18]
  4298d8:	mov    rsi,rcx
  4298db:	mov    rdi,rax
  4298de:	call   41e77a <flatcc_builder_append_string@@Base>
  4298e3:	test   rax,rax
  4298e6:	je     429937 <flatcc_json_parser_build_string@@Base+0x1da>
  4298e8:	mov    rax,QWORD PTR [rbp-0x30]
  4298ec:	cmp    rax,QWORD PTR [rbp-0x38]
  4298f0:	je     429901 <flatcc_json_parser_build_string@@Base+0x1a4>
  4298f2:	mov    rax,QWORD PTR [rbp-0x30]
  4298f6:	movzx  eax,BYTE PTR [rax]
  4298f9:	cmp    al,0x22
  4298fb:	jne    42984f <flatcc_json_parser_build_string@@Base+0xf2>
  429901:	mov    rax,QWORD PTR [rbp-0x28]
  429905:	mov    rax,QWORD PTR [rax]
  429908:	mov    rdi,rax
  42990b:	call   420e09 <flatcc_builder_end_string@@Base>
  429910:	mov    edx,eax
  429912:	mov    rax,QWORD PTR [rbp-0x40]
  429916:	mov    DWORD PTR [rax],edx
  429918:	mov    rdx,QWORD PTR [rbp-0x38]
  42991c:	mov    rcx,QWORD PTR [rbp-0x30]
  429920:	mov    rax,QWORD PTR [rbp-0x28]
  429924:	mov    rsi,rcx
  429927:	mov    rdi,rax
  42992a:	call   4240fb <flatcc_verify_union_vector_field@@Base+0x359>
  42992f:	jmp    429946 <flatcc_json_parser_build_string@@Base+0x1e9>
  429931:	nop
  429932:	jmp    429938 <flatcc_json_parser_build_string@@Base+0x1db>
  429934:	nop
  429935:	jmp    429938 <flatcc_json_parser_build_string@@Base+0x1db>
  429937:	nop
  429938:	mov    rax,QWORD PTR [rbp-0x40]
  42993c:	mov    DWORD PTR [rax],0x0
  429942:	mov    rax,QWORD PTR [rbp-0x30]
  429946:	mov    rsi,QWORD PTR [rbp-0x8]
  42994a:	xor    rsi,QWORD PTR fs:0x28
  429953:	je     42995a <flatcc_json_parser_build_string@@Base+0x1fd>
  429955:	call   4061a0 <__stack_chk_fail@plt>
  42995a:	leave  
  42995b:	ret    

000000000042995c <flatcc_json_parser_prepare_unions@@Base>:
  42995c:	endbr64 
  429960:	push   rbp
  429961:	mov    rbp,rsp
  429964:	sub    rsp,0x40
  429968:	mov    QWORD PTR [rbp-0x18],rdi
  42996c:	mov    QWORD PTR [rbp-0x20],rsi
  429970:	mov    QWORD PTR [rbp-0x28],rdx
  429974:	mov    QWORD PTR [rbp-0x30],rcx
  429978:	mov    QWORD PTR [rbp-0x38],r8
  42997c:	mov    rdx,QWORD PTR [rbp-0x30]
  429980:	mov    rax,rdx
  429983:	shl    rax,0x2
  429987:	add    rax,rdx
  42998a:	shl    rax,0x3
  42998e:	lea    rdx,[rax+0x10]
  429992:	mov    rax,QWORD PTR [rbp-0x18]
  429996:	mov    rax,QWORD PTR [rax]
  429999:	mov    rsi,rdx
  42999c:	mov    rdi,rax
  42999f:	call   41cea0 <flatcc_builder_enter_user_frame@@Base>
  4299a4:	mov    rdx,rax
  4299a7:	mov    rax,QWORD PTR [rbp-0x38]
  4299ab:	mov    QWORD PTR [rax],rdx
  4299ae:	mov    rax,QWORD PTR [rbp-0x38]
  4299b2:	mov    rax,QWORD PTR [rax]
  4299b5:	test   rax,rax
  4299b8:	jne    4299d5 <flatcc_json_parser_prepare_unions@@Base+0x79>
  4299ba:	mov    rdx,QWORD PTR [rbp-0x28]
  4299be:	mov    rsi,QWORD PTR [rbp-0x20]
  4299c2:	mov    rax,QWORD PTR [rbp-0x18]
  4299c6:	mov    ecx,0x21
  4299cb:	mov    rdi,rax
  4299ce:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  4299d3:	jmp    429a01 <flatcc_json_parser_prepare_unions@@Base+0xa5>
  4299d5:	mov    rax,QWORD PTR [rbp-0x38]
  4299d9:	mov    rdx,QWORD PTR [rax]
  4299dc:	mov    rax,QWORD PTR [rbp-0x18]
  4299e0:	mov    rax,QWORD PTR [rax]
  4299e3:	mov    rsi,rdx
  4299e6:	mov    rdi,rax
  4299e9:	call   41d085 <flatcc_builder_get_user_frame_ptr@@Base>
  4299ee:	mov    QWORD PTR [rbp-0x8],rax
  4299f2:	mov    rax,QWORD PTR [rbp-0x8]
  4299f6:	mov    rdx,QWORD PTR [rbp-0x30]
  4299fa:	mov    QWORD PTR [rax],rdx
  4299fd:	mov    rax,QWORD PTR [rbp-0x20]
  429a01:	leave  
  429a02:	ret    

0000000000429a03 <flatcc_json_parser_finalize_unions@@Base>:
  429a03:	endbr64 
  429a07:	push   rbp
  429a08:	mov    rbp,rsp
  429a0b:	sub    rsp,0x30
  429a0f:	mov    QWORD PTR [rbp-0x18],rdi
  429a13:	mov    QWORD PTR [rbp-0x20],rsi
  429a17:	mov    QWORD PTR [rbp-0x28],rdx
  429a1b:	mov    QWORD PTR [rbp-0x30],rcx
  429a1f:	mov    rax,QWORD PTR [rbp-0x18]
  429a23:	mov    rax,QWORD PTR [rax]
  429a26:	mov    rdx,QWORD PTR [rbp-0x30]
  429a2a:	mov    rsi,rdx
  429a2d:	mov    rdi,rax
  429a30:	call   41d085 <flatcc_builder_get_user_frame_ptr@@Base>
  429a35:	mov    QWORD PTR [rbp-0x8],rax
  429a39:	mov    rax,QWORD PTR [rbp-0x8]
  429a3d:	mov    rax,QWORD PTR [rax+0x8]
  429a41:	test   rax,rax
  429a44:	je     429a63 <flatcc_json_parser_finalize_unions@@Base+0x60>
  429a46:	mov    rdx,QWORD PTR [rbp-0x28]
  429a4a:	mov    rsi,QWORD PTR [rbp-0x20]
  429a4e:	mov    rax,QWORD PTR [rbp-0x18]
  429a52:	mov    ecx,0x1b
  429a57:	mov    rdi,rax
  429a5a:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  429a5f:	mov    QWORD PTR [rbp-0x20],rax
  429a63:	mov    rax,QWORD PTR [rbp-0x18]
  429a67:	mov    rax,QWORD PTR [rax]
  429a6a:	mov    rdx,QWORD PTR [rbp-0x30]
  429a6e:	mov    rsi,rdx
  429a71:	mov    rdi,rax
  429a74:	call   41d00b <flatcc_builder_exit_user_frame_at@@Base>
  429a79:	mov    rax,QWORD PTR [rbp-0x20]
  429a7d:	leave  
  429a7e:	ret    

0000000000429a7f <flatcc_json_parser_union@@Base>:
  429a7f:	endbr64 
  429a83:	push   rbp
  429a84:	mov    rbp,rsp
  429a87:	sub    rsp,0x60
  429a8b:	mov    QWORD PTR [rbp-0x28],rdi
  429a8f:	mov    QWORD PTR [rbp-0x30],rsi
  429a93:	mov    QWORD PTR [rbp-0x38],rdx
  429a97:	mov    QWORD PTR [rbp-0x40],rcx
  429a9b:	mov    eax,r8d
  429a9e:	mov    QWORD PTR [rbp-0x50],r9
  429aa2:	mov    WORD PTR [rbp-0x44],ax
  429aa6:	mov    rax,QWORD PTR [rbp+0x10]
  429aaa:	mov    QWORD PTR [rbp-0x58],rax
  429aae:	mov    rax,QWORD PTR fs:0x28
  429ab7:	mov    QWORD PTR [rbp-0x8],rax
  429abb:	xor    eax,eax
  429abd:	mov    rax,QWORD PTR [rbp-0x28]
  429ac1:	mov    rax,QWORD PTR [rax]
  429ac4:	mov    rdx,QWORD PTR [rbp-0x50]
  429ac8:	mov    rsi,rdx
  429acb:	mov    rdi,rax
  429ace:	call   41d085 <flatcc_builder_get_user_frame_ptr@@Base>
  429ad3:	mov    QWORD PTR [rbp-0x20],rax
  429ad7:	mov    rdx,QWORD PTR [rbp-0x40]
  429adb:	mov    rax,rdx
  429ade:	shl    rax,0x2
  429ae2:	add    rax,rdx
  429ae5:	shl    rax,0x3
  429ae9:	mov    rdx,QWORD PTR [rbp-0x20]
  429aed:	add    rax,rdx
  429af0:	add    rax,0x10
  429af4:	mov    QWORD PTR [rbp-0x18],rax
  429af8:	mov    rax,QWORD PTR [rbp-0x18]
  429afc:	mov    rax,QWORD PTR [rax]
  429aff:	test   rax,rax
  429b02:	je     429b22 <flatcc_json_parser_union@@Base+0xa3>
  429b04:	mov    rdx,QWORD PTR [rbp-0x38]
  429b08:	mov    rsi,QWORD PTR [rbp-0x30]
  429b0c:	mov    rax,QWORD PTR [rbp-0x28]
  429b10:	mov    ecx,0x1c
  429b15:	mov    rdi,rax
  429b18:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  429b1d:	jmp    429c46 <flatcc_json_parser_union@@Base+0x1c7>
  429b22:	mov    rax,QWORD PTR [rbp-0x18]
  429b26:	movzx  eax,BYTE PTR [rax+0x14]
  429b2a:	test   al,al
  429b2c:	jne    429b8e <flatcc_json_parser_union@@Base+0x10f>
  429b2e:	mov    rax,QWORD PTR [rbp-0x20]
  429b32:	mov    rax,QWORD PTR [rax+0x8]
  429b36:	lea    rdx,[rax+0x1]
  429b3a:	mov    rax,QWORD PTR [rbp-0x20]
  429b3e:	mov    QWORD PTR [rax+0x8],rdx
  429b42:	mov    rax,QWORD PTR [rbp-0x28]
  429b46:	mov    edx,DWORD PTR [rax+0x18]
  429b49:	mov    rax,QWORD PTR [rbp-0x18]
  429b4d:	mov    DWORD PTR [rax+0x10],edx
  429b50:	mov    rax,QWORD PTR [rbp-0x28]
  429b54:	mov    rdx,QWORD PTR [rax+0x8]
  429b58:	mov    rax,QWORD PTR [rbp-0x18]
  429b5c:	mov    QWORD PTR [rax+0x8],rdx
  429b60:	mov    rax,QWORD PTR [rbp-0x18]
  429b64:	mov    rdx,QWORD PTR [rbp-0x30]
  429b68:	mov    QWORD PTR [rax],rdx
  429b6b:	mov    rax,QWORD PTR [rbp-0x18]
  429b6f:	mov    rcx,QWORD PTR [rax]
  429b72:	mov    rdx,QWORD PTR [rbp-0x38]
  429b76:	mov    rax,QWORD PTR [rbp-0x28]
  429b7a:	mov    rsi,rcx
  429b7d:	mov    rdi,rax
  429b80:	call   428dd2 <flatcc_json_parser_generic_json@@Base>
  429b85:	mov    QWORD PTR [rbp-0x30],rax
  429b89:	jmp    429c42 <flatcc_json_parser_union@@Base+0x1c3>
  429b8e:	mov    rax,QWORD PTR [rbp-0x18]
  429b92:	movzx  eax,BYTE PTR [rax+0x15]
  429b96:	mov    BYTE PTR [rbp-0x10],al
  429b99:	mov    rax,QWORD PTR [rbp-0x18]
  429b9d:	movzx  eax,BYTE PTR [rax+0x15]
  429ba1:	test   al,al
  429ba3:	jne    429bc3 <flatcc_json_parser_union@@Base+0x144>
  429ba5:	mov    rdx,QWORD PTR [rbp-0x38]
  429ba9:	mov    rsi,QWORD PTR [rbp-0x30]
  429bad:	mov    rax,QWORD PTR [rbp-0x28]
  429bb1:	mov    ecx,0x19
  429bb6:	mov    rdi,rax
  429bb9:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  429bbe:	jmp    429c46 <flatcc_json_parser_union@@Base+0x1c7>
  429bc3:	mov    rax,QWORD PTR [rbp-0x20]
  429bc7:	mov    rax,QWORD PTR [rax+0x8]
  429bcb:	lea    rdx,[rax-0x1]
  429bcf:	mov    rax,QWORD PTR [rbp-0x20]
  429bd3:	mov    QWORD PTR [rax+0x8],rdx
  429bd7:	mov    rax,QWORD PTR [rbp-0x18]
  429bdb:	movzx  eax,BYTE PTR [rax+0x15]
  429bdf:	movzx  ecx,al
  429be2:	lea    rax,[rbp-0x10]
  429be6:	lea    r8,[rax+0x4]
  429bea:	mov    rdx,QWORD PTR [rbp-0x38]
  429bee:	mov    rsi,QWORD PTR [rbp-0x30]
  429bf2:	mov    rdi,QWORD PTR [rbp-0x28]
  429bf6:	mov    rax,QWORD PTR [rbp-0x58]
  429bfa:	call   rax
  429bfc:	mov    QWORD PTR [rbp-0x30],rax
  429c00:	mov    rax,QWORD PTR [rbp-0x30]
  429c04:	cmp    rax,QWORD PTR [rbp-0x38]
  429c08:	je     429c42 <flatcc_json_parser_union@@Base+0x1c3>
  429c0a:	movzx  ecx,WORD PTR [rbp-0x44]
  429c0e:	mov    rax,QWORD PTR [rbp-0x28]
  429c12:	mov    rax,QWORD PTR [rax]
  429c15:	mov    rdx,QWORD PTR [rbp-0x10]
  429c19:	mov    esi,ecx
  429c1b:	mov    rdi,rax
  429c1e:	call   4202da <flatcc_builder_table_add_union@@Base>
  429c23:	test   eax,eax
  429c25:	je     429c42 <flatcc_json_parser_union@@Base+0x1c3>
  429c27:	mov    rdx,QWORD PTR [rbp-0x38]
  429c2b:	mov    rsi,QWORD PTR [rbp-0x30]
  429c2f:	mov    rax,QWORD PTR [rbp-0x28]
  429c33:	mov    ecx,0x1c
  429c38:	mov    rdi,rax
  429c3b:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  429c40:	jmp    429c46 <flatcc_json_parser_union@@Base+0x1c7>
  429c42:	mov    rax,QWORD PTR [rbp-0x30]
  429c46:	mov    rdi,QWORD PTR [rbp-0x8]
  429c4a:	xor    rdi,QWORD PTR fs:0x28
  429c53:	je     429c5a <flatcc_json_parser_union@@Base+0x1db>
  429c55:	call   4061a0 <__stack_chk_fail@plt>
  429c5a:	leave  
  429c5b:	ret    

0000000000429c5c <flatcc_json_parser_union_type@@Base>:
  429c5c:	endbr64 
  429c60:	push   rbp
  429c61:	mov    rbp,rsp
  429c64:	add    rsp,0xffffffffffffff80
  429c68:	mov    QWORD PTR [rbp-0x48],rdi
  429c6c:	mov    QWORD PTR [rbp-0x50],rsi
  429c70:	mov    QWORD PTR [rbp-0x58],rdx
  429c74:	mov    QWORD PTR [rbp-0x60],rcx
  429c78:	mov    eax,r8d
  429c7b:	mov    QWORD PTR [rbp-0x70],r9
  429c7f:	mov    WORD PTR [rbp-0x64],ax
  429c83:	mov    rax,QWORD PTR [rbp+0x10]
  429c87:	mov    QWORD PTR [rbp-0x78],rax
  429c8b:	mov    rax,QWORD PTR [rbp+0x18]
  429c8f:	mov    QWORD PTR [rbp-0x80],rax
  429c93:	mov    rax,QWORD PTR fs:0x28
  429c9c:	mov    QWORD PTR [rbp-0x8],rax
  429ca0:	xor    eax,eax
  429ca2:	mov    rax,QWORD PTR [rbp-0x48]
  429ca6:	mov    rax,QWORD PTR [rax]
  429ca9:	mov    rdx,QWORD PTR [rbp-0x70]
  429cad:	mov    rsi,rdx
  429cb0:	mov    rdi,rax
  429cb3:	call   41d085 <flatcc_builder_get_user_frame_ptr@@Base>
  429cb8:	mov    QWORD PTR [rbp-0x30],rax
  429cbc:	mov    rax,QWORD PTR [rbp-0x30]
  429cc0:	lea    rcx,[rax+0x10]
  429cc4:	mov    rdx,QWORD PTR [rbp-0x60]
  429cc8:	mov    rax,rdx
  429ccb:	shl    rax,0x2
  429ccf:	add    rax,rdx
  429cd2:	shl    rax,0x3
  429cd6:	add    rax,rcx
  429cd9:	mov    QWORD PTR [rbp-0x28],rax
  429cdd:	mov    rax,QWORD PTR [rbp-0x28]
  429ce1:	movzx  eax,BYTE PTR [rax+0x14]
  429ce5:	test   al,al
  429ce7:	je     429d07 <flatcc_json_parser_union_type@@Base+0xab>
  429ce9:	mov    rdx,QWORD PTR [rbp-0x58]
  429ced:	mov    rsi,QWORD PTR [rbp-0x50]
  429cf1:	mov    rax,QWORD PTR [rbp-0x48]
  429cf5:	mov    ecx,0x1c
  429cfa:	mov    rdi,rax
  429cfd:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  429d02:	jmp    429ea5 <flatcc_json_parser_union_type@@Base+0x249>
  429d07:	mov    rax,QWORD PTR [rbp-0x28]
  429d0b:	mov    BYTE PTR [rax+0x14],0x1
  429d0f:	mov    rax,QWORD PTR [rbp-0x28]
  429d13:	lea    rcx,[rax+0x15]
  429d17:	mov    rax,QWORD PTR [rbp-0x50]
  429d1b:	mov    QWORD PTR [rbp-0x20],rax
  429d1f:	mov    rdx,QWORD PTR [rbp-0x58]
  429d23:	mov    rsi,QWORD PTR [rbp-0x20]
  429d27:	mov    rax,QWORD PTR [rbp-0x48]
  429d2b:	mov    rdi,rax
  429d2e:	call   424bde <flatcc_verify_union_vector_field@@Base+0xe3c>
  429d33:	mov    QWORD PTR [rbp-0x50],rax
  429d37:	mov    rax,QWORD PTR [rbp-0x20]
  429d3b:	cmp    rax,QWORD PTR [rbp-0x50]
  429d3f:	jne    429d68 <flatcc_json_parser_union_type@@Base+0x10c>
  429d41:	mov    rax,QWORD PTR [rbp-0x28]
  429d45:	lea    rdi,[rax+0x15]
  429d49:	mov    rcx,QWORD PTR [rbp-0x78]
  429d4d:	mov    rdx,QWORD PTR [rbp-0x58]
  429d51:	mov    rsi,QWORD PTR [rbp-0x50]
  429d55:	mov    rax,QWORD PTR [rbp-0x48]
  429d59:	mov    r8,rdi
  429d5c:	mov    rdi,rax
  429d5f:	call   4250bf <flatcc_verify_union_vector_field@@Base+0x131d>
  429d64:	mov    QWORD PTR [rbp-0x50],rax
  429d68:	mov    rax,QWORD PTR [rbp-0x28]
  429d6c:	mov    rax,QWORD PTR [rax]
  429d6f:	test   rax,rax
  429d72:	jne    429da0 <flatcc_json_parser_union_type@@Base+0x144>
  429d74:	mov    rax,QWORD PTR [rbp-0x30]
  429d78:	mov    rdx,QWORD PTR [rax+0x8]
  429d7c:	mov    rax,QWORD PTR [rbp-0x28]
  429d80:	movzx  eax,BYTE PTR [rax+0x15]
  429d84:	test   al,al
  429d86:	setne  al
  429d89:	movzx  eax,al
  429d8c:	add    rdx,rax
  429d8f:	mov    rax,QWORD PTR [rbp-0x30]
  429d93:	mov    QWORD PTR [rax+0x8],rdx
  429d97:	mov    rax,QWORD PTR [rbp-0x50]
  429d9b:	jmp    429ea5 <flatcc_json_parser_union_type@@Base+0x249>
  429da0:	mov    rax,QWORD PTR [rbp-0x30]
  429da4:	mov    rax,QWORD PTR [rax+0x8]
  429da8:	test   rax,rax
  429dab:	jne    429dcc <flatcc_json_parser_union_type@@Base+0x170>
  429dad:	lea    rcx,[rip+0x1371c]        # 43d4d0 <flatcc_builder_padding_base@@Base+0x2550>
  429db4:	mov    edx,0x3c5
  429db9:	lea    rsi,[rip+0x131f8]        # 43cfb8 <flatcc_builder_padding_base@@Base+0x2038>
  429dc0:	lea    rdi,[rip+0x13255]        # 43d01c <flatcc_builder_padding_base@@Base+0x209c>
  429dc7:	call   4061b0 <__assert_fail@plt>
  429dcc:	mov    rax,QWORD PTR [rbp-0x30]
  429dd0:	mov    rax,QWORD PTR [rax+0x8]
  429dd4:	lea    rdx,[rax-0x1]
  429dd8:	mov    rax,QWORD PTR [rbp-0x30]
  429ddc:	mov    QWORD PTR [rax+0x8],rdx
  429de0:	mov    rax,QWORD PTR [rbp-0x48]
  429de4:	mov    eax,DWORD PTR [rax+0x18]
  429de7:	mov    DWORD PTR [rbp-0x34],eax
  429dea:	mov    rax,QWORD PTR [rbp-0x48]
  429dee:	mov    rax,QWORD PTR [rax+0x8]
  429df2:	mov    QWORD PTR [rbp-0x18],rax
  429df6:	mov    rax,QWORD PTR [rbp-0x28]
  429dfa:	mov    edx,DWORD PTR [rax+0x10]
  429dfd:	mov    rax,QWORD PTR [rbp-0x48]
  429e01:	mov    DWORD PTR [rax+0x18],edx
  429e04:	mov    rax,QWORD PTR [rbp-0x28]
  429e08:	mov    rdx,QWORD PTR [rax+0x8]
  429e0c:	mov    rax,QWORD PTR [rbp-0x48]
  429e10:	mov    QWORD PTR [rax+0x8],rdx
  429e14:	mov    rax,QWORD PTR [rbp-0x28]
  429e18:	movzx  eax,BYTE PTR [rax+0x15]
  429e1c:	mov    BYTE PTR [rbp-0x10],al
  429e1f:	mov    rax,QWORD PTR [rbp-0x28]
  429e23:	movzx  eax,BYTE PTR [rax+0x15]
  429e27:	movzx  ecx,al
  429e2a:	mov    rax,QWORD PTR [rbp-0x28]
  429e2e:	mov    rsi,QWORD PTR [rax]
  429e31:	lea    rax,[rbp-0x10]
  429e35:	lea    r8,[rax+0x4]
  429e39:	mov    rdx,QWORD PTR [rbp-0x58]
  429e3d:	mov    rdi,QWORD PTR [rbp-0x48]
  429e41:	mov    rax,QWORD PTR [rbp-0x80]
  429e45:	call   rax
  429e47:	cmp    QWORD PTR [rbp-0x58],rax
  429e4b:	jne    429e53 <flatcc_json_parser_union_type@@Base+0x1f7>
  429e4d:	mov    rax,QWORD PTR [rbp-0x58]
  429e51:	jmp    429ea5 <flatcc_json_parser_union_type@@Base+0x249>
  429e53:	movzx  ecx,WORD PTR [rbp-0x64]
  429e57:	mov    rax,QWORD PTR [rbp-0x48]
  429e5b:	mov    rax,QWORD PTR [rax]
  429e5e:	mov    rdx,QWORD PTR [rbp-0x10]
  429e62:	mov    esi,ecx
  429e64:	mov    rdi,rax
  429e67:	call   4202da <flatcc_builder_table_add_union@@Base>
  429e6c:	test   eax,eax
  429e6e:	je     429e8b <flatcc_json_parser_union_type@@Base+0x22f>
  429e70:	mov    rdx,QWORD PTR [rbp-0x58]
  429e74:	mov    rsi,QWORD PTR [rbp-0x50]
  429e78:	mov    rax,QWORD PTR [rbp-0x48]
  429e7c:	mov    ecx,0x1c
  429e81:	mov    rdi,rax
  429e84:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  429e89:	jmp    429ea5 <flatcc_json_parser_union_type@@Base+0x249>
  429e8b:	mov    rax,QWORD PTR [rbp-0x48]
  429e8f:	mov    edx,DWORD PTR [rbp-0x34]
  429e92:	mov    DWORD PTR [rax+0x18],edx
  429e95:	mov    rax,QWORD PTR [rbp-0x48]
  429e99:	mov    rdx,QWORD PTR [rbp-0x18]
  429e9d:	mov    QWORD PTR [rax+0x8],rdx
  429ea1:	mov    rax,QWORD PTR [rbp-0x50]
  429ea5:	mov    rdi,QWORD PTR [rbp-0x8]
  429ea9:	xor    rdi,QWORD PTR fs:0x28
  429eb2:	je     429eb9 <flatcc_json_parser_union_type@@Base+0x25d>
  429eb4:	call   4061a0 <__stack_chk_fail@plt>
  429eb9:	leave  
  429eba:	ret    
  429ebb:	endbr64 
  429ebf:	push   rbp
  429ec0:	mov    rbp,rsp
  429ec3:	sub    rsp,0x60
  429ec7:	mov    QWORD PTR [rbp-0x38],rdi
  429ecb:	mov    QWORD PTR [rbp-0x40],rsi
  429ecf:	mov    QWORD PTR [rbp-0x48],rdx
  429ed3:	mov    QWORD PTR [rbp-0x50],rcx
  429ed7:	mov    DWORD PTR [rbp-0x54],r8d
  429edb:	mov    eax,r9d
  429ede:	mov    WORD PTR [rbp-0x58],ax
  429ee2:	mov    rax,QWORD PTR [rbp+0x10]
  429ee6:	mov    QWORD PTR [rbp-0x60],rax
  429eea:	mov    rax,QWORD PTR fs:0x28
  429ef3:	mov    QWORD PTR [rbp-0x8],rax
  429ef7:	xor    eax,eax
  429ef9:	mov    DWORD PTR [rbp-0x28],0x0
  429f00:	mov    rax,QWORD PTR [rbp-0x38]
  429f04:	mov    rax,QWORD PTR [rax]
  429f07:	mov    rdi,rax
  429f0a:	call   41eb95 <flatcc_builder_start_offset_vector@@Base>
  429f0f:	test   eax,eax
  429f11:	jne    42a0a6 <flatcc_json_parser_union_type@@Base+0x44a>
  429f17:	lea    rcx,[rbp-0x24]
  429f1b:	mov    rdx,QWORD PTR [rbp-0x48]
  429f1f:	mov    rsi,QWORD PTR [rbp-0x40]
  429f23:	mov    rax,QWORD PTR [rbp-0x38]
  429f27:	mov    rdi,rax
  429f2a:	call   42447c <flatcc_verify_union_vector_field@@Base+0x6da>
  429f2f:	mov    QWORD PTR [rbp-0x40],rax
  429f33:	mov    QWORD PTR [rbp-0x20],0x0
  429f3b:	jmp    42a00b <flatcc_json_parser_union_type@@Base+0x3af>
  429f40:	mov    eax,DWORD PTR [rbp-0x54]
  429f43:	cmp    QWORD PTR [rbp-0x20],rax
  429f47:	jne    429f67 <flatcc_json_parser_union_type@@Base+0x30b>
  429f49:	mov    rdx,QWORD PTR [rbp-0x48]
  429f4d:	mov    rsi,QWORD PTR [rbp-0x40]
  429f51:	mov    rax,QWORD PTR [rbp-0x38]
  429f55:	mov    ecx,0x1e
  429f5a:	mov    rdi,rax
  429f5d:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  429f62:	jmp    42a0c9 <flatcc_json_parser_union_type@@Base+0x46d>
  429f67:	mov    rax,QWORD PTR [rbp-0x38]
  429f6b:	mov    rax,QWORD PTR [rax]
  429f6e:	mov    rdx,QWORD PTR [rbp-0x50]
  429f72:	mov    rsi,rdx
  429f75:	mov    rdi,rax
  429f78:	call   41d085 <flatcc_builder_get_user_frame_ptr@@Base>
  429f7d:	mov    QWORD PTR [rbp-0x18],rax
  429f81:	mov    rdx,QWORD PTR [rbp-0x18]
  429f85:	mov    rax,QWORD PTR [rbp-0x20]
  429f89:	add    rax,rdx
  429f8c:	movzx  eax,BYTE PTR [rax]
  429f8f:	movzx  ecx,al
  429f92:	lea    r8,[rbp-0x28]
  429f96:	mov    rdx,QWORD PTR [rbp-0x48]
  429f9a:	mov    rsi,QWORD PTR [rbp-0x40]
  429f9e:	mov    rdi,QWORD PTR [rbp-0x38]
  429fa2:	mov    rax,QWORD PTR [rbp-0x60]
  429fa6:	call   rax
  429fa8:	mov    QWORD PTR [rbp-0x40],rax
  429fac:	mov    rax,QWORD PTR [rbp-0x40]
  429fb0:	cmp    rax,QWORD PTR [rbp-0x48]
  429fb4:	jne    429fbf <flatcc_json_parser_union_type@@Base+0x363>
  429fb6:	mov    rax,QWORD PTR [rbp-0x40]
  429fba:	jmp    42a0c9 <flatcc_json_parser_union_type@@Base+0x46d>
  429fbf:	mov    rax,QWORD PTR [rbp-0x38]
  429fc3:	mov    rax,QWORD PTR [rax]
  429fc6:	mov    esi,0x1
  429fcb:	mov    rdi,rax
  429fce:	call   41e574 <flatcc_builder_extend_offset_vector@@Base>
  429fd3:	mov    QWORD PTR [rbp-0x10],rax
  429fd7:	cmp    QWORD PTR [rbp-0x10],0x0
  429fdc:	je     42a0a9 <flatcc_json_parser_union_type@@Base+0x44d>
  429fe2:	mov    edx,DWORD PTR [rbp-0x28]
  429fe5:	mov    rax,QWORD PTR [rbp-0x10]
  429fe9:	mov    DWORD PTR [rax],edx
  429feb:	lea    rcx,[rbp-0x24]
  429fef:	mov    rdx,QWORD PTR [rbp-0x48]
  429ff3:	mov    rsi,QWORD PTR [rbp-0x40]
  429ff7:	mov    rax,QWORD PTR [rbp-0x38]
  429ffb:	mov    rdi,rax
  429ffe:	call   424539 <flatcc_verify_union_vector_field@@Base+0x797>
  42a003:	mov    QWORD PTR [rbp-0x40],rax
  42a007:	inc    QWORD PTR [rbp-0x20]
  42a00b:	mov    eax,DWORD PTR [rbp-0x24]
  42a00e:	test   eax,eax
  42a010:	jne    429f40 <flatcc_json_parser_union_type@@Base+0x2e4>
  42a016:	mov    eax,DWORD PTR [rbp-0x54]
  42a019:	cmp    QWORD PTR [rbp-0x20],rax
  42a01d:	je     42a03d <flatcc_json_parser_union_type@@Base+0x3e1>
  42a01f:	mov    rdx,QWORD PTR [rbp-0x48]
  42a023:	mov    rsi,QWORD PTR [rbp-0x40]
  42a027:	mov    rax,QWORD PTR [rbp-0x38]
  42a02b:	mov    ecx,0x1e
  42a030:	mov    rdi,rax
  42a033:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  42a038:	jmp    42a0c9 <flatcc_json_parser_union_type@@Base+0x46d>
  42a03d:	mov    rax,QWORD PTR [rbp-0x38]
  42a041:	mov    rax,QWORD PTR [rax]
  42a044:	mov    rdx,QWORD PTR [rbp-0x50]
  42a048:	mov    rsi,rdx
  42a04b:	mov    rdi,rax
  42a04e:	call   41d085 <flatcc_builder_get_user_frame_ptr@@Base>
  42a053:	mov    QWORD PTR [rbp-0x18],rax
  42a057:	mov    rax,QWORD PTR [rbp-0x38]
  42a05b:	mov    rax,QWORD PTR [rax]
  42a05e:	mov    rdx,QWORD PTR [rbp-0x18]
  42a062:	mov    rsi,rdx
  42a065:	mov    rdi,rax
  42a068:	call   420218 <flatcc_builder_end_offset_vector_for_unions@@Base>
  42a06d:	mov    DWORD PTR [rbp-0x28],eax
  42a070:	mov    eax,DWORD PTR [rbp-0x28]
  42a073:	test   eax,eax
  42a075:	je     42a0ac <flatcc_json_parser_union_type@@Base+0x450>
  42a077:	movzx  edx,WORD PTR [rbp-0x58]
  42a07b:	mov    rax,QWORD PTR [rbp-0x38]
  42a07f:	mov    rax,QWORD PTR [rax]
  42a082:	mov    esi,edx
  42a084:	mov    rdi,rax
  42a087:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  42a08c:	mov    QWORD PTR [rbp-0x10],rax
  42a090:	cmp    QWORD PTR [rbp-0x10],0x0
  42a095:	je     42a0af <flatcc_json_parser_union_type@@Base+0x453>
  42a097:	mov    edx,DWORD PTR [rbp-0x28]
  42a09a:	mov    rax,QWORD PTR [rbp-0x10]
  42a09e:	mov    DWORD PTR [rax],edx
  42a0a0:	mov    rax,QWORD PTR [rbp-0x40]
  42a0a4:	jmp    42a0c9 <flatcc_json_parser_union_type@@Base+0x46d>
  42a0a6:	nop
  42a0a7:	jmp    42a0b0 <flatcc_json_parser_union_type@@Base+0x454>
  42a0a9:	nop
  42a0aa:	jmp    42a0b0 <flatcc_json_parser_union_type@@Base+0x454>
  42a0ac:	nop
  42a0ad:	jmp    42a0b0 <flatcc_json_parser_union_type@@Base+0x454>
  42a0af:	nop
  42a0b0:	mov    rdx,QWORD PTR [rbp-0x48]
  42a0b4:	mov    rsi,QWORD PTR [rbp-0x40]
  42a0b8:	mov    rax,QWORD PTR [rbp-0x38]
  42a0bc:	mov    ecx,0x21
  42a0c1:	mov    rdi,rax
  42a0c4:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  42a0c9:	mov    rcx,QWORD PTR [rbp-0x8]
  42a0cd:	xor    rcx,QWORD PTR fs:0x28
  42a0d6:	je     42a0dd <flatcc_json_parser_union_type@@Base+0x481>
  42a0d8:	call   4061a0 <__stack_chk_fail@plt>
  42a0dd:	leave  
  42a0de:	ret    

000000000042a0df <flatcc_json_parser_union_vector@@Base>:
  42a0df:	endbr64 
  42a0e3:	push   rbp
  42a0e4:	mov    rbp,rsp
  42a0e7:	sub    rsp,0x40
  42a0eb:	mov    QWORD PTR [rbp-0x18],rdi
  42a0ef:	mov    QWORD PTR [rbp-0x20],rsi
  42a0f3:	mov    QWORD PTR [rbp-0x28],rdx
  42a0f7:	mov    QWORD PTR [rbp-0x30],rcx
  42a0fb:	mov    eax,r8d
  42a0fe:	mov    QWORD PTR [rbp-0x40],r9
  42a102:	mov    WORD PTR [rbp-0x34],ax
  42a106:	mov    rax,QWORD PTR [rbp-0x18]
  42a10a:	mov    rax,QWORD PTR [rax]
  42a10d:	mov    rdx,QWORD PTR [rbp-0x40]
  42a111:	mov    rsi,rdx
  42a114:	mov    rdi,rax
  42a117:	call   41d085 <flatcc_builder_get_user_frame_ptr@@Base>
  42a11c:	mov    QWORD PTR [rbp-0x10],rax
  42a120:	mov    rax,QWORD PTR [rbp-0x10]
  42a124:	lea    rcx,[rax+0x10]
  42a128:	mov    rdx,QWORD PTR [rbp-0x30]
  42a12c:	mov    rax,rdx
  42a12f:	shl    rax,0x2
  42a133:	add    rax,rdx
  42a136:	shl    rax,0x3
  42a13a:	add    rax,rcx
  42a13d:	mov    QWORD PTR [rbp-0x8],rax
  42a141:	mov    rax,QWORD PTR [rbp-0x8]
  42a145:	mov    rax,QWORD PTR [rax]
  42a148:	test   rax,rax
  42a14b:	je     42a16b <flatcc_json_parser_union_vector@@Base+0x8c>
  42a14d:	mov    rdx,QWORD PTR [rbp-0x28]
  42a151:	mov    rsi,QWORD PTR [rbp-0x20]
  42a155:	mov    rax,QWORD PTR [rbp-0x18]
  42a159:	mov    ecx,0x1c
  42a15e:	mov    rdi,rax
  42a161:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  42a166:	jmp    42a229 <flatcc_json_parser_union_vector@@Base+0x14a>
  42a16b:	mov    rax,QWORD PTR [rbp-0x8]
  42a16f:	movzx  eax,BYTE PTR [rax+0x14]
  42a173:	test   al,al
  42a175:	jne    42a1d4 <flatcc_json_parser_union_vector@@Base+0xf5>
  42a177:	mov    rax,QWORD PTR [rbp-0x10]
  42a17b:	mov    rax,QWORD PTR [rax+0x8]
  42a17f:	lea    rdx,[rax+0x1]
  42a183:	mov    rax,QWORD PTR [rbp-0x10]
  42a187:	mov    QWORD PTR [rax+0x8],rdx
  42a18b:	mov    rax,QWORD PTR [rbp-0x18]
  42a18f:	mov    edx,DWORD PTR [rax+0x18]
  42a192:	mov    rax,QWORD PTR [rbp-0x8]
  42a196:	mov    DWORD PTR [rax+0x10],edx
  42a199:	mov    rax,QWORD PTR [rbp-0x18]
  42a19d:	mov    rdx,QWORD PTR [rax+0x8]
  42a1a1:	mov    rax,QWORD PTR [rbp-0x8]
  42a1a5:	mov    QWORD PTR [rax+0x8],rdx
  42a1a9:	mov    rax,QWORD PTR [rbp-0x8]
  42a1ad:	mov    rdx,QWORD PTR [rbp-0x20]
  42a1b1:	mov    QWORD PTR [rax],rdx
  42a1b4:	mov    rax,QWORD PTR [rbp-0x8]
  42a1b8:	mov    rcx,QWORD PTR [rax]
  42a1bb:	mov    rdx,QWORD PTR [rbp-0x28]
  42a1bf:	mov    rax,QWORD PTR [rbp-0x18]
  42a1c3:	mov    rsi,rcx
  42a1c6:	mov    rdi,rax
  42a1c9:	call   428dd2 <flatcc_json_parser_generic_json@@Base>
  42a1ce:	mov    QWORD PTR [rbp-0x20],rax
  42a1d2:	jmp    42a225 <flatcc_json_parser_union_vector@@Base+0x146>
  42a1d4:	mov    rax,QWORD PTR [rbp-0x10]
  42a1d8:	mov    rax,QWORD PTR [rax+0x8]
  42a1dc:	lea    rdx,[rax-0x1]
  42a1e0:	mov    rax,QWORD PTR [rbp-0x10]
  42a1e4:	mov    QWORD PTR [rax+0x8],rdx
  42a1e8:	movzx  r8d,WORD PTR [rbp-0x34]
  42a1ed:	mov    rax,QWORD PTR [rbp-0x8]
  42a1f1:	mov    edi,DWORD PTR [rax+0x18]
  42a1f4:	mov    rax,QWORD PTR [rbp-0x8]
  42a1f8:	mov    rcx,QWORD PTR [rax+0x20]
  42a1fc:	mov    rdx,QWORD PTR [rbp-0x28]
  42a200:	mov    rsi,QWORD PTR [rbp-0x20]
  42a204:	mov    rax,QWORD PTR [rbp-0x18]
  42a208:	sub    rsp,0x8
  42a20c:	push   QWORD PTR [rbp+0x10]
  42a20f:	mov    r9d,r8d
  42a212:	mov    r8d,edi
  42a215:	mov    rdi,rax
  42a218:	call   429ebb <flatcc_json_parser_union_type@@Base+0x25f>
  42a21d:	add    rsp,0x10
  42a221:	mov    QWORD PTR [rbp-0x20],rax
  42a225:	mov    rax,QWORD PTR [rbp-0x20]
  42a229:	leave  
  42a22a:	ret    

000000000042a22b <flatcc_json_parser_union_type_vector@@Base>:
  42a22b:	endbr64 
  42a22f:	push   rbp
  42a230:	mov    rbp,rsp
  42a233:	sub    rsp,0xc0
  42a23a:	mov    QWORD PTR [rbp-0x78],rdi
  42a23e:	mov    QWORD PTR [rbp-0x80],rsi
  42a242:	mov    QWORD PTR [rbp-0x88],rdx
  42a249:	mov    QWORD PTR [rbp-0x90],rcx
  42a250:	mov    eax,r8d
  42a253:	mov    QWORD PTR [rbp-0xa0],r9
  42a25a:	mov    WORD PTR [rbp-0x94],ax
  42a261:	mov    rax,QWORD PTR [rbp+0x10]
  42a265:	mov    QWORD PTR [rbp-0xa8],rax
  42a26c:	mov    rax,QWORD PTR [rbp+0x18]
  42a270:	mov    QWORD PTR [rbp-0xb0],rax
  42a277:	mov    rax,QWORD PTR [rbp+0x20]
  42a27b:	mov    QWORD PTR [rbp-0xb8],rax
  42a282:	mov    rax,QWORD PTR fs:0x28
  42a28b:	mov    QWORD PTR [rbp-0x8],rax
  42a28f:	xor    eax,eax
  42a291:	mov    rax,QWORD PTR [rbp-0x78]
  42a295:	mov    rax,QWORD PTR [rax]
  42a298:	mov    rdx,QWORD PTR [rbp-0xa0]
  42a29f:	mov    rsi,rdx
  42a2a2:	mov    rdi,rax
  42a2a5:	call   41d085 <flatcc_builder_get_user_frame_ptr@@Base>
  42a2aa:	mov    QWORD PTR [rbp-0x50],rax
  42a2ae:	mov    rax,QWORD PTR [rbp-0x50]
  42a2b2:	lea    rcx,[rax+0x10]
  42a2b6:	mov    rdx,QWORD PTR [rbp-0x90]
  42a2bd:	mov    rax,rdx
  42a2c0:	shl    rax,0x2
  42a2c4:	add    rax,rdx
  42a2c7:	shl    rax,0x3
  42a2cb:	add    rax,rcx
  42a2ce:	mov    QWORD PTR [rbp-0x48],rax
  42a2d2:	mov    rax,QWORD PTR [rbp-0x48]
  42a2d6:	movzx  eax,BYTE PTR [rax+0x14]
  42a2da:	test   al,al
  42a2dc:	je     42a2ff <flatcc_json_parser_union_type_vector@@Base+0xd4>
  42a2de:	mov    rdx,QWORD PTR [rbp-0x88]
  42a2e5:	mov    rsi,QWORD PTR [rbp-0x80]
  42a2e9:	mov    rax,QWORD PTR [rbp-0x78]
  42a2ed:	mov    ecx,0x1c
  42a2f2:	mov    rdi,rax
  42a2f5:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  42a2fa:	jmp    42a6c6 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  42a2ff:	mov    rax,QWORD PTR [rbp-0x48]
  42a303:	mov    BYTE PTR [rax+0x14],0x1
  42a307:	mov    rax,QWORD PTR [rbp-0x78]
  42a30b:	mov    rax,QWORD PTR [rax]
  42a30e:	mov    ecx,0xffffffff
  42a313:	mov    edx,0x1
  42a318:	mov    esi,0x1
  42a31d:	mov    rdi,rax
  42a320:	call   41eaf3 <flatcc_builder_start_vector@@Base>
  42a325:	test   eax,eax
  42a327:	jne    42a69d <flatcc_json_parser_union_type_vector@@Base+0x472>
  42a32d:	lea    rcx,[rbp-0x60]
  42a331:	mov    rdx,QWORD PTR [rbp-0x88]
  42a338:	mov    rsi,QWORD PTR [rbp-0x80]
  42a33c:	mov    rax,QWORD PTR [rbp-0x78]
  42a340:	mov    rdi,rax
  42a343:	call   42447c <flatcc_verify_union_vector_field@@Base+0x6da>
  42a348:	mov    QWORD PTR [rbp-0x80],rax
  42a34c:	jmp    42a472 <flatcc_json_parser_union_type_vector@@Base+0x247>
  42a351:	mov    rax,QWORD PTR [rbp-0x78]
  42a355:	mov    rax,QWORD PTR [rax]
  42a358:	mov    esi,0x1
  42a35d:	mov    rdi,rax
  42a360:	call   41e3a3 <flatcc_builder_extend_vector@@Base>
  42a365:	mov    QWORD PTR [rbp-0x40],rax
  42a369:	cmp    QWORD PTR [rbp-0x40],0x0
  42a36e:	je     42a6a0 <flatcc_json_parser_union_type_vector@@Base+0x475>
  42a374:	mov    rax,QWORD PTR [rbp-0x80]
  42a378:	mov    QWORD PTR [rbp-0x38],rax
  42a37c:	lea    rcx,[rbp-0x61]
  42a380:	mov    rdx,QWORD PTR [rbp-0x88]
  42a387:	mov    rsi,QWORD PTR [rbp-0x38]
  42a38b:	mov    rax,QWORD PTR [rbp-0x78]
  42a38f:	mov    rdi,rax
  42a392:	call   424bde <flatcc_verify_union_vector_field@@Base+0xe3c>
  42a397:	mov    QWORD PTR [rbp-0x80],rax
  42a39b:	mov    rax,QWORD PTR [rbp-0x38]
  42a39f:	cmp    rax,QWORD PTR [rbp-0x80]
  42a3a3:	jne    42a3f5 <flatcc_json_parser_union_type_vector@@Base+0x1ca>
  42a3a5:	mov    rax,QWORD PTR [rbp-0x80]
  42a3a9:	mov    QWORD PTR [rbp-0x38],rax
  42a3ad:	lea    rdi,[rbp-0x61]
  42a3b1:	mov    rcx,QWORD PTR [rbp-0xa8]
  42a3b8:	mov    rdx,QWORD PTR [rbp-0x88]
  42a3bf:	mov    rsi,QWORD PTR [rbp-0x38]
  42a3c3:	mov    rax,QWORD PTR [rbp-0x78]
  42a3c7:	mov    r8,rdi
  42a3ca:	mov    rdi,rax
  42a3cd:	call   4250bf <flatcc_verify_union_vector_field@@Base+0x131d>
  42a3d2:	mov    QWORD PTR [rbp-0x80],rax
  42a3d6:	mov    rax,QWORD PTR [rbp-0x80]
  42a3da:	cmp    rax,QWORD PTR [rbp-0x38]
  42a3de:	je     42a6a3 <flatcc_json_parser_union_type_vector@@Base+0x478>
  42a3e4:	mov    rax,QWORD PTR [rbp-0x80]
  42a3e8:	cmp    rax,QWORD PTR [rbp-0x88]
  42a3ef:	je     42a6a3 <flatcc_json_parser_union_type_vector@@Base+0x478>
  42a3f5:	movzx  eax,BYTE PTR [rbp-0x61]
  42a3f9:	movzx  edx,al
  42a3fc:	mov    rax,QWORD PTR [rbp-0xb8]
  42a403:	mov    edi,edx
  42a405:	call   rax
  42a407:	test   eax,eax
  42a409:	jne    42a43e <flatcc_json_parser_union_type_vector@@Base+0x213>
  42a40b:	mov    rax,QWORD PTR [rbp-0x78]
  42a40f:	mov    eax,DWORD PTR [rax+0x10]
  42a412:	and    eax,0x1
  42a415:	test   eax,eax
  42a417:	jne    42a43a <flatcc_json_parser_union_type_vector@@Base+0x20f>
  42a419:	mov    rdx,QWORD PTR [rbp-0x88]
  42a420:	mov    rsi,QWORD PTR [rbp-0x80]
  42a424:	mov    rax,QWORD PTR [rbp-0x78]
  42a428:	mov    ecx,0xf
  42a42d:	mov    rdi,rax
  42a430:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  42a435:	jmp    42a6c6 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  42a43a:	mov    BYTE PTR [rbp-0x61],0x0
  42a43e:	movzx  eax,BYTE PTR [rbp-0x61]
  42a442:	movzx  edx,al
  42a445:	mov    rax,QWORD PTR [rbp-0x40]
  42a449:	mov    esi,edx
  42a44b:	mov    rdi,rax
  42a44e:	call   423f95 <flatcc_verify_union_vector_field@@Base+0x1f3>
  42a453:	lea    rcx,[rbp-0x60]
  42a457:	mov    rdx,QWORD PTR [rbp-0x88]
  42a45e:	mov    rsi,QWORD PTR [rbp-0x80]
  42a462:	mov    rax,QWORD PTR [rbp-0x78]
  42a466:	mov    rdi,rax
  42a469:	call   424539 <flatcc_verify_union_vector_field@@Base+0x797>
  42a46e:	mov    QWORD PTR [rbp-0x80],rax
  42a472:	mov    eax,DWORD PTR [rbp-0x60]
  42a475:	test   eax,eax
  42a477:	jne    42a351 <flatcc_json_parser_union_type_vector@@Base+0x126>
  42a47d:	mov    rax,QWORD PTR [rbp-0x78]
  42a481:	mov    rax,QWORD PTR [rax]
  42a484:	mov    rdi,rax
  42a487:	call   41fd9d <flatcc_builder_vector_count@@Base>
  42a48c:	mov    DWORD PTR [rbp-0x5c],eax
  42a48f:	mov    rax,QWORD PTR [rbp-0x48]
  42a493:	mov    edx,DWORD PTR [rbp-0x5c]
  42a496:	mov    DWORD PTR [rax+0x18],edx
  42a499:	mov    eax,DWORD PTR [rbp-0x5c]
  42a49c:	mov    QWORD PTR [rbp-0x30],rax
  42a4a0:	mov    rax,QWORD PTR [rbp-0x78]
  42a4a4:	mov    rax,QWORD PTR [rax]
  42a4a7:	mov    rdx,QWORD PTR [rbp-0x30]
  42a4ab:	mov    rsi,rdx
  42a4ae:	mov    rdi,rax
  42a4b1:	call   41cea0 <flatcc_builder_enter_user_frame@@Base>
  42a4b6:	mov    QWORD PTR [rbp-0x28],rax
  42a4ba:	mov    rax,QWORD PTR [rbp-0x78]
  42a4be:	mov    rax,QWORD PTR [rax]
  42a4c1:	mov    rdx,QWORD PTR [rbp-0x28]
  42a4c5:	mov    rsi,rdx
  42a4c8:	mov    rdi,rax
  42a4cb:	call   41d085 <flatcc_builder_get_user_frame_ptr@@Base>
  42a4d0:	mov    QWORD PTR [rbp-0x20],rax
  42a4d4:	mov    rax,QWORD PTR [rbp-0x78]
  42a4d8:	mov    rax,QWORD PTR [rax]
  42a4db:	mov    rdi,rax
  42a4de:	call   41fdb8 <flatcc_builder_vector_edit@@Base>
  42a4e3:	mov    rcx,rax
  42a4e6:	mov    rdx,QWORD PTR [rbp-0x30]
  42a4ea:	mov    rax,QWORD PTR [rbp-0x20]
  42a4ee:	mov    rsi,rcx
  42a4f1:	mov    rdi,rax
  42a4f4:	call   406220 <memcpy@plt>
  42a4f9:	mov    rax,QWORD PTR [rbp-0x78]
  42a4fd:	mov    rax,QWORD PTR [rax]
  42a500:	mov    rdi,rax
  42a503:	call   41fce8 <flatcc_builder_end_vector@@Base>
  42a508:	mov    DWORD PTR [rbp-0x58],eax
  42a50b:	cmp    DWORD PTR [rbp-0x58],0x0
  42a50f:	je     42a6a6 <flatcc_json_parser_union_type_vector@@Base+0x47b>
  42a515:	movzx  eax,WORD PTR [rbp-0x94]
  42a51c:	lea    edx,[rax-0x1]
  42a51f:	mov    rax,QWORD PTR [rbp-0x78]
  42a523:	mov    rax,QWORD PTR [rax]
  42a526:	mov    esi,edx
  42a528:	mov    rdi,rax
  42a52b:	call   4210cb <flatcc_builder_table_add_offset@@Base>
  42a530:	mov    QWORD PTR [rbp-0x18],rax
  42a534:	cmp    QWORD PTR [rbp-0x18],0x0
  42a539:	je     42a6a9 <flatcc_json_parser_union_type_vector@@Base+0x47e>
  42a53f:	mov    rax,QWORD PTR [rbp-0x18]
  42a543:	mov    edx,DWORD PTR [rbp-0x58]
  42a546:	mov    DWORD PTR [rax],edx
  42a548:	mov    rax,QWORD PTR [rbp-0x78]
  42a54c:	mov    rax,QWORD PTR [rax]
  42a54f:	mov    rdx,QWORD PTR [rbp-0xa0]
  42a556:	mov    rsi,rdx
  42a559:	mov    rdi,rax
  42a55c:	call   41d085 <flatcc_builder_get_user_frame_ptr@@Base>
  42a561:	mov    QWORD PTR [rbp-0x50],rax
  42a565:	mov    rax,QWORD PTR [rbp-0x50]
  42a569:	lea    rcx,[rax+0x10]
  42a56d:	mov    rdx,QWORD PTR [rbp-0x90]
  42a574:	mov    rax,rdx
  42a577:	shl    rax,0x2
  42a57b:	add    rax,rdx
  42a57e:	shl    rax,0x3
  42a582:	add    rax,rcx
  42a585:	mov    QWORD PTR [rbp-0x48],rax
  42a589:	mov    rax,QWORD PTR [rbp-0x48]
  42a58d:	mov    rdx,QWORD PTR [rbp-0x28]
  42a591:	mov    QWORD PTR [rax+0x20],rdx
  42a595:	mov    rax,QWORD PTR [rbp-0x48]
  42a599:	mov    rax,QWORD PTR [rax]
  42a59c:	test   rax,rax
  42a59f:	jne    42a5be <flatcc_json_parser_union_type_vector@@Base+0x393>
  42a5a1:	mov    rax,QWORD PTR [rbp-0x50]
  42a5a5:	mov    rax,QWORD PTR [rax+0x8]
  42a5a9:	lea    rdx,[rax+0x1]
  42a5ad:	mov    rax,QWORD PTR [rbp-0x50]
  42a5b1:	mov    QWORD PTR [rax+0x8],rdx
  42a5b5:	mov    rax,QWORD PTR [rbp-0x80]
  42a5b9:	jmp    42a6c6 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  42a5be:	mov    rax,QWORD PTR [rbp-0x50]
  42a5c2:	mov    rax,QWORD PTR [rax+0x8]
  42a5c6:	test   rax,rax
  42a5c9:	jne    42a5ea <flatcc_json_parser_union_type_vector@@Base+0x3bf>
  42a5cb:	lea    rcx,[rip+0x12f2e]        # 43d500 <flatcc_builder_padding_base@@Base+0x2580>
  42a5d2:	mov    edx,0x462
  42a5d7:	lea    rsi,[rip+0x129da]        # 43cfb8 <flatcc_builder_padding_base@@Base+0x2038>
  42a5de:	lea    rdi,[rip+0x12a37]        # 43d01c <flatcc_builder_padding_base@@Base+0x209c>
  42a5e5:	call   4061b0 <__assert_fail@plt>
  42a5ea:	mov    rax,QWORD PTR [rbp-0x50]
  42a5ee:	mov    rax,QWORD PTR [rax+0x8]
  42a5f2:	lea    rdx,[rax-0x1]
  42a5f6:	mov    rax,QWORD PTR [rbp-0x50]
  42a5fa:	mov    QWORD PTR [rax+0x8],rdx
  42a5fe:	mov    rax,QWORD PTR [rbp-0x78]
  42a602:	mov    eax,DWORD PTR [rax+0x18]
  42a605:	mov    DWORD PTR [rbp-0x54],eax
  42a608:	mov    rax,QWORD PTR [rbp-0x78]
  42a60c:	mov    rax,QWORD PTR [rax+0x8]
  42a610:	mov    QWORD PTR [rbp-0x10],rax
  42a614:	mov    rax,QWORD PTR [rbp-0x48]
  42a618:	mov    edx,DWORD PTR [rax+0x10]
  42a61b:	mov    rax,QWORD PTR [rbp-0x78]
  42a61f:	mov    DWORD PTR [rax+0x18],edx
  42a622:	mov    rax,QWORD PTR [rbp-0x48]
  42a626:	mov    rdx,QWORD PTR [rax+0x8]
  42a62a:	mov    rax,QWORD PTR [rbp-0x78]
  42a62e:	mov    QWORD PTR [rax+0x8],rdx
  42a632:	movzx  r8d,WORD PTR [rbp-0x94]
  42a63a:	mov    rax,QWORD PTR [rbp-0x48]
  42a63e:	mov    rsi,QWORD PTR [rax]
  42a641:	mov    edi,DWORD PTR [rbp-0x5c]
  42a644:	mov    rcx,QWORD PTR [rbp-0x28]
  42a648:	mov    rdx,QWORD PTR [rbp-0x88]
  42a64f:	mov    rax,QWORD PTR [rbp-0x78]
  42a653:	sub    rsp,0x8
  42a657:	push   QWORD PTR [rbp-0xb0]
  42a65d:	mov    r9d,r8d
  42a660:	mov    r8d,edi
  42a663:	mov    rdi,rax
  42a666:	call   429ebb <flatcc_json_parser_union_type@@Base+0x25f>
  42a66b:	add    rsp,0x10
  42a66f:	cmp    QWORD PTR [rbp-0x88],rax
  42a676:	jne    42a681 <flatcc_json_parser_union_type_vector@@Base+0x456>
  42a678:	mov    rax,QWORD PTR [rbp-0x88]
  42a67f:	jmp    42a6c6 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  42a681:	mov    rax,QWORD PTR [rbp-0x78]
  42a685:	mov    edx,DWORD PTR [rbp-0x54]
  42a688:	mov    DWORD PTR [rax+0x18],edx
  42a68b:	mov    rax,QWORD PTR [rbp-0x78]
  42a68f:	mov    rdx,QWORD PTR [rbp-0x10]
  42a693:	mov    QWORD PTR [rax+0x8],rdx
  42a697:	mov    rax,QWORD PTR [rbp-0x80]
  42a69b:	jmp    42a6c6 <flatcc_json_parser_union_type_vector@@Base+0x49b>
  42a69d:	nop
  42a69e:	jmp    42a6aa <flatcc_json_parser_union_type_vector@@Base+0x47f>
  42a6a0:	nop
  42a6a1:	jmp    42a6aa <flatcc_json_parser_union_type_vector@@Base+0x47f>
  42a6a3:	nop
  42a6a4:	jmp    42a6aa <flatcc_json_parser_union_type_vector@@Base+0x47f>
  42a6a6:	nop
  42a6a7:	jmp    42a6aa <flatcc_json_parser_union_type_vector@@Base+0x47f>
  42a6a9:	nop
  42a6aa:	mov    rdx,QWORD PTR [rbp-0x88]
  42a6b1:	mov    rsi,QWORD PTR [rbp-0x80]
  42a6b5:	mov    rax,QWORD PTR [rbp-0x78]
  42a6b9:	mov    ecx,0x21
  42a6be:	mov    rdi,rax
  42a6c1:	call   427cf3 <flatcc_json_parser_set_error@@Base>
  42a6c6:	mov    rcx,QWORD PTR [rbp-0x8]
  42a6ca:	xor    rcx,QWORD PTR fs:0x28
  42a6d3:	je     42a6da <flatcc_json_parser_union_type_vector@@Base+0x4af>
  42a6d5:	call   4061a0 <__stack_chk_fail@plt>
  42a6da:	leave  
  42a6db:	ret    

000000000042a6dc <flatcc_json_parser_table_as_root@@Base>:
  42a6dc:	endbr64 
  42a6e0:	push   rbp
  42a6e1:	mov    rbp,rsp
  42a6e4:	sub    rsp,0xa0
  42a6eb:	mov    QWORD PTR [rbp-0x68],rdi
  42a6ef:	mov    QWORD PTR [rbp-0x70],rsi
  42a6f3:	mov    QWORD PTR [rbp-0x78],rdx
  42a6f7:	mov    QWORD PTR [rbp-0x80],rcx
  42a6fb:	mov    DWORD PTR [rbp-0x84],r8d
  42a702:	mov    QWORD PTR [rbp-0x90],r9
  42a709:	mov    rax,QWORD PTR [rbp+0x10]
  42a70d:	mov    QWORD PTR [rbp-0x98],rax
  42a714:	mov    rax,QWORD PTR fs:0x28
  42a71d:	mov    QWORD PTR [rbp-0x8],rax
  42a721:	xor    eax,eax
  42a723:	mov    eax,DWORD PTR [rbp-0x84]
  42a729:	sar    eax,1
  42a72b:	and    eax,0x2
  42a72e:	mov    DWORD PTR [rbp-0x54],eax
  42a731:	cmp    QWORD PTR [rbp-0x70],0x0
  42a736:	jne    42a73e <flatcc_json_parser_table_as_root@@Base+0x62>
  42a738:	lea    rax,[rbp-0x50]
  42a73c:	jmp    42a742 <flatcc_json_parser_table_as_root@@Base+0x66>
  42a73e:	mov    rax,QWORD PTR [rbp-0x70]
  42a742:	mov    QWORD PTR [rbp-0x70],rax
  42a746:	mov    rdx,QWORD PTR [rbp-0x78]
  42a74a:	mov    rax,QWORD PTR [rbp-0x80]
  42a74e:	lea    rcx,[rdx+rax*1]
  42a752:	mov    edi,DWORD PTR [rbp-0x84]
  42a758:	mov    rdx,QWORD PTR [rbp-0x78]
  42a75c:	mov    rsi,QWORD PTR [rbp-0x68]
  42a760:	mov    rax,QWORD PTR [rbp-0x70]
  42a764:	mov    r8d,edi
  42a767:	mov    rdi,rax
  42a76a:	call   423fba <flatcc_verify_union_vector_field@@Base+0x218>
  42a76f:	mov    edx,DWORD PTR [rbp-0x54]
  42a772:	mov    rsi,QWORD PTR [rbp-0x90]
  42a779:	mov    rax,QWORD PTR [rbp-0x68]
  42a77d:	mov    ecx,edx
  42a77f:	mov    edx,0x0
  42a784:	mov    rdi,rax
  42a787:	call   41df7c <flatcc_builder_start_buffer@@Base>
  42a78c:	test   eax,eax
  42a78e:	je     42a797 <flatcc_json_parser_table_as_root@@Base+0xbb>
  42a790:	mov    eax,0xffffffff
  42a795:	jmp    42a7ff <flatcc_json_parser_table_as_root@@Base+0x123>
  42a797:	mov    rdx,QWORD PTR [rbp-0x78]
  42a79b:	mov    rax,QWORD PTR [rbp-0x80]
  42a79f:	lea    r8,[rdx+rax*1]
  42a7a3:	lea    rdx,[rbp-0x58]
  42a7a7:	mov    rsi,QWORD PTR [rbp-0x78]
  42a7ab:	mov    rdi,QWORD PTR [rbp-0x70]
  42a7af:	mov    rax,QWORD PTR [rbp-0x98]
  42a7b6:	mov    rcx,rdx
  42a7b9:	mov    rdx,r8
  42a7bc:	call   rax
  42a7be:	mov    rax,QWORD PTR [rbp-0x70]
  42a7c2:	mov    eax,DWORD PTR [rax+0x20]
  42a7c5:	test   eax,eax
  42a7c7:	je     42a7d2 <flatcc_json_parser_table_as_root@@Base+0xf6>
  42a7c9:	mov    rax,QWORD PTR [rbp-0x70]
  42a7cd:	mov    eax,DWORD PTR [rax+0x20]
  42a7d0:	jmp    42a7ff <flatcc_json_parser_table_as_root@@Base+0x123>
  42a7d2:	mov    edx,DWORD PTR [rbp-0x58]
  42a7d5:	mov    rax,QWORD PTR [rbp-0x68]
  42a7d9:	mov    esi,edx
  42a7db:	mov    rdi,rax
  42a7de:	call   41e0c9 <flatcc_builder_end_buffer@@Base>
  42a7e3:	test   eax,eax
  42a7e5:	jne    42a7ee <flatcc_json_parser_table_as_root@@Base+0x112>
  42a7e7:	mov    eax,0xffffffff
  42a7ec:	jmp    42a7ff <flatcc_json_parser_table_as_root@@Base+0x123>
  42a7ee:	mov    rax,QWORD PTR [rbp-0x70]
  42a7f2:	mov    rdx,QWORD PTR [rbp-0x78]
  42a7f6:	mov    QWORD PTR [rax+0x40],rdx
  42a7fa:	mov    eax,0x0
  42a7ff:	mov    rcx,QWORD PTR [rbp-0x8]
  42a803:	xor    rcx,QWORD PTR fs:0x28
  42a80c:	je     42a813 <flatcc_json_parser_table_as_root@@Base+0x137>
  42a80e:	call   4061a0 <__stack_chk_fail@plt>
  42a813:	leave  
  42a814:	ret    

000000000042a815 <flatcc_json_parser_struct_as_root@@Base>:
  42a815:	endbr64 
  42a819:	push   rbp
  42a81a:	mov    rbp,rsp
  42a81d:	sub    rsp,0xa0
  42a824:	mov    QWORD PTR [rbp-0x68],rdi
  42a828:	mov    QWORD PTR [rbp-0x70],rsi
  42a82c:	mov    QWORD PTR [rbp-0x78],rdx
  42a830:	mov    QWORD PTR [rbp-0x80],rcx
  42a834:	mov    DWORD PTR [rbp-0x84],r8d
  42a83b:	mov    QWORD PTR [rbp-0x90],r9
  42a842:	mov    rax,QWORD PTR [rbp+0x10]
  42a846:	mov    QWORD PTR [rbp-0x98],rax
  42a84d:	mov    rax,QWORD PTR fs:0x28
  42a856:	mov    QWORD PTR [rbp-0x8],rax
  42a85a:	xor    eax,eax
  42a85c:	mov    eax,DWORD PTR [rbp-0x84]
  42a862:	sar    eax,1
  42a864:	and    eax,0x2
  42a867:	mov    DWORD PTR [rbp-0x54],eax
  42a86a:	cmp    QWORD PTR [rbp-0x70],0x0
  42a86f:	jne    42a877 <flatcc_json_parser_struct_as_root@@Base+0x62>
  42a871:	lea    rax,[rbp-0x50]
  42a875:	jmp    42a87b <flatcc_json_parser_struct_as_root@@Base+0x66>
  42a877:	mov    rax,QWORD PTR [rbp-0x70]
  42a87b:	mov    QWORD PTR [rbp-0x70],rax
  42a87f:	mov    rdx,QWORD PTR [rbp-0x78]
  42a883:	mov    rax,QWORD PTR [rbp-0x80]
  42a887:	lea    rcx,[rdx+rax*1]
  42a88b:	mov    edi,DWORD PTR [rbp-0x84]
  42a891:	mov    rdx,QWORD PTR [rbp-0x78]
  42a895:	mov    rsi,QWORD PTR [rbp-0x68]
  42a899:	mov    rax,QWORD PTR [rbp-0x70]
  42a89d:	mov    r8d,edi
  42a8a0:	mov    rdi,rax
  42a8a3:	call   423fba <flatcc_verify_union_vector_field@@Base+0x218>
  42a8a8:	mov    edx,DWORD PTR [rbp-0x54]
  42a8ab:	mov    rsi,QWORD PTR [rbp-0x90]
  42a8b2:	mov    rax,QWORD PTR [rbp-0x68]
  42a8b6:	mov    ecx,edx
  42a8b8:	mov    edx,0x0
  42a8bd:	mov    rdi,rax
  42a8c0:	call   41df7c <flatcc_builder_start_buffer@@Base>
  42a8c5:	test   eax,eax
  42a8c7:	je     42a8d0 <flatcc_json_parser_struct_as_root@@Base+0xbb>
  42a8c9:	mov    eax,0xffffffff
  42a8ce:	jmp    42a938 <flatcc_json_parser_struct_as_root@@Base+0x123>
  42a8d0:	mov    rdx,QWORD PTR [rbp-0x78]
  42a8d4:	mov    rax,QWORD PTR [rbp-0x80]
  42a8d8:	lea    r8,[rdx+rax*1]
  42a8dc:	lea    rdx,[rbp-0x58]
  42a8e0:	mov    rsi,QWORD PTR [rbp-0x78]
  42a8e4:	mov    rdi,QWORD PTR [rbp-0x70]
  42a8e8:	mov    rax,QWORD PTR [rbp-0x98]
  42a8ef:	mov    rcx,rdx
  42a8f2:	mov    rdx,r8
  42a8f5:	call   rax
  42a8f7:	mov    rax,QWORD PTR [rbp-0x70]
  42a8fb:	mov    eax,DWORD PTR [rax+0x20]
  42a8fe:	test   eax,eax
  42a900:	je     42a90b <flatcc_json_parser_struct_as_root@@Base+0xf6>
  42a902:	mov    rax,QWORD PTR [rbp-0x70]
  42a906:	mov    eax,DWORD PTR [rax+0x20]
  42a909:	jmp    42a938 <flatcc_json_parser_struct_as_root@@Base+0x123>
  42a90b:	mov    edx,DWORD PTR [rbp-0x58]
  42a90e:	mov    rax,QWORD PTR [rbp-0x68]
  42a912:	mov    esi,edx
  42a914:	mov    rdi,rax
  42a917:	call   41e0c9 <flatcc_builder_end_buffer@@Base>
  42a91c:	test   eax,eax
  42a91e:	jne    42a927 <flatcc_json_parser_struct_as_root@@Base+0x112>
  42a920:	mov    eax,0xffffffff
  42a925:	jmp    42a938 <flatcc_json_parser_struct_as_root@@Base+0x123>
  42a927:	mov    rax,QWORD PTR [rbp-0x70]
  42a92b:	mov    rdx,QWORD PTR [rbp-0x78]
  42a92f:	mov    QWORD PTR [rax+0x40],rdx
  42a933:	mov    eax,0x0
  42a938:	mov    rcx,QWORD PTR [rbp-0x8]
  42a93c:	xor    rcx,QWORD PTR fs:0x28
  42a945:	je     42a94c <flatcc_json_parser_struct_as_root@@Base+0x137>
  42a947:	call   4061a0 <__stack_chk_fail@plt>
  42a94c:	leave  
  42a94d:	ret    
  42a94e:	push   rbp
  42a94f:	mov    rbp,rsp
  42a952:	mov    eax,edi
  42a954:	mov    BYTE PTR [rbp-0x4],al
  42a957:	movzx  eax,BYTE PTR [rbp-0x4]
  42a95b:	pop    rbp
  42a95c:	ret    
  42a95d:	push   rbp
  42a95e:	mov    rbp,rsp
  42a961:	sub    rsp,0x8
  42a965:	mov    QWORD PTR [rbp-0x8],rdi
  42a969:	mov    rax,QWORD PTR [rbp-0x8]
  42a96d:	movzx  eax,BYTE PTR [rax]
  42a970:	movzx  eax,al
  42a973:	mov    edi,eax
  42a975:	call   42a94e <flatcc_json_parser_struct_as_root@@Base+0x139>
  42a97a:	leave  
  42a97b:	ret    
  42a97c:	push   rbp
  42a97d:	mov    rbp,rsp
  42a980:	mov    eax,edi
  42a982:	mov    WORD PTR [rbp-0x4],ax
  42a986:	movzx  eax,WORD PTR [rbp-0x4]
  42a98a:	pop    rbp
  42a98b:	ret    
  42a98c:	push   rbp
  42a98d:	mov    rbp,rsp
  42a990:	sub    rsp,0x8
  42a994:	mov    QWORD PTR [rbp-0x8],rdi
  42a998:	mov    rax,QWORD PTR [rbp-0x8]
  42a99c:	movzx  eax,WORD PTR [rax]
  42a99f:	movzx  eax,ax
  42a9a2:	mov    edi,eax
  42a9a4:	call   42a97c <flatcc_json_parser_struct_as_root@@Base+0x167>
  42a9a9:	leave  
  42a9aa:	ret    
  42a9ab:	push   rbp
  42a9ac:	mov    rbp,rsp
  42a9af:	mov    DWORD PTR [rbp-0x4],edi
  42a9b2:	mov    eax,DWORD PTR [rbp-0x4]
  42a9b5:	pop    rbp
  42a9b6:	ret    
  42a9b7:	push   rbp
  42a9b8:	mov    rbp,rsp
  42a9bb:	sub    rsp,0x8
  42a9bf:	mov    QWORD PTR [rbp-0x8],rdi
  42a9c3:	mov    rax,QWORD PTR [rbp-0x8]
  42a9c7:	mov    eax,DWORD PTR [rax]
  42a9c9:	mov    edi,eax
  42a9cb:	call   42a9ab <flatcc_json_parser_struct_as_root@@Base+0x196>
  42a9d0:	leave  
  42a9d1:	ret    
  42a9d2:	push   rbp
  42a9d3:	mov    rbp,rsp
  42a9d6:	mov    QWORD PTR [rbp-0x8],rdi
  42a9da:	mov    rax,QWORD PTR [rbp-0x8]
  42a9de:	pop    rbp
  42a9df:	ret    
  42a9e0:	push   rbp
  42a9e1:	mov    rbp,rsp
  42a9e4:	sub    rsp,0x8
  42a9e8:	mov    QWORD PTR [rbp-0x8],rdi
  42a9ec:	mov    rax,QWORD PTR [rbp-0x8]
  42a9f0:	mov    rax,QWORD PTR [rax]
  42a9f3:	mov    rdi,rax
  42a9f6:	call   42a9d2 <flatcc_json_parser_struct_as_root@@Base+0x1bd>
  42a9fb:	leave  
  42a9fc:	ret    
  42a9fd:	push   rbp
  42a9fe:	mov    rbp,rsp
  42aa01:	mov    eax,edi
  42aa03:	mov    BYTE PTR [rbp-0x4],al
  42aa06:	movzx  eax,BYTE PTR [rbp-0x4]
  42aa0a:	pop    rbp
  42aa0b:	ret    
  42aa0c:	push   rbp
  42aa0d:	mov    rbp,rsp
  42aa10:	sub    rsp,0x8
  42aa14:	mov    QWORD PTR [rbp-0x8],rdi
  42aa18:	mov    rax,QWORD PTR [rbp-0x8]
  42aa1c:	movzx  eax,BYTE PTR [rax]
  42aa1f:	movsx  eax,al
  42aa22:	mov    edi,eax
  42aa24:	call   42a9fd <flatcc_json_parser_struct_as_root@@Base+0x1e8>
  42aa29:	leave  
  42aa2a:	ret    
  42aa2b:	push   rbp
  42aa2c:	mov    rbp,rsp
  42aa2f:	mov    eax,edi
  42aa31:	mov    WORD PTR [rbp-0x4],ax
  42aa35:	movzx  eax,WORD PTR [rbp-0x4]
  42aa39:	pop    rbp
  42aa3a:	ret    
  42aa3b:	push   rbp
  42aa3c:	mov    rbp,rsp
  42aa3f:	sub    rsp,0x8
  42aa43:	mov    QWORD PTR [rbp-0x8],rdi
  42aa47:	mov    rax,QWORD PTR [rbp-0x8]
  42aa4b:	movzx  eax,WORD PTR [rax]
  42aa4e:	cwde   
  42aa4f:	mov    edi,eax
  42aa51:	call   42aa2b <flatcc_json_parser_struct_as_root@@Base+0x216>
  42aa56:	leave  
  42aa57:	ret    
  42aa58:	push   rbp
  42aa59:	mov    rbp,rsp
  42aa5c:	mov    DWORD PTR [rbp-0x4],edi
  42aa5f:	mov    eax,DWORD PTR [rbp-0x4]
  42aa62:	pop    rbp
  42aa63:	ret    
  42aa64:	push   rbp
  42aa65:	mov    rbp,rsp
  42aa68:	sub    rsp,0x8
  42aa6c:	mov    QWORD PTR [rbp-0x8],rdi
  42aa70:	mov    rax,QWORD PTR [rbp-0x8]
  42aa74:	mov    eax,DWORD PTR [rax]
  42aa76:	mov    edi,eax
  42aa78:	call   42aa58 <flatcc_json_parser_struct_as_root@@Base+0x243>
  42aa7d:	leave  
  42aa7e:	ret    
  42aa7f:	push   rbp
  42aa80:	mov    rbp,rsp
  42aa83:	mov    QWORD PTR [rbp-0x8],rdi
  42aa87:	mov    rax,QWORD PTR [rbp-0x8]
  42aa8b:	pop    rbp
  42aa8c:	ret    
  42aa8d:	push   rbp
  42aa8e:	mov    rbp,rsp
  42aa91:	sub    rsp,0x8
  42aa95:	mov    QWORD PTR [rbp-0x8],rdi
  42aa99:	mov    rax,QWORD PTR [rbp-0x8]
  42aa9d:	mov    rax,QWORD PTR [rax]
  42aaa0:	mov    rdi,rax
  42aaa3:	call   42aa7f <flatcc_json_parser_struct_as_root@@Base+0x26a>
  42aaa8:	leave  
  42aaa9:	ret    
  42aaaa:	push   rbp
  42aaab:	mov    rbp,rsp
  42aaae:	vmovss DWORD PTR [rbp-0x14],xmm0
  42aab3:	vmovss xmm0,DWORD PTR [rbp-0x14]
  42aab8:	vmovss DWORD PTR [rbp-0x4],xmm0
  42aabd:	mov    eax,DWORD PTR [rbp-0x4]
  42aac0:	mov    DWORD PTR [rbp-0x4],eax
  42aac3:	vmovss xmm0,DWORD PTR [rbp-0x4]
  42aac8:	pop    rbp
  42aac9:	ret    
  42aaca:	push   rbp
  42aacb:	mov    rbp,rsp
  42aace:	sub    rsp,0x8
  42aad2:	mov    QWORD PTR [rbp-0x8],rdi
  42aad6:	mov    rax,QWORD PTR [rbp-0x8]
  42aada:	mov    eax,DWORD PTR [rax]
  42aadc:	vmovd  xmm0,eax
  42aae0:	call   42aaaa <flatcc_json_parser_struct_as_root@@Base+0x295>
  42aae5:	leave  
  42aae6:	ret    
  42aae7:	push   rbp
  42aae8:	mov    rbp,rsp
  42aaeb:	vmovsd QWORD PTR [rbp-0x18],xmm0
  42aaf0:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  42aaf5:	vmovsd QWORD PTR [rbp-0x8],xmm0
  42aafa:	mov    rax,QWORD PTR [rbp-0x8]
  42aafe:	mov    QWORD PTR [rbp-0x8],rax
  42ab02:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  42ab07:	vmovq  rax,xmm0
  42ab0c:	vmovq  xmm0,rax
  42ab11:	pop    rbp
  42ab12:	ret    
  42ab13:	push   rbp
  42ab14:	mov    rbp,rsp
  42ab17:	sub    rsp,0x8
  42ab1b:	mov    QWORD PTR [rbp-0x8],rdi
  42ab1f:	mov    rax,QWORD PTR [rbp-0x8]
  42ab23:	mov    rax,QWORD PTR [rax]
  42ab26:	vmovq  xmm0,rax
  42ab2b:	call   42aae7 <flatcc_json_parser_struct_as_root@@Base+0x2d2>
  42ab30:	vmovq  rax,xmm0
  42ab35:	vmovq  xmm0,rax
  42ab3a:	leave  
  42ab3b:	ret    
  42ab3c:	push   rbp
  42ab3d:	mov    rbp,rsp
  42ab40:	mov    eax,edi
  42ab42:	mov    BYTE PTR [rbp-0x4],al
  42ab45:	movzx  eax,BYTE PTR [rbp-0x4]
  42ab49:	pop    rbp
  42ab4a:	ret    
  42ab4b:	push   rbp
  42ab4c:	mov    rbp,rsp
  42ab4f:	sub    rsp,0x8
  42ab53:	mov    QWORD PTR [rbp-0x8],rdi
  42ab57:	mov    rax,QWORD PTR [rbp-0x8]
  42ab5b:	movzx  eax,BYTE PTR [rax]
  42ab5e:	movzx  eax,al
  42ab61:	mov    edi,eax
  42ab63:	call   42ab3c <flatcc_json_parser_struct_as_root@@Base+0x327>
  42ab68:	leave  
  42ab69:	ret    
  42ab6a:	push   rbp
  42ab6b:	mov    rbp,rsp
  42ab6e:	mov    DWORD PTR [rbp-0x4],edi
  42ab71:	mov    eax,DWORD PTR [rbp-0x4]
  42ab74:	pop    rbp
  42ab75:	ret    
  42ab76:	push   rbp
  42ab77:	mov    rbp,rsp
  42ab7a:	sub    rsp,0x8
  42ab7e:	mov    QWORD PTR [rbp-0x8],rdi
  42ab82:	mov    rax,QWORD PTR [rbp-0x8]
  42ab86:	mov    eax,DWORD PTR [rax]
  42ab88:	mov    edi,eax
  42ab8a:	call   42ab6a <flatcc_json_parser_struct_as_root@@Base+0x355>
  42ab8f:	leave  
  42ab90:	ret    
  42ab91:	push   rbp
  42ab92:	mov    rbp,rsp
  42ab95:	mov    DWORD PTR [rbp-0x4],edi
  42ab98:	mov    eax,DWORD PTR [rbp-0x4]
  42ab9b:	pop    rbp
  42ab9c:	ret    
  42ab9d:	push   rbp
  42ab9e:	mov    rbp,rsp
  42aba1:	sub    rsp,0x8
  42aba5:	mov    QWORD PTR [rbp-0x8],rdi
  42aba9:	mov    rax,QWORD PTR [rbp-0x8]
  42abad:	mov    eax,DWORD PTR [rax]
  42abaf:	mov    edi,eax
  42abb1:	call   42ab91 <flatcc_json_parser_struct_as_root@@Base+0x37c>
  42abb6:	leave  
  42abb7:	ret    
  42abb8:	push   rbp
  42abb9:	mov    rbp,rsp
  42abbc:	mov    eax,edi
  42abbe:	mov    WORD PTR [rbp-0x4],ax
  42abc2:	movzx  eax,WORD PTR [rbp-0x4]
  42abc6:	pop    rbp
  42abc7:	ret    
  42abc8:	push   rbp
  42abc9:	mov    rbp,rsp
  42abcc:	sub    rsp,0x8
  42abd0:	mov    QWORD PTR [rbp-0x8],rdi
  42abd4:	mov    rax,QWORD PTR [rbp-0x8]
  42abd8:	movzx  eax,WORD PTR [rax]
  42abdb:	movzx  eax,ax
  42abde:	mov    edi,eax
  42abe0:	call   42abb8 <flatcc_json_parser_struct_as_root@@Base+0x3a3>
  42abe5:	leave  
  42abe6:	ret    
  42abe7:	push   rbp
  42abe8:	mov    rbp,rsp
  42abeb:	mov    eax,edi
  42abed:	mov    BYTE PTR [rbp-0x4],al
  42abf0:	movzx  eax,BYTE PTR [rbp-0x4]
  42abf4:	pop    rbp
  42abf5:	ret    
  42abf6:	push   rbp
  42abf7:	mov    rbp,rsp
  42abfa:	sub    rsp,0x8
  42abfe:	mov    QWORD PTR [rbp-0x8],rdi
  42ac02:	mov    rax,QWORD PTR [rbp-0x8]
  42ac06:	movzx  eax,BYTE PTR [rax]
  42ac09:	movzx  eax,al
  42ac0c:	mov    edi,eax
  42ac0e:	call   42abe7 <flatcc_json_parser_struct_as_root@@Base+0x3d2>
  42ac13:	leave  
  42ac14:	ret    
  42ac15:	push   rbp
  42ac16:	mov    rbp,rsp
  42ac19:	mov    DWORD PTR [rbp-0x4],edi
  42ac1c:	mov    eax,DWORD PTR [rbp-0x4]
  42ac1f:	pop    rbp
  42ac20:	ret    
  42ac21:	push   rbp
  42ac22:	mov    rbp,rsp
  42ac25:	mov    DWORD PTR [rbp-0x4],edi
  42ac28:	mov    eax,DWORD PTR [rbp-0x4]
  42ac2b:	pop    rbp
  42ac2c:	ret    
  42ac2d:	push   rbp
  42ac2e:	mov    rbp,rsp
  42ac31:	sub    rsp,0x8
  42ac35:	mov    QWORD PTR [rbp-0x8],rdi
  42ac39:	mov    rax,QWORD PTR [rbp-0x8]
  42ac3d:	mov    eax,DWORD PTR [rax]
  42ac3f:	mov    edi,eax
  42ac41:	call   42ac15 <flatcc_json_parser_struct_as_root@@Base+0x400>
  42ac46:	leave  
  42ac47:	ret    
  42ac48:	push   rbp
  42ac49:	mov    rbp,rsp
  42ac4c:	mov    QWORD PTR [rbp-0x8],rdi
  42ac50:	mov    DWORD PTR [rbp-0xc],esi
  42ac53:	mov    rax,QWORD PTR [rbp-0x8]
  42ac57:	mov    eax,DWORD PTR [rax+0x3c]
  42ac5a:	test   eax,eax
  42ac5c:	jne    42ac68 <flatcc_json_parser_struct_as_root@@Base+0x453>
  42ac5e:	mov    rax,QWORD PTR [rbp-0x8]
  42ac62:	mov    edx,DWORD PTR [rbp-0xc]
  42ac65:	mov    DWORD PTR [rax+0x3c],edx
  42ac68:	nop
  42ac69:	pop    rbp
  42ac6a:	ret    
  42ac6b:	push   rbp
  42ac6c:	mov    rbp,rsp
  42ac6f:	mov    QWORD PTR [rbp-0x8],rdi
  42ac73:	mov    rax,QWORD PTR [rbp-0x8]
  42ac77:	mov    eax,DWORD PTR [rax+0x3c]
  42ac7a:	pop    rbp
  42ac7b:	ret    
  42ac7c:	push   rbp
  42ac7d:	mov    rbp,rsp
  42ac80:	sub    rsp,0x10
  42ac84:	mov    QWORD PTR [rbp-0x8],rdi
  42ac88:	mov    rax,QWORD PTR [rbp-0x8]
  42ac8c:	mov    rdx,QWORD PTR [rax+0x28]
  42ac90:	mov    rax,QWORD PTR [rbp-0x8]
  42ac94:	mov    rax,QWORD PTR [rax+0x20]
  42ac98:	cmp    rdx,rax
  42ac9b:	jb     42acb3 <flatcc_json_parser_struct_as_root@@Base+0x49e>
  42ac9d:	mov    rax,QWORD PTR [rbp-0x8]
  42aca1:	mov    rax,QWORD PTR [rax+0x48]
  42aca5:	mov    rdx,QWORD PTR [rbp-0x8]
  42aca9:	mov    esi,0x0
  42acae:	mov    rdi,rdx
  42acb1:	call   rax
  42acb3:	nop
  42acb4:	leave  
  42acb5:	ret    
  42acb6:	endbr64 
  42acba:	push   rbp
  42acbb:	mov    rbp,rsp
  42acbe:	sub    rsp,0x10
  42acc2:	mov    DWORD PTR [rbp-0x4],edi
  42acc5:	mov    QWORD PTR [rbp-0x10],rsi
  42acc9:	cmp    DWORD PTR [rbp-0x4],0x0
  42accd:	je     42acee <flatcc_json_parser_struct_as_root@@Base+0x4d9>
  42accf:	mov    rax,QWORD PTR [rbp-0x10]
  42acd3:	mov    edx,0x5
  42acd8:	lea    rsi,[rip+0x12a6a]        # 43d749 <flatcc_builder_padding_base@@Base+0x27c9>
  42acdf:	mov    rdi,rax
  42ace2:	call   406220 <memcpy@plt>
  42ace7:	mov    eax,0x4
  42acec:	jmp    42ad0b <flatcc_json_parser_struct_as_root@@Base+0x4f6>
  42acee:	mov    rax,QWORD PTR [rbp-0x10]
  42acf2:	mov    edx,0x6
  42acf7:	lea    rsi,[rip+0x12a51]        # 43d74f <flatcc_builder_padding_base@@Base+0x27cf>
  42acfe:	mov    rdi,rax
  42ad01:	call   406220 <memcpy@plt>
  42ad06:	mov    eax,0x5
  42ad0b:	leave  
  42ad0c:	ret    
  42ad0d:	endbr64 
  42ad11:	push   rbp
  42ad12:	mov    rbp,rsp
  42ad15:	mov    eax,edi
  42ad17:	mov    QWORD PTR [rbp-0x20],rsi
  42ad1b:	mov    BYTE PTR [rbp-0x14],al
  42ad1e:	cmp    BYTE PTR [rbp-0x14],0x63
  42ad22:	jbe    42adba <flatcc_json_parser_struct_as_root@@Base+0x5a5>
  42ad28:	add    QWORD PTR [rbp-0x20],0x3
  42ad2d:	mov    rax,QWORD PTR [rbp-0x20]
  42ad31:	mov    BYTE PTR [rax],0x0
  42ad34:	sub    QWORD PTR [rbp-0x20],0x2
  42ad39:	movzx  ecx,BYTE PTR [rbp-0x14]
  42ad3d:	movzx  edx,cl
  42ad40:	mov    eax,edx
  42ad42:	shl    eax,0x2
  42ad45:	add    eax,edx
  42ad47:	shl    eax,0x3
  42ad4a:	add    eax,edx
  42ad4c:	shr    ax,0x8
  42ad50:	shr    al,0x4
  42ad53:	mov    edx,0x64
  42ad58:	imul   eax,edx
  42ad5b:	sub    ecx,eax
  42ad5d:	mov    eax,ecx
  42ad5f:	movzx  eax,al
  42ad62:	add    eax,eax
  42ad64:	movsxd rdx,eax
  42ad67:	lea    rax,[rip+0x12912]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42ad6e:	add    rax,rdx
  42ad71:	mov    QWORD PTR [rbp-0x8],rax
  42ad75:	movzx  eax,BYTE PTR [rbp-0x14]
  42ad79:	movzx  edx,al
  42ad7c:	mov    eax,edx
  42ad7e:	shl    eax,0x2
  42ad81:	add    eax,edx
  42ad83:	shl    eax,0x3
  42ad86:	add    eax,edx
  42ad88:	shr    ax,0x8
  42ad8c:	shr    al,0x4
  42ad8f:	mov    BYTE PTR [rbp-0x14],al
  42ad92:	mov    rax,QWORD PTR [rbp-0x8]
  42ad96:	movzx  eax,WORD PTR [rax]
  42ad99:	mov    rdx,QWORD PTR [rbp-0x20]
  42ad9d:	mov    WORD PTR [rdx],ax
  42ada0:	movzx  eax,BYTE PTR [rbp-0x14]
  42ada4:	add    eax,0x30
  42ada7:	mov    rdx,QWORD PTR [rbp-0x20]
  42adab:	dec    rdx
  42adae:	mov    BYTE PTR [rdx],al
  42adb0:	mov    eax,0x3
  42adb5:	jmp    42ae5d <flatcc_json_parser_struct_as_root@@Base+0x648>
  42adba:	cmp    BYTE PTR [rbp-0x14],0x9
  42adbe:	jbe    42ae3f <flatcc_json_parser_struct_as_root@@Base+0x62a>
  42adc0:	add    QWORD PTR [rbp-0x20],0x2
  42adc5:	mov    rax,QWORD PTR [rbp-0x20]
  42adc9:	mov    BYTE PTR [rax],0x0
  42adcc:	sub    QWORD PTR [rbp-0x20],0x2
  42add1:	movzx  ecx,BYTE PTR [rbp-0x14]
  42add5:	movzx  edx,cl
  42add8:	mov    eax,edx
  42adda:	shl    eax,0x2
  42addd:	add    eax,edx
  42addf:	shl    eax,0x3
  42ade2:	add    eax,edx
  42ade4:	shr    ax,0x8
  42ade8:	shr    al,0x4
  42adeb:	mov    edx,0x64
  42adf0:	imul   eax,edx
  42adf3:	sub    ecx,eax
  42adf5:	mov    eax,ecx
  42adf7:	movzx  eax,al
  42adfa:	add    eax,eax
  42adfc:	movsxd rdx,eax
  42adff:	lea    rax,[rip+0x1287a]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42ae06:	add    rax,rdx
  42ae09:	mov    QWORD PTR [rbp-0x8],rax
  42ae0d:	movzx  eax,BYTE PTR [rbp-0x14]
  42ae11:	movzx  edx,al
  42ae14:	mov    eax,edx
  42ae16:	shl    eax,0x2
  42ae19:	add    eax,edx
  42ae1b:	shl    eax,0x3
  42ae1e:	add    eax,edx
  42ae20:	shr    ax,0x8
  42ae24:	shr    al,0x4
  42ae27:	mov    BYTE PTR [rbp-0x14],al
  42ae2a:	mov    rax,QWORD PTR [rbp-0x8]
  42ae2e:	movzx  eax,WORD PTR [rax]
  42ae31:	mov    rdx,QWORD PTR [rbp-0x20]
  42ae35:	mov    WORD PTR [rdx],ax
  42ae38:	mov    eax,0x2
  42ae3d:	jmp    42ae5d <flatcc_json_parser_struct_as_root@@Base+0x648>
  42ae3f:	mov    rax,QWORD PTR [rbp-0x20]
  42ae43:	inc    rax
  42ae46:	mov    BYTE PTR [rax],0x0
  42ae49:	movzx  eax,BYTE PTR [rbp-0x14]
  42ae4d:	add    eax,0x30
  42ae50:	mov    edx,eax
  42ae52:	mov    rax,QWORD PTR [rbp-0x20]
  42ae56:	mov    BYTE PTR [rax],dl
  42ae58:	mov    eax,0x1
  42ae5d:	pop    rbp
  42ae5e:	ret    
  42ae5f:	endbr64 
  42ae63:	push   rbp
  42ae64:	mov    rbp,rsp
  42ae67:	mov    eax,edi
  42ae69:	mov    QWORD PTR [rbp-0x20],rsi
  42ae6d:	mov    WORD PTR [rbp-0x14],ax
  42ae71:	mov    DWORD PTR [rbp-0xc],0x0
  42ae78:	cmp    WORD PTR [rbp-0x14],0x3e7
  42ae7e:	jbe    42ae9a <flatcc_json_parser_struct_as_root@@Base+0x685>
  42ae80:	cmp    WORD PTR [rbp-0x14],0x270f
  42ae86:	jbe    42ae91 <flatcc_json_parser_struct_as_root@@Base+0x67c>
  42ae88:	mov    DWORD PTR [rbp-0xc],0x5
  42ae8f:	jmp    42aec1 <flatcc_json_parser_struct_as_root@@Base+0x6ac>
  42ae91:	mov    DWORD PTR [rbp-0xc],0x4
  42ae98:	jmp    42aec1 <flatcc_json_parser_struct_as_root@@Base+0x6ac>
  42ae9a:	cmp    WORD PTR [rbp-0x14],0x63
  42ae9f:	jbe    42aeaa <flatcc_json_parser_struct_as_root@@Base+0x695>
  42aea1:	mov    DWORD PTR [rbp-0xc],0x3
  42aea8:	jmp    42aec1 <flatcc_json_parser_struct_as_root@@Base+0x6ac>
  42aeaa:	cmp    WORD PTR [rbp-0x14],0x9
  42aeaf:	jbe    42aeba <flatcc_json_parser_struct_as_root@@Base+0x6a5>
  42aeb1:	mov    DWORD PTR [rbp-0xc],0x2
  42aeb8:	jmp    42aec1 <flatcc_json_parser_struct_as_root@@Base+0x6ac>
  42aeba:	mov    DWORD PTR [rbp-0xc],0x1
  42aec1:	mov    eax,DWORD PTR [rbp-0xc]
  42aec4:	cdqe   
  42aec6:	add    QWORD PTR [rbp-0x20],rax
  42aeca:	mov    rax,QWORD PTR [rbp-0x20]
  42aece:	mov    BYTE PTR [rax],0x0
  42aed1:	mov    eax,DWORD PTR [rbp-0xc]
  42aed4:	and    eax,0x1
  42aed7:	test   eax,eax
  42aed9:	je     42afff <flatcc_json_parser_struct_as_root@@Base+0x7ea>
  42aedf:	cmp    DWORD PTR [rbp-0xc],0x3
  42aee3:	je     42af74 <flatcc_json_parser_struct_as_root@@Base+0x75f>
  42aee9:	cmp    DWORD PTR [rbp-0xc],0x5
  42aeed:	je     42aefe <flatcc_json_parser_struct_as_root@@Base+0x6e9>
  42aeef:	cmp    DWORD PTR [rbp-0xc],0x1
  42aef3:	je     42afea <flatcc_json_parser_struct_as_root@@Base+0x7d5>
  42aef9:	jmp    42b0ff <flatcc_json_parser_struct_as_root@@Base+0x8ea>
  42aefe:	sub    QWORD PTR [rbp-0x20],0x2
  42af03:	movzx  ecx,WORD PTR [rbp-0x14]
  42af07:	mov    eax,ecx
  42af09:	shr    ax,0x2
  42af0d:	movzx  eax,ax
  42af10:	imul   eax,eax,0x147b
  42af16:	shr    eax,0x10
  42af19:	mov    edx,eax
  42af1b:	shr    dx,1
  42af1e:	mov    eax,edx
  42af20:	shl    eax,0x2
  42af23:	add    eax,edx
  42af25:	lea    edx,[rax*4+0x0]
  42af2c:	add    eax,edx
  42af2e:	shl    eax,0x2
  42af31:	sub    ecx,eax
  42af33:	mov    edx,ecx
  42af35:	movzx  eax,dx
  42af38:	add    eax,eax
  42af3a:	movsxd rdx,eax
  42af3d:	lea    rax,[rip+0x1273c]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42af44:	add    rax,rdx
  42af47:	mov    QWORD PTR [rbp-0x8],rax
  42af4b:	movzx  eax,WORD PTR [rbp-0x14]
  42af4f:	shr    ax,0x2
  42af53:	movzx  eax,ax
  42af56:	imul   eax,eax,0x147b
  42af5c:	shr    eax,0x10
  42af5f:	shr    ax,1
  42af62:	mov    WORD PTR [rbp-0x14],ax
  42af66:	mov    rax,QWORD PTR [rbp-0x8]
  42af6a:	movzx  eax,WORD PTR [rax]
  42af6d:	mov    rdx,QWORD PTR [rbp-0x20]
  42af71:	mov    WORD PTR [rdx],ax
  42af74:	sub    QWORD PTR [rbp-0x20],0x2
  42af79:	movzx  ecx,WORD PTR [rbp-0x14]
  42af7d:	mov    eax,ecx
  42af7f:	shr    ax,0x2
  42af83:	movzx  eax,ax
  42af86:	imul   eax,eax,0x147b
  42af8c:	shr    eax,0x10
  42af8f:	mov    edx,eax
  42af91:	shr    dx,1
  42af94:	mov    eax,edx
  42af96:	shl    eax,0x2
  42af99:	add    eax,edx
  42af9b:	lea    edx,[rax*4+0x0]
  42afa2:	add    eax,edx
  42afa4:	shl    eax,0x2
  42afa7:	sub    ecx,eax
  42afa9:	mov    edx,ecx
  42afab:	movzx  eax,dx
  42afae:	add    eax,eax
  42afb0:	movsxd rdx,eax
  42afb3:	lea    rax,[rip+0x126c6]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42afba:	add    rax,rdx
  42afbd:	mov    QWORD PTR [rbp-0x8],rax
  42afc1:	movzx  eax,WORD PTR [rbp-0x14]
  42afc5:	shr    ax,0x2
  42afc9:	movzx  eax,ax
  42afcc:	imul   eax,eax,0x147b
  42afd2:	shr    eax,0x10
  42afd5:	shr    ax,1
  42afd8:	mov    WORD PTR [rbp-0x14],ax
  42afdc:	mov    rax,QWORD PTR [rbp-0x8]
  42afe0:	movzx  eax,WORD PTR [rax]
  42afe3:	mov    rdx,QWORD PTR [rbp-0x20]
  42afe7:	mov    WORD PTR [rdx],ax
  42afea:	movzx  eax,WORD PTR [rbp-0x14]
  42afee:	add    eax,0x30
  42aff1:	mov    rdx,QWORD PTR [rbp-0x20]
  42aff5:	dec    rdx
  42aff8:	mov    BYTE PTR [rdx],al
  42affa:	jmp    42b0ff <flatcc_json_parser_struct_as_root@@Base+0x8ea>
  42afff:	cmp    DWORD PTR [rbp-0xc],0x2
  42b003:	je     42b089 <flatcc_json_parser_struct_as_root@@Base+0x874>
  42b009:	cmp    DWORD PTR [rbp-0xc],0x4
  42b00d:	jne    42b0ff <flatcc_json_parser_struct_as_root@@Base+0x8ea>
  42b013:	sub    QWORD PTR [rbp-0x20],0x2
  42b018:	movzx  ecx,WORD PTR [rbp-0x14]
  42b01c:	mov    eax,ecx
  42b01e:	shr    ax,0x2
  42b022:	movzx  eax,ax
  42b025:	imul   eax,eax,0x147b
  42b02b:	shr    eax,0x10
  42b02e:	mov    edx,eax
  42b030:	shr    dx,1
  42b033:	mov    eax,edx
  42b035:	shl    eax,0x2
  42b038:	add    eax,edx
  42b03a:	lea    edx,[rax*4+0x0]
  42b041:	add    eax,edx
  42b043:	shl    eax,0x2
  42b046:	sub    ecx,eax
  42b048:	mov    edx,ecx
  42b04a:	movzx  eax,dx
  42b04d:	add    eax,eax
  42b04f:	movsxd rdx,eax
  42b052:	lea    rax,[rip+0x12627]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42b059:	add    rax,rdx
  42b05c:	mov    QWORD PTR [rbp-0x8],rax
  42b060:	movzx  eax,WORD PTR [rbp-0x14]
  42b064:	shr    ax,0x2
  42b068:	movzx  eax,ax
  42b06b:	imul   eax,eax,0x147b
  42b071:	shr    eax,0x10
  42b074:	shr    ax,1
  42b077:	mov    WORD PTR [rbp-0x14],ax
  42b07b:	mov    rax,QWORD PTR [rbp-0x8]
  42b07f:	movzx  eax,WORD PTR [rax]
  42b082:	mov    rdx,QWORD PTR [rbp-0x20]
  42b086:	mov    WORD PTR [rdx],ax
  42b089:	sub    QWORD PTR [rbp-0x20],0x2
  42b08e:	movzx  ecx,WORD PTR [rbp-0x14]
  42b092:	mov    eax,ecx
  42b094:	shr    ax,0x2
  42b098:	movzx  eax,ax
  42b09b:	imul   eax,eax,0x147b
  42b0a1:	shr    eax,0x10
  42b0a4:	mov    edx,eax
  42b0a6:	shr    dx,1
  42b0a9:	mov    eax,edx
  42b0ab:	shl    eax,0x2
  42b0ae:	add    eax,edx
  42b0b0:	lea    edx,[rax*4+0x0]
  42b0b7:	add    eax,edx
  42b0b9:	shl    eax,0x2
  42b0bc:	sub    ecx,eax
  42b0be:	mov    edx,ecx
  42b0c0:	movzx  eax,dx
  42b0c3:	add    eax,eax
  42b0c5:	movsxd rdx,eax
  42b0c8:	lea    rax,[rip+0x125b1]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42b0cf:	add    rax,rdx
  42b0d2:	mov    QWORD PTR [rbp-0x8],rax
  42b0d6:	movzx  eax,WORD PTR [rbp-0x14]
  42b0da:	shr    ax,0x2
  42b0de:	movzx  eax,ax
  42b0e1:	imul   eax,eax,0x147b
  42b0e7:	shr    eax,0x10
  42b0ea:	shr    ax,1
  42b0ed:	mov    WORD PTR [rbp-0x14],ax
  42b0f1:	mov    rax,QWORD PTR [rbp-0x8]
  42b0f5:	movzx  eax,WORD PTR [rax]
  42b0f8:	mov    rdx,QWORD PTR [rbp-0x20]
  42b0fc:	mov    WORD PTR [rdx],ax
  42b0ff:	mov    eax,DWORD PTR [rbp-0xc]
  42b102:	pop    rbp
  42b103:	ret    
  42b104:	endbr64 
  42b108:	push   rbp
  42b109:	mov    rbp,rsp
  42b10c:	mov    DWORD PTR [rbp-0x14],edi
  42b10f:	mov    QWORD PTR [rbp-0x20],rsi
  42b113:	mov    DWORD PTR [rbp-0xc],0x0
  42b11a:	cmp    DWORD PTR [rbp-0x14],0x270f
  42b121:	jbe    42b186 <flatcc_json_parser_struct_as_root@@Base+0x971>
  42b123:	cmp    DWORD PTR [rbp-0x14],0x98967f
  42b12a:	jbe    42b159 <flatcc_json_parser_struct_as_root@@Base+0x944>
  42b12c:	cmp    DWORD PTR [rbp-0x14],0x3b9ac9ff
  42b133:	jbe    42b13e <flatcc_json_parser_struct_as_root@@Base+0x929>
  42b135:	mov    DWORD PTR [rbp-0xc],0xa
  42b13c:	jmp    42b1bd <flatcc_json_parser_struct_as_root@@Base+0x9a8>
  42b13e:	cmp    DWORD PTR [rbp-0x14],0x5f5e0ff
  42b145:	jbe    42b150 <flatcc_json_parser_struct_as_root@@Base+0x93b>
  42b147:	mov    DWORD PTR [rbp-0xc],0x9
  42b14e:	jmp    42b1bd <flatcc_json_parser_struct_as_root@@Base+0x9a8>
  42b150:	mov    DWORD PTR [rbp-0xc],0x8
  42b157:	jmp    42b1bd <flatcc_json_parser_struct_as_root@@Base+0x9a8>
  42b159:	cmp    DWORD PTR [rbp-0x14],0xf423f
  42b160:	jbe    42b16b <flatcc_json_parser_struct_as_root@@Base+0x956>
  42b162:	mov    DWORD PTR [rbp-0xc],0x7
  42b169:	jmp    42b1bd <flatcc_json_parser_struct_as_root@@Base+0x9a8>
  42b16b:	cmp    DWORD PTR [rbp-0x14],0x1869f
  42b172:	jbe    42b17d <flatcc_json_parser_struct_as_root@@Base+0x968>
  42b174:	mov    DWORD PTR [rbp-0xc],0x6
  42b17b:	jmp    42b1bd <flatcc_json_parser_struct_as_root@@Base+0x9a8>
  42b17d:	mov    DWORD PTR [rbp-0xc],0x5
  42b184:	jmp    42b1bd <flatcc_json_parser_struct_as_root@@Base+0x9a8>
  42b186:	cmp    DWORD PTR [rbp-0x14],0x63
  42b18a:	jbe    42b1a7 <flatcc_json_parser_struct_as_root@@Base+0x992>
  42b18c:	cmp    DWORD PTR [rbp-0x14],0x3e7
  42b193:	jbe    42b19e <flatcc_json_parser_struct_as_root@@Base+0x989>
  42b195:	mov    DWORD PTR [rbp-0xc],0x4
  42b19c:	jmp    42b1bd <flatcc_json_parser_struct_as_root@@Base+0x9a8>
  42b19e:	mov    DWORD PTR [rbp-0xc],0x3
  42b1a5:	jmp    42b1bd <flatcc_json_parser_struct_as_root@@Base+0x9a8>
  42b1a7:	cmp    DWORD PTR [rbp-0x14],0x9
  42b1ab:	jbe    42b1b6 <flatcc_json_parser_struct_as_root@@Base+0x9a1>
  42b1ad:	mov    DWORD PTR [rbp-0xc],0x2
  42b1b4:	jmp    42b1bd <flatcc_json_parser_struct_as_root@@Base+0x9a8>
  42b1b6:	mov    DWORD PTR [rbp-0xc],0x1
  42b1bd:	mov    eax,DWORD PTR [rbp-0xc]
  42b1c0:	cdqe   
  42b1c2:	add    QWORD PTR [rbp-0x20],rax
  42b1c6:	mov    rax,QWORD PTR [rbp-0x20]
  42b1ca:	mov    BYTE PTR [rax],0x0
  42b1cd:	mov    eax,DWORD PTR [rbp-0xc]
  42b1d0:	and    eax,0x1
  42b1d3:	test   eax,eax
  42b1d5:	je     42b35a <flatcc_json_parser_struct_as_root@@Base+0xb45>
  42b1db:	cmp    DWORD PTR [rbp-0xc],0x9
  42b1df:	ja     42b514 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  42b1e5:	mov    eax,DWORD PTR [rbp-0xc]
  42b1e8:	lea    rdx,[rax*4+0x0]
  42b1f0:	lea    rax,[rip+0x12561]        # 43d758 <flatcc_builder_padding_base@@Base+0x27d8>
  42b1f7:	mov    eax,DWORD PTR [rdx+rax*1]
  42b1fa:	movsxd rdx,eax
  42b1fd:	lea    rax,[rip+0x12554]        # 43d758 <flatcc_builder_padding_base@@Base+0x27d8>
  42b204:	add    rax,rdx
  42b207:	notrack jmp rax
  42b20a:	sub    QWORD PTR [rbp-0x20],0x2
  42b20f:	mov    ecx,DWORD PTR [rbp-0x14]
  42b212:	mov    edx,0x51eb851f
  42b217:	mov    eax,ecx
  42b219:	mul    edx
  42b21b:	mov    eax,edx
  42b21d:	shr    eax,0x5
  42b220:	imul   eax,eax,0x64
  42b223:	sub    ecx,eax
  42b225:	mov    eax,ecx
  42b227:	add    eax,eax
  42b229:	mov    edx,eax
  42b22b:	lea    rax,[rip+0x1244e]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42b232:	add    rax,rdx
  42b235:	mov    QWORD PTR [rbp-0x8],rax
  42b239:	mov    eax,DWORD PTR [rbp-0x14]
  42b23c:	mov    edx,0x51eb851f
  42b241:	mul    edx
  42b243:	mov    eax,edx
  42b245:	shr    eax,0x5
  42b248:	mov    DWORD PTR [rbp-0x14],eax
  42b24b:	mov    rax,QWORD PTR [rbp-0x8]
  42b24f:	movzx  eax,WORD PTR [rax]
  42b252:	mov    rdx,QWORD PTR [rbp-0x20]
  42b256:	mov    WORD PTR [rdx],ax
  42b259:	sub    QWORD PTR [rbp-0x20],0x2
  42b25e:	mov    ecx,DWORD PTR [rbp-0x14]
  42b261:	mov    edx,0x51eb851f
  42b266:	mov    eax,ecx
  42b268:	mul    edx
  42b26a:	mov    eax,edx
  42b26c:	shr    eax,0x5
  42b26f:	imul   eax,eax,0x64
  42b272:	sub    ecx,eax
  42b274:	mov    eax,ecx
  42b276:	add    eax,eax
  42b278:	mov    edx,eax
  42b27a:	lea    rax,[rip+0x123ff]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42b281:	add    rax,rdx
  42b284:	mov    QWORD PTR [rbp-0x8],rax
  42b288:	mov    eax,DWORD PTR [rbp-0x14]
  42b28b:	mov    edx,0x51eb851f
  42b290:	mul    edx
  42b292:	mov    eax,edx
  42b294:	shr    eax,0x5
  42b297:	mov    DWORD PTR [rbp-0x14],eax
  42b29a:	mov    rax,QWORD PTR [rbp-0x8]
  42b29e:	movzx  eax,WORD PTR [rax]
  42b2a1:	mov    rdx,QWORD PTR [rbp-0x20]
  42b2a5:	mov    WORD PTR [rdx],ax
  42b2a8:	sub    QWORD PTR [rbp-0x20],0x2
  42b2ad:	mov    ecx,DWORD PTR [rbp-0x14]
  42b2b0:	mov    edx,0x51eb851f
  42b2b5:	mov    eax,ecx
  42b2b7:	mul    edx
  42b2b9:	mov    eax,edx
  42b2bb:	shr    eax,0x5
  42b2be:	imul   eax,eax,0x64
  42b2c1:	sub    ecx,eax
  42b2c3:	mov    eax,ecx
  42b2c5:	add    eax,eax
  42b2c7:	mov    edx,eax
  42b2c9:	lea    rax,[rip+0x123b0]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42b2d0:	add    rax,rdx
  42b2d3:	mov    QWORD PTR [rbp-0x8],rax
  42b2d7:	mov    eax,DWORD PTR [rbp-0x14]
  42b2da:	mov    edx,0x51eb851f
  42b2df:	mul    edx
  42b2e1:	mov    eax,edx
  42b2e3:	shr    eax,0x5
  42b2e6:	mov    DWORD PTR [rbp-0x14],eax
  42b2e9:	mov    rax,QWORD PTR [rbp-0x8]
  42b2ed:	movzx  eax,WORD PTR [rax]
  42b2f0:	mov    rdx,QWORD PTR [rbp-0x20]
  42b2f4:	mov    WORD PTR [rdx],ax
  42b2f7:	sub    QWORD PTR [rbp-0x20],0x2
  42b2fc:	mov    ecx,DWORD PTR [rbp-0x14]
  42b2ff:	mov    edx,0x51eb851f
  42b304:	mov    eax,ecx
  42b306:	mul    edx
  42b308:	mov    eax,edx
  42b30a:	shr    eax,0x5
  42b30d:	imul   eax,eax,0x64
  42b310:	sub    ecx,eax
  42b312:	mov    eax,ecx
  42b314:	add    eax,eax
  42b316:	mov    edx,eax
  42b318:	lea    rax,[rip+0x12361]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42b31f:	add    rax,rdx
  42b322:	mov    QWORD PTR [rbp-0x8],rax
  42b326:	mov    eax,DWORD PTR [rbp-0x14]
  42b329:	mov    edx,0x51eb851f
  42b32e:	mul    edx
  42b330:	mov    eax,edx
  42b332:	shr    eax,0x5
  42b335:	mov    DWORD PTR [rbp-0x14],eax
  42b338:	mov    rax,QWORD PTR [rbp-0x8]
  42b33c:	movzx  eax,WORD PTR [rax]
  42b33f:	mov    rdx,QWORD PTR [rbp-0x20]
  42b343:	mov    WORD PTR [rdx],ax
  42b346:	mov    eax,DWORD PTR [rbp-0x14]
  42b349:	add    eax,0x30
  42b34c:	mov    rdx,QWORD PTR [rbp-0x20]
  42b350:	dec    rdx
  42b353:	mov    BYTE PTR [rdx],al
  42b355:	jmp    42b514 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  42b35a:	cmp    DWORD PTR [rbp-0xc],0xa
  42b35e:	ja     42b514 <flatcc_json_parser_struct_as_root@@Base+0xcff>
  42b364:	mov    eax,DWORD PTR [rbp-0xc]
  42b367:	lea    rdx,[rax*4+0x0]
  42b36f:	lea    rax,[rip+0x1240a]        # 43d780 <flatcc_builder_padding_base@@Base+0x2800>
  42b376:	mov    eax,DWORD PTR [rdx+rax*1]
  42b379:	movsxd rdx,eax
  42b37c:	lea    rax,[rip+0x123fd]        # 43d780 <flatcc_builder_padding_base@@Base+0x2800>
  42b383:	add    rax,rdx
  42b386:	notrack jmp rax
  42b389:	sub    QWORD PTR [rbp-0x20],0x2
  42b38e:	mov    ecx,DWORD PTR [rbp-0x14]
  42b391:	mov    edx,0x51eb851f
  42b396:	mov    eax,ecx
  42b398:	mul    edx
  42b39a:	mov    eax,edx
  42b39c:	shr    eax,0x5
  42b39f:	imul   eax,eax,0x64
  42b3a2:	sub    ecx,eax
  42b3a4:	mov    eax,ecx
  42b3a6:	add    eax,eax
  42b3a8:	mov    edx,eax
  42b3aa:	lea    rax,[rip+0x122cf]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42b3b1:	add    rax,rdx
  42b3b4:	mov    QWORD PTR [rbp-0x8],rax
  42b3b8:	mov    eax,DWORD PTR [rbp-0x14]
  42b3bb:	mov    edx,0x51eb851f
  42b3c0:	mul    edx
  42b3c2:	mov    eax,edx
  42b3c4:	shr    eax,0x5
  42b3c7:	mov    DWORD PTR [rbp-0x14],eax
  42b3ca:	mov    rax,QWORD PTR [rbp-0x8]
  42b3ce:	movzx  eax,WORD PTR [rax]
  42b3d1:	mov    rdx,QWORD PTR [rbp-0x20]
  42b3d5:	mov    WORD PTR [rdx],ax
  42b3d8:	sub    QWORD PTR [rbp-0x20],0x2
  42b3dd:	mov    ecx,DWORD PTR [rbp-0x14]
  42b3e0:	mov    edx,0x51eb851f
  42b3e5:	mov    eax,ecx
  42b3e7:	mul    edx
  42b3e9:	mov    eax,edx
  42b3eb:	shr    eax,0x5
  42b3ee:	imul   eax,eax,0x64
  42b3f1:	sub    ecx,eax
  42b3f3:	mov    eax,ecx
  42b3f5:	add    eax,eax
  42b3f7:	mov    edx,eax
  42b3f9:	lea    rax,[rip+0x12280]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42b400:	add    rax,rdx
  42b403:	mov    QWORD PTR [rbp-0x8],rax
  42b407:	mov    eax,DWORD PTR [rbp-0x14]
  42b40a:	mov    edx,0x51eb851f
  42b40f:	mul    edx
  42b411:	mov    eax,edx
  42b413:	shr    eax,0x5
  42b416:	mov    DWORD PTR [rbp-0x14],eax
  42b419:	mov    rax,QWORD PTR [rbp-0x8]
  42b41d:	movzx  eax,WORD PTR [rax]
  42b420:	mov    rdx,QWORD PTR [rbp-0x20]
  42b424:	mov    WORD PTR [rdx],ax
  42b427:	sub    QWORD PTR [rbp-0x20],0x2
  42b42c:	mov    ecx,DWORD PTR [rbp-0x14]
  42b42f:	mov    edx,0x51eb851f
  42b434:	mov    eax,ecx
  42b436:	mul    edx
  42b438:	mov    eax,edx
  42b43a:	shr    eax,0x5
  42b43d:	imul   eax,eax,0x64
  42b440:	sub    ecx,eax
  42b442:	mov    eax,ecx
  42b444:	add    eax,eax
  42b446:	mov    edx,eax
  42b448:	lea    rax,[rip+0x12231]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42b44f:	add    rax,rdx
  42b452:	mov    QWORD PTR [rbp-0x8],rax
  42b456:	mov    eax,DWORD PTR [rbp-0x14]
  42b459:	mov    edx,0x51eb851f
  42b45e:	mul    edx
  42b460:	mov    eax,edx
  42b462:	shr    eax,0x5
  42b465:	mov    DWORD PTR [rbp-0x14],eax
  42b468:	mov    rax,QWORD PTR [rbp-0x8]
  42b46c:	movzx  eax,WORD PTR [rax]
  42b46f:	mov    rdx,QWORD PTR [rbp-0x20]
  42b473:	mov    WORD PTR [rdx],ax
  42b476:	sub    QWORD PTR [rbp-0x20],0x2
  42b47b:	mov    ecx,DWORD PTR [rbp-0x14]
  42b47e:	mov    edx,0x51eb851f
  42b483:	mov    eax,ecx
  42b485:	mul    edx
  42b487:	mov    eax,edx
  42b489:	shr    eax,0x5
  42b48c:	imul   eax,eax,0x64
  42b48f:	sub    ecx,eax
  42b491:	mov    eax,ecx
  42b493:	add    eax,eax
  42b495:	mov    edx,eax
  42b497:	lea    rax,[rip+0x121e2]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42b49e:	add    rax,rdx
  42b4a1:	mov    QWORD PTR [rbp-0x8],rax
  42b4a5:	mov    eax,DWORD PTR [rbp-0x14]
  42b4a8:	mov    edx,0x51eb851f
  42b4ad:	mul    edx
  42b4af:	mov    eax,edx
  42b4b1:	shr    eax,0x5
  42b4b4:	mov    DWORD PTR [rbp-0x14],eax
  42b4b7:	mov    rax,QWORD PTR [rbp-0x8]
  42b4bb:	movzx  eax,WORD PTR [rax]
  42b4be:	mov    rdx,QWORD PTR [rbp-0x20]
  42b4c2:	mov    WORD PTR [rdx],ax
  42b4c5:	sub    QWORD PTR [rbp-0x20],0x2
  42b4ca:	mov    ecx,DWORD PTR [rbp-0x14]
  42b4cd:	mov    edx,0x51eb851f
  42b4d2:	mov    eax,ecx
  42b4d4:	mul    edx
  42b4d6:	mov    eax,edx
  42b4d8:	shr    eax,0x5
  42b4db:	imul   eax,eax,0x64
  42b4de:	sub    ecx,eax
  42b4e0:	mov    eax,ecx
  42b4e2:	add    eax,eax
  42b4e4:	mov    edx,eax
  42b4e6:	lea    rax,[rip+0x12193]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42b4ed:	add    rax,rdx
  42b4f0:	mov    QWORD PTR [rbp-0x8],rax
  42b4f4:	mov    eax,DWORD PTR [rbp-0x14]
  42b4f7:	mov    edx,0x51eb851f
  42b4fc:	mul    edx
  42b4fe:	mov    eax,edx
  42b500:	shr    eax,0x5
  42b503:	mov    DWORD PTR [rbp-0x14],eax
  42b506:	mov    rax,QWORD PTR [rbp-0x8]
  42b50a:	movzx  eax,WORD PTR [rax]
  42b50d:	mov    rdx,QWORD PTR [rbp-0x20]
  42b511:	mov    WORD PTR [rdx],ax
  42b514:	mov    eax,DWORD PTR [rbp-0xc]
  42b517:	pop    rbp
  42b518:	ret    
  42b519:	endbr64 
  42b51d:	push   rbp
  42b51e:	mov    rbp,rsp
  42b521:	sub    rsp,0x30
  42b525:	mov    QWORD PTR [rbp-0x28],rdi
  42b529:	mov    QWORD PTR [rbp-0x30],rsi
  42b52d:	mov    DWORD PTR [rbp-0x14],0x0
  42b534:	mov    QWORD PTR [rbp-0x10],0x3b9aca00
  42b53c:	mov    rax,QWORD PTR [rbp-0x28]
  42b540:	cmp    rax,QWORD PTR [rbp-0x10]
  42b544:	jae    42b55f <flatcc_json_parser_struct_as_root@@Base+0xd4a>
  42b546:	mov    rax,QWORD PTR [rbp-0x28]
  42b54a:	mov    edx,eax
  42b54c:	mov    rax,QWORD PTR [rbp-0x30]
  42b550:	mov    rsi,rax
  42b553:	mov    edi,edx
  42b555:	call   42b104 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42b55a:	jmp    42bdda <flatcc_json_parser_struct_as_root@@Base+0x15c5>
  42b55f:	mov    rax,QWORD PTR [rbp-0x10]
  42b563:	imul   rax,rax,0x2710
  42b56a:	cmp    QWORD PTR [rbp-0x28],rax
  42b56e:	jb     42b62c <flatcc_json_parser_struct_as_root@@Base+0xe17>
  42b574:	mov    rax,QWORD PTR [rbp-0x10]
  42b578:	imul   rax,rax,0x989680
  42b57f:	cmp    QWORD PTR [rbp-0x28],rax
  42b583:	jb     42b5ef <flatcc_json_parser_struct_as_root@@Base+0xdda>
  42b585:	mov    rax,QWORD PTR [rbp-0x10]
  42b589:	imul   rax,rax,0x3b9aca00
  42b590:	cmp    QWORD PTR [rbp-0x28],rax
  42b594:	jb     42b5c6 <flatcc_json_parser_struct_as_root@@Base+0xdb1>
  42b596:	mov    rdx,QWORD PTR [rbp-0x10]
  42b59a:	movabs rax,0x2540be400
  42b5a4:	imul   rax,rdx
  42b5a8:	cmp    QWORD PTR [rbp-0x28],rax
  42b5ac:	jb     42b5ba <flatcc_json_parser_struct_as_root@@Base+0xda5>
  42b5ae:	mov    DWORD PTR [rbp-0x14],0x14
  42b5b5:	jmp    42b684 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42b5ba:	mov    DWORD PTR [rbp-0x14],0x13
  42b5c1:	jmp    42b684 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42b5c6:	mov    rax,QWORD PTR [rbp-0x10]
  42b5ca:	imul   rax,rax,0x5f5e100
  42b5d1:	cmp    QWORD PTR [rbp-0x28],rax
  42b5d5:	jb     42b5e3 <flatcc_json_parser_struct_as_root@@Base+0xdce>
  42b5d7:	mov    DWORD PTR [rbp-0x14],0x12
  42b5de:	jmp    42b684 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42b5e3:	mov    DWORD PTR [rbp-0x14],0x11
  42b5ea:	jmp    42b684 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42b5ef:	mov    rax,QWORD PTR [rbp-0x10]
  42b5f3:	imul   rax,rax,0xf4240
  42b5fa:	cmp    QWORD PTR [rbp-0x28],rax
  42b5fe:	jb     42b609 <flatcc_json_parser_struct_as_root@@Base+0xdf4>
  42b600:	mov    DWORD PTR [rbp-0x14],0x10
  42b607:	jmp    42b684 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42b609:	mov    rax,QWORD PTR [rbp-0x10]
  42b60d:	imul   rax,rax,0x186a0
  42b614:	cmp    QWORD PTR [rbp-0x28],rax
  42b618:	jb     42b623 <flatcc_json_parser_struct_as_root@@Base+0xe0e>
  42b61a:	mov    DWORD PTR [rbp-0x14],0xf
  42b621:	jmp    42b684 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42b623:	mov    DWORD PTR [rbp-0x14],0xe
  42b62a:	jmp    42b684 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42b62c:	mov    rax,QWORD PTR [rbp-0x10]
  42b630:	imul   rax,rax,0x64
  42b634:	cmp    QWORD PTR [rbp-0x28],rax
  42b638:	jb     42b65d <flatcc_json_parser_struct_as_root@@Base+0xe48>
  42b63a:	mov    rax,QWORD PTR [rbp-0x10]
  42b63e:	imul   rax,rax,0x3e8
  42b645:	cmp    QWORD PTR [rbp-0x28],rax
  42b649:	jb     42b654 <flatcc_json_parser_struct_as_root@@Base+0xe3f>
  42b64b:	mov    DWORD PTR [rbp-0x14],0xd
  42b652:	jmp    42b684 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42b654:	mov    DWORD PTR [rbp-0x14],0xc
  42b65b:	jmp    42b684 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42b65d:	mov    rdx,QWORD PTR [rbp-0x10]
  42b661:	mov    rax,rdx
  42b664:	shl    rax,0x2
  42b668:	add    rax,rdx
  42b66b:	add    rax,rax
  42b66e:	cmp    QWORD PTR [rbp-0x28],rax
  42b672:	jb     42b67d <flatcc_json_parser_struct_as_root@@Base+0xe68>
  42b674:	mov    DWORD PTR [rbp-0x14],0xb
  42b67b:	jmp    42b684 <flatcc_json_parser_struct_as_root@@Base+0xe6f>
  42b67d:	mov    DWORD PTR [rbp-0x14],0xa
  42b684:	mov    eax,DWORD PTR [rbp-0x14]
  42b687:	cdqe   
  42b689:	add    QWORD PTR [rbp-0x30],rax
  42b68d:	mov    rax,QWORD PTR [rbp-0x30]
  42b691:	mov    BYTE PTR [rax],0x0
  42b694:	mov    eax,DWORD PTR [rbp-0x14]
  42b697:	and    eax,0x1
  42b69a:	test   eax,eax
  42b69c:	je     42b958 <flatcc_json_parser_struct_as_root@@Base+0x1143>
  42b6a2:	mov    eax,DWORD PTR [rbp-0x14]
  42b6a5:	sub    eax,0xb
  42b6a8:	cmp    eax,0x8
  42b6ab:	ja     42bc1f <flatcc_json_parser_struct_as_root@@Base+0x140a>
  42b6b1:	mov    eax,eax
  42b6b3:	lea    rdx,[rax*4+0x0]
  42b6bb:	lea    rax,[rip+0x120ea]        # 43d7ac <flatcc_builder_padding_base@@Base+0x282c>
  42b6c2:	mov    eax,DWORD PTR [rdx+rax*1]
  42b6c5:	movsxd rdx,eax
  42b6c8:	lea    rax,[rip+0x120dd]        # 43d7ac <flatcc_builder_padding_base@@Base+0x282c>
  42b6cf:	add    rax,rdx
  42b6d2:	notrack jmp rax
  42b6d5:	sub    QWORD PTR [rbp-0x30],0x2
  42b6da:	mov    rcx,QWORD PTR [rbp-0x28]
  42b6de:	mov    rax,rcx
  42b6e1:	shr    rax,0x2
  42b6e5:	movabs rdx,0x28f5c28f5c28f5c3
  42b6ef:	mul    rdx
  42b6f2:	mov    rax,rdx
  42b6f5:	shr    rax,0x2
  42b6f9:	imul   rax,rax,0x64
  42b6fd:	sub    rcx,rax
  42b700:	mov    rax,rcx
  42b703:	lea    rdx,[rax+rax*1]
  42b707:	lea    rax,[rip+0x11f72]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42b70e:	add    rax,rdx
  42b711:	mov    QWORD PTR [rbp-0x8],rax
  42b715:	mov    rax,QWORD PTR [rbp-0x28]
  42b719:	shr    rax,0x2
  42b71d:	movabs rdx,0x28f5c28f5c28f5c3
  42b727:	mul    rdx
  42b72a:	mov    rax,rdx
  42b72d:	shr    rax,0x2
  42b731:	mov    QWORD PTR [rbp-0x28],rax
  42b735:	mov    rax,QWORD PTR [rbp-0x8]
  42b739:	movzx  eax,WORD PTR [rax]
  42b73c:	mov    rdx,QWORD PTR [rbp-0x30]
  42b740:	mov    WORD PTR [rdx],ax
  42b743:	sub    QWORD PTR [rbp-0x30],0x2
  42b748:	mov    rcx,QWORD PTR [rbp-0x28]
  42b74c:	mov    rax,rcx
  42b74f:	shr    rax,0x2
  42b753:	movabs rdx,0x28f5c28f5c28f5c3
  42b75d:	mul    rdx
  42b760:	mov    rax,rdx
  42b763:	shr    rax,0x2
  42b767:	imul   rax,rax,0x64
  42b76b:	sub    rcx,rax
  42b76e:	mov    rax,rcx
  42b771:	lea    rdx,[rax+rax*1]
  42b775:	lea    rax,[rip+0x11f04]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42b77c:	add    rax,rdx
  42b77f:	mov    QWORD PTR [rbp-0x8],rax
  42b783:	mov    rax,QWORD PTR [rbp-0x28]
  42b787:	shr    rax,0x2
  42b78b:	movabs rdx,0x28f5c28f5c28f5c3
  42b795:	mul    rdx
  42b798:	mov    rax,rdx
  42b79b:	shr    rax,0x2
  42b79f:	mov    QWORD PTR [rbp-0x28],rax
  42b7a3:	mov    rax,QWORD PTR [rbp-0x8]
  42b7a7:	movzx  eax,WORD PTR [rax]
  42b7aa:	mov    rdx,QWORD PTR [rbp-0x30]
  42b7ae:	mov    WORD PTR [rdx],ax
  42b7b1:	sub    QWORD PTR [rbp-0x30],0x2
  42b7b6:	mov    rcx,QWORD PTR [rbp-0x28]
  42b7ba:	mov    rax,rcx
  42b7bd:	shr    rax,0x2
  42b7c1:	movabs rdx,0x28f5c28f5c28f5c3
  42b7cb:	mul    rdx
  42b7ce:	mov    rax,rdx
  42b7d1:	shr    rax,0x2
  42b7d5:	imul   rax,rax,0x64
  42b7d9:	sub    rcx,rax
  42b7dc:	mov    rax,rcx
  42b7df:	lea    rdx,[rax+rax*1]
  42b7e3:	lea    rax,[rip+0x11e96]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42b7ea:	add    rax,rdx
  42b7ed:	mov    QWORD PTR [rbp-0x8],rax
  42b7f1:	mov    rax,QWORD PTR [rbp-0x28]
  42b7f5:	shr    rax,0x2
  42b7f9:	movabs rdx,0x28f5c28f5c28f5c3
  42b803:	mul    rdx
  42b806:	mov    rax,rdx
  42b809:	shr    rax,0x2
  42b80d:	mov    QWORD PTR [rbp-0x28],rax
  42b811:	mov    rax,QWORD PTR [rbp-0x8]
  42b815:	movzx  eax,WORD PTR [rax]
  42b818:	mov    rdx,QWORD PTR [rbp-0x30]
  42b81c:	mov    WORD PTR [rdx],ax
  42b81f:	sub    QWORD PTR [rbp-0x30],0x2
  42b824:	mov    rcx,QWORD PTR [rbp-0x28]
  42b828:	mov    rax,rcx
  42b82b:	shr    rax,0x2
  42b82f:	movabs rdx,0x28f5c28f5c28f5c3
  42b839:	mul    rdx
  42b83c:	mov    rax,rdx
  42b83f:	shr    rax,0x2
  42b843:	imul   rax,rax,0x64
  42b847:	sub    rcx,rax
  42b84a:	mov    rax,rcx
  42b84d:	lea    rdx,[rax+rax*1]
  42b851:	lea    rax,[rip+0x11e28]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42b858:	add    rax,rdx
  42b85b:	mov    QWORD PTR [rbp-0x8],rax
  42b85f:	mov    rax,QWORD PTR [rbp-0x28]
  42b863:	shr    rax,0x2
  42b867:	movabs rdx,0x28f5c28f5c28f5c3
  42b871:	mul    rdx
  42b874:	mov    rax,rdx
  42b877:	shr    rax,0x2
  42b87b:	mov    QWORD PTR [rbp-0x28],rax
  42b87f:	mov    rax,QWORD PTR [rbp-0x8]
  42b883:	movzx  eax,WORD PTR [rax]
  42b886:	mov    rdx,QWORD PTR [rbp-0x30]
  42b88a:	mov    WORD PTR [rdx],ax
  42b88d:	sub    QWORD PTR [rbp-0x30],0x2
  42b892:	mov    rcx,QWORD PTR [rbp-0x28]
  42b896:	mov    rax,rcx
  42b899:	shr    rax,0x2
  42b89d:	movabs rdx,0x28f5c28f5c28f5c3
  42b8a7:	mul    rdx
  42b8aa:	mov    rax,rdx
  42b8ad:	shr    rax,0x2
  42b8b1:	imul   rax,rax,0x64
  42b8b5:	sub    rcx,rax
  42b8b8:	mov    rax,rcx
  42b8bb:	lea    rdx,[rax+rax*1]
  42b8bf:	lea    rax,[rip+0x11dba]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42b8c6:	add    rax,rdx
  42b8c9:	mov    QWORD PTR [rbp-0x8],rax
  42b8cd:	mov    rax,QWORD PTR [rbp-0x28]
  42b8d1:	shr    rax,0x2
  42b8d5:	movabs rdx,0x28f5c28f5c28f5c3
  42b8df:	mul    rdx
  42b8e2:	mov    rax,rdx
  42b8e5:	shr    rax,0x2
  42b8e9:	mov    QWORD PTR [rbp-0x28],rax
  42b8ed:	mov    rax,QWORD PTR [rbp-0x8]
  42b8f1:	movzx  eax,WORD PTR [rax]
  42b8f4:	mov    rdx,QWORD PTR [rbp-0x30]
  42b8f8:	mov    WORD PTR [rdx],ax
  42b8fb:	mov    rcx,QWORD PTR [rbp-0x28]
  42b8ff:	movabs rdx,0xcccccccccccccccd
  42b909:	mov    rax,rcx
  42b90c:	mul    rdx
  42b90f:	shr    rdx,0x3
  42b913:	mov    rax,rdx
  42b916:	shl    rax,0x2
  42b91a:	add    rax,rdx
  42b91d:	add    rax,rax
  42b920:	sub    rcx,rax
  42b923:	mov    rdx,rcx
  42b926:	mov    eax,edx
  42b928:	add    eax,0x30
  42b92b:	dec    QWORD PTR [rbp-0x30]
  42b92f:	mov    edx,eax
  42b931:	mov    rax,QWORD PTR [rbp-0x30]
  42b935:	mov    BYTE PTR [rax],dl
  42b937:	mov    rax,QWORD PTR [rbp-0x28]
  42b93b:	movabs rdx,0xcccccccccccccccd
  42b945:	mul    rdx
  42b948:	mov    rax,rdx
  42b94b:	shr    rax,0x3
  42b94f:	mov    QWORD PTR [rbp-0x28],rax
  42b953:	jmp    42bc1f <flatcc_json_parser_struct_as_root@@Base+0x140a>
  42b958:	mov    eax,DWORD PTR [rbp-0x14]
  42b95b:	sub    eax,0xa
  42b95e:	cmp    eax,0xa
  42b961:	ja     42bc1f <flatcc_json_parser_struct_as_root@@Base+0x140a>
  42b967:	mov    eax,eax
  42b969:	lea    rdx,[rax*4+0x0]
  42b971:	lea    rax,[rip+0x11e58]        # 43d7d0 <flatcc_builder_padding_base@@Base+0x2850>
  42b978:	mov    eax,DWORD PTR [rdx+rax*1]
  42b97b:	movsxd rdx,eax
  42b97e:	lea    rax,[rip+0x11e4b]        # 43d7d0 <flatcc_builder_padding_base@@Base+0x2850>
  42b985:	add    rax,rdx
  42b988:	notrack jmp rax
  42b98b:	sub    QWORD PTR [rbp-0x30],0x2
  42b990:	mov    rcx,QWORD PTR [rbp-0x28]
  42b994:	mov    rax,rcx
  42b997:	shr    rax,0x2
  42b99b:	movabs rdx,0x28f5c28f5c28f5c3
  42b9a5:	mul    rdx
  42b9a8:	mov    rax,rdx
  42b9ab:	shr    rax,0x2
  42b9af:	imul   rax,rax,0x64
  42b9b3:	sub    rcx,rax
  42b9b6:	mov    rax,rcx
  42b9b9:	lea    rdx,[rax+rax*1]
  42b9bd:	lea    rax,[rip+0x11cbc]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42b9c4:	add    rax,rdx
  42b9c7:	mov    QWORD PTR [rbp-0x8],rax
  42b9cb:	mov    rax,QWORD PTR [rbp-0x28]
  42b9cf:	shr    rax,0x2
  42b9d3:	movabs rdx,0x28f5c28f5c28f5c3
  42b9dd:	mul    rdx
  42b9e0:	mov    rax,rdx
  42b9e3:	shr    rax,0x2
  42b9e7:	mov    QWORD PTR [rbp-0x28],rax
  42b9eb:	mov    rax,QWORD PTR [rbp-0x8]
  42b9ef:	movzx  eax,WORD PTR [rax]
  42b9f2:	mov    rdx,QWORD PTR [rbp-0x30]
  42b9f6:	mov    WORD PTR [rdx],ax
  42b9f9:	sub    QWORD PTR [rbp-0x30],0x2
  42b9fe:	mov    rcx,QWORD PTR [rbp-0x28]
  42ba02:	mov    rax,rcx
  42ba05:	shr    rax,0x2
  42ba09:	movabs rdx,0x28f5c28f5c28f5c3
  42ba13:	mul    rdx
  42ba16:	mov    rax,rdx
  42ba19:	shr    rax,0x2
  42ba1d:	imul   rax,rax,0x64
  42ba21:	sub    rcx,rax
  42ba24:	mov    rax,rcx
  42ba27:	lea    rdx,[rax+rax*1]
  42ba2b:	lea    rax,[rip+0x11c4e]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42ba32:	add    rax,rdx
  42ba35:	mov    QWORD PTR [rbp-0x8],rax
  42ba39:	mov    rax,QWORD PTR [rbp-0x28]
  42ba3d:	shr    rax,0x2
  42ba41:	movabs rdx,0x28f5c28f5c28f5c3
  42ba4b:	mul    rdx
  42ba4e:	mov    rax,rdx
  42ba51:	shr    rax,0x2
  42ba55:	mov    QWORD PTR [rbp-0x28],rax
  42ba59:	mov    rax,QWORD PTR [rbp-0x8]
  42ba5d:	movzx  eax,WORD PTR [rax]
  42ba60:	mov    rdx,QWORD PTR [rbp-0x30]
  42ba64:	mov    WORD PTR [rdx],ax
  42ba67:	sub    QWORD PTR [rbp-0x30],0x2
  42ba6c:	mov    rcx,QWORD PTR [rbp-0x28]
  42ba70:	mov    rax,rcx
  42ba73:	shr    rax,0x2
  42ba77:	movabs rdx,0x28f5c28f5c28f5c3
  42ba81:	mul    rdx
  42ba84:	mov    rax,rdx
  42ba87:	shr    rax,0x2
  42ba8b:	imul   rax,rax,0x64
  42ba8f:	sub    rcx,rax
  42ba92:	mov    rax,rcx
  42ba95:	lea    rdx,[rax+rax*1]
  42ba99:	lea    rax,[rip+0x11be0]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42baa0:	add    rax,rdx
  42baa3:	mov    QWORD PTR [rbp-0x8],rax
  42baa7:	mov    rax,QWORD PTR [rbp-0x28]
  42baab:	shr    rax,0x2
  42baaf:	movabs rdx,0x28f5c28f5c28f5c3
  42bab9:	mul    rdx
  42babc:	mov    rax,rdx
  42babf:	shr    rax,0x2
  42bac3:	mov    QWORD PTR [rbp-0x28],rax
  42bac7:	mov    rax,QWORD PTR [rbp-0x8]
  42bacb:	movzx  eax,WORD PTR [rax]
  42bace:	mov    rdx,QWORD PTR [rbp-0x30]
  42bad2:	mov    WORD PTR [rdx],ax
  42bad5:	sub    QWORD PTR [rbp-0x30],0x2
  42bada:	mov    rcx,QWORD PTR [rbp-0x28]
  42bade:	mov    rax,rcx
  42bae1:	shr    rax,0x2
  42bae5:	movabs rdx,0x28f5c28f5c28f5c3
  42baef:	mul    rdx
  42baf2:	mov    rax,rdx
  42baf5:	shr    rax,0x2
  42baf9:	imul   rax,rax,0x64
  42bafd:	sub    rcx,rax
  42bb00:	mov    rax,rcx
  42bb03:	lea    rdx,[rax+rax*1]
  42bb07:	lea    rax,[rip+0x11b72]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42bb0e:	add    rax,rdx
  42bb11:	mov    QWORD PTR [rbp-0x8],rax
  42bb15:	mov    rax,QWORD PTR [rbp-0x28]
  42bb19:	shr    rax,0x2
  42bb1d:	movabs rdx,0x28f5c28f5c28f5c3
  42bb27:	mul    rdx
  42bb2a:	mov    rax,rdx
  42bb2d:	shr    rax,0x2
  42bb31:	mov    QWORD PTR [rbp-0x28],rax
  42bb35:	mov    rax,QWORD PTR [rbp-0x8]
  42bb39:	movzx  eax,WORD PTR [rax]
  42bb3c:	mov    rdx,QWORD PTR [rbp-0x30]
  42bb40:	mov    WORD PTR [rdx],ax
  42bb43:	sub    QWORD PTR [rbp-0x30],0x2
  42bb48:	mov    rcx,QWORD PTR [rbp-0x28]
  42bb4c:	mov    rax,rcx
  42bb4f:	shr    rax,0x2
  42bb53:	movabs rdx,0x28f5c28f5c28f5c3
  42bb5d:	mul    rdx
  42bb60:	mov    rax,rdx
  42bb63:	shr    rax,0x2
  42bb67:	imul   rax,rax,0x64
  42bb6b:	sub    rcx,rax
  42bb6e:	mov    rax,rcx
  42bb71:	lea    rdx,[rax+rax*1]
  42bb75:	lea    rax,[rip+0x11b04]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42bb7c:	add    rax,rdx
  42bb7f:	mov    QWORD PTR [rbp-0x8],rax
  42bb83:	mov    rax,QWORD PTR [rbp-0x28]
  42bb87:	shr    rax,0x2
  42bb8b:	movabs rdx,0x28f5c28f5c28f5c3
  42bb95:	mul    rdx
  42bb98:	mov    rax,rdx
  42bb9b:	shr    rax,0x2
  42bb9f:	mov    QWORD PTR [rbp-0x28],rax
  42bba3:	mov    rax,QWORD PTR [rbp-0x8]
  42bba7:	movzx  eax,WORD PTR [rax]
  42bbaa:	mov    rdx,QWORD PTR [rbp-0x30]
  42bbae:	mov    WORD PTR [rdx],ax
  42bbb1:	sub    QWORD PTR [rbp-0x30],0x2
  42bbb6:	mov    rcx,QWORD PTR [rbp-0x28]
  42bbba:	mov    rax,rcx
  42bbbd:	shr    rax,0x2
  42bbc1:	movabs rdx,0x28f5c28f5c28f5c3
  42bbcb:	mul    rdx
  42bbce:	mov    rax,rdx
  42bbd1:	shr    rax,0x2
  42bbd5:	imul   rax,rax,0x64
  42bbd9:	sub    rcx,rax
  42bbdc:	mov    rax,rcx
  42bbdf:	lea    rdx,[rax+rax*1]
  42bbe3:	lea    rax,[rip+0x11a96]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42bbea:	add    rax,rdx
  42bbed:	mov    QWORD PTR [rbp-0x8],rax
  42bbf1:	mov    rax,QWORD PTR [rbp-0x28]
  42bbf5:	shr    rax,0x2
  42bbf9:	movabs rdx,0x28f5c28f5c28f5c3
  42bc03:	mul    rdx
  42bc06:	mov    rax,rdx
  42bc09:	shr    rax,0x2
  42bc0d:	mov    QWORD PTR [rbp-0x28],rax
  42bc11:	mov    rax,QWORD PTR [rbp-0x8]
  42bc15:	movzx  eax,WORD PTR [rax]
  42bc18:	mov    rdx,QWORD PTR [rbp-0x30]
  42bc1c:	mov    WORD PTR [rdx],ax
  42bc1f:	sub    QWORD PTR [rbp-0x30],0x2
  42bc24:	mov    rcx,QWORD PTR [rbp-0x28]
  42bc28:	mov    rax,rcx
  42bc2b:	shr    rax,0x2
  42bc2f:	movabs rdx,0x28f5c28f5c28f5c3
  42bc39:	mul    rdx
  42bc3c:	mov    rax,rdx
  42bc3f:	shr    rax,0x2
  42bc43:	imul   rax,rax,0x64
  42bc47:	sub    rcx,rax
  42bc4a:	mov    rax,rcx
  42bc4d:	lea    rdx,[rax+rax*1]
  42bc51:	lea    rax,[rip+0x11a28]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42bc58:	add    rax,rdx
  42bc5b:	mov    QWORD PTR [rbp-0x8],rax
  42bc5f:	mov    rax,QWORD PTR [rbp-0x28]
  42bc63:	shr    rax,0x2
  42bc67:	movabs rdx,0x28f5c28f5c28f5c3
  42bc71:	mul    rdx
  42bc74:	mov    rax,rdx
  42bc77:	shr    rax,0x2
  42bc7b:	mov    QWORD PTR [rbp-0x28],rax
  42bc7f:	mov    rax,QWORD PTR [rbp-0x8]
  42bc83:	movzx  eax,WORD PTR [rax]
  42bc86:	mov    rdx,QWORD PTR [rbp-0x30]
  42bc8a:	mov    WORD PTR [rdx],ax
  42bc8d:	sub    QWORD PTR [rbp-0x30],0x2
  42bc92:	mov    rcx,QWORD PTR [rbp-0x28]
  42bc96:	mov    rax,rcx
  42bc99:	shr    rax,0x2
  42bc9d:	movabs rdx,0x28f5c28f5c28f5c3
  42bca7:	mul    rdx
  42bcaa:	mov    rax,rdx
  42bcad:	shr    rax,0x2
  42bcb1:	imul   rax,rax,0x64
  42bcb5:	sub    rcx,rax
  42bcb8:	mov    rax,rcx
  42bcbb:	lea    rdx,[rax+rax*1]
  42bcbf:	lea    rax,[rip+0x119ba]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42bcc6:	add    rax,rdx
  42bcc9:	mov    QWORD PTR [rbp-0x8],rax
  42bccd:	mov    rax,QWORD PTR [rbp-0x28]
  42bcd1:	shr    rax,0x2
  42bcd5:	movabs rdx,0x28f5c28f5c28f5c3
  42bcdf:	mul    rdx
  42bce2:	mov    rax,rdx
  42bce5:	shr    rax,0x2
  42bce9:	mov    QWORD PTR [rbp-0x28],rax
  42bced:	mov    rax,QWORD PTR [rbp-0x8]
  42bcf1:	movzx  eax,WORD PTR [rax]
  42bcf4:	mov    rdx,QWORD PTR [rbp-0x30]
  42bcf8:	mov    WORD PTR [rdx],ax
  42bcfb:	sub    QWORD PTR [rbp-0x30],0x2
  42bd00:	mov    rcx,QWORD PTR [rbp-0x28]
  42bd04:	mov    rax,rcx
  42bd07:	shr    rax,0x2
  42bd0b:	movabs rdx,0x28f5c28f5c28f5c3
  42bd15:	mul    rdx
  42bd18:	mov    rax,rdx
  42bd1b:	shr    rax,0x2
  42bd1f:	imul   rax,rax,0x64
  42bd23:	sub    rcx,rax
  42bd26:	mov    rax,rcx
  42bd29:	lea    rdx,[rax+rax*1]
  42bd2d:	lea    rax,[rip+0x1194c]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42bd34:	add    rax,rdx
  42bd37:	mov    QWORD PTR [rbp-0x8],rax
  42bd3b:	mov    rax,QWORD PTR [rbp-0x28]
  42bd3f:	shr    rax,0x2
  42bd43:	movabs rdx,0x28f5c28f5c28f5c3
  42bd4d:	mul    rdx
  42bd50:	mov    rax,rdx
  42bd53:	shr    rax,0x2
  42bd57:	mov    QWORD PTR [rbp-0x28],rax
  42bd5b:	mov    rax,QWORD PTR [rbp-0x8]
  42bd5f:	movzx  eax,WORD PTR [rax]
  42bd62:	mov    rdx,QWORD PTR [rbp-0x30]
  42bd66:	mov    WORD PTR [rdx],ax
  42bd69:	sub    QWORD PTR [rbp-0x30],0x2
  42bd6e:	mov    rcx,QWORD PTR [rbp-0x28]
  42bd72:	mov    rax,rcx
  42bd75:	shr    rax,0x2
  42bd79:	movabs rdx,0x28f5c28f5c28f5c3
  42bd83:	mul    rdx
  42bd86:	mov    rax,rdx
  42bd89:	shr    rax,0x2
  42bd8d:	imul   rax,rax,0x64
  42bd91:	sub    rcx,rax
  42bd94:	mov    rax,rcx
  42bd97:	lea    rdx,[rax+rax*1]
  42bd9b:	lea    rax,[rip+0x118de]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42bda2:	add    rax,rdx
  42bda5:	mov    QWORD PTR [rbp-0x8],rax
  42bda9:	mov    rax,QWORD PTR [rbp-0x28]
  42bdad:	shr    rax,0x2
  42bdb1:	movabs rdx,0x28f5c28f5c28f5c3
  42bdbb:	mul    rdx
  42bdbe:	mov    rax,rdx
  42bdc1:	shr    rax,0x2
  42bdc5:	mov    QWORD PTR [rbp-0x28],rax
  42bdc9:	mov    rax,QWORD PTR [rbp-0x8]
  42bdcd:	movzx  eax,WORD PTR [rax]
  42bdd0:	mov    rdx,QWORD PTR [rbp-0x30]
  42bdd4:	mov    WORD PTR [rdx],ax
  42bdd7:	mov    eax,DWORD PTR [rbp-0x14]
  42bdda:	leave  
  42bddb:	ret    
  42bddc:	endbr64 
  42bde0:	push   rbp
  42bde1:	mov    rbp,rsp
  42bde4:	sub    rsp,0x20
  42bde8:	mov    eax,edi
  42bdea:	mov    QWORD PTR [rbp-0x20],rsi
  42bdee:	mov    BYTE PTR [rbp-0x14],al
  42bdf1:	movzx  eax,BYTE PTR [rbp-0x14]
  42bdf5:	shr    al,0x7
  42bdf8:	movzx  eax,al
  42bdfb:	mov    DWORD PTR [rbp-0x4],eax
  42bdfe:	cmp    DWORD PTR [rbp-0x4],0x0
  42be02:	je     42be1c <flatcc_json_parser_struct_as_root@@Base+0x1607>
  42be04:	mov    rax,QWORD PTR [rbp-0x20]
  42be08:	lea    rdx,[rax+0x1]
  42be0c:	mov    QWORD PTR [rbp-0x20],rdx
  42be10:	mov    BYTE PTR [rax],0x2d
  42be13:	movzx  eax,BYTE PTR [rbp-0x14]
  42be17:	neg    eax
  42be19:	mov    BYTE PTR [rbp-0x14],al
  42be1c:	movzx  eax,BYTE PTR [rbp-0x14]
  42be20:	movzx  eax,al
  42be23:	mov    rdx,QWORD PTR [rbp-0x20]
  42be27:	mov    rsi,rdx
  42be2a:	mov    edi,eax
  42be2c:	call   42ad0d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  42be31:	mov    edx,eax
  42be33:	mov    eax,DWORD PTR [rbp-0x4]
  42be36:	add    eax,edx
  42be38:	leave  
  42be39:	ret    
  42be3a:	endbr64 
  42be3e:	push   rbp
  42be3f:	mov    rbp,rsp
  42be42:	sub    rsp,0x20
  42be46:	mov    eax,edi
  42be48:	mov    QWORD PTR [rbp-0x20],rsi
  42be4c:	mov    WORD PTR [rbp-0x14],ax
  42be50:	movzx  eax,WORD PTR [rbp-0x14]
  42be54:	shr    ax,0xf
  42be58:	movzx  eax,al
  42be5b:	mov    DWORD PTR [rbp-0x4],eax
  42be5e:	cmp    DWORD PTR [rbp-0x4],0x0
  42be62:	je     42be7d <flatcc_json_parser_struct_as_root@@Base+0x1668>
  42be64:	mov    rax,QWORD PTR [rbp-0x20]
  42be68:	lea    rdx,[rax+0x1]
  42be6c:	mov    QWORD PTR [rbp-0x20],rdx
  42be70:	mov    BYTE PTR [rax],0x2d
  42be73:	movzx  eax,WORD PTR [rbp-0x14]
  42be77:	neg    eax
  42be79:	mov    WORD PTR [rbp-0x14],ax
  42be7d:	movzx  eax,WORD PTR [rbp-0x14]
  42be81:	movzx  eax,ax
  42be84:	mov    rdx,QWORD PTR [rbp-0x20]
  42be88:	mov    rsi,rdx
  42be8b:	mov    edi,eax
  42be8d:	call   42ae5f <flatcc_json_parser_struct_as_root@@Base+0x64a>
  42be92:	mov    edx,eax
  42be94:	mov    eax,DWORD PTR [rbp-0x4]
  42be97:	add    eax,edx
  42be99:	leave  
  42be9a:	ret    
  42be9b:	endbr64 
  42be9f:	push   rbp
  42bea0:	mov    rbp,rsp
  42bea3:	sub    rsp,0x20
  42bea7:	mov    DWORD PTR [rbp-0x14],edi
  42beaa:	mov    QWORD PTR [rbp-0x20],rsi
  42beae:	mov    eax,DWORD PTR [rbp-0x14]
  42beb1:	shr    eax,0x1f
  42beb4:	movzx  eax,al
  42beb7:	mov    DWORD PTR [rbp-0x4],eax
  42beba:	cmp    DWORD PTR [rbp-0x4],0x0
  42bebe:	je     42bed2 <flatcc_json_parser_struct_as_root@@Base+0x16bd>
  42bec0:	mov    rax,QWORD PTR [rbp-0x20]
  42bec4:	lea    rdx,[rax+0x1]
  42bec8:	mov    QWORD PTR [rbp-0x20],rdx
  42becc:	mov    BYTE PTR [rax],0x2d
  42becf:	neg    DWORD PTR [rbp-0x14]
  42bed2:	mov    eax,DWORD PTR [rbp-0x14]
  42bed5:	mov    rdx,QWORD PTR [rbp-0x20]
  42bed9:	mov    rsi,rdx
  42bedc:	mov    edi,eax
  42bede:	call   42b104 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42bee3:	mov    edx,eax
  42bee5:	mov    eax,DWORD PTR [rbp-0x4]
  42bee8:	add    eax,edx
  42beea:	leave  
  42beeb:	ret    
  42beec:	endbr64 
  42bef0:	push   rbp
  42bef1:	mov    rbp,rsp
  42bef4:	sub    rsp,0x20
  42bef8:	mov    QWORD PTR [rbp-0x18],rdi
  42befc:	mov    QWORD PTR [rbp-0x20],rsi
  42bf00:	mov    rax,QWORD PTR [rbp-0x18]
  42bf04:	shr    rax,0x3f
  42bf08:	movzx  eax,al
  42bf0b:	mov    DWORD PTR [rbp-0x4],eax
  42bf0e:	cmp    DWORD PTR [rbp-0x4],0x0
  42bf12:	je     42bf27 <flatcc_json_parser_struct_as_root@@Base+0x1712>
  42bf14:	mov    rax,QWORD PTR [rbp-0x20]
  42bf18:	lea    rdx,[rax+0x1]
  42bf1c:	mov    QWORD PTR [rbp-0x20],rdx
  42bf20:	mov    BYTE PTR [rax],0x2d
  42bf23:	neg    QWORD PTR [rbp-0x18]
  42bf27:	mov    rax,QWORD PTR [rbp-0x18]
  42bf2b:	mov    rdx,QWORD PTR [rbp-0x20]
  42bf2f:	mov    rsi,rdx
  42bf32:	mov    rdi,rax
  42bf35:	call   42b519 <flatcc_json_parser_struct_as_root@@Base+0xd04>
  42bf3a:	mov    edx,eax
  42bf3c:	mov    eax,DWORD PTR [rbp-0x4]
  42bf3f:	add    eax,edx
  42bf41:	leave  
  42bf42:	ret    
  42bf43:	endbr64 
  42bf47:	push   rbp
  42bf48:	mov    rbp,rsp
  42bf4b:	sub    rsp,0x50
  42bf4f:	mov    DWORD PTR [rbp-0x44],edi
  42bf52:	mov    QWORD PTR [rbp-0x50],rsi
  42bf56:	mov    rax,QWORD PTR fs:0x28
  42bf5f:	mov    QWORD PTR [rbp-0x8],rax
  42bf63:	xor    eax,eax
  42bf65:	lea    rax,[rbp-0x20]
  42bf69:	add    rax,0x14
  42bf6d:	mov    QWORD PTR [rbp-0x30],rax
  42bf71:	mov    rax,QWORD PTR [rbp-0x30]
  42bf75:	mov    QWORD PTR [rbp-0x28],rax
  42bf79:	jmp    42bfc6 <flatcc_json_parser_struct_as_root@@Base+0x17b1>
  42bf7b:	sub    QWORD PTR [rbp-0x30],0x2
  42bf80:	mov    ecx,DWORD PTR [rbp-0x44]
  42bf83:	mov    edx,0x51eb851f
  42bf88:	mov    eax,ecx
  42bf8a:	mul    edx
  42bf8c:	mov    eax,edx
  42bf8e:	shr    eax,0x5
  42bf91:	imul   eax,eax,0x64
  42bf94:	sub    ecx,eax
  42bf96:	mov    eax,ecx
  42bf98:	add    eax,eax
  42bf9a:	mov    DWORD PTR [rbp-0x38],eax
  42bf9d:	mov    eax,DWORD PTR [rbp-0x44]
  42bfa0:	mov    edx,0x51eb851f
  42bfa5:	mul    edx
  42bfa7:	mov    eax,edx
  42bfa9:	shr    eax,0x5
  42bfac:	mov    DWORD PTR [rbp-0x44],eax
  42bfaf:	mov    edx,DWORD PTR [rbp-0x38]
  42bfb2:	lea    rax,[rip+0x116c7]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42bfb9:	add    rax,rdx
  42bfbc:	movzx  eax,WORD PTR [rax]
  42bfbf:	mov    rdx,QWORD PTR [rbp-0x30]
  42bfc3:	mov    WORD PTR [rdx],ax
  42bfc6:	cmp    DWORD PTR [rbp-0x44],0x63
  42bfca:	ja     42bf7b <flatcc_json_parser_struct_as_root@@Base+0x1766>
  42bfcc:	sub    QWORD PTR [rbp-0x30],0x2
  42bfd1:	mov    eax,DWORD PTR [rbp-0x44]
  42bfd4:	add    eax,eax
  42bfd6:	mov    DWORD PTR [rbp-0x38],eax
  42bfd9:	mov    edx,DWORD PTR [rbp-0x38]
  42bfdc:	lea    rax,[rip+0x1169d]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42bfe3:	add    rax,rdx
  42bfe6:	movzx  eax,WORD PTR [rax]
  42bfe9:	mov    rdx,QWORD PTR [rbp-0x30]
  42bfed:	mov    WORD PTR [rdx],ax
  42bff0:	cmp    DWORD PTR [rbp-0x44],0x9
  42bff4:	ja     42bffa <flatcc_json_parser_struct_as_root@@Base+0x17e5>
  42bff6:	inc    QWORD PTR [rbp-0x30]
  42bffa:	mov    rax,QWORD PTR [rbp-0x28]
  42bffe:	sub    rax,QWORD PTR [rbp-0x30]
  42c002:	mov    DWORD PTR [rbp-0x34],eax
  42c005:	jmp    42c024 <flatcc_json_parser_struct_as_root@@Base+0x180f>
  42c007:	mov    rax,QWORD PTR [rbp-0x30]
  42c00b:	lea    rdx,[rax+0x1]
  42c00f:	mov    QWORD PTR [rbp-0x30],rdx
  42c013:	mov    rdx,QWORD PTR [rbp-0x50]
  42c017:	lea    rcx,[rdx+0x1]
  42c01b:	mov    QWORD PTR [rbp-0x50],rcx
  42c01f:	movzx  eax,BYTE PTR [rax]
  42c022:	mov    BYTE PTR [rdx],al
  42c024:	mov    rax,QWORD PTR [rbp-0x30]
  42c028:	cmp    rax,QWORD PTR [rbp-0x28]
  42c02c:	jne    42c007 <flatcc_json_parser_struct_as_root@@Base+0x17f2>
  42c02e:	mov    rax,QWORD PTR [rbp-0x50]
  42c032:	mov    BYTE PTR [rax],0x0
  42c035:	mov    eax,DWORD PTR [rbp-0x34]
  42c038:	mov    rsi,QWORD PTR [rbp-0x8]
  42c03c:	xor    rsi,QWORD PTR fs:0x28
  42c045:	je     42c04c <flatcc_json_parser_struct_as_root@@Base+0x1837>
  42c047:	call   4061a0 <__stack_chk_fail@plt>
  42c04c:	leave  
  42c04d:	ret    
  42c04e:	endbr64 
  42c052:	push   rbp
  42c053:	mov    rbp,rsp
  42c056:	sub    rsp,0x20
  42c05a:	mov    DWORD PTR [rbp-0x14],edi
  42c05d:	mov    QWORD PTR [rbp-0x20],rsi
  42c061:	mov    eax,DWORD PTR [rbp-0x14]
  42c064:	shr    eax,0x1f
  42c067:	movzx  eax,al
  42c06a:	mov    DWORD PTR [rbp-0x4],eax
  42c06d:	cmp    DWORD PTR [rbp-0x4],0x0
  42c071:	je     42c085 <flatcc_json_parser_struct_as_root@@Base+0x1870>
  42c073:	mov    rax,QWORD PTR [rbp-0x20]
  42c077:	lea    rdx,[rax+0x1]
  42c07b:	mov    QWORD PTR [rbp-0x20],rdx
  42c07f:	mov    BYTE PTR [rax],0x2d
  42c082:	neg    DWORD PTR [rbp-0x14]
  42c085:	mov    eax,DWORD PTR [rbp-0x14]
  42c088:	mov    rdx,QWORD PTR [rbp-0x20]
  42c08c:	mov    rsi,rdx
  42c08f:	mov    edi,eax
  42c091:	call   42bf43 <flatcc_json_parser_struct_as_root@@Base+0x172e>
  42c096:	mov    edx,eax
  42c098:	mov    eax,DWORD PTR [rbp-0x4]
  42c09b:	add    eax,edx
  42c09d:	leave  
  42c09e:	ret    
  42c09f:	endbr64 
  42c0a3:	push   rbp
  42c0a4:	mov    rbp,rsp
  42c0a7:	sub    rsp,0x50
  42c0ab:	mov    QWORD PTR [rbp-0x48],rdi
  42c0af:	mov    QWORD PTR [rbp-0x50],rsi
  42c0b3:	mov    rax,QWORD PTR fs:0x28
  42c0bc:	mov    QWORD PTR [rbp-0x8],rax
  42c0c0:	xor    eax,eax
  42c0c2:	lea    rax,[rbp-0x20]
  42c0c6:	add    rax,0x14
  42c0ca:	mov    QWORD PTR [rbp-0x30],rax
  42c0ce:	mov    rax,QWORD PTR [rbp-0x30]
  42c0d2:	mov    QWORD PTR [rbp-0x28],rax
  42c0d6:	jmp    42c142 <flatcc_json_parser_struct_as_root@@Base+0x192d>
  42c0d8:	sub    QWORD PTR [rbp-0x30],0x2
  42c0dd:	mov    rcx,QWORD PTR [rbp-0x48]
  42c0e1:	mov    rax,rcx
  42c0e4:	shr    rax,0x2
  42c0e8:	movabs rdx,0x28f5c28f5c28f5c3
  42c0f2:	mul    rdx
  42c0f5:	mov    rax,rdx
  42c0f8:	shr    rax,0x2
  42c0fc:	imul   rax,rax,0x64
  42c100:	sub    rcx,rax
  42c103:	mov    rax,rcx
  42c106:	add    eax,eax
  42c108:	mov    DWORD PTR [rbp-0x38],eax
  42c10b:	mov    rax,QWORD PTR [rbp-0x48]
  42c10f:	shr    rax,0x2
  42c113:	movabs rdx,0x28f5c28f5c28f5c3
  42c11d:	mul    rdx
  42c120:	mov    rax,rdx
  42c123:	shr    rax,0x2
  42c127:	mov    QWORD PTR [rbp-0x48],rax
  42c12b:	mov    edx,DWORD PTR [rbp-0x38]
  42c12e:	lea    rax,[rip+0x1154b]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42c135:	add    rax,rdx
  42c138:	movzx  eax,WORD PTR [rax]
  42c13b:	mov    rdx,QWORD PTR [rbp-0x30]
  42c13f:	mov    WORD PTR [rdx],ax
  42c142:	cmp    QWORD PTR [rbp-0x48],0x63
  42c147:	ja     42c0d8 <flatcc_json_parser_struct_as_root@@Base+0x18c3>
  42c149:	sub    QWORD PTR [rbp-0x30],0x2
  42c14e:	mov    rax,QWORD PTR [rbp-0x48]
  42c152:	add    eax,eax
  42c154:	mov    DWORD PTR [rbp-0x38],eax
  42c157:	mov    edx,DWORD PTR [rbp-0x38]
  42c15a:	lea    rax,[rip+0x1151f]        # 43d680 <flatcc_builder_padding_base@@Base+0x2700>
  42c161:	add    rax,rdx
  42c164:	movzx  eax,WORD PTR [rax]
  42c167:	mov    rdx,QWORD PTR [rbp-0x30]
  42c16b:	mov    WORD PTR [rdx],ax
  42c16e:	cmp    QWORD PTR [rbp-0x48],0x9
  42c173:	ja     42c179 <flatcc_json_parser_struct_as_root@@Base+0x1964>
  42c175:	inc    QWORD PTR [rbp-0x30]
  42c179:	mov    rax,QWORD PTR [rbp-0x28]
  42c17d:	sub    rax,QWORD PTR [rbp-0x30]
  42c181:	mov    DWORD PTR [rbp-0x34],eax
  42c184:	jmp    42c1a3 <flatcc_json_parser_struct_as_root@@Base+0x198e>
  42c186:	mov    rax,QWORD PTR [rbp-0x30]
  42c18a:	lea    rdx,[rax+0x1]
  42c18e:	mov    QWORD PTR [rbp-0x30],rdx
  42c192:	mov    rdx,QWORD PTR [rbp-0x50]
  42c196:	lea    rcx,[rdx+0x1]
  42c19a:	mov    QWORD PTR [rbp-0x50],rcx
  42c19e:	movzx  eax,BYTE PTR [rax]
  42c1a1:	mov    BYTE PTR [rdx],al
  42c1a3:	mov    rax,QWORD PTR [rbp-0x30]
  42c1a7:	cmp    rax,QWORD PTR [rbp-0x28]
  42c1ab:	jne    42c186 <flatcc_json_parser_struct_as_root@@Base+0x1971>
  42c1ad:	mov    rax,QWORD PTR [rbp-0x50]
  42c1b1:	mov    BYTE PTR [rax],0x0
  42c1b4:	mov    eax,DWORD PTR [rbp-0x34]
  42c1b7:	mov    rsi,QWORD PTR [rbp-0x8]
  42c1bb:	xor    rsi,QWORD PTR fs:0x28
  42c1c4:	je     42c1cb <flatcc_json_parser_struct_as_root@@Base+0x19b6>
  42c1c6:	call   4061a0 <__stack_chk_fail@plt>
  42c1cb:	leave  
  42c1cc:	ret    
  42c1cd:	endbr64 
  42c1d1:	push   rbp
  42c1d2:	mov    rbp,rsp
  42c1d5:	sub    rsp,0x20
  42c1d9:	mov    QWORD PTR [rbp-0x18],rdi
  42c1dd:	mov    QWORD PTR [rbp-0x20],rsi
  42c1e1:	mov    rax,QWORD PTR [rbp-0x18]
  42c1e5:	shr    rax,0x3f
  42c1e9:	movzx  eax,al
  42c1ec:	mov    DWORD PTR [rbp-0x4],eax
  42c1ef:	cmp    DWORD PTR [rbp-0x4],0x0
  42c1f3:	je     42c208 <flatcc_json_parser_struct_as_root@@Base+0x19f3>
  42c1f5:	mov    rax,QWORD PTR [rbp-0x20]
  42c1f9:	lea    rdx,[rax+0x1]
  42c1fd:	mov    QWORD PTR [rbp-0x20],rdx
  42c201:	mov    BYTE PTR [rax],0x2d
  42c204:	neg    QWORD PTR [rbp-0x18]
  42c208:	mov    rax,QWORD PTR [rbp-0x18]
  42c20c:	mov    rdx,QWORD PTR [rbp-0x20]
  42c210:	mov    rsi,rdx
  42c213:	mov    rdi,rax
  42c216:	call   42c09f <flatcc_json_parser_struct_as_root@@Base+0x188a>
  42c21b:	mov    edx,eax
  42c21d:	mov    eax,DWORD PTR [rbp-0x4]
  42c220:	add    eax,edx
  42c222:	leave  
  42c223:	ret    
  42c224:	endbr64 
  42c228:	push   rbp
  42c229:	mov    rbp,rsp
  42c22c:	vmovsd QWORD PTR [rbp-0x18],xmm0
  42c231:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  42c236:	vmovsd QWORD PTR [rbp-0x8],xmm0
  42c23b:	mov    rax,QWORD PTR [rbp-0x8]
  42c23f:	pop    rbp
  42c240:	ret    
  42c241:	endbr64 
  42c245:	push   rbp
  42c246:	mov    rbp,rsp
  42c249:	mov    QWORD PTR [rbp-0x18],rdi
  42c24d:	mov    rax,QWORD PTR [rbp-0x18]
  42c251:	mov    QWORD PTR [rbp-0x8],rax
  42c255:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  42c25a:	vmovq  rax,xmm0
  42c25f:	vmovq  xmm0,rax
  42c264:	pop    rbp
  42c265:	ret    
  42c266:	endbr64 
  42c26a:	push   rbp
  42c26b:	mov    rbp,rsp
  42c26e:	vmovsd QWORD PTR [rbp-0x18],xmm0
  42c273:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  42c278:	vcvttsd2si eax,xmm0
  42c27c:	mov    DWORD PTR [rbp-0x4],eax
  42c27f:	vxorpd xmm0,xmm0,xmm0
  42c283:	vcomisd xmm0,QWORD PTR [rbp-0x18]
  42c288:	jbe    42c28f <flatcc_json_parser_struct_as_root@@Base+0x1a7a>
  42c28a:	mov    eax,DWORD PTR [rbp-0x4]
  42c28d:	jmp    42c2bb <flatcc_json_parser_struct_as_root@@Base+0x1aa6>
  42c28f:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x4]
  42c294:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  42c299:	vsubsd xmm0,xmm1,xmm0
  42c29d:	vxorpd xmm1,xmm1,xmm1
  42c2a1:	vucomisd xmm0,xmm1
  42c2a5:	jp     42c2b1 <flatcc_json_parser_struct_as_root@@Base+0x1a9c>
  42c2a7:	vxorpd xmm1,xmm1,xmm1
  42c2ab:	vucomisd xmm0,xmm1
  42c2af:	je     42c2b8 <flatcc_json_parser_struct_as_root@@Base+0x1aa3>
  42c2b1:	mov    eax,DWORD PTR [rbp-0x4]
  42c2b4:	inc    eax
  42c2b6:	jmp    42c2bb <flatcc_json_parser_struct_as_root@@Base+0x1aa6>
  42c2b8:	mov    eax,DWORD PTR [rbp-0x4]
  42c2bb:	pop    rbp
  42c2bc:	ret    
  42c2bd:	endbr64 
  42c2c1:	push   rbp
  42c2c2:	mov    rbp,rsp
  42c2c5:	sub    rsp,0x20
  42c2c9:	mov    DWORD PTR [rbp-0x14],edi
  42c2cc:	mov    QWORD PTR [rbp-0x20],rsi
  42c2d0:	mov    eax,DWORD PTR [rbp-0x14]
  42c2d3:	add    eax,0x3f
  42c2d6:	vcvtsi2sd xmm0,xmm0,eax
  42c2da:	vmovsd xmm1,QWORD PTR [rip+0x12406]        # 43e6e8 <flatcc_builder_padding_base@@Base+0x3768>
  42c2e2:	vmulsd xmm2,xmm0,xmm1
  42c2e6:	vmovq  rax,xmm2
  42c2eb:	vmovq  xmm0,rax
  42c2f0:	call   42c266 <flatcc_json_parser_struct_as_root@@Base+0x1a51>
  42c2f5:	mov    DWORD PTR [rbp-0x8],eax
  42c2f8:	mov    eax,DWORD PTR [rbp-0x8]
  42c2fb:	add    eax,0x15b
  42c300:	lea    edx,[rax+0x7]
  42c303:	test   eax,eax
  42c305:	cmovs  eax,edx
  42c308:	sar    eax,0x3
  42c30b:	inc    eax
  42c30d:	mov    DWORD PTR [rbp-0x4],eax
  42c310:	mov    eax,DWORD PTR [rbp-0x4]
  42c313:	cdqe   
  42c315:	shl    rax,0x4
  42c319:	mov    rdx,rax
  42c31c:	lea    rax,[rip+0x114dd]        # 43d800 <flatcc_builder_padding_base@@Base+0x2880>
  42c323:	mov    rdx,QWORD PTR [rdx+rax*1]
  42c327:	mov    rax,QWORD PTR [rbp-0x20]
  42c32b:	mov    QWORD PTR [rax],rdx
  42c32e:	mov    eax,DWORD PTR [rbp-0x4]
  42c331:	cdqe   
  42c333:	shl    rax,0x4
  42c337:	mov    rdx,rax
  42c33a:	lea    rax,[rip+0x114c7]        # 43d808 <flatcc_builder_padding_base@@Base+0x2888>
  42c341:	movzx  eax,WORD PTR [rdx+rax*1]
  42c345:	movsx  edx,ax
  42c348:	mov    rax,QWORD PTR [rbp-0x20]
  42c34c:	mov    DWORD PTR [rax+0x8],edx
  42c34f:	mov    eax,DWORD PTR [rbp-0x4]
  42c352:	cdqe   
  42c354:	shl    rax,0x4
  42c358:	mov    rdx,rax
  42c35b:	lea    rax,[rip+0x114a8]        # 43d80a <flatcc_builder_padding_base@@Base+0x288a>
  42c362:	movzx  eax,WORD PTR [rdx+rax*1]
  42c366:	cwde   
  42c367:	leave  
  42c368:	ret    
  42c369:	endbr64 
  42c36d:	push   rbp
  42c36e:	mov    rbp,rsp
  42c371:	sub    rsp,0x30
  42c375:	mov    rax,rdi
  42c378:	mov    r8,rsi
  42c37b:	mov    rsi,rax
  42c37e:	mov    rdi,rdx
  42c381:	mov    rdi,r8
  42c384:	mov    QWORD PTR [rbp-0x20],rsi
  42c388:	mov    QWORD PTR [rbp-0x18],rdi
  42c38c:	mov    QWORD PTR [rbp-0x30],rdx
  42c390:	mov    QWORD PTR [rbp-0x28],rcx
  42c394:	mov    rdx,QWORD PTR [rbp-0x20]
  42c398:	mov    rax,QWORD PTR [rbp-0x30]
  42c39c:	sub    rdx,rax
  42c39f:	mov    rax,rdx
  42c3a2:	mov    QWORD PTR [rbp-0x10],rax
  42c3a6:	mov    eax,DWORD PTR [rbp-0x18]
  42c3a9:	mov    DWORD PTR [rbp-0x8],eax
  42c3ac:	mov    edx,DWORD PTR [rbp-0x18]
  42c3af:	mov    eax,DWORD PTR [rbp-0x28]
  42c3b2:	cmp    edx,eax
  42c3b4:	jne    42c3c3 <flatcc_json_parser_struct_as_root@@Base+0x1bae>
  42c3b6:	mov    rdx,QWORD PTR [rbp-0x20]
  42c3ba:	mov    rax,QWORD PTR [rbp-0x30]
  42c3be:	cmp    rdx,rax
  42c3c1:	jae    42c3e2 <flatcc_json_parser_struct_as_root@@Base+0x1bcd>
  42c3c3:	lea    rcx,[rip+0x11dc6]        # 43e190 <flatcc_builder_padding_base@@Base+0x3210>
  42c3ca:	mov    edx,0xef
  42c3cf:	lea    rsi,[rip+0x1199a]        # 43dd70 <flatcc_builder_padding_base@@Base+0x2df0>
  42c3d6:	lea    rdi,[rip+0x11a03]        # 43dde0 <flatcc_builder_padding_base@@Base+0x2e60>
  42c3dd:	call   4061b0 <__assert_fail@plt>
  42c3e2:	mov    rax,QWORD PTR [rbp-0x10]
  42c3e6:	mov    rdx,QWORD PTR [rbp-0x8]
  42c3ea:	leave  
  42c3eb:	ret    
  42c3ec:	endbr64 
  42c3f0:	push   rbp
  42c3f1:	mov    rbp,rsp
  42c3f4:	sub    rsp,0x8
  42c3f8:	mov    rax,rdi
  42c3fb:	mov    r8,rsi
  42c3fe:	mov    rsi,rax
  42c401:	mov    rdi,rdx
  42c404:	mov    rdi,r8
  42c407:	mov    QWORD PTR [rbp-0x70],rsi
  42c40b:	mov    QWORD PTR [rbp-0x68],rdi
  42c40f:	mov    QWORD PTR [rbp-0x80],rdx
  42c413:	mov    QWORD PTR [rbp-0x78],rcx
  42c417:	mov    rax,QWORD PTR [rbp-0x70]
  42c41b:	shr    rax,0x20
  42c41f:	mov    QWORD PTR [rbp-0x58],rax
  42c423:	mov    rax,QWORD PTR [rbp-0x70]
  42c427:	and    eax,0xffffffff
  42c42a:	mov    QWORD PTR [rbp-0x50],rax
  42c42e:	mov    rax,QWORD PTR [rbp-0x80]
  42c432:	shr    rax,0x20
  42c436:	mov    QWORD PTR [rbp-0x48],rax
  42c43a:	mov    rax,QWORD PTR [rbp-0x80]
  42c43e:	and    eax,0xffffffff
  42c441:	mov    QWORD PTR [rbp-0x40],rax
  42c445:	mov    rax,QWORD PTR [rbp-0x58]
  42c449:	imul   rax,QWORD PTR [rbp-0x48]
  42c44e:	mov    QWORD PTR [rbp-0x38],rax
  42c452:	mov    rax,QWORD PTR [rbp-0x50]
  42c456:	imul   rax,QWORD PTR [rbp-0x48]
  42c45b:	mov    QWORD PTR [rbp-0x30],rax
  42c45f:	mov    rax,QWORD PTR [rbp-0x58]
  42c463:	imul   rax,QWORD PTR [rbp-0x40]
  42c468:	mov    QWORD PTR [rbp-0x28],rax
  42c46c:	mov    rax,QWORD PTR [rbp-0x50]
  42c470:	imul   rax,QWORD PTR [rbp-0x40]
  42c475:	mov    QWORD PTR [rbp-0x20],rax
  42c479:	mov    rax,QWORD PTR [rbp-0x20]
  42c47d:	shr    rax,0x20
  42c481:	mov    rdx,QWORD PTR [rbp-0x28]
  42c485:	mov    edx,edx
  42c487:	add    rax,rdx
  42c48a:	mov    rdx,QWORD PTR [rbp-0x30]
  42c48e:	mov    edx,edx
  42c490:	add    rax,rdx
  42c493:	mov    QWORD PTR [rbp-0x18],rax
  42c497:	mov    eax,0x80000000
  42c49c:	add    QWORD PTR [rbp-0x18],rax
  42c4a0:	mov    rax,QWORD PTR [rbp-0x28]
  42c4a4:	shr    rax,0x20
  42c4a8:	mov    rdx,rax
  42c4ab:	mov    rax,QWORD PTR [rbp-0x38]
  42c4af:	add    rdx,rax
  42c4b2:	mov    rax,QWORD PTR [rbp-0x30]
  42c4b6:	shr    rax,0x20
  42c4ba:	add    rdx,rax
  42c4bd:	mov    rax,QWORD PTR [rbp-0x18]
  42c4c1:	shr    rax,0x20
  42c4c5:	add    rax,rdx
  42c4c8:	mov    QWORD PTR [rbp-0x10],rax
  42c4cc:	mov    edx,DWORD PTR [rbp-0x68]
  42c4cf:	mov    eax,DWORD PTR [rbp-0x78]
  42c4d2:	add    eax,edx
  42c4d4:	add    eax,0x40
  42c4d7:	mov    DWORD PTR [rbp-0x8],eax
  42c4da:	mov    rax,QWORD PTR [rbp-0x10]
  42c4de:	mov    rdx,QWORD PTR [rbp-0x8]
  42c4e2:	leave  
  42c4e3:	ret    
  42c4e4:	endbr64 
  42c4e8:	push   rbp
  42c4e9:	mov    rbp,rsp
  42c4ec:	sub    rsp,0x10
  42c4f0:	mov    rax,rdi
  42c4f3:	mov    rcx,rsi
  42c4f6:	mov    rdx,rcx
  42c4f9:	mov    QWORD PTR [rbp-0x10],rax
  42c4fd:	mov    QWORD PTR [rbp-0x8],rdx
  42c501:	mov    rax,QWORD PTR [rbp-0x10]
  42c505:	test   rax,rax
  42c508:	jne    42c53e <flatcc_json_parser_struct_as_root@@Base+0x1d29>
  42c50a:	lea    rcx,[rip+0x11c9f]        # 43e1b0 <flatcc_builder_padding_base@@Base+0x3230>
  42c511:	mov    edx,0x104
  42c516:	lea    rsi,[rip+0x11853]        # 43dd70 <flatcc_builder_padding_base@@Base+0x2df0>
  42c51d:	lea    rdi,[rip+0x118d5]        # 43ddf9 <flatcc_builder_padding_base@@Base+0x2e79>
  42c524:	call   4061b0 <__assert_fail@plt>
  42c529:	mov    rax,QWORD PTR [rbp-0x10]
  42c52d:	shl    rax,0xa
  42c531:	mov    QWORD PTR [rbp-0x10],rax
  42c535:	mov    eax,DWORD PTR [rbp-0x8]
  42c538:	sub    eax,0xa
  42c53b:	mov    DWORD PTR [rbp-0x8],eax
  42c53e:	mov    rdx,QWORD PTR [rbp-0x10]
  42c542:	movabs rax,0xffc0000000000000
  42c54c:	and    rax,rdx
  42c54f:	test   rax,rax
  42c552:	je     42c529 <flatcc_json_parser_struct_as_root@@Base+0x1d14>
  42c554:	jmp    42c569 <flatcc_json_parser_struct_as_root@@Base+0x1d54>
  42c556:	mov    rax,QWORD PTR [rbp-0x10]
  42c55a:	add    rax,rax
  42c55d:	mov    QWORD PTR [rbp-0x10],rax
  42c561:	mov    eax,DWORD PTR [rbp-0x8]
  42c564:	dec    eax
  42c566:	mov    DWORD PTR [rbp-0x8],eax
  42c569:	mov    rax,QWORD PTR [rbp-0x10]
  42c56d:	test   rax,rax
  42c570:	jns    42c556 <flatcc_json_parser_struct_as_root@@Base+0x1d41>
  42c572:	mov    rax,QWORD PTR [rbp-0x10]
  42c576:	mov    rdx,QWORD PTR [rbp-0x8]
  42c57a:	leave  
  42c57b:	ret    
  42c57c:	endbr64 
  42c580:	push   rbp
  42c581:	mov    rbp,rsp
  42c584:	sub    rsp,0x28
  42c588:	vmovsd QWORD PTR [rbp-0x28],xmm0
  42c58d:	mov    rax,QWORD PTR [rbp-0x28]
  42c591:	vmovq  xmm0,rax
  42c596:	call   42c224 <flatcc_json_parser_struct_as_root@@Base+0x1a0f>
  42c59b:	mov    QWORD PTR [rbp-0x18],rax
  42c59f:	movabs rax,0x7ff0000000000000
  42c5a9:	and    rax,QWORD PTR [rbp-0x18]
  42c5ad:	test   rax,rax
  42c5b0:	jne    42c5cd <flatcc_json_parser_struct_as_root@@Base+0x1db8>
  42c5b2:	movabs rax,0xfffffffffffff
  42c5bc:	and    rax,QWORD PTR [rbp-0x18]
  42c5c0:	mov    QWORD PTR [rbp-0x10],rax
  42c5c4:	mov    DWORD PTR [rbp-0x8],0xfffffbce
  42c5cb:	jmp    42c604 <flatcc_json_parser_struct_as_root@@Base+0x1def>
  42c5cd:	movabs rax,0xfffffffffffff
  42c5d7:	and    rax,QWORD PTR [rbp-0x18]
  42c5db:	mov    rdx,rax
  42c5de:	movabs rax,0x10000000000000
  42c5e8:	add    rax,rdx
  42c5eb:	mov    QWORD PTR [rbp-0x10],rax
  42c5ef:	mov    rax,QWORD PTR [rbp-0x18]
  42c5f3:	shr    rax,0x34
  42c5f7:	and    eax,0x7ff
  42c5fc:	sub    eax,0x433
  42c601:	mov    DWORD PTR [rbp-0x8],eax
  42c604:	mov    rax,QWORD PTR [rbp-0x10]
  42c608:	mov    rdx,QWORD PTR [rbp-0x8]
  42c60c:	leave  
  42c60d:	ret    
  42c60e:	endbr64 
  42c612:	push   rbp
  42c613:	mov    rbp,rsp
  42c616:	sub    rsp,0x50
  42c61a:	mov    rax,rdi
  42c61d:	mov    rcx,rsi
  42c620:	mov    rdx,rcx
  42c623:	mov    QWORD PTR [rbp-0x50],rax
  42c627:	mov    QWORD PTR [rbp-0x48],rdx
  42c62b:	movabs rax,0x10000000000000
  42c635:	mov    QWORD PTR [rbp-0x20],rax
  42c639:	movabs rax,0xfffffffffffff
  42c643:	mov    QWORD PTR [rbp-0x18],rax
  42c647:	mov    DWORD PTR [rbp-0x34],0xfffffbce
  42c64e:	mov    DWORD PTR [rbp-0x30],0x433
  42c655:	mov    DWORD PTR [rbp-0x2c],0x34
  42c65c:	mov    rax,QWORD PTR [rbp-0x50]
  42c660:	mov    rdx,QWORD PTR [rbp-0x48]
  42c664:	mov    QWORD PTR [rbp-0x10],rax
  42c668:	mov    QWORD PTR [rbp-0x8],rdx
  42c66c:	jmp    42c681 <flatcc_json_parser_struct_as_root@@Base+0x1e6c>
  42c66e:	mov    rax,QWORD PTR [rbp-0x10]
  42c672:	shr    rax,1
  42c675:	mov    QWORD PTR [rbp-0x10],rax
  42c679:	mov    eax,DWORD PTR [rbp-0x8]
  42c67c:	inc    eax
  42c67e:	mov    DWORD PTR [rbp-0x8],eax
  42c681:	mov    rax,QWORD PTR [rbp-0x10]
  42c685:	mov    rcx,QWORD PTR [rbp-0x20]
  42c689:	mov    rdx,QWORD PTR [rbp-0x18]
  42c68d:	add    rdx,rcx
  42c690:	cmp    rax,rdx
  42c693:	ja     42c66e <flatcc_json_parser_struct_as_root@@Base+0x1e59>
  42c695:	mov    eax,DWORD PTR [rbp-0x8]
  42c698:	cmp    DWORD PTR [rbp-0x34],eax
  42c69b:	jle    42c6b9 <flatcc_json_parser_struct_as_root@@Base+0x1ea4>
  42c69d:	mov    rax,QWORD PTR [rip+0x1203c]        # 43e6e0 <flatcc_builder_padding_base@@Base+0x3760>
  42c6a4:	jmp    42c722 <flatcc_json_parser_struct_as_root@@Base+0x1f0d>
  42c6a6:	mov    rax,QWORD PTR [rbp-0x10]
  42c6aa:	add    rax,rax
  42c6ad:	mov    QWORD PTR [rbp-0x10],rax
  42c6b1:	mov    eax,DWORD PTR [rbp-0x8]
  42c6b4:	dec    eax
  42c6b6:	mov    DWORD PTR [rbp-0x8],eax
  42c6b9:	mov    eax,DWORD PTR [rbp-0x8]
  42c6bc:	cmp    DWORD PTR [rbp-0x34],eax
  42c6bf:	jge    42c6ce <flatcc_json_parser_struct_as_root@@Base+0x1eb9>
  42c6c1:	mov    rax,QWORD PTR [rbp-0x10]
  42c6c5:	and    rax,QWORD PTR [rbp-0x20]
  42c6c9:	test   rax,rax
  42c6cc:	je     42c6a6 <flatcc_json_parser_struct_as_root@@Base+0x1e91>
  42c6ce:	mov    eax,DWORD PTR [rbp-0x8]
  42c6d1:	cmp    DWORD PTR [rbp-0x34],eax
  42c6d4:	jne    42c6ed <flatcc_json_parser_struct_as_root@@Base+0x1ed8>
  42c6d6:	mov    rax,QWORD PTR [rbp-0x10]
  42c6da:	and    rax,QWORD PTR [rbp-0x20]
  42c6de:	test   rax,rax
  42c6e1:	jne    42c6ed <flatcc_json_parser_struct_as_root@@Base+0x1ed8>
  42c6e3:	mov    QWORD PTR [rbp-0x28],0x0
  42c6eb:	jmp    42c6fb <flatcc_json_parser_struct_as_root@@Base+0x1ee6>
  42c6ed:	mov    edx,DWORD PTR [rbp-0x8]
  42c6f0:	mov    eax,DWORD PTR [rbp-0x30]
  42c6f3:	add    eax,edx
  42c6f5:	cdqe   
  42c6f7:	mov    QWORD PTR [rbp-0x28],rax
  42c6fb:	mov    rax,QWORD PTR [rbp-0x10]
  42c6ff:	and    rax,QWORD PTR [rbp-0x18]
  42c703:	mov    rdx,rax
  42c706:	mov    eax,DWORD PTR [rbp-0x2c]
  42c709:	mov    rcx,QWORD PTR [rbp-0x28]
  42c70d:	shlx   rax,rcx,rax
  42c712:	or     rax,rdx
  42c715:	mov    rdi,rax
  42c718:	call   42c241 <flatcc_json_parser_struct_as_root@@Base+0x1a2c>
  42c71d:	vmovq  rax,xmm0
  42c722:	vmovq  xmm0,rax
  42c727:	leave  
  42c728:	ret    
  42c729:	endbr64 
  42c72d:	push   rbp
  42c72e:	mov    rbp,rsp
  42c731:	mov    DWORD PTR [rbp-0x14],edi
  42c734:	mov    DWORD PTR [rbp-0x18],esi
  42c737:	mov    QWORD PTR [rbp-0x20],rdx
  42c73b:	mov    eax,DWORD PTR [rbp-0x18]
  42c73e:	inc    eax
  42c740:	imul   eax,eax,0x4d1
  42c746:	sar    eax,0xc
  42c749:	inc    eax
  42c74b:	mov    DWORD PTR [rbp-0x4],eax
  42c74e:	mov    eax,DWORD PTR [rbp-0x4]
  42c751:	cdqe   
  42c753:	lea    rdx,[rax*4+0x0]
  42c75b:	lea    rax,[rip+0x116be]        # 43de20 <flatcc_builder_padding_base@@Base+0x2ea0>
  42c762:	mov    eax,DWORD PTR [rdx+rax*1]
  42c765:	cmp    DWORD PTR [rbp-0x14],eax
  42c768:	jae    42c76d <flatcc_json_parser_struct_as_root@@Base+0x1f58>
  42c76a:	dec    DWORD PTR [rbp-0x4]
  42c76d:	mov    eax,DWORD PTR [rbp-0x4]
  42c770:	cdqe   
  42c772:	lea    rdx,[rax*4+0x0]
  42c77a:	lea    rax,[rip+0x1169f]        # 43de20 <flatcc_builder_padding_base@@Base+0x2ea0>
  42c781:	mov    edx,DWORD PTR [rdx+rax*1]
  42c784:	mov    rax,QWORD PTR [rbp-0x20]
  42c788:	mov    DWORD PTR [rax],edx
  42c78a:	mov    eax,DWORD PTR [rbp-0x4]
  42c78d:	pop    rbp
  42c78e:	ret    
  42c78f:	endbr64 
  42c793:	push   rbp
  42c794:	mov    rbp,rsp
  42c797:	mov    QWORD PTR [rbp-0x18],rdi
  42c79b:	mov    DWORD PTR [rbp-0x1c],esi
  42c79e:	mov    QWORD PTR [rbp-0x28],rdx
  42c7a2:	mov    QWORD PTR [rbp-0x30],rcx
  42c7a6:	mov    QWORD PTR [rbp-0x38],r8
  42c7aa:	mov    QWORD PTR [rbp-0x40],r9
  42c7ae:	mov    rax,QWORD PTR [rbp-0x28]
  42c7b2:	sub    rax,QWORD PTR [rbp+0x10]
  42c7b6:	mov    QWORD PTR [rbp-0x10],rax
  42c7ba:	mov    rdx,QWORD PTR [rbp-0x28]
  42c7be:	mov    rax,QWORD PTR [rbp+0x10]
  42c7c2:	add    rax,rdx
  42c7c5:	mov    QWORD PTR [rbp-0x8],rax
  42c7c9:	jmp    42c7ea <flatcc_json_parser_struct_as_root@@Base+0x1fd5>
  42c7cb:	mov    eax,DWORD PTR [rbp-0x1c]
  42c7ce:	cdqe   
  42c7d0:	lea    rdx,[rax-0x1]
  42c7d4:	mov    rax,QWORD PTR [rbp-0x18]
  42c7d8:	add    rax,rdx
  42c7db:	movzx  edx,BYTE PTR [rax]
  42c7de:	dec    edx
  42c7e0:	mov    BYTE PTR [rax],dl
  42c7e2:	mov    rax,QWORD PTR [rbp-0x40]
  42c7e6:	add    QWORD PTR [rbp-0x38],rax
  42c7ea:	mov    rax,QWORD PTR [rbp-0x38]
  42c7ee:	cmp    rax,QWORD PTR [rbp-0x10]
  42c7f2:	jae    42c832 <flatcc_json_parser_struct_as_root@@Base+0x201d>
  42c7f4:	mov    rax,QWORD PTR [rbp-0x30]
  42c7f8:	sub    rax,QWORD PTR [rbp-0x38]
  42c7fc:	cmp    QWORD PTR [rbp-0x40],rax
  42c800:	ja     42c832 <flatcc_json_parser_struct_as_root@@Base+0x201d>
  42c802:	mov    rdx,QWORD PTR [rbp-0x38]
  42c806:	mov    rax,QWORD PTR [rbp-0x40]
  42c80a:	add    rax,rdx
  42c80d:	cmp    QWORD PTR [rbp-0x10],rax
  42c811:	ja     42c7cb <flatcc_json_parser_struct_as_root@@Base+0x1fb6>
  42c813:	mov    rax,QWORD PTR [rbp-0x10]
  42c817:	sub    rax,QWORD PTR [rbp-0x38]
  42c81b:	mov    rdx,rax
  42c81e:	mov    rcx,QWORD PTR [rbp-0x38]
  42c822:	mov    rax,QWORD PTR [rbp-0x40]
  42c826:	add    rax,rcx
  42c829:	sub    rax,QWORD PTR [rbp-0x10]
  42c82d:	cmp    rdx,rax
  42c830:	jae    42c7cb <flatcc_json_parser_struct_as_root@@Base+0x1fb6>
  42c832:	mov    rax,QWORD PTR [rbp-0x38]
  42c836:	cmp    rax,QWORD PTR [rbp-0x8]
  42c83a:	jae    42c881 <flatcc_json_parser_struct_as_root@@Base+0x206c>
  42c83c:	mov    rax,QWORD PTR [rbp-0x30]
  42c840:	sub    rax,QWORD PTR [rbp-0x38]
  42c844:	cmp    QWORD PTR [rbp-0x40],rax
  42c848:	ja     42c881 <flatcc_json_parser_struct_as_root@@Base+0x206c>
  42c84a:	mov    rdx,QWORD PTR [rbp-0x38]
  42c84e:	mov    rax,QWORD PTR [rbp-0x40]
  42c852:	add    rax,rdx
  42c855:	cmp    QWORD PTR [rbp-0x8],rax
  42c859:	ja     42c87a <flatcc_json_parser_struct_as_root@@Base+0x2065>
  42c85b:	mov    rax,QWORD PTR [rbp-0x8]
  42c85f:	sub    rax,QWORD PTR [rbp-0x38]
  42c863:	mov    rdx,rax
  42c866:	mov    rcx,QWORD PTR [rbp-0x38]
  42c86a:	mov    rax,QWORD PTR [rbp-0x40]
  42c86e:	add    rax,rcx
  42c871:	sub    rax,QWORD PTR [rbp-0x8]
  42c875:	cmp    rdx,rax
  42c878:	jbe    42c881 <flatcc_json_parser_struct_as_root@@Base+0x206c>
  42c87a:	mov    eax,0x0
  42c87f:	jmp    42c8b3 <flatcc_json_parser_struct_as_root@@Base+0x209e>
  42c881:	mov    rax,QWORD PTR [rbp+0x10]
  42c885:	add    rax,rax
  42c888:	cmp    QWORD PTR [rbp-0x38],rax
  42c88c:	jb     42c8ae <flatcc_json_parser_struct_as_root@@Base+0x2099>
  42c88e:	mov    rax,QWORD PTR [rbp+0x10]
  42c892:	lea    rdx,[rax*4+0x0]
  42c89a:	mov    rax,QWORD PTR [rbp-0x30]
  42c89e:	sub    rax,rdx
  42c8a1:	cmp    QWORD PTR [rbp-0x38],rax
  42c8a5:	ja     42c8ae <flatcc_json_parser_struct_as_root@@Base+0x2099>
  42c8a7:	mov    eax,0x1
  42c8ac:	jmp    42c8b3 <flatcc_json_parser_struct_as_root@@Base+0x209e>
  42c8ae:	mov    eax,0x0
  42c8b3:	pop    rbp
  42c8b4:	ret    
  42c8b5:	endbr64 
  42c8b9:	push   rbp
  42c8ba:	mov    rbp,rsp
  42c8bd:	push   r12
  42c8bf:	push   rbx
  42c8c0:	sub    rsp,0xd0
  42c8c7:	mov    rax,rdi
  42c8ca:	mov    r10,rsi
  42c8cd:	mov    rsi,rax
  42c8d0:	mov    rdi,rdx
  42c8d3:	mov    rdi,r10
  42c8d6:	mov    QWORD PTR [rbp-0xa0],rsi
  42c8dd:	mov    QWORD PTR [rbp-0x98],rdi
  42c8e4:	mov    QWORD PTR [rbp-0xb0],rdx
  42c8eb:	mov    QWORD PTR [rbp-0xa8],rcx
  42c8f2:	mov    QWORD PTR [rbp-0xc0],r8
  42c8f9:	mov    QWORD PTR [rbp-0xb8],r9
  42c900:	mov    rax,QWORD PTR [rbp+0x10]
  42c904:	mov    QWORD PTR [rbp-0xc8],rax
  42c90b:	mov    rax,QWORD PTR [rbp+0x18]
  42c90f:	mov    QWORD PTR [rbp-0xd0],rax
  42c916:	mov    rax,QWORD PTR [rbp+0x20]
  42c91a:	mov    QWORD PTR [rbp-0xd8],rax
  42c921:	mov    rax,QWORD PTR fs:0x28
  42c92a:	mov    QWORD PTR [rbp-0x18],rax
  42c92e:	xor    eax,eax
  42c930:	mov    QWORD PTR [rbp-0x78],0x1
  42c938:	mov    rax,QWORD PTR [rbp-0xa0]
  42c93f:	sub    rax,QWORD PTR [rbp-0x78]
  42c943:	mov    QWORD PTR [rbp-0x60],rax
  42c947:	mov    eax,DWORD PTR [rbp-0x98]
  42c94d:	mov    DWORD PTR [rbp-0x58],eax
  42c950:	mov    rdx,QWORD PTR [rbp-0xc0]
  42c957:	mov    rax,QWORD PTR [rbp-0x78]
  42c95b:	add    rax,rdx
  42c95e:	mov    QWORD PTR [rbp-0x50],rax
  42c962:	mov    eax,DWORD PTR [rbp-0xb8]
  42c968:	mov    DWORD PTR [rbp-0x48],eax
  42c96b:	mov    rax,QWORD PTR [rbp-0x60]
  42c96f:	mov    rdx,QWORD PTR [rbp-0x58]
  42c973:	mov    rdi,QWORD PTR [rbp-0x50]
  42c977:	mov    rsi,QWORD PTR [rbp-0x48]
  42c97b:	mov    rcx,rdx
  42c97e:	mov    rdx,rax
  42c981:	call   42c369 <flatcc_json_parser_struct_as_root@@Base+0x1b54>
  42c986:	mov    QWORD PTR [rbp-0x40],rax
  42c98a:	mov    QWORD PTR [rbp-0x38],rdx
  42c98e:	mov    eax,DWORD PTR [rbp-0xa8]
  42c994:	neg    eax
  42c996:	mov    edx,0x1
  42c99b:	shlx   rax,rdx,rax
  42c9a0:	mov    QWORD PTR [rbp-0x30],rax
  42c9a4:	mov    eax,DWORD PTR [rbp-0xa8]
  42c9aa:	mov    DWORD PTR [rbp-0x28],eax
  42c9ad:	mov    rdx,QWORD PTR [rbp-0x50]
  42c9b1:	mov    eax,DWORD PTR [rbp-0x28]
  42c9b4:	neg    eax
  42c9b6:	shrx   rax,rdx,rax
  42c9bb:	mov    DWORD PTR [rbp-0x84],eax
  42c9c1:	mov    rax,QWORD PTR [rbp-0x50]
  42c9c5:	mov    rdx,QWORD PTR [rbp-0x30]
  42c9c9:	dec    rdx
  42c9cc:	and    rax,rdx
  42c9cf:	mov    QWORD PTR [rbp-0x70],rax
  42c9d3:	mov    eax,DWORD PTR [rbp-0x28]
  42c9d6:	lea    ecx,[rax+0x40]
  42c9d9:	lea    rdx,[rbp-0x88]
  42c9e0:	mov    eax,DWORD PTR [rbp-0x84]
  42c9e6:	mov    esi,ecx
  42c9e8:	mov    edi,eax
  42c9ea:	call   42c729 <flatcc_json_parser_struct_as_root@@Base+0x1f14>
  42c9ef:	mov    edx,eax
  42c9f1:	mov    rax,QWORD PTR [rbp-0xd8]
  42c9f8:	mov    DWORD PTR [rax],edx
  42c9fa:	mov    rax,QWORD PTR [rbp-0xd0]
  42ca01:	mov    DWORD PTR [rax],0x0
  42ca07:	jmp    42cb34 <flatcc_json_parser_struct_as_root@@Base+0x231f>
  42ca0c:	mov    ebx,DWORD PTR [rbp-0x88]
  42ca12:	mov    eax,DWORD PTR [rbp-0x84]
  42ca18:	mov    edx,0x0
  42ca1d:	div    ebx
  42ca1f:	mov    DWORD PTR [rbp-0x80],eax
  42ca22:	mov    eax,DWORD PTR [rbp-0x80]
  42ca25:	lea    ecx,[rax+0x30]
  42ca28:	mov    rax,QWORD PTR [rbp-0xd0]
  42ca2f:	mov    eax,DWORD PTR [rax]
  42ca31:	movsxd rdx,eax
  42ca34:	mov    rax,QWORD PTR [rbp-0xc8]
  42ca3b:	add    rdx,rax
  42ca3e:	mov    eax,ecx
  42ca40:	mov    BYTE PTR [rdx],al
  42ca42:	mov    rax,QWORD PTR [rbp-0xd0]
  42ca49:	mov    eax,DWORD PTR [rax]
  42ca4b:	lea    edx,[rax+0x1]
  42ca4e:	mov    rax,QWORD PTR [rbp-0xd0]
  42ca55:	mov    DWORD PTR [rax],edx
  42ca57:	mov    ecx,DWORD PTR [rbp-0x88]
  42ca5d:	mov    eax,DWORD PTR [rbp-0x84]
  42ca63:	mov    edx,0x0
  42ca68:	div    ecx
  42ca6a:	mov    DWORD PTR [rbp-0x84],edx
  42ca70:	mov    rax,QWORD PTR [rbp-0xd8]
  42ca77:	mov    eax,DWORD PTR [rax]
  42ca79:	lea    edx,[rax-0x1]
  42ca7c:	mov    rax,QWORD PTR [rbp-0xd8]
  42ca83:	mov    DWORD PTR [rax],edx
  42ca85:	mov    edx,DWORD PTR [rbp-0x84]
  42ca8b:	mov    eax,DWORD PTR [rbp-0x28]
  42ca8e:	neg    eax
  42ca90:	shlx   rdx,rdx,rax
  42ca95:	mov    rax,QWORD PTR [rbp-0x70]
  42ca99:	add    rax,rdx
  42ca9c:	mov    QWORD PTR [rbp-0x68],rax
  42caa0:	mov    rax,QWORD PTR [rbp-0x40]
  42caa4:	cmp    QWORD PTR [rbp-0x68],rax
  42caa8:	jae    42cb1c <flatcc_json_parser_struct_as_root@@Base+0x2307>
  42caaa:	mov    eax,DWORD PTR [rbp-0x88]
  42cab0:	mov    edx,eax
  42cab2:	mov    eax,DWORD PTR [rbp-0x28]
  42cab5:	neg    eax
  42cab7:	shlx   r12,rdx,rax
  42cabc:	mov    rbx,QWORD PTR [rbp-0x40]
  42cac0:	mov    rax,QWORD PTR [rbp-0xb0]
  42cac7:	mov    rdx,QWORD PTR [rbp-0xa8]
  42cace:	mov    rdi,QWORD PTR [rbp-0x50]
  42cad2:	mov    rsi,QWORD PTR [rbp-0x48]
  42cad6:	mov    rcx,rdx
  42cad9:	mov    rdx,rax
  42cadc:	call   42c369 <flatcc_json_parser_struct_as_root@@Base+0x1b54>
  42cae1:	mov    rdi,rax
  42cae4:	mov    rax,QWORD PTR [rbp-0xd0]
  42caeb:	mov    esi,DWORD PTR [rax]
  42caed:	mov    rdx,QWORD PTR [rbp-0x68]
  42caf1:	mov    rax,QWORD PTR [rbp-0xc8]
  42caf8:	sub    rsp,0x8
  42cafc:	push   QWORD PTR [rbp-0x78]
  42caff:	mov    r9,r12
  42cb02:	mov    r8,rdx
  42cb05:	mov    rcx,rbx
  42cb08:	mov    rdx,rdi
  42cb0b:	mov    rdi,rax
  42cb0e:	call   42c78f <flatcc_json_parser_struct_as_root@@Base+0x1f7a>
  42cb13:	add    rsp,0x10
  42cb17:	jmp    42cc59 <flatcc_json_parser_struct_as_root@@Base+0x2444>
  42cb1c:	mov    eax,DWORD PTR [rbp-0x88]
  42cb22:	mov    edx,0xcccccccd
  42cb27:	mul    edx
  42cb29:	mov    eax,edx
  42cb2b:	shr    eax,0x3
  42cb2e:	mov    DWORD PTR [rbp-0x88],eax
  42cb34:	mov    rax,QWORD PTR [rbp-0xd8]
  42cb3b:	mov    eax,DWORD PTR [rax]
  42cb3d:	test   eax,eax
  42cb3f:	jg     42ca0c <flatcc_json_parser_struct_as_root@@Base+0x21f7>
  42cb45:	mov    rdx,QWORD PTR [rbp-0x70]
  42cb49:	mov    rax,rdx
  42cb4c:	shl    rax,0x2
  42cb50:	add    rax,rdx
  42cb53:	add    rax,rax
  42cb56:	mov    QWORD PTR [rbp-0x70],rax
  42cb5a:	mov    rdx,QWORD PTR [rbp-0x78]
  42cb5e:	mov    rax,rdx
  42cb61:	shl    rax,0x2
  42cb65:	add    rax,rdx
  42cb68:	add    rax,rax
  42cb6b:	mov    QWORD PTR [rbp-0x78],rax
  42cb6f:	mov    rdx,QWORD PTR [rbp-0x40]
  42cb73:	mov    rax,rdx
  42cb76:	shl    rax,0x2
  42cb7a:	add    rax,rdx
  42cb7d:	add    rax,rax
  42cb80:	mov    QWORD PTR [rbp-0x40],rax
  42cb84:	mov    eax,DWORD PTR [rbp-0x28]
  42cb87:	neg    eax
  42cb89:	mov    rdx,QWORD PTR [rbp-0x70]
  42cb8d:	shrx   rax,rdx,rax
  42cb92:	mov    DWORD PTR [rbp-0x7c],eax
  42cb95:	mov    eax,DWORD PTR [rbp-0x7c]
  42cb98:	lea    ecx,[rax+0x30]
  42cb9b:	mov    rax,QWORD PTR [rbp-0xd0]
  42cba2:	mov    eax,DWORD PTR [rax]
  42cba4:	movsxd rdx,eax
  42cba7:	mov    rax,QWORD PTR [rbp-0xc8]
  42cbae:	add    rdx,rax
  42cbb1:	mov    eax,ecx
  42cbb3:	mov    BYTE PTR [rdx],al
  42cbb5:	mov    rax,QWORD PTR [rbp-0xd0]
  42cbbc:	mov    eax,DWORD PTR [rax]
  42cbbe:	lea    edx,[rax+0x1]
  42cbc1:	mov    rax,QWORD PTR [rbp-0xd0]
  42cbc8:	mov    DWORD PTR [rax],edx
  42cbca:	mov    rax,QWORD PTR [rbp-0x30]
  42cbce:	dec    rax
  42cbd1:	and    QWORD PTR [rbp-0x70],rax
  42cbd5:	mov    rax,QWORD PTR [rbp-0xd8]
  42cbdc:	mov    eax,DWORD PTR [rax]
  42cbde:	lea    edx,[rax-0x1]
  42cbe1:	mov    rax,QWORD PTR [rbp-0xd8]
  42cbe8:	mov    DWORD PTR [rax],edx
  42cbea:	mov    rax,QWORD PTR [rbp-0x40]
  42cbee:	cmp    QWORD PTR [rbp-0x70],rax
  42cbf2:	jae    42cb45 <flatcc_json_parser_struct_as_root@@Base+0x2330>
  42cbf8:	mov    r12,QWORD PTR [rbp-0x30]
  42cbfc:	mov    rbx,QWORD PTR [rbp-0x40]
  42cc00:	mov    rax,QWORD PTR [rbp-0xb0]
  42cc07:	mov    rdx,QWORD PTR [rbp-0xa8]
  42cc0e:	mov    rdi,QWORD PTR [rbp-0x50]
  42cc12:	mov    rsi,QWORD PTR [rbp-0x48]
  42cc16:	mov    rcx,rdx
  42cc19:	mov    rdx,rax
  42cc1c:	call   42c369 <flatcc_json_parser_struct_as_root@@Base+0x1b54>
  42cc21:	imul   rax,QWORD PTR [rbp-0x78]
  42cc26:	mov    rdx,rax
  42cc29:	mov    rax,QWORD PTR [rbp-0xd0]
  42cc30:	mov    esi,DWORD PTR [rax]
  42cc32:	mov    rcx,QWORD PTR [rbp-0x70]
  42cc36:	mov    rax,QWORD PTR [rbp-0xc8]
  42cc3d:	sub    rsp,0x8
  42cc41:	push   QWORD PTR [rbp-0x78]
  42cc44:	mov    r9,r12
  42cc47:	mov    r8,rcx
  42cc4a:	mov    rcx,rbx
  42cc4d:	mov    rdi,rax
  42cc50:	call   42c78f <flatcc_json_parser_struct_as_root@@Base+0x1f7a>
  42cc55:	add    rsp,0x10
  42cc59:	mov    rbx,QWORD PTR [rbp-0x18]
  42cc5d:	xor    rbx,QWORD PTR fs:0x28
  42cc66:	je     42cc6d <flatcc_json_parser_struct_as_root@@Base+0x2458>
  42cc68:	call   4061a0 <__stack_chk_fail@plt>
  42cc6d:	lea    rsp,[rbp-0x10]
  42cc71:	pop    rbx
  42cc72:	pop    r12
  42cc74:	pop    rbp
  42cc75:	ret    
  42cc76:	endbr64 
  42cc7a:	push   rbp
  42cc7b:	mov    rbp,rsp
  42cc7e:	push   rbx
  42cc7f:	sub    rsp,0xb8
  42cc86:	vmovsd QWORD PTR [rbp-0xa8],xmm0
  42cc8e:	mov    QWORD PTR [rbp-0xb0],rdi
  42cc95:	mov    QWORD PTR [rbp-0xb8],rsi
  42cc9c:	mov    QWORD PTR [rbp-0xc0],rdx
  42cca3:	mov    rax,QWORD PTR fs:0x28
  42ccac:	mov    QWORD PTR [rbp-0x18],rax
  42ccb0:	xor    eax,eax
  42ccb2:	mov    rax,QWORD PTR [rbp-0xa8]
  42ccb9:	vmovq  xmm0,rax
  42ccbe:	call   42c57c <flatcc_json_parser_struct_as_root@@Base+0x1d67>
  42ccc3:	mov    QWORD PTR [rbp-0x80],rax
  42ccc7:	mov    QWORD PTR [rbp-0x78],rdx
  42cccb:	mov    rdx,QWORD PTR [rbp-0x80]
  42cccf:	mov    rax,QWORD PTR [rbp-0x78]
  42ccd3:	mov    rdi,rdx
  42ccd6:	mov    rsi,rax
  42ccd9:	call   42c4e4 <flatcc_json_parser_struct_as_root@@Base+0x1ccf>
  42ccde:	mov    QWORD PTR [rbp-0x70],rax
  42cce2:	mov    QWORD PTR [rbp-0x68],rdx
  42cce6:	mov    rax,QWORD PTR [rbp-0x80]
  42ccea:	add    rax,rax
  42cced:	inc    rax
  42ccf0:	mov    QWORD PTR [rbp-0x60],rax
  42ccf4:	mov    eax,DWORD PTR [rbp-0x78]
  42ccf7:	dec    eax
  42ccf9:	mov    DWORD PTR [rbp-0x58],eax
  42ccfc:	mov    rdx,QWORD PTR [rbp-0x60]
  42cd00:	mov    rax,QWORD PTR [rbp-0x58]
  42cd04:	mov    rdi,rdx
  42cd07:	mov    rsi,rax
  42cd0a:	call   42c4e4 <flatcc_json_parser_struct_as_root@@Base+0x1ccf>
  42cd0f:	mov    QWORD PTR [rbp-0x50],rax
  42cd13:	mov    QWORD PTR [rbp-0x48],rdx
  42cd17:	mov    rax,QWORD PTR [rbp-0xa8]
  42cd1e:	vmovq  xmm0,rax
  42cd23:	call   42c224 <flatcc_json_parser_struct_as_root@@Base+0x1a0f>
  42cd28:	mov    QWORD PTR [rbp-0x88],rax
  42cd2f:	vmovsd xmm0,QWORD PTR [rbp-0xa8]
  42cd37:	vxorpd xmm1,xmm1,xmm1
  42cd3b:	vcomisd xmm0,xmm1
  42cd3f:	seta   al
  42cd42:	xor    eax,0x1
  42cd45:	test   al,al
  42cd47:	jne    42cd63 <flatcc_json_parser_struct_as_root@@Base+0x254e>
  42cd49:	vmovsd xmm0,QWORD PTR [rip+0x1199f]        # 43e6f0 <flatcc_builder_padding_base@@Base+0x3770>
  42cd51:	vcomisd xmm0,QWORD PTR [rbp-0xa8]
  42cd59:	setae  al
  42cd5c:	xor    eax,0x1
  42cd5f:	test   al,al
  42cd61:	je     42cd82 <flatcc_json_parser_struct_as_root@@Base+0x256d>
  42cd63:	lea    rcx,[rip+0x1145e]        # 43e1c8 <flatcc_builder_padding_base@@Base+0x3248>
  42cd6a:	mov    edx,0x8a
  42cd6f:	lea    rsi,[rip+0x110da]        # 43de50 <flatcc_builder_padding_base@@Base+0x2ed0>
  42cd76:	lea    rdi,[rip+0x1114b]        # 43dec8 <flatcc_builder_padding_base@@Base+0x2f48>
  42cd7d:	call   4061b0 <__assert_fail@plt>
  42cd82:	movabs rax,0xfffffffffffff
  42cd8c:	and    rax,QWORD PTR [rbp-0x88]
  42cd93:	test   rax,rax
  42cd96:	jne    42cdc8 <flatcc_json_parser_struct_as_root@@Base+0x25b3>
  42cd98:	movabs rax,0x7ff0000000000000
  42cda2:	and    rax,QWORD PTR [rbp-0x88]
  42cda9:	test   rax,rax
  42cdac:	je     42cdc8 <flatcc_json_parser_struct_as_root@@Base+0x25b3>
  42cdae:	mov    rax,QWORD PTR [rbp-0x80]
  42cdb2:	shl    rax,0x2
  42cdb6:	dec    rax
  42cdb9:	mov    QWORD PTR [rbp-0x40],rax
  42cdbd:	mov    eax,DWORD PTR [rbp-0x78]
  42cdc0:	sub    eax,0x2
  42cdc3:	mov    DWORD PTR [rbp-0x38],eax
  42cdc6:	jmp    42cdde <flatcc_json_parser_struct_as_root@@Base+0x25c9>
  42cdc8:	mov    rax,QWORD PTR [rbp-0x80]
  42cdcc:	add    rax,rax
  42cdcf:	dec    rax
  42cdd2:	mov    QWORD PTR [rbp-0x40],rax
  42cdd6:	mov    eax,DWORD PTR [rbp-0x78]
  42cdd9:	dec    eax
  42cddb:	mov    DWORD PTR [rbp-0x38],eax
  42cdde:	mov    rdx,QWORD PTR [rbp-0x40]
  42cde2:	mov    ecx,DWORD PTR [rbp-0x38]
  42cde5:	mov    eax,DWORD PTR [rbp-0x48]
  42cde8:	sub    ecx,eax
  42cdea:	mov    eax,ecx
  42cdec:	shlx   rax,rdx,rax
  42cdf1:	mov    QWORD PTR [rbp-0x40],rax
  42cdf5:	mov    eax,DWORD PTR [rbp-0x48]
  42cdf8:	mov    DWORD PTR [rbp-0x38],eax
  42cdfb:	mov    eax,DWORD PTR [rbp-0x68]
  42cdfe:	mov    edx,0xffffff84
  42ce03:	sub    edx,eax
  42ce05:	lea    rax,[rbp-0x30]
  42ce09:	mov    rsi,rax
  42ce0c:	mov    edi,edx
  42ce0e:	call   42c2bd <flatcc_json_parser_struct_as_root@@Base+0x1aa8>
  42ce13:	mov    DWORD PTR [rbp-0x90],eax
  42ce19:	mov    rax,QWORD PTR [rbp-0x30]
  42ce1d:	mov    rdx,QWORD PTR [rbp-0x28]
  42ce21:	mov    rdi,QWORD PTR [rbp-0x70]
  42ce25:	mov    rsi,QWORD PTR [rbp-0x68]
  42ce29:	mov    rcx,rdx
  42ce2c:	mov    rdx,rax
  42ce2f:	call   42c3ec <flatcc_json_parser_struct_as_root@@Base+0x1bd7>
  42ce34:	mov    QWORD PTR [rbp-0x70],rax
  42ce38:	mov    QWORD PTR [rbp-0x68],rdx
  42ce3c:	mov    rax,QWORD PTR [rbp-0x30]
  42ce40:	mov    rdx,QWORD PTR [rbp-0x28]
  42ce44:	mov    rdi,QWORD PTR [rbp-0x40]
  42ce48:	mov    rsi,QWORD PTR [rbp-0x38]
  42ce4c:	mov    rcx,rdx
  42ce4f:	mov    rdx,rax
  42ce52:	call   42c3ec <flatcc_json_parser_struct_as_root@@Base+0x1bd7>
  42ce57:	mov    QWORD PTR [rbp-0x40],rax
  42ce5b:	mov    QWORD PTR [rbp-0x38],rdx
  42ce5f:	mov    rax,QWORD PTR [rbp-0x30]
  42ce63:	mov    rdx,QWORD PTR [rbp-0x28]
  42ce67:	mov    rdi,QWORD PTR [rbp-0x50]
  42ce6b:	mov    rsi,QWORD PTR [rbp-0x48]
  42ce6f:	mov    rcx,rdx
  42ce72:	mov    rdx,rax
  42ce75:	call   42c3ec <flatcc_json_parser_struct_as_root@@Base+0x1bd7>
  42ce7a:	mov    QWORD PTR [rbp-0x50],rax
  42ce7e:	mov    QWORD PTR [rbp-0x48],rdx
  42ce82:	mov    rcx,QWORD PTR [rbp-0x50]
  42ce86:	mov    rbx,QWORD PTR [rbp-0x48]
  42ce8a:	mov    rax,QWORD PTR [rbp-0x70]
  42ce8e:	mov    rdx,QWORD PTR [rbp-0x68]
  42ce92:	mov    rdi,QWORD PTR [rbp-0x40]
  42ce96:	mov    rsi,QWORD PTR [rbp-0x38]
  42ce9a:	sub    rsp,0x8
  42ce9e:	lea    r8,[rbp-0x94]
  42cea5:	push   r8
  42cea7:	push   QWORD PTR [rbp-0xb8]
  42cead:	push   QWORD PTR [rbp-0xb0]
  42ceb3:	mov    r8,rcx
  42ceb6:	mov    r9,rbx
  42ceb9:	mov    rcx,rdx
  42cebc:	mov    rdx,rax
  42cebf:	call   42c8b5 <flatcc_json_parser_struct_as_root@@Base+0x20a0>
  42cec4:	add    rsp,0x20
  42cec8:	mov    DWORD PTR [rbp-0x8c],eax
  42cece:	mov    eax,DWORD PTR [rbp-0x94]
  42ced4:	sub    eax,DWORD PTR [rbp-0x90]
  42ceda:	mov    edx,eax
  42cedc:	mov    rax,QWORD PTR [rbp-0xc0]
  42cee3:	mov    DWORD PTR [rax],edx
  42cee5:	mov    eax,DWORD PTR [rbp-0x8c]
  42ceeb:	mov    rbx,QWORD PTR [rbp-0x18]
  42ceef:	xor    rbx,QWORD PTR fs:0x28
  42cef8:	je     42ceff <flatcc_json_parser_struct_as_root@@Base+0x26ea>
  42cefa:	call   4061a0 <__stack_chk_fail@plt>
  42ceff:	mov    rbx,QWORD PTR [rbp-0x8]
  42cf03:	leave  
  42cf04:	ret    
  42cf05:	endbr64 
  42cf09:	push   rbp
  42cf0a:	mov    rbp,rsp
  42cf0d:	mov    DWORD PTR [rbp-0x34],edi
  42cf10:	mov    QWORD PTR [rbp-0x40],rsi
  42cf14:	mov    rax,QWORD PTR [rbp-0x40]
  42cf18:	mov    QWORD PTR [rbp-0x8],rax
  42cf1c:	cmp    DWORD PTR [rbp-0x34],0x0
  42cf20:	jns    42cf34 <flatcc_json_parser_struct_as_root@@Base+0x271f>
  42cf22:	mov    rax,QWORD PTR [rbp-0x40]
  42cf26:	lea    rdx,[rax+0x1]
  42cf2a:	mov    QWORD PTR [rbp-0x40],rdx
  42cf2e:	mov    BYTE PTR [rax],0x2d
  42cf31:	neg    DWORD PTR [rbp-0x34]
  42cf34:	mov    rax,QWORD PTR [rbp-0x40]
  42cf38:	mov    QWORD PTR [rbp-0x10],rax
  42cf3c:	mov    ecx,DWORD PTR [rbp-0x34]
  42cf3f:	mov    edx,0x66666667
  42cf44:	mov    eax,ecx
  42cf46:	imul   edx
  42cf48:	sar    edx,0x2
  42cf4b:	mov    eax,ecx
  42cf4d:	sar    eax,0x1f
  42cf50:	sub    edx,eax
  42cf52:	mov    eax,edx
  42cf54:	mov    DWORD PTR [rbp-0x1c],eax
  42cf57:	mov    edx,DWORD PTR [rbp-0x1c]
  42cf5a:	mov    eax,edx
  42cf5c:	shl    eax,0x2
  42cf5f:	add    eax,edx
  42cf61:	add    eax,eax
  42cf63:	neg    eax
  42cf65:	mov    edx,eax
  42cf67:	mov    eax,DWORD PTR [rbp-0x34]
  42cf6a:	add    eax,edx
  42cf6c:	mov    DWORD PTR [rbp-0x18],eax
  42cf6f:	mov    eax,DWORD PTR [rbp-0x18]
  42cf72:	lea    ecx,[rax+0x30]
  42cf75:	mov    rax,QWORD PTR [rbp-0x10]
  42cf79:	lea    rdx,[rax+0x1]
  42cf7d:	mov    QWORD PTR [rbp-0x10],rdx
  42cf81:	mov    edx,ecx
  42cf83:	mov    BYTE PTR [rax],dl
  42cf85:	cmp    DWORD PTR [rbp-0x1c],0x0
  42cf89:	je     42cf93 <flatcc_json_parser_struct_as_root@@Base+0x277e>
  42cf8b:	mov    eax,DWORD PTR [rbp-0x1c]
  42cf8e:	mov    DWORD PTR [rbp-0x34],eax
  42cf91:	jmp    42cf3c <flatcc_json_parser_struct_as_root@@Base+0x2727>
  42cf93:	nop
  42cf94:	mov    rax,QWORD PTR [rbp-0x10]
  42cf98:	mov    BYTE PTR [rax],0x0
  42cf9b:	mov    rax,QWORD PTR [rbp-0x10]
  42cf9f:	sub    rax,QWORD PTR [rbp-0x40]
  42cfa3:	mov    DWORD PTR [rbp-0x14],eax
  42cfa6:	mov    DWORD PTR [rbp-0x20],0x0
  42cfad:	jmp    42d001 <flatcc_json_parser_struct_as_root@@Base+0x27ec>
  42cfaf:	mov    eax,DWORD PTR [rbp-0x20]
  42cfb2:	movsxd rdx,eax
  42cfb5:	mov    rax,QWORD PTR [rbp-0x40]
  42cfb9:	add    rax,rdx
  42cfbc:	movzx  eax,BYTE PTR [rax]
  42cfbf:	mov    BYTE PTR [rbp-0x21],al
  42cfc2:	mov    eax,DWORD PTR [rbp-0x14]
  42cfc5:	dec    eax
  42cfc7:	sub    eax,DWORD PTR [rbp-0x20]
  42cfca:	movsxd rdx,eax
  42cfcd:	mov    rax,QWORD PTR [rbp-0x40]
  42cfd1:	add    rax,rdx
  42cfd4:	mov    edx,DWORD PTR [rbp-0x20]
  42cfd7:	movsxd rcx,edx
  42cfda:	mov    rdx,QWORD PTR [rbp-0x40]
  42cfde:	add    rdx,rcx
  42cfe1:	movzx  eax,BYTE PTR [rax]
  42cfe4:	mov    BYTE PTR [rdx],al
  42cfe6:	mov    eax,DWORD PTR [rbp-0x14]
  42cfe9:	dec    eax
  42cfeb:	sub    eax,DWORD PTR [rbp-0x20]
  42cfee:	movsxd rdx,eax
  42cff1:	mov    rax,QWORD PTR [rbp-0x40]
  42cff5:	add    rdx,rax
  42cff8:	movzx  eax,BYTE PTR [rbp-0x21]
  42cffc:	mov    BYTE PTR [rdx],al
  42cffe:	inc    DWORD PTR [rbp-0x20]
  42d001:	mov    eax,DWORD PTR [rbp-0x14]
  42d004:	mov    edx,eax
  42d006:	shr    edx,0x1f
  42d009:	add    eax,edx
  42d00b:	sar    eax,1
  42d00d:	cmp    DWORD PTR [rbp-0x20],eax
  42d010:	jl     42cfaf <flatcc_json_parser_struct_as_root@@Base+0x279a>
  42d012:	mov    rax,QWORD PTR [rbp-0x10]
  42d016:	sub    rax,QWORD PTR [rbp-0x8]
  42d01a:	pop    rbp
  42d01b:	ret    
  42d01c:	endbr64 
  42d020:	push   rbp
  42d021:	mov    rbp,rsp
  42d024:	sub    rsp,0x40
  42d028:	vmovsd QWORD PTR [rbp-0x38],xmm0
  42d02d:	mov    QWORD PTR [rbp-0x40],rdi
  42d031:	mov    rax,QWORD PTR fs:0x28
  42d03a:	mov    QWORD PTR [rbp-0x8],rax
  42d03e:	xor    eax,eax
  42d040:	mov    rax,QWORD PTR [rbp-0x38]
  42d044:	vmovq  xmm0,rax
  42d049:	call   42c224 <flatcc_json_parser_struct_as_root@@Base+0x1a0f>
  42d04e:	mov    QWORD PTR [rbp-0x18],rax
  42d052:	mov    rax,QWORD PTR [rbp-0x40]
  42d056:	mov    QWORD PTR [rbp-0x10],rax
  42d05a:	cmp    QWORD PTR [rbp-0x40],0x0
  42d05f:	jne    42d080 <flatcc_json_parser_struct_as_root@@Base+0x286b>
  42d061:	lea    rcx,[rip+0x11168]        # 43e1d0 <flatcc_builder_padding_base@@Base+0x3250>
  42d068:	mov    edx,0xbd
  42d06d:	lea    rsi,[rip+0x10ddc]        # 43de50 <flatcc_builder_padding_base@@Base+0x2ed0>
  42d074:	lea    rdi,[rip+0x10e72]        # 43deed <flatcc_builder_padding_base@@Base+0x2f6d>
  42d07b:	call   4061b0 <__assert_fail@plt>
  42d080:	mov    rax,QWORD PTR [rbp-0x18]
  42d084:	lea    rdx,[rax+rax*1]
  42d088:	movabs rax,0xffe0000000000000
  42d092:	cmp    rdx,rax
  42d095:	jbe    42d0c4 <flatcc_json_parser_struct_as_root@@Base+0x28af>
  42d097:	mov    rax,QWORD PTR [rbp-0x18]
  42d09b:	mov    ecx,eax
  42d09d:	mov    rax,QWORD PTR [rbp-0x18]
  42d0a1:	shr    rax,0x20
  42d0a5:	mov    edx,eax
  42d0a7:	mov    rax,QWORD PTR [rbp-0x40]
  42d0ab:	lea    rsi,[rip+0x10e3f]        # 43def1 <flatcc_builder_padding_base@@Base+0x2f71>
  42d0b2:	mov    rdi,rax
  42d0b5:	mov    eax,0x0
  42d0ba:	call   406260 <sprintf@plt>
  42d0bf:	jmp    42d40e <flatcc_json_parser_struct_as_root@@Base+0x2bf9>
  42d0c4:	mov    rax,QWORD PTR [rbp-0x18]
  42d0c8:	test   rax,rax
  42d0cb:	jns    42d100 <flatcc_json_parser_struct_as_root@@Base+0x28eb>
  42d0cd:	mov    rax,QWORD PTR [rbp-0x10]
  42d0d1:	lea    rdx,[rax+0x1]
  42d0d5:	mov    QWORD PTR [rbp-0x10],rdx
  42d0d9:	mov    BYTE PTR [rax],0x2d
  42d0dc:	vmovsd xmm1,QWORD PTR [rbp-0x38]
  42d0e1:	vmovq  xmm0,QWORD PTR [rip+0x11617]        # 43e700 <flatcc_builder_padding_base@@Base+0x3780>
  42d0e9:	vxorpd xmm0,xmm0,xmm1
  42d0ed:	vmovsd QWORD PTR [rbp-0x38],xmm0
  42d0f2:	movabs rax,0x8000000000000000
  42d0fc:	xor    QWORD PTR [rbp-0x18],rax
  42d100:	cmp    QWORD PTR [rbp-0x18],0x0
  42d105:	jne    42d12a <flatcc_json_parser_struct_as_root@@Base+0x2915>
  42d107:	mov    rax,QWORD PTR [rbp-0x10]
  42d10b:	lea    rdx,[rax+0x1]
  42d10f:	mov    QWORD PTR [rbp-0x10],rdx
  42d113:	mov    BYTE PTR [rax],0x30
  42d116:	mov    rax,QWORD PTR [rbp-0x10]
  42d11a:	mov    BYTE PTR [rax],0x0
  42d11d:	mov    rax,QWORD PTR [rbp-0x10]
  42d121:	sub    rax,QWORD PTR [rbp-0x40]
  42d125:	jmp    42d40e <flatcc_json_parser_struct_as_root@@Base+0x2bf9>
  42d12a:	movabs rax,0x7ff0000000000000
  42d134:	cmp    QWORD PTR [rbp-0x18],rax
  42d138:	jne    42d17b <flatcc_json_parser_struct_as_root@@Base+0x2966>
  42d13a:	mov    rax,QWORD PTR [rbp-0x10]
  42d13e:	lea    rdx,[rax+0x1]
  42d142:	mov    QWORD PTR [rbp-0x10],rdx
  42d146:	mov    BYTE PTR [rax],0x69
  42d149:	mov    rax,QWORD PTR [rbp-0x10]
  42d14d:	lea    rdx,[rax+0x1]
  42d151:	mov    QWORD PTR [rbp-0x10],rdx
  42d155:	mov    BYTE PTR [rax],0x6e
  42d158:	mov    rax,QWORD PTR [rbp-0x10]
  42d15c:	lea    rdx,[rax+0x1]
  42d160:	mov    QWORD PTR [rbp-0x10],rdx
  42d164:	mov    BYTE PTR [rax],0x66
  42d167:	mov    rax,QWORD PTR [rbp-0x10]
  42d16b:	mov    BYTE PTR [rax],0x0
  42d16e:	mov    rax,QWORD PTR [rbp-0x10]
  42d172:	sub    rax,QWORD PTR [rbp-0x40]
  42d176:	jmp    42d40e <flatcc_json_parser_struct_as_root@@Base+0x2bf9>
  42d17b:	lea    rdx,[rbp-0x2c]
  42d17f:	lea    rsi,[rbp-0x28]
  42d183:	mov    rcx,QWORD PTR [rbp-0x10]
  42d187:	mov    rax,QWORD PTR [rbp-0x38]
  42d18b:	mov    rdi,rcx
  42d18e:	vmovq  xmm0,rax
  42d193:	call   42cc76 <flatcc_json_parser_struct_as_root@@Base+0x2461>
  42d198:	mov    DWORD PTR [rbp-0x20],eax
  42d19b:	cmp    DWORD PTR [rbp-0x20],0x0
  42d19f:	jne    42d1d3 <flatcc_json_parser_struct_as_root@@Base+0x29be>
  42d1a1:	mov    rdx,QWORD PTR [rbp-0x38]
  42d1a5:	mov    rax,QWORD PTR [rbp-0x10]
  42d1a9:	vmovq  xmm0,rdx
  42d1ae:	lea    rsi,[rip+0x10d4a]        # 43deff <flatcc_builder_padding_base@@Base+0x2f7f>
  42d1b5:	mov    rdi,rax
  42d1b8:	mov    eax,0x1
  42d1bd:	call   406260 <sprintf@plt>
  42d1c2:	mov    edx,eax
  42d1c4:	mov    rax,QWORD PTR [rbp-0x10]
  42d1c8:	sub    rax,QWORD PTR [rbp-0x40]
  42d1cc:	add    eax,edx
  42d1ce:	jmp    42d40e <flatcc_json_parser_struct_as_root@@Base+0x2bf9>
  42d1d3:	mov    eax,DWORD PTR [rbp-0x28]
  42d1d6:	mov    edx,0x2
  42d1db:	cmp    eax,0x2
  42d1de:	cmovl  eax,edx
  42d1e1:	mov    edx,DWORD PTR [rbp-0x2c]
  42d1e4:	neg    edx
  42d1e6:	cmp    eax,edx
  42d1e8:	jle    42d1f1 <flatcc_json_parser_struct_as_root@@Base+0x29dc>
  42d1ea:	mov    eax,DWORD PTR [rbp-0x2c]
  42d1ed:	neg    eax
  42d1ef:	jmp    42d201 <flatcc_json_parser_struct_as_root@@Base+0x29ec>
  42d1f1:	mov    eax,DWORD PTR [rbp-0x28]
  42d1f4:	mov    edx,0x2
  42d1f9:	cmp    eax,0x2
  42d1fc:	cmovl  eax,edx
  42d1ff:	dec    eax
  42d201:	mov    DWORD PTR [rbp-0x1c],eax
  42d204:	mov    eax,DWORD PTR [rbp-0x2c]
  42d207:	test   eax,eax
  42d209:	jns    42d2b7 <flatcc_json_parser_struct_as_root@@Base+0x2aa2>
  42d20f:	mov    edx,DWORD PTR [rbp-0x28]
  42d212:	mov    eax,DWORD PTR [rbp-0x2c]
  42d215:	add    eax,edx
  42d217:	cmp    eax,0xfffffffe
  42d21a:	jl     42d2b7 <flatcc_json_parser_struct_as_root@@Base+0x2aa2>
  42d220:	mov    eax,DWORD PTR [rbp-0x2c]
  42d223:	neg    eax
  42d225:	mov    edx,eax
  42d227:	mov    eax,DWORD PTR [rbp-0x28]
  42d22a:	cmp    edx,eax
  42d22c:	jl     42d2b7 <flatcc_json_parser_struct_as_root@@Base+0x2aa2>
  42d232:	mov    eax,DWORD PTR [rbp-0x28]
  42d235:	movsxd rdx,eax
  42d238:	mov    eax,DWORD PTR [rbp-0x2c]
  42d23b:	movsxd rcx,eax
  42d23e:	mov    eax,DWORD PTR [rbp-0x28]
  42d241:	cdqe   
  42d243:	add    rax,rcx
  42d246:	mov    ecx,0x2
  42d24b:	sub    rcx,rax
  42d24e:	mov    rax,QWORD PTR [rbp-0x10]
  42d252:	add    rcx,rax
  42d255:	mov    rax,QWORD PTR [rbp-0x10]
  42d259:	mov    rsi,rax
  42d25c:	mov    rdi,rcx
  42d25f:	call   406250 <memmove@plt>
  42d264:	mov    rax,QWORD PTR [rbp-0x10]
  42d268:	mov    BYTE PTR [rax],0x30
  42d26b:	mov    rax,QWORD PTR [rbp-0x10]
  42d26f:	inc    rax
  42d272:	mov    BYTE PTR [rax],0x2e
  42d275:	mov    DWORD PTR [rbp-0x24],0x2
  42d27c:	jmp    42d291 <flatcc_json_parser_struct_as_root@@Base+0x2a7c>
  42d27e:	mov    eax,DWORD PTR [rbp-0x24]
  42d281:	movsxd rdx,eax
  42d284:	mov    rax,QWORD PTR [rbp-0x10]
  42d288:	add    rax,rdx
  42d28b:	mov    BYTE PTR [rax],0x30
  42d28e:	inc    DWORD PTR [rbp-0x24]
  42d291:	mov    eax,DWORD PTR [rbp-0x2c]
  42d294:	mov    edx,0x2
  42d299:	sub    edx,eax
  42d29b:	mov    eax,DWORD PTR [rbp-0x28]
  42d29e:	sub    edx,eax
  42d2a0:	mov    eax,edx
  42d2a2:	cmp    DWORD PTR [rbp-0x24],eax
  42d2a5:	jl     42d27e <flatcc_json_parser_struct_as_root@@Base+0x2a69>
  42d2a7:	mov    edx,DWORD PTR [rbp-0x28]
  42d2aa:	mov    eax,DWORD PTR [rbp-0x24]
  42d2ad:	add    eax,edx
  42d2af:	mov    DWORD PTR [rbp-0x28],eax
  42d2b2:	jmp    42d3ed <flatcc_json_parser_struct_as_root@@Base+0x2bd8>
  42d2b7:	mov    eax,DWORD PTR [rbp-0x2c]
  42d2ba:	test   eax,eax
  42d2bc:	jns    42d376 <flatcc_json_parser_struct_as_root@@Base+0x2b61>
  42d2c2:	mov    eax,DWORD PTR [rbp-0x28]
  42d2c5:	cmp    eax,0x1
  42d2c8:	jle    42d376 <flatcc_json_parser_struct_as_root@@Base+0x2b61>
  42d2ce:	mov    DWORD PTR [rbp-0x24],0x0
  42d2d5:	jmp    42d303 <flatcc_json_parser_struct_as_root@@Base+0x2aee>
  42d2d7:	mov    eax,DWORD PTR [rbp-0x28]
  42d2da:	sub    eax,DWORD PTR [rbp-0x24]
  42d2dd:	cdqe   
  42d2df:	lea    rdx,[rax-0x1]
  42d2e3:	mov    rax,QWORD PTR [rbp-0x10]
  42d2e7:	lea    rcx,[rdx+rax*1]
  42d2eb:	mov    eax,DWORD PTR [rbp-0x28]
  42d2ee:	sub    eax,DWORD PTR [rbp-0x24]
  42d2f1:	movsxd rdx,eax
  42d2f4:	mov    rax,QWORD PTR [rbp-0x10]
  42d2f8:	add    rdx,rax
  42d2fb:	movzx  eax,BYTE PTR [rcx]
  42d2fe:	mov    BYTE PTR [rdx],al
  42d300:	inc    DWORD PTR [rbp-0x24]
  42d303:	mov    eax,DWORD PTR [rbp-0x24]
  42d306:	cmp    eax,DWORD PTR [rbp-0x1c]
  42d309:	jl     42d2d7 <flatcc_json_parser_struct_as_root@@Base+0x2ac2>
  42d30b:	mov    eax,DWORD PTR [rbp-0x28]
  42d30e:	lea    edx,[rax+0x1]
  42d311:	mov    DWORD PTR [rbp-0x28],edx
  42d314:	sub    eax,DWORD PTR [rbp-0x1c]
  42d317:	movsxd rdx,eax
  42d31a:	mov    rax,QWORD PTR [rbp-0x10]
  42d31e:	add    rax,rdx
  42d321:	mov    BYTE PTR [rax],0x2e
  42d324:	mov    edx,DWORD PTR [rbp-0x2c]
  42d327:	mov    eax,DWORD PTR [rbp-0x1c]
  42d32a:	add    eax,edx
  42d32c:	mov    DWORD PTR [rbp-0x2c],eax
  42d32f:	mov    eax,DWORD PTR [rbp-0x2c]
  42d332:	test   eax,eax
  42d334:	je     42d3ed <flatcc_json_parser_struct_as_root@@Base+0x2bd8>
  42d33a:	mov    eax,DWORD PTR [rbp-0x28]
  42d33d:	lea    edx,[rax+0x1]
  42d340:	mov    DWORD PTR [rbp-0x28],edx
  42d343:	movsxd rdx,eax
  42d346:	mov    rax,QWORD PTR [rbp-0x10]
  42d34a:	add    rax,rdx
  42d34d:	mov    BYTE PTR [rax],0x65
  42d350:	mov    eax,DWORD PTR [rbp-0x28]
  42d353:	movsxd rdx,eax
  42d356:	mov    rax,QWORD PTR [rbp-0x10]
  42d35a:	add    rdx,rax
  42d35d:	mov    eax,DWORD PTR [rbp-0x2c]
  42d360:	mov    rsi,rdx
  42d363:	mov    edi,eax
  42d365:	call   42cf05 <flatcc_json_parser_struct_as_root@@Base+0x26f0>
  42d36a:	mov    edx,eax
  42d36c:	mov    eax,DWORD PTR [rbp-0x28]
  42d36f:	add    eax,edx
  42d371:	mov    DWORD PTR [rbp-0x28],eax
  42d374:	jmp    42d3ed <flatcc_json_parser_struct_as_root@@Base+0x2bd8>
  42d376:	mov    eax,DWORD PTR [rbp-0x2c]
  42d379:	test   eax,eax
  42d37b:	js     42d385 <flatcc_json_parser_struct_as_root@@Base+0x2b70>
  42d37d:	mov    eax,DWORD PTR [rbp-0x2c]
  42d380:	cmp    eax,0x2
  42d383:	jle    42d3c1 <flatcc_json_parser_struct_as_root@@Base+0x2bac>
  42d385:	mov    eax,DWORD PTR [rbp-0x28]
  42d388:	lea    edx,[rax+0x1]
  42d38b:	mov    DWORD PTR [rbp-0x28],edx
  42d38e:	movsxd rdx,eax
  42d391:	mov    rax,QWORD PTR [rbp-0x10]
  42d395:	add    rax,rdx
  42d398:	mov    BYTE PTR [rax],0x65
  42d39b:	mov    eax,DWORD PTR [rbp-0x28]
  42d39e:	movsxd rdx,eax
  42d3a1:	mov    rax,QWORD PTR [rbp-0x10]
  42d3a5:	add    rdx,rax
  42d3a8:	mov    eax,DWORD PTR [rbp-0x2c]
  42d3ab:	mov    rsi,rdx
  42d3ae:	mov    edi,eax
  42d3b0:	call   42cf05 <flatcc_json_parser_struct_as_root@@Base+0x26f0>
  42d3b5:	mov    edx,eax
  42d3b7:	mov    eax,DWORD PTR [rbp-0x28]
  42d3ba:	add    eax,edx
  42d3bc:	mov    DWORD PTR [rbp-0x28],eax
  42d3bf:	jmp    42d3ed <flatcc_json_parser_struct_as_root@@Base+0x2bd8>
  42d3c1:	mov    eax,DWORD PTR [rbp-0x2c]
  42d3c4:	test   eax,eax
  42d3c6:	jle    42d3ed <flatcc_json_parser_struct_as_root@@Base+0x2bd8>
  42d3c8:	jmp    42d3e0 <flatcc_json_parser_struct_as_root@@Base+0x2bcb>
  42d3ca:	mov    eax,DWORD PTR [rbp-0x28]
  42d3cd:	lea    edx,[rax+0x1]
  42d3d0:	mov    DWORD PTR [rbp-0x28],edx
  42d3d3:	movsxd rdx,eax
  42d3d6:	mov    rax,QWORD PTR [rbp-0x10]
  42d3da:	add    rax,rdx
  42d3dd:	mov    BYTE PTR [rax],0x30
  42d3e0:	mov    eax,DWORD PTR [rbp-0x2c]
  42d3e3:	lea    edx,[rax-0x1]
  42d3e6:	mov    DWORD PTR [rbp-0x2c],edx
  42d3e9:	test   eax,eax
  42d3eb:	jg     42d3ca <flatcc_json_parser_struct_as_root@@Base+0x2bb5>
  42d3ed:	mov    eax,DWORD PTR [rbp-0x28]
  42d3f0:	movsxd rdx,eax
  42d3f3:	mov    rax,QWORD PTR [rbp-0x10]
  42d3f7:	add    rax,rdx
  42d3fa:	mov    BYTE PTR [rax],0x0
  42d3fd:	mov    eax,DWORD PTR [rbp-0x28]
  42d400:	movsxd rdx,eax
  42d403:	mov    rax,QWORD PTR [rbp-0x10]
  42d407:	add    rax,rdx
  42d40a:	sub    rax,QWORD PTR [rbp-0x40]
  42d40e:	mov    rdi,QWORD PTR [rbp-0x8]
  42d412:	xor    rdi,QWORD PTR fs:0x28
  42d41b:	je     42d422 <flatcc_json_parser_struct_as_root@@Base+0x2c0d>
  42d41d:	call   4061a0 <__stack_chk_fail@plt>
  42d422:	leave  
  42d423:	ret    
  42d424:	endbr64 
  42d428:	push   rbp
  42d429:	mov    rbp,rsp
  42d42c:	mov    DWORD PTR [rbp-0x4],edi
  42d42f:	cmp    DWORD PTR [rbp-0x4],0x5
  42d433:	ja     42d490 <flatcc_json_parser_struct_as_root@@Base+0x2c7b>
  42d435:	mov    eax,DWORD PTR [rbp-0x4]
  42d438:	lea    rdx,[rax*4+0x0]
  42d440:	lea    rax,[rip+0x10b29]        # 43df70 <flatcc_builder_padding_base@@Base+0x2ff0>
  42d447:	mov    eax,DWORD PTR [rdx+rax*1]
  42d44a:	movsxd rdx,eax
  42d44d:	lea    rax,[rip+0x10b1c]        # 43df70 <flatcc_builder_padding_base@@Base+0x2ff0>
  42d454:	add    rax,rdx
  42d457:	notrack jmp rax
  42d45a:	lea    rax,[rip+0x10aa4]        # 43df05 <flatcc_builder_padding_base@@Base+0x2f85>
  42d461:	jmp    42d497 <flatcc_json_parser_struct_as_root@@Base+0x2c82>
  42d463:	lea    rax,[rip+0x10a9e]        # 43df08 <flatcc_builder_padding_base@@Base+0x2f88>
  42d46a:	jmp    42d497 <flatcc_json_parser_struct_as_root@@Base+0x2c82>
  42d46c:	lea    rax,[rip+0x10aa6]        # 43df19 <flatcc_builder_padding_base@@Base+0x2f99>
  42d473:	jmp    42d497 <flatcc_json_parser_struct_as_root@@Base+0x2c82>
  42d475:	lea    rax,[rip+0x10aaa]        # 43df26 <flatcc_builder_padding_base@@Base+0x2fa6>
  42d47c:	jmp    42d497 <flatcc_json_parser_struct_as_root@@Base+0x2c82>
  42d47e:	lea    rax,[rip+0x10ab2]        # 43df37 <flatcc_builder_padding_base@@Base+0x2fb7>
  42d485:	jmp    42d497 <flatcc_json_parser_struct_as_root@@Base+0x2c82>
  42d487:	lea    rax,[rip+0x10abd]        # 43df4b <flatcc_builder_padding_base@@Base+0x2fcb>
  42d48e:	jmp    42d497 <flatcc_json_parser_struct_as_root@@Base+0x2c82>
  42d490:	lea    rax,[rip+0x10ac9]        # 43df60 <flatcc_builder_padding_base@@Base+0x2fe0>
  42d497:	pop    rbp
  42d498:	ret    
  42d499:	endbr64 
  42d49d:	push   rbp
  42d49e:	mov    rbp,rsp
  42d4a1:	mov    QWORD PTR [rbp-0x28],rdi
  42d4a5:	mov    DWORD PTR [rbp-0x2c],esi
  42d4a8:	mov    rcx,QWORD PTR [rbp-0x28]
  42d4ac:	movabs rdx,0xaaaaaaaaaaaaaaab
  42d4b6:	mov    rax,rcx
  42d4b9:	mul    rdx
  42d4bc:	shr    rdx,1
  42d4bf:	mov    rax,rdx
  42d4c2:	add    rax,rax
  42d4c5:	add    rax,rdx
  42d4c8:	sub    rcx,rax
  42d4cb:	mov    rax,rcx
  42d4ce:	mov    QWORD PTR [rbp-0x8],rax
  42d4d2:	mov    rax,QWORD PTR [rbp-0x28]
  42d4d6:	shl    rax,0x2
  42d4da:	movabs rdx,0xaaaaaaaaaaaaaaab
  42d4e4:	mul    rdx
  42d4e7:	mov    rax,rdx
  42d4ea:	shr    rax,1
  42d4ed:	add    rax,0x3
  42d4f1:	and    rax,0xfffffffffffffffc
  42d4f5:	mov    QWORD PTR [rbp-0x10],rax
  42d4f9:	mov    eax,DWORD PTR [rbp-0x2c]
  42d4fc:	and    eax,0x80
  42d501:	mov    DWORD PTR [rbp-0x14],eax
  42d504:	cmp    DWORD PTR [rbp-0x14],0x0
  42d508:	jne    42d525 <flatcc_json_parser_struct_as_root@@Base+0x2d10>
  42d50a:	cmp    QWORD PTR [rbp-0x8],0x1
  42d50f:	je     42d51e <flatcc_json_parser_struct_as_root@@Base+0x2d09>
  42d511:	cmp    QWORD PTR [rbp-0x8],0x2
  42d516:	jne    42d528 <flatcc_json_parser_struct_as_root@@Base+0x2d13>
  42d518:	dec    QWORD PTR [rbp-0x10]
  42d51c:	jmp    42d529 <flatcc_json_parser_struct_as_root@@Base+0x2d14>
  42d51e:	sub    QWORD PTR [rbp-0x10],0x2
  42d523:	jmp    42d529 <flatcc_json_parser_struct_as_root@@Base+0x2d14>
  42d525:	nop
  42d526:	jmp    42d529 <flatcc_json_parser_struct_as_root@@Base+0x2d14>
  42d528:	nop
  42d529:	mov    rax,QWORD PTR [rbp-0x10]
  42d52d:	pop    rbp
  42d52e:	ret    
  42d52f:	endbr64 
  42d533:	push   rbp
  42d534:	mov    rbp,rsp
  42d537:	mov    QWORD PTR [rbp-0x18],rdi
  42d53b:	mov    rax,QWORD PTR [rbp-0x18]
  42d53f:	and    eax,0x3
  42d542:	mov    QWORD PTR [rbp-0x10],rax
  42d546:	mov    rax,QWORD PTR [rbp-0x18]
  42d54a:	shr    rax,0x2
  42d54e:	mov    rdx,rax
  42d551:	mov    rax,rdx
  42d554:	add    rax,rax
  42d557:	add    rax,rdx
  42d55a:	mov    QWORD PTR [rbp-0x8],rax
  42d55e:	cmp    QWORD PTR [rbp-0x10],0x2
  42d563:	je     42d576 <flatcc_json_parser_struct_as_root@@Base+0x2d61>
  42d565:	cmp    QWORD PTR [rbp-0x10],0x3
  42d56a:	jne    42d57f <flatcc_json_parser_struct_as_root@@Base+0x2d6a>
  42d56c:	mov    rax,QWORD PTR [rbp-0x8]
  42d570:	add    rax,0x2
  42d574:	jmp    42d583 <flatcc_json_parser_struct_as_root@@Base+0x2d6e>
  42d576:	mov    rax,QWORD PTR [rbp-0x8]
  42d57a:	inc    rax
  42d57d:	jmp    42d583 <flatcc_json_parser_struct_as_root@@Base+0x2d6e>
  42d57f:	mov    rax,QWORD PTR [rbp-0x8]
  42d583:	pop    rbp
  42d584:	ret    
  42d585:	endbr64 
  42d589:	push   rbp
  42d58a:	mov    rbp,rsp
  42d58d:	mov    QWORD PTR [rbp-0x38],rdi
  42d591:	mov    QWORD PTR [rbp-0x40],rsi
  42d595:	mov    QWORD PTR [rbp-0x48],rdx
  42d599:	mov    QWORD PTR [rbp-0x50],rcx
  42d59d:	mov    DWORD PTR [rbp-0x54],r8d
  42d5a1:	lea    rax,[rip+0x109e0]        # 43df88 <flatcc_builder_padding_base@@Base+0x3008>
  42d5a8:	mov    QWORD PTR [rbp-0x18],rax
  42d5ac:	lea    rax,[rip+0x10a1d]        # 43dfd0 <flatcc_builder_padding_base@@Base+0x3050>
  42d5b3:	mov    QWORD PTR [rbp-0x10],rax
  42d5b7:	mov    rax,QWORD PTR [rbp-0x38]
  42d5bb:	mov    QWORD PTR [rbp-0x8],rax
  42d5bf:	mov    eax,DWORD PTR [rbp-0x54]
  42d5c2:	and    eax,0x80
  42d5c7:	mov    DWORD PTR [rbp-0x2c],eax
  42d5ca:	mov    QWORD PTR [rbp-0x20],0x0
  42d5d2:	mov    DWORD PTR [rbp-0x30],0x3
  42d5d9:	cmp    QWORD PTR [rbp-0x50],0x0
  42d5de:	jne    42d5ec <flatcc_json_parser_struct_as_root@@Base+0x2dd7>
  42d5e0:	mov    DWORD PTR [rbp-0x30],0x2
  42d5e7:	jmp    42d844 <flatcc_json_parser_struct_as_root@@Base+0x302f>
  42d5ec:	mov    rax,QWORD PTR [rbp-0x50]
  42d5f0:	mov    rax,QWORD PTR [rax]
  42d5f3:	mov    QWORD PTR [rbp-0x20],rax
  42d5f7:	and    DWORD PTR [rbp-0x54],0xffffff1f
  42d5fe:	cmp    DWORD PTR [rbp-0x54],0x0
  42d602:	je     42d60f <flatcc_json_parser_struct_as_root@@Base+0x2dfa>
  42d604:	cmp    DWORD PTR [rbp-0x54],0x1
  42d608:	je     42d619 <flatcc_json_parser_struct_as_root@@Base+0x2e04>
  42d60a:	jmp    42d844 <flatcc_json_parser_struct_as_root@@Base+0x302f>
  42d60f:	mov    rax,QWORD PTR [rbp-0x18]
  42d613:	mov    QWORD PTR [rbp-0x28],rax
  42d617:	jmp    42d622 <flatcc_json_parser_struct_as_root@@Base+0x2e0d>
  42d619:	mov    rax,QWORD PTR [rbp-0x10]
  42d61d:	mov    QWORD PTR [rbp-0x28],rax
  42d621:	nop
  42d622:	mov    DWORD PTR [rbp-0x30],0x0
  42d629:	jmp    42d6fb <flatcc_json_parser_struct_as_root@@Base+0x2ee6>
  42d62e:	mov    rax,QWORD PTR [rbp-0x40]
  42d632:	movzx  eax,BYTE PTR [rax]
  42d635:	shr    al,0x2
  42d638:	movzx  edx,al
  42d63b:	mov    rax,QWORD PTR [rbp-0x28]
  42d63f:	add    rax,rdx
  42d642:	movzx  eax,BYTE PTR [rax]
  42d645:	mov    rdx,QWORD PTR [rbp-0x38]
  42d649:	mov    BYTE PTR [rdx],al
  42d64b:	mov    rax,QWORD PTR [rbp-0x40]
  42d64f:	movzx  eax,BYTE PTR [rax]
  42d652:	movzx  eax,al
  42d655:	shl    eax,0x4
  42d658:	and    eax,0x30
  42d65b:	mov    edx,eax
  42d65d:	mov    rax,QWORD PTR [rbp-0x40]
  42d661:	inc    rax
  42d664:	movzx  eax,BYTE PTR [rax]
  42d667:	shr    al,0x4
  42d66a:	movzx  eax,al
  42d66d:	or     eax,edx
  42d66f:	movsxd rdx,eax
  42d672:	mov    rax,QWORD PTR [rbp-0x28]
  42d676:	add    rax,rdx
  42d679:	mov    rdx,QWORD PTR [rbp-0x38]
  42d67d:	inc    rdx
  42d680:	movzx  eax,BYTE PTR [rax]
  42d683:	mov    BYTE PTR [rdx],al
  42d685:	mov    rax,QWORD PTR [rbp-0x40]
  42d689:	inc    rax
  42d68c:	movzx  eax,BYTE PTR [rax]
  42d68f:	movzx  eax,al
  42d692:	shl    eax,0x2
  42d695:	and    eax,0x3c
  42d698:	mov    edx,eax
  42d69a:	mov    rax,QWORD PTR [rbp-0x40]
  42d69e:	add    rax,0x2
  42d6a2:	movzx  eax,BYTE PTR [rax]
  42d6a5:	shr    al,0x6
  42d6a8:	movzx  eax,al
  42d6ab:	or     eax,edx
  42d6ad:	movsxd rdx,eax
  42d6b0:	mov    rax,QWORD PTR [rbp-0x28]
  42d6b4:	add    rax,rdx
  42d6b7:	mov    rdx,QWORD PTR [rbp-0x38]
  42d6bb:	add    rdx,0x2
  42d6bf:	movzx  eax,BYTE PTR [rax]
  42d6c2:	mov    BYTE PTR [rdx],al
  42d6c4:	mov    rax,QWORD PTR [rbp-0x40]
  42d6c8:	add    rax,0x2
  42d6cc:	movzx  eax,BYTE PTR [rax]
  42d6cf:	movzx  eax,al
  42d6d2:	and    eax,0x3f
  42d6d5:	mov    rdx,rax
  42d6d8:	mov    rax,QWORD PTR [rbp-0x28]
  42d6dc:	add    rax,rdx
  42d6df:	mov    rdx,QWORD PTR [rbp-0x38]
  42d6e3:	add    rdx,0x3
  42d6e7:	movzx  eax,BYTE PTR [rax]
  42d6ea:	mov    BYTE PTR [rdx],al
  42d6ec:	sub    QWORD PTR [rbp-0x20],0x3
  42d6f1:	add    QWORD PTR [rbp-0x38],0x4
  42d6f6:	add    QWORD PTR [rbp-0x40],0x3
  42d6fb:	cmp    QWORD PTR [rbp-0x20],0x2
  42d700:	ja     42d62e <flatcc_json_parser_struct_as_root@@Base+0x2e19>
  42d706:	cmp    QWORD PTR [rbp-0x20],0x1
  42d70b:	je     42d7bf <flatcc_json_parser_struct_as_root@@Base+0x2faa>
  42d711:	cmp    QWORD PTR [rbp-0x20],0x2
  42d716:	jne    42d82f <flatcc_json_parser_struct_as_root@@Base+0x301a>
  42d71c:	mov    rax,QWORD PTR [rbp-0x40]
  42d720:	movzx  eax,BYTE PTR [rax]
  42d723:	shr    al,0x2
  42d726:	movzx  edx,al
  42d729:	mov    rax,QWORD PTR [rbp-0x28]
  42d72d:	add    rax,rdx
  42d730:	movzx  eax,BYTE PTR [rax]
  42d733:	mov    rdx,QWORD PTR [rbp-0x38]
  42d737:	mov    BYTE PTR [rdx],al
  42d739:	mov    rax,QWORD PTR [rbp-0x40]
  42d73d:	movzx  eax,BYTE PTR [rax]
  42d740:	movzx  eax,al
  42d743:	shl    eax,0x4
  42d746:	and    eax,0x30
  42d749:	mov    edx,eax
  42d74b:	mov    rax,QWORD PTR [rbp-0x40]
  42d74f:	inc    rax
  42d752:	movzx  eax,BYTE PTR [rax]
  42d755:	shr    al,0x4
  42d758:	movzx  eax,al
  42d75b:	or     eax,edx
  42d75d:	movsxd rdx,eax
  42d760:	mov    rax,QWORD PTR [rbp-0x28]
  42d764:	add    rax,rdx
  42d767:	mov    rdx,QWORD PTR [rbp-0x38]
  42d76b:	inc    rdx
  42d76e:	movzx  eax,BYTE PTR [rax]
  42d771:	mov    BYTE PTR [rdx],al
  42d773:	mov    rax,QWORD PTR [rbp-0x40]
  42d777:	inc    rax
  42d77a:	movzx  eax,BYTE PTR [rax]
  42d77d:	movzx  eax,al
  42d780:	shl    eax,0x2
  42d783:	cdqe   
  42d785:	and    eax,0x3c
  42d788:	mov    rdx,rax
  42d78b:	mov    rax,QWORD PTR [rbp-0x28]
  42d78f:	add    rax,rdx
  42d792:	mov    rdx,QWORD PTR [rbp-0x38]
  42d796:	add    rdx,0x2
  42d79a:	movzx  eax,BYTE PTR [rax]
  42d79d:	mov    BYTE PTR [rdx],al
  42d79f:	add    QWORD PTR [rbp-0x38],0x3
  42d7a4:	cmp    DWORD PTR [rbp-0x2c],0x0
  42d7a8:	je     42d838 <flatcc_json_parser_struct_as_root@@Base+0x3023>
  42d7ae:	mov    rax,QWORD PTR [rbp-0x38]
  42d7b2:	lea    rdx,[rax+0x1]
  42d7b6:	mov    QWORD PTR [rbp-0x38],rdx
  42d7ba:	mov    BYTE PTR [rax],0x3d
  42d7bd:	jmp    42d838 <flatcc_json_parser_struct_as_root@@Base+0x3023>
  42d7bf:	mov    rax,QWORD PTR [rbp-0x40]
  42d7c3:	movzx  eax,BYTE PTR [rax]
  42d7c6:	shr    al,0x2
  42d7c9:	movzx  edx,al
  42d7cc:	mov    rax,QWORD PTR [rbp-0x28]
  42d7d0:	add    rax,rdx
  42d7d3:	movzx  eax,BYTE PTR [rax]
  42d7d6:	mov    rdx,QWORD PTR [rbp-0x38]
  42d7da:	mov    BYTE PTR [rdx],al
  42d7dc:	mov    rax,QWORD PTR [rbp-0x40]
  42d7e0:	movzx  eax,BYTE PTR [rax]
  42d7e3:	movzx  eax,al
  42d7e6:	shl    eax,0x4
  42d7e9:	cdqe   
  42d7eb:	and    eax,0x30
  42d7ee:	mov    rdx,rax
  42d7f1:	mov    rax,QWORD PTR [rbp-0x28]
  42d7f5:	add    rax,rdx
  42d7f8:	mov    rdx,QWORD PTR [rbp-0x38]
  42d7fc:	inc    rdx
  42d7ff:	movzx  eax,BYTE PTR [rax]
  42d802:	mov    BYTE PTR [rdx],al
  42d804:	add    QWORD PTR [rbp-0x38],0x2
  42d809:	cmp    DWORD PTR [rbp-0x2c],0x0
  42d80d:	je     42d83b <flatcc_json_parser_struct_as_root@@Base+0x3026>
  42d80f:	mov    rax,QWORD PTR [rbp-0x38]
  42d813:	lea    rdx,[rax+0x1]
  42d817:	mov    QWORD PTR [rbp-0x38],rdx
  42d81b:	mov    BYTE PTR [rax],0x3d
  42d81e:	mov    rax,QWORD PTR [rbp-0x38]
  42d822:	lea    rdx,[rax+0x1]
  42d826:	mov    QWORD PTR [rbp-0x38],rdx
  42d82a:	mov    BYTE PTR [rax],0x3d
  42d82d:	jmp    42d83b <flatcc_json_parser_struct_as_root@@Base+0x3026>
  42d82f:	mov    DWORD PTR [rbp-0x2c],0x0
  42d836:	jmp    42d83c <flatcc_json_parser_struct_as_root@@Base+0x3027>
  42d838:	nop
  42d839:	jmp    42d83c <flatcc_json_parser_struct_as_root@@Base+0x3027>
  42d83b:	nop
  42d83c:	mov    QWORD PTR [rbp-0x20],0x0
  42d844:	cmp    QWORD PTR [rbp-0x48],0x0
  42d849:	je     42d85d <flatcc_json_parser_struct_as_root@@Base+0x3048>
  42d84b:	mov    rax,QWORD PTR [rbp-0x38]
  42d84f:	sub    rax,QWORD PTR [rbp-0x8]
  42d853:	mov    rdx,rax
  42d856:	mov    rax,QWORD PTR [rbp-0x48]
  42d85a:	mov    QWORD PTR [rax],rdx
  42d85d:	cmp    QWORD PTR [rbp-0x50],0x0
  42d862:	je     42d879 <flatcc_json_parser_struct_as_root@@Base+0x3064>
  42d864:	mov    rax,QWORD PTR [rbp-0x50]
  42d868:	mov    rax,QWORD PTR [rax]
  42d86b:	sub    rax,QWORD PTR [rbp-0x20]
  42d86f:	mov    rdx,rax
  42d872:	mov    rax,QWORD PTR [rbp-0x50]
  42d876:	mov    QWORD PTR [rax],rdx
  42d879:	mov    eax,DWORD PTR [rbp-0x30]
  42d87c:	pop    rbp
  42d87d:	ret    
  42d87e:	endbr64 
  42d882:	push   rbp
  42d883:	mov    rbp,rsp
  42d886:	add    rsp,0xffffffffffffff80
  42d88a:	mov    QWORD PTR [rbp-0x58],rdi
  42d88e:	mov    QWORD PTR [rbp-0x60],rsi
  42d892:	mov    QWORD PTR [rbp-0x68],rdx
  42d896:	mov    QWORD PTR [rbp-0x70],rcx
  42d89a:	mov    DWORD PTR [rbp-0x74],r8d
  42d89e:	mov    rax,QWORD PTR fs:0x28
  42d8a7:	mov    QWORD PTR [rbp-0x8],rax
  42d8ab:	xor    eax,eax
  42d8ad:	mov    DWORD PTR [rbp-0x50],0x0
  42d8b4:	mov    rax,QWORD PTR [rbp-0x58]
  42d8b8:	mov    QWORD PTR [rbp-0x18],rax
  42d8bc:	mov    QWORD PTR [rbp-0x38],0xffffffffffffffff
  42d8c4:	mov    QWORD PTR [rbp-0x30],0xffffffffffffffff
  42d8cc:	lea    rax,[rip+0x1092d]        # 43e200 <flatcc_builder_padding_base@@Base+0x3280>
  42d8d3:	mov    QWORD PTR [rbp-0x20],rax
  42d8d7:	mov    eax,DWORD PTR [rbp-0x74]
  42d8da:	and    eax,0x20
  42d8dd:	mov    DWORD PTR [rbp-0x4c],eax
  42d8e0:	cmp    QWORD PTR [rbp-0x70],0x0
  42d8e5:	je     42d8f2 <flatcc_json_parser_struct_as_root@@Base+0x30dd>
  42d8e7:	mov    rax,QWORD PTR [rbp-0x70]
  42d8eb:	mov    rax,QWORD PTR [rax]
  42d8ee:	mov    QWORD PTR [rbp-0x30],rax
  42d8f2:	mov    rax,QWORD PTR [rbp-0x30]
  42d8f6:	mov    QWORD PTR [rbp-0x28],rax
  42d8fa:	and    DWORD PTR [rbp-0x74],0xffffff1f
  42d901:	cmp    DWORD PTR [rbp-0x74],0x0
  42d905:	je     42d90f <flatcc_json_parser_struct_as_root@@Base+0x30fa>
  42d907:	cmp    DWORD PTR [rbp-0x74],0x1
  42d90b:	je     42d92b <flatcc_json_parser_struct_as_root@@Base+0x3116>
  42d90d:	jmp    42d947 <flatcc_json_parser_struct_as_root@@Base+0x3132>
  42d90f:	cmp    DWORD PTR [rbp-0x4c],0x0
  42d913:	je     42d91e <flatcc_json_parser_struct_as_root@@Base+0x3109>
  42d915:	lea    rax,[rip+0x109e4]        # 43e300 <flatcc_builder_padding_base@@Base+0x3380>
  42d91c:	jmp    42d925 <flatcc_json_parser_struct_as_root@@Base+0x3110>
  42d91e:	lea    rax,[rip+0x108db]        # 43e200 <flatcc_builder_padding_base@@Base+0x3280>
  42d925:	mov    QWORD PTR [rbp-0x20],rax
  42d929:	jmp    42d953 <flatcc_json_parser_struct_as_root@@Base+0x313e>
  42d92b:	cmp    DWORD PTR [rbp-0x4c],0x0
  42d92f:	je     42d93a <flatcc_json_parser_struct_as_root@@Base+0x3125>
  42d931:	lea    rax,[rip+0x10ac8]        # 43e400 <flatcc_builder_padding_base@@Base+0x3480>
  42d938:	jmp    42d941 <flatcc_json_parser_struct_as_root@@Base+0x312c>
  42d93a:	lea    rax,[rip+0x10bbf]        # 43e500 <flatcc_builder_padding_base@@Base+0x3580>
  42d941:	mov    QWORD PTR [rbp-0x20],rax
  42d945:	jmp    42d953 <flatcc_json_parser_struct_as_root@@Base+0x313e>
  42d947:	mov    DWORD PTR [rbp-0x50],0x3
  42d94e:	jmp    42db53 <flatcc_json_parser_struct_as_root@@Base+0x333e>
  42d953:	cmp    QWORD PTR [rbp-0x68],0x0
  42d958:	je     42db47 <flatcc_json_parser_struct_as_root@@Base+0x3332>
  42d95e:	mov    rax,QWORD PTR [rbp-0x68]
  42d962:	mov    rax,QWORD PTR [rax]
  42d965:	test   rax,rax
  42d968:	je     42db47 <flatcc_json_parser_struct_as_root@@Base+0x3332>
  42d96e:	mov    rax,QWORD PTR [rbp-0x68]
  42d972:	mov    rax,QWORD PTR [rax]
  42d975:	mov    QWORD PTR [rbp-0x38],rax
  42d979:	jmp    42db47 <flatcc_json_parser_struct_as_root@@Base+0x3332>
  42d97e:	mov    QWORD PTR [rbp-0x48],0x0
  42d986:	jmp    42dab5 <flatcc_json_parser_struct_as_root@@Base+0x32a0>
  42d98b:	mov    rax,QWORD PTR [rbp-0x30]
  42d98f:	cmp    rax,QWORD PTR [rbp-0x48]
  42d993:	jne    42d9aa <flatcc_json_parser_struct_as_root@@Base+0x3195>
  42d995:	mov    rax,QWORD PTR [rbp-0x48]
  42d999:	mov    QWORD PTR [rbp-0x40],rax
  42d99d:	mov    rax,QWORD PTR [rbp-0x48]
  42d9a1:	sub    QWORD PTR [rbp-0x30],rax
  42d9a5:	jmp    42dba3 <flatcc_json_parser_struct_as_root@@Base+0x338e>
  42d9aa:	mov    rdx,QWORD PTR [rbp-0x60]
  42d9ae:	mov    rax,QWORD PTR [rbp-0x48]
  42d9b2:	add    rax,rdx
  42d9b5:	movzx  eax,BYTE PTR [rax]
  42d9b8:	movzx  edx,al
  42d9bb:	mov    rax,QWORD PTR [rbp-0x20]
  42d9bf:	add    rax,rdx
  42d9c2:	movzx  eax,BYTE PTR [rax]
  42d9c5:	lea    rcx,[rbp-0xc]
  42d9c9:	mov    rdx,QWORD PTR [rbp-0x48]
  42d9cd:	add    rdx,rcx
  42d9d0:	mov    BYTE PTR [rdx],al
  42d9d2:	lea    rdx,[rbp-0xc]
  42d9d6:	mov    rax,QWORD PTR [rbp-0x48]
  42d9da:	add    rax,rdx
  42d9dd:	movzx  edx,BYTE PTR [rax]
  42d9e0:	movzx  eax,BYTE PTR [rip+0x10c19]        # 43e600 <flatcc_builder_padding_base@@Base+0x3680>
  42d9e7:	cmp    dl,al
  42d9e9:	jb     42dab1 <flatcc_json_parser_struct_as_root@@Base+0x329c>
  42d9ef:	lea    rdx,[rbp-0xc]
  42d9f3:	mov    rax,QWORD PTR [rbp-0x48]
  42d9f7:	add    rax,rdx
  42d9fa:	movzx  edx,BYTE PTR [rax]
  42d9fd:	movzx  eax,BYTE PTR [rip+0x10bfd]        # 43e601 <flatcc_builder_padding_base@@Base+0x3681>
  42da04:	cmp    dl,al
  42da06:	jne    42da19 <flatcc_json_parser_struct_as_root@@Base+0x3204>
  42da08:	inc    QWORD PTR [rbp-0x60]
  42da0c:	dec    QWORD PTR [rbp-0x30]
  42da10:	dec    QWORD PTR [rbp-0x48]
  42da14:	jmp    42dab1 <flatcc_json_parser_struct_as_root@@Base+0x329c>
  42da19:	mov    rax,QWORD PTR [rbp-0x48]
  42da1d:	mov    QWORD PTR [rbp-0x40],rax
  42da21:	lea    rdx,[rbp-0xc]
  42da25:	mov    rax,QWORD PTR [rbp-0x48]
  42da29:	add    rax,rdx
  42da2c:	movzx  edx,BYTE PTR [rax]
  42da2f:	movzx  eax,BYTE PTR [rip+0x10bcc]        # 43e602 <flatcc_builder_padding_base@@Base+0x3682>
  42da36:	cmp    dl,al
  42da38:	jne    42daa4 <flatcc_json_parser_struct_as_root@@Base+0x328f>
  42da3a:	inc    QWORD PTR [rbp-0x48]
  42da3e:	jmp    42da90 <flatcc_json_parser_struct_as_root@@Base+0x327b>
  42da40:	mov    rdx,QWORD PTR [rbp-0x60]
  42da44:	mov    rax,QWORD PTR [rbp-0x48]
  42da48:	add    rax,rdx
  42da4b:	movzx  eax,BYTE PTR [rax]
  42da4e:	movzx  edx,al
  42da51:	mov    rax,QWORD PTR [rbp-0x20]
  42da55:	add    rax,rdx
  42da58:	movzx  edx,BYTE PTR [rax]
  42da5b:	movzx  eax,BYTE PTR [rip+0x10ba0]        # 43e602 <flatcc_builder_padding_base@@Base+0x3682>
  42da62:	cmp    dl,al
  42da64:	je     42da8c <flatcc_json_parser_struct_as_root@@Base+0x3277>
  42da66:	mov    rdx,QWORD PTR [rbp-0x60]
  42da6a:	mov    rax,QWORD PTR [rbp-0x48]
  42da6e:	add    rax,rdx
  42da71:	movzx  eax,BYTE PTR [rax]
  42da74:	movzx  edx,al
  42da77:	mov    rax,QWORD PTR [rbp-0x20]
  42da7b:	add    rax,rdx
  42da7e:	movzx  edx,BYTE PTR [rax]
  42da81:	movzx  eax,BYTE PTR [rip+0x10b79]        # 43e601 <flatcc_builder_padding_base@@Base+0x3681>
  42da88:	cmp    dl,al
  42da8a:	jne    42daa3 <flatcc_json_parser_struct_as_root@@Base+0x328e>
  42da8c:	inc    QWORD PTR [rbp-0x48]
  42da90:	mov    rax,QWORD PTR [rbp-0x48]
  42da94:	cmp    rax,QWORD PTR [rbp-0x30]
  42da98:	jae    42daa4 <flatcc_json_parser_struct_as_root@@Base+0x328f>
  42da9a:	cmp    QWORD PTR [rbp-0x48],0x7
  42da9f:	jbe    42da40 <flatcc_json_parser_struct_as_root@@Base+0x322b>
  42daa1:	jmp    42daa4 <flatcc_json_parser_struct_as_root@@Base+0x328f>
  42daa3:	nop
  42daa4:	mov    rax,QWORD PTR [rbp-0x48]
  42daa8:	sub    QWORD PTR [rbp-0x30],rax
  42daac:	jmp    42dba3 <flatcc_json_parser_struct_as_root@@Base+0x338e>
  42dab1:	inc    QWORD PTR [rbp-0x48]
  42dab5:	cmp    QWORD PTR [rbp-0x48],0x3
  42daba:	jbe    42d98b <flatcc_json_parser_struct_as_root@@Base+0x3176>
  42dac0:	cmp    QWORD PTR [rbp-0x38],0x2
  42dac5:	jbe    42dc8c <flatcc_json_parser_struct_as_root@@Base+0x3477>
  42dacb:	movzx  eax,BYTE PTR [rbp-0xc]
  42dacf:	movzx  eax,al
  42dad2:	shl    eax,0x2
  42dad5:	mov    edx,eax
  42dad7:	movzx  eax,BYTE PTR [rbp-0xb]
  42dadb:	shr    al,0x4
  42dade:	or     eax,edx
  42dae0:	mov    edx,eax
  42dae2:	mov    rax,QWORD PTR [rbp-0x58]
  42dae6:	mov    BYTE PTR [rax],dl
  42dae8:	movzx  eax,BYTE PTR [rbp-0xb]
  42daec:	movzx  eax,al
  42daef:	shl    eax,0x4
  42daf2:	mov    edx,eax
  42daf4:	movzx  eax,BYTE PTR [rbp-0xa]
  42daf8:	shr    al,0x2
  42dafb:	mov    ecx,edx
  42dafd:	or     ecx,eax
  42daff:	mov    rax,QWORD PTR [rbp-0x58]
  42db03:	lea    rdx,[rax+0x1]
  42db07:	mov    eax,ecx
  42db09:	mov    BYTE PTR [rdx],al
  42db0b:	movzx  eax,BYTE PTR [rbp-0xa]
  42db0f:	movzx  eax,al
  42db12:	shl    eax,0x6
  42db15:	mov    edx,eax
  42db17:	movzx  eax,BYTE PTR [rbp-0x9]
  42db1b:	mov    ecx,edx
  42db1d:	or     ecx,eax
  42db1f:	mov    rax,QWORD PTR [rbp-0x58]
  42db23:	lea    rdx,[rax+0x2]
  42db27:	mov    eax,ecx
  42db29:	mov    BYTE PTR [rdx],al
  42db2b:	add    QWORD PTR [rbp-0x58],0x3
  42db30:	add    QWORD PTR [rbp-0x60],0x4
  42db35:	sub    QWORD PTR [rbp-0x38],0x3
  42db3a:	sub    QWORD PTR [rbp-0x30],0x4
  42db3f:	mov    rax,QWORD PTR [rbp-0x30]
  42db43:	mov    QWORD PTR [rbp-0x28],rax
  42db47:	cmp    QWORD PTR [rbp-0x38],0x0
  42db4c:	jne    42d97e <flatcc_json_parser_struct_as_root@@Base+0x3169>
  42db52:	nop
  42db53:	cmp    QWORD PTR [rbp-0x68],0x0
  42db58:	je     42db6c <flatcc_json_parser_struct_as_root@@Base+0x3357>
  42db5a:	mov    rax,QWORD PTR [rbp-0x58]
  42db5e:	sub    rax,QWORD PTR [rbp-0x18]
  42db62:	mov    rdx,rax
  42db65:	mov    rax,QWORD PTR [rbp-0x68]
  42db69:	mov    QWORD PTR [rax],rdx
  42db6c:	cmp    QWORD PTR [rbp-0x70],0x0
  42db71:	je     42db88 <flatcc_json_parser_struct_as_root@@Base+0x3373>
  42db73:	mov    rax,QWORD PTR [rbp-0x70]
  42db77:	mov    rax,QWORD PTR [rax]
  42db7a:	sub    rax,QWORD PTR [rbp-0x28]
  42db7e:	mov    rdx,rax
  42db81:	mov    rax,QWORD PTR [rbp-0x70]
  42db85:	mov    QWORD PTR [rax],rdx
  42db88:	mov    eax,DWORD PTR [rbp-0x50]
  42db8b:	mov    rsi,QWORD PTR [rbp-0x8]
  42db8f:	xor    rsi,QWORD PTR fs:0x28
  42db98:	je     42dca4 <flatcc_json_parser_struct_as_root@@Base+0x348f>
  42db9e:	jmp    42dc9f <flatcc_json_parser_struct_as_root@@Base+0x348a>
  42dba3:	cmp    QWORD PTR [rbp-0x40],0x2
  42dba8:	je     42dbc1 <flatcc_json_parser_struct_as_root@@Base+0x33ac>
  42dbaa:	cmp    QWORD PTR [rbp-0x40],0x3
  42dbaf:	je     42dc04 <flatcc_json_parser_struct_as_root@@Base+0x33ef>
  42dbb1:	cmp    QWORD PTR [rbp-0x40],0x0
  42dbb6:	jne    42dc63 <flatcc_json_parser_struct_as_root@@Base+0x344e>
  42dbbc:	jmp    42dc6f <flatcc_json_parser_struct_as_root@@Base+0x345a>
  42dbc1:	movzx  eax,BYTE PTR [rbp-0xb]
  42dbc5:	movzx  eax,al
  42dbc8:	shl    eax,0x4
  42dbcb:	movzx  eax,al
  42dbce:	test   eax,eax
  42dbd0:	jne    42dc7c <flatcc_json_parser_struct_as_root@@Base+0x3467>
  42dbd6:	cmp    QWORD PTR [rbp-0x38],0x0
  42dbdb:	je     42dc8f <flatcc_json_parser_struct_as_root@@Base+0x347a>
  42dbe1:	movzx  eax,BYTE PTR [rbp-0xc]
  42dbe5:	movzx  eax,al
  42dbe8:	shl    eax,0x2
  42dbeb:	mov    edx,eax
  42dbed:	movzx  eax,BYTE PTR [rbp-0xb]
  42dbf1:	shr    al,0x4
  42dbf4:	or     eax,edx
  42dbf6:	mov    edx,eax
  42dbf8:	mov    rax,QWORD PTR [rbp-0x58]
  42dbfc:	mov    BYTE PTR [rax],dl
  42dbfe:	inc    QWORD PTR [rbp-0x58]
  42dc02:	jmp    42dc6f <flatcc_json_parser_struct_as_root@@Base+0x345a>
  42dc04:	movzx  eax,BYTE PTR [rbp-0xa]
  42dc08:	movzx  eax,al
  42dc0b:	shl    eax,0x6
  42dc0e:	movzx  eax,al
  42dc11:	test   eax,eax
  42dc13:	jne    42dc7f <flatcc_json_parser_struct_as_root@@Base+0x346a>
  42dc15:	cmp    QWORD PTR [rbp-0x38],0x1
  42dc1a:	jbe    42dc92 <flatcc_json_parser_struct_as_root@@Base+0x347d>
  42dc1c:	movzx  eax,BYTE PTR [rbp-0xc]
  42dc20:	movzx  eax,al
  42dc23:	shl    eax,0x2
  42dc26:	mov    edx,eax
  42dc28:	movzx  eax,BYTE PTR [rbp-0xb]
  42dc2c:	shr    al,0x4
  42dc2f:	or     eax,edx
  42dc31:	mov    edx,eax
  42dc33:	mov    rax,QWORD PTR [rbp-0x58]
  42dc37:	mov    BYTE PTR [rax],dl
  42dc39:	movzx  eax,BYTE PTR [rbp-0xb]
  42dc3d:	movzx  eax,al
  42dc40:	shl    eax,0x4
  42dc43:	mov    edx,eax
  42dc45:	movzx  eax,BYTE PTR [rbp-0xa]
  42dc49:	shr    al,0x2
  42dc4c:	mov    ecx,edx
  42dc4e:	or     ecx,eax
  42dc50:	mov    rax,QWORD PTR [rbp-0x58]
  42dc54:	lea    rdx,[rax+0x1]
  42dc58:	mov    eax,ecx
  42dc5a:	mov    BYTE PTR [rdx],al
  42dc5c:	add    QWORD PTR [rbp-0x58],0x2
  42dc61:	jmp    42dc6f <flatcc_json_parser_struct_as_root@@Base+0x345a>
  42dc63:	mov    DWORD PTR [rbp-0x50],0x4
  42dc6a:	jmp    42db53 <flatcc_json_parser_struct_as_root@@Base+0x333e>
  42dc6f:	mov    rax,QWORD PTR [rbp-0x30]
  42dc73:	mov    QWORD PTR [rbp-0x28],rax
  42dc77:	jmp    42db53 <flatcc_json_parser_struct_as_root@@Base+0x333e>
  42dc7c:	nop
  42dc7d:	jmp    42dc80 <flatcc_json_parser_struct_as_root@@Base+0x346b>
  42dc7f:	nop
  42dc80:	mov    DWORD PTR [rbp-0x50],0x5
  42dc87:	jmp    42db53 <flatcc_json_parser_struct_as_root@@Base+0x333e>
  42dc8c:	nop
  42dc8d:	jmp    42dc93 <flatcc_json_parser_struct_as_root@@Base+0x347e>
  42dc8f:	nop
  42dc90:	jmp    42dc93 <flatcc_json_parser_struct_as_root@@Base+0x347e>
  42dc92:	nop
  42dc93:	mov    DWORD PTR [rbp-0x50],0x1
  42dc9a:	jmp    42db53 <flatcc_json_parser_struct_as_root@@Base+0x333e>
  42dc9f:	call   4061a0 <__stack_chk_fail@plt>
  42dca4:	leave  
  42dca5:	ret    

000000000042dca6 <flatcc_json_printer_error_string@@Base>:
  42dca6:	endbr64 
  42dcaa:	push   rbp
  42dcab:	mov    rbp,rsp
  42dcae:	mov    DWORD PTR [rbp-0x4],edi
  42dcb1:	cmp    DWORD PTR [rbp-0x4],0x1
  42dcb5:	je     42dcdc <flatcc_json_printer_error_string@@Base+0x36>
  42dcb7:	cmp    DWORD PTR [rbp-0x4],0x1
  42dcbb:	jg     42dcc5 <flatcc_json_printer_error_string@@Base+0x1f>
  42dcbd:	cmp    DWORD PTR [rbp-0x4],0x0
  42dcc1:	je     42dcd3 <flatcc_json_printer_error_string@@Base+0x2d>
  42dcc3:	jmp    42dcf7 <flatcc_json_printer_error_string@@Base+0x51>
  42dcc5:	cmp    DWORD PTR [rbp-0x4],0x2
  42dcc9:	je     42dce5 <flatcc_json_printer_error_string@@Base+0x3f>
  42dccb:	cmp    DWORD PTR [rbp-0x4],0x3
  42dccf:	je     42dcee <flatcc_json_printer_error_string@@Base+0x48>
  42dcd1:	jmp    42dcf7 <flatcc_json_printer_error_string@@Base+0x51>
  42dcd3:	lea    rax,[rip+0x1022b]        # 43df05 <flatcc_builder_padding_base@@Base+0x2f85>
  42dcda:	jmp    42dcfe <flatcc_json_printer_error_string@@Base+0x58>
  42dcdc:	lea    rax,[rip+0x1032e]        # 43e011 <flatcc_builder_padding_base@@Base+0x3091>
  42dce3:	jmp    42dcfe <flatcc_json_printer_error_string@@Base+0x58>
  42dce5:	lea    rax,[rip+0x1032f]        # 43e01b <flatcc_builder_padding_base@@Base+0x309b>
  42dcec:	jmp    42dcfe <flatcc_json_printer_error_string@@Base+0x58>
  42dcee:	lea    rax,[rip+0x10335]        # 43e02a <flatcc_builder_padding_base@@Base+0x30aa>
  42dcf5:	jmp    42dcfe <flatcc_json_printer_error_string@@Base+0x58>
  42dcf7:	lea    rax,[rip+0x10335]        # 43e033 <flatcc_builder_padding_base@@Base+0x30b3>
  42dcfe:	pop    rbp
  42dcff:	ret    
  42dd00:	push   rbp
  42dd01:	mov    rbp,rsp
  42dd04:	sub    rsp,0x8
  42dd08:	mov    QWORD PTR [rbp-0x8],rdi
  42dd0c:	mov    rax,QWORD PTR [rbp-0x8]
  42dd10:	mov    rdi,rax
  42dd13:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  42dd18:	mov    edx,eax
  42dd1a:	mov    rax,QWORD PTR [rbp-0x8]
  42dd1e:	add    rax,rdx
  42dd21:	leave  
  42dd22:	ret    
  42dd23:	push   rbp
  42dd24:	mov    rbp,rsp
  42dd27:	sub    rsp,0x10
  42dd2b:	mov    QWORD PTR [rbp-0x8],rdi
  42dd2f:	mov    DWORD PTR [rbp-0xc],esi
  42dd32:	mov    edx,DWORD PTR [rbp-0xc]
  42dd35:	mov    rax,QWORD PTR [rbp-0x8]
  42dd39:	add    rax,rdx
  42dd3c:	mov    rdi,rax
  42dd3f:	call   42abc8 <flatcc_json_parser_struct_as_root@@Base+0x3b3>
  42dd44:	leave  
  42dd45:	ret    
  42dd46:	push   rbp
  42dd47:	mov    rbp,rsp
  42dd4a:	sub    rsp,0x20
  42dd4e:	mov    QWORD PTR [rbp-0x18],rdi
  42dd52:	mov    DWORD PTR [rbp-0x1c],esi
  42dd55:	mov    eax,DWORD PTR [rbp-0x1c]
  42dd58:	add    eax,0x2
  42dd5b:	cdqe   
  42dd5d:	add    eax,eax
  42dd5f:	mov    DWORD PTR [rbp-0x4],eax
  42dd62:	mov    rax,QWORD PTR [rbp-0x18]
  42dd66:	mov    eax,DWORD PTR [rax+0x10]
  42dd69:	cmp    DWORD PTR [rbp-0x4],eax
  42dd6c:	jl     42dd75 <flatcc_json_printer_error_string@@Base+0xcf>
  42dd6e:	mov    eax,0x0
  42dd73:	jmp    42ddac <flatcc_json_printer_error_string@@Base+0x106>
  42dd75:	mov    edx,DWORD PTR [rbp-0x4]
  42dd78:	mov    rax,QWORD PTR [rbp-0x18]
  42dd7c:	mov    rax,QWORD PTR [rax+0x8]
  42dd80:	mov    esi,edx
  42dd82:	mov    rdi,rax
  42dd85:	call   42dd23 <flatcc_json_printer_error_string@@Base+0x7d>
  42dd8a:	movzx  eax,ax
  42dd8d:	mov    DWORD PTR [rbp-0x4],eax
  42dd90:	cmp    DWORD PTR [rbp-0x4],0x0
  42dd94:	jne    42dd9d <flatcc_json_printer_error_string@@Base+0xf7>
  42dd96:	mov    eax,0x0
  42dd9b:	jmp    42ddac <flatcc_json_printer_error_string@@Base+0x106>
  42dd9d:	mov    rax,QWORD PTR [rbp-0x18]
  42dda1:	mov    rdx,QWORD PTR [rax]
  42dda4:	mov    eax,DWORD PTR [rbp-0x4]
  42dda7:	cdqe   
  42dda9:	add    rax,rdx
  42ddac:	leave  
  42ddad:	ret    

000000000042ddae <flatcc_json_printer_fmt_float@@Base>:
  42ddae:	endbr64 
  42ddb2:	push   rbp
  42ddb3:	mov    rbp,rsp
  42ddb6:	sub    rsp,0x10
  42ddba:	mov    QWORD PTR [rbp-0x8],rdi
  42ddbe:	vmovss DWORD PTR [rbp-0xc],xmm0
  42ddc3:	vcvtss2sd xmm1,xmm1,DWORD PTR [rbp-0xc]
  42ddc8:	vmovq  rax,xmm1
  42ddcd:	mov    rdx,QWORD PTR [rbp-0x8]
  42ddd1:	mov    rdi,rdx
  42ddd4:	vmovq  xmm0,rax
  42ddd9:	call   42d01c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  42ddde:	leave  
  42dddf:	ret    

000000000042dde0 <flatcc_json_printer_fmt_double@@Base>:
  42dde0:	endbr64 
  42dde4:	push   rbp
  42dde5:	mov    rbp,rsp
  42dde8:	sub    rsp,0x10
  42ddec:	mov    QWORD PTR [rbp-0x8],rdi
  42ddf0:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42ddf5:	mov    rdx,QWORD PTR [rbp-0x8]
  42ddf9:	mov    rax,QWORD PTR [rbp-0x10]
  42ddfd:	mov    rdi,rdx
  42de00:	vmovq  xmm0,rax
  42de05:	call   42d01c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  42de0a:	leave  
  42de0b:	ret    

000000000042de0c <flatcc_json_printer_fmt_bool@@Base>:
  42de0c:	endbr64 
  42de10:	push   rbp
  42de11:	mov    rbp,rsp
  42de14:	sub    rsp,0x10
  42de18:	mov    QWORD PTR [rbp-0x8],rdi
  42de1c:	mov    DWORD PTR [rbp-0xc],esi
  42de1f:	cmp    DWORD PTR [rbp-0xc],0x0
  42de23:	je     42de44 <flatcc_json_printer_fmt_bool@@Base+0x38>
  42de25:	mov    rax,QWORD PTR [rbp-0x8]
  42de29:	mov    edx,0x4
  42de2e:	lea    rsi,[rip+0x10206]        # 43e03b <flatcc_builder_padding_base@@Base+0x30bb>
  42de35:	mov    rdi,rax
  42de38:	call   406220 <memcpy@plt>
  42de3d:	mov    eax,0x4
  42de42:	jmp    42de61 <flatcc_json_printer_fmt_bool@@Base+0x55>
  42de44:	mov    rax,QWORD PTR [rbp-0x8]
  42de48:	mov    edx,0x5
  42de4d:	lea    rsi,[rip+0x101ec]        # 43e040 <flatcc_builder_padding_base@@Base+0x30c0>
  42de54:	mov    rdi,rax
  42de57:	call   406220 <memcpy@plt>
  42de5c:	mov    eax,0x5
  42de61:	leave  
  42de62:	ret    
  42de63:	endbr64 
  42de67:	push   rbp
  42de68:	mov    rbp,rsp
  42de6b:	sub    rsp,0x30
  42de6f:	mov    QWORD PTR [rbp-0x18],rdi
  42de73:	mov    QWORD PTR [rbp-0x20],rsi
  42de77:	mov    QWORD PTR [rbp-0x28],rdx
  42de7b:	mov    rax,QWORD PTR [rbp-0x18]
  42de7f:	mov    rdx,QWORD PTR [rax+0x28]
  42de83:	mov    rax,QWORD PTR [rbp-0x18]
  42de87:	mov    rax,QWORD PTR [rax+0x20]
  42de8b:	cmp    rdx,rax
  42de8e:	jb     42dea6 <flatcc_json_printer_fmt_bool@@Base+0x9a>
  42de90:	mov    rax,QWORD PTR [rbp-0x18]
  42de94:	mov    rax,QWORD PTR [rax+0x48]
  42de98:	mov    rdx,QWORD PTR [rbp-0x18]
  42de9c:	mov    esi,0x0
  42dea1:	mov    rdi,rdx
  42dea4:	call   rax
  42dea6:	mov    rax,QWORD PTR [rbp-0x18]
  42deaa:	mov    rdx,QWORD PTR [rax+0x20]
  42deae:	mov    rax,QWORD PTR [rbp-0x18]
  42deb2:	mov    rax,QWORD PTR [rax+0x28]
  42deb6:	sub    rdx,rax
  42deb9:	mov    rax,rdx
  42debc:	mov    QWORD PTR [rbp-0x8],rax
  42dec0:	jmp    42df34 <flatcc_json_printer_fmt_bool@@Base+0x128>
  42dec2:	mov    rax,QWORD PTR [rbp-0x18]
  42dec6:	mov    rax,QWORD PTR [rax+0x28]
  42deca:	mov    rdx,QWORD PTR [rbp-0x8]
  42dece:	mov    rcx,QWORD PTR [rbp-0x20]
  42ded2:	mov    rsi,rcx
  42ded5:	mov    rdi,rax
  42ded8:	call   406220 <memcpy@plt>
  42dedd:	mov    rax,QWORD PTR [rbp-0x18]
  42dee1:	mov    rdx,QWORD PTR [rax+0x28]
  42dee5:	mov    rax,QWORD PTR [rbp-0x8]
  42dee9:	add    rdx,rax
  42deec:	mov    rax,QWORD PTR [rbp-0x18]
  42def0:	mov    QWORD PTR [rax+0x28],rdx
  42def4:	mov    rax,QWORD PTR [rbp-0x8]
  42def8:	add    QWORD PTR [rbp-0x20],rax
  42defc:	mov    rax,QWORD PTR [rbp-0x8]
  42df00:	sub    QWORD PTR [rbp-0x28],rax
  42df04:	mov    rax,QWORD PTR [rbp-0x18]
  42df08:	mov    rax,QWORD PTR [rax+0x48]
  42df0c:	mov    rdx,QWORD PTR [rbp-0x18]
  42df10:	mov    esi,0x0
  42df15:	mov    rdi,rdx
  42df18:	call   rax
  42df1a:	mov    rax,QWORD PTR [rbp-0x18]
  42df1e:	mov    rdx,QWORD PTR [rax+0x20]
  42df22:	mov    rax,QWORD PTR [rbp-0x18]
  42df26:	mov    rax,QWORD PTR [rax+0x28]
  42df2a:	sub    rdx,rax
  42df2d:	mov    rax,rdx
  42df30:	mov    QWORD PTR [rbp-0x8],rax
  42df34:	mov    rax,QWORD PTR [rbp-0x28]
  42df38:	cmp    rax,QWORD PTR [rbp-0x8]
  42df3c:	ja     42dec2 <flatcc_json_printer_fmt_bool@@Base+0xb6>
  42df3e:	mov    rax,QWORD PTR [rbp-0x18]
  42df42:	mov    rax,QWORD PTR [rax+0x28]
  42df46:	mov    rdx,QWORD PTR [rbp-0x28]
  42df4a:	mov    rcx,QWORD PTR [rbp-0x20]
  42df4e:	mov    rsi,rcx
  42df51:	mov    rdi,rax
  42df54:	call   406220 <memcpy@plt>
  42df59:	mov    rax,QWORD PTR [rbp-0x18]
  42df5d:	mov    rdx,QWORD PTR [rax+0x28]
  42df61:	mov    rax,QWORD PTR [rbp-0x28]
  42df65:	add    rdx,rax
  42df68:	mov    rax,QWORD PTR [rbp-0x18]
  42df6c:	mov    QWORD PTR [rax+0x28],rdx
  42df70:	nop
  42df71:	leave  
  42df72:	ret    
  42df73:	push   rbp
  42df74:	mov    rbp,rsp
  42df77:	sub    rsp,0x20
  42df7b:	mov    QWORD PTR [rbp-0x8],rdi
  42df7f:	mov    QWORD PTR [rbp-0x10],rsi
  42df83:	mov    QWORD PTR [rbp-0x18],rdx
  42df87:	mov    rax,QWORD PTR [rbp-0x8]
  42df8b:	mov    rdx,QWORD PTR [rax+0x28]
  42df8f:	mov    rax,QWORD PTR [rbp-0x18]
  42df93:	add    rdx,rax
  42df96:	mov    rax,QWORD PTR [rbp-0x8]
  42df9a:	mov    rax,QWORD PTR [rax+0x20]
  42df9e:	cmp    rdx,rax
  42dfa1:	jb     42dfbc <flatcc_json_printer_fmt_bool@@Base+0x1b0>
  42dfa3:	mov    rdx,QWORD PTR [rbp-0x18]
  42dfa7:	mov    rcx,QWORD PTR [rbp-0x10]
  42dfab:	mov    rax,QWORD PTR [rbp-0x8]
  42dfaf:	mov    rsi,rcx
  42dfb2:	mov    rdi,rax
  42dfb5:	call   42de63 <flatcc_json_printer_fmt_bool@@Base+0x57>
  42dfba:	jmp    42dfee <flatcc_json_printer_fmt_bool@@Base+0x1e2>
  42dfbc:	mov    rax,QWORD PTR [rbp-0x8]
  42dfc0:	mov    rax,QWORD PTR [rax+0x28]
  42dfc4:	mov    rdx,QWORD PTR [rbp-0x18]
  42dfc8:	mov    rcx,QWORD PTR [rbp-0x10]
  42dfcc:	mov    rsi,rcx
  42dfcf:	mov    rdi,rax
  42dfd2:	call   406220 <memcpy@plt>
  42dfd7:	mov    rax,QWORD PTR [rbp-0x8]
  42dfdb:	mov    rdx,QWORD PTR [rax+0x28]
  42dfdf:	mov    rax,QWORD PTR [rbp-0x18]
  42dfe3:	add    rdx,rax
  42dfe6:	mov    rax,QWORD PTR [rbp-0x8]
  42dfea:	mov    QWORD PTR [rax+0x28],rdx
  42dfee:	nop
  42dfef:	leave  
  42dff0:	ret    
  42dff1:	endbr64 
  42dff5:	push   rbp
  42dff6:	mov    rbp,rsp
  42dff9:	sub    rsp,0x40
  42dffd:	mov    QWORD PTR [rbp-0x28],rdi
  42e001:	mov    QWORD PTR [rbp-0x30],rsi
  42e005:	mov    QWORD PTR [rbp-0x38],rdx
  42e009:	mov    rax,QWORD PTR [rbp-0x30]
  42e00d:	mov    QWORD PTR [rbp-0x10],rax
  42e011:	mov    rax,QWORD PTR [rbp-0x28]
  42e015:	mov    rax,QWORD PTR [rax+0x28]
  42e019:	lea    rcx,[rax+0x1]
  42e01d:	mov    rdx,QWORD PTR [rbp-0x28]
  42e021:	mov    QWORD PTR [rdx+0x28],rcx
  42e025:	mov    BYTE PTR [rax],0x22
  42e028:	mov    rax,QWORD PTR [rbp-0x10]
  42e02c:	movzx  eax,BYTE PTR [rax]
  42e02f:	mov    BYTE PTR [rbp-0x12],al
  42e032:	jmp    42e042 <flatcc_json_printer_fmt_bool@@Base+0x236>
  42e034:	inc    QWORD PTR [rbp-0x10]
  42e038:	mov    rax,QWORD PTR [rbp-0x10]
  42e03c:	movzx  eax,BYTE PTR [rax]
  42e03f:	mov    BYTE PTR [rbp-0x12],al
  42e042:	cmp    BYTE PTR [rbp-0x12],0x1f
  42e046:	jbe    42e054 <flatcc_json_printer_fmt_bool@@Base+0x248>
  42e048:	cmp    BYTE PTR [rbp-0x12],0x22
  42e04c:	je     42e054 <flatcc_json_printer_fmt_bool@@Base+0x248>
  42e04e:	cmp    BYTE PTR [rbp-0x12],0x5c
  42e052:	jne    42e034 <flatcc_json_printer_fmt_bool@@Base+0x228>
  42e054:	mov    rax,QWORD PTR [rbp-0x10]
  42e058:	sub    rax,QWORD PTR [rbp-0x30]
  42e05c:	mov    QWORD PTR [rbp-0x8],rax
  42e060:	mov    rdx,QWORD PTR [rbp-0x8]
  42e064:	mov    rcx,QWORD PTR [rbp-0x30]
  42e068:	mov    rax,QWORD PTR [rbp-0x28]
  42e06c:	mov    rsi,rcx
  42e06f:	mov    rdi,rax
  42e072:	call   42df73 <flatcc_json_printer_fmt_bool@@Base+0x167>
  42e077:	mov    rax,QWORD PTR [rbp-0x8]
  42e07b:	sub    QWORD PTR [rbp-0x38],rax
  42e07f:	cmp    QWORD PTR [rbp-0x38],0x0
  42e084:	je     42e278 <flatcc_json_printer_fmt_bool@@Base+0x46c>
  42e08a:	mov    rax,QWORD PTR [rbp-0x8]
  42e08e:	add    QWORD PTR [rbp-0x30],rax
  42e092:	mov    rax,QWORD PTR [rbp-0x28]
  42e096:	mov    rax,QWORD PTR [rax+0x28]
  42e09a:	lea    rcx,[rax+0x1]
  42e09e:	mov    rdx,QWORD PTR [rbp-0x28]
  42e0a2:	mov    QWORD PTR [rdx+0x28],rcx
  42e0a6:	mov    BYTE PTR [rax],0x5c
  42e0a9:	movzx  eax,BYTE PTR [rbp-0x12]
  42e0ad:	cmp    eax,0xc
  42e0b0:	je     42e13f <flatcc_json_printer_fmt_bool@@Base+0x333>
  42e0b6:	cmp    eax,0xc
  42e0b9:	jg     42e0d7 <flatcc_json_printer_fmt_bool@@Base+0x2cb>
  42e0bb:	cmp    eax,0x9
  42e0be:	je     42e123 <flatcc_json_printer_fmt_bool@@Base+0x317>
  42e0c0:	cmp    eax,0xa
  42e0c3:	je     42e177 <flatcc_json_printer_fmt_bool@@Base+0x36b>
  42e0c9:	cmp    eax,0x8
  42e0cc:	je     42e193 <flatcc_json_printer_fmt_bool@@Base+0x387>
  42e0d2:	jmp    42e1af <flatcc_json_printer_fmt_bool@@Base+0x3a3>
  42e0d7:	cmp    eax,0x22
  42e0da:	je     42e0eb <flatcc_json_printer_fmt_bool@@Base+0x2df>
  42e0dc:	cmp    eax,0x5c
  42e0df:	je     42e107 <flatcc_json_printer_fmt_bool@@Base+0x2fb>
  42e0e1:	cmp    eax,0xd
  42e0e4:	je     42e15b <flatcc_json_printer_fmt_bool@@Base+0x34f>
  42e0e6:	jmp    42e1af <flatcc_json_printer_fmt_bool@@Base+0x3a3>
  42e0eb:	mov    rax,QWORD PTR [rbp-0x28]
  42e0ef:	mov    rax,QWORD PTR [rax+0x28]
  42e0f3:	lea    rcx,[rax+0x1]
  42e0f7:	mov    rdx,QWORD PTR [rbp-0x28]
  42e0fb:	mov    QWORD PTR [rdx+0x28],rcx
  42e0ff:	mov    BYTE PTR [rax],0x22
  42e102:	jmp    42e267 <flatcc_json_printer_fmt_bool@@Base+0x45b>
  42e107:	mov    rax,QWORD PTR [rbp-0x28]
  42e10b:	mov    rax,QWORD PTR [rax+0x28]
  42e10f:	lea    rcx,[rax+0x1]
  42e113:	mov    rdx,QWORD PTR [rbp-0x28]
  42e117:	mov    QWORD PTR [rdx+0x28],rcx
  42e11b:	mov    BYTE PTR [rax],0x5c
  42e11e:	jmp    42e267 <flatcc_json_printer_fmt_bool@@Base+0x45b>
  42e123:	mov    rax,QWORD PTR [rbp-0x28]
  42e127:	mov    rax,QWORD PTR [rax+0x28]
  42e12b:	lea    rcx,[rax+0x1]
  42e12f:	mov    rdx,QWORD PTR [rbp-0x28]
  42e133:	mov    QWORD PTR [rdx+0x28],rcx
  42e137:	mov    BYTE PTR [rax],0x74
  42e13a:	jmp    42e267 <flatcc_json_printer_fmt_bool@@Base+0x45b>
  42e13f:	mov    rax,QWORD PTR [rbp-0x28]
  42e143:	mov    rax,QWORD PTR [rax+0x28]
  42e147:	lea    rcx,[rax+0x1]
  42e14b:	mov    rdx,QWORD PTR [rbp-0x28]
  42e14f:	mov    QWORD PTR [rdx+0x28],rcx
  42e153:	mov    BYTE PTR [rax],0x66
  42e156:	jmp    42e267 <flatcc_json_printer_fmt_bool@@Base+0x45b>
  42e15b:	mov    rax,QWORD PTR [rbp-0x28]
  42e15f:	mov    rax,QWORD PTR [rax+0x28]
  42e163:	lea    rcx,[rax+0x1]
  42e167:	mov    rdx,QWORD PTR [rbp-0x28]
  42e16b:	mov    QWORD PTR [rdx+0x28],rcx
  42e16f:	mov    BYTE PTR [rax],0x72
  42e172:	jmp    42e267 <flatcc_json_printer_fmt_bool@@Base+0x45b>
  42e177:	mov    rax,QWORD PTR [rbp-0x28]
  42e17b:	mov    rax,QWORD PTR [rax+0x28]
  42e17f:	lea    rcx,[rax+0x1]
  42e183:	mov    rdx,QWORD PTR [rbp-0x28]
  42e187:	mov    QWORD PTR [rdx+0x28],rcx
  42e18b:	mov    BYTE PTR [rax],0x6e
  42e18e:	jmp    42e267 <flatcc_json_printer_fmt_bool@@Base+0x45b>
  42e193:	mov    rax,QWORD PTR [rbp-0x28]
  42e197:	mov    rax,QWORD PTR [rax+0x28]
  42e19b:	lea    rcx,[rax+0x1]
  42e19f:	mov    rdx,QWORD PTR [rbp-0x28]
  42e1a3:	mov    QWORD PTR [rdx+0x28],rcx
  42e1a7:	mov    BYTE PTR [rax],0x62
  42e1aa:	jmp    42e267 <flatcc_json_printer_fmt_bool@@Base+0x45b>
  42e1af:	mov    rax,QWORD PTR [rbp-0x28]
  42e1b3:	mov    rax,QWORD PTR [rax+0x28]
  42e1b7:	lea    rcx,[rax+0x1]
  42e1bb:	mov    rdx,QWORD PTR [rbp-0x28]
  42e1bf:	mov    QWORD PTR [rdx+0x28],rcx
  42e1c3:	mov    BYTE PTR [rax],0x75
  42e1c6:	mov    rax,QWORD PTR [rbp-0x28]
  42e1ca:	mov    rax,QWORD PTR [rax+0x28]
  42e1ce:	lea    rcx,[rax+0x1]
  42e1d2:	mov    rdx,QWORD PTR [rbp-0x28]
  42e1d6:	mov    QWORD PTR [rdx+0x28],rcx
  42e1da:	mov    BYTE PTR [rax],0x30
  42e1dd:	mov    rax,QWORD PTR [rbp-0x28]
  42e1e1:	mov    rax,QWORD PTR [rax+0x28]
  42e1e5:	lea    rcx,[rax+0x1]
  42e1e9:	mov    rdx,QWORD PTR [rbp-0x28]
  42e1ed:	mov    QWORD PTR [rdx+0x28],rcx
  42e1f1:	mov    BYTE PTR [rax],0x30
  42e1f4:	movzx  eax,BYTE PTR [rbp-0x12]
  42e1f8:	shr    al,0x4
  42e1fb:	mov    BYTE PTR [rbp-0x11],al
  42e1fe:	cmp    BYTE PTR [rbp-0x11],0x9
  42e202:	ja     42e20b <flatcc_json_printer_fmt_bool@@Base+0x3ff>
  42e204:	mov    eax,0x30
  42e209:	jmp    42e210 <flatcc_json_printer_fmt_bool@@Base+0x404>
  42e20b:	mov    eax,0x57
  42e210:	add    BYTE PTR [rbp-0x11],al
  42e213:	mov    rax,QWORD PTR [rbp-0x28]
  42e217:	mov    rdx,QWORD PTR [rax+0x28]
  42e21b:	lea    rcx,[rdx+0x1]
  42e21f:	mov    rax,QWORD PTR [rbp-0x28]
  42e223:	mov    QWORD PTR [rax+0x28],rcx
  42e227:	movzx  eax,BYTE PTR [rbp-0x11]
  42e22b:	mov    BYTE PTR [rdx],al
  42e22d:	movzx  eax,BYTE PTR [rbp-0x12]
  42e231:	and    eax,0xf
  42e234:	mov    BYTE PTR [rbp-0x11],al
  42e237:	cmp    BYTE PTR [rbp-0x11],0x9
  42e23b:	ja     42e244 <flatcc_json_printer_fmt_bool@@Base+0x438>
  42e23d:	mov    eax,0x30
  42e242:	jmp    42e249 <flatcc_json_printer_fmt_bool@@Base+0x43d>
  42e244:	mov    eax,0x57
  42e249:	add    BYTE PTR [rbp-0x11],al
  42e24c:	mov    rax,QWORD PTR [rbp-0x28]
  42e250:	mov    rdx,QWORD PTR [rax+0x28]
  42e254:	lea    rcx,[rdx+0x1]
  42e258:	mov    rax,QWORD PTR [rbp-0x28]
  42e25c:	mov    QWORD PTR [rax+0x28],rcx
  42e260:	movzx  eax,BYTE PTR [rbp-0x11]
  42e264:	mov    BYTE PTR [rdx],al
  42e266:	nop
  42e267:	inc    QWORD PTR [rbp-0x10]
  42e26b:	dec    QWORD PTR [rbp-0x38]
  42e26f:	inc    QWORD PTR [rbp-0x30]
  42e273:	jmp    42e028 <flatcc_json_printer_fmt_bool@@Base+0x21c>
  42e278:	nop
  42e279:	mov    rax,QWORD PTR [rbp-0x28]
  42e27d:	mov    rax,QWORD PTR [rax+0x28]
  42e281:	lea    rcx,[rax+0x1]
  42e285:	mov    rdx,QWORD PTR [rbp-0x28]
  42e289:	mov    QWORD PTR [rdx+0x28],rcx
  42e28d:	mov    BYTE PTR [rax],0x22
  42e290:	nop
  42e291:	leave  
  42e292:	ret    
  42e293:	endbr64 
  42e297:	push   rbp
  42e298:	mov    rbp,rsp
  42e29b:	sub    rsp,0x60
  42e29f:	mov    QWORD PTR [rbp-0x48],rdi
  42e2a3:	mov    QWORD PTR [rbp-0x50],rsi
  42e2a7:	mov    DWORD PTR [rbp-0x54],edx
  42e2aa:	mov    rax,QWORD PTR fs:0x28
  42e2b3:	mov    QWORD PTR [rbp-0x8],rax
  42e2b7:	xor    eax,eax
  42e2b9:	mov    eax,DWORD PTR [rbp-0x54]
  42e2bc:	and    al,0x7f
  42e2be:	mov    DWORD PTR [rbp-0x3c],eax
  42e2c1:	mov    rax,QWORD PTR [rbp-0x50]
  42e2c5:	mov    rdi,rax
  42e2c8:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  42e2cd:	mov    eax,eax
  42e2cf:	mov    QWORD PTR [rbp-0x38],rax
  42e2d3:	mov    rax,QWORD PTR [rbp-0x50]
  42e2d7:	add    rax,0x4
  42e2db:	mov    QWORD PTR [rbp-0x20],rax
  42e2df:	mov    rax,QWORD PTR [rbp-0x48]
  42e2e3:	mov    rax,QWORD PTR [rax+0x28]
  42e2e7:	lea    rcx,[rax+0x1]
  42e2eb:	mov    rdx,QWORD PTR [rbp-0x48]
  42e2ef:	mov    QWORD PTR [rdx+0x28],rcx
  42e2f3:	mov    BYTE PTR [rax],0x22
  42e2f6:	mov    rax,QWORD PTR [rbp-0x38]
  42e2fa:	mov    edx,DWORD PTR [rbp-0x54]
  42e2fd:	mov    esi,edx
  42e2ff:	mov    rdi,rax
  42e302:	call   42d499 <flatcc_json_parser_struct_as_root@@Base+0x2c84>
  42e307:	mov    QWORD PTR [rbp-0x28],rax
  42e30b:	mov    rax,QWORD PTR [rbp-0x48]
  42e30f:	mov    rdx,QWORD PTR [rax+0x28]
  42e313:	mov    rax,QWORD PTR [rbp-0x28]
  42e317:	add    rdx,rax
  42e31a:	mov    rax,QWORD PTR [rbp-0x48]
  42e31e:	mov    rax,QWORD PTR [rax+0x20]
  42e322:	cmp    rdx,rax
  42e325:	jb     42e430 <flatcc_json_printer_fmt_bool@@Base+0x624>
  42e32b:	mov    rax,QWORD PTR [rbp-0x48]
  42e32f:	mov    rax,QWORD PTR [rax+0x48]
  42e333:	mov    rdx,QWORD PTR [rbp-0x48]
  42e337:	mov    esi,0x0
  42e33c:	mov    rdi,rdx
  42e33f:	call   rax
  42e341:	jmp    42e430 <flatcc_json_printer_fmt_bool@@Base+0x624>
  42e346:	mov    rax,QWORD PTR [rbp-0x48]
  42e34a:	mov    rdx,QWORD PTR [rax+0x20]
  42e34e:	mov    rax,QWORD PTR [rbp-0x48]
  42e352:	mov    rax,QWORD PTR [rax+0x28]
  42e356:	sub    rdx,rax
  42e359:	mov    rax,rdx
  42e35c:	and    rax,0xfffffffffffffffc
  42e360:	mov    QWORD PTR [rbp-0x18],rax
  42e364:	mov    rdx,QWORD PTR [rbp-0x18]
  42e368:	mov    rax,rdx
  42e36b:	add    rax,rax
  42e36e:	add    rax,rdx
  42e371:	shr    rax,0x2
  42e375:	mov    QWORD PTR [rbp-0x10],rax
  42e379:	cmp    QWORD PTR [rbp-0x10],0x0
  42e37e:	jne    42e39f <flatcc_json_printer_fmt_bool@@Base+0x593>
  42e380:	lea    rcx,[rip+0x10299]        # 43e620 <flatcc_builder_padding_base@@Base+0x36a0>
  42e387:	mov    edx,0x115
  42e38c:	lea    rsi,[rip+0xfcb5]        # 43e048 <flatcc_builder_padding_base@@Base+0x30c8>
  42e393:	lea    rdi,[rip+0xfd13]        # 43e0ad <flatcc_builder_padding_base@@Base+0x312d>
  42e39a:	call   4061b0 <__assert_fail@plt>
  42e39f:	mov    rdx,QWORD PTR [rbp-0x18]
  42e3a3:	mov    rax,rdx
  42e3a6:	add    rax,rax
  42e3a9:	add    rax,rdx
  42e3ac:	shr    rax,0x2
  42e3b0:	mov    QWORD PTR [rbp-0x30],rax
  42e3b4:	mov    rax,QWORD PTR [rbp-0x48]
  42e3b8:	mov    rax,QWORD PTR [rax+0x28]
  42e3bc:	mov    ecx,DWORD PTR [rbp-0x3c]
  42e3bf:	lea    rdx,[rbp-0x30]
  42e3c3:	mov    rsi,QWORD PTR [rbp-0x20]
  42e3c7:	mov    r8d,ecx
  42e3ca:	mov    rcx,rdx
  42e3cd:	mov    edx,0x0
  42e3d2:	mov    rdi,rax
  42e3d5:	call   42d585 <flatcc_json_parser_struct_as_root@@Base+0x2d70>
  42e3da:	mov    rax,QWORD PTR [rbp-0x48]
  42e3de:	mov    rdx,QWORD PTR [rax+0x28]
  42e3e2:	mov    rax,QWORD PTR [rbp-0x18]
  42e3e6:	add    rdx,rax
  42e3e9:	mov    rax,QWORD PTR [rbp-0x48]
  42e3ed:	mov    QWORD PTR [rax+0x28],rdx
  42e3f1:	mov    rax,QWORD PTR [rbp-0x10]
  42e3f5:	add    QWORD PTR [rbp-0x20],rax
  42e3f9:	mov    rax,QWORD PTR [rbp-0x38]
  42e3fd:	sub    rax,QWORD PTR [rbp-0x10]
  42e401:	mov    QWORD PTR [rbp-0x38],rax
  42e405:	mov    rax,QWORD PTR [rbp-0x48]
  42e409:	mov    rax,QWORD PTR [rax+0x48]
  42e40d:	mov    rdx,QWORD PTR [rbp-0x48]
  42e411:	mov    esi,0x0
  42e416:	mov    rdi,rdx
  42e419:	call   rax
  42e41b:	mov    rax,QWORD PTR [rbp-0x38]
  42e41f:	mov    edx,DWORD PTR [rbp-0x54]
  42e422:	mov    esi,edx
  42e424:	mov    rdi,rax
  42e427:	call   42d499 <flatcc_json_parser_struct_as_root@@Base+0x2c84>
  42e42c:	mov    QWORD PTR [rbp-0x28],rax
  42e430:	mov    rax,QWORD PTR [rbp-0x48]
  42e434:	mov    rdx,QWORD PTR [rax+0x28]
  42e438:	mov    rax,QWORD PTR [rbp-0x28]
  42e43c:	add    rdx,rax
  42e43f:	mov    rax,QWORD PTR [rbp-0x48]
  42e443:	mov    rax,QWORD PTR [rax+0x20]
  42e447:	cmp    rdx,rax
  42e44a:	ja     42e346 <flatcc_json_printer_fmt_bool@@Base+0x53a>
  42e450:	mov    rax,QWORD PTR [rbp-0x48]
  42e454:	mov    rax,QWORD PTR [rax+0x28]
  42e458:	mov    ecx,DWORD PTR [rbp-0x54]
  42e45b:	lea    rdx,[rbp-0x38]
  42e45f:	mov    rsi,QWORD PTR [rbp-0x20]
  42e463:	mov    r8d,ecx
  42e466:	mov    rcx,rdx
  42e469:	mov    edx,0x0
  42e46e:	mov    rdi,rax
  42e471:	call   42d585 <flatcc_json_parser_struct_as_root@@Base+0x2d70>
  42e476:	mov    rax,QWORD PTR [rbp-0x48]
  42e47a:	mov    rdx,QWORD PTR [rax+0x28]
  42e47e:	mov    rax,QWORD PTR [rbp-0x28]
  42e482:	add    rdx,rax
  42e485:	mov    rax,QWORD PTR [rbp-0x48]
  42e489:	mov    QWORD PTR [rax+0x28],rdx
  42e48d:	mov    rax,QWORD PTR [rbp-0x48]
  42e491:	mov    rax,QWORD PTR [rax+0x28]
  42e495:	lea    rcx,[rax+0x1]
  42e499:	mov    rdx,QWORD PTR [rbp-0x48]
  42e49d:	mov    QWORD PTR [rdx+0x28],rcx
  42e4a1:	mov    BYTE PTR [rax],0x22
  42e4a4:	nop
  42e4a5:	mov    rax,QWORD PTR [rbp-0x8]
  42e4a9:	xor    rax,QWORD PTR fs:0x28
  42e4b2:	je     42e4b9 <flatcc_json_printer_fmt_bool@@Base+0x6ad>
  42e4b4:	call   4061a0 <__stack_chk_fail@plt>
  42e4b9:	leave  
  42e4ba:	ret    
  42e4bb:	endbr64 
  42e4bf:	push   rbp
  42e4c0:	mov    rbp,rsp
  42e4c3:	sub    rsp,0x20
  42e4c7:	mov    QWORD PTR [rbp-0x18],rdi
  42e4cb:	mov    QWORD PTR [rbp-0x20],rsi
  42e4cf:	mov    rax,QWORD PTR [rbp-0x18]
  42e4d3:	mov    rdx,QWORD PTR [rax+0x28]
  42e4d7:	mov    rax,QWORD PTR [rbp-0x18]
  42e4db:	mov    rax,QWORD PTR [rax+0x20]
  42e4df:	cmp    rdx,rax
  42e4e2:	jb     42e4fa <flatcc_json_printer_fmt_bool@@Base+0x6ee>
  42e4e4:	mov    rax,QWORD PTR [rbp-0x18]
  42e4e8:	mov    rax,QWORD PTR [rax+0x48]
  42e4ec:	mov    rdx,QWORD PTR [rbp-0x18]
  42e4f0:	mov    esi,0x0
  42e4f5:	mov    rdi,rdx
  42e4f8:	call   rax
  42e4fa:	mov    rax,QWORD PTR [rbp-0x18]
  42e4fe:	mov    rdx,QWORD PTR [rax+0x20]
  42e502:	mov    rax,QWORD PTR [rbp-0x18]
  42e506:	mov    rax,QWORD PTR [rax+0x28]
  42e50a:	sub    rdx,rax
  42e50d:	mov    rax,rdx
  42e510:	mov    QWORD PTR [rbp-0x8],rax
  42e514:	jmp    42e57e <flatcc_json_printer_fmt_bool@@Base+0x772>
  42e516:	mov    rax,QWORD PTR [rbp-0x18]
  42e51a:	mov    rax,QWORD PTR [rax+0x28]
  42e51e:	mov    rdx,QWORD PTR [rbp-0x8]
  42e522:	mov    esi,0x20
  42e527:	mov    rdi,rax
  42e52a:	call   4061c0 <memset@plt>
  42e52f:	mov    rax,QWORD PTR [rbp-0x18]
  42e533:	mov    rdx,QWORD PTR [rax+0x28]
  42e537:	mov    rax,QWORD PTR [rbp-0x8]
  42e53b:	add    rdx,rax
  42e53e:	mov    rax,QWORD PTR [rbp-0x18]
  42e542:	mov    QWORD PTR [rax+0x28],rdx
  42e546:	mov    rax,QWORD PTR [rbp-0x8]
  42e54a:	sub    QWORD PTR [rbp-0x20],rax
  42e54e:	mov    rax,QWORD PTR [rbp-0x18]
  42e552:	mov    rax,QWORD PTR [rax+0x48]
  42e556:	mov    rdx,QWORD PTR [rbp-0x18]
  42e55a:	mov    esi,0x0
  42e55f:	mov    rdi,rdx
  42e562:	call   rax
  42e564:	mov    rax,QWORD PTR [rbp-0x18]
  42e568:	mov    rdx,QWORD PTR [rax+0x20]
  42e56c:	mov    rax,QWORD PTR [rbp-0x18]
  42e570:	mov    rax,QWORD PTR [rax+0x28]
  42e574:	sub    rdx,rax
  42e577:	mov    rax,rdx
  42e57a:	mov    QWORD PTR [rbp-0x8],rax
  42e57e:	mov    rax,QWORD PTR [rbp-0x20]
  42e582:	cmp    rax,QWORD PTR [rbp-0x8]
  42e586:	ja     42e516 <flatcc_json_printer_fmt_bool@@Base+0x70a>
  42e588:	mov    rax,QWORD PTR [rbp-0x18]
  42e58c:	mov    rax,QWORD PTR [rax+0x28]
  42e590:	mov    rdx,QWORD PTR [rbp-0x20]
  42e594:	mov    esi,0x20
  42e599:	mov    rdi,rax
  42e59c:	call   4061c0 <memset@plt>
  42e5a1:	mov    rax,QWORD PTR [rbp-0x18]
  42e5a5:	mov    rdx,QWORD PTR [rax+0x28]
  42e5a9:	mov    rax,QWORD PTR [rbp-0x20]
  42e5ad:	add    rdx,rax
  42e5b0:	mov    rax,QWORD PTR [rbp-0x18]
  42e5b4:	mov    QWORD PTR [rax+0x28],rdx
  42e5b8:	nop
  42e5b9:	leave  
  42e5ba:	ret    
  42e5bb:	push   rbp
  42e5bc:	mov    rbp,rsp
  42e5bf:	sub    rsp,0x20
  42e5c3:	mov    QWORD PTR [rbp-0x18],rdi
  42e5c7:	mov    rax,QWORD PTR [rbp-0x18]
  42e5cb:	mov    edx,DWORD PTR [rax+0x38]
  42e5ce:	mov    rax,QWORD PTR [rbp-0x18]
  42e5d2:	movzx  eax,BYTE PTR [rax+0x31]
  42e5d6:	movzx  eax,al
  42e5d9:	imul   eax,edx
  42e5dc:	cdqe   
  42e5de:	mov    QWORD PTR [rbp-0x8],rax
  42e5e2:	mov    rax,QWORD PTR [rbp-0x18]
  42e5e6:	mov    rdx,QWORD PTR [rax+0x28]
  42e5ea:	mov    rax,QWORD PTR [rbp-0x8]
  42e5ee:	add    rdx,rax
  42e5f1:	mov    rax,QWORD PTR [rbp-0x18]
  42e5f5:	mov    rax,QWORD PTR [rax+0x20]
  42e5f9:	cmp    rdx,rax
  42e5fc:	jbe    42e613 <flatcc_json_printer_fmt_bool@@Base+0x807>
  42e5fe:	mov    rdx,QWORD PTR [rbp-0x8]
  42e602:	mov    rax,QWORD PTR [rbp-0x18]
  42e606:	mov    rsi,rdx
  42e609:	mov    rdi,rax
  42e60c:	call   42e4bb <flatcc_json_printer_fmt_bool@@Base+0x6af>
  42e611:	jmp    42e643 <flatcc_json_printer_fmt_bool@@Base+0x837>
  42e613:	mov    rax,QWORD PTR [rbp-0x18]
  42e617:	mov    rax,QWORD PTR [rax+0x28]
  42e61b:	mov    rdx,QWORD PTR [rbp-0x8]
  42e61f:	mov    esi,0x20
  42e624:	mov    rdi,rax
  42e627:	call   4061c0 <memset@plt>
  42e62c:	mov    rax,QWORD PTR [rbp-0x18]
  42e630:	mov    rdx,QWORD PTR [rax+0x28]
  42e634:	mov    rax,QWORD PTR [rbp-0x8]
  42e638:	add    rdx,rax
  42e63b:	mov    rax,QWORD PTR [rbp-0x18]
  42e63f:	mov    QWORD PTR [rax+0x28],rdx
  42e643:	nop
  42e644:	leave  
  42e645:	ret    

000000000042e646 <flatcc_json_printer_string@@Base>:
  42e646:	endbr64 
  42e64a:	push   rbp
  42e64b:	mov    rbp,rsp
  42e64e:	sub    rsp,0x20
  42e652:	mov    QWORD PTR [rbp-0x8],rdi
  42e656:	mov    QWORD PTR [rbp-0x10],rsi
  42e65a:	mov    DWORD PTR [rbp-0x14],edx
  42e65d:	mov    eax,DWORD PTR [rbp-0x14]
  42e660:	movsxd rdx,eax
  42e663:	mov    rcx,QWORD PTR [rbp-0x10]
  42e667:	mov    rax,QWORD PTR [rbp-0x8]
  42e66b:	mov    rsi,rcx
  42e66e:	mov    rdi,rax
  42e671:	call   42dff1 <flatcc_json_printer_fmt_bool@@Base+0x1e5>
  42e676:	nop
  42e677:	leave  
  42e678:	ret    

000000000042e679 <flatcc_json_printer_write@@Base>:
  42e679:	endbr64 
  42e67d:	push   rbp
  42e67e:	mov    rbp,rsp
  42e681:	sub    rsp,0x20
  42e685:	mov    QWORD PTR [rbp-0x8],rdi
  42e689:	mov    QWORD PTR [rbp-0x10],rsi
  42e68d:	mov    DWORD PTR [rbp-0x14],edx
  42e690:	mov    eax,DWORD PTR [rbp-0x14]
  42e693:	movsxd rdx,eax
  42e696:	mov    rcx,QWORD PTR [rbp-0x10]
  42e69a:	mov    rax,QWORD PTR [rbp-0x8]
  42e69e:	mov    rsi,rcx
  42e6a1:	mov    rdi,rax
  42e6a4:	call   42df73 <flatcc_json_printer_fmt_bool@@Base+0x167>
  42e6a9:	nop
  42e6aa:	leave  
  42e6ab:	ret    

000000000042e6ac <flatcc_json_printer_nl@@Base>:
  42e6ac:	endbr64 
  42e6b0:	push   rbp
  42e6b1:	mov    rbp,rsp
  42e6b4:	sub    rsp,0x10
  42e6b8:	mov    QWORD PTR [rbp-0x8],rdi
  42e6bc:	mov    rax,QWORD PTR [rbp-0x8]
  42e6c0:	mov    rax,QWORD PTR [rax+0x28]
  42e6c4:	lea    rcx,[rax+0x1]
  42e6c8:	mov    rdx,QWORD PTR [rbp-0x8]
  42e6cc:	mov    QWORD PTR [rdx+0x28],rcx
  42e6d0:	mov    BYTE PTR [rax],0xa
  42e6d3:	mov    rax,QWORD PTR [rbp-0x8]
  42e6d7:	mov    rdi,rax
  42e6da:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  42e6df:	nop
  42e6e0:	leave  
  42e6e1:	ret    

000000000042e6e2 <flatcc_json_printer_char@@Base>:
  42e6e2:	endbr64 
  42e6e6:	push   rbp
  42e6e7:	mov    rbp,rsp
  42e6ea:	mov    QWORD PTR [rbp-0x8],rdi
  42e6ee:	mov    eax,esi
  42e6f0:	mov    BYTE PTR [rbp-0xc],al
  42e6f3:	mov    rax,QWORD PTR [rbp-0x8]
  42e6f7:	mov    rdx,QWORD PTR [rax+0x28]
  42e6fb:	lea    rcx,[rdx+0x1]
  42e6ff:	mov    rax,QWORD PTR [rbp-0x8]
  42e703:	mov    QWORD PTR [rax+0x28],rcx
  42e707:	movzx  eax,BYTE PTR [rbp-0xc]
  42e70b:	mov    BYTE PTR [rdx],al
  42e70d:	nop
  42e70e:	pop    rbp
  42e70f:	ret    

000000000042e710 <flatcc_json_printer_indent@@Base>:
  42e710:	endbr64 
  42e714:	push   rbp
  42e715:	mov    rbp,rsp
  42e718:	sub    rsp,0x10
  42e71c:	mov    QWORD PTR [rbp-0x8],rdi
  42e720:	mov    rax,QWORD PTR [rbp-0x8]
  42e724:	mov    rdi,rax
  42e727:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  42e72c:	nop
  42e72d:	leave  
  42e72e:	ret    

000000000042e72f <flatcc_json_printer_add_level@@Base>:
  42e72f:	endbr64 
  42e733:	push   rbp
  42e734:	mov    rbp,rsp
  42e737:	mov    QWORD PTR [rbp-0x8],rdi
  42e73b:	mov    DWORD PTR [rbp-0xc],esi
  42e73e:	mov    rax,QWORD PTR [rbp-0x8]
  42e742:	mov    edx,DWORD PTR [rax+0x38]
  42e745:	mov    eax,DWORD PTR [rbp-0xc]
  42e748:	add    edx,eax
  42e74a:	mov    rax,QWORD PTR [rbp-0x8]
  42e74e:	mov    DWORD PTR [rax+0x38],edx
  42e751:	nop
  42e752:	pop    rbp
  42e753:	ret    

000000000042e754 <flatcc_json_printer_get_level@@Base>:
  42e754:	endbr64 
  42e758:	push   rbp
  42e759:	mov    rbp,rsp
  42e75c:	mov    QWORD PTR [rbp-0x8],rdi
  42e760:	mov    rax,QWORD PTR [rbp-0x8]
  42e764:	mov    eax,DWORD PTR [rax+0x38]
  42e767:	pop    rbp
  42e768:	ret    
  42e769:	push   rbp
  42e76a:	mov    rbp,rsp
  42e76d:	sub    rsp,0x20
  42e771:	mov    QWORD PTR [rbp-0x8],rdi
  42e775:	mov    QWORD PTR [rbp-0x10],rsi
  42e779:	mov    QWORD PTR [rbp-0x18],rdx
  42e77d:	mov    rax,QWORD PTR [rbp-0x8]
  42e781:	mov    rax,QWORD PTR [rax+0x28]
  42e785:	mov    BYTE PTR [rax],0x22
  42e788:	mov    rax,QWORD PTR [rbp-0x8]
  42e78c:	mov    rdx,QWORD PTR [rax+0x28]
  42e790:	mov    rax,QWORD PTR [rbp-0x8]
  42e794:	movzx  eax,BYTE PTR [rax+0x32]
  42e798:	test   al,al
  42e79a:	sete   al
  42e79d:	movzx  eax,al
  42e7a0:	add    rdx,rax
  42e7a3:	mov    rax,QWORD PTR [rbp-0x8]
  42e7a7:	mov    QWORD PTR [rax+0x28],rdx
  42e7ab:	mov    rax,QWORD PTR [rbp-0x8]
  42e7af:	mov    rdx,QWORD PTR [rax+0x28]
  42e7b3:	mov    rax,QWORD PTR [rbp-0x18]
  42e7b7:	add    rdx,rax
  42e7ba:	mov    rax,QWORD PTR [rbp-0x8]
  42e7be:	mov    rax,QWORD PTR [rax+0x20]
  42e7c2:	cmp    rdx,rax
  42e7c5:	jae    42e7fb <flatcc_json_printer_get_level@@Base+0xa7>
  42e7c7:	mov    rax,QWORD PTR [rbp-0x8]
  42e7cb:	mov    rax,QWORD PTR [rax+0x28]
  42e7cf:	mov    rdx,QWORD PTR [rbp-0x18]
  42e7d3:	mov    rcx,QWORD PTR [rbp-0x10]
  42e7d7:	mov    rsi,rcx
  42e7da:	mov    rdi,rax
  42e7dd:	call   406220 <memcpy@plt>
  42e7e2:	mov    rax,QWORD PTR [rbp-0x8]
  42e7e6:	mov    rdx,QWORD PTR [rax+0x28]
  42e7ea:	mov    rax,QWORD PTR [rbp-0x18]
  42e7ee:	add    rdx,rax
  42e7f1:	mov    rax,QWORD PTR [rbp-0x8]
  42e7f5:	mov    QWORD PTR [rax+0x28],rdx
  42e7f9:	jmp    42e812 <flatcc_json_printer_get_level@@Base+0xbe>
  42e7fb:	mov    rdx,QWORD PTR [rbp-0x18]
  42e7ff:	mov    rcx,QWORD PTR [rbp-0x10]
  42e803:	mov    rax,QWORD PTR [rbp-0x8]
  42e807:	mov    rsi,rcx
  42e80a:	mov    rdi,rax
  42e80d:	call   42df73 <flatcc_json_printer_fmt_bool@@Base+0x167>
  42e812:	mov    rax,QWORD PTR [rbp-0x8]
  42e816:	mov    rax,QWORD PTR [rax+0x28]
  42e81a:	mov    BYTE PTR [rax],0x22
  42e81d:	mov    rax,QWORD PTR [rbp-0x8]
  42e821:	mov    rdx,QWORD PTR [rax+0x28]
  42e825:	mov    rax,QWORD PTR [rbp-0x8]
  42e829:	movzx  eax,BYTE PTR [rax+0x32]
  42e82d:	test   al,al
  42e82f:	sete   al
  42e832:	movzx  eax,al
  42e835:	add    rdx,rax
  42e838:	mov    rax,QWORD PTR [rbp-0x8]
  42e83c:	mov    QWORD PTR [rax+0x28],rdx
  42e840:	nop
  42e841:	leave  
  42e842:	ret    
  42e843:	push   rbp
  42e844:	mov    rbp,rsp
  42e847:	sub    rsp,0x20
  42e84b:	mov    QWORD PTR [rbp-0x8],rdi
  42e84f:	mov    QWORD PTR [rbp-0x10],rsi
  42e853:	mov    QWORD PTR [rbp-0x18],rdx
  42e857:	mov    rax,QWORD PTR [rbp-0x8]
  42e85b:	movzx  eax,BYTE PTR [rax+0x31]
  42e85f:	test   al,al
  42e861:	je     42e888 <flatcc_json_printer_get_level@@Base+0x134>
  42e863:	mov    rax,QWORD PTR [rbp-0x8]
  42e867:	mov    rax,QWORD PTR [rax+0x28]
  42e86b:	lea    rcx,[rax+0x1]
  42e86f:	mov    rdx,QWORD PTR [rbp-0x8]
  42e873:	mov    QWORD PTR [rdx+0x28],rcx
  42e877:	mov    BYTE PTR [rax],0xa
  42e87a:	mov    rax,QWORD PTR [rbp-0x8]
  42e87e:	mov    rdi,rax
  42e881:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  42e886:	jmp    42e894 <flatcc_json_printer_get_level@@Base+0x140>
  42e888:	mov    rax,QWORD PTR [rbp-0x8]
  42e88c:	mov    rdi,rax
  42e88f:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  42e894:	mov    rdx,QWORD PTR [rbp-0x18]
  42e898:	mov    rcx,QWORD PTR [rbp-0x10]
  42e89c:	mov    rax,QWORD PTR [rbp-0x8]
  42e8a0:	mov    rsi,rcx
  42e8a3:	mov    rdi,rax
  42e8a6:	call   42e769 <flatcc_json_printer_get_level@@Base+0x15>
  42e8ab:	mov    rax,QWORD PTR [rbp-0x8]
  42e8af:	mov    rax,QWORD PTR [rax+0x28]
  42e8b3:	lea    rcx,[rax+0x1]
  42e8b7:	mov    rdx,QWORD PTR [rbp-0x8]
  42e8bb:	mov    QWORD PTR [rdx+0x28],rcx
  42e8bf:	mov    BYTE PTR [rax],0x3a
  42e8c2:	mov    rax,QWORD PTR [rbp-0x8]
  42e8c6:	mov    rax,QWORD PTR [rax+0x28]
  42e8ca:	mov    BYTE PTR [rax],0x20
  42e8cd:	mov    rax,QWORD PTR [rbp-0x8]
  42e8d1:	mov    rdx,QWORD PTR [rax+0x28]
  42e8d5:	mov    rax,QWORD PTR [rbp-0x8]
  42e8d9:	movzx  eax,BYTE PTR [rax+0x31]
  42e8dd:	test   al,al
  42e8df:	setne  al
  42e8e2:	movzx  eax,al
  42e8e5:	add    rdx,rax
  42e8e8:	mov    rax,QWORD PTR [rbp-0x8]
  42e8ec:	mov    QWORD PTR [rax+0x28],rdx
  42e8f0:	nop
  42e8f1:	leave  
  42e8f2:	ret    

000000000042e8f3 <flatcc_json_printer_uint8@@Base>:
  42e8f3:	endbr64 
  42e8f7:	push   rbp
  42e8f8:	mov    rbp,rsp
  42e8fb:	sub    rsp,0x10
  42e8ff:	mov    QWORD PTR [rbp-0x8],rdi
  42e903:	mov    eax,esi
  42e905:	mov    BYTE PTR [rbp-0xc],al
  42e908:	mov    rax,QWORD PTR [rbp-0x8]
  42e90c:	mov    rdx,QWORD PTR [rax+0x28]
  42e910:	movzx  eax,BYTE PTR [rbp-0xc]
  42e914:	mov    rsi,rdx
  42e917:	mov    edi,eax
  42e919:	call   42ad0d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  42e91e:	mov    ecx,eax
  42e920:	mov    rax,QWORD PTR [rbp-0x8]
  42e924:	mov    rdx,QWORD PTR [rax+0x28]
  42e928:	movsxd rax,ecx
  42e92b:	add    rdx,rax
  42e92e:	mov    rax,QWORD PTR [rbp-0x8]
  42e932:	mov    QWORD PTR [rax+0x28],rdx
  42e936:	nop
  42e937:	leave  
  42e938:	ret    

000000000042e939 <flatcc_json_printer_uint16@@Base>:
  42e939:	endbr64 
  42e93d:	push   rbp
  42e93e:	mov    rbp,rsp
  42e941:	sub    rsp,0x10
  42e945:	mov    QWORD PTR [rbp-0x8],rdi
  42e949:	mov    eax,esi
  42e94b:	mov    WORD PTR [rbp-0xc],ax
  42e94f:	mov    rax,QWORD PTR [rbp-0x8]
  42e953:	mov    rdx,QWORD PTR [rax+0x28]
  42e957:	movzx  eax,WORD PTR [rbp-0xc]
  42e95b:	mov    rsi,rdx
  42e95e:	mov    edi,eax
  42e960:	call   42ae5f <flatcc_json_parser_struct_as_root@@Base+0x64a>
  42e965:	mov    ecx,eax
  42e967:	mov    rax,QWORD PTR [rbp-0x8]
  42e96b:	mov    rdx,QWORD PTR [rax+0x28]
  42e96f:	movsxd rax,ecx
  42e972:	add    rdx,rax
  42e975:	mov    rax,QWORD PTR [rbp-0x8]
  42e979:	mov    QWORD PTR [rax+0x28],rdx
  42e97d:	nop
  42e97e:	leave  
  42e97f:	ret    

000000000042e980 <flatcc_json_printer_uint32@@Base>:
  42e980:	endbr64 
  42e984:	push   rbp
  42e985:	mov    rbp,rsp
  42e988:	sub    rsp,0x10
  42e98c:	mov    QWORD PTR [rbp-0x8],rdi
  42e990:	mov    DWORD PTR [rbp-0xc],esi
  42e993:	mov    rax,QWORD PTR [rbp-0x8]
  42e997:	mov    rdx,QWORD PTR [rax+0x28]
  42e99b:	mov    eax,DWORD PTR [rbp-0xc]
  42e99e:	mov    rsi,rdx
  42e9a1:	mov    edi,eax
  42e9a3:	call   42b104 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42e9a8:	mov    ecx,eax
  42e9aa:	mov    rax,QWORD PTR [rbp-0x8]
  42e9ae:	mov    rdx,QWORD PTR [rax+0x28]
  42e9b2:	movsxd rax,ecx
  42e9b5:	add    rdx,rax
  42e9b8:	mov    rax,QWORD PTR [rbp-0x8]
  42e9bc:	mov    QWORD PTR [rax+0x28],rdx
  42e9c0:	nop
  42e9c1:	leave  
  42e9c2:	ret    

000000000042e9c3 <flatcc_json_printer_uint64@@Base>:
  42e9c3:	endbr64 
  42e9c7:	push   rbp
  42e9c8:	mov    rbp,rsp
  42e9cb:	sub    rsp,0x10
  42e9cf:	mov    QWORD PTR [rbp-0x8],rdi
  42e9d3:	mov    QWORD PTR [rbp-0x10],rsi
  42e9d7:	mov    rax,QWORD PTR [rbp-0x8]
  42e9db:	mov    rdx,QWORD PTR [rax+0x28]
  42e9df:	mov    rax,QWORD PTR [rbp-0x10]
  42e9e3:	mov    rsi,rdx
  42e9e6:	mov    rdi,rax
  42e9e9:	call   42b519 <flatcc_json_parser_struct_as_root@@Base+0xd04>
  42e9ee:	mov    ecx,eax
  42e9f0:	mov    rax,QWORD PTR [rbp-0x8]
  42e9f4:	mov    rdx,QWORD PTR [rax+0x28]
  42e9f8:	movsxd rax,ecx
  42e9fb:	add    rdx,rax
  42e9fe:	mov    rax,QWORD PTR [rbp-0x8]
  42ea02:	mov    QWORD PTR [rax+0x28],rdx
  42ea06:	nop
  42ea07:	leave  
  42ea08:	ret    

000000000042ea09 <flatcc_json_printer_int8@@Base>:
  42ea09:	endbr64 
  42ea0d:	push   rbp
  42ea0e:	mov    rbp,rsp
  42ea11:	sub    rsp,0x10
  42ea15:	mov    QWORD PTR [rbp-0x8],rdi
  42ea19:	mov    eax,esi
  42ea1b:	mov    BYTE PTR [rbp-0xc],al
  42ea1e:	mov    rax,QWORD PTR [rbp-0x8]
  42ea22:	mov    rdx,QWORD PTR [rax+0x28]
  42ea26:	movsx  eax,BYTE PTR [rbp-0xc]
  42ea2a:	mov    rsi,rdx
  42ea2d:	mov    edi,eax
  42ea2f:	call   42bddc <flatcc_json_parser_struct_as_root@@Base+0x15c7>
  42ea34:	mov    ecx,eax
  42ea36:	mov    rax,QWORD PTR [rbp-0x8]
  42ea3a:	mov    rdx,QWORD PTR [rax+0x28]
  42ea3e:	movsxd rax,ecx
  42ea41:	add    rdx,rax
  42ea44:	mov    rax,QWORD PTR [rbp-0x8]
  42ea48:	mov    QWORD PTR [rax+0x28],rdx
  42ea4c:	nop
  42ea4d:	leave  
  42ea4e:	ret    

000000000042ea4f <flatcc_json_printer_int16@@Base>:
  42ea4f:	endbr64 
  42ea53:	push   rbp
  42ea54:	mov    rbp,rsp
  42ea57:	sub    rsp,0x10
  42ea5b:	mov    QWORD PTR [rbp-0x8],rdi
  42ea5f:	mov    eax,esi
  42ea61:	mov    WORD PTR [rbp-0xc],ax
  42ea65:	mov    rax,QWORD PTR [rbp-0x8]
  42ea69:	mov    rdx,QWORD PTR [rax+0x28]
  42ea6d:	movsx  eax,WORD PTR [rbp-0xc]
  42ea71:	mov    rsi,rdx
  42ea74:	mov    edi,eax
  42ea76:	call   42be3a <flatcc_json_parser_struct_as_root@@Base+0x1625>
  42ea7b:	mov    ecx,eax
  42ea7d:	mov    rax,QWORD PTR [rbp-0x8]
  42ea81:	mov    rdx,QWORD PTR [rax+0x28]
  42ea85:	movsxd rax,ecx
  42ea88:	add    rdx,rax
  42ea8b:	mov    rax,QWORD PTR [rbp-0x8]
  42ea8f:	mov    QWORD PTR [rax+0x28],rdx
  42ea93:	nop
  42ea94:	leave  
  42ea95:	ret    

000000000042ea96 <flatcc_json_printer_int32@@Base>:
  42ea96:	endbr64 
  42ea9a:	push   rbp
  42ea9b:	mov    rbp,rsp
  42ea9e:	sub    rsp,0x10
  42eaa2:	mov    QWORD PTR [rbp-0x8],rdi
  42eaa6:	mov    DWORD PTR [rbp-0xc],esi
  42eaa9:	mov    rax,QWORD PTR [rbp-0x8]
  42eaad:	mov    rdx,QWORD PTR [rax+0x28]
  42eab1:	mov    eax,DWORD PTR [rbp-0xc]
  42eab4:	mov    rsi,rdx
  42eab7:	mov    edi,eax
  42eab9:	call   42be9b <flatcc_json_parser_struct_as_root@@Base+0x1686>
  42eabe:	mov    ecx,eax
  42eac0:	mov    rax,QWORD PTR [rbp-0x8]
  42eac4:	mov    rdx,QWORD PTR [rax+0x28]
  42eac8:	movsxd rax,ecx
  42eacb:	add    rdx,rax
  42eace:	mov    rax,QWORD PTR [rbp-0x8]
  42ead2:	mov    QWORD PTR [rax+0x28],rdx
  42ead6:	nop
  42ead7:	leave  
  42ead8:	ret    

000000000042ead9 <flatcc_json_printer_int64@@Base>:
  42ead9:	endbr64 
  42eadd:	push   rbp
  42eade:	mov    rbp,rsp
  42eae1:	sub    rsp,0x10
  42eae5:	mov    QWORD PTR [rbp-0x8],rdi
  42eae9:	mov    QWORD PTR [rbp-0x10],rsi
  42eaed:	mov    rax,QWORD PTR [rbp-0x8]
  42eaf1:	mov    rdx,QWORD PTR [rax+0x28]
  42eaf5:	mov    rax,QWORD PTR [rbp-0x10]
  42eaf9:	mov    rsi,rdx
  42eafc:	mov    rdi,rax
  42eaff:	call   42beec <flatcc_json_parser_struct_as_root@@Base+0x16d7>
  42eb04:	mov    ecx,eax
  42eb06:	mov    rax,QWORD PTR [rbp-0x8]
  42eb0a:	mov    rdx,QWORD PTR [rax+0x28]
  42eb0e:	movsxd rax,ecx
  42eb11:	add    rdx,rax
  42eb14:	mov    rax,QWORD PTR [rbp-0x8]
  42eb18:	mov    QWORD PTR [rax+0x28],rdx
  42eb1c:	nop
  42eb1d:	leave  
  42eb1e:	ret    

000000000042eb1f <flatcc_json_printer_float@@Base>:
  42eb1f:	endbr64 
  42eb23:	push   rbp
  42eb24:	mov    rbp,rsp
  42eb27:	sub    rsp,0x10
  42eb2b:	mov    QWORD PTR [rbp-0x8],rdi
  42eb2f:	vmovss DWORD PTR [rbp-0xc],xmm0
  42eb34:	mov    rax,QWORD PTR [rbp-0x8]
  42eb38:	mov    rdx,QWORD PTR [rax+0x28]
  42eb3c:	vcvtss2sd xmm1,xmm1,DWORD PTR [rbp-0xc]
  42eb41:	vmovq  rax,xmm1
  42eb46:	mov    rdi,rdx
  42eb49:	vmovq  xmm0,rax
  42eb4e:	call   42d01c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  42eb53:	mov    ecx,eax
  42eb55:	mov    rax,QWORD PTR [rbp-0x8]
  42eb59:	mov    rdx,QWORD PTR [rax+0x28]
  42eb5d:	movsxd rax,ecx
  42eb60:	add    rdx,rax
  42eb63:	mov    rax,QWORD PTR [rbp-0x8]
  42eb67:	mov    QWORD PTR [rax+0x28],rdx
  42eb6b:	nop
  42eb6c:	leave  
  42eb6d:	ret    

000000000042eb6e <flatcc_json_printer_double@@Base>:
  42eb6e:	endbr64 
  42eb72:	push   rbp
  42eb73:	mov    rbp,rsp
  42eb76:	sub    rsp,0x10
  42eb7a:	mov    QWORD PTR [rbp-0x8],rdi
  42eb7e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42eb83:	mov    rax,QWORD PTR [rbp-0x8]
  42eb87:	mov    rdx,QWORD PTR [rax+0x28]
  42eb8b:	mov    rax,QWORD PTR [rbp-0x10]
  42eb8f:	mov    rdi,rdx
  42eb92:	vmovq  xmm0,rax
  42eb97:	call   42d01c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  42eb9c:	mov    ecx,eax
  42eb9e:	mov    rax,QWORD PTR [rbp-0x8]
  42eba2:	mov    rdx,QWORD PTR [rax+0x28]
  42eba6:	movsxd rax,ecx
  42eba9:	add    rdx,rax
  42ebac:	mov    rax,QWORD PTR [rbp-0x8]
  42ebb0:	mov    QWORD PTR [rax+0x28],rdx
  42ebb4:	nop
  42ebb5:	leave  
  42ebb6:	ret    

000000000042ebb7 <flatcc_json_printer_enum@@Base>:
  42ebb7:	endbr64 
  42ebbb:	push   rbp
  42ebbc:	mov    rbp,rsp
  42ebbf:	sub    rsp,0x20
  42ebc3:	mov    QWORD PTR [rbp-0x8],rdi
  42ebc7:	mov    QWORD PTR [rbp-0x10],rsi
  42ebcb:	mov    DWORD PTR [rbp-0x14],edx
  42ebce:	mov    eax,DWORD PTR [rbp-0x14]
  42ebd1:	movsxd rdx,eax
  42ebd4:	mov    rcx,QWORD PTR [rbp-0x10]
  42ebd8:	mov    rax,QWORD PTR [rbp-0x8]
  42ebdc:	mov    rsi,rcx
  42ebdf:	mov    rdi,rax
  42ebe2:	call   42e769 <flatcc_json_printer_get_level@@Base+0x15>
  42ebe7:	nop
  42ebe8:	leave  
  42ebe9:	ret    

000000000042ebea <flatcc_json_printer_delimit_enum_flags@@Base>:
  42ebea:	endbr64 
  42ebee:	push   rbp
  42ebef:	mov    rbp,rsp
  42ebf2:	mov    QWORD PTR [rbp-0x18],rdi
  42ebf6:	mov    DWORD PTR [rbp-0x1c],esi
  42ebf9:	mov    rax,QWORD PTR [rbp-0x18]
  42ebfd:	movzx  eax,BYTE PTR [rax+0x32]
  42ec01:	test   al,al
  42ec03:	je     42ec0b <flatcc_json_printer_delimit_enum_flags@@Base+0x21>
  42ec05:	cmp    DWORD PTR [rbp-0x1c],0x0
  42ec09:	je     42ec12 <flatcc_json_printer_delimit_enum_flags@@Base+0x28>
  42ec0b:	mov    eax,0x1
  42ec10:	jmp    42ec17 <flatcc_json_printer_delimit_enum_flags@@Base+0x2d>
  42ec12:	mov    eax,0x0
  42ec17:	mov    DWORD PTR [rbp-0x4],eax
  42ec1a:	mov    rax,QWORD PTR [rbp-0x18]
  42ec1e:	mov    rax,QWORD PTR [rax+0x28]
  42ec22:	mov    BYTE PTR [rax],0x22
  42ec25:	mov    rax,QWORD PTR [rbp-0x18]
  42ec29:	mov    rdx,QWORD PTR [rax+0x28]
  42ec2d:	mov    eax,DWORD PTR [rbp-0x4]
  42ec30:	cdqe   
  42ec32:	add    rdx,rax
  42ec35:	mov    rax,QWORD PTR [rbp-0x18]
  42ec39:	mov    QWORD PTR [rax+0x28],rdx
  42ec3d:	nop
  42ec3e:	pop    rbp
  42ec3f:	ret    

000000000042ec40 <flatcc_json_printer_enum_flag@@Base>:
  42ec40:	endbr64 
  42ec44:	push   rbp
  42ec45:	mov    rbp,rsp
  42ec48:	sub    rsp,0x20
  42ec4c:	mov    QWORD PTR [rbp-0x8],rdi
  42ec50:	mov    DWORD PTR [rbp-0xc],esi
  42ec53:	mov    QWORD PTR [rbp-0x18],rdx
  42ec57:	mov    DWORD PTR [rbp-0x10],ecx
  42ec5a:	mov    rax,QWORD PTR [rbp-0x8]
  42ec5e:	mov    rax,QWORD PTR [rax+0x28]
  42ec62:	mov    BYTE PTR [rax],0x20
  42ec65:	mov    rax,QWORD PTR [rbp-0x8]
  42ec69:	mov    rdx,QWORD PTR [rax+0x28]
  42ec6d:	cmp    DWORD PTR [rbp-0xc],0x0
  42ec71:	setg   al
  42ec74:	movzx  eax,al
  42ec77:	add    rdx,rax
  42ec7a:	mov    rax,QWORD PTR [rbp-0x8]
  42ec7e:	mov    QWORD PTR [rax+0x28],rdx
  42ec82:	mov    eax,DWORD PTR [rbp-0x10]
  42ec85:	movsxd rdx,eax
  42ec88:	mov    rcx,QWORD PTR [rbp-0x18]
  42ec8c:	mov    rax,QWORD PTR [rbp-0x8]
  42ec90:	mov    rsi,rcx
  42ec93:	mov    rdi,rax
  42ec96:	call   42df73 <flatcc_json_printer_fmt_bool@@Base+0x167>
  42ec9b:	nop
  42ec9c:	leave  
  42ec9d:	ret    
  42ec9e:	push   rbp
  42ec9f:	mov    rbp,rsp
  42eca2:	sub    rsp,0x20
  42eca6:	mov    QWORD PTR [rbp-0x18],rdi
  42ecaa:	mov    QWORD PTR [rbp-0x20],rsi
  42ecae:	mov    rax,QWORD PTR [rbp-0x20]
  42ecb2:	mov    rdi,rax
  42ecb5:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  42ecba:	mov    eax,eax
  42ecbc:	mov    QWORD PTR [rbp-0x10],rax
  42ecc0:	mov    rax,QWORD PTR [rbp-0x20]
  42ecc4:	add    rax,0x4
  42ecc8:	mov    QWORD PTR [rbp-0x8],rax
  42eccc:	mov    rdx,QWORD PTR [rbp-0x10]
  42ecd0:	mov    rcx,QWORD PTR [rbp-0x8]
  42ecd4:	mov    rax,QWORD PTR [rbp-0x18]
  42ecd8:	mov    rsi,rcx
  42ecdb:	mov    rdi,rax
  42ecde:	call   42dff1 <flatcc_json_printer_fmt_bool@@Base+0x1e5>
  42ece3:	nop
  42ece4:	leave  
  42ece5:	ret    
  42ece6:	push   rbp
  42ece7:	mov    rbp,rsp
  42ecea:	sub    rsp,0x50
  42ecee:	mov    QWORD PTR [rbp-0x38],rdi
  42ecf2:	mov    QWORD PTR [rbp-0x40],rsi
  42ecf6:	mov    DWORD PTR [rbp-0x44],edx
  42ecf9:	mov    QWORD PTR [rbp-0x50],rcx
  42ecfd:	mov    rax,QWORD PTR fs:0x28
  42ed06:	mov    QWORD PTR [rbp-0x8],rax
  42ed0a:	xor    eax,eax
  42ed0c:	dec    DWORD PTR [rbp-0x44]
  42ed0f:	cmp    DWORD PTR [rbp-0x44],0x0
  42ed13:	jne    42ed2b <flatcc_json_printer_enum_flag@@Base+0xeb>
  42ed15:	mov    rax,QWORD PTR [rbp-0x38]
  42ed19:	mov    esi,0x2
  42ed1e:	mov    rdi,rax
  42ed21:	call   42ac48 <flatcc_json_parser_struct_as_root@@Base+0x433>
  42ed26:	jmp    42ee04 <flatcc_json_printer_enum_flag@@Base+0x1c4>
  42ed2b:	mov    rax,QWORD PTR [rbp-0x38]
  42ed2f:	mov    eax,DWORD PTR [rax+0x38]
  42ed32:	lea    edx,[rax+0x1]
  42ed35:	mov    rax,QWORD PTR [rbp-0x38]
  42ed39:	mov    DWORD PTR [rax+0x38],edx
  42ed3c:	mov    rax,QWORD PTR [rbp-0x38]
  42ed40:	mov    rax,QWORD PTR [rax+0x28]
  42ed44:	lea    rcx,[rax+0x1]
  42ed48:	mov    rdx,QWORD PTR [rbp-0x38]
  42ed4c:	mov    QWORD PTR [rdx+0x28],rcx
  42ed50:	mov    BYTE PTR [rax],0x7b
  42ed53:	mov    DWORD PTR [rbp-0x18],0x0
  42ed5a:	mov    eax,DWORD PTR [rbp-0x44]
  42ed5d:	mov    DWORD PTR [rbp-0x1c],eax
  42ed60:	mov    rax,QWORD PTR [rbp-0x40]
  42ed64:	mov    QWORD PTR [rbp-0x30],rax
  42ed68:	mov    rax,QWORD PTR [rbp-0x40]
  42ed6c:	mov    rdi,rax
  42ed6f:	call   42ab9d <flatcc_json_parser_struct_as_root@@Base+0x388>
  42ed74:	cdqe   
  42ed76:	neg    rax
  42ed79:	mov    rdx,rax
  42ed7c:	mov    rax,QWORD PTR [rbp-0x40]
  42ed80:	add    rax,rdx
  42ed83:	mov    QWORD PTR [rbp-0x28],rax
  42ed87:	mov    rax,QWORD PTR [rbp-0x28]
  42ed8b:	mov    rdi,rax
  42ed8e:	call   42abc8 <flatcc_json_parser_struct_as_root@@Base+0x3b3>
  42ed93:	movzx  eax,ax
  42ed96:	mov    DWORD PTR [rbp-0x20],eax
  42ed99:	lea    rcx,[rbp-0x30]
  42ed9d:	mov    rdx,QWORD PTR [rbp-0x38]
  42eda1:	mov    rax,QWORD PTR [rbp-0x50]
  42eda5:	mov    rsi,rcx
  42eda8:	mov    rdi,rdx
  42edab:	call   rax
  42edad:	mov    rax,QWORD PTR [rbp-0x38]
  42edb1:	movzx  eax,BYTE PTR [rax+0x31]
  42edb5:	test   al,al
  42edb7:	je     42eded <flatcc_json_printer_enum_flag@@Base+0x1ad>
  42edb9:	mov    rax,QWORD PTR [rbp-0x38]
  42edbd:	mov    rax,QWORD PTR [rax+0x28]
  42edc1:	lea    rcx,[rax+0x1]
  42edc5:	mov    rdx,QWORD PTR [rbp-0x38]
  42edc9:	mov    QWORD PTR [rdx+0x28],rcx
  42edcd:	mov    BYTE PTR [rax],0xa
  42edd0:	mov    rax,QWORD PTR [rbp-0x38]
  42edd4:	mov    eax,DWORD PTR [rax+0x38]
  42edd7:	lea    edx,[rax-0x1]
  42edda:	mov    rax,QWORD PTR [rbp-0x38]
  42edde:	mov    DWORD PTR [rax+0x38],edx
  42ede1:	mov    rax,QWORD PTR [rbp-0x38]
  42ede5:	mov    rdi,rax
  42ede8:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  42eded:	mov    rax,QWORD PTR [rbp-0x38]
  42edf1:	mov    rax,QWORD PTR [rax+0x28]
  42edf5:	lea    rcx,[rax+0x1]
  42edf9:	mov    rdx,QWORD PTR [rbp-0x38]
  42edfd:	mov    QWORD PTR [rdx+0x28],rcx
  42ee01:	mov    BYTE PTR [rax],0x7d
  42ee04:	mov    rax,QWORD PTR [rbp-0x8]
  42ee08:	xor    rax,QWORD PTR fs:0x28
  42ee11:	je     42ee18 <flatcc_json_printer_enum_flag@@Base+0x1d8>
  42ee13:	call   4061a0 <__stack_chk_fail@plt>
  42ee18:	leave  
  42ee19:	ret    

000000000042ee1a <flatcc_json_printer_string_field@@Base>:
  42ee1a:	endbr64 
  42ee1e:	push   rbp
  42ee1f:	mov    rbp,rsp
  42ee22:	sub    rsp,0x30
  42ee26:	mov    QWORD PTR [rbp-0x18],rdi
  42ee2a:	mov    QWORD PTR [rbp-0x20],rsi
  42ee2e:	mov    DWORD PTR [rbp-0x24],edx
  42ee31:	mov    QWORD PTR [rbp-0x30],rcx
  42ee35:	mov    DWORD PTR [rbp-0x28],r8d
  42ee39:	mov    edx,DWORD PTR [rbp-0x24]
  42ee3c:	mov    rax,QWORD PTR [rbp-0x20]
  42ee40:	mov    esi,edx
  42ee42:	mov    rdi,rax
  42ee45:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  42ee4a:	mov    QWORD PTR [rbp-0x8],rax
  42ee4e:	cmp    QWORD PTR [rbp-0x8],0x0
  42ee53:	je     42eeb8 <flatcc_json_printer_string_field@@Base+0x9e>
  42ee55:	mov    rax,QWORD PTR [rbp-0x20]
  42ee59:	mov    eax,DWORD PTR [rax+0x18]
  42ee5c:	lea    ecx,[rax+0x1]
  42ee5f:	mov    rdx,QWORD PTR [rbp-0x20]
  42ee63:	mov    DWORD PTR [rdx+0x18],ecx
  42ee66:	test   eax,eax
  42ee68:	je     42ee81 <flatcc_json_printer_string_field@@Base+0x67>
  42ee6a:	mov    rax,QWORD PTR [rbp-0x18]
  42ee6e:	mov    rax,QWORD PTR [rax+0x28]
  42ee72:	lea    rcx,[rax+0x1]
  42ee76:	mov    rdx,QWORD PTR [rbp-0x18]
  42ee7a:	mov    QWORD PTR [rdx+0x28],rcx
  42ee7e:	mov    BYTE PTR [rax],0x2c
  42ee81:	mov    eax,DWORD PTR [rbp-0x28]
  42ee84:	movsxd rdx,eax
  42ee87:	mov    rcx,QWORD PTR [rbp-0x30]
  42ee8b:	mov    rax,QWORD PTR [rbp-0x18]
  42ee8f:	mov    rsi,rcx
  42ee92:	mov    rdi,rax
  42ee95:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  42ee9a:	mov    rax,QWORD PTR [rbp-0x8]
  42ee9e:	mov    rdi,rax
  42eea1:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  42eea6:	mov    rdx,rax
  42eea9:	mov    rax,QWORD PTR [rbp-0x18]
  42eead:	mov    rsi,rdx
  42eeb0:	mov    rdi,rax
  42eeb3:	call   42ec9e <flatcc_json_printer_enum_flag@@Base+0x5e>
  42eeb8:	nop
  42eeb9:	leave  
  42eeba:	ret    

000000000042eebb <flatcc_json_printer_uint8_vector_base64_field@@Base>:
  42eebb:	endbr64 
  42eebf:	push   rbp
  42eec0:	mov    rbp,rsp
  42eec3:	sub    rsp,0x40
  42eec7:	mov    QWORD PTR [rbp-0x18],rdi
  42eecb:	mov    QWORD PTR [rbp-0x20],rsi
  42eecf:	mov    DWORD PTR [rbp-0x24],edx
  42eed2:	mov    QWORD PTR [rbp-0x30],rcx
  42eed6:	mov    DWORD PTR [rbp-0x28],r8d
  42eeda:	mov    DWORD PTR [rbp-0x34],r9d
  42eede:	mov    edx,DWORD PTR [rbp-0x24]
  42eee1:	mov    rax,QWORD PTR [rbp-0x20]
  42eee5:	mov    esi,edx
  42eee7:	mov    rdi,rax
  42eeea:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  42eeef:	mov    QWORD PTR [rbp-0x8],rax
  42eef3:	cmp    DWORD PTR [rbp-0x34],0x0
  42eef7:	setne  al
  42eefa:	movzx  eax,al
  42eefd:	mov    DWORD PTR [rbp-0xc],eax
  42ef00:	or     DWORD PTR [rbp-0xc],0x80
  42ef07:	cmp    QWORD PTR [rbp-0x8],0x0
  42ef0c:	je     42ef74 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xb9>
  42ef0e:	mov    rax,QWORD PTR [rbp-0x20]
  42ef12:	mov    eax,DWORD PTR [rax+0x18]
  42ef15:	lea    ecx,[rax+0x1]
  42ef18:	mov    rdx,QWORD PTR [rbp-0x20]
  42ef1c:	mov    DWORD PTR [rdx+0x18],ecx
  42ef1f:	test   eax,eax
  42ef21:	je     42ef3a <flatcc_json_printer_uint8_vector_base64_field@@Base+0x7f>
  42ef23:	mov    rax,QWORD PTR [rbp-0x18]
  42ef27:	mov    rax,QWORD PTR [rax+0x28]
  42ef2b:	lea    rcx,[rax+0x1]
  42ef2f:	mov    rdx,QWORD PTR [rbp-0x18]
  42ef33:	mov    QWORD PTR [rdx+0x28],rcx
  42ef37:	mov    BYTE PTR [rax],0x2c
  42ef3a:	mov    eax,DWORD PTR [rbp-0x28]
  42ef3d:	movsxd rdx,eax
  42ef40:	mov    rcx,QWORD PTR [rbp-0x30]
  42ef44:	mov    rax,QWORD PTR [rbp-0x18]
  42ef48:	mov    rsi,rcx
  42ef4b:	mov    rdi,rax
  42ef4e:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  42ef53:	mov    rax,QWORD PTR [rbp-0x8]
  42ef57:	mov    rdi,rax
  42ef5a:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  42ef5f:	mov    rcx,rax
  42ef62:	mov    edx,DWORD PTR [rbp-0xc]
  42ef65:	mov    rax,QWORD PTR [rbp-0x18]
  42ef69:	mov    rsi,rcx
  42ef6c:	mov    rdi,rax
  42ef6f:	call   42e293 <flatcc_json_printer_fmt_bool@@Base+0x487>
  42ef74:	nop
  42ef75:	leave  
  42ef76:	ret    

000000000042ef77 <flatcc_json_printer_uint8_field@@Base>:
  42ef77:	endbr64 
  42ef7b:	push   rbp
  42ef7c:	mov    rbp,rsp
  42ef7f:	sub    rsp,0x40
  42ef83:	mov    QWORD PTR [rbp-0x18],rdi
  42ef87:	mov    QWORD PTR [rbp-0x20],rsi
  42ef8b:	mov    DWORD PTR [rbp-0x24],edx
  42ef8e:	mov    QWORD PTR [rbp-0x30],rcx
  42ef92:	mov    DWORD PTR [rbp-0x28],r8d
  42ef96:	mov    eax,r9d
  42ef99:	mov    BYTE PTR [rbp-0x34],al
  42ef9c:	mov    edx,DWORD PTR [rbp-0x24]
  42ef9f:	mov    rax,QWORD PTR [rbp-0x20]
  42efa3:	mov    esi,edx
  42efa5:	mov    rdi,rax
  42efa8:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  42efad:	mov    QWORD PTR [rbp-0x8],rax
  42efb1:	cmp    QWORD PTR [rbp-0x8],0x0
  42efb6:	je     42efe1 <flatcc_json_printer_uint8_field@@Base+0x6a>
  42efb8:	mov    rax,QWORD PTR [rbp-0x8]
  42efbc:	mov    rdi,rax
  42efbf:	call   42a95d <flatcc_json_parser_struct_as_root@@Base+0x148>
  42efc4:	mov    BYTE PTR [rbp-0x9],al
  42efc7:	movzx  eax,BYTE PTR [rbp-0x9]
  42efcb:	cmp    al,BYTE PTR [rbp-0x34]
  42efce:	jne    42eff4 <flatcc_json_printer_uint8_field@@Base+0x7d>
  42efd0:	mov    rax,QWORD PTR [rbp-0x18]
  42efd4:	movzx  eax,BYTE PTR [rax+0x34]
  42efd8:	test   al,al
  42efda:	je     42eff4 <flatcc_json_printer_uint8_field@@Base+0x7d>
  42efdc:	jmp    42f06a <flatcc_json_printer_uint8_field@@Base+0xf3>
  42efe1:	mov    rax,QWORD PTR [rbp-0x18]
  42efe5:	movzx  eax,BYTE PTR [rax+0x35]
  42efe9:	test   al,al
  42efeb:	je     42f069 <flatcc_json_printer_uint8_field@@Base+0xf2>
  42efed:	movzx  eax,BYTE PTR [rbp-0x34]
  42eff1:	mov    BYTE PTR [rbp-0x9],al
  42eff4:	mov    rax,QWORD PTR [rbp-0x20]
  42eff8:	mov    eax,DWORD PTR [rax+0x18]
  42effb:	lea    ecx,[rax+0x1]
  42effe:	mov    rdx,QWORD PTR [rbp-0x20]
  42f002:	mov    DWORD PTR [rdx+0x18],ecx
  42f005:	test   eax,eax
  42f007:	je     42f020 <flatcc_json_printer_uint8_field@@Base+0xa9>
  42f009:	mov    rax,QWORD PTR [rbp-0x18]
  42f00d:	mov    rax,QWORD PTR [rax+0x28]
  42f011:	lea    rcx,[rax+0x1]
  42f015:	mov    rdx,QWORD PTR [rbp-0x18]
  42f019:	mov    QWORD PTR [rdx+0x28],rcx
  42f01d:	mov    BYTE PTR [rax],0x2c
  42f020:	mov    eax,DWORD PTR [rbp-0x28]
  42f023:	movsxd rdx,eax
  42f026:	mov    rcx,QWORD PTR [rbp-0x30]
  42f02a:	mov    rax,QWORD PTR [rbp-0x18]
  42f02e:	mov    rsi,rcx
  42f031:	mov    rdi,rax
  42f034:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  42f039:	mov    rax,QWORD PTR [rbp-0x18]
  42f03d:	mov    rdx,QWORD PTR [rax+0x28]
  42f041:	movzx  eax,BYTE PTR [rbp-0x9]
  42f045:	mov    rsi,rdx
  42f048:	mov    edi,eax
  42f04a:	call   42ad0d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  42f04f:	mov    ecx,eax
  42f051:	mov    rax,QWORD PTR [rbp-0x18]
  42f055:	mov    rdx,QWORD PTR [rax+0x28]
  42f059:	movsxd rax,ecx
  42f05c:	add    rdx,rax
  42f05f:	mov    rax,QWORD PTR [rbp-0x18]
  42f063:	mov    QWORD PTR [rax+0x28],rdx
  42f067:	jmp    42f06a <flatcc_json_printer_uint8_field@@Base+0xf3>
  42f069:	nop
  42f06a:	leave  
  42f06b:	ret    

000000000042f06c <flatcc_json_printer_uint16_field@@Base>:
  42f06c:	endbr64 
  42f070:	push   rbp
  42f071:	mov    rbp,rsp
  42f074:	sub    rsp,0x40
  42f078:	mov    QWORD PTR [rbp-0x18],rdi
  42f07c:	mov    QWORD PTR [rbp-0x20],rsi
  42f080:	mov    DWORD PTR [rbp-0x24],edx
  42f083:	mov    QWORD PTR [rbp-0x30],rcx
  42f087:	mov    DWORD PTR [rbp-0x28],r8d
  42f08b:	mov    eax,r9d
  42f08e:	mov    WORD PTR [rbp-0x34],ax
  42f092:	mov    edx,DWORD PTR [rbp-0x24]
  42f095:	mov    rax,QWORD PTR [rbp-0x20]
  42f099:	mov    esi,edx
  42f09b:	mov    rdi,rax
  42f09e:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  42f0a3:	mov    QWORD PTR [rbp-0x8],rax
  42f0a7:	cmp    QWORD PTR [rbp-0x8],0x0
  42f0ac:	je     42f0d9 <flatcc_json_printer_uint16_field@@Base+0x6d>
  42f0ae:	mov    rax,QWORD PTR [rbp-0x8]
  42f0b2:	mov    rdi,rax
  42f0b5:	call   42a98c <flatcc_json_parser_struct_as_root@@Base+0x177>
  42f0ba:	mov    WORD PTR [rbp-0xa],ax
  42f0be:	movzx  eax,WORD PTR [rbp-0xa]
  42f0c2:	cmp    ax,WORD PTR [rbp-0x34]
  42f0c6:	jne    42f0ed <flatcc_json_printer_uint16_field@@Base+0x81>
  42f0c8:	mov    rax,QWORD PTR [rbp-0x18]
  42f0cc:	movzx  eax,BYTE PTR [rax+0x34]
  42f0d0:	test   al,al
  42f0d2:	je     42f0ed <flatcc_json_printer_uint16_field@@Base+0x81>
  42f0d4:	jmp    42f163 <flatcc_json_printer_uint16_field@@Base+0xf7>
  42f0d9:	mov    rax,QWORD PTR [rbp-0x18]
  42f0dd:	movzx  eax,BYTE PTR [rax+0x35]
  42f0e1:	test   al,al
  42f0e3:	je     42f162 <flatcc_json_printer_uint16_field@@Base+0xf6>
  42f0e5:	movzx  eax,WORD PTR [rbp-0x34]
  42f0e9:	mov    WORD PTR [rbp-0xa],ax
  42f0ed:	mov    rax,QWORD PTR [rbp-0x20]
  42f0f1:	mov    eax,DWORD PTR [rax+0x18]
  42f0f4:	lea    ecx,[rax+0x1]
  42f0f7:	mov    rdx,QWORD PTR [rbp-0x20]
  42f0fb:	mov    DWORD PTR [rdx+0x18],ecx
  42f0fe:	test   eax,eax
  42f100:	je     42f119 <flatcc_json_printer_uint16_field@@Base+0xad>
  42f102:	mov    rax,QWORD PTR [rbp-0x18]
  42f106:	mov    rax,QWORD PTR [rax+0x28]
  42f10a:	lea    rcx,[rax+0x1]
  42f10e:	mov    rdx,QWORD PTR [rbp-0x18]
  42f112:	mov    QWORD PTR [rdx+0x28],rcx
  42f116:	mov    BYTE PTR [rax],0x2c
  42f119:	mov    eax,DWORD PTR [rbp-0x28]
  42f11c:	movsxd rdx,eax
  42f11f:	mov    rcx,QWORD PTR [rbp-0x30]
  42f123:	mov    rax,QWORD PTR [rbp-0x18]
  42f127:	mov    rsi,rcx
  42f12a:	mov    rdi,rax
  42f12d:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  42f132:	mov    rax,QWORD PTR [rbp-0x18]
  42f136:	mov    rdx,QWORD PTR [rax+0x28]
  42f13a:	movzx  eax,WORD PTR [rbp-0xa]
  42f13e:	mov    rsi,rdx
  42f141:	mov    edi,eax
  42f143:	call   42ae5f <flatcc_json_parser_struct_as_root@@Base+0x64a>
  42f148:	mov    ecx,eax
  42f14a:	mov    rax,QWORD PTR [rbp-0x18]
  42f14e:	mov    rdx,QWORD PTR [rax+0x28]
  42f152:	movsxd rax,ecx
  42f155:	add    rdx,rax
  42f158:	mov    rax,QWORD PTR [rbp-0x18]
  42f15c:	mov    QWORD PTR [rax+0x28],rdx
  42f160:	jmp    42f163 <flatcc_json_printer_uint16_field@@Base+0xf7>
  42f162:	nop
  42f163:	leave  
  42f164:	ret    

000000000042f165 <flatcc_json_printer_uint32_field@@Base>:
  42f165:	endbr64 
  42f169:	push   rbp
  42f16a:	mov    rbp,rsp
  42f16d:	sub    rsp,0x40
  42f171:	mov    QWORD PTR [rbp-0x18],rdi
  42f175:	mov    QWORD PTR [rbp-0x20],rsi
  42f179:	mov    DWORD PTR [rbp-0x24],edx
  42f17c:	mov    QWORD PTR [rbp-0x30],rcx
  42f180:	mov    DWORD PTR [rbp-0x28],r8d
  42f184:	mov    DWORD PTR [rbp-0x34],r9d
  42f188:	mov    edx,DWORD PTR [rbp-0x24]
  42f18b:	mov    rax,QWORD PTR [rbp-0x20]
  42f18f:	mov    esi,edx
  42f191:	mov    rdi,rax
  42f194:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  42f199:	mov    QWORD PTR [rbp-0x8],rax
  42f19d:	cmp    QWORD PTR [rbp-0x8],0x0
  42f1a2:	je     42f1cc <flatcc_json_printer_uint32_field@@Base+0x67>
  42f1a4:	mov    rax,QWORD PTR [rbp-0x8]
  42f1a8:	mov    rdi,rax
  42f1ab:	call   42a9b7 <flatcc_json_parser_struct_as_root@@Base+0x1a2>
  42f1b0:	mov    DWORD PTR [rbp-0xc],eax
  42f1b3:	mov    eax,DWORD PTR [rbp-0xc]
  42f1b6:	cmp    eax,DWORD PTR [rbp-0x34]
  42f1b9:	jne    42f1de <flatcc_json_printer_uint32_field@@Base+0x79>
  42f1bb:	mov    rax,QWORD PTR [rbp-0x18]
  42f1bf:	movzx  eax,BYTE PTR [rax+0x34]
  42f1c3:	test   al,al
  42f1c5:	je     42f1de <flatcc_json_printer_uint32_field@@Base+0x79>
  42f1c7:	jmp    42f253 <flatcc_json_printer_uint32_field@@Base+0xee>
  42f1cc:	mov    rax,QWORD PTR [rbp-0x18]
  42f1d0:	movzx  eax,BYTE PTR [rax+0x35]
  42f1d4:	test   al,al
  42f1d6:	je     42f252 <flatcc_json_printer_uint32_field@@Base+0xed>
  42f1d8:	mov    eax,DWORD PTR [rbp-0x34]
  42f1db:	mov    DWORD PTR [rbp-0xc],eax
  42f1de:	mov    rax,QWORD PTR [rbp-0x20]
  42f1e2:	mov    eax,DWORD PTR [rax+0x18]
  42f1e5:	lea    ecx,[rax+0x1]
  42f1e8:	mov    rdx,QWORD PTR [rbp-0x20]
  42f1ec:	mov    DWORD PTR [rdx+0x18],ecx
  42f1ef:	test   eax,eax
  42f1f1:	je     42f20a <flatcc_json_printer_uint32_field@@Base+0xa5>
  42f1f3:	mov    rax,QWORD PTR [rbp-0x18]
  42f1f7:	mov    rax,QWORD PTR [rax+0x28]
  42f1fb:	lea    rcx,[rax+0x1]
  42f1ff:	mov    rdx,QWORD PTR [rbp-0x18]
  42f203:	mov    QWORD PTR [rdx+0x28],rcx
  42f207:	mov    BYTE PTR [rax],0x2c
  42f20a:	mov    eax,DWORD PTR [rbp-0x28]
  42f20d:	movsxd rdx,eax
  42f210:	mov    rcx,QWORD PTR [rbp-0x30]
  42f214:	mov    rax,QWORD PTR [rbp-0x18]
  42f218:	mov    rsi,rcx
  42f21b:	mov    rdi,rax
  42f21e:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  42f223:	mov    rax,QWORD PTR [rbp-0x18]
  42f227:	mov    rdx,QWORD PTR [rax+0x28]
  42f22b:	mov    eax,DWORD PTR [rbp-0xc]
  42f22e:	mov    rsi,rdx
  42f231:	mov    edi,eax
  42f233:	call   42b104 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42f238:	mov    ecx,eax
  42f23a:	mov    rax,QWORD PTR [rbp-0x18]
  42f23e:	mov    rdx,QWORD PTR [rax+0x28]
  42f242:	movsxd rax,ecx
  42f245:	add    rdx,rax
  42f248:	mov    rax,QWORD PTR [rbp-0x18]
  42f24c:	mov    QWORD PTR [rax+0x28],rdx
  42f250:	jmp    42f253 <flatcc_json_printer_uint32_field@@Base+0xee>
  42f252:	nop
  42f253:	leave  
  42f254:	ret    

000000000042f255 <flatcc_json_printer_uint64_field@@Base>:
  42f255:	endbr64 
  42f259:	push   rbp
  42f25a:	mov    rbp,rsp
  42f25d:	sub    rsp,0x40
  42f261:	mov    QWORD PTR [rbp-0x18],rdi
  42f265:	mov    QWORD PTR [rbp-0x20],rsi
  42f269:	mov    DWORD PTR [rbp-0x24],edx
  42f26c:	mov    QWORD PTR [rbp-0x30],rcx
  42f270:	mov    DWORD PTR [rbp-0x28],r8d
  42f274:	mov    QWORD PTR [rbp-0x38],r9
  42f278:	mov    edx,DWORD PTR [rbp-0x24]
  42f27b:	mov    rax,QWORD PTR [rbp-0x20]
  42f27f:	mov    esi,edx
  42f281:	mov    rdi,rax
  42f284:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  42f289:	mov    QWORD PTR [rbp-0x8],rax
  42f28d:	cmp    QWORD PTR [rbp-0x8],0x0
  42f292:	je     42f2bf <flatcc_json_printer_uint64_field@@Base+0x6a>
  42f294:	mov    rax,QWORD PTR [rbp-0x8]
  42f298:	mov    rdi,rax
  42f29b:	call   42a9e0 <flatcc_json_parser_struct_as_root@@Base+0x1cb>
  42f2a0:	mov    QWORD PTR [rbp-0x10],rax
  42f2a4:	mov    rax,QWORD PTR [rbp-0x10]
  42f2a8:	cmp    rax,QWORD PTR [rbp-0x38]
  42f2ac:	jne    42f2d3 <flatcc_json_printer_uint64_field@@Base+0x7e>
  42f2ae:	mov    rax,QWORD PTR [rbp-0x18]
  42f2b2:	movzx  eax,BYTE PTR [rax+0x34]
  42f2b6:	test   al,al
  42f2b8:	je     42f2d3 <flatcc_json_printer_uint64_field@@Base+0x7e>
  42f2ba:	jmp    42f34a <flatcc_json_printer_uint64_field@@Base+0xf5>
  42f2bf:	mov    rax,QWORD PTR [rbp-0x18]
  42f2c3:	movzx  eax,BYTE PTR [rax+0x35]
  42f2c7:	test   al,al
  42f2c9:	je     42f349 <flatcc_json_printer_uint64_field@@Base+0xf4>
  42f2cb:	mov    rax,QWORD PTR [rbp-0x38]
  42f2cf:	mov    QWORD PTR [rbp-0x10],rax
  42f2d3:	mov    rax,QWORD PTR [rbp-0x20]
  42f2d7:	mov    eax,DWORD PTR [rax+0x18]
  42f2da:	lea    ecx,[rax+0x1]
  42f2dd:	mov    rdx,QWORD PTR [rbp-0x20]
  42f2e1:	mov    DWORD PTR [rdx+0x18],ecx
  42f2e4:	test   eax,eax
  42f2e6:	je     42f2ff <flatcc_json_printer_uint64_field@@Base+0xaa>
  42f2e8:	mov    rax,QWORD PTR [rbp-0x18]
  42f2ec:	mov    rax,QWORD PTR [rax+0x28]
  42f2f0:	lea    rcx,[rax+0x1]
  42f2f4:	mov    rdx,QWORD PTR [rbp-0x18]
  42f2f8:	mov    QWORD PTR [rdx+0x28],rcx
  42f2fc:	mov    BYTE PTR [rax],0x2c
  42f2ff:	mov    eax,DWORD PTR [rbp-0x28]
  42f302:	movsxd rdx,eax
  42f305:	mov    rcx,QWORD PTR [rbp-0x30]
  42f309:	mov    rax,QWORD PTR [rbp-0x18]
  42f30d:	mov    rsi,rcx
  42f310:	mov    rdi,rax
  42f313:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  42f318:	mov    rax,QWORD PTR [rbp-0x18]
  42f31c:	mov    rdx,QWORD PTR [rax+0x28]
  42f320:	mov    rax,QWORD PTR [rbp-0x10]
  42f324:	mov    rsi,rdx
  42f327:	mov    rdi,rax
  42f32a:	call   42b519 <flatcc_json_parser_struct_as_root@@Base+0xd04>
  42f32f:	mov    ecx,eax
  42f331:	mov    rax,QWORD PTR [rbp-0x18]
  42f335:	mov    rdx,QWORD PTR [rax+0x28]
  42f339:	movsxd rax,ecx
  42f33c:	add    rdx,rax
  42f33f:	mov    rax,QWORD PTR [rbp-0x18]
  42f343:	mov    QWORD PTR [rax+0x28],rdx
  42f347:	jmp    42f34a <flatcc_json_printer_uint64_field@@Base+0xf5>
  42f349:	nop
  42f34a:	leave  
  42f34b:	ret    

000000000042f34c <flatcc_json_printer_int8_field@@Base>:
  42f34c:	endbr64 
  42f350:	push   rbp
  42f351:	mov    rbp,rsp
  42f354:	sub    rsp,0x40
  42f358:	mov    QWORD PTR [rbp-0x18],rdi
  42f35c:	mov    QWORD PTR [rbp-0x20],rsi
  42f360:	mov    DWORD PTR [rbp-0x24],edx
  42f363:	mov    QWORD PTR [rbp-0x30],rcx
  42f367:	mov    DWORD PTR [rbp-0x28],r8d
  42f36b:	mov    eax,r9d
  42f36e:	mov    BYTE PTR [rbp-0x34],al
  42f371:	mov    edx,DWORD PTR [rbp-0x24]
  42f374:	mov    rax,QWORD PTR [rbp-0x20]
  42f378:	mov    esi,edx
  42f37a:	mov    rdi,rax
  42f37d:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  42f382:	mov    QWORD PTR [rbp-0x8],rax
  42f386:	cmp    QWORD PTR [rbp-0x8],0x0
  42f38b:	je     42f3b6 <flatcc_json_printer_int8_field@@Base+0x6a>
  42f38d:	mov    rax,QWORD PTR [rbp-0x8]
  42f391:	mov    rdi,rax
  42f394:	call   42aa0c <flatcc_json_parser_struct_as_root@@Base+0x1f7>
  42f399:	mov    BYTE PTR [rbp-0x9],al
  42f39c:	movzx  eax,BYTE PTR [rbp-0x9]
  42f3a0:	cmp    al,BYTE PTR [rbp-0x34]
  42f3a3:	jne    42f3c9 <flatcc_json_printer_int8_field@@Base+0x7d>
  42f3a5:	mov    rax,QWORD PTR [rbp-0x18]
  42f3a9:	movzx  eax,BYTE PTR [rax+0x34]
  42f3ad:	test   al,al
  42f3af:	je     42f3c9 <flatcc_json_printer_int8_field@@Base+0x7d>
  42f3b1:	jmp    42f43f <flatcc_json_printer_int8_field@@Base+0xf3>
  42f3b6:	mov    rax,QWORD PTR [rbp-0x18]
  42f3ba:	movzx  eax,BYTE PTR [rax+0x35]
  42f3be:	test   al,al
  42f3c0:	je     42f43e <flatcc_json_printer_int8_field@@Base+0xf2>
  42f3c2:	movzx  eax,BYTE PTR [rbp-0x34]
  42f3c6:	mov    BYTE PTR [rbp-0x9],al
  42f3c9:	mov    rax,QWORD PTR [rbp-0x20]
  42f3cd:	mov    eax,DWORD PTR [rax+0x18]
  42f3d0:	lea    ecx,[rax+0x1]
  42f3d3:	mov    rdx,QWORD PTR [rbp-0x20]
  42f3d7:	mov    DWORD PTR [rdx+0x18],ecx
  42f3da:	test   eax,eax
  42f3dc:	je     42f3f5 <flatcc_json_printer_int8_field@@Base+0xa9>
  42f3de:	mov    rax,QWORD PTR [rbp-0x18]
  42f3e2:	mov    rax,QWORD PTR [rax+0x28]
  42f3e6:	lea    rcx,[rax+0x1]
  42f3ea:	mov    rdx,QWORD PTR [rbp-0x18]
  42f3ee:	mov    QWORD PTR [rdx+0x28],rcx
  42f3f2:	mov    BYTE PTR [rax],0x2c
  42f3f5:	mov    eax,DWORD PTR [rbp-0x28]
  42f3f8:	movsxd rdx,eax
  42f3fb:	mov    rcx,QWORD PTR [rbp-0x30]
  42f3ff:	mov    rax,QWORD PTR [rbp-0x18]
  42f403:	mov    rsi,rcx
  42f406:	mov    rdi,rax
  42f409:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  42f40e:	mov    rax,QWORD PTR [rbp-0x18]
  42f412:	mov    rdx,QWORD PTR [rax+0x28]
  42f416:	movsx  eax,BYTE PTR [rbp-0x9]
  42f41a:	mov    rsi,rdx
  42f41d:	mov    edi,eax
  42f41f:	call   42bddc <flatcc_json_parser_struct_as_root@@Base+0x15c7>
  42f424:	mov    ecx,eax
  42f426:	mov    rax,QWORD PTR [rbp-0x18]
  42f42a:	mov    rdx,QWORD PTR [rax+0x28]
  42f42e:	movsxd rax,ecx
  42f431:	add    rdx,rax
  42f434:	mov    rax,QWORD PTR [rbp-0x18]
  42f438:	mov    QWORD PTR [rax+0x28],rdx
  42f43c:	jmp    42f43f <flatcc_json_printer_int8_field@@Base+0xf3>
  42f43e:	nop
  42f43f:	leave  
  42f440:	ret    

000000000042f441 <flatcc_json_printer_int16_field@@Base>:
  42f441:	endbr64 
  42f445:	push   rbp
  42f446:	mov    rbp,rsp
  42f449:	sub    rsp,0x40
  42f44d:	mov    QWORD PTR [rbp-0x18],rdi
  42f451:	mov    QWORD PTR [rbp-0x20],rsi
  42f455:	mov    DWORD PTR [rbp-0x24],edx
  42f458:	mov    QWORD PTR [rbp-0x30],rcx
  42f45c:	mov    DWORD PTR [rbp-0x28],r8d
  42f460:	mov    eax,r9d
  42f463:	mov    WORD PTR [rbp-0x34],ax
  42f467:	mov    edx,DWORD PTR [rbp-0x24]
  42f46a:	mov    rax,QWORD PTR [rbp-0x20]
  42f46e:	mov    esi,edx
  42f470:	mov    rdi,rax
  42f473:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  42f478:	mov    QWORD PTR [rbp-0x8],rax
  42f47c:	cmp    QWORD PTR [rbp-0x8],0x0
  42f481:	je     42f4ae <flatcc_json_printer_int16_field@@Base+0x6d>
  42f483:	mov    rax,QWORD PTR [rbp-0x8]
  42f487:	mov    rdi,rax
  42f48a:	call   42aa3b <flatcc_json_parser_struct_as_root@@Base+0x226>
  42f48f:	mov    WORD PTR [rbp-0xa],ax
  42f493:	movzx  eax,WORD PTR [rbp-0xa]
  42f497:	cmp    ax,WORD PTR [rbp-0x34]
  42f49b:	jne    42f4c2 <flatcc_json_printer_int16_field@@Base+0x81>
  42f49d:	mov    rax,QWORD PTR [rbp-0x18]
  42f4a1:	movzx  eax,BYTE PTR [rax+0x34]
  42f4a5:	test   al,al
  42f4a7:	je     42f4c2 <flatcc_json_printer_int16_field@@Base+0x81>
  42f4a9:	jmp    42f538 <flatcc_json_printer_int16_field@@Base+0xf7>
  42f4ae:	mov    rax,QWORD PTR [rbp-0x18]
  42f4b2:	movzx  eax,BYTE PTR [rax+0x35]
  42f4b6:	test   al,al
  42f4b8:	je     42f537 <flatcc_json_printer_int16_field@@Base+0xf6>
  42f4ba:	movzx  eax,WORD PTR [rbp-0x34]
  42f4be:	mov    WORD PTR [rbp-0xa],ax
  42f4c2:	mov    rax,QWORD PTR [rbp-0x20]
  42f4c6:	mov    eax,DWORD PTR [rax+0x18]
  42f4c9:	lea    ecx,[rax+0x1]
  42f4cc:	mov    rdx,QWORD PTR [rbp-0x20]
  42f4d0:	mov    DWORD PTR [rdx+0x18],ecx
  42f4d3:	test   eax,eax
  42f4d5:	je     42f4ee <flatcc_json_printer_int16_field@@Base+0xad>
  42f4d7:	mov    rax,QWORD PTR [rbp-0x18]
  42f4db:	mov    rax,QWORD PTR [rax+0x28]
  42f4df:	lea    rcx,[rax+0x1]
  42f4e3:	mov    rdx,QWORD PTR [rbp-0x18]
  42f4e7:	mov    QWORD PTR [rdx+0x28],rcx
  42f4eb:	mov    BYTE PTR [rax],0x2c
  42f4ee:	mov    eax,DWORD PTR [rbp-0x28]
  42f4f1:	movsxd rdx,eax
  42f4f4:	mov    rcx,QWORD PTR [rbp-0x30]
  42f4f8:	mov    rax,QWORD PTR [rbp-0x18]
  42f4fc:	mov    rsi,rcx
  42f4ff:	mov    rdi,rax
  42f502:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  42f507:	mov    rax,QWORD PTR [rbp-0x18]
  42f50b:	mov    rdx,QWORD PTR [rax+0x28]
  42f50f:	movsx  eax,WORD PTR [rbp-0xa]
  42f513:	mov    rsi,rdx
  42f516:	mov    edi,eax
  42f518:	call   42be3a <flatcc_json_parser_struct_as_root@@Base+0x1625>
  42f51d:	mov    ecx,eax
  42f51f:	mov    rax,QWORD PTR [rbp-0x18]
  42f523:	mov    rdx,QWORD PTR [rax+0x28]
  42f527:	movsxd rax,ecx
  42f52a:	add    rdx,rax
  42f52d:	mov    rax,QWORD PTR [rbp-0x18]
  42f531:	mov    QWORD PTR [rax+0x28],rdx
  42f535:	jmp    42f538 <flatcc_json_printer_int16_field@@Base+0xf7>
  42f537:	nop
  42f538:	leave  
  42f539:	ret    

000000000042f53a <flatcc_json_printer_int32_field@@Base>:
  42f53a:	endbr64 
  42f53e:	push   rbp
  42f53f:	mov    rbp,rsp
  42f542:	sub    rsp,0x40
  42f546:	mov    QWORD PTR [rbp-0x18],rdi
  42f54a:	mov    QWORD PTR [rbp-0x20],rsi
  42f54e:	mov    DWORD PTR [rbp-0x24],edx
  42f551:	mov    QWORD PTR [rbp-0x30],rcx
  42f555:	mov    DWORD PTR [rbp-0x28],r8d
  42f559:	mov    DWORD PTR [rbp-0x34],r9d
  42f55d:	mov    edx,DWORD PTR [rbp-0x24]
  42f560:	mov    rax,QWORD PTR [rbp-0x20]
  42f564:	mov    esi,edx
  42f566:	mov    rdi,rax
  42f569:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  42f56e:	mov    QWORD PTR [rbp-0x8],rax
  42f572:	cmp    QWORD PTR [rbp-0x8],0x0
  42f577:	je     42f5a1 <flatcc_json_printer_int32_field@@Base+0x67>
  42f579:	mov    rax,QWORD PTR [rbp-0x8]
  42f57d:	mov    rdi,rax
  42f580:	call   42aa64 <flatcc_json_parser_struct_as_root@@Base+0x24f>
  42f585:	mov    DWORD PTR [rbp-0xc],eax
  42f588:	mov    eax,DWORD PTR [rbp-0xc]
  42f58b:	cmp    eax,DWORD PTR [rbp-0x34]
  42f58e:	jne    42f5b3 <flatcc_json_printer_int32_field@@Base+0x79>
  42f590:	mov    rax,QWORD PTR [rbp-0x18]
  42f594:	movzx  eax,BYTE PTR [rax+0x34]
  42f598:	test   al,al
  42f59a:	je     42f5b3 <flatcc_json_printer_int32_field@@Base+0x79>
  42f59c:	jmp    42f628 <flatcc_json_printer_int32_field@@Base+0xee>
  42f5a1:	mov    rax,QWORD PTR [rbp-0x18]
  42f5a5:	movzx  eax,BYTE PTR [rax+0x35]
  42f5a9:	test   al,al
  42f5ab:	je     42f627 <flatcc_json_printer_int32_field@@Base+0xed>
  42f5ad:	mov    eax,DWORD PTR [rbp-0x34]
  42f5b0:	mov    DWORD PTR [rbp-0xc],eax
  42f5b3:	mov    rax,QWORD PTR [rbp-0x20]
  42f5b7:	mov    eax,DWORD PTR [rax+0x18]
  42f5ba:	lea    ecx,[rax+0x1]
  42f5bd:	mov    rdx,QWORD PTR [rbp-0x20]
  42f5c1:	mov    DWORD PTR [rdx+0x18],ecx
  42f5c4:	test   eax,eax
  42f5c6:	je     42f5df <flatcc_json_printer_int32_field@@Base+0xa5>
  42f5c8:	mov    rax,QWORD PTR [rbp-0x18]
  42f5cc:	mov    rax,QWORD PTR [rax+0x28]
  42f5d0:	lea    rcx,[rax+0x1]
  42f5d4:	mov    rdx,QWORD PTR [rbp-0x18]
  42f5d8:	mov    QWORD PTR [rdx+0x28],rcx
  42f5dc:	mov    BYTE PTR [rax],0x2c
  42f5df:	mov    eax,DWORD PTR [rbp-0x28]
  42f5e2:	movsxd rdx,eax
  42f5e5:	mov    rcx,QWORD PTR [rbp-0x30]
  42f5e9:	mov    rax,QWORD PTR [rbp-0x18]
  42f5ed:	mov    rsi,rcx
  42f5f0:	mov    rdi,rax
  42f5f3:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  42f5f8:	mov    rax,QWORD PTR [rbp-0x18]
  42f5fc:	mov    rdx,QWORD PTR [rax+0x28]
  42f600:	mov    eax,DWORD PTR [rbp-0xc]
  42f603:	mov    rsi,rdx
  42f606:	mov    edi,eax
  42f608:	call   42be9b <flatcc_json_parser_struct_as_root@@Base+0x1686>
  42f60d:	mov    ecx,eax
  42f60f:	mov    rax,QWORD PTR [rbp-0x18]
  42f613:	mov    rdx,QWORD PTR [rax+0x28]
  42f617:	movsxd rax,ecx
  42f61a:	add    rdx,rax
  42f61d:	mov    rax,QWORD PTR [rbp-0x18]
  42f621:	mov    QWORD PTR [rax+0x28],rdx
  42f625:	jmp    42f628 <flatcc_json_printer_int32_field@@Base+0xee>
  42f627:	nop
  42f628:	leave  
  42f629:	ret    

000000000042f62a <flatcc_json_printer_int64_field@@Base>:
  42f62a:	endbr64 
  42f62e:	push   rbp
  42f62f:	mov    rbp,rsp
  42f632:	sub    rsp,0x40
  42f636:	mov    QWORD PTR [rbp-0x18],rdi
  42f63a:	mov    QWORD PTR [rbp-0x20],rsi
  42f63e:	mov    DWORD PTR [rbp-0x24],edx
  42f641:	mov    QWORD PTR [rbp-0x30],rcx
  42f645:	mov    DWORD PTR [rbp-0x28],r8d
  42f649:	mov    QWORD PTR [rbp-0x38],r9
  42f64d:	mov    edx,DWORD PTR [rbp-0x24]
  42f650:	mov    rax,QWORD PTR [rbp-0x20]
  42f654:	mov    esi,edx
  42f656:	mov    rdi,rax
  42f659:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  42f65e:	mov    QWORD PTR [rbp-0x8],rax
  42f662:	cmp    QWORD PTR [rbp-0x8],0x0
  42f667:	je     42f694 <flatcc_json_printer_int64_field@@Base+0x6a>
  42f669:	mov    rax,QWORD PTR [rbp-0x8]
  42f66d:	mov    rdi,rax
  42f670:	call   42aa8d <flatcc_json_parser_struct_as_root@@Base+0x278>
  42f675:	mov    QWORD PTR [rbp-0x10],rax
  42f679:	mov    rax,QWORD PTR [rbp-0x10]
  42f67d:	cmp    rax,QWORD PTR [rbp-0x38]
  42f681:	jne    42f6a8 <flatcc_json_printer_int64_field@@Base+0x7e>
  42f683:	mov    rax,QWORD PTR [rbp-0x18]
  42f687:	movzx  eax,BYTE PTR [rax+0x34]
  42f68b:	test   al,al
  42f68d:	je     42f6a8 <flatcc_json_printer_int64_field@@Base+0x7e>
  42f68f:	jmp    42f71f <flatcc_json_printer_int64_field@@Base+0xf5>
  42f694:	mov    rax,QWORD PTR [rbp-0x18]
  42f698:	movzx  eax,BYTE PTR [rax+0x35]
  42f69c:	test   al,al
  42f69e:	je     42f71e <flatcc_json_printer_int64_field@@Base+0xf4>
  42f6a0:	mov    rax,QWORD PTR [rbp-0x38]
  42f6a4:	mov    QWORD PTR [rbp-0x10],rax
  42f6a8:	mov    rax,QWORD PTR [rbp-0x20]
  42f6ac:	mov    eax,DWORD PTR [rax+0x18]
  42f6af:	lea    ecx,[rax+0x1]
  42f6b2:	mov    rdx,QWORD PTR [rbp-0x20]
  42f6b6:	mov    DWORD PTR [rdx+0x18],ecx
  42f6b9:	test   eax,eax
  42f6bb:	je     42f6d4 <flatcc_json_printer_int64_field@@Base+0xaa>
  42f6bd:	mov    rax,QWORD PTR [rbp-0x18]
  42f6c1:	mov    rax,QWORD PTR [rax+0x28]
  42f6c5:	lea    rcx,[rax+0x1]
  42f6c9:	mov    rdx,QWORD PTR [rbp-0x18]
  42f6cd:	mov    QWORD PTR [rdx+0x28],rcx
  42f6d1:	mov    BYTE PTR [rax],0x2c
  42f6d4:	mov    eax,DWORD PTR [rbp-0x28]
  42f6d7:	movsxd rdx,eax
  42f6da:	mov    rcx,QWORD PTR [rbp-0x30]
  42f6de:	mov    rax,QWORD PTR [rbp-0x18]
  42f6e2:	mov    rsi,rcx
  42f6e5:	mov    rdi,rax
  42f6e8:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  42f6ed:	mov    rax,QWORD PTR [rbp-0x18]
  42f6f1:	mov    rdx,QWORD PTR [rax+0x28]
  42f6f5:	mov    rax,QWORD PTR [rbp-0x10]
  42f6f9:	mov    rsi,rdx
  42f6fc:	mov    rdi,rax
  42f6ff:	call   42beec <flatcc_json_parser_struct_as_root@@Base+0x16d7>
  42f704:	mov    ecx,eax
  42f706:	mov    rax,QWORD PTR [rbp-0x18]
  42f70a:	mov    rdx,QWORD PTR [rax+0x28]
  42f70e:	movsxd rax,ecx
  42f711:	add    rdx,rax
  42f714:	mov    rax,QWORD PTR [rbp-0x18]
  42f718:	mov    QWORD PTR [rax+0x28],rdx
  42f71c:	jmp    42f71f <flatcc_json_printer_int64_field@@Base+0xf5>
  42f71e:	nop
  42f71f:	leave  
  42f720:	ret    

000000000042f721 <flatcc_json_printer_bool_field@@Base>:
  42f721:	endbr64 
  42f725:	push   rbp
  42f726:	mov    rbp,rsp
  42f729:	sub    rsp,0x40
  42f72d:	mov    QWORD PTR [rbp-0x18],rdi
  42f731:	mov    QWORD PTR [rbp-0x20],rsi
  42f735:	mov    DWORD PTR [rbp-0x24],edx
  42f738:	mov    QWORD PTR [rbp-0x30],rcx
  42f73c:	mov    DWORD PTR [rbp-0x28],r8d
  42f740:	mov    eax,r9d
  42f743:	mov    BYTE PTR [rbp-0x34],al
  42f746:	mov    edx,DWORD PTR [rbp-0x24]
  42f749:	mov    rax,QWORD PTR [rbp-0x20]
  42f74d:	mov    esi,edx
  42f74f:	mov    rdi,rax
  42f752:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  42f757:	mov    QWORD PTR [rbp-0x8],rax
  42f75b:	cmp    QWORD PTR [rbp-0x8],0x0
  42f760:	je     42f78b <flatcc_json_printer_bool_field@@Base+0x6a>
  42f762:	mov    rax,QWORD PTR [rbp-0x8]
  42f766:	mov    rdi,rax
  42f769:	call   42ab4b <flatcc_json_parser_struct_as_root@@Base+0x336>
  42f76e:	mov    BYTE PTR [rbp-0x9],al
  42f771:	movzx  eax,BYTE PTR [rbp-0x9]
  42f775:	cmp    al,BYTE PTR [rbp-0x34]
  42f778:	jne    42f79e <flatcc_json_printer_bool_field@@Base+0x7d>
  42f77a:	mov    rax,QWORD PTR [rbp-0x18]
  42f77e:	movzx  eax,BYTE PTR [rax+0x34]
  42f782:	test   al,al
  42f784:	je     42f79e <flatcc_json_printer_bool_field@@Base+0x7d>
  42f786:	jmp    42f814 <flatcc_json_printer_bool_field@@Base+0xf3>
  42f78b:	mov    rax,QWORD PTR [rbp-0x18]
  42f78f:	movzx  eax,BYTE PTR [rax+0x35]
  42f793:	test   al,al
  42f795:	je     42f813 <flatcc_json_printer_bool_field@@Base+0xf2>
  42f797:	movzx  eax,BYTE PTR [rbp-0x34]
  42f79b:	mov    BYTE PTR [rbp-0x9],al
  42f79e:	mov    rax,QWORD PTR [rbp-0x20]
  42f7a2:	mov    eax,DWORD PTR [rax+0x18]
  42f7a5:	lea    ecx,[rax+0x1]
  42f7a8:	mov    rdx,QWORD PTR [rbp-0x20]
  42f7ac:	mov    DWORD PTR [rdx+0x18],ecx
  42f7af:	test   eax,eax
  42f7b1:	je     42f7ca <flatcc_json_printer_bool_field@@Base+0xa9>
  42f7b3:	mov    rax,QWORD PTR [rbp-0x18]
  42f7b7:	mov    rax,QWORD PTR [rax+0x28]
  42f7bb:	lea    rcx,[rax+0x1]
  42f7bf:	mov    rdx,QWORD PTR [rbp-0x18]
  42f7c3:	mov    QWORD PTR [rdx+0x28],rcx
  42f7c7:	mov    BYTE PTR [rax],0x2c
  42f7ca:	mov    eax,DWORD PTR [rbp-0x28]
  42f7cd:	movsxd rdx,eax
  42f7d0:	mov    rcx,QWORD PTR [rbp-0x30]
  42f7d4:	mov    rax,QWORD PTR [rbp-0x18]
  42f7d8:	mov    rsi,rcx
  42f7db:	mov    rdi,rax
  42f7de:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  42f7e3:	mov    rax,QWORD PTR [rbp-0x18]
  42f7e7:	mov    rdx,QWORD PTR [rax+0x28]
  42f7eb:	movzx  eax,BYTE PTR [rbp-0x9]
  42f7ef:	mov    rsi,rdx
  42f7f2:	mov    edi,eax
  42f7f4:	call   42acb6 <flatcc_json_parser_struct_as_root@@Base+0x4a1>
  42f7f9:	mov    ecx,eax
  42f7fb:	mov    rax,QWORD PTR [rbp-0x18]
  42f7ff:	mov    rdx,QWORD PTR [rax+0x28]
  42f803:	movsxd rax,ecx
  42f806:	add    rdx,rax
  42f809:	mov    rax,QWORD PTR [rbp-0x18]
  42f80d:	mov    QWORD PTR [rax+0x28],rdx
  42f811:	jmp    42f814 <flatcc_json_printer_bool_field@@Base+0xf3>
  42f813:	nop
  42f814:	leave  
  42f815:	ret    

000000000042f816 <flatcc_json_printer_float_field@@Base>:
  42f816:	endbr64 
  42f81a:	push   rbp
  42f81b:	mov    rbp,rsp
  42f81e:	sub    rsp,0x40
  42f822:	mov    QWORD PTR [rbp-0x18],rdi
  42f826:	mov    QWORD PTR [rbp-0x20],rsi
  42f82a:	mov    DWORD PTR [rbp-0x24],edx
  42f82d:	mov    QWORD PTR [rbp-0x30],rcx
  42f831:	mov    DWORD PTR [rbp-0x28],r8d
  42f835:	vmovss DWORD PTR [rbp-0x34],xmm0
  42f83a:	mov    edx,DWORD PTR [rbp-0x24]
  42f83d:	mov    rax,QWORD PTR [rbp-0x20]
  42f841:	mov    esi,edx
  42f843:	mov    rdi,rax
  42f846:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  42f84b:	mov    QWORD PTR [rbp-0x8],rax
  42f84f:	cmp    QWORD PTR [rbp-0x8],0x0
  42f854:	je     42f892 <flatcc_json_printer_float_field@@Base+0x7c>
  42f856:	mov    rax,QWORD PTR [rbp-0x8]
  42f85a:	mov    rdi,rax
  42f85d:	call   42aaca <flatcc_json_parser_struct_as_root@@Base+0x2b5>
  42f862:	vmovd  eax,xmm0
  42f866:	mov    DWORD PTR [rbp-0xc],eax
  42f869:	vmovss xmm0,DWORD PTR [rbp-0xc]
  42f86e:	vucomiss xmm0,DWORD PTR [rbp-0x34]
  42f873:	jp     42f8ac <flatcc_json_printer_float_field@@Base+0x96>
  42f875:	vmovss xmm0,DWORD PTR [rbp-0xc]
  42f87a:	vucomiss xmm0,DWORD PTR [rbp-0x34]
  42f87f:	jne    42f8ac <flatcc_json_printer_float_field@@Base+0x96>
  42f881:	mov    rax,QWORD PTR [rbp-0x18]
  42f885:	movzx  eax,BYTE PTR [rax+0x34]
  42f889:	test   al,al
  42f88b:	je     42f8ac <flatcc_json_printer_float_field@@Base+0x96>
  42f88d:	jmp    42f92b <flatcc_json_printer_float_field@@Base+0x115>
  42f892:	mov    rax,QWORD PTR [rbp-0x18]
  42f896:	movzx  eax,BYTE PTR [rax+0x35]
  42f89a:	test   al,al
  42f89c:	je     42f92a <flatcc_json_printer_float_field@@Base+0x114>
  42f8a2:	vmovss xmm0,DWORD PTR [rbp-0x34]
  42f8a7:	vmovss DWORD PTR [rbp-0xc],xmm0
  42f8ac:	mov    rax,QWORD PTR [rbp-0x20]
  42f8b0:	mov    eax,DWORD PTR [rax+0x18]
  42f8b3:	lea    ecx,[rax+0x1]
  42f8b6:	mov    rdx,QWORD PTR [rbp-0x20]
  42f8ba:	mov    DWORD PTR [rdx+0x18],ecx
  42f8bd:	test   eax,eax
  42f8bf:	je     42f8d8 <flatcc_json_printer_float_field@@Base+0xc2>
  42f8c1:	mov    rax,QWORD PTR [rbp-0x18]
  42f8c5:	mov    rax,QWORD PTR [rax+0x28]
  42f8c9:	lea    rcx,[rax+0x1]
  42f8cd:	mov    rdx,QWORD PTR [rbp-0x18]
  42f8d1:	mov    QWORD PTR [rdx+0x28],rcx
  42f8d5:	mov    BYTE PTR [rax],0x2c
  42f8d8:	mov    eax,DWORD PTR [rbp-0x28]
  42f8db:	movsxd rdx,eax
  42f8de:	mov    rcx,QWORD PTR [rbp-0x30]
  42f8e2:	mov    rax,QWORD PTR [rbp-0x18]
  42f8e6:	mov    rsi,rcx
  42f8e9:	mov    rdi,rax
  42f8ec:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  42f8f1:	mov    rax,QWORD PTR [rbp-0x18]
  42f8f5:	mov    rdx,QWORD PTR [rax+0x28]
  42f8f9:	vcvtss2sd xmm1,xmm1,DWORD PTR [rbp-0xc]
  42f8fe:	vmovq  rax,xmm1
  42f903:	mov    rdi,rdx
  42f906:	vmovq  xmm0,rax
  42f90b:	call   42d01c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  42f910:	mov    ecx,eax
  42f912:	mov    rax,QWORD PTR [rbp-0x18]
  42f916:	mov    rdx,QWORD PTR [rax+0x28]
  42f91a:	movsxd rax,ecx
  42f91d:	add    rdx,rax
  42f920:	mov    rax,QWORD PTR [rbp-0x18]
  42f924:	mov    QWORD PTR [rax+0x28],rdx
  42f928:	jmp    42f92b <flatcc_json_printer_float_field@@Base+0x115>
  42f92a:	nop
  42f92b:	leave  
  42f92c:	ret    

000000000042f92d <flatcc_json_printer_double_field@@Base>:
  42f92d:	endbr64 
  42f931:	push   rbp
  42f932:	mov    rbp,rsp
  42f935:	sub    rsp,0x40
  42f939:	mov    QWORD PTR [rbp-0x18],rdi
  42f93d:	mov    QWORD PTR [rbp-0x20],rsi
  42f941:	mov    DWORD PTR [rbp-0x24],edx
  42f944:	mov    QWORD PTR [rbp-0x30],rcx
  42f948:	mov    DWORD PTR [rbp-0x28],r8d
  42f94c:	vmovsd QWORD PTR [rbp-0x38],xmm0
  42f951:	mov    edx,DWORD PTR [rbp-0x24]
  42f954:	mov    rax,QWORD PTR [rbp-0x20]
  42f958:	mov    esi,edx
  42f95a:	mov    rdi,rax
  42f95d:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  42f962:	mov    QWORD PTR [rbp-0x8],rax
  42f966:	cmp    QWORD PTR [rbp-0x8],0x0
  42f96b:	je     42f9ab <flatcc_json_printer_double_field@@Base+0x7e>
  42f96d:	mov    rax,QWORD PTR [rbp-0x8]
  42f971:	mov    rdi,rax
  42f974:	call   42ab13 <flatcc_json_parser_struct_as_root@@Base+0x2fe>
  42f979:	vmovq  rax,xmm0
  42f97e:	mov    QWORD PTR [rbp-0x10],rax
  42f982:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42f987:	vucomisd xmm0,QWORD PTR [rbp-0x38]
  42f98c:	jp     42f9c5 <flatcc_json_printer_double_field@@Base+0x98>
  42f98e:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  42f993:	vucomisd xmm0,QWORD PTR [rbp-0x38]
  42f998:	jne    42f9c5 <flatcc_json_printer_double_field@@Base+0x98>
  42f99a:	mov    rax,QWORD PTR [rbp-0x18]
  42f99e:	movzx  eax,BYTE PTR [rax+0x34]
  42f9a2:	test   al,al
  42f9a4:	je     42f9c5 <flatcc_json_printer_double_field@@Base+0x98>
  42f9a6:	jmp    42fa3e <flatcc_json_printer_double_field@@Base+0x111>
  42f9ab:	mov    rax,QWORD PTR [rbp-0x18]
  42f9af:	movzx  eax,BYTE PTR [rax+0x35]
  42f9b3:	test   al,al
  42f9b5:	je     42fa3d <flatcc_json_printer_double_field@@Base+0x110>
  42f9bb:	vmovsd xmm0,QWORD PTR [rbp-0x38]
  42f9c0:	vmovsd QWORD PTR [rbp-0x10],xmm0
  42f9c5:	mov    rax,QWORD PTR [rbp-0x20]
  42f9c9:	mov    eax,DWORD PTR [rax+0x18]
  42f9cc:	lea    ecx,[rax+0x1]
  42f9cf:	mov    rdx,QWORD PTR [rbp-0x20]
  42f9d3:	mov    DWORD PTR [rdx+0x18],ecx
  42f9d6:	test   eax,eax
  42f9d8:	je     42f9f1 <flatcc_json_printer_double_field@@Base+0xc4>
  42f9da:	mov    rax,QWORD PTR [rbp-0x18]
  42f9de:	mov    rax,QWORD PTR [rax+0x28]
  42f9e2:	lea    rcx,[rax+0x1]
  42f9e6:	mov    rdx,QWORD PTR [rbp-0x18]
  42f9ea:	mov    QWORD PTR [rdx+0x28],rcx
  42f9ee:	mov    BYTE PTR [rax],0x2c
  42f9f1:	mov    eax,DWORD PTR [rbp-0x28]
  42f9f4:	movsxd rdx,eax
  42f9f7:	mov    rcx,QWORD PTR [rbp-0x30]
  42f9fb:	mov    rax,QWORD PTR [rbp-0x18]
  42f9ff:	mov    rsi,rcx
  42fa02:	mov    rdi,rax
  42fa05:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  42fa0a:	mov    rax,QWORD PTR [rbp-0x18]
  42fa0e:	mov    rdx,QWORD PTR [rax+0x28]
  42fa12:	mov    rax,QWORD PTR [rbp-0x10]
  42fa16:	mov    rdi,rdx
  42fa19:	vmovq  xmm0,rax
  42fa1e:	call   42d01c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  42fa23:	mov    ecx,eax
  42fa25:	mov    rax,QWORD PTR [rbp-0x18]
  42fa29:	mov    rdx,QWORD PTR [rax+0x28]
  42fa2d:	movsxd rax,ecx
  42fa30:	add    rdx,rax
  42fa33:	mov    rax,QWORD PTR [rbp-0x18]
  42fa37:	mov    QWORD PTR [rax+0x28],rdx
  42fa3b:	jmp    42fa3e <flatcc_json_printer_double_field@@Base+0x111>
  42fa3d:	nop
  42fa3e:	leave  
  42fa3f:	ret    

000000000042fa40 <flatcc_json_printer_uint8_enum_field@@Base>:
  42fa40:	endbr64 
  42fa44:	push   rbp
  42fa45:	mov    rbp,rsp
  42fa48:	sub    rsp,0x40
  42fa4c:	mov    QWORD PTR [rbp-0x18],rdi
  42fa50:	mov    QWORD PTR [rbp-0x20],rsi
  42fa54:	mov    DWORD PTR [rbp-0x24],edx
  42fa57:	mov    QWORD PTR [rbp-0x30],rcx
  42fa5b:	mov    DWORD PTR [rbp-0x28],r8d
  42fa5f:	mov    eax,r9d
  42fa62:	mov    BYTE PTR [rbp-0x34],al
  42fa65:	mov    edx,DWORD PTR [rbp-0x24]
  42fa68:	mov    rax,QWORD PTR [rbp-0x20]
  42fa6c:	mov    esi,edx
  42fa6e:	mov    rdi,rax
  42fa71:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  42fa76:	mov    QWORD PTR [rbp-0x8],rax
  42fa7a:	cmp    QWORD PTR [rbp-0x8],0x0
  42fa7f:	je     42faaa <flatcc_json_printer_uint8_enum_field@@Base+0x6a>
  42fa81:	mov    rax,QWORD PTR [rbp-0x8]
  42fa85:	mov    rdi,rax
  42fa88:	call   42a95d <flatcc_json_parser_struct_as_root@@Base+0x148>
  42fa8d:	mov    BYTE PTR [rbp-0x9],al
  42fa90:	movzx  eax,BYTE PTR [rbp-0x9]
  42fa94:	cmp    al,BYTE PTR [rbp-0x34]
  42fa97:	jne    42fac1 <flatcc_json_printer_uint8_enum_field@@Base+0x81>
  42fa99:	mov    rax,QWORD PTR [rbp-0x18]
  42fa9d:	movzx  eax,BYTE PTR [rax+0x34]
  42faa1:	test   al,al
  42faa3:	je     42fac1 <flatcc_json_printer_uint8_enum_field@@Base+0x81>
  42faa5:	jmp    42fb58 <flatcc_json_printer_uint8_enum_field@@Base+0x118>
  42faaa:	mov    rax,QWORD PTR [rbp-0x18]
  42faae:	movzx  eax,BYTE PTR [rax+0x35]
  42fab2:	test   al,al
  42fab4:	je     42fb57 <flatcc_json_printer_uint8_enum_field@@Base+0x117>
  42faba:	movzx  eax,BYTE PTR [rbp-0x34]
  42fabe:	mov    BYTE PTR [rbp-0x9],al
  42fac1:	mov    rax,QWORD PTR [rbp-0x20]
  42fac5:	mov    eax,DWORD PTR [rax+0x18]
  42fac8:	lea    ecx,[rax+0x1]
  42facb:	mov    rdx,QWORD PTR [rbp-0x20]
  42facf:	mov    DWORD PTR [rdx+0x18],ecx
  42fad2:	test   eax,eax
  42fad4:	je     42faed <flatcc_json_printer_uint8_enum_field@@Base+0xad>
  42fad6:	mov    rax,QWORD PTR [rbp-0x18]
  42fada:	mov    rax,QWORD PTR [rax+0x28]
  42fade:	lea    rcx,[rax+0x1]
  42fae2:	mov    rdx,QWORD PTR [rbp-0x18]
  42fae6:	mov    QWORD PTR [rdx+0x28],rcx
  42faea:	mov    BYTE PTR [rax],0x2c
  42faed:	mov    eax,DWORD PTR [rbp-0x28]
  42faf0:	movsxd rdx,eax
  42faf3:	mov    rcx,QWORD PTR [rbp-0x30]
  42faf7:	mov    rax,QWORD PTR [rbp-0x18]
  42fafb:	mov    rsi,rcx
  42fafe:	mov    rdi,rax
  42fb01:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  42fb06:	mov    rax,QWORD PTR [rbp-0x18]
  42fb0a:	movzx  eax,BYTE PTR [rax+0x33]
  42fb0e:	test   al,al
  42fb10:	je     42fb42 <flatcc_json_printer_uint8_enum_field@@Base+0x102>
  42fb12:	mov    rax,QWORD PTR [rbp-0x18]
  42fb16:	mov    rdx,QWORD PTR [rax+0x28]
  42fb1a:	movzx  eax,BYTE PTR [rbp-0x9]
  42fb1e:	mov    rsi,rdx
  42fb21:	mov    edi,eax
  42fb23:	call   42ad0d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  42fb28:	mov    ecx,eax
  42fb2a:	mov    rax,QWORD PTR [rbp-0x18]
  42fb2e:	mov    rdx,QWORD PTR [rax+0x28]
  42fb32:	movsxd rax,ecx
  42fb35:	add    rdx,rax
  42fb38:	mov    rax,QWORD PTR [rbp-0x18]
  42fb3c:	mov    QWORD PTR [rax+0x28],rdx
  42fb40:	jmp    42fb58 <flatcc_json_printer_uint8_enum_field@@Base+0x118>
  42fb42:	movzx  ecx,BYTE PTR [rbp-0x9]
  42fb46:	mov    rdx,QWORD PTR [rbp-0x18]
  42fb4a:	mov    rax,QWORD PTR [rbp+0x10]
  42fb4e:	mov    esi,ecx
  42fb50:	mov    rdi,rdx
  42fb53:	call   rax
  42fb55:	jmp    42fb58 <flatcc_json_printer_uint8_enum_field@@Base+0x118>
  42fb57:	nop
  42fb58:	leave  
  42fb59:	ret    

000000000042fb5a <flatcc_json_printer_uint16_enum_field@@Base>:
  42fb5a:	endbr64 
  42fb5e:	push   rbp
  42fb5f:	mov    rbp,rsp
  42fb62:	sub    rsp,0x40
  42fb66:	mov    QWORD PTR [rbp-0x18],rdi
  42fb6a:	mov    QWORD PTR [rbp-0x20],rsi
  42fb6e:	mov    DWORD PTR [rbp-0x24],edx
  42fb71:	mov    QWORD PTR [rbp-0x30],rcx
  42fb75:	mov    DWORD PTR [rbp-0x28],r8d
  42fb79:	mov    eax,r9d
  42fb7c:	mov    WORD PTR [rbp-0x34],ax
  42fb80:	mov    edx,DWORD PTR [rbp-0x24]
  42fb83:	mov    rax,QWORD PTR [rbp-0x20]
  42fb87:	mov    esi,edx
  42fb89:	mov    rdi,rax
  42fb8c:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  42fb91:	mov    QWORD PTR [rbp-0x8],rax
  42fb95:	cmp    QWORD PTR [rbp-0x8],0x0
  42fb9a:	je     42fbc7 <flatcc_json_printer_uint16_enum_field@@Base+0x6d>
  42fb9c:	mov    rax,QWORD PTR [rbp-0x8]
  42fba0:	mov    rdi,rax
  42fba3:	call   42a98c <flatcc_json_parser_struct_as_root@@Base+0x177>
  42fba8:	mov    WORD PTR [rbp-0xa],ax
  42fbac:	movzx  eax,WORD PTR [rbp-0xa]
  42fbb0:	cmp    ax,WORD PTR [rbp-0x34]
  42fbb4:	jne    42fbdf <flatcc_json_printer_uint16_enum_field@@Base+0x85>
  42fbb6:	mov    rax,QWORD PTR [rbp-0x18]
  42fbba:	movzx  eax,BYTE PTR [rax+0x34]
  42fbbe:	test   al,al
  42fbc0:	je     42fbdf <flatcc_json_printer_uint16_enum_field@@Base+0x85>
  42fbc2:	jmp    42fc76 <flatcc_json_printer_uint16_enum_field@@Base+0x11c>
  42fbc7:	mov    rax,QWORD PTR [rbp-0x18]
  42fbcb:	movzx  eax,BYTE PTR [rax+0x35]
  42fbcf:	test   al,al
  42fbd1:	je     42fc75 <flatcc_json_printer_uint16_enum_field@@Base+0x11b>
  42fbd7:	movzx  eax,WORD PTR [rbp-0x34]
  42fbdb:	mov    WORD PTR [rbp-0xa],ax
  42fbdf:	mov    rax,QWORD PTR [rbp-0x20]
  42fbe3:	mov    eax,DWORD PTR [rax+0x18]
  42fbe6:	lea    ecx,[rax+0x1]
  42fbe9:	mov    rdx,QWORD PTR [rbp-0x20]
  42fbed:	mov    DWORD PTR [rdx+0x18],ecx
  42fbf0:	test   eax,eax
  42fbf2:	je     42fc0b <flatcc_json_printer_uint16_enum_field@@Base+0xb1>
  42fbf4:	mov    rax,QWORD PTR [rbp-0x18]
  42fbf8:	mov    rax,QWORD PTR [rax+0x28]
  42fbfc:	lea    rcx,[rax+0x1]
  42fc00:	mov    rdx,QWORD PTR [rbp-0x18]
  42fc04:	mov    QWORD PTR [rdx+0x28],rcx
  42fc08:	mov    BYTE PTR [rax],0x2c
  42fc0b:	mov    eax,DWORD PTR [rbp-0x28]
  42fc0e:	movsxd rdx,eax
  42fc11:	mov    rcx,QWORD PTR [rbp-0x30]
  42fc15:	mov    rax,QWORD PTR [rbp-0x18]
  42fc19:	mov    rsi,rcx
  42fc1c:	mov    rdi,rax
  42fc1f:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  42fc24:	mov    rax,QWORD PTR [rbp-0x18]
  42fc28:	movzx  eax,BYTE PTR [rax+0x33]
  42fc2c:	test   al,al
  42fc2e:	je     42fc60 <flatcc_json_printer_uint16_enum_field@@Base+0x106>
  42fc30:	mov    rax,QWORD PTR [rbp-0x18]
  42fc34:	mov    rdx,QWORD PTR [rax+0x28]
  42fc38:	movzx  eax,WORD PTR [rbp-0xa]
  42fc3c:	mov    rsi,rdx
  42fc3f:	mov    edi,eax
  42fc41:	call   42ae5f <flatcc_json_parser_struct_as_root@@Base+0x64a>
  42fc46:	mov    ecx,eax
  42fc48:	mov    rax,QWORD PTR [rbp-0x18]
  42fc4c:	mov    rdx,QWORD PTR [rax+0x28]
  42fc50:	movsxd rax,ecx
  42fc53:	add    rdx,rax
  42fc56:	mov    rax,QWORD PTR [rbp-0x18]
  42fc5a:	mov    QWORD PTR [rax+0x28],rdx
  42fc5e:	jmp    42fc76 <flatcc_json_printer_uint16_enum_field@@Base+0x11c>
  42fc60:	movzx  ecx,WORD PTR [rbp-0xa]
  42fc64:	mov    rdx,QWORD PTR [rbp-0x18]
  42fc68:	mov    rax,QWORD PTR [rbp+0x10]
  42fc6c:	mov    esi,ecx
  42fc6e:	mov    rdi,rdx
  42fc71:	call   rax
  42fc73:	jmp    42fc76 <flatcc_json_printer_uint16_enum_field@@Base+0x11c>
  42fc75:	nop
  42fc76:	leave  
  42fc77:	ret    

000000000042fc78 <flatcc_json_printer_uint32_enum_field@@Base>:
  42fc78:	endbr64 
  42fc7c:	push   rbp
  42fc7d:	mov    rbp,rsp
  42fc80:	sub    rsp,0x40
  42fc84:	mov    QWORD PTR [rbp-0x18],rdi
  42fc88:	mov    QWORD PTR [rbp-0x20],rsi
  42fc8c:	mov    DWORD PTR [rbp-0x24],edx
  42fc8f:	mov    QWORD PTR [rbp-0x30],rcx
  42fc93:	mov    DWORD PTR [rbp-0x28],r8d
  42fc97:	mov    DWORD PTR [rbp-0x34],r9d
  42fc9b:	mov    edx,DWORD PTR [rbp-0x24]
  42fc9e:	mov    rax,QWORD PTR [rbp-0x20]
  42fca2:	mov    esi,edx
  42fca4:	mov    rdi,rax
  42fca7:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  42fcac:	mov    QWORD PTR [rbp-0x8],rax
  42fcb0:	cmp    QWORD PTR [rbp-0x8],0x0
  42fcb5:	je     42fcdf <flatcc_json_printer_uint32_enum_field@@Base+0x67>
  42fcb7:	mov    rax,QWORD PTR [rbp-0x8]
  42fcbb:	mov    rdi,rax
  42fcbe:	call   42a9b7 <flatcc_json_parser_struct_as_root@@Base+0x1a2>
  42fcc3:	mov    DWORD PTR [rbp-0xc],eax
  42fcc6:	mov    eax,DWORD PTR [rbp-0xc]
  42fcc9:	cmp    eax,DWORD PTR [rbp-0x34]
  42fccc:	jne    42fcf5 <flatcc_json_printer_uint32_enum_field@@Base+0x7d>
  42fcce:	mov    rax,QWORD PTR [rbp-0x18]
  42fcd2:	movzx  eax,BYTE PTR [rax+0x34]
  42fcd6:	test   al,al
  42fcd8:	je     42fcf5 <flatcc_json_printer_uint32_enum_field@@Base+0x7d>
  42fcda:	jmp    42fd8a <flatcc_json_printer_uint32_enum_field@@Base+0x112>
  42fcdf:	mov    rax,QWORD PTR [rbp-0x18]
  42fce3:	movzx  eax,BYTE PTR [rax+0x35]
  42fce7:	test   al,al
  42fce9:	je     42fd89 <flatcc_json_printer_uint32_enum_field@@Base+0x111>
  42fcef:	mov    eax,DWORD PTR [rbp-0x34]
  42fcf2:	mov    DWORD PTR [rbp-0xc],eax
  42fcf5:	mov    rax,QWORD PTR [rbp-0x20]
  42fcf9:	mov    eax,DWORD PTR [rax+0x18]
  42fcfc:	lea    ecx,[rax+0x1]
  42fcff:	mov    rdx,QWORD PTR [rbp-0x20]
  42fd03:	mov    DWORD PTR [rdx+0x18],ecx
  42fd06:	test   eax,eax
  42fd08:	je     42fd21 <flatcc_json_printer_uint32_enum_field@@Base+0xa9>
  42fd0a:	mov    rax,QWORD PTR [rbp-0x18]
  42fd0e:	mov    rax,QWORD PTR [rax+0x28]
  42fd12:	lea    rcx,[rax+0x1]
  42fd16:	mov    rdx,QWORD PTR [rbp-0x18]
  42fd1a:	mov    QWORD PTR [rdx+0x28],rcx
  42fd1e:	mov    BYTE PTR [rax],0x2c
  42fd21:	mov    eax,DWORD PTR [rbp-0x28]
  42fd24:	movsxd rdx,eax
  42fd27:	mov    rcx,QWORD PTR [rbp-0x30]
  42fd2b:	mov    rax,QWORD PTR [rbp-0x18]
  42fd2f:	mov    rsi,rcx
  42fd32:	mov    rdi,rax
  42fd35:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  42fd3a:	mov    rax,QWORD PTR [rbp-0x18]
  42fd3e:	movzx  eax,BYTE PTR [rax+0x33]
  42fd42:	test   al,al
  42fd44:	je     42fd75 <flatcc_json_printer_uint32_enum_field@@Base+0xfd>
  42fd46:	mov    rax,QWORD PTR [rbp-0x18]
  42fd4a:	mov    rdx,QWORD PTR [rax+0x28]
  42fd4e:	mov    eax,DWORD PTR [rbp-0xc]
  42fd51:	mov    rsi,rdx
  42fd54:	mov    edi,eax
  42fd56:	call   42b104 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  42fd5b:	mov    ecx,eax
  42fd5d:	mov    rax,QWORD PTR [rbp-0x18]
  42fd61:	mov    rdx,QWORD PTR [rax+0x28]
  42fd65:	movsxd rax,ecx
  42fd68:	add    rdx,rax
  42fd6b:	mov    rax,QWORD PTR [rbp-0x18]
  42fd6f:	mov    QWORD PTR [rax+0x28],rdx
  42fd73:	jmp    42fd8a <flatcc_json_printer_uint32_enum_field@@Base+0x112>
  42fd75:	mov    ecx,DWORD PTR [rbp-0xc]
  42fd78:	mov    rdx,QWORD PTR [rbp-0x18]
  42fd7c:	mov    rax,QWORD PTR [rbp+0x10]
  42fd80:	mov    esi,ecx
  42fd82:	mov    rdi,rdx
  42fd85:	call   rax
  42fd87:	jmp    42fd8a <flatcc_json_printer_uint32_enum_field@@Base+0x112>
  42fd89:	nop
  42fd8a:	leave  
  42fd8b:	ret    

000000000042fd8c <flatcc_json_printer_uint64_enum_field@@Base>:
  42fd8c:	endbr64 
  42fd90:	push   rbp
  42fd91:	mov    rbp,rsp
  42fd94:	sub    rsp,0x40
  42fd98:	mov    QWORD PTR [rbp-0x18],rdi
  42fd9c:	mov    QWORD PTR [rbp-0x20],rsi
  42fda0:	mov    DWORD PTR [rbp-0x24],edx
  42fda3:	mov    QWORD PTR [rbp-0x30],rcx
  42fda7:	mov    DWORD PTR [rbp-0x28],r8d
  42fdab:	mov    QWORD PTR [rbp-0x38],r9
  42fdaf:	mov    edx,DWORD PTR [rbp-0x24]
  42fdb2:	mov    rax,QWORD PTR [rbp-0x20]
  42fdb6:	mov    esi,edx
  42fdb8:	mov    rdi,rax
  42fdbb:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  42fdc0:	mov    QWORD PTR [rbp-0x8],rax
  42fdc4:	cmp    QWORD PTR [rbp-0x8],0x0
  42fdc9:	je     42fdf6 <flatcc_json_printer_uint64_enum_field@@Base+0x6a>
  42fdcb:	mov    rax,QWORD PTR [rbp-0x8]
  42fdcf:	mov    rdi,rax
  42fdd2:	call   42a9e0 <flatcc_json_parser_struct_as_root@@Base+0x1cb>
  42fdd7:	mov    QWORD PTR [rbp-0x10],rax
  42fddb:	mov    rax,QWORD PTR [rbp-0x10]
  42fddf:	cmp    rax,QWORD PTR [rbp-0x38]
  42fde3:	jne    42fe0e <flatcc_json_printer_uint64_enum_field@@Base+0x82>
  42fde5:	mov    rax,QWORD PTR [rbp-0x18]
  42fde9:	movzx  eax,BYTE PTR [rax+0x34]
  42fded:	test   al,al
  42fdef:	je     42fe0e <flatcc_json_printer_uint64_enum_field@@Base+0x82>
  42fdf1:	jmp    42fea7 <flatcc_json_printer_uint64_enum_field@@Base+0x11b>
  42fdf6:	mov    rax,QWORD PTR [rbp-0x18]
  42fdfa:	movzx  eax,BYTE PTR [rax+0x35]
  42fdfe:	test   al,al
  42fe00:	je     42fea6 <flatcc_json_printer_uint64_enum_field@@Base+0x11a>
  42fe06:	mov    rax,QWORD PTR [rbp-0x38]
  42fe0a:	mov    QWORD PTR [rbp-0x10],rax
  42fe0e:	mov    rax,QWORD PTR [rbp-0x20]
  42fe12:	mov    eax,DWORD PTR [rax+0x18]
  42fe15:	lea    ecx,[rax+0x1]
  42fe18:	mov    rdx,QWORD PTR [rbp-0x20]
  42fe1c:	mov    DWORD PTR [rdx+0x18],ecx
  42fe1f:	test   eax,eax
  42fe21:	je     42fe3a <flatcc_json_printer_uint64_enum_field@@Base+0xae>
  42fe23:	mov    rax,QWORD PTR [rbp-0x18]
  42fe27:	mov    rax,QWORD PTR [rax+0x28]
  42fe2b:	lea    rcx,[rax+0x1]
  42fe2f:	mov    rdx,QWORD PTR [rbp-0x18]
  42fe33:	mov    QWORD PTR [rdx+0x28],rcx
  42fe37:	mov    BYTE PTR [rax],0x2c
  42fe3a:	mov    eax,DWORD PTR [rbp-0x28]
  42fe3d:	movsxd rdx,eax
  42fe40:	mov    rcx,QWORD PTR [rbp-0x30]
  42fe44:	mov    rax,QWORD PTR [rbp-0x18]
  42fe48:	mov    rsi,rcx
  42fe4b:	mov    rdi,rax
  42fe4e:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  42fe53:	mov    rax,QWORD PTR [rbp-0x18]
  42fe57:	movzx  eax,BYTE PTR [rax+0x33]
  42fe5b:	test   al,al
  42fe5d:	je     42fe90 <flatcc_json_printer_uint64_enum_field@@Base+0x104>
  42fe5f:	mov    rax,QWORD PTR [rbp-0x18]
  42fe63:	mov    rdx,QWORD PTR [rax+0x28]
  42fe67:	mov    rax,QWORD PTR [rbp-0x10]
  42fe6b:	mov    rsi,rdx
  42fe6e:	mov    rdi,rax
  42fe71:	call   42b519 <flatcc_json_parser_struct_as_root@@Base+0xd04>
  42fe76:	mov    ecx,eax
  42fe78:	mov    rax,QWORD PTR [rbp-0x18]
  42fe7c:	mov    rdx,QWORD PTR [rax+0x28]
  42fe80:	movsxd rax,ecx
  42fe83:	add    rdx,rax
  42fe86:	mov    rax,QWORD PTR [rbp-0x18]
  42fe8a:	mov    QWORD PTR [rax+0x28],rdx
  42fe8e:	jmp    42fea7 <flatcc_json_printer_uint64_enum_field@@Base+0x11b>
  42fe90:	mov    rcx,QWORD PTR [rbp-0x10]
  42fe94:	mov    rdx,QWORD PTR [rbp-0x18]
  42fe98:	mov    rax,QWORD PTR [rbp+0x10]
  42fe9c:	mov    rsi,rcx
  42fe9f:	mov    rdi,rdx
  42fea2:	call   rax
  42fea4:	jmp    42fea7 <flatcc_json_printer_uint64_enum_field@@Base+0x11b>
  42fea6:	nop
  42fea7:	leave  
  42fea8:	ret    

000000000042fea9 <flatcc_json_printer_int8_enum_field@@Base>:
  42fea9:	endbr64 
  42fead:	push   rbp
  42feae:	mov    rbp,rsp
  42feb1:	sub    rsp,0x40
  42feb5:	mov    QWORD PTR [rbp-0x18],rdi
  42feb9:	mov    QWORD PTR [rbp-0x20],rsi
  42febd:	mov    DWORD PTR [rbp-0x24],edx
  42fec0:	mov    QWORD PTR [rbp-0x30],rcx
  42fec4:	mov    DWORD PTR [rbp-0x28],r8d
  42fec8:	mov    eax,r9d
  42fecb:	mov    BYTE PTR [rbp-0x34],al
  42fece:	mov    edx,DWORD PTR [rbp-0x24]
  42fed1:	mov    rax,QWORD PTR [rbp-0x20]
  42fed5:	mov    esi,edx
  42fed7:	mov    rdi,rax
  42feda:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  42fedf:	mov    QWORD PTR [rbp-0x8],rax
  42fee3:	cmp    QWORD PTR [rbp-0x8],0x0
  42fee8:	je     42ff13 <flatcc_json_printer_int8_enum_field@@Base+0x6a>
  42feea:	mov    rax,QWORD PTR [rbp-0x8]
  42feee:	mov    rdi,rax
  42fef1:	call   42aa0c <flatcc_json_parser_struct_as_root@@Base+0x1f7>
  42fef6:	mov    BYTE PTR [rbp-0x9],al
  42fef9:	movzx  eax,BYTE PTR [rbp-0x9]
  42fefd:	cmp    al,BYTE PTR [rbp-0x34]
  42ff00:	jne    42ff2a <flatcc_json_printer_int8_enum_field@@Base+0x81>
  42ff02:	mov    rax,QWORD PTR [rbp-0x18]
  42ff06:	movzx  eax,BYTE PTR [rax+0x34]
  42ff0a:	test   al,al
  42ff0c:	je     42ff2a <flatcc_json_printer_int8_enum_field@@Base+0x81>
  42ff0e:	jmp    42ffc1 <flatcc_json_printer_int8_enum_field@@Base+0x118>
  42ff13:	mov    rax,QWORD PTR [rbp-0x18]
  42ff17:	movzx  eax,BYTE PTR [rax+0x35]
  42ff1b:	test   al,al
  42ff1d:	je     42ffc0 <flatcc_json_printer_int8_enum_field@@Base+0x117>
  42ff23:	movzx  eax,BYTE PTR [rbp-0x34]
  42ff27:	mov    BYTE PTR [rbp-0x9],al
  42ff2a:	mov    rax,QWORD PTR [rbp-0x20]
  42ff2e:	mov    eax,DWORD PTR [rax+0x18]
  42ff31:	lea    ecx,[rax+0x1]
  42ff34:	mov    rdx,QWORD PTR [rbp-0x20]
  42ff38:	mov    DWORD PTR [rdx+0x18],ecx
  42ff3b:	test   eax,eax
  42ff3d:	je     42ff56 <flatcc_json_printer_int8_enum_field@@Base+0xad>
  42ff3f:	mov    rax,QWORD PTR [rbp-0x18]
  42ff43:	mov    rax,QWORD PTR [rax+0x28]
  42ff47:	lea    rcx,[rax+0x1]
  42ff4b:	mov    rdx,QWORD PTR [rbp-0x18]
  42ff4f:	mov    QWORD PTR [rdx+0x28],rcx
  42ff53:	mov    BYTE PTR [rax],0x2c
  42ff56:	mov    eax,DWORD PTR [rbp-0x28]
  42ff59:	movsxd rdx,eax
  42ff5c:	mov    rcx,QWORD PTR [rbp-0x30]
  42ff60:	mov    rax,QWORD PTR [rbp-0x18]
  42ff64:	mov    rsi,rcx
  42ff67:	mov    rdi,rax
  42ff6a:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  42ff6f:	mov    rax,QWORD PTR [rbp-0x18]
  42ff73:	movzx  eax,BYTE PTR [rax+0x33]
  42ff77:	test   al,al
  42ff79:	je     42ffab <flatcc_json_printer_int8_enum_field@@Base+0x102>
  42ff7b:	mov    rax,QWORD PTR [rbp-0x18]
  42ff7f:	mov    rdx,QWORD PTR [rax+0x28]
  42ff83:	movsx  eax,BYTE PTR [rbp-0x9]
  42ff87:	mov    rsi,rdx
  42ff8a:	mov    edi,eax
  42ff8c:	call   42bddc <flatcc_json_parser_struct_as_root@@Base+0x15c7>
  42ff91:	mov    ecx,eax
  42ff93:	mov    rax,QWORD PTR [rbp-0x18]
  42ff97:	mov    rdx,QWORD PTR [rax+0x28]
  42ff9b:	movsxd rax,ecx
  42ff9e:	add    rdx,rax
  42ffa1:	mov    rax,QWORD PTR [rbp-0x18]
  42ffa5:	mov    QWORD PTR [rax+0x28],rdx
  42ffa9:	jmp    42ffc1 <flatcc_json_printer_int8_enum_field@@Base+0x118>
  42ffab:	movsx  ecx,BYTE PTR [rbp-0x9]
  42ffaf:	mov    rdx,QWORD PTR [rbp-0x18]
  42ffb3:	mov    rax,QWORD PTR [rbp+0x10]
  42ffb7:	mov    esi,ecx
  42ffb9:	mov    rdi,rdx
  42ffbc:	call   rax
  42ffbe:	jmp    42ffc1 <flatcc_json_printer_int8_enum_field@@Base+0x118>
  42ffc0:	nop
  42ffc1:	leave  
  42ffc2:	ret    

000000000042ffc3 <flatcc_json_printer_int16_enum_field@@Base>:
  42ffc3:	endbr64 
  42ffc7:	push   rbp
  42ffc8:	mov    rbp,rsp
  42ffcb:	sub    rsp,0x40
  42ffcf:	mov    QWORD PTR [rbp-0x18],rdi
  42ffd3:	mov    QWORD PTR [rbp-0x20],rsi
  42ffd7:	mov    DWORD PTR [rbp-0x24],edx
  42ffda:	mov    QWORD PTR [rbp-0x30],rcx
  42ffde:	mov    DWORD PTR [rbp-0x28],r8d
  42ffe2:	mov    eax,r9d
  42ffe5:	mov    WORD PTR [rbp-0x34],ax
  42ffe9:	mov    edx,DWORD PTR [rbp-0x24]
  42ffec:	mov    rax,QWORD PTR [rbp-0x20]
  42fff0:	mov    esi,edx
  42fff2:	mov    rdi,rax
  42fff5:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  42fffa:	mov    QWORD PTR [rbp-0x8],rax
  42fffe:	cmp    QWORD PTR [rbp-0x8],0x0
  430003:	je     430030 <flatcc_json_printer_int16_enum_field@@Base+0x6d>
  430005:	mov    rax,QWORD PTR [rbp-0x8]
  430009:	mov    rdi,rax
  43000c:	call   42aa3b <flatcc_json_parser_struct_as_root@@Base+0x226>
  430011:	mov    WORD PTR [rbp-0xa],ax
  430015:	movzx  eax,WORD PTR [rbp-0xa]
  430019:	cmp    ax,WORD PTR [rbp-0x34]
  43001d:	jne    430048 <flatcc_json_printer_int16_enum_field@@Base+0x85>
  43001f:	mov    rax,QWORD PTR [rbp-0x18]
  430023:	movzx  eax,BYTE PTR [rax+0x34]
  430027:	test   al,al
  430029:	je     430048 <flatcc_json_printer_int16_enum_field@@Base+0x85>
  43002b:	jmp    4300df <flatcc_json_printer_int16_enum_field@@Base+0x11c>
  430030:	mov    rax,QWORD PTR [rbp-0x18]
  430034:	movzx  eax,BYTE PTR [rax+0x35]
  430038:	test   al,al
  43003a:	je     4300de <flatcc_json_printer_int16_enum_field@@Base+0x11b>
  430040:	movzx  eax,WORD PTR [rbp-0x34]
  430044:	mov    WORD PTR [rbp-0xa],ax
  430048:	mov    rax,QWORD PTR [rbp-0x20]
  43004c:	mov    eax,DWORD PTR [rax+0x18]
  43004f:	lea    ecx,[rax+0x1]
  430052:	mov    rdx,QWORD PTR [rbp-0x20]
  430056:	mov    DWORD PTR [rdx+0x18],ecx
  430059:	test   eax,eax
  43005b:	je     430074 <flatcc_json_printer_int16_enum_field@@Base+0xb1>
  43005d:	mov    rax,QWORD PTR [rbp-0x18]
  430061:	mov    rax,QWORD PTR [rax+0x28]
  430065:	lea    rcx,[rax+0x1]
  430069:	mov    rdx,QWORD PTR [rbp-0x18]
  43006d:	mov    QWORD PTR [rdx+0x28],rcx
  430071:	mov    BYTE PTR [rax],0x2c
  430074:	mov    eax,DWORD PTR [rbp-0x28]
  430077:	movsxd rdx,eax
  43007a:	mov    rcx,QWORD PTR [rbp-0x30]
  43007e:	mov    rax,QWORD PTR [rbp-0x18]
  430082:	mov    rsi,rcx
  430085:	mov    rdi,rax
  430088:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  43008d:	mov    rax,QWORD PTR [rbp-0x18]
  430091:	movzx  eax,BYTE PTR [rax+0x33]
  430095:	test   al,al
  430097:	je     4300c9 <flatcc_json_printer_int16_enum_field@@Base+0x106>
  430099:	mov    rax,QWORD PTR [rbp-0x18]
  43009d:	mov    rdx,QWORD PTR [rax+0x28]
  4300a1:	movsx  eax,WORD PTR [rbp-0xa]
  4300a5:	mov    rsi,rdx
  4300a8:	mov    edi,eax
  4300aa:	call   42be3a <flatcc_json_parser_struct_as_root@@Base+0x1625>
  4300af:	mov    ecx,eax
  4300b1:	mov    rax,QWORD PTR [rbp-0x18]
  4300b5:	mov    rdx,QWORD PTR [rax+0x28]
  4300b9:	movsxd rax,ecx
  4300bc:	add    rdx,rax
  4300bf:	mov    rax,QWORD PTR [rbp-0x18]
  4300c3:	mov    QWORD PTR [rax+0x28],rdx
  4300c7:	jmp    4300df <flatcc_json_printer_int16_enum_field@@Base+0x11c>
  4300c9:	movsx  ecx,WORD PTR [rbp-0xa]
  4300cd:	mov    rdx,QWORD PTR [rbp-0x18]
  4300d1:	mov    rax,QWORD PTR [rbp+0x10]
  4300d5:	mov    esi,ecx
  4300d7:	mov    rdi,rdx
  4300da:	call   rax
  4300dc:	jmp    4300df <flatcc_json_printer_int16_enum_field@@Base+0x11c>
  4300de:	nop
  4300df:	leave  
  4300e0:	ret    

00000000004300e1 <flatcc_json_printer_int32_enum_field@@Base>:
  4300e1:	endbr64 
  4300e5:	push   rbp
  4300e6:	mov    rbp,rsp
  4300e9:	sub    rsp,0x40
  4300ed:	mov    QWORD PTR [rbp-0x18],rdi
  4300f1:	mov    QWORD PTR [rbp-0x20],rsi
  4300f5:	mov    DWORD PTR [rbp-0x24],edx
  4300f8:	mov    QWORD PTR [rbp-0x30],rcx
  4300fc:	mov    DWORD PTR [rbp-0x28],r8d
  430100:	mov    DWORD PTR [rbp-0x34],r9d
  430104:	mov    edx,DWORD PTR [rbp-0x24]
  430107:	mov    rax,QWORD PTR [rbp-0x20]
  43010b:	mov    esi,edx
  43010d:	mov    rdi,rax
  430110:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  430115:	mov    QWORD PTR [rbp-0x8],rax
  430119:	cmp    QWORD PTR [rbp-0x8],0x0
  43011e:	je     430148 <flatcc_json_printer_int32_enum_field@@Base+0x67>
  430120:	mov    rax,QWORD PTR [rbp-0x8]
  430124:	mov    rdi,rax
  430127:	call   42aa64 <flatcc_json_parser_struct_as_root@@Base+0x24f>
  43012c:	mov    DWORD PTR [rbp-0xc],eax
  43012f:	mov    eax,DWORD PTR [rbp-0xc]
  430132:	cmp    eax,DWORD PTR [rbp-0x34]
  430135:	jne    43015e <flatcc_json_printer_int32_enum_field@@Base+0x7d>
  430137:	mov    rax,QWORD PTR [rbp-0x18]
  43013b:	movzx  eax,BYTE PTR [rax+0x34]
  43013f:	test   al,al
  430141:	je     43015e <flatcc_json_printer_int32_enum_field@@Base+0x7d>
  430143:	jmp    4301f3 <flatcc_json_printer_int32_enum_field@@Base+0x112>
  430148:	mov    rax,QWORD PTR [rbp-0x18]
  43014c:	movzx  eax,BYTE PTR [rax+0x35]
  430150:	test   al,al
  430152:	je     4301f2 <flatcc_json_printer_int32_enum_field@@Base+0x111>
  430158:	mov    eax,DWORD PTR [rbp-0x34]
  43015b:	mov    DWORD PTR [rbp-0xc],eax
  43015e:	mov    rax,QWORD PTR [rbp-0x20]
  430162:	mov    eax,DWORD PTR [rax+0x18]
  430165:	lea    ecx,[rax+0x1]
  430168:	mov    rdx,QWORD PTR [rbp-0x20]
  43016c:	mov    DWORD PTR [rdx+0x18],ecx
  43016f:	test   eax,eax
  430171:	je     43018a <flatcc_json_printer_int32_enum_field@@Base+0xa9>
  430173:	mov    rax,QWORD PTR [rbp-0x18]
  430177:	mov    rax,QWORD PTR [rax+0x28]
  43017b:	lea    rcx,[rax+0x1]
  43017f:	mov    rdx,QWORD PTR [rbp-0x18]
  430183:	mov    QWORD PTR [rdx+0x28],rcx
  430187:	mov    BYTE PTR [rax],0x2c
  43018a:	mov    eax,DWORD PTR [rbp-0x28]
  43018d:	movsxd rdx,eax
  430190:	mov    rcx,QWORD PTR [rbp-0x30]
  430194:	mov    rax,QWORD PTR [rbp-0x18]
  430198:	mov    rsi,rcx
  43019b:	mov    rdi,rax
  43019e:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  4301a3:	mov    rax,QWORD PTR [rbp-0x18]
  4301a7:	movzx  eax,BYTE PTR [rax+0x33]
  4301ab:	test   al,al
  4301ad:	je     4301de <flatcc_json_printer_int32_enum_field@@Base+0xfd>
  4301af:	mov    rax,QWORD PTR [rbp-0x18]
  4301b3:	mov    rdx,QWORD PTR [rax+0x28]
  4301b7:	mov    eax,DWORD PTR [rbp-0xc]
  4301ba:	mov    rsi,rdx
  4301bd:	mov    edi,eax
  4301bf:	call   42be9b <flatcc_json_parser_struct_as_root@@Base+0x1686>
  4301c4:	mov    ecx,eax
  4301c6:	mov    rax,QWORD PTR [rbp-0x18]
  4301ca:	mov    rdx,QWORD PTR [rax+0x28]
  4301ce:	movsxd rax,ecx
  4301d1:	add    rdx,rax
  4301d4:	mov    rax,QWORD PTR [rbp-0x18]
  4301d8:	mov    QWORD PTR [rax+0x28],rdx
  4301dc:	jmp    4301f3 <flatcc_json_printer_int32_enum_field@@Base+0x112>
  4301de:	mov    ecx,DWORD PTR [rbp-0xc]
  4301e1:	mov    rdx,QWORD PTR [rbp-0x18]
  4301e5:	mov    rax,QWORD PTR [rbp+0x10]
  4301e9:	mov    esi,ecx
  4301eb:	mov    rdi,rdx
  4301ee:	call   rax
  4301f0:	jmp    4301f3 <flatcc_json_printer_int32_enum_field@@Base+0x112>
  4301f2:	nop
  4301f3:	leave  
  4301f4:	ret    

00000000004301f5 <flatcc_json_printer_int64_enum_field@@Base>:
  4301f5:	endbr64 
  4301f9:	push   rbp
  4301fa:	mov    rbp,rsp
  4301fd:	sub    rsp,0x40
  430201:	mov    QWORD PTR [rbp-0x18],rdi
  430205:	mov    QWORD PTR [rbp-0x20],rsi
  430209:	mov    DWORD PTR [rbp-0x24],edx
  43020c:	mov    QWORD PTR [rbp-0x30],rcx
  430210:	mov    DWORD PTR [rbp-0x28],r8d
  430214:	mov    QWORD PTR [rbp-0x38],r9
  430218:	mov    edx,DWORD PTR [rbp-0x24]
  43021b:	mov    rax,QWORD PTR [rbp-0x20]
  43021f:	mov    esi,edx
  430221:	mov    rdi,rax
  430224:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  430229:	mov    QWORD PTR [rbp-0x8],rax
  43022d:	cmp    QWORD PTR [rbp-0x8],0x0
  430232:	je     43025f <flatcc_json_printer_int64_enum_field@@Base+0x6a>
  430234:	mov    rax,QWORD PTR [rbp-0x8]
  430238:	mov    rdi,rax
  43023b:	call   42aa8d <flatcc_json_parser_struct_as_root@@Base+0x278>
  430240:	mov    QWORD PTR [rbp-0x10],rax
  430244:	mov    rax,QWORD PTR [rbp-0x10]
  430248:	cmp    rax,QWORD PTR [rbp-0x38]
  43024c:	jne    430277 <flatcc_json_printer_int64_enum_field@@Base+0x82>
  43024e:	mov    rax,QWORD PTR [rbp-0x18]
  430252:	movzx  eax,BYTE PTR [rax+0x34]
  430256:	test   al,al
  430258:	je     430277 <flatcc_json_printer_int64_enum_field@@Base+0x82>
  43025a:	jmp    430310 <flatcc_json_printer_int64_enum_field@@Base+0x11b>
  43025f:	mov    rax,QWORD PTR [rbp-0x18]
  430263:	movzx  eax,BYTE PTR [rax+0x35]
  430267:	test   al,al
  430269:	je     43030f <flatcc_json_printer_int64_enum_field@@Base+0x11a>
  43026f:	mov    rax,QWORD PTR [rbp-0x38]
  430273:	mov    QWORD PTR [rbp-0x10],rax
  430277:	mov    rax,QWORD PTR [rbp-0x20]
  43027b:	mov    eax,DWORD PTR [rax+0x18]
  43027e:	lea    ecx,[rax+0x1]
  430281:	mov    rdx,QWORD PTR [rbp-0x20]
  430285:	mov    DWORD PTR [rdx+0x18],ecx
  430288:	test   eax,eax
  43028a:	je     4302a3 <flatcc_json_printer_int64_enum_field@@Base+0xae>
  43028c:	mov    rax,QWORD PTR [rbp-0x18]
  430290:	mov    rax,QWORD PTR [rax+0x28]
  430294:	lea    rcx,[rax+0x1]
  430298:	mov    rdx,QWORD PTR [rbp-0x18]
  43029c:	mov    QWORD PTR [rdx+0x28],rcx
  4302a0:	mov    BYTE PTR [rax],0x2c
  4302a3:	mov    eax,DWORD PTR [rbp-0x28]
  4302a6:	movsxd rdx,eax
  4302a9:	mov    rcx,QWORD PTR [rbp-0x30]
  4302ad:	mov    rax,QWORD PTR [rbp-0x18]
  4302b1:	mov    rsi,rcx
  4302b4:	mov    rdi,rax
  4302b7:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  4302bc:	mov    rax,QWORD PTR [rbp-0x18]
  4302c0:	movzx  eax,BYTE PTR [rax+0x33]
  4302c4:	test   al,al
  4302c6:	je     4302f9 <flatcc_json_printer_int64_enum_field@@Base+0x104>
  4302c8:	mov    rax,QWORD PTR [rbp-0x18]
  4302cc:	mov    rdx,QWORD PTR [rax+0x28]
  4302d0:	mov    rax,QWORD PTR [rbp-0x10]
  4302d4:	mov    rsi,rdx
  4302d7:	mov    rdi,rax
  4302da:	call   42beec <flatcc_json_parser_struct_as_root@@Base+0x16d7>
  4302df:	mov    ecx,eax
  4302e1:	mov    rax,QWORD PTR [rbp-0x18]
  4302e5:	mov    rdx,QWORD PTR [rax+0x28]
  4302e9:	movsxd rax,ecx
  4302ec:	add    rdx,rax
  4302ef:	mov    rax,QWORD PTR [rbp-0x18]
  4302f3:	mov    QWORD PTR [rax+0x28],rdx
  4302f7:	jmp    430310 <flatcc_json_printer_int64_enum_field@@Base+0x11b>
  4302f9:	mov    rcx,QWORD PTR [rbp-0x10]
  4302fd:	mov    rdx,QWORD PTR [rbp-0x18]
  430301:	mov    rax,QWORD PTR [rbp+0x10]
  430305:	mov    rsi,rcx
  430308:	mov    rdi,rdx
  43030b:	call   rax
  43030d:	jmp    430310 <flatcc_json_printer_int64_enum_field@@Base+0x11b>
  43030f:	nop
  430310:	leave  
  430311:	ret    

0000000000430312 <flatcc_json_printer_bool_enum_field@@Base>:
  430312:	endbr64 
  430316:	push   rbp
  430317:	mov    rbp,rsp
  43031a:	sub    rsp,0x40
  43031e:	mov    QWORD PTR [rbp-0x18],rdi
  430322:	mov    QWORD PTR [rbp-0x20],rsi
  430326:	mov    DWORD PTR [rbp-0x24],edx
  430329:	mov    QWORD PTR [rbp-0x30],rcx
  43032d:	mov    DWORD PTR [rbp-0x28],r8d
  430331:	mov    eax,r9d
  430334:	mov    BYTE PTR [rbp-0x34],al
  430337:	mov    edx,DWORD PTR [rbp-0x24]
  43033a:	mov    rax,QWORD PTR [rbp-0x20]
  43033e:	mov    esi,edx
  430340:	mov    rdi,rax
  430343:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  430348:	mov    QWORD PTR [rbp-0x8],rax
  43034c:	cmp    QWORD PTR [rbp-0x8],0x0
  430351:	je     43037c <flatcc_json_printer_bool_enum_field@@Base+0x6a>
  430353:	mov    rax,QWORD PTR [rbp-0x8]
  430357:	mov    rdi,rax
  43035a:	call   42ab4b <flatcc_json_parser_struct_as_root@@Base+0x336>
  43035f:	mov    BYTE PTR [rbp-0x9],al
  430362:	movzx  eax,BYTE PTR [rbp-0x9]
  430366:	cmp    al,BYTE PTR [rbp-0x34]
  430369:	jne    430393 <flatcc_json_printer_bool_enum_field@@Base+0x81>
  43036b:	mov    rax,QWORD PTR [rbp-0x18]
  43036f:	movzx  eax,BYTE PTR [rax+0x34]
  430373:	test   al,al
  430375:	je     430393 <flatcc_json_printer_bool_enum_field@@Base+0x81>
  430377:	jmp    43042a <flatcc_json_printer_bool_enum_field@@Base+0x118>
  43037c:	mov    rax,QWORD PTR [rbp-0x18]
  430380:	movzx  eax,BYTE PTR [rax+0x35]
  430384:	test   al,al
  430386:	je     430429 <flatcc_json_printer_bool_enum_field@@Base+0x117>
  43038c:	movzx  eax,BYTE PTR [rbp-0x34]
  430390:	mov    BYTE PTR [rbp-0x9],al
  430393:	mov    rax,QWORD PTR [rbp-0x20]
  430397:	mov    eax,DWORD PTR [rax+0x18]
  43039a:	lea    ecx,[rax+0x1]
  43039d:	mov    rdx,QWORD PTR [rbp-0x20]
  4303a1:	mov    DWORD PTR [rdx+0x18],ecx
  4303a4:	test   eax,eax
  4303a6:	je     4303bf <flatcc_json_printer_bool_enum_field@@Base+0xad>
  4303a8:	mov    rax,QWORD PTR [rbp-0x18]
  4303ac:	mov    rax,QWORD PTR [rax+0x28]
  4303b0:	lea    rcx,[rax+0x1]
  4303b4:	mov    rdx,QWORD PTR [rbp-0x18]
  4303b8:	mov    QWORD PTR [rdx+0x28],rcx
  4303bc:	mov    BYTE PTR [rax],0x2c
  4303bf:	mov    eax,DWORD PTR [rbp-0x28]
  4303c2:	movsxd rdx,eax
  4303c5:	mov    rcx,QWORD PTR [rbp-0x30]
  4303c9:	mov    rax,QWORD PTR [rbp-0x18]
  4303cd:	mov    rsi,rcx
  4303d0:	mov    rdi,rax
  4303d3:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  4303d8:	mov    rax,QWORD PTR [rbp-0x18]
  4303dc:	movzx  eax,BYTE PTR [rax+0x33]
  4303e0:	test   al,al
  4303e2:	je     430414 <flatcc_json_printer_bool_enum_field@@Base+0x102>
  4303e4:	mov    rax,QWORD PTR [rbp-0x18]
  4303e8:	mov    rdx,QWORD PTR [rax+0x28]
  4303ec:	movzx  eax,BYTE PTR [rbp-0x9]
  4303f0:	mov    rsi,rdx
  4303f3:	mov    edi,eax
  4303f5:	call   42acb6 <flatcc_json_parser_struct_as_root@@Base+0x4a1>
  4303fa:	mov    ecx,eax
  4303fc:	mov    rax,QWORD PTR [rbp-0x18]
  430400:	mov    rdx,QWORD PTR [rax+0x28]
  430404:	movsxd rax,ecx
  430407:	add    rdx,rax
  43040a:	mov    rax,QWORD PTR [rbp-0x18]
  43040e:	mov    QWORD PTR [rax+0x28],rdx
  430412:	jmp    43042a <flatcc_json_printer_bool_enum_field@@Base+0x118>
  430414:	movzx  ecx,BYTE PTR [rbp-0x9]
  430418:	mov    rdx,QWORD PTR [rbp-0x18]
  43041c:	mov    rax,QWORD PTR [rbp+0x10]
  430420:	mov    esi,ecx
  430422:	mov    rdi,rdx
  430425:	call   rax
  430427:	jmp    43042a <flatcc_json_printer_bool_enum_field@@Base+0x118>
  430429:	nop
  43042a:	leave  
  43042b:	ret    

000000000043042c <flatcc_json_printer_uint8_struct_field@@Base>:
  43042c:	endbr64 
  430430:	push   rbp
  430431:	mov    rbp,rsp
  430434:	sub    rsp,0x40
  430438:	mov    QWORD PTR [rbp-0x18],rdi
  43043c:	mov    DWORD PTR [rbp-0x1c],esi
  43043f:	mov    QWORD PTR [rbp-0x28],rdx
  430443:	mov    QWORD PTR [rbp-0x30],rcx
  430447:	mov    QWORD PTR [rbp-0x38],r8
  43044b:	mov    DWORD PTR [rbp-0x20],r9d
  43044f:	mov    rdx,QWORD PTR [rbp-0x28]
  430453:	mov    rax,QWORD PTR [rbp-0x30]
  430457:	add    rax,rdx
  43045a:	mov    rdi,rax
  43045d:	call   42a95d <flatcc_json_parser_struct_as_root@@Base+0x148>
  430462:	mov    BYTE PTR [rbp-0x1],al
  430465:	cmp    DWORD PTR [rbp-0x1c],0x0
  430469:	je     430482 <flatcc_json_printer_uint8_struct_field@@Base+0x56>
  43046b:	mov    rax,QWORD PTR [rbp-0x18]
  43046f:	mov    rax,QWORD PTR [rax+0x28]
  430473:	lea    rcx,[rax+0x1]
  430477:	mov    rdx,QWORD PTR [rbp-0x18]
  43047b:	mov    QWORD PTR [rdx+0x28],rcx
  43047f:	mov    BYTE PTR [rax],0x2c
  430482:	mov    eax,DWORD PTR [rbp-0x20]
  430485:	movsxd rdx,eax
  430488:	mov    rcx,QWORD PTR [rbp-0x38]
  43048c:	mov    rax,QWORD PTR [rbp-0x18]
  430490:	mov    rsi,rcx
  430493:	mov    rdi,rax
  430496:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  43049b:	mov    rax,QWORD PTR [rbp-0x18]
  43049f:	mov    rdx,QWORD PTR [rax+0x28]
  4304a3:	movzx  eax,BYTE PTR [rbp-0x1]
  4304a7:	mov    rsi,rdx
  4304aa:	mov    edi,eax
  4304ac:	call   42ad0d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  4304b1:	mov    ecx,eax
  4304b3:	mov    rax,QWORD PTR [rbp-0x18]
  4304b7:	mov    rdx,QWORD PTR [rax+0x28]
  4304bb:	movsxd rax,ecx
  4304be:	add    rdx,rax
  4304c1:	mov    rax,QWORD PTR [rbp-0x18]
  4304c5:	mov    QWORD PTR [rax+0x28],rdx
  4304c9:	nop
  4304ca:	leave  
  4304cb:	ret    

00000000004304cc <flatcc_json_printer_uint16_struct_field@@Base>:
  4304cc:	endbr64 
  4304d0:	push   rbp
  4304d1:	mov    rbp,rsp
  4304d4:	sub    rsp,0x40
  4304d8:	mov    QWORD PTR [rbp-0x18],rdi
  4304dc:	mov    DWORD PTR [rbp-0x1c],esi
  4304df:	mov    QWORD PTR [rbp-0x28],rdx
  4304e3:	mov    QWORD PTR [rbp-0x30],rcx
  4304e7:	mov    QWORD PTR [rbp-0x38],r8
  4304eb:	mov    DWORD PTR [rbp-0x20],r9d
  4304ef:	mov    rdx,QWORD PTR [rbp-0x28]
  4304f3:	mov    rax,QWORD PTR [rbp-0x30]
  4304f7:	add    rax,rdx
  4304fa:	mov    rdi,rax
  4304fd:	call   42a98c <flatcc_json_parser_struct_as_root@@Base+0x177>
  430502:	mov    WORD PTR [rbp-0x2],ax
  430506:	cmp    DWORD PTR [rbp-0x1c],0x0
  43050a:	je     430523 <flatcc_json_printer_uint16_struct_field@@Base+0x57>
  43050c:	mov    rax,QWORD PTR [rbp-0x18]
  430510:	mov    rax,QWORD PTR [rax+0x28]
  430514:	lea    rcx,[rax+0x1]
  430518:	mov    rdx,QWORD PTR [rbp-0x18]
  43051c:	mov    QWORD PTR [rdx+0x28],rcx
  430520:	mov    BYTE PTR [rax],0x2c
  430523:	mov    eax,DWORD PTR [rbp-0x20]
  430526:	movsxd rdx,eax
  430529:	mov    rcx,QWORD PTR [rbp-0x38]
  43052d:	mov    rax,QWORD PTR [rbp-0x18]
  430531:	mov    rsi,rcx
  430534:	mov    rdi,rax
  430537:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  43053c:	mov    rax,QWORD PTR [rbp-0x18]
  430540:	mov    rdx,QWORD PTR [rax+0x28]
  430544:	movzx  eax,WORD PTR [rbp-0x2]
  430548:	mov    rsi,rdx
  43054b:	mov    edi,eax
  43054d:	call   42ae5f <flatcc_json_parser_struct_as_root@@Base+0x64a>
  430552:	mov    ecx,eax
  430554:	mov    rax,QWORD PTR [rbp-0x18]
  430558:	mov    rdx,QWORD PTR [rax+0x28]
  43055c:	movsxd rax,ecx
  43055f:	add    rdx,rax
  430562:	mov    rax,QWORD PTR [rbp-0x18]
  430566:	mov    QWORD PTR [rax+0x28],rdx
  43056a:	nop
  43056b:	leave  
  43056c:	ret    

000000000043056d <flatcc_json_printer_uint32_struct_field@@Base>:
  43056d:	endbr64 
  430571:	push   rbp
  430572:	mov    rbp,rsp
  430575:	sub    rsp,0x40
  430579:	mov    QWORD PTR [rbp-0x18],rdi
  43057d:	mov    DWORD PTR [rbp-0x1c],esi
  430580:	mov    QWORD PTR [rbp-0x28],rdx
  430584:	mov    QWORD PTR [rbp-0x30],rcx
  430588:	mov    QWORD PTR [rbp-0x38],r8
  43058c:	mov    DWORD PTR [rbp-0x20],r9d
  430590:	mov    rdx,QWORD PTR [rbp-0x28]
  430594:	mov    rax,QWORD PTR [rbp-0x30]
  430598:	add    rax,rdx
  43059b:	mov    rdi,rax
  43059e:	call   42a9b7 <flatcc_json_parser_struct_as_root@@Base+0x1a2>
  4305a3:	mov    DWORD PTR [rbp-0x4],eax
  4305a6:	cmp    DWORD PTR [rbp-0x1c],0x0
  4305aa:	je     4305c3 <flatcc_json_printer_uint32_struct_field@@Base+0x56>
  4305ac:	mov    rax,QWORD PTR [rbp-0x18]
  4305b0:	mov    rax,QWORD PTR [rax+0x28]
  4305b4:	lea    rcx,[rax+0x1]
  4305b8:	mov    rdx,QWORD PTR [rbp-0x18]
  4305bc:	mov    QWORD PTR [rdx+0x28],rcx
  4305c0:	mov    BYTE PTR [rax],0x2c
  4305c3:	mov    eax,DWORD PTR [rbp-0x20]
  4305c6:	movsxd rdx,eax
  4305c9:	mov    rcx,QWORD PTR [rbp-0x38]
  4305cd:	mov    rax,QWORD PTR [rbp-0x18]
  4305d1:	mov    rsi,rcx
  4305d4:	mov    rdi,rax
  4305d7:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  4305dc:	mov    rax,QWORD PTR [rbp-0x18]
  4305e0:	mov    rdx,QWORD PTR [rax+0x28]
  4305e4:	mov    eax,DWORD PTR [rbp-0x4]
  4305e7:	mov    rsi,rdx
  4305ea:	mov    edi,eax
  4305ec:	call   42b104 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  4305f1:	mov    ecx,eax
  4305f3:	mov    rax,QWORD PTR [rbp-0x18]
  4305f7:	mov    rdx,QWORD PTR [rax+0x28]
  4305fb:	movsxd rax,ecx
  4305fe:	add    rdx,rax
  430601:	mov    rax,QWORD PTR [rbp-0x18]
  430605:	mov    QWORD PTR [rax+0x28],rdx
  430609:	nop
  43060a:	leave  
  43060b:	ret    

000000000043060c <flatcc_json_printer_uint64_struct_field@@Base>:
  43060c:	endbr64 
  430610:	push   rbp
  430611:	mov    rbp,rsp
  430614:	sub    rsp,0x40
  430618:	mov    QWORD PTR [rbp-0x18],rdi
  43061c:	mov    DWORD PTR [rbp-0x1c],esi
  43061f:	mov    QWORD PTR [rbp-0x28],rdx
  430623:	mov    QWORD PTR [rbp-0x30],rcx
  430627:	mov    QWORD PTR [rbp-0x38],r8
  43062b:	mov    DWORD PTR [rbp-0x20],r9d
  43062f:	mov    rdx,QWORD PTR [rbp-0x28]
  430633:	mov    rax,QWORD PTR [rbp-0x30]
  430637:	add    rax,rdx
  43063a:	mov    rdi,rax
  43063d:	call   42a9e0 <flatcc_json_parser_struct_as_root@@Base+0x1cb>
  430642:	mov    QWORD PTR [rbp-0x8],rax
  430646:	cmp    DWORD PTR [rbp-0x1c],0x0
  43064a:	je     430663 <flatcc_json_printer_uint64_struct_field@@Base+0x57>
  43064c:	mov    rax,QWORD PTR [rbp-0x18]
  430650:	mov    rax,QWORD PTR [rax+0x28]
  430654:	lea    rcx,[rax+0x1]
  430658:	mov    rdx,QWORD PTR [rbp-0x18]
  43065c:	mov    QWORD PTR [rdx+0x28],rcx
  430660:	mov    BYTE PTR [rax],0x2c
  430663:	mov    eax,DWORD PTR [rbp-0x20]
  430666:	movsxd rdx,eax
  430669:	mov    rcx,QWORD PTR [rbp-0x38]
  43066d:	mov    rax,QWORD PTR [rbp-0x18]
  430671:	mov    rsi,rcx
  430674:	mov    rdi,rax
  430677:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  43067c:	mov    rax,QWORD PTR [rbp-0x18]
  430680:	mov    rdx,QWORD PTR [rax+0x28]
  430684:	mov    rax,QWORD PTR [rbp-0x8]
  430688:	mov    rsi,rdx
  43068b:	mov    rdi,rax
  43068e:	call   42b519 <flatcc_json_parser_struct_as_root@@Base+0xd04>
  430693:	mov    ecx,eax
  430695:	mov    rax,QWORD PTR [rbp-0x18]
  430699:	mov    rdx,QWORD PTR [rax+0x28]
  43069d:	movsxd rax,ecx
  4306a0:	add    rdx,rax
  4306a3:	mov    rax,QWORD PTR [rbp-0x18]
  4306a7:	mov    QWORD PTR [rax+0x28],rdx
  4306ab:	nop
  4306ac:	leave  
  4306ad:	ret    

00000000004306ae <flatcc_json_printer_int8_struct_field@@Base>:
  4306ae:	endbr64 
  4306b2:	push   rbp
  4306b3:	mov    rbp,rsp
  4306b6:	sub    rsp,0x40
  4306ba:	mov    QWORD PTR [rbp-0x18],rdi
  4306be:	mov    DWORD PTR [rbp-0x1c],esi
  4306c1:	mov    QWORD PTR [rbp-0x28],rdx
  4306c5:	mov    QWORD PTR [rbp-0x30],rcx
  4306c9:	mov    QWORD PTR [rbp-0x38],r8
  4306cd:	mov    DWORD PTR [rbp-0x20],r9d
  4306d1:	mov    rdx,QWORD PTR [rbp-0x28]
  4306d5:	mov    rax,QWORD PTR [rbp-0x30]
  4306d9:	add    rax,rdx
  4306dc:	mov    rdi,rax
  4306df:	call   42aa0c <flatcc_json_parser_struct_as_root@@Base+0x1f7>
  4306e4:	mov    BYTE PTR [rbp-0x1],al
  4306e7:	cmp    DWORD PTR [rbp-0x1c],0x0
  4306eb:	je     430704 <flatcc_json_printer_int8_struct_field@@Base+0x56>
  4306ed:	mov    rax,QWORD PTR [rbp-0x18]
  4306f1:	mov    rax,QWORD PTR [rax+0x28]
  4306f5:	lea    rcx,[rax+0x1]
  4306f9:	mov    rdx,QWORD PTR [rbp-0x18]
  4306fd:	mov    QWORD PTR [rdx+0x28],rcx
  430701:	mov    BYTE PTR [rax],0x2c
  430704:	mov    eax,DWORD PTR [rbp-0x20]
  430707:	movsxd rdx,eax
  43070a:	mov    rcx,QWORD PTR [rbp-0x38]
  43070e:	mov    rax,QWORD PTR [rbp-0x18]
  430712:	mov    rsi,rcx
  430715:	mov    rdi,rax
  430718:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  43071d:	mov    rax,QWORD PTR [rbp-0x18]
  430721:	mov    rdx,QWORD PTR [rax+0x28]
  430725:	movsx  eax,BYTE PTR [rbp-0x1]
  430729:	mov    rsi,rdx
  43072c:	mov    edi,eax
  43072e:	call   42bddc <flatcc_json_parser_struct_as_root@@Base+0x15c7>
  430733:	mov    ecx,eax
  430735:	mov    rax,QWORD PTR [rbp-0x18]
  430739:	mov    rdx,QWORD PTR [rax+0x28]
  43073d:	movsxd rax,ecx
  430740:	add    rdx,rax
  430743:	mov    rax,QWORD PTR [rbp-0x18]
  430747:	mov    QWORD PTR [rax+0x28],rdx
  43074b:	nop
  43074c:	leave  
  43074d:	ret    

000000000043074e <flatcc_json_printer_int16_struct_field@@Base>:
  43074e:	endbr64 
  430752:	push   rbp
  430753:	mov    rbp,rsp
  430756:	sub    rsp,0x40
  43075a:	mov    QWORD PTR [rbp-0x18],rdi
  43075e:	mov    DWORD PTR [rbp-0x1c],esi
  430761:	mov    QWORD PTR [rbp-0x28],rdx
  430765:	mov    QWORD PTR [rbp-0x30],rcx
  430769:	mov    QWORD PTR [rbp-0x38],r8
  43076d:	mov    DWORD PTR [rbp-0x20],r9d
  430771:	mov    rdx,QWORD PTR [rbp-0x28]
  430775:	mov    rax,QWORD PTR [rbp-0x30]
  430779:	add    rax,rdx
  43077c:	mov    rdi,rax
  43077f:	call   42aa3b <flatcc_json_parser_struct_as_root@@Base+0x226>
  430784:	mov    WORD PTR [rbp-0x2],ax
  430788:	cmp    DWORD PTR [rbp-0x1c],0x0
  43078c:	je     4307a5 <flatcc_json_printer_int16_struct_field@@Base+0x57>
  43078e:	mov    rax,QWORD PTR [rbp-0x18]
  430792:	mov    rax,QWORD PTR [rax+0x28]
  430796:	lea    rcx,[rax+0x1]
  43079a:	mov    rdx,QWORD PTR [rbp-0x18]
  43079e:	mov    QWORD PTR [rdx+0x28],rcx
  4307a2:	mov    BYTE PTR [rax],0x2c
  4307a5:	mov    eax,DWORD PTR [rbp-0x20]
  4307a8:	movsxd rdx,eax
  4307ab:	mov    rcx,QWORD PTR [rbp-0x38]
  4307af:	mov    rax,QWORD PTR [rbp-0x18]
  4307b3:	mov    rsi,rcx
  4307b6:	mov    rdi,rax
  4307b9:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  4307be:	mov    rax,QWORD PTR [rbp-0x18]
  4307c2:	mov    rdx,QWORD PTR [rax+0x28]
  4307c6:	movsx  eax,WORD PTR [rbp-0x2]
  4307ca:	mov    rsi,rdx
  4307cd:	mov    edi,eax
  4307cf:	call   42be3a <flatcc_json_parser_struct_as_root@@Base+0x1625>
  4307d4:	mov    ecx,eax
  4307d6:	mov    rax,QWORD PTR [rbp-0x18]
  4307da:	mov    rdx,QWORD PTR [rax+0x28]
  4307de:	movsxd rax,ecx
  4307e1:	add    rdx,rax
  4307e4:	mov    rax,QWORD PTR [rbp-0x18]
  4307e8:	mov    QWORD PTR [rax+0x28],rdx
  4307ec:	nop
  4307ed:	leave  
  4307ee:	ret    

00000000004307ef <flatcc_json_printer_int32_struct_field@@Base>:
  4307ef:	endbr64 
  4307f3:	push   rbp
  4307f4:	mov    rbp,rsp
  4307f7:	sub    rsp,0x40
  4307fb:	mov    QWORD PTR [rbp-0x18],rdi
  4307ff:	mov    DWORD PTR [rbp-0x1c],esi
  430802:	mov    QWORD PTR [rbp-0x28],rdx
  430806:	mov    QWORD PTR [rbp-0x30],rcx
  43080a:	mov    QWORD PTR [rbp-0x38],r8
  43080e:	mov    DWORD PTR [rbp-0x20],r9d
  430812:	mov    rdx,QWORD PTR [rbp-0x28]
  430816:	mov    rax,QWORD PTR [rbp-0x30]
  43081a:	add    rax,rdx
  43081d:	mov    rdi,rax
  430820:	call   42aa64 <flatcc_json_parser_struct_as_root@@Base+0x24f>
  430825:	mov    DWORD PTR [rbp-0x4],eax
  430828:	cmp    DWORD PTR [rbp-0x1c],0x0
  43082c:	je     430845 <flatcc_json_printer_int32_struct_field@@Base+0x56>
  43082e:	mov    rax,QWORD PTR [rbp-0x18]
  430832:	mov    rax,QWORD PTR [rax+0x28]
  430836:	lea    rcx,[rax+0x1]
  43083a:	mov    rdx,QWORD PTR [rbp-0x18]
  43083e:	mov    QWORD PTR [rdx+0x28],rcx
  430842:	mov    BYTE PTR [rax],0x2c
  430845:	mov    eax,DWORD PTR [rbp-0x20]
  430848:	movsxd rdx,eax
  43084b:	mov    rcx,QWORD PTR [rbp-0x38]
  43084f:	mov    rax,QWORD PTR [rbp-0x18]
  430853:	mov    rsi,rcx
  430856:	mov    rdi,rax
  430859:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  43085e:	mov    rax,QWORD PTR [rbp-0x18]
  430862:	mov    rdx,QWORD PTR [rax+0x28]
  430866:	mov    eax,DWORD PTR [rbp-0x4]
  430869:	mov    rsi,rdx
  43086c:	mov    edi,eax
  43086e:	call   42be9b <flatcc_json_parser_struct_as_root@@Base+0x1686>
  430873:	mov    ecx,eax
  430875:	mov    rax,QWORD PTR [rbp-0x18]
  430879:	mov    rdx,QWORD PTR [rax+0x28]
  43087d:	movsxd rax,ecx
  430880:	add    rdx,rax
  430883:	mov    rax,QWORD PTR [rbp-0x18]
  430887:	mov    QWORD PTR [rax+0x28],rdx
  43088b:	nop
  43088c:	leave  
  43088d:	ret    

000000000043088e <flatcc_json_printer_int64_struct_field@@Base>:
  43088e:	endbr64 
  430892:	push   rbp
  430893:	mov    rbp,rsp
  430896:	sub    rsp,0x40
  43089a:	mov    QWORD PTR [rbp-0x18],rdi
  43089e:	mov    DWORD PTR [rbp-0x1c],esi
  4308a1:	mov    QWORD PTR [rbp-0x28],rdx
  4308a5:	mov    QWORD PTR [rbp-0x30],rcx
  4308a9:	mov    QWORD PTR [rbp-0x38],r8
  4308ad:	mov    DWORD PTR [rbp-0x20],r9d
  4308b1:	mov    rdx,QWORD PTR [rbp-0x28]
  4308b5:	mov    rax,QWORD PTR [rbp-0x30]
  4308b9:	add    rax,rdx
  4308bc:	mov    rdi,rax
  4308bf:	call   42aa8d <flatcc_json_parser_struct_as_root@@Base+0x278>
  4308c4:	mov    QWORD PTR [rbp-0x8],rax
  4308c8:	cmp    DWORD PTR [rbp-0x1c],0x0
  4308cc:	je     4308e5 <flatcc_json_printer_int64_struct_field@@Base+0x57>
  4308ce:	mov    rax,QWORD PTR [rbp-0x18]
  4308d2:	mov    rax,QWORD PTR [rax+0x28]
  4308d6:	lea    rcx,[rax+0x1]
  4308da:	mov    rdx,QWORD PTR [rbp-0x18]
  4308de:	mov    QWORD PTR [rdx+0x28],rcx
  4308e2:	mov    BYTE PTR [rax],0x2c
  4308e5:	mov    eax,DWORD PTR [rbp-0x20]
  4308e8:	movsxd rdx,eax
  4308eb:	mov    rcx,QWORD PTR [rbp-0x38]
  4308ef:	mov    rax,QWORD PTR [rbp-0x18]
  4308f3:	mov    rsi,rcx
  4308f6:	mov    rdi,rax
  4308f9:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  4308fe:	mov    rax,QWORD PTR [rbp-0x18]
  430902:	mov    rdx,QWORD PTR [rax+0x28]
  430906:	mov    rax,QWORD PTR [rbp-0x8]
  43090a:	mov    rsi,rdx
  43090d:	mov    rdi,rax
  430910:	call   42beec <flatcc_json_parser_struct_as_root@@Base+0x16d7>
  430915:	mov    ecx,eax
  430917:	mov    rax,QWORD PTR [rbp-0x18]
  43091b:	mov    rdx,QWORD PTR [rax+0x28]
  43091f:	movsxd rax,ecx
  430922:	add    rdx,rax
  430925:	mov    rax,QWORD PTR [rbp-0x18]
  430929:	mov    QWORD PTR [rax+0x28],rdx
  43092d:	nop
  43092e:	leave  
  43092f:	ret    

0000000000430930 <flatcc_json_printer_bool_struct_field@@Base>:
  430930:	endbr64 
  430934:	push   rbp
  430935:	mov    rbp,rsp
  430938:	sub    rsp,0x40
  43093c:	mov    QWORD PTR [rbp-0x18],rdi
  430940:	mov    DWORD PTR [rbp-0x1c],esi
  430943:	mov    QWORD PTR [rbp-0x28],rdx
  430947:	mov    QWORD PTR [rbp-0x30],rcx
  43094b:	mov    QWORD PTR [rbp-0x38],r8
  43094f:	mov    DWORD PTR [rbp-0x20],r9d
  430953:	mov    rdx,QWORD PTR [rbp-0x28]
  430957:	mov    rax,QWORD PTR [rbp-0x30]
  43095b:	add    rax,rdx
  43095e:	mov    rdi,rax
  430961:	call   42ab4b <flatcc_json_parser_struct_as_root@@Base+0x336>
  430966:	mov    BYTE PTR [rbp-0x1],al
  430969:	cmp    DWORD PTR [rbp-0x1c],0x0
  43096d:	je     430986 <flatcc_json_printer_bool_struct_field@@Base+0x56>
  43096f:	mov    rax,QWORD PTR [rbp-0x18]
  430973:	mov    rax,QWORD PTR [rax+0x28]
  430977:	lea    rcx,[rax+0x1]
  43097b:	mov    rdx,QWORD PTR [rbp-0x18]
  43097f:	mov    QWORD PTR [rdx+0x28],rcx
  430983:	mov    BYTE PTR [rax],0x2c
  430986:	mov    eax,DWORD PTR [rbp-0x20]
  430989:	movsxd rdx,eax
  43098c:	mov    rcx,QWORD PTR [rbp-0x38]
  430990:	mov    rax,QWORD PTR [rbp-0x18]
  430994:	mov    rsi,rcx
  430997:	mov    rdi,rax
  43099a:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  43099f:	mov    rax,QWORD PTR [rbp-0x18]
  4309a3:	mov    rdx,QWORD PTR [rax+0x28]
  4309a7:	movzx  eax,BYTE PTR [rbp-0x1]
  4309ab:	mov    rsi,rdx
  4309ae:	mov    edi,eax
  4309b0:	call   42acb6 <flatcc_json_parser_struct_as_root@@Base+0x4a1>
  4309b5:	mov    ecx,eax
  4309b7:	mov    rax,QWORD PTR [rbp-0x18]
  4309bb:	mov    rdx,QWORD PTR [rax+0x28]
  4309bf:	movsxd rax,ecx
  4309c2:	add    rdx,rax
  4309c5:	mov    rax,QWORD PTR [rbp-0x18]
  4309c9:	mov    QWORD PTR [rax+0x28],rdx
  4309cd:	nop
  4309ce:	leave  
  4309cf:	ret    

00000000004309d0 <flatcc_json_printer_float_struct_field@@Base>:
  4309d0:	endbr64 
  4309d4:	push   rbp
  4309d5:	mov    rbp,rsp
  4309d8:	sub    rsp,0x40
  4309dc:	mov    QWORD PTR [rbp-0x18],rdi
  4309e0:	mov    DWORD PTR [rbp-0x1c],esi
  4309e3:	mov    QWORD PTR [rbp-0x28],rdx
  4309e7:	mov    QWORD PTR [rbp-0x30],rcx
  4309eb:	mov    QWORD PTR [rbp-0x38],r8
  4309ef:	mov    DWORD PTR [rbp-0x20],r9d
  4309f3:	mov    rdx,QWORD PTR [rbp-0x28]
  4309f7:	mov    rax,QWORD PTR [rbp-0x30]
  4309fb:	add    rax,rdx
  4309fe:	mov    rdi,rax
  430a01:	call   42aaca <flatcc_json_parser_struct_as_root@@Base+0x2b5>
  430a06:	vmovd  eax,xmm0
  430a0a:	mov    DWORD PTR [rbp-0x4],eax
  430a0d:	cmp    DWORD PTR [rbp-0x1c],0x0
  430a11:	je     430a2a <flatcc_json_printer_float_struct_field@@Base+0x5a>
  430a13:	mov    rax,QWORD PTR [rbp-0x18]
  430a17:	mov    rax,QWORD PTR [rax+0x28]
  430a1b:	lea    rcx,[rax+0x1]
  430a1f:	mov    rdx,QWORD PTR [rbp-0x18]
  430a23:	mov    QWORD PTR [rdx+0x28],rcx
  430a27:	mov    BYTE PTR [rax],0x2c
  430a2a:	mov    eax,DWORD PTR [rbp-0x20]
  430a2d:	movsxd rdx,eax
  430a30:	mov    rcx,QWORD PTR [rbp-0x38]
  430a34:	mov    rax,QWORD PTR [rbp-0x18]
  430a38:	mov    rsi,rcx
  430a3b:	mov    rdi,rax
  430a3e:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  430a43:	mov    rax,QWORD PTR [rbp-0x18]
  430a47:	mov    rdx,QWORD PTR [rax+0x28]
  430a4b:	vcvtss2sd xmm1,xmm1,DWORD PTR [rbp-0x4]
  430a50:	vmovq  rax,xmm1
  430a55:	mov    rdi,rdx
  430a58:	vmovq  xmm0,rax
  430a5d:	call   42d01c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  430a62:	mov    ecx,eax
  430a64:	mov    rax,QWORD PTR [rbp-0x18]
  430a68:	mov    rdx,QWORD PTR [rax+0x28]
  430a6c:	movsxd rax,ecx
  430a6f:	add    rdx,rax
  430a72:	mov    rax,QWORD PTR [rbp-0x18]
  430a76:	mov    QWORD PTR [rax+0x28],rdx
  430a7a:	nop
  430a7b:	leave  
  430a7c:	ret    

0000000000430a7d <flatcc_json_printer_double_struct_field@@Base>:
  430a7d:	endbr64 
  430a81:	push   rbp
  430a82:	mov    rbp,rsp
  430a85:	sub    rsp,0x40
  430a89:	mov    QWORD PTR [rbp-0x18],rdi
  430a8d:	mov    DWORD PTR [rbp-0x1c],esi
  430a90:	mov    QWORD PTR [rbp-0x28],rdx
  430a94:	mov    QWORD PTR [rbp-0x30],rcx
  430a98:	mov    QWORD PTR [rbp-0x38],r8
  430a9c:	mov    DWORD PTR [rbp-0x20],r9d
  430aa0:	mov    rdx,QWORD PTR [rbp-0x28]
  430aa4:	mov    rax,QWORD PTR [rbp-0x30]
  430aa8:	add    rax,rdx
  430aab:	mov    rdi,rax
  430aae:	call   42ab13 <flatcc_json_parser_struct_as_root@@Base+0x2fe>
  430ab3:	vmovq  rax,xmm0
  430ab8:	mov    QWORD PTR [rbp-0x8],rax
  430abc:	cmp    DWORD PTR [rbp-0x1c],0x0
  430ac0:	je     430ad9 <flatcc_json_printer_double_struct_field@@Base+0x5c>
  430ac2:	mov    rax,QWORD PTR [rbp-0x18]
  430ac6:	mov    rax,QWORD PTR [rax+0x28]
  430aca:	lea    rcx,[rax+0x1]
  430ace:	mov    rdx,QWORD PTR [rbp-0x18]
  430ad2:	mov    QWORD PTR [rdx+0x28],rcx
  430ad6:	mov    BYTE PTR [rax],0x2c
  430ad9:	mov    eax,DWORD PTR [rbp-0x20]
  430adc:	movsxd rdx,eax
  430adf:	mov    rcx,QWORD PTR [rbp-0x38]
  430ae3:	mov    rax,QWORD PTR [rbp-0x18]
  430ae7:	mov    rsi,rcx
  430aea:	mov    rdi,rax
  430aed:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  430af2:	mov    rax,QWORD PTR [rbp-0x18]
  430af6:	mov    rdx,QWORD PTR [rax+0x28]
  430afa:	mov    rax,QWORD PTR [rbp-0x8]
  430afe:	mov    rdi,rdx
  430b01:	vmovq  xmm0,rax
  430b06:	call   42d01c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  430b0b:	mov    ecx,eax
  430b0d:	mov    rax,QWORD PTR [rbp-0x18]
  430b11:	mov    rdx,QWORD PTR [rax+0x28]
  430b15:	movsxd rax,ecx
  430b18:	add    rdx,rax
  430b1b:	mov    rax,QWORD PTR [rbp-0x18]
  430b1f:	mov    QWORD PTR [rax+0x28],rdx
  430b23:	nop
  430b24:	leave  
  430b25:	ret    

0000000000430b26 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
  430b26:	endbr64 
  430b2a:	push   rbp
  430b2b:	mov    rbp,rsp
  430b2e:	sub    rsp,0x40
  430b32:	mov    QWORD PTR [rbp-0x18],rdi
  430b36:	mov    DWORD PTR [rbp-0x1c],esi
  430b39:	mov    QWORD PTR [rbp-0x28],rdx
  430b3d:	mov    QWORD PTR [rbp-0x30],rcx
  430b41:	mov    QWORD PTR [rbp-0x38],r8
  430b45:	mov    DWORD PTR [rbp-0x20],r9d
  430b49:	mov    rdx,QWORD PTR [rbp-0x28]
  430b4d:	mov    rax,QWORD PTR [rbp-0x30]
  430b51:	add    rax,rdx
  430b54:	mov    rdi,rax
  430b57:	call   42a95d <flatcc_json_parser_struct_as_root@@Base+0x148>
  430b5c:	mov    BYTE PTR [rbp-0x1],al
  430b5f:	cmp    DWORD PTR [rbp-0x1c],0x0
  430b63:	je     430b7c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x56>
  430b65:	mov    rax,QWORD PTR [rbp-0x18]
  430b69:	mov    rax,QWORD PTR [rax+0x28]
  430b6d:	lea    rcx,[rax+0x1]
  430b71:	mov    rdx,QWORD PTR [rbp-0x18]
  430b75:	mov    QWORD PTR [rdx+0x28],rcx
  430b79:	mov    BYTE PTR [rax],0x2c
  430b7c:	mov    eax,DWORD PTR [rbp-0x20]
  430b7f:	movsxd rdx,eax
  430b82:	mov    rcx,QWORD PTR [rbp-0x38]
  430b86:	mov    rax,QWORD PTR [rbp-0x18]
  430b8a:	mov    rsi,rcx
  430b8d:	mov    rdi,rax
  430b90:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  430b95:	mov    rax,QWORD PTR [rbp-0x18]
  430b99:	movzx  eax,BYTE PTR [rax+0x33]
  430b9d:	test   al,al
  430b9f:	je     430bd1 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xab>
  430ba1:	mov    rax,QWORD PTR [rbp-0x18]
  430ba5:	mov    rdx,QWORD PTR [rax+0x28]
  430ba9:	movzx  eax,BYTE PTR [rbp-0x1]
  430bad:	mov    rsi,rdx
  430bb0:	mov    edi,eax
  430bb2:	call   42ad0d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  430bb7:	mov    ecx,eax
  430bb9:	mov    rax,QWORD PTR [rbp-0x18]
  430bbd:	mov    rdx,QWORD PTR [rax+0x28]
  430bc1:	movsxd rax,ecx
  430bc4:	add    rdx,rax
  430bc7:	mov    rax,QWORD PTR [rbp-0x18]
  430bcb:	mov    QWORD PTR [rax+0x28],rdx
  430bcf:	jmp    430be4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xbe>
  430bd1:	movzx  ecx,BYTE PTR [rbp-0x1]
  430bd5:	mov    rdx,QWORD PTR [rbp-0x18]
  430bd9:	mov    rax,QWORD PTR [rbp+0x10]
  430bdd:	mov    esi,ecx
  430bdf:	mov    rdi,rdx
  430be2:	call   rax
  430be4:	nop
  430be5:	leave  
  430be6:	ret    

0000000000430be7 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
  430be7:	endbr64 
  430beb:	push   rbp
  430bec:	mov    rbp,rsp
  430bef:	sub    rsp,0x40
  430bf3:	mov    QWORD PTR [rbp-0x18],rdi
  430bf7:	mov    DWORD PTR [rbp-0x1c],esi
  430bfa:	mov    QWORD PTR [rbp-0x28],rdx
  430bfe:	mov    QWORD PTR [rbp-0x30],rcx
  430c02:	mov    QWORD PTR [rbp-0x38],r8
  430c06:	mov    DWORD PTR [rbp-0x20],r9d
  430c0a:	mov    rdx,QWORD PTR [rbp-0x28]
  430c0e:	mov    rax,QWORD PTR [rbp-0x30]
  430c12:	add    rax,rdx
  430c15:	mov    rdi,rax
  430c18:	call   42a98c <flatcc_json_parser_struct_as_root@@Base+0x177>
  430c1d:	mov    WORD PTR [rbp-0x2],ax
  430c21:	cmp    DWORD PTR [rbp-0x1c],0x0
  430c25:	je     430c3e <flatcc_json_printer_uint16_enum_struct_field@@Base+0x57>
  430c27:	mov    rax,QWORD PTR [rbp-0x18]
  430c2b:	mov    rax,QWORD PTR [rax+0x28]
  430c2f:	lea    rcx,[rax+0x1]
  430c33:	mov    rdx,QWORD PTR [rbp-0x18]
  430c37:	mov    QWORD PTR [rdx+0x28],rcx
  430c3b:	mov    BYTE PTR [rax],0x2c
  430c3e:	mov    eax,DWORD PTR [rbp-0x20]
  430c41:	movsxd rdx,eax
  430c44:	mov    rcx,QWORD PTR [rbp-0x38]
  430c48:	mov    rax,QWORD PTR [rbp-0x18]
  430c4c:	mov    rsi,rcx
  430c4f:	mov    rdi,rax
  430c52:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  430c57:	mov    rax,QWORD PTR [rbp-0x18]
  430c5b:	movzx  eax,BYTE PTR [rax+0x33]
  430c5f:	test   al,al
  430c61:	je     430c93 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xac>
  430c63:	mov    rax,QWORD PTR [rbp-0x18]
  430c67:	mov    rdx,QWORD PTR [rax+0x28]
  430c6b:	movzx  eax,WORD PTR [rbp-0x2]
  430c6f:	mov    rsi,rdx
  430c72:	mov    edi,eax
  430c74:	call   42ae5f <flatcc_json_parser_struct_as_root@@Base+0x64a>
  430c79:	mov    ecx,eax
  430c7b:	mov    rax,QWORD PTR [rbp-0x18]
  430c7f:	mov    rdx,QWORD PTR [rax+0x28]
  430c83:	movsxd rax,ecx
  430c86:	add    rdx,rax
  430c89:	mov    rax,QWORD PTR [rbp-0x18]
  430c8d:	mov    QWORD PTR [rax+0x28],rdx
  430c91:	jmp    430ca6 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xbf>
  430c93:	movzx  ecx,WORD PTR [rbp-0x2]
  430c97:	mov    rdx,QWORD PTR [rbp-0x18]
  430c9b:	mov    rax,QWORD PTR [rbp+0x10]
  430c9f:	mov    esi,ecx
  430ca1:	mov    rdi,rdx
  430ca4:	call   rax
  430ca6:	nop
  430ca7:	leave  
  430ca8:	ret    

0000000000430ca9 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
  430ca9:	endbr64 
  430cad:	push   rbp
  430cae:	mov    rbp,rsp
  430cb1:	sub    rsp,0x40
  430cb5:	mov    QWORD PTR [rbp-0x18],rdi
  430cb9:	mov    DWORD PTR [rbp-0x1c],esi
  430cbc:	mov    QWORD PTR [rbp-0x28],rdx
  430cc0:	mov    QWORD PTR [rbp-0x30],rcx
  430cc4:	mov    QWORD PTR [rbp-0x38],r8
  430cc8:	mov    DWORD PTR [rbp-0x20],r9d
  430ccc:	mov    rdx,QWORD PTR [rbp-0x28]
  430cd0:	mov    rax,QWORD PTR [rbp-0x30]
  430cd4:	add    rax,rdx
  430cd7:	mov    rdi,rax
  430cda:	call   42a9b7 <flatcc_json_parser_struct_as_root@@Base+0x1a2>
  430cdf:	mov    DWORD PTR [rbp-0x4],eax
  430ce2:	cmp    DWORD PTR [rbp-0x1c],0x0
  430ce6:	je     430cff <flatcc_json_printer_uint32_enum_struct_field@@Base+0x56>
  430ce8:	mov    rax,QWORD PTR [rbp-0x18]
  430cec:	mov    rax,QWORD PTR [rax+0x28]
  430cf0:	lea    rcx,[rax+0x1]
  430cf4:	mov    rdx,QWORD PTR [rbp-0x18]
  430cf8:	mov    QWORD PTR [rdx+0x28],rcx
  430cfc:	mov    BYTE PTR [rax],0x2c
  430cff:	mov    eax,DWORD PTR [rbp-0x20]
  430d02:	movsxd rdx,eax
  430d05:	mov    rcx,QWORD PTR [rbp-0x38]
  430d09:	mov    rax,QWORD PTR [rbp-0x18]
  430d0d:	mov    rsi,rcx
  430d10:	mov    rdi,rax
  430d13:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  430d18:	mov    rax,QWORD PTR [rbp-0x18]
  430d1c:	movzx  eax,BYTE PTR [rax+0x33]
  430d20:	test   al,al
  430d22:	je     430d53 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xaa>
  430d24:	mov    rax,QWORD PTR [rbp-0x18]
  430d28:	mov    rdx,QWORD PTR [rax+0x28]
  430d2c:	mov    eax,DWORD PTR [rbp-0x4]
  430d2f:	mov    rsi,rdx
  430d32:	mov    edi,eax
  430d34:	call   42b104 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  430d39:	mov    ecx,eax
  430d3b:	mov    rax,QWORD PTR [rbp-0x18]
  430d3f:	mov    rdx,QWORD PTR [rax+0x28]
  430d43:	movsxd rax,ecx
  430d46:	add    rdx,rax
  430d49:	mov    rax,QWORD PTR [rbp-0x18]
  430d4d:	mov    QWORD PTR [rax+0x28],rdx
  430d51:	jmp    430d65 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xbc>
  430d53:	mov    ecx,DWORD PTR [rbp-0x4]
  430d56:	mov    rdx,QWORD PTR [rbp-0x18]
  430d5a:	mov    rax,QWORD PTR [rbp+0x10]
  430d5e:	mov    esi,ecx
  430d60:	mov    rdi,rdx
  430d63:	call   rax
  430d65:	nop
  430d66:	leave  
  430d67:	ret    

0000000000430d68 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
  430d68:	endbr64 
  430d6c:	push   rbp
  430d6d:	mov    rbp,rsp
  430d70:	sub    rsp,0x40
  430d74:	mov    QWORD PTR [rbp-0x18],rdi
  430d78:	mov    DWORD PTR [rbp-0x1c],esi
  430d7b:	mov    QWORD PTR [rbp-0x28],rdx
  430d7f:	mov    QWORD PTR [rbp-0x30],rcx
  430d83:	mov    QWORD PTR [rbp-0x38],r8
  430d87:	mov    DWORD PTR [rbp-0x20],r9d
  430d8b:	mov    rdx,QWORD PTR [rbp-0x28]
  430d8f:	mov    rax,QWORD PTR [rbp-0x30]
  430d93:	add    rax,rdx
  430d96:	mov    rdi,rax
  430d99:	call   42a9e0 <flatcc_json_parser_struct_as_root@@Base+0x1cb>
  430d9e:	mov    QWORD PTR [rbp-0x8],rax
  430da2:	cmp    DWORD PTR [rbp-0x1c],0x0
  430da6:	je     430dbf <flatcc_json_printer_uint64_enum_struct_field@@Base+0x57>
  430da8:	mov    rax,QWORD PTR [rbp-0x18]
  430dac:	mov    rax,QWORD PTR [rax+0x28]
  430db0:	lea    rcx,[rax+0x1]
  430db4:	mov    rdx,QWORD PTR [rbp-0x18]
  430db8:	mov    QWORD PTR [rdx+0x28],rcx
  430dbc:	mov    BYTE PTR [rax],0x2c
  430dbf:	mov    eax,DWORD PTR [rbp-0x20]
  430dc2:	movsxd rdx,eax
  430dc5:	mov    rcx,QWORD PTR [rbp-0x38]
  430dc9:	mov    rax,QWORD PTR [rbp-0x18]
  430dcd:	mov    rsi,rcx
  430dd0:	mov    rdi,rax
  430dd3:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  430dd8:	mov    rax,QWORD PTR [rbp-0x18]
  430ddc:	movzx  eax,BYTE PTR [rax+0x33]
  430de0:	test   al,al
  430de2:	je     430e15 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xad>
  430de4:	mov    rax,QWORD PTR [rbp-0x18]
  430de8:	mov    rdx,QWORD PTR [rax+0x28]
  430dec:	mov    rax,QWORD PTR [rbp-0x8]
  430df0:	mov    rsi,rdx
  430df3:	mov    rdi,rax
  430df6:	call   42b519 <flatcc_json_parser_struct_as_root@@Base+0xd04>
  430dfb:	mov    ecx,eax
  430dfd:	mov    rax,QWORD PTR [rbp-0x18]
  430e01:	mov    rdx,QWORD PTR [rax+0x28]
  430e05:	movsxd rax,ecx
  430e08:	add    rdx,rax
  430e0b:	mov    rax,QWORD PTR [rbp-0x18]
  430e0f:	mov    QWORD PTR [rax+0x28],rdx
  430e13:	jmp    430e29 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xc1>
  430e15:	mov    rcx,QWORD PTR [rbp-0x8]
  430e19:	mov    rdx,QWORD PTR [rbp-0x18]
  430e1d:	mov    rax,QWORD PTR [rbp+0x10]
  430e21:	mov    rsi,rcx
  430e24:	mov    rdi,rdx
  430e27:	call   rax
  430e29:	nop
  430e2a:	leave  
  430e2b:	ret    

0000000000430e2c <flatcc_json_printer_int8_enum_struct_field@@Base>:
  430e2c:	endbr64 
  430e30:	push   rbp
  430e31:	mov    rbp,rsp
  430e34:	sub    rsp,0x40
  430e38:	mov    QWORD PTR [rbp-0x18],rdi
  430e3c:	mov    DWORD PTR [rbp-0x1c],esi
  430e3f:	mov    QWORD PTR [rbp-0x28],rdx
  430e43:	mov    QWORD PTR [rbp-0x30],rcx
  430e47:	mov    QWORD PTR [rbp-0x38],r8
  430e4b:	mov    DWORD PTR [rbp-0x20],r9d
  430e4f:	mov    rdx,QWORD PTR [rbp-0x28]
  430e53:	mov    rax,QWORD PTR [rbp-0x30]
  430e57:	add    rax,rdx
  430e5a:	mov    rdi,rax
  430e5d:	call   42aa0c <flatcc_json_parser_struct_as_root@@Base+0x1f7>
  430e62:	mov    BYTE PTR [rbp-0x1],al
  430e65:	cmp    DWORD PTR [rbp-0x1c],0x0
  430e69:	je     430e82 <flatcc_json_printer_int8_enum_struct_field@@Base+0x56>
  430e6b:	mov    rax,QWORD PTR [rbp-0x18]
  430e6f:	mov    rax,QWORD PTR [rax+0x28]
  430e73:	lea    rcx,[rax+0x1]
  430e77:	mov    rdx,QWORD PTR [rbp-0x18]
  430e7b:	mov    QWORD PTR [rdx+0x28],rcx
  430e7f:	mov    BYTE PTR [rax],0x2c
  430e82:	mov    eax,DWORD PTR [rbp-0x20]
  430e85:	movsxd rdx,eax
  430e88:	mov    rcx,QWORD PTR [rbp-0x38]
  430e8c:	mov    rax,QWORD PTR [rbp-0x18]
  430e90:	mov    rsi,rcx
  430e93:	mov    rdi,rax
  430e96:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  430e9b:	mov    rax,QWORD PTR [rbp-0x18]
  430e9f:	movzx  eax,BYTE PTR [rax+0x33]
  430ea3:	test   al,al
  430ea5:	je     430ed7 <flatcc_json_printer_int8_enum_struct_field@@Base+0xab>
  430ea7:	mov    rax,QWORD PTR [rbp-0x18]
  430eab:	mov    rdx,QWORD PTR [rax+0x28]
  430eaf:	movsx  eax,BYTE PTR [rbp-0x1]
  430eb3:	mov    rsi,rdx
  430eb6:	mov    edi,eax
  430eb8:	call   42bddc <flatcc_json_parser_struct_as_root@@Base+0x15c7>
  430ebd:	mov    ecx,eax
  430ebf:	mov    rax,QWORD PTR [rbp-0x18]
  430ec3:	mov    rdx,QWORD PTR [rax+0x28]
  430ec7:	movsxd rax,ecx
  430eca:	add    rdx,rax
  430ecd:	mov    rax,QWORD PTR [rbp-0x18]
  430ed1:	mov    QWORD PTR [rax+0x28],rdx
  430ed5:	jmp    430eea <flatcc_json_printer_int8_enum_struct_field@@Base+0xbe>
  430ed7:	movsx  ecx,BYTE PTR [rbp-0x1]
  430edb:	mov    rdx,QWORD PTR [rbp-0x18]
  430edf:	mov    rax,QWORD PTR [rbp+0x10]
  430ee3:	mov    esi,ecx
  430ee5:	mov    rdi,rdx
  430ee8:	call   rax
  430eea:	nop
  430eeb:	leave  
  430eec:	ret    

0000000000430eed <flatcc_json_printer_int16_enum_struct_field@@Base>:
  430eed:	endbr64 
  430ef1:	push   rbp
  430ef2:	mov    rbp,rsp
  430ef5:	sub    rsp,0x40
  430ef9:	mov    QWORD PTR [rbp-0x18],rdi
  430efd:	mov    DWORD PTR [rbp-0x1c],esi
  430f00:	mov    QWORD PTR [rbp-0x28],rdx
  430f04:	mov    QWORD PTR [rbp-0x30],rcx
  430f08:	mov    QWORD PTR [rbp-0x38],r8
  430f0c:	mov    DWORD PTR [rbp-0x20],r9d
  430f10:	mov    rdx,QWORD PTR [rbp-0x28]
  430f14:	mov    rax,QWORD PTR [rbp-0x30]
  430f18:	add    rax,rdx
  430f1b:	mov    rdi,rax
  430f1e:	call   42aa3b <flatcc_json_parser_struct_as_root@@Base+0x226>
  430f23:	mov    WORD PTR [rbp-0x2],ax
  430f27:	cmp    DWORD PTR [rbp-0x1c],0x0
  430f2b:	je     430f44 <flatcc_json_printer_int16_enum_struct_field@@Base+0x57>
  430f2d:	mov    rax,QWORD PTR [rbp-0x18]
  430f31:	mov    rax,QWORD PTR [rax+0x28]
  430f35:	lea    rcx,[rax+0x1]
  430f39:	mov    rdx,QWORD PTR [rbp-0x18]
  430f3d:	mov    QWORD PTR [rdx+0x28],rcx
  430f41:	mov    BYTE PTR [rax],0x2c
  430f44:	mov    eax,DWORD PTR [rbp-0x20]
  430f47:	movsxd rdx,eax
  430f4a:	mov    rcx,QWORD PTR [rbp-0x38]
  430f4e:	mov    rax,QWORD PTR [rbp-0x18]
  430f52:	mov    rsi,rcx
  430f55:	mov    rdi,rax
  430f58:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  430f5d:	mov    rax,QWORD PTR [rbp-0x18]
  430f61:	movzx  eax,BYTE PTR [rax+0x33]
  430f65:	test   al,al
  430f67:	je     430f99 <flatcc_json_printer_int16_enum_struct_field@@Base+0xac>
  430f69:	mov    rax,QWORD PTR [rbp-0x18]
  430f6d:	mov    rdx,QWORD PTR [rax+0x28]
  430f71:	movsx  eax,WORD PTR [rbp-0x2]
  430f75:	mov    rsi,rdx
  430f78:	mov    edi,eax
  430f7a:	call   42be3a <flatcc_json_parser_struct_as_root@@Base+0x1625>
  430f7f:	mov    ecx,eax
  430f81:	mov    rax,QWORD PTR [rbp-0x18]
  430f85:	mov    rdx,QWORD PTR [rax+0x28]
  430f89:	movsxd rax,ecx
  430f8c:	add    rdx,rax
  430f8f:	mov    rax,QWORD PTR [rbp-0x18]
  430f93:	mov    QWORD PTR [rax+0x28],rdx
  430f97:	jmp    430fac <flatcc_json_printer_int16_enum_struct_field@@Base+0xbf>
  430f99:	movsx  ecx,WORD PTR [rbp-0x2]
  430f9d:	mov    rdx,QWORD PTR [rbp-0x18]
  430fa1:	mov    rax,QWORD PTR [rbp+0x10]
  430fa5:	mov    esi,ecx
  430fa7:	mov    rdi,rdx
  430faa:	call   rax
  430fac:	nop
  430fad:	leave  
  430fae:	ret    

0000000000430faf <flatcc_json_printer_int32_enum_struct_field@@Base>:
  430faf:	endbr64 
  430fb3:	push   rbp
  430fb4:	mov    rbp,rsp
  430fb7:	sub    rsp,0x40
  430fbb:	mov    QWORD PTR [rbp-0x18],rdi
  430fbf:	mov    DWORD PTR [rbp-0x1c],esi
  430fc2:	mov    QWORD PTR [rbp-0x28],rdx
  430fc6:	mov    QWORD PTR [rbp-0x30],rcx
  430fca:	mov    QWORD PTR [rbp-0x38],r8
  430fce:	mov    DWORD PTR [rbp-0x20],r9d
  430fd2:	mov    rdx,QWORD PTR [rbp-0x28]
  430fd6:	mov    rax,QWORD PTR [rbp-0x30]
  430fda:	add    rax,rdx
  430fdd:	mov    rdi,rax
  430fe0:	call   42aa64 <flatcc_json_parser_struct_as_root@@Base+0x24f>
  430fe5:	mov    DWORD PTR [rbp-0x4],eax
  430fe8:	cmp    DWORD PTR [rbp-0x1c],0x0
  430fec:	je     431005 <flatcc_json_printer_int32_enum_struct_field@@Base+0x56>
  430fee:	mov    rax,QWORD PTR [rbp-0x18]
  430ff2:	mov    rax,QWORD PTR [rax+0x28]
  430ff6:	lea    rcx,[rax+0x1]
  430ffa:	mov    rdx,QWORD PTR [rbp-0x18]
  430ffe:	mov    QWORD PTR [rdx+0x28],rcx
  431002:	mov    BYTE PTR [rax],0x2c
  431005:	mov    eax,DWORD PTR [rbp-0x20]
  431008:	movsxd rdx,eax
  43100b:	mov    rcx,QWORD PTR [rbp-0x38]
  43100f:	mov    rax,QWORD PTR [rbp-0x18]
  431013:	mov    rsi,rcx
  431016:	mov    rdi,rax
  431019:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  43101e:	mov    rax,QWORD PTR [rbp-0x18]
  431022:	movzx  eax,BYTE PTR [rax+0x33]
  431026:	test   al,al
  431028:	je     431059 <flatcc_json_printer_int32_enum_struct_field@@Base+0xaa>
  43102a:	mov    rax,QWORD PTR [rbp-0x18]
  43102e:	mov    rdx,QWORD PTR [rax+0x28]
  431032:	mov    eax,DWORD PTR [rbp-0x4]
  431035:	mov    rsi,rdx
  431038:	mov    edi,eax
  43103a:	call   42be9b <flatcc_json_parser_struct_as_root@@Base+0x1686>
  43103f:	mov    ecx,eax
  431041:	mov    rax,QWORD PTR [rbp-0x18]
  431045:	mov    rdx,QWORD PTR [rax+0x28]
  431049:	movsxd rax,ecx
  43104c:	add    rdx,rax
  43104f:	mov    rax,QWORD PTR [rbp-0x18]
  431053:	mov    QWORD PTR [rax+0x28],rdx
  431057:	jmp    43106b <flatcc_json_printer_int32_enum_struct_field@@Base+0xbc>
  431059:	mov    ecx,DWORD PTR [rbp-0x4]
  43105c:	mov    rdx,QWORD PTR [rbp-0x18]
  431060:	mov    rax,QWORD PTR [rbp+0x10]
  431064:	mov    esi,ecx
  431066:	mov    rdi,rdx
  431069:	call   rax
  43106b:	nop
  43106c:	leave  
  43106d:	ret    

000000000043106e <flatcc_json_printer_int64_enum_struct_field@@Base>:
  43106e:	endbr64 
  431072:	push   rbp
  431073:	mov    rbp,rsp
  431076:	sub    rsp,0x40
  43107a:	mov    QWORD PTR [rbp-0x18],rdi
  43107e:	mov    DWORD PTR [rbp-0x1c],esi
  431081:	mov    QWORD PTR [rbp-0x28],rdx
  431085:	mov    QWORD PTR [rbp-0x30],rcx
  431089:	mov    QWORD PTR [rbp-0x38],r8
  43108d:	mov    DWORD PTR [rbp-0x20],r9d
  431091:	mov    rdx,QWORD PTR [rbp-0x28]
  431095:	mov    rax,QWORD PTR [rbp-0x30]
  431099:	add    rax,rdx
  43109c:	mov    rdi,rax
  43109f:	call   42aa8d <flatcc_json_parser_struct_as_root@@Base+0x278>
  4310a4:	mov    QWORD PTR [rbp-0x8],rax
  4310a8:	cmp    DWORD PTR [rbp-0x1c],0x0
  4310ac:	je     4310c5 <flatcc_json_printer_int64_enum_struct_field@@Base+0x57>
  4310ae:	mov    rax,QWORD PTR [rbp-0x18]
  4310b2:	mov    rax,QWORD PTR [rax+0x28]
  4310b6:	lea    rcx,[rax+0x1]
  4310ba:	mov    rdx,QWORD PTR [rbp-0x18]
  4310be:	mov    QWORD PTR [rdx+0x28],rcx
  4310c2:	mov    BYTE PTR [rax],0x2c
  4310c5:	mov    eax,DWORD PTR [rbp-0x20]
  4310c8:	movsxd rdx,eax
  4310cb:	mov    rcx,QWORD PTR [rbp-0x38]
  4310cf:	mov    rax,QWORD PTR [rbp-0x18]
  4310d3:	mov    rsi,rcx
  4310d6:	mov    rdi,rax
  4310d9:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  4310de:	mov    rax,QWORD PTR [rbp-0x18]
  4310e2:	movzx  eax,BYTE PTR [rax+0x33]
  4310e6:	test   al,al
  4310e8:	je     43111b <flatcc_json_printer_int64_enum_struct_field@@Base+0xad>
  4310ea:	mov    rax,QWORD PTR [rbp-0x18]
  4310ee:	mov    rdx,QWORD PTR [rax+0x28]
  4310f2:	mov    rax,QWORD PTR [rbp-0x8]
  4310f6:	mov    rsi,rdx
  4310f9:	mov    rdi,rax
  4310fc:	call   42beec <flatcc_json_parser_struct_as_root@@Base+0x16d7>
  431101:	mov    ecx,eax
  431103:	mov    rax,QWORD PTR [rbp-0x18]
  431107:	mov    rdx,QWORD PTR [rax+0x28]
  43110b:	movsxd rax,ecx
  43110e:	add    rdx,rax
  431111:	mov    rax,QWORD PTR [rbp-0x18]
  431115:	mov    QWORD PTR [rax+0x28],rdx
  431119:	jmp    43112f <flatcc_json_printer_int64_enum_struct_field@@Base+0xc1>
  43111b:	mov    rcx,QWORD PTR [rbp-0x8]
  43111f:	mov    rdx,QWORD PTR [rbp-0x18]
  431123:	mov    rax,QWORD PTR [rbp+0x10]
  431127:	mov    rsi,rcx
  43112a:	mov    rdi,rdx
  43112d:	call   rax
  43112f:	nop
  431130:	leave  
  431131:	ret    

0000000000431132 <flatcc_json_printer_bool_enum_struct_field@@Base>:
  431132:	endbr64 
  431136:	push   rbp
  431137:	mov    rbp,rsp
  43113a:	sub    rsp,0x40
  43113e:	mov    QWORD PTR [rbp-0x18],rdi
  431142:	mov    DWORD PTR [rbp-0x1c],esi
  431145:	mov    QWORD PTR [rbp-0x28],rdx
  431149:	mov    QWORD PTR [rbp-0x30],rcx
  43114d:	mov    QWORD PTR [rbp-0x38],r8
  431151:	mov    DWORD PTR [rbp-0x20],r9d
  431155:	mov    rdx,QWORD PTR [rbp-0x28]
  431159:	mov    rax,QWORD PTR [rbp-0x30]
  43115d:	add    rax,rdx
  431160:	mov    rdi,rax
  431163:	call   42ab4b <flatcc_json_parser_struct_as_root@@Base+0x336>
  431168:	mov    BYTE PTR [rbp-0x1],al
  43116b:	cmp    DWORD PTR [rbp-0x1c],0x0
  43116f:	je     431188 <flatcc_json_printer_bool_enum_struct_field@@Base+0x56>
  431171:	mov    rax,QWORD PTR [rbp-0x18]
  431175:	mov    rax,QWORD PTR [rax+0x28]
  431179:	lea    rcx,[rax+0x1]
  43117d:	mov    rdx,QWORD PTR [rbp-0x18]
  431181:	mov    QWORD PTR [rdx+0x28],rcx
  431185:	mov    BYTE PTR [rax],0x2c
  431188:	mov    eax,DWORD PTR [rbp-0x20]
  43118b:	movsxd rdx,eax
  43118e:	mov    rcx,QWORD PTR [rbp-0x38]
  431192:	mov    rax,QWORD PTR [rbp-0x18]
  431196:	mov    rsi,rcx
  431199:	mov    rdi,rax
  43119c:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  4311a1:	mov    rax,QWORD PTR [rbp-0x18]
  4311a5:	movzx  eax,BYTE PTR [rax+0x33]
  4311a9:	test   al,al
  4311ab:	je     4311dd <flatcc_json_printer_bool_enum_struct_field@@Base+0xab>
  4311ad:	mov    rax,QWORD PTR [rbp-0x18]
  4311b1:	mov    rdx,QWORD PTR [rax+0x28]
  4311b5:	movzx  eax,BYTE PTR [rbp-0x1]
  4311b9:	mov    rsi,rdx
  4311bc:	mov    edi,eax
  4311be:	call   42acb6 <flatcc_json_parser_struct_as_root@@Base+0x4a1>
  4311c3:	mov    ecx,eax
  4311c5:	mov    rax,QWORD PTR [rbp-0x18]
  4311c9:	mov    rdx,QWORD PTR [rax+0x28]
  4311cd:	movsxd rax,ecx
  4311d0:	add    rdx,rax
  4311d3:	mov    rax,QWORD PTR [rbp-0x18]
  4311d7:	mov    QWORD PTR [rax+0x28],rdx
  4311db:	jmp    4311f0 <flatcc_json_printer_bool_enum_struct_field@@Base+0xbe>
  4311dd:	movzx  ecx,BYTE PTR [rbp-0x1]
  4311e1:	mov    rdx,QWORD PTR [rbp-0x18]
  4311e5:	mov    rax,QWORD PTR [rbp+0x10]
  4311e9:	mov    esi,ecx
  4311eb:	mov    rdi,rdx
  4311ee:	call   rax
  4311f0:	nop
  4311f1:	leave  
  4311f2:	ret    

00000000004311f3 <flatcc_json_printer_utype_vector_field@@Base>:
  4311f3:	endbr64 
  4311f7:	push   rbp
  4311f8:	mov    rbp,rsp
  4311fb:	push   rbx
  4311fc:	sub    rsp,0x38
  431200:	mov    QWORD PTR [rbp-0x28],rdi
  431204:	mov    QWORD PTR [rbp-0x30],rsi
  431208:	mov    DWORD PTR [rbp-0x34],edx
  43120b:	mov    QWORD PTR [rbp-0x40],rcx
  43120f:	mov    DWORD PTR [rbp-0x38],r8d
  431213:	mov    edx,DWORD PTR [rbp-0x34]
  431216:	mov    rax,QWORD PTR [rbp-0x30]
  43121a:	mov    esi,edx
  43121c:	mov    rdi,rax
  43121f:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  431224:	mov    QWORD PTR [rbp-0x18],rax
  431228:	cmp    QWORD PTR [rbp-0x18],0x0
  43122d:	je     43145e <flatcc_json_printer_utype_vector_field@@Base+0x26b>
  431233:	mov    rax,QWORD PTR [rbp-0x30]
  431237:	mov    eax,DWORD PTR [rax+0x18]
  43123a:	lea    ecx,[rax+0x1]
  43123d:	mov    rdx,QWORD PTR [rbp-0x30]
  431241:	mov    DWORD PTR [rdx+0x18],ecx
  431244:	test   eax,eax
  431246:	je     43125f <flatcc_json_printer_utype_vector_field@@Base+0x6c>
  431248:	mov    rax,QWORD PTR [rbp-0x28]
  43124c:	mov    rax,QWORD PTR [rax+0x28]
  431250:	lea    rcx,[rax+0x1]
  431254:	mov    rdx,QWORD PTR [rbp-0x28]
  431258:	mov    QWORD PTR [rdx+0x28],rcx
  43125c:	mov    BYTE PTR [rax],0x2c
  43125f:	mov    rax,QWORD PTR [rbp-0x18]
  431263:	mov    rdi,rax
  431266:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  43126b:	mov    QWORD PTR [rbp-0x18],rax
  43126f:	mov    rax,QWORD PTR [rbp-0x18]
  431273:	mov    rdi,rax
  431276:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  43127b:	mov    DWORD PTR [rbp-0x1c],eax
  43127e:	mov    rax,QWORD PTR [rbp-0x18]
  431282:	add    rax,0x4
  431286:	mov    QWORD PTR [rbp-0x18],rax
  43128a:	mov    eax,DWORD PTR [rbp-0x38]
  43128d:	movsxd rdx,eax
  431290:	mov    rcx,QWORD PTR [rbp-0x40]
  431294:	mov    rax,QWORD PTR [rbp-0x28]
  431298:	mov    rsi,rcx
  43129b:	mov    rdi,rax
  43129e:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  4312a3:	mov    rax,QWORD PTR [rbp-0x28]
  4312a7:	mov    eax,DWORD PTR [rax+0x38]
  4312aa:	lea    edx,[rax+0x1]
  4312ad:	mov    rax,QWORD PTR [rbp-0x28]
  4312b1:	mov    DWORD PTR [rax+0x38],edx
  4312b4:	mov    rax,QWORD PTR [rbp-0x28]
  4312b8:	mov    rax,QWORD PTR [rax+0x28]
  4312bc:	lea    rcx,[rax+0x1]
  4312c0:	mov    rdx,QWORD PTR [rbp-0x28]
  4312c4:	mov    QWORD PTR [rdx+0x28],rcx
  4312c8:	mov    BYTE PTR [rax],0x5b
  4312cb:	cmp    DWORD PTR [rbp-0x1c],0x0
  4312cf:	je     4313f6 <flatcc_json_printer_utype_vector_field@@Base+0x203>
  4312d5:	mov    rax,QWORD PTR [rbp-0x28]
  4312d9:	movzx  eax,BYTE PTR [rax+0x31]
  4312dd:	test   al,al
  4312df:	je     431306 <flatcc_json_printer_utype_vector_field@@Base+0x113>
  4312e1:	mov    rax,QWORD PTR [rbp-0x28]
  4312e5:	mov    rax,QWORD PTR [rax+0x28]
  4312e9:	lea    rcx,[rax+0x1]
  4312ed:	mov    rdx,QWORD PTR [rbp-0x28]
  4312f1:	mov    QWORD PTR [rdx+0x28],rcx
  4312f5:	mov    BYTE PTR [rax],0xa
  4312f8:	mov    rax,QWORD PTR [rbp-0x28]
  4312fc:	mov    rdi,rax
  4312ff:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431304:	jmp    431312 <flatcc_json_printer_utype_vector_field@@Base+0x11f>
  431306:	mov    rax,QWORD PTR [rbp-0x28]
  43130a:	mov    rdi,rax
  43130d:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  431312:	mov    rax,QWORD PTR [rbp-0x28]
  431316:	mov    rbx,QWORD PTR [rax+0x28]
  43131a:	mov    rax,QWORD PTR [rbp-0x18]
  43131e:	mov    rdi,rax
  431321:	call   42abf6 <flatcc_json_parser_struct_as_root@@Base+0x3e1>
  431326:	movzx  eax,al
  431329:	mov    rsi,rbx
  43132c:	mov    edi,eax
  43132e:	call   42ad0d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  431333:	mov    ecx,eax
  431335:	mov    rax,QWORD PTR [rbp-0x28]
  431339:	mov    rdx,QWORD PTR [rax+0x28]
  43133d:	movsxd rax,ecx
  431340:	add    rdx,rax
  431343:	mov    rax,QWORD PTR [rbp-0x28]
  431347:	mov    QWORD PTR [rax+0x28],rdx
  43134b:	mov    rax,QWORD PTR [rbp-0x18]
  43134f:	inc    rax
  431352:	mov    QWORD PTR [rbp-0x18],rax
  431356:	dec    DWORD PTR [rbp-0x1c]
  431359:	jmp    4313f6 <flatcc_json_printer_utype_vector_field@@Base+0x203>
  43135e:	mov    rax,QWORD PTR [rbp-0x28]
  431362:	mov    rax,QWORD PTR [rax+0x28]
  431366:	lea    rcx,[rax+0x1]
  43136a:	mov    rdx,QWORD PTR [rbp-0x28]
  43136e:	mov    QWORD PTR [rdx+0x28],rcx
  431372:	mov    BYTE PTR [rax],0x2c
  431375:	mov    rax,QWORD PTR [rbp-0x28]
  431379:	movzx  eax,BYTE PTR [rax+0x31]
  43137d:	test   al,al
  43137f:	je     4313a6 <flatcc_json_printer_utype_vector_field@@Base+0x1b3>
  431381:	mov    rax,QWORD PTR [rbp-0x28]
  431385:	mov    rax,QWORD PTR [rax+0x28]
  431389:	lea    rcx,[rax+0x1]
  43138d:	mov    rdx,QWORD PTR [rbp-0x28]
  431391:	mov    QWORD PTR [rdx+0x28],rcx
  431395:	mov    BYTE PTR [rax],0xa
  431398:	mov    rax,QWORD PTR [rbp-0x28]
  43139c:	mov    rdi,rax
  43139f:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4313a4:	jmp    4313b2 <flatcc_json_printer_utype_vector_field@@Base+0x1bf>
  4313a6:	mov    rax,QWORD PTR [rbp-0x28]
  4313aa:	mov    rdi,rax
  4313ad:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4313b2:	mov    rax,QWORD PTR [rbp-0x28]
  4313b6:	mov    rbx,QWORD PTR [rax+0x28]
  4313ba:	mov    rax,QWORD PTR [rbp-0x18]
  4313be:	mov    rdi,rax
  4313c1:	call   42abf6 <flatcc_json_parser_struct_as_root@@Base+0x3e1>
  4313c6:	movzx  eax,al
  4313c9:	mov    rsi,rbx
  4313cc:	mov    edi,eax
  4313ce:	call   42ad0d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  4313d3:	mov    ecx,eax
  4313d5:	mov    rax,QWORD PTR [rbp-0x28]
  4313d9:	mov    rdx,QWORD PTR [rax+0x28]
  4313dd:	movsxd rax,ecx
  4313e0:	add    rdx,rax
  4313e3:	mov    rax,QWORD PTR [rbp-0x28]
  4313e7:	mov    QWORD PTR [rax+0x28],rdx
  4313eb:	mov    rax,QWORD PTR [rbp-0x18]
  4313ef:	inc    rax
  4313f2:	mov    QWORD PTR [rbp-0x18],rax
  4313f6:	mov    eax,DWORD PTR [rbp-0x1c]
  4313f9:	lea    edx,[rax-0x1]
  4313fc:	mov    DWORD PTR [rbp-0x1c],edx
  4313ff:	test   eax,eax
  431401:	jne    43135e <flatcc_json_printer_utype_vector_field@@Base+0x16b>
  431407:	mov    rax,QWORD PTR [rbp-0x28]
  43140b:	movzx  eax,BYTE PTR [rax+0x31]
  43140f:	test   al,al
  431411:	je     431447 <flatcc_json_printer_utype_vector_field@@Base+0x254>
  431413:	mov    rax,QWORD PTR [rbp-0x28]
  431417:	mov    rax,QWORD PTR [rax+0x28]
  43141b:	lea    rcx,[rax+0x1]
  43141f:	mov    rdx,QWORD PTR [rbp-0x28]
  431423:	mov    QWORD PTR [rdx+0x28],rcx
  431427:	mov    BYTE PTR [rax],0xa
  43142a:	mov    rax,QWORD PTR [rbp-0x28]
  43142e:	mov    eax,DWORD PTR [rax+0x38]
  431431:	lea    edx,[rax-0x1]
  431434:	mov    rax,QWORD PTR [rbp-0x28]
  431438:	mov    DWORD PTR [rax+0x38],edx
  43143b:	mov    rax,QWORD PTR [rbp-0x28]
  43143f:	mov    rdi,rax
  431442:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431447:	mov    rax,QWORD PTR [rbp-0x28]
  43144b:	mov    rax,QWORD PTR [rax+0x28]
  43144f:	lea    rcx,[rax+0x1]
  431453:	mov    rdx,QWORD PTR [rbp-0x28]
  431457:	mov    QWORD PTR [rdx+0x28],rcx
  43145b:	mov    BYTE PTR [rax],0x5d
  43145e:	nop
  43145f:	add    rsp,0x38
  431463:	pop    rbx
  431464:	pop    rbp
  431465:	ret    

0000000000431466 <flatcc_json_printer_uint8_vector_field@@Base>:
  431466:	endbr64 
  43146a:	push   rbp
  43146b:	mov    rbp,rsp
  43146e:	push   rbx
  43146f:	sub    rsp,0x38
  431473:	mov    QWORD PTR [rbp-0x28],rdi
  431477:	mov    QWORD PTR [rbp-0x30],rsi
  43147b:	mov    DWORD PTR [rbp-0x34],edx
  43147e:	mov    QWORD PTR [rbp-0x40],rcx
  431482:	mov    DWORD PTR [rbp-0x38],r8d
  431486:	mov    edx,DWORD PTR [rbp-0x34]
  431489:	mov    rax,QWORD PTR [rbp-0x30]
  43148d:	mov    esi,edx
  43148f:	mov    rdi,rax
  431492:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  431497:	mov    QWORD PTR [rbp-0x18],rax
  43149b:	cmp    QWORD PTR [rbp-0x18],0x0
  4314a0:	je     4316d1 <flatcc_json_printer_uint8_vector_field@@Base+0x26b>
  4314a6:	mov    rax,QWORD PTR [rbp-0x30]
  4314aa:	mov    eax,DWORD PTR [rax+0x18]
  4314ad:	lea    ecx,[rax+0x1]
  4314b0:	mov    rdx,QWORD PTR [rbp-0x30]
  4314b4:	mov    DWORD PTR [rdx+0x18],ecx
  4314b7:	test   eax,eax
  4314b9:	je     4314d2 <flatcc_json_printer_uint8_vector_field@@Base+0x6c>
  4314bb:	mov    rax,QWORD PTR [rbp-0x28]
  4314bf:	mov    rax,QWORD PTR [rax+0x28]
  4314c3:	lea    rcx,[rax+0x1]
  4314c7:	mov    rdx,QWORD PTR [rbp-0x28]
  4314cb:	mov    QWORD PTR [rdx+0x28],rcx
  4314cf:	mov    BYTE PTR [rax],0x2c
  4314d2:	mov    rax,QWORD PTR [rbp-0x18]
  4314d6:	mov    rdi,rax
  4314d9:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  4314de:	mov    QWORD PTR [rbp-0x18],rax
  4314e2:	mov    rax,QWORD PTR [rbp-0x18]
  4314e6:	mov    rdi,rax
  4314e9:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  4314ee:	mov    DWORD PTR [rbp-0x1c],eax
  4314f1:	mov    rax,QWORD PTR [rbp-0x18]
  4314f5:	add    rax,0x4
  4314f9:	mov    QWORD PTR [rbp-0x18],rax
  4314fd:	mov    eax,DWORD PTR [rbp-0x38]
  431500:	movsxd rdx,eax
  431503:	mov    rcx,QWORD PTR [rbp-0x40]
  431507:	mov    rax,QWORD PTR [rbp-0x28]
  43150b:	mov    rsi,rcx
  43150e:	mov    rdi,rax
  431511:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  431516:	mov    rax,QWORD PTR [rbp-0x28]
  43151a:	mov    eax,DWORD PTR [rax+0x38]
  43151d:	lea    edx,[rax+0x1]
  431520:	mov    rax,QWORD PTR [rbp-0x28]
  431524:	mov    DWORD PTR [rax+0x38],edx
  431527:	mov    rax,QWORD PTR [rbp-0x28]
  43152b:	mov    rax,QWORD PTR [rax+0x28]
  43152f:	lea    rcx,[rax+0x1]
  431533:	mov    rdx,QWORD PTR [rbp-0x28]
  431537:	mov    QWORD PTR [rdx+0x28],rcx
  43153b:	mov    BYTE PTR [rax],0x5b
  43153e:	cmp    DWORD PTR [rbp-0x1c],0x0
  431542:	je     431669 <flatcc_json_printer_uint8_vector_field@@Base+0x203>
  431548:	mov    rax,QWORD PTR [rbp-0x28]
  43154c:	movzx  eax,BYTE PTR [rax+0x31]
  431550:	test   al,al
  431552:	je     431579 <flatcc_json_printer_uint8_vector_field@@Base+0x113>
  431554:	mov    rax,QWORD PTR [rbp-0x28]
  431558:	mov    rax,QWORD PTR [rax+0x28]
  43155c:	lea    rcx,[rax+0x1]
  431560:	mov    rdx,QWORD PTR [rbp-0x28]
  431564:	mov    QWORD PTR [rdx+0x28],rcx
  431568:	mov    BYTE PTR [rax],0xa
  43156b:	mov    rax,QWORD PTR [rbp-0x28]
  43156f:	mov    rdi,rax
  431572:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431577:	jmp    431585 <flatcc_json_printer_uint8_vector_field@@Base+0x11f>
  431579:	mov    rax,QWORD PTR [rbp-0x28]
  43157d:	mov    rdi,rax
  431580:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  431585:	mov    rax,QWORD PTR [rbp-0x28]
  431589:	mov    rbx,QWORD PTR [rax+0x28]
  43158d:	mov    rax,QWORD PTR [rbp-0x18]
  431591:	mov    rdi,rax
  431594:	call   42a95d <flatcc_json_parser_struct_as_root@@Base+0x148>
  431599:	movzx  eax,al
  43159c:	mov    rsi,rbx
  43159f:	mov    edi,eax
  4315a1:	call   42ad0d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  4315a6:	mov    ecx,eax
  4315a8:	mov    rax,QWORD PTR [rbp-0x28]
  4315ac:	mov    rdx,QWORD PTR [rax+0x28]
  4315b0:	movsxd rax,ecx
  4315b3:	add    rdx,rax
  4315b6:	mov    rax,QWORD PTR [rbp-0x28]
  4315ba:	mov    QWORD PTR [rax+0x28],rdx
  4315be:	mov    rax,QWORD PTR [rbp-0x18]
  4315c2:	inc    rax
  4315c5:	mov    QWORD PTR [rbp-0x18],rax
  4315c9:	dec    DWORD PTR [rbp-0x1c]
  4315cc:	jmp    431669 <flatcc_json_printer_uint8_vector_field@@Base+0x203>
  4315d1:	mov    rax,QWORD PTR [rbp-0x28]
  4315d5:	mov    rax,QWORD PTR [rax+0x28]
  4315d9:	lea    rcx,[rax+0x1]
  4315dd:	mov    rdx,QWORD PTR [rbp-0x28]
  4315e1:	mov    QWORD PTR [rdx+0x28],rcx
  4315e5:	mov    BYTE PTR [rax],0x2c
  4315e8:	mov    rax,QWORD PTR [rbp-0x28]
  4315ec:	movzx  eax,BYTE PTR [rax+0x31]
  4315f0:	test   al,al
  4315f2:	je     431619 <flatcc_json_printer_uint8_vector_field@@Base+0x1b3>
  4315f4:	mov    rax,QWORD PTR [rbp-0x28]
  4315f8:	mov    rax,QWORD PTR [rax+0x28]
  4315fc:	lea    rcx,[rax+0x1]
  431600:	mov    rdx,QWORD PTR [rbp-0x28]
  431604:	mov    QWORD PTR [rdx+0x28],rcx
  431608:	mov    BYTE PTR [rax],0xa
  43160b:	mov    rax,QWORD PTR [rbp-0x28]
  43160f:	mov    rdi,rax
  431612:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431617:	jmp    431625 <flatcc_json_printer_uint8_vector_field@@Base+0x1bf>
  431619:	mov    rax,QWORD PTR [rbp-0x28]
  43161d:	mov    rdi,rax
  431620:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  431625:	mov    rax,QWORD PTR [rbp-0x28]
  431629:	mov    rbx,QWORD PTR [rax+0x28]
  43162d:	mov    rax,QWORD PTR [rbp-0x18]
  431631:	mov    rdi,rax
  431634:	call   42a95d <flatcc_json_parser_struct_as_root@@Base+0x148>
  431639:	movzx  eax,al
  43163c:	mov    rsi,rbx
  43163f:	mov    edi,eax
  431641:	call   42ad0d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  431646:	mov    ecx,eax
  431648:	mov    rax,QWORD PTR [rbp-0x28]
  43164c:	mov    rdx,QWORD PTR [rax+0x28]
  431650:	movsxd rax,ecx
  431653:	add    rdx,rax
  431656:	mov    rax,QWORD PTR [rbp-0x28]
  43165a:	mov    QWORD PTR [rax+0x28],rdx
  43165e:	mov    rax,QWORD PTR [rbp-0x18]
  431662:	inc    rax
  431665:	mov    QWORD PTR [rbp-0x18],rax
  431669:	mov    eax,DWORD PTR [rbp-0x1c]
  43166c:	lea    edx,[rax-0x1]
  43166f:	mov    DWORD PTR [rbp-0x1c],edx
  431672:	test   eax,eax
  431674:	jne    4315d1 <flatcc_json_printer_uint8_vector_field@@Base+0x16b>
  43167a:	mov    rax,QWORD PTR [rbp-0x28]
  43167e:	movzx  eax,BYTE PTR [rax+0x31]
  431682:	test   al,al
  431684:	je     4316ba <flatcc_json_printer_uint8_vector_field@@Base+0x254>
  431686:	mov    rax,QWORD PTR [rbp-0x28]
  43168a:	mov    rax,QWORD PTR [rax+0x28]
  43168e:	lea    rcx,[rax+0x1]
  431692:	mov    rdx,QWORD PTR [rbp-0x28]
  431696:	mov    QWORD PTR [rdx+0x28],rcx
  43169a:	mov    BYTE PTR [rax],0xa
  43169d:	mov    rax,QWORD PTR [rbp-0x28]
  4316a1:	mov    eax,DWORD PTR [rax+0x38]
  4316a4:	lea    edx,[rax-0x1]
  4316a7:	mov    rax,QWORD PTR [rbp-0x28]
  4316ab:	mov    DWORD PTR [rax+0x38],edx
  4316ae:	mov    rax,QWORD PTR [rbp-0x28]
  4316b2:	mov    rdi,rax
  4316b5:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4316ba:	mov    rax,QWORD PTR [rbp-0x28]
  4316be:	mov    rax,QWORD PTR [rax+0x28]
  4316c2:	lea    rcx,[rax+0x1]
  4316c6:	mov    rdx,QWORD PTR [rbp-0x28]
  4316ca:	mov    QWORD PTR [rdx+0x28],rcx
  4316ce:	mov    BYTE PTR [rax],0x5d
  4316d1:	nop
  4316d2:	add    rsp,0x38
  4316d6:	pop    rbx
  4316d7:	pop    rbp
  4316d8:	ret    

00000000004316d9 <flatcc_json_printer_uint16_vector_field@@Base>:
  4316d9:	endbr64 
  4316dd:	push   rbp
  4316de:	mov    rbp,rsp
  4316e1:	push   rbx
  4316e2:	sub    rsp,0x38
  4316e6:	mov    QWORD PTR [rbp-0x28],rdi
  4316ea:	mov    QWORD PTR [rbp-0x30],rsi
  4316ee:	mov    DWORD PTR [rbp-0x34],edx
  4316f1:	mov    QWORD PTR [rbp-0x40],rcx
  4316f5:	mov    DWORD PTR [rbp-0x38],r8d
  4316f9:	mov    edx,DWORD PTR [rbp-0x34]
  4316fc:	mov    rax,QWORD PTR [rbp-0x30]
  431700:	mov    esi,edx
  431702:	mov    rdi,rax
  431705:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  43170a:	mov    QWORD PTR [rbp-0x18],rax
  43170e:	cmp    QWORD PTR [rbp-0x18],0x0
  431713:	je     431946 <flatcc_json_printer_uint16_vector_field@@Base+0x26d>
  431719:	mov    rax,QWORD PTR [rbp-0x30]
  43171d:	mov    eax,DWORD PTR [rax+0x18]
  431720:	lea    ecx,[rax+0x1]
  431723:	mov    rdx,QWORD PTR [rbp-0x30]
  431727:	mov    DWORD PTR [rdx+0x18],ecx
  43172a:	test   eax,eax
  43172c:	je     431745 <flatcc_json_printer_uint16_vector_field@@Base+0x6c>
  43172e:	mov    rax,QWORD PTR [rbp-0x28]
  431732:	mov    rax,QWORD PTR [rax+0x28]
  431736:	lea    rcx,[rax+0x1]
  43173a:	mov    rdx,QWORD PTR [rbp-0x28]
  43173e:	mov    QWORD PTR [rdx+0x28],rcx
  431742:	mov    BYTE PTR [rax],0x2c
  431745:	mov    rax,QWORD PTR [rbp-0x18]
  431749:	mov    rdi,rax
  43174c:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  431751:	mov    QWORD PTR [rbp-0x18],rax
  431755:	mov    rax,QWORD PTR [rbp-0x18]
  431759:	mov    rdi,rax
  43175c:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  431761:	mov    DWORD PTR [rbp-0x1c],eax
  431764:	mov    rax,QWORD PTR [rbp-0x18]
  431768:	add    rax,0x4
  43176c:	mov    QWORD PTR [rbp-0x18],rax
  431770:	mov    eax,DWORD PTR [rbp-0x38]
  431773:	movsxd rdx,eax
  431776:	mov    rcx,QWORD PTR [rbp-0x40]
  43177a:	mov    rax,QWORD PTR [rbp-0x28]
  43177e:	mov    rsi,rcx
  431781:	mov    rdi,rax
  431784:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  431789:	mov    rax,QWORD PTR [rbp-0x28]
  43178d:	mov    eax,DWORD PTR [rax+0x38]
  431790:	lea    edx,[rax+0x1]
  431793:	mov    rax,QWORD PTR [rbp-0x28]
  431797:	mov    DWORD PTR [rax+0x38],edx
  43179a:	mov    rax,QWORD PTR [rbp-0x28]
  43179e:	mov    rax,QWORD PTR [rax+0x28]
  4317a2:	lea    rcx,[rax+0x1]
  4317a6:	mov    rdx,QWORD PTR [rbp-0x28]
  4317aa:	mov    QWORD PTR [rdx+0x28],rcx
  4317ae:	mov    BYTE PTR [rax],0x5b
  4317b1:	cmp    DWORD PTR [rbp-0x1c],0x0
  4317b5:	je     4318de <flatcc_json_printer_uint16_vector_field@@Base+0x205>
  4317bb:	mov    rax,QWORD PTR [rbp-0x28]
  4317bf:	movzx  eax,BYTE PTR [rax+0x31]
  4317c3:	test   al,al
  4317c5:	je     4317ec <flatcc_json_printer_uint16_vector_field@@Base+0x113>
  4317c7:	mov    rax,QWORD PTR [rbp-0x28]
  4317cb:	mov    rax,QWORD PTR [rax+0x28]
  4317cf:	lea    rcx,[rax+0x1]
  4317d3:	mov    rdx,QWORD PTR [rbp-0x28]
  4317d7:	mov    QWORD PTR [rdx+0x28],rcx
  4317db:	mov    BYTE PTR [rax],0xa
  4317de:	mov    rax,QWORD PTR [rbp-0x28]
  4317e2:	mov    rdi,rax
  4317e5:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4317ea:	jmp    4317f8 <flatcc_json_printer_uint16_vector_field@@Base+0x11f>
  4317ec:	mov    rax,QWORD PTR [rbp-0x28]
  4317f0:	mov    rdi,rax
  4317f3:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4317f8:	mov    rax,QWORD PTR [rbp-0x28]
  4317fc:	mov    rbx,QWORD PTR [rax+0x28]
  431800:	mov    rax,QWORD PTR [rbp-0x18]
  431804:	mov    rdi,rax
  431807:	call   42a98c <flatcc_json_parser_struct_as_root@@Base+0x177>
  43180c:	movzx  eax,ax
  43180f:	mov    rsi,rbx
  431812:	mov    edi,eax
  431814:	call   42ae5f <flatcc_json_parser_struct_as_root@@Base+0x64a>
  431819:	mov    ecx,eax
  43181b:	mov    rax,QWORD PTR [rbp-0x28]
  43181f:	mov    rdx,QWORD PTR [rax+0x28]
  431823:	movsxd rax,ecx
  431826:	add    rdx,rax
  431829:	mov    rax,QWORD PTR [rbp-0x28]
  43182d:	mov    QWORD PTR [rax+0x28],rdx
  431831:	mov    rax,QWORD PTR [rbp-0x18]
  431835:	add    rax,0x2
  431839:	mov    QWORD PTR [rbp-0x18],rax
  43183d:	dec    DWORD PTR [rbp-0x1c]
  431840:	jmp    4318de <flatcc_json_printer_uint16_vector_field@@Base+0x205>
  431845:	mov    rax,QWORD PTR [rbp-0x28]
  431849:	mov    rax,QWORD PTR [rax+0x28]
  43184d:	lea    rcx,[rax+0x1]
  431851:	mov    rdx,QWORD PTR [rbp-0x28]
  431855:	mov    QWORD PTR [rdx+0x28],rcx
  431859:	mov    BYTE PTR [rax],0x2c
  43185c:	mov    rax,QWORD PTR [rbp-0x28]
  431860:	movzx  eax,BYTE PTR [rax+0x31]
  431864:	test   al,al
  431866:	je     43188d <flatcc_json_printer_uint16_vector_field@@Base+0x1b4>
  431868:	mov    rax,QWORD PTR [rbp-0x28]
  43186c:	mov    rax,QWORD PTR [rax+0x28]
  431870:	lea    rcx,[rax+0x1]
  431874:	mov    rdx,QWORD PTR [rbp-0x28]
  431878:	mov    QWORD PTR [rdx+0x28],rcx
  43187c:	mov    BYTE PTR [rax],0xa
  43187f:	mov    rax,QWORD PTR [rbp-0x28]
  431883:	mov    rdi,rax
  431886:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43188b:	jmp    431899 <flatcc_json_printer_uint16_vector_field@@Base+0x1c0>
  43188d:	mov    rax,QWORD PTR [rbp-0x28]
  431891:	mov    rdi,rax
  431894:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  431899:	mov    rax,QWORD PTR [rbp-0x28]
  43189d:	mov    rbx,QWORD PTR [rax+0x28]
  4318a1:	mov    rax,QWORD PTR [rbp-0x18]
  4318a5:	mov    rdi,rax
  4318a8:	call   42a98c <flatcc_json_parser_struct_as_root@@Base+0x177>
  4318ad:	movzx  eax,ax
  4318b0:	mov    rsi,rbx
  4318b3:	mov    edi,eax
  4318b5:	call   42ae5f <flatcc_json_parser_struct_as_root@@Base+0x64a>
  4318ba:	mov    ecx,eax
  4318bc:	mov    rax,QWORD PTR [rbp-0x28]
  4318c0:	mov    rdx,QWORD PTR [rax+0x28]
  4318c4:	movsxd rax,ecx
  4318c7:	add    rdx,rax
  4318ca:	mov    rax,QWORD PTR [rbp-0x28]
  4318ce:	mov    QWORD PTR [rax+0x28],rdx
  4318d2:	mov    rax,QWORD PTR [rbp-0x18]
  4318d6:	add    rax,0x2
  4318da:	mov    QWORD PTR [rbp-0x18],rax
  4318de:	mov    eax,DWORD PTR [rbp-0x1c]
  4318e1:	lea    edx,[rax-0x1]
  4318e4:	mov    DWORD PTR [rbp-0x1c],edx
  4318e7:	test   eax,eax
  4318e9:	jne    431845 <flatcc_json_printer_uint16_vector_field@@Base+0x16c>
  4318ef:	mov    rax,QWORD PTR [rbp-0x28]
  4318f3:	movzx  eax,BYTE PTR [rax+0x31]
  4318f7:	test   al,al
  4318f9:	je     43192f <flatcc_json_printer_uint16_vector_field@@Base+0x256>
  4318fb:	mov    rax,QWORD PTR [rbp-0x28]
  4318ff:	mov    rax,QWORD PTR [rax+0x28]
  431903:	lea    rcx,[rax+0x1]
  431907:	mov    rdx,QWORD PTR [rbp-0x28]
  43190b:	mov    QWORD PTR [rdx+0x28],rcx
  43190f:	mov    BYTE PTR [rax],0xa
  431912:	mov    rax,QWORD PTR [rbp-0x28]
  431916:	mov    eax,DWORD PTR [rax+0x38]
  431919:	lea    edx,[rax-0x1]
  43191c:	mov    rax,QWORD PTR [rbp-0x28]
  431920:	mov    DWORD PTR [rax+0x38],edx
  431923:	mov    rax,QWORD PTR [rbp-0x28]
  431927:	mov    rdi,rax
  43192a:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43192f:	mov    rax,QWORD PTR [rbp-0x28]
  431933:	mov    rax,QWORD PTR [rax+0x28]
  431937:	lea    rcx,[rax+0x1]
  43193b:	mov    rdx,QWORD PTR [rbp-0x28]
  43193f:	mov    QWORD PTR [rdx+0x28],rcx
  431943:	mov    BYTE PTR [rax],0x5d
  431946:	nop
  431947:	add    rsp,0x38
  43194b:	pop    rbx
  43194c:	pop    rbp
  43194d:	ret    

000000000043194e <flatcc_json_printer_uint32_vector_field@@Base>:
  43194e:	endbr64 
  431952:	push   rbp
  431953:	mov    rbp,rsp
  431956:	push   rbx
  431957:	sub    rsp,0x38
  43195b:	mov    QWORD PTR [rbp-0x28],rdi
  43195f:	mov    QWORD PTR [rbp-0x30],rsi
  431963:	mov    DWORD PTR [rbp-0x34],edx
  431966:	mov    QWORD PTR [rbp-0x40],rcx
  43196a:	mov    DWORD PTR [rbp-0x38],r8d
  43196e:	mov    edx,DWORD PTR [rbp-0x34]
  431971:	mov    rax,QWORD PTR [rbp-0x30]
  431975:	mov    esi,edx
  431977:	mov    rdi,rax
  43197a:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  43197f:	mov    QWORD PTR [rbp-0x18],rax
  431983:	cmp    QWORD PTR [rbp-0x18],0x0
  431988:	je     431bb5 <flatcc_json_printer_uint32_vector_field@@Base+0x267>
  43198e:	mov    rax,QWORD PTR [rbp-0x30]
  431992:	mov    eax,DWORD PTR [rax+0x18]
  431995:	lea    ecx,[rax+0x1]
  431998:	mov    rdx,QWORD PTR [rbp-0x30]
  43199c:	mov    DWORD PTR [rdx+0x18],ecx
  43199f:	test   eax,eax
  4319a1:	je     4319ba <flatcc_json_printer_uint32_vector_field@@Base+0x6c>
  4319a3:	mov    rax,QWORD PTR [rbp-0x28]
  4319a7:	mov    rax,QWORD PTR [rax+0x28]
  4319ab:	lea    rcx,[rax+0x1]
  4319af:	mov    rdx,QWORD PTR [rbp-0x28]
  4319b3:	mov    QWORD PTR [rdx+0x28],rcx
  4319b7:	mov    BYTE PTR [rax],0x2c
  4319ba:	mov    rax,QWORD PTR [rbp-0x18]
  4319be:	mov    rdi,rax
  4319c1:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  4319c6:	mov    QWORD PTR [rbp-0x18],rax
  4319ca:	mov    rax,QWORD PTR [rbp-0x18]
  4319ce:	mov    rdi,rax
  4319d1:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  4319d6:	mov    DWORD PTR [rbp-0x1c],eax
  4319d9:	mov    rax,QWORD PTR [rbp-0x18]
  4319dd:	add    rax,0x4
  4319e1:	mov    QWORD PTR [rbp-0x18],rax
  4319e5:	mov    eax,DWORD PTR [rbp-0x38]
  4319e8:	movsxd rdx,eax
  4319eb:	mov    rcx,QWORD PTR [rbp-0x40]
  4319ef:	mov    rax,QWORD PTR [rbp-0x28]
  4319f3:	mov    rsi,rcx
  4319f6:	mov    rdi,rax
  4319f9:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  4319fe:	mov    rax,QWORD PTR [rbp-0x28]
  431a02:	mov    eax,DWORD PTR [rax+0x38]
  431a05:	lea    edx,[rax+0x1]
  431a08:	mov    rax,QWORD PTR [rbp-0x28]
  431a0c:	mov    DWORD PTR [rax+0x38],edx
  431a0f:	mov    rax,QWORD PTR [rbp-0x28]
  431a13:	mov    rax,QWORD PTR [rax+0x28]
  431a17:	lea    rcx,[rax+0x1]
  431a1b:	mov    rdx,QWORD PTR [rbp-0x28]
  431a1f:	mov    QWORD PTR [rdx+0x28],rcx
  431a23:	mov    BYTE PTR [rax],0x5b
  431a26:	cmp    DWORD PTR [rbp-0x1c],0x0
  431a2a:	je     431b4d <flatcc_json_printer_uint32_vector_field@@Base+0x1ff>
  431a30:	mov    rax,QWORD PTR [rbp-0x28]
  431a34:	movzx  eax,BYTE PTR [rax+0x31]
  431a38:	test   al,al
  431a3a:	je     431a61 <flatcc_json_printer_uint32_vector_field@@Base+0x113>
  431a3c:	mov    rax,QWORD PTR [rbp-0x28]
  431a40:	mov    rax,QWORD PTR [rax+0x28]
  431a44:	lea    rcx,[rax+0x1]
  431a48:	mov    rdx,QWORD PTR [rbp-0x28]
  431a4c:	mov    QWORD PTR [rdx+0x28],rcx
  431a50:	mov    BYTE PTR [rax],0xa
  431a53:	mov    rax,QWORD PTR [rbp-0x28]
  431a57:	mov    rdi,rax
  431a5a:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431a5f:	jmp    431a6d <flatcc_json_printer_uint32_vector_field@@Base+0x11f>
  431a61:	mov    rax,QWORD PTR [rbp-0x28]
  431a65:	mov    rdi,rax
  431a68:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  431a6d:	mov    rax,QWORD PTR [rbp-0x28]
  431a71:	mov    rbx,QWORD PTR [rax+0x28]
  431a75:	mov    rax,QWORD PTR [rbp-0x18]
  431a79:	mov    rdi,rax
  431a7c:	call   42a9b7 <flatcc_json_parser_struct_as_root@@Base+0x1a2>
  431a81:	mov    rsi,rbx
  431a84:	mov    edi,eax
  431a86:	call   42b104 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  431a8b:	mov    ecx,eax
  431a8d:	mov    rax,QWORD PTR [rbp-0x28]
  431a91:	mov    rdx,QWORD PTR [rax+0x28]
  431a95:	movsxd rax,ecx
  431a98:	add    rdx,rax
  431a9b:	mov    rax,QWORD PTR [rbp-0x28]
  431a9f:	mov    QWORD PTR [rax+0x28],rdx
  431aa3:	mov    rax,QWORD PTR [rbp-0x18]
  431aa7:	add    rax,0x4
  431aab:	mov    QWORD PTR [rbp-0x18],rax
  431aaf:	dec    DWORD PTR [rbp-0x1c]
  431ab2:	jmp    431b4d <flatcc_json_printer_uint32_vector_field@@Base+0x1ff>
  431ab7:	mov    rax,QWORD PTR [rbp-0x28]
  431abb:	mov    rax,QWORD PTR [rax+0x28]
  431abf:	lea    rcx,[rax+0x1]
  431ac3:	mov    rdx,QWORD PTR [rbp-0x28]
  431ac7:	mov    QWORD PTR [rdx+0x28],rcx
  431acb:	mov    BYTE PTR [rax],0x2c
  431ace:	mov    rax,QWORD PTR [rbp-0x28]
  431ad2:	movzx  eax,BYTE PTR [rax+0x31]
  431ad6:	test   al,al
  431ad8:	je     431aff <flatcc_json_printer_uint32_vector_field@@Base+0x1b1>
  431ada:	mov    rax,QWORD PTR [rbp-0x28]
  431ade:	mov    rax,QWORD PTR [rax+0x28]
  431ae2:	lea    rcx,[rax+0x1]
  431ae6:	mov    rdx,QWORD PTR [rbp-0x28]
  431aea:	mov    QWORD PTR [rdx+0x28],rcx
  431aee:	mov    BYTE PTR [rax],0xa
  431af1:	mov    rax,QWORD PTR [rbp-0x28]
  431af5:	mov    rdi,rax
  431af8:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431afd:	jmp    431b0b <flatcc_json_printer_uint32_vector_field@@Base+0x1bd>
  431aff:	mov    rax,QWORD PTR [rbp-0x28]
  431b03:	mov    rdi,rax
  431b06:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  431b0b:	mov    rax,QWORD PTR [rbp-0x28]
  431b0f:	mov    rbx,QWORD PTR [rax+0x28]
  431b13:	mov    rax,QWORD PTR [rbp-0x18]
  431b17:	mov    rdi,rax
  431b1a:	call   42a9b7 <flatcc_json_parser_struct_as_root@@Base+0x1a2>
  431b1f:	mov    rsi,rbx
  431b22:	mov    edi,eax
  431b24:	call   42b104 <flatcc_json_parser_struct_as_root@@Base+0x8ef>
  431b29:	mov    ecx,eax
  431b2b:	mov    rax,QWORD PTR [rbp-0x28]
  431b2f:	mov    rdx,QWORD PTR [rax+0x28]
  431b33:	movsxd rax,ecx
  431b36:	add    rdx,rax
  431b39:	mov    rax,QWORD PTR [rbp-0x28]
  431b3d:	mov    QWORD PTR [rax+0x28],rdx
  431b41:	mov    rax,QWORD PTR [rbp-0x18]
  431b45:	add    rax,0x4
  431b49:	mov    QWORD PTR [rbp-0x18],rax
  431b4d:	mov    eax,DWORD PTR [rbp-0x1c]
  431b50:	lea    edx,[rax-0x1]
  431b53:	mov    DWORD PTR [rbp-0x1c],edx
  431b56:	test   eax,eax
  431b58:	jne    431ab7 <flatcc_json_printer_uint32_vector_field@@Base+0x169>
  431b5e:	mov    rax,QWORD PTR [rbp-0x28]
  431b62:	movzx  eax,BYTE PTR [rax+0x31]
  431b66:	test   al,al
  431b68:	je     431b9e <flatcc_json_printer_uint32_vector_field@@Base+0x250>
  431b6a:	mov    rax,QWORD PTR [rbp-0x28]
  431b6e:	mov    rax,QWORD PTR [rax+0x28]
  431b72:	lea    rcx,[rax+0x1]
  431b76:	mov    rdx,QWORD PTR [rbp-0x28]
  431b7a:	mov    QWORD PTR [rdx+0x28],rcx
  431b7e:	mov    BYTE PTR [rax],0xa
  431b81:	mov    rax,QWORD PTR [rbp-0x28]
  431b85:	mov    eax,DWORD PTR [rax+0x38]
  431b88:	lea    edx,[rax-0x1]
  431b8b:	mov    rax,QWORD PTR [rbp-0x28]
  431b8f:	mov    DWORD PTR [rax+0x38],edx
  431b92:	mov    rax,QWORD PTR [rbp-0x28]
  431b96:	mov    rdi,rax
  431b99:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431b9e:	mov    rax,QWORD PTR [rbp-0x28]
  431ba2:	mov    rax,QWORD PTR [rax+0x28]
  431ba6:	lea    rcx,[rax+0x1]
  431baa:	mov    rdx,QWORD PTR [rbp-0x28]
  431bae:	mov    QWORD PTR [rdx+0x28],rcx
  431bb2:	mov    BYTE PTR [rax],0x5d
  431bb5:	nop
  431bb6:	add    rsp,0x38
  431bba:	pop    rbx
  431bbb:	pop    rbp
  431bbc:	ret    

0000000000431bbd <flatcc_json_printer_uint64_vector_field@@Base>:
  431bbd:	endbr64 
  431bc1:	push   rbp
  431bc2:	mov    rbp,rsp
  431bc5:	push   rbx
  431bc6:	sub    rsp,0x38
  431bca:	mov    QWORD PTR [rbp-0x28],rdi
  431bce:	mov    QWORD PTR [rbp-0x30],rsi
  431bd2:	mov    DWORD PTR [rbp-0x34],edx
  431bd5:	mov    QWORD PTR [rbp-0x40],rcx
  431bd9:	mov    DWORD PTR [rbp-0x38],r8d
  431bdd:	mov    edx,DWORD PTR [rbp-0x34]
  431be0:	mov    rax,QWORD PTR [rbp-0x30]
  431be4:	mov    esi,edx
  431be6:	mov    rdi,rax
  431be9:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  431bee:	mov    QWORD PTR [rbp-0x18],rax
  431bf2:	cmp    QWORD PTR [rbp-0x18],0x0
  431bf7:	je     431e26 <flatcc_json_printer_uint64_vector_field@@Base+0x269>
  431bfd:	mov    rax,QWORD PTR [rbp-0x30]
  431c01:	mov    eax,DWORD PTR [rax+0x18]
  431c04:	lea    ecx,[rax+0x1]
  431c07:	mov    rdx,QWORD PTR [rbp-0x30]
  431c0b:	mov    DWORD PTR [rdx+0x18],ecx
  431c0e:	test   eax,eax
  431c10:	je     431c29 <flatcc_json_printer_uint64_vector_field@@Base+0x6c>
  431c12:	mov    rax,QWORD PTR [rbp-0x28]
  431c16:	mov    rax,QWORD PTR [rax+0x28]
  431c1a:	lea    rcx,[rax+0x1]
  431c1e:	mov    rdx,QWORD PTR [rbp-0x28]
  431c22:	mov    QWORD PTR [rdx+0x28],rcx
  431c26:	mov    BYTE PTR [rax],0x2c
  431c29:	mov    rax,QWORD PTR [rbp-0x18]
  431c2d:	mov    rdi,rax
  431c30:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  431c35:	mov    QWORD PTR [rbp-0x18],rax
  431c39:	mov    rax,QWORD PTR [rbp-0x18]
  431c3d:	mov    rdi,rax
  431c40:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  431c45:	mov    DWORD PTR [rbp-0x1c],eax
  431c48:	mov    rax,QWORD PTR [rbp-0x18]
  431c4c:	add    rax,0x4
  431c50:	mov    QWORD PTR [rbp-0x18],rax
  431c54:	mov    eax,DWORD PTR [rbp-0x38]
  431c57:	movsxd rdx,eax
  431c5a:	mov    rcx,QWORD PTR [rbp-0x40]
  431c5e:	mov    rax,QWORD PTR [rbp-0x28]
  431c62:	mov    rsi,rcx
  431c65:	mov    rdi,rax
  431c68:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  431c6d:	mov    rax,QWORD PTR [rbp-0x28]
  431c71:	mov    eax,DWORD PTR [rax+0x38]
  431c74:	lea    edx,[rax+0x1]
  431c77:	mov    rax,QWORD PTR [rbp-0x28]
  431c7b:	mov    DWORD PTR [rax+0x38],edx
  431c7e:	mov    rax,QWORD PTR [rbp-0x28]
  431c82:	mov    rax,QWORD PTR [rax+0x28]
  431c86:	lea    rcx,[rax+0x1]
  431c8a:	mov    rdx,QWORD PTR [rbp-0x28]
  431c8e:	mov    QWORD PTR [rdx+0x28],rcx
  431c92:	mov    BYTE PTR [rax],0x5b
  431c95:	cmp    DWORD PTR [rbp-0x1c],0x0
  431c99:	je     431dbe <flatcc_json_printer_uint64_vector_field@@Base+0x201>
  431c9f:	mov    rax,QWORD PTR [rbp-0x28]
  431ca3:	movzx  eax,BYTE PTR [rax+0x31]
  431ca7:	test   al,al
  431ca9:	je     431cd0 <flatcc_json_printer_uint64_vector_field@@Base+0x113>
  431cab:	mov    rax,QWORD PTR [rbp-0x28]
  431caf:	mov    rax,QWORD PTR [rax+0x28]
  431cb3:	lea    rcx,[rax+0x1]
  431cb7:	mov    rdx,QWORD PTR [rbp-0x28]
  431cbb:	mov    QWORD PTR [rdx+0x28],rcx
  431cbf:	mov    BYTE PTR [rax],0xa
  431cc2:	mov    rax,QWORD PTR [rbp-0x28]
  431cc6:	mov    rdi,rax
  431cc9:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431cce:	jmp    431cdc <flatcc_json_printer_uint64_vector_field@@Base+0x11f>
  431cd0:	mov    rax,QWORD PTR [rbp-0x28]
  431cd4:	mov    rdi,rax
  431cd7:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  431cdc:	mov    rax,QWORD PTR [rbp-0x28]
  431ce0:	mov    rbx,QWORD PTR [rax+0x28]
  431ce4:	mov    rax,QWORD PTR [rbp-0x18]
  431ce8:	mov    rdi,rax
  431ceb:	call   42a9e0 <flatcc_json_parser_struct_as_root@@Base+0x1cb>
  431cf0:	mov    rsi,rbx
  431cf3:	mov    rdi,rax
  431cf6:	call   42b519 <flatcc_json_parser_struct_as_root@@Base+0xd04>
  431cfb:	mov    ecx,eax
  431cfd:	mov    rax,QWORD PTR [rbp-0x28]
  431d01:	mov    rdx,QWORD PTR [rax+0x28]
  431d05:	movsxd rax,ecx
  431d08:	add    rdx,rax
  431d0b:	mov    rax,QWORD PTR [rbp-0x28]
  431d0f:	mov    QWORD PTR [rax+0x28],rdx
  431d13:	mov    rax,QWORD PTR [rbp-0x18]
  431d17:	add    rax,0x8
  431d1b:	mov    QWORD PTR [rbp-0x18],rax
  431d1f:	dec    DWORD PTR [rbp-0x1c]
  431d22:	jmp    431dbe <flatcc_json_printer_uint64_vector_field@@Base+0x201>
  431d27:	mov    rax,QWORD PTR [rbp-0x28]
  431d2b:	mov    rax,QWORD PTR [rax+0x28]
  431d2f:	lea    rcx,[rax+0x1]
  431d33:	mov    rdx,QWORD PTR [rbp-0x28]
  431d37:	mov    QWORD PTR [rdx+0x28],rcx
  431d3b:	mov    BYTE PTR [rax],0x2c
  431d3e:	mov    rax,QWORD PTR [rbp-0x28]
  431d42:	movzx  eax,BYTE PTR [rax+0x31]
  431d46:	test   al,al
  431d48:	je     431d6f <flatcc_json_printer_uint64_vector_field@@Base+0x1b2>
  431d4a:	mov    rax,QWORD PTR [rbp-0x28]
  431d4e:	mov    rax,QWORD PTR [rax+0x28]
  431d52:	lea    rcx,[rax+0x1]
  431d56:	mov    rdx,QWORD PTR [rbp-0x28]
  431d5a:	mov    QWORD PTR [rdx+0x28],rcx
  431d5e:	mov    BYTE PTR [rax],0xa
  431d61:	mov    rax,QWORD PTR [rbp-0x28]
  431d65:	mov    rdi,rax
  431d68:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431d6d:	jmp    431d7b <flatcc_json_printer_uint64_vector_field@@Base+0x1be>
  431d6f:	mov    rax,QWORD PTR [rbp-0x28]
  431d73:	mov    rdi,rax
  431d76:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  431d7b:	mov    rax,QWORD PTR [rbp-0x28]
  431d7f:	mov    rbx,QWORD PTR [rax+0x28]
  431d83:	mov    rax,QWORD PTR [rbp-0x18]
  431d87:	mov    rdi,rax
  431d8a:	call   42a9e0 <flatcc_json_parser_struct_as_root@@Base+0x1cb>
  431d8f:	mov    rsi,rbx
  431d92:	mov    rdi,rax
  431d95:	call   42b519 <flatcc_json_parser_struct_as_root@@Base+0xd04>
  431d9a:	mov    ecx,eax
  431d9c:	mov    rax,QWORD PTR [rbp-0x28]
  431da0:	mov    rdx,QWORD PTR [rax+0x28]
  431da4:	movsxd rax,ecx
  431da7:	add    rdx,rax
  431daa:	mov    rax,QWORD PTR [rbp-0x28]
  431dae:	mov    QWORD PTR [rax+0x28],rdx
  431db2:	mov    rax,QWORD PTR [rbp-0x18]
  431db6:	add    rax,0x8
  431dba:	mov    QWORD PTR [rbp-0x18],rax
  431dbe:	mov    eax,DWORD PTR [rbp-0x1c]
  431dc1:	lea    edx,[rax-0x1]
  431dc4:	mov    DWORD PTR [rbp-0x1c],edx
  431dc7:	test   eax,eax
  431dc9:	jne    431d27 <flatcc_json_printer_uint64_vector_field@@Base+0x16a>
  431dcf:	mov    rax,QWORD PTR [rbp-0x28]
  431dd3:	movzx  eax,BYTE PTR [rax+0x31]
  431dd7:	test   al,al
  431dd9:	je     431e0f <flatcc_json_printer_uint64_vector_field@@Base+0x252>
  431ddb:	mov    rax,QWORD PTR [rbp-0x28]
  431ddf:	mov    rax,QWORD PTR [rax+0x28]
  431de3:	lea    rcx,[rax+0x1]
  431de7:	mov    rdx,QWORD PTR [rbp-0x28]
  431deb:	mov    QWORD PTR [rdx+0x28],rcx
  431def:	mov    BYTE PTR [rax],0xa
  431df2:	mov    rax,QWORD PTR [rbp-0x28]
  431df6:	mov    eax,DWORD PTR [rax+0x38]
  431df9:	lea    edx,[rax-0x1]
  431dfc:	mov    rax,QWORD PTR [rbp-0x28]
  431e00:	mov    DWORD PTR [rax+0x38],edx
  431e03:	mov    rax,QWORD PTR [rbp-0x28]
  431e07:	mov    rdi,rax
  431e0a:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431e0f:	mov    rax,QWORD PTR [rbp-0x28]
  431e13:	mov    rax,QWORD PTR [rax+0x28]
  431e17:	lea    rcx,[rax+0x1]
  431e1b:	mov    rdx,QWORD PTR [rbp-0x28]
  431e1f:	mov    QWORD PTR [rdx+0x28],rcx
  431e23:	mov    BYTE PTR [rax],0x5d
  431e26:	nop
  431e27:	add    rsp,0x38
  431e2b:	pop    rbx
  431e2c:	pop    rbp
  431e2d:	ret    

0000000000431e2e <flatcc_json_printer_int8_vector_field@@Base>:
  431e2e:	endbr64 
  431e32:	push   rbp
  431e33:	mov    rbp,rsp
  431e36:	push   rbx
  431e37:	sub    rsp,0x38
  431e3b:	mov    QWORD PTR [rbp-0x28],rdi
  431e3f:	mov    QWORD PTR [rbp-0x30],rsi
  431e43:	mov    DWORD PTR [rbp-0x34],edx
  431e46:	mov    QWORD PTR [rbp-0x40],rcx
  431e4a:	mov    DWORD PTR [rbp-0x38],r8d
  431e4e:	mov    edx,DWORD PTR [rbp-0x34]
  431e51:	mov    rax,QWORD PTR [rbp-0x30]
  431e55:	mov    esi,edx
  431e57:	mov    rdi,rax
  431e5a:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  431e5f:	mov    QWORD PTR [rbp-0x18],rax
  431e63:	cmp    QWORD PTR [rbp-0x18],0x0
  431e68:	je     432099 <flatcc_json_printer_int8_vector_field@@Base+0x26b>
  431e6e:	mov    rax,QWORD PTR [rbp-0x30]
  431e72:	mov    eax,DWORD PTR [rax+0x18]
  431e75:	lea    ecx,[rax+0x1]
  431e78:	mov    rdx,QWORD PTR [rbp-0x30]
  431e7c:	mov    DWORD PTR [rdx+0x18],ecx
  431e7f:	test   eax,eax
  431e81:	je     431e9a <flatcc_json_printer_int8_vector_field@@Base+0x6c>
  431e83:	mov    rax,QWORD PTR [rbp-0x28]
  431e87:	mov    rax,QWORD PTR [rax+0x28]
  431e8b:	lea    rcx,[rax+0x1]
  431e8f:	mov    rdx,QWORD PTR [rbp-0x28]
  431e93:	mov    QWORD PTR [rdx+0x28],rcx
  431e97:	mov    BYTE PTR [rax],0x2c
  431e9a:	mov    rax,QWORD PTR [rbp-0x18]
  431e9e:	mov    rdi,rax
  431ea1:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  431ea6:	mov    QWORD PTR [rbp-0x18],rax
  431eaa:	mov    rax,QWORD PTR [rbp-0x18]
  431eae:	mov    rdi,rax
  431eb1:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  431eb6:	mov    DWORD PTR [rbp-0x1c],eax
  431eb9:	mov    rax,QWORD PTR [rbp-0x18]
  431ebd:	add    rax,0x4
  431ec1:	mov    QWORD PTR [rbp-0x18],rax
  431ec5:	mov    eax,DWORD PTR [rbp-0x38]
  431ec8:	movsxd rdx,eax
  431ecb:	mov    rcx,QWORD PTR [rbp-0x40]
  431ecf:	mov    rax,QWORD PTR [rbp-0x28]
  431ed3:	mov    rsi,rcx
  431ed6:	mov    rdi,rax
  431ed9:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  431ede:	mov    rax,QWORD PTR [rbp-0x28]
  431ee2:	mov    eax,DWORD PTR [rax+0x38]
  431ee5:	lea    edx,[rax+0x1]
  431ee8:	mov    rax,QWORD PTR [rbp-0x28]
  431eec:	mov    DWORD PTR [rax+0x38],edx
  431eef:	mov    rax,QWORD PTR [rbp-0x28]
  431ef3:	mov    rax,QWORD PTR [rax+0x28]
  431ef7:	lea    rcx,[rax+0x1]
  431efb:	mov    rdx,QWORD PTR [rbp-0x28]
  431eff:	mov    QWORD PTR [rdx+0x28],rcx
  431f03:	mov    BYTE PTR [rax],0x5b
  431f06:	cmp    DWORD PTR [rbp-0x1c],0x0
  431f0a:	je     432031 <flatcc_json_printer_int8_vector_field@@Base+0x203>
  431f10:	mov    rax,QWORD PTR [rbp-0x28]
  431f14:	movzx  eax,BYTE PTR [rax+0x31]
  431f18:	test   al,al
  431f1a:	je     431f41 <flatcc_json_printer_int8_vector_field@@Base+0x113>
  431f1c:	mov    rax,QWORD PTR [rbp-0x28]
  431f20:	mov    rax,QWORD PTR [rax+0x28]
  431f24:	lea    rcx,[rax+0x1]
  431f28:	mov    rdx,QWORD PTR [rbp-0x28]
  431f2c:	mov    QWORD PTR [rdx+0x28],rcx
  431f30:	mov    BYTE PTR [rax],0xa
  431f33:	mov    rax,QWORD PTR [rbp-0x28]
  431f37:	mov    rdi,rax
  431f3a:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431f3f:	jmp    431f4d <flatcc_json_printer_int8_vector_field@@Base+0x11f>
  431f41:	mov    rax,QWORD PTR [rbp-0x28]
  431f45:	mov    rdi,rax
  431f48:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  431f4d:	mov    rax,QWORD PTR [rbp-0x28]
  431f51:	mov    rbx,QWORD PTR [rax+0x28]
  431f55:	mov    rax,QWORD PTR [rbp-0x18]
  431f59:	mov    rdi,rax
  431f5c:	call   42aa0c <flatcc_json_parser_struct_as_root@@Base+0x1f7>
  431f61:	movsx  eax,al
  431f64:	mov    rsi,rbx
  431f67:	mov    edi,eax
  431f69:	call   42bddc <flatcc_json_parser_struct_as_root@@Base+0x15c7>
  431f6e:	mov    ecx,eax
  431f70:	mov    rax,QWORD PTR [rbp-0x28]
  431f74:	mov    rdx,QWORD PTR [rax+0x28]
  431f78:	movsxd rax,ecx
  431f7b:	add    rdx,rax
  431f7e:	mov    rax,QWORD PTR [rbp-0x28]
  431f82:	mov    QWORD PTR [rax+0x28],rdx
  431f86:	mov    rax,QWORD PTR [rbp-0x18]
  431f8a:	inc    rax
  431f8d:	mov    QWORD PTR [rbp-0x18],rax
  431f91:	dec    DWORD PTR [rbp-0x1c]
  431f94:	jmp    432031 <flatcc_json_printer_int8_vector_field@@Base+0x203>
  431f99:	mov    rax,QWORD PTR [rbp-0x28]
  431f9d:	mov    rax,QWORD PTR [rax+0x28]
  431fa1:	lea    rcx,[rax+0x1]
  431fa5:	mov    rdx,QWORD PTR [rbp-0x28]
  431fa9:	mov    QWORD PTR [rdx+0x28],rcx
  431fad:	mov    BYTE PTR [rax],0x2c
  431fb0:	mov    rax,QWORD PTR [rbp-0x28]
  431fb4:	movzx  eax,BYTE PTR [rax+0x31]
  431fb8:	test   al,al
  431fba:	je     431fe1 <flatcc_json_printer_int8_vector_field@@Base+0x1b3>
  431fbc:	mov    rax,QWORD PTR [rbp-0x28]
  431fc0:	mov    rax,QWORD PTR [rax+0x28]
  431fc4:	lea    rcx,[rax+0x1]
  431fc8:	mov    rdx,QWORD PTR [rbp-0x28]
  431fcc:	mov    QWORD PTR [rdx+0x28],rcx
  431fd0:	mov    BYTE PTR [rax],0xa
  431fd3:	mov    rax,QWORD PTR [rbp-0x28]
  431fd7:	mov    rdi,rax
  431fda:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  431fdf:	jmp    431fed <flatcc_json_printer_int8_vector_field@@Base+0x1bf>
  431fe1:	mov    rax,QWORD PTR [rbp-0x28]
  431fe5:	mov    rdi,rax
  431fe8:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  431fed:	mov    rax,QWORD PTR [rbp-0x28]
  431ff1:	mov    rbx,QWORD PTR [rax+0x28]
  431ff5:	mov    rax,QWORD PTR [rbp-0x18]
  431ff9:	mov    rdi,rax
  431ffc:	call   42aa0c <flatcc_json_parser_struct_as_root@@Base+0x1f7>
  432001:	movsx  eax,al
  432004:	mov    rsi,rbx
  432007:	mov    edi,eax
  432009:	call   42bddc <flatcc_json_parser_struct_as_root@@Base+0x15c7>
  43200e:	mov    ecx,eax
  432010:	mov    rax,QWORD PTR [rbp-0x28]
  432014:	mov    rdx,QWORD PTR [rax+0x28]
  432018:	movsxd rax,ecx
  43201b:	add    rdx,rax
  43201e:	mov    rax,QWORD PTR [rbp-0x28]
  432022:	mov    QWORD PTR [rax+0x28],rdx
  432026:	mov    rax,QWORD PTR [rbp-0x18]
  43202a:	inc    rax
  43202d:	mov    QWORD PTR [rbp-0x18],rax
  432031:	mov    eax,DWORD PTR [rbp-0x1c]
  432034:	lea    edx,[rax-0x1]
  432037:	mov    DWORD PTR [rbp-0x1c],edx
  43203a:	test   eax,eax
  43203c:	jne    431f99 <flatcc_json_printer_int8_vector_field@@Base+0x16b>
  432042:	mov    rax,QWORD PTR [rbp-0x28]
  432046:	movzx  eax,BYTE PTR [rax+0x31]
  43204a:	test   al,al
  43204c:	je     432082 <flatcc_json_printer_int8_vector_field@@Base+0x254>
  43204e:	mov    rax,QWORD PTR [rbp-0x28]
  432052:	mov    rax,QWORD PTR [rax+0x28]
  432056:	lea    rcx,[rax+0x1]
  43205a:	mov    rdx,QWORD PTR [rbp-0x28]
  43205e:	mov    QWORD PTR [rdx+0x28],rcx
  432062:	mov    BYTE PTR [rax],0xa
  432065:	mov    rax,QWORD PTR [rbp-0x28]
  432069:	mov    eax,DWORD PTR [rax+0x38]
  43206c:	lea    edx,[rax-0x1]
  43206f:	mov    rax,QWORD PTR [rbp-0x28]
  432073:	mov    DWORD PTR [rax+0x38],edx
  432076:	mov    rax,QWORD PTR [rbp-0x28]
  43207a:	mov    rdi,rax
  43207d:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432082:	mov    rax,QWORD PTR [rbp-0x28]
  432086:	mov    rax,QWORD PTR [rax+0x28]
  43208a:	lea    rcx,[rax+0x1]
  43208e:	mov    rdx,QWORD PTR [rbp-0x28]
  432092:	mov    QWORD PTR [rdx+0x28],rcx
  432096:	mov    BYTE PTR [rax],0x5d
  432099:	nop
  43209a:	add    rsp,0x38
  43209e:	pop    rbx
  43209f:	pop    rbp
  4320a0:	ret    

00000000004320a1 <flatcc_json_printer_int16_vector_field@@Base>:
  4320a1:	endbr64 
  4320a5:	push   rbp
  4320a6:	mov    rbp,rsp
  4320a9:	push   rbx
  4320aa:	sub    rsp,0x38
  4320ae:	mov    QWORD PTR [rbp-0x28],rdi
  4320b2:	mov    QWORD PTR [rbp-0x30],rsi
  4320b6:	mov    DWORD PTR [rbp-0x34],edx
  4320b9:	mov    QWORD PTR [rbp-0x40],rcx
  4320bd:	mov    DWORD PTR [rbp-0x38],r8d
  4320c1:	mov    edx,DWORD PTR [rbp-0x34]
  4320c4:	mov    rax,QWORD PTR [rbp-0x30]
  4320c8:	mov    esi,edx
  4320ca:	mov    rdi,rax
  4320cd:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  4320d2:	mov    QWORD PTR [rbp-0x18],rax
  4320d6:	cmp    QWORD PTR [rbp-0x18],0x0
  4320db:	je     43230a <flatcc_json_printer_int16_vector_field@@Base+0x269>
  4320e1:	mov    rax,QWORD PTR [rbp-0x30]
  4320e5:	mov    eax,DWORD PTR [rax+0x18]
  4320e8:	lea    ecx,[rax+0x1]
  4320eb:	mov    rdx,QWORD PTR [rbp-0x30]
  4320ef:	mov    DWORD PTR [rdx+0x18],ecx
  4320f2:	test   eax,eax
  4320f4:	je     43210d <flatcc_json_printer_int16_vector_field@@Base+0x6c>
  4320f6:	mov    rax,QWORD PTR [rbp-0x28]
  4320fa:	mov    rax,QWORD PTR [rax+0x28]
  4320fe:	lea    rcx,[rax+0x1]
  432102:	mov    rdx,QWORD PTR [rbp-0x28]
  432106:	mov    QWORD PTR [rdx+0x28],rcx
  43210a:	mov    BYTE PTR [rax],0x2c
  43210d:	mov    rax,QWORD PTR [rbp-0x18]
  432111:	mov    rdi,rax
  432114:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  432119:	mov    QWORD PTR [rbp-0x18],rax
  43211d:	mov    rax,QWORD PTR [rbp-0x18]
  432121:	mov    rdi,rax
  432124:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  432129:	mov    DWORD PTR [rbp-0x1c],eax
  43212c:	mov    rax,QWORD PTR [rbp-0x18]
  432130:	add    rax,0x4
  432134:	mov    QWORD PTR [rbp-0x18],rax
  432138:	mov    eax,DWORD PTR [rbp-0x38]
  43213b:	movsxd rdx,eax
  43213e:	mov    rcx,QWORD PTR [rbp-0x40]
  432142:	mov    rax,QWORD PTR [rbp-0x28]
  432146:	mov    rsi,rcx
  432149:	mov    rdi,rax
  43214c:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  432151:	mov    rax,QWORD PTR [rbp-0x28]
  432155:	mov    eax,DWORD PTR [rax+0x38]
  432158:	lea    edx,[rax+0x1]
  43215b:	mov    rax,QWORD PTR [rbp-0x28]
  43215f:	mov    DWORD PTR [rax+0x38],edx
  432162:	mov    rax,QWORD PTR [rbp-0x28]
  432166:	mov    rax,QWORD PTR [rax+0x28]
  43216a:	lea    rcx,[rax+0x1]
  43216e:	mov    rdx,QWORD PTR [rbp-0x28]
  432172:	mov    QWORD PTR [rdx+0x28],rcx
  432176:	mov    BYTE PTR [rax],0x5b
  432179:	cmp    DWORD PTR [rbp-0x1c],0x0
  43217d:	je     4322a2 <flatcc_json_printer_int16_vector_field@@Base+0x201>
  432183:	mov    rax,QWORD PTR [rbp-0x28]
  432187:	movzx  eax,BYTE PTR [rax+0x31]
  43218b:	test   al,al
  43218d:	je     4321b4 <flatcc_json_printer_int16_vector_field@@Base+0x113>
  43218f:	mov    rax,QWORD PTR [rbp-0x28]
  432193:	mov    rax,QWORD PTR [rax+0x28]
  432197:	lea    rcx,[rax+0x1]
  43219b:	mov    rdx,QWORD PTR [rbp-0x28]
  43219f:	mov    QWORD PTR [rdx+0x28],rcx
  4321a3:	mov    BYTE PTR [rax],0xa
  4321a6:	mov    rax,QWORD PTR [rbp-0x28]
  4321aa:	mov    rdi,rax
  4321ad:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4321b2:	jmp    4321c0 <flatcc_json_printer_int16_vector_field@@Base+0x11f>
  4321b4:	mov    rax,QWORD PTR [rbp-0x28]
  4321b8:	mov    rdi,rax
  4321bb:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4321c0:	mov    rax,QWORD PTR [rbp-0x28]
  4321c4:	mov    rbx,QWORD PTR [rax+0x28]
  4321c8:	mov    rax,QWORD PTR [rbp-0x18]
  4321cc:	mov    rdi,rax
  4321cf:	call   42aa3b <flatcc_json_parser_struct_as_root@@Base+0x226>
  4321d4:	cwde   
  4321d5:	mov    rsi,rbx
  4321d8:	mov    edi,eax
  4321da:	call   42be3a <flatcc_json_parser_struct_as_root@@Base+0x1625>
  4321df:	mov    ecx,eax
  4321e1:	mov    rax,QWORD PTR [rbp-0x28]
  4321e5:	mov    rdx,QWORD PTR [rax+0x28]
  4321e9:	movsxd rax,ecx
  4321ec:	add    rdx,rax
  4321ef:	mov    rax,QWORD PTR [rbp-0x28]
  4321f3:	mov    QWORD PTR [rax+0x28],rdx
  4321f7:	mov    rax,QWORD PTR [rbp-0x18]
  4321fb:	add    rax,0x2
  4321ff:	mov    QWORD PTR [rbp-0x18],rax
  432203:	dec    DWORD PTR [rbp-0x1c]
  432206:	jmp    4322a2 <flatcc_json_printer_int16_vector_field@@Base+0x201>
  43220b:	mov    rax,QWORD PTR [rbp-0x28]
  43220f:	mov    rax,QWORD PTR [rax+0x28]
  432213:	lea    rcx,[rax+0x1]
  432217:	mov    rdx,QWORD PTR [rbp-0x28]
  43221b:	mov    QWORD PTR [rdx+0x28],rcx
  43221f:	mov    BYTE PTR [rax],0x2c
  432222:	mov    rax,QWORD PTR [rbp-0x28]
  432226:	movzx  eax,BYTE PTR [rax+0x31]
  43222a:	test   al,al
  43222c:	je     432253 <flatcc_json_printer_int16_vector_field@@Base+0x1b2>
  43222e:	mov    rax,QWORD PTR [rbp-0x28]
  432232:	mov    rax,QWORD PTR [rax+0x28]
  432236:	lea    rcx,[rax+0x1]
  43223a:	mov    rdx,QWORD PTR [rbp-0x28]
  43223e:	mov    QWORD PTR [rdx+0x28],rcx
  432242:	mov    BYTE PTR [rax],0xa
  432245:	mov    rax,QWORD PTR [rbp-0x28]
  432249:	mov    rdi,rax
  43224c:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432251:	jmp    43225f <flatcc_json_printer_int16_vector_field@@Base+0x1be>
  432253:	mov    rax,QWORD PTR [rbp-0x28]
  432257:	mov    rdi,rax
  43225a:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  43225f:	mov    rax,QWORD PTR [rbp-0x28]
  432263:	mov    rbx,QWORD PTR [rax+0x28]
  432267:	mov    rax,QWORD PTR [rbp-0x18]
  43226b:	mov    rdi,rax
  43226e:	call   42aa3b <flatcc_json_parser_struct_as_root@@Base+0x226>
  432273:	cwde   
  432274:	mov    rsi,rbx
  432277:	mov    edi,eax
  432279:	call   42be3a <flatcc_json_parser_struct_as_root@@Base+0x1625>
  43227e:	mov    ecx,eax
  432280:	mov    rax,QWORD PTR [rbp-0x28]
  432284:	mov    rdx,QWORD PTR [rax+0x28]
  432288:	movsxd rax,ecx
  43228b:	add    rdx,rax
  43228e:	mov    rax,QWORD PTR [rbp-0x28]
  432292:	mov    QWORD PTR [rax+0x28],rdx
  432296:	mov    rax,QWORD PTR [rbp-0x18]
  43229a:	add    rax,0x2
  43229e:	mov    QWORD PTR [rbp-0x18],rax
  4322a2:	mov    eax,DWORD PTR [rbp-0x1c]
  4322a5:	lea    edx,[rax-0x1]
  4322a8:	mov    DWORD PTR [rbp-0x1c],edx
  4322ab:	test   eax,eax
  4322ad:	jne    43220b <flatcc_json_printer_int16_vector_field@@Base+0x16a>
  4322b3:	mov    rax,QWORD PTR [rbp-0x28]
  4322b7:	movzx  eax,BYTE PTR [rax+0x31]
  4322bb:	test   al,al
  4322bd:	je     4322f3 <flatcc_json_printer_int16_vector_field@@Base+0x252>
  4322bf:	mov    rax,QWORD PTR [rbp-0x28]
  4322c3:	mov    rax,QWORD PTR [rax+0x28]
  4322c7:	lea    rcx,[rax+0x1]
  4322cb:	mov    rdx,QWORD PTR [rbp-0x28]
  4322cf:	mov    QWORD PTR [rdx+0x28],rcx
  4322d3:	mov    BYTE PTR [rax],0xa
  4322d6:	mov    rax,QWORD PTR [rbp-0x28]
  4322da:	mov    eax,DWORD PTR [rax+0x38]
  4322dd:	lea    edx,[rax-0x1]
  4322e0:	mov    rax,QWORD PTR [rbp-0x28]
  4322e4:	mov    DWORD PTR [rax+0x38],edx
  4322e7:	mov    rax,QWORD PTR [rbp-0x28]
  4322eb:	mov    rdi,rax
  4322ee:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4322f3:	mov    rax,QWORD PTR [rbp-0x28]
  4322f7:	mov    rax,QWORD PTR [rax+0x28]
  4322fb:	lea    rcx,[rax+0x1]
  4322ff:	mov    rdx,QWORD PTR [rbp-0x28]
  432303:	mov    QWORD PTR [rdx+0x28],rcx
  432307:	mov    BYTE PTR [rax],0x5d
  43230a:	nop
  43230b:	add    rsp,0x38
  43230f:	pop    rbx
  432310:	pop    rbp
  432311:	ret    

0000000000432312 <flatcc_json_printer_int32_vector_field@@Base>:
  432312:	endbr64 
  432316:	push   rbp
  432317:	mov    rbp,rsp
  43231a:	push   rbx
  43231b:	sub    rsp,0x38
  43231f:	mov    QWORD PTR [rbp-0x28],rdi
  432323:	mov    QWORD PTR [rbp-0x30],rsi
  432327:	mov    DWORD PTR [rbp-0x34],edx
  43232a:	mov    QWORD PTR [rbp-0x40],rcx
  43232e:	mov    DWORD PTR [rbp-0x38],r8d
  432332:	mov    edx,DWORD PTR [rbp-0x34]
  432335:	mov    rax,QWORD PTR [rbp-0x30]
  432339:	mov    esi,edx
  43233b:	mov    rdi,rax
  43233e:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  432343:	mov    QWORD PTR [rbp-0x18],rax
  432347:	cmp    QWORD PTR [rbp-0x18],0x0
  43234c:	je     432579 <flatcc_json_printer_int32_vector_field@@Base+0x267>
  432352:	mov    rax,QWORD PTR [rbp-0x30]
  432356:	mov    eax,DWORD PTR [rax+0x18]
  432359:	lea    ecx,[rax+0x1]
  43235c:	mov    rdx,QWORD PTR [rbp-0x30]
  432360:	mov    DWORD PTR [rdx+0x18],ecx
  432363:	test   eax,eax
  432365:	je     43237e <flatcc_json_printer_int32_vector_field@@Base+0x6c>
  432367:	mov    rax,QWORD PTR [rbp-0x28]
  43236b:	mov    rax,QWORD PTR [rax+0x28]
  43236f:	lea    rcx,[rax+0x1]
  432373:	mov    rdx,QWORD PTR [rbp-0x28]
  432377:	mov    QWORD PTR [rdx+0x28],rcx
  43237b:	mov    BYTE PTR [rax],0x2c
  43237e:	mov    rax,QWORD PTR [rbp-0x18]
  432382:	mov    rdi,rax
  432385:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  43238a:	mov    QWORD PTR [rbp-0x18],rax
  43238e:	mov    rax,QWORD PTR [rbp-0x18]
  432392:	mov    rdi,rax
  432395:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  43239a:	mov    DWORD PTR [rbp-0x1c],eax
  43239d:	mov    rax,QWORD PTR [rbp-0x18]
  4323a1:	add    rax,0x4
  4323a5:	mov    QWORD PTR [rbp-0x18],rax
  4323a9:	mov    eax,DWORD PTR [rbp-0x38]
  4323ac:	movsxd rdx,eax
  4323af:	mov    rcx,QWORD PTR [rbp-0x40]
  4323b3:	mov    rax,QWORD PTR [rbp-0x28]
  4323b7:	mov    rsi,rcx
  4323ba:	mov    rdi,rax
  4323bd:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  4323c2:	mov    rax,QWORD PTR [rbp-0x28]
  4323c6:	mov    eax,DWORD PTR [rax+0x38]
  4323c9:	lea    edx,[rax+0x1]
  4323cc:	mov    rax,QWORD PTR [rbp-0x28]
  4323d0:	mov    DWORD PTR [rax+0x38],edx
  4323d3:	mov    rax,QWORD PTR [rbp-0x28]
  4323d7:	mov    rax,QWORD PTR [rax+0x28]
  4323db:	lea    rcx,[rax+0x1]
  4323df:	mov    rdx,QWORD PTR [rbp-0x28]
  4323e3:	mov    QWORD PTR [rdx+0x28],rcx
  4323e7:	mov    BYTE PTR [rax],0x5b
  4323ea:	cmp    DWORD PTR [rbp-0x1c],0x0
  4323ee:	je     432511 <flatcc_json_printer_int32_vector_field@@Base+0x1ff>
  4323f4:	mov    rax,QWORD PTR [rbp-0x28]
  4323f8:	movzx  eax,BYTE PTR [rax+0x31]
  4323fc:	test   al,al
  4323fe:	je     432425 <flatcc_json_printer_int32_vector_field@@Base+0x113>
  432400:	mov    rax,QWORD PTR [rbp-0x28]
  432404:	mov    rax,QWORD PTR [rax+0x28]
  432408:	lea    rcx,[rax+0x1]
  43240c:	mov    rdx,QWORD PTR [rbp-0x28]
  432410:	mov    QWORD PTR [rdx+0x28],rcx
  432414:	mov    BYTE PTR [rax],0xa
  432417:	mov    rax,QWORD PTR [rbp-0x28]
  43241b:	mov    rdi,rax
  43241e:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432423:	jmp    432431 <flatcc_json_printer_int32_vector_field@@Base+0x11f>
  432425:	mov    rax,QWORD PTR [rbp-0x28]
  432429:	mov    rdi,rax
  43242c:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  432431:	mov    rax,QWORD PTR [rbp-0x28]
  432435:	mov    rbx,QWORD PTR [rax+0x28]
  432439:	mov    rax,QWORD PTR [rbp-0x18]
  43243d:	mov    rdi,rax
  432440:	call   42aa64 <flatcc_json_parser_struct_as_root@@Base+0x24f>
  432445:	mov    rsi,rbx
  432448:	mov    edi,eax
  43244a:	call   42be9b <flatcc_json_parser_struct_as_root@@Base+0x1686>
  43244f:	mov    ecx,eax
  432451:	mov    rax,QWORD PTR [rbp-0x28]
  432455:	mov    rdx,QWORD PTR [rax+0x28]
  432459:	movsxd rax,ecx
  43245c:	add    rdx,rax
  43245f:	mov    rax,QWORD PTR [rbp-0x28]
  432463:	mov    QWORD PTR [rax+0x28],rdx
  432467:	mov    rax,QWORD PTR [rbp-0x18]
  43246b:	add    rax,0x4
  43246f:	mov    QWORD PTR [rbp-0x18],rax
  432473:	dec    DWORD PTR [rbp-0x1c]
  432476:	jmp    432511 <flatcc_json_printer_int32_vector_field@@Base+0x1ff>
  43247b:	mov    rax,QWORD PTR [rbp-0x28]
  43247f:	mov    rax,QWORD PTR [rax+0x28]
  432483:	lea    rcx,[rax+0x1]
  432487:	mov    rdx,QWORD PTR [rbp-0x28]
  43248b:	mov    QWORD PTR [rdx+0x28],rcx
  43248f:	mov    BYTE PTR [rax],0x2c
  432492:	mov    rax,QWORD PTR [rbp-0x28]
  432496:	movzx  eax,BYTE PTR [rax+0x31]
  43249a:	test   al,al
  43249c:	je     4324c3 <flatcc_json_printer_int32_vector_field@@Base+0x1b1>
  43249e:	mov    rax,QWORD PTR [rbp-0x28]
  4324a2:	mov    rax,QWORD PTR [rax+0x28]
  4324a6:	lea    rcx,[rax+0x1]
  4324aa:	mov    rdx,QWORD PTR [rbp-0x28]
  4324ae:	mov    QWORD PTR [rdx+0x28],rcx
  4324b2:	mov    BYTE PTR [rax],0xa
  4324b5:	mov    rax,QWORD PTR [rbp-0x28]
  4324b9:	mov    rdi,rax
  4324bc:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4324c1:	jmp    4324cf <flatcc_json_printer_int32_vector_field@@Base+0x1bd>
  4324c3:	mov    rax,QWORD PTR [rbp-0x28]
  4324c7:	mov    rdi,rax
  4324ca:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4324cf:	mov    rax,QWORD PTR [rbp-0x28]
  4324d3:	mov    rbx,QWORD PTR [rax+0x28]
  4324d7:	mov    rax,QWORD PTR [rbp-0x18]
  4324db:	mov    rdi,rax
  4324de:	call   42aa64 <flatcc_json_parser_struct_as_root@@Base+0x24f>
  4324e3:	mov    rsi,rbx
  4324e6:	mov    edi,eax
  4324e8:	call   42be9b <flatcc_json_parser_struct_as_root@@Base+0x1686>
  4324ed:	mov    ecx,eax
  4324ef:	mov    rax,QWORD PTR [rbp-0x28]
  4324f3:	mov    rdx,QWORD PTR [rax+0x28]
  4324f7:	movsxd rax,ecx
  4324fa:	add    rdx,rax
  4324fd:	mov    rax,QWORD PTR [rbp-0x28]
  432501:	mov    QWORD PTR [rax+0x28],rdx
  432505:	mov    rax,QWORD PTR [rbp-0x18]
  432509:	add    rax,0x4
  43250d:	mov    QWORD PTR [rbp-0x18],rax
  432511:	mov    eax,DWORD PTR [rbp-0x1c]
  432514:	lea    edx,[rax-0x1]
  432517:	mov    DWORD PTR [rbp-0x1c],edx
  43251a:	test   eax,eax
  43251c:	jne    43247b <flatcc_json_printer_int32_vector_field@@Base+0x169>
  432522:	mov    rax,QWORD PTR [rbp-0x28]
  432526:	movzx  eax,BYTE PTR [rax+0x31]
  43252a:	test   al,al
  43252c:	je     432562 <flatcc_json_printer_int32_vector_field@@Base+0x250>
  43252e:	mov    rax,QWORD PTR [rbp-0x28]
  432532:	mov    rax,QWORD PTR [rax+0x28]
  432536:	lea    rcx,[rax+0x1]
  43253a:	mov    rdx,QWORD PTR [rbp-0x28]
  43253e:	mov    QWORD PTR [rdx+0x28],rcx
  432542:	mov    BYTE PTR [rax],0xa
  432545:	mov    rax,QWORD PTR [rbp-0x28]
  432549:	mov    eax,DWORD PTR [rax+0x38]
  43254c:	lea    edx,[rax-0x1]
  43254f:	mov    rax,QWORD PTR [rbp-0x28]
  432553:	mov    DWORD PTR [rax+0x38],edx
  432556:	mov    rax,QWORD PTR [rbp-0x28]
  43255a:	mov    rdi,rax
  43255d:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432562:	mov    rax,QWORD PTR [rbp-0x28]
  432566:	mov    rax,QWORD PTR [rax+0x28]
  43256a:	lea    rcx,[rax+0x1]
  43256e:	mov    rdx,QWORD PTR [rbp-0x28]
  432572:	mov    QWORD PTR [rdx+0x28],rcx
  432576:	mov    BYTE PTR [rax],0x5d
  432579:	nop
  43257a:	add    rsp,0x38
  43257e:	pop    rbx
  43257f:	pop    rbp
  432580:	ret    

0000000000432581 <flatcc_json_printer_int64_vector_field@@Base>:
  432581:	endbr64 
  432585:	push   rbp
  432586:	mov    rbp,rsp
  432589:	push   rbx
  43258a:	sub    rsp,0x38
  43258e:	mov    QWORD PTR [rbp-0x28],rdi
  432592:	mov    QWORD PTR [rbp-0x30],rsi
  432596:	mov    DWORD PTR [rbp-0x34],edx
  432599:	mov    QWORD PTR [rbp-0x40],rcx
  43259d:	mov    DWORD PTR [rbp-0x38],r8d
  4325a1:	mov    edx,DWORD PTR [rbp-0x34]
  4325a4:	mov    rax,QWORD PTR [rbp-0x30]
  4325a8:	mov    esi,edx
  4325aa:	mov    rdi,rax
  4325ad:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  4325b2:	mov    QWORD PTR [rbp-0x18],rax
  4325b6:	cmp    QWORD PTR [rbp-0x18],0x0
  4325bb:	je     4327ea <flatcc_json_printer_int64_vector_field@@Base+0x269>
  4325c1:	mov    rax,QWORD PTR [rbp-0x30]
  4325c5:	mov    eax,DWORD PTR [rax+0x18]
  4325c8:	lea    ecx,[rax+0x1]
  4325cb:	mov    rdx,QWORD PTR [rbp-0x30]
  4325cf:	mov    DWORD PTR [rdx+0x18],ecx
  4325d2:	test   eax,eax
  4325d4:	je     4325ed <flatcc_json_printer_int64_vector_field@@Base+0x6c>
  4325d6:	mov    rax,QWORD PTR [rbp-0x28]
  4325da:	mov    rax,QWORD PTR [rax+0x28]
  4325de:	lea    rcx,[rax+0x1]
  4325e2:	mov    rdx,QWORD PTR [rbp-0x28]
  4325e6:	mov    QWORD PTR [rdx+0x28],rcx
  4325ea:	mov    BYTE PTR [rax],0x2c
  4325ed:	mov    rax,QWORD PTR [rbp-0x18]
  4325f1:	mov    rdi,rax
  4325f4:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  4325f9:	mov    QWORD PTR [rbp-0x18],rax
  4325fd:	mov    rax,QWORD PTR [rbp-0x18]
  432601:	mov    rdi,rax
  432604:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  432609:	mov    DWORD PTR [rbp-0x1c],eax
  43260c:	mov    rax,QWORD PTR [rbp-0x18]
  432610:	add    rax,0x4
  432614:	mov    QWORD PTR [rbp-0x18],rax
  432618:	mov    eax,DWORD PTR [rbp-0x38]
  43261b:	movsxd rdx,eax
  43261e:	mov    rcx,QWORD PTR [rbp-0x40]
  432622:	mov    rax,QWORD PTR [rbp-0x28]
  432626:	mov    rsi,rcx
  432629:	mov    rdi,rax
  43262c:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  432631:	mov    rax,QWORD PTR [rbp-0x28]
  432635:	mov    eax,DWORD PTR [rax+0x38]
  432638:	lea    edx,[rax+0x1]
  43263b:	mov    rax,QWORD PTR [rbp-0x28]
  43263f:	mov    DWORD PTR [rax+0x38],edx
  432642:	mov    rax,QWORD PTR [rbp-0x28]
  432646:	mov    rax,QWORD PTR [rax+0x28]
  43264a:	lea    rcx,[rax+0x1]
  43264e:	mov    rdx,QWORD PTR [rbp-0x28]
  432652:	mov    QWORD PTR [rdx+0x28],rcx
  432656:	mov    BYTE PTR [rax],0x5b
  432659:	cmp    DWORD PTR [rbp-0x1c],0x0
  43265d:	je     432782 <flatcc_json_printer_int64_vector_field@@Base+0x201>
  432663:	mov    rax,QWORD PTR [rbp-0x28]
  432667:	movzx  eax,BYTE PTR [rax+0x31]
  43266b:	test   al,al
  43266d:	je     432694 <flatcc_json_printer_int64_vector_field@@Base+0x113>
  43266f:	mov    rax,QWORD PTR [rbp-0x28]
  432673:	mov    rax,QWORD PTR [rax+0x28]
  432677:	lea    rcx,[rax+0x1]
  43267b:	mov    rdx,QWORD PTR [rbp-0x28]
  43267f:	mov    QWORD PTR [rdx+0x28],rcx
  432683:	mov    BYTE PTR [rax],0xa
  432686:	mov    rax,QWORD PTR [rbp-0x28]
  43268a:	mov    rdi,rax
  43268d:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432692:	jmp    4326a0 <flatcc_json_printer_int64_vector_field@@Base+0x11f>
  432694:	mov    rax,QWORD PTR [rbp-0x28]
  432698:	mov    rdi,rax
  43269b:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4326a0:	mov    rax,QWORD PTR [rbp-0x28]
  4326a4:	mov    rbx,QWORD PTR [rax+0x28]
  4326a8:	mov    rax,QWORD PTR [rbp-0x18]
  4326ac:	mov    rdi,rax
  4326af:	call   42aa8d <flatcc_json_parser_struct_as_root@@Base+0x278>
  4326b4:	mov    rsi,rbx
  4326b7:	mov    rdi,rax
  4326ba:	call   42beec <flatcc_json_parser_struct_as_root@@Base+0x16d7>
  4326bf:	mov    ecx,eax
  4326c1:	mov    rax,QWORD PTR [rbp-0x28]
  4326c5:	mov    rdx,QWORD PTR [rax+0x28]
  4326c9:	movsxd rax,ecx
  4326cc:	add    rdx,rax
  4326cf:	mov    rax,QWORD PTR [rbp-0x28]
  4326d3:	mov    QWORD PTR [rax+0x28],rdx
  4326d7:	mov    rax,QWORD PTR [rbp-0x18]
  4326db:	add    rax,0x8
  4326df:	mov    QWORD PTR [rbp-0x18],rax
  4326e3:	dec    DWORD PTR [rbp-0x1c]
  4326e6:	jmp    432782 <flatcc_json_printer_int64_vector_field@@Base+0x201>
  4326eb:	mov    rax,QWORD PTR [rbp-0x28]
  4326ef:	mov    rax,QWORD PTR [rax+0x28]
  4326f3:	lea    rcx,[rax+0x1]
  4326f7:	mov    rdx,QWORD PTR [rbp-0x28]
  4326fb:	mov    QWORD PTR [rdx+0x28],rcx
  4326ff:	mov    BYTE PTR [rax],0x2c
  432702:	mov    rax,QWORD PTR [rbp-0x28]
  432706:	movzx  eax,BYTE PTR [rax+0x31]
  43270a:	test   al,al
  43270c:	je     432733 <flatcc_json_printer_int64_vector_field@@Base+0x1b2>
  43270e:	mov    rax,QWORD PTR [rbp-0x28]
  432712:	mov    rax,QWORD PTR [rax+0x28]
  432716:	lea    rcx,[rax+0x1]
  43271a:	mov    rdx,QWORD PTR [rbp-0x28]
  43271e:	mov    QWORD PTR [rdx+0x28],rcx
  432722:	mov    BYTE PTR [rax],0xa
  432725:	mov    rax,QWORD PTR [rbp-0x28]
  432729:	mov    rdi,rax
  43272c:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432731:	jmp    43273f <flatcc_json_printer_int64_vector_field@@Base+0x1be>
  432733:	mov    rax,QWORD PTR [rbp-0x28]
  432737:	mov    rdi,rax
  43273a:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  43273f:	mov    rax,QWORD PTR [rbp-0x28]
  432743:	mov    rbx,QWORD PTR [rax+0x28]
  432747:	mov    rax,QWORD PTR [rbp-0x18]
  43274b:	mov    rdi,rax
  43274e:	call   42aa8d <flatcc_json_parser_struct_as_root@@Base+0x278>
  432753:	mov    rsi,rbx
  432756:	mov    rdi,rax
  432759:	call   42beec <flatcc_json_parser_struct_as_root@@Base+0x16d7>
  43275e:	mov    ecx,eax
  432760:	mov    rax,QWORD PTR [rbp-0x28]
  432764:	mov    rdx,QWORD PTR [rax+0x28]
  432768:	movsxd rax,ecx
  43276b:	add    rdx,rax
  43276e:	mov    rax,QWORD PTR [rbp-0x28]
  432772:	mov    QWORD PTR [rax+0x28],rdx
  432776:	mov    rax,QWORD PTR [rbp-0x18]
  43277a:	add    rax,0x8
  43277e:	mov    QWORD PTR [rbp-0x18],rax
  432782:	mov    eax,DWORD PTR [rbp-0x1c]
  432785:	lea    edx,[rax-0x1]
  432788:	mov    DWORD PTR [rbp-0x1c],edx
  43278b:	test   eax,eax
  43278d:	jne    4326eb <flatcc_json_printer_int64_vector_field@@Base+0x16a>
  432793:	mov    rax,QWORD PTR [rbp-0x28]
  432797:	movzx  eax,BYTE PTR [rax+0x31]
  43279b:	test   al,al
  43279d:	je     4327d3 <flatcc_json_printer_int64_vector_field@@Base+0x252>
  43279f:	mov    rax,QWORD PTR [rbp-0x28]
  4327a3:	mov    rax,QWORD PTR [rax+0x28]
  4327a7:	lea    rcx,[rax+0x1]
  4327ab:	mov    rdx,QWORD PTR [rbp-0x28]
  4327af:	mov    QWORD PTR [rdx+0x28],rcx
  4327b3:	mov    BYTE PTR [rax],0xa
  4327b6:	mov    rax,QWORD PTR [rbp-0x28]
  4327ba:	mov    eax,DWORD PTR [rax+0x38]
  4327bd:	lea    edx,[rax-0x1]
  4327c0:	mov    rax,QWORD PTR [rbp-0x28]
  4327c4:	mov    DWORD PTR [rax+0x38],edx
  4327c7:	mov    rax,QWORD PTR [rbp-0x28]
  4327cb:	mov    rdi,rax
  4327ce:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4327d3:	mov    rax,QWORD PTR [rbp-0x28]
  4327d7:	mov    rax,QWORD PTR [rax+0x28]
  4327db:	lea    rcx,[rax+0x1]
  4327df:	mov    rdx,QWORD PTR [rbp-0x28]
  4327e3:	mov    QWORD PTR [rdx+0x28],rcx
  4327e7:	mov    BYTE PTR [rax],0x5d
  4327ea:	nop
  4327eb:	add    rsp,0x38
  4327ef:	pop    rbx
  4327f0:	pop    rbp
  4327f1:	ret    

00000000004327f2 <flatcc_json_printer_bool_vector_field@@Base>:
  4327f2:	endbr64 
  4327f6:	push   rbp
  4327f7:	mov    rbp,rsp
  4327fa:	push   rbx
  4327fb:	sub    rsp,0x38
  4327ff:	mov    QWORD PTR [rbp-0x28],rdi
  432803:	mov    QWORD PTR [rbp-0x30],rsi
  432807:	mov    DWORD PTR [rbp-0x34],edx
  43280a:	mov    QWORD PTR [rbp-0x40],rcx
  43280e:	mov    DWORD PTR [rbp-0x38],r8d
  432812:	mov    edx,DWORD PTR [rbp-0x34]
  432815:	mov    rax,QWORD PTR [rbp-0x30]
  432819:	mov    esi,edx
  43281b:	mov    rdi,rax
  43281e:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  432823:	mov    QWORD PTR [rbp-0x18],rax
  432827:	cmp    QWORD PTR [rbp-0x18],0x0
  43282c:	je     432a5d <flatcc_json_printer_bool_vector_field@@Base+0x26b>
  432832:	mov    rax,QWORD PTR [rbp-0x30]
  432836:	mov    eax,DWORD PTR [rax+0x18]
  432839:	lea    ecx,[rax+0x1]
  43283c:	mov    rdx,QWORD PTR [rbp-0x30]
  432840:	mov    DWORD PTR [rdx+0x18],ecx
  432843:	test   eax,eax
  432845:	je     43285e <flatcc_json_printer_bool_vector_field@@Base+0x6c>
  432847:	mov    rax,QWORD PTR [rbp-0x28]
  43284b:	mov    rax,QWORD PTR [rax+0x28]
  43284f:	lea    rcx,[rax+0x1]
  432853:	mov    rdx,QWORD PTR [rbp-0x28]
  432857:	mov    QWORD PTR [rdx+0x28],rcx
  43285b:	mov    BYTE PTR [rax],0x2c
  43285e:	mov    rax,QWORD PTR [rbp-0x18]
  432862:	mov    rdi,rax
  432865:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  43286a:	mov    QWORD PTR [rbp-0x18],rax
  43286e:	mov    rax,QWORD PTR [rbp-0x18]
  432872:	mov    rdi,rax
  432875:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  43287a:	mov    DWORD PTR [rbp-0x1c],eax
  43287d:	mov    rax,QWORD PTR [rbp-0x18]
  432881:	add    rax,0x4
  432885:	mov    QWORD PTR [rbp-0x18],rax
  432889:	mov    eax,DWORD PTR [rbp-0x38]
  43288c:	movsxd rdx,eax
  43288f:	mov    rcx,QWORD PTR [rbp-0x40]
  432893:	mov    rax,QWORD PTR [rbp-0x28]
  432897:	mov    rsi,rcx
  43289a:	mov    rdi,rax
  43289d:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  4328a2:	mov    rax,QWORD PTR [rbp-0x28]
  4328a6:	mov    eax,DWORD PTR [rax+0x38]
  4328a9:	lea    edx,[rax+0x1]
  4328ac:	mov    rax,QWORD PTR [rbp-0x28]
  4328b0:	mov    DWORD PTR [rax+0x38],edx
  4328b3:	mov    rax,QWORD PTR [rbp-0x28]
  4328b7:	mov    rax,QWORD PTR [rax+0x28]
  4328bb:	lea    rcx,[rax+0x1]
  4328bf:	mov    rdx,QWORD PTR [rbp-0x28]
  4328c3:	mov    QWORD PTR [rdx+0x28],rcx
  4328c7:	mov    BYTE PTR [rax],0x5b
  4328ca:	cmp    DWORD PTR [rbp-0x1c],0x0
  4328ce:	je     4329f5 <flatcc_json_printer_bool_vector_field@@Base+0x203>
  4328d4:	mov    rax,QWORD PTR [rbp-0x28]
  4328d8:	movzx  eax,BYTE PTR [rax+0x31]
  4328dc:	test   al,al
  4328de:	je     432905 <flatcc_json_printer_bool_vector_field@@Base+0x113>
  4328e0:	mov    rax,QWORD PTR [rbp-0x28]
  4328e4:	mov    rax,QWORD PTR [rax+0x28]
  4328e8:	lea    rcx,[rax+0x1]
  4328ec:	mov    rdx,QWORD PTR [rbp-0x28]
  4328f0:	mov    QWORD PTR [rdx+0x28],rcx
  4328f4:	mov    BYTE PTR [rax],0xa
  4328f7:	mov    rax,QWORD PTR [rbp-0x28]
  4328fb:	mov    rdi,rax
  4328fe:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432903:	jmp    432911 <flatcc_json_printer_bool_vector_field@@Base+0x11f>
  432905:	mov    rax,QWORD PTR [rbp-0x28]
  432909:	mov    rdi,rax
  43290c:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  432911:	mov    rax,QWORD PTR [rbp-0x28]
  432915:	mov    rbx,QWORD PTR [rax+0x28]
  432919:	mov    rax,QWORD PTR [rbp-0x18]
  43291d:	mov    rdi,rax
  432920:	call   42ab4b <flatcc_json_parser_struct_as_root@@Base+0x336>
  432925:	movzx  eax,al
  432928:	mov    rsi,rbx
  43292b:	mov    edi,eax
  43292d:	call   42acb6 <flatcc_json_parser_struct_as_root@@Base+0x4a1>
  432932:	mov    ecx,eax
  432934:	mov    rax,QWORD PTR [rbp-0x28]
  432938:	mov    rdx,QWORD PTR [rax+0x28]
  43293c:	movsxd rax,ecx
  43293f:	add    rdx,rax
  432942:	mov    rax,QWORD PTR [rbp-0x28]
  432946:	mov    QWORD PTR [rax+0x28],rdx
  43294a:	mov    rax,QWORD PTR [rbp-0x18]
  43294e:	inc    rax
  432951:	mov    QWORD PTR [rbp-0x18],rax
  432955:	dec    DWORD PTR [rbp-0x1c]
  432958:	jmp    4329f5 <flatcc_json_printer_bool_vector_field@@Base+0x203>
  43295d:	mov    rax,QWORD PTR [rbp-0x28]
  432961:	mov    rax,QWORD PTR [rax+0x28]
  432965:	lea    rcx,[rax+0x1]
  432969:	mov    rdx,QWORD PTR [rbp-0x28]
  43296d:	mov    QWORD PTR [rdx+0x28],rcx
  432971:	mov    BYTE PTR [rax],0x2c
  432974:	mov    rax,QWORD PTR [rbp-0x28]
  432978:	movzx  eax,BYTE PTR [rax+0x31]
  43297c:	test   al,al
  43297e:	je     4329a5 <flatcc_json_printer_bool_vector_field@@Base+0x1b3>
  432980:	mov    rax,QWORD PTR [rbp-0x28]
  432984:	mov    rax,QWORD PTR [rax+0x28]
  432988:	lea    rcx,[rax+0x1]
  43298c:	mov    rdx,QWORD PTR [rbp-0x28]
  432990:	mov    QWORD PTR [rdx+0x28],rcx
  432994:	mov    BYTE PTR [rax],0xa
  432997:	mov    rax,QWORD PTR [rbp-0x28]
  43299b:	mov    rdi,rax
  43299e:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4329a3:	jmp    4329b1 <flatcc_json_printer_bool_vector_field@@Base+0x1bf>
  4329a5:	mov    rax,QWORD PTR [rbp-0x28]
  4329a9:	mov    rdi,rax
  4329ac:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4329b1:	mov    rax,QWORD PTR [rbp-0x28]
  4329b5:	mov    rbx,QWORD PTR [rax+0x28]
  4329b9:	mov    rax,QWORD PTR [rbp-0x18]
  4329bd:	mov    rdi,rax
  4329c0:	call   42ab4b <flatcc_json_parser_struct_as_root@@Base+0x336>
  4329c5:	movzx  eax,al
  4329c8:	mov    rsi,rbx
  4329cb:	mov    edi,eax
  4329cd:	call   42acb6 <flatcc_json_parser_struct_as_root@@Base+0x4a1>
  4329d2:	mov    ecx,eax
  4329d4:	mov    rax,QWORD PTR [rbp-0x28]
  4329d8:	mov    rdx,QWORD PTR [rax+0x28]
  4329dc:	movsxd rax,ecx
  4329df:	add    rdx,rax
  4329e2:	mov    rax,QWORD PTR [rbp-0x28]
  4329e6:	mov    QWORD PTR [rax+0x28],rdx
  4329ea:	mov    rax,QWORD PTR [rbp-0x18]
  4329ee:	inc    rax
  4329f1:	mov    QWORD PTR [rbp-0x18],rax
  4329f5:	mov    eax,DWORD PTR [rbp-0x1c]
  4329f8:	lea    edx,[rax-0x1]
  4329fb:	mov    DWORD PTR [rbp-0x1c],edx
  4329fe:	test   eax,eax
  432a00:	jne    43295d <flatcc_json_printer_bool_vector_field@@Base+0x16b>
  432a06:	mov    rax,QWORD PTR [rbp-0x28]
  432a0a:	movzx  eax,BYTE PTR [rax+0x31]
  432a0e:	test   al,al
  432a10:	je     432a46 <flatcc_json_printer_bool_vector_field@@Base+0x254>
  432a12:	mov    rax,QWORD PTR [rbp-0x28]
  432a16:	mov    rax,QWORD PTR [rax+0x28]
  432a1a:	lea    rcx,[rax+0x1]
  432a1e:	mov    rdx,QWORD PTR [rbp-0x28]
  432a22:	mov    QWORD PTR [rdx+0x28],rcx
  432a26:	mov    BYTE PTR [rax],0xa
  432a29:	mov    rax,QWORD PTR [rbp-0x28]
  432a2d:	mov    eax,DWORD PTR [rax+0x38]
  432a30:	lea    edx,[rax-0x1]
  432a33:	mov    rax,QWORD PTR [rbp-0x28]
  432a37:	mov    DWORD PTR [rax+0x38],edx
  432a3a:	mov    rax,QWORD PTR [rbp-0x28]
  432a3e:	mov    rdi,rax
  432a41:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432a46:	mov    rax,QWORD PTR [rbp-0x28]
  432a4a:	mov    rax,QWORD PTR [rax+0x28]
  432a4e:	lea    rcx,[rax+0x1]
  432a52:	mov    rdx,QWORD PTR [rbp-0x28]
  432a56:	mov    QWORD PTR [rdx+0x28],rcx
  432a5a:	mov    BYTE PTR [rax],0x5d
  432a5d:	nop
  432a5e:	add    rsp,0x38
  432a62:	pop    rbx
  432a63:	pop    rbp
  432a64:	ret    

0000000000432a65 <flatcc_json_printer_float_vector_field@@Base>:
  432a65:	endbr64 
  432a69:	push   rbp
  432a6a:	mov    rbp,rsp
  432a6d:	push   rbx
  432a6e:	sub    rsp,0x38
  432a72:	mov    QWORD PTR [rbp-0x28],rdi
  432a76:	mov    QWORD PTR [rbp-0x30],rsi
  432a7a:	mov    DWORD PTR [rbp-0x34],edx
  432a7d:	mov    QWORD PTR [rbp-0x40],rcx
  432a81:	mov    DWORD PTR [rbp-0x38],r8d
  432a85:	mov    edx,DWORD PTR [rbp-0x34]
  432a88:	mov    rax,QWORD PTR [rbp-0x30]
  432a8c:	mov    esi,edx
  432a8e:	mov    rdi,rax
  432a91:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  432a96:	mov    QWORD PTR [rbp-0x18],rax
  432a9a:	cmp    QWORD PTR [rbp-0x18],0x0
  432a9f:	je     432ce4 <flatcc_json_printer_float_vector_field@@Base+0x27f>
  432aa5:	mov    rax,QWORD PTR [rbp-0x30]
  432aa9:	mov    eax,DWORD PTR [rax+0x18]
  432aac:	lea    ecx,[rax+0x1]
  432aaf:	mov    rdx,QWORD PTR [rbp-0x30]
  432ab3:	mov    DWORD PTR [rdx+0x18],ecx
  432ab6:	test   eax,eax
  432ab8:	je     432ad1 <flatcc_json_printer_float_vector_field@@Base+0x6c>
  432aba:	mov    rax,QWORD PTR [rbp-0x28]
  432abe:	mov    rax,QWORD PTR [rax+0x28]
  432ac2:	lea    rcx,[rax+0x1]
  432ac6:	mov    rdx,QWORD PTR [rbp-0x28]
  432aca:	mov    QWORD PTR [rdx+0x28],rcx
  432ace:	mov    BYTE PTR [rax],0x2c
  432ad1:	mov    rax,QWORD PTR [rbp-0x18]
  432ad5:	mov    rdi,rax
  432ad8:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  432add:	mov    QWORD PTR [rbp-0x18],rax
  432ae1:	mov    rax,QWORD PTR [rbp-0x18]
  432ae5:	mov    rdi,rax
  432ae8:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  432aed:	mov    DWORD PTR [rbp-0x1c],eax
  432af0:	mov    rax,QWORD PTR [rbp-0x18]
  432af4:	add    rax,0x4
  432af8:	mov    QWORD PTR [rbp-0x18],rax
  432afc:	mov    eax,DWORD PTR [rbp-0x38]
  432aff:	movsxd rdx,eax
  432b02:	mov    rcx,QWORD PTR [rbp-0x40]
  432b06:	mov    rax,QWORD PTR [rbp-0x28]
  432b0a:	mov    rsi,rcx
  432b0d:	mov    rdi,rax
  432b10:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  432b15:	mov    rax,QWORD PTR [rbp-0x28]
  432b19:	mov    eax,DWORD PTR [rax+0x38]
  432b1c:	lea    edx,[rax+0x1]
  432b1f:	mov    rax,QWORD PTR [rbp-0x28]
  432b23:	mov    DWORD PTR [rax+0x38],edx
  432b26:	mov    rax,QWORD PTR [rbp-0x28]
  432b2a:	mov    rax,QWORD PTR [rax+0x28]
  432b2e:	lea    rcx,[rax+0x1]
  432b32:	mov    rdx,QWORD PTR [rbp-0x28]
  432b36:	mov    QWORD PTR [rdx+0x28],rcx
  432b3a:	mov    BYTE PTR [rax],0x5b
  432b3d:	cmp    DWORD PTR [rbp-0x1c],0x0
  432b41:	je     432c7c <flatcc_json_printer_float_vector_field@@Base+0x217>
  432b47:	mov    rax,QWORD PTR [rbp-0x28]
  432b4b:	movzx  eax,BYTE PTR [rax+0x31]
  432b4f:	test   al,al
  432b51:	je     432b78 <flatcc_json_printer_float_vector_field@@Base+0x113>
  432b53:	mov    rax,QWORD PTR [rbp-0x28]
  432b57:	mov    rax,QWORD PTR [rax+0x28]
  432b5b:	lea    rcx,[rax+0x1]
  432b5f:	mov    rdx,QWORD PTR [rbp-0x28]
  432b63:	mov    QWORD PTR [rdx+0x28],rcx
  432b67:	mov    BYTE PTR [rax],0xa
  432b6a:	mov    rax,QWORD PTR [rbp-0x28]
  432b6e:	mov    rdi,rax
  432b71:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432b76:	jmp    432b84 <flatcc_json_printer_float_vector_field@@Base+0x11f>
  432b78:	mov    rax,QWORD PTR [rbp-0x28]
  432b7c:	mov    rdi,rax
  432b7f:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  432b84:	mov    rax,QWORD PTR [rbp-0x28]
  432b88:	mov    rbx,QWORD PTR [rax+0x28]
  432b8c:	mov    rax,QWORD PTR [rbp-0x18]
  432b90:	mov    rdi,rax
  432b93:	call   42aaca <flatcc_json_parser_struct_as_root@@Base+0x2b5>
  432b98:	vcvtss2sd xmm1,xmm1,xmm0
  432b9c:	vmovq  rax,xmm1
  432ba1:	mov    rdi,rbx
  432ba4:	vmovq  xmm0,rax
  432ba9:	call   42d01c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  432bae:	mov    ecx,eax
  432bb0:	mov    rax,QWORD PTR [rbp-0x28]
  432bb4:	mov    rdx,QWORD PTR [rax+0x28]
  432bb8:	movsxd rax,ecx
  432bbb:	add    rdx,rax
  432bbe:	mov    rax,QWORD PTR [rbp-0x28]
  432bc2:	mov    QWORD PTR [rax+0x28],rdx
  432bc6:	mov    rax,QWORD PTR [rbp-0x18]
  432bca:	add    rax,0x4
  432bce:	mov    QWORD PTR [rbp-0x18],rax
  432bd2:	dec    DWORD PTR [rbp-0x1c]
  432bd5:	jmp    432c7c <flatcc_json_printer_float_vector_field@@Base+0x217>
  432bda:	mov    rax,QWORD PTR [rbp-0x28]
  432bde:	mov    rax,QWORD PTR [rax+0x28]
  432be2:	lea    rcx,[rax+0x1]
  432be6:	mov    rdx,QWORD PTR [rbp-0x28]
  432bea:	mov    QWORD PTR [rdx+0x28],rcx
  432bee:	mov    BYTE PTR [rax],0x2c
  432bf1:	mov    rax,QWORD PTR [rbp-0x28]
  432bf5:	movzx  eax,BYTE PTR [rax+0x31]
  432bf9:	test   al,al
  432bfb:	je     432c22 <flatcc_json_printer_float_vector_field@@Base+0x1bd>
  432bfd:	mov    rax,QWORD PTR [rbp-0x28]
  432c01:	mov    rax,QWORD PTR [rax+0x28]
  432c05:	lea    rcx,[rax+0x1]
  432c09:	mov    rdx,QWORD PTR [rbp-0x28]
  432c0d:	mov    QWORD PTR [rdx+0x28],rcx
  432c11:	mov    BYTE PTR [rax],0xa
  432c14:	mov    rax,QWORD PTR [rbp-0x28]
  432c18:	mov    rdi,rax
  432c1b:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432c20:	jmp    432c2e <flatcc_json_printer_float_vector_field@@Base+0x1c9>
  432c22:	mov    rax,QWORD PTR [rbp-0x28]
  432c26:	mov    rdi,rax
  432c29:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  432c2e:	mov    rax,QWORD PTR [rbp-0x28]
  432c32:	mov    rbx,QWORD PTR [rax+0x28]
  432c36:	mov    rax,QWORD PTR [rbp-0x18]
  432c3a:	mov    rdi,rax
  432c3d:	call   42aaca <flatcc_json_parser_struct_as_root@@Base+0x2b5>
  432c42:	vcvtss2sd xmm2,xmm2,xmm0
  432c46:	vmovq  rax,xmm2
  432c4b:	mov    rdi,rbx
  432c4e:	vmovq  xmm0,rax
  432c53:	call   42d01c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  432c58:	mov    ecx,eax
  432c5a:	mov    rax,QWORD PTR [rbp-0x28]
  432c5e:	mov    rdx,QWORD PTR [rax+0x28]
  432c62:	movsxd rax,ecx
  432c65:	add    rdx,rax
  432c68:	mov    rax,QWORD PTR [rbp-0x28]
  432c6c:	mov    QWORD PTR [rax+0x28],rdx
  432c70:	mov    rax,QWORD PTR [rbp-0x18]
  432c74:	add    rax,0x4
  432c78:	mov    QWORD PTR [rbp-0x18],rax
  432c7c:	mov    eax,DWORD PTR [rbp-0x1c]
  432c7f:	lea    edx,[rax-0x1]
  432c82:	mov    DWORD PTR [rbp-0x1c],edx
  432c85:	test   eax,eax
  432c87:	jne    432bda <flatcc_json_printer_float_vector_field@@Base+0x175>
  432c8d:	mov    rax,QWORD PTR [rbp-0x28]
  432c91:	movzx  eax,BYTE PTR [rax+0x31]
  432c95:	test   al,al
  432c97:	je     432ccd <flatcc_json_printer_float_vector_field@@Base+0x268>
  432c99:	mov    rax,QWORD PTR [rbp-0x28]
  432c9d:	mov    rax,QWORD PTR [rax+0x28]
  432ca1:	lea    rcx,[rax+0x1]
  432ca5:	mov    rdx,QWORD PTR [rbp-0x28]
  432ca9:	mov    QWORD PTR [rdx+0x28],rcx
  432cad:	mov    BYTE PTR [rax],0xa
  432cb0:	mov    rax,QWORD PTR [rbp-0x28]
  432cb4:	mov    eax,DWORD PTR [rax+0x38]
  432cb7:	lea    edx,[rax-0x1]
  432cba:	mov    rax,QWORD PTR [rbp-0x28]
  432cbe:	mov    DWORD PTR [rax+0x38],edx
  432cc1:	mov    rax,QWORD PTR [rbp-0x28]
  432cc5:	mov    rdi,rax
  432cc8:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432ccd:	mov    rax,QWORD PTR [rbp-0x28]
  432cd1:	mov    rax,QWORD PTR [rax+0x28]
  432cd5:	lea    rcx,[rax+0x1]
  432cd9:	mov    rdx,QWORD PTR [rbp-0x28]
  432cdd:	mov    QWORD PTR [rdx+0x28],rcx
  432ce1:	mov    BYTE PTR [rax],0x5d
  432ce4:	nop
  432ce5:	add    rsp,0x38
  432ce9:	pop    rbx
  432cea:	pop    rbp
  432ceb:	ret    

0000000000432cec <flatcc_json_printer_double_vector_field@@Base>:
  432cec:	endbr64 
  432cf0:	push   rbp
  432cf1:	mov    rbp,rsp
  432cf4:	push   rbx
  432cf5:	sub    rsp,0x38
  432cf9:	mov    QWORD PTR [rbp-0x28],rdi
  432cfd:	mov    QWORD PTR [rbp-0x30],rsi
  432d01:	mov    DWORD PTR [rbp-0x34],edx
  432d04:	mov    QWORD PTR [rbp-0x40],rcx
  432d08:	mov    DWORD PTR [rbp-0x38],r8d
  432d0c:	mov    edx,DWORD PTR [rbp-0x34]
  432d0f:	mov    rax,QWORD PTR [rbp-0x30]
  432d13:	mov    esi,edx
  432d15:	mov    rdi,rax
  432d18:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  432d1d:	mov    QWORD PTR [rbp-0x18],rax
  432d21:	cmp    QWORD PTR [rbp-0x18],0x0
  432d26:	je     432f63 <flatcc_json_printer_double_vector_field@@Base+0x277>
  432d2c:	mov    rax,QWORD PTR [rbp-0x30]
  432d30:	mov    eax,DWORD PTR [rax+0x18]
  432d33:	lea    ecx,[rax+0x1]
  432d36:	mov    rdx,QWORD PTR [rbp-0x30]
  432d3a:	mov    DWORD PTR [rdx+0x18],ecx
  432d3d:	test   eax,eax
  432d3f:	je     432d58 <flatcc_json_printer_double_vector_field@@Base+0x6c>
  432d41:	mov    rax,QWORD PTR [rbp-0x28]
  432d45:	mov    rax,QWORD PTR [rax+0x28]
  432d49:	lea    rcx,[rax+0x1]
  432d4d:	mov    rdx,QWORD PTR [rbp-0x28]
  432d51:	mov    QWORD PTR [rdx+0x28],rcx
  432d55:	mov    BYTE PTR [rax],0x2c
  432d58:	mov    rax,QWORD PTR [rbp-0x18]
  432d5c:	mov    rdi,rax
  432d5f:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  432d64:	mov    QWORD PTR [rbp-0x18],rax
  432d68:	mov    rax,QWORD PTR [rbp-0x18]
  432d6c:	mov    rdi,rax
  432d6f:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  432d74:	mov    DWORD PTR [rbp-0x1c],eax
  432d77:	mov    rax,QWORD PTR [rbp-0x18]
  432d7b:	add    rax,0x4
  432d7f:	mov    QWORD PTR [rbp-0x18],rax
  432d83:	mov    eax,DWORD PTR [rbp-0x38]
  432d86:	movsxd rdx,eax
  432d89:	mov    rcx,QWORD PTR [rbp-0x40]
  432d8d:	mov    rax,QWORD PTR [rbp-0x28]
  432d91:	mov    rsi,rcx
  432d94:	mov    rdi,rax
  432d97:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  432d9c:	mov    rax,QWORD PTR [rbp-0x28]
  432da0:	mov    eax,DWORD PTR [rax+0x38]
  432da3:	lea    edx,[rax+0x1]
  432da6:	mov    rax,QWORD PTR [rbp-0x28]
  432daa:	mov    DWORD PTR [rax+0x38],edx
  432dad:	mov    rax,QWORD PTR [rbp-0x28]
  432db1:	mov    rax,QWORD PTR [rax+0x28]
  432db5:	lea    rcx,[rax+0x1]
  432db9:	mov    rdx,QWORD PTR [rbp-0x28]
  432dbd:	mov    QWORD PTR [rdx+0x28],rcx
  432dc1:	mov    BYTE PTR [rax],0x5b
  432dc4:	cmp    DWORD PTR [rbp-0x1c],0x0
  432dc8:	je     432efb <flatcc_json_printer_double_vector_field@@Base+0x20f>
  432dce:	mov    rax,QWORD PTR [rbp-0x28]
  432dd2:	movzx  eax,BYTE PTR [rax+0x31]
  432dd6:	test   al,al
  432dd8:	je     432dff <flatcc_json_printer_double_vector_field@@Base+0x113>
  432dda:	mov    rax,QWORD PTR [rbp-0x28]
  432dde:	mov    rax,QWORD PTR [rax+0x28]
  432de2:	lea    rcx,[rax+0x1]
  432de6:	mov    rdx,QWORD PTR [rbp-0x28]
  432dea:	mov    QWORD PTR [rdx+0x28],rcx
  432dee:	mov    BYTE PTR [rax],0xa
  432df1:	mov    rax,QWORD PTR [rbp-0x28]
  432df5:	mov    rdi,rax
  432df8:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432dfd:	jmp    432e0b <flatcc_json_printer_double_vector_field@@Base+0x11f>
  432dff:	mov    rax,QWORD PTR [rbp-0x28]
  432e03:	mov    rdi,rax
  432e06:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  432e0b:	mov    rax,QWORD PTR [rbp-0x28]
  432e0f:	mov    rbx,QWORD PTR [rax+0x28]
  432e13:	mov    rax,QWORD PTR [rbp-0x18]
  432e17:	mov    rdi,rax
  432e1a:	call   42ab13 <flatcc_json_parser_struct_as_root@@Base+0x2fe>
  432e1f:	vmovq  rax,xmm0
  432e24:	mov    rdi,rbx
  432e27:	vmovq  xmm0,rax
  432e2c:	call   42d01c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  432e31:	mov    ecx,eax
  432e33:	mov    rax,QWORD PTR [rbp-0x28]
  432e37:	mov    rdx,QWORD PTR [rax+0x28]
  432e3b:	movsxd rax,ecx
  432e3e:	add    rdx,rax
  432e41:	mov    rax,QWORD PTR [rbp-0x28]
  432e45:	mov    QWORD PTR [rax+0x28],rdx
  432e49:	mov    rax,QWORD PTR [rbp-0x18]
  432e4d:	add    rax,0x8
  432e51:	mov    QWORD PTR [rbp-0x18],rax
  432e55:	dec    DWORD PTR [rbp-0x1c]
  432e58:	jmp    432efb <flatcc_json_printer_double_vector_field@@Base+0x20f>
  432e5d:	mov    rax,QWORD PTR [rbp-0x28]
  432e61:	mov    rax,QWORD PTR [rax+0x28]
  432e65:	lea    rcx,[rax+0x1]
  432e69:	mov    rdx,QWORD PTR [rbp-0x28]
  432e6d:	mov    QWORD PTR [rdx+0x28],rcx
  432e71:	mov    BYTE PTR [rax],0x2c
  432e74:	mov    rax,QWORD PTR [rbp-0x28]
  432e78:	movzx  eax,BYTE PTR [rax+0x31]
  432e7c:	test   al,al
  432e7e:	je     432ea5 <flatcc_json_printer_double_vector_field@@Base+0x1b9>
  432e80:	mov    rax,QWORD PTR [rbp-0x28]
  432e84:	mov    rax,QWORD PTR [rax+0x28]
  432e88:	lea    rcx,[rax+0x1]
  432e8c:	mov    rdx,QWORD PTR [rbp-0x28]
  432e90:	mov    QWORD PTR [rdx+0x28],rcx
  432e94:	mov    BYTE PTR [rax],0xa
  432e97:	mov    rax,QWORD PTR [rbp-0x28]
  432e9b:	mov    rdi,rax
  432e9e:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432ea3:	jmp    432eb1 <flatcc_json_printer_double_vector_field@@Base+0x1c5>
  432ea5:	mov    rax,QWORD PTR [rbp-0x28]
  432ea9:	mov    rdi,rax
  432eac:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  432eb1:	mov    rax,QWORD PTR [rbp-0x28]
  432eb5:	mov    rbx,QWORD PTR [rax+0x28]
  432eb9:	mov    rax,QWORD PTR [rbp-0x18]
  432ebd:	mov    rdi,rax
  432ec0:	call   42ab13 <flatcc_json_parser_struct_as_root@@Base+0x2fe>
  432ec5:	vmovq  rax,xmm0
  432eca:	mov    rdi,rbx
  432ecd:	vmovq  xmm0,rax
  432ed2:	call   42d01c <flatcc_json_parser_struct_as_root@@Base+0x2807>
  432ed7:	mov    ecx,eax
  432ed9:	mov    rax,QWORD PTR [rbp-0x28]
  432edd:	mov    rdx,QWORD PTR [rax+0x28]
  432ee1:	movsxd rax,ecx
  432ee4:	add    rdx,rax
  432ee7:	mov    rax,QWORD PTR [rbp-0x28]
  432eeb:	mov    QWORD PTR [rax+0x28],rdx
  432eef:	mov    rax,QWORD PTR [rbp-0x18]
  432ef3:	add    rax,0x8
  432ef7:	mov    QWORD PTR [rbp-0x18],rax
  432efb:	mov    eax,DWORD PTR [rbp-0x1c]
  432efe:	lea    edx,[rax-0x1]
  432f01:	mov    DWORD PTR [rbp-0x1c],edx
  432f04:	test   eax,eax
  432f06:	jne    432e5d <flatcc_json_printer_double_vector_field@@Base+0x171>
  432f0c:	mov    rax,QWORD PTR [rbp-0x28]
  432f10:	movzx  eax,BYTE PTR [rax+0x31]
  432f14:	test   al,al
  432f16:	je     432f4c <flatcc_json_printer_double_vector_field@@Base+0x260>
  432f18:	mov    rax,QWORD PTR [rbp-0x28]
  432f1c:	mov    rax,QWORD PTR [rax+0x28]
  432f20:	lea    rcx,[rax+0x1]
  432f24:	mov    rdx,QWORD PTR [rbp-0x28]
  432f28:	mov    QWORD PTR [rdx+0x28],rcx
  432f2c:	mov    BYTE PTR [rax],0xa
  432f2f:	mov    rax,QWORD PTR [rbp-0x28]
  432f33:	mov    eax,DWORD PTR [rax+0x38]
  432f36:	lea    edx,[rax-0x1]
  432f39:	mov    rax,QWORD PTR [rbp-0x28]
  432f3d:	mov    DWORD PTR [rax+0x38],edx
  432f40:	mov    rax,QWORD PTR [rbp-0x28]
  432f44:	mov    rdi,rax
  432f47:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  432f4c:	mov    rax,QWORD PTR [rbp-0x28]
  432f50:	mov    rax,QWORD PTR [rax+0x28]
  432f54:	lea    rcx,[rax+0x1]
  432f58:	mov    rdx,QWORD PTR [rbp-0x28]
  432f5c:	mov    QWORD PTR [rdx+0x28],rcx
  432f60:	mov    BYTE PTR [rax],0x5d
  432f63:	nop
  432f64:	add    rsp,0x38
  432f68:	pop    rbx
  432f69:	pop    rbp
  432f6a:	ret    

0000000000432f6b <flatcc_json_printer_utype_enum_vector_field@@Base>:
  432f6b:	endbr64 
  432f6f:	push   rbp
  432f70:	mov    rbp,rsp
  432f73:	sub    rsp,0x40
  432f77:	mov    QWORD PTR [rbp-0x18],rdi
  432f7b:	mov    QWORD PTR [rbp-0x20],rsi
  432f7f:	mov    DWORD PTR [rbp-0x24],edx
  432f82:	mov    QWORD PTR [rbp-0x30],rcx
  432f86:	mov    DWORD PTR [rbp-0x28],r8d
  432f8a:	mov    QWORD PTR [rbp-0x38],r9
  432f8e:	mov    rax,QWORD PTR [rbp-0x18]
  432f92:	movzx  eax,BYTE PTR [rax+0x33]
  432f96:	test   al,al
  432f98:	je     432fbc <flatcc_json_printer_utype_enum_vector_field@@Base+0x51>
  432f9a:	mov    edi,DWORD PTR [rbp-0x28]
  432f9d:	mov    rcx,QWORD PTR [rbp-0x30]
  432fa1:	mov    edx,DWORD PTR [rbp-0x24]
  432fa4:	mov    rsi,QWORD PTR [rbp-0x20]
  432fa8:	mov    rax,QWORD PTR [rbp-0x18]
  432fac:	mov    r8d,edi
  432faf:	mov    rdi,rax
  432fb2:	call   4311f3 <flatcc_json_printer_utype_vector_field@@Base>
  432fb7:	jmp    4331ce <flatcc_json_printer_utype_enum_vector_field@@Base+0x263>
  432fbc:	mov    edx,DWORD PTR [rbp-0x24]
  432fbf:	mov    rax,QWORD PTR [rbp-0x20]
  432fc3:	mov    esi,edx
  432fc5:	mov    rdi,rax
  432fc8:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  432fcd:	mov    QWORD PTR [rbp-0x8],rax
  432fd1:	cmp    QWORD PTR [rbp-0x8],0x0
  432fd6:	je     4331ce <flatcc_json_printer_utype_enum_vector_field@@Base+0x263>
  432fdc:	mov    rax,QWORD PTR [rbp-0x20]
  432fe0:	mov    eax,DWORD PTR [rax+0x18]
  432fe3:	lea    ecx,[rax+0x1]
  432fe6:	mov    rdx,QWORD PTR [rbp-0x20]
  432fea:	mov    DWORD PTR [rdx+0x18],ecx
  432fed:	test   eax,eax
  432fef:	je     433008 <flatcc_json_printer_utype_enum_vector_field@@Base+0x9d>
  432ff1:	mov    rax,QWORD PTR [rbp-0x18]
  432ff5:	mov    rax,QWORD PTR [rax+0x28]
  432ff9:	lea    rcx,[rax+0x1]
  432ffd:	mov    rdx,QWORD PTR [rbp-0x18]
  433001:	mov    QWORD PTR [rdx+0x28],rcx
  433005:	mov    BYTE PTR [rax],0x2c
  433008:	mov    rax,QWORD PTR [rbp-0x8]
  43300c:	mov    rdi,rax
  43300f:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  433014:	mov    QWORD PTR [rbp-0x8],rax
  433018:	mov    rax,QWORD PTR [rbp-0x8]
  43301c:	mov    rdi,rax
  43301f:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  433024:	mov    DWORD PTR [rbp-0xc],eax
  433027:	mov    rax,QWORD PTR [rbp-0x8]
  43302b:	add    rax,0x4
  43302f:	mov    QWORD PTR [rbp-0x8],rax
  433033:	mov    eax,DWORD PTR [rbp-0x28]
  433036:	movsxd rdx,eax
  433039:	mov    rcx,QWORD PTR [rbp-0x30]
  43303d:	mov    rax,QWORD PTR [rbp-0x18]
  433041:	mov    rsi,rcx
  433044:	mov    rdi,rax
  433047:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  43304c:	mov    rax,QWORD PTR [rbp-0x18]
  433050:	mov    eax,DWORD PTR [rax+0x38]
  433053:	lea    edx,[rax+0x1]
  433056:	mov    rax,QWORD PTR [rbp-0x18]
  43305a:	mov    DWORD PTR [rax+0x38],edx
  43305d:	mov    rax,QWORD PTR [rbp-0x18]
  433061:	mov    rax,QWORD PTR [rax+0x28]
  433065:	lea    rcx,[rax+0x1]
  433069:	mov    rdx,QWORD PTR [rbp-0x18]
  43306d:	mov    QWORD PTR [rdx+0x28],rcx
  433071:	mov    BYTE PTR [rax],0x5b
  433074:	cmp    DWORD PTR [rbp-0xc],0x0
  433078:	je     433166 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1fb>
  43307e:	mov    rax,QWORD PTR [rbp-0x18]
  433082:	movzx  eax,BYTE PTR [rax+0x31]
  433086:	test   al,al
  433088:	je     4330af <flatcc_json_printer_utype_enum_vector_field@@Base+0x144>
  43308a:	mov    rax,QWORD PTR [rbp-0x18]
  43308e:	mov    rax,QWORD PTR [rax+0x28]
  433092:	lea    rcx,[rax+0x1]
  433096:	mov    rdx,QWORD PTR [rbp-0x18]
  43309a:	mov    QWORD PTR [rdx+0x28],rcx
  43309e:	mov    BYTE PTR [rax],0xa
  4330a1:	mov    rax,QWORD PTR [rbp-0x18]
  4330a5:	mov    rdi,rax
  4330a8:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4330ad:	jmp    4330bb <flatcc_json_printer_utype_enum_vector_field@@Base+0x150>
  4330af:	mov    rax,QWORD PTR [rbp-0x18]
  4330b3:	mov    rdi,rax
  4330b6:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4330bb:	mov    rax,QWORD PTR [rbp-0x8]
  4330bf:	mov    rdi,rax
  4330c2:	call   42abf6 <flatcc_json_parser_struct_as_root@@Base+0x3e1>
  4330c7:	movzx  ecx,al
  4330ca:	mov    rdx,QWORD PTR [rbp-0x18]
  4330ce:	mov    rax,QWORD PTR [rbp-0x38]
  4330d2:	mov    esi,ecx
  4330d4:	mov    rdi,rdx
  4330d7:	call   rax
  4330d9:	mov    rax,QWORD PTR [rbp-0x8]
  4330dd:	inc    rax
  4330e0:	mov    QWORD PTR [rbp-0x8],rax
  4330e4:	dec    DWORD PTR [rbp-0xc]
  4330e7:	jmp    433166 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1fb>
  4330e9:	mov    rax,QWORD PTR [rbp-0x18]
  4330ed:	mov    rax,QWORD PTR [rax+0x28]
  4330f1:	lea    rcx,[rax+0x1]
  4330f5:	mov    rdx,QWORD PTR [rbp-0x18]
  4330f9:	mov    QWORD PTR [rdx+0x28],rcx
  4330fd:	mov    BYTE PTR [rax],0x2c
  433100:	mov    rax,QWORD PTR [rbp-0x18]
  433104:	movzx  eax,BYTE PTR [rax+0x31]
  433108:	test   al,al
  43310a:	je     433131 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1c6>
  43310c:	mov    rax,QWORD PTR [rbp-0x18]
  433110:	mov    rax,QWORD PTR [rax+0x28]
  433114:	lea    rcx,[rax+0x1]
  433118:	mov    rdx,QWORD PTR [rbp-0x18]
  43311c:	mov    QWORD PTR [rdx+0x28],rcx
  433120:	mov    BYTE PTR [rax],0xa
  433123:	mov    rax,QWORD PTR [rbp-0x18]
  433127:	mov    rdi,rax
  43312a:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43312f:	jmp    43313d <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d2>
  433131:	mov    rax,QWORD PTR [rbp-0x18]
  433135:	mov    rdi,rax
  433138:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  43313d:	mov    rax,QWORD PTR [rbp-0x8]
  433141:	mov    rdi,rax
  433144:	call   42abf6 <flatcc_json_parser_struct_as_root@@Base+0x3e1>
  433149:	movzx  ecx,al
  43314c:	mov    rdx,QWORD PTR [rbp-0x18]
  433150:	mov    rax,QWORD PTR [rbp-0x38]
  433154:	mov    esi,ecx
  433156:	mov    rdi,rdx
  433159:	call   rax
  43315b:	mov    rax,QWORD PTR [rbp-0x8]
  43315f:	inc    rax
  433162:	mov    QWORD PTR [rbp-0x8],rax
  433166:	mov    eax,DWORD PTR [rbp-0xc]
  433169:	lea    edx,[rax-0x1]
  43316c:	mov    DWORD PTR [rbp-0xc],edx
  43316f:	test   eax,eax
  433171:	jne    4330e9 <flatcc_json_printer_utype_enum_vector_field@@Base+0x17e>
  433177:	mov    rax,QWORD PTR [rbp-0x18]
  43317b:	movzx  eax,BYTE PTR [rax+0x31]
  43317f:	test   al,al
  433181:	je     4331b7 <flatcc_json_printer_utype_enum_vector_field@@Base+0x24c>
  433183:	mov    rax,QWORD PTR [rbp-0x18]
  433187:	mov    rax,QWORD PTR [rax+0x28]
  43318b:	lea    rcx,[rax+0x1]
  43318f:	mov    rdx,QWORD PTR [rbp-0x18]
  433193:	mov    QWORD PTR [rdx+0x28],rcx
  433197:	mov    BYTE PTR [rax],0xa
  43319a:	mov    rax,QWORD PTR [rbp-0x18]
  43319e:	mov    eax,DWORD PTR [rax+0x38]
  4331a1:	lea    edx,[rax-0x1]
  4331a4:	mov    rax,QWORD PTR [rbp-0x18]
  4331a8:	mov    DWORD PTR [rax+0x38],edx
  4331ab:	mov    rax,QWORD PTR [rbp-0x18]
  4331af:	mov    rdi,rax
  4331b2:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4331b7:	mov    rax,QWORD PTR [rbp-0x18]
  4331bb:	mov    rax,QWORD PTR [rax+0x28]
  4331bf:	lea    rcx,[rax+0x1]
  4331c3:	mov    rdx,QWORD PTR [rbp-0x18]
  4331c7:	mov    QWORD PTR [rdx+0x28],rcx
  4331cb:	mov    BYTE PTR [rax],0x5d
  4331ce:	leave  
  4331cf:	ret    

00000000004331d0 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
  4331d0:	endbr64 
  4331d4:	push   rbp
  4331d5:	mov    rbp,rsp
  4331d8:	sub    rsp,0x40
  4331dc:	mov    QWORD PTR [rbp-0x18],rdi
  4331e0:	mov    QWORD PTR [rbp-0x20],rsi
  4331e4:	mov    DWORD PTR [rbp-0x24],edx
  4331e7:	mov    QWORD PTR [rbp-0x30],rcx
  4331eb:	mov    DWORD PTR [rbp-0x28],r8d
  4331ef:	mov    QWORD PTR [rbp-0x38],r9
  4331f3:	mov    rax,QWORD PTR [rbp-0x18]
  4331f7:	movzx  eax,BYTE PTR [rax+0x33]
  4331fb:	test   al,al
  4331fd:	je     433221 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x51>
  4331ff:	mov    edi,DWORD PTR [rbp-0x28]
  433202:	mov    rcx,QWORD PTR [rbp-0x30]
  433206:	mov    edx,DWORD PTR [rbp-0x24]
  433209:	mov    rsi,QWORD PTR [rbp-0x20]
  43320d:	mov    rax,QWORD PTR [rbp-0x18]
  433211:	mov    r8d,edi
  433214:	mov    rdi,rax
  433217:	call   431466 <flatcc_json_printer_uint8_vector_field@@Base>
  43321c:	jmp    433433 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x263>
  433221:	mov    edx,DWORD PTR [rbp-0x24]
  433224:	mov    rax,QWORD PTR [rbp-0x20]
  433228:	mov    esi,edx
  43322a:	mov    rdi,rax
  43322d:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  433232:	mov    QWORD PTR [rbp-0x8],rax
  433236:	cmp    QWORD PTR [rbp-0x8],0x0
  43323b:	je     433433 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x263>
  433241:	mov    rax,QWORD PTR [rbp-0x20]
  433245:	mov    eax,DWORD PTR [rax+0x18]
  433248:	lea    ecx,[rax+0x1]
  43324b:	mov    rdx,QWORD PTR [rbp-0x20]
  43324f:	mov    DWORD PTR [rdx+0x18],ecx
  433252:	test   eax,eax
  433254:	je     43326d <flatcc_json_printer_uint8_enum_vector_field@@Base+0x9d>
  433256:	mov    rax,QWORD PTR [rbp-0x18]
  43325a:	mov    rax,QWORD PTR [rax+0x28]
  43325e:	lea    rcx,[rax+0x1]
  433262:	mov    rdx,QWORD PTR [rbp-0x18]
  433266:	mov    QWORD PTR [rdx+0x28],rcx
  43326a:	mov    BYTE PTR [rax],0x2c
  43326d:	mov    rax,QWORD PTR [rbp-0x8]
  433271:	mov    rdi,rax
  433274:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  433279:	mov    QWORD PTR [rbp-0x8],rax
  43327d:	mov    rax,QWORD PTR [rbp-0x8]
  433281:	mov    rdi,rax
  433284:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  433289:	mov    DWORD PTR [rbp-0xc],eax
  43328c:	mov    rax,QWORD PTR [rbp-0x8]
  433290:	add    rax,0x4
  433294:	mov    QWORD PTR [rbp-0x8],rax
  433298:	mov    eax,DWORD PTR [rbp-0x28]
  43329b:	movsxd rdx,eax
  43329e:	mov    rcx,QWORD PTR [rbp-0x30]
  4332a2:	mov    rax,QWORD PTR [rbp-0x18]
  4332a6:	mov    rsi,rcx
  4332a9:	mov    rdi,rax
  4332ac:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  4332b1:	mov    rax,QWORD PTR [rbp-0x18]
  4332b5:	mov    eax,DWORD PTR [rax+0x38]
  4332b8:	lea    edx,[rax+0x1]
  4332bb:	mov    rax,QWORD PTR [rbp-0x18]
  4332bf:	mov    DWORD PTR [rax+0x38],edx
  4332c2:	mov    rax,QWORD PTR [rbp-0x18]
  4332c6:	mov    rax,QWORD PTR [rax+0x28]
  4332ca:	lea    rcx,[rax+0x1]
  4332ce:	mov    rdx,QWORD PTR [rbp-0x18]
  4332d2:	mov    QWORD PTR [rdx+0x28],rcx
  4332d6:	mov    BYTE PTR [rax],0x5b
  4332d9:	cmp    DWORD PTR [rbp-0xc],0x0
  4332dd:	je     4333cb <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1fb>
  4332e3:	mov    rax,QWORD PTR [rbp-0x18]
  4332e7:	movzx  eax,BYTE PTR [rax+0x31]
  4332eb:	test   al,al
  4332ed:	je     433314 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x144>
  4332ef:	mov    rax,QWORD PTR [rbp-0x18]
  4332f3:	mov    rax,QWORD PTR [rax+0x28]
  4332f7:	lea    rcx,[rax+0x1]
  4332fb:	mov    rdx,QWORD PTR [rbp-0x18]
  4332ff:	mov    QWORD PTR [rdx+0x28],rcx
  433303:	mov    BYTE PTR [rax],0xa
  433306:	mov    rax,QWORD PTR [rbp-0x18]
  43330a:	mov    rdi,rax
  43330d:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433312:	jmp    433320 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x150>
  433314:	mov    rax,QWORD PTR [rbp-0x18]
  433318:	mov    rdi,rax
  43331b:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  433320:	mov    rax,QWORD PTR [rbp-0x8]
  433324:	mov    rdi,rax
  433327:	call   42a95d <flatcc_json_parser_struct_as_root@@Base+0x148>
  43332c:	movzx  ecx,al
  43332f:	mov    rdx,QWORD PTR [rbp-0x18]
  433333:	mov    rax,QWORD PTR [rbp-0x38]
  433337:	mov    esi,ecx
  433339:	mov    rdi,rdx
  43333c:	call   rax
  43333e:	mov    rax,QWORD PTR [rbp-0x8]
  433342:	inc    rax
  433345:	mov    QWORD PTR [rbp-0x8],rax
  433349:	dec    DWORD PTR [rbp-0xc]
  43334c:	jmp    4333cb <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1fb>
  43334e:	mov    rax,QWORD PTR [rbp-0x18]
  433352:	mov    rax,QWORD PTR [rax+0x28]
  433356:	lea    rcx,[rax+0x1]
  43335a:	mov    rdx,QWORD PTR [rbp-0x18]
  43335e:	mov    QWORD PTR [rdx+0x28],rcx
  433362:	mov    BYTE PTR [rax],0x2c
  433365:	mov    rax,QWORD PTR [rbp-0x18]
  433369:	movzx  eax,BYTE PTR [rax+0x31]
  43336d:	test   al,al
  43336f:	je     433396 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1c6>
  433371:	mov    rax,QWORD PTR [rbp-0x18]
  433375:	mov    rax,QWORD PTR [rax+0x28]
  433379:	lea    rcx,[rax+0x1]
  43337d:	mov    rdx,QWORD PTR [rbp-0x18]
  433381:	mov    QWORD PTR [rdx+0x28],rcx
  433385:	mov    BYTE PTR [rax],0xa
  433388:	mov    rax,QWORD PTR [rbp-0x18]
  43338c:	mov    rdi,rax
  43338f:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433394:	jmp    4333a2 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d2>
  433396:	mov    rax,QWORD PTR [rbp-0x18]
  43339a:	mov    rdi,rax
  43339d:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4333a2:	mov    rax,QWORD PTR [rbp-0x8]
  4333a6:	mov    rdi,rax
  4333a9:	call   42a95d <flatcc_json_parser_struct_as_root@@Base+0x148>
  4333ae:	movzx  ecx,al
  4333b1:	mov    rdx,QWORD PTR [rbp-0x18]
  4333b5:	mov    rax,QWORD PTR [rbp-0x38]
  4333b9:	mov    esi,ecx
  4333bb:	mov    rdi,rdx
  4333be:	call   rax
  4333c0:	mov    rax,QWORD PTR [rbp-0x8]
  4333c4:	inc    rax
  4333c7:	mov    QWORD PTR [rbp-0x8],rax
  4333cb:	mov    eax,DWORD PTR [rbp-0xc]
  4333ce:	lea    edx,[rax-0x1]
  4333d1:	mov    DWORD PTR [rbp-0xc],edx
  4333d4:	test   eax,eax
  4333d6:	jne    43334e <flatcc_json_printer_uint8_enum_vector_field@@Base+0x17e>
  4333dc:	mov    rax,QWORD PTR [rbp-0x18]
  4333e0:	movzx  eax,BYTE PTR [rax+0x31]
  4333e4:	test   al,al
  4333e6:	je     43341c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x24c>
  4333e8:	mov    rax,QWORD PTR [rbp-0x18]
  4333ec:	mov    rax,QWORD PTR [rax+0x28]
  4333f0:	lea    rcx,[rax+0x1]
  4333f4:	mov    rdx,QWORD PTR [rbp-0x18]
  4333f8:	mov    QWORD PTR [rdx+0x28],rcx
  4333fc:	mov    BYTE PTR [rax],0xa
  4333ff:	mov    rax,QWORD PTR [rbp-0x18]
  433403:	mov    eax,DWORD PTR [rax+0x38]
  433406:	lea    edx,[rax-0x1]
  433409:	mov    rax,QWORD PTR [rbp-0x18]
  43340d:	mov    DWORD PTR [rax+0x38],edx
  433410:	mov    rax,QWORD PTR [rbp-0x18]
  433414:	mov    rdi,rax
  433417:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43341c:	mov    rax,QWORD PTR [rbp-0x18]
  433420:	mov    rax,QWORD PTR [rax+0x28]
  433424:	lea    rcx,[rax+0x1]
  433428:	mov    rdx,QWORD PTR [rbp-0x18]
  43342c:	mov    QWORD PTR [rdx+0x28],rcx
  433430:	mov    BYTE PTR [rax],0x5d
  433433:	leave  
  433434:	ret    

0000000000433435 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
  433435:	endbr64 
  433439:	push   rbp
  43343a:	mov    rbp,rsp
  43343d:	sub    rsp,0x40
  433441:	mov    QWORD PTR [rbp-0x18],rdi
  433445:	mov    QWORD PTR [rbp-0x20],rsi
  433449:	mov    DWORD PTR [rbp-0x24],edx
  43344c:	mov    QWORD PTR [rbp-0x30],rcx
  433450:	mov    DWORD PTR [rbp-0x28],r8d
  433454:	mov    QWORD PTR [rbp-0x38],r9
  433458:	mov    rax,QWORD PTR [rbp-0x18]
  43345c:	movzx  eax,BYTE PTR [rax+0x33]
  433460:	test   al,al
  433462:	je     433486 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x51>
  433464:	mov    edi,DWORD PTR [rbp-0x28]
  433467:	mov    rcx,QWORD PTR [rbp-0x30]
  43346b:	mov    edx,DWORD PTR [rbp-0x24]
  43346e:	mov    rsi,QWORD PTR [rbp-0x20]
  433472:	mov    rax,QWORD PTR [rbp-0x18]
  433476:	mov    r8d,edi
  433479:	mov    rdi,rax
  43347c:	call   4316d9 <flatcc_json_printer_uint16_vector_field@@Base>
  433481:	jmp    43369a <flatcc_json_printer_uint16_enum_vector_field@@Base+0x265>
  433486:	mov    edx,DWORD PTR [rbp-0x24]
  433489:	mov    rax,QWORD PTR [rbp-0x20]
  43348d:	mov    esi,edx
  43348f:	mov    rdi,rax
  433492:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  433497:	mov    QWORD PTR [rbp-0x8],rax
  43349b:	cmp    QWORD PTR [rbp-0x8],0x0
  4334a0:	je     43369a <flatcc_json_printer_uint16_enum_vector_field@@Base+0x265>
  4334a6:	mov    rax,QWORD PTR [rbp-0x20]
  4334aa:	mov    eax,DWORD PTR [rax+0x18]
  4334ad:	lea    ecx,[rax+0x1]
  4334b0:	mov    rdx,QWORD PTR [rbp-0x20]
  4334b4:	mov    DWORD PTR [rdx+0x18],ecx
  4334b7:	test   eax,eax
  4334b9:	je     4334d2 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x9d>
  4334bb:	mov    rax,QWORD PTR [rbp-0x18]
  4334bf:	mov    rax,QWORD PTR [rax+0x28]
  4334c3:	lea    rcx,[rax+0x1]
  4334c7:	mov    rdx,QWORD PTR [rbp-0x18]
  4334cb:	mov    QWORD PTR [rdx+0x28],rcx
  4334cf:	mov    BYTE PTR [rax],0x2c
  4334d2:	mov    rax,QWORD PTR [rbp-0x8]
  4334d6:	mov    rdi,rax
  4334d9:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  4334de:	mov    QWORD PTR [rbp-0x8],rax
  4334e2:	mov    rax,QWORD PTR [rbp-0x8]
  4334e6:	mov    rdi,rax
  4334e9:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  4334ee:	mov    DWORD PTR [rbp-0xc],eax
  4334f1:	mov    rax,QWORD PTR [rbp-0x8]
  4334f5:	add    rax,0x4
  4334f9:	mov    QWORD PTR [rbp-0x8],rax
  4334fd:	mov    eax,DWORD PTR [rbp-0x28]
  433500:	movsxd rdx,eax
  433503:	mov    rcx,QWORD PTR [rbp-0x30]
  433507:	mov    rax,QWORD PTR [rbp-0x18]
  43350b:	mov    rsi,rcx
  43350e:	mov    rdi,rax
  433511:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  433516:	mov    rax,QWORD PTR [rbp-0x18]
  43351a:	mov    eax,DWORD PTR [rax+0x38]
  43351d:	lea    edx,[rax+0x1]
  433520:	mov    rax,QWORD PTR [rbp-0x18]
  433524:	mov    DWORD PTR [rax+0x38],edx
  433527:	mov    rax,QWORD PTR [rbp-0x18]
  43352b:	mov    rax,QWORD PTR [rax+0x28]
  43352f:	lea    rcx,[rax+0x1]
  433533:	mov    rdx,QWORD PTR [rbp-0x18]
  433537:	mov    QWORD PTR [rdx+0x28],rcx
  43353b:	mov    BYTE PTR [rax],0x5b
  43353e:	cmp    DWORD PTR [rbp-0xc],0x0
  433542:	je     433632 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1fd>
  433548:	mov    rax,QWORD PTR [rbp-0x18]
  43354c:	movzx  eax,BYTE PTR [rax+0x31]
  433550:	test   al,al
  433552:	je     433579 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x144>
  433554:	mov    rax,QWORD PTR [rbp-0x18]
  433558:	mov    rax,QWORD PTR [rax+0x28]
  43355c:	lea    rcx,[rax+0x1]
  433560:	mov    rdx,QWORD PTR [rbp-0x18]
  433564:	mov    QWORD PTR [rdx+0x28],rcx
  433568:	mov    BYTE PTR [rax],0xa
  43356b:	mov    rax,QWORD PTR [rbp-0x18]
  43356f:	mov    rdi,rax
  433572:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433577:	jmp    433585 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x150>
  433579:	mov    rax,QWORD PTR [rbp-0x18]
  43357d:	mov    rdi,rax
  433580:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  433585:	mov    rax,QWORD PTR [rbp-0x8]
  433589:	mov    rdi,rax
  43358c:	call   42a98c <flatcc_json_parser_struct_as_root@@Base+0x177>
  433591:	movzx  ecx,ax
  433594:	mov    rdx,QWORD PTR [rbp-0x18]
  433598:	mov    rax,QWORD PTR [rbp-0x38]
  43359c:	mov    esi,ecx
  43359e:	mov    rdi,rdx
  4335a1:	call   rax
  4335a3:	mov    rax,QWORD PTR [rbp-0x8]
  4335a7:	add    rax,0x2
  4335ab:	mov    QWORD PTR [rbp-0x8],rax
  4335af:	dec    DWORD PTR [rbp-0xc]
  4335b2:	jmp    433632 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1fd>
  4335b4:	mov    rax,QWORD PTR [rbp-0x18]
  4335b8:	mov    rax,QWORD PTR [rax+0x28]
  4335bc:	lea    rcx,[rax+0x1]
  4335c0:	mov    rdx,QWORD PTR [rbp-0x18]
  4335c4:	mov    QWORD PTR [rdx+0x28],rcx
  4335c8:	mov    BYTE PTR [rax],0x2c
  4335cb:	mov    rax,QWORD PTR [rbp-0x18]
  4335cf:	movzx  eax,BYTE PTR [rax+0x31]
  4335d3:	test   al,al
  4335d5:	je     4335fc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1c7>
  4335d7:	mov    rax,QWORD PTR [rbp-0x18]
  4335db:	mov    rax,QWORD PTR [rax+0x28]
  4335df:	lea    rcx,[rax+0x1]
  4335e3:	mov    rdx,QWORD PTR [rbp-0x18]
  4335e7:	mov    QWORD PTR [rdx+0x28],rcx
  4335eb:	mov    BYTE PTR [rax],0xa
  4335ee:	mov    rax,QWORD PTR [rbp-0x18]
  4335f2:	mov    rdi,rax
  4335f5:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4335fa:	jmp    433608 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d3>
  4335fc:	mov    rax,QWORD PTR [rbp-0x18]
  433600:	mov    rdi,rax
  433603:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  433608:	mov    rax,QWORD PTR [rbp-0x8]
  43360c:	mov    rdi,rax
  43360f:	call   42a98c <flatcc_json_parser_struct_as_root@@Base+0x177>
  433614:	movzx  ecx,ax
  433617:	mov    rdx,QWORD PTR [rbp-0x18]
  43361b:	mov    rax,QWORD PTR [rbp-0x38]
  43361f:	mov    esi,ecx
  433621:	mov    rdi,rdx
  433624:	call   rax
  433626:	mov    rax,QWORD PTR [rbp-0x8]
  43362a:	add    rax,0x2
  43362e:	mov    QWORD PTR [rbp-0x8],rax
  433632:	mov    eax,DWORD PTR [rbp-0xc]
  433635:	lea    edx,[rax-0x1]
  433638:	mov    DWORD PTR [rbp-0xc],edx
  43363b:	test   eax,eax
  43363d:	jne    4335b4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x17f>
  433643:	mov    rax,QWORD PTR [rbp-0x18]
  433647:	movzx  eax,BYTE PTR [rax+0x31]
  43364b:	test   al,al
  43364d:	je     433683 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x24e>
  43364f:	mov    rax,QWORD PTR [rbp-0x18]
  433653:	mov    rax,QWORD PTR [rax+0x28]
  433657:	lea    rcx,[rax+0x1]
  43365b:	mov    rdx,QWORD PTR [rbp-0x18]
  43365f:	mov    QWORD PTR [rdx+0x28],rcx
  433663:	mov    BYTE PTR [rax],0xa
  433666:	mov    rax,QWORD PTR [rbp-0x18]
  43366a:	mov    eax,DWORD PTR [rax+0x38]
  43366d:	lea    edx,[rax-0x1]
  433670:	mov    rax,QWORD PTR [rbp-0x18]
  433674:	mov    DWORD PTR [rax+0x38],edx
  433677:	mov    rax,QWORD PTR [rbp-0x18]
  43367b:	mov    rdi,rax
  43367e:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433683:	mov    rax,QWORD PTR [rbp-0x18]
  433687:	mov    rax,QWORD PTR [rax+0x28]
  43368b:	lea    rcx,[rax+0x1]
  43368f:	mov    rdx,QWORD PTR [rbp-0x18]
  433693:	mov    QWORD PTR [rdx+0x28],rcx
  433697:	mov    BYTE PTR [rax],0x5d
  43369a:	leave  
  43369b:	ret    

000000000043369c <flatcc_json_printer_uint32_enum_vector_field@@Base>:
  43369c:	endbr64 
  4336a0:	push   rbp
  4336a1:	mov    rbp,rsp
  4336a4:	sub    rsp,0x40
  4336a8:	mov    QWORD PTR [rbp-0x18],rdi
  4336ac:	mov    QWORD PTR [rbp-0x20],rsi
  4336b0:	mov    DWORD PTR [rbp-0x24],edx
  4336b3:	mov    QWORD PTR [rbp-0x30],rcx
  4336b7:	mov    DWORD PTR [rbp-0x28],r8d
  4336bb:	mov    QWORD PTR [rbp-0x38],r9
  4336bf:	mov    rax,QWORD PTR [rbp-0x18]
  4336c3:	movzx  eax,BYTE PTR [rax+0x33]
  4336c7:	test   al,al
  4336c9:	je     4336ed <flatcc_json_printer_uint32_enum_vector_field@@Base+0x51>
  4336cb:	mov    edi,DWORD PTR [rbp-0x28]
  4336ce:	mov    rcx,QWORD PTR [rbp-0x30]
  4336d2:	mov    edx,DWORD PTR [rbp-0x24]
  4336d5:	mov    rsi,QWORD PTR [rbp-0x20]
  4336d9:	mov    rax,QWORD PTR [rbp-0x18]
  4336dd:	mov    r8d,edi
  4336e0:	mov    rdi,rax
  4336e3:	call   43194e <flatcc_json_printer_uint32_vector_field@@Base>
  4336e8:	jmp    4338ff <flatcc_json_printer_uint32_enum_vector_field@@Base+0x263>
  4336ed:	mov    edx,DWORD PTR [rbp-0x24]
  4336f0:	mov    rax,QWORD PTR [rbp-0x20]
  4336f4:	mov    esi,edx
  4336f6:	mov    rdi,rax
  4336f9:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  4336fe:	mov    QWORD PTR [rbp-0x8],rax
  433702:	cmp    QWORD PTR [rbp-0x8],0x0
  433707:	je     4338ff <flatcc_json_printer_uint32_enum_vector_field@@Base+0x263>
  43370d:	mov    rax,QWORD PTR [rbp-0x20]
  433711:	mov    eax,DWORD PTR [rax+0x18]
  433714:	lea    ecx,[rax+0x1]
  433717:	mov    rdx,QWORD PTR [rbp-0x20]
  43371b:	mov    DWORD PTR [rdx+0x18],ecx
  43371e:	test   eax,eax
  433720:	je     433739 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x9d>
  433722:	mov    rax,QWORD PTR [rbp-0x18]
  433726:	mov    rax,QWORD PTR [rax+0x28]
  43372a:	lea    rcx,[rax+0x1]
  43372e:	mov    rdx,QWORD PTR [rbp-0x18]
  433732:	mov    QWORD PTR [rdx+0x28],rcx
  433736:	mov    BYTE PTR [rax],0x2c
  433739:	mov    rax,QWORD PTR [rbp-0x8]
  43373d:	mov    rdi,rax
  433740:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  433745:	mov    QWORD PTR [rbp-0x8],rax
  433749:	mov    rax,QWORD PTR [rbp-0x8]
  43374d:	mov    rdi,rax
  433750:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  433755:	mov    DWORD PTR [rbp-0xc],eax
  433758:	mov    rax,QWORD PTR [rbp-0x8]
  43375c:	add    rax,0x4
  433760:	mov    QWORD PTR [rbp-0x8],rax
  433764:	mov    eax,DWORD PTR [rbp-0x28]
  433767:	movsxd rdx,eax
  43376a:	mov    rcx,QWORD PTR [rbp-0x30]
  43376e:	mov    rax,QWORD PTR [rbp-0x18]
  433772:	mov    rsi,rcx
  433775:	mov    rdi,rax
  433778:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  43377d:	mov    rax,QWORD PTR [rbp-0x18]
  433781:	mov    eax,DWORD PTR [rax+0x38]
  433784:	lea    edx,[rax+0x1]
  433787:	mov    rax,QWORD PTR [rbp-0x18]
  43378b:	mov    DWORD PTR [rax+0x38],edx
  43378e:	mov    rax,QWORD PTR [rbp-0x18]
  433792:	mov    rax,QWORD PTR [rax+0x28]
  433796:	lea    rcx,[rax+0x1]
  43379a:	mov    rdx,QWORD PTR [rbp-0x18]
  43379e:	mov    QWORD PTR [rdx+0x28],rcx
  4337a2:	mov    BYTE PTR [rax],0x5b
  4337a5:	cmp    DWORD PTR [rbp-0xc],0x0
  4337a9:	je     433897 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1fb>
  4337af:	mov    rax,QWORD PTR [rbp-0x18]
  4337b3:	movzx  eax,BYTE PTR [rax+0x31]
  4337b7:	test   al,al
  4337b9:	je     4337e0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x144>
  4337bb:	mov    rax,QWORD PTR [rbp-0x18]
  4337bf:	mov    rax,QWORD PTR [rax+0x28]
  4337c3:	lea    rcx,[rax+0x1]
  4337c7:	mov    rdx,QWORD PTR [rbp-0x18]
  4337cb:	mov    QWORD PTR [rdx+0x28],rcx
  4337cf:	mov    BYTE PTR [rax],0xa
  4337d2:	mov    rax,QWORD PTR [rbp-0x18]
  4337d6:	mov    rdi,rax
  4337d9:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4337de:	jmp    4337ec <flatcc_json_printer_uint32_enum_vector_field@@Base+0x150>
  4337e0:	mov    rax,QWORD PTR [rbp-0x18]
  4337e4:	mov    rdi,rax
  4337e7:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4337ec:	mov    rax,QWORD PTR [rbp-0x8]
  4337f0:	mov    rdi,rax
  4337f3:	call   42a9b7 <flatcc_json_parser_struct_as_root@@Base+0x1a2>
  4337f8:	mov    ecx,eax
  4337fa:	mov    rdx,QWORD PTR [rbp-0x18]
  4337fe:	mov    rax,QWORD PTR [rbp-0x38]
  433802:	mov    esi,ecx
  433804:	mov    rdi,rdx
  433807:	call   rax
  433809:	mov    rax,QWORD PTR [rbp-0x8]
  43380d:	add    rax,0x4
  433811:	mov    QWORD PTR [rbp-0x8],rax
  433815:	dec    DWORD PTR [rbp-0xc]
  433818:	jmp    433897 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1fb>
  43381a:	mov    rax,QWORD PTR [rbp-0x18]
  43381e:	mov    rax,QWORD PTR [rax+0x28]
  433822:	lea    rcx,[rax+0x1]
  433826:	mov    rdx,QWORD PTR [rbp-0x18]
  43382a:	mov    QWORD PTR [rdx+0x28],rcx
  43382e:	mov    BYTE PTR [rax],0x2c
  433831:	mov    rax,QWORD PTR [rbp-0x18]
  433835:	movzx  eax,BYTE PTR [rax+0x31]
  433839:	test   al,al
  43383b:	je     433862 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1c6>
  43383d:	mov    rax,QWORD PTR [rbp-0x18]
  433841:	mov    rax,QWORD PTR [rax+0x28]
  433845:	lea    rcx,[rax+0x1]
  433849:	mov    rdx,QWORD PTR [rbp-0x18]
  43384d:	mov    QWORD PTR [rdx+0x28],rcx
  433851:	mov    BYTE PTR [rax],0xa
  433854:	mov    rax,QWORD PTR [rbp-0x18]
  433858:	mov    rdi,rax
  43385b:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433860:	jmp    43386e <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d2>
  433862:	mov    rax,QWORD PTR [rbp-0x18]
  433866:	mov    rdi,rax
  433869:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  43386e:	mov    rax,QWORD PTR [rbp-0x8]
  433872:	mov    rdi,rax
  433875:	call   42a9b7 <flatcc_json_parser_struct_as_root@@Base+0x1a2>
  43387a:	mov    ecx,eax
  43387c:	mov    rdx,QWORD PTR [rbp-0x18]
  433880:	mov    rax,QWORD PTR [rbp-0x38]
  433884:	mov    esi,ecx
  433886:	mov    rdi,rdx
  433889:	call   rax
  43388b:	mov    rax,QWORD PTR [rbp-0x8]
  43388f:	add    rax,0x4
  433893:	mov    QWORD PTR [rbp-0x8],rax
  433897:	mov    eax,DWORD PTR [rbp-0xc]
  43389a:	lea    edx,[rax-0x1]
  43389d:	mov    DWORD PTR [rbp-0xc],edx
  4338a0:	test   eax,eax
  4338a2:	jne    43381a <flatcc_json_printer_uint32_enum_vector_field@@Base+0x17e>
  4338a8:	mov    rax,QWORD PTR [rbp-0x18]
  4338ac:	movzx  eax,BYTE PTR [rax+0x31]
  4338b0:	test   al,al
  4338b2:	je     4338e8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x24c>
  4338b4:	mov    rax,QWORD PTR [rbp-0x18]
  4338b8:	mov    rax,QWORD PTR [rax+0x28]
  4338bc:	lea    rcx,[rax+0x1]
  4338c0:	mov    rdx,QWORD PTR [rbp-0x18]
  4338c4:	mov    QWORD PTR [rdx+0x28],rcx
  4338c8:	mov    BYTE PTR [rax],0xa
  4338cb:	mov    rax,QWORD PTR [rbp-0x18]
  4338cf:	mov    eax,DWORD PTR [rax+0x38]
  4338d2:	lea    edx,[rax-0x1]
  4338d5:	mov    rax,QWORD PTR [rbp-0x18]
  4338d9:	mov    DWORD PTR [rax+0x38],edx
  4338dc:	mov    rax,QWORD PTR [rbp-0x18]
  4338e0:	mov    rdi,rax
  4338e3:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4338e8:	mov    rax,QWORD PTR [rbp-0x18]
  4338ec:	mov    rax,QWORD PTR [rax+0x28]
  4338f0:	lea    rcx,[rax+0x1]
  4338f4:	mov    rdx,QWORD PTR [rbp-0x18]
  4338f8:	mov    QWORD PTR [rdx+0x28],rcx
  4338fc:	mov    BYTE PTR [rax],0x5d
  4338ff:	leave  
  433900:	ret    

0000000000433901 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
  433901:	endbr64 
  433905:	push   rbp
  433906:	mov    rbp,rsp
  433909:	sub    rsp,0x40
  43390d:	mov    QWORD PTR [rbp-0x18],rdi
  433911:	mov    QWORD PTR [rbp-0x20],rsi
  433915:	mov    DWORD PTR [rbp-0x24],edx
  433918:	mov    QWORD PTR [rbp-0x30],rcx
  43391c:	mov    DWORD PTR [rbp-0x28],r8d
  433920:	mov    QWORD PTR [rbp-0x38],r9
  433924:	mov    rax,QWORD PTR [rbp-0x18]
  433928:	movzx  eax,BYTE PTR [rax+0x33]
  43392c:	test   al,al
  43392e:	je     433952 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x51>
  433930:	mov    edi,DWORD PTR [rbp-0x28]
  433933:	mov    rcx,QWORD PTR [rbp-0x30]
  433937:	mov    edx,DWORD PTR [rbp-0x24]
  43393a:	mov    rsi,QWORD PTR [rbp-0x20]
  43393e:	mov    rax,QWORD PTR [rbp-0x18]
  433942:	mov    r8d,edi
  433945:	mov    rdi,rax
  433948:	call   431bbd <flatcc_json_printer_uint64_vector_field@@Base>
  43394d:	jmp    433b68 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x267>
  433952:	mov    edx,DWORD PTR [rbp-0x24]
  433955:	mov    rax,QWORD PTR [rbp-0x20]
  433959:	mov    esi,edx
  43395b:	mov    rdi,rax
  43395e:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  433963:	mov    QWORD PTR [rbp-0x8],rax
  433967:	cmp    QWORD PTR [rbp-0x8],0x0
  43396c:	je     433b68 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x267>
  433972:	mov    rax,QWORD PTR [rbp-0x20]
  433976:	mov    eax,DWORD PTR [rax+0x18]
  433979:	lea    ecx,[rax+0x1]
  43397c:	mov    rdx,QWORD PTR [rbp-0x20]
  433980:	mov    DWORD PTR [rdx+0x18],ecx
  433983:	test   eax,eax
  433985:	je     43399e <flatcc_json_printer_uint64_enum_vector_field@@Base+0x9d>
  433987:	mov    rax,QWORD PTR [rbp-0x18]
  43398b:	mov    rax,QWORD PTR [rax+0x28]
  43398f:	lea    rcx,[rax+0x1]
  433993:	mov    rdx,QWORD PTR [rbp-0x18]
  433997:	mov    QWORD PTR [rdx+0x28],rcx
  43399b:	mov    BYTE PTR [rax],0x2c
  43399e:	mov    rax,QWORD PTR [rbp-0x8]
  4339a2:	mov    rdi,rax
  4339a5:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  4339aa:	mov    QWORD PTR [rbp-0x8],rax
  4339ae:	mov    rax,QWORD PTR [rbp-0x8]
  4339b2:	mov    rdi,rax
  4339b5:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  4339ba:	mov    DWORD PTR [rbp-0xc],eax
  4339bd:	mov    rax,QWORD PTR [rbp-0x8]
  4339c1:	add    rax,0x4
  4339c5:	mov    QWORD PTR [rbp-0x8],rax
  4339c9:	mov    eax,DWORD PTR [rbp-0x28]
  4339cc:	movsxd rdx,eax
  4339cf:	mov    rcx,QWORD PTR [rbp-0x30]
  4339d3:	mov    rax,QWORD PTR [rbp-0x18]
  4339d7:	mov    rsi,rcx
  4339da:	mov    rdi,rax
  4339dd:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  4339e2:	mov    rax,QWORD PTR [rbp-0x18]
  4339e6:	mov    eax,DWORD PTR [rax+0x38]
  4339e9:	lea    edx,[rax+0x1]
  4339ec:	mov    rax,QWORD PTR [rbp-0x18]
  4339f0:	mov    DWORD PTR [rax+0x38],edx
  4339f3:	mov    rax,QWORD PTR [rbp-0x18]
  4339f7:	mov    rax,QWORD PTR [rax+0x28]
  4339fb:	lea    rcx,[rax+0x1]
  4339ff:	mov    rdx,QWORD PTR [rbp-0x18]
  433a03:	mov    QWORD PTR [rdx+0x28],rcx
  433a07:	mov    BYTE PTR [rax],0x5b
  433a0a:	cmp    DWORD PTR [rbp-0xc],0x0
  433a0e:	je     433b00 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ff>
  433a14:	mov    rax,QWORD PTR [rbp-0x18]
  433a18:	movzx  eax,BYTE PTR [rax+0x31]
  433a1c:	test   al,al
  433a1e:	je     433a45 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x144>
  433a20:	mov    rax,QWORD PTR [rbp-0x18]
  433a24:	mov    rax,QWORD PTR [rax+0x28]
  433a28:	lea    rcx,[rax+0x1]
  433a2c:	mov    rdx,QWORD PTR [rbp-0x18]
  433a30:	mov    QWORD PTR [rdx+0x28],rcx
  433a34:	mov    BYTE PTR [rax],0xa
  433a37:	mov    rax,QWORD PTR [rbp-0x18]
  433a3b:	mov    rdi,rax
  433a3e:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433a43:	jmp    433a51 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x150>
  433a45:	mov    rax,QWORD PTR [rbp-0x18]
  433a49:	mov    rdi,rax
  433a4c:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  433a51:	mov    rax,QWORD PTR [rbp-0x8]
  433a55:	mov    rdi,rax
  433a58:	call   42a9e0 <flatcc_json_parser_struct_as_root@@Base+0x1cb>
  433a5d:	mov    rcx,rax
  433a60:	mov    rdx,QWORD PTR [rbp-0x18]
  433a64:	mov    rax,QWORD PTR [rbp-0x38]
  433a68:	mov    rsi,rcx
  433a6b:	mov    rdi,rdx
  433a6e:	call   rax
  433a70:	mov    rax,QWORD PTR [rbp-0x8]
  433a74:	add    rax,0x8
  433a78:	mov    QWORD PTR [rbp-0x8],rax
  433a7c:	dec    DWORD PTR [rbp-0xc]
  433a7f:	jmp    433b00 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ff>
  433a81:	mov    rax,QWORD PTR [rbp-0x18]
  433a85:	mov    rax,QWORD PTR [rax+0x28]
  433a89:	lea    rcx,[rax+0x1]
  433a8d:	mov    rdx,QWORD PTR [rbp-0x18]
  433a91:	mov    QWORD PTR [rdx+0x28],rcx
  433a95:	mov    BYTE PTR [rax],0x2c
  433a98:	mov    rax,QWORD PTR [rbp-0x18]
  433a9c:	movzx  eax,BYTE PTR [rax+0x31]
  433aa0:	test   al,al
  433aa2:	je     433ac9 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1c8>
  433aa4:	mov    rax,QWORD PTR [rbp-0x18]
  433aa8:	mov    rax,QWORD PTR [rax+0x28]
  433aac:	lea    rcx,[rax+0x1]
  433ab0:	mov    rdx,QWORD PTR [rbp-0x18]
  433ab4:	mov    QWORD PTR [rdx+0x28],rcx
  433ab8:	mov    BYTE PTR [rax],0xa
  433abb:	mov    rax,QWORD PTR [rbp-0x18]
  433abf:	mov    rdi,rax
  433ac2:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433ac7:	jmp    433ad5 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
  433ac9:	mov    rax,QWORD PTR [rbp-0x18]
  433acd:	mov    rdi,rax
  433ad0:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  433ad5:	mov    rax,QWORD PTR [rbp-0x8]
  433ad9:	mov    rdi,rax
  433adc:	call   42a9e0 <flatcc_json_parser_struct_as_root@@Base+0x1cb>
  433ae1:	mov    rcx,rax
  433ae4:	mov    rdx,QWORD PTR [rbp-0x18]
  433ae8:	mov    rax,QWORD PTR [rbp-0x38]
  433aec:	mov    rsi,rcx
  433aef:	mov    rdi,rdx
  433af2:	call   rax
  433af4:	mov    rax,QWORD PTR [rbp-0x8]
  433af8:	add    rax,0x8
  433afc:	mov    QWORD PTR [rbp-0x8],rax
  433b00:	mov    eax,DWORD PTR [rbp-0xc]
  433b03:	lea    edx,[rax-0x1]
  433b06:	mov    DWORD PTR [rbp-0xc],edx
  433b09:	test   eax,eax
  433b0b:	jne    433a81 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x180>
  433b11:	mov    rax,QWORD PTR [rbp-0x18]
  433b15:	movzx  eax,BYTE PTR [rax+0x31]
  433b19:	test   al,al
  433b1b:	je     433b51 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x250>
  433b1d:	mov    rax,QWORD PTR [rbp-0x18]
  433b21:	mov    rax,QWORD PTR [rax+0x28]
  433b25:	lea    rcx,[rax+0x1]
  433b29:	mov    rdx,QWORD PTR [rbp-0x18]
  433b2d:	mov    QWORD PTR [rdx+0x28],rcx
  433b31:	mov    BYTE PTR [rax],0xa
  433b34:	mov    rax,QWORD PTR [rbp-0x18]
  433b38:	mov    eax,DWORD PTR [rax+0x38]
  433b3b:	lea    edx,[rax-0x1]
  433b3e:	mov    rax,QWORD PTR [rbp-0x18]
  433b42:	mov    DWORD PTR [rax+0x38],edx
  433b45:	mov    rax,QWORD PTR [rbp-0x18]
  433b49:	mov    rdi,rax
  433b4c:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433b51:	mov    rax,QWORD PTR [rbp-0x18]
  433b55:	mov    rax,QWORD PTR [rax+0x28]
  433b59:	lea    rcx,[rax+0x1]
  433b5d:	mov    rdx,QWORD PTR [rbp-0x18]
  433b61:	mov    QWORD PTR [rdx+0x28],rcx
  433b65:	mov    BYTE PTR [rax],0x5d
  433b68:	leave  
  433b69:	ret    

0000000000433b6a <flatcc_json_printer_int8_enum_vector_field@@Base>:
  433b6a:	endbr64 
  433b6e:	push   rbp
  433b6f:	mov    rbp,rsp
  433b72:	sub    rsp,0x40
  433b76:	mov    QWORD PTR [rbp-0x18],rdi
  433b7a:	mov    QWORD PTR [rbp-0x20],rsi
  433b7e:	mov    DWORD PTR [rbp-0x24],edx
  433b81:	mov    QWORD PTR [rbp-0x30],rcx
  433b85:	mov    DWORD PTR [rbp-0x28],r8d
  433b89:	mov    QWORD PTR [rbp-0x38],r9
  433b8d:	mov    rax,QWORD PTR [rbp-0x18]
  433b91:	movzx  eax,BYTE PTR [rax+0x33]
  433b95:	test   al,al
  433b97:	je     433bbb <flatcc_json_printer_int8_enum_vector_field@@Base+0x51>
  433b99:	mov    edi,DWORD PTR [rbp-0x28]
  433b9c:	mov    rcx,QWORD PTR [rbp-0x30]
  433ba0:	mov    edx,DWORD PTR [rbp-0x24]
  433ba3:	mov    rsi,QWORD PTR [rbp-0x20]
  433ba7:	mov    rax,QWORD PTR [rbp-0x18]
  433bab:	mov    r8d,edi
  433bae:	mov    rdi,rax
  433bb1:	call   431e2e <flatcc_json_printer_int8_vector_field@@Base>
  433bb6:	jmp    433dcd <flatcc_json_printer_int8_enum_vector_field@@Base+0x263>
  433bbb:	mov    edx,DWORD PTR [rbp-0x24]
  433bbe:	mov    rax,QWORD PTR [rbp-0x20]
  433bc2:	mov    esi,edx
  433bc4:	mov    rdi,rax
  433bc7:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  433bcc:	mov    QWORD PTR [rbp-0x8],rax
  433bd0:	cmp    QWORD PTR [rbp-0x8],0x0
  433bd5:	je     433dcd <flatcc_json_printer_int8_enum_vector_field@@Base+0x263>
  433bdb:	mov    rax,QWORD PTR [rbp-0x20]
  433bdf:	mov    eax,DWORD PTR [rax+0x18]
  433be2:	lea    ecx,[rax+0x1]
  433be5:	mov    rdx,QWORD PTR [rbp-0x20]
  433be9:	mov    DWORD PTR [rdx+0x18],ecx
  433bec:	test   eax,eax
  433bee:	je     433c07 <flatcc_json_printer_int8_enum_vector_field@@Base+0x9d>
  433bf0:	mov    rax,QWORD PTR [rbp-0x18]
  433bf4:	mov    rax,QWORD PTR [rax+0x28]
  433bf8:	lea    rcx,[rax+0x1]
  433bfc:	mov    rdx,QWORD PTR [rbp-0x18]
  433c00:	mov    QWORD PTR [rdx+0x28],rcx
  433c04:	mov    BYTE PTR [rax],0x2c
  433c07:	mov    rax,QWORD PTR [rbp-0x8]
  433c0b:	mov    rdi,rax
  433c0e:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  433c13:	mov    QWORD PTR [rbp-0x8],rax
  433c17:	mov    rax,QWORD PTR [rbp-0x8]
  433c1b:	mov    rdi,rax
  433c1e:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  433c23:	mov    DWORD PTR [rbp-0xc],eax
  433c26:	mov    rax,QWORD PTR [rbp-0x8]
  433c2a:	add    rax,0x4
  433c2e:	mov    QWORD PTR [rbp-0x8],rax
  433c32:	mov    eax,DWORD PTR [rbp-0x28]
  433c35:	movsxd rdx,eax
  433c38:	mov    rcx,QWORD PTR [rbp-0x30]
  433c3c:	mov    rax,QWORD PTR [rbp-0x18]
  433c40:	mov    rsi,rcx
  433c43:	mov    rdi,rax
  433c46:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  433c4b:	mov    rax,QWORD PTR [rbp-0x18]
  433c4f:	mov    eax,DWORD PTR [rax+0x38]
  433c52:	lea    edx,[rax+0x1]
  433c55:	mov    rax,QWORD PTR [rbp-0x18]
  433c59:	mov    DWORD PTR [rax+0x38],edx
  433c5c:	mov    rax,QWORD PTR [rbp-0x18]
  433c60:	mov    rax,QWORD PTR [rax+0x28]
  433c64:	lea    rcx,[rax+0x1]
  433c68:	mov    rdx,QWORD PTR [rbp-0x18]
  433c6c:	mov    QWORD PTR [rdx+0x28],rcx
  433c70:	mov    BYTE PTR [rax],0x5b
  433c73:	cmp    DWORD PTR [rbp-0xc],0x0
  433c77:	je     433d65 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1fb>
  433c7d:	mov    rax,QWORD PTR [rbp-0x18]
  433c81:	movzx  eax,BYTE PTR [rax+0x31]
  433c85:	test   al,al
  433c87:	je     433cae <flatcc_json_printer_int8_enum_vector_field@@Base+0x144>
  433c89:	mov    rax,QWORD PTR [rbp-0x18]
  433c8d:	mov    rax,QWORD PTR [rax+0x28]
  433c91:	lea    rcx,[rax+0x1]
  433c95:	mov    rdx,QWORD PTR [rbp-0x18]
  433c99:	mov    QWORD PTR [rdx+0x28],rcx
  433c9d:	mov    BYTE PTR [rax],0xa
  433ca0:	mov    rax,QWORD PTR [rbp-0x18]
  433ca4:	mov    rdi,rax
  433ca7:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433cac:	jmp    433cba <flatcc_json_printer_int8_enum_vector_field@@Base+0x150>
  433cae:	mov    rax,QWORD PTR [rbp-0x18]
  433cb2:	mov    rdi,rax
  433cb5:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  433cba:	mov    rax,QWORD PTR [rbp-0x8]
  433cbe:	mov    rdi,rax
  433cc1:	call   42aa0c <flatcc_json_parser_struct_as_root@@Base+0x1f7>
  433cc6:	movsx  ecx,al
  433cc9:	mov    rdx,QWORD PTR [rbp-0x18]
  433ccd:	mov    rax,QWORD PTR [rbp-0x38]
  433cd1:	mov    esi,ecx
  433cd3:	mov    rdi,rdx
  433cd6:	call   rax
  433cd8:	mov    rax,QWORD PTR [rbp-0x8]
  433cdc:	inc    rax
  433cdf:	mov    QWORD PTR [rbp-0x8],rax
  433ce3:	dec    DWORD PTR [rbp-0xc]
  433ce6:	jmp    433d65 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1fb>
  433ce8:	mov    rax,QWORD PTR [rbp-0x18]
  433cec:	mov    rax,QWORD PTR [rax+0x28]
  433cf0:	lea    rcx,[rax+0x1]
  433cf4:	mov    rdx,QWORD PTR [rbp-0x18]
  433cf8:	mov    QWORD PTR [rdx+0x28],rcx
  433cfc:	mov    BYTE PTR [rax],0x2c
  433cff:	mov    rax,QWORD PTR [rbp-0x18]
  433d03:	movzx  eax,BYTE PTR [rax+0x31]
  433d07:	test   al,al
  433d09:	je     433d30 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1c6>
  433d0b:	mov    rax,QWORD PTR [rbp-0x18]
  433d0f:	mov    rax,QWORD PTR [rax+0x28]
  433d13:	lea    rcx,[rax+0x1]
  433d17:	mov    rdx,QWORD PTR [rbp-0x18]
  433d1b:	mov    QWORD PTR [rdx+0x28],rcx
  433d1f:	mov    BYTE PTR [rax],0xa
  433d22:	mov    rax,QWORD PTR [rbp-0x18]
  433d26:	mov    rdi,rax
  433d29:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433d2e:	jmp    433d3c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d2>
  433d30:	mov    rax,QWORD PTR [rbp-0x18]
  433d34:	mov    rdi,rax
  433d37:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  433d3c:	mov    rax,QWORD PTR [rbp-0x8]
  433d40:	mov    rdi,rax
  433d43:	call   42aa0c <flatcc_json_parser_struct_as_root@@Base+0x1f7>
  433d48:	movsx  ecx,al
  433d4b:	mov    rdx,QWORD PTR [rbp-0x18]
  433d4f:	mov    rax,QWORD PTR [rbp-0x38]
  433d53:	mov    esi,ecx
  433d55:	mov    rdi,rdx
  433d58:	call   rax
  433d5a:	mov    rax,QWORD PTR [rbp-0x8]
  433d5e:	inc    rax
  433d61:	mov    QWORD PTR [rbp-0x8],rax
  433d65:	mov    eax,DWORD PTR [rbp-0xc]
  433d68:	lea    edx,[rax-0x1]
  433d6b:	mov    DWORD PTR [rbp-0xc],edx
  433d6e:	test   eax,eax
  433d70:	jne    433ce8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x17e>
  433d76:	mov    rax,QWORD PTR [rbp-0x18]
  433d7a:	movzx  eax,BYTE PTR [rax+0x31]
  433d7e:	test   al,al
  433d80:	je     433db6 <flatcc_json_printer_int8_enum_vector_field@@Base+0x24c>
  433d82:	mov    rax,QWORD PTR [rbp-0x18]
  433d86:	mov    rax,QWORD PTR [rax+0x28]
  433d8a:	lea    rcx,[rax+0x1]
  433d8e:	mov    rdx,QWORD PTR [rbp-0x18]
  433d92:	mov    QWORD PTR [rdx+0x28],rcx
  433d96:	mov    BYTE PTR [rax],0xa
  433d99:	mov    rax,QWORD PTR [rbp-0x18]
  433d9d:	mov    eax,DWORD PTR [rax+0x38]
  433da0:	lea    edx,[rax-0x1]
  433da3:	mov    rax,QWORD PTR [rbp-0x18]
  433da7:	mov    DWORD PTR [rax+0x38],edx
  433daa:	mov    rax,QWORD PTR [rbp-0x18]
  433dae:	mov    rdi,rax
  433db1:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433db6:	mov    rax,QWORD PTR [rbp-0x18]
  433dba:	mov    rax,QWORD PTR [rax+0x28]
  433dbe:	lea    rcx,[rax+0x1]
  433dc2:	mov    rdx,QWORD PTR [rbp-0x18]
  433dc6:	mov    QWORD PTR [rdx+0x28],rcx
  433dca:	mov    BYTE PTR [rax],0x5d
  433dcd:	leave  
  433dce:	ret    

0000000000433dcf <flatcc_json_printer_int16_enum_vector_field@@Base>:
  433dcf:	endbr64 
  433dd3:	push   rbp
  433dd4:	mov    rbp,rsp
  433dd7:	sub    rsp,0x40
  433ddb:	mov    QWORD PTR [rbp-0x18],rdi
  433ddf:	mov    QWORD PTR [rbp-0x20],rsi
  433de3:	mov    DWORD PTR [rbp-0x24],edx
  433de6:	mov    QWORD PTR [rbp-0x30],rcx
  433dea:	mov    DWORD PTR [rbp-0x28],r8d
  433dee:	mov    QWORD PTR [rbp-0x38],r9
  433df2:	mov    rax,QWORD PTR [rbp-0x18]
  433df6:	movzx  eax,BYTE PTR [rax+0x33]
  433dfa:	test   al,al
  433dfc:	je     433e20 <flatcc_json_printer_int16_enum_vector_field@@Base+0x51>
  433dfe:	mov    edi,DWORD PTR [rbp-0x28]
  433e01:	mov    rcx,QWORD PTR [rbp-0x30]
  433e05:	mov    edx,DWORD PTR [rbp-0x24]
  433e08:	mov    rsi,QWORD PTR [rbp-0x20]
  433e0c:	mov    rax,QWORD PTR [rbp-0x18]
  433e10:	mov    r8d,edi
  433e13:	mov    rdi,rax
  433e16:	call   4320a1 <flatcc_json_printer_int16_vector_field@@Base>
  433e1b:	jmp    434034 <flatcc_json_printer_int16_enum_vector_field@@Base+0x265>
  433e20:	mov    edx,DWORD PTR [rbp-0x24]
  433e23:	mov    rax,QWORD PTR [rbp-0x20]
  433e27:	mov    esi,edx
  433e29:	mov    rdi,rax
  433e2c:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  433e31:	mov    QWORD PTR [rbp-0x8],rax
  433e35:	cmp    QWORD PTR [rbp-0x8],0x0
  433e3a:	je     434034 <flatcc_json_printer_int16_enum_vector_field@@Base+0x265>
  433e40:	mov    rax,QWORD PTR [rbp-0x20]
  433e44:	mov    eax,DWORD PTR [rax+0x18]
  433e47:	lea    ecx,[rax+0x1]
  433e4a:	mov    rdx,QWORD PTR [rbp-0x20]
  433e4e:	mov    DWORD PTR [rdx+0x18],ecx
  433e51:	test   eax,eax
  433e53:	je     433e6c <flatcc_json_printer_int16_enum_vector_field@@Base+0x9d>
  433e55:	mov    rax,QWORD PTR [rbp-0x18]
  433e59:	mov    rax,QWORD PTR [rax+0x28]
  433e5d:	lea    rcx,[rax+0x1]
  433e61:	mov    rdx,QWORD PTR [rbp-0x18]
  433e65:	mov    QWORD PTR [rdx+0x28],rcx
  433e69:	mov    BYTE PTR [rax],0x2c
  433e6c:	mov    rax,QWORD PTR [rbp-0x8]
  433e70:	mov    rdi,rax
  433e73:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  433e78:	mov    QWORD PTR [rbp-0x8],rax
  433e7c:	mov    rax,QWORD PTR [rbp-0x8]
  433e80:	mov    rdi,rax
  433e83:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  433e88:	mov    DWORD PTR [rbp-0xc],eax
  433e8b:	mov    rax,QWORD PTR [rbp-0x8]
  433e8f:	add    rax,0x4
  433e93:	mov    QWORD PTR [rbp-0x8],rax
  433e97:	mov    eax,DWORD PTR [rbp-0x28]
  433e9a:	movsxd rdx,eax
  433e9d:	mov    rcx,QWORD PTR [rbp-0x30]
  433ea1:	mov    rax,QWORD PTR [rbp-0x18]
  433ea5:	mov    rsi,rcx
  433ea8:	mov    rdi,rax
  433eab:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  433eb0:	mov    rax,QWORD PTR [rbp-0x18]
  433eb4:	mov    eax,DWORD PTR [rax+0x38]
  433eb7:	lea    edx,[rax+0x1]
  433eba:	mov    rax,QWORD PTR [rbp-0x18]
  433ebe:	mov    DWORD PTR [rax+0x38],edx
  433ec1:	mov    rax,QWORD PTR [rbp-0x18]
  433ec5:	mov    rax,QWORD PTR [rax+0x28]
  433ec9:	lea    rcx,[rax+0x1]
  433ecd:	mov    rdx,QWORD PTR [rbp-0x18]
  433ed1:	mov    QWORD PTR [rdx+0x28],rcx
  433ed5:	mov    BYTE PTR [rax],0x5b
  433ed8:	cmp    DWORD PTR [rbp-0xc],0x0
  433edc:	je     433fcc <flatcc_json_printer_int16_enum_vector_field@@Base+0x1fd>
  433ee2:	mov    rax,QWORD PTR [rbp-0x18]
  433ee6:	movzx  eax,BYTE PTR [rax+0x31]
  433eea:	test   al,al
  433eec:	je     433f13 <flatcc_json_printer_int16_enum_vector_field@@Base+0x144>
  433eee:	mov    rax,QWORD PTR [rbp-0x18]
  433ef2:	mov    rax,QWORD PTR [rax+0x28]
  433ef6:	lea    rcx,[rax+0x1]
  433efa:	mov    rdx,QWORD PTR [rbp-0x18]
  433efe:	mov    QWORD PTR [rdx+0x28],rcx
  433f02:	mov    BYTE PTR [rax],0xa
  433f05:	mov    rax,QWORD PTR [rbp-0x18]
  433f09:	mov    rdi,rax
  433f0c:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433f11:	jmp    433f1f <flatcc_json_printer_int16_enum_vector_field@@Base+0x150>
  433f13:	mov    rax,QWORD PTR [rbp-0x18]
  433f17:	mov    rdi,rax
  433f1a:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  433f1f:	mov    rax,QWORD PTR [rbp-0x8]
  433f23:	mov    rdi,rax
  433f26:	call   42aa3b <flatcc_json_parser_struct_as_root@@Base+0x226>
  433f2b:	movsx  ecx,ax
  433f2e:	mov    rdx,QWORD PTR [rbp-0x18]
  433f32:	mov    rax,QWORD PTR [rbp-0x38]
  433f36:	mov    esi,ecx
  433f38:	mov    rdi,rdx
  433f3b:	call   rax
  433f3d:	mov    rax,QWORD PTR [rbp-0x8]
  433f41:	add    rax,0x2
  433f45:	mov    QWORD PTR [rbp-0x8],rax
  433f49:	dec    DWORD PTR [rbp-0xc]
  433f4c:	jmp    433fcc <flatcc_json_printer_int16_enum_vector_field@@Base+0x1fd>
  433f4e:	mov    rax,QWORD PTR [rbp-0x18]
  433f52:	mov    rax,QWORD PTR [rax+0x28]
  433f56:	lea    rcx,[rax+0x1]
  433f5a:	mov    rdx,QWORD PTR [rbp-0x18]
  433f5e:	mov    QWORD PTR [rdx+0x28],rcx
  433f62:	mov    BYTE PTR [rax],0x2c
  433f65:	mov    rax,QWORD PTR [rbp-0x18]
  433f69:	movzx  eax,BYTE PTR [rax+0x31]
  433f6d:	test   al,al
  433f6f:	je     433f96 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1c7>
  433f71:	mov    rax,QWORD PTR [rbp-0x18]
  433f75:	mov    rax,QWORD PTR [rax+0x28]
  433f79:	lea    rcx,[rax+0x1]
  433f7d:	mov    rdx,QWORD PTR [rbp-0x18]
  433f81:	mov    QWORD PTR [rdx+0x28],rcx
  433f85:	mov    BYTE PTR [rax],0xa
  433f88:	mov    rax,QWORD PTR [rbp-0x18]
  433f8c:	mov    rdi,rax
  433f8f:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  433f94:	jmp    433fa2 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d3>
  433f96:	mov    rax,QWORD PTR [rbp-0x18]
  433f9a:	mov    rdi,rax
  433f9d:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  433fa2:	mov    rax,QWORD PTR [rbp-0x8]
  433fa6:	mov    rdi,rax
  433fa9:	call   42aa3b <flatcc_json_parser_struct_as_root@@Base+0x226>
  433fae:	movsx  ecx,ax
  433fb1:	mov    rdx,QWORD PTR [rbp-0x18]
  433fb5:	mov    rax,QWORD PTR [rbp-0x38]
  433fb9:	mov    esi,ecx
  433fbb:	mov    rdi,rdx
  433fbe:	call   rax
  433fc0:	mov    rax,QWORD PTR [rbp-0x8]
  433fc4:	add    rax,0x2
  433fc8:	mov    QWORD PTR [rbp-0x8],rax
  433fcc:	mov    eax,DWORD PTR [rbp-0xc]
  433fcf:	lea    edx,[rax-0x1]
  433fd2:	mov    DWORD PTR [rbp-0xc],edx
  433fd5:	test   eax,eax
  433fd7:	jne    433f4e <flatcc_json_printer_int16_enum_vector_field@@Base+0x17f>
  433fdd:	mov    rax,QWORD PTR [rbp-0x18]
  433fe1:	movzx  eax,BYTE PTR [rax+0x31]
  433fe5:	test   al,al
  433fe7:	je     43401d <flatcc_json_printer_int16_enum_vector_field@@Base+0x24e>
  433fe9:	mov    rax,QWORD PTR [rbp-0x18]
  433fed:	mov    rax,QWORD PTR [rax+0x28]
  433ff1:	lea    rcx,[rax+0x1]
  433ff5:	mov    rdx,QWORD PTR [rbp-0x18]
  433ff9:	mov    QWORD PTR [rdx+0x28],rcx
  433ffd:	mov    BYTE PTR [rax],0xa
  434000:	mov    rax,QWORD PTR [rbp-0x18]
  434004:	mov    eax,DWORD PTR [rax+0x38]
  434007:	lea    edx,[rax-0x1]
  43400a:	mov    rax,QWORD PTR [rbp-0x18]
  43400e:	mov    DWORD PTR [rax+0x38],edx
  434011:	mov    rax,QWORD PTR [rbp-0x18]
  434015:	mov    rdi,rax
  434018:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43401d:	mov    rax,QWORD PTR [rbp-0x18]
  434021:	mov    rax,QWORD PTR [rax+0x28]
  434025:	lea    rcx,[rax+0x1]
  434029:	mov    rdx,QWORD PTR [rbp-0x18]
  43402d:	mov    QWORD PTR [rdx+0x28],rcx
  434031:	mov    BYTE PTR [rax],0x5d
  434034:	leave  
  434035:	ret    

0000000000434036 <flatcc_json_printer_int32_enum_vector_field@@Base>:
  434036:	endbr64 
  43403a:	push   rbp
  43403b:	mov    rbp,rsp
  43403e:	sub    rsp,0x40
  434042:	mov    QWORD PTR [rbp-0x18],rdi
  434046:	mov    QWORD PTR [rbp-0x20],rsi
  43404a:	mov    DWORD PTR [rbp-0x24],edx
  43404d:	mov    QWORD PTR [rbp-0x30],rcx
  434051:	mov    DWORD PTR [rbp-0x28],r8d
  434055:	mov    QWORD PTR [rbp-0x38],r9
  434059:	mov    rax,QWORD PTR [rbp-0x18]
  43405d:	movzx  eax,BYTE PTR [rax+0x33]
  434061:	test   al,al
  434063:	je     434087 <flatcc_json_printer_int32_enum_vector_field@@Base+0x51>
  434065:	mov    edi,DWORD PTR [rbp-0x28]
  434068:	mov    rcx,QWORD PTR [rbp-0x30]
  43406c:	mov    edx,DWORD PTR [rbp-0x24]
  43406f:	mov    rsi,QWORD PTR [rbp-0x20]
  434073:	mov    rax,QWORD PTR [rbp-0x18]
  434077:	mov    r8d,edi
  43407a:	mov    rdi,rax
  43407d:	call   432312 <flatcc_json_printer_int32_vector_field@@Base>
  434082:	jmp    434299 <flatcc_json_printer_int32_enum_vector_field@@Base+0x263>
  434087:	mov    edx,DWORD PTR [rbp-0x24]
  43408a:	mov    rax,QWORD PTR [rbp-0x20]
  43408e:	mov    esi,edx
  434090:	mov    rdi,rax
  434093:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  434098:	mov    QWORD PTR [rbp-0x8],rax
  43409c:	cmp    QWORD PTR [rbp-0x8],0x0
  4340a1:	je     434299 <flatcc_json_printer_int32_enum_vector_field@@Base+0x263>
  4340a7:	mov    rax,QWORD PTR [rbp-0x20]
  4340ab:	mov    eax,DWORD PTR [rax+0x18]
  4340ae:	lea    ecx,[rax+0x1]
  4340b1:	mov    rdx,QWORD PTR [rbp-0x20]
  4340b5:	mov    DWORD PTR [rdx+0x18],ecx
  4340b8:	test   eax,eax
  4340ba:	je     4340d3 <flatcc_json_printer_int32_enum_vector_field@@Base+0x9d>
  4340bc:	mov    rax,QWORD PTR [rbp-0x18]
  4340c0:	mov    rax,QWORD PTR [rax+0x28]
  4340c4:	lea    rcx,[rax+0x1]
  4340c8:	mov    rdx,QWORD PTR [rbp-0x18]
  4340cc:	mov    QWORD PTR [rdx+0x28],rcx
  4340d0:	mov    BYTE PTR [rax],0x2c
  4340d3:	mov    rax,QWORD PTR [rbp-0x8]
  4340d7:	mov    rdi,rax
  4340da:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  4340df:	mov    QWORD PTR [rbp-0x8],rax
  4340e3:	mov    rax,QWORD PTR [rbp-0x8]
  4340e7:	mov    rdi,rax
  4340ea:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  4340ef:	mov    DWORD PTR [rbp-0xc],eax
  4340f2:	mov    rax,QWORD PTR [rbp-0x8]
  4340f6:	add    rax,0x4
  4340fa:	mov    QWORD PTR [rbp-0x8],rax
  4340fe:	mov    eax,DWORD PTR [rbp-0x28]
  434101:	movsxd rdx,eax
  434104:	mov    rcx,QWORD PTR [rbp-0x30]
  434108:	mov    rax,QWORD PTR [rbp-0x18]
  43410c:	mov    rsi,rcx
  43410f:	mov    rdi,rax
  434112:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  434117:	mov    rax,QWORD PTR [rbp-0x18]
  43411b:	mov    eax,DWORD PTR [rax+0x38]
  43411e:	lea    edx,[rax+0x1]
  434121:	mov    rax,QWORD PTR [rbp-0x18]
  434125:	mov    DWORD PTR [rax+0x38],edx
  434128:	mov    rax,QWORD PTR [rbp-0x18]
  43412c:	mov    rax,QWORD PTR [rax+0x28]
  434130:	lea    rcx,[rax+0x1]
  434134:	mov    rdx,QWORD PTR [rbp-0x18]
  434138:	mov    QWORD PTR [rdx+0x28],rcx
  43413c:	mov    BYTE PTR [rax],0x5b
  43413f:	cmp    DWORD PTR [rbp-0xc],0x0
  434143:	je     434231 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1fb>
  434149:	mov    rax,QWORD PTR [rbp-0x18]
  43414d:	movzx  eax,BYTE PTR [rax+0x31]
  434151:	test   al,al
  434153:	je     43417a <flatcc_json_printer_int32_enum_vector_field@@Base+0x144>
  434155:	mov    rax,QWORD PTR [rbp-0x18]
  434159:	mov    rax,QWORD PTR [rax+0x28]
  43415d:	lea    rcx,[rax+0x1]
  434161:	mov    rdx,QWORD PTR [rbp-0x18]
  434165:	mov    QWORD PTR [rdx+0x28],rcx
  434169:	mov    BYTE PTR [rax],0xa
  43416c:	mov    rax,QWORD PTR [rbp-0x18]
  434170:	mov    rdi,rax
  434173:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  434178:	jmp    434186 <flatcc_json_printer_int32_enum_vector_field@@Base+0x150>
  43417a:	mov    rax,QWORD PTR [rbp-0x18]
  43417e:	mov    rdi,rax
  434181:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  434186:	mov    rax,QWORD PTR [rbp-0x8]
  43418a:	mov    rdi,rax
  43418d:	call   42aa64 <flatcc_json_parser_struct_as_root@@Base+0x24f>
  434192:	mov    ecx,eax
  434194:	mov    rdx,QWORD PTR [rbp-0x18]
  434198:	mov    rax,QWORD PTR [rbp-0x38]
  43419c:	mov    esi,ecx
  43419e:	mov    rdi,rdx
  4341a1:	call   rax
  4341a3:	mov    rax,QWORD PTR [rbp-0x8]
  4341a7:	add    rax,0x4
  4341ab:	mov    QWORD PTR [rbp-0x8],rax
  4341af:	dec    DWORD PTR [rbp-0xc]
  4341b2:	jmp    434231 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1fb>
  4341b4:	mov    rax,QWORD PTR [rbp-0x18]
  4341b8:	mov    rax,QWORD PTR [rax+0x28]
  4341bc:	lea    rcx,[rax+0x1]
  4341c0:	mov    rdx,QWORD PTR [rbp-0x18]
  4341c4:	mov    QWORD PTR [rdx+0x28],rcx
  4341c8:	mov    BYTE PTR [rax],0x2c
  4341cb:	mov    rax,QWORD PTR [rbp-0x18]
  4341cf:	movzx  eax,BYTE PTR [rax+0x31]
  4341d3:	test   al,al
  4341d5:	je     4341fc <flatcc_json_printer_int32_enum_vector_field@@Base+0x1c6>
  4341d7:	mov    rax,QWORD PTR [rbp-0x18]
  4341db:	mov    rax,QWORD PTR [rax+0x28]
  4341df:	lea    rcx,[rax+0x1]
  4341e3:	mov    rdx,QWORD PTR [rbp-0x18]
  4341e7:	mov    QWORD PTR [rdx+0x28],rcx
  4341eb:	mov    BYTE PTR [rax],0xa
  4341ee:	mov    rax,QWORD PTR [rbp-0x18]
  4341f2:	mov    rdi,rax
  4341f5:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4341fa:	jmp    434208 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d2>
  4341fc:	mov    rax,QWORD PTR [rbp-0x18]
  434200:	mov    rdi,rax
  434203:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  434208:	mov    rax,QWORD PTR [rbp-0x8]
  43420c:	mov    rdi,rax
  43420f:	call   42aa64 <flatcc_json_parser_struct_as_root@@Base+0x24f>
  434214:	mov    ecx,eax
  434216:	mov    rdx,QWORD PTR [rbp-0x18]
  43421a:	mov    rax,QWORD PTR [rbp-0x38]
  43421e:	mov    esi,ecx
  434220:	mov    rdi,rdx
  434223:	call   rax
  434225:	mov    rax,QWORD PTR [rbp-0x8]
  434229:	add    rax,0x4
  43422d:	mov    QWORD PTR [rbp-0x8],rax
  434231:	mov    eax,DWORD PTR [rbp-0xc]
  434234:	lea    edx,[rax-0x1]
  434237:	mov    DWORD PTR [rbp-0xc],edx
  43423a:	test   eax,eax
  43423c:	jne    4341b4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x17e>
  434242:	mov    rax,QWORD PTR [rbp-0x18]
  434246:	movzx  eax,BYTE PTR [rax+0x31]
  43424a:	test   al,al
  43424c:	je     434282 <flatcc_json_printer_int32_enum_vector_field@@Base+0x24c>
  43424e:	mov    rax,QWORD PTR [rbp-0x18]
  434252:	mov    rax,QWORD PTR [rax+0x28]
  434256:	lea    rcx,[rax+0x1]
  43425a:	mov    rdx,QWORD PTR [rbp-0x18]
  43425e:	mov    QWORD PTR [rdx+0x28],rcx
  434262:	mov    BYTE PTR [rax],0xa
  434265:	mov    rax,QWORD PTR [rbp-0x18]
  434269:	mov    eax,DWORD PTR [rax+0x38]
  43426c:	lea    edx,[rax-0x1]
  43426f:	mov    rax,QWORD PTR [rbp-0x18]
  434273:	mov    DWORD PTR [rax+0x38],edx
  434276:	mov    rax,QWORD PTR [rbp-0x18]
  43427a:	mov    rdi,rax
  43427d:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  434282:	mov    rax,QWORD PTR [rbp-0x18]
  434286:	mov    rax,QWORD PTR [rax+0x28]
  43428a:	lea    rcx,[rax+0x1]
  43428e:	mov    rdx,QWORD PTR [rbp-0x18]
  434292:	mov    QWORD PTR [rdx+0x28],rcx
  434296:	mov    BYTE PTR [rax],0x5d
  434299:	leave  
  43429a:	ret    

000000000043429b <flatcc_json_printer_int64_enum_vector_field@@Base>:
  43429b:	endbr64 
  43429f:	push   rbp
  4342a0:	mov    rbp,rsp
  4342a3:	sub    rsp,0x40
  4342a7:	mov    QWORD PTR [rbp-0x18],rdi
  4342ab:	mov    QWORD PTR [rbp-0x20],rsi
  4342af:	mov    DWORD PTR [rbp-0x24],edx
  4342b2:	mov    QWORD PTR [rbp-0x30],rcx
  4342b6:	mov    DWORD PTR [rbp-0x28],r8d
  4342ba:	mov    QWORD PTR [rbp-0x38],r9
  4342be:	mov    rax,QWORD PTR [rbp-0x18]
  4342c2:	movzx  eax,BYTE PTR [rax+0x33]
  4342c6:	test   al,al
  4342c8:	je     4342ec <flatcc_json_printer_int64_enum_vector_field@@Base+0x51>
  4342ca:	mov    edi,DWORD PTR [rbp-0x28]
  4342cd:	mov    rcx,QWORD PTR [rbp-0x30]
  4342d1:	mov    edx,DWORD PTR [rbp-0x24]
  4342d4:	mov    rsi,QWORD PTR [rbp-0x20]
  4342d8:	mov    rax,QWORD PTR [rbp-0x18]
  4342dc:	mov    r8d,edi
  4342df:	mov    rdi,rax
  4342e2:	call   432581 <flatcc_json_printer_int64_vector_field@@Base>
  4342e7:	jmp    434502 <flatcc_json_printer_int64_enum_vector_field@@Base+0x267>
  4342ec:	mov    edx,DWORD PTR [rbp-0x24]
  4342ef:	mov    rax,QWORD PTR [rbp-0x20]
  4342f3:	mov    esi,edx
  4342f5:	mov    rdi,rax
  4342f8:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  4342fd:	mov    QWORD PTR [rbp-0x8],rax
  434301:	cmp    QWORD PTR [rbp-0x8],0x0
  434306:	je     434502 <flatcc_json_printer_int64_enum_vector_field@@Base+0x267>
  43430c:	mov    rax,QWORD PTR [rbp-0x20]
  434310:	mov    eax,DWORD PTR [rax+0x18]
  434313:	lea    ecx,[rax+0x1]
  434316:	mov    rdx,QWORD PTR [rbp-0x20]
  43431a:	mov    DWORD PTR [rdx+0x18],ecx
  43431d:	test   eax,eax
  43431f:	je     434338 <flatcc_json_printer_int64_enum_vector_field@@Base+0x9d>
  434321:	mov    rax,QWORD PTR [rbp-0x18]
  434325:	mov    rax,QWORD PTR [rax+0x28]
  434329:	lea    rcx,[rax+0x1]
  43432d:	mov    rdx,QWORD PTR [rbp-0x18]
  434331:	mov    QWORD PTR [rdx+0x28],rcx
  434335:	mov    BYTE PTR [rax],0x2c
  434338:	mov    rax,QWORD PTR [rbp-0x8]
  43433c:	mov    rdi,rax
  43433f:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  434344:	mov    QWORD PTR [rbp-0x8],rax
  434348:	mov    rax,QWORD PTR [rbp-0x8]
  43434c:	mov    rdi,rax
  43434f:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  434354:	mov    DWORD PTR [rbp-0xc],eax
  434357:	mov    rax,QWORD PTR [rbp-0x8]
  43435b:	add    rax,0x4
  43435f:	mov    QWORD PTR [rbp-0x8],rax
  434363:	mov    eax,DWORD PTR [rbp-0x28]
  434366:	movsxd rdx,eax
  434369:	mov    rcx,QWORD PTR [rbp-0x30]
  43436d:	mov    rax,QWORD PTR [rbp-0x18]
  434371:	mov    rsi,rcx
  434374:	mov    rdi,rax
  434377:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  43437c:	mov    rax,QWORD PTR [rbp-0x18]
  434380:	mov    eax,DWORD PTR [rax+0x38]
  434383:	lea    edx,[rax+0x1]
  434386:	mov    rax,QWORD PTR [rbp-0x18]
  43438a:	mov    DWORD PTR [rax+0x38],edx
  43438d:	mov    rax,QWORD PTR [rbp-0x18]
  434391:	mov    rax,QWORD PTR [rax+0x28]
  434395:	lea    rcx,[rax+0x1]
  434399:	mov    rdx,QWORD PTR [rbp-0x18]
  43439d:	mov    QWORD PTR [rdx+0x28],rcx
  4343a1:	mov    BYTE PTR [rax],0x5b
  4343a4:	cmp    DWORD PTR [rbp-0xc],0x0
  4343a8:	je     43449a <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ff>
  4343ae:	mov    rax,QWORD PTR [rbp-0x18]
  4343b2:	movzx  eax,BYTE PTR [rax+0x31]
  4343b6:	test   al,al
  4343b8:	je     4343df <flatcc_json_printer_int64_enum_vector_field@@Base+0x144>
  4343ba:	mov    rax,QWORD PTR [rbp-0x18]
  4343be:	mov    rax,QWORD PTR [rax+0x28]
  4343c2:	lea    rcx,[rax+0x1]
  4343c6:	mov    rdx,QWORD PTR [rbp-0x18]
  4343ca:	mov    QWORD PTR [rdx+0x28],rcx
  4343ce:	mov    BYTE PTR [rax],0xa
  4343d1:	mov    rax,QWORD PTR [rbp-0x18]
  4343d5:	mov    rdi,rax
  4343d8:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4343dd:	jmp    4343eb <flatcc_json_printer_int64_enum_vector_field@@Base+0x150>
  4343df:	mov    rax,QWORD PTR [rbp-0x18]
  4343e3:	mov    rdi,rax
  4343e6:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4343eb:	mov    rax,QWORD PTR [rbp-0x8]
  4343ef:	mov    rdi,rax
  4343f2:	call   42aa8d <flatcc_json_parser_struct_as_root@@Base+0x278>
  4343f7:	mov    rcx,rax
  4343fa:	mov    rdx,QWORD PTR [rbp-0x18]
  4343fe:	mov    rax,QWORD PTR [rbp-0x38]
  434402:	mov    rsi,rcx
  434405:	mov    rdi,rdx
  434408:	call   rax
  43440a:	mov    rax,QWORD PTR [rbp-0x8]
  43440e:	add    rax,0x8
  434412:	mov    QWORD PTR [rbp-0x8],rax
  434416:	dec    DWORD PTR [rbp-0xc]
  434419:	jmp    43449a <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ff>
  43441b:	mov    rax,QWORD PTR [rbp-0x18]
  43441f:	mov    rax,QWORD PTR [rax+0x28]
  434423:	lea    rcx,[rax+0x1]
  434427:	mov    rdx,QWORD PTR [rbp-0x18]
  43442b:	mov    QWORD PTR [rdx+0x28],rcx
  43442f:	mov    BYTE PTR [rax],0x2c
  434432:	mov    rax,QWORD PTR [rbp-0x18]
  434436:	movzx  eax,BYTE PTR [rax+0x31]
  43443a:	test   al,al
  43443c:	je     434463 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1c8>
  43443e:	mov    rax,QWORD PTR [rbp-0x18]
  434442:	mov    rax,QWORD PTR [rax+0x28]
  434446:	lea    rcx,[rax+0x1]
  43444a:	mov    rdx,QWORD PTR [rbp-0x18]
  43444e:	mov    QWORD PTR [rdx+0x28],rcx
  434452:	mov    BYTE PTR [rax],0xa
  434455:	mov    rax,QWORD PTR [rbp-0x18]
  434459:	mov    rdi,rax
  43445c:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  434461:	jmp    43446f <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
  434463:	mov    rax,QWORD PTR [rbp-0x18]
  434467:	mov    rdi,rax
  43446a:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  43446f:	mov    rax,QWORD PTR [rbp-0x8]
  434473:	mov    rdi,rax
  434476:	call   42aa8d <flatcc_json_parser_struct_as_root@@Base+0x278>
  43447b:	mov    rcx,rax
  43447e:	mov    rdx,QWORD PTR [rbp-0x18]
  434482:	mov    rax,QWORD PTR [rbp-0x38]
  434486:	mov    rsi,rcx
  434489:	mov    rdi,rdx
  43448c:	call   rax
  43448e:	mov    rax,QWORD PTR [rbp-0x8]
  434492:	add    rax,0x8
  434496:	mov    QWORD PTR [rbp-0x8],rax
  43449a:	mov    eax,DWORD PTR [rbp-0xc]
  43449d:	lea    edx,[rax-0x1]
  4344a0:	mov    DWORD PTR [rbp-0xc],edx
  4344a3:	test   eax,eax
  4344a5:	jne    43441b <flatcc_json_printer_int64_enum_vector_field@@Base+0x180>
  4344ab:	mov    rax,QWORD PTR [rbp-0x18]
  4344af:	movzx  eax,BYTE PTR [rax+0x31]
  4344b3:	test   al,al
  4344b5:	je     4344eb <flatcc_json_printer_int64_enum_vector_field@@Base+0x250>
  4344b7:	mov    rax,QWORD PTR [rbp-0x18]
  4344bb:	mov    rax,QWORD PTR [rax+0x28]
  4344bf:	lea    rcx,[rax+0x1]
  4344c3:	mov    rdx,QWORD PTR [rbp-0x18]
  4344c7:	mov    QWORD PTR [rdx+0x28],rcx
  4344cb:	mov    BYTE PTR [rax],0xa
  4344ce:	mov    rax,QWORD PTR [rbp-0x18]
  4344d2:	mov    eax,DWORD PTR [rax+0x38]
  4344d5:	lea    edx,[rax-0x1]
  4344d8:	mov    rax,QWORD PTR [rbp-0x18]
  4344dc:	mov    DWORD PTR [rax+0x38],edx
  4344df:	mov    rax,QWORD PTR [rbp-0x18]
  4344e3:	mov    rdi,rax
  4344e6:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4344eb:	mov    rax,QWORD PTR [rbp-0x18]
  4344ef:	mov    rax,QWORD PTR [rax+0x28]
  4344f3:	lea    rcx,[rax+0x1]
  4344f7:	mov    rdx,QWORD PTR [rbp-0x18]
  4344fb:	mov    QWORD PTR [rdx+0x28],rcx
  4344ff:	mov    BYTE PTR [rax],0x5d
  434502:	leave  
  434503:	ret    

0000000000434504 <flatcc_json_printer_bool_enum_vector_field@@Base>:
  434504:	endbr64 
  434508:	push   rbp
  434509:	mov    rbp,rsp
  43450c:	sub    rsp,0x40
  434510:	mov    QWORD PTR [rbp-0x18],rdi
  434514:	mov    QWORD PTR [rbp-0x20],rsi
  434518:	mov    DWORD PTR [rbp-0x24],edx
  43451b:	mov    QWORD PTR [rbp-0x30],rcx
  43451f:	mov    DWORD PTR [rbp-0x28],r8d
  434523:	mov    QWORD PTR [rbp-0x38],r9
  434527:	mov    rax,QWORD PTR [rbp-0x18]
  43452b:	movzx  eax,BYTE PTR [rax+0x33]
  43452f:	test   al,al
  434531:	je     434555 <flatcc_json_printer_bool_enum_vector_field@@Base+0x51>
  434533:	mov    edi,DWORD PTR [rbp-0x28]
  434536:	mov    rcx,QWORD PTR [rbp-0x30]
  43453a:	mov    edx,DWORD PTR [rbp-0x24]
  43453d:	mov    rsi,QWORD PTR [rbp-0x20]
  434541:	mov    rax,QWORD PTR [rbp-0x18]
  434545:	mov    r8d,edi
  434548:	mov    rdi,rax
  43454b:	call   4327f2 <flatcc_json_printer_bool_vector_field@@Base>
  434550:	jmp    434767 <flatcc_json_printer_bool_enum_vector_field@@Base+0x263>
  434555:	mov    edx,DWORD PTR [rbp-0x24]
  434558:	mov    rax,QWORD PTR [rbp-0x20]
  43455c:	mov    esi,edx
  43455e:	mov    rdi,rax
  434561:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  434566:	mov    QWORD PTR [rbp-0x8],rax
  43456a:	cmp    QWORD PTR [rbp-0x8],0x0
  43456f:	je     434767 <flatcc_json_printer_bool_enum_vector_field@@Base+0x263>
  434575:	mov    rax,QWORD PTR [rbp-0x20]
  434579:	mov    eax,DWORD PTR [rax+0x18]
  43457c:	lea    ecx,[rax+0x1]
  43457f:	mov    rdx,QWORD PTR [rbp-0x20]
  434583:	mov    DWORD PTR [rdx+0x18],ecx
  434586:	test   eax,eax
  434588:	je     4345a1 <flatcc_json_printer_bool_enum_vector_field@@Base+0x9d>
  43458a:	mov    rax,QWORD PTR [rbp-0x18]
  43458e:	mov    rax,QWORD PTR [rax+0x28]
  434592:	lea    rcx,[rax+0x1]
  434596:	mov    rdx,QWORD PTR [rbp-0x18]
  43459a:	mov    QWORD PTR [rdx+0x28],rcx
  43459e:	mov    BYTE PTR [rax],0x2c
  4345a1:	mov    rax,QWORD PTR [rbp-0x8]
  4345a5:	mov    rdi,rax
  4345a8:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  4345ad:	mov    QWORD PTR [rbp-0x8],rax
  4345b1:	mov    rax,QWORD PTR [rbp-0x8]
  4345b5:	mov    rdi,rax
  4345b8:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  4345bd:	mov    DWORD PTR [rbp-0xc],eax
  4345c0:	mov    rax,QWORD PTR [rbp-0x8]
  4345c4:	add    rax,0x4
  4345c8:	mov    QWORD PTR [rbp-0x8],rax
  4345cc:	mov    eax,DWORD PTR [rbp-0x28]
  4345cf:	movsxd rdx,eax
  4345d2:	mov    rcx,QWORD PTR [rbp-0x30]
  4345d6:	mov    rax,QWORD PTR [rbp-0x18]
  4345da:	mov    rsi,rcx
  4345dd:	mov    rdi,rax
  4345e0:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  4345e5:	mov    rax,QWORD PTR [rbp-0x18]
  4345e9:	mov    eax,DWORD PTR [rax+0x38]
  4345ec:	lea    edx,[rax+0x1]
  4345ef:	mov    rax,QWORD PTR [rbp-0x18]
  4345f3:	mov    DWORD PTR [rax+0x38],edx
  4345f6:	mov    rax,QWORD PTR [rbp-0x18]
  4345fa:	mov    rax,QWORD PTR [rax+0x28]
  4345fe:	lea    rcx,[rax+0x1]
  434602:	mov    rdx,QWORD PTR [rbp-0x18]
  434606:	mov    QWORD PTR [rdx+0x28],rcx
  43460a:	mov    BYTE PTR [rax],0x5b
  43460d:	cmp    DWORD PTR [rbp-0xc],0x0
  434611:	je     4346ff <flatcc_json_printer_bool_enum_vector_field@@Base+0x1fb>
  434617:	mov    rax,QWORD PTR [rbp-0x18]
  43461b:	movzx  eax,BYTE PTR [rax+0x31]
  43461f:	test   al,al
  434621:	je     434648 <flatcc_json_printer_bool_enum_vector_field@@Base+0x144>
  434623:	mov    rax,QWORD PTR [rbp-0x18]
  434627:	mov    rax,QWORD PTR [rax+0x28]
  43462b:	lea    rcx,[rax+0x1]
  43462f:	mov    rdx,QWORD PTR [rbp-0x18]
  434633:	mov    QWORD PTR [rdx+0x28],rcx
  434637:	mov    BYTE PTR [rax],0xa
  43463a:	mov    rax,QWORD PTR [rbp-0x18]
  43463e:	mov    rdi,rax
  434641:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  434646:	jmp    434654 <flatcc_json_printer_bool_enum_vector_field@@Base+0x150>
  434648:	mov    rax,QWORD PTR [rbp-0x18]
  43464c:	mov    rdi,rax
  43464f:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  434654:	mov    rax,QWORD PTR [rbp-0x8]
  434658:	mov    rdi,rax
  43465b:	call   42ab4b <flatcc_json_parser_struct_as_root@@Base+0x336>
  434660:	movzx  ecx,al
  434663:	mov    rdx,QWORD PTR [rbp-0x18]
  434667:	mov    rax,QWORD PTR [rbp-0x38]
  43466b:	mov    esi,ecx
  43466d:	mov    rdi,rdx
  434670:	call   rax
  434672:	mov    rax,QWORD PTR [rbp-0x8]
  434676:	inc    rax
  434679:	mov    QWORD PTR [rbp-0x8],rax
  43467d:	dec    DWORD PTR [rbp-0xc]
  434680:	jmp    4346ff <flatcc_json_printer_bool_enum_vector_field@@Base+0x1fb>
  434682:	mov    rax,QWORD PTR [rbp-0x18]
  434686:	mov    rax,QWORD PTR [rax+0x28]
  43468a:	lea    rcx,[rax+0x1]
  43468e:	mov    rdx,QWORD PTR [rbp-0x18]
  434692:	mov    QWORD PTR [rdx+0x28],rcx
  434696:	mov    BYTE PTR [rax],0x2c
  434699:	mov    rax,QWORD PTR [rbp-0x18]
  43469d:	movzx  eax,BYTE PTR [rax+0x31]
  4346a1:	test   al,al
  4346a3:	je     4346ca <flatcc_json_printer_bool_enum_vector_field@@Base+0x1c6>
  4346a5:	mov    rax,QWORD PTR [rbp-0x18]
  4346a9:	mov    rax,QWORD PTR [rax+0x28]
  4346ad:	lea    rcx,[rax+0x1]
  4346b1:	mov    rdx,QWORD PTR [rbp-0x18]
  4346b5:	mov    QWORD PTR [rdx+0x28],rcx
  4346b9:	mov    BYTE PTR [rax],0xa
  4346bc:	mov    rax,QWORD PTR [rbp-0x18]
  4346c0:	mov    rdi,rax
  4346c3:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4346c8:	jmp    4346d6 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d2>
  4346ca:	mov    rax,QWORD PTR [rbp-0x18]
  4346ce:	mov    rdi,rax
  4346d1:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4346d6:	mov    rax,QWORD PTR [rbp-0x8]
  4346da:	mov    rdi,rax
  4346dd:	call   42ab4b <flatcc_json_parser_struct_as_root@@Base+0x336>
  4346e2:	movzx  ecx,al
  4346e5:	mov    rdx,QWORD PTR [rbp-0x18]
  4346e9:	mov    rax,QWORD PTR [rbp-0x38]
  4346ed:	mov    esi,ecx
  4346ef:	mov    rdi,rdx
  4346f2:	call   rax
  4346f4:	mov    rax,QWORD PTR [rbp-0x8]
  4346f8:	inc    rax
  4346fb:	mov    QWORD PTR [rbp-0x8],rax
  4346ff:	mov    eax,DWORD PTR [rbp-0xc]
  434702:	lea    edx,[rax-0x1]
  434705:	mov    DWORD PTR [rbp-0xc],edx
  434708:	test   eax,eax
  43470a:	jne    434682 <flatcc_json_printer_bool_enum_vector_field@@Base+0x17e>
  434710:	mov    rax,QWORD PTR [rbp-0x18]
  434714:	movzx  eax,BYTE PTR [rax+0x31]
  434718:	test   al,al
  43471a:	je     434750 <flatcc_json_printer_bool_enum_vector_field@@Base+0x24c>
  43471c:	mov    rax,QWORD PTR [rbp-0x18]
  434720:	mov    rax,QWORD PTR [rax+0x28]
  434724:	lea    rcx,[rax+0x1]
  434728:	mov    rdx,QWORD PTR [rbp-0x18]
  43472c:	mov    QWORD PTR [rdx+0x28],rcx
  434730:	mov    BYTE PTR [rax],0xa
  434733:	mov    rax,QWORD PTR [rbp-0x18]
  434737:	mov    eax,DWORD PTR [rax+0x38]
  43473a:	lea    edx,[rax-0x1]
  43473d:	mov    rax,QWORD PTR [rbp-0x18]
  434741:	mov    DWORD PTR [rax+0x38],edx
  434744:	mov    rax,QWORD PTR [rbp-0x18]
  434748:	mov    rdi,rax
  43474b:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  434750:	mov    rax,QWORD PTR [rbp-0x18]
  434754:	mov    rax,QWORD PTR [rax+0x28]
  434758:	lea    rcx,[rax+0x1]
  43475c:	mov    rdx,QWORD PTR [rbp-0x18]
  434760:	mov    QWORD PTR [rdx+0x28],rcx
  434764:	mov    BYTE PTR [rax],0x5d
  434767:	leave  
  434768:	ret    

0000000000434769 <flatcc_json_printer_struct_vector_field@@Base>:
  434769:	endbr64 
  43476d:	push   rbp
  43476e:	mov    rbp,rsp
  434771:	sub    rsp,0x40
  434775:	mov    QWORD PTR [rbp-0x18],rdi
  434779:	mov    QWORD PTR [rbp-0x20],rsi
  43477d:	mov    DWORD PTR [rbp-0x24],edx
  434780:	mov    QWORD PTR [rbp-0x30],rcx
  434784:	mov    DWORD PTR [rbp-0x28],r8d
  434788:	mov    QWORD PTR [rbp-0x38],r9
  43478c:	mov    edx,DWORD PTR [rbp-0x24]
  43478f:	mov    rax,QWORD PTR [rbp-0x20]
  434793:	mov    esi,edx
  434795:	mov    rdi,rax
  434798:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  43479d:	mov    QWORD PTR [rbp-0x8],rax
  4347a1:	cmp    QWORD PTR [rbp-0x8],0x0
  4347a6:	je     434a76 <flatcc_json_printer_struct_vector_field@@Base+0x30d>
  4347ac:	mov    rax,QWORD PTR [rbp-0x20]
  4347b0:	mov    eax,DWORD PTR [rax+0x18]
  4347b3:	lea    ecx,[rax+0x1]
  4347b6:	mov    rdx,QWORD PTR [rbp-0x20]
  4347ba:	mov    DWORD PTR [rdx+0x18],ecx
  4347bd:	test   eax,eax
  4347bf:	je     4347d8 <flatcc_json_printer_struct_vector_field@@Base+0x6f>
  4347c1:	mov    rax,QWORD PTR [rbp-0x18]
  4347c5:	mov    rax,QWORD PTR [rax+0x28]
  4347c9:	lea    rcx,[rax+0x1]
  4347cd:	mov    rdx,QWORD PTR [rbp-0x18]
  4347d1:	mov    QWORD PTR [rdx+0x28],rcx
  4347d5:	mov    BYTE PTR [rax],0x2c
  4347d8:	mov    rax,QWORD PTR [rbp-0x8]
  4347dc:	mov    rdi,rax
  4347df:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  4347e4:	mov    QWORD PTR [rbp-0x8],rax
  4347e8:	mov    rax,QWORD PTR [rbp-0x8]
  4347ec:	mov    rdi,rax
  4347ef:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  4347f4:	mov    DWORD PTR [rbp-0xc],eax
  4347f7:	add    QWORD PTR [rbp-0x8],0x4
  4347fc:	mov    eax,DWORD PTR [rbp-0x28]
  4347ff:	movsxd rdx,eax
  434802:	mov    rcx,QWORD PTR [rbp-0x30]
  434806:	mov    rax,QWORD PTR [rbp-0x18]
  43480a:	mov    rsi,rcx
  43480d:	mov    rdi,rax
  434810:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  434815:	mov    rax,QWORD PTR [rbp-0x18]
  434819:	mov    eax,DWORD PTR [rax+0x38]
  43481c:	lea    edx,[rax+0x1]
  43481f:	mov    rax,QWORD PTR [rbp-0x18]
  434823:	mov    DWORD PTR [rax+0x38],edx
  434826:	mov    rax,QWORD PTR [rbp-0x18]
  43482a:	mov    rax,QWORD PTR [rax+0x28]
  43482e:	lea    rcx,[rax+0x1]
  434832:	mov    rdx,QWORD PTR [rbp-0x18]
  434836:	mov    QWORD PTR [rdx+0x28],rcx
  43483a:	mov    BYTE PTR [rax],0x5b
  43483d:	cmp    DWORD PTR [rbp-0xc],0x0
  434841:	je     434a0e <flatcc_json_printer_struct_vector_field@@Base+0x2a5>
  434847:	mov    rax,QWORD PTR [rbp-0x18]
  43484b:	movzx  eax,BYTE PTR [rax+0x31]
  43484f:	test   al,al
  434851:	je     434878 <flatcc_json_printer_struct_vector_field@@Base+0x10f>
  434853:	mov    rax,QWORD PTR [rbp-0x18]
  434857:	mov    rax,QWORD PTR [rax+0x28]
  43485b:	lea    rcx,[rax+0x1]
  43485f:	mov    rdx,QWORD PTR [rbp-0x18]
  434863:	mov    QWORD PTR [rdx+0x28],rcx
  434867:	mov    BYTE PTR [rax],0xa
  43486a:	mov    rax,QWORD PTR [rbp-0x18]
  43486e:	mov    rdi,rax
  434871:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  434876:	jmp    434884 <flatcc_json_printer_struct_vector_field@@Base+0x11b>
  434878:	mov    rax,QWORD PTR [rbp-0x18]
  43487c:	mov    rdi,rax
  43487f:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  434884:	mov    rax,QWORD PTR [rbp-0x18]
  434888:	mov    eax,DWORD PTR [rax+0x38]
  43488b:	lea    edx,[rax+0x1]
  43488e:	mov    rax,QWORD PTR [rbp-0x18]
  434892:	mov    DWORD PTR [rax+0x38],edx
  434895:	mov    rax,QWORD PTR [rbp-0x18]
  434899:	mov    rax,QWORD PTR [rax+0x28]
  43489d:	lea    rcx,[rax+0x1]
  4348a1:	mov    rdx,QWORD PTR [rbp-0x18]
  4348a5:	mov    QWORD PTR [rdx+0x28],rcx
  4348a9:	mov    BYTE PTR [rax],0x7b
  4348ac:	mov    rcx,QWORD PTR [rbp-0x8]
  4348b0:	mov    rdx,QWORD PTR [rbp-0x18]
  4348b4:	mov    rax,QWORD PTR [rbp+0x10]
  4348b8:	mov    rsi,rcx
  4348bb:	mov    rdi,rdx
  4348be:	call   rax
  4348c0:	mov    rax,QWORD PTR [rbp-0x18]
  4348c4:	movzx  eax,BYTE PTR [rax+0x31]
  4348c8:	test   al,al
  4348ca:	je     434900 <flatcc_json_printer_struct_vector_field@@Base+0x197>
  4348cc:	mov    rax,QWORD PTR [rbp-0x18]
  4348d0:	mov    rax,QWORD PTR [rax+0x28]
  4348d4:	lea    rcx,[rax+0x1]
  4348d8:	mov    rdx,QWORD PTR [rbp-0x18]
  4348dc:	mov    QWORD PTR [rdx+0x28],rcx
  4348e0:	mov    BYTE PTR [rax],0xa
  4348e3:	mov    rax,QWORD PTR [rbp-0x18]
  4348e7:	mov    eax,DWORD PTR [rax+0x38]
  4348ea:	lea    edx,[rax-0x1]
  4348ed:	mov    rax,QWORD PTR [rbp-0x18]
  4348f1:	mov    DWORD PTR [rax+0x38],edx
  4348f4:	mov    rax,QWORD PTR [rbp-0x18]
  4348f8:	mov    rdi,rax
  4348fb:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  434900:	mov    rax,QWORD PTR [rbp-0x18]
  434904:	mov    rax,QWORD PTR [rax+0x28]
  434908:	lea    rcx,[rax+0x1]
  43490c:	mov    rdx,QWORD PTR [rbp-0x18]
  434910:	mov    QWORD PTR [rdx+0x28],rcx
  434914:	mov    BYTE PTR [rax],0x7d
  434917:	dec    DWORD PTR [rbp-0xc]
  43491a:	jmp    434a0e <flatcc_json_printer_struct_vector_field@@Base+0x2a5>
  43491f:	mov    rax,QWORD PTR [rbp-0x38]
  434923:	add    QWORD PTR [rbp-0x8],rax
  434927:	mov    rax,QWORD PTR [rbp-0x18]
  43492b:	mov    rax,QWORD PTR [rax+0x28]
  43492f:	lea    rcx,[rax+0x1]
  434933:	mov    rdx,QWORD PTR [rbp-0x18]
  434937:	mov    QWORD PTR [rdx+0x28],rcx
  43493b:	mov    BYTE PTR [rax],0x2c
  43493e:	mov    rax,QWORD PTR [rbp-0x18]
  434942:	movzx  eax,BYTE PTR [rax+0x31]
  434946:	test   al,al
  434948:	je     43496f <flatcc_json_printer_struct_vector_field@@Base+0x206>
  43494a:	mov    rax,QWORD PTR [rbp-0x18]
  43494e:	mov    rax,QWORD PTR [rax+0x28]
  434952:	lea    rcx,[rax+0x1]
  434956:	mov    rdx,QWORD PTR [rbp-0x18]
  43495a:	mov    QWORD PTR [rdx+0x28],rcx
  43495e:	mov    BYTE PTR [rax],0xa
  434961:	mov    rax,QWORD PTR [rbp-0x18]
  434965:	mov    rdi,rax
  434968:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  43496d:	jmp    43497b <flatcc_json_printer_struct_vector_field@@Base+0x212>
  43496f:	mov    rax,QWORD PTR [rbp-0x18]
  434973:	mov    rdi,rax
  434976:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  43497b:	mov    rax,QWORD PTR [rbp-0x18]
  43497f:	mov    eax,DWORD PTR [rax+0x38]
  434982:	lea    edx,[rax+0x1]
  434985:	mov    rax,QWORD PTR [rbp-0x18]
  434989:	mov    DWORD PTR [rax+0x38],edx
  43498c:	mov    rax,QWORD PTR [rbp-0x18]
  434990:	mov    rax,QWORD PTR [rax+0x28]
  434994:	lea    rcx,[rax+0x1]
  434998:	mov    rdx,QWORD PTR [rbp-0x18]
  43499c:	mov    QWORD PTR [rdx+0x28],rcx
  4349a0:	mov    BYTE PTR [rax],0x7b
  4349a3:	mov    rcx,QWORD PTR [rbp-0x8]
  4349a7:	mov    rdx,QWORD PTR [rbp-0x18]
  4349ab:	mov    rax,QWORD PTR [rbp+0x10]
  4349af:	mov    rsi,rcx
  4349b2:	mov    rdi,rdx
  4349b5:	call   rax
  4349b7:	mov    rax,QWORD PTR [rbp-0x18]
  4349bb:	movzx  eax,BYTE PTR [rax+0x31]
  4349bf:	test   al,al
  4349c1:	je     4349f7 <flatcc_json_printer_struct_vector_field@@Base+0x28e>
  4349c3:	mov    rax,QWORD PTR [rbp-0x18]
  4349c7:	mov    rax,QWORD PTR [rax+0x28]
  4349cb:	lea    rcx,[rax+0x1]
  4349cf:	mov    rdx,QWORD PTR [rbp-0x18]
  4349d3:	mov    QWORD PTR [rdx+0x28],rcx
  4349d7:	mov    BYTE PTR [rax],0xa
  4349da:	mov    rax,QWORD PTR [rbp-0x18]
  4349de:	mov    eax,DWORD PTR [rax+0x38]
  4349e1:	lea    edx,[rax-0x1]
  4349e4:	mov    rax,QWORD PTR [rbp-0x18]
  4349e8:	mov    DWORD PTR [rax+0x38],edx
  4349eb:	mov    rax,QWORD PTR [rbp-0x18]
  4349ef:	mov    rdi,rax
  4349f2:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4349f7:	mov    rax,QWORD PTR [rbp-0x18]
  4349fb:	mov    rax,QWORD PTR [rax+0x28]
  4349ff:	lea    rcx,[rax+0x1]
  434a03:	mov    rdx,QWORD PTR [rbp-0x18]
  434a07:	mov    QWORD PTR [rdx+0x28],rcx
  434a0b:	mov    BYTE PTR [rax],0x7d
  434a0e:	mov    eax,DWORD PTR [rbp-0xc]
  434a11:	lea    edx,[rax-0x1]
  434a14:	mov    DWORD PTR [rbp-0xc],edx
  434a17:	test   eax,eax
  434a19:	jne    43491f <flatcc_json_printer_struct_vector_field@@Base+0x1b6>
  434a1f:	mov    rax,QWORD PTR [rbp-0x18]
  434a23:	movzx  eax,BYTE PTR [rax+0x31]
  434a27:	test   al,al
  434a29:	je     434a5f <flatcc_json_printer_struct_vector_field@@Base+0x2f6>
  434a2b:	mov    rax,QWORD PTR [rbp-0x18]
  434a2f:	mov    rax,QWORD PTR [rax+0x28]
  434a33:	lea    rcx,[rax+0x1]
  434a37:	mov    rdx,QWORD PTR [rbp-0x18]
  434a3b:	mov    QWORD PTR [rdx+0x28],rcx
  434a3f:	mov    BYTE PTR [rax],0xa
  434a42:	mov    rax,QWORD PTR [rbp-0x18]
  434a46:	mov    eax,DWORD PTR [rax+0x38]
  434a49:	lea    edx,[rax-0x1]
  434a4c:	mov    rax,QWORD PTR [rbp-0x18]
  434a50:	mov    DWORD PTR [rax+0x38],edx
  434a53:	mov    rax,QWORD PTR [rbp-0x18]
  434a57:	mov    rdi,rax
  434a5a:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  434a5f:	mov    rax,QWORD PTR [rbp-0x18]
  434a63:	mov    rax,QWORD PTR [rax+0x28]
  434a67:	lea    rcx,[rax+0x1]
  434a6b:	mov    rdx,QWORD PTR [rbp-0x18]
  434a6f:	mov    QWORD PTR [rdx+0x28],rcx
  434a73:	mov    BYTE PTR [rax],0x5d
  434a76:	nop
  434a77:	leave  
  434a78:	ret    

0000000000434a79 <flatcc_json_printer_string_vector_field@@Base>:
  434a79:	endbr64 
  434a7d:	push   rbp
  434a7e:	mov    rbp,rsp
  434a81:	sub    rsp,0x30
  434a85:	mov    QWORD PTR [rbp-0x18],rdi
  434a89:	mov    QWORD PTR [rbp-0x20],rsi
  434a8d:	mov    DWORD PTR [rbp-0x24],edx
  434a90:	mov    QWORD PTR [rbp-0x30],rcx
  434a94:	mov    DWORD PTR [rbp-0x28],r8d
  434a98:	mov    edx,DWORD PTR [rbp-0x24]
  434a9b:	mov    rax,QWORD PTR [rbp-0x20]
  434a9f:	mov    esi,edx
  434aa1:	mov    rdi,rax
  434aa4:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  434aa9:	mov    QWORD PTR [rbp-0x8],rax
  434aad:	cmp    QWORD PTR [rbp-0x8],0x0
  434ab2:	je     434c92 <flatcc_json_printer_string_vector_field@@Base+0x219>
  434ab8:	mov    rax,QWORD PTR [rbp-0x20]
  434abc:	mov    eax,DWORD PTR [rax+0x18]
  434abf:	lea    ecx,[rax+0x1]
  434ac2:	mov    rdx,QWORD PTR [rbp-0x20]
  434ac6:	mov    DWORD PTR [rdx+0x18],ecx
  434ac9:	test   eax,eax
  434acb:	je     434ae4 <flatcc_json_printer_string_vector_field@@Base+0x6b>
  434acd:	mov    rax,QWORD PTR [rbp-0x18]
  434ad1:	mov    rax,QWORD PTR [rax+0x28]
  434ad5:	lea    rcx,[rax+0x1]
  434ad9:	mov    rdx,QWORD PTR [rbp-0x18]
  434add:	mov    QWORD PTR [rdx+0x28],rcx
  434ae1:	mov    BYTE PTR [rax],0x2c
  434ae4:	mov    rax,QWORD PTR [rbp-0x8]
  434ae8:	mov    rdi,rax
  434aeb:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  434af0:	mov    QWORD PTR [rbp-0x8],rax
  434af4:	mov    rax,QWORD PTR [rbp-0x8]
  434af8:	mov    rdi,rax
  434afb:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  434b00:	mov    DWORD PTR [rbp-0xc],eax
  434b03:	add    QWORD PTR [rbp-0x8],0x4
  434b08:	mov    eax,DWORD PTR [rbp-0x28]
  434b0b:	movsxd rdx,eax
  434b0e:	mov    rcx,QWORD PTR [rbp-0x30]
  434b12:	mov    rax,QWORD PTR [rbp-0x18]
  434b16:	mov    rsi,rcx
  434b19:	mov    rdi,rax
  434b1c:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  434b21:	mov    rax,QWORD PTR [rbp-0x18]
  434b25:	mov    eax,DWORD PTR [rax+0x38]
  434b28:	lea    edx,[rax+0x1]
  434b2b:	mov    rax,QWORD PTR [rbp-0x18]
  434b2f:	mov    DWORD PTR [rax+0x38],edx
  434b32:	mov    rax,QWORD PTR [rbp-0x18]
  434b36:	mov    rax,QWORD PTR [rax+0x28]
  434b3a:	lea    rcx,[rax+0x1]
  434b3e:	mov    rdx,QWORD PTR [rbp-0x18]
  434b42:	mov    QWORD PTR [rdx+0x28],rcx
  434b46:	mov    BYTE PTR [rax],0x5b
  434b49:	cmp    DWORD PTR [rbp-0xc],0x0
  434b4d:	je     434c2a <flatcc_json_printer_string_vector_field@@Base+0x1b1>
  434b53:	mov    rax,QWORD PTR [rbp-0x18]
  434b57:	movzx  eax,BYTE PTR [rax+0x31]
  434b5b:	test   al,al
  434b5d:	je     434b84 <flatcc_json_printer_string_vector_field@@Base+0x10b>
  434b5f:	mov    rax,QWORD PTR [rbp-0x18]
  434b63:	mov    rax,QWORD PTR [rax+0x28]
  434b67:	lea    rcx,[rax+0x1]
  434b6b:	mov    rdx,QWORD PTR [rbp-0x18]
  434b6f:	mov    QWORD PTR [rdx+0x28],rcx
  434b73:	mov    BYTE PTR [rax],0xa
  434b76:	mov    rax,QWORD PTR [rbp-0x18]
  434b7a:	mov    rdi,rax
  434b7d:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  434b82:	jmp    434b90 <flatcc_json_printer_string_vector_field@@Base+0x117>
  434b84:	mov    rax,QWORD PTR [rbp-0x18]
  434b88:	mov    rdi,rax
  434b8b:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  434b90:	mov    rax,QWORD PTR [rbp-0x8]
  434b94:	mov    rdi,rax
  434b97:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  434b9c:	mov    rdx,rax
  434b9f:	mov    rax,QWORD PTR [rbp-0x18]
  434ba3:	mov    rsi,rdx
  434ba6:	mov    rdi,rax
  434ba9:	call   42ec9e <flatcc_json_printer_enum_flag@@Base+0x5e>
  434bae:	dec    DWORD PTR [rbp-0xc]
  434bb1:	jmp    434c2a <flatcc_json_printer_string_vector_field@@Base+0x1b1>
  434bb3:	add    QWORD PTR [rbp-0x8],0x4
  434bb8:	mov    rax,QWORD PTR [rbp-0x18]
  434bbc:	mov    rax,QWORD PTR [rax+0x28]
  434bc0:	lea    rcx,[rax+0x1]
  434bc4:	mov    rdx,QWORD PTR [rbp-0x18]
  434bc8:	mov    QWORD PTR [rdx+0x28],rcx
  434bcc:	mov    BYTE PTR [rax],0x2c
  434bcf:	mov    rax,QWORD PTR [rbp-0x18]
  434bd3:	movzx  eax,BYTE PTR [rax+0x31]
  434bd7:	test   al,al
  434bd9:	je     434c00 <flatcc_json_printer_string_vector_field@@Base+0x187>
  434bdb:	mov    rax,QWORD PTR [rbp-0x18]
  434bdf:	mov    rax,QWORD PTR [rax+0x28]
  434be3:	lea    rcx,[rax+0x1]
  434be7:	mov    rdx,QWORD PTR [rbp-0x18]
  434beb:	mov    QWORD PTR [rdx+0x28],rcx
  434bef:	mov    BYTE PTR [rax],0xa
  434bf2:	mov    rax,QWORD PTR [rbp-0x18]
  434bf6:	mov    rdi,rax
  434bf9:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  434bfe:	jmp    434c0c <flatcc_json_printer_string_vector_field@@Base+0x193>
  434c00:	mov    rax,QWORD PTR [rbp-0x18]
  434c04:	mov    rdi,rax
  434c07:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  434c0c:	mov    rax,QWORD PTR [rbp-0x8]
  434c10:	mov    rdi,rax
  434c13:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  434c18:	mov    rdx,rax
  434c1b:	mov    rax,QWORD PTR [rbp-0x18]
  434c1f:	mov    rsi,rdx
  434c22:	mov    rdi,rax
  434c25:	call   42ec9e <flatcc_json_printer_enum_flag@@Base+0x5e>
  434c2a:	mov    eax,DWORD PTR [rbp-0xc]
  434c2d:	lea    edx,[rax-0x1]
  434c30:	mov    DWORD PTR [rbp-0xc],edx
  434c33:	test   eax,eax
  434c35:	jne    434bb3 <flatcc_json_printer_string_vector_field@@Base+0x13a>
  434c3b:	mov    rax,QWORD PTR [rbp-0x18]
  434c3f:	movzx  eax,BYTE PTR [rax+0x31]
  434c43:	test   al,al
  434c45:	je     434c7b <flatcc_json_printer_string_vector_field@@Base+0x202>
  434c47:	mov    rax,QWORD PTR [rbp-0x18]
  434c4b:	mov    rax,QWORD PTR [rax+0x28]
  434c4f:	lea    rcx,[rax+0x1]
  434c53:	mov    rdx,QWORD PTR [rbp-0x18]
  434c57:	mov    QWORD PTR [rdx+0x28],rcx
  434c5b:	mov    BYTE PTR [rax],0xa
  434c5e:	mov    rax,QWORD PTR [rbp-0x18]
  434c62:	mov    eax,DWORD PTR [rax+0x38]
  434c65:	lea    edx,[rax-0x1]
  434c68:	mov    rax,QWORD PTR [rbp-0x18]
  434c6c:	mov    DWORD PTR [rax+0x38],edx
  434c6f:	mov    rax,QWORD PTR [rbp-0x18]
  434c73:	mov    rdi,rax
  434c76:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  434c7b:	mov    rax,QWORD PTR [rbp-0x18]
  434c7f:	mov    rax,QWORD PTR [rax+0x28]
  434c83:	lea    rcx,[rax+0x1]
  434c87:	mov    rdx,QWORD PTR [rbp-0x18]
  434c8b:	mov    QWORD PTR [rdx+0x28],rcx
  434c8f:	mov    BYTE PTR [rax],0x5d
  434c92:	nop
  434c93:	leave  
  434c94:	ret    

0000000000434c95 <flatcc_json_printer_table_vector_field@@Base>:
  434c95:	endbr64 
  434c99:	push   rbp
  434c9a:	mov    rbp,rsp
  434c9d:	push   rbx
  434c9e:	sub    rsp,0x48
  434ca2:	mov    QWORD PTR [rbp-0x28],rdi
  434ca6:	mov    QWORD PTR [rbp-0x30],rsi
  434caa:	mov    DWORD PTR [rbp-0x34],edx
  434cad:	mov    QWORD PTR [rbp-0x40],rcx
  434cb1:	mov    DWORD PTR [rbp-0x38],r8d
  434cb5:	mov    QWORD PTR [rbp-0x48],r9
  434cb9:	mov    edx,DWORD PTR [rbp-0x34]
  434cbc:	mov    rax,QWORD PTR [rbp-0x30]
  434cc0:	mov    esi,edx
  434cc2:	mov    rdi,rax
  434cc5:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  434cca:	mov    QWORD PTR [rbp-0x18],rax
  434cce:	cmp    QWORD PTR [rbp-0x18],0x0
  434cd3:	je     434e4b <flatcc_json_printer_table_vector_field@@Base+0x1b6>
  434cd9:	mov    rax,QWORD PTR [rbp-0x30]
  434cdd:	mov    eax,DWORD PTR [rax+0x18]
  434ce0:	lea    ecx,[rax+0x1]
  434ce3:	mov    rdx,QWORD PTR [rbp-0x30]
  434ce7:	mov    DWORD PTR [rdx+0x18],ecx
  434cea:	test   eax,eax
  434cec:	je     434d05 <flatcc_json_printer_table_vector_field@@Base+0x70>
  434cee:	mov    rax,QWORD PTR [rbp-0x28]
  434cf2:	mov    rax,QWORD PTR [rax+0x28]
  434cf6:	lea    rcx,[rax+0x1]
  434cfa:	mov    rdx,QWORD PTR [rbp-0x28]
  434cfe:	mov    QWORD PTR [rdx+0x28],rcx
  434d02:	mov    BYTE PTR [rax],0x2c
  434d05:	mov    rax,QWORD PTR [rbp-0x18]
  434d09:	mov    rdi,rax
  434d0c:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  434d11:	mov    QWORD PTR [rbp-0x18],rax
  434d15:	mov    rax,QWORD PTR [rbp-0x18]
  434d19:	mov    rdi,rax
  434d1c:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  434d21:	mov    DWORD PTR [rbp-0x1c],eax
  434d24:	add    QWORD PTR [rbp-0x18],0x4
  434d29:	mov    eax,DWORD PTR [rbp-0x38]
  434d2c:	movsxd rdx,eax
  434d2f:	mov    rcx,QWORD PTR [rbp-0x40]
  434d33:	mov    rax,QWORD PTR [rbp-0x28]
  434d37:	mov    rsi,rcx
  434d3a:	mov    rdi,rax
  434d3d:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  434d42:	mov    rax,QWORD PTR [rbp-0x28]
  434d46:	mov    eax,DWORD PTR [rax+0x38]
  434d49:	lea    edx,[rax+0x1]
  434d4c:	mov    rax,QWORD PTR [rbp-0x28]
  434d50:	mov    DWORD PTR [rax+0x38],edx
  434d53:	mov    rax,QWORD PTR [rbp-0x28]
  434d57:	mov    rax,QWORD PTR [rax+0x28]
  434d5b:	lea    rcx,[rax+0x1]
  434d5f:	mov    rdx,QWORD PTR [rbp-0x28]
  434d63:	mov    QWORD PTR [rdx+0x28],rcx
  434d67:	mov    BYTE PTR [rax],0x5b
  434d6a:	cmp    DWORD PTR [rbp-0x1c],0x0
  434d6e:	je     434de7 <flatcc_json_printer_table_vector_field@@Base+0x152>
  434d70:	mov    rax,QWORD PTR [rbp-0x30]
  434d74:	mov    ebx,DWORD PTR [rax+0x14]
  434d77:	mov    rax,QWORD PTR [rbp-0x18]
  434d7b:	mov    rdi,rax
  434d7e:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  434d83:	mov    rsi,rax
  434d86:	mov    rdx,QWORD PTR [rbp-0x48]
  434d8a:	mov    rax,QWORD PTR [rbp-0x28]
  434d8e:	mov    rcx,rdx
  434d91:	mov    edx,ebx
  434d93:	mov    rdi,rax
  434d96:	call   42ece6 <flatcc_json_printer_enum_flag@@Base+0xa6>
  434d9b:	dec    DWORD PTR [rbp-0x1c]
  434d9e:	jmp    434de7 <flatcc_json_printer_table_vector_field@@Base+0x152>
  434da0:	add    QWORD PTR [rbp-0x18],0x4
  434da5:	mov    rax,QWORD PTR [rbp-0x28]
  434da9:	mov    rax,QWORD PTR [rax+0x28]
  434dad:	lea    rcx,[rax+0x1]
  434db1:	mov    rdx,QWORD PTR [rbp-0x28]
  434db5:	mov    QWORD PTR [rdx+0x28],rcx
  434db9:	mov    BYTE PTR [rax],0x2c
  434dbc:	mov    rax,QWORD PTR [rbp-0x30]
  434dc0:	mov    ebx,DWORD PTR [rax+0x14]
  434dc3:	mov    rax,QWORD PTR [rbp-0x18]
  434dc7:	mov    rdi,rax
  434dca:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  434dcf:	mov    rsi,rax
  434dd2:	mov    rdx,QWORD PTR [rbp-0x48]
  434dd6:	mov    rax,QWORD PTR [rbp-0x28]
  434dda:	mov    rcx,rdx
  434ddd:	mov    edx,ebx
  434ddf:	mov    rdi,rax
  434de2:	call   42ece6 <flatcc_json_printer_enum_flag@@Base+0xa6>
  434de7:	mov    eax,DWORD PTR [rbp-0x1c]
  434dea:	lea    edx,[rax-0x1]
  434ded:	mov    DWORD PTR [rbp-0x1c],edx
  434df0:	test   eax,eax
  434df2:	jne    434da0 <flatcc_json_printer_table_vector_field@@Base+0x10b>
  434df4:	mov    rax,QWORD PTR [rbp-0x28]
  434df8:	movzx  eax,BYTE PTR [rax+0x31]
  434dfc:	test   al,al
  434dfe:	je     434e34 <flatcc_json_printer_table_vector_field@@Base+0x19f>
  434e00:	mov    rax,QWORD PTR [rbp-0x28]
  434e04:	mov    rax,QWORD PTR [rax+0x28]
  434e08:	lea    rcx,[rax+0x1]
  434e0c:	mov    rdx,QWORD PTR [rbp-0x28]
  434e10:	mov    QWORD PTR [rdx+0x28],rcx
  434e14:	mov    BYTE PTR [rax],0xa
  434e17:	mov    rax,QWORD PTR [rbp-0x28]
  434e1b:	mov    eax,DWORD PTR [rax+0x38]
  434e1e:	lea    edx,[rax-0x1]
  434e21:	mov    rax,QWORD PTR [rbp-0x28]
  434e25:	mov    DWORD PTR [rax+0x38],edx
  434e28:	mov    rax,QWORD PTR [rbp-0x28]
  434e2c:	mov    rdi,rax
  434e2f:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  434e34:	mov    rax,QWORD PTR [rbp-0x28]
  434e38:	mov    rax,QWORD PTR [rax+0x28]
  434e3c:	lea    rcx,[rax+0x1]
  434e40:	mov    rdx,QWORD PTR [rbp-0x28]
  434e44:	mov    QWORD PTR [rdx+0x28],rcx
  434e48:	mov    BYTE PTR [rax],0x5d
  434e4b:	nop
  434e4c:	add    rsp,0x48
  434e50:	pop    rbx
  434e51:	pop    rbp
  434e52:	ret    

0000000000434e53 <flatcc_json_printer_union_vector_field@@Base>:
  434e53:	endbr64 
  434e57:	push   rbp
  434e58:	mov    rbp,rsp
  434e5b:	sub    rsp,0xe0
  434e62:	mov    QWORD PTR [rbp-0xb8],rdi
  434e69:	mov    QWORD PTR [rbp-0xc0],rsi
  434e70:	mov    DWORD PTR [rbp-0xc4],edx
  434e76:	mov    QWORD PTR [rbp-0xd0],rcx
  434e7d:	mov    DWORD PTR [rbp-0xc8],r8d
  434e84:	mov    QWORD PTR [rbp-0xd8],r9
  434e8b:	mov    rax,QWORD PTR [rbp+0x10]
  434e8f:	mov    QWORD PTR [rbp-0xe0],rax
  434e96:	mov    rax,QWORD PTR fs:0x28
  434e9f:	mov    QWORD PTR [rbp-0x8],rax
  434ea3:	xor    eax,eax
  434ea5:	mov    eax,DWORD PTR [rbp-0xc4]
  434eab:	lea    edx,[rax-0x1]
  434eae:	mov    rax,QWORD PTR [rbp-0xc0]
  434eb5:	mov    esi,edx
  434eb7:	mov    rdi,rax
  434eba:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  434ebf:	mov    QWORD PTR [rbp-0x98],rax
  434ec6:	mov    edx,DWORD PTR [rbp-0xc4]
  434ecc:	mov    rax,QWORD PTR [rbp-0xc0]
  434ed3:	mov    esi,edx
  434ed5:	mov    rdi,rax
  434ed8:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  434edd:	mov    QWORD PTR [rbp-0xa8],rax
  434ee4:	mov    rax,QWORD PTR [rbp-0xc0]
  434eeb:	mov    eax,DWORD PTR [rax+0x14]
  434eee:	mov    DWORD PTR [rbp-0x88],eax
  434ef4:	cmp    DWORD PTR [rbp-0xc8],0x64
  434efb:	jle    434f30 <flatcc_json_printer_union_vector_field@@Base+0xdd>
  434efd:	mov    rax,QWORD PTR [rbp-0xb8]
  434f04:	mov    esi,0x1
  434f09:	mov    rdi,rax
  434f0c:	call   42ac48 <flatcc_json_parser_struct_as_root@@Base+0x433>
  434f11:	lea    rcx,[rip+0x9748]        # 43e660 <flatcc_builder_padding_base@@Base+0x36e0>
  434f18:	mov    edx,0x34b
  434f1d:	lea    rsi,[rip+0x9124]        # 43e048 <flatcc_builder_padding_base@@Base+0x30c8>
  434f24:	lea    rdi,[rip+0x9188]        # 43e0b3 <flatcc_builder_padding_base@@Base+0x3133>
  434f2b:	call   4061b0 <__assert_fail@plt>
  434f30:	mov    eax,DWORD PTR [rbp-0xc8]
  434f36:	movsxd rdx,eax
  434f39:	mov    rcx,QWORD PTR [rbp-0xd0]
  434f40:	lea    rax,[rbp-0x80]
  434f44:	mov    rsi,rcx
  434f47:	mov    rdi,rax
  434f4a:	call   406220 <memcpy@plt>
  434f4f:	mov    eax,DWORD PTR [rbp-0xc8]
  434f55:	cdqe   
  434f57:	lea    rdx,[rbp-0x80]
  434f5b:	add    rax,rdx
  434f5e:	mov    edx,0x5
  434f63:	lea    rsi,[rip+0x9164]        # 43e0ce <flatcc_builder_padding_base@@Base+0x314e>
  434f6a:	mov    rdi,rax
  434f6d:	call   406220 <memcpy@plt>
  434f72:	cmp    QWORD PTR [rbp-0xa8],0x0
  434f7a:	je     435319 <flatcc_json_printer_union_vector_field@@Base+0x4c6>
  434f80:	cmp    QWORD PTR [rbp-0x98],0x0
  434f88:	je     435319 <flatcc_json_printer_union_vector_field@@Base+0x4c6>
  434f8e:	mov    eax,DWORD PTR [rbp-0xc8]
  434f94:	lea    r8d,[rax+0x5]
  434f98:	mov    eax,DWORD PTR [rbp-0xc4]
  434f9e:	lea    edi,[rax-0x1]
  434fa1:	mov    rcx,QWORD PTR [rbp-0xd8]
  434fa8:	lea    rdx,[rbp-0x80]
  434fac:	mov    rsi,QWORD PTR [rbp-0xc0]
  434fb3:	mov    rax,QWORD PTR [rbp-0xb8]
  434fba:	mov    r9,rcx
  434fbd:	mov    rcx,rdx
  434fc0:	mov    edx,edi
  434fc2:	mov    rdi,rax
  434fc5:	call   432f6b <flatcc_json_printer_utype_enum_vector_field@@Base>
  434fca:	mov    rax,QWORD PTR [rbp-0xc0]
  434fd1:	mov    eax,DWORD PTR [rax+0x18]
  434fd4:	lea    ecx,[rax+0x1]
  434fd7:	mov    rdx,QWORD PTR [rbp-0xc0]
  434fde:	mov    DWORD PTR [rdx+0x18],ecx
  434fe1:	test   eax,eax
  434fe3:	je     435002 <flatcc_json_printer_union_vector_field@@Base+0x1af>
  434fe5:	mov    rax,QWORD PTR [rbp-0xb8]
  434fec:	mov    rax,QWORD PTR [rax+0x28]
  434ff0:	lea    rcx,[rax+0x1]
  434ff4:	mov    rdx,QWORD PTR [rbp-0xb8]
  434ffb:	mov    QWORD PTR [rdx+0x28],rcx
  434fff:	mov    BYTE PTR [rax],0x2c
  435002:	mov    rax,QWORD PTR [rbp-0xa8]
  435009:	mov    rdi,rax
  43500c:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  435011:	mov    QWORD PTR [rbp-0xa8],rax
  435018:	mov    rax,QWORD PTR [rbp-0x98]
  43501f:	mov    rdi,rax
  435022:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  435027:	mov    QWORD PTR [rbp-0x98],rax
  43502e:	mov    rax,QWORD PTR [rbp-0xa8]
  435035:	mov    rdi,rax
  435038:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  43503d:	mov    DWORD PTR [rbp-0xac],eax
  435043:	add    QWORD PTR [rbp-0xa8],0x4
  43504b:	add    QWORD PTR [rbp-0x98],0x4
  435053:	mov    rax,QWORD PTR [rbp-0x98]
  43505a:	mov    QWORD PTR [rbp-0xa0],rax
  435061:	mov    eax,DWORD PTR [rbp-0xc8]
  435067:	movsxd rdx,eax
  43506a:	mov    rcx,QWORD PTR [rbp-0xd0]
  435071:	mov    rax,QWORD PTR [rbp-0xb8]
  435078:	mov    rsi,rcx
  43507b:	mov    rdi,rax
  43507e:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  435083:	mov    rax,QWORD PTR [rbp-0xb8]
  43508a:	mov    eax,DWORD PTR [rax+0x38]
  43508d:	lea    edx,[rax+0x1]
  435090:	mov    rax,QWORD PTR [rbp-0xb8]
  435097:	mov    DWORD PTR [rax+0x38],edx
  43509a:	mov    rax,QWORD PTR [rbp-0xb8]
  4350a1:	mov    rax,QWORD PTR [rax+0x28]
  4350a5:	lea    rcx,[rax+0x1]
  4350a9:	mov    rdx,QWORD PTR [rbp-0xb8]
  4350b0:	mov    QWORD PTR [rdx+0x28],rcx
  4350b4:	mov    BYTE PTR [rax],0x5b
  4350b7:	cmp    DWORD PTR [rbp-0xac],0x0
  4350be:	je     435293 <flatcc_json_printer_union_vector_field@@Base+0x440>
  4350c4:	mov    rax,QWORD PTR [rbp-0xa0]
  4350cb:	mov    rdi,rax
  4350ce:	call   42abf6 <flatcc_json_parser_struct_as_root@@Base+0x3e1>
  4350d3:	mov    BYTE PTR [rbp-0xad],al
  4350d9:	cmp    BYTE PTR [rbp-0xad],0x0
  4350e0:	je     43511c <flatcc_json_printer_union_vector_field@@Base+0x2c9>
  4350e2:	movzx  eax,BYTE PTR [rbp-0xad]
  4350e9:	mov    BYTE PTR [rbp-0x84],al
  4350ef:	mov    rax,QWORD PTR [rbp-0xa8]
  4350f6:	mov    QWORD PTR [rbp-0x90],rax
  4350fd:	lea    rcx,[rbp-0x90]
  435104:	mov    rdx,QWORD PTR [rbp-0xb8]
  43510b:	mov    rax,QWORD PTR [rbp-0xe0]
  435112:	mov    rsi,rcx
  435115:	mov    rdi,rdx
  435118:	call   rax
  43511a:	jmp    435190 <flatcc_json_printer_union_vector_field@@Base+0x33d>
  43511c:	mov    rax,QWORD PTR [rbp-0xb8]
  435123:	mov    rax,QWORD PTR [rax+0x28]
  435127:	lea    rcx,[rax+0x1]
  43512b:	mov    rdx,QWORD PTR [rbp-0xb8]
  435132:	mov    QWORD PTR [rdx+0x28],rcx
  435136:	mov    BYTE PTR [rax],0x6e
  435139:	mov    rax,QWORD PTR [rbp-0xb8]
  435140:	mov    rax,QWORD PTR [rax+0x28]
  435144:	lea    rcx,[rax+0x1]
  435148:	mov    rdx,QWORD PTR [rbp-0xb8]
  43514f:	mov    QWORD PTR [rdx+0x28],rcx
  435153:	mov    BYTE PTR [rax],0x75
  435156:	mov    rax,QWORD PTR [rbp-0xb8]
  43515d:	mov    rax,QWORD PTR [rax+0x28]
  435161:	lea    rcx,[rax+0x1]
  435165:	mov    rdx,QWORD PTR [rbp-0xb8]
  43516c:	mov    QWORD PTR [rdx+0x28],rcx
  435170:	mov    BYTE PTR [rax],0x6c
  435173:	mov    rax,QWORD PTR [rbp-0xb8]
  43517a:	mov    rax,QWORD PTR [rax+0x28]
  43517e:	lea    rcx,[rax+0x1]
  435182:	mov    rdx,QWORD PTR [rbp-0xb8]
  435189:	mov    QWORD PTR [rdx+0x28],rcx
  43518d:	mov    BYTE PTR [rax],0x6c
  435190:	dec    DWORD PTR [rbp-0xac]
  435196:	jmp    435293 <flatcc_json_printer_union_vector_field@@Base+0x440>
  43519b:	add    QWORD PTR [rbp-0xa8],0x4
  4351a3:	inc    QWORD PTR [rbp-0xa0]
  4351aa:	mov    rax,QWORD PTR [rbp-0xa0]
  4351b1:	mov    rdi,rax
  4351b4:	call   42abf6 <flatcc_json_parser_struct_as_root@@Base+0x3e1>
  4351b9:	mov    BYTE PTR [rbp-0xad],al
  4351bf:	mov    rax,QWORD PTR [rbp-0xb8]
  4351c6:	mov    rax,QWORD PTR [rax+0x28]
  4351ca:	lea    rcx,[rax+0x1]
  4351ce:	mov    rdx,QWORD PTR [rbp-0xb8]
  4351d5:	mov    QWORD PTR [rdx+0x28],rcx
  4351d9:	mov    BYTE PTR [rax],0x2c
  4351dc:	cmp    BYTE PTR [rbp-0xad],0x0
  4351e3:	je     43521f <flatcc_json_printer_union_vector_field@@Base+0x3cc>
  4351e5:	movzx  eax,BYTE PTR [rbp-0xad]
  4351ec:	mov    BYTE PTR [rbp-0x84],al
  4351f2:	mov    rax,QWORD PTR [rbp-0xa8]
  4351f9:	mov    QWORD PTR [rbp-0x90],rax
  435200:	lea    rcx,[rbp-0x90]
  435207:	mov    rdx,QWORD PTR [rbp-0xb8]
  43520e:	mov    rax,QWORD PTR [rbp-0xe0]
  435215:	mov    rsi,rcx
  435218:	mov    rdi,rdx
  43521b:	call   rax
  43521d:	jmp    435293 <flatcc_json_printer_union_vector_field@@Base+0x440>
  43521f:	mov    rax,QWORD PTR [rbp-0xb8]
  435226:	mov    rax,QWORD PTR [rax+0x28]
  43522a:	lea    rcx,[rax+0x1]
  43522e:	mov    rdx,QWORD PTR [rbp-0xb8]
  435235:	mov    QWORD PTR [rdx+0x28],rcx
  435239:	mov    BYTE PTR [rax],0x6e
  43523c:	mov    rax,QWORD PTR [rbp-0xb8]
  435243:	mov    rax,QWORD PTR [rax+0x28]
  435247:	lea    rcx,[rax+0x1]
  43524b:	mov    rdx,QWORD PTR [rbp-0xb8]
  435252:	mov    QWORD PTR [rdx+0x28],rcx
  435256:	mov    BYTE PTR [rax],0x75
  435259:	mov    rax,QWORD PTR [rbp-0xb8]
  435260:	mov    rax,QWORD PTR [rax+0x28]
  435264:	lea    rcx,[rax+0x1]
  435268:	mov    rdx,QWORD PTR [rbp-0xb8]
  43526f:	mov    QWORD PTR [rdx+0x28],rcx
  435273:	mov    BYTE PTR [rax],0x6c
  435276:	mov    rax,QWORD PTR [rbp-0xb8]
  43527d:	mov    rax,QWORD PTR [rax+0x28]
  435281:	lea    rcx,[rax+0x1]
  435285:	mov    rdx,QWORD PTR [rbp-0xb8]
  43528c:	mov    QWORD PTR [rdx+0x28],rcx
  435290:	mov    BYTE PTR [rax],0x6c
  435293:	mov    eax,DWORD PTR [rbp-0xac]
  435299:	lea    edx,[rax-0x1]
  43529c:	mov    DWORD PTR [rbp-0xac],edx
  4352a2:	test   eax,eax
  4352a4:	jne    43519b <flatcc_json_printer_union_vector_field@@Base+0x348>
  4352aa:	mov    rax,QWORD PTR [rbp-0xb8]
  4352b1:	movzx  eax,BYTE PTR [rax+0x31]
  4352b5:	test   al,al
  4352b7:	je     4352fc <flatcc_json_printer_union_vector_field@@Base+0x4a9>
  4352b9:	mov    rax,QWORD PTR [rbp-0xb8]
  4352c0:	mov    rax,QWORD PTR [rax+0x28]
  4352c4:	lea    rcx,[rax+0x1]
  4352c8:	mov    rdx,QWORD PTR [rbp-0xb8]
  4352cf:	mov    QWORD PTR [rdx+0x28],rcx
  4352d3:	mov    BYTE PTR [rax],0xa
  4352d6:	mov    rax,QWORD PTR [rbp-0xb8]
  4352dd:	mov    eax,DWORD PTR [rax+0x38]
  4352e0:	lea    edx,[rax-0x1]
  4352e3:	mov    rax,QWORD PTR [rbp-0xb8]
  4352ea:	mov    DWORD PTR [rax+0x38],edx
  4352ed:	mov    rax,QWORD PTR [rbp-0xb8]
  4352f4:	mov    rdi,rax
  4352f7:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4352fc:	mov    rax,QWORD PTR [rbp-0xb8]
  435303:	mov    rax,QWORD PTR [rax+0x28]
  435307:	lea    rcx,[rax+0x1]
  43530b:	mov    rdx,QWORD PTR [rbp-0xb8]
  435312:	mov    QWORD PTR [rdx+0x28],rcx
  435316:	mov    BYTE PTR [rax],0x5d
  435319:	mov    rax,QWORD PTR [rbp-0x8]
  43531d:	xor    rax,QWORD PTR fs:0x28
  435326:	je     43532d <flatcc_json_printer_union_vector_field@@Base+0x4da>
  435328:	call   4061a0 <__stack_chk_fail@plt>
  43532d:	leave  
  43532e:	ret    

000000000043532f <flatcc_json_printer_table_field@@Base>:
  43532f:	endbr64 
  435333:	push   rbp
  435334:	mov    rbp,rsp
  435337:	push   rbx
  435338:	sub    rsp,0x48
  43533c:	mov    QWORD PTR [rbp-0x28],rdi
  435340:	mov    QWORD PTR [rbp-0x30],rsi
  435344:	mov    DWORD PTR [rbp-0x34],edx
  435347:	mov    QWORD PTR [rbp-0x40],rcx
  43534b:	mov    DWORD PTR [rbp-0x38],r8d
  43534f:	mov    QWORD PTR [rbp-0x48],r9
  435353:	mov    edx,DWORD PTR [rbp-0x34]
  435356:	mov    rax,QWORD PTR [rbp-0x30]
  43535a:	mov    esi,edx
  43535c:	mov    rdi,rax
  43535f:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  435364:	mov    QWORD PTR [rbp-0x18],rax
  435368:	cmp    QWORD PTR [rbp-0x18],0x0
  43536d:	je     4353df <flatcc_json_printer_table_field@@Base+0xb0>
  43536f:	mov    rax,QWORD PTR [rbp-0x30]
  435373:	mov    eax,DWORD PTR [rax+0x18]
  435376:	lea    ecx,[rax+0x1]
  435379:	mov    rdx,QWORD PTR [rbp-0x30]
  43537d:	mov    DWORD PTR [rdx+0x18],ecx
  435380:	test   eax,eax
  435382:	je     43539b <flatcc_json_printer_table_field@@Base+0x6c>
  435384:	mov    rax,QWORD PTR [rbp-0x28]
  435388:	mov    rax,QWORD PTR [rax+0x28]
  43538c:	lea    rcx,[rax+0x1]
  435390:	mov    rdx,QWORD PTR [rbp-0x28]
  435394:	mov    QWORD PTR [rdx+0x28],rcx
  435398:	mov    BYTE PTR [rax],0x2c
  43539b:	mov    eax,DWORD PTR [rbp-0x38]
  43539e:	movsxd rdx,eax
  4353a1:	mov    rcx,QWORD PTR [rbp-0x40]
  4353a5:	mov    rax,QWORD PTR [rbp-0x28]
  4353a9:	mov    rsi,rcx
  4353ac:	mov    rdi,rax
  4353af:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  4353b4:	mov    rax,QWORD PTR [rbp-0x30]
  4353b8:	mov    ebx,DWORD PTR [rax+0x14]
  4353bb:	mov    rax,QWORD PTR [rbp-0x18]
  4353bf:	mov    rdi,rax
  4353c2:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  4353c7:	mov    rsi,rax
  4353ca:	mov    rdx,QWORD PTR [rbp-0x48]
  4353ce:	mov    rax,QWORD PTR [rbp-0x28]
  4353d2:	mov    rcx,rdx
  4353d5:	mov    edx,ebx
  4353d7:	mov    rdi,rax
  4353da:	call   42ece6 <flatcc_json_printer_enum_flag@@Base+0xa6>
  4353df:	nop
  4353e0:	add    rsp,0x48
  4353e4:	pop    rbx
  4353e5:	pop    rbp
  4353e6:	ret    

00000000004353e7 <flatcc_json_printer_union_field@@Base>:
  4353e7:	endbr64 
  4353eb:	push   rbp
  4353ec:	mov    rbp,rsp
  4353ef:	sub    rsp,0x70
  4353f3:	mov    QWORD PTR [rbp-0x48],rdi
  4353f7:	mov    QWORD PTR [rbp-0x50],rsi
  4353fb:	mov    DWORD PTR [rbp-0x54],edx
  4353fe:	mov    QWORD PTR [rbp-0x60],rcx
  435402:	mov    DWORD PTR [rbp-0x58],r8d
  435406:	mov    QWORD PTR [rbp-0x68],r9
  43540a:	mov    rax,QWORD PTR [rbp+0x10]
  43540e:	mov    QWORD PTR [rbp-0x70],rax
  435412:	mov    rax,QWORD PTR fs:0x28
  43541b:	mov    QWORD PTR [rbp-0x8],rax
  43541f:	xor    eax,eax
  435421:	mov    eax,DWORD PTR [rbp-0x54]
  435424:	lea    edx,[rax-0x1]
  435427:	mov    rax,QWORD PTR [rbp-0x50]
  43542b:	mov    esi,edx
  43542d:	mov    rdi,rax
  435430:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  435435:	mov    QWORD PTR [rbp-0x30],rax
  435439:	mov    edx,DWORD PTR [rbp-0x54]
  43543c:	mov    rax,QWORD PTR [rbp-0x50]
  435440:	mov    esi,edx
  435442:	mov    rdi,rax
  435445:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  43544a:	mov    QWORD PTR [rbp-0x28],rax
  43544e:	cmp    QWORD PTR [rbp-0x28],0x0
  435453:	je     4356b6 <flatcc_json_printer_union_field@@Base+0x2cf>
  435459:	cmp    QWORD PTR [rbp-0x30],0x0
  43545e:	je     4356b6 <flatcc_json_printer_union_field@@Base+0x2cf>
  435464:	mov    rax,QWORD PTR [rbp-0x30]
  435468:	mov    rdi,rax
  43546b:	call   42abf6 <flatcc_json_parser_struct_as_root@@Base+0x3e1>
  435470:	mov    BYTE PTR [rbp-0x31],al
  435473:	mov    rax,QWORD PTR [rbp-0x50]
  435477:	mov    eax,DWORD PTR [rax+0x18]
  43547a:	lea    ecx,[rax+0x1]
  43547d:	mov    rdx,QWORD PTR [rbp-0x50]
  435481:	mov    DWORD PTR [rdx+0x18],ecx
  435484:	test   eax,eax
  435486:	je     43549f <flatcc_json_printer_union_field@@Base+0xb8>
  435488:	mov    rax,QWORD PTR [rbp-0x48]
  43548c:	mov    rax,QWORD PTR [rax+0x28]
  435490:	lea    rcx,[rax+0x1]
  435494:	mov    rdx,QWORD PTR [rbp-0x48]
  435498:	mov    QWORD PTR [rdx+0x28],rcx
  43549c:	mov    BYTE PTR [rax],0x2c
  43549f:	mov    rax,QWORD PTR [rbp-0x48]
  4354a3:	movzx  eax,BYTE PTR [rax+0x31]
  4354a7:	test   al,al
  4354a9:	je     4354d0 <flatcc_json_printer_union_field@@Base+0xe9>
  4354ab:	mov    rax,QWORD PTR [rbp-0x48]
  4354af:	mov    rax,QWORD PTR [rax+0x28]
  4354b3:	lea    rcx,[rax+0x1]
  4354b7:	mov    rdx,QWORD PTR [rbp-0x48]
  4354bb:	mov    QWORD PTR [rdx+0x28],rcx
  4354bf:	mov    BYTE PTR [rax],0xa
  4354c2:	mov    rax,QWORD PTR [rbp-0x48]
  4354c6:	mov    rdi,rax
  4354c9:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4354ce:	jmp    4354dc <flatcc_json_printer_union_field@@Base+0xf5>
  4354d0:	mov    rax,QWORD PTR [rbp-0x48]
  4354d4:	mov    rdi,rax
  4354d7:	call   42ac7c <flatcc_json_parser_struct_as_root@@Base+0x467>
  4354dc:	mov    rax,QWORD PTR [rbp-0x48]
  4354e0:	mov    rax,QWORD PTR [rax+0x28]
  4354e4:	mov    BYTE PTR [rax],0x22
  4354e7:	mov    rax,QWORD PTR [rbp-0x48]
  4354eb:	mov    rdx,QWORD PTR [rax+0x28]
  4354ef:	mov    rax,QWORD PTR [rbp-0x48]
  4354f3:	movzx  eax,BYTE PTR [rax+0x32]
  4354f7:	test   al,al
  4354f9:	sete   al
  4354fc:	movzx  eax,al
  4354ff:	add    rdx,rax
  435502:	mov    rax,QWORD PTR [rbp-0x48]
  435506:	mov    QWORD PTR [rax+0x28],rdx
  43550a:	mov    rax,QWORD PTR [rbp-0x48]
  43550e:	mov    rdx,QWORD PTR [rax+0x28]
  435512:	mov    eax,DWORD PTR [rbp-0x58]
  435515:	cdqe   
  435517:	add    rdx,rax
  43551a:	mov    rax,QWORD PTR [rbp-0x48]
  43551e:	mov    rax,QWORD PTR [rax+0x20]
  435522:	cmp    rdx,rax
  435525:	jae    43555e <flatcc_json_printer_union_field@@Base+0x177>
  435527:	mov    eax,DWORD PTR [rbp-0x58]
  43552a:	movsxd rdx,eax
  43552d:	mov    rax,QWORD PTR [rbp-0x48]
  435531:	mov    rax,QWORD PTR [rax+0x28]
  435535:	mov    rcx,QWORD PTR [rbp-0x60]
  435539:	mov    rsi,rcx
  43553c:	mov    rdi,rax
  43553f:	call   406220 <memcpy@plt>
  435544:	mov    rax,QWORD PTR [rbp-0x48]
  435548:	mov    rdx,QWORD PTR [rax+0x28]
  43554c:	mov    eax,DWORD PTR [rbp-0x58]
  43554f:	cdqe   
  435551:	add    rdx,rax
  435554:	mov    rax,QWORD PTR [rbp-0x48]
  435558:	mov    QWORD PTR [rax+0x28],rdx
  43555c:	jmp    435577 <flatcc_json_printer_union_field@@Base+0x190>
  43555e:	mov    eax,DWORD PTR [rbp-0x58]
  435561:	movsxd rdx,eax
  435564:	mov    rcx,QWORD PTR [rbp-0x60]
  435568:	mov    rax,QWORD PTR [rbp-0x48]
  43556c:	mov    rsi,rcx
  43556f:	mov    rdi,rax
  435572:	call   42df73 <flatcc_json_printer_fmt_bool@@Base+0x167>
  435577:	mov    rax,QWORD PTR [rbp-0x48]
  43557b:	mov    edx,0x5
  435580:	lea    rsi,[rip+0x8b47]        # 43e0ce <flatcc_builder_padding_base@@Base+0x314e>
  435587:	mov    rdi,rax
  43558a:	call   42df73 <flatcc_json_printer_fmt_bool@@Base+0x167>
  43558f:	mov    rax,QWORD PTR [rbp-0x48]
  435593:	mov    rax,QWORD PTR [rax+0x28]
  435597:	mov    BYTE PTR [rax],0x22
  43559a:	mov    rax,QWORD PTR [rbp-0x48]
  43559e:	mov    rdx,QWORD PTR [rax+0x28]
  4355a2:	mov    rax,QWORD PTR [rbp-0x48]
  4355a6:	movzx  eax,BYTE PTR [rax+0x32]
  4355aa:	test   al,al
  4355ac:	sete   al
  4355af:	movzx  eax,al
  4355b2:	add    rdx,rax
  4355b5:	mov    rax,QWORD PTR [rbp-0x48]
  4355b9:	mov    QWORD PTR [rax+0x28],rdx
  4355bd:	mov    rax,QWORD PTR [rbp-0x48]
  4355c1:	mov    rax,QWORD PTR [rax+0x28]
  4355c5:	lea    rcx,[rax+0x1]
  4355c9:	mov    rdx,QWORD PTR [rbp-0x48]
  4355cd:	mov    QWORD PTR [rdx+0x28],rcx
  4355d1:	mov    BYTE PTR [rax],0x3a
  4355d4:	mov    rax,QWORD PTR [rbp-0x48]
  4355d8:	mov    rax,QWORD PTR [rax+0x28]
  4355dc:	mov    BYTE PTR [rax],0x20
  4355df:	mov    rax,QWORD PTR [rbp-0x48]
  4355e3:	mov    rdx,QWORD PTR [rax+0x28]
  4355e7:	mov    rax,QWORD PTR [rbp-0x48]
  4355eb:	movzx  eax,BYTE PTR [rax+0x31]
  4355ef:	test   al,al
  4355f1:	setne  al
  4355f4:	movzx  eax,al
  4355f7:	add    rdx,rax
  4355fa:	mov    rax,QWORD PTR [rbp-0x48]
  4355fe:	mov    QWORD PTR [rax+0x28],rdx
  435602:	mov    rax,QWORD PTR [rbp-0x48]
  435606:	movzx  eax,BYTE PTR [rax+0x33]
  43560a:	test   al,al
  43560c:	je     43563e <flatcc_json_printer_union_field@@Base+0x257>
  43560e:	mov    rax,QWORD PTR [rbp-0x48]
  435612:	mov    rdx,QWORD PTR [rax+0x28]
  435616:	movzx  eax,BYTE PTR [rbp-0x31]
  43561a:	mov    rsi,rdx
  43561d:	mov    edi,eax
  43561f:	call   42ad0d <flatcc_json_parser_struct_as_root@@Base+0x4f8>
  435624:	mov    ecx,eax
  435626:	mov    rax,QWORD PTR [rbp-0x48]
  43562a:	mov    rdx,QWORD PTR [rax+0x28]
  43562e:	movsxd rax,ecx
  435631:	add    rdx,rax
  435634:	mov    rax,QWORD PTR [rbp-0x48]
  435638:	mov    QWORD PTR [rax+0x28],rdx
  43563c:	jmp    435651 <flatcc_json_printer_union_field@@Base+0x26a>
  43563e:	movzx  ecx,BYTE PTR [rbp-0x31]
  435642:	mov    rdx,QWORD PTR [rbp-0x48]
  435646:	mov    rax,QWORD PTR [rbp-0x68]
  43564a:	mov    esi,ecx
  43564c:	mov    rdi,rdx
  43564f:	call   rax
  435651:	cmp    BYTE PTR [rbp-0x31],0x0
  435655:	je     4356b7 <flatcc_json_printer_union_field@@Base+0x2d0>
  435657:	mov    rax,QWORD PTR [rbp-0x48]
  43565b:	mov    rax,QWORD PTR [rax+0x28]
  43565f:	lea    rcx,[rax+0x1]
  435663:	mov    rdx,QWORD PTR [rbp-0x48]
  435667:	mov    QWORD PTR [rdx+0x28],rcx
  43566b:	mov    BYTE PTR [rax],0x2c
  43566e:	mov    eax,DWORD PTR [rbp-0x58]
  435671:	movsxd rdx,eax
  435674:	mov    rcx,QWORD PTR [rbp-0x60]
  435678:	mov    rax,QWORD PTR [rbp-0x48]
  43567c:	mov    rsi,rcx
  43567f:	mov    rdi,rax
  435682:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  435687:	mov    rax,QWORD PTR [rbp-0x50]
  43568b:	mov    eax,DWORD PTR [rax+0x14]
  43568e:	mov    DWORD PTR [rbp-0x18],eax
  435691:	movzx  eax,BYTE PTR [rbp-0x31]
  435695:	mov    BYTE PTR [rbp-0x14],al
  435698:	mov    rax,QWORD PTR [rbp-0x28]
  43569c:	mov    QWORD PTR [rbp-0x20],rax
  4356a0:	lea    rcx,[rbp-0x20]
  4356a4:	mov    rdx,QWORD PTR [rbp-0x48]
  4356a8:	mov    rax,QWORD PTR [rbp-0x70]
  4356ac:	mov    rsi,rcx
  4356af:	mov    rdi,rdx
  4356b2:	call   rax
  4356b4:	jmp    4356b7 <flatcc_json_printer_union_field@@Base+0x2d0>
  4356b6:	nop
  4356b7:	mov    rax,QWORD PTR [rbp-0x8]
  4356bb:	xor    rax,QWORD PTR fs:0x28
  4356c4:	je     4356cb <flatcc_json_printer_union_field@@Base+0x2e4>
  4356c6:	call   4061a0 <__stack_chk_fail@plt>
  4356cb:	leave  
  4356cc:	ret    

00000000004356cd <flatcc_json_printer_union_table@@Base>:
  4356cd:	endbr64 
  4356d1:	push   rbp
  4356d2:	mov    rbp,rsp
  4356d5:	push   rbx
  4356d6:	sub    rsp,0x28
  4356da:	mov    QWORD PTR [rbp-0x18],rdi
  4356de:	mov    QWORD PTR [rbp-0x20],rsi
  4356e2:	mov    QWORD PTR [rbp-0x28],rdx
  4356e6:	mov    rax,QWORD PTR [rbp-0x20]
  4356ea:	mov    ebx,DWORD PTR [rax+0x8]
  4356ed:	mov    rax,QWORD PTR [rbp-0x20]
  4356f1:	mov    rax,QWORD PTR [rax]
  4356f4:	mov    rdi,rax
  4356f7:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  4356fc:	mov    rsi,rax
  4356ff:	mov    rdx,QWORD PTR [rbp-0x28]
  435703:	mov    rax,QWORD PTR [rbp-0x18]
  435707:	mov    rcx,rdx
  43570a:	mov    edx,ebx
  43570c:	mov    rdi,rax
  43570f:	call   42ece6 <flatcc_json_printer_enum_flag@@Base+0xa6>
  435714:	nop
  435715:	add    rsp,0x28
  435719:	pop    rbx
  43571a:	pop    rbp
  43571b:	ret    

000000000043571c <flatcc_json_printer_union_struct@@Base>:
  43571c:	endbr64 
  435720:	push   rbp
  435721:	mov    rbp,rsp
  435724:	sub    rsp,0x20
  435728:	mov    QWORD PTR [rbp-0x8],rdi
  43572c:	mov    QWORD PTR [rbp-0x10],rsi
  435730:	mov    QWORD PTR [rbp-0x18],rdx
  435734:	mov    rax,QWORD PTR [rbp-0x8]
  435738:	mov    eax,DWORD PTR [rax+0x38]
  43573b:	lea    edx,[rax+0x1]
  43573e:	mov    rax,QWORD PTR [rbp-0x8]
  435742:	mov    DWORD PTR [rax+0x38],edx
  435745:	mov    rax,QWORD PTR [rbp-0x8]
  435749:	mov    rax,QWORD PTR [rax+0x28]
  43574d:	lea    rcx,[rax+0x1]
  435751:	mov    rdx,QWORD PTR [rbp-0x8]
  435755:	mov    QWORD PTR [rdx+0x28],rcx
  435759:	mov    BYTE PTR [rax],0x7b
  43575c:	mov    rax,QWORD PTR [rbp-0x10]
  435760:	mov    rax,QWORD PTR [rax]
  435763:	mov    rdi,rax
  435766:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  43576b:	mov    rcx,rax
  43576e:	mov    rdx,QWORD PTR [rbp-0x8]
  435772:	mov    rax,QWORD PTR [rbp-0x18]
  435776:	mov    rsi,rcx
  435779:	mov    rdi,rdx
  43577c:	call   rax
  43577e:	mov    rax,QWORD PTR [rbp-0x8]
  435782:	movzx  eax,BYTE PTR [rax+0x31]
  435786:	test   al,al
  435788:	je     4357be <flatcc_json_printer_union_struct@@Base+0xa2>
  43578a:	mov    rax,QWORD PTR [rbp-0x8]
  43578e:	mov    rax,QWORD PTR [rax+0x28]
  435792:	lea    rcx,[rax+0x1]
  435796:	mov    rdx,QWORD PTR [rbp-0x8]
  43579a:	mov    QWORD PTR [rdx+0x28],rcx
  43579e:	mov    BYTE PTR [rax],0xa
  4357a1:	mov    rax,QWORD PTR [rbp-0x8]
  4357a5:	mov    eax,DWORD PTR [rax+0x38]
  4357a8:	lea    edx,[rax-0x1]
  4357ab:	mov    rax,QWORD PTR [rbp-0x8]
  4357af:	mov    DWORD PTR [rax+0x38],edx
  4357b2:	mov    rax,QWORD PTR [rbp-0x8]
  4357b6:	mov    rdi,rax
  4357b9:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4357be:	mov    rax,QWORD PTR [rbp-0x8]
  4357c2:	mov    rax,QWORD PTR [rax+0x28]
  4357c6:	lea    rcx,[rax+0x1]
  4357ca:	mov    rdx,QWORD PTR [rbp-0x8]
  4357ce:	mov    QWORD PTR [rdx+0x28],rcx
  4357d2:	mov    BYTE PTR [rax],0x7d
  4357d5:	nop
  4357d6:	leave  
  4357d7:	ret    

00000000004357d8 <flatcc_json_printer_union_string@@Base>:
  4357d8:	endbr64 
  4357dc:	push   rbp
  4357dd:	mov    rbp,rsp
  4357e0:	sub    rsp,0x10
  4357e4:	mov    QWORD PTR [rbp-0x8],rdi
  4357e8:	mov    QWORD PTR [rbp-0x10],rsi
  4357ec:	mov    rax,QWORD PTR [rbp-0x10]
  4357f0:	mov    rax,QWORD PTR [rax]
  4357f3:	mov    rdi,rax
  4357f6:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  4357fb:	mov    rdx,rax
  4357fe:	mov    rax,QWORD PTR [rbp-0x8]
  435802:	mov    rsi,rdx
  435805:	mov    rdi,rax
  435808:	call   42ec9e <flatcc_json_printer_enum_flag@@Base+0x5e>
  43580d:	nop
  43580e:	leave  
  43580f:	ret    

0000000000435810 <flatcc_json_printer_embedded_struct_field@@Base>:
  435810:	endbr64 
  435814:	push   rbp
  435815:	mov    rbp,rsp
  435818:	sub    rsp,0x30
  43581c:	mov    QWORD PTR [rbp-0x8],rdi
  435820:	mov    DWORD PTR [rbp-0xc],esi
  435823:	mov    QWORD PTR [rbp-0x18],rdx
  435827:	mov    QWORD PTR [rbp-0x20],rcx
  43582b:	mov    QWORD PTR [rbp-0x28],r8
  43582f:	mov    DWORD PTR [rbp-0x10],r9d
  435833:	cmp    DWORD PTR [rbp-0xc],0x0
  435837:	je     435850 <flatcc_json_printer_embedded_struct_field@@Base+0x40>
  435839:	mov    rax,QWORD PTR [rbp-0x8]
  43583d:	mov    rax,QWORD PTR [rax+0x28]
  435841:	lea    rcx,[rax+0x1]
  435845:	mov    rdx,QWORD PTR [rbp-0x8]
  435849:	mov    QWORD PTR [rdx+0x28],rcx
  43584d:	mov    BYTE PTR [rax],0x2c
  435850:	mov    eax,DWORD PTR [rbp-0x10]
  435853:	movsxd rdx,eax
  435856:	mov    rcx,QWORD PTR [rbp-0x28]
  43585a:	mov    rax,QWORD PTR [rbp-0x8]
  43585e:	mov    rsi,rcx
  435861:	mov    rdi,rax
  435864:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  435869:	mov    rax,QWORD PTR [rbp-0x8]
  43586d:	mov    eax,DWORD PTR [rax+0x38]
  435870:	lea    edx,[rax+0x1]
  435873:	mov    rax,QWORD PTR [rbp-0x8]
  435877:	mov    DWORD PTR [rax+0x38],edx
  43587a:	mov    rax,QWORD PTR [rbp-0x8]
  43587e:	mov    rax,QWORD PTR [rax+0x28]
  435882:	lea    rcx,[rax+0x1]
  435886:	mov    rdx,QWORD PTR [rbp-0x8]
  43588a:	mov    QWORD PTR [rdx+0x28],rcx
  43588e:	mov    BYTE PTR [rax],0x7b
  435891:	mov    rdx,QWORD PTR [rbp-0x18]
  435895:	mov    rax,QWORD PTR [rbp-0x20]
  435899:	lea    rcx,[rdx+rax*1]
  43589d:	mov    rdx,QWORD PTR [rbp-0x8]
  4358a1:	mov    rax,QWORD PTR [rbp+0x10]
  4358a5:	mov    rsi,rcx
  4358a8:	mov    rdi,rdx
  4358ab:	call   rax
  4358ad:	mov    rax,QWORD PTR [rbp-0x8]
  4358b1:	movzx  eax,BYTE PTR [rax+0x31]
  4358b5:	test   al,al
  4358b7:	je     4358ed <flatcc_json_printer_embedded_struct_field@@Base+0xdd>
  4358b9:	mov    rax,QWORD PTR [rbp-0x8]
  4358bd:	mov    rax,QWORD PTR [rax+0x28]
  4358c1:	lea    rcx,[rax+0x1]
  4358c5:	mov    rdx,QWORD PTR [rbp-0x8]
  4358c9:	mov    QWORD PTR [rdx+0x28],rcx
  4358cd:	mov    BYTE PTR [rax],0xa
  4358d0:	mov    rax,QWORD PTR [rbp-0x8]
  4358d4:	mov    eax,DWORD PTR [rax+0x38]
  4358d7:	lea    edx,[rax-0x1]
  4358da:	mov    rax,QWORD PTR [rbp-0x8]
  4358de:	mov    DWORD PTR [rax+0x38],edx
  4358e1:	mov    rax,QWORD PTR [rbp-0x8]
  4358e5:	mov    rdi,rax
  4358e8:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  4358ed:	mov    rax,QWORD PTR [rbp-0x8]
  4358f1:	mov    rax,QWORD PTR [rax+0x28]
  4358f5:	lea    rcx,[rax+0x1]
  4358f9:	mov    rdx,QWORD PTR [rbp-0x8]
  4358fd:	mov    QWORD PTR [rdx+0x28],rcx
  435901:	mov    BYTE PTR [rax],0x7d
  435904:	nop
  435905:	leave  
  435906:	ret    

0000000000435907 <flatcc_json_printer_struct_field@@Base>:
  435907:	endbr64 
  43590b:	push   rbp
  43590c:	mov    rbp,rsp
  43590f:	sub    rsp,0x40
  435913:	mov    QWORD PTR [rbp-0x18],rdi
  435917:	mov    QWORD PTR [rbp-0x20],rsi
  43591b:	mov    DWORD PTR [rbp-0x24],edx
  43591e:	mov    QWORD PTR [rbp-0x30],rcx
  435922:	mov    DWORD PTR [rbp-0x28],r8d
  435926:	mov    QWORD PTR [rbp-0x38],r9
  43592a:	mov    edx,DWORD PTR [rbp-0x24]
  43592d:	mov    rax,QWORD PTR [rbp-0x20]
  435931:	mov    esi,edx
  435933:	mov    rdi,rax
  435936:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  43593b:	mov    QWORD PTR [rbp-0x8],rax
  43593f:	cmp    QWORD PTR [rbp-0x8],0x0
  435944:	je     435a22 <flatcc_json_printer_struct_field@@Base+0x11b>
  43594a:	mov    rax,QWORD PTR [rbp-0x20]
  43594e:	mov    eax,DWORD PTR [rax+0x18]
  435951:	lea    ecx,[rax+0x1]
  435954:	mov    rdx,QWORD PTR [rbp-0x20]
  435958:	mov    DWORD PTR [rdx+0x18],ecx
  43595b:	test   eax,eax
  43595d:	je     435976 <flatcc_json_printer_struct_field@@Base+0x6f>
  43595f:	mov    rax,QWORD PTR [rbp-0x18]
  435963:	mov    rax,QWORD PTR [rax+0x28]
  435967:	lea    rcx,[rax+0x1]
  43596b:	mov    rdx,QWORD PTR [rbp-0x18]
  43596f:	mov    QWORD PTR [rdx+0x28],rcx
  435973:	mov    BYTE PTR [rax],0x2c
  435976:	mov    eax,DWORD PTR [rbp-0x28]
  435979:	movsxd rdx,eax
  43597c:	mov    rcx,QWORD PTR [rbp-0x30]
  435980:	mov    rax,QWORD PTR [rbp-0x18]
  435984:	mov    rsi,rcx
  435987:	mov    rdi,rax
  43598a:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  43598f:	mov    rax,QWORD PTR [rbp-0x18]
  435993:	mov    eax,DWORD PTR [rax+0x38]
  435996:	lea    edx,[rax+0x1]
  435999:	mov    rax,QWORD PTR [rbp-0x18]
  43599d:	mov    DWORD PTR [rax+0x38],edx
  4359a0:	mov    rax,QWORD PTR [rbp-0x18]
  4359a4:	mov    rax,QWORD PTR [rax+0x28]
  4359a8:	lea    rcx,[rax+0x1]
  4359ac:	mov    rdx,QWORD PTR [rbp-0x18]
  4359b0:	mov    QWORD PTR [rdx+0x28],rcx
  4359b4:	mov    BYTE PTR [rax],0x7b
  4359b7:	mov    rcx,QWORD PTR [rbp-0x8]
  4359bb:	mov    rdx,QWORD PTR [rbp-0x18]
  4359bf:	mov    rax,QWORD PTR [rbp-0x38]
  4359c3:	mov    rsi,rcx
  4359c6:	mov    rdi,rdx
  4359c9:	call   rax
  4359cb:	mov    rax,QWORD PTR [rbp-0x18]
  4359cf:	movzx  eax,BYTE PTR [rax+0x31]
  4359d3:	test   al,al
  4359d5:	je     435a0b <flatcc_json_printer_struct_field@@Base+0x104>
  4359d7:	mov    rax,QWORD PTR [rbp-0x18]
  4359db:	mov    rax,QWORD PTR [rax+0x28]
  4359df:	lea    rcx,[rax+0x1]
  4359e3:	mov    rdx,QWORD PTR [rbp-0x18]
  4359e7:	mov    QWORD PTR [rdx+0x28],rcx
  4359eb:	mov    BYTE PTR [rax],0xa
  4359ee:	mov    rax,QWORD PTR [rbp-0x18]
  4359f2:	mov    eax,DWORD PTR [rax+0x38]
  4359f5:	lea    edx,[rax-0x1]
  4359f8:	mov    rax,QWORD PTR [rbp-0x18]
  4359fc:	mov    DWORD PTR [rax+0x38],edx
  4359ff:	mov    rax,QWORD PTR [rbp-0x18]
  435a03:	mov    rdi,rax
  435a06:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  435a0b:	mov    rax,QWORD PTR [rbp-0x18]
  435a0f:	mov    rax,QWORD PTR [rax+0x28]
  435a13:	lea    rcx,[rax+0x1]
  435a17:	mov    rdx,QWORD PTR [rbp-0x18]
  435a1b:	mov    QWORD PTR [rdx+0x28],rcx
  435a1f:	mov    BYTE PTR [rax],0x7d
  435a22:	nop
  435a23:	leave  
  435a24:	ret    
  435a25:	endbr64 
  435a29:	push   rbp
  435a2a:	mov    rbp,rsp
  435a2d:	sub    rsp,0x30
  435a31:	mov    QWORD PTR [rbp-0x18],rdi
  435a35:	mov    QWORD PTR [rbp-0x20],rsi
  435a39:	mov    QWORD PTR [rbp-0x28],rdx
  435a3d:	mov    QWORD PTR [rbp-0x30],rcx
  435a41:	mov    rax,QWORD PTR fs:0x28
  435a4a:	mov    QWORD PTR [rbp-0x8],rax
  435a4e:	xor    eax,eax
  435a50:	mov    DWORD PTR [rbp-0x10],0x0
  435a57:	cmp    QWORD PTR [rbp-0x20],0x0
  435a5c:	je     435a65 <flatcc_json_printer_struct_field@@Base+0x15e>
  435a5e:	cmp    QWORD PTR [rbp-0x28],0x7
  435a63:	ja     435a95 <flatcc_json_printer_struct_field@@Base+0x18e>
  435a65:	mov    rax,QWORD PTR [rbp-0x18]
  435a69:	mov    esi,0x1
  435a6e:	mov    rdi,rax
  435a71:	call   42ac48 <flatcc_json_parser_struct_as_root@@Base+0x433>
  435a76:	lea    rcx,[rip+0x8c0b]        # 43e688 <flatcc_builder_padding_base@@Base+0x3708>
  435a7d:	mov    edx,0x3fb
  435a82:	lea    rsi,[rip+0x85bf]        # 43e048 <flatcc_builder_padding_base@@Base+0x30c8>
  435a89:	lea    rdi,[rip+0x8648]        # 43e0d8 <flatcc_builder_padding_base@@Base+0x3158>
  435a90:	call   4061b0 <__assert_fail@plt>
  435a95:	cmp    QWORD PTR [rbp-0x30],0x0
  435a9a:	je     435b13 <flatcc_json_printer_struct_field@@Base+0x20c>
  435a9c:	mov    rcx,QWORD PTR [rbp-0x30]
  435aa0:	lea    rax,[rbp-0x10]
  435aa4:	mov    edx,0x4
  435aa9:	mov    rsi,rcx
  435aac:	mov    rdi,rax
  435aaf:	call   406170 <strncpy@plt>
  435ab4:	mov    eax,DWORD PTR [rbp-0x10]
  435ab7:	mov    edi,eax
  435ab9:	call   42ac21 <flatcc_json_parser_struct_as_root@@Base+0x40c>
  435abe:	mov    DWORD PTR [rbp-0x10],eax
  435ac1:	mov    rax,QWORD PTR [rbp-0x20]
  435ac5:	add    rax,0x4
  435ac9:	mov    rdi,rax
  435acc:	call   42ac2d <flatcc_json_parser_struct_as_root@@Base+0x418>
  435ad1:	mov    DWORD PTR [rbp-0xc],eax
  435ad4:	mov    eax,DWORD PTR [rbp-0x10]
  435ad7:	test   eax,eax
  435ad9:	je     435b13 <flatcc_json_printer_struct_field@@Base+0x20c>
  435adb:	mov    eax,DWORD PTR [rbp-0x10]
  435ade:	cmp    DWORD PTR [rbp-0xc],eax
  435ae1:	je     435b13 <flatcc_json_printer_struct_field@@Base+0x20c>
  435ae3:	mov    rax,QWORD PTR [rbp-0x18]
  435ae7:	mov    esi,0x1
  435aec:	mov    rdi,rax
  435aef:	call   42ac48 <flatcc_json_parser_struct_as_root@@Base+0x433>
  435af4:	lea    rcx,[rip+0x8b8d]        # 43e688 <flatcc_builder_padding_base@@Base+0x3708>
  435afb:	mov    edx,0x404
  435b00:	lea    rsi,[rip+0x8541]        # 43e048 <flatcc_builder_padding_base@@Base+0x30c8>
  435b07:	lea    rdi,[rip+0x85e9]        # 43e0f7 <flatcc_builder_padding_base@@Base+0x3177>
  435b0e:	call   4061b0 <__assert_fail@plt>
  435b13:	mov    eax,0x1
  435b18:	mov    rdx,QWORD PTR [rbp-0x8]
  435b1c:	xor    rdx,QWORD PTR fs:0x28
  435b25:	je     435b2c <flatcc_json_printer_struct_field@@Base+0x225>
  435b27:	call   4061a0 <__stack_chk_fail@plt>
  435b2c:	leave  
  435b2d:	ret    

0000000000435b2e <flatcc_json_printer_struct_as_root@@Base>:
  435b2e:	endbr64 
  435b32:	push   rbp
  435b33:	mov    rbp,rsp
  435b36:	sub    rsp,0x30
  435b3a:	mov    QWORD PTR [rbp-0x8],rdi
  435b3e:	mov    QWORD PTR [rbp-0x10],rsi
  435b42:	mov    QWORD PTR [rbp-0x18],rdx
  435b46:	mov    QWORD PTR [rbp-0x20],rcx
  435b4a:	mov    QWORD PTR [rbp-0x28],r8
  435b4e:	mov    rcx,QWORD PTR [rbp-0x20]
  435b52:	mov    rdx,QWORD PTR [rbp-0x18]
  435b56:	mov    rsi,QWORD PTR [rbp-0x10]
  435b5a:	mov    rax,QWORD PTR [rbp-0x8]
  435b5e:	mov    rdi,rax
  435b61:	call   435a25 <flatcc_json_printer_struct_field@@Base+0x11e>
  435b66:	test   eax,eax
  435b68:	jne    435b74 <flatcc_json_printer_struct_as_root@@Base+0x46>
  435b6a:	mov    eax,0xffffffff
  435b6f:	jmp    435c8e <flatcc_json_printer_struct_as_root@@Base+0x160>
  435b74:	mov    rax,QWORD PTR [rbp-0x8]
  435b78:	mov    eax,DWORD PTR [rax+0x38]
  435b7b:	lea    edx,[rax+0x1]
  435b7e:	mov    rax,QWORD PTR [rbp-0x8]
  435b82:	mov    DWORD PTR [rax+0x38],edx
  435b85:	mov    rax,QWORD PTR [rbp-0x8]
  435b89:	mov    rax,QWORD PTR [rax+0x28]
  435b8d:	lea    rcx,[rax+0x1]
  435b91:	mov    rdx,QWORD PTR [rbp-0x8]
  435b95:	mov    QWORD PTR [rdx+0x28],rcx
  435b99:	mov    BYTE PTR [rax],0x7b
  435b9c:	mov    rax,QWORD PTR [rbp-0x10]
  435ba0:	mov    rdi,rax
  435ba3:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  435ba8:	mov    rcx,rax
  435bab:	mov    rdx,QWORD PTR [rbp-0x8]
  435baf:	mov    rax,QWORD PTR [rbp-0x28]
  435bb3:	mov    rsi,rcx
  435bb6:	mov    rdi,rdx
  435bb9:	call   rax
  435bbb:	mov    rax,QWORD PTR [rbp-0x8]
  435bbf:	movzx  eax,BYTE PTR [rax+0x31]
  435bc3:	test   al,al
  435bc5:	je     435bfb <flatcc_json_printer_struct_as_root@@Base+0xcd>
  435bc7:	mov    rax,QWORD PTR [rbp-0x8]
  435bcb:	mov    rax,QWORD PTR [rax+0x28]
  435bcf:	lea    rcx,[rax+0x1]
  435bd3:	mov    rdx,QWORD PTR [rbp-0x8]
  435bd7:	mov    QWORD PTR [rdx+0x28],rcx
  435bdb:	mov    BYTE PTR [rax],0xa
  435bde:	mov    rax,QWORD PTR [rbp-0x8]
  435be2:	mov    eax,DWORD PTR [rax+0x38]
  435be5:	lea    edx,[rax-0x1]
  435be8:	mov    rax,QWORD PTR [rbp-0x8]
  435bec:	mov    DWORD PTR [rax+0x38],edx
  435bef:	mov    rax,QWORD PTR [rbp-0x8]
  435bf3:	mov    rdi,rax
  435bf6:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  435bfb:	mov    rax,QWORD PTR [rbp-0x8]
  435bff:	mov    rax,QWORD PTR [rax+0x28]
  435c03:	lea    rcx,[rax+0x1]
  435c07:	mov    rdx,QWORD PTR [rbp-0x8]
  435c0b:	mov    QWORD PTR [rdx+0x28],rcx
  435c0f:	mov    BYTE PTR [rax],0x7d
  435c12:	mov    rax,QWORD PTR [rbp-0x8]
  435c16:	movzx  eax,BYTE PTR [rax+0x31]
  435c1a:	test   al,al
  435c1c:	je     435c40 <flatcc_json_printer_struct_as_root@@Base+0x112>
  435c1e:	mov    rax,QWORD PTR [rbp-0x8]
  435c22:	mov    eax,DWORD PTR [rax+0x38]
  435c25:	test   eax,eax
  435c27:	jne    435c40 <flatcc_json_printer_struct_as_root@@Base+0x112>
  435c29:	mov    rax,QWORD PTR [rbp-0x8]
  435c2d:	mov    rax,QWORD PTR [rax+0x28]
  435c31:	lea    rcx,[rax+0x1]
  435c35:	mov    rdx,QWORD PTR [rbp-0x8]
  435c39:	mov    QWORD PTR [rdx+0x28],rcx
  435c3d:	mov    BYTE PTR [rax],0xa
  435c40:	mov    rax,QWORD PTR [rbp-0x8]
  435c44:	mov    rax,QWORD PTR [rax+0x48]
  435c48:	mov    rdx,QWORD PTR [rbp-0x8]
  435c4c:	mov    esi,0x1
  435c51:	mov    rdi,rdx
  435c54:	call   rax
  435c56:	mov    rax,QWORD PTR [rbp-0x8]
  435c5a:	mov    rdi,rax
  435c5d:	call   42ac6b <flatcc_json_parser_struct_as_root@@Base+0x456>
  435c62:	test   eax,eax
  435c64:	jne    435c89 <flatcc_json_printer_struct_as_root@@Base+0x15b>
  435c66:	mov    rax,QWORD PTR [rbp-0x8]
  435c6a:	mov    rax,QWORD PTR [rax+0x18]
  435c6e:	mov    ecx,eax
  435c70:	mov    rax,QWORD PTR [rbp-0x8]
  435c74:	mov    rdx,QWORD PTR [rax+0x28]
  435c78:	mov    rax,QWORD PTR [rbp-0x8]
  435c7c:	mov    rax,QWORD PTR [rax]
  435c7f:	sub    rdx,rax
  435c82:	mov    rax,rdx
  435c85:	add    eax,ecx
  435c87:	jmp    435c8e <flatcc_json_printer_struct_as_root@@Base+0x160>
  435c89:	mov    eax,0xffffffff
  435c8e:	leave  
  435c8f:	ret    

0000000000435c90 <flatcc_json_printer_table_as_root@@Base>:
  435c90:	endbr64 
  435c94:	push   rbp
  435c95:	mov    rbp,rsp
  435c98:	sub    rsp,0x30
  435c9c:	mov    QWORD PTR [rbp-0x8],rdi
  435ca0:	mov    QWORD PTR [rbp-0x10],rsi
  435ca4:	mov    QWORD PTR [rbp-0x18],rdx
  435ca8:	mov    QWORD PTR [rbp-0x20],rcx
  435cac:	mov    QWORD PTR [rbp-0x28],r8
  435cb0:	mov    rcx,QWORD PTR [rbp-0x20]
  435cb4:	mov    rdx,QWORD PTR [rbp-0x18]
  435cb8:	mov    rsi,QWORD PTR [rbp-0x10]
  435cbc:	mov    rax,QWORD PTR [rbp-0x8]
  435cc0:	mov    rdi,rax
  435cc3:	call   435a25 <flatcc_json_printer_struct_field@@Base+0x11e>
  435cc8:	test   eax,eax
  435cca:	jne    435cd6 <flatcc_json_printer_table_as_root@@Base+0x46>
  435ccc:	mov    eax,0xffffffff
  435cd1:	jmp    435d79 <flatcc_json_printer_table_as_root@@Base+0xe9>
  435cd6:	mov    rax,QWORD PTR [rbp-0x10]
  435cda:	mov    rdi,rax
  435cdd:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  435ce2:	mov    rsi,rax
  435ce5:	mov    rdx,QWORD PTR [rbp-0x28]
  435ce9:	mov    rax,QWORD PTR [rbp-0x8]
  435ced:	mov    rcx,rdx
  435cf0:	mov    edx,0x64
  435cf5:	mov    rdi,rax
  435cf8:	call   42ece6 <flatcc_json_printer_enum_flag@@Base+0xa6>
  435cfd:	mov    rax,QWORD PTR [rbp-0x8]
  435d01:	movzx  eax,BYTE PTR [rax+0x31]
  435d05:	test   al,al
  435d07:	je     435d2b <flatcc_json_printer_table_as_root@@Base+0x9b>
  435d09:	mov    rax,QWORD PTR [rbp-0x8]
  435d0d:	mov    eax,DWORD PTR [rax+0x38]
  435d10:	test   eax,eax
  435d12:	jne    435d2b <flatcc_json_printer_table_as_root@@Base+0x9b>
  435d14:	mov    rax,QWORD PTR [rbp-0x8]
  435d18:	mov    rax,QWORD PTR [rax+0x28]
  435d1c:	lea    rcx,[rax+0x1]
  435d20:	mov    rdx,QWORD PTR [rbp-0x8]
  435d24:	mov    QWORD PTR [rdx+0x28],rcx
  435d28:	mov    BYTE PTR [rax],0xa
  435d2b:	mov    rax,QWORD PTR [rbp-0x8]
  435d2f:	mov    rax,QWORD PTR [rax+0x48]
  435d33:	mov    rdx,QWORD PTR [rbp-0x8]
  435d37:	mov    esi,0x1
  435d3c:	mov    rdi,rdx
  435d3f:	call   rax
  435d41:	mov    rax,QWORD PTR [rbp-0x8]
  435d45:	mov    rdi,rax
  435d48:	call   42ac6b <flatcc_json_parser_struct_as_root@@Base+0x456>
  435d4d:	test   eax,eax
  435d4f:	jne    435d74 <flatcc_json_printer_table_as_root@@Base+0xe4>
  435d51:	mov    rax,QWORD PTR [rbp-0x8]
  435d55:	mov    rax,QWORD PTR [rax+0x18]
  435d59:	mov    ecx,eax
  435d5b:	mov    rax,QWORD PTR [rbp-0x8]
  435d5f:	mov    rdx,QWORD PTR [rax+0x28]
  435d63:	mov    rax,QWORD PTR [rbp-0x8]
  435d67:	mov    rax,QWORD PTR [rax]
  435d6a:	sub    rdx,rax
  435d6d:	mov    rax,rdx
  435d70:	add    eax,ecx
  435d72:	jmp    435d79 <flatcc_json_printer_table_as_root@@Base+0xe9>
  435d74:	mov    eax,0xffffffff
  435d79:	leave  
  435d7a:	ret    

0000000000435d7b <flatcc_json_printer_struct_as_nested_root@@Base>:
  435d7b:	endbr64 
  435d7f:	push   rbp
  435d80:	mov    rbp,rsp
  435d83:	sub    rsp,0x40
  435d87:	mov    QWORD PTR [rbp-0x18],rdi
  435d8b:	mov    QWORD PTR [rbp-0x20],rsi
  435d8f:	mov    DWORD PTR [rbp-0x24],edx
  435d92:	mov    QWORD PTR [rbp-0x30],rcx
  435d96:	mov    DWORD PTR [rbp-0x28],r8d
  435d9a:	mov    QWORD PTR [rbp-0x38],r9
  435d9e:	mov    edx,DWORD PTR [rbp-0x24]
  435da1:	mov    rax,QWORD PTR [rbp-0x20]
  435da5:	mov    esi,edx
  435da7:	mov    rdi,rax
  435daa:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  435daf:	mov    QWORD PTR [rbp-0x8],rax
  435db3:	cmp    QWORD PTR [rbp-0x8],0x0
  435db8:	je     435eea <flatcc_json_printer_struct_as_nested_root@@Base+0x16f>
  435dbe:	mov    rax,QWORD PTR [rbp-0x8]
  435dc2:	mov    rdi,rax
  435dc5:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  435dca:	mov    edx,eax
  435dcc:	mov    rax,QWORD PTR [rbp-0x8]
  435dd0:	add    rax,rdx
  435dd3:	mov    QWORD PTR [rbp-0x8],rax
  435dd7:	mov    rax,QWORD PTR [rbp-0x8]
  435ddb:	mov    rdi,rax
  435dde:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  435de3:	mov    DWORD PTR [rbp-0xc],eax
  435de6:	mov    edx,DWORD PTR [rbp-0xc]
  435de9:	mov    rcx,QWORD PTR [rbp-0x38]
  435ded:	mov    rsi,QWORD PTR [rbp-0x8]
  435df1:	mov    rax,QWORD PTR [rbp-0x18]
  435df5:	mov    rdi,rax
  435df8:	call   435a25 <flatcc_json_printer_struct_field@@Base+0x11e>
  435dfd:	test   eax,eax
  435dff:	je     435eed <flatcc_json_printer_struct_as_nested_root@@Base+0x172>
  435e05:	mov    rax,QWORD PTR [rbp-0x20]
  435e09:	mov    eax,DWORD PTR [rax+0x18]
  435e0c:	lea    ecx,[rax+0x1]
  435e0f:	mov    rdx,QWORD PTR [rbp-0x20]
  435e13:	mov    DWORD PTR [rdx+0x18],ecx
  435e16:	test   eax,eax
  435e18:	je     435e31 <flatcc_json_printer_struct_as_nested_root@@Base+0xb6>
  435e1a:	mov    rax,QWORD PTR [rbp-0x18]
  435e1e:	mov    rax,QWORD PTR [rax+0x28]
  435e22:	lea    rcx,[rax+0x1]
  435e26:	mov    rdx,QWORD PTR [rbp-0x18]
  435e2a:	mov    QWORD PTR [rdx+0x28],rcx
  435e2e:	mov    BYTE PTR [rax],0x2c
  435e31:	mov    eax,DWORD PTR [rbp-0x28]
  435e34:	movsxd rdx,eax
  435e37:	mov    rcx,QWORD PTR [rbp-0x30]
  435e3b:	mov    rax,QWORD PTR [rbp-0x18]
  435e3f:	mov    rsi,rcx
  435e42:	mov    rdi,rax
  435e45:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  435e4a:	mov    rax,QWORD PTR [rbp-0x18]
  435e4e:	mov    eax,DWORD PTR [rax+0x38]
  435e51:	lea    edx,[rax+0x1]
  435e54:	mov    rax,QWORD PTR [rbp-0x18]
  435e58:	mov    DWORD PTR [rax+0x38],edx
  435e5b:	mov    rax,QWORD PTR [rbp-0x18]
  435e5f:	mov    rax,QWORD PTR [rax+0x28]
  435e63:	lea    rcx,[rax+0x1]
  435e67:	mov    rdx,QWORD PTR [rbp-0x18]
  435e6b:	mov    QWORD PTR [rdx+0x28],rcx
  435e6f:	mov    BYTE PTR [rax],0x7b
  435e72:	mov    rax,QWORD PTR [rbp-0x8]
  435e76:	mov    rdi,rax
  435e79:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  435e7e:	mov    rcx,rax
  435e81:	mov    rdx,QWORD PTR [rbp-0x18]
  435e85:	mov    rax,QWORD PTR [rbp+0x10]
  435e89:	mov    rsi,rcx
  435e8c:	mov    rdi,rdx
  435e8f:	call   rax
  435e91:	mov    rax,QWORD PTR [rbp-0x18]
  435e95:	movzx  eax,BYTE PTR [rax+0x31]
  435e99:	test   al,al
  435e9b:	je     435ed1 <flatcc_json_printer_struct_as_nested_root@@Base+0x156>
  435e9d:	mov    rax,QWORD PTR [rbp-0x18]
  435ea1:	mov    rax,QWORD PTR [rax+0x28]
  435ea5:	lea    rcx,[rax+0x1]
  435ea9:	mov    rdx,QWORD PTR [rbp-0x18]
  435ead:	mov    QWORD PTR [rdx+0x28],rcx
  435eb1:	mov    BYTE PTR [rax],0xa
  435eb4:	mov    rax,QWORD PTR [rbp-0x18]
  435eb8:	mov    eax,DWORD PTR [rax+0x38]
  435ebb:	lea    edx,[rax-0x1]
  435ebe:	mov    rax,QWORD PTR [rbp-0x18]
  435ec2:	mov    DWORD PTR [rax+0x38],edx
  435ec5:	mov    rax,QWORD PTR [rbp-0x18]
  435ec9:	mov    rdi,rax
  435ecc:	call   42e5bb <flatcc_json_printer_fmt_bool@@Base+0x7af>
  435ed1:	mov    rax,QWORD PTR [rbp-0x18]
  435ed5:	mov    rax,QWORD PTR [rax+0x28]
  435ed9:	lea    rcx,[rax+0x1]
  435edd:	mov    rdx,QWORD PTR [rbp-0x18]
  435ee1:	mov    QWORD PTR [rdx+0x28],rcx
  435ee5:	mov    BYTE PTR [rax],0x7d
  435ee8:	jmp    435eee <flatcc_json_printer_struct_as_nested_root@@Base+0x173>
  435eea:	nop
  435eeb:	jmp    435eee <flatcc_json_printer_struct_as_nested_root@@Base+0x173>
  435eed:	nop
  435eee:	leave  
  435eef:	ret    

0000000000435ef0 <flatcc_json_printer_table_as_nested_root@@Base>:
  435ef0:	endbr64 
  435ef4:	push   rbp
  435ef5:	mov    rbp,rsp
  435ef8:	push   rbx
  435ef9:	sub    rsp,0x48
  435efd:	mov    QWORD PTR [rbp-0x28],rdi
  435f01:	mov    QWORD PTR [rbp-0x30],rsi
  435f05:	mov    DWORD PTR [rbp-0x34],edx
  435f08:	mov    QWORD PTR [rbp-0x40],rcx
  435f0c:	mov    DWORD PTR [rbp-0x38],r8d
  435f10:	mov    QWORD PTR [rbp-0x48],r9
  435f14:	mov    edx,DWORD PTR [rbp-0x34]
  435f17:	mov    rax,QWORD PTR [rbp-0x30]
  435f1b:	mov    esi,edx
  435f1d:	mov    rdi,rax
  435f20:	call   42dd46 <flatcc_json_printer_error_string@@Base+0xa0>
  435f25:	mov    QWORD PTR [rbp-0x18],rax
  435f29:	cmp    QWORD PTR [rbp-0x18],0x0
  435f2e:	je     435feb <flatcc_json_printer_table_as_nested_root@@Base+0xfb>
  435f34:	mov    rax,QWORD PTR [rbp-0x18]
  435f38:	mov    rdi,rax
  435f3b:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  435f40:	mov    edx,eax
  435f42:	mov    rax,QWORD PTR [rbp-0x18]
  435f46:	add    rax,rdx
  435f49:	mov    QWORD PTR [rbp-0x18],rax
  435f4d:	mov    rax,QWORD PTR [rbp-0x18]
  435f51:	mov    rdi,rax
  435f54:	call   42ab76 <flatcc_json_parser_struct_as_root@@Base+0x361>
  435f59:	mov    DWORD PTR [rbp-0x1c],eax
  435f5c:	add    QWORD PTR [rbp-0x18],0x4
  435f61:	mov    edx,DWORD PTR [rbp-0x1c]
  435f64:	mov    rcx,QWORD PTR [rbp-0x48]
  435f68:	mov    rsi,QWORD PTR [rbp-0x18]
  435f6c:	mov    rax,QWORD PTR [rbp-0x28]
  435f70:	mov    rdi,rax
  435f73:	call   435a25 <flatcc_json_printer_struct_field@@Base+0x11e>
  435f78:	test   eax,eax
  435f7a:	je     435fee <flatcc_json_printer_table_as_nested_root@@Base+0xfe>
  435f7c:	mov    rax,QWORD PTR [rbp-0x30]
  435f80:	mov    eax,DWORD PTR [rax+0x18]
  435f83:	lea    ecx,[rax+0x1]
  435f86:	mov    rdx,QWORD PTR [rbp-0x30]
  435f8a:	mov    DWORD PTR [rdx+0x18],ecx
  435f8d:	test   eax,eax
  435f8f:	je     435fa8 <flatcc_json_printer_table_as_nested_root@@Base+0xb8>
  435f91:	mov    rax,QWORD PTR [rbp-0x28]
  435f95:	mov    rax,QWORD PTR [rax+0x28]
  435f99:	lea    rcx,[rax+0x1]
  435f9d:	mov    rdx,QWORD PTR [rbp-0x28]
  435fa1:	mov    QWORD PTR [rdx+0x28],rcx
  435fa5:	mov    BYTE PTR [rax],0x2c
  435fa8:	mov    eax,DWORD PTR [rbp-0x38]
  435fab:	movsxd rdx,eax
  435fae:	mov    rcx,QWORD PTR [rbp-0x40]
  435fb2:	mov    rax,QWORD PTR [rbp-0x28]
  435fb6:	mov    rsi,rcx
  435fb9:	mov    rdi,rax
  435fbc:	call   42e843 <flatcc_json_printer_get_level@@Base+0xef>
  435fc1:	mov    rax,QWORD PTR [rbp-0x30]
  435fc5:	mov    ebx,DWORD PTR [rax+0x14]
  435fc8:	mov    rax,QWORD PTR [rbp-0x18]
  435fcc:	mov    rdi,rax
  435fcf:	call   42dd00 <flatcc_json_printer_error_string@@Base+0x5a>
  435fd4:	mov    rsi,rax
  435fd7:	mov    rax,QWORD PTR [rbp-0x28]
  435fdb:	mov    rcx,QWORD PTR [rbp+0x10]
  435fdf:	mov    edx,ebx
  435fe1:	mov    rdi,rax
  435fe4:	call   42ece6 <flatcc_json_printer_enum_flag@@Base+0xa6>
  435fe9:	jmp    435fef <flatcc_json_printer_table_as_nested_root@@Base+0xff>
  435feb:	nop
  435fec:	jmp    435fef <flatcc_json_printer_table_as_nested_root@@Base+0xff>
  435fee:	nop
  435fef:	add    rsp,0x48
  435ff3:	pop    rbx
  435ff4:	pop    rbp
  435ff5:	ret    
  435ff6:	endbr64 
  435ffa:	push   rbp
  435ffb:	mov    rbp,rsp
  435ffe:	sub    rsp,0x20
  436002:	mov    QWORD PTR [rbp-0x18],rdi
  436006:	mov    DWORD PTR [rbp-0x1c],esi
  436009:	cmp    DWORD PTR [rbp-0x1c],0x0
  43600d:	jne    4360c9 <flatcc_json_printer_table_as_nested_root@@Base+0x1d9>
  436013:	mov    rax,QWORD PTR [rbp-0x18]
  436017:	mov    rdx,QWORD PTR [rax+0x28]
  43601b:	mov    rax,QWORD PTR [rbp-0x18]
  43601f:	mov    rax,QWORD PTR [rax+0x20]
  436023:	cmp    rdx,rax
  436026:	jb     4360c9 <flatcc_json_printer_table_as_nested_root@@Base+0x1d9>
  43602c:	mov    rax,QWORD PTR [rbp-0x18]
  436030:	mov    rdx,QWORD PTR [rax+0x28]
  436034:	mov    rax,QWORD PTR [rbp-0x18]
  436038:	mov    rax,QWORD PTR [rax+0x20]
  43603c:	sub    rdx,rax
  43603f:	mov    rax,rdx
  436042:	mov    QWORD PTR [rbp-0x10],rax
  436046:	mov    rax,QWORD PTR [rbp-0x18]
  43604a:	mov    rdx,QWORD PTR [rax+0x40]
  43604e:	mov    rax,QWORD PTR [rbp-0x18]
  436052:	mov    rsi,QWORD PTR [rax+0x10]
  436056:	mov    rax,QWORD PTR [rbp-0x18]
  43605a:	mov    rax,QWORD PTR [rax]
  43605d:	mov    rcx,rdx
  436060:	mov    edx,0x1
  436065:	mov    rdi,rax
  436068:	call   406270 <fwrite@plt>
  43606d:	mov    rax,QWORD PTR [rbp-0x18]
  436071:	mov    rdx,QWORD PTR [rax]
  436074:	mov    rax,QWORD PTR [rbp-0x18]
  436078:	mov    rax,QWORD PTR [rax+0x10]
  43607c:	lea    rcx,[rdx+rax*1]
  436080:	mov    rax,QWORD PTR [rbp-0x18]
  436084:	mov    rax,QWORD PTR [rax]
  436087:	mov    rdx,QWORD PTR [rbp-0x10]
  43608b:	mov    rsi,rcx
  43608e:	mov    rdi,rax
  436091:	call   406220 <memcpy@plt>
  436096:	mov    rax,QWORD PTR [rbp-0x18]
  43609a:	mov    rdx,QWORD PTR [rax]
  43609d:	mov    rax,QWORD PTR [rbp-0x10]
  4360a1:	add    rdx,rax
  4360a4:	mov    rax,QWORD PTR [rbp-0x18]
  4360a8:	mov    QWORD PTR [rax+0x28],rdx
  4360ac:	mov    rax,QWORD PTR [rbp-0x18]
  4360b0:	mov    rdx,QWORD PTR [rax+0x18]
  4360b4:	mov    rax,QWORD PTR [rbp-0x18]
  4360b8:	mov    rax,QWORD PTR [rax+0x10]
  4360bc:	add    rdx,rax
  4360bf:	mov    rax,QWORD PTR [rbp-0x18]
  4360c3:	mov    QWORD PTR [rax+0x18],rdx
  4360c7:	jmp    43612b <flatcc_json_printer_table_as_nested_root@@Base+0x23b>
  4360c9:	mov    rax,QWORD PTR [rbp-0x18]
  4360cd:	mov    rdx,QWORD PTR [rax+0x28]
  4360d1:	mov    rax,QWORD PTR [rbp-0x18]
  4360d5:	mov    rax,QWORD PTR [rax]
  4360d8:	sub    rdx,rax
  4360db:	mov    rax,rdx
  4360de:	mov    QWORD PTR [rbp-0x8],rax
  4360e2:	mov    rax,QWORD PTR [rbp-0x18]
  4360e6:	mov    rdx,QWORD PTR [rax+0x40]
  4360ea:	mov    rax,QWORD PTR [rbp-0x18]
  4360ee:	mov    rax,QWORD PTR [rax]
  4360f1:	mov    rsi,QWORD PTR [rbp-0x8]
  4360f5:	mov    rcx,rdx
  4360f8:	mov    edx,0x1
  4360fd:	mov    rdi,rax
  436100:	call   406270 <fwrite@plt>
  436105:	mov    rax,QWORD PTR [rbp-0x18]
  436109:	mov    rdx,QWORD PTR [rax]
  43610c:	mov    rax,QWORD PTR [rbp-0x18]
  436110:	mov    QWORD PTR [rax+0x28],rdx
  436114:	mov    rax,QWORD PTR [rbp-0x18]
  436118:	mov    rdx,QWORD PTR [rax+0x18]
  43611c:	mov    rax,QWORD PTR [rbp-0x8]
  436120:	add    rdx,rax
  436123:	mov    rax,QWORD PTR [rbp-0x18]
  436127:	mov    QWORD PTR [rax+0x18],rdx
  43612b:	mov    rax,QWORD PTR [rbp-0x18]
  43612f:	mov    rax,QWORD PTR [rax+0x28]
  436133:	mov    BYTE PTR [rax],0x0
  436136:	nop
  436137:	leave  
  436138:	ret    

0000000000436139 <flatcc_json_printer_init@@Base>:
  436139:	endbr64 
  43613d:	push   rbp
  43613e:	mov    rbp,rsp
  436141:	sub    rsp,0x10
  436145:	mov    QWORD PTR [rbp-0x8],rdi
  436149:	mov    QWORD PTR [rbp-0x10],rsi
  43614d:	mov    rax,QWORD PTR [rbp-0x8]
  436151:	mov    edx,0x50
  436156:	mov    esi,0x0
  43615b:	mov    rdi,rax
  43615e:	call   4061c0 <memset@plt>
  436163:	cmp    QWORD PTR [rbp-0x10],0x0
  436168:	je     436170 <flatcc_json_printer_init@@Base+0x37>
  43616a:	mov    rax,QWORD PTR [rbp-0x10]
  43616e:	jmp    43617a <flatcc_json_printer_init@@Base+0x41>
  436170:	mov    rax,QWORD PTR [rip+0x10e59]        # 446fd0 <stdout@GLIBC_2.2.5>
  436177:	mov    rax,QWORD PTR [rax]
  43617a:	mov    rdx,QWORD PTR [rbp-0x8]
  43617e:	mov    QWORD PTR [rdx+0x40],rax
  436182:	mov    rax,QWORD PTR [rbp-0x8]
  436186:	lea    rdx,[rip+0xfffffffffffffe69]        # 435ff6 <flatcc_json_printer_table_as_nested_root@@Base+0x106>
  43618d:	mov    QWORD PTR [rax+0x48],rdx
  436191:	mov    edi,0x4040
  436196:	call   406230 <malloc@plt>
  43619b:	mov    rdx,rax
  43619e:	mov    rax,QWORD PTR [rbp-0x8]
  4361a2:	mov    QWORD PTR [rax],rdx
  4361a5:	mov    rax,QWORD PTR [rbp-0x8]
  4361a9:	mov    rax,QWORD PTR [rax]
  4361ac:	test   rax,rax
  4361af:	jne    4361bb <flatcc_json_printer_init@@Base+0x82>
  4361b1:	mov    eax,0xffffffff
  4361b6:	jmp    436241 <flatcc_json_printer_init@@Base+0x108>
  4361bb:	mov    rax,QWORD PTR [rbp-0x8]
  4361bf:	mov    BYTE PTR [rax+0x30],0x1
  4361c3:	mov    rax,QWORD PTR [rbp-0x8]
  4361c7:	mov    QWORD PTR [rax+0x8],0x4040
  4361cf:	mov    rax,QWORD PTR [rbp-0x8]
  4361d3:	mov    QWORD PTR [rax+0x10],0x4000
  4361db:	mov    rax,QWORD PTR [rbp-0x8]
  4361df:	mov    rdx,QWORD PTR [rax]
  4361e2:	mov    rax,QWORD PTR [rbp-0x8]
  4361e6:	mov    QWORD PTR [rax+0x28],rdx
  4361ea:	mov    rax,QWORD PTR [rbp-0x8]
  4361ee:	mov    rdx,QWORD PTR [rax]
  4361f1:	mov    rax,QWORD PTR [rbp-0x8]
  4361f5:	mov    rax,QWORD PTR [rax+0x10]
  4361f9:	add    rdx,rax
  4361fc:	mov    rax,QWORD PTR [rbp-0x8]
  436200:	mov    QWORD PTR [rax+0x20],rdx
  436204:	mov    rax,QWORD PTR [rbp-0x8]
  436208:	mov    rax,QWORD PTR [rax+0x10]
  43620c:	lea    rdx,[rax+0x40]
  436210:	mov    rax,QWORD PTR [rbp-0x8]
  436214:	mov    rax,QWORD PTR [rax+0x8]
  436218:	cmp    rdx,rax
  43621b:	jbe    43623c <flatcc_json_printer_init@@Base+0x103>
  43621d:	lea    rcx,[rip+0x847c]        # 43e6a0 <flatcc_builder_padding_base@@Base+0x3720>
  436224:	mov    edx,0x47b
  436229:	lea    rsi,[rip+0x7e18]        # 43e048 <flatcc_builder_padding_base@@Base+0x30c8>
  436230:	lea    rdi,[rip+0x7ee1]        # 43e118 <flatcc_builder_padding_base@@Base+0x3198>
  436237:	call   4061b0 <__assert_fail@plt>
  43623c:	mov    eax,0x0
  436241:	leave  
  436242:	ret    
  436243:	endbr64 
  436247:	push   rbp
  436248:	mov    rbp,rsp
  43624b:	sub    rsp,0x10
  43624f:	mov    QWORD PTR [rbp-0x8],rdi
  436253:	mov    DWORD PTR [rbp-0xc],esi
  436256:	mov    rax,QWORD PTR [rbp-0x8]
  43625a:	mov    rdx,QWORD PTR [rax+0x28]
  43625e:	mov    rax,QWORD PTR [rbp-0x8]
  436262:	mov    rax,QWORD PTR [rax+0x20]
  436266:	cmp    rdx,rax
  436269:	jb     4362b3 <flatcc_json_printer_init@@Base+0x17a>
  43626b:	mov    rax,QWORD PTR [rbp-0x8]
  43626f:	mov    esi,0x3
  436274:	mov    rdi,rax
  436277:	call   42ac48 <flatcc_json_parser_struct_as_root@@Base+0x433>
  43627c:	mov    rax,QWORD PTR [rbp-0x8]
  436280:	mov    rdx,QWORD PTR [rax+0x18]
  436284:	mov    rax,QWORD PTR [rbp-0x8]
  436288:	mov    rcx,QWORD PTR [rax+0x28]
  43628c:	mov    rax,QWORD PTR [rbp-0x8]
  436290:	mov    rax,QWORD PTR [rax]
  436293:	sub    rcx,rax
  436296:	mov    rax,rcx
  436299:	add    rdx,rax
  43629c:	mov    rax,QWORD PTR [rbp-0x8]
  4362a0:	mov    QWORD PTR [rax+0x18],rdx
  4362a4:	mov    rax,QWORD PTR [rbp-0x8]
  4362a8:	mov    rdx,QWORD PTR [rax]
  4362ab:	mov    rax,QWORD PTR [rbp-0x8]
  4362af:	mov    QWORD PTR [rax+0x28],rdx
  4362b3:	mov    rax,QWORD PTR [rbp-0x8]
  4362b7:	mov    rax,QWORD PTR [rax+0x28]
  4362bb:	mov    BYTE PTR [rax],0x0
  4362be:	nop
  4362bf:	leave  
  4362c0:	ret    

00000000004362c1 <flatcc_json_printer_init_buffer@@Base>:
  4362c1:	endbr64 
  4362c5:	push   rbp
  4362c6:	mov    rbp,rsp
  4362c9:	sub    rsp,0x20
  4362cd:	mov    QWORD PTR [rbp-0x8],rdi
  4362d1:	mov    QWORD PTR [rbp-0x10],rsi
  4362d5:	mov    QWORD PTR [rbp-0x18],rdx
  4362d9:	cmp    QWORD PTR [rbp-0x18],0x3f
  4362de:	ja     4362ff <flatcc_json_printer_init_buffer@@Base+0x3e>
  4362e0:	lea    rcx,[rip+0x83d9]        # 43e6c0 <flatcc_builder_padding_base@@Base+0x3740>
  4362e7:	mov    edx,0x48d
  4362ec:	lea    rsi,[rip+0x7d55]        # 43e048 <flatcc_builder_padding_base@@Base+0x30c8>
  4362f3:	lea    rdi,[rip+0x7e5e]        # 43e158 <flatcc_builder_padding_base@@Base+0x31d8>
  4362fa:	call   4061b0 <__assert_fail@plt>
  4362ff:	cmp    QWORD PTR [rbp-0x18],0x3f
  436304:	ja     43630d <flatcc_json_printer_init_buffer@@Base+0x4c>
  436306:	mov    eax,0xffffffff
  43630b:	jmp    43638b <flatcc_json_printer_init_buffer@@Base+0xca>
  43630d:	mov    rax,QWORD PTR [rbp-0x8]
  436311:	mov    edx,0x50
  436316:	mov    esi,0x0
  43631b:	mov    rdi,rax
  43631e:	call   4061c0 <memset@plt>
  436323:	mov    rax,QWORD PTR [rbp-0x8]
  436327:	mov    rdx,QWORD PTR [rbp-0x10]
  43632b:	mov    QWORD PTR [rax],rdx
  43632e:	mov    rax,QWORD PTR [rbp-0x8]
  436332:	mov    rdx,QWORD PTR [rbp-0x18]
  436336:	mov    QWORD PTR [rax+0x8],rdx
  43633a:	mov    rax,QWORD PTR [rbp-0x8]
  43633e:	mov    rax,QWORD PTR [rax+0x8]
  436342:	lea    rdx,[rax-0x40]
  436346:	mov    rax,QWORD PTR [rbp-0x8]
  43634a:	mov    QWORD PTR [rax+0x10],rdx
  43634e:	mov    rax,QWORD PTR [rbp-0x8]
  436352:	mov    rdx,QWORD PTR [rax]
  436355:	mov    rax,QWORD PTR [rbp-0x8]
  436359:	mov    QWORD PTR [rax+0x28],rdx
  43635d:	mov    rax,QWORD PTR [rbp-0x8]
  436361:	mov    rdx,QWORD PTR [rax]
  436364:	mov    rax,QWORD PTR [rbp-0x8]
  436368:	mov    rax,QWORD PTR [rax+0x10]
  43636c:	add    rdx,rax
  43636f:	mov    rax,QWORD PTR [rbp-0x8]
  436373:	mov    QWORD PTR [rax+0x20],rdx
  436377:	mov    rax,QWORD PTR [rbp-0x8]
  43637b:	lea    rdx,[rip+0xfffffffffffffec1]        # 436243 <flatcc_json_printer_init@@Base+0x10a>
  436382:	mov    QWORD PTR [rax+0x48],rdx
  436386:	mov    eax,0x0
  43638b:	leave  
  43638c:	ret    
  43638d:	endbr64 
  436391:	push   rbp
  436392:	mov    rbp,rsp
  436395:	sub    rsp,0x20
  436399:	mov    QWORD PTR [rbp-0x18],rdi
  43639d:	mov    DWORD PTR [rbp-0x1c],esi
  4363a0:	mov    rax,QWORD PTR [rbp-0x18]
  4363a4:	mov    rdx,QWORD PTR [rax+0x28]
  4363a8:	mov    rax,QWORD PTR [rbp-0x18]
  4363ac:	mov    rax,QWORD PTR [rax]
  4363af:	sub    rdx,rax
  4363b2:	mov    rax,rdx
  4363b5:	mov    QWORD PTR [rbp-0x10],rax
  4363b9:	mov    rax,QWORD PTR [rbp-0x18]
  4363bd:	mov    rax,QWORD PTR [rax+0x28]
  4363c1:	mov    BYTE PTR [rax],0x0
  4363c4:	mov    rax,QWORD PTR [rbp-0x18]
  4363c8:	mov    rdx,QWORD PTR [rax+0x28]
  4363cc:	mov    rax,QWORD PTR [rbp-0x18]
  4363d0:	mov    rax,QWORD PTR [rax+0x20]
  4363d4:	cmp    rdx,rax
  4363d7:	jb     4364a9 <flatcc_json_printer_init_buffer@@Base+0x1e8>
  4363dd:	mov    rax,QWORD PTR [rbp-0x18]
  4363e1:	mov    rax,QWORD PTR [rax+0x8]
  4363e5:	lea    rdx,[rax+rax*1]
  4363e9:	mov    rax,QWORD PTR [rbp-0x18]
  4363ed:	mov    rax,QWORD PTR [rax]
  4363f0:	mov    rsi,rdx
  4363f3:	mov    rdi,rax
  4363f6:	call   406240 <realloc@plt>
  4363fb:	mov    QWORD PTR [rbp-0x8],rax
  4363ff:	cmp    QWORD PTR [rbp-0x8],0x0
  436404:	jne    43643f <flatcc_json_printer_init_buffer@@Base+0x17e>
  436406:	mov    rax,QWORD PTR [rbp-0x18]
  43640a:	mov    esi,0x3
  43640f:	mov    rdi,rax
  436412:	call   42ac48 <flatcc_json_parser_struct_as_root@@Base+0x433>
  436417:	mov    rax,QWORD PTR [rbp-0x18]
  43641b:	mov    rdx,QWORD PTR [rax+0x18]
  43641f:	mov    rax,QWORD PTR [rbp-0x10]
  436423:	add    rdx,rax
  436426:	mov    rax,QWORD PTR [rbp-0x18]
  43642a:	mov    QWORD PTR [rax+0x18],rdx
  43642e:	mov    rax,QWORD PTR [rbp-0x18]
  436432:	mov    rdx,QWORD PTR [rax]
  436435:	mov    rax,QWORD PTR [rbp-0x18]
  436439:	mov    QWORD PTR [rax+0x28],rdx
  43643d:	jmp    43649c <flatcc_json_printer_init_buffer@@Base+0x1db>
  43643f:	mov    rax,QWORD PTR [rbp-0x18]
  436443:	mov    rax,QWORD PTR [rax+0x8]
  436447:	lea    rdx,[rax+rax*1]
  43644b:	mov    rax,QWORD PTR [rbp-0x18]
  43644f:	mov    QWORD PTR [rax+0x8],rdx
  436453:	mov    rax,QWORD PTR [rbp-0x18]
  436457:	mov    rax,QWORD PTR [rax+0x8]
  43645b:	lea    rdx,[rax-0x40]
  43645f:	mov    rax,QWORD PTR [rbp-0x18]
  436463:	mov    QWORD PTR [rax+0x10],rdx
  436467:	mov    rax,QWORD PTR [rbp-0x18]
  43646b:	mov    rdx,QWORD PTR [rbp-0x8]
  43646f:	mov    QWORD PTR [rax],rdx
  436472:	mov    rdx,QWORD PTR [rbp-0x8]
  436476:	mov    rax,QWORD PTR [rbp-0x10]
  43647a:	add    rdx,rax
  43647d:	mov    rax,QWORD PTR [rbp-0x18]
  436481:	mov    QWORD PTR [rax+0x28],rdx
  436485:	mov    rax,QWORD PTR [rbp-0x18]
  436489:	mov    rdx,QWORD PTR [rax+0x10]
  43648d:	mov    rax,QWORD PTR [rbp-0x8]
  436491:	add    rdx,rax
  436494:	mov    rax,QWORD PTR [rbp-0x18]
  436498:	mov    QWORD PTR [rax+0x20],rdx
  43649c:	mov    rax,QWORD PTR [rbp-0x18]
  4364a0:	mov    rax,QWORD PTR [rax+0x28]
  4364a4:	mov    BYTE PTR [rax],0x0
  4364a7:	jmp    4364aa <flatcc_json_printer_init_buffer@@Base+0x1e9>
  4364a9:	nop
  4364aa:	leave  
  4364ab:	ret    

00000000004364ac <flatcc_json_printer_init_dynamic_buffer@@Base>:
  4364ac:	endbr64 
  4364b0:	push   rbp
  4364b1:	mov    rbp,rsp
  4364b4:	sub    rsp,0x10
  4364b8:	mov    QWORD PTR [rbp-0x8],rdi
  4364bc:	mov    QWORD PTR [rbp-0x10],rsi
  4364c0:	cmp    QWORD PTR [rbp-0x10],0x0
  4364c5:	jne    4364cf <flatcc_json_printer_init_dynamic_buffer@@Base+0x23>
  4364c7:	mov    QWORD PTR [rbp-0x10],0x1000
  4364cf:	cmp    QWORD PTR [rbp-0x10],0x3f
  4364d4:	ja     4364de <flatcc_json_printer_init_dynamic_buffer@@Base+0x32>
  4364d6:	mov    QWORD PTR [rbp-0x10],0x40
  4364de:	mov    rax,QWORD PTR [rbp-0x8]
  4364e2:	mov    edx,0x50
  4364e7:	mov    esi,0x0
  4364ec:	mov    rdi,rax
  4364ef:	call   4061c0 <memset@plt>
  4364f4:	mov    rax,QWORD PTR [rbp-0x10]
  4364f8:	mov    rdi,rax
  4364fb:	call   406230 <malloc@plt>
  436500:	mov    rdx,rax
  436503:	mov    rax,QWORD PTR [rbp-0x8]
  436507:	mov    QWORD PTR [rax],rdx
  43650a:	mov    rax,QWORD PTR [rbp-0x8]
  43650e:	mov    BYTE PTR [rax+0x30],0x1
  436512:	mov    rax,QWORD PTR [rbp-0x8]
  436516:	mov    rdx,QWORD PTR [rbp-0x10]
  43651a:	mov    QWORD PTR [rax+0x8],rdx
  43651e:	mov    rax,QWORD PTR [rbp-0x8]
  436522:	mov    rax,QWORD PTR [rax+0x8]
  436526:	lea    rdx,[rax-0x40]
  43652a:	mov    rax,QWORD PTR [rbp-0x8]
  43652e:	mov    QWORD PTR [rax+0x10],rdx
  436532:	mov    rax,QWORD PTR [rbp-0x8]
  436536:	mov    rdx,QWORD PTR [rax]
  436539:	mov    rax,QWORD PTR [rbp-0x8]
  43653d:	mov    QWORD PTR [rax+0x28],rdx
  436541:	mov    rax,QWORD PTR [rbp-0x8]
  436545:	mov    rdx,QWORD PTR [rax]
  436548:	mov    rax,QWORD PTR [rbp-0x8]
  43654c:	mov    rax,QWORD PTR [rax+0x10]
  436550:	add    rdx,rax
  436553:	mov    rax,QWORD PTR [rbp-0x8]
  436557:	mov    QWORD PTR [rax+0x20],rdx
  43655b:	mov    rax,QWORD PTR [rbp-0x8]
  43655f:	lea    rdx,[rip+0xfffffffffffffe27]        # 43638d <flatcc_json_printer_init_buffer@@Base+0xcc>
  436566:	mov    QWORD PTR [rax+0x48],rdx
  43656a:	mov    rax,QWORD PTR [rbp-0x8]
  43656e:	mov    rax,QWORD PTR [rax]
  436571:	test   rax,rax
  436574:	jne    43658e <flatcc_json_printer_init_dynamic_buffer@@Base+0xe2>
  436576:	mov    rax,QWORD PTR [rbp-0x8]
  43657a:	mov    esi,0x3
  43657f:	mov    rdi,rax
  436582:	call   42ac48 <flatcc_json_parser_struct_as_root@@Base+0x433>
  436587:	mov    eax,0xffffffff
  43658c:	jmp    436593 <flatcc_json_printer_init_dynamic_buffer@@Base+0xe7>
  43658e:	mov    eax,0x0
  436593:	leave  
  436594:	ret    

0000000000436595 <flatcc_json_printer_get_buffer@@Base>:
  436595:	endbr64 
  436599:	push   rbp
  43659a:	mov    rbp,rsp
  43659d:	sub    rsp,0x10
  4365a1:	mov    QWORD PTR [rbp-0x8],rdi
  4365a5:	mov    QWORD PTR [rbp-0x10],rsi
  4365a9:	mov    rax,QWORD PTR [rbp-0x8]
  4365ad:	mov    rax,QWORD PTR [rax+0x48]
  4365b1:	mov    rdx,QWORD PTR [rbp-0x8]
  4365b5:	mov    esi,0x0
  4365ba:	mov    rdi,rdx
  4365bd:	call   rax
  4365bf:	cmp    QWORD PTR [rbp-0x10],0x0
  4365c4:	je     4365e5 <flatcc_json_printer_get_buffer@@Base+0x50>
  4365c6:	mov    rax,QWORD PTR [rbp-0x8]
  4365ca:	mov    rdx,QWORD PTR [rax+0x28]
  4365ce:	mov    rax,QWORD PTR [rbp-0x8]
  4365d2:	mov    rax,QWORD PTR [rax]
  4365d5:	sub    rdx,rax
  4365d8:	mov    rax,rdx
  4365db:	mov    rdx,rax
  4365de:	mov    rax,QWORD PTR [rbp-0x10]
  4365e2:	mov    QWORD PTR [rax],rdx
  4365e5:	mov    rax,QWORD PTR [rbp-0x8]
  4365e9:	mov    rax,QWORD PTR [rax]
  4365ec:	leave  
  4365ed:	ret    

00000000004365ee <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
  4365ee:	endbr64 
  4365f2:	push   rbp
  4365f3:	mov    rbp,rsp
  4365f6:	sub    rsp,0x20
  4365fa:	mov    QWORD PTR [rbp-0x18],rdi
  4365fe:	mov    QWORD PTR [rbp-0x20],rsi
  436602:	mov    rdx,QWORD PTR [rbp-0x20]
  436606:	mov    rax,QWORD PTR [rbp-0x18]
  43660a:	mov    rsi,rdx
  43660d:	mov    rdi,rax
  436610:	call   436595 <flatcc_json_printer_get_buffer@@Base>
  436615:	mov    QWORD PTR [rbp-0x8],rax
  436619:	mov    rax,QWORD PTR [rbp-0x18]
  43661d:	mov    edx,0x50
  436622:	mov    esi,0x0
  436627:	mov    rdi,rax
  43662a:	call   4061c0 <memset@plt>
  43662f:	mov    rax,QWORD PTR [rbp-0x8]
  436633:	leave  
  436634:	ret    

0000000000436635 <flatcc_json_printer_clear@@Base>:
  436635:	endbr64 
  436639:	push   rbp
  43663a:	mov    rbp,rsp
  43663d:	sub    rsp,0x10
  436641:	mov    QWORD PTR [rbp-0x8],rdi
  436645:	mov    rax,QWORD PTR [rbp-0x8]
  436649:	movzx  eax,BYTE PTR [rax+0x30]
  43664d:	test   al,al
  43664f:	je     43666c <flatcc_json_printer_clear@@Base+0x37>
  436651:	mov    rax,QWORD PTR [rbp-0x8]
  436655:	mov    rax,QWORD PTR [rax]
  436658:	test   rax,rax
  43665b:	je     43666c <flatcc_json_printer_clear@@Base+0x37>
  43665d:	mov    rax,QWORD PTR [rbp-0x8]
  436661:	mov    rax,QWORD PTR [rax]
  436664:	mov    rdi,rax
  436667:	call   406160 <free@plt>
  43666c:	mov    rax,QWORD PTR [rbp-0x8]
  436670:	mov    edx,0x50
  436675:	mov    esi,0x0
  43667a:	mov    rdi,rax
  43667d:	call   4061c0 <memset@plt>
  436682:	nop
  436683:	leave  
  436684:	ret    
  436685:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43668f:	nop

0000000000436690 <__libc_csu_init@@Base>:
  436690:	endbr64 
  436694:	push   r15
  436696:	lea    r15,[rip+0x106f3]        # 446d90 <flatcc_builder_padding_base@@Base+0xbe10>
  43669d:	push   r14
  43669f:	mov    r14,rdx
  4366a2:	push   r13
  4366a4:	mov    r13,rsi
  4366a7:	push   r12
  4366a9:	mov    r12d,edi
  4366ac:	push   rbp
  4366ad:	lea    rbp,[rip+0x106e4]        # 446d98 <flatcc_builder_padding_base@@Base+0xbe18>
  4366b4:	push   rbx
  4366b5:	sub    rbp,r15
  4366b8:	sub    rsp,0x8
  4366bc:	call   406000 <free@plt-0x160>
  4366c1:	sar    rbp,0x3
  4366c5:	je     4366e6 <__libc_csu_init@@Base+0x56>
  4366c7:	xor    ebx,ebx
  4366c9:	nop    DWORD PTR [rax+0x0]
  4366d0:	mov    rdx,r14
  4366d3:	mov    rsi,r13
  4366d6:	mov    edi,r12d
  4366d9:	call   QWORD PTR [r15+rbx*8]
  4366dd:	add    rbx,0x1
  4366e1:	cmp    rbp,rbx
  4366e4:	jne    4366d0 <__libc_csu_init@@Base+0x40>
  4366e6:	add    rsp,0x8
  4366ea:	pop    rbx
  4366eb:	pop    rbp
  4366ec:	pop    r12
  4366ee:	pop    r13
  4366f0:	pop    r14
  4366f2:	pop    r15
  4366f4:	ret    
  4366f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000436700 <__libc_csu_fini@@Base>:
  436700:	endbr64 
  436704:	ret    

Disassembly of section .fini:

0000000000436708 <.fini>:
  436708:	endbr64 
  43670c:	sub    rsp,0x8
  436710:	add    rsp,0x8
  436714:	ret    
