
../repos/tbeu-matio-3dd266d/tools/.libs/matdump:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x5fd9]        # 407fe8 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <Mat_VarGetNumberOfFields@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <Mat_VarGetNumberOfFields@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x5fe2]        # 408008 <getopt_long_only@@Base+0x3258>
  402026:	jmp    QWORD PTR [rip+0x5fe4]        # 408010 <getopt_long_only@@Base+0x3260>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <Mat_VarGetNumberOfFields@plt>:
  402030:	jmp    QWORD PTR [rip+0x5fe2]        # 408018 <Mat_VarGetNumberOfFields>
  402036:	push   0x0
  40203b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402040 <getenv@plt>:
  402040:	jmp    QWORD PTR [rip+0x5fda]        # 408020 <getenv@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402050 <Mat_SetVerbose@plt>:
  402050:	jmp    QWORD PTR [rip+0x5fd2]        # 408028 <Mat_SetVerbose>
  402056:	push   0x2
  40205b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402060 <free@plt>:
  402060:	jmp    QWORD PTR [rip+0x5fca]        # 408030 <free@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402070 <Mat_LogClose@plt>:
  402070:	jmp    QWORD PTR [rip+0x5fc2]        # 408038 <Mat_LogClose>
  402076:	push   0x4
  40207b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402080 <putchar@plt>:
  402080:	jmp    QWORD PTR [rip+0x5fba]        # 408040 <putchar@GLIBC_2.2.5>
  402086:	push   0x5
  40208b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402090 <Mat_VarReadNext@plt>:
  402090:	jmp    QWORD PTR [rip+0x5fb2]        # 408048 <Mat_VarReadNext>
  402096:	push   0x6
  40209b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020a0 <Mat_Open@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x5faa]        # 408050 <Mat_Open>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020b0 <strncmp@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x5fa2]        # 408058 <strncmp@GLIBC_2.2.5>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020c0 <Mat_VarGetCells@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x5f9a]        # 408060 <Mat_VarGetCells>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020d0 <puts@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x5f92]        # 408068 <puts@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020e0 <Mat_VarGetCell@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x5f8a]        # 408070 <Mat_VarGetCell>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004020f0 <Mat_VarCreate@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x5f82]        # 408078 <Mat_VarCreate>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402100 <Mat_Warning@plt>:
  402100:	jmp    QWORD PTR [rip+0x5f7a]        # 408080 <Mat_Warning>
  402106:	push   0xd
  40210b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402110 <Mat_VarReadDataLinear@plt>:
  402110:	jmp    QWORD PTR [rip+0x5f72]        # 408088 <Mat_VarReadDataLinear>
  402116:	push   0xe
  40211b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402120 <Mat_Message@plt>:
  402120:	jmp    QWORD PTR [rip+0x5f6a]        # 408090 <Mat_Message>
  402126:	push   0xf
  40212b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402130 <strlen@plt>:
  402130:	jmp    QWORD PTR [rip+0x5f62]        # 408098 <strlen@GLIBC_2.2.5>
  402136:	push   0x10
  40213b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402140 <Mat_VarReadData@plt>:
  402140:	jmp    QWORD PTR [rip+0x5f5a]        # 4080a0 <Mat_VarReadData>
  402146:	push   0x11
  40214b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402150 <__stack_chk_fail@plt>:
  402150:	jmp    QWORD PTR [rip+0x5f52]        # 4080a8 <__stack_chk_fail@GLIBC_2.4>
  402156:	push   0x12
  40215b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402160 <strchr@plt>:
  402160:	jmp    QWORD PTR [rip+0x5f4a]        # 4080b0 <strchr@GLIBC_2.2.5>
  402166:	push   0x13
  40216b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402170 <warnx@plt>:
  402170:	jmp    QWORD PTR [rip+0x5f42]        # 4080b8 <warnx@GLIBC_2.2.5>
  402176:	push   0x14
  40217b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402180 <Mat_VarReadDataAll@plt>:
  402180:	jmp    QWORD PTR [rip+0x5f3a]        # 4080c0 <Mat_VarReadDataAll>
  402186:	push   0x15
  40218b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402190 <Mat_VarReadInfo@plt>:
  402190:	jmp    QWORD PTR [rip+0x5f32]        # 4080c8 <Mat_VarReadInfo>
  402196:	push   0x16
  40219b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021a0 <Mat_VarGetStructFieldnames@plt>:
  4021a0:	jmp    QWORD PTR [rip+0x5f2a]        # 4080d0 <Mat_VarGetStructFieldnames>
  4021a6:	push   0x17
  4021ab:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021b0 <strcmp@plt>:
  4021b0:	jmp    QWORD PTR [rip+0x5f22]        # 4080d8 <strcmp@GLIBC_2.2.5>
  4021b6:	push   0x18
  4021bb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021c0 <log10@plt>:
  4021c0:	jmp    QWORD PTR [rip+0x5f1a]        # 4080e0 <log10@GLIBC_2.2.5>
  4021c6:	push   0x19
  4021cb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021d0 <strtol@plt>:
  4021d0:	jmp    QWORD PTR [rip+0x5f12]        # 4080e8 <strtol@GLIBC_2.2.5>
  4021d6:	push   0x1a
  4021db:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021e0 <Mat_VarFree@plt>:
  4021e0:	jmp    QWORD PTR [rip+0x5f0a]        # 4080f0 <Mat_VarFree>
  4021e6:	push   0x1b
  4021eb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004021f0 <Mat_SizeOf@plt>:
  4021f0:	jmp    QWORD PTR [rip+0x5f02]        # 4080f8 <Mat_SizeOf>
  4021f6:	push   0x1c
  4021fb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402200 <Mat_GetLibraryVersion@plt>:
  402200:	jmp    QWORD PTR [rip+0x5efa]        # 408100 <Mat_GetLibraryVersion>
  402206:	push   0x1d
  40220b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402210 <malloc@plt>:
  402210:	jmp    QWORD PTR [rip+0x5ef2]        # 408108 <malloc@GLIBC_2.2.5>
  402216:	push   0x1e
  40221b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402220 <Mat_VarPrint@plt>:
  402220:	jmp    QWORD PTR [rip+0x5eea]        # 408110 <Mat_VarPrint>
  402226:	push   0x1f
  40222b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402230 <Mat_Close@plt>:
  402230:	jmp    QWORD PTR [rip+0x5ee2]        # 408118 <Mat_Close>
  402236:	push   0x20
  40223b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402240 <Mat_Critical@plt>:
  402240:	jmp    QWORD PTR [rip+0x5eda]        # 408120 <Mat_Critical>
  402246:	push   0x21
  40224b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402250 <__printf_chk@plt>:
  402250:	jmp    QWORD PTR [rip+0x5ed2]        # 408128 <__printf_chk@GLIBC_2.3.4>
  402256:	push   0x22
  40225b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402260 <Mat_LogInitFunc@plt>:
  402260:	jmp    QWORD PTR [rip+0x5eca]        # 408130 <Mat_LogInitFunc>
  402266:	push   0x23
  40226b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402270 <Mat_VerbMessage@plt>:
  402270:	jmp    QWORD PTR [rip+0x5ec2]        # 408138 <Mat_VerbMessage>
  402276:	push   0x24
  40227b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402280 <Mat_VarGetCellsLinear@plt>:
  402280:	jmp    QWORD PTR [rip+0x5eba]        # 408140 <Mat_VarGetCellsLinear>
  402286:	push   0x25
  40228b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402290 <Mat_Help@plt>:
  402290:	jmp    QWORD PTR [rip+0x5eb2]        # 408148 <Mat_Help>
  402296:	push   0x26
  40229b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022a0 <floor@plt>:
  4022a0:	jmp    QWORD PTR [rip+0x5eaa]        # 408150 <floor@GLIBC_2.2.5>
  4022a6:	push   0x27
  4022ab:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022b0 <Mat_VarGetStructFieldByName@plt>:
  4022b0:	jmp    QWORD PTR [rip+0x5ea2]        # 408158 <Mat_VarGetStructFieldByName>
  4022b6:	push   0x28
  4022bb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022c0 <Mat_SizeOfClass@plt>:
  4022c0:	jmp    QWORD PTR [rip+0x5e9a]        # 408160 <Mat_SizeOfClass>
  4022c6:	push   0x29
  4022cb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022d0 <exit@plt>:
  4022d0:	jmp    QWORD PTR [rip+0x5e92]        # 408168 <exit@GLIBC_2.2.5>
  4022d6:	push   0x2a
  4022db:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022e0 <fwrite@plt>:
  4022e0:	jmp    QWORD PTR [rip+0x5e8a]        # 408170 <fwrite@GLIBC_2.2.5>
  4022e6:	push   0x2b
  4022eb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

00000000004022f0 <__fprintf_chk@plt>:
  4022f0:	jmp    QWORD PTR [rip+0x5e82]        # 408178 <__fprintf_chk@GLIBC_2.3.4>
  4022f6:	push   0x2c
  4022fb:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402300 <Mat_VarGetSize@plt>:
  402300:	jmp    QWORD PTR [rip+0x5e7a]        # 408180 <Mat_VarGetSize>
  402306:	push   0x2d
  40230b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402310 <ceil@plt>:
  402310:	jmp    QWORD PTR [rip+0x5e72]        # 408188 <ceil@GLIBC_2.2.5>
  402316:	push   0x2e
  40231b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402320 <Mat_VarDuplicate@plt>:
  402320:	jmp    QWORD PTR [rip+0x5e6a]        # 408190 <Mat_VarDuplicate>
  402326:	push   0x2f
  40232b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402330 <__sprintf_chk@plt>:
  402330:	jmp    QWORD PTR [rip+0x5e62]        # 408198 <__sprintf_chk@GLIBC_2.3.4>
  402336:	push   0x30
  40233b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

0000000000402340 <Mat_VarReadNextInfo@plt>:
  402340:	jmp    QWORD PTR [rip+0x5e5a]        # 4081a0 <Mat_VarReadNextInfo>
  402346:	push   0x31
  40234b:	jmp    402020 <Mat_VarGetNumberOfFields@plt-0x10>

Disassembly of section .text:

0000000000402350 <getopt@@Base-0x2a40>:
  402350:	push   r15
  402352:	push   r14
  402354:	push   r13
  402356:	push   r12
  402358:	mov    r13d,edi
  40235b:	push   rbp
  40235c:	push   rbx
  40235d:	mov    rbp,rsi
  402360:	sub    rsp,0x68
  402364:	lea    rdi,[rsp+0x4c]
  402369:	mov    rax,QWORD PTR fs:0x28
  402372:	mov    QWORD PTR [rsp+0x58],rax
  402377:	xor    eax,eax
  402379:	lea    rdx,[rdi+0x8]
  40237d:	lea    rsi,[rdi+0x4]
  402381:	call   402200 <Mat_GetLibraryVersion@plt>
  402386:	mov    ebx,DWORD PTR [rsp+0x4c]
  40238a:	cmp    ebx,0x1
  40238d:	jne    402396 <Mat_VarReadNextInfo@plt+0x56>
  40238f:	cmp    DWORD PTR [rsp+0x50],0x5
  402394:	je     4023e0 <Mat_VarReadNextInfo@plt+0xa0>
  402396:	mov    rax,QWORD PTR [rip+0x5c53]        # 407ff0 <getopt_long_only@@Base+0x3240>
  40239d:	lea    rdi,[rip+0x3094]        # 405438 <getopt_long_only@@Base+0x688>
  4023a4:	mov    edx,0x37
  4023a9:	mov    esi,0x1
  4023ae:	mov    ebx,0x1
  4023b3:	mov    rcx,QWORD PTR [rax]
  4023b6:	call   4022e0 <fwrite@plt>
  4023bb:	mov    rcx,QWORD PTR [rsp+0x58]
  4023c0:	xor    rcx,QWORD PTR fs:0x28
  4023c9:	mov    eax,ebx
  4023cb:	jne    402d98 <Mat_VarReadNextInfo@plt+0xa58>
  4023d1:	add    rsp,0x68
  4023d5:	pop    rbx
  4023d6:	pop    rbp
  4023d7:	pop    r12
  4023d9:	pop    r13
  4023db:	pop    r14
  4023dd:	pop    r15
  4023df:	ret    
  4023e0:	cmp    DWORD PTR [rsp+0x54],0xf
  4023e5:	jne    402396 <Mat_VarReadNextInfo@plt+0x56>
  4023e7:	lea    rsi,[rip+0xb62]        # 402f50 <Mat_VarReadNextInfo@plt+0xc10>
  4023ee:	lea    rdi,[rip+0x2d7b]        # 405170 <getopt_long_only@@Base+0x3c0>
  4023f5:	lea    r12,[rip+0xd04]        # 403100 <Mat_VarReadNextInfo@plt+0xdc0>
  4023fc:	call   402260 <Mat_LogInitFunc@plt>
  402401:	lea    rax,[rip+0x1038]        # 403440 <Mat_VarReadNextInfo@plt+0x1100>
  402408:	mov    QWORD PTR [rip+0x5f81],rax        # 408390 <opterr@@Base+0x1c>
  40240f:	lea    rcx,[rip+0x5e6a]        # 408280 <getopt_long_only@@Base+0x34d0>
  402416:	lea    rdx,[rip+0x2d8d]        # 4051aa <getopt_long_only@@Base+0x3fa>
  40241d:	xor    r8d,r8d
  402420:	mov    rsi,rbp
  402423:	mov    edi,r13d
  402426:	call   404da0 <getopt_long@@Base>
  40242b:	cmp    eax,0xffffffff
  40242e:	je     402538 <Mat_VarReadNextInfo@plt+0x1f8>
  402434:	cmp    eax,0x64
  402437:	je     40249b <Mat_VarReadNextInfo@plt+0x15b>
  402439:	jle    402469 <Mat_VarReadNextInfo@plt+0x129>
  40243b:	cmp    eax,0x68
  40243e:	je     402513 <Mat_VarReadNextInfo@plt+0x1d3>
  402444:	cmp    eax,0x76
  402447:	je     402502 <Mat_VarReadNextInfo@plt+0x1c2>
  40244d:	cmp    eax,0x66
  402450:	je     4024d0 <Mat_VarReadNextInfo@plt+0x190>
  402452:	lea    rsi,[rip+0x2d3a]        # 405193 <getopt_long_only@@Base+0x3e3>
  402459:	mov    edx,eax
  40245b:	mov    edi,0x1
  402460:	xor    eax,eax
  402462:	call   402250 <__printf_chk@plt>
  402467:	jmp    40240f <Mat_VarReadNextInfo@plt+0xcf>
  402469:	cmp    eax,0x48
  40246c:	je     4024bd <Mat_VarReadNextInfo@plt+0x17d>
  40246e:	cmp    eax,0x56
  402471:	jne    402452 <Mat_VarReadNextInfo@plt+0x112>
  402473:	lea    rcx,[rip+0x2d12]        # 40518c <getopt_long_only@@Base+0x3dc>
  40247a:	lea    rdx,[rip+0x2cef]        # 405170 <getopt_long_only@@Base+0x3c0>
  402481:	lea    rsi,[rip+0x3048]        # 4054d0 <getopt_long_only@@Base+0x720>
  402488:	mov    edi,0x1
  40248d:	xor    eax,eax
  40248f:	call   402250 <__printf_chk@plt>
  402494:	xor    edi,edi
  402496:	call   4022d0 <exit@plt>
  40249b:	lea    rsi,[rip+0x2cd6]        # 405178 <getopt_long_only@@Base+0x3c8>
  4024a2:	mov    edi,0x1
  4024a7:	xor    eax,eax
  4024a9:	mov    DWORD PTR [rip+0x5ee9],0x1        # 40839c <opterr@@Base+0x28>
  4024b3:	call   402270 <Mat_VerbMessage@plt>
  4024b8:	jmp    40240f <Mat_VarReadNextInfo@plt+0xcf>
  4024bd:	lea    rdi,[rip+0x5d1c]        # 4081e0 <getopt_long_only@@Base+0x3430>
  4024c4:	call   402290 <Mat_Help@plt>
  4024c9:	xor    edi,edi
  4024cb:	call   4022d0 <exit@plt>
  4024d0:	mov    rax,0x4083a8
  4024d7:	mov    r14,QWORD PTR [rax]
  4024da:	test   r14,r14
  4024dd:	je     402c89 <Mat_VarReadNextInfo@plt+0x949>
  4024e3:	lea    rsi,[rip+0x2c9d]        # 405187 <getopt_long_only@@Base+0x3d7>
  4024ea:	mov    rdi,r14
  4024ed:	call   4021b0 <strcmp@plt>
  4024f2:	test   eax,eax
  4024f4:	jne    402522 <Mat_VarReadNextInfo@plt+0x1e2>
  4024f6:	mov    QWORD PTR [rip+0x5e93],r12        # 408390 <opterr@@Base+0x1c>
  4024fd:	jmp    40240f <Mat_VarReadNextInfo@plt+0xcf>
  402502:	xor    esi,esi
  402504:	mov    edi,0x1
  402509:	call   402050 <Mat_SetVerbose@plt>
  40250e:	jmp    40240f <Mat_VarReadNextInfo@plt+0xcf>
  402513:	mov    DWORD PTR [rip+0x5e7b],0x1        # 408398 <opterr@@Base+0x24>
  40251d:	jmp    40240f <Mat_VarReadNextInfo@plt+0xcf>
  402522:	lea    rdi,[rip+0x2f47]        # 405470 <getopt_long_only@@Base+0x6c0>
  402529:	mov    rsi,r14
  40252c:	xor    eax,eax
  40252e:	call   402100 <Mat_Warning@plt>
  402533:	jmp    40240f <Mat_VarReadNextInfo@plt+0xcf>
  402538:	mov    r12,0x408370
  40253f:	mov    edx,r13d
  402542:	movsxd rax,DWORD PTR [r12]
  402546:	sub    edx,eax
  402548:	test   edx,edx
  40254a:	jle    402d1b <Mat_VarReadNextInfo@plt+0x9db>
  402550:	mov    rdi,QWORD PTR [rbp+rax*8+0x0]
  402555:	xor    esi,esi
  402557:	call   4020a0 <Mat_Open@plt>
  40255c:	test   rax,rax
  40255f:	mov    QWORD PTR [rsp+0x28],rax
  402564:	je     402e10 <Mat_VarReadNextInfo@plt+0xad0>
  40256a:	mov    eax,DWORD PTR [r12]
  40256e:	add    eax,0x1
  402571:	cmp    r13d,eax
  402574:	mov    DWORD PTR [r12],eax
  402578:	jle    4029f1 <Mat_VarReadNextInfo@plt+0x6b1>
  40257e:	cdqe   
  402580:	mov    DWORD PTR [rsp+0x3c],r13d
  402585:	mov    QWORD PTR [rsp+0x30],rbp
  40258a:	mov    QWORD PTR [rsp+0x18],rax
  40258f:	jmp    4025c2 <Mat_VarReadNextInfo@plt+0x282>
  402591:	mov    rsi,rax
  402594:	mov    rdi,r14
  402597:	call   402180 <Mat_VarReadDataAll@plt>
  40259c:	mov    rdi,r15
  40259f:	call   QWORD PTR [rip+0x5deb]        # 408390 <opterr@@Base+0x1c>
  4025a5:	mov    rdi,r15
  4025a8:	call   4021e0 <Mat_VarFree@plt>
  4025ad:	add    QWORD PTR [rsp+0x18],0x1
  4025b3:	mov    rax,QWORD PTR [rsp+0x18]
  4025b8:	cmp    DWORD PTR [rsp+0x3c],eax
  4025bc:	jle    402a25 <Mat_VarReadNextInfo@plt+0x6e5>
  4025c2:	mov    r15,QWORD PTR [rsp+0x30]
  4025c7:	mov    r14,QWORD PTR [rsp+0x18]
  4025cc:	mov    rbp,QWORD PTR [r15+r14*8]
  4025d0:	mov    rdi,rbp
  4025d3:	call   403b10 <Mat_VarReadNextInfo@plt+0x17d0>
  4025d8:	cmp    rbp,rax
  4025db:	mov    r12,rax
  4025de:	je     402a9d <Mat_VarReadNextInfo@plt+0x75d>
  4025e4:	movzx  ebx,BYTE PTR [rax]
  4025e7:	mov    BYTE PTR [rax],0x0
  4025ea:	mov    rbp,QWORD PTR [r15+r14*8]
  4025ee:	mov    r14,QWORD PTR [rsp+0x28]
  4025f3:	mov    rsi,rbp
  4025f6:	mov    rdi,r14
  4025f9:	call   402190 <Mat_VarReadInfo@plt>
  4025fe:	test   rax,rax
  402601:	mov    r15,rax
  402604:	je     402cb6 <Mat_VarReadNextInfo@plt+0x976>
  40260a:	cmp    DWORD PTR [rip+0x5d8b],0x0        # 40839c <opterr@@Base+0x28>
  402611:	je     40259c <Mat_VarReadNextInfo@plt+0x25c>
  402613:	test   bl,bl
  402615:	je     402591 <Mat_VarReadNextInfo@plt+0x251>
  40261b:	mov    BYTE PTR [r12],bl
  40261f:	mov    rdi,r12
  402622:	call   403b10 <Mat_VarReadNextInfo@plt+0x17d0>
  402627:	mov    QWORD PTR [rsp+0x10],rax
  40262c:	movzx  eax,BYTE PTR [rax]
  40262f:	mov    BYTE PTR [rsp],al
  402632:	cmp    BYTE PTR [rsp],0x28
  402636:	je     402918 <Mat_VarReadNextInfo@plt+0x5d8>
  40263c:	cmp    BYTE PTR [rsp],0x2e
  402640:	je     402846 <Mat_VarReadNextInfo@plt+0x506>
  402646:	cmp    BYTE PTR [rsp],0x7b
  40264a:	jne    402632 <Mat_VarReadNextInfo@plt+0x2f2>
  40264c:	cmp    DWORD PTR [r15+0x14],0x1
  402651:	jne    402da9 <Mat_VarReadNextInfo@plt+0xa69>
  402657:	mov    rax,QWORD PTR [rsp+0x10]
  40265c:	mov    esi,0x7d
  402661:	lea    rbx,[rax+0x1]
  402665:	mov    rdi,rbx
  402668:	call   402160 <strchr@plt>
  40266d:	lea    rdi,[rax+0x1]
  402671:	mov    r12,rax
  402674:	call   403b10 <Mat_VarReadNextInfo@plt+0x17d0>
  402679:	mov    rcx,rax
  40267c:	mov    QWORD PTR [rsp+0x20],rax
  402681:	movzx  eax,BYTE PTR [rax]
  402684:	mov    DWORD PTR [rsp+0x38],0x1
  40268c:	test   al,al
  40268e:	je     40269e <Mat_VarReadNextInfo@plt+0x35e>
  402690:	mov    BYTE PTR [rcx],0x0
  402693:	mov    BYTE PTR [rsp],al
  402696:	mov    DWORD PTR [rsp+0x38],0x0
  40269e:	mov    rdi,rbx
  4026a1:	mov    r10d,0x1
  4026a7:	jmp    4026b9 <Mat_VarReadNextInfo@plt+0x379>
  4026a9:	add    rdi,0x1
  4026ad:	xor    eax,eax
  4026af:	cmp    BYTE PTR [rdi-0x1],0x2c
  4026b3:	sete   al
  4026b6:	add    r10d,eax
  4026b9:	cmp    r12,rdi
  4026bc:	jne    4026a9 <Mat_VarReadNextInfo@plt+0x369>
  4026be:	movsxd rbx,r10d
  4026c1:	mov    DWORD PTR [rsp+0x8],r10d
  4026c6:	shl    rbx,0x2
  4026ca:	mov    rdi,rbx
  4026cd:	call   402210 <malloc@plt>
  4026d2:	mov    rdi,rbx
  4026d5:	mov    rbp,rax
  4026d8:	call   402210 <malloc@plt>
  4026dd:	mov    rdi,rbx
  4026e0:	mov    r14,rax
  4026e3:	call   402210 <malloc@plt>
  4026e8:	mov    r10d,DWORD PTR [rsp+0x8]
  4026ed:	mov    rbx,rax
  4026f0:	xor    eax,eax
  4026f2:	mov    DWORD PTR [rbp+rax*4+0x0],0x0
  4026fa:	mov    DWORD PTR [r14+rax*4],0x1
  402702:	mov    DWORD PTR [rbx+rax*4],0x1
  402709:	add    rax,0x1
  40270d:	cmp    r10d,eax
  402710:	jg     4026f2 <Mat_VarReadNextInfo@plt+0x3b2>
  402712:	mov    rdi,QWORD PTR [rsp+0x10]
  402717:	mov    r8,rbx
  40271a:	mov    rcx,r14
  40271d:	mov    rdx,rbp
  402720:	mov    rsi,r12
  402723:	mov    DWORD PTR [rsp+0x8],r10d
  402728:	call   403b80 <Mat_VarReadNextInfo@plt+0x1840>
  40272d:	mov    r10d,DWORD PTR [rsp+0x8]
  402732:	mov    r8d,DWORD PTR [r15+0x8]
  402736:	lea    r9,[r15+0x28]
  40273a:	mov    rcx,rbx
  40273d:	mov    rdx,r14
  402740:	mov    rsi,rbp
  402743:	mov    edi,r10d
  402746:	call   403e50 <Mat_VarReadNextInfo@plt+0x1b10>
  40274b:	test   eax,eax
  40274d:	mov    DWORD PTR [rsp+0x10],eax
  402751:	je     402c2a <Mat_VarReadNextInfo@plt+0x8ea>
  402757:	mov    r10d,DWORD PTR [rsp+0x8]
  40275c:	cmp    r10d,0x1
  402760:	je     4029bc <Mat_VarReadNextInfo@plt+0x67c>
  402766:	mov    rcx,rbx
  402769:	mov    rdx,r14
  40276c:	mov    rsi,rbp
  40276f:	mov    rdi,r15
  402772:	mov    DWORD PTR [rsp+0x8],r10d
  402777:	call   4020c0 <Mat_VarGetCells@plt>
  40277c:	mov    rcx,QWORD PTR [r15+0x28]
  402780:	mov    r10d,DWORD PTR [rsp+0x8]
  402785:	mov    r13,rax
  402788:	xor    eax,eax
  40278a:	movsxd rdx,DWORD PTR [rbx+rax*4]
  40278e:	mov    QWORD PTR [rcx+rax*8],rdx
  402792:	add    rax,0x1
  402796:	cmp    r10d,eax
  402799:	jg     40278a <Mat_VarReadNextInfo@plt+0x44a>
  40279b:	test   r13,r13
  40279e:	je     402c67 <Mat_VarReadNextInfo@plt+0x927>
  4027a4:	mov    QWORD PTR [rsp+0x8],rbp
  4027a9:	xor    r12d,r12d
  4027ac:	mov    rbp,r13
  4027af:	mov    r13,rbx
  4027b2:	mov    ebx,DWORD PTR [rsp+0x10]
  4027b6:	jmp    4027d0 <Mat_VarReadNextInfo@plt+0x490>
  4027b8:	mov    rdi,QWORD PTR [rbp+r12*8+0x0]
  4027bd:	mov    esi,0x1
  4027c2:	call   402320 <Mat_VarDuplicate@plt>
  4027c7:	mov    QWORD PTR [rbp+r12*8+0x0],rax
  4027cc:	add    r12,0x1
  4027d0:	cmp    ebx,r12d
  4027d3:	jg     4027b8 <Mat_VarReadNextInfo@plt+0x478>
  4027d5:	sub    rsp,0x8
  4027d9:	mov    ecx,DWORD PTR [r15+0x8]
  4027dd:	mov    r8,QWORD PTR [r15+0x28]
  4027e1:	mov    rdi,QWORD PTR [r15+0x30]
  4027e5:	mov    rbx,r13
  4027e8:	mov    r13,rbp
  4027eb:	mov    rbp,QWORD PTR [rsp+0x10]
  4027f0:	push   0x1
  4027f2:	mov    edx,0x15
  4027f7:	mov    r9,r13
  4027fa:	mov    esi,0x1
  4027ff:	call   4020f0 <Mat_VarCreate@plt>
  402804:	mov    rdi,r15
  402807:	mov    r12,rax
  40280a:	call   4021e0 <Mat_VarFree@plt>
  40280f:	mov    rdi,rbp
  402812:	mov    r15,r12
  402815:	call   402060 <free@plt>
  40281a:	mov    rdi,r14
  40281d:	call   402060 <free@plt>
  402822:	mov    rdi,rbx
  402825:	call   402060 <free@plt>
  40282a:	pop    rax
  40282b:	pop    rdx
  40282c:	mov    rax,QWORD PTR [rsp+0x20]
  402831:	mov    QWORD PTR [rsp+0x10],rax
  402836:	cmp    DWORD PTR [rsp+0x38],0x0
  40283b:	je     402632 <Mat_VarReadNextInfo@plt+0x2f2>
  402841:	jmp    40259c <Mat_VarReadNextInfo@plt+0x25c>
  402846:	mov    r14,QWORD PTR [rsp+0x10]
  40284b:	mov    eax,DWORD PTR [r15+0x14]
  40284f:	add    r14,0x1
  402853:	cmp    eax,0x2
  402856:	je     402a3b <Mat_VarReadNextInfo@plt+0x6fb>
  40285c:	sub    eax,0x1
  40285f:	jne    402d73 <Mat_VarReadNextInfo@plt+0xa33>
  402865:	movsxd rcx,DWORD PTR [r15+0x10]
  402869:	mov    rax,QWORD PTR [r15]
  40286c:	xor    edx,edx
  40286e:	mov    rdi,r14
  402871:	mov    r13,QWORD PTR [r15+0x38]
  402875:	div    rcx
  402878:	mov    QWORD PTR [rsp+0x20],rax
  40287d:	mov    DWORD PTR [rsp+0x8],eax
  402881:	call   403b10 <Mat_VarReadNextInfo@plt+0x17d0>
  402886:	cmp    r14,rax
  402889:	mov    QWORD PTR [rsp+0x10],rax
  40288e:	je     402a90 <Mat_VarReadNextInfo@plt+0x750>
  402894:	movzx  ecx,BYTE PTR [rax]
  402897:	mov    DWORD PTR [rsp+0x38],0x0
  40289f:	mov    BYTE PTR [rax],0x0
  4028a2:	mov    BYTE PTR [rsp],cl
  4028a5:	xor    ebx,ebx
  4028a7:	jmp    402900 <Mat_VarReadNextInfo@plt+0x5c0>
  4028a9:	mov    esi,ebx
  4028ab:	mov    rdi,r15
  4028ae:	call   4020e0 <Mat_VarGetCell@plt>
  4028b3:	test   rax,rax
  4028b6:	mov    rbp,rax
  4028b9:	je     40296e <Mat_VarReadNextInfo@plt+0x62e>
  4028bf:	cmp    DWORD PTR [rax+0x14],0x2
  4028c3:	jne    40296e <Mat_VarReadNextInfo@plt+0x62e>
  4028c9:	xor    edx,edx
  4028cb:	mov    rsi,r14
  4028ce:	mov    rdi,rax
  4028d1:	call   4022b0 <Mat_VarGetStructFieldByName@plt>
  4028d6:	test   rax,rax
  4028d9:	je     402993 <Mat_VarReadNextInfo@plt+0x653>
  4028df:	mov    esi,0x1
  4028e4:	mov    rdi,rax
  4028e7:	call   402320 <Mat_VarDuplicate@plt>
  4028ec:	mov    rdi,rbp
  4028ef:	mov    r12,rax
  4028f2:	call   4021e0 <Mat_VarFree@plt>
  4028f7:	mov    QWORD PTR [r13+rbx*8+0x0],r12
  4028fc:	add    rbx,0x1
  402900:	cmp    DWORD PTR [rsp+0x8],ebx
  402904:	mov    r12d,ebx
  402907:	jg     4028a9 <Mat_VarReadNextInfo@plt+0x569>
  402909:	cmp    DWORD PTR [rsp+0x20],ebx
  40290d:	je     402836 <Mat_VarReadNextInfo@plt+0x4f6>
  402913:	jmp    40259c <Mat_VarReadNextInfo@plt+0x25c>
  402918:	mov    rax,QWORD PTR [rsp+0x10]
  40291d:	mov    esi,0x29
  402922:	lea    rbx,[rax+0x1]
  402926:	mov    rdi,rbx
  402929:	call   402160 <strchr@plt>
  40292e:	lea    rbp,[rax+0x1]
  402932:	mov    r14,rax
  402935:	mov    rdi,rbp
  402938:	call   403b10 <Mat_VarReadNextInfo@plt+0x17d0>
  40293d:	cmp    rbp,rax
  402940:	je     402aa4 <Mat_VarReadNextInfo@plt+0x764>
  402946:	mov    BYTE PTR [rax],0x0
  402949:	mov    rax,QWORD PTR [rip+0x56a0]        # 407ff0 <getopt_long_only@@Base+0x3240>
  402950:	lea    rdi,[rip+0x2bf9]        # 405550 <getopt_long_only@@Base+0x7a0>
  402957:	mov    edx,0x38
  40295c:	mov    esi,0x1
  402961:	mov    rcx,QWORD PTR [rax]
  402964:	call   4022e0 <fwrite@plt>
  402969:	jmp    40259c <Mat_VarReadNextInfo@plt+0x25c>
  40296e:	mov    rax,QWORD PTR [rip+0x567b]        # 407ff0 <getopt_long_only@@Base+0x3240>
  402975:	lea    rdx,[rip+0x2c64]        # 4055e0 <getopt_long_only@@Base+0x830>
  40297c:	mov    ecx,r12d
  40297f:	mov    esi,0x1
  402984:	mov    rdi,QWORD PTR [rax]
  402987:	xor    eax,eax
  402989:	call   4022f0 <__fprintf_chk@plt>
  40298e:	jmp    40259c <Mat_VarReadNextInfo@plt+0x25c>
  402993:	mov    rax,QWORD PTR [rip+0x5656]        # 407ff0 <getopt_long_only@@Base+0x3240>
  40299a:	mov    r8,QWORD PTR [r15+0x30]
  40299e:	lea    rdx,[rip+0x2c13]        # 4055b8 <getopt_long_only@@Base+0x808>
  4029a5:	mov    rcx,r14
  4029a8:	mov    esi,0x1
  4029ad:	mov    rdi,QWORD PTR [rax]
  4029b0:	xor    eax,eax
  4029b2:	call   4022f0 <__fprintf_chk@plt>
  4029b7:	jmp    40259c <Mat_VarReadNextInfo@plt+0x25c>
  4029bc:	mov    ecx,DWORD PTR [rbx]
  4029be:	mov    edx,DWORD PTR [r14]
  4029c1:	mov    rdi,r15
  4029c4:	mov    esi,DWORD PTR [rbp+0x0]
  4029c7:	call   402280 <Mat_VarGetCellsLinear@plt>
  4029cc:	cmp    DWORD PTR [r15+0x8],0x2
  4029d1:	mov    r13,rax
  4029d4:	mov    rax,QWORD PTR [r15+0x28]
  4029d8:	je     402c9c <Mat_VarReadNextInfo@plt+0x95c>
  4029de:	mov    DWORD PTR [r15+0x8],0x1
  4029e6:	movsxd rdx,DWORD PTR [rbx]
  4029e9:	mov    QWORD PTR [rax],rdx
  4029ec:	jmp    40279b <Mat_VarReadNextInfo@plt+0x45b>
  4029f1:	cmp    DWORD PTR [rip+0x59a4],0x0        # 40839c <opterr@@Base+0x28>
  4029f8:	mov    rbp,QWORD PTR [rsp+0x28]
  4029fd:	jne    402a15 <Mat_VarReadNextInfo@plt+0x6d5>
  4029ff:	jmp    402c15 <Mat_VarReadNextInfo@plt+0x8d5>
  402a04:	mov    rdi,rbx
  402a07:	call   QWORD PTR [rip+0x5983]        # 408390 <opterr@@Base+0x1c>
  402a0d:	mov    rdi,rbx
  402a10:	call   4021e0 <Mat_VarFree@plt>
  402a15:	mov    rdi,rbp
  402a18:	call   402090 <Mat_VarReadNext@plt>
  402a1d:	test   rax,rax
  402a20:	mov    rbx,rax
  402a23:	jne    402a04 <Mat_VarReadNextInfo@plt+0x6c4>
  402a25:	mov    rdi,QWORD PTR [rsp+0x28]
  402a2a:	xor    ebx,ebx
  402a2c:	call   402230 <Mat_Close@plt>
  402a31:	call   402070 <Mat_LogClose@plt>
  402a36:	jmp    4023bb <Mat_VarReadNextInfo@plt+0x7b>
  402a3b:	mov    rdi,r14
  402a3e:	call   403b10 <Mat_VarReadNextInfo@plt+0x17d0>
  402a43:	cmp    r14,rax
  402a46:	mov    QWORD PTR [rsp+0x10],rax
  402a4b:	je     402d2e <Mat_VarReadNextInfo@plt+0x9ee>
  402a51:	movzx  ecx,BYTE PTR [rax]
  402a54:	xor    edx,edx
  402a56:	mov    BYTE PTR [rax],0x0
  402a59:	mov    rsi,r14
  402a5c:	mov    rdi,r15
  402a5f:	mov    BYTE PTR [rsp],cl
  402a62:	call   4022b0 <Mat_VarGetStructFieldByName@plt>
  402a67:	test   rax,rax
  402a6a:	je     402993 <Mat_VarReadNextInfo@plt+0x653>
  402a70:	mov    esi,0x1
  402a75:	mov    rdi,rax
  402a78:	call   402320 <Mat_VarDuplicate@plt>
  402a7d:	mov    rdi,r15
  402a80:	mov    rbx,rax
  402a83:	mov    r15,rbx
  402a86:	call   4021e0 <Mat_VarFree@plt>
  402a8b:	jmp    402632 <Mat_VarReadNextInfo@plt+0x2f2>
  402a90:	mov    DWORD PTR [rsp+0x38],0x1
  402a98:	jmp    4028a5 <Mat_VarReadNextInfo@plt+0x565>
  402a9d:	xor    ebx,ebx
  402a9f:	jmp    4025ee <Mat_VarReadNextInfo@plt+0x2ae>
  402aa4:	mov    rax,rbx
  402aa7:	mov    ebx,0x1
  402aac:	jmp    402abd <Mat_VarReadNextInfo@plt+0x77d>
  402aae:	add    rax,0x1
  402ab2:	xor    edx,edx
  402ab4:	cmp    BYTE PTR [rax-0x1],0x2c
  402ab8:	sete   dl
  402abb:	add    ebx,edx
  402abd:	cmp    r14,rax
  402ac0:	jne    402aae <Mat_VarReadNextInfo@plt+0x76e>
  402ac2:	movsxd rbp,ebx
  402ac5:	shl    rbp,0x2
  402ac9:	mov    rdi,rbp
  402acc:	call   402210 <malloc@plt>
  402ad1:	mov    rdi,rbp
  402ad4:	mov    r13,rax
  402ad7:	call   402210 <malloc@plt>
  402adc:	mov    rdi,rbp
  402adf:	mov    r12,rax
  402ae2:	call   402210 <malloc@plt>
  402ae7:	mov    rbp,rax
  402aea:	xor    eax,eax
  402aec:	mov    DWORD PTR [r13+rax*4+0x0],0x0
  402af5:	mov    DWORD PTR [r12+rax*4],0x1
  402afd:	mov    DWORD PTR [rbp+rax*4+0x0],0x1
  402b05:	add    rax,0x1
  402b09:	cmp    ebx,eax
  402b0b:	jg     402aec <Mat_VarReadNextInfo@plt+0x7ac>
  402b0d:	mov    rdi,QWORD PTR [rsp+0x10]
  402b12:	mov    rsi,r14
  402b15:	mov    r8,rbp
  402b18:	mov    rcx,r12
  402b1b:	mov    rdx,r13
  402b1e:	call   403b80 <Mat_VarReadNextInfo@plt+0x1840>
  402b23:	mov    r8d,DWORD PTR [r15+0x8]
  402b27:	lea    r9,[r15+0x28]
  402b2b:	mov    rcx,rbp
  402b2e:	mov    rdx,r12
  402b31:	mov    rsi,r13
  402b34:	mov    edi,ebx
  402b36:	call   403e50 <Mat_VarReadNextInfo@plt+0x1b10>
  402b3b:	movsxd r14,eax
  402b3e:	test   r14d,r14d
  402b41:	jne    402b60 <Mat_VarReadNextInfo@plt+0x820>
  402b43:	mov    rdi,r13
  402b46:	call   402060 <free@plt>
  402b4b:	mov    rdi,r12
  402b4e:	call   402060 <free@plt>
  402b53:	mov    rdi,rbp
  402b56:	call   402060 <free@plt>
  402b5b:	jmp    40259c <Mat_VarReadNextInfo@plt+0x25c>
  402b60:	mov    edi,DWORD PTR [r15+0x14]
  402b64:	call   4022c0 <Mat_SizeOfClass@plt>
  402b69:	mov    DWORD PTR [r15+0x10],eax
  402b6d:	cdqe   
  402b6f:	imul   r14,rax
  402b73:	cmp    DWORD PTR [r15+0x18],0x0
  402b78:	mov    QWORD PTR [r15],r14
  402b7b:	je     402bf6 <Mat_VarReadNextInfo@plt+0x8b6>
  402b7d:	mov    edi,0x10
  402b82:	call   402210 <malloc@plt>
  402b87:	mov    rdi,r14
  402b8a:	mov    QWORD PTR [r15+0x38],rax
  402b8e:	mov    QWORD PTR [rsp],rax
  402b92:	call   402210 <malloc@plt>
  402b97:	mov    rdx,QWORD PTR [rsp]
  402b9b:	mov    rdi,r14
  402b9e:	mov    QWORD PTR [rdx],rax
  402ba1:	call   402210 <malloc@plt>
  402ba6:	mov    rdx,QWORD PTR [rsp]
  402baa:	mov    QWORD PTR [rdx+0x8],rax
  402bae:	mov    rdx,QWORD PTR [r15+0x38]
  402bb2:	test   rdx,rdx
  402bb5:	je     402dce <Mat_VarReadNextInfo@plt+0xa8e>
  402bbb:	cmp    ebx,0x1
  402bbe:	je     402cd7 <Mat_VarReadNextInfo@plt+0x997>
  402bc4:	mov    rdi,QWORD PTR [rsp+0x28]
  402bc9:	mov    rcx,r13
  402bcc:	mov    r9,rbp
  402bcf:	mov    r8,r12
  402bd2:	mov    rsi,r15
  402bd5:	call   402140 <Mat_VarReadData@plt>
  402bda:	mov    rcx,QWORD PTR [r15+0x28]
  402bde:	xor    eax,eax
  402be0:	movsxd rdx,DWORD PTR [rbp+rax*4+0x0]
  402be5:	mov    QWORD PTR [rcx+rax*8],rdx
  402be9:	add    rax,0x1
  402bed:	cmp    ebx,eax
  402bef:	jg     402be0 <Mat_VarReadNextInfo@plt+0x8a0>
  402bf1:	jmp    402b43 <Mat_VarReadNextInfo@plt+0x803>
  402bf6:	mov    rdi,r14
  402bf9:	call   402210 <malloc@plt>
  402bfe:	mov    QWORD PTR [r15+0x38],rax
  402c02:	jmp    402bae <Mat_VarReadNextInfo@plt+0x86e>
  402c04:	mov    rdi,rbx
  402c07:	call   QWORD PTR [rip+0x5783]        # 408390 <opterr@@Base+0x1c>
  402c0d:	mov    rdi,rbx
  402c10:	call   4021e0 <Mat_VarFree@plt>
  402c15:	mov    rdi,rbp
  402c18:	call   402340 <Mat_VarReadNextInfo@plt>
  402c1d:	test   rax,rax
  402c20:	mov    rbx,rax
  402c23:	jne    402c04 <Mat_VarReadNextInfo@plt+0x8c4>
  402c25:	jmp    402a25 <Mat_VarReadNextInfo@plt+0x6e5>
  402c2a:	mov    rax,QWORD PTR [rip+0x53bf]        # 407ff0 <getopt_long_only@@Base+0x3240>
  402c31:	lea    rdi,[rip+0x25a2]        # 4051da <getopt_long_only@@Base+0x42a>
  402c38:	mov    edx,0x18
  402c3d:	mov    esi,0x1
  402c42:	mov    rcx,QWORD PTR [rax]
  402c45:	call   4022e0 <fwrite@plt>
  402c4a:	mov    rdi,rbp
  402c4d:	call   402060 <free@plt>
  402c52:	mov    rdi,r14
  402c55:	call   402060 <free@plt>
  402c5a:	mov    rdi,rbx
  402c5d:	call   402060 <free@plt>
  402c62:	jmp    40259c <Mat_VarReadNextInfo@plt+0x25c>
  402c67:	mov    rax,QWORD PTR [rip+0x5382]        # 407ff0 <getopt_long_only@@Base+0x3240>
  402c6e:	lea    rdi,[rip+0x29bb]        # 405630 <getopt_long_only@@Base+0x880>
  402c75:	mov    edx,0x1f
  402c7a:	mov    esi,0x1
  402c7f:	mov    rcx,QWORD PTR [rax]
  402c82:	call   4022e0 <fwrite@plt>
  402c87:	jmp    402c4a <Mat_VarReadNextInfo@plt+0x90a>
  402c89:	lea    rdi,[rip+0x2818]        # 4054a8 <getopt_long_only@@Base+0x6f8>
  402c90:	xor    eax,eax
  402c92:	call   402100 <Mat_Warning@plt>
  402c97:	jmp    40240f <Mat_VarReadNextInfo@plt+0xcf>
  402c9c:	cmp    QWORD PTR [rax],0x1
  402ca0:	je     402d9d <Mat_VarReadNextInfo@plt+0xa5d>
  402ca6:	cmp    QWORD PTR [rax+0x8],0x1
  402cab:	jne    4029de <Mat_VarReadNextInfo@plt+0x69e>
  402cb1:	jmp    4029e6 <Mat_VarReadNextInfo@plt+0x6a6>
  402cb6:	mov    rax,QWORD PTR [rsp+0x30]
  402cbb:	mov    rcx,QWORD PTR [rsp+0x18]
  402cc0:	lea    rdi,[rip+0x2989]        # 405650 <getopt_long_only@@Base+0x8a0>
  402cc7:	mov    rsi,QWORD PTR [rax+rcx*8]
  402ccb:	xor    eax,eax
  402ccd:	call   402100 <Mat_Warning@plt>
  402cd2:	jmp    4025ad <Mat_VarReadNextInfo@plt+0x26d>
  402cd7:	mov    r9d,DWORD PTR [rbp+0x0]
  402cdb:	mov    r8d,DWORD PTR [r12]
  402cdf:	mov    rsi,r15
  402ce2:	mov    ecx,DWORD PTR [r13+0x0]
  402ce6:	mov    rdi,QWORD PTR [rsp+0x28]
  402ceb:	call   402110 <Mat_VarReadDataLinear@plt>
  402cf0:	cmp    DWORD PTR [r15+0x8],0x2
  402cf5:	mov    rax,QWORD PTR [r15+0x28]
  402cf9:	je     402df3 <Mat_VarReadNextInfo@plt+0xab3>
  402cff:	mov    DWORD PTR [r15+0x8],0x2
  402d07:	movsxd rdx,DWORD PTR [rbp+0x0]
  402d0b:	mov    QWORD PTR [rax+0x8],0x1
  402d13:	mov    QWORD PTR [rax],rdx
  402d16:	jmp    402b43 <Mat_VarReadNextInfo@plt+0x803>
  402d1b:	lea    rdi,[rip+0x2806]        # 405528 <getopt_long_only@@Base+0x778>
  402d22:	xor    eax,eax
  402d24:	call   402240 <Mat_Critical@plt>
  402d29:	jmp    4023bb <Mat_VarReadNextInfo@plt+0x7b>
  402d2e:	mov    rsi,QWORD PTR [rsp+0x10]
  402d33:	xor    edx,edx
  402d35:	mov    rdi,r15
  402d38:	call   4022b0 <Mat_VarGetStructFieldByName@plt>
  402d3d:	test   rax,rax
  402d40:	je     402993 <Mat_VarReadNextInfo@plt+0x653>
  402d46:	mov    esi,0x1
  402d4b:	mov    rdi,rax
  402d4e:	call   402320 <Mat_VarDuplicate@plt>
  402d53:	mov    rdi,r15
  402d56:	mov    rbx,rax
  402d59:	call   4021e0 <Mat_VarFree@plt>
  402d5e:	mov    rdi,QWORD PTR [rsp+0x28]
  402d63:	mov    rsi,rbx
  402d66:	mov    r15,rbx
  402d69:	call   402180 <Mat_VarReadDataAll@plt>
  402d6e:	jmp    40259c <Mat_VarReadNextInfo@plt+0x25c>
  402d73:	mov    rax,QWORD PTR [rip+0x5276]        # 407ff0 <getopt_long_only@@Base+0x3240>
  402d7a:	lea    rdx,[rip+0x2443]        # 4051c4 <getopt_long_only@@Base+0x414>
  402d81:	mov    rcx,r14
  402d84:	mov    esi,0x1
  402d89:	mov    rdi,QWORD PTR [rax]
  402d8c:	xor    eax,eax
  402d8e:	call   4022f0 <__fprintf_chk@plt>
  402d93:	jmp    40259c <Mat_VarReadNextInfo@plt+0x25c>
  402d98:	call   402150 <__stack_chk_fail@plt>
  402d9d:	movsxd rdx,DWORD PTR [rbx]
  402da0:	mov    QWORD PTR [rax+0x8],rdx
  402da4:	jmp    40279b <Mat_VarReadNextInfo@plt+0x45b>
  402da9:	mov    rax,QWORD PTR [rip+0x5240]        # 407ff0 <getopt_long_only@@Base+0x3240>
  402db0:	lea    rdi,[rip+0x2851]        # 405608 <getopt_long_only@@Base+0x858>
  402db7:	mov    edx,0x22
  402dbc:	mov    esi,0x1
  402dc1:	mov    rcx,QWORD PTR [rax]
  402dc4:	call   4022e0 <fwrite@plt>
  402dc9:	jmp    40259c <Mat_VarReadNextInfo@plt+0x25c>
  402dce:	mov    rax,QWORD PTR [rip+0x521b]        # 407ff0 <getopt_long_only@@Base+0x3240>
  402dd5:	lea    rdi,[rip+0x27b4]        # 405590 <getopt_long_only@@Base+0x7e0>
  402ddc:	mov    edx,0x25
  402de1:	mov    esi,0x1
  402de6:	mov    rcx,QWORD PTR [rax]
  402de9:	call   4022e0 <fwrite@plt>
  402dee:	jmp    402b43 <Mat_VarReadNextInfo@plt+0x803>
  402df3:	cmp    QWORD PTR [rax],0x1
  402df7:	je     402e2c <Mat_VarReadNextInfo@plt+0xaec>
  402df9:	cmp    QWORD PTR [rax+0x8],0x1
  402dfe:	jne    402cff <Mat_VarReadNextInfo@plt+0x9bf>
  402e04:	movsxd rdx,DWORD PTR [rbp+0x0]
  402e08:	mov    QWORD PTR [rax],rdx
  402e0b:	jmp    402b43 <Mat_VarReadNextInfo@plt+0x803>
  402e10:	movsxd rax,DWORD PTR [r12]
  402e14:	lea    rdi,[rip+0x2397]        # 4051b2 <getopt_long_only@@Base+0x402>
  402e1b:	mov    rsi,QWORD PTR [rbp+rax*8+0x0]
  402e20:	xor    eax,eax
  402e22:	call   402240 <Mat_Critical@plt>
  402e27:	jmp    4023bb <Mat_VarReadNextInfo@plt+0x7b>
  402e2c:	movsxd rdx,DWORD PTR [rbp+0x0]
  402e30:	mov    QWORD PTR [rax+0x8],rdx
  402e34:	jmp    402b43 <Mat_VarReadNextInfo@plt+0x803>
  402e39:	nop    DWORD PTR [rax+0x0]
  402e40:	endbr64 
  402e44:	xor    ebp,ebp
  402e46:	mov    r9,rdx
  402e49:	pop    rsi
  402e4a:	mov    rdx,rsp
  402e4d:	and    rsp,0xfffffffffffffff0
  402e51:	push   rax
  402e52:	push   rsp
  402e53:	mov    r8,0x404e30
  402e5a:	mov    rcx,0x404dc0
  402e61:	mov    rdi,0x402350
  402e68:	call   QWORD PTR [rip+0x5172]        # 407fe0 <getopt_long_only@@Base+0x3230>
  402e6e:	hlt    
  402e6f:	nop
  402e70:	endbr64 
  402e74:	ret    
  402e75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e7f:	nop
  402e80:	mov    eax,0x408387
  402e85:	push   rbp
  402e86:	sub    rax,0x408380
  402e8c:	cmp    rax,0xe
  402e90:	mov    rbp,rsp
  402e93:	jbe    402eb0 <Mat_VarReadNextInfo@plt+0xb70>
  402e95:	mov    eax,0x0
  402e9a:	test   rax,rax
  402e9d:	je     402eb0 <Mat_VarReadNextInfo@plt+0xb70>
  402e9f:	pop    rbp
  402ea0:	mov    edi,0x408380
  402ea5:	jmp    rax
  402ea7:	nop    WORD PTR [rax+rax*1+0x0]
  402eb0:	pop    rbp
  402eb1:	ret    
  402eb2:	nop    DWORD PTR [rax+0x0]
  402eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ec0:	mov    esi,0x408380
  402ec5:	push   rbp
  402ec6:	sub    rsi,0x408380
  402ecd:	sar    rsi,0x3
  402ed1:	mov    rbp,rsp
  402ed4:	mov    rax,rsi
  402ed7:	shr    rax,0x3f
  402edb:	add    rsi,rax
  402ede:	sar    rsi,1
  402ee1:	je     402ef8 <Mat_VarReadNextInfo@plt+0xbb8>
  402ee3:	mov    eax,0x0
  402ee8:	test   rax,rax
  402eeb:	je     402ef8 <Mat_VarReadNextInfo@plt+0xbb8>
  402eed:	pop    rbp
  402eee:	mov    edi,0x408380
  402ef3:	jmp    rax
  402ef5:	nop    DWORD PTR [rax]
  402ef8:	pop    rbp
  402ef9:	ret    
  402efa:	nop    WORD PTR [rax+rax*1+0x0]
  402f00:	cmp    BYTE PTR [rip+0x5479],0x0        # 408380 <opterr@@Base+0xc>
  402f07:	jne    402f1a <Mat_VarReadNextInfo@plt+0xbda>
  402f09:	push   rbp
  402f0a:	mov    rbp,rsp
  402f0d:	call   402e80 <Mat_VarReadNextInfo@plt+0xb40>
  402f12:	pop    rbp
  402f13:	mov    BYTE PTR [rip+0x5466],0x1        # 408380 <opterr@@Base+0xc>
  402f1a:	repz ret 
  402f1c:	nop    DWORD PTR [rax+0x0]
  402f20:	mov    edi,0x407d58
  402f25:	cmp    QWORD PTR [rdi],0x0
  402f29:	jne    402f30 <Mat_VarReadNextInfo@plt+0xbf0>
  402f2b:	jmp    402ec0 <Mat_VarReadNextInfo@plt+0xb80>
  402f2d:	nop    DWORD PTR [rax]
  402f30:	mov    eax,0x0
  402f35:	test   rax,rax
  402f38:	je     402f2b <Mat_VarReadNextInfo@plt+0xbeb>
  402f3a:	push   rbp
  402f3b:	mov    rbp,rsp
  402f3e:	call   rax
  402f40:	pop    rbp
  402f41:	jmp    402ec0 <Mat_VarReadNextInfo@plt+0xb80>
  402f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f50:	mov    eax,DWORD PTR [rip+0x5432]        # 408388 <opterr@@Base+0x14>
  402f56:	push   r12
  402f58:	mov    r12,rsi
  402f5b:	push   rbp
  402f5c:	push   rbx
  402f5d:	xor    ebx,ebx
  402f5f:	lea    rbp,[rip+0x20fa]        # 405060 <getopt_long_only@@Base+0x2b0>
  402f66:	test   eax,eax
  402f68:	jle    402f8a <Mat_VarReadNextInfo@plt+0xc4a>
  402f6a:	nop    WORD PTR [rax+rax*1+0x0]
  402f70:	xor    eax,eax
  402f72:	mov    rsi,rbp
  402f75:	mov    edi,0x1
  402f7a:	call   402250 <__printf_chk@plt>
  402f7f:	add    ebx,0x1
  402f82:	cmp    DWORD PTR [rip+0x5400],ebx        # 408388 <opterr@@Base+0x14>
  402f88:	jg     402f70 <Mat_VarReadNextInfo@plt+0xc30>
  402f8a:	pop    rbx
  402f8b:	mov    rdi,r12
  402f8e:	pop    rbp
  402f8f:	pop    r12
  402f91:	jmp    4020d0 <puts@plt>
  402f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402fa0:	cmp    edi,0xd
  402fa3:	ja     4030f0 <Mat_VarReadNextInfo@plt+0xdb0>
  402fa9:	lea    rdx,[rip+0x2398]        # 405348 <getopt_long_only@@Base+0x598>
  402fb0:	mov    edi,edi
  402fb2:	movsxd rax,DWORD PTR [rdx+rdi*4]
  402fb6:	add    rax,rdx
  402fb9:	jmp    rax
  402fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  402fc0:	mov    rdx,QWORD PTR [rsi]
  402fc3:	lea    rsi,[rip+0x2041]        # 40500b <getopt_long_only@@Base+0x25b>
  402fca:	mov    edi,0x1
  402fcf:	xor    eax,eax
  402fd1:	jmp    402250 <__printf_chk@plt>
  402fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402fe0:	movsx  edx,BYTE PTR [rsi]
  402fe3:	lea    rsi,[rip+0x2030]        # 40501a <getopt_long_only@@Base+0x26a>
  402fea:	mov    edi,0x1
  402fef:	xor    eax,eax
  402ff1:	jmp    402250 <__printf_chk@plt>
  402ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403000:	movzx  edx,BYTE PTR [rsi]
  403003:	lea    rsi,[rip+0x2015]        # 40501f <getopt_long_only@@Base+0x26f>
  40300a:	mov    edi,0x1
  40300f:	xor    eax,eax
  403011:	jmp    402250 <__printf_chk@plt>
  403016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403020:	movsx  edx,WORD PTR [rsi]
  403023:	lea    rsi,[rip+0x1fe8]        # 405012 <getopt_long_only@@Base+0x262>
  40302a:	mov    edi,0x1
  40302f:	xor    eax,eax
  403031:	jmp    402250 <__printf_chk@plt>
  403036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403040:	movzx  edx,WORD PTR [rsi]
  403043:	lea    rsi,[rip+0x1fcc]        # 405016 <getopt_long_only@@Base+0x266>
  40304a:	mov    edi,0x1
  40304f:	xor    eax,eax
  403051:	jmp    402250 <__printf_chk@plt>
  403056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403060:	mov    edx,DWORD PTR [rsi]
  403062:	lea    rsi,[rip+0x2061]        # 4050ca <getopt_long_only@@Base+0x31a>
  403069:	mov    edi,0x1
  40306e:	xor    eax,eax
  403070:	jmp    402250 <__printf_chk@plt>
  403075:	nop    DWORD PTR [rax]
  403078:	mov    edx,DWORD PTR [rsi]
  40307a:	lea    rsi,[rip+0x1f8e]        # 40500f <getopt_long_only@@Base+0x25f>
  403081:	mov    edi,0x1
  403086:	xor    eax,eax
  403088:	jmp    402250 <__printf_chk@plt>
  40308d:	nop    DWORD PTR [rax]
  403090:	vxorpd xmm0,xmm0,xmm0
  403094:	mov    edi,0x1
  403099:	mov    eax,0x1
  40309e:	vcvtss2sd xmm0,xmm0,DWORD PTR [rsi]
  4030a2:	lea    rsi,[rip+0x1f5b]        # 405004 <getopt_long_only@@Base+0x254>
  4030a9:	jmp    402250 <__printf_chk@plt>
  4030ae:	xchg   ax,ax
  4030b0:	vmovsd xmm0,QWORD PTR [rsi]
  4030b4:	lea    rsi,[rip+0x1f49]        # 405004 <getopt_long_only@@Base+0x254>
  4030bb:	mov    edi,0x1
  4030c0:	mov    eax,0x1
  4030c5:	jmp    402250 <__printf_chk@plt>
  4030ca:	nop    WORD PTR [rax+rax*1+0x0]
  4030d0:	mov    rdx,QWORD PTR [rsi]
  4030d3:	lea    rsi,[rip+0x1f2d]        # 405007 <getopt_long_only@@Base+0x257>
  4030da:	mov    edi,0x1
  4030df:	xor    eax,eax
  4030e1:	jmp    402250 <__printf_chk@plt>
  4030e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030f0:	repz ret 
  4030f2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4030fd:	nop    DWORD PTR [rax]
  403100:	push   r15
  403102:	push   r14
  403104:	mov    r14,rdi
  403107:	push   r13
  403109:	push   r12
  40310b:	push   rbp
  40310c:	push   rbx
  40310d:	sub    rsp,0x38
  403111:	mov    esi,DWORD PTR [rip+0x50b9]        # 4081d0 <getopt_long_only@@Base+0x3420>
  403117:	mov    rax,QWORD PTR fs:0x28
  403120:	mov    QWORD PTR [rsp+0x28],rax
  403125:	xor    eax,eax
  403127:	mov    QWORD PTR [rsp],0x0
  40312f:	mov    QWORD PTR [rsp+0x8],0x0
  403138:	test   esi,esi
  40313a:	mov    QWORD PTR [rsp+0x10],0x0
  403143:	mov    QWORD PTR [rsp+0x18],0x0
  40314c:	jne    403330 <Mat_VarReadNextInfo@plt+0xff0>
  403152:	mov    rdx,QWORD PTR [r14+0x30]
  403156:	lea    rsi,[rip+0x1edd]        # 40503a <getopt_long_only@@Base+0x28a>
  40315d:	xor    eax,eax
  40315f:	mov    edi,0x1
  403164:	call   402250 <__printf_chk@plt>
  403169:	mov    ecx,DWORD PTR [r14+0x8]
  40316d:	test   ecx,ecx
  40316f:	jle    403370 <Mat_VarReadNextInfo@plt+0x1030>
  403175:	mov    rax,QWORD PTR [r14+0x28]
  403179:	lea    rsi,[rip+0x1ec0]        # 405040 <getopt_long_only@@Base+0x290>
  403180:	mov    edi,0x1
  403185:	mov    rdx,QWORD PTR [rax]
  403188:	xor    eax,eax
  40318a:	call   402250 <__printf_chk@plt>
  40318f:	cmp    DWORD PTR [r14+0x8],0x1
  403194:	jle    403411 <Mat_VarReadNextInfo@plt+0x10d1>
  40319a:	mov    ebx,0x8
  40319f:	xor    ebp,ebp
  4031a1:	mov    r15d,0x1
  4031a7:	mov    r12,rsp
  4031aa:	lea    r13,[rip+0x1e9a]        # 40504b <getopt_long_only@@Base+0x29b>
  4031b1:	jmp    4031c6 <Mat_VarReadNextInfo@plt+0xe86>
  4031b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4031b8:	add    r15d,0x1
  4031bc:	add    rbx,0x8
  4031c0:	cmp    DWORD PTR [r14+0x8],r15d
  4031c4:	jle    403234 <Mat_VarReadNextInfo@plt+0xef4>
  4031c6:	mov    rax,QWORD PTR [r14+0x28]
  4031ca:	mov    rax,QWORD PTR [rax+rbx*1]
  4031ce:	test   rax,rax
  4031d1:	js     4032f0 <Mat_VarReadNextInfo@plt+0xfb0>
  4031d7:	vxorpd xmm0,xmm0,xmm0
  4031db:	vcvtsi2sd xmm0,xmm0,rax
  4031e0:	call   4021c0 <log10@plt>
  4031e5:	call   402310 <ceil@plt>
  4031ea:	vaddsd xmm0,xmm0,QWORD PTR [rip+0x269e]        # 405890 <getopt_long_only@@Base+0xae0>
  4031f2:	vmovsd xmm1,QWORD PTR [rip+0x269e]        # 405898 <getopt_long_only@@Base+0xae8>
  4031fa:	vucomisd xmm1,xmm0
  4031fe:	jbe    4031b8 <Mat_VarReadNextInfo@plt+0xe78>
  403200:	mov    rax,QWORD PTR [r14+0x28]
  403204:	movsxd rdi,ebp
  403207:	mov    rcx,r13
  40320a:	add    rdi,r12
  40320d:	mov    rdx,0xffffffffffffffff
  403214:	mov    esi,0x1
  403219:	add    r15d,0x1
  40321d:	mov    r8,QWORD PTR [rax+rbx*1]
  403221:	xor    eax,eax
  403223:	add    rbx,0x8
  403227:	call   402330 <__sprintf_chk@plt>
  40322c:	add    ebp,eax
  40322e:	cmp    DWORD PTR [r14+0x8],r15d
  403232:	jg     4031c6 <Mat_VarReadNextInfo@plt+0xe86>
  403234:	lea    rsi,[rip+0x1e0a]        # 405045 <getopt_long_only@@Base+0x295>
  40323b:	mov    rdx,r12
  40323e:	mov    edi,0x1
  403243:	xor    eax,eax
  403245:	call   402250 <__printf_chk@plt>
  40324a:	mov    rdi,r14
  40324d:	call   402300 <Mat_VarGetSize@plt>
  403252:	mov    edx,DWORD PTR [rip+0x5140]        # 408398 <opterr@@Base+0x24>
  403258:	test   edx,edx
  40325a:	je     403310 <Mat_VarReadNextInfo@plt+0xfd0>
  403260:	cmp    rax,0x40000000
  403266:	ja     4033e0 <Mat_VarReadNextInfo@plt+0x10a0>
  40326c:	cmp    rax,0x100000
  403272:	ja     4033b0 <Mat_VarReadNextInfo@plt+0x1070>
  403278:	cmp    rax,0x400
  40327e:	jbe    403390 <Mat_VarReadNextInfo@plt+0x1050>
  403284:	vxorpd xmm0,xmm0,xmm0
  403288:	lea    rsi,[rip+0x1de8]        # 405077 <getopt_long_only@@Base+0x2c7>
  40328f:	mov    edi,0x1
  403294:	vcvtsi2sd xmm0,xmm0,rax
  403299:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x260f]        # 4058b0 <getopt_long_only@@Base+0xb00>
  4032a1:	mov    eax,0x1
  4032a6:	call   402250 <__printf_chk@plt>
  4032ab:	mov    edx,DWORD PTR [r14+0x14]
  4032af:	lea    rax,[rip+0x4aaa]        # 407d60 <getopt_long_only@@Base+0x2fb0>
  4032b6:	lea    rsi,[rip+0x1dd3]        # 405090 <getopt_long_only@@Base+0x2e0>
  4032bd:	mov    edi,0x1
  4032c2:	mov    rdx,QWORD PTR [rax+rdx*8]
  4032c6:	xor    eax,eax
  4032c8:	call   402250 <__printf_chk@plt>
  4032cd:	mov    rax,QWORD PTR [rsp+0x28]
  4032d2:	xor    rax,QWORD PTR fs:0x28
  4032db:	jne    403434 <Mat_VarReadNextInfo@plt+0x10f4>
  4032e1:	add    rsp,0x38
  4032e5:	pop    rbx
  4032e6:	pop    rbp
  4032e7:	pop    r12
  4032e9:	pop    r13
  4032eb:	pop    r14
  4032ed:	pop    r15
  4032ef:	ret    
  4032f0:	mov    rdx,rax
  4032f3:	vxorpd xmm0,xmm0,xmm0
  4032f7:	shr    rdx,1
  4032fa:	and    eax,0x1
  4032fd:	or     rdx,rax
  403300:	vcvtsi2sd xmm0,xmm0,rdx
  403305:	vaddsd xmm0,xmm0,xmm0
  403309:	jmp    4031e0 <Mat_VarReadNextInfo@plt+0xea0>
  40330e:	xchg   ax,ax
  403310:	lea    rsi,[rip+0x1d71]        # 405088 <getopt_long_only@@Base+0x2d8>
  403317:	mov    rdx,rax
  40331a:	mov    edi,0x1
  40331f:	xor    eax,eax
  403321:	call   402250 <__printf_chk@plt>
  403326:	jmp    4032ab <Mat_VarReadNextInfo@plt+0xf6b>
  403328:	nop    DWORD PTR [rax+rax*1+0x0]
  403330:	lea    r9,[rip+0x1ced]        # 405024 <getopt_long_only@@Base+0x274>
  403337:	lea    r8,[rip+0x1cec]        # 40502a <getopt_long_only@@Base+0x27a>
  40333e:	lea    rcx,[rip+0x1ceb]        # 405030 <getopt_long_only@@Base+0x280>
  403345:	lea    rdx,[rip+0x1ce9]        # 405035 <getopt_long_only@@Base+0x285>
  40334c:	lea    rsi,[rip+0x206d]        # 4053c0 <getopt_long_only@@Base+0x610>
  403353:	mov    edi,0x1
  403358:	call   402250 <__printf_chk@plt>
  40335d:	mov    DWORD PTR [rip+0x4e69],0x0        # 4081d0 <getopt_long_only@@Base+0x3420>
  403367:	jmp    403152 <Mat_VarReadNextInfo@plt+0xe12>
  40336c:	nop    DWORD PTR [rax+0x0]
  403370:	lea    rsi,[rip+0x1cd9]        # 405050 <getopt_long_only@@Base+0x2a0>
  403377:	mov    edi,0x1
  40337c:	xor    eax,eax
  40337e:	call   402250 <__printf_chk@plt>
  403383:	jmp    40324a <Mat_VarReadNextInfo@plt+0xf0a>
  403388:	nop    DWORD PTR [rax+rax*1+0x0]
  403390:	lea    rsi,[rip+0x1ce9]        # 405080 <getopt_long_only@@Base+0x2d0>
  403397:	mov    rdx,rax
  40339a:	mov    edi,0x1
  40339f:	xor    eax,eax
  4033a1:	call   402250 <__printf_chk@plt>
  4033a6:	jmp    4032ab <Mat_VarReadNextInfo@plt+0xf6b>
  4033ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4033b0:	vxorpd xmm0,xmm0,xmm0
  4033b4:	lea    rsi,[rip+0x1cb3]        # 40506e <getopt_long_only@@Base+0x2be>
  4033bb:	mov    edi,0x1
  4033c0:	vcvtsi2sd xmm0,xmm0,rax
  4033c5:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x24db]        # 4058a8 <getopt_long_only@@Base+0xaf8>
  4033cd:	mov    eax,0x1
  4033d2:	call   402250 <__printf_chk@plt>
  4033d7:	jmp    4032ab <Mat_VarReadNextInfo@plt+0xf6b>
  4033dc:	nop    DWORD PTR [rax+0x0]
  4033e0:	test   rax,rax
  4033e3:	js     403419 <Mat_VarReadNextInfo@plt+0x10d9>
  4033e5:	vxorpd xmm0,xmm0,xmm0
  4033e9:	vcvtsi2sd xmm0,xmm0,rax
  4033ee:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x24aa]        # 4058a0 <getopt_long_only@@Base+0xaf0>
  4033f6:	lea    rsi,[rip+0x1c68]        # 405065 <getopt_long_only@@Base+0x2b5>
  4033fd:	mov    edi,0x1
  403402:	mov    eax,0x1
  403407:	call   402250 <__printf_chk@plt>
  40340c:	jmp    4032ab <Mat_VarReadNextInfo@plt+0xf6b>
  403411:	mov    r12,rsp
  403414:	jmp    403234 <Mat_VarReadNextInfo@plt+0xef4>
  403419:	mov    rdx,rax
  40341c:	vxorpd xmm0,xmm0,xmm0
  403420:	shr    rdx,1
  403423:	and    eax,0x1
  403426:	or     rdx,rax
  403429:	vcvtsi2sd xmm0,xmm0,rdx
  40342e:	vaddsd xmm0,xmm0,xmm0
  403432:	jmp    4033ee <Mat_VarReadNextInfo@plt+0x10ae>
  403434:	call   402150 <__stack_chk_fail@plt>
  403439:	nop    DWORD PTR [rax+0x0]
  403440:	test   rdi,rdi
  403443:	je     40349b <Mat_VarReadNextInfo@plt+0x115b>
  403445:	push   r15
  403447:	push   r14
  403449:	push   r13
  40344b:	push   r12
  40344d:	push   rbp
  40344e:	push   rbx
  40344f:	sub    rsp,0x18
  403453:	cmp    DWORD PTR [rdi+0x14],0xf
  403457:	ja     403688 <Mat_VarReadNextInfo@plt+0x1348>
  40345d:	mov    eax,DWORD PTR [rdi+0x14]
  403460:	lea    rdx,[rip+0x1f19]        # 405380 <getopt_long_only@@Base+0x5d0>
  403467:	mov    rbx,rdi
  40346a:	movsxd rax,DWORD PTR [rdx+rax*4]
  40346e:	add    rax,rdx
  403471:	jmp    rax
  403473:	nop    DWORD PTR [rax+rax*1+0x0]
  403478:	mov    eax,DWORD PTR [rdi+0x8]
  40347b:	cmp    eax,0x2
  40347e:	je     4038a2 <Mat_VarReadNextInfo@plt+0x1562>
  403484:	cmp    eax,0x3
  403487:	je     403710 <Mat_VarReadNextInfo@plt+0x13d0>
  40348d:	add    rsp,0x18
  403491:	pop    rbx
  403492:	pop    rbp
  403493:	pop    r12
  403495:	pop    r13
  403497:	pop    r14
  403499:	pop    r15
  40349b:	repz ret 
  40349d:	nop    DWORD PTR [rax]
  4034a0:	mov    rsi,QWORD PTR [rdi+0x30]
  4034a4:	test   rsi,rsi
  4034a7:	je     4034b7 <Mat_VarReadNextInfo@plt+0x1177>
  4034a9:	lea    rdi,[rip+0x1bff]        # 4050af <getopt_long_only@@Base+0x2ff>
  4034b0:	xor    eax,eax
  4034b2:	call   402120 <Mat_Message@plt>
  4034b7:	mov    esi,DWORD PTR [rbx+0x8]
  4034ba:	lea    rdi,[rip+0x1bfd]        # 4050be <getopt_long_only@@Base+0x30e>
  4034c1:	xor    eax,eax
  4034c3:	call   402120 <Mat_Message@plt>
  4034c8:	mov    edx,DWORD PTR [rbx+0x8]
  4034cb:	test   edx,edx
  4034cd:	je     40348d <Mat_VarReadNextInfo@plt+0x114d>
  4034cf:	mov    rcx,QWORD PTR [rbx+0x28]
  4034d3:	cmp    edx,0x1
  4034d6:	mov    rbp,QWORD PTR [rcx]
  4034d9:	jle    4034fd <Mat_VarReadNextInfo@plt+0x11bd>
  4034db:	sub    edx,0x2
  4034de:	lea    rax,[rcx+0x8]
  4034e2:	lea    rdx,[rcx+rdx*8+0x10]
  4034e7:	nop    WORD PTR [rax+rax*1+0x0]
  4034f0:	imul   rbp,QWORD PTR [rax]
  4034f4:	add    rax,0x8
  4034f8:	cmp    rax,rdx
  4034fb:	jne    4034f0 <Mat_VarReadNextInfo@plt+0x11b0>
  4034fd:	lea    rdi,[rip+0x1bee]        # 4050f2 <getopt_long_only@@Base+0x342>
  403504:	xor    eax,eax
  403506:	call   402120 <Mat_Message@plt>
  40350b:	lea    rdi,[rip+0x1bdc]        # 4050ee <getopt_long_only@@Base+0x33e>
  403512:	xor    eax,eax
  403514:	call   402120 <Mat_Message@plt>
  403519:	mov    eax,DWORD PTR [rip+0x4e69]        # 408388 <opterr@@Base+0x14>
  40351f:	mov    r12,QWORD PTR [rbx+0x38]
  403523:	add    eax,0x1
  403526:	test   r12,r12
  403529:	mov    DWORD PTR [rip+0x4e59],eax        # 408388 <opterr@@Base+0x14>
  40352f:	je     403558 <Mat_VarReadNextInfo@plt+0x1218>
  403531:	test   rbp,rbp
  403534:	je     403558 <Mat_VarReadNextInfo@plt+0x1218>
  403536:	xor    ebx,ebx
  403538:	nop    DWORD PTR [rax+rax*1+0x0]
  403540:	mov    rdi,QWORD PTR [r12+rbx*8]
  403544:	add    rbx,0x1
  403548:	call   403440 <Mat_VarReadNextInfo@plt+0x1100>
  40354d:	cmp    rbx,rbp
  403550:	jne    403540 <Mat_VarReadNextInfo@plt+0x1200>
  403552:	mov    eax,DWORD PTR [rip+0x4e30]        # 408388 <opterr@@Base+0x14>
  403558:	sub    eax,0x1
  40355b:	lea    rdi,[rip+0x1b8e]        # 4050f0 <getopt_long_only@@Base+0x340>
  403562:	mov    DWORD PTR [rip+0x4e20],eax        # 408388 <opterr@@Base+0x14>
  403568:	jmp    40368f <Mat_VarReadNextInfo@plt+0x134f>
  40356d:	nop    DWORD PTR [rax]
  403570:	mov    rsi,QWORD PTR [rdi+0x30]
  403574:	test   rsi,rsi
  403577:	je     403587 <Mat_VarReadNextInfo@plt+0x1247>
  403579:	lea    rdi,[rip+0x1b2f]        # 4050af <getopt_long_only@@Base+0x2ff>
  403580:	xor    eax,eax
  403582:	call   402120 <Mat_Message@plt>
  403587:	mov    esi,DWORD PTR [rbx+0x8]
  40358a:	lea    rdi,[rip+0x1b2d]        # 4050be <getopt_long_only@@Base+0x30e>
  403591:	xor    eax,eax
  403593:	call   402120 <Mat_Message@plt>
  403598:	mov    eax,DWORD PTR [rbx+0x8]
  40359b:	test   eax,eax
  40359d:	je     40348d <Mat_VarReadNextInfo@plt+0x114d>
  4035a3:	lea    rdi,[rip+0x1b23]        # 4050cd <getopt_long_only@@Base+0x31d>
  4035aa:	xor    eax,eax
  4035ac:	call   402120 <Mat_Message@plt>
  4035b1:	mov    rdi,rbx
  4035b4:	call   402030 <Mat_VarGetNumberOfFields@plt>
  4035b9:	mov    ecx,DWORD PTR [rbx+0x8]
  4035bc:	mov    rdx,QWORD PTR [rbx+0x28]
  4035c0:	movsxd r12,eax
  4035c3:	cmp    ecx,0x1
  4035c6:	mov    rbp,QWORD PTR [rdx]
  4035c9:	jle    4035ed <Mat_VarReadNextInfo@plt+0x12ad>
  4035cb:	sub    ecx,0x2
  4035ce:	lea    rax,[rdx+0x8]
  4035d2:	lea    rdx,[rdx+rcx*8+0x10]
  4035d7:	nop    WORD PTR [rax+rax*1+0x0]
  4035e0:	imul   rbp,QWORD PTR [rax]
  4035e4:	add    rax,0x8
  4035e8:	cmp    rdx,rax
  4035eb:	jne    4035e0 <Mat_VarReadNextInfo@plt+0x12a0>
  4035ed:	test   r12d,r12d
  4035f0:	setg   al
  4035f3:	test   rbp,rbp
  4035f6:	jne    4036a4 <Mat_VarReadNextInfo@plt+0x1364>
  4035fc:	test   al,al
  4035fe:	je     4036a4 <Mat_VarReadNextInfo@plt+0x1364>
  403604:	mov    rdi,rbx
  403607:	call   4021a0 <Mat_VarGetStructFieldnames@plt>
  40360c:	lea    rdi,[rip+0x1ad0]        # 4050e3 <getopt_long_only@@Base+0x333>
  403613:	mov    rbp,rax
  403616:	mov    esi,r12d
  403619:	xor    eax,eax
  40361b:	call   402120 <Mat_Message@plt>
  403620:	mov    eax,DWORD PTR [rip+0x4d62]        # 408388 <opterr@@Base+0x14>
  403626:	add    eax,0x1
  403629:	test   rbp,rbp
  40362c:	mov    DWORD PTR [rip+0x4d56],eax        # 408388 <opterr@@Base+0x14>
  403632:	je     403558 <Mat_VarReadNextInfo@plt+0x1218>
  403638:	lea    r13,[rip+0x1a72]        # 4050b1 <getopt_long_only@@Base+0x301>
  40363f:	xor    ebx,ebx
  403641:	nop    DWORD PTR [rax+0x0]
  403648:	mov    rsi,QWORD PTR [rbp+rbx*8+0x0]
  40364d:	xor    eax,eax
  40364f:	mov    rdi,r13
  403652:	add    rbx,0x1
  403656:	call   402120 <Mat_Message@plt>
  40365b:	cmp    r12d,ebx
  40365e:	jg     403648 <Mat_VarReadNextInfo@plt+0x1308>
  403660:	jmp    403552 <Mat_VarReadNextInfo@plt+0x1212>
  403665:	nop    DWORD PTR [rax]
  403668:	mov    esi,DWORD PTR [rip+0x4d2e]        # 40839c <opterr@@Base+0x28>
  40366e:	add    rsp,0x18
  403672:	pop    rbx
  403673:	pop    rbp
  403674:	pop    r12
  403676:	pop    r13
  403678:	pop    r14
  40367a:	pop    r15
  40367c:	jmp    402220 <Mat_VarPrint@plt>
  403681:	nop    DWORD PTR [rax+0x0]
  403688:	lea    rdi,[rip+0x1a7a]        # 405109 <getopt_long_only@@Base+0x359>
  40368f:	add    rsp,0x18
  403693:	xor    eax,eax
  403695:	pop    rbx
  403696:	pop    rbp
  403697:	pop    r12
  403699:	pop    r13
  40369b:	pop    r14
  40369d:	pop    r15
  40369f:	jmp    402120 <Mat_Message@plt>
  4036a4:	test   rbp,rbp
  4036a7:	je     40348d <Mat_VarReadNextInfo@plt+0x114d>
  4036ad:	test   al,al
  4036af:	je     40348d <Mat_VarReadNextInfo@plt+0x114d>
  4036b5:	lea    rdi,[rip+0x1a27]        # 4050e3 <getopt_long_only@@Base+0x333>
  4036bc:	xor    eax,eax
  4036be:	mov    esi,r12d
  4036c1:	call   402120 <Mat_Message@plt>
  4036c6:	mov    eax,DWORD PTR [rip+0x4cbc]        # 408388 <opterr@@Base+0x14>
  4036cc:	mov    r13,QWORD PTR [rbx+0x38]
  4036d0:	add    eax,0x1
  4036d3:	test   r13,r13
  4036d6:	mov    DWORD PTR [rip+0x4cac],eax        # 408388 <opterr@@Base+0x14>
  4036dc:	je     403558 <Mat_VarReadNextInfo@plt+0x1218>
  4036e2:	imul   rbp,r12
  4036e6:	test   rbp,rbp
  4036e9:	je     403558 <Mat_VarReadNextInfo@plt+0x1218>
  4036ef:	xor    ebx,ebx
  4036f1:	nop    DWORD PTR [rax+0x0]
  4036f8:	mov    rdi,QWORD PTR [r13+rbx*8+0x0]
  4036fd:	add    rbx,0x1
  403701:	call   403440 <Mat_VarReadNextInfo@plt+0x1100>
  403706:	cmp    rbp,rbx
  403709:	jne    4036f8 <Mat_VarReadNextInfo@plt+0x13b8>
  40370b:	jmp    403552 <Mat_VarReadNextInfo@plt+0x1212>
  403710:	cmp    QWORD PTR [rdi+0x38],0x0
  403715:	je     40348d <Mat_VarReadNextInfo@plt+0x114d>
  40371b:	mov    edi,DWORD PTR [rdi+0xc]
  40371e:	call   4021f0 <Mat_SizeOf@plt>
  403723:	mov    edx,DWORD PTR [rbx+0x18]
  403726:	mov    rbp,rax
  403729:	test   edx,edx
  40372b:	je     403971 <Mat_VarReadNextInfo@plt+0x1631>
  403731:	mov    rax,QWORD PTR [rbx+0x38]
  403735:	mov    r14,QWORD PTR [rax]
  403738:	mov    rax,QWORD PTR [rax+0x8]
  40373c:	mov    QWORD PTR [rsp+0x8],rax
  403741:	mov    rax,QWORD PTR [rbx+0x28]
  403745:	cmp    QWORD PTR [rax+0x10],0x0
  40374a:	je     40348d <Mat_VarReadNextInfo@plt+0x114d>
  403750:	mov    QWORD PTR [rsp],0x0
  403758:	mov    rsi,QWORD PTR [rbx+0x30]
  40375c:	mov    rdx,QWORD PTR [rsp]
  403760:	lea    rdi,[rip+0x1939]        # 4050a0 <getopt_long_only@@Base+0x2f0>
  403767:	xor    eax,eax
  403769:	call   402120 <Mat_Message@plt>
  40376e:	mov    eax,DWORD PTR [rip+0x4c14]        # 408388 <opterr@@Base+0x14>
  403774:	mov    rcx,QWORD PTR [rbx+0x28]
  403778:	add    eax,0x1
  40377b:	cmp    QWORD PTR [rcx],0x0
  40377f:	mov    DWORD PTR [rip+0x4c03],eax        # 408388 <opterr@@Base+0x14>
  403785:	je     403873 <Mat_VarReadNextInfo@plt+0x1533>
  40378b:	xor    r12d,r12d
  40378e:	xchg   ax,ax
  403790:	xor    r15d,r15d
  403793:	test   eax,eax
  403795:	je     4037c7 <Mat_VarReadNextInfo@plt+0x1487>
  403797:	nop    WORD PTR [rax+rax*1+0x0]
  4037a0:	lea    rsi,[rip+0x18b9]        # 405060 <getopt_long_only@@Base+0x2b0>
  4037a7:	xor    eax,eax
  4037a9:	mov    edi,0x1
  4037ae:	add    r15,0x1
  4037b2:	call   402250 <__printf_chk@plt>
  4037b7:	movsxd rax,DWORD PTR [rip+0x4bca]        # 408388 <opterr@@Base+0x14>
  4037be:	cmp    r15,rax
  4037c1:	jb     4037a0 <Mat_VarReadNextInfo@plt+0x1460>
  4037c3:	mov    rcx,QWORD PTR [rbx+0x28]
  4037c7:	mov    rax,QWORD PTR [rcx+0x8]
  4037cb:	xor    r15d,r15d
  4037ce:	mov    rsi,rcx
  4037d1:	test   rax,rax
  4037d4:	je     40384b <Mat_VarReadNextInfo@plt+0x150b>
  4037d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037e0:	imul   rax,QWORD PTR [rsp]
  4037e5:	mov    edi,DWORD PTR [rbx+0xc]
  4037e8:	lea    rdx,[rax+r15*1]
  4037ec:	add    r15,0x1
  4037f0:	imul   rdx,QWORD PTR [rsi]
  4037f4:	add    rdx,r12
  4037f7:	imul   rdx,rbp
  4037fb:	lea    rsi,[r14+rdx*1]
  4037ff:	mov    r13,rdx
  403802:	call   402fa0 <Mat_VarReadNextInfo@plt+0xc60>
  403807:	lea    rsi,[rip+0x188b]        # 405099 <getopt_long_only@@Base+0x2e9>
  40380e:	mov    edi,0x1
  403813:	xor    eax,eax
  403815:	call   402250 <__printf_chk@plt>
  40381a:	mov    rax,QWORD PTR [rsp+0x8]
  40381f:	mov    edi,DWORD PTR [rbx+0xc]
  403822:	lea    rsi,[rax+r13*1]
  403826:	call   402fa0 <Mat_VarReadNextInfo@plt+0xc60>
  40382b:	lea    rsi,[rip+0x186b]        # 40509d <getopt_long_only@@Base+0x2ed>
  403832:	xor    eax,eax
  403834:	mov    edi,0x1
  403839:	call   402250 <__printf_chk@plt>
  40383e:	mov    rsi,QWORD PTR [rbx+0x28]
  403842:	mov    rax,QWORD PTR [rsi+0x8]
  403846:	cmp    rax,r15
  403849:	ja     4037e0 <Mat_VarReadNextInfo@plt+0x14a0>
  40384b:	mov    edi,0xa
  403850:	add    r12,0x1
  403854:	call   402080 <putchar@plt>
  403859:	mov    rcx,QWORD PTR [rbx+0x28]
  40385d:	cmp    r12,QWORD PTR [rcx]
  403860:	jae    40386d <Mat_VarReadNextInfo@plt+0x152d>
  403862:	mov    eax,DWORD PTR [rip+0x4b20]        # 408388 <opterr@@Base+0x14>
  403868:	jmp    403790 <Mat_VarReadNextInfo@plt+0x1450>
  40386d:	mov    eax,DWORD PTR [rip+0x4b15]        # 408388 <opterr@@Base+0x14>
  403873:	sub    eax,0x1
  403876:	mov    edi,0xa
  40387b:	mov    DWORD PTR [rip+0x4b07],eax        # 408388 <opterr@@Base+0x14>
  403881:	call   402080 <putchar@plt>
  403886:	mov    rax,QWORD PTR [rbx+0x28]
  40388a:	add    QWORD PTR [rsp],0x1
  40388f:	mov    rcx,QWORD PTR [rsp]
  403893:	cmp    rcx,QWORD PTR [rax+0x10]
  403897:	jb     403758 <Mat_VarReadNextInfo@plt+0x1418>
  40389d:	jmp    40348d <Mat_VarReadNextInfo@plt+0x114d>
  4038a2:	cmp    QWORD PTR [rdi+0x38],0x0
  4038a7:	je     40348d <Mat_VarReadNextInfo@plt+0x114d>
  4038ad:	mov    edi,DWORD PTR [rdi+0xc]
  4038b0:	call   4021f0 <Mat_SizeOf@plt>
  4038b5:	mov    ecx,DWORD PTR [rbx+0x18]
  4038b8:	mov    rbp,rax
  4038bb:	test   ecx,ecx
  4038bd:	je     403a93 <Mat_VarReadNextInfo@plt+0x1753>
  4038c3:	mov    rax,QWORD PTR [rbx+0x38]
  4038c7:	xor    r12d,r12d
  4038ca:	mov    r15,QWORD PTR [rax]
  4038cd:	mov    rax,QWORD PTR [rax+0x8]
  4038d1:	mov    QWORD PTR [rsp],rax
  4038d5:	mov    rax,QWORD PTR [rbx+0x28]
  4038d9:	cmp    QWORD PTR [rax],0x0
  4038dd:	je     40348d <Mat_VarReadNextInfo@plt+0x114d>
  4038e3:	xor    r13d,r13d
  4038e6:	cmp    QWORD PTR [rax+0x8],0x0
  4038eb:	je     403951 <Mat_VarReadNextInfo@plt+0x1611>
  4038ed:	nop    DWORD PTR [rax]
  4038f0:	mov    rdx,r13
  4038f3:	mov    edi,DWORD PTR [rbx+0xc]
  4038f6:	add    r13,0x1
  4038fa:	imul   rdx,QWORD PTR [rax]
  4038fe:	add    rdx,r12
  403901:	imul   rdx,rbp
  403905:	lea    rsi,[r15+rdx*1]
  403909:	mov    r14,rdx
  40390c:	call   402fa0 <Mat_VarReadNextInfo@plt+0xc60>
  403911:	lea    rsi,[rip+0x1781]        # 405099 <getopt_long_only@@Base+0x2e9>
  403918:	mov    edi,0x1
  40391d:	xor    eax,eax
  40391f:	call   402250 <__printf_chk@plt>
  403924:	mov    rax,QWORD PTR [rsp]
  403928:	mov    edi,DWORD PTR [rbx+0xc]
  40392b:	lea    rsi,[rax+r14*1]
  40392f:	call   402fa0 <Mat_VarReadNextInfo@plt+0xc60>
  403934:	lea    rsi,[rip+0x1762]        # 40509d <getopt_long_only@@Base+0x2ed>
  40393b:	xor    eax,eax
  40393d:	mov    edi,0x1
  403942:	call   402250 <__printf_chk@plt>
  403947:	mov    rax,QWORD PTR [rbx+0x28]
  40394b:	cmp    r13,QWORD PTR [rax+0x8]
  40394f:	jb     4038f0 <Mat_VarReadNextInfo@plt+0x15b0>
  403951:	mov    edi,0xa
  403956:	add    r12,0x1
  40395a:	call   402080 <putchar@plt>
  40395f:	mov    rax,QWORD PTR [rbx+0x28]
  403963:	cmp    r12,QWORD PTR [rax]
  403966:	jb     4038e3 <Mat_VarReadNextInfo@plt+0x15a3>
  40396c:	jmp    40348d <Mat_VarReadNextInfo@plt+0x114d>
  403971:	mov    rax,QWORD PTR [rbx+0x28]
  403975:	mov    r15,QWORD PTR [rbx+0x38]
  403979:	cmp    QWORD PTR [rax+0x10],0x0
  40397e:	je     40348d <Mat_VarReadNextInfo@plt+0x114d>
  403984:	xor    r13d,r13d
  403987:	mov    rsi,QWORD PTR [rbx+0x30]
  40398b:	lea    rdi,[rip+0x170e]        # 4050a0 <getopt_long_only@@Base+0x2f0>
  403992:	xor    eax,eax
  403994:	mov    rdx,r13
  403997:	call   402120 <Mat_Message@plt>
  40399c:	mov    eax,DWORD PTR [rip+0x49e6]        # 408388 <opterr@@Base+0x14>
  4039a2:	mov    rcx,QWORD PTR [rbx+0x28]
  4039a6:	add    eax,0x1
  4039a9:	cmp    QWORD PTR [rcx],0x0
  4039ad:	mov    DWORD PTR [rip+0x49d5],eax        # 408388 <opterr@@Base+0x14>
  4039b3:	je     403a69 <Mat_VarReadNextInfo@plt+0x1729>
  4039b9:	xor    r12d,r12d
  4039bc:	nop    DWORD PTR [rax+0x0]
  4039c0:	xor    r14d,r14d
  4039c3:	test   eax,eax
  4039c5:	je     4039f7 <Mat_VarReadNextInfo@plt+0x16b7>
  4039c7:	nop    WORD PTR [rax+rax*1+0x0]
  4039d0:	lea    rsi,[rip+0x1689]        # 405060 <getopt_long_only@@Base+0x2b0>
  4039d7:	xor    eax,eax
  4039d9:	mov    edi,0x1
  4039de:	add    r14,0x1
  4039e2:	call   402250 <__printf_chk@plt>
  4039e7:	movsxd rax,DWORD PTR [rip+0x499a]        # 408388 <opterr@@Base+0x14>
  4039ee:	cmp    r14,rax
  4039f1:	jb     4039d0 <Mat_VarReadNextInfo@plt+0x1690>
  4039f3:	mov    rcx,QWORD PTR [rbx+0x28]
  4039f7:	mov    rax,QWORD PTR [rcx+0x8]
  4039fb:	xor    r14d,r14d
  4039fe:	test   rax,rax
  403a01:	je     403a41 <Mat_VarReadNextInfo@plt+0x1701>
  403a03:	nop    DWORD PTR [rax+rax*1+0x0]
  403a08:	imul   rax,r13
  403a0c:	mov    edi,DWORD PTR [rbx+0xc]
  403a0f:	lea    rsi,[rax+r14*1]
  403a13:	add    r14,0x1
  403a17:	imul   rsi,QWORD PTR [rcx]
  403a1b:	add    rsi,r12
  403a1e:	imul   rsi,rbp
  403a22:	add    rsi,r15
  403a25:	call   402fa0 <Mat_VarReadNextInfo@plt+0xc60>
  403a2a:	mov    edi,0x20
  403a2f:	call   402080 <putchar@plt>
  403a34:	mov    rcx,QWORD PTR [rbx+0x28]
  403a38:	mov    rax,QWORD PTR [rcx+0x8]
  403a3c:	cmp    rax,r14
  403a3f:	ja     403a08 <Mat_VarReadNextInfo@plt+0x16c8>
  403a41:	mov    edi,0xa
  403a46:	add    r12,0x1
  403a4a:	call   402080 <putchar@plt>
  403a4f:	mov    rcx,QWORD PTR [rbx+0x28]
  403a53:	cmp    r12,QWORD PTR [rcx]
  403a56:	jae    403a63 <Mat_VarReadNextInfo@plt+0x1723>
  403a58:	mov    eax,DWORD PTR [rip+0x492a]        # 408388 <opterr@@Base+0x14>
  403a5e:	jmp    4039c0 <Mat_VarReadNextInfo@plt+0x1680>
  403a63:	mov    eax,DWORD PTR [rip+0x491f]        # 408388 <opterr@@Base+0x14>
  403a69:	sub    eax,0x1
  403a6c:	mov    edi,0xa
  403a71:	add    r13,0x1
  403a75:	mov    DWORD PTR [rip+0x490d],eax        # 408388 <opterr@@Base+0x14>
  403a7b:	call   402080 <putchar@plt>
  403a80:	mov    rax,QWORD PTR [rbx+0x28]
  403a84:	cmp    r13,QWORD PTR [rax+0x10]
  403a88:	jb     403987 <Mat_VarReadNextInfo@plt+0x1647>
  403a8e:	jmp    40348d <Mat_VarReadNextInfo@plt+0x114d>
  403a93:	mov    rax,QWORD PTR [rbx+0x28]
  403a97:	xor    r12d,r12d
  403a9a:	mov    r13,QWORD PTR [rbx+0x38]
  403a9e:	cmp    QWORD PTR [rax],0x0
  403aa2:	je     40348d <Mat_VarReadNextInfo@plt+0x114d>
  403aa8:	xor    r14d,r14d
  403aab:	cmp    QWORD PTR [rax+0x8],0x0
  403ab0:	je     403ae9 <Mat_VarReadNextInfo@plt+0x17a9>
  403ab2:	nop    WORD PTR [rax+rax*1+0x0]
  403ab8:	mov    rsi,r14
  403abb:	mov    edi,DWORD PTR [rbx+0xc]
  403abe:	add    r14,0x1
  403ac2:	imul   rsi,QWORD PTR [rax]
  403ac6:	add    rsi,r12
  403ac9:	imul   rsi,rbp
  403acd:	add    rsi,r13
  403ad0:	call   402fa0 <Mat_VarReadNextInfo@plt+0xc60>
  403ad5:	mov    edi,0x20
  403ada:	call   402080 <putchar@plt>
  403adf:	mov    rax,QWORD PTR [rbx+0x28]
  403ae3:	cmp    r14,QWORD PTR [rax+0x8]
  403ae7:	jb     403ab8 <Mat_VarReadNextInfo@plt+0x1778>
  403ae9:	mov    edi,0xa
  403aee:	add    r12,0x1
  403af2:	call   402080 <putchar@plt>
  403af7:	mov    rax,QWORD PTR [rbx+0x28]
  403afb:	cmp    r12,QWORD PTR [rax]
  403afe:	jb     403aa8 <Mat_VarReadNextInfo@plt+0x1768>
  403b00:	jmp    40348d <Mat_VarReadNextInfo@plt+0x114d>
  403b05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403b10:	push   r12
  403b12:	mov    esi,0x28
  403b17:	push   rbp
  403b18:	mov    r12,rdi
  403b1b:	push   rbx
  403b1c:	xor    ebp,ebp
  403b1e:	lea    rbx,[rip+0x15ea]        # 40510f <getopt_long_only@@Base+0x35f>
  403b25:	jmp    403b41 <Mat_VarReadNextInfo@plt+0x1801>
  403b27:	nop    WORD PTR [rax+rax*1+0x0]
  403b30:	test   rbp,rbp
  403b33:	je     403b53 <Mat_VarReadNextInfo@plt+0x1813>
  403b35:	add    rbx,0x1
  403b39:	movsx  esi,BYTE PTR [rbx]
  403b3c:	test   sil,sil
  403b3f:	je     403b62 <Mat_VarReadNextInfo@plt+0x1822>
  403b41:	mov    rdi,r12
  403b44:	call   402160 <strchr@plt>
  403b49:	test   rax,rax
  403b4c:	je     403b35 <Mat_VarReadNextInfo@plt+0x17f5>
  403b4e:	cmp    rax,rbp
  403b51:	jae    403b30 <Mat_VarReadNextInfo@plt+0x17f0>
  403b53:	add    rbx,0x1
  403b57:	movsx  esi,BYTE PTR [rbx]
  403b5a:	mov    rbp,rax
  403b5d:	test   sil,sil
  403b60:	jne    403b41 <Mat_VarReadNextInfo@plt+0x1801>
  403b62:	test   rbp,rbp
  403b65:	cmove  rbp,r12
  403b69:	mov    rax,rbp
  403b6c:	pop    rbx
  403b6d:	pop    rbp
  403b6e:	pop    r12
  403b70:	ret    
  403b71:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403b7c:	nop    DWORD PTR [rax+0x0]
  403b80:	push   r15
  403b82:	push   r14
  403b84:	lea    r10,[rdi+0x1]
  403b88:	push   r13
  403b8a:	push   r12
  403b8c:	mov    r13,r8
  403b8f:	push   rbp
  403b90:	push   rbx
  403b91:	mov    r12,rsi
  403b94:	lea    rbx,[rdi+0x2]
  403b98:	xor    r15d,r15d
  403b9b:	xor    r14d,r14d
  403b9e:	sub    rsp,0x18
  403ba2:	lea    rbp,[rip+0x156c]        # 405115 <getopt_long_only@@Base+0x365>
  403ba9:	mov    QWORD PTR [rsp],rdx
  403bad:	mov    QWORD PTR [rsp+0x8],rcx
  403bb2:	jmp    403be0 <Mat_VarReadNextInfo@plt+0x18a0>
  403bb4:	nop    DWORD PTR [rax+0x0]
  403bb8:	cmp    al,0x3a
  403bba:	je     403ca8 <Mat_VarReadNextInfo@plt+0x1968>
  403bc0:	cmp    al,0x29
  403bc2:	je     403c60 <Mat_VarReadNextInfo@plt+0x1920>
  403bc8:	cmp    al,0x7d
  403bca:	je     403c60 <Mat_VarReadNextInfo@plt+0x1920>
  403bd0:	lea    rax,[rbx+0x1]
  403bd4:	sub    rbx,0x1
  403bd8:	cmp    r12,rbx
  403bdb:	je     403c47 <Mat_VarReadNextInfo@plt+0x1907>
  403bdd:	mov    rbx,rax
  403be0:	movzx  eax,BYTE PTR [rbx-0x1]
  403be4:	cmp    al,0x2c
  403be6:	jne    403bb8 <Mat_VarReadNextInfo@plt+0x1878>
  403be8:	cmp    r14d,0x2
  403bec:	je     403d10 <Mat_VarReadNextInfo@plt+0x19d0>
  403bf2:	cmp    r14d,0x1
  403bf6:	je     403d10 <Mat_VarReadNextInfo@plt+0x19d0>
  403bfc:	test   r14d,r14d
  403bff:	jne    403c30 <Mat_VarReadNextInfo@plt+0x18f0>
  403c01:	mov    BYTE PTR [rbx-0x1],0x0
  403c05:	mov    ecx,0x4
  403c0a:	mov    rsi,r10
  403c0d:	mov    rdi,rbp
  403c10:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403c12:	jne    403e20 <Mat_VarReadNextInfo@plt+0x1ae0>
  403c18:	mov    rsi,QWORD PTR [rsp]
  403c1c:	movsxd rax,r15d
  403c1f:	mov    DWORD PTR [rsi+rax*4],0xffffffff
  403c26:	mov    DWORD PTR [r13+rax*4+0x0],0xffffffff
  403c2f:	nop
  403c30:	mov    r10,rbx
  403c33:	lea    rax,[rbx+0x1]
  403c37:	sub    rbx,0x1
  403c3b:	add    r15d,0x1
  403c3f:	xor    r14d,r14d
  403c42:	cmp    r12,rbx
  403c45:	jne    403bdd <Mat_VarReadNextInfo@plt+0x189d>
  403c47:	add    rsp,0x18
  403c4b:	pop    rbx
  403c4c:	pop    rbp
  403c4d:	pop    r12
  403c4f:	pop    r13
  403c51:	pop    r14
  403c53:	pop    r15
  403c55:	ret    
  403c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c60:	mov    BYTE PTR [rbx-0x1],0x0
  403c64:	mov    ecx,0x4
  403c69:	mov    rsi,r10
  403c6c:	mov    rdi,rbp
  403c6f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403c71:	jne    403d58 <Mat_VarReadNextInfo@plt+0x1a18>
  403c77:	test   r14d,r14d
  403c7a:	jne    403cd8 <Mat_VarReadNextInfo@plt+0x1998>
  403c7c:	mov    rsi,QWORD PTR [rsp]
  403c80:	movsxd rax,r15d
  403c83:	mov    DWORD PTR [rsi+rax*4],0xffffffff
  403c8a:	mov    DWORD PTR [r13+rax*4+0x0],0xffffffff
  403c93:	nop    DWORD PTR [rax+rax*1+0x0]
  403c98:	add    r14d,0x1
  403c9c:	mov    r10,rbx
  403c9f:	jmp    403bd0 <Mat_VarReadNextInfo@plt+0x1890>
  403ca4:	nop    DWORD PTR [rax+0x0]
  403ca8:	mov    BYTE PTR [rbx-0x1],0x0
  403cac:	mov    ecx,0x4
  403cb1:	mov    rsi,r10
  403cb4:	mov    rdi,rbp
  403cb7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403cb9:	jne    403d90 <Mat_VarReadNextInfo@plt+0x1a50>
  403cbf:	test   r14d,r14d
  403cc2:	jne    403cd8 <Mat_VarReadNextInfo@plt+0x1998>
  403cc4:	mov    rcx,QWORD PTR [rsp]
  403cc8:	movsxd rax,r15d
  403ccb:	mov    DWORD PTR [rcx+rax*4],0xffffffff
  403cd2:	jmp    403c98 <Mat_VarReadNextInfo@plt+0x1958>
  403cd4:	nop    DWORD PTR [rax+0x0]
  403cd8:	cmp    r14d,0x1
  403cdc:	je     403d40 <Mat_VarReadNextInfo@plt+0x1a00>
  403cde:	cmp    r14d,0x2
  403ce2:	je     403d40 <Mat_VarReadNextInfo@plt+0x1a00>
  403ce4:	mov    rax,QWORD PTR [rip+0x4305]        # 407ff0 <getopt_long_only@@Base+0x3240>
  403ceb:	lea    ecx,[r15+0x1]
  403cef:	lea    rdx,[rip+0x1423]        # 405119 <getopt_long_only@@Base+0x369>
  403cf6:	mov    esi,0x1
  403cfb:	mov    rdi,QWORD PTR [rax]
  403cfe:	xor    eax,eax
  403d00:	call   4022f0 <__fprintf_chk@plt>
  403d05:	jmp    403c98 <Mat_VarReadNextInfo@plt+0x1958>
  403d07:	nop    WORD PTR [rax+rax*1+0x0]
  403d10:	mov    BYTE PTR [rbx-0x1],0x0
  403d14:	mov    ecx,0x4
  403d19:	mov    rsi,r10
  403d1c:	mov    rdi,rbp
  403d1f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403d21:	jne    403e00 <Mat_VarReadNextInfo@plt+0x1ac0>
  403d27:	movsxd rax,r15d
  403d2a:	mov    DWORD PTR [r13+rax*4+0x0],0xffffffff
  403d33:	jmp    403c30 <Mat_VarReadNextInfo@plt+0x18f0>
  403d38:	nop    DWORD PTR [rax+rax*1+0x0]
  403d40:	movsxd rax,r15d
  403d43:	mov    DWORD PTR [r13+rax*4+0x0],0xffffffff
  403d4c:	jmp    403c98 <Mat_VarReadNextInfo@plt+0x1958>
  403d51:	nop    DWORD PTR [rax+0x0]
  403d58:	xor    esi,esi
  403d5a:	mov    edx,0xa
  403d5f:	mov    rdi,r10
  403d62:	call   4021d0 <strtol@plt>
  403d67:	test   r14d,r14d
  403d6a:	je     403dc0 <Mat_VarReadNextInfo@plt+0x1a80>
  403d6c:	cmp    r14d,0x1
  403d70:	je     403d7c <Mat_VarReadNextInfo@plt+0x1a3c>
  403d72:	cmp    r14d,0x2
  403d76:	jne    403ce4 <Mat_VarReadNextInfo@plt+0x19a4>
  403d7c:	movsxd rdx,r15d
  403d7f:	mov    DWORD PTR [r13+rdx*4+0x0],eax
  403d84:	jmp    403c98 <Mat_VarReadNextInfo@plt+0x1958>
  403d89:	nop    DWORD PTR [rax+0x0]
  403d90:	xor    esi,esi
  403d92:	mov    edx,0xa
  403d97:	mov    rdi,r10
  403d9a:	call   4021d0 <strtol@plt>
  403d9f:	test   r14d,r14d
  403da2:	jne    403de0 <Mat_VarReadNextInfo@plt+0x1aa0>
  403da4:	mov    rcx,QWORD PTR [rsp]
  403da8:	movsxd rdx,r15d
  403dab:	sub    eax,0x1
  403dae:	mov    DWORD PTR [rcx+rdx*4],eax
  403db1:	jmp    403c98 <Mat_VarReadNextInfo@plt+0x1958>
  403db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403dc0:	mov    rdi,QWORD PTR [rsp]
  403dc4:	lea    ecx,[rax-0x1]
  403dc7:	movsxd rdx,r15d
  403dca:	mov    DWORD PTR [rdi+rdx*4],ecx
  403dcd:	mov    DWORD PTR [r13+rdx*4+0x0],eax
  403dd2:	jmp    403c98 <Mat_VarReadNextInfo@plt+0x1958>
  403dd7:	nop    WORD PTR [rax+rax*1+0x0]
  403de0:	cmp    r14d,0x1
  403de4:	jne    403d72 <Mat_VarReadNextInfo@plt+0x1a32>
  403de6:	mov    rcx,QWORD PTR [rsp+0x8]
  403deb:	movsxd rdx,r15d
  403dee:	mov    DWORD PTR [rcx+rdx*4],eax
  403df1:	jmp    403c98 <Mat_VarReadNextInfo@plt+0x1958>
  403df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e00:	mov    edx,0xa
  403e05:	xor    esi,esi
  403e07:	mov    rdi,r10
  403e0a:	call   4021d0 <strtol@plt>
  403e0f:	movsxd rdx,r15d
  403e12:	mov    DWORD PTR [r13+rdx*4+0x0],eax
  403e17:	jmp    403c30 <Mat_VarReadNextInfo@plt+0x18f0>
  403e1c:	nop    DWORD PTR [rax+0x0]
  403e20:	mov    edx,0xa
  403e25:	xor    esi,esi
  403e27:	mov    rdi,r10
  403e2a:	call   4021d0 <strtol@plt>
  403e2f:	mov    rsi,QWORD PTR [rsp]
  403e33:	lea    ecx,[rax-0x1]
  403e36:	movsxd rdx,r15d
  403e39:	mov    DWORD PTR [rsi+rdx*4],ecx
  403e3c:	mov    DWORD PTR [r13+rdx*4+0x0],eax
  403e41:	jmp    403c30 <Mat_VarReadNextInfo@plt+0x18f0>
  403e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e50:	push   r15
  403e52:	push   r14
  403e54:	mov    r14,rdx
  403e57:	push   r13
  403e59:	push   r12
  403e5b:	push   rbp
  403e5c:	push   rbx
  403e5d:	sub    rsp,0x18
  403e61:	cmp    edi,r8d
  403e64:	je     403e80 <Mat_VarReadNextInfo@plt+0x1b40>
  403e66:	cmp    edi,0x1
  403e69:	je     403e80 <Mat_VarReadNextInfo@plt+0x1b40>
  403e6b:	xor    ebx,ebx
  403e6d:	add    rsp,0x18
  403e71:	mov    eax,ebx
  403e73:	pop    rbx
  403e74:	pop    rbp
  403e75:	pop    r12
  403e77:	pop    r13
  403e79:	pop    r14
  403e7b:	pop    r15
  403e7d:	ret    
  403e7e:	xchg   ax,ax
  403e80:	cmp    edi,0x1
  403e83:	je     404030 <Mat_VarReadNextInfo@plt+0x1cf0>
  403e89:	test   edi,edi
  403e8b:	jle    4041e0 <Mat_VarReadNextInfo@plt+0x1ea0>
  403e91:	mov    r8d,DWORD PTR [r14]
  403e94:	test   r8d,r8d
  403e97:	jle    4040b0 <Mat_VarReadNextInfo@plt+0x1d70>
  403e9d:	lea    eax,[rdi-0x1]
  403ea0:	mov    r12,rcx
  403ea3:	mov    r13,rsi
  403ea6:	xor    r15d,r15d
  403ea9:	mov    ebx,0x1
  403eae:	xor    ebp,ebp
  403eb0:	mov    QWORD PTR [rsp],rax
  403eb4:	mov    rdx,QWORD PTR [r9]
  403eb7:	jmp    403f62 <Mat_VarReadNextInfo@plt+0x1c22>
  403ebc:	nop    DWORD PTR [rax+0x0]
  403ec0:	test   edi,edi
  403ec2:	js     403f78 <Mat_VarReadNextInfo@plt+0x1c38>
  403ec8:	mov    r9,QWORD PTR [rdx+r15*1]
  403ecc:	movsxd rsi,edi
  403ecf:	cmp    rsi,r9
  403ed2:	ja     404110 <Mat_VarReadNextInfo@plt+0x1dd0>
  403ed8:	movsxd r10,DWORD PTR [r13+0x0]
  403edc:	cmp    r9,r10
  403edf:	mov    rsi,r10
  403ee2:	jbe    4040e0 <Mat_VarReadNextInfo@plt+0x1da0>
  403ee8:	test   edi,edi
  403eea:	jle    403ef5 <Mat_VarReadNextInfo@plt+0x1bb5>
  403eec:	cmp    edi,r10d
  403eef:	jl     4040e0 <Mat_VarReadNextInfo@plt+0x1da0>
  403ef5:	lea    ecx,[rsi+0x1]
  403ef8:	cmp    edi,ecx
  403efa:	je     403fb0 <Mat_VarReadNextInfo@plt+0x1c70>
  403f00:	test   edi,edi
  403f02:	jle    403f38 <Mat_VarReadNextInfo@plt+0x1bf8>
  403f04:	vxorpd xmm0,xmm0,xmm0
  403f08:	sub    edi,esi
  403f0a:	mov    QWORD PTR [rsp+0x8],rdx
  403f0f:	sub    edi,0x1
  403f12:	vcvtsi2sd xmm0,xmm0,edi
  403f16:	vxorpd xmm1,xmm1,xmm1
  403f1a:	vcvtsi2sd xmm1,xmm1,r8d
  403f1f:	vdivsd xmm0,xmm0,xmm1
  403f23:	call   4022a0 <floor@plt>
  403f28:	vcvttsd2si edi,xmm0
  403f2c:	mov    rdx,QWORD PTR [rsp+0x8]
  403f31:	add    edi,0x1
  403f34:	mov    DWORD PTR [r12],edi
  403f38:	imul   ebx,edi
  403f3b:	cmp    QWORD PTR [rsp],rbp
  403f3f:	je     403e6d <Mat_VarReadNextInfo@plt+0x1b2d>
  403f45:	add    rbp,0x1
  403f49:	add    r12,0x4
  403f4d:	add    r15,0x8
  403f51:	mov    r8d,DWORD PTR [r14+rbp*4]
  403f55:	add    r13,0x4
  403f59:	test   r8d,r8d
  403f5c:	jle    4040b0 <Mat_VarReadNextInfo@plt+0x1d70>
  403f62:	mov    edi,DWORD PTR [r12]
  403f66:	mov    ecx,ebp
  403f68:	cmp    edi,0xffffffff
  403f6b:	jne    403ec0 <Mat_VarReadNextInfo@plt+0x1b80>
  403f71:	cmp    DWORD PTR [r13+0x0],0xffffffff
  403f76:	je     403fc8 <Mat_VarReadNextInfo@plt+0x1c88>
  403f78:	cmp    r8d,0x1
  403f7c:	je     403fe8 <Mat_VarReadNextInfo@plt+0x1ca8>
  403f7e:	mov    rax,QWORD PTR [rdx+r15*1]
  403f82:	movsxd rcx,DWORD PTR [r13+0x0]
  403f86:	lea    rdi,[rax-0x1]
  403f8a:	sub    rdi,rcx
  403f8d:	js     404010 <Mat_VarReadNextInfo@plt+0x1cd0>
  403f93:	vxorpd xmm0,xmm0,xmm0
  403f97:	vcvtsi2sd xmm0,xmm0,rdi
  403f9c:	mov    QWORD PTR [rsp+0x8],rdx
  403fa1:	jmp    403f16 <Mat_VarReadNextInfo@plt+0x1bd6>
  403fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403fb0:	mov    DWORD PTR [r12],0x1
  403fb8:	mov    edi,0x1
  403fbd:	jmp    403f38 <Mat_VarReadNextInfo@plt+0x1bf8>
  403fc2:	nop    WORD PTR [rax+rax*1+0x0]
  403fc8:	mov    eax,DWORD PTR [rdx+r15*1]
  403fcc:	mov    DWORD PTR [r12],0x1
  403fd4:	lea    ecx,[rax-0x1]
  403fd7:	mov    DWORD PTR [r13+0x0],ecx
  403fdb:	mov    edi,DWORD PTR [r12]
  403fdf:	jmp    403f38 <Mat_VarReadNextInfo@plt+0x1bf8>
  403fe4:	nop    DWORD PTR [rax+0x0]
  403fe8:	mov    rcx,QWORD PTR [rdx+r15*1]
  403fec:	mov    DWORD PTR [r12],ecx
  403ff0:	mov    eax,DWORD PTR [r13+0x0]
  403ff4:	mov    edi,ecx
  403ff6:	test   eax,eax
  403ff8:	jns    403f38 <Mat_VarReadNextInfo@plt+0x1bf8>
  403ffe:	mov    DWORD PTR [r13+0x0],0x0
  404006:	mov    edi,DWORD PTR [r12]
  40400a:	jmp    403f38 <Mat_VarReadNextInfo@plt+0x1bf8>
  40400f:	nop
  404010:	mov    rcx,rdi
  404013:	vxorpd xmm0,xmm0,xmm0
  404017:	shr    rcx,1
  40401a:	and    edi,0x1
  40401d:	or     rcx,rdi
  404020:	vcvtsi2sd xmm0,xmm0,rcx
  404025:	vaddsd xmm0,xmm0,xmm0
  404029:	jmp    403f9c <Mat_VarReadNextInfo@plt+0x1c5c>
  40402e:	xchg   ax,ax
  404030:	test   r8d,r8d
  404033:	jle    404054 <Mat_VarReadNextInfo@plt+0x1d14>
  404035:	mov    rax,QWORD PTR [r9]
  404038:	lea    edx,[r8-0x1]
  40403c:	lea    rdx,[rax+rdx*8+0x8]
  404041:	nop    DWORD PTR [rax+0x0]
  404048:	imul   edi,DWORD PTR [rax]
  40404b:	add    rax,0x8
  40404f:	cmp    rdx,rax
  404052:	jne    404048 <Mat_VarReadNextInfo@plt+0x1d08>
  404054:	mov    edx,DWORD PTR [r14]
  404057:	test   edx,edx
  404059:	jle    404189 <Mat_VarReadNextInfo@plt+0x1e49>
  40405f:	mov    ebx,DWORD PTR [rcx]
  404061:	cmp    ebx,edi
  404063:	jg     404164 <Mat_VarReadNextInfo@plt+0x1e24>
  404069:	mov    r8d,DWORD PTR [rsi]
  40406c:	cmp    r8d,edi
  40406f:	jge    404082 <Mat_VarReadNextInfo@plt+0x1d42>
  404071:	cmp    ebx,r8d
  404074:	jge    40411c <Mat_VarReadNextInfo@plt+0x1ddc>
  40407a:	test   ebx,ebx
  40407c:	jle    40411c <Mat_VarReadNextInfo@plt+0x1ddc>
  404082:	mov    rax,QWORD PTR [rip+0x3f67]        # 407ff0 <getopt_long_only@@Base+0x3240>
  404089:	lea    rdi,[rip+0x10cd]        # 40515d <getopt_long_only@@Base+0x3ad>
  404090:	mov    edx,0x12
  404095:	mov    esi,0x1
  40409a:	mov    rcx,QWORD PTR [rax]
  40409d:	call   4022e0 <fwrite@plt>
  4040a2:	jmp    403e6b <Mat_VarReadNextInfo@plt+0x1b2b>
  4040a7:	nop    WORD PTR [rax+rax*1+0x0]
  4040b0:	mov    rax,QWORD PTR [rip+0x3f39]        # 407ff0 <getopt_long_only@@Base+0x3240>
  4040b7:	lea    rdi,[rip+0x1075]        # 405133 <getopt_long_only@@Base+0x383>
  4040be:	mov    edx,0x17
  4040c3:	mov    esi,0x1
  4040c8:	xor    ebx,ebx
  4040ca:	mov    rcx,QWORD PTR [rax]
  4040cd:	call   4022e0 <fwrite@plt>
  4040d2:	jmp    403e6d <Mat_VarReadNextInfo@plt+0x1b2d>
  4040d7:	nop    WORD PTR [rax+rax*1+0x0]
  4040e0:	lea    rdx,[rip+0x1329]        # 405410 <getopt_long_only@@Base+0x660>
  4040e7:	add    ecx,0x1
  4040ea:	mov    rax,QWORD PTR [rip+0x3eff]        # 407ff0 <getopt_long_only@@Base+0x3240>
  4040f1:	mov    esi,0x1
  4040f6:	xor    ebx,ebx
  4040f8:	mov    rdi,QWORD PTR [rax]
  4040fb:	xor    eax,eax
  4040fd:	call   4022f0 <__fprintf_chk@plt>
  404102:	jmp    403e6d <Mat_VarReadNextInfo@plt+0x1b2d>
  404107:	nop    WORD PTR [rax+rax*1+0x0]
  404110:	add    ecx,0x1
  404113:	lea    rdx,[rip+0x12ce]        # 4053e8 <getopt_long_only@@Base+0x638>
  40411a:	jmp    4040ea <Mat_VarReadNextInfo@plt+0x1daa>
  40411c:	cmp    ebx,0xffffffff
  40411f:	je     4041ae <Mat_VarReadNextInfo@plt+0x1e6e>
  404125:	test   ebx,ebx
  404127:	mov    QWORD PTR [rsp],rcx
  40412b:	jle    403e6d <Mat_VarReadNextInfo@plt+0x1b2d>
  404131:	mov    eax,ebx
  404133:	vxorpd xmm1,xmm1,xmm1
  404137:	vxorpd xmm0,xmm0,xmm0
  40413b:	sub    eax,r8d
  40413e:	sub    eax,0x1
  404141:	vcvtsi2sd xmm1,xmm1,eax
  404145:	vcvtsi2sd xmm0,xmm0,edx
  404149:	vdivsd xmm0,xmm1,xmm0
  40414d:	call   4022a0 <floor@plt>
  404152:	vcvttsd2si eax,xmm0
  404156:	mov    rcx,QWORD PTR [rsp]
  40415a:	lea    ebx,[rax+0x1]
  40415d:	mov    DWORD PTR [rcx],ebx
  40415f:	jmp    403e6d <Mat_VarReadNextInfo@plt+0x1b2d>
  404164:	mov    rax,QWORD PTR [rip+0x3e85]        # 407ff0 <getopt_long_only@@Base+0x3240>
  40416b:	lea    rdi,[rip+0xfd9]        # 40514b <getopt_long_only@@Base+0x39b>
  404172:	mov    edx,0x11
  404177:	mov    esi,0x1
  40417c:	mov    rcx,QWORD PTR [rax]
  40417f:	call   4022e0 <fwrite@plt>
  404184:	jmp    403e6b <Mat_VarReadNextInfo@plt+0x1b2b>
  404189:	mov    rax,QWORD PTR [rip+0x3e60]        # 407ff0 <getopt_long_only@@Base+0x3240>
  404190:	lea    rdi,[rip+0xf9c]        # 405133 <getopt_long_only@@Base+0x383>
  404197:	mov    edx,0x17
  40419c:	mov    esi,0x1
  4041a1:	mov    rcx,QWORD PTR [rax]
  4041a4:	call   4022e0 <fwrite@plt>
  4041a9:	jmp    403e6b <Mat_VarReadNextInfo@plt+0x1b2b>
  4041ae:	cmp    r8d,0xffffffff
  4041b2:	je     4041ea <Mat_VarReadNextInfo@plt+0x1eaa>
  4041b4:	cmp    edx,0x1
  4041b7:	mov    DWORD PTR [rcx],edi
  4041b9:	je     4041fc <Mat_VarReadNextInfo@plt+0x1ebc>
  4041bb:	mov    eax,edi
  4041bd:	sub    eax,DWORD PTR [rsi]
  4041bf:	mov    QWORD PTR [rsp],rcx
  4041c3:	vxorpd xmm0,xmm0,xmm0
  4041c7:	vxorpd xmm1,xmm1,xmm1
  4041cb:	sub    eax,0x1
  4041ce:	vcvtsi2sd xmm0,xmm0,eax
  4041d2:	vcvtsi2sd xmm1,xmm1,DWORD PTR [r14]
  4041d7:	vdivsd xmm0,xmm0,xmm1
  4041db:	jmp    40414d <Mat_VarReadNextInfo@plt+0x1e0d>
  4041e0:	mov    ebx,0x1
  4041e5:	jmp    403e6d <Mat_VarReadNextInfo@plt+0x1b2d>
  4041ea:	sub    edi,0x1
  4041ed:	mov    DWORD PTR [rcx],0x1
  4041f3:	mov    DWORD PTR [rsi],edi
  4041f5:	mov    ebx,DWORD PTR [rcx]
  4041f7:	jmp    403e6d <Mat_VarReadNextInfo@plt+0x1b2d>
  4041fc:	mov    edx,DWORD PTR [rsi]
  4041fe:	mov    ebx,edi
  404200:	test   edx,edx
  404202:	jns    403e6d <Mat_VarReadNextInfo@plt+0x1b2d>
  404208:	mov    DWORD PTR [rsi],0x0
  40420e:	mov    ebx,DWORD PTR [rcx]
  404210:	jmp    403e6d <Mat_VarReadNextInfo@plt+0x1b2d>
  404215:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40421f:	nop
  404220:	push   r13
  404222:	push   r12
  404224:	mov    r8d,edx
  404227:	push   rbp
  404228:	mov    ebp,esi
  40422a:	push   rbx
  40422b:	sub    ebp,edi
  40422d:	mov    ebx,edx
  40422f:	mov    eax,ebp
  404231:	sub    ebx,esi
  404233:	cdq    
  404234:	idiv   ebx
  404236:	test   edx,edx
  404238:	je     4042c9 <Mat_VarReadNextInfo@plt+0x1f89>
  40423e:	mov    r12d,edx
  404241:	mov    eax,ebx
  404243:	jmp    40424b <Mat_VarReadNextInfo@plt+0x1f0b>
  404245:	nop    DWORD PTR [rax]
  404248:	mov    r12d,edx
  40424b:	cdq    
  40424c:	idiv   r12d
  40424f:	mov    eax,r12d
  404252:	test   edx,edx
  404254:	jne    404248 <Mat_VarReadNextInfo@plt+0x1f08>
  404256:	mov    eax,r8d
  404259:	sub    eax,edi
  40425b:	cdq    
  40425c:	idiv   r12d
  40425f:	test   r12d,r12d
  404262:	jle    4042c2 <Mat_VarReadNextInfo@plt+0x1f82>
  404264:	movsxd rdx,esi
  404267:	mov    r13d,esi
  40426a:	add    r12d,esi
  40426d:	lea    r11,[rcx+rdx*8]
  404271:	nop    DWORD PTR [rax+0x0]
  404278:	test   eax,eax
  40427a:	mov    edx,r13d
  40427d:	jle    4042b5 <Mat_VarReadNextInfo@plt+0x1f75>
  40427f:	mov    r10,QWORD PTR [r11]
  404282:	xor    edi,edi
  404284:	nop    DWORD PTR [rax+0x0]
  404288:	mov    r8d,edx
  40428b:	lea    r9d,[rdx+rbx*1]
  40428f:	sub    r8d,ebp
  404292:	cmp    esi,edx
  404294:	mov    edx,r8d
  404297:	cmovg  edx,r9d
  40429b:	add    edi,0x1
  40429e:	movsxd r8,edx
  4042a1:	cmp    eax,edi
  4042a3:	lea    r9,[rcx+r8*8]
  4042a7:	mov    r8,QWORD PTR [r9]
  4042aa:	mov    QWORD PTR [r9],r10
  4042ad:	mov    QWORD PTR [r11],r8
  4042b0:	mov    r10,r8
  4042b3:	jne    404288 <Mat_VarReadNextInfo@plt+0x1f48>
  4042b5:	add    r13d,0x1
  4042b9:	add    r11,0x8
  4042bd:	cmp    r13d,r12d
  4042c0:	jne    404278 <Mat_VarReadNextInfo@plt+0x1f38>
  4042c2:	pop    rbx
  4042c3:	pop    rbp
  4042c4:	pop    r12
  4042c6:	pop    r13
  4042c8:	ret    
  4042c9:	mov    r12d,ebx
  4042cc:	jmp    404256 <Mat_VarReadNextInfo@plt+0x1f16>
  4042ce:	xchg   ax,ax
  4042d0:	push   r15
  4042d2:	push   r14
  4042d4:	mov    r14d,r8d
  4042d7:	push   r13
  4042d9:	push   r12
  4042db:	push   rbp
  4042dc:	push   rbx
  4042dd:	sub    rsp,0x58
  4042e1:	mov    eax,DWORD PTR [rip+0x4079]        # 408360 <getopt_long_only@@Base+0x35b0>
  4042e7:	mov    r13,QWORD PTR [rip+0x408a]        # 408378 <opterr@@Base+0x4>
  4042ee:	mov    QWORD PTR [rsp+0x38],rcx
  4042f3:	lea    rcx,[rip+0x15be]        # 4058b8 <getopt_long_only@@Base+0xb08>
  4042fa:	mov    QWORD PTR [rsp+0x48],rdi
  4042ff:	mov    QWORD PTR [rsp+0x30],rsi
  404304:	mov    QWORD PTR [rsp+0x10],rdx
  404309:	cmp    eax,0x1
  40430c:	mov    QWORD PTR [rsp+0x20],rcx
  404311:	je     40433d <Mat_VarReadNextInfo@plt+0x1ffd>
  404313:	lea    rcx,[rip+0x15a1]        # 4058bb <getopt_long_only@@Base+0xb0b>
  40431a:	cmp    eax,0x2
  40431d:	mov    QWORD PTR [rsp+0x20],rcx
  404322:	je     40433d <Mat_VarReadNextInfo@plt+0x1ffd>
  404324:	test   eax,eax
  404326:	lea    rdx,[rip+0x158c]        # 4058b9 <getopt_long_only@@Base+0xb09>
  40432d:	lea    rax,[rip+0xe52]        # 405186 <getopt_long_only@@Base+0x3d6>
  404334:	cmove  rax,rdx
  404338:	mov    QWORD PTR [rsp+0x20],rax
  40433d:	mov    rax,0x408370
  404344:	mov    rcx,0x408370
  40434b:	mov    esi,0x3d
  404350:	mov    rdi,r13
  404353:	mov    DWORD PTR [rsp+0xc],r9d
  404358:	mov    eax,DWORD PTR [rax]
  40435a:	mov    DWORD PTR [rsp+0x40],eax
  40435e:	add    eax,0x1
  404361:	mov    DWORD PTR [rsp+0x44],eax
  404365:	mov    DWORD PTR [rcx],eax
  404367:	call   402160 <strchr@plt>
  40436c:	test   rax,rax
  40436f:	mov    QWORD PTR [rsp+0x28],rax
  404374:	mov    r9d,DWORD PTR [rsp+0xc]
  404379:	je     404560 <Mat_VarReadNextInfo@plt+0x2220>
  40437f:	mov    r12,rax
  404382:	add    rax,0x1
  404386:	sub    r12,r13
  404389:	mov    QWORD PTR [rsp+0x28],rax
  40438e:	mov    rax,QWORD PTR [rsp+0x10]
  404393:	mov    r15,QWORD PTR [rax]
  404396:	test   r15,r15
  404399:	je     4045b1 <Mat_VarReadNextInfo@plt+0x2271>
  40439f:	and    r9d,0x4
  4043a3:	lea    rbx,[rax+0x8]
  4043a7:	mov    DWORD PTR [rsp+0x18],0x0
  4043af:	mov    DWORD PTR [rsp+0xc],0xffffffff
  4043b7:	xor    ebp,ebp
  4043b9:	mov    DWORD PTR [rsp+0x1c],r9d
  4043be:	jmp    4043d6 <Mat_VarReadNextInfo@plt+0x2096>
  4043c0:	cmp    r12,0x1
  4043c4:	jne    4043fe <Mat_VarReadNextInfo@plt+0x20be>
  4043c6:	add    rbx,0x20
  4043ca:	mov    r15,QWORD PTR [rbx-0x8]
  4043ce:	add    ebp,0x1
  4043d1:	test   r15,r15
  4043d4:	je     404448 <Mat_VarReadNextInfo@plt+0x2108>
  4043d6:	mov    rdx,r12
  4043d9:	mov    rsi,r15
  4043dc:	mov    rdi,r13
  4043df:	call   4020b0 <strncmp@plt>
  4043e4:	test   eax,eax
  4043e6:	jne    4043c6 <Mat_VarReadNextInfo@plt+0x2086>
  4043e8:	mov    rdi,r15
  4043eb:	call   402130 <strlen@plt>
  4043f0:	cmp    r12,rax
  4043f3:	je     4044f0 <Mat_VarReadNextInfo@plt+0x21b0>
  4043f9:	test   r14d,r14d
  4043fc:	jne    4043c0 <Mat_VarReadNextInfo@plt+0x2080>
  4043fe:	movsxd rax,DWORD PTR [rsp+0xc]
  404403:	cmp    eax,0xffffffff
  404406:	je     4044a8 <Mat_VarReadNextInfo@plt+0x2168>
  40440c:	mov    r8d,DWORD PTR [rsp+0x1c]
  404411:	test   r8d,r8d
  404414:	jne    40442a <Mat_VarReadNextInfo@plt+0x20ea>
  404416:	shl    rax,0x5
  40441a:	add    rax,QWORD PTR [rsp+0x10]
  40441f:	mov    ecx,DWORD PTR [rax+0x8]
  404422:	cmp    DWORD PTR [rbx],ecx
  404424:	je     4044b8 <Mat_VarReadNextInfo@plt+0x2178>
  40442a:	add    rbx,0x20
  40442e:	mov    r15,QWORD PTR [rbx-0x8]
  404432:	add    ebp,0x1
  404435:	mov    DWORD PTR [rsp+0x18],0x1
  40443d:	test   r15,r15
  404440:	jne    4043d6 <Mat_VarReadNextInfo@plt+0x2096>
  404442:	nop    WORD PTR [rax+rax*1+0x0]
  404448:	mov    edi,DWORD PTR [rsp+0x18]
  40444c:	test   edi,edi
  40444e:	je     4044df <Mat_VarReadNextInfo@plt+0x219f>
  404454:	mov    rax,0x408374
  40445b:	mov    esi,DWORD PTR [rax]
  40445d:	test   esi,esi
  40445f:	je     404484 <Mat_VarReadNextInfo@plt+0x2144>
  404461:	mov    rax,QWORD PTR [rsp+0x30]
  404466:	cmp    BYTE PTR [rax],0x3a
  404469:	je     404484 <Mat_VarReadNextInfo@plt+0x2144>
  40446b:	mov    rsi,QWORD PTR [rsp+0x20]
  404470:	lea    rdi,[rip+0x14b9]        # 405930 <getopt_long_only@@Base+0xb80>
  404477:	mov    rcx,r13
  40447a:	mov    edx,r12d
  40447d:	xor    eax,eax
  40447f:	call   402170 <warnx@plt>
  404484:	mov    rax,0x40836c
  40448b:	mov    DWORD PTR [rax],0x0
  404491:	mov    eax,0x3f
  404496:	add    rsp,0x58
  40449a:	pop    rbx
  40449b:	pop    rbp
  40449c:	pop    r12
  40449e:	pop    r13
  4044a0:	pop    r14
  4044a2:	pop    r15
  4044a4:	ret    
  4044a5:	nop    DWORD PTR [rax]
  4044a8:	mov    DWORD PTR [rsp+0xc],ebp
  4044ac:	jmp    4043c6 <Mat_VarReadNextInfo@plt+0x2086>
  4044b1:	nop    DWORD PTR [rax+0x0]
  4044b8:	mov    rcx,QWORD PTR [rax+0x10]
  4044bc:	cmp    QWORD PTR [rbx+0x8],rcx
  4044c0:	jne    40442a <Mat_VarReadNextInfo@plt+0x20ea>
  4044c6:	mov    eax,DWORD PTR [rax+0x18]
  4044c9:	cmp    DWORD PTR [rbx+0x10],eax
  4044cc:	mov    eax,0x1
  4044d1:	cmove  eax,DWORD PTR [rsp+0x18]
  4044d6:	mov    DWORD PTR [rsp+0x18],eax
  4044da:	jmp    4043c6 <Mat_VarReadNextInfo@plt+0x2086>
  4044df:	cmp    DWORD PTR [rsp+0xc],0xffffffff
  4044e4:	je     4045b1 <Mat_VarReadNextInfo@plt+0x2271>
  4044ea:	mov    ebp,DWORD PTR [rsp+0xc]
  4044ee:	xchg   ax,ax
  4044f0:	movsxd rbx,ebp
  4044f3:	shl    rbx,0x5
  4044f7:	add    rbx,QWORD PTR [rsp+0x10]
  4044fc:	mov    eax,DWORD PTR [rbx+0x8]
  4044ff:	test   eax,eax
  404501:	jne    40457a <Mat_VarReadNextInfo@plt+0x223a>
  404503:	cmp    QWORD PTR [rsp+0x28],0x0
  404509:	je     40457a <Mat_VarReadNextInfo@plt+0x223a>
  40450b:	mov    rax,0x408374
  404512:	mov    ecx,DWORD PTR [rax]
  404514:	test   ecx,ecx
  404516:	je     40453b <Mat_VarReadNextInfo@plt+0x21fb>
  404518:	mov    rax,QWORD PTR [rsp+0x30]
  40451d:	cmp    BYTE PTR [rax],0x3a
  404520:	je     40453b <Mat_VarReadNextInfo@plt+0x21fb>
  404522:	mov    rsi,QWORD PTR [rsp+0x20]
  404527:	lea    rdi,[rip+0x13d2]        # 405900 <getopt_long_only@@Base+0xb50>
  40452e:	mov    rcx,r13
  404531:	mov    edx,r12d
  404534:	xor    eax,eax
  404536:	call   402170 <warnx@plt>
  40453b:	cmp    QWORD PTR [rbx+0x10],0x0
  404540:	jne    404484 <Mat_VarReadNextInfo@plt+0x2144>
  404546:	mov    rax,0x40836c
  40454d:	mov    edx,DWORD PTR [rbx+0x18]
  404550:	mov    DWORD PTR [rax],edx
  404552:	mov    eax,0x3f
  404557:	jmp    404496 <Mat_VarReadNextInfo@plt+0x2156>
  40455c:	nop    DWORD PTR [rax+0x0]
  404560:	mov    rdi,r13
  404563:	mov    DWORD PTR [rsp+0xc],r9d
  404568:	call   402130 <strlen@plt>
  40456d:	mov    r9d,DWORD PTR [rsp+0xc]
  404572:	mov    r12,rax
  404575:	jmp    40438e <Mat_VarReadNextInfo@plt+0x204e>
  40457a:	lea    edx,[rax-0x1]
  40457d:	cmp    edx,0x1
  404580:	jbe    4045f4 <Mat_VarReadNextInfo@plt+0x22b4>
  404582:	mov    rax,QWORD PTR [rsp+0x38]
  404587:	test   rax,rax
  40458a:	je     40458e <Mat_VarReadNextInfo@plt+0x224e>
  40458c:	mov    DWORD PTR [rax],ebp
  40458e:	mov    rax,QWORD PTR [rbx+0x10]
  404592:	test   rax,rax
  404595:	je     404687 <Mat_VarReadNextInfo@plt+0x2347>
  40459b:	mov    edx,DWORD PTR [rbx+0x18]
  40459e:	mov    DWORD PTR [rax],edx
  4045a0:	add    rsp,0x58
  4045a4:	xor    eax,eax
  4045a6:	pop    rbx
  4045a7:	pop    rbp
  4045a8:	pop    r12
  4045aa:	pop    r13
  4045ac:	pop    r14
  4045ae:	pop    r15
  4045b0:	ret    
  4045b1:	test   r14d,r14d
  4045b4:	jne    4046cd <Mat_VarReadNextInfo@plt+0x238d>
  4045ba:	mov    rax,0x408374
  4045c1:	mov    eax,DWORD PTR [rax]
  4045c3:	test   eax,eax
  4045c5:	je     404484 <Mat_VarReadNextInfo@plt+0x2144>
  4045cb:	mov    rax,QWORD PTR [rsp+0x30]
  4045d0:	cmp    BYTE PTR [rax],0x3a
  4045d3:	je     404484 <Mat_VarReadNextInfo@plt+0x2144>
  4045d9:	mov    rsi,QWORD PTR [rsp+0x20]
  4045de:	lea    rdi,[rip+0x12fb]        # 4058e0 <getopt_long_only@@Base+0xb30>
  4045e5:	mov    rdx,r13
  4045e8:	xor    eax,eax
  4045ea:	call   402170 <warnx@plt>
  4045ef:	jmp    404484 <Mat_VarReadNextInfo@plt+0x2144>
  4045f4:	mov    rsi,QWORD PTR [rsp+0x28]
  4045f9:	test   rsi,rsi
  4045fc:	je     40468f <Mat_VarReadNextInfo@plt+0x234f>
  404602:	mov    rdx,0x4083a8
  404609:	cmp    eax,0x1
  40460c:	mov    QWORD PTR [rdx],rsi
  40460f:	jne    404582 <Mat_VarReadNextInfo@plt+0x2242>
  404615:	cmp    QWORD PTR [rsp+0x28],0x0
  40461b:	jne    404582 <Mat_VarReadNextInfo@plt+0x2242>
  404621:	mov    rax,0x408374
  404628:	mov    edx,DWORD PTR [rax]
  40462a:	test   edx,edx
  40462c:	je     40464e <Mat_VarReadNextInfo@plt+0x230e>
  40462e:	mov    rax,QWORD PTR [rsp+0x30]
  404633:	cmp    BYTE PTR [rax],0x3a
  404636:	je     40464e <Mat_VarReadNextInfo@plt+0x230e>
  404638:	mov    rsi,QWORD PTR [rsp+0x20]
  40463d:	lea    rdi,[rip+0x131c]        # 405960 <getopt_long_only@@Base+0xbb0>
  404644:	mov    rdx,r13
  404647:	xor    eax,eax
  404649:	call   402170 <warnx@plt>
  40464e:	cmp    QWORD PTR [rbx+0x10],0x0
  404653:	je     4046e4 <Mat_VarReadNextInfo@plt+0x23a4>
  404659:	mov    rax,0x40836c
  404660:	mov    DWORD PTR [rax],0x0
  404666:	mov    rax,0x408370
  40466d:	sub    DWORD PTR [rax],0x1
  404670:	mov    rax,QWORD PTR [rsp+0x30]
  404675:	cmp    BYTE PTR [rax],0x3a
  404678:	setne  al
  40467b:	movzx  eax,al
  40467e:	lea    eax,[rax+rax*4+0x3a]
  404682:	jmp    404496 <Mat_VarReadNextInfo@plt+0x2156>
  404687:	mov    eax,DWORD PTR [rbx+0x18]
  40468a:	jmp    404496 <Mat_VarReadNextInfo@plt+0x2156>
  40468f:	cmp    eax,0x1
  404692:	jne    404582 <Mat_VarReadNextInfo@plt+0x2242>
  404698:	mov    eax,DWORD PTR [rsp+0x40]
  40469c:	mov    rcx,0x408370
  4046a3:	add    eax,0x2
  4046a6:	mov    DWORD PTR [rcx],eax
  4046a8:	movsxd rax,DWORD PTR [rsp+0x44]
  4046ad:	mov    rcx,QWORD PTR [rsp+0x48]
  4046b2:	mov    rax,QWORD PTR [rcx+rax*8]
  4046b6:	mov    rdx,rax
  4046b9:	mov    QWORD PTR [rsp+0x28],rax
  4046be:	mov    rax,0x4083a8
  4046c5:	mov    QWORD PTR [rax],rdx
  4046c8:	jmp    404615 <Mat_VarReadNextInfo@plt+0x22d5>
  4046cd:	mov    rax,0x408370
  4046d4:	mov    edx,DWORD PTR [rsp+0x40]
  4046d8:	mov    DWORD PTR [rax],edx
  4046da:	mov    eax,0xffffffff
  4046df:	jmp    404496 <Mat_VarReadNextInfo@plt+0x2156>
  4046e4:	mov    edx,DWORD PTR [rbx+0x18]
  4046e7:	mov    rax,0x40836c
  4046ee:	mov    DWORD PTR [rax],edx
  4046f0:	jmp    404666 <Mat_VarReadNextInfo@plt+0x2326>
  4046f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404700:	push   r15
  404702:	push   r14
  404704:	push   r13
  404706:	push   r12
  404708:	push   rbp
  404709:	push   rbx
  40470a:	sub    rsp,0x48
  40470e:	test   rdx,rdx
  404711:	mov    QWORD PTR [rsp+0x18],rdx
  404716:	mov    QWORD PTR [rsp+0x20],rcx
  40471b:	mov    QWORD PTR [rsp+0x30],r8
  404720:	mov    DWORD PTR [rsp+0x14],r9d
  404725:	je     404933 <Mat_VarReadNextInfo@plt+0x25f3>
  40472b:	mov    r13d,edi
  40472e:	lea    rdi,[rip+0x118a]        # 4058bf <getopt_long_only@@Base+0xb0f>
  404735:	mov    r15,rsi
  404738:	call   402040 <getenv@plt>
  40473d:	mov    QWORD PTR [rsp+0x38],rax
  404742:	mov    rax,QWORD PTR [rsp+0x18]
  404747:	movzx  eax,BYTE PTR [rax]
  40474a:	cmp    al,0x2d
  40474c:	je     404990 <Mat_VarReadNextInfo@plt+0x2650>
  404752:	cmp    al,0x2b
  404754:	je     40475e <Mat_VarReadNextInfo@plt+0x241e>
  404756:	cmp    QWORD PTR [rsp+0x38],0x0
  40475c:	je     404763 <Mat_VarReadNextInfo@plt+0x2423>
  40475e:	and    DWORD PTR [rsp+0x14],0xfffffffe
  404763:	sub    eax,0x2b
  404766:	test   al,0xfd
  404768:	je     404995 <Mat_VarReadNextInfo@plt+0x2655>
  40476e:	mov    rbp,0x408370
  404775:	mov    rax,0x4083a0
  40477c:	mov    esi,DWORD PTR [rbp+0x0]
  40477f:	test   esi,esi
  404781:	je     404950 <Mat_VarReadNextInfo@plt+0x2610>
  404787:	mov    ecx,DWORD PTR [rax]
  404789:	mov    rdi,0x4083a8
  404790:	test   ecx,ecx
  404792:	mov    QWORD PTR [rsp+0x28],rdi
  404797:	mov    QWORD PTR [rdi],0x0
  40479e:	jne    404975 <Mat_VarReadNextInfo@plt+0x2635>
  4047a4:	mov    r14d,DWORD PTR [rsp+0x14]
  4047a9:	lea    r9,[rip+0x9d6]        # 405186 <getopt_long_only@@Base+0x3d6>
  4047b0:	mov    rbx,rax
  4047b3:	mov    r8d,r14d
  4047b6:	and    r14d,0x1
  4047ba:	and    r8d,0x2
  4047be:	mov    r12d,r8d
  4047c1:	nop    DWORD PTR [rax+0x0]
  4047c8:	test   ecx,ecx
  4047ca:	jne    4047db <Mat_VarReadNextInfo@plt+0x249b>
  4047cc:	mov    rax,QWORD PTR [rip+0x3ba5]        # 408378 <opterr@@Base+0x4>
  4047d3:	movsx  esi,BYTE PTR [rax]
  4047d6:	test   sil,sil
  4047d9:	jne    404852 <Mat_VarReadNextInfo@plt+0x2512>
  4047db:	mov    edx,DWORD PTR [rbp+0x0]
  4047de:	mov    DWORD PTR [rbx],0x0
  4047e4:	cmp    edx,r13d
  4047e7:	jge    4048e8 <Mat_VarReadNextInfo@plt+0x25a8>
  4047ed:	movsxd rax,edx
  4047f0:	mov    rcx,QWORD PTR [r15+rax*8]
  4047f4:	cmp    BYTE PTR [rcx],0x2d
  4047f7:	mov    QWORD PTR [rip+0x3b7a],rcx        # 408378 <opterr@@Base+0x4>
  4047fe:	je     404a08 <Mat_VarReadNextInfo@plt+0x26c8>
  404804:	test   r12d,r12d
  404807:	mov    QWORD PTR [rip+0x3b6a],r9        # 408378 <opterr@@Base+0x4>
  40480e:	jne    404a80 <Mat_VarReadNextInfo@plt+0x2740>
  404814:	test   r14d,r14d
  404817:	je     404933 <Mat_VarReadNextInfo@plt+0x25f3>
  40481d:	mov    r8d,DWORD PTR [rip+0x3b44]        # 408368 <getopt_long_only@@Base+0x35b8>
  404824:	cmp    r8d,0xffffffff
  404828:	je     4049f0 <Mat_VarReadNextInfo@plt+0x26b0>
  40482e:	mov    eax,DWORD PTR [rip+0x3b30]        # 408364 <getopt_long_only@@Base+0x35b4>
  404834:	cmp    eax,0xffffffff
  404837:	jne    4049a0 <Mat_VarReadNextInfo@plt+0x2660>
  40483d:	mov    rax,QWORD PTR [rip+0x3b34]        # 408378 <opterr@@Base+0x4>
  404844:	add    edx,0x1
  404847:	mov    DWORD PTR [rbp+0x0],edx
  40484a:	movsx  esi,BYTE PTR [rax]
  40484d:	test   sil,sil
  404850:	je     4047db <Mat_VarReadNextInfo@plt+0x249b>
  404852:	mov    r12,rax
  404855:	cmp    QWORD PTR [rsp+0x20],0x0
  40485b:	je     404abb <Mat_VarReadNextInfo@plt+0x277b>
  404861:	movsxd rax,DWORD PTR [rbp+0x0]
  404865:	cmp    QWORD PTR [r15+rax*8],r12
  404869:	je     404abb <Mat_VarReadNextInfo@plt+0x277b>
  40486f:	cmp    sil,0x2d
  404873:	je     404a62 <Mat_VarReadNextInfo@plt+0x2722>
  404879:	test   BYTE PTR [rsp+0x14],0x4
  40487e:	je     404abb <Mat_VarReadNextInfo@plt+0x277b>
  404884:	xor    r8d,r8d
  404887:	cmp    sil,0x3a
  40488b:	mov    DWORD PTR [rip+0x3acb],0x0        # 408360 <getopt_long_only@@Base+0x35b0>
  404895:	je     4048ab <Mat_VarReadNextInfo@plt+0x256b>
  404897:	mov    rdi,QWORD PTR [rsp+0x18]
  40489c:	call   402160 <strchr@plt>
  4048a1:	xor    r8d,r8d
  4048a4:	test   rax,rax
  4048a7:	setne  r8b
  4048ab:	mov    r9d,DWORD PTR [rsp+0x14]
  4048b0:	mov    rcx,QWORD PTR [rsp+0x30]
  4048b5:	mov    rdi,r15
  4048b8:	mov    rdx,QWORD PTR [rsp+0x20]
  4048bd:	mov    rsi,QWORD PTR [rsp+0x18]
  4048c2:	call   4042d0 <Mat_VarReadNextInfo@plt+0x1f90>
  4048c7:	cmp    eax,0xffffffff
  4048ca:	mov    ebx,eax
  4048cc:	je     404aaf <Mat_VarReadNextInfo@plt+0x276f>
  4048d2:	lea    rax,[rip+0x8ad]        # 405186 <getopt_long_only@@Base+0x3d6>
  4048d9:	mov    QWORD PTR [rip+0x3a98],rax        # 408378 <opterr@@Base+0x4>
  4048e0:	jmp    404938 <Mat_VarReadNextInfo@plt+0x25f8>
  4048e2:	nop    WORD PTR [rax+rax*1+0x0]
  4048e8:	mov    ebx,DWORD PTR [rip+0x3a76]        # 408364 <getopt_long_only@@Base+0x35b4>
  4048ee:	lea    rax,[rip+0x891]        # 405186 <getopt_long_only@@Base+0x3d6>
  4048f5:	mov    QWORD PTR [rip+0x3a7c],rax        # 408378 <opterr@@Base+0x4>
  4048fc:	cmp    ebx,0xffffffff
  4048ff:	je     404a98 <Mat_VarReadNextInfo@plt+0x2758>
  404905:	mov    r12d,DWORD PTR [rip+0x3a5c]        # 408368 <getopt_long_only@@Base+0x35b8>
  40490c:	mov    esi,ebx
  40490e:	mov    rcx,r15
  404911:	mov    edi,r12d
  404914:	sub    ebx,r12d
  404917:	call   404220 <Mat_VarReadNextInfo@plt+0x1ee0>
  40491c:	sub    DWORD PTR [rbp+0x0],ebx
  40491f:	mov    DWORD PTR [rip+0x3a3b],0xffffffff        # 408364 <getopt_long_only@@Base+0x35b4>
  404929:	mov    DWORD PTR [rip+0x3a35],0xffffffff        # 408368 <getopt_long_only@@Base+0x35b8>
  404933:	mov    ebx,0xffffffff
  404938:	add    rsp,0x48
  40493c:	mov    eax,ebx
  40493e:	pop    rbx
  40493f:	pop    rbp
  404940:	pop    r12
  404942:	pop    r13
  404944:	pop    r14
  404946:	pop    r15
  404948:	ret    
  404949:	nop    DWORD PTR [rax+0x0]
  404950:	mov    rbx,0x4083a8
  404957:	mov    DWORD PTR [rax],0x1
  40495d:	mov    ecx,0x1
  404962:	mov    DWORD PTR [rbp+0x0],0x1
  404969:	mov    QWORD PTR [rsp+0x28],rbx
  40496e:	mov    QWORD PTR [rbx],0x0
  404975:	mov    DWORD PTR [rip+0x39e5],0xffffffff        # 408364 <getopt_long_only@@Base+0x35b4>
  40497f:	mov    DWORD PTR [rip+0x39df],0xffffffff        # 408368 <getopt_long_only@@Base+0x35b8>
  404989:	jmp    4047a4 <Mat_VarReadNextInfo@plt+0x2464>
  40498e:	xchg   ax,ax
  404990:	or     DWORD PTR [rsp+0x14],0x2
  404995:	add    QWORD PTR [rsp+0x18],0x1
  40499b:	jmp    40476e <Mat_VarReadNextInfo@plt+0x242e>
  4049a0:	mov    edi,r8d
  4049a3:	mov    rcx,r15
  4049a6:	mov    esi,eax
  4049a8:	mov    QWORD PTR [rsp+0x8],r9
  4049ad:	mov    DWORD PTR [rsp+0x10],eax
  4049b1:	mov    DWORD PTR [rsp],r8d
  4049b5:	call   404220 <Mat_VarReadNextInfo@plt+0x1ee0>
  4049ba:	mov    edx,DWORD PTR [rbp+0x0]
  4049bd:	mov    r8d,DWORD PTR [rsp]
  4049c1:	mov    eax,DWORD PTR [rsp+0x10]
  4049c5:	mov    DWORD PTR [rip+0x3995],0xffffffff        # 408364 <getopt_long_only@@Base+0x35b4>
  4049cf:	mov    ecx,DWORD PTR [rbx]
  4049d1:	mov    r9,QWORD PTR [rsp+0x8]
  4049d6:	mov    edi,edx
  4049d8:	add    edx,0x1
  4049db:	sub    eax,r8d
  4049de:	mov    DWORD PTR [rbp+0x0],edx
  4049e1:	sub    edi,eax
  4049e3:	mov    DWORD PTR [rip+0x397f],edi        # 408368 <getopt_long_only@@Base+0x35b8>
  4049e9:	jmp    4047c8 <Mat_VarReadNextInfo@plt+0x2488>
  4049ee:	xchg   ax,ax
  4049f0:	mov    DWORD PTR [rip+0x3972],edx        # 408368 <getopt_long_only@@Base+0x35b8>
  4049f6:	add    edx,0x1
  4049f9:	mov    DWORD PTR [rbp+0x0],edx
  4049fc:	jmp    4047cc <Mat_VarReadNextInfo@plt+0x248c>
  404a01:	nop    DWORD PTR [rax+0x0]
  404a08:	movsx  esi,BYTE PTR [rcx+0x1]
  404a0c:	test   sil,sil
  404a0f:	je     404804 <Mat_VarReadNextInfo@plt+0x24c4>
  404a15:	mov    ebx,DWORD PTR [rip+0x394d]        # 408368 <getopt_long_only@@Base+0x35b8>
  404a1b:	cmp    ebx,0xffffffff
  404a1e:	je     404a2d <Mat_VarReadNextInfo@plt+0x26ed>
  404a20:	cmp    DWORD PTR [rip+0x393d],0xffffffff        # 408364 <getopt_long_only@@Base+0x35b4>
  404a27:	je     404b89 <Mat_VarReadNextInfo@plt+0x2849>
  404a2d:	lea    r12,[rcx+0x1]
  404a31:	cmp    sil,0x2d
  404a35:	mov    QWORD PTR [rip+0x393c],r12        # 408378 <opterr@@Base+0x4>
  404a3c:	jne    404855 <Mat_VarReadNextInfo@plt+0x2515>
  404a42:	cmp    BYTE PTR [rcx+0x2],0x0
  404a46:	je     404d4c <Mat_VarReadNextInfo@plt+0x2a0c>
  404a4c:	cmp    QWORD PTR [rsp+0x20],0x0
  404a52:	je     404bc2 <Mat_VarReadNextInfo@plt+0x2882>
  404a58:	movsxd rax,DWORD PTR [rbp+0x0]
  404a5c:	cmp    r12,QWORD PTR [r15+rax*8]
  404a60:	je     404abb <Mat_VarReadNextInfo@plt+0x277b>
  404a62:	add    r12,0x1
  404a66:	mov    DWORD PTR [rip+0x38f0],0x1        # 408360 <getopt_long_only@@Base+0x35b0>
  404a70:	xor    r8d,r8d
  404a73:	mov    QWORD PTR [rip+0x38fe],r12        # 408378 <opterr@@Base+0x4>
  404a7a:	jmp    4048ab <Mat_VarReadNextInfo@plt+0x256b>
  404a7f:	nop
  404a80:	mov    rax,QWORD PTR [rsp+0x28]
  404a85:	add    edx,0x1
  404a88:	mov    ebx,0x1
  404a8d:	mov    DWORD PTR [rbp+0x0],edx
  404a90:	mov    QWORD PTR [rax],rcx
  404a93:	jmp    404938 <Mat_VarReadNextInfo@plt+0x25f8>
  404a98:	mov    eax,DWORD PTR [rip+0x38ca]        # 408368 <getopt_long_only@@Base+0x35b8>
  404a9e:	cmp    eax,0xffffffff
  404aa1:	je     40491f <Mat_VarReadNextInfo@plt+0x25df>
  404aa7:	mov    DWORD PTR [rbp+0x0],eax
  404aaa:	jmp    40491f <Mat_VarReadNextInfo@plt+0x25df>
  404aaf:	mov    r12,QWORD PTR [rip+0x38c2]        # 408378 <opterr@@Base+0x4>
  404ab6:	movzx  esi,BYTE PTR [r12]
  404abb:	lea    rcx,[r12+0x1]
  404ac0:	movsx  ebx,sil
  404ac4:	cmp    ebx,0x3a
  404ac7:	mov    QWORD PTR [rip+0x38aa],rcx        # 408378 <opterr@@Base+0x4>
  404ace:	je     404b32 <Mat_VarReadNextInfo@plt+0x27f2>
  404ad0:	cmp    ebx,0x2d
  404ad3:	je     404bcd <Mat_VarReadNextInfo@plt+0x288d>
  404ad9:	mov    rdi,QWORD PTR [rsp+0x18]
  404ade:	mov    esi,ebx
  404ae0:	mov    QWORD PTR [rsp],rcx
  404ae4:	call   402160 <strchr@plt>
  404ae9:	test   rax,rax
  404aec:	mov    rcx,QWORD PTR [rsp]
  404af0:	je     404b32 <Mat_VarReadNextInfo@plt+0x27f2>
  404af2:	cmp    QWORD PTR [rsp+0x20],0x0
  404af8:	je     404bb9 <Mat_VarReadNextInfo@plt+0x2879>
  404afe:	cmp    ebx,0x57
  404b01:	jne    404bb9 <Mat_VarReadNextInfo@plt+0x2879>
  404b07:	movzx  edx,BYTE PTR [rax+0x1]
  404b0b:	cmp    dl,0x3b
  404b0e:	je     404c16 <Mat_VarReadNextInfo@plt+0x28d6>
  404b14:	cmp    dl,0x3a
  404b17:	je     404bdf <Mat_VarReadNextInfo@plt+0x289f>
  404b1d:	cmp    BYTE PTR [r12+0x1],0x0
  404b23:	jne    404938 <Mat_VarReadNextInfo@plt+0x25f8>
  404b29:	add    DWORD PTR [rbp+0x0],0x1
  404b2d:	jmp    404938 <Mat_VarReadNextInfo@plt+0x25f8>
  404b32:	cmp    BYTE PTR [r12+0x1],0x0
  404b38:	jne    404b3e <Mat_VarReadNextInfo@plt+0x27fe>
  404b3a:	add    DWORD PTR [rbp+0x0],0x1
  404b3e:	mov    rax,0x408374
  404b45:	mov    ecx,DWORD PTR [rax]
  404b47:	test   ecx,ecx
  404b49:	je     404b76 <Mat_VarReadNextInfo@plt+0x2836>
  404b4b:	mov    rax,QWORD PTR [rsp+0x18]
  404b50:	cmp    BYTE PTR [rax],0x3a
  404b53:	je     404b76 <Mat_VarReadNextInfo@plt+0x2836>
  404b55:	cmp    QWORD PTR [rsp+0x38],0x0
  404b5b:	lea    rax,[rip+0xe4e]        # 4059b0 <getopt_long_only@@Base+0xc00>
  404b62:	lea    rdi,[rip+0xe27]        # 405990 <getopt_long_only@@Base+0xbe0>
  404b69:	mov    esi,ebx
  404b6b:	cmovne rdi,rax
  404b6f:	xor    eax,eax
  404b71:	call   402170 <warnx@plt>
  404b76:	mov    rax,0x40836c
  404b7d:	mov    DWORD PTR [rax],ebx
  404b7f:	mov    ebx,0x3f
  404b84:	jmp    404938 <Mat_VarReadNextInfo@plt+0x25f8>
  404b89:	mov    DWORD PTR [rip+0x37d5],edx        # 408364 <getopt_long_only@@Base+0x35b4>
  404b8f:	jmp    404a2d <Mat_VarReadNextInfo@plt+0x26ed>
  404b94:	mov    rdi,QWORD PTR [rsp+0x18]
  404b99:	mov    esi,0x2d
  404b9e:	mov    QWORD PTR [rsp],rcx
  404ba2:	call   402160 <strchr@plt>
  404ba7:	test   rax,rax
  404baa:	je     404933 <Mat_VarReadNextInfo@plt+0x25f3>
  404bb0:	mov    rcx,QWORD PTR [rsp]
  404bb4:	mov    ebx,0x2d
  404bb9:	movzx  edx,BYTE PTR [rax+0x1]
  404bbd:	jmp    404b14 <Mat_VarReadNextInfo@plt+0x27d4>
  404bc2:	add    rcx,0x2
  404bc6:	mov    QWORD PTR [rip+0x37ab],rcx        # 408378 <opterr@@Base+0x4>
  404bcd:	cmp    BYTE PTR [r12+0x1],0x0
  404bd3:	je     404b94 <Mat_VarReadNextInfo@plt+0x2854>
  404bd5:	mov    ebx,0x2d
  404bda:	jmp    404b3e <Mat_VarReadNextInfo@plt+0x27fe>
  404bdf:	mov    rdi,QWORD PTR [rsp+0x28]
  404be4:	mov    QWORD PTR [rdi],0x0
  404beb:	cmp    BYTE PTR [r12+0x1],0x0
  404bf1:	je     404c8d <Mat_VarReadNextInfo@plt+0x294d>
  404bf7:	mov    eax,DWORD PTR [rbp+0x0]
  404bfa:	mov    QWORD PTR [rdi],rcx
  404bfd:	lea    rdi,[rip+0x582]        # 405186 <getopt_long_only@@Base+0x3d6>
  404c04:	add    eax,0x1
  404c07:	mov    DWORD PTR [rbp+0x0],eax
  404c0a:	mov    QWORD PTR [rip+0x3767],rdi        # 408378 <opterr@@Base+0x4>
  404c11:	jmp    404938 <Mat_VarReadNextInfo@plt+0x25f8>
  404c16:	cmp    BYTE PTR [r12+0x1],0x0
  404c1c:	jne    404d08 <Mat_VarReadNextInfo@plt+0x29c8>
  404c22:	mov    eax,DWORD PTR [rbp+0x0]
  404c25:	add    eax,0x1
  404c28:	cmp    r13d,eax
  404c2b:	mov    DWORD PTR [rbp+0x0],eax
  404c2e:	jg     404cfb <Mat_VarReadNextInfo@plt+0x29bb>
  404c34:	lea    rax,[rip+0x54b]        # 405186 <getopt_long_only@@Base+0x3d6>
  404c3b:	mov    QWORD PTR [rip+0x3736],rax        # 408378 <opterr@@Base+0x4>
  404c42:	mov    rax,0x408374
  404c49:	mov    edx,DWORD PTR [rax]
  404c4b:	test   edx,edx
  404c4d:	je     404c6c <Mat_VarReadNextInfo@plt+0x292c>
  404c4f:	mov    rax,QWORD PTR [rsp+0x18]
  404c54:	cmp    BYTE PTR [rax],0x3a
  404c57:	je     404c6c <Mat_VarReadNextInfo@plt+0x292c>
  404c59:	lea    rdi,[rip+0xd80]        # 4059e0 <getopt_long_only@@Base+0xc30>
  404c60:	mov    esi,0x57
  404c65:	xor    eax,eax
  404c67:	call   402170 <warnx@plt>
  404c6c:	mov    rax,0x40836c
  404c73:	mov    DWORD PTR [rax],0x57
  404c79:	mov    rax,QWORD PTR [rsp+0x18]
  404c7e:	cmp    BYTE PTR [rax],0x3a
  404c81:	je     404cf1 <Mat_VarReadNextInfo@plt+0x29b1>
  404c83:	mov    ebx,0x3f
  404c88:	jmp    404938 <Mat_VarReadNextInfo@plt+0x25f8>
  404c8d:	cmp    BYTE PTR [rax+0x2],0x3a
  404c91:	mov    eax,DWORD PTR [rbp+0x0]
  404c94:	je     404bfd <Mat_VarReadNextInfo@plt+0x28bd>
  404c9a:	add    eax,0x1
  404c9d:	cmp    r13d,eax
  404ca0:	mov    DWORD PTR [rbp+0x0],eax
  404ca3:	jg     404d38 <Mat_VarReadNextInfo@plt+0x29f8>
  404ca9:	lea    rax,[rip+0x4d6]        # 405186 <getopt_long_only@@Base+0x3d6>
  404cb0:	mov    QWORD PTR [rip+0x36c1],rax        # 408378 <opterr@@Base+0x4>
  404cb7:	mov    rax,0x408374
  404cbe:	mov    eax,DWORD PTR [rax]
  404cc0:	test   eax,eax
  404cc2:	je     404cde <Mat_VarReadNextInfo@plt+0x299e>
  404cc4:	mov    rax,QWORD PTR [rsp+0x18]
  404cc9:	cmp    BYTE PTR [rax],0x3a
  404ccc:	je     404cde <Mat_VarReadNextInfo@plt+0x299e>
  404cce:	lea    rdi,[rip+0xd0b]        # 4059e0 <getopt_long_only@@Base+0xc30>
  404cd5:	mov    esi,ebx
  404cd7:	xor    eax,eax
  404cd9:	call   402170 <warnx@plt>
  404cde:	mov    rax,0x40836c
  404ce5:	mov    DWORD PTR [rax],ebx
  404ce7:	mov    rax,QWORD PTR [rsp+0x18]
  404cec:	cmp    BYTE PTR [rax],0x3a
  404cef:	jne    404c83 <Mat_VarReadNextInfo@plt+0x2943>
  404cf1:	mov    ebx,0x3a
  404cf6:	jmp    404938 <Mat_VarReadNextInfo@plt+0x25f8>
  404cfb:	cdqe   
  404cfd:	mov    rax,QWORD PTR [r15+rax*8]
  404d01:	mov    QWORD PTR [rip+0x3670],rax        # 408378 <opterr@@Base+0x4>
  404d08:	mov    r9d,DWORD PTR [rsp+0x14]
  404d0d:	mov    rcx,QWORD PTR [rsp+0x30]
  404d12:	xor    r8d,r8d
  404d15:	mov    rdx,QWORD PTR [rsp+0x20]
  404d1a:	mov    rsi,QWORD PTR [rsp+0x18]
  404d1f:	mov    rdi,r15
  404d22:	mov    DWORD PTR [rip+0x3634],0x2        # 408360 <getopt_long_only@@Base+0x35b0>
  404d2c:	call   4042d0 <Mat_VarReadNextInfo@plt+0x1f90>
  404d31:	mov    ebx,eax
  404d33:	jmp    4048d2 <Mat_VarReadNextInfo@plt+0x2592>
  404d38:	movsxd rdx,eax
  404d3b:	mov    rdi,QWORD PTR [rsp+0x28]
  404d40:	mov    rdx,QWORD PTR [r15+rdx*8]
  404d44:	mov    QWORD PTR [rdi],rdx
  404d47:	jmp    404bfd <Mat_VarReadNextInfo@plt+0x28bd>
  404d4c:	mov    r12d,DWORD PTR [rip+0x3611]        # 408364 <getopt_long_only@@Base+0x35b4>
  404d53:	lea    rax,[rip+0x42c]        # 405186 <getopt_long_only@@Base+0x3d6>
  404d5a:	add    edx,0x1
  404d5d:	mov    DWORD PTR [rbp+0x0],edx
  404d60:	mov    QWORD PTR [rip+0x3611],rax        # 408378 <opterr@@Base+0x4>
  404d67:	cmp    r12d,0xffffffff
  404d6b:	je     40491f <Mat_VarReadNextInfo@plt+0x25df>
  404d71:	mov    rcx,r15
  404d74:	mov    esi,r12d
  404d77:	mov    edi,ebx
  404d79:	call   404220 <Mat_VarReadNextInfo@plt+0x1ee0>
  404d7e:	mov    eax,DWORD PTR [rbp+0x0]
  404d81:	add    eax,ebx
  404d83:	sub    eax,r12d
  404d86:	mov    DWORD PTR [rbp+0x0],eax
  404d89:	jmp    40491f <Mat_VarReadNextInfo@plt+0x25df>
  404d8e:	xchg   ax,ax

0000000000404d90 <getopt@@Base>:
  404d90:	xor    r9d,r9d
  404d93:	xor    r8d,r8d
  404d96:	xor    ecx,ecx
  404d98:	jmp    404700 <Mat_VarReadNextInfo@plt+0x23c0>
  404d9d:	nop    DWORD PTR [rax]

0000000000404da0 <getopt_long@@Base>:
  404da0:	mov    r9d,0x1
  404da6:	jmp    404700 <Mat_VarReadNextInfo@plt+0x23c0>
  404dab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404db0 <getopt_long_only@@Base>:
  404db0:	mov    r9d,0x5
  404db6:	jmp    404700 <Mat_VarReadNextInfo@plt+0x23c0>
  404dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  404dc0:	endbr64 
  404dc4:	push   r15
  404dc6:	lea    r15,[rip+0x2f7b]        # 407d48 <getopt_long_only@@Base+0x2f98>
  404dcd:	push   r14
  404dcf:	mov    r14,rdx
  404dd2:	push   r13
  404dd4:	mov    r13,rsi
  404dd7:	push   r12
  404dd9:	mov    r12d,edi
  404ddc:	push   rbp
  404ddd:	lea    rbp,[rip+0x2f6c]        # 407d50 <getopt_long_only@@Base+0x2fa0>
  404de4:	push   rbx
  404de5:	sub    rbp,r15
  404de8:	sub    rsp,0x8
  404dec:	call   402000 <Mat_VarGetNumberOfFields@plt-0x30>
  404df1:	sar    rbp,0x3
  404df5:	je     404e16 <getopt_long_only@@Base+0x66>
  404df7:	xor    ebx,ebx
  404df9:	nop    DWORD PTR [rax+0x0]
  404e00:	mov    rdx,r14
  404e03:	mov    rsi,r13
  404e06:	mov    edi,r12d
  404e09:	call   QWORD PTR [r15+rbx*8]
  404e0d:	add    rbx,0x1
  404e11:	cmp    rbp,rbx
  404e14:	jne    404e00 <getopt_long_only@@Base+0x50>
  404e16:	add    rsp,0x8
  404e1a:	pop    rbx
  404e1b:	pop    rbp
  404e1c:	pop    r12
  404e1e:	pop    r13
  404e20:	pop    r14
  404e22:	pop    r15
  404e24:	ret    
  404e25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404e30:	endbr64 
  404e34:	ret    

Disassembly of section .fini:

0000000000404e38 <.fini>:
  404e38:	endbr64 
  404e3c:	sub    rsp,0x8
  404e40:	add    rsp,0x8
  404e44:	ret    
