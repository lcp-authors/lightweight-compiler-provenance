
../repos/prog2/0.6:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <__stack_chk_fail@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <__stack_chk_fail@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <__stack_chk_fail@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <__stack_chk_fail@GLIBC_2.4>
  401036:	push   0x0
  40103b:	jmp    401020 <__stack_chk_fail@plt-0x10>

0000000000401040 <memcpy@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <memcpy@GLIBC_2.14>
  401046:	push   0x1
  40104b:	jmp    401020 <__stack_chk_fail@plt-0x10>

0000000000401050 <malloc@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <malloc@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <__stack_chk_fail@plt-0x10>

0000000000401060 <realloc@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <realloc@GLIBC_2.2.5>
  401066:	push   0x3
  40106b:	jmp    401020 <__stack_chk_fail@plt-0x10>

0000000000401070 <__printf_chk@plt>:
  401070:	jmp    QWORD PTR [rip+0x2fc2]        # 404038 <__printf_chk@GLIBC_2.3.4>
  401076:	push   0x4
  40107b:	jmp    401020 <__stack_chk_fail@plt-0x10>

0000000000401080 <__isoc99_scanf@plt>:
  401080:	jmp    QWORD PTR [rip+0x2fba]        # 404040 <__isoc99_scanf@GLIBC_2.7>
  401086:	push   0x5
  40108b:	jmp    401020 <__stack_chk_fail@plt-0x10>

Disassembly of section .text:

0000000000401090 <main@@Base>:
  401090:	push   r15
  401092:	push   r14
  401094:	lea    rsi,[rip+0xf69]        # 402004 <_IO_stdin_used@@Base+0x4>
  40109b:	push   r13
  40109d:	push   r12
  40109f:	mov    edi,0x1
  4010a4:	push   rbp
  4010a5:	push   rbx
  4010a6:	xor    r15d,r15d
  4010a9:	xor    ebp,ebp
  4010ab:	sub    rsp,0x28
  4010af:	mov    rax,QWORD PTR fs:0x28
  4010b8:	mov    QWORD PTR [rsp+0x18],rax
  4010bd:	xor    eax,eax
  4010bf:	lea    r14,[rsp+0x17]
  4010c4:	call   401070 <__printf_chk@plt>
  4010c9:	mov    edi,0x1
  4010ce:	call   401050 <malloc@plt>
  4010d3:	mov    edi,0x1
  4010d8:	mov    r12,rax
  4010db:	call   401050 <malloc@plt>
  4010e0:	mov    DWORD PTR [rsp+0xc],0x0
  4010e8:	mov    rbx,rax
  4010eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4010f0:	lea    rdi,[rip+0xf15]        # 40200c <_IO_stdin_used@@Base+0xc>
  4010f7:	xor    eax,eax
  4010f9:	mov    rsi,r14
  4010fc:	call   401080 <__isoc99_scanf@plt>
  401101:	cmp    eax,0x1
  401104:	jne    401200 <main@@Base+0x170>
  40110a:	movzx  r13d,BYTE PTR [rsp+0x17]
  401110:	cmp    r13b,0x20
  401114:	je     401120 <main@@Base+0x90>
  401116:	cmp    r13b,0xa
  40111a:	jne    4011d0 <main@@Base+0x140>
  401120:	mov    r15,rbx
  401123:	mov    edx,DWORD PTR [r15]
  401126:	add    r15,0x4
  40112a:	lea    eax,[rdx-0x1010101]
  401130:	andn   eax,edx,eax
  401135:	and    eax,0x80808080
  40113a:	je     401123 <main@@Base+0x93>
  40113c:	mov    edx,eax
  40113e:	shr    edx,0x10
  401141:	test   eax,0x8080
  401146:	cmove  eax,edx
  401149:	lea    rdx,[r15+0x2]
  40114d:	mov    ecx,eax
  40114f:	cmove  r15,rdx
  401153:	add    cl,al
  401155:	mov    rdx,r12
  401158:	sbb    r15,0x3
  40115c:	sub    r15,rbx
  40115f:	mov    esi,DWORD PTR [rdx]
  401161:	add    rdx,0x4
  401165:	lea    eax,[rsi-0x1010101]
  40116b:	andn   eax,esi,eax
  401170:	and    eax,0x80808080
  401175:	je     40115f <main@@Base+0xcf>
  401177:	mov    esi,eax
  401179:	shr    esi,0x10
  40117c:	test   eax,0x8080
  401181:	cmove  eax,esi
  401184:	lea    rsi,[rdx+0x2]
  401188:	mov    ecx,eax
  40118a:	cmove  rdx,rsi
  40118e:	add    cl,al
  401190:	sbb    rdx,0x3
  401194:	sub    rdx,r12
  401197:	cmp    r15,rdx
  40119a:	jbe    4011b9 <main@@Base+0x129>
  40119c:	mov    rdi,r12
  40119f:	mov    rsi,r15
  4011a2:	call   401060 <realloc@plt>
  4011a7:	lea    rdx,[r15+0x1]
  4011ab:	mov    rsi,rbx
  4011ae:	mov    rdi,rax
  4011b1:	mov    r12,rax
  4011b4:	call   401040 <memcpy@plt>
  4011b9:	add    ebp,0x1
  4011bc:	cmp    r13b,0xa
  4011c0:	je     401200 <main@@Base+0x170>
  4011c2:	xor    r15d,r15d
  4011c5:	jmp    4010f0 <main@@Base+0x60>
  4011ca:	nop    WORD PTR [rax+rax*1+0x0]
  4011d0:	lea    edx,[r15+0x1]
  4011d4:	mov    rdi,rbx
  4011d7:	movsxd rsi,edx
  4011da:	mov    DWORD PTR [rsp+0x8],edx
  4011de:	call   401060 <realloc@plt>
  4011e3:	mov    edx,DWORD PTR [rsp+0x8]
  4011e7:	mov    BYTE PTR [rax+r15*1],r13b
  4011eb:	mov    rbx,rax
  4011ee:	add    DWORD PTR [rsp+0xc],0x1
  4011f3:	movsxd r15,edx
  4011f6:	jmp    4010f0 <main@@Base+0x60>
  4011fb:	nop    DWORD PTR [rax+rax*1+0x0]
  401200:	lea    rsi,[rip+0xe08]        # 40200f <_IO_stdin_used@@Base+0xf>
  401207:	mov    edx,ebp
  401209:	mov    edi,0x1
  40120e:	xor    eax,eax
  401210:	call   401070 <__printf_chk@plt>
  401215:	lea    rsi,[rip+0xe0b]        # 402027 <_IO_stdin_used@@Base+0x27>
  40121c:	mov    rdx,r12
  40121f:	mov    edi,0x1
  401224:	xor    eax,eax
  401226:	call   401070 <__printf_chk@plt>
  40122b:	vxorps xmm1,xmm1,xmm1
  40122f:	lea    rsi,[rip+0xe04]        # 40203a <_IO_stdin_used@@Base+0x3a>
  401236:	vxorps xmm0,xmm0,xmm0
  40123a:	mov    edi,0x1
  40123f:	mov    eax,0x1
  401244:	vcvtsi2ss xmm1,xmm1,DWORD PTR [rsp+0xc]
  40124a:	vcvtsi2ss xmm0,xmm0,ebp
  40124e:	vdivss xmm0,xmm1,xmm0
  401252:	vcvtss2sd xmm0,xmm0,xmm0
  401256:	call   401070 <__printf_chk@plt>
  40125b:	xor    eax,eax
  40125d:	mov    rcx,QWORD PTR [rsp+0x18]
  401262:	xor    rcx,QWORD PTR fs:0x28
  40126b:	jne    40127c <main@@Base+0x1ec>
  40126d:	add    rsp,0x28
  401271:	pop    rbx
  401272:	pop    rbp
  401273:	pop    r12
  401275:	pop    r13
  401277:	pop    r14
  401279:	pop    r15
  40127b:	ret    
  40127c:	call   401030 <__stack_chk_fail@plt>
  401281:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40128b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401290 <_start@@Base>:
  401290:	endbr64 
  401294:	xor    ebp,ebp
  401296:	mov    r9,rdx
  401299:	pop    rsi
  40129a:	mov    rdx,rsp
  40129d:	and    rsp,0xfffffffffffffff0
  4012a1:	push   rax
  4012a2:	push   rsp
  4012a3:	mov    r8,0x401410
  4012aa:	mov    rcx,0x4013a0
  4012b1:	mov    rdi,0x401090
  4012b8:	call   QWORD PTR [rip+0x2d32]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  4012be:	hlt    
  4012bf:	nop
  4012c0:	endbr64 
  4012c4:	ret    
  4012c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012cf:	nop
  4012d0:	mov    eax,0x40405f
  4012d5:	push   rbp
  4012d6:	sub    rax,0x404058
  4012dc:	cmp    rax,0xe
  4012e0:	mov    rbp,rsp
  4012e3:	jbe    401300 <_start@@Base+0x70>
  4012e5:	mov    eax,0x0
  4012ea:	test   rax,rax
  4012ed:	je     401300 <_start@@Base+0x70>
  4012ef:	pop    rbp
  4012f0:	mov    edi,0x404058
  4012f5:	jmp    rax
  4012f7:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	pop    rbp
  401301:	ret    
  401302:	nop    DWORD PTR [rax+0x0]
  401306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401310:	mov    esi,0x404058
  401315:	push   rbp
  401316:	sub    rsi,0x404058
  40131d:	sar    rsi,0x3
  401321:	mov    rbp,rsp
  401324:	mov    rax,rsi
  401327:	shr    rax,0x3f
  40132b:	add    rsi,rax
  40132e:	sar    rsi,1
  401331:	je     401348 <_start@@Base+0xb8>
  401333:	mov    eax,0x0
  401338:	test   rax,rax
  40133b:	je     401348 <_start@@Base+0xb8>
  40133d:	pop    rbp
  40133e:	mov    edi,0x404058
  401343:	jmp    rax
  401345:	nop    DWORD PTR [rax]
  401348:	pop    rbp
  401349:	ret    
  40134a:	nop    WORD PTR [rax+rax*1+0x0]
  401350:	cmp    BYTE PTR [rip+0x2d01],0x0        # 404058 <__bss_start@@Base>
  401357:	jne    40136a <_start@@Base+0xda>
  401359:	push   rbp
  40135a:	mov    rbp,rsp
  40135d:	call   4012d0 <_start@@Base+0x40>
  401362:	pop    rbp
  401363:	mov    BYTE PTR [rip+0x2cee],0x1        # 404058 <__bss_start@@Base>
  40136a:	repz ret 
  40136c:	nop    DWORD PTR [rax+0x0]
  401370:	mov    edi,0x403e18
  401375:	cmp    QWORD PTR [rdi],0x0
  401379:	jne    401380 <_start@@Base+0xf0>
  40137b:	jmp    401310 <_start@@Base+0x80>
  40137d:	nop    DWORD PTR [rax]
  401380:	mov    eax,0x0
  401385:	test   rax,rax
  401388:	je     40137b <_start@@Base+0xeb>
  40138a:	push   rbp
  40138b:	mov    rbp,rsp
  40138e:	call   rax
  401390:	pop    rbp
  401391:	jmp    401310 <_start@@Base+0x80>
  401396:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004013a0 <__libc_csu_init@@Base>:
  4013a0:	endbr64 
  4013a4:	push   r15
  4013a6:	lea    r15,[rip+0x2a5b]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  4013ad:	push   r14
  4013af:	mov    r14,rdx
  4013b2:	push   r13
  4013b4:	mov    r13,rsi
  4013b7:	push   r12
  4013b9:	mov    r12d,edi
  4013bc:	push   rbp
  4013bd:	lea    rbp,[rip+0x2a4c]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  4013c4:	push   rbx
  4013c5:	sub    rbp,r15
  4013c8:	sub    rsp,0x8
  4013cc:	call   401000 <__stack_chk_fail@plt-0x30>
  4013d1:	sar    rbp,0x3
  4013d5:	je     4013f6 <__libc_csu_init@@Base+0x56>
  4013d7:	xor    ebx,ebx
  4013d9:	nop    DWORD PTR [rax+0x0]
  4013e0:	mov    rdx,r14
  4013e3:	mov    rsi,r13
  4013e6:	mov    edi,r12d
  4013e9:	call   QWORD PTR [r15+rbx*8]
  4013ed:	add    rbx,0x1
  4013f1:	cmp    rbp,rbx
  4013f4:	jne    4013e0 <__libc_csu_init@@Base+0x40>
  4013f6:	add    rsp,0x8
  4013fa:	pop    rbx
  4013fb:	pop    rbp
  4013fc:	pop    r12
  4013fe:	pop    r13
  401400:	pop    r14
  401402:	pop    r15
  401404:	ret    
  401405:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401410 <__libc_csu_fini@@Base>:
  401410:	endbr64 
  401414:	ret    

Disassembly of section .fini:

0000000000401418 <.fini>:
  401418:	endbr64 
  40141c:	sub    rsp,0x8
  401420:	add    rsp,0x8
  401424:	ret    
