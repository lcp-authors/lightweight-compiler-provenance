
../repos/prog2/0.5:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <strlen@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <strlen@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <strlen@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <strlen@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <strlen@plt-0x10>

0000000000401040 <__stack_chk_fail@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <__stack_chk_fail@GLIBC_2.4>
  401046:	push   0x1
  40104b:	jmp    401020 <strlen@plt-0x10>

0000000000401050 <printf@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <printf@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <strlen@plt-0x10>

0000000000401060 <strcmp@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <strcmp@GLIBC_2.2.5>
  401066:	push   0x3
  40106b:	jmp    401020 <strlen@plt-0x10>

0000000000401070 <__isoc99_scanf@plt>:
  401070:	jmp    QWORD PTR [rip+0x2fc2]        # 404038 <__isoc99_scanf@GLIBC_2.7>
  401076:	push   0x4
  40107b:	jmp    401020 <strlen@plt-0x10>

Disassembly of section .text:

0000000000401080 <_start@@Base>:
  401080:	endbr64 
  401084:	xor    ebp,ebp
  401086:	mov    r9,rdx
  401089:	pop    rsi
  40108a:	mov    rdx,rsp
  40108d:	and    rsp,0xfffffffffffffff0
  401091:	push   rax
  401092:	push   rsp
  401093:	mov    r8,0x4013a0
  40109a:	mov    rcx,0x401330
  4010a1:	mov    rdi,0x4011fb
  4010a8:	call   QWORD PTR [rip+0x2f42]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  4010ae:	hlt    
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	ret    
  4010b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4010bf:	nop
  4010c0:	mov    eax,0x404057
  4010c5:	push   rbp
  4010c6:	sub    rax,0x404050
  4010cc:	cmp    rax,0xe
  4010d0:	mov    rbp,rsp
  4010d3:	jbe    4010f0 <_start@@Base+0x70>
  4010d5:	mov    eax,0x0
  4010da:	test   rax,rax
  4010dd:	je     4010f0 <_start@@Base+0x70>
  4010df:	pop    rbp
  4010e0:	mov    edi,0x404050
  4010e5:	jmp    rax
  4010e7:	nop    WORD PTR [rax+rax*1+0x0]
  4010f0:	pop    rbp
  4010f1:	ret    
  4010f2:	nop    DWORD PTR [rax+0x0]
  4010f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401100:	mov    esi,0x404050
  401105:	push   rbp
  401106:	sub    rsi,0x404050
  40110d:	sar    rsi,0x3
  401111:	mov    rbp,rsp
  401114:	mov    rax,rsi
  401117:	shr    rax,0x3f
  40111b:	add    rsi,rax
  40111e:	sar    rsi,1
  401121:	je     401138 <_start@@Base+0xb8>
  401123:	mov    eax,0x0
  401128:	test   rax,rax
  40112b:	je     401138 <_start@@Base+0xb8>
  40112d:	pop    rbp
  40112e:	mov    edi,0x404050
  401133:	jmp    rax
  401135:	nop    DWORD PTR [rax]
  401138:	pop    rbp
  401139:	ret    
  40113a:	nop    WORD PTR [rax+rax*1+0x0]
  401140:	cmp    BYTE PTR [rip+0x2f09],0x0        # 404050 <__bss_start@@Base>
  401147:	jne    40115a <_start@@Base+0xda>
  401149:	push   rbp
  40114a:	mov    rbp,rsp
  40114d:	call   4010c0 <_start@@Base+0x40>
  401152:	pop    rbp
  401153:	mov    BYTE PTR [rip+0x2ef6],0x1        # 404050 <__bss_start@@Base>
  40115a:	repz ret 
  40115c:	nop    DWORD PTR [rax+0x0]
  401160:	mov    edi,0x403e18
  401165:	cmp    QWORD PTR [rdi],0x0
  401169:	jne    401170 <_start@@Base+0xf0>
  40116b:	jmp    401100 <_start@@Base+0x80>
  40116d:	nop    DWORD PTR [rax]
  401170:	mov    eax,0x0
  401175:	test   rax,rax
  401178:	je     40116b <_start@@Base+0xeb>
  40117a:	push   rbp
  40117b:	mov    rbp,rsp
  40117e:	call   rax
  401180:	pop    rbp
  401181:	jmp    401100 <_start@@Base+0x80>

0000000000401186 <inverte@@Base>:
  401186:	push   rbp
  401187:	mov    rbp,rsp
  40118a:	push   rbx
  40118b:	sub    rsp,0x28
  40118f:	mov    QWORD PTR [rbp-0x28],rdi
  401193:	mov    QWORD PTR [rbp-0x30],rsi
  401197:	mov    DWORD PTR [rbp-0x14],0x0
  40119e:	jmp    4011dc <inverte@@Base+0x56>
  4011a0:	mov    eax,DWORD PTR [rbp-0x14]
  4011a3:	movsxd rdx,eax
  4011a6:	mov    rax,QWORD PTR [rbp-0x30]
  4011aa:	lea    rbx,[rdx+rax*1]
  4011ae:	mov    rax,QWORD PTR [rbp-0x28]
  4011b2:	mov    rdi,rax
  4011b5:	call   401030 <strlen@plt>
  4011ba:	mov    rdx,rax
  4011bd:	mov    eax,DWORD PTR [rbp-0x14]
  4011c0:	cdqe   
  4011c2:	sub    rdx,rax
  4011c5:	mov    rax,rdx
  4011c8:	lea    rdx,[rax-0x1]
  4011cc:	mov    rax,QWORD PTR [rbp-0x28]
  4011d0:	add    rax,rdx
  4011d3:	movzx  eax,BYTE PTR [rax]
  4011d6:	mov    BYTE PTR [rbx],al
  4011d8:	add    DWORD PTR [rbp-0x14],0x1
  4011dc:	mov    eax,DWORD PTR [rbp-0x14]
  4011df:	movsxd rbx,eax
  4011e2:	mov    rax,QWORD PTR [rbp-0x28]
  4011e6:	mov    rdi,rax
  4011e9:	call   401030 <strlen@plt>
  4011ee:	cmp    rbx,rax
  4011f1:	jb     4011a0 <inverte@@Base+0x1a>
  4011f3:	nop
  4011f4:	add    rsp,0x28
  4011f8:	pop    rbx
  4011f9:	pop    rbp
  4011fa:	ret    

00000000004011fb <main@@Base>:
  4011fb:	push   rbp
  4011fc:	mov    rbp,rsp
  4011ff:	sub    rsp,0xe0
  401206:	mov    rax,QWORD PTR fs:0x28
  40120f:	mov    QWORD PTR [rbp-0x8],rax
  401213:	xor    eax,eax
  401215:	lea    rdx,[rbp-0xe0]
  40121c:	mov    eax,0x0
  401221:	mov    ecx,0xc
  401226:	mov    rdi,rdx
  401229:	rep stos QWORD PTR es:[rdi],rax
  40122c:	mov    rdx,rdi
  40122f:	mov    DWORD PTR [rdx],eax
  401231:	add    rdx,0x4
  401235:	lea    rdx,[rbp-0x70]
  401239:	mov    eax,0x0
  40123e:	mov    ecx,0xc
  401243:	mov    rdi,rdx
  401246:	rep stos QWORD PTR es:[rdi],rax
  401249:	mov    rdx,rdi
  40124c:	mov    DWORD PTR [rdx],eax
  40124e:	add    rdx,0x4
  401252:	lea    rdi,[rip+0xdab]        # 402004 <_IO_stdin_used@@Base+0x4>
  401259:	mov    eax,0x0
  40125e:	call   401050 <printf@plt>
  401263:	lea    rax,[rbp-0xe0]
  40126a:	mov    rsi,rax
  40126d:	lea    rdi,[rip+0xd9a]        # 40200e <_IO_stdin_used@@Base+0xe>
  401274:	mov    eax,0x0
  401279:	call   401070 <__isoc99_scanf@plt>
  40127e:	lea    rax,[rbp-0xe0]
  401285:	lea    rsi,[rip+0xd85]        # 402011 <_IO_stdin_used@@Base+0x11>
  40128c:	mov    rdi,rax
  40128f:	call   401060 <strcmp@plt>
  401294:	test   eax,eax
  401296:	jne    4012ae <main@@Base+0xb3>
  401298:	mov    eax,0x0
  40129d:	mov    rcx,QWORD PTR [rbp-0x8]
  4012a1:	xor    rcx,QWORD PTR fs:0x28
  4012aa:	je     401323 <main@@Base+0x128>
  4012ac:	jmp    40131e <main@@Base+0x123>
  4012ae:	lea    rdx,[rbp-0x70]
  4012b2:	lea    rax,[rbp-0xe0]
  4012b9:	mov    rsi,rdx
  4012bc:	mov    rdi,rax
  4012bf:	call   401186 <inverte@@Base>
  4012c4:	lea    rdx,[rbp-0x70]
  4012c8:	lea    rax,[rbp-0xe0]
  4012cf:	mov    rsi,rdx
  4012d2:	mov    rdi,rax
  4012d5:	call   401060 <strcmp@plt>
  4012da:	test   eax,eax
  4012dc:	jne    4012fe <main@@Base+0x103>
  4012de:	lea    rax,[rbp-0xe0]
  4012e5:	mov    rsi,rax
  4012e8:	lea    rdi,[rip+0xd24]        # 402013 <_IO_stdin_used@@Base+0x13>
  4012ef:	mov    eax,0x0
  4012f4:	call   401050 <printf@plt>
  4012f9:	jmp    401252 <main@@Base+0x57>
  4012fe:	lea    rax,[rbp-0xe0]
  401305:	mov    rsi,rax
  401308:	lea    rdi,[rip+0xd1e]        # 40202d <_IO_stdin_used@@Base+0x2d>
  40130f:	mov    eax,0x0
  401314:	call   401050 <printf@plt>
  401319:	jmp    401252 <main@@Base+0x57>
  40131e:	call   401040 <__stack_chk_fail@plt>
  401323:	leave  
  401324:	ret    
  401325:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40132f:	nop

0000000000401330 <__libc_csu_init@@Base>:
  401330:	endbr64 
  401334:	push   r15
  401336:	lea    r15,[rip+0x2acb]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  40133d:	push   r14
  40133f:	mov    r14,rdx
  401342:	push   r13
  401344:	mov    r13,rsi
  401347:	push   r12
  401349:	mov    r12d,edi
  40134c:	push   rbp
  40134d:	lea    rbp,[rip+0x2abc]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  401354:	push   rbx
  401355:	sub    rbp,r15
  401358:	sub    rsp,0x8
  40135c:	call   401000 <strlen@plt-0x30>
  401361:	sar    rbp,0x3
  401365:	je     401386 <__libc_csu_init@@Base+0x56>
  401367:	xor    ebx,ebx
  401369:	nop    DWORD PTR [rax+0x0]
  401370:	mov    rdx,r14
  401373:	mov    rsi,r13
  401376:	mov    edi,r12d
  401379:	call   QWORD PTR [r15+rbx*8]
  40137d:	add    rbx,0x1
  401381:	cmp    rbp,rbx
  401384:	jne    401370 <__libc_csu_init@@Base+0x40>
  401386:	add    rsp,0x8
  40138a:	pop    rbx
  40138b:	pop    rbp
  40138c:	pop    r12
  40138e:	pop    r13
  401390:	pop    r14
  401392:	pop    r15
  401394:	ret    
  401395:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004013a0 <__libc_csu_fini@@Base>:
  4013a0:	endbr64 
  4013a4:	ret    

Disassembly of section .fini:

00000000004013a8 <.fini>:
  4013a8:	endbr64 
  4013ac:	sub    rsp,0x8
  4013b0:	add    rsp,0x8
  4013b4:	ret    
