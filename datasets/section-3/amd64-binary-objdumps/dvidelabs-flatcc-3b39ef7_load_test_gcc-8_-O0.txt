
../repos/dvidelabs-flatcc-3b39ef7/test/load_test/load_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xcfe9]        # 40fff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x14a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <.plt>:
  403020:	push   QWORD PTR [rip+0xcfe2]        # 410008 <flatcc_builder_padding_base@@Base+0x49c8>
  403026:	bnd jmp QWORD PTR [rip+0xcfe3]        # 410010 <flatcc_builder_padding_base@@Base+0x49d0>
  40302d:	nop    DWORD PTR [rax]
  403030:	endbr64 
  403034:	push   0x0
  403039:	bnd jmp 403020 <free@plt-0x140>
  40303f:	nop
  403040:	endbr64 
  403044:	push   0x1
  403049:	bnd jmp 403020 <free@plt-0x140>
  40304f:	nop
  403050:	endbr64 
  403054:	push   0x2
  403059:	bnd jmp 403020 <free@plt-0x140>
  40305f:	nop
  403060:	endbr64 
  403064:	push   0x3
  403069:	bnd jmp 403020 <free@plt-0x140>
  40306f:	nop
  403070:	endbr64 
  403074:	push   0x4
  403079:	bnd jmp 403020 <free@plt-0x140>
  40307f:	nop
  403080:	endbr64 
  403084:	push   0x5
  403089:	bnd jmp 403020 <free@plt-0x140>
  40308f:	nop
  403090:	endbr64 
  403094:	push   0x6
  403099:	bnd jmp 403020 <free@plt-0x140>
  40309f:	nop
  4030a0:	endbr64 
  4030a4:	push   0x7
  4030a9:	bnd jmp 403020 <free@plt-0x140>
  4030af:	nop
  4030b0:	endbr64 
  4030b4:	push   0x8
  4030b9:	bnd jmp 403020 <free@plt-0x140>
  4030bf:	nop
  4030c0:	endbr64 
  4030c4:	push   0x9
  4030c9:	bnd jmp 403020 <free@plt-0x140>
  4030cf:	nop
  4030d0:	endbr64 
  4030d4:	push   0xa
  4030d9:	bnd jmp 403020 <free@plt-0x140>
  4030df:	nop
  4030e0:	endbr64 
  4030e4:	push   0xb
  4030e9:	bnd jmp 403020 <free@plt-0x140>
  4030ef:	nop
  4030f0:	endbr64 
  4030f4:	push   0xc
  4030f9:	bnd jmp 403020 <free@plt-0x140>
  4030ff:	nop
  403100:	endbr64 
  403104:	push   0xd
  403109:	bnd jmp 403020 <free@plt-0x140>
  40310f:	nop
  403110:	endbr64 
  403114:	push   0xe
  403119:	bnd jmp 403020 <free@plt-0x140>
  40311f:	nop
  403120:	endbr64 
  403124:	push   0xf
  403129:	bnd jmp 403020 <free@plt-0x140>
  40312f:	nop
  403130:	endbr64 
  403134:	push   0x10
  403139:	bnd jmp 403020 <free@plt-0x140>
  40313f:	nop
  403140:	endbr64 
  403144:	push   0x11
  403149:	bnd jmp 403020 <free@plt-0x140>
  40314f:	nop
  403150:	endbr64 
  403154:	push   0x12
  403159:	bnd jmp 403020 <free@plt-0x140>
  40315f:	nop

Disassembly of section .plt.sec:

0000000000403160 <free@plt>:
  403160:	endbr64 
  403164:	bnd jmp QWORD PTR [rip+0xcead]        # 410018 <free@GLIBC_2.2.5>
  40316b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403170 <strncpy@plt>:
  403170:	endbr64 
  403174:	bnd jmp QWORD PTR [rip+0xcea5]        # 410020 <strncpy@GLIBC_2.2.5>
  40317b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403180 <puts@plt>:
  403180:	endbr64 
  403184:	bnd jmp QWORD PTR [rip+0xce9d]        # 410028 <puts@GLIBC_2.2.5>
  40318b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403190 <fclose@plt>:
  403190:	endbr64 
  403194:	bnd jmp QWORD PTR [rip+0xce95]        # 410030 <fclose@GLIBC_2.2.5>
  40319b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031a0 <strlen@plt>:
  4031a0:	endbr64 
  4031a4:	bnd jmp QWORD PTR [rip+0xce8d]        # 410038 <strlen@GLIBC_2.2.5>
  4031ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031b0 <__stack_chk_fail@plt>:
  4031b0:	endbr64 
  4031b4:	bnd jmp QWORD PTR [rip+0xce85]        # 410040 <__stack_chk_fail@GLIBC_2.4>
  4031bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031c0 <printf@plt>:
  4031c0:	endbr64 
  4031c4:	bnd jmp QWORD PTR [rip+0xce7d]        # 410048 <printf@GLIBC_2.2.5>
  4031cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031d0 <gettimeofday@plt>:
  4031d0:	endbr64 
  4031d4:	bnd jmp QWORD PTR [rip+0xce75]        # 410050 <gettimeofday@GLIBC_2.2.5>
  4031db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031e0 <__assert_fail@plt>:
  4031e0:	endbr64 
  4031e4:	bnd jmp QWORD PTR [rip+0xce6d]        # 410058 <__assert_fail@GLIBC_2.2.5>
  4031eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031f0 <memset@plt>:
  4031f0:	endbr64 
  4031f4:	bnd jmp QWORD PTR [rip+0xce65]        # 410060 <memset@GLIBC_2.2.5>
  4031fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403200 <memchr@plt>:
  403200:	endbr64 
  403204:	bnd jmp QWORD PTR [rip+0xce5d]        # 410068 <memchr@GLIBC_2.2.5>
  40320b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403210 <memcmp@plt>:
  403210:	endbr64 
  403214:	bnd jmp QWORD PTR [rip+0xce55]        # 410070 <memcmp@GLIBC_2.2.5>
  40321b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403220 <strcmp@plt>:
  403220:	endbr64 
  403224:	bnd jmp QWORD PTR [rip+0xce4d]        # 410078 <strcmp@GLIBC_2.2.5>
  40322b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403230 <memcpy@plt>:
  403230:	endbr64 
  403234:	bnd jmp QWORD PTR [rip+0xce45]        # 410080 <memcpy@GLIBC_2.14>
  40323b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403240 <malloc@plt>:
  403240:	endbr64 
  403244:	bnd jmp QWORD PTR [rip+0xce3d]        # 410088 <malloc@GLIBC_2.2.5>
  40324b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403250 <realloc@plt>:
  403250:	endbr64 
  403254:	bnd jmp QWORD PTR [rip+0xce35]        # 410090 <realloc@GLIBC_2.2.5>
  40325b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403260 <fopen@plt>:
  403260:	endbr64 
  403264:	bnd jmp QWORD PTR [rip+0xce2d]        # 410098 <fopen@GLIBC_2.2.5>
  40326b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403270 <fwrite@plt>:
  403270:	endbr64 
  403274:	bnd jmp QWORD PTR [rip+0xce25]        # 4100a0 <fwrite@GLIBC_2.2.5>
  40327b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403280 <posix_memalign@plt>:
  403280:	endbr64 
  403284:	bnd jmp QWORD PTR [rip+0xce1d]        # 4100a8 <posix_memalign@GLIBC_2.2.5>
  40328b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000403290 <_start@@Base>:
  403290:	endbr64 
  403294:	xor    ebp,ebp
  403296:	mov    r9,rdx
  403299:	pop    rsi
  40329a:	mov    rdx,rsp
  40329d:	and    rsp,0xfffffffffffffff0
  4032a1:	push   rax
  4032a2:	push   rsp
  4032a3:	mov    r8,0x40a990
  4032aa:	mov    rcx,0x40a920
  4032b1:	mov    rdi,0x404305
  4032b8:	call   QWORD PTR [rip+0xcd32]        # 40fff0 <__libc_start_main@GLIBC_2.2.5>
  4032be:	hlt    
  4032bf:	nop
  4032c0:	endbr64 
  4032c4:	ret    
  4032c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032cf:	nop
  4032d0:	mov    eax,0x4100d0
  4032d5:	cmp    rax,0x4100d0
  4032db:	je     4032f0 <_start@@Base+0x60>
  4032dd:	mov    eax,0x0
  4032e2:	test   rax,rax
  4032e5:	je     4032f0 <_start@@Base+0x60>
  4032e7:	mov    edi,0x4100d0
  4032ec:	jmp    rax
  4032ee:	xchg   ax,ax
  4032f0:	ret    
  4032f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4032fc:	nop    DWORD PTR [rax+0x0]
  403300:	mov    esi,0x4100d0
  403305:	sub    rsi,0x4100d0
  40330c:	sar    rsi,0x3
  403310:	mov    rax,rsi
  403313:	shr    rax,0x3f
  403317:	add    rsi,rax
  40331a:	sar    rsi,1
  40331d:	je     403330 <_start@@Base+0xa0>
  40331f:	mov    eax,0x0
  403324:	test   rax,rax
  403327:	je     403330 <_start@@Base+0xa0>
  403329:	mov    edi,0x4100d0
  40332e:	jmp    rax
  403330:	ret    
  403331:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40333c:	nop    DWORD PTR [rax+0x0]
  403340:	endbr64 
  403344:	cmp    BYTE PTR [rip+0xcd95],0x0        # 4100e0 <__bss_start@@Base+0x10>
  40334b:	jne    403360 <_start@@Base+0xd0>
  40334d:	push   rbp
  40334e:	mov    rbp,rsp
  403351:	call   4032d0 <_start@@Base+0x40>
  403356:	mov    BYTE PTR [rip+0xcd83],0x1        # 4100e0 <__bss_start@@Base+0x10>
  40335d:	pop    rbp
  40335e:	ret    
  40335f:	nop
  403360:	ret    
  403361:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40336c:	nop    DWORD PTR [rax+0x0]
  403370:	endbr64 
  403374:	jmp    403300 <_start@@Base+0x70>
  403376:	push   rbp
  403377:	mov    rbp,rsp
  40337a:	mov    DWORD PTR [rbp-0x4],edi
  40337d:	mov    eax,DWORD PTR [rbp-0x4]
  403380:	pop    rbp
  403381:	ret    
  403382:	push   rbp
  403383:	mov    rbp,rsp
  403386:	sub    rsp,0x8
  40338a:	mov    QWORD PTR [rbp-0x8],rdi
  40338e:	mov    rax,QWORD PTR [rbp-0x8]
  403392:	mov    eax,DWORD PTR [rax]
  403394:	mov    edi,eax
  403396:	call   403376 <_start@@Base+0xe6>
  40339b:	leave  
  40339c:	ret    
  40339d:	push   rbp
  40339e:	mov    rbp,rsp
  4033a1:	mov    DWORD PTR [rbp-0x4],edi
  4033a4:	mov    eax,DWORD PTR [rbp-0x4]
  4033a7:	pop    rbp
  4033a8:	ret    
  4033a9:	push   rbp
  4033aa:	mov    rbp,rsp
  4033ad:	sub    rsp,0x8
  4033b1:	mov    QWORD PTR [rbp-0x8],rdi
  4033b5:	mov    rax,QWORD PTR [rbp-0x8]
  4033b9:	mov    eax,DWORD PTR [rax]
  4033bb:	mov    edi,eax
  4033bd:	call   40339d <_start@@Base+0x10d>
  4033c2:	leave  
  4033c3:	ret    
  4033c4:	push   rbp
  4033c5:	mov    rbp,rsp
  4033c8:	mov    eax,edi
  4033ca:	mov    WORD PTR [rbp-0x4],ax
  4033ce:	movzx  eax,WORD PTR [rbp-0x4]
  4033d2:	pop    rbp
  4033d3:	ret    
  4033d4:	push   rbp
  4033d5:	mov    rbp,rsp
  4033d8:	sub    rsp,0x8
  4033dc:	mov    QWORD PTR [rbp-0x8],rdi
  4033e0:	mov    rax,QWORD PTR [rbp-0x8]
  4033e4:	movzx  eax,WORD PTR [rax]
  4033e7:	movzx  eax,ax
  4033ea:	mov    edi,eax
  4033ec:	call   4033c4 <_start@@Base+0x134>
  4033f1:	leave  
  4033f2:	ret    
  4033f3:	push   rbp
  4033f4:	mov    rbp,rsp
  4033f7:	mov    DWORD PTR [rbp-0x4],edi
  4033fa:	mov    eax,DWORD PTR [rbp-0x4]
  4033fd:	pop    rbp
  4033fe:	ret    
  4033ff:	push   rbp
  403400:	mov    rbp,rsp
  403403:	mov    DWORD PTR [rbp-0x4],edi
  403406:	mov    eax,DWORD PTR [rbp-0x4]
  403409:	pop    rbp
  40340a:	ret    
  40340b:	push   rbp
  40340c:	mov    rbp,rsp
  40340f:	sub    rsp,0x8
  403413:	mov    QWORD PTR [rbp-0x8],rdi
  403417:	mov    rax,QWORD PTR [rbp-0x8]
  40341b:	mov    eax,DWORD PTR [rax]
  40341d:	mov    edi,eax
  40341f:	call   4033f3 <_start@@Base+0x163>
  403424:	leave  
  403425:	ret    
  403426:	push   rbp
  403427:	mov    rbp,rsp
  40342a:	sub    rsp,0x8
  40342e:	mov    QWORD PTR [rbp-0x8],rdi
  403432:	cmp    QWORD PTR [rbp-0x8],0x0
  403437:	je     40344d <_start@@Base+0x1bd>
  403439:	mov    rax,QWORD PTR [rbp-0x8]
  40343d:	sub    rax,0x4
  403441:	mov    rdi,rax
  403444:	call   403382 <_start@@Base+0xf2>
  403449:	mov    eax,eax
  40344b:	jmp    403452 <_start@@Base+0x1c2>
  40344d:	mov    eax,0x0
  403452:	leave  
  403453:	ret    
  403454:	push   rbp
  403455:	mov    rbp,rsp
  403458:	sub    rsp,0x8
  40345c:	mov    QWORD PTR [rbp-0x8],rdi
  403460:	cmp    QWORD PTR [rbp-0x8],0x0
  403465:	je     40347b <_start@@Base+0x1eb>
  403467:	mov    rax,QWORD PTR [rbp-0x8]
  40346b:	sub    rax,0x4
  40346f:	mov    rdi,rax
  403472:	call   403382 <_start@@Base+0xf2>
  403477:	mov    eax,eax
  403479:	jmp    403480 <_start@@Base+0x1f0>
  40347b:	mov    eax,0x0
  403480:	leave  
  403481:	ret    
  403482:	push   rbp
  403483:	mov    rbp,rsp
  403486:	sub    rsp,0x8
  40348a:	mov    QWORD PTR [rbp-0x8],rdi
  40348e:	mov    rax,QWORD PTR [rbp-0x8]
  403492:	mov    rdi,rax
  403495:	call   403426 <_start@@Base+0x196>
  40349a:	leave  
  40349b:	ret    
  40349c:	push   rbp
  40349d:	mov    rbp,rsp
  4034a0:	sub    rsp,0x20
  4034a4:	mov    QWORD PTR [rbp-0x18],rdi
  4034a8:	mov    QWORD PTR [rbp-0x20],rsi
  4034ac:	mov    rax,QWORD PTR fs:0x28
  4034b5:	mov    QWORD PTR [rbp-0x8],rax
  4034b9:	xor    eax,eax
  4034bb:	mov    DWORD PTR [rbp-0x10],0x0
  4034c2:	cmp    QWORD PTR [rbp-0x20],0x0
  4034c7:	jne    4034d0 <_start@@Base+0x240>
  4034c9:	mov    eax,0x1
  4034ce:	jmp    403523 <_start@@Base+0x293>
  4034d0:	mov    rcx,QWORD PTR [rbp-0x20]
  4034d4:	lea    rax,[rbp-0x10]
  4034d8:	mov    edx,0x4
  4034dd:	mov    rsi,rcx
  4034e0:	mov    rdi,rax
  4034e3:	call   403170 <strncpy@plt>
  4034e8:	mov    eax,DWORD PTR [rbp-0x10]
  4034eb:	mov    edi,eax
  4034ed:	call   4033ff <_start@@Base+0x16f>
  4034f2:	mov    DWORD PTR [rbp-0x10],eax
  4034f5:	mov    rax,QWORD PTR [rbp-0x18]
  4034f9:	add    rax,0x4
  4034fd:	mov    rdi,rax
  403500:	call   40340b <_start@@Base+0x17b>
  403505:	mov    DWORD PTR [rbp-0xc],eax
  403508:	mov    eax,DWORD PTR [rbp-0x10]
  40350b:	test   eax,eax
  40350d:	je     403517 <_start@@Base+0x287>
  40350f:	mov    eax,DWORD PTR [rbp-0x10]
  403512:	cmp    DWORD PTR [rbp-0xc],eax
  403515:	jne    40351e <_start@@Base+0x28e>
  403517:	mov    eax,0x1
  40351c:	jmp    403523 <_start@@Base+0x293>
  40351e:	mov    eax,0x0
  403523:	mov    rdx,QWORD PTR [rbp-0x8]
  403527:	xor    rdx,QWORD PTR fs:0x28
  403530:	je     403537 <_start@@Base+0x2a7>
  403532:	call   4031b0 <__stack_chk_fail@plt>
  403537:	leave  
  403538:	ret    
  403539:	push   rbp
  40353a:	mov    rbp,rsp
  40353d:	sub    rsp,0x8
  403541:	mov    QWORD PTR [rbp-0x8],rdi
  403545:	cmp    QWORD PTR [rbp-0x8],0x0
  40354a:	je     403560 <_start@@Base+0x2d0>
  40354c:	mov    rax,QWORD PTR [rbp-0x8]
  403550:	sub    rax,0x4
  403554:	mov    rdi,rax
  403557:	call   403382 <_start@@Base+0xf2>
  40355c:	mov    eax,eax
  40355e:	jmp    403565 <_start@@Base+0x2d5>
  403560:	mov    eax,0x0
  403565:	leave  
  403566:	ret    
  403567:	push   rbp
  403568:	mov    rbp,rsp
  40356b:	sub    rsp,0x20
  40356f:	mov    QWORD PTR [rbp-0x18],rdi
  403573:	mov    QWORD PTR [rbp-0x20],rsi
  403577:	mov    rax,QWORD PTR [rbp-0x20]
  40357b:	lea    rdx,[rax*4+0x0]
  403583:	mov    rax,QWORD PTR [rbp-0x18]
  403587:	add    rax,rdx
  40358a:	mov    QWORD PTR [rbp-0x8],rax
  40358e:	mov    rax,QWORD PTR [rbp-0x18]
  403592:	mov    rdi,rax
  403595:	call   403426 <_start@@Base+0x196>
  40359a:	cmp    QWORD PTR [rbp-0x20],rax
  40359e:	jb     4035bf <_start@@Base+0x32f>
  4035a0:	lea    rcx,[rip+0x8029]        # 40b5d0 <_IO_stdin_used@@Base+0x5d0>
  4035a7:	mov    edx,0x2b5
  4035ac:	lea    rsi,[rip+0x7a75]        # 40b028 <_IO_stdin_used@@Base+0x28>
  4035b3:	lea    rdi,[rip+0x7aee]        # 40b0a8 <_IO_stdin_used@@Base+0xa8>
  4035ba:	call   4031e0 <__assert_fail@plt>
  4035bf:	mov    rax,QWORD PTR [rbp-0x8]
  4035c3:	mov    rdi,rax
  4035c6:	call   403382 <_start@@Base+0xf2>
  4035cb:	mov    edx,eax
  4035cd:	mov    rax,QWORD PTR [rbp-0x8]
  4035d1:	add    rax,rdx
  4035d4:	leave  
  4035d5:	ret    
  4035d6:	push   rbp
  4035d7:	mov    rbp,rsp
  4035da:	sub    rsp,0x20
  4035de:	mov    QWORD PTR [rbp-0x18],rdi
  4035e2:	lea    rax,[rip+0x7af6]        # 40b0df <_IO_stdin_used@@Base+0xdf>
  4035e9:	mov    QWORD PTR [rbp-0x8],rax
  4035ed:	cmp    QWORD PTR [rbp-0x18],0x0
  4035f2:	je     403622 <_start@@Base+0x392>
  4035f4:	mov    rdx,QWORD PTR [rbp-0x8]
  4035f8:	mov    rax,QWORD PTR [rbp-0x18]
  4035fc:	mov    rsi,rdx
  4035ff:	mov    rdi,rax
  403602:	call   40349c <_start@@Base+0x20c>
  403607:	test   eax,eax
  403609:	je     403622 <_start@@Base+0x392>
  40360b:	mov    rax,QWORD PTR [rbp-0x18]
  40360f:	mov    rdi,rax
  403612:	call   403382 <_start@@Base+0xf2>
  403617:	mov    edx,eax
  403619:	mov    rax,QWORD PTR [rbp-0x18]
  40361d:	add    rax,rdx
  403620:	jmp    403627 <_start@@Base+0x397>
  403622:	mov    eax,0x0
  403627:	leave  
  403628:	ret    
  403629:	push   rbp
  40362a:	mov    rbp,rsp
  40362d:	sub    rsp,0x30
  403631:	mov    QWORD PTR [rbp-0x28],rdi
  403635:	mov    WORD PTR [rbp-0x14],0x0
  40363b:	cmp    QWORD PTR [rbp-0x28],0x0
  403640:	jne    403661 <_start@@Base+0x3d1>
  403642:	lea    rcx,[rip+0x7ee7]        # 40b530 <_IO_stdin_used@@Base+0x530>
  403649:	mov    edx,0x2bb
  40364e:	lea    rsi,[rip+0x79d3]        # 40b028 <_IO_stdin_used@@Base+0x28>
  403655:	lea    rdi,[rip+0x7a8c]        # 40b0e8 <_IO_stdin_used@@Base+0xe8>
  40365c:	call   4031e0 <__assert_fail@plt>
  403661:	mov    WORD PTR [rbp-0x12],0x3
  403667:	mov    rax,QWORD PTR [rbp-0x28]
  40366b:	mov    rdi,rax
  40366e:	call   4033a9 <_start@@Base+0x119>
  403673:	cdqe   
  403675:	neg    rax
  403678:	mov    rdx,rax
  40367b:	mov    rax,QWORD PTR [rbp-0x28]
  40367f:	add    rax,rdx
  403682:	mov    QWORD PTR [rbp-0x10],rax
  403686:	mov    rax,QWORD PTR [rbp-0x10]
  40368a:	mov    rdi,rax
  40368d:	call   4033d4 <_start@@Base+0x144>
  403692:	movzx  eax,ax
  403695:	movzx  edx,WORD PTR [rbp-0x12]
  403699:	add    edx,0x3
  40369c:	movsxd rdx,edx
  40369f:	add    rdx,rdx
  4036a2:	cmp    rax,rdx
  4036a5:	jb     4036c6 <_start@@Base+0x436>
  4036a7:	movzx  eax,WORD PTR [rbp-0x12]
  4036ab:	add    rax,0x2
  4036af:	lea    rdx,[rax+rax*1]
  4036b3:	mov    rax,QWORD PTR [rbp-0x10]
  4036b7:	add    rax,rdx
  4036ba:	mov    rdi,rax
  4036bd:	call   4033d4 <_start@@Base+0x144>
  4036c2:	mov    WORD PTR [rbp-0x14],ax
  4036c6:	cmp    WORD PTR [rbp-0x14],0x0
  4036cb:	je     4036f7 <_start@@Base+0x467>
  4036cd:	movzx  edx,WORD PTR [rbp-0x14]
  4036d1:	mov    rax,QWORD PTR [rbp-0x28]
  4036d5:	add    rax,rdx
  4036d8:	mov    QWORD PTR [rbp-0x8],rax
  4036dc:	mov    rax,QWORD PTR [rbp-0x8]
  4036e0:	mov    rdi,rax
  4036e3:	call   403382 <_start@@Base+0xf2>
  4036e8:	mov    eax,eax
  4036ea:	lea    rdx,[rax+0x4]
  4036ee:	mov    rax,QWORD PTR [rbp-0x8]
  4036f2:	add    rax,rdx
  4036f5:	jmp    403716 <_start@@Base+0x486>
  4036f7:	lea    rcx,[rip+0x7e32]        # 40b530 <_IO_stdin_used@@Base+0x530>
  4036fe:	mov    edx,0x2bb
  403703:	lea    rsi,[rip+0x791e]        # 40b028 <_IO_stdin_used@@Base+0x28>
  40370a:	lea    rdi,[rip+0x79ff]        # 40b110 <_IO_stdin_used@@Base+0x110>
  403711:	call   4031e0 <__assert_fail@plt>
  403716:	leave  
  403717:	ret    
  403718:	push   rbp
  403719:	mov    rbp,rsp
  40371c:	sub    rsp,0x30
  403720:	mov    QWORD PTR [rbp-0x28],rdi
  403724:	mov    WORD PTR [rbp-0x14],0x0
  40372a:	cmp    QWORD PTR [rbp-0x28],0x0
  40372f:	jne    403750 <_start@@Base+0x4c0>
  403731:	lea    rcx,[rip+0x7e28]        # 40b560 <_IO_stdin_used@@Base+0x560>
  403738:	mov    edx,0x2c2
  40373d:	lea    rsi,[rip+0x78e4]        # 40b028 <_IO_stdin_used@@Base+0x28>
  403744:	lea    rdi,[rip+0x799d]        # 40b0e8 <_IO_stdin_used@@Base+0xe8>
  40374b:	call   4031e0 <__assert_fail@plt>
  403750:	mov    WORD PTR [rbp-0x12],0x5
  403756:	mov    rax,QWORD PTR [rbp-0x28]
  40375a:	mov    rdi,rax
  40375d:	call   4033a9 <_start@@Base+0x119>
  403762:	cdqe   
  403764:	neg    rax
  403767:	mov    rdx,rax
  40376a:	mov    rax,QWORD PTR [rbp-0x28]
  40376e:	add    rax,rdx
  403771:	mov    QWORD PTR [rbp-0x10],rax
  403775:	mov    rax,QWORD PTR [rbp-0x10]
  403779:	mov    rdi,rax
  40377c:	call   4033d4 <_start@@Base+0x144>
  403781:	movzx  eax,ax
  403784:	movzx  edx,WORD PTR [rbp-0x12]
  403788:	add    edx,0x3
  40378b:	movsxd rdx,edx
  40378e:	add    rdx,rdx
  403791:	cmp    rax,rdx
  403794:	jb     4037b5 <_start@@Base+0x525>
  403796:	movzx  eax,WORD PTR [rbp-0x12]
  40379a:	add    rax,0x2
  40379e:	lea    rdx,[rax+rax*1]
  4037a2:	mov    rax,QWORD PTR [rbp-0x10]
  4037a6:	add    rax,rdx
  4037a9:	mov    rdi,rax
  4037ac:	call   4033d4 <_start@@Base+0x144>
  4037b1:	mov    WORD PTR [rbp-0x14],ax
  4037b5:	cmp    WORD PTR [rbp-0x14],0x0
  4037ba:	je     4037e6 <_start@@Base+0x556>
  4037bc:	movzx  edx,WORD PTR [rbp-0x14]
  4037c0:	mov    rax,QWORD PTR [rbp-0x28]
  4037c4:	add    rax,rdx
  4037c7:	mov    QWORD PTR [rbp-0x8],rax
  4037cb:	mov    rax,QWORD PTR [rbp-0x8]
  4037cf:	mov    rdi,rax
  4037d2:	call   403382 <_start@@Base+0xf2>
  4037d7:	mov    eax,eax
  4037d9:	lea    rdx,[rax+0x4]
  4037dd:	mov    rax,QWORD PTR [rbp-0x8]
  4037e1:	add    rax,rdx
  4037e4:	jmp    4037eb <_start@@Base+0x55b>
  4037e6:	mov    eax,0x0
  4037eb:	leave  
  4037ec:	ret    
  4037ed:	push   rbp
  4037ee:	mov    rbp,rsp
  4037f1:	sub    rsp,0x30
  4037f5:	mov    QWORD PTR [rbp-0x28],rdi
  4037f9:	mov    WORD PTR [rbp-0x14],0x0
  4037ff:	cmp    QWORD PTR [rbp-0x28],0x0
  403804:	jne    403825 <_start@@Base+0x595>
  403806:	lea    rcx,[rip+0x7d93]        # 40b5a0 <_IO_stdin_used@@Base+0x5a0>
  40380d:	mov    edx,0x2c7
  403812:	lea    rsi,[rip+0x780f]        # 40b028 <_IO_stdin_used@@Base+0x28>
  403819:	lea    rdi,[rip+0x78c8]        # 40b0e8 <_IO_stdin_used@@Base+0xe8>
  403820:	call   4031e0 <__assert_fail@plt>
  403825:	mov    WORD PTR [rbp-0x12],0xb
  40382b:	mov    rax,QWORD PTR [rbp-0x28]
  40382f:	mov    rdi,rax
  403832:	call   4033a9 <_start@@Base+0x119>
  403837:	cdqe   
  403839:	neg    rax
  40383c:	mov    rdx,rax
  40383f:	mov    rax,QWORD PTR [rbp-0x28]
  403843:	add    rax,rdx
  403846:	mov    QWORD PTR [rbp-0x10],rax
  40384a:	mov    rax,QWORD PTR [rbp-0x10]
  40384e:	mov    rdi,rax
  403851:	call   4033d4 <_start@@Base+0x144>
  403856:	movzx  eax,ax
  403859:	movzx  edx,WORD PTR [rbp-0x12]
  40385d:	add    edx,0x3
  403860:	movsxd rdx,edx
  403863:	add    rdx,rdx
  403866:	cmp    rax,rdx
  403869:	jb     40388a <_start@@Base+0x5fa>
  40386b:	movzx  eax,WORD PTR [rbp-0x12]
  40386f:	add    rax,0x2
  403873:	lea    rdx,[rax+rax*1]
  403877:	mov    rax,QWORD PTR [rbp-0x10]
  40387b:	add    rax,rdx
  40387e:	mov    rdi,rax
  403881:	call   4033d4 <_start@@Base+0x144>
  403886:	mov    WORD PTR [rbp-0x14],ax
  40388a:	cmp    WORD PTR [rbp-0x14],0x0
  40388f:	je     4038bb <_start@@Base+0x62b>
  403891:	movzx  edx,WORD PTR [rbp-0x14]
  403895:	mov    rax,QWORD PTR [rbp-0x28]
  403899:	add    rax,rdx
  40389c:	mov    QWORD PTR [rbp-0x8],rax
  4038a0:	mov    rax,QWORD PTR [rbp-0x8]
  4038a4:	mov    rdi,rax
  4038a7:	call   403382 <_start@@Base+0xf2>
  4038ac:	mov    eax,eax
  4038ae:	lea    rdx,[rax+0x4]
  4038b2:	mov    rax,QWORD PTR [rbp-0x8]
  4038b6:	add    rax,rdx
  4038b9:	jmp    4038c0 <_start@@Base+0x630>
  4038bb:	mov    eax,0x0
  4038c0:	leave  
  4038c1:	ret    
  4038c2:	push   rbp
  4038c3:	mov    rbp,rsp
  4038c6:	sub    rsp,0x10
  4038ca:	mov    QWORD PTR [rbp-0x8],rdi
  4038ce:	mov    rax,QWORD PTR [rbp-0x8]
  4038d2:	mov    ecx,0xffffffff
  4038d7:	mov    edx,0x1
  4038dc:	mov    esi,0x1
  4038e1:	mov    rdi,rax
  4038e4:	call   4071bc <flatcc_builder_start_vector@@Base>
  4038e9:	leave  
  4038ea:	ret    
  4038eb:	push   rbp
  4038ec:	mov    rbp,rsp
  4038ef:	sub    rsp,0x10
  4038f3:	mov    QWORD PTR [rbp-0x8],rdi
  4038f7:	mov    rax,QWORD PTR [rbp-0x8]
  4038fb:	mov    rdi,rax
  4038fe:	call   4083b1 <flatcc_builder_end_vector@@Base>
  403903:	leave  
  403904:	ret    
  403905:	push   rbp
  403906:	mov    rbp,rsp
  403909:	sub    rsp,0x20
  40390d:	mov    QWORD PTR [rbp-0x8],rdi
  403911:	mov    QWORD PTR [rbp-0x10],rsi
  403915:	mov    QWORD PTR [rbp-0x18],rdx
  403919:	mov    rdx,QWORD PTR [rbp-0x18]
  40391d:	mov    rcx,QWORD PTR [rbp-0x10]
  403921:	mov    rax,QWORD PTR [rbp-0x8]
  403925:	mov    rsi,rcx
  403928:	mov    rdi,rax
  40392b:	call   406ba3 <flatcc_builder_append_vector@@Base>
  403930:	leave  
  403931:	ret    
  403932:	push   rbp
  403933:	mov    rbp,rsp
  403936:	sub    rsp,0x20
  40393a:	mov    QWORD PTR [rbp-0x8],rdi
  40393e:	mov    QWORD PTR [rbp-0x10],rsi
  403942:	mov    QWORD PTR [rbp-0x18],rdx
  403946:	mov    rdx,QWORD PTR [rbp-0x18]
  40394a:	mov    rcx,QWORD PTR [rbp-0x10]
  40394e:	mov    rax,QWORD PTR [rbp-0x8]
  403952:	mov    rsi,rcx
  403955:	mov    rdi,rax
  403958:	call   406e43 <flatcc_builder_append_string@@Base>
  40395d:	leave  
  40395e:	ret    
  40395f:	push   rbp
  403960:	mov    rbp,rsp
  403963:	sub    rsp,0x10
  403967:	mov    QWORD PTR [rbp-0x8],rdi
  40396b:	mov    QWORD PTR [rbp-0x10],rsi
  40396f:	mov    rsi,QWORD PTR [rbp-0x10]
  403973:	mov    rax,QWORD PTR [rbp-0x8]
  403977:	mov    ecx,0x0
  40397c:	mov    edx,0x0
  403981:	mov    rdi,rax
  403984:	call   406645 <flatcc_builder_start_buffer@@Base>
  403989:	leave  
  40398a:	ret    
  40398b:	push   rbp
  40398c:	mov    rbp,rsp
  40398f:	sub    rsp,0x10
  403993:	mov    QWORD PTR [rbp-0x8],rdi
  403997:	mov    DWORD PTR [rbp-0xc],esi
  40399a:	mov    edx,DWORD PTR [rbp-0xc]
  40399d:	mov    rax,QWORD PTR [rbp-0x8]
  4039a1:	mov    esi,edx
  4039a3:	mov    rdi,rax
  4039a6:	call   406792 <flatcc_builder_end_buffer@@Base>
  4039ab:	leave  
  4039ac:	ret    
  4039ad:	push   rbp
  4039ae:	mov    rbp,rsp
  4039b1:	sub    rsp,0x10
  4039b5:	mov    QWORD PTR [rbp-0x8],rdi
  4039b9:	mov    rax,QWORD PTR [rbp-0x8]
  4039bd:	mov    esi,0x24
  4039c2:	mov    rdi,rax
  4039c5:	call   40740a <flatcc_builder_start_table@@Base>
  4039ca:	leave  
  4039cb:	ret    
  4039cc:	push   rbp
  4039cd:	mov    rbp,rsp
  4039d0:	sub    rsp,0x10
  4039d4:	mov    QWORD PTR [rbp-0x8],rdi
  4039d8:	mov    rax,QWORD PTR [rbp-0x8]
  4039dc:	mov    edx,0x1
  4039e1:	lea    rsi,[rip+0x7764]        # 40b14c <_IO_stdin_used@@Base+0x14c>
  4039e8:	mov    rdi,rax
  4039eb:	call   407e6c <flatcc_builder_check_required@@Base>
  4039f0:	test   eax,eax
  4039f2:	jne    403a13 <_start@@Base+0x783>
  4039f4:	lea    rcx,[rip+0x7ad5]        # 40b4d0 <_IO_stdin_used@@Base+0x4d0>
  4039fb:	mov    edx,0xeb
  403a00:	lea    rsi,[rip+0x7749]        # 40b150 <_IO_stdin_used@@Base+0x150>
  403a07:	lea    rdi,[rip+0x77c2]        # 40b1d0 <_IO_stdin_used@@Base+0x1d0>
  403a0e:	call   4031e0 <__assert_fail@plt>
  403a13:	mov    rax,QWORD PTR [rbp-0x8]
  403a17:	mov    rdi,rax
  403a1a:	call   407f19 <flatcc_builder_end_table@@Base>
  403a1f:	leave  
  403a20:	ret    
  403a21:	push   rbp
  403a22:	mov    rbp,rsp
  403a25:	sub    rsp,0x10
  403a29:	mov    QWORD PTR [rbp-0x8],rdi
  403a2d:	mov    rax,QWORD PTR [rbp-0x8]
  403a31:	mov    rdi,rax
  403a34:	call   40725e <flatcc_builder_start_offset_vector@@Base>
  403a39:	leave  
  403a3a:	ret    
  403a3b:	push   rbp
  403a3c:	mov    rbp,rsp
  403a3f:	sub    rsp,0x10
  403a43:	mov    QWORD PTR [rbp-0x8],rdi
  403a47:	mov    rax,QWORD PTR [rbp-0x8]
  403a4b:	mov    rdi,rax
  403a4e:	call   40885b <flatcc_builder_end_offset_vector@@Base>
  403a53:	leave  
  403a54:	ret    
  403a55:	push   rbp
  403a56:	mov    rbp,rsp
  403a59:	sub    rsp,0x10
  403a5d:	mov    QWORD PTR [rbp-0x8],rdi
  403a61:	mov    DWORD PTR [rbp-0xc],esi
  403a64:	cmp    DWORD PTR [rbp-0xc],0x0
  403a68:	je     403a7d <_start@@Base+0x7ed>
  403a6a:	mov    edx,DWORD PTR [rbp-0xc]
  403a6d:	mov    rax,QWORD PTR [rbp-0x8]
  403a71:	mov    esi,edx
  403a73:	mov    rdi,rax
  403a76:	call   406c90 <flatcc_builder_offset_vector_push@@Base>
  403a7b:	jmp    403a82 <_start@@Base+0x7f2>
  403a7d:	mov    eax,0x0
  403a82:	leave  
  403a83:	ret    
  403a84:	push   rbp
  403a85:	mov    rbp,rsp
  403a88:	sub    rsp,0x20
  403a8c:	mov    QWORD PTR [rbp-0x18],rdi
  403a90:	mov    DWORD PTR [rbp-0x1c],esi
  403a93:	cmp    DWORD PTR [rbp-0x1c],0x0
  403a97:	je     403ac5 <_start@@Base+0x835>
  403a99:	mov    rax,QWORD PTR [rbp-0x18]
  403a9d:	mov    esi,0x3
  403aa2:	mov    rdi,rax
  403aa5:	call   409794 <flatcc_builder_table_add_offset@@Base>
  403aaa:	mov    QWORD PTR [rbp-0x8],rax
  403aae:	cmp    QWORD PTR [rbp-0x8],0x0
  403ab3:	je     403ac5 <_start@@Base+0x835>
  403ab5:	mov    rax,QWORD PTR [rbp-0x8]
  403ab9:	mov    edx,DWORD PTR [rbp-0x1c]
  403abc:	mov    DWORD PTR [rax],edx
  403abe:	mov    eax,0x0
  403ac3:	jmp    403aca <_start@@Base+0x83a>
  403ac5:	mov    eax,0xffffffff
  403aca:	leave  
  403acb:	ret    
  403acc:	push   rbp
  403acd:	mov    rbp,rsp
  403ad0:	sub    rsp,0x10
  403ad4:	mov    QWORD PTR [rbp-0x8],rdi
  403ad8:	mov    rax,QWORD PTR [rbp-0x8]
  403adc:	mov    rdi,rax
  403adf:	call   40734f <flatcc_builder_start_string@@Base>
  403ae4:	leave  
  403ae5:	ret    
  403ae6:	push   rbp
  403ae7:	mov    rbp,rsp
  403aea:	sub    rsp,0x10
  403aee:	mov    QWORD PTR [rbp-0x8],rdi
  403af2:	mov    rax,QWORD PTR [rbp-0x8]
  403af6:	mov    rdi,rax
  403af9:	call   4094d2 <flatcc_builder_end_string@@Base>
  403afe:	mov    edx,eax
  403b00:	mov    rax,QWORD PTR [rbp-0x8]
  403b04:	mov    esi,edx
  403b06:	mov    rdi,rax
  403b09:	call   403a84 <_start@@Base+0x7f4>
  403b0e:	leave  
  403b0f:	ret    
  403b10:	push   rbp
  403b11:	mov    rbp,rsp
  403b14:	sub    rsp,0x10
  403b18:	mov    QWORD PTR [rbp-0x8],rdi
  403b1c:	mov    QWORD PTR [rbp-0x10],rsi
  403b20:	mov    rdx,QWORD PTR [rbp-0x10]
  403b24:	mov    rax,QWORD PTR [rbp-0x8]
  403b28:	mov    rsi,rdx
  403b2b:	mov    rdi,rax
  403b2e:	call   409457 <flatcc_builder_create_string_str@@Base>
  403b33:	mov    edx,eax
  403b35:	mov    rax,QWORD PTR [rbp-0x8]
  403b39:	mov    esi,edx
  403b3b:	mov    rdi,rax
  403b3e:	call   403a84 <_start@@Base+0x7f4>
  403b43:	leave  
  403b44:	ret    
  403b45:	push   rbp
  403b46:	mov    rbp,rsp
  403b49:	sub    rsp,0x20
  403b4d:	mov    QWORD PTR [rbp-0x18],rdi
  403b51:	mov    DWORD PTR [rbp-0x1c],esi
  403b54:	cmp    DWORD PTR [rbp-0x1c],0x0
  403b58:	je     403b86 <_start@@Base+0x8f6>
  403b5a:	mov    rax,QWORD PTR [rbp-0x18]
  403b5e:	mov    esi,0x5
  403b63:	mov    rdi,rax
  403b66:	call   409794 <flatcc_builder_table_add_offset@@Base>
  403b6b:	mov    QWORD PTR [rbp-0x8],rax
  403b6f:	cmp    QWORD PTR [rbp-0x8],0x0
  403b74:	je     403b86 <_start@@Base+0x8f6>
  403b76:	mov    rax,QWORD PTR [rbp-0x8]
  403b7a:	mov    edx,DWORD PTR [rbp-0x1c]
  403b7d:	mov    DWORD PTR [rax],edx
  403b7f:	mov    eax,0x0
  403b84:	jmp    403b8b <_start@@Base+0x8fb>
  403b86:	mov    eax,0xffffffff
  403b8b:	leave  
  403b8c:	ret    
  403b8d:	push   rbp
  403b8e:	mov    rbp,rsp
  403b91:	sub    rsp,0x10
  403b95:	mov    QWORD PTR [rbp-0x8],rdi
  403b99:	mov    rax,QWORD PTR [rbp-0x8]
  403b9d:	mov    rdi,rax
  403ba0:	call   4038c2 <_start@@Base+0x632>
  403ba5:	leave  
  403ba6:	ret    
  403ba7:	push   rbp
  403ba8:	mov    rbp,rsp
  403bab:	sub    rsp,0x10
  403baf:	mov    QWORD PTR [rbp-0x8],rdi
  403bb3:	mov    rax,QWORD PTR [rbp-0x8]
  403bb7:	mov    rdi,rax
  403bba:	call   4038eb <_start@@Base+0x65b>
  403bbf:	mov    edx,eax
  403bc1:	mov    rax,QWORD PTR [rbp-0x8]
  403bc5:	mov    esi,edx
  403bc7:	mov    rdi,rax
  403bca:	call   403b45 <_start@@Base+0x8b5>
  403bcf:	leave  
  403bd0:	ret    
  403bd1:	push   rbp
  403bd2:	mov    rbp,rsp
  403bd5:	sub    rsp,0x20
  403bd9:	mov    QWORD PTR [rbp-0x18],rdi
  403bdd:	mov    DWORD PTR [rbp-0x1c],esi
  403be0:	cmp    DWORD PTR [rbp-0x1c],0x0
  403be4:	je     403c12 <_start@@Base+0x982>
  403be6:	mov    rax,QWORD PTR [rbp-0x18]
  403bea:	mov    esi,0xb
  403bef:	mov    rdi,rax
  403bf2:	call   409794 <flatcc_builder_table_add_offset@@Base>
  403bf7:	mov    QWORD PTR [rbp-0x8],rax
  403bfb:	cmp    QWORD PTR [rbp-0x8],0x0
  403c00:	je     403c12 <_start@@Base+0x982>
  403c02:	mov    rax,QWORD PTR [rbp-0x8]
  403c06:	mov    edx,DWORD PTR [rbp-0x1c]
  403c09:	mov    DWORD PTR [rax],edx
  403c0b:	mov    eax,0x0
  403c10:	jmp    403c17 <_start@@Base+0x987>
  403c12:	mov    eax,0xffffffff
  403c17:	leave  
  403c18:	ret    
  403c19:	push   rbp
  403c1a:	mov    rbp,rsp
  403c1d:	sub    rsp,0x10
  403c21:	mov    QWORD PTR [rbp-0x8],rdi
  403c25:	mov    rax,QWORD PTR [rbp-0x8]
  403c29:	lea    rsi,[rip+0x74af]        # 40b0df <_IO_stdin_used@@Base+0xdf>
  403c30:	mov    rdi,rax
  403c33:	call   40395f <_start@@Base+0x6cf>
  403c38:	test   eax,eax
  403c3a:	jne    403c4a <_start@@Base+0x9ba>
  403c3c:	mov    rax,QWORD PTR [rbp-0x8]
  403c40:	mov    rdi,rax
  403c43:	call   4039ad <_start@@Base+0x71d>
  403c48:	jmp    403c4f <_start@@Base+0x9bf>
  403c4a:	mov    eax,0xffffffff
  403c4f:	leave  
  403c50:	ret    
  403c51:	push   rbp
  403c52:	mov    rbp,rsp
  403c55:	sub    rsp,0x10
  403c59:	mov    QWORD PTR [rbp-0x8],rdi
  403c5d:	mov    rax,QWORD PTR [rbp-0x8]
  403c61:	mov    rdi,rax
  403c64:	call   4039cc <_start@@Base+0x73c>
  403c69:	mov    edx,eax
  403c6b:	mov    rax,QWORD PTR [rbp-0x8]
  403c6f:	mov    esi,edx
  403c71:	mov    rdi,rax
  403c74:	call   40398b <_start@@Base+0x6fb>
  403c79:	leave  
  403c7a:	ret    
  403c7b:	endbr64 
  403c7f:	push   rbp
  403c80:	mov    rbp,rsp
  403c83:	sub    rsp,0x20
  403c87:	mov    rax,QWORD PTR fs:0x28
  403c90:	mov    QWORD PTR [rbp-0x8],rax
  403c94:	xor    eax,eax
  403c96:	lea    rax,[rbp-0x20]
  403c9a:	mov    esi,0x0
  403c9f:	mov    rdi,rax
  403ca2:	call   4031d0 <gettimeofday@plt>
  403ca7:	mov    rax,QWORD PTR [rip+0xc842]        # 4104f0 <__bss_start@@Base+0x420>
  403cae:	test   rax,rax
  403cb1:	jne    403cc9 <_start@@Base+0xa39>
  403cb3:	mov    rax,QWORD PTR [rbp-0x20]
  403cb7:	mov    rdx,QWORD PTR [rbp-0x18]
  403cbb:	mov    QWORD PTR [rip+0xc82e],rax        # 4104f0 <__bss_start@@Base+0x420>
  403cc2:	mov    QWORD PTR [rip+0xc82f],rdx        # 4104f8 <__bss_start@@Base+0x428>
  403cc9:	mov    rdx,QWORD PTR [rbp-0x20]
  403ccd:	mov    rax,QWORD PTR [rip+0xc81c]        # 4104f0 <__bss_start@@Base+0x420>
  403cd4:	sub    rdx,rax
  403cd7:	mov    rax,rdx
  403cda:	vcvtsi2sd xmm1,xmm1,rax
  403cdf:	mov    rdx,QWORD PTR [rbp-0x18]
  403ce3:	mov    rax,QWORD PTR [rip+0xc80e]        # 4104f8 <__bss_start@@Base+0x428>
  403cea:	sub    rdx,rax
  403ced:	mov    rax,rdx
  403cf0:	vcvtsi2sd xmm0,xmm0,rax
  403cf5:	vmovsd xmm2,QWORD PTR [rip+0x78f3]        # 40b5f0 <_IO_stdin_used@@Base+0x5f0>
  403cfd:	vdivsd xmm0,xmm0,xmm2
  403d01:	vaddsd xmm0,xmm1,xmm0
  403d05:	vmovq  rax,xmm0
  403d0a:	vmovq  xmm0,rax
  403d0f:	mov    rax,QWORD PTR [rbp-0x8]
  403d13:	xor    rax,QWORD PTR fs:0x28
  403d1c:	je     403d23 <_start@@Base+0xa93>
  403d1e:	call   4031b0 <__stack_chk_fail@plt>
  403d23:	leave  
  403d24:	ret    
  403d25:	endbr64 
  403d29:	push   rbp
  403d2a:	mov    rbp,rsp
  403d2d:	sub    rsp,0x40
  403d31:	mov    QWORD PTR [rbp-0x18],rdi
  403d35:	vmovsd QWORD PTR [rbp-0x20],xmm0
  403d3a:	vmovsd QWORD PTR [rbp-0x28],xmm1
  403d3f:	mov    QWORD PTR [rbp-0x30],rsi
  403d43:	mov    DWORD PTR [rbp-0x34],edx
  403d46:	mov    QWORD PTR [rbp-0x40],rcx
  403d4a:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  403d4f:	vsubsd xmm0,xmm0,QWORD PTR [rbp-0x20]
  403d54:	vmovsd QWORD PTR [rbp-0x10],xmm0
  403d59:	mov    rax,QWORD PTR [rbp-0x18]
  403d5d:	mov    rsi,rax
  403d60:	lea    rdi,[rip+0x7511]        # 40b278 <_IO_stdin_used@@Base+0x278>
  403d67:	mov    eax,0x0
  403d6c:	call   4031c0 <printf@plt>
  403d71:	mov    rax,QWORD PTR [rbp-0x10]
  403d75:	vmovq  xmm0,rax
  403d7a:	lea    rdi,[rip+0x7506]        # 40b287 <_IO_stdin_used@@Base+0x287>
  403d81:	mov    eax,0x1
  403d86:	call   4031c0 <printf@plt>
  403d8b:	mov    eax,DWORD PTR [rbp-0x34]
  403d8e:	mov    esi,eax
  403d90:	lea    rdi,[rip+0x7508]        # 40b29f <_IO_stdin_used@@Base+0x29f>
  403d97:	mov    eax,0x0
  403d9c:	call   4031c0 <printf@plt>
  403da1:	mov    rax,QWORD PTR [rbp-0x30]
  403da5:	mov    rsi,rax
  403da8:	lea    rdi,[rip+0x7500]        # 40b2af <_IO_stdin_used@@Base+0x2af>
  403daf:	mov    eax,0x0
  403db4:	call   4031c0 <printf@plt>
  403db9:	vcvtsi2sd xmm1,xmm1,DWORD PTR [rbp-0x34]
  403dbe:	mov    rax,QWORD PTR [rbp-0x30]
  403dc2:	test   rax,rax
  403dc5:	js     403dce <_start@@Base+0xb3e>
  403dc7:	vcvtsi2sd xmm0,xmm0,rax
  403dcc:	jmp    403de3 <_start@@Base+0xb53>
  403dce:	mov    rdx,rax
  403dd1:	shr    rdx,1
  403dd4:	and    eax,0x1
  403dd7:	or     rdx,rax
  403dda:	vcvtsi2sd xmm0,xmm0,rdx
  403ddf:	vaddsd xmm0,xmm0,xmm0
  403de3:	vmulsd xmm0,xmm1,xmm0
  403de7:	vmovsd xmm1,QWORD PTR [rip+0x7801]        # 40b5f0 <_IO_stdin_used@@Base+0x5f0>
  403def:	vdivsd xmm0,xmm0,xmm1
  403df3:	vdivsd xmm2,xmm0,QWORD PTR [rbp-0x10]
  403df8:	vmovq  rax,xmm2
  403dfd:	vmovq  xmm0,rax
  403e02:	lea    rdi,[rip+0x74b9]        # 40b2c2 <_IO_stdin_used@@Base+0x2c2>
  403e09:	mov    eax,0x1
  403e0e:	call   4031c0 <printf@plt>
  403e13:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x34]
  403e18:	vdivsd xmm3,xmm0,QWORD PTR [rbp-0x10]
  403e1d:	vmovq  rax,xmm3
  403e22:	vmovq  xmm0,rax
  403e27:	lea    rdi,[rip+0x74b2]        # 40b2e0 <_IO_stdin_used@@Base+0x2e0>
  403e2e:	mov    eax,0x1
  403e33:	call   4031c0 <printf@plt>
  403e38:	cmp    QWORD PTR [rbp-0x40],0x0
  403e3d:	je     403e74 <_start@@Base+0xbe4>
  403e3f:	cmp    DWORD PTR [rbp-0x34],0x1
  403e43:	je     403e74 <_start@@Base+0xbe4>
  403e45:	vmovsd xmm0,QWORD PTR [rip+0x77ab]        # 40b5f8 <_IO_stdin_used@@Base+0x5f8>
  403e4d:	vdivsd xmm4,xmm0,QWORD PTR [rbp-0x10]
  403e52:	vmovq  rax,xmm4
  403e57:	mov    rdx,QWORD PTR [rbp-0x40]
  403e5b:	vmovq  xmm0,rax
  403e60:	mov    rsi,rdx
  403e63:	lea    rdi,[rip+0x749e]        # 40b308 <_IO_stdin_used@@Base+0x308>
  403e6a:	mov    eax,0x1
  403e6f:	call   4031c0 <printf@plt>
  403e74:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  403e79:	vmovsd xmm0,QWORD PTR [rip+0x777f]        # 40b600 <_IO_stdin_used@@Base+0x600>
  403e81:	vmulsd xmm0,xmm1,xmm0
  403e85:	vcvtsi2sd xmm1,xmm1,DWORD PTR [rbp-0x34]
  403e8a:	vdivsd xmm0,xmm0,xmm1
  403e8e:	vmovsd QWORD PTR [rbp-0x8],xmm0
  403e93:	vmovsd xmm0,QWORD PTR [rip+0x776d]        # 40b608 <_IO_stdin_used@@Base+0x608>
  403e9b:	vcomisd xmm0,QWORD PTR [rbp-0x8]
  403ea0:	jbe    403ec1 <_start@@Base+0xc31>
  403ea2:	mov    rax,QWORD PTR [rbp-0x8]
  403ea6:	vmovq  xmm0,rax
  403eab:	lea    rdi,[rip+0x747a]        # 40b32c <_IO_stdin_used@@Base+0x32c>
  403eb2:	mov    eax,0x1
  403eb7:	call   4031c0 <printf@plt>
  403ebc:	jmp    403f67 <_start@@Base+0xcd7>
  403ec1:	vmovsd xmm0,QWORD PTR [rip+0x7727]        # 40b5f0 <_IO_stdin_used@@Base+0x5f0>
  403ec9:	vcomisd xmm0,QWORD PTR [rbp-0x8]
  403ece:	jbe    403efe <_start@@Base+0xc6e>
  403ed0:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  403ed5:	vmovsd xmm1,QWORD PTR [rip+0x772b]        # 40b608 <_IO_stdin_used@@Base+0x608>
  403edd:	vdivsd xmm5,xmm0,xmm1
  403ee1:	vmovq  rax,xmm5
  403ee6:	vmovq  xmm0,rax
  403eeb:	lea    rdi,[rip+0x7452]        # 40b344 <_IO_stdin_used@@Base+0x344>
  403ef2:	mov    eax,0x1
  403ef7:	call   4031c0 <printf@plt>
  403efc:	jmp    403f67 <_start@@Base+0xcd7>
  403efe:	vmovsd xmm0,QWORD PTR [rip+0x76fa]        # 40b600 <_IO_stdin_used@@Base+0x600>
  403f06:	vcomisd xmm0,QWORD PTR [rbp-0x8]
  403f0b:	jbe    403f3b <_start@@Base+0xcab>
  403f0d:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  403f12:	vmovsd xmm1,QWORD PTR [rip+0x76d6]        # 40b5f0 <_IO_stdin_used@@Base+0x5f0>
  403f1a:	vdivsd xmm6,xmm0,xmm1
  403f1e:	vmovq  rax,xmm6
  403f23:	vmovq  xmm0,rax
  403f28:	lea    rdi,[rip+0x742d]        # 40b35c <_IO_stdin_used@@Base+0x35c>
  403f2f:	mov    eax,0x1
  403f34:	call   4031c0 <printf@plt>
  403f39:	jmp    403f67 <_start@@Base+0xcd7>
  403f3b:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  403f40:	vmovsd xmm1,QWORD PTR [rip+0x76b8]        # 40b600 <_IO_stdin_used@@Base+0x600>
  403f48:	vdivsd xmm7,xmm0,xmm1
  403f4c:	vmovq  rax,xmm7
  403f51:	vmovq  xmm0,rax
  403f56:	lea    rdi,[rip+0x7417]        # 40b374 <_IO_stdin_used@@Base+0x374>
  403f5d:	mov    eax,0x1
  403f62:	call   4031c0 <printf@plt>
  403f67:	mov    eax,0x0
  403f6c:	leave  
  403f6d:	ret    
  403f6e:	endbr64 
  403f72:	push   rbp
  403f73:	mov    rbp,rsp
  403f76:	sub    rsp,0x20
  403f7a:	mov    QWORD PTR [rbp-0x18],rdi
  403f7e:	mov    rax,QWORD PTR [rbp-0x18]
  403f82:	mov    rdi,rax
  403f85:	call   4039ad <_start@@Base+0x71d>
  403f8a:	mov    rax,QWORD PTR [rbp-0x18]
  403f8e:	mov    rdi,rax
  403f91:	call   403acc <_start@@Base+0x83c>
  403f96:	mov    QWORD PTR [rbp-0x8],0x0
  403f9e:	jmp    403fbc <_start@@Base+0xd2c>
  403fa0:	mov    rax,QWORD PTR [rbp-0x18]
  403fa4:	mov    edx,0x7
  403fa9:	lea    rsi,[rip+0x73db]        # 40b38b <_IO_stdin_used@@Base+0x38b>
  403fb0:	mov    rdi,rax
  403fb3:	call   403932 <_start@@Base+0x6a2>
  403fb8:	inc    QWORD PTR [rbp-0x8]
  403fbc:	cmp    QWORD PTR [rbp-0x8],0x63
  403fc1:	jbe    403fa0 <_start@@Base+0xd10>
  403fc3:	mov    rax,QWORD PTR [rbp-0x18]
  403fc7:	mov    rdi,rax
  403fca:	call   403ae6 <_start@@Base+0x856>
  403fcf:	mov    rax,QWORD PTR [rbp-0x18]
  403fd3:	mov    rdi,rax
  403fd6:	call   403b8d <_start@@Base+0x8fd>
  403fdb:	mov    QWORD PTR [rbp-0x8],0x0
  403fe3:	jmp    404001 <_start@@Base+0xd71>
  403fe5:	mov    rax,QWORD PTR [rbp-0x18]
  403fe9:	mov    edx,0x3e8
  403fee:	lea    rsi,[rip+0xc10b]        # 410100 <__bss_start@@Base+0x30>
  403ff5:	mov    rdi,rax
  403ff8:	call   403905 <_start@@Base+0x675>
  403ffd:	inc    QWORD PTR [rbp-0x8]
  404001:	cmp    QWORD PTR [rbp-0x8],0x63
  404006:	jbe    403fe5 <_start@@Base+0xd55>
  404008:	mov    rax,QWORD PTR [rbp-0x18]
  40400c:	mov    rdi,rax
  40400f:	call   403ba7 <_start@@Base+0x917>
  404014:	mov    rax,QWORD PTR [rbp-0x18]
  404018:	mov    rdi,rax
  40401b:	call   4039cc <_start@@Base+0x73c>
  404020:	leave  
  404021:	ret    
  404022:	endbr64 
  404026:	push   rbp
  404027:	mov    rbp,rsp
  40402a:	sub    rsp,0x20
  40402e:	mov    QWORD PTR [rbp-0x18],rdi
  404032:	mov    rax,QWORD PTR [rbp-0x18]
  404036:	mov    rdi,rax
  404039:	call   403a21 <_start@@Base+0x791>
  40403e:	mov    QWORD PTR [rbp-0x8],0x0
  404046:	jmp    404091 <_start@@Base+0xe01>
  404048:	mov    rax,QWORD PTR [rbp-0x18]
  40404c:	mov    rdi,rax
  40404f:	call   403f6e <_start@@Base+0xcde>
  404054:	mov    DWORD PTR [rbp-0xc],eax
  404057:	cmp    DWORD PTR [rbp-0xc],0x0
  40405b:	jne    40407c <_start@@Base+0xdec>
  40405d:	lea    rcx,[rip+0x748c]        # 40b4f0 <_IO_stdin_used@@Base+0x4f0>
  404064:	mov    edx,0x2a
  404069:	lea    rsi,[rip+0x7328]        # 40b398 <_IO_stdin_used@@Base+0x398>
  404070:	lea    rdi,[rip+0x7386]        # 40b3fd <_IO_stdin_used@@Base+0x3fd>
  404077:	call   4031e0 <__assert_fail@plt>
  40407c:	mov    edx,DWORD PTR [rbp-0xc]
  40407f:	mov    rax,QWORD PTR [rbp-0x18]
  404083:	mov    esi,edx
  404085:	mov    rdi,rax
  404088:	call   403a55 <_start@@Base+0x7c5>
  40408d:	inc    QWORD PTR [rbp-0x8]
  404091:	cmp    QWORD PTR [rbp-0x8],0x3e7
  404099:	jbe    404048 <_start@@Base+0xdb8>
  40409b:	mov    rax,QWORD PTR [rbp-0x18]
  40409f:	mov    rdi,rax
  4040a2:	call   403a3b <_start@@Base+0x7ab>
  4040a7:	leave  
  4040a8:	ret    
  4040a9:	endbr64 
  4040ad:	push   rbp
  4040ae:	mov    rbp,rsp
  4040b1:	sub    rsp,0x20
  4040b5:	mov    QWORD PTR [rbp-0x18],rdi
  4040b9:	mov    rax,QWORD PTR [rbp-0x18]
  4040bd:	mov    rdi,rax
  4040c0:	call   405382 <flatcc_builder_reset@@Base>
  4040c5:	mov    rax,QWORD PTR [rbp-0x18]
  4040c9:	mov    rdi,rax
  4040cc:	call   403c19 <_start@@Base+0x989>
  4040d1:	mov    rax,QWORD PTR [rbp-0x18]
  4040d5:	lea    rsi,[rip+0x7323]        # 40b3ff <_IO_stdin_used@@Base+0x3ff>
  4040dc:	mov    rdi,rax
  4040df:	call   403b10 <_start@@Base+0x880>
  4040e4:	mov    rax,QWORD PTR [rbp-0x18]
  4040e8:	mov    rdi,rax
  4040eb:	call   404022 <_start@@Base+0xd92>
  4040f0:	mov    DWORD PTR [rbp-0x4],eax
  4040f3:	cmp    DWORD PTR [rbp-0x4],0x0
  4040f7:	jne    404118 <_start@@Base+0xe88>
  4040f9:	lea    rcx,[rip+0x7400]        # 40b500 <_IO_stdin_used@@Base+0x500>
  404100:	mov    edx,0x38
  404105:	lea    rsi,[rip+0x728c]        # 40b398 <_IO_stdin_used@@Base+0x398>
  40410c:	lea    rdi,[rip+0x72f9]        # 40b40c <_IO_stdin_used@@Base+0x40c>
  404113:	call   4031e0 <__assert_fail@plt>
  404118:	mov    edx,DWORD PTR [rbp-0x4]
  40411b:	mov    rax,QWORD PTR [rbp-0x18]
  40411f:	mov    esi,edx
  404121:	mov    rdi,rax
  404124:	call   403bd1 <_start@@Base+0x941>
  404129:	mov    rax,QWORD PTR [rbp-0x18]
  40412d:	mov    rdi,rax
  404130:	call   403c51 <_start@@Base+0x9c1>
  404135:	mov    eax,0x0
  40413a:	leave  
  40413b:	ret    
  40413c:	endbr64 
  404140:	push   rbp
  404141:	mov    rbp,rsp
  404144:	sub    rsp,0x30
  404148:	mov    QWORD PTR [rbp-0x28],rdi
  40414c:	mov    QWORD PTR [rbp-0x30],rsi
  404150:	mov    rax,QWORD PTR [rbp-0x30]
  404154:	mov    rdi,rax
  404157:	call   403629 <_start@@Base+0x399>
  40415c:	mov    QWORD PTR [rbp-0x10],rax
  404160:	mov    rax,QWORD PTR [rbp-0x30]
  404164:	mov    rdi,rax
  404167:	call   403718 <_start@@Base+0x488>
  40416c:	mov    QWORD PTR [rbp-0x8],rax
  404170:	mov    rax,QWORD PTR [rbp-0x10]
  404174:	mov    rdi,rax
  404177:	call   403454 <_start@@Base+0x1c4>
  40417c:	cmp    rax,0x2bc
  404182:	je     4041a3 <_start@@Base+0xf13>
  404184:	lea    rcx,[rip+0x738d]        # 40b518 <_IO_stdin_used@@Base+0x518>
  40418b:	mov    edx,0x4a
  404190:	lea    rsi,[rip+0x7201]        # 40b398 <_IO_stdin_used@@Base+0x398>
  404197:	lea    rdi,[rip+0x7271]        # 40b40f <_IO_stdin_used@@Base+0x40f>
  40419e:	call   4031e0 <__assert_fail@plt>
  4041a3:	mov    rax,QWORD PTR [rbp-0x8]
  4041a7:	mov    rdi,rax
  4041aa:	call   403482 <_start@@Base+0x1f2>
  4041af:	cmp    rax,0x186a0
  4041b5:	je     4041d6 <_start@@Base+0xf46>
  4041b7:	lea    rcx,[rip+0x735a]        # 40b518 <_IO_stdin_used@@Base+0x518>
  4041be:	mov    edx,0x4e
  4041c3:	lea    rsi,[rip+0x71ce]        # 40b398 <_IO_stdin_used@@Base+0x398>
  4041ca:	lea    rdi,[rip+0x723e]        # 40b40f <_IO_stdin_used@@Base+0x40f>
  4041d1:	call   4031e0 <__assert_fail@plt>
  4041d6:	mov    QWORD PTR [rbp-0x18],0x0
  4041de:	jmp    404295 <_start@@Base+0x1005>
  4041e3:	mov    rdx,QWORD PTR [rbp-0x18]
  4041e7:	mov    rax,rdx
  4041ea:	shl    rax,0x3
  4041ee:	sub    rax,rdx
  4041f1:	mov    rdx,rax
  4041f4:	mov    rax,QWORD PTR [rbp-0x10]
  4041f8:	add    rax,rdx
  4041fb:	mov    edx,0x7
  404200:	lea    rsi,[rip+0x7184]        # 40b38b <_IO_stdin_used@@Base+0x38b>
  404207:	mov    rdi,rax
  40420a:	call   403210 <memcmp@plt>
  40420f:	test   eax,eax
  404211:	je     404291 <_start@@Base+0x1001>
  404213:	cmp    QWORD PTR [rbp-0x10],0x0
  404218:	je     404220 <_start@@Base+0xf90>
  40421a:	mov    rax,QWORD PTR [rbp-0x10]
  40421e:	jmp    404227 <_start@@Base+0xf97>
  404220:	lea    rax,[rip+0x71ea]        # 40b411 <_IO_stdin_used@@Base+0x411>
  404227:	mov    rcx,QWORD PTR [rbp-0x18]
  40422b:	mov    rdx,rax
  40422e:	mov    rsi,rcx
  404231:	lea    rdi,[rip+0x71e0]        # 40b418 <_IO_stdin_used@@Base+0x418>
  404238:	mov    eax,0x0
  40423d:	call   4031c0 <printf@plt>
  404242:	mov    rdx,QWORD PTR [rbp-0x18]
  404246:	mov    rax,rdx
  404249:	shl    rax,0x3
  40424d:	sub    rax,rdx
  404250:	mov    rdx,rax
  404253:	mov    rax,QWORD PTR [rbp-0x10]
  404257:	add    rax,rdx
  40425a:	sub    rax,QWORD PTR [rbp-0x28]
  40425e:	mov    rsi,rax
  404261:	lea    rdi,[rip+0x71d0]        # 40b438 <_IO_stdin_used@@Base+0x438>
  404268:	mov    eax,0x0
  40426d:	call   4031c0 <printf@plt>
  404272:	lea    rcx,[rip+0x729f]        # 40b518 <_IO_stdin_used@@Base+0x518>
  404279:	mov    edx,0x55
  40427e:	lea    rsi,[rip+0x7113]        # 40b398 <_IO_stdin_used@@Base+0x398>
  404285:	lea    rdi,[rip+0x7183]        # 40b40f <_IO_stdin_used@@Base+0x40f>
  40428c:	call   4031e0 <__assert_fail@plt>
  404291:	inc    QWORD PTR [rbp-0x18]
  404295:	cmp    QWORD PTR [rbp-0x18],0x63
  40429a:	jbe    4041e3 <_start@@Base+0xf53>
  4042a0:	mov    QWORD PTR [rbp-0x18],0x0
  4042a8:	jmp    4042f7 <_start@@Base+0x1067>
  4042aa:	mov    rax,QWORD PTR [rbp-0x18]
  4042ae:	imul   rdx,rax,0x3e8
  4042b5:	mov    rax,QWORD PTR [rbp-0x8]
  4042b9:	add    rax,rdx
  4042bc:	mov    edx,0x3e8
  4042c1:	lea    rsi,[rip+0xbe38]        # 410100 <__bss_start@@Base+0x30>
  4042c8:	mov    rdi,rax
  4042cb:	call   403210 <memcmp@plt>
  4042d0:	test   eax,eax
  4042d2:	je     4042f3 <_start@@Base+0x1063>
  4042d4:	lea    rcx,[rip+0x723d]        # 40b518 <_IO_stdin_used@@Base+0x518>
  4042db:	mov    edx,0x5b
  4042e0:	lea    rsi,[rip+0x70b1]        # 40b398 <_IO_stdin_used@@Base+0x398>
  4042e7:	lea    rdi,[rip+0x7121]        # 40b40f <_IO_stdin_used@@Base+0x40f>
  4042ee:	call   4031e0 <__assert_fail@plt>
  4042f3:	inc    QWORD PTR [rbp-0x18]
  4042f7:	cmp    QWORD PTR [rbp-0x18],0x63
  4042fc:	jbe    4042aa <_start@@Base+0x101a>
  4042fe:	mov    eax,0x0
  404303:	leave  
  404304:	ret    

0000000000404305 <main@@Base>:
  404305:	endbr64 
  404309:	push   rbp
  40430a:	mov    rbp,rsp
  40430d:	sub    rsp,0x1f0
  404314:	mov    DWORD PTR [rbp-0x1e4],edi
  40431a:	mov    QWORD PTR [rbp-0x1f0],rsi
  404321:	mov    rax,QWORD PTR fs:0x28
  40432a:	mov    QWORD PTR [rbp-0x8],rax
  40432e:	xor    eax,eax
  404330:	mov    DWORD PTR [rbp-0x1d4],0xa
  40433a:	mov    DWORD PTR [rbp-0x1dc],0x0
  404344:	lea    rax,[rbp-0x190]
  40434b:	mov    QWORD PTR [rbp-0x1c8],rax
  404352:	mov    rax,QWORD PTR [rbp-0x1c8]
  404359:	mov    rdi,rax
  40435c:	call   40513b <flatcc_builder_init@@Base>
  404361:	mov    rax,QWORD PTR [rbp-0x1c8]
  404368:	mov    rdi,rax
  40436b:	call   4040a9 <_start@@Base+0xe19>
  404370:	lea    rdx,[rbp-0x1d0]
  404377:	mov    rax,QWORD PTR [rbp-0x1c8]
  40437e:	mov    rsi,rdx
  404381:	mov    rdi,rax
  404384:	call   409bac <flatcc_builder_finalize_buffer@@Base>
  404389:	mov    QWORD PTR [rbp-0x1c0],rax
  404390:	lea    rsi,[rip+0x70ae]        # 40b445 <_IO_stdin_used@@Base+0x445>
  404397:	lea    rdi,[rip+0x70aa]        # 40b448 <_IO_stdin_used@@Base+0x448>
  40439e:	call   403260 <fopen@plt>
  4043a3:	mov    QWORD PTR [rbp-0x1b8],rax
  4043aa:	cmp    QWORD PTR [rbp-0x1b8],0x0
  4043b2:	jne    4043c3 <main@@Base+0xbe>
  4043b4:	mov    DWORD PTR [rbp-0x1dc],0xffffffff
  4043be:	jmp    40463b <main@@Base+0x336>
  4043c3:	mov    rdx,QWORD PTR [rbp-0x1d0]
  4043ca:	mov    rcx,QWORD PTR [rbp-0x1b8]
  4043d1:	mov    rax,QWORD PTR [rbp-0x1c0]
  4043d8:	mov    esi,0x1
  4043dd:	mov    rdi,rax
  4043e0:	call   403270 <fwrite@plt>
  4043e5:	mov    rdx,rax
  4043e8:	mov    rax,QWORD PTR [rbp-0x1d0]
  4043ef:	cmp    rdx,rax
  4043f2:	setne  al
  4043f5:	movzx  eax,al
  4043f8:	or     DWORD PTR [rbp-0x1dc],eax
  4043fe:	mov    rax,QWORD PTR [rbp-0x1b8]
  404405:	mov    rdi,rax
  404408:	call   403190 <fclose@plt>
  40440d:	cmp    DWORD PTR [rbp-0x1dc],0x0
  404414:	jne    404637 <main@@Base+0x332>
  40441a:	mov    rax,QWORD PTR [rbp-0x1d0]
  404421:	mov    rsi,rax
  404424:	lea    rdi,[rip+0x7033]        # 40b45e <_IO_stdin_used@@Base+0x45e>
  40442b:	mov    eax,0x0
  404430:	call   4031c0 <printf@plt>
  404435:	lea    rdi,[rip+0x7034]        # 40b470 <_IO_stdin_used@@Base+0x470>
  40443c:	call   403180 <puts@plt>
  404441:	call   403c7b <_start@@Base+0x9eb>
  404446:	vmovq  rax,xmm0
  40444b:	mov    QWORD PTR [rbp-0x1b0],rax
  404452:	mov    DWORD PTR [rbp-0x1e0],0x0
  40445c:	jmp    4045dc <main@@Base+0x2d7>
  404461:	mov    rax,QWORD PTR [rbp-0x1c8]
  404468:	mov    rdi,rax
  40446b:	call   4040a9 <_start@@Base+0xe19>
  404470:	mov    rdx,QWORD PTR [rbp-0x1d0]
  404477:	mov    rcx,QWORD PTR [rbp-0x1c0]
  40447e:	mov    rax,QWORD PTR [rbp-0x1c8]
  404485:	mov    rsi,rcx
  404488:	mov    rdi,rax
  40448b:	call   409b31 <flatcc_builder_copy_buffer@@Base>
  404490:	mov    rax,QWORD PTR [rbp-0x1c0]
  404497:	mov    rdi,rax
  40449a:	call   4035d6 <_start@@Base+0x346>
  40449f:	mov    QWORD PTR [rbp-0x1a8],rax
  4044a6:	mov    rax,QWORD PTR [rbp-0x1a8]
  4044ad:	mov    rdi,rax
  4044b0:	call   403629 <_start@@Base+0x399>
  4044b5:	lea    rsi,[rip+0x6f43]        # 40b3ff <_IO_stdin_used@@Base+0x3ff>
  4044bc:	mov    rdi,rax
  4044bf:	call   403220 <strcmp@plt>
  4044c4:	or     DWORD PTR [rbp-0x1dc],eax
  4044ca:	cmp    DWORD PTR [rbp-0x1dc],0x0
  4044d1:	je     4044f2 <main@@Base+0x1ed>
  4044d3:	lea    rcx,[rip+0x70a7]        # 40b581 <_IO_stdin_used@@Base+0x581>
  4044da:	mov    edx,0x8b
  4044df:	lea    rsi,[rip+0x6eb2]        # 40b398 <_IO_stdin_used@@Base+0x398>
  4044e6:	lea    rdi,[rip+0x6f94]        # 40b481 <_IO_stdin_used@@Base+0x481>
  4044ed:	call   4031e0 <__assert_fail@plt>
  4044f2:	mov    rax,QWORD PTR [rbp-0x1a8]
  4044f9:	mov    rdi,rax
  4044fc:	call   4037ed <_start@@Base+0x55d>
  404501:	mov    QWORD PTR [rbp-0x1a0],rax
  404508:	mov    rax,QWORD PTR [rbp-0x1a0]
  40450f:	mov    rdi,rax
  404512:	call   403539 <_start@@Base+0x2a9>
  404517:	cmp    rax,0x3e8
  40451d:	setne  al
  404520:	movzx  eax,al
  404523:	or     DWORD PTR [rbp-0x1dc],eax
  404529:	cmp    DWORD PTR [rbp-0x1dc],0x0
  404530:	je     404551 <main@@Base+0x24c>
  404532:	lea    rcx,[rip+0x7048]        # 40b581 <_IO_stdin_used@@Base+0x581>
  404539:	mov    edx,0x8f
  40453e:	lea    rsi,[rip+0x6e53]        # 40b398 <_IO_stdin_used@@Base+0x398>
  404545:	lea    rdi,[rip+0x6f35]        # 40b481 <_IO_stdin_used@@Base+0x481>
  40454c:	call   4031e0 <__assert_fail@plt>
  404551:	mov    DWORD PTR [rbp-0x1d8],0x0
  40455b:	jmp    4045c1 <main@@Base+0x2bc>
  40455d:	mov    eax,DWORD PTR [rbp-0x1d8]
  404563:	movsxd rdx,eax
  404566:	mov    rax,QWORD PTR [rbp-0x1a0]
  40456d:	mov    rsi,rdx
  404570:	mov    rdi,rax
  404573:	call   403567 <_start@@Base+0x2d7>
  404578:	mov    rdx,rax
  40457b:	mov    rax,QWORD PTR [rbp-0x1c0]
  404582:	mov    rsi,rdx
  404585:	mov    rdi,rax
  404588:	call   40413c <_start@@Base+0xeac>
  40458d:	or     DWORD PTR [rbp-0x1dc],eax
  404593:	cmp    DWORD PTR [rbp-0x1dc],0x0
  40459a:	je     4045bb <main@@Base+0x2b6>
  40459c:	lea    rcx,[rip+0x6fde]        # 40b581 <_IO_stdin_used@@Base+0x581>
  4045a3:	mov    edx,0x93
  4045a8:	lea    rsi,[rip+0x6de9]        # 40b398 <_IO_stdin_used@@Base+0x398>
  4045af:	lea    rdi,[rip+0x6ecb]        # 40b481 <_IO_stdin_used@@Base+0x481>
  4045b6:	call   4031e0 <__assert_fail@plt>
  4045bb:	inc    DWORD PTR [rbp-0x1d8]
  4045c1:	cmp    DWORD PTR [rbp-0x1d8],0x3e7
  4045cb:	jle    40455d <main@@Base+0x258>
  4045cd:	cmp    DWORD PTR [rbp-0x1dc],0x0
  4045d4:	jne    40463a <main@@Base+0x335>
  4045d6:	inc    DWORD PTR [rbp-0x1e0]
  4045dc:	mov    eax,DWORD PTR [rbp-0x1e0]
  4045e2:	cmp    eax,DWORD PTR [rbp-0x1d4]
  4045e8:	jl     404461 <main@@Base+0x15c>
  4045ee:	call   403c7b <_start@@Base+0x9eb>
  4045f3:	vmovq  rax,xmm0
  4045f8:	mov    QWORD PTR [rbp-0x198],rax
  4045ff:	mov    rsi,QWORD PTR [rbp-0x1d0]
  404606:	mov    edx,DWORD PTR [rbp-0x1d4]
  40460c:	vmovsd xmm0,QWORD PTR [rbp-0x198]
  404614:	mov    rax,QWORD PTR [rbp-0x1b0]
  40461b:	mov    ecx,0x0
  404620:	vmovapd xmm1,xmm0
  404624:	vmovq  xmm0,rax
  404629:	lea    rdi,[rip+0x6e60]        # 40b490 <_IO_stdin_used@@Base+0x490>
  404630:	call   403d25 <_start@@Base+0xa95>
  404635:	jmp    40463b <main@@Base+0x336>
  404637:	nop
  404638:	jmp    40463b <main@@Base+0x336>
  40463a:	nop
  40463b:	mov    rax,QWORD PTR [rbp-0x1c8]
  404642:	mov    rdi,rax
  404645:	call   4053aa <flatcc_builder_clear@@Base>
  40464a:	mov    rax,QWORD PTR [rbp-0x1c0]
  404651:	mov    rdi,rax
  404654:	call   403160 <free@plt>
  404659:	cmp    DWORD PTR [rbp-0x1dc],0x0
  404660:	je     40466e <main@@Base+0x369>
  404662:	lea    rdi,[rip+0x6e50]        # 40b4b9 <_IO_stdin_used@@Base+0x4b9>
  404669:	call   403180 <puts@plt>
  40466e:	mov    eax,DWORD PTR [rbp-0x1dc]
  404674:	mov    rcx,QWORD PTR [rbp-0x8]
  404678:	xor    rcx,QWORD PTR fs:0x28
  404681:	je     404688 <main@@Base+0x383>
  404683:	call   4031b0 <__stack_chk_fail@plt>
  404688:	leave  
  404689:	ret    
  40468a:	push   rbp
  40468b:	mov    rbp,rsp
  40468e:	sub    rsp,0x30
  404692:	mov    QWORD PTR [rbp-0x28],rdi
  404696:	mov    QWORD PTR [rbp-0x30],rsi
  40469a:	mov    rax,QWORD PTR fs:0x28
  4046a3:	mov    QWORD PTR [rbp-0x8],rax
  4046a7:	xor    eax,eax
  4046a9:	mov    QWORD PTR [rbp-0x10],0x0
  4046b1:	cmp    QWORD PTR [rbp-0x28],0x7
  4046b6:	ja     4046c0 <main@@Base+0x3bb>
  4046b8:	mov    QWORD PTR [rbp-0x28],0x8
  4046c0:	mov    rdx,QWORD PTR [rbp-0x30]
  4046c4:	mov    rcx,QWORD PTR [rbp-0x28]
  4046c8:	lea    rax,[rbp-0x10]
  4046cc:	mov    rsi,rcx
  4046cf:	mov    rdi,rax
  4046d2:	call   403280 <posix_memalign@plt>
  4046d7:	mov    DWORD PTR [rbp-0x14],eax
  4046da:	cmp    DWORD PTR [rbp-0x14],0x0
  4046de:	je     4046fd <main@@Base+0x3f8>
  4046e0:	mov    rax,QWORD PTR [rbp-0x10]
  4046e4:	test   rax,rax
  4046e7:	je     4046fd <main@@Base+0x3f8>
  4046e9:	mov    rax,QWORD PTR [rbp-0x10]
  4046ed:	mov    rdi,rax
  4046f0:	call   403160 <free@plt>
  4046f5:	mov    QWORD PTR [rbp-0x10],0x0
  4046fd:	mov    rax,QWORD PTR [rbp-0x10]
  404701:	mov    rcx,QWORD PTR [rbp-0x8]
  404705:	xor    rcx,QWORD PTR fs:0x28
  40470e:	je     404715 <main@@Base+0x410>
  404710:	call   4031b0 <__stack_chk_fail@plt>
  404715:	leave  
  404716:	ret    
  404717:	push   rbp
  404718:	mov    rbp,rsp
  40471b:	mov    DWORD PTR [rbp-0x4],edi
  40471e:	mov    eax,DWORD PTR [rbp-0x4]
  404721:	pop    rbp
  404722:	ret    
  404723:	push   rbp
  404724:	mov    rbp,rsp
  404727:	mov    eax,edi
  404729:	mov    BYTE PTR [rbp-0x4],al
  40472c:	movzx  eax,BYTE PTR [rbp-0x4]
  404730:	pop    rbp
  404731:	ret    
  404732:	push   rbp
  404733:	mov    rbp,rsp
  404736:	mov    DWORD PTR [rbp-0x4],edi
  404739:	mov    eax,DWORD PTR [rbp-0x4]
  40473c:	pop    rbp
  40473d:	ret    
  40473e:	push   rbp
  40473f:	mov    rbp,rsp
  404742:	mov    QWORD PTR [rbp-0x8],rdi
  404746:	mov    QWORD PTR [rbp-0x10],rsi
  40474a:	mov    rax,QWORD PTR [rbp-0x8]
  40474e:	mov    rdx,QWORD PTR [rax]
  404751:	mov    rax,QWORD PTR [rbp-0x8]
  404755:	mov    rax,QWORD PTR [rax+0x8]
  404759:	cmp    rdx,rax
  40475c:	jne    40477e <main@@Base+0x479>
  40475e:	cmp    QWORD PTR [rbp-0x10],0x0
  404763:	je     404774 <main@@Base+0x46f>
  404765:	mov    rax,QWORD PTR [rbp-0x8]
  404769:	mov    rdx,QWORD PTR [rax+0x30]
  40476d:	mov    rax,QWORD PTR [rbp-0x10]
  404771:	mov    QWORD PTR [rax],rdx
  404774:	mov    rax,QWORD PTR [rbp-0x8]
  404778:	mov    rax,QWORD PTR [rax+0x10]
  40477c:	jmp    404795 <main@@Base+0x490>
  40477e:	cmp    QWORD PTR [rbp-0x10],0x0
  404783:	je     404790 <main@@Base+0x48b>
  404785:	mov    rax,QWORD PTR [rbp-0x10]
  404789:	mov    QWORD PTR [rax],0x0
  404790:	mov    eax,0x0
  404795:	pop    rbp
  404796:	ret    
  404797:	push   rbp
  404798:	mov    rbp,rsp
  40479b:	sub    rsp,0x20
  40479f:	mov    QWORD PTR [rbp-0x18],rdi
  4047a3:	mov    QWORD PTR [rbp-0x20],rsi
  4047a7:	mov    rdx,QWORD PTR [rbp-0x20]
  4047ab:	mov    rax,QWORD PTR [rbp-0x18]
  4047af:	mov    esi,0x0
  4047b4:	mov    rdi,rax
  4047b7:	call   403200 <memchr@plt>
  4047bc:	mov    QWORD PTR [rbp-0x8],rax
  4047c0:	cmp    QWORD PTR [rbp-0x8],0x0
  4047c5:	je     4047d1 <main@@Base+0x4cc>
  4047c7:	mov    rax,QWORD PTR [rbp-0x8]
  4047cb:	sub    rax,QWORD PTR [rbp-0x18]
  4047cf:	jmp    4047d5 <main@@Base+0x4d0>
  4047d1:	mov    rax,QWORD PTR [rbp-0x20]
  4047d5:	leave  
  4047d6:	ret    

00000000004047d7 <flatcc_builder_default_alloc@@Base>:
  4047d7:	endbr64 
  4047db:	push   rbp
  4047dc:	mov    rbp,rsp
  4047df:	sub    rsp,0x30
  4047e3:	mov    QWORD PTR [rbp-0x18],rdi
  4047e7:	mov    QWORD PTR [rbp-0x20],rsi
  4047eb:	mov    QWORD PTR [rbp-0x28],rdx
  4047ef:	mov    DWORD PTR [rbp-0x2c],ecx
  4047f2:	mov    DWORD PTR [rbp-0x30],r8d
  4047f6:	cmp    QWORD PTR [rbp-0x28],0x0
  4047fb:	jne    404839 <flatcc_builder_default_alloc@@Base+0x62>
  4047fd:	mov    rax,QWORD PTR [rbp-0x20]
  404801:	mov    rax,QWORD PTR [rax]
  404804:	test   rax,rax
  404807:	je     40482f <flatcc_builder_default_alloc@@Base+0x58>
  404809:	mov    rax,QWORD PTR [rbp-0x20]
  40480d:	mov    rax,QWORD PTR [rax]
  404810:	mov    rdi,rax
  404813:	call   403160 <free@plt>
  404818:	mov    rax,QWORD PTR [rbp-0x20]
  40481c:	mov    QWORD PTR [rax],0x0
  404823:	mov    rax,QWORD PTR [rbp-0x20]
  404827:	mov    QWORD PTR [rax+0x8],0x0
  40482f:	mov    eax,0x0
  404834:	jmp    404948 <flatcc_builder_default_alloc@@Base+0x171>
  404839:	cmp    DWORD PTR [rbp-0x30],0x4
  40483d:	je     40486f <flatcc_builder_default_alloc@@Base+0x98>
  40483f:	cmp    DWORD PTR [rbp-0x30],0x4
  404843:	jg     40484d <flatcc_builder_default_alloc@@Base+0x76>
  404845:	cmp    DWORD PTR [rbp-0x30],0x1
  404849:	je     40485b <flatcc_builder_default_alloc@@Base+0x84>
  40484b:	jmp    404883 <flatcc_builder_default_alloc@@Base+0xac>
  40484d:	cmp    DWORD PTR [rbp-0x30],0x5
  404851:	je     404865 <flatcc_builder_default_alloc@@Base+0x8e>
  404853:	cmp    DWORD PTR [rbp-0x30],0x7
  404857:	je     404879 <flatcc_builder_default_alloc@@Base+0xa2>
  404859:	jmp    404883 <flatcc_builder_default_alloc@@Base+0xac>
  40485b:	mov    QWORD PTR [rbp-0x10],0x100
  404863:	jmp    40488c <flatcc_builder_default_alloc@@Base+0xb5>
  404865:	mov    rax,QWORD PTR [rbp-0x28]
  404869:	mov    QWORD PTR [rbp-0x10],rax
  40486d:	jmp    40488c <flatcc_builder_default_alloc@@Base+0xb5>
  40486f:	mov    QWORD PTR [rbp-0x10],0x120
  404877:	jmp    40488c <flatcc_builder_default_alloc@@Base+0xb5>
  404879:	mov    QWORD PTR [rbp-0x10],0x40
  404881:	jmp    40488c <flatcc_builder_default_alloc@@Base+0xb5>
  404883:	mov    QWORD PTR [rbp-0x10],0x20
  40488b:	nop
  40488c:	jmp    404892 <flatcc_builder_default_alloc@@Base+0xbb>
  40488e:	shl    QWORD PTR [rbp-0x10],1
  404892:	mov    rax,QWORD PTR [rbp-0x10]
  404896:	cmp    rax,QWORD PTR [rbp-0x28]
  40489a:	jb     40488e <flatcc_builder_default_alloc@@Base+0xb7>
  40489c:	mov    rax,QWORD PTR [rbp-0x20]
  4048a0:	mov    rax,QWORD PTR [rax+0x8]
  4048a4:	cmp    QWORD PTR [rbp-0x28],rax
  4048a8:	ja     4048c5 <flatcc_builder_default_alloc@@Base+0xee>
  4048aa:	mov    rax,QWORD PTR [rbp-0x20]
  4048ae:	mov    rax,QWORD PTR [rax+0x8]
  4048b2:	shr    rax,1
  4048b5:	cmp    QWORD PTR [rbp-0x10],rax
  4048b9:	ja     4048c5 <flatcc_builder_default_alloc@@Base+0xee>
  4048bb:	mov    eax,0x0
  4048c0:	jmp    404948 <flatcc_builder_default_alloc@@Base+0x171>
  4048c5:	mov    rax,QWORD PTR [rbp-0x20]
  4048c9:	mov    rax,QWORD PTR [rax]
  4048cc:	mov    rdx,QWORD PTR [rbp-0x10]
  4048d0:	mov    rsi,rdx
  4048d3:	mov    rdi,rax
  4048d6:	call   403250 <realloc@plt>
  4048db:	mov    QWORD PTR [rbp-0x8],rax
  4048df:	cmp    QWORD PTR [rbp-0x8],0x0
  4048e4:	jne    4048ed <flatcc_builder_default_alloc@@Base+0x116>
  4048e6:	mov    eax,0xffffffff
  4048eb:	jmp    404948 <flatcc_builder_default_alloc@@Base+0x171>
  4048ed:	cmp    DWORD PTR [rbp-0x2c],0x0
  4048f1:	je     40492c <flatcc_builder_default_alloc@@Base+0x155>
  4048f3:	mov    rax,QWORD PTR [rbp-0x20]
  4048f7:	mov    rax,QWORD PTR [rax+0x8]
  4048fb:	cmp    QWORD PTR [rbp-0x10],rax
  4048ff:	jbe    40492c <flatcc_builder_default_alloc@@Base+0x155>
  404901:	mov    rax,QWORD PTR [rbp-0x20]
  404905:	mov    rax,QWORD PTR [rax+0x8]
  404909:	mov    rdx,QWORD PTR [rbp-0x10]
  40490d:	sub    rdx,rax
  404910:	mov    rax,QWORD PTR [rbp-0x20]
  404914:	mov    rcx,QWORD PTR [rax+0x8]
  404918:	mov    rax,QWORD PTR [rbp-0x8]
  40491c:	add    rax,rcx
  40491f:	mov    esi,0x0
  404924:	mov    rdi,rax
  404927:	call   4031f0 <memset@plt>
  40492c:	mov    rax,QWORD PTR [rbp-0x20]
  404930:	mov    rdx,QWORD PTR [rbp-0x8]
  404934:	mov    QWORD PTR [rax],rdx
  404937:	mov    rax,QWORD PTR [rbp-0x20]
  40493b:	mov    rdx,QWORD PTR [rbp-0x10]
  40493f:	mov    QWORD PTR [rax+0x8],rdx
  404943:	mov    eax,0x0
  404948:	leave  
  404949:	ret    
  40494a:	push   rbp
  40494b:	mov    rbp,rsp
  40494e:	mov    QWORD PTR [rbp-0x18],rdi
  404952:	mov    DWORD PTR [rbp-0x1c],esi
  404955:	mov    rax,QWORD PTR [rbp-0x18]
  404959:	add    rax,0x58
  40495d:	add    rax,0x10
  404961:	mov    QWORD PTR [rbp-0x8],rax
  404965:	mov    rax,QWORD PTR [rbp-0x18]
  404969:	mov    rdx,QWORD PTR [rax+0x68]
  40496d:	mov    rax,QWORD PTR [rbp-0x18]
  404971:	mov    eax,DWORD PTR [rax+0x28]
  404974:	mov    eax,eax
  404976:	add    rdx,rax
  404979:	mov    rax,QWORD PTR [rbp-0x18]
  40497d:	mov    QWORD PTR [rax+0x18],rdx
  404981:	mov    rax,QWORD PTR [rbp-0x8]
  404985:	mov    rax,QWORD PTR [rax+0x8]
  404989:	mov    edx,eax
  40498b:	mov    rax,QWORD PTR [rbp-0x18]
  40498f:	mov    eax,DWORD PTR [rax+0x28]
  404992:	sub    edx,eax
  404994:	mov    rax,QWORD PTR [rbp-0x18]
  404998:	mov    DWORD PTR [rax+0x24],edx
  40499b:	mov    rax,QWORD PTR [rbp-0x18]
  40499f:	mov    eax,DWORD PTR [rax+0x24]
  4049a2:	cmp    DWORD PTR [rbp-0x1c],eax
  4049a5:	jae    4049b1 <flatcc_builder_default_alloc@@Base+0x1da>
  4049a7:	mov    rax,QWORD PTR [rbp-0x18]
  4049ab:	mov    edx,DWORD PTR [rbp-0x1c]
  4049ae:	mov    DWORD PTR [rax+0x24],edx
  4049b1:	mov    rax,QWORD PTR [rbp-0x18]
  4049b5:	mov    rax,QWORD PTR [rax+0x30]
  4049b9:	mov    edx,DWORD PTR [rbp-0x1c]
  4049bc:	mov    DWORD PTR [rax+0x4],edx
  4049bf:	nop
  4049c0:	pop    rbp
  4049c1:	ret    
  4049c2:	endbr64 
  4049c6:	push   rbp
  4049c7:	mov    rbp,rsp
  4049ca:	sub    rsp,0x30
  4049ce:	mov    QWORD PTR [rbp-0x18],rdi
  4049d2:	mov    QWORD PTR [rbp-0x20],rsi
  4049d6:	mov    DWORD PTR [rbp-0x24],edx
  4049d9:	mov    rax,QWORD PTR [rbp-0x18]
  4049dd:	add    rax,0x58
  4049e1:	add    rax,0x10
  4049e5:	mov    QWORD PTR [rbp-0x8],rax
  4049e9:	mov    rax,QWORD PTR [rbp-0x18]
  4049ed:	mov    rax,QWORD PTR [rax+0x50]
  4049f1:	mov    rdx,QWORD PTR [rbp-0x18]
  4049f5:	mov    edx,DWORD PTR [rdx+0x28]
  4049f8:	mov    ecx,edx
  4049fa:	mov    rdx,QWORD PTR [rbp-0x20]
  4049fe:	lea    r9,[rcx+rdx*1]
  404a02:	mov    rdx,QWORD PTR [rbp-0x18]
  404a06:	mov    rdi,QWORD PTR [rdx+0x40]
  404a0a:	mov    rsi,QWORD PTR [rbp-0x8]
  404a0e:	mov    r8d,0x1
  404a14:	mov    ecx,0x1
  404a19:	mov    rdx,r9
  404a1c:	call   rax
  404a1e:	test   eax,eax
  404a20:	je     404a29 <flatcc_builder_default_alloc@@Base+0x252>
  404a22:	mov    eax,0xffffffff
  404a27:	jmp    404a3f <flatcc_builder_default_alloc@@Base+0x268>
  404a29:	mov    edx,DWORD PTR [rbp-0x24]
  404a2c:	mov    rax,QWORD PTR [rbp-0x18]
  404a30:	mov    esi,edx
  404a32:	mov    rdi,rax
  404a35:	call   40494a <flatcc_builder_default_alloc@@Base+0x173>
  404a3a:	mov    eax,0x0
  404a3f:	leave  
  404a40:	ret    
  404a41:	push   rbp
  404a42:	mov    rbp,rsp
  404a45:	sub    rsp,0x20
  404a49:	mov    QWORD PTR [rbp-0x18],rdi
  404a4d:	mov    DWORD PTR [rbp-0x1c],esi
  404a50:	mov    rax,QWORD PTR [rbp-0x18]
  404a54:	mov    eax,DWORD PTR [rax+0x20]
  404a57:	mov    eax,eax
  404a59:	mov    QWORD PTR [rbp-0x8],rax
  404a5d:	mov    rax,QWORD PTR [rbp-0x18]
  404a61:	mov    edx,DWORD PTR [rax+0x20]
  404a64:	mov    eax,DWORD PTR [rbp-0x1c]
  404a67:	add    edx,eax
  404a69:	mov    rax,QWORD PTR [rbp-0x18]
  404a6d:	mov    DWORD PTR [rax+0x20],edx
  404a70:	mov    rax,QWORD PTR [rbp-0x18]
  404a74:	mov    edx,DWORD PTR [rax+0x20]
  404a77:	mov    rax,QWORD PTR [rbp-0x18]
  404a7b:	mov    eax,DWORD PTR [rax+0x24]
  404a7e:	cmp    edx,eax
  404a80:	jb     404aac <flatcc_builder_default_alloc@@Base+0x2d5>
  404a82:	mov    rax,QWORD PTR [rbp-0x18]
  404a86:	mov    eax,DWORD PTR [rax+0x20]
  404a89:	inc    eax
  404a8b:	mov    ecx,eax
  404a8d:	mov    rax,QWORD PTR [rbp-0x18]
  404a91:	mov    edx,0xfffffffc
  404a96:	mov    rsi,rcx
  404a99:	mov    rdi,rax
  404a9c:	call   4049c2 <flatcc_builder_default_alloc@@Base+0x1eb>
  404aa1:	test   eax,eax
  404aa3:	je     404aac <flatcc_builder_default_alloc@@Base+0x2d5>
  404aa5:	mov    eax,0x0
  404aaa:	jmp    404abb <flatcc_builder_default_alloc@@Base+0x2e4>
  404aac:	mov    rax,QWORD PTR [rbp-0x18]
  404ab0:	mov    rdx,QWORD PTR [rax+0x18]
  404ab4:	mov    rax,QWORD PTR [rbp-0x8]
  404ab8:	add    rax,rdx
  404abb:	leave  
  404abc:	ret    
  404abd:	push   rbp
  404abe:	mov    rbp,rsp
  404ac1:	sub    rsp,0x10
  404ac5:	mov    QWORD PTR [rbp-0x8],rdi
  404ac9:	mov    DWORD PTR [rbp-0xc],esi
  404acc:	mov    rax,QWORD PTR [rbp-0x8]
  404ad0:	mov    eax,DWORD PTR [rax+0x20]
  404ad3:	sub    eax,DWORD PTR [rbp-0xc]
  404ad6:	mov    edx,eax
  404ad8:	mov    rax,QWORD PTR [rbp-0x8]
  404adc:	mov    DWORD PTR [rax+0x20],edx
  404adf:	mov    eax,DWORD PTR [rbp-0xc]
  404ae2:	mov    rdx,QWORD PTR [rbp-0x8]
  404ae6:	mov    rcx,QWORD PTR [rdx+0x18]
  404aea:	mov    rdx,QWORD PTR [rbp-0x8]
  404aee:	mov    edx,DWORD PTR [rdx+0x20]
  404af1:	mov    edx,edx
  404af3:	add    rcx,rdx
  404af6:	mov    rdx,rax
  404af9:	mov    esi,0x0
  404afe:	mov    rdi,rcx
  404b01:	call   4031f0 <memset@plt>
  404b06:	nop
  404b07:	leave  
  404b08:	ret    
  404b09:	push   rbp
  404b0a:	mov    rbp,rsp
  404b0d:	sub    rsp,0x30
  404b11:	mov    QWORD PTR [rbp-0x18],rdi
  404b15:	mov    QWORD PTR [rbp-0x20],rsi
  404b19:	mov    DWORD PTR [rbp-0x24],edx
  404b1c:	mov    edx,DWORD PTR [rbp-0x24]
  404b1f:	mov    rax,QWORD PTR [rbp-0x18]
  404b23:	mov    esi,edx
  404b25:	mov    rdi,rax
  404b28:	call   404a41 <flatcc_builder_default_alloc@@Base+0x26a>
  404b2d:	mov    QWORD PTR [rbp-0x8],rax
  404b31:	cmp    QWORD PTR [rbp-0x8],0x0
  404b36:	jne    404b3f <flatcc_builder_default_alloc@@Base+0x368>
  404b38:	mov    eax,0x0
  404b3d:	jmp    404b59 <flatcc_builder_default_alloc@@Base+0x382>
  404b3f:	mov    edx,DWORD PTR [rbp-0x24]
  404b42:	mov    rcx,QWORD PTR [rbp-0x20]
  404b46:	mov    rax,QWORD PTR [rbp-0x8]
  404b4a:	mov    rsi,rcx
  404b4d:	mov    rdi,rax
  404b50:	call   403230 <memcpy@plt>
  404b55:	mov    rax,QWORD PTR [rbp-0x8]
  404b59:	leave  
  404b5a:	ret    
  404b5b:	push   rbp
  404b5c:	mov    rbp,rsp
  404b5f:	sub    rsp,0x30
  404b63:	mov    QWORD PTR [rbp-0x18],rdi
  404b67:	mov    DWORD PTR [rbp-0x1c],esi
  404b6a:	mov    eax,ecx
  404b6c:	mov    WORD PTR [rbp-0x20],dx
  404b70:	mov    WORD PTR [rbp-0x24],ax
  404b74:	mov    rax,QWORD PTR [rbp-0x18]
  404b78:	mov    edx,DWORD PTR [rax+0x20]
  404b7b:	movzx  eax,WORD PTR [rbp-0x20]
  404b7f:	add    eax,edx
  404b81:	lea    edx,[rax-0x1]
  404b84:	movzx  eax,WORD PTR [rbp-0x20]
  404b88:	neg    eax
  404b8a:	and    eax,edx
  404b8c:	mov    DWORD PTR [rbp-0x4],eax
  404b8f:	mov    edx,DWORD PTR [rbp-0x4]
  404b92:	mov    eax,DWORD PTR [rbp-0x1c]
  404b95:	add    edx,eax
  404b97:	mov    rax,QWORD PTR [rbp-0x18]
  404b9b:	mov    DWORD PTR [rax+0x20],edx
  404b9e:	mov    rax,QWORD PTR [rbp-0x18]
  404ba2:	mov    edx,DWORD PTR [rax+0x20]
  404ba5:	mov    rax,QWORD PTR [rbp-0x18]
  404ba9:	mov    eax,DWORD PTR [rax+0x24]
  404bac:	cmp    edx,eax
  404bae:	jb     404bda <flatcc_builder_default_alloc@@Base+0x403>
  404bb0:	mov    rax,QWORD PTR [rbp-0x18]
  404bb4:	mov    eax,DWORD PTR [rax+0x20]
  404bb7:	inc    eax
  404bb9:	mov    ecx,eax
  404bbb:	mov    rax,QWORD PTR [rbp-0x18]
  404bbf:	mov    edx,0xfffc
  404bc4:	mov    rsi,rcx
  404bc7:	mov    rdi,rax
  404bca:	call   4049c2 <flatcc_builder_default_alloc@@Base+0x1eb>
  404bcf:	test   eax,eax
  404bd1:	je     404bda <flatcc_builder_default_alloc@@Base+0x403>
  404bd3:	mov    eax,0x0
  404bd8:	jmp    404c21 <flatcc_builder_default_alloc@@Base+0x44a>
  404bda:	mov    eax,DWORD PTR [rbp-0x4]
  404bdd:	mov    ecx,eax
  404bdf:	mov    rax,QWORD PTR [rbp-0x18]
  404be3:	mov    rax,QWORD PTR [rax+0x8]
  404be7:	movzx  edx,WORD PTR [rbp-0x24]
  404beb:	add    rdx,rdx
  404bee:	add    rdx,rax
  404bf1:	lea    eax,[rcx+0x4]
  404bf4:	mov    WORD PTR [rdx],ax
  404bf7:	mov    rax,QWORD PTR [rbp-0x18]
  404bfb:	movzx  eax,WORD PTR [rax+0x10]
  404bff:	cmp    WORD PTR [rbp-0x24],ax
  404c03:	jb     404c13 <flatcc_builder_default_alloc@@Base+0x43c>
  404c05:	movzx  eax,WORD PTR [rbp-0x24]
  404c09:	inc    eax
  404c0b:	mov    rdx,QWORD PTR [rbp-0x18]
  404c0f:	mov    WORD PTR [rdx+0x10],ax
  404c13:	mov    rax,QWORD PTR [rbp-0x18]
  404c17:	mov    rdx,QWORD PTR [rax+0x18]
  404c1b:	mov    eax,DWORD PTR [rbp-0x4]
  404c1e:	add    rax,rdx
  404c21:	leave  
  404c22:	ret    
  404c23:	push   rbp
  404c24:	mov    rbp,rsp
  404c27:	sub    rsp,0x20
  404c2b:	mov    QWORD PTR [rbp-0x18],rdi
  404c2f:	mov    eax,esi
  404c31:	mov    WORD PTR [rbp-0x1c],ax
  404c35:	mov    rax,QWORD PTR [rbp-0x18]
  404c39:	mov    eax,DWORD PTR [rax+0x20]
  404c3c:	add    eax,0x3
  404c3f:	and    eax,0xfffffffc
  404c42:	mov    DWORD PTR [rbp-0x4],eax
  404c45:	mov    eax,DWORD PTR [rbp-0x4]
  404c48:	lea    edx,[rax+0x4]
  404c4b:	mov    rax,QWORD PTR [rbp-0x18]
  404c4f:	mov    DWORD PTR [rax+0x20],edx
  404c52:	mov    rax,QWORD PTR [rbp-0x18]
  404c56:	mov    edx,DWORD PTR [rax+0x20]
  404c59:	mov    rax,QWORD PTR [rbp-0x18]
  404c5d:	mov    eax,DWORD PTR [rax+0x24]
  404c60:	cmp    edx,eax
  404c62:	jbe    404c8c <flatcc_builder_default_alloc@@Base+0x4b5>
  404c64:	mov    rax,QWORD PTR [rbp-0x18]
  404c68:	mov    eax,DWORD PTR [rax+0x20]
  404c6b:	mov    ecx,eax
  404c6d:	mov    rax,QWORD PTR [rbp-0x18]
  404c71:	mov    edx,0xfffc
  404c76:	mov    rsi,rcx
  404c79:	mov    rdi,rax
  404c7c:	call   4049c2 <flatcc_builder_default_alloc@@Base+0x1eb>
  404c81:	test   eax,eax
  404c83:	je     404c8c <flatcc_builder_default_alloc@@Base+0x4b5>
  404c85:	mov    eax,0x0
  404c8a:	jmp    404ceb <flatcc_builder_default_alloc@@Base+0x514>
  404c8c:	mov    eax,DWORD PTR [rbp-0x4]
  404c8f:	mov    ecx,eax
  404c91:	mov    rax,QWORD PTR [rbp-0x18]
  404c95:	mov    rax,QWORD PTR [rax+0x8]
  404c99:	movzx  edx,WORD PTR [rbp-0x1c]
  404c9d:	add    rdx,rdx
  404ca0:	add    rdx,rax
  404ca3:	lea    eax,[rcx+0x4]
  404ca6:	mov    WORD PTR [rdx],ax
  404ca9:	mov    rax,QWORD PTR [rbp-0x18]
  404cad:	movzx  eax,WORD PTR [rax+0x10]
  404cb1:	cmp    WORD PTR [rbp-0x1c],ax
  404cb5:	jb     404cc5 <flatcc_builder_default_alloc@@Base+0x4ee>
  404cb7:	movzx  eax,WORD PTR [rbp-0x1c]
  404cbb:	inc    eax
  404cbd:	mov    rdx,QWORD PTR [rbp-0x18]
  404cc1:	mov    WORD PTR [rdx+0x10],ax
  404cc5:	mov    rax,QWORD PTR [rbp-0x18]
  404cc9:	mov    rax,QWORD PTR [rax]
  404ccc:	lea    rcx,[rax+0x2]
  404cd0:	mov    rdx,QWORD PTR [rbp-0x18]
  404cd4:	mov    QWORD PTR [rdx],rcx
  404cd7:	mov    edx,DWORD PTR [rbp-0x4]
  404cda:	mov    WORD PTR [rax],dx
  404cdd:	mov    rax,QWORD PTR [rbp-0x18]
  404ce1:	mov    rdx,QWORD PTR [rax+0x18]
  404ce5:	mov    eax,DWORD PTR [rbp-0x4]
  404ce8:	add    rax,rdx
  404ceb:	leave  
  404cec:	ret    
  404ced:	push   rbp
  404cee:	mov    rbp,rsp
  404cf1:	sub    rsp,0x30
  404cf5:	mov    QWORD PTR [rbp-0x18],rdi
  404cf9:	mov    DWORD PTR [rbp-0x1c],esi
  404cfc:	mov    QWORD PTR [rbp-0x28],rdx
  404d00:	mov    QWORD PTR [rbp-0x30],rcx
  404d04:	mov    DWORD PTR [rbp-0x20],r8d
  404d08:	mov    rax,QWORD PTR [rbp-0x18]
  404d0c:	lea    rdx,[rax+0x58]
  404d10:	mov    eax,DWORD PTR [rbp-0x1c]
  404d13:	cdqe   
  404d15:	shl    rax,0x4
  404d19:	add    rax,rdx
  404d1c:	mov    QWORD PTR [rbp-0x8],rax
  404d20:	mov    rdx,QWORD PTR [rbp-0x28]
  404d24:	mov    rax,QWORD PTR [rbp-0x30]
  404d28:	add    rdx,rax
  404d2b:	mov    rax,QWORD PTR [rbp-0x8]
  404d2f:	mov    rax,QWORD PTR [rax+0x8]
  404d33:	cmp    rdx,rax
  404d36:	jbe    404d8b <flatcc_builder_default_alloc@@Base+0x5b4>
  404d38:	mov    rax,QWORD PTR [rbp-0x18]
  404d3c:	mov    rax,QWORD PTR [rax+0x50]
  404d40:	mov    rcx,QWORD PTR [rbp-0x28]
  404d44:	mov    rdx,QWORD PTR [rbp-0x30]
  404d48:	lea    r9,[rcx+rdx*1]
  404d4c:	mov    rdx,QWORD PTR [rbp-0x18]
  404d50:	mov    rdi,QWORD PTR [rdx+0x40]
  404d54:	mov    ecx,DWORD PTR [rbp-0x1c]
  404d57:	mov    edx,DWORD PTR [rbp-0x20]
  404d5a:	mov    rsi,QWORD PTR [rbp-0x8]
  404d5e:	mov    r8d,ecx
  404d61:	mov    ecx,edx
  404d63:	mov    rdx,r9
  404d66:	call   rax
  404d68:	test   eax,eax
  404d6a:	je     404d8b <flatcc_builder_default_alloc@@Base+0x5b4>
  404d6c:	lea    rcx,[rip+0x6f25]        # 40bc98 <flatcc_builder_padding_base@@Base+0x658>
  404d73:	mov    edx,0x134
  404d78:	lea    rsi,[rip+0x6ac1]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  404d7f:	lea    rdi,[rip+0x6b1a]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  404d86:	call   4031e0 <__assert_fail@plt>
  404d8b:	mov    rax,QWORD PTR [rbp-0x8]
  404d8f:	mov    rax,QWORD PTR [rax]
  404d92:	mov    rdx,rax
  404d95:	mov    rax,QWORD PTR [rbp-0x28]
  404d99:	add    rax,rdx
  404d9c:	leave  
  404d9d:	ret    
  404d9e:	push   rbp
  404d9f:	mov    rbp,rsp
  404da2:	sub    rsp,0x20
  404da6:	mov    QWORD PTR [rbp-0x18],rdi
  404daa:	mov    DWORD PTR [rbp-0x1c],esi
  404dad:	mov    rax,QWORD PTR [rbp-0x18]
  404db1:	mov    rax,QWORD PTR [rax+0x30]
  404db5:	mov    edx,DWORD PTR [rax+0x10]
  404db8:	mov    rax,QWORD PTR [rbp-0x18]
  404dbc:	mov    rax,QWORD PTR [rax+0x30]
  404dc0:	movzx  eax,WORD PTR [rax+0x1c]
  404dc4:	movzx  eax,ax
  404dc7:	add    eax,eax
  404dc9:	add    eax,edx
  404dcb:	mov    DWORD PTR [rbp-0x8],eax
  404dce:	mov    eax,DWORD PTR [rbp-0x1c]
  404dd1:	add    eax,0x2
  404dd4:	cdqe   
  404dd6:	add    eax,eax
  404dd8:	mov    DWORD PTR [rbp-0x4],eax
  404ddb:	mov    ecx,DWORD PTR [rbp-0x4]
  404dde:	mov    edx,DWORD PTR [rbp-0x8]
  404de1:	mov    rax,QWORD PTR [rbp-0x18]
  404de5:	mov    r8d,0x1
  404deb:	mov    esi,0x0
  404df0:	mov    rdi,rax
  404df3:	call   404ced <flatcc_builder_default_alloc@@Base+0x516>
  404df8:	mov    rdx,rax
  404dfb:	mov    rax,QWORD PTR [rbp-0x18]
  404dff:	mov    QWORD PTR [rax+0x8],rdx
  404e03:	mov    rax,QWORD PTR [rbp-0x18]
  404e07:	mov    rax,QWORD PTR [rax+0x8]
  404e0b:	test   rax,rax
  404e0e:	jne    404e17 <flatcc_builder_default_alloc@@Base+0x640>
  404e10:	mov    eax,0xffffffff
  404e15:	jmp    404e84 <flatcc_builder_default_alloc@@Base+0x6ad>
  404e17:	mov    rax,QWORD PTR [rbp-0x18]
  404e1b:	mov    rax,QWORD PTR [rax+0x8]
  404e1f:	lea    rdx,[rax+0x4]
  404e23:	mov    rax,QWORD PTR [rbp-0x18]
  404e27:	mov    QWORD PTR [rax+0x8],rdx
  404e2b:	mov    rax,QWORD PTR [rbp-0x18]
  404e2f:	mov    rax,QWORD PTR [rax+0x30]
  404e33:	mov    eax,DWORD PTR [rax+0x14]
  404e36:	mov    DWORD PTR [rbp-0x8],eax
  404e39:	mov    eax,DWORD PTR [rbp-0x1c]
  404e3c:	cdqe   
  404e3e:	add    eax,eax
  404e40:	inc    eax
  404e42:	mov    DWORD PTR [rbp-0x4],eax
  404e45:	mov    ecx,DWORD PTR [rbp-0x4]
  404e48:	mov    edx,DWORD PTR [rbp-0x8]
  404e4b:	mov    rax,QWORD PTR [rbp-0x18]
  404e4f:	mov    r8d,0x0
  404e55:	mov    esi,0x3
  404e5a:	mov    rdi,rax
  404e5d:	call   404ced <flatcc_builder_default_alloc@@Base+0x516>
  404e62:	mov    rdx,rax
  404e65:	mov    rax,QWORD PTR [rbp-0x18]
  404e69:	mov    QWORD PTR [rax],rdx
  404e6c:	mov    rax,QWORD PTR [rbp-0x18]
  404e70:	mov    rax,QWORD PTR [rax]
  404e73:	test   rax,rax
  404e76:	jne    404e7f <flatcc_builder_default_alloc@@Base+0x6a8>
  404e78:	mov    eax,0xffffffff
  404e7d:	jmp    404e84 <flatcc_builder_default_alloc@@Base+0x6ad>
  404e7f:	mov    eax,0x0
  404e84:	leave  
  404e85:	ret    
  404e86:	endbr64 
  404e8a:	push   rbp
  404e8b:	mov    rbp,rsp
  404e8e:	sub    rsp,0x30
  404e92:	mov    QWORD PTR [rbp-0x28],rdi
  404e96:	mov    rax,QWORD PTR [rbp-0x28]
  404e9a:	add    rax,0x58
  404e9e:	add    rax,0x50
  404ea2:	mov    QWORD PTR [rbp-0x8],rax
  404ea6:	mov    rax,QWORD PTR [rbp-0x28]
  404eaa:	mov    eax,DWORD PTR [rax+0xe4]
  404eb0:	test   eax,eax
  404eb2:	je     404ed3 <flatcc_builder_default_alloc@@Base+0x6fc>
  404eb4:	lea    rcx,[rip+0x6dcd]        # 40bc88 <flatcc_builder_padding_base@@Base+0x648>
  404ebb:	mov    edx,0x156
  404ec0:	lea    rsi,[rip+0x6979]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  404ec7:	lea    rdi,[rip+0x69d4]        # 40b8a2 <flatcc_builder_padding_base@@Base+0x262>
  404ece:	call   4031e0 <__assert_fail@plt>
  404ed3:	mov    rax,QWORD PTR [rbp-0x28]
  404ed7:	mov    eax,DWORD PTR [rax+0xe4]
  404edd:	mov    edx,eax
  404edf:	mov    rax,QWORD PTR [rbp-0x28]
  404ee3:	mov    r8d,0x0
  404ee9:	mov    ecx,0x10
  404eee:	mov    esi,0x6
  404ef3:	mov    rdi,rax
  404ef6:	call   404ced <flatcc_builder_default_alloc@@Base+0x516>
  404efb:	test   rax,rax
  404efe:	jne    404f0a <flatcc_builder_default_alloc@@Base+0x733>
  404f00:	mov    eax,0xffffffff
  404f05:	jmp    404fab <flatcc_builder_default_alloc@@Base+0x7d4>
  404f0a:	mov    rax,QWORD PTR [rbp-0x28]
  404f0e:	mov    DWORD PTR [rax+0xe4],0x10
  404f18:	mov    QWORD PTR [rbp-0x18],0x100
  404f20:	mov    rax,QWORD PTR [rbp-0x28]
  404f24:	mov    rax,QWORD PTR [rax+0x50]
  404f28:	mov    rdx,QWORD PTR [rbp-0x28]
  404f2c:	mov    rdi,QWORD PTR [rdx+0x40]
  404f30:	mov    rdx,QWORD PTR [rbp-0x18]
  404f34:	mov    rsi,QWORD PTR [rbp-0x8]
  404f38:	mov    r8d,0x5
  404f3e:	mov    ecx,0x1
  404f43:	call   rax
  404f45:	test   eax,eax
  404f47:	je     404f54 <flatcc_builder_default_alloc@@Base+0x77d>
  404f49:	mov    eax,0xffffffff
  404f4e:	jmp    404fab <flatcc_builder_default_alloc@@Base+0x7d4>
  404f50:	shl    QWORD PTR [rbp-0x18],1
  404f54:	mov    rax,QWORD PTR [rbp-0x18]
  404f58:	lea    rdx,[rax+rax*1]
  404f5c:	mov    rax,QWORD PTR [rbp-0x8]
  404f60:	mov    rax,QWORD PTR [rax+0x8]
  404f64:	cmp    rdx,rax
  404f67:	jbe    404f50 <flatcc_builder_default_alloc@@Base+0x779>
  404f69:	mov    rax,QWORD PTR [rbp-0x18]
  404f6d:	shr    rax,0x2
  404f71:	mov    QWORD PTR [rbp-0x18],rax
  404f75:	mov    QWORD PTR [rbp-0x10],0x0
  404f7d:	jmp    404f83 <flatcc_builder_default_alloc@@Base+0x7ac>
  404f7f:	inc    QWORD PTR [rbp-0x10]
  404f83:	mov    rax,QWORD PTR [rbp-0x10]
  404f87:	mov    edx,0x1
  404f8c:	shlx   rax,rdx,rax
  404f91:	cmp    QWORD PTR [rbp-0x18],rax
  404f95:	ja     404f7f <flatcc_builder_default_alloc@@Base+0x7a8>
  404f97:	mov    rax,QWORD PTR [rbp-0x28]
  404f9b:	mov    rdx,QWORD PTR [rbp-0x10]
  404f9f:	mov    QWORD PTR [rax+0xd8],rdx
  404fa6:	mov    eax,0x0
  404fab:	leave  
  404fac:	ret    
  404fad:	push   rbp
  404fae:	mov    rbp,rsp
  404fb1:	sub    rsp,0x20
  404fb5:	mov    QWORD PTR [rbp-0x18],rdi
  404fb9:	mov    DWORD PTR [rbp-0x1c],esi
  404fbc:	mov    rax,QWORD PTR [rbp-0x18]
  404fc0:	mov    rax,QWORD PTR [rax+0xd8]
  404fc7:	test   rax,rax
  404fca:	jne    404fe3 <flatcc_builder_default_alloc@@Base+0x80c>
  404fcc:	mov    rax,QWORD PTR [rbp-0x18]
  404fd0:	mov    rdi,rax
  404fd3:	call   404e86 <flatcc_builder_default_alloc@@Base+0x6af>
  404fd8:	test   eax,eax
  404fda:	je     404fe3 <flatcc_builder_default_alloc@@Base+0x80c>
  404fdc:	mov    eax,0x0
  404fe1:	jmp    40501f <flatcc_builder_default_alloc@@Base+0x848>
  404fe3:	mov    rax,QWORD PTR [rbp-0x18]
  404fe7:	mov    rax,QWORD PTR [rax+0xa8]
  404fee:	mov    QWORD PTR [rbp-0x8],rax
  404ff2:	mov    rax,QWORD PTR [rbp-0x18]
  404ff6:	mov    rax,QWORD PTR [rax+0xd8]
  404ffd:	mov    edx,0x20
  405002:	sub    edx,eax
  405004:	mov    eax,edx
  405006:	mov    edx,DWORD PTR [rbp-0x1c]
  405009:	shrx   eax,edx,eax
  40500e:	mov    eax,eax
  405010:	lea    rdx,[rax*4+0x0]
  405018:	mov    rax,QWORD PTR [rbp-0x8]
  40501c:	add    rax,rdx
  40501f:	leave  
  405020:	ret    

0000000000405021 <flatcc_builder_flush_vtable_cache@@Base>:
  405021:	endbr64 
  405025:	push   rbp
  405026:	mov    rbp,rsp
  405029:	sub    rsp,0x20
  40502d:	mov    QWORD PTR [rbp-0x18],rdi
  405031:	mov    rax,QWORD PTR [rbp-0x18]
  405035:	add    rax,0x58
  405039:	add    rax,0x50
  40503d:	mov    QWORD PTR [rbp-0x8],rax
  405041:	mov    rax,QWORD PTR [rbp-0x18]
  405045:	mov    rax,QWORD PTR [rax+0xd8]
  40504c:	test   rax,rax
  40504f:	je     40508b <flatcc_builder_flush_vtable_cache@@Base+0x6a>
  405051:	mov    rax,QWORD PTR [rbp-0x8]
  405055:	mov    rdx,QWORD PTR [rax+0x8]
  405059:	mov    rax,QWORD PTR [rbp-0x8]
  40505d:	mov    rax,QWORD PTR [rax]
  405060:	mov    esi,0x0
  405065:	mov    rdi,rax
  405068:	call   4031f0 <memset@plt>
  40506d:	mov    rax,QWORD PTR [rbp-0x18]
  405071:	mov    DWORD PTR [rax+0xe4],0x10
  40507b:	mov    rax,QWORD PTR [rbp-0x18]
  40507f:	mov    DWORD PTR [rax+0xe0],0x0
  405089:	jmp    40508c <flatcc_builder_flush_vtable_cache@@Base+0x6b>
  40508b:	nop
  40508c:	leave  
  40508d:	ret    

000000000040508e <flatcc_builder_custom_init@@Base>:
  40508e:	endbr64 
  405092:	push   rbp
  405093:	mov    rbp,rsp
  405096:	sub    rsp,0x30
  40509a:	mov    QWORD PTR [rbp-0x8],rdi
  40509e:	mov    QWORD PTR [rbp-0x10],rsi
  4050a2:	mov    QWORD PTR [rbp-0x18],rdx
  4050a6:	mov    QWORD PTR [rbp-0x20],rcx
  4050aa:	mov    QWORD PTR [rbp-0x28],r8
  4050ae:	mov    rax,QWORD PTR [rbp-0x8]
  4050b2:	mov    edx,0x188
  4050b7:	mov    esi,0x0
  4050bc:	mov    rdi,rax
  4050bf:	call   4031f0 <memset@plt>
  4050c4:	cmp    QWORD PTR [rbp-0x10],0x0
  4050c9:	jne    4050f2 <flatcc_builder_custom_init@@Base+0x64>
  4050cb:	mov    rax,QWORD PTR [rbp-0x8]
  4050cf:	mov    DWORD PTR [rax+0x128],0x1
  4050d9:	mov    rax,0x40a62b
  4050e0:	mov    QWORD PTR [rbp-0x10],rax
  4050e4:	mov    rax,QWORD PTR [rbp-0x8]
  4050e8:	add    rax,0x130
  4050ee:	mov    QWORD PTR [rbp-0x18],rax
  4050f2:	cmp    QWORD PTR [rbp-0x20],0x0
  4050f7:	jne    405104 <flatcc_builder_custom_init@@Base+0x76>
  4050f9:	mov    rax,0x4047d7
  405100:	mov    QWORD PTR [rbp-0x20],rax
  405104:	mov    rax,QWORD PTR [rbp-0x8]
  405108:	mov    rdx,QWORD PTR [rbp-0x28]
  40510c:	mov    QWORD PTR [rax+0x40],rdx
  405110:	mov    rax,QWORD PTR [rbp-0x8]
  405114:	mov    rdx,QWORD PTR [rbp-0x20]
  405118:	mov    QWORD PTR [rax+0x50],rdx
  40511c:	mov    rax,QWORD PTR [rbp-0x8]
  405120:	mov    rdx,QWORD PTR [rbp-0x18]
  405124:	mov    QWORD PTR [rax+0x38],rdx
  405128:	mov    rax,QWORD PTR [rbp-0x8]
  40512c:	mov    rdx,QWORD PTR [rbp-0x10]
  405130:	mov    QWORD PTR [rax+0x48],rdx
  405134:	mov    eax,0x0
  405139:	leave  
  40513a:	ret    

000000000040513b <flatcc_builder_init@@Base>:
  40513b:	endbr64 
  40513f:	push   rbp
  405140:	mov    rbp,rsp
  405143:	sub    rsp,0x10
  405147:	mov    QWORD PTR [rbp-0x8],rdi
  40514b:	mov    rax,QWORD PTR [rbp-0x8]
  40514f:	mov    r8d,0x0
  405155:	mov    ecx,0x0
  40515a:	mov    edx,0x0
  40515f:	mov    esi,0x0
  405164:	mov    rdi,rax
  405167:	call   40508e <flatcc_builder_custom_init@@Base>
  40516c:	leave  
  40516d:	ret    

000000000040516e <flatcc_builder_custom_reset@@Base>:
  40516e:	endbr64 
  405172:	push   rbp
  405173:	mov    rbp,rsp
  405176:	sub    rsp,0x20
  40517a:	mov    QWORD PTR [rbp-0x18],rdi
  40517e:	mov    DWORD PTR [rbp-0x1c],esi
  405181:	mov    DWORD PTR [rbp-0x20],edx
  405184:	mov    DWORD PTR [rbp-0xc],0x0
  40518b:	jmp    405241 <flatcc_builder_custom_reset@@Base+0xd3>
  405190:	mov    rax,QWORD PTR [rbp-0x18]
  405194:	lea    rdx,[rax+0x58]
  405198:	mov    eax,DWORD PTR [rbp-0xc]
  40519b:	cdqe   
  40519d:	shl    rax,0x4
  4051a1:	add    rax,rdx
  4051a4:	mov    QWORD PTR [rbp-0x8],rax
  4051a8:	mov    rax,QWORD PTR [rbp-0x8]
  4051ac:	mov    rax,QWORD PTR [rax]
  4051af:	test   rax,rax
  4051b2:	je     405212 <flatcc_builder_custom_reset@@Base+0xa4>
  4051b4:	cmp    DWORD PTR [rbp-0xc],0x5
  4051b8:	je     4051f4 <flatcc_builder_custom_reset@@Base+0x86>
  4051ba:	cmp    DWORD PTR [rbp-0x20],0x0
  4051be:	je     4051f4 <flatcc_builder_custom_reset@@Base+0x86>
  4051c0:	mov    rax,QWORD PTR [rbp-0x18]
  4051c4:	mov    rax,QWORD PTR [rax+0x50]
  4051c8:	mov    rdx,QWORD PTR [rbp-0x18]
  4051cc:	mov    rdi,QWORD PTR [rdx+0x40]
  4051d0:	mov    edx,DWORD PTR [rbp-0xc]
  4051d3:	mov    rsi,QWORD PTR [rbp-0x8]
  4051d7:	mov    r8d,edx
  4051da:	mov    ecx,0x1
  4051df:	mov    edx,0x1
  4051e4:	call   rax
  4051e6:	test   eax,eax
  4051e8:	je     4051f4 <flatcc_builder_custom_reset@@Base+0x86>
  4051ea:	mov    eax,0xffffffff
  4051ef:	jmp    405380 <flatcc_builder_custom_reset@@Base+0x212>
  4051f4:	mov    rax,QWORD PTR [rbp-0x8]
  4051f8:	mov    rdx,QWORD PTR [rax+0x8]
  4051fc:	mov    rax,QWORD PTR [rbp-0x8]
  405200:	mov    rax,QWORD PTR [rax]
  405203:	mov    esi,0x0
  405208:	mov    rdi,rax
  40520b:	call   4031f0 <memset@plt>
  405210:	jmp    40523e <flatcc_builder_custom_reset@@Base+0xd0>
  405212:	mov    rax,QWORD PTR [rbp-0x8]
  405216:	mov    rax,QWORD PTR [rax+0x8]
  40521a:	test   rax,rax
  40521d:	je     40523e <flatcc_builder_custom_reset@@Base+0xd0>
  40521f:	lea    rcx,[rip+0x6a8a]        # 40bcb0 <flatcc_builder_padding_base@@Base+0x670>
  405226:	mov    edx,0x1b2
  40522b:	lea    rsi,[rip+0x660e]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  405232:	lea    rdi,[rip+0x6678]        # 40b8b1 <flatcc_builder_padding_base@@Base+0x271>
  405239:	call   4031e0 <__assert_fail@plt>
  40523e:	inc    DWORD PTR [rbp-0xc]
  405241:	cmp    DWORD PTR [rbp-0xc],0x7
  405245:	jle    405190 <flatcc_builder_custom_reset@@Base+0x22>
  40524b:	mov    rax,QWORD PTR [rbp-0x18]
  40524f:	mov    DWORD PTR [rax+0xe0],0x0
  405259:	mov    rax,QWORD PTR [rbp-0x18]
  40525d:	mov    eax,DWORD PTR [rax+0xe4]
  405263:	test   eax,eax
  405265:	je     405275 <flatcc_builder_custom_reset@@Base+0x107>
  405267:	mov    rax,QWORD PTR [rbp-0x18]
  40526b:	mov    DWORD PTR [rax+0xe4],0x10
  405275:	mov    rax,QWORD PTR [rbp-0x18]
  405279:	mov    WORD PTR [rax+0xe8],0x0
  405282:	mov    rax,QWORD PTR [rbp-0x18]
  405286:	mov    DWORD PTR [rax+0xf0],0x0
  405290:	mov    rax,QWORD PTR [rbp-0x18]
  405294:	mov    DWORD PTR [rax+0xf4],0x0
  40529e:	mov    rax,QWORD PTR [rbp-0x18]
  4052a2:	mov    DWORD PTR [rax+0x104],0x0
  4052ac:	mov    rax,QWORD PTR [rbp-0x18]
  4052b0:	mov    DWORD PTR [rax+0x108],0x0
  4052ba:	mov    rax,QWORD PTR [rbp-0x18]
  4052be:	mov    DWORD PTR [rax+0x20],0x0
  4052c5:	mov    rax,QWORD PTR [rbp-0x18]
  4052c9:	mov    DWORD PTR [rax+0x24],0x0
  4052d0:	mov    rax,QWORD PTR [rbp-0x18]
  4052d4:	mov    DWORD PTR [rax+0xfc],0x0
  4052de:	mov    rax,QWORD PTR [rbp-0x18]
  4052e2:	mov    DWORD PTR [rax+0x100],0x0
  4052ec:	mov    rax,QWORD PTR [rbp-0x18]
  4052f0:	mov    rdx,QWORD PTR [rax+0x68]
  4052f4:	mov    rax,QWORD PTR [rbp-0x18]
  4052f8:	mov    QWORD PTR [rax+0x18],rdx
  4052fc:	mov    rax,QWORD PTR [rbp-0x18]
  405300:	mov    rdx,QWORD PTR [rax+0x88]
  405307:	mov    rax,QWORD PTR [rbp-0x18]
  40530b:	mov    QWORD PTR [rax],rdx
  40530e:	mov    rax,QWORD PTR [rbp-0x18]
  405312:	mov    rdx,QWORD PTR [rax+0x58]
  405316:	mov    rax,QWORD PTR [rbp-0x18]
  40531a:	mov    QWORD PTR [rax+0x8],rdx
  40531e:	mov    rax,QWORD PTR [rbp-0x18]
  405322:	mov    QWORD PTR [rax+0x30],0x0
  40532a:	cmp    DWORD PTR [rbp-0x1c],0x0
  40532e:	je     40535b <flatcc_builder_custom_reset@@Base+0x1ed>
  405330:	mov    rax,QWORD PTR [rbp-0x18]
  405334:	mov    QWORD PTR [rax+0x118],0x0
  40533f:	mov    rax,QWORD PTR [rbp-0x18]
  405343:	mov    DWORD PTR [rax+0x120],0x0
  40534d:	mov    rax,QWORD PTR [rbp-0x18]
  405351:	mov    DWORD PTR [rax+0x124],0x0
  40535b:	mov    rax,QWORD PTR [rbp-0x18]
  40535f:	mov    eax,DWORD PTR [rax+0x128]
  405365:	test   eax,eax
  405367:	je     40537b <flatcc_builder_custom_reset@@Base+0x20d>
  405369:	mov    rax,QWORD PTR [rbp-0x18]
  40536d:	add    rax,0x130
  405373:	mov    rdi,rax
  405376:	call   40a406 <flatcc_emitter_reset@@Base>
  40537b:	mov    eax,0x0
  405380:	leave  
  405381:	ret    

0000000000405382 <flatcc_builder_reset@@Base>:
  405382:	endbr64 
  405386:	push   rbp
  405387:	mov    rbp,rsp
  40538a:	sub    rsp,0x10
  40538e:	mov    QWORD PTR [rbp-0x8],rdi
  405392:	mov    rax,QWORD PTR [rbp-0x8]
  405396:	mov    edx,0x0
  40539b:	mov    esi,0x0
  4053a0:	mov    rdi,rax
  4053a3:	call   40516e <flatcc_builder_custom_reset@@Base>
  4053a8:	leave  
  4053a9:	ret    

00000000004053aa <flatcc_builder_clear@@Base>:
  4053aa:	endbr64 
  4053ae:	push   rbp
  4053af:	mov    rbp,rsp
  4053b2:	sub    rsp,0x20
  4053b6:	mov    QWORD PTR [rbp-0x18],rdi
  4053ba:	mov    DWORD PTR [rbp-0xc],0x0
  4053c1:	jmp    405404 <flatcc_builder_clear@@Base+0x5a>
  4053c3:	mov    rax,QWORD PTR [rbp-0x18]
  4053c7:	lea    rdx,[rax+0x58]
  4053cb:	mov    eax,DWORD PTR [rbp-0xc]
  4053ce:	cdqe   
  4053d0:	shl    rax,0x4
  4053d4:	add    rax,rdx
  4053d7:	mov    QWORD PTR [rbp-0x8],rax
  4053db:	mov    rax,QWORD PTR [rbp-0x18]
  4053df:	mov    rax,QWORD PTR [rax+0x50]
  4053e3:	mov    rdx,QWORD PTR [rbp-0x18]
  4053e7:	mov    rdi,QWORD PTR [rdx+0x40]
  4053eb:	mov    edx,DWORD PTR [rbp-0xc]
  4053ee:	mov    rsi,QWORD PTR [rbp-0x8]
  4053f2:	mov    r8d,edx
  4053f5:	mov    ecx,0x0
  4053fa:	mov    edx,0x0
  4053ff:	call   rax
  405401:	inc    DWORD PTR [rbp-0xc]
  405404:	cmp    DWORD PTR [rbp-0xc],0x7
  405408:	jle    4053c3 <flatcc_builder_clear@@Base+0x19>
  40540a:	mov    rax,QWORD PTR [rbp-0x18]
  40540e:	mov    eax,DWORD PTR [rax+0x128]
  405414:	test   eax,eax
  405416:	je     40542a <flatcc_builder_clear@@Base+0x80>
  405418:	mov    rax,QWORD PTR [rbp-0x18]
  40541c:	add    rax,0x130
  405422:	mov    rdi,rax
  405425:	call   40a598 <flatcc_emitter_clear@@Base>
  40542a:	mov    rax,QWORD PTR [rbp-0x18]
  40542e:	mov    edx,0x188
  405433:	mov    esi,0x0
  405438:	mov    rdi,rax
  40543b:	call   4031f0 <memset@plt>
  405440:	nop
  405441:	leave  
  405442:	ret    
  405443:	push   rbp
  405444:	mov    rbp,rsp
  405447:	mov    QWORD PTR [rbp-0x8],rdi
  40544b:	mov    eax,esi
  40544d:	mov    WORD PTR [rbp-0xc],ax
  405451:	mov    rax,QWORD PTR [rbp-0x8]
  405455:	movzx  eax,WORD PTR [rax+0xe8]
  40545c:	cmp    WORD PTR [rbp-0xc],ax
  405460:	jbe    405471 <flatcc_builder_clear@@Base+0xc7>
  405462:	mov    rdx,QWORD PTR [rbp-0x8]
  405466:	movzx  eax,WORD PTR [rbp-0xc]
  40546a:	mov    WORD PTR [rdx+0xe8],ax
  405471:	nop
  405472:	pop    rbp
  405473:	ret    
  405474:	push   rbp
  405475:	mov    rbp,rsp
  405478:	mov    QWORD PTR [rbp-0x8],rdi
  40547c:	mov    eax,esi
  40547e:	mov    WORD PTR [rbp-0xc],ax
  405482:	mov    rax,QWORD PTR [rbp-0x8]
  405486:	movzx  eax,WORD PTR [rax]
  405489:	cmp    WORD PTR [rbp-0xc],ax
  40548d:	jbe    40549a <flatcc_builder_clear@@Base+0xf0>
  40548f:	mov    rdx,QWORD PTR [rbp-0x8]
  405493:	movzx  eax,WORD PTR [rbp-0xc]
  405497:	mov    WORD PTR [rdx],ax
  40549a:	nop
  40549b:	pop    rbp
  40549c:	ret    

000000000040549d <flatcc_builder_enter_user_frame_ptr@@Base>:
  40549d:	endbr64 
  4054a1:	push   rbp
  4054a2:	mov    rbp,rsp
  4054a5:	sub    rsp,0x20
  4054a9:	mov    QWORD PTR [rbp-0x18],rdi
  4054ad:	mov    QWORD PTR [rbp-0x20],rsi
  4054b1:	mov    rax,QWORD PTR [rbp-0x20]
  4054b5:	add    rax,0x7
  4054b9:	and    rax,0xfffffffffffffff8
  4054bd:	add    rax,0x8
  4054c1:	mov    QWORD PTR [rbp-0x20],rax
  4054c5:	mov    rax,QWORD PTR [rbp-0x18]
  4054c9:	mov    rdx,QWORD PTR [rax+0x180]
  4054d0:	mov    rcx,QWORD PTR [rbp-0x20]
  4054d4:	mov    rax,QWORD PTR [rbp-0x18]
  4054d8:	mov    r8d,0x0
  4054de:	mov    esi,0x7
  4054e3:	mov    rdi,rax
  4054e6:	call   404ced <flatcc_builder_default_alloc@@Base+0x516>
  4054eb:	mov    QWORD PTR [rbp-0x8],rax
  4054ef:	cmp    QWORD PTR [rbp-0x8],0x0
  4054f4:	jne    4054fd <flatcc_builder_enter_user_frame_ptr@@Base+0x60>
  4054f6:	mov    eax,0x0
  4054fb:	jmp    405567 <flatcc_builder_enter_user_frame_ptr@@Base+0xca>
  4054fd:	mov    rdx,QWORD PTR [rbp-0x20]
  405501:	mov    rax,QWORD PTR [rbp-0x8]
  405505:	mov    esi,0x0
  40550a:	mov    rdi,rax
  40550d:	call   4031f0 <memset@plt>
  405512:	mov    rax,QWORD PTR [rbp-0x8]
  405516:	lea    rdx,[rax+0x8]
  40551a:	mov    QWORD PTR [rbp-0x8],rdx
  40551e:	mov    rdx,QWORD PTR [rbp-0x18]
  405522:	mov    rdx,QWORD PTR [rdx+0x178]
  405529:	mov    QWORD PTR [rax],rdx
  40552c:	mov    rax,QWORD PTR [rbp-0x18]
  405530:	mov    rax,QWORD PTR [rax+0x180]
  405537:	lea    rdx,[rax+0x8]
  40553b:	mov    rax,QWORD PTR [rbp-0x18]
  40553f:	mov    QWORD PTR [rax+0x178],rdx
  405546:	mov    rax,QWORD PTR [rbp-0x18]
  40554a:	mov    rdx,QWORD PTR [rax+0x180]
  405551:	mov    rax,QWORD PTR [rbp-0x20]
  405555:	add    rdx,rax
  405558:	mov    rax,QWORD PTR [rbp-0x18]
  40555c:	mov    QWORD PTR [rax+0x180],rdx
  405563:	mov    rax,QWORD PTR [rbp-0x8]
  405567:	leave  
  405568:	ret    

0000000000405569 <flatcc_builder_enter_user_frame@@Base>:
  405569:	endbr64 
  40556d:	push   rbp
  40556e:	mov    rbp,rsp
  405571:	sub    rsp,0x20
  405575:	mov    QWORD PTR [rbp-0x18],rdi
  405579:	mov    QWORD PTR [rbp-0x20],rsi
  40557d:	mov    rax,QWORD PTR [rbp-0x20]
  405581:	add    rax,0x7
  405585:	and    rax,0xfffffffffffffff8
  405589:	add    rax,0x8
  40558d:	mov    QWORD PTR [rbp-0x20],rax
  405591:	mov    rax,QWORD PTR [rbp-0x18]
  405595:	mov    rdx,QWORD PTR [rax+0x180]
  40559c:	mov    rcx,QWORD PTR [rbp-0x20]
  4055a0:	mov    rax,QWORD PTR [rbp-0x18]
  4055a4:	mov    r8d,0x0
  4055aa:	mov    esi,0x7
  4055af:	mov    rdi,rax
  4055b2:	call   404ced <flatcc_builder_default_alloc@@Base+0x516>
  4055b7:	mov    QWORD PTR [rbp-0x8],rax
  4055bb:	cmp    QWORD PTR [rbp-0x8],0x0
  4055c0:	jne    4055c9 <flatcc_builder_enter_user_frame@@Base+0x60>
  4055c2:	mov    eax,0x0
  4055c7:	jmp    40563a <flatcc_builder_enter_user_frame@@Base+0xd1>
  4055c9:	mov    rdx,QWORD PTR [rbp-0x20]
  4055cd:	mov    rax,QWORD PTR [rbp-0x8]
  4055d1:	mov    esi,0x0
  4055d6:	mov    rdi,rax
  4055d9:	call   4031f0 <memset@plt>
  4055de:	mov    rax,QWORD PTR [rbp-0x8]
  4055e2:	lea    rdx,[rax+0x8]
  4055e6:	mov    QWORD PTR [rbp-0x8],rdx
  4055ea:	mov    rdx,QWORD PTR [rbp-0x18]
  4055ee:	mov    rdx,QWORD PTR [rdx+0x178]
  4055f5:	mov    QWORD PTR [rax],rdx
  4055f8:	mov    rax,QWORD PTR [rbp-0x18]
  4055fc:	mov    rax,QWORD PTR [rax+0x180]
  405603:	lea    rdx,[rax+0x8]
  405607:	mov    rax,QWORD PTR [rbp-0x18]
  40560b:	mov    QWORD PTR [rax+0x178],rdx
  405612:	mov    rax,QWORD PTR [rbp-0x18]
  405616:	mov    rdx,QWORD PTR [rax+0x180]
  40561d:	mov    rax,QWORD PTR [rbp-0x20]
  405621:	add    rdx,rax
  405624:	mov    rax,QWORD PTR [rbp-0x18]
  405628:	mov    QWORD PTR [rax+0x180],rdx
  40562f:	mov    rax,QWORD PTR [rbp-0x18]
  405633:	mov    rax,QWORD PTR [rax+0x178]
  40563a:	leave  
  40563b:	ret    

000000000040563c <flatcc_builder_exit_user_frame@@Base>:
  40563c:	endbr64 
  405640:	push   rbp
  405641:	mov    rbp,rsp
  405644:	sub    rsp,0x20
  405648:	mov    QWORD PTR [rbp-0x18],rdi
  40564c:	mov    rax,QWORD PTR [rbp-0x18]
  405650:	mov    rax,QWORD PTR [rax+0x178]
  405657:	test   rax,rax
  40565a:	jne    40567b <flatcc_builder_exit_user_frame@@Base+0x3f>
  40565c:	lea    rcx,[rip+0x666d]        # 40bcd0 <flatcc_builder_padding_base@@Base+0x690>
  405663:	mov    edx,0x21e
  405668:	lea    rsi,[rip+0x61d1]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  40566f:	lea    rdi,[rip+0x624d]        # 40b8c3 <flatcc_builder_padding_base@@Base+0x283>
  405676:	call   4031e0 <__assert_fail@plt>
  40567b:	mov    rax,QWORD PTR [rbp-0x18]
  40567f:	mov    rdx,QWORD PTR [rax+0xc8]
  405686:	mov    rax,QWORD PTR [rbp-0x18]
  40568a:	mov    rax,QWORD PTR [rax+0x178]
  405691:	mov    eax,eax
  405693:	add    rax,rdx
  405696:	mov    QWORD PTR [rbp-0x8],rax
  40569a:	mov    rax,QWORD PTR [rbp-0x18]
  40569e:	mov    rax,QWORD PTR [rax+0x178]
  4056a5:	lea    rdx,[rax-0x8]
  4056a9:	mov    rax,QWORD PTR [rbp-0x18]
  4056ad:	mov    QWORD PTR [rax+0x180],rdx
  4056b4:	mov    rax,QWORD PTR [rbp-0x8]
  4056b8:	mov    rdx,QWORD PTR [rax-0x8]
  4056bc:	mov    rax,QWORD PTR [rbp-0x18]
  4056c0:	mov    QWORD PTR [rax+0x178],rdx
  4056c7:	mov    rax,QWORD PTR [rbp-0x18]
  4056cb:	mov    rax,QWORD PTR [rax+0x178]
  4056d2:	leave  
  4056d3:	ret    

00000000004056d4 <flatcc_builder_exit_user_frame_at@@Base>:
  4056d4:	endbr64 
  4056d8:	push   rbp
  4056d9:	mov    rbp,rsp
  4056dc:	sub    rsp,0x10
  4056e0:	mov    QWORD PTR [rbp-0x8],rdi
  4056e4:	mov    QWORD PTR [rbp-0x10],rsi
  4056e8:	mov    rax,QWORD PTR [rbp-0x8]
  4056ec:	mov    rax,QWORD PTR [rax+0x178]
  4056f3:	cmp    QWORD PTR [rbp-0x10],rax
  4056f7:	jbe    405718 <flatcc_builder_exit_user_frame_at@@Base+0x44>
  4056f9:	lea    rcx,[rip+0x6600]        # 40bd00 <flatcc_builder_padding_base@@Base+0x6c0>
  405700:	mov    edx,0x227
  405705:	lea    rsi,[rip+0x6134]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  40570c:	lea    rdi,[rip+0x61cd]        # 40b8e0 <flatcc_builder_padding_base@@Base+0x2a0>
  405713:	call   4031e0 <__assert_fail@plt>
  405718:	mov    rax,QWORD PTR [rbp-0x8]
  40571c:	mov    rdx,QWORD PTR [rbp-0x10]
  405720:	mov    QWORD PTR [rax+0x178],rdx
  405727:	mov    rax,QWORD PTR [rbp-0x8]
  40572b:	mov    rdi,rax
  40572e:	call   40563c <flatcc_builder_exit_user_frame@@Base>
  405733:	leave  
  405734:	ret    

0000000000405735 <flatcc_builder_get_current_user_frame@@Base>:
  405735:	endbr64 
  405739:	push   rbp
  40573a:	mov    rbp,rsp
  40573d:	mov    QWORD PTR [rbp-0x8],rdi
  405741:	mov    rax,QWORD PTR [rbp-0x8]
  405745:	mov    rax,QWORD PTR [rax+0x178]
  40574c:	pop    rbp
  40574d:	ret    

000000000040574e <flatcc_builder_get_user_frame_ptr@@Base>:
  40574e:	endbr64 
  405752:	push   rbp
  405753:	mov    rbp,rsp
  405756:	mov    QWORD PTR [rbp-0x8],rdi
  40575a:	mov    QWORD PTR [rbp-0x10],rsi
  40575e:	mov    rax,QWORD PTR [rbp-0x8]
  405762:	mov    rax,QWORD PTR [rax+0xc8]
  405769:	mov    rdx,QWORD PTR [rbp-0x10]
  40576d:	mov    edx,edx
  40576f:	add    rax,rdx
  405772:	pop    rbp
  405773:	ret    
  405774:	endbr64 
  405778:	push   rbp
  405779:	mov    rbp,rsp
  40577c:	sub    rsp,0x10
  405780:	mov    QWORD PTR [rbp-0x8],rdi
  405784:	mov    eax,esi
  405786:	mov    WORD PTR [rbp-0xc],ax
  40578a:	mov    rax,QWORD PTR [rbp-0x8]
  40578e:	mov    eax,DWORD PTR [rax+0x104]
  405794:	lea    edx,[rax+0x1]
  405797:	mov    rax,QWORD PTR [rbp-0x8]
  40579b:	mov    DWORD PTR [rax+0x104],edx
  4057a1:	mov    rax,QWORD PTR [rbp-0x8]
  4057a5:	mov    edx,DWORD PTR [rax+0x104]
  4057ab:	mov    rax,QWORD PTR [rbp-0x8]
  4057af:	mov    eax,DWORD PTR [rax+0x108]
  4057b5:	cmp    edx,eax
  4057b7:	jle    4058b2 <flatcc_builder_get_user_frame_ptr@@Base+0x164>
  4057bd:	mov    rax,QWORD PTR [rbp-0x8]
  4057c1:	mov    eax,DWORD PTR [rax+0x120]
  4057c7:	test   eax,eax
  4057c9:	jle    4057ed <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  4057cb:	mov    rax,QWORD PTR [rbp-0x8]
  4057cf:	mov    edx,DWORD PTR [rax+0x104]
  4057d5:	mov    rax,QWORD PTR [rbp-0x8]
  4057d9:	mov    eax,DWORD PTR [rax+0x120]
  4057df:	cmp    edx,eax
  4057e1:	jle    4057ed <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  4057e3:	mov    eax,0xffffffff
  4057e8:	jmp    40594d <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  4057ed:	mov    rax,QWORD PTR [rbp-0x8]
  4057f1:	mov    eax,DWORD PTR [rax+0x104]
  4057f7:	dec    eax
  4057f9:	movsxd rdx,eax
  4057fc:	mov    rax,rdx
  4057ff:	shl    rax,0x3
  405803:	add    rax,rdx
  405806:	shl    rax,0x2
  40580a:	mov    rdx,rax
  40580d:	mov    rax,QWORD PTR [rbp-0x8]
  405811:	mov    r8d,0x0
  405817:	mov    ecx,0x24
  40581c:	mov    esi,0x4
  405821:	mov    rdi,rax
  405824:	call   404ced <flatcc_builder_default_alloc@@Base+0x516>
  405829:	mov    rdx,rax
  40582c:	mov    rax,QWORD PTR [rbp-0x8]
  405830:	mov    QWORD PTR [rax+0x30],rdx
  405834:	mov    rax,QWORD PTR [rbp-0x8]
  405838:	mov    rax,QWORD PTR [rax+0x30]
  40583c:	test   rax,rax
  40583f:	jne    40584b <flatcc_builder_get_user_frame_ptr@@Base+0xfd>
  405841:	mov    eax,0xffffffff
  405846:	jmp    40594d <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  40584b:	mov    rax,QWORD PTR [rbp-0x8]
  40584f:	mov    rax,QWORD PTR [rax+0xa0]
  405856:	movabs rdx,0xe38e38e38e38e38f
  405860:	mul    rdx
  405863:	mov    rax,rdx
  405866:	shr    rax,0x5
  40586a:	mov    edx,eax
  40586c:	mov    rax,QWORD PTR [rbp-0x8]
  405870:	mov    DWORD PTR [rax+0x108],edx
  405876:	mov    rax,QWORD PTR [rbp-0x8]
  40587a:	mov    eax,DWORD PTR [rax+0x120]
  405880:	test   eax,eax
  405882:	jle    4058c6 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  405884:	mov    rax,QWORD PTR [rbp-0x8]
  405888:	mov    edx,DWORD PTR [rax+0x120]
  40588e:	mov    rax,QWORD PTR [rbp-0x8]
  405892:	mov    eax,DWORD PTR [rax+0x108]
  405898:	cmp    edx,eax
  40589a:	jge    4058c6 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  40589c:	mov    rax,QWORD PTR [rbp-0x8]
  4058a0:	mov    edx,DWORD PTR [rax+0x120]
  4058a6:	mov    rax,QWORD PTR [rbp-0x8]
  4058aa:	mov    DWORD PTR [rax+0x108],edx
  4058b0:	jmp    4058c6 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  4058b2:	mov    rax,QWORD PTR [rbp-0x8]
  4058b6:	mov    rax,QWORD PTR [rax+0x30]
  4058ba:	lea    rdx,[rax+0x24]
  4058be:	mov    rax,QWORD PTR [rbp-0x8]
  4058c2:	mov    QWORD PTR [rax+0x30],rdx
  4058c6:	mov    rax,QWORD PTR [rbp-0x8]
  4058ca:	mov    rax,QWORD PTR [rax+0x30]
  4058ce:	mov    rdx,QWORD PTR [rbp-0x8]
  4058d2:	mov    edx,DWORD PTR [rdx+0x20]
  4058d5:	mov    DWORD PTR [rax+0x8],edx
  4058d8:	mov    rax,QWORD PTR [rbp-0x8]
  4058dc:	mov    rdx,QWORD PTR [rax+0x30]
  4058e0:	mov    rax,QWORD PTR [rbp-0x8]
  4058e4:	movzx  eax,WORD PTR [rax+0xea]
  4058eb:	mov    WORD PTR [rdx+0xc],ax
  4058ef:	mov    rdx,QWORD PTR [rbp-0x8]
  4058f3:	movzx  eax,WORD PTR [rbp-0xc]
  4058f7:	mov    WORD PTR [rdx+0xea],ax
  4058fe:	mov    rax,QWORD PTR [rbp-0x8]
  405902:	mov    rax,QWORD PTR [rax+0x30]
  405906:	mov    rdx,QWORD PTR [rbp-0x8]
  40590a:	mov    edx,DWORD PTR [rdx+0x28]
  40590d:	mov    DWORD PTR [rax],edx
  40590f:	mov    rax,QWORD PTR [rbp-0x8]
  405913:	mov    rax,QWORD PTR [rax+0x30]
  405917:	mov    DWORD PTR [rax+0x4],0xfffffffc
  40591e:	mov    rax,QWORD PTR [rbp-0x8]
  405922:	mov    edx,DWORD PTR [rax+0x28]
  405925:	mov    rax,QWORD PTR [rbp-0x8]
  405929:	mov    eax,DWORD PTR [rax+0x20]
  40592c:	add    eax,edx
  40592e:	add    eax,0x7
  405931:	and    eax,0xfffffff8
  405934:	mov    edx,eax
  405936:	mov    rax,QWORD PTR [rbp-0x8]
  40593a:	mov    DWORD PTR [rax+0x28],edx
  40593d:	mov    rax,QWORD PTR [rbp-0x8]
  405941:	mov    DWORD PTR [rax+0x20],0x0
  405948:	mov    eax,0x0
  40594d:	leave  
  40594e:	ret    
  40594f:	push   rbp
  405950:	mov    rbp,rsp
  405953:	sub    rsp,0x10
  405957:	mov    QWORD PTR [rbp-0x8],rdi
  40595b:	mov    rax,QWORD PTR [rbp-0x8]
  40595f:	mov    eax,DWORD PTR [rax+0x20]
  405962:	mov    edx,eax
  405964:	mov    rax,QWORD PTR [rbp-0x8]
  405968:	mov    rax,QWORD PTR [rax+0x18]
  40596c:	mov    esi,0x0
  405971:	mov    rdi,rax
  405974:	call   4031f0 <memset@plt>
  405979:	mov    rax,QWORD PTR [rbp-0x8]
  40597d:	mov    rax,QWORD PTR [rax+0x30]
  405981:	mov    edx,DWORD PTR [rax+0x8]
  405984:	mov    rax,QWORD PTR [rbp-0x8]
  405988:	mov    DWORD PTR [rax+0x20],edx
  40598b:	mov    rax,QWORD PTR [rbp-0x8]
  40598f:	mov    rax,QWORD PTR [rax+0x30]
  405993:	mov    edx,DWORD PTR [rax]
  405995:	mov    rax,QWORD PTR [rbp-0x8]
  405999:	mov    DWORD PTR [rax+0x28],edx
  40599c:	mov    rax,QWORD PTR [rbp-0x8]
  4059a0:	mov    rax,QWORD PTR [rax+0x30]
  4059a4:	mov    edx,DWORD PTR [rax+0x4]
  4059a7:	mov    rax,QWORD PTR [rbp-0x8]
  4059ab:	mov    esi,edx
  4059ad:	mov    rdi,rax
  4059b0:	call   40494a <flatcc_builder_default_alloc@@Base+0x173>
  4059b5:	mov    rax,QWORD PTR [rbp-0x8]
  4059b9:	movzx  eax,WORD PTR [rax+0xea]
  4059c0:	movzx  edx,ax
  4059c3:	mov    rax,QWORD PTR [rbp-0x8]
  4059c7:	mov    esi,edx
  4059c9:	mov    rdi,rax
  4059cc:	call   405443 <flatcc_builder_clear@@Base+0x99>
  4059d1:	mov    rax,QWORD PTR [rbp-0x8]
  4059d5:	mov    rax,QWORD PTR [rax+0x30]
  4059d9:	movzx  eax,WORD PTR [rax+0xc]
  4059dd:	mov    rdx,QWORD PTR [rbp-0x8]
  4059e1:	mov    WORD PTR [rdx+0xea],ax
  4059e8:	mov    rax,QWORD PTR [rbp-0x8]
  4059ec:	mov    rax,QWORD PTR [rax+0x30]
  4059f0:	lea    rdx,[rax-0x24]
  4059f4:	mov    rax,QWORD PTR [rbp-0x8]
  4059f8:	mov    QWORD PTR [rax+0x30],rdx
  4059fc:	mov    rax,QWORD PTR [rbp-0x8]
  405a00:	mov    eax,DWORD PTR [rax+0x104]
  405a06:	lea    edx,[rax-0x1]
  405a09:	mov    rax,QWORD PTR [rbp-0x8]
  405a0d:	mov    DWORD PTR [rax+0x104],edx
  405a13:	nop
  405a14:	leave  
  405a15:	ret    
  405a16:	push   rbp
  405a17:	mov    rbp,rsp
  405a1a:	mov    QWORD PTR [rbp-0x8],rdi
  405a1e:	mov    DWORD PTR [rbp-0xc],esi
  405a21:	mov    eax,edx
  405a23:	mov    WORD PTR [rbp-0x10],ax
  405a27:	mov    rax,QWORD PTR [rbp-0x8]
  405a2b:	mov    eax,DWORD PTR [rax+0xf0]
  405a31:	sub    eax,DWORD PTR [rbp-0xc]
  405a34:	movzx  edx,WORD PTR [rbp-0x10]
  405a38:	dec    edx
  405a3a:	and    eax,edx
  405a3c:	pop    rbp
  405a3d:	ret    
  405a3e:	push   rbp
  405a3f:	mov    rbp,rsp
  405a42:	mov    QWORD PTR [rbp-0x8],rdi
  405a46:	mov    eax,esi
  405a48:	mov    WORD PTR [rbp-0xc],ax
  405a4c:	mov    rax,QWORD PTR [rbp-0x8]
  405a50:	mov    eax,DWORD PTR [rax+0xf4]
  405a56:	movzx  edx,WORD PTR [rbp-0xc]
  405a5a:	dec    edx
  405a5c:	and    eax,edx
  405a5e:	pop    rbp
  405a5f:	ret    
  405a60:	push   rbp
  405a61:	mov    rbp,rsp
  405a64:	sub    rsp,0x20
  405a68:	mov    QWORD PTR [rbp-0x18],rdi
  405a6c:	mov    QWORD PTR [rbp-0x20],rsi
  405a70:	mov    rax,QWORD PTR [rbp-0x18]
  405a74:	mov    edx,DWORD PTR [rax+0xf0]
  405a7a:	mov    rax,QWORD PTR [rbp-0x20]
  405a7e:	mov    rax,QWORD PTR [rax]
  405a81:	sub    edx,eax
  405a83:	mov    eax,edx
  405a85:	mov    DWORD PTR [rbp-0x4],eax
  405a88:	mov    rax,QWORD PTR [rbp-0x20]
  405a8c:	mov    rax,QWORD PTR [rax]
  405a8f:	cmp    rax,0x10
  405a93:	jbe    405aaa <flatcc_builder_get_user_frame_ptr@@Base+0x35c>
  405a95:	mov    rax,QWORD PTR [rbp-0x20]
  405a99:	mov    rax,QWORD PTR [rax]
  405a9c:	lea    rdx,[rax-0x10]
  405aa0:	mov    eax,0xffffffff
  405aa5:	cmp    rdx,rax
  405aa8:	ja     405ab9 <flatcc_builder_get_user_frame_ptr@@Base+0x36b>
  405aaa:	mov    rax,QWORD PTR [rbp-0x18]
  405aae:	mov    eax,DWORD PTR [rax+0xf0]
  405ab4:	cmp    DWORD PTR [rbp-0x4],eax
  405ab7:	jl     405ad8 <flatcc_builder_get_user_frame_ptr@@Base+0x38a>
  405ab9:	lea    rcx,[rip+0x6288]        # 40bd48 <flatcc_builder_padding_base@@Base+0x708>
  405ac0:	mov    edx,0x287
  405ac5:	lea    rsi,[rip+0x5d74]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  405acc:	lea    rdi,[rip+0x5dcd]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  405ad3:	call   4031e0 <__assert_fail@plt>
  405ad8:	mov    rax,QWORD PTR [rbp-0x18]
  405adc:	mov    rax,QWORD PTR [rax+0x48]
  405ae0:	mov    rdx,QWORD PTR [rbp-0x20]
  405ae4:	mov    r8,QWORD PTR [rdx]
  405ae7:	mov    rdx,QWORD PTR [rbp-0x20]
  405aeb:	mov    edx,DWORD PTR [rdx+0x8]
  405aee:	mov    rcx,QWORD PTR [rbp-0x20]
  405af2:	lea    rsi,[rcx+0x10]
  405af6:	mov    rcx,QWORD PTR [rbp-0x18]
  405afa:	mov    rdi,QWORD PTR [rcx+0x38]
  405afe:	mov    ecx,DWORD PTR [rbp-0x4]
  405b01:	call   rax
  405b03:	test   eax,eax
  405b05:	je     405b26 <flatcc_builder_get_user_frame_ptr@@Base+0x3d8>
  405b07:	lea    rcx,[rip+0x623a]        # 40bd48 <flatcc_builder_padding_base@@Base+0x708>
  405b0e:	mov    edx,0x28b
  405b13:	lea    rsi,[rip+0x5d26]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  405b1a:	lea    rdi,[rip+0x5d7f]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  405b21:	call   4031e0 <__assert_fail@plt>
  405b26:	mov    rax,QWORD PTR [rbp-0x18]
  405b2a:	mov    edx,DWORD PTR [rbp-0x4]
  405b2d:	mov    DWORD PTR [rax+0xf0],edx
  405b33:	mov    rax,QWORD PTR [rbp-0x18]
  405b37:	mov    eax,DWORD PTR [rax+0xf0]
  405b3d:	leave  
  405b3e:	ret    
  405b3f:	push   rbp
  405b40:	mov    rbp,rsp
  405b43:	sub    rsp,0x20
  405b47:	mov    QWORD PTR [rbp-0x18],rdi
  405b4b:	mov    QWORD PTR [rbp-0x20],rsi
  405b4f:	mov    rax,QWORD PTR [rbp-0x18]
  405b53:	mov    eax,DWORD PTR [rax+0xf4]
  405b59:	mov    DWORD PTR [rbp-0x4],eax
  405b5c:	mov    rax,QWORD PTR [rbp-0x20]
  405b60:	mov    rax,QWORD PTR [rax]
  405b63:	mov    edx,eax
  405b65:	mov    eax,DWORD PTR [rbp-0x4]
  405b68:	add    edx,eax
  405b6a:	mov    rax,QWORD PTR [rbp-0x18]
  405b6e:	mov    DWORD PTR [rax+0xf4],edx
  405b74:	mov    rax,QWORD PTR [rbp-0x18]
  405b78:	mov    eax,DWORD PTR [rax+0xf4]
  405b7e:	cmp    DWORD PTR [rbp-0x4],eax
  405b81:	jle    405ba2 <flatcc_builder_get_user_frame_ptr@@Base+0x454>
  405b83:	lea    rcx,[rip+0x61ae]        # 40bd38 <flatcc_builder_padding_base@@Base+0x6f8>
  405b8a:	mov    edx,0x2a1
  405b8f:	lea    rsi,[rip+0x5caa]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  405b96:	lea    rdi,[rip+0x5d03]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  405b9d:	call   4031e0 <__assert_fail@plt>
  405ba2:	mov    rax,QWORD PTR [rbp-0x18]
  405ba6:	mov    rax,QWORD PTR [rax+0x48]
  405baa:	mov    rdx,QWORD PTR [rbp-0x20]
  405bae:	mov    r8,QWORD PTR [rdx]
  405bb1:	mov    rdx,QWORD PTR [rbp-0x20]
  405bb5:	mov    edx,DWORD PTR [rdx+0x8]
  405bb8:	mov    rcx,QWORD PTR [rbp-0x20]
  405bbc:	lea    rsi,[rcx+0x10]
  405bc0:	mov    rcx,QWORD PTR [rbp-0x18]
  405bc4:	mov    rdi,QWORD PTR [rcx+0x38]
  405bc8:	mov    ecx,DWORD PTR [rbp-0x4]
  405bcb:	call   rax
  405bcd:	test   eax,eax
  405bcf:	je     405bf0 <flatcc_builder_get_user_frame_ptr@@Base+0x4a2>
  405bd1:	lea    rcx,[rip+0x6160]        # 40bd38 <flatcc_builder_padding_base@@Base+0x6f8>
  405bd8:	mov    edx,0x2a5
  405bdd:	lea    rsi,[rip+0x5c5c]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  405be4:	lea    rdi,[rip+0x5cb5]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  405beb:	call   4031e0 <__assert_fail@plt>
  405bf0:	mov    eax,DWORD PTR [rbp-0x4]
  405bf3:	inc    eax
  405bf5:	leave  
  405bf6:	ret    
  405bf7:	endbr64 
  405bfb:	push   rbp
  405bfc:	mov    rbp,rsp
  405bff:	sub    rsp,0xd0
  405c06:	mov    QWORD PTR [rbp-0xb8],rdi
  405c0d:	mov    QWORD PTR [rbp-0xc0],rsi
  405c14:	mov    eax,edx
  405c16:	mov    DWORD PTR [rbp-0xc8],ecx
  405c1c:	mov    WORD PTR [rbp-0xc4],ax
  405c23:	mov    rax,QWORD PTR fs:0x28
  405c2c:	mov    QWORD PTR [rbp-0x8],rax
  405c30:	xor    eax,eax
  405c32:	cmp    WORD PTR [rbp-0xc4],0x0
  405c3a:	jne    405c66 <flatcc_builder_get_user_frame_ptr@@Base+0x518>
  405c3c:	mov    rax,QWORD PTR [rbp-0xb8]
  405c43:	movzx  eax,WORD PTR [rax+0xec]
  405c4a:	test   ax,ax
  405c4d:	je     405c5f <flatcc_builder_get_user_frame_ptr@@Base+0x511>
  405c4f:	mov    rax,QWORD PTR [rbp-0xb8]
  405c56:	movzx  eax,WORD PTR [rax+0xec]
  405c5d:	jmp    405c6d <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  405c5f:	mov    eax,0x1
  405c64:	jmp    405c6d <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  405c66:	movzx  eax,WORD PTR [rbp-0xc4]
  405c6d:	mov    WORD PTR [rbp-0xc4],ax
  405c74:	mov    rax,QWORD PTR [rbp-0xc0]
  405c7b:	mov    esi,0x4
  405c80:	mov    rdi,rax
  405c83:	call   405474 <flatcc_builder_clear@@Base+0xca>
  405c88:	movzx  edx,WORD PTR [rbp-0xc4]
  405c8f:	mov    rax,QWORD PTR [rbp-0xc0]
  405c96:	mov    esi,edx
  405c98:	mov    rdi,rax
  405c9b:	call   405474 <flatcc_builder_clear@@Base+0xca>
  405ca0:	cmp    DWORD PTR [rbp-0xc8],0x0
  405ca7:	jne    405d9c <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  405cad:	movzx  edx,WORD PTR [rbp-0xc4]
  405cb4:	mov    rax,QWORD PTR [rbp-0xb8]
  405cbb:	mov    esi,edx
  405cbd:	mov    rdi,rax
  405cc0:	call   405a3e <flatcc_builder_get_user_frame_ptr@@Base+0x2f0>
  405cc5:	mov    eax,eax
  405cc7:	mov    QWORD PTR [rbp-0xa8],rax
  405cce:	cmp    QWORD PTR [rbp-0xa8],0x0
  405cd6:	je     405d9c <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  405cdc:	mov    QWORD PTR [rbp-0xa0],0x0
  405ce7:	mov    DWORD PTR [rbp-0x98],0x0
  405cf1:	cmp    QWORD PTR [rbp-0xa8],0x0
  405cf9:	je     405d60 <flatcc_builder_get_user_frame_ptr@@Base+0x612>
  405cfb:	mov    rdx,QWORD PTR [rbp-0xa0]
  405d02:	mov    rax,QWORD PTR [rbp-0xa8]
  405d09:	add    rax,rdx
  405d0c:	mov    QWORD PTR [rbp-0xa0],rax
  405d13:	mov    eax,DWORD PTR [rbp-0x98]
  405d19:	cdqe   
  405d1b:	shl    rax,0x4
  405d1f:	add    rax,rbp
  405d22:	sub    rax,0x90
  405d28:	mov    rdx,0x40b640
  405d2f:	mov    QWORD PTR [rax],rdx
  405d32:	mov    eax,DWORD PTR [rbp-0x98]
  405d38:	cdqe   
  405d3a:	shl    rax,0x4
  405d3e:	add    rax,rbp
  405d41:	lea    rdx,[rax-0x88]
  405d48:	mov    rax,QWORD PTR [rbp-0xa8]
  405d4f:	mov    QWORD PTR [rdx],rax
  405d52:	mov    eax,DWORD PTR [rbp-0x98]
  405d58:	inc    eax
  405d5a:	mov    DWORD PTR [rbp-0x98],eax
  405d60:	lea    rdx,[rbp-0xa0]
  405d67:	mov    rax,QWORD PTR [rbp-0xb8]
  405d6e:	mov    rsi,rdx
  405d71:	mov    rdi,rax
  405d74:	call   405b3f <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  405d79:	test   eax,eax
  405d7b:	jne    405d9c <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  405d7d:	lea    rcx,[rip+0x5fa4]        # 40bd28 <flatcc_builder_padding_base@@Base+0x6e8>
  405d84:	mov    edx,0x2be
  405d89:	lea    rsi,[rip+0x5ab0]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  405d90:	lea    rdi,[rip+0x5b09]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  405d97:	call   4031e0 <__assert_fail@plt>
  405d9c:	mov    eax,0x0
  405da1:	mov    rcx,QWORD PTR [rbp-0x8]
  405da5:	xor    rcx,QWORD PTR fs:0x28
  405dae:	je     405db5 <flatcc_builder_get_user_frame_ptr@@Base+0x667>
  405db0:	call   4031b0 <__stack_chk_fail@plt>
  405db5:	leave  
  405db6:	ret    

0000000000405db7 <flatcc_builder_embed_buffer@@Base>:
  405db7:	endbr64 
  405dbb:	push   rbp
  405dbc:	mov    rbp,rsp
  405dbf:	sub    rsp,0xe0
  405dc6:	mov    QWORD PTR [rbp-0xb8],rdi
  405dcd:	mov    eax,esi
  405dcf:	mov    QWORD PTR [rbp-0xc8],rdx
  405dd6:	mov    QWORD PTR [rbp-0xd0],rcx
  405ddd:	mov    edx,r8d
  405de0:	mov    DWORD PTR [rbp-0xd4],r9d
  405de7:	mov    WORD PTR [rbp-0xbc],ax
  405dee:	mov    eax,edx
  405df0:	mov    WORD PTR [rbp-0xc0],ax
  405df7:	mov    rax,QWORD PTR fs:0x28
  405e00:	mov    QWORD PTR [rbp-0x8],rax
  405e04:	xor    eax,eax
  405e06:	mov    eax,DWORD PTR [rbp-0xd4]
  405e0c:	and    eax,0x2
  405e0f:	mov    DWORD PTR [rbp-0xa8],eax
  405e15:	mov    rax,QWORD PTR [rbp-0xb8]
  405e1c:	mov    eax,DWORD PTR [rax+0x100]
  405e22:	test   eax,eax
  405e24:	setne  al
  405e27:	movzx  ecx,al
  405e2a:	movzx  edx,WORD PTR [rbp-0xbc]
  405e31:	lea    rsi,[rbp-0xc0]
  405e38:	mov    rax,QWORD PTR [rbp-0xb8]
  405e3f:	mov    rdi,rax
  405e42:	call   405bf7 <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  405e47:	test   eax,eax
  405e49:	je     405e55 <flatcc_builder_embed_buffer@@Base+0x9e>
  405e4b:	mov    eax,0x0
  405e50:	jmp    40602c <flatcc_builder_embed_buffer@@Base+0x275>
  405e55:	movzx  eax,WORD PTR [rbp-0xc0]
  405e5c:	movzx  edx,ax
  405e5f:	mov    rax,QWORD PTR [rbp-0xd0]
  405e66:	mov    ecx,eax
  405e68:	cmp    DWORD PTR [rbp-0xa8],0x0
  405e6f:	je     405e78 <flatcc_builder_embed_buffer@@Base+0xc1>
  405e71:	mov    eax,0x4
  405e76:	jmp    405e7d <flatcc_builder_embed_buffer@@Base+0xc6>
  405e78:	mov    eax,0x0
  405e7d:	add    ecx,eax
  405e7f:	mov    rax,QWORD PTR [rbp-0xb8]
  405e86:	mov    esi,ecx
  405e88:	mov    rdi,rax
  405e8b:	call   405a16 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  405e90:	mov    DWORD PTR [rbp-0xa4],eax
  405e96:	mov    rax,QWORD PTR [rbp-0xd0]
  405e9d:	mov    edx,eax
  405e9f:	mov    eax,DWORD PTR [rbp-0xa4]
  405ea5:	add    eax,edx
  405ea7:	mov    edi,eax
  405ea9:	call   404717 <main@@Base+0x412>
  405eae:	mov    DWORD PTR [rbp-0xac],eax
  405eb4:	mov    QWORD PTR [rbp-0xa0],0x0
  405ebf:	mov    DWORD PTR [rbp-0x98],0x0
  405ec9:	mov    rax,QWORD PTR [rbp-0xb8]
  405ed0:	mov    eax,DWORD PTR [rax+0x100]
  405ed6:	test   eax,eax
  405ed8:	je     405f36 <flatcc_builder_embed_buffer@@Base+0x17f>
  405eda:	mov    rax,QWORD PTR [rbp-0xa0]
  405ee1:	add    rax,0x4
  405ee5:	mov    QWORD PTR [rbp-0xa0],rax
  405eec:	mov    eax,DWORD PTR [rbp-0x98]
  405ef2:	cdqe   
  405ef4:	shl    rax,0x4
  405ef8:	add    rax,rbp
  405efb:	lea    rdx,[rax-0x90]
  405f02:	lea    rax,[rbp-0xac]
  405f09:	mov    QWORD PTR [rdx],rax
  405f0c:	mov    eax,DWORD PTR [rbp-0x98]
  405f12:	cdqe   
  405f14:	shl    rax,0x4
  405f18:	add    rax,rbp
  405f1b:	sub    rax,0x88
  405f21:	mov    QWORD PTR [rax],0x4
  405f28:	mov    eax,DWORD PTR [rbp-0x98]
  405f2e:	inc    eax
  405f30:	mov    DWORD PTR [rbp-0x98],eax
  405f36:	cmp    QWORD PTR [rbp-0xd0],0x0
  405f3e:	je     405fa6 <flatcc_builder_embed_buffer@@Base+0x1ef>
  405f40:	mov    rdx,QWORD PTR [rbp-0xa0]
  405f47:	mov    rax,QWORD PTR [rbp-0xd0]
  405f4e:	add    rax,rdx
  405f51:	mov    QWORD PTR [rbp-0xa0],rax
  405f58:	mov    eax,DWORD PTR [rbp-0x98]
  405f5e:	cdqe   
  405f60:	shl    rax,0x4
  405f64:	add    rax,rbp
  405f67:	lea    rdx,[rax-0x90]
  405f6e:	mov    rax,QWORD PTR [rbp-0xc8]
  405f75:	mov    QWORD PTR [rdx],rax
  405f78:	mov    eax,DWORD PTR [rbp-0x98]
  405f7e:	cdqe   
  405f80:	shl    rax,0x4
  405f84:	add    rax,rbp
  405f87:	lea    rdx,[rax-0x88]
  405f8e:	mov    rax,QWORD PTR [rbp-0xd0]
  405f95:	mov    QWORD PTR [rdx],rax
  405f98:	mov    eax,DWORD PTR [rbp-0x98]
  405f9e:	inc    eax
  405fa0:	mov    DWORD PTR [rbp-0x98],eax
  405fa6:	cmp    DWORD PTR [rbp-0xa4],0x0
  405fad:	je     406013 <flatcc_builder_embed_buffer@@Base+0x25c>
  405faf:	mov    rdx,QWORD PTR [rbp-0xa0]
  405fb6:	mov    eax,DWORD PTR [rbp-0xa4]
  405fbc:	add    rax,rdx
  405fbf:	mov    QWORD PTR [rbp-0xa0],rax
  405fc6:	mov    eax,DWORD PTR [rbp-0x98]
  405fcc:	cdqe   
  405fce:	shl    rax,0x4
  405fd2:	add    rax,rbp
  405fd5:	sub    rax,0x90
  405fdb:	mov    rdx,0x40b640
  405fe2:	mov    QWORD PTR [rax],rdx
  405fe5:	mov    edx,DWORD PTR [rbp-0x98]
  405feb:	mov    eax,DWORD PTR [rbp-0xa4]
  405ff1:	movsxd rdx,edx
  405ff4:	shl    rdx,0x4
  405ff8:	add    rdx,rbp
  405ffb:	sub    rdx,0x88
  406002:	mov    QWORD PTR [rdx],rax
  406005:	mov    eax,DWORD PTR [rbp-0x98]
  40600b:	inc    eax
  40600d:	mov    DWORD PTR [rbp-0x98],eax
  406013:	lea    rdx,[rbp-0xa0]
  40601a:	mov    rax,QWORD PTR [rbp-0xb8]
  406021:	mov    rsi,rdx
  406024:	mov    rdi,rax
  406027:	call   405a60 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  40602c:	mov    rdi,QWORD PTR [rbp-0x8]
  406030:	xor    rdi,QWORD PTR fs:0x28
  406039:	je     406040 <flatcc_builder_embed_buffer@@Base+0x289>
  40603b:	call   4031b0 <__stack_chk_fail@plt>
  406040:	leave  
  406041:	ret    

0000000000406042 <flatcc_builder_create_buffer@@Base>:
  406042:	endbr64 
  406046:	push   rbp
  406047:	mov    rbp,rsp
  40604a:	sub    rsp,0xf0
  406051:	mov    QWORD PTR [rbp-0xd8],rdi
  406058:	mov    QWORD PTR [rbp-0xe0],rsi
  40605f:	mov    eax,edx
  406061:	mov    DWORD PTR [rbp-0xe8],ecx
  406067:	mov    edx,r8d
  40606a:	mov    DWORD PTR [rbp-0xf0],r9d
  406071:	mov    WORD PTR [rbp-0xe4],ax
  406078:	mov    eax,edx
  40607a:	mov    WORD PTR [rbp-0xec],ax
  406081:	mov    rax,QWORD PTR fs:0x28
  40608a:	mov    QWORD PTR [rbp-0x8],rax
  40608e:	xor    eax,eax
  406090:	mov    DWORD PTR [rbp-0xb8],0x0
  40609a:	mov    DWORD PTR [rbp-0xbc],0x0
  4060a4:	mov    eax,DWORD PTR [rbp-0xf0]
  4060aa:	and    eax,0x1
  4060ad:	test   eax,eax
  4060af:	setne  al
  4060b2:	movzx  eax,al
  4060b5:	mov    DWORD PTR [rbp-0xb4],eax
  4060bb:	mov    eax,DWORD PTR [rbp-0xf0]
  4060c1:	and    eax,0x2
  4060c4:	test   eax,eax
  4060c6:	setne  al
  4060c9:	movzx  eax,al
  4060cc:	mov    DWORD PTR [rbp-0xb0],eax
  4060d2:	movzx  edx,WORD PTR [rbp-0xe4]
  4060d9:	mov    ecx,DWORD PTR [rbp-0xb4]
  4060df:	lea    rsi,[rbp-0xec]
  4060e6:	mov    rax,QWORD PTR [rbp-0xd8]
  4060ed:	mov    rdi,rax
  4060f0:	call   405bf7 <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  4060f5:	test   eax,eax
  4060f7:	je     406103 <flatcc_builder_create_buffer@@Base+0xc1>
  4060f9:	mov    eax,0x0
  4060fe:	jmp    406465 <flatcc_builder_create_buffer@@Base+0x423>
  406103:	movzx  eax,WORD PTR [rbp-0xec]
  40610a:	movzx  edx,ax
  40610d:	mov    rax,QWORD PTR [rbp-0xd8]
  406114:	mov    esi,edx
  406116:	mov    rdi,rax
  406119:	call   405443 <flatcc_builder_clear@@Base+0x99>
  40611e:	cmp    QWORD PTR [rbp-0xe0],0x0
  406126:	je     40615d <flatcc_builder_create_buffer@@Base+0x11b>
  406128:	mov    rax,QWORD PTR [rbp-0xe0]
  40612f:	mov    eax,DWORD PTR [rax]
  406131:	mov    DWORD PTR [rbp-0xbc],eax
  406137:	mov    eax,DWORD PTR [rbp-0xbc]
  40613d:	mov    edi,eax
  40613f:	call   404732 <main@@Base+0x42d>
  406144:	mov    DWORD PTR [rbp-0xbc],eax
  40614a:	mov    eax,DWORD PTR [rbp-0xbc]
  406150:	mov    edi,eax
  406152:	call   404717 <main@@Base+0x412>
  406157:	mov    DWORD PTR [rbp-0xbc],eax
  40615d:	mov    eax,DWORD PTR [rbp-0xbc]
  406163:	test   eax,eax
  406165:	je     40616e <flatcc_builder_create_buffer@@Base+0x12c>
  406167:	mov    eax,0x4
  40616c:	jmp    406173 <flatcc_builder_create_buffer@@Base+0x131>
  40616e:	mov    eax,0x0
  406173:	mov    DWORD PTR [rbp-0xb8],eax
  406179:	movzx  eax,WORD PTR [rbp-0xec]
  406180:	movzx  edx,ax
  406183:	cmp    DWORD PTR [rbp-0xb0],0x0
  40618a:	je     406193 <flatcc_builder_create_buffer@@Base+0x151>
  40618c:	mov    ecx,0x4
  406191:	jmp    406198 <flatcc_builder_create_buffer@@Base+0x156>
  406193:	mov    ecx,0x0
  406198:	mov    eax,DWORD PTR [rbp-0xb8]
  40619e:	add    eax,ecx
  4061a0:	lea    ecx,[rax+0x4]
  4061a3:	mov    rax,QWORD PTR [rbp-0xd8]
  4061aa:	mov    esi,ecx
  4061ac:	mov    rdi,rax
  4061af:	call   405a16 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  4061b4:	mov    DWORD PTR [rbp-0xac],eax
  4061ba:	mov    QWORD PTR [rbp-0xa0],0x0
  4061c5:	mov    DWORD PTR [rbp-0x98],0x0
  4061cf:	cmp    DWORD PTR [rbp-0xb4],0x0
  4061d6:	jne    4061e1 <flatcc_builder_create_buffer@@Base+0x19f>
  4061d8:	cmp    DWORD PTR [rbp-0xb0],0x0
  4061df:	je     40623d <flatcc_builder_create_buffer@@Base+0x1fb>
  4061e1:	mov    rax,QWORD PTR [rbp-0xa0]
  4061e8:	add    rax,0x4
  4061ec:	mov    QWORD PTR [rbp-0xa0],rax
  4061f3:	mov    eax,DWORD PTR [rbp-0x98]
  4061f9:	cdqe   
  4061fb:	shl    rax,0x4
  4061ff:	add    rax,rbp
  406202:	lea    rdx,[rax-0x90]
  406209:	lea    rax,[rbp-0xc0]
  406210:	mov    QWORD PTR [rdx],rax
  406213:	mov    eax,DWORD PTR [rbp-0x98]
  406219:	cdqe   
  40621b:	shl    rax,0x4
  40621f:	add    rax,rbp
  406222:	sub    rax,0x88
  406228:	mov    QWORD PTR [rax],0x4
  40622f:	mov    eax,DWORD PTR [rbp-0x98]
  406235:	inc    eax
  406237:	mov    DWORD PTR [rbp-0x98],eax
  40623d:	mov    rax,QWORD PTR [rbp-0xa0]
  406244:	add    rax,0x4
  406248:	mov    QWORD PTR [rbp-0xa0],rax
  40624f:	mov    eax,DWORD PTR [rbp-0x98]
  406255:	cdqe   
  406257:	shl    rax,0x4
  40625b:	add    rax,rbp
  40625e:	lea    rdx,[rax-0x90]
  406265:	lea    rax,[rbp-0xc4]
  40626c:	mov    QWORD PTR [rdx],rax
  40626f:	mov    eax,DWORD PTR [rbp-0x98]
  406275:	cdqe   
  406277:	shl    rax,0x4
  40627b:	add    rax,rbp
  40627e:	sub    rax,0x88
  406284:	mov    QWORD PTR [rax],0x4
  40628b:	mov    eax,DWORD PTR [rbp-0x98]
  406291:	inc    eax
  406293:	mov    DWORD PTR [rbp-0x98],eax
  406299:	cmp    DWORD PTR [rbp-0xb8],0x0
  4062a0:	je     406307 <flatcc_builder_create_buffer@@Base+0x2c5>
  4062a2:	mov    rdx,QWORD PTR [rbp-0xa0]
  4062a9:	mov    eax,DWORD PTR [rbp-0xb8]
  4062af:	add    rax,rdx
  4062b2:	mov    QWORD PTR [rbp-0xa0],rax
  4062b9:	mov    eax,DWORD PTR [rbp-0x98]
  4062bf:	cdqe   
  4062c1:	shl    rax,0x4
  4062c5:	add    rax,rbp
  4062c8:	lea    rdx,[rax-0x90]
  4062cf:	lea    rax,[rbp-0xbc]
  4062d6:	mov    QWORD PTR [rdx],rax
  4062d9:	mov    edx,DWORD PTR [rbp-0x98]
  4062df:	mov    eax,DWORD PTR [rbp-0xb8]
  4062e5:	movsxd rdx,edx
  4062e8:	shl    rdx,0x4
  4062ec:	add    rdx,rbp
  4062ef:	sub    rdx,0x88
  4062f6:	mov    QWORD PTR [rdx],rax
  4062f9:	mov    eax,DWORD PTR [rbp-0x98]
  4062ff:	inc    eax
  406301:	mov    DWORD PTR [rbp-0x98],eax
  406307:	cmp    DWORD PTR [rbp-0xac],0x0
  40630e:	je     406374 <flatcc_builder_create_buffer@@Base+0x332>
  406310:	mov    rdx,QWORD PTR [rbp-0xa0]
  406317:	mov    eax,DWORD PTR [rbp-0xac]
  40631d:	add    rax,rdx
  406320:	mov    QWORD PTR [rbp-0xa0],rax
  406327:	mov    eax,DWORD PTR [rbp-0x98]
  40632d:	cdqe   
  40632f:	shl    rax,0x4
  406333:	add    rax,rbp
  406336:	sub    rax,0x90
  40633c:	mov    rdx,0x40b640
  406343:	mov    QWORD PTR [rax],rdx
  406346:	mov    edx,DWORD PTR [rbp-0x98]
  40634c:	mov    eax,DWORD PTR [rbp-0xac]
  406352:	movsxd rdx,edx
  406355:	shl    rdx,0x4
  406359:	add    rdx,rbp
  40635c:	sub    rdx,0x88
  406363:	mov    QWORD PTR [rdx],rax
  406366:	mov    eax,DWORD PTR [rbp-0x98]
  40636c:	inc    eax
  40636e:	mov    DWORD PTR [rbp-0x98],eax
  406374:	mov    rax,QWORD PTR [rbp-0xd8]
  40637b:	mov    eax,DWORD PTR [rax+0xf0]
  406381:	mov    edx,eax
  406383:	mov    rax,QWORD PTR [rbp-0xa0]
  40638a:	sub    edx,eax
  40638c:	mov    eax,edx
  40638e:	cmp    DWORD PTR [rbp-0xb4],0x0
  406395:	jne    4063a0 <flatcc_builder_create_buffer@@Base+0x35e>
  406397:	cmp    DWORD PTR [rbp-0xb0],0x0
  40639e:	je     4063a7 <flatcc_builder_create_buffer@@Base+0x365>
  4063a0:	mov    edx,0x4
  4063a5:	jmp    4063ac <flatcc_builder_create_buffer@@Base+0x36a>
  4063a7:	mov    edx,0x0
  4063ac:	add    eax,edx
  4063ae:	mov    DWORD PTR [rbp-0xa8],eax
  4063b4:	cmp    DWORD PTR [rbp-0xb4],0x0
  4063bb:	je     4063df <flatcc_builder_create_buffer@@Base+0x39d>
  4063bd:	mov    rax,QWORD PTR [rbp-0xd8]
  4063c4:	mov    eax,DWORD PTR [rax+0xf8]
  4063ca:	sub    eax,DWORD PTR [rbp-0xa8]
  4063d0:	mov    edi,eax
  4063d2:	call   404717 <main@@Base+0x412>
  4063d7:	mov    DWORD PTR [rbp-0xc0],eax
  4063dd:	jmp    4063ff <flatcc_builder_create_buffer@@Base+0x3bd>
  4063df:	mov    rax,QWORD PTR [rbp-0xd8]
  4063e6:	mov    eax,DWORD PTR [rax+0xf4]
  4063ec:	sub    eax,DWORD PTR [rbp-0xa8]
  4063f2:	mov    edi,eax
  4063f4:	call   404717 <main@@Base+0x412>
  4063f9:	mov    DWORD PTR [rbp-0xc0],eax
  4063ff:	mov    eax,DWORD PTR [rbp-0xe8]
  406405:	sub    eax,DWORD PTR [rbp-0xa8]
  40640b:	mov    edi,eax
  40640d:	call   404717 <main@@Base+0x412>
  406412:	mov    DWORD PTR [rbp-0xc4],eax
  406418:	lea    rdx,[rbp-0xa0]
  40641f:	mov    rax,QWORD PTR [rbp-0xd8]
  406426:	mov    rsi,rdx
  406429:	mov    rdi,rax
  40642c:	call   405a60 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  406431:	mov    DWORD PTR [rbp-0xa4],eax
  406437:	cmp    DWORD PTR [rbp-0xa4],0x0
  40643e:	jne    40645f <flatcc_builder_create_buffer@@Base+0x41d>
  406440:	lea    rcx,[rip+0x5919]        # 40bd60 <flatcc_builder_padding_base@@Base+0x720>
  406447:	mov    edx,0x304
  40644c:	lea    rsi,[rip+0x53ed]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406453:	lea    rdi,[rip+0x5446]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  40645a:	call   4031e0 <__assert_fail@plt>
  40645f:	mov    eax,DWORD PTR [rbp-0xa4]
  406465:	mov    rsi,QWORD PTR [rbp-0x8]
  406469:	xor    rsi,QWORD PTR fs:0x28
  406472:	je     406479 <flatcc_builder_create_buffer@@Base+0x437>
  406474:	call   4031b0 <__stack_chk_fail@plt>
  406479:	leave  
  40647a:	ret    

000000000040647b <flatcc_builder_create_struct@@Base>:
  40647b:	endbr64 
  40647f:	push   rbp
  406480:	mov    rbp,rsp
  406483:	sub    rsp,0xd0
  40648a:	mov    QWORD PTR [rbp-0xb8],rdi
  406491:	mov    QWORD PTR [rbp-0xc0],rsi
  406498:	mov    QWORD PTR [rbp-0xc8],rdx
  40649f:	mov    eax,ecx
  4064a1:	mov    WORD PTR [rbp-0xcc],ax
  4064a8:	mov    rax,QWORD PTR fs:0x28
  4064b1:	mov    QWORD PTR [rbp-0x8],rax
  4064b5:	xor    eax,eax
  4064b7:	cmp    WORD PTR [rbp-0xcc],0x0
  4064bf:	jne    4064e0 <flatcc_builder_create_struct@@Base+0x65>
  4064c1:	lea    rcx,[rip+0x58b8]        # 40bd80 <flatcc_builder_padding_base@@Base+0x740>
  4064c8:	mov    edx,0x30f
  4064cd:	lea    rsi,[rip+0x536c]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4064d4:	lea    rdi,[rip+0x5424]        # 40b8ff <flatcc_builder_padding_base@@Base+0x2bf>
  4064db:	call   4031e0 <__assert_fail@plt>
  4064e0:	movzx  edx,WORD PTR [rbp-0xcc]
  4064e7:	mov    rax,QWORD PTR [rbp-0xb8]
  4064ee:	mov    esi,edx
  4064f0:	mov    rdi,rax
  4064f3:	call   405443 <flatcc_builder_clear@@Base+0x99>
  4064f8:	movzx  edx,WORD PTR [rbp-0xcc]
  4064ff:	mov    rax,QWORD PTR [rbp-0xc8]
  406506:	mov    ecx,eax
  406508:	mov    rax,QWORD PTR [rbp-0xb8]
  40650f:	mov    esi,ecx
  406511:	mov    rdi,rax
  406514:	call   405a16 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  406519:	mov    eax,eax
  40651b:	mov    QWORD PTR [rbp-0xa8],rax
  406522:	mov    QWORD PTR [rbp-0xa0],0x0
  40652d:	mov    DWORD PTR [rbp-0x98],0x0
  406537:	cmp    QWORD PTR [rbp-0xc8],0x0
  40653f:	je     4065a7 <flatcc_builder_create_struct@@Base+0x12c>
  406541:	mov    rdx,QWORD PTR [rbp-0xa0]
  406548:	mov    rax,QWORD PTR [rbp-0xc8]
  40654f:	add    rax,rdx
  406552:	mov    QWORD PTR [rbp-0xa0],rax
  406559:	mov    eax,DWORD PTR [rbp-0x98]
  40655f:	cdqe   
  406561:	shl    rax,0x4
  406565:	add    rax,rbp
  406568:	lea    rdx,[rax-0x90]
  40656f:	mov    rax,QWORD PTR [rbp-0xc0]
  406576:	mov    QWORD PTR [rdx],rax
  406579:	mov    eax,DWORD PTR [rbp-0x98]
  40657f:	cdqe   
  406581:	shl    rax,0x4
  406585:	add    rax,rbp
  406588:	lea    rdx,[rax-0x88]
  40658f:	mov    rax,QWORD PTR [rbp-0xc8]
  406596:	mov    QWORD PTR [rdx],rax
  406599:	mov    eax,DWORD PTR [rbp-0x98]
  40659f:	inc    eax
  4065a1:	mov    DWORD PTR [rbp-0x98],eax
  4065a7:	cmp    QWORD PTR [rbp-0xa8],0x0
  4065af:	je     406616 <flatcc_builder_create_struct@@Base+0x19b>
  4065b1:	mov    rdx,QWORD PTR [rbp-0xa0]
  4065b8:	mov    rax,QWORD PTR [rbp-0xa8]
  4065bf:	add    rax,rdx
  4065c2:	mov    QWORD PTR [rbp-0xa0],rax
  4065c9:	mov    eax,DWORD PTR [rbp-0x98]
  4065cf:	cdqe   
  4065d1:	shl    rax,0x4
  4065d5:	add    rax,rbp
  4065d8:	sub    rax,0x90
  4065de:	mov    rdx,0x40b640
  4065e5:	mov    QWORD PTR [rax],rdx
  4065e8:	mov    eax,DWORD PTR [rbp-0x98]
  4065ee:	cdqe   
  4065f0:	shl    rax,0x4
  4065f4:	add    rax,rbp
  4065f7:	lea    rdx,[rax-0x88]
  4065fe:	mov    rax,QWORD PTR [rbp-0xa8]
  406605:	mov    QWORD PTR [rdx],rax
  406608:	mov    eax,DWORD PTR [rbp-0x98]
  40660e:	inc    eax
  406610:	mov    DWORD PTR [rbp-0x98],eax
  406616:	lea    rdx,[rbp-0xa0]
  40661d:	mov    rax,QWORD PTR [rbp-0xb8]
  406624:	mov    rsi,rdx
  406627:	mov    rdi,rax
  40662a:	call   405a60 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  40662f:	mov    rcx,QWORD PTR [rbp-0x8]
  406633:	xor    rcx,QWORD PTR fs:0x28
  40663c:	je     406643 <flatcc_builder_create_struct@@Base+0x1c8>
  40663e:	call   4031b0 <__stack_chk_fail@plt>
  406643:	leave  
  406644:	ret    

0000000000406645 <flatcc_builder_start_buffer@@Base>:
  406645:	endbr64 
  406649:	push   rbp
  40664a:	mov    rbp,rsp
  40664d:	sub    rsp,0x20
  406651:	mov    QWORD PTR [rbp-0x8],rdi
  406655:	mov    QWORD PTR [rbp-0x10],rsi
  406659:	mov    eax,edx
  40665b:	mov    DWORD PTR [rbp-0x18],ecx
  40665e:	mov    WORD PTR [rbp-0x14],ax
  406662:	mov    rax,QWORD PTR [rbp-0x8]
  406666:	movzx  eax,WORD PTR [rax+0xe8]
  40666d:	movzx  edx,ax
  406670:	mov    rax,QWORD PTR [rbp-0x8]
  406674:	mov    esi,edx
  406676:	mov    rdi,rax
  406679:	call   405774 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  40667e:	test   eax,eax
  406680:	je     40668c <flatcc_builder_start_buffer@@Base+0x47>
  406682:	mov    eax,0xffffffff
  406687:	jmp    406790 <flatcc_builder_start_buffer@@Base+0x14b>
  40668c:	mov    rax,QWORD PTR [rbp-0x8]
  406690:	mov    WORD PTR [rax+0xe8],0x1
  406699:	mov    rax,QWORD PTR [rbp-0x8]
  40669d:	mov    rdx,QWORD PTR [rax+0x30]
  4066a1:	mov    rax,QWORD PTR [rbp-0x8]
  4066a5:	movzx  eax,WORD PTR [rax+0xec]
  4066ac:	mov    WORD PTR [rdx+0x22],ax
  4066b0:	mov    rdx,QWORD PTR [rbp-0x8]
  4066b4:	movzx  eax,WORD PTR [rbp-0x14]
  4066b8:	mov    WORD PTR [rdx+0xec],ax
  4066bf:	mov    rax,QWORD PTR [rbp-0x8]
  4066c3:	mov    rdx,QWORD PTR [rax+0x30]
  4066c7:	mov    rax,QWORD PTR [rbp-0x8]
  4066cb:	movzx  eax,WORD PTR [rax+0x10c]
  4066d2:	mov    WORD PTR [rdx+0x20],ax
  4066d6:	mov    eax,DWORD PTR [rbp-0x18]
  4066d9:	mov    edx,eax
  4066db:	mov    rax,QWORD PTR [rbp-0x8]
  4066df:	mov    WORD PTR [rax+0x10c],dx
  4066e6:	mov    rax,QWORD PTR [rbp-0x8]
  4066ea:	mov    rax,QWORD PTR [rax+0x30]
  4066ee:	mov    rdx,QWORD PTR [rbp-0x8]
  4066f2:	mov    edx,DWORD PTR [rdx+0xf8]
  4066f8:	mov    DWORD PTR [rax+0x14],edx
  4066fb:	mov    rax,QWORD PTR [rbp-0x8]
  4066ff:	mov    rax,QWORD PTR [rax+0x30]
  406703:	mov    rdx,QWORD PTR [rbp-0x8]
  406707:	mov    edx,DWORD PTR [rdx+0x100]
  40670d:	mov    DWORD PTR [rax+0x1c],edx
  406710:	mov    rax,QWORD PTR [rbp-0x8]
  406714:	mov    edx,DWORD PTR [rax+0xf0]
  40671a:	mov    rax,QWORD PTR [rbp-0x8]
  40671e:	mov    DWORD PTR [rax+0xf8],edx
  406724:	mov    rax,QWORD PTR [rbp-0x8]
  406728:	mov    eax,DWORD PTR [rax+0xfc]
  40672e:	lea    ecx,[rax+0x1]
  406731:	mov    rdx,QWORD PTR [rbp-0x8]
  406735:	mov    DWORD PTR [rdx+0xfc],ecx
  40673b:	mov    rdx,QWORD PTR [rbp-0x8]
  40673f:	mov    DWORD PTR [rdx+0x100],eax
  406745:	mov    rax,QWORD PTR [rbp-0x8]
  406749:	mov    rax,QWORD PTR [rax+0x30]
  40674d:	mov    rdx,QWORD PTR [rbp-0x8]
  406751:	mov    edx,DWORD PTR [rdx+0x110]
  406757:	mov    DWORD PTR [rax+0x10],edx
  40675a:	cmp    QWORD PTR [rbp-0x10],0x0
  40675f:	je     406767 <flatcc_builder_start_buffer@@Base+0x122>
  406761:	mov    rax,QWORD PTR [rbp-0x10]
  406765:	jmp    40676e <flatcc_builder_start_buffer@@Base+0x129>
  406767:	mov    rax,0x40b640
  40676e:	mov    rdx,QWORD PTR [rbp-0x8]
  406772:	add    rdx,0x110
  406779:	mov    eax,DWORD PTR [rax]
  40677b:	mov    DWORD PTR [rdx],eax
  40677d:	mov    rax,QWORD PTR [rbp-0x8]
  406781:	mov    rax,QWORD PTR [rax+0x30]
  406785:	mov    WORD PTR [rax+0xe],0x1
  40678b:	mov    eax,0x0
  406790:	leave  
  406791:	ret    

0000000000406792 <flatcc_builder_end_buffer@@Base>:
  406792:	endbr64 
  406796:	push   rbp
  406797:	mov    rbp,rsp
  40679a:	sub    rsp,0x20
  40679e:	mov    QWORD PTR [rbp-0x18],rdi
  4067a2:	mov    DWORD PTR [rbp-0x1c],esi
  4067a5:	mov    rax,QWORD PTR [rbp-0x18]
  4067a9:	movzx  eax,WORD PTR [rax+0x10c]
  4067b0:	movzx  eax,ax
  4067b3:	and    eax,0x2
  4067b6:	mov    DWORD PTR [rbp-0x8],eax
  4067b9:	mov    rax,QWORD PTR [rbp-0x18]
  4067bd:	mov    eax,DWORD PTR [rax+0x100]
  4067c3:	test   eax,eax
  4067c5:	setne  al
  4067c8:	movzx  eax,al
  4067cb:	or     DWORD PTR [rbp-0x8],eax
  4067ce:	mov    rax,QWORD PTR [rbp-0x18]
  4067d2:	mov    rax,QWORD PTR [rax+0x30]
  4067d6:	movzx  eax,WORD PTR [rax+0xe]
  4067da:	cmp    ax,0x1
  4067de:	je     4067ff <flatcc_builder_end_buffer@@Base+0x6d>
  4067e0:	lea    rcx,[rip+0x55b9]        # 40bda0 <flatcc_builder_padding_base@@Base+0x760>
  4067e7:	mov    edx,0x346
  4067ec:	lea    rsi,[rip+0x504d]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4067f3:	lea    rdi,[rip+0x5116]        # 40b910 <flatcc_builder_padding_base@@Base+0x2d0>
  4067fa:	call   4031e0 <__assert_fail@plt>
  4067ff:	mov    rax,QWORD PTR [rbp-0x18]
  406803:	movzx  eax,WORD PTR [rax+0xec]
  40680a:	movzx  edx,ax
  40680d:	mov    rax,QWORD PTR [rbp-0x18]
  406811:	mov    esi,edx
  406813:	mov    rdi,rax
  406816:	call   405443 <flatcc_builder_clear@@Base+0x99>
  40681b:	mov    rax,QWORD PTR [rbp-0x18]
  40681f:	movzx  eax,WORD PTR [rax+0xe8]
  406826:	movzx  edi,ax
  406829:	mov    rax,QWORD PTR [rbp-0x18]
  40682d:	movzx  eax,WORD PTR [rax+0xec]
  406834:	movzx  edx,ax
  406837:	mov    rax,QWORD PTR [rbp-0x18]
  40683b:	lea    rsi,[rax+0x110]
  406842:	mov    r8d,DWORD PTR [rbp-0x8]
  406846:	mov    ecx,DWORD PTR [rbp-0x1c]
  406849:	mov    rax,QWORD PTR [rbp-0x18]
  40684d:	mov    r9d,r8d
  406850:	mov    r8d,edi
  406853:	mov    rdi,rax
  406856:	call   406042 <flatcc_builder_create_buffer@@Base>
  40685b:	mov    DWORD PTR [rbp-0x4],eax
  40685e:	cmp    DWORD PTR [rbp-0x4],0x0
  406862:	jne    40686b <flatcc_builder_end_buffer@@Base+0xd9>
  406864:	mov    eax,0x0
  406869:	jmp    4068d0 <flatcc_builder_end_buffer@@Base+0x13e>
  40686b:	mov    rax,QWORD PTR [rbp-0x18]
  40686f:	mov    rax,QWORD PTR [rax+0x30]
  406873:	mov    edx,DWORD PTR [rax+0x14]
  406876:	mov    rax,QWORD PTR [rbp-0x18]
  40687a:	mov    DWORD PTR [rax+0xf8],edx
  406880:	mov    rax,QWORD PTR [rbp-0x18]
  406884:	mov    rax,QWORD PTR [rax+0x30]
  406888:	mov    edx,DWORD PTR [rax+0x1c]
  40688b:	mov    rax,QWORD PTR [rbp-0x18]
  40688f:	mov    DWORD PTR [rax+0x100],edx
  406895:	mov    rax,QWORD PTR [rbp-0x18]
  406899:	mov    rax,QWORD PTR [rax+0x30]
  40689d:	mov    edx,DWORD PTR [rax+0x10]
  4068a0:	mov    rax,QWORD PTR [rbp-0x18]
  4068a4:	mov    DWORD PTR [rax+0x110],edx
  4068aa:	mov    rax,QWORD PTR [rbp-0x18]
  4068ae:	mov    rax,QWORD PTR [rax+0x30]
  4068b2:	movzx  eax,WORD PTR [rax+0x20]
  4068b6:	mov    rdx,QWORD PTR [rbp-0x18]
  4068ba:	mov    WORD PTR [rdx+0x10c],ax
  4068c1:	mov    rax,QWORD PTR [rbp-0x18]
  4068c5:	mov    rdi,rax
  4068c8:	call   40594f <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  4068cd:	mov    eax,DWORD PTR [rbp-0x4]
  4068d0:	leave  
  4068d1:	ret    

00000000004068d2 <flatcc_builder_start_struct@@Base>:
  4068d2:	endbr64 
  4068d6:	push   rbp
  4068d7:	mov    rbp,rsp
  4068da:	sub    rsp,0x20
  4068de:	mov    QWORD PTR [rbp-0x8],rdi
  4068e2:	mov    QWORD PTR [rbp-0x10],rsi
  4068e6:	mov    eax,edx
  4068e8:	mov    WORD PTR [rbp-0x14],ax
  4068ec:	movzx  edx,WORD PTR [rbp-0x14]
  4068f0:	mov    rax,QWORD PTR [rbp-0x8]
  4068f4:	mov    esi,edx
  4068f6:	mov    rdi,rax
  4068f9:	call   405774 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4068fe:	test   eax,eax
  406900:	je     406909 <flatcc_builder_start_struct@@Base+0x37>
  406902:	mov    eax,0x0
  406907:	jmp    40693c <flatcc_builder_start_struct@@Base+0x6a>
  406909:	mov    rax,QWORD PTR [rbp-0x8]
  40690d:	mov    rax,QWORD PTR [rax+0x30]
  406911:	mov    WORD PTR [rax+0xe],0x2
  406917:	mov    rax,QWORD PTR [rbp-0x8]
  40691b:	mov    esi,0xfffffffc
  406920:	mov    rdi,rax
  406923:	call   40494a <flatcc_builder_default_alloc@@Base+0x173>
  406928:	mov    rax,QWORD PTR [rbp-0x10]
  40692c:	mov    edx,eax
  40692e:	mov    rax,QWORD PTR [rbp-0x8]
  406932:	mov    esi,edx
  406934:	mov    rdi,rax
  406937:	call   404a41 <flatcc_builder_default_alloc@@Base+0x26a>
  40693c:	leave  
  40693d:	ret    

000000000040693e <flatcc_builder_struct_edit@@Base>:
  40693e:	endbr64 
  406942:	push   rbp
  406943:	mov    rbp,rsp
  406946:	mov    QWORD PTR [rbp-0x8],rdi
  40694a:	mov    rax,QWORD PTR [rbp-0x8]
  40694e:	mov    rax,QWORD PTR [rax+0x18]
  406952:	pop    rbp
  406953:	ret    

0000000000406954 <flatcc_builder_end_struct@@Base>:
  406954:	endbr64 
  406958:	push   rbp
  406959:	mov    rbp,rsp
  40695c:	sub    rsp,0x20
  406960:	mov    QWORD PTR [rbp-0x18],rdi
  406964:	mov    rax,QWORD PTR [rbp-0x18]
  406968:	mov    rax,QWORD PTR [rax+0x30]
  40696c:	movzx  eax,WORD PTR [rax+0xe]
  406970:	cmp    ax,0x2
  406974:	je     406995 <flatcc_builder_end_struct@@Base+0x41>
  406976:	lea    rcx,[rip+0x5443]        # 40bdc0 <flatcc_builder_padding_base@@Base+0x780>
  40697d:	mov    edx,0x368
  406982:	lea    rsi,[rip+0x4eb7]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406989:	lea    rdi,[rip+0x4fb0]        # 40b940 <flatcc_builder_padding_base@@Base+0x300>
  406990:	call   4031e0 <__assert_fail@plt>
  406995:	mov    rax,QWORD PTR [rbp-0x18]
  406999:	movzx  eax,WORD PTR [rax+0xea]
  4069a0:	movzx  edx,ax
  4069a3:	mov    rax,QWORD PTR [rbp-0x18]
  4069a7:	mov    eax,DWORD PTR [rax+0x20]
  4069aa:	mov    edi,eax
  4069ac:	mov    rax,QWORD PTR [rbp-0x18]
  4069b0:	mov    rsi,QWORD PTR [rax+0x18]
  4069b4:	mov    rax,QWORD PTR [rbp-0x18]
  4069b8:	mov    ecx,edx
  4069ba:	mov    rdx,rdi
  4069bd:	mov    rdi,rax
  4069c0:	call   40647b <flatcc_builder_create_struct@@Base>
  4069c5:	mov    DWORD PTR [rbp-0x4],eax
  4069c8:	cmp    DWORD PTR [rbp-0x4],0x0
  4069cc:	jne    4069d5 <flatcc_builder_end_struct@@Base+0x81>
  4069ce:	mov    eax,0x0
  4069d3:	jmp    4069e4 <flatcc_builder_end_struct@@Base+0x90>
  4069d5:	mov    rax,QWORD PTR [rbp-0x18]
  4069d9:	mov    rdi,rax
  4069dc:	call   40594f <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  4069e1:	mov    eax,DWORD PTR [rbp-0x4]
  4069e4:	leave  
  4069e5:	ret    
  4069e6:	push   rbp
  4069e7:	mov    rbp,rsp
  4069ea:	sub    rsp,0x20
  4069ee:	mov    QWORD PTR [rbp-0x18],rdi
  4069f2:	mov    DWORD PTR [rbp-0x1c],esi
  4069f5:	mov    DWORD PTR [rbp-0x20],edx
  4069f8:	mov    rax,QWORD PTR [rbp-0x18]
  4069fc:	mov    rax,QWORD PTR [rax+0x30]
  406a00:	mov    eax,DWORD PTR [rax+0x14]
  406a03:	mov    DWORD PTR [rbp-0x8],eax
  406a06:	mov    edx,DWORD PTR [rbp-0x8]
  406a09:	mov    eax,DWORD PTR [rbp-0x1c]
  406a0c:	add    eax,edx
  406a0e:	mov    DWORD PTR [rbp-0x4],eax
  406a11:	mov    eax,DWORD PTR [rbp-0x8]
  406a14:	cmp    eax,DWORD PTR [rbp-0x4]
  406a17:	ja     406a21 <flatcc_builder_end_struct@@Base+0xcd>
  406a19:	mov    eax,DWORD PTR [rbp-0x4]
  406a1c:	cmp    eax,DWORD PTR [rbp-0x20]
  406a1f:	jbe    406a57 <flatcc_builder_end_struct@@Base+0x103>
  406a21:	mov    eax,DWORD PTR [rbp-0x8]
  406a24:	cmp    eax,DWORD PTR [rbp-0x4]
  406a27:	ja     406a31 <flatcc_builder_end_struct@@Base+0xdd>
  406a29:	mov    eax,DWORD PTR [rbp-0x4]
  406a2c:	cmp    eax,DWORD PTR [rbp-0x20]
  406a2f:	jbe    406a50 <flatcc_builder_end_struct@@Base+0xfc>
  406a31:	lea    rcx,[rip+0x53a8]        # 40bde0 <flatcc_builder_padding_base@@Base+0x7a0>
  406a38:	mov    edx,0x37c
  406a3d:	lea    rsi,[rip+0x4dfc]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406a44:	lea    rdi,[rip+0x4f21]        # 40b96c <flatcc_builder_padding_base@@Base+0x32c>
  406a4b:	call   4031e0 <__assert_fail@plt>
  406a50:	mov    eax,0xffffffff
  406a55:	jmp    406a6a <flatcc_builder_end_struct@@Base+0x116>
  406a57:	mov    rax,QWORD PTR [rbp-0x18]
  406a5b:	mov    rax,QWORD PTR [rax+0x30]
  406a5f:	mov    edx,DWORD PTR [rbp-0x4]
  406a62:	mov    DWORD PTR [rax+0x14],edx
  406a65:	mov    eax,0x0
  406a6a:	leave  
  406a6b:	ret    

0000000000406a6c <flatcc_builder_extend_vector@@Base>:
  406a6c:	endbr64 
  406a70:	push   rbp
  406a71:	mov    rbp,rsp
  406a74:	sub    rsp,0x10
  406a78:	mov    QWORD PTR [rbp-0x8],rdi
  406a7c:	mov    QWORD PTR [rbp-0x10],rsi
  406a80:	mov    rax,QWORD PTR [rbp-0x8]
  406a84:	mov    rax,QWORD PTR [rax+0x30]
  406a88:	mov    edx,DWORD PTR [rax+0x18]
  406a8b:	mov    rax,QWORD PTR [rbp-0x10]
  406a8f:	mov    ecx,eax
  406a91:	mov    rax,QWORD PTR [rbp-0x8]
  406a95:	mov    esi,ecx
  406a97:	mov    rdi,rax
  406a9a:	call   4069e6 <flatcc_builder_end_struct@@Base+0x92>
  406a9f:	test   eax,eax
  406aa1:	je     406aaa <flatcc_builder_extend_vector@@Base+0x3e>
  406aa3:	mov    eax,0x0
  406aa8:	jmp    406aca <flatcc_builder_extend_vector@@Base+0x5e>
  406aaa:	mov    rax,QWORD PTR [rbp-0x8]
  406aae:	mov    rax,QWORD PTR [rax+0x30]
  406ab2:	mov    eax,DWORD PTR [rax+0x10]
  406ab5:	mov    rdx,QWORD PTR [rbp-0x10]
  406ab9:	imul   edx,eax
  406abc:	mov    rax,QWORD PTR [rbp-0x8]
  406ac0:	mov    esi,edx
  406ac2:	mov    rdi,rax
  406ac5:	call   404a41 <flatcc_builder_default_alloc@@Base+0x26a>
  406aca:	leave  
  406acb:	ret    

0000000000406acc <flatcc_builder_vector_push@@Base>:
  406acc:	endbr64 
  406ad0:	push   rbp
  406ad1:	mov    rbp,rsp
  406ad4:	sub    rsp,0x10
  406ad8:	mov    QWORD PTR [rbp-0x8],rdi
  406adc:	mov    QWORD PTR [rbp-0x10],rsi
  406ae0:	mov    rax,QWORD PTR [rbp-0x8]
  406ae4:	mov    rax,QWORD PTR [rax+0x30]
  406ae8:	movzx  eax,WORD PTR [rax+0xe]
  406aec:	cmp    ax,0x4
  406af0:	je     406b11 <flatcc_builder_vector_push@@Base+0x45>
  406af2:	lea    rcx,[rip+0x5307]        # 40be00 <flatcc_builder_padding_base@@Base+0x7c0>
  406af9:	mov    edx,0x38b
  406afe:	lea    rsi,[rip+0x4d3b]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406b05:	lea    rdi,[rip+0x4e7c]        # 40b988 <flatcc_builder_padding_base@@Base+0x348>
  406b0c:	call   4031e0 <__assert_fail@plt>
  406b11:	mov    rax,QWORD PTR [rbp-0x8]
  406b15:	mov    rax,QWORD PTR [rax+0x30]
  406b19:	mov    edx,DWORD PTR [rax+0x14]
  406b1c:	mov    rax,QWORD PTR [rbp-0x8]
  406b20:	mov    rax,QWORD PTR [rax+0x30]
  406b24:	mov    eax,DWORD PTR [rax+0x18]
  406b27:	cmp    edx,eax
  406b29:	jbe    406b6b <flatcc_builder_vector_push@@Base+0x9f>
  406b2b:	mov    rax,QWORD PTR [rbp-0x8]
  406b2f:	mov    rax,QWORD PTR [rax+0x30]
  406b33:	mov    edx,DWORD PTR [rax+0x14]
  406b36:	mov    rax,QWORD PTR [rbp-0x8]
  406b3a:	mov    rax,QWORD PTR [rax+0x30]
  406b3e:	mov    eax,DWORD PTR [rax+0x18]
  406b41:	cmp    edx,eax
  406b43:	jbe    406b64 <flatcc_builder_vector_push@@Base+0x98>
  406b45:	lea    rcx,[rip+0x52b4]        # 40be00 <flatcc_builder_padding_base@@Base+0x7c0>
  406b4c:	mov    edx,0x38c
  406b51:	lea    rsi,[rip+0x4ce8]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406b58:	lea    rdi,[rip+0x4e59]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x378>
  406b5f:	call   4031e0 <__assert_fail@plt>
  406b64:	mov    eax,0x0
  406b69:	jmp    406ba1 <flatcc_builder_vector_push@@Base+0xd5>
  406b6b:	mov    rax,QWORD PTR [rbp-0x8]
  406b6f:	mov    rax,QWORD PTR [rax+0x30]
  406b73:	mov    edx,DWORD PTR [rax+0x14]
  406b76:	mov    rax,QWORD PTR [rbp-0x8]
  406b7a:	mov    rax,QWORD PTR [rax+0x30]
  406b7e:	inc    edx
  406b80:	mov    DWORD PTR [rax+0x14],edx
  406b83:	mov    rax,QWORD PTR [rbp-0x8]
  406b87:	mov    rax,QWORD PTR [rax+0x30]
  406b8b:	mov    edx,DWORD PTR [rax+0x10]
  406b8e:	mov    rcx,QWORD PTR [rbp-0x10]
  406b92:	mov    rax,QWORD PTR [rbp-0x8]
  406b96:	mov    rsi,rcx
  406b99:	mov    rdi,rax
  406b9c:	call   404b09 <flatcc_builder_default_alloc@@Base+0x332>
  406ba1:	leave  
  406ba2:	ret    

0000000000406ba3 <flatcc_builder_append_vector@@Base>:
  406ba3:	endbr64 
  406ba7:	push   rbp
  406ba8:	mov    rbp,rsp
  406bab:	sub    rsp,0x20
  406baf:	mov    QWORD PTR [rbp-0x8],rdi
  406bb3:	mov    QWORD PTR [rbp-0x10],rsi
  406bb7:	mov    QWORD PTR [rbp-0x18],rdx
  406bbb:	mov    rax,QWORD PTR [rbp-0x8]
  406bbf:	mov    rax,QWORD PTR [rax+0x30]
  406bc3:	movzx  eax,WORD PTR [rax+0xe]
  406bc7:	cmp    ax,0x4
  406bcb:	je     406bec <flatcc_builder_append_vector@@Base+0x49>
  406bcd:	lea    rcx,[rip+0x524c]        # 40be20 <flatcc_builder_padding_base@@Base+0x7e0>
  406bd4:	mov    edx,0x393
  406bd9:	lea    rsi,[rip+0x4c60]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406be0:	lea    rdi,[rip+0x4da1]        # 40b988 <flatcc_builder_padding_base@@Base+0x348>
  406be7:	call   4031e0 <__assert_fail@plt>
  406bec:	mov    rax,QWORD PTR [rbp-0x8]
  406bf0:	mov    rax,QWORD PTR [rax+0x30]
  406bf4:	mov    edx,DWORD PTR [rax+0x18]
  406bf7:	mov    rax,QWORD PTR [rbp-0x18]
  406bfb:	mov    ecx,eax
  406bfd:	mov    rax,QWORD PTR [rbp-0x8]
  406c01:	mov    esi,ecx
  406c03:	mov    rdi,rax
  406c06:	call   4069e6 <flatcc_builder_end_struct@@Base+0x92>
  406c0b:	test   eax,eax
  406c0d:	je     406c16 <flatcc_builder_append_vector@@Base+0x73>
  406c0f:	mov    eax,0x0
  406c14:	jmp    406c3b <flatcc_builder_append_vector@@Base+0x98>
  406c16:	mov    rax,QWORD PTR [rbp-0x8]
  406c1a:	mov    rax,QWORD PTR [rax+0x30]
  406c1e:	mov    eax,DWORD PTR [rax+0x10]
  406c21:	mov    rdx,QWORD PTR [rbp-0x18]
  406c25:	imul   edx,eax
  406c28:	mov    rcx,QWORD PTR [rbp-0x10]
  406c2c:	mov    rax,QWORD PTR [rbp-0x8]
  406c30:	mov    rsi,rcx
  406c33:	mov    rdi,rax
  406c36:	call   404b09 <flatcc_builder_default_alloc@@Base+0x332>
  406c3b:	leave  
  406c3c:	ret    

0000000000406c3d <flatcc_builder_extend_offset_vector@@Base>:
  406c3d:	endbr64 
  406c41:	push   rbp
  406c42:	mov    rbp,rsp
  406c45:	sub    rsp,0x10
  406c49:	mov    QWORD PTR [rbp-0x8],rdi
  406c4d:	mov    QWORD PTR [rbp-0x10],rsi
  406c51:	mov    rax,QWORD PTR [rbp-0x10]
  406c55:	mov    ecx,eax
  406c57:	mov    rax,QWORD PTR [rbp-0x8]
  406c5b:	mov    edx,0x3fffffff
  406c60:	mov    esi,ecx
  406c62:	mov    rdi,rax
  406c65:	call   4069e6 <flatcc_builder_end_struct@@Base+0x92>
  406c6a:	test   eax,eax
  406c6c:	je     406c75 <flatcc_builder_extend_offset_vector@@Base+0x38>
  406c6e:	mov    eax,0x0
  406c73:	jmp    406c8e <flatcc_builder_extend_offset_vector@@Base+0x51>
  406c75:	mov    rax,QWORD PTR [rbp-0x10]
  406c79:	lea    edx,[rax*4+0x0]
  406c80:	mov    rax,QWORD PTR [rbp-0x8]
  406c84:	mov    esi,edx
  406c86:	mov    rdi,rax
  406c89:	call   404a41 <flatcc_builder_default_alloc@@Base+0x26a>
  406c8e:	leave  
  406c8f:	ret    

0000000000406c90 <flatcc_builder_offset_vector_push@@Base>:
  406c90:	endbr64 
  406c94:	push   rbp
  406c95:	mov    rbp,rsp
  406c98:	sub    rsp,0x20
  406c9c:	mov    QWORD PTR [rbp-0x18],rdi
  406ca0:	mov    DWORD PTR [rbp-0x1c],esi
  406ca3:	mov    rax,QWORD PTR [rbp-0x18]
  406ca7:	mov    rax,QWORD PTR [rax+0x30]
  406cab:	movzx  eax,WORD PTR [rax+0xe]
  406caf:	cmp    ax,0x5
  406cb3:	je     406cd4 <flatcc_builder_offset_vector_push@@Base+0x44>
  406cb5:	lea    rcx,[rip+0x5184]        # 40be40 <flatcc_builder_padding_base@@Base+0x800>
  406cbc:	mov    edx,0x3a6
  406cc1:	lea    rsi,[rip+0x4b78]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406cc8:	lea    rdi,[rip+0x4d29]        # 40b9f8 <flatcc_builder_padding_base@@Base+0x3b8>
  406ccf:	call   4031e0 <__assert_fail@plt>
  406cd4:	mov    rax,QWORD PTR [rbp-0x18]
  406cd8:	mov    rax,QWORD PTR [rax+0x30]
  406cdc:	mov    eax,DWORD PTR [rax+0x14]
  406cdf:	cmp    eax,0x3fffffff
  406ce4:	jne    406ced <flatcc_builder_offset_vector_push@@Base+0x5d>
  406ce6:	mov    eax,0x0
  406ceb:	jmp    406d35 <flatcc_builder_offset_vector_push@@Base+0xa5>
  406ced:	mov    rax,QWORD PTR [rbp-0x18]
  406cf1:	mov    rax,QWORD PTR [rax+0x30]
  406cf5:	mov    edx,DWORD PTR [rax+0x14]
  406cf8:	mov    rax,QWORD PTR [rbp-0x18]
  406cfc:	mov    rax,QWORD PTR [rax+0x30]
  406d00:	inc    edx
  406d02:	mov    DWORD PTR [rax+0x14],edx
  406d05:	mov    rax,QWORD PTR [rbp-0x18]
  406d09:	mov    esi,0x4
  406d0e:	mov    rdi,rax
  406d11:	call   404a41 <flatcc_builder_default_alloc@@Base+0x26a>
  406d16:	mov    QWORD PTR [rbp-0x8],rax
  406d1a:	cmp    QWORD PTR [rbp-0x8],0x0
  406d1f:	jne    406d28 <flatcc_builder_offset_vector_push@@Base+0x98>
  406d21:	mov    eax,0x0
  406d26:	jmp    406d35 <flatcc_builder_offset_vector_push@@Base+0xa5>
  406d28:	mov    rax,QWORD PTR [rbp-0x8]
  406d2c:	mov    edx,DWORD PTR [rbp-0x1c]
  406d2f:	mov    DWORD PTR [rax],edx
  406d31:	mov    rax,QWORD PTR [rbp-0x8]
  406d35:	leave  
  406d36:	ret    

0000000000406d37 <flatcc_builder_append_offset_vector@@Base>:
  406d37:	endbr64 
  406d3b:	push   rbp
  406d3c:	mov    rbp,rsp
  406d3f:	sub    rsp,0x20
  406d43:	mov    QWORD PTR [rbp-0x8],rdi
  406d47:	mov    QWORD PTR [rbp-0x10],rsi
  406d4b:	mov    QWORD PTR [rbp-0x18],rdx
  406d4f:	mov    rax,QWORD PTR [rbp-0x8]
  406d53:	mov    rax,QWORD PTR [rax+0x30]
  406d57:	movzx  eax,WORD PTR [rax+0xe]
  406d5b:	cmp    ax,0x5
  406d5f:	je     406d80 <flatcc_builder_append_offset_vector@@Base+0x49>
  406d61:	lea    rcx,[rip+0x5118]        # 40be80 <flatcc_builder_padding_base@@Base+0x840>
  406d68:	mov    edx,0x3b4
  406d6d:	lea    rsi,[rip+0x4acc]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406d74:	lea    rdi,[rip+0x4c7d]        # 40b9f8 <flatcc_builder_padding_base@@Base+0x3b8>
  406d7b:	call   4031e0 <__assert_fail@plt>
  406d80:	mov    rax,QWORD PTR [rbp-0x18]
  406d84:	mov    ecx,eax
  406d86:	mov    rax,QWORD PTR [rbp-0x8]
  406d8a:	mov    edx,0x3fffffff
  406d8f:	mov    esi,ecx
  406d91:	mov    rdi,rax
  406d94:	call   4069e6 <flatcc_builder_end_struct@@Base+0x92>
  406d99:	test   eax,eax
  406d9b:	je     406da4 <flatcc_builder_append_offset_vector@@Base+0x6d>
  406d9d:	mov    eax,0x0
  406da2:	jmp    406dc2 <flatcc_builder_append_offset_vector@@Base+0x8b>
  406da4:	mov    rax,QWORD PTR [rbp-0x18]
  406da8:	lea    edx,[rax*4+0x0]
  406daf:	mov    rcx,QWORD PTR [rbp-0x10]
  406db3:	mov    rax,QWORD PTR [rbp-0x8]
  406db7:	mov    rsi,rcx
  406dba:	mov    rdi,rax
  406dbd:	call   404b09 <flatcc_builder_default_alloc@@Base+0x332>
  406dc2:	leave  
  406dc3:	ret    

0000000000406dc4 <flatcc_builder_extend_string@@Base>:
  406dc4:	endbr64 
  406dc8:	push   rbp
  406dc9:	mov    rbp,rsp
  406dcc:	sub    rsp,0x10
  406dd0:	mov    QWORD PTR [rbp-0x8],rdi
  406dd4:	mov    QWORD PTR [rbp-0x10],rsi
  406dd8:	mov    rax,QWORD PTR [rbp-0x8]
  406ddc:	mov    rax,QWORD PTR [rax+0x30]
  406de0:	movzx  eax,WORD PTR [rax+0xe]
  406de4:	cmp    ax,0x6
  406de8:	je     406e09 <flatcc_builder_extend_string@@Base+0x45>
  406dea:	lea    rcx,[rip+0x50bf]        # 40beb0 <flatcc_builder_padding_base@@Base+0x870>
  406df1:	mov    edx,0x3bd
  406df6:	lea    rsi,[rip+0x4a43]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406dfd:	lea    rdi,[rip+0x4c2c]        # 40ba30 <flatcc_builder_padding_base@@Base+0x3f0>
  406e04:	call   4031e0 <__assert_fail@plt>
  406e09:	mov    rax,QWORD PTR [rbp-0x10]
  406e0d:	mov    ecx,eax
  406e0f:	mov    rax,QWORD PTR [rbp-0x8]
  406e13:	mov    edx,0xffffffff
  406e18:	mov    esi,ecx
  406e1a:	mov    rdi,rax
  406e1d:	call   4069e6 <flatcc_builder_end_struct@@Base+0x92>
  406e22:	test   eax,eax
  406e24:	je     406e2d <flatcc_builder_extend_string@@Base+0x69>
  406e26:	mov    eax,0x0
  406e2b:	jmp    406e41 <flatcc_builder_extend_string@@Base+0x7d>
  406e2d:	mov    rax,QWORD PTR [rbp-0x10]
  406e31:	mov    edx,eax
  406e33:	mov    rax,QWORD PTR [rbp-0x8]
  406e37:	mov    esi,edx
  406e39:	mov    rdi,rax
  406e3c:	call   404a41 <flatcc_builder_default_alloc@@Base+0x26a>
  406e41:	leave  
  406e42:	ret    

0000000000406e43 <flatcc_builder_append_string@@Base>:
  406e43:	endbr64 
  406e47:	push   rbp
  406e48:	mov    rbp,rsp
  406e4b:	sub    rsp,0x20
  406e4f:	mov    QWORD PTR [rbp-0x8],rdi
  406e53:	mov    QWORD PTR [rbp-0x10],rsi
  406e57:	mov    QWORD PTR [rbp-0x18],rdx
  406e5b:	mov    rax,QWORD PTR [rbp-0x8]
  406e5f:	mov    rax,QWORD PTR [rax+0x30]
  406e63:	movzx  eax,WORD PTR [rax+0xe]
  406e67:	cmp    ax,0x6
  406e6b:	je     406e8c <flatcc_builder_append_string@@Base+0x49>
  406e6d:	lea    rcx,[rip+0x505c]        # 40bed0 <flatcc_builder_padding_base@@Base+0x890>
  406e74:	mov    edx,0x3c6
  406e79:	lea    rsi,[rip+0x49c0]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406e80:	lea    rdi,[rip+0x4ba9]        # 40ba30 <flatcc_builder_padding_base@@Base+0x3f0>
  406e87:	call   4031e0 <__assert_fail@plt>
  406e8c:	mov    rax,QWORD PTR [rbp-0x18]
  406e90:	mov    ecx,eax
  406e92:	mov    rax,QWORD PTR [rbp-0x8]
  406e96:	mov    edx,0xffffffff
  406e9b:	mov    esi,ecx
  406e9d:	mov    rdi,rax
  406ea0:	call   4069e6 <flatcc_builder_end_struct@@Base+0x92>
  406ea5:	test   eax,eax
  406ea7:	je     406eb0 <flatcc_builder_append_string@@Base+0x6d>
  406ea9:	mov    eax,0x0
  406eae:	jmp    406ec9 <flatcc_builder_append_string@@Base+0x86>
  406eb0:	mov    rax,QWORD PTR [rbp-0x18]
  406eb4:	mov    edx,eax
  406eb6:	mov    rcx,QWORD PTR [rbp-0x10]
  406eba:	mov    rax,QWORD PTR [rbp-0x8]
  406ebe:	mov    rsi,rcx
  406ec1:	mov    rdi,rax
  406ec4:	call   404b09 <flatcc_builder_default_alloc@@Base+0x332>
  406ec9:	leave  
  406eca:	ret    

0000000000406ecb <flatcc_builder_append_string_str@@Base>:
  406ecb:	endbr64 
  406ecf:	push   rbp
  406ed0:	mov    rbp,rsp
  406ed3:	sub    rsp,0x10
  406ed7:	mov    QWORD PTR [rbp-0x8],rdi
  406edb:	mov    QWORD PTR [rbp-0x10],rsi
  406edf:	mov    rax,QWORD PTR [rbp-0x10]
  406ee3:	mov    rdi,rax
  406ee6:	call   4031a0 <strlen@plt>
  406eeb:	mov    rdx,rax
  406eee:	mov    rcx,QWORD PTR [rbp-0x10]
  406ef2:	mov    rax,QWORD PTR [rbp-0x8]
  406ef6:	mov    rsi,rcx
  406ef9:	mov    rdi,rax
  406efc:	call   406e43 <flatcc_builder_append_string@@Base>
  406f01:	leave  
  406f02:	ret    

0000000000406f03 <flatcc_builder_append_string_strn@@Base>:
  406f03:	endbr64 
  406f07:	push   rbp
  406f08:	mov    rbp,rsp
  406f0b:	sub    rsp,0x20
  406f0f:	mov    QWORD PTR [rbp-0x8],rdi
  406f13:	mov    QWORD PTR [rbp-0x10],rsi
  406f17:	mov    QWORD PTR [rbp-0x18],rdx
  406f1b:	mov    rdx,QWORD PTR [rbp-0x18]
  406f1f:	mov    rax,QWORD PTR [rbp-0x10]
  406f23:	mov    rsi,rdx
  406f26:	mov    rdi,rax
  406f29:	call   404797 <main@@Base+0x492>
  406f2e:	mov    rdx,rax
  406f31:	mov    rcx,QWORD PTR [rbp-0x10]
  406f35:	mov    rax,QWORD PTR [rbp-0x8]
  406f39:	mov    rsi,rcx
  406f3c:	mov    rdi,rax
  406f3f:	call   406e43 <flatcc_builder_append_string@@Base>
  406f44:	leave  
  406f45:	ret    

0000000000406f46 <flatcc_builder_truncate_vector@@Base>:
  406f46:	endbr64 
  406f4a:	push   rbp
  406f4b:	mov    rbp,rsp
  406f4e:	sub    rsp,0x10
  406f52:	mov    QWORD PTR [rbp-0x8],rdi
  406f56:	mov    QWORD PTR [rbp-0x10],rsi
  406f5a:	mov    rax,QWORD PTR [rbp-0x8]
  406f5e:	mov    rax,QWORD PTR [rax+0x30]
  406f62:	movzx  eax,WORD PTR [rax+0xe]
  406f66:	cmp    ax,0x4
  406f6a:	je     406f8b <flatcc_builder_truncate_vector@@Base+0x45>
  406f6c:	lea    rcx,[rip+0x4f7d]        # 40bef0 <flatcc_builder_padding_base@@Base+0x8b0>
  406f73:	mov    edx,0x3d9
  406f78:	lea    rsi,[rip+0x48c1]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406f7f:	lea    rdi,[rip+0x4a02]        # 40b988 <flatcc_builder_padding_base@@Base+0x348>
  406f86:	call   4031e0 <__assert_fail@plt>
  406f8b:	mov    rax,QWORD PTR [rbp-0x8]
  406f8f:	mov    rax,QWORD PTR [rax+0x30]
  406f93:	mov    eax,DWORD PTR [rax+0x14]
  406f96:	mov    eax,eax
  406f98:	cmp    QWORD PTR [rbp-0x10],rax
  406f9c:	jbe    406fd7 <flatcc_builder_truncate_vector@@Base+0x91>
  406f9e:	mov    rax,QWORD PTR [rbp-0x8]
  406fa2:	mov    rax,QWORD PTR [rax+0x30]
  406fa6:	mov    eax,DWORD PTR [rax+0x14]
  406fa9:	mov    eax,eax
  406fab:	cmp    QWORD PTR [rbp-0x10],rax
  406faf:	jbe    406fd0 <flatcc_builder_truncate_vector@@Base+0x8a>
  406fb1:	lea    rcx,[rip+0x4f38]        # 40bef0 <flatcc_builder_padding_base@@Base+0x8b0>
  406fb8:	mov    edx,0x3da
  406fbd:	lea    rsi,[rip+0x487c]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  406fc4:	lea    rdi,[rip+0x4a95]        # 40ba60 <flatcc_builder_padding_base@@Base+0x420>
  406fcb:	call   4031e0 <__assert_fail@plt>
  406fd0:	mov    eax,0xffffffff
  406fd5:	jmp    40701a <flatcc_builder_truncate_vector@@Base+0xd4>
  406fd7:	mov    rax,QWORD PTR [rbp-0x8]
  406fdb:	mov    rax,QWORD PTR [rax+0x30]
  406fdf:	mov    edx,DWORD PTR [rax+0x14]
  406fe2:	mov    rax,QWORD PTR [rbp-0x10]
  406fe6:	mov    ecx,eax
  406fe8:	mov    rax,QWORD PTR [rbp-0x8]
  406fec:	mov    rax,QWORD PTR [rax+0x30]
  406ff0:	sub    edx,ecx
  406ff2:	mov    DWORD PTR [rax+0x14],edx
  406ff5:	mov    rax,QWORD PTR [rbp-0x8]
  406ff9:	mov    rax,QWORD PTR [rax+0x30]
  406ffd:	mov    eax,DWORD PTR [rax+0x10]
  407000:	mov    rdx,QWORD PTR [rbp-0x10]
  407004:	imul   edx,eax
  407007:	mov    rax,QWORD PTR [rbp-0x8]
  40700b:	mov    esi,edx
  40700d:	mov    rdi,rax
  407010:	call   404abd <flatcc_builder_default_alloc@@Base+0x2e6>
  407015:	mov    eax,0x0
  40701a:	leave  
  40701b:	ret    

000000000040701c <flatcc_builder_truncate_offset_vector@@Base>:
  40701c:	endbr64 
  407020:	push   rbp
  407021:	mov    rbp,rsp
  407024:	sub    rsp,0x10
  407028:	mov    QWORD PTR [rbp-0x8],rdi
  40702c:	mov    QWORD PTR [rbp-0x10],rsi
  407030:	mov    rax,QWORD PTR [rbp-0x8]
  407034:	mov    rax,QWORD PTR [rax+0x30]
  407038:	movzx  eax,WORD PTR [rax+0xe]
  40703c:	cmp    ax,0x5
  407040:	je     407061 <flatcc_builder_truncate_offset_vector@@Base+0x45>
  407042:	lea    rcx,[rip+0x4ed7]        # 40bf20 <flatcc_builder_padding_base@@Base+0x8e0>
  407049:	mov    edx,0x3e2
  40704e:	lea    rsi,[rip+0x47eb]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  407055:	lea    rdi,[rip+0x499c]        # 40b9f8 <flatcc_builder_padding_base@@Base+0x3b8>
  40705c:	call   4031e0 <__assert_fail@plt>
  407061:	mov    rax,QWORD PTR [rbp-0x8]
  407065:	mov    rax,QWORD PTR [rax+0x30]
  407069:	mov    eax,DWORD PTR [rax+0x14]
  40706c:	mov    rdx,QWORD PTR [rbp-0x10]
  407070:	cmp    eax,edx
  407072:	jae    4070ad <flatcc_builder_truncate_offset_vector@@Base+0x91>
  407074:	mov    rax,QWORD PTR [rbp-0x8]
  407078:	mov    rax,QWORD PTR [rax+0x30]
  40707c:	mov    eax,DWORD PTR [rax+0x14]
  40707f:	mov    rdx,QWORD PTR [rbp-0x10]
  407083:	cmp    eax,edx
  407085:	jae    4070a6 <flatcc_builder_truncate_offset_vector@@Base+0x8a>
  407087:	lea    rcx,[rip+0x4e92]        # 40bf20 <flatcc_builder_padding_base@@Base+0x8e0>
  40708e:	mov    edx,0x3e3
  407093:	lea    rsi,[rip+0x47a6]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  40709a:	lea    rdi,[rip+0x49e7]        # 40ba88 <flatcc_builder_padding_base@@Base+0x448>
  4070a1:	call   4031e0 <__assert_fail@plt>
  4070a6:	mov    eax,0xffffffff
  4070ab:	jmp    4070f0 <flatcc_builder_truncate_offset_vector@@Base+0xd4>
  4070ad:	mov    rax,QWORD PTR [rbp-0x8]
  4070b1:	mov    rax,QWORD PTR [rax+0x30]
  4070b5:	mov    edx,DWORD PTR [rax+0x14]
  4070b8:	mov    rax,QWORD PTR [rbp-0x10]
  4070bc:	mov    ecx,eax
  4070be:	mov    rax,QWORD PTR [rbp-0x8]
  4070c2:	mov    rax,QWORD PTR [rax+0x30]
  4070c6:	sub    edx,ecx
  4070c8:	mov    DWORD PTR [rax+0x14],edx
  4070cb:	mov    rax,QWORD PTR [rbp-0x8]
  4070cf:	mov    rax,QWORD PTR [rax+0x30]
  4070d3:	mov    eax,DWORD PTR [rax+0x10]
  4070d6:	mov    rdx,QWORD PTR [rbp-0x10]
  4070da:	imul   edx,eax
  4070dd:	mov    rax,QWORD PTR [rbp-0x8]
  4070e1:	mov    esi,edx
  4070e3:	mov    rdi,rax
  4070e6:	call   404abd <flatcc_builder_default_alloc@@Base+0x2e6>
  4070eb:	mov    eax,0x0
  4070f0:	leave  
  4070f1:	ret    

00000000004070f2 <flatcc_builder_truncate_string@@Base>:
  4070f2:	endbr64 
  4070f6:	push   rbp
  4070f7:	mov    rbp,rsp
  4070fa:	sub    rsp,0x10
  4070fe:	mov    QWORD PTR [rbp-0x8],rdi
  407102:	mov    QWORD PTR [rbp-0x10],rsi
  407106:	mov    rax,QWORD PTR [rbp-0x8]
  40710a:	mov    rax,QWORD PTR [rax+0x30]
  40710e:	movzx  eax,WORD PTR [rax+0xe]
  407112:	cmp    ax,0x6
  407116:	je     407137 <flatcc_builder_truncate_string@@Base+0x45>
  407118:	lea    rcx,[rip+0x4e31]        # 40bf50 <flatcc_builder_padding_base@@Base+0x910>
  40711f:	mov    edx,0x3eb
  407124:	lea    rsi,[rip+0x4715]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  40712b:	lea    rdi,[rip+0x48fe]        # 40ba30 <flatcc_builder_padding_base@@Base+0x3f0>
  407132:	call   4031e0 <__assert_fail@plt>
  407137:	mov    rax,QWORD PTR [rbp-0x8]
  40713b:	mov    rax,QWORD PTR [rax+0x30]
  40713f:	mov    eax,DWORD PTR [rax+0x14]
  407142:	mov    eax,eax
  407144:	cmp    QWORD PTR [rbp-0x10],rax
  407148:	jbe    407183 <flatcc_builder_truncate_string@@Base+0x91>
  40714a:	mov    rax,QWORD PTR [rbp-0x8]
  40714e:	mov    rax,QWORD PTR [rax+0x30]
  407152:	mov    eax,DWORD PTR [rax+0x14]
  407155:	mov    eax,eax
  407157:	cmp    QWORD PTR [rbp-0x10],rax
  40715b:	jbe    40717c <flatcc_builder_truncate_string@@Base+0x8a>
  40715d:	lea    rcx,[rip+0x4dec]        # 40bf50 <flatcc_builder_padding_base@@Base+0x910>
  407164:	mov    edx,0x3ec
  407169:	lea    rsi,[rip+0x46d0]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  407170:	lea    rdi,[rip+0x4951]        # 40bac8 <flatcc_builder_padding_base@@Base+0x488>
  407177:	call   4031e0 <__assert_fail@plt>
  40717c:	mov    eax,0xffffffff
  407181:	jmp    4071ba <flatcc_builder_truncate_string@@Base+0xc8>
  407183:	mov    rax,QWORD PTR [rbp-0x8]
  407187:	mov    rax,QWORD PTR [rax+0x30]
  40718b:	mov    edx,DWORD PTR [rax+0x14]
  40718e:	mov    rax,QWORD PTR [rbp-0x10]
  407192:	mov    ecx,eax
  407194:	mov    rax,QWORD PTR [rbp-0x8]
  407198:	mov    rax,QWORD PTR [rax+0x30]
  40719c:	sub    edx,ecx
  40719e:	mov    DWORD PTR [rax+0x14],edx
  4071a1:	mov    rax,QWORD PTR [rbp-0x10]
  4071a5:	mov    edx,eax
  4071a7:	mov    rax,QWORD PTR [rbp-0x8]
  4071ab:	mov    esi,edx
  4071ad:	mov    rdi,rax
  4071b0:	call   404abd <flatcc_builder_default_alloc@@Base+0x2e6>
  4071b5:	mov    eax,0x0
  4071ba:	leave  
  4071bb:	ret    

00000000004071bc <flatcc_builder_start_vector@@Base>:
  4071bc:	endbr64 
  4071c0:	push   rbp
  4071c1:	mov    rbp,rsp
  4071c4:	sub    rsp,0x20
  4071c8:	mov    QWORD PTR [rbp-0x8],rdi
  4071cc:	mov    QWORD PTR [rbp-0x10],rsi
  4071d0:	mov    eax,edx
  4071d2:	mov    QWORD PTR [rbp-0x20],rcx
  4071d6:	mov    WORD PTR [rbp-0x14],ax
  4071da:	lea    rax,[rbp-0x14]
  4071de:	mov    esi,0x4
  4071e3:	mov    rdi,rax
  4071e6:	call   405474 <flatcc_builder_clear@@Base+0xca>
  4071eb:	movzx  eax,WORD PTR [rbp-0x14]
  4071ef:	movzx  edx,ax
  4071f2:	mov    rax,QWORD PTR [rbp-0x8]
  4071f6:	mov    esi,edx
  4071f8:	mov    rdi,rax
  4071fb:	call   405774 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  407200:	test   eax,eax
  407202:	je     40720b <flatcc_builder_start_vector@@Base+0x4f>
  407204:	mov    eax,0xffffffff
  407209:	jmp    40725c <flatcc_builder_start_vector@@Base+0xa0>
  40720b:	mov    rax,QWORD PTR [rbp-0x8]
  40720f:	mov    rax,QWORD PTR [rax+0x30]
  407213:	mov    rdx,QWORD PTR [rbp-0x10]
  407217:	mov    DWORD PTR [rax+0x10],edx
  40721a:	mov    rax,QWORD PTR [rbp-0x8]
  40721e:	mov    rax,QWORD PTR [rax+0x30]
  407222:	mov    DWORD PTR [rax+0x14],0x0
  407229:	mov    rax,QWORD PTR [rbp-0x8]
  40722d:	mov    rax,QWORD PTR [rax+0x30]
  407231:	mov    rdx,QWORD PTR [rbp-0x20]
  407235:	mov    DWORD PTR [rax+0x18],edx
  407238:	mov    rax,QWORD PTR [rbp-0x8]
  40723c:	mov    rax,QWORD PTR [rax+0x30]
  407240:	mov    WORD PTR [rax+0xe],0x4
  407246:	mov    rax,QWORD PTR [rbp-0x8]
  40724a:	mov    esi,0xfffffffc
  40724f:	mov    rdi,rax
  407252:	call   40494a <flatcc_builder_default_alloc@@Base+0x173>
  407257:	mov    eax,0x0
  40725c:	leave  
  40725d:	ret    

000000000040725e <flatcc_builder_start_offset_vector@@Base>:
  40725e:	endbr64 
  407262:	push   rbp
  407263:	mov    rbp,rsp
  407266:	sub    rsp,0x10
  40726a:	mov    QWORD PTR [rbp-0x8],rdi
  40726e:	mov    rax,QWORD PTR [rbp-0x8]
  407272:	mov    esi,0x4
  407277:	mov    rdi,rax
  40727a:	call   405774 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  40727f:	test   eax,eax
  407281:	je     40728a <flatcc_builder_start_offset_vector@@Base+0x2c>
  407283:	mov    eax,0xffffffff
  407288:	jmp    4072cc <flatcc_builder_start_offset_vector@@Base+0x6e>
  40728a:	mov    rax,QWORD PTR [rbp-0x8]
  40728e:	mov    rax,QWORD PTR [rax+0x30]
  407292:	mov    DWORD PTR [rax+0x10],0x4
  407299:	mov    rax,QWORD PTR [rbp-0x8]
  40729d:	mov    rax,QWORD PTR [rax+0x30]
  4072a1:	mov    DWORD PTR [rax+0x14],0x0
  4072a8:	mov    rax,QWORD PTR [rbp-0x8]
  4072ac:	mov    rax,QWORD PTR [rax+0x30]
  4072b0:	mov    WORD PTR [rax+0xe],0x5
  4072b6:	mov    rax,QWORD PTR [rbp-0x8]
  4072ba:	mov    esi,0xfffffffc
  4072bf:	mov    rdi,rax
  4072c2:	call   40494a <flatcc_builder_default_alloc@@Base+0x173>
  4072c7:	mov    eax,0x0
  4072cc:	leave  
  4072cd:	ret    

00000000004072ce <flatcc_builder_create_offset_vector@@Base>:
  4072ce:	endbr64 
  4072d2:	push   rbp
  4072d3:	mov    rbp,rsp
  4072d6:	sub    rsp,0x30
  4072da:	mov    QWORD PTR [rbp-0x18],rdi
  4072de:	mov    QWORD PTR [rbp-0x20],rsi
  4072e2:	mov    QWORD PTR [rbp-0x28],rdx
  4072e6:	mov    rax,QWORD PTR [rbp-0x18]
  4072ea:	mov    rdi,rax
  4072ed:	call   40725e <flatcc_builder_start_offset_vector@@Base>
  4072f2:	test   eax,eax
  4072f4:	je     4072fd <flatcc_builder_create_offset_vector@@Base+0x2f>
  4072f6:	mov    eax,0x0
  4072fb:	jmp    40734d <flatcc_builder_create_offset_vector@@Base+0x7f>
  4072fd:	mov    rdx,QWORD PTR [rbp-0x28]
  407301:	mov    rax,QWORD PTR [rbp-0x18]
  407305:	mov    rsi,rdx
  407308:	mov    rdi,rax
  40730b:	call   406c3d <flatcc_builder_extend_offset_vector@@Base>
  407310:	mov    QWORD PTR [rbp-0x8],rax
  407314:	cmp    QWORD PTR [rbp-0x8],0x0
  407319:	jne    407322 <flatcc_builder_create_offset_vector@@Base+0x54>
  40731b:	mov    eax,0x0
  407320:	jmp    40734d <flatcc_builder_create_offset_vector@@Base+0x7f>
  407322:	mov    rax,QWORD PTR [rbp-0x28]
  407326:	lea    rdx,[rax*4+0x0]
  40732e:	mov    rcx,QWORD PTR [rbp-0x20]
  407332:	mov    rax,QWORD PTR [rbp-0x8]
  407336:	mov    rsi,rcx
  407339:	mov    rdi,rax
  40733c:	call   403230 <memcpy@plt>
  407341:	mov    rax,QWORD PTR [rbp-0x18]
  407345:	mov    rdi,rax
  407348:	call   40885b <flatcc_builder_end_offset_vector@@Base>
  40734d:	leave  
  40734e:	ret    

000000000040734f <flatcc_builder_start_string@@Base>:
  40734f:	endbr64 
  407353:	push   rbp
  407354:	mov    rbp,rsp
  407357:	sub    rsp,0x10
  40735b:	mov    QWORD PTR [rbp-0x8],rdi
  40735f:	mov    rax,QWORD PTR [rbp-0x8]
  407363:	mov    esi,0x1
  407368:	mov    rdi,rax
  40736b:	call   405774 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  407370:	test   eax,eax
  407372:	je     40737b <flatcc_builder_start_string@@Base+0x2c>
  407374:	mov    eax,0xffffffff
  407379:	jmp    4073bd <flatcc_builder_start_string@@Base+0x6e>
  40737b:	mov    rax,QWORD PTR [rbp-0x8]
  40737f:	mov    rax,QWORD PTR [rax+0x30]
  407383:	mov    DWORD PTR [rax+0x10],0x1
  40738a:	mov    rax,QWORD PTR [rbp-0x8]
  40738e:	mov    rax,QWORD PTR [rax+0x30]
  407392:	mov    DWORD PTR [rax+0x14],0x0
  407399:	mov    rax,QWORD PTR [rbp-0x8]
  40739d:	mov    rax,QWORD PTR [rax+0x30]
  4073a1:	mov    WORD PTR [rax+0xe],0x6
  4073a7:	mov    rax,QWORD PTR [rbp-0x8]
  4073ab:	mov    esi,0xfffffffc
  4073b0:	mov    rdi,rax
  4073b3:	call   40494a <flatcc_builder_default_alloc@@Base+0x173>
  4073b8:	mov    eax,0x0
  4073bd:	leave  
  4073be:	ret    

00000000004073bf <flatcc_builder_reserve_table@@Base>:
  4073bf:	endbr64 
  4073c3:	push   rbp
  4073c4:	mov    rbp,rsp
  4073c7:	sub    rsp,0x10
  4073cb:	mov    QWORD PTR [rbp-0x8],rdi
  4073cf:	mov    DWORD PTR [rbp-0xc],esi
  4073d2:	cmp    DWORD PTR [rbp-0xc],0x0
  4073d6:	jns    4073f7 <flatcc_builder_reserve_table@@Base+0x38>
  4073d8:	lea    rcx,[rip+0x4b91]        # 40bf70 <flatcc_builder_padding_base@@Base+0x930>
  4073df:	mov    edx,0x429
  4073e4:	lea    rsi,[rip+0x4455]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4073eb:	lea    rdi,[rip+0x46f8]        # 40baea <flatcc_builder_padding_base@@Base+0x4aa>
  4073f2:	call   4031e0 <__assert_fail@plt>
  4073f7:	mov    edx,DWORD PTR [rbp-0xc]
  4073fa:	mov    rax,QWORD PTR [rbp-0x8]
  4073fe:	mov    esi,edx
  407400:	mov    rdi,rax
  407403:	call   404d9e <flatcc_builder_default_alloc@@Base+0x5c7>
  407408:	leave  
  407409:	ret    

000000000040740a <flatcc_builder_start_table@@Base>:
  40740a:	endbr64 
  40740e:	push   rbp
  40740f:	mov    rbp,rsp
  407412:	sub    rsp,0x10
  407416:	mov    QWORD PTR [rbp-0x8],rdi
  40741a:	mov    DWORD PTR [rbp-0xc],esi
  40741d:	mov    rax,QWORD PTR [rbp-0x8]
  407421:	mov    esi,0x4
  407426:	mov    rdi,rax
  407429:	call   405774 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  40742e:	test   eax,eax
  407430:	je     40743c <flatcc_builder_start_table@@Base+0x32>
  407432:	mov    eax,0xffffffff
  407437:	jmp    407506 <flatcc_builder_start_table@@Base+0xfc>
  40743c:	mov    rax,QWORD PTR [rbp-0x8]
  407440:	mov    rax,QWORD PTR [rax+0x8]
  407444:	mov    rdx,rax
  407447:	mov    rax,QWORD PTR [rbp-0x8]
  40744b:	mov    rax,QWORD PTR [rax+0x58]
  40744f:	sub    rdx,rax
  407452:	mov    rax,QWORD PTR [rbp-0x8]
  407456:	mov    rax,QWORD PTR [rax+0x30]
  40745a:	mov    DWORD PTR [rax+0x10],edx
  40745d:	mov    rax,QWORD PTR [rbp-0x8]
  407461:	mov    rax,QWORD PTR [rax]
  407464:	mov    rdx,rax
  407467:	mov    rax,QWORD PTR [rbp-0x8]
  40746b:	mov    rax,QWORD PTR [rax+0x88]
  407472:	sub    rdx,rax
  407475:	mov    rax,QWORD PTR [rbp-0x8]
  407479:	mov    rax,QWORD PTR [rax+0x30]
  40747d:	mov    DWORD PTR [rax+0x14],edx
  407480:	mov    rax,QWORD PTR [rbp-0x8]
  407484:	mov    rax,QWORD PTR [rax+0x30]
  407488:	mov    rdx,QWORD PTR [rbp-0x8]
  40748c:	mov    edx,DWORD PTR [rdx+0x14]
  40748f:	mov    DWORD PTR [rax+0x18],edx
  407492:	mov    rax,QWORD PTR [rbp-0x8]
  407496:	mov    rdx,QWORD PTR [rax+0x30]
  40749a:	mov    rax,QWORD PTR [rbp-0x8]
  40749e:	movzx  eax,WORD PTR [rax+0x10]
  4074a2:	mov    WORD PTR [rdx+0x1c],ax
  4074a6:	mov    rax,QWORD PTR [rbp-0x8]
  4074aa:	mov    DWORD PTR [rax+0x14],0x0
  4074b1:	mov    rax,QWORD PTR [rbp-0x8]
  4074b5:	mov    DWORD PTR [rax+0x14],0x2f693b52
  4074bc:	mov    rax,QWORD PTR [rbp-0x8]
  4074c0:	mov    WORD PTR [rax+0x10],0x0
  4074c6:	mov    rax,QWORD PTR [rbp-0x8]
  4074ca:	mov    rax,QWORD PTR [rax+0x30]
  4074ce:	mov    WORD PTR [rax+0xe],0x3
  4074d4:	mov    edx,DWORD PTR [rbp-0xc]
  4074d7:	mov    rax,QWORD PTR [rbp-0x8]
  4074db:	mov    esi,edx
  4074dd:	mov    rdi,rax
  4074e0:	call   404d9e <flatcc_builder_default_alloc@@Base+0x5c7>
  4074e5:	test   eax,eax
  4074e7:	je     4074f0 <flatcc_builder_start_table@@Base+0xe6>
  4074e9:	mov    eax,0xffffffff
  4074ee:	jmp    407506 <flatcc_builder_start_table@@Base+0xfc>
  4074f0:	mov    rax,QWORD PTR [rbp-0x8]
  4074f4:	mov    esi,0xfffc
  4074f9:	mov    rdi,rax
  4074fc:	call   40494a <flatcc_builder_default_alloc@@Base+0x173>
  407501:	mov    eax,0x0
  407506:	leave  
  407507:	ret    

0000000000407508 <flatcc_builder_create_vtable@@Base>:
  407508:	endbr64 
  40750c:	push   rbp
  40750d:	mov    rbp,rsp
  407510:	sub    rsp,0xd0
  407517:	mov    QWORD PTR [rbp-0xb8],rdi
  40751e:	mov    QWORD PTR [rbp-0xc0],rsi
  407525:	mov    eax,edx
  407527:	mov    WORD PTR [rbp-0xc4],ax
  40752e:	mov    rax,QWORD PTR fs:0x28
  407537:	mov    QWORD PTR [rbp-0x8],rax
  40753b:	xor    eax,eax
  40753d:	mov    QWORD PTR [rbp-0xa0],0x0
  407548:	mov    DWORD PTR [rbp-0x98],0x0
  407552:	cmp    WORD PTR [rbp-0xc4],0x0
  40755a:	je     4075c3 <flatcc_builder_create_vtable@@Base+0xbb>
  40755c:	mov    rdx,QWORD PTR [rbp-0xa0]
  407563:	movzx  eax,WORD PTR [rbp-0xc4]
  40756a:	add    rax,rdx
  40756d:	mov    QWORD PTR [rbp-0xa0],rax
  407574:	mov    eax,DWORD PTR [rbp-0x98]
  40757a:	cdqe   
  40757c:	shl    rax,0x4
  407580:	add    rax,rbp
  407583:	lea    rdx,[rax-0x90]
  40758a:	mov    rax,QWORD PTR [rbp-0xc0]
  407591:	mov    QWORD PTR [rdx],rax
  407594:	mov    edx,DWORD PTR [rbp-0x98]
  40759a:	movzx  eax,WORD PTR [rbp-0xc4]
  4075a1:	movsxd rdx,edx
  4075a4:	shl    rdx,0x4
  4075a8:	add    rdx,rbp
  4075ab:	sub    rdx,0x88
  4075b2:	mov    QWORD PTR [rdx],rax
  4075b5:	mov    eax,DWORD PTR [rbp-0x98]
  4075bb:	inc    eax
  4075bd:	mov    DWORD PTR [rbp-0x98],eax
  4075c3:	mov    rax,QWORD PTR [rbp-0xb8]
  4075ca:	mov    eax,DWORD PTR [rax+0x100]
  4075d0:	test   eax,eax
  4075d2:	jne    407614 <flatcc_builder_create_vtable@@Base+0x10c>
  4075d4:	mov    rax,QWORD PTR [rbp-0xb8]
  4075db:	mov    eax,DWORD PTR [rax+0x124]
  4075e1:	test   eax,eax
  4075e3:	jne    407614 <flatcc_builder_create_vtable@@Base+0x10c>
  4075e5:	lea    rdx,[rbp-0xa0]
  4075ec:	mov    rax,QWORD PTR [rbp-0xb8]
  4075f3:	mov    rsi,rdx
  4075f6:	mov    rdi,rax
  4075f9:	call   405b3f <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  4075fe:	mov    DWORD PTR [rbp-0xa4],eax
  407604:	cmp    DWORD PTR [rbp-0xa4],0x0
  40760b:	jne    407649 <flatcc_builder_create_vtable@@Base+0x141>
  40760d:	mov    eax,0x0
  407612:	jmp    40764f <flatcc_builder_create_vtable@@Base+0x147>
  407614:	lea    rdx,[rbp-0xa0]
  40761b:	mov    rax,QWORD PTR [rbp-0xb8]
  407622:	mov    rsi,rdx
  407625:	mov    rdi,rax
  407628:	call   405a60 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  40762d:	mov    DWORD PTR [rbp-0xa4],eax
  407633:	cmp    DWORD PTR [rbp-0xa4],0x0
  40763a:	jne    407643 <flatcc_builder_create_vtable@@Base+0x13b>
  40763c:	mov    eax,0x0
  407641:	jmp    40764f <flatcc_builder_create_vtable@@Base+0x147>
  407643:	inc    DWORD PTR [rbp-0xa4]
  407649:	mov    eax,DWORD PTR [rbp-0xa4]
  40764f:	mov    rcx,QWORD PTR [rbp-0x8]
  407653:	xor    rcx,QWORD PTR fs:0x28
  40765c:	je     407663 <flatcc_builder_create_vtable@@Base+0x15b>
  40765e:	call   4031b0 <__stack_chk_fail@plt>
  407663:	leave  
  407664:	ret    

0000000000407665 <flatcc_builder_create_cached_vtable@@Base>:
  407665:	endbr64 
  407669:	push   rbp
  40766a:	mov    rbp,rsp
  40766d:	sub    rsp,0x50
  407671:	mov    QWORD PTR [rbp-0x38],rdi
  407675:	mov    QWORD PTR [rbp-0x40],rsi
  407679:	mov    eax,edx
  40767b:	mov    DWORD PTR [rbp-0x48],ecx
  40767e:	mov    WORD PTR [rbp-0x44],ax
  407682:	mov    edx,DWORD PTR [rbp-0x48]
  407685:	mov    rax,QWORD PTR [rbp-0x38]
  407689:	mov    esi,edx
  40768b:	mov    rdi,rax
  40768e:	call   404fad <flatcc_builder_default_alloc@@Base+0x7d6>
  407693:	mov    QWORD PTR [rbp-0x18],rax
  407697:	cmp    QWORD PTR [rbp-0x18],0x0
  40769c:	jne    4076a8 <flatcc_builder_create_cached_vtable@@Base+0x43>
  40769e:	mov    eax,0x0
  4076a3:	jmp    407949 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  4076a8:	mov    rax,QWORD PTR [rbp-0x18]
  4076ac:	mov    QWORD PTR [rbp-0x20],rax
  4076b0:	mov    rax,QWORD PTR [rbp-0x20]
  4076b4:	mov    eax,DWORD PTR [rax]
  4076b6:	mov    DWORD PTR [rbp-0x2c],eax
  4076b9:	mov    QWORD PTR [rbp-0x28],0x0
  4076c1:	jmp    4077a0 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  4076c6:	mov    rax,QWORD PTR [rbp-0x38]
  4076ca:	mov    rdx,QWORD PTR [rax+0xb8]
  4076d1:	mov    eax,DWORD PTR [rbp-0x2c]
  4076d4:	add    rax,rdx
  4076d7:	mov    QWORD PTR [rbp-0x10],rax
  4076db:	mov    rax,QWORD PTR [rbp-0x38]
  4076df:	mov    rdx,QWORD PTR [rax+0x78]
  4076e3:	mov    rax,QWORD PTR [rbp-0x10]
  4076e7:	mov    eax,DWORD PTR [rax+0x8]
  4076ea:	mov    eax,eax
  4076ec:	add    rax,rdx
  4076ef:	mov    QWORD PTR [rbp-0x8],rax
  4076f3:	mov    rax,QWORD PTR [rbp-0x8]
  4076f7:	movzx  eax,WORD PTR [rax]
  4076fa:	cmp    WORD PTR [rbp-0x44],ax
  4076fe:	jne    40771b <flatcc_builder_create_cached_vtable@@Base+0xb6>
  407700:	movzx  edx,WORD PTR [rbp-0x44]
  407704:	mov    rcx,QWORD PTR [rbp-0x8]
  407708:	mov    rax,QWORD PTR [rbp-0x40]
  40770c:	mov    rsi,rcx
  40770f:	mov    rdi,rax
  407712:	call   403210 <memcmp@plt>
  407717:	test   eax,eax
  407719:	je     407733 <flatcc_builder_create_cached_vtable@@Base+0xce>
  40771b:	mov    rax,QWORD PTR [rbp-0x10]
  40771f:	add    rax,0xc
  407723:	mov    QWORD PTR [rbp-0x20],rax
  407727:	mov    rax,QWORD PTR [rbp-0x10]
  40772b:	mov    eax,DWORD PTR [rax+0xc]
  40772e:	mov    DWORD PTR [rbp-0x2c],eax
  407731:	jmp    4077a0 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  407733:	mov    rax,QWORD PTR [rbp-0x10]
  407737:	mov    edx,DWORD PTR [rax+0x4]
  40773a:	mov    rax,QWORD PTR [rbp-0x38]
  40773e:	mov    eax,DWORD PTR [rax+0x100]
  407744:	cmp    edx,eax
  407746:	je     407768 <flatcc_builder_create_cached_vtable@@Base+0x103>
  407748:	mov    rax,QWORD PTR [rbp-0x10]
  40774c:	mov    QWORD PTR [rbp-0x28],rax
  407750:	mov    rax,QWORD PTR [rbp-0x10]
  407754:	add    rax,0xc
  407758:	mov    QWORD PTR [rbp-0x20],rax
  40775c:	mov    rax,QWORD PTR [rbp-0x10]
  407760:	mov    eax,DWORD PTR [rax+0xc]
  407763:	mov    DWORD PTR [rbp-0x2c],eax
  407766:	jmp    4077a0 <flatcc_builder_create_cached_vtable@@Base+0x13b>
  407768:	mov    rax,QWORD PTR [rbp-0x20]
  40776c:	cmp    rax,QWORD PTR [rbp-0x18]
  407770:	je     407795 <flatcc_builder_create_cached_vtable@@Base+0x130>
  407772:	mov    rax,QWORD PTR [rbp-0x10]
  407776:	mov    edx,DWORD PTR [rax+0xc]
  407779:	mov    rax,QWORD PTR [rbp-0x20]
  40777d:	mov    DWORD PTR [rax],edx
  40777f:	mov    rax,QWORD PTR [rbp-0x18]
  407783:	mov    edx,DWORD PTR [rax]
  407785:	mov    rax,QWORD PTR [rbp-0x10]
  407789:	mov    DWORD PTR [rax+0xc],edx
  40778c:	mov    rax,QWORD PTR [rbp-0x18]
  407790:	mov    edx,DWORD PTR [rbp-0x2c]
  407793:	mov    DWORD PTR [rax],edx
  407795:	mov    rax,QWORD PTR [rbp-0x10]
  407799:	mov    eax,DWORD PTR [rax]
  40779b:	jmp    407949 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  4077a0:	cmp    DWORD PTR [rbp-0x2c],0x0
  4077a4:	jne    4076c6 <flatcc_builder_create_cached_vtable@@Base+0x61>
  4077aa:	mov    rax,QWORD PTR [rbp-0x38]
  4077ae:	mov    eax,DWORD PTR [rax+0xe4]
  4077b4:	mov    edx,eax
  4077b6:	mov    rax,QWORD PTR [rbp-0x38]
  4077ba:	mov    r8d,0x0
  4077c0:	mov    ecx,0x10
  4077c5:	mov    esi,0x6
  4077ca:	mov    rdi,rax
  4077cd:	call   404ced <flatcc_builder_default_alloc@@Base+0x516>
  4077d2:	mov    QWORD PTR [rbp-0x10],rax
  4077d6:	cmp    QWORD PTR [rbp-0x10],0x0
  4077db:	jne    4077e7 <flatcc_builder_create_cached_vtable@@Base+0x182>
  4077dd:	mov    eax,0x0
  4077e2:	jmp    407949 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  4077e7:	mov    rax,QWORD PTR [rbp-0x38]
  4077eb:	mov    eax,DWORD PTR [rax+0xe4]
  4077f1:	mov    DWORD PTR [rbp-0x2c],eax
  4077f4:	mov    rax,QWORD PTR [rbp-0x38]
  4077f8:	mov    eax,DWORD PTR [rax+0xe4]
  4077fe:	lea    edx,[rax+0x10]
  407801:	mov    rax,QWORD PTR [rbp-0x38]
  407805:	mov    DWORD PTR [rax+0xe4],edx
  40780b:	mov    rax,QWORD PTR [rbp-0x38]
  40780f:	mov    edx,DWORD PTR [rax+0x100]
  407815:	mov    rax,QWORD PTR [rbp-0x10]
  407819:	mov    DWORD PTR [rax+0x4],edx
  40781c:	mov    rax,QWORD PTR [rbp-0x18]
  407820:	mov    edx,DWORD PTR [rax]
  407822:	mov    rax,QWORD PTR [rbp-0x10]
  407826:	mov    DWORD PTR [rax+0xc],edx
  407829:	mov    rax,QWORD PTR [rbp-0x18]
  40782d:	mov    edx,DWORD PTR [rbp-0x2c]
  407830:	mov    DWORD PTR [rax],edx
  407832:	movzx  edx,WORD PTR [rbp-0x44]
  407836:	mov    rcx,QWORD PTR [rbp-0x40]
  40783a:	mov    rax,QWORD PTR [rbp-0x38]
  40783e:	mov    rsi,rcx
  407841:	mov    rdi,rax
  407844:	call   407508 <flatcc_builder_create_vtable@@Base>
  407849:	mov    edx,eax
  40784b:	mov    rax,QWORD PTR [rbp-0x10]
  40784f:	mov    DWORD PTR [rax],edx
  407851:	mov    rax,QWORD PTR [rbp-0x10]
  407855:	mov    eax,DWORD PTR [rax]
  407857:	test   eax,eax
  407859:	jne    407865 <flatcc_builder_create_cached_vtable@@Base+0x200>
  40785b:	mov    eax,0x0
  407860:	jmp    407949 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  407865:	cmp    QWORD PTR [rbp-0x28],0x0
  40786a:	je     40787f <flatcc_builder_create_cached_vtable@@Base+0x21a>
  40786c:	mov    rax,QWORD PTR [rbp-0x28]
  407870:	mov    edx,DWORD PTR [rax+0x8]
  407873:	mov    rax,QWORD PTR [rbp-0x10]
  407877:	mov    DWORD PTR [rax+0x8],edx
  40787a:	jmp    407943 <flatcc_builder_create_cached_vtable@@Base+0x2de>
  40787f:	mov    rax,QWORD PTR [rbp-0x38]
  407883:	mov    rax,QWORD PTR [rax+0x118]
  40788a:	test   rax,rax
  40788d:	je     4078c2 <flatcc_builder_create_cached_vtable@@Base+0x25d>
  40788f:	mov    rax,QWORD PTR [rbp-0x38]
  407893:	mov    rdx,QWORD PTR [rax+0x118]
  40789a:	mov    rax,QWORD PTR [rbp-0x38]
  40789e:	mov    ecx,DWORD PTR [rax+0xe0]
  4078a4:	movzx  eax,WORD PTR [rbp-0x44]
  4078a8:	add    eax,ecx
  4078aa:	mov    eax,eax
  4078ac:	cmp    rdx,rax
  4078af:	jae    4078c2 <flatcc_builder_create_cached_vtable@@Base+0x25d>
  4078b1:	mov    rax,QWORD PTR [rbp-0x38]
  4078b5:	mov    rdi,rax
  4078b8:	call   405021 <flatcc_builder_flush_vtable_cache@@Base>
  4078bd:	jmp    407943 <flatcc_builder_create_cached_vtable@@Base+0x2de>
  4078c2:	movzx  edx,WORD PTR [rbp-0x44]
  4078c6:	mov    rax,QWORD PTR [rbp-0x38]
  4078ca:	mov    eax,DWORD PTR [rax+0xe0]
  4078d0:	mov    esi,eax
  4078d2:	mov    rax,QWORD PTR [rbp-0x38]
  4078d6:	mov    r8d,0x0
  4078dc:	mov    rcx,rdx
  4078df:	mov    rdx,rsi
  4078e2:	mov    esi,0x2
  4078e7:	mov    rdi,rax
  4078ea:	call   404ced <flatcc_builder_default_alloc@@Base+0x516>
  4078ef:	mov    QWORD PTR [rbp-0x8],rax
  4078f3:	cmp    QWORD PTR [rbp-0x8],0x0
  4078f8:	jne    407901 <flatcc_builder_create_cached_vtable@@Base+0x29c>
  4078fa:	mov    eax,0xffffffff
  4078ff:	jmp    407949 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  407901:	mov    rax,QWORD PTR [rbp-0x38]
  407905:	mov    edx,DWORD PTR [rax+0xe0]
  40790b:	mov    rax,QWORD PTR [rbp-0x10]
  40790f:	mov    DWORD PTR [rax+0x8],edx
  407912:	mov    rax,QWORD PTR [rbp-0x38]
  407916:	mov    edx,DWORD PTR [rax+0xe0]
  40791c:	movzx  eax,WORD PTR [rbp-0x44]
  407920:	add    edx,eax
  407922:	mov    rax,QWORD PTR [rbp-0x38]
  407926:	mov    DWORD PTR [rax+0xe0],edx
  40792c:	movzx  edx,WORD PTR [rbp-0x44]
  407930:	mov    rcx,QWORD PTR [rbp-0x40]
  407934:	mov    rax,QWORD PTR [rbp-0x8]
  407938:	mov    rsi,rcx
  40793b:	mov    rdi,rax
  40793e:	call   403230 <memcpy@plt>
  407943:	mov    rax,QWORD PTR [rbp-0x10]
  407947:	mov    eax,DWORD PTR [rax]
  407949:	leave  
  40794a:	ret    

000000000040794b <flatcc_builder_create_table@@Base>:
  40794b:	endbr64 
  40794f:	push   rbp
  407950:	mov    rbp,rsp
  407953:	sub    rsp,0x100
  40795a:	mov    QWORD PTR [rbp-0xd8],rdi
  407961:	mov    QWORD PTR [rbp-0xe0],rsi
  407968:	mov    QWORD PTR [rbp-0xe8],rdx
  40796f:	mov    eax,ecx
  407971:	mov    QWORD PTR [rbp-0xf8],r8
  407978:	mov    DWORD PTR [rbp-0xf0],r9d
  40797f:	mov    WORD PTR [rbp-0xec],ax
  407986:	mov    rax,QWORD PTR fs:0x28
  40798f:	mov    QWORD PTR [rbp-0x8],rax
  407993:	xor    eax,eax
  407995:	cmp    DWORD PTR [rbp-0xf0],0x0
  40799c:	jns    4079bd <flatcc_builder_create_table@@Base+0x72>
  40799e:	lea    rcx,[rip+0x45eb]        # 40bf90 <flatcc_builder_padding_base@@Base+0x950>
  4079a5:	mov    edx,0x4d5
  4079aa:	lea    rsi,[rip+0x3e8f]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4079b1:	lea    rdi,[rip+0x413d]        # 40baf5 <flatcc_builder_padding_base@@Base+0x4b5>
  4079b8:	call   4031e0 <__assert_fail@plt>
  4079bd:	mov    eax,DWORD PTR [rbp+0x10]
  4079c0:	and    eax,0x1
  4079c3:	test   eax,eax
  4079c5:	jne    4079e6 <flatcc_builder_create_table@@Base+0x9b>
  4079c7:	lea    rcx,[rip+0x45c2]        # 40bf90 <flatcc_builder_padding_base@@Base+0x950>
  4079ce:	mov    edx,0x4db
  4079d3:	lea    rsi,[rip+0x3e66]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4079da:	lea    rdi,[rip+0x4126]        # 40bb07 <flatcc_builder_padding_base@@Base+0x4c7>
  4079e1:	call   4031e0 <__assert_fail@plt>
  4079e6:	lea    rax,[rbp-0xec]
  4079ed:	mov    esi,0x4
  4079f2:	mov    rdi,rax
  4079f5:	call   405474 <flatcc_builder_clear@@Base+0xca>
  4079fa:	movzx  eax,WORD PTR [rbp-0xec]
  407a01:	movzx  edx,ax
  407a04:	mov    rax,QWORD PTR [rbp-0xd8]
  407a0b:	mov    esi,edx
  407a0d:	mov    rdi,rax
  407a10:	call   405443 <flatcc_builder_clear@@Base+0x99>
  407a15:	movzx  eax,WORD PTR [rbp-0xec]
  407a1c:	movzx  edx,ax
  407a1f:	mov    rax,QWORD PTR [rbp-0xe8]
  407a26:	mov    ecx,eax
  407a28:	mov    rax,QWORD PTR [rbp-0xd8]
  407a2f:	mov    esi,ecx
  407a31:	mov    rdi,rax
  407a34:	call   405a16 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  407a39:	mov    DWORD PTR [rbp-0xbc],eax
  407a3f:	mov    rax,QWORD PTR [rbp-0xd8]
  407a46:	mov    eax,DWORD PTR [rax+0xf0]
  407a4c:	mov    edx,eax
  407a4e:	mov    rax,QWORD PTR [rbp-0xe8]
  407a55:	mov    ecx,eax
  407a57:	mov    eax,DWORD PTR [rbp-0xbc]
  407a5d:	add    eax,ecx
  407a5f:	sub    edx,eax
  407a61:	mov    eax,edx
  407a63:	sub    eax,0x4
  407a66:	mov    DWORD PTR [rbp-0xb8],eax
  407a6c:	mov    eax,DWORD PTR [rbp+0x10]
  407a6f:	dec    eax
  407a71:	mov    DWORD PTR [rbp-0xb4],eax
  407a77:	mov    eax,DWORD PTR [rbp-0xb8]
  407a7d:	sub    eax,DWORD PTR [rbp-0xb4]
  407a83:	mov    DWORD PTR [rbp-0xb0],eax
  407a89:	mov    eax,DWORD PTR [rbp-0xb8]
  407a8f:	sub    eax,DWORD PTR [rbp-0xb0]
  407a95:	cmp    DWORD PTR [rbp-0xb4],eax
  407a9b:	je     407aa7 <flatcc_builder_create_table@@Base+0x15c>
  407a9d:	mov    eax,0xffffffff
  407aa2:	jmp    407cc7 <flatcc_builder_create_table@@Base+0x37c>
  407aa7:	mov    eax,DWORD PTR [rbp-0xb0]
  407aad:	mov    edi,eax
  407aaf:	call   404717 <main@@Base+0x412>
  407ab4:	mov    DWORD PTR [rbp-0xc4],eax
  407aba:	mov    DWORD PTR [rbp-0xc0],0x0
  407ac4:	jmp    407b4e <flatcc_builder_create_table@@Base+0x203>
  407ac9:	mov    eax,DWORD PTR [rbp-0xc0]
  407acf:	cdqe   
  407ad1:	lea    rdx,[rax+rax*1]
  407ad5:	mov    rax,QWORD PTR [rbp-0xf8]
  407adc:	add    rax,rdx
  407adf:	movzx  eax,WORD PTR [rax]
  407ae2:	movzx  edx,ax
  407ae5:	mov    rax,QWORD PTR [rbp-0xe0]
  407aec:	add    rax,rdx
  407aef:	mov    QWORD PTR [rbp-0xa8],rax
  407af6:	mov    rax,QWORD PTR [rbp-0xa8]
  407afd:	mov    eax,DWORD PTR [rax]
  407aff:	sub    eax,DWORD PTR [rbp-0xb8]
  407b05:	mov    edx,eax
  407b07:	mov    eax,DWORD PTR [rbp-0xc0]
  407b0d:	cdqe   
  407b0f:	lea    rcx,[rax+rax*1]
  407b13:	mov    rax,QWORD PTR [rbp-0xf8]
  407b1a:	add    rax,rcx
  407b1d:	movzx  eax,WORD PTR [rax]
  407b20:	movzx  eax,ax
  407b23:	sub    edx,eax
  407b25:	mov    eax,edx
  407b27:	sub    eax,0x4
  407b2a:	mov    DWORD PTR [rbp-0xac],eax
  407b30:	mov    eax,DWORD PTR [rbp-0xac]
  407b36:	mov    edi,eax
  407b38:	call   404717 <main@@Base+0x412>
  407b3d:	mov    edx,eax
  407b3f:	mov    rax,QWORD PTR [rbp-0xa8]
  407b46:	mov    DWORD PTR [rax],edx
  407b48:	inc    DWORD PTR [rbp-0xc0]
  407b4e:	mov    eax,DWORD PTR [rbp-0xc0]
  407b54:	cmp    eax,DWORD PTR [rbp-0xf0]
  407b5a:	jl     407ac9 <flatcc_builder_create_table@@Base+0x17e>
  407b60:	mov    QWORD PTR [rbp-0xa0],0x0
  407b6b:	mov    DWORD PTR [rbp-0x98],0x0
  407b75:	mov    rax,QWORD PTR [rbp-0xa0]
  407b7c:	add    rax,0x4
  407b80:	mov    QWORD PTR [rbp-0xa0],rax
  407b87:	mov    eax,DWORD PTR [rbp-0x98]
  407b8d:	cdqe   
  407b8f:	shl    rax,0x4
  407b93:	add    rax,rbp
  407b96:	lea    rdx,[rax-0x90]
  407b9d:	lea    rax,[rbp-0xc4]
  407ba4:	mov    QWORD PTR [rdx],rax
  407ba7:	mov    eax,DWORD PTR [rbp-0x98]
  407bad:	cdqe   
  407baf:	shl    rax,0x4
  407bb3:	add    rax,rbp
  407bb6:	sub    rax,0x88
  407bbc:	mov    QWORD PTR [rax],0x4
  407bc3:	mov    eax,DWORD PTR [rbp-0x98]
  407bc9:	inc    eax
  407bcb:	mov    DWORD PTR [rbp-0x98],eax
  407bd1:	cmp    QWORD PTR [rbp-0xe8],0x0
  407bd9:	je     407c41 <flatcc_builder_create_table@@Base+0x2f6>
  407bdb:	mov    rdx,QWORD PTR [rbp-0xa0]
  407be2:	mov    rax,QWORD PTR [rbp-0xe8]
  407be9:	add    rax,rdx
  407bec:	mov    QWORD PTR [rbp-0xa0],rax
  407bf3:	mov    eax,DWORD PTR [rbp-0x98]
  407bf9:	cdqe   
  407bfb:	shl    rax,0x4
  407bff:	add    rax,rbp
  407c02:	lea    rdx,[rax-0x90]
  407c09:	mov    rax,QWORD PTR [rbp-0xe0]
  407c10:	mov    QWORD PTR [rdx],rax
  407c13:	mov    eax,DWORD PTR [rbp-0x98]
  407c19:	cdqe   
  407c1b:	shl    rax,0x4
  407c1f:	add    rax,rbp
  407c22:	lea    rdx,[rax-0x88]
  407c29:	mov    rax,QWORD PTR [rbp-0xe8]
  407c30:	mov    QWORD PTR [rdx],rax
  407c33:	mov    eax,DWORD PTR [rbp-0x98]
  407c39:	inc    eax
  407c3b:	mov    DWORD PTR [rbp-0x98],eax
  407c41:	cmp    DWORD PTR [rbp-0xbc],0x0
  407c48:	je     407cae <flatcc_builder_create_table@@Base+0x363>
  407c4a:	mov    rdx,QWORD PTR [rbp-0xa0]
  407c51:	mov    eax,DWORD PTR [rbp-0xbc]
  407c57:	add    rax,rdx
  407c5a:	mov    QWORD PTR [rbp-0xa0],rax
  407c61:	mov    eax,DWORD PTR [rbp-0x98]
  407c67:	cdqe   
  407c69:	shl    rax,0x4
  407c6d:	add    rax,rbp
  407c70:	sub    rax,0x90
  407c76:	mov    rdx,0x40b640
  407c7d:	mov    QWORD PTR [rax],rdx
  407c80:	mov    edx,DWORD PTR [rbp-0x98]
  407c86:	mov    eax,DWORD PTR [rbp-0xbc]
  407c8c:	movsxd rdx,edx
  407c8f:	shl    rdx,0x4
  407c93:	add    rdx,rbp
  407c96:	sub    rdx,0x88
  407c9d:	mov    QWORD PTR [rdx],rax
  407ca0:	mov    eax,DWORD PTR [rbp-0x98]
  407ca6:	inc    eax
  407ca8:	mov    DWORD PTR [rbp-0x98],eax
  407cae:	lea    rdx,[rbp-0xa0]
  407cb5:	mov    rax,QWORD PTR [rbp-0xd8]
  407cbc:	mov    rsi,rdx
  407cbf:	mov    rdi,rax
  407cc2:	call   405a60 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  407cc7:	mov    rsi,QWORD PTR [rbp-0x8]
  407ccb:	xor    rsi,QWORD PTR fs:0x28
  407cd4:	je     407cdb <flatcc_builder_create_table@@Base+0x390>
  407cd6:	call   4031b0 <__stack_chk_fail@plt>
  407cdb:	leave  
  407cdc:	ret    

0000000000407cdd <flatcc_builder_check_required_field@@Base>:
  407cdd:	endbr64 
  407ce1:	push   rbp
  407ce2:	mov    rbp,rsp
  407ce5:	sub    rsp,0x10
  407ce9:	mov    QWORD PTR [rbp-0x8],rdi
  407ced:	mov    eax,esi
  407cef:	mov    WORD PTR [rbp-0xc],ax
  407cf3:	mov    rax,QWORD PTR [rbp-0x8]
  407cf7:	mov    rax,QWORD PTR [rax+0x30]
  407cfb:	movzx  eax,WORD PTR [rax+0xe]
  407cff:	cmp    ax,0x3
  407d03:	je     407d24 <flatcc_builder_check_required_field@@Base+0x47>
  407d05:	lea    rcx,[rip+0x42b4]        # 40bfc0 <flatcc_builder_padding_base@@Base+0x980>
  407d0c:	mov    edx,0x4f8
  407d11:	lea    rsi,[rip+0x3b28]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  407d18:	lea    rdi,[rip+0x3df9]        # 40bb18 <flatcc_builder_padding_base@@Base+0x4d8>
  407d1f:	call   4031e0 <__assert_fail@plt>
  407d24:	mov    rax,QWORD PTR [rbp-0x8]
  407d28:	movzx  eax,WORD PTR [rax+0x10]
  407d2c:	cmp    WORD PTR [rbp-0xc],ax
  407d30:	jae    407d53 <flatcc_builder_check_required_field@@Base+0x76>
  407d32:	mov    rax,QWORD PTR [rbp-0x8]
  407d36:	mov    rax,QWORD PTR [rax+0x8]
  407d3a:	movzx  edx,WORD PTR [rbp-0xc]
  407d3e:	add    rdx,rdx
  407d41:	add    rax,rdx
  407d44:	movzx  eax,WORD PTR [rax]
  407d47:	test   ax,ax
  407d4a:	je     407d53 <flatcc_builder_check_required_field@@Base+0x76>
  407d4c:	mov    eax,0x1
  407d51:	jmp    407d58 <flatcc_builder_check_required_field@@Base+0x7b>
  407d53:	mov    eax,0x0
  407d58:	leave  
  407d59:	ret    

0000000000407d5a <flatcc_builder_check_union_field@@Base>:
  407d5a:	endbr64 
  407d5e:	push   rbp
  407d5f:	mov    rbp,rsp
  407d62:	sub    rsp,0x10
  407d66:	mov    QWORD PTR [rbp-0x8],rdi
  407d6a:	mov    eax,esi
  407d6c:	mov    WORD PTR [rbp-0xc],ax
  407d70:	mov    rax,QWORD PTR [rbp-0x8]
  407d74:	mov    rax,QWORD PTR [rax+0x30]
  407d78:	movzx  eax,WORD PTR [rax+0xe]
  407d7c:	cmp    ax,0x3
  407d80:	je     407da1 <flatcc_builder_check_union_field@@Base+0x47>
  407d82:	lea    rcx,[rip+0x4277]        # 40c000 <flatcc_builder_padding_base@@Base+0x9c0>
  407d89:	mov    edx,0x4ff
  407d8e:	lea    rsi,[rip+0x3aab]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  407d95:	lea    rdi,[rip+0x3d7c]        # 40bb18 <flatcc_builder_padding_base@@Base+0x4d8>
  407d9c:	call   4031e0 <__assert_fail@plt>
  407da1:	cmp    WORD PTR [rbp-0xc],0x0
  407da6:	je     407db6 <flatcc_builder_check_union_field@@Base+0x5c>
  407da8:	mov    rax,QWORD PTR [rbp-0x8]
  407dac:	movzx  eax,WORD PTR [rax+0x10]
  407db0:	cmp    WORD PTR [rbp-0xc],ax
  407db4:	jb     407dc0 <flatcc_builder_check_union_field@@Base+0x66>
  407db6:	mov    eax,0x0
  407dbb:	jmp    407e6a <flatcc_builder_check_union_field@@Base+0x110>
  407dc0:	mov    rax,QWORD PTR [rbp-0x8]
  407dc4:	mov    rax,QWORD PTR [rax+0x8]
  407dc8:	movzx  edx,WORD PTR [rbp-0xc]
  407dcc:	add    rdx,rdx
  407dcf:	sub    rdx,0x2
  407dd3:	add    rax,rdx
  407dd6:	movzx  eax,WORD PTR [rax]
  407dd9:	test   ax,ax
  407ddc:	jne    407dfe <flatcc_builder_check_union_field@@Base+0xa4>
  407dde:	mov    rax,QWORD PTR [rbp-0x8]
  407de2:	mov    rax,QWORD PTR [rax+0x8]
  407de6:	movzx  edx,WORD PTR [rbp-0xc]
  407dea:	add    rdx,rdx
  407ded:	add    rax,rdx
  407df0:	movzx  eax,WORD PTR [rax]
  407df3:	test   ax,ax
  407df6:	sete   al
  407df9:	movzx  eax,al
  407dfc:	jmp    407e6a <flatcc_builder_check_union_field@@Base+0x110>
  407dfe:	mov    rax,QWORD PTR [rbp-0x8]
  407e02:	mov    rdx,QWORD PTR [rax+0x18]
  407e06:	mov    rax,QWORD PTR [rbp-0x8]
  407e0a:	mov    rax,QWORD PTR [rax+0x8]
  407e0e:	movzx  ecx,WORD PTR [rbp-0xc]
  407e12:	add    rcx,rcx
  407e15:	sub    rcx,0x2
  407e19:	add    rax,rcx
  407e1c:	movzx  eax,WORD PTR [rax]
  407e1f:	movzx  eax,ax
  407e22:	add    rax,rdx
  407e25:	movzx  eax,BYTE PTR [rax]
  407e28:	test   al,al
  407e2a:	je     407e4c <flatcc_builder_check_union_field@@Base+0xf2>
  407e2c:	mov    rax,QWORD PTR [rbp-0x8]
  407e30:	mov    rax,QWORD PTR [rax+0x8]
  407e34:	movzx  edx,WORD PTR [rbp-0xc]
  407e38:	add    rdx,rdx
  407e3b:	add    rax,rdx
  407e3e:	movzx  eax,WORD PTR [rax]
  407e41:	test   ax,ax
  407e44:	setne  al
  407e47:	movzx  eax,al
  407e4a:	jmp    407e6a <flatcc_builder_check_union_field@@Base+0x110>
  407e4c:	mov    rax,QWORD PTR [rbp-0x8]
  407e50:	mov    rax,QWORD PTR [rax+0x8]
  407e54:	movzx  edx,WORD PTR [rbp-0xc]
  407e58:	add    rdx,rdx
  407e5b:	add    rax,rdx
  407e5e:	movzx  eax,WORD PTR [rax]
  407e61:	test   ax,ax
  407e64:	sete   al
  407e67:	movzx  eax,al
  407e6a:	leave  
  407e6b:	ret    

0000000000407e6c <flatcc_builder_check_required@@Base>:
  407e6c:	endbr64 
  407e70:	push   rbp
  407e71:	mov    rbp,rsp
  407e74:	sub    rsp,0x30
  407e78:	mov    QWORD PTR [rbp-0x18],rdi
  407e7c:	mov    QWORD PTR [rbp-0x20],rsi
  407e80:	mov    DWORD PTR [rbp-0x24],edx
  407e83:	mov    rax,QWORD PTR [rbp-0x18]
  407e87:	mov    rax,QWORD PTR [rax+0x30]
  407e8b:	movzx  eax,WORD PTR [rax+0xe]
  407e8f:	cmp    ax,0x3
  407e93:	je     407eb4 <flatcc_builder_check_required@@Base+0x48>
  407e95:	lea    rcx,[rip+0x4194]        # 40c030 <flatcc_builder_padding_base@@Base+0x9f0>
  407e9c:	mov    edx,0x511
  407ea1:	lea    rsi,[rip+0x3998]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  407ea8:	lea    rdi,[rip+0x3c69]        # 40bb18 <flatcc_builder_padding_base@@Base+0x4d8>
  407eaf:	call   4031e0 <__assert_fail@plt>
  407eb4:	mov    rax,QWORD PTR [rbp-0x18]
  407eb8:	movzx  eax,WORD PTR [rax+0x10]
  407ebc:	movzx  eax,ax
  407ebf:	cmp    DWORD PTR [rbp-0x24],eax
  407ec2:	jle    407ecb <flatcc_builder_check_required@@Base+0x5f>
  407ec4:	mov    eax,0x0
  407ec9:	jmp    407f17 <flatcc_builder_check_required@@Base+0xab>
  407ecb:	mov    DWORD PTR [rbp-0x4],0x0
  407ed2:	jmp    407f0a <flatcc_builder_check_required@@Base+0x9e>
  407ed4:	mov    rax,QWORD PTR [rbp-0x18]
  407ed8:	mov    rdx,QWORD PTR [rax+0x8]
  407edc:	mov    eax,DWORD PTR [rbp-0x4]
  407edf:	cdqe   
  407ee1:	lea    rcx,[rax+rax*1]
  407ee5:	mov    rax,QWORD PTR [rbp-0x20]
  407ee9:	add    rax,rcx
  407eec:	movzx  eax,WORD PTR [rax]
  407eef:	movzx  eax,ax
  407ef2:	add    rax,rax
  407ef5:	add    rax,rdx
  407ef8:	movzx  eax,WORD PTR [rax]
  407efb:	test   ax,ax
  407efe:	jne    407f07 <flatcc_builder_check_required@@Base+0x9b>
  407f00:	mov    eax,0x0
  407f05:	jmp    407f17 <flatcc_builder_check_required@@Base+0xab>
  407f07:	inc    DWORD PTR [rbp-0x4]
  407f0a:	mov    eax,DWORD PTR [rbp-0x4]
  407f0d:	cmp    eax,DWORD PTR [rbp-0x24]
  407f10:	jl     407ed4 <flatcc_builder_check_required@@Base+0x68>
  407f12:	mov    eax,0x1
  407f17:	leave  
  407f18:	ret    

0000000000407f19 <flatcc_builder_end_table@@Base>:
  407f19:	endbr64 
  407f1d:	push   rbp
  407f1e:	mov    rbp,rsp
  407f21:	sub    rsp,0x30
  407f25:	mov    QWORD PTR [rbp-0x28],rdi
  407f29:	mov    rax,QWORD PTR [rbp-0x28]
  407f2d:	mov    rax,QWORD PTR [rax+0x30]
  407f31:	movzx  eax,WORD PTR [rax+0xe]
  407f35:	cmp    ax,0x3
  407f39:	je     407f5a <flatcc_builder_end_table@@Base+0x41>
  407f3b:	lea    rcx,[rip+0x410e]        # 40c050 <flatcc_builder_padding_base@@Base+0xa10>
  407f42:	mov    edx,0x525
  407f47:	lea    rsi,[rip+0x38f2]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  407f4e:	lea    rdi,[rip+0x3bc3]        # 40bb18 <flatcc_builder_padding_base@@Base+0x4d8>
  407f55:	call   4031e0 <__assert_fail@plt>
  407f5a:	mov    rax,QWORD PTR [rbp-0x28]
  407f5e:	mov    rax,QWORD PTR [rax+0x8]
  407f62:	sub    rax,0x4
  407f66:	mov    QWORD PTR [rbp-0x10],rax
  407f6a:	mov    rax,QWORD PTR [rbp-0x28]
  407f6e:	movzx  eax,WORD PTR [rax+0x10]
  407f72:	movzx  eax,ax
  407f75:	add    eax,0x2
  407f78:	cdqe   
  407f7a:	add    eax,eax
  407f7c:	mov    WORD PTR [rbp-0x1e],ax
  407f80:	mov    rdx,QWORD PTR [rbp-0x10]
  407f84:	movzx  eax,WORD PTR [rbp-0x1e]
  407f88:	mov    WORD PTR [rdx],ax
  407f8b:	mov    rax,QWORD PTR [rbp-0x28]
  407f8f:	mov    eax,DWORD PTR [rax+0x20]
  407f92:	mov    ecx,eax
  407f94:	mov    rax,QWORD PTR [rbp-0x10]
  407f98:	lea    rdx,[rax+0x2]
  407f9c:	lea    eax,[rcx+0x4]
  407f9f:	mov    WORD PTR [rdx],ax
  407fa2:	mov    rax,QWORD PTR [rbp-0x10]
  407fa6:	movzx  eax,WORD PTR [rax]
  407fa9:	movzx  edx,ax
  407fac:	mov    rax,QWORD PTR [rbp-0x28]
  407fb0:	mov    eax,DWORD PTR [rax+0x14]
  407fb3:	xor    eax,edx
  407fb5:	imul   edx,eax,0x9e3779b1
  407fbb:	mov    rax,QWORD PTR [rbp-0x10]
  407fbf:	add    rax,0x2
  407fc3:	movzx  eax,WORD PTR [rax]
  407fc6:	movzx  eax,ax
  407fc9:	xor    eax,edx
  407fcb:	imul   edx,eax,0x9e3779b1
  407fd1:	mov    rax,QWORD PTR [rbp-0x28]
  407fd5:	mov    DWORD PTR [rax+0x14],edx
  407fd8:	mov    rax,QWORD PTR [rbp-0x28]
  407fdc:	mov    ecx,DWORD PTR [rax+0x14]
  407fdf:	movzx  edx,WORD PTR [rbp-0x1e]
  407fe3:	mov    rsi,QWORD PTR [rbp-0x10]
  407fe7:	mov    rax,QWORD PTR [rbp-0x28]
  407feb:	mov    rdi,rax
  407fee:	call   407665 <flatcc_builder_create_cached_vtable@@Base>
  407ff3:	mov    DWORD PTR [rbp-0x1c],eax
  407ff6:	cmp    DWORD PTR [rbp-0x1c],0x0
  407ffa:	jne    408006 <flatcc_builder_end_table@@Base+0xed>
  407ffc:	mov    eax,0x0
  408001:	jmp    40811d <flatcc_builder_end_table@@Base+0x204>
  408006:	movzx  edx,WORD PTR [rbp-0x1e]
  40800a:	mov    rax,QWORD PTR [rbp-0x10]
  40800e:	mov    esi,0x0
  408013:	mov    rdi,rax
  408016:	call   4031f0 <memset@plt>
  40801b:	mov    rax,QWORD PTR [rbp-0x28]
  40801f:	mov    rdx,QWORD PTR [rax+0x88]
  408026:	mov    rax,QWORD PTR [rbp-0x28]
  40802a:	mov    rax,QWORD PTR [rax+0x30]
  40802e:	mov    eax,DWORD PTR [rax+0x14]
  408031:	mov    eax,eax
  408033:	add    rax,rdx
  408036:	mov    QWORD PTR [rbp-0x8],rax
  40803a:	mov    rax,QWORD PTR [rbp-0x28]
  40803e:	mov    rax,QWORD PTR [rax]
  408041:	sub    rax,QWORD PTR [rbp-0x8]
  408045:	sar    rax,1
  408048:	mov    DWORD PTR [rbp-0x18],eax
  40804b:	mov    rax,QWORD PTR [rbp-0x28]
  40804f:	movzx  eax,WORD PTR [rax+0xea]
  408056:	movzx  edx,ax
  408059:	mov    rax,QWORD PTR [rbp-0x28]
  40805d:	mov    eax,DWORD PTR [rax+0x20]
  408060:	mov    r10d,eax
  408063:	mov    rax,QWORD PTR [rbp-0x28]
  408067:	mov    rsi,QWORD PTR [rax+0x18]
  40806b:	mov    r8d,DWORD PTR [rbp-0x18]
  40806f:	mov    rdi,QWORD PTR [rbp-0x8]
  408073:	mov    rax,QWORD PTR [rbp-0x28]
  408077:	sub    rsp,0x8
  40807b:	mov    ecx,DWORD PTR [rbp-0x1c]
  40807e:	push   rcx
  40807f:	mov    r9d,r8d
  408082:	mov    r8,rdi
  408085:	mov    ecx,edx
  408087:	mov    rdx,r10
  40808a:	mov    rdi,rax
  40808d:	call   40794b <flatcc_builder_create_table@@Base>
  408092:	add    rsp,0x10
  408096:	mov    DWORD PTR [rbp-0x14],eax
  408099:	cmp    DWORD PTR [rbp-0x14],0x0
  40809d:	jne    4080a6 <flatcc_builder_end_table@@Base+0x18d>
  40809f:	mov    eax,0x0
  4080a4:	jmp    40811d <flatcc_builder_end_table@@Base+0x204>
  4080a6:	mov    rax,QWORD PTR [rbp-0x28]
  4080aa:	mov    rax,QWORD PTR [rax+0x30]
  4080ae:	mov    edx,DWORD PTR [rax+0x18]
  4080b1:	mov    rax,QWORD PTR [rbp-0x28]
  4080b5:	mov    DWORD PTR [rax+0x14],edx
  4080b8:	mov    rax,QWORD PTR [rbp-0x28]
  4080bc:	mov    rax,QWORD PTR [rax+0x30]
  4080c0:	movzx  eax,WORD PTR [rax+0x1c]
  4080c4:	mov    rdx,QWORD PTR [rbp-0x28]
  4080c8:	mov    WORD PTR [rdx+0x10],ax
  4080cc:	mov    rax,QWORD PTR [rbp-0x28]
  4080d0:	mov    rdx,QWORD PTR [rax+0x58]
  4080d4:	mov    rax,QWORD PTR [rbp-0x28]
  4080d8:	mov    rax,QWORD PTR [rax+0x30]
  4080dc:	mov    eax,DWORD PTR [rax+0x10]
  4080df:	mov    eax,eax
  4080e1:	add    rdx,rax
  4080e4:	mov    rax,QWORD PTR [rbp-0x28]
  4080e8:	mov    QWORD PTR [rax+0x8],rdx
  4080ec:	mov    rax,QWORD PTR [rbp-0x28]
  4080f0:	mov    rdx,QWORD PTR [rax+0x88]
  4080f7:	mov    rax,QWORD PTR [rbp-0x28]
  4080fb:	mov    rax,QWORD PTR [rax+0x30]
  4080ff:	mov    eax,DWORD PTR [rax+0x14]
  408102:	mov    eax,eax
  408104:	add    rdx,rax
  408107:	mov    rax,QWORD PTR [rbp-0x28]
  40810b:	mov    QWORD PTR [rax],rdx
  40810e:	mov    rax,QWORD PTR [rbp-0x28]
  408112:	mov    rdi,rax
  408115:	call   40594f <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  40811a:	mov    eax,DWORD PTR [rbp-0x14]
  40811d:	leave  
  40811e:	ret    

000000000040811f <flatcc_builder_create_vector@@Base>:
  40811f:	endbr64 
  408123:	push   rbp
  408124:	mov    rbp,rsp
  408127:	sub    rsp,0xe0
  40812e:	mov    QWORD PTR [rbp-0xb8],rdi
  408135:	mov    QWORD PTR [rbp-0xc0],rsi
  40813c:	mov    QWORD PTR [rbp-0xc8],rdx
  408143:	mov    QWORD PTR [rbp-0xd0],rcx
  40814a:	mov    eax,r8d
  40814d:	mov    QWORD PTR [rbp-0xe0],r9
  408154:	mov    WORD PTR [rbp-0xd4],ax
  40815b:	mov    rax,QWORD PTR fs:0x28
  408164:	mov    QWORD PTR [rbp-0x8],rax
  408168:	xor    eax,eax
  40816a:	mov    rax,QWORD PTR [rbp-0xc8]
  408171:	cmp    rax,QWORD PTR [rbp-0xe0]
  408178:	jbe    4081b3 <flatcc_builder_create_vector@@Base+0x94>
  40817a:	mov    rax,QWORD PTR [rbp-0xc8]
  408181:	cmp    rax,QWORD PTR [rbp-0xe0]
  408188:	jbe    4081a9 <flatcc_builder_create_vector@@Base+0x8a>
  40818a:	lea    rcx,[rip+0x3edf]        # 40c070 <flatcc_builder_padding_base@@Base+0xa30>
  408191:	mov    edx,0x555
  408196:	lea    rsi,[rip+0x36a3]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  40819d:	lea    rdi,[rip+0x399f]        # 40bb43 <flatcc_builder_padding_base@@Base+0x503>
  4081a4:	call   4031e0 <__assert_fail@plt>
  4081a9:	mov    eax,0x0
  4081ae:	jmp    40839b <flatcc_builder_create_vector@@Base+0x27c>
  4081b3:	lea    rax,[rbp-0xd4]
  4081ba:	mov    esi,0x4
  4081bf:	mov    rdi,rax
  4081c2:	call   405474 <flatcc_builder_clear@@Base+0xca>
  4081c7:	movzx  eax,WORD PTR [rbp-0xd4]
  4081ce:	movzx  edx,ax
  4081d1:	mov    rax,QWORD PTR [rbp-0xb8]
  4081d8:	mov    esi,edx
  4081da:	mov    rdi,rax
  4081dd:	call   405443 <flatcc_builder_clear@@Base+0x99>
  4081e2:	mov    rax,QWORD PTR [rbp-0xc8]
  4081e9:	mov    edx,eax
  4081eb:	mov    rax,QWORD PTR [rbp-0xd0]
  4081f2:	imul   eax,edx
  4081f5:	mov    DWORD PTR [rbp-0xa8],eax
  4081fb:	mov    rax,QWORD PTR [rbp-0xc8]
  408202:	mov    edi,eax
  408204:	call   404717 <main@@Base+0x412>
  408209:	mov    DWORD PTR [rbp-0xac],eax
  40820f:	movzx  eax,WORD PTR [rbp-0xd4]
  408216:	movzx  edx,ax
  408219:	mov    ecx,DWORD PTR [rbp-0xa8]
  40821f:	mov    rax,QWORD PTR [rbp-0xb8]
  408226:	mov    esi,ecx
  408228:	mov    rdi,rax
  40822b:	call   405a16 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  408230:	mov    DWORD PTR [rbp-0xa4],eax
  408236:	mov    QWORD PTR [rbp-0xa0],0x0
  408241:	mov    DWORD PTR [rbp-0x98],0x0
  40824b:	mov    rax,QWORD PTR [rbp-0xa0]
  408252:	add    rax,0x4
  408256:	mov    QWORD PTR [rbp-0xa0],rax
  40825d:	mov    eax,DWORD PTR [rbp-0x98]
  408263:	cdqe   
  408265:	shl    rax,0x4
  408269:	add    rax,rbp
  40826c:	lea    rdx,[rax-0x90]
  408273:	lea    rax,[rbp-0xac]
  40827a:	mov    QWORD PTR [rdx],rax
  40827d:	mov    eax,DWORD PTR [rbp-0x98]
  408283:	cdqe   
  408285:	shl    rax,0x4
  408289:	add    rax,rbp
  40828c:	sub    rax,0x88
  408292:	mov    QWORD PTR [rax],0x4
  408299:	mov    eax,DWORD PTR [rbp-0x98]
  40829f:	inc    eax
  4082a1:	mov    DWORD PTR [rbp-0x98],eax
  4082a7:	cmp    DWORD PTR [rbp-0xa8],0x0
  4082ae:	je     408315 <flatcc_builder_create_vector@@Base+0x1f6>
  4082b0:	mov    rdx,QWORD PTR [rbp-0xa0]
  4082b7:	mov    eax,DWORD PTR [rbp-0xa8]
  4082bd:	add    rax,rdx
  4082c0:	mov    QWORD PTR [rbp-0xa0],rax
  4082c7:	mov    eax,DWORD PTR [rbp-0x98]
  4082cd:	cdqe   
  4082cf:	shl    rax,0x4
  4082d3:	add    rax,rbp
  4082d6:	lea    rdx,[rax-0x90]
  4082dd:	mov    rax,QWORD PTR [rbp-0xc0]
  4082e4:	mov    QWORD PTR [rdx],rax
  4082e7:	mov    edx,DWORD PTR [rbp-0x98]
  4082ed:	mov    eax,DWORD PTR [rbp-0xa8]
  4082f3:	movsxd rdx,edx
  4082f6:	shl    rdx,0x4
  4082fa:	add    rdx,rbp
  4082fd:	sub    rdx,0x88
  408304:	mov    QWORD PTR [rdx],rax
  408307:	mov    eax,DWORD PTR [rbp-0x98]
  40830d:	inc    eax
  40830f:	mov    DWORD PTR [rbp-0x98],eax
  408315:	cmp    DWORD PTR [rbp-0xa4],0x0
  40831c:	je     408382 <flatcc_builder_create_vector@@Base+0x263>
  40831e:	mov    rdx,QWORD PTR [rbp-0xa0]
  408325:	mov    eax,DWORD PTR [rbp-0xa4]
  40832b:	add    rax,rdx
  40832e:	mov    QWORD PTR [rbp-0xa0],rax
  408335:	mov    eax,DWORD PTR [rbp-0x98]
  40833b:	cdqe   
  40833d:	shl    rax,0x4
  408341:	add    rax,rbp
  408344:	sub    rax,0x90
  40834a:	mov    rdx,0x40b640
  408351:	mov    QWORD PTR [rax],rdx
  408354:	mov    edx,DWORD PTR [rbp-0x98]
  40835a:	mov    eax,DWORD PTR [rbp-0xa4]
  408360:	movsxd rdx,edx
  408363:	shl    rdx,0x4
  408367:	add    rdx,rbp
  40836a:	sub    rdx,0x88
  408371:	mov    QWORD PTR [rdx],rax
  408374:	mov    eax,DWORD PTR [rbp-0x98]
  40837a:	inc    eax
  40837c:	mov    DWORD PTR [rbp-0x98],eax
  408382:	lea    rdx,[rbp-0xa0]
  408389:	mov    rax,QWORD PTR [rbp-0xb8]
  408390:	mov    rsi,rdx
  408393:	mov    rdi,rax
  408396:	call   405a60 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  40839b:	mov    rcx,QWORD PTR [rbp-0x8]
  40839f:	xor    rcx,QWORD PTR fs:0x28
  4083a8:	je     4083af <flatcc_builder_create_vector@@Base+0x290>
  4083aa:	call   4031b0 <__stack_chk_fail@plt>
  4083af:	leave  
  4083b0:	ret    

00000000004083b1 <flatcc_builder_end_vector@@Base>:
  4083b1:	endbr64 
  4083b5:	push   rbp
  4083b6:	mov    rbp,rsp
  4083b9:	sub    rsp,0x20
  4083bd:	mov    QWORD PTR [rbp-0x18],rdi
  4083c1:	mov    rax,QWORD PTR [rbp-0x18]
  4083c5:	mov    rax,QWORD PTR [rax+0x30]
  4083c9:	movzx  eax,WORD PTR [rax+0xe]
  4083cd:	cmp    ax,0x4
  4083d1:	je     4083f2 <flatcc_builder_end_vector@@Base+0x41>
  4083d3:	lea    rcx,[rip+0x3cb6]        # 40c090 <flatcc_builder_padding_base@@Base+0xa50>
  4083da:	mov    edx,0x578
  4083df:	lea    rsi,[rip+0x345a]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4083e6:	lea    rdi,[rip+0x359b]        # 40b988 <flatcc_builder_padding_base@@Base+0x348>
  4083ed:	call   4031e0 <__assert_fail@plt>
  4083f2:	mov    rax,QWORD PTR [rbp-0x18]
  4083f6:	mov    rax,QWORD PTR [rax+0x30]
  4083fa:	mov    eax,DWORD PTR [rax+0x18]
  4083fd:	mov    r8d,eax
  408400:	mov    rax,QWORD PTR [rbp-0x18]
  408404:	movzx  eax,WORD PTR [rax+0xea]
  40840b:	movzx  edx,ax
  40840e:	mov    rax,QWORD PTR [rbp-0x18]
  408412:	mov    rax,QWORD PTR [rax+0x30]
  408416:	mov    eax,DWORD PTR [rax+0x10]
  408419:	mov    ecx,eax
  40841b:	mov    rax,QWORD PTR [rbp-0x18]
  40841f:	mov    rax,QWORD PTR [rax+0x30]
  408423:	mov    eax,DWORD PTR [rax+0x14]
  408426:	mov    edi,eax
  408428:	mov    rax,QWORD PTR [rbp-0x18]
  40842c:	mov    rsi,QWORD PTR [rax+0x18]
  408430:	mov    rax,QWORD PTR [rbp-0x18]
  408434:	mov    r9,r8
  408437:	mov    r8d,edx
  40843a:	mov    rdx,rdi
  40843d:	mov    rdi,rax
  408440:	call   40811f <flatcc_builder_create_vector@@Base>
  408445:	mov    DWORD PTR [rbp-0x4],eax
  408448:	cmp    DWORD PTR [rbp-0x4],0x0
  40844c:	jne    408455 <flatcc_builder_end_vector@@Base+0xa4>
  40844e:	mov    eax,0x0
  408453:	jmp    408464 <flatcc_builder_end_vector@@Base+0xb3>
  408455:	mov    rax,QWORD PTR [rbp-0x18]
  408459:	mov    rdi,rax
  40845c:	call   40594f <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  408461:	mov    eax,DWORD PTR [rbp-0x4]
  408464:	leave  
  408465:	ret    

0000000000408466 <flatcc_builder_vector_count@@Base>:
  408466:	endbr64 
  40846a:	push   rbp
  40846b:	mov    rbp,rsp
  40846e:	mov    QWORD PTR [rbp-0x8],rdi
  408472:	mov    rax,QWORD PTR [rbp-0x8]
  408476:	mov    rax,QWORD PTR [rax+0x30]
  40847a:	mov    eax,DWORD PTR [rax+0x14]
  40847d:	mov    eax,eax
  40847f:	pop    rbp
  408480:	ret    

0000000000408481 <flatcc_builder_vector_edit@@Base>:
  408481:	endbr64 
  408485:	push   rbp
  408486:	mov    rbp,rsp
  408489:	mov    QWORD PTR [rbp-0x8],rdi
  40848d:	mov    rax,QWORD PTR [rbp-0x8]
  408491:	mov    rax,QWORD PTR [rax+0x18]
  408495:	pop    rbp
  408496:	ret    
  408497:	endbr64 
  40849b:	push   rbp
  40849c:	mov    rbp,rsp
  40849f:	sub    rsp,0xe0
  4084a6:	mov    QWORD PTR [rbp-0xc8],rdi
  4084ad:	mov    QWORD PTR [rbp-0xd0],rsi
  4084b4:	mov    QWORD PTR [rbp-0xd8],rdx
  4084bb:	mov    QWORD PTR [rbp-0xe0],rcx
  4084c2:	mov    rax,QWORD PTR fs:0x28
  4084cb:	mov    QWORD PTR [rbp-0x8],rax
  4084cf:	xor    eax,eax
  4084d1:	mov    rax,QWORD PTR [rbp-0xd8]
  4084d8:	cmp    eax,0x3fffffff
  4084dd:	jbe    4084e9 <flatcc_builder_vector_edit@@Base+0x68>
  4084df:	mov    eax,0x0
  4084e4:	jmp    408812 <flatcc_builder_vector_edit@@Base+0x391>
  4084e9:	mov    rax,QWORD PTR [rbp-0xc8]
  4084f0:	mov    esi,0x4
  4084f5:	mov    rdi,rax
  4084f8:	call   405443 <flatcc_builder_clear@@Base+0x99>
  4084fd:	mov    rax,QWORD PTR [rbp-0xd8]
  408504:	shl    eax,0x2
  408507:	mov    DWORD PTR [rbp-0xb0],eax
  40850d:	mov    rax,QWORD PTR [rbp-0xd8]
  408514:	mov    edi,eax
  408516:	call   404717 <main@@Base+0x412>
  40851b:	mov    DWORD PTR [rbp-0xb8],eax
  408521:	mov    ecx,DWORD PTR [rbp-0xb0]
  408527:	mov    rax,QWORD PTR [rbp-0xc8]
  40852e:	mov    edx,0x4
  408533:	mov    esi,ecx
  408535:	mov    rdi,rax
  408538:	call   405a16 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  40853d:	mov    DWORD PTR [rbp-0xac],eax
  408543:	mov    QWORD PTR [rbp-0xa0],0x0
  40854e:	mov    DWORD PTR [rbp-0x98],0x0
  408558:	mov    rax,QWORD PTR [rbp-0xa0]
  40855f:	add    rax,0x4
  408563:	mov    QWORD PTR [rbp-0xa0],rax
  40856a:	mov    eax,DWORD PTR [rbp-0x98]
  408570:	cdqe   
  408572:	shl    rax,0x4
  408576:	add    rax,rbp
  408579:	lea    rdx,[rax-0x90]
  408580:	lea    rax,[rbp-0xb8]
  408587:	mov    QWORD PTR [rdx],rax
  40858a:	mov    eax,DWORD PTR [rbp-0x98]
  408590:	cdqe   
  408592:	shl    rax,0x4
  408596:	add    rax,rbp
  408599:	sub    rax,0x88
  40859f:	mov    QWORD PTR [rax],0x4
  4085a6:	mov    eax,DWORD PTR [rbp-0x98]
  4085ac:	inc    eax
  4085ae:	mov    DWORD PTR [rbp-0x98],eax
  4085b4:	cmp    DWORD PTR [rbp-0xb0],0x0
  4085bb:	je     408622 <flatcc_builder_vector_edit@@Base+0x1a1>
  4085bd:	mov    rdx,QWORD PTR [rbp-0xa0]
  4085c4:	mov    eax,DWORD PTR [rbp-0xb0]
  4085ca:	add    rax,rdx
  4085cd:	mov    QWORD PTR [rbp-0xa0],rax
  4085d4:	mov    eax,DWORD PTR [rbp-0x98]
  4085da:	cdqe   
  4085dc:	shl    rax,0x4
  4085e0:	add    rax,rbp
  4085e3:	lea    rdx,[rax-0x90]
  4085ea:	mov    rax,QWORD PTR [rbp-0xd0]
  4085f1:	mov    QWORD PTR [rdx],rax
  4085f4:	mov    edx,DWORD PTR [rbp-0x98]
  4085fa:	mov    eax,DWORD PTR [rbp-0xb0]
  408600:	movsxd rdx,edx
  408603:	shl    rdx,0x4
  408607:	add    rdx,rbp
  40860a:	sub    rdx,0x88
  408611:	mov    QWORD PTR [rdx],rax
  408614:	mov    eax,DWORD PTR [rbp-0x98]
  40861a:	inc    eax
  40861c:	mov    DWORD PTR [rbp-0x98],eax
  408622:	cmp    DWORD PTR [rbp-0xac],0x0
  408629:	je     40868f <flatcc_builder_vector_edit@@Base+0x20e>
  40862b:	mov    rdx,QWORD PTR [rbp-0xa0]
  408632:	mov    eax,DWORD PTR [rbp-0xac]
  408638:	add    rax,rdx
  40863b:	mov    QWORD PTR [rbp-0xa0],rax
  408642:	mov    eax,DWORD PTR [rbp-0x98]
  408648:	cdqe   
  40864a:	shl    rax,0x4
  40864e:	add    rax,rbp
  408651:	sub    rax,0x90
  408657:	mov    rdx,0x40b640
  40865e:	mov    QWORD PTR [rax],rdx
  408661:	mov    edx,DWORD PTR [rbp-0x98]
  408667:	mov    eax,DWORD PTR [rbp-0xac]
  40866d:	movsxd rdx,edx
  408670:	shl    rdx,0x4
  408674:	add    rdx,rbp
  408677:	sub    rdx,0x88
  40867e:	mov    QWORD PTR [rdx],rax
  408681:	mov    eax,DWORD PTR [rbp-0x98]
  408687:	inc    eax
  408689:	mov    DWORD PTR [rbp-0x98],eax
  40868f:	mov    rax,QWORD PTR [rbp-0xc8]
  408696:	mov    eax,DWORD PTR [rax+0xf0]
  40869c:	mov    edx,eax
  40869e:	mov    rax,QWORD PTR [rbp-0xa0]
  4086a5:	sub    edx,eax
  4086a7:	mov    eax,edx
  4086a9:	mov    DWORD PTR [rbp-0xa8],eax
  4086af:	mov    DWORD PTR [rbp-0xb4],0x0
  4086b9:	jmp    4087e6 <flatcc_builder_vector_edit@@Base+0x365>
  4086be:	mov    eax,DWORD PTR [rbp-0xb4]
  4086c4:	lea    rdx,[rax*4+0x0]
  4086cc:	mov    rax,QWORD PTR [rbp-0xd0]
  4086d3:	add    rax,rdx
  4086d6:	mov    eax,DWORD PTR [rax]
  4086d8:	test   eax,eax
  4086da:	je     408781 <flatcc_builder_vector_edit@@Base+0x300>
  4086e0:	mov    eax,DWORD PTR [rbp-0xb4]
  4086e6:	lea    rdx,[rax*4+0x0]
  4086ee:	mov    rax,QWORD PTR [rbp-0xd0]
  4086f5:	add    rax,rdx
  4086f8:	mov    eax,DWORD PTR [rax]
  4086fa:	sub    eax,DWORD PTR [rbp-0xa8]
  408700:	mov    edx,DWORD PTR [rbp-0xb4]
  408706:	shl    edx,0x2
  408709:	sub    eax,edx
  40870b:	sub    eax,0x4
  40870e:	mov    DWORD PTR [rbp-0xa4],eax
  408714:	mov    eax,DWORD PTR [rbp-0xa4]
  40871a:	mov    edi,eax
  40871c:	call   404717 <main@@Base+0x412>
  408721:	mov    edx,eax
  408723:	mov    eax,DWORD PTR [rbp-0xb4]
  408729:	lea    rcx,[rax*4+0x0]
  408731:	mov    rax,QWORD PTR [rbp-0xd0]
  408738:	add    rax,rcx
  40873b:	mov    DWORD PTR [rax],edx
  40873d:	cmp    QWORD PTR [rbp-0xe0],0x0
  408745:	je     4087e0 <flatcc_builder_vector_edit@@Base+0x35f>
  40874b:	mov    edx,DWORD PTR [rbp-0xb4]
  408751:	mov    rax,QWORD PTR [rbp-0xe0]
  408758:	add    rax,rdx
  40875b:	movzx  eax,BYTE PTR [rax]
  40875e:	test   al,al
  408760:	jne    4087e0 <flatcc_builder_vector_edit@@Base+0x35f>
  408762:	lea    rcx,[rip+0x3947]        # 40c0b0 <flatcc_builder_padding_base@@Base+0xa70>
  408769:	mov    edx,0x5b1
  40876e:	lea    rsi,[rip+0x30cb]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408775:	lea    rdi,[rip+0x33da]        # 40bb56 <flatcc_builder_padding_base@@Base+0x516>
  40877c:	call   4031e0 <__assert_fail@plt>
  408781:	cmp    QWORD PTR [rbp-0xe0],0x0
  408789:	je     4087c1 <flatcc_builder_vector_edit@@Base+0x340>
  40878b:	mov    edx,DWORD PTR [rbp-0xb4]
  408791:	mov    rax,QWORD PTR [rbp-0xe0]
  408798:	add    rax,rdx
  40879b:	movzx  eax,BYTE PTR [rax]
  40879e:	test   al,al
  4087a0:	je     4087e0 <flatcc_builder_vector_edit@@Base+0x35f>
  4087a2:	lea    rcx,[rip+0x3907]        # 40c0b0 <flatcc_builder_padding_base@@Base+0xa70>
  4087a9:	mov    edx,0x5b5
  4087ae:	lea    rsi,[rip+0x308b]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4087b5:	lea    rdi,[rip+0x33a8]        # 40bb64 <flatcc_builder_padding_base@@Base+0x524>
  4087bc:	call   4031e0 <__assert_fail@plt>
  4087c1:	lea    rcx,[rip+0x38e8]        # 40c0b0 <flatcc_builder_padding_base@@Base+0xa70>
  4087c8:	mov    edx,0x5b7
  4087cd:	lea    rsi,[rip+0x306c]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4087d4:	lea    rdi,[rip+0x30c5]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  4087db:	call   4031e0 <__assert_fail@plt>
  4087e0:	inc    DWORD PTR [rbp-0xb4]
  4087e6:	mov    rax,QWORD PTR [rbp-0xd8]
  4087ed:	cmp    DWORD PTR [rbp-0xb4],eax
  4087f3:	jb     4086be <flatcc_builder_vector_edit@@Base+0x23d>
  4087f9:	lea    rdx,[rbp-0xa0]
  408800:	mov    rax,QWORD PTR [rbp-0xc8]
  408807:	mov    rsi,rdx
  40880a:	mov    rdi,rax
  40880d:	call   405a60 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  408812:	mov    rsi,QWORD PTR [rbp-0x8]
  408816:	xor    rsi,QWORD PTR fs:0x28
  40881f:	je     408826 <flatcc_builder_vector_edit@@Base+0x3a5>
  408821:	call   4031b0 <__stack_chk_fail@plt>
  408826:	leave  
  408827:	ret    

0000000000408828 <flatcc_builder_create_offset_vector_direct@@Base>:
  408828:	endbr64 
  40882c:	push   rbp
  40882d:	mov    rbp,rsp
  408830:	sub    rsp,0x20
  408834:	mov    QWORD PTR [rbp-0x8],rdi
  408838:	mov    QWORD PTR [rbp-0x10],rsi
  40883c:	mov    QWORD PTR [rbp-0x18],rdx
  408840:	mov    rdx,QWORD PTR [rbp-0x18]
  408844:	mov    rsi,QWORD PTR [rbp-0x10]
  408848:	mov    rax,QWORD PTR [rbp-0x8]
  40884c:	mov    ecx,0x0
  408851:	mov    rdi,rax
  408854:	call   408497 <flatcc_builder_vector_edit@@Base+0x16>
  408859:	leave  
  40885a:	ret    

000000000040885b <flatcc_builder_end_offset_vector@@Base>:
  40885b:	endbr64 
  40885f:	push   rbp
  408860:	mov    rbp,rsp
  408863:	sub    rsp,0x20
  408867:	mov    QWORD PTR [rbp-0x18],rdi
  40886b:	mov    rax,QWORD PTR [rbp-0x18]
  40886f:	mov    rax,QWORD PTR [rax+0x30]
  408873:	movzx  eax,WORD PTR [rax+0xe]
  408877:	cmp    ax,0x5
  40887b:	je     40889c <flatcc_builder_end_offset_vector@@Base+0x41>
  40887d:	lea    rcx,[rip+0x385c]        # 40c0e0 <flatcc_builder_padding_base@@Base+0xaa0>
  408884:	mov    edx,0x5c8
  408889:	lea    rsi,[rip+0x2fb0]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408890:	lea    rdi,[rip+0x3161]        # 40b9f8 <flatcc_builder_padding_base@@Base+0x3b8>
  408897:	call   4031e0 <__assert_fail@plt>
  40889c:	mov    rax,QWORD PTR [rbp-0x18]
  4088a0:	mov    rax,QWORD PTR [rax+0x30]
  4088a4:	mov    eax,DWORD PTR [rax+0x14]
  4088a7:	mov    edx,eax
  4088a9:	mov    rax,QWORD PTR [rbp-0x18]
  4088ad:	mov    rcx,QWORD PTR [rax+0x18]
  4088b1:	mov    rax,QWORD PTR [rbp-0x18]
  4088b5:	mov    rsi,rcx
  4088b8:	mov    rdi,rax
  4088bb:	call   408828 <flatcc_builder_create_offset_vector_direct@@Base>
  4088c0:	mov    DWORD PTR [rbp-0x4],eax
  4088c3:	cmp    DWORD PTR [rbp-0x4],0x0
  4088c7:	jne    4088d0 <flatcc_builder_end_offset_vector@@Base+0x75>
  4088c9:	mov    eax,0x0
  4088ce:	jmp    4088df <flatcc_builder_end_offset_vector@@Base+0x84>
  4088d0:	mov    rax,QWORD PTR [rbp-0x18]
  4088d4:	mov    rdi,rax
  4088d7:	call   40594f <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  4088dc:	mov    eax,DWORD PTR [rbp-0x4]
  4088df:	leave  
  4088e0:	ret    

00000000004088e1 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  4088e1:	endbr64 
  4088e5:	push   rbp
  4088e6:	mov    rbp,rsp
  4088e9:	sub    rsp,0x20
  4088ed:	mov    QWORD PTR [rbp-0x18],rdi
  4088f1:	mov    QWORD PTR [rbp-0x20],rsi
  4088f5:	mov    rax,QWORD PTR [rbp-0x18]
  4088f9:	mov    rax,QWORD PTR [rax+0x30]
  4088fd:	movzx  eax,WORD PTR [rax+0xe]
  408901:	cmp    ax,0x5
  408905:	je     408926 <flatcc_builder_end_offset_vector_for_unions@@Base+0x45>
  408907:	lea    rcx,[rip+0x3812]        # 40c120 <flatcc_builder_padding_base@@Base+0xae0>
  40890e:	mov    edx,0x5d5
  408913:	lea    rsi,[rip+0x2f26]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  40891a:	lea    rdi,[rip+0x30d7]        # 40b9f8 <flatcc_builder_padding_base@@Base+0x3b8>
  408921:	call   4031e0 <__assert_fail@plt>
  408926:	mov    rax,QWORD PTR [rbp-0x18]
  40892a:	mov    rax,QWORD PTR [rax+0x30]
  40892e:	mov    eax,DWORD PTR [rax+0x14]
  408931:	mov    edi,eax
  408933:	mov    rax,QWORD PTR [rbp-0x18]
  408937:	mov    rsi,QWORD PTR [rax+0x18]
  40893b:	mov    rdx,QWORD PTR [rbp-0x20]
  40893f:	mov    rax,QWORD PTR [rbp-0x18]
  408943:	mov    rcx,rdx
  408946:	mov    rdx,rdi
  408949:	mov    rdi,rax
  40894c:	call   408497 <flatcc_builder_vector_edit@@Base+0x16>
  408951:	mov    DWORD PTR [rbp-0x4],eax
  408954:	cmp    DWORD PTR [rbp-0x4],0x0
  408958:	jne    408961 <flatcc_builder_end_offset_vector_for_unions@@Base+0x80>
  40895a:	mov    eax,0x0
  40895f:	jmp    408970 <flatcc_builder_end_offset_vector_for_unions@@Base+0x8f>
  408961:	mov    rax,QWORD PTR [rbp-0x18]
  408965:	mov    rdi,rax
  408968:	call   40594f <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  40896d:	mov    eax,DWORD PTR [rbp-0x4]
  408970:	leave  
  408971:	ret    

0000000000408972 <flatcc_builder_offset_vector_edit@@Base>:
  408972:	endbr64 
  408976:	push   rbp
  408977:	mov    rbp,rsp
  40897a:	mov    QWORD PTR [rbp-0x8],rdi
  40897e:	mov    rax,QWORD PTR [rbp-0x8]
  408982:	mov    rax,QWORD PTR [rax+0x18]
  408986:	pop    rbp
  408987:	ret    

0000000000408988 <flatcc_builder_offset_vector_count@@Base>:
  408988:	endbr64 
  40898c:	push   rbp
  40898d:	mov    rbp,rsp
  408990:	mov    QWORD PTR [rbp-0x8],rdi
  408994:	mov    rax,QWORD PTR [rbp-0x8]
  408998:	mov    rax,QWORD PTR [rax+0x30]
  40899c:	mov    eax,DWORD PTR [rax+0x14]
  40899f:	mov    eax,eax
  4089a1:	pop    rbp
  4089a2:	ret    

00000000004089a3 <flatcc_builder_table_add_union@@Base>:
  4089a3:	endbr64 
  4089a7:	push   rbp
  4089a8:	mov    rbp,rsp
  4089ab:	sub    rsp,0x30
  4089af:	mov    QWORD PTR [rbp-0x18],rdi
  4089b3:	mov    DWORD PTR [rbp-0x1c],esi
  4089b6:	mov    QWORD PTR [rbp-0x24],rdx
  4089ba:	mov    rax,QWORD PTR [rbp-0x18]
  4089be:	mov    rax,QWORD PTR [rax+0x30]
  4089c2:	movzx  eax,WORD PTR [rax+0xe]
  4089c6:	cmp    ax,0x3
  4089ca:	je     4089eb <flatcc_builder_table_add_union@@Base+0x48>
  4089cc:	lea    rcx,[rip+0x377d]        # 40c150 <flatcc_builder_padding_base@@Base+0xb10>
  4089d3:	mov    edx,0x5ee
  4089d8:	lea    rsi,[rip+0x2e61]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4089df:	lea    rdi,[rip+0x3132]        # 40bb18 <flatcc_builder_padding_base@@Base+0x4d8>
  4089e6:	call   4031e0 <__assert_fail@plt>
  4089eb:	movzx  eax,BYTE PTR [rbp-0x24]
  4089ef:	test   al,al
  4089f1:	jne    408a32 <flatcc_builder_table_add_union@@Base+0x8f>
  4089f3:	mov    eax,DWORD PTR [rbp-0x20]
  4089f6:	test   eax,eax
  4089f8:	je     408a32 <flatcc_builder_table_add_union@@Base+0x8f>
  4089fa:	movzx  eax,BYTE PTR [rbp-0x24]
  4089fe:	test   al,al
  408a00:	jne    408a28 <flatcc_builder_table_add_union@@Base+0x85>
  408a02:	mov    eax,DWORD PTR [rbp-0x20]
  408a05:	test   eax,eax
  408a07:	je     408a28 <flatcc_builder_table_add_union@@Base+0x85>
  408a09:	lea    rcx,[rip+0x3740]        # 40c150 <flatcc_builder_padding_base@@Base+0xb10>
  408a10:	mov    edx,0x5ef
  408a15:	lea    rsi,[rip+0x2e24]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408a1c:	lea    rdi,[rip+0x3155]        # 40bb78 <flatcc_builder_padding_base@@Base+0x538>
  408a23:	call   4031e0 <__assert_fail@plt>
  408a28:	mov    eax,0xffffffff
  408a2d:	jmp    408af8 <flatcc_builder_table_add_union@@Base+0x155>
  408a32:	mov    eax,DWORD PTR [rbp-0x20]
  408a35:	test   eax,eax
  408a37:	je     408a8b <flatcc_builder_table_add_union@@Base+0xe8>
  408a39:	mov    edx,DWORD PTR [rbp-0x1c]
  408a3c:	mov    rax,QWORD PTR [rbp-0x18]
  408a40:	mov    esi,edx
  408a42:	mov    rdi,rax
  408a45:	call   409794 <flatcc_builder_table_add_offset@@Base>
  408a4a:	mov    QWORD PTR [rbp-0x10],rax
  408a4e:	cmp    QWORD PTR [rbp-0x10],0x0
  408a53:	jne    408a82 <flatcc_builder_table_add_union@@Base+0xdf>
  408a55:	cmp    QWORD PTR [rbp-0x10],0x0
  408a5a:	jne    408a7b <flatcc_builder_table_add_union@@Base+0xd8>
  408a5c:	lea    rcx,[rip+0x36ed]        # 40c150 <flatcc_builder_padding_base@@Base+0xb10>
  408a63:	mov    edx,0x5f2
  408a68:	lea    rsi,[rip+0x2dd1]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408a6f:	lea    rdi,[rip+0x3124]        # 40bb9a <flatcc_builder_padding_base@@Base+0x55a>
  408a76:	call   4031e0 <__assert_fail@plt>
  408a7b:	mov    eax,0xffffffff
  408a80:	jmp    408af8 <flatcc_builder_table_add_union@@Base+0x155>
  408a82:	mov    edx,DWORD PTR [rbp-0x20]
  408a85:	mov    rax,QWORD PTR [rbp-0x10]
  408a89:	mov    DWORD PTR [rax],edx
  408a8b:	mov    eax,DWORD PTR [rbp-0x1c]
  408a8e:	lea    esi,[rax-0x1]
  408a91:	mov    rax,QWORD PTR [rbp-0x18]
  408a95:	mov    ecx,0x1
  408a9a:	mov    edx,0x1
  408a9f:	mov    rdi,rax
  408aa2:	call   4095ba <flatcc_builder_table_add@@Base>
  408aa7:	mov    QWORD PTR [rbp-0x8],rax
  408aab:	cmp    QWORD PTR [rbp-0x8],0x0
  408ab0:	jne    408adf <flatcc_builder_table_add_union@@Base+0x13c>
  408ab2:	cmp    QWORD PTR [rbp-0x8],0x0
  408ab7:	jne    408ad8 <flatcc_builder_table_add_union@@Base+0x135>
  408ab9:	lea    rcx,[rip+0x3690]        # 40c150 <flatcc_builder_padding_base@@Base+0xb10>
  408ac0:	mov    edx,0x5f6
  408ac5:	lea    rsi,[rip+0x2d74]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408acc:	lea    rdi,[rip+0x30d1]        # 40bba4 <flatcc_builder_padding_base@@Base+0x564>
  408ad3:	call   4031e0 <__assert_fail@plt>
  408ad8:	mov    eax,0xffffffff
  408add:	jmp    408af8 <flatcc_builder_table_add_union@@Base+0x155>
  408adf:	movzx  eax,BYTE PTR [rbp-0x24]
  408ae3:	movzx  eax,al
  408ae6:	mov    edi,eax
  408ae8:	call   404723 <main@@Base+0x41e>
  408aed:	mov    rdx,QWORD PTR [rbp-0x8]
  408af1:	mov    BYTE PTR [rdx],al
  408af3:	mov    eax,0x0
  408af8:	leave  
  408af9:	ret    

0000000000408afa <flatcc_builder_table_add_union_vector@@Base>:
  408afa:	endbr64 
  408afe:	push   rbp
  408aff:	mov    rbp,rsp
  408b02:	sub    rsp,0x30
  408b06:	mov    QWORD PTR [rbp-0x18],rdi
  408b0a:	mov    DWORD PTR [rbp-0x1c],esi
  408b0d:	mov    QWORD PTR [rbp-0x24],rdx
  408b11:	mov    rax,QWORD PTR [rbp-0x18]
  408b15:	mov    rax,QWORD PTR [rax+0x30]
  408b19:	movzx  eax,WORD PTR [rax+0xe]
  408b1d:	cmp    ax,0x3
  408b21:	je     408b42 <flatcc_builder_table_add_union_vector@@Base+0x48>
  408b23:	lea    rcx,[rip+0x3656]        # 40c180 <flatcc_builder_padding_base@@Base+0xb40>
  408b2a:	mov    edx,0x600
  408b2f:	lea    rsi,[rip+0x2d0a]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408b36:	lea    rdi,[rip+0x2fdb]        # 40bb18 <flatcc_builder_padding_base@@Base+0x4d8>
  408b3d:	call   4031e0 <__assert_fail@plt>
  408b42:	mov    eax,DWORD PTR [rbp-0x24]
  408b45:	test   eax,eax
  408b47:	sete   dl
  408b4a:	mov    eax,DWORD PTR [rbp-0x20]
  408b4d:	test   eax,eax
  408b4f:	sete   al
  408b52:	xor    eax,edx
  408b54:	test   al,al
  408b56:	je     408b97 <flatcc_builder_table_add_union_vector@@Base+0x9d>
  408b58:	mov    eax,DWORD PTR [rbp-0x24]
  408b5b:	test   eax,eax
  408b5d:	setne  dl
  408b60:	mov    eax,DWORD PTR [rbp-0x20]
  408b63:	test   eax,eax
  408b65:	sete   al
  408b68:	xor    eax,edx
  408b6a:	test   al,al
  408b6c:	jne    408b8d <flatcc_builder_table_add_union_vector@@Base+0x93>
  408b6e:	lea    rcx,[rip+0x360b]        # 40c180 <flatcc_builder_padding_base@@Base+0xb40>
  408b75:	mov    edx,0x601
  408b7a:	lea    rsi,[rip+0x2cbf]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408b81:	lea    rdi,[rip+0x3028]        # 40bbb0 <flatcc_builder_padding_base@@Base+0x570>
  408b88:	call   4031e0 <__assert_fail@plt>
  408b8d:	mov    eax,0xffffffff
  408b92:	jmp    408c4e <flatcc_builder_table_add_union_vector@@Base+0x154>
  408b97:	mov    eax,DWORD PTR [rbp-0x24]
  408b9a:	test   eax,eax
  408b9c:	je     408c49 <flatcc_builder_table_add_union_vector@@Base+0x14f>
  408ba2:	mov    eax,DWORD PTR [rbp-0x1c]
  408ba5:	lea    edx,[rax-0x1]
  408ba8:	mov    rax,QWORD PTR [rbp-0x18]
  408bac:	mov    esi,edx
  408bae:	mov    rdi,rax
  408bb1:	call   409794 <flatcc_builder_table_add_offset@@Base>
  408bb6:	mov    QWORD PTR [rbp-0x8],rax
  408bba:	cmp    QWORD PTR [rbp-0x8],0x0
  408bbf:	jne    408bee <flatcc_builder_table_add_union_vector@@Base+0xf4>
  408bc1:	cmp    QWORD PTR [rbp-0x8],0x0
  408bc6:	jne    408be7 <flatcc_builder_table_add_union_vector@@Base+0xed>
  408bc8:	lea    rcx,[rip+0x35b1]        # 40c180 <flatcc_builder_padding_base@@Base+0xb40>
  408bcf:	mov    edx,0x604
  408bd4:	lea    rsi,[rip+0x2c65]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408bdb:	lea    rdi,[rip+0x2fb8]        # 40bb9a <flatcc_builder_padding_base@@Base+0x55a>
  408be2:	call   4031e0 <__assert_fail@plt>
  408be7:	mov    eax,0xffffffff
  408bec:	jmp    408c4e <flatcc_builder_table_add_union_vector@@Base+0x154>
  408bee:	mov    edx,DWORD PTR [rbp-0x24]
  408bf1:	mov    rax,QWORD PTR [rbp-0x8]
  408bf5:	mov    DWORD PTR [rax],edx
  408bf7:	mov    edx,DWORD PTR [rbp-0x1c]
  408bfa:	mov    rax,QWORD PTR [rbp-0x18]
  408bfe:	mov    esi,edx
  408c00:	mov    rdi,rax
  408c03:	call   409794 <flatcc_builder_table_add_offset@@Base>
  408c08:	mov    QWORD PTR [rbp-0x8],rax
  408c0c:	cmp    QWORD PTR [rbp-0x8],0x0
  408c11:	jne    408c40 <flatcc_builder_table_add_union_vector@@Base+0x146>
  408c13:	cmp    QWORD PTR [rbp-0x8],0x0
  408c18:	jne    408c39 <flatcc_builder_table_add_union_vector@@Base+0x13f>
  408c1a:	lea    rcx,[rip+0x355f]        # 40c180 <flatcc_builder_padding_base@@Base+0xb40>
  408c21:	mov    edx,0x608
  408c26:	lea    rsi,[rip+0x2c13]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408c2d:	lea    rdi,[rip+0x2f66]        # 40bb9a <flatcc_builder_padding_base@@Base+0x55a>
  408c34:	call   4031e0 <__assert_fail@plt>
  408c39:	mov    eax,0xffffffff
  408c3e:	jmp    408c4e <flatcc_builder_table_add_union_vector@@Base+0x154>
  408c40:	mov    edx,DWORD PTR [rbp-0x20]
  408c43:	mov    rax,QWORD PTR [rbp-0x8]
  408c47:	mov    DWORD PTR [rax],edx
  408c49:	mov    eax,0x0
  408c4e:	leave  
  408c4f:	ret    

0000000000408c50 <flatcc_builder_create_union_vector@@Base>:
  408c50:	endbr64 
  408c54:	push   rbp
  408c55:	mov    rbp,rsp
  408c58:	sub    rsp,0x40
  408c5c:	mov    QWORD PTR [rbp-0x28],rdi
  408c60:	mov    QWORD PTR [rbp-0x30],rsi
  408c64:	mov    QWORD PTR [rbp-0x38],rdx
  408c68:	mov    DWORD PTR [rbp-0x8],0x0
  408c6f:	mov    DWORD PTR [rbp-0x4],0x0
  408c76:	mov    rax,QWORD PTR [rbp-0x28]
  408c7a:	mov    rdi,rax
  408c7d:	call   40725e <flatcc_builder_start_offset_vector@@Base>
  408c82:	test   eax,eax
  408c84:	je     408c8f <flatcc_builder_create_union_vector@@Base+0x3f>
  408c86:	mov    rax,QWORD PTR [rbp-0x8]
  408c8a:	jmp    408d7a <flatcc_builder_create_union_vector@@Base+0x12a>
  408c8f:	mov    rdx,QWORD PTR [rbp-0x38]
  408c93:	mov    rax,QWORD PTR [rbp-0x28]
  408c97:	mov    rsi,rdx
  408c9a:	mov    rdi,rax
  408c9d:	call   406c3d <flatcc_builder_extend_offset_vector@@Base>
  408ca2:	test   rax,rax
  408ca5:	jne    408cb0 <flatcc_builder_create_union_vector@@Base+0x60>
  408ca7:	mov    rax,QWORD PTR [rbp-0x8]
  408cab:	jmp    408d7a <flatcc_builder_create_union_vector@@Base+0x12a>
  408cb0:	mov    rax,QWORD PTR [rbp-0x38]
  408cb4:	mov    edx,eax
  408cb6:	mov    rax,QWORD PTR [rbp-0x28]
  408cba:	mov    esi,edx
  408cbc:	mov    rdi,rax
  408cbf:	call   404a41 <flatcc_builder_default_alloc@@Base+0x26a>
  408cc4:	mov    QWORD PTR [rbp-0x18],rax
  408cc8:	cmp    QWORD PTR [rbp-0x18],0x0
  408ccd:	jne    408cd8 <flatcc_builder_create_union_vector@@Base+0x88>
  408ccf:	mov    rax,QWORD PTR [rbp-0x8]
  408cd3:	jmp    408d7a <flatcc_builder_create_union_vector@@Base+0x12a>
  408cd8:	mov    rax,QWORD PTR [rbp-0x28]
  408cdc:	mov    rdi,rax
  408cdf:	call   408972 <flatcc_builder_offset_vector_edit@@Base>
  408ce4:	mov    QWORD PTR [rbp-0x10],rax
  408ce8:	mov    QWORD PTR [rbp-0x20],0x0
  408cf0:	jmp    408d44 <flatcc_builder_create_union_vector@@Base+0xf4>
  408cf2:	mov    rax,QWORD PTR [rbp-0x20]
  408cf6:	lea    rdx,[rax*8+0x0]
  408cfe:	mov    rax,QWORD PTR [rbp-0x30]
  408d02:	add    rax,rdx
  408d05:	mov    rcx,QWORD PTR [rbp-0x18]
  408d09:	mov    rdx,QWORD PTR [rbp-0x20]
  408d0d:	add    rdx,rcx
  408d10:	movzx  eax,BYTE PTR [rax]
  408d13:	mov    BYTE PTR [rdx],al
  408d15:	mov    rax,QWORD PTR [rbp-0x20]
  408d19:	lea    rdx,[rax*8+0x0]
  408d21:	mov    rax,QWORD PTR [rbp-0x30]
  408d25:	add    rax,rdx
  408d28:	mov    rdx,QWORD PTR [rbp-0x20]
  408d2c:	lea    rcx,[rdx*4+0x0]
  408d34:	mov    rdx,QWORD PTR [rbp-0x10]
  408d38:	add    rdx,rcx
  408d3b:	mov    eax,DWORD PTR [rax+0x4]
  408d3e:	mov    DWORD PTR [rdx],eax
  408d40:	inc    QWORD PTR [rbp-0x20]
  408d44:	mov    rax,QWORD PTR [rbp-0x20]
  408d48:	cmp    rax,QWORD PTR [rbp-0x38]
  408d4c:	jb     408cf2 <flatcc_builder_create_union_vector@@Base+0xa2>
  408d4e:	mov    rcx,QWORD PTR [rbp-0x38]
  408d52:	mov    rdx,QWORD PTR [rbp-0x10]
  408d56:	mov    rsi,QWORD PTR [rbp-0x18]
  408d5a:	mov    rax,QWORD PTR [rbp-0x28]
  408d5e:	mov    rdi,rax
  408d61:	call   408d7c <flatcc_builder_create_union_vector_direct@@Base>
  408d66:	mov    QWORD PTR [rbp-0x8],rax
  408d6a:	mov    rax,QWORD PTR [rbp-0x28]
  408d6e:	mov    rdi,rax
  408d71:	call   40594f <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  408d76:	mov    rax,QWORD PTR [rbp-0x8]
  408d7a:	leave  
  408d7b:	ret    

0000000000408d7c <flatcc_builder_create_union_vector_direct@@Base>:
  408d7c:	endbr64 
  408d80:	push   rbp
  408d81:	mov    rbp,rsp
  408d84:	sub    rsp,0x30
  408d88:	mov    QWORD PTR [rbp-0x18],rdi
  408d8c:	mov    QWORD PTR [rbp-0x20],rsi
  408d90:	mov    QWORD PTR [rbp-0x28],rdx
  408d94:	mov    QWORD PTR [rbp-0x30],rcx
  408d98:	mov    DWORD PTR [rbp-0x8],0x0
  408d9f:	mov    DWORD PTR [rbp-0x4],0x0
  408da6:	mov    rcx,QWORD PTR [rbp-0x20]
  408daa:	mov    rdx,QWORD PTR [rbp-0x30]
  408dae:	mov    rsi,QWORD PTR [rbp-0x28]
  408db2:	mov    rax,QWORD PTR [rbp-0x18]
  408db6:	mov    rdi,rax
  408db9:	call   408497 <flatcc_builder_vector_edit@@Base+0x16>
  408dbe:	mov    DWORD PTR [rbp-0x4],eax
  408dc1:	mov    eax,DWORD PTR [rbp-0x4]
  408dc4:	test   eax,eax
  408dc6:	jne    408dce <flatcc_builder_create_union_vector_direct@@Base+0x52>
  408dc8:	mov    rax,QWORD PTR [rbp-0x8]
  408dcc:	jmp    408e07 <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  408dce:	mov    rdx,QWORD PTR [rbp-0x30]
  408dd2:	mov    rsi,QWORD PTR [rbp-0x20]
  408dd6:	mov    rax,QWORD PTR [rbp-0x18]
  408dda:	mov    r9d,0xffffffff
  408de0:	mov    r8d,0x1
  408de6:	mov    ecx,0x1
  408deb:	mov    rdi,rax
  408dee:	call   40811f <flatcc_builder_create_vector@@Base>
  408df3:	mov    DWORD PTR [rbp-0x8],eax
  408df6:	mov    eax,DWORD PTR [rbp-0x8]
  408df9:	test   eax,eax
  408dfb:	jne    408e03 <flatcc_builder_create_union_vector_direct@@Base+0x87>
  408dfd:	mov    rax,QWORD PTR [rbp-0x8]
  408e01:	jmp    408e07 <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  408e03:	mov    rax,QWORD PTR [rbp-0x8]
  408e07:	leave  
  408e08:	ret    

0000000000408e09 <flatcc_builder_start_union_vector@@Base>:
  408e09:	endbr64 
  408e0d:	push   rbp
  408e0e:	mov    rbp,rsp
  408e11:	sub    rsp,0x10
  408e15:	mov    QWORD PTR [rbp-0x8],rdi
  408e19:	mov    rax,QWORD PTR [rbp-0x8]
  408e1d:	mov    esi,0x4
  408e22:	mov    rdi,rax
  408e25:	call   405774 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  408e2a:	test   eax,eax
  408e2c:	je     408e35 <flatcc_builder_start_union_vector@@Base+0x2c>
  408e2e:	mov    eax,0xffffffff
  408e33:	jmp    408e77 <flatcc_builder_start_union_vector@@Base+0x6e>
  408e35:	mov    rax,QWORD PTR [rbp-0x8]
  408e39:	mov    rax,QWORD PTR [rax+0x30]
  408e3d:	mov    DWORD PTR [rax+0x10],0x8
  408e44:	mov    rax,QWORD PTR [rbp-0x8]
  408e48:	mov    rax,QWORD PTR [rax+0x30]
  408e4c:	mov    DWORD PTR [rax+0x14],0x0
  408e53:	mov    rax,QWORD PTR [rbp-0x8]
  408e57:	mov    rax,QWORD PTR [rax+0x30]
  408e5b:	mov    WORD PTR [rax+0xe],0x7
  408e61:	mov    rax,QWORD PTR [rbp-0x8]
  408e65:	mov    esi,0xfffffffc
  408e6a:	mov    rdi,rax
  408e6d:	call   40494a <flatcc_builder_default_alloc@@Base+0x173>
  408e72:	mov    eax,0x0
  408e77:	leave  
  408e78:	ret    

0000000000408e79 <flatcc_builder_end_union_vector@@Base>:
  408e79:	endbr64 
  408e7d:	push   rbp
  408e7e:	mov    rbp,rsp
  408e81:	sub    rsp,0x40
  408e85:	mov    QWORD PTR [rbp-0x38],rdi
  408e89:	mov    DWORD PTR [rbp-0x8],0x0
  408e90:	mov    DWORD PTR [rbp-0x4],0x0
  408e97:	mov    rax,QWORD PTR [rbp-0x38]
  408e9b:	mov    rax,QWORD PTR [rax+0x30]
  408e9f:	movzx  eax,WORD PTR [rax+0xe]
  408ea3:	cmp    ax,0x7
  408ea7:	je     408ec8 <flatcc_builder_end_union_vector@@Base+0x4f>
  408ea9:	lea    rcx,[rip+0x3310]        # 40c1c0 <flatcc_builder_padding_base@@Base+0xb80>
  408eb0:	mov    edx,0x651
  408eb5:	lea    rsi,[rip+0x2984]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  408ebc:	lea    rdi,[rip+0x2d15]        # 40bbd8 <flatcc_builder_padding_base@@Base+0x598>
  408ec3:	call   4031e0 <__assert_fail@plt>
  408ec8:	mov    rax,QWORD PTR [rbp-0x38]
  408ecc:	mov    rdi,rax
  408ecf:	call   408fd8 <flatcc_builder_union_vector_count@@Base>
  408ed4:	mov    QWORD PTR [rbp-0x28],rax
  408ed8:	mov    rax,QWORD PTR [rbp-0x28]
  408edc:	mov    edx,eax
  408ede:	mov    eax,edx
  408ee0:	shl    eax,0x2
  408ee3:	add    edx,eax
  408ee5:	mov    rax,QWORD PTR [rbp-0x38]
  408ee9:	mov    esi,edx
  408eeb:	mov    rdi,rax
  408eee:	call   404a41 <flatcc_builder_default_alloc@@Base+0x26a>
  408ef3:	mov    QWORD PTR [rbp-0x20],rax
  408ef7:	cmp    QWORD PTR [rbp-0x20],0x0
  408efc:	jne    408f07 <flatcc_builder_end_union_vector@@Base+0x8e>
  408efe:	mov    rax,QWORD PTR [rbp-0x8]
  408f02:	jmp    408fc0 <flatcc_builder_end_union_vector@@Base+0x147>
  408f07:	mov    rax,QWORD PTR [rbp-0x28]
  408f0b:	lea    rdx,[rax*4+0x0]
  408f13:	mov    rax,QWORD PTR [rbp-0x20]
  408f17:	add    rax,rdx
  408f1a:	mov    QWORD PTR [rbp-0x18],rax
  408f1e:	mov    rax,QWORD PTR [rbp-0x38]
  408f22:	mov    rdi,rax
  408f25:	call   408fc2 <flatcc_builder_union_vector_edit@@Base>
  408f2a:	mov    QWORD PTR [rbp-0x10],rax
  408f2e:	mov    QWORD PTR [rbp-0x30],0x0
  408f36:	jmp    408f8a <flatcc_builder_end_union_vector@@Base+0x111>
  408f38:	mov    rax,QWORD PTR [rbp-0x30]
  408f3c:	lea    rdx,[rax*8+0x0]
  408f44:	mov    rax,QWORD PTR [rbp-0x10]
  408f48:	add    rax,rdx
  408f4b:	mov    rcx,QWORD PTR [rbp-0x18]
  408f4f:	mov    rdx,QWORD PTR [rbp-0x30]
  408f53:	add    rdx,rcx
  408f56:	movzx  eax,BYTE PTR [rax]
  408f59:	mov    BYTE PTR [rdx],al
  408f5b:	mov    rax,QWORD PTR [rbp-0x30]
  408f5f:	lea    rdx,[rax*8+0x0]
  408f67:	mov    rax,QWORD PTR [rbp-0x10]
  408f6b:	add    rax,rdx
  408f6e:	mov    rdx,QWORD PTR [rbp-0x30]
  408f72:	lea    rcx,[rdx*4+0x0]
  408f7a:	mov    rdx,QWORD PTR [rbp-0x20]
  408f7e:	add    rdx,rcx
  408f81:	mov    eax,DWORD PTR [rax+0x4]
  408f84:	mov    DWORD PTR [rdx],eax
  408f86:	inc    QWORD PTR [rbp-0x30]
  408f8a:	mov    rax,QWORD PTR [rbp-0x30]
  408f8e:	cmp    rax,QWORD PTR [rbp-0x28]
  408f92:	jb     408f38 <flatcc_builder_end_union_vector@@Base+0xbf>
  408f94:	mov    rcx,QWORD PTR [rbp-0x28]
  408f98:	mov    rdx,QWORD PTR [rbp-0x20]
  408f9c:	mov    rsi,QWORD PTR [rbp-0x18]
  408fa0:	mov    rax,QWORD PTR [rbp-0x38]
  408fa4:	mov    rdi,rax
  408fa7:	call   408d7c <flatcc_builder_create_union_vector_direct@@Base>
  408fac:	mov    QWORD PTR [rbp-0x8],rax
  408fb0:	mov    rax,QWORD PTR [rbp-0x38]
  408fb4:	mov    rdi,rax
  408fb7:	call   40594f <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  408fbc:	mov    rax,QWORD PTR [rbp-0x8]
  408fc0:	leave  
  408fc1:	ret    

0000000000408fc2 <flatcc_builder_union_vector_edit@@Base>:
  408fc2:	endbr64 
  408fc6:	push   rbp
  408fc7:	mov    rbp,rsp
  408fca:	mov    QWORD PTR [rbp-0x8],rdi
  408fce:	mov    rax,QWORD PTR [rbp-0x8]
  408fd2:	mov    rax,QWORD PTR [rax+0x18]
  408fd6:	pop    rbp
  408fd7:	ret    

0000000000408fd8 <flatcc_builder_union_vector_count@@Base>:
  408fd8:	endbr64 
  408fdc:	push   rbp
  408fdd:	mov    rbp,rsp
  408fe0:	mov    QWORD PTR [rbp-0x8],rdi
  408fe4:	mov    rax,QWORD PTR [rbp-0x8]
  408fe8:	mov    rax,QWORD PTR [rax+0x30]
  408fec:	mov    eax,DWORD PTR [rax+0x14]
  408fef:	mov    eax,eax
  408ff1:	pop    rbp
  408ff2:	ret    

0000000000408ff3 <flatcc_builder_extend_union_vector@@Base>:
  408ff3:	endbr64 
  408ff7:	push   rbp
  408ff8:	mov    rbp,rsp
  408ffb:	sub    rsp,0x10
  408fff:	mov    QWORD PTR [rbp-0x8],rdi
  409003:	mov    QWORD PTR [rbp-0x10],rsi
  409007:	mov    rax,QWORD PTR [rbp-0x10]
  40900b:	mov    ecx,eax
  40900d:	mov    rax,QWORD PTR [rbp-0x8]
  409011:	mov    edx,0x1fffffff
  409016:	mov    esi,ecx
  409018:	mov    rdi,rax
  40901b:	call   4069e6 <flatcc_builder_end_struct@@Base+0x92>
  409020:	test   eax,eax
  409022:	je     40902b <flatcc_builder_extend_union_vector@@Base+0x38>
  409024:	mov    eax,0x0
  409029:	jmp    409044 <flatcc_builder_extend_union_vector@@Base+0x51>
  40902b:	mov    rax,QWORD PTR [rbp-0x10]
  40902f:	lea    edx,[rax*8+0x0]
  409036:	mov    rax,QWORD PTR [rbp-0x8]
  40903a:	mov    esi,edx
  40903c:	mov    rdi,rax
  40903f:	call   404a41 <flatcc_builder_default_alloc@@Base+0x26a>
  409044:	leave  
  409045:	ret    

0000000000409046 <flatcc_builder_truncate_union_vector@@Base>:
  409046:	endbr64 
  40904a:	push   rbp
  40904b:	mov    rbp,rsp
  40904e:	sub    rsp,0x10
  409052:	mov    QWORD PTR [rbp-0x8],rdi
  409056:	mov    QWORD PTR [rbp-0x10],rsi
  40905a:	mov    rax,QWORD PTR [rbp-0x8]
  40905e:	mov    rax,QWORD PTR [rax+0x30]
  409062:	movzx  eax,WORD PTR [rax+0xe]
  409066:	cmp    ax,0x7
  40906a:	je     40908b <flatcc_builder_truncate_union_vector@@Base+0x45>
  40906c:	lea    rcx,[rip+0x316d]        # 40c1e0 <flatcc_builder_padding_base@@Base+0xba0>
  409073:	mov    edx,0x681
  409078:	lea    rsi,[rip+0x27c1]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  40907f:	lea    rdi,[rip+0x2b52]        # 40bbd8 <flatcc_builder_padding_base@@Base+0x598>
  409086:	call   4031e0 <__assert_fail@plt>
  40908b:	mov    rax,QWORD PTR [rbp-0x8]
  40908f:	mov    rax,QWORD PTR [rax+0x30]
  409093:	mov    eax,DWORD PTR [rax+0x14]
  409096:	mov    rdx,QWORD PTR [rbp-0x10]
  40909a:	cmp    eax,edx
  40909c:	jae    4090d7 <flatcc_builder_truncate_union_vector@@Base+0x91>
  40909e:	mov    rax,QWORD PTR [rbp-0x8]
  4090a2:	mov    rax,QWORD PTR [rax+0x30]
  4090a6:	mov    eax,DWORD PTR [rax+0x14]
  4090a9:	mov    rdx,QWORD PTR [rbp-0x10]
  4090ad:	cmp    eax,edx
  4090af:	jae    4090d0 <flatcc_builder_truncate_union_vector@@Base+0x8a>
  4090b1:	lea    rcx,[rip+0x3128]        # 40c1e0 <flatcc_builder_padding_base@@Base+0xba0>
  4090b8:	mov    edx,0x682
  4090bd:	lea    rsi,[rip+0x277c]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4090c4:	lea    rdi,[rip+0x29bd]        # 40ba88 <flatcc_builder_padding_base@@Base+0x448>
  4090cb:	call   4031e0 <__assert_fail@plt>
  4090d0:	mov    eax,0xffffffff
  4090d5:	jmp    40911a <flatcc_builder_truncate_union_vector@@Base+0xd4>
  4090d7:	mov    rax,QWORD PTR [rbp-0x8]
  4090db:	mov    rax,QWORD PTR [rax+0x30]
  4090df:	mov    edx,DWORD PTR [rax+0x14]
  4090e2:	mov    rax,QWORD PTR [rbp-0x10]
  4090e6:	mov    ecx,eax
  4090e8:	mov    rax,QWORD PTR [rbp-0x8]
  4090ec:	mov    rax,QWORD PTR [rax+0x30]
  4090f0:	sub    edx,ecx
  4090f2:	mov    DWORD PTR [rax+0x14],edx
  4090f5:	mov    rax,QWORD PTR [rbp-0x8]
  4090f9:	mov    rax,QWORD PTR [rax+0x30]
  4090fd:	mov    eax,DWORD PTR [rax+0x10]
  409100:	mov    rdx,QWORD PTR [rbp-0x10]
  409104:	imul   edx,eax
  409107:	mov    rax,QWORD PTR [rbp-0x8]
  40910b:	mov    esi,edx
  40910d:	mov    rdi,rax
  409110:	call   404abd <flatcc_builder_default_alloc@@Base+0x2e6>
  409115:	mov    eax,0x0
  40911a:	leave  
  40911b:	ret    

000000000040911c <flatcc_builder_union_vector_push@@Base>:
  40911c:	endbr64 
  409120:	push   rbp
  409121:	mov    rbp,rsp
  409124:	sub    rsp,0x20
  409128:	mov    QWORD PTR [rbp-0x18],rdi
  40912c:	mov    QWORD PTR [rbp-0x20],rsi
  409130:	mov    rax,QWORD PTR [rbp-0x18]
  409134:	mov    rax,QWORD PTR [rax+0x30]
  409138:	movzx  eax,WORD PTR [rax+0xe]
  40913c:	cmp    ax,0x7
  409140:	je     409161 <flatcc_builder_union_vector_push@@Base+0x45>
  409142:	lea    rcx,[rip+0x30d7]        # 40c220 <flatcc_builder_padding_base@@Base+0xbe0>
  409149:	mov    edx,0x68d
  40914e:	lea    rsi,[rip+0x26eb]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  409155:	lea    rdi,[rip+0x2a7c]        # 40bbd8 <flatcc_builder_padding_base@@Base+0x598>
  40915c:	call   4031e0 <__assert_fail@plt>
  409161:	mov    rax,QWORD PTR [rbp-0x18]
  409165:	mov    rax,QWORD PTR [rax+0x30]
  409169:	mov    eax,DWORD PTR [rax+0x14]
  40916c:	cmp    eax,0x1fffffff
  409171:	jne    40917a <flatcc_builder_union_vector_push@@Base+0x5e>
  409173:	mov    eax,0x0
  409178:	jmp    4091c4 <flatcc_builder_union_vector_push@@Base+0xa8>
  40917a:	mov    rax,QWORD PTR [rbp-0x18]
  40917e:	mov    rax,QWORD PTR [rax+0x30]
  409182:	mov    edx,DWORD PTR [rax+0x14]
  409185:	mov    rax,QWORD PTR [rbp-0x18]
  409189:	mov    rax,QWORD PTR [rax+0x30]
  40918d:	inc    edx
  40918f:	mov    DWORD PTR [rax+0x14],edx
  409192:	mov    rax,QWORD PTR [rbp-0x18]
  409196:	mov    esi,0x8
  40919b:	mov    rdi,rax
  40919e:	call   404a41 <flatcc_builder_default_alloc@@Base+0x26a>
  4091a3:	mov    QWORD PTR [rbp-0x8],rax
  4091a7:	cmp    QWORD PTR [rbp-0x8],0x0
  4091ac:	jne    4091b5 <flatcc_builder_union_vector_push@@Base+0x99>
  4091ae:	mov    eax,0x0
  4091b3:	jmp    4091c4 <flatcc_builder_union_vector_push@@Base+0xa8>
  4091b5:	mov    rax,QWORD PTR [rbp-0x8]
  4091b9:	mov    rdx,QWORD PTR [rbp-0x20]
  4091bd:	mov    QWORD PTR [rax],rdx
  4091c0:	mov    rax,QWORD PTR [rbp-0x8]
  4091c4:	leave  
  4091c5:	ret    

00000000004091c6 <flatcc_builder_append_union_vector@@Base>:
  4091c6:	endbr64 
  4091ca:	push   rbp
  4091cb:	mov    rbp,rsp
  4091ce:	sub    rsp,0x20
  4091d2:	mov    QWORD PTR [rbp-0x8],rdi
  4091d6:	mov    QWORD PTR [rbp-0x10],rsi
  4091da:	mov    QWORD PTR [rbp-0x18],rdx
  4091de:	mov    rax,QWORD PTR [rbp-0x8]
  4091e2:	mov    rax,QWORD PTR [rax+0x30]
  4091e6:	movzx  eax,WORD PTR [rax+0xe]
  4091ea:	cmp    ax,0x7
  4091ee:	je     40920f <flatcc_builder_append_union_vector@@Base+0x49>
  4091f0:	lea    rcx,[rip+0x3069]        # 40c260 <flatcc_builder_padding_base@@Base+0xc20>
  4091f7:	mov    edx,0x69c
  4091fc:	lea    rsi,[rip+0x263d]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  409203:	lea    rdi,[rip+0x29ce]        # 40bbd8 <flatcc_builder_padding_base@@Base+0x598>
  40920a:	call   4031e0 <__assert_fail@plt>
  40920f:	mov    rax,QWORD PTR [rbp-0x18]
  409213:	mov    ecx,eax
  409215:	mov    rax,QWORD PTR [rbp-0x8]
  409219:	mov    edx,0x1fffffff
  40921e:	mov    esi,ecx
  409220:	mov    rdi,rax
  409223:	call   4069e6 <flatcc_builder_end_struct@@Base+0x92>
  409228:	test   eax,eax
  40922a:	je     409233 <flatcc_builder_append_union_vector@@Base+0x6d>
  40922c:	mov    eax,0x0
  409231:	jmp    409251 <flatcc_builder_append_union_vector@@Base+0x8b>
  409233:	mov    rax,QWORD PTR [rbp-0x18]
  409237:	lea    edx,[rax*8+0x0]
  40923e:	mov    rcx,QWORD PTR [rbp-0x10]
  409242:	mov    rax,QWORD PTR [rbp-0x8]
  409246:	mov    rsi,rcx
  409249:	mov    rdi,rax
  40924c:	call   404b09 <flatcc_builder_default_alloc@@Base+0x332>
  409251:	leave  
  409252:	ret    

0000000000409253 <flatcc_builder_create_string@@Base>:
  409253:	endbr64 
  409257:	push   rbp
  409258:	mov    rbp,rsp
  40925b:	sub    rsp,0xd0
  409262:	mov    QWORD PTR [rbp-0xb8],rdi
  409269:	mov    QWORD PTR [rbp-0xc0],rsi
  409270:	mov    QWORD PTR [rbp-0xc8],rdx
  409277:	mov    rax,QWORD PTR fs:0x28
  409280:	mov    QWORD PTR [rbp-0x8],rax
  409284:	xor    eax,eax
  409286:	mov    eax,0xffffffff
  40928b:	cmp    QWORD PTR [rbp-0xc8],rax
  409292:	jbe    40929e <flatcc_builder_create_string@@Base+0x4b>
  409294:	mov    eax,0x0
  409299:	jmp    409441 <flatcc_builder_create_string@@Base+0x1ee>
  40929e:	mov    rax,QWORD PTR [rbp-0xc8]
  4092a5:	mov    edi,eax
  4092a7:	call   404717 <main@@Base+0x412>
  4092ac:	mov    DWORD PTR [rbp-0xa8],eax
  4092b2:	mov    rax,QWORD PTR [rbp-0xc8]
  4092b9:	lea    ecx,[rax+0x1]
  4092bc:	mov    rax,QWORD PTR [rbp-0xb8]
  4092c3:	mov    edx,0x4
  4092c8:	mov    esi,ecx
  4092ca:	mov    rdi,rax
  4092cd:	call   405a16 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  4092d2:	inc    eax
  4092d4:	mov    DWORD PTR [rbp-0xa4],eax
  4092da:	mov    QWORD PTR [rbp-0xa0],0x0
  4092e5:	mov    DWORD PTR [rbp-0x98],0x0
  4092ef:	mov    rax,QWORD PTR [rbp-0xa0]
  4092f6:	add    rax,0x4
  4092fa:	mov    QWORD PTR [rbp-0xa0],rax
  409301:	mov    eax,DWORD PTR [rbp-0x98]
  409307:	cdqe   
  409309:	shl    rax,0x4
  40930d:	add    rax,rbp
  409310:	lea    rdx,[rax-0x90]
  409317:	lea    rax,[rbp-0xa8]
  40931e:	mov    QWORD PTR [rdx],rax
  409321:	mov    eax,DWORD PTR [rbp-0x98]
  409327:	cdqe   
  409329:	shl    rax,0x4
  40932d:	add    rax,rbp
  409330:	sub    rax,0x88
  409336:	mov    QWORD PTR [rax],0x4
  40933d:	mov    eax,DWORD PTR [rbp-0x98]
  409343:	inc    eax
  409345:	mov    DWORD PTR [rbp-0x98],eax
  40934b:	cmp    QWORD PTR [rbp-0xc8],0x0
  409353:	je     4093bb <flatcc_builder_create_string@@Base+0x168>
  409355:	mov    rdx,QWORD PTR [rbp-0xa0]
  40935c:	mov    rax,QWORD PTR [rbp-0xc8]
  409363:	add    rax,rdx
  409366:	mov    QWORD PTR [rbp-0xa0],rax
  40936d:	mov    eax,DWORD PTR [rbp-0x98]
  409373:	cdqe   
  409375:	shl    rax,0x4
  409379:	add    rax,rbp
  40937c:	lea    rdx,[rax-0x90]
  409383:	mov    rax,QWORD PTR [rbp-0xc0]
  40938a:	mov    QWORD PTR [rdx],rax
  40938d:	mov    eax,DWORD PTR [rbp-0x98]
  409393:	cdqe   
  409395:	shl    rax,0x4
  409399:	add    rax,rbp
  40939c:	lea    rdx,[rax-0x88]
  4093a3:	mov    rax,QWORD PTR [rbp-0xc8]
  4093aa:	mov    QWORD PTR [rdx],rax
  4093ad:	mov    eax,DWORD PTR [rbp-0x98]
  4093b3:	inc    eax
  4093b5:	mov    DWORD PTR [rbp-0x98],eax
  4093bb:	cmp    DWORD PTR [rbp-0xa4],0x0
  4093c2:	je     409428 <flatcc_builder_create_string@@Base+0x1d5>
  4093c4:	mov    rdx,QWORD PTR [rbp-0xa0]
  4093cb:	mov    eax,DWORD PTR [rbp-0xa4]
  4093d1:	add    rax,rdx
  4093d4:	mov    QWORD PTR [rbp-0xa0],rax
  4093db:	mov    eax,DWORD PTR [rbp-0x98]
  4093e1:	cdqe   
  4093e3:	shl    rax,0x4
  4093e7:	add    rax,rbp
  4093ea:	sub    rax,0x90
  4093f0:	mov    rdx,0x40b640
  4093f7:	mov    QWORD PTR [rax],rdx
  4093fa:	mov    edx,DWORD PTR [rbp-0x98]
  409400:	mov    eax,DWORD PTR [rbp-0xa4]
  409406:	movsxd rdx,edx
  409409:	shl    rdx,0x4
  40940d:	add    rdx,rbp
  409410:	sub    rdx,0x88
  409417:	mov    QWORD PTR [rdx],rax
  40941a:	mov    eax,DWORD PTR [rbp-0x98]
  409420:	inc    eax
  409422:	mov    DWORD PTR [rbp-0x98],eax
  409428:	lea    rdx,[rbp-0xa0]
  40942f:	mov    rax,QWORD PTR [rbp-0xb8]
  409436:	mov    rsi,rdx
  409439:	mov    rdi,rax
  40943c:	call   405a60 <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  409441:	mov    rcx,QWORD PTR [rbp-0x8]
  409445:	xor    rcx,QWORD PTR fs:0x28
  40944e:	je     409455 <flatcc_builder_create_string@@Base+0x202>
  409450:	call   4031b0 <__stack_chk_fail@plt>
  409455:	leave  
  409456:	ret    

0000000000409457 <flatcc_builder_create_string_str@@Base>:
  409457:	endbr64 
  40945b:	push   rbp
  40945c:	mov    rbp,rsp
  40945f:	sub    rsp,0x10
  409463:	mov    QWORD PTR [rbp-0x8],rdi
  409467:	mov    QWORD PTR [rbp-0x10],rsi
  40946b:	mov    rax,QWORD PTR [rbp-0x10]
  40946f:	mov    rdi,rax
  409472:	call   4031a0 <strlen@plt>
  409477:	mov    rdx,rax
  40947a:	mov    rcx,QWORD PTR [rbp-0x10]
  40947e:	mov    rax,QWORD PTR [rbp-0x8]
  409482:	mov    rsi,rcx
  409485:	mov    rdi,rax
  409488:	call   409253 <flatcc_builder_create_string@@Base>
  40948d:	leave  
  40948e:	ret    

000000000040948f <flatcc_builder_create_string_strn@@Base>:
  40948f:	endbr64 
  409493:	push   rbp
  409494:	mov    rbp,rsp
  409497:	sub    rsp,0x20
  40949b:	mov    QWORD PTR [rbp-0x8],rdi
  40949f:	mov    QWORD PTR [rbp-0x10],rsi
  4094a3:	mov    QWORD PTR [rbp-0x18],rdx
  4094a7:	mov    rdx,QWORD PTR [rbp-0x18]
  4094ab:	mov    rax,QWORD PTR [rbp-0x10]
  4094af:	mov    rsi,rdx
  4094b2:	mov    rdi,rax
  4094b5:	call   404797 <main@@Base+0x492>
  4094ba:	mov    rdx,rax
  4094bd:	mov    rcx,QWORD PTR [rbp-0x10]
  4094c1:	mov    rax,QWORD PTR [rbp-0x8]
  4094c5:	mov    rsi,rcx
  4094c8:	mov    rdi,rax
  4094cb:	call   409253 <flatcc_builder_create_string@@Base>
  4094d0:	leave  
  4094d1:	ret    

00000000004094d2 <flatcc_builder_end_string@@Base>:
  4094d2:	endbr64 
  4094d6:	push   rbp
  4094d7:	mov    rbp,rsp
  4094da:	sub    rsp,0x20
  4094de:	mov    QWORD PTR [rbp-0x18],rdi
  4094e2:	mov    rax,QWORD PTR [rbp-0x18]
  4094e6:	mov    rax,QWORD PTR [rax+0x30]
  4094ea:	movzx  eax,WORD PTR [rax+0xe]
  4094ee:	cmp    ax,0x6
  4094f2:	je     409513 <flatcc_builder_end_string@@Base+0x41>
  4094f4:	lea    rcx,[rip+0x2d95]        # 40c290 <flatcc_builder_padding_base@@Base+0xc50>
  4094fb:	mov    edx,0x6c4
  409500:	lea    rsi,[rip+0x2339]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  409507:	lea    rdi,[rip+0x2522]        # 40ba30 <flatcc_builder_padding_base@@Base+0x3f0>
  40950e:	call   4031e0 <__assert_fail@plt>
  409513:	mov    rax,QWORD PTR [rbp-0x18]
  409517:	mov    rax,QWORD PTR [rax+0x30]
  40951b:	mov    edx,DWORD PTR [rax+0x14]
  40951e:	mov    rax,QWORD PTR [rbp-0x18]
  409522:	mov    eax,DWORD PTR [rax+0x20]
  409525:	cmp    edx,eax
  409527:	je     409548 <flatcc_builder_end_string@@Base+0x76>
  409529:	lea    rcx,[rip+0x2d60]        # 40c290 <flatcc_builder_padding_base@@Base+0xc50>
  409530:	mov    edx,0x6c5
  409535:	lea    rsi,[rip+0x2304]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  40953c:	lea    rdi,[rip+0x26cd]        # 40bc10 <flatcc_builder_padding_base@@Base+0x5d0>
  409543:	call   4031e0 <__assert_fail@plt>
  409548:	mov    rax,QWORD PTR [rbp-0x18]
  40954c:	mov    eax,DWORD PTR [rax+0x20]
  40954f:	mov    edx,eax
  409551:	mov    rax,QWORD PTR [rbp-0x18]
  409555:	mov    rcx,QWORD PTR [rax+0x18]
  409559:	mov    rax,QWORD PTR [rbp-0x18]
  40955d:	mov    rsi,rcx
  409560:	mov    rdi,rax
  409563:	call   409253 <flatcc_builder_create_string@@Base>
  409568:	mov    DWORD PTR [rbp-0x4],eax
  40956b:	cmp    DWORD PTR [rbp-0x4],0x0
  40956f:	jne    409578 <flatcc_builder_end_string@@Base+0xa6>
  409571:	mov    eax,0x0
  409576:	jmp    409587 <flatcc_builder_end_string@@Base+0xb5>
  409578:	mov    rax,QWORD PTR [rbp-0x18]
  40957c:	mov    rdi,rax
  40957f:	call   40594f <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  409584:	mov    eax,DWORD PTR [rbp-0x4]
  409587:	leave  
  409588:	ret    

0000000000409589 <flatcc_builder_string_edit@@Base>:
  409589:	endbr64 
  40958d:	push   rbp
  40958e:	mov    rbp,rsp
  409591:	mov    QWORD PTR [rbp-0x8],rdi
  409595:	mov    rax,QWORD PTR [rbp-0x8]
  409599:	mov    rax,QWORD PTR [rax+0x18]
  40959d:	pop    rbp
  40959e:	ret    

000000000040959f <flatcc_builder_string_len@@Base>:
  40959f:	endbr64 
  4095a3:	push   rbp
  4095a4:	mov    rbp,rsp
  4095a7:	mov    QWORD PTR [rbp-0x8],rdi
  4095ab:	mov    rax,QWORD PTR [rbp-0x8]
  4095af:	mov    rax,QWORD PTR [rax+0x30]
  4095b3:	mov    eax,DWORD PTR [rax+0x14]
  4095b6:	mov    eax,eax
  4095b8:	pop    rbp
  4095b9:	ret    

00000000004095ba <flatcc_builder_table_add@@Base>:
  4095ba:	endbr64 
  4095be:	push   rbp
  4095bf:	mov    rbp,rsp
  4095c2:	sub    rsp,0x20
  4095c6:	mov    QWORD PTR [rbp-0x8],rdi
  4095ca:	mov    DWORD PTR [rbp-0xc],esi
  4095cd:	mov    QWORD PTR [rbp-0x18],rdx
  4095d1:	mov    eax,ecx
  4095d3:	mov    WORD PTR [rbp-0x10],ax
  4095d7:	mov    rax,QWORD PTR [rbp-0x8]
  4095db:	mov    rax,QWORD PTR [rax+0x30]
  4095df:	movzx  eax,WORD PTR [rax+0xe]
  4095e3:	cmp    ax,0x3
  4095e7:	je     409608 <flatcc_builder_table_add@@Base+0x4e>
  4095e9:	lea    rcx,[rip+0x2cc0]        # 40c2b0 <flatcc_builder_padding_base@@Base+0xc70>
  4095f0:	mov    edx,0x6ed
  4095f5:	lea    rsi,[rip+0x2244]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4095fc:	lea    rdi,[rip+0x2515]        # 40bb18 <flatcc_builder_padding_base@@Base+0x4d8>
  409603:	call   4031e0 <__assert_fail@plt>
  409608:	cmp    DWORD PTR [rbp-0xc],0x0
  40960c:	js     409617 <flatcc_builder_table_add@@Base+0x5d>
  40960e:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  409615:	jle    409636 <flatcc_builder_table_add@@Base+0x7c>
  409617:	lea    rcx,[rip+0x2c92]        # 40c2b0 <flatcc_builder_padding_base@@Base+0xc70>
  40961e:	mov    edx,0x6ee
  409623:	lea    rsi,[rip+0x2216]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  40962a:	lea    rdi,[rip+0x2607]        # 40bc38 <flatcc_builder_padding_base@@Base+0x5f8>
  409631:	call   4031e0 <__assert_fail@plt>
  409636:	mov    rax,QWORD PTR [rbp-0x8]
  40963a:	movzx  eax,WORD PTR [rax+0xea]
  409641:	cmp    WORD PTR [rbp-0x10],ax
  409645:	jbe    409656 <flatcc_builder_table_add@@Base+0x9c>
  409647:	mov    rdx,QWORD PTR [rbp-0x8]
  40964b:	movzx  eax,WORD PTR [rbp-0x10]
  40964f:	mov    WORD PTR [rdx+0xea],ax
  409656:	mov    rax,QWORD PTR [rbp-0x8]
  40965a:	mov    rax,QWORD PTR [rax+0x8]
  40965e:	mov    edx,DWORD PTR [rbp-0xc]
  409661:	movsxd rdx,edx
  409664:	add    rdx,rdx
  409667:	add    rax,rdx
  40966a:	movzx  eax,WORD PTR [rax]
  40966d:	test   ax,ax
  409670:	je     409691 <flatcc_builder_table_add@@Base+0xd7>
  409672:	lea    rcx,[rip+0x2c37]        # 40c2b0 <flatcc_builder_padding_base@@Base+0xc70>
  409679:	mov    edx,0x6f8
  40967e:	lea    rsi,[rip+0x21bb]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  409685:	lea    rdi,[rip+0x2214]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  40968c:	call   4031e0 <__assert_fail@plt>
  409691:	mov    rax,QWORD PTR [rbp-0x8]
  409695:	mov    edx,DWORD PTR [rax+0x14]
  409698:	mov    eax,DWORD PTR [rbp-0xc]
  40969b:	xor    eax,edx
  40969d:	imul   eax,eax,0x9e3779b1
  4096a3:	mov    rdx,QWORD PTR [rbp-0x18]
  4096a7:	xor    eax,edx
  4096a9:	imul   edx,eax,0x9e3779b1
  4096af:	mov    rax,QWORD PTR [rbp-0x8]
  4096b3:	mov    DWORD PTR [rax+0x14],edx
  4096b6:	mov    eax,DWORD PTR [rbp-0xc]
  4096b9:	movzx  ecx,ax
  4096bc:	movzx  edx,WORD PTR [rbp-0x10]
  4096c0:	mov    rax,QWORD PTR [rbp-0x18]
  4096c4:	mov    esi,eax
  4096c6:	mov    rax,QWORD PTR [rbp-0x8]
  4096ca:	mov    rdi,rax
  4096cd:	call   404b5b <flatcc_builder_default_alloc@@Base+0x384>
  4096d2:	leave  
  4096d3:	ret    

00000000004096d4 <flatcc_builder_table_edit@@Base>:
  4096d4:	endbr64 
  4096d8:	push   rbp
  4096d9:	mov    rbp,rsp
  4096dc:	sub    rsp,0x10
  4096e0:	mov    QWORD PTR [rbp-0x8],rdi
  4096e4:	mov    QWORD PTR [rbp-0x10],rsi
  4096e8:	mov    rax,QWORD PTR [rbp-0x8]
  4096ec:	mov    rax,QWORD PTR [rax+0x30]
  4096f0:	movzx  eax,WORD PTR [rax+0xe]
  4096f4:	cmp    ax,0x3
  4096f8:	je     409719 <flatcc_builder_table_edit@@Base+0x45>
  4096fa:	lea    rcx,[rip+0x2bcf]        # 40c2d0 <flatcc_builder_padding_base@@Base+0xc90>
  409701:	mov    edx,0x702
  409706:	lea    rsi,[rip+0x2133]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  40970d:	lea    rdi,[rip+0x2404]        # 40bb18 <flatcc_builder_padding_base@@Base+0x4d8>
  409714:	call   4031e0 <__assert_fail@plt>
  409719:	mov    rax,QWORD PTR [rbp-0x8]
  40971d:	mov    rdx,QWORD PTR [rax+0x18]
  409721:	mov    rax,QWORD PTR [rbp-0x8]
  409725:	mov    eax,DWORD PTR [rax+0x20]
  409728:	mov    eax,eax
  40972a:	sub    rax,QWORD PTR [rbp-0x10]
  40972e:	add    rax,rdx
  409731:	leave  
  409732:	ret    

0000000000409733 <flatcc_builder_table_add_copy@@Base>:
  409733:	endbr64 
  409737:	push   rbp
  409738:	mov    rbp,rsp
  40973b:	sub    rsp,0x30
  40973f:	mov    QWORD PTR [rbp-0x18],rdi
  409743:	mov    DWORD PTR [rbp-0x1c],esi
  409746:	mov    QWORD PTR [rbp-0x28],rdx
  40974a:	mov    QWORD PTR [rbp-0x30],rcx
  40974e:	mov    eax,r8d
  409751:	mov    WORD PTR [rbp-0x20],ax
  409755:	movzx  ecx,WORD PTR [rbp-0x20]
  409759:	mov    rdx,QWORD PTR [rbp-0x30]
  40975d:	mov    esi,DWORD PTR [rbp-0x1c]
  409760:	mov    rax,QWORD PTR [rbp-0x18]
  409764:	mov    rdi,rax
  409767:	call   4095ba <flatcc_builder_table_add@@Base>
  40976c:	mov    QWORD PTR [rbp-0x8],rax
  409770:	cmp    QWORD PTR [rbp-0x8],0x0
  409775:	je     40978e <flatcc_builder_table_add_copy@@Base+0x5b>
  409777:	mov    rdx,QWORD PTR [rbp-0x30]
  40977b:	mov    rcx,QWORD PTR [rbp-0x28]
  40977f:	mov    rax,QWORD PTR [rbp-0x8]
  409783:	mov    rsi,rcx
  409786:	mov    rdi,rax
  409789:	call   403230 <memcpy@plt>
  40978e:	mov    rax,QWORD PTR [rbp-0x8]
  409792:	leave  
  409793:	ret    

0000000000409794 <flatcc_builder_table_add_offset@@Base>:
  409794:	endbr64 
  409798:	push   rbp
  409799:	mov    rbp,rsp
  40979c:	sub    rsp,0x10
  4097a0:	mov    QWORD PTR [rbp-0x8],rdi
  4097a4:	mov    DWORD PTR [rbp-0xc],esi
  4097a7:	mov    rax,QWORD PTR [rbp-0x8]
  4097ab:	mov    rax,QWORD PTR [rax+0x30]
  4097af:	movzx  eax,WORD PTR [rax+0xe]
  4097b3:	cmp    ax,0x3
  4097b7:	je     4097d8 <flatcc_builder_table_add_offset@@Base+0x44>
  4097b9:	lea    rcx,[rip+0x2b40]        # 40c300 <flatcc_builder_padding_base@@Base+0xcc0>
  4097c0:	mov    edx,0x713
  4097c5:	lea    rsi,[rip+0x2074]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4097cc:	lea    rdi,[rip+0x2345]        # 40bb18 <flatcc_builder_padding_base@@Base+0x4d8>
  4097d3:	call   4031e0 <__assert_fail@plt>
  4097d8:	cmp    DWORD PTR [rbp-0xc],0x0
  4097dc:	js     4097e7 <flatcc_builder_table_add_offset@@Base+0x53>
  4097de:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  4097e5:	jle    409806 <flatcc_builder_table_add_offset@@Base+0x72>
  4097e7:	lea    rcx,[rip+0x2b12]        # 40c300 <flatcc_builder_padding_base@@Base+0xcc0>
  4097ee:	mov    edx,0x714
  4097f3:	lea    rsi,[rip+0x2046]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  4097fa:	lea    rdi,[rip+0x2437]        # 40bc38 <flatcc_builder_padding_base@@Base+0x5f8>
  409801:	call   4031e0 <__assert_fail@plt>
  409806:	mov    rax,QWORD PTR [rbp-0x8]
  40980a:	mov    rax,QWORD PTR [rax+0x8]
  40980e:	mov    edx,DWORD PTR [rbp-0xc]
  409811:	movsxd rdx,edx
  409814:	add    rdx,rdx
  409817:	add    rax,rdx
  40981a:	movzx  eax,WORD PTR [rax]
  40981d:	test   ax,ax
  409820:	je     409841 <flatcc_builder_table_add_offset@@Base+0xad>
  409822:	lea    rcx,[rip+0x2ad7]        # 40c300 <flatcc_builder_padding_base@@Base+0xcc0>
  409829:	mov    edx,0x71b
  40982e:	lea    rsi,[rip+0x200b]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  409835:	lea    rdi,[rip+0x2064]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  40983c:	call   4031e0 <__assert_fail@plt>
  409841:	mov    rax,QWORD PTR [rbp-0x8]
  409845:	mov    edx,DWORD PTR [rax+0x14]
  409848:	mov    eax,DWORD PTR [rbp-0xc]
  40984b:	xor    eax,edx
  40984d:	imul   eax,eax,0x9e3779b1
  409853:	xor    eax,0x4
  409856:	imul   edx,eax,0x9e3779b1
  40985c:	mov    rax,QWORD PTR [rbp-0x8]
  409860:	mov    DWORD PTR [rax+0x14],edx
  409863:	mov    eax,DWORD PTR [rbp-0xc]
  409866:	movzx  edx,ax
  409869:	mov    rax,QWORD PTR [rbp-0x8]
  40986d:	mov    esi,edx
  40986f:	mov    rdi,rax
  409872:	call   404c23 <flatcc_builder_default_alloc@@Base+0x44c>
  409877:	leave  
  409878:	ret    

0000000000409879 <flatcc_builder_push_buffer_alignment@@Base>:
  409879:	endbr64 
  40987d:	push   rbp
  40987e:	mov    rbp,rsp
  409881:	mov    QWORD PTR [rbp-0x18],rdi
  409885:	mov    rax,QWORD PTR [rbp-0x18]
  409889:	movzx  eax,WORD PTR [rax+0xe8]
  409890:	mov    WORD PTR [rbp-0x2],ax
  409894:	mov    rax,QWORD PTR [rbp-0x18]
  409898:	mov    WORD PTR [rax+0xe8],0x4
  4098a1:	movzx  eax,WORD PTR [rbp-0x2]
  4098a5:	pop    rbp
  4098a6:	ret    

00000000004098a7 <flatcc_builder_pop_buffer_alignment@@Base>:
  4098a7:	endbr64 
  4098ab:	push   rbp
  4098ac:	mov    rbp,rsp
  4098af:	sub    rsp,0x10
  4098b3:	mov    QWORD PTR [rbp-0x8],rdi
  4098b7:	mov    eax,esi
  4098b9:	mov    WORD PTR [rbp-0xc],ax
  4098bd:	movzx  edx,WORD PTR [rbp-0xc]
  4098c1:	mov    rax,QWORD PTR [rbp-0x8]
  4098c5:	mov    esi,edx
  4098c7:	mov    rdi,rax
  4098ca:	call   405443 <flatcc_builder_clear@@Base+0x99>
  4098cf:	nop
  4098d0:	leave  
  4098d1:	ret    

00000000004098d2 <flatcc_builder_get_buffer_alignment@@Base>:
  4098d2:	endbr64 
  4098d6:	push   rbp
  4098d7:	mov    rbp,rsp
  4098da:	mov    QWORD PTR [rbp-0x8],rdi
  4098de:	mov    rax,QWORD PTR [rbp-0x8]
  4098e2:	movzx  eax,WORD PTR [rax+0xe8]
  4098e9:	pop    rbp
  4098ea:	ret    

00000000004098eb <flatcc_builder_set_vtable_clustering@@Base>:
  4098eb:	endbr64 
  4098ef:	push   rbp
  4098f0:	mov    rbp,rsp
  4098f3:	mov    QWORD PTR [rbp-0x8],rdi
  4098f7:	mov    DWORD PTR [rbp-0xc],esi
  4098fa:	cmp    DWORD PTR [rbp-0xc],0x0
  4098fe:	sete   al
  409901:	movzx  edx,al
  409904:	mov    rax,QWORD PTR [rbp-0x8]
  409908:	mov    DWORD PTR [rax+0x124],edx
  40990e:	nop
  40990f:	pop    rbp
  409910:	ret    

0000000000409911 <flatcc_builder_set_block_align@@Base>:
  409911:	endbr64 
  409915:	push   rbp
  409916:	mov    rbp,rsp
  409919:	mov    QWORD PTR [rbp-0x8],rdi
  40991d:	mov    eax,esi
  40991f:	mov    WORD PTR [rbp-0xc],ax
  409923:	mov    rdx,QWORD PTR [rbp-0x8]
  409927:	movzx  eax,WORD PTR [rbp-0xc]
  40992b:	mov    WORD PTR [rdx+0xec],ax
  409932:	nop
  409933:	pop    rbp
  409934:	ret    

0000000000409935 <flatcc_builder_get_level@@Base>:
  409935:	endbr64 
  409939:	push   rbp
  40993a:	mov    rbp,rsp
  40993d:	mov    QWORD PTR [rbp-0x8],rdi
  409941:	mov    rax,QWORD PTR [rbp-0x8]
  409945:	mov    eax,DWORD PTR [rax+0x104]
  40994b:	pop    rbp
  40994c:	ret    

000000000040994d <flatcc_builder_set_max_level@@Base>:
  40994d:	endbr64 
  409951:	push   rbp
  409952:	mov    rbp,rsp
  409955:	mov    QWORD PTR [rbp-0x8],rdi
  409959:	mov    DWORD PTR [rbp-0xc],esi
  40995c:	mov    rax,QWORD PTR [rbp-0x8]
  409960:	mov    edx,DWORD PTR [rbp-0xc]
  409963:	mov    DWORD PTR [rax+0x120],edx
  409969:	mov    rax,QWORD PTR [rbp-0x8]
  40996d:	mov    edx,DWORD PTR [rax+0x108]
  409973:	mov    rax,QWORD PTR [rbp-0x8]
  409977:	mov    eax,DWORD PTR [rax+0x120]
  40997d:	cmp    edx,eax
  40997f:	jge    409995 <flatcc_builder_set_max_level@@Base+0x48>
  409981:	mov    rax,QWORD PTR [rbp-0x8]
  409985:	mov    edx,DWORD PTR [rax+0x120]
  40998b:	mov    rax,QWORD PTR [rbp-0x8]
  40998f:	mov    DWORD PTR [rax+0x108],edx
  409995:	nop
  409996:	pop    rbp
  409997:	ret    

0000000000409998 <flatcc_builder_get_buffer_size@@Base>:
  409998:	endbr64 
  40999c:	push   rbp
  40999d:	mov    rbp,rsp
  4099a0:	mov    QWORD PTR [rbp-0x8],rdi
  4099a4:	mov    rax,QWORD PTR [rbp-0x8]
  4099a8:	mov    edx,DWORD PTR [rax+0xf4]
  4099ae:	mov    rax,QWORD PTR [rbp-0x8]
  4099b2:	mov    eax,DWORD PTR [rax+0xf0]
  4099b8:	sub    edx,eax
  4099ba:	mov    eax,edx
  4099bc:	cdqe   
  4099be:	pop    rbp
  4099bf:	ret    

00000000004099c0 <flatcc_builder_get_buffer_start@@Base>:
  4099c0:	endbr64 
  4099c4:	push   rbp
  4099c5:	mov    rbp,rsp
  4099c8:	mov    QWORD PTR [rbp-0x8],rdi
  4099cc:	mov    rax,QWORD PTR [rbp-0x8]
  4099d0:	mov    eax,DWORD PTR [rax+0xf0]
  4099d6:	pop    rbp
  4099d7:	ret    

00000000004099d8 <flatcc_builder_get_buffer_end@@Base>:
  4099d8:	endbr64 
  4099dc:	push   rbp
  4099dd:	mov    rbp,rsp
  4099e0:	mov    QWORD PTR [rbp-0x8],rdi
  4099e4:	mov    rax,QWORD PTR [rbp-0x8]
  4099e8:	mov    eax,DWORD PTR [rax+0xf4]
  4099ee:	pop    rbp
  4099ef:	ret    

00000000004099f0 <flatcc_builder_set_vtable_cache_limit@@Base>:
  4099f0:	endbr64 
  4099f4:	push   rbp
  4099f5:	mov    rbp,rsp
  4099f8:	mov    QWORD PTR [rbp-0x8],rdi
  4099fc:	mov    QWORD PTR [rbp-0x10],rsi
  409a00:	mov    rax,QWORD PTR [rbp-0x8]
  409a04:	mov    rdx,QWORD PTR [rbp-0x10]
  409a08:	mov    QWORD PTR [rax+0x118],rdx
  409a0f:	nop
  409a10:	pop    rbp
  409a11:	ret    

0000000000409a12 <flatcc_builder_set_identifier@@Base>:
  409a12:	endbr64 
  409a16:	push   rbp
  409a17:	mov    rbp,rsp
  409a1a:	mov    QWORD PTR [rbp-0x8],rdi
  409a1e:	mov    QWORD PTR [rbp-0x10],rsi
  409a22:	cmp    QWORD PTR [rbp-0x10],0x0
  409a27:	je     409a2f <flatcc_builder_set_identifier@@Base+0x1d>
  409a29:	mov    rax,QWORD PTR [rbp-0x10]
  409a2d:	jmp    409a36 <flatcc_builder_set_identifier@@Base+0x24>
  409a2f:	mov    rax,0x40b640
  409a36:	mov    rdx,QWORD PTR [rbp-0x8]
  409a3a:	add    rdx,0x110
  409a41:	mov    eax,DWORD PTR [rax]
  409a43:	mov    DWORD PTR [rdx],eax
  409a45:	nop
  409a46:	pop    rbp
  409a47:	ret    

0000000000409a48 <flatcc_builder_get_type@@Base>:
  409a48:	endbr64 
  409a4c:	push   rbp
  409a4d:	mov    rbp,rsp
  409a50:	mov    QWORD PTR [rbp-0x8],rdi
  409a54:	mov    rax,QWORD PTR [rbp-0x8]
  409a58:	mov    rax,QWORD PTR [rax+0x30]
  409a5c:	test   rax,rax
  409a5f:	je     409a72 <flatcc_builder_get_type@@Base+0x2a>
  409a61:	mov    rax,QWORD PTR [rbp-0x8]
  409a65:	mov    rax,QWORD PTR [rax+0x30]
  409a69:	movzx  eax,WORD PTR [rax+0xe]
  409a6d:	movzx  eax,ax
  409a70:	jmp    409a77 <flatcc_builder_get_type@@Base+0x2f>
  409a72:	mov    eax,0x0
  409a77:	pop    rbp
  409a78:	ret    

0000000000409a79 <flatcc_builder_get_type_at@@Base>:
  409a79:	endbr64 
  409a7d:	push   rbp
  409a7e:	mov    rbp,rsp
  409a81:	mov    QWORD PTR [rbp-0x8],rdi
  409a85:	mov    DWORD PTR [rbp-0xc],esi
  409a88:	cmp    DWORD PTR [rbp-0xc],0x0
  409a8c:	jle    409a9d <flatcc_builder_get_type_at@@Base+0x24>
  409a8e:	mov    rax,QWORD PTR [rbp-0x8]
  409a92:	mov    eax,DWORD PTR [rax+0x104]
  409a98:	cmp    DWORD PTR [rbp-0xc],eax
  409a9b:	jle    409aa4 <flatcc_builder_get_type_at@@Base+0x2b>
  409a9d:	mov    eax,0x0
  409aa2:	jmp    409ad8 <flatcc_builder_get_type_at@@Base+0x5f>
  409aa4:	mov    rax,QWORD PTR [rbp-0x8]
  409aa8:	mov    rcx,QWORD PTR [rax+0x30]
  409aac:	mov    rax,QWORD PTR [rbp-0x8]
  409ab0:	mov    eax,DWORD PTR [rax+0x104]
  409ab6:	mov    edx,DWORD PTR [rbp-0xc]
  409ab9:	sub    edx,eax
  409abb:	mov    eax,edx
  409abd:	movsxd rdx,eax
  409ac0:	mov    rax,rdx
  409ac3:	shl    rax,0x3
  409ac7:	add    rax,rdx
  409aca:	shl    rax,0x2
  409ace:	add    rax,rcx
  409ad1:	movzx  eax,WORD PTR [rax+0xe]
  409ad5:	movzx  eax,ax
  409ad8:	pop    rbp
  409ad9:	ret    

0000000000409ada <flatcc_builder_get_direct_buffer@@Base>:
  409ada:	endbr64 
  409ade:	push   rbp
  409adf:	mov    rbp,rsp
  409ae2:	sub    rsp,0x10
  409ae6:	mov    QWORD PTR [rbp-0x8],rdi
  409aea:	mov    QWORD PTR [rbp-0x10],rsi
  409aee:	mov    rax,QWORD PTR [rbp-0x8]
  409af2:	mov    eax,DWORD PTR [rax+0x128]
  409af8:	test   eax,eax
  409afa:	je     409b18 <flatcc_builder_get_direct_buffer@@Base+0x3e>
  409afc:	mov    rax,QWORD PTR [rbp-0x8]
  409b00:	lea    rdx,[rax+0x130]
  409b07:	mov    rax,QWORD PTR [rbp-0x10]
  409b0b:	mov    rsi,rax
  409b0e:	mov    rdi,rdx
  409b11:	call   40473e <main@@Base+0x439>
  409b16:	jmp    409b2f <flatcc_builder_get_direct_buffer@@Base+0x55>
  409b18:	cmp    QWORD PTR [rbp-0x10],0x0
  409b1d:	je     409b2a <flatcc_builder_get_direct_buffer@@Base+0x50>
  409b1f:	mov    rax,QWORD PTR [rbp-0x10]
  409b23:	mov    QWORD PTR [rax],0x0
  409b2a:	mov    eax,0x0
  409b2f:	leave  
  409b30:	ret    

0000000000409b31 <flatcc_builder_copy_buffer@@Base>:
  409b31:	endbr64 
  409b35:	push   rbp
  409b36:	mov    rbp,rsp
  409b39:	sub    rsp,0x20
  409b3d:	mov    QWORD PTR [rbp-0x8],rdi
  409b41:	mov    QWORD PTR [rbp-0x10],rsi
  409b45:	mov    QWORD PTR [rbp-0x18],rdx
  409b49:	mov    rax,QWORD PTR [rbp-0x8]
  409b4d:	mov    eax,DWORD PTR [rax+0x128]
  409b53:	test   eax,eax
  409b55:	jne    409b5e <flatcc_builder_copy_buffer@@Base+0x2d>
  409b57:	mov    eax,0x0
  409b5c:	jmp    409baa <flatcc_builder_copy_buffer@@Base+0x79>
  409b5e:	mov    rax,QWORD PTR [rbp-0x8]
  409b62:	lea    rcx,[rax+0x130]
  409b69:	mov    rdx,QWORD PTR [rbp-0x18]
  409b6d:	mov    rax,QWORD PTR [rbp-0x10]
  409b71:	mov    rsi,rax
  409b74:	mov    rdi,rcx
  409b77:	call   40a7e5 <flatcc_emitter_copy_buffer@@Base>
  409b7c:	mov    QWORD PTR [rbp-0x10],rax
  409b80:	cmp    QWORD PTR [rbp-0x10],0x0
  409b85:	jne    409ba6 <flatcc_builder_copy_buffer@@Base+0x75>
  409b87:	lea    rcx,[rip+0x2792]        # 40c320 <flatcc_builder_padding_base@@Base+0xce0>
  409b8e:	mov    edx,0x786
  409b93:	lea    rsi,[rip+0x1ca6]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  409b9a:	lea    rdi,[rip+0x20db]        # 40bc7c <flatcc_builder_padding_base@@Base+0x63c>
  409ba1:	call   4031e0 <__assert_fail@plt>
  409ba6:	mov    rax,QWORD PTR [rbp-0x10]
  409baa:	leave  
  409bab:	ret    

0000000000409bac <flatcc_builder_finalize_buffer@@Base>:
  409bac:	endbr64 
  409bb0:	push   rbp
  409bb1:	mov    rbp,rsp
  409bb4:	sub    rsp,0x20
  409bb8:	mov    QWORD PTR [rbp-0x18],rdi
  409bbc:	mov    QWORD PTR [rbp-0x20],rsi
  409bc0:	mov    rax,QWORD PTR [rbp-0x18]
  409bc4:	mov    rdi,rax
  409bc7:	call   409998 <flatcc_builder_get_buffer_size@@Base>
  409bcc:	mov    QWORD PTR [rbp-0x10],rax
  409bd0:	cmp    QWORD PTR [rbp-0x20],0x0
  409bd5:	je     409be2 <flatcc_builder_finalize_buffer@@Base+0x36>
  409bd7:	mov    rax,QWORD PTR [rbp-0x20]
  409bdb:	mov    rdx,QWORD PTR [rbp-0x10]
  409bdf:	mov    QWORD PTR [rax],rdx
  409be2:	mov    rax,QWORD PTR [rbp-0x10]
  409be6:	mov    rdi,rax
  409be9:	call   403240 <malloc@plt>
  409bee:	mov    QWORD PTR [rbp-0x8],rax
  409bf2:	cmp    QWORD PTR [rbp-0x8],0x0
  409bf7:	jne    409c18 <flatcc_builder_finalize_buffer@@Base+0x6c>
  409bf9:	lea    rcx,[rip+0x2740]        # 40c340 <flatcc_builder_padding_base@@Base+0xd00>
  409c00:	mov    edx,0x798
  409c05:	lea    rsi,[rip+0x1c34]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  409c0c:	lea    rdi,[rip+0x1c8d]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  409c13:	call   4031e0 <__assert_fail@plt>
  409c18:	mov    rdx,QWORD PTR [rbp-0x10]
  409c1c:	mov    rcx,QWORD PTR [rbp-0x8]
  409c20:	mov    rax,QWORD PTR [rbp-0x18]
  409c24:	mov    rsi,rcx
  409c27:	mov    rdi,rax
  409c2a:	call   409b31 <flatcc_builder_copy_buffer@@Base>
  409c2f:	test   rax,rax
  409c32:	jne    409c53 <flatcc_builder_finalize_buffer@@Base+0xa7>
  409c34:	lea    rcx,[rip+0x2705]        # 40c340 <flatcc_builder_padding_base@@Base+0xd00>
  409c3b:	mov    edx,0x79c
  409c40:	lea    rsi,[rip+0x1bf9]        # 40b840 <flatcc_builder_padding_base@@Base+0x200>
  409c47:	lea    rdi,[rip+0x1c52]        # 40b8a0 <flatcc_builder_padding_base@@Base+0x260>
  409c4e:	call   4031e0 <__assert_fail@plt>
  409c53:	nop
  409c54:	endbr64 
  409c58:	cmp    QWORD PTR [rbp-0x8],0x0
  409c5d:	jne    409c71 <flatcc_builder_finalize_buffer@@Base+0xc5>
  409c5f:	cmp    QWORD PTR [rbp-0x20],0x0
  409c64:	je     409c71 <flatcc_builder_finalize_buffer@@Base+0xc5>
  409c66:	mov    rax,QWORD PTR [rbp-0x20]
  409c6a:	mov    QWORD PTR [rax],0x0
  409c71:	mov    rax,QWORD PTR [rbp-0x8]
  409c75:	leave  
  409c76:	ret    

0000000000409c77 <flatcc_builder_finalize_aligned_buffer@@Base>:
  409c77:	endbr64 
  409c7b:	push   rbp
  409c7c:	mov    rbp,rsp
  409c7f:	sub    rsp,0x30
  409c83:	mov    QWORD PTR [rbp-0x28],rdi
  409c87:	mov    QWORD PTR [rbp-0x30],rsi
  409c8b:	mov    rax,QWORD PTR [rbp-0x28]
  409c8f:	mov    rdi,rax
  409c92:	call   409998 <flatcc_builder_get_buffer_size@@Base>
  409c97:	mov    QWORD PTR [rbp-0x10],rax
  409c9b:	cmp    QWORD PTR [rbp-0x30],0x0
  409ca0:	je     409cad <flatcc_builder_finalize_aligned_buffer@@Base+0x36>
  409ca2:	mov    rax,QWORD PTR [rbp-0x30]
  409ca6:	mov    rdx,QWORD PTR [rbp-0x10]
  409caa:	mov    QWORD PTR [rax],rdx
  409cad:	mov    rax,QWORD PTR [rbp-0x28]
  409cb1:	mov    rdi,rax
  409cb4:	call   4098d2 <flatcc_builder_get_buffer_alignment@@Base>
  409cb9:	movzx  eax,ax
  409cbc:	mov    QWORD PTR [rbp-0x8],rax
  409cc0:	mov    rdx,QWORD PTR [rbp-0x10]
  409cc4:	mov    rax,QWORD PTR [rbp-0x8]
  409cc8:	add    rax,rdx
  409ccb:	lea    rdx,[rax-0x1]
  409ccf:	mov    rax,QWORD PTR [rbp-0x8]
  409cd3:	neg    rax
  409cd6:	and    rax,rdx
  409cd9:	mov    QWORD PTR [rbp-0x10],rax
  409cdd:	mov    rdx,QWORD PTR [rbp-0x10]
  409ce1:	mov    rax,QWORD PTR [rbp-0x8]
  409ce5:	mov    rsi,rdx
  409ce8:	mov    rdi,rax
  409ceb:	call   40468a <main@@Base+0x385>
  409cf0:	mov    QWORD PTR [rbp-0x18],rax
  409cf4:	cmp    QWORD PTR [rbp-0x18],0x0
  409cf9:	je     409d2d <flatcc_builder_finalize_aligned_buffer@@Base+0xb6>
  409cfb:	mov    rdx,QWORD PTR [rbp-0x10]
  409cff:	mov    rcx,QWORD PTR [rbp-0x18]
  409d03:	mov    rax,QWORD PTR [rbp-0x28]
  409d07:	mov    rsi,rcx
  409d0a:	mov    rdi,rax
  409d0d:	call   409b31 <flatcc_builder_copy_buffer@@Base>
  409d12:	test   rax,rax
  409d15:	jne    409d30 <flatcc_builder_finalize_aligned_buffer@@Base+0xb9>
  409d17:	mov    rax,QWORD PTR [rbp-0x18]
  409d1b:	mov    rdi,rax
  409d1e:	call   403160 <free@plt>
  409d23:	mov    QWORD PTR [rbp-0x18],0x0
  409d2b:	jmp    409d31 <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  409d2d:	nop
  409d2e:	jmp    409d31 <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  409d30:	nop
  409d31:	cmp    QWORD PTR [rbp-0x18],0x0
  409d36:	jne    409d4a <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  409d38:	cmp    QWORD PTR [rbp-0x30],0x0
  409d3d:	je     409d4a <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  409d3f:	mov    rax,QWORD PTR [rbp-0x30]
  409d43:	mov    QWORD PTR [rax],0x0
  409d4a:	mov    rax,QWORD PTR [rbp-0x18]
  409d4e:	leave  
  409d4f:	ret    

0000000000409d50 <flatcc_builder_aligned_alloc@@Base>:
  409d50:	endbr64 
  409d54:	push   rbp
  409d55:	mov    rbp,rsp
  409d58:	sub    rsp,0x10
  409d5c:	mov    QWORD PTR [rbp-0x8],rdi
  409d60:	mov    QWORD PTR [rbp-0x10],rsi
  409d64:	mov    rdx,QWORD PTR [rbp-0x10]
  409d68:	mov    rax,QWORD PTR [rbp-0x8]
  409d6c:	mov    rsi,rdx
  409d6f:	mov    rdi,rax
  409d72:	call   40468a <main@@Base+0x385>
  409d77:	leave  
  409d78:	ret    

0000000000409d79 <flatcc_builder_aligned_free@@Base>:
  409d79:	endbr64 
  409d7d:	push   rbp
  409d7e:	mov    rbp,rsp
  409d81:	sub    rsp,0x10
  409d85:	mov    QWORD PTR [rbp-0x8],rdi
  409d89:	mov    rax,QWORD PTR [rbp-0x8]
  409d8d:	mov    rdi,rax
  409d90:	call   403160 <free@plt>
  409d95:	nop
  409d96:	leave  
  409d97:	ret    

0000000000409d98 <flatcc_builder_get_emit_context@@Base>:
  409d98:	endbr64 
  409d9c:	push   rbp
  409d9d:	mov    rbp,rsp
  409da0:	mov    QWORD PTR [rbp-0x8],rdi
  409da4:	mov    rax,QWORD PTR [rbp-0x8]
  409da8:	mov    rax,QWORD PTR [rax+0x38]
  409dac:	pop    rbp
  409dad:	ret    
  409dae:	endbr64 
  409db2:	push   rbp
  409db3:	mov    rbp,rsp
  409db6:	sub    rsp,0x20
  409dba:	mov    QWORD PTR [rbp-0x18],rdi
  409dbe:	mov    QWORD PTR [rbp-0x8],0x0
  409dc6:	mov    rax,QWORD PTR [rbp-0x18]
  409dca:	mov    rax,QWORD PTR [rax]
  409dcd:	test   rax,rax
  409dd0:	je     409e2e <flatcc_builder_get_emit_context@@Base+0x96>
  409dd2:	mov    rax,QWORD PTR [rbp-0x18]
  409dd6:	mov    rax,QWORD PTR [rax]
  409dd9:	mov    rdx,QWORD PTR [rax+0xb88]
  409de0:	mov    rax,QWORD PTR [rbp-0x18]
  409de4:	mov    rax,QWORD PTR [rax+0x8]
  409de8:	cmp    rdx,rax
  409deb:	je     409e2e <flatcc_builder_get_emit_context@@Base+0x96>
  409ded:	mov    rax,QWORD PTR [rbp-0x18]
  409df1:	mov    rax,QWORD PTR [rax]
  409df4:	mov    edx,DWORD PTR [rax+0xb90]
  409dfa:	mov    rax,QWORD PTR [rbp-0x18]
  409dfe:	mov    rax,QWORD PTR [rax]
  409e01:	mov    rax,QWORD PTR [rax+0xb88]
  409e08:	sub    edx,0xb80
  409e0e:	mov    DWORD PTR [rax+0xb90],edx
  409e14:	mov    rax,QWORD PTR [rbp-0x18]
  409e18:	mov    rax,QWORD PTR [rax]
  409e1b:	mov    rdx,QWORD PTR [rax+0xb88]
  409e22:	mov    rax,QWORD PTR [rbp-0x18]
  409e26:	mov    QWORD PTR [rax],rdx
  409e29:	jmp    409f66 <flatcc_builder_get_emit_context@@Base+0x1ce>
  409e2e:	mov    edi,0xb98
  409e33:	call   403240 <malloc@plt>
  409e38:	mov    QWORD PTR [rbp-0x8],rax
  409e3c:	cmp    QWORD PTR [rbp-0x8],0x0
  409e41:	jne    409e4d <flatcc_builder_get_emit_context@@Base+0xb5>
  409e43:	mov    eax,0xffffffff
  409e48:	jmp    409fb4 <flatcc_builder_get_emit_context@@Base+0x21c>
  409e4d:	mov    rax,QWORD PTR [rbp-0x18]
  409e51:	mov    rax,QWORD PTR [rax+0x38]
  409e55:	lea    rdx,[rax+0xb80]
  409e5c:	mov    rax,QWORD PTR [rbp-0x18]
  409e60:	mov    QWORD PTR [rax+0x38],rdx
  409e64:	mov    rax,QWORD PTR [rbp-0x18]
  409e68:	mov    rax,QWORD PTR [rax]
  409e6b:	test   rax,rax
  409e6e:	je     409eca <flatcc_builder_get_emit_context@@Base+0x132>
  409e70:	mov    rax,QWORD PTR [rbp-0x18]
  409e74:	mov    rdx,QWORD PTR [rax+0x8]
  409e78:	mov    rax,QWORD PTR [rbp-0x8]
  409e7c:	mov    QWORD PTR [rax+0xb88],rdx
  409e83:	mov    rax,QWORD PTR [rbp-0x18]
  409e87:	mov    rdx,QWORD PTR [rax]
  409e8a:	mov    rax,QWORD PTR [rbp-0x8]
  409e8e:	mov    QWORD PTR [rax+0xb80],rdx
  409e95:	mov    rax,QWORD PTR [rbp-0x18]
  409e99:	mov    rax,QWORD PTR [rax]
  409e9c:	mov    rdx,QWORD PTR [rbp-0x8]
  409ea0:	mov    QWORD PTR [rax+0xb88],rdx
  409ea7:	mov    rax,QWORD PTR [rbp-0x18]
  409eab:	mov    rax,QWORD PTR [rax+0x8]
  409eaf:	mov    rdx,QWORD PTR [rbp-0x8]
  409eb3:	mov    QWORD PTR [rax+0xb80],rdx
  409eba:	mov    rax,QWORD PTR [rbp-0x18]
  409ebe:	mov    rdx,QWORD PTR [rbp-0x8]
  409ec2:	mov    QWORD PTR [rax],rdx
  409ec5:	jmp    409f66 <flatcc_builder_get_emit_context@@Base+0x1ce>
  409eca:	mov    rax,QWORD PTR [rbp-0x18]
  409ece:	mov    rdx,QWORD PTR [rbp-0x8]
  409ed2:	mov    QWORD PTR [rax],rdx
  409ed5:	mov    rax,QWORD PTR [rbp-0x18]
  409ed9:	mov    rdx,QWORD PTR [rbp-0x8]
  409edd:	mov    QWORD PTR [rax+0x8],rdx
  409ee1:	mov    rax,QWORD PTR [rbp-0x8]
  409ee5:	mov    rdx,QWORD PTR [rbp-0x8]
  409ee9:	mov    QWORD PTR [rax+0xb80],rdx
  409ef0:	mov    rax,QWORD PTR [rbp-0x8]
  409ef4:	mov    rdx,QWORD PTR [rbp-0x8]
  409ef8:	mov    QWORD PTR [rax+0xb88],rdx
  409eff:	mov    rax,QWORD PTR [rbp-0x18]
  409f03:	mov    rax,QWORD PTR [rax]
  409f06:	lea    rdx,[rax+0x5c0]
  409f0d:	mov    rax,QWORD PTR [rbp-0x18]
  409f11:	mov    QWORD PTR [rax+0x10],rdx
  409f15:	mov    rax,QWORD PTR [rbp-0x18]
  409f19:	mov    rdx,QWORD PTR [rax+0x10]
  409f1d:	mov    rax,QWORD PTR [rbp-0x18]
  409f21:	mov    QWORD PTR [rax+0x20],rdx
  409f25:	mov    rax,QWORD PTR [rbp-0x18]
  409f29:	mov    QWORD PTR [rax+0x18],0x5c0
  409f31:	mov    rax,QWORD PTR [rbp-0x18]
  409f35:	mov    rax,QWORD PTR [rax+0x18]
  409f39:	mov    edx,0xb80
  409f3e:	sub    rdx,rax
  409f41:	mov    rax,QWORD PTR [rbp-0x18]
  409f45:	mov    QWORD PTR [rax+0x28],rdx
  409f49:	mov    rax,QWORD PTR [rbp-0x18]
  409f4d:	mov    rax,QWORD PTR [rax+0x18]
  409f51:	neg    eax
  409f53:	mov    edx,eax
  409f55:	mov    rax,QWORD PTR [rbp-0x8]
  409f59:	mov    DWORD PTR [rax+0xb90],edx
  409f5f:	mov    eax,0x0
  409f64:	jmp    409fb4 <flatcc_builder_get_emit_context@@Base+0x21c>
  409f66:	mov    rax,QWORD PTR [rbp-0x18]
  409f6a:	mov    rax,QWORD PTR [rax]
  409f6d:	lea    rdx,[rax+0xb80]
  409f74:	mov    rax,QWORD PTR [rbp-0x18]
  409f78:	mov    QWORD PTR [rax+0x10],rdx
  409f7c:	mov    rax,QWORD PTR [rbp-0x18]
  409f80:	mov    QWORD PTR [rax+0x18],0xb80
  409f88:	mov    rax,QWORD PTR [rbp-0x18]
  409f8c:	mov    rax,QWORD PTR [rax]
  409f8f:	mov    rax,QWORD PTR [rax+0xb80]
  409f96:	mov    edx,DWORD PTR [rax+0xb90]
  409f9c:	mov    rax,QWORD PTR [rbp-0x18]
  409fa0:	mov    rax,QWORD PTR [rax]
  409fa3:	sub    edx,0xb80
  409fa9:	mov    DWORD PTR [rax+0xb90],edx
  409faf:	mov    eax,0x0
  409fb4:	leave  
  409fb5:	ret    
  409fb6:	endbr64 
  409fba:	push   rbp
  409fbb:	mov    rbp,rsp
  409fbe:	sub    rsp,0x20
  409fc2:	mov    QWORD PTR [rbp-0x18],rdi
  409fc6:	mov    QWORD PTR [rbp-0x8],0x0
  409fce:	mov    rax,QWORD PTR [rbp-0x18]
  409fd2:	mov    rax,QWORD PTR [rax+0x8]
  409fd6:	test   rax,rax
  409fd9:	je     40a012 <flatcc_builder_get_emit_context@@Base+0x27a>
  409fdb:	mov    rax,QWORD PTR [rbp-0x18]
  409fdf:	mov    rax,QWORD PTR [rax+0x8]
  409fe3:	mov    rdx,QWORD PTR [rax+0xb80]
  409fea:	mov    rax,QWORD PTR [rbp-0x18]
  409fee:	mov    rax,QWORD PTR [rax]
  409ff1:	cmp    rdx,rax
  409ff4:	je     40a012 <flatcc_builder_get_emit_context@@Base+0x27a>
  409ff6:	mov    rax,QWORD PTR [rbp-0x18]
  409ffa:	mov    rax,QWORD PTR [rax+0x8]
  409ffe:	mov    rdx,QWORD PTR [rax+0xb80]
  40a005:	mov    rax,QWORD PTR [rbp-0x18]
  40a009:	mov    QWORD PTR [rax+0x8],rdx
  40a00d:	jmp    40a14c <flatcc_builder_get_emit_context@@Base+0x3b4>
  40a012:	mov    edi,0xb98
  40a017:	call   403240 <malloc@plt>
  40a01c:	mov    QWORD PTR [rbp-0x8],rax
  40a020:	cmp    QWORD PTR [rbp-0x8],0x0
  40a025:	jne    40a031 <flatcc_builder_get_emit_context@@Base+0x299>
  40a027:	mov    eax,0xffffffff
  40a02c:	jmp    40a199 <flatcc_builder_get_emit_context@@Base+0x401>
  40a031:	mov    rax,QWORD PTR [rbp-0x18]
  40a035:	mov    rax,QWORD PTR [rax+0x38]
  40a039:	lea    rdx,[rax+0xb80]
  40a040:	mov    rax,QWORD PTR [rbp-0x18]
  40a044:	mov    QWORD PTR [rax+0x38],rdx
  40a048:	mov    rax,QWORD PTR [rbp-0x18]
  40a04c:	mov    rax,QWORD PTR [rax+0x8]
  40a050:	test   rax,rax
  40a053:	je     40a0b0 <flatcc_builder_get_emit_context@@Base+0x318>
  40a055:	mov    rax,QWORD PTR [rbp-0x18]
  40a059:	mov    rdx,QWORD PTR [rax+0x8]
  40a05d:	mov    rax,QWORD PTR [rbp-0x8]
  40a061:	mov    QWORD PTR [rax+0xb88],rdx
  40a068:	mov    rax,QWORD PTR [rbp-0x18]
  40a06c:	mov    rdx,QWORD PTR [rax]
  40a06f:	mov    rax,QWORD PTR [rbp-0x8]
  40a073:	mov    QWORD PTR [rax+0xb80],rdx
  40a07a:	mov    rax,QWORD PTR [rbp-0x18]
  40a07e:	mov    rax,QWORD PTR [rax]
  40a081:	mov    rdx,QWORD PTR [rbp-0x8]
  40a085:	mov    QWORD PTR [rax+0xb88],rdx
  40a08c:	mov    rax,QWORD PTR [rbp-0x18]
  40a090:	mov    rax,QWORD PTR [rax+0x8]
  40a094:	mov    rdx,QWORD PTR [rbp-0x8]
  40a098:	mov    QWORD PTR [rax+0xb80],rdx
  40a09f:	mov    rax,QWORD PTR [rbp-0x18]
  40a0a3:	mov    rdx,QWORD PTR [rbp-0x8]
  40a0a7:	mov    QWORD PTR [rax+0x8],rdx
  40a0ab:	jmp    40a14c <flatcc_builder_get_emit_context@@Base+0x3b4>
  40a0b0:	mov    rax,QWORD PTR [rbp-0x18]
  40a0b4:	mov    rdx,QWORD PTR [rbp-0x8]
  40a0b8:	mov    QWORD PTR [rax],rdx
  40a0bb:	mov    rax,QWORD PTR [rbp-0x18]
  40a0bf:	mov    rdx,QWORD PTR [rbp-0x8]
  40a0c3:	mov    QWORD PTR [rax+0x8],rdx
  40a0c7:	mov    rax,QWORD PTR [rbp-0x8]
  40a0cb:	mov    rdx,QWORD PTR [rbp-0x8]
  40a0cf:	mov    QWORD PTR [rax+0xb80],rdx
  40a0d6:	mov    rax,QWORD PTR [rbp-0x8]
  40a0da:	mov    rdx,QWORD PTR [rbp-0x8]
  40a0de:	mov    QWORD PTR [rax+0xb88],rdx
  40a0e5:	mov    rax,QWORD PTR [rbp-0x18]
  40a0e9:	mov    rax,QWORD PTR [rax]
  40a0ec:	lea    rdx,[rax+0x5c0]
  40a0f3:	mov    rax,QWORD PTR [rbp-0x18]
  40a0f7:	mov    QWORD PTR [rax+0x10],rdx
  40a0fb:	mov    rax,QWORD PTR [rbp-0x18]
  40a0ff:	mov    rdx,QWORD PTR [rax+0x10]
  40a103:	mov    rax,QWORD PTR [rbp-0x18]
  40a107:	mov    QWORD PTR [rax+0x20],rdx
  40a10b:	mov    rax,QWORD PTR [rbp-0x18]
  40a10f:	mov    QWORD PTR [rax+0x18],0x5c0
  40a117:	mov    rax,QWORD PTR [rbp-0x18]
  40a11b:	mov    rax,QWORD PTR [rax+0x18]
  40a11f:	mov    edx,0xb80
  40a124:	sub    rdx,rax
  40a127:	mov    rax,QWORD PTR [rbp-0x18]
  40a12b:	mov    QWORD PTR [rax+0x28],rdx
  40a12f:	mov    rax,QWORD PTR [rbp-0x18]
  40a133:	mov    rax,QWORD PTR [rax+0x18]
  40a137:	neg    eax
  40a139:	mov    edx,eax
  40a13b:	mov    rax,QWORD PTR [rbp-0x8]
  40a13f:	mov    DWORD PTR [rax+0xb90],edx
  40a145:	mov    eax,0x0
  40a14a:	jmp    40a199 <flatcc_builder_get_emit_context@@Base+0x401>
  40a14c:	mov    rax,QWORD PTR [rbp-0x18]
  40a150:	mov    rax,QWORD PTR [rax+0x8]
  40a154:	mov    rdx,rax
  40a157:	mov    rax,QWORD PTR [rbp-0x18]
  40a15b:	mov    QWORD PTR [rax+0x20],rdx
  40a15f:	mov    rax,QWORD PTR [rbp-0x18]
  40a163:	mov    QWORD PTR [rax+0x28],0xb80
  40a16b:	mov    rax,QWORD PTR [rbp-0x18]
  40a16f:	mov    rax,QWORD PTR [rax+0x8]
  40a173:	mov    rax,QWORD PTR [rax+0xb88]
  40a17a:	mov    edx,DWORD PTR [rax+0xb90]
  40a180:	mov    rax,QWORD PTR [rbp-0x18]
  40a184:	mov    rax,QWORD PTR [rax+0x8]
  40a188:	add    edx,0xb80
  40a18e:	mov    DWORD PTR [rax+0xb90],edx
  40a194:	mov    eax,0x0
  40a199:	leave  
  40a19a:	ret    
  40a19b:	endbr64 
  40a19f:	push   rbp
  40a1a0:	mov    rbp,rsp
  40a1a3:	sub    rsp,0x30
  40a1a7:	mov    QWORD PTR [rbp-0x18],rdi
  40a1ab:	mov    QWORD PTR [rbp-0x20],rsi
  40a1af:	mov    QWORD PTR [rbp-0x28],rdx
  40a1b3:	mov    rax,QWORD PTR [rbp-0x28]
  40a1b7:	add    QWORD PTR [rbp-0x20],rax
  40a1bb:	jmp    40a25f <flatcc_builder_get_emit_context@@Base+0x4c7>
  40a1c0:	mov    rax,QWORD PTR [rbp-0x28]
  40a1c4:	mov    QWORD PTR [rbp-0x8],rax
  40a1c8:	mov    rax,QWORD PTR [rbp-0x18]
  40a1cc:	mov    rax,QWORD PTR [rax+0x18]
  40a1d0:	cmp    QWORD PTR [rbp-0x8],rax
  40a1d4:	jbe    40a200 <flatcc_builder_get_emit_context@@Base+0x468>
  40a1d6:	mov    rax,QWORD PTR [rbp-0x18]
  40a1da:	mov    rax,QWORD PTR [rax+0x18]
  40a1de:	mov    QWORD PTR [rbp-0x8],rax
  40a1e2:	cmp    QWORD PTR [rbp-0x8],0x0
  40a1e7:	jne    40a200 <flatcc_builder_get_emit_context@@Base+0x468>
  40a1e9:	mov    rax,QWORD PTR [rbp-0x18]
  40a1ed:	mov    rdi,rax
  40a1f0:	call   409dae <flatcc_builder_get_emit_context@@Base+0x16>
  40a1f5:	test   eax,eax
  40a1f7:	je     40a25f <flatcc_builder_get_emit_context@@Base+0x4c7>
  40a1f9:	mov    eax,0xffffffff
  40a1fe:	jmp    40a26f <flatcc_builder_get_emit_context@@Base+0x4d7>
  40a200:	mov    rax,QWORD PTR [rbp-0x18]
  40a204:	mov    rax,QWORD PTR [rax+0x10]
  40a208:	mov    rdx,QWORD PTR [rbp-0x8]
  40a20c:	neg    rdx
  40a20f:	add    rdx,rax
  40a212:	mov    rax,QWORD PTR [rbp-0x18]
  40a216:	mov    QWORD PTR [rax+0x10],rdx
  40a21a:	mov    rax,QWORD PTR [rbp-0x18]
  40a21e:	mov    rax,QWORD PTR [rax+0x18]
  40a222:	sub    rax,QWORD PTR [rbp-0x8]
  40a226:	mov    rdx,rax
  40a229:	mov    rax,QWORD PTR [rbp-0x18]
  40a22d:	mov    QWORD PTR [rax+0x18],rdx
  40a231:	mov    rax,QWORD PTR [rbp-0x8]
  40a235:	neg    rax
  40a238:	add    QWORD PTR [rbp-0x20],rax
  40a23c:	mov    rax,QWORD PTR [rbp-0x8]
  40a240:	sub    QWORD PTR [rbp-0x28],rax
  40a244:	mov    rax,QWORD PTR [rbp-0x18]
  40a248:	mov    rax,QWORD PTR [rax+0x10]
  40a24c:	mov    rdx,QWORD PTR [rbp-0x8]
  40a250:	mov    rcx,QWORD PTR [rbp-0x20]
  40a254:	mov    rsi,rcx
  40a257:	mov    rdi,rax
  40a25a:	call   403230 <memcpy@plt>
  40a25f:	cmp    QWORD PTR [rbp-0x28],0x0
  40a264:	jne    40a1c0 <flatcc_builder_get_emit_context@@Base+0x428>
  40a26a:	mov    eax,0x0
  40a26f:	leave  
  40a270:	ret    
  40a271:	endbr64 
  40a275:	push   rbp
  40a276:	mov    rbp,rsp
  40a279:	sub    rsp,0x30
  40a27d:	mov    QWORD PTR [rbp-0x18],rdi
  40a281:	mov    QWORD PTR [rbp-0x20],rsi
  40a285:	mov    QWORD PTR [rbp-0x28],rdx
  40a289:	jmp    40a327 <flatcc_builder_get_emit_context@@Base+0x58f>
  40a28e:	mov    rax,QWORD PTR [rbp-0x28]
  40a292:	mov    QWORD PTR [rbp-0x8],rax
  40a296:	mov    rax,QWORD PTR [rbp-0x18]
  40a29a:	mov    rax,QWORD PTR [rax+0x28]
  40a29e:	cmp    QWORD PTR [rbp-0x8],rax
  40a2a2:	jbe    40a2ce <flatcc_builder_get_emit_context@@Base+0x536>
  40a2a4:	mov    rax,QWORD PTR [rbp-0x18]
  40a2a8:	mov    rax,QWORD PTR [rax+0x28]
  40a2ac:	mov    QWORD PTR [rbp-0x8],rax
  40a2b0:	cmp    QWORD PTR [rbp-0x8],0x0
  40a2b5:	jne    40a2ce <flatcc_builder_get_emit_context@@Base+0x536>
  40a2b7:	mov    rax,QWORD PTR [rbp-0x18]
  40a2bb:	mov    rdi,rax
  40a2be:	call   409fb6 <flatcc_builder_get_emit_context@@Base+0x21e>
  40a2c3:	test   eax,eax
  40a2c5:	je     40a327 <flatcc_builder_get_emit_context@@Base+0x58f>
  40a2c7:	mov    eax,0xffffffff
  40a2cc:	jmp    40a337 <flatcc_builder_get_emit_context@@Base+0x59f>
  40a2ce:	mov    rax,QWORD PTR [rbp-0x18]
  40a2d2:	mov    rax,QWORD PTR [rax+0x20]
  40a2d6:	mov    rdx,QWORD PTR [rbp-0x8]
  40a2da:	mov    rcx,QWORD PTR [rbp-0x20]
  40a2de:	mov    rsi,rcx
  40a2e1:	mov    rdi,rax
  40a2e4:	call   403230 <memcpy@plt>
  40a2e9:	mov    rax,QWORD PTR [rbp-0x8]
  40a2ed:	sub    QWORD PTR [rbp-0x28],rax
  40a2f1:	mov    rax,QWORD PTR [rbp-0x8]
  40a2f5:	add    QWORD PTR [rbp-0x20],rax
  40a2f9:	mov    rax,QWORD PTR [rbp-0x18]
  40a2fd:	mov    rdx,QWORD PTR [rax+0x20]
  40a301:	mov    rax,QWORD PTR [rbp-0x8]
  40a305:	add    rdx,rax
  40a308:	mov    rax,QWORD PTR [rbp-0x18]
  40a30c:	mov    QWORD PTR [rax+0x20],rdx
  40a310:	mov    rax,QWORD PTR [rbp-0x18]
  40a314:	mov    rax,QWORD PTR [rax+0x28]
  40a318:	sub    rax,QWORD PTR [rbp-0x8]
  40a31c:	mov    rdx,rax
  40a31f:	mov    rax,QWORD PTR [rbp-0x18]
  40a323:	mov    QWORD PTR [rax+0x28],rdx
  40a327:	cmp    QWORD PTR [rbp-0x28],0x0
  40a32c:	jne    40a28e <flatcc_builder_get_emit_context@@Base+0x4f6>
  40a332:	mov    eax,0x0
  40a337:	leave  
  40a338:	ret    

000000000040a339 <flatcc_emitter_recycle_page@@Base>:
  40a339:	endbr64 
  40a33d:	push   rbp
  40a33e:	mov    rbp,rsp
  40a341:	mov    QWORD PTR [rbp-0x8],rdi
  40a345:	mov    QWORD PTR [rbp-0x10],rsi
  40a349:	mov    rax,QWORD PTR [rbp-0x8]
  40a34d:	mov    rax,QWORD PTR [rax]
  40a350:	cmp    QWORD PTR [rbp-0x10],rax
  40a354:	je     40a364 <flatcc_emitter_recycle_page@@Base+0x2b>
  40a356:	mov    rax,QWORD PTR [rbp-0x8]
  40a35a:	mov    rax,QWORD PTR [rax+0x8]
  40a35e:	cmp    QWORD PTR [rbp-0x10],rax
  40a362:	jne    40a36e <flatcc_emitter_recycle_page@@Base+0x35>
  40a364:	mov    eax,0xffffffff
  40a369:	jmp    40a404 <flatcc_emitter_recycle_page@@Base+0xcb>
  40a36e:	mov    rax,QWORD PTR [rbp-0x10]
  40a372:	mov    rax,QWORD PTR [rax+0xb80]
  40a379:	mov    rdx,QWORD PTR [rbp-0x10]
  40a37d:	mov    rdx,QWORD PTR [rdx+0xb88]
  40a384:	mov    QWORD PTR [rax+0xb88],rdx
  40a38b:	mov    rax,QWORD PTR [rbp-0x10]
  40a38f:	mov    rax,QWORD PTR [rax+0xb88]
  40a396:	mov    rdx,QWORD PTR [rbp-0x10]
  40a39a:	mov    rdx,QWORD PTR [rdx+0xb80]
  40a3a1:	mov    QWORD PTR [rax+0xb80],rdx
  40a3a8:	mov    rax,QWORD PTR [rbp-0x8]
  40a3ac:	mov    rax,QWORD PTR [rax]
  40a3af:	mov    rdx,QWORD PTR [rax+0xb88]
  40a3b6:	mov    rax,QWORD PTR [rbp-0x10]
  40a3ba:	mov    QWORD PTR [rax+0xb88],rdx
  40a3c1:	mov    rax,QWORD PTR [rbp-0x8]
  40a3c5:	mov    rdx,QWORD PTR [rax]
  40a3c8:	mov    rax,QWORD PTR [rbp-0x10]
  40a3cc:	mov    QWORD PTR [rax+0xb80],rdx
  40a3d3:	mov    rax,QWORD PTR [rbp-0x10]
  40a3d7:	mov    rax,QWORD PTR [rax+0xb88]
  40a3de:	mov    rdx,QWORD PTR [rbp-0x10]
  40a3e2:	mov    QWORD PTR [rax+0xb80],rdx
  40a3e9:	mov    rax,QWORD PTR [rbp-0x10]
  40a3ed:	mov    rax,QWORD PTR [rax+0xb80]
  40a3f4:	mov    rdx,QWORD PTR [rbp-0x10]
  40a3f8:	mov    QWORD PTR [rax+0xb88],rdx
  40a3ff:	mov    eax,0x0
  40a404:	pop    rbp
  40a405:	ret    

000000000040a406 <flatcc_emitter_reset@@Base>:
  40a406:	endbr64 
  40a40a:	push   rbp
  40a40b:	mov    rbp,rsp
  40a40e:	sub    rsp,0x20
  40a412:	mov    QWORD PTR [rbp-0x18],rdi
  40a416:	mov    rax,QWORD PTR [rbp-0x18]
  40a41a:	mov    rax,QWORD PTR [rax]
  40a41d:	mov    QWORD PTR [rbp-0x8],rax
  40a421:	mov    rax,QWORD PTR [rbp-0x18]
  40a425:	mov    rax,QWORD PTR [rax]
  40a428:	test   rax,rax
  40a42b:	je     40a595 <flatcc_emitter_reset@@Base+0x18f>
  40a431:	mov    rax,QWORD PTR [rbp-0x18]
  40a435:	mov    rdx,QWORD PTR [rax]
  40a438:	mov    rax,QWORD PTR [rbp-0x18]
  40a43c:	mov    QWORD PTR [rax+0x8],rdx
  40a440:	mov    rax,QWORD PTR [rbp-0x18]
  40a444:	mov    rax,QWORD PTR [rax]
  40a447:	lea    rdx,[rax+0x5c0]
  40a44e:	mov    rax,QWORD PTR [rbp-0x18]
  40a452:	mov    QWORD PTR [rax+0x10],rdx
  40a456:	mov    rax,QWORD PTR [rbp-0x18]
  40a45a:	mov    rdx,QWORD PTR [rax+0x10]
  40a45e:	mov    rax,QWORD PTR [rbp-0x18]
  40a462:	mov    QWORD PTR [rax+0x20],rdx
  40a466:	mov    rax,QWORD PTR [rbp-0x18]
  40a46a:	mov    QWORD PTR [rax+0x18],0x5c0
  40a472:	mov    rax,QWORD PTR [rbp-0x18]
  40a476:	mov    QWORD PTR [rax+0x28],0x5c0
  40a47e:	mov    rax,QWORD PTR [rbp-0x18]
  40a482:	mov    rax,QWORD PTR [rax+0x18]
  40a486:	mov    edx,eax
  40a488:	mov    rax,QWORD PTR [rbp-0x18]
  40a48c:	mov    rax,QWORD PTR [rax]
  40a48f:	neg    edx
  40a491:	mov    DWORD PTR [rax+0xb90],edx
  40a497:	mov    rax,QWORD PTR [rbp-0x18]
  40a49b:	mov    rax,QWORD PTR [rax+0x40]
  40a49f:	test   rax,rax
  40a4a2:	jne    40a4b4 <flatcc_emitter_reset@@Base+0xae>
  40a4a4:	mov    rax,QWORD PTR [rbp-0x18]
  40a4a8:	mov    rdx,QWORD PTR [rax+0x30]
  40a4ac:	mov    rax,QWORD PTR [rbp-0x18]
  40a4b0:	mov    QWORD PTR [rax+0x40],rdx
  40a4b4:	mov    rax,QWORD PTR [rbp-0x18]
  40a4b8:	mov    rdx,QWORD PTR [rax+0x40]
  40a4bc:	mov    rax,rdx
  40a4bf:	add    rax,rax
  40a4c2:	add    rax,rdx
  40a4c5:	shr    rax,0x2
  40a4c9:	mov    rdx,rax
  40a4cc:	mov    rax,QWORD PTR [rbp-0x18]
  40a4d0:	mov    rax,QWORD PTR [rax+0x30]
  40a4d4:	shr    rax,0x2
  40a4d8:	add    rdx,rax
  40a4db:	mov    rax,QWORD PTR [rbp-0x18]
  40a4df:	mov    QWORD PTR [rax+0x40],rdx
  40a4e3:	mov    rax,QWORD PTR [rbp-0x18]
  40a4e7:	mov    QWORD PTR [rax+0x30],0x0
  40a4ef:	jmp    40a55b <flatcc_emitter_reset@@Base+0x155>
  40a4f1:	mov    rax,QWORD PTR [rbp-0x18]
  40a4f5:	mov    rax,QWORD PTR [rax+0x8]
  40a4f9:	mov    rax,QWORD PTR [rax+0xb80]
  40a500:	mov    QWORD PTR [rbp-0x8],rax
  40a504:	mov    rax,QWORD PTR [rbp-0x18]
  40a508:	mov    rax,QWORD PTR [rax+0x8]
  40a50c:	mov    rdx,QWORD PTR [rbp-0x8]
  40a510:	mov    rdx,QWORD PTR [rdx+0xb80]
  40a517:	mov    QWORD PTR [rax+0xb80],rdx
  40a51e:	mov    rax,QWORD PTR [rbp-0x8]
  40a522:	mov    rax,QWORD PTR [rax+0xb80]
  40a529:	mov    rdx,QWORD PTR [rbp-0x18]
  40a52d:	mov    rdx,QWORD PTR [rdx+0x8]
  40a531:	mov    QWORD PTR [rax+0xb88],rdx
  40a538:	mov    rax,QWORD PTR [rbp-0x8]
  40a53c:	mov    rdi,rax
  40a53f:	call   403160 <free@plt>
  40a544:	mov    rax,QWORD PTR [rbp-0x18]
  40a548:	mov    rax,QWORD PTR [rax+0x38]
  40a54c:	lea    rdx,[rax-0xb80]
  40a553:	mov    rax,QWORD PTR [rbp-0x18]
  40a557:	mov    QWORD PTR [rax+0x38],rdx
  40a55b:	mov    rax,QWORD PTR [rbp-0x18]
  40a55f:	mov    rax,QWORD PTR [rax+0x40]
  40a563:	lea    rdx,[rax+rax*1]
  40a567:	mov    rax,QWORD PTR [rbp-0x18]
  40a56b:	mov    rax,QWORD PTR [rax+0x38]
  40a56f:	cmp    rdx,rax
  40a572:	jae    40a596 <flatcc_emitter_reset@@Base+0x190>
  40a574:	mov    rax,QWORD PTR [rbp-0x18]
  40a578:	mov    rax,QWORD PTR [rax+0x8]
  40a57c:	mov    rdx,QWORD PTR [rax+0xb80]
  40a583:	mov    rax,QWORD PTR [rbp-0x18]
  40a587:	mov    rax,QWORD PTR [rax]
  40a58a:	cmp    rdx,rax
  40a58d:	jne    40a4f1 <flatcc_emitter_reset@@Base+0xeb>
  40a593:	jmp    40a596 <flatcc_emitter_reset@@Base+0x190>
  40a595:	nop
  40a596:	leave  
  40a597:	ret    

000000000040a598 <flatcc_emitter_clear@@Base>:
  40a598:	endbr64 
  40a59c:	push   rbp
  40a59d:	mov    rbp,rsp
  40a5a0:	sub    rsp,0x20
  40a5a4:	mov    QWORD PTR [rbp-0x18],rdi
  40a5a8:	mov    rax,QWORD PTR [rbp-0x18]
  40a5ac:	mov    rax,QWORD PTR [rax]
  40a5af:	mov    QWORD PTR [rbp-0x8],rax
  40a5b3:	cmp    QWORD PTR [rbp-0x8],0x0
  40a5b8:	je     40a628 <flatcc_emitter_clear@@Base+0x90>
  40a5ba:	mov    rax,QWORD PTR [rbp-0x8]
  40a5be:	mov    rax,QWORD PTR [rax+0xb88]
  40a5c5:	mov    QWORD PTR [rax+0xb80],0x0
  40a5d0:	jmp    40a5f4 <flatcc_emitter_clear@@Base+0x5c>
  40a5d2:	mov    rax,QWORD PTR [rbp-0x8]
  40a5d6:	mov    rax,QWORD PTR [rax+0xb80]
  40a5dd:	mov    QWORD PTR [rbp-0x8],rax
  40a5e1:	mov    rax,QWORD PTR [rbp-0x8]
  40a5e5:	mov    rax,QWORD PTR [rax+0xb88]
  40a5ec:	mov    rdi,rax
  40a5ef:	call   403160 <free@plt>
  40a5f4:	mov    rax,QWORD PTR [rbp-0x8]
  40a5f8:	mov    rax,QWORD PTR [rax+0xb80]
  40a5ff:	test   rax,rax
  40a602:	jne    40a5d2 <flatcc_emitter_clear@@Base+0x3a>
  40a604:	mov    rax,QWORD PTR [rbp-0x8]
  40a608:	mov    rdi,rax
  40a60b:	call   403160 <free@plt>
  40a610:	mov    rax,QWORD PTR [rbp-0x18]
  40a614:	mov    edx,0x48
  40a619:	mov    esi,0x0
  40a61e:	mov    rdi,rax
  40a621:	call   4031f0 <memset@plt>
  40a626:	jmp    40a629 <flatcc_emitter_clear@@Base+0x91>
  40a628:	nop
  40a629:	leave  
  40a62a:	ret    

000000000040a62b <flatcc_emitter@@Base>:
  40a62b:	endbr64 
  40a62f:	push   rbp
  40a630:	mov    rbp,rsp
  40a633:	sub    rsp,0x30
  40a637:	mov    QWORD PTR [rbp-0x18],rdi
  40a63b:	mov    QWORD PTR [rbp-0x20],rsi
  40a63f:	mov    DWORD PTR [rbp-0x24],edx
  40a642:	mov    DWORD PTR [rbp-0x28],ecx
  40a645:	mov    QWORD PTR [rbp-0x30],r8
  40a649:	mov    rax,QWORD PTR [rbp-0x18]
  40a64d:	mov    QWORD PTR [rbp-0x8],rax
  40a651:	mov    rax,QWORD PTR [rbp-0x8]
  40a655:	mov    rdx,QWORD PTR [rax+0x30]
  40a659:	mov    rax,QWORD PTR [rbp-0x30]
  40a65d:	add    rdx,rax
  40a660:	mov    rax,QWORD PTR [rbp-0x8]
  40a664:	mov    QWORD PTR [rax+0x30],rdx
  40a668:	cmp    DWORD PTR [rbp-0x28],0x0
  40a66c:	jns    40a714 <flatcc_emitter@@Base+0xe9>
  40a672:	mov    rax,QWORD PTR [rbp-0x8]
  40a676:	mov    rax,QWORD PTR [rax+0x18]
  40a67a:	cmp    QWORD PTR [rbp-0x30],rax
  40a67e:	ja     40a6c2 <flatcc_emitter@@Base+0x97>
  40a680:	mov    rax,QWORD PTR [rbp-0x8]
  40a684:	mov    rax,QWORD PTR [rax+0x10]
  40a688:	mov    rdx,QWORD PTR [rbp-0x30]
  40a68c:	neg    rdx
  40a68f:	add    rdx,rax
  40a692:	mov    rax,QWORD PTR [rbp-0x8]
  40a696:	mov    QWORD PTR [rax+0x10],rdx
  40a69a:	mov    rax,QWORD PTR [rbp-0x8]
  40a69e:	mov    rax,QWORD PTR [rax+0x18]
  40a6a2:	sub    rax,QWORD PTR [rbp-0x30]
  40a6a6:	mov    rdx,rax
  40a6a9:	mov    rax,QWORD PTR [rbp-0x8]
  40a6ad:	mov    QWORD PTR [rax+0x18],rdx
  40a6b1:	mov    rax,QWORD PTR [rbp-0x8]
  40a6b5:	mov    rax,QWORD PTR [rax+0x10]
  40a6b9:	mov    QWORD PTR [rbp-0x10],rax
  40a6bd:	jmp    40a7a0 <flatcc_emitter@@Base+0x175>
  40a6c2:	mov    eax,DWORD PTR [rbp-0x24]
  40a6c5:	cdqe   
  40a6c7:	shl    rax,0x4
  40a6cb:	add    QWORD PTR [rbp-0x20],rax
  40a6cf:	jmp    40a702 <flatcc_emitter@@Base+0xd7>
  40a6d1:	sub    QWORD PTR [rbp-0x20],0x10
  40a6d6:	mov    rax,QWORD PTR [rbp-0x20]
  40a6da:	mov    rdx,QWORD PTR [rax+0x8]
  40a6de:	mov    rax,QWORD PTR [rbp-0x20]
  40a6e2:	mov    rcx,QWORD PTR [rax]
  40a6e5:	mov    rax,QWORD PTR [rbp-0x8]
  40a6e9:	mov    rsi,rcx
  40a6ec:	mov    rdi,rax
  40a6ef:	call   40a19b <flatcc_builder_get_emit_context@@Base+0x403>
  40a6f4:	test   eax,eax
  40a6f6:	je     40a702 <flatcc_emitter@@Base+0xd7>
  40a6f8:	mov    eax,0xffffffff
  40a6fd:	jmp    40a7e3 <flatcc_emitter@@Base+0x1b8>
  40a702:	mov    eax,DWORD PTR [rbp-0x24]
  40a705:	lea    edx,[rax-0x1]
  40a708:	mov    DWORD PTR [rbp-0x24],edx
  40a70b:	test   eax,eax
  40a70d:	jne    40a6d1 <flatcc_emitter@@Base+0xa6>
  40a70f:	jmp    40a799 <flatcc_emitter@@Base+0x16e>
  40a714:	mov    rax,QWORD PTR [rbp-0x8]
  40a718:	mov    rax,QWORD PTR [rax+0x28]
  40a71c:	cmp    QWORD PTR [rbp-0x30],rax
  40a720:	ja     40a78c <flatcc_emitter@@Base+0x161>
  40a722:	mov    rax,QWORD PTR [rbp-0x8]
  40a726:	mov    rax,QWORD PTR [rax+0x20]
  40a72a:	mov    QWORD PTR [rbp-0x10],rax
  40a72e:	mov    rax,QWORD PTR [rbp-0x8]
  40a732:	mov    rdx,QWORD PTR [rax+0x20]
  40a736:	mov    rax,QWORD PTR [rbp-0x30]
  40a73a:	add    rdx,rax
  40a73d:	mov    rax,QWORD PTR [rbp-0x8]
  40a741:	mov    QWORD PTR [rax+0x20],rdx
  40a745:	mov    rax,QWORD PTR [rbp-0x8]
  40a749:	mov    rax,QWORD PTR [rax+0x28]
  40a74d:	sub    rax,QWORD PTR [rbp-0x30]
  40a751:	mov    rdx,rax
  40a754:	mov    rax,QWORD PTR [rbp-0x8]
  40a758:	mov    QWORD PTR [rax+0x28],rdx
  40a75c:	jmp    40a7a0 <flatcc_emitter@@Base+0x175>
  40a75e:	mov    rax,QWORD PTR [rbp-0x20]
  40a762:	mov    rdx,QWORD PTR [rax+0x8]
  40a766:	mov    rax,QWORD PTR [rbp-0x20]
  40a76a:	mov    rcx,QWORD PTR [rax]
  40a76d:	mov    rax,QWORD PTR [rbp-0x8]
  40a771:	mov    rsi,rcx
  40a774:	mov    rdi,rax
  40a777:	call   40a271 <flatcc_builder_get_emit_context@@Base+0x4d9>
  40a77c:	test   eax,eax
  40a77e:	je     40a787 <flatcc_emitter@@Base+0x15c>
  40a780:	mov    eax,0xffffffff
  40a785:	jmp    40a7e3 <flatcc_emitter@@Base+0x1b8>
  40a787:	add    QWORD PTR [rbp-0x20],0x10
  40a78c:	mov    eax,DWORD PTR [rbp-0x24]
  40a78f:	lea    edx,[rax-0x1]
  40a792:	mov    DWORD PTR [rbp-0x24],edx
  40a795:	test   eax,eax
  40a797:	jne    40a75e <flatcc_emitter@@Base+0x133>
  40a799:	mov    eax,0x0
  40a79e:	jmp    40a7e3 <flatcc_emitter@@Base+0x1b8>
  40a7a0:	jmp    40a7d1 <flatcc_emitter@@Base+0x1a6>
  40a7a2:	mov    rax,QWORD PTR [rbp-0x20]
  40a7a6:	mov    rdx,QWORD PTR [rax+0x8]
  40a7aa:	mov    rax,QWORD PTR [rbp-0x20]
  40a7ae:	mov    rcx,QWORD PTR [rax]
  40a7b1:	mov    rax,QWORD PTR [rbp-0x10]
  40a7b5:	mov    rsi,rcx
  40a7b8:	mov    rdi,rax
  40a7bb:	call   403230 <memcpy@plt>
  40a7c0:	mov    rax,QWORD PTR [rbp-0x20]
  40a7c4:	mov    rax,QWORD PTR [rax+0x8]
  40a7c8:	add    QWORD PTR [rbp-0x10],rax
  40a7cc:	add    QWORD PTR [rbp-0x20],0x10
  40a7d1:	mov    eax,DWORD PTR [rbp-0x24]
  40a7d4:	lea    edx,[rax-0x1]
  40a7d7:	mov    DWORD PTR [rbp-0x24],edx
  40a7da:	test   eax,eax
  40a7dc:	jne    40a7a2 <flatcc_emitter@@Base+0x177>
  40a7de:	mov    eax,0x0
  40a7e3:	leave  
  40a7e4:	ret    

000000000040a7e5 <flatcc_emitter_copy_buffer@@Base>:
  40a7e5:	endbr64 
  40a7e9:	push   rbp
  40a7ea:	mov    rbp,rsp
  40a7ed:	sub    rsp,0x30
  40a7f1:	mov    QWORD PTR [rbp-0x18],rdi
  40a7f5:	mov    QWORD PTR [rbp-0x20],rsi
  40a7f9:	mov    QWORD PTR [rbp-0x28],rdx
  40a7fd:	mov    rax,QWORD PTR [rbp-0x18]
  40a801:	mov    rax,QWORD PTR [rax+0x30]
  40a805:	cmp    QWORD PTR [rbp-0x28],rax
  40a809:	jae    40a815 <flatcc_emitter_copy_buffer@@Base+0x30>
  40a80b:	mov    eax,0x0
  40a810:	jmp    40a919 <flatcc_emitter_copy_buffer@@Base+0x134>
  40a815:	mov    rax,QWORD PTR [rbp-0x18]
  40a819:	mov    rax,QWORD PTR [rax]
  40a81c:	test   rax,rax
  40a81f:	jne    40a82b <flatcc_emitter_copy_buffer@@Base+0x46>
  40a821:	mov    eax,0x0
  40a826:	jmp    40a919 <flatcc_emitter_copy_buffer@@Base+0x134>
  40a82b:	mov    rax,QWORD PTR [rbp-0x18]
  40a82f:	mov    rdx,QWORD PTR [rax]
  40a832:	mov    rax,QWORD PTR [rbp-0x18]
  40a836:	mov    rax,QWORD PTR [rax+0x8]
  40a83a:	cmp    rdx,rax
  40a83d:	jne    40a867 <flatcc_emitter_copy_buffer@@Base+0x82>
  40a83f:	mov    rax,QWORD PTR [rbp-0x18]
  40a843:	mov    rdx,QWORD PTR [rax+0x30]
  40a847:	mov    rax,QWORD PTR [rbp-0x18]
  40a84b:	mov    rcx,QWORD PTR [rax+0x10]
  40a84f:	mov    rax,QWORD PTR [rbp-0x20]
  40a853:	mov    rsi,rcx
  40a856:	mov    rdi,rax
  40a859:	call   403230 <memcpy@plt>
  40a85e:	mov    rax,QWORD PTR [rbp-0x20]
  40a862:	jmp    40a919 <flatcc_emitter_copy_buffer@@Base+0x134>
  40a867:	mov    rax,QWORD PTR [rbp-0x18]
  40a86b:	mov    rax,QWORD PTR [rax+0x18]
  40a86f:	mov    edx,0xb80
  40a874:	sub    rdx,rax
  40a877:	mov    rax,rdx
  40a87a:	mov    QWORD PTR [rbp-0x8],rax
  40a87e:	mov    rax,QWORD PTR [rbp-0x18]
  40a882:	mov    rcx,QWORD PTR [rax+0x10]
  40a886:	mov    rdx,QWORD PTR [rbp-0x8]
  40a88a:	mov    rax,QWORD PTR [rbp-0x20]
  40a88e:	mov    rsi,rcx
  40a891:	mov    rdi,rax
  40a894:	call   403230 <memcpy@plt>
  40a899:	mov    rax,QWORD PTR [rbp-0x8]
  40a89d:	add    QWORD PTR [rbp-0x20],rax
  40a8a1:	mov    rax,QWORD PTR [rbp-0x18]
  40a8a5:	mov    rax,QWORD PTR [rax]
  40a8a8:	mov    rax,QWORD PTR [rax+0xb80]
  40a8af:	mov    QWORD PTR [rbp-0x10],rax
  40a8b3:	jmp    40a8e4 <flatcc_emitter_copy_buffer@@Base+0xff>
  40a8b5:	mov    rcx,QWORD PTR [rbp-0x10]
  40a8b9:	mov    rax,QWORD PTR [rbp-0x20]
  40a8bd:	mov    edx,0xb80
  40a8c2:	mov    rsi,rcx
  40a8c5:	mov    rdi,rax
  40a8c8:	call   403230 <memcpy@plt>
  40a8cd:	add    QWORD PTR [rbp-0x20],0xb80
  40a8d5:	mov    rax,QWORD PTR [rbp-0x10]
  40a8d9:	mov    rax,QWORD PTR [rax+0xb80]
  40a8e0:	mov    QWORD PTR [rbp-0x10],rax
  40a8e4:	mov    rax,QWORD PTR [rbp-0x18]
  40a8e8:	mov    rax,QWORD PTR [rax+0x8]
  40a8ec:	cmp    QWORD PTR [rbp-0x10],rax
  40a8f0:	jne    40a8b5 <flatcc_emitter_copy_buffer@@Base+0xd0>
  40a8f2:	mov    rax,QWORD PTR [rbp-0x18]
  40a8f6:	mov    rax,QWORD PTR [rax+0x28]
  40a8fa:	mov    edx,0xb80
  40a8ff:	sub    rdx,rax
  40a902:	mov    rcx,QWORD PTR [rbp-0x10]
  40a906:	mov    rax,QWORD PTR [rbp-0x20]
  40a90a:	mov    rsi,rcx
  40a90d:	mov    rdi,rax
  40a910:	call   403230 <memcpy@plt>
  40a915:	mov    rax,QWORD PTR [rbp-0x20]
  40a919:	leave  
  40a91a:	ret    
  40a91b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a920 <__libc_csu_init@@Base>:
  40a920:	endbr64 
  40a924:	push   r15
  40a926:	lea    r15,[rip+0x54e3]        # 40fe10 <flatcc_builder_padding_base@@Base+0x47d0>
  40a92d:	push   r14
  40a92f:	mov    r14,rdx
  40a932:	push   r13
  40a934:	mov    r13,rsi
  40a937:	push   r12
  40a939:	mov    r12d,edi
  40a93c:	push   rbp
  40a93d:	lea    rbp,[rip+0x54d4]        # 40fe18 <flatcc_builder_padding_base@@Base+0x47d8>
  40a944:	push   rbx
  40a945:	sub    rbp,r15
  40a948:	sub    rsp,0x8
  40a94c:	call   403000 <free@plt-0x160>
  40a951:	sar    rbp,0x3
  40a955:	je     40a976 <__libc_csu_init@@Base+0x56>
  40a957:	xor    ebx,ebx
  40a959:	nop    DWORD PTR [rax+0x0]
  40a960:	mov    rdx,r14
  40a963:	mov    rsi,r13
  40a966:	mov    edi,r12d
  40a969:	call   QWORD PTR [r15+rbx*8]
  40a96d:	add    rbx,0x1
  40a971:	cmp    rbp,rbx
  40a974:	jne    40a960 <__libc_csu_init@@Base+0x40>
  40a976:	add    rsp,0x8
  40a97a:	pop    rbx
  40a97b:	pop    rbp
  40a97c:	pop    r12
  40a97e:	pop    r13
  40a980:	pop    r14
  40a982:	pop    r15
  40a984:	ret    
  40a985:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040a990 <__libc_csu_fini@@Base>:
  40a990:	endbr64 
  40a994:	ret    

Disassembly of section .fini:

000000000040a998 <.fini>:
  40a998:	endbr64 
  40a99c:	sub    rsp,0x8
  40a9a0:	add    rsp,0x8
  40a9a4:	ret    
