
../repos/sgerbino-table-2fdd8d0/bin/table_validator_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x6fe9]        # 409ff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <__snprintf_chk@plt-0xfa>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <.plt>:
  403020:	push   QWORD PTR [rip+0x6fe2]        # 40a008 <_IO_stdin_used@@Base+0x3008>
  403026:	bnd jmp QWORD PTR [rip+0x6fe3]        # 40a010 <_IO_stdin_used@@Base+0x3010>
  40302d:	nop    DWORD PTR [rax]
  403030:	endbr64 
  403034:	push   0x0
  403039:	bnd jmp 403020 <__snprintf_chk@plt-0xf0>
  40303f:	nop
  403040:	endbr64 
  403044:	push   0x1
  403049:	bnd jmp 403020 <__snprintf_chk@plt-0xf0>
  40304f:	nop
  403050:	endbr64 
  403054:	push   0x2
  403059:	bnd jmp 403020 <__snprintf_chk@plt-0xf0>
  40305f:	nop
  403060:	endbr64 
  403064:	push   0x3
  403069:	bnd jmp 403020 <__snprintf_chk@plt-0xf0>
  40306f:	nop
  403070:	endbr64 
  403074:	push   0x4
  403079:	bnd jmp 403020 <__snprintf_chk@plt-0xf0>
  40307f:	nop
  403080:	endbr64 
  403084:	push   0x5
  403089:	bnd jmp 403020 <__snprintf_chk@plt-0xf0>
  40308f:	nop
  403090:	endbr64 
  403094:	push   0x6
  403099:	bnd jmp 403020 <__snprintf_chk@plt-0xf0>
  40309f:	nop
  4030a0:	endbr64 
  4030a4:	push   0x7
  4030a9:	bnd jmp 403020 <__snprintf_chk@plt-0xf0>
  4030af:	nop
  4030b0:	endbr64 
  4030b4:	push   0x8
  4030b9:	bnd jmp 403020 <__snprintf_chk@plt-0xf0>
  4030bf:	nop
  4030c0:	endbr64 
  4030c4:	push   0x9
  4030c9:	bnd jmp 403020 <__snprintf_chk@plt-0xf0>
  4030cf:	nop
  4030d0:	endbr64 
  4030d4:	push   0xa
  4030d9:	bnd jmp 403020 <__snprintf_chk@plt-0xf0>
  4030df:	nop
  4030e0:	endbr64 
  4030e4:	push   0xb
  4030e9:	bnd jmp 403020 <__snprintf_chk@plt-0xf0>
  4030ef:	nop
  4030f0:	endbr64 
  4030f4:	push   0xc
  4030f9:	bnd jmp 403020 <__snprintf_chk@plt-0xf0>
  4030ff:	nop
  403100:	endbr64 
  403104:	push   0xd
  403109:	bnd jmp 403020 <__snprintf_chk@plt-0xf0>
  40310f:	nop

Disassembly of section .plt.sec:

0000000000403110 <__snprintf_chk@plt>:
  403110:	endbr64 
  403114:	bnd jmp QWORD PTR [rip+0x6efd]        # 40a018 <__snprintf_chk@GLIBC_2.3.4>
  40311b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403120 <free@plt>:
  403120:	endbr64 
  403124:	bnd jmp QWORD PTR [rip+0x6ef5]        # 40a020 <free@GLIBC_2.2.5>
  40312b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403130 <strcpy@plt>:
  403130:	endbr64 
  403134:	bnd jmp QWORD PTR [rip+0x6eed]        # 40a028 <strcpy@GLIBC_2.2.5>
  40313b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403140 <strlen@plt>:
  403140:	endbr64 
  403144:	bnd jmp QWORD PTR [rip+0x6ee5]        # 40a030 <strlen@GLIBC_2.2.5>
  40314b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403150 <__stack_chk_fail@plt>:
  403150:	endbr64 
  403154:	bnd jmp QWORD PTR [rip+0x6edd]        # 40a038 <__stack_chk_fail@GLIBC_2.4>
  40315b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403160 <snprintf@plt>:
  403160:	endbr64 
  403164:	bnd jmp QWORD PTR [rip+0x6ed5]        # 40a040 <snprintf@GLIBC_2.2.5>
  40316b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403170 <srand@plt>:
  403170:	endbr64 
  403174:	bnd jmp QWORD PTR [rip+0x6ecd]        # 40a048 <srand@GLIBC_2.2.5>
  40317b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403180 <strcmp@plt>:
  403180:	endbr64 
  403184:	bnd jmp QWORD PTR [rip+0x6ec5]        # 40a050 <strcmp@GLIBC_2.2.5>
  40318b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403190 <time@plt>:
  403190:	endbr64 
  403194:	bnd jmp QWORD PTR [rip+0x6ebd]        # 40a058 <time@GLIBC_2.2.5>
  40319b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031a0 <malloc@plt>:
  4031a0:	endbr64 
  4031a4:	bnd jmp QWORD PTR [rip+0x6eb5]        # 40a060 <malloc@GLIBC_2.2.5>
  4031ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031b0 <__isoc99_sscanf@plt>:
  4031b0:	endbr64 
  4031b4:	bnd jmp QWORD PTR [rip+0x6ead]        # 40a068 <__isoc99_sscanf@GLIBC_2.7>
  4031bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031c0 <realloc@plt>:
  4031c0:	endbr64 
  4031c4:	bnd jmp QWORD PTR [rip+0x6ea5]        # 40a070 <realloc@GLIBC_2.2.5>
  4031cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031d0 <__printf_chk@plt>:
  4031d0:	endbr64 
  4031d4:	bnd jmp QWORD PTR [rip+0x6e9d]        # 40a078 <__printf_chk@GLIBC_2.3.4>
  4031db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031e0 <rand@plt>:
  4031e0:	endbr64 
  4031e4:	bnd jmp QWORD PTR [rip+0x6e95]        # 40a080 <rand@GLIBC_2.2.5>
  4031eb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004031f0 <main@@Base>:
  4031f0:	endbr64 
  4031f4:	push   r13
  4031f6:	push   r12
  4031f8:	push   rbp
  4031f9:	push   rbx
  4031fa:	sub    rsp,0x98
  403201:	lea    rbx,[rsp+0x8]
  403206:	mov    rdi,rbx
  403209:	mov    rax,QWORD PTR fs:0x28
  403212:	mov    QWORD PTR [rsp+0x88],rax
  40321a:	xor    eax,eax
  40321c:	call   403190 <time@plt>
  403221:	mov    edi,eax
  403223:	call   403170 <srand@plt>
  403228:	call   4031e0 <rand@plt>
  40322d:	mov    rdi,rbx
  403230:	mov    r12d,eax
  403233:	call   403190 <time@plt>
  403238:	mov    edi,eax
  40323a:	lea    rbx,[rsp+0x10]
  40323f:	call   403170 <srand@plt>
  403244:	call   4031e0 <rand@plt>
  403249:	mov    rdi,rbx
  40324c:	mov    r13d,eax
  40324f:	call   4034c0 <table_init@@Base>
  403254:	mov    esi,r12d
  403257:	mov    rdi,rbx
  40325a:	call   4056b0 <table_row_is_valid@@Base>
  40325f:	mov    ebp,eax
  403261:	test   eax,eax
  403263:	jne    403316 <main@@Base+0x126>
  403269:	mov    esi,r13d
  40326c:	mov    rdi,rbx
  40326f:	call   405680 <table_column_is_valid@@Base>
  403274:	test   eax,eax
  403276:	jne    40338a <main@@Base+0x19a>
  40327c:	mov    edx,r13d
  40327f:	mov    esi,r12d
  403282:	mov    rdi,rbx
  403285:	call   4056e0 <table_cell_is_valid@@Base>
  40328a:	test   eax,eax
  40328c:	jne    403369 <main@@Base+0x179>
  403292:	mov    rdi,rbx
  403295:	call   404ca0 <table_add_row@@Base>
  40329a:	mov    esi,eax
  40329c:	mov    rdi,rbx
  40329f:	mov    r12d,eax
  4032a2:	call   4056b0 <table_row_is_valid@@Base>
  4032a7:	test   eax,eax
  4032a9:	je     40334d <main@@Base+0x15d>
  4032af:	xor    edx,edx
  4032b1:	lea    rsi,[rip+0x3dcf]        # 407087 <_IO_stdin_used@@Base+0x87>
  4032b8:	mov    rdi,rbx
  4032bb:	call   403e00 <table_add_column@@Base>
  4032c0:	mov    esi,eax
  4032c2:	mov    rdi,rbx
  4032c5:	mov    r13d,eax
  4032c8:	call   405680 <table_column_is_valid@@Base>
  4032cd:	test   eax,eax
  4032cf:	je     403334 <main@@Base+0x144>
  4032d1:	mov    edx,r13d
  4032d4:	mov    esi,r12d
  4032d7:	mov    rdi,rbx
  4032da:	call   4056e0 <table_cell_is_valid@@Base>
  4032df:	test   eax,eax
  4032e1:	je     4033a8 <main@@Base+0x1b8>
  4032e7:	mov    rdi,rbx
  4032ea:	call   403560 <table_destroy@@Base>
  4032ef:	mov    rcx,QWORD PTR [rsp+0x88]
  4032f7:	xor    rcx,QWORD PTR fs:0x28
  403300:	mov    eax,ebp
  403302:	jne    4033c7 <main@@Base+0x1d7>
  403308:	add    rsp,0x98
  40330f:	pop    rbx
  403310:	pop    rbp
  403311:	pop    r12
  403313:	pop    r13
  403315:	ret    
  403316:	mov    edx,r12d
  403319:	lea    rsi,[rip+0x3ce4]        # 407004 <_IO_stdin_used@@Base+0x4>
  403320:	mov    edi,0x1
  403325:	xor    eax,eax
  403327:	call   4031d0 <__printf_chk@plt>
  40332c:	or     ebp,0xffffffff
  40332f:	jmp    403269 <main@@Base+0x79>
  403334:	mov    edx,r13d
  403337:	lea    rsi,[rip+0x3d16]        # 407054 <_IO_stdin_used@@Base+0x54>
  40333e:	mov    edi,0x1
  403343:	call   4031d0 <__printf_chk@plt>
  403348:	or     ebp,0xffffffff
  40334b:	jmp    4032d1 <main@@Base+0xe1>
  40334d:	mov    edx,r12d
  403350:	lea    rsi,[rip+0x3ce6]        # 40703d <_IO_stdin_used@@Base+0x3d>
  403357:	mov    edi,0x1
  40335c:	call   4031d0 <__printf_chk@plt>
  403361:	or     ebp,0xffffffff
  403364:	jmp    4032af <main@@Base+0xbf>
  403369:	mov    ecx,r13d
  40336c:	mov    edx,r12d
  40336f:	lea    rsi,[rip+0x3d1a]        # 407090 <_IO_stdin_used@@Base+0x90>
  403376:	mov    edi,0x1
  40337b:	xor    eax,eax
  40337d:	call   4031d0 <__printf_chk@plt>
  403382:	or     ebp,0xffffffff
  403385:	jmp    403292 <main@@Base+0xa2>
  40338a:	mov    edx,r13d
  40338d:	lea    rsi,[rip+0x3c8b]        # 40701f <_IO_stdin_used@@Base+0x1f>
  403394:	mov    edi,0x1
  403399:	xor    eax,eax
  40339b:	call   4031d0 <__printf_chk@plt>
  4033a0:	or     ebp,0xffffffff
  4033a3:	jmp    40327c <main@@Base+0x8c>
  4033a8:	mov    ecx,r13d
  4033ab:	mov    edx,r12d
  4033ae:	lea    rsi,[rip+0x3cb9]        # 40706e <_IO_stdin_used@@Base+0x6e>
  4033b5:	mov    edi,0x1
  4033ba:	call   4031d0 <__printf_chk@plt>
  4033bf:	or     ebp,0xffffffff
  4033c2:	jmp    4032e7 <main@@Base+0xf7>
  4033c7:	call   403150 <__stack_chk_fail@plt>
  4033cc:	nop    DWORD PTR [rax+0x0]

00000000004033d0 <_start@@Base>:
  4033d0:	endbr64 
  4033d4:	xor    ebp,ebp
  4033d6:	mov    r9,rdx
  4033d9:	pop    rsi
  4033da:	mov    rdx,rsp
  4033dd:	and    rsp,0xfffffffffffffff0
  4033e1:	push   rax
  4033e2:	push   rsp
  4033e3:	mov    r8,0x406250
  4033ea:	mov    rcx,0x4061e0
  4033f1:	mov    rdi,0x4031f0
  4033f8:	call   QWORD PTR [rip+0x6bf2]        # 409ff0 <__libc_start_main@GLIBC_2.2.5>
  4033fe:	hlt    
  4033ff:	nop
  403400:	endbr64 
  403404:	ret    
  403405:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40340f:	nop
  403410:	mov    eax,0x40a098
  403415:	cmp    rax,0x40a098
  40341b:	je     403430 <_start@@Base+0x60>
  40341d:	mov    eax,0x0
  403422:	test   rax,rax
  403425:	je     403430 <_start@@Base+0x60>
  403427:	mov    edi,0x40a098
  40342c:	jmp    rax
  40342e:	xchg   ax,ax
  403430:	ret    
  403431:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40343c:	nop    DWORD PTR [rax+0x0]
  403440:	mov    esi,0x40a098
  403445:	sub    rsi,0x40a098
  40344c:	sar    rsi,0x3
  403450:	mov    rax,rsi
  403453:	shr    rax,0x3f
  403457:	add    rsi,rax
  40345a:	sar    rsi,1
  40345d:	je     403470 <_start@@Base+0xa0>
  40345f:	mov    eax,0x0
  403464:	test   rax,rax
  403467:	je     403470 <_start@@Base+0xa0>
  403469:	mov    edi,0x40a098
  40346e:	jmp    rax
  403470:	ret    
  403471:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40347c:	nop    DWORD PTR [rax+0x0]
  403480:	endbr64 
  403484:	cmp    BYTE PTR [rip+0x6c0d],0x0        # 40a098 <__bss_start@@Base>
  40348b:	jne    4034a0 <_start@@Base+0xd0>
  40348d:	push   rbp
  40348e:	mov    rbp,rsp
  403491:	call   403410 <_start@@Base+0x40>
  403496:	mov    BYTE PTR [rip+0x6bfb],0x1        # 40a098 <__bss_start@@Base>
  40349d:	pop    rbp
  40349e:	ret    
  40349f:	nop
  4034a0:	ret    
  4034a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4034ac:	nop    DWORD PTR [rax+0x0]
  4034b0:	endbr64 
  4034b4:	jmp    403440 <_start@@Base+0x70>
  4034b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004034c0 <table_init@@Base>:
  4034c0:	endbr64 
  4034c4:	mov    QWORD PTR [rdi],0x0
  4034cb:	mov    DWORD PTR [rdi+0x8],0x0
  4034d2:	mov    QWORD PTR [rdi+0x18],0x0
  4034da:	mov    QWORD PTR [rdi+0x10],0xa
  4034e2:	mov    QWORD PTR [rdi+0x20],0x0
  4034ea:	mov    DWORD PTR [rdi+0x28],0x0
  4034f1:	mov    QWORD PTR [rdi+0x38],0x0
  4034f9:	mov    QWORD PTR [rdi+0x30],0x14
  403501:	mov    QWORD PTR [rdi+0x48],0x0
  403509:	mov    QWORD PTR [rdi+0x50],0x0
  403511:	mov    QWORD PTR [rdi+0x58],0x0
  403519:	mov    DWORD PTR [rdi+0x40],0x0
  403520:	mov    QWORD PTR [rdi+0x68],0x0
  403528:	mov    QWORD PTR [rdi+0x60],0xa
  403530:	ret    
  403531:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40353c:	nop    DWORD PTR [rax+0x0]

0000000000403540 <table_new@@Base>:
  403540:	endbr64 
  403544:	push   rbx
  403545:	mov    edi,0x70
  40354a:	call   4031a0 <malloc@plt>
  40354f:	mov    rbx,rax
  403552:	mov    rdi,rax
  403555:	call   4034c0 <table_init@@Base>
  40355a:	mov    rax,rbx
  40355d:	pop    rbx
  40355e:	ret    
  40355f:	nop

0000000000403560 <table_destroy@@Base>:
  403560:	endbr64 
  403564:	test   rdi,rdi
  403567:	je     403628 <table_destroy@@Base+0xc8>
  40356d:	push   r12
  40356f:	mov    edx,0xffffffff
  403574:	mov    ecx,0x40
  403579:	push   rbp
  40357a:	mov    esi,edx
  40357c:	push   rbx
  40357d:	mov    rbx,rdi
  403580:	call   403d00 <table_notify@@Base>
  403585:	mov    rdi,rbx
  403588:	call   404c50 <table_get_row_length@@Base>
  40358d:	mov    r12d,eax
  403590:	test   eax,eax
  403592:	jle    4035b1 <table_destroy@@Base+0x51>
  403594:	xor    ebp,ebp
  403596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4035a0:	mov    esi,ebp
  4035a2:	mov    rdi,rbx
  4035a5:	inc    ebp
  4035a7:	call   404d60 <table_row_destroy@@Base>
  4035ac:	cmp    r12d,ebp
  4035af:	jne    4035a0 <table_destroy@@Base+0x40>
  4035b1:	mov    rdi,QWORD PTR [rbx+0x20]
  4035b5:	test   rdi,rdi
  4035b8:	je     4035bf <table_destroy@@Base+0x5f>
  4035ba:	call   403120 <free@plt>
  4035bf:	mov    rdi,rbx
  4035c2:	call   403d70 <table_get_column_length@@Base>
  4035c7:	mov    r12d,eax
  4035ca:	test   eax,eax
  4035cc:	jle    4035e1 <table_destroy@@Base+0x81>
  4035ce:	xor    ebp,ebp
  4035d0:	mov    esi,ebp
  4035d2:	mov    rdi,rbx
  4035d5:	inc    ebp
  4035d7:	call   403f30 <table_column_destroy@@Base>
  4035dc:	cmp    r12d,ebp
  4035df:	jne    4035d0 <table_destroy@@Base+0x70>
  4035e1:	mov    rdi,QWORD PTR [rbx]
  4035e4:	test   rdi,rdi
  4035e7:	je     4035ee <table_destroy@@Base+0x8e>
  4035e9:	call   403120 <free@plt>
  4035ee:	mov    rdi,QWORD PTR [rbx+0x48]
  4035f2:	test   rdi,rdi
  4035f5:	je     4035fc <table_destroy@@Base+0x9c>
  4035f7:	call   403120 <free@plt>
  4035fc:	mov    rdi,QWORD PTR [rbx+0x50]
  403600:	test   rdi,rdi
  403603:	je     40360a <table_destroy@@Base+0xaa>
  403605:	call   403120 <free@plt>
  40360a:	mov    rdi,QWORD PTR [rbx+0x58]
  40360e:	test   rdi,rdi
  403611:	je     403620 <table_destroy@@Base+0xc0>
  403613:	pop    rbx
  403614:	pop    rbp
  403615:	pop    r12
  403617:	jmp    403120 <free@plt>
  40361c:	nop    DWORD PTR [rax+0x0]
  403620:	pop    rbx
  403621:	pop    rbp
  403622:	pop    r12
  403624:	ret    
  403625:	nop    DWORD PTR [rax]
  403628:	ret    
  403629:	nop    DWORD PTR [rax+0x0]

0000000000403630 <table_delete@@Base>:
  403630:	endbr64 
  403634:	push   rbx
  403635:	mov    rbx,rdi
  403638:	call   403560 <table_destroy@@Base>
  40363d:	mov    rdi,rbx
  403640:	pop    rbx
  403641:	jmp    403120 <free@plt>
  403646:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403650 <table_dupe@@Base>:
  403650:	endbr64 
  403654:	push   r15
  403656:	push   r14
  403658:	push   r13
  40365a:	push   r12
  40365c:	mov    r12,rdi
  40365f:	push   rbp
  403660:	push   rbx
  403661:	sub    rsp,0x28
  403665:	mov    rax,QWORD PTR fs:0x28
  40366e:	mov    QWORD PTR [rsp+0x18],rax
  403673:	xor    eax,eax
  403675:	call   404c50 <table_get_row_length@@Base>
  40367a:	mov    rdi,r12
  40367d:	mov    DWORD PTR [rsp+0x4],eax
  403681:	call   403d70 <table_get_column_length@@Base>
  403686:	mov    r14d,eax
  403689:	call   403540 <table_new@@Base>
  40368e:	mov    r15,rax
  403691:	test   r14d,r14d
  403694:	jle    4036cb <table_dupe@@Base+0x7b>
  403696:	xor    ebx,ebx
  403698:	nop    DWORD PTR [rax+rax*1+0x0]
  4036a0:	mov    esi,ebx
  4036a2:	mov    rdi,r12
  4036a5:	call   404130 <table_get_column_name@@Base>
  4036aa:	mov    esi,ebx
  4036ac:	mov    rdi,r12
  4036af:	mov    rbp,rax
  4036b2:	call   404110 <table_get_column_data_type@@Base>
  4036b7:	mov    edx,eax
  4036b9:	mov    rsi,rbp
  4036bc:	mov    rdi,r15
  4036bf:	inc    ebx
  4036c1:	call   403e00 <table_add_column@@Base>
  4036c6:	cmp    r14d,ebx
  4036c9:	jne    4036a0 <table_dupe@@Base+0x50>
  4036cb:	mov    ecx,DWORD PTR [rsp+0x4]
  4036cf:	test   ecx,ecx
  4036d1:	jle    40374f <table_dupe@@Base+0xff>
  4036d3:	lea    rax,[rsp+0x10]
  4036d8:	mov    QWORD PTR [rsp+0x8],rax
  4036dd:	xor    ebp,ebp
  4036df:	lea    r13,[rip+0x39ca]        # 4070b0 <_IO_stdin_used@@Base+0xb0>
  4036e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036f0:	mov    rdi,r15
  4036f3:	call   404ca0 <table_add_row@@Base>
  4036f8:	test   r14d,r14d
  4036fb:	jle    403747 <table_dupe@@Base+0xf7>
  4036fd:	xor    ebx,ebx
  4036ff:	nop
  403700:	mov    esi,ebx
  403702:	mov    rdi,r12
  403705:	call   404110 <table_get_column_data_type@@Base>
  40370a:	cmp    eax,0x17
  40370d:	ja     403740 <table_dupe@@Base+0xf0>
  40370f:	mov    eax,eax
  403711:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  403716:	mov    edx,ebx
  403718:	add    rax,r13
  40371b:	mov    esi,ebp
  40371d:	mov    rdi,r12
  403720:	notrack jmp rax
  403723:	nop    DWORD PTR [rax+rax*1+0x0]
  403728:	call   4049f0 <table_get_bool@@Base>
  40372d:	movzx  ecx,al
  403730:	mov    edx,ebx
  403732:	mov    esi,ebp
  403734:	mov    rdi,r15
  403737:	call   405260 <table_set_bool@@Base>
  40373c:	nop    DWORD PTR [rax+0x0]
  403740:	inc    ebx
  403742:	cmp    r14d,ebx
  403745:	jne    403700 <table_dupe@@Base+0xb0>
  403747:	inc    ebp
  403749:	cmp    DWORD PTR [rsp+0x4],ebp
  40374d:	jne    4036f0 <table_dupe@@Base+0xa0>
  40374f:	mov    rcx,QWORD PTR [rsp+0x18]
  403754:	xor    rcx,QWORD PTR fs:0x28
  40375d:	mov    rax,r15
  403760:	jne    403a49 <table_dupe@@Base+0x3f9>
  403766:	add    rsp,0x28
  40376a:	pop    rbx
  40376b:	pop    rbp
  40376c:	pop    r12
  40376e:	pop    r13
  403770:	pop    r14
  403772:	pop    r15
  403774:	ret    
  403775:	nop    DWORD PTR [rax]
  403778:	call   404c30 <table_get_string@@Base>
  40377d:	mov    rcx,rax
  403780:	mov    edx,ebx
  403782:	mov    esi,ebp
  403784:	mov    rdi,r15
  403787:	call   405600 <table_set_string@@Base>
  40378c:	jmp    403740 <table_dupe@@Base+0xf0>
  40378e:	xchg   ax,ax
  403790:	call   404c20 <table_get_uchar@@Base>
  403795:	movzx  ecx,al
  403798:	mov    edx,ebx
  40379a:	mov    esi,ebp
  40379c:	mov    rdi,r15
  40379f:	call   405640 <table_set_uchar@@Base>
  4037a4:	jmp    403740 <table_dupe@@Base+0xf0>
  4037a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037b0:	call   404c40 <table_get_ptr@@Base>
  4037b5:	mov    rcx,QWORD PTR [rsp+0x8]
  4037ba:	mov    edx,ebx
  4037bc:	mov    esi,ebp
  4037be:	mov    rdi,r15
  4037c1:	mov    QWORD PTR [rsp+0x10],rax
  4037c6:	call   405670 <table_set_ptr@@Base>
  4037cb:	jmp    403740 <table_dupe@@Base+0xf0>
  4037d0:	call   404c10 <table_get_char@@Base>
  4037d5:	movsx  ecx,al
  4037d8:	mov    edx,ebx
  4037da:	mov    esi,ebp
  4037dc:	mov    rdi,r15
  4037df:	call   405610 <table_set_char@@Base>
  4037e4:	jmp    403740 <table_dupe@@Base+0xf0>
  4037e9:	nop    DWORD PTR [rax+0x0]
  4037f0:	call   404bf0 <table_get_ldouble@@Base>
  4037f5:	sub    rsp,0x10
  4037f9:	mov    edx,ebx
  4037fb:	mov    esi,ebp
  4037fd:	mov    rdi,r15
  403800:	fstp   TBYTE PTR [rsp]
  403803:	call   4055e0 <table_set_ldouble@@Base>
  403808:	pop    rax
  403809:	pop    rdx
  40380a:	jmp    403740 <table_dupe@@Base+0xf0>
  40380f:	nop
  403810:	call   404bd0 <table_get_double@@Base>
  403815:	mov    edx,ebx
  403817:	mov    esi,ebp
  403819:	mov    rdi,r15
  40381c:	call   4055b0 <table_set_double@@Base>
  403821:	jmp    403740 <table_dupe@@Base+0xf0>
  403826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403830:	call   404bb0 <table_get_float@@Base>
  403835:	mov    edx,ebx
  403837:	mov    esi,ebp
  403839:	mov    rdi,r15
  40383c:	call   405580 <table_set_float@@Base>
  403841:	jmp    403740 <table_dupe@@Base+0xf0>
  403846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403850:	call   404b90 <table_get_ullong@@Base>
  403855:	mov    rcx,rax
  403858:	mov    edx,ebx
  40385a:	mov    esi,ebp
  40385c:	mov    rdi,r15
  40385f:	call   405550 <table_set_ullong@@Base>
  403864:	jmp    403740 <table_dupe@@Base+0xf0>
  403869:	nop    DWORD PTR [rax+0x0]
  403870:	call   404b70 <table_get_llong@@Base>
  403875:	mov    rcx,rax
  403878:	mov    edx,ebx
  40387a:	mov    esi,ebp
  40387c:	mov    rdi,r15
  40387f:	call   405520 <table_set_llong@@Base>
  403884:	jmp    403740 <table_dupe@@Base+0xf0>
  403889:	nop    DWORD PTR [rax+0x0]
  403890:	call   404b60 <table_get_ulong@@Base>
  403895:	mov    rcx,rax
  403898:	mov    edx,ebx
  40389a:	mov    esi,ebp
  40389c:	mov    rdi,r15
  40389f:	call   4054f0 <table_set_ulong@@Base>
  4038a4:	jmp    403740 <table_dupe@@Base+0xf0>
  4038a9:	nop    DWORD PTR [rax+0x0]
  4038b0:	call   404b50 <table_get_long@@Base>
  4038b5:	mov    rcx,rax
  4038b8:	mov    edx,ebx
  4038ba:	mov    esi,ebp
  4038bc:	mov    rdi,r15
  4038bf:	call   4054c0 <table_set_long@@Base>
  4038c4:	jmp    403740 <table_dupe@@Base+0xf0>
  4038c9:	nop    DWORD PTR [rax+0x0]
  4038d0:	call   404b40 <table_get_ushort@@Base>
  4038d5:	movzx  ecx,ax
  4038d8:	mov    edx,ebx
  4038da:	mov    esi,ebp
  4038dc:	mov    rdi,r15
  4038df:	call   405490 <table_set_ushort@@Base>
  4038e4:	jmp    403740 <table_dupe@@Base+0xf0>
  4038e9:	nop    DWORD PTR [rax+0x0]
  4038f0:	call   404b30 <table_get_short@@Base>
  4038f5:	movsx  ecx,ax
  4038f8:	mov    edx,ebx
  4038fa:	mov    esi,ebp
  4038fc:	mov    rdi,r15
  4038ff:	call   405460 <table_set_short@@Base>
  403904:	jmp    403740 <table_dupe@@Base+0xf0>
  403909:	nop    DWORD PTR [rax+0x0]
  403910:	call   404b10 <table_get_uint64@@Base>
  403915:	mov    rcx,rax
  403918:	mov    edx,ebx
  40391a:	mov    esi,ebp
  40391c:	mov    rdi,r15
  40391f:	call   405430 <table_set_uint64@@Base>
  403924:	jmp    403740 <table_dupe@@Base+0xf0>
  403929:	nop    DWORD PTR [rax+0x0]
  403930:	call   404af0 <table_get_int64@@Base>
  403935:	mov    rcx,rax
  403938:	mov    edx,ebx
  40393a:	mov    esi,ebp
  40393c:	mov    rdi,r15
  40393f:	call   405400 <table_set_int64@@Base>
  403944:	jmp    403740 <table_dupe@@Base+0xf0>
  403949:	nop    DWORD PTR [rax+0x0]
  403950:	call   404a70 <table_get_uint8@@Base>
  403955:	movzx  ecx,al
  403958:	mov    edx,ebx
  40395a:	mov    esi,ebp
  40395c:	mov    rdi,r15
  40395f:	call   405310 <table_set_uint8@@Base>
  403964:	jmp    403740 <table_dupe@@Base+0xf0>
  403969:	nop    DWORD PTR [rax+0x0]
  403970:	call   404a50 <table_get_int8@@Base>
  403975:	movsx  ecx,al
  403978:	mov    edx,ebx
  40397a:	mov    esi,ebp
  40397c:	mov    rdi,r15
  40397f:	call   4052e0 <table_set_int8@@Base>
  403984:	jmp    403740 <table_dupe@@Base+0xf0>
  403989:	nop    DWORD PTR [rax+0x0]
  403990:	call   404a30 <table_get_uint@@Base>
  403995:	mov    ecx,eax
  403997:	mov    edx,ebx
  403999:	mov    esi,ebp
  40399b:	mov    rdi,r15
  40399e:	call   4052b0 <table_set_uint@@Base>
  4039a3:	jmp    403740 <table_dupe@@Base+0xf0>
  4039a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4039b0:	call   404a10 <table_get_int@@Base>
  4039b5:	mov    ecx,eax
  4039b7:	mov    edx,ebx
  4039b9:	mov    esi,ebp
  4039bb:	mov    rdi,r15
  4039be:	call   405290 <table_set_int@@Base>
  4039c3:	jmp    403740 <table_dupe@@Base+0xf0>
  4039c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4039d0:	call   404ae0 <table_get_uint32@@Base>
  4039d5:	mov    ecx,eax
  4039d7:	mov    edx,ebx
  4039d9:	mov    esi,ebp
  4039db:	mov    rdi,r15
  4039de:	call   4053d0 <table_set_uint32@@Base>
  4039e3:	jmp    403740 <table_dupe@@Base+0xf0>
  4039e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4039f0:	call   404ad0 <table_get_int32@@Base>
  4039f5:	mov    ecx,eax
  4039f7:	mov    edx,ebx
  4039f9:	mov    esi,ebp
  4039fb:	mov    rdi,r15
  4039fe:	call   4053a0 <table_set_int32@@Base>
  403a03:	jmp    403740 <table_dupe@@Base+0xf0>
  403a08:	nop    DWORD PTR [rax+rax*1+0x0]
  403a10:	call   404ab0 <table_get_uint16@@Base>
  403a15:	movzx  ecx,ax
  403a18:	mov    edx,ebx
  403a1a:	mov    esi,ebp
  403a1c:	mov    rdi,r15
  403a1f:	call   405370 <table_set_uint16@@Base>
  403a24:	jmp    403740 <table_dupe@@Base+0xf0>
  403a29:	nop    DWORD PTR [rax+0x0]
  403a30:	call   404a90 <table_get_int16@@Base>
  403a35:	movsx  ecx,ax
  403a38:	mov    edx,ebx
  403a3a:	mov    esi,ebp
  403a3c:	mov    rdi,r15
  403a3f:	call   405340 <table_set_int16@@Base>
  403a44:	jmp    403740 <table_dupe@@Base+0xf0>
  403a49:	call   403150 <__stack_chk_fail@plt>
  403a4e:	xchg   ax,ax

0000000000403a50 <table_get_major_version@@Base>:
  403a50:	endbr64 
  403a54:	xor    eax,eax
  403a56:	ret    
  403a57:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403a60 <table_get_minor_version@@Base>:
  403a60:	endbr64 
  403a64:	xor    eax,eax
  403a66:	ret    
  403a67:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403a70 <table_get_patch_version@@Base>:
  403a70:	endbr64 
  403a74:	xor    eax,eax
  403a76:	ret    
  403a77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403a80 <table_get_version@@Base>:
  403a80:	endbr64 
  403a84:	lea    rax,[rip+0x3775]        # 407200 <_IO_stdin_used@@Base+0x200>
  403a8b:	ret    
  403a8c:	nop    DWORD PTR [rax+0x0]

0000000000403a90 <table_get_callback_length@@Base>:
  403a90:	endbr64 
  403a94:	mov    eax,DWORD PTR [rdi+0x40]
  403a97:	ret    
  403a98:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403aa0 <table_register_callback@@Base>:
  403aa0:	endbr64 
  403aa4:	push   r13
  403aa6:	push   r12
  403aa8:	push   rbp
  403aa9:	push   rbx
  403aaa:	sub    rsp,0x8
  403aae:	movsxd rax,DWORD PTR [rdi+0x40]
  403ab2:	test   eax,eax
  403ab4:	jle    403b00 <table_register_callback@@Base+0x60>
  403ab6:	mov    r10,QWORD PTR [rdi+0x48]
  403aba:	lea    r11d,[rax-0x1]
  403abe:	xor    r8d,r8d
  403ac1:	jmp    403ad4 <table_register_callback@@Base+0x34>
  403ac3:	nop    DWORD PTR [rax+rax*1+0x0]
  403ac8:	lea    r9,[r8+0x1]
  403acc:	cmp    r8,r11
  403acf:	je     403b00 <table_register_callback@@Base+0x60>
  403ad1:	mov    r8,r9
  403ad4:	cmp    rsi,QWORD PTR [r10+r8*8]
  403ad8:	jne    403ac8 <table_register_callback@@Base+0x28>
  403ada:	mov    rbx,QWORD PTR [rdi+0x50]
  403ade:	cmp    rdx,QWORD PTR [rbx+r8*8]
  403ae2:	jne    403ac8 <table_register_callback@@Base+0x28>
  403ae4:	test   r8d,r8d
  403ae7:	je     403b00 <table_register_callback@@Base+0x60>
  403ae9:	mov    rax,QWORD PTR [rdi+0x58]
  403aed:	or     DWORD PTR [rax+r8*4],ecx
  403af1:	add    rsp,0x8
  403af5:	pop    rbx
  403af6:	pop    rbp
  403af7:	pop    r12
  403af9:	pop    r13
  403afb:	ret    
  403afc:	nop    DWORD PTR [rax+0x0]
  403b00:	mov    r13d,ecx
  403b03:	mov    rcx,QWORD PTR [rdi+0x60]
  403b07:	mov    r12,rdx
  403b0a:	xor    edx,edx
  403b0c:	div    rcx
  403b0f:	mov    rbx,rsi
  403b12:	mov    rbp,rdi
  403b15:	test   rdx,rdx
  403b18:	je     403b50 <table_register_callback@@Base+0xb0>
  403b1a:	mov    rdi,rbp
  403b1d:	call   403a90 <table_get_callback_length@@Base>
  403b22:	mov    rdx,QWORD PTR [rbp+0x48]
  403b26:	cdqe   
  403b28:	mov    QWORD PTR [rdx+rax*8],rbx
  403b2c:	mov    rdx,QWORD PTR [rbp+0x50]
  403b30:	mov    QWORD PTR [rdx+rax*8],r12
  403b34:	mov    rdx,QWORD PTR [rbp+0x58]
  403b38:	mov    DWORD PTR [rdx+rax*4],r13d
  403b3c:	inc    DWORD PTR [rbp+0x40]
  403b3f:	add    rsp,0x8
  403b43:	pop    rbx
  403b44:	pop    rbp
  403b45:	pop    r12
  403b47:	pop    r13
  403b49:	ret    
  403b4a:	nop    WORD PTR [rax+rax*1+0x0]
  403b50:	add    rcx,QWORD PTR [rdi+0x68]
  403b54:	mov    QWORD PTR [rdi+0x68],rcx
  403b58:	mov    rdi,QWORD PTR [rdi+0x48]
  403b5c:	lea    rsi,[rcx*8+0x0]
  403b64:	call   4031c0 <realloc@plt>
  403b69:	mov    QWORD PTR [rbp+0x48],rax
  403b6d:	mov    rax,QWORD PTR [rbp+0x68]
  403b71:	mov    rdi,QWORD PTR [rbp+0x50]
  403b75:	lea    rsi,[rax*8+0x0]
  403b7d:	call   4031c0 <realloc@plt>
  403b82:	mov    QWORD PTR [rbp+0x50],rax
  403b86:	mov    rax,QWORD PTR [rbp+0x68]
  403b8a:	mov    rdi,QWORD PTR [rbp+0x58]
  403b8e:	lea    rsi,[rax*4+0x0]
  403b96:	call   4031c0 <realloc@plt>
  403b9b:	mov    QWORD PTR [rbp+0x58],rax
  403b9f:	jmp    403b1a <table_register_callback@@Base+0x7a>
  403ba4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403baf:	nop

0000000000403bb0 <table_unregister_callback@@Base>:
  403bb0:	endbr64 
  403bb4:	mov    eax,DWORD PTR [rdi+0x40]
  403bb7:	test   eax,eax
  403bb9:	jle    403cc8 <table_unregister_callback@@Base+0x118>
  403bbf:	lea    r10d,[rax-0x1]
  403bc3:	mov    r9,QWORD PTR [rdi+0x48]
  403bc7:	mov    rcx,r10
  403bca:	xor    eax,eax
  403bcc:	jmp    403be0 <table_unregister_callback@@Base+0x30>
  403bce:	xchg   ax,ax
  403bd0:	lea    r8,[rax+0x1]
  403bd4:	cmp    r10,rax
  403bd7:	je     403cc0 <table_unregister_callback@@Base+0x110>
  403bdd:	mov    rax,r8
  403be0:	mov    r8d,eax
  403be3:	cmp    rsi,QWORD PTR [r9+rax*8]
  403be7:	jne    403bd0 <table_unregister_callback@@Base+0x20>
  403be9:	mov    r11,QWORD PTR [rdi+0x50]
  403bed:	cmp    rdx,QWORD PTR [r11+rax*8]
  403bf1:	jne    403bd0 <table_unregister_callback@@Base+0x20>
  403bf3:	mov    eax,ecx
  403bf5:	cmp    ecx,r8d
  403bf8:	jle    403c4a <table_unregister_callback@@Base+0x9a>
  403bfa:	movsxd rcx,r8d
  403bfd:	inc    rcx
  403c00:	lea    rdx,[rcx*8+0x0]
  403c08:	shl    rcx,0x2
  403c0c:	jmp    403c14 <table_unregister_callback@@Base+0x64>
  403c0e:	xchg   ax,ax
  403c10:	mov    r9,QWORD PTR [rdi+0x48]
  403c14:	mov    rax,QWORD PTR [r9+rdx*1]
  403c18:	inc    r8d
  403c1b:	mov    QWORD PTR [r9+rdx*1-0x8],rax
  403c20:	mov    rax,QWORD PTR [rdi+0x50]
  403c24:	mov    rsi,QWORD PTR [rax+rdx*1]
  403c28:	mov    QWORD PTR [rax+rdx*1-0x8],rsi
  403c2d:	add    rdx,0x8
  403c31:	mov    rax,QWORD PTR [rdi+0x58]
  403c35:	mov    esi,DWORD PTR [rax+rcx*1]
  403c38:	mov    DWORD PTR [rax+rcx*1-0x4],esi
  403c3c:	add    rcx,0x4
  403c40:	mov    eax,DWORD PTR [rdi+0x40]
  403c43:	dec    eax
  403c45:	cmp    eax,r8d
  403c48:	jg     403c10 <table_unregister_callback@@Base+0x60>
  403c4a:	mov    rcx,QWORD PTR [rdi+0x60]
  403c4e:	mov    DWORD PTR [rdi+0x40],eax
  403c51:	xor    edx,edx
  403c53:	cdqe   
  403c55:	div    rcx
  403c58:	test   rdx,rdx
  403c5b:	jne    403cc8 <table_unregister_callback@@Base+0x118>
  403c5d:	push   rbx
  403c5e:	mov    rbx,rdi
  403c61:	mov    rax,QWORD PTR [rdi+0x68]
  403c65:	sub    rax,rcx
  403c68:	mov    QWORD PTR [rdi+0x68],rax
  403c6c:	mov    rdi,QWORD PTR [rdi+0x48]
  403c70:	je     403cc9 <table_unregister_callback@@Base+0x119>
  403c72:	lea    rsi,[rax*8+0x0]
  403c7a:	call   4031c0 <realloc@plt>
  403c7f:	mov    QWORD PTR [rbx+0x48],rax
  403c83:	mov    rax,QWORD PTR [rbx+0x68]
  403c87:	mov    rdi,QWORD PTR [rbx+0x50]
  403c8b:	lea    rsi,[rax*8+0x0]
  403c93:	call   4031c0 <realloc@plt>
  403c98:	mov    QWORD PTR [rbx+0x50],rax
  403c9c:	mov    rax,QWORD PTR [rbx+0x68]
  403ca0:	mov    rdi,QWORD PTR [rbx+0x58]
  403ca4:	lea    rsi,[rax*4+0x0]
  403cac:	call   4031c0 <realloc@plt>
  403cb1:	mov    QWORD PTR [rbx+0x58],rax
  403cb5:	pop    rbx
  403cb6:	ret    
  403cb7:	nop    WORD PTR [rax+rax*1+0x0]
  403cc0:	ret    
  403cc1:	nop    DWORD PTR [rax+0x0]
  403cc8:	ret    
  403cc9:	call   403120 <free@plt>
  403cce:	mov    rdi,QWORD PTR [rbx+0x50]
  403cd2:	call   403120 <free@plt>
  403cd7:	mov    rdi,QWORD PTR [rbx+0x58]
  403cdb:	call   403120 <free@plt>
  403ce0:	mov    QWORD PTR [rbx+0x48],0x0
  403ce8:	mov    QWORD PTR [rbx+0x50],0x0
  403cf0:	mov    QWORD PTR [rbx+0x58],0x0
  403cf8:	pop    rbx
  403cf9:	ret    
  403cfa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403d00 <table_notify@@Base>:
  403d00:	endbr64 
  403d04:	mov    eax,DWORD PTR [rdi+0x40]
  403d07:	test   eax,eax
  403d09:	jle    403d60 <table_notify@@Base+0x60>
  403d0b:	push   r14
  403d0d:	mov    r14d,ecx
  403d10:	push   r13
  403d12:	mov    r13d,edx
  403d15:	push   r12
  403d17:	mov    r12d,esi
  403d1a:	push   rbp
  403d1b:	mov    rbp,rdi
  403d1e:	push   rbx
  403d1f:	xor    ebx,ebx
  403d21:	nop    DWORD PTR [rax+0x0]
  403d28:	mov    rax,QWORD PTR [rbp+0x58]
  403d2c:	test   DWORD PTR [rax+rbx*4],r14d
  403d30:	je     403d4d <table_notify@@Base+0x4d>
  403d32:	mov    rdx,QWORD PTR [rbp+0x50]
  403d36:	mov    rax,QWORD PTR [rbp+0x48]
  403d3a:	mov    r8,QWORD PTR [rdx+rbx*8]
  403d3e:	mov    ecx,r14d
  403d41:	mov    edx,r13d
  403d44:	mov    esi,r12d
  403d47:	mov    rdi,rbp
  403d4a:	call   QWORD PTR [rax+rbx*8]
  403d4d:	inc    rbx
  403d50:	cmp    DWORD PTR [rbp+0x40],ebx
  403d53:	jg     403d28 <table_notify@@Base+0x28>
  403d55:	pop    rbx
  403d56:	pop    rbp
  403d57:	pop    r12
  403d59:	pop    r13
  403d5b:	pop    r14
  403d5d:	ret    
  403d5e:	xchg   ax,ax
  403d60:	ret    
  403d61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403d70 <table_get_column_length@@Base>:
  403d70:	endbr64 
  403d74:	mov    eax,DWORD PTR [rdi+0x8]
  403d77:	ret    
  403d78:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403d80 <table_get_col_ptr@@Base>:
  403d80:	endbr64 
  403d84:	movsxd rsi,esi
  403d87:	mov    rax,QWORD PTR [rdi]
  403d8a:	lea    rdx,[rsi+rsi*2]
  403d8e:	lea    rax,[rax+rdx*8]
  403d92:	ret    
  403d93:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403d9e:	xchg   ax,ax

0000000000403da0 <table_column_init@@Base>:
  403da0:	endbr64 
  403da4:	push   r13
  403da6:	mov    r13,r8
  403da9:	push   r12
  403dab:	mov    r12d,ecx
  403dae:	push   rbp
  403daf:	mov    rbp,rdx
  403db2:	push   rbx
  403db3:	sub    rsp,0x8
  403db7:	call   403d80 <table_get_col_ptr@@Base>
  403dbc:	mov    rdi,rbp
  403dbf:	mov    rbx,rax
  403dc2:	call   403140 <strlen@plt>
  403dc7:	lea    rdi,[rax+0x1]
  403dcb:	call   4031a0 <malloc@plt>
  403dd0:	mov    QWORD PTR [rbx],rax
  403dd3:	test   rax,rax
  403dd6:	je     403de3 <table_column_init@@Base+0x43>
  403dd8:	mov    rsi,rbp
  403ddb:	mov    rdi,rax
  403dde:	call   403130 <strcpy@plt>
  403de3:	mov    DWORD PTR [rbx+0x8],r12d
  403de7:	mov    QWORD PTR [rbx+0x10],r13
  403deb:	add    rsp,0x8
  403def:	pop    rbx
  403df0:	pop    rbp
  403df1:	pop    r12
  403df3:	pop    r13
  403df5:	ret    
  403df6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403e00 <table_add_column@@Base>:
  403e00:	endbr64 
  403e04:	push   r15
  403e06:	push   r14
  403e08:	push   r13
  403e0a:	push   r12
  403e0c:	mov    r12,rsi
  403e0f:	push   rbp
  403e10:	mov    ebp,edx
  403e12:	push   rbx
  403e13:	mov    rbx,rdi
  403e16:	sub    rsp,0x8
  403e1a:	call   403d70 <table_get_column_length@@Base>
  403e1f:	mov    rcx,QWORD PTR [rbx+0x10]
  403e23:	cdqe   
  403e25:	xor    edx,edx
  403e27:	div    rcx
  403e2a:	test   rdx,rdx
  403e2d:	je     403ec0 <table_add_column@@Base+0xc0>
  403e33:	mov    rdi,rbx
  403e36:	call   404c50 <table_get_row_length@@Base>
  403e3b:	mov    rdi,rbx
  403e3e:	mov    r13d,eax
  403e41:	call   403d70 <table_get_column_length@@Base>
  403e46:	mov    edi,ebp
  403e48:	mov    r14d,eax
  403e4b:	call   404830 <table_get_default_compare_function_for_data_type@@Base>
  403e50:	mov    r8,rax
  403e53:	mov    ecx,ebp
  403e55:	mov    rdx,r12
  403e58:	mov    esi,r14d
  403e5b:	mov    rdi,rbx
  403e5e:	call   403da0 <table_column_init@@Base>
  403e63:	test   r13d,r13d
  403e66:	jle    403e84 <table_add_column@@Base+0x84>
  403e68:	xor    ebp,ebp
  403e6a:	nop    WORD PTR [rax+rax*1+0x0]
  403e70:	mov    esi,ebp
  403e72:	mov    edx,r14d
  403e75:	mov    rdi,rbx
  403e78:	inc    ebp
  403e7a:	call   406140 <table_cell_init@@Base>
  403e7f:	cmp    r13d,ebp
  403e82:	jne    403e70 <table_add_column@@Base+0x70>
  403e84:	mov    rdi,rbx
  403e87:	call   403d70 <table_get_column_length@@Base>
  403e8c:	mov    edx,eax
  403e8e:	mov    rdi,rbx
  403e91:	mov    ecx,0x8
  403e96:	mov    esi,0xffffffff
  403e9b:	call   403d00 <table_notify@@Base>
  403ea0:	mov    eax,DWORD PTR [rbx+0x8]
  403ea3:	lea    edx,[rax+0x1]
  403ea6:	mov    DWORD PTR [rbx+0x8],edx
  403ea9:	add    rsp,0x8
  403ead:	pop    rbx
  403eae:	pop    rbp
  403eaf:	pop    r12
  403eb1:	pop    r13
  403eb3:	pop    r14
  403eb5:	pop    r15
  403eb7:	ret    
  403eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  403ec0:	add    rcx,QWORD PTR [rbx+0x18]
  403ec4:	mov    QWORD PTR [rbx+0x18],rcx
  403ec8:	lea    rsi,[rcx+rcx*2]
  403ecc:	mov    rdi,QWORD PTR [rbx]
  403ecf:	shl    rsi,0x3
  403ed3:	call   4031c0 <realloc@plt>
  403ed8:	mov    QWORD PTR [rbx],rax
  403edb:	mov    rdi,rbx
  403ede:	call   404c50 <table_get_row_length@@Base>
  403ee3:	mov    r14d,eax
  403ee6:	test   eax,eax
  403ee8:	jle    403e33 <table_add_column@@Base+0x33>
  403eee:	xor    r13d,r13d
  403ef1:	nop    DWORD PTR [rax+0x0]
  403ef8:	mov    esi,r13d
  403efb:	mov    rdi,rbx
  403efe:	call   404c60 <table_get_row_ptr@@Base>
  403f03:	mov    r15,rax
  403f06:	mov    rax,QWORD PTR [rbx+0x18]
  403f0a:	mov    rdi,QWORD PTR [r15]
  403f0d:	lea    rsi,[rax*8+0x0]
  403f15:	call   4031c0 <realloc@plt>
  403f1a:	inc    r13d
  403f1d:	mov    QWORD PTR [r15],rax
  403f20:	cmp    r14d,r13d
  403f23:	jne    403ef8 <table_add_column@@Base+0xf8>
  403f25:	jmp    403e33 <table_add_column@@Base+0x33>
  403f2a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403f30 <table_column_destroy@@Base>:
  403f30:	endbr64 
  403f34:	sub    rsp,0x8
  403f38:	call   403d80 <table_get_col_ptr@@Base>
  403f3d:	mov    rdi,QWORD PTR [rax]
  403f40:	test   rdi,rdi
  403f43:	je     403f50 <table_column_destroy@@Base+0x20>
  403f45:	add    rsp,0x8
  403f49:	jmp    403120 <free@plt>
  403f4e:	xchg   ax,ax
  403f50:	add    rsp,0x8
  403f54:	ret    
  403f55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000403f60 <table_remove_column@@Base>:
  403f60:	endbr64 
  403f64:	push   r15
  403f66:	push   r14
  403f68:	push   r13
  403f6a:	push   r12
  403f6c:	push   rbp
  403f6d:	mov    ebp,esi
  403f6f:	push   rbx
  403f70:	mov    rbx,rdi
  403f73:	sub    rsp,0x18
  403f77:	call   403f30 <table_column_destroy@@Base>
  403f7c:	mov    rdi,rbx
  403f7f:	call   403d70 <table_get_column_length@@Base>
  403f84:	lea    r12d,[rax-0x1]
  403f88:	mov    r13d,eax
  403f8b:	cmp    ebp,r12d
  403f8e:	jge    403fdc <table_remove_column@@Base+0x7c>
  403f90:	mov    edx,r13d
  403f93:	sub    edx,ebp
  403f95:	movsxd rcx,ebp
  403f98:	sub    edx,0x2
  403f9b:	add    rdx,rcx
  403f9e:	lea    rax,[rcx+rcx*2+0x3]
  403fa3:	lea    rdx,[rdx+rdx*2]
  403fa7:	shl    rax,0x3
  403fab:	lea    rsi,[rdx*8+0x30]
  403fb3:	nop    DWORD PTR [rax+rax*1+0x0]
  403fb8:	mov    rdx,QWORD PTR [rbx]
  403fbb:	lea    rcx,[rdx+rax*1-0x18]
  403fc0:	add    rdx,rax
  403fc3:	vmovdqu xmm0,XMMWORD PTR [rdx]
  403fc7:	add    rax,0x18
  403fcb:	vmovups XMMWORD PTR [rcx],xmm0
  403fcf:	mov    rdx,QWORD PTR [rdx+0x10]
  403fd3:	mov    QWORD PTR [rcx+0x10],rdx
  403fd7:	cmp    rax,rsi
  403fda:	jne    403fb8 <table_remove_column@@Base+0x58>
  403fdc:	mov    rdi,rbx
  403fdf:	call   404c50 <table_get_row_length@@Base>
  403fe4:	mov    r14d,eax
  403fe7:	test   eax,eax
  403fe9:	jle    404055 <table_remove_column@@Base+0xf5>
  403feb:	movsxd rax,ebp
  403fee:	sub    r13d,ebp
  403ff1:	lea    rcx,[rax*8+0x8]
  403ff9:	lea    edx,[r13-0x2]
  403ffd:	mov    QWORD PTR [rsp+0x8],rcx
  404002:	lea    r13,[rax+rdx*1+0x2]
  404007:	shl    r13,0x3
  40400b:	xor    r15d,r15d
  40400e:	xchg   ax,ax
  404010:	mov    esi,r15d
  404013:	mov    rdi,rbx
  404016:	mov    edx,ebp
  404018:	call   406160 <table_cell_destroy@@Base>
  40401d:	mov    esi,r15d
  404020:	mov    rdi,rbx
  404023:	call   404c60 <table_get_row_ptr@@Base>
  404028:	cmp    ebp,r12d
  40402b:	jge    40404d <table_remove_column@@Base+0xed>
  40402d:	mov    rdx,QWORD PTR [rsp+0x8]
  404032:	nop    WORD PTR [rax+rax*1+0x0]
  404038:	mov    rsi,QWORD PTR [rax]
  40403b:	mov    rdi,QWORD PTR [rsi+rdx*1]
  40403f:	mov    QWORD PTR [rsi+rdx*1-0x8],rdi
  404044:	add    rdx,0x8
  404048:	cmp    r13,rdx
  40404b:	jne    404038 <table_remove_column@@Base+0xd8>
  40404d:	inc    r15d
  404050:	cmp    r14d,r15d
  404053:	jne    404010 <table_remove_column@@Base+0xb0>
  404055:	dec    DWORD PTR [rbx+0x8]
  404058:	mov    rdi,rbx
  40405b:	call   403d70 <table_get_column_length@@Base>
  404060:	mov    rcx,QWORD PTR [rbx+0x10]
  404064:	cdqe   
  404066:	xor    edx,edx
  404068:	div    rcx
  40406b:	test   rdx,rdx
  40406e:	je     404098 <table_remove_column@@Base+0x138>
  404070:	mov    edx,ebp
  404072:	mov    rdi,rbx
  404075:	mov    ecx,0x10
  40407a:	mov    esi,0xffffffff
  40407f:	call   403d00 <table_notify@@Base>
  404084:	add    rsp,0x18
  404088:	pop    rbx
  404089:	pop    rbp
  40408a:	pop    r12
  40408c:	pop    r13
  40408e:	pop    r14
  404090:	xor    eax,eax
  404092:	pop    r15
  404094:	ret    
  404095:	nop    DWORD PTR [rax]
  404098:	mov    rax,QWORD PTR [rbx+0x18]
  40409c:	mov    rdi,QWORD PTR [rbx]
  40409f:	sub    rax,rcx
  4040a2:	mov    QWORD PTR [rbx+0x18],rax
  4040a6:	lea    rsi,[rax+rax*2]
  4040aa:	shl    rsi,0x3
  4040ae:	call   4031c0 <realloc@plt>
  4040b3:	mov    QWORD PTR [rbx],rax
  4040b6:	mov    rdi,rbx
  4040b9:	call   404c50 <table_get_row_length@@Base>
  4040be:	mov    r14d,eax
  4040c1:	test   eax,eax
  4040c3:	jle    404070 <table_remove_column@@Base+0x110>
  4040c5:	xor    r12d,r12d
  4040c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4040d0:	mov    esi,r12d
  4040d3:	mov    rdi,rbx
  4040d6:	call   404c60 <table_get_row_ptr@@Base>
  4040db:	mov    r13,rax
  4040de:	mov    rax,QWORD PTR [rbx+0x18]
  4040e2:	mov    rdi,QWORD PTR [r13+0x0]
  4040e6:	lea    rsi,[rax*8+0x0]
  4040ee:	call   4031c0 <realloc@plt>
  4040f3:	inc    r12d
  4040f6:	mov    QWORD PTR [r13+0x0],rax
  4040fa:	cmp    r14d,r12d
  4040fd:	jne    4040d0 <table_remove_column@@Base+0x170>
  4040ff:	jmp    404070 <table_remove_column@@Base+0x110>
  404104:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40410f:	nop

0000000000404110 <table_get_column_data_type@@Base>:
  404110:	endbr64 
  404114:	sub    rsp,0x8
  404118:	call   403d80 <table_get_col_ptr@@Base>
  40411d:	mov    eax,DWORD PTR [rax+0x8]
  404120:	add    rsp,0x8
  404124:	ret    
  404125:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404130 <table_get_column_name@@Base>:
  404130:	endbr64 
  404134:	sub    rsp,0x8
  404138:	call   403d80 <table_get_col_ptr@@Base>
  40413d:	mov    rax,QWORD PTR [rax]
  404140:	add    rsp,0x8
  404144:	ret    
  404145:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404150 <table_get_column@@Base>:
  404150:	endbr64 
  404154:	push   r13
  404156:	mov    r13,rsi
  404159:	push   r12
  40415b:	push   rbp
  40415c:	mov    rbp,rdi
  40415f:	push   rbx
  404160:	sub    rsp,0x8
  404164:	call   403d70 <table_get_column_length@@Base>
  404169:	test   eax,eax
  40416b:	jle    4041a8 <table_get_column@@Base+0x58>
  40416d:	mov    r12d,eax
  404170:	xor    ebx,ebx
  404172:	jmp    40417f <table_get_column@@Base+0x2f>
  404174:	nop    DWORD PTR [rax+0x0]
  404178:	inc    ebx
  40417a:	cmp    r12d,ebx
  40417d:	je     4041c0 <table_get_column@@Base+0x70>
  40417f:	mov    esi,ebx
  404181:	mov    rdi,rbp
  404184:	call   404130 <table_get_column_name@@Base>
  404189:	mov    rdi,rax
  40418c:	mov    rsi,r13
  40418f:	call   403180 <strcmp@plt>
  404194:	test   eax,eax
  404196:	jne    404178 <table_get_column@@Base+0x28>
  404198:	add    rsp,0x8
  40419c:	mov    eax,ebx
  40419e:	pop    rbx
  40419f:	pop    rbp
  4041a0:	pop    r12
  4041a2:	pop    r13
  4041a4:	ret    
  4041a5:	nop    DWORD PTR [rax]
  4041a8:	sete   bl
  4041ab:	movzx  ebx,bl
  4041ae:	add    rsp,0x8
  4041b2:	neg    ebx
  4041b4:	mov    eax,ebx
  4041b6:	pop    rbx
  4041b7:	pop    rbp
  4041b8:	pop    r12
  4041ba:	pop    r13
  4041bc:	ret    
  4041bd:	nop    DWORD PTR [rax]
  4041c0:	add    rsp,0x8
  4041c4:	mov    ebx,0xffffffff
  4041c9:	mov    eax,ebx
  4041cb:	pop    rbx
  4041cc:	pop    rbp
  4041cd:	pop    r12
  4041cf:	pop    r13
  4041d1:	ret    
  4041d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4041dd:	nop    DWORD PTR [rax]

00000000004041e0 <table_get_column_compare_function@@Base>:
  4041e0:	endbr64 
  4041e4:	sub    rsp,0x8
  4041e8:	call   403d80 <table_get_col_ptr@@Base>
  4041ed:	mov    rax,QWORD PTR [rax+0x10]
  4041f1:	add    rsp,0x8
  4041f5:	ret    
  4041f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404200 <table_set_column_compare_function@@Base>:
  404200:	endbr64 
  404204:	push   rbx
  404205:	mov    rbx,rdx
  404208:	call   403d80 <table_get_col_ptr@@Base>
  40420d:	mov    QWORD PTR [rax+0x10],rbx
  404211:	pop    rbx
  404212:	ret    
  404213:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40421d:	nop    DWORD PTR [rax]

0000000000404220 <table_compare_ptr@@Base>:
  404220:	endbr64 
  404224:	cmp    rdi,rsi
  404227:	sbb    eax,eax
  404229:	mov    edx,0x1
  40422e:	cmp    rdi,rsi
  404231:	cmova  eax,edx
  404234:	ret    
  404235:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404240 <table_compare_string@@Base>:
  404240:	endbr64 
  404244:	test   rdi,rdi
  404247:	je     404258 <table_compare_string@@Base+0x18>
  404249:	test   rsi,rsi
  40424c:	je     404268 <table_compare_string@@Base+0x28>
  40424e:	jmp    403180 <strcmp@plt>
  404253:	nop    DWORD PTR [rax+rax*1+0x0]
  404258:	xor    eax,eax
  40425a:	test   rsi,rsi
  40425d:	setne  al
  404260:	neg    eax
  404262:	ret    
  404263:	nop    DWORD PTR [rax+rax*1+0x0]
  404268:	mov    eax,0x1
  40426d:	ret    
  40426e:	xchg   ax,ax

0000000000404270 <table_compare_bool@@Base>:
  404270:	endbr64 
  404274:	test   rdi,rdi
  404277:	je     404298 <table_compare_bool@@Base+0x28>
  404279:	mov    eax,0x1
  40427e:	test   rsi,rsi
  404281:	je     404290 <table_compare_bool@@Base+0x20>
  404283:	movzx  edx,BYTE PTR [rsi]
  404286:	cmp    BYTE PTR [rdi],dl
  404288:	ja     404290 <table_compare_bool@@Base+0x20>
  40428a:	sbb    eax,eax
  40428c:	ret    
  40428d:	nop    DWORD PTR [rax]
  404290:	ret    
  404291:	nop    DWORD PTR [rax+0x0]
  404298:	xor    eax,eax
  40429a:	test   rsi,rsi
  40429d:	setne  al
  4042a0:	neg    eax
  4042a2:	ret    
  4042a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4042ae:	xchg   ax,ax

00000000004042b0 <table_compare_int32@@Base>:
  4042b0:	endbr64 
  4042b4:	test   rdi,rdi
  4042b7:	je     4042e0 <table_compare_int32@@Base+0x30>
  4042b9:	mov    eax,0x1
  4042be:	test   rsi,rsi
  4042c1:	je     4042d8 <table_compare_int32@@Base+0x28>
  4042c3:	mov    edx,DWORD PTR [rsi]
  4042c5:	cmp    DWORD PTR [rdi],edx
  4042c7:	jg     4042d8 <table_compare_int32@@Base+0x28>
  4042c9:	setl   al
  4042cc:	movzx  eax,al
  4042cf:	neg    eax
  4042d1:	ret    
  4042d2:	nop    WORD PTR [rax+rax*1+0x0]
  4042d8:	ret    
  4042d9:	nop    DWORD PTR [rax+0x0]
  4042e0:	xor    eax,eax
  4042e2:	test   rsi,rsi
  4042e5:	setne  al
  4042e8:	neg    eax
  4042ea:	ret    
  4042eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004042f0 <table_compare_uint32@@Base>:
  4042f0:	endbr64 
  4042f4:	test   rdi,rdi
  4042f7:	je     404318 <table_compare_uint32@@Base+0x28>
  4042f9:	mov    eax,0x1
  4042fe:	test   rsi,rsi
  404301:	je     404310 <table_compare_uint32@@Base+0x20>
  404303:	mov    edx,DWORD PTR [rsi]
  404305:	cmp    DWORD PTR [rdi],edx
  404307:	ja     404310 <table_compare_uint32@@Base+0x20>
  404309:	sbb    eax,eax
  40430b:	ret    
  40430c:	nop    DWORD PTR [rax+0x0]
  404310:	ret    
  404311:	nop    DWORD PTR [rax+0x0]
  404318:	xor    eax,eax
  40431a:	test   rsi,rsi
  40431d:	setne  al
  404320:	neg    eax
  404322:	ret    
  404323:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40432e:	xchg   ax,ax

0000000000404330 <table_compare_char@@Base>:
  404330:	endbr64 
  404334:	test   rdi,rdi
  404337:	je     404360 <table_compare_char@@Base+0x30>
  404339:	mov    eax,0x1
  40433e:	test   rsi,rsi
  404341:	je     404358 <table_compare_char@@Base+0x28>
  404343:	movzx  edx,BYTE PTR [rsi]
  404346:	cmp    BYTE PTR [rdi],dl
  404348:	jg     404358 <table_compare_char@@Base+0x28>
  40434a:	setl   al
  40434d:	movzx  eax,al
  404350:	neg    eax
  404352:	ret    
  404353:	nop    DWORD PTR [rax+rax*1+0x0]
  404358:	ret    
  404359:	nop    DWORD PTR [rax+0x0]
  404360:	xor    eax,eax
  404362:	test   rsi,rsi
  404365:	setne  al
  404368:	neg    eax
  40436a:	ret    
  40436b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404370 <table_compare_uint8@@Base>:
  404370:	endbr64 
  404374:	test   rdi,rdi
  404377:	je     404398 <table_compare_uint8@@Base+0x28>
  404379:	mov    eax,0x1
  40437e:	test   rsi,rsi
  404381:	je     404390 <table_compare_uint8@@Base+0x20>
  404383:	movzx  edx,BYTE PTR [rsi]
  404386:	cmp    BYTE PTR [rdi],dl
  404388:	ja     404390 <table_compare_uint8@@Base+0x20>
  40438a:	sbb    eax,eax
  40438c:	ret    
  40438d:	nop    DWORD PTR [rax]
  404390:	ret    
  404391:	nop    DWORD PTR [rax+0x0]
  404398:	xor    eax,eax
  40439a:	test   rsi,rsi
  40439d:	setne  al
  4043a0:	neg    eax
  4043a2:	ret    
  4043a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4043ae:	xchg   ax,ax

00000000004043b0 <table_compare_short@@Base>:
  4043b0:	endbr64 
  4043b4:	test   rdi,rdi
  4043b7:	je     4043e0 <table_compare_short@@Base+0x30>
  4043b9:	mov    eax,0x1
  4043be:	test   rsi,rsi
  4043c1:	je     4043d8 <table_compare_short@@Base+0x28>
  4043c3:	movzx  edx,WORD PTR [rsi]
  4043c6:	cmp    WORD PTR [rdi],dx
  4043c9:	jg     4043d8 <table_compare_short@@Base+0x28>
  4043cb:	setl   al
  4043ce:	movzx  eax,al
  4043d1:	neg    eax
  4043d3:	ret    
  4043d4:	nop    DWORD PTR [rax+0x0]
  4043d8:	ret    
  4043d9:	nop    DWORD PTR [rax+0x0]
  4043e0:	xor    eax,eax
  4043e2:	test   rsi,rsi
  4043e5:	setne  al
  4043e8:	neg    eax
  4043ea:	ret    
  4043eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004043f0 <table_compare_ushort@@Base>:
  4043f0:	endbr64 
  4043f4:	test   rdi,rdi
  4043f7:	je     404418 <table_compare_ushort@@Base+0x28>
  4043f9:	mov    eax,0x1
  4043fe:	test   rsi,rsi
  404401:	je     404410 <table_compare_ushort@@Base+0x20>
  404403:	movzx  edx,WORD PTR [rsi]
  404406:	cmp    WORD PTR [rdi],dx
  404409:	ja     404410 <table_compare_ushort@@Base+0x20>
  40440b:	sbb    eax,eax
  40440d:	ret    
  40440e:	xchg   ax,ax
  404410:	ret    
  404411:	nop    DWORD PTR [rax+0x0]
  404418:	xor    eax,eax
  40441a:	test   rsi,rsi
  40441d:	setne  al
  404420:	neg    eax
  404422:	ret    
  404423:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40442e:	xchg   ax,ax

0000000000404430 <table_compare_long@@Base>:
  404430:	endbr64 
  404434:	test   rdi,rdi
  404437:	je     404460 <table_compare_long@@Base+0x30>
  404439:	mov    eax,0x1
  40443e:	test   rsi,rsi
  404441:	je     404458 <table_compare_long@@Base+0x28>
  404443:	mov    rdx,QWORD PTR [rsi]
  404446:	cmp    QWORD PTR [rdi],rdx
  404449:	jg     404458 <table_compare_long@@Base+0x28>
  40444b:	setl   al
  40444e:	movzx  eax,al
  404451:	neg    eax
  404453:	ret    
  404454:	nop    DWORD PTR [rax+0x0]
  404458:	ret    
  404459:	nop    DWORD PTR [rax+0x0]
  404460:	xor    eax,eax
  404462:	test   rsi,rsi
  404465:	setne  al
  404468:	neg    eax
  40446a:	ret    
  40446b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404470 <table_compare_ullong@@Base>:
  404470:	endbr64 
  404474:	test   rdi,rdi
  404477:	je     404498 <table_compare_ullong@@Base+0x28>
  404479:	mov    eax,0x1
  40447e:	test   rsi,rsi
  404481:	je     404490 <table_compare_ullong@@Base+0x20>
  404483:	mov    rdx,QWORD PTR [rsi]
  404486:	cmp    QWORD PTR [rdi],rdx
  404489:	ja     404490 <table_compare_ullong@@Base+0x20>
  40448b:	sbb    eax,eax
  40448d:	ret    
  40448e:	xchg   ax,ax
  404490:	ret    
  404491:	nop    DWORD PTR [rax+0x0]
  404498:	xor    eax,eax
  40449a:	test   rsi,rsi
  40449d:	setne  al
  4044a0:	neg    eax
  4044a2:	ret    
  4044a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4044ae:	xchg   ax,ax

00000000004044b0 <table_compare_llong@@Base>:
  4044b0:	endbr64 
  4044b4:	test   rdi,rdi
  4044b7:	je     4044e0 <table_compare_llong@@Base+0x30>
  4044b9:	mov    eax,0x1
  4044be:	test   rsi,rsi
  4044c1:	je     4044d8 <table_compare_llong@@Base+0x28>
  4044c3:	mov    rdx,QWORD PTR [rsi]
  4044c6:	cmp    QWORD PTR [rdi],rdx
  4044c9:	jg     4044d8 <table_compare_llong@@Base+0x28>
  4044cb:	setl   al
  4044ce:	movzx  eax,al
  4044d1:	neg    eax
  4044d3:	ret    
  4044d4:	nop    DWORD PTR [rax+0x0]
  4044d8:	ret    
  4044d9:	nop    DWORD PTR [rax+0x0]
  4044e0:	xor    eax,eax
  4044e2:	test   rsi,rsi
  4044e5:	setne  al
  4044e8:	neg    eax
  4044ea:	ret    
  4044eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004044f0 <table_compare_float@@Base>:
  4044f0:	endbr64 
  4044f4:	test   rdi,rdi
  4044f7:	je     404530 <table_compare_float@@Base+0x40>
  4044f9:	test   rsi,rsi
  4044fc:	je     404520 <table_compare_float@@Base+0x30>
  4044fe:	vmovss xmm0,DWORD PTR [rdi]
  404502:	vmovss xmm1,DWORD PTR [rsi]
  404506:	mov    eax,0x1
  40450b:	vcomiss xmm0,xmm1
  40450f:	ja     404525 <table_compare_float@@Base+0x35>
  404511:	xor    eax,eax
  404513:	vcomiss xmm1,xmm0
  404517:	seta   al
  40451a:	neg    eax
  40451c:	ret    
  40451d:	nop    DWORD PTR [rax]
  404520:	mov    eax,0x1
  404525:	ret    
  404526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404530:	xor    eax,eax
  404532:	test   rsi,rsi
  404535:	setne  al
  404538:	neg    eax
  40453a:	ret    
  40453b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404540 <table_compare_double@@Base>:
  404540:	endbr64 
  404544:	test   rdi,rdi
  404547:	je     404580 <table_compare_double@@Base+0x40>
  404549:	test   rsi,rsi
  40454c:	je     404570 <table_compare_double@@Base+0x30>
  40454e:	vmovsd xmm0,QWORD PTR [rdi]
  404552:	vmovsd xmm1,QWORD PTR [rsi]
  404556:	mov    eax,0x1
  40455b:	vcomisd xmm0,xmm1
  40455f:	ja     404575 <table_compare_double@@Base+0x35>
  404561:	xor    eax,eax
  404563:	vcomisd xmm1,xmm0
  404567:	seta   al
  40456a:	neg    eax
  40456c:	ret    
  40456d:	nop    DWORD PTR [rax]
  404570:	mov    eax,0x1
  404575:	ret    
  404576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404580:	xor    eax,eax
  404582:	test   rsi,rsi
  404585:	setne  al
  404588:	neg    eax
  40458a:	ret    
  40458b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404590 <table_compare_ldouble@@Base>:
  404590:	endbr64 
  404594:	test   rdi,rdi
  404597:	je     4045d8 <table_compare_ldouble@@Base+0x48>
  404599:	test   rsi,rsi
  40459c:	je     4045c0 <table_compare_ldouble@@Base+0x30>
  40459e:	fld    TBYTE PTR [rsi]
  4045a0:	fld    TBYTE PTR [rdi]
  4045a2:	mov    eax,0x1
  4045a7:	fcomi  st,st(1)
  4045a9:	ja     4045d0 <table_compare_ldouble@@Base+0x40>
  4045ab:	fxch   st(1)
  4045ad:	xor    eax,eax
  4045af:	fcomip st,st(1)
  4045b1:	fstp   st(0)
  4045b3:	seta   al
  4045b6:	neg    eax
  4045b8:	ret    
  4045b9:	nop    DWORD PTR [rax+0x0]
  4045c0:	mov    eax,0x1
  4045c5:	jmp    4045d4 <table_compare_ldouble@@Base+0x44>
  4045c7:	nop    WORD PTR [rax+rax*1+0x0]
  4045d0:	fstp   st(0)
  4045d2:	fstp   st(0)
  4045d4:	ret    
  4045d5:	nop    DWORD PTR [rax]
  4045d8:	xor    eax,eax
  4045da:	test   rsi,rsi
  4045dd:	setne  al
  4045e0:	neg    eax
  4045e2:	ret    
  4045e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4045ee:	xchg   ax,ax

00000000004045f0 <table_compare_uchar@@Base>:
  4045f0:	endbr64 
  4045f4:	test   rdi,rdi
  4045f7:	je     404618 <table_compare_uchar@@Base+0x28>
  4045f9:	mov    eax,0x1
  4045fe:	test   rsi,rsi
  404601:	je     404610 <table_compare_uchar@@Base+0x20>
  404603:	movzx  edx,BYTE PTR [rsi]
  404606:	cmp    BYTE PTR [rdi],dl
  404608:	ja     404610 <table_compare_uchar@@Base+0x20>
  40460a:	sbb    eax,eax
  40460c:	ret    
  40460d:	nop    DWORD PTR [rax]
  404610:	ret    
  404611:	nop    DWORD PTR [rax+0x0]
  404618:	xor    eax,eax
  40461a:	test   rsi,rsi
  40461d:	setne  al
  404620:	neg    eax
  404622:	ret    
  404623:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40462e:	xchg   ax,ax

0000000000404630 <table_compare_int@@Base>:
  404630:	endbr64 
  404634:	test   rdi,rdi
  404637:	je     404660 <table_compare_int@@Base+0x30>
  404639:	mov    eax,0x1
  40463e:	test   rsi,rsi
  404641:	je     404658 <table_compare_int@@Base+0x28>
  404643:	mov    edx,DWORD PTR [rsi]
  404645:	cmp    DWORD PTR [rdi],edx
  404647:	jg     404658 <table_compare_int@@Base+0x28>
  404649:	setl   al
  40464c:	movzx  eax,al
  40464f:	neg    eax
  404651:	ret    
  404652:	nop    WORD PTR [rax+rax*1+0x0]
  404658:	ret    
  404659:	nop    DWORD PTR [rax+0x0]
  404660:	xor    eax,eax
  404662:	test   rsi,rsi
  404665:	setne  al
  404668:	neg    eax
  40466a:	ret    
  40466b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404670 <table_compare_uint@@Base>:
  404670:	endbr64 
  404674:	test   rdi,rdi
  404677:	je     404698 <table_compare_uint@@Base+0x28>
  404679:	mov    eax,0x1
  40467e:	test   rsi,rsi
  404681:	je     404690 <table_compare_uint@@Base+0x20>
  404683:	mov    edx,DWORD PTR [rsi]
  404685:	cmp    DWORD PTR [rdi],edx
  404687:	ja     404690 <table_compare_uint@@Base+0x20>
  404689:	sbb    eax,eax
  40468b:	ret    
  40468c:	nop    DWORD PTR [rax+0x0]
  404690:	ret    
  404691:	nop    DWORD PTR [rax+0x0]
  404698:	xor    eax,eax
  40469a:	test   rsi,rsi
  40469d:	setne  al
  4046a0:	neg    eax
  4046a2:	ret    
  4046a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4046ae:	xchg   ax,ax

00000000004046b0 <table_compare_int8@@Base>:
  4046b0:	endbr64 
  4046b4:	test   rdi,rdi
  4046b7:	je     4046e0 <table_compare_int8@@Base+0x30>
  4046b9:	mov    eax,0x1
  4046be:	test   rsi,rsi
  4046c1:	je     4046d8 <table_compare_int8@@Base+0x28>
  4046c3:	movzx  edx,BYTE PTR [rsi]
  4046c6:	cmp    BYTE PTR [rdi],dl
  4046c8:	jg     4046d8 <table_compare_int8@@Base+0x28>
  4046ca:	setl   al
  4046cd:	movzx  eax,al
  4046d0:	neg    eax
  4046d2:	ret    
  4046d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4046d8:	ret    
  4046d9:	nop    DWORD PTR [rax+0x0]
  4046e0:	xor    eax,eax
  4046e2:	test   rsi,rsi
  4046e5:	setne  al
  4046e8:	neg    eax
  4046ea:	ret    
  4046eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004046f0 <table_compare_int16@@Base>:
  4046f0:	endbr64 
  4046f4:	test   rdi,rdi
  4046f7:	je     404720 <table_compare_int16@@Base+0x30>
  4046f9:	mov    eax,0x1
  4046fe:	test   rsi,rsi
  404701:	je     404718 <table_compare_int16@@Base+0x28>
  404703:	movzx  edx,WORD PTR [rsi]
  404706:	cmp    WORD PTR [rdi],dx
  404709:	jg     404718 <table_compare_int16@@Base+0x28>
  40470b:	setl   al
  40470e:	movzx  eax,al
  404711:	neg    eax
  404713:	ret    
  404714:	nop    DWORD PTR [rax+0x0]
  404718:	ret    
  404719:	nop    DWORD PTR [rax+0x0]
  404720:	xor    eax,eax
  404722:	test   rsi,rsi
  404725:	setne  al
  404728:	neg    eax
  40472a:	ret    
  40472b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404730 <table_compare_uint16@@Base>:
  404730:	endbr64 
  404734:	test   rdi,rdi
  404737:	je     404758 <table_compare_uint16@@Base+0x28>
  404739:	mov    eax,0x1
  40473e:	test   rsi,rsi
  404741:	je     404750 <table_compare_uint16@@Base+0x20>
  404743:	movzx  edx,WORD PTR [rsi]
  404746:	cmp    WORD PTR [rdi],dx
  404749:	ja     404750 <table_compare_uint16@@Base+0x20>
  40474b:	sbb    eax,eax
  40474d:	ret    
  40474e:	xchg   ax,ax
  404750:	ret    
  404751:	nop    DWORD PTR [rax+0x0]
  404758:	xor    eax,eax
  40475a:	test   rsi,rsi
  40475d:	setne  al
  404760:	neg    eax
  404762:	ret    
  404763:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40476e:	xchg   ax,ax

0000000000404770 <table_compare_int64@@Base>:
  404770:	endbr64 
  404774:	test   rdi,rdi
  404777:	je     4047a0 <table_compare_int64@@Base+0x30>
  404779:	mov    eax,0x1
  40477e:	test   rsi,rsi
  404781:	je     404798 <table_compare_int64@@Base+0x28>
  404783:	mov    rdx,QWORD PTR [rsi]
  404786:	cmp    QWORD PTR [rdi],rdx
  404789:	jg     404798 <table_compare_int64@@Base+0x28>
  40478b:	setl   al
  40478e:	movzx  eax,al
  404791:	neg    eax
  404793:	ret    
  404794:	nop    DWORD PTR [rax+0x0]
  404798:	ret    
  404799:	nop    DWORD PTR [rax+0x0]
  4047a0:	xor    eax,eax
  4047a2:	test   rsi,rsi
  4047a5:	setne  al
  4047a8:	neg    eax
  4047aa:	ret    
  4047ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004047b0 <table_compare_uint64@@Base>:
  4047b0:	endbr64 
  4047b4:	test   rdi,rdi
  4047b7:	je     4047d8 <table_compare_uint64@@Base+0x28>
  4047b9:	mov    eax,0x1
  4047be:	test   rsi,rsi
  4047c1:	je     4047d0 <table_compare_uint64@@Base+0x20>
  4047c3:	mov    rdx,QWORD PTR [rsi]
  4047c6:	cmp    QWORD PTR [rdi],rdx
  4047c9:	ja     4047d0 <table_compare_uint64@@Base+0x20>
  4047cb:	sbb    eax,eax
  4047cd:	ret    
  4047ce:	xchg   ax,ax
  4047d0:	ret    
  4047d1:	nop    DWORD PTR [rax+0x0]
  4047d8:	xor    eax,eax
  4047da:	test   rsi,rsi
  4047dd:	setne  al
  4047e0:	neg    eax
  4047e2:	ret    
  4047e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4047ee:	xchg   ax,ax

00000000004047f0 <table_compare_ulong@@Base>:
  4047f0:	endbr64 
  4047f4:	test   rdi,rdi
  4047f7:	je     404818 <table_compare_ulong@@Base+0x28>
  4047f9:	mov    eax,0x1
  4047fe:	test   rsi,rsi
  404801:	je     404810 <table_compare_ulong@@Base+0x20>
  404803:	mov    rdx,QWORD PTR [rsi]
  404806:	cmp    QWORD PTR [rdi],rdx
  404809:	ja     404810 <table_compare_ulong@@Base+0x20>
  40480b:	sbb    eax,eax
  40480d:	ret    
  40480e:	xchg   ax,ax
  404810:	ret    
  404811:	nop    DWORD PTR [rax+0x0]
  404818:	xor    eax,eax
  40481a:	test   rsi,rsi
  40481d:	setne  al
  404820:	neg    eax
  404822:	ret    
  404823:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40482e:	xchg   ax,ax

0000000000404830 <table_get_default_compare_function_for_data_type@@Base>:
  404830:	endbr64 
  404834:	cmp    edi,0x17
  404837:	ja     4049c8 <table_get_default_compare_function_for_data_type@@Base+0x198>
  40483d:	lea    rdx,[rip+0x28cc]        # 407110 <_IO_stdin_used@@Base+0x110>
  404844:	mov    edi,edi
  404846:	movsxd rax,DWORD PTR [rdx+rdi*4]
  40484a:	add    rax,rdx
  40484d:	notrack jmp rax
  404850:	mov    rax,0x404270
  404857:	ret    
  404858:	nop    DWORD PTR [rax+rax*1+0x0]
  404860:	mov    rax,0x404240
  404867:	ret    
  404868:	nop    DWORD PTR [rax+rax*1+0x0]
  404870:	mov    rax,0x4045f0
  404877:	ret    
  404878:	nop    DWORD PTR [rax+rax*1+0x0]
  404880:	mov    rax,0x404330
  404887:	ret    
  404888:	nop    DWORD PTR [rax+rax*1+0x0]
  404890:	mov    rax,0x404590
  404897:	ret    
  404898:	nop    DWORD PTR [rax+rax*1+0x0]
  4048a0:	mov    rax,0x404540
  4048a7:	ret    
  4048a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4048b0:	mov    rax,0x4044f0
  4048b7:	ret    
  4048b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4048c0:	mov    rax,0x404470
  4048c7:	ret    
  4048c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4048d0:	mov    rax,0x4044b0
  4048d7:	ret    
  4048d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4048e0:	mov    rax,0x4047f0
  4048e7:	ret    
  4048e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4048f0:	mov    rax,0x404430
  4048f7:	ret    
  4048f8:	nop    DWORD PTR [rax+rax*1+0x0]
  404900:	mov    rax,0x4043f0
  404907:	ret    
  404908:	nop    DWORD PTR [rax+rax*1+0x0]
  404910:	mov    rax,0x4043b0
  404917:	ret    
  404918:	nop    DWORD PTR [rax+rax*1+0x0]
  404920:	mov    rax,0x4047b0
  404927:	ret    
  404928:	nop    DWORD PTR [rax+rax*1+0x0]
  404930:	mov    rax,0x404770
  404937:	ret    
  404938:	nop    DWORD PTR [rax+rax*1+0x0]
  404940:	mov    rax,0x4042f0
  404947:	ret    
  404948:	nop    DWORD PTR [rax+rax*1+0x0]
  404950:	mov    rax,0x4042b0
  404957:	ret    
  404958:	nop    DWORD PTR [rax+rax*1+0x0]
  404960:	mov    rax,0x404730
  404967:	ret    
  404968:	nop    DWORD PTR [rax+rax*1+0x0]
  404970:	mov    rax,0x4046f0
  404977:	ret    
  404978:	nop    DWORD PTR [rax+rax*1+0x0]
  404980:	mov    rax,0x404370
  404987:	ret    
  404988:	nop    DWORD PTR [rax+rax*1+0x0]
  404990:	mov    rax,0x4046b0
  404997:	ret    
  404998:	nop    DWORD PTR [rax+rax*1+0x0]
  4049a0:	mov    rax,0x404670
  4049a7:	ret    
  4049a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4049b0:	mov    rax,0x404630
  4049b7:	ret    
  4049b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4049c0:	mov    rax,0x404220
  4049c7:	ret    
  4049c8:	xor    eax,eax
  4049ca:	ret    
  4049cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004049d0 <table_get@@Base>:
  4049d0:	endbr64 
  4049d4:	sub    rsp,0x8
  4049d8:	call   406120 <table_get_cell_ptr@@Base>
  4049dd:	mov    rax,QWORD PTR [rax]
  4049e0:	add    rsp,0x8
  4049e4:	ret    
  4049e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004049f0 <table_get_bool@@Base>:
  4049f0:	endbr64 
  4049f4:	sub    rsp,0x8
  4049f8:	call   4049d0 <table_get@@Base>
  4049fd:	movzx  eax,BYTE PTR [rax]
  404a00:	add    rsp,0x8
  404a04:	ret    
  404a05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404a10 <table_get_int@@Base>:
  404a10:	endbr64 
  404a14:	sub    rsp,0x8
  404a18:	call   4049d0 <table_get@@Base>
  404a1d:	mov    eax,DWORD PTR [rax]
  404a1f:	add    rsp,0x8
  404a23:	ret    
  404a24:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404a2f:	nop

0000000000404a30 <table_get_uint@@Base>:
  404a30:	endbr64 
  404a34:	sub    rsp,0x8
  404a38:	call   4049d0 <table_get@@Base>
  404a3d:	mov    eax,DWORD PTR [rax]
  404a3f:	add    rsp,0x8
  404a43:	ret    
  404a44:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404a4f:	nop

0000000000404a50 <table_get_int8@@Base>:
  404a50:	endbr64 
  404a54:	sub    rsp,0x8
  404a58:	call   4049d0 <table_get@@Base>
  404a5d:	movzx  eax,BYTE PTR [rax]
  404a60:	add    rsp,0x8
  404a64:	ret    
  404a65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404a70 <table_get_uint8@@Base>:
  404a70:	endbr64 
  404a74:	sub    rsp,0x8
  404a78:	call   4049d0 <table_get@@Base>
  404a7d:	movzx  eax,BYTE PTR [rax]
  404a80:	add    rsp,0x8
  404a84:	ret    
  404a85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404a90 <table_get_int16@@Base>:
  404a90:	endbr64 
  404a94:	sub    rsp,0x8
  404a98:	call   4049d0 <table_get@@Base>
  404a9d:	movzx  eax,WORD PTR [rax]
  404aa0:	add    rsp,0x8
  404aa4:	ret    
  404aa5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404ab0 <table_get_uint16@@Base>:
  404ab0:	endbr64 
  404ab4:	sub    rsp,0x8
  404ab8:	call   4049d0 <table_get@@Base>
  404abd:	movzx  eax,WORD PTR [rax]
  404ac0:	add    rsp,0x8
  404ac4:	ret    
  404ac5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404ad0 <table_get_int32@@Base>:
  404ad0:	endbr64 
  404ad4:	jmp    404a10 <table_get_int@@Base>
  404ad9:	nop    DWORD PTR [rax+0x0]

0000000000404ae0 <table_get_uint32@@Base>:
  404ae0:	endbr64 
  404ae4:	jmp    404a30 <table_get_uint@@Base>
  404ae9:	nop    DWORD PTR [rax+0x0]

0000000000404af0 <table_get_int64@@Base>:
  404af0:	endbr64 
  404af4:	sub    rsp,0x8
  404af8:	call   4049d0 <table_get@@Base>
  404afd:	mov    rax,QWORD PTR [rax]
  404b00:	add    rsp,0x8
  404b04:	ret    
  404b05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404b10 <table_get_uint64@@Base>:
  404b10:	endbr64 
  404b14:	sub    rsp,0x8
  404b18:	call   4049d0 <table_get@@Base>
  404b1d:	mov    rax,QWORD PTR [rax]
  404b20:	add    rsp,0x8
  404b24:	ret    
  404b25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404b30 <table_get_short@@Base>:
  404b30:	endbr64 
  404b34:	jmp    404a90 <table_get_int16@@Base>
  404b39:	nop    DWORD PTR [rax+0x0]

0000000000404b40 <table_get_ushort@@Base>:
  404b40:	endbr64 
  404b44:	jmp    404ab0 <table_get_uint16@@Base>
  404b49:	nop    DWORD PTR [rax+0x0]

0000000000404b50 <table_get_long@@Base>:
  404b50:	endbr64 
  404b54:	jmp    404af0 <table_get_int64@@Base>
  404b56:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404b60 <table_get_ulong@@Base>:
  404b60:	endbr64 
  404b64:	jmp    404b10 <table_get_uint64@@Base>
  404b66:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404b70 <table_get_llong@@Base>:
  404b70:	endbr64 
  404b74:	sub    rsp,0x8
  404b78:	call   4049d0 <table_get@@Base>
  404b7d:	mov    rax,QWORD PTR [rax]
  404b80:	add    rsp,0x8
  404b84:	ret    
  404b85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404b90 <table_get_ullong@@Base>:
  404b90:	endbr64 
  404b94:	sub    rsp,0x8
  404b98:	call   4049d0 <table_get@@Base>
  404b9d:	mov    rax,QWORD PTR [rax]
  404ba0:	add    rsp,0x8
  404ba4:	ret    
  404ba5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404bb0 <table_get_float@@Base>:
  404bb0:	endbr64 
  404bb4:	sub    rsp,0x8
  404bb8:	call   4049d0 <table_get@@Base>
  404bbd:	vmovss xmm0,DWORD PTR [rax]
  404bc1:	add    rsp,0x8
  404bc5:	ret    
  404bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404bd0 <table_get_double@@Base>:
  404bd0:	endbr64 
  404bd4:	sub    rsp,0x8
  404bd8:	call   4049d0 <table_get@@Base>
  404bdd:	vmovsd xmm0,QWORD PTR [rax]
  404be1:	add    rsp,0x8
  404be5:	ret    
  404be6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404bf0 <table_get_ldouble@@Base>:
  404bf0:	endbr64 
  404bf4:	sub    rsp,0x8
  404bf8:	call   4049d0 <table_get@@Base>
  404bfd:	fld    TBYTE PTR [rax]
  404bff:	add    rsp,0x8
  404c03:	ret    
  404c04:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404c0f:	nop

0000000000404c10 <table_get_char@@Base>:
  404c10:	endbr64 
  404c14:	jmp    404a50 <table_get_int8@@Base>
  404c19:	nop    DWORD PTR [rax+0x0]

0000000000404c20 <table_get_uchar@@Base>:
  404c20:	endbr64 
  404c24:	jmp    404a70 <table_get_uint8@@Base>
  404c29:	nop    DWORD PTR [rax+0x0]

0000000000404c30 <table_get_string@@Base>:
  404c30:	endbr64 
  404c34:	jmp    4049d0 <table_get@@Base>
  404c39:	nop    DWORD PTR [rax+0x0]

0000000000404c40 <table_get_ptr@@Base>:
  404c40:	endbr64 
  404c44:	jmp    4049d0 <table_get@@Base>
  404c49:	nop    DWORD PTR [rax+0x0]

0000000000404c50 <table_get_row_length@@Base>:
  404c50:	endbr64 
  404c54:	mov    eax,DWORD PTR [rdi+0x28]
  404c57:	ret    
  404c58:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404c60 <table_get_row_ptr@@Base>:
  404c60:	endbr64 
  404c64:	mov    rax,QWORD PTR [rdi+0x20]
  404c68:	movsxd rsi,esi
  404c6b:	lea    rax,[rax+rsi*8]
  404c6f:	ret    

0000000000404c70 <table_row_init@@Base>:
  404c70:	endbr64 
  404c74:	push   rbp
  404c75:	push   rbx
  404c76:	mov    rbx,rdi
  404c79:	sub    rsp,0x8
  404c7d:	call   404c60 <table_get_row_ptr@@Base>
  404c82:	mov    rdi,QWORD PTR [rbx+0x18]
  404c86:	mov    rbp,rax
  404c89:	shl    rdi,0x3
  404c8d:	call   4031a0 <malloc@plt>
  404c92:	mov    QWORD PTR [rbp+0x0],rax
  404c96:	add    rsp,0x8
  404c9a:	pop    rbx
  404c9b:	pop    rbp
  404c9c:	ret    
  404c9d:	nop    DWORD PTR [rax]

0000000000404ca0 <table_add_row@@Base>:
  404ca0:	endbr64 
  404ca4:	push   r13
  404ca6:	push   r12
  404ca8:	push   rbp
  404ca9:	push   rbx
  404caa:	mov    rbx,rdi
  404cad:	sub    rsp,0x8
  404cb1:	call   404c50 <table_get_row_length@@Base>
  404cb6:	mov    rsi,QWORD PTR [rbx+0x30]
  404cba:	cdqe   
  404cbc:	xor    edx,edx
  404cbe:	div    rsi
  404cc1:	test   rdx,rdx
  404cc4:	je     404d38 <table_add_row@@Base+0x98>
  404cc6:	mov    rdi,rbx
  404cc9:	call   404c50 <table_get_row_length@@Base>
  404cce:	mov    rdi,rbx
  404cd1:	mov    r12d,eax
  404cd4:	call   403d70 <table_get_column_length@@Base>
  404cd9:	mov    r13d,eax
  404cdc:	mov    esi,r12d
  404cdf:	mov    rdi,rbx
  404ce2:	call   404c70 <table_row_init@@Base>
  404ce7:	test   r13d,r13d
  404cea:	jle    404d04 <table_add_row@@Base+0x64>
  404cec:	xor    ebp,ebp
  404cee:	xchg   ax,ax
  404cf0:	mov    edx,ebp
  404cf2:	mov    esi,r12d
  404cf5:	mov    rdi,rbx
  404cf8:	inc    ebp
  404cfa:	call   406140 <table_cell_init@@Base>
  404cff:	cmp    r13d,ebp
  404d02:	jne    404cf0 <table_add_row@@Base+0x50>
  404d04:	mov    rdi,rbx
  404d07:	call   404c50 <table_get_row_length@@Base>
  404d0c:	mov    esi,eax
  404d0e:	mov    edx,0xffffffff
  404d13:	mov    rdi,rbx
  404d16:	mov    ecx,0x2
  404d1b:	call   403d00 <table_notify@@Base>
  404d20:	mov    eax,DWORD PTR [rbx+0x28]
  404d23:	lea    edx,[rax+0x1]
  404d26:	mov    DWORD PTR [rbx+0x28],edx
  404d29:	add    rsp,0x8
  404d2d:	pop    rbx
  404d2e:	pop    rbp
  404d2f:	pop    r12
  404d31:	pop    r13
  404d33:	ret    
  404d34:	nop    DWORD PTR [rax+0x0]
  404d38:	add    rsi,QWORD PTR [rbx+0x38]
  404d3c:	mov    QWORD PTR [rbx+0x38],rsi
  404d40:	mov    rdi,QWORD PTR [rbx+0x20]
  404d44:	shl    rsi,0x3
  404d48:	call   4031c0 <realloc@plt>
  404d4d:	mov    QWORD PTR [rbx+0x20],rax
  404d51:	jmp    404cc6 <table_add_row@@Base+0x26>
  404d56:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404d60 <table_row_destroy@@Base>:
  404d60:	endbr64 
  404d64:	push   r14
  404d66:	push   r13
  404d68:	mov    r13d,esi
  404d6b:	push   r12
  404d6d:	push   rbp
  404d6e:	mov    rbp,rdi
  404d71:	push   rbx
  404d72:	call   403d70 <table_get_column_length@@Base>
  404d77:	mov    esi,r13d
  404d7a:	mov    rdi,rbp
  404d7d:	mov    r12d,eax
  404d80:	call   404c60 <table_get_row_ptr@@Base>
  404d85:	mov    r14,rax
  404d88:	test   r12d,r12d
  404d8b:	jle    404da4 <table_row_destroy@@Base+0x44>
  404d8d:	xor    ebx,ebx
  404d8f:	nop
  404d90:	mov    edx,ebx
  404d92:	mov    esi,r13d
  404d95:	mov    rdi,rbp
  404d98:	inc    ebx
  404d9a:	call   406160 <table_cell_destroy@@Base>
  404d9f:	cmp    r12d,ebx
  404da2:	jne    404d90 <table_row_destroy@@Base+0x30>
  404da4:	mov    rdi,QWORD PTR [r14]
  404da7:	test   rdi,rdi
  404daa:	je     404dc0 <table_row_destroy@@Base+0x60>
  404dac:	pop    rbx
  404dad:	pop    rbp
  404dae:	pop    r12
  404db0:	pop    r13
  404db2:	pop    r14
  404db4:	jmp    403120 <free@plt>
  404db9:	nop    DWORD PTR [rax+0x0]
  404dc0:	pop    rbx
  404dc1:	pop    rbp
  404dc2:	pop    r12
  404dc4:	pop    r13
  404dc6:	pop    r14
  404dc8:	ret    
  404dc9:	nop    DWORD PTR [rax+0x0]

0000000000404dd0 <table_remove_row@@Base>:
  404dd0:	endbr64 
  404dd4:	push   r14
  404dd6:	push   r13
  404dd8:	push   r12
  404dda:	push   rbp
  404ddb:	mov    ebp,esi
  404ddd:	push   rbx
  404dde:	mov    rbx,rdi
  404de1:	call   404c50 <table_get_row_length@@Base>
  404de6:	mov    rdi,rbx
  404de9:	mov    r13d,eax
  404dec:	call   403d70 <table_get_column_length@@Base>
  404df1:	test   eax,eax
  404df3:	jle    404e32 <table_remove_row@@Base+0x62>
  404df5:	mov    r14d,eax
  404df8:	xor    r12d,r12d
  404dfb:	nop    DWORD PTR [rax+rax*1+0x0]
  404e00:	mov    esi,r12d
  404e03:	mov    rdi,rbx
  404e06:	call   404110 <table_get_column_data_type@@Base>
  404e0b:	cmp    eax,0x17
  404e0e:	je     404e2a <table_remove_row@@Base+0x5a>
  404e10:	mov    rdi,rbx
  404e13:	mov    edx,r12d
  404e16:	mov    esi,ebp
  404e18:	call   406120 <table_get_cell_ptr@@Base>
  404e1d:	mov    rdi,QWORD PTR [rax]
  404e20:	test   rdi,rdi
  404e23:	je     404e2a <table_remove_row@@Base+0x5a>
  404e25:	call   403120 <free@plt>
  404e2a:	inc    r12d
  404e2d:	cmp    r14d,r12d
  404e30:	jne    404e00 <table_remove_row@@Base+0x30>
  404e32:	mov    rdi,rbx
  404e35:	mov    esi,ebp
  404e37:	call   404c60 <table_get_row_ptr@@Base>
  404e3c:	mov    rdi,QWORD PTR [rax]
  404e3f:	test   rdi,rdi
  404e42:	je     404e49 <table_remove_row@@Base+0x79>
  404e44:	call   403120 <free@plt>
  404e49:	lea    eax,[r13-0x1]
  404e4d:	cmp    ebp,eax
  404e4f:	jge    404e86 <table_remove_row@@Base+0xb6>
  404e51:	sub    r13d,ebp
  404e54:	movsxd rax,ebp
  404e57:	lea    ecx,[r13-0x2]
  404e5b:	lea    rdx,[rax*8+0x8]
  404e63:	lea    rax,[rax+rcx*1+0x2]
  404e68:	shl    rax,0x3
  404e6c:	nop    DWORD PTR [rax+0x0]
  404e70:	mov    rcx,QWORD PTR [rbx+0x20]
  404e74:	mov    rsi,QWORD PTR [rcx+rdx*1]
  404e78:	mov    QWORD PTR [rcx+rdx*1-0x8],rsi
  404e7d:	add    rdx,0x8
  404e81:	cmp    rax,rdx
  404e84:	jne    404e70 <table_remove_row@@Base+0xa0>
  404e86:	dec    DWORD PTR [rbx+0x28]
  404e89:	mov    rdi,rbx
  404e8c:	call   404c50 <table_get_row_length@@Base>
  404e91:	mov    rcx,QWORD PTR [rbx+0x30]
  404e95:	cdqe   
  404e97:	xor    edx,edx
  404e99:	div    rcx
  404e9c:	test   rdx,rdx
  404e9f:	je     404ec0 <table_remove_row@@Base+0xf0>
  404ea1:	mov    esi,ebp
  404ea3:	mov    rdi,rbx
  404ea6:	mov    ecx,0x4
  404eab:	mov    edx,0xffffffff
  404eb0:	call   403d00 <table_notify@@Base>
  404eb5:	pop    rbx
  404eb6:	pop    rbp
  404eb7:	pop    r12
  404eb9:	pop    r13
  404ebb:	xor    eax,eax
  404ebd:	pop    r14
  404ebf:	ret    
  404ec0:	mov    rsi,QWORD PTR [rbx+0x38]
  404ec4:	mov    rdi,QWORD PTR [rbx+0x20]
  404ec8:	sub    rsi,rcx
  404ecb:	mov    QWORD PTR [rbx+0x38],rsi
  404ecf:	shl    rsi,0x3
  404ed3:	call   4031c0 <realloc@plt>
  404ed8:	mov    QWORD PTR [rbx+0x20],rax
  404edc:	jmp    404ea1 <table_remove_row@@Base+0xd1>
  404ede:	xchg   ax,ax

0000000000404ee0 <table_set_row_ptr@@Base>:
  404ee0:	endbr64 
  404ee4:	mov    rax,QWORD PTR [rdi+0x20]
  404ee8:	mov    rdx,QWORD PTR [rdx]
  404eeb:	movsxd rsi,esi
  404eee:	mov    QWORD PTR [rax+rsi*8],rdx
  404ef2:	ret    
  404ef3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404efd:	nop    DWORD PTR [rax]

0000000000404f00 <table_set@@Base>:
  404f00:	endbr64 
  404f04:	push   r15
  404f06:	mov    r15,rcx
  404f09:	push   r14
  404f0b:	mov    r14d,esi
  404f0e:	push   r13
  404f10:	push   r12
  404f12:	mov    r12d,edx
  404f15:	push   rbp
  404f16:	mov    rbp,rdi
  404f19:	push   rbx
  404f1a:	mov    ebx,r8d
  404f1d:	sub    rsp,0x8
  404f21:	call   406120 <table_get_cell_ptr@@Base>
  404f26:	mov    esi,r12d
  404f29:	mov    rdi,rbp
  404f2c:	mov    r13,rax
  404f2f:	call   403d80 <table_get_col_ptr@@Base>
  404f34:	cmp    ebx,0x17
  404f37:	ja     404f5a <table_set@@Base+0x5a>
  404f39:	lea    rsi,[rip+0x2230]        # 407170 <_IO_stdin_used@@Base+0x170>
  404f40:	movsxd rdx,DWORD PTR [rsi+rbx*4]
  404f44:	add    rdx,rsi
  404f47:	notrack jmp rdx
  404f4a:	nop    WORD PTR [rax+rax*1+0x0]
  404f50:	cmp    DWORD PTR [rax+0x8],0xd
  404f54:	je     405048 <table_set@@Base+0x148>
  404f5a:	add    rsp,0x8
  404f5e:	pop    rbx
  404f5f:	pop    rbp
  404f60:	pop    r12
  404f62:	pop    r13
  404f64:	pop    r14
  404f66:	mov    eax,0xffffffff
  404f6b:	pop    r15
  404f6d:	ret    
  404f6e:	xchg   ax,ax
  404f70:	cmp    DWORD PTR [rax+0x8],0x16
  404f74:	jne    404f5a <table_set@@Base+0x5a>
  404f76:	mov    rax,QWORD PTR [r13+0x0]
  404f7a:	test   rax,rax
  404f7d:	je     405220 <table_set@@Base+0x320>
  404f83:	movzx  edx,BYTE PTR [r15]
  404f87:	mov    BYTE PTR [rax],dl
  404f89:	mov    edx,r12d
  404f8c:	mov    esi,r14d
  404f8f:	mov    rdi,rbp
  404f92:	mov    ecx,0x1
  404f97:	call   403d00 <table_notify@@Base>
  404f9c:	add    rsp,0x8
  404fa0:	pop    rbx
  404fa1:	pop    rbp
  404fa2:	pop    r12
  404fa4:	pop    r13
  404fa6:	pop    r14
  404fa8:	xor    eax,eax
  404faa:	pop    r15
  404fac:	ret    
  404fad:	nop    DWORD PTR [rax]
  404fb0:	cmp    DWORD PTR [rax+0x8],0x15
  404fb4:	jne    404f5a <table_set@@Base+0x5a>
  404fb6:	mov    rdi,r15
  404fb9:	call   403140 <strlen@plt>
  404fbe:	mov    rdi,QWORD PTR [r13+0x0]
  404fc2:	lea    rsi,[rax+0x1]
  404fc6:	call   4031c0 <realloc@plt>
  404fcb:	mov    QWORD PTR [r13+0x0],rax
  404fcf:	test   rax,rax
  404fd2:	je     404f5a <table_set@@Base+0x5a>
  404fd4:	mov    rsi,r15
  404fd7:	mov    rdi,rax
  404fda:	call   403130 <strcpy@plt>
  404fdf:	jmp    404f89 <table_set@@Base+0x89>
  404fe1:	nop    DWORD PTR [rax+0x0]
  404fe8:	cmp    DWORD PTR [rax+0x8],0x14
  404fec:	jne    404f5a <table_set@@Base+0x5a>
  404ff2:	jmp    404f76 <table_set@@Base+0x76>
  404ff4:	nop    DWORD PTR [rax+0x0]
  404ff8:	cmp    DWORD PTR [rax+0x8],0x13
  404ffc:	jne    404f5a <table_set@@Base+0x5a>
  405002:	jmp    404f76 <table_set@@Base+0x76>
  405007:	nop    WORD PTR [rax+rax*1+0x0]
  405010:	cmp    DWORD PTR [rax+0x8],0x12
  405014:	jne    404f5a <table_set@@Base+0x5a>
  40501a:	mov    rax,QWORD PTR [r13+0x0]
  40501e:	test   rax,rax
  405021:	je     40523c <table_set@@Base+0x33c>
  405027:	vmovdqu xmm0,XMMWORD PTR [r15]
  40502c:	vmovups XMMWORD PTR [rax],xmm0
  405030:	jmp    404f89 <table_set@@Base+0x89>
  405035:	nop    DWORD PTR [rax]
  405038:	cmp    DWORD PTR [rax+0x8],0x11
  40503c:	jne    404f5a <table_set@@Base+0x5a>
  405042:	nop    WORD PTR [rax+rax*1+0x0]
  405048:	mov    rax,QWORD PTR [r13+0x0]
  40504c:	test   rax,rax
  40504f:	je     405200 <table_set@@Base+0x300>
  405055:	mov    rdx,QWORD PTR [r15]
  405058:	mov    QWORD PTR [rax],rdx
  40505b:	jmp    404f89 <table_set@@Base+0x89>
  405060:	cmp    DWORD PTR [rax+0x8],0x10
  405064:	jne    404f5a <table_set@@Base+0x5a>
  40506a:	nop    WORD PTR [rax+rax*1+0x0]
  405070:	mov    rax,QWORD PTR [r13+0x0]
  405074:	test   rax,rax
  405077:	je     4051c0 <table_set@@Base+0x2c0>
  40507d:	mov    edx,DWORD PTR [r15]
  405080:	mov    DWORD PTR [rax],edx
  405082:	jmp    404f89 <table_set@@Base+0x89>
  405087:	nop    WORD PTR [rax+rax*1+0x0]
  405090:	cmp    DWORD PTR [rax+0x8],0xf
  405094:	jne    404f5a <table_set@@Base+0x5a>
  40509a:	jmp    405048 <table_set@@Base+0x148>
  40509c:	nop    DWORD PTR [rax+0x0]
  4050a0:	cmp    DWORD PTR [rax+0x8],0xe
  4050a4:	jne    404f5a <table_set@@Base+0x5a>
  4050aa:	jmp    405048 <table_set@@Base+0x148>
  4050ac:	nop    DWORD PTR [rax+0x0]
  4050b0:	cmp    DWORD PTR [rax+0x8],0xc
  4050b4:	jne    404f5a <table_set@@Base+0x5a>
  4050ba:	jmp    405048 <table_set@@Base+0x148>
  4050bc:	nop    DWORD PTR [rax+0x0]
  4050c0:	cmp    DWORD PTR [rax+0x8],0xb
  4050c4:	jne    404f5a <table_set@@Base+0x5a>
  4050ca:	mov    rax,QWORD PTR [r13+0x0]
  4050ce:	test   rax,rax
  4050d1:	je     4051e0 <table_set@@Base+0x2e0>
  4050d7:	movzx  edx,WORD PTR [r15]
  4050db:	mov    WORD PTR [rax],dx
  4050de:	jmp    404f89 <table_set@@Base+0x89>
  4050e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4050e8:	cmp    DWORD PTR [rax+0x8],0xa
  4050ec:	je     4050ca <table_set@@Base+0x1ca>
  4050ee:	jmp    404f5a <table_set@@Base+0x5a>
  4050f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4050f8:	cmp    DWORD PTR [rax+0x8],0x6
  4050fc:	je     405070 <table_set@@Base+0x170>
  405102:	jmp    404f5a <table_set@@Base+0x5a>
  405107:	nop    WORD PTR [rax+rax*1+0x0]
  405110:	cmp    DWORD PTR [rax+0x8],0x5
  405114:	je     4050ca <table_set@@Base+0x1ca>
  405116:	jmp    404f5a <table_set@@Base+0x5a>
  40511b:	nop    DWORD PTR [rax+rax*1+0x0]
  405120:	cmp    DWORD PTR [rax+0x8],0x4
  405124:	je     4050ca <table_set@@Base+0x1ca>
  405126:	jmp    404f5a <table_set@@Base+0x5a>
  40512b:	nop    DWORD PTR [rax+rax*1+0x0]
  405130:	cmp    DWORD PTR [rax+0x8],0x3
  405134:	je     404f76 <table_set@@Base+0x76>
  40513a:	jmp    404f5a <table_set@@Base+0x5a>
  40513f:	nop
  405140:	cmp    DWORD PTR [rax+0x8],0x2
  405144:	je     404f76 <table_set@@Base+0x76>
  40514a:	jmp    404f5a <table_set@@Base+0x5a>
  40514f:	nop
  405150:	cmp    DWORD PTR [rax+0x8],0x1
  405154:	je     405070 <table_set@@Base+0x170>
  40515a:	jmp    404f5a <table_set@@Base+0x5a>
  40515f:	nop
  405160:	mov    eax,DWORD PTR [rax+0x8]
  405163:	test   eax,eax
  405165:	je     405070 <table_set@@Base+0x170>
  40516b:	jmp    404f5a <table_set@@Base+0x5a>
  405170:	cmp    DWORD PTR [rax+0x8],0x17
  405174:	jne    404f5a <table_set@@Base+0x5a>
  40517a:	mov    QWORD PTR [r13+0x0],r15
  40517e:	jmp    404f89 <table_set@@Base+0x89>
  405183:	nop    DWORD PTR [rax+rax*1+0x0]
  405188:	cmp    DWORD PTR [rax+0x8],0x8
  40518c:	je     405048 <table_set@@Base+0x148>
  405192:	jmp    404f5a <table_set@@Base+0x5a>
  405197:	nop    WORD PTR [rax+rax*1+0x0]
  4051a0:	cmp    DWORD PTR [rax+0x8],0x7
  4051a4:	je     405070 <table_set@@Base+0x170>
  4051aa:	jmp    404f5a <table_set@@Base+0x5a>
  4051af:	nop
  4051b0:	cmp    DWORD PTR [rax+0x8],0x9
  4051b4:	je     405048 <table_set@@Base+0x148>
  4051ba:	jmp    404f5a <table_set@@Base+0x5a>
  4051bf:	nop
  4051c0:	mov    edi,0x4
  4051c5:	call   4031a0 <malloc@plt>
  4051ca:	mov    QWORD PTR [r13+0x0],rax
  4051ce:	test   rax,rax
  4051d1:	jne    40507d <table_set@@Base+0x17d>
  4051d7:	jmp    404f5a <table_set@@Base+0x5a>
  4051dc:	nop    DWORD PTR [rax+0x0]
  4051e0:	mov    edi,0x2
  4051e5:	call   4031a0 <malloc@plt>
  4051ea:	mov    QWORD PTR [r13+0x0],rax
  4051ee:	test   rax,rax
  4051f1:	jne    4050d7 <table_set@@Base+0x1d7>
  4051f7:	jmp    404f5a <table_set@@Base+0x5a>
  4051fc:	nop    DWORD PTR [rax+0x0]
  405200:	mov    edi,0x8
  405205:	call   4031a0 <malloc@plt>
  40520a:	mov    QWORD PTR [r13+0x0],rax
  40520e:	test   rax,rax
  405211:	jne    405055 <table_set@@Base+0x155>
  405217:	jmp    404f5a <table_set@@Base+0x5a>
  40521c:	nop    DWORD PTR [rax+0x0]
  405220:	mov    edi,0x1
  405225:	call   4031a0 <malloc@plt>
  40522a:	mov    QWORD PTR [r13+0x0],rax
  40522e:	test   rax,rax
  405231:	jne    404f83 <table_set@@Base+0x83>
  405237:	jmp    404f5a <table_set@@Base+0x5a>
  40523c:	mov    edi,0x10
  405241:	call   4031a0 <malloc@plt>
  405246:	mov    QWORD PTR [r13+0x0],rax
  40524a:	test   rax,rax
  40524d:	jne    405027 <table_set@@Base+0x127>
  405253:	jmp    404f5a <table_set@@Base+0x5a>
  405258:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405260 <table_set_bool@@Base>:
  405260:	endbr64 
  405264:	sub    rsp,0x18
  405268:	mov    BYTE PTR [rsp+0xc],cl
  40526c:	mov    r8d,0x16
  405272:	lea    rcx,[rsp+0xc]
  405277:	call   404f00 <table_set@@Base>
  40527c:	add    rsp,0x18
  405280:	ret    
  405281:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40528c:	nop    DWORD PTR [rax+0x0]

0000000000405290 <table_set_int@@Base>:
  405290:	endbr64 
  405294:	sub    rsp,0x18
  405298:	mov    DWORD PTR [rsp+0xc],ecx
  40529c:	xor    r8d,r8d
  40529f:	lea    rcx,[rsp+0xc]
  4052a4:	call   404f00 <table_set@@Base>
  4052a9:	add    rsp,0x18
  4052ad:	ret    
  4052ae:	xchg   ax,ax

00000000004052b0 <table_set_uint@@Base>:
  4052b0:	endbr64 
  4052b4:	sub    rsp,0x18
  4052b8:	mov    DWORD PTR [rsp+0xc],ecx
  4052bc:	mov    r8d,0x1
  4052c2:	lea    rcx,[rsp+0xc]
  4052c7:	call   404f00 <table_set@@Base>
  4052cc:	add    rsp,0x18
  4052d0:	ret    
  4052d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4052dc:	nop    DWORD PTR [rax+0x0]

00000000004052e0 <table_set_int8@@Base>:
  4052e0:	endbr64 
  4052e4:	sub    rsp,0x18
  4052e8:	mov    BYTE PTR [rsp+0xc],cl
  4052ec:	mov    r8d,0x2
  4052f2:	lea    rcx,[rsp+0xc]
  4052f7:	call   404f00 <table_set@@Base>
  4052fc:	add    rsp,0x18
  405300:	ret    
  405301:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40530c:	nop    DWORD PTR [rax+0x0]

0000000000405310 <table_set_uint8@@Base>:
  405310:	endbr64 
  405314:	sub    rsp,0x18
  405318:	mov    BYTE PTR [rsp+0xc],cl
  40531c:	mov    r8d,0x3
  405322:	lea    rcx,[rsp+0xc]
  405327:	call   404f00 <table_set@@Base>
  40532c:	add    rsp,0x18
  405330:	ret    
  405331:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40533c:	nop    DWORD PTR [rax+0x0]

0000000000405340 <table_set_int16@@Base>:
  405340:	endbr64 
  405344:	sub    rsp,0x18
  405348:	mov    WORD PTR [rsp+0xc],cx
  40534d:	mov    r8d,0x4
  405353:	lea    rcx,[rsp+0xc]
  405358:	call   404f00 <table_set@@Base>
  40535d:	add    rsp,0x18
  405361:	ret    
  405362:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40536d:	nop    DWORD PTR [rax]

0000000000405370 <table_set_uint16@@Base>:
  405370:	endbr64 
  405374:	sub    rsp,0x18
  405378:	mov    WORD PTR [rsp+0xc],cx
  40537d:	mov    r8d,0x5
  405383:	lea    rcx,[rsp+0xc]
  405388:	call   404f00 <table_set@@Base>
  40538d:	add    rsp,0x18
  405391:	ret    
  405392:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40539d:	nop    DWORD PTR [rax]

00000000004053a0 <table_set_int32@@Base>:
  4053a0:	endbr64 
  4053a4:	sub    rsp,0x18
  4053a8:	mov    DWORD PTR [rsp+0xc],ecx
  4053ac:	mov    r8d,0x6
  4053b2:	lea    rcx,[rsp+0xc]
  4053b7:	call   404f00 <table_set@@Base>
  4053bc:	add    rsp,0x18
  4053c0:	ret    
  4053c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4053cc:	nop    DWORD PTR [rax+0x0]

00000000004053d0 <table_set_uint32@@Base>:
  4053d0:	endbr64 
  4053d4:	sub    rsp,0x18
  4053d8:	mov    DWORD PTR [rsp+0xc],ecx
  4053dc:	mov    r8d,0x7
  4053e2:	lea    rcx,[rsp+0xc]
  4053e7:	call   404f00 <table_set@@Base>
  4053ec:	add    rsp,0x18
  4053f0:	ret    
  4053f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4053fc:	nop    DWORD PTR [rax+0x0]

0000000000405400 <table_set_int64@@Base>:
  405400:	endbr64 
  405404:	sub    rsp,0x18
  405408:	mov    QWORD PTR [rsp+0x8],rcx
  40540d:	mov    r8d,0x8
  405413:	lea    rcx,[rsp+0x8]
  405418:	call   404f00 <table_set@@Base>
  40541d:	add    rsp,0x18
  405421:	ret    
  405422:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40542d:	nop    DWORD PTR [rax]

0000000000405430 <table_set_uint64@@Base>:
  405430:	endbr64 
  405434:	sub    rsp,0x18
  405438:	mov    QWORD PTR [rsp+0x8],rcx
  40543d:	mov    r8d,0x9
  405443:	lea    rcx,[rsp+0x8]
  405448:	call   404f00 <table_set@@Base>
  40544d:	add    rsp,0x18
  405451:	ret    
  405452:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40545d:	nop    DWORD PTR [rax]

0000000000405460 <table_set_short@@Base>:
  405460:	endbr64 
  405464:	sub    rsp,0x18
  405468:	mov    WORD PTR [rsp+0xc],cx
  40546d:	mov    r8d,0xa
  405473:	lea    rcx,[rsp+0xc]
  405478:	call   404f00 <table_set@@Base>
  40547d:	add    rsp,0x18
  405481:	ret    
  405482:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40548d:	nop    DWORD PTR [rax]

0000000000405490 <table_set_ushort@@Base>:
  405490:	endbr64 
  405494:	sub    rsp,0x18
  405498:	mov    WORD PTR [rsp+0xc],cx
  40549d:	mov    r8d,0xb
  4054a3:	lea    rcx,[rsp+0xc]
  4054a8:	call   404f00 <table_set@@Base>
  4054ad:	add    rsp,0x18
  4054b1:	ret    
  4054b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4054bd:	nop    DWORD PTR [rax]

00000000004054c0 <table_set_long@@Base>:
  4054c0:	endbr64 
  4054c4:	sub    rsp,0x18
  4054c8:	mov    QWORD PTR [rsp+0x8],rcx
  4054cd:	mov    r8d,0xc
  4054d3:	lea    rcx,[rsp+0x8]
  4054d8:	call   404f00 <table_set@@Base>
  4054dd:	add    rsp,0x18
  4054e1:	ret    
  4054e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4054ed:	nop    DWORD PTR [rax]

00000000004054f0 <table_set_ulong@@Base>:
  4054f0:	endbr64 
  4054f4:	sub    rsp,0x18
  4054f8:	mov    QWORD PTR [rsp+0x8],rcx
  4054fd:	mov    r8d,0xd
  405503:	lea    rcx,[rsp+0x8]
  405508:	call   404f00 <table_set@@Base>
  40550d:	add    rsp,0x18
  405511:	ret    
  405512:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40551d:	nop    DWORD PTR [rax]

0000000000405520 <table_set_llong@@Base>:
  405520:	endbr64 
  405524:	sub    rsp,0x18
  405528:	mov    QWORD PTR [rsp+0x8],rcx
  40552d:	mov    r8d,0xe
  405533:	lea    rcx,[rsp+0x8]
  405538:	call   404f00 <table_set@@Base>
  40553d:	add    rsp,0x18
  405541:	ret    
  405542:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40554d:	nop    DWORD PTR [rax]

0000000000405550 <table_set_ullong@@Base>:
  405550:	endbr64 
  405554:	sub    rsp,0x18
  405558:	mov    QWORD PTR [rsp+0x8],rcx
  40555d:	mov    r8d,0xf
  405563:	lea    rcx,[rsp+0x8]
  405568:	call   404f00 <table_set@@Base>
  40556d:	add    rsp,0x18
  405571:	ret    
  405572:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40557d:	nop    DWORD PTR [rax]

0000000000405580 <table_set_float@@Base>:
  405580:	endbr64 
  405584:	sub    rsp,0x18
  405588:	lea    rcx,[rsp+0xc]
  40558d:	mov    r8d,0x10
  405593:	vmovss DWORD PTR [rsp+0xc],xmm0
  405599:	call   404f00 <table_set@@Base>
  40559e:	add    rsp,0x18
  4055a2:	ret    
  4055a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4055ae:	xchg   ax,ax

00000000004055b0 <table_set_double@@Base>:
  4055b0:	endbr64 
  4055b4:	sub    rsp,0x18
  4055b8:	lea    rcx,[rsp+0x8]
  4055bd:	mov    r8d,0x11
  4055c3:	vmovsd QWORD PTR [rsp+0x8],xmm0
  4055c9:	call   404f00 <table_set@@Base>
  4055ce:	add    rsp,0x18
  4055d2:	ret    
  4055d3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4055de:	xchg   ax,ax

00000000004055e0 <table_set_ldouble@@Base>:
  4055e0:	endbr64 
  4055e4:	sub    rsp,0x8
  4055e8:	lea    rcx,[rsp+0x10]
  4055ed:	mov    r8d,0x12
  4055f3:	call   404f00 <table_set@@Base>
  4055f8:	add    rsp,0x8
  4055fc:	ret    
  4055fd:	nop    DWORD PTR [rax]

0000000000405600 <table_set_string@@Base>:
  405600:	endbr64 
  405604:	mov    r8d,0x15
  40560a:	jmp    404f00 <table_set@@Base>
  40560f:	nop

0000000000405610 <table_set_char@@Base>:
  405610:	endbr64 
  405614:	sub    rsp,0x18
  405618:	mov    BYTE PTR [rsp+0xc],cl
  40561c:	mov    r8d,0x13
  405622:	lea    rcx,[rsp+0xc]
  405627:	call   404f00 <table_set@@Base>
  40562c:	add    rsp,0x18
  405630:	ret    
  405631:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40563c:	nop    DWORD PTR [rax+0x0]

0000000000405640 <table_set_uchar@@Base>:
  405640:	endbr64 
  405644:	sub    rsp,0x18
  405648:	mov    BYTE PTR [rsp+0xc],cl
  40564c:	mov    r8d,0x14
  405652:	lea    rcx,[rsp+0xc]
  405657:	call   404f00 <table_set@@Base>
  40565c:	add    rsp,0x18
  405660:	ret    
  405661:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40566c:	nop    DWORD PTR [rax+0x0]

0000000000405670 <table_set_ptr@@Base>:
  405670:	endbr64 
  405674:	mov    r8d,0x17
  40567a:	jmp    404f00 <table_set@@Base>
  40567f:	nop

0000000000405680 <table_column_is_valid@@Base>:
  405680:	endbr64 
  405684:	test   rdi,rdi
  405687:	je     4056a8 <table_column_is_valid@@Base+0x28>
  405689:	push   rbx
  40568a:	mov    ebx,esi
  40568c:	call   403d70 <table_get_column_length@@Base>
  405691:	mov    edx,ebx
  405693:	not    edx
  405695:	shr    edx,0x1f
  405698:	cmp    ebx,eax
  40569a:	setl   al
  40569d:	and    eax,edx
  40569f:	pop    rbx
  4056a0:	ret    
  4056a1:	nop    DWORD PTR [rax+0x0]
  4056a8:	xor    eax,eax
  4056aa:	ret    
  4056ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004056b0 <table_row_is_valid@@Base>:
  4056b0:	endbr64 
  4056b4:	test   rdi,rdi
  4056b7:	je     4056d8 <table_row_is_valid@@Base+0x28>
  4056b9:	push   rbx
  4056ba:	mov    ebx,esi
  4056bc:	call   404c50 <table_get_row_length@@Base>
  4056c1:	mov    edx,ebx
  4056c3:	not    edx
  4056c5:	shr    edx,0x1f
  4056c8:	cmp    ebx,eax
  4056ca:	setl   al
  4056cd:	and    eax,edx
  4056cf:	pop    rbx
  4056d0:	ret    
  4056d1:	nop    DWORD PTR [rax+0x0]
  4056d8:	xor    eax,eax
  4056da:	ret    
  4056db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004056e0 <table_cell_is_valid@@Base>:
  4056e0:	endbr64 
  4056e4:	push   rbp
  4056e5:	mov    ebp,esi
  4056e7:	mov    esi,edx
  4056e9:	push   rbx
  4056ea:	mov    rbx,rdi
  4056ed:	sub    rsp,0x8
  4056f1:	call   405680 <table_column_is_valid@@Base>
  4056f6:	test   eax,eax
  4056f8:	jne    405708 <table_cell_is_valid@@Base+0x28>
  4056fa:	add    rsp,0x8
  4056fe:	pop    rbx
  4056ff:	pop    rbp
  405700:	ret    
  405701:	nop    DWORD PTR [rax+0x0]
  405708:	mov    esi,ebp
  40570a:	mov    rdi,rbx
  40570d:	call   4056b0 <table_row_is_valid@@Base>
  405712:	test   eax,eax
  405714:	setne  al
  405717:	add    rsp,0x8
  40571b:	pop    rbx
  40571c:	movzx  eax,al
  40571f:	pop    rbp
  405720:	ret    
  405721:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40572c:	nop    DWORD PTR [rax+0x0]

0000000000405730 <table_cell_has_value@@Base>:
  405730:	endbr64 
  405734:	sub    rsp,0x8
  405738:	call   406120 <table_get_cell_ptr@@Base>
  40573d:	xor    edx,edx
  40573f:	test   rax,rax
  405742:	je     40574d <table_cell_has_value@@Base+0x1d>
  405744:	xor    edx,edx
  405746:	cmp    QWORD PTR [rax],0x0
  40574a:	setne  dl
  40574d:	mov    eax,edx
  40574f:	add    rsp,0x8
  405753:	ret    
  405754:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40575e:	xchg   ax,ax

0000000000405760 <table_cell_to_buffer@@Base>:
  405760:	endbr64 
  405764:	push   r14
  405766:	mov    r14d,edx
  405769:	push   r13
  40576b:	mov    r13,rdi
  40576e:	push   r12
  405770:	mov    r12d,esi
  405773:	mov    esi,edx
  405775:	push   rbp
  405776:	mov    rbp,r8
  405779:	push   rbx
  40577a:	mov    rbx,rcx
  40577d:	call   404110 <table_get_column_data_type@@Base>
  405782:	cmp    eax,0x17
  405785:	ja     4057d9 <table_cell_to_buffer@@Base+0x79>
  405787:	lea    rdx,[rip+0x1a82]        # 407210 <_IO_stdin_used@@Base+0x210>
  40578e:	mov    eax,eax
  405790:	movsxd rax,DWORD PTR [rdx+rax*4]
  405794:	mov    esi,r12d
  405797:	add    rax,rdx
  40579a:	mov    rdi,r13
  40579d:	mov    edx,r14d
  4057a0:	notrack jmp rax
  4057a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4057a8:	call   404b90 <table_get_ullong@@Base>
  4057ad:	mov    r9,rax
  4057b0:	lea    r8,[rip+0x1a34]        # 4071eb <_IO_stdin_used@@Base+0x1eb>
  4057b7:	nop    WORD PTR [rax+rax*1+0x0]
  4057c0:	mov    rcx,0xffffffffffffffff
  4057c7:	mov    edx,0x1
  4057cc:	mov    rsi,rbp
  4057cf:	mov    rdi,rbx
  4057d2:	xor    eax,eax
  4057d4:	call   403110 <__snprintf_chk@plt>
  4057d9:	pop    rbx
  4057da:	pop    rbp
  4057db:	pop    r12
  4057dd:	pop    r13
  4057df:	xor    eax,eax
  4057e1:	pop    r14
  4057e3:	ret    
  4057e4:	nop    DWORD PTR [rax+0x0]
  4057e8:	call   4049f0 <table_get_bool@@Base>
  4057ed:	movzx  r9d,al
  4057f1:	lea    r8,[rip+0x19d8]        # 4071d0 <_IO_stdin_used@@Base+0x1d0>
  4057f8:	mov    rsi,rbp
  4057fb:	mov    rdi,rbx
  4057fe:	mov    rcx,0xffffffffffffffff
  405805:	mov    edx,0x1
  40580a:	xor    eax,eax
  40580c:	call   403110 <__snprintf_chk@plt>
  405811:	pop    rbx
  405812:	pop    rbp
  405813:	pop    r12
  405815:	pop    r13
  405817:	xor    eax,eax
  405819:	pop    r14
  40581b:	ret    
  40581c:	nop    DWORD PTR [rax+0x0]
  405820:	call   404c30 <table_get_string@@Base>
  405825:	mov    rcx,rax
  405828:	lea    rdx,[rip+0x19c1]        # 4071f0 <_IO_stdin_used@@Base+0x1f0>
  40582f:	mov    rsi,rbp
  405832:	mov    rdi,rbx
  405835:	xor    eax,eax
  405837:	call   403160 <snprintf@plt>
  40583c:	jmp    4057d9 <table_cell_to_buffer@@Base+0x79>
  40583e:	xchg   ax,ax
  405840:	call   404c20 <table_get_uchar@@Base>
  405845:	movzx  r9d,al
  405849:	lea    r8,[rip+0x19ae]        # 4071fe <_IO_stdin_used@@Base+0x1fe>
  405850:	jmp    4057f8 <table_cell_to_buffer@@Base+0x98>
  405852:	nop    WORD PTR [rax+rax*1+0x0]
  405858:	call   404c10 <table_get_char@@Base>
  40585d:	movsx  r9d,al
  405861:	lea    r8,[rip+0x1996]        # 4071fe <_IO_stdin_used@@Base+0x1fe>
  405868:	jmp    4057f8 <table_cell_to_buffer@@Base+0x98>
  40586a:	nop    WORD PTR [rax+rax*1+0x0]
  405870:	call   404bf0 <table_get_ldouble@@Base>
  405875:	sub    rsp,0x10
  405879:	mov    edx,0x1
  40587e:	lea    r8,[rip+0x1975]        # 4071fa <_IO_stdin_used@@Base+0x1fa>
  405885:	mov    rcx,0xffffffffffffffff
  40588c:	mov    rsi,rbp
  40588f:	mov    rdi,rbx
  405892:	xor    eax,eax
  405894:	fstp   TBYTE PTR [rsp]
  405897:	call   403110 <__snprintf_chk@plt>
  40589c:	pop    rax
  40589d:	pop    rdx
  40589e:	jmp    4057d9 <table_cell_to_buffer@@Base+0x79>
  4058a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4058a8:	call   404bd0 <table_get_double@@Base>
  4058ad:	lea    r8,[rip+0x1942]        # 4071f6 <_IO_stdin_used@@Base+0x1f6>
  4058b4:	mov    rcx,0xffffffffffffffff
  4058bb:	mov    edx,0x1
  4058c0:	mov    rsi,rbp
  4058c3:	mov    rdi,rbx
  4058c6:	mov    eax,0x1
  4058cb:	call   403110 <__snprintf_chk@plt>
  4058d0:	jmp    4057d9 <table_cell_to_buffer@@Base+0x79>
  4058d5:	nop    DWORD PTR [rax]
  4058d8:	call   404bb0 <table_get_float@@Base>
  4058dd:	vcvtss2sd xmm0,xmm0,xmm0
  4058e1:	lea    r8,[rip+0x190b]        # 4071f3 <_IO_stdin_used@@Base+0x1f3>
  4058e8:	jmp    4058b4 <table_cell_to_buffer@@Base+0x154>
  4058ea:	nop    WORD PTR [rax+rax*1+0x0]
  4058f0:	call   404b70 <table_get_llong@@Base>
  4058f5:	mov    r9,rax
  4058f8:	lea    r8,[rip+0x18e7]        # 4071e6 <_IO_stdin_used@@Base+0x1e6>
  4058ff:	jmp    4057c0 <table_cell_to_buffer@@Base+0x60>
  405904:	nop    DWORD PTR [rax+0x0]
  405908:	call   404b60 <table_get_ulong@@Base>
  40590d:	mov    r9,rax
  405910:	lea    r8,[rip+0x18c3]        # 4071da <_IO_stdin_used@@Base+0x1da>
  405917:	jmp    4057c0 <table_cell_to_buffer@@Base+0x60>
  40591c:	nop    DWORD PTR [rax+0x0]
  405920:	call   404b50 <table_get_long@@Base>
  405925:	mov    r9,rax
  405928:	lea    r8,[rip+0x18a7]        # 4071d6 <_IO_stdin_used@@Base+0x1d6>
  40592f:	jmp    4057c0 <table_cell_to_buffer@@Base+0x60>
  405934:	nop    DWORD PTR [rax+0x0]
  405938:	call   404b40 <table_get_ushort@@Base>
  40593d:	movzx  r9d,ax
  405941:	lea    r8,[rip+0x189a]        # 4071e2 <_IO_stdin_used@@Base+0x1e2>
  405948:	jmp    4057f8 <table_cell_to_buffer@@Base+0x98>
  40594d:	nop    DWORD PTR [rax]
  405950:	call   404b30 <table_get_short@@Base>
  405955:	movsx  r9d,ax
  405959:	lea    r8,[rip+0x187e]        # 4071de <_IO_stdin_used@@Base+0x1de>
  405960:	jmp    4057f8 <table_cell_to_buffer@@Base+0x98>
  405965:	nop    DWORD PTR [rax]
  405968:	call   404b10 <table_get_uint64@@Base>
  40596d:	mov    r9,rax
  405970:	lea    r8,[rip+0x1863]        # 4071da <_IO_stdin_used@@Base+0x1da>
  405977:	jmp    4057c0 <table_cell_to_buffer@@Base+0x60>
  40597c:	nop    DWORD PTR [rax+0x0]
  405980:	call   404af0 <table_get_int64@@Base>
  405985:	mov    r9,rax
  405988:	lea    r8,[rip+0x1847]        # 4071d6 <_IO_stdin_used@@Base+0x1d6>
  40598f:	jmp    4057c0 <table_cell_to_buffer@@Base+0x60>
  405994:	nop    DWORD PTR [rax+0x0]
  405998:	call   404ae0 <table_get_uint32@@Base>
  40599d:	mov    r9d,eax
  4059a0:	lea    r8,[rip+0x182c]        # 4071d3 <_IO_stdin_used@@Base+0x1d3>
  4059a7:	jmp    4057f8 <table_cell_to_buffer@@Base+0x98>
  4059ac:	nop    DWORD PTR [rax+0x0]
  4059b0:	call   404ad0 <table_get_int32@@Base>
  4059b5:	mov    r9d,eax
  4059b8:	lea    r8,[rip+0x1811]        # 4071d0 <_IO_stdin_used@@Base+0x1d0>
  4059bf:	jmp    4057f8 <table_cell_to_buffer@@Base+0x98>
  4059c4:	nop    DWORD PTR [rax+0x0]
  4059c8:	call   404ab0 <table_get_uint16@@Base>
  4059cd:	movzx  r9d,ax
  4059d1:	jmp    4059a0 <table_cell_to_buffer@@Base+0x240>
  4059d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4059d8:	call   404a90 <table_get_int16@@Base>
  4059dd:	movsx  r9d,ax
  4059e1:	lea    r8,[rip+0x17e8]        # 4071d0 <_IO_stdin_used@@Base+0x1d0>
  4059e8:	jmp    4057f8 <table_cell_to_buffer@@Base+0x98>
  4059ed:	nop    DWORD PTR [rax]
  4059f0:	call   404a70 <table_get_uint8@@Base>
  4059f5:	movzx  r9d,al
  4059f9:	jmp    4059a0 <table_cell_to_buffer@@Base+0x240>
  4059fb:	nop    DWORD PTR [rax+rax*1+0x0]
  405a00:	call   404a50 <table_get_int8@@Base>
  405a05:	movsx  r9d,al
  405a09:	lea    r8,[rip+0x17c0]        # 4071d0 <_IO_stdin_used@@Base+0x1d0>
  405a10:	jmp    4057f8 <table_cell_to_buffer@@Base+0x98>
  405a15:	nop    DWORD PTR [rax]
  405a18:	call   404a30 <table_get_uint@@Base>
  405a1d:	jmp    40599d <table_cell_to_buffer@@Base+0x23d>
  405a22:	nop    WORD PTR [rax+rax*1+0x0]
  405a28:	call   404a10 <table_get_int@@Base>
  405a2d:	mov    r9d,eax
  405a30:	lea    r8,[rip+0x1799]        # 4071d0 <_IO_stdin_used@@Base+0x1d0>
  405a37:	jmp    4057f8 <table_cell_to_buffer@@Base+0x98>
  405a3c:	nop    DWORD PTR [rax+0x0]
  405a40:	call   404c40 <table_get_ptr@@Base>
  405a45:	mov    r9,rax
  405a48:	lea    r8,[rip+0x17b2]        # 407201 <_IO_stdin_used@@Base+0x201>
  405a4f:	jmp    4057c0 <table_cell_to_buffer@@Base+0x60>
  405a54:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405a5f:	nop

0000000000405a60 <table_cell_from_buffer@@Base>:
  405a60:	endbr64 
  405a64:	push   r14
  405a66:	push   r13
  405a68:	mov    r13,rcx
  405a6b:	push   r12
  405a6d:	mov    r12d,esi
  405a70:	mov    esi,edx
  405a72:	push   rbp
  405a73:	mov    ebp,edx
  405a75:	push   rbx
  405a76:	mov    rbx,rdi
  405a79:	sub    rsp,0x120
  405a80:	mov    rax,QWORD PTR fs:0x28
  405a89:	mov    QWORD PTR [rsp+0x118],rax
  405a91:	xor    eax,eax
  405a93:	call   404110 <table_get_column_data_type@@Base>
  405a98:	cmp    eax,0x17
  405a9b:	ja     406110 <table_cell_from_buffer@@Base+0x6b0>
  405aa1:	lea    rdx,[rip+0x17c8]        # 407270 <_IO_stdin_used@@Base+0x270>
  405aa8:	mov    eax,eax
  405aaa:	movsxd rax,DWORD PTR [rdx+rax*4]
  405aae:	add    rax,rdx
  405ab1:	notrack jmp rax
  405ab4:	nop    DWORD PTR [rax+0x0]
  405ab8:	mov    rdi,r13
  405abb:	mov    rdx,rsp
  405abe:	lea    rsi,[rip+0x170b]        # 4071d0 <_IO_stdin_used@@Base+0x1d0>
  405ac5:	xor    eax,eax
  405ac7:	call   4031b0 <__isoc99_sscanf@plt>
  405acc:	mov    r13d,0xffffffff
  405ad2:	cmp    eax,0x1
  405ad5:	je     4060d4 <table_cell_from_buffer@@Base+0x674>
  405adb:	nop    DWORD PTR [rax+rax*1+0x0]
  405ae0:	mov    rcx,QWORD PTR [rsp+0x118]
  405ae8:	xor    rcx,QWORD PTR fs:0x28
  405af1:	mov    eax,r13d
  405af4:	jne    40610b <table_cell_from_buffer@@Base+0x6ab>
  405afa:	add    rsp,0x120
  405b01:	pop    rbx
  405b02:	pop    rbp
  405b03:	pop    r12
  405b05:	pop    r13
  405b07:	pop    r14
  405b09:	ret    
  405b0a:	nop    WORD PTR [rax+rax*1+0x0]
  405b10:	lea    r14,[rsp+0x10]
  405b15:	mov    rdi,r13
  405b18:	mov    rdx,r14
  405b1b:	lea    rsi,[rip+0x16ce]        # 4071f0 <_IO_stdin_used@@Base+0x1f0>
  405b22:	xor    eax,eax
  405b24:	call   4031b0 <__isoc99_sscanf@plt>
  405b29:	mov    r13d,0xffffffff
  405b2f:	cmp    eax,0x1
  405b32:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405b34:	mov    rcx,r14
  405b37:	mov    edx,ebp
  405b39:	mov    esi,r12d
  405b3c:	mov    rdi,rbx
  405b3f:	call   405600 <table_set_string@@Base>
  405b44:	xor    r13d,r13d
  405b47:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  405b49:	nop    DWORD PTR [rax+0x0]
  405b50:	mov    rdi,r13
  405b53:	mov    rdx,rsp
  405b56:	lea    rsi,[rip+0x169d]        # 4071fa <_IO_stdin_used@@Base+0x1fa>
  405b5d:	xor    eax,eax
  405b5f:	call   4031b0 <__isoc99_sscanf@plt>
  405b64:	mov    r13d,0xffffffff
  405b6a:	cmp    eax,0x1
  405b6d:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405b73:	push   QWORD PTR [rsp+0x8]
  405b77:	mov    edx,ebp
  405b79:	mov    esi,r12d
  405b7c:	push   QWORD PTR [rsp+0x8]
  405b80:	mov    rdi,rbx
  405b83:	xor    r13d,r13d
  405b86:	call   4055e0 <table_set_ldouble@@Base>
  405b8b:	pop    rax
  405b8c:	pop    rdx
  405b8d:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  405b92:	nop    WORD PTR [rax+rax*1+0x0]
  405b98:	mov    rdi,r13
  405b9b:	mov    rdx,rsp
  405b9e:	lea    rsi,[rip+0x1651]        # 4071f6 <_IO_stdin_used@@Base+0x1f6>
  405ba5:	xor    eax,eax
  405ba7:	call   4031b0 <__isoc99_sscanf@plt>
  405bac:	mov    r13d,0xffffffff
  405bb2:	cmp    eax,0x1
  405bb5:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405bbb:	vmovsd xmm0,QWORD PTR [rsp]
  405bc0:	mov    edx,ebp
  405bc2:	mov    esi,r12d
  405bc5:	mov    rdi,rbx
  405bc8:	call   4055b0 <table_set_double@@Base>
  405bcd:	xor    r13d,r13d
  405bd0:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  405bd5:	nop    DWORD PTR [rax]
  405bd8:	mov    rdi,r13
  405bdb:	mov    rdx,rsp
  405bde:	lea    rsi,[rip+0x160e]        # 4071f3 <_IO_stdin_used@@Base+0x1f3>
  405be5:	xor    eax,eax
  405be7:	call   4031b0 <__isoc99_sscanf@plt>
  405bec:	mov    r13d,0xffffffff
  405bf2:	cmp    eax,0x1
  405bf5:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405bfb:	vmovss xmm0,DWORD PTR [rsp]
  405c00:	mov    edx,ebp
  405c02:	mov    esi,r12d
  405c05:	mov    rdi,rbx
  405c08:	call   405580 <table_set_float@@Base>
  405c0d:	xor    r13d,r13d
  405c10:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  405c15:	nop    DWORD PTR [rax]
  405c18:	mov    rdi,r13
  405c1b:	mov    rdx,rsp
  405c1e:	lea    rsi,[rip+0x15c6]        # 4071eb <_IO_stdin_used@@Base+0x1eb>
  405c25:	xor    eax,eax
  405c27:	call   4031b0 <__isoc99_sscanf@plt>
  405c2c:	mov    r13d,0xffffffff
  405c32:	cmp    eax,0x1
  405c35:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405c3b:	mov    rcx,QWORD PTR [rsp]
  405c3f:	mov    edx,ebp
  405c41:	mov    esi,r12d
  405c44:	mov    rdi,rbx
  405c47:	call   405550 <table_set_ullong@@Base>
  405c4c:	xor    r13d,r13d
  405c4f:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  405c54:	nop    DWORD PTR [rax+0x0]
  405c58:	mov    rdi,r13
  405c5b:	mov    rdx,rsp
  405c5e:	lea    rsi,[rip+0x1599]        # 4071fe <_IO_stdin_used@@Base+0x1fe>
  405c65:	xor    eax,eax
  405c67:	call   4031b0 <__isoc99_sscanf@plt>
  405c6c:	mov    r13d,0xffffffff
  405c72:	cmp    eax,0x1
  405c75:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405c7b:	movzx  ecx,BYTE PTR [rsp]
  405c7f:	mov    edx,ebp
  405c81:	mov    esi,r12d
  405c84:	mov    rdi,rbx
  405c87:	call   405640 <table_set_uchar@@Base>
  405c8c:	xor    r13d,r13d
  405c8f:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  405c94:	nop    DWORD PTR [rax+0x0]
  405c98:	mov    rdi,r13
  405c9b:	mov    rdx,rsp
  405c9e:	lea    rsi,[rip+0x1559]        # 4071fe <_IO_stdin_used@@Base+0x1fe>
  405ca5:	xor    eax,eax
  405ca7:	call   4031b0 <__isoc99_sscanf@plt>
  405cac:	mov    r13d,0xffffffff
  405cb2:	cmp    eax,0x1
  405cb5:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405cbb:	movsx  ecx,BYTE PTR [rsp]
  405cbf:	mov    edx,ebp
  405cc1:	mov    esi,r12d
  405cc4:	mov    rdi,rbx
  405cc7:	call   405610 <table_set_char@@Base>
  405ccc:	xor    r13d,r13d
  405ccf:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  405cd4:	nop    DWORD PTR [rax+0x0]
  405cd8:	mov    rdi,r13
  405cdb:	mov    rdx,rsp
  405cde:	lea    rsi,[rip+0x1501]        # 4071e6 <_IO_stdin_used@@Base+0x1e6>
  405ce5:	xor    eax,eax
  405ce7:	call   4031b0 <__isoc99_sscanf@plt>
  405cec:	mov    r13d,0xffffffff
  405cf2:	cmp    eax,0x1
  405cf5:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405cfb:	mov    rcx,QWORD PTR [rsp]
  405cff:	mov    edx,ebp
  405d01:	mov    esi,r12d
  405d04:	mov    rdi,rbx
  405d07:	call   405520 <table_set_llong@@Base>
  405d0c:	xor    r13d,r13d
  405d0f:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  405d14:	nop    DWORD PTR [rax+0x0]
  405d18:	mov    rdi,r13
  405d1b:	mov    rdx,rsp
  405d1e:	lea    rsi,[rip+0x14b5]        # 4071da <_IO_stdin_used@@Base+0x1da>
  405d25:	xor    eax,eax
  405d27:	call   4031b0 <__isoc99_sscanf@plt>
  405d2c:	mov    r13d,0xffffffff
  405d32:	cmp    eax,0x1
  405d35:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405d3b:	mov    rcx,QWORD PTR [rsp]
  405d3f:	mov    edx,ebp
  405d41:	mov    esi,r12d
  405d44:	mov    rdi,rbx
  405d47:	call   4054f0 <table_set_ulong@@Base>
  405d4c:	xor    r13d,r13d
  405d4f:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  405d54:	nop    DWORD PTR [rax+0x0]
  405d58:	mov    rdi,r13
  405d5b:	mov    rdx,rsp
  405d5e:	lea    rsi,[rip+0x1471]        # 4071d6 <_IO_stdin_used@@Base+0x1d6>
  405d65:	xor    eax,eax
  405d67:	call   4031b0 <__isoc99_sscanf@plt>
  405d6c:	mov    r13d,0xffffffff
  405d72:	cmp    eax,0x1
  405d75:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405d7b:	mov    rcx,QWORD PTR [rsp]
  405d7f:	mov    edx,ebp
  405d81:	mov    esi,r12d
  405d84:	mov    rdi,rbx
  405d87:	call   4054c0 <table_set_long@@Base>
  405d8c:	xor    r13d,r13d
  405d8f:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  405d94:	nop    DWORD PTR [rax+0x0]
  405d98:	mov    rdi,r13
  405d9b:	mov    rdx,rsp
  405d9e:	lea    rsi,[rip+0x143d]        # 4071e2 <_IO_stdin_used@@Base+0x1e2>
  405da5:	xor    eax,eax
  405da7:	call   4031b0 <__isoc99_sscanf@plt>
  405dac:	mov    r13d,0xffffffff
  405db2:	cmp    eax,0x1
  405db5:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405dbb:	movzx  ecx,WORD PTR [rsp]
  405dbf:	mov    edx,ebp
  405dc1:	mov    esi,r12d
  405dc4:	mov    rdi,rbx
  405dc7:	call   405490 <table_set_ushort@@Base>
  405dcc:	xor    r13d,r13d
  405dcf:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  405dd4:	nop    DWORD PTR [rax+0x0]
  405dd8:	mov    rdi,r13
  405ddb:	mov    rdx,rsp
  405dde:	lea    rsi,[rip+0x13f9]        # 4071de <_IO_stdin_used@@Base+0x1de>
  405de5:	xor    eax,eax
  405de7:	call   4031b0 <__isoc99_sscanf@plt>
  405dec:	mov    r13d,0xffffffff
  405df2:	cmp    eax,0x1
  405df5:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405dfb:	movsx  ecx,WORD PTR [rsp]
  405dff:	mov    edx,ebp
  405e01:	mov    esi,r12d
  405e04:	mov    rdi,rbx
  405e07:	call   405460 <table_set_short@@Base>
  405e0c:	xor    r13d,r13d
  405e0f:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  405e14:	nop    DWORD PTR [rax+0x0]
  405e18:	mov    rdi,r13
  405e1b:	mov    rdx,rsp
  405e1e:	lea    rsi,[rip+0x13b5]        # 4071da <_IO_stdin_used@@Base+0x1da>
  405e25:	xor    eax,eax
  405e27:	call   4031b0 <__isoc99_sscanf@plt>
  405e2c:	mov    r13d,0xffffffff
  405e32:	cmp    eax,0x1
  405e35:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405e3b:	mov    rcx,QWORD PTR [rsp]
  405e3f:	mov    edx,ebp
  405e41:	mov    esi,r12d
  405e44:	mov    rdi,rbx
  405e47:	call   405430 <table_set_uint64@@Base>
  405e4c:	xor    r13d,r13d
  405e4f:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  405e54:	nop    DWORD PTR [rax+0x0]
  405e58:	mov    rdi,r13
  405e5b:	mov    rdx,rsp
  405e5e:	lea    rsi,[rip+0x1371]        # 4071d6 <_IO_stdin_used@@Base+0x1d6>
  405e65:	xor    eax,eax
  405e67:	call   4031b0 <__isoc99_sscanf@plt>
  405e6c:	mov    r13d,0xffffffff
  405e72:	cmp    eax,0x1
  405e75:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405e7b:	mov    rcx,QWORD PTR [rsp]
  405e7f:	mov    edx,ebp
  405e81:	mov    esi,r12d
  405e84:	mov    rdi,rbx
  405e87:	call   405400 <table_set_int64@@Base>
  405e8c:	xor    r13d,r13d
  405e8f:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  405e94:	nop    DWORD PTR [rax+0x0]
  405e98:	mov    rdi,r13
  405e9b:	mov    rdx,rsp
  405e9e:	lea    rsi,[rip+0x132e]        # 4071d3 <_IO_stdin_used@@Base+0x1d3>
  405ea5:	xor    eax,eax
  405ea7:	call   4031b0 <__isoc99_sscanf@plt>
  405eac:	mov    r13d,0xffffffff
  405eb2:	cmp    eax,0x1
  405eb5:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405ebb:	mov    ecx,DWORD PTR [rsp]
  405ebe:	mov    edx,ebp
  405ec0:	mov    esi,r12d
  405ec3:	mov    rdi,rbx
  405ec6:	call   4053d0 <table_set_uint32@@Base>
  405ecb:	xor    r13d,r13d
  405ece:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  405ed3:	nop    DWORD PTR [rax+rax*1+0x0]
  405ed8:	mov    rdi,r13
  405edb:	mov    rdx,rsp
  405ede:	lea    rsi,[rip+0x12eb]        # 4071d0 <_IO_stdin_used@@Base+0x1d0>
  405ee5:	xor    eax,eax
  405ee7:	call   4031b0 <__isoc99_sscanf@plt>
  405eec:	mov    r13d,0xffffffff
  405ef2:	cmp    eax,0x1
  405ef5:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405efb:	mov    ecx,DWORD PTR [rsp]
  405efe:	mov    edx,ebp
  405f00:	mov    esi,r12d
  405f03:	mov    rdi,rbx
  405f06:	call   4053a0 <table_set_int32@@Base>
  405f0b:	xor    r13d,r13d
  405f0e:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  405f13:	nop    DWORD PTR [rax+rax*1+0x0]
  405f18:	mov    rdi,r13
  405f1b:	mov    rdx,rsp
  405f1e:	lea    rsi,[rip+0x12bd]        # 4071e2 <_IO_stdin_used@@Base+0x1e2>
  405f25:	xor    eax,eax
  405f27:	call   4031b0 <__isoc99_sscanf@plt>
  405f2c:	mov    r13d,0xffffffff
  405f32:	cmp    eax,0x1
  405f35:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405f3b:	movzx  ecx,WORD PTR [rsp]
  405f3f:	mov    edx,ebp
  405f41:	mov    esi,r12d
  405f44:	mov    rdi,rbx
  405f47:	call   405370 <table_set_uint16@@Base>
  405f4c:	xor    r13d,r13d
  405f4f:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  405f54:	nop    DWORD PTR [rax+0x0]
  405f58:	mov    rdi,r13
  405f5b:	mov    rdx,rsp
  405f5e:	lea    rsi,[rip+0x1279]        # 4071de <_IO_stdin_used@@Base+0x1de>
  405f65:	xor    eax,eax
  405f67:	call   4031b0 <__isoc99_sscanf@plt>
  405f6c:	mov    r13d,0xffffffff
  405f72:	cmp    eax,0x1
  405f75:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405f7b:	movsx  ecx,WORD PTR [rsp]
  405f7f:	mov    edx,ebp
  405f81:	mov    esi,r12d
  405f84:	mov    rdi,rbx
  405f87:	call   405340 <table_set_int16@@Base>
  405f8c:	xor    r13d,r13d
  405f8f:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  405f94:	nop    DWORD PTR [rax+0x0]
  405f98:	mov    rdi,r13
  405f9b:	mov    rdx,rsp
  405f9e:	lea    rsi,[rip+0x1264]        # 407209 <_IO_stdin_used@@Base+0x209>
  405fa5:	xor    eax,eax
  405fa7:	call   4031b0 <__isoc99_sscanf@plt>
  405fac:	mov    r13d,0xffffffff
  405fb2:	cmp    eax,0x1
  405fb5:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405fbb:	movzx  ecx,BYTE PTR [rsp]
  405fbf:	mov    edx,ebp
  405fc1:	mov    esi,r12d
  405fc4:	mov    rdi,rbx
  405fc7:	call   405310 <table_set_uint8@@Base>
  405fcc:	xor    r13d,r13d
  405fcf:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  405fd4:	nop    DWORD PTR [rax+0x0]
  405fd8:	mov    rdi,r13
  405fdb:	mov    rdx,rsp
  405fde:	lea    rsi,[rip+0x121f]        # 407204 <_IO_stdin_used@@Base+0x204>
  405fe5:	xor    eax,eax
  405fe7:	call   4031b0 <__isoc99_sscanf@plt>
  405fec:	mov    r13d,0xffffffff
  405ff2:	cmp    eax,0x1
  405ff5:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  405ffb:	movsx  ecx,BYTE PTR [rsp]
  405fff:	mov    edx,ebp
  406001:	mov    esi,r12d
  406004:	mov    rdi,rbx
  406007:	call   4052e0 <table_set_int8@@Base>
  40600c:	xor    r13d,r13d
  40600f:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  406014:	nop    DWORD PTR [rax+0x0]
  406018:	mov    rdi,r13
  40601b:	mov    rdx,rsp
  40601e:	lea    rsi,[rip+0x11ae]        # 4071d3 <_IO_stdin_used@@Base+0x1d3>
  406025:	xor    eax,eax
  406027:	call   4031b0 <__isoc99_sscanf@plt>
  40602c:	mov    r13d,0xffffffff
  406032:	cmp    eax,0x1
  406035:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  40603b:	mov    ecx,DWORD PTR [rsp]
  40603e:	mov    edx,ebp
  406040:	mov    esi,r12d
  406043:	mov    rdi,rbx
  406046:	call   4052b0 <table_set_uint@@Base>
  40604b:	xor    r13d,r13d
  40604e:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  406053:	nop    DWORD PTR [rax+rax*1+0x0]
  406058:	mov    rdi,r13
  40605b:	mov    rdx,rsp
  40605e:	lea    rsi,[rip+0x116b]        # 4071d0 <_IO_stdin_used@@Base+0x1d0>
  406065:	xor    eax,eax
  406067:	call   4031b0 <__isoc99_sscanf@plt>
  40606c:	mov    r13d,0xffffffff
  406072:	cmp    eax,0x1
  406075:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  40607b:	mov    ecx,DWORD PTR [rsp]
  40607e:	mov    edx,ebp
  406080:	mov    esi,r12d
  406083:	mov    rdi,rbx
  406086:	call   405290 <table_set_int@@Base>
  40608b:	xor    r13d,r13d
  40608e:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  406093:	nop    DWORD PTR [rax+rax*1+0x0]
  406098:	mov    rdi,r13
  40609b:	mov    rdx,rsp
  40609e:	lea    rsi,[rip+0x115c]        # 407201 <_IO_stdin_used@@Base+0x201>
  4060a5:	xor    eax,eax
  4060a7:	call   4031b0 <__isoc99_sscanf@plt>
  4060ac:	mov    r13d,0xffffffff
  4060b2:	cmp    eax,0x1
  4060b5:	jne    405ae0 <table_cell_from_buffer@@Base+0x80>
  4060bb:	mov    rcx,QWORD PTR [rsp]
  4060bf:	mov    edx,ebp
  4060c1:	mov    esi,r12d
  4060c4:	mov    rdi,rbx
  4060c7:	call   405670 <table_set_ptr@@Base>
  4060cc:	xor    r13d,r13d
  4060cf:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  4060d4:	mov    r13d,DWORD PTR [rsp]
  4060d8:	test   r13d,r13d
  4060db:	je     4060f7 <table_cell_from_buffer@@Base+0x697>
  4060dd:	mov    ecx,0x1
  4060e2:	mov    edx,ebp
  4060e4:	mov    esi,r12d
  4060e7:	mov    rdi,rbx
  4060ea:	call   405260 <table_set_bool@@Base>
  4060ef:	xor    r13d,r13d
  4060f2:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  4060f7:	xor    ecx,ecx
  4060f9:	mov    edx,ebp
  4060fb:	mov    esi,r12d
  4060fe:	mov    rdi,rbx
  406101:	call   405260 <table_set_bool@@Base>
  406106:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  40610b:	call   403150 <__stack_chk_fail@plt>
  406110:	xor    r13d,r13d
  406113:	jmp    405ae0 <table_cell_from_buffer@@Base+0x80>
  406118:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406120 <table_get_cell_ptr@@Base>:
  406120:	endbr64 
  406124:	push   rbx
  406125:	movsxd rbx,edx
  406128:	call   404c60 <table_get_row_ptr@@Base>
  40612d:	mov    rax,QWORD PTR [rax]
  406130:	lea    rax,[rax+rbx*8]
  406134:	pop    rbx
  406135:	ret    
  406136:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406140 <table_cell_init@@Base>:
  406140:	endbr64 
  406144:	sub    rsp,0x8
  406148:	call   406120 <table_get_cell_ptr@@Base>
  40614d:	mov    QWORD PTR [rax],0x0
  406154:	add    rsp,0x8
  406158:	ret    
  406159:	nop    DWORD PTR [rax+0x0]

0000000000406160 <table_cell_destroy@@Base>:
  406160:	endbr64 
  406164:	push   r12
  406166:	mov    r12d,esi
  406169:	mov    esi,edx
  40616b:	push   rbp
  40616c:	mov    ebp,edx
  40616e:	push   rbx
  40616f:	mov    rbx,rdi
  406172:	call   404110 <table_get_column_data_type@@Base>
  406177:	cmp    eax,0x17
  40617a:	jne    406188 <table_cell_destroy@@Base+0x28>
  40617c:	pop    rbx
  40617d:	pop    rbp
  40617e:	pop    r12
  406180:	ret    
  406181:	nop    DWORD PTR [rax+0x0]
  406188:	mov    rdi,rbx
  40618b:	mov    edx,ebp
  40618d:	mov    esi,r12d
  406190:	call   406120 <table_get_cell_ptr@@Base>
  406195:	mov    rdi,QWORD PTR [rax]
  406198:	test   rdi,rdi
  40619b:	je     40617c <table_cell_destroy@@Base+0x1c>
  40619d:	pop    rbx
  40619e:	pop    rbp
  40619f:	pop    r12
  4061a1:	jmp    403120 <free@plt>
  4061a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004061b0 <table_cell_nullify@@Base>:
  4061b0:	endbr64 
  4061b4:	push   rbx
  4061b5:	call   406120 <table_get_cell_ptr@@Base>
  4061ba:	mov    rdi,QWORD PTR [rax]
  4061bd:	test   rdi,rdi
  4061c0:	je     4061d1 <table_cell_nullify@@Base+0x21>
  4061c2:	mov    rbx,rax
  4061c5:	call   403120 <free@plt>
  4061ca:	mov    QWORD PTR [rbx],0x0
  4061d1:	xor    eax,eax
  4061d3:	pop    rbx
  4061d4:	ret    
  4061d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4061df:	nop

00000000004061e0 <__libc_csu_init@@Base>:
  4061e0:	endbr64 
  4061e4:	push   r15
  4061e6:	lea    r15,[rip+0x3c23]        # 409e10 <_IO_stdin_used@@Base+0x2e10>
  4061ed:	push   r14
  4061ef:	mov    r14,rdx
  4061f2:	push   r13
  4061f4:	mov    r13,rsi
  4061f7:	push   r12
  4061f9:	mov    r12d,edi
  4061fc:	push   rbp
  4061fd:	lea    rbp,[rip+0x3c14]        # 409e18 <_IO_stdin_used@@Base+0x2e18>
  406204:	push   rbx
  406205:	sub    rbp,r15
  406208:	sub    rsp,0x8
  40620c:	call   403000 <__snprintf_chk@plt-0x110>
  406211:	sar    rbp,0x3
  406215:	je     406236 <__libc_csu_init@@Base+0x56>
  406217:	xor    ebx,ebx
  406219:	nop    DWORD PTR [rax+0x0]
  406220:	mov    rdx,r14
  406223:	mov    rsi,r13
  406226:	mov    edi,r12d
  406229:	call   QWORD PTR [r15+rbx*8]
  40622d:	add    rbx,0x1
  406231:	cmp    rbp,rbx
  406234:	jne    406220 <__libc_csu_init@@Base+0x40>
  406236:	add    rsp,0x8
  40623a:	pop    rbx
  40623b:	pop    rbp
  40623c:	pop    r12
  40623e:	pop    r13
  406240:	pop    r14
  406242:	pop    r15
  406244:	ret    
  406245:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000406250 <__libc_csu_fini@@Base>:
  406250:	endbr64 
  406254:	ret    

Disassembly of section .fini:

0000000000406258 <.fini>:
  406258:	endbr64 
  40625c:	sub    rsp,0x8
  406260:	add    rsp,0x8
  406264:	ret    
