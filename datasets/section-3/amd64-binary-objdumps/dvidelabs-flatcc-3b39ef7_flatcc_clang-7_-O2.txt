
../repos/dvidelabs-flatcc-3b39ef7/bin/flatcc:     file format elf64-x86-64


Disassembly of section .init:

0000000000406000 <.init>:
  406000:	endbr64 
  406004:	sub    rsp,0x8
  406008:	mov    rax,QWORD PTR [rip+0x4cfe1]        # 452ff0 <__gmon_start__>
  40600f:	test   rax,rax
  406012:	je     406016 <__ctype_toupper_loc@plt-0x1a>
  406014:	call   rax
  406016:	add    rsp,0x8
  40601a:	ret    

Disassembly of section .plt:

0000000000406020 <__ctype_toupper_loc@plt-0x10>:
  406020:	push   QWORD PTR [rip+0x4cfe2]        # 453008 <fb_value_set_deleted@@Base+0x6da8>
  406026:	jmp    QWORD PTR [rip+0x4cfe4]        # 453010 <fb_value_set_deleted@@Base+0x6db0>
  40602c:	nop    DWORD PTR [rax+0x0]

0000000000406030 <__ctype_toupper_loc@plt>:
  406030:	jmp    QWORD PTR [rip+0x4cfe2]        # 453018 <__ctype_toupper_loc@GLIBC_2.3>
  406036:	push   0x0
  40603b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406040 <free@plt>:
  406040:	jmp    QWORD PTR [rip+0x4cfda]        # 453020 <free@GLIBC_2.2.5>
  406046:	push   0x1
  40604b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406050 <strncpy@plt>:
  406050:	jmp    QWORD PTR [rip+0x4cfd2]        # 453028 <strncpy@GLIBC_2.2.5>
  406056:	push   0x2
  40605b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406060 <strncmp@plt>:
  406060:	jmp    QWORD PTR [rip+0x4cfca]        # 453030 <strncmp@GLIBC_2.2.5>
  406066:	push   0x3
  40606b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406070 <puts@plt>:
  406070:	jmp    QWORD PTR [rip+0x4cfc2]        # 453038 <puts@GLIBC_2.2.5>
  406076:	push   0x4
  40607b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406080 <qsort@plt>:
  406080:	jmp    QWORD PTR [rip+0x4cfba]        # 453040 <qsort@GLIBC_2.2.5>
  406086:	push   0x5
  40608b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406090 <strtod@plt>:
  406090:	jmp    QWORD PTR [rip+0x4cfb2]        # 453048 <strtod@GLIBC_2.2.5>
  406096:	push   0x6
  40609b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060a0 <vsnprintf@plt>:
  4060a0:	jmp    QWORD PTR [rip+0x4cfaa]        # 453050 <vsnprintf@GLIBC_2.2.5>
  4060a6:	push   0x7
  4060ab:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060b0 <fread_unlocked@plt>:
  4060b0:	jmp    QWORD PTR [rip+0x4cfa2]        # 453058 <fread_unlocked@GLIBC_2.2.5>
  4060b6:	push   0x8
  4060bb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060c0 <fclose@plt>:
  4060c0:	jmp    QWORD PTR [rip+0x4cf9a]        # 453060 <fclose@GLIBC_2.2.5>
  4060c6:	push   0x9
  4060cb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060d0 <strlen@plt>:
  4060d0:	jmp    QWORD PTR [rip+0x4cf92]        # 453068 <strlen@GLIBC_2.2.5>
  4060d6:	push   0xa
  4060db:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060e0 <strchr@plt>:
  4060e0:	jmp    QWORD PTR [rip+0x4cf8a]        # 453070 <strchr@GLIBC_2.2.5>
  4060e6:	push   0xb
  4060eb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060f0 <rewind@plt>:
  4060f0:	jmp    QWORD PTR [rip+0x4cf82]        # 453078 <rewind@GLIBC_2.2.5>
  4060f6:	push   0xc
  4060fb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406100 <__assert_fail@plt>:
  406100:	jmp    QWORD PTR [rip+0x4cf7a]        # 453080 <__assert_fail@GLIBC_2.2.5>
  406106:	push   0xd
  40610b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406110 <memset@plt>:
  406110:	jmp    QWORD PTR [rip+0x4cf72]        # 453088 <memset@GLIBC_2.2.5>
  406116:	push   0xe
  40611b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406120 <fputc@plt>:
  406120:	jmp    QWORD PTR [rip+0x4cf6a]        # 453090 <fputc@GLIBC_2.2.5>
  406126:	push   0xf
  40612b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406130 <memchr@plt>:
  406130:	jmp    QWORD PTR [rip+0x4cf62]        # 453098 <memchr@GLIBC_2.2.5>
  406136:	push   0x10
  40613b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406140 <memcmp@plt>:
  406140:	jmp    QWORD PTR [rip+0x4cf5a]        # 4530a0 <memcmp@GLIBC_2.2.5>
  406146:	push   0x11
  40614b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406150 <calloc@plt>:
  406150:	jmp    QWORD PTR [rip+0x4cf52]        # 4530a8 <calloc@GLIBC_2.2.5>
  406156:	push   0x12
  40615b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406160 <strcmp@plt>:
  406160:	jmp    QWORD PTR [rip+0x4cf4a]        # 4530b0 <strcmp@GLIBC_2.2.5>
  406166:	push   0x13
  40616b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406170 <fputc_unlocked@plt>:
  406170:	jmp    QWORD PTR [rip+0x4cf42]        # 4530b8 <fputc_unlocked@GLIBC_2.2.5>
  406176:	push   0x14
  40617b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406180 <fprintf@plt>:
  406180:	jmp    QWORD PTR [rip+0x4cf3a]        # 4530c0 <fprintf@GLIBC_2.2.5>
  406186:	push   0x15
  40618b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406190 <ftell@plt>:
  406190:	jmp    QWORD PTR [rip+0x4cf32]        # 4530c8 <ftell@GLIBC_2.2.5>
  406196:	push   0x16
  40619b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061a0 <memcpy@plt>:
  4061a0:	jmp    QWORD PTR [rip+0x4cf2a]        # 4530d0 <memcpy@GLIBC_2.14>
  4061a6:	push   0x17
  4061ab:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061b0 <malloc@plt>:
  4061b0:	jmp    QWORD PTR [rip+0x4cf22]        # 4530d8 <malloc@GLIBC_2.2.5>
  4061b6:	push   0x18
  4061bb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061c0 <fseek@plt>:
  4061c0:	jmp    QWORD PTR [rip+0x4cf1a]        # 4530e0 <fseek@GLIBC_2.2.5>
  4061c6:	push   0x19
  4061cb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061d0 <realloc@plt>:
  4061d0:	jmp    QWORD PTR [rip+0x4cf12]        # 4530e8 <realloc@GLIBC_2.2.5>
  4061d6:	push   0x1a
  4061db:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061e0 <fopen@plt>:
  4061e0:	jmp    QWORD PTR [rip+0x4cf0a]        # 4530f0 <fopen@GLIBC_2.2.5>
  4061e6:	push   0x1b
  4061eb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061f0 <vfprintf@plt>:
  4061f0:	jmp    QWORD PTR [rip+0x4cf02]        # 4530f8 <vfprintf@GLIBC_2.2.5>
  4061f6:	push   0x1c
  4061fb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406200 <sprintf@plt>:
  406200:	jmp    QWORD PTR [rip+0x4cefa]        # 453100 <sprintf@GLIBC_2.2.5>
  406206:	push   0x1d
  40620b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406210 <exit@plt>:
  406210:	jmp    QWORD PTR [rip+0x4cef2]        # 453108 <exit@GLIBC_2.2.5>
  406216:	push   0x1e
  40621b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406220 <fwrite@plt>:
  406220:	jmp    QWORD PTR [rip+0x4ceea]        # 453110 <fwrite@GLIBC_2.2.5>
  406226:	push   0x1f
  40622b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406230 <posix_memalign@plt>:
  406230:	jmp    QWORD PTR [rip+0x4cee2]        # 453118 <posix_memalign@GLIBC_2.2.5>
  406236:	push   0x20
  40623b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

Disassembly of section .text:

0000000000406240 <_start@@Base>:
  406240:	endbr64 
  406244:	xor    ebp,ebp
  406246:	mov    r9,rdx
  406249:	pop    rsi
  40624a:	mov    rdx,rsp
  40624d:	and    rsp,0xfffffffffffffff0
  406251:	push   rax
  406252:	push   rsp
  406253:	mov    r8,0x42e290
  40625a:	mov    rcx,0x42e220
  406261:	mov    rdi,0x406e40
  406268:	call   QWORD PTR [rip+0x4cd7a]        # 452fe8 <__libc_start_main@GLIBC_2.2.5>
  40626e:	hlt    
  40626f:	nop
  406270:	endbr64 
  406274:	ret    
  406275:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40627f:	nop
  406280:	mov    eax,0x453130
  406285:	cmp    rax,0x453130
  40628b:	je     4062a0 <_start@@Base+0x60>
  40628d:	mov    eax,0x0
  406292:	test   rax,rax
  406295:	je     4062a0 <_start@@Base+0x60>
  406297:	mov    edi,0x453130
  40629c:	jmp    rax
  40629e:	xchg   ax,ax
  4062a0:	ret    
  4062a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4062ac:	nop    DWORD PTR [rax+0x0]
  4062b0:	mov    esi,0x453130
  4062b5:	sub    rsi,0x453130
  4062bc:	mov    rax,rsi
  4062bf:	shr    rsi,0x3f
  4062c3:	sar    rax,0x3
  4062c7:	add    rsi,rax
  4062ca:	sar    rsi,1
  4062cd:	je     4062e0 <_start@@Base+0xa0>
  4062cf:	mov    eax,0x0
  4062d4:	test   rax,rax
  4062d7:	je     4062e0 <_start@@Base+0xa0>
  4062d9:	mov    edi,0x453130
  4062de:	jmp    rax
  4062e0:	ret    
  4062e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4062ec:	nop    DWORD PTR [rax+0x0]
  4062f0:	endbr64 
  4062f4:	cmp    BYTE PTR [rip+0x4ce35],0x0        # 453130 <__bss_start@@Base>
  4062fb:	jne    406310 <_start@@Base+0xd0>
  4062fd:	push   rbp
  4062fe:	mov    rbp,rsp
  406301:	call   406280 <_start@@Base+0x40>
  406306:	mov    BYTE PTR [rip+0x4ce23],0x1        # 453130 <__bss_start@@Base>
  40630d:	pop    rbp
  40630e:	ret    
  40630f:	nop
  406310:	ret    
  406311:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40631c:	nop    DWORD PTR [rax+0x0]
  406320:	endbr64 
  406324:	jmp    4062b0 <_start@@Base+0x70>
  406326:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406330 <usage@@Base>:
  406330:	push   rbx
  406331:	mov    rbx,rdi
  406334:	lea    rsi,[rip+0x420b0]        # 4483eb <fb_schema_table_deleted@@Base+0x4bb>
  40633b:	lea    rdx,[rip+0x28df2]        # 42f134 <_IO_stdin_used@@Base+0x134>
  406342:	xor    eax,eax
  406344:	call   406180 <fprintf@plt>
  406349:	lea    rsi,[rip+0x28e1a]        # 42f16a <_IO_stdin_used@@Base+0x16a>
  406350:	lea    rdx,[rip+0x28e20]        # 42f177 <_IO_stdin_used@@Base+0x177>
  406357:	xor    eax,eax
  406359:	mov    rdi,rbx
  40635c:	call   406180 <fprintf@plt>
  406361:	lea    rdi,[rip+0x28e15]        # 42f17d <_IO_stdin_used@@Base+0x17d>
  406368:	mov    esi,0x23
  40636d:	mov    edx,0x1
  406372:	mov    rcx,rbx
  406375:	call   406220 <fwrite@plt>
  40637a:	lea    rdi,[rip+0x28e20]        # 42f1a1 <_IO_stdin_used@@Base+0x1a1>
  406381:	mov    esi,0x581
  406386:	mov    edx,0x1
  40638b:	mov    rcx,rbx
  40638e:	pop    rbx
  40638f:	jmp    406220 <fwrite@plt>
  406394:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40639e:	xchg   ax,ax

00000000004063a0 <help@@Base>:
  4063a0:	push   rbx
  4063a1:	mov    rbx,rdi
  4063a4:	lea    rsi,[rip+0x42040]        # 4483eb <fb_schema_table_deleted@@Base+0x4bb>
  4063ab:	lea    rdx,[rip+0x28d82]        # 42f134 <_IO_stdin_used@@Base+0x134>
  4063b2:	xor    eax,eax
  4063b4:	call   406180 <fprintf@plt>
  4063b9:	lea    rsi,[rip+0x28daa]        # 42f16a <_IO_stdin_used@@Base+0x16a>
  4063c0:	lea    rdx,[rip+0x28db0]        # 42f177 <_IO_stdin_used@@Base+0x177>
  4063c7:	xor    eax,eax
  4063c9:	mov    rdi,rbx
  4063cc:	call   406180 <fprintf@plt>
  4063d1:	lea    rdi,[rip+0x28da5]        # 42f17d <_IO_stdin_used@@Base+0x17d>
  4063d8:	mov    esi,0x23
  4063dd:	mov    edx,0x1
  4063e2:	mov    rcx,rbx
  4063e5:	call   406220 <fwrite@plt>
  4063ea:	lea    rdi,[rip+0x28db0]        # 42f1a1 <_IO_stdin_used@@Base+0x1a1>
  4063f1:	mov    esi,0x581
  4063f6:	mov    edx,0x1
  4063fb:	mov    rcx,rbx
  4063fe:	call   406220 <fwrite@plt>
  406403:	lea    rdi,[rip+0x29319]        # 42f723 <_IO_stdin_used@@Base+0x723>
  40640a:	mov    esi,0xc44
  40640f:	mov    edx,0x1
  406414:	mov    rcx,rbx
  406417:	pop    rbx
  406418:	jmp    406220 <fwrite@plt>
  40641d:	nop    DWORD PTR [rax]

0000000000406420 <parse_bool_arg@@Base>:
  406420:	push   rbp
  406421:	push   rbx
  406422:	push   rax
  406423:	mov    rbx,rdi
  406426:	lea    rsi,[rip+0x3b752]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40642d:	call   406160 <strcmp@plt>
  406432:	xor    ebp,ebp
  406434:	test   eax,eax
  406436:	je     406476 <parse_bool_arg@@Base+0x56>
  406438:	lea    rsi,[rip+0x29f29]        # 430368 <_IO_stdin_used@@Base+0x1368>
  40643f:	mov    rdi,rbx
  406442:	call   406160 <strcmp@plt>
  406447:	test   eax,eax
  406449:	je     406476 <parse_bool_arg@@Base+0x56>
  40644b:	lea    rsi,[rip+0x453bd]        # 44b80f <flatcc_builder_padding_base@@Base+0xa6f>
  406452:	mov    rdi,rbx
  406455:	call   406160 <strcmp@plt>
  40645a:	mov    ebp,0x1
  40645f:	test   eax,eax
  406461:	je     406476 <parse_bool_arg@@Base+0x56>
  406463:	lea    rsi,[rip+0x29f01]        # 43036b <_IO_stdin_used@@Base+0x136b>
  40646a:	mov    rdi,rbx
  40646d:	call   406160 <strcmp@plt>
  406472:	test   eax,eax
  406474:	jne    40647f <parse_bool_arg@@Base+0x5f>
  406476:	mov    eax,ebp
  406478:	add    rsp,0x8
  40647c:	pop    rbx
  40647d:	pop    rbp
  40647e:	ret    
  40647f:	mov    rax,QWORD PTR [rip+0x4cb72]        # 452ff8 <stderr@GLIBC_2.2.5>
  406486:	mov    rdi,QWORD PTR [rax]
  406489:	lea    rsi,[rip+0x29edf]        # 43036f <_IO_stdin_used@@Base+0x136f>
  406490:	xor    eax,eax
  406492:	mov    rdx,rbx
  406495:	call   406180 <fprintf@plt>
  40649a:	mov    ebp,0xffffffff
  40649f:	jmp    406476 <parse_bool_arg@@Base+0x56>
  4064a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4064ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004064b0 <match_long_arg@@Base>:
  4064b0:	push   r14
  4064b2:	push   rbx
  4064b3:	push   rax
  4064b4:	mov    r14,rdx
  4064b7:	mov    rbx,rdi
  4064ba:	call   406060 <strncmp@plt>
  4064bf:	mov    ecx,eax
  4064c1:	xor    eax,eax
  4064c3:	test   ecx,ecx
  4064c5:	jne    4064da <match_long_arg@@Base+0x2a>
  4064c7:	mov    rdi,rbx
  4064ca:	call   4060d0 <strlen@plt>
  4064cf:	mov    rcx,rax
  4064d2:	xor    eax,eax
  4064d4:	cmp    rcx,r14
  4064d7:	sete   al
  4064da:	add    rsp,0x8
  4064de:	pop    rbx
  4064df:	pop    r14
  4064e1:	ret    
  4064e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4064ec:	nop    DWORD PTR [rax+0x0]

00000000004064f0 <set_opt@@Base>:
  4064f0:	push   rbp
  4064f1:	push   r15
  4064f3:	push   r14
  4064f5:	push   r13
  4064f7:	push   r12
  4064f9:	push   rbx
  4064fa:	push   rax
  4064fb:	mov    rbp,rdx
  4064fe:	mov    r15,rsi
  406501:	mov    QWORD PTR [rsp],rdi
  406505:	mov    rdi,rsi
  406508:	call   4060d0 <strlen@plt>
  40650d:	mov    rbx,rax
  406510:	mov    esi,0x3d
  406515:	mov    rdi,r15
  406518:	call   4060e0 <strchr@plt>
  40651d:	mov    r12,rax
  406520:	lea    rax,[rax+0x1]
  406524:	mov    r14,r12
  406527:	sub    r14,r15
  40652a:	test   r12,r12
  40652d:	cmove  rax,rbp
  406531:	cmove  r14,rbx
  406535:	movsx  r13d,BYTE PTR [r15]
  406539:	cmp    r13d,0x68
  40653d:	je     406a2f <set_opt@@Base+0x53f>
  406543:	mov    rbp,rax
  406546:	lea    rdi,[rip+0x29e63]        # 4303b0 <_IO_stdin_used@@Base+0x13b0>
  40654d:	mov    rsi,r15
  406550:	call   406160 <strcmp@plt>
  406555:	test   eax,eax
  406557:	je     406a2f <set_opt@@Base+0x53f>
  40655d:	lea    rdi,[rip+0x29e52]        # 4303b6 <_IO_stdin_used@@Base+0x13b6>
  406564:	mov    rsi,r15
  406567:	call   406160 <strcmp@plt>
  40656c:	test   eax,eax
  40656e:	je     406a45 <set_opt@@Base+0x555>
  406574:	lea    rdi,[rip+0x2a1f1]        # 43076c <_IO_stdin_used@@Base+0x176c>
  40657b:	mov    rsi,r15
  40657e:	call   406160 <strcmp@plt>
  406583:	test   eax,eax
  406585:	je     4066a2 <set_opt@@Base+0x1b2>
  40658b:	lea    rdi,[rip+0x29e2d]        # 4303bf <_IO_stdin_used@@Base+0x13bf>
  406592:	mov    rsi,r15
  406595:	call   406160 <strcmp@plt>
  40659a:	test   eax,eax
  40659c:	je     4066b7 <set_opt@@Base+0x1c7>
  4065a2:	lea    rdi,[rip+0x29e1e]        # 4303c7 <_IO_stdin_used@@Base+0x13c7>
  4065a9:	mov    rsi,r15
  4065ac:	call   406160 <strcmp@plt>
  4065b1:	test   eax,eax
  4065b3:	je     4066cc <set_opt@@Base+0x1dc>
  4065b9:	lea    rdi,[rip+0x29e14]        # 4303d4 <_IO_stdin_used@@Base+0x13d4>
  4065c0:	mov    rsi,r15
  4065c3:	call   406160 <strcmp@plt>
  4065c8:	test   eax,eax
  4065ca:	je     4066e1 <set_opt@@Base+0x1f1>
  4065d0:	lea    rdi,[rip+0x29e0b]        # 4303e2 <_IO_stdin_used@@Base+0x13e2>
  4065d7:	mov    rsi,r15
  4065da:	call   406160 <strcmp@plt>
  4065df:	test   eax,eax
  4065e1:	je     4066f6 <set_opt@@Base+0x206>
  4065e7:	lea    rdi,[rip+0x29dfa]        # 4303e8 <_IO_stdin_used@@Base+0x13e8>
  4065ee:	mov    rsi,r15
  4065f1:	mov    rdx,r14
  4065f4:	call   406060 <strncmp@plt>
  4065f9:	cmp    r14,0x11
  4065fd:	jne    406607 <set_opt@@Base+0x117>
  4065ff:	test   eax,eax
  406601:	je     4067db <set_opt@@Base+0x2eb>
  406607:	lea    rdi,[rip+0x29e8a]        # 430498 <_IO_stdin_used@@Base+0x1498>
  40660e:	mov    rsi,r15
  406611:	mov    rdx,r14
  406614:	call   406060 <strncmp@plt>
  406619:	cmp    r14,0xe
  40661d:	jne    406712 <set_opt@@Base+0x222>
  406623:	test   eax,eax
  406625:	jne    406712 <set_opt@@Base+0x222>
  40662b:	test   rbp,rbp
  40662e:	je     406a83 <set_opt@@Base+0x593>
  406634:	lea    rsi,[rip+0x3b544]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40663b:	mov    rdi,rbp
  40663e:	call   406160 <strcmp@plt>
  406643:	xor    ebx,ebx
  406645:	test   eax,eax
  406647:	je     40668b <set_opt@@Base+0x19b>
  406649:	lea    rsi,[rip+0x29d18]        # 430368 <_IO_stdin_used@@Base+0x1368>
  406650:	mov    rdi,rbp
  406653:	call   406160 <strcmp@plt>
  406658:	test   eax,eax
  40665a:	je     40668b <set_opt@@Base+0x19b>
  40665c:	lea    rsi,[rip+0x451ac]        # 44b80f <flatcc_builder_padding_base@@Base+0xa6f>
  406663:	mov    rdi,rbp
  406666:	call   406160 <strcmp@plt>
  40666b:	mov    ebx,0x1
  406670:	test   eax,eax
  406672:	je     40668b <set_opt@@Base+0x19b>
  406674:	lea    rsi,[rip+0x29cf0]        # 43036b <_IO_stdin_used@@Base+0x136b>
  40667b:	mov    rdi,rbp
  40667e:	call   406160 <strcmp@plt>
  406683:	test   eax,eax
  406685:	jne    406ace <set_opt@@Base+0x5de>
  40668b:	xor    eax,eax
  40668d:	test   r12,r12
  406690:	sete   al
  406693:	mov    rcx,QWORD PTR [rsp]
  406697:	mov    DWORD PTR [rcx+0xdc],ebx
  40669d:	jmp    4068e4 <set_opt@@Base+0x3f4>
  4066a2:	mov    rax,QWORD PTR [rsp]
  4066a6:	mov    DWORD PTR [rax+0x80],0x1
  4066b0:	xor    eax,eax
  4066b2:	jmp    4068e6 <set_opt@@Base+0x3f6>
  4066b7:	mov    rax,QWORD PTR [rsp]
  4066bb:	mov    DWORD PTR [rax+0xd4],0x1
  4066c5:	xor    eax,eax
  4066c7:	jmp    4068e6 <set_opt@@Base+0x3f6>
  4066cc:	mov    rax,QWORD PTR [rsp]
  4066d0:	mov    DWORD PTR [rax+0xc4],0x1
  4066da:	xor    eax,eax
  4066dc:	jmp    4068e6 <set_opt@@Base+0x3f6>
  4066e1:	mov    rax,QWORD PTR [rsp]
  4066e5:	mov    DWORD PTR [rax+0xc8],0x1
  4066ef:	xor    eax,eax
  4066f1:	jmp    4068e6 <set_opt@@Base+0x3f6>
  4066f6:	movabs rax,0x100000001
  406700:	mov    rcx,QWORD PTR [rsp]
  406704:	mov    QWORD PTR [rcx+0xc4],rax
  40670b:	xor    eax,eax
  40670d:	jmp    4068e6 <set_opt@@Base+0x3f6>
  406712:	lea    rdi,[rip+0x2a02b]        # 430744 <_IO_stdin_used@@Base+0x1744>
  406719:	mov    rsi,r15
  40671c:	mov    rdx,r14
  40671f:	call   406060 <strncmp@plt>
  406724:	cmp    r14,0x8
  406728:	jne    406759 <set_opt@@Base+0x269>
  40672a:	test   eax,eax
  40672c:	jne    406759 <set_opt@@Base+0x269>
  40672e:	test   rbp,rbp
  406731:	je     406a9e <set_opt@@Base+0x5ae>
  406737:	xor    eax,eax
  406739:	test   r12,r12
  40673c:	sete   al
  40673f:	mov    rcx,QWORD PTR [rsp]
  406743:	mov    QWORD PTR [rcx+0x88],rbp
  40674a:	mov    DWORD PTR [rcx+0x84],0x1
  406754:	jmp    4068e4 <set_opt@@Base+0x3f4>
  406759:	lea    rdi,[rip+0x29d95]        # 4304f5 <_IO_stdin_used@@Base+0x14f5>
  406760:	mov    rsi,r15
  406763:	mov    rdx,r14
  406766:	call   406060 <strncmp@plt>
  40676b:	cmp    r14,0xa
  40676f:	jne    406796 <set_opt@@Base+0x2a6>
  406771:	test   eax,eax
  406773:	jne    406796 <set_opt@@Base+0x2a6>
  406775:	test   rbp,rbp
  406778:	je     406ab6 <set_opt@@Base+0x5c6>
  40677e:	xor    eax,eax
  406780:	test   r12,r12
  406783:	sete   al
  406786:	mov    rcx,QWORD PTR [rsp]
  40678a:	mov    QWORD PTR [rcx+0x90],rbp
  406791:	jmp    4068e4 <set_opt@@Base+0x3f4>
  406796:	lea    rdi,[rip+0x29d89]        # 430526 <_IO_stdin_used@@Base+0x1526>
  40679d:	mov    rsi,r15
  4067a0:	mov    rdx,r14
  4067a3:	call   406060 <strncmp@plt>
  4067a8:	cmp    r14,0x8
  4067ac:	jne    406872 <set_opt@@Base+0x382>
  4067b2:	test   eax,eax
  4067b4:	jne    406872 <set_opt@@Base+0x382>
  4067ba:	test   rbp,rbp
  4067bd:	je     406b01 <set_opt@@Base+0x611>
  4067c3:	xor    eax,eax
  4067c5:	test   r12,r12
  4067c8:	sete   al
  4067cb:	mov    rcx,QWORD PTR [rsp]
  4067cf:	mov    QWORD PTR [rcx+0x98],rbp
  4067d6:	jmp    4068e4 <set_opt@@Base+0x3f4>
  4067db:	mov    r14,QWORD PTR [rip+0x4c816]        # 452ff8 <stderr@GLIBC_2.2.5>
  4067e2:	mov    rcx,QWORD PTR [r14]
  4067e5:	lea    rdi,[rip+0x29c0e]        # 4303fa <_IO_stdin_used@@Base+0x13fa>
  4067ec:	mov    esi,0x70
  4067f1:	mov    edx,0x1
  4067f6:	call   406220 <fwrite@plt>
  4067fb:	test   rbp,rbp
  4067fe:	je     406b19 <set_opt@@Base+0x629>
  406804:	lea    rsi,[rip+0x3b374]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40680b:	mov    rdi,rbp
  40680e:	call   406160 <strcmp@plt>
  406813:	mov    rbx,rbp
  406816:	xor    ebp,ebp
  406818:	test   eax,eax
  40681a:	je     40685e <set_opt@@Base+0x36e>
  40681c:	lea    rsi,[rip+0x29b45]        # 430368 <_IO_stdin_used@@Base+0x1368>
  406823:	mov    rdi,rbx
  406826:	call   406160 <strcmp@plt>
  40682b:	test   eax,eax
  40682d:	je     40685e <set_opt@@Base+0x36e>
  40682f:	lea    rsi,[rip+0x44fd9]        # 44b80f <flatcc_builder_padding_base@@Base+0xa6f>
  406836:	mov    rdi,rbx
  406839:	call   406160 <strcmp@plt>
  40683e:	mov    ebp,0x1
  406843:	test   eax,eax
  406845:	je     40685e <set_opt@@Base+0x36e>
  406847:	lea    rsi,[rip+0x29b1d]        # 43036b <_IO_stdin_used@@Base+0x136b>
  40684e:	mov    rdi,rbx
  406851:	call   406160 <strcmp@plt>
  406856:	test   eax,eax
  406858:	jne    406bb4 <set_opt@@Base+0x6c4>
  40685e:	xor    eax,eax
  406860:	test   r12,r12
  406863:	sete   al
  406866:	mov    rcx,QWORD PTR [rsp]
  40686a:	mov    DWORD PTR [rcx+0xd8],ebp
  406870:	jmp    4068e4 <set_opt@@Base+0x3f4>
  406872:	lea    rdi,[rip+0x29cda]        # 430553 <_IO_stdin_used@@Base+0x1553>
  406879:	mov    rsi,r15
  40687c:	mov    rdx,r14
  40687f:	call   406060 <strncmp@plt>
  406884:	cmp    r14,0xe
  406888:	jne    4068ac <set_opt@@Base+0x3bc>
  40688a:	test   eax,eax
  40688c:	jne    4068ac <set_opt@@Base+0x3bc>
  40688e:	test   rbp,rbp
  406891:	je     406b3c <set_opt@@Base+0x64c>
  406897:	xor    eax,eax
  406899:	test   r12,r12
  40689c:	sete   al
  40689f:	mov    rcx,QWORD PTR [rsp]
  4068a3:	mov    QWORD PTR [rcx+0xe8],rbp
  4068aa:	jmp    4068e4 <set_opt@@Base+0x3f4>
  4068ac:	lea    rdi,[rip+0x29ca7]        # 43055a <_IO_stdin_used@@Base+0x155a>
  4068b3:	mov    rsi,r15
  4068b6:	mov    rdx,r14
  4068b9:	call   406060 <strncmp@plt>
  4068be:	cmp    r14,0x7
  4068c2:	jne    4068f5 <set_opt@@Base+0x405>
  4068c4:	test   eax,eax
  4068c6:	jne    4068f5 <set_opt@@Base+0x405>
  4068c8:	test   rbp,rbp
  4068cb:	je     406b77 <set_opt@@Base+0x687>
  4068d1:	xor    eax,eax
  4068d3:	test   r12,r12
  4068d6:	sete   al
  4068d9:	mov    rcx,QWORD PTR [rsp]
  4068dd:	mov    QWORD PTR [rcx+0xe0],rbp
  4068e4:	add    eax,eax
  4068e6:	add    rsp,0x8
  4068ea:	pop    rbx
  4068eb:	pop    r12
  4068ed:	pop    r13
  4068ef:	pop    r14
  4068f1:	pop    r15
  4068f3:	pop    rbp
  4068f4:	ret    
  4068f5:	lea    eax,[r13-0x2d]
  4068f9:	cmp    eax,0x4a
  4068fc:	ja     406b52 <set_opt@@Base+0x662>
  406902:	lea    rcx,[rip+0x286ff]        # 42f008 <_IO_stdin_used@@Base+0x8>
  406909:	movsxd rax,DWORD PTR [rcx+rax*4]
  40690d:	add    rax,rcx
  406910:	jmp    rax
  406912:	cmp    BYTE PTR [r15+0x1],0x0
  406917:	mov    rdi,QWORD PTR [rsp]
  40691b:	je     4069e7 <set_opt@@Base+0x4f7>
  406921:	add    r15,0x1
  406925:	mov    eax,0x1
  40692a:	mov    rbp,r15
  40692d:	jmp    4069f5 <set_opt@@Base+0x505>
  406932:	mov    rax,QWORD PTR [rsp]
  406936:	mov    DWORD PTR [rax+0xbc],0x1
  406940:	xor    eax,eax
  406942:	jmp    4068e6 <set_opt@@Base+0x3f6>
  406944:	mov    rax,QWORD PTR [rsp]
  406948:	jmp    4069d6 <set_opt@@Base+0x4e6>
  40694d:	mov    rax,QWORD PTR [rsp]
  406951:	mov    DWORD PTR [rax+0xc0],0x1
  40695b:	xor    eax,eax
  40695d:	jmp    4068e6 <set_opt@@Base+0x3f6>
  40695f:	mov    rax,QWORD PTR [rsp]
  406963:	mov    DWORD PTR [rax+0xb0],0x1
  40696d:	xor    eax,eax
  40696f:	jmp    4068e6 <set_opt@@Base+0x3f6>
  406974:	mov    rcx,QWORD PTR [rsp]
  406978:	cmp    QWORD PTR [rcx+0x108],0x0
  406980:	jne    406be0 <set_opt@@Base+0x6f0>
  406986:	cmp    BYTE PTR [r15+0x1],0x0
  40698b:	je     406a15 <set_opt@@Base+0x525>
  406991:	add    r15,0x1
  406995:	mov    eax,0x1
  40699a:	mov    rbp,r15
  40699d:	jmp    406a23 <set_opt@@Base+0x533>
  4069a2:	mov    rax,QWORD PTR [rsp]
  4069a6:	mov    DWORD PTR [rax+0x84],0x1
  4069b0:	xor    eax,eax
  4069b2:	jmp    4068e6 <set_opt@@Base+0x3f6>
  4069b7:	mov    rax,QWORD PTR [rsp]
  4069bb:	mov    DWORD PTR [rax+0xc0],0x1
  4069c5:	vbroadcastss xmm0,DWORD PTR [rip+0x28636]        # 42f004 <_IO_stdin_used@@Base+0x4>
  4069ce:	vmovups XMMWORD PTR [rax+0xb0],xmm0
  4069d6:	mov    DWORD PTR [rax+0xcc],0x1
  4069e0:	xor    eax,eax
  4069e2:	jmp    4068e6 <set_opt@@Base+0x3f6>
  4069e7:	mov    eax,0x2
  4069ec:	test   rbp,rbp
  4069ef:	je     406bfb <set_opt@@Base+0x70b>
  4069f5:	mov    rcx,QWORD PTR [rdi+0xf0]
  4069fc:	movsxd rdx,DWORD PTR [rdi+0x100]
  406a03:	lea    esi,[rdx+0x1]
  406a06:	mov    DWORD PTR [rdi+0x100],esi
  406a0c:	mov    QWORD PTR [rcx+rdx*8],rbp
  406a10:	jmp    4068e6 <set_opt@@Base+0x3f6>
  406a15:	mov    eax,0x2
  406a1a:	test   rbp,rbp
  406a1d:	je     406c16 <set_opt@@Base+0x726>
  406a23:	mov    QWORD PTR [rcx+0x108],rbp
  406a2a:	jmp    4068e6 <set_opt@@Base+0x3f6>
  406a2f:	mov    rax,QWORD PTR [rip+0x4c5aa]        # 452fe0 <stdout@GLIBC_2.2.5>
  406a36:	mov    rdi,QWORD PTR [rax]
  406a39:	call   4063a0 <help@@Base>
  406a3e:	xor    edi,edi
  406a40:	call   406210 <exit@plt>
  406a45:	mov    rbx,QWORD PTR [rip+0x4c5ac]        # 452ff8 <stderr@GLIBC_2.2.5>
  406a4c:	mov    rdi,QWORD PTR [rbx]
  406a4f:	lea    rsi,[rip+0x41995]        # 4483eb <fb_schema_table_deleted@@Base+0x4bb>
  406a56:	lea    rdx,[rip+0x286d7]        # 42f134 <_IO_stdin_used@@Base+0x134>
  406a5d:	xor    eax,eax
  406a5f:	call   406180 <fprintf@plt>
  406a64:	mov    rdi,QWORD PTR [rbx]
  406a67:	lea    rsi,[rip+0x286fc]        # 42f16a <_IO_stdin_used@@Base+0x16a>
  406a6e:	lea    rdx,[rip+0x28702]        # 42f177 <_IO_stdin_used@@Base+0x177>
  406a75:	xor    eax,eax
  406a77:	call   406180 <fprintf@plt>
  406a7c:	xor    edi,edi
  406a7e:	call   406210 <exit@plt>
  406a83:	mov    rax,QWORD PTR [rip+0x4c56e]        # 452ff8 <stderr@GLIBC_2.2.5>
  406a8a:	mov    rcx,QWORD PTR [rax]
  406a8d:	lea    rdi,[rip+0x29a13]        # 4304a7 <_IO_stdin_used@@Base+0x14a7>
  406a94:	mov    esi,0x29
  406a99:	jmp    406b28 <set_opt@@Base+0x638>
  406a9e:	mov    rax,QWORD PTR [rip+0x4c553]        # 452ff8 <stderr@GLIBC_2.2.5>
  406aa5:	mov    rcx,QWORD PTR [rax]
  406aa8:	lea    rdi,[rip+0x29a22]        # 4304d1 <_IO_stdin_used@@Base+0x14d1>
  406aaf:	mov    esi,0x23
  406ab4:	jmp    406b28 <set_opt@@Base+0x638>
  406ab6:	mov    rax,QWORD PTR [rip+0x4c53b]        # 452ff8 <stderr@GLIBC_2.2.5>
  406abd:	mov    rcx,QWORD PTR [rax]
  406ac0:	lea    rdi,[rip+0x29a39]        # 430500 <_IO_stdin_used@@Base+0x1500>
  406ac7:	mov    esi,0x25
  406acc:	jmp    406b28 <set_opt@@Base+0x638>
  406ace:	mov    rax,QWORD PTR [rip+0x4c523]        # 452ff8 <stderr@GLIBC_2.2.5>
  406ad5:	mov    rdi,QWORD PTR [rax]
  406ad8:	lea    rsi,[rip+0x29890]        # 43036f <_IO_stdin_used@@Base+0x136f>
  406adf:	xor    eax,eax
  406ae1:	mov    rdx,rbp
  406ae4:	call   406180 <fprintf@plt>
  406ae9:	mov    rax,QWORD PTR [rsp]
  406aed:	mov    DWORD PTR [rax+0xdc],0xffffffff
  406af7:	mov    edi,0xffffffff
  406afc:	call   406210 <exit@plt>
  406b01:	mov    rax,QWORD PTR [rip+0x4c4f0]        # 452ff8 <stderr@GLIBC_2.2.5>
  406b08:	mov    rcx,QWORD PTR [rax]
  406b0b:	lea    rdi,[rip+0x29a1d]        # 43052f <_IO_stdin_used@@Base+0x152f>
  406b12:	mov    esi,0x23
  406b17:	jmp    406b28 <set_opt@@Base+0x638>
  406b19:	mov    rcx,QWORD PTR [r14]
  406b1c:	lea    rdi,[rip+0x29948]        # 43046b <_IO_stdin_used@@Base+0x146b>
  406b23:	mov    esi,0x2c
  406b28:	mov    edx,0x1
  406b2d:	call   406220 <fwrite@plt>
  406b32:	mov    edi,0xffffffff
  406b37:	call   406210 <exit@plt>
  406b3c:	mov    rax,QWORD PTR [rip+0x4c4b5]        # 452ff8 <stderr@GLIBC_2.2.5>
  406b43:	mov    rcx,QWORD PTR [rax]
  406b46:	lea    rdi,[rip+0x29a15]        # 430562 <_IO_stdin_used@@Base+0x1562>
  406b4d:	jmp    406a94 <set_opt@@Base+0x5a4>
  406b52:	mov    rax,QWORD PTR [rip+0x4c49f]        # 452ff8 <stderr@GLIBC_2.2.5>
  406b59:	mov    rdi,QWORD PTR [rax]
  406b5c:	lea    rsi,[rip+0x29abb]        # 43061e <_IO_stdin_used@@Base+0x161e>
  406b63:	xor    eax,eax
  406b65:	mov    edx,r13d
  406b68:	call   406180 <fprintf@plt>
  406b6d:	mov    edi,0xffffffff
  406b72:	call   406210 <exit@plt>
  406b77:	mov    rax,QWORD PTR [rip+0x4c47a]        # 452ff8 <stderr@GLIBC_2.2.5>
  406b7e:	mov    rcx,QWORD PTR [rax]
  406b81:	lea    rdi,[rip+0x29a04]        # 43058c <_IO_stdin_used@@Base+0x158c>
  406b88:	mov    esi,0x1c
  406b8d:	jmp    406b28 <set_opt@@Base+0x638>
  406b8f:	mov    rax,QWORD PTR [rip+0x4c462]        # 452ff8 <stderr@GLIBC_2.2.5>
  406b96:	mov    rdi,QWORD PTR [rax]
  406b99:	lea    rsi,[rip+0x29a09]        # 4305a9 <_IO_stdin_used@@Base+0x15a9>
  406ba0:	xor    eax,eax
  406ba2:	mov    rdx,r15
  406ba5:	call   406180 <fprintf@plt>
  406baa:	mov    edi,0xffffffff
  406baf:	call   406210 <exit@plt>
  406bb4:	mov    rdi,QWORD PTR [r14]
  406bb7:	lea    rsi,[rip+0x297b1]        # 43036f <_IO_stdin_used@@Base+0x136f>
  406bbe:	xor    eax,eax
  406bc0:	mov    rdx,rbx
  406bc3:	call   406180 <fprintf@plt>
  406bc8:	mov    rax,QWORD PTR [rsp]
  406bcc:	mov    DWORD PTR [rax+0xd8],0xffffffff
  406bd6:	mov    edi,0xffffffff
  406bdb:	call   406210 <exit@plt>
  406be0:	mov    rax,QWORD PTR [rip+0x4c411]        # 452ff8 <stderr@GLIBC_2.2.5>
  406be7:	mov    rcx,QWORD PTR [rax]
  406bea:	lea    rdi,[rip+0x299ea]        # 4305db <_IO_stdin_used@@Base+0x15db>
  406bf1:	mov    esi,0x25
  406bf6:	jmp    406b28 <set_opt@@Base+0x638>
  406bfb:	mov    rax,QWORD PTR [rip+0x4c3f6]        # 452ff8 <stderr@GLIBC_2.2.5>
  406c02:	mov    rcx,QWORD PTR [rax]
  406c05:	lea    rdi,[rip+0x299b2]        # 4305be <_IO_stdin_used@@Base+0x15be>
  406c0c:	mov    esi,0x1c
  406c11:	jmp    406b28 <set_opt@@Base+0x638>
  406c16:	mov    rax,QWORD PTR [rip+0x4c3db]        # 452ff8 <stderr@GLIBC_2.2.5>
  406c1d:	mov    rcx,QWORD PTR [rax]
  406c20:	lea    rdi,[rip+0x299da]        # 430601 <_IO_stdin_used@@Base+0x1601>
  406c27:	mov    esi,0x1c
  406c2c:	jmp    406b28 <set_opt@@Base+0x638>
  406c31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406c40 <get_opt@@Base>:
  406c40:	push   r15
  406c42:	push   r14
  406c44:	push   rbx
  406c45:	mov    r14,rdx
  406c48:	mov    rbx,rsi
  406c4b:	mov    r15,rdi
  406c4e:	mov    al,BYTE PTR [rsi+0x1]
  406c51:	add    rbx,0x1
  406c55:	cmp    al,0x2d
  406c57:	je     406c9b <get_opt@@Base+0x5b>
  406c59:	test   al,al
  406c5b:	je     406cc0 <get_opt@@Base+0x80>
  406c5d:	nop    DWORD PTR [rax]
  406c60:	mov    rdi,r15
  406c63:	mov    rsi,rbx
  406c66:	mov    rdx,r14
  406c69:	call   4064f0 <set_opt@@Base>
  406c6e:	mov    ecx,eax
  406c70:	xor    eax,eax
  406c72:	test   ecx,ecx
  406c74:	je     406c90 <get_opt@@Base+0x50>
  406c76:	cmp    ecx,0x1
  406c79:	je     406cba <get_opt@@Base+0x7a>
  406c7b:	cmp    ecx,0x2
  406c7e:	je     406cb5 <get_opt@@Base+0x75>
  406c80:	cmp    BYTE PTR [rbx],0x0
  406c83:	jne    406c60 <get_opt@@Base+0x20>
  406c85:	jmp    406cba <get_opt@@Base+0x7a>
  406c87:	nop    WORD PTR [rax+rax*1+0x0]
  406c90:	add    rbx,0x1
  406c94:	cmp    BYTE PTR [rbx],0x0
  406c97:	jne    406c60 <get_opt@@Base+0x20>
  406c99:	jmp    406cba <get_opt@@Base+0x7a>
  406c9b:	mov    rdi,r15
  406c9e:	mov    rsi,rbx
  406ca1:	mov    rdx,r14
  406ca4:	call   4064f0 <set_opt@@Base>
  406ca9:	mov    ecx,eax
  406cab:	xor    eax,eax
  406cad:	cmp    ecx,0x2
  406cb0:	sete   al
  406cb3:	jmp    406cba <get_opt@@Base+0x7a>
  406cb5:	mov    eax,0x1
  406cba:	pop    rbx
  406cbb:	pop    r14
  406cbd:	pop    r15
  406cbf:	ret    
  406cc0:	mov    rax,QWORD PTR [rip+0x4c331]        # 452ff8 <stderr@GLIBC_2.2.5>
  406cc7:	mov    rcx,QWORD PTR [rax]
  406cca:	lea    rdi,[rip+0x29962]        # 430633 <_IO_stdin_used@@Base+0x1633>
  406cd1:	mov    esi,0x18
  406cd6:	mov    edx,0x1
  406cdb:	call   406220 <fwrite@plt>
  406ce0:	mov    edi,0xffffffff
  406ce5:	call   406210 <exit@plt>
  406cea:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406cf0 <parse_opts@@Base>:
  406cf0:	push   rbp
  406cf1:	push   r15
  406cf3:	push   r14
  406cf5:	push   r13
  406cf7:	push   r12
  406cf9:	push   rbx
  406cfa:	push   rax
  406cfb:	cmp    edi,0x2
  406cfe:	jl     406dfe <parse_opts@@Base+0x10e>
  406d04:	mov    r12,rdx
  406d07:	mov    r14,rsi
  406d0a:	mov    r15d,edi
  406d0d:	mov    ebx,0x1
  406d12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d1c:	nop    DWORD PTR [rax+0x0]
  406d20:	movsxd rax,ebx
  406d23:	mov    rbp,QWORD PTR [r14+rax*8]
  406d27:	cmp    BYTE PTR [rbp+0x0],0x2d
  406d2b:	jne    406d40 <parse_opts@@Base+0x50>
  406d2d:	lea    eax,[rbx+0x1]
  406d30:	cmp    eax,r15d
  406d33:	jge    406d70 <parse_opts@@Base+0x80>
  406d35:	cdqe   
  406d37:	mov    r13,QWORD PTR [r14+rax*8]
  406d3b:	jmp    406d73 <parse_opts@@Base+0x83>
  406d3d:	nop    DWORD PTR [rax]
  406d40:	mov    rax,QWORD PTR [r12+0xf8]
  406d48:	movsxd rcx,DWORD PTR [r12+0x104]
  406d50:	lea    edx,[rcx+0x1]
  406d53:	mov    DWORD PTR [r12+0x104],edx
  406d5b:	mov    QWORD PTR [rax+rcx*8],rbp
  406d5f:	jmp    406df2 <parse_opts@@Base+0x102>
  406d64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d6e:	xchg   ax,ax
  406d70:	xor    r13d,r13d
  406d73:	mov    al,BYTE PTR [rbp+0x1]
  406d76:	add    rbp,0x1
  406d7a:	cmp    al,0x2d
  406d7c:	je     406dd0 <parse_opts@@Base+0xe0>
  406d7e:	test   al,al
  406d80:	je     406e0d <parse_opts@@Base+0x11d>
  406d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d90:	mov    rdi,r12
  406d93:	mov    rsi,rbp
  406d96:	mov    rdx,r13
  406d99:	call   4064f0 <set_opt@@Base>
  406d9e:	xor    ecx,ecx
  406da0:	test   eax,eax
  406da2:	je     406dc0 <parse_opts@@Base+0xd0>
  406da4:	cmp    eax,0x1
  406da7:	je     406df0 <parse_opts@@Base+0x100>
  406da9:	cmp    eax,0x2
  406dac:	je     406de8 <parse_opts@@Base+0xf8>
  406dae:	cmp    BYTE PTR [rbp+0x0],0x0
  406db2:	jne    406d90 <parse_opts@@Base+0xa0>
  406db4:	jmp    406df0 <parse_opts@@Base+0x100>
  406db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406dc0:	add    rbp,0x1
  406dc4:	cmp    BYTE PTR [rbp+0x0],0x0
  406dc8:	jne    406d90 <parse_opts@@Base+0xa0>
  406dca:	jmp    406df0 <parse_opts@@Base+0x100>
  406dcc:	nop    DWORD PTR [rax+0x0]
  406dd0:	mov    rdi,r12
  406dd3:	mov    rsi,rbp
  406dd6:	mov    rdx,r13
  406dd9:	call   4064f0 <set_opt@@Base>
  406dde:	xor    ecx,ecx
  406de0:	cmp    eax,0x2
  406de3:	sete   cl
  406de6:	jmp    406df0 <parse_opts@@Base+0x100>
  406de8:	mov    ecx,0x1
  406ded:	nop    DWORD PTR [rax]
  406df0:	add    ebx,ecx
  406df2:	add    ebx,0x1
  406df5:	cmp    ebx,r15d
  406df8:	jl     406d20 <parse_opts@@Base+0x30>
  406dfe:	add    rsp,0x8
  406e02:	pop    rbx
  406e03:	pop    r12
  406e05:	pop    r13
  406e07:	pop    r14
  406e09:	pop    r15
  406e0b:	pop    rbp
  406e0c:	ret    
  406e0d:	mov    rax,QWORD PTR [rip+0x4c1e4]        # 452ff8 <stderr@GLIBC_2.2.5>
  406e14:	mov    rcx,QWORD PTR [rax]
  406e17:	lea    rdi,[rip+0x29815]        # 430633 <_IO_stdin_used@@Base+0x1633>
  406e1e:	mov    esi,0x18
  406e23:	mov    edx,0x1
  406e28:	call   406220 <fwrite@plt>
  406e2d:	mov    edi,0xffffffff
  406e32:	call   406210 <exit@plt>
  406e37:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406e40 <main@@Base>:
  406e40:	push   rbp
  406e41:	push   r15
  406e43:	push   r14
  406e45:	push   rbx
  406e46:	sub    rsp,0x118
  406e4d:	cmp    edi,0x1
  406e50:	jle    407157 <main@@Base+0x317>
  406e56:	mov    r14,rsi
  406e59:	mov    ebp,edi
  406e5b:	lea    rdi,[rsp+0x8]
  406e60:	call   4071e0 <flatcc_init_options@@Base>
  406e65:	movsxd rbx,ebp
  406e68:	shl    rbx,0x3
  406e6c:	mov    rdi,rbx
  406e6f:	call   4061b0 <malloc@plt>
  406e74:	mov    QWORD PTR [rsp+0xf8],rax
  406e7c:	test   rax,rax
  406e7f:	je     407170 <main@@Base+0x330>
  406e85:	mov    rdi,rbx
  406e88:	call   4061b0 <malloc@plt>
  406e8d:	mov    QWORD PTR [rsp+0x100],rax
  406e95:	test   rax,rax
  406e98:	je     40719a <main@@Base+0x35a>
  406e9e:	lea    rdx,[rsp+0x8]
  406ea3:	mov    edi,ebp
  406ea5:	mov    rsi,r14
  406ea8:	call   406cf0 <parse_opts@@Base>
  406ead:	mov    esi,DWORD PTR [rsp+0xb8]
  406eb4:	mov    ecx,DWORD PTR [rsp+0xc4]
  406ebb:	test   ecx,ecx
  406ebd:	setne  al
  406ec0:	test   esi,esi
  406ec2:	setne  bl
  406ec5:	and    bl,al
  406ec7:	movzx  eax,bl
  406eca:	mov    DWORD PTR [rsp+0xbc],eax
  406ed1:	mov    ebp,DWORD PTR [rsp+0x10c]
  406ed8:	test   ebp,ebp
  406eda:	je     406f5a <main@@Base+0x11a>
  406edc:	mov    dl,0x1
  406ede:	mov    edi,DWORD PTR [rsp+0xc0]
  406ee5:	or     edi,ecx
  406ee7:	jne    406f0c <main@@Base+0xcc>
  406ee9:	or     esi,DWORD PTR [rsp+0xc8]
  406ef0:	setne  al
  406ef3:	or     bl,al
  406ef5:	jne    406f0c <main@@Base+0xcc>
  406ef7:	cmp    DWORD PTR [rsp+0xcc],0x0
  406eff:	jne    406f0c <main@@Base+0xcc>
  406f01:	cmp    DWORD PTR [rsp+0xd0],0x0
  406f09:	setne  dl
  406f0c:	cmp    DWORD PTR [rsp+0xdc],0x0
  406f14:	je     406fab <main@@Base+0x16b>
  406f1a:	test   dl,dl
  406f1c:	je     406fcc <main@@Base+0x18c>
  406f22:	cmp    DWORD PTR [rsp+0x88],0x0
  406f2a:	jne    4070e8 <main@@Base+0x2a8>
  406f30:	cmp    QWORD PTR [rsp+0xa0],0x0
  406f39:	je     406fcc <main@@Base+0x18c>
  406f3f:	mov    rax,QWORD PTR [rip+0x4c0b2]        # 452ff8 <stderr@GLIBC_2.2.5>
  406f46:	mov    rcx,QWORD PTR [rax]
  406f49:	lea    rdi,[rip+0x29795]        # 4306e5 <_IO_stdin_used@@Base+0x16e5>
  406f50:	mov    esi,0x3a
  406f55:	jmp    4070fe <main@@Base+0x2be>
  406f5a:	test   esi,esi
  406f5c:	je     4070a0 <main@@Base+0x260>
  406f62:	cmp    DWORD PTR [rsp+0xdc],0x0
  406f6a:	jne    4070a0 <main@@Base+0x260>
  406f70:	lea    rdi,[rsp+0x8]
  406f75:	xor    esi,esi
  406f77:	xor    edx,edx
  406f79:	xor    ecx,ecx
  406f7b:	call   407300 <flatcc_create_context@@Base>
  406f80:	test   rax,rax
  406f83:	je     407088 <main@@Base+0x248>
  406f89:	mov    rbx,rax
  406f8c:	mov    rdi,rax
  406f8f:	call   407a70 <flatcc_generate_files@@Base>
  406f94:	test   eax,eax
  406f96:	jne    40707b <main@@Base+0x23b>
  406f9c:	mov    rdi,rbx
  406f9f:	call   407b90 <flatcc_destroy_context@@Base>
  406fa4:	xor    ebx,ebx
  406fa6:	jmp    40712d <main@@Base+0x2ed>
  406fab:	test   ecx,ecx
  406fad:	setne  al
  406fb0:	xor    dl,0x1
  406fb3:	or     dl,al
  406fb5:	jne    406fc1 <main@@Base+0x181>
  406fb7:	cmp    DWORD PTR [rsp+0xc8],0x0
  406fbf:	je     406fcc <main@@Base+0x18c>
  406fc1:	mov    DWORD PTR [rsp+0xc0],0x1
  406fcc:	cmp    QWORD PTR [rsp+0x98],0x0
  406fd5:	je     406fe6 <main@@Base+0x1a6>
  406fd7:	cmp    QWORD PTR [rsp+0x90],0x0
  406fe0:	je     4070b8 <main@@Base+0x278>
  406fe6:	cmp    DWORD PTR [rsp+0x88],0x0
  406fee:	je     406fff <main@@Base+0x1bf>
  406ff0:	cmp    QWORD PTR [rsp+0xa0],0x0
  406ff9:	jne    4070d0 <main@@Base+0x290>
  406fff:	test   ebp,ebp
  407001:	jle    407074 <main@@Base+0x234>
  407003:	mov    r15,QWORD PTR [rsp+0x100]
  40700b:	xor    ebp,ebp
  40700d:	lea    r14,[rsp+0x8]
  407012:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40701c:	nop    DWORD PTR [rax+0x0]
  407020:	mov    rsi,QWORD PTR [r15+rbp*8]
  407024:	xor    edx,edx
  407026:	xor    ecx,ecx
  407028:	mov    rdi,r14
  40702b:	call   407300 <flatcc_create_context@@Base>
  407030:	test   rax,rax
  407033:	je     407088 <main@@Base+0x248>
  407035:	mov    rbx,rax
  407038:	mov    rsi,QWORD PTR [r15+rbp*8]
  40703c:	mov    rdi,rax
  40703f:	call   4073f0 <flatcc_parse_file@@Base>
  407044:	test   eax,eax
  407046:	jne    40707b <main@@Base+0x23b>
  407048:	mov    rdi,rbx
  40704b:	call   407a70 <flatcc_generate_files@@Base>
  407050:	test   eax,eax
  407052:	jne    40707b <main@@Base+0x23b>
  407054:	mov    rdi,rbx
  407057:	call   407b90 <flatcc_destroy_context@@Base>
  40705c:	mov    DWORD PTR [rsp+0xa8],0x1
  407067:	add    rbp,0x1
  40706b:	cmp    ebp,DWORD PTR [rsp+0x10c]
  407072:	jl     407020 <main@@Base+0x1e0>
  407074:	xor    ebx,ebx
  407076:	jmp    40712d <main@@Base+0x2ed>
  40707b:	mov    rdi,rbx
  40707e:	call   407b90 <flatcc_destroy_context@@Base>
  407083:	jmp    407108 <main@@Base+0x2c8>
  407088:	mov    rax,QWORD PTR [rip+0x4bf69]        # 452ff8 <stderr@GLIBC_2.2.5>
  40708f:	mov    rcx,QWORD PTR [rax]
  407092:	lea    rdi,[rip+0x295e0]        # 430679 <_IO_stdin_used@@Base+0x1679>
  407099:	mov    esi,0x31
  40709e:	jmp    4070fe <main@@Base+0x2be>
  4070a0:	mov    rax,QWORD PTR [rip+0x4bf51]        # 452ff8 <stderr@GLIBC_2.2.5>
  4070a7:	mov    rcx,QWORD PTR [rax]
  4070aa:	lea    rdi,[rip+0x295b6]        # 430667 <_IO_stdin_used@@Base+0x1667>
  4070b1:	mov    esi,0x11
  4070b6:	jmp    4070fe <main@@Base+0x2be>
  4070b8:	mov    rax,QWORD PTR [rip+0x4bf39]        # 452ff8 <stderr@GLIBC_2.2.5>
  4070bf:	mov    rcx,QWORD PTR [rax]
  4070c2:	lea    rdi,[rip+0x29657]        # 430720 <_IO_stdin_used@@Base+0x1720>
  4070c9:	mov    esi,0x2c
  4070ce:	jmp    4070fe <main@@Base+0x2be>
  4070d0:	mov    rax,QWORD PTR [rip+0x4bf21]        # 452ff8 <stderr@GLIBC_2.2.5>
  4070d7:	mov    rcx,QWORD PTR [rax]
  4070da:	lea    rdi,[rip+0x2966c]        # 43074d <_IO_stdin_used@@Base+0x174d>
  4070e1:	mov    esi,0x26
  4070e6:	jmp    4070fe <main@@Base+0x2be>
  4070e8:	mov    rax,QWORD PTR [rip+0x4bf09]        # 452ff8 <stderr@GLIBC_2.2.5>
  4070ef:	mov    rcx,QWORD PTR [rax]
  4070f2:	lea    rdi,[rip+0x295b2]        # 4306ab <_IO_stdin_used@@Base+0x16ab>
  4070f9:	mov    esi,0x39
  4070fe:	mov    edx,0x1
  407103:	call   406220 <fwrite@plt>
  407108:	mov    rax,QWORD PTR [rip+0x4bee9]        # 452ff8 <stderr@GLIBC_2.2.5>
  40710f:	mov    rcx,QWORD PTR [rax]
  407112:	lea    rdi,[rip+0x2965b]        # 430774 <_IO_stdin_used@@Base+0x1774>
  407119:	mov    esi,0xe
  40711e:	mov    edx,0x1
  407123:	call   406220 <fwrite@plt>
  407128:	mov    ebx,0xffffffff
  40712d:	mov    rdi,QWORD PTR [rsp+0xf8]
  407135:	call   406040 <free@plt>
  40713a:	mov    rdi,QWORD PTR [rsp+0x100]
  407142:	call   406040 <free@plt>
  407147:	mov    eax,ebx
  407149:	add    rsp,0x118
  407150:	pop    rbx
  407151:	pop    r14
  407153:	pop    r15
  407155:	pop    rbp
  407156:	ret    
  407157:	mov    rax,QWORD PTR [rip+0x4be9a]        # 452ff8 <stderr@GLIBC_2.2.5>
  40715e:	mov    rdi,QWORD PTR [rax]
  407161:	call   406330 <usage@@Base>
  407166:	mov    edi,0xffffffff
  40716b:	call   406210 <exit@plt>
  407170:	mov    rax,QWORD PTR [rip+0x4be81]        # 452ff8 <stderr@GLIBC_2.2.5>
  407177:	mov    rcx,QWORD PTR [rax]
  40717a:	lea    rdi,[rip+0x294cb]        # 43064c <_IO_stdin_used@@Base+0x164c>
  407181:	mov    esi,0x1a
  407186:	mov    edx,0x1
  40718b:	call   406220 <fwrite@plt>
  407190:	mov    edi,0xffffffff
  407195:	call   406210 <exit@plt>
  40719a:	mov    rax,QWORD PTR [rip+0x4be57]        # 452ff8 <stderr@GLIBC_2.2.5>
  4071a1:	mov    rcx,QWORD PTR [rax]
  4071a4:	lea    rdi,[rip+0x294a1]        # 43064c <_IO_stdin_used@@Base+0x164c>
  4071ab:	mov    esi,0x1a
  4071b0:	mov    edx,0x1
  4071b5:	call   406220 <fwrite@plt>
  4071ba:	mov    rdi,QWORD PTR [rsp+0xf8]
  4071c2:	call   406040 <free@plt>
  4071c7:	mov    edi,0xffffffff
  4071cc:	call   406210 <exit@plt>
  4071d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4071db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004071e0 <flatcc_init_options@@Base>:
  4071e0:	vxorps xmm0,xmm0,xmm0
  4071e4:	vmovups YMMWORD PTR [rdi+0x30],ymm0
  4071e9:	vmovups YMMWORD PTR [rdi+0x10],ymm0
  4071ee:	vmovups YMMWORD PTR [rdi+0x50],ymm0
  4071f3:	vmovups YMMWORD PTR [rdi+0x70],ymm0
  4071f8:	vmovups YMMWORD PTR [rdi+0xf0],ymm0
  407200:	vmovups YMMWORD PTR [rdi+0xd0],ymm0
  407208:	vmovups YMMWORD PTR [rdi+0xb0],ymm0
  407210:	vmovups YMMWORD PTR [rdi+0x90],ymm0
  407218:	mov    QWORD PTR [rdi],0x10000
  40721f:	movabs rax,0x6400000064
  407229:	mov    QWORD PTR [rdi+0x8],rax
  40722d:	vbroadcastss ymm0,DWORD PTR [rip+0x27dce]        # 42f004 <_IO_stdin_used@@Base+0x4>
  407236:	vmovups YMMWORD PTR [rdi+0x14],ymm0
  40723b:	vmovaps xmm0,XMMWORD PTR [rip+0x2954d]        # 430790 <_IO_stdin_used@@Base+0x1790>
  407243:	vmovups XMMWORD PTR [rdi+0x34],xmm0
  407248:	mov    DWORD PTR [rdi+0x44],0x4
  40724f:	vmovaps xmm0,XMMWORD PTR [rip+0x29549]        # 4307a0 <_IO_stdin_used@@Base+0x17a0>
  407257:	vmovups XMMWORD PTR [rdi+0x48],xmm0
  40725c:	mov    DWORD PTR [rdi+0x58],0x1
  407263:	mov    QWORD PTR [rdi+0x60],0xfffe
  40726b:	lea    rax,[rip+0x29543]        # 4307b5 <_IO_stdin_used@@Base+0x17b5>
  407272:	vmovq  xmm0,rax
  407277:	lea    rax,[rip+0x29532]        # 4307b0 <_IO_stdin_used@@Base+0x17b0>
  40727e:	vmovq  xmm1,rax
  407283:	vpunpcklqdq xmm0,xmm1,xmm0
  407287:	vmovdqu XMMWORD PTR [rdi+0x68],xmm0
  40728c:	lea    rax,[rip+0x29528]        # 4307bb <_IO_stdin_used@@Base+0x17bb>
  407293:	mov    QWORD PTR [rdi+0x78],rax
  407297:	mov    DWORD PTR [rdi+0xa4],0x0
  4072a1:	mov    DWORD PTR [rdi+0xa8],0x1
  4072ab:	mov    DWORD PTR [rdi+0xac],0x1
  4072b5:	mov    DWORD PTR [rdi+0xc4],0x0
  4072bf:	vpxor  xmm0,xmm0,xmm0
  4072c3:	vmovdqu XMMWORD PTR [rdi+0xb0],xmm0
  4072cb:	mov    DWORD PTR [rdi+0xd0],0x4
  4072d5:	mov    DWORD PTR [rdi+0xd4],0x0
  4072df:	mov    DWORD PTR [rdi+0xd8],0x1
  4072e9:	mov    DWORD PTR [rdi+0xdc],0x0
  4072f3:	vzeroupper 
  4072f6:	ret    
  4072f7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407300 <flatcc_create_context@@Base>:
  407300:	push   r15
  407302:	push   r14
  407304:	push   r13
  407306:	push   r12
  407308:	push   rbx
  407309:	mov    r14,rcx
  40730c:	mov    r15,rdx
  40730f:	mov    r12,rsi
  407312:	mov    r13,rdi
  407315:	mov    edi,0x358
  40731a:	call   4061b0 <malloc@plt>
  40731f:	test   rax,rax
  407322:	je     40734a <flatcc_create_context@@Base+0x4a>
  407324:	mov    rbx,rax
  407327:	xor    r9d,r9d
  40732a:	mov    rdi,rax
  40732d:	mov    rsi,r13
  407330:	mov    rdx,r12
  407333:	mov    rcx,r15
  407336:	mov    r8,r14
  407339:	call   41cae0 <__flatcc_fb_init_parser@@Base>
  40733e:	test   eax,eax
  407340:	je     40734c <flatcc_create_context@@Base+0x4c>
  407342:	mov    rdi,rbx
  407345:	call   406040 <free@plt>
  40734a:	xor    ebx,ebx
  40734c:	mov    rax,rbx
  40734f:	pop    rbx
  407350:	pop    r12
  407352:	pop    r13
  407354:	pop    r14
  407356:	pop    r15
  407358:	ret    
  407359:	nop    DWORD PTR [rax+0x0]

0000000000407360 <flatcc_parse_buffer@@Base>:
  407360:	push   r15
  407362:	push   r14
  407364:	push   rbx
  407365:	mov    r14,rdx
  407368:	mov    r15,rsi
  40736b:	mov    rbx,rdi
  40736e:	mov    DWORD PTR [rdi+0xf8],0x1
  407378:	mov    rax,QWORD PTR [rdi+0xe8]
  40737f:	cmp    rax,rdx
  407382:	jae    4073a1 <flatcc_parse_buffer@@Base+0x41>
  407384:	test   rax,rax
  407387:	je     4073a1 <flatcc_parse_buffer@@Base+0x41>
  407389:	lea    rsi,[rip+0x29430]        # 4307c0 <_IO_stdin_used@@Base+0x17c0>
  407390:	xor    eax,eax
  407392:	mov    rdi,rbx
  407395:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  40739a:	mov    eax,0xffffffff
  40739f:	jmp    4073e0 <flatcc_parse_buffer@@Base+0x80>
  4073a1:	lea    rsi,[rbx+0x1f8]
  4073a8:	lea    rdi,[rbx+0x320]
  4073af:	mov    edx,0x1
  4073b4:	call   419dd0 <ptr_set_insert_item@@Base>
  4073b9:	xor    ecx,ecx
  4073bb:	mov    rdi,rbx
  4073be:	mov    rsi,r15
  4073c1:	mov    rdx,r14
  4073c4:	call   41cde0 <__flatcc_fb_parse@@Base>
  4073c9:	mov    ecx,eax
  4073cb:	mov    eax,0xffffffff
  4073d0:	test   ecx,ecx
  4073d2:	jne    4073e0 <flatcc_parse_buffer@@Base+0x80>
  4073d4:	mov    rdi,rbx
  4073d7:	call   424ae0 <__flatcc_fb_build_schema@@Base>
  4073dc:	neg    eax
  4073de:	sbb    eax,eax
  4073e0:	pop    rbx
  4073e1:	pop    r14
  4073e3:	pop    r15
  4073e5:	ret    
  4073e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004073f0 <flatcc_parse_file@@Base>:
  4073f0:	push   rbp
  4073f1:	push   r15
  4073f3:	push   r14
  4073f5:	push   r13
  4073f7:	push   r12
  4073f9:	push   rbx
  4073fa:	sub    rsp,0x28
  4073fe:	mov    r13,rsi
  407401:	mov    rbx,rdi
  407404:	mov    rdi,rsi
  407407:	call   4060d0 <strlen@plt>
  40740c:	mov    r12,rax
  40740f:	lea    rbp,[rbx+0x1f8]
  407416:	mov    rdi,QWORD PTR [rbx+0x260]
  40741d:	add    rdi,0x40
  407421:	mov    edx,0x1
  407426:	mov    rsi,rbp
  407429:	call   41bad0 <fb_schema_table_insert_item@@Base>
  40742e:	xor    r15d,r15d
  407431:	test   rax,rax
  407434:	je     407448 <flatcc_parse_file@@Base+0x58>
  407436:	mov    eax,r15d
  407439:	add    rsp,0x28
  40743d:	pop    rbx
  40743e:	pop    r12
  407440:	pop    r13
  407442:	pop    r14
  407444:	pop    r15
  407446:	pop    rbp
  407447:	ret    
  407448:	mov    rax,QWORD PTR [rbx+0x350]
  40744f:	mov    QWORD PTR [rsp+0x10],rax
  407454:	test   rax,rax
  407457:	mov    QWORD PTR [rsp+0x18],rbp
  40745c:	je     407585 <flatcc_parse_file@@Base+0x195>
  407462:	cmp    DWORD PTR [rbx+0x1e8],0x0
  407469:	jle    40750d <flatcc_parse_file@@Base+0x11d>
  40746f:	xor    r15d,r15d
  407472:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40747c:	nop    DWORD PTR [rax+0x0]
  407480:	mov    rax,QWORD PTR [rbx+0x1d8]
  407487:	mov    rbp,QWORD PTR [rax+r15*8]
  40748b:	mov    rdi,rbp
  40748e:	call   4060d0 <strlen@plt>
  407493:	mov    r9d,0x1
  407499:	mov    rdi,rbp
  40749c:	mov    rsi,rax
  40749f:	mov    rdx,r13
  4074a2:	mov    rcx,r12
  4074a5:	lea    r8,[rip+0x29887]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  4074ac:	call   41bf00 <__flatcc_fb_create_join_path_n@@Base>
  4074b1:	test   rax,rax
  4074b4:	je     4079d4 <flatcc_parse_file@@Base+0x5e4>
  4074ba:	mov    rbp,rax
  4074bd:	mov    rsi,QWORD PTR [rbx+0xe8]
  4074c4:	mov    rdi,rax
  4074c7:	lea    rdx,[rsp+0x8]
  4074cc:	call   41c5b0 <__flatcc_fb_read_file@@Base>
  4074d1:	test   rax,rax
  4074d4:	jne    4075bb <flatcc_parse_file@@Base+0x1cb>
  4074da:	mov    rdi,rbp
  4074dd:	call   406040 <free@plt>
  4074e2:	mov    rax,QWORD PTR [rbx+0xe8]
  4074e9:	cmp    QWORD PTR [rsp+0x8],rax
  4074ee:	jbe    4074f9 <flatcc_parse_file@@Base+0x109>
  4074f0:	test   rax,rax
  4074f3:	jne    407932 <flatcc_parse_file@@Base+0x542>
  4074f9:	add    r15,0x1
  4074fd:	movsxd rax,DWORD PTR [rbx+0x1e8]
  407504:	cmp    r15,rax
  407507:	jl     407480 <flatcc_parse_file@@Base+0x90>
  40750d:	cmp    QWORD PTR [rsp+0x10],0x0
  407513:	je     40794e <flatcc_parse_file@@Base+0x55e>
  407519:	mov    rbp,QWORD PTR [rbx+0x350]
  407520:	mov    rdi,rbp
  407523:	call   4060d0 <strlen@plt>
  407528:	mov    rdi,rbp
  40752b:	mov    rsi,rax
  40752e:	call   41c4b0 <__flatcc_fb_find_basename@@Base>
  407533:	lea    r8,[rip+0x297f9]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  40753a:	mov    r9d,0x1
  407540:	mov    rdi,rbp
  407543:	mov    rsi,rax
  407546:	mov    rdx,r13
  407549:	mov    rcx,r12
  40754c:	call   41bf00 <__flatcc_fb_create_join_path_n@@Base>
  407551:	test   rax,rax
  407554:	je     4079d4 <flatcc_parse_file@@Base+0x5e4>
  40755a:	mov    rbp,rax
  40755d:	mov    rsi,QWORD PTR [rbx+0xe8]
  407564:	lea    rdx,[rsp+0x8]
  407569:	mov    rdi,rax
  40756c:	call   41c5b0 <__flatcc_fb_read_file@@Base>
  407571:	test   rax,rax
  407574:	mov    r15d,0x0
  40757a:	je     407917 <flatcc_parse_file@@Base+0x527>
  407580:	mov    r14,rax
  407583:	jmp    4075c1 <flatcc_parse_file@@Base+0x1d1>
  407585:	mov    rsi,QWORD PTR [rbx+0xe8]
  40758c:	lea    rdx,[rsp+0x8]
  407591:	mov    rdi,r13
  407594:	call   41c5b0 <__flatcc_fb_read_file@@Base>
  407599:	test   rax,rax
  40759c:	je     4078ed <flatcc_parse_file@@Base+0x4fd>
  4075a2:	mov    r14,rax
  4075a5:	mov    rdi,r13
  4075a8:	call   41be60 <__flatcc_fb_copy_path@@Base>
  4075ad:	test   rax,rax
  4075b0:	je     4079d4 <flatcc_parse_file@@Base+0x5e4>
  4075b6:	mov    rbp,rax
  4075b9:	jmp    4075c1 <flatcc_parse_file@@Base+0x1d1>
  4075bb:	mov    r14,rax
  4075be:	xor    r15d,r15d
  4075c1:	mov    rdx,QWORD PTR [rsp+0x8]
  4075c6:	mov    rax,QWORD PTR [rbx+0x260]
  4075cd:	add    QWORD PTR [rax+0x68],rdx
  4075d1:	mov    QWORD PTR [rbx+0x348],rbp
  4075d8:	mov    ecx,0x1
  4075dd:	mov    rdi,rbx
  4075e0:	mov    rsi,r14
  4075e3:	call   41cde0 <__flatcc_fb_parse@@Base>
  4075e8:	test   eax,eax
  4075ea:	jne    407436 <flatcc_parse_file@@Base+0x46>
  4075f0:	mov    rbp,QWORD PTR [rsp+0x18]
  4075f5:	mov    r15,QWORD PTR [rbp+0x0]
  4075f9:	test   r15,r15
  4075fc:	je     407757 <flatcc_parse_file@@Base+0x367>
  407602:	lea    rax,[rbx+0xe8]
  407609:	mov    QWORD PTR [rsp+0x20],rax
  40760e:	xchg   ax,ax
  407610:	mov    rdi,QWORD PTR [r15+0x8]
  407614:	movsxd rsi,DWORD PTR [r15+0x10]
  407618:	call   41be10 <__flatcc_fb_copy_path_n@@Base>
  40761d:	test   rax,rax
  407620:	je     4079d4 <flatcc_parse_file@@Base+0x5e4>
  407626:	mov    r14,rax
  407629:	mov    r12,QWORD PTR [rbx+0x260]
  407630:	mov    eax,DWORD PTR [rbx+0xf0]
  407636:	cmp    DWORD PTR [r12+0x64],eax
  40763b:	jl     407645 <flatcc_parse_file@@Base+0x255>
  40763d:	test   eax,eax
  40763f:	jg     40796d <flatcc_parse_file@@Base+0x57d>
  407645:	mov    eax,DWORD PTR [rbx+0xf4]
  40764b:	cmp    DWORD PTR [r12+0x60],eax
  407650:	jl     40765a <flatcc_parse_file@@Base+0x26a>
  407652:	test   eax,eax
  407654:	jg     407976 <flatcc_parse_file@@Base+0x586>
  40765a:	mov    edi,0x358
  40765f:	call   4061b0 <malloc@plt>
  407664:	test   rax,rax
  407667:	je     407991 <flatcc_parse_file@@Base+0x5a1>
  40766d:	mov    r13,rax
  407670:	mov    rcx,QWORD PTR [rbx+0x10]
  407674:	mov    r8,QWORD PTR [rbx+0x18]
  407678:	mov    rdi,rax
  40767b:	mov    rsi,QWORD PTR [rsp+0x20]
  407680:	mov    rdx,r14
  407683:	mov    r9,r12
  407686:	call   41cae0 <__flatcc_fb_init_parser@@Base>
  40768b:	test   eax,eax
  40768d:	jne    407989 <flatcc_parse_file@@Base+0x599>
  407693:	lea    rdi,[r12+0x40]
  407698:	lea    rsi,[r13+0x1f8]
  40769f:	call   41bb90 <fb_schema_table_find_item@@Base>
  4076a4:	test   rax,rax
  4076a7:	je     4076ee <flatcc_parse_file@@Base+0x2fe>
  4076a9:	add    rax,0x128
  4076af:	mov    rdi,rax
  4076b2:	lea    rsi,[rip+0x517]        # 407bd0 <flatcc_destroy_context@@Base+0x40>
  4076b9:	mov    rdx,rbp
  4076bc:	call   419fe0 <ptr_set_visit@@Base>
  4076c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4076d0:	mov    rbp,QWORD PTR [r13+0x0]
  4076d4:	mov    rdi,r13
  4076d7:	call   4231d0 <__flatcc_fb_clear_parser@@Base>
  4076dc:	mov    rdi,r13
  4076df:	call   406040 <free@plt>
  4076e4:	mov    r13,rbp
  4076e7:	test   rbp,rbp
  4076ea:	jne    4076d0 <flatcc_parse_file@@Base+0x2e0>
  4076ec:	jmp    40773e <flatcc_parse_file@@Base+0x34e>
  4076ee:	mov    rax,QWORD PTR [rbx]
  4076f1:	mov    QWORD PTR [r13+0x0],rax
  4076f5:	mov    QWORD PTR [rbx],r13
  4076f8:	mov    rax,QWORD PTR [rbx+0x348]
  4076ff:	mov    QWORD PTR [r13+0x350],rax
  407706:	add    DWORD PTR [r12+0x64],0x1
  40770c:	add    DWORD PTR [r12+0x60],0x1
  407712:	mov    rdi,r13
  407715:	mov    rsi,r14
  407718:	call   4073f0 <flatcc_parse_file@@Base>
  40771d:	test   eax,eax
  40771f:	jne    407991 <flatcc_parse_file@@Base+0x5a1>
  407725:	add    r13,0x320
  40772c:	mov    rdi,r13
  40772f:	lea    rsi,[rip+0x49a]        # 407bd0 <flatcc_destroy_context@@Base+0x40>
  407736:	mov    rdx,rbp
  407739:	call   419fe0 <ptr_set_visit@@Base>
  40773e:	mov    rdi,r14
  407741:	call   406040 <free@plt>
  407746:	mov    r15,QWORD PTR [r15]
  407749:	test   r15,r15
  40774c:	mov    rbp,QWORD PTR [rsp+0x18]
  407751:	jne    407610 <flatcc_parse_file@@Base+0x220>
  407757:	lea    rdi,[rbx+0x320]
  40775e:	mov    edx,0x1
  407763:	mov    rsi,rbp
  407766:	call   419dd0 <ptr_set_insert_item@@Base>
  40776b:	mov    rdi,rbx
  40776e:	call   424ae0 <__flatcc_fb_build_schema@@Base>
  407773:	test   eax,eax
  407775:	jne    407999 <flatcc_parse_file@@Base+0x5a9>
  40777b:	cmp    QWORD PTR [rsp+0x10],0x0
  407781:	mov    r15d,0x0
  407787:	jne    407436 <flatcc_parse_file@@Base+0x46>
  40778d:	mov    eax,DWORD PTR [rbx+0x16c]
  407793:	test   eax,eax
  407795:	je     407436 <flatcc_parse_file@@Base+0x46>
  40779b:	cmp    QWORD PTR [rbx+0x350],0x0
  4077a3:	jne    4079fe <flatcc_parse_file@@Base+0x60e>
  4077a9:	mov    rax,QWORD PTR [rbx+0x1f0]
  4077b0:	test   rax,rax
  4077b3:	lea    rbp,[rip+0x29579]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  4077ba:	cmove  rax,rbp
  4077be:	mov    rcx,QWORD PTR [rbx+0x308]
  4077c5:	mov    rsi,QWORD PTR [rbx+0x170]
  4077cc:	mov    r14,QWORD PTR [rbx+0x178]
  4077d3:	test   rsi,rsi
  4077d6:	cmove  rsi,rcx
  4077da:	mov    rdi,rbp
  4077dd:	cmove  rdi,rax
  4077e1:	lea    rdx,[rip+0x29127]        # 43090f <_IO_stdin_used@@Base+0x190f>
  4077e8:	cmovne rdx,rbp
  4077ec:	mov    r15,rbp
  4077ef:	test   r14,r14
  4077f2:	jne    407813 <flatcc_parse_file@@Base+0x423>
  4077f4:	cmp    DWORD PTR [rbx+0x1bc],0x0
  4077fb:	lea    r8,[rip+0x4038a]        # 447b8c <_IO_stdin_used@@Base+0x18b8c>
  407802:	lea    rbp,[rip+0x28fac]        # 4307b5 <_IO_stdin_used@@Base+0x17b5>
  407809:	cmove  rbp,r8
  40780d:	mov    r14,rcx
  407810:	mov    r15,rax
  407813:	mov    ecx,0x1
  407818:	call   41c020 <__flatcc_fb_create_join_path@@Base>
  40781d:	test   rax,rax
  407820:	je     4079d4 <flatcc_parse_file@@Base+0x5e4>
  407826:	mov    r12,rax
  407829:	mov    ecx,0x1
  40782e:	mov    rdi,r15
  407831:	mov    rsi,r14
  407834:	mov    rdx,rbp
  407837:	call   41c020 <__flatcc_fb_create_join_path@@Base>
  40783c:	test   rax,rax
  40783f:	je     4079d4 <flatcc_parse_file@@Base+0x5e4>
  407845:	mov    rbp,rax
  407848:	mov    rdi,rax
  40784b:	call   41c490 <__flatcc_fb_create_make_path@@Base>
  407850:	test   rax,rax
  407853:	je     4079d4 <flatcc_parse_file@@Base+0x5e4>
  407859:	mov    r15,rax
  40785c:	mov    rdi,rbp
  40785f:	call   406040 <free@plt>
  407864:	lea    rsi,[rip+0x290ab]        # 430916 <_IO_stdin_used@@Base+0x1916>
  40786b:	mov    rdi,r12
  40786e:	call   4061e0 <fopen@plt>
  407873:	mov    r13,rax
  407876:	test   rax,rax
  407879:	je     4079a1 <flatcc_parse_file@@Base+0x5b1>
  40787f:	lea    rsi,[rip+0x290c2]        # 430948 <_IO_stdin_used@@Base+0x1948>
  407886:	xor    eax,eax
  407888:	mov    rdi,r13
  40788b:	mov    rdx,r15
  40788e:	call   406180 <fprintf@plt>
  407893:	mov    rbp,QWORD PTR [rbx]
  407896:	test   rbp,rbp
  407899:	je     4078db <flatcc_parse_file@@Base+0x4eb>
  40789b:	lea    r14,[rip+0x290aa]        # 43094c <_IO_stdin_used@@Base+0x194c>
  4078a2:	mov    rdi,QWORD PTR [rbp+0x348]
  4078a9:	call   41c490 <__flatcc_fb_create_make_path@@Base>
  4078ae:	test   rax,rax
  4078b1:	je     4079d4 <flatcc_parse_file@@Base+0x5e4>
  4078b7:	mov    rbx,rax
  4078ba:	xor    eax,eax
  4078bc:	mov    rdi,r13
  4078bf:	mov    rsi,r14
  4078c2:	mov    rdx,rbx
  4078c5:	call   406180 <fprintf@plt>
  4078ca:	mov    rbp,QWORD PTR [rbp+0x0]
  4078ce:	mov    rdi,rbx
  4078d1:	call   406040 <free@plt>
  4078d6:	test   rbp,rbp
  4078d9:	jne    4078a2 <flatcc_parse_file@@Base+0x4b2>
  4078db:	mov    edi,0xa
  4078e0:	mov    rsi,r13
  4078e3:	call   406170 <fputc_unlocked@plt>
  4078e8:	jmp    4079b5 <flatcc_parse_file@@Base+0x5c5>
  4078ed:	mov    rax,QWORD PTR [rbx+0xe8]
  4078f4:	mov    rcx,QWORD PTR [rbx+0x260]
  4078fb:	mov    rcx,QWORD PTR [rcx+0x68]
  4078ff:	add    rcx,QWORD PTR [rsp+0x8]
  407904:	cmp    rcx,rax
  407907:	jbe    407462 <flatcc_parse_file@@Base+0x72>
  40790d:	test   rax,rax
  407910:	jne    407932 <flatcc_parse_file@@Base+0x542>
  407912:	jmp    407462 <flatcc_parse_file@@Base+0x72>
  407917:	mov    rdi,rbp
  40791a:	call   406040 <free@plt>
  40791f:	mov    rax,QWORD PTR [rbx+0xe8]
  407926:	cmp    QWORD PTR [rsp+0x8],rax
  40792b:	jbe    40794e <flatcc_parse_file@@Base+0x55e>
  40792d:	test   rax,rax
  407930:	je     40794e <flatcc_parse_file@@Base+0x55e>
  407932:	lea    rsi,[rip+0x28e87]        # 4307c0 <_IO_stdin_used@@Base+0x17c0>
  407939:	xor    eax,eax
  40793b:	mov    rdi,rbx
  40793e:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  407943:	mov    r15d,0xffffffff
  407949:	jmp    407436 <flatcc_parse_file@@Base+0x46>
  40794e:	lea    rsi,[rip+0x28e8f]        # 4307e4 <_IO_stdin_used@@Base+0x17e4>
  407955:	xor    eax,eax
  407957:	mov    rdi,rbx
  40795a:	mov    rdx,r13
  40795d:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  407962:	mov    r15d,0xffffffff
  407968:	jmp    407436 <flatcc_parse_file@@Base+0x46>
  40796d:	lea    rsi,[rip+0x28ebb]        # 43082f <_IO_stdin_used@@Base+0x182f>
  407974:	jmp    40797d <flatcc_parse_file@@Base+0x58d>
  407976:	lea    rsi,[rip+0x28ed2]        # 43084f <_IO_stdin_used@@Base+0x184f>
  40797d:	xor    eax,eax
  40797f:	mov    rdi,rbx
  407982:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  407987:	jmp    407991 <flatcc_parse_file@@Base+0x5a1>
  407989:	mov    rdi,r13
  40798c:	call   406040 <free@plt>
  407991:	mov    rdi,r14
  407994:	call   406040 <free@plt>
  407999:	xor    r15d,r15d
  40799c:	jmp    407436 <flatcc_parse_file@@Base+0x46>
  4079a1:	lea    rsi,[rip+0x28f71]        # 430919 <_IO_stdin_used@@Base+0x1919>
  4079a8:	xor    eax,eax
  4079aa:	mov    rdi,rbx
  4079ad:	mov    rdx,r12
  4079b0:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  4079b5:	mov    rdi,r12
  4079b8:	call   406040 <free@plt>
  4079bd:	mov    rdi,r15
  4079c0:	call   406040 <free@plt>
  4079c5:	test   r13,r13
  4079c8:	je     407999 <flatcc_parse_file@@Base+0x5a9>
  4079ca:	mov    rdi,r13
  4079cd:	call   4060c0 <fclose@plt>
  4079d2:	jmp    407999 <flatcc_parse_file@@Base+0x5a9>
  4079d4:	mov    rax,QWORD PTR [rip+0x4b61d]        # 452ff8 <stderr@GLIBC_2.2.5>
  4079db:	mov    rcx,QWORD PTR [rax]
  4079de:	lea    rdi,[rip+0x28e27]        # 43080c <_IO_stdin_used@@Base+0x180c>
  4079e5:	mov    esi,0x22
  4079ea:	mov    edx,0x1
  4079ef:	call   406220 <fwrite@plt>
  4079f4:	mov    edi,0x1
  4079f9:	call   406210 <exit@plt>
  4079fe:	lea    rdi,[rip+0x28e68]        # 43086d <_IO_stdin_used@@Base+0x186d>
  407a05:	lea    rsi,[rip+0x28e76]        # 430882 <_IO_stdin_used@@Base+0x1882>
  407a0c:	lea    rcx,[rip+0x28ecf]        # 4308e2 <_IO_stdin_used@@Base+0x18e2>
  407a13:	mov    edx,0xdc
  407a18:	call   406100 <__assert_fail@plt>
  407a1d:	nop    DWORD PTR [rax]

0000000000407a20 <flatcc_generate_binary_schema_to_buffer@@Base>:
  407a20:	push   rax
  407a21:	mov    rax,rsi
  407a24:	mov    QWORD PTR [rsp],rdx
  407a28:	lea    rdx,[rdi+0xe8]
  407a2f:	lea    rsi,[rdi+0x1f8]
  407a36:	mov    rcx,rsp
  407a39:	mov    rdi,rdx
  407a3c:	mov    rdx,rax
  407a3f:	call   4177c0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
  407a44:	cmp    rax,0x1
  407a48:	sbb    eax,eax
  407a4a:	or     eax,DWORD PTR [rsp]
  407a4d:	pop    rcx
  407a4e:	ret    
  407a4f:	nop

0000000000407a50 <flatcc_generate_binary_schema@@Base>:
  407a50:	mov    rax,rsi
  407a53:	lea    rcx,[rdi+0xe8]
  407a5a:	lea    rsi,[rdi+0x1f8]
  407a61:	mov    rdi,rcx
  407a64:	mov    rdx,rax
  407a67:	jmp    4189d0 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
  407a6c:	nop    DWORD PTR [rax+0x0]

0000000000407a70 <flatcc_generate_files@@Base>:
  407a70:	push   rbp
  407a71:	push   r15
  407a73:	push   r14
  407a75:	push   rbx
  407a76:	sub    rsp,0x108
  407a7d:	mov    r15d,0xffffffff
  407a83:	test   rdi,rdi
  407a86:	je     407a94 <flatcc_generate_files@@Base+0x24>
  407a88:	mov    rbx,rdi
  407a8b:	cmp    DWORD PTR [rdi+0xd0],0x0
  407a92:	je     407aa5 <flatcc_generate_files@@Base+0x35>
  407a94:	mov    eax,r15d
  407a97:	add    rsp,0x108
  407a9e:	pop    rbx
  407a9f:	pop    r14
  407aa1:	pop    r15
  407aa3:	pop    rbp
  407aa4:	ret    
  407aa5:	xor    eax,eax
  407aa7:	mov    rcx,rbx
  407aaa:	nop    WORD PTR [rax+rax*1+0x0]
  407ab0:	mov    rbp,rcx
  407ab3:	mov    QWORD PTR [rcx+0x8],rax
  407ab7:	mov    rcx,QWORD PTR [rcx]
  407aba:	mov    rax,rbp
  407abd:	test   rcx,rcx
  407ac0:	jne    407ab0 <flatcc_generate_files@@Base+0x40>
  407ac2:	lea    r14,[rbx+0xe8]
  407ac9:	cmp    DWORD PTR [rbx+0x1bc],0x0
  407ad0:	je     407ae5 <flatcc_generate_files@@Base+0x75>
  407ad2:	lea    rsi,[rbx+0x1f8]
  407ad9:	mov    rdi,r14
  407adc:	call   418a40 <__flatcc_fb_codegen_bfbs_to_file@@Base>
  407ae1:	test   eax,eax
  407ae3:	jne    407a94 <flatcc_generate_files@@Base+0x24>
  407ae5:	lea    rdi,[rsp+0x8]
  407aea:	mov    rsi,r14
  407aed:	call   407d50 <__flatcc_fb_init_output_c@@Base>
  407af2:	test   eax,eax
  407af4:	jne    407a94 <flatcc_generate_files@@Base+0x24>
  407af6:	cmp    DWORD PTR [rbx+0x188],0x0
  407afd:	je     407b4a <flatcc_generate_files@@Base+0xda>
  407aff:	xor    r15d,r15d
  407b02:	cmp    DWORD PTR [rbx+0xe4],0x0
  407b09:	je     407b7c <flatcc_generate_files@@Base+0x10c>
  407b0b:	cmp    DWORD PTR [rbx+0x1b4],0x0
  407b12:	je     407b5d <flatcc_generate_files@@Base+0xed>
  407b14:	test   rbp,rbp
  407b17:	je     407b7c <flatcc_generate_files@@Base+0x10c>
  407b19:	lea    rbx,[rsp+0x8]
  407b1e:	cmp    DWORD PTR [rbp+0xd0],0x0
  407b25:	jne    407b76 <flatcc_generate_files@@Base+0x106>
  407b27:	lea    rsi,[rbp+0x1f8]
  407b2e:	mov    rdi,rbx
  407b31:	call   408470 <__flatcc_fb_codegen_c@@Base>
  407b36:	test   eax,eax
  407b38:	setne  cl
  407b3b:	mov    rbp,QWORD PTR [rbp+0x8]
  407b3f:	test   rbp,rbp
  407b42:	je     407b78 <flatcc_generate_files@@Base+0x108>
  407b44:	test   eax,eax
  407b46:	je     407b1e <flatcc_generate_files@@Base+0xae>
  407b48:	jmp    407b78 <flatcc_generate_files@@Base+0x108>
  407b4a:	lea    rdi,[rsp+0x8]
  407b4f:	call   408370 <__flatcc_fb_codegen_common_c@@Base>
  407b54:	mov    r15d,eax
  407b57:	test   eax,eax
  407b59:	jne    407b7c <flatcc_generate_files@@Base+0x10c>
  407b5b:	jmp    407aff <flatcc_generate_files@@Base+0x8f>
  407b5d:	add    rbx,0x1f8
  407b64:	lea    rdi,[rsp+0x8]
  407b69:	mov    rsi,rbx
  407b6c:	call   408470 <__flatcc_fb_codegen_c@@Base>
  407b71:	mov    r15d,eax
  407b74:	jmp    407b7c <flatcc_generate_files@@Base+0x10c>
  407b76:	mov    cl,0x1
  407b78:	movzx  r15d,cl
  407b7c:	lea    rdi,[rsp+0x8]
  407b81:	call   407d20 <__flatcc_fb_end_output_c@@Base>
  407b86:	jmp    407a94 <flatcc_generate_files@@Base+0x24>
  407b8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407b90 <flatcc_destroy_context@@Base>:
  407b90:	push   r14
  407b92:	push   rbx
  407b93:	push   rax
  407b94:	test   rdi,rdi
  407b97:	je     407bbb <flatcc_destroy_context@@Base+0x2b>
  407b99:	mov    rbx,rdi
  407b9c:	nop    DWORD PTR [rax+0x0]
  407ba0:	mov    r14,QWORD PTR [rbx]
  407ba3:	mov    rdi,rbx
  407ba6:	call   4231d0 <__flatcc_fb_clear_parser@@Base>
  407bab:	mov    rdi,rbx
  407bae:	call   406040 <free@plt>
  407bb3:	mov    rbx,r14
  407bb6:	test   r14,r14
  407bb9:	jne    407ba0 <flatcc_destroy_context@@Base+0x10>
  407bbb:	add    rsp,0x8
  407bbf:	pop    rbx
  407bc0:	pop    r14
  407bc2:	ret    
  407bc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407bcd:	nop    DWORD PTR [rax]
  407bd0:	add    rdi,0x128
  407bd7:	mov    edx,0x1
  407bdc:	jmp    419dd0 <ptr_set_insert_item@@Base>
  407be1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407beb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407bf0 <__flatcc_fb_open_output_file@@Base>:
  407bf0:	push   rbp
  407bf1:	push   r15
  407bf3:	push   r14
  407bf5:	push   r13
  407bf7:	push   r12
  407bf9:	push   rbx
  407bfa:	push   rax
  407bfb:	mov    rax,QWORD PTR [rdi+0xe0]
  407c02:	mov    rax,QWORD PTR [rax+0x108]
  407c09:	test   rax,rax
  407c0c:	lea    rbx,[rip+0x29120]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  407c13:	cmovne rbx,rax
  407c17:	xor    ebp,ebp
  407c19:	cmp    QWORD PTR [rdi+0xd0],0x0
  407c21:	jne    407c7e <__flatcc_fb_open_output_file@@Base+0x8e>
  407c23:	mov    r14,rcx
  407c26:	mov    r15,rdx
  407c29:	mov    r12,rsi
  407c2c:	mov    r13,rdi
  407c2f:	mov    rdi,rbx
  407c32:	call   4060d0 <strlen@plt>
  407c37:	mov    r9d,0x1
  407c3d:	mov    rdi,rbx
  407c40:	mov    rsi,rax
  407c43:	mov    rdx,r12
  407c46:	mov    rcx,r15
  407c49:	mov    r8,r14
  407c4c:	call   41bf00 <__flatcc_fb_create_join_path_n@@Base>
  407c51:	test   rax,rax
  407c54:	je     407cb1 <__flatcc_fb_open_output_file@@Base+0xc1>
  407c56:	mov    r14,rax
  407c59:	lea    rsi,[rip+0x28cb6]        # 430916 <_IO_stdin_used@@Base+0x1916>
  407c60:	mov    rdi,rax
  407c63:	call   4061e0 <fopen@plt>
  407c68:	mov    QWORD PTR [r13+0xd0],rax
  407c6f:	xor    ebp,ebp
  407c71:	test   rax,rax
  407c74:	je     407c8f <__flatcc_fb_open_output_file@@Base+0x9f>
  407c76:	mov    rdi,r14
  407c79:	call   406040 <free@plt>
  407c7e:	mov    eax,ebp
  407c80:	add    rsp,0x8
  407c84:	pop    rbx
  407c85:	pop    r12
  407c87:	pop    r13
  407c89:	pop    r14
  407c8b:	pop    r15
  407c8d:	pop    rbp
  407c8e:	ret    
  407c8f:	mov    rax,QWORD PTR [rip+0x4b362]        # 452ff8 <stderr@GLIBC_2.2.5>
  407c96:	mov    rdi,QWORD PTR [rax]
  407c99:	lea    rsi,[rip+0x28cb0]        # 430950 <_IO_stdin_used@@Base+0x1950>
  407ca0:	xor    eax,eax
  407ca2:	mov    rdx,r14
  407ca5:	call   406180 <fprintf@plt>
  407caa:	mov    ebp,0xffffffff
  407caf:	jmp    407c76 <__flatcc_fb_open_output_file@@Base+0x86>
  407cb1:	mov    rax,QWORD PTR [rip+0x4b340]        # 452ff8 <stderr@GLIBC_2.2.5>
  407cb8:	mov    rcx,QWORD PTR [rax]
  407cbb:	lea    rdi,[rip+0x28b4a]        # 43080c <_IO_stdin_used@@Base+0x180c>
  407cc2:	mov    esi,0x22
  407cc7:	mov    edx,0x1
  407ccc:	call   406220 <fwrite@plt>
  407cd1:	mov    edi,0x1
  407cd6:	call   406210 <exit@plt>
  407cdb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407ce0 <__flatcc_fb_close_output_file@@Base>:
  407ce0:	push   rbx
  407ce1:	mov    rax,QWORD PTR [rdi+0xe0]
  407ce8:	cmp    QWORD PTR [rax+0x98],0x0
  407cf0:	jne    407d1a <__flatcc_fb_close_output_file@@Base+0x3a>
  407cf2:	cmp    DWORD PTR [rax+0x80],0x0
  407cf9:	jne    407d1a <__flatcc_fb_close_output_file@@Base+0x3a>
  407cfb:	mov    rbx,rdi
  407cfe:	mov    rdi,QWORD PTR [rdi+0xd0]
  407d05:	test   rdi,rdi
  407d08:	je     407d1a <__flatcc_fb_close_output_file@@Base+0x3a>
  407d0a:	call   4060c0 <fclose@plt>
  407d0f:	mov    QWORD PTR [rbx+0xd0],0x0
  407d1a:	pop    rbx
  407d1b:	ret    
  407d1c:	nop    DWORD PTR [rax+0x0]

0000000000407d20 <__flatcc_fb_end_output_c@@Base>:
  407d20:	push   rbx
  407d21:	mov    rbx,rdi
  407d24:	mov    rdi,QWORD PTR [rdi+0xd0]
  407d2b:	test   rdi,rdi
  407d2e:	je     407d41 <__flatcc_fb_end_output_c@@Base+0x21>
  407d30:	mov    rax,QWORD PTR [rip+0x4b2a9]        # 452fe0 <stdout@GLIBC_2.2.5>
  407d37:	cmp    rdi,QWORD PTR [rax]
  407d3a:	je     407d41 <__flatcc_fb_end_output_c@@Base+0x21>
  407d3c:	call   4060c0 <fclose@plt>
  407d41:	mov    QWORD PTR [rbx+0xd0],0x0
  407d4c:	pop    rbx
  407d4d:	ret    
  407d4e:	xchg   ax,ax

0000000000407d50 <__flatcc_fb_init_output_c@@Base>:
  407d50:	push   rbp
  407d51:	push   r15
  407d53:	push   r14
  407d55:	push   r13
  407d57:	push   r12
  407d59:	push   rbx
  407d5a:	push   rax
  407d5b:	mov    r12,rsi
  407d5e:	mov    rbx,rdi
  407d61:	cmp    DWORD PTR [rsi+0xa0],0x0
  407d68:	lea    rax,[rip+0x28ba7]        # 430916 <_IO_stdin_used@@Base+0x1916>
  407d6f:	lea    r14,[rip+0x28bfc]        # 430972 <_IO_stdin_used@@Base+0x1972>
  407d76:	cmove  r14,rax
  407d7a:	mov    rax,QWORD PTR [rsi+0x108]
  407d81:	test   rax,rax
  407d84:	lea    r15,[rip+0x28fa8]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  407d8b:	vxorps xmm0,xmm0,xmm0
  407d8f:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  407d97:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  407d9f:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  407da7:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  407daf:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  407db4:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  407db9:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  407dbe:	cmovne r15,rax
  407dc2:	vmovups YMMWORD PTR [rdi],ymm0
  407dc6:	mov    QWORD PTR [rdi+0xe0],rsi
  407dcd:	mov    rbp,QWORD PTR [rsi+0xe8]
  407dd4:	test   rbp,rbp
  407dd7:	je     407e14 <__flatcc_fb_init_output_c@@Base+0xc4>
  407dd9:	mov    rdi,rbp
  407ddc:	vzeroupper 
  407ddf:	call   4060d0 <strlen@plt>
  407de4:	mov    r13,rax
  407de7:	cmp    rax,0x65
  407deb:	jb     407e21 <__flatcc_fb_init_output_c@@Base+0xd1>
  407ded:	mov    rax,QWORD PTR [rip+0x4b204]        # 452ff8 <stderr@GLIBC_2.2.5>
  407df4:	mov    rdi,QWORD PTR [rax]
  407df7:	lea    rsi,[rip+0x28b77]        # 430975 <_IO_stdin_used@@Base+0x1975>
  407dfe:	mov    edx,0x64
  407e03:	xor    eax,eax
  407e05:	call   406180 <fprintf@plt>
  407e0a:	mov    ebx,0xffffffff
  407e0f:	jmp    407f05 <__flatcc_fb_init_output_c@@Base+0x1b5>
  407e14:	lea    rbp,[rip+0x28b91]        # 4309ac <_IO_stdin_used@@Base+0x19ac>
  407e1b:	mov    r13d,0xb
  407e21:	mov    QWORD PTR [rsp],r14
  407e25:	mov    edx,0x64
  407e2a:	mov    rdi,rbx
  407e2d:	mov    rsi,rbp
  407e30:	vzeroupper 
  407e33:	call   406050 <strncpy@plt>
  407e38:	mov    BYTE PTR [rbx+0x64],0x0
  407e3c:	test   r13,r13
  407e3f:	je     407e48 <__flatcc_fb_init_output_c@@Base+0xf8>
  407e41:	mov    WORD PTR [rbx+r13*1],0x5f
  407e48:	lea    rbp,[rbx+0x66]
  407e4c:	mov    r14b,BYTE PTR [rbx]
  407e4f:	test   r14b,r14b
  407e52:	je     407e7c <__flatcc_fb_init_output_c@@Base+0x12c>
  407e54:	call   406030 <__ctype_toupper_loc@plt>
  407e59:	nop    DWORD PTR [rax+0x0]
  407e60:	mov    rcx,QWORD PTR [rax]
  407e63:	movsx  rdx,r14b
  407e67:	movzx  ecx,BYTE PTR [rcx+rdx*4]
  407e6b:	mov    BYTE PTR [rbp+0x0],cl
  407e6e:	movzx  r14d,BYTE PTR [rbp-0x65]
  407e73:	lea    rbp,[rbp+0x1]
  407e77:	test   r14b,r14b
  407e7a:	jne    407e60 <__flatcc_fb_init_output_c@@Base+0x110>
  407e7c:	mov    BYTE PTR [rbp+0x0],0x0
  407e80:	mov    BYTE PTR [rbx+r13*1+0x66],0x0
  407e86:	mov    eax,DWORD PTR [r12+0xd0]
  407e8e:	mov    DWORD PTR [rbx+0xf4],eax
  407e94:	cmp    DWORD PTR [r12+0x80],0x0
  407e9d:	je     407eb4 <__flatcc_fb_init_output_c@@Base+0x164>
  407e9f:	mov    rax,QWORD PTR [rip+0x4b13a]        # 452fe0 <stdout@GLIBC_2.2.5>
  407ea6:	mov    rax,QWORD PTR [rax]
  407ea9:	mov    QWORD PTR [rbx+0xd0],rax
  407eb0:	xor    ebx,ebx
  407eb2:	jmp    407f05 <__flatcc_fb_init_output_c@@Base+0x1b5>
  407eb4:	mov    rax,QWORD PTR [rbx+0xe0]
  407ebb:	mov    rsi,QWORD PTR [rax+0x98]
  407ec2:	test   rsi,rsi
  407ec5:	je     407eb0 <__flatcc_fb_init_output_c@@Base+0x160>
  407ec7:	lea    rdx,[rip+0x28e65]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  407ece:	mov    ecx,0x1
  407ed3:	mov    rdi,r15
  407ed6:	call   41c020 <__flatcc_fb_create_join_path@@Base>
  407edb:	test   rax,rax
  407ede:	je     407f38 <__flatcc_fb_init_output_c@@Base+0x1e8>
  407ee0:	mov    r15,rax
  407ee3:	mov    rdi,rax
  407ee6:	mov    rsi,QWORD PTR [rsp]
  407eea:	call   4061e0 <fopen@plt>
  407eef:	mov    QWORD PTR [rbx+0xd0],rax
  407ef6:	xor    ebx,ebx
  407ef8:	test   rax,rax
  407efb:	je     407f16 <__flatcc_fb_init_output_c@@Base+0x1c6>
  407efd:	mov    rdi,r15
  407f00:	call   406040 <free@plt>
  407f05:	mov    eax,ebx
  407f07:	add    rsp,0x8
  407f0b:	pop    rbx
  407f0c:	pop    r12
  407f0e:	pop    r13
  407f10:	pop    r14
  407f12:	pop    r15
  407f14:	pop    rbp
  407f15:	ret    
  407f16:	mov    rax,QWORD PTR [rip+0x4b0db]        # 452ff8 <stderr@GLIBC_2.2.5>
  407f1d:	mov    rdi,QWORD PTR [rax]
  407f20:	lea    rsi,[rip+0x28a29]        # 430950 <_IO_stdin_used@@Base+0x1950>
  407f27:	xor    eax,eax
  407f29:	mov    rdx,r15
  407f2c:	call   406180 <fprintf@plt>
  407f31:	mov    ebx,0xffffffff
  407f36:	jmp    407efd <__flatcc_fb_init_output_c@@Base+0x1ad>
  407f38:	mov    rax,QWORD PTR [rip+0x4b0b9]        # 452ff8 <stderr@GLIBC_2.2.5>
  407f3f:	mov    rcx,QWORD PTR [rax]
  407f42:	lea    rdi,[rip+0x288c3]        # 43080c <_IO_stdin_used@@Base+0x180c>
  407f49:	mov    esi,0x22
  407f4e:	mov    edx,0x1
  407f53:	call   406220 <fwrite@plt>
  407f58:	mov    edi,0x1
  407f5d:	call   406210 <exit@plt>
  407f62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407f6c:	nop    DWORD PTR [rax+0x0]

0000000000407f70 <__flatcc_fb_gen_c_includes@@Base>:
  407f70:	push   rbp
  407f71:	mov    rbp,rsp
  407f74:	push   r15
  407f76:	push   r14
  407f78:	push   r13
  407f7a:	push   r12
  407f7c:	push   rbx
  407f7d:	and    rsp,0xffffffffffffffe0
  407f81:	sub    rsp,0x60
  407f85:	mov    QWORD PTR [rsp+0x18],rdx
  407f8a:	mov    QWORD PTR [rsp+0x10],rsi
  407f8f:	mov    rbx,rdi
  407f92:	mov    rax,QWORD PTR [rdi+0xd8]
  407f99:	mov    r15,QWORD PTR [rax]
  407f9c:	vxorps xmm0,xmm0,xmm0
  407fa0:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  407fa6:	mov    rdi,QWORD PTR [rax+0x118]
  407fad:	vzeroupper 
  407fb0:	call   41be60 <__flatcc_fb_copy_path@@Base>
  407fb5:	lea    rdi,[rsp+0x20]
  407fba:	mov    edx,0x1
  407fbf:	mov    rsi,rax
  407fc2:	call   4196d0 <str_set_insert_item@@Base>
  407fc7:	test   r15,r15
  407fca:	jne    407ff1 <__flatcc_fb_gen_c_includes@@Base+0x81>
  407fcc:	jmp    4080aa <__flatcc_fb_gen_c_includes@@Base+0x13a>
  407fd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407fdb:	nop    DWORD PTR [rax+rax*1+0x0]
  407fe0:	mov    rdi,r13
  407fe3:	call   406040 <free@plt>
  407fe8:	test   r15,r15
  407feb:	je     4080aa <__flatcc_fb_gen_c_includes@@Base+0x13a>
  407ff1:	mov    rdi,QWORD PTR [r15+0x8]
  407ff5:	movsxd rsi,DWORD PTR [r15+0x10]
  407ff9:	mov    rax,QWORD PTR [rbx+0xe0]
  408000:	mov    rdx,QWORD PTR [rax+0x68]
  408004:	call   41c4f0 <__flatcc_fb_create_basename@@Base>
  408009:	test   rax,rax
  40800c:	je     4080cc <__flatcc_fb_gen_c_includes@@Base+0x15c>
  408012:	mov    r13,rax
  408015:	mov    r15,QWORD PTR [r15]
  408018:	mov    rdi,rax
  40801b:	call   41be60 <__flatcc_fb_copy_path@@Base>
  408020:	test   rax,rax
  408023:	je     4080cc <__flatcc_fb_gen_c_includes@@Base+0x15c>
  408029:	mov    r14,rax
  40802c:	mov    r12b,BYTE PTR [rax]
  40802f:	test   r12b,r12b
  408032:	je     40805b <__flatcc_fb_gen_c_includes@@Base+0xeb>
  408034:	call   406030 <__ctype_toupper_loc@plt>
  408039:	mov    rcx,r14
  40803c:	add    rcx,0x1
  408040:	mov    rdx,QWORD PTR [rax]
  408043:	movsx  rsi,r12b
  408047:	movzx  edx,BYTE PTR [rdx+rsi*4]
  40804b:	mov    BYTE PTR [rcx-0x1],dl
  40804e:	movzx  r12d,BYTE PTR [rcx]
  408052:	add    rcx,0x1
  408056:	test   r12b,r12b
  408059:	jne    408040 <__flatcc_fb_gen_c_includes@@Base+0xd0>
  40805b:	mov    edx,0x1
  408060:	lea    rdi,[rsp+0x20]
  408065:	mov    rsi,r14
  408068:	call   4196d0 <str_set_insert_item@@Base>
  40806d:	test   rax,rax
  408070:	je     408080 <__flatcc_fb_gen_c_includes@@Base+0x110>
  408072:	mov    rdi,r14
  408075:	call   406040 <free@plt>
  40807a:	jmp    407fe0 <__flatcc_fb_gen_c_includes@@Base+0x70>
  40807f:	nop
  408080:	mov    rdi,QWORD PTR [rbx+0xd0]
  408087:	xor    eax,eax
  408089:	lea    rsi,[rip+0x28928]        # 4309b8 <_IO_stdin_used@@Base+0x19b8>
  408090:	mov    rdx,r14
  408093:	mov    rcx,QWORD PTR [rsp+0x18]
  408098:	mov    r8,r13
  40809b:	mov    r9,QWORD PTR [rsp+0x10]
  4080a0:	call   406180 <fprintf@plt>
  4080a5:	jmp    407fe0 <__flatcc_fb_gen_c_includes@@Base+0x70>
  4080aa:	lea    rsi,[rip+0x4f]        # 408100 <__flatcc_fb_gen_c_includes@@Base+0x190>
  4080b1:	lea    rdi,[rsp+0x20]
  4080b6:	xor    edx,edx
  4080b8:	call   4192d0 <str_set_destroy@@Base>
  4080bd:	lea    rsp,[rbp-0x28]
  4080c1:	pop    rbx
  4080c2:	pop    r12
  4080c4:	pop    r13
  4080c6:	pop    r14
  4080c8:	pop    r15
  4080ca:	pop    rbp
  4080cb:	ret    
  4080cc:	mov    rax,QWORD PTR [rip+0x4af25]        # 452ff8 <stderr@GLIBC_2.2.5>
  4080d3:	mov    rcx,QWORD PTR [rax]
  4080d6:	lea    rdi,[rip+0x2872f]        # 43080c <_IO_stdin_used@@Base+0x180c>
  4080dd:	mov    esi,0x22
  4080e2:	mov    edx,0x1
  4080e7:	call   406220 <fwrite@plt>
  4080ec:	mov    edi,0x1
  4080f1:	call   406210 <exit@plt>
  4080f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408100:	mov    rdi,rsi
  408103:	jmp    406040 <free@plt>
  408108:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408110 <__flatcc_fb_copy_scope@@Base>:
  408110:	push   r15
  408112:	push   r14
  408114:	push   r12
  408116:	push   rbx
  408117:	push   rax
  408118:	mov    r14,rsi
  40811b:	mov    r15,rdi
  40811e:	movsxd r12,DWORD PTR [rdi+0x30]
  408122:	mov    rcx,QWORD PTR [rdi]
  408125:	mov    rax,r12
  408128:	test   rcx,rcx
  40812b:	je     40814a <__flatcc_fb_copy_scope@@Base+0x3a>
  40812d:	mov    rax,r12
  408130:	mov    rdx,QWORD PTR [rcx+0x8]
  408134:	mov    rsi,QWORD PTR [rcx]
  408137:	mov    rcx,QWORD PTR [rdx+0x8]
  40813b:	add    rax,rcx
  40813e:	add    rax,0x1
  408142:	mov    rcx,rsi
  408145:	test   rsi,rsi
  408148:	jne    408130 <__flatcc_fb_copy_scope@@Base+0x20>
  40814a:	cmp    rax,0x66
  40814e:	jb     40815c <__flatcc_fb_copy_scope@@Base+0x4c>
  408150:	mov    BYTE PTR [r14],0x0
  408154:	mov    r12d,0xffffffff
  40815a:	jmp    4081b4 <__flatcc_fb_copy_scope@@Base+0xa4>
  40815c:	mov    rsi,QWORD PTR [r15+0x28]
  408160:	mov    rdi,r14
  408163:	mov    rdx,r12
  408166:	call   4061a0 <memcpy@plt>
  40816b:	mov    rbx,QWORD PTR [r15]
  40816e:	test   rbx,rbx
  408171:	je     4081af <__flatcc_fb_copy_scope@@Base+0x9f>
  408173:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40817d:	nop    DWORD PTR [rax]
  408180:	mov    rax,QWORD PTR [rbx+0x8]
  408184:	mov    rsi,QWORD PTR [rax]
  408187:	mov    r15,QWORD PTR [rax+0x8]
  40818b:	lea    rdi,[r14+r12*1]
  40818f:	mov    rdx,r15
  408192:	call   4061a0 <memcpy@plt>
  408197:	lea    rax,[r15+r12*1]
  40819b:	add    r12,r15
  40819e:	add    r12,0x1
  4081a2:	mov    BYTE PTR [r14+rax*1],0x5f
  4081a7:	mov    rbx,QWORD PTR [rbx]
  4081aa:	test   rbx,rbx
  4081ad:	jne    408180 <__flatcc_fb_copy_scope@@Base+0x70>
  4081af:	mov    BYTE PTR [r14+r12*1],0x0
  4081b4:	mov    eax,r12d
  4081b7:	add    rsp,0x8
  4081bb:	pop    rbx
  4081bc:	pop    r12
  4081be:	pop    r14
  4081c0:	pop    r15
  4081c2:	ret    
  4081c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4081cd:	nop    DWORD PTR [rax]

00000000004081d0 <__flatcc_fb_scoped_symbol_name@@Base>:
  4081d0:	push   r15
  4081d2:	push   r14
  4081d4:	push   r13
  4081d6:	push   r12
  4081d8:	push   rbx
  4081d9:	mov    r14,rdx
  4081dc:	mov    r13,QWORD PTR [rsi+0x8]
  4081e0:	cmp    QWORD PTR [rdx+0xd0],rdi
  4081e7:	je     408294 <__flatcc_fb_scoped_symbol_name@@Base+0xc4>
  4081ed:	mov    r15,rdi
  4081f0:	movsxd r12,DWORD PTR [rdi+0x30]
  4081f4:	mov    rcx,QWORD PTR [rdi]
  4081f7:	mov    rax,r12
  4081fa:	test   rcx,rcx
  4081fd:	je     40822a <__flatcc_fb_scoped_symbol_name@@Base+0x5a>
  4081ff:	mov    rax,r12
  408202:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40820c:	nop    DWORD PTR [rax+0x0]
  408210:	mov    rdx,QWORD PTR [rcx+0x8]
  408214:	mov    rsi,QWORD PTR [rcx]
  408217:	mov    rcx,QWORD PTR [rdx+0x8]
  40821b:	add    rax,rcx
  40821e:	add    rax,0x1
  408222:	mov    rcx,rsi
  408225:	test   rsi,rsi
  408228:	jne    408210 <__flatcc_fb_scoped_symbol_name@@Base+0x40>
  40822a:	cmp    rax,0x66
  40822e:	jae    40831e <__flatcc_fb_scoped_symbol_name@@Base+0x14e>
  408234:	mov    rsi,QWORD PTR [r15+0x28]
  408238:	mov    rdi,r14
  40823b:	mov    rdx,r12
  40823e:	call   4061a0 <memcpy@plt>
  408243:	mov    rbx,QWORD PTR [r15]
  408246:	test   rbx,rbx
  408249:	je     40827f <__flatcc_fb_scoped_symbol_name@@Base+0xaf>
  40824b:	nop    DWORD PTR [rax+rax*1+0x0]
  408250:	mov    rax,QWORD PTR [rbx+0x8]
  408254:	mov    rsi,QWORD PTR [rax]
  408257:	mov    r15,QWORD PTR [rax+0x8]
  40825b:	lea    rdi,[r14+r12*1]
  40825f:	mov    rdx,r15
  408262:	call   4061a0 <memcpy@plt>
  408267:	lea    rax,[r15+r12*1]
  40826b:	add    r12,r15
  40826e:	add    r12,0x1
  408272:	mov    BYTE PTR [r14+rax*1],0x5f
  408277:	mov    rbx,QWORD PTR [rbx]
  40827a:	test   rbx,rbx
  40827d:	jne    408250 <__flatcc_fb_scoped_symbol_name@@Base+0x80>
  40827f:	mov    BYTE PTR [r14+r12*1],0x0
  408284:	mov    DWORD PTR [r14+0xd8],r12d
  40828b:	test   r12d,r12d
  40828e:	js     408336 <__flatcc_fb_scoped_symbol_name@@Base+0x166>
  408294:	mov    edx,DWORD PTR [r13+0x8]
  408298:	mov    DWORD PTR [r14+0xdc],edx
  40829f:	mov    eax,DWORD PTR [r14+0xd8]
  4082a6:	lea    ecx,[rax+rdx*1]
  4082a9:	mov    DWORD PTR [r14+0xe0],ecx
  4082b0:	cmp    ecx,0xcb
  4082b6:	jg     4082e0 <__flatcc_fb_scoped_symbol_name@@Base+0x110>
  4082b8:	movsxd rdi,eax
  4082bb:	add    rdi,r14
  4082be:	mov    rsi,QWORD PTR [r13+0x0]
  4082c2:	movsxd rdx,edx
  4082c5:	call   4061a0 <memcpy@plt>
  4082ca:	movsxd rax,DWORD PTR [r14+0xe0]
  4082d1:	mov    BYTE PTR [r14+rax*1],0x0
  4082d6:	pop    rbx
  4082d7:	pop    r12
  4082d9:	pop    r13
  4082db:	pop    r14
  4082dd:	pop    r15
  4082df:	ret    
  4082e0:	mov    rax,QWORD PTR [rip+0x4ad11]        # 452ff8 <stderr@GLIBC_2.2.5>
  4082e7:	mov    rdi,QWORD PTR [rax]
  4082ea:	mov    rcx,QWORD PTR [r13+0x0]
  4082ee:	lea    rsi,[rip+0x28705]        # 4309fa <_IO_stdin_used@@Base+0x19fa>
  4082f5:	xor    eax,eax
  4082f7:	call   406180 <fprintf@plt>
  4082fc:	mov    eax,DWORD PTR [r14+0xd8]
  408303:	mov    edx,0xcb
  408308:	sub    edx,eax
  40830a:	mov    DWORD PTR [r14+0xdc],edx
  408311:	mov    DWORD PTR [r14+0xe0],0xcb
  40831c:	jmp    4082b8 <__flatcc_fb_scoped_symbol_name@@Base+0xe8>
  40831e:	mov    BYTE PTR [r14],0x0
  408322:	lea    rax,[r14+0xd8]
  408329:	mov    DWORD PTR [r14+0xd8],0xffffffff
  408334:	jmp    40833d <__flatcc_fb_scoped_symbol_name@@Base+0x16d>
  408336:	lea    rax,[r14+0xd8]
  40833d:	mov    DWORD PTR [rax],0x0
  408343:	mov    rax,QWORD PTR [rip+0x4acae]        # 452ff8 <stderr@GLIBC_2.2.5>
  40834a:	mov    rcx,QWORD PTR [rax]
  40834d:	lea    rdi,[rip+0x28689]        # 4309dd <_IO_stdin_used@@Base+0x19dd>
  408354:	mov    esi,0x1c
  408359:	mov    edx,0x1
  40835e:	call   406220 <fwrite@plt>
  408363:	jmp    408294 <__flatcc_fb_scoped_symbol_name@@Base+0xc4>
  408368:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408370 <__flatcc_fb_codegen_common_c@@Base>:
  408370:	push   rbp
  408371:	push   r14
  408373:	push   rbx
  408374:	mov    rbx,rdi
  408377:	call   4060d0 <strlen@plt>
  40837c:	mov    r14,rax
  40837f:	add    r14,0xffffffffffffffff
  408383:	mov    rax,QWORD PTR [rbx+0xe0]
  40838a:	cmp    DWORD PTR [rax+0xb0],0x0
  408391:	je     408400 <__flatcc_fb_codegen_common_c@@Base+0x90>
  408393:	lea    rcx,[rip+0x28686]        # 430a20 <_IO_stdin_used@@Base+0x1a20>
  40839a:	mov    rdi,rbx
  40839d:	mov    rsi,rbx
  4083a0:	mov    rdx,r14
  4083a3:	call   407bf0 <__flatcc_fb_open_output_file@@Base>
  4083a8:	mov    ebp,0xffffffff
  4083ad:	test   eax,eax
  4083af:	jne    408467 <__flatcc_fb_codegen_common_c@@Base+0xf7>
  4083b5:	mov    rdi,rbx
  4083b8:	call   408740 <__flatcc_fb_gen_common_c_header@@Base>
  4083bd:	mov    ebp,eax
  4083bf:	mov    rax,QWORD PTR [rbx+0xe0]
  4083c6:	cmp    QWORD PTR [rax+0x98],0x0
  4083ce:	jne    4083f5 <__flatcc_fb_codegen_common_c@@Base+0x85>
  4083d0:	cmp    DWORD PTR [rax+0x80],0x0
  4083d7:	jne    4083f5 <__flatcc_fb_codegen_common_c@@Base+0x85>
  4083d9:	mov    rdi,QWORD PTR [rbx+0xd0]
  4083e0:	test   rdi,rdi
  4083e3:	je     4083f5 <__flatcc_fb_codegen_common_c@@Base+0x85>
  4083e5:	call   4060c0 <fclose@plt>
  4083ea:	mov    QWORD PTR [rbx+0xd0],0x0
  4083f5:	test   ebp,ebp
  4083f7:	jne    408467 <__flatcc_fb_codegen_common_c@@Base+0xf7>
  4083f9:	mov    rax,QWORD PTR [rbx+0xe0]
  408400:	cmp    DWORD PTR [rax+0xb4],0x0
  408407:	je     408465 <__flatcc_fb_codegen_common_c@@Base+0xf5>
  408409:	lea    rcx,[rip+0x28621]        # 430a31 <_IO_stdin_used@@Base+0x1a31>
  408410:	mov    rdi,rbx
  408413:	mov    rsi,rbx
  408416:	mov    rdx,r14
  408419:	call   407bf0 <__flatcc_fb_open_output_file@@Base>
  40841e:	mov    ebp,0xffffffff
  408423:	test   eax,eax
  408425:	jne    408467 <__flatcc_fb_codegen_common_c@@Base+0xf7>
  408427:	mov    rdi,rbx
  40842a:	call   40c000 <__flatcc_fb_gen_common_c_builder_header@@Base>
  40842f:	mov    rax,QWORD PTR [rbx+0xe0]
  408436:	cmp    QWORD PTR [rax+0x98],0x0
  40843e:	jne    408465 <__flatcc_fb_codegen_common_c@@Base+0xf5>
  408440:	cmp    DWORD PTR [rax+0x80],0x0
  408447:	jne    408465 <__flatcc_fb_codegen_common_c@@Base+0xf5>
  408449:	mov    rdi,QWORD PTR [rbx+0xd0]
  408450:	test   rdi,rdi
  408453:	je     408465 <__flatcc_fb_codegen_common_c@@Base+0xf5>
  408455:	call   4060c0 <fclose@plt>
  40845a:	mov    QWORD PTR [rbx+0xd0],0x0
  408465:	xor    ebp,ebp
  408467:	mov    eax,ebp
  408469:	pop    rbx
  40846a:	pop    r14
  40846c:	pop    rbp
  40846d:	ret    
  40846e:	xchg   ax,ax

0000000000408470 <__flatcc_fb_codegen_c@@Base>:
  408470:	push   r15
  408472:	push   r14
  408474:	push   rbx
  408475:	mov    r15,rdi
  408478:	mov    QWORD PTR [rdi+0xd8],rsi
  40847f:	mov    rdi,QWORD PTR [rsi+0x68]
  408483:	xor    esi,esi
  408485:	xor    edx,edx
  408487:	call   41ae40 <fb_scope_table_find@@Base>
  40848c:	mov    QWORD PTR [r15+0xe8],rax
  408493:	mov    rax,QWORD PTR [r15+0xd8]
  40849a:	mov    rbx,QWORD PTR [rax+0x110]
  4084a1:	mov    rdi,rbx
  4084a4:	call   4060d0 <strlen@plt>
  4084a9:	mov    r14,rax
  4084ac:	mov    rax,QWORD PTR [r15+0xe0]
  4084b3:	cmp    DWORD PTR [rax+0xb8],0x0
  4084ba:	je     40852d <__flatcc_fb_codegen_c@@Base+0xbd>
  4084bc:	lea    rcx,[rip+0x3f6c9]        # 447b8c <_IO_stdin_used@@Base+0x18b8c>
  4084c3:	mov    rdi,r15
  4084c6:	mov    rsi,rbx
  4084c9:	mov    rdx,r14
  4084cc:	call   407bf0 <__flatcc_fb_open_output_file@@Base>
  4084d1:	mov    ecx,eax
  4084d3:	mov    eax,0xffffffff
  4084d8:	test   ecx,ecx
  4084da:	jne    408734 <__flatcc_fb_codegen_c@@Base+0x2c4>
  4084e0:	mov    rdi,r15
  4084e3:	call   409320 <__flatcc_fb_gen_c_reader@@Base>
  4084e8:	test   eax,eax
  4084ea:	jne    408734 <__flatcc_fb_codegen_c@@Base+0x2c4>
  4084f0:	mov    rax,QWORD PTR [r15+0xe0]
  4084f7:	cmp    QWORD PTR [rax+0x98],0x0
  4084ff:	jne    40852d <__flatcc_fb_codegen_c@@Base+0xbd>
  408501:	cmp    DWORD PTR [rax+0x80],0x0
  408508:	jne    40852d <__flatcc_fb_codegen_c@@Base+0xbd>
  40850a:	mov    rdi,QWORD PTR [r15+0xd0]
  408511:	test   rdi,rdi
  408514:	je     40852d <__flatcc_fb_codegen_c@@Base+0xbd>
  408516:	call   4060c0 <fclose@plt>
  40851b:	mov    QWORD PTR [r15+0xd0],0x0
  408526:	mov    rax,QWORD PTR [r15+0xe0]
  40852d:	cmp    DWORD PTR [rax+0xbc],0x0
  408534:	je     4085b2 <__flatcc_fb_codegen_c@@Base+0x142>
  408536:	mov    rax,QWORD PTR [r15+0xd8]
  40853d:	mov    rsi,QWORD PTR [rax+0x110]
  408544:	lea    rcx,[rip+0x3f127]        # 447672 <_IO_stdin_used@@Base+0x18672>
  40854b:	mov    rdi,r15
  40854e:	mov    rdx,r14
  408551:	call   407bf0 <__flatcc_fb_open_output_file@@Base>
  408556:	mov    ecx,eax
  408558:	mov    eax,0xffffffff
  40855d:	test   ecx,ecx
  40855f:	jne    408734 <__flatcc_fb_codegen_c@@Base+0x2c4>
  408565:	mov    rdi,r15
  408568:	call   40c9f0 <__flatcc_fb_gen_c_builder@@Base>
  40856d:	test   eax,eax
  40856f:	jne    408734 <__flatcc_fb_codegen_c@@Base+0x2c4>
  408575:	mov    rax,QWORD PTR [r15+0xe0]
  40857c:	cmp    QWORD PTR [rax+0x98],0x0
  408584:	jne    4085b2 <__flatcc_fb_codegen_c@@Base+0x142>
  408586:	cmp    DWORD PTR [rax+0x80],0x0
  40858d:	jne    4085b2 <__flatcc_fb_codegen_c@@Base+0x142>
  40858f:	mov    rdi,QWORD PTR [r15+0xd0]
  408596:	test   rdi,rdi
  408599:	je     4085b2 <__flatcc_fb_codegen_c@@Base+0x142>
  40859b:	call   4060c0 <fclose@plt>
  4085a0:	mov    QWORD PTR [r15+0xd0],0x0
  4085ab:	mov    rax,QWORD PTR [r15+0xe0]
  4085b2:	cmp    DWORD PTR [rax+0xc0],0x0
  4085b9:	je     408637 <__flatcc_fb_codegen_c@@Base+0x1c7>
  4085bb:	mov    rax,QWORD PTR [r15+0xd8]
  4085c2:	mov    rsi,QWORD PTR [rax+0x110]
  4085c9:	lea    rcx,[rip+0x28473]        # 430a43 <_IO_stdin_used@@Base+0x1a43>
  4085d0:	mov    rdi,r15
  4085d3:	mov    rdx,r14
  4085d6:	call   407bf0 <__flatcc_fb_open_output_file@@Base>
  4085db:	mov    ecx,eax
  4085dd:	mov    eax,0xffffffff
  4085e2:	test   ecx,ecx
  4085e4:	jne    408734 <__flatcc_fb_codegen_c@@Base+0x2c4>
  4085ea:	mov    rdi,r15
  4085ed:	call   40f720 <__flatcc_fb_gen_c_verifier@@Base>
  4085f2:	test   eax,eax
  4085f4:	jne    408734 <__flatcc_fb_codegen_c@@Base+0x2c4>
  4085fa:	mov    rax,QWORD PTR [r15+0xe0]
  408601:	cmp    QWORD PTR [rax+0x98],0x0
  408609:	jne    408637 <__flatcc_fb_codegen_c@@Base+0x1c7>
  40860b:	cmp    DWORD PTR [rax+0x80],0x0
  408612:	jne    408637 <__flatcc_fb_codegen_c@@Base+0x1c7>
  408614:	mov    rdi,QWORD PTR [r15+0xd0]
  40861b:	test   rdi,rdi
  40861e:	je     408637 <__flatcc_fb_codegen_c@@Base+0x1c7>
  408620:	call   4060c0 <fclose@plt>
  408625:	mov    QWORD PTR [r15+0xd0],0x0
  408630:	mov    rax,QWORD PTR [r15+0xe0]
  408637:	cmp    DWORD PTR [rax+0xc4],0x0
  40863e:	je     4086bc <__flatcc_fb_codegen_c@@Base+0x24c>
  408640:	mov    rax,QWORD PTR [r15+0xd8]
  408647:	mov    rsi,QWORD PTR [rax+0x110]
  40864e:	lea    rcx,[rip+0x283fa]        # 430a4f <_IO_stdin_used@@Base+0x1a4f>
  408655:	mov    rdi,r15
  408658:	mov    rdx,r14
  40865b:	call   407bf0 <__flatcc_fb_open_output_file@@Base>
  408660:	mov    ecx,eax
  408662:	mov    eax,0xffffffff
  408667:	test   ecx,ecx
  408669:	jne    408734 <__flatcc_fb_codegen_c@@Base+0x2c4>
  40866f:	mov    rdi,r15
  408672:	call   4102f0 <__flatcc_fb_gen_c_json_parser@@Base>
  408677:	test   eax,eax
  408679:	jne    408734 <__flatcc_fb_codegen_c@@Base+0x2c4>
  40867f:	mov    rax,QWORD PTR [r15+0xe0]
  408686:	cmp    QWORD PTR [rax+0x98],0x0
  40868e:	jne    4086bc <__flatcc_fb_codegen_c@@Base+0x24c>
  408690:	cmp    DWORD PTR [rax+0x80],0x0
  408697:	jne    4086bc <__flatcc_fb_codegen_c@@Base+0x24c>
  408699:	mov    rdi,QWORD PTR [r15+0xd0]
  4086a0:	test   rdi,rdi
  4086a3:	je     4086bc <__flatcc_fb_codegen_c@@Base+0x24c>
  4086a5:	call   4060c0 <fclose@plt>
  4086aa:	mov    QWORD PTR [r15+0xd0],0x0
  4086b5:	mov    rax,QWORD PTR [r15+0xe0]
  4086bc:	cmp    DWORD PTR [rax+0xc8],0x0
  4086c3:	je     408732 <__flatcc_fb_codegen_c@@Base+0x2c2>
  4086c5:	mov    rax,QWORD PTR [r15+0xd8]
  4086cc:	mov    rsi,QWORD PTR [rax+0x110]
  4086d3:	lea    rcx,[rip+0x28384]        # 430a5e <_IO_stdin_used@@Base+0x1a5e>
  4086da:	mov    rdi,r15
  4086dd:	mov    rdx,r14
  4086e0:	call   407bf0 <__flatcc_fb_open_output_file@@Base>
  4086e5:	mov    ecx,eax
  4086e7:	mov    eax,0xffffffff
  4086ec:	test   ecx,ecx
  4086ee:	jne    408734 <__flatcc_fb_codegen_c@@Base+0x2c4>
  4086f0:	mov    rdi,r15
  4086f3:	call   4160c0 <__flatcc_fb_gen_c_json_printer@@Base>
  4086f8:	test   eax,eax
  4086fa:	jne    408734 <__flatcc_fb_codegen_c@@Base+0x2c4>
  4086fc:	mov    rax,QWORD PTR [r15+0xe0]
  408703:	cmp    QWORD PTR [rax+0x98],0x0
  40870b:	jne    408732 <__flatcc_fb_codegen_c@@Base+0x2c2>
  40870d:	cmp    DWORD PTR [rax+0x80],0x0
  408714:	jne    408732 <__flatcc_fb_codegen_c@@Base+0x2c2>
  408716:	mov    rdi,QWORD PTR [r15+0xd0]
  40871d:	test   rdi,rdi
  408720:	je     408732 <__flatcc_fb_codegen_c@@Base+0x2c2>
  408722:	call   4060c0 <fclose@plt>
  408727:	mov    QWORD PTR [r15+0xd0],0x0
  408732:	xor    eax,eax
  408734:	pop    rbx
  408735:	pop    r14
  408737:	pop    r15
  408739:	ret    
  40873a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408740 <__flatcc_fb_gen_common_c_header@@Base>:
  408740:	push   r14
  408742:	push   rbx
  408743:	push   rax
  408744:	mov    rbx,rdi
  408747:	lea    r14,[rdi+0x66]
  40874b:	mov    rdi,QWORD PTR [rdi+0xd0]
  408752:	lea    rsi,[rip+0x2835f]        # 430ab8 <_IO_stdin_used@@Base+0x1ab8>
  408759:	xor    eax,eax
  40875b:	mov    rdx,r14
  40875e:	mov    rcx,r14
  408761:	call   406180 <fprintf@plt>
  408766:	mov    rcx,QWORD PTR [rbx+0xd0]
  40876d:	lea    rdi,[rip+0x2837b]        # 430aef <_IO_stdin_used@@Base+0x1aef>
  408774:	mov    esi,0x51
  408779:	mov    edx,0x1
  40877e:	call   406220 <fwrite@plt>
  408783:	mov    rcx,QWORD PTR [rbx+0xd0]
  40878a:	lea    rdi,[rip+0x283b0]        # 430b41 <_IO_stdin_used@@Base+0x1b41>
  408791:	mov    esi,0x34
  408796:	mov    edx,0x1
  40879b:	call   406220 <fwrite@plt>
  4087a0:	mov    rax,QWORD PTR [rbx+0xe0]
  4087a7:	cmp    DWORD PTR [rax+0xa8],0x0
  4087ae:	je     408952 <__flatcc_fb_gen_common_c_header@@Base+0x212>
  4087b4:	cmp    DWORD PTR [rax+0xac],0x0
  4087bb:	je     4087da <__flatcc_fb_gen_common_c_header@@Base+0x9a>
  4087bd:	mov    rcx,QWORD PTR [rbx+0xd0]
  4087c4:	lea    rdi,[rip+0x2851a]        # 430ce5 <_IO_stdin_used@@Base+0x1ce5>
  4087cb:	mov    esi,0x24
  4087d0:	mov    edx,0x1
  4087d5:	call   406220 <fwrite@plt>
  4087da:	mov    rcx,QWORD PTR [rbx+0xd0]
  4087e1:	lea    rdi,[rip+0x28522]        # 430d0a <_IO_stdin_used@@Base+0x1d0a>
  4087e8:	mov    esi,0x29
  4087ed:	mov    edx,0x1
  4087f2:	call   406220 <fwrite@plt>
  4087f7:	lea    rsi,[rip+0x28536]        # 430d34 <_IO_stdin_used@@Base+0x1d34>
  4087fe:	mov    rdi,rbx
  408801:	call   406160 <strcmp@plt>
  408806:	test   eax,eax
  408808:	je     4088a2 <__flatcc_fb_gen_common_c_header@@Base+0x162>
  40880e:	mov    rdi,QWORD PTR [rbx+0xd0]
  408815:	sub    rsp,0x8
  408819:	lea    rsi,[rip+0x28521]        # 430d41 <_IO_stdin_used@@Base+0x1d41>
  408820:	xor    eax,eax
  408822:	mov    rdx,rbx
  408825:	mov    rcx,rbx
  408828:	mov    r8,rbx
  40882b:	mov    r9,rbx
  40882e:	push   rbx
  40882f:	call   406180 <fprintf@plt>
  408834:	add    rsp,0x10
  408838:	mov    rdi,QWORD PTR [rbx+0xd0]
  40883f:	lea    rsi,[rip+0x285ca]        # 430e10 <_IO_stdin_used@@Base+0x1e10>
  408846:	lea    rdx,[rip+0x284e5]        # 430d32 <_IO_stdin_used@@Base+0x1d32>
  40884d:	xor    eax,eax
  40884f:	mov    rcx,rbx
  408852:	mov    r8,rbx
  408855:	mov    r9,rbx
  408858:	call   406180 <fprintf@plt>
  40885d:	mov    rdi,QWORD PTR [rbx+0xd0]
  408864:	sub    rsp,0x8
  408868:	lea    rsi,[rip+0x286f8]        # 430f67 <_IO_stdin_used@@Base+0x1f67>
  40886f:	xor    eax,eax
  408871:	mov    rdx,rbx
  408874:	mov    rcx,rbx
  408877:	mov    r8,rbx
  40887a:	mov    r9,rbx
  40887d:	push   rbx
  40887e:	call   406180 <fprintf@plt>
  408883:	add    rsp,0x10
  408887:	mov    rdi,QWORD PTR [rbx+0xd0]
  40888e:	lea    rsi,[rip+0x28938]        # 4311cd <_IO_stdin_used@@Base+0x21cd>
  408895:	xor    eax,eax
  408897:	mov    rdx,r14
  40889a:	mov    rcx,r14
  40889d:	call   406180 <fprintf@plt>
  4088a2:	mov    rdi,QWORD PTR [rbx+0xd0]
  4088a9:	lea    rsi,[rip+0x2896d]        # 43121d <_IO_stdin_used@@Base+0x221d>
  4088b0:	xor    eax,eax
  4088b2:	mov    rdx,rbx
  4088b5:	mov    rcx,rbx
  4088b8:	call   406180 <fprintf@plt>
  4088bd:	mov    rdi,QWORD PTR [rbx+0xd0]
  4088c4:	sub    rsp,0x8
  4088c8:	lea    rsi,[rip+0x289db]        # 4312aa <_IO_stdin_used@@Base+0x22aa>
  4088cf:	mov    eax,0x0
  4088d4:	mov    rdx,rbx
  4088d7:	mov    rcx,rbx
  4088da:	mov    r8,rbx
  4088dd:	mov    r9,rbx
  4088e0:	push   rbx
  4088e1:	push   rbx
  4088e2:	push   rbx
  4088e3:	call   406180 <fprintf@plt>
  4088e8:	add    rsp,0x20
  4088ec:	mov    rdi,QWORD PTR [rbx+0xd0]
  4088f3:	lea    rsi,[rip+0x28b23]        # 43141d <_IO_stdin_used@@Base+0x241d>
  4088fa:	xor    eax,eax
  4088fc:	mov    rdx,rbx
  4088ff:	mov    rcx,rbx
  408902:	call   406180 <fprintf@plt>
  408907:	mov    rdi,QWORD PTR [rbx+0xd0]
  40890e:	lea    rsi,[rip+0x28b5d]        # 431472 <_IO_stdin_used@@Base+0x2472>
  408915:	xor    eax,eax
  408917:	mov    rdx,rbx
  40891a:	mov    rcx,rbx
  40891d:	mov    r8,rbx
  408920:	mov    r9,rbx
  408923:	call   406180 <fprintf@plt>
  408928:	mov    rcx,QWORD PTR [rbx+0xd0]
  40892f:	mov    rax,QWORD PTR [rbx+0xe0]
  408936:	cmp    DWORD PTR [rax+0x24],0x0
  40893a:	je     408988 <__flatcc_fb_gen_common_c_header@@Base+0x248>
  40893c:	lea    rsi,[rip+0x28c54]        # 431597 <_IO_stdin_used@@Base+0x2597>
  408943:	xor    eax,eax
  408945:	mov    rdi,rcx
  408948:	mov    rdx,rbx
  40894b:	call   406180 <fprintf@plt>
  408950:	jmp    408995 <__flatcc_fb_gen_common_c_header@@Base+0x255>
  408952:	mov    rcx,QWORD PTR [rbx+0xd0]
  408959:	lea    rdi,[rip+0x28216]        # 430b76 <_IO_stdin_used@@Base+0x1b76>
  408960:	mov    esi,0x87
  408965:	mov    edx,0x1
  40896a:	call   406220 <fwrite@plt>
  40896f:	mov    rax,QWORD PTR [rbx+0xe0]
  408976:	cmp    DWORD PTR [rax+0xac],0x0
  40897d:	jne    4087bd <__flatcc_fb_gen_common_c_header@@Base+0x7d>
  408983:	jmp    4087da <__flatcc_fb_gen_common_c_header@@Base+0x9a>
  408988:	mov    edi,0xa
  40898d:	mov    rsi,rcx
  408990:	call   406120 <fputc@plt>
  408995:	mov    rdi,QWORD PTR [rbx+0xd0]
  40899c:	lea    rsi,[rip+0x28c21]        # 4315c4 <_IO_stdin_used@@Base+0x25c4>
  4089a3:	xor    eax,eax
  4089a5:	mov    rdx,rbx
  4089a8:	mov    rcx,rbx
  4089ab:	call   406180 <fprintf@plt>
  4089b0:	mov    rdi,QWORD PTR [rbx+0xd0]
  4089b7:	sub    rsp,0x8
  4089bb:	lea    rsi,[rip+0x28cd5]        # 431697 <_IO_stdin_used@@Base+0x2697>
  4089c2:	xor    eax,eax
  4089c4:	mov    rdx,rbx
  4089c7:	mov    rcx,rbx
  4089ca:	mov    r8,rbx
  4089cd:	mov    r9,rbx
  4089d0:	push   rbx
  4089d1:	call   406180 <fprintf@plt>
  4089d6:	add    rsp,0x10
  4089da:	mov    rdi,QWORD PTR [rbx+0xd0]
  4089e1:	sub    rsp,0x8
  4089e5:	lea    rsi,[rip+0x28e55]        # 431841 <_IO_stdin_used@@Base+0x2841>
  4089ec:	xor    eax,eax
  4089ee:	mov    rdx,rbx
  4089f1:	mov    rcx,rbx
  4089f4:	mov    r8,rbx
  4089f7:	mov    r9,rbx
  4089fa:	push   rbx
  4089fb:	call   406180 <fprintf@plt>
  408a00:	add    rsp,0x10
  408a04:	mov    rdi,QWORD PTR [rbx+0xd0]
  408a0b:	lea    rsi,[rip+0x28ecf]        # 4318e1 <_IO_stdin_used@@Base+0x28e1>
  408a12:	xor    eax,eax
  408a14:	mov    rdx,rbx
  408a17:	mov    rcx,rbx
  408a1a:	mov    r8,rbx
  408a1d:	call   406180 <fprintf@plt>
  408a22:	mov    rdi,QWORD PTR [rbx+0xd0]
  408a29:	lea    rsi,[rip+0x28f8b]        # 4319bb <_IO_stdin_used@@Base+0x29bb>
  408a30:	xor    eax,eax
  408a32:	mov    rdx,rbx
  408a35:	mov    rcx,rbx
  408a38:	mov    r8,rbx
  408a3b:	call   406180 <fprintf@plt>
  408a40:	mov    rdi,QWORD PTR [rbx+0xd0]
  408a47:	lea    rsi,[rip+0x29047]        # 431a95 <_IO_stdin_used@@Base+0x2a95>
  408a4e:	xor    eax,eax
  408a50:	mov    rdx,rbx
  408a53:	mov    rcx,rbx
  408a56:	mov    r8,rbx
  408a59:	call   406180 <fprintf@plt>
  408a5e:	mov    rdi,QWORD PTR [rbx+0xd0]
  408a65:	sub    rsp,0x8
  408a69:	lea    rsi,[rip+0x290fd]        # 431b6d <_IO_stdin_used@@Base+0x2b6d>
  408a70:	xor    eax,eax
  408a72:	mov    rdx,rbx
  408a75:	mov    rcx,rbx
  408a78:	mov    r8,rbx
  408a7b:	mov    r9,rbx
  408a7e:	push   rbx
  408a7f:	call   406180 <fprintf@plt>
  408a84:	add    rsp,0x10
  408a88:	mov    rcx,QWORD PTR [rbx+0xd0]
  408a8f:	mov    rax,QWORD PTR [rbx+0xe0]
  408a96:	cmp    DWORD PTR [rax+0x24],0x0
  408a9a:	je     408ab2 <__flatcc_fb_gen_common_c_header@@Base+0x372>
  408a9c:	lea    rsi,[rip+0x291b2]        # 431c55 <_IO_stdin_used@@Base+0x2c55>
  408aa3:	xor    eax,eax
  408aa5:	mov    rdi,rcx
  408aa8:	mov    rdx,rbx
  408aab:	call   406180 <fprintf@plt>
  408ab0:	jmp    408abf <__flatcc_fb_gen_common_c_header@@Base+0x37f>
  408ab2:	mov    edi,0xa
  408ab7:	mov    rsi,rcx
  408aba:	call   406120 <fputc@plt>
  408abf:	mov    rdi,QWORD PTR [rbx+0xd0]
  408ac6:	lea    rsi,[rip+0x291b2]        # 431c7f <_IO_stdin_used@@Base+0x2c7f>
  408acd:	xor    eax,eax
  408acf:	mov    rdx,rbx
  408ad2:	mov    rcx,rbx
  408ad5:	mov    r8,rbx
  408ad8:	mov    r9,rbx
  408adb:	call   406180 <fprintf@plt>
  408ae0:	mov    rdi,QWORD PTR [rbx+0xd0]
  408ae7:	lea    rsi,[rip+0x29230]        # 431d1e <_IO_stdin_used@@Base+0x2d1e>
  408aee:	xor    eax,eax
  408af0:	mov    rdx,rbx
  408af3:	mov    rcx,rbx
  408af6:	call   406180 <fprintf@plt>
  408afb:	mov    rdi,QWORD PTR [rbx+0xd0]
  408b02:	lea    rsi,[rip+0x29257]        # 431d60 <_IO_stdin_used@@Base+0x2d60>
  408b09:	xor    eax,eax
  408b0b:	mov    rdx,rbx
  408b0e:	mov    rcx,rbx
  408b11:	mov    r8,rbx
  408b14:	call   406180 <fprintf@plt>
  408b19:	mov    rdi,QWORD PTR [rbx+0xd0]
  408b20:	lea    rsi,[rip+0x292c3]        # 431dea <_IO_stdin_used@@Base+0x2dea>
  408b27:	xor    eax,eax
  408b29:	mov    rdx,rbx
  408b2c:	mov    rcx,rbx
  408b2f:	call   406180 <fprintf@plt>
  408b34:	mov    rdi,QWORD PTR [rbx+0xd0]
  408b3b:	lea    rsi,[rip+0x2931a]        # 431e5c <_IO_stdin_used@@Base+0x2e5c>
  408b42:	xor    eax,eax
  408b44:	mov    rdx,rbx
  408b47:	mov    rcx,rbx
  408b4a:	mov    r8,rbx
  408b4d:	mov    r9,rbx
  408b50:	call   406180 <fprintf@plt>
  408b55:	mov    rdi,QWORD PTR [rbx+0xd0]
  408b5c:	lea    rsi,[rip+0x29419]        # 431f7c <_IO_stdin_used@@Base+0x2f7c>
  408b63:	xor    eax,eax
  408b65:	mov    rdx,rbx
  408b68:	mov    rcx,rbx
  408b6b:	call   406180 <fprintf@plt>
  408b70:	mov    rdi,QWORD PTR [rbx+0xd0]
  408b77:	lea    rsi,[rip+0x29475]        # 431ff3 <_IO_stdin_used@@Base+0x2ff3>
  408b7e:	xor    eax,eax
  408b80:	mov    rdx,rbx
  408b83:	mov    rcx,rbx
  408b86:	call   406180 <fprintf@plt>
  408b8b:	mov    rdi,QWORD PTR [rbx+0xd0]
  408b92:	lea    rsi,[rip+0x294da]        # 432073 <_IO_stdin_used@@Base+0x3073>
  408b99:	xor    eax,eax
  408b9b:	mov    rdx,rbx
  408b9e:	mov    rcx,rbx
  408ba1:	mov    r8,rbx
  408ba4:	mov    r9,rbx
  408ba7:	call   406180 <fprintf@plt>
  408bac:	mov    rdi,QWORD PTR [rbx+0xd0]
  408bb3:	lea    rsi,[rip+0x2951c]        # 4320d6 <_IO_stdin_used@@Base+0x30d6>
  408bba:	mov    eax,0x0
  408bbf:	mov    rdx,rbx
  408bc2:	mov    rcx,rbx
  408bc5:	mov    r8,rbx
  408bc8:	mov    r9,rbx
  408bcb:	push   rbx
  408bcc:	push   rbx
  408bcd:	push   rbx
  408bce:	push   rbx
  408bcf:	push   rbx
  408bd0:	push   rbx
  408bd1:	push   rbx
  408bd2:	push   rbx
  408bd3:	call   406180 <fprintf@plt>
  408bd8:	add    rsp,0x40
  408bdc:	mov    rdi,QWORD PTR [rbx+0xd0]
  408be3:	lea    rsi,[rip+0x2960d]        # 4321f7 <_IO_stdin_used@@Base+0x31f7>
  408bea:	xor    eax,eax
  408bec:	mov    rdx,rbx
  408bef:	call   406180 <fprintf@plt>
  408bf4:	mov    rdi,QWORD PTR [rbx+0xd0]
  408bfb:	lea    rsi,[rip+0x29617]        # 432219 <_IO_stdin_used@@Base+0x3219>
  408c02:	xor    eax,eax
  408c04:	mov    rdx,rbx
  408c07:	mov    rcx,rbx
  408c0a:	mov    r8,rbx
  408c0d:	mov    r9,rbx
  408c10:	call   406180 <fprintf@plt>
  408c15:	mov    rdi,QWORD PTR [rbx+0xd0]
  408c1c:	sub    rsp,0x8
  408c20:	lea    rsi,[rip+0x29679]        # 4322a0 <_IO_stdin_used@@Base+0x32a0>
  408c27:	mov    eax,0x0
  408c2c:	mov    rdx,rbx
  408c2f:	mov    rcx,rbx
  408c32:	mov    r8,rbx
  408c35:	mov    r9,rbx
  408c38:	push   rbx
  408c39:	push   rbx
  408c3a:	push   rbx
  408c3b:	push   rbx
  408c3c:	push   rbx
  408c3d:	push   rbx
  408c3e:	push   rbx
  408c3f:	push   rbx
  408c40:	push   rbx
  408c41:	push   rbx
  408c42:	push   rbx
  408c43:	push   rbx
  408c44:	push   rbx
  408c45:	call   406180 <fprintf@plt>
  408c4a:	add    rsp,0x70
  408c4e:	mov    rdi,QWORD PTR [rbx+0xd0]
  408c55:	lea    rsi,[rip+0x2aff6]        # 433c52 <_IO_stdin_used@@Base+0x4c52>
  408c5c:	mov    eax,0x0
  408c61:	mov    rdx,rbx
  408c64:	mov    rcx,rbx
  408c67:	mov    r8,rbx
  408c6a:	mov    r9,rbx
  408c6d:	push   rbx
  408c6e:	push   rbx
  408c6f:	push   rbx
  408c70:	push   rbx
  408c71:	call   406180 <fprintf@plt>
  408c76:	add    rsp,0x20
  408c7a:	mov    rdi,QWORD PTR [rbx+0xd0]
  408c81:	lea    rsi,[rip+0x2b08d]        # 433d15 <_IO_stdin_used@@Base+0x4d15>
  408c88:	xor    eax,eax
  408c8a:	mov    rdx,rbx
  408c8d:	mov    rcx,rbx
  408c90:	mov    r8,rbx
  408c93:	mov    r9,rbx
  408c96:	call   406180 <fprintf@plt>
  408c9b:	mov    rdi,QWORD PTR [rbx+0xd0]
  408ca2:	lea    rsi,[rip+0x2b105]        # 433dae <_IO_stdin_used@@Base+0x4dae>
  408ca9:	xor    eax,eax
  408cab:	mov    rdx,rbx
  408cae:	mov    rcx,rbx
  408cb1:	mov    r8,rbx
  408cb4:	mov    r9,rbx
  408cb7:	call   406180 <fprintf@plt>
  408cbc:	mov    rdi,QWORD PTR [rbx+0xd0]
  408cc3:	lea    rsi,[rip+0x2b15b]        # 433e25 <_IO_stdin_used@@Base+0x4e25>
  408cca:	xor    eax,eax
  408ccc:	mov    rdx,rbx
  408ccf:	call   406180 <fprintf@plt>
  408cd4:	mov    rdi,QWORD PTR [rbx+0xd0]
  408cdb:	lea    rsi,[rip+0x2b414]        # 4340f6 <_IO_stdin_used@@Base+0x50f6>
  408ce2:	xor    eax,eax
  408ce4:	mov    rdx,rbx
  408ce7:	call   406180 <fprintf@plt>
  408cec:	mov    rdi,QWORD PTR [rbx+0xd0]
  408cf3:	lea    rsi,[rip+0x2b68e]        # 434388 <_IO_stdin_used@@Base+0x5388>
  408cfa:	xor    eax,eax
  408cfc:	mov    rdx,rbx
  408cff:	call   406180 <fprintf@plt>
  408d04:	mov    rdi,QWORD PTR [rbx+0xd0]
  408d0b:	lea    rsi,[rip+0x2b6f7]        # 434409 <_IO_stdin_used@@Base+0x5409>
  408d12:	xor    eax,eax
  408d14:	mov    rdx,rbx
  408d17:	call   406180 <fprintf@plt>
  408d1c:	mov    rdi,QWORD PTR [rbx+0xd0]
  408d23:	lea    rsi,[rip+0x2b74d]        # 434477 <_IO_stdin_used@@Base+0x5477>
  408d2a:	xor    eax,eax
  408d2c:	mov    rdx,rbx
  408d2f:	call   406180 <fprintf@plt>
  408d34:	mov    rdi,QWORD PTR [rbx+0xd0]
  408d3b:	lea    rsi,[rip+0x2b919]        # 43465b <_IO_stdin_used@@Base+0x565b>
  408d42:	xor    eax,eax
  408d44:	mov    rdx,rbx
  408d47:	mov    rcx,rbx
  408d4a:	mov    r8,rbx
  408d4d:	mov    r9,rbx
  408d50:	call   406180 <fprintf@plt>
  408d55:	mov    rdi,QWORD PTR [rbx+0xd0]
  408d5c:	lea    rsi,[rip+0x2b9a1]        # 434704 <_IO_stdin_used@@Base+0x5704>
  408d63:	mov    eax,0x0
  408d68:	mov    rdx,rbx
  408d6b:	mov    rcx,rbx
  408d6e:	mov    r8,rbx
  408d71:	mov    r9,rbx
  408d74:	push   rbx
  408d75:	push   rbx
  408d76:	call   406180 <fprintf@plt>
  408d7b:	add    rsp,0x10
  408d7f:	mov    rdi,QWORD PTR [rbx+0xd0]
  408d86:	lea    rsi,[rip+0x2bb52]        # 4348df <_IO_stdin_used@@Base+0x58df>
  408d8d:	xor    eax,eax
  408d8f:	mov    rdx,rbx
  408d92:	mov    rcx,rbx
  408d95:	mov    r8,rbx
  408d98:	call   406180 <fprintf@plt>
  408d9d:	mov    rdi,QWORD PTR [rbx+0xd0]
  408da4:	sub    rsp,0x8
  408da8:	lea    rsi,[rip+0x2bd4a]        # 434af9 <_IO_stdin_used@@Base+0x5af9>
  408daf:	mov    eax,0x0
  408db4:	mov    rdx,rbx
  408db7:	mov    rcx,rbx
  408dba:	mov    r8,rbx
  408dbd:	mov    r9,rbx
  408dc0:	push   rbx
  408dc1:	push   rbx
  408dc2:	push   rbx
  408dc3:	push   rbx
  408dc4:	push   rbx
  408dc5:	push   rbx
  408dc6:	push   rbx
  408dc7:	call   406180 <fprintf@plt>
  408dcc:	add    rsp,0x40
  408dd0:	mov    rdi,QWORD PTR [rbx+0xd0]
  408dd7:	lea    rsi,[rip+0x2be72]        # 434c50 <_IO_stdin_used@@Base+0x5c50>
  408dde:	xor    eax,eax
  408de0:	mov    rdx,rbx
  408de3:	mov    rcx,rbx
  408de6:	call   406180 <fprintf@plt>
  408deb:	mov    rdi,QWORD PTR [rbx+0xd0]
  408df2:	lea    rsi,[rip+0x2bf26]        # 434d1f <_IO_stdin_used@@Base+0x5d1f>
  408df9:	xor    eax,eax
  408dfb:	mov    rdx,rbx
  408dfe:	mov    rcx,rbx
  408e01:	mov    r8,rbx
  408e04:	call   406180 <fprintf@plt>
  408e09:	mov    rdi,QWORD PTR [rbx+0xd0]
  408e10:	lea    rsi,[rip+0x2bfbd]        # 434dd4 <_IO_stdin_used@@Base+0x5dd4>
  408e17:	xor    eax,eax
  408e19:	mov    rdx,rbx
  408e1c:	mov    rcx,rbx
  408e1f:	mov    r8,rbx
  408e22:	call   406180 <fprintf@plt>
  408e27:	mov    rdi,QWORD PTR [rbx+0xd0]
  408e2e:	lea    rsi,[rip+0x2c154]        # 434f89 <_IO_stdin_used@@Base+0x5f89>
  408e35:	xor    eax,eax
  408e37:	mov    rdx,rbx
  408e3a:	call   406180 <fprintf@plt>
  408e3f:	mov    rdi,QWORD PTR [rbx+0xd0]
  408e46:	lea    rsi,[rip+0x2c1e6]        # 435033 <_IO_stdin_used@@Base+0x6033>
  408e4d:	xor    eax,eax
  408e4f:	mov    rdx,rbx
  408e52:	call   406180 <fprintf@plt>
  408e57:	mov    rdi,QWORD PTR [rbx+0xd0]
  408e5e:	lea    rsi,[rip+0x2c2fb]        # 435160 <_IO_stdin_used@@Base+0x6160>
  408e65:	xor    eax,eax
  408e67:	mov    rdx,rbx
  408e6a:	mov    rcx,rbx
  408e6d:	call   406180 <fprintf@plt>
  408e72:	mov    rdi,QWORD PTR [rbx+0xd0]
  408e79:	lea    rsi,[rip+0x2c430]        # 4352b0 <_IO_stdin_used@@Base+0x62b0>
  408e80:	xor    eax,eax
  408e82:	mov    rdx,rbx
  408e85:	mov    rcx,rbx
  408e88:	call   406180 <fprintf@plt>
  408e8d:	mov    rdi,QWORD PTR [rbx+0xd0]
  408e94:	sub    rsp,0x8
  408e98:	lea    rsi,[rip+0x2c4e5]        # 435384 <_IO_stdin_used@@Base+0x6384>
  408e9f:	mov    eax,0x0
  408ea4:	mov    rdx,rbx
  408ea7:	mov    rcx,rbx
  408eaa:	mov    r8,rbx
  408ead:	mov    r9,rbx
  408eb0:	push   rbx
  408eb1:	push   rbx
  408eb2:	push   rbx
  408eb3:	push   rbx
  408eb4:	push   rbx
  408eb5:	push   rbx
  408eb6:	push   rbx
  408eb7:	call   406180 <fprintf@plt>
  408ebc:	add    rsp,0x40
  408ec0:	mov    rdi,QWORD PTR [rbx+0xd0]
  408ec7:	sub    rsp,0x8
  408ecb:	lea    rsi,[rip+0x2c62d]        # 4354ff <_IO_stdin_used@@Base+0x64ff>
  408ed2:	mov    eax,0x0
  408ed7:	mov    rdx,rbx
  408eda:	mov    rcx,rbx
  408edd:	mov    r8,rbx
  408ee0:	mov    r9,rbx
  408ee3:	push   rbx
  408ee4:	push   rbx
  408ee5:	push   rbx
  408ee6:	push   rbx
  408ee7:	push   rbx
  408ee8:	push   rbx
  408ee9:	push   rbx
  408eea:	call   406180 <fprintf@plt>
  408eef:	add    rsp,0x40
  408ef3:	mov    rdi,QWORD PTR [rbx+0xd0]
  408efa:	sub    rsp,0x8
  408efe:	lea    rsi,[rip+0x2c77b]        # 435680 <_IO_stdin_used@@Base+0x6680>
  408f05:	mov    eax,0x0
  408f0a:	mov    rdx,rbx
  408f0d:	mov    rcx,rbx
  408f10:	mov    r8,rbx
  408f13:	mov    r9,rbx
  408f16:	push   rbx
  408f17:	push   rbx
  408f18:	push   rbx
  408f19:	call   406180 <fprintf@plt>
  408f1e:	add    rsp,0x20
  408f22:	mov    rdi,QWORD PTR [rbx+0xd0]
  408f29:	sub    rsp,0x8
  408f2d:	lea    rsi,[rip+0x2caa1]        # 4359d5 <_IO_stdin_used@@Base+0x69d5>
  408f34:	mov    eax,0x0
  408f39:	mov    rdx,rbx
  408f3c:	mov    rcx,rbx
  408f3f:	mov    r8,rbx
  408f42:	mov    r9,rbx
  408f45:	push   rbx
  408f46:	push   rbx
  408f47:	push   rbx
  408f48:	push   rbx
  408f49:	push   rbx
  408f4a:	push   rbx
  408f4b:	push   rbx
  408f4c:	call   406180 <fprintf@plt>
  408f51:	add    rsp,0x40
  408f55:	mov    rdi,QWORD PTR [rbx+0xd0]
  408f5c:	sub    rsp,0x8
  408f60:	lea    rsi,[rip+0x2cd8e]        # 435cf5 <_IO_stdin_used@@Base+0x6cf5>
  408f67:	mov    eax,0x0
  408f6c:	mov    rdx,rbx
  408f6f:	mov    rcx,rbx
  408f72:	mov    r8,rbx
  408f75:	mov    r9,rbx
  408f78:	push   rbx
  408f79:	push   rbx
  408f7a:	push   rbx
  408f7b:	push   rbx
  408f7c:	push   rbx
  408f7d:	push   rbx
  408f7e:	push   rbx
  408f7f:	push   rbx
  408f80:	push   rbx
  408f81:	call   406180 <fprintf@plt>
  408f86:	add    rsp,0x50
  408f8a:	mov    rdi,QWORD PTR [rbx+0xd0]
  408f91:	lea    rsi,[rip+0x2d426]        # 4363be <_IO_stdin_used@@Base+0x73be>
  408f98:	xor    eax,eax
  408f9a:	mov    rdx,rbx
  408f9d:	call   406180 <fprintf@plt>
  408fa2:	mov    rdi,QWORD PTR [rbx+0xd0]
  408fa9:	lea    rsi,[rip+0x2d65e]        # 43660e <_IO_stdin_used@@Base+0x760e>
  408fb0:	xor    eax,eax
  408fb2:	mov    rdx,rbx
  408fb5:	call   406180 <fprintf@plt>
  408fba:	mov    rax,QWORD PTR [rbx+0xe0]
  408fc1:	cmp    DWORD PTR [rax+0xa8],0x0
  408fc8:	je     408fd4 <__flatcc_fb_gen_common_c_header@@Base+0x894>
  408fca:	mov    rdi,rbx
  408fcd:	call   40bed0 <__flatcc_gen_sort@@Base>
  408fd2:	jmp    408ff1 <__flatcc_fb_gen_common_c_header@@Base+0x8b1>
  408fd4:	mov    rcx,QWORD PTR [rbx+0xd0]
  408fdb:	lea    rdi,[rip+0x2946d]        # 43244f <_IO_stdin_used@@Base+0x344f>
  408fe2:	mov    esi,0x14
  408fe7:	mov    edx,0x1
  408fec:	call   406220 <fwrite@plt>
  408ff1:	mov    rdi,QWORD PTR [rbx+0xd0]
  408ff8:	sub    rsp,0x8
  408ffc:	lea    rsi,[rip+0x29461]        # 432464 <_IO_stdin_used@@Base+0x3464>
  409003:	xor    eax,eax
  409005:	mov    rdx,rbx
  409008:	mov    rcx,rbx
  40900b:	mov    r8,rbx
  40900e:	mov    r9,rbx
  409011:	push   rbx
  409012:	call   406180 <fprintf@plt>
  409017:	add    rsp,0x10
  40901b:	mov    rcx,QWORD PTR [rbx+0xd0]
  409022:	mov    rax,QWORD PTR [rbx+0xe0]
  409029:	cmp    DWORD PTR [rax+0xa8],0x0
  409030:	je     409048 <__flatcc_fb_gen_common_c_header@@Base+0x908>
  409032:	lea    rsi,[rip+0x2950c]        # 432545 <_IO_stdin_used@@Base+0x3545>
  409039:	xor    eax,eax
  40903b:	mov    rdi,rcx
  40903e:	mov    rdx,rbx
  409041:	call   406180 <fprintf@plt>
  409046:	jmp    409055 <__flatcc_fb_gen_common_c_header@@Base+0x915>
  409048:	mov    edi,0xa
  40904d:	mov    rsi,rcx
  409050:	call   406120 <fputc@plt>
  409055:	mov    rsi,QWORD PTR [rbx+0xd0]
  40905c:	mov    edi,0xa
  409061:	call   406120 <fputc@plt>
  409066:	mov    rdi,QWORD PTR [rbx+0xd0]
  40906d:	lea    rsi,[rip+0x294f1]        # 432565 <_IO_stdin_used@@Base+0x3565>
  409074:	xor    eax,eax
  409076:	mov    rdx,rbx
  409079:	mov    rcx,rbx
  40907c:	mov    r8,rbx
  40907f:	call   406180 <fprintf@plt>
  409084:	mov    rdi,QWORD PTR [rbx+0xd0]
  40908b:	lea    rsi,[rip+0x29553]        # 4325e5 <_IO_stdin_used@@Base+0x35e5>
  409092:	mov    eax,0x0
  409097:	mov    rdx,rbx
  40909a:	mov    rcx,rbx
  40909d:	mov    r8,rbx
  4090a0:	mov    r9,rbx
  4090a3:	push   rbx
  4090a4:	push   rbx
  4090a5:	push   rbx
  4090a6:	push   rbx
  4090a7:	push   rbx
  4090a8:	push   rbx
  4090a9:	push   rbx
  4090aa:	push   rbx
  4090ab:	push   rbx
  4090ac:	push   rbx
  4090ad:	push   rbx
  4090ae:	push   rbx
  4090af:	push   rbx
  4090b0:	push   rbx
  4090b1:	push   rbx
  4090b2:	push   rbx
  4090b3:	push   rbx
  4090b4:	push   rbx
  4090b5:	push   rbx
  4090b6:	push   rbx
  4090b7:	push   rbx
  4090b8:	push   rbx
  4090b9:	call   406180 <fprintf@plt>
  4090be:	add    rsp,0xb0
  4090c5:	mov    rdi,QWORD PTR [rbx+0xd0]
  4090cc:	lea    rsi,[rip+0x29725]        # 4327f8 <_IO_stdin_used@@Base+0x37f8>
  4090d3:	mov    eax,0x0
  4090d8:	mov    rdx,rbx
  4090db:	mov    rcx,rbx
  4090de:	mov    r8,rbx
  4090e1:	mov    r9,rbx
  4090e4:	push   rbx
  4090e5:	push   rbx
  4090e6:	push   rbx
  4090e7:	push   rbx
  4090e8:	push   rbx
  4090e9:	push   rbx
  4090ea:	push   rbx
  4090eb:	push   rbx
  4090ec:	call   406180 <fprintf@plt>
  4090f1:	add    rsp,0x40
  4090f5:	mov    rdi,QWORD PTR [rbx+0xd0]
  4090fc:	lea    rsi,[rip+0x2983f]        # 432942 <_IO_stdin_used@@Base+0x3942>
  409103:	mov    eax,0x0
  409108:	mov    rdx,rbx
  40910b:	mov    rcx,rbx
  40910e:	mov    r8,rbx
  409111:	mov    r9,rbx
  409114:	push   rbx
  409115:	push   rbx
  409116:	push   rbx
  409117:	push   rbx
  409118:	push   rbx
  409119:	push   rbx
  40911a:	push   rbx
  40911b:	push   rbx
  40911c:	push   rbx
  40911d:	push   rbx
  40911e:	push   rbx
  40911f:	push   rbx
  409120:	push   rbx
  409121:	push   rbx
  409122:	push   rbx
  409123:	push   rbx
  409124:	push   rbx
  409125:	push   rbx
  409126:	push   rbx
  409127:	push   rbx
  409128:	push   rbx
  409129:	push   rbx
  40912a:	push   rbx
  40912b:	push   rbx
  40912c:	push   rbx
  40912d:	push   rbx
  40912e:	push   rbx
  40912f:	push   rbx
  409130:	push   rbx
  409131:	push   rbx
  409132:	push   rbx
  409133:	push   rbx
  409134:	push   rbx
  409135:	push   rbx
  409136:	push   rbx
  409137:	push   rbx
  409138:	push   rbx
  409139:	push   rbx
  40913a:	push   rbx
  40913b:	push   rbx
  40913c:	push   rbx
  40913d:	push   rbx
  40913e:	push   rbx
  40913f:	push   rbx
  409140:	push   rbx
  409141:	push   rbx
  409142:	push   rbx
  409143:	push   rbx
  409144:	push   rbx
  409145:	push   rbx
  409146:	push   rbx
  409147:	push   rbx
  409148:	push   rbx
  409149:	push   rbx
  40914a:	push   rbx
  40914b:	push   rbx
  40914c:	call   406180 <fprintf@plt>
  409151:	add    rsp,0x1c0
  409158:	mov    rax,QWORD PTR [rbx+0xe0]
  40915f:	cmp    DWORD PTR [rax+0xa8],0x0
  409166:	je     409180 <__flatcc_fb_gen_common_c_header@@Base+0xa40>
  409168:	mov    rdi,QWORD PTR [rbx+0xd0]
  40916f:	lea    rsi,[rip+0x29e85]        # 432ffb <_IO_stdin_used@@Base+0x3ffb>
  409176:	xor    eax,eax
  409178:	mov    rdx,rbx
  40917b:	call   406180 <fprintf@plt>
  409180:	mov    rdi,QWORD PTR [rbx+0xd0]
  409187:	lea    rsi,[rip+0x29e87]        # 433015 <_IO_stdin_used@@Base+0x4015>
  40918e:	xor    eax,eax
  409190:	mov    rdx,rbx
  409193:	mov    rcx,rbx
  409196:	call   406180 <fprintf@plt>
  40919b:	mov    rcx,QWORD PTR [rbx+0xd0]
  4091a2:	mov    rax,QWORD PTR [rbx+0xe0]
  4091a9:	cmp    DWORD PTR [rax+0x24],0x0
  4091ad:	je     4091c5 <__flatcc_fb_gen_common_c_header@@Base+0xa85>
  4091af:	lea    rsi,[rip+0x283e1]        # 431597 <_IO_stdin_used@@Base+0x2597>
  4091b6:	xor    eax,eax
  4091b8:	mov    rdi,rcx
  4091bb:	mov    rdx,rbx
  4091be:	call   406180 <fprintf@plt>
  4091c3:	jmp    4091d2 <__flatcc_fb_gen_common_c_header@@Base+0xa92>
  4091c5:	mov    edi,0xa
  4091ca:	mov    rsi,rcx
  4091cd:	call   406120 <fputc@plt>
  4091d2:	mov    rdi,QWORD PTR [rbx+0xd0]
  4091d9:	lea    rsi,[rip+0x29ece]        # 4330ae <_IO_stdin_used@@Base+0x40ae>
  4091e0:	xor    eax,eax
  4091e2:	mov    rdx,rbx
  4091e5:	call   406180 <fprintf@plt>
  4091ea:	mov    rdi,QWORD PTR [rbx+0xd0]
  4091f1:	lea    rsi,[rip+0x29f35]        # 43312d <_IO_stdin_used@@Base+0x412d>
  4091f8:	mov    eax,0x0
  4091fd:	mov    rdx,rbx
  409200:	mov    rcx,rbx
  409203:	mov    r8,rbx
  409206:	mov    r9,rbx
  409209:	push   rbx
  40920a:	push   rbx
  40920b:	push   rbx
  40920c:	push   rbx
  40920d:	push   rbx
  40920e:	push   rbx
  40920f:	push   rbx
  409210:	push   rbx
  409211:	push   rbx
  409212:	push   rbx
  409213:	call   406180 <fprintf@plt>
  409218:	add    rsp,0x50
  40921c:	mov    rdi,QWORD PTR [rbx+0xd0]
  409223:	lea    rsi,[rip+0x2a24c]        # 433476 <_IO_stdin_used@@Base+0x4476>
  40922a:	xor    eax,eax
  40922c:	mov    rdx,rbx
  40922f:	mov    rcx,rbx
  409232:	mov    r8,rbx
  409235:	call   406180 <fprintf@plt>
  40923a:	mov    rdi,QWORD PTR [rbx+0xd0]
  409241:	lea    rsi,[rip+0x2a2e5]        # 43352d <_IO_stdin_used@@Base+0x452d>
  409248:	mov    eax,0x0
  40924d:	mov    rdx,rbx
  409250:	mov    rcx,rbx
  409253:	mov    r8,rbx
  409256:	mov    r9,rbx
  409259:	push   rbx
  40925a:	push   rbx
  40925b:	call   406180 <fprintf@plt>
  409260:	add    rsp,0x10
  409264:	mov    rdi,QWORD PTR [rbx+0xd0]
  40926b:	lea    rsi,[rip+0x2a482]        # 4336f4 <_IO_stdin_used@@Base+0x46f4>
  409272:	xor    eax,eax
  409274:	mov    rdx,rbx
  409277:	mov    rcx,rbx
  40927a:	mov    r8,rbx
  40927d:	mov    r9,rbx
  409280:	call   406180 <fprintf@plt>
  409285:	mov    rdi,QWORD PTR [rbx+0xd0]
  40928c:	lea    rsi,[rip+0x2a6dd]        # 433970 <_IO_stdin_used@@Base+0x4970>
  409293:	mov    eax,0x0
  409298:	mov    rdx,rbx
  40929b:	mov    rcx,rbx
  40929e:	mov    r8,rbx
  4092a1:	mov    r9,rbx
  4092a4:	push   rbx
  4092a5:	push   rbx
  4092a6:	push   rbx
  4092a7:	push   rbx
  4092a8:	push   rbx
  4092a9:	push   rbx
  4092aa:	call   406180 <fprintf@plt>
  4092af:	add    rsp,0x30
  4092b3:	mov    rsi,QWORD PTR [rbx+0xd0]
  4092ba:	mov    edi,0xa
  4092bf:	call   406120 <fputc@plt>
  4092c4:	mov    rax,QWORD PTR [rbx+0xe0]
  4092cb:	cmp    DWORD PTR [rax+0xac],0x0
  4092d2:	je     4092f1 <__flatcc_fb_gen_common_c_header@@Base+0xbb1>
  4092d4:	mov    rcx,QWORD PTR [rbx+0xd0]
  4092db:	lea    rdi,[rip+0x2d7ed]        # 436acf <_IO_stdin_used@@Base+0x7acf>
  4092e2:	mov    esi,0x24
  4092e7:	mov    edx,0x1
  4092ec:	call   406220 <fwrite@plt>
  4092f1:	mov    rdi,QWORD PTR [rbx+0xd0]
  4092f8:	lea    rsi,[rip+0x278ff]        # 430bfe <_IO_stdin_used@@Base+0x1bfe>
  4092ff:	xor    eax,eax
  409301:	mov    rdx,r14
  409304:	call   406180 <fprintf@plt>
  409309:	xor    eax,eax
  40930b:	add    rsp,0x8
  40930f:	pop    rbx
  409310:	pop    r14
  409312:	ret    
  409313:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40931d:	nop    DWORD PTR [rax]

0000000000409320 <__flatcc_fb_gen_c_reader@@Base>:
  409320:	push   rbp
  409321:	mov    rbp,rsp
  409324:	push   r15
  409326:	push   r14
  409328:	push   r13
  40932a:	push   r12
  40932c:	push   rbx
  40932d:	and    rsp,0xffffffffffffffe0
  409331:	sub    rsp,0x4c0
  409338:	mov    r12,rdi
  40933b:	lea    r14,[rdi+0x66]
  40933f:	mov    rax,QWORD PTR [rdi+0xe0]
  409346:	mov    rdi,QWORD PTR [rdi+0xd0]
  40934d:	mov    rcx,QWORD PTR [r12+0xd8]
  409355:	mov    rdx,QWORD PTR [rcx+0x118]
  40935c:	mov    ebx,DWORD PTR [rax+0xa4]
  409362:	lea    rsi,[rip+0x2d78b]        # 436af4 <_IO_stdin_used@@Base+0x7af4>
  409369:	xor    eax,eax
  40936b:	mov    rcx,rdx
  40936e:	call   406180 <fprintf@plt>
  409373:	mov    rcx,QWORD PTR [r12+0xd0]
  40937b:	lea    rdi,[rip+0x2776d]        # 430aef <_IO_stdin_used@@Base+0x1aef>
  409382:	mov    esi,0x51
  409387:	mov    edx,0x1
  40938c:	call   406220 <fwrite@plt>
  409391:	mov    rcx,QWORD PTR [r12+0xd0]
  409399:	test   ebx,ebx
  40939b:	je     4093fb <__flatcc_fb_gen_c_reader@@Base+0xdb>
  40939d:	lea    rdi,[rip+0x2d779]        # 436b1d <_IO_stdin_used@@Base+0x7b1d>
  4093a4:	mov    esi,0x1bb
  4093a9:	mov    edx,0x1
  4093ae:	call   406220 <fwrite@plt>
  4093b3:	mov    rdi,QWORD PTR [r12+0xd0]
  4093bb:	lea    rsi,[rip+0x2d917]        # 436cd9 <_IO_stdin_used@@Base+0x7cd9>
  4093c2:	xor    eax,eax
  4093c4:	mov    rdx,r14
  4093c7:	mov    rcx,r12
  4093ca:	call   406180 <fprintf@plt>
  4093cf:	lea    rsi,[rip+0x3e7b6]        # 447b8c <_IO_stdin_used@@Base+0x18b8c>
  4093d6:	lea    rdx,[rip+0x2d93c]        # 436d19 <_IO_stdin_used@@Base+0x7d19>
  4093dd:	mov    rdi,r12
  4093e0:	call   407f70 <__flatcc_fb_gen_c_includes@@Base>
  4093e5:	mov    rcx,QWORD PTR [r12+0xd0]
  4093ed:	lea    rdi,[rip+0x2d92f]        # 436d23 <_IO_stdin_used@@Base+0x7d23>
  4093f4:	mov    esi,0x27
  4093f9:	jmp    40945a <__flatcc_fb_gen_c_reader@@Base+0x13a>
  4093fb:	lea    rsi,[rip+0x2d8d7]        # 436cd9 <_IO_stdin_used@@Base+0x7cd9>
  409402:	xor    eax,eax
  409404:	mov    rdi,rcx
  409407:	mov    rdx,r14
  40940a:	mov    rcx,r12
  40940d:	call   406180 <fprintf@plt>
  409412:	lea    rsi,[rip+0x3e773]        # 447b8c <_IO_stdin_used@@Base+0x18b8c>
  409419:	lea    rdx,[rip+0x2d8f9]        # 436d19 <_IO_stdin_used@@Base+0x7d19>
  409420:	mov    rdi,r12
  409423:	call   407f70 <__flatcc_fb_gen_c_includes@@Base>
  409428:	mov    rcx,QWORD PTR [r12+0xd0]
  409430:	lea    rdi,[rip+0x2d8ec]        # 436d23 <_IO_stdin_used@@Base+0x7d23>
  409437:	mov    esi,0x27
  40943c:	mov    edx,0x1
  409441:	call   406220 <fwrite@plt>
  409446:	mov    rcx,QWORD PTR [r12+0xd0]
  40944e:	lea    rdi,[rip+0x2d8f6]        # 436d4b <_IO_stdin_used@@Base+0x7d4b>
  409455:	mov    esi,0x3a
  40945a:	mov    edx,0x1
  40945f:	call   406220 <fwrite@plt>
  409464:	lea    r13,[r12+0xd0]
  40946c:	mov    rax,QWORD PTR [r12+0xe0]
  409474:	cmp    DWORD PTR [rax+0xac],0x0
  40947b:	je     409497 <__flatcc_fb_gen_c_reader@@Base+0x177>
  40947d:	mov    rcx,QWORD PTR [r13+0x0]
  409481:	lea    rdi,[rip+0x2785d]        # 430ce5 <_IO_stdin_used@@Base+0x1ce5>
  409488:	mov    esi,0x24
  40948d:	mov    edx,0x1
  409492:	call   406220 <fwrite@plt>
  409497:	mov    rdi,QWORD PTR [r12+0xd0]
  40949f:	mov    rax,QWORD PTR [r12+0xd8]
  4094a7:	movzx  ecx,WORD PTR [rax+0x20]
  4094ab:	cmp    ecx,0x2
  4094ae:	jne    4094ce <__flatcc_fb_gen_c_reader@@Base+0x1ae>
  4094b0:	mov    r8d,DWORD PTR [rax+0x18]
  4094b4:	mov    r9,QWORD PTR [rax+0x10]
  4094b8:	lea    rsi,[rip+0x2d8c7]        # 436d86 <_IO_stdin_used@@Base+0x7d86>
  4094bf:	xor    eax,eax
  4094c1:	mov    rdx,r12
  4094c4:	mov    rcx,r12
  4094c7:	call   406180 <fprintf@plt>
  4094cc:	jmp    4094e2 <__flatcc_fb_gen_c_reader@@Base+0x1c2>
  4094ce:	lea    rsi,[rip+0x2d8e2]        # 436db7 <_IO_stdin_used@@Base+0x7db7>
  4094d5:	xor    eax,eax
  4094d7:	mov    rdx,r12
  4094da:	mov    rcx,r12
  4094dd:	call   406180 <fprintf@plt>
  4094e2:	mov    rdi,QWORD PTR [r12+0xd0]
  4094ea:	mov    rax,QWORD PTR [r12+0xd8]
  4094f2:	movzx  ecx,WORD PTR [rax+0x38]
  4094f6:	cmp    ecx,0x2
  4094f9:	jne    409519 <__flatcc_fb_gen_c_reader@@Base+0x1f9>
  4094fb:	mov    r8d,DWORD PTR [rax+0x30]
  4094ff:	mov    r9,QWORD PTR [rax+0x28]
  409503:	lea    rsi,[rip+0x2d8e1]        # 436deb <_IO_stdin_used@@Base+0x7deb>
  40950a:	xor    eax,eax
  40950c:	mov    rdx,r12
  40950f:	mov    rcx,r12
  409512:	call   406180 <fprintf@plt>
  409517:	jmp    409539 <__flatcc_fb_gen_c_reader@@Base+0x219>
  409519:	mov    rax,QWORD PTR [r12+0xe0]
  409521:	mov    r8,QWORD PTR [rax+0x78]
  409525:	lea    rsi,[rip+0x2d8ef]        # 436e1b <_IO_stdin_used@@Base+0x7e1b>
  40952c:	xor    eax,eax
  40952e:	mov    rdx,r12
  409531:	mov    rcx,r12
  409534:	call   406180 <fprintf@plt>
  409539:	mov    rsi,QWORD PTR [r12+0xd0]
  409541:	mov    edi,0xa
  409546:	call   406120 <fputc@plt>
  40954b:	mov    rax,QWORD PTR [r12+0xd8]
  409553:	mov    rbx,QWORD PTR [rax+0x48]
  409557:	test   rbx,rbx
  40955a:	je     409577 <__flatcc_fb_gen_c_reader@@Base+0x257>
  40955c:	nop    DWORD PTR [rax+0x0]
  409560:	mov    rdi,r12
  409563:	mov    rsi,rbx
  409566:	call   40b570 <__flatcc_fb_gen_c_reader@@Base+0x2250>
  40956b:	mov    rbx,QWORD PTR [rbx+0xc0]
  409572:	test   rbx,rbx
  409575:	jne    409560 <__flatcc_fb_gen_c_reader@@Base+0x240>
  409577:	mov    rsi,QWORD PTR [r12+0xd0]
  40957f:	mov    edi,0xa
  409584:	call   406120 <fputc@plt>
  409589:	mov    rax,QWORD PTR [r12+0xd8]
  409591:	mov    rbx,QWORD PTR [rax+0x40]
  409595:	test   rbx,rbx
  409598:	mov    QWORD PTR [rsp],r12
  40959c:	je     40980b <__flatcc_fb_gen_c_reader@@Base+0x4eb>
  4095a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4095ac:	nop    DWORD PTR [rax+0x0]
  4095b0:	cmp    WORD PTR [rbx+0x10],0x0
  4095b5:	jne    4095c2 <__flatcc_fb_gen_c_reader@@Base+0x2a2>
  4095b7:	mov    rdi,r12
  4095ba:	mov    rsi,rbx
  4095bd:	call   40b570 <__flatcc_fb_gen_c_reader@@Base+0x2250>
  4095c2:	mov    rbx,QWORD PTR [rbx]
  4095c5:	test   rbx,rbx
  4095c8:	jne    4095b0 <__flatcc_fb_gen_c_reader@@Base+0x290>
  4095ca:	mov    rax,QWORD PTR [r12+0xd8]
  4095d2:	mov    rbx,QWORD PTR [rax+0x40]
  4095d6:	test   rbx,rbx
  4095d9:	je     40980b <__flatcc_fb_gen_c_reader@@Base+0x4eb>
  4095df:	nop
  4095e0:	movzx  eax,WORD PTR [rbx+0x10]
  4095e4:	cmp    eax,0x1
  4095e7:	ja     4097ff <__flatcc_fb_gen_c_reader@@Base+0x4df>
  4095ed:	vxorps xmm0,xmm0,xmm0
  4095f1:	vmovaps YMMWORD PTR [rsp+0x300],ymm0
  4095fa:	vmovaps YMMWORD PTR [rsp+0x2e0],ymm0
  409603:	vmovaps YMMWORD PTR [rsp+0x2c0],ymm0
  40960c:	vmovaps YMMWORD PTR [rsp+0x2a0],ymm0
  409615:	vmovaps YMMWORD PTR [rsp+0x280],ymm0
  40961e:	vmovaps YMMWORD PTR [rsp+0x260],ymm0
  409627:	vmovaps YMMWORD PTR [rsp+0x240],ymm0
  409630:	mov    QWORD PTR [rsp+0x320],0x0
  40963c:	mov    rdi,QWORD PTR [rbx+0x18]
  409640:	mov    rsi,rbx
  409643:	lea    r15,[rsp+0x240]
  40964b:	mov    rdx,r15
  40964e:	vzeroupper 
  409651:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  409656:	mov    r12d,DWORD PTR [rbx+0xa0]
  40965d:	mov    r14,r12
  409660:	shr    r14,0x1d
  409664:	mov    rax,QWORD PTR [rsp]
  409668:	mov    rdi,QWORD PTR [rax+0xd0]
  40966f:	xor    eax,eax
  409671:	lea    rsi,[rip+0x2d995]        # 43700d <_IO_stdin_used@@Base+0x800d>
  409678:	mov    rdx,r15
  40967b:	mov    rcx,r15
  40967e:	mov    r8,QWORD PTR [rsp]
  409682:	call   406180 <fprintf@plt>
  409687:	mov    rax,QWORD PTR [rsp]
  40968b:	mov    rdi,QWORD PTR [rax+0xd0]
  409692:	xor    eax,eax
  409694:	lea    rsi,[rip+0x2d9b3]        # 43704e <_IO_stdin_used@@Base+0x804e>
  40969b:	mov    rdx,r15
  40969e:	mov    rcx,QWORD PTR [rsp]
  4096a2:	mov    r8,r12
  4096a5:	call   406180 <fprintf@plt>
  4096aa:	mov    ecx,r12d
  4096ad:	and    ecx,0xf
  4096b0:	cmp    ecx,0x9
  4096b3:	mov    r8d,0x30
  4096b9:	mov    r11d,0x57
  4096bf:	cmova  r8d,r11d
  4096c3:	add    r8d,ecx
  4096c6:	mov    eax,0x404
  4096cb:	bextr  edx,r12d,eax
  4096d0:	cmp    edx,0x9
  4096d3:	mov    r9d,0x30
  4096d9:	cmova  r9d,r11d
  4096dd:	add    r9d,edx
  4096e0:	mov    eax,0x408
  4096e5:	bextr  esi,r12d,eax
  4096ea:	cmp    esi,0x9
  4096ed:	mov    r10d,0x30
  4096f3:	cmova  r10d,r11d
  4096f7:	mov    eax,0x40c
  4096fc:	bextr  edi,r12d,eax
  409701:	add    r10d,esi
  409704:	cmp    edi,0x9
  409707:	mov    esi,0x30
  40970c:	cmova  esi,r11d
  409710:	add    esi,edi
  409712:	mov    eax,0x410
  409717:	bextr  edi,r12d,eax
  40971c:	cmp    edi,0x9
  40971f:	mov    eax,0x30
  409724:	cmova  eax,r11d
  409728:	add    eax,edi
  40972a:	mov    ecx,0x414
  40972f:	bextr  edi,r12d,ecx
  409734:	cmp    edi,0x9
  409737:	mov    ecx,0x30
  40973c:	cmova  ecx,r11d
  409740:	add    ecx,edi
  409742:	mov    edx,0x418
  409747:	bextr  edi,r12d,edx
  40974c:	cmp    edi,0x9
  40974f:	mov    edx,0x30
  409754:	cmova  edx,r11d
  409758:	add    edx,edi
  40975a:	shr    r12d,0x1c
  40975e:	cmp    r14,0x4
  409762:	mov    WORD PTR [rsp+0x140],0x785c
  40976c:	mov    BYTE PTR [rsp+0x143],r8b
  409774:	mov    BYTE PTR [rsp+0x142],r9b
  40977c:	mov    WORD PTR [rsp+0x144],0x785c
  409786:	mov    BYTE PTR [rsp+0x147],r10b
  40978e:	mov    BYTE PTR [rsp+0x146],sil
  409796:	mov    WORD PTR [rsp+0x148],0x785c
  4097a0:	mov    BYTE PTR [rsp+0x14b],al
  4097a7:	mov    BYTE PTR [rsp+0x14a],cl
  4097ae:	mov    WORD PTR [rsp+0x14c],0x785c
  4097b8:	mov    BYTE PTR [rsp+0x14f],dl
  4097bf:	mov    eax,0x30
  4097c4:	cmova  eax,r11d
  4097c8:	add    eax,r12d
  4097cb:	mov    r12,QWORD PTR [rsp]
  4097cf:	mov    BYTE PTR [rsp+0x14e],al
  4097d6:	mov    BYTE PTR [rsp+0x150],0x0
  4097de:	mov    rdi,QWORD PTR [r12+0xd0]
  4097e6:	xor    eax,eax
  4097e8:	lea    rsi,[rip+0x2d888]        # 437077 <_IO_stdin_used@@Base+0x8077>
  4097ef:	mov    rdx,r15
  4097f2:	lea    rcx,[rsp+0x140]
  4097fa:	call   406180 <fprintf@plt>
  4097ff:	mov    rbx,QWORD PTR [rbx]
  409802:	test   rbx,rbx
  409805:	jne    4095e0 <__flatcc_fb_gen_c_reader@@Base+0x2c0>
  40980b:	mov    rsi,QWORD PTR [r12+0xd0]
  409813:	mov    edi,0xa
  409818:	call   406120 <fputc@plt>
  40981d:	mov    rax,QWORD PTR [r12+0xd8]
  409825:	mov    rbx,QWORD PTR [rax+0x40]
  409829:	test   rbx,rbx
  40982c:	je     40984c <__flatcc_fb_gen_c_reader@@Base+0x52c>
  40982e:	xchg   ax,ax
  409830:	movzx  eax,WORD PTR [rbx+0x10]
  409834:	cmp    eax,0x3
  409837:	jne    409844 <__flatcc_fb_gen_c_reader@@Base+0x524>
  409839:	mov    rdi,r12
  40983c:	mov    rsi,rbx
  40983f:	call   40b720 <__flatcc_fb_gen_c_reader@@Base+0x2400>
  409844:	mov    rbx,QWORD PTR [rbx]
  409847:	test   rbx,rbx
  40984a:	jne    409830 <__flatcc_fb_gen_c_reader@@Base+0x510>
  40984c:	mov    rsi,QWORD PTR [r12+0xd0]
  409854:	mov    edi,0xa
  409859:	call   406120 <fputc@plt>
  40985e:	mov    rax,QWORD PTR [r12+0xd8]
  409866:	mov    r15,QWORD PTR [rax+0x48]
  40986a:	test   r15,r15
  40986d:	je     40a405 <__flatcc_fb_gen_c_reader@@Base+0x10e5>
  409873:	lea    r14,[rsp+0x240]
  40987b:	mov    QWORD PTR [rsp+0x28],r13
  409880:	mov    rax,QWORD PTR [r12+0xe0]
  409888:	mov    eax,DWORD PTR [rax+0xa4]
  40988e:	mov    DWORD PTR [rsp+0x8],eax
  409892:	vxorps xmm0,xmm0,xmm0
  409896:	vmovaps YMMWORD PTR [rsp+0x300],ymm0
  40989f:	vmovaps YMMWORD PTR [rsp+0x2e0],ymm0
  4098a8:	vmovaps YMMWORD PTR [rsp+0x2c0],ymm0
  4098b1:	vmovaps YMMWORD PTR [rsp+0x2a0],ymm0
  4098ba:	vmovaps YMMWORD PTR [rsp+0x280],ymm0
  4098c3:	vmovaps YMMWORD PTR [rsp+0x260],ymm0
  4098cc:	vmovaps YMMWORD PTR [rsp+0x240],ymm0
  4098d5:	vmovaps YMMWORD PTR [rsp+0x200],ymm0
  4098de:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  4098e7:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  4098f0:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  4098f9:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  409902:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40990b:	mov    QWORD PTR [rsp+0x320],0x0
  409917:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  409920:	mov    QWORD PTR [rsp+0x220],0x0
  40992c:	movzx  eax,WORD PTR [r15+0x10]
  409931:	cmp    eax,0x1
  409934:	jne    40b36f <__flatcc_fb_gen_c_reader@@Base+0x204f>
  40993a:	cmp    WORD PTR [r15+0xb0],0x0
  409943:	jne    409953 <__flatcc_fb_gen_c_reader@@Base+0x633>
  409945:	cmp    QWORD PTR [r15+0xa8],0x0
  40994d:	jne    40b46c <__flatcc_fb_gen_c_reader@@Base+0x214c>
  409953:	cmp    QWORD PTR [r15+0xb8],0x0
  40995b:	jne    40996b <__flatcc_fb_gen_c_reader@@Base+0x64b>
  40995d:	cmp    QWORD PTR [r15+0xa8],0x0
  409965:	jne    40b48e <__flatcc_fb_gen_c_reader@@Base+0x216e>
  40996b:	mov    rdi,QWORD PTR [r15+0x18]
  40996f:	mov    rsi,r15
  409972:	mov    rdx,r14
  409975:	vzeroupper 
  409978:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40997d:	mov    r14,QWORD PTR [r15+0x40]
  409981:	test   r14,r14
  409984:	je     409a4c <__flatcc_fb_gen_c_reader@@Base+0x72c>
  40998a:	mov    rax,QWORD PTR [r14+0x8]
  40998e:	cmp    QWORD PTR [rax+0x10],0x0
  409993:	je     4099ae <__flatcc_fb_gen_c_reader@@Base+0x68e>
  409995:	mov    rdi,QWORD PTR [r13+0x0]
  409999:	xor    eax,eax
  40999b:	lea    rsi,[rip+0x2daf1]        # 437493 <_IO_stdin_used@@Base+0x8493>
  4099a2:	lea    rdx,[rip+0x2738a]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  4099a9:	call   406180 <fprintf@plt>
  4099ae:	mov    rdi,QWORD PTR [r13+0x0]
  4099b2:	mov    rax,QWORD PTR [r14+0x8]
  4099b6:	mov    edx,DWORD PTR [rax+0x8]
  4099b9:	mov    rcx,QWORD PTR [rax]
  4099bc:	xor    eax,eax
  4099be:	lea    rsi,[rip+0x381ca]        # 441b8f <_IO_stdin_used@@Base+0x12b8f>
  4099c5:	call   406180 <fprintf@plt>
  4099ca:	mov    rbx,QWORD PTR [r14]
  4099cd:	test   rbx,rbx
  4099d0:	je     409a32 <__flatcc_fb_gen_c_reader@@Base+0x712>
  4099d2:	mov    rax,QWORD PTR [r14+0x8]
  4099d6:	mov    rax,QWORD PTR [rax+0x10]
  4099da:	nop    WORD PTR [rax+rax*1+0x0]
  4099e0:	mov    rcx,QWORD PTR [rbx+0x8]
  4099e4:	cmp    rax,QWORD PTR [rcx+0x10]
  4099e8:	je     409a03 <__flatcc_fb_gen_c_reader@@Base+0x6e3>
  4099ea:	mov    rdi,QWORD PTR [r13+0x0]
  4099ee:	xor    eax,eax
  4099f0:	lea    rsi,[rip+0x2daa3]        # 43749a <_IO_stdin_used@@Base+0x849a>
  4099f7:	lea    rdx,[rip+0x27335]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  4099fe:	call   406180 <fprintf@plt>
  409a03:	mov    rdi,QWORD PTR [r13+0x0]
  409a07:	mov    rax,QWORD PTR [rbx+0x8]
  409a0b:	mov    edx,DWORD PTR [rax+0x8]
  409a0e:	mov    rcx,QWORD PTR [rax]
  409a11:	xor    eax,eax
  409a13:	lea    rsi,[rip+0x38175]        # 441b8f <_IO_stdin_used@@Base+0x12b8f>
  409a1a:	call   406180 <fprintf@plt>
  409a1f:	mov    rax,QWORD PTR [rbx+0x8]
  409a23:	mov    rcx,QWORD PTR [rbx]
  409a26:	mov    rax,QWORD PTR [rax+0x10]
  409a2a:	mov    rbx,rcx
  409a2d:	test   rcx,rcx
  409a30:	jne    4099e0 <__flatcc_fb_gen_c_reader@@Base+0x6c0>
  409a32:	mov    rcx,QWORD PTR [r13+0x0]
  409a36:	mov    esi,0x4
  409a3b:	mov    edx,0x1
  409a40:	lea    rdi,[rip+0x3c625]        # 44606c <_IO_stdin_used@@Base+0x1706c>
  409a47:	call   406220 <fwrite@plt>
  409a4c:	cmp    QWORD PTR [r15+0xb8],0x0
  409a54:	mov    QWORD PTR [rsp+0x38],r15
  409a59:	je     409e60 <__flatcc_fb_gen_c_reader@@Base+0xb40>
  409a5f:	cmp    DWORD PTR [rsp+0x8],0x0
  409a64:	lea    rbx,[rsp+0x240]
  409a6c:	je     409a88 <__flatcc_fb_gen_c_reader@@Base+0x768>
  409a6e:	mov    rcx,QWORD PTR [r13+0x0]
  409a72:	mov    esi,0x10
  409a77:	mov    edx,0x1
  409a7c:	lea    rdi,[rip+0x2dca7]        # 43772a <_IO_stdin_used@@Base+0x872a>
  409a83:	call   406220 <fwrite@plt>
  409a88:	mov    rdi,QWORD PTR [r13+0x0]
  409a8c:	xor    eax,eax
  409a8e:	lea    rsi,[rip+0x2dca6]        # 43773b <_IO_stdin_used@@Base+0x873b>
  409a95:	mov    rdx,rbx
  409a98:	call   406180 <fprintf@plt>
  409a9d:	mov    r14,QWORD PTR [r15+0x28]
  409aa1:	test   r14,r14
  409aa4:	je     409ee0 <__flatcc_fb_gen_c_reader@@Base+0xbc0>
  409aaa:	lea    rax,[r15+0xb0]
  409ab1:	mov    QWORD PTR [rsp+0x18],rax
  409ab6:	xor    r15d,r15d
  409ab9:	mov    DWORD PTR [rsp+0x14],0x0
  409ac1:	xor    eax,eax
  409ac3:	mov    QWORD PTR [rsp+0x20],rax
  409ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  409ad0:	mov    r12,QWORD PTR [r14+0x68]
  409ad4:	test   r12,r12
  409ad7:	je     409bac <__flatcc_fb_gen_c_reader@@Base+0x88c>
  409add:	mov    rax,QWORD PTR [r12+0x8]
  409ae2:	cmp    QWORD PTR [rax+0x10],0x0
  409ae7:	je     409b02 <__flatcc_fb_gen_c_reader@@Base+0x7e2>
  409ae9:	mov    rdi,QWORD PTR [r13+0x0]
  409aed:	xor    eax,eax
  409aef:	lea    rsi,[rip+0x2d99d]        # 437493 <_IO_stdin_used@@Base+0x8493>
  409af6:	lea    rdx,[rip+0x3d118]        # 446c15 <_IO_stdin_used@@Base+0x17c15>
  409afd:	call   406180 <fprintf@plt>
  409b02:	mov    rdi,QWORD PTR [r13+0x0]
  409b06:	mov    rax,QWORD PTR [r12+0x8]
  409b0b:	mov    edx,DWORD PTR [rax+0x8]
  409b0e:	mov    rcx,QWORD PTR [rax]
  409b11:	xor    eax,eax
  409b13:	lea    rsi,[rip+0x38075]        # 441b8f <_IO_stdin_used@@Base+0x12b8f>
  409b1a:	call   406180 <fprintf@plt>
  409b1f:	mov    rbx,QWORD PTR [r12]
  409b23:	test   rbx,rbx
  409b26:	je     409b92 <__flatcc_fb_gen_c_reader@@Base+0x872>
  409b28:	mov    rax,QWORD PTR [r12+0x8]
  409b2d:	mov    rax,QWORD PTR [rax+0x10]
  409b31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b3b:	nop    DWORD PTR [rax+rax*1+0x0]
  409b40:	mov    rcx,QWORD PTR [rbx+0x8]
  409b44:	cmp    rax,QWORD PTR [rcx+0x10]
  409b48:	je     409b63 <__flatcc_fb_gen_c_reader@@Base+0x843>
  409b4a:	mov    rdi,QWORD PTR [r13+0x0]
  409b4e:	xor    eax,eax
  409b50:	lea    rsi,[rip+0x2d943]        # 43749a <_IO_stdin_used@@Base+0x849a>
  409b57:	lea    rdx,[rip+0x3d0b7]        # 446c15 <_IO_stdin_used@@Base+0x17c15>
  409b5e:	call   406180 <fprintf@plt>
  409b63:	mov    rdi,QWORD PTR [r13+0x0]
  409b67:	mov    rax,QWORD PTR [rbx+0x8]
  409b6b:	mov    edx,DWORD PTR [rax+0x8]
  409b6e:	mov    rcx,QWORD PTR [rax]
  409b71:	xor    eax,eax
  409b73:	lea    rsi,[rip+0x38015]        # 441b8f <_IO_stdin_used@@Base+0x12b8f>
  409b7a:	call   406180 <fprintf@plt>
  409b7f:	mov    rax,QWORD PTR [rbx+0x8]
  409b83:	mov    rcx,QWORD PTR [rbx]
  409b86:	mov    rax,QWORD PTR [rax+0x10]
  409b8a:	mov    rbx,rcx
  409b8d:	test   rcx,rcx
  409b90:	jne    409b40 <__flatcc_fb_gen_c_reader@@Base+0x820>
  409b92:	mov    rcx,QWORD PTR [r13+0x0]
  409b96:	mov    esi,0x4
  409b9b:	mov    edx,0x1
  409ba0:	lea    rdi,[rip+0x3c4c5]        # 44606c <_IO_stdin_used@@Base+0x1706c>
  409ba7:	call   406220 <fwrite@plt>
  409bac:	lea    rax,[r14+0x72]
  409bb0:	test   r15,r15
  409bb3:	cmove  rax,QWORD PTR [rsp+0x18]
  409bb9:	mov    rcx,QWORD PTR [r14+0x8]
  409bbd:	mov    r11d,DWORD PTR [rcx+0x8]
  409bc1:	mov    r10,QWORD PTR [rcx]
  409bc4:	movzx  r9d,WORD PTR [rax]
  409bc8:	cmp    DWORD PTR [rsp+0x8],0x0
  409bcd:	je     409c60 <__flatcc_fb_gen_c_reader@@Base+0x940>
  409bd3:	mov    ecx,DWORD PTR [r14+0x78]
  409bd7:	sub    ecx,r15d
  409bda:	je     409c60 <__flatcc_fb_gen_c_reader@@Base+0x940>
  409be0:	mov    r12,r13
  409be3:	mov    rdi,QWORD PTR [r13+0x0]
  409be7:	mov    rdx,QWORD PTR [rsp+0x20]
  409bec:	lea    eax,[rdx+0x1]
  409bef:	mov    DWORD PTR [rsp+0x30],eax
  409bf3:	xor    eax,eax
  409bf5:	lea    rsi,[rip+0x2db4c]        # 437748 <_IO_stdin_used@@Base+0x8748>
  409bfc:	mov    rbx,r10
  409bff:	mov    r13d,r9d
  409c02:	mov    r15d,r11d
  409c05:	call   406180 <fprintf@plt>
  409c0a:	mov    r11d,r15d
  409c0d:	mov    r9d,r13d
  409c10:	mov    r10,rbx
  409c13:	mov    eax,DWORD PTR [rsp+0x30]
  409c17:	mov    QWORD PTR [rsp+0x20],rax
  409c1c:	test   BYTE PTR [r14+0x70],0x4
  409c21:	je     409c6a <__flatcc_fb_gen_c_reader@@Base+0x94a>
  409c23:	mov    r8d,DWORD PTR [r14+0x80]
  409c2a:	mov    r13,r12
  409c2d:	mov    rdi,QWORD PTR [r12]
  409c31:	cmp    DWORD PTR [rsp+0x8],0x0
  409c36:	je     409d54 <__flatcc_fb_gen_c_reader@@Base+0xa34>
  409c3c:	xor    eax,eax
  409c3e:	lea    rsi,[rip+0x2db21]        # 437766 <_IO_stdin_used@@Base+0x8766>
  409c45:	mov    ebx,DWORD PTR [rsp+0x14]
  409c49:	mov    edx,ebx
  409c4b:	mov    ecx,r8d
  409c4e:	mov    r8d,r11d
  409c51:	mov    r9,r10
  409c54:	call   406180 <fprintf@plt>
  409c59:	jmp    409d78 <__flatcc_fb_gen_c_reader@@Base+0xa58>
  409c5e:	xchg   ax,ax
  409c60:	mov    r12,r13
  409c63:	test   BYTE PTR [r14+0x70],0x4
  409c68:	jne    409c23 <__flatcc_fb_gen_c_reader@@Base+0x903>
  409c6a:	movzx  eax,WORD PTR [r14+0x28]
  409c6f:	cmp    eax,0xe
  409c72:	je     409ce0 <__flatcc_fb_gen_c_reader@@Base+0x9c0>
  409c74:	movzx  eax,ax
  409c77:	cmp    eax,0x8
  409c7a:	jne    40b258 <__flatcc_fb_gen_c_reader@@Base+0x1f38>
  409c80:	mov    eax,DWORD PTR [r14+0x18]
  409c84:	cmp    eax,0x5
  409c87:	lea    rcx,[rip+0x270a5]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  409c8e:	cmove  rcx,QWORD PTR [rsp]
  409c93:	add    eax,0xffffffff
  409c96:	cmp    eax,0xb
  409c99:	jae    40b20f <__flatcc_fb_gen_c_reader@@Base+0x1eef>
  409c9f:	mov    r13d,r11d
  409ca2:	mov    r12,r10
  409ca5:	cdqe   
  409ca7:	lea    rdx,[rip+0x48e32]        # 452ae0 <fb_value_set_deleted@@Base+0x6880>
  409cae:	mov    rbx,QWORD PTR [rdx+rax*8]
  409cb2:	mov    rax,QWORD PTR [rsp+0x28]
  409cb7:	mov    rdi,QWORD PTR [rax]
  409cba:	cmp    DWORD PTR [rsp+0x8],0x0
  409cbf:	je     409d81 <__flatcc_fb_gen_c_reader@@Base+0xa61>
  409cc5:	xor    eax,eax
  409cc7:	lea    rsi,[rip+0x2db0a]        # 4377d8 <_IO_stdin_used@@Base+0x87d8>
  409cce:	mov    rdx,rcx
  409cd1:	jmp    409d4a <__flatcc_fb_gen_c_reader@@Base+0xa2a>
  409cd3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409cdd:	nop    DWORD PTR [rax]
  409ce0:	mov    DWORD PTR [rsp+0x30],r9d
  409ce5:	mov    rsi,QWORD PTR [r14+0x18]
  409ce9:	mov    eax,DWORD PTR [rsi+0x10]
  409cec:	mov    ecx,eax
  409cee:	or     ecx,0x2
  409cf1:	movzx  ecx,cx
  409cf4:	cmp    ecx,0x3
  409cf7:	jne    40b307 <__flatcc_fb_gen_c_reader@@Base+0x1fe7>
  409cfd:	mov    r13d,r11d
  409d00:	mov    r12,r10
  409d03:	movzx  eax,ax
  409d06:	cmp    eax,0x1
  409d09:	lea    rbx,[rip+0x2db43]        # 437853 <_IO_stdin_used@@Base+0x8853>
  409d10:	lea    rax,[rip+0x2701c]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  409d17:	cmove  rbx,rax
  409d1b:	mov    rdi,QWORD PTR [rsi+0x18]
  409d1f:	lea    r15,[rsp+0x140]
  409d27:	mov    rdx,r15
  409d2a:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  409d2f:	mov    rax,QWORD PTR [rsp+0x28]
  409d34:	mov    rdi,QWORD PTR [rax]
  409d37:	cmp    DWORD PTR [rsp+0x8],0x0
  409d3c:	je     409d8f <__flatcc_fb_gen_c_reader@@Base+0xa6f>
  409d3e:	xor    eax,eax
  409d40:	lea    rsi,[rip+0x2db12]        # 437859 <_IO_stdin_used@@Base+0x8859>
  409d47:	mov    rdx,r15
  409d4a:	mov    rcx,rbx
  409d4d:	call   406180 <fprintf@plt>
  409d52:	jmp    409da7 <__flatcc_fb_gen_c_reader@@Base+0xa87>
  409d54:	sub    rsp,0x8
  409d58:	xor    eax,eax
  409d5a:	lea    rsi,[rip+0x2da38]        # 437799 <_IO_stdin_used@@Base+0x8799>
  409d61:	mov    edx,r9d
  409d64:	mov    ebx,DWORD PTR [rsp+0x1c]
  409d68:	mov    ecx,ebx
  409d6a:	mov    r9d,r11d
  409d6d:	push   r10
  409d6f:	call   406180 <fprintf@plt>
  409d74:	add    rsp,0x10
  409d78:	add    ebx,0x1
  409d7b:	mov    DWORD PTR [rsp+0x14],ebx
  409d7f:	jmp    409dc6 <__flatcc_fb_gen_c_reader@@Base+0xaa6>
  409d81:	xor    eax,eax
  409d83:	lea    rsi,[rip+0x2da58]        # 4377e2 <_IO_stdin_used@@Base+0x87e2>
  409d8a:	mov    edx,r9d
  409d8d:	jmp    409d9f <__flatcc_fb_gen_c_reader@@Base+0xa7f>
  409d8f:	xor    eax,eax
  409d91:	lea    rsi,[rip+0x2dacd]        # 437865 <_IO_stdin_used@@Base+0x8865>
  409d98:	mov    edx,DWORD PTR [rsp+0x30]
  409d9c:	mov    rcx,r15
  409d9f:	mov    r8,rbx
  409da2:	call   406180 <fprintf@plt>
  409da7:	mov    rcx,QWORD PTR [rsp+0x28]
  409dac:	mov    rdi,QWORD PTR [rcx]
  409daf:	xor    eax,eax
  409db1:	lea    rsi,[rip+0x2daec]        # 4378a4 <_IO_stdin_used@@Base+0x88a4>
  409db8:	mov    edx,r13d
  409dbb:	mov    r13,rcx
  409dbe:	mov    rcx,r12
  409dc1:	call   406180 <fprintf@plt>
  409dc6:	mov    r15d,DWORD PTR [r14+0x80]
  409dcd:	add    r15d,DWORD PTR [r14+0x78]
  409dd1:	mov    r14,QWORD PTR [r14]
  409dd4:	test   r14,r14
  409dd7:	jne    409ad0 <__flatcc_fb_gen_c_reader@@Base+0x7b0>
  409ddd:	cmp    DWORD PTR [rsp+0x8],0x0
  409de2:	je     409ef5 <__flatcc_fb_gen_c_reader@@Base+0xbd5>
  409de8:	mov    rax,QWORD PTR [rsp+0x38]
  409ded:	mov    ecx,DWORD PTR [rax+0xb8]
  409df3:	sub    ecx,r15d
  409df6:	mov    r12,QWORD PTR [rsp]
  409dfa:	lea    r14,[rsp+0x240]
  409e02:	je     409e1b <__flatcc_fb_gen_c_reader@@Base+0xafb>
  409e04:	mov    rdi,QWORD PTR [r13+0x0]
  409e08:	xor    eax,eax
  409e0a:	lea    rsi,[rip+0x2d937]        # 437748 <_IO_stdin_used@@Base+0x8748>
  409e11:	mov    rdx,QWORD PTR [rsp+0x20]
  409e16:	call   406180 <fprintf@plt>
  409e1b:	mov    rcx,QWORD PTR [r13+0x0]
  409e1f:	mov    esi,0x3
  409e24:	mov    edx,0x1
  409e29:	lea    rdi,[rip+0x37f03]        # 441d33 <_IO_stdin_used@@Base+0x12d33>
  409e30:	call   406220 <fwrite@plt>
  409e35:	mov    rcx,QWORD PTR [r13+0x0]
  409e39:	mov    esi,0xf
  409e3e:	mov    edx,0x1
  409e43:	lea    rdi,[rip+0x2da61]        # 4378ab <_IO_stdin_used@@Base+0x88ab>
  409e4a:	call   406220 <fwrite@plt>
  409e4f:	jmp    409f1b <__flatcc_fb_gen_c_reader@@Base+0xbfb>
  409e54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e5e:	xchg   ax,ax
  409e60:	mov    rdi,QWORD PTR [r13+0x0]
  409e64:	xor    eax,eax
  409e66:	lea    rsi,[rip+0x2d779]        # 4375e6 <_IO_stdin_used@@Base+0x85e6>
  409e6d:	lea    r14,[rsp+0x240]
  409e75:	mov    rdx,r14
  409e78:	call   406180 <fprintf@plt>
  409e7d:	mov    rdi,QWORD PTR [r13+0x0]
  409e81:	xor    eax,eax
  409e83:	lea    rsi,[rip+0x2d7bd]        # 437647 <_IO_stdin_used@@Base+0x8647>
  409e8a:	mov    rdx,r14
  409e8d:	mov    rcx,r14
  409e90:	mov    r8,r14
  409e93:	call   406180 <fprintf@plt>
  409e98:	mov    rdi,QWORD PTR [r13+0x0]
  409e9c:	xor    eax,eax
  409e9e:	lea    rsi,[rip+0x2d7f6]        # 43769b <_IO_stdin_used@@Base+0x869b>
  409ea5:	mov    rdx,r14
  409ea8:	mov    rcx,r14
  409eab:	mov    r8,r14
  409eae:	call   406180 <fprintf@plt>
  409eb3:	mov    rdi,QWORD PTR [r13+0x0]
  409eb7:	xor    eax,eax
  409eb9:	lea    rsi,[rip+0x2d81d]        # 4376dd <_IO_stdin_used@@Base+0x86dd>
  409ec0:	mov    rdx,r14
  409ec3:	mov    rcx,r14
  409ec6:	mov    r8,r14
  409ec9:	call   406180 <fprintf@plt>
  409ece:	jmp    409fa0 <__flatcc_fb_gen_c_reader@@Base+0xc80>
  409ed3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409edd:	nop    DWORD PTR [rax]
  409ee0:	xor    eax,eax
  409ee2:	mov    QWORD PTR [rsp+0x20],rax
  409ee7:	xor    r15d,r15d
  409eea:	cmp    DWORD PTR [rsp+0x8],0x0
  409eef:	jne    409de8 <__flatcc_fb_gen_c_reader@@Base+0xac8>
  409ef5:	mov    rcx,QWORD PTR [r13+0x0]
  409ef9:	mov    esi,0x3
  409efe:	mov    edx,0x1
  409f03:	lea    rdi,[rip+0x37e29]        # 441d33 <_IO_stdin_used@@Base+0x12d33>
  409f0a:	call   406220 <fwrite@plt>
  409f0f:	mov    r12,QWORD PTR [rsp]
  409f13:	lea    r14,[rsp+0x240]
  409f1b:	mov    rdi,QWORD PTR [r12+0xd0]
  409f23:	mov    r15,QWORD PTR [rsp+0x38]
  409f28:	mov    rcx,QWORD PTR [r15+0xb8]
  409f2f:	xor    eax,eax
  409f31:	lea    rsi,[rip+0x2d983]        # 4378bb <_IO_stdin_used@@Base+0x88bb>
  409f38:	mov    rdx,r14
  409f3b:	call   406180 <fprintf@plt>
  409f40:	mov    rdi,QWORD PTR [r12+0xd0]
  409f48:	xor    eax,eax
  409f4a:	lea    rsi,[rip+0x2d9a9]        # 4378fa <_IO_stdin_used@@Base+0x88fa>
  409f51:	mov    rdx,r14
  409f54:	mov    rcx,r14
  409f57:	mov    r8,r14
  409f5a:	call   406180 <fprintf@plt>
  409f5f:	mov    rdi,QWORD PTR [r12+0xd0]
  409f67:	xor    eax,eax
  409f69:	lea    rsi,[rip+0x2d9e2]        # 437952 <_IO_stdin_used@@Base+0x8952>
  409f70:	mov    rdx,r14
  409f73:	mov    rcx,r14
  409f76:	mov    r8,r14
  409f79:	call   406180 <fprintf@plt>
  409f7e:	mov    rdi,QWORD PTR [r12+0xd0]
  409f86:	xor    eax,eax
  409f88:	lea    rsi,[rip+0x2da09]        # 437998 <_IO_stdin_used@@Base+0x8998>
  409f8f:	mov    rdx,r14
  409f92:	mov    rcx,r14
  409f95:	mov    r8,r14
  409f98:	mov    r9,r12
  409f9b:	call   406180 <fprintf@plt>
  409fa0:	mov    rdi,QWORD PTR [r12+0xd0]
  409fa8:	mov    rcx,QWORD PTR [r15+0xb8]
  409faf:	xor    eax,eax
  409fb1:	lea    rsi,[rip+0x2da37]        # 4379ef <_IO_stdin_used@@Base+0x89ef>
  409fb8:	mov    rdx,r14
  409fbb:	call   406180 <fprintf@plt>
  409fc0:	mov    rdi,QWORD PTR [r12+0xd0]
  409fc8:	xor    eax,eax
  409fca:	lea    rsi,[rip+0x2da50]        # 437a21 <_IO_stdin_used@@Base+0x8a21>
  409fd1:	mov    rdx,r14
  409fd4:	mov    rcx,r14
  409fd7:	mov    r8,r12
  409fda:	call   406180 <fprintf@plt>
  409fdf:	mov    rdi,QWORD PTR [r12+0xd0]
  409fe7:	xor    eax,eax
  409fe9:	lea    rsi,[rip+0x2da71]        # 437a61 <_IO_stdin_used@@Base+0x8a61>
  409ff0:	mov    rdx,r12
  409ff3:	mov    rcx,r14
  409ff6:	call   406180 <fprintf@plt>
  409ffb:	mov    rsi,QWORD PTR [r12+0xd0]
  40a003:	mov    edi,0xa
  40a008:	call   406120 <fputc@plt>
  40a00d:	mov    r12,QWORD PTR [r15+0x28]
  40a011:	test   r12,r12
  40a014:	je     40a3d6 <__flatcc_fb_gen_c_reader@@Base+0x10b6>
  40a01a:	xor    r15d,r15d
  40a01d:	mov    DWORD PTR [rsp+0x8],0x0
  40a025:	jmp    40a040 <__flatcc_fb_gen_c_reader@@Base+0xd20>
  40a027:	mov    r15d,0x1
  40a02d:	lea    r14,[rsp+0x240]
  40a035:	jmp    40a3c9 <__flatcc_fb_gen_c_reader@@Base+0x10a9>
  40a03a:	nop    WORD PTR [rax+rax*1+0x0]
  40a040:	test   BYTE PTR [r12+0x70],0x4
  40a046:	jne    40a3c9 <__flatcc_fb_gen_c_reader@@Base+0x10a9>
  40a04c:	mov    rax,QWORD PTR [r12+0x8]
  40a051:	mov    r8d,DWORD PTR [rax+0x8]
  40a055:	mov    rbx,QWORD PTR [rax]
  40a058:	movzx  eax,WORD PTR [r12+0x28]
  40a05e:	cmp    eax,0xe
  40a061:	je     40a0e0 <__flatcc_fb_gen_c_reader@@Base+0xdc0>
  40a063:	movzx  eax,ax
  40a066:	cmp    eax,0x8
  40a069:	jne    40a390 <__flatcc_fb_gen_c_reader@@Base+0x1070>
  40a06f:	mov    ecx,DWORD PTR [r12+0x18]
  40a074:	lea    eax,[rcx-0x1]
  40a077:	cmp    eax,0xb
  40a07a:	jae    40b20f <__flatcc_fb_gen_c_reader@@Base+0x1eef>
  40a080:	cmp    ecx,0x5
  40a083:	lea    r10,[rip+0x26ca9]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  40a08a:	mov    rdx,QWORD PTR [rsp]
  40a08e:	cmove  r10,rdx
  40a092:	movsxd r11,eax
  40a095:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a09c:	mov    eax,0x0
  40a0a1:	lea    rsi,[rip+0x2d9d1]        # 437a79 <_IO_stdin_used@@Base+0x8a79>
  40a0a8:	mov    rcx,r14
  40a0ab:	mov    r9,rbx
  40a0ae:	lea    rbx,[rip+0x48a2b]        # 452ae0 <fb_value_set_deleted@@Base+0x6880>
  40a0b5:	push   QWORD PTR [rbx+r11*8]
  40a0b9:	push   r10
  40a0bb:	lea    rbx,[rip+0x4895e]        # 452a20 <fb_value_set_deleted@@Base+0x67c0>
  40a0c2:	push   QWORD PTR [rbx+r11*8]
  40a0c6:	push   rdx
  40a0c7:	call   406180 <fprintf@plt>
  40a0cc:	add    rsp,0x20
  40a0d0:	cmp    DWORD PTR [rsp+0x8],0x0
  40a0d5:	je     40a397 <__flatcc_fb_gen_c_reader@@Base+0x1077>
  40a0db:	jmp    40a3c9 <__flatcc_fb_gen_c_reader@@Base+0x10a9>
  40a0e0:	mov    DWORD PTR [rsp+0x18],r8d
  40a0e5:	mov    rsi,QWORD PTR [r12+0x18]
  40a0ea:	mov    rdi,QWORD PTR [rsi+0x18]
  40a0ee:	lea    rdx,[rsp+0x140]
  40a0f6:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40a0fb:	mov    rax,QWORD PTR [r12+0x18]
  40a100:	movzx  ecx,WORD PTR [rax+0x10]
  40a104:	cmp    ecx,0x1
  40a107:	je     40a356 <__flatcc_fb_gen_c_reader@@Base+0x1036>
  40a10d:	movzx  ecx,cx
  40a110:	cmp    ecx,0x3
  40a113:	mov    r8d,DWORD PTR [rsp+0x18]
  40a118:	jne    40a390 <__flatcc_fb_gen_c_reader@@Base+0x1070>
  40a11e:	mov    DWORD PTR [rsp+0x14],r15d
  40a123:	mov    eax,DWORD PTR [rax+0x48]
  40a126:	add    eax,0xffffffff
  40a129:	cmp    eax,0xb
  40a12c:	jae    40b326 <__flatcc_fb_gen_c_reader@@Base+0x2006>
  40a132:	mov    r14,QWORD PTR [rsp]
  40a136:	mov    rdi,QWORD PTR [r14+0xd0]
  40a13d:	xor    eax,eax
  40a13f:	lea    rsi,[rip+0x2d969]        # 437aaf <_IO_stdin_used@@Base+0x8aaf>
  40a146:	mov    rdx,r14
  40a149:	lea    r15,[rsp+0x240]
  40a151:	mov    rcx,r15
  40a154:	mov    QWORD PTR [rsp+0x20],rbx
  40a159:	mov    r9,rbx
  40a15c:	lea    rbx,[rsp+0x140]
  40a164:	push   rbx
  40a165:	push   rbx
  40a166:	call   406180 <fprintf@plt>
  40a16b:	add    rsp,0x10
  40a16f:	mov    rax,QWORD PTR [r14+0xe0]
  40a176:	mov    r14,r15
  40a179:	cmp    DWORD PTR [rax+0x24],0x0
  40a17d:	jne    40a1be <__flatcc_fb_gen_c_reader@@Base+0xe9e>
  40a17f:	cmp    BYTE PTR [r12+0x70],0x0
  40a185:	jns    40a1be <__flatcc_fb_gen_c_reader@@Base+0xe9e>
  40a187:	mov    rdx,QWORD PTR [rsp]
  40a18b:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a192:	sub    rsp,0x8
  40a196:	xor    eax,eax
  40a198:	lea    rsi,[rip+0x2d949]        # 437ae8 <_IO_stdin_used@@Base+0x8ae8>
  40a19f:	mov    rcx,r14
  40a1a2:	mov    r8d,DWORD PTR [rsp+0x20]
  40a1a7:	mov    r9,QWORD PTR [rsp+0x28]
  40a1ac:	lea    rbx,[rsp+0x148]
  40a1b4:	push   rbx
  40a1b5:	call   406180 <fprintf@plt>
  40a1ba:	add    rsp,0x10
  40a1be:	cmp    BYTE PTR [r12+0x70],0x0
  40a1c4:	mov    r15d,DWORD PTR [rsp+0x14]
  40a1c9:	jns    40a390 <__flatcc_fb_gen_c_reader@@Base+0x1070>
  40a1cf:	test   r15d,r15d
  40a1d2:	je     40a1ee <__flatcc_fb_gen_c_reader@@Base+0xece>
  40a1d4:	mov    rcx,QWORD PTR [r13+0x0]
  40a1d8:	mov    esi,0x42
  40a1dd:	mov    edx,0x1
  40a1e2:	lea    rdi,[rip+0x2d935]        # 437b1e <_IO_stdin_used@@Base+0x8b1e>
  40a1e9:	call   406220 <fwrite@plt>
  40a1ee:	mov    rbx,QWORD PTR [rsp]
  40a1f2:	mov    rcx,QWORD PTR [rbx+0xd0]
  40a1f9:	mov    esi,0x3d
  40a1fe:	mov    edx,0x1
  40a203:	lea    rdi,[rip+0x2d957]        # 437b61 <_IO_stdin_used@@Base+0x8b61>
  40a20a:	call   406220 <fwrite@plt>
  40a20f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a216:	sub    rsp,0x8
  40a21a:	xor    eax,eax
  40a21c:	lea    rsi,[rip+0x2d97c]        # 437b9f <_IO_stdin_used@@Base+0x8b9f>
  40a223:	mov    rdx,rbx
  40a226:	mov    rcx,r14
  40a229:	mov    r8d,DWORD PTR [rsp+0x20]
  40a22e:	mov    r9,QWORD PTR [rsp+0x28]
  40a233:	lea    r15,[rsp+0x148]
  40a23b:	push   r15
  40a23d:	call   406180 <fprintf@plt>
  40a242:	add    rsp,0x10
  40a246:	mov    rax,QWORD PTR [rbx+0xe0]
  40a24d:	cmp    DWORD PTR [rax+0xa8],0x0
  40a254:	je     40a283 <__flatcc_fb_gen_c_reader@@Base+0xf63>
  40a256:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a25d:	xor    eax,eax
  40a25f:	lea    rsi,[rip+0x2d96f]        # 437bd5 <_IO_stdin_used@@Base+0x8bd5>
  40a266:	mov    rdx,rbx
  40a269:	mov    rcx,r14
  40a26c:	mov    r8d,DWORD PTR [rsp+0x18]
  40a271:	mov    r9,QWORD PTR [rsp+0x20]
  40a276:	push   r14
  40a278:	push   r15
  40a27a:	call   406180 <fprintf@plt>
  40a27f:	add    rsp,0x10
  40a283:	mov    DWORD PTR [rsp+0x8],0x1
  40a28b:	mov    r15d,DWORD PTR [rsp+0x14]
  40a290:	test   r15d,r15d
  40a293:	jne    40a3c9 <__flatcc_fb_gen_c_reader@@Base+0x10a9>
  40a299:	mov    rcx,r14
  40a29c:	mov    r14,QWORD PTR [rsp]
  40a2a0:	mov    rdi,QWORD PTR [r14+0xd0]
  40a2a7:	sub    rsp,0x8
  40a2ab:	xor    eax,eax
  40a2ad:	lea    rsi,[rip+0x2d95d]        # 437c11 <_IO_stdin_used@@Base+0x8c11>
  40a2b4:	mov    rdx,r14
  40a2b7:	mov    r15d,DWORD PTR [rsp+0x20]
  40a2bc:	mov    r8d,r15d
  40a2bf:	mov    r9,QWORD PTR [rsp+0x28]
  40a2c4:	lea    rbx,[rsp+0x148]
  40a2cc:	push   rbx
  40a2cd:	call   406180 <fprintf@plt>
  40a2d2:	add    rsp,0x10
  40a2d6:	mov    rdi,QWORD PTR [r14+0xd0]
  40a2dd:	sub    rsp,0x8
  40a2e1:	xor    eax,eax
  40a2e3:	lea    rsi,[rip+0x2d965]        # 437c4f <_IO_stdin_used@@Base+0x8c4f>
  40a2ea:	mov    rdx,r14
  40a2ed:	lea    rcx,[rsp+0x248]
  40a2f5:	mov    r8d,r15d
  40a2f8:	mov    r15,QWORD PTR [rsp+0x28]
  40a2fd:	mov    r9,r15
  40a300:	push   rbx
  40a301:	call   406180 <fprintf@plt>
  40a306:	add    rsp,0x10
  40a30a:	mov    rax,QWORD PTR [r14+0xe0]
  40a311:	mov    DWORD PTR [rsp+0x8],0x1
  40a319:	cmp    DWORD PTR [rax+0xa8],0x0
  40a320:	je     40a027 <__flatcc_fb_gen_c_reader@@Base+0xd07>
  40a326:	mov    rdi,QWORD PTR [r13+0x0]
  40a32a:	xor    eax,eax
  40a32c:	lea    rsi,[rip+0x2d95a]        # 437c8d <_IO_stdin_used@@Base+0x8c8d>
  40a333:	lea    r14,[rsp+0x240]
  40a33b:	mov    rdx,r14
  40a33e:	mov    rcx,r14
  40a341:	mov    r8d,DWORD PTR [rsp+0x18]
  40a346:	mov    r9,r15
  40a349:	call   406180 <fprintf@plt>
  40a34e:	mov    r15d,0x1
  40a354:	jmp    40a3c9 <__flatcc_fb_gen_c_reader@@Base+0x10a9>
  40a356:	mov    rdx,QWORD PTR [rsp]
  40a35a:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a361:	sub    rsp,0x8
  40a365:	xor    eax,eax
  40a367:	lea    rsi,[rip+0x2d948]        # 437cb6 <_IO_stdin_used@@Base+0x8cb6>
  40a36e:	mov    rcx,r14
  40a371:	mov    r8d,DWORD PTR [rsp+0x20]
  40a376:	mov    r9,rbx
  40a379:	lea    rbx,[rsp+0x148]
  40a381:	push   rbx
  40a382:	call   406180 <fprintf@plt>
  40a387:	add    rsp,0x10
  40a38b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a390:	cmp    DWORD PTR [rsp+0x8],0x0
  40a395:	jne    40a3c9 <__flatcc_fb_gen_c_reader@@Base+0x10a9>
  40a397:	movzx  eax,BYTE PTR [r12+0x70]
  40a39d:	test   al,al
  40a39f:	jns    40a3c9 <__flatcc_fb_gen_c_reader@@Base+0x10a9>
  40a3a1:	mov    rcx,QWORD PTR [r13+0x0]
  40a3a5:	mov    esi,0x54
  40a3aa:	mov    edx,0x1
  40a3af:	lea    rdi,[rip+0x2d937]        # 437ced <_IO_stdin_used@@Base+0x8ced>
  40a3b6:	call   406220 <fwrite@plt>
  40a3bb:	mov    r15d,0x1
  40a3c1:	mov    DWORD PTR [rsp+0x8],0x0
  40a3c9:	mov    r12,QWORD PTR [r12]
  40a3cd:	test   r12,r12
  40a3d0:	jne    40a040 <__flatcc_fb_gen_c_reader@@Base+0xd20>
  40a3d6:	mov    rsi,QWORD PTR [r13+0x0]
  40a3da:	mov    edi,0xa
  40a3df:	call   406120 <fputc@plt>
  40a3e4:	mov    r15,QWORD PTR [rsp+0x38]
  40a3e9:	mov    r15,QWORD PTR [r15+0xc0]
  40a3f0:	test   r15,r15
  40a3f3:	mov    r12,QWORD PTR [rsp]
  40a3f7:	jne    409880 <__flatcc_fb_gen_c_reader@@Base+0x560>
  40a3fd:	mov    rax,QWORD PTR [r12+0xd8]
  40a405:	mov    rbx,QWORD PTR [rax+0x40]
  40a409:	test   rbx,rbx
  40a40c:	je     40b19c <__flatcc_fb_gen_c_reader@@Base+0x1e7c>
  40a412:	lea    r14,[rsp+0x40]
  40a417:	lea    r12,[rip+0x37771]        # 441b8f <_IO_stdin_used@@Base+0x12b8f>
  40a41e:	xchg   ax,ax
  40a420:	mov    eax,DWORD PTR [rbx+0x10]
  40a423:	lea    ecx,[rax-0x1]
  40a426:	movzx  ecx,cx
  40a429:	cmp    ecx,0x3
  40a42c:	jb     40b190 <__flatcc_fb_gen_c_reader@@Base+0x1e70>
  40a432:	test   ax,ax
  40a435:	je     40a454 <__flatcc_fb_gen_c_reader@@Base+0x1134>
  40a437:	movzx  eax,ax
  40a43a:	cmp    eax,0x4
  40a43d:	jne    40b391 <__flatcc_fb_gen_c_reader@@Base+0x2071>
  40a443:	mov    rdi,QWORD PTR [rsp]
  40a447:	mov    rsi,rbx
  40a44a:	call   40b720 <__flatcc_fb_gen_c_reader@@Base+0x2400>
  40a44f:	jmp    40b190 <__flatcc_fb_gen_c_reader@@Base+0x1e70>
  40a454:	vxorps xmm0,xmm0,xmm0
  40a458:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  40a461:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40a46a:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40a473:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40a47c:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40a485:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40a48b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40a491:	mov    QWORD PTR [rsp+0x120],0x0
  40a49d:	vmovaps YMMWORD PTR [rsp+0x400],ymm0
  40a4a6:	vmovaps YMMWORD PTR [rsp+0x3e0],ymm0
  40a4af:	vmovaps YMMWORD PTR [rsp+0x3c0],ymm0
  40a4b8:	vmovaps YMMWORD PTR [rsp+0x3a0],ymm0
  40a4c1:	vmovaps YMMWORD PTR [rsp+0x380],ymm0
  40a4ca:	vmovaps YMMWORD PTR [rsp+0x360],ymm0
  40a4d3:	vmovaps YMMWORD PTR [rsp+0x340],ymm0
  40a4dc:	mov    QWORD PTR [rsp+0x420],0x0
  40a4e8:	mov    rsi,QWORD PTR [r13+0x0]
  40a4ec:	mov    edi,0xa
  40a4f1:	vzeroupper 
  40a4f4:	call   406120 <fputc@plt>
  40a4f9:	mov    rdi,QWORD PTR [rbx+0x18]
  40a4fd:	mov    rsi,rbx
  40a500:	mov    rdx,r14
  40a503:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40a508:	mov    QWORD PTR [rsp+0x20],rbx
  40a50d:	mov    r14,QWORD PTR [rbx+0x40]
  40a511:	test   r14,r14
  40a514:	je     40a5d8 <__flatcc_fb_gen_c_reader@@Base+0x12b8>
  40a51a:	mov    rax,QWORD PTR [r14+0x8]
  40a51e:	cmp    QWORD PTR [rax+0x10],0x0
  40a523:	je     40a53e <__flatcc_fb_gen_c_reader@@Base+0x121e>
  40a525:	mov    rdi,QWORD PTR [r13+0x0]
  40a529:	xor    eax,eax
  40a52b:	lea    rsi,[rip+0x2cf61]        # 437493 <_IO_stdin_used@@Base+0x8493>
  40a532:	lea    rdx,[rip+0x267fa]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  40a539:	call   406180 <fprintf@plt>
  40a53e:	mov    rdi,QWORD PTR [r13+0x0]
  40a542:	mov    rax,QWORD PTR [r14+0x8]
  40a546:	mov    edx,DWORD PTR [rax+0x8]
  40a549:	mov    rcx,QWORD PTR [rax]
  40a54c:	xor    eax,eax
  40a54e:	mov    rsi,r12
  40a551:	call   406180 <fprintf@plt>
  40a556:	mov    rbx,QWORD PTR [r14]
  40a559:	test   rbx,rbx
  40a55c:	je     40a5be <__flatcc_fb_gen_c_reader@@Base+0x129e>
  40a55e:	mov    rax,QWORD PTR [r14+0x8]
  40a562:	mov    rax,QWORD PTR [rax+0x10]
  40a566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a570:	mov    rcx,QWORD PTR [rbx+0x8]
  40a574:	cmp    rax,QWORD PTR [rcx+0x10]
  40a578:	je     40a593 <__flatcc_fb_gen_c_reader@@Base+0x1273>
  40a57a:	mov    rdi,QWORD PTR [r13+0x0]
  40a57e:	xor    eax,eax
  40a580:	lea    rsi,[rip+0x2cf13]        # 43749a <_IO_stdin_used@@Base+0x849a>
  40a587:	lea    rdx,[rip+0x267a5]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  40a58e:	call   406180 <fprintf@plt>
  40a593:	mov    rdi,QWORD PTR [r13+0x0]
  40a597:	mov    rax,QWORD PTR [rbx+0x8]
  40a59b:	mov    edx,DWORD PTR [rax+0x8]
  40a59e:	mov    rcx,QWORD PTR [rax]
  40a5a1:	xor    eax,eax
  40a5a3:	mov    rsi,r12
  40a5a6:	call   406180 <fprintf@plt>
  40a5ab:	mov    rax,QWORD PTR [rbx+0x8]
  40a5af:	mov    rcx,QWORD PTR [rbx]
  40a5b2:	mov    rax,QWORD PTR [rax+0x10]
  40a5b6:	mov    rbx,rcx
  40a5b9:	test   rcx,rcx
  40a5bc:	jne    40a570 <__flatcc_fb_gen_c_reader@@Base+0x1250>
  40a5be:	mov    rcx,QWORD PTR [r13+0x0]
  40a5c2:	mov    esi,0x4
  40a5c7:	mov    edx,0x1
  40a5cc:	lea    rdi,[rip+0x3ba99]        # 44606c <_IO_stdin_used@@Base+0x1706c>
  40a5d3:	call   406220 <fwrite@plt>
  40a5d8:	mov    r14,QWORD PTR [rsp]
  40a5dc:	mov    rdi,QWORD PTR [r14+0xd0]
  40a5e3:	xor    eax,eax
  40a5e5:	lea    rsi,[rip+0x2d7d6]        # 437dc2 <_IO_stdin_used@@Base+0x8dc2>
  40a5ec:	lea    rbx,[rsp+0x40]
  40a5f1:	mov    rdx,rbx
  40a5f4:	call   406180 <fprintf@plt>
  40a5f9:	mov    rdi,QWORD PTR [r14+0xd0]
  40a600:	xor    eax,eax
  40a602:	lea    rsi,[rip+0x2d418]        # 437a21 <_IO_stdin_used@@Base+0x8a21>
  40a609:	mov    rdx,rbx
  40a60c:	mov    rcx,rbx
  40a60f:	mov    r8,r14
  40a612:	call   406180 <fprintf@plt>
  40a617:	mov    rdi,QWORD PTR [r14+0xd0]
  40a61e:	sub    rsp,0x8
  40a622:	xor    eax,eax
  40a624:	lea    rsi,[rip+0x2d7c0]        # 437deb <_IO_stdin_used@@Base+0x8deb>
  40a62b:	mov    rdx,rbx
  40a62e:	mov    rcx,rbx
  40a631:	mov    r8,rbx
  40a634:	mov    r9,r14
  40a637:	push   rbx
  40a638:	call   406180 <fprintf@plt>
  40a63d:	add    rsp,0x10
  40a641:	mov    rdi,QWORD PTR [r14+0xd0]
  40a648:	xor    eax,eax
  40a64a:	lea    rsi,[rip+0x2d7ff]        # 437e50 <_IO_stdin_used@@Base+0x8e50>
  40a651:	mov    rdx,r14
  40a654:	mov    rcx,rbx
  40a657:	call   406180 <fprintf@plt>
  40a65c:	mov    rsi,QWORD PTR [r14+0xd0]
  40a663:	mov    edi,0xa
  40a668:	call   406120 <fputc@plt>
  40a66d:	mov    rax,QWORD PTR [rsp+0x20]
  40a672:	mov    r14,QWORD PTR [rax+0x28]
  40a676:	test   r14,r14
  40a679:	je     40b17c <__flatcc_fb_gen_c_reader@@Base+0x1e5c>
  40a67f:	mov    DWORD PTR [rsp+0x14],0x0
  40a687:	jmp    40a8f0 <__flatcc_fb_gen_c_reader@@Base+0x15d0>
  40a68c:	mov    edi,DWORD PTR [rax+0x48]
  40a68f:	lea    rsi,[r14+0x48]
  40a693:	lea    r15,[rsp+0x440]
  40a69b:	mov    rdx,r15
  40a69e:	call   40bd50 <__flatcc_fb_gen_c_reader@@Base+0x2a30>
  40a6a3:	mov    r10,rbx
  40a6a6:	mov    rbx,QWORD PTR [rsp]
  40a6aa:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a6b1:	mov    rcx,QWORD PTR [r14+0x88]
  40a6b8:	mov    eax,0x0
  40a6bd:	lea    rsi,[rip+0x2db11]        # 4381d5 <_IO_stdin_used@@Base+0x91d5>
  40a6c4:	mov    rdx,rbx
  40a6c7:	lea    r8,[rsp+0x40]
  40a6cc:	mov    r9,QWORD PTR [rsp+0x8]
  40a6d1:	push   r15
  40a6d3:	push   r10
  40a6d5:	push   r10
  40a6d7:	push   QWORD PTR [rsp+0x30]
  40a6db:	call   406180 <fprintf@plt>
  40a6e0:	add    rsp,0x20
  40a6e4:	mov    rax,QWORD PTR [rbx+0xe0]
  40a6eb:	cmp    DWORD PTR [rax+0x24],0x0
  40a6ef:	jne    40a6fc <__flatcc_fb_gen_c_reader@@Base+0x13dc>
  40a6f1:	cmp    BYTE PTR [r14+0x70],0x0
  40a6f6:	js     40a89c <__flatcc_fb_gen_c_reader@@Base+0x157c>
  40a6fc:	cmp    BYTE PTR [r14+0x70],0x0
  40a701:	jns    40b13a <__flatcc_fb_gen_c_reader@@Base+0x1e1a>
  40a707:	cmp    DWORD PTR [rsp+0x14],0x0
  40a70c:	je     40a728 <__flatcc_fb_gen_c_reader@@Base+0x1408>
  40a70e:	mov    rcx,QWORD PTR [r13+0x0]
  40a712:	mov    esi,0x42
  40a717:	mov    edx,0x1
  40a71c:	lea    rdi,[rip+0x2d3fb]        # 437b1e <_IO_stdin_used@@Base+0x8b1e>
  40a723:	call   406220 <fwrite@plt>
  40a728:	mov    rax,QWORD PTR [rsp]
  40a72c:	mov    rcx,QWORD PTR [rax+0xd0]
  40a733:	mov    rbx,rax
  40a736:	mov    esi,0x3d
  40a73b:	mov    edx,0x1
  40a740:	lea    rdi,[rip+0x2d41a]        # 437b61 <_IO_stdin_used@@Base+0x8b61>
  40a747:	call   406220 <fwrite@plt>
  40a74c:	mov    rdx,rbx
  40a74f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a756:	sub    rsp,0x8
  40a75a:	xor    eax,eax
  40a75c:	lea    rsi,[rip+0x2d43c]        # 437b9f <_IO_stdin_used@@Base+0x8b9f>
  40a763:	lea    r15,[rsp+0x48]
  40a768:	mov    rcx,r15
  40a76b:	mov    r8,QWORD PTR [rsp+0x10]
  40a770:	mov    r15,QWORD PTR [rsp+0x20]
  40a775:	mov    r9,r15
  40a778:	lea    rbx,[rsp+0x348]
  40a780:	push   rbx
  40a781:	call   406180 <fprintf@plt>
  40a786:	mov    rdx,QWORD PTR [rsp+0x10]
  40a78b:	add    rsp,0x10
  40a78f:	mov    rax,QWORD PTR [rdx+0xe0]
  40a796:	cmp    DWORD PTR [rax+0xa8],0x0
  40a79d:	je     40a7c7 <__flatcc_fb_gen_c_reader@@Base+0x14a7>
  40a79f:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a7a6:	xor    eax,eax
  40a7a8:	lea    rsi,[rip+0x2da62]        # 438211 <_IO_stdin_used@@Base+0x9211>
  40a7af:	lea    rcx,[rsp+0x40]
  40a7b4:	mov    r8,QWORD PTR [rsp+0x8]
  40a7b9:	mov    r9,r15
  40a7bc:	push   rdx
  40a7bd:	push   rbx
  40a7be:	call   406180 <fprintf@plt>
  40a7c3:	add    rsp,0x10
  40a7c7:	cmp    DWORD PTR [rsp+0x14],0x0
  40a7cc:	jne    40b170 <__flatcc_fb_gen_c_reader@@Base+0x1e50>
  40a7d2:	mov    rax,QWORD PTR [rsp]
  40a7d6:	mov    rdi,QWORD PTR [rax+0xd0]
  40a7dd:	mov    rdx,rax
  40a7e0:	sub    rsp,0x8
  40a7e4:	xor    eax,eax
  40a7e6:	lea    rsi,[rip+0x2d424]        # 437c11 <_IO_stdin_used@@Base+0x8c11>
  40a7ed:	lea    r15,[rsp+0x48]
  40a7f2:	mov    rcx,r15
  40a7f5:	mov    r8,QWORD PTR [rsp+0x10]
  40a7fa:	mov    r15,QWORD PTR [rsp+0x20]
  40a7ff:	mov    r9,r15
  40a802:	lea    rbx,[rsp+0x348]
  40a80a:	push   rbx
  40a80b:	call   406180 <fprintf@plt>
  40a810:	add    rsp,0x10
  40a814:	mov    rdx,QWORD PTR [rsp]
  40a818:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a81f:	sub    rsp,0x8
  40a823:	xor    eax,eax
  40a825:	lea    rsi,[rip+0x2d423]        # 437c4f <_IO_stdin_used@@Base+0x8c4f>
  40a82c:	lea    rcx,[rsp+0x48]
  40a831:	mov    r8,QWORD PTR [rsp+0x10]
  40a836:	mov    r9,r15
  40a839:	lea    rbx,[rsp+0x348]
  40a841:	push   rbx
  40a842:	call   406180 <fprintf@plt>
  40a847:	add    rsp,0x10
  40a84b:	mov    rax,QWORD PTR [rsp]
  40a84f:	mov    rax,QWORD PTR [rax+0xe0]
  40a856:	jmp    40af3e <__flatcc_fb_gen_c_reader@@Base+0x1c1e>
  40a85b:	mov    rdx,QWORD PTR [rsp]
  40a85f:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a866:	xor    eax,eax
  40a868:	lea    rsi,[rip+0x2d65e]        # 437ecd <_IO_stdin_used@@Base+0x8ecd>
  40a86f:	lea    rcx,[rsp+0x40]
  40a874:	mov    r8,QWORD PTR [rsp+0x8]
  40a879:	mov    r9,QWORD PTR [rsp+0x18]
  40a87e:	push   QWORD PTR [rsp+0x28]
  40a882:	push   rbx
  40a883:	call   406180 <fprintf@plt>
  40a888:	add    rsp,0x10
  40a88c:	cmp    BYTE PTR [r14+0x70],0x0
  40a891:	jns    40b13a <__flatcc_fb_gen_c_reader@@Base+0x1e1a>
  40a897:	jmp    40ae10 <__flatcc_fb_gen_c_reader@@Base+0x1af0>
  40a89c:	mov    rdx,QWORD PTR [rsp]
  40a8a0:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a8a7:	sub    rsp,0x8
  40a8ab:	xor    eax,eax
  40a8ad:	lea    rsi,[rip+0x2d234]        # 437ae8 <_IO_stdin_used@@Base+0x8ae8>
  40a8b4:	lea    rcx,[rsp+0x48]
  40a8b9:	mov    r8,QWORD PTR [rsp+0x10]
  40a8be:	mov    r9,QWORD PTR [rsp+0x20]
  40a8c3:	lea    rbx,[rsp+0x348]
  40a8cb:	push   rbx
  40a8cc:	call   406180 <fprintf@plt>
  40a8d1:	add    rsp,0x10
  40a8d5:	cmp    BYTE PTR [r14+0x70],0x0
  40a8da:	jns    40b13a <__flatcc_fb_gen_c_reader@@Base+0x1e1a>
  40a8e0:	jmp    40a707 <__flatcc_fb_gen_c_reader@@Base+0x13e7>
  40a8e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a8ef:	nop
  40a8f0:	mov    r15,QWORD PTR [r14+0x68]
  40a8f4:	test   r15,r15
  40a8f7:	je     40a9b8 <__flatcc_fb_gen_c_reader@@Base+0x1698>
  40a8fd:	mov    rax,QWORD PTR [r15+0x8]
  40a901:	cmp    QWORD PTR [rax+0x10],0x0
  40a906:	je     40a921 <__flatcc_fb_gen_c_reader@@Base+0x1601>
  40a908:	mov    rdi,QWORD PTR [r13+0x0]
  40a90c:	xor    eax,eax
  40a90e:	lea    rsi,[rip+0x2cb7e]        # 437493 <_IO_stdin_used@@Base+0x8493>
  40a915:	lea    rdx,[rip+0x26417]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  40a91c:	call   406180 <fprintf@plt>
  40a921:	mov    rdi,QWORD PTR [r13+0x0]
  40a925:	mov    rax,QWORD PTR [r15+0x8]
  40a929:	mov    edx,DWORD PTR [rax+0x8]
  40a92c:	mov    rcx,QWORD PTR [rax]
  40a92f:	xor    eax,eax
  40a931:	mov    rsi,r12
  40a934:	call   406180 <fprintf@plt>
  40a939:	mov    rbx,QWORD PTR [r15]
  40a93c:	test   rbx,rbx
  40a93f:	je     40a99e <__flatcc_fb_gen_c_reader@@Base+0x167e>
  40a941:	mov    rax,QWORD PTR [r15+0x8]
  40a945:	mov    rax,QWORD PTR [rax+0x10]
  40a949:	nop    DWORD PTR [rax+0x0]
  40a950:	mov    rcx,QWORD PTR [rbx+0x8]
  40a954:	cmp    rax,QWORD PTR [rcx+0x10]
  40a958:	je     40a973 <__flatcc_fb_gen_c_reader@@Base+0x1653>
  40a95a:	mov    rdi,QWORD PTR [r13+0x0]
  40a95e:	xor    eax,eax
  40a960:	lea    rsi,[rip+0x2cb33]        # 43749a <_IO_stdin_used@@Base+0x849a>
  40a967:	lea    rdx,[rip+0x263c5]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  40a96e:	call   406180 <fprintf@plt>
  40a973:	mov    rdi,QWORD PTR [r13+0x0]
  40a977:	mov    rax,QWORD PTR [rbx+0x8]
  40a97b:	mov    edx,DWORD PTR [rax+0x8]
  40a97e:	mov    rcx,QWORD PTR [rax]
  40a981:	xor    eax,eax
  40a983:	mov    rsi,r12
  40a986:	call   406180 <fprintf@plt>
  40a98b:	mov    rax,QWORD PTR [rbx+0x8]
  40a98f:	mov    rcx,QWORD PTR [rbx]
  40a992:	mov    rax,QWORD PTR [rax+0x10]
  40a996:	mov    rbx,rcx
  40a999:	test   rcx,rcx
  40a99c:	jne    40a950 <__flatcc_fb_gen_c_reader@@Base+0x1630>
  40a99e:	mov    rcx,QWORD PTR [r13+0x0]
  40a9a2:	mov    esi,0x4
  40a9a7:	mov    edx,0x1
  40a9ac:	lea    rdi,[rip+0x3b6b9]        # 44606c <_IO_stdin_used@@Base+0x1706c>
  40a9b3:	call   406220 <fwrite@plt>
  40a9b8:	mov    rax,QWORD PTR [r14+0x8]
  40a9bc:	mov    ebx,DWORD PTR [rax+0x8]
  40a9bf:	mov    r11,QWORD PTR [rax]
  40a9c2:	movzx  eax,WORD PTR [r14+0x70]
  40a9c7:	test   al,0x4
  40a9c9:	jne    40aba0 <__flatcc_fb_gen_c_reader@@Base+0x1880>
  40a9cf:	mov    ecx,DWORD PTR [r14+0x28]
  40a9d3:	add    ecx,0xfffffff9
  40a9d6:	movzx  edx,cx
  40a9d9:	cmp    edx,0x8
  40a9dc:	ja     40b2be <__flatcc_fb_gen_c_reader@@Base+0x1f9e>
  40a9e2:	mov    edx,0x108
  40a9e7:	bextr  r15d,eax,edx
  40a9ec:	movzx  eax,cx
  40a9ef:	lea    rcx,[rip+0x2607a]        # 430a70 <_IO_stdin_used@@Base+0x1a70>
  40a9f6:	movsxd rax,DWORD PTR [rcx+rax*4]
  40a9fa:	add    rax,rcx
  40a9fd:	jmp    rax
  40a9ff:	mov    eax,DWORD PTR [r14+0x18]
  40aa03:	add    eax,0xffffffff
  40aa06:	cmp    eax,0xb
  40aa09:	jae    40b4b0 <__flatcc_fb_gen_c_reader@@Base+0x2190>
  40aa0f:	movsxd r10,eax
  40aa12:	mov    rdx,QWORD PTR [rsp]
  40aa16:	mov    rdi,QWORD PTR [rdx+0xd0]
  40aa1d:	mov    rcx,QWORD PTR [r14+0x88]
  40aa24:	mov    eax,0x0
  40aa29:	lea    rsi,[rip+0x2d5af]        # 437fdf <_IO_stdin_used@@Base+0x8fdf>
  40aa30:	lea    r8,[rsp+0x40]
  40aa35:	mov    r9d,ebx
  40aa38:	push   r15
  40aa3a:	lea    rbx,[rip+0x4803f]        # 452a80 <fb_value_set_deleted@@Base+0x6820>
  40aa41:	push   QWORD PTR [rbx+r10*8]
  40aa45:	push   rdx
  40aa46:	push   r11
  40aa48:	call   406180 <fprintf@plt>
  40aa4d:	add    rsp,0x20
  40aa51:	mov    rsi,QWORD PTR [r14+0x90]
  40aa58:	test   rsi,rsi
  40aa5b:	je     40b13a <__flatcc_fb_gen_c_reader@@Base+0x1e1a>
  40aa61:	vxorps xmm0,xmm0,xmm0
  40aa65:	vmovaps YMMWORD PTR [rsp+0x300],ymm0
  40aa6e:	vmovaps YMMWORD PTR [rsp+0x2e0],ymm0
  40aa77:	vmovaps YMMWORD PTR [rsp+0x2c0],ymm0
  40aa80:	vmovaps YMMWORD PTR [rsp+0x2a0],ymm0
  40aa89:	vmovaps YMMWORD PTR [rsp+0x280],ymm0
  40aa92:	vmovaps YMMWORD PTR [rsp+0x260],ymm0
  40aa9b:	vmovaps YMMWORD PTR [rsp+0x240],ymm0
  40aaa4:	vmovaps YMMWORD PTR [rsp+0x200],ymm0
  40aaad:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40aab6:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40aabf:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40aac8:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40aad1:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40aada:	mov    QWORD PTR [rsp+0x320],0x0
  40aae6:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40aaef:	mov    QWORD PTR [rsp+0x220],0x0
  40aafb:	movzx  eax,WORD PTR [rsi+0x10]
  40aaff:	lea    rbx,[rip+0x2d95e]        # 438464 <_IO_stdin_used@@Base+0x9464>
  40ab06:	test   ax,ax
  40ab09:	lea    rdx,[rsp+0x240]
  40ab11:	je     40ab26 <__flatcc_fb_gen_c_reader@@Base+0x1806>
  40ab13:	movzx  eax,ax
  40ab16:	cmp    eax,0x1
  40ab19:	jne    40b4f9 <__flatcc_fb_gen_c_reader@@Base+0x21d9>
  40ab1f:	lea    rbx,[rip+0x2d945]        # 43846b <_IO_stdin_used@@Base+0x946b>
  40ab26:	mov    rdi,QWORD PTR [rsi+0x18]
  40ab2a:	mov    r15,rdx
  40ab2d:	vzeroupper 
  40ab30:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40ab35:	mov    rsi,QWORD PTR [rsp+0x20]
  40ab3a:	cmp    WORD PTR [rsi+0x10],0x0
  40ab3f:	jne    40b545 <__flatcc_fb_gen_c_reader@@Base+0x2225>
  40ab45:	mov    rdi,QWORD PTR [rsi+0x18]
  40ab49:	lea    rax,[rsp+0x140]
  40ab51:	mov    rdx,rax
  40ab54:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40ab59:	mov    rax,QWORD PTR [r14+0x8]
  40ab5d:	mov    r8d,DWORD PTR [rax+0x8]
  40ab61:	mov    r9,QWORD PTR [rax]
  40ab64:	mov    rdx,QWORD PTR [rsp]
  40ab68:	mov    rdi,QWORD PTR [rdx+0xd0]
  40ab6f:	xor    eax,eax
  40ab71:	lea    rsi,[rip+0x2d99f]        # 438517 <_IO_stdin_used@@Base+0x9517>
  40ab78:	lea    rcx,[rsp+0x140]
  40ab80:	push   rbx
  40ab81:	push   r15
  40ab83:	call   406180 <fprintf@plt>
  40ab88:	add    rsp,0x10
  40ab8c:	cmp    BYTE PTR [r14+0x70],0x0
  40ab91:	jns    40b170 <__flatcc_fb_gen_c_reader@@Base+0x1e50>
  40ab97:	jmp    40b141 <__flatcc_fb_gen_c_reader@@Base+0x1e21>
  40ab9c:	nop    DWORD PTR [rax+0x0]
  40aba0:	mov    rdi,QWORD PTR [r13+0x0]
  40aba4:	xor    eax,eax
  40aba6:	lea    rsi,[rip+0x2d2ba]        # 437e67 <_IO_stdin_used@@Base+0x8e67>
  40abad:	lea    rdx,[rsp+0x40]
  40abb2:	mov    ecx,ebx
  40abb4:	mov    r8,r11
  40abb7:	call   406180 <fprintf@plt>
  40abbc:	jmp    40b170 <__flatcc_fb_gen_c_reader@@Base+0x1e50>
  40abc1:	mov    r12,QWORD PTR [rsp]
  40abc5:	mov    rdi,QWORD PTR [r12+0xd0]
  40abcd:	mov    rcx,QWORD PTR [r14+0x88]
  40abd4:	xor    eax,eax
  40abd6:	lea    rsi,[rip+0x2d435]        # 438012 <_IO_stdin_used@@Base+0x9012>
  40abdd:	mov    rdx,r12
  40abe0:	lea    r8,[rsp+0x40]
  40abe5:	mov    QWORD PTR [rsp+0x8],rbx
  40abea:	mov    r9d,ebx
  40abed:	push   r15
  40abef:	mov    QWORD PTR [rsp+0x20],r11
  40abf4:	push   r11
  40abf6:	call   406180 <fprintf@plt>
  40abfb:	add    rsp,0x10
  40abff:	mov    rax,QWORD PTR [r12+0xe0]
  40ac07:	cmp    DWORD PTR [rax+0x24],0x0
  40ac0b:	jne    40ac3c <__flatcc_fb_gen_c_reader@@Base+0x191c>
  40ac0d:	cmp    BYTE PTR [r14+0x70],0x0
  40ac12:	jns    40ac3c <__flatcc_fb_gen_c_reader@@Base+0x191c>
  40ac14:	mov    rdx,QWORD PTR [rsp]
  40ac18:	mov    rdi,QWORD PTR [rdx+0xd0]
  40ac1f:	xor    eax,eax
  40ac21:	lea    rsi,[rip+0x2d417]        # 43803f <_IO_stdin_used@@Base+0x903f>
  40ac28:	lea    rcx,[rsp+0x40]
  40ac2d:	mov    r8,QWORD PTR [rsp+0x8]
  40ac32:	mov    r9,QWORD PTR [rsp+0x18]
  40ac37:	call   406180 <fprintf@plt>
  40ac3c:	cmp    BYTE PTR [r14+0x70],0x0
  40ac41:	lea    r12,[rip+0x36f47]        # 441b8f <_IO_stdin_used@@Base+0x12b8f>
  40ac48:	jns    40b13a <__flatcc_fb_gen_c_reader@@Base+0x1e1a>
  40ac4e:	cmp    DWORD PTR [rsp+0x14],0x0
  40ac53:	je     40ac6f <__flatcc_fb_gen_c_reader@@Base+0x194f>
  40ac55:	mov    rcx,QWORD PTR [r13+0x0]
  40ac59:	mov    esi,0x42
  40ac5e:	mov    edx,0x1
  40ac63:	lea    rdi,[rip+0x2ceb4]        # 437b1e <_IO_stdin_used@@Base+0x8b1e>
  40ac6a:	call   406220 <fwrite@plt>
  40ac6f:	mov    rbx,QWORD PTR [rsp]
  40ac73:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ac7a:	xor    eax,eax
  40ac7c:	lea    rsi,[rip+0x2d3e7]        # 43806a <_IO_stdin_used@@Base+0x906a>
  40ac83:	mov    rdx,rbx
  40ac86:	lea    r15,[rsp+0x40]
  40ac8b:	mov    rcx,r15
  40ac8e:	mov    r8,QWORD PTR [rsp+0x8]
  40ac93:	mov    r15,QWORD PTR [rsp+0x18]
  40ac98:	mov    r9,r15
  40ac9b:	call   406180 <fprintf@plt>
  40aca0:	mov    rax,QWORD PTR [rbx+0xe0]
  40aca7:	cmp    DWORD PTR [rax+0xa8],0x0
  40acae:	je     40acd5 <__flatcc_fb_gen_c_reader@@Base+0x19b5>
  40acb0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40acb7:	xor    eax,eax
  40acb9:	lea    rsi,[rip+0x2d3d5]        # 438095 <_IO_stdin_used@@Base+0x9095>
  40acc0:	mov    rdx,rbx
  40acc3:	lea    rcx,[rsp+0x40]
  40acc8:	mov    r8,QWORD PTR [rsp+0x8]
  40accd:	mov    r9,r15
  40acd0:	call   406180 <fprintf@plt>
  40acd5:	cmp    DWORD PTR [rsp+0x14],0x0
  40acda:	jne    40b170 <__flatcc_fb_gen_c_reader@@Base+0x1e50>
  40ace0:	mov    rbx,QWORD PTR [rsp]
  40ace4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aceb:	xor    eax,eax
  40aced:	lea    rsi,[rip+0x2d3cc]        # 4380c0 <_IO_stdin_used@@Base+0x90c0>
  40acf4:	mov    rdx,rbx
  40acf7:	lea    r15,[rsp+0x40]
  40acfc:	mov    rcx,r15
  40acff:	mov    r8,QWORD PTR [rsp+0x8]
  40ad04:	mov    r15,QWORD PTR [rsp+0x18]
  40ad09:	mov    r9,r15
  40ad0c:	call   406180 <fprintf@plt>
  40ad11:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ad18:	xor    eax,eax
  40ad1a:	lea    rsi,[rip+0x2d3d2]        # 4380f3 <_IO_stdin_used@@Base+0x90f3>
  40ad21:	mov    rdx,rbx
  40ad24:	lea    rcx,[rsp+0x40]
  40ad29:	mov    r8,QWORD PTR [rsp+0x8]
  40ad2e:	mov    r9,r15
  40ad31:	call   406180 <fprintf@plt>
  40ad36:	mov    rax,QWORD PTR [rbx+0xe0]
  40ad3d:	jmp    40af3e <__flatcc_fb_gen_c_reader@@Base+0x1c1e>
  40ad42:	mov    QWORD PTR [rsp+0x8],rbx
  40ad47:	mov    QWORD PTR [rsp+0x18],r11
  40ad4c:	mov    edi,DWORD PTR [r14+0x18]
  40ad50:	cmp    edi,0x5
  40ad53:	lea    rbx,[rip+0x25fd9]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  40ad5a:	mov    r15,QWORD PTR [rsp]
  40ad5e:	cmove  rbx,r15
  40ad62:	lea    eax,[rdi-0x1]
  40ad65:	cmp    eax,0xb
  40ad68:	jae    40b20f <__flatcc_fb_gen_c_reader@@Base+0x1eef>
  40ad6e:	cdqe   
  40ad70:	lea    rcx,[rip+0x47d69]        # 452ae0 <fb_value_set_deleted@@Base+0x6880>
  40ad77:	mov    rcx,QWORD PTR [rcx+rax*8]
  40ad7b:	mov    QWORD PTR [rsp+0x28],rcx
  40ad80:	lea    rcx,[rip+0x47c99]        # 452a20 <fb_value_set_deleted@@Base+0x67c0>
  40ad87:	mov    rax,QWORD PTR [rcx+rax*8]
  40ad8b:	mov    QWORD PTR [rsp+0x30],rax
  40ad90:	lea    rsi,[r14+0x48]
  40ad94:	lea    rax,[rsp+0x440]
  40ad9c:	mov    rdx,rax
  40ad9f:	call   40bd50 <__flatcc_fb_gen_c_reader@@Base+0x2a30>
  40ada4:	mov    rdi,QWORD PTR [r15+0xd0]
  40adab:	mov    rcx,QWORD PTR [r14+0x88]
  40adb2:	mov    eax,0x0
  40adb7:	lea    rsi,[rip+0x2d0d6]        # 437e94 <_IO_stdin_used@@Base+0x8e94>
  40adbe:	mov    rdx,r15
  40adc1:	lea    r8,[rsp+0x40]
  40adc6:	mov    r9,QWORD PTR [rsp+0x8]
  40adcb:	lea    r10,[rsp+0x440]
  40add3:	push   r10
  40add5:	push   QWORD PTR [rsp+0x30]
  40add9:	push   rbx
  40adda:	push   QWORD PTR [rsp+0x48]
  40adde:	push   r15
  40ade0:	push   QWORD PTR [rsp+0x40]
  40ade4:	call   406180 <fprintf@plt>
  40ade9:	add    rsp,0x30
  40aded:	mov    rax,QWORD PTR [r15+0xe0]
  40adf4:	cmp    DWORD PTR [rax+0x24],0x0
  40adf8:	jne    40ae05 <__flatcc_fb_gen_c_reader@@Base+0x1ae5>
  40adfa:	cmp    BYTE PTR [r14+0x70],0x0
  40adff:	js     40a85b <__flatcc_fb_gen_c_reader@@Base+0x153b>
  40ae05:	cmp    BYTE PTR [r14+0x70],0x0
  40ae0a:	jns    40b13a <__flatcc_fb_gen_c_reader@@Base+0x1e1a>
  40ae10:	cmp    DWORD PTR [rsp+0x14],0x0
  40ae15:	je     40ae31 <__flatcc_fb_gen_c_reader@@Base+0x1b11>
  40ae17:	mov    rcx,QWORD PTR [r13+0x0]
  40ae1b:	mov    esi,0x42
  40ae20:	mov    edx,0x1
  40ae25:	lea    rdi,[rip+0x2ccf2]        # 437b1e <_IO_stdin_used@@Base+0x8b1e>
  40ae2c:	call   406220 <fwrite@plt>
  40ae31:	mov    r15,QWORD PTR [rsp]
  40ae35:	mov    rcx,QWORD PTR [r15+0xd0]
  40ae3c:	mov    esi,0x3d
  40ae41:	mov    edx,0x1
  40ae46:	lea    rdi,[rip+0x2cd14]        # 437b61 <_IO_stdin_used@@Base+0x8b61>
  40ae4d:	call   406220 <fwrite@plt>
  40ae52:	mov    rdi,QWORD PTR [r15+0xd0]
  40ae59:	xor    eax,eax
  40ae5b:	lea    rsi,[rip+0x2d09c]        # 437efe <_IO_stdin_used@@Base+0x8efe>
  40ae62:	mov    rdx,r15
  40ae65:	lea    rcx,[rsp+0x40]
  40ae6a:	mov    r8,QWORD PTR [rsp+0x8]
  40ae6f:	mov    r9,QWORD PTR [rsp+0x18]
  40ae74:	push   QWORD PTR [rsp+0x28]
  40ae78:	push   rbx
  40ae79:	call   406180 <fprintf@plt>
  40ae7e:	add    rsp,0x10
  40ae82:	mov    rax,QWORD PTR [r15+0xe0]
  40ae89:	cmp    DWORD PTR [rax+0xa8],0x0
  40ae90:	je     40aec8 <__flatcc_fb_gen_c_reader@@Base+0x1ba8>
  40ae92:	mov    rdi,QWORD PTR [r15+0xd0]
  40ae99:	sub    rsp,0x8
  40ae9d:	xor    eax,eax
  40ae9f:	lea    rsi,[rip+0x2d089]        # 437f2f <_IO_stdin_used@@Base+0x8f2f>
  40aea6:	mov    rdx,r15
  40aea9:	lea    rcx,[rsp+0x48]
  40aeae:	mov    r8,QWORD PTR [rsp+0x10]
  40aeb3:	mov    r9,QWORD PTR [rsp+0x20]
  40aeb8:	push   r15
  40aeba:	push   QWORD PTR [rsp+0x38]
  40aebe:	push   rbx
  40aebf:	call   406180 <fprintf@plt>
  40aec4:	add    rsp,0x20
  40aec8:	cmp    DWORD PTR [rsp+0x14],0x0
  40aecd:	jne    40b170 <__flatcc_fb_gen_c_reader@@Base+0x1e50>
  40aed3:	mov    r15,QWORD PTR [rsp]
  40aed7:	mov    rdi,QWORD PTR [r15+0xd0]
  40aede:	xor    eax,eax
  40aee0:	lea    rsi,[rip+0x2d086]        # 437f6d <_IO_stdin_used@@Base+0x8f6d>
  40aee7:	mov    rdx,r15
  40aeea:	lea    rcx,[rsp+0x40]
  40aeef:	mov    r8,QWORD PTR [rsp+0x8]
  40aef4:	mov    r9,QWORD PTR [rsp+0x18]
  40aef9:	push   QWORD PTR [rsp+0x28]
  40aefd:	push   rbx
  40aefe:	call   406180 <fprintf@plt>
  40af03:	add    rsp,0x10
  40af07:	mov    rdi,QWORD PTR [r15+0xd0]
  40af0e:	xor    eax,eax
  40af10:	lea    rsi,[rip+0x2d08f]        # 437fa6 <_IO_stdin_used@@Base+0x8fa6>
  40af17:	mov    rdx,r15
  40af1a:	lea    rcx,[rsp+0x40]
  40af1f:	mov    r8,QWORD PTR [rsp+0x8]
  40af24:	mov    r9,QWORD PTR [rsp+0x18]
  40af29:	push   QWORD PTR [rsp+0x28]
  40af2d:	push   rbx
  40af2e:	call   406180 <fprintf@plt>
  40af33:	add    rsp,0x10
  40af37:	mov    rax,QWORD PTR [r15+0xe0]
  40af3e:	mov    DWORD PTR [rsp+0x14],0x1
  40af46:	cmp    DWORD PTR [rax+0xa8],0x0
  40af4d:	je     40b170 <__flatcc_fb_gen_c_reader@@Base+0x1e50>
  40af53:	mov    rdi,QWORD PTR [r13+0x0]
  40af57:	xor    eax,eax
  40af59:	lea    rsi,[rip+0x2cd2d]        # 437c8d <_IO_stdin_used@@Base+0x8c8d>
  40af60:	lea    rdx,[rsp+0x40]
  40af65:	mov    rcx,rdx
  40af68:	mov    r8,QWORD PTR [rsp+0x8]
  40af6d:	mov    r9,QWORD PTR [rsp+0x18]
  40af72:	call   406180 <fprintf@plt>
  40af77:	jmp    40b170 <__flatcc_fb_gen_c_reader@@Base+0x1e50>
  40af7c:	mov    rdx,QWORD PTR [rsp]
  40af80:	mov    rdi,QWORD PTR [rdx+0xd0]
  40af87:	mov    rcx,QWORD PTR [r14+0x88]
  40af8e:	sub    rsp,0x8
  40af92:	xor    eax,eax
  40af94:	lea    rsi,[rip+0x2d18b]        # 438126 <_IO_stdin_used@@Base+0x9126>
  40af9b:	lea    r8,[rsp+0x48]
  40afa0:	mov    r9d,ebx
  40afa3:	push   r15
  40afa5:	push   rdx
  40afa6:	push   r11
  40afa8:	jmp    40b131 <__flatcc_fb_gen_c_reader@@Base+0x1e11>
  40afad:	mov    QWORD PTR [rsp+0x8],rbx
  40afb2:	mov    rbx,r11
  40afb5:	mov    rsi,QWORD PTR [r14+0x18]
  40afb9:	mov    rdi,QWORD PTR [rsi+0x18]
  40afbd:	lea    rdx,[rsp+0x340]
  40afc5:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40afca:	mov    rax,QWORD PTR [r14+0x18]
  40afce:	movzx  eax,WORD PTR [rax+0x10]
  40afd2:	cmp    eax,0x4
  40afd5:	ja     40b3da <__flatcc_fb_gen_c_reader@@Base+0x20ba>
  40afdb:	movzx  eax,ax
  40afde:	cmp    eax,0x2
  40afe1:	je     40b3da <__flatcc_fb_gen_c_reader@@Base+0x20ba>
  40afe7:	mov    rdi,QWORD PTR [r13+0x0]
  40afeb:	mov    r8,QWORD PTR [r14+0x88]
  40aff2:	cmp    eax,0x4
  40aff5:	mov    r10,rbx
  40aff8:	jne    40b090 <__flatcc_fb_gen_c_reader@@Base+0x1d70>
  40affe:	mov    eax,0x0
  40b003:	lea    rsi,[rip+0x2d317]        # 438321 <_IO_stdin_used@@Base+0x9321>
  40b00a:	mov    rdx,QWORD PTR [rsp]
  40b00e:	mov    rcx,rdx
  40b011:	lea    r9,[rsp+0x40]
  40b016:	push   r15
  40b018:	lea    rbx,[rsp+0x348]
  40b020:	push   rbx
  40b021:	push   r10
  40b023:	jmp    40b0eb <__flatcc_fb_gen_c_reader@@Base+0x1dcb>
  40b028:	mov    QWORD PTR [rsp+0x8],rbx
  40b02d:	mov    QWORD PTR [rsp+0x18],r11
  40b032:	mov    rsi,QWORD PTR [r14+0x18]
  40b036:	mov    rdi,QWORD PTR [rsi+0x18]
  40b03a:	lea    rbx,[rsp+0x340]
  40b042:	mov    rdx,rbx
  40b045:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40b04a:	mov    rax,QWORD PTR [r14+0x18]
  40b04e:	movzx  ecx,WORD PTR [rax+0x10]
  40b052:	cmp    rcx,0x4
  40b056:	ja     40b423 <__flatcc_fb_gen_c_reader@@Base+0x2103>
  40b05c:	lea    rdx,[rip+0x25a31]        # 430a94 <_IO_stdin_used@@Base+0x1a94>
  40b063:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40b067:	add    rcx,rdx
  40b06a:	jmp    rcx
  40b06c:	mov    rdx,QWORD PTR [rsp]
  40b070:	mov    rdi,QWORD PTR [rdx+0xd0]
  40b077:	mov    rcx,QWORD PTR [r14+0x88]
  40b07e:	sub    rsp,0x8
  40b082:	xor    eax,eax
  40b084:	lea    rsi,[rip+0x2d112]        # 43819d <_IO_stdin_used@@Base+0x919d>
  40b08b:	jmp    40b120 <__flatcc_fb_gen_c_reader@@Base+0x1e00>
  40b090:	sub    rsp,0x8
  40b094:	xor    eax,eax
  40b096:	lea    rsi,[rip+0x2d2bf]        # 43835c <_IO_stdin_used@@Base+0x935c>
  40b09d:	mov    rdx,QWORD PTR [rsp+0x8]
  40b0a2:	mov    rcx,r8
  40b0a5:	lea    r8,[rsp+0x48]
  40b0aa:	mov    r9,QWORD PTR [rsp+0x10]
  40b0af:	push   r15
  40b0b1:	lea    rbx,[rsp+0x350]
  40b0b9:	push   rbx
  40b0ba:	push   r10
  40b0bc:	jmp    40b131 <__flatcc_fb_gen_c_reader@@Base+0x1e11>
  40b0be:	mov    rdx,QWORD PTR [rsp]
  40b0c2:	mov    rdi,QWORD PTR [rdx+0xd0]
  40b0c9:	mov    r8,QWORD PTR [r14+0x88]
  40b0d0:	mov    eax,0x0
  40b0d5:	lea    rsi,[rip+0x2d178]        # 438254 <_IO_stdin_used@@Base+0x9254>
  40b0dc:	mov    rcx,rdx
  40b0df:	lea    r9,[rsp+0x40]
  40b0e4:	push   r15
  40b0e6:	push   rbx
  40b0e7:	push   QWORD PTR [rsp+0x28]
  40b0eb:	push   QWORD PTR [rsp+0x20]
  40b0ef:	call   406180 <fprintf@plt>
  40b0f4:	add    rsp,0x20
  40b0f8:	cmp    BYTE PTR [r14+0x70],0x0
  40b0fd:	jns    40b170 <__flatcc_fb_gen_c_reader@@Base+0x1e50>
  40b0ff:	jmp    40b141 <__flatcc_fb_gen_c_reader@@Base+0x1e21>
  40b101:	mov    rdx,QWORD PTR [rsp]
  40b105:	mov    rdi,QWORD PTR [rdx+0xd0]
  40b10c:	mov    rcx,QWORD PTR [r14+0x88]
  40b113:	sub    rsp,0x8
  40b117:	xor    eax,eax
  40b119:	lea    rsi,[rip+0x2d043]        # 438163 <_IO_stdin_used@@Base+0x9163>
  40b120:	lea    r8,[rsp+0x48]
  40b125:	mov    r9,QWORD PTR [rsp+0x10]
  40b12a:	push   r15
  40b12c:	push   rbx
  40b12d:	push   QWORD PTR [rsp+0x30]
  40b131:	call   406180 <fprintf@plt>
  40b136:	add    rsp,0x20
  40b13a:	cmp    BYTE PTR [r14+0x70],0x0
  40b13f:	jns    40b170 <__flatcc_fb_gen_c_reader@@Base+0x1e50>
  40b141:	mov    rcx,QWORD PTR [r13+0x0]
  40b145:	mov    esi,0x54
  40b14a:	mov    edx,0x1
  40b14f:	lea    rdi,[rip+0x2cb97]        # 437ced <_IO_stdin_used@@Base+0x8ced>
  40b156:	call   406220 <fwrite@plt>
  40b15b:	mov    DWORD PTR [rsp+0x14],0x1
  40b163:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b16d:	nop    DWORD PTR [rax]
  40b170:	mov    r14,QWORD PTR [r14]
  40b173:	test   r14,r14
  40b176:	jne    40a8f0 <__flatcc_fb_gen_c_reader@@Base+0x15d0>
  40b17c:	mov    rbx,QWORD PTR [rsp+0x20]
  40b181:	lea    r14,[rsp+0x40]
  40b186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b190:	mov    rbx,QWORD PTR [rbx]
  40b193:	test   rbx,rbx
  40b196:	jne    40a420 <__flatcc_fb_gen_c_reader@@Base+0x1100>
  40b19c:	mov    rbx,QWORD PTR [rsp]
  40b1a0:	mov    rsi,QWORD PTR [rbx+0xd0]
  40b1a7:	mov    edi,0xa
  40b1ac:	call   406120 <fputc@plt>
  40b1b1:	mov    rax,QWORD PTR [rbx+0xe0]
  40b1b8:	cmp    DWORD PTR [rax+0xac],0x0
  40b1bf:	je     40b1db <__flatcc_fb_gen_c_reader@@Base+0x1ebb>
  40b1c1:	mov    rcx,QWORD PTR [r13+0x0]
  40b1c5:	lea    rdi,[rip+0x2b903]        # 436acf <_IO_stdin_used@@Base+0x7acf>
  40b1cc:	mov    esi,0x24
  40b1d1:	mov    edx,0x1
  40b1d6:	call   406220 <fwrite@plt>
  40b1db:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b1e2:	mov    rax,QWORD PTR [rbx+0xd8]
  40b1e9:	mov    rdx,QWORD PTR [rax+0x118]
  40b1f0:	lea    rsi,[rip+0x2d34d]        # 438544 <_IO_stdin_used@@Base+0x9544>
  40b1f7:	xor    eax,eax
  40b1f9:	call   406180 <fprintf@plt>
  40b1fe:	xor    eax,eax
  40b200:	lea    rsp,[rbp-0x28]
  40b204:	pop    rbx
  40b205:	pop    r12
  40b207:	pop    r13
  40b209:	pop    r14
  40b20b:	pop    r15
  40b20d:	pop    rbp
  40b20e:	ret    
  40b20f:	mov    rax,QWORD PTR [rip+0x47de2]        # 452ff8 <stderr@GLIBC_2.2.5>
  40b216:	mov    rdi,QWORD PTR [rax]
  40b219:	lea    rsi,[rip+0x259f8]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40b220:	lea    rbx,[rip+0x2c1a3]        # 4373ca <_IO_stdin_used@@Base+0x83ca>
  40b227:	lea    r8,[rip+0x2c1ff]        # 43742d <_IO_stdin_used@@Base+0x842d>
  40b22e:	mov    ecx,0x8d
  40b233:	xor    eax,eax
  40b235:	mov    rdx,rbx
  40b238:	call   406180 <fprintf@plt>
  40b23d:	lea    rdi,[rip+0x3693b]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40b244:	lea    rcx,[rip+0x2c219]        # 437464 <_IO_stdin_used@@Base+0x8464>
  40b24b:	mov    edx,0x8d
  40b250:	mov    rsi,rbx
  40b253:	call   406100 <__assert_fail@plt>
  40b258:	mov    rax,QWORD PTR [rsp+0x28]
  40b25d:	mov    rdi,QWORD PTR [rax]
  40b260:	lea    rsi,[rip+0x2c616]        # 43787d <_IO_stdin_used@@Base+0x887d>
  40b267:	lea    rdx,[rip+0x2c617]        # 437885 <_IO_stdin_used@@Base+0x8885>
  40b26e:	xor    eax,eax
  40b270:	call   406180 <fprintf@plt>
  40b275:	mov    rax,QWORD PTR [rip+0x47d7c]        # 452ff8 <stderr@GLIBC_2.2.5>
  40b27c:	mov    rdi,QWORD PTR [rax]
  40b27f:	lea    rsi,[rip+0x25992]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40b286:	lea    rbx,[rip+0x25996]        # 430c23 <_IO_stdin_used@@Base+0x1c23>
  40b28d:	lea    r8,[rip+0x2c199]        # 43742d <_IO_stdin_used@@Base+0x842d>
  40b294:	mov    ecx,0x405
  40b299:	xor    eax,eax
  40b29b:	mov    rdx,rbx
  40b29e:	call   406180 <fprintf@plt>
  40b2a3:	lea    rdi,[rip+0x368d5]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40b2aa:	lea    rcx,[rip+0x2c2c1]        # 437572 <_IO_stdin_used@@Base+0x8572>
  40b2b1:	mov    edx,0x405
  40b2b6:	mov    rsi,rbx
  40b2b9:	call   406100 <__assert_fail@plt>
  40b2be:	mov    rax,QWORD PTR [rip+0x47d33]        # 452ff8 <stderr@GLIBC_2.2.5>
  40b2c5:	mov    rdi,QWORD PTR [rax]
  40b2c8:	lea    rsi,[rip+0x25949]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40b2cf:	lea    rbx,[rip+0x2594d]        # 430c23 <_IO_stdin_used@@Base+0x1c23>
  40b2d6:	lea    r8,[rip+0x2d0b6]        # 438393 <_IO_stdin_used@@Base+0x9393>
  40b2dd:	mov    ecx,0x63f
  40b2e2:	xor    eax,eax
  40b2e4:	mov    rdx,rbx
  40b2e7:	call   406180 <fprintf@plt>
  40b2ec:	lea    rdi,[rip+0x3688c]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40b2f3:	lea    rcx,[rip+0x2ca94]        # 437d8e <_IO_stdin_used@@Base+0x8d8e>
  40b2fa:	mov    edx,0x63f
  40b2ff:	mov    rsi,rbx
  40b302:	call   406100 <__assert_fail@plt>
  40b307:	lea    rdi,[rip+0x2c4ea]        # 4377f8 <_IO_stdin_used@@Base+0x87f8>
  40b30e:	lea    rsi,[rip+0x2590e]        # 430c23 <_IO_stdin_used@@Base+0x1c23>
  40b315:	lea    rcx,[rip+0x2c256]        # 437572 <_IO_stdin_used@@Base+0x8572>
  40b31c:	mov    edx,0x3fa
  40b321:	call   406100 <__assert_fail@plt>
  40b326:	mov    rax,QWORD PTR [rip+0x47ccb]        # 452ff8 <stderr@GLIBC_2.2.5>
  40b32d:	mov    rdi,QWORD PTR [rax]
  40b330:	lea    rsi,[rip+0x258e1]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40b337:	lea    rbx,[rip+0x2c08c]        # 4373ca <_IO_stdin_used@@Base+0x83ca>
  40b33e:	lea    r8,[rip+0x2c0e8]        # 43742d <_IO_stdin_used@@Base+0x842d>
  40b345:	mov    ecx,0x60
  40b34a:	xor    eax,eax
  40b34c:	mov    rdx,rbx
  40b34f:	call   406180 <fprintf@plt>
  40b354:	lea    rdi,[rip+0x36824]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40b35b:	lea    rcx,[rip+0x2c9fb]        # 437d5d <_IO_stdin_used@@Base+0x8d5d>
  40b362:	mov    edx,0x60
  40b367:	mov    rsi,rbx
  40b36a:	call   406100 <__assert_fail@plt>
  40b36f:	lea    rdi,[rip+0x2c1dc]        # 437552 <_IO_stdin_used@@Base+0x8552>
  40b376:	lea    rsi,[rip+0x258a6]        # 430c23 <_IO_stdin_used@@Base+0x1c23>
  40b37d:	lea    rcx,[rip+0x2c1ee]        # 437572 <_IO_stdin_used@@Base+0x8572>
  40b384:	mov    edx,0x3a8
  40b389:	vzeroupper 
  40b38c:	call   406100 <__assert_fail@plt>
  40b391:	mov    rax,QWORD PTR [rip+0x47c60]        # 452ff8 <stderr@GLIBC_2.2.5>
  40b398:	mov    rdi,QWORD PTR [rax]
  40b39b:	lea    rsi,[rip+0x25876]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40b3a2:	lea    rbx,[rip+0x2587a]        # 430c23 <_IO_stdin_used@@Base+0x1c23>
  40b3a9:	lea    r8,[rip+0x258dd]        # 430c8d <_IO_stdin_used@@Base+0x1c8d>
  40b3b0:	mov    ecx,0x688
  40b3b5:	xor    eax,eax
  40b3b7:	mov    rdx,rbx
  40b3ba:	call   406180 <fprintf@plt>
  40b3bf:	lea    rdi,[rip+0x367b9]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40b3c6:	lea    rcx,[rip+0x258ec]        # 430cb9 <_IO_stdin_used@@Base+0x1cb9>
  40b3cd:	mov    edx,0x688
  40b3d2:	mov    rsi,rbx
  40b3d5:	call   406100 <__assert_fail@plt>
  40b3da:	mov    rax,QWORD PTR [rip+0x47c17]        # 452ff8 <stderr@GLIBC_2.2.5>
  40b3e1:	mov    rdi,QWORD PTR [rax]
  40b3e4:	lea    rsi,[rip+0x2582d]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40b3eb:	lea    rbx,[rip+0x25831]        # 430c23 <_IO_stdin_used@@Base+0x1c23>
  40b3f2:	lea    r8,[rip+0x2ced8]        # 4382d1 <_IO_stdin_used@@Base+0x92d1>
  40b3f9:	mov    ecx,0x630
  40b3fe:	xor    eax,eax
  40b400:	mov    rdx,rbx
  40b403:	call   406180 <fprintf@plt>
  40b408:	lea    rdi,[rip+0x36770]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40b40f:	lea    rcx,[rip+0x2c978]        # 437d8e <_IO_stdin_used@@Base+0x8d8e>
  40b416:	mov    edx,0x630
  40b41b:	mov    rsi,rbx
  40b41e:	call   406100 <__assert_fail@plt>
  40b423:	mov    rax,QWORD PTR [rip+0x47bce]        # 452ff8 <stderr@GLIBC_2.2.5>
  40b42a:	mov    rdi,QWORD PTR [rax]
  40b42d:	lea    rsi,[rip+0x257e4]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40b434:	lea    rbx,[rip+0x257e8]        # 430c23 <_IO_stdin_used@@Base+0x1c23>
  40b43b:	lea    r8,[rip+0x2ce46]        # 438288 <_IO_stdin_used@@Base+0x9288>
  40b442:	mov    ecx,0x620
  40b447:	xor    eax,eax
  40b449:	mov    rdx,rbx
  40b44c:	call   406180 <fprintf@plt>
  40b451:	lea    rdi,[rip+0x36727]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40b458:	lea    rcx,[rip+0x2c92f]        # 437d8e <_IO_stdin_used@@Base+0x8d8e>
  40b45f:	mov    edx,0x620
  40b464:	mov    rsi,rbx
  40b467:	call   406100 <__assert_fail@plt>
  40b46c:	lea    rdi,[rip+0x2c134]        # 4375a7 <_IO_stdin_used@@Base+0x85a7>
  40b473:	lea    rsi,[rip+0x257a9]        # 430c23 <_IO_stdin_used@@Base+0x1c23>
  40b47a:	lea    rcx,[rip+0x2c0f1]        # 437572 <_IO_stdin_used@@Base+0x8572>
  40b481:	mov    edx,0x3a9
  40b486:	vzeroupper 
  40b489:	call   406100 <__assert_fail@plt>
  40b48e:	lea    rdi,[rip+0x2c132]        # 4375c7 <_IO_stdin_used@@Base+0x85c7>
  40b495:	lea    rsi,[rip+0x25787]        # 430c23 <_IO_stdin_used@@Base+0x1c23>
  40b49c:	lea    rcx,[rip+0x2c0cf]        # 437572 <_IO_stdin_used@@Base+0x8572>
  40b4a3:	mov    edx,0x3aa
  40b4a8:	vzeroupper 
  40b4ab:	call   406100 <__assert_fail@plt>
  40b4b0:	mov    rax,QWORD PTR [rip+0x47b41]        # 452ff8 <stderr@GLIBC_2.2.5>
  40b4b7:	mov    rdi,QWORD PTR [rax]
  40b4ba:	lea    rsi,[rip+0x25757]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40b4c1:	lea    rbx,[rip+0x2bf02]        # 4373ca <_IO_stdin_used@@Base+0x83ca>
  40b4c8:	lea    r8,[rip+0x2bf5e]        # 43742d <_IO_stdin_used@@Base+0x842d>
  40b4cf:	mov    ecx,0xba
  40b4d4:	xor    eax,eax
  40b4d6:	mov    rdx,rbx
  40b4d9:	call   406180 <fprintf@plt>
  40b4de:	lea    rdi,[rip+0x3669a]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40b4e5:	lea    rcx,[rip+0x2cf42]        # 43842e <_IO_stdin_used@@Base+0x942e>
  40b4ec:	mov    edx,0xba
  40b4f1:	mov    rsi,rbx
  40b4f4:	call   406100 <__assert_fail@plt>
  40b4f9:	mov    rax,QWORD PTR [rip+0x47af8]        # 452ff8 <stderr@GLIBC_2.2.5>
  40b500:	mov    rdi,QWORD PTR [rax]
  40b503:	lea    rsi,[rip+0x2570e]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40b50a:	lea    rbx,[rip+0x25712]        # 430c23 <_IO_stdin_used@@Base+0x1c23>
  40b511:	lea    r8,[rip+0x2cf5b]        # 438473 <_IO_stdin_used@@Base+0x9473>
  40b518:	mov    ecx,0x53b
  40b51d:	xor    eax,eax
  40b51f:	mov    rdx,rbx
  40b522:	vzeroupper 
  40b525:	call   406180 <fprintf@plt>
  40b52a:	lea    rdi,[rip+0x3664e]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40b531:	lea    rcx,[rip+0x2cf6f]        # 4384a7 <_IO_stdin_used@@Base+0x94a7>
  40b538:	mov    edx,0x53b
  40b53d:	mov    rsi,rbx
  40b540:	call   406100 <__assert_fail@plt>
  40b545:	lea    rdi,[rip+0x2cfac]        # 4384f8 <_IO_stdin_used@@Base+0x94f8>
  40b54c:	lea    rsi,[rip+0x256d0]        # 430c23 <_IO_stdin_used@@Base+0x1c23>
  40b553:	lea    rcx,[rip+0x2cf4d]        # 4384a7 <_IO_stdin_used@@Base+0x94a7>
  40b55a:	mov    edx,0x53f
  40b55f:	call   406100 <__assert_fail@plt>
  40b564:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b56e:	xchg   ax,ax
  40b570:	push   rbp
  40b571:	mov    rbp,rsp
  40b574:	push   r15
  40b576:	push   r14
  40b578:	push   rbx
  40b579:	and    rsp,0xffffffffffffffe0
  40b57d:	sub    rsp,0x100
  40b584:	vxorps xmm0,xmm0,xmm0
  40b588:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40b591:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40b59a:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40b5a3:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40b5a9:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40b5af:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40b5b5:	vmovaps YMMWORD PTR [rsp],ymm0
  40b5ba:	mov    QWORD PTR [rsp+0xe0],0x0
  40b5c6:	movzx  eax,WORD PTR [rsi+0x10]
  40b5ca:	cmp    eax,0x2
  40b5cd:	jae    40b6f4 <__flatcc_fb_gen_c_reader@@Base+0x23d4>
  40b5d3:	mov    rbx,rsi
  40b5d6:	mov    r15,rdi
  40b5d9:	mov    rdi,QWORD PTR [rsi+0x18]
  40b5dd:	mov    rdx,rsp
  40b5e0:	vzeroupper 
  40b5e3:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40b5e8:	movzx  eax,WORD PTR [rbx+0x10]
  40b5ec:	cmp    eax,0x1
  40b5ef:	jne    40b618 <__flatcc_fb_gen_c_reader@@Base+0x22f8>
  40b5f1:	cmp    QWORD PTR [rbx+0xb8],0x0
  40b5f9:	mov    rdi,QWORD PTR [r15+0xd0]
  40b600:	je     40b669 <__flatcc_fb_gen_c_reader@@Base+0x2349>
  40b602:	lea    rsi,[rip+0x2b8eb]        # 436ef4 <_IO_stdin_used@@Base+0x7ef4>
  40b609:	mov    rdx,rsp
  40b60c:	xor    eax,eax
  40b60e:	mov    rcx,rdx
  40b611:	call   406180 <fprintf@plt>
  40b616:	jmp    40b67a <__flatcc_fb_gen_c_reader@@Base+0x235a>
  40b618:	mov    rdi,QWORD PTR [r15+0xd0]
  40b61f:	lea    rsi,[rip+0x2b96d]        # 436f93 <_IO_stdin_used@@Base+0x7f93>
  40b626:	mov    rbx,rsp
  40b629:	xor    eax,eax
  40b62b:	mov    rdx,rbx
  40b62e:	mov    rcx,rbx
  40b631:	call   406180 <fprintf@plt>
  40b636:	mov    rdi,QWORD PTR [r15+0xd0]
  40b63d:	lea    rsi,[rip+0x2b97b]        # 436fbf <_IO_stdin_used@@Base+0x7fbf>
  40b644:	xor    eax,eax
  40b646:	mov    rdx,r15
  40b649:	mov    rcx,rbx
  40b64c:	call   406180 <fprintf@plt>
  40b651:	mov    rdi,QWORD PTR [r15+0xd0]
  40b658:	lea    rsi,[rip+0x2b986]        # 436fe5 <_IO_stdin_used@@Base+0x7fe5>
  40b65f:	xor    eax,eax
  40b661:	mov    rdx,r15
  40b664:	mov    rcx,rbx
  40b667:	jmp    40b6e4 <__flatcc_fb_gen_c_reader@@Base+0x23c4>
  40b669:	lea    rsi,[rip+0x2b85d]        # 436ecd <_IO_stdin_used@@Base+0x7ecd>
  40b670:	mov    rdx,rsp
  40b673:	xor    eax,eax
  40b675:	call   406180 <fprintf@plt>
  40b67a:	mov    rdi,QWORD PTR [r15+0xd0]
  40b681:	lea    rsi,[rip+0x2b885]        # 436f0d <_IO_stdin_used@@Base+0x7f0d>
  40b688:	mov    r14,rsp
  40b68b:	xor    eax,eax
  40b68d:	mov    rdx,r14
  40b690:	mov    rcx,r14
  40b693:	call   406180 <fprintf@plt>
  40b698:	mov    rdi,QWORD PTR [r15+0xd0]
  40b69f:	lea    rsi,[rip+0x2b889]        # 436f2f <_IO_stdin_used@@Base+0x7f2f>
  40b6a6:	xor    eax,eax
  40b6a8:	mov    rdx,r14
  40b6ab:	mov    rcx,r14
  40b6ae:	call   406180 <fprintf@plt>
  40b6b3:	mov    rdi,QWORD PTR [r15+0xd0]
  40b6ba:	lea    rsi,[rip+0x2b892]        # 436f53 <_IO_stdin_used@@Base+0x7f53>
  40b6c1:	xor    eax,eax
  40b6c3:	mov    rdx,r14
  40b6c6:	mov    rcx,r14
  40b6c9:	call   406180 <fprintf@plt>
  40b6ce:	mov    rdi,QWORD PTR [r15+0xd0]
  40b6d5:	lea    rsi,[rip+0x2b896]        # 436f72 <_IO_stdin_used@@Base+0x7f72>
  40b6dc:	xor    eax,eax
  40b6de:	mov    rdx,r14
  40b6e1:	mov    rcx,r14
  40b6e4:	call   406180 <fprintf@plt>
  40b6e9:	lea    rsp,[rbp-0x18]
  40b6ed:	pop    rbx
  40b6ee:	pop    r14
  40b6f0:	pop    r15
  40b6f2:	pop    rbp
  40b6f3:	ret    
  40b6f4:	lea    rdi,[rip+0x2b755]        # 436e50 <_IO_stdin_used@@Base+0x7e50>
  40b6fb:	lea    rsi,[rip+0x25521]        # 430c23 <_IO_stdin_used@@Base+0x1c23>
  40b702:	lea    rcx,[rip+0x2b789]        # 436e92 <_IO_stdin_used@@Base+0x7e92>
  40b709:	mov    edx,0x35f
  40b70e:	vzeroupper 
  40b711:	call   406100 <__assert_fail@plt>
  40b716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b720:	push   rbp
  40b721:	mov    rbp,rsp
  40b724:	push   r15
  40b726:	push   r14
  40b728:	push   r13
  40b72a:	push   r12
  40b72c:	push   rbx
  40b72d:	and    rsp,0xffffffffffffffe0
  40b731:	sub    rsp,0x1c0
  40b738:	vxorps xmm0,xmm0,xmm0
  40b73c:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  40b745:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40b74e:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40b757:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40b760:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40b769:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40b76f:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40b775:	mov    QWORD PTR [rsp+0x120],0x0
  40b781:	mov    eax,DWORD PTR [rsi+0x10]
  40b784:	lea    ecx,[rax-0x3]
  40b787:	movzx  ecx,cx
  40b78a:	cmp    ecx,0x2
  40b78d:	jae    40bcba <__flatcc_fb_gen_c_reader@@Base+0x299a>
  40b793:	mov    rbx,rsi
  40b796:	movzx  ecx,WORD PTR [rsi+0x58]
  40b79a:	cmp    ecx,0x8
  40b79d:	jne    40bcdc <__flatcc_fb_gen_c_reader@@Base+0x29bc>
  40b7a3:	mov    r13,rdi
  40b7a6:	mov    ecx,DWORD PTR [rbx+0x48]
  40b7a9:	cmp    ecx,0x5
  40b7ac:	lea    r12,[rip+0x25580]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  40b7b3:	cmove  r12,rdi
  40b7b7:	add    ecx,0xffffffff
  40b7ba:	cmp    ecx,0xb
  40b7bd:	jae    40bcfe <__flatcc_fb_gen_c_reader@@Base+0x29de>
  40b7c3:	movsxd rcx,ecx
  40b7c6:	lea    rdx,[rip+0x47313]        # 452ae0 <fb_value_set_deleted@@Base+0x6880>
  40b7cd:	mov    rcx,QWORD PTR [rdx+rcx*8]
  40b7d1:	mov    QWORD PTR [rsp+0x38],rcx
  40b7d6:	mov    ecx,DWORD PTR [rbx+0xb8]
  40b7dc:	shl    ecx,0x3
  40b7df:	mov    DWORD PTR [rsp+0x14],ecx
  40b7e3:	movzx  eax,ax
  40b7e6:	mov    DWORD PTR [rsp+0x10],eax
  40b7ea:	cmp    eax,0x3
  40b7ed:	lea    rax,[rip+0x2b937]        # 43712b <_IO_stdin_used@@Base+0x812b>
  40b7f4:	lea    rcx,[rip+0x2c053]        # 43784e <_IO_stdin_used@@Base+0x884e>
  40b7fb:	cmovne rcx,rax
  40b7ff:	mov    QWORD PTR [rsp+0x20],rcx
  40b804:	mov    rdi,QWORD PTR [rbx+0x18]
  40b808:	lea    rdx,[rsp+0x40]
  40b80d:	mov    rsi,rbx
  40b810:	vzeroupper 
  40b813:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40b818:	mov    r14,QWORD PTR [rbx+0x40]
  40b81c:	lea    r15,[r13+0xd0]
  40b823:	test   r14,r14
  40b826:	mov    QWORD PTR [rsp+0x18],rbx
  40b82b:	je     40b910 <__flatcc_fb_gen_c_reader@@Base+0x25f0>
  40b831:	mov    QWORD PTR [rsp+0x28],r12
  40b836:	mov    QWORD PTR [rsp+0x30],r13
  40b83b:	mov    rax,QWORD PTR [r14+0x8]
  40b83f:	cmp    QWORD PTR [rax+0x10],0x0
  40b844:	je     40b85e <__flatcc_fb_gen_c_reader@@Base+0x253e>
  40b846:	mov    rdi,QWORD PTR [r15]
  40b849:	lea    rsi,[rip+0x2bc43]        # 437493 <_IO_stdin_used@@Base+0x8493>
  40b850:	lea    rdx,[rip+0x254dc]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  40b857:	xor    eax,eax
  40b859:	call   406180 <fprintf@plt>
  40b85e:	mov    rdi,QWORD PTR [r15]
  40b861:	mov    rax,QWORD PTR [r14+0x8]
  40b865:	mov    edx,DWORD PTR [rax+0x8]
  40b868:	mov    rcx,QWORD PTR [rax]
  40b86b:	lea    rsi,[rip+0x3631d]        # 441b8f <_IO_stdin_used@@Base+0x12b8f>
  40b872:	xor    eax,eax
  40b874:	call   406180 <fprintf@plt>
  40b879:	mov    r12,QWORD PTR [r14]
  40b87c:	test   r12,r12
  40b87f:	je     40b8e8 <__flatcc_fb_gen_c_reader@@Base+0x25c8>
  40b881:	mov    rax,QWORD PTR [r14+0x8]
  40b885:	mov    rax,QWORD PTR [rax+0x10]
  40b889:	lea    rbx,[rip+0x362ff]        # 441b8f <_IO_stdin_used@@Base+0x12b8f>
  40b890:	lea    r13,[rip+0x2bc03]        # 43749a <_IO_stdin_used@@Base+0x849a>
  40b897:	lea    r14,[rip+0x25495]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  40b89e:	xchg   ax,ax
  40b8a0:	mov    rcx,QWORD PTR [r12+0x8]
  40b8a5:	cmp    rax,QWORD PTR [rcx+0x10]
  40b8a9:	je     40b8bb <__flatcc_fb_gen_c_reader@@Base+0x259b>
  40b8ab:	mov    rdi,QWORD PTR [r15]
  40b8ae:	xor    eax,eax
  40b8b0:	mov    rsi,r13
  40b8b3:	mov    rdx,r14
  40b8b6:	call   406180 <fprintf@plt>
  40b8bb:	mov    rdi,QWORD PTR [r15]
  40b8be:	mov    rax,QWORD PTR [r12+0x8]
  40b8c3:	mov    edx,DWORD PTR [rax+0x8]
  40b8c6:	mov    rcx,QWORD PTR [rax]
  40b8c9:	xor    eax,eax
  40b8cb:	mov    rsi,rbx
  40b8ce:	call   406180 <fprintf@plt>
  40b8d3:	mov    rax,QWORD PTR [r12+0x8]
  40b8d8:	mov    rcx,QWORD PTR [r12]
  40b8dc:	mov    rax,QWORD PTR [rax+0x10]
  40b8e0:	mov    r12,rcx
  40b8e3:	test   rcx,rcx
  40b8e6:	jne    40b8a0 <__flatcc_fb_gen_c_reader@@Base+0x2580>
  40b8e8:	mov    rcx,QWORD PTR [r15]
  40b8eb:	lea    rdi,[rip+0x3a77a]        # 44606c <_IO_stdin_used@@Base+0x1706c>
  40b8f2:	mov    esi,0x4
  40b8f7:	mov    edx,0x1
  40b8fc:	call   406220 <fwrite@plt>
  40b901:	mov    rbx,QWORD PTR [rsp+0x18]
  40b906:	mov    r13,QWORD PTR [rsp+0x30]
  40b90b:	mov    r12,QWORD PTR [rsp+0x28]
  40b910:	mov    rdi,QWORD PTR [r13+0xd0]
  40b917:	lea    rsi,[rip+0x2b818]        # 437136 <_IO_stdin_used@@Base+0x8136>
  40b91e:	lea    r14,[rsp+0x40]
  40b923:	xor    eax,eax
  40b925:	mov    rdx,r12
  40b928:	mov    rcx,QWORD PTR [rsp+0x38]
  40b92d:	mov    r8,r14
  40b930:	mov    r12,QWORD PTR [rsp+0x20]
  40b935:	mov    r9,r12
  40b938:	call   406180 <fprintf@plt>
  40b93d:	mov    rdi,QWORD PTR [r13+0xd0]
  40b944:	mov    eax,DWORD PTR [rsp+0x14]
  40b948:	mov    DWORD PTR [rsp],eax
  40b94b:	lea    rsi,[rip+0x2b7fb]        # 43714d <_IO_stdin_used@@Base+0x814d>
  40b952:	xor    eax,eax
  40b954:	mov    rdx,r13
  40b957:	mov    rcx,r14
  40b95a:	mov    r8,r14
  40b95d:	mov    r9,r12
  40b960:	call   406180 <fprintf@plt>
  40b965:	cmp    DWORD PTR [rsp+0x10],0x3
  40b96a:	je     40b98c <__flatcc_fb_gen_c_reader@@Base+0x266c>
  40b96c:	mov    rdi,QWORD PTR [r13+0xd0]
  40b973:	lea    rsi,[rip+0x2b7fd]        # 437177 <_IO_stdin_used@@Base+0x8177>
  40b97a:	lea    r8,[rsp+0x40]
  40b97f:	xor    eax,eax
  40b981:	mov    rdx,r13
  40b984:	mov    rcx,r13
  40b987:	call   406180 <fprintf@plt>
  40b98c:	mov    r13,QWORD PTR [rbx+0x28]
  40b990:	test   r13,r13
  40b993:	je     40baca <__flatcc_fb_gen_c_reader@@Base+0x27aa>
  40b999:	lea    r14,[rip+0x361ef]        # 441b8f <_IO_stdin_used@@Base+0x12b8f>
  40b9a0:	mov    r12,QWORD PTR [r13+0x68]
  40b9a4:	test   r12,r12
  40b9a7:	je     40ba65 <__flatcc_fb_gen_c_reader@@Base+0x2745>
  40b9ad:	mov    rax,QWORD PTR [r12+0x8]
  40b9b2:	cmp    QWORD PTR [rax+0x10],0x0
  40b9b7:	je     40b9d1 <__flatcc_fb_gen_c_reader@@Base+0x26b1>
  40b9b9:	mov    rdi,QWORD PTR [r15]
  40b9bc:	xor    eax,eax
  40b9be:	lea    rsi,[rip+0x2bace]        # 437493 <_IO_stdin_used@@Base+0x8493>
  40b9c5:	lea    rdx,[rip+0x25367]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  40b9cc:	call   406180 <fprintf@plt>
  40b9d1:	mov    rdi,QWORD PTR [r15]
  40b9d4:	mov    rax,QWORD PTR [r12+0x8]
  40b9d9:	mov    edx,DWORD PTR [rax+0x8]
  40b9dc:	mov    rcx,QWORD PTR [rax]
  40b9df:	xor    eax,eax
  40b9e1:	mov    rsi,r14
  40b9e4:	call   406180 <fprintf@plt>
  40b9e9:	mov    rbx,QWORD PTR [r12]
  40b9ed:	test   rbx,rbx
  40b9f0:	je     40ba4c <__flatcc_fb_gen_c_reader@@Base+0x272c>
  40b9f2:	mov    rax,QWORD PTR [r12+0x8]
  40b9f7:	mov    rax,QWORD PTR [rax+0x10]
  40b9fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ba00:	mov    rcx,QWORD PTR [rbx+0x8]
  40ba04:	cmp    rax,QWORD PTR [rcx+0x10]
  40ba08:	je     40ba22 <__flatcc_fb_gen_c_reader@@Base+0x2702>
  40ba0a:	mov    rdi,QWORD PTR [r15]
  40ba0d:	xor    eax,eax
  40ba0f:	lea    rsi,[rip+0x2ba84]        # 43749a <_IO_stdin_used@@Base+0x849a>
  40ba16:	lea    rdx,[rip+0x25316]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  40ba1d:	call   406180 <fprintf@plt>
  40ba22:	mov    rdi,QWORD PTR [r15]
  40ba25:	mov    rax,QWORD PTR [rbx+0x8]
  40ba29:	mov    edx,DWORD PTR [rax+0x8]
  40ba2c:	mov    rcx,QWORD PTR [rax]
  40ba2f:	xor    eax,eax
  40ba31:	mov    rsi,r14
  40ba34:	call   406180 <fprintf@plt>
  40ba39:	mov    rax,QWORD PTR [rbx+0x8]
  40ba3d:	mov    rcx,QWORD PTR [rbx]
  40ba40:	mov    rax,QWORD PTR [rax+0x10]
  40ba44:	mov    rbx,rcx
  40ba47:	test   rcx,rcx
  40ba4a:	jne    40ba00 <__flatcc_fb_gen_c_reader@@Base+0x26e0>
  40ba4c:	mov    rcx,QWORD PTR [r15]
  40ba4f:	mov    esi,0x4
  40ba54:	mov    edx,0x1
  40ba59:	lea    rdi,[rip+0x3a60c]        # 44606c <_IO_stdin_used@@Base+0x1706c>
  40ba60:	call   406220 <fwrite@plt>
  40ba65:	mov    rax,QWORD PTR [r13+0x8]
  40ba69:	mov    ecx,DWORD PTR [rax+0x8]
  40ba6c:	mov    DWORD PTR [rsp+0x14],ecx
  40ba70:	mov    rbx,QWORD PTR [rax]
  40ba73:	mov    rax,QWORD PTR [rsp+0x18]
  40ba78:	mov    edi,DWORD PTR [rax+0x48]
  40ba7b:	lea    rsi,[r13+0x48]
  40ba7f:	lea    r12,[rsp+0x140]
  40ba87:	mov    rdx,r12
  40ba8a:	call   40bd50 <__flatcc_fb_gen_c_reader@@Base+0x2a30>
  40ba8f:	mov    rdi,QWORD PTR [r15]
  40ba92:	mov    QWORD PTR [rsp+0x8],r12
  40ba97:	mov    rax,QWORD PTR [rsp+0x20]
  40ba9c:	mov    QWORD PTR [rsp],rax
  40baa0:	xor    eax,eax
  40baa2:	lea    rsi,[rip+0x2b6e8]        # 437191 <_IO_stdin_used@@Base+0x8191>
  40baa9:	lea    rdx,[rsp+0x40]
  40baae:	mov    ecx,DWORD PTR [rsp+0x14]
  40bab2:	mov    r8,rbx
  40bab5:	mov    r9,rdx
  40bab8:	call   406180 <fprintf@plt>
  40babd:	mov    r13,QWORD PTR [r13+0x0]
  40bac1:	test   r13,r13
  40bac4:	jne    40b9a0 <__flatcc_fb_gen_c_reader@@Base+0x2680>
  40baca:	mov    rsi,QWORD PTR [r15]
  40bacd:	mov    edi,0xa
  40bad2:	call   406120 <fputc@plt>
  40bad7:	mov    rdi,QWORD PTR [r15]
  40bada:	cmp    DWORD PTR [rsp+0x10],0x3
  40badf:	je     40bb08 <__flatcc_fb_gen_c_reader@@Base+0x27e8>
  40bae1:	lea    rsi,[rip+0x2b6c8]        # 4371b0 <_IO_stdin_used@@Base+0x81b0>
  40bae8:	lea    rdx,[rsp+0x40]
  40baed:	xor    eax,eax
  40baef:	mov    rcx,rdx
  40baf2:	call   406180 <fprintf@plt>
  40baf7:	mov    rcx,QWORD PTR [r15]
  40bafa:	lea    rdi,[rip+0x3ab2f]        # 446630 <_IO_stdin_used@@Base+0x17630>
  40bb01:	mov    esi,0x14
  40bb06:	jmp    40bb2d <__flatcc_fb_gen_c_reader@@Base+0x280d>
  40bb08:	lea    rsi,[rip+0x2b6e1]        # 4371f0 <_IO_stdin_used@@Base+0x81f0>
  40bb0f:	lea    rdx,[rsp+0x40]
  40bb14:	xor    eax,eax
  40bb16:	mov    rcx,rdx
  40bb19:	call   406180 <fprintf@plt>
  40bb1e:	mov    rcx,QWORD PTR [r15]
  40bb21:	lea    rdi,[rip+0x2b6fe]        # 437226 <_IO_stdin_used@@Base+0x8226>
  40bb28:	mov    esi,0x15
  40bb2d:	mov    edx,0x1
  40bb32:	call   406220 <fwrite@plt>
  40bb37:	mov    rax,QWORD PTR [rsp+0x18]
  40bb3c:	mov    rbx,QWORD PTR [rax+0x28]
  40bb40:	test   rbx,rbx
  40bb43:	je     40bb9c <__flatcc_fb_gen_c_reader@@Base+0x287c>
  40bb45:	lea    r14,[rip+0x2b724]        # 437270 <_IO_stdin_used@@Base+0x8270>
  40bb4c:	lea    r13,[rsp+0x40]
  40bb51:	lea    r12,[rip+0x2b6e4]        # 43723c <_IO_stdin_used@@Base+0x823c>
  40bb58:	nop    DWORD PTR [rax+rax*1+0x0]
  40bb60:	mov    rax,QWORD PTR [rbx+0x8]
  40bb64:	mov    ecx,DWORD PTR [rax+0x8]
  40bb67:	mov    r8,QWORD PTR [rax]
  40bb6a:	test   BYTE PTR [rbx+0x12],0x4
  40bb6e:	mov    rdi,QWORD PTR [r15]
  40bb71:	jne    40bb80 <__flatcc_fb_gen_c_reader@@Base+0x2860>
  40bb73:	mov    QWORD PTR [rsp],r8
  40bb77:	xor    eax,eax
  40bb79:	mov    rsi,r14
  40bb7c:	jmp    40bb89 <__flatcc_fb_gen_c_reader@@Base+0x2869>
  40bb7e:	xchg   ax,ax
  40bb80:	mov    QWORD PTR [rsp],r8
  40bb84:	xor    eax,eax
  40bb86:	mov    rsi,r12
  40bb89:	mov    rdx,r13
  40bb8c:	mov    r9d,ecx
  40bb8f:	call   406180 <fprintf@plt>
  40bb94:	mov    rbx,QWORD PTR [rbx]
  40bb97:	test   rbx,rbx
  40bb9a:	jne    40bb60 <__flatcc_fb_gen_c_reader@@Base+0x2840>
  40bb9c:	mov    rcx,QWORD PTR [r15]
  40bb9f:	lea    rdi,[rip+0x2b6ec]        # 437292 <_IO_stdin_used@@Base+0x8292>
  40bba6:	mov    esi,0x20
  40bbab:	mov    edx,0x1
  40bbb0:	call   406220 <fwrite@plt>
  40bbb5:	mov    rsi,QWORD PTR [r15]
  40bbb8:	mov    edi,0xa
  40bbbd:	call   406120 <fputc@plt>
  40bbc2:	mov    rdi,QWORD PTR [r15]
  40bbc5:	cmp    DWORD PTR [rsp+0x10],0x3
  40bbca:	je     40bbf3 <__flatcc_fb_gen_c_reader@@Base+0x28d3>
  40bbcc:	lea    rsi,[rip+0x2b6e0]        # 4372b3 <_IO_stdin_used@@Base+0x82b3>
  40bbd3:	lea    rdx,[rsp+0x40]
  40bbd8:	xor    eax,eax
  40bbda:	mov    rcx,rdx
  40bbdd:	call   406180 <fprintf@plt>
  40bbe2:	mov    rcx,QWORD PTR [r15]
  40bbe5:	lea    rdi,[rip+0x3aa44]        # 446630 <_IO_stdin_used@@Base+0x17630>
  40bbec:	mov    esi,0x14
  40bbf1:	jmp    40bc18 <__flatcc_fb_gen_c_reader@@Base+0x28f8>
  40bbf3:	lea    rsi,[rip+0x2b6f5]        # 4372ef <_IO_stdin_used@@Base+0x82ef>
  40bbfa:	lea    rdx,[rsp+0x40]
  40bbff:	xor    eax,eax
  40bc01:	mov    rcx,rdx
  40bc04:	call   406180 <fprintf@plt>
  40bc09:	mov    rcx,QWORD PTR [r15]
  40bc0c:	lea    rdi,[rip+0x2b613]        # 437226 <_IO_stdin_used@@Base+0x8226>
  40bc13:	mov    esi,0x15
  40bc18:	mov    edx,0x1
  40bc1d:	call   406220 <fwrite@plt>
  40bc22:	mov    rax,QWORD PTR [rsp+0x18]
  40bc27:	mov    rbx,QWORD PTR [rax+0x28]
  40bc2b:	test   rbx,rbx
  40bc2e:	je     40bc85 <__flatcc_fb_gen_c_reader@@Base+0x2965>
  40bc30:	lea    r14,[rip+0x2b71f]        # 437356 <_IO_stdin_used@@Base+0x8356>
  40bc37:	lea    r13,[rsp+0x40]
  40bc3c:	lea    r12,[rip+0x2b6e4]        # 437327 <_IO_stdin_used@@Base+0x8327>
  40bc43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc4d:	nop    DWORD PTR [rax]
  40bc50:	mov    rax,QWORD PTR [rbx+0x8]
  40bc54:	mov    ecx,DWORD PTR [rax+0x8]
  40bc57:	mov    r8,QWORD PTR [rax]
  40bc5a:	test   BYTE PTR [rbx+0x12],0x4
  40bc5e:	mov    rdi,QWORD PTR [r15]
  40bc61:	jne    40bc70 <__flatcc_fb_gen_c_reader@@Base+0x2950>
  40bc63:	xor    eax,eax
  40bc65:	mov    rsi,r14
  40bc68:	jmp    40bc75 <__flatcc_fb_gen_c_reader@@Base+0x2955>
  40bc6a:	nop    WORD PTR [rax+rax*1+0x0]
  40bc70:	xor    eax,eax
  40bc72:	mov    rsi,r12
  40bc75:	mov    rdx,r13
  40bc78:	call   406180 <fprintf@plt>
  40bc7d:	mov    rbx,QWORD PTR [rbx]
  40bc80:	test   rbx,rbx
  40bc83:	jne    40bc50 <__flatcc_fb_gen_c_reader@@Base+0x2930>
  40bc85:	mov    rcx,QWORD PTR [r15]
  40bc88:	lea    rdi,[rip+0x2b6e4]        # 437373 <_IO_stdin_used@@Base+0x8373>
  40bc8f:	mov    esi,0x1f
  40bc94:	mov    edx,0x1
  40bc99:	call   406220 <fwrite@plt>
  40bc9e:	mov    rsi,QWORD PTR [r15]
  40bca1:	mov    edi,0xa
  40bca6:	call   406120 <fputc@plt>
  40bcab:	lea    rsp,[rbp-0x28]
  40bcaf:	pop    rbx
  40bcb0:	pop    r12
  40bcb2:	pop    r13
  40bcb4:	pop    r14
  40bcb6:	pop    r15
  40bcb8:	pop    rbp
  40bcb9:	ret    
  40bcba:	lea    rdi,[rip+0x2b3d7]        # 437098 <_IO_stdin_used@@Base+0x8098>
  40bcc1:	lea    rsi,[rip+0x24f5b]        # 430c23 <_IO_stdin_used@@Base+0x1c23>
  40bcc8:	lea    rcx,[rip+0x2b409]        # 4370d8 <_IO_stdin_used@@Base+0x80d8>
  40bccf:	mov    edx,0x4b4
  40bcd4:	vzeroupper 
  40bcd7:	call   406100 <__assert_fail@plt>
  40bcdc:	lea    rdi,[rip+0x2b428]        # 43710b <_IO_stdin_used@@Base+0x810b>
  40bce3:	lea    rsi,[rip+0x24f39]        # 430c23 <_IO_stdin_used@@Base+0x1c23>
  40bcea:	lea    rcx,[rip+0x2b3e7]        # 4370d8 <_IO_stdin_used@@Base+0x80d8>
  40bcf1:	mov    edx,0x4b5
  40bcf6:	vzeroupper 
  40bcf9:	call   406100 <__assert_fail@plt>
  40bcfe:	mov    rax,QWORD PTR [rip+0x472f3]        # 452ff8 <stderr@GLIBC_2.2.5>
  40bd05:	mov    rdi,QWORD PTR [rax]
  40bd08:	lea    rsi,[rip+0x24f09]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40bd0f:	lea    rbx,[rip+0x2b6b4]        # 4373ca <_IO_stdin_used@@Base+0x83ca>
  40bd16:	lea    r8,[rip+0x2b710]        # 43742d <_IO_stdin_used@@Base+0x842d>
  40bd1d:	mov    ecx,0x8d
  40bd22:	xor    eax,eax
  40bd24:	mov    rdx,rbx
  40bd27:	vzeroupper 
  40bd2a:	call   406180 <fprintf@plt>
  40bd2f:	lea    rdi,[rip+0x35e49]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40bd36:	lea    rcx,[rip+0x2b727]        # 437464 <_IO_stdin_used@@Base+0x8464>
  40bd3d:	mov    edx,0x8d
  40bd42:	mov    rsi,rbx
  40bd45:	call   406100 <__assert_fail@plt>
  40bd4a:	nop    WORD PTR [rax+rax*1+0x0]
  40bd50:	push   rbx
  40bd51:	mov    eax,DWORD PTR [rsi+0x10]
  40bd54:	add    eax,0xfffffffd
  40bd57:	movzx  ecx,ax
  40bd5a:	cmp    ecx,0x3
  40bd5d:	ja     40be33 <__flatcc_fb_gen_c_reader@@Base+0x2b13>
  40bd63:	movzx  eax,ax
  40bd66:	lea    rcx,[rip+0x24d3b]        # 430aa8 <_IO_stdin_used@@Base+0x1aa8>
  40bd6d:	movsxd rax,DWORD PTR [rcx+rax*4]
  40bd71:	add    rax,rcx
  40bd74:	jmp    rax
  40bd76:	vmovsd xmm0,QWORD PTR [rsi]
  40bd7a:	cmp    edi,0xb
  40bd7d:	jne    40be21 <__flatcc_fb_gen_c_reader@@Base+0x2b01>
  40bd83:	vcvtsd2ss xmm0,xmm0,xmm0
  40bd87:	vcvtss2sd xmm0,xmm0,xmm0
  40bd8b:	lea    rsi,[rip+0x2b728]        # 4374ba <_IO_stdin_used@@Base+0x84ba>
  40bd92:	jmp    40be28 <__flatcc_fb_gen_c_reader@@Base+0x2b08>
  40bd97:	add    edi,0xffffffff
  40bd9a:	cmp    edi,0x9
  40bd9d:	jae    40be7c <__flatcc_fb_gen_c_reader@@Base+0x2b5c>
  40bda3:	movsxd rax,edi
  40bda6:	lea    rcx,[rip+0x46d93]        # 452b40 <fb_value_set_deleted@@Base+0x68e0>
  40bdad:	mov    rbx,QWORD PTR [rcx+rax*8]
  40bdb1:	mov    rcx,QWORD PTR [rsi]
  40bdb4:	lea    rsi,[rip+0x2b6e6]        # 4374a1 <_IO_stdin_used@@Base+0x84a1>
  40bdbb:	jmp    40be13 <__flatcc_fb_gen_c_reader@@Base+0x2af3>
  40bdbd:	add    edi,0xffffffff
  40bdc0:	cmp    edi,0x9
  40bdc3:	jae    40be7c <__flatcc_fb_gen_c_reader@@Base+0x2b5c>
  40bdc9:	movsxd rax,edi
  40bdcc:	lea    rcx,[rip+0x46d6d]        # 452b40 <fb_value_set_deleted@@Base+0x68e0>
  40bdd3:	mov    rbx,QWORD PTR [rcx+rax*8]
  40bdd7:	movzx  ecx,BYTE PTR [rsi]
  40bdda:	lea    rsi,[rip+0x2b6d2]        # 4374b3 <_IO_stdin_used@@Base+0x84b3>
  40bde1:	xor    eax,eax
  40bde3:	mov    rdi,rdx
  40bde6:	mov    rdx,rbx
  40bde9:	pop    rbx
  40bdea:	jmp    406200 <sprintf@plt>
  40bdef:	add    edi,0xffffffff
  40bdf2:	cmp    edi,0x9
  40bdf5:	jae    40be7c <__flatcc_fb_gen_c_reader@@Base+0x2b5c>
  40bdfb:	movsxd rax,edi
  40bdfe:	lea    rcx,[rip+0x46d3b]        # 452b40 <fb_value_set_deleted@@Base+0x68e0>
  40be05:	mov    rbx,QWORD PTR [rcx+rax*8]
  40be09:	mov    rcx,QWORD PTR [rsi]
  40be0c:	lea    rsi,[rip+0x2b697]        # 4374aa <_IO_stdin_used@@Base+0x84aa>
  40be13:	xor    eax,eax
  40be15:	mov    rdi,rdx
  40be18:	mov    rdx,rbx
  40be1b:	pop    rbx
  40be1c:	jmp    406200 <sprintf@plt>
  40be21:	lea    rsi,[rip+0x2b696]        # 4374be <_IO_stdin_used@@Base+0x84be>
  40be28:	mov    al,0x1
  40be2a:	mov    rdi,rdx
  40be2d:	pop    rbx
  40be2e:	jmp    406200 <sprintf@plt>
  40be33:	mov    rax,QWORD PTR [rip+0x471be]        # 452ff8 <stderr@GLIBC_2.2.5>
  40be3a:	mov    rdi,QWORD PTR [rax]
  40be3d:	lea    rsi,[rip+0x24dd4]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40be44:	lea    rbx,[rip+0x2b57f]        # 4373ca <_IO_stdin_used@@Base+0x83ca>
  40be4b:	lea    r8,[rip+0x2b5db]        # 43742d <_IO_stdin_used@@Base+0x842d>
  40be52:	mov    ecx,0x104
  40be57:	xor    eax,eax
  40be59:	mov    rdx,rbx
  40be5c:	call   406180 <fprintf@plt>
  40be61:	lea    rdi,[rip+0x35d17]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40be68:	lea    rcx,[rip+0x2b653]        # 4374c2 <_IO_stdin_used@@Base+0x84c2>
  40be6f:	mov    edx,0x104
  40be74:	mov    rsi,rbx
  40be77:	call   406100 <__assert_fail@plt>
  40be7c:	mov    rax,QWORD PTR [rip+0x47175]        # 452ff8 <stderr@GLIBC_2.2.5>
  40be83:	mov    rdi,QWORD PTR [rax]
  40be86:	lea    rsi,[rip+0x24d8b]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40be8d:	lea    rbx,[rip+0x2b536]        # 4373ca <_IO_stdin_used@@Base+0x83ca>
  40be94:	lea    r8,[rip+0x2b592]        # 43742d <_IO_stdin_used@@Base+0x842d>
  40be9b:	mov    ecx,0xe2
  40bea0:	xor    eax,eax
  40bea2:	mov    rdx,rbx
  40bea5:	call   406180 <fprintf@plt>
  40beaa:	lea    rdi,[rip+0x35cce]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40beb1:	lea    rcx,[rip+0x2b670]        # 437528 <_IO_stdin_used@@Base+0x8528>
  40beb8:	mov    edx,0xe2
  40bebd:	mov    rsi,rbx
  40bec0:	call   406100 <__assert_fail@plt>
  40bec5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40becf:	nop

000000000040bed0 <__flatcc_gen_sort@@Base>:
  40bed0:	push   rbx
  40bed1:	mov    rbx,rdi
  40bed4:	mov    rdi,QWORD PTR [rdi+0xd0]
  40bedb:	lea    rsi,[rip+0x2c67c]        # 43855e <_IO_stdin_used@@Base+0x955e>
  40bee2:	xor    eax,eax
  40bee4:	mov    rdx,rbx
  40bee7:	call   406180 <fprintf@plt>
  40beec:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bef3:	lea    rsi,[rip+0x2ca32]        # 43892c <_IO_stdin_used@@Base+0x992c>
  40befa:	xor    eax,eax
  40befc:	mov    rdx,rbx
  40beff:	mov    rcx,rbx
  40bf02:	call   406180 <fprintf@plt>
  40bf07:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bf0e:	lea    rsi,[rip+0x2cb27]        # 438a3c <_IO_stdin_used@@Base+0x9a3c>
  40bf15:	xor    eax,eax
  40bf17:	mov    rdx,rbx
  40bf1a:	mov    rcx,rbx
  40bf1d:	mov    r8,rbx
  40bf20:	call   406180 <fprintf@plt>
  40bf25:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bf2c:	lea    rsi,[rip+0x2cbdd]        # 438b10 <_IO_stdin_used@@Base+0x9b10>
  40bf33:	xor    eax,eax
  40bf35:	mov    rdx,rbx
  40bf38:	mov    rcx,rbx
  40bf3b:	mov    r8,rbx
  40bf3e:	mov    r9,rbx
  40bf41:	call   406180 <fprintf@plt>
  40bf46:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bf4d:	lea    rsi,[rip+0x2cc50]        # 438ba4 <_IO_stdin_used@@Base+0x9ba4>
  40bf54:	xor    eax,eax
  40bf56:	mov    rdx,rbx
  40bf59:	mov    rcx,rbx
  40bf5c:	call   406180 <fprintf@plt>
  40bf61:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bf68:	lea    rsi,[rip+0x2cdcc]        # 438d3b <_IO_stdin_used@@Base+0x9d3b>
  40bf6f:	xor    eax,eax
  40bf71:	mov    rdx,rbx
  40bf74:	mov    rcx,rbx
  40bf77:	mov    r8,rbx
  40bf7a:	mov    r9,rbx
  40bf7d:	call   406180 <fprintf@plt>
  40bf82:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bf89:	lea    rsi,[rip+0x2ce30]        # 438dc0 <_IO_stdin_used@@Base+0x9dc0>
  40bf90:	mov    eax,0x0
  40bf95:	mov    rdx,rbx
  40bf98:	mov    rcx,rbx
  40bf9b:	mov    r8,rbx
  40bf9e:	mov    r9,rbx
  40bfa1:	push   rbx
  40bfa2:	push   rbx
  40bfa3:	call   406180 <fprintf@plt>
  40bfa8:	add    rsp,0x10
  40bfac:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bfb3:	lea    rsi,[rip+0x2ce94]        # 438e4e <_IO_stdin_used@@Base+0x9e4e>
  40bfba:	xor    eax,eax
  40bfbc:	mov    rdx,rbx
  40bfbf:	mov    rcx,rbx
  40bfc2:	mov    r8,rbx
  40bfc5:	mov    r9,rbx
  40bfc8:	call   406180 <fprintf@plt>
  40bfcd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bfd4:	sub    rsp,0x8
  40bfd8:	lea    rsi,[rip+0x2ced0]        # 438eaf <_IO_stdin_used@@Base+0x9eaf>
  40bfdf:	mov    eax,0x0
  40bfe4:	mov    rdx,rbx
  40bfe7:	mov    rcx,rbx
  40bfea:	mov    r8,rbx
  40bfed:	mov    r9,rbx
  40bff0:	push   rbx
  40bff1:	push   rbx
  40bff2:	push   rbx
  40bff3:	call   406180 <fprintf@plt>
  40bff8:	add    rsp,0x20
  40bffc:	xor    eax,eax
  40bffe:	pop    rbx
  40bfff:	ret    

000000000040c000 <__flatcc_fb_gen_common_c_builder_header@@Base>:
  40c000:	push   r14
  40c002:	push   rbx
  40c003:	push   rax
  40c004:	mov    rbx,rdi
  40c007:	lea    r14,[rdi+0x66]
  40c00b:	mov    rdi,QWORD PTR [rdi+0xd0]
  40c012:	lea    rsi,[rip+0x2cfa3]        # 438fbc <_IO_stdin_used@@Base+0x9fbc>
  40c019:	xor    eax,eax
  40c01b:	mov    rdx,r14
  40c01e:	call   406180 <fprintf@plt>
  40c023:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c02a:	lea    rsi,[rip+0x2cfa8]        # 438fd9 <_IO_stdin_used@@Base+0x9fd9>
  40c031:	xor    eax,eax
  40c033:	mov    rdx,r14
  40c036:	call   406180 <fprintf@plt>
  40c03b:	mov    rcx,QWORD PTR [rbx+0xd0]
  40c042:	lea    rdi,[rip+0x24aa6]        # 430aef <_IO_stdin_used@@Base+0x1aef>
  40c049:	mov    esi,0x51
  40c04e:	mov    edx,0x1
  40c053:	call   406220 <fwrite@plt>
  40c058:	mov    rcx,QWORD PTR [rbx+0xd0]
  40c05f:	lea    rdi,[rip+0x2cf90]        # 438ff6 <_IO_stdin_used@@Base+0x9ff6>
  40c066:	mov    esi,0x35
  40c06b:	mov    edx,0x1
  40c070:	call   406220 <fwrite@plt>
  40c075:	mov    rax,QWORD PTR [rbx+0xe0]
  40c07c:	cmp    DWORD PTR [rax+0xac],0x0
  40c083:	je     40c0a2 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa2>
  40c085:	mov    rcx,QWORD PTR [rbx+0xd0]
  40c08c:	lea    rdi,[rip+0x24c52]        # 430ce5 <_IO_stdin_used@@Base+0x1ce5>
  40c093:	mov    esi,0x24
  40c098:	mov    edx,0x1
  40c09d:	call   406220 <fwrite@plt>
  40c0a2:	mov    rcx,QWORD PTR [rbx+0xd0]
  40c0a9:	lea    rdi,[rip+0x2cf7c]        # 43902c <_IO_stdin_used@@Base+0xa02c>
  40c0b0:	mov    esi,0x16
  40c0b5:	mov    edx,0x1
  40c0ba:	call   406220 <fwrite@plt>
  40c0bf:	mov    rcx,QWORD PTR [rbx+0xd0]
  40c0c6:	lea    rdi,[rip+0x2cf76]        # 439043 <_IO_stdin_used@@Base+0xa043>
  40c0cd:	mov    esi,0x23
  40c0d2:	mov    edx,0x1
  40c0d7:	call   406220 <fwrite@plt>
  40c0dc:	mov    rcx,QWORD PTR [rbx+0xd0]
  40c0e3:	lea    rdi,[rip+0x2ac27]        # 436d11 <_IO_stdin_used@@Base+0x7d11>
  40c0ea:	mov    esi,0x7
  40c0ef:	mov    edx,0x1
  40c0f4:	call   406220 <fwrite@plt>
  40c0f9:	lea    rsi,[rip+0x2cf67]        # 439067 <_IO_stdin_used@@Base+0xa067>
  40c100:	mov    rdi,rbx
  40c103:	call   406160 <strcmp@plt>
  40c108:	test   eax,eax
  40c10a:	je     40c1a0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x1a0>
  40c110:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c117:	lea    rsi,[rip+0x2cf59]        # 439077 <_IO_stdin_used@@Base+0xa077>
  40c11e:	xor    eax,eax
  40c120:	mov    rdx,rbx
  40c123:	call   406180 <fprintf@plt>
  40c128:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c12f:	lea    rsi,[rip+0x2cf68]        # 43909e <_IO_stdin_used@@Base+0xa09e>
  40c136:	xor    eax,eax
  40c138:	mov    rdx,rbx
  40c13b:	call   406180 <fprintf@plt>
  40c140:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c147:	lea    rsi,[rip+0x2cf77]        # 4390c5 <_IO_stdin_used@@Base+0xa0c5>
  40c14e:	xor    eax,eax
  40c150:	mov    rdx,rbx
  40c153:	call   406180 <fprintf@plt>
  40c158:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c15f:	lea    rsi,[rip+0x2cf8a]        # 4390f0 <_IO_stdin_used@@Base+0xa0f0>
  40c166:	xor    eax,eax
  40c168:	mov    rdx,rbx
  40c16b:	call   406180 <fprintf@plt>
  40c170:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c177:	lea    rsi,[rip+0x2cfa5]        # 439123 <_IO_stdin_used@@Base+0xa123>
  40c17e:	xor    eax,eax
  40c180:	mov    rdx,rbx
  40c183:	call   406180 <fprintf@plt>
  40c188:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c18f:	lea    rsi,[rip+0x2cfc8]        # 43915e <_IO_stdin_used@@Base+0xa15e>
  40c196:	xor    eax,eax
  40c198:	mov    rdx,rbx
  40c19b:	call   406180 <fprintf@plt>
  40c1a0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c1a7:	lea    rsi,[rip+0x2d008]        # 4391b6 <_IO_stdin_used@@Base+0xa1b6>
  40c1ae:	xor    eax,eax
  40c1b0:	mov    rdx,rbx
  40c1b3:	mov    rcx,rbx
  40c1b6:	call   406180 <fprintf@plt>
  40c1bb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c1c2:	lea    rsi,[rip+0x2d008]        # 4391d1 <_IO_stdin_used@@Base+0xa1d1>
  40c1c9:	xor    eax,eax
  40c1cb:	mov    rdx,rbx
  40c1ce:	mov    rcx,rbx
  40c1d1:	call   406180 <fprintf@plt>
  40c1d6:	lea    rsi,[rip+0x24b57]        # 430d34 <_IO_stdin_used@@Base+0x1d34>
  40c1dd:	mov    rdi,rbx
  40c1e0:	call   406160 <strcmp@plt>
  40c1e5:	test   eax,eax
  40c1e7:	je     40c219 <__flatcc_fb_gen_common_c_builder_header@@Base+0x219>
  40c1e9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c1f0:	lea    rsi,[rip+0x2d001]        # 4391f8 <_IO_stdin_used@@Base+0xa1f8>
  40c1f7:	xor    eax,eax
  40c1f9:	mov    rdx,rbx
  40c1fc:	call   406180 <fprintf@plt>
  40c201:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c208:	lea    rsi,[rip+0x2d01a]        # 439229 <_IO_stdin_used@@Base+0xa229>
  40c20f:	xor    eax,eax
  40c211:	mov    rdx,rbx
  40c214:	call   406180 <fprintf@plt>
  40c219:	mov    rsi,QWORD PTR [rbx+0xd0]
  40c220:	mov    edi,0xa
  40c225:	call   406120 <fputc@plt>
  40c22a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c231:	lea    rsi,[rip+0x2d015]        # 43924d <_IO_stdin_used@@Base+0xa24d>
  40c238:	xor    eax,eax
  40c23a:	mov    rdx,rbx
  40c23d:	call   406180 <fprintf@plt>
  40c242:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c249:	lea    rsi,[rip+0x2d370]        # 4395c0 <_IO_stdin_used@@Base+0xa5c0>
  40c250:	xor    eax,eax
  40c252:	mov    rdx,rbx
  40c255:	call   406180 <fprintf@plt>
  40c25a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c261:	lea    rsi,[rip+0x2da21]        # 439c89 <_IO_stdin_used@@Base+0xac89>
  40c268:	xor    eax,eax
  40c26a:	mov    rdx,rbx
  40c26d:	mov    rcx,rbx
  40c270:	mov    r8,rbx
  40c273:	call   406180 <fprintf@plt>
  40c278:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c27f:	lea    rsi,[rip+0x2da8c]        # 439d12 <_IO_stdin_used@@Base+0xad12>
  40c286:	xor    eax,eax
  40c288:	mov    rdx,rbx
  40c28b:	call   406180 <fprintf@plt>
  40c290:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c297:	lea    rsi,[rip+0x2e52f]        # 43a7cd <_IO_stdin_used@@Base+0xb7cd>
  40c29e:	xor    eax,eax
  40c2a0:	mov    rdx,rbx
  40c2a3:	call   406180 <fprintf@plt>
  40c2a8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c2af:	lea    rsi,[rip+0x2e8f2]        # 43aba8 <_IO_stdin_used@@Base+0xbba8>
  40c2b6:	xor    eax,eax
  40c2b8:	mov    rdx,rbx
  40c2bb:	call   406180 <fprintf@plt>
  40c2c0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c2c7:	lea    rsi,[rip+0x2ef10]        # 43b1de <_IO_stdin_used@@Base+0xc1de>
  40c2ce:	xor    eax,eax
  40c2d0:	mov    rdx,rbx
  40c2d3:	call   406180 <fprintf@plt>
  40c2d8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c2df:	lea    rsi,[rip+0x2f374]        # 43b65a <_IO_stdin_used@@Base+0xc65a>
  40c2e6:	xor    eax,eax
  40c2e8:	mov    rdx,rbx
  40c2eb:	mov    rcx,rbx
  40c2ee:	call   406180 <fprintf@plt>
  40c2f3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c2fa:	lea    rsi,[rip+0x2facc]        # 43bdcd <_IO_stdin_used@@Base+0xcdcd>
  40c301:	xor    eax,eax
  40c303:	mov    rdx,rbx
  40c306:	mov    rcx,rbx
  40c309:	mov    r8,rbx
  40c30c:	call   406180 <fprintf@plt>
  40c311:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c318:	lea    rsi,[rip+0x2fff6]        # 43c315 <_IO_stdin_used@@Base+0xd315>
  40c31f:	xor    eax,eax
  40c321:	mov    rdx,rbx
  40c324:	call   406180 <fprintf@plt>
  40c329:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c330:	lea    rsi,[rip+0x3045c]        # 43c793 <_IO_stdin_used@@Base+0xd793>
  40c337:	xor    eax,eax
  40c339:	mov    rdx,rbx
  40c33c:	call   406180 <fprintf@plt>
  40c341:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c348:	lea    rsi,[rip+0x305d2]        # 43c921 <_IO_stdin_used@@Base+0xd921>
  40c34f:	xor    eax,eax
  40c351:	mov    rdx,rbx
  40c354:	call   406180 <fprintf@plt>
  40c359:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c360:	lea    rsi,[rip+0x30914]        # 43cc7b <_IO_stdin_used@@Base+0xdc7b>
  40c367:	xor    eax,eax
  40c369:	mov    rdx,rbx
  40c36c:	mov    rcx,rbx
  40c36f:	call   406180 <fprintf@plt>
  40c374:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c37b:	lea    rsi,[rip+0x30afe]        # 43ce80 <_IO_stdin_used@@Base+0xde80>
  40c382:	xor    eax,eax
  40c384:	mov    rdx,rbx
  40c387:	call   406180 <fprintf@plt>
  40c38c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c393:	lea    rsi,[rip+0x30e4f]        # 43d1e9 <_IO_stdin_used@@Base+0xe1e9>
  40c39a:	xor    eax,eax
  40c39c:	mov    rdx,rbx
  40c39f:	mov    rcx,rbx
  40c3a2:	mov    r8,rbx
  40c3a5:	call   406180 <fprintf@plt>
  40c3aa:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c3b1:	lea    rsi,[rip+0x3132d]        # 43d6e5 <_IO_stdin_used@@Base+0xe6e5>
  40c3b8:	xor    eax,eax
  40c3ba:	mov    rdx,rbx
  40c3bd:	mov    rcx,rbx
  40c3c0:	mov    r8,rbx
  40c3c3:	mov    r9,rbx
  40c3c6:	call   406180 <fprintf@plt>
  40c3cb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c3d2:	lea    rsi,[rip+0x31415]        # 43d7ee <_IO_stdin_used@@Base+0xe7ee>
  40c3d9:	xor    eax,eax
  40c3db:	mov    rdx,rbx
  40c3de:	mov    rcx,rbx
  40c3e1:	call   406180 <fprintf@plt>
  40c3e6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c3ed:	lea    rsi,[rip+0x31762]        # 43db56 <_IO_stdin_used@@Base+0xeb56>
  40c3f4:	xor    eax,eax
  40c3f6:	mov    rdx,rbx
  40c3f9:	mov    rcx,rbx
  40c3fc:	mov    r8,rbx
  40c3ff:	mov    r9,rbx
  40c402:	call   406180 <fprintf@plt>
  40c407:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c40e:	lea    rsi,[rip+0x31d3f]        # 43e154 <_IO_stdin_used@@Base+0xf154>
  40c415:	xor    eax,eax
  40c417:	mov    rdx,rbx
  40c41a:	mov    rcx,rbx
  40c41d:	call   406180 <fprintf@plt>
  40c422:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c429:	lea    rsi,[rip+0x31ed7]        # 43e307 <_IO_stdin_used@@Base+0xf307>
  40c430:	xor    eax,eax
  40c432:	mov    rdx,rbx
  40c435:	call   406180 <fprintf@plt>
  40c43a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c441:	lea    rsi,[rip+0x320e4]        # 43e52c <_IO_stdin_used@@Base+0xf52c>
  40c448:	xor    eax,eax
  40c44a:	mov    rdx,rbx
  40c44d:	call   406180 <fprintf@plt>
  40c452:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c459:	lea    rsi,[rip+0x3248c]        # 43e8ec <_IO_stdin_used@@Base+0xf8ec>
  40c460:	xor    eax,eax
  40c462:	mov    rdx,rbx
  40c465:	call   406180 <fprintf@plt>
  40c46a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c471:	lea    rsi,[rip+0x32731]        # 43eba9 <_IO_stdin_used@@Base+0xfba9>
  40c478:	xor    eax,eax
  40c47a:	mov    rdx,rbx
  40c47d:	call   406180 <fprintf@plt>
  40c482:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c489:	lea    rsi,[rip+0x32b2d]        # 43efbd <_IO_stdin_used@@Base+0xffbd>
  40c490:	xor    eax,eax
  40c492:	mov    rdx,rbx
  40c495:	mov    rcx,rbx
  40c498:	call   406180 <fprintf@plt>
  40c49d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c4a4:	lea    rsi,[rip+0x32bfe]        # 43f0a9 <_IO_stdin_used@@Base+0x100a9>
  40c4ab:	xor    eax,eax
  40c4ad:	mov    rdx,rbx
  40c4b0:	call   406180 <fprintf@plt>
  40c4b5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c4bc:	lea    rsi,[rip+0x32e47]        # 43f30a <_IO_stdin_used@@Base+0x1030a>
  40c4c3:	xor    eax,eax
  40c4c5:	mov    rdx,rbx
  40c4c8:	call   406180 <fprintf@plt>
  40c4cd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c4d4:	lea    rsi,[rip+0x331a6]        # 43f681 <_IO_stdin_used@@Base+0x10681>
  40c4db:	xor    eax,eax
  40c4dd:	mov    rdx,rbx
  40c4e0:	mov    rcx,rbx
  40c4e3:	call   406180 <fprintf@plt>
  40c4e8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c4ef:	lea    rsi,[rip+0x335da]        # 43fad0 <_IO_stdin_used@@Base+0x10ad0>
  40c4f6:	xor    eax,eax
  40c4f8:	mov    rdx,rbx
  40c4fb:	mov    rcx,rbx
  40c4fe:	call   406180 <fprintf@plt>
  40c503:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c50a:	lea    rsi,[rip+0x33857]        # 43fd68 <_IO_stdin_used@@Base+0x10d68>
  40c511:	xor    eax,eax
  40c513:	mov    rdx,rbx
  40c516:	mov    rcx,rbx
  40c519:	call   406180 <fprintf@plt>
  40c51e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c525:	lea    rsi,[rip+0x33c38]        # 440164 <_IO_stdin_used@@Base+0x11164>
  40c52c:	xor    eax,eax
  40c52e:	mov    rdx,rbx
  40c531:	mov    rcx,rbx
  40c534:	call   406180 <fprintf@plt>
  40c539:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c540:	lea    rsi,[rip+0x33d29]        # 440270 <_IO_stdin_used@@Base+0x11270>
  40c547:	xor    eax,eax
  40c549:	mov    rdx,rbx
  40c54c:	mov    rcx,rbx
  40c54f:	mov    r8,rbx
  40c552:	call   406180 <fprintf@plt>
  40c557:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c55e:	lea    rsi,[rip+0x33d96]        # 4402fb <_IO_stdin_used@@Base+0x112fb>
  40c565:	xor    eax,eax
  40c567:	mov    rdx,rbx
  40c56a:	mov    rcx,rbx
  40c56d:	call   406180 <fprintf@plt>
  40c572:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c579:	lea    rsi,[rip+0x340c7]        # 440647 <_IO_stdin_used@@Base+0x11647>
  40c580:	xor    eax,eax
  40c582:	mov    rdx,rbx
  40c585:	call   406180 <fprintf@plt>
  40c58a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c591:	lea    rsi,[rip+0x34337]        # 4408cf <_IO_stdin_used@@Base+0x118cf>
  40c598:	xor    eax,eax
  40c59a:	mov    rdx,rbx
  40c59d:	call   406180 <fprintf@plt>
  40c5a2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c5a9:	lea    rsi,[rip+0x345ad]        # 440b5d <_IO_stdin_used@@Base+0x11b5d>
  40c5b0:	xor    eax,eax
  40c5b2:	mov    rdx,rbx
  40c5b5:	call   406180 <fprintf@plt>
  40c5ba:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c5c1:	lea    rsi,[rip+0x34b4b]        # 441113 <_IO_stdin_used@@Base+0x12113>
  40c5c8:	xor    eax,eax
  40c5ca:	mov    rdx,rbx
  40c5cd:	mov    rcx,rbx
  40c5d0:	mov    r8,rbx
  40c5d3:	call   406180 <fprintf@plt>
  40c5d8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c5df:	lea    rsi,[rip+0x34bbc]        # 4411a2 <_IO_stdin_used@@Base+0x121a2>
  40c5e6:	xor    eax,eax
  40c5e8:	mov    rdx,rbx
  40c5eb:	call   406180 <fprintf@plt>
  40c5f0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c5f7:	lea    rsi,[rip+0x34bd0]        # 4411ce <_IO_stdin_used@@Base+0x121ce>
  40c5fe:	xor    eax,eax
  40c600:	mov    rdx,rbx
  40c603:	call   406180 <fprintf@plt>
  40c608:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c60f:	lea    rsi,[rip+0x34bda]        # 4411f0 <_IO_stdin_used@@Base+0x121f0>
  40c616:	xor    eax,eax
  40c618:	mov    rdx,rbx
  40c61b:	call   406180 <fprintf@plt>
  40c620:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c627:	lea    rsi,[rip+0x34bec]        # 44121a <_IO_stdin_used@@Base+0x1221a>
  40c62e:	xor    eax,eax
  40c630:	mov    rdx,rbx
  40c633:	call   406180 <fprintf@plt>
  40c638:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c63f:	lea    rsi,[rip+0x34bf5]        # 44123b <_IO_stdin_used@@Base+0x1223b>
  40c646:	xor    eax,eax
  40c648:	mov    rdx,rbx
  40c64b:	mov    rcx,rbx
  40c64e:	call   406180 <fprintf@plt>
  40c653:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c65a:	lea    rsi,[rip+0x34c06]        # 441267 <_IO_stdin_used@@Base+0x12267>
  40c661:	xor    eax,eax
  40c663:	mov    rdx,rbx
  40c666:	call   406180 <fprintf@plt>
  40c66b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c672:	lea    rsi,[rip+0x34c0f]        # 441288 <_IO_stdin_used@@Base+0x12288>
  40c679:	xor    eax,eax
  40c67b:	mov    rdx,rbx
  40c67e:	call   406180 <fprintf@plt>
  40c683:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c68a:	lea    rsi,[rip+0x34c25]        # 4412b6 <_IO_stdin_used@@Base+0x122b6>
  40c691:	xor    eax,eax
  40c693:	mov    rdx,rbx
  40c696:	call   406180 <fprintf@plt>
  40c69b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c6a2:	lea    rsi,[rip+0x34c30]        # 4412d9 <_IO_stdin_used@@Base+0x122d9>
  40c6a9:	xor    eax,eax
  40c6ab:	mov    rdx,rbx
  40c6ae:	call   406180 <fprintf@plt>
  40c6b3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c6ba:	lea    rsi,[rip+0x34c46]        # 441307 <_IO_stdin_used@@Base+0x12307>
  40c6c1:	xor    eax,eax
  40c6c3:	mov    rdx,rbx
  40c6c6:	call   406180 <fprintf@plt>
  40c6cb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c6d2:	lea    rsi,[rip+0x34c51]        # 44132a <_IO_stdin_used@@Base+0x1232a>
  40c6d9:	xor    eax,eax
  40c6db:	mov    rdx,rbx
  40c6de:	call   406180 <fprintf@plt>
  40c6e3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c6ea:	lea    rsi,[rip+0x34c67]        # 441358 <_IO_stdin_used@@Base+0x12358>
  40c6f1:	xor    eax,eax
  40c6f3:	mov    rdx,rbx
  40c6f6:	call   406180 <fprintf@plt>
  40c6fb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c702:	lea    rsi,[rip+0x34c72]        # 44137b <_IO_stdin_used@@Base+0x1237b>
  40c709:	xor    eax,eax
  40c70b:	mov    rdx,rbx
  40c70e:	call   406180 <fprintf@plt>
  40c713:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c71a:	lea    rsi,[rip+0x34c86]        # 4413a7 <_IO_stdin_used@@Base+0x123a7>
  40c721:	xor    eax,eax
  40c723:	mov    rdx,rbx
  40c726:	call   406180 <fprintf@plt>
  40c72b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c732:	lea    rsi,[rip+0x34c90]        # 4413c9 <_IO_stdin_used@@Base+0x123c9>
  40c739:	xor    eax,eax
  40c73b:	mov    rdx,rbx
  40c73e:	call   406180 <fprintf@plt>
  40c743:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c74a:	lea    rsi,[rip+0x34ca4]        # 4413f5 <_IO_stdin_used@@Base+0x123f5>
  40c751:	xor    eax,eax
  40c753:	mov    rdx,rbx
  40c756:	call   406180 <fprintf@plt>
  40c75b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c762:	lea    rsi,[rip+0x34cae]        # 441417 <_IO_stdin_used@@Base+0x12417>
  40c769:	xor    eax,eax
  40c76b:	mov    rdx,rbx
  40c76e:	call   406180 <fprintf@plt>
  40c773:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c77a:	lea    rsi,[rip+0x34cc2]        # 441443 <_IO_stdin_used@@Base+0x12443>
  40c781:	xor    eax,eax
  40c783:	mov    rdx,rbx
  40c786:	call   406180 <fprintf@plt>
  40c78b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c792:	lea    rsi,[rip+0x34ccc]        # 441465 <_IO_stdin_used@@Base+0x12465>
  40c799:	xor    eax,eax
  40c79b:	mov    rdx,rbx
  40c79e:	call   406180 <fprintf@plt>
  40c7a3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c7aa:	lea    rsi,[rip+0x34cde]        # 44148f <_IO_stdin_used@@Base+0x1248f>
  40c7b1:	xor    eax,eax
  40c7b3:	mov    rdx,rbx
  40c7b6:	call   406180 <fprintf@plt>
  40c7bb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c7c2:	lea    rsi,[rip+0x34ce8]        # 4414b1 <_IO_stdin_used@@Base+0x124b1>
  40c7c9:	xor    eax,eax
  40c7cb:	mov    rdx,rbx
  40c7ce:	call   406180 <fprintf@plt>
  40c7d3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c7da:	lea    rsi,[rip+0x34cfc]        # 4414dd <_IO_stdin_used@@Base+0x124dd>
  40c7e1:	xor    eax,eax
  40c7e3:	mov    rdx,rbx
  40c7e6:	call   406180 <fprintf@plt>
  40c7eb:	mov    rsi,QWORD PTR [rbx+0xd0]
  40c7f2:	mov    edi,0xa
  40c7f7:	call   406120 <fputc@plt>
  40c7fc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c803:	lea    rsi,[rip+0x34cf6]        # 441500 <_IO_stdin_used@@Base+0x12500>
  40c80a:	xor    eax,eax
  40c80c:	mov    rdx,rbx
  40c80f:	mov    rcx,rbx
  40c812:	mov    r8,rbx
  40c815:	call   406180 <fprintf@plt>
  40c81a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c821:	lea    rsi,[rip+0x34d00]        # 441528 <_IO_stdin_used@@Base+0x12528>
  40c828:	xor    eax,eax
  40c82a:	mov    rdx,rbx
  40c82d:	mov    rcx,rbx
  40c830:	mov    r8,rbx
  40c833:	call   406180 <fprintf@plt>
  40c838:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c83f:	lea    rsi,[rip+0x34d08]        # 44154e <_IO_stdin_used@@Base+0x1254e>
  40c846:	xor    eax,eax
  40c848:	mov    rdx,rbx
  40c84b:	mov    rcx,rbx
  40c84e:	mov    r8,rbx
  40c851:	mov    r9,rbx
  40c854:	call   406180 <fprintf@plt>
  40c859:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c860:	lea    rsi,[rip+0x34d0f]        # 441576 <_IO_stdin_used@@Base+0x12576>
  40c867:	xor    eax,eax
  40c869:	mov    rdx,rbx
  40c86c:	mov    rcx,rbx
  40c86f:	mov    r8,rbx
  40c872:	call   406180 <fprintf@plt>
  40c877:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c87e:	lea    rsi,[rip+0x34d1b]        # 4415a0 <_IO_stdin_used@@Base+0x125a0>
  40c885:	xor    eax,eax
  40c887:	mov    rdx,rbx
  40c88a:	mov    rcx,rbx
  40c88d:	mov    r8,rbx
  40c890:	call   406180 <fprintf@plt>
  40c895:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c89c:	lea    rsi,[rip+0x34d27]        # 4415ca <_IO_stdin_used@@Base+0x125ca>
  40c8a3:	xor    eax,eax
  40c8a5:	mov    rdx,rbx
  40c8a8:	mov    rcx,rbx
  40c8ab:	mov    r8,rbx
  40c8ae:	call   406180 <fprintf@plt>
  40c8b3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c8ba:	lea    rsi,[rip+0x34d33]        # 4415f4 <_IO_stdin_used@@Base+0x125f4>
  40c8c1:	xor    eax,eax
  40c8c3:	mov    rdx,rbx
  40c8c6:	mov    rcx,rbx
  40c8c9:	mov    r8,rbx
  40c8cc:	call   406180 <fprintf@plt>
  40c8d1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c8d8:	lea    rsi,[rip+0x34d3d]        # 44161c <_IO_stdin_used@@Base+0x1261c>
  40c8df:	xor    eax,eax
  40c8e1:	mov    rdx,rbx
  40c8e4:	mov    rcx,rbx
  40c8e7:	mov    r8,rbx
  40c8ea:	call   406180 <fprintf@plt>
  40c8ef:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c8f6:	lea    rsi,[rip+0x34d47]        # 441644 <_IO_stdin_used@@Base+0x12644>
  40c8fd:	xor    eax,eax
  40c8ff:	mov    rdx,rbx
  40c902:	mov    rcx,rbx
  40c905:	mov    r8,rbx
  40c908:	call   406180 <fprintf@plt>
  40c90d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c914:	lea    rsi,[rip+0x34d51]        # 44166c <_IO_stdin_used@@Base+0x1266c>
  40c91b:	xor    eax,eax
  40c91d:	mov    rdx,rbx
  40c920:	mov    rcx,rbx
  40c923:	mov    r8,rbx
  40c926:	call   406180 <fprintf@plt>
  40c92b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c932:	lea    rsi,[rip+0x34d59]        # 441692 <_IO_stdin_used@@Base+0x12692>
  40c939:	xor    eax,eax
  40c93b:	mov    rdx,rbx
  40c93e:	mov    rcx,rbx
  40c941:	mov    r8,rbx
  40c944:	call   406180 <fprintf@plt>
  40c949:	mov    rsi,QWORD PTR [rbx+0xd0]
  40c950:	mov    edi,0xa
  40c955:	call   406120 <fputc@plt>
  40c95a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c961:	lea    rsi,[rip+0x34d52]        # 4416ba <_IO_stdin_used@@Base+0x126ba>
  40c968:	xor    eax,eax
  40c96a:	mov    rdx,rbx
  40c96d:	mov    rcx,rbx
  40c970:	call   406180 <fprintf@plt>
  40c975:	mov    rsi,QWORD PTR [rbx+0xd0]
  40c97c:	mov    edi,0xa
  40c981:	call   406120 <fputc@plt>
  40c986:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c98d:	lea    rsi,[rip+0x34d3c]        # 4416d0 <_IO_stdin_used@@Base+0x126d0>
  40c994:	xor    eax,eax
  40c996:	mov    rdx,rbx
  40c999:	mov    rcx,rbx
  40c99c:	call   406180 <fprintf@plt>
  40c9a1:	mov    rax,QWORD PTR [rbx+0xe0]
  40c9a8:	cmp    DWORD PTR [rax+0xac],0x0
  40c9af:	je     40c9ce <__flatcc_fb_gen_common_c_builder_header@@Base+0x9ce>
  40c9b1:	mov    rcx,QWORD PTR [rbx+0xd0]
  40c9b8:	lea    rdi,[rip+0x2a110]        # 436acf <_IO_stdin_used@@Base+0x7acf>
  40c9bf:	mov    esi,0x24
  40c9c4:	mov    edx,0x1
  40c9c9:	call   406220 <fwrite@plt>
  40c9ce:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c9d5:	lea    rsi,[rip+0x34d0a]        # 4416e6 <_IO_stdin_used@@Base+0x126e6>
  40c9dc:	xor    eax,eax
  40c9de:	mov    rdx,r14
  40c9e1:	call   406180 <fprintf@plt>
  40c9e6:	xor    eax,eax
  40c9e8:	add    rsp,0x8
  40c9ec:	pop    rbx
  40c9ed:	pop    r14
  40c9ef:	ret    

000000000040c9f0 <__flatcc_fb_gen_c_builder@@Base>:
  40c9f0:	push   rbp
  40c9f1:	mov    rbp,rsp
  40c9f4:	push   r15
  40c9f6:	push   r14
  40c9f8:	push   r13
  40c9fa:	push   r12
  40c9fc:	push   rbx
  40c9fd:	and    rsp,0xffffffffffffffe0
  40ca01:	sub    rsp,0x2a0
  40ca08:	mov    r15,rdi
  40ca0b:	lea    r14,[rdi+0x66]
  40ca0f:	lea    r12,[rdi+0xd0]
  40ca16:	mov    rdi,QWORD PTR [rdi+0xd0]
  40ca1d:	mov    rax,QWORD PTR [r15+0xd8]
  40ca24:	mov    rdx,QWORD PTR [rax+0x118]
  40ca2b:	lea    rsi,[rip+0x34cd6]        # 441708 <_IO_stdin_used@@Base+0x12708>
  40ca32:	xor    eax,eax
  40ca34:	mov    rcx,rdx
  40ca37:	call   406180 <fprintf@plt>
  40ca3c:	mov    rcx,QWORD PTR [r15+0xd0]
  40ca43:	lea    rdi,[rip+0x240a5]        # 430aef <_IO_stdin_used@@Base+0x1aef>
  40ca4a:	mov    esi,0x51
  40ca4f:	mov    edx,0x1
  40ca54:	call   406220 <fwrite@plt>
  40ca59:	mov    rdi,QWORD PTR [r15+0xd0]
  40ca60:	mov    rax,QWORD PTR [r15+0xd8]
  40ca67:	mov    rdx,QWORD PTR [rax+0x118]
  40ca6e:	lea    rsi,[rip+0x34cbe]        # 441733 <_IO_stdin_used@@Base+0x12733>
  40ca75:	xor    eax,eax
  40ca77:	call   406180 <fprintf@plt>
  40ca7c:	mov    rdi,QWORD PTR [r15+0xd0]
  40ca83:	mov    rax,QWORD PTR [r15+0xd8]
  40ca8a:	mov    rdx,QWORD PTR [rax+0x110]
  40ca91:	lea    rsi,[rip+0x34cb0]        # 441748 <_IO_stdin_used@@Base+0x12748>
  40ca98:	xor    eax,eax
  40ca9a:	call   406180 <fprintf@plt>
  40ca9f:	mov    rcx,QWORD PTR [r15+0xd0]
  40caa6:	lea    rbx,[rip+0x2a264]        # 436d11 <_IO_stdin_used@@Base+0x7d11>
  40caad:	mov    esi,0x7
  40cab2:	mov    edx,0x1
  40cab7:	mov    rdi,rbx
  40caba:	call   406220 <fwrite@plt>
  40cabf:	mov    rdi,QWORD PTR [r15+0xd0]
  40cac6:	lea    rsi,[rip+0x2c4ef]        # 438fbc <_IO_stdin_used@@Base+0x9fbc>
  40cacd:	xor    eax,eax
  40cacf:	mov    rdx,r14
  40cad2:	call   406180 <fprintf@plt>
  40cad7:	mov    rdi,QWORD PTR [r15+0xd0]
  40cade:	lea    rsi,[rip+0x34c7b]        # 441760 <_IO_stdin_used@@Base+0x12760>
  40cae5:	xor    eax,eax
  40cae7:	mov    rdx,r15
  40caea:	call   406180 <fprintf@plt>
  40caef:	mov    rcx,QWORD PTR [r15+0xd0]
  40caf6:	mov    esi,0x7
  40cafb:	mov    edx,0x1
  40cb00:	mov    rdi,rbx
  40cb03:	call   406220 <fwrite@plt>
  40cb08:	lea    rsi,[rip+0x3ab63]        # 447672 <_IO_stdin_used@@Base+0x18672>
  40cb0f:	lea    rdx,[rip+0x34c69]        # 44177f <_IO_stdin_used@@Base+0x1277f>
  40cb16:	mov    rdi,r15
  40cb19:	call   407f70 <__flatcc_fb_gen_c_includes@@Base>
  40cb1e:	mov    rax,QWORD PTR [r15+0xe0]
  40cb25:	cmp    DWORD PTR [rax+0xac],0x0
  40cb2c:	je     40cb48 <__flatcc_fb_gen_c_builder@@Base+0x158>
  40cb2e:	mov    rcx,QWORD PTR [r12]
  40cb32:	lea    rdi,[rip+0x241ac]        # 430ce5 <_IO_stdin_used@@Base+0x1ce5>
  40cb39:	mov    esi,0x24
  40cb3e:	mov    edx,0x1
  40cb43:	call   406220 <fwrite@plt>
  40cb48:	mov    rdi,QWORD PTR [r15+0xd0]
  40cb4f:	mov    rax,QWORD PTR [r15+0xd8]
  40cb56:	movzx  ecx,WORD PTR [rax+0x20]
  40cb5a:	cmp    ecx,0x2
  40cb5d:	jne    40cb7d <__flatcc_fb_gen_c_builder@@Base+0x18d>
  40cb5f:	mov    r8d,DWORD PTR [rax+0x18]
  40cb63:	mov    r9,QWORD PTR [rax+0x10]
  40cb67:	lea    rsi,[rip+0x2a218]        # 436d86 <_IO_stdin_used@@Base+0x7d86>
  40cb6e:	xor    eax,eax
  40cb70:	mov    rdx,r15
  40cb73:	mov    rcx,r15
  40cb76:	call   406180 <fprintf@plt>
  40cb7b:	jmp    40cb91 <__flatcc_fb_gen_c_builder@@Base+0x1a1>
  40cb7d:	lea    rsi,[rip+0x2a233]        # 436db7 <_IO_stdin_used@@Base+0x7db7>
  40cb84:	xor    eax,eax
  40cb86:	mov    rdx,r15
  40cb89:	mov    rcx,r15
  40cb8c:	call   406180 <fprintf@plt>
  40cb91:	mov    rdi,QWORD PTR [r15+0xd0]
  40cb98:	mov    rax,QWORD PTR [r15+0xd8]
  40cb9f:	movzx  ecx,WORD PTR [rax+0x38]
  40cba3:	cmp    ecx,0x2
  40cba6:	mov    QWORD PTR [rsp],r12
  40cbaa:	jne    40cbca <__flatcc_fb_gen_c_builder@@Base+0x1da>
  40cbac:	mov    r8d,DWORD PTR [rax+0x30]
  40cbb0:	mov    r9,QWORD PTR [rax+0x28]
  40cbb4:	lea    rsi,[rip+0x2a230]        # 436deb <_IO_stdin_used@@Base+0x7deb>
  40cbbb:	xor    eax,eax
  40cbbd:	mov    rdx,r15
  40cbc0:	mov    rcx,r15
  40cbc3:	call   406180 <fprintf@plt>
  40cbc8:	jmp    40cbe9 <__flatcc_fb_gen_c_builder@@Base+0x1f9>
  40cbca:	mov    rax,QWORD PTR [r15+0xe0]
  40cbd1:	mov    r8,QWORD PTR [rax+0x78]
  40cbd5:	lea    rsi,[rip+0x2a23f]        # 436e1b <_IO_stdin_used@@Base+0x7e1b>
  40cbdc:	xor    eax,eax
  40cbde:	mov    rdx,r15
  40cbe1:	mov    rcx,r15
  40cbe4:	call   406180 <fprintf@plt>
  40cbe9:	mov    rsi,QWORD PTR [r15+0xd0]
  40cbf0:	mov    edi,0xa
  40cbf5:	call   406120 <fputc@plt>
  40cbfa:	vxorps xmm0,xmm0,xmm0
  40cbfe:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40cc07:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40cc10:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40cc19:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40cc22:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40cc28:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40cc2e:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40cc34:	mov    QWORD PTR [rsp+0x100],0x0
  40cc40:	mov    rax,QWORD PTR [r15+0xd8]
  40cc47:	mov    rbx,QWORD PTR [rax+0x40]
  40cc4b:	test   rbx,rbx
  40cc4e:	mov    QWORD PTR [rsp+0x8],r15
  40cc53:	je     40ccf1 <__flatcc_fb_gen_c_builder@@Base+0x301>
  40cc59:	lea    r14,[rsp+0x20]
  40cc5e:	lea    r15,[rip+0x34b25]        # 44178a <_IO_stdin_used@@Base+0x1278a>
  40cc65:	lea    r12,[rip+0x34b63]        # 4417cf <_IO_stdin_used@@Base+0x127cf>
  40cc6c:	xor    eax,eax
  40cc6e:	xchg   ax,ax
  40cc70:	movzx  ecx,WORD PTR [rbx+0x10]
  40cc74:	cmp    ecx,0x3
  40cc77:	jne    40cccc <__flatcc_fb_gen_c_builder@@Base+0x2dc>
  40cc79:	mov    rdi,QWORD PTR [rbx+0x18]
  40cc7d:	mov    rsi,rbx
  40cc80:	mov    rdx,r14
  40cc83:	vzeroupper 
  40cc86:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40cc8b:	mov    r13,QWORD PTR [rsp+0x8]
  40cc90:	mov    rdi,QWORD PTR [r13+0xd0]
  40cc97:	xor    eax,eax
  40cc99:	mov    rsi,r15
  40cc9c:	mov    rdx,r14
  40cc9f:	mov    rcx,r14
  40cca2:	mov    r8,r14
  40cca5:	call   406180 <fprintf@plt>
  40ccaa:	mov    rdi,QWORD PTR [r13+0xd0]
  40ccb1:	xor    eax,eax
  40ccb3:	mov    rsi,r12
  40ccb6:	mov    rdx,r13
  40ccb9:	mov    rcx,r13
  40ccbc:	mov    r8,r14
  40ccbf:	mov    r9,r14
  40ccc2:	call   406180 <fprintf@plt>
  40ccc7:	mov    eax,0x1
  40cccc:	mov    rbx,QWORD PTR [rbx]
  40cccf:	test   rbx,rbx
  40ccd2:	jne    40cc70 <__flatcc_fb_gen_c_builder@@Base+0x280>
  40ccd4:	test   eax,eax
  40ccd6:	mov    r15,QWORD PTR [rsp+0x8]
  40ccdb:	je     40ccf1 <__flatcc_fb_gen_c_builder@@Base+0x301>
  40ccdd:	mov    rax,QWORD PTR [rsp]
  40cce1:	mov    rsi,QWORD PTR [rax]
  40cce4:	mov    edi,0xa
  40cce9:	vzeroupper 
  40ccec:	call   406120 <fputc@plt>
  40ccf1:	mov    rax,QWORD PTR [r15+0xd8]
  40ccf8:	mov    r12,QWORD PTR [rax+0x48]
  40ccfc:	test   r12,r12
  40ccff:	je     40d1c9 <__flatcc_fb_gen_c_builder@@Base+0x7d9>
  40cd05:	lea    rbx,[rsp+0x20]
  40cd0a:	nop    WORD PTR [rax+rax*1+0x0]
  40cd10:	vxorps xmm0,xmm0,xmm0
  40cd14:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40cd1d:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40cd26:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40cd2f:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40cd38:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40cd3e:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40cd44:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40cd4a:	mov    QWORD PTR [rsp+0x100],0x0
  40cd56:	movzx  eax,WORD PTR [r12+0x10]
  40cd5c:	cmp    eax,0x1
  40cd5f:	jne    40e505 <__flatcc_fb_gen_c_builder@@Base+0x1b15>
  40cd65:	mov    rdi,QWORD PTR [r12+0x18]
  40cd6a:	mov    rsi,r12
  40cd6d:	mov    rdx,rbx
  40cd70:	vzeroupper 
  40cd73:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40cd78:	mov    rdi,r12
  40cd7b:	call   40e730 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40cd80:	mov    r14d,eax
  40cd83:	mov    rdi,QWORD PTR [r15+0xd0]
  40cd8a:	xor    eax,eax
  40cd8c:	lea    rsi,[rip+0x34b09]        # 44189c <_IO_stdin_used@@Base+0x1289c>
  40cd93:	mov    rdx,rbx
  40cd96:	call   406180 <fprintf@plt>
  40cd9b:	xor    edx,edx
  40cd9d:	mov    r8d,0x1
  40cda3:	mov    rdi,r15
  40cda6:	mov    rsi,r12
  40cda9:	mov    ecx,r14d
  40cdac:	call   40e790 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
  40cdb1:	mov    rdi,QWORD PTR [r15+0xd0]
  40cdb8:	xor    eax,eax
  40cdba:	lea    rsi,[rip+0x34af5]        # 4418b6 <_IO_stdin_used@@Base+0x128b6>
  40cdc1:	mov    rdx,rbx
  40cdc4:	call   406180 <fprintf@plt>
  40cdc9:	mov    QWORD PTR [rsp+0x10],r12
  40cdce:	mov    rdi,r12
  40cdd1:	call   40e730 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40cdd6:	test   eax,eax
  40cdd8:	jle    40ce77 <__flatcc_fb_gen_c_builder@@Base+0x487>
  40cdde:	mov    r12d,eax
  40cde1:	xor    r15d,r15d
  40cde4:	mov    r13d,r14d
  40cde7:	nop    WORD PTR [rax+rax*1+0x0]
  40cdf0:	test   r14d,r14d
  40cdf3:	mov    rbx,QWORD PTR [rsp]
  40cdf7:	je     40ce4f <__flatcc_fb_gen_c_builder@@Base+0x45f>
  40cdf9:	test   r15d,r15d
  40cdfc:	je     40ce30 <__flatcc_fb_gen_c_builder@@Base+0x440>
  40cdfe:	mov    rcx,QWORD PTR [rbx]
  40ce01:	test   r15b,0x3
  40ce05:	jne    40ce39 <__flatcc_fb_gen_c_builder@@Base+0x449>
  40ce07:	cmp    r13d,0x2
  40ce0b:	jle    40ce39 <__flatcc_fb_gen_c_builder@@Base+0x449>
  40ce0d:	xor    eax,eax
  40ce0f:	mov    rdi,rcx
  40ce12:	lea    rsi,[rip+0x34cc7]        # 441ae0 <_IO_stdin_used@@Base+0x12ae0>
  40ce19:	lea    rdx,[rip+0x2562c]        # 43244c <_IO_stdin_used@@Base+0x344c>
  40ce20:	call   406180 <fprintf@plt>
  40ce25:	jmp    40ce4f <__flatcc_fb_gen_c_builder@@Base+0x45f>
  40ce27:	nop    WORD PTR [rax+rax*1+0x0]
  40ce30:	mov    rcx,QWORD PTR [rbx]
  40ce33:	cmp    r14d,0x5
  40ce37:	jge    40ce0d <__flatcc_fb_gen_c_builder@@Base+0x41d>
  40ce39:	mov    esi,0x2
  40ce3e:	mov    edx,0x1
  40ce43:	lea    rdi,[rip+0x3a632]        # 44747c <_IO_stdin_used@@Base+0x1847c>
  40ce4a:	call   406220 <fwrite@plt>
  40ce4f:	mov    rdi,QWORD PTR [rbx]
  40ce52:	lea    ebx,[r15+0x1]
  40ce56:	xor    eax,eax
  40ce58:	lea    rsi,[rip+0x34d3f]        # 441b9e <_IO_stdin_used@@Base+0x12b9e>
  40ce5f:	mov    edx,r15d
  40ce62:	call   406180 <fprintf@plt>
  40ce67:	add    r13d,0xffffffff
  40ce6b:	mov    r15d,ebx
  40ce6e:	cmp    r12d,ebx
  40ce71:	jne    40cdf0 <__flatcc_fb_gen_c_builder@@Base+0x400>
  40ce77:	mov    r15,QWORD PTR [rsp+0x8]
  40ce7c:	mov    rsi,QWORD PTR [r15+0xd0]
  40ce83:	mov    edi,0xa
  40ce88:	call   406120 <fputc@plt>
  40ce8d:	mov    rdi,QWORD PTR [r15+0xd0]
  40ce94:	xor    eax,eax
  40ce96:	lea    rsi,[rip+0x34a32]        # 4418cf <_IO_stdin_used@@Base+0x128cf>
  40ce9d:	lea    rbx,[rsp+0x20]
  40cea2:	mov    rdx,rbx
  40cea5:	mov    rcx,rbx
  40cea8:	mov    r8,rbx
  40ceab:	call   406180 <fprintf@plt>
  40ceb0:	xor    edx,edx
  40ceb2:	xor    r8d,r8d
  40ceb5:	mov    rdi,r15
  40ceb8:	mov    r12,QWORD PTR [rsp+0x10]
  40cebd:	mov    rsi,r12
  40cec0:	mov    ecx,r14d
  40cec3:	call   40e790 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
  40cec8:	mov    rcx,QWORD PTR [r15+0xd0]
  40cecf:	mov    esi,0x4
  40ced4:	mov    edx,0x1
  40ced9:	lea    r13,[rip+0x34a15]        # 4418f5 <_IO_stdin_used@@Base+0x128f5>
  40cee0:	mov    rdi,r13
  40cee3:	call   406220 <fwrite@plt>
  40cee8:	xor    ecx,ecx
  40ceea:	xor    r8d,r8d
  40ceed:	mov    rdi,r15
  40cef0:	mov    rsi,r12
  40cef3:	mov    edx,r14d
  40cef6:	call   40ead0 <__flatcc_fb_gen_c_builder@@Base+0x20e0>
  40cefb:	mov    rcx,QWORD PTR [r15+0xd0]
  40cf02:	mov    esi,0xc
  40cf07:	mov    edx,0x1
  40cf0c:	lea    r13,[rip+0x2a77b]        # 43768e <_IO_stdin_used@@Base+0x868e>
  40cf13:	mov    rdi,r13
  40cf16:	call   406220 <fwrite@plt>
  40cf1b:	mov    rdi,QWORD PTR [r15+0xd0]
  40cf22:	xor    eax,eax
  40cf24:	lea    rsi,[rip+0x349cf]        # 4418fa <_IO_stdin_used@@Base+0x128fa>
  40cf2b:	mov    rdx,rbx
  40cf2e:	mov    rcx,rbx
  40cf31:	mov    r8,rbx
  40cf34:	mov    r9,rbx
  40cf37:	call   406180 <fprintf@plt>
  40cf3c:	mov    rcx,QWORD PTR [r15+0xd0]
  40cf43:	mov    esi,0x2
  40cf48:	mov    edx,0x1
  40cf4d:	lea    rax,[rip+0x349a3]        # 4418f7 <_IO_stdin_used@@Base+0x128f7>
  40cf54:	mov    rdi,rax
  40cf57:	call   406220 <fwrite@plt>
  40cf5c:	xor    ecx,ecx
  40cf5e:	mov    r8d,0x1
  40cf64:	mov    rdi,r15
  40cf67:	mov    rsi,r12
  40cf6a:	mov    edx,r14d
  40cf6d:	call   40ead0 <__flatcc_fb_gen_c_builder@@Base+0x20e0>
  40cf72:	mov    rcx,QWORD PTR [r15+0xd0]
  40cf79:	mov    esi,0xc
  40cf7e:	mov    edx,0x1
  40cf83:	mov    rdi,r13
  40cf86:	call   406220 <fwrite@plt>
  40cf8b:	mov    rdi,QWORD PTR [r15+0xd0]
  40cf92:	xor    eax,eax
  40cf94:	lea    rsi,[rip+0x34995]        # 441930 <_IO_stdin_used@@Base+0x12930>
  40cf9b:	mov    rdx,rbx
  40cf9e:	mov    rcx,rbx
  40cfa1:	mov    r8,rbx
  40cfa4:	call   406180 <fprintf@plt>
  40cfa9:	xor    edx,edx
  40cfab:	xor    r8d,r8d
  40cfae:	mov    rdi,r15
  40cfb1:	mov    rsi,r12
  40cfb4:	mov    ecx,r14d
  40cfb7:	call   40e790 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
  40cfbc:	mov    rcx,QWORD PTR [r15+0xd0]
  40cfc3:	mov    esi,0x4
  40cfc8:	mov    edx,0x1
  40cfcd:	lea    rdi,[rip+0x34921]        # 4418f5 <_IO_stdin_used@@Base+0x128f5>
  40cfd4:	call   406220 <fwrite@plt>
  40cfd9:	mov    ecx,0x2
  40cfde:	xor    r8d,r8d
  40cfe1:	mov    rdi,r15
  40cfe4:	mov    rsi,r12
  40cfe7:	mov    edx,r14d
  40cfea:	call   40ead0 <__flatcc_fb_gen_c_builder@@Base+0x20e0>
  40cfef:	mov    rcx,QWORD PTR [r15+0xd0]
  40cff6:	mov    esi,0xc
  40cffb:	mov    edx,0x1
  40d000:	mov    rdi,r13
  40d003:	call   406220 <fwrite@plt>
  40d008:	mov    rdi,QWORD PTR [r15+0xd0]
  40d00f:	xor    eax,eax
  40d011:	lea    rsi,[rip+0x34944]        # 44195c <_IO_stdin_used@@Base+0x1295c>
  40d018:	mov    rdx,rbx
  40d01b:	mov    rcx,rbx
  40d01e:	mov    r8,rbx
  40d021:	mov    r9,rbx
  40d024:	call   406180 <fprintf@plt>
  40d029:	mov    rcx,QWORD PTR [r15+0xd0]
  40d030:	mov    esi,0x2
  40d035:	mov    edx,0x1
  40d03a:	lea    rdi,[rip+0x348b6]        # 4418f7 <_IO_stdin_used@@Base+0x128f7>
  40d041:	call   406220 <fwrite@plt>
  40d046:	mov    ecx,0x2
  40d04b:	mov    r8d,0x1
  40d051:	mov    rdi,r15
  40d054:	mov    rsi,r12
  40d057:	mov    edx,r14d
  40d05a:	call   40ead0 <__flatcc_fb_gen_c_builder@@Base+0x20e0>
  40d05f:	mov    rcx,QWORD PTR [r15+0xd0]
  40d066:	mov    esi,0xc
  40d06b:	mov    edx,0x1
  40d070:	mov    rdi,r13
  40d073:	call   406220 <fwrite@plt>
  40d078:	mov    rdi,QWORD PTR [r15+0xd0]
  40d07f:	xor    eax,eax
  40d081:	lea    rsi,[rip+0x34910]        # 441998 <_IO_stdin_used@@Base+0x12998>
  40d088:	mov    rdx,rbx
  40d08b:	mov    rcx,rbx
  40d08e:	mov    r8,rbx
  40d091:	call   406180 <fprintf@plt>
  40d096:	xor    edx,edx
  40d098:	xor    r8d,r8d
  40d09b:	mov    rdi,r15
  40d09e:	mov    rsi,r12
  40d0a1:	mov    ecx,r14d
  40d0a4:	call   40e790 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
  40d0a9:	mov    rcx,QWORD PTR [r15+0xd0]
  40d0b0:	mov    esi,0x4
  40d0b5:	mov    edx,0x1
  40d0ba:	lea    rdi,[rip+0x34834]        # 4418f5 <_IO_stdin_used@@Base+0x128f5>
  40d0c1:	call   406220 <fwrite@plt>
  40d0c6:	mov    ecx,0x1
  40d0cb:	xor    r8d,r8d
  40d0ce:	mov    rdi,r15
  40d0d1:	mov    rsi,r12
  40d0d4:	mov    edx,r14d
  40d0d7:	call   40ead0 <__flatcc_fb_gen_c_builder@@Base+0x20e0>
  40d0dc:	mov    rcx,QWORD PTR [r15+0xd0]
  40d0e3:	mov    esi,0xc
  40d0e8:	mov    edx,0x1
  40d0ed:	mov    rdi,r13
  40d0f0:	call   406220 <fwrite@plt>
  40d0f5:	mov    rdi,QWORD PTR [r15+0xd0]
  40d0fc:	xor    eax,eax
  40d0fe:	lea    rsi,[rip+0x348c1]        # 4419c6 <_IO_stdin_used@@Base+0x129c6>
  40d105:	mov    rdx,rbx
  40d108:	mov    rcx,rbx
  40d10b:	mov    r8,rbx
  40d10e:	mov    r9,rbx
  40d111:	call   406180 <fprintf@plt>
  40d116:	mov    rcx,QWORD PTR [r15+0xd0]
  40d11d:	mov    esi,0x2
  40d122:	mov    edx,0x1
  40d127:	lea    rdi,[rip+0x347c9]        # 4418f7 <_IO_stdin_used@@Base+0x128f7>
  40d12e:	call   406220 <fwrite@plt>
  40d133:	mov    ecx,0x1
  40d138:	mov    r8d,0x1
  40d13e:	mov    rdi,r15
  40d141:	mov    rsi,r12
  40d144:	mov    edx,r14d
  40d147:	call   40ead0 <__flatcc_fb_gen_c_builder@@Base+0x20e0>
  40d14c:	mov    rcx,QWORD PTR [r15+0xd0]
  40d153:	mov    esi,0xc
  40d158:	mov    edx,0x1
  40d15d:	mov    rdi,r13
  40d160:	call   406220 <fwrite@plt>
  40d165:	mov    rdi,QWORD PTR [r15+0xd0]
  40d16c:	mov    r9,QWORD PTR [r12+0xb8]
  40d174:	movzx  r10d,WORD PTR [r12+0xb0]
  40d17d:	sub    rsp,0x8
  40d181:	xor    eax,eax
  40d183:	lea    rsi,[rip+0x3487a]        # 441a04 <_IO_stdin_used@@Base+0x12a04>
  40d18a:	mov    rdx,r15
  40d18d:	mov    rcx,r15
  40d190:	mov    r8,rbx
  40d193:	push   rbx
  40d194:	push   rbx
  40d195:	push   r10
  40d197:	call   406180 <fprintf@plt>
  40d19c:	add    rsp,0x20
  40d1a0:	mov    rsi,QWORD PTR [r15+0xd0]
  40d1a7:	mov    edi,0xa
  40d1ac:	call   406120 <fputc@plt>
  40d1b1:	mov    r12,QWORD PTR [r12+0xc0]
  40d1b9:	test   r12,r12
  40d1bc:	jne    40cd10 <__flatcc_fb_gen_c_builder@@Base+0x320>
  40d1c2:	mov    rax,QWORD PTR [r15+0xd8]
  40d1c9:	vxorps xmm0,xmm0,xmm0
  40d1cd:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40d1d6:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40d1df:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40d1e8:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40d1f1:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40d1f7:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40d1fd:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40d203:	mov    QWORD PTR [rsp+0x100],0x0
  40d20f:	mov    rbx,QWORD PTR [rax+0x40]
  40d213:	test   rbx,rbx
  40d216:	je     40d294 <__flatcc_fb_gen_c_builder@@Base+0x8a4>
  40d218:	lea    r14,[rsp+0x20]
  40d21d:	lea    r15,[rip+0x34a86]        # 441caa <_IO_stdin_used@@Base+0x12caa>
  40d224:	xor    eax,eax
  40d226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d230:	movzx  ecx,WORD PTR [rbx+0x10]
  40d234:	cmp    ecx,0x4
  40d237:	jne    40d26f <__flatcc_fb_gen_c_builder@@Base+0x87f>
  40d239:	mov    rdi,QWORD PTR [rbx+0x18]
  40d23d:	mov    rsi,rbx
  40d240:	mov    rdx,r14
  40d243:	vzeroupper 
  40d246:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40d24b:	mov    rdx,QWORD PTR [rsp+0x8]
  40d250:	mov    rdi,QWORD PTR [rdx+0xd0]
  40d257:	xor    eax,eax
  40d259:	mov    rsi,r15
  40d25c:	mov    rcx,r14
  40d25f:	mov    r8,rdx
  40d262:	mov    r9,r14
  40d265:	call   406180 <fprintf@plt>
  40d26a:	mov    eax,0x1
  40d26f:	mov    rbx,QWORD PTR [rbx]
  40d272:	test   rbx,rbx
  40d275:	jne    40d230 <__flatcc_fb_gen_c_builder@@Base+0x840>
  40d277:	test   eax,eax
  40d279:	mov    r15,QWORD PTR [rsp+0x8]
  40d27e:	je     40d294 <__flatcc_fb_gen_c_builder@@Base+0x8a4>
  40d280:	mov    rax,QWORD PTR [rsp]
  40d284:	mov    rsi,QWORD PTR [rax]
  40d287:	mov    edi,0xa
  40d28c:	vzeroupper 
  40d28f:	call   406120 <fputc@plt>
  40d294:	mov    rax,QWORD PTR [r15+0xd8]
  40d29b:	mov    r14,QWORD PTR [rax+0x40]
  40d29f:	test   r14,r14
  40d2a2:	je     40e404 <__flatcc_fb_gen_c_builder@@Base+0x1a14>
  40d2a8:	lea    r13,[rip+0x34a7d]        # 441d2c <_IO_stdin_used@@Base+0x12d2c>
  40d2af:	mov    DWORD PTR [rsp+0x18],0x0
  40d2b7:	nop    WORD PTR [rax+rax*1+0x0]
  40d2c0:	cmp    WORD PTR [r14+0x10],0x0
  40d2c6:	jne    40d4fe <__flatcc_fb_gen_c_builder@@Base+0xb0e>
  40d2cc:	vxorps xmm0,xmm0,xmm0
  40d2d0:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40d2d9:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40d2e2:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40d2eb:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40d2f4:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40d2fa:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40d300:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40d306:	mov    QWORD PTR [rsp+0x100],0x0
  40d312:	mov    rax,QWORD PTR [r14+0x28]
  40d316:	xor    r12d,r12d
  40d319:	test   rax,rax
  40d31c:	je     40d336 <__flatcc_fb_gen_c_builder@@Base+0x946>
  40d31e:	xchg   ax,ax
  40d320:	mov    ecx,DWORD PTR [rax+0x70]
  40d323:	shr    ecx,0x2
  40d326:	not    ecx
  40d328:	and    ecx,0x1
  40d32b:	add    r12d,ecx
  40d32e:	mov    rax,QWORD PTR [rax]
  40d331:	test   rax,rax
  40d334:	jne    40d320 <__flatcc_fb_gen_c_builder@@Base+0x930>
  40d336:	mov    rdi,QWORD PTR [r14+0x18]
  40d33a:	mov    rsi,r14
  40d33d:	lea    rbx,[rsp+0x20]
  40d342:	mov    rdx,rbx
  40d345:	vzeroupper 
  40d348:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40d34d:	mov    rdi,QWORD PTR [r15+0xd0]
  40d354:	xor    eax,eax
  40d356:	lea    rsi,[rip+0x349a2]        # 441cff <_IO_stdin_used@@Base+0x12cff>
  40d35d:	mov    rdx,r15
  40d360:	mov    rcx,rbx
  40d363:	call   406180 <fprintf@plt>
  40d368:	mov    rbx,QWORD PTR [r14+0x28]
  40d36c:	test   rbx,rbx
  40d36f:	je     40d450 <__flatcc_fb_gen_c_builder@@Base+0xa60>
  40d375:	xor    r15d,r15d
  40d378:	nop    DWORD PTR [rax+rax*1+0x0]
  40d380:	movzx  eax,WORD PTR [rbx+0x70]
  40d384:	and    eax,0x104
  40d389:	cmp    eax,0x100
  40d38e:	jne    40d41b <__flatcc_fb_gen_c_builder@@Base+0xa2b>
  40d394:	test   r15d,r15d
  40d397:	jle    40d3d0 <__flatcc_fb_gen_c_builder@@Base+0x9e0>
  40d399:	test   r12d,r12d
  40d39c:	je     40d400 <__flatcc_fb_gen_c_builder@@Base+0xa10>
  40d39e:	mov    rax,QWORD PTR [rsp]
  40d3a2:	mov    rcx,QWORD PTR [rax]
  40d3a5:	test   r15b,0x3
  40d3a9:	jne    40d3e3 <__flatcc_fb_gen_c_builder@@Base+0x9f3>
  40d3ab:	mov    eax,r12d
  40d3ae:	sub    eax,r15d
  40d3b1:	cmp    eax,0x2
  40d3b4:	jle    40d3e3 <__flatcc_fb_gen_c_builder@@Base+0x9f3>
  40d3b6:	xor    eax,eax
  40d3b8:	mov    rdi,rcx
  40d3bb:	lea    rsi,[rip+0x3471e]        # 441ae0 <_IO_stdin_used@@Base+0x12ae0>
  40d3c2:	lea    rdx,[rip+0x23969]        # 430d32 <_IO_stdin_used@@Base+0x1d32>
  40d3c9:	call   406180 <fprintf@plt>
  40d3ce:	jmp    40d400 <__flatcc_fb_gen_c_builder@@Base+0xa10>
  40d3d0:	mov    rax,QWORD PTR [rsp]
  40d3d4:	mov    rsi,QWORD PTR [rax]
  40d3d7:	mov    edi,0x20
  40d3dc:	call   406120 <fputc@plt>
  40d3e1:	jmp    40d400 <__flatcc_fb_gen_c_builder@@Base+0xa10>
  40d3e3:	mov    esi,0x2
  40d3e8:	mov    edx,0x1
  40d3ed:	lea    rdi,[rip+0x3a088]        # 44747c <_IO_stdin_used@@Base+0x1847c>
  40d3f4:	call   406220 <fwrite@plt>
  40d3f9:	nop    DWORD PTR [rax+0x0]
  40d400:	mov    rax,QWORD PTR [rsp]
  40d404:	mov    rdi,QWORD PTR [rax]
  40d407:	mov    edx,DWORD PTR [rbx+0x88]
  40d40d:	xor    eax,eax
  40d40f:	mov    rsi,r13
  40d412:	call   406180 <fprintf@plt>
  40d417:	add    r15d,0x1
  40d41b:	mov    rbx,QWORD PTR [rbx]
  40d41e:	test   rbx,rbx
  40d421:	jne    40d380 <__flatcc_fb_gen_c_builder@@Base+0x990>
  40d427:	mov    rax,QWORD PTR [rsp]
  40d42b:	mov    rcx,QWORD PTR [rax]
  40d42e:	test   r15d,r15d
  40d431:	jle    40d459 <__flatcc_fb_gen_c_builder@@Base+0xa69>
  40d433:	mov    esi,0x7
  40d438:	mov    edx,0x1
  40d43d:	lea    rdi,[rip+0x348eb]        # 441d2f <_IO_stdin_used@@Base+0x12d2f>
  40d444:	call   406220 <fwrite@plt>
  40d449:	mov    r15,QWORD PTR [rsp+0x8]
  40d44e:	jmp    40d474 <__flatcc_fb_gen_c_builder@@Base+0xa84>
  40d450:	mov    rax,QWORD PTR [rsp]
  40d454:	mov    rcx,QWORD PTR [rax]
  40d457:	jmp    40d45e <__flatcc_fb_gen_c_builder@@Base+0xa6e>
  40d459:	mov    r15,QWORD PTR [rsp+0x8]
  40d45e:	mov    esi,0x6
  40d463:	mov    edx,0x1
  40d468:	lea    rdi,[rip+0x348c1]        # 441d30 <_IO_stdin_used@@Base+0x12d30>
  40d46f:	call   406220 <fwrite@plt>
  40d474:	vxorps xmm0,xmm0,xmm0
  40d478:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40d481:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40d48a:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40d493:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40d49c:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40d4a2:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40d4a8:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40d4ae:	mov    QWORD PTR [rsp+0x100],0x0
  40d4ba:	mov    rdi,QWORD PTR [r14+0x18]
  40d4be:	mov    rsi,r14
  40d4c1:	lea    rbx,[rsp+0x20]
  40d4c6:	mov    rdx,rbx
  40d4c9:	vzeroupper 
  40d4cc:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40d4d1:	mov    rdi,QWORD PTR [r15+0xd0]
  40d4d8:	mov    r9,QWORD PTR [r14+0xa8]
  40d4df:	xor    eax,eax
  40d4e1:	lea    rsi,[rip+0x3484f]        # 441d37 <_IO_stdin_used@@Base+0x12d37>
  40d4e8:	mov    rdx,r15
  40d4eb:	mov    rcx,r15
  40d4ee:	mov    r8,rbx
  40d4f1:	call   406180 <fprintf@plt>
  40d4f6:	mov    DWORD PTR [rsp+0x18],0x1
  40d4fe:	mov    r14,QWORD PTR [r14]
  40d501:	test   r14,r14
  40d504:	jne    40d2c0 <__flatcc_fb_gen_c_builder@@Base+0x8d0>
  40d50a:	mov    rax,QWORD PTR [r15+0xd8]
  40d511:	mov    r15,QWORD PTR [rax+0x40]
  40d515:	test   r15,r15
  40d518:	je     40da04 <__flatcc_fb_gen_c_builder@@Base+0x1014>
  40d51e:	lea    r13,[rsp+0x120]
  40d526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d530:	cmp    WORD PTR [r15+0x10],0x0
  40d536:	jne    40d9f8 <__flatcc_fb_gen_c_builder@@Base+0x1008>
  40d53c:	vxorps xmm0,xmm0,xmm0
  40d540:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40d549:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40d552:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40d55b:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40d564:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40d56d:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40d576:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40d57f:	mov    QWORD PTR [rsp+0x200],0x0
  40d58b:	mov    rdi,QWORD PTR [r15+0x18]
  40d58f:	mov    rsi,r15
  40d592:	mov    rdx,r13
  40d595:	vzeroupper 
  40d598:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40d59d:	mov    rax,QWORD PTR [r15+0x28]
  40d5a1:	xor    r12d,r12d
  40d5a4:	test   rax,rax
  40d5a7:	je     40d5c8 <__flatcc_fb_gen_c_builder@@Base+0xbd8>
  40d5a9:	mov    rbx,QWORD PTR [rsp]
  40d5ad:	nop    DWORD PTR [rax]
  40d5b0:	mov    ecx,DWORD PTR [rax+0x70]
  40d5b3:	shr    ecx,0x2
  40d5b6:	not    ecx
  40d5b8:	and    ecx,0x1
  40d5bb:	add    r12d,ecx
  40d5be:	mov    rax,QWORD PTR [rax]
  40d5c1:	test   rax,rax
  40d5c4:	jne    40d5b0 <__flatcc_fb_gen_c_builder@@Base+0xbc0>
  40d5c6:	jmp    40d5cc <__flatcc_fb_gen_c_builder@@Base+0xbdc>
  40d5c8:	mov    rbx,QWORD PTR [rsp]
  40d5cc:	mov    rdi,QWORD PTR [rbx]
  40d5cf:	xor    eax,eax
  40d5d1:	lea    rsi,[rip+0x342c4]        # 44189c <_IO_stdin_used@@Base+0x1289c>
  40d5d8:	mov    rdx,r13
  40d5db:	call   406180 <fprintf@plt>
  40d5e0:	vxorps xmm0,xmm0,xmm0
  40d5e4:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40d5ed:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40d5f6:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40d5ff:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40d608:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40d60e:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40d614:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40d61a:	mov    QWORD PTR [rsp+0x100],0x0
  40d626:	mov    r13,QWORD PTR [r15+0x28]
  40d62a:	test   r13,r13
  40d62d:	je     40d8fd <__flatcc_fb_gen_c_builder@@Base+0xf0d>
  40d633:	xor    r14d,r14d
  40d636:	mov    QWORD PTR [rsp+0x10],r15
  40d63b:	jmp    40d6a0 <__flatcc_fb_gen_c_builder@@Base+0xcb0>
  40d63d:	mov    rdi,QWORD PTR [rbx]
  40d640:	mov    rcx,QWORD PTR [r13+0x88]
  40d647:	xor    eax,eax
  40d649:	lea    rsi,[rip+0x34775]        # 441dc5 <_IO_stdin_used@@Base+0x12dc5>
  40d650:	lea    rdx,[rsp+0x20]
  40d655:	jmp    40d806 <__flatcc_fb_gen_c_builder@@Base+0xe16>
  40d65a:	mov    rdi,QWORD PTR [rbx]
  40d65d:	mov    rcx,QWORD PTR [r13+0x88]
  40d664:	xor    eax,eax
  40d666:	lea    rsi,[rip+0x3472d]        # 441d9a <_IO_stdin_used@@Base+0x12d9a>
  40d66d:	lea    rdx,[rsp+0x20]
  40d672:	jmp    40d806 <__flatcc_fb_gen_c_builder@@Base+0xe16>
  40d677:	mov    rdi,QWORD PTR [rbx]
  40d67a:	mov    rcx,QWORD PTR [r13+0x88]
  40d681:	xor    eax,eax
  40d683:	lea    rsi,[rip+0x3471c]        # 441da6 <_IO_stdin_used@@Base+0x12da6>
  40d68a:	lea    rdx,[rsp+0x20]
  40d68f:	jmp    40d806 <__flatcc_fb_gen_c_builder@@Base+0xe16>
  40d694:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d69e:	xchg   ax,ax
  40d6a0:	test   BYTE PTR [r13+0x70],0x4
  40d6a5:	jne    40d8f0 <__flatcc_fb_gen_c_builder@@Base+0xf00>
  40d6ab:	test   r12d,r12d
  40d6ae:	je     40d708 <__flatcc_fb_gen_c_builder@@Base+0xd18>
  40d6b0:	test   r14d,r14d
  40d6b3:	je     40d6e6 <__flatcc_fb_gen_c_builder@@Base+0xcf6>
  40d6b5:	mov    rcx,QWORD PTR [rbx]
  40d6b8:	test   r14b,0x3
  40d6bc:	jne    40d6ef <__flatcc_fb_gen_c_builder@@Base+0xcff>
  40d6be:	mov    eax,r12d
  40d6c1:	sub    eax,r14d
  40d6c4:	cmp    eax,0x2
  40d6c7:	jle    40d6ef <__flatcc_fb_gen_c_builder@@Base+0xcff>
  40d6c9:	xor    eax,eax
  40d6cb:	mov    rdi,rcx
  40d6ce:	lea    rsi,[rip+0x3440b]        # 441ae0 <_IO_stdin_used@@Base+0x12ae0>
  40d6d5:	lea    rdx,[rip+0x24d70]        # 43244c <_IO_stdin_used@@Base+0x344c>
  40d6dc:	vzeroupper 
  40d6df:	call   406180 <fprintf@plt>
  40d6e4:	jmp    40d708 <__flatcc_fb_gen_c_builder@@Base+0xd18>
  40d6e6:	mov    rcx,QWORD PTR [rbx]
  40d6e9:	cmp    r12d,0x5
  40d6ed:	jge    40d6c9 <__flatcc_fb_gen_c_builder@@Base+0xcd9>
  40d6ef:	mov    esi,0x2
  40d6f4:	mov    edx,0x1
  40d6f9:	lea    rdi,[rip+0x39d7c]        # 44747c <_IO_stdin_used@@Base+0x1847c>
  40d700:	vzeroupper 
  40d703:	call   406220 <fwrite@plt>
  40d708:	mov    eax,DWORD PTR [r13+0x28]
  40d70c:	add    eax,0xfffffff9
  40d70f:	movzx  ecx,ax
  40d712:	cmp    ecx,0x8
  40d715:	ja     40e470 <__flatcc_fb_gen_c_builder@@Base+0x1a80>
  40d71b:	add    r14d,0x1
  40d71f:	movzx  eax,ax
  40d722:	lea    rcx,[rip+0x2b7ff]        # 438f28 <_IO_stdin_used@@Base+0x9f28>
  40d729:	movsxd rax,DWORD PTR [rcx+rax*4]
  40d72d:	add    rax,rcx
  40d730:	jmp    rax
  40d732:	mov    eax,DWORD PTR [r13+0x18]
  40d736:	add    eax,0xffffffff
  40d739:	cmp    eax,0xb
  40d73c:	jae    40e64e <__flatcc_fb_gen_c_builder@@Base+0x1c5e>
  40d742:	cdqe   
  40d744:	lea    rcx,[rip+0x454a5]        # 452bf0 <fb_value_set_deleted@@Base+0x6990>
  40d74b:	mov    rcx,QWORD PTR [rcx+rax*8]
  40d74f:	mov    rdx,QWORD PTR [rsp+0x8]
  40d754:	mov    rdi,QWORD PTR [rdx+0xd0]
  40d75b:	mov    r8,QWORD PTR [r13+0x88]
  40d762:	xor    eax,eax
  40d764:	lea    rsi,[rip+0x34735]        # 441ea0 <_IO_stdin_used@@Base+0x12ea0>
  40d76b:	vzeroupper 
  40d76e:	call   406180 <fprintf@plt>
  40d773:	jmp    40d8f0 <__flatcc_fb_gen_c_builder@@Base+0xf00>
  40d778:	mov    rdx,QWORD PTR [rsp+0x8]
  40d77d:	mov    rdi,QWORD PTR [rdx+0xd0]
  40d784:	mov    rcx,QWORD PTR [r13+0x88]
  40d78b:	xor    eax,eax
  40d78d:	lea    rsi,[rip+0x34721]        # 441eb5 <_IO_stdin_used@@Base+0x12eb5>
  40d794:	jmp    40d806 <__flatcc_fb_gen_c_builder@@Base+0xe16>
  40d796:	mov    ecx,DWORD PTR [r13+0x18]
  40d79a:	lea    eax,[rcx-0x1]
  40d79d:	cmp    eax,0xb
  40d7a0:	jae    40e570 <__flatcc_fb_gen_c_builder@@Base+0x1b80>
  40d7a6:	cmp    ecx,0x5
  40d7a9:	lea    rdx,[rip+0x23583]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  40d7b0:	mov    rsi,QWORD PTR [rsp+0x8]
  40d7b5:	cmove  rdx,rsi
  40d7b9:	cdqe   
  40d7bb:	lea    rcx,[rip+0x453ce]        # 452b90 <fb_value_set_deleted@@Base+0x6930>
  40d7c2:	mov    rcx,QWORD PTR [rcx+rax*8]
  40d7c6:	mov    rdi,QWORD PTR [rsi+0xd0]
  40d7cd:	mov    r8,QWORD PTR [r13+0x88]
  40d7d4:	xor    eax,eax
  40d7d6:	lea    rsi,[rip+0x346b8]        # 441e95 <_IO_stdin_used@@Base+0x12e95>
  40d7dd:	vzeroupper 
  40d7e0:	call   406180 <fprintf@plt>
  40d7e5:	jmp    40d8f0 <__flatcc_fb_gen_c_builder@@Base+0xf00>
  40d7ea:	mov    rdx,QWORD PTR [rsp+0x8]
  40d7ef:	mov    rdi,QWORD PTR [rdx+0xd0]
  40d7f6:	mov    rcx,QWORD PTR [r13+0x88]
  40d7fd:	xor    eax,eax
  40d7ff:	lea    rsi,[rip+0x346c4]        # 441eca <_IO_stdin_used@@Base+0x12eca>
  40d806:	vzeroupper 
  40d809:	call   406180 <fprintf@plt>
  40d80e:	jmp    40d8f0 <__flatcc_fb_gen_c_builder@@Base+0xf00>
  40d813:	mov    r15,rbx
  40d816:	mov    rsi,QWORD PTR [r13+0x18]
  40d81a:	mov    rdi,QWORD PTR [rsi+0x18]
  40d81e:	lea    rbx,[rsp+0x20]
  40d823:	mov    rdx,rbx
  40d826:	vzeroupper 
  40d829:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40d82e:	mov    rax,QWORD PTR [r13+0x18]
  40d832:	movzx  eax,WORD PTR [rax+0x10]
  40d836:	cmp    eax,0x2
  40d839:	jb     40d851 <__flatcc_fb_gen_c_builder@@Base+0xe61>
  40d83b:	movzx  eax,ax
  40d83e:	cmp    eax,0x4
  40d841:	je     40d8c0 <__flatcc_fb_gen_c_builder@@Base+0xed0>
  40d843:	cmp    eax,0x3
  40d846:	lea    rbx,[rsp+0x20]
  40d84b:	jne    40e69a <__flatcc_fb_gen_c_builder@@Base+0x1caa>
  40d851:	mov    rdi,QWORD PTR [r15]
  40d854:	mov    rcx,QWORD PTR [r13+0x88]
  40d85b:	xor    eax,eax
  40d85d:	lea    rsi,[rip+0x3463e]        # 441ea2 <_IO_stdin_used@@Base+0x12ea2>
  40d864:	mov    rdx,rbx
  40d867:	mov    rbx,r15
  40d86a:	jmp    40d8db <__flatcc_fb_gen_c_builder@@Base+0xeeb>
  40d86c:	mov    rsi,QWORD PTR [r13+0x18]
  40d870:	mov    rdi,QWORD PTR [rsi+0x18]
  40d874:	lea    rdx,[rsp+0x20]
  40d879:	vzeroupper 
  40d87c:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40d881:	mov    rax,QWORD PTR [r13+0x18]
  40d885:	movzx  eax,WORD PTR [rax+0x10]
  40d889:	cmp    rax,0x4
  40d88d:	ja     40e527 <__flatcc_fb_gen_c_builder@@Base+0x1b37>
  40d893:	lea    rcx,[rip+0x2b6b2]        # 438f4c <_IO_stdin_used@@Base+0x9f4c>
  40d89a:	movsxd rax,DWORD PTR [rcx+rax*4]
  40d89e:	add    rax,rcx
  40d8a1:	jmp    rax
  40d8a3:	mov    rdi,QWORD PTR [rbx]
  40d8a6:	mov    rcx,QWORD PTR [r13+0x88]
  40d8ad:	xor    eax,eax
  40d8af:	lea    rsi,[rip+0x34500]        # 441db6 <_IO_stdin_used@@Base+0x12db6>
  40d8b6:	lea    rdx,[rsp+0x20]
  40d8bb:	jmp    40d806 <__flatcc_fb_gen_c_builder@@Base+0xe16>
  40d8c0:	mov    rbx,r15
  40d8c3:	mov    rdi,QWORD PTR [r15]
  40d8c6:	mov    rcx,QWORD PTR [r13+0x88]
  40d8cd:	xor    eax,eax
  40d8cf:	lea    rsi,[rip+0x3457a]        # 441e50 <_IO_stdin_used@@Base+0x12e50>
  40d8d6:	lea    rdx,[rsp+0x20]
  40d8db:	call   406180 <fprintf@plt>
  40d8e0:	mov    r15,QWORD PTR [rsp+0x10]
  40d8e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d8ef:	nop
  40d8f0:	mov    r13,QWORD PTR [r13+0x0]
  40d8f4:	test   r13,r13
  40d8f7:	jne    40d6a0 <__flatcc_fb_gen_c_builder@@Base+0xcb0>
  40d8fd:	mov    rdi,QWORD PTR [rbx]
  40d900:	xor    eax,eax
  40d902:	lea    rsi,[rip+0x33fad]        # 4418b6 <_IO_stdin_used@@Base+0x128b6>
  40d909:	lea    r13,[rsp+0x120]
  40d911:	mov    rdx,r13
  40d914:	vzeroupper 
  40d917:	call   406180 <fprintf@plt>
  40d91c:	mov    rbx,QWORD PTR [r15+0x28]
  40d920:	test   rbx,rbx
  40d923:	je     40d9c1 <__flatcc_fb_gen_c_builder@@Base+0xfd1>
  40d929:	xor    r14d,r14d
  40d92c:	nop    DWORD PTR [rax+0x0]
  40d930:	test   BYTE PTR [rbx+0x70],0x4
  40d934:	jne    40d9b5 <__flatcc_fb_gen_c_builder@@Base+0xfc5>
  40d936:	test   r12d,r12d
  40d939:	je     40d995 <__flatcc_fb_gen_c_builder@@Base+0xfa5>
  40d93b:	test   r14d,r14d
  40d93e:	je     40d972 <__flatcc_fb_gen_c_builder@@Base+0xf82>
  40d940:	mov    rax,QWORD PTR [rsp]
  40d944:	mov    rcx,QWORD PTR [rax]
  40d947:	test   r14b,0x3
  40d94b:	jne    40d97f <__flatcc_fb_gen_c_builder@@Base+0xf8f>
  40d94d:	mov    eax,r12d
  40d950:	sub    eax,r14d
  40d953:	cmp    eax,0x2
  40d956:	jle    40d97f <__flatcc_fb_gen_c_builder@@Base+0xf8f>
  40d958:	xor    eax,eax
  40d95a:	mov    rdi,rcx
  40d95d:	lea    rsi,[rip+0x3417c]        # 441ae0 <_IO_stdin_used@@Base+0x12ae0>
  40d964:	lea    rdx,[rip+0x24ae1]        # 43244c <_IO_stdin_used@@Base+0x344c>
  40d96b:	call   406180 <fprintf@plt>
  40d970:	jmp    40d995 <__flatcc_fb_gen_c_builder@@Base+0xfa5>
  40d972:	mov    rax,QWORD PTR [rsp]
  40d976:	mov    rcx,QWORD PTR [rax]
  40d979:	cmp    r12d,0x5
  40d97d:	jge    40d958 <__flatcc_fb_gen_c_builder@@Base+0xf68>
  40d97f:	mov    esi,0x2
  40d984:	mov    edx,0x1
  40d989:	lea    rdi,[rip+0x39aec]        # 44747c <_IO_stdin_used@@Base+0x1847c>
  40d990:	call   406220 <fwrite@plt>
  40d995:	mov    rax,QWORD PTR [rsp]
  40d999:	mov    rdi,QWORD PTR [rax]
  40d99c:	mov    rdx,QWORD PTR [rbx+0x88]
  40d9a3:	xor    eax,eax
  40d9a5:	lea    rsi,[rip+0x344ee]        # 441e9a <_IO_stdin_used@@Base+0x12e9a>
  40d9ac:	call   406180 <fprintf@plt>
  40d9b1:	add    r14d,0x1
  40d9b5:	mov    rbx,QWORD PTR [rbx]
  40d9b8:	test   rbx,rbx
  40d9bb:	jne    40d930 <__flatcc_fb_gen_c_builder@@Base+0xf40>
  40d9c1:	mov    rbx,QWORD PTR [rsp+0x8]
  40d9c6:	mov    rsi,QWORD PTR [rbx+0xd0]
  40d9cd:	mov    edi,0xa
  40d9d2:	call   406120 <fputc@plt>
  40d9d7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40d9de:	xor    eax,eax
  40d9e0:	lea    rsi,[rip+0x3436f]        # 441d56 <_IO_stdin_used@@Base+0x12d56>
  40d9e7:	mov    rdx,r13
  40d9ea:	mov    rcx,r13
  40d9ed:	mov    r8,rbx
  40d9f0:	mov    r9,r13
  40d9f3:	call   406180 <fprintf@plt>
  40d9f8:	mov    r15,QWORD PTR [r15]
  40d9fb:	test   r15,r15
  40d9fe:	jne    40d530 <__flatcc_fb_gen_c_builder@@Base+0xb40>
  40da04:	cmp    DWORD PTR [rsp+0x18],0x0
  40da09:	mov    r15,QWORD PTR [rsp+0x8]
  40da0e:	je     40e404 <__flatcc_fb_gen_c_builder@@Base+0x1a14>
  40da14:	mov    rsi,QWORD PTR [r15+0xd0]
  40da1b:	mov    edi,0xa
  40da20:	vzeroupper 
  40da23:	call   406120 <fputc@plt>
  40da28:	mov    rdi,r15
  40da2b:	call   40f080 <__flatcc_fb_gen_c_builder@@Base+0x2690>
  40da30:	mov    rax,QWORD PTR [r15+0xd8]
  40da37:	mov    r12,QWORD PTR [rax+0x40]
  40da3b:	test   r12,r12
  40da3e:	mov    rbx,QWORD PTR [rsp]
  40da42:	je     40e413 <__flatcc_fb_gen_c_builder@@Base+0x1a23>
  40da48:	nop    DWORD PTR [rax+rax*1+0x0]
  40da50:	cmp    WORD PTR [r12+0x10],0x0
  40da57:	jne    40e3f5 <__flatcc_fb_gen_c_builder@@Base+0x1a05>
  40da5d:	vxorps xmm0,xmm0,xmm0
  40da61:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40da6a:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40da73:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40da7c:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40da85:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40da8b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40da91:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40da97:	mov    QWORD PTR [rsp+0x100],0x0
  40daa3:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40daac:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40dab5:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40dabe:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40dac7:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40dad0:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40dad9:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40dae2:	mov    QWORD PTR [rsp+0x200],0x0
  40daee:	mov    rdi,QWORD PTR [r12+0x18]
  40daf3:	mov    rsi,r12
  40daf6:	lea    rdx,[rsp+0x20]
  40dafb:	vzeroupper 
  40dafe:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40db03:	mov    QWORD PTR [rsp+0x118],r12
  40db0b:	mov    r12,QWORD PTR [r12+0x28]
  40db10:	test   r12,r12
  40db13:	jne    40db49 <__flatcc_fb_gen_c_builder@@Base+0x1159>
  40db15:	jmp    40e150 <__flatcc_fb_gen_c_builder@@Base+0x1760>
  40db1a:	nop    WORD PTR [rax+rax*1+0x0]
  40db20:	mov    rdi,QWORD PTR [rbx]
  40db23:	xor    eax,eax
  40db25:	lea    rsi,[rip+0x345ba]        # 4420e6 <_IO_stdin_used@@Base+0x130e6>
  40db2c:	lea    rdx,[rsp+0x20]
  40db31:	mov    ecx,r13d
  40db34:	mov    r8,r14
  40db37:	call   406180 <fprintf@plt>
  40db3c:	mov    r12,QWORD PTR [r12]
  40db40:	test   r12,r12
  40db43:	je     40e150 <__flatcc_fb_gen_c_builder@@Base+0x1760>
  40db49:	mov    rax,QWORD PTR [r12+0x8]
  40db4e:	mov    r13d,DWORD PTR [rax+0x8]
  40db52:	mov    r14,QWORD PTR [rax]
  40db55:	test   BYTE PTR [r12+0x70],0x4
  40db5b:	jne    40db20 <__flatcc_fb_gen_c_builder@@Base+0x1130>
  40db5d:	mov    eax,DWORD PTR [r12+0x28]
  40db62:	add    eax,0xfffffff9
  40db65:	movzx  ecx,ax
  40db68:	cmp    ecx,0x8
  40db6b:	ja     40e4bc <__flatcc_fb_gen_c_builder@@Base+0x1acc>
  40db71:	movzx  eax,ax
  40db74:	lea    rcx,[rip+0x2b3e5]        # 438f60 <_IO_stdin_used@@Base+0x9f60>
  40db7b:	movsxd rax,DWORD PTR [rcx+rax*4]
  40db7f:	add    rax,rcx
  40db82:	jmp    rax
  40db84:	mov    ecx,DWORD PTR [r12+0x18]
  40db89:	lea    eax,[rcx-0x1]
  40db8c:	cmp    eax,0xb
  40db8f:	jae    40e570 <__flatcc_fb_gen_c_builder@@Base+0x1b80>
  40db95:	cmp    ecx,0x5
  40db98:	lea    rbx,[rip+0x23194]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  40db9f:	mov    r11,rbx
  40dba2:	cmove  r11,r15
  40dba6:	movsxd r10,eax
  40dba9:	mov    rdi,QWORD PTR [r15+0xd0]
  40dbb0:	mov    rcx,QWORD PTR [r12+0x88]
  40dbb8:	mov    eax,0x0
  40dbbd:	lea    rsi,[rip+0x3459d]        # 442161 <_IO_stdin_used@@Base+0x13161>
  40dbc4:	mov    rdx,r15
  40dbc7:	mov    r8,r15
  40dbca:	lea    r9,[rsp+0x20]
  40dbcf:	lea    rbx,[rip+0x44fba]        # 452b90 <fb_value_set_deleted@@Base+0x6930>
  40dbd6:	push   QWORD PTR [rbx+r10*8]
  40dbda:	push   r11
  40dbdc:	lea    rbx,[rip+0x4500d]        # 452bf0 <fb_value_set_deleted@@Base+0x6990>
  40dbe3:	push   QWORD PTR [rbx+r10*8]
  40dbe7:	push   r15
  40dbe9:	push   r14
  40dbeb:	push   r13
  40dbed:	call   406180 <fprintf@plt>
  40dbf2:	add    rsp,0x30
  40dbf6:	mov    rsi,QWORD PTR [r12+0x90]
  40dbfe:	test   rsi,rsi
  40dc01:	mov    rbx,QWORD PTR [rsp]
  40dc05:	je     40e054 <__flatcc_fb_gen_c_builder@@Base+0x1664>
  40dc0b:	movzx  eax,WORD PTR [rsi+0x10]
  40dc0f:	cmp    eax,0x1
  40dc12:	je     40de95 <__flatcc_fb_gen_c_builder@@Base+0x14a5>
  40dc18:	test   ax,ax
  40dc1b:	jne    40e6e3 <__flatcc_fb_gen_c_builder@@Base+0x1cf3>
  40dc21:	mov    rdi,QWORD PTR [rsi+0x18]
  40dc25:	lea    rbx,[rsp+0x120]
  40dc2d:	mov    rdx,rbx
  40dc30:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40dc35:	mov    rdi,QWORD PTR [r15+0xd0]
  40dc3c:	mov    eax,0x0
  40dc41:	lea    rsi,[rip+0x34550]        # 442198 <_IO_stdin_used@@Base+0x13198>
  40dc48:	mov    rdx,r15
  40dc4b:	mov    rcx,r15
  40dc4e:	lea    r8,[rsp+0x20]
  40dc53:	mov    r9d,r13d
  40dc56:	push   rbx
  40dc57:	push   rbx
  40dc58:	push   rbx
  40dc59:	push   r14
  40dc5b:	call   406180 <fprintf@plt>
  40dc60:	add    rsp,0x20
  40dc64:	mov    rbx,QWORD PTR [rsp]
  40dc68:	mov    r12,QWORD PTR [r12]
  40dc6c:	test   r12,r12
  40dc6f:	jne    40db49 <__flatcc_fb_gen_c_builder@@Base+0x1159>
  40dc75:	jmp    40e150 <__flatcc_fb_gen_c_builder@@Base+0x1760>
  40dc7a:	mov    rdi,QWORD PTR [r15+0xd0]
  40dc81:	mov    rcx,QWORD PTR [r12+0x88]
  40dc89:	xor    eax,eax
  40dc8b:	lea    rsi,[rip+0x34616]        # 4422a8 <_IO_stdin_used@@Base+0x132a8>
  40dc92:	jmp    40dd85 <__flatcc_fb_gen_c_builder@@Base+0x1395>
  40dc97:	mov    QWORD PTR [rsp+0x18],r13
  40dc9c:	mov    edi,DWORD PTR [r12+0x18]
  40dca1:	lea    eax,[rdi-0x1]
  40dca4:	cmp    eax,0xb
  40dca7:	jae    40e570 <__flatcc_fb_gen_c_builder@@Base+0x1b80>
  40dcad:	cmp    edi,0x5
  40dcb0:	lea    r13,[rip+0x2307c]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  40dcb7:	cmove  r13,r15
  40dcbb:	cdqe   
  40dcbd:	lea    rcx,[rip+0x44ecc]        # 452b90 <fb_value_set_deleted@@Base+0x6930>
  40dcc4:	mov    r15,QWORD PTR [rcx+rax*8]
  40dcc8:	lea    rcx,[rip+0x44f21]        # 452bf0 <fb_value_set_deleted@@Base+0x6990>
  40dccf:	mov    rax,QWORD PTR [rcx+rax*8]
  40dcd3:	mov    QWORD PTR [rsp+0x10],rax
  40dcd8:	lea    rsi,[r12+0x48]
  40dcdd:	lea    rax,[rsp+0x220]
  40dce5:	mov    rdx,rax
  40dce8:	call   40f310 <__flatcc_fb_gen_c_builder@@Base+0x2920>
  40dced:	mov    rax,QWORD PTR [rsp+0x8]
  40dcf2:	mov    rdi,QWORD PTR [rax+0xd0]
  40dcf9:	mov    rcx,QWORD PTR [r12+0x88]
  40dd01:	movzx  r10d,WORD PTR [r12+0x72]
  40dd07:	sub    rsp,0x8
  40dd0b:	mov    eax,0x0
  40dd10:	lea    rsi,[rip+0x34405]        # 44211c <_IO_stdin_used@@Base+0x1311c>
  40dd17:	mov    rdx,QWORD PTR [rsp+0x10]
  40dd1c:	mov    r8,QWORD PTR [rsp+0x10]
  40dd21:	lea    r9,[rsp+0x28]
  40dd26:	lea    rbx,[rsp+0x228]
  40dd2e:	push   rbx
  40dd2f:	push   r10
  40dd31:	push   QWORD PTR [r12+0x80]
  40dd39:	push   r15
  40dd3b:	mov    r15,QWORD PTR [rsp+0x30]
  40dd40:	push   r13
  40dd42:	push   QWORD PTR [rsp+0x40]
  40dd46:	push   r15
  40dd48:	push   r14
  40dd4a:	push   QWORD PTR [rsp+0x60]
  40dd4e:	call   406180 <fprintf@plt>
  40dd53:	add    rsp,0x50
  40dd57:	mov    rbx,QWORD PTR [rsp]
  40dd5b:	mov    r12,QWORD PTR [r12]
  40dd5f:	test   r12,r12
  40dd62:	jne    40db49 <__flatcc_fb_gen_c_builder@@Base+0x1159>
  40dd68:	jmp    40e150 <__flatcc_fb_gen_c_builder@@Base+0x1760>
  40dd6d:	mov    rdi,QWORD PTR [r15+0xd0]
  40dd74:	mov    rcx,QWORD PTR [r12+0x88]
  40dd7c:	xor    eax,eax
  40dd7e:	lea    rsi,[rip+0x3454e]        # 4422d3 <_IO_stdin_used@@Base+0x132d3>
  40dd85:	mov    rdx,r15
  40dd88:	mov    r8,r15
  40dd8b:	lea    r9,[rsp+0x20]
  40dd90:	push   r14
  40dd92:	push   r13
  40dd94:	call   406180 <fprintf@plt>
  40dd99:	add    rsp,0x10
  40dd9d:	mov    r12,QWORD PTR [r12]
  40dda1:	test   r12,r12
  40dda4:	jne    40db49 <__flatcc_fb_gen_c_builder@@Base+0x1159>
  40ddaa:	jmp    40e150 <__flatcc_fb_gen_c_builder@@Base+0x1760>
  40ddaf:	mov    rsi,QWORD PTR [r12+0x18]
  40ddb4:	mov    rdi,QWORD PTR [rsi+0x18]
  40ddb8:	lea    rdx,[rsp+0x120]
  40ddc0:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40ddc5:	mov    rax,QWORD PTR [r12+0x18]
  40ddca:	movzx  ecx,WORD PTR [rax+0x10]
  40ddce:	cmp    rcx,0x4
  40ddd2:	ja     40e5bc <__flatcc_fb_gen_c_builder@@Base+0x1bcc>
  40ddd8:	lea    rdx,[rip+0x2b1a5]        # 438f84 <_IO_stdin_used@@Base+0x9f84>
  40dddf:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40dde3:	add    rcx,rdx
  40dde6:	jmp    rcx
  40dde8:	test   BYTE PTR [rax+0x12],0x8
  40ddec:	je     40de07 <__flatcc_fb_gen_c_builder@@Base+0x1417>
  40ddee:	mov    rcx,QWORD PTR [rbx]
  40ddf1:	mov    esi,0x20
  40ddf6:	mov    edx,0x1
  40ddfb:	lea    rdi,[rip+0x345e0]        # 4423e2 <_IO_stdin_used@@Base+0x133e2>
  40de02:	call   406220 <fwrite@plt>
  40de07:	mov    rdi,QWORD PTR [r15+0xd0]
  40de0e:	mov    rcx,QWORD PTR [r12+0x88]
  40de16:	sub    rsp,0x8
  40de1a:	xor    eax,eax
  40de1c:	lea    rsi,[rip+0x34615]        # 442438 <_IO_stdin_used@@Base+0x13438>
  40de23:	jmp    40de7a <__flatcc_fb_gen_c_builder@@Base+0x148a>
  40de25:	mov    rsi,QWORD PTR [r12+0x18]
  40de2a:	mov    rdi,QWORD PTR [rsi+0x18]
  40de2e:	lea    rdx,[rsp+0x120]
  40de36:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40de3b:	mov    rax,QWORD PTR [r12+0x18]
  40de40:	movzx  ecx,WORD PTR [rax+0x10]
  40de44:	cmp    rcx,0x4
  40de48:	ja     40e605 <__flatcc_fb_gen_c_builder@@Base+0x1c15>
  40de4e:	lea    rdx,[rip+0x2b143]        # 438f98 <_IO_stdin_used@@Base+0x9f98>
  40de55:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40de59:	add    rcx,rdx
  40de5c:	jmp    rcx
  40de5e:	mov    rdi,QWORD PTR [r15+0xd0]
  40de65:	mov    rcx,QWORD PTR [r12+0x88]
  40de6d:	sub    rsp,0x8
  40de71:	xor    eax,eax
  40de73:	lea    rsi,[rip+0x344c4]        # 44233e <_IO_stdin_used@@Base+0x1333e>
  40de7a:	mov    rdx,r15
  40de7d:	mov    r8,r15
  40de80:	lea    r9,[rsp+0x28]
  40de85:	mov    r10,rbx
  40de88:	lea    rbx,[rsp+0x128]
  40de90:	jmp    40e098 <__flatcc_fb_gen_c_builder@@Base+0x16a8>
  40de95:	mov    rdi,QWORD PTR [rsi+0x18]
  40de99:	lea    rbx,[rsp+0x120]
  40dea1:	mov    rdx,rbx
  40dea4:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40dea9:	mov    rdi,QWORD PTR [r15+0xd0]
  40deb0:	mov    rax,QWORD PTR [r12+0x90]
  40deb8:	movzx  r10d,WORD PTR [rax+0xb0]
  40dec0:	sub    rsp,0x8
  40dec4:	mov    eax,0x0
  40dec9:	lea    rsi,[rip+0x34319]        # 4421e9 <_IO_stdin_used@@Base+0x131e9>
  40ded0:	mov    rdx,r15
  40ded3:	mov    rcx,r15
  40ded6:	lea    r8,[rsp+0x28]
  40dedb:	mov    r9d,r13d
  40dede:	push   rbx
  40dedf:	push   rbx
  40dee0:	mov    r11,rbx
  40dee3:	push   r10
  40dee5:	mov    rbx,QWORD PTR [rsp+0x20]
  40deea:	push   r11
  40deec:	push   r14
  40deee:	call   406180 <fprintf@plt>
  40def3:	jmp    40e050 <__flatcc_fb_gen_c_builder@@Base+0x1660>
  40def8:	mov    rdi,QWORD PTR [r15+0xd0]
  40deff:	mov    rcx,QWORD PTR [r12+0x88]
  40df07:	sub    rsp,0x8
  40df0b:	xor    eax,eax
  40df0d:	lea    rsi,[rip+0x34593]        # 4424a7 <_IO_stdin_used@@Base+0x134a7>
  40df14:	mov    rdx,r15
  40df17:	mov    r8,r15
  40df1a:	mov    r10,rbx
  40df1d:	lea    rbx,[rsp+0x28]
  40df22:	mov    r9,rbx
  40df25:	lea    rbx,[rsp+0x128]
  40df2d:	push   rbx
  40df2e:	mov    rbx,r10
  40df31:	push   r14
  40df33:	push   r13
  40df35:	call   406180 <fprintf@plt>
  40df3a:	add    rsp,0x20
  40df3e:	mov    r8,QWORD PTR [r12+0x18]
  40df43:	mov    r9d,0x1
  40df49:	jmp    40df99 <__flatcc_fb_gen_c_builder@@Base+0x15a9>
  40df4b:	mov    rdi,QWORD PTR [r15+0xd0]
  40df52:	mov    rcx,QWORD PTR [r12+0x88]
  40df5a:	sub    rsp,0x8
  40df5e:	xor    eax,eax
  40df60:	lea    rsi,[rip+0x3444d]        # 4423b4 <_IO_stdin_used@@Base+0x133b4>
  40df67:	mov    rdx,r15
  40df6a:	mov    r8,r15
  40df6d:	mov    r10,rbx
  40df70:	lea    rbx,[rsp+0x28]
  40df75:	mov    r9,rbx
  40df78:	lea    rbx,[rsp+0x128]
  40df80:	push   rbx
  40df81:	mov    rbx,r10
  40df84:	push   r14
  40df86:	push   r13
  40df88:	call   406180 <fprintf@plt>
  40df8d:	add    rsp,0x20
  40df91:	mov    r8,QWORD PTR [r12+0x18]
  40df96:	xor    r9d,r9d
  40df99:	mov    rdi,r15
  40df9c:	lea    rsi,[rsp+0x20]
  40dfa1:	mov    edx,r13d
  40dfa4:	mov    rcx,r14
  40dfa7:	call   40f490 <__flatcc_fb_gen_c_builder@@Base+0x2aa0>
  40dfac:	mov    r12,QWORD PTR [r12]
  40dfb0:	test   r12,r12
  40dfb3:	jne    40db49 <__flatcc_fb_gen_c_builder@@Base+0x1159>
  40dfb9:	jmp    40e150 <__flatcc_fb_gen_c_builder@@Base+0x1760>
  40dfbe:	test   BYTE PTR [rax+0x12],0x8
  40dfc2:	je     40dfdd <__flatcc_fb_gen_c_builder@@Base+0x15ed>
  40dfc4:	mov    rcx,QWORD PTR [rbx]
  40dfc7:	mov    esi,0x20
  40dfcc:	mov    edx,0x1
  40dfd1:	lea    rdi,[rip+0x3440a]        # 4423e2 <_IO_stdin_used@@Base+0x133e2>
  40dfd8:	call   406220 <fwrite@plt>
  40dfdd:	mov    rdi,QWORD PTR [r15+0xd0]
  40dfe4:	mov    rcx,QWORD PTR [r12+0x88]
  40dfec:	mov    eax,0x0
  40dff1:	lea    rsi,[rip+0x3440b]        # 442403 <_IO_stdin_used@@Base+0x13403>
  40dff8:	jmp    40e081 <__flatcc_fb_gen_c_builder@@Base+0x1691>
  40dffd:	mov    rdi,QWORD PTR [r15+0xd0]
  40e004:	mov    rcx,QWORD PTR [r12+0x88]
  40e00c:	movzx  ebx,WORD PTR [r12+0x72]
  40e012:	sub    rsp,0x8
  40e016:	mov    eax,0x0
  40e01b:	lea    rsi,[rip+0x342e3]        # 442305 <_IO_stdin_used@@Base+0x13305>
  40e022:	mov    rdx,r15
  40e025:	mov    r8,r15
  40e028:	lea    r9,[rsp+0x28]
  40e02d:	push   rbx
  40e02e:	mov    r10,QWORD PTR [rsp+0x10]
  40e033:	push   QWORD PTR [r12+0x80]
  40e03b:	lea    rbx,[rsp+0x138]
  40e043:	push   rbx
  40e044:	mov    rbx,r10
  40e047:	push   r14
  40e049:	push   r13
  40e04b:	call   406180 <fprintf@plt>
  40e050:	add    rsp,0x30
  40e054:	mov    r12,QWORD PTR [r12]
  40e058:	test   r12,r12
  40e05b:	jne    40db49 <__flatcc_fb_gen_c_builder@@Base+0x1159>
  40e061:	jmp    40e150 <__flatcc_fb_gen_c_builder@@Base+0x1760>
  40e066:	mov    rdi,QWORD PTR [r15+0xd0]
  40e06d:	mov    rcx,QWORD PTR [r12+0x88]
  40e075:	mov    eax,0x0
  40e07a:	lea    rsi,[rip+0x343ec]        # 44246d <_IO_stdin_used@@Base+0x1346d>
  40e081:	mov    rdx,r15
  40e084:	mov    r8,r15
  40e087:	lea    r9,[rsp+0x20]
  40e08c:	mov    r10,rbx
  40e08f:	lea    rbx,[rsp+0x120]
  40e097:	push   rbx
  40e098:	push   rbx
  40e099:	mov    rbx,r10
  40e09c:	push   r14
  40e09e:	push   r13
  40e0a0:	call   406180 <fprintf@plt>
  40e0a5:	add    rsp,0x20
  40e0a9:	mov    r12,QWORD PTR [r12]
  40e0ad:	test   r12,r12
  40e0b0:	jne    40db49 <__flatcc_fb_gen_c_builder@@Base+0x1159>
  40e0b6:	jmp    40e150 <__flatcc_fb_gen_c_builder@@Base+0x1760>
  40e0bb:	mov    edi,DWORD PTR [rax+0x48]
  40e0be:	lea    rsi,[r12+0x48]
  40e0c3:	lea    rax,[rsp+0x220]
  40e0cb:	mov    rdx,rax
  40e0ce:	call   40f310 <__flatcc_fb_gen_c_builder@@Base+0x2920>
  40e0d3:	mov    rdi,QWORD PTR [r15+0xd0]
  40e0da:	mov    rcx,QWORD PTR [r12+0x88]
  40e0e2:	movzx  r10d,WORD PTR [r12+0x72]
  40e0e8:	sub    rsp,0x8
  40e0ec:	mov    eax,0x0
  40e0f1:	lea    rsi,[rip+0x34274]        # 44236c <_IO_stdin_used@@Base+0x1336c>
  40e0f8:	mov    rdx,r15
  40e0fb:	mov    r8,r15
  40e0fe:	lea    r9,[rsp+0x28]
  40e103:	lea    rbx,[rsp+0x228]
  40e10b:	push   rbx
  40e10c:	push   r10
  40e10e:	mov    r10,QWORD PTR [rsp+0x18]
  40e113:	push   QWORD PTR [r12+0x80]
  40e11b:	lea    rbx,[rsp+0x140]
  40e123:	push   rbx
  40e124:	push   rbx
  40e125:	mov    rbx,r10
  40e128:	push   r14
  40e12a:	push   r13
  40e12c:	call   406180 <fprintf@plt>
  40e131:	add    rsp,0x40
  40e135:	mov    r12,QWORD PTR [r12]
  40e139:	test   r12,r12
  40e13c:	jne    40db49 <__flatcc_fb_gen_c_builder@@Base+0x1159>
  40e142:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e14c:	nop    DWORD PTR [rax+0x0]
  40e150:	mov    rsi,QWORD PTR [r15+0xd0]
  40e157:	mov    edi,0xa
  40e15c:	call   406120 <fputc@plt>
  40e161:	mov    r12,QWORD PTR [rsp+0x118]
  40e169:	movzx  r14d,WORD PTR [r12+0xa4]
  40e172:	vxorps xmm0,xmm0,xmm0
  40e176:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40e17f:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40e188:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40e191:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40e19a:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40e1a0:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40e1a6:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40e1ac:	mov    QWORD PTR [rsp+0x100],0x0
  40e1b8:	mov    rdi,QWORD PTR [r12+0x18]
  40e1bd:	mov    rsi,r12
  40e1c0:	lea    rbx,[rsp+0x20]
  40e1c5:	mov    rdx,rbx
  40e1c8:	vzeroupper 
  40e1cb:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40e1d0:	mov    rdi,QWORD PTR [r15+0xd0]
  40e1d7:	xor    eax,eax
  40e1d9:	lea    rsi,[rip+0x3447b]        # 44265b <_IO_stdin_used@@Base+0x1365b>
  40e1e0:	mov    rdx,rbx
  40e1e3:	mov    rcx,rbx
  40e1e6:	mov    r8,r15
  40e1e9:	mov    r9,rbx
  40e1ec:	call   406180 <fprintf@plt>
  40e1f1:	mov    rdi,QWORD PTR [r15+0xd0]
  40e1f8:	xor    eax,eax
  40e1fa:	lea    rsi,[rip+0x3449d]        # 44269e <_IO_stdin_used@@Base+0x1369e>
  40e201:	mov    rdx,rbx
  40e204:	call   406180 <fprintf@plt>
  40e209:	mov    rbx,QWORD PTR [r12+0x30]
  40e20e:	test   rbx,rbx
  40e211:	je     40e340 <__flatcc_fb_gen_c_builder@@Base+0x1950>
  40e217:	mov    r12d,r14d
  40e21a:	and    r12d,0x8
  40e21e:	shr    r12d,0x3
  40e222:	xor    r13d,r13d
  40e225:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e22f:	nop
  40e230:	test   BYTE PTR [rbx+0x70],0x4
  40e234:	jne    40e2b0 <__flatcc_fb_gen_c_builder@@Base+0x18c0>
  40e236:	mov    rax,QWORD PTR [rbx+0x8]
  40e23a:	mov    ecx,DWORD PTR [rax+0x8]
  40e23d:	mov    r8,QWORD PTR [rax]
  40e240:	movzx  eax,WORD PTR [rbx+0x28]
  40e244:	cmp    eax,0xe
  40e247:	jne    40e265 <__flatcc_fb_gen_c_builder@@Base+0x1875>
  40e249:	mov    rax,QWORD PTR [rbx+0x18]
  40e24d:	movzx  eax,WORD PTR [rax+0x10]
  40e251:	cmp    eax,0x4
  40e254:	setne  al
  40e257:	mov    edx,0x1
  40e25c:	cmove  r13d,edx
  40e260:	or     al,r12b
  40e263:	je     40e288 <__flatcc_fb_gen_c_builder@@Base+0x1898>
  40e265:	mov    rax,QWORD PTR [rsp]
  40e269:	mov    rdi,QWORD PTR [rax]
  40e26c:	mov    r9,QWORD PTR [rbx+0x88]
  40e273:	xor    eax,eax
  40e275:	lea    rsi,[rip+0x34460]        # 4426dc <_IO_stdin_used@@Base+0x136dc>
  40e27c:	lea    rdx,[rsp+0x20]
  40e281:	call   406180 <fprintf@plt>
  40e286:	jmp    40e2b0 <__flatcc_fb_gen_c_builder@@Base+0x18c0>
  40e288:	mov    rax,QWORD PTR [rsp]
  40e28c:	mov    rdi,QWORD PTR [rax]
  40e28f:	mov    r9,QWORD PTR [rbx+0x88]
  40e296:	xor    eax,eax
  40e298:	lea    rsi,[rip+0x34415]        # 4426b4 <_IO_stdin_used@@Base+0x136b4>
  40e29f:	lea    rdx,[rsp+0x20]
  40e2a4:	call   406180 <fprintf@plt>
  40e2a9:	mov    r13d,0x1
  40e2af:	nop
  40e2b0:	mov    rbx,QWORD PTR [rbx+0x98]
  40e2b7:	test   rbx,rbx
  40e2ba:	jne    40e230 <__flatcc_fb_gen_c_builder@@Base+0x1840>
  40e2c0:	test   r14b,0x8
  40e2c4:	mov    r12,QWORD PTR [rsp+0x118]
  40e2cc:	jne    40e340 <__flatcc_fb_gen_c_builder@@Base+0x1950>
  40e2ce:	test   r13d,r13d
  40e2d1:	je     40e340 <__flatcc_fb_gen_c_builder@@Base+0x1950>
  40e2d3:	mov    rbx,QWORD PTR [r12+0x30]
  40e2d8:	test   rbx,rbx
  40e2db:	jne    40e2ec <__flatcc_fb_gen_c_builder@@Base+0x18fc>
  40e2dd:	jmp    40e340 <__flatcc_fb_gen_c_builder@@Base+0x1950>
  40e2df:	nop
  40e2e0:	mov    rbx,QWORD PTR [rbx+0x98]
  40e2e7:	test   rbx,rbx
  40e2ea:	je     40e340 <__flatcc_fb_gen_c_builder@@Base+0x1950>
  40e2ec:	test   BYTE PTR [rbx+0x70],0x4
  40e2f0:	jne    40e2e0 <__flatcc_fb_gen_c_builder@@Base+0x18f0>
  40e2f2:	movzx  eax,WORD PTR [rbx+0x28]
  40e2f6:	cmp    eax,0xe
  40e2f9:	jne    40e2e0 <__flatcc_fb_gen_c_builder@@Base+0x18f0>
  40e2fb:	mov    rax,QWORD PTR [rbx+0x18]
  40e2ff:	movzx  eax,WORD PTR [rax+0x10]
  40e303:	cmp    eax,0x4
  40e306:	jne    40e2e0 <__flatcc_fb_gen_c_builder@@Base+0x18f0>
  40e308:	mov    rax,QWORD PTR [rbx+0x8]
  40e30c:	mov    r9,QWORD PTR [rbx+0x88]
  40e313:	mov    ecx,DWORD PTR [rax+0x8]
  40e316:	mov    r8,QWORD PTR [rax]
  40e319:	mov    rax,QWORD PTR [rsp]
  40e31d:	mov    rdi,QWORD PTR [rax]
  40e320:	xor    eax,eax
  40e322:	lea    rsi,[rip+0x343d5]        # 4426fe <_IO_stdin_used@@Base+0x136fe>
  40e329:	lea    rdx,[rsp+0x20]
  40e32e:	call   406180 <fprintf@plt>
  40e333:	jmp    40e2e0 <__flatcc_fb_gen_c_builder@@Base+0x18f0>
  40e335:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e33f:	nop
  40e340:	mov    rdi,QWORD PTR [r15+0xd0]
  40e347:	xor    eax,eax
  40e349:	lea    rsi,[rip+0x343da]        # 44272a <_IO_stdin_used@@Base+0x1372a>
  40e350:	lea    rbx,[rsp+0x20]
  40e355:	mov    rdx,rbx
  40e358:	call   406180 <fprintf@plt>
  40e35d:	vxorps xmm0,xmm0,xmm0
  40e361:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40e36a:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40e373:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40e37c:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40e385:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40e38b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40e391:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40e397:	mov    QWORD PTR [rsp+0x100],0x0
  40e3a3:	mov    rdi,QWORD PTR [r12+0x18]
  40e3a8:	mov    rsi,r12
  40e3ab:	mov    rdx,rbx
  40e3ae:	vzeroupper 
  40e3b1:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40e3b6:	mov    rdi,QWORD PTR [r15+0xd0]
  40e3bd:	sub    rsp,0x8
  40e3c1:	xor    eax,eax
  40e3c3:	lea    rsi,[rip+0x34395]        # 44275f <_IO_stdin_used@@Base+0x1375f>
  40e3ca:	mov    rdx,r15
  40e3cd:	mov    rcx,r15
  40e3d0:	mov    r8,rbx
  40e3d3:	mov    r9,rbx
  40e3d6:	push   rbx
  40e3d7:	call   406180 <fprintf@plt>
  40e3dc:	add    rsp,0x10
  40e3e0:	mov    rsi,QWORD PTR [r15+0xd0]
  40e3e7:	mov    edi,0xa
  40e3ec:	call   406120 <fputc@plt>
  40e3f1:	mov    rbx,QWORD PTR [rsp]
  40e3f5:	mov    r12,QWORD PTR [r12]
  40e3f9:	test   r12,r12
  40e3fc:	jne    40da50 <__flatcc_fb_gen_c_builder@@Base+0x1060>
  40e402:	jmp    40e413 <__flatcc_fb_gen_c_builder@@Base+0x1a23>
  40e404:	mov    rdi,r15
  40e407:	vzeroupper 
  40e40a:	call   40f080 <__flatcc_fb_gen_c_builder@@Base+0x2690>
  40e40f:	mov    rbx,QWORD PTR [rsp]
  40e413:	mov    rax,QWORD PTR [r15+0xe0]
  40e41a:	cmp    DWORD PTR [rax+0xac],0x0
  40e421:	je     40e43c <__flatcc_fb_gen_c_builder@@Base+0x1a4c>
  40e423:	mov    rcx,QWORD PTR [rbx]
  40e426:	lea    rdi,[rip+0x286a2]        # 436acf <_IO_stdin_used@@Base+0x7acf>
  40e42d:	mov    esi,0x24
  40e432:	mov    edx,0x1
  40e437:	call   406220 <fwrite@plt>
  40e43c:	mov    rdi,QWORD PTR [r15+0xd0]
  40e443:	mov    rax,QWORD PTR [r15+0xd8]
  40e44a:	mov    rdx,QWORD PTR [rax+0x118]
  40e451:	lea    rsi,[rip+0x3434a]        # 4427a2 <_IO_stdin_used@@Base+0x137a2>
  40e458:	xor    eax,eax
  40e45a:	call   406180 <fprintf@plt>
  40e45f:	xor    eax,eax
  40e461:	lea    rsp,[rbp-0x28]
  40e465:	pop    rbx
  40e466:	pop    r12
  40e468:	pop    r13
  40e46a:	pop    r14
  40e46c:	pop    r15
  40e46e:	pop    rbp
  40e46f:	ret    
  40e470:	mov    rax,QWORD PTR [rip+0x44b81]        # 452ff8 <stderr@GLIBC_2.2.5>
  40e477:	mov    rdi,QWORD PTR [rax]
  40e47a:	lea    rsi,[rip+0x22797]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40e481:	lea    rbx,[rip+0x3336c]        # 4417f4 <_IO_stdin_used@@Base+0x127f4>
  40e488:	lea    r8,[rip+0x335d3]        # 441a62 <_IO_stdin_used@@Base+0x12a62>
  40e48f:	mov    ecx,0x4b9
  40e494:	xor    eax,eax
  40e496:	mov    rdx,rbx
  40e499:	vzeroupper 
  40e49c:	call   406180 <fprintf@plt>
  40e4a1:	lea    rdi,[rip+0x336d7]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40e4a8:	lea    rcx,[rip+0x33957]        # 441e06 <_IO_stdin_used@@Base+0x12e06>
  40e4af:	mov    edx,0x4b9
  40e4b4:	mov    rsi,rbx
  40e4b7:	call   406100 <__assert_fail@plt>
  40e4bc:	mov    rax,QWORD PTR [rip+0x44b35]        # 452ff8 <stderr@GLIBC_2.2.5>
  40e4c3:	mov    rdi,QWORD PTR [rax]
  40e4c6:	lea    rsi,[rip+0x2274b]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40e4cd:	lea    rbx,[rip+0x33320]        # 4417f4 <_IO_stdin_used@@Base+0x127f4>
  40e4d4:	lea    r8,[rip+0x29eb8]        # 438393 <_IO_stdin_used@@Base+0x9393>
  40e4db:	mov    ecx,0x5e8
  40e4e0:	xor    eax,eax
  40e4e2:	mov    rdx,rbx
  40e4e5:	call   406180 <fprintf@plt>
  40e4ea:	lea    rdi,[rip+0x3368e]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40e4f1:	lea    rcx,[rip+0x33d6e]        # 442266 <_IO_stdin_used@@Base+0x13266>
  40e4f8:	mov    edx,0x5e8
  40e4fd:	mov    rsi,rbx
  40e500:	call   406100 <__assert_fail@plt>
  40e505:	lea    rdi,[rip+0x29046]        # 437552 <_IO_stdin_used@@Base+0x8552>
  40e50c:	lea    rsi,[rip+0x332e1]        # 4417f4 <_IO_stdin_used@@Base+0x127f4>
  40e513:	lea    rcx,[rip+0x33345]        # 44185f <_IO_stdin_used@@Base+0x1285f>
  40e51a:	mov    edx,0x3f2
  40e51f:	vzeroupper 
  40e522:	call   406100 <__assert_fail@plt>
  40e527:	mov    rax,QWORD PTR [rip+0x44aca]        # 452ff8 <stderr@GLIBC_2.2.5>
  40e52e:	mov    rdi,QWORD PTR [rax]
  40e531:	lea    rsi,[rip+0x226e0]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40e538:	lea    rbx,[rip+0x332b5]        # 4417f4 <_IO_stdin_used@@Base+0x127f4>
  40e53f:	lea    r8,[rip+0x33894]        # 441dda <_IO_stdin_used@@Base+0x12dda>
  40e546:	mov    ecx,0x495
  40e54b:	xor    eax,eax
  40e54d:	mov    rdx,rbx
  40e550:	call   406180 <fprintf@plt>
  40e555:	lea    rdi,[rip+0x33623]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40e55c:	lea    rcx,[rip+0x338a3]        # 441e06 <_IO_stdin_used@@Base+0x12e06>
  40e563:	mov    edx,0x495
  40e568:	mov    rsi,rbx
  40e56b:	call   406100 <__assert_fail@plt>
  40e570:	mov    rax,QWORD PTR [rip+0x44a81]        # 452ff8 <stderr@GLIBC_2.2.5>
  40e577:	mov    rdi,QWORD PTR [rax]
  40e57a:	lea    rsi,[rip+0x22697]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40e581:	lea    rbx,[rip+0x28e42]        # 4373ca <_IO_stdin_used@@Base+0x83ca>
  40e588:	lea    r8,[rip+0x28e9e]        # 43742d <_IO_stdin_used@@Base+0x842d>
  40e58f:	mov    ecx,0x8d
  40e594:	xor    eax,eax
  40e596:	mov    rdx,rbx
  40e599:	vzeroupper 
  40e59c:	call   406180 <fprintf@plt>
  40e5a1:	lea    rdi,[rip+0x335d7]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40e5a8:	lea    rcx,[rip+0x28eb5]        # 437464 <_IO_stdin_used@@Base+0x8464>
  40e5af:	mov    edx,0x8d
  40e5b4:	mov    rsi,rbx
  40e5b7:	call   406100 <__assert_fail@plt>
  40e5bc:	mov    rax,QWORD PTR [rip+0x44a35]        # 452ff8 <stderr@GLIBC_2.2.5>
  40e5c3:	mov    rdi,QWORD PTR [rax]
  40e5c6:	lea    rsi,[rip+0x2264b]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40e5cd:	lea    rbx,[rip+0x33220]        # 4417f4 <_IO_stdin_used@@Base+0x127f4>
  40e5d4:	lea    r8,[rip+0x29cf6]        # 4382d1 <_IO_stdin_used@@Base+0x92d1>
  40e5db:	mov    ecx,0x5e3
  40e5e0:	xor    eax,eax
  40e5e2:	mov    rdx,rbx
  40e5e5:	call   406180 <fprintf@plt>
  40e5ea:	lea    rdi,[rip+0x3358e]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40e5f1:	lea    rcx,[rip+0x33c6e]        # 442266 <_IO_stdin_used@@Base+0x13266>
  40e5f8:	mov    edx,0x5e3
  40e5fd:	mov    rsi,rbx
  40e600:	call   406100 <__assert_fail@plt>
  40e605:	mov    rax,QWORD PTR [rip+0x449ec]        # 452ff8 <stderr@GLIBC_2.2.5>
  40e60c:	mov    rdi,QWORD PTR [rax]
  40e60f:	lea    rsi,[rip+0x22602]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40e616:	lea    rbx,[rip+0x331d7]        # 4417f4 <_IO_stdin_used@@Base+0x127f4>
  40e61d:	lea    r8,[rip+0x29c64]        # 438288 <_IO_stdin_used@@Base+0x9288>
  40e624:	mov    ecx,0x5c0
  40e629:	xor    eax,eax
  40e62b:	mov    rdx,rbx
  40e62e:	call   406180 <fprintf@plt>
  40e633:	lea    rdi,[rip+0x33545]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40e63a:	lea    rcx,[rip+0x33c25]        # 442266 <_IO_stdin_used@@Base+0x13266>
  40e641:	mov    edx,0x5c0
  40e646:	mov    rsi,rbx
  40e649:	call   406100 <__assert_fail@plt>
  40e64e:	mov    rax,QWORD PTR [rip+0x449a3]        # 452ff8 <stderr@GLIBC_2.2.5>
  40e655:	mov    rdi,QWORD PTR [rax]
  40e658:	lea    rsi,[rip+0x225b9]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40e65f:	lea    rbx,[rip+0x28d64]        # 4373ca <_IO_stdin_used@@Base+0x83ca>
  40e666:	lea    r8,[rip+0x28dc0]        # 43742d <_IO_stdin_used@@Base+0x842d>
  40e66d:	mov    ecx,0x60
  40e672:	xor    eax,eax
  40e674:	mov    rdx,rbx
  40e677:	vzeroupper 
  40e67a:	call   406180 <fprintf@plt>
  40e67f:	lea    rdi,[rip+0x334f9]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40e686:	lea    rcx,[rip+0x296d0]        # 437d5d <_IO_stdin_used@@Base+0x8d5d>
  40e68d:	mov    edx,0x60
  40e692:	mov    rsi,rbx
  40e695:	call   406100 <__assert_fail@plt>
  40e69a:	mov    rax,QWORD PTR [rip+0x44957]        # 452ff8 <stderr@GLIBC_2.2.5>
  40e6a1:	mov    rdi,QWORD PTR [rax]
  40e6a4:	lea    rsi,[rip+0x2256d]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40e6ab:	lea    rbx,[rip+0x33142]        # 4417f4 <_IO_stdin_used@@Base+0x127f4>
  40e6b2:	lea    r8,[rip+0x337b0]        # 441e69 <_IO_stdin_used@@Base+0x12e69>
  40e6b9:	mov    ecx,0x4a5
  40e6be:	xor    eax,eax
  40e6c0:	mov    rdx,rbx
  40e6c3:	call   406180 <fprintf@plt>
  40e6c8:	lea    rdi,[rip+0x334b0]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40e6cf:	lea    rcx,[rip+0x33730]        # 441e06 <_IO_stdin_used@@Base+0x12e06>
  40e6d6:	mov    edx,0x4a5
  40e6db:	mov    rsi,rbx
  40e6de:	call   406100 <__assert_fail@plt>
  40e6e3:	mov    rax,QWORD PTR [rip+0x4490e]        # 452ff8 <stderr@GLIBC_2.2.5>
  40e6ea:	mov    rdi,QWORD PTR [rax]
  40e6ed:	lea    rsi,[rip+0x22524]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40e6f4:	lea    rbx,[rip+0x330f9]        # 4417f4 <_IO_stdin_used@@Base+0x127f4>
  40e6fb:	lea    r8,[rip+0x33b3d]        # 44223f <_IO_stdin_used@@Base+0x1323f>
  40e702:	mov    ecx,0x596
  40e707:	xor    eax,eax
  40e709:	mov    rdx,rbx
  40e70c:	call   406180 <fprintf@plt>
  40e711:	lea    rdi,[rip+0x33467]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40e718:	lea    rcx,[rip+0x33b47]        # 442266 <_IO_stdin_used@@Base+0x13266>
  40e71f:	mov    edx,0x596
  40e724:	mov    rsi,rbx
  40e727:	call   406100 <__assert_fail@plt>
  40e72c:	nop    DWORD PTR [rax+0x0]
  40e730:	push   rbp
  40e731:	push   rbx
  40e732:	push   rax
  40e733:	mov    rbx,QWORD PTR [rdi+0x28]
  40e737:	xor    ebp,ebp
  40e739:	test   rbx,rbx
  40e73c:	jne    40e748 <__flatcc_fb_gen_c_builder@@Base+0x1d58>
  40e73e:	jmp    40e785 <__flatcc_fb_gen_c_builder@@Base+0x1d95>
  40e740:	mov    rbx,QWORD PTR [rbx]
  40e743:	test   rbx,rbx
  40e746:	je     40e785 <__flatcc_fb_gen_c_builder@@Base+0x1d95>
  40e748:	test   BYTE PTR [rbx+0x70],0x4
  40e74c:	jne    40e740 <__flatcc_fb_gen_c_builder@@Base+0x1d50>
  40e74e:	movzx  eax,WORD PTR [rbx+0x28]
  40e752:	cmp    eax,0xe
  40e755:	jne    40e780 <__flatcc_fb_gen_c_builder@@Base+0x1d90>
  40e757:	mov    rdi,QWORD PTR [rbx+0x18]
  40e75b:	movzx  eax,WORD PTR [rdi+0x10]
  40e75f:	cmp    eax,0x1
  40e762:	jne    40e780 <__flatcc_fb_gen_c_builder@@Base+0x1d90>
  40e764:	call   40e730 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40e769:	add    ebp,eax
  40e76b:	mov    rbx,QWORD PTR [rbx]
  40e76e:	test   rbx,rbx
  40e771:	jne    40e748 <__flatcc_fb_gen_c_builder@@Base+0x1d58>
  40e773:	jmp    40e785 <__flatcc_fb_gen_c_builder@@Base+0x1d95>
  40e775:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e77f:	nop
  40e780:	add    ebp,0x1
  40e783:	jmp    40e740 <__flatcc_fb_gen_c_builder@@Base+0x1d50>
  40e785:	mov    eax,ebp
  40e787:	add    rsp,0x8
  40e78b:	pop    rbx
  40e78c:	pop    rbp
  40e78d:	ret    
  40e78e:	xchg   ax,ax
  40e790:	push   rbp
  40e791:	mov    rbp,rsp
  40e794:	push   r15
  40e796:	push   r14
  40e798:	push   r13
  40e79a:	push   r12
  40e79c:	push   rbx
  40e79d:	and    rsp,0xffffffffffffffe0
  40e7a1:	sub    rsp,0x120
  40e7a8:	vxorps xmm0,xmm0,xmm0
  40e7ac:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40e7b5:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40e7be:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40e7c7:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40e7d0:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40e7d6:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40e7dc:	mov    DWORD PTR [rsp+0xc],ecx
  40e7e0:	mov    r15d,edx
  40e7e3:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40e7e9:	mov    QWORD PTR [rsp+0x100],0x0
  40e7f5:	mov    r14,QWORD PTR [rsi+0x28]
  40e7f9:	test   r14,r14
  40e7fc:	je     40ea1c <__flatcc_fb_gen_c_builder@@Base+0x202c>
  40e802:	mov    r13d,r8d
  40e805:	mov    r12,rdi
  40e808:	test   r8d,r8d
  40e80b:	lea    rax,[rip+0x22520]        # 430d32 <_IO_stdin_used@@Base+0x1d32>
  40e812:	lea    rcx,[rip+0x23c33]        # 43244c <_IO_stdin_used@@Base+0x344c>
  40e819:	cmove  rcx,rax
  40e81d:	mov    QWORD PTR [rsp+0x10],rcx
  40e822:	mov    DWORD PTR [rsp+0x1c],r8d
  40e827:	nop    WORD PTR [rax+rax*1+0x0]
  40e830:	test   BYTE PTR [r14+0x70],0x4
  40e835:	jne    40ea10 <__flatcc_fb_gen_c_builder@@Base+0x2020>
  40e83b:	movzx  eax,WORD PTR [r14+0x28]
  40e840:	cmp    eax,0x8
  40e843:	je     40e880 <__flatcc_fb_gen_c_builder@@Base+0x1e90>
  40e845:	movzx  eax,ax
  40e848:	cmp    eax,0xe
  40e84b:	jne    40ea31 <__flatcc_fb_gen_c_builder@@Base+0x2041>
  40e851:	mov    rsi,QWORD PTR [r14+0x18]
  40e855:	movzx  eax,WORD PTR [rsi+0x10]
  40e859:	cmp    eax,0x1
  40e85c:	jne    40e8cd <__flatcc_fb_gen_c_builder@@Base+0x1edd>
  40e85e:	mov    rdi,r12
  40e861:	mov    edx,r15d
  40e864:	mov    ecx,DWORD PTR [rsp+0xc]
  40e868:	mov    r8d,r13d
  40e86b:	vzeroupper 
  40e86e:	call   40e790 <__flatcc_fb_gen_c_builder@@Base+0x1da0>
  40e873:	mov    r15d,eax
  40e876:	jmp    40ea10 <__flatcc_fb_gen_c_builder@@Base+0x2020>
  40e87b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e880:	cmp    DWORD PTR [rsp+0xc],0x0
  40e885:	je     40e949 <__flatcc_fb_gen_c_builder@@Base+0x1f59>
  40e88b:	test   r15d,r15d
  40e88e:	je     40e921 <__flatcc_fb_gen_c_builder@@Base+0x1f31>
  40e894:	mov    rcx,QWORD PTR [r12+0xd0]
  40e89c:	test   r15b,0x3
  40e8a0:	jne    40e930 <__flatcc_fb_gen_c_builder@@Base+0x1f40>
  40e8a6:	mov    eax,DWORD PTR [rsp+0xc]
  40e8aa:	sub    eax,r15d
  40e8ad:	cmp    eax,0x2
  40e8b0:	jle    40e930 <__flatcc_fb_gen_c_builder@@Base+0x1f40>
  40e8b2:	xor    eax,eax
  40e8b4:	mov    rdi,rcx
  40e8b7:	lea    rsi,[rip+0x33222]        # 441ae0 <_IO_stdin_used@@Base+0x12ae0>
  40e8be:	mov    rdx,QWORD PTR [rsp+0x10]
  40e8c3:	vzeroupper 
  40e8c6:	call   406180 <fprintf@plt>
  40e8cb:	jmp    40e949 <__flatcc_fb_gen_c_builder@@Base+0x1f59>
  40e8cd:	cmp    DWORD PTR [rsp+0xc],0x0
  40e8d2:	je     40e9c5 <__flatcc_fb_gen_c_builder@@Base+0x1fd5>
  40e8d8:	test   r15d,r15d
  40e8db:	je     40e999 <__flatcc_fb_gen_c_builder@@Base+0x1fa9>
  40e8e1:	mov    rcx,QWORD PTR [r12+0xd0]
  40e8e9:	test   r15b,0x3
  40e8ed:	jne    40e9ac <__flatcc_fb_gen_c_builder@@Base+0x1fbc>
  40e8f3:	mov    eax,DWORD PTR [rsp+0xc]
  40e8f7:	sub    eax,r15d
  40e8fa:	cmp    eax,0x2
  40e8fd:	jle    40e9ac <__flatcc_fb_gen_c_builder@@Base+0x1fbc>
  40e903:	xor    eax,eax
  40e905:	mov    rdi,rcx
  40e908:	lea    rsi,[rip+0x331d1]        # 441ae0 <_IO_stdin_used@@Base+0x12ae0>
  40e90f:	mov    rdx,QWORD PTR [rsp+0x10]
  40e914:	vzeroupper 
  40e917:	call   406180 <fprintf@plt>
  40e91c:	jmp    40e9c5 <__flatcc_fb_gen_c_builder@@Base+0x1fd5>
  40e921:	mov    rcx,QWORD PTR [r12+0xd0]
  40e929:	cmp    DWORD PTR [rsp+0xc],0x5
  40e92e:	jge    40e8b2 <__flatcc_fb_gen_c_builder@@Base+0x1ec2>
  40e930:	mov    esi,0x2
  40e935:	mov    edx,0x1
  40e93a:	lea    rdi,[rip+0x38b3b]        # 44747c <_IO_stdin_used@@Base+0x1847c>
  40e941:	vzeroupper 
  40e944:	call   406220 <fwrite@plt>
  40e949:	mov    ecx,DWORD PTR [r14+0x18]
  40e94d:	lea    eax,[rcx-0x1]
  40e950:	cmp    eax,0xb
  40e953:	jae    40ea7d <__flatcc_fb_gen_c_builder@@Base+0x208d>
  40e959:	cmp    ecx,0x5
  40e95c:	lea    rdx,[rip+0x223d0]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  40e963:	cmove  rdx,r12
  40e967:	cdqe   
  40e969:	lea    rcx,[rip+0x44220]        # 452b90 <fb_value_set_deleted@@Base+0x6930>
  40e970:	mov    rcx,QWORD PTR [rcx+rax*8]
  40e974:	mov    rdi,QWORD PTR [r12+0xd0]
  40e97c:	lea    ebx,[r15+0x1]
  40e980:	xor    eax,eax
  40e982:	lea    rsi,[rip+0x330d0]        # 441a59 <_IO_stdin_used@@Base+0x12a59>
  40e989:	mov    r8d,r15d
  40e98c:	vzeroupper 
  40e98f:	call   406180 <fprintf@plt>
  40e994:	mov    r15d,ebx
  40e997:	jmp    40ea10 <__flatcc_fb_gen_c_builder@@Base+0x2020>
  40e999:	mov    rcx,QWORD PTR [r12+0xd0]
  40e9a1:	cmp    DWORD PTR [rsp+0xc],0x5
  40e9a6:	jge    40e903 <__flatcc_fb_gen_c_builder@@Base+0x1f13>
  40e9ac:	mov    esi,0x2
  40e9b1:	mov    edx,0x1
  40e9b6:	lea    rdi,[rip+0x38abf]        # 44747c <_IO_stdin_used@@Base+0x1847c>
  40e9bd:	vzeroupper 
  40e9c0:	call   406220 <fwrite@plt>
  40e9c5:	mov    rsi,QWORD PTR [r14+0x18]
  40e9c9:	mov    rdi,QWORD PTR [rsi+0x18]
  40e9cd:	lea    rbx,[rsp+0x20]
  40e9d2:	mov    rdx,rbx
  40e9d5:	vzeroupper 
  40e9d8:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40e9dd:	mov    rdi,QWORD PTR [r12+0xd0]
  40e9e5:	lea    r13d,[r15+0x1]
  40e9e9:	xor    eax,eax
  40e9eb:	lea    rsi,[rip+0x33059]        # 441a4b <_IO_stdin_used@@Base+0x12a4b>
  40e9f2:	mov    rdx,rbx
  40e9f5:	mov    ecx,r15d
  40e9f8:	call   406180 <fprintf@plt>
  40e9fd:	mov    r15d,r13d
  40ea00:	mov    r13d,DWORD PTR [rsp+0x1c]
  40ea05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ea0f:	nop
  40ea10:	mov    r14,QWORD PTR [r14]
  40ea13:	test   r14,r14
  40ea16:	jne    40e830 <__flatcc_fb_gen_c_builder@@Base+0x1e40>
  40ea1c:	mov    eax,r15d
  40ea1f:	lea    rsp,[rbp-0x28]
  40ea23:	pop    rbx
  40ea24:	pop    r12
  40ea26:	pop    r13
  40ea28:	pop    r14
  40ea2a:	pop    r15
  40ea2c:	pop    rbp
  40ea2d:	vzeroupper 
  40ea30:	ret    
  40ea31:	mov    rax,QWORD PTR [rip+0x445c0]        # 452ff8 <stderr@GLIBC_2.2.5>
  40ea38:	mov    rdi,QWORD PTR [rax]
  40ea3b:	lea    rsi,[rip+0x221d6]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40ea42:	lea    rbx,[rip+0x32dab]        # 4417f4 <_IO_stdin_used@@Base+0x127f4>
  40ea49:	lea    r8,[rip+0x33012]        # 441a62 <_IO_stdin_used@@Base+0x12a62>
  40ea50:	mov    ecx,0x352
  40ea55:	xor    eax,eax
  40ea57:	mov    rdx,rbx
  40ea5a:	vzeroupper 
  40ea5d:	call   406180 <fprintf@plt>
  40ea62:	lea    rdi,[rip+0x33116]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40ea69:	lea    rcx,[rip+0x33020]        # 441a90 <_IO_stdin_used@@Base+0x12a90>
  40ea70:	mov    edx,0x352
  40ea75:	mov    rsi,rbx
  40ea78:	call   406100 <__assert_fail@plt>
  40ea7d:	mov    rax,QWORD PTR [rip+0x44574]        # 452ff8 <stderr@GLIBC_2.2.5>
  40ea84:	mov    rdi,QWORD PTR [rax]
  40ea87:	lea    rsi,[rip+0x2218a]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40ea8e:	lea    rbx,[rip+0x28935]        # 4373ca <_IO_stdin_used@@Base+0x83ca>
  40ea95:	lea    r8,[rip+0x28991]        # 43742d <_IO_stdin_used@@Base+0x842d>
  40ea9c:	mov    ecx,0x8d
  40eaa1:	xor    eax,eax
  40eaa3:	mov    rdx,rbx
  40eaa6:	vzeroupper 
  40eaa9:	call   406180 <fprintf@plt>
  40eaae:	lea    rdi,[rip+0x330ca]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40eab5:	lea    rcx,[rip+0x289a8]        # 437464 <_IO_stdin_used@@Base+0x8464>
  40eabc:	mov    edx,0x8d
  40eac1:	mov    rsi,rbx
  40eac4:	call   406100 <__assert_fail@plt>
  40eac9:	nop    DWORD PTR [rax+0x0]
  40ead0:	push   rbp
  40ead1:	mov    rbp,rsp
  40ead4:	push   r15
  40ead6:	push   r14
  40ead8:	push   r13
  40eada:	push   r12
  40eadc:	push   rbx
  40eadd:	and    rsp,0xffffffffffffffe0
  40eae1:	sub    rsp,0x140
  40eae8:	mov    DWORD PTR [rsp+0x18],r8d
  40eaed:	mov    DWORD PTR [rsp+0x1c],edx
  40eaf1:	mov    rbx,rdi
  40eaf4:	vxorps xmm0,xmm0,xmm0
  40eaf8:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  40eb01:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40eb0a:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40eb13:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40eb1c:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40eb25:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40eb2b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40eb31:	mov    QWORD PTR [rsp+0x120],0x0
  40eb3d:	cmp    ecx,0x1
  40eb40:	lea    rax,[rip+0x32fa6]        # 441aed <_IO_stdin_used@@Base+0x12aed>
  40eb47:	lea    rdx,[rip+0x221e5]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  40eb4e:	cmove  rdx,rax
  40eb52:	mov    DWORD PTR [rsp+0x28],ecx
  40eb56:	cmp    ecx,0x2
  40eb59:	lea    rax,[rip+0x32f86]        # 441ae6 <_IO_stdin_used@@Base+0x12ae6>
  40eb60:	cmovne rax,rdx
  40eb64:	mov    QWORD PTR [rsp+0x30],rax
  40eb69:	mov    r12,QWORD PTR [rsi+0x28]
  40eb6d:	test   r12,r12
  40eb70:	je     40efaf <__flatcc_fb_gen_c_builder@@Base+0x25bf>
  40eb76:	xor    r13d,r13d
  40eb79:	xor    eax,eax
  40eb7b:	mov    QWORD PTR [rsp+0x20],rax
  40eb80:	jmp    40ebb0 <__flatcc_fb_gen_c_builder@@Base+0x21c0>
  40eb82:	xor    eax,eax
  40eb84:	lea    rsi,[rip+0x33040]        # 441bcb <_IO_stdin_used@@Base+0x12bcb>
  40eb8b:	jmp    40eb96 <__flatcc_fb_gen_c_builder@@Base+0x21a6>
  40eb8d:	xor    eax,eax
  40eb8f:	lea    rsi,[rip+0x3307d]        # 441c13 <_IO_stdin_used@@Base+0x12c13>
  40eb96:	lea    rdx,[rsp+0x40]
  40eb9b:	mov    ecx,r15d
  40eb9e:	mov    r8,r14
  40eba1:	mov    r9d,r13d
  40eba4:	call   406180 <fprintf@plt>
  40eba9:	jmp    40ef9e <__flatcc_fb_gen_c_builder@@Base+0x25ae>
  40ebae:	xchg   ax,ax
  40ebb0:	mov    rax,QWORD PTR [r12+0x8]
  40ebb5:	mov    r15d,DWORD PTR [rax+0x8]
  40ebb9:	mov    r14,QWORD PTR [rax]
  40ebbc:	test   r13d,r13d
  40ebbf:	jle    40ec09 <__flatcc_fb_gen_c_builder@@Base+0x2219>
  40ebc1:	mov    rcx,QWORD PTR [rbx+0xd0]
  40ebc8:	test   r13b,0x3
  40ebcc:	je     40ebf0 <__flatcc_fb_gen_c_builder@@Base+0x2200>
  40ebce:	mov    esi,0x2
  40ebd3:	mov    edx,0x1
  40ebd8:	lea    rdi,[rip+0x32f1c]        # 441afb <_IO_stdin_used@@Base+0x12afb>
  40ebdf:	jmp    40ec01 <__flatcc_fb_gen_c_builder@@Base+0x2211>
  40ebe1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ebeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ebf0:	mov    esi,0x4
  40ebf5:	mov    edx,0x1
  40ebfa:	lea    rdi,[rip+0x32ef5]        # 441af6 <_IO_stdin_used@@Base+0x12af6>
  40ec01:	vzeroupper 
  40ec04:	call   406220 <fwrite@plt>
  40ec09:	movzx  eax,WORD PTR [r12+0x28]
  40ec0f:	cmp    eax,0x8
  40ec12:	je     40eca0 <__flatcc_fb_gen_c_builder@@Base+0x22b0>
  40ec18:	movzx  eax,ax
  40ec1b:	cmp    eax,0xe
  40ec1e:	jne    40efe8 <__flatcc_fb_gen_c_builder@@Base+0x25f8>
  40ec24:	mov    rsi,QWORD PTR [r12+0x18]
  40ec29:	mov    rdi,QWORD PTR [rsi+0x18]
  40ec2d:	lea    rdx,[rsp+0x40]
  40ec32:	vzeroupper 
  40ec35:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40ec3a:	mov    rax,QWORD PTR [r12+0x18]
  40ec3f:	movzx  ecx,WORD PTR [rax+0x10]
  40ec43:	movzx  eax,WORD PTR [r12+0x70]
  40ec49:	cmp    ecx,0x1
  40ec4c:	jne    40ed20 <__flatcc_fb_gen_c_builder@@Base+0x2330>
  40ec52:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ec59:	test   al,0x4
  40ec5b:	je     40ed56 <__flatcc_fb_gen_c_builder@@Base+0x2366>
  40ec61:	xor    eax,eax
  40ec63:	lea    rsi,[rip+0x32e94]        # 441afe <_IO_stdin_used@@Base+0x12afe>
  40ec6a:	mov    r14,rbx
  40ec6d:	mov    rbx,QWORD PTR [rsp+0x20]
  40ec72:	mov    edx,ebx
  40ec74:	mov    ecx,ebx
  40ec76:	call   406180 <fprintf@plt>
  40ec7b:	add    ebx,0x1
  40ec7e:	mov    QWORD PTR [rsp+0x20],rbx
  40ec83:	mov    rbx,r14
  40ec86:	mov    rdi,QWORD PTR [r12+0x18]
  40ec8b:	call   40e730 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40ec90:	add    eax,r13d
  40ec93:	mov    r13d,eax
  40ec96:	jmp    40efa2 <__flatcc_fb_gen_c_builder@@Base+0x25b2>
  40ec9b:	nop    DWORD PTR [rax+rax*1+0x0]
  40eca0:	mov    eax,DWORD PTR [r12+0x18]
  40eca5:	add    eax,0xffffffff
  40eca8:	cmp    eax,0xb
  40ecab:	jae    40f034 <__flatcc_fb_gen_c_builder@@Base+0x2644>
  40ecb1:	test   BYTE PTR [r12+0x70],0x4
  40ecb7:	jne    40ed24 <__flatcc_fb_gen_c_builder@@Base+0x2334>
  40ecb9:	cdqe   
  40ecbb:	lea    rcx,[rip+0x43f2e]        # 452bf0 <fb_value_set_deleted@@Base+0x6990>
  40ecc2:	mov    rcx,QWORD PTR [rcx+rax*8]
  40ecc6:	cmp    QWORD PTR [r12+0x80],0x1
  40eccf:	mov    eax,DWORD PTR [rsp+0x28]
  40ecd3:	mov    edx,0x0
  40ecd8:	cmove  eax,edx
  40ecdb:	cmp    eax,0x2
  40ecde:	je     40ee00 <__flatcc_fb_gen_c_builder@@Base+0x2410>
  40ece4:	cmp    eax,0x1
  40ece7:	jne    40edcc <__flatcc_fb_gen_c_builder@@Base+0x23dc>
  40eced:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ecf4:	cmp    DWORD PTR [rsp+0x18],0x0
  40ecf9:	je     40ef71 <__flatcc_fb_gen_c_builder@@Base+0x2581>
  40ecff:	mov    QWORD PTR [rsp+0x8],r14
  40ed04:	mov    DWORD PTR [rsp],r15d
  40ed08:	xor    eax,eax
  40ed0a:	lea    rsi,[rip+0x32e91]        # 441ba2 <_IO_stdin_used@@Base+0x12ba2>
  40ed11:	jmp    40ef8d <__flatcc_fb_gen_c_builder@@Base+0x259d>
  40ed16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ed20:	test   al,0x4
  40ed22:	je     40ed85 <__flatcc_fb_gen_c_builder@@Base+0x2395>
  40ed24:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ed2b:	mov    rdx,QWORD PTR [rsp+0x20]
  40ed30:	lea    r14d,[rdx+0x1]
  40ed34:	xor    eax,eax
  40ed36:	lea    rsi,[rip+0x32e2e]        # 441b6b <_IO_stdin_used@@Base+0x12b6b>
  40ed3d:	vzeroupper 
  40ed40:	call   406180 <fprintf@plt>
  40ed45:	add    r13d,0x1
  40ed49:	mov    eax,r14d
  40ed4c:	mov    QWORD PTR [rsp+0x20],rax
  40ed51:	jmp    40efa2 <__flatcc_fb_gen_c_builder@@Base+0x25b2>
  40ed56:	cmp    DWORD PTR [rsp+0x18],0x0
  40ed5b:	je     40ee29 <__flatcc_fb_gen_c_builder@@Base+0x2439>
  40ed61:	mov    QWORD PTR [rsp+0x8],r14
  40ed66:	mov    DWORD PTR [rsp],r15d
  40ed6a:	xor    eax,eax
  40ed6c:	lea    rsi,[rip+0x32dc4]        # 441b37 <_IO_stdin_used@@Base+0x12b37>
  40ed73:	lea    rdx,[rsp+0x40]
  40ed78:	mov    r8d,r15d
  40ed7b:	mov    rcx,QWORD PTR [rsp+0x30]
  40ed80:	jmp    40ef93 <__flatcc_fb_gen_c_builder@@Base+0x25a3>
  40ed85:	cmp    QWORD PTR [r12+0x80],0x1
  40ed8e:	mov    eax,DWORD PTR [rsp+0x28]
  40ed92:	mov    ecx,0x0
  40ed97:	cmove  eax,ecx
  40ed9a:	cmp    eax,0x2
  40ed9d:	je     40ef3d <__flatcc_fb_gen_c_builder@@Base+0x254d>
  40eda3:	cmp    eax,0x1
  40eda6:	jne    40edcc <__flatcc_fb_gen_c_builder@@Base+0x23dc>
  40eda8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40edaf:	cmp    DWORD PTR [rsp+0x18],0x0
  40edb4:	je     40eb82 <__flatcc_fb_gen_c_builder@@Base+0x2192>
  40edba:	mov    QWORD PTR [rsp],r14
  40edbe:	xor    eax,eax
  40edc0:	lea    rsi,[rip+0x32ddd]        # 441ba4 <_IO_stdin_used@@Base+0x12ba4>
  40edc7:	jmp    40ef5c <__flatcc_fb_gen_c_builder@@Base+0x256c>
  40edcc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40edd3:	cmp    DWORD PTR [rsp+0x18],0x0
  40edd8:	je     40ef21 <__flatcc_fb_gen_c_builder@@Base+0x2531>
  40edde:	xor    eax,eax
  40ede0:	lea    rsi,[rip+0x32d9a]        # 441b81 <_IO_stdin_used@@Base+0x12b81>
  40ede7:	mov    edx,r15d
  40edea:	mov    rcx,r14
  40eded:	mov    r8d,r15d
  40edf0:	mov    r9,r14
  40edf3:	vzeroupper 
  40edf6:	call   406180 <fprintf@plt>
  40edfb:	jmp    40ef9e <__flatcc_fb_gen_c_builder@@Base+0x25ae>
  40ee00:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ee07:	cmp    DWORD PTR [rsp+0x18],0x0
  40ee0c:	je     40ef80 <__flatcc_fb_gen_c_builder@@Base+0x2590>
  40ee12:	mov    QWORD PTR [rsp+0x8],r14
  40ee17:	mov    DWORD PTR [rsp],r15d
  40ee1b:	xor    eax,eax
  40ee1d:	lea    rsi,[rip+0x32dc8]        # 441bec <_IO_stdin_used@@Base+0x12bec>
  40ee24:	jmp    40ef8d <__flatcc_fb_gen_c_builder@@Base+0x259d>
  40ee29:	xor    eax,eax
  40ee2b:	lea    rsi,[rip+0x32d24]        # 441b56 <_IO_stdin_used@@Base+0x12b56>
  40ee32:	lea    rdx,[rsp+0x40]
  40ee37:	mov    rcx,QWORD PTR [rsp+0x30]
  40ee3c:	mov    r8d,r15d
  40ee3f:	mov    r9,r14
  40ee42:	call   406180 <fprintf@plt>
  40ee47:	mov    rdi,QWORD PTR [r12+0x18]
  40ee4c:	call   40e730 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40ee51:	mov    DWORD PTR [rsp+0x2c],eax
  40ee55:	test   eax,eax
  40ee57:	jle    40ef0b <__flatcc_fb_gen_c_builder@@Base+0x251b>
  40ee5d:	mov    QWORD PTR [rsp+0x38],r13
  40ee62:	mov    r14,rbx
  40ee65:	xor    ebx,ebx
  40ee67:	mov    r13d,DWORD PTR [rsp+0x1c]
  40ee6c:	nop    DWORD PTR [rax+0x0]
  40ee70:	mov    rax,QWORD PTR [rsp+0x38]
  40ee75:	lea    r15d,[rax+rbx*1]
  40ee79:	cmp    DWORD PTR [rsp+0x1c],0x0
  40ee7e:	je     40eed4 <__flatcc_fb_gen_c_builder@@Base+0x24e4>
  40ee80:	test   ebx,ebx
  40ee82:	je     40eeb0 <__flatcc_fb_gen_c_builder@@Base+0x24c0>
  40ee84:	mov    rcx,QWORD PTR [r14+0xd0]
  40ee8b:	test   bl,0x3
  40ee8e:	jne    40eebe <__flatcc_fb_gen_c_builder@@Base+0x24ce>
  40ee90:	cmp    r13d,0x2
  40ee94:	jle    40eebe <__flatcc_fb_gen_c_builder@@Base+0x24ce>
  40ee96:	xor    eax,eax
  40ee98:	mov    rdi,rcx
  40ee9b:	lea    rsi,[rip+0x32c3e]        # 441ae0 <_IO_stdin_used@@Base+0x12ae0>
  40eea2:	lea    rdx,[rip+0x21e89]        # 430d32 <_IO_stdin_used@@Base+0x1d32>
  40eea9:	call   406180 <fprintf@plt>
  40eeae:	jmp    40eed4 <__flatcc_fb_gen_c_builder@@Base+0x24e4>
  40eeb0:	mov    rcx,QWORD PTR [r14+0xd0]
  40eeb7:	cmp    DWORD PTR [rsp+0x1c],0x5
  40eebc:	jge    40ee96 <__flatcc_fb_gen_c_builder@@Base+0x24a6>
  40eebe:	mov    esi,0x2
  40eec3:	mov    edx,0x1
  40eec8:	lea    rdi,[rip+0x385ad]        # 44747c <_IO_stdin_used@@Base+0x1847c>
  40eecf:	call   406220 <fwrite@plt>
  40eed4:	mov    rdi,QWORD PTR [r14+0xd0]
  40eedb:	xor    eax,eax
  40eedd:	lea    rsi,[rip+0x32cba]        # 441b9e <_IO_stdin_used@@Base+0x12b9e>
  40eee4:	mov    edx,r15d
  40eee7:	call   406180 <fprintf@plt>
  40eeec:	add    ebx,0x1
  40eeef:	add    r13d,0xffffffff
  40eef3:	cmp    DWORD PTR [rsp+0x2c],ebx
  40eef7:	jne    40ee70 <__flatcc_fb_gen_c_builder@@Base+0x2480>
  40eefd:	mov    eax,DWORD PTR [rsp+0x2c]
  40ef01:	add    eax,DWORD PTR [rsp+0x38]
  40ef05:	mov    r13d,eax
  40ef08:	mov    rbx,r14
  40ef0b:	mov    rsi,QWORD PTR [rbx+0xd0]
  40ef12:	mov    edi,0x29
  40ef17:	call   406120 <fputc@plt>
  40ef1c:	jmp    40efa2 <__flatcc_fb_gen_c_builder@@Base+0x25b2>
  40ef21:	xor    eax,eax
  40ef23:	lea    rsi,[rip+0x32c6a]        # 441b94 <_IO_stdin_used@@Base+0x12b94>
  40ef2a:	mov    edx,r15d
  40ef2d:	mov    rcx,r14
  40ef30:	mov    r8d,r13d
  40ef33:	vzeroupper 
  40ef36:	call   406180 <fprintf@plt>
  40ef3b:	jmp    40ef9e <__flatcc_fb_gen_c_builder@@Base+0x25ae>
  40ef3d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ef44:	cmp    DWORD PTR [rsp+0x18],0x0
  40ef49:	je     40eb8d <__flatcc_fb_gen_c_builder@@Base+0x219d>
  40ef4f:	mov    QWORD PTR [rsp],r14
  40ef53:	xor    eax,eax
  40ef55:	lea    rsi,[rip+0x32c92]        # 441bee <_IO_stdin_used@@Base+0x12bee>
  40ef5c:	lea    rdx,[rsp+0x40]
  40ef61:	mov    r8,r14
  40ef64:	mov    ecx,r15d
  40ef67:	mov    r9d,r15d
  40ef6a:	call   406180 <fprintf@plt>
  40ef6f:	jmp    40ef9e <__flatcc_fb_gen_c_builder@@Base+0x25ae>
  40ef71:	mov    DWORD PTR [rsp],r13d
  40ef75:	xor    eax,eax
  40ef77:	lea    rsi,[rip+0x32c4b]        # 441bc9 <_IO_stdin_used@@Base+0x12bc9>
  40ef7e:	jmp    40ef8d <__flatcc_fb_gen_c_builder@@Base+0x259d>
  40ef80:	mov    DWORD PTR [rsp],r13d
  40ef84:	xor    eax,eax
  40ef86:	lea    rsi,[rip+0x32c84]        # 441c11 <_IO_stdin_used@@Base+0x12c11>
  40ef8d:	mov    r8d,r15d
  40ef90:	mov    rdx,rbx
  40ef93:	mov    r9,r14
  40ef96:	vzeroupper 
  40ef99:	call   406180 <fprintf@plt>
  40ef9e:	add    r13d,0x1
  40efa2:	mov    r12,QWORD PTR [r12]
  40efa6:	test   r12,r12
  40efa9:	jne    40ebb0 <__flatcc_fb_gen_c_builder@@Base+0x21c0>
  40efaf:	cmp    DWORD PTR [rsp+0x1c],0x0
  40efb4:	jle    40efd6 <__flatcc_fb_gen_c_builder@@Base+0x25e6>
  40efb6:	mov    rcx,QWORD PTR [rbx+0xd0]
  40efbd:	lea    rdi,[rip+0x32b32]        # 441af6 <_IO_stdin_used@@Base+0x12af6>
  40efc4:	mov    esi,0x4
  40efc9:	mov    edx,0x1
  40efce:	vzeroupper 
  40efd1:	call   406220 <fwrite@plt>
  40efd6:	lea    rsp,[rbp-0x28]
  40efda:	pop    rbx
  40efdb:	pop    r12
  40efdd:	pop    r13
  40efdf:	pop    r14
  40efe1:	pop    r15
  40efe3:	pop    rbp
  40efe4:	vzeroupper 
  40efe7:	ret    
  40efe8:	mov    rax,QWORD PTR [rip+0x44009]        # 452ff8 <stderr@GLIBC_2.2.5>
  40efef:	mov    rdi,QWORD PTR [rax]
  40eff2:	lea    rsi,[rip+0x21c1f]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40eff9:	lea    rbx,[rip+0x327f4]        # 4417f4 <_IO_stdin_used@@Base+0x127f4>
  40f000:	lea    r8,[rip+0x32c2b]        # 441c32 <_IO_stdin_used@@Base+0x12c32>
  40f007:	mov    ecx,0x3e1
  40f00c:	xor    eax,eax
  40f00e:	mov    rdx,rbx
  40f011:	vzeroupper 
  40f014:	call   406180 <fprintf@plt>
  40f019:	lea    rdi,[rip+0x32b5f]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40f020:	lea    rcx,[rip+0x32c26]        # 441c4d <_IO_stdin_used@@Base+0x12c4d>
  40f027:	mov    edx,0x3e1
  40f02c:	mov    rsi,rbx
  40f02f:	call   406100 <__assert_fail@plt>
  40f034:	mov    rax,QWORD PTR [rip+0x43fbd]        # 452ff8 <stderr@GLIBC_2.2.5>
  40f03b:	mov    rdi,QWORD PTR [rax]
  40f03e:	lea    rsi,[rip+0x21bd3]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40f045:	lea    rbx,[rip+0x2837e]        # 4373ca <_IO_stdin_used@@Base+0x83ca>
  40f04c:	lea    r8,[rip+0x283da]        # 43742d <_IO_stdin_used@@Base+0x842d>
  40f053:	mov    ecx,0x60
  40f058:	xor    eax,eax
  40f05a:	mov    rdx,rbx
  40f05d:	vzeroupper 
  40f060:	call   406180 <fprintf@plt>
  40f065:	lea    rdi,[rip+0x32b13]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40f06c:	lea    rcx,[rip+0x28cea]        # 437d5d <_IO_stdin_used@@Base+0x8d5d>
  40f073:	mov    edx,0x60
  40f078:	mov    rsi,rbx
  40f07b:	call   406100 <__assert_fail@plt>
  40f080:	push   rbp
  40f081:	mov    rbp,rsp
  40f084:	push   r15
  40f086:	push   r14
  40f088:	push   r13
  40f08a:	push   r12
  40f08c:	push   rbx
  40f08d:	and    rsp,0xffffffffffffffe0
  40f091:	sub    rsp,0x200
  40f098:	mov    rax,QWORD PTR [rdi+0xd8]
  40f09f:	mov    r14,QWORD PTR [rax+0x40]
  40f0a3:	test   r14,r14
  40f0a6:	je     40f2b2 <__flatcc_fb_gen_c_builder@@Base+0x28c2>
  40f0ac:	mov    r15,rdi
  40f0af:	lea    rbx,[rsp+0x100]
  40f0b7:	mov    r13,rsp
  40f0ba:	xor    eax,eax
  40f0bc:	nop    DWORD PTR [rax+0x0]
  40f0c0:	movzx  ecx,WORD PTR [r14+0x10]
  40f0c5:	cmp    ecx,0x4
  40f0c8:	jne    40f291 <__flatcc_fb_gen_c_builder@@Base+0x28a1>
  40f0ce:	vxorps xmm0,xmm0,xmm0
  40f0d2:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40f0db:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40f0e4:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40f0ed:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40f0f6:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40f0ff:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40f108:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  40f111:	mov    QWORD PTR [rsp+0x1e0],0x0
  40f11d:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40f126:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40f12f:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40f138:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40f13e:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40f144:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40f14a:	vmovaps YMMWORD PTR [rsp],ymm0
  40f14f:	mov    QWORD PTR [rsp+0xe0],0x0
  40f15b:	mov    rdi,QWORD PTR [r14+0x18]
  40f15f:	mov    rsi,r14
  40f162:	mov    rdx,rbx
  40f165:	vzeroupper 
  40f168:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40f16d:	mov    r12,QWORD PTR [r14+0x28]
  40f171:	test   r12,r12
  40f174:	jne    40f196 <__flatcc_fb_gen_c_builder@@Base+0x27a6>
  40f176:	jmp    40f26e <__flatcc_fb_gen_c_builder@@Base+0x287e>
  40f17b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f180:	call   406180 <fprintf@plt>
  40f185:	add    rsp,0x30
  40f189:	mov    r12,QWORD PTR [r12]
  40f18d:	test   r12,r12
  40f190:	je     40f26e <__flatcc_fb_gen_c_builder@@Base+0x287e>
  40f196:	movzx  eax,WORD PTR [r12+0x28]
  40f19c:	test   ax,ax
  40f19f:	je     40f240 <__flatcc_fb_gen_c_builder@@Base+0x2850>
  40f1a5:	movzx  eax,ax
  40f1a8:	cmp    eax,0xa
  40f1ab:	je     40f200 <__flatcc_fb_gen_c_builder@@Base+0x2810>
  40f1ad:	cmp    eax,0xe
  40f1b0:	jne    40f2c1 <__flatcc_fb_gen_c_builder@@Base+0x28d1>
  40f1b6:	mov    rsi,QWORD PTR [r12+0x18]
  40f1bb:	mov    rdi,QWORD PTR [rsi+0x18]
  40f1bf:	mov    rdx,r13
  40f1c2:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40f1c7:	mov    rax,QWORD PTR [r12+0x8]
  40f1cc:	mov    r8d,DWORD PTR [rax+0x8]
  40f1d0:	mov    r9,QWORD PTR [rax]
  40f1d3:	mov    rdi,QWORD PTR [r15+0xd0]
  40f1da:	sub    rsp,0x8
  40f1de:	mov    eax,0x0
  40f1e3:	lea    rsi,[rip+0x32cf9]        # 441ee3 <_IO_stdin_used@@Base+0x12ee3>
  40f1ea:	mov    rdx,rbx
  40f1ed:	mov    rcx,rbx
  40f1f0:	push   r9
  40f1f2:	push   r8
  40f1f4:	push   rbx
  40f1f5:	push   rbx
  40f1f6:	push   r13
  40f1f8:	jmp    40f180 <__flatcc_fb_gen_c_builder@@Base+0x2790>
  40f1fa:	nop    WORD PTR [rax+rax*1+0x0]
  40f200:	mov    rax,QWORD PTR [r12+0x8]
  40f205:	mov    r8d,DWORD PTR [rax+0x8]
  40f209:	mov    r9,QWORD PTR [rax]
  40f20c:	mov    rdi,QWORD PTR [r15+0xd0]
  40f213:	sub    rsp,0x8
  40f217:	mov    eax,0x0
  40f21c:	lea    rsi,[rip+0x32d44]        # 441f67 <_IO_stdin_used@@Base+0x12f67>
  40f223:	mov    rdx,rbx
  40f226:	mov    rcx,rbx
  40f229:	push   r9
  40f22b:	push   r8
  40f22d:	push   rbx
  40f22e:	push   rbx
  40f22f:	push   r15
  40f231:	jmp    40f180 <__flatcc_fb_gen_c_builder@@Base+0x2790>
  40f236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f240:	mov    rdi,QWORD PTR [r15+0xd0]
  40f247:	xor    eax,eax
  40f249:	lea    rsi,[rip+0x32da1]        # 441ff1 <_IO_stdin_used@@Base+0x12ff1>
  40f250:	mov    rdx,rbx
  40f253:	mov    rcx,rbx
  40f256:	mov    r8,rbx
  40f259:	mov    r9,rbx
  40f25c:	call   406180 <fprintf@plt>
  40f261:	mov    r12,QWORD PTR [r12]
  40f265:	test   r12,r12
  40f268:	jne    40f196 <__flatcc_fb_gen_c_builder@@Base+0x27a6>
  40f26e:	mov    rdi,QWORD PTR [r15+0xd0]
  40f275:	xor    eax,eax
  40f277:	lea    rsi,[rip+0x32e48]        # 4420c6 <_IO_stdin_used@@Base+0x130c6>
  40f27e:	mov    rdx,r15
  40f281:	mov    rcx,r15
  40f284:	mov    r8,rbx
  40f287:	call   406180 <fprintf@plt>
  40f28c:	mov    eax,0x1
  40f291:	mov    r14,QWORD PTR [r14]
  40f294:	test   r14,r14
  40f297:	jne    40f0c0 <__flatcc_fb_gen_c_builder@@Base+0x26d0>
  40f29d:	test   eax,eax
  40f29f:	je     40f2b2 <__flatcc_fb_gen_c_builder@@Base+0x28c2>
  40f2a1:	mov    rsi,QWORD PTR [r15+0xd0]
  40f2a8:	mov    edi,0xa
  40f2ad:	call   406120 <fputc@plt>
  40f2b2:	lea    rsp,[rbp-0x28]
  40f2b6:	pop    rbx
  40f2b7:	pop    r12
  40f2b9:	pop    r13
  40f2bb:	pop    r14
  40f2bd:	pop    r15
  40f2bf:	pop    rbp
  40f2c0:	ret    
  40f2c1:	mov    rax,QWORD PTR [rip+0x43d30]        # 452ff8 <stderr@GLIBC_2.2.5>
  40f2c8:	mov    rdi,QWORD PTR [rax]
  40f2cb:	lea    rsi,[rip+0x21946]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40f2d2:	lea    rbx,[rip+0x3251b]        # 4417f4 <_IO_stdin_used@@Base+0x127f4>
  40f2d9:	lea    r8,[rip+0x32d87]        # 442067 <_IO_stdin_used@@Base+0x13067>
  40f2e0:	mov    ecx,0x648
  40f2e5:	xor    eax,eax
  40f2e7:	mov    rdx,rbx
  40f2ea:	call   406180 <fprintf@plt>
  40f2ef:	lea    rdi,[rip+0x32889]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40f2f6:	lea    rcx,[rip+0x32d96]        # 442093 <_IO_stdin_used@@Base+0x13093>
  40f2fd:	mov    edx,0x648
  40f302:	mov    rsi,rbx
  40f305:	call   406100 <__assert_fail@plt>
  40f30a:	nop    WORD PTR [rax+rax*1+0x0]
  40f310:	push   rbx
  40f311:	mov    eax,DWORD PTR [rsi+0x10]
  40f314:	add    eax,0xfffffffd
  40f317:	movzx  ecx,ax
  40f31a:	cmp    ecx,0x3
  40f31d:	ja     40f3f3 <__flatcc_fb_gen_c_builder@@Base+0x2a03>
  40f323:	movzx  eax,ax
  40f326:	lea    rcx,[rip+0x29c7f]        # 438fac <_IO_stdin_used@@Base+0x9fac>
  40f32d:	movsxd rax,DWORD PTR [rcx+rax*4]
  40f331:	add    rax,rcx
  40f334:	jmp    rax
  40f336:	vmovsd xmm0,QWORD PTR [rsi]
  40f33a:	cmp    edi,0xb
  40f33d:	jne    40f3e1 <__flatcc_fb_gen_c_builder@@Base+0x29f1>
  40f343:	vcvtsd2ss xmm0,xmm0,xmm0
  40f347:	vcvtss2sd xmm0,xmm0,xmm0
  40f34b:	lea    rsi,[rip+0x28168]        # 4374ba <_IO_stdin_used@@Base+0x84ba>
  40f352:	jmp    40f3e8 <__flatcc_fb_gen_c_builder@@Base+0x29f8>
  40f357:	add    edi,0xffffffff
  40f35a:	cmp    edi,0x9
  40f35d:	jae    40f43c <__flatcc_fb_gen_c_builder@@Base+0x2a4c>
  40f363:	movsxd rax,edi
  40f366:	lea    rcx,[rip+0x438e3]        # 452c50 <fb_value_set_deleted@@Base+0x69f0>
  40f36d:	mov    rbx,QWORD PTR [rcx+rax*8]
  40f371:	mov    rcx,QWORD PTR [rsi]
  40f374:	lea    rsi,[rip+0x28126]        # 4374a1 <_IO_stdin_used@@Base+0x84a1>
  40f37b:	jmp    40f3d3 <__flatcc_fb_gen_c_builder@@Base+0x29e3>
  40f37d:	add    edi,0xffffffff
  40f380:	cmp    edi,0x9
  40f383:	jae    40f43c <__flatcc_fb_gen_c_builder@@Base+0x2a4c>
  40f389:	movsxd rax,edi
  40f38c:	lea    rcx,[rip+0x438bd]        # 452c50 <fb_value_set_deleted@@Base+0x69f0>
  40f393:	mov    rbx,QWORD PTR [rcx+rax*8]
  40f397:	movzx  ecx,BYTE PTR [rsi]
  40f39a:	lea    rsi,[rip+0x28112]        # 4374b3 <_IO_stdin_used@@Base+0x84b3>
  40f3a1:	xor    eax,eax
  40f3a3:	mov    rdi,rdx
  40f3a6:	mov    rdx,rbx
  40f3a9:	pop    rbx
  40f3aa:	jmp    406200 <sprintf@plt>
  40f3af:	add    edi,0xffffffff
  40f3b2:	cmp    edi,0x9
  40f3b5:	jae    40f43c <__flatcc_fb_gen_c_builder@@Base+0x2a4c>
  40f3bb:	movsxd rax,edi
  40f3be:	lea    rcx,[rip+0x4388b]        # 452c50 <fb_value_set_deleted@@Base+0x69f0>
  40f3c5:	mov    rbx,QWORD PTR [rcx+rax*8]
  40f3c9:	mov    rcx,QWORD PTR [rsi]
  40f3cc:	lea    rsi,[rip+0x280d7]        # 4374aa <_IO_stdin_used@@Base+0x84aa>
  40f3d3:	xor    eax,eax
  40f3d5:	mov    rdi,rdx
  40f3d8:	mov    rdx,rbx
  40f3db:	pop    rbx
  40f3dc:	jmp    406200 <sprintf@plt>
  40f3e1:	lea    rsi,[rip+0x280d6]        # 4374be <_IO_stdin_used@@Base+0x84be>
  40f3e8:	mov    al,0x1
  40f3ea:	mov    rdi,rdx
  40f3ed:	pop    rbx
  40f3ee:	jmp    406200 <sprintf@plt>
  40f3f3:	mov    rax,QWORD PTR [rip+0x43bfe]        # 452ff8 <stderr@GLIBC_2.2.5>
  40f3fa:	mov    rdi,QWORD PTR [rax]
  40f3fd:	lea    rsi,[rip+0x21814]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40f404:	lea    rbx,[rip+0x27fbf]        # 4373ca <_IO_stdin_used@@Base+0x83ca>
  40f40b:	lea    r8,[rip+0x2801b]        # 43742d <_IO_stdin_used@@Base+0x842d>
  40f412:	mov    ecx,0x104
  40f417:	xor    eax,eax
  40f419:	mov    rdx,rbx
  40f41c:	call   406180 <fprintf@plt>
  40f421:	lea    rdi,[rip+0x32757]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40f428:	lea    rcx,[rip+0x28093]        # 4374c2 <_IO_stdin_used@@Base+0x84c2>
  40f42f:	mov    edx,0x104
  40f434:	mov    rsi,rbx
  40f437:	call   406100 <__assert_fail@plt>
  40f43c:	mov    rax,QWORD PTR [rip+0x43bb5]        # 452ff8 <stderr@GLIBC_2.2.5>
  40f443:	mov    rdi,QWORD PTR [rax]
  40f446:	lea    rsi,[rip+0x217cb]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40f44d:	lea    rbx,[rip+0x27f76]        # 4373ca <_IO_stdin_used@@Base+0x83ca>
  40f454:	lea    r8,[rip+0x27fd2]        # 43742d <_IO_stdin_used@@Base+0x842d>
  40f45b:	mov    ecx,0xe2
  40f460:	xor    eax,eax
  40f462:	mov    rdx,rbx
  40f465:	call   406180 <fprintf@plt>
  40f46a:	lea    rdi,[rip+0x3270e]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40f471:	lea    rcx,[rip+0x280b0]        # 437528 <_IO_stdin_used@@Base+0x8528>
  40f478:	mov    edx,0xe2
  40f47d:	mov    rsi,rbx
  40f480:	call   406100 <__assert_fail@plt>
  40f485:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f48f:	nop
  40f490:	push   rbp
  40f491:	mov    rbp,rsp
  40f494:	push   r15
  40f496:	push   r14
  40f498:	push   r13
  40f49a:	push   r12
  40f49c:	push   rbx
  40f49d:	and    rsp,0xffffffffffffffe0
  40f4a1:	sub    rsp,0x220
  40f4a8:	mov    rbx,r8
  40f4ab:	mov    QWORD PTR [rsp+0x18],rcx
  40f4b0:	mov    QWORD PTR [rsp+0x10],rdx
  40f4b5:	mov    QWORD PTR [rsp+0x8],rsi
  40f4ba:	mov    r13,rdi
  40f4bd:	test   r9d,r9d
  40f4c0:	lea    rax,[rip+0x3abe3]        # 44a0aa <fb_schema_table_deleted@@Base+0x217a>
  40f4c7:	lea    rcx,[rip+0x3300e]        # 4424dc <_IO_stdin_used@@Base+0x134dc>
  40f4ce:	vxorps xmm0,xmm0,xmm0
  40f4d2:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40f4db:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40f4e4:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40f4ed:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40f4f6:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40f4ff:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40f508:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40f511:	cmove  rcx,rax
  40f515:	mov    QWORD PTR [rsp],rcx
  40f519:	mov    QWORD PTR [rsp+0x200],0x0
  40f525:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40f52e:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40f537:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40f540:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40f549:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40f54f:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40f555:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40f55b:	mov    QWORD PTR [rsp+0x100],0x0
  40f567:	mov    rdi,QWORD PTR [r8+0x18]
  40f56b:	lea    rdx,[rsp+0x120]
  40f573:	mov    rsi,r8
  40f576:	vzeroupper 
  40f579:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40f57e:	mov    r14,QWORD PTR [rbx+0x28]
  40f582:	test   r14,r14
  40f585:	je     40f67b <__flatcc_fb_gen_c_builder@@Base+0x2c8b>
  40f58b:	lea    rbx,[rsp+0x20]
  40f590:	movzx  eax,WORD PTR [r14+0x28]
  40f595:	test   ax,ax
  40f598:	je     40f66f <__flatcc_fb_gen_c_builder@@Base+0x2c7f>
  40f59e:	mov    rcx,QWORD PTR [r14+0x8]
  40f5a2:	mov    r15d,DWORD PTR [rcx+0x8]
  40f5a6:	mov    r12,QWORD PTR [rcx]
  40f5a9:	movzx  eax,ax
  40f5ac:	cmp    eax,0xa
  40f5af:	je     40f600 <__flatcc_fb_gen_c_builder@@Base+0x2c10>
  40f5b1:	cmp    eax,0xe
  40f5b4:	jne    40f68a <__flatcc_fb_gen_c_builder@@Base+0x2c9a>
  40f5ba:	mov    rsi,QWORD PTR [r14+0x18]
  40f5be:	mov    rdi,QWORD PTR [rsi+0x18]
  40f5c2:	mov    rdx,rbx
  40f5c5:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40f5ca:	mov    rax,QWORD PTR [r14+0x18]
  40f5ce:	movzx  eax,WORD PTR [rax+0x10]
  40f5d2:	cmp    eax,0x1
  40f5d5:	je     40f629 <__flatcc_fb_gen_c_builder@@Base+0x2c39>
  40f5d7:	test   ax,ax
  40f5da:	jne    40f6d3 <__flatcc_fb_gen_c_builder@@Base+0x2ce3>
  40f5e0:	mov    rdi,QWORD PTR [r13+0xd0]
  40f5e7:	mov    eax,0x0
  40f5ec:	lea    rsi,[rip+0x32ef6]        # 4424e9 <_IO_stdin_used@@Base+0x134e9>
  40f5f3:	jmp    40f63c <__flatcc_fb_gen_c_builder@@Base+0x2c4c>
  40f5f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f5ff:	nop
  40f600:	mov    rdi,QWORD PTR [r13+0xd0]
  40f607:	sub    rsp,0x8
  40f60b:	mov    eax,0x0
  40f610:	lea    rsi,[rip+0x32fdf]        # 4425f6 <_IO_stdin_used@@Base+0x135f6>
  40f617:	mov    rdx,r13
  40f61a:	mov    rcx,QWORD PTR [rsp+0x8]
  40f61f:	mov    r8,r13
  40f622:	mov    r9,QWORD PTR [rsp+0x10]
  40f627:	jmp    40f64c <__flatcc_fb_gen_c_builder@@Base+0x2c5c>
  40f629:	mov    rdi,QWORD PTR [r13+0xd0]
  40f630:	mov    eax,0x0
  40f635:	lea    rsi,[rip+0x32ee8]        # 442524 <_IO_stdin_used@@Base+0x13524>
  40f63c:	mov    rdx,r13
  40f63f:	mov    rcx,QWORD PTR [rsp]
  40f643:	mov    r8,r13
  40f646:	mov    r9,QWORD PTR [rsp+0x8]
  40f64b:	push   rbx
  40f64c:	push   r12
  40f64e:	push   r15
  40f650:	lea    rbx,[rsp+0x138]
  40f658:	push   rbx
  40f659:	lea    rbx,[rsp+0x40]
  40f65e:	push   QWORD PTR [rsp+0x38]
  40f662:	push   QWORD PTR [rsp+0x38]
  40f666:	call   406180 <fprintf@plt>
  40f66b:	add    rsp,0x30
  40f66f:	mov    r14,QWORD PTR [r14]
  40f672:	test   r14,r14
  40f675:	jne    40f590 <__flatcc_fb_gen_c_builder@@Base+0x2ba0>
  40f67b:	lea    rsp,[rbp-0x28]
  40f67f:	pop    rbx
  40f680:	pop    r12
  40f682:	pop    r13
  40f684:	pop    r14
  40f686:	pop    r15
  40f688:	pop    rbp
  40f689:	ret    
  40f68a:	mov    rax,QWORD PTR [rip+0x43967]        # 452ff8 <stderr@GLIBC_2.2.5>
  40f691:	mov    rdi,QWORD PTR [rax]
  40f694:	lea    rsi,[rip+0x2157d]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40f69b:	lea    rbx,[rip+0x32152]        # 4417f4 <_IO_stdin_used@@Base+0x127f4>
  40f6a2:	lea    r8,[rip+0x32f85]        # 44262e <_IO_stdin_used@@Base+0x1362e>
  40f6a9:	mov    ecx,0x558
  40f6ae:	xor    eax,eax
  40f6b0:	mov    rdx,rbx
  40f6b3:	call   406180 <fprintf@plt>
  40f6b8:	lea    rdi,[rip+0x324c0]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40f6bf:	lea    rcx,[rip+0x32ed0]        # 442596 <_IO_stdin_used@@Base+0x13596>
  40f6c6:	mov    edx,0x558
  40f6cb:	mov    rsi,rbx
  40f6ce:	call   406100 <__assert_fail@plt>
  40f6d3:	mov    rax,QWORD PTR [rip+0x4391e]        # 452ff8 <stderr@GLIBC_2.2.5>
  40f6da:	mov    rdi,QWORD PTR [rax]
  40f6dd:	lea    rsi,[rip+0x21534]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  40f6e4:	lea    rbx,[rip+0x32109]        # 4417f4 <_IO_stdin_used@@Base+0x127f4>
  40f6eb:	lea    r8,[rip+0x32e6e]        # 442560 <_IO_stdin_used@@Base+0x13560>
  40f6f2:	mov    ecx,0x54e
  40f6f7:	xor    eax,eax
  40f6f9:	mov    rdx,rbx
  40f6fc:	call   406180 <fprintf@plt>
  40f701:	lea    rdi,[rip+0x32477]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  40f708:	lea    rcx,[rip+0x32e87]        # 442596 <_IO_stdin_used@@Base+0x13596>
  40f70f:	mov    edx,0x54e
  40f714:	mov    rsi,rbx
  40f717:	call   406100 <__assert_fail@plt>
  40f71c:	nop    DWORD PTR [rax+0x0]

000000000040f720 <__flatcc_fb_gen_c_verifier@@Base>:
  40f720:	push   rbp
  40f721:	mov    rbp,rsp
  40f724:	push   r15
  40f726:	push   r14
  40f728:	push   r13
  40f72a:	push   r12
  40f72c:	push   rbx
  40f72d:	and    rsp,0xffffffffffffffe0
  40f731:	sub    rsp,0x220
  40f738:	mov    rbx,rdi
  40f73b:	lea    r13,[rdi+0xd0]
  40f742:	mov    rdi,QWORD PTR [rdi+0xd0]
  40f749:	mov    rax,QWORD PTR [rbx+0xd8]
  40f750:	mov    rdx,QWORD PTR [rax+0x118]
  40f757:	lea    rsi,[rip+0x330ae]        # 44280c <_IO_stdin_used@@Base+0x1380c>
  40f75e:	xor    eax,eax
  40f760:	mov    rcx,rdx
  40f763:	call   406180 <fprintf@plt>
  40f768:	mov    rcx,QWORD PTR [rbx+0xd0]
  40f76f:	lea    rdi,[rip+0x21379]        # 430aef <_IO_stdin_used@@Base+0x1aef>
  40f776:	mov    esi,0x51
  40f77b:	mov    edx,0x1
  40f780:	call   406220 <fwrite@plt>
  40f785:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f78c:	mov    rax,QWORD PTR [rbx+0xd8]
  40f793:	mov    rdx,QWORD PTR [rax+0x118]
  40f79a:	lea    rsi,[rip+0x31f92]        # 441733 <_IO_stdin_used@@Base+0x12733>
  40f7a1:	xor    eax,eax
  40f7a3:	call   406180 <fprintf@plt>
  40f7a8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f7af:	mov    rax,QWORD PTR [rbx+0xd8]
  40f7b6:	mov    rdx,QWORD PTR [rax+0x110]
  40f7bd:	lea    rsi,[rip+0x31f84]        # 441748 <_IO_stdin_used@@Base+0x12748>
  40f7c4:	xor    eax,eax
  40f7c6:	call   406180 <fprintf@plt>
  40f7cb:	mov    rcx,QWORD PTR [rbx+0xd0]
  40f7d2:	lea    rdi,[rip+0x27538]        # 436d11 <_IO_stdin_used@@Base+0x7d11>
  40f7d9:	mov    esi,0x7
  40f7de:	mov    edx,0x1
  40f7e3:	call   406220 <fwrite@plt>
  40f7e8:	mov    rcx,QWORD PTR [rbx+0xd0]
  40f7ef:	lea    rdi,[rip+0x33043]        # 442839 <_IO_stdin_used@@Base+0x13839>
  40f7f6:	mov    esi,0x24
  40f7fb:	mov    edx,0x1
  40f800:	call   406220 <fwrite@plt>
  40f805:	lea    rsi,[rip+0x21237]        # 430a43 <_IO_stdin_used@@Base+0x1a43>
  40f80c:	lea    rdx,[rip+0x3304b]        # 44285e <_IO_stdin_used@@Base+0x1385e>
  40f813:	mov    rdi,rbx
  40f816:	call   407f70 <__flatcc_fb_gen_c_includes@@Base>
  40f81b:	mov    QWORD PTR [rsp+0x18],rbx
  40f820:	mov    rax,QWORD PTR [rbx+0xe0]
  40f827:	cmp    DWORD PTR [rax+0xac],0x0
  40f82e:	je     40f84a <__flatcc_fb_gen_c_verifier@@Base+0x12a>
  40f830:	mov    rcx,QWORD PTR [r13+0x0]
  40f834:	lea    rdi,[rip+0x214aa]        # 430ce5 <_IO_stdin_used@@Base+0x1ce5>
  40f83b:	mov    esi,0x24
  40f840:	mov    edx,0x1
  40f845:	call   406220 <fwrite@plt>
  40f84a:	mov    rbx,QWORD PTR [rsp+0x18]
  40f84f:	mov    rsi,QWORD PTR [rbx+0xd0]
  40f856:	mov    edi,0xa
  40f85b:	call   406120 <fputc@plt>
  40f860:	vxorps xmm0,xmm0,xmm0
  40f864:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40f86d:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40f876:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40f87f:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40f888:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40f88e:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40f894:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40f89a:	mov    QWORD PTR [rsp+0x100],0x0
  40f8a6:	mov    rax,QWORD PTR [rbx+0xd8]
  40f8ad:	mov    rbx,QWORD PTR [rax+0x40]
  40f8b1:	test   rbx,rbx
  40f8b4:	je     40f902 <__flatcc_fb_gen_c_verifier@@Base+0x1e2>
  40f8b6:	lea    r14,[rsp+0x20]
  40f8bb:	lea    r15,[rip+0x32fa8]        # 44286a <_IO_stdin_used@@Base+0x1386a>
  40f8c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f8cc:	nop    DWORD PTR [rax+0x0]
  40f8d0:	cmp    WORD PTR [rbx+0x10],0x0
  40f8d5:	jne    40f8fa <__flatcc_fb_gen_c_verifier@@Base+0x1da>
  40f8d7:	mov    rdi,QWORD PTR [rbx+0x18]
  40f8db:	mov    rsi,rbx
  40f8de:	mov    rdx,r14
  40f8e1:	vzeroupper 
  40f8e4:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40f8e9:	mov    rdi,QWORD PTR [r13+0x0]
  40f8ed:	xor    eax,eax
  40f8ef:	mov    rsi,r15
  40f8f2:	mov    rdx,r14
  40f8f5:	call   406180 <fprintf@plt>
  40f8fa:	mov    rbx,QWORD PTR [rbx]
  40f8fd:	test   rbx,rbx
  40f900:	jne    40f8d0 <__flatcc_fb_gen_c_verifier@@Base+0x1b0>
  40f902:	mov    rbx,QWORD PTR [rsp+0x18]
  40f907:	mov    rsi,QWORD PTR [rbx+0xd0]
  40f90e:	mov    edi,0xa
  40f913:	vzeroupper 
  40f916:	call   406120 <fputc@plt>
  40f91b:	mov    rax,QWORD PTR [rbx+0xd8]
  40f922:	mov    rbx,QWORD PTR [rax+0x40]
  40f926:	test   rbx,rbx
  40f929:	je     410163 <__flatcc_fb_gen_c_verifier@@Base+0xa43>
  40f92f:	mov    QWORD PTR [rsp+0x10],r13
  40f934:	lea    r13,[rsp+0x120]
  40f93c:	nop    DWORD PTR [rax+0x0]
  40f940:	movzx  eax,WORD PTR [rbx+0x10]
  40f944:	cmp    eax,0x4
  40f947:	jne    40fb3c <__flatcc_fb_gen_c_verifier@@Base+0x41c>
  40f94d:	vxorps xmm0,xmm0,xmm0
  40f951:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40f95a:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40f963:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40f96c:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40f975:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40f97b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40f981:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40f987:	mov    QWORD PTR [rsp+0x100],0x0
  40f993:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40f99c:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40f9a5:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40f9ae:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40f9b7:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40f9c0:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40f9c9:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40f9d2:	mov    QWORD PTR [rsp+0x200],0x0
  40f9de:	mov    rdi,QWORD PTR [rbx+0x18]
  40f9e2:	mov    rsi,rbx
  40f9e5:	lea    r14,[rsp+0x20]
  40f9ea:	mov    rdx,r14
  40f9ed:	vzeroupper 
  40f9f0:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40f9f5:	mov    rax,QWORD PTR [rsp+0x10]
  40f9fa:	mov    rdi,QWORD PTR [rax]
  40f9fd:	xor    eax,eax
  40f9ff:	lea    rsi,[rip+0x32ea9]        # 4428af <_IO_stdin_used@@Base+0x138af>
  40fa06:	mov    rdx,r14
  40fa09:	call   406180 <fprintf@plt>
  40fa0e:	mov    r12,QWORD PTR [rbx+0x28]
  40fa12:	test   r12,r12
  40fa15:	je     40fb1e <__flatcc_fb_gen_c_verifier@@Base+0x3fe>
  40fa1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fa20:	movzx  eax,WORD PTR [r12+0x28]
  40fa26:	test   ax,ax
  40fa29:	je     40fb11 <__flatcc_fb_gen_c_verifier@@Base+0x3f1>
  40fa2f:	mov    rcx,QWORD PTR [r12+0x8]
  40fa34:	mov    r15d,DWORD PTR [rcx+0x8]
  40fa38:	mov    r14,QWORD PTR [rcx]
  40fa3b:	movzx  eax,ax
  40fa3e:	cmp    eax,0xa
  40fa41:	je     40fab0 <__flatcc_fb_gen_c_verifier@@Base+0x390>
  40fa43:	cmp    eax,0xe
  40fa46:	jne    4101cb <__flatcc_fb_gen_c_verifier@@Base+0xaab>
  40fa4c:	mov    rsi,QWORD PTR [r12+0x18]
  40fa51:	mov    rdi,QWORD PTR [rsi+0x18]
  40fa55:	mov    rdx,r13
  40fa58:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40fa5d:	mov    rax,QWORD PTR [r12+0x18]
  40fa62:	movzx  ecx,WORD PTR [rax+0x10]
  40fa66:	cmp    ecx,0x1
  40fa69:	je     40fae0 <__flatcc_fb_gen_c_verifier@@Base+0x3c0>
  40fa6b:	test   cx,cx
  40fa6e:	jne    410214 <__flatcc_fb_gen_c_verifier@@Base+0xaf4>
  40fa74:	mov    rax,QWORD PTR [rsp+0x10]
  40fa79:	mov    rdi,QWORD PTR [rax]
  40fa7c:	mov    edx,DWORD PTR [r12+0x48]
  40fa81:	xor    eax,eax
  40fa83:	lea    rsi,[rip+0x32e85]        # 44290f <_IO_stdin_used@@Base+0x1390f>
  40fa8a:	mov    rcx,r13
  40fa8d:	mov    r8d,r15d
  40fa90:	mov    r9,r14
  40fa93:	call   406180 <fprintf@plt>
  40fa98:	mov    r12,QWORD PTR [r12]
  40fa9c:	test   r12,r12
  40fa9f:	jne    40fa20 <__flatcc_fb_gen_c_verifier@@Base+0x300>
  40faa5:	jmp    40fb1e <__flatcc_fb_gen_c_verifier@@Base+0x3fe>
  40faa7:	nop    WORD PTR [rax+rax*1+0x0]
  40fab0:	mov    rax,QWORD PTR [rsp+0x10]
  40fab5:	mov    rdi,QWORD PTR [rax]
  40fab8:	mov    edx,DWORD PTR [r12+0x48]
  40fabd:	xor    eax,eax
  40fabf:	lea    rsi,[rip+0x32fc6]        # 442a8c <_IO_stdin_used@@Base+0x13a8c>
  40fac6:	mov    ecx,r15d
  40fac9:	mov    r8,r14
  40facc:	call   406180 <fprintf@plt>
  40fad1:	mov    r12,QWORD PTR [r12]
  40fad5:	test   r12,r12
  40fad8:	jne    40fa20 <__flatcc_fb_gen_c_verifier@@Base+0x300>
  40fade:	jmp    40fb1e <__flatcc_fb_gen_c_verifier@@Base+0x3fe>
  40fae0:	mov    rcx,QWORD PTR [rsp+0x10]
  40fae5:	mov    rdi,QWORD PTR [rcx]
  40fae8:	mov    edx,DWORD PTR [r12+0x48]
  40faed:	mov    rcx,QWORD PTR [rax+0xb8]
  40faf4:	movzx  r8d,WORD PTR [rax+0xb0]
  40fafc:	mov    QWORD PTR [rsp],r14
  40fb00:	xor    eax,eax
  40fb02:	lea    rsi,[rip+0x32e56]        # 44295f <_IO_stdin_used@@Base+0x1395f>
  40fb09:	mov    r9d,r15d
  40fb0c:	call   406180 <fprintf@plt>
  40fb11:	mov    r12,QWORD PTR [r12]
  40fb15:	test   r12,r12
  40fb18:	jne    40fa20 <__flatcc_fb_gen_c_verifier@@Base+0x300>
  40fb1e:	mov    rax,QWORD PTR [rsp+0x10]
  40fb23:	mov    rcx,QWORD PTR [rax]
  40fb26:	mov    esi,0x2f
  40fb2b:	mov    edx,0x1
  40fb30:	lea    rdi,[rip+0x32fc8]        # 442aff <_IO_stdin_used@@Base+0x13aff>
  40fb37:	call   406220 <fwrite@plt>
  40fb3c:	mov    rbx,QWORD PTR [rbx]
  40fb3f:	test   rbx,rbx
  40fb42:	jne    40f940 <__flatcc_fb_gen_c_verifier@@Base+0x220>
  40fb48:	mov    rax,QWORD PTR [rsp+0x18]
  40fb4d:	mov    rax,QWORD PTR [rax+0xd8]
  40fb54:	mov    rbx,QWORD PTR [rax+0x40]
  40fb58:	test   rbx,rbx
  40fb5b:	mov    r13,QWORD PTR [rsp+0x10]
  40fb60:	je     410163 <__flatcc_fb_gen_c_verifier@@Base+0xa43>
  40fb66:	lea    r14,[rsp+0x20]
  40fb6b:	lea    r13,[rip+0x330f8]        # 442c6a <_IO_stdin_used@@Base+0x13c6a>
  40fb72:	lea    r15,[rip+0x331a7]        # 442d20 <_IO_stdin_used@@Base+0x13d20>
  40fb79:	nop    DWORD PTR [rax+0x0]
  40fb80:	movzx  eax,WORD PTR [rbx+0x10]
  40fb84:	cmp    eax,0x1
  40fb87:	jne    40fc8b <__flatcc_fb_gen_c_verifier@@Base+0x56b>
  40fb8d:	vxorps xmm0,xmm0,xmm0
  40fb91:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40fb9a:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40fba3:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40fbac:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40fbb5:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40fbbb:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40fbc1:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40fbc7:	mov    QWORD PTR [rsp+0x100],0x0
  40fbd3:	mov    rdi,QWORD PTR [rbx+0x18]
  40fbd7:	mov    rsi,rbx
  40fbda:	mov    rdx,r14
  40fbdd:	vzeroupper 
  40fbe0:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40fbe5:	mov    r12,QWORD PTR [rsp+0x18]
  40fbea:	mov    rdi,QWORD PTR [r12+0xd0]
  40fbf2:	mov    r8,QWORD PTR [rbx+0xb8]
  40fbf9:	movzx  r9d,WORD PTR [rbx+0xb0]
  40fc01:	xor    eax,eax
  40fc03:	lea    rsi,[rip+0x32f25]        # 442b2f <_IO_stdin_used@@Base+0x13b2f>
  40fc0a:	mov    rdx,r14
  40fc0d:	mov    rcx,r14
  40fc10:	call   406180 <fprintf@plt>
  40fc15:	mov    rdi,QWORD PTR [r12+0xd0]
  40fc1d:	mov    r8,QWORD PTR [rbx+0xb8]
  40fc24:	movzx  r9d,WORD PTR [rbx+0xb0]
  40fc2c:	xor    eax,eax
  40fc2e:	lea    rsi,[rip+0x32f92]        # 442bc7 <_IO_stdin_used@@Base+0x13bc7>
  40fc35:	mov    rdx,r14
  40fc38:	mov    rcx,r14
  40fc3b:	call   406180 <fprintf@plt>
  40fc40:	mov    rdi,QWORD PTR [r12+0xd0]
  40fc48:	mov    r8,QWORD PTR [rbx+0xb8]
  40fc4f:	movzx  r9d,WORD PTR [rbx+0xb0]
  40fc57:	xor    eax,eax
  40fc59:	mov    rsi,r13
  40fc5c:	mov    rdx,r14
  40fc5f:	mov    rcx,r12
  40fc62:	call   406180 <fprintf@plt>
  40fc67:	mov    rdi,QWORD PTR [r12+0xd0]
  40fc6f:	mov    rcx,QWORD PTR [rbx+0xb8]
  40fc76:	movzx  r8d,WORD PTR [rbx+0xb0]
  40fc7e:	xor    eax,eax
  40fc80:	mov    rsi,r15
  40fc83:	mov    rdx,r14
  40fc86:	call   406180 <fprintf@plt>
  40fc8b:	mov    rbx,QWORD PTR [rbx]
  40fc8e:	test   rbx,rbx
  40fc91:	jne    40fb80 <__flatcc_fb_gen_c_verifier@@Base+0x460>
  40fc97:	mov    rax,QWORD PTR [rsp+0x18]
  40fc9c:	mov    rax,QWORD PTR [rax+0xd8]
  40fca3:	mov    r12,QWORD PTR [rax+0x40]
  40fca7:	test   r12,r12
  40fcaa:	mov    r13,QWORD PTR [rsp+0x10]
  40fcaf:	je     410163 <__flatcc_fb_gen_c_verifier@@Base+0xa43>
  40fcb5:	lea    rbx,[rsp+0x20]
  40fcba:	lea    r14,[rip+0x32aff]        # 4427c0 <_IO_stdin_used@@Base+0x137c0>
  40fcc1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fccb:	nop    DWORD PTR [rax+rax*1+0x0]
  40fcd0:	cmp    WORD PTR [r12+0x10],0x0
  40fcd7:	jne    410156 <__flatcc_fb_gen_c_verifier@@Base+0xa36>
  40fcdd:	vxorps xmm0,xmm0,xmm0
  40fce1:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40fcea:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40fcf3:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40fcfc:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40fd05:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40fd0b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40fd11:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40fd17:	mov    QWORD PTR [rsp+0x100],0x0
  40fd23:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40fd2c:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40fd35:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40fd3e:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40fd47:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40fd50:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40fd59:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40fd62:	mov    QWORD PTR [rsp+0x200],0x0
  40fd6e:	mov    rdi,QWORD PTR [r12+0x18]
  40fd73:	mov    rsi,r12
  40fd76:	mov    rdx,rbx
  40fd79:	vzeroupper 
  40fd7c:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40fd81:	mov    rdi,QWORD PTR [r13+0x0]
  40fd85:	xor    eax,eax
  40fd87:	lea    rsi,[rip+0x33041]        # 442dcf <_IO_stdin_used@@Base+0x13dcf>
  40fd8e:	mov    rdx,rbx
  40fd91:	call   406180 <fprintf@plt>
  40fd96:	mov    r15,QWORD PTR [r12+0x28]
  40fd9b:	test   r15,r15
  40fd9e:	je     41009d <__flatcc_fb_gen_c_verifier@@Base+0x97d>
  40fda4:	mov    ebx,0x1
  40fda9:	jmp    40fdd0 <__flatcc_fb_gen_c_verifier@@Base+0x6b0>
  40fdab:	movzx  r8d,WORD PTR [r15+0x72]
  40fdb0:	xor    eax,eax
  40fdb2:	lea    rsi,[rip+0x330be]        # 442e77 <_IO_stdin_used@@Base+0x13e77>
  40fdb9:	mov    ecx,r13d
  40fdbc:	mov    r9,rbx
  40fdbf:	call   406180 <fprintf@plt>
  40fdc4:	jmp    410050 <__flatcc_fb_gen_c_verifier@@Base+0x930>
  40fdc9:	nop    DWORD PTR [rax+0x0]
  40fdd0:	test   BYTE PTR [r15+0x70],0x4
  40fdd5:	jne    410073 <__flatcc_fb_gen_c_verifier@@Base+0x953>
  40fddb:	mov    rcx,QWORD PTR [r13+0x0]
  40fddf:	test   ebx,ebx
  40fde1:	je     40fdf6 <__flatcc_fb_gen_c_verifier@@Base+0x6d6>
  40fde3:	mov    esi,0x1c
  40fde8:	mov    edx,0x1
  40fded:	lea    rdi,[rip+0x33021]        # 442e15 <_IO_stdin_used@@Base+0x13e15>
  40fdf4:	jmp    40fe07 <__flatcc_fb_gen_c_verifier@@Base+0x6e7>
  40fdf6:	mov    esi,0x1e
  40fdfb:	mov    edx,0x1
  40fe00:	lea    rdi,[rip+0x3302b]        # 442e32 <_IO_stdin_used@@Base+0x13e32>
  40fe07:	call   406220 <fwrite@plt>
  40fe0c:	mov    eax,DWORD PTR [r15+0x28]
  40fe10:	add    eax,0xfffffff9
  40fe13:	movzx  ecx,ax
  40fe16:	cmp    ecx,0x8
  40fe19:	ja     410050 <__flatcc_fb_gen_c_verifier@@Base+0x930>
  40fe1f:	mov    ecx,0x108
  40fe24:	bextr  r13d,DWORD PTR [r15+0x70],ecx
  40fe2a:	movzx  eax,ax
  40fe2d:	movsxd rax,DWORD PTR [r14+rax*4]
  40fe31:	add    rax,r14
  40fe34:	jmp    rax
  40fe36:	mov    rsi,QWORD PTR [r15+0x90]
  40fe3d:	test   rsi,rsi
  40fe40:	je     40fee9 <__flatcc_fb_gen_c_verifier@@Base+0x7c9>
  40fe46:	mov    rdi,QWORD PTR [rsi+0x18]
  40fe4a:	lea    rbx,[rsp+0x120]
  40fe52:	mov    rdx,rbx
  40fe55:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40fe5a:	mov    rdx,QWORD PTR [r15+0x88]
  40fe61:	mov    rax,QWORD PTR [r15+0x90]
  40fe68:	cmp    WORD PTR [rax+0x10],0x0
  40fe6d:	mov    rax,QWORD PTR [rsp+0x10]
  40fe72:	mov    rdi,QWORD PTR [rax]
  40fe75:	je     40fdab <__flatcc_fb_gen_c_verifier@@Base+0x68b>
  40fe7b:	mov    r8,QWORD PTR [r15+0x80]
  40fe82:	movzx  r9d,WORD PTR [r15+0x72]
  40fe87:	xor    eax,eax
  40fe89:	lea    rsi,[rip+0x3302f]        # 442ebf <_IO_stdin_used@@Base+0x13ebf>
  40fe90:	jmp    40ffc8 <__flatcc_fb_gen_c_verifier@@Base+0x8a8>
  40fe95:	mov    rax,QWORD PTR [rsp+0x10]
  40fe9a:	mov    rdi,QWORD PTR [rax]
  40fe9d:	mov    rdx,QWORD PTR [r15+0x88]
  40fea4:	xor    eax,eax
  40fea6:	lea    rsi,[rip+0x330b7]        # 442f64 <_IO_stdin_used@@Base+0x13f64>
  40fead:	jmp    40ff44 <__flatcc_fb_gen_c_verifier@@Base+0x824>
  40feb2:	mov    rsi,QWORD PTR [r15+0x18]
  40feb6:	mov    rdi,QWORD PTR [rsi+0x18]
  40feba:	lea    rdx,[rsp+0x120]
  40fec2:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40fec7:	mov    rax,QWORD PTR [r15+0x18]
  40fecb:	movzx  eax,WORD PTR [rax+0x10]
  40fecf:	cmp    rax,0x4
  40fed3:	ja     41025d <__flatcc_fb_gen_c_verifier@@Base+0xb3d>
  40fed9:	lea    rcx,[rip+0x32904]        # 4427e4 <_IO_stdin_used@@Base+0x137e4>
  40fee0:	movsxd rax,DWORD PTR [rcx+rax*4]
  40fee4:	add    rax,rcx
  40fee7:	jmp    rax
  40fee9:	mov    rax,QWORD PTR [rsp+0x10]
  40feee:	mov    rdi,QWORD PTR [rax]
  40fef1:	mov    r8,QWORD PTR [r15+0x80]
  40fef8:	mov    rcx,QWORD PTR [r15+0x88]
  40feff:	movzx  r9d,WORD PTR [r15+0x72]
  40ff04:	test   r8,r8
  40ff07:	mov    esi,0x1
  40ff0c:	cmovne rsi,r8
  40ff10:	mov    eax,0xffffffff
  40ff15:	cmp    rax,rsi
  40ff18:	jb     40ffb6 <__flatcc_fb_gen_c_verifier@@Base+0x896>
  40ff1e:	mov    eax,0xffffffff
  40ff23:	xor    edx,edx
  40ff25:	div    esi
  40ff27:	jmp    40ffb8 <__flatcc_fb_gen_c_verifier@@Base+0x898>
  40ff2c:	mov    rax,QWORD PTR [rsp+0x10]
  40ff31:	mov    rdi,QWORD PTR [rax]
  40ff34:	mov    rdx,QWORD PTR [r15+0x88]
  40ff3b:	xor    eax,eax
  40ff3d:	lea    rsi,[rip+0x32ff8]        # 442f3c <_IO_stdin_used@@Base+0x13f3c>
  40ff44:	mov    ecx,r13d
  40ff47:	call   406180 <fprintf@plt>
  40ff4c:	jmp    410050 <__flatcc_fb_gen_c_verifier@@Base+0x930>
  40ff51:	mov    rsi,QWORD PTR [r15+0x18]
  40ff55:	mov    rdi,QWORD PTR [rsi+0x18]
  40ff59:	lea    rdx,[rsp+0x120]
  40ff61:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  40ff66:	mov    rax,QWORD PTR [r15+0x18]
  40ff6a:	movzx  eax,WORD PTR [rax+0x10]
  40ff6e:	cmp    rax,0x4
  40ff72:	ja     4102a6 <__flatcc_fb_gen_c_verifier@@Base+0xb86>
  40ff78:	lea    rcx,[rip+0x32879]        # 4427f8 <_IO_stdin_used@@Base+0x137f8>
  40ff7f:	movsxd rax,DWORD PTR [rcx+rax*4]
  40ff83:	add    rax,rcx
  40ff86:	jmp    rax
  40ff88:	mov    rax,QWORD PTR [rsp+0x10]
  40ff8d:	mov    rdi,QWORD PTR [rax]
  40ff90:	mov    rcx,QWORD PTR [r15+0x80]
  40ff97:	mov    rdx,QWORD PTR [r15+0x88]
  40ff9e:	movzx  r8d,WORD PTR [r15+0x72]
  40ffa3:	xor    eax,eax
  40ffa5:	lea    rsi,[rip+0x32ea5]        # 442e51 <_IO_stdin_used@@Base+0x13e51>
  40ffac:	call   406180 <fprintf@plt>
  40ffb1:	jmp    410050 <__flatcc_fb_gen_c_verifier@@Base+0x930>
  40ffb6:	xor    eax,eax
  40ffb8:	mov    QWORD PTR [rsp],rax
  40ffbc:	xor    eax,eax
  40ffbe:	lea    rsi,[rip+0x32f38]        # 442efd <_IO_stdin_used@@Base+0x13efd>
  40ffc5:	mov    rdx,rcx
  40ffc8:	mov    ecx,r13d
  40ffcb:	call   406180 <fprintf@plt>
  40ffd0:	jmp    410050 <__flatcc_fb_gen_c_verifier@@Base+0x930>
  40ffd2:	mov    rax,QWORD PTR [rsp+0x10]
  40ffd7:	mov    rdi,QWORD PTR [rax]
  40ffda:	mov    rdx,QWORD PTR [r15+0x88]
  40ffe1:	xor    eax,eax
  40ffe3:	lea    rsi,[rip+0x33095]        # 44307f <_IO_stdin_used@@Base+0x1407f>
  40ffea:	jmp    410038 <__flatcc_fb_gen_c_verifier@@Base+0x918>
  40ffec:	mov    rax,QWORD PTR [rsp+0x10]
  40fff1:	mov    rdi,QWORD PTR [rax]
  40fff4:	mov    rdx,QWORD PTR [r15+0x88]
  40fffb:	xor    eax,eax
  40fffd:	lea    rsi,[rip+0x330bb]        # 4430bf <_IO_stdin_used@@Base+0x140bf>
  410004:	jmp    410038 <__flatcc_fb_gen_c_verifier@@Base+0x918>
  410006:	mov    rax,QWORD PTR [rsp+0x10]
  41000b:	mov    rdi,QWORD PTR [rax]
  41000e:	mov    rdx,QWORD PTR [r15+0x88]
  410015:	xor    eax,eax
  410017:	lea    rsi,[rip+0x32f75]        # 442f93 <_IO_stdin_used@@Base+0x13f93>
  41001e:	jmp    410038 <__flatcc_fb_gen_c_verifier@@Base+0x918>
  410020:	mov    rax,QWORD PTR [rsp+0x10]
  410025:	mov    rdi,QWORD PTR [rax]
  410028:	mov    rdx,QWORD PTR [r15+0x88]
  41002f:	xor    eax,eax
  410031:	lea    rsi,[rip+0x32f94]        # 442fcc <_IO_stdin_used@@Base+0x13fcc>
  410038:	mov    ecx,r13d
  41003b:	lea    r8,[rsp+0x120]
  410043:	call   406180 <fprintf@plt>
  410048:	nop    DWORD PTR [rax+rax*1+0x0]
  410050:	mov    r13,QWORD PTR [rsp+0x10]
  410055:	mov    rdi,QWORD PTR [r13+0x0]
  410059:	mov    rax,QWORD PTR [r15+0x8]
  41005d:	mov    edx,DWORD PTR [rax+0x8]
  410060:	mov    rcx,QWORD PTR [rax]
  410063:	xor    ebx,ebx
  410065:	xor    eax,eax
  410067:	lea    rsi,[rip+0x33d94]        # 443e02 <_IO_stdin_used@@Base+0x14e02>
  41006e:	call   406180 <fprintf@plt>
  410073:	mov    r15,QWORD PTR [r15]
  410076:	test   r15,r15
  410079:	jne    40fdd0 <__flatcc_fb_gen_c_verifier@@Base+0x6b0>
  41007f:	test   ebx,ebx
  410081:	jne    41009d <__flatcc_fb_gen_c_verifier@@Base+0x97d>
  410083:	mov    rcx,QWORD PTR [r13+0x0]
  410087:	mov    esi,0xf
  41008c:	mov    edx,0x1
  410091:	lea    rdi,[rip+0x330ac]        # 443144 <_IO_stdin_used@@Base+0x14144>
  410098:	call   406220 <fwrite@plt>
  41009d:	mov    r15,QWORD PTR [rsp+0x18]
  4100a2:	mov    rcx,QWORD PTR [r15+0xd0]
  4100a9:	mov    esi,0x1d
  4100ae:	mov    edx,0x1
  4100b3:	lea    rdi,[rip+0x3309a]        # 443154 <_IO_stdin_used@@Base+0x14154>
  4100ba:	call   406220 <fwrite@plt>
  4100bf:	mov    rcx,QWORD PTR [r15+0xd0]
  4100c6:	mov    esi,0x3
  4100cb:	mov    edx,0x1
  4100d0:	lea    rdi,[rip+0x37298]        # 44736f <_IO_stdin_used@@Base+0x1836f>
  4100d7:	call   406220 <fwrite@plt>
  4100dc:	mov    rdi,QWORD PTR [r15+0xd0]
  4100e3:	xor    eax,eax
  4100e5:	lea    rsi,[rip+0x33086]        # 443172 <_IO_stdin_used@@Base+0x14172>
  4100ec:	lea    rbx,[rsp+0x20]
  4100f1:	mov    rdx,rbx
  4100f4:	mov    rcx,rbx
  4100f7:	mov    r8,rbx
  4100fa:	call   406180 <fprintf@plt>
  4100ff:	mov    rdi,QWORD PTR [r15+0xd0]
  410106:	xor    eax,eax
  410108:	lea    rsi,[rip+0x33103]        # 443212 <_IO_stdin_used@@Base+0x14212>
  41010f:	mov    rdx,rbx
  410112:	mov    rcx,rbx
  410115:	mov    r8,rbx
  410118:	call   406180 <fprintf@plt>
  41011d:	mov    rdi,QWORD PTR [r15+0xd0]
  410124:	xor    eax,eax
  410126:	lea    rsi,[rip+0x33190]        # 4432bd <_IO_stdin_used@@Base+0x142bd>
  41012d:	mov    rdx,rbx
  410130:	mov    rcx,rbx
  410133:	call   406180 <fprintf@plt>
  410138:	mov    rdi,QWORD PTR [r15+0xd0]
  41013f:	xor    eax,eax
  410141:	lea    rsi,[rip+0x3322c]        # 443374 <_IO_stdin_used@@Base+0x14374>
  410148:	mov    rdx,rbx
  41014b:	mov    rcx,r15
  41014e:	mov    r8,rbx
  410151:	call   406180 <fprintf@plt>
  410156:	mov    r12,QWORD PTR [r12]
  41015a:	test   r12,r12
  41015d:	jne    40fcd0 <__flatcc_fb_gen_c_verifier@@Base+0x5b0>
  410163:	mov    rax,QWORD PTR [rsp+0x18]
  410168:	mov    rax,QWORD PTR [rax+0xe0]
  41016f:	cmp    DWORD PTR [rax+0xac],0x0
  410176:	je     410192 <__flatcc_fb_gen_c_verifier@@Base+0xa72>
  410178:	mov    rcx,QWORD PTR [r13+0x0]
  41017c:	lea    rdi,[rip+0x2694c]        # 436acf <_IO_stdin_used@@Base+0x7acf>
  410183:	mov    esi,0x24
  410188:	mov    edx,0x1
  41018d:	call   406220 <fwrite@plt>
  410192:	mov    rax,QWORD PTR [rsp+0x18]
  410197:	mov    rdi,QWORD PTR [rax+0xd0]
  41019e:	mov    rax,QWORD PTR [rax+0xd8]
  4101a5:	mov    rdx,QWORD PTR [rax+0x118]
  4101ac:	lea    rsi,[rip+0x3327f]        # 443432 <_IO_stdin_used@@Base+0x14432>
  4101b3:	xor    eax,eax
  4101b5:	call   406180 <fprintf@plt>
  4101ba:	xor    eax,eax
  4101bc:	lea    rsp,[rbp-0x28]
  4101c0:	pop    rbx
  4101c1:	pop    r12
  4101c3:	pop    r13
  4101c5:	pop    r14
  4101c7:	pop    r15
  4101c9:	pop    rbp
  4101ca:	ret    
  4101cb:	mov    rax,QWORD PTR [rip+0x42e26]        # 452ff8 <stderr@GLIBC_2.2.5>
  4101d2:	mov    rdi,QWORD PTR [rax]
  4101d5:	lea    rsi,[rip+0x20a3c]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  4101dc:	lea    rbx,[rip+0x327c5]        # 4429a8 <_IO_stdin_used@@Base+0x139a8>
  4101e3:	lea    r8,[rip+0x328e2]        # 442acc <_IO_stdin_used@@Base+0x13acc>
  4101ea:	mov    ecx,0x53
  4101ef:	xor    eax,eax
  4101f1:	mov    rdx,rbx
  4101f4:	call   406180 <fprintf@plt>
  4101f9:	lea    rdi,[rip+0x3197f]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  410200:	lea    rcx,[rip+0x32849]        # 442a50 <_IO_stdin_used@@Base+0x13a50>
  410207:	mov    edx,0x53
  41020c:	mov    rsi,rbx
  41020f:	call   406100 <__assert_fail@plt>
  410214:	mov    rax,QWORD PTR [rip+0x42ddd]        # 452ff8 <stderr@GLIBC_2.2.5>
  41021b:	mov    rdi,QWORD PTR [rax]
  41021e:	lea    rsi,[rip+0x209f3]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  410225:	lea    rbx,[rip+0x3277c]        # 4429a8 <_IO_stdin_used@@Base+0x139a8>
  41022c:	lea    r8,[rip+0x327e1]        # 442a14 <_IO_stdin_used@@Base+0x13a14>
  410233:	mov    ecx,0x4a
  410238:	xor    eax,eax
  41023a:	mov    rdx,rbx
  41023d:	call   406180 <fprintf@plt>
  410242:	lea    rdi,[rip+0x31936]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  410249:	lea    rcx,[rip+0x32800]        # 442a50 <_IO_stdin_used@@Base+0x13a50>
  410250:	mov    edx,0x4a
  410255:	mov    rsi,rbx
  410258:	call   406100 <__assert_fail@plt>
  41025d:	mov    rax,QWORD PTR [rip+0x42d94]        # 452ff8 <stderr@GLIBC_2.2.5>
  410264:	mov    rdi,QWORD PTR [rax]
  410267:	lea    rsi,[rip+0x209aa]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  41026e:	lea    rbx,[rip+0x32733]        # 4429a8 <_IO_stdin_used@@Base+0x139a8>
  410275:	lea    r8,[rip+0x32e85]        # 443101 <_IO_stdin_used@@Base+0x14101>
  41027c:	mov    ecx,0xca
  410281:	xor    eax,eax
  410283:	mov    rdx,rbx
  410286:	call   406180 <fprintf@plt>
  41028b:	lea    rdi,[rip+0x318ed]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  410292:	lea    rcx,[rip+0x32daa]        # 443043 <_IO_stdin_used@@Base+0x14043>
  410299:	mov    edx,0xca
  41029e:	mov    rsi,rbx
  4102a1:	call   406100 <__assert_fail@plt>
  4102a6:	mov    rax,QWORD PTR [rip+0x42d4b]        # 452ff8 <stderr@GLIBC_2.2.5>
  4102ad:	mov    rdi,QWORD PTR [rax]
  4102b0:	lea    rsi,[rip+0x20961]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  4102b7:	lea    rbx,[rip+0x326ea]        # 4429a8 <_IO_stdin_used@@Base+0x139a8>
  4102be:	lea    r8,[rip+0x32d42]        # 443007 <_IO_stdin_used@@Base+0x14007>
  4102c5:	mov    ecx,0xb2
  4102ca:	xor    eax,eax
  4102cc:	mov    rdx,rbx
  4102cf:	call   406180 <fprintf@plt>
  4102d4:	lea    rdi,[rip+0x318a4]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  4102db:	lea    rcx,[rip+0x32d61]        # 443043 <_IO_stdin_used@@Base+0x14043>
  4102e2:	mov    edx,0xb2
  4102e7:	mov    rsi,rbx
  4102ea:	call   406100 <__assert_fail@plt>
  4102ef:	nop

00000000004102f0 <__flatcc_fb_gen_c_json_parser@@Base>:
  4102f0:	push   rbp
  4102f1:	mov    rbp,rsp
  4102f4:	push   r15
  4102f6:	push   r14
  4102f8:	push   r13
  4102fa:	push   r12
  4102fc:	push   rbx
  4102fd:	and    rsp,0xffffffffffffffe0
  410301:	sub    rsp,0x2a0
  410308:	mov    r15,rdi
  41030b:	mov    rax,QWORD PTR [rdi+0xd8]
  410312:	mov    rdx,QWORD PTR [rax+0x118]
  410319:	lea    rsi,[rip+0x332b0]        # 4435d0 <_IO_stdin_used@@Base+0x145d0>
  410320:	xor    eax,eax
  410322:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410327:	mov    rax,QWORD PTR [r15+0xd8]
  41032e:	mov    rdx,QWORD PTR [rax+0x118]
  410335:	lea    rsi,[rip+0x332ad]        # 4435e9 <_IO_stdin_used@@Base+0x145e9>
  41033c:	xor    eax,eax
  41033e:	mov    rdi,r15
  410341:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410346:	lea    rbx,[rip+0x209e6]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41034d:	xor    eax,eax
  41034f:	mov    rdi,r15
  410352:	mov    rsi,rbx
  410355:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41035a:	lea    rsi,[rip+0x332a1]        # 443602 <_IO_stdin_used@@Base+0x14602>
  410361:	xor    eax,eax
  410363:	mov    rdi,r15
  410366:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41036b:	xor    eax,eax
  41036d:	mov    rdi,r15
  410370:	mov    rsi,rbx
  410373:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410378:	lea    rsi,[rip+0x332d2]        # 443651 <_IO_stdin_used@@Base+0x14651>
  41037f:	xor    eax,eax
  410381:	mov    rdi,r15
  410384:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410389:	lea    rsi,[rip+0x206bf]        # 430a4f <_IO_stdin_used@@Base+0x1a4f>
  410390:	lea    rdx,[rip+0x3325c]        # 4435f3 <_IO_stdin_used@@Base+0x145f3>
  410397:	mov    rdi,r15
  41039a:	call   407f70 <__flatcc_fb_gen_c_includes@@Base>
  41039f:	mov    rax,QWORD PTR [r15+0xe0]
  4103a6:	cmp    DWORD PTR [rax+0xac],0x0
  4103ad:	je     4103cc <__flatcc_fb_gen_c_json_parser@@Base+0xdc>
  4103af:	mov    rcx,QWORD PTR [r15+0xd0]
  4103b6:	lea    rdi,[rip+0x20928]        # 430ce5 <_IO_stdin_used@@Base+0x1ce5>
  4103bd:	mov    esi,0x24
  4103c2:	mov    edx,0x1
  4103c7:	call   406220 <fwrite@plt>
  4103cc:	lea    rsi,[rip+0x20960]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  4103d3:	xor    eax,eax
  4103d5:	mov    rdi,r15
  4103d8:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4103dd:	mov    rax,QWORD PTR [r15+0xd8]
  4103e4:	mov    rcx,QWORD PTR [rax+0x58]
  4103e8:	vpxor  xmm0,xmm0,xmm0
  4103ec:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  4103f5:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  4103fe:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  410407:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  410410:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  410416:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  41041c:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  410422:	mov    QWORD PTR [rsp+0x100],0x0
  41042e:	test   rcx,rcx
  410431:	je     41055b <__flatcc_fb_gen_c_json_parser@@Base+0x26b>
  410437:	movzx  ecx,WORD PTR [rcx+0x10]
  41043b:	cmp    ecx,0x1
  41043e:	ja     41055b <__flatcc_fb_gen_c_json_parser@@Base+0x26b>
  410444:	lea    rsi,[rip+0x3322d]        # 443678 <_IO_stdin_used@@Base+0x14678>
  41044b:	xor    eax,eax
  41044d:	mov    rdi,r15
  410450:	vzeroupper 
  410453:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410458:	lea    rsi,[rip+0x3321c]        # 44367b <_IO_stdin_used@@Base+0x1467b>
  41045f:	xor    eax,eax
  410461:	mov    rdi,r15
  410464:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410469:	lea    rsi,[rip+0x33261]        # 4436d1 <_IO_stdin_used@@Base+0x146d1>
  410470:	xor    eax,eax
  410472:	mov    rdi,r15
  410475:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41047a:	lea    rsi,[rip+0x33253]        # 4436d4 <_IO_stdin_used@@Base+0x146d4>
  410481:	xor    eax,eax
  410483:	mov    rdi,r15
  410486:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41048b:	lea    rsi,[rip+0x33286]        # 443718 <_IO_stdin_used@@Base+0x14718>
  410492:	xor    eax,eax
  410494:	mov    rdi,r15
  410497:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41049c:	lea    rsi,[rip+0x332ab]        # 44374e <_IO_stdin_used@@Base+0x1474e>
  4104a3:	xor    eax,eax
  4104a5:	mov    rdi,r15
  4104a8:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4104ad:	lea    rsi,[rip+0x332c2]        # 443776 <_IO_stdin_used@@Base+0x14776>
  4104b4:	xor    eax,eax
  4104b6:	mov    rdi,r15
  4104b9:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4104be:	lea    rsi,[rip+0x332f9]        # 4437be <_IO_stdin_used@@Base+0x147be>
  4104c5:	xor    eax,eax
  4104c7:	mov    rdi,r15
  4104ca:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4104cf:	lea    rsi,[rip+0x340fc]        # 4445d2 <_IO_stdin_used@@Base+0x155d2>
  4104d6:	xor    eax,eax
  4104d8:	mov    rdi,r15
  4104db:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4104e0:	mov    rax,QWORD PTR [r15+0xd8]
  4104e7:	mov    rdx,QWORD PTR [rax+0x110]
  4104ee:	lea    rsi,[rip+0x33307]        # 4437fc <_IO_stdin_used@@Base+0x147fc>
  4104f5:	xor    eax,eax
  4104f7:	mov    rdi,r15
  4104fa:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4104ff:	add    DWORD PTR [r15+0xf0],0x2
  410507:	lea    rsi,[rip+0x33337]        # 443845 <_IO_stdin_used@@Base+0x14845>
  41050e:	xor    eax,eax
  410510:	mov    rdi,r15
  410513:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410518:	mov    eax,DWORD PTR [r15+0xf0]
  41051f:	test   eax,eax
  410521:	je     41299c <__flatcc_fb_gen_c_json_parser@@Base+0x26ac>
  410527:	mov    ecx,eax
  410529:	add    ecx,0xffffffff
  41052c:	mov    DWORD PTR [r15+0xf0],ecx
  410533:	je     41299c <__flatcc_fb_gen_c_json_parser@@Base+0x26ac>
  410539:	add    eax,0xfffffffe
  41053c:	mov    DWORD PTR [r15+0xf0],eax
  410543:	lea    rsi,[rip+0x207e9]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41054a:	xor    eax,eax
  41054c:	mov    rdi,r15
  41054f:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410554:	mov    rax,QWORD PTR [r15+0xd8]
  41055b:	mov    rbx,QWORD PTR [rax+0x40]
  41055f:	test   rbx,rbx
  410562:	je     410704 <__flatcc_fb_gen_c_json_parser@@Base+0x414>
  410568:	lea    r13,[rip+0x32fd9]        # 443548 <_IO_stdin_used@@Base+0x14548>
  41056f:	lea    r14,[rsp+0x20]
  410574:	lea    r12,[rip+0x334c5]        # 443a40 <_IO_stdin_used@@Base+0x14a40>
  41057b:	nop    DWORD PTR [rax+rax*1+0x0]
  410580:	movzx  eax,WORD PTR [rbx+0x10]
  410584:	cmp    rax,0x4
  410588:	ja     4106f1 <__flatcc_fb_gen_c_json_parser@@Base+0x401>
  41058e:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  410593:	add    rax,r13
  410596:	jmp    rax
  410598:	mov    rdi,QWORD PTR [rbx+0x18]
  41059c:	mov    rsi,rbx
  41059f:	mov    rdx,r14
  4105a2:	vzeroupper 
  4105a5:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  4105aa:	xor    eax,eax
  4105ac:	mov    rdi,r15
  4105af:	lea    rsi,[rip+0x335c1]        # 443b77 <_IO_stdin_used@@Base+0x14b77>
  4105b6:	jmp    410656 <__flatcc_fb_gen_c_json_parser@@Base+0x366>
  4105bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4105c0:	mov    rdi,QWORD PTR [rbx+0x18]
  4105c4:	mov    rsi,rbx
  4105c7:	mov    rdx,r14
  4105ca:	vzeroupper 
  4105cd:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  4105d2:	xor    eax,eax
  4105d4:	mov    rdi,r15
  4105d7:	lea    rsi,[rip+0x333ff]        # 4439dd <_IO_stdin_used@@Base+0x149dd>
  4105de:	mov    rdx,r14
  4105e1:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4105e6:	add    DWORD PTR [r15+0xf0],0x2
  4105ee:	xor    eax,eax
  4105f0:	mov    rdi,r15
  4105f3:	mov    rsi,r12
  4105f6:	mov    rdx,r14
  4105f9:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4105fe:	mov    eax,DWORD PTR [r15+0xf0]
  410605:	test   eax,eax
  410607:	je     41263b <__flatcc_fb_gen_c_json_parser@@Base+0x234b>
  41060d:	mov    ecx,eax
  41060f:	add    ecx,0xffffffff
  410612:	mov    DWORD PTR [r15+0xf0],ecx
  410619:	jne    4106e7 <__flatcc_fb_gen_c_json_parser@@Base+0x3f7>
  41061f:	jmp    41263b <__flatcc_fb_gen_c_json_parser@@Base+0x234b>
  410624:	mov    rdi,QWORD PTR [rbx+0x18]
  410628:	mov    rsi,rbx
  41062b:	mov    rdx,r14
  41062e:	vzeroupper 
  410631:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  410636:	xor    eax,eax
  410638:	mov    rdi,r15
  41063b:	lea    rsi,[rip+0x33431]        # 443a73 <_IO_stdin_used@@Base+0x14a73>
  410642:	mov    rdx,r14
  410645:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41064a:	xor    eax,eax
  41064c:	mov    rdi,r15
  41064f:	lea    rsi,[rip+0x3349d]        # 443af3 <_IO_stdin_used@@Base+0x14af3>
  410656:	mov    rdx,r14
  410659:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41065e:	jmp    4106f1 <__flatcc_fb_gen_c_json_parser@@Base+0x401>
  410663:	mov    rdi,QWORD PTR [rbx+0x18]
  410667:	mov    rsi,rbx
  41066a:	mov    rdx,r14
  41066d:	vzeroupper 
  410670:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  410675:	xor    eax,eax
  410677:	mov    rdi,r15
  41067a:	lea    rsi,[rip+0x33299]        # 44391a <_IO_stdin_used@@Base+0x1491a>
  410681:	mov    rdx,r14
  410684:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410689:	xor    eax,eax
  41068b:	mov    rdi,r15
  41068e:	lea    rsi,[rip+0x33314]        # 4439a9 <_IO_stdin_used@@Base+0x149a9>
  410695:	mov    rdx,r14
  410698:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41069d:	xor    eax,eax
  41069f:	mov    rdi,r15
  4106a2:	lea    rsi,[rip+0x33334]        # 4439dd <_IO_stdin_used@@Base+0x149dd>
  4106a9:	mov    rdx,r14
  4106ac:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4106b1:	add    DWORD PTR [r15+0xf0],0x2
  4106b9:	xor    eax,eax
  4106bb:	mov    rdi,r15
  4106be:	mov    rsi,r12
  4106c1:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4106c6:	mov    eax,DWORD PTR [r15+0xf0]
  4106cd:	test   eax,eax
  4106cf:	je     41265a <__flatcc_fb_gen_c_json_parser@@Base+0x236a>
  4106d5:	mov    ecx,eax
  4106d7:	add    ecx,0xffffffff
  4106da:	mov    DWORD PTR [r15+0xf0],ecx
  4106e1:	je     41265a <__flatcc_fb_gen_c_json_parser@@Base+0x236a>
  4106e7:	add    eax,0xfffffffe
  4106ea:	mov    DWORD PTR [r15+0xf0],eax
  4106f1:	mov    rbx,QWORD PTR [rbx]
  4106f4:	test   rbx,rbx
  4106f7:	jne    410580 <__flatcc_fb_gen_c_json_parser@@Base+0x290>
  4106fd:	mov    rax,QWORD PTR [r15+0xd8]
  410704:	mov    rdi,QWORD PTR [rax+0x68]
  410708:	lea    rsi,[rip+0x25a1]        # 412cb0 <__flatcc_fb_gen_c_json_parser@@Base+0x29c0>
  41070f:	mov    rdx,r15
  410712:	vzeroupper 
  410715:	call   41b650 <fb_scope_table_visit@@Base>
  41071a:	mov    rax,QWORD PTR [r15+0xd8]
  410721:	mov    rdx,QWORD PTR [rax+0x110]
  410728:	lea    rsi,[rip+0x334cb]        # 443bfa <_IO_stdin_used@@Base+0x14bfa>
  41072f:	xor    eax,eax
  410731:	mov    rdi,r15
  410734:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410739:	add    DWORD PTR [r15+0xf0],0x2
  410741:	lea    rsi,[rip+0x332f8]        # 443a40 <_IO_stdin_used@@Base+0x14a40>
  410748:	xor    eax,eax
  41074a:	mov    rdi,r15
  41074d:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410752:	mov    eax,DWORD PTR [r15+0xf0]
  410759:	test   eax,eax
  41075b:	je     41293f <__flatcc_fb_gen_c_json_parser@@Base+0x264f>
  410761:	mov    ecx,eax
  410763:	add    ecx,0xffffffff
  410766:	mov    DWORD PTR [r15+0xf0],ecx
  41076d:	je     41293f <__flatcc_fb_gen_c_json_parser@@Base+0x264f>
  410773:	add    eax,0xfffffffe
  410776:	mov    DWORD PTR [r15+0xf0],eax
  41077d:	lea    rsi,[rip+0x205af]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  410784:	xor    eax,eax
  410786:	mov    rdi,r15
  410789:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41078e:	mov    rax,QWORD PTR [r15+0xd8]
  410795:	mov    r14,QWORD PTR [rax+0x40]
  410799:	test   r14,r14
  41079c:	je     411a42 <__flatcc_fb_gen_c_json_parser@@Base+0x1752>
  4107a2:	lea    r13,[rip+0x32db3]        # 44355c <_IO_stdin_used@@Base+0x1455c>
  4107a9:	vpxor  xmm0,xmm0,xmm0
  4107ad:	vbroadcastsd ymm1,QWORD PTR [rip+0x32d4a]        # 443500 <_IO_stdin_used@@Base+0x14500>
  4107b6:	vmovaps YMMWORD PTR [rsp+0x220],ymm1
  4107bf:	vbroadcastsd ymm1,QWORD PTR [rip+0x32d40]        # 443508 <_IO_stdin_used@@Base+0x14508>
  4107c8:	vmovaps YMMWORD PTR [rsp+0x260],ymm1
  4107d1:	vpbroadcastq ymm1,QWORD PTR [rip+0x32d36]        # 443510 <_IO_stdin_used@@Base+0x14510>
  4107da:	vmovdqa YMMWORD PTR [rsp+0x240],ymm1
  4107e3:	lea    rcx,[rsp+0x20]
  4107e8:	lea    rdx,[rip+0x36423]        # 446c12 <_IO_stdin_used@@Base+0x17c12>
  4107ef:	lea    rsi,[rip+0x2053d]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  4107f6:	lea    r12,[rsp+0x120]
  4107fe:	jmp    4108a0 <__flatcc_fb_gen_c_json_parser@@Base+0x5b0>
  410803:	mov    eax,DWORD PTR [r15+0xf0]
  41080a:	test   eax,eax
  41080c:	je     41295e <__flatcc_fb_gen_c_json_parser@@Base+0x266e>
  410812:	add    eax,0xffffffff
  410815:	mov    DWORD PTR [r15+0xf0],eax
  41081c:	xor    eax,eax
  41081e:	mov    rdi,r15
  410821:	lea    rsi,[rip+0x34563]        # 444d8b <_IO_stdin_used@@Base+0x15d8b>
  410828:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41082d:	add    DWORD PTR [r15+0xf0],0x1
  410835:	xor    eax,eax
  410837:	mov    rdi,r15
  41083a:	lea    rsi,[rip+0x34f60]        # 4457a1 <_IO_stdin_used@@Base+0x167a1>
  410841:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410846:	xor    eax,eax
  410848:	mov    rdi,r15
  41084b:	lea    rsi,[rip+0x34361]        # 444bb3 <_IO_stdin_used@@Base+0x15bb3>
  410852:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410857:	mov    eax,DWORD PTR [r15+0xf0]
  41085e:	test   eax,eax
  410860:	lea    rsi,[rip+0x22845]        # 4330ac <_IO_stdin_used@@Base+0x40ac>
  410867:	je     41297d <__flatcc_fb_gen_c_json_parser@@Base+0x268d>
  41086d:	add    eax,0xffffffff
  410870:	mov    DWORD PTR [r15+0xf0],eax
  410877:	xor    eax,eax
  410879:	mov    rdi,r15
  41087c:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410881:	cmp    DWORD PTR [rsp+0x144],0x0
  410889:	jne    4118c1 <__flatcc_fb_gen_c_json_parser@@Base+0x15d1>
  41088f:	jmp    4118d2 <__flatcc_fb_gen_c_json_parser@@Base+0x15e2>
  410894:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41089e:	xchg   ax,ax
  4108a0:	movzx  eax,WORD PTR [r14+0x10]
  4108a5:	cmp    rax,0x4
  4108a9:	ja     411a2f <__flatcc_fb_gen_c_json_parser@@Base+0x173f>
  4108af:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  4108b4:	add    rax,r13
  4108b7:	jmp    rax
  4108b9:	vmovdqu YMMWORD PTR [rsp+0x130],ymm0
  4108c2:	vmovdqa YMMWORD PTR [rsp+0x120],ymm0
  4108cb:	cmp    WORD PTR [r14+0x10],0x0
  4108d1:	jne    412679 <__flatcc_fb_gen_c_json_parser@@Base+0x2389>
  4108d7:	mov    rdi,r14
  4108da:	lea    rsi,[rsp+0x1c]
  4108df:	vzeroupper 
  4108e2:	call   413390 <__flatcc_fb_gen_c_json_parser@@Base+0x30a0>
  4108e7:	mov    QWORD PTR [rsp+0x120],rax
  4108ef:	mov    r12d,DWORD PTR [rsp+0x1c]
  4108f4:	test   rax,rax
  4108f7:	jne    410902 <__flatcc_fb_gen_c_json_parser@@Base+0x612>
  4108f9:	test   r12d,r12d
  4108fc:	jg     41269b <__flatcc_fb_gen_c_json_parser@@Base+0x23ab>
  410902:	mov    QWORD PTR [rsp+0x138],r14
  41090a:	mov    QWORD PTR [rsp+0x140],0x0
  410916:	lea    rcx,[rip+0x4503]        # 414e20 <__flatcc_fb_gen_c_json_parser@@Base+0x4b30>
  41091d:	mov    QWORD PTR [rsp+0x128],rcx
  410925:	lea    rcx,[rip+0x5344]        # 415c70 <__flatcc_fb_gen_c_json_parser@@Base+0x5980>
  41092c:	mov    QWORD PTR [rsp+0x130],rcx
  410934:	test   r12d,r12d
  410937:	vpxor  xmm11,xmm11,xmm11
  41093c:	vmovdqa ymm12,YMMWORD PTR [rsp+0x220]
  410945:	vmovdqa ymm13,YMMWORD PTR [rsp+0x260]
  41094e:	vpcmpeqd ymm14,ymm14,ymm14
  410953:	vmovdqa ymm15,YMMWORD PTR [rsp+0x240]
  41095c:	jle    411158 <__flatcc_fb_gen_c_json_parser@@Base+0xe68>
  410962:	cmp    r12d,0x11
  410966:	jae    411498 <__flatcc_fb_gen_c_json_parser@@Base+0x11a8>
  41096c:	xor    ecx,ecx
  41096e:	xor    ebx,ebx
  410970:	jmp    411594 <__flatcc_fb_gen_c_json_parser@@Base+0x12a4>
  410975:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41097f:	nop
  410980:	mov    rdi,r15
  410983:	mov    rsi,r14
  410986:	vzeroupper 
  410989:	call   412d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2a20>
  41098e:	lea    rsi,[rip+0x2039e]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  410995:	lea    rdx,[rip+0x36276]        # 446c12 <_IO_stdin_used@@Base+0x17c12>
  41099c:	lea    rcx,[rsp+0x20]
  4109a1:	vpxor  xmm0,xmm0,xmm0
  4109a5:	jmp    411a2f <__flatcc_fb_gen_c_json_parser@@Base+0x173f>
  4109aa:	vmovdqu YMMWORD PTR [rsp+0x130],ymm0
  4109b3:	vmovdqa YMMWORD PTR [rsp+0x120],ymm0
  4109bc:	movzx  eax,WORD PTR [r14+0x10]
  4109c1:	cmp    eax,0x1
  4109c4:	jne    4126e4 <__flatcc_fb_gen_c_json_parser@@Base+0x23f4>
  4109ca:	mov    rdi,r14
  4109cd:	lea    rsi,[rsp+0x1c]
  4109d2:	vzeroupper 
  4109d5:	call   413390 <__flatcc_fb_gen_c_json_parser@@Base+0x30a0>
  4109da:	mov    QWORD PTR [rsp+0x120],rax
  4109e2:	mov    r13d,DWORD PTR [rsp+0x1c]
  4109e7:	test   rax,rax
  4109ea:	jne    4109f5 <__flatcc_fb_gen_c_json_parser@@Base+0x705>
  4109ec:	test   r13d,r13d
  4109ef:	jg     412706 <__flatcc_fb_gen_c_json_parser@@Base+0x2416>
  4109f5:	mov    QWORD PTR [rsp+0x138],r14
  4109fd:	mov    DWORD PTR [rsp+0x140],0x1
  410a08:	lea    rax,[rip+0x4411]        # 414e20 <__flatcc_fb_gen_c_json_parser@@Base+0x4b30>
  410a0f:	mov    QWORD PTR [rsp+0x128],rax
  410a17:	lea    rax,[rip+0x5252]        # 415c70 <__flatcc_fb_gen_c_json_parser@@Base+0x5980>
  410a1e:	mov    QWORD PTR [rsp+0x130],rax
  410a26:	vpxor  xmm0,xmm0,xmm0
  410a2a:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  410a33:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  410a3c:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  410a45:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  410a4e:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  410a54:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  410a5a:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  410a60:	mov    QWORD PTR [rsp+0x100],0x0
  410a6c:	mov    rdi,QWORD PTR [r14+0x18]
  410a70:	mov    rsi,r14
  410a73:	lea    rbx,[rsp+0x20]
  410a78:	mov    rdx,rbx
  410a7b:	vzeroupper 
  410a7e:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  410a83:	xor    eax,eax
  410a85:	mov    rdi,r15
  410a88:	lea    rsi,[rip+0x33c00]        # 44468f <_IO_stdin_used@@Base+0x1568f>
  410a8f:	mov    rdx,rbx
  410a92:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410a97:	xor    eax,eax
  410a99:	mov    rdi,r15
  410a9c:	lea    rsi,[rip+0x3616f]        # 446c12 <_IO_stdin_used@@Base+0x17c12>
  410aa3:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410aa8:	add    DWORD PTR [r15+0xf0],0x1
  410ab0:	xor    eax,eax
  410ab2:	mov    rdi,r15
  410ab5:	lea    rsi,[rip+0x33c52]        # 44470e <_IO_stdin_used@@Base+0x1570e>
  410abc:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410ac1:	test   r13d,r13d
  410ac4:	jle    410b0a <__flatcc_fb_gen_c_json_parser@@Base+0x81a>
  410ac6:	xor    eax,eax
  410ac8:	mov    rdi,r15
  410acb:	lea    rsi,[rip+0x33c46]        # 444718 <_IO_stdin_used@@Base+0x15718>
  410ad2:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410ad7:	xor    eax,eax
  410ad9:	mov    rdi,r15
  410adc:	lea    rsi,[rip+0x33c4f]        # 444732 <_IO_stdin_used@@Base+0x15732>
  410ae3:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410ae8:	xor    eax,eax
  410aea:	mov    rdi,r15
  410aed:	lea    rsi,[rip+0x33754]        # 444248 <_IO_stdin_used@@Base+0x15248>
  410af4:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410af9:	xor    eax,eax
  410afb:	mov    rdi,r15
  410afe:	lea    rsi,[rip+0x33755]        # 44425a <_IO_stdin_used@@Base+0x1525a>
  410b05:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410b0a:	xor    eax,eax
  410b0c:	mov    rdi,r15
  410b0f:	lea    rsi,[rip+0x2021d]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  410b16:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410b1b:	xor    eax,eax
  410b1d:	mov    rdi,r15
  410b20:	lea    rsi,[rip+0x33c17]        # 44473e <_IO_stdin_used@@Base+0x1573e>
  410b27:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410b2c:	xor    eax,eax
  410b2e:	mov    rdi,r15
  410b31:	lea    rsi,[rip+0x33c43]        # 44477b <_IO_stdin_used@@Base+0x1577b>
  410b38:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410b3d:	add    DWORD PTR [r15+0xf0],0x1
  410b45:	xor    eax,eax
  410b47:	mov    rdi,r15
  410b4a:	test   r13d,r13d
  410b4d:	je     41115f <__flatcc_fb_gen_c_json_parser@@Base+0xe6f>
  410b53:	lea    rsi,[rip+0x33c7e]        # 4447d8 <_IO_stdin_used@@Base+0x157d8>
  410b5a:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410b5f:	xor    eax,eax
  410b61:	mov    rdi,r15
  410b64:	lea    rsi,[rip+0x336fb]        # 444266 <_IO_stdin_used@@Base+0x15266>
  410b6b:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410b70:	lea    ecx,[r13-0x1]
  410b74:	xor    edx,edx
  410b76:	xor    r8d,r8d
  410b79:	mov    rdi,r15
  410b7c:	mov    rsi,r12
  410b7f:	call   413640 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  410b84:	jmp    41117c <__flatcc_fb_gen_c_json_parser@@Base+0xe8c>
  410b89:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  410b92:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  410b9b:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  410ba4:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  410bad:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  410bb3:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  410bb9:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  410bbf:	mov    QWORD PTR [rsp+0x100],0x0
  410bcb:	vmovdqa YMMWORD PTR [rsp+0x1e0],ymm0
  410bd4:	vmovdqa YMMWORD PTR [rsp+0x1c0],ymm0
  410bdd:	vmovdqa YMMWORD PTR [rsp+0x1a0],ymm0
  410be6:	vmovdqa YMMWORD PTR [rsp+0x180],ymm0
  410bef:	vmovdqa YMMWORD PTR [rsp+0x160],ymm0
  410bf8:	vmovdqa YMMWORD PTR [rsp+0x140],ymm0
  410c01:	vmovdqa YMMWORD PTR [rsp+0x120],ymm0
  410c0a:	mov    QWORD PTR [rsp+0x200],0x0
  410c16:	mov    rdi,QWORD PTR [r14+0x18]
  410c1a:	mov    rbx,rcx
  410c1d:	mov    r12,rdx
  410c20:	mov    r13,rsi
  410c23:	mov    rsi,r14
  410c26:	mov    rdx,rcx
  410c29:	vzeroupper 
  410c2c:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  410c31:	xor    eax,eax
  410c33:	mov    rdi,r15
  410c36:	lea    rsi,[rip+0x33094]        # 443cd1 <_IO_stdin_used@@Base+0x14cd1>
  410c3d:	mov    rdx,rbx
  410c40:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410c45:	xor    eax,eax
  410c47:	mov    rdi,r15
  410c4a:	mov    rsi,r12
  410c4d:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410c52:	add    DWORD PTR [r15+0xf0],0x1
  410c5a:	xor    eax,eax
  410c5c:	mov    rdi,r15
  410c5f:	mov    rsi,r13
  410c62:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410c67:	xor    eax,eax
  410c69:	mov    rdi,r15
  410c6c:	lea    rsi,[rip+0x330ee]        # 443d61 <_IO_stdin_used@@Base+0x14d61>
  410c73:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410c78:	xor    eax,eax
  410c7a:	mov    rdi,r15
  410c7d:	lea    rsi,[rip+0x330ea]        # 443d6e <_IO_stdin_used@@Base+0x14d6e>
  410c84:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410c89:	xor    eax,eax
  410c8b:	mov    rdi,r15
  410c8e:	lea    rsi,[rip+0x330e9]        # 443d7e <_IO_stdin_used@@Base+0x14d7e>
  410c95:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410c9a:	add    DWORD PTR [r15+0xf0],0x1
  410ca2:	xor    eax,eax
  410ca4:	mov    rdi,r15
  410ca7:	lea    rsi,[rip+0x330e3]        # 443d91 <_IO_stdin_used@@Base+0x14d91>
  410cae:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410cb3:	mov    eax,DWORD PTR [r15+0xf0]
  410cba:	test   eax,eax
  410cbc:	je     41274f <__flatcc_fb_gen_c_json_parser@@Base+0x245f>
  410cc2:	add    eax,0xffffffff
  410cc5:	mov    DWORD PTR [r15+0xf0],eax
  410ccc:	mov    r12,QWORD PTR [r14+0x28]
  410cd0:	test   r12,r12
  410cd3:	je     410e30 <__flatcc_fb_gen_c_json_parser@@Base+0xb40>
  410cd9:	mov    QWORD PTR [rsp+0x10],r14
  410cde:	xchg   ax,ax
  410ce0:	movzx  eax,WORD PTR [r12+0x28]
  410ce6:	test   ax,ax
  410ce9:	je     410e23 <__flatcc_fb_gen_c_json_parser@@Base+0xb33>
  410cef:	mov    rcx,QWORD PTR [r12+0x8]
  410cf4:	mov    ebx,DWORD PTR [rcx+0x8]
  410cf7:	mov    r13,QWORD PTR [rcx]
  410cfa:	movzx  eax,ax
  410cfd:	cmp    eax,0xa
  410d00:	je     410d80 <__flatcc_fb_gen_c_json_parser@@Base+0xa90>
  410d02:	cmp    eax,0xe
  410d05:	jne    41256b <__flatcc_fb_gen_c_json_parser@@Base+0x227b>
  410d0b:	mov    rsi,QWORD PTR [r12+0x18]
  410d10:	mov    rdi,QWORD PTR [rsi+0x18]
  410d14:	lea    r14,[rsp+0x120]
  410d1c:	mov    rdx,r14
  410d1f:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  410d24:	mov    edx,DWORD PTR [r12+0x48]
  410d29:	xor    eax,eax
  410d2b:	mov    r14,r15
  410d2e:	mov    rdi,r15
  410d31:	lea    rsi,[rip+0x330c2]        # 443dfa <_IO_stdin_used@@Base+0x14dfa>
  410d38:	mov    ecx,ebx
  410d3a:	mov    r8,r13
  410d3d:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410d42:	add    DWORD PTR [r15+0xf0],0x1
  410d4a:	mov    rax,QWORD PTR [r12+0x18]
  410d4f:	movzx  eax,WORD PTR [rax+0x10]
  410d53:	cmp    eax,0x1
  410d56:	je     410dd5 <__flatcc_fb_gen_c_json_parser@@Base+0xae5>
  410d58:	test   ax,ax
  410d5b:	jne    4125b4 <__flatcc_fb_gen_c_json_parser@@Base+0x22c4>
  410d61:	xor    eax,eax
  410d63:	mov    r14,r15
  410d66:	mov    rdi,r15
  410d69:	lea    rsi,[rip+0x3309e]        # 443e0e <_IO_stdin_used@@Base+0x14e0e>
  410d70:	jmp    410de1 <__flatcc_fb_gen_c_json_parser@@Base+0xaf1>
  410d72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410d7c:	nop    DWORD PTR [rax+0x0]
  410d80:	mov    edx,DWORD PTR [r12+0x48]
  410d85:	xor    eax,eax
  410d87:	mov    rdi,r15
  410d8a:	lea    rsi,[rip+0x33069]        # 443dfa <_IO_stdin_used@@Base+0x14dfa>
  410d91:	mov    ecx,ebx
  410d93:	mov    r8,r13
  410d96:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410d9b:	add    DWORD PTR [r15+0xf0],0x1
  410da3:	xor    eax,eax
  410da5:	mov    rdi,r15
  410da8:	lea    rsi,[rip+0x33102]        # 443eb1 <_IO_stdin_used@@Base+0x14eb1>
  410daf:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410db4:	xor    eax,eax
  410db6:	mov    rdi,r15
  410db9:	lea    rsi,[rip+0x330ea]        # 443eaa <_IO_stdin_used@@Base+0x14eaa>
  410dc0:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410dc5:	mov    eax,DWORD PTR [r15+0xf0]
  410dcc:	test   eax,eax
  410dce:	jne    410e19 <__flatcc_fb_gen_c_json_parser@@Base+0xb29>
  410dd0:	jmp    4125fd <__flatcc_fb_gen_c_json_parser@@Base+0x230d>
  410dd5:	xor    eax,eax
  410dd7:	mov    rdi,r14
  410dda:	lea    rsi,[rip+0x3305f]        # 443e40 <_IO_stdin_used@@Base+0x14e40>
  410de1:	lea    rdx,[rsp+0x120]
  410de9:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410dee:	mov    rbx,QWORD PTR [rsp+0x10]
  410df3:	xor    eax,eax
  410df5:	mov    rdi,r14
  410df8:	lea    rsi,[rip+0x330ab]        # 443eaa <_IO_stdin_used@@Base+0x14eaa>
  410dff:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410e04:	mov    eax,DWORD PTR [r14+0xf0]
  410e0b:	test   eax,eax
  410e0d:	mov    r15,r14
  410e10:	mov    r14,rbx
  410e13:	je     41261c <__flatcc_fb_gen_c_json_parser@@Base+0x232c>
  410e19:	add    eax,0xffffffff
  410e1c:	mov    DWORD PTR [r15+0xf0],eax
  410e23:	mov    r12,QWORD PTR [r12]
  410e27:	test   r12,r12
  410e2a:	jne    410ce0 <__flatcc_fb_gen_c_json_parser@@Base+0x9f0>
  410e30:	xor    eax,eax
  410e32:	mov    rdi,r15
  410e35:	lea    rsi,[rip+0x330e1]        # 443f1d <_IO_stdin_used@@Base+0x14f1d>
  410e3c:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410e41:	add    DWORD PTR [r15+0xf0],0x1
  410e49:	xor    eax,eax
  410e4b:	mov    rdi,r15
  410e4e:	lea    rsi,[rip+0x330d1]        # 443f26 <_IO_stdin_used@@Base+0x14f26>
  410e55:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410e5a:	add    DWORD PTR [r15+0xf0],0x1
  410e62:	xor    eax,eax
  410e64:	mov    rdi,r15
  410e67:	lea    rsi,[rip+0x330f1]        # 443f5f <_IO_stdin_used@@Base+0x14f5f>
  410e6e:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410e73:	mov    eax,DWORD PTR [r15+0xf0]
  410e7a:	test   eax,eax
  410e7c:	je     41276e <__flatcc_fb_gen_c_json_parser@@Base+0x247e>
  410e82:	add    eax,0xffffffff
  410e85:	mov    DWORD PTR [r15+0xf0],eax
  410e8c:	xor    eax,eax
  410e8e:	mov    rdi,r15
  410e91:	lea    rsi,[rip+0x33123]        # 443fbb <_IO_stdin_used@@Base+0x14fbb>
  410e98:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410e9d:	add    DWORD PTR [r15+0xf0],0x1
  410ea5:	xor    eax,eax
  410ea7:	mov    rdi,r15
  410eaa:	lea    rsi,[rip+0x33113]        # 443fc4 <_IO_stdin_used@@Base+0x14fc4>
  410eb1:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410eb6:	mov    eax,DWORD PTR [r15+0xf0]
  410ebd:	test   eax,eax
  410ebf:	lea    r12,[rip+0x32696]        # 44355c <_IO_stdin_used@@Base+0x1455c>
  410ec6:	je     41278d <__flatcc_fb_gen_c_json_parser@@Base+0x249d>
  410ecc:	mov    r13,r12
  410ecf:	add    eax,0xffffffff
  410ed2:	mov    DWORD PTR [r15+0xf0],eax
  410ed9:	xor    eax,eax
  410edb:	mov    rdi,r15
  410ede:	lea    rbx,[rip+0x221c7]        # 4330ac <_IO_stdin_used@@Base+0x40ac>
  410ee5:	mov    rsi,rbx
  410ee8:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410eed:	mov    eax,DWORD PTR [r15+0xf0]
  410ef4:	test   eax,eax
  410ef6:	lea    r12,[rsp+0x120]
  410efe:	je     4127ac <__flatcc_fb_gen_c_json_parser@@Base+0x24bc>
  410f04:	add    eax,0xffffffff
  410f07:	mov    DWORD PTR [r15+0xf0],eax
  410f0e:	xor    eax,eax
  410f10:	mov    rdi,r15
  410f13:	mov    rsi,rbx
  410f16:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410f1b:	xor    eax,eax
  410f1d:	mov    rdi,r15
  410f20:	lea    rsi,[rip+0x330d4]        # 443ffb <_IO_stdin_used@@Base+0x14ffb>
  410f27:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410f2c:	xor    eax,eax
  410f2e:	mov    rdi,r15
  410f31:	lea    rsi,[rip+0x330df]        # 444017 <_IO_stdin_used@@Base+0x15017>
  410f38:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410f3d:	add    DWORD PTR [r15+0xf0],0x1
  410f45:	xor    eax,eax
  410f47:	mov    rdi,r15
  410f4a:	lea    rsi,[rip+0x330d6]        # 444027 <_IO_stdin_used@@Base+0x15027>
  410f51:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410f56:	mov    eax,DWORD PTR [r15+0xf0]
  410f5d:	test   eax,eax
  410f5f:	je     4127cb <__flatcc_fb_gen_c_json_parser@@Base+0x24db>
  410f65:	add    eax,0xffffffff
  410f68:	mov    DWORD PTR [r15+0xf0],eax
  410f6f:	xor    eax,eax
  410f71:	mov    rdi,r15
  410f74:	mov    rsi,rbx
  410f77:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410f7c:	xor    eax,eax
  410f7e:	mov    rdi,r15
  410f81:	lea    rsi,[rip+0x33083]        # 44400b <_IO_stdin_used@@Base+0x1500b>
  410f88:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410f8d:	mov    eax,DWORD PTR [r15+0xf0]
  410f94:	test   eax,eax
  410f96:	je     4127ea <__flatcc_fb_gen_c_json_parser@@Base+0x24fa>
  410f9c:	add    eax,0xffffffff
  410f9f:	mov    DWORD PTR [r15+0xf0],eax
  410fa6:	xor    eax,eax
  410fa8:	mov    rdi,r15
  410fab:	mov    rsi,rbx
  410fae:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410fb3:	xor    eax,eax
  410fb5:	mov    rdi,r15
  410fb8:	lea    rsi,[rip+0x1fd74]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  410fbf:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  410fc4:	vpxor  xmm0,xmm0,xmm0
  410fc8:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  410fd1:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  410fda:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  410fe3:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  410fec:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  410ff2:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  410ff8:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  410ffe:	mov    QWORD PTR [rsp+0x100],0x0
  41100a:	mov    rdi,QWORD PTR [r14+0x18]
  41100e:	mov    rsi,r14
  411011:	lea    rbx,[rsp+0x20]
  411016:	mov    rdx,rbx
  411019:	vzeroupper 
  41101c:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  411021:	xor    eax,eax
  411023:	mov    rdi,r15
  411026:	lea    rsi,[rip+0x33050]        # 44407d <_IO_stdin_used@@Base+0x1507d>
  41102d:	mov    rdx,rbx
  411030:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411035:	xor    eax,eax
  411037:	mov    rdi,r15
  41103a:	lea    rsi,[rip+0x35bd1]        # 446c12 <_IO_stdin_used@@Base+0x17c12>
  411041:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411046:	add    DWORD PTR [r15+0xf0],0x1
  41104e:	xor    eax,eax
  411050:	mov    rdi,r15
  411053:	lea    rsi,[rip+0x32d14]        # 443d6e <_IO_stdin_used@@Base+0x14d6e>
  41105a:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41105f:	mov    rbx,QWORD PTR [r14+0x28]
  411063:	test   rbx,rbx
  411066:	jne    411096 <__flatcc_fb_gen_c_json_parser@@Base+0xda6>
  411068:	jmp    4110b6 <__flatcc_fb_gen_c_json_parser@@Base+0xdc6>
  41106a:	nop    WORD PTR [rax+rax*1+0x0]
  411070:	mov    rax,QWORD PTR [rbx+0x8]
  411074:	mov    r8,QWORD PTR [rax]
  411077:	mov    ecx,DWORD PTR [rax+0x8]
  41107a:	mov    edx,DWORD PTR [rbx+0x48]
  41107d:	xor    eax,eax
  41107f:	mov    rdi,r15
  411082:	lea    rsi,[rip+0x33044]        # 4440cd <_IO_stdin_used@@Base+0x150cd>
  411089:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41108e:	mov    rbx,QWORD PTR [rbx]
  411091:	test   rbx,rbx
  411094:	je     4110b6 <__flatcc_fb_gen_c_json_parser@@Base+0xdc6>
  411096:	cmp    WORD PTR [rbx+0x28],0x0
  41109b:	jne    411070 <__flatcc_fb_gen_c_json_parser@@Base+0xd80>
  41109d:	xor    eax,eax
  41109f:	mov    rdi,r15
  4110a2:	lea    rsi,[rip+0x33007]        # 4440b0 <_IO_stdin_used@@Base+0x150b0>
  4110a9:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4110ae:	mov    rbx,QWORD PTR [rbx]
  4110b1:	test   rbx,rbx
  4110b4:	jne    411096 <__flatcc_fb_gen_c_json_parser@@Base+0xda6>
  4110b6:	xor    eax,eax
  4110b8:	mov    rdi,r15
  4110bb:	lea    rsi,[rip+0x33029]        # 4440eb <_IO_stdin_used@@Base+0x150eb>
  4110c2:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4110c7:	mov    eax,DWORD PTR [r15+0xf0]
  4110ce:	mov    ecx,eax
  4110d0:	add    ecx,0x1
  4110d3:	mov    DWORD PTR [r15+0xf0],ecx
  4110da:	je     412809 <__flatcc_fb_gen_c_json_parser@@Base+0x2519>
  4110e0:	mov    DWORD PTR [r15+0xf0],eax
  4110e7:	xor    eax,eax
  4110e9:	mov    rdi,r15
  4110ec:	lea    rbx,[rip+0x21fb9]        # 4330ac <_IO_stdin_used@@Base+0x40ac>
  4110f3:	mov    rsi,rbx
  4110f6:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4110fb:	mov    eax,DWORD PTR [r15+0xf0]
  411102:	test   eax,eax
  411104:	je     412828 <__flatcc_fb_gen_c_json_parser@@Base+0x2538>
  41110a:	add    eax,0xffffffff
  41110d:	mov    DWORD PTR [r15+0xf0],eax
  411114:	xor    eax,eax
  411116:	mov    rdi,r15
  411119:	mov    rsi,rbx
  41111c:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411121:	xor    eax,eax
  411123:	mov    rdi,r15
  411126:	lea    rbx,[rip+0x1fc06]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41112d:	mov    rsi,rbx
  411130:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411135:	mov    rdi,r15
  411138:	mov    rsi,r14
  41113b:	call   412d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2a20>
  411140:	mov    rsi,rbx
  411143:	vpxor  xmm0,xmm0,xmm0
  411147:	lea    rcx,[rsp+0x20]
  41114c:	lea    rdx,[rip+0x35abf]        # 446c12 <_IO_stdin_used@@Base+0x17c12>
  411153:	jmp    411a2f <__flatcc_fb_gen_c_json_parser@@Base+0x173f>
  411158:	xor    ebx,ebx
  41115a:	jmp    4115c7 <__flatcc_fb_gen_c_json_parser@@Base+0x12d7>
  41115f:	lea    rsi,[rip+0x33624]        # 44478a <_IO_stdin_used@@Base+0x1578a>
  411166:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41116b:	xor    eax,eax
  41116d:	mov    rdi,r15
  411170:	lea    rsi,[rip+0x33627]        # 44479e <_IO_stdin_used@@Base+0x1579e>
  411177:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41117c:	lea    rbx,[rip+0x21f29]        # 4330ac <_IO_stdin_used@@Base+0x40ac>
  411183:	xor    eax,eax
  411185:	mov    rdi,r15
  411188:	lea    rsi,[rip+0x3367f]        # 44480e <_IO_stdin_used@@Base+0x1580e>
  41118f:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411194:	mov    eax,DWORD PTR [r15+0xf0]
  41119b:	test   eax,eax
  41119d:	je     412847 <__flatcc_fb_gen_c_json_parser@@Base+0x2557>
  4111a3:	add    eax,0xffffffff
  4111a6:	mov    DWORD PTR [r15+0xf0],eax
  4111ad:	xor    eax,eax
  4111af:	mov    rdi,r15
  4111b2:	mov    rsi,rbx
  4111b5:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4111ba:	xor    eax,eax
  4111bc:	mov    rdi,r15
  4111bf:	lea    rsi,[rip+0x32e45]        # 44400b <_IO_stdin_used@@Base+0x1500b>
  4111c6:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4111cb:	test   r13d,r13d
  4111ce:	jle    411219 <__flatcc_fb_gen_c_json_parser@@Base+0xf29>
  4111d0:	mov    eax,DWORD PTR [r15+0xf0]
  4111d7:	mov    DWORD PTR [r15+0xf8],eax
  4111de:	mov    DWORD PTR [r15+0xf0],0x0
  4111e9:	xor    eax,eax
  4111eb:	mov    rdi,r15
  4111ee:	lea    rsi,[rip+0x33655]        # 44484a <_IO_stdin_used@@Base+0x1584a>
  4111f5:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4111fa:	mov    eax,DWORD PTR [r15+0xf8]
  411201:	mov    DWORD PTR [r15+0xf0],eax
  411208:	xor    eax,eax
  41120a:	mov    rdi,r15
  41120d:	lea    rsi,[rip+0x32e13]        # 444027 <_IO_stdin_used@@Base+0x15027>
  411214:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411219:	mov    eax,DWORD PTR [r15+0xf0]
  411220:	test   eax,eax
  411222:	je     412866 <__flatcc_fb_gen_c_json_parser@@Base+0x2576>
  411228:	add    eax,0xffffffff
  41122b:	mov    DWORD PTR [r15+0xf0],eax
  411232:	xor    eax,eax
  411234:	mov    rdi,r15
  411237:	mov    rsi,rbx
  41123a:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41123f:	xor    eax,eax
  411241:	mov    rdi,r15
  411244:	lea    rsi,[rip+0x1fae8]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41124b:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411250:	mov    rdi,QWORD PTR [rsp+0x120]
  411258:	test   rdi,rdi
  41125b:	je     411262 <__flatcc_fb_gen_c_json_parser@@Base+0xf72>
  41125d:	call   406040 <free@plt>
  411262:	movzx  eax,WORD PTR [r14+0x10]
  411267:	cmp    eax,0x1
  41126a:	jne    412885 <__flatcc_fb_gen_c_json_parser@@Base+0x2595>
  411270:	vpxor  xmm0,xmm0,xmm0
  411274:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  41127d:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  411286:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  41128f:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  411298:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  41129e:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  4112a4:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  4112aa:	mov    QWORD PTR [rsp+0x100],0x0
  4112b6:	mov    rdi,QWORD PTR [r14+0x18]
  4112ba:	mov    rsi,r14
  4112bd:	lea    rbx,[rsp+0x20]
  4112c2:	mov    rdx,rbx
  4112c5:	vzeroupper 
  4112c8:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  4112cd:	xor    eax,eax
  4112cf:	mov    rdi,r15
  4112d2:	lea    rsi,[rip+0x3404d]        # 445326 <_IO_stdin_used@@Base+0x16326>
  4112d9:	mov    rdx,rbx
  4112dc:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4112e1:	xor    eax,eax
  4112e3:	mov    rdi,r15
  4112e6:	lea    r13,[rip+0x35925]        # 446c12 <_IO_stdin_used@@Base+0x17c12>
  4112ed:	mov    rsi,r13
  4112f0:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4112f5:	add    DWORD PTR [r15+0xf0],0x1
  4112fd:	xor    eax,eax
  4112ff:	mov    rdi,r15
  411302:	lea    rsi,[rip+0x33429]        # 444732 <_IO_stdin_used@@Base+0x15732>
  411309:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41130e:	xor    eax,eax
  411310:	mov    rdi,r15
  411313:	lea    r12,[rip+0x1fa19]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41131a:	mov    rsi,r12
  41131d:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411322:	xor    eax,eax
  411324:	mov    rdi,r15
  411327:	lea    rsi,[rip+0x32a33]        # 443d61 <_IO_stdin_used@@Base+0x14d61>
  41132e:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411333:	mov    rdx,QWORD PTR [r14+0xb8]
  41133a:	movzx  ecx,WORD PTR [r14+0xb0]
  411342:	xor    eax,eax
  411344:	mov    rdi,r15
  411347:	lea    rsi,[rip+0x3405b]        # 4453a9 <_IO_stdin_used@@Base+0x163a9>
  41134e:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411353:	xor    eax,eax
  411355:	mov    rdi,r15
  411358:	lea    rsi,[rip+0x33b0d]        # 444e6c <_IO_stdin_used@@Base+0x15e6c>
  41135f:	mov    rdx,rbx
  411362:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411367:	xor    eax,eax
  411369:	mov    rdi,r15
  41136c:	lea    rsi,[rip+0x34081]        # 4453f4 <_IO_stdin_used@@Base+0x163f4>
  411373:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411378:	xor    eax,eax
  41137a:	mov    rdi,r15
  41137d:	lea    rsi,[rip+0x32c87]        # 44400b <_IO_stdin_used@@Base+0x1500b>
  411384:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411389:	mov    eax,DWORD PTR [r15+0xf0]
  411390:	mov    DWORD PTR [r15+0xf8],eax
  411397:	mov    DWORD PTR [r15+0xf0],0x0
  4113a2:	xor    eax,eax
  4113a4:	mov    rdi,r15
  4113a7:	lea    rsi,[rip+0x3349c]        # 44484a <_IO_stdin_used@@Base+0x1584a>
  4113ae:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4113b3:	mov    eax,DWORD PTR [r15+0xf8]
  4113ba:	mov    DWORD PTR [r15+0xf0],eax
  4113c1:	xor    eax,eax
  4113c3:	mov    rdi,r15
  4113c6:	lea    rsi,[rip+0x32c5a]        # 444027 <_IO_stdin_used@@Base+0x15027>
  4113cd:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4113d2:	mov    eax,DWORD PTR [r15+0xf0]
  4113d9:	test   eax,eax
  4113db:	je     4128a4 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
  4113e1:	add    eax,0xffffffff
  4113e4:	mov    DWORD PTR [r15+0xf0],eax
  4113eb:	xor    eax,eax
  4113ed:	mov    rdi,r15
  4113f0:	lea    r13,[rip+0x21cb5]        # 4330ac <_IO_stdin_used@@Base+0x40ac>
  4113f7:	mov    rsi,r13
  4113fa:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4113ff:	xor    eax,eax
  411401:	mov    rdi,r15
  411404:	mov    rsi,r12
  411407:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41140c:	xor    eax,eax
  41140e:	mov    rdi,r15
  411411:	lea    rsi,[rip+0x3402d]        # 445445 <_IO_stdin_used@@Base+0x16445>
  411418:	mov    rdx,rbx
  41141b:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411420:	xor    eax,eax
  411422:	mov    rdi,r15
  411425:	lea    rsi,[rip+0x357e6]        # 446c12 <_IO_stdin_used@@Base+0x17c12>
  41142c:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411431:	add    DWORD PTR [r15+0xf0],0x1
  411439:	xor    eax,eax
  41143b:	mov    rdi,r15
  41143e:	lea    rsi,[rip+0x34094]        # 4454d9 <_IO_stdin_used@@Base+0x164d9>
  411445:	mov    rdx,rbx
  411448:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41144d:	mov    eax,DWORD PTR [r15+0xf0]
  411454:	test   eax,eax
  411456:	je     4128c3 <__flatcc_fb_gen_c_json_parser@@Base+0x25d3>
  41145c:	add    eax,0xffffffff
  41145f:	mov    DWORD PTR [r15+0xf0],eax
  411466:	xor    eax,eax
  411468:	mov    rdi,r15
  41146b:	mov    rsi,r13
  41146e:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411473:	xor    eax,eax
  411475:	mov    rdi,r15
  411478:	mov    rsi,r12
  41147b:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411480:	vpxor  xmm0,xmm0,xmm0
  411484:	lea    rcx,[rsp+0x20]
  411489:	lea    rdx,[rip+0x35782]        # 446c12 <_IO_stdin_used@@Base+0x17c12>
  411490:	mov    rsi,r12
  411493:	jmp    411a20 <__flatcc_fb_gen_c_json_parser@@Base+0x1730>
  411498:	mov    edx,r12d
  41149b:	and    edx,0xf
  41149e:	test   rdx,rdx
  4114a1:	mov    ecx,0x10
  4114a6:	cmove  rdx,rcx
  4114aa:	mov    rcx,r12
  4114ad:	sub    rcx,rdx
  4114b0:	vpxor  xmm0,xmm0,xmm0
  4114b4:	mov    rdx,rcx
  4114b7:	vmovdqa ymm1,YMMWORD PTR [rip+0x31fc1]        # 443480 <_IO_stdin_used@@Base+0x14480>
  4114bf:	vmovdqa ymm2,YMMWORD PTR [rip+0x31f99]        # 443460 <_IO_stdin_used@@Base+0x14460>
  4114c7:	vpxor  xmm3,xmm3,xmm3
  4114cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4114d0:	vpsllq ymm4,ymm1,0x5
  4114d5:	vmovq  xmm5,rax
  4114da:	vpbroadcastq ymm5,xmm5
  4114df:	vpaddq ymm4,ymm5,ymm4
  4114e3:	vpaddq ymm9,ymm4,ymm12
  4114e8:	vpsllq ymm7,ymm2,0x5
  4114ed:	vpaddq ymm5,ymm5,ymm7
  4114f1:	vpaddq ymm7,ymm5,ymm12
  4114f6:	vpaddq ymm8,ymm4,ymm13
  4114fb:	vpaddq ymm5,ymm5,ymm13
  411500:	vpcmpeqd xmm4,xmm4,xmm4
  411504:	vpgatherqd xmm10,DWORD PTR [ymm7*1+0x0],xmm4
  41150e:	vpcmpeqd xmm4,xmm4,xmm4
  411512:	vpgatherqd xmm7,DWORD PTR [ymm9*1+0x0],xmm4
  41151c:	vpcmpeqd xmm4,xmm4,xmm4
  411520:	vpgatherqd xmm6,DWORD PTR [ymm5*1+0x0],xmm4
  41152a:	vpcmpeqd xmm4,xmm4,xmm4
  41152e:	vpgatherqd xmm5,DWORD PTR [ymm8*1+0x0],xmm4
  411538:	vinserti128 ymm4,ymm7,xmm10,0x1
  41153e:	vinserti128 ymm5,ymm5,xmm6,0x1
  411544:	vpcmpeqd ymm4,ymm4,ymm11
  411549:	vpxor  ymm4,ymm4,ymm14
  41154e:	vpsubd ymm0,ymm0,ymm4
  411552:	vpcmpeqd ymm4,ymm5,ymm11
  411557:	vpxor  ymm4,ymm4,ymm14
  41155c:	vpsubd ymm3,ymm3,ymm4
  411560:	vpaddq ymm1,ymm1,ymm15
  411565:	vpaddq ymm2,ymm2,ymm15
  41156a:	add    rdx,0xfffffffffffffff0
  41156e:	jne    4114d0 <__flatcc_fb_gen_c_json_parser@@Base+0x11e0>
  411574:	vpaddd ymm0,ymm3,ymm0
  411578:	vextracti128 xmm1,ymm0,0x1
  41157e:	vpaddd ymm0,ymm0,ymm1
  411582:	vpshufd xmm1,xmm0,0x4e
  411587:	vpaddd ymm0,ymm0,ymm1
  41158b:	vphaddd ymm0,ymm0,ymm0
  411590:	vmovd  ebx,xmm0
  411594:	mov    rdx,r12
  411597:	sub    rdx,rcx
  41159a:	shl    rcx,0x5
  41159e:	add    rax,rcx
  4115a1:	add    rax,0x18
  4115a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4115af:	nop
  4115b0:	cmp    DWORD PTR [rax],0x1
  4115b3:	sbb    ebx,0xffffffff
  4115b6:	add    rax,0x20
  4115ba:	add    rdx,0xffffffffffffffff
  4115be:	jne    4115b0 <__flatcc_fb_gen_c_json_parser@@Base+0x12c0>
  4115c0:	mov    DWORD PTR [rsp+0x144],ebx
  4115c7:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm11
  4115d0:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm11
  4115d9:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm11
  4115e2:	vmovdqa YMMWORD PTR [rsp+0x80],ymm11
  4115eb:	vmovdqa YMMWORD PTR [rsp+0x60],ymm11
  4115f1:	vmovdqa YMMWORD PTR [rsp+0x40],ymm11
  4115f7:	vmovdqa YMMWORD PTR [rsp+0x20],ymm11
  4115fd:	mov    QWORD PTR [rsp+0x100],0x0
  411609:	mov    rdi,QWORD PTR [r14+0x18]
  41160d:	mov    rsi,r14
  411610:	lea    r13,[rsp+0x20]
  411615:	mov    rdx,r13
  411618:	vzeroupper 
  41161b:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  411620:	xor    eax,eax
  411622:	mov    rdi,r15
  411625:	lea    rsi,[rip+0x33f48]        # 445574 <_IO_stdin_used@@Base+0x16574>
  41162c:	mov    rdx,r13
  41162f:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411634:	xor    eax,eax
  411636:	mov    rdi,r15
  411639:	lea    rsi,[rip+0x355d2]        # 446c12 <_IO_stdin_used@@Base+0x17c12>
  411640:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411645:	add    DWORD PTR [r15+0xf0],0x1
  41164d:	xor    eax,eax
  41164f:	mov    rdi,r15
  411652:	lea    rsi,[rip+0x330b5]        # 44470e <_IO_stdin_used@@Base+0x1570e>
  411659:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41165e:	test   r12d,r12d
  411661:	jle    4116ae <__flatcc_fb_gen_c_json_parser@@Base+0x13be>
  411663:	xor    eax,eax
  411665:	mov    rdi,r15
  411668:	lea    rsi,[rip+0x330c3]        # 444732 <_IO_stdin_used@@Base+0x15732>
  41166f:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411674:	xor    eax,eax
  411676:	mov    rdi,r15
  411679:	lea    rsi,[rip+0x33f76]        # 4455f6 <_IO_stdin_used@@Base+0x165f6>
  411680:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411685:	xor    eax,eax
  411687:	mov    rdi,r15
  41168a:	lea    rsi,[rip+0x32bb7]        # 444248 <_IO_stdin_used@@Base+0x15248>
  411691:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411696:	xor    eax,eax
  411698:	mov    rdi,r15
  41169b:	lea    rsi,[rip+0x32bb8]        # 44425a <_IO_stdin_used@@Base+0x1525a>
  4116a2:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4116a7:	mov    ebx,DWORD PTR [rsp+0x144]
  4116ae:	test   ebx,ebx
  4116b0:	je     4116cc <__flatcc_fb_gen_c_json_parser@@Base+0x13dc>
  4116b2:	xor    eax,eax
  4116b4:	mov    rdi,r15
  4116b7:	lea    rsi,[rip+0x33f59]        # 445617 <_IO_stdin_used@@Base+0x16617>
  4116be:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4116c3:	mov    ebx,DWORD PTR [rsp+0x144]
  4116ca:	jmp    4116ce <__flatcc_fb_gen_c_json_parser@@Base+0x13de>
  4116cc:	xor    ebx,ebx
  4116ce:	xor    eax,eax
  4116d0:	mov    rdi,r15
  4116d3:	lea    rsi,[rip+0x1f659]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  4116da:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4116df:	xor    eax,eax
  4116e1:	mov    rdi,r15
  4116e4:	lea    rsi,[rip+0x32676]        # 443d61 <_IO_stdin_used@@Base+0x14d61>
  4116eb:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4116f0:	mov    rdx,QWORD PTR [r14+0xa8]
  4116f7:	xor    eax,eax
  4116f9:	mov    rdi,r15
  4116fc:	lea    rsi,[rip+0x33f25]        # 445628 <_IO_stdin_used@@Base+0x16628>
  411703:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411708:	test   ebx,ebx
  41170a:	je     411720 <__flatcc_fb_gen_c_json_parser@@Base+0x1430>
  41170c:	movsxd rdx,ebx
  41170f:	xor    eax,eax
  411711:	mov    rdi,r15
  411714:	lea    rsi,[rip+0x33f49]        # 445664 <_IO_stdin_used@@Base+0x16664>
  41171b:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411720:	xor    eax,eax
  411722:	mov    rdi,r15
  411725:	lea    rsi,[rip+0x33012]        # 44473e <_IO_stdin_used@@Base+0x1573e>
  41172c:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411731:	xor    eax,eax
  411733:	mov    rdi,r15
  411736:	lea    rsi,[rip+0x3303e]        # 44477b <_IO_stdin_used@@Base+0x1577b>
  41173d:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411742:	add    DWORD PTR [r15+0xf0],0x1
  41174a:	xor    eax,eax
  41174c:	mov    rdi,r15
  41174f:	lea    rsi,[rip+0x33082]        # 4447d8 <_IO_stdin_used@@Base+0x157d8>
  411756:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41175b:	xor    eax,eax
  41175d:	mov    rdi,r15
  411760:	test   r12d,r12d
  411763:	jle    41178d <__flatcc_fb_gen_c_json_parser@@Base+0x149d>
  411765:	lea    rsi,[rip+0x32afa]        # 444266 <_IO_stdin_used@@Base+0x15266>
  41176c:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411771:	lea    ecx,[r12-0x1]
  411776:	xor    edx,edx
  411778:	xor    r8d,r8d
  41177b:	mov    rdi,r15
  41177e:	lea    rsi,[rsp+0x120]
  411786:	call   413640 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  41178b:	jmp    4117aa <__flatcc_fb_gen_c_json_parser@@Base+0x14ba>
  41178d:	lea    rsi,[rip+0x33f2a]        # 4456be <_IO_stdin_used@@Base+0x166be>
  411794:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411799:	xor    eax,eax
  41179b:	mov    rdi,r15
  41179e:	lea    rsi,[rip+0x32ff9]        # 44479e <_IO_stdin_used@@Base+0x1579e>
  4117a5:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4117aa:	xor    eax,eax
  4117ac:	mov    rdi,r15
  4117af:	lea    rsi,[rip+0x33f23]        # 4456d9 <_IO_stdin_used@@Base+0x166d9>
  4117b6:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4117bb:	mov    eax,DWORD PTR [r15+0xf0]
  4117c2:	test   eax,eax
  4117c4:	je     4128e2 <__flatcc_fb_gen_c_json_parser@@Base+0x25f2>
  4117ca:	add    eax,0xffffffff
  4117cd:	mov    DWORD PTR [r15+0xf0],eax
  4117d4:	xor    eax,eax
  4117d6:	mov    rdi,r15
  4117d9:	lea    rsi,[rip+0x218cc]        # 4330ac <_IO_stdin_used@@Base+0x40ac>
  4117e0:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4117e5:	xor    eax,eax
  4117e7:	mov    rdi,r15
  4117ea:	lea    rsi,[rip+0x33f23]        # 445714 <_IO_stdin_used@@Base+0x16714>
  4117f1:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4117f6:	test   r12d,r12d
  4117f9:	jle    4118b7 <__flatcc_fb_gen_c_json_parser@@Base+0x15c7>
  4117ff:	mov    r13d,0x1
  411805:	mov    ebx,0x10
  41180a:	nop    WORD PTR [rax+rax*1+0x0]
  411810:	mov    rax,QWORD PTR [rsp+0x120]
  411818:	mov    rax,QWORD PTR [rax+rbx*1]
  41181c:	movzx  ecx,WORD PTR [rax+0x70]
  411820:	test   cl,0x4
  411823:	jne    4118a0 <__flatcc_fb_gen_c_json_parser@@Base+0x15b0>
  411825:	movzx  edx,WORD PTR [rax+0x28]
  411829:	and    edx,0xfffffffe
  41182c:	cmp    edx,0xe
  41182f:	jne    411850 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  411831:	mov    rdx,QWORD PTR [rax+0x18]
  411835:	movzx  edx,WORD PTR [rdx+0x10]
  411839:	xor    esi,esi
  41183b:	cmp    edx,0x4
  41183e:	sete   sil
  411842:	test   ecx,0x100
  411848:	jne    41185a <__flatcc_fb_gen_c_json_parser@@Base+0x156a>
  41184a:	jmp    4118a0 <__flatcc_fb_gen_c_json_parser@@Base+0x15b0>
  41184c:	nop    DWORD PTR [rax+0x0]
  411850:	xor    esi,esi
  411852:	test   ecx,0x100
  411858:	je     4118a0 <__flatcc_fb_gen_c_json_parser@@Base+0x15b0>
  41185a:	mov    rdx,QWORD PTR [rax+0x88]
  411861:	sub    rdx,rsi
  411864:	test   r13d,r13d
  411867:	jne    41187f <__flatcc_fb_gen_c_json_parser@@Base+0x158f>
  411869:	xor    r13d,r13d
  41186c:	xor    eax,eax
  41186e:	mov    rdi,r15
  411871:	lea    rsi,[rip+0x33ef1]        # 445769 <_IO_stdin_used@@Base+0x16769>
  411878:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41187d:	jmp    4118a0 <__flatcc_fb_gen_c_json_parser@@Base+0x15b0>
  41187f:	xor    r13d,r13d
  411882:	xor    eax,eax
  411884:	mov    rdi,r15
  411887:	lea    rsi,[rip+0x33ea3]        # 445731 <_IO_stdin_used@@Base+0x16731>
  41188e:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411893:	add    DWORD PTR [r15+0xf0],0x1
  41189b:	nop    DWORD PTR [rax+rax*1+0x0]
  4118a0:	add    rbx,0x20
  4118a4:	add    r12,0xffffffffffffffff
  4118a8:	jne    411810 <__flatcc_fb_gen_c_json_parser@@Base+0x1520>
  4118ae:	test   r13d,r13d
  4118b1:	je     410803 <__flatcc_fb_gen_c_json_parser@@Base+0x513>
  4118b7:	cmp    DWORD PTR [rsp+0x144],0x0
  4118bf:	je     4118d2 <__flatcc_fb_gen_c_json_parser@@Base+0x15e2>
  4118c1:	xor    eax,eax
  4118c3:	mov    rdi,r15
  4118c6:	lea    rsi,[rip+0x33f2a]        # 4457f7 <_IO_stdin_used@@Base+0x167f7>
  4118cd:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4118d2:	xor    eax,eax
  4118d4:	mov    rdi,r15
  4118d7:	lea    rsi,[rip+0x33f5c]        # 44583a <_IO_stdin_used@@Base+0x1683a>
  4118de:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4118e3:	xor    eax,eax
  4118e5:	mov    rdi,r15
  4118e8:	lea    rsi,[rip+0x3271c]        # 44400b <_IO_stdin_used@@Base+0x1500b>
  4118ef:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4118f4:	mov    eax,DWORD PTR [r15+0xf0]
  4118fb:	mov    DWORD PTR [r15+0xf8],eax
  411902:	mov    DWORD PTR [r15+0xf0],0x0
  41190d:	xor    eax,eax
  41190f:	mov    rdi,r15
  411912:	lea    rsi,[rip+0x32f31]        # 44484a <_IO_stdin_used@@Base+0x1584a>
  411919:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41191e:	mov    eax,DWORD PTR [r15+0xf8]
  411925:	mov    DWORD PTR [r15+0xf0],eax
  41192c:	xor    eax,eax
  41192e:	mov    rdi,r15
  411931:	lea    rsi,[rip+0x326ef]        # 444027 <_IO_stdin_used@@Base+0x15027>
  411938:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41193d:	mov    eax,DWORD PTR [r15+0xf0]
  411944:	test   eax,eax
  411946:	je     412901 <__flatcc_fb_gen_c_json_parser@@Base+0x2611>
  41194c:	add    eax,0xffffffff
  41194f:	mov    DWORD PTR [r15+0xf0],eax
  411956:	xor    eax,eax
  411958:	mov    rdi,r15
  41195b:	lea    r13,[rip+0x2174a]        # 4330ac <_IO_stdin_used@@Base+0x40ac>
  411962:	mov    rsi,r13
  411965:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41196a:	xor    eax,eax
  41196c:	mov    rdi,r15
  41196f:	lea    r12,[rip+0x1f3bd]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  411976:	mov    rsi,r12
  411979:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41197e:	xor    eax,eax
  411980:	mov    rdi,r15
  411983:	lea    rsi,[rip+0x33abb]        # 445445 <_IO_stdin_used@@Base+0x16445>
  41198a:	lea    rbx,[rsp+0x20]
  41198f:	mov    rdx,rbx
  411992:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411997:	xor    eax,eax
  411999:	mov    rdi,r15
  41199c:	lea    rsi,[rip+0x3526f]        # 446c12 <_IO_stdin_used@@Base+0x17c12>
  4119a3:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4119a8:	add    DWORD PTR [r15+0xf0],0x1
  4119b0:	xor    eax,eax
  4119b2:	mov    rdi,r15
  4119b5:	lea    rsi,[rip+0x33ec0]        # 44587c <_IO_stdin_used@@Base+0x1687c>
  4119bc:	mov    rdx,rbx
  4119bf:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4119c4:	mov    eax,DWORD PTR [r15+0xf0]
  4119cb:	test   eax,eax
  4119cd:	je     412920 <__flatcc_fb_gen_c_json_parser@@Base+0x2630>
  4119d3:	add    eax,0xffffffff
  4119d6:	mov    DWORD PTR [r15+0xf0],eax
  4119dd:	xor    eax,eax
  4119df:	mov    rdi,r15
  4119e2:	mov    rsi,r13
  4119e5:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4119ea:	xor    eax,eax
  4119ec:	mov    rdi,r15
  4119ef:	mov    rsi,r12
  4119f2:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4119f7:	mov    rdi,QWORD PTR [rsp+0x120]
  4119ff:	test   rdi,rdi
  411a02:	je     411a09 <__flatcc_fb_gen_c_json_parser@@Base+0x1719>
  411a04:	call   406040 <free@plt>
  411a09:	vpxor  xmm0,xmm0,xmm0
  411a0d:	lea    rcx,[rsp+0x20]
  411a12:	lea    rdx,[rip+0x351f9]        # 446c12 <_IO_stdin_used@@Base+0x17c12>
  411a19:	lea    rsi,[rip+0x1f313]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  411a20:	lea    r12,[rsp+0x120]
  411a28:	lea    r13,[rip+0x31b2d]        # 44355c <_IO_stdin_used@@Base+0x1455c>
  411a2f:	mov    r14,QWORD PTR [r14]
  411a32:	test   r14,r14
  411a35:	jne    4108a0 <__flatcc_fb_gen_c_json_parser@@Base+0x5b0>
  411a3b:	mov    rax,QWORD PTR [r15+0xd8]
  411a42:	mov    rdi,QWORD PTR [rax+0x68]
  411a46:	lea    rsi,[rip+0x1613]        # 413060 <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
  411a4d:	mov    rdx,r15
  411a50:	vzeroupper 
  411a53:	call   41b650 <fb_scope_table_visit@@Base>
  411a58:	vpxor  xmm0,xmm0,xmm0
  411a5c:	vmovdqu YMMWORD PTR [rsp+0x130],ymm0
  411a65:	vmovdqa YMMWORD PTR [rsp+0x120],ymm0
  411a6e:	mov    rax,QWORD PTR [r15+0xd8]
  411a75:	mov    rdi,QWORD PTR [rax+0x68]
  411a79:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  411a7f:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  411a85:	mov    QWORD PTR [rsp+0x60],0x0
  411a8e:	mov    DWORD PTR [rsp+0x20],0x1
  411a96:	mov    QWORD PTR [rsp+0x68],rax
  411a9b:	lea    rsi,[rip+0x440e]        # 415eb0 <__flatcc_fb_gen_c_json_parser@@Base+0x5bc0>
  411aa2:	lea    rdx,[rsp+0x20]
  411aa7:	mov    QWORD PTR [rsp+0x220],rdi
  411aaf:	vzeroupper 
  411ab2:	call   41b650 <fb_scope_table_visit@@Base>
  411ab7:	movsxd r14,DWORD PTR [rsp+0x24]
  411abc:	mov    esi,0x10
  411ac1:	mov    rdi,r14
  411ac4:	call   406150 <calloc@plt>
  411ac9:	mov    r12,rax
  411acc:	mov    QWORD PTR [rsp+0x38],rax
  411ad1:	mov    r13d,DWORD PTR [rsp+0x28]
  411ad6:	movsxd rdi,r13d
  411ad9:	mov    esi,0x10
  411ade:	call   406150 <calloc@plt>
  411ae3:	mov    rbx,rax
  411ae6:	mov    QWORD PTR [rsp+0x40],rax
  411aeb:	mov    rdi,QWORD PTR [rsp+0x30]
  411af0:	mov    QWORD PTR [rsp+0x10],rdi
  411af5:	call   4061b0 <malloc@plt>
  411afa:	mov    QWORD PTR [rsp+0x48],rax
  411aff:	mov    QWORD PTR [rsp+0x50],r12
  411b04:	mov    QWORD PTR [rsp+0x58],rbx
  411b09:	mov    QWORD PTR [rsp+0x60],rax
  411b0e:	test   r14,r14
  411b11:	jle    411b18 <__flatcc_fb_gen_c_json_parser@@Base+0x1828>
  411b13:	test   r12,r12
  411b16:	je     411b49 <__flatcc_fb_gen_c_json_parser@@Base+0x1859>
  411b18:	test   r13d,r13d
  411b1b:	jle    411b22 <__flatcc_fb_gen_c_json_parser@@Base+0x1832>
  411b1d:	test   rbx,rbx
  411b20:	je     411b37 <__flatcc_fb_gen_c_json_parser@@Base+0x1847>
  411b22:	cmp    QWORD PTR [rsp+0x10],0x0
  411b28:	je     411e57 <__flatcc_fb_gen_c_json_parser@@Base+0x1b67>
  411b2e:	test   rax,rax
  411b31:	jne    411e57 <__flatcc_fb_gen_c_json_parser@@Base+0x1b67>
  411b37:	test   r12,r12
  411b3a:	je     411b49 <__flatcc_fb_gen_c_json_parser@@Base+0x1859>
  411b3c:	mov    rdi,r12
  411b3f:	call   406040 <free@plt>
  411b44:	mov    rbx,QWORD PTR [rsp+0x40]
  411b49:	test   rbx,rbx
  411b4c:	je     411b56 <__flatcc_fb_gen_c_json_parser@@Base+0x1866>
  411b4e:	mov    rdi,rbx
  411b51:	call   406040 <free@plt>
  411b56:	mov    rdi,QWORD PTR [rsp+0x48]
  411b5b:	test   rdi,rdi
  411b5e:	je     411b65 <__flatcc_fb_gen_c_json_parser@@Base+0x1875>
  411b60:	call   406040 <free@plt>
  411b65:	vpxor  xmm0,xmm0,xmm0
  411b69:	vmovdqu YMMWORD PTR [rsp+0x50],ymm0
  411b6f:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  411b75:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  411b7b:	mov    rax,QWORD PTR [r15+0xd8]
  411b82:	mov    rsi,QWORD PTR [rax+0x58]
  411b86:	test   rsi,rsi
  411b89:	je     412086 <__flatcc_fb_gen_c_json_parser@@Base+0x1d96>
  411b8f:	movzx  eax,WORD PTR [rsi+0x10]
  411b93:	cmp    eax,0x1
  411b96:	je     411cfe <__flatcc_fb_gen_c_json_parser@@Base+0x1a0e>
  411b9c:	test   ax,ax
  411b9f:	jne    412086 <__flatcc_fb_gen_c_json_parser@@Base+0x1d96>
  411ba5:	vpxor  xmm0,xmm0,xmm0
  411ba9:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  411bb2:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  411bbb:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  411bc4:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  411bcd:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  411bd3:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  411bd9:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  411bdf:	mov    QWORD PTR [rsp+0x100],0x0
  411beb:	mov    rdi,QWORD PTR [rsi+0x18]
  411bef:	lea    rdx,[rsp+0x20]
  411bf4:	vzeroupper 
  411bf7:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  411bfc:	mov    rax,QWORD PTR [r15+0xd8]
  411c03:	mov    rdx,QWORD PTR [rax+0x110]
  411c0a:	lea    rsi,[rip+0x31beb]        # 4437fc <_IO_stdin_used@@Base+0x147fc>
  411c11:	xor    eax,eax
  411c13:	mov    rdi,r15
  411c16:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411c1b:	add    DWORD PTR [r15+0xf0],0x2
  411c23:	lea    rsi,[rip+0x33ecf]        # 445af9 <_IO_stdin_used@@Base+0x16af9>
  411c2a:	xor    eax,eax
  411c2c:	mov    rdi,r15
  411c2f:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411c34:	mov    eax,DWORD PTR [r15+0xf0]
  411c3b:	test   eax,eax
  411c3d:	je     4129bb <__flatcc_fb_gen_c_json_parser@@Base+0x26cb>
  411c43:	mov    ecx,eax
  411c45:	add    ecx,0xffffffff
  411c48:	mov    DWORD PTR [r15+0xf0],ecx
  411c4f:	je     4129bb <__flatcc_fb_gen_c_json_parser@@Base+0x26cb>
  411c55:	add    eax,0xfffffffe
  411c58:	mov    DWORD PTR [r15+0xf0],eax
  411c5f:	lea    rsi,[rip+0x34fac]        # 446c12 <_IO_stdin_used@@Base+0x17c12>
  411c66:	xor    eax,eax
  411c68:	mov    rdi,r15
  411c6b:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411c70:	add    DWORD PTR [r15+0xf0],0x1
  411c78:	lea    rsi,[rip+0x33ee4]        # 445b63 <_IO_stdin_used@@Base+0x16b63>
  411c7f:	xor    eax,eax
  411c81:	mov    rdi,r15
  411c84:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411c89:	lea    rsi,[rip+0x33ef0]        # 445b80 <_IO_stdin_used@@Base+0x16b80>
  411c90:	xor    eax,eax
  411c92:	mov    rdi,r15
  411c95:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411c9a:	lea    rsi,[rip+0x1f092]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  411ca1:	xor    eax,eax
  411ca3:	mov    rdi,r15
  411ca6:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411cab:	lea    rsi,[rip+0x33ee9]        # 445b9b <_IO_stdin_used@@Base+0x16b9b>
  411cb2:	xor    eax,eax
  411cb4:	mov    rdi,r15
  411cb7:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411cbc:	lea    rsi,[rip+0x33ef3]        # 445bb6 <_IO_stdin_used@@Base+0x16bb6>
  411cc3:	xor    eax,eax
  411cc5:	mov    rdi,r15
  411cc8:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411ccd:	mov    rax,QWORD PTR [r15+0xd8]
  411cd4:	movzx  ecx,WORD PTR [rax+0x20]
  411cd8:	cmp    ecx,0x2
  411cdb:	jne    411ec1 <__flatcc_fb_gen_c_json_parser@@Base+0x1bd1>
  411ce1:	mov    edx,DWORD PTR [rax+0x18]
  411ce4:	mov    rcx,QWORD PTR [rax+0x10]
  411ce8:	lea    rsi,[rip+0x33f02]        # 445bf1 <_IO_stdin_used@@Base+0x16bf1>
  411cef:	xor    eax,eax
  411cf1:	mov    rdi,r15
  411cf4:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411cf9:	jmp    411ed2 <__flatcc_fb_gen_c_json_parser@@Base+0x1be2>
  411cfe:	vpxor  xmm0,xmm0,xmm0
  411d02:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  411d0b:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  411d14:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  411d1d:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  411d26:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  411d2c:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  411d32:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  411d38:	mov    QWORD PTR [rsp+0x100],0x0
  411d44:	mov    rdi,QWORD PTR [rsi+0x18]
  411d48:	lea    rdx,[rsp+0x20]
  411d4d:	vzeroupper 
  411d50:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  411d55:	mov    rax,QWORD PTR [r15+0xd8]
  411d5c:	mov    rdx,QWORD PTR [rax+0x110]
  411d63:	lea    rsi,[rip+0x31a92]        # 4437fc <_IO_stdin_used@@Base+0x147fc>
  411d6a:	xor    eax,eax
  411d6c:	mov    rdi,r15
  411d6f:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411d74:	add    DWORD PTR [r15+0xf0],0x2
  411d7c:	lea    rsi,[rip+0x33d76]        # 445af9 <_IO_stdin_used@@Base+0x16af9>
  411d83:	xor    eax,eax
  411d85:	mov    rdi,r15
  411d88:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411d8d:	mov    eax,DWORD PTR [r15+0xf0]
  411d94:	test   eax,eax
  411d96:	je     4129da <__flatcc_fb_gen_c_json_parser@@Base+0x26ea>
  411d9c:	mov    ecx,eax
  411d9e:	add    ecx,0xffffffff
  411da1:	mov    DWORD PTR [r15+0xf0],ecx
  411da8:	je     4129da <__flatcc_fb_gen_c_json_parser@@Base+0x26ea>
  411dae:	add    eax,0xfffffffe
  411db1:	mov    DWORD PTR [r15+0xf0],eax
  411db8:	lea    rsi,[rip+0x34e53]        # 446c12 <_IO_stdin_used@@Base+0x17c12>
  411dbf:	xor    eax,eax
  411dc1:	mov    rdi,r15
  411dc4:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411dc9:	add    DWORD PTR [r15+0xf0],0x1
  411dd1:	lea    rsi,[rip+0x33f6f]        # 445d47 <_IO_stdin_used@@Base+0x16d47>
  411dd8:	xor    eax,eax
  411dda:	mov    rdi,r15
  411ddd:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411de2:	lea    rsi,[rip+0x33d97]        # 445b80 <_IO_stdin_used@@Base+0x16b80>
  411de9:	xor    eax,eax
  411deb:	mov    rdi,r15
  411dee:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411df3:	lea    rsi,[rip+0x1ef39]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  411dfa:	xor    eax,eax
  411dfc:	mov    rdi,r15
  411dff:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411e04:	lea    rsi,[rip+0x33f57]        # 445d62 <_IO_stdin_used@@Base+0x16d62>
  411e0b:	xor    eax,eax
  411e0d:	mov    rdi,r15
  411e10:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411e15:	lea    rsi,[rip+0x33d9a]        # 445bb6 <_IO_stdin_used@@Base+0x16bb6>
  411e1c:	xor    eax,eax
  411e1e:	mov    rdi,r15
  411e21:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411e26:	mov    rax,QWORD PTR [r15+0xd8]
  411e2d:	movzx  ecx,WORD PTR [rax+0x20]
  411e31:	cmp    ecx,0x2
  411e34:	jne    411f9d <__flatcc_fb_gen_c_json_parser@@Base+0x1cad>
  411e3a:	mov    edx,DWORD PTR [rax+0x18]
  411e3d:	mov    rcx,QWORD PTR [rax+0x10]
  411e41:	lea    rsi,[rip+0x33da9]        # 445bf1 <_IO_stdin_used@@Base+0x16bf1>
  411e48:	xor    eax,eax
  411e4a:	mov    rdi,r15
  411e4d:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411e52:	jmp    411fae <__flatcc_fb_gen_c_json_parser@@Base+0x1cbe>
  411e57:	lea    rsi,[rip+0x4072]        # 415ed0 <__flatcc_fb_gen_c_json_parser@@Base+0x5be0>
  411e5e:	lea    rdx,[rsp+0x20]
  411e63:	mov    rdi,QWORD PTR [rsp+0x220]
  411e6b:	call   41b650 <fb_scope_table_visit@@Base>
  411e70:	mov    rbx,QWORD PTR [rsp+0x38]
  411e75:	movsxd r14,DWORD PTR [rsp+0x24]
  411e7a:	lea    rcx,[rip+0x422f]        # 4160b0 <__flatcc_fb_gen_c_json_parser@@Base+0x5dc0>
  411e81:	mov    edx,0x10
  411e86:	mov    rdi,rbx
  411e89:	mov    rsi,r14
  411e8c:	call   406080 <qsort@plt>
  411e91:	test   r14,r14
  411e94:	jle    4121b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1ec8>
  411e9a:	mov    r8d,r14d
  411e9d:	lea    rcx,[r8-0x1]
  411ea1:	mov    eax,r8d
  411ea4:	and    eax,0x7
  411ea7:	cmp    rcx,0x7
  411eab:	jae    4120e9 <__flatcc_fb_gen_c_json_parser@@Base+0x1df9>
  411eb1:	xor    ecx,ecx
  411eb3:	test   rax,rax
  411eb6:	jne    412185 <__flatcc_fb_gen_c_json_parser@@Base+0x1e95>
  411ebc:	jmp    4121b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1ec8>
  411ec1:	lea    rsi,[rip+0x33d66]        # 445c2e <_IO_stdin_used@@Base+0x16c2e>
  411ec8:	xor    eax,eax
  411eca:	mov    rdi,r15
  411ecd:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411ed2:	lea    rsi,[rip+0x33d8d]        # 445c66 <_IO_stdin_used@@Base+0x16c66>
  411ed9:	lea    rdx,[rsp+0x20]
  411ede:	xor    eax,eax
  411ee0:	mov    rdi,r15
  411ee3:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411ee8:	lea    rsi,[rip+0x33dab]        # 445c9a <_IO_stdin_used@@Base+0x16c9a>
  411eef:	xor    eax,eax
  411ef1:	mov    rdi,r15
  411ef4:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411ef9:	add    DWORD PTR [r15+0xf0],0x1
  411f01:	lea    rsi,[rip+0x33da4]        # 445cac <_IO_stdin_used@@Base+0x16cac>
  411f08:	xor    eax,eax
  411f0a:	mov    rdi,r15
  411f0d:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411f12:	mov    eax,DWORD PTR [r15+0xf0]
  411f19:	test   eax,eax
  411f1b:	je     412a18 <__flatcc_fb_gen_c_json_parser@@Base+0x2728>
  411f21:	add    eax,0xffffffff
  411f24:	mov    DWORD PTR [r15+0xf0],eax
  411f2b:	lea    rsi,[rip+0x2117a]        # 4330ac <_IO_stdin_used@@Base+0x40ac>
  411f32:	xor    eax,eax
  411f34:	mov    rdi,r15
  411f37:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411f3c:	lea    rsi,[rip+0x33d7c]        # 445cbf <_IO_stdin_used@@Base+0x16cbf>
  411f43:	xor    eax,eax
  411f45:	mov    rdi,r15
  411f48:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411f4d:	lea    rsi,[rip+0x33d9f]        # 445cf3 <_IO_stdin_used@@Base+0x16cf3>
  411f54:	xor    eax,eax
  411f56:	mov    rdi,r15
  411f59:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411f5e:	lea    rsi,[rip+0x3218f]        # 4440f4 <_IO_stdin_used@@Base+0x150f4>
  411f65:	xor    eax,eax
  411f67:	mov    rdi,r15
  411f6a:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411f6f:	mov    eax,DWORD PTR [r15+0xf0]
  411f76:	test   eax,eax
  411f78:	jne    41205a <__flatcc_fb_gen_c_json_parser@@Base+0x1d6a>
  411f7e:	lea    rdi,[rip+0x318ec]        # 443871 <_IO_stdin_used@@Base+0x14871>
  411f85:	lea    rsi,[rip+0x318f1]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  411f8c:	lea    rcx,[rip+0x33b91]        # 445b24 <_IO_stdin_used@@Base+0x16b24>
  411f93:	mov    edx,0x65e
  411f98:	call   406100 <__assert_fail@plt>
  411f9d:	lea    rsi,[rip+0x33c8a]        # 445c2e <_IO_stdin_used@@Base+0x16c2e>
  411fa4:	xor    eax,eax
  411fa6:	mov    rdi,r15
  411fa9:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411fae:	lea    rsi,[rip+0x33dc6]        # 445d7b <_IO_stdin_used@@Base+0x16d7b>
  411fb5:	lea    rdx,[rsp+0x20]
  411fba:	xor    eax,eax
  411fbc:	mov    rdi,r15
  411fbf:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411fc4:	lea    rsi,[rip+0x33ccf]        # 445c9a <_IO_stdin_used@@Base+0x16c9a>
  411fcb:	xor    eax,eax
  411fcd:	mov    rdi,r15
  411fd0:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411fd5:	add    DWORD PTR [r15+0xf0],0x1
  411fdd:	lea    rsi,[rip+0x33cc8]        # 445cac <_IO_stdin_used@@Base+0x16cac>
  411fe4:	xor    eax,eax
  411fe6:	mov    rdi,r15
  411fe9:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  411fee:	mov    eax,DWORD PTR [r15+0xf0]
  411ff5:	test   eax,eax
  411ff7:	je     412a37 <__flatcc_fb_gen_c_json_parser@@Base+0x2747>
  411ffd:	add    eax,0xffffffff
  412000:	mov    DWORD PTR [r15+0xf0],eax
  412007:	lea    rsi,[rip+0x2109e]        # 4330ac <_IO_stdin_used@@Base+0x40ac>
  41200e:	xor    eax,eax
  412010:	mov    rdi,r15
  412013:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412018:	lea    rsi,[rip+0x33ca0]        # 445cbf <_IO_stdin_used@@Base+0x16cbf>
  41201f:	xor    eax,eax
  412021:	mov    rdi,r15
  412024:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412029:	lea    rsi,[rip+0x33cc3]        # 445cf3 <_IO_stdin_used@@Base+0x16cf3>
  412030:	xor    eax,eax
  412032:	mov    rdi,r15
  412035:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41203a:	lea    rsi,[rip+0x320b3]        # 4440f4 <_IO_stdin_used@@Base+0x150f4>
  412041:	xor    eax,eax
  412043:	mov    rdi,r15
  412046:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41204b:	mov    eax,DWORD PTR [r15+0xf0]
  412052:	test   eax,eax
  412054:	je     412a56 <__flatcc_fb_gen_c_json_parser@@Base+0x2766>
  41205a:	add    eax,0xffffffff
  41205d:	mov    DWORD PTR [r15+0xf0],eax
  412064:	lea    rsi,[rip+0x21041]        # 4330ac <_IO_stdin_used@@Base+0x40ac>
  41206b:	xor    eax,eax
  41206d:	mov    rdi,r15
  412070:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412075:	lea    rsi,[rip+0x1ecb7]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41207c:	xor    eax,eax
  41207e:	mov    rdi,r15
  412081:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412086:	mov    rax,QWORD PTR [r15+0xe0]
  41208d:	cmp    DWORD PTR [rax+0xac],0x0
  412094:	je     4120b6 <__flatcc_fb_gen_c_json_parser@@Base+0x1dc6>
  412096:	mov    rcx,QWORD PTR [r15+0xd0]
  41209d:	lea    rdi,[rip+0x24a2b]        # 436acf <_IO_stdin_used@@Base+0x7acf>
  4120a4:	mov    esi,0x24
  4120a9:	mov    edx,0x1
  4120ae:	vzeroupper 
  4120b1:	call   406220 <fwrite@plt>
  4120b6:	mov    rax,QWORD PTR [r15+0xd8]
  4120bd:	mov    rdx,QWORD PTR [rax+0x118]
  4120c4:	lea    rsi,[rip+0x33ceb]        # 445db6 <_IO_stdin_used@@Base+0x16db6>
  4120cb:	xor    eax,eax
  4120cd:	mov    rdi,r15
  4120d0:	vzeroupper 
  4120d3:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4120d8:	xor    eax,eax
  4120da:	lea    rsp,[rbp-0x28]
  4120de:	pop    rbx
  4120df:	pop    r12
  4120e1:	pop    r13
  4120e3:	pop    r14
  4120e5:	pop    r15
  4120e7:	pop    rbp
  4120e8:	ret    
  4120e9:	lea    rsi,[rbx+0x70]
  4120ed:	sub    r8,rax
  4120f0:	xor    ecx,ecx
  4120f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4120fc:	nop    DWORD PTR [rax+0x0]
  412100:	mov    rdi,QWORD PTR [rsi-0x70]
  412104:	mov    QWORD PTR [rdi+0xc8],rcx
  41210b:	mov    rdi,QWORD PTR [rsi-0x60]
  41210f:	lea    rdx,[rcx+0x1]
  412113:	mov    QWORD PTR [rdi+0xc8],rdx
  41211a:	mov    rdx,QWORD PTR [rsi-0x50]
  41211e:	lea    rdi,[rcx+0x2]
  412122:	mov    QWORD PTR [rdx+0xc8],rdi
  412129:	mov    rdx,QWORD PTR [rsi-0x40]
  41212d:	lea    rdi,[rcx+0x3]
  412131:	mov    QWORD PTR [rdx+0xc8],rdi
  412138:	mov    rdx,QWORD PTR [rsi-0x30]
  41213c:	lea    rdi,[rcx+0x4]
  412140:	mov    QWORD PTR [rdx+0xc8],rdi
  412147:	mov    rdx,QWORD PTR [rsi-0x20]
  41214b:	lea    rdi,[rcx+0x5]
  41214f:	mov    QWORD PTR [rdx+0xc8],rdi
  412156:	mov    rdx,QWORD PTR [rsi-0x10]
  41215a:	lea    rdi,[rcx+0x6]
  41215e:	mov    QWORD PTR [rdx+0xc8],rdi
  412165:	mov    rdx,QWORD PTR [rsi]
  412168:	lea    rdi,[rcx+0x7]
  41216c:	mov    QWORD PTR [rdx+0xc8],rdi
  412173:	add    rcx,0x8
  412177:	sub    rsi,0xffffffffffffff80
  41217b:	cmp    r8,rcx
  41217e:	jne    412100 <__flatcc_fb_gen_c_json_parser@@Base+0x1e10>
  412180:	test   rax,rax
  412183:	je     4121b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1ec8>
  412185:	mov    rdx,rcx
  412188:	shl    rdx,0x4
  41218c:	add    rbx,rdx
  41218f:	neg    rax
  412192:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41219c:	nop    DWORD PTR [rax+0x0]
  4121a0:	mov    rdx,QWORD PTR [rbx]
  4121a3:	mov    QWORD PTR [rdx+0xc8],rcx
  4121aa:	add    rcx,0x1
  4121ae:	add    rbx,0x10
  4121b2:	add    rax,0x1
  4121b6:	jne    4121a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1eb0>
  4121b8:	mov    rbx,QWORD PTR [rsp+0x40]
  4121bd:	movsxd r14,DWORD PTR [rsp+0x28]
  4121c2:	lea    rcx,[rip+0x3ee7]        # 4160b0 <__flatcc_fb_gen_c_json_parser@@Base+0x5dc0>
  4121c9:	mov    edx,0x10
  4121ce:	mov    rdi,rbx
  4121d1:	mov    rsi,r14
  4121d4:	call   406080 <qsort@plt>
  4121d9:	test   r14,r14
  4121dc:	jle    4122c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1fd8>
  4121e2:	mov    r8d,r14d
  4121e5:	lea    rcx,[r8-0x1]
  4121e9:	mov    eax,r8d
  4121ec:	and    eax,0x7
  4121ef:	cmp    rcx,0x7
  4121f3:	jae    412205 <__flatcc_fb_gen_c_json_parser@@Base+0x1f15>
  4121f5:	xor    ecx,ecx
  4121f7:	test   rax,rax
  4121fa:	jne    412295 <__flatcc_fb_gen_c_json_parser@@Base+0x1fa5>
  412200:	jmp    4122c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1fd8>
  412205:	lea    rsi,[rbx+0x70]
  412209:	sub    r8,rax
  41220c:	xor    ecx,ecx
  41220e:	xchg   ax,ax
  412210:	mov    rdi,QWORD PTR [rsi-0x70]
  412214:	mov    QWORD PTR [rdi+0xc8],rcx
  41221b:	mov    rdi,QWORD PTR [rsi-0x60]
  41221f:	lea    rdx,[rcx+0x1]
  412223:	mov    QWORD PTR [rdi+0xc8],rdx
  41222a:	mov    rdx,QWORD PTR [rsi-0x50]
  41222e:	lea    rdi,[rcx+0x2]
  412232:	mov    QWORD PTR [rdx+0xc8],rdi
  412239:	mov    rdx,QWORD PTR [rsi-0x40]
  41223d:	lea    rdi,[rcx+0x3]
  412241:	mov    QWORD PTR [rdx+0xc8],rdi
  412248:	mov    rdx,QWORD PTR [rsi-0x30]
  41224c:	lea    rdi,[rcx+0x4]
  412250:	mov    QWORD PTR [rdx+0xc8],rdi
  412257:	mov    rdx,QWORD PTR [rsi-0x20]
  41225b:	lea    rdi,[rcx+0x5]
  41225f:	mov    QWORD PTR [rdx+0xc8],rdi
  412266:	mov    rdx,QWORD PTR [rsi-0x10]
  41226a:	lea    rdi,[rcx+0x6]
  41226e:	mov    QWORD PTR [rdx+0xc8],rdi
  412275:	mov    rdx,QWORD PTR [rsi]
  412278:	lea    rdi,[rcx+0x7]
  41227c:	mov    QWORD PTR [rdx+0xc8],rdi
  412283:	add    rcx,0x8
  412287:	sub    rsi,0xffffffffffffff80
  41228b:	cmp    r8,rcx
  41228e:	jne    412210 <__flatcc_fb_gen_c_json_parser@@Base+0x1f20>
  412290:	test   rax,rax
  412293:	je     4122c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1fd8>
  412295:	mov    rdx,rcx
  412298:	shl    rdx,0x4
  41229c:	add    rbx,rdx
  41229f:	neg    rax
  4122a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4122ac:	nop    DWORD PTR [rax+0x0]
  4122b0:	mov    rdx,QWORD PTR [rbx]
  4122b3:	mov    QWORD PTR [rdx+0xc8],rcx
  4122ba:	add    rcx,0x1
  4122be:	add    rbx,0x10
  4122c2:	add    rax,0x1
  4122c6:	jne    4122b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1fc0>
  4122c8:	movsxd rbx,DWORD PTR [rsp+0x28]
  4122cd:	test   rbx,rbx
  4122d0:	je     41234f <__flatcc_fb_gen_c_json_parser@@Base+0x205f>
  4122d2:	mov    rdi,rbx
  4122d5:	shl    rdi,0x5
  4122d9:	call   4061b0 <malloc@plt>
  4122de:	test   rax,rax
  4122e1:	je     41235f <__flatcc_fb_gen_c_json_parser@@Base+0x206f>
  4122e3:	mov    r13,rax
  4122e6:	mov    QWORD PTR [rsp+0x10],rbx
  4122eb:	test   ebx,ebx
  4122ed:	jle    412330 <__flatcc_fb_gen_c_json_parser@@Base+0x2040>
  4122ef:	mov    r12,QWORD PTR [rsp+0x40]
  4122f4:	mov    ebx,0x8
  4122f9:	mov    r14,QWORD PTR [rsp+0x10]
  4122fe:	xchg   ax,ax
  412300:	mov    rdi,QWORD PTR [r12+rbx*1]
  412304:	mov    QWORD PTR [r13+rbx*2-0x10],rdi
  412309:	call   4060d0 <strlen@plt>
  41230e:	mov    DWORD PTR [r13+rbx*2-0x8],eax
  412313:	mov    rax,QWORD PTR [r12+rbx*1-0x8]
  412318:	mov    QWORD PTR [r13+rbx*2+0x0],rax
  41231d:	mov    DWORD PTR [r13+rbx*2+0x8],0x0
  412326:	add    rbx,0x10
  41232a:	add    r14,0xffffffffffffffff
  41232e:	jne    412300 <__flatcc_fb_gen_c_json_parser@@Base+0x2010>
  412330:	lea    rcx,[rip+0x2519]        # 414850 <__flatcc_fb_gen_c_json_parser@@Base+0x4560>
  412337:	mov    edx,0x20
  41233c:	mov    rdi,r13
  41233f:	mov    rsi,QWORD PTR [rsp+0x10]
  412344:	call   406080 <qsort@plt>
  412349:	mov    ebx,DWORD PTR [rsp+0x28]
  41234d:	jmp    412362 <__flatcc_fb_gen_c_json_parser@@Base+0x2072>
  41234f:	mov    QWORD PTR [rsp+0x120],0x0
  41235b:	xor    ebx,ebx
  41235d:	jmp    412377 <__flatcc_fb_gen_c_json_parser@@Base+0x2087>
  41235f:	xor    r13d,r13d
  412362:	mov    QWORD PTR [rsp+0x120],r13
  41236a:	test   ebx,ebx
  41236c:	jle    412377 <__flatcc_fb_gen_c_json_parser@@Base+0x2087>
  41236e:	test   r13,r13
  412371:	je     412a75 <__flatcc_fb_gen_c_json_parser@@Base+0x2785>
  412377:	mov    QWORD PTR [rsp+0x138],0x0
  412383:	mov    DWORD PTR [rsp+0x140],0x4
  41238e:	lea    rax,[rip+0x38eb]        # 415c80 <__flatcc_fb_gen_c_json_parser@@Base+0x5990>
  412395:	mov    QWORD PTR [rsp+0x128],rax
  41239d:	lea    rax,[rip+0x3a1c]        # 415dc0 <__flatcc_fb_gen_c_json_parser@@Base+0x5ad0>
  4123a4:	mov    QWORD PTR [rsp+0x130],rax
  4123ac:	mov    rax,QWORD PTR [r15+0xd8]
  4123b3:	mov    rdx,QWORD PTR [rax+0x110]
  4123ba:	lea    rsi,[rip+0x31839]        # 443bfa <_IO_stdin_used@@Base+0x14bfa>
  4123c1:	xor    eax,eax
  4123c3:	mov    rdi,r15
  4123c6:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4123cb:	add    DWORD PTR [r15+0xf0],0x2
  4123d3:	lea    rsi,[rip+0x33533]        # 44590d <_IO_stdin_used@@Base+0x1690d>
  4123da:	xor    eax,eax
  4123dc:	mov    rdi,r15
  4123df:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4123e4:	mov    eax,DWORD PTR [r15+0xf0]
  4123eb:	test   eax,eax
  4123ed:	je     4129f9 <__flatcc_fb_gen_c_json_parser@@Base+0x2709>
  4123f3:	mov    ecx,eax
  4123f5:	add    ecx,0xffffffff
  4123f8:	mov    DWORD PTR [r15+0xf0],ecx
  4123ff:	je     4129f9 <__flatcc_fb_gen_c_json_parser@@Base+0x2709>
  412405:	add    eax,0xfffffffe
  412408:	mov    DWORD PTR [r15+0xf0],eax
  41240f:	lea    rsi,[rip+0x347fc]        # 446c12 <_IO_stdin_used@@Base+0x17c12>
  412416:	xor    eax,eax
  412418:	mov    rdi,r15
  41241b:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412420:	add    DWORD PTR [r15+0xf0],0x1
  412428:	test   ebx,ebx
  41242a:	je     4124da <__flatcc_fb_gen_c_json_parser@@Base+0x21ea>
  412430:	lea    rsi,[rip+0x31df4]        # 44422b <_IO_stdin_used@@Base+0x1522b>
  412437:	xor    eax,eax
  412439:	mov    rdi,r15
  41243c:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412441:	lea    rsi,[rip+0x31e00]        # 444248 <_IO_stdin_used@@Base+0x15248>
  412448:	xor    eax,eax
  41244a:	mov    rdi,r15
  41244d:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412452:	lea    rsi,[rip+0x31e01]        # 44425a <_IO_stdin_used@@Base+0x1525a>
  412459:	xor    eax,eax
  41245b:	mov    rdi,r15
  41245e:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412463:	lea    rsi,[rip+0x1e8c9]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41246a:	xor    eax,eax
  41246c:	mov    rdi,r15
  41246f:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412474:	lea    rsi,[rip+0x31deb]        # 444266 <_IO_stdin_used@@Base+0x15266>
  41247b:	xor    eax,eax
  41247d:	mov    rdi,r15
  412480:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412485:	add    ebx,0xffffffff
  412488:	lea    rsi,[rsp+0x120]
  412490:	xor    edx,edx
  412492:	xor    r8d,r8d
  412495:	mov    rdi,r15
  412498:	mov    ecx,ebx
  41249a:	call   413640 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  41249f:	lea    rsi,[rip+0x31b65]        # 44400b <_IO_stdin_used@@Base+0x1500b>
  4124a6:	xor    eax,eax
  4124a8:	mov    rdi,r15
  4124ab:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4124b0:	mov    eax,DWORD PTR [r15+0xf0]
  4124b7:	test   eax,eax
  4124b9:	jne    41250b <__flatcc_fb_gen_c_json_parser@@Base+0x221b>
  4124bb:	lea    rdi,[rip+0x313af]        # 443871 <_IO_stdin_used@@Base+0x14871>
  4124c2:	lea    rsi,[rip+0x313b4]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  4124c9:	lea    rcx,[rip+0x335c5]        # 445a95 <_IO_stdin_used@@Base+0x16a95>
  4124d0:	mov    edx,0x4c3
  4124d5:	call   406100 <__assert_fail@plt>
  4124da:	lea    rsi,[rip+0x335df]        # 445ac0 <_IO_stdin_used@@Base+0x16ac0>
  4124e1:	xor    eax,eax
  4124e3:	mov    rdi,r15
  4124e6:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4124eb:	lea    rsi,[rip+0x31d1c]        # 44420e <_IO_stdin_used@@Base+0x1520e>
  4124f2:	xor    eax,eax
  4124f4:	mov    rdi,r15
  4124f7:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4124fc:	mov    eax,DWORD PTR [r15+0xf0]
  412503:	test   eax,eax
  412505:	je     412ac8 <__flatcc_fb_gen_c_json_parser@@Base+0x27d8>
  41250b:	add    eax,0xffffffff
  41250e:	mov    DWORD PTR [r15+0xf0],eax
  412515:	lea    rsi,[rip+0x20b90]        # 4330ac <_IO_stdin_used@@Base+0x40ac>
  41251c:	xor    eax,eax
  41251e:	mov    rdi,r15
  412521:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412526:	lea    rsi,[rip+0x1e806]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41252d:	xor    eax,eax
  41252f:	mov    rdi,r15
  412532:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412537:	mov    rdi,QWORD PTR [rsp+0x120]
  41253f:	test   rdi,rdi
  412542:	je     412549 <__flatcc_fb_gen_c_json_parser@@Base+0x2259>
  412544:	call   406040 <free@plt>
  412549:	mov    rdi,QWORD PTR [rsp+0x38]
  41254e:	test   rdi,rdi
  412551:	je     412558 <__flatcc_fb_gen_c_json_parser@@Base+0x2268>
  412553:	call   406040 <free@plt>
  412558:	mov    rdi,QWORD PTR [rsp+0x40]
  41255d:	test   rdi,rdi
  412560:	jne    411b51 <__flatcc_fb_gen_c_json_parser@@Base+0x1861>
  412566:	jmp    411b56 <__flatcc_fb_gen_c_json_parser@@Base+0x1866>
  41256b:	mov    rax,QWORD PTR [rip+0x40a86]        # 452ff8 <stderr@GLIBC_2.2.5>
  412572:	mov    rdi,QWORD PTR [rax]
  412575:	lea    rsi,[rip+0x1e69c]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  41257c:	lea    rbx,[rip+0x312fa]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  412583:	lea    r8,[rip+0x31965]        # 443eef <_IO_stdin_used@@Base+0x14eef>
  41258a:	mov    ecx,0x5ff
  41258f:	xor    eax,eax
  412591:	mov    rdx,rbx
  412594:	call   406180 <fprintf@plt>
  412599:	lea    rdi,[rip+0x2f5df]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  4125a0:	lea    rcx,[rip+0x31819]        # 443dc0 <_IO_stdin_used@@Base+0x14dc0>
  4125a7:	mov    edx,0x5ff
  4125ac:	mov    rsi,rbx
  4125af:	call   406100 <__assert_fail@plt>
  4125b4:	mov    rax,QWORD PTR [rip+0x40a3d]        # 452ff8 <stderr@GLIBC_2.2.5>
  4125bb:	mov    rdi,QWORD PTR [rax]
  4125be:	lea    rsi,[rip+0x1e653]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  4125c5:	lea    rbx,[rip+0x312b1]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  4125cc:	lea    r8,[rip+0x318a0]        # 443e73 <_IO_stdin_used@@Base+0x14e73>
  4125d3:	mov    ecx,0x5f2
  4125d8:	xor    eax,eax
  4125da:	mov    rdx,rbx
  4125dd:	call   406180 <fprintf@plt>
  4125e2:	lea    rdi,[rip+0x2f596]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  4125e9:	lea    rcx,[rip+0x317d0]        # 443dc0 <_IO_stdin_used@@Base+0x14dc0>
  4125f0:	mov    edx,0x5f2
  4125f5:	mov    rsi,rbx
  4125f8:	call   406100 <__assert_fail@plt>
  4125fd:	lea    rdi,[rip+0x3126d]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412604:	lea    rsi,[rip+0x31272]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  41260b:	lea    rcx,[rip+0x317ae]        # 443dc0 <_IO_stdin_used@@Base+0x14dc0>
  412612:	mov    edx,0x5fc
  412617:	call   406100 <__assert_fail@plt>
  41261c:	lea    rdi,[rip+0x3124e]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412623:	lea    rsi,[rip+0x31253]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  41262a:	lea    rcx,[rip+0x3178f]        # 443dc0 <_IO_stdin_used@@Base+0x14dc0>
  412631:	mov    edx,0x5f6
  412636:	call   406100 <__assert_fail@plt>
  41263b:	lea    rdi,[rip+0x3122f]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412642:	lea    rsi,[rip+0x31234]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  412649:	lea    rcx,[rip+0x3129c]        # 4438ec <_IO_stdin_used@@Base+0x148ec>
  412650:	mov    edx,0x6d3
  412655:	call   406100 <__assert_fail@plt>
  41265a:	lea    rdi,[rip+0x31210]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412661:	lea    rsi,[rip+0x31215]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  412668:	lea    rcx,[rip+0x3127d]        # 4438ec <_IO_stdin_used@@Base+0x148ec>
  41266f:	mov    edx,0x6c3
  412674:	call   406100 <__assert_fail@plt>
  412679:	lea    rdi,[rip+0x247f3]        # 436e73 <_IO_stdin_used@@Base+0x7e73>
  412680:	lea    rsi,[rip+0x311f6]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  412687:	lea    rcx,[rip+0x32eac]        # 44553a <_IO_stdin_used@@Base+0x1653a>
  41268e:	mov    edx,0x56e
  412693:	vzeroupper 
  412696:	call   406100 <__assert_fail@plt>
  41269b:	mov    rax,QWORD PTR [rip+0x40956]        # 452ff8 <stderr@GLIBC_2.2.5>
  4126a2:	mov    rdi,QWORD PTR [rax]
  4126a5:	lea    rsi,[rip+0x1e56c]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  4126ac:	lea    rbx,[rip+0x311ca]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  4126b3:	lea    r8,[rip+0x31abc]        # 444176 <_IO_stdin_used@@Base+0x15176>
  4126ba:	mov    ecx,0x570
  4126bf:	xor    eax,eax
  4126c1:	mov    rdx,rbx
  4126c4:	call   406180 <fprintf@plt>
  4126c9:	lea    rdi,[rip+0x2f4af]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  4126d0:	lea    rcx,[rip+0x32e63]        # 44553a <_IO_stdin_used@@Base+0x1653a>
  4126d7:	mov    edx,0x570
  4126dc:	mov    rsi,rbx
  4126df:	call   406100 <__assert_fail@plt>
  4126e4:	lea    rdi,[rip+0x24e67]        # 437552 <_IO_stdin_used@@Base+0x8552>
  4126eb:	lea    rsi,[rip+0x3118b]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  4126f2:	lea    rcx,[rip+0x31f54]        # 44464d <_IO_stdin_used@@Base+0x1564d>
  4126f9:	mov    edx,0x515
  4126fe:	vzeroupper 
  412701:	call   406100 <__assert_fail@plt>
  412706:	mov    rax,QWORD PTR [rip+0x408eb]        # 452ff8 <stderr@GLIBC_2.2.5>
  41270d:	mov    rdi,QWORD PTR [rax]
  412710:	lea    rsi,[rip+0x1e501]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  412717:	lea    rbx,[rip+0x3115f]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  41271e:	lea    r8,[rip+0x31a51]        # 444176 <_IO_stdin_used@@Base+0x15176>
  412725:	mov    ecx,0x517
  41272a:	xor    eax,eax
  41272c:	mov    rdx,rbx
  41272f:	call   406180 <fprintf@plt>
  412734:	lea    rdi,[rip+0x2f444]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  41273b:	lea    rcx,[rip+0x31f0b]        # 44464d <_IO_stdin_used@@Base+0x1564d>
  412742:	mov    edx,0x517
  412747:	mov    rsi,rbx
  41274a:	call   406100 <__assert_fail@plt>
  41274f:	lea    rdi,[rip+0x3111b]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412756:	lea    rsi,[rip+0x31120]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  41275d:	lea    rcx,[rip+0x3165c]        # 443dc0 <_IO_stdin_used@@Base+0x14dc0>
  412764:	mov    edx,0x5df
  412769:	call   406100 <__assert_fail@plt>
  41276e:	lea    rdi,[rip+0x310fc]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412775:	lea    rsi,[rip+0x31101]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  41277c:	lea    rcx,[rip+0x3163d]        # 443dc0 <_IO_stdin_used@@Base+0x14dc0>
  412783:	mov    edx,0x607
  412788:	call   406100 <__assert_fail@plt>
  41278d:	lea    rdi,[rip+0x310dd]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412794:	lea    rsi,[rip+0x310e2]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  41279b:	lea    rcx,[rip+0x3161e]        # 443dc0 <_IO_stdin_used@@Base+0x14dc0>
  4127a2:	mov    edx,0x609
  4127a7:	call   406100 <__assert_fail@plt>
  4127ac:	lea    rdi,[rip+0x310be]        # 443871 <_IO_stdin_used@@Base+0x14871>
  4127b3:	lea    rsi,[rip+0x310c3]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  4127ba:	lea    rcx,[rip+0x315ff]        # 443dc0 <_IO_stdin_used@@Base+0x14dc0>
  4127c1:	mov    edx,0x60a
  4127c6:	call   406100 <__assert_fail@plt>
  4127cb:	lea    rdi,[rip+0x3109f]        # 443871 <_IO_stdin_used@@Base+0x14871>
  4127d2:	lea    rsi,[rip+0x310a4]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  4127d9:	lea    rcx,[rip+0x315e0]        # 443dc0 <_IO_stdin_used@@Base+0x14dc0>
  4127e0:	mov    edx,0x60e
  4127e5:	call   406100 <__assert_fail@plt>
  4127ea:	lea    rdi,[rip+0x31080]        # 443871 <_IO_stdin_used@@Base+0x14871>
  4127f1:	lea    rsi,[rip+0x31085]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  4127f8:	lea    rcx,[rip+0x315c1]        # 443dc0 <_IO_stdin_used@@Base+0x14dc0>
  4127ff:	mov    edx,0x610
  412804:	call   406100 <__assert_fail@plt>
  412809:	lea    rdi,[rip+0x31061]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412810:	lea    rsi,[rip+0x31066]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  412817:	lea    rcx,[rip+0x318e0]        # 4440fe <_IO_stdin_used@@Base+0x150fe>
  41281e:	mov    edx,0x62e
  412823:	call   406100 <__assert_fail@plt>
  412828:	lea    rdi,[rip+0x31042]        # 443871 <_IO_stdin_used@@Base+0x14871>
  41282f:	lea    rsi,[rip+0x31047]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  412836:	lea    rcx,[rip+0x318c1]        # 4440fe <_IO_stdin_used@@Base+0x150fe>
  41283d:	mov    edx,0x62f
  412842:	call   406100 <__assert_fail@plt>
  412847:	lea    rdi,[rip+0x31023]        # 443871 <_IO_stdin_used@@Base+0x14871>
  41284e:	lea    rsi,[rip+0x31028]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  412855:	lea    rcx,[rip+0x31df1]        # 44464d <_IO_stdin_used@@Base+0x1564d>
  41285c:	mov    edx,0x536
  412861:	call   406100 <__assert_fail@plt>
  412866:	lea    rdi,[rip+0x31004]        # 443871 <_IO_stdin_used@@Base+0x14871>
  41286d:	lea    rsi,[rip+0x31009]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  412874:	lea    rcx,[rip+0x31dd2]        # 44464d <_IO_stdin_used@@Base+0x1564d>
  41287b:	mov    edx,0x53f
  412880:	call   406100 <__assert_fail@plt>
  412885:	lea    rdi,[rip+0x24cc6]        # 437552 <_IO_stdin_used@@Base+0x8552>
  41288c:	lea    rsi,[rip+0x30fea]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  412893:	lea    rcx,[rip+0x32a51]        # 4452eb <_IO_stdin_used@@Base+0x162eb>
  41289a:	mov    edx,0x549
  41289f:	call   406100 <__assert_fail@plt>
  4128a4:	lea    rdi,[rip+0x30fc6]        # 443871 <_IO_stdin_used@@Base+0x14871>
  4128ab:	lea    rsi,[rip+0x30fcb]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  4128b2:	lea    rcx,[rip+0x32a32]        # 4452eb <_IO_stdin_used@@Base+0x162eb>
  4128b9:	mov    edx,0x55a
  4128be:	call   406100 <__assert_fail@plt>
  4128c3:	lea    rdi,[rip+0x30fa7]        # 443871 <_IO_stdin_used@@Base+0x14871>
  4128ca:	lea    rsi,[rip+0x30fac]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  4128d1:	lea    rcx,[rip+0x32a13]        # 4452eb <_IO_stdin_used@@Base+0x162eb>
  4128d8:	mov    edx,0x560
  4128dd:	call   406100 <__assert_fail@plt>
  4128e2:	lea    rdi,[rip+0x30f88]        # 443871 <_IO_stdin_used@@Base+0x14871>
  4128e9:	lea    rsi,[rip+0x30f8d]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  4128f0:	lea    rcx,[rip+0x32c43]        # 44553a <_IO_stdin_used@@Base+0x1653a>
  4128f7:	mov    edx,0x59e
  4128fc:	call   406100 <__assert_fail@plt>
  412901:	lea    rdi,[rip+0x30f69]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412908:	lea    rsi,[rip+0x30f6e]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  41290f:	lea    rcx,[rip+0x32c24]        # 44553a <_IO_stdin_used@@Base+0x1653a>
  412916:	mov    edx,0x5c1
  41291b:	call   406100 <__assert_fail@plt>
  412920:	lea    rdi,[rip+0x30f4a]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412927:	lea    rsi,[rip+0x30f4f]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  41292e:	lea    rcx,[rip+0x32c05]        # 44553a <_IO_stdin_used@@Base+0x1653a>
  412935:	mov    edx,0x5c7
  41293a:	call   406100 <__assert_fail@plt>
  41293f:	lea    rdi,[rip+0x30f2b]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412946:	lea    rsi,[rip+0x30f30]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  41294d:	lea    rcx,[rip+0x30f98]        # 4438ec <_IO_stdin_used@@Base+0x148ec>
  412954:	mov    edx,0x6db
  412959:	call   406100 <__assert_fail@plt>
  41295e:	lea    rdi,[rip+0x30f0c]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412965:	lea    rsi,[rip+0x30f11]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  41296c:	lea    rcx,[rip+0x32bc7]        # 44553a <_IO_stdin_used@@Base+0x1653a>
  412973:	mov    edx,0x5b2
  412978:	call   406100 <__assert_fail@plt>
  41297d:	lea    rdi,[rip+0x30eed]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412984:	lea    rsi,[rip+0x30ef2]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  41298b:	lea    rcx,[rip+0x32ba8]        # 44553a <_IO_stdin_used@@Base+0x1653a>
  412992:	mov    edx,0x5b5
  412997:	call   406100 <__assert_fail@plt>
  41299c:	lea    rdi,[rip+0x30ece]        # 443871 <_IO_stdin_used@@Base+0x14871>
  4129a3:	lea    rsi,[rip+0x30ed3]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  4129aa:	lea    rcx,[rip+0x30f3b]        # 4438ec <_IO_stdin_used@@Base+0x148ec>
  4129b1:	mov    edx,0x6b4
  4129b6:	call   406100 <__assert_fail@plt>
  4129bb:	lea    rdi,[rip+0x30eaf]        # 443871 <_IO_stdin_used@@Base+0x14871>
  4129c2:	lea    rsi,[rip+0x30eb4]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  4129c9:	lea    rcx,[rip+0x33154]        # 445b24 <_IO_stdin_used@@Base+0x16b24>
  4129d0:	mov    edx,0x64a
  4129d5:	call   406100 <__assert_fail@plt>
  4129da:	lea    rdi,[rip+0x30e90]        # 443871 <_IO_stdin_used@@Base+0x14871>
  4129e1:	lea    rsi,[rip+0x30e95]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  4129e8:	lea    rcx,[rip+0x33318]        # 445d07 <_IO_stdin_used@@Base+0x16d07>
  4129ef:	mov    edx,0x66d
  4129f4:	call   406100 <__assert_fail@plt>
  4129f9:	lea    rdi,[rip+0x30e71]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412a00:	lea    rsi,[rip+0x30e76]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  412a07:	lea    rcx,[rip+0x33087]        # 445a95 <_IO_stdin_used@@Base+0x16a95>
  412a0e:	mov    edx,0x4b5
  412a13:	call   406100 <__assert_fail@plt>
  412a18:	lea    rdi,[rip+0x30e52]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412a1f:	lea    rsi,[rip+0x30e57]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  412a26:	lea    rcx,[rip+0x330f7]        # 445b24 <_IO_stdin_used@@Base+0x16b24>
  412a2d:	mov    edx,0x65a
  412a32:	call   406100 <__assert_fail@plt>
  412a37:	lea    rdi,[rip+0x30e33]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412a3e:	lea    rsi,[rip+0x30e38]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  412a45:	lea    rcx,[rip+0x332bb]        # 445d07 <_IO_stdin_used@@Base+0x16d07>
  412a4c:	mov    edx,0x67d
  412a51:	call   406100 <__assert_fail@plt>
  412a56:	lea    rdi,[rip+0x30e14]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412a5d:	lea    rsi,[rip+0x30e19]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  412a64:	lea    rcx,[rip+0x3329c]        # 445d07 <_IO_stdin_used@@Base+0x16d07>
  412a6b:	mov    edx,0x681
  412a70:	call   406100 <__assert_fail@plt>
  412a75:	lea    rdi,[rsp+0x20]
  412a7a:	call   415e60 <__flatcc_fb_gen_c_json_parser@@Base+0x5b70>
  412a7f:	mov    rax,QWORD PTR [rip+0x40572]        # 452ff8 <stderr@GLIBC_2.2.5>
  412a86:	mov    rdi,QWORD PTR [rax]
  412a89:	lea    rsi,[rip+0x1e188]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  412a90:	lea    rbx,[rip+0x30de6]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  412a97:	lea    r8,[rip+0x316d8]        # 444176 <_IO_stdin_used@@Base+0x15176>
  412a9e:	mov    ecx,0x4aa
  412aa3:	xor    eax,eax
  412aa5:	mov    rdx,rbx
  412aa8:	call   406180 <fprintf@plt>
  412aad:	lea    rdi,[rip+0x2f0cb]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  412ab4:	lea    rcx,[rip+0x32fda]        # 445a95 <_IO_stdin_used@@Base+0x16a95>
  412abb:	mov    edx,0x4aa
  412ac0:	mov    rsi,rbx
  412ac3:	call   406100 <__assert_fail@plt>
  412ac8:	lea    rdi,[rip+0x30da2]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412acf:	lea    rsi,[rip+0x30da7]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  412ad6:	lea    rcx,[rip+0x32fb8]        # 445a95 <_IO_stdin_used@@Base+0x16a95>
  412add:	mov    edx,0x4ba
  412ae2:	call   406100 <__assert_fail@plt>
  412ae7:	nop    WORD PTR [rax+rax*1+0x0]
  412af0:	push   rbp
  412af1:	push   r15
  412af3:	push   r14
  412af5:	push   r13
  412af7:	push   r12
  412af9:	push   rbx
  412afa:	sub    rsp,0xe8
  412b01:	mov    rbp,rsi
  412b04:	mov    rbx,rdi
  412b07:	test   al,al
  412b09:	je     412b4d <__flatcc_fb_gen_c_json_parser@@Base+0x285d>
  412b0b:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  412b11:	vmovaps XMMWORD PTR [rsp+0x70],xmm1
  412b17:	vmovaps XMMWORD PTR [rsp+0x80],xmm2
  412b20:	vmovaps XMMWORD PTR [rsp+0x90],xmm3
  412b29:	vmovaps XMMWORD PTR [rsp+0xa0],xmm4
  412b32:	vmovaps XMMWORD PTR [rsp+0xb0],xmm5
  412b3b:	vmovaps XMMWORD PTR [rsp+0xc0],xmm6
  412b44:	vmovaps XMMWORD PTR [rsp+0xd0],xmm7
  412b4d:	mov    QWORD PTR [rsp+0x58],r9
  412b52:	mov    QWORD PTR [rsp+0x50],r8
  412b57:	mov    QWORD PTR [rsp+0x48],rcx
  412b5c:	mov    QWORD PTR [rsp+0x40],rdx
  412b61:	mov    rax,QWORD PTR [rbx+0xe0]
  412b68:	mov    r15d,DWORD PTR [rax+0xd0]
  412b6f:	imul   r15d,DWORD PTR [rbx+0xf0]
  412b77:	cmp    BYTE PTR [rip+0x405c2],0x0        # 453140 <__bss_start@@Base+0x10>
  412b7e:	je     412c64 <__flatcc_fb_gen_c_json_parser@@Base+0x2974>
  412b84:	cmp    BYTE PTR [rbp+0x0],0x0
  412b88:	je     412c86 <__flatcc_fb_gen_c_json_parser@@Base+0x2996>
  412b8e:	mov    rdi,QWORD PTR [rbx+0xd0]
  412b95:	lea    rbx,[rbx+0xd0]
  412b9c:	cmp    r15d,0x41
  412ba0:	jl     412c11 <__flatcc_fb_gen_c_json_parser@@Base+0x2921>
  412ba2:	mov    QWORD PTR [rsp+0x8],rbp
  412ba7:	mov    eax,r15d
  412baa:	not    eax
  412bac:	cmp    eax,0xffffff7e
  412bb1:	mov    ecx,0xffffff7f
  412bb6:	cmovg  ecx,eax
  412bb9:	lea    ebp,[rcx+r15*1]
  412bbd:	add    ebp,0x40
  412bc0:	and    ebp,0xffffffc0
  412bc3:	lea    r14d,[r15+0x40]
  412bc7:	lea    r12,[rip+0x2efc1]        # 441b8f <_IO_stdin_used@@Base+0x12b8f>
  412bce:	lea    r13,[rip+0x4056b]        # 453140 <__bss_start@@Base+0x10>
  412bd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412bdf:	nop
  412be0:	mov    edx,0x40
  412be5:	xor    eax,eax
  412be7:	mov    rsi,r12
  412bea:	mov    rcx,r13
  412bed:	vzeroupper 
  412bf0:	call   406180 <fprintf@plt>
  412bf5:	mov    rdi,QWORD PTR [rbx]
  412bf8:	add    r14d,0xffffffc0
  412bfc:	cmp    r14d,0x80
  412c03:	jg     412be0 <__flatcc_fb_gen_c_json_parser@@Base+0x28f0>
  412c05:	add    r15d,0xffffffc0
  412c09:	sub    r15d,ebp
  412c0c:	mov    rbp,QWORD PTR [rsp+0x8]
  412c11:	lea    rsi,[rip+0x2ef77]        # 441b8f <_IO_stdin_used@@Base+0x12b8f>
  412c18:	lea    rcx,[rip+0x40521]        # 453140 <__bss_start@@Base+0x10>
  412c1f:	xor    eax,eax
  412c21:	mov    edx,r15d
  412c24:	vzeroupper 
  412c27:	call   406180 <fprintf@plt>
  412c2c:	lea    rax,[rsp+0x30]
  412c31:	mov    QWORD PTR [rsp+0x20],rax
  412c36:	lea    rax,[rsp+0x120]
  412c3e:	mov    QWORD PTR [rsp+0x18],rax
  412c43:	movabs rax,0x3000000010
  412c4d:	mov    QWORD PTR [rsp+0x10],rax
  412c52:	mov    rdi,QWORD PTR [rbx]
  412c55:	lea    rdx,[rsp+0x10]
  412c5a:	mov    rsi,rbp
  412c5d:	call   4061f0 <vfprintf@plt>
  412c62:	jmp    412c8d <__flatcc_fb_gen_c_json_parser@@Base+0x299d>
  412c64:	vmovaps ymm0,YMMWORD PTR [rip+0x30834]        # 4434a0 <_IO_stdin_used@@Base+0x144a0>
  412c6c:	vmovups YMMWORD PTR [rip+0x404ec],ymm0        # 453160 <__bss_start@@Base+0x30>
  412c74:	vmovups YMMWORD PTR [rip+0x404c4],ymm0        # 453140 <__bss_start@@Base+0x10>
  412c7c:	cmp    BYTE PTR [rbp+0x0],0x0
  412c80:	jne    412b8e <__flatcc_fb_gen_c_json_parser@@Base+0x289e>
  412c86:	add    rbx,0xd0
  412c8d:	mov    rsi,QWORD PTR [rbx]
  412c90:	mov    edi,0xa
  412c95:	vzeroupper 
  412c98:	call   406120 <fputc@plt>
  412c9d:	add    rsp,0xe8
  412ca4:	pop    rbx
  412ca5:	pop    r12
  412ca7:	pop    r13
  412ca9:	pop    r14
  412cab:	pop    r15
  412cad:	pop    rbp
  412cae:	ret    
  412caf:	nop
  412cb0:	push   r14
  412cb2:	push   rbx
  412cb3:	sub    rsp,0xd8
  412cba:	mov    rbx,rdi
  412cbd:	mov    r14,rsp
  412cc0:	mov    rdi,rsi
  412cc3:	mov    rsi,r14
  412cc6:	call   408110 <__flatcc_fb_copy_scope@@Base>
  412ccb:	mov    rax,QWORD PTR [rbx+0xd8]
  412cd2:	mov    rdx,QWORD PTR [rax+0x110]
  412cd9:	lea    rsi,[rip+0x30f85]        # 443c65 <_IO_stdin_used@@Base+0x14c65>
  412ce0:	xor    eax,eax
  412ce2:	mov    rdi,rbx
  412ce5:	mov    rcx,r14
  412ce8:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412ced:	lea    rsi,[rip+0x30d4c]        # 443a40 <_IO_stdin_used@@Base+0x14a40>
  412cf4:	xor    eax,eax
  412cf6:	mov    rdi,rbx
  412cf9:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412cfe:	add    rsp,0xd8
  412d05:	pop    rbx
  412d06:	pop    r14
  412d08:	ret    
  412d09:	nop    DWORD PTR [rax+0x0]
  412d10:	push   rbp
  412d11:	mov    rbp,rsp
  412d14:	push   r15
  412d16:	push   r14
  412d18:	push   r12
  412d1a:	push   rbx
  412d1b:	and    rsp,0xffffffffffffffe0
  412d1f:	sub    rsp,0x160
  412d26:	mov    DWORD PTR [rsp+0x1c],0x0
  412d2e:	vxorps xmm0,xmm0,xmm0
  412d32:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  412d38:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  412d3e:	mov    eax,DWORD PTR [rsi+0x10]
  412d41:	add    eax,0xfffffffd
  412d44:	movzx  eax,ax
  412d47:	cmp    eax,0x2
  412d4a:	jae    412fd2 <__flatcc_fb_gen_c_json_parser@@Base+0x2ce2>
  412d50:	mov    rbx,rsi
  412d53:	mov    r15,rdi
  412d56:	lea    rsi,[rsp+0x1c]
  412d5b:	mov    rdi,rbx
  412d5e:	vzeroupper 
  412d61:	call   413390 <__flatcc_fb_gen_c_json_parser@@Base+0x30a0>
  412d66:	mov    QWORD PTR [rsp+0x20],rax
  412d6b:	mov    r14d,DWORD PTR [rsp+0x1c]
  412d70:	test   rax,rax
  412d73:	jne    412d7e <__flatcc_fb_gen_c_json_parser@@Base+0x2a8e>
  412d75:	test   r14d,r14d
  412d78:	jg     412ff4 <__flatcc_fb_gen_c_json_parser@@Base+0x2d04>
  412d7e:	mov    QWORD PTR [rsp+0x38],rbx
  412d83:	mov    DWORD PTR [rsp+0x40],0x2
  412d8b:	lea    rax,[rip+0x78e]        # 413520 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  412d92:	mov    QWORD PTR [rsp+0x28],rax
  412d97:	lea    rax,[rip+0x892]        # 413630 <__flatcc_fb_gen_c_json_parser@@Base+0x3340>
  412d9e:	mov    QWORD PTR [rsp+0x30],rax
  412da3:	vxorps xmm0,xmm0,xmm0
  412da7:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  412db0:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  412db9:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  412dc2:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  412dcb:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  412dd4:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  412ddd:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  412de3:	mov    QWORD PTR [rsp+0x140],0x0
  412def:	mov    rdi,QWORD PTR [rbx+0x18]
  412df3:	lea    r12,[rsp+0x60]
  412df8:	mov    rsi,rbx
  412dfb:	mov    rdx,r12
  412dfe:	vzeroupper 
  412e01:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  412e06:	lea    rsi,[rip+0x30bd0]        # 4439dd <_IO_stdin_used@@Base+0x149dd>
  412e0d:	xor    eax,eax
  412e0f:	mov    rdi,r15
  412e12:	mov    rdx,r12
  412e15:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412e1a:	add    DWORD PTR [r15+0xf0],0x2
  412e22:	lea    rsi,[rip+0x31389]        # 4441b2 <_IO_stdin_used@@Base+0x151b2>
  412e29:	xor    eax,eax
  412e2b:	mov    rdi,r15
  412e2e:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412e33:	mov    eax,DWORD PTR [r15+0xf0]
  412e3a:	test   eax,eax
  412e3c:	je     412fb3 <__flatcc_fb_gen_c_json_parser@@Base+0x2cc3>
  412e42:	mov    ecx,eax
  412e44:	add    ecx,0xffffffff
  412e47:	mov    DWORD PTR [r15+0xf0],ecx
  412e4e:	je     412fb3 <__flatcc_fb_gen_c_json_parser@@Base+0x2cc3>
  412e54:	add    eax,0xfffffffe
  412e57:	mov    DWORD PTR [r15+0xf0],eax
  412e5e:	lea    rsi,[rip+0x33dad]        # 446c12 <_IO_stdin_used@@Base+0x17c12>
  412e65:	xor    eax,eax
  412e67:	mov    rdi,r15
  412e6a:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412e6f:	add    DWORD PTR [r15+0xf0],0x1
  412e77:	test   r14d,r14d
  412e7a:	je     412f29 <__flatcc_fb_gen_c_json_parser@@Base+0x2c39>
  412e80:	lea    rsi,[rip+0x313a4]        # 44422b <_IO_stdin_used@@Base+0x1522b>
  412e87:	xor    eax,eax
  412e89:	mov    rdi,r15
  412e8c:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412e91:	lea    rsi,[rip+0x313b0]        # 444248 <_IO_stdin_used@@Base+0x15248>
  412e98:	xor    eax,eax
  412e9a:	mov    rdi,r15
  412e9d:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412ea2:	lea    rsi,[rip+0x313b1]        # 44425a <_IO_stdin_used@@Base+0x1525a>
  412ea9:	xor    eax,eax
  412eab:	mov    rdi,r15
  412eae:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412eb3:	lea    rsi,[rip+0x1de79]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  412eba:	xor    eax,eax
  412ebc:	mov    rdi,r15
  412ebf:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412ec4:	lea    rsi,[rip+0x3139b]        # 444266 <_IO_stdin_used@@Base+0x15266>
  412ecb:	xor    eax,eax
  412ecd:	mov    rdi,r15
  412ed0:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412ed5:	add    r14d,0xffffffff
  412ed9:	lea    rsi,[rsp+0x20]
  412ede:	xor    edx,edx
  412ee0:	xor    r8d,r8d
  412ee3:	mov    rdi,r15
  412ee6:	mov    ecx,r14d
  412ee9:	call   413640 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  412eee:	lea    rsi,[rip+0x31116]        # 44400b <_IO_stdin_used@@Base+0x1500b>
  412ef5:	xor    eax,eax
  412ef7:	mov    rdi,r15
  412efa:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412eff:	mov    eax,DWORD PTR [r15+0xf0]
  412f06:	test   eax,eax
  412f08:	jne    412f6b <__flatcc_fb_gen_c_json_parser@@Base+0x2c7b>
  412f0a:	lea    rdi,[rip+0x30960]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412f11:	lea    rsi,[rip+0x30965]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  412f18:	lea    rcx,[rip+0x3121e]        # 44413d <_IO_stdin_used@@Base+0x1513d>
  412f1f:	mov    edx,0x4fe
  412f24:	call   406100 <__assert_fail@plt>
  412f29:	lea    rsi,[rip+0x312b4]        # 4441e4 <_IO_stdin_used@@Base+0x151e4>
  412f30:	xor    eax,eax
  412f32:	mov    rdi,r15
  412f35:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412f3a:	lea    rsi,[rip+0x312bd]        # 4441fe <_IO_stdin_used@@Base+0x151fe>
  412f41:	xor    eax,eax
  412f43:	mov    rdi,r15
  412f46:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412f4b:	lea    rsi,[rip+0x312bc]        # 44420e <_IO_stdin_used@@Base+0x1520e>
  412f52:	xor    eax,eax
  412f54:	mov    rdi,r15
  412f57:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412f5c:	mov    eax,DWORD PTR [r15+0xf0]
  412f63:	test   eax,eax
  412f65:	je     41303d <__flatcc_fb_gen_c_json_parser@@Base+0x2d4d>
  412f6b:	add    eax,0xffffffff
  412f6e:	mov    DWORD PTR [r15+0xf0],eax
  412f75:	lea    rsi,[rip+0x20130]        # 4330ac <_IO_stdin_used@@Base+0x40ac>
  412f7c:	xor    eax,eax
  412f7e:	mov    rdi,r15
  412f81:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412f86:	lea    rsi,[rip+0x1dda6]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  412f8d:	xor    eax,eax
  412f8f:	mov    rdi,r15
  412f92:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  412f97:	mov    rdi,QWORD PTR [rsp+0x20]
  412f9c:	test   rdi,rdi
  412f9f:	je     412fa6 <__flatcc_fb_gen_c_json_parser@@Base+0x2cb6>
  412fa1:	call   406040 <free@plt>
  412fa6:	lea    rsp,[rbp-0x20]
  412faa:	pop    rbx
  412fab:	pop    r12
  412fad:	pop    r14
  412faf:	pop    r15
  412fb1:	pop    rbp
  412fb2:	ret    
  412fb3:	lea    rdi,[rip+0x308b7]        # 443871 <_IO_stdin_used@@Base+0x14871>
  412fba:	lea    rsi,[rip+0x308bc]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  412fc1:	lea    rcx,[rip+0x31175]        # 44413d <_IO_stdin_used@@Base+0x1513d>
  412fc8:	mov    edx,0x4ef
  412fcd:	call   406100 <__assert_fail@plt>
  412fd2:	lea    rdi,[rip+0x240bf]        # 437098 <_IO_stdin_used@@Base+0x8098>
  412fd9:	lea    rsi,[rip+0x3089d]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  412fe0:	lea    rcx,[rip+0x31156]        # 44413d <_IO_stdin_used@@Base+0x1513d>
  412fe7:	mov    edx,0x4de
  412fec:	vzeroupper 
  412fef:	call   406100 <__assert_fail@plt>
  412ff4:	mov    rax,QWORD PTR [rip+0x3fffd]        # 452ff8 <stderr@GLIBC_2.2.5>
  412ffb:	mov    rdi,QWORD PTR [rax]
  412ffe:	lea    rsi,[rip+0x1dc13]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  413005:	lea    rbx,[rip+0x30871]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  41300c:	lea    r8,[rip+0x31163]        # 444176 <_IO_stdin_used@@Base+0x15176>
  413013:	mov    ecx,0x4e1
  413018:	xor    eax,eax
  41301a:	mov    rdx,rbx
  41301d:	call   406180 <fprintf@plt>
  413022:	lea    rdi,[rip+0x2eb56]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  413029:	lea    rcx,[rip+0x3110d]        # 44413d <_IO_stdin_used@@Base+0x1513d>
  413030:	mov    edx,0x4e1
  413035:	mov    rsi,rbx
  413038:	call   406100 <__assert_fail@plt>
  41303d:	lea    rdi,[rip+0x3082d]        # 443871 <_IO_stdin_used@@Base+0x14871>
  413044:	lea    rsi,[rip+0x30832]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  41304b:	lea    rcx,[rip+0x310eb]        # 44413d <_IO_stdin_used@@Base+0x1513d>
  413052:	mov    edx,0x4f5
  413057:	call   406100 <__assert_fail@plt>
  41305c:	nop    DWORD PTR [rax+0x0]
  413060:	push   rbp
  413061:	mov    rbp,rsp
  413064:	push   r15
  413066:	push   r14
  413068:	push   r12
  41306a:	push   rbx
  41306b:	and    rsp,0xffffffffffffffe0
  41306f:	sub    rsp,0x140
  413076:	mov    rbx,rsi
  413079:	mov    r15,rdi
  41307c:	vxorps xmm0,xmm0,xmm0
  413080:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  413086:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  41308c:	lea    rsi,[rsp+0x60]
  413091:	mov    rdi,rbx
  413094:	vzeroupper 
  413097:	call   408110 <__flatcc_fb_copy_scope@@Base>
  41309c:	mov    rax,QWORD PTR [r15+0xd8]
  4130a3:	vxorps xmm0,xmm0,xmm0
  4130a7:	vmovaps XMMWORD PTR [rsp],xmm0
  4130ac:	mov    QWORD PTR [rsp+0x10],0x0
  4130b5:	mov    QWORD PTR [rsp+0x8],rax
  4130ba:	add    rbx,0x8
  4130be:	lea    rsi,[rip+0x2d0b]        # 415dd0 <__flatcc_fb_gen_c_json_parser@@Base+0x5ae0>
  4130c5:	mov    rdx,rsp
  4130c8:	mov    rdi,rbx
  4130cb:	call   41a700 <fb_symbol_table_visit@@Base>
  4130d0:	movsxd r14,DWORD PTR [rsp]
  4130d4:	test   r14,r14
  4130d7:	je     41311e <__flatcc_fb_gen_c_json_parser@@Base+0x2e2e>
  4130d9:	mov    rdi,r14
  4130dc:	shl    rdi,0x5
  4130e0:	call   4061b0 <malloc@plt>
  4130e5:	test   rax,rax
  4130e8:	je     41311e <__flatcc_fb_gen_c_json_parser@@Base+0x2e2e>
  4130ea:	mov    r12,rax
  4130ed:	mov    QWORD PTR [rsp+0x10],rax
  4130f2:	lea    rsi,[rip+0x2d07]        # 415e00 <__flatcc_fb_gen_c_json_parser@@Base+0x5b10>
  4130f9:	mov    rdx,rsp
  4130fc:	mov    rdi,rbx
  4130ff:	call   41a700 <fb_symbol_table_visit@@Base>
  413104:	movsxd rsi,DWORD PTR [rsp]
  413108:	lea    rcx,[rip+0x1741]        # 414850 <__flatcc_fb_gen_c_json_parser@@Base+0x4560>
  41310f:	mov    edx,0x20
  413114:	mov    rdi,r12
  413117:	call   406080 <qsort@plt>
  41311c:	jmp    413121 <__flatcc_fb_gen_c_json_parser@@Base+0x2e31>
  41311e:	xor    r12d,r12d
  413121:	mov    QWORD PTR [rsp+0x20],r12
  413126:	test   r14d,r14d
  413129:	jle    413134 <__flatcc_fb_gen_c_json_parser@@Base+0x2e44>
  41312b:	test   r12,r12
  41312e:	je     413328 <__flatcc_fb_gen_c_json_parser@@Base+0x3038>
  413134:	mov    QWORD PTR [rsp+0x38],0x0
  41313d:	mov    DWORD PTR [rsp+0x40],0x3
  413145:	lea    rax,[rip+0x2b34]        # 415c80 <__flatcc_fb_gen_c_json_parser@@Base+0x5990>
  41314c:	mov    QWORD PTR [rsp+0x28],rax
  413151:	lea    rax,[rip+0x2c68]        # 415dc0 <__flatcc_fb_gen_c_json_parser@@Base+0x5ad0>
  413158:	mov    QWORD PTR [rsp+0x30],rax
  41315d:	mov    rax,QWORD PTR [r15+0xd8]
  413164:	mov    rdx,QWORD PTR [rax+0x110]
  41316b:	lea    rsi,[rip+0x30af3]        # 443c65 <_IO_stdin_used@@Base+0x14c65>
  413172:	lea    rcx,[rsp+0x60]
  413177:	xor    eax,eax
  413179:	mov    rdi,r15
  41317c:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413181:	add    DWORD PTR [r15+0xf0],0x2
  413189:	lea    rsi,[rip+0x3277d]        # 44590d <_IO_stdin_used@@Base+0x1690d>
  413190:	xor    eax,eax
  413192:	mov    rdi,r15
  413195:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41319a:	mov    eax,DWORD PTR [r15+0xf0]
  4131a1:	test   eax,eax
  4131a3:	je     413309 <__flatcc_fb_gen_c_json_parser@@Base+0x3019>
  4131a9:	mov    ecx,eax
  4131ab:	add    ecx,0xffffffff
  4131ae:	mov    DWORD PTR [r15+0xf0],ecx
  4131b5:	je     413309 <__flatcc_fb_gen_c_json_parser@@Base+0x3019>
  4131bb:	add    eax,0xfffffffe
  4131be:	mov    DWORD PTR [r15+0xf0],eax
  4131c5:	lea    rsi,[rip+0x33a46]        # 446c12 <_IO_stdin_used@@Base+0x17c12>
  4131cc:	xor    eax,eax
  4131ce:	mov    rdi,r15
  4131d1:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4131d6:	add    DWORD PTR [r15+0xf0],0x1
  4131de:	test   r14d,r14d
  4131e1:	je     413290 <__flatcc_fb_gen_c_json_parser@@Base+0x2fa0>
  4131e7:	lea    rsi,[rip+0x3103d]        # 44422b <_IO_stdin_used@@Base+0x1522b>
  4131ee:	xor    eax,eax
  4131f0:	mov    rdi,r15
  4131f3:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4131f8:	lea    rsi,[rip+0x31049]        # 444248 <_IO_stdin_used@@Base+0x15248>
  4131ff:	xor    eax,eax
  413201:	mov    rdi,r15
  413204:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413209:	lea    rsi,[rip+0x3104a]        # 44425a <_IO_stdin_used@@Base+0x1525a>
  413210:	xor    eax,eax
  413212:	mov    rdi,r15
  413215:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41321a:	lea    rsi,[rip+0x1db12]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  413221:	xor    eax,eax
  413223:	mov    rdi,r15
  413226:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41322b:	lea    rsi,[rip+0x31034]        # 444266 <_IO_stdin_used@@Base+0x15266>
  413232:	xor    eax,eax
  413234:	mov    rdi,r15
  413237:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41323c:	add    r14d,0xffffffff
  413240:	lea    rsi,[rsp+0x20]
  413245:	xor    edx,edx
  413247:	xor    r8d,r8d
  41324a:	mov    rdi,r15
  41324d:	mov    ecx,r14d
  413250:	call   413640 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  413255:	lea    rsi,[rip+0x30daf]        # 44400b <_IO_stdin_used@@Base+0x1500b>
  41325c:	xor    eax,eax
  41325e:	mov    rdi,r15
  413261:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413266:	mov    eax,DWORD PTR [r15+0xf0]
  41326d:	test   eax,eax
  41326f:	jne    4132c1 <__flatcc_fb_gen_c_json_parser@@Base+0x2fd1>
  413271:	lea    rdi,[rip+0x305f9]        # 443871 <_IO_stdin_used@@Base+0x14871>
  413278:	lea    rsi,[rip+0x305fe]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  41327f:	lea    rcx,[rip+0x32655]        # 4458db <_IO_stdin_used@@Base+0x168db>
  413286:	mov    edx,0x48e
  41328b:	call   406100 <__assert_fail@plt>
  413290:	lea    rsi,[rip+0x326a8]        # 44593f <_IO_stdin_used@@Base+0x1693f>
  413297:	xor    eax,eax
  413299:	mov    rdi,r15
  41329c:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4132a1:	lea    rsi,[rip+0x30f66]        # 44420e <_IO_stdin_used@@Base+0x1520e>
  4132a8:	xor    eax,eax
  4132aa:	mov    rdi,r15
  4132ad:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4132b2:	mov    eax,DWORD PTR [r15+0xf0]
  4132b9:	test   eax,eax
  4132bb:	je     413371 <__flatcc_fb_gen_c_json_parser@@Base+0x3081>
  4132c1:	add    eax,0xffffffff
  4132c4:	mov    DWORD PTR [r15+0xf0],eax
  4132cb:	lea    rsi,[rip+0x1fdda]        # 4330ac <_IO_stdin_used@@Base+0x40ac>
  4132d2:	xor    eax,eax
  4132d4:	mov    rdi,r15
  4132d7:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4132dc:	lea    rsi,[rip+0x1da50]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  4132e3:	xor    eax,eax
  4132e5:	mov    rdi,r15
  4132e8:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4132ed:	mov    rdi,QWORD PTR [rsp+0x20]
  4132f2:	test   rdi,rdi
  4132f5:	je     4132fc <__flatcc_fb_gen_c_json_parser@@Base+0x300c>
  4132f7:	call   406040 <free@plt>
  4132fc:	lea    rsp,[rbp-0x20]
  413300:	pop    rbx
  413301:	pop    r12
  413303:	pop    r14
  413305:	pop    r15
  413307:	pop    rbp
  413308:	ret    
  413309:	lea    rdi,[rip+0x30561]        # 443871 <_IO_stdin_used@@Base+0x14871>
  413310:	lea    rsi,[rip+0x30566]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  413317:	lea    rcx,[rip+0x325bd]        # 4458db <_IO_stdin_used@@Base+0x168db>
  41331e:	mov    edx,0x480
  413323:	call   406100 <__assert_fail@plt>
  413328:	mov    rax,QWORD PTR [rip+0x3fcc9]        # 452ff8 <stderr@GLIBC_2.2.5>
  41332f:	mov    rdi,QWORD PTR [rax]
  413332:	lea    rsi,[rip+0x1d8df]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  413339:	lea    rbx,[rip+0x3053d]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  413340:	lea    r8,[rip+0x30e2f]        # 444176 <_IO_stdin_used@@Base+0x15176>
  413347:	mov    ecx,0x474
  41334c:	xor    eax,eax
  41334e:	mov    rdx,rbx
  413351:	call   406180 <fprintf@plt>
  413356:	lea    rdi,[rip+0x2e822]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  41335d:	lea    rcx,[rip+0x32577]        # 4458db <_IO_stdin_used@@Base+0x168db>
  413364:	mov    edx,0x474
  413369:	mov    rsi,rbx
  41336c:	call   406100 <__assert_fail@plt>
  413371:	lea    rdi,[rip+0x304f9]        # 443871 <_IO_stdin_used@@Base+0x14871>
  413378:	lea    rsi,[rip+0x304fe]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  41337f:	lea    rcx,[rip+0x32555]        # 4458db <_IO_stdin_used@@Base+0x168db>
  413386:	mov    edx,0x485
  41338b:	call   406100 <__assert_fail@plt>
  413390:	push   rbp
  413391:	push   r15
  413393:	push   r14
  413395:	push   r13
  413397:	push   r12
  413399:	push   rbx
  41339a:	push   rax
  41339b:	mov    rbx,QWORD PTR [rdi+0x28]
  41339f:	test   rbx,rbx
  4133a2:	je     4134f8 <__flatcc_fb_gen_c_json_parser@@Base+0x3208>
  4133a8:	xor    eax,eax
  4133aa:	mov    rdx,rbx
  4133ad:	xor    ecx,ecx
  4133af:	nop
  4133b0:	test   BYTE PTR [rdx+0x70],0x4
  4133b4:	jne    4133e2 <__flatcc_fb_gen_c_json_parser@@Base+0x30f2>
  4133b6:	movzx  edi,WORD PTR [rdx+0x28]
  4133ba:	and    edi,0xfffffffe
  4133bd:	cmp    edi,0xe
  4133c0:	jne    4133df <__flatcc_fb_gen_c_json_parser@@Base+0x30ef>
  4133c2:	mov    rdi,QWORD PTR [rdx+0x18]
  4133c6:	movzx  edi,WORD PTR [rdi+0x10]
  4133ca:	cmp    edi,0x4
  4133cd:	jne    4133df <__flatcc_fb_gen_c_json_parser@@Base+0x30ef>
  4133cf:	add    ecx,0x1
  4133d2:	mov    rdi,QWORD PTR [rdx+0x8]
  4133d6:	mov    edi,DWORD PTR [rdi+0x8]
  4133d9:	lea    eax,[rax+rdi*1]
  4133dc:	add    eax,0x6
  4133df:	add    ecx,0x1
  4133e2:	mov    rdx,QWORD PTR [rdx]
  4133e5:	test   rdx,rdx
  4133e8:	jne    4133b0 <__flatcc_fb_gen_c_json_parser@@Base+0x30c0>
  4133ea:	mov    DWORD PTR [rsi],ecx
  4133ec:	test   ecx,ecx
  4133ee:	je     4134fe <__flatcc_fb_gen_c_json_parser@@Base+0x320e>
  4133f4:	movsxd r14,ecx
  4133f7:	mov    rbp,r14
  4133fa:	shl    rbp,0x5
  4133fe:	movsxd rdi,eax
  413401:	add    rdi,rbp
  413404:	call   4061b0 <malloc@plt>
  413409:	test   rax,rax
  41340c:	je     4134fe <__flatcc_fb_gen_c_json_parser@@Base+0x320e>
  413412:	mov    r15,rax
  413415:	test   rbx,rbx
  413418:	je     4134df <__flatcc_fb_gen_c_json_parser@@Base+0x31ef>
  41341e:	mov    r12,r15
  413421:	add    r12,rbp
  413424:	xor    r13d,r13d
  413427:	mov    rbp,r15
  41342a:	nop    WORD PTR [rax+rax*1+0x0]
  413430:	test   BYTE PTR [rbx+0x70],0x4
  413434:	jne    4134d3 <__flatcc_fb_gen_c_json_parser@@Base+0x31e3>
  41343a:	mov    rax,QWORD PTR [rbx+0x8]
  41343e:	mov    rsi,QWORD PTR [rax]
  413441:	mov    QWORD PTR [rbp+0x0],rsi
  413445:	mov    rdx,QWORD PTR [rax+0x8]
  413449:	mov    DWORD PTR [rbp+0x8],edx
  41344c:	mov    QWORD PTR [rbp+0x10],rbx
  413450:	mov    DWORD PTR [rbp+0x18],0x0
  413457:	lea    rax,[rbp+0x20]
  41345b:	movzx  ecx,WORD PTR [rbx+0x28]
  41345f:	and    ecx,0xfffffffe
  413462:	cmp    ecx,0xe
  413465:	jne    4134d0 <__flatcc_fb_gen_c_json_parser@@Base+0x31e0>
  413467:	mov    rcx,QWORD PTR [rbx+0x18]
  41346b:	movzx  ecx,WORD PTR [rcx+0x10]
  41346f:	cmp    ecx,0x4
  413472:	jne    4134d0 <__flatcc_fb_gen_c_json_parser@@Base+0x31e0>
  413474:	movsxd rax,r13d
  413477:	add    r13d,0x1
  41347b:	mov    QWORD PTR [rbx+0xa0],rax
  413482:	lea    eax,[rdx+0x5]
  413485:	mov    DWORD PTR [rbp+0x28],eax
  413488:	mov    QWORD PTR [rbp+0x20],r12
  41348c:	mov    rdi,r12
  41348f:	call   4061a0 <memcpy@plt>
  413494:	mov    rax,QWORD PTR [rbx+0x8]
  413498:	mov    rax,QWORD PTR [rax+0x8]
  41349c:	mov    WORD PTR [r12+rax*1+0x4],0x65
  4134a4:	mov    DWORD PTR [r12+rax*1],0x7079745f
  4134ac:	add    r12,rax
  4134af:	add    r12,0x6
  4134b3:	mov    QWORD PTR [rbp+0x30],rbx
  4134b7:	mov    DWORD PTR [rbp+0x38],0x1
  4134be:	add    rbp,0x40
  4134c2:	jmp    4134d3 <__flatcc_fb_gen_c_json_parser@@Base+0x31e3>
  4134c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4134ce:	xchg   ax,ax
  4134d0:	mov    rbp,rax
  4134d3:	mov    rbx,QWORD PTR [rbx]
  4134d6:	test   rbx,rbx
  4134d9:	jne    413430 <__flatcc_fb_gen_c_json_parser@@Base+0x3140>
  4134df:	lea    rcx,[rip+0x136a]        # 414850 <__flatcc_fb_gen_c_json_parser@@Base+0x4560>
  4134e6:	mov    edx,0x20
  4134eb:	mov    rdi,r15
  4134ee:	mov    rsi,r14
  4134f1:	call   406080 <qsort@plt>
  4134f6:	jmp    413501 <__flatcc_fb_gen_c_json_parser@@Base+0x3211>
  4134f8:	mov    DWORD PTR [rsi],0x0
  4134fe:	xor    r15d,r15d
  413501:	mov    rax,r15
  413504:	add    rsp,0x8
  413508:	pop    rbx
  413509:	pop    r12
  41350b:	pop    r13
  41350d:	pop    r14
  41350f:	pop    r15
  413511:	pop    rbp
  413512:	ret    
  413513:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41351d:	nop    DWORD PTR [rax]
  413520:	push   r15
  413522:	push   r14
  413524:	push   rbx
  413525:	mov    r14,rdx
  413528:	mov    r15,rsi
  41352b:	mov    rbx,rdi
  41352e:	lea    rsi,[rip+0x30d5f]        # 444294 <_IO_stdin_used@@Base+0x15294>
  413535:	xor    eax,eax
  413537:	mov    edx,r8d
  41353a:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41353f:	lea    rsi,[rip+0x30d9e]        # 4442e4 <_IO_stdin_used@@Base+0x152e4>
  413546:	xor    eax,eax
  413548:	mov    rdi,rbx
  41354b:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  413550:	add    DWORD PTR [rbx+0xf0],0x1
  413557:	mov    eax,DWORD PTR [r15+0x48]
  41355b:	lea    ecx,[rax-0x1]
  41355e:	cmp    ecx,0x5
  413561:	jae    413569 <__flatcc_fb_gen_c_json_parser@@Base+0x3279>
  413563:	mov    rdx,QWORD PTR [r14+0x48]
  413567:	jmp    41357a <__flatcc_fb_gen_c_json_parser@@Base+0x328a>
  413569:	add    eax,0xfffffffa
  41356c:	cmp    eax,0x4
  41356f:	jae    4135c5 <__flatcc_fb_gen_c_json_parser@@Base+0x32d5>
  413571:	mov    rdx,QWORD PTR [r14+0x48]
  413575:	test   rdx,rdx
  413578:	js     4135bc <__flatcc_fb_gen_c_json_parser@@Base+0x32cc>
  41357a:	lea    rsi,[rip+0x30dc1]        # 444342 <_IO_stdin_used@@Base+0x15342>
  413581:	xor    eax,eax
  413583:	mov    rdi,rbx
  413586:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41358b:	mov    eax,DWORD PTR [rbx+0xf0]
  413591:	test   eax,eax
  413593:	je     41360e <__flatcc_fb_gen_c_json_parser@@Base+0x331e>
  413595:	add    eax,0xffffffff
  413598:	mov    DWORD PTR [rbx+0xf0],eax
  41359e:	lea    rsi,[rip+0x30a16]        # 443fbb <_IO_stdin_used@@Base+0x14fbb>
  4135a5:	xor    eax,eax
  4135a7:	mov    rdi,rbx
  4135aa:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4135af:	add    DWORD PTR [rbx+0xf0],0x1
  4135b6:	pop    rbx
  4135b7:	pop    r14
  4135b9:	pop    r15
  4135bb:	ret    
  4135bc:	lea    rsi,[rip+0x30da8]        # 44436b <_IO_stdin_used@@Base+0x1536b>
  4135c3:	jmp    413581 <__flatcc_fb_gen_c_json_parser@@Base+0x3291>
  4135c5:	mov    rax,QWORD PTR [rip+0x3fa2c]        # 452ff8 <stderr@GLIBC_2.2.5>
  4135cc:	mov    rdi,QWORD PTR [rax]
  4135cf:	lea    rsi,[rip+0x1d642]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  4135d6:	lea    rbx,[rip+0x302a0]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  4135dd:	lea    r8,[rip+0x30db0]        # 444394 <_IO_stdin_used@@Base+0x15394>
  4135e4:	mov    ecx,0x2c6
  4135e9:	xor    eax,eax
  4135eb:	mov    rdx,rbx
  4135ee:	call   406180 <fprintf@plt>
  4135f3:	lea    rdi,[rip+0x2e585]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  4135fa:	lea    rcx,[rip+0x30db6]        # 4443b7 <_IO_stdin_used@@Base+0x153b7>
  413601:	mov    edx,0x2c6
  413606:	mov    rsi,rbx
  413609:	call   406100 <__assert_fail@plt>
  41360e:	lea    rdi,[rip+0x3025c]        # 443871 <_IO_stdin_used@@Base+0x14871>
  413615:	lea    rsi,[rip+0x30261]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  41361c:	lea    rcx,[rip+0x30cd4]        # 4442f7 <_IO_stdin_used@@Base+0x152f7>
  413623:	mov    edx,0x2cf
  413628:	call   406100 <__assert_fail@plt>
  41362d:	nop    DWORD PTR [rax]
  413630:	lea    rsi,[rip+0x30dce]        # 444405 <_IO_stdin_used@@Base+0x15405>
  413637:	xor    eax,eax
  413639:	jmp    412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41363e:	xchg   ax,ax
  413640:	push   rbp
  413641:	push   r15
  413643:	push   r14
  413645:	push   r13
  413647:	push   r12
  413649:	push   rbx
  41364a:	sub    rsp,0x58
  41364e:	mov    r13d,r8d
  413651:	mov    QWORD PTR [rsp+0x40],rdi
  413656:	mov    QWORD PTR [rsp+0x20],rsi
  41365b:	mov    r14,QWORD PTR [rsi]
  41365e:	movsxd rbx,edx
  413661:	mov    rbp,rbx
  413664:	shl    rbp,0x5
  413668:	mov    esi,DWORD PTR [r14+rbp*1+0x8]
  41366d:	lea    r8d,[r13+0x8]
  413671:	mov    edi,0xfffffff8
  413676:	sub    edi,r13d
  413679:	cmp    r8d,esi
  41367c:	jg     413b89 <__flatcc_fb_gen_c_json_parser@@Base+0x3899>
  413682:	mov    eax,esi
  413684:	neg    eax
  413686:	cmp    edi,eax
  413688:	je     413b89 <__flatcc_fb_gen_c_json_parser@@Base+0x3899>
  41368e:	mov    DWORD PTR [rsp+0x48],esi
  413692:	mov    QWORD PTR [rsp+0x50],rbp
  413697:	mov    DWORD PTR [rsp+0x38],edi
  41369b:	mov    DWORD PTR [rsp+0x2c],r8d
  4136a0:	mov    DWORD PTR [rsp+0x4],ecx
  4136a4:	mov    eax,ecx
  4136a6:	sub    eax,edx
  4136a8:	mov    ecx,eax
  4136aa:	shr    ecx,0x1f
  4136ad:	add    ecx,eax
  4136af:	sar    ecx,1
  4136b1:	movsxd rsi,r13d
  4136b4:	mov    QWORD PTR [rsp+0x30],rdx
  4136b9:	add    ecx,edx
  4136bb:	movsxd r15,ecx
  4136be:	mov    rax,rsi
  4136c1:	mov    QWORD PTR [rsp+0x8],rsi
  4136c6:	lea    rax,[rsi-0x1]
  4136ca:	mov    QWORD PTR [rsp+0x10],rax
  4136cf:	xor    r9d,r9d
  4136d2:	vpcmpeqd ymm14,ymm14,ymm14
  4136d7:	vmovdqa xmm0,XMMWORD PTR [rip+0x2fee1]        # 4435c0 <_IO_stdin_used@@Base+0x145c0>
  4136df:	vpbroadcastq ymm15,QWORD PTR [rip+0x2fe30]        # 443518 <_IO_stdin_used@@Base+0x14518>
  4136e8:	vpbroadcastq ymm8,QWORD PTR [rip+0x2fe2f]        # 443520 <_IO_stdin_used@@Base+0x14520>
  4136f1:	vpbroadcastq ymm3,QWORD PTR [rip+0x2fe2e]        # 443528 <_IO_stdin_used@@Base+0x14528>
  4136fa:	vpbroadcastq ymm4,QWORD PTR [rip+0x2fe2d]        # 443530 <_IO_stdin_used@@Base+0x14530>
  413703:	vpbroadcastq ymm5,QWORD PTR [rip+0x2fe2c]        # 443538 <_IO_stdin_used@@Base+0x14538>
  41370c:	vpbroadcastq ymm6,QWORD PTR [rip+0x2fe2b]        # 443540 <_IO_stdin_used@@Base+0x14540>
  413715:	mov    r8,r15
  413718:	xor    edi,edi
  41371a:	xor    r10d,r10d
  41371d:	mov    QWORD PTR [rsp+0x18],rbx
  413722:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41372c:	nop    DWORD PTR [rax+0x0]
  413730:	mov    r12,r8
  413733:	cmp    r8,rbx
  413736:	jle    413afd <__flatcc_fb_gen_c_json_parser@@Base+0x380d>
  41373c:	lea    r8,[r12-0x1]
  413741:	mov    rcx,r8
  413744:	shl    rcx,0x5
  413748:	mov    eax,DWORD PTR [r14+rcx*1+0x8]
  41374d:	mov    r11d,eax
  413750:	sub    r11d,r13d
  413753:	jl     413936 <__flatcc_fb_gen_c_json_parser@@Base+0x3646>
  413759:	cmp    r11d,0x9
  41375d:	mov    edx,0x8
  413762:	cmovge r11d,edx
  413766:	test   r11d,r11d
  413769:	je     4137ab <__flatcc_fb_gen_c_json_parser@@Base+0x34bb>
  41376b:	mov    rdx,QWORD PTR [r14+rcx*1]
  41376f:	lea    ecx,[r11+0x1]
  413773:	movsxd rcx,ecx
  413776:	add    rcx,0xffffffffffffffff
  41377a:	not    eax
  41377c:	add    eax,r13d
  41377f:	cmp    eax,0xfffffff6
  413782:	mov    esi,0xfffffff7
  413787:	cmovle eax,esi
  41378a:	mov    ebp,0xfffffffe
  41378f:	sub    ebp,eax
  413791:	lea    rbx,[rbp+0x1]
  413795:	cmp    rbx,0x10
  413799:	jae    4137b3 <__flatcc_fb_gen_c_json_parser@@Base+0x34c3>
  41379b:	mov    rax,rcx
  41379e:	xor    r9d,r9d
  4137a1:	mov    rbx,QWORD PTR [rsp+0x18]
  4137a6:	jmp    4138de <__flatcc_fb_gen_c_json_parser@@Base+0x35ee>
  4137ab:	xor    r9d,r9d
  4137ae:	jmp    41391e <__flatcc_fb_gen_c_json_parser@@Base+0x362e>
  4137b3:	mov    rax,QWORD PTR [rsp+0x8]
  4137b8:	lea    rsi,[rdx+rax*1]
  4137bc:	add    ebp,0x1
  4137bf:	and    ebp,0xf
  4137c2:	mov    rax,rbp
  4137c5:	sub    rax,rbx
  4137c8:	add    rax,rcx
  4137cb:	vmovq  xmm7,rcx
  4137d0:	vpbroadcastq ymm7,xmm7
  4137d5:	vpaddq ymm9,ymm7,YMMWORD PTR [rip+0x2fce3]        # 4434c0 <_IO_stdin_used@@Base+0x144c0>
  4137dd:	sub    rbx,rbp
  4137e0:	vpxor  xmm10,xmm10,xmm10
  4137e5:	vpxor  xmm11,xmm11,xmm11
  4137ea:	vpxor  xmm12,xmm12,xmm12
  4137ef:	vpxor  xmm13,xmm13,xmm13
  4137f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4137fe:	xchg   ax,ax
  413800:	vpaddq ymm7,ymm9,ymm14
  413805:	vmovq  rcx,xmm7
  41380a:	vmovd  xmm1,DWORD PTR [rsi+rcx*1-0x3]
  413810:	vmovd  xmm14,DWORD PTR [rsi+rcx*1-0x7]
  413816:	vpshufb xmm1,xmm1,xmm0
  41381b:	vpmovsxbq ymm1,xmm1
  413820:	vpshufb xmm2,xmm14,xmm0
  413825:	vpcmpeqd ymm14,ymm14,ymm14
  41382a:	vpmovsxbq ymm2,xmm2
  41382f:	vpsllq ymm7,ymm7,0x3
  413834:	vpsubq ymm7,ymm15,ymm7
  413838:	vpand  ymm7,ymm7,ymm5
  41383c:	vpsllvq ymm1,ymm1,ymm7
  413841:	vpsllq ymm7,ymm9,0x3
  413847:	vpor   ymm10,ymm1,ymm10
  41384c:	vpsubq ymm1,ymm8,ymm7
  413850:	vpand  ymm1,ymm1,ymm5
  413854:	vpsllvq ymm1,ymm2,ymm1
  413859:	vmovd  xmm2,DWORD PTR [rsi+rcx*1-0xb]
  41385f:	vpshufb xmm2,xmm2,xmm0
  413864:	vpmovsxbq ymm2,xmm2
  413869:	vpor   ymm11,ymm1,ymm11
  41386e:	vpsubq ymm1,ymm3,ymm7
  413872:	vpand  ymm1,ymm1,ymm5
  413876:	vpsllvq ymm1,ymm2,ymm1
  41387b:	vpor   ymm12,ymm1,ymm12
  413880:	vmovd  xmm1,DWORD PTR [rsi+rcx*1-0xf]
  413886:	vpshufb xmm1,xmm1,xmm0
  41388b:	vpmovsxbq ymm1,xmm1
  413890:	vpsubq ymm2,ymm4,ymm7
  413894:	vpand  ymm2,ymm2,ymm5
  413898:	vpsllvq ymm1,ymm1,ymm2
  41389d:	vpor   ymm13,ymm1,ymm13
  4138a2:	vpaddq ymm9,ymm9,ymm6
  4138a6:	add    rbx,0xfffffffffffffff0
  4138aa:	jne    413800 <__flatcc_fb_gen_c_json_parser@@Base+0x3510>
  4138b0:	vpor   ymm1,ymm11,ymm10
  4138b5:	vpor   ymm1,ymm12,ymm1
  4138b9:	vpor   ymm1,ymm13,ymm1
  4138bd:	vextracti128 xmm2,ymm1,0x1
  4138c3:	vpor   ymm1,ymm1,ymm2
  4138c7:	vpshufd xmm2,xmm1,0x4e
  4138cc:	vpor   ymm1,ymm1,ymm2
  4138d0:	vmovq  r9,xmm1
  4138d5:	test   ebp,ebp
  4138d7:	mov    rbx,QWORD PTR [rsp+0x18]
  4138dc:	je     41391e <__flatcc_fb_gen_c_json_parser@@Base+0x362e>
  4138de:	lea    rsi,[rax*8+0x0]
  4138e6:	mov    ebp,0x40
  4138eb:	sub    rbp,rsi
  4138ee:	add    rdx,QWORD PTR [rsp+0x10]
  4138f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4138fd:	nop    DWORD PTR [rax]
  413900:	movsx  rsi,BYTE PTR [rdx+rax*1]
  413905:	add    rax,0xffffffffffffffff
  413909:	mov    ecx,ebp
  41390b:	and    cl,0xf8
  41390e:	shlx   rcx,rsi,rcx
  413913:	or     r9,rcx
  413916:	add    rbp,0x8
  41391a:	test   eax,eax
  41391c:	jne    413900 <__flatcc_fb_gen_c_json_parser@@Base+0x3610>
  41391e:	shl    r11d,0x3
  413922:	mov    eax,0x40
  413927:	sub    eax,r11d
  41392a:	mov    rcx,0xffffffffffffffff
  413931:	shlx   r10,rcx,rax
  413936:	mov    rdx,r12
  413939:	shl    rdx,0x5
  41393d:	mov    eax,DWORD PTR [r14+rdx*1+0x8]
  413942:	mov    ecx,eax
  413944:	sub    ecx,r13d
  413947:	jl     413aee <__flatcc_fb_gen_c_json_parser@@Base+0x37fe>
  41394d:	cmp    ecx,0x9
  413950:	mov    esi,0x8
  413955:	cmovge ecx,esi
  413958:	test   ecx,ecx
  41395a:	je     413995 <__flatcc_fb_gen_c_json_parser@@Base+0x36a5>
  41395c:	mov    rdx,QWORD PTR [r14+rdx*1]
  413960:	add    ecx,0x1
  413963:	movsxd rcx,ecx
  413966:	add    rcx,0xffffffffffffffff
  41396a:	not    eax
  41396c:	add    eax,r13d
  41396f:	cmp    eax,0xfffffff6
  413972:	mov    esi,0xfffffff7
  413977:	cmovle eax,esi
  41397a:	mov    ebp,0xfffffffe
  41397f:	sub    ebp,eax
  413981:	lea    rdi,[rbp+0x1]
  413985:	cmp    rdi,0x10
  413989:	jae    41399c <__flatcc_fb_gen_c_json_parser@@Base+0x36ac>
  41398b:	mov    rax,rcx
  41398e:	xor    edi,edi
  413990:	jmp    413ab4 <__flatcc_fb_gen_c_json_parser@@Base+0x37c4>
  413995:	xor    edi,edi
  413997:	jmp    413aee <__flatcc_fb_gen_c_json_parser@@Base+0x37fe>
  41399c:	mov    rax,QWORD PTR [rsp+0x8]
  4139a1:	lea    rsi,[rdx+rax*1]
  4139a5:	add    ebp,0x1
  4139a8:	and    ebp,0xf
  4139ab:	mov    rax,rbp
  4139ae:	sub    rax,rdi
  4139b1:	add    rax,rcx
  4139b4:	vmovq  xmm1,rcx
  4139b9:	vpbroadcastq ymm1,xmm1
  4139be:	vpaddq ymm9,ymm1,YMMWORD PTR [rip+0x2fafa]        # 4434c0 <_IO_stdin_used@@Base+0x144c0>
  4139c6:	sub    rdi,rbp
  4139c9:	vpxor  xmm10,xmm10,xmm10
  4139ce:	vpxor  xmm11,xmm11,xmm11
  4139d3:	vpxor  xmm12,xmm12,xmm12
  4139d8:	vpxor  xmm13,xmm13,xmm13
  4139dd:	nop    DWORD PTR [rax]
  4139e0:	vpaddq ymm1,ymm9,ymm14
  4139e5:	vmovq  rcx,xmm1
  4139ea:	vmovd  xmm2,DWORD PTR [rsi+rcx*1-0x3]
  4139f0:	vmovd  xmm7,DWORD PTR [rsi+rcx*1-0x7]
  4139f6:	vpshufb xmm2,xmm2,xmm0
  4139fb:	vpmovsxbq ymm2,xmm2
  413a00:	vpshufb xmm7,xmm7,xmm0
  413a05:	vpmovsxbq ymm7,xmm7
  413a0a:	vpsllq ymm1,ymm1,0x3
  413a0f:	vpsubq ymm1,ymm15,ymm1
  413a13:	vpand  ymm1,ymm1,ymm5
  413a17:	vpsllvq ymm1,ymm2,ymm1
  413a1c:	vpsllq ymm2,ymm9,0x3
  413a22:	vpor   ymm10,ymm1,ymm10
  413a27:	vpsubq ymm1,ymm8,ymm2
  413a2b:	vpand  ymm1,ymm1,ymm5
  413a2f:	vpsllvq ymm1,ymm7,ymm1
  413a34:	vmovd  xmm7,DWORD PTR [rsi+rcx*1-0xb]
  413a3a:	vpshufb xmm7,xmm7,xmm0
  413a3f:	vpmovsxbq ymm7,xmm7
  413a44:	vpor   ymm11,ymm1,ymm11
  413a49:	vpsubq ymm1,ymm3,ymm2
  413a4d:	vpand  ymm1,ymm1,ymm5
  413a51:	vpsllvq ymm1,ymm7,ymm1
  413a56:	vpor   ymm12,ymm1,ymm12
  413a5b:	vmovd  xmm1,DWORD PTR [rsi+rcx*1-0xf]
  413a61:	vpshufb xmm1,xmm1,xmm0
  413a66:	vpmovsxbq ymm1,xmm1
  413a6b:	vpsubq ymm2,ymm4,ymm2
  413a6f:	vpand  ymm2,ymm2,ymm5
  413a73:	vpsllvq ymm1,ymm1,ymm2
  413a78:	vpor   ymm13,ymm1,ymm13
  413a7d:	vpaddq ymm9,ymm9,ymm6
  413a81:	add    rdi,0xfffffffffffffff0
  413a85:	jne    4139e0 <__flatcc_fb_gen_c_json_parser@@Base+0x36f0>
  413a8b:	vpor   ymm1,ymm11,ymm10
  413a90:	vpor   ymm1,ymm12,ymm1
  413a94:	vpor   ymm1,ymm13,ymm1
  413a98:	vextracti128 xmm2,ymm1,0x1
  413a9e:	vpor   ymm1,ymm1,ymm2
  413aa2:	vpshufd xmm2,xmm1,0x4e
  413aa7:	vpor   ymm1,ymm1,ymm2
  413aab:	vmovq  rdi,xmm1
  413ab0:	test   ebp,ebp
  413ab2:	je     413aee <__flatcc_fb_gen_c_json_parser@@Base+0x37fe>
  413ab4:	lea    rsi,[rax*8+0x0]
  413abc:	mov    ebp,0x40
  413ac1:	sub    rbp,rsi
  413ac4:	add    rdx,QWORD PTR [rsp+0x10]
  413ac9:	nop    DWORD PTR [rax+0x0]
  413ad0:	movsx  rsi,BYTE PTR [rdx+rax*1]
  413ad5:	add    rax,0xffffffffffffffff
  413ad9:	mov    ecx,ebp
  413adb:	and    cl,0xf8
  413ade:	shlx   rcx,rsi,rcx
  413ae3:	or     rdi,rcx
  413ae6:	add    rbp,0x8
  413aea:	test   eax,eax
  413aec:	jne    413ad0 <__flatcc_fb_gen_c_json_parser@@Base+0x37e0>
  413aee:	mov    rax,rdi
  413af1:	xor    rax,r9
  413af4:	test   rax,r10
  413af7:	je     413730 <__flatcc_fb_gen_c_json_parser@@Base+0x3440>
  413afd:	cmp    r12d,DWORD PTR [rsp+0x30]
  413b02:	jle    413bb4 <__flatcc_fb_gen_c_json_parser@@Base+0x38c4>
  413b08:	movsxd rax,r12d
  413b0b:	shl    rax,0x5
  413b0f:	mov    ecx,DWORD PTR [r14+rax*1+0x8]
  413b14:	xor    edx,edx
  413b16:	mov    esi,ecx
  413b18:	mov    r15d,0x0
  413b1e:	mov    ebp,0x0
  413b23:	sub    esi,r13d
  413b26:	jl     41419f <__flatcc_fb_gen_c_json_parser@@Base+0x3eaf>
  413b2c:	mov    rax,QWORD PTR [r14+rax*1]
  413b30:	mov    rdx,QWORD PTR [rsp+0x8]
  413b35:	lea    rbp,[rax+rdx*1]
  413b39:	cmp    esi,0x9
  413b3c:	mov    r15d,0x8
  413b42:	cmovl  r15d,esi
  413b46:	test   r15d,r15d
  413b49:	je     414033 <__flatcc_fb_gen_c_json_parser@@Base+0x3d43>
  413b4f:	lea    edx,[r15+0x1]
  413b53:	movsxd rdi,edx
  413b56:	add    rdi,0xffffffffffffffff
  413b5a:	not    ecx
  413b5c:	add    ecx,r13d
  413b5f:	cmp    ecx,0xfffffff6
  413b62:	mov    edx,0xfffffff7
  413b67:	cmovg  edx,ecx
  413b6a:	mov    esi,0xfffffffe
  413b6f:	sub    esi,edx
  413b71:	lea    rdx,[rsi+0x1]
  413b75:	cmp    rdx,0x10
  413b79:	jae    41403d <__flatcc_fb_gen_c_json_parser@@Base+0x3d4d>
  413b7f:	xor    edx,edx
  413b81:	mov    rcx,rdi
  413b84:	jmp    414159 <__flatcc_fb_gen_c_json_parser@@Base+0x3e69>
  413b89:	cmp    ecx,edx
  413b8b:	jne    413f94 <__flatcc_fb_gen_c_json_parser@@Base+0x3ca4>
  413b91:	xor    r9d,r9d
  413b94:	mov    rdi,QWORD PTR [rsp+0x40]
  413b99:	mov    rsi,QWORD PTR [rsp+0x20]
  413b9e:	mov    r8d,r13d
  413ba1:	add    rsp,0x58
  413ba5:	pop    rbx
  413ba6:	pop    r12
  413ba8:	pop    r13
  413baa:	pop    r14
  413bac:	pop    r15
  413bae:	pop    rbp
  413baf:	jmp    414880 <__flatcc_fb_gen_c_json_parser@@Base+0x4590>
  413bb4:	movsxd r9,DWORD PTR [rsp+0x4]
  413bb9:	xor    esi,esi
  413bbb:	mov    r8d,0x8
  413bc1:	mov    r10d,0xfffffff7
  413bc7:	vpcmpeqd ymm14,ymm14,ymm14
  413bcc:	xor    edi,edi
  413bce:	xor    r11d,r11d
  413bd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413bdb:	nop    DWORD PTR [rax+rax*1+0x0]
  413be0:	cmp    r15,r9
  413be3:	jge    413fc3 <__flatcc_fb_gen_c_json_parser@@Base+0x3cd3>
  413be9:	mov    rax,r15
  413bec:	shl    rax,0x5
  413bf0:	mov    ecx,DWORD PTR [r14+rax*1+0x8]
  413bf5:	mov    r12d,ecx
  413bf8:	sub    r12d,r13d
  413bfb:	jl     413dc6 <__flatcc_fb_gen_c_json_parser@@Base+0x3ad6>
  413c01:	cmp    r12d,0x9
  413c05:	cmovge r12d,r8d
  413c09:	test   r12d,r12d
  413c0c:	je     413c47 <__flatcc_fb_gen_c_json_parser@@Base+0x3957>
  413c0e:	mov    rax,QWORD PTR [r14+rax*1]
  413c12:	lea    esi,[r12+0x1]
  413c17:	movsxd rbx,esi
  413c1a:	add    rbx,0xffffffffffffffff
  413c1e:	not    ecx
  413c20:	add    ecx,r13d
  413c23:	cmp    ecx,0xfffffff6
  413c26:	cmovle ecx,r10d
  413c2a:	mov    r11d,0xfffffffe
  413c30:	sub    r11d,ecx
  413c33:	lea    rsi,[r11+0x1]
  413c37:	cmp    rsi,0x10
  413c3b:	jae    413c4e <__flatcc_fb_gen_c_json_parser@@Base+0x395e>
  413c3d:	mov    rbp,rbx
  413c40:	xor    esi,esi
  413c42:	jmp    413d75 <__flatcc_fb_gen_c_json_parser@@Base+0x3a85>
  413c47:	xor    esi,esi
  413c49:	jmp    413dae <__flatcc_fb_gen_c_json_parser@@Base+0x3abe>
  413c4e:	mov    rcx,QWORD PTR [rsp+0x8]
  413c53:	lea    rcx,[rax+rcx*1]
  413c57:	add    r11d,0x1
  413c5b:	and    r11d,0xf
  413c5f:	mov    rbp,r11
  413c62:	sub    rbp,rsi
  413c65:	add    rbp,rbx
  413c68:	vmovq  xmm2,rbx
  413c6d:	vpbroadcastq ymm2,xmm2
  413c72:	vpaddq ymm9,ymm2,YMMWORD PTR [rip+0x2f846]        # 4434c0 <_IO_stdin_used@@Base+0x144c0>
  413c7a:	sub    rsi,r11
  413c7d:	vpxor  xmm10,xmm10,xmm10
  413c82:	vpxor  xmm11,xmm11,xmm11
  413c87:	vpxor  xmm12,xmm12,xmm12
  413c8c:	vpxor  xmm13,xmm13,xmm13
  413c91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  413ca0:	vpaddq ymm2,ymm9,ymm14
  413ca5:	vmovq  rbx,xmm2
  413caa:	vmovd  xmm7,DWORD PTR [rcx+rbx*1-0x3]
  413cb0:	vmovd  xmm1,DWORD PTR [rcx+rbx*1-0x7]
  413cb6:	vpshufb xmm7,xmm7,xmm0
  413cbb:	vpmovsxbq ymm7,xmm7
  413cc0:	vpshufb xmm1,xmm1,xmm0
  413cc5:	vpmovsxbq ymm1,xmm1
  413cca:	vpsllq ymm2,ymm2,0x3
  413ccf:	vpsubq ymm2,ymm15,ymm2
  413cd3:	vpand  ymm2,ymm2,ymm5
  413cd7:	vpsllvq ymm2,ymm7,ymm2
  413cdc:	vpsllq ymm7,ymm9,0x3
  413ce2:	vpor   ymm10,ymm2,ymm10
  413ce7:	vpsubq ymm2,ymm8,ymm7
  413ceb:	vpand  ymm2,ymm2,ymm5
  413cef:	vpsllvq ymm1,ymm1,ymm2
  413cf4:	vmovd  xmm2,DWORD PTR [rcx+rbx*1-0xb]
  413cfa:	vpshufb xmm2,xmm2,xmm0
  413cff:	vpmovsxbq ymm2,xmm2
  413d04:	vpor   ymm11,ymm1,ymm11
  413d09:	vpsubq ymm1,ymm3,ymm7
  413d0d:	vpand  ymm1,ymm1,ymm5
  413d11:	vpsllvq ymm1,ymm2,ymm1
  413d16:	vpor   ymm12,ymm1,ymm12
  413d1b:	vmovd  xmm1,DWORD PTR [rcx+rbx*1-0xf]
  413d21:	vpshufb xmm1,xmm1,xmm0
  413d26:	vpmovsxbq ymm1,xmm1
  413d2b:	vpsubq ymm2,ymm4,ymm7
  413d2f:	vpand  ymm2,ymm2,ymm5
  413d33:	vpsllvq ymm1,ymm1,ymm2
  413d38:	vpor   ymm13,ymm1,ymm13
  413d3d:	vpaddq ymm9,ymm9,ymm6
  413d41:	add    rsi,0xfffffffffffffff0
  413d45:	jne    413ca0 <__flatcc_fb_gen_c_json_parser@@Base+0x39b0>
  413d4b:	vpor   ymm1,ymm11,ymm10
  413d50:	vpor   ymm1,ymm12,ymm1
  413d54:	vpor   ymm1,ymm13,ymm1
  413d58:	vextracti128 xmm2,ymm1,0x1
  413d5e:	vpor   ymm1,ymm1,ymm2
  413d62:	vpshufd xmm2,xmm1,0x4e
  413d67:	vpor   ymm1,ymm1,ymm2
  413d6b:	vmovq  rsi,xmm1
  413d70:	test   r11d,r11d
  413d73:	je     413dae <__flatcc_fb_gen_c_json_parser@@Base+0x3abe>
  413d75:	lea    rbx,[rbp*8+0x0]
  413d7d:	mov    edx,0x40
  413d82:	sub    rdx,rbx
  413d85:	add    rax,QWORD PTR [rsp+0x10]
  413d8a:	nop    WORD PTR [rax+rax*1+0x0]
  413d90:	movsx  rbx,BYTE PTR [rax+rbp*1]
  413d95:	add    rbp,0xffffffffffffffff
  413d99:	mov    ecx,edx
  413d9b:	and    cl,0xf8
  413d9e:	shlx   rcx,rbx,rcx
  413da3:	or     rsi,rcx
  413da6:	add    rdx,0x8
  413daa:	test   ebp,ebp
  413dac:	jne    413d90 <__flatcc_fb_gen_c_json_parser@@Base+0x3aa0>
  413dae:	shl    r12d,0x3
  413db2:	mov    eax,0x40
  413db7:	sub    eax,r12d
  413dba:	mov    rcx,0xffffffffffffffff
  413dc1:	shlx   r11,rcx,rax
  413dc6:	add    r15,0x1
  413dca:	mov    rdx,r15
  413dcd:	shl    rdx,0x5
  413dd1:	mov    ecx,DWORD PTR [r14+rdx*1+0x8]
  413dd6:	mov    eax,ecx
  413dd8:	sub    eax,r13d
  413ddb:	jl     413f7e <__flatcc_fb_gen_c_json_parser@@Base+0x3c8e>
  413de1:	cmp    eax,0x9
  413de4:	cmovge eax,r8d
  413de8:	test   eax,eax
  413dea:	je     413e20 <__flatcc_fb_gen_c_json_parser@@Base+0x3b30>
  413dec:	mov    rdx,QWORD PTR [r14+rdx*1]
  413df0:	add    eax,0x1
  413df3:	cdqe   
  413df5:	add    rax,0xffffffffffffffff
  413df9:	not    ecx
  413dfb:	add    ecx,r13d
  413dfe:	cmp    ecx,0xfffffff6
  413e01:	cmovle ecx,r10d
  413e05:	mov    ebx,0xfffffffe
  413e0a:	sub    ebx,ecx
  413e0c:	lea    rdi,[rbx+0x1]
  413e10:	cmp    rdi,0x10
  413e14:	jae    413e27 <__flatcc_fb_gen_c_json_parser@@Base+0x3b37>
  413e16:	mov    rbp,rax
  413e19:	xor    edi,edi
  413e1b:	jmp    413f44 <__flatcc_fb_gen_c_json_parser@@Base+0x3c54>
  413e20:	xor    edi,edi
  413e22:	jmp    413f7e <__flatcc_fb_gen_c_json_parser@@Base+0x3c8e>
  413e27:	mov    rcx,QWORD PTR [rsp+0x8]
  413e2c:	lea    rcx,[rdx+rcx*1]
  413e30:	add    ebx,0x1
  413e33:	and    ebx,0xf
  413e36:	mov    rbp,rbx
  413e39:	sub    rbp,rdi
  413e3c:	add    rbp,rax
  413e3f:	vmovq  xmm1,rax
  413e44:	vpbroadcastq ymm1,xmm1
  413e49:	vpaddq ymm9,ymm1,YMMWORD PTR [rip+0x2f66f]        # 4434c0 <_IO_stdin_used@@Base+0x144c0>
  413e51:	sub    rdi,rbx
  413e54:	vpxor  xmm10,xmm10,xmm10
  413e59:	vpxor  xmm11,xmm11,xmm11
  413e5e:	vpxor  xmm12,xmm12,xmm12
  413e63:	vpxor  xmm13,xmm13,xmm13
  413e68:	nop    DWORD PTR [rax+rax*1+0x0]
  413e70:	vpaddq ymm1,ymm9,ymm14
  413e75:	vmovq  rax,xmm1
  413e7a:	vmovd  xmm2,DWORD PTR [rcx+rax*1-0x3]
  413e80:	vmovd  xmm7,DWORD PTR [rcx+rax*1-0x7]
  413e86:	vpshufb xmm2,xmm2,xmm0
  413e8b:	vpmovsxbq ymm2,xmm2
  413e90:	vpshufb xmm7,xmm7,xmm0
  413e95:	vpmovsxbq ymm7,xmm7
  413e9a:	vpsllq ymm1,ymm1,0x3
  413e9f:	vpsubq ymm1,ymm15,ymm1
  413ea3:	vpand  ymm1,ymm1,ymm5
  413ea7:	vpsllvq ymm1,ymm2,ymm1
  413eac:	vpsllq ymm2,ymm9,0x3
  413eb2:	vpor   ymm10,ymm1,ymm10
  413eb7:	vpsubq ymm1,ymm8,ymm2
  413ebb:	vpand  ymm1,ymm1,ymm5
  413ebf:	vpsllvq ymm1,ymm7,ymm1
  413ec4:	vmovd  xmm7,DWORD PTR [rcx+rax*1-0xb]
  413eca:	vpshufb xmm7,xmm7,xmm0
  413ecf:	vpmovsxbq ymm7,xmm7
  413ed4:	vpor   ymm11,ymm1,ymm11
  413ed9:	vpsubq ymm1,ymm3,ymm2
  413edd:	vpand  ymm1,ymm1,ymm5
  413ee1:	vpsllvq ymm1,ymm7,ymm1
  413ee6:	vpor   ymm12,ymm1,ymm12
  413eeb:	vmovd  xmm1,DWORD PTR [rcx+rax*1-0xf]
  413ef1:	vpshufb xmm1,xmm1,xmm0
  413ef6:	vpmovsxbq ymm1,xmm1
  413efb:	vpsubq ymm2,ymm4,ymm2
  413eff:	vpand  ymm2,ymm2,ymm5
  413f03:	vpsllvq ymm1,ymm1,ymm2
  413f08:	vpor   ymm13,ymm1,ymm13
  413f0d:	vpaddq ymm9,ymm9,ymm6
  413f11:	add    rdi,0xfffffffffffffff0
  413f15:	jne    413e70 <__flatcc_fb_gen_c_json_parser@@Base+0x3b80>
  413f1b:	vpor   ymm1,ymm11,ymm10
  413f20:	vpor   ymm1,ymm12,ymm1
  413f24:	vpor   ymm1,ymm13,ymm1
  413f28:	vextracti128 xmm2,ymm1,0x1
  413f2e:	vpor   ymm1,ymm1,ymm2
  413f32:	vpshufd xmm2,xmm1,0x4e
  413f37:	vpor   ymm1,ymm1,ymm2
  413f3b:	vmovq  rdi,xmm1
  413f40:	test   ebx,ebx
  413f42:	je     413f7e <__flatcc_fb_gen_c_json_parser@@Base+0x3c8e>
  413f44:	lea    rax,[rbp*8+0x0]
  413f4c:	mov    ecx,0x40
  413f51:	sub    rcx,rax
  413f54:	add    rdx,QWORD PTR [rsp+0x10]
  413f59:	nop    DWORD PTR [rax+0x0]
  413f60:	movsx  rax,BYTE PTR [rdx+rbp*1]
  413f65:	add    rbp,0xffffffffffffffff
  413f69:	mov    ebx,ecx
  413f6b:	and    bl,0xf8
  413f6e:	shlx   rax,rax,rbx
  413f73:	or     rdi,rax
  413f76:	add    rcx,0x8
  413f7a:	test   ebp,ebp
  413f7c:	jne    413f60 <__flatcc_fb_gen_c_json_parser@@Base+0x3c70>
  413f7e:	mov    rax,rdi
  413f81:	xor    rax,rsi
  413f84:	test   rax,r11
  413f87:	mov    rbx,QWORD PTR [rsp+0x18]
  413f8c:	je     413be0 <__flatcc_fb_gen_c_json_parser@@Base+0x38f0>
  413f92:	jmp    413fc7 <__flatcc_fb_gen_c_json_parser@@Base+0x3cd7>
  413f94:	lea    eax,[rdx+0x1]
  413f97:	cmp    eax,ecx
  413f99:	jne    41368e <__flatcc_fb_gen_c_json_parser@@Base+0x339e>
  413f9f:	movsxd rax,ecx
  413fa2:	shl    rax,0x5
  413fa6:	mov    eax,DWORD PTR [r14+rax*1+0x8]
  413fab:	cmp    r8d,eax
  413fae:	jg     413b91 <__flatcc_fb_gen_c_json_parser@@Base+0x38a1>
  413fb4:	neg    eax
  413fb6:	cmp    edi,eax
  413fb8:	jne    41368e <__flatcc_fb_gen_c_json_parser@@Base+0x339e>
  413fbe:	jmp    413b91 <__flatcc_fb_gen_c_json_parser@@Base+0x38a1>
  413fc3:	add    r15d,0x1
  413fc7:	lea    r9d,[r15-0x1]
  413fcb:	mov    rdx,QWORD PTR [rsp+0x30]
  413fd0:	mov    esi,edx
  413fd2:	cmp    r15d,edx
  413fd5:	mov    ecx,DWORD PTR [rsp+0x4]
  413fd9:	mov    ebp,DWORD PTR [rsp+0x2c]
  413fdd:	mov    r8d,DWORD PTR [rsp+0x38]
  413fe2:	mov    eax,DWORD PTR [rsp+0x48]
  413fe6:	jle    41425f <__flatcc_fb_gen_c_json_parser@@Base+0x3f6f>
  413fec:	cmp    ebp,eax
  413fee:	jg     413ffb <__flatcc_fb_gen_c_json_parser@@Base+0x3d0b>
  413ff0:	add    eax,r8d
  413ff3:	test   eax,eax
  413ff5:	jg     41425d <__flatcc_fb_gen_c_json_parser@@Base+0x3f6d>
  413ffb:	movsxd rax,r9d
  413ffe:	mov    rsi,QWORD PTR [rsp+0x50]
  414003:	add    rsi,r14
  414006:	add    rsi,0x28
  41400a:	nop    WORD PTR [rax+rax*1+0x0]
  414010:	cmp    rbx,rax
  414013:	jge    41425a <__flatcc_fb_gen_c_json_parser@@Base+0x3f6a>
  414019:	add    rbx,0x1
  41401d:	mov    edi,DWORD PTR [rsi]
  41401f:	add    rsi,0x20
  414023:	cmp    ebp,edi
  414025:	jg     414010 <__flatcc_fb_gen_c_json_parser@@Base+0x3d20>
  414027:	add    edi,r8d
  41402a:	test   edi,edi
  41402c:	jle    414010 <__flatcc_fb_gen_c_json_parser@@Base+0x3d20>
  41402e:	jmp    41425d <__flatcc_fb_gen_c_json_parser@@Base+0x3f6d>
  414033:	xor    edx,edx
  414035:	xor    r15d,r15d
  414038:	jmp    41419f <__flatcc_fb_gen_c_json_parser@@Base+0x3eaf>
  41403d:	add    esi,0x1
  414040:	and    esi,0xf
  414043:	mov    rcx,rsi
  414046:	sub    rcx,rdx
  414049:	add    rcx,rdi
  41404c:	vmovq  xmm1,rdi
  414051:	vpbroadcastq ymm1,xmm1
  414056:	vpaddq ymm7,ymm1,YMMWORD PTR [rip+0x2f462]        # 4434c0 <_IO_stdin_used@@Base+0x144c0>
  41405e:	sub    rdx,rsi
  414061:	vpxor  xmm9,xmm9,xmm9
  414066:	vpxor  xmm10,xmm10,xmm10
  41406b:	vpxor  xmm11,xmm11,xmm11
  414070:	vpxor  xmm12,xmm12,xmm12
  414075:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41407f:	nop
  414080:	vpaddq ymm2,ymm7,YMMWORD PTR [rip+0x2f458]        # 4434e0 <_IO_stdin_used@@Base+0x144e0>
  414088:	vmovq  rdi,xmm2
  41408d:	vmovd  xmm13,DWORD PTR [rbp+rdi*1-0x3]
  414093:	vmovd  xmm14,DWORD PTR [rbp+rdi*1-0x7]
  414099:	vpshufb xmm1,xmm13,xmm0
  41409e:	vpmovsxbq ymm13,xmm1
  4140a3:	vpshufb xmm1,xmm14,xmm0
  4140a8:	vpmovsxbq ymm1,xmm1
  4140ad:	vpsllq ymm2,ymm2,0x3
  4140b2:	vpsubq ymm2,ymm15,ymm2
  4140b6:	vpand  ymm2,ymm2,ymm5
  4140ba:	vpsllvq ymm2,ymm13,ymm2
  4140bf:	vpsllq ymm13,ymm7,0x3
  4140c4:	vpor   ymm9,ymm2,ymm9
  4140c9:	vpsubq ymm2,ymm8,ymm13
  4140ce:	vpand  ymm2,ymm2,ymm5
  4140d2:	vpsllvq ymm1,ymm1,ymm2
  4140d7:	vmovd  xmm2,DWORD PTR [rbp+rdi*1-0xb]
  4140dd:	vpshufb xmm2,xmm2,xmm0
  4140e2:	vpmovsxbq ymm2,xmm2
  4140e7:	vpor   ymm10,ymm1,ymm10
  4140ec:	vpsubq ymm1,ymm3,ymm13
  4140f1:	vpand  ymm1,ymm1,ymm5
  4140f5:	vpsllvq ymm1,ymm2,ymm1
  4140fa:	vpor   ymm11,ymm1,ymm11
  4140ff:	vmovd  xmm1,DWORD PTR [rbp+rdi*1-0xf]
  414105:	vpshufb xmm1,xmm1,xmm0
  41410a:	vpmovsxbq ymm1,xmm1
  41410f:	vpsubq ymm2,ymm4,ymm13
  414114:	vpand  ymm2,ymm2,ymm5
  414118:	vpsllvq ymm1,ymm1,ymm2
  41411d:	vpor   ymm12,ymm1,ymm12
  414122:	vpaddq ymm7,ymm7,ymm6
  414126:	add    rdx,0xfffffffffffffff0
  41412a:	jne    414080 <__flatcc_fb_gen_c_json_parser@@Base+0x3d90>
  414130:	vpor   ymm0,ymm10,ymm9
  414135:	vpor   ymm0,ymm11,ymm0
  414139:	vpor   ymm0,ymm12,ymm0
  41413d:	vextracti128 xmm1,ymm0,0x1
  414143:	vpor   ymm0,ymm0,ymm1
  414147:	vpshufd xmm1,xmm0,0x4e
  41414c:	vpor   ymm0,ymm0,ymm1
  414150:	vmovq  rdx,xmm0
  414155:	test   esi,esi
  414157:	je     41419f <__flatcc_fb_gen_c_json_parser@@Base+0x3eaf>
  414159:	lea    rdi,[rcx*8+0x0]
  414161:	mov    ebx,0x40
  414166:	sub    rbx,rdi
  414169:	mov    rsi,QWORD PTR [rsp+0x8]
  41416e:	add    rax,rsi
  414171:	add    rax,0xffffffffffffffff
  414175:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41417f:	nop
  414180:	movsx  rdi,BYTE PTR [rax+rcx*1]
  414185:	add    rcx,0xffffffffffffffff
  414189:	mov    esi,ebx
  41418b:	and    sil,0xf8
  41418f:	shlx   rsi,rdi,rsi
  414194:	or     rdx,rsi
  414197:	add    rbx,0x8
  41419b:	test   ecx,ecx
  41419d:	jne    414180 <__flatcc_fb_gen_c_json_parser@@Base+0x3e90>
  41419f:	lea    rsi,[rip+0x30271]        # 444417 <_IO_stdin_used@@Base+0x15417>
  4141a6:	xor    eax,eax
  4141a8:	mov    rbx,QWORD PTR [rsp+0x40]
  4141ad:	mov    rdi,rbx
  4141b0:	mov    ecx,r15d
  4141b3:	mov    r8,rbp
  4141b6:	vzeroupper 
  4141b9:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4141be:	add    DWORD PTR [rbx+0xf0],0x1
  4141c5:	lea    ecx,[r12-0x1]
  4141ca:	mov    rdi,rbx
  4141cd:	mov    r14,QWORD PTR [rsp+0x20]
  4141d2:	mov    rsi,r14
  4141d5:	mov    rdx,QWORD PTR [rsp+0x30]
  4141da:	mov    r8d,r13d
  4141dd:	call   413640 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  4141e2:	mov    eax,DWORD PTR [rbx+0xf0]
  4141e8:	test   eax,eax
  4141ea:	je     4147a9 <__flatcc_fb_gen_c_json_parser@@Base+0x44b9>
  4141f0:	add    eax,0xffffffff
  4141f3:	mov    DWORD PTR [rbx+0xf0],eax
  4141f9:	lea    rsi,[rip+0x30272]        # 444472 <_IO_stdin_used@@Base+0x15472>
  414200:	xor    eax,eax
  414202:	mov    rdi,rbx
  414205:	mov    edx,r15d
  414208:	mov    rcx,rbp
  41420b:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414210:	add    DWORD PTR [rbx+0xf0],0x1
  414217:	mov    rdi,rbx
  41421a:	mov    rsi,r14
  41421d:	mov    edx,r12d
  414220:	mov    ecx,DWORD PTR [rsp+0x4]
  414224:	mov    r8d,r13d
  414227:	call   413640 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  41422c:	mov    eax,DWORD PTR [rbx+0xf0]
  414232:	test   eax,eax
  414234:	je     4147c8 <__flatcc_fb_gen_c_json_parser@@Base+0x44d8>
  41423a:	add    eax,0xffffffff
  41423d:	mov    DWORD PTR [rbx+0xf0],eax
  414243:	lea    rsi,[rip+0x30245]        # 44448f <_IO_stdin_used@@Base+0x1548f>
  41424a:	xor    eax,eax
  41424c:	mov    rdi,rbx
  41424f:	mov    edx,r15d
  414252:	mov    rcx,rbp
  414255:	jmp    414781 <__flatcc_fb_gen_c_json_parser@@Base+0x4491>
  41425a:	add    ebx,0x1
  41425d:	mov    esi,ebx
  41425f:	mov    DWORD PTR [rsp+0x18],0x0
  414267:	cmp    esi,r15d
  41426a:	mov    QWORD PTR [rsp+0x38],rsi
  41426f:	jge    414314 <__flatcc_fb_gen_c_json_parser@@Base+0x4024>
  414275:	xor    ecx,ecx
  414277:	mov    eax,0x0
  41427c:	cmp    esi,edx
  41427e:	jle    41429c <__flatcc_fb_gen_c_json_parser@@Base+0x3fac>
  414280:	movsxd rax,esi
  414283:	shl    rax,0x5
  414287:	mov    eax,DWORD PTR [r14+rax*1-0x18]
  41428c:	cmp    ebp,eax
  41428e:	setge  dl
  414291:	sub    eax,r13d
  414294:	cmp    eax,0x8
  414297:	sete   al
  41429a:	and    al,dl
  41429c:	mov    QWORD PTR [rsp+0x48],rax
  4142a1:	movsxd r8,esi
  4142a4:	shl    r8,0x5
  4142a8:	mov    ebp,DWORD PTR [r14+r8*1+0x8]
  4142ad:	mov    esi,ebp
  4142af:	mov    edx,0x0
  4142b4:	mov    r12d,0x0
  4142ba:	sub    esi,r13d
  4142bd:	jl     41448f <__flatcc_fb_gen_c_json_parser@@Base+0x419f>
  4142c3:	mov    rax,QWORD PTR [r14+r8*1]
  4142c7:	mov    rdx,QWORD PTR [rsp+0x8]
  4142cc:	lea    r12,[rax+rdx*1]
  4142d0:	cmp    esi,0x9
  4142d3:	mov    ecx,0x8
  4142d8:	cmovl  ecx,esi
  4142db:	test   ecx,ecx
  4142dd:	je     41432f <__flatcc_fb_gen_c_json_parser@@Base+0x403f>
  4142df:	lea    edx,[rcx+0x1]
  4142e2:	movsxd rdi,edx
  4142e5:	add    rdi,0xffffffffffffffff
  4142e9:	not    ebp
  4142eb:	add    ebp,r13d
  4142ee:	cmp    ebp,0xfffffff6
  4142f1:	mov    edx,0xfffffff7
  4142f6:	cmovg  edx,ebp
  4142f9:	mov    esi,0xfffffffe
  4142fe:	sub    esi,edx
  414300:	lea    rdx,[rsi+0x1]
  414304:	cmp    rdx,0x10
  414308:	jae    414338 <__flatcc_fb_gen_c_json_parser@@Base+0x4048>
  41430a:	xor    edx,edx
  41430c:	mov    rbx,rdi
  41430f:	jmp    41444d <__flatcc_fb_gen_c_json_parser@@Base+0x415d>
  414314:	lea    r12,[rip+0x1ca18]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41431b:	xor    eax,eax
  41431d:	mov    QWORD PTR [rsp+0x10],rax
  414322:	mov    r14d,esi
  414325:	mov    rbp,QWORD PTR [rsp+0x40]
  41432a:	jmp    414617 <__flatcc_fb_gen_c_json_parser@@Base+0x4327>
  41432f:	xor    edx,edx
  414331:	xor    ecx,ecx
  414333:	jmp    41448f <__flatcc_fb_gen_c_json_parser@@Base+0x419f>
  414338:	add    esi,0x1
  41433b:	and    esi,0xf
  41433e:	mov    rbx,rsi
  414341:	sub    rbx,rdx
  414344:	add    rbx,rdi
  414347:	vmovq  xmm1,rdi
  41434c:	vpbroadcastq ymm1,xmm1
  414351:	vpaddq ymm7,ymm1,YMMWORD PTR [rip+0x2f167]        # 4434c0 <_IO_stdin_used@@Base+0x144c0>
  414359:	sub    rdx,rsi
  41435c:	vpxor  xmm9,xmm9,xmm9
  414361:	vpxor  xmm10,xmm10,xmm10
  414366:	vpxor  xmm11,xmm11,xmm11
  41436b:	vpxor  xmm12,xmm12,xmm12
  414370:	vpaddq ymm2,ymm7,YMMWORD PTR [rip+0x2f168]        # 4434e0 <_IO_stdin_used@@Base+0x144e0>
  414378:	vmovq  rdi,xmm2
  41437d:	vmovd  xmm13,DWORD PTR [r12+rdi*1-0x3]
  414384:	vmovd  xmm14,DWORD PTR [r12+rdi*1-0x7]
  41438b:	vpshufb xmm1,xmm13,xmm0
  414390:	vpmovsxbq ymm13,xmm1
  414395:	vpshufb xmm1,xmm14,xmm0
  41439a:	vpmovsxbq ymm1,xmm1
  41439f:	vpsllq ymm2,ymm2,0x3
  4143a4:	vpsubq ymm2,ymm15,ymm2
  4143a8:	vpand  ymm2,ymm2,ymm5
  4143ac:	vpsllvq ymm2,ymm13,ymm2
  4143b1:	vpsllq ymm13,ymm7,0x3
  4143b6:	vpor   ymm9,ymm2,ymm9
  4143bb:	vpsubq ymm2,ymm8,ymm13
  4143c0:	vpand  ymm2,ymm2,ymm5
  4143c4:	vpsllvq ymm1,ymm1,ymm2
  4143c9:	vmovd  xmm2,DWORD PTR [r12+rdi*1-0xb]
  4143d0:	vpshufb xmm2,xmm2,xmm0
  4143d5:	vpmovsxbq ymm2,xmm2
  4143da:	vpor   ymm10,ymm1,ymm10
  4143df:	vpsubq ymm1,ymm3,ymm13
  4143e4:	vpand  ymm1,ymm1,ymm5
  4143e8:	vpsllvq ymm1,ymm2,ymm1
  4143ed:	vpor   ymm11,ymm1,ymm11
  4143f2:	vmovd  xmm1,DWORD PTR [r12+rdi*1-0xf]
  4143f9:	vpshufb xmm1,xmm1,xmm0
  4143fe:	vpmovsxbq ymm1,xmm1
  414403:	vpsubq ymm2,ymm4,ymm13
  414408:	vpand  ymm2,ymm2,ymm5
  41440c:	vpsllvq ymm1,ymm1,ymm2
  414411:	vpor   ymm12,ymm1,ymm12
  414416:	vpaddq ymm7,ymm7,ymm6
  41441a:	add    rdx,0xfffffffffffffff0
  41441e:	jne    414370 <__flatcc_fb_gen_c_json_parser@@Base+0x4080>
  414424:	vpor   ymm0,ymm10,ymm9
  414429:	vpor   ymm0,ymm11,ymm0
  41442d:	vpor   ymm0,ymm12,ymm0
  414431:	vextracti128 xmm1,ymm0,0x1
  414437:	vpor   ymm0,ymm0,ymm1
  41443b:	vpshufd xmm1,xmm0,0x4e
  414440:	vpor   ymm0,ymm0,ymm1
  414444:	vmovq  rdx,xmm0
  414449:	test   esi,esi
  41444b:	je     41448f <__flatcc_fb_gen_c_json_parser@@Base+0x419f>
  41444d:	lea    rdi,[rbx*8+0x0]
  414455:	mov    ebp,0x40
  41445a:	sub    rbp,rdi
  41445d:	mov    rsi,QWORD PTR [rsp+0x8]
  414462:	add    rax,rsi
  414465:	add    rax,0xffffffffffffffff
  414469:	nop    DWORD PTR [rax+0x0]
  414470:	movsx  rdi,BYTE PTR [rax+rbx*1]
  414475:	add    rbx,0xffffffffffffffff
  414479:	mov    esi,ebp
  41447b:	and    sil,0xf8
  41447f:	shlx   rsi,rdi,rsi
  414484:	or     rdx,rsi
  414487:	add    rbp,0x8
  41448b:	test   ebx,ebx
  41448d:	jne    414470 <__flatcc_fb_gen_c_json_parser@@Base+0x4180>
  41448f:	mov    r14,r8
  414492:	mov    DWORD PTR [rsp+0x8],r9d
  414497:	lea    rsi,[rip+0x30007]        # 4444a5 <_IO_stdin_used@@Base+0x154a5>
  41449e:	xor    eax,eax
  4144a0:	mov    rbp,QWORD PTR [rsp+0x40]
  4144a5:	mov    rdi,rbp
  4144a8:	mov    rbx,rcx
  4144ab:	mov    r8,r12
  4144ae:	vzeroupper 
  4144b1:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4144b6:	add    DWORD PTR [rbp+0xf0],0x1
  4144bd:	cmp    BYTE PTR [rsp+0x48],0x0
  4144c2:	mov    QWORD PTR [rsp+0x10],rbx
  4144c7:	je     414593 <__flatcc_fb_gen_c_json_parser@@Base+0x42a3>
  4144cd:	lea    rsi,[rip+0x2fff8]        # 4444cc <_IO_stdin_used@@Base+0x154cc>
  4144d4:	xor    eax,eax
  4144d6:	mov    rdi,rbp
  4144d9:	mov    edx,ebx
  4144db:	mov    rcx,r12
  4144de:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4144e3:	mov    rbx,QWORD PTR [rsp+0x20]
  4144e8:	mov    rax,QWORD PTR [rbx]
  4144eb:	mov    rsi,QWORD PTR [rbx+0x18]
  4144ef:	mov    rdx,QWORD PTR [rax+r14*1-0x10]
  4144f4:	mov    ecx,DWORD PTR [rax+r14*1-0x8]
  4144f9:	mov    r8d,0x8
  4144ff:	mov    rdi,rbp
  414502:	call   QWORD PTR [rbx+0x8]
  414505:	lea    rsi,[rip+0x2ffe0]        # 4444ec <_IO_stdin_used@@Base+0x154ec>
  41450c:	xor    eax,eax
  41450e:	mov    rdi,rbp
  414511:	mov    rdx,QWORD PTR [rsp+0x10]
  414516:	mov    rcx,r12
  414519:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41451e:	lea    rsi,[rip+0x2ffe3]        # 444508 <_IO_stdin_used@@Base+0x15508>
  414525:	xor    eax,eax
  414527:	mov    rdi,rbp
  41452a:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41452f:	lea    rsi,[rip+0x2fd30]        # 444266 <_IO_stdin_used@@Base+0x15266>
  414536:	xor    eax,eax
  414538:	mov    rdi,rbp
  41453b:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414540:	mov    rdi,rbp
  414543:	mov    rsi,rbx
  414546:	mov    rbx,QWORD PTR [rsp+0x38]
  41454b:	mov    edx,ebx
  41454d:	mov    ecx,DWORD PTR [rsp+0x8]
  414551:	mov    r8d,DWORD PTR [rsp+0x2c]
  414556:	call   413640 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  41455b:	mov    eax,DWORD PTR [rbp+0xf0]
  414561:	test   eax,eax
  414563:	je     414828 <__flatcc_fb_gen_c_json_parser@@Base+0x4538>
  414569:	lea    r14d,[rbx-0x1]
  41456d:	add    eax,0xffffffff
  414570:	mov    DWORD PTR [rbp+0xf0],eax
  414576:	lea    rsi,[rip+0x2ff95]        # 444512 <_IO_stdin_used@@Base+0x15512>
  41457d:	xor    eax,eax
  41457f:	mov    rdi,rbp
  414582:	mov    rbx,QWORD PTR [rsp+0x10]
  414587:	mov    edx,ebx
  414589:	mov    rcx,r12
  41458c:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414591:	jmp    4145da <__flatcc_fb_gen_c_json_parser@@Base+0x42ea>
  414593:	lea    rsi,[rip+0x2ff6e]        # 444508 <_IO_stdin_used@@Base+0x15508>
  41459a:	xor    eax,eax
  41459c:	mov    rdi,rbp
  41459f:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4145a4:	lea    rsi,[rip+0x2fcbb]        # 444266 <_IO_stdin_used@@Base+0x15266>
  4145ab:	xor    eax,eax
  4145ad:	mov    rdi,rbp
  4145b0:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4145b5:	mov    rdi,rbp
  4145b8:	mov    rsi,QWORD PTR [rsp+0x20]
  4145bd:	mov    rbx,QWORD PTR [rsp+0x38]
  4145c2:	mov    edx,ebx
  4145c4:	mov    ecx,DWORD PTR [rsp+0x8]
  4145c8:	mov    r8d,DWORD PTR [rsp+0x2c]
  4145cd:	call   413640 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  4145d2:	mov    r14d,ebx
  4145d5:	mov    rbx,QWORD PTR [rsp+0x10]
  4145da:	mov    eax,DWORD PTR [rbp+0xf0]
  4145e0:	test   eax,eax
  4145e2:	je     4147e7 <__flatcc_fb_gen_c_json_parser@@Base+0x44f7>
  4145e8:	add    eax,0xffffffff
  4145eb:	mov    DWORD PTR [rbp+0xf0],eax
  4145f1:	lea    rsi,[rip+0x2ff37]        # 44452f <_IO_stdin_used@@Base+0x1552f>
  4145f8:	xor    eax,eax
  4145fa:	mov    rdi,rbp
  4145fd:	mov    edx,ebx
  4145ff:	mov    rcx,r12
  414602:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414607:	add    DWORD PTR [rbp+0xf0],0x1
  41460e:	mov    ecx,DWORD PTR [rsp+0x4]
  414612:	mov    rdx,QWORD PTR [rsp+0x30]
  414617:	cmp    r14d,edx
  41461a:	setg   al
  41461d:	cmp    r15d,ecx
  414620:	setle  bl
  414623:	and    bl,al
  414625:	cmp    bl,0x1
  414628:	jne    41463c <__flatcc_fb_gen_c_json_parser@@Base+0x434c>
  41462a:	mov    rax,QWORD PTR [rsp+0x20]
  41462f:	mov    esi,DWORD PTR [rax+0x28]
  414632:	add    esi,0x1
  414635:	mov    DWORD PTR [rsp+0x18],esi
  414639:	mov    DWORD PTR [rax+0x28],esi
  41463c:	cmp    r14d,edx
  41463f:	jle    4146bf <__flatcc_fb_gen_c_json_parser@@Base+0x43cf>
  414641:	lea    ecx,[r14-0x1]
  414645:	mov    rdi,rbp
  414648:	mov    rsi,QWORD PTR [rsp+0x20]
  41464d:	mov    r8d,r13d
  414650:	mov    r9d,DWORD PTR [rsp+0x18]
  414655:	vzeroupper 
  414658:	call   414880 <__flatcc_fb_gen_c_json_parser@@Base+0x4590>
  41465d:	mov    rdx,QWORD PTR [rsp+0x30]
  414662:	mov    ecx,DWORD PTR [rsp+0x4]
  414666:	test   bl,bl
  414668:	je     4146bf <__flatcc_fb_gen_c_json_parser@@Base+0x43cf>
  41466a:	lea    rsi,[rip+0x2fedc]        # 44454d <_IO_stdin_used@@Base+0x1554d>
  414671:	xor    eax,eax
  414673:	mov    rdi,rbp
  414676:	mov    edx,DWORD PTR [rsp+0x18]
  41467a:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41467f:	mov    eax,DWORD PTR [rbp+0xf0]
  414685:	mov    DWORD PTR [rbp+0xf8],eax
  41468b:	mov    DWORD PTR [rbp+0xf0],0x0
  414695:	lea    rsi,[rip+0x2fec7]        # 444563 <_IO_stdin_used@@Base+0x15563>
  41469c:	xor    eax,eax
  41469e:	mov    rdi,rbp
  4146a1:	mov    edx,DWORD PTR [rsp+0x18]
  4146a5:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4146aa:	mov    rdx,QWORD PTR [rsp+0x30]
  4146af:	mov    ecx,DWORD PTR [rsp+0x4]
  4146b3:	mov    eax,DWORD PTR [rbp+0xf8]
  4146b9:	mov    DWORD PTR [rbp+0xf0],eax
  4146bf:	cmp    r15d,ecx
  4146c2:	jle    4146e8 <__flatcc_fb_gen_c_json_parser@@Base+0x43f8>
  4146c4:	cmp    r14d,edx
  4146c7:	jg     4146fe <__flatcc_fb_gen_c_json_parser@@Base+0x440e>
  4146c9:	mov    rdi,rbp
  4146cc:	mov    rax,QWORD PTR [rsp+0x20]
  4146d1:	vzeroupper 
  4146d4:	call   QWORD PTR [rax+0x10]
  4146d7:	mov    rbx,QWORD PTR [rsp+0x10]
  4146dc:	cmp    DWORD PTR [rsp+0x38],r15d
  4146e1:	jl     414759 <__flatcc_fb_gen_c_json_parser@@Base+0x4469>
  4146e3:	jmp    414797 <__flatcc_fb_gen_c_json_parser@@Base+0x44a7>
  4146e8:	mov    rdi,rbp
  4146eb:	mov    rsi,QWORD PTR [rsp+0x20]
  4146f0:	mov    edx,r15d
  4146f3:	mov    r8d,r13d
  4146f6:	vzeroupper 
  4146f9:	call   413640 <__flatcc_fb_gen_c_json_parser@@Base+0x3350>
  4146fe:	test   bl,bl
  414700:	mov    rbx,QWORD PTR [rsp+0x10]
  414705:	je     414752 <__flatcc_fb_gen_c_json_parser@@Base+0x4462>
  414707:	mov    eax,DWORD PTR [rbp+0xf0]
  41470d:	mov    DWORD PTR [rbp+0xf8],eax
  414713:	mov    DWORD PTR [rbp+0xf0],0x0
  41471d:	lea    rsi,[rip+0x2fe3c]        # 444560 <_IO_stdin_used@@Base+0x15560>
  414724:	xor    eax,eax
  414726:	mov    rdi,rbp
  414729:	mov    edx,DWORD PTR [rsp+0x18]
  41472d:	vzeroupper 
  414730:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414735:	mov    eax,DWORD PTR [rbp+0xf8]
  41473b:	mov    DWORD PTR [rbp+0xf0],eax
  414741:	lea    rsi,[rip+0x2fe26]        # 44456e <_IO_stdin_used@@Base+0x1556e>
  414748:	xor    eax,eax
  41474a:	mov    rdi,rbp
  41474d:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414752:	cmp    DWORD PTR [rsp+0x38],r15d
  414757:	jge    414797 <__flatcc_fb_gen_c_json_parser@@Base+0x44a7>
  414759:	mov    eax,DWORD PTR [rbp+0xf0]
  41475f:	test   eax,eax
  414761:	je     414806 <__flatcc_fb_gen_c_json_parser@@Base+0x4516>
  414767:	add    eax,0xffffffff
  41476a:	mov    DWORD PTR [rbp+0xf0],eax
  414770:	lea    rsi,[rip+0x2fe00]        # 444577 <_IO_stdin_used@@Base+0x15577>
  414777:	xor    eax,eax
  414779:	mov    rdi,rbp
  41477c:	mov    edx,ebx
  41477e:	mov    rcx,r12
  414781:	add    rsp,0x58
  414785:	pop    rbx
  414786:	pop    r12
  414788:	pop    r13
  41478a:	pop    r14
  41478c:	pop    r15
  41478e:	pop    rbp
  41478f:	vzeroupper 
  414792:	jmp    412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414797:	add    rsp,0x58
  41479b:	pop    rbx
  41479c:	pop    r12
  41479e:	pop    r13
  4147a0:	pop    r14
  4147a2:	pop    r15
  4147a4:	pop    rbp
  4147a5:	vzeroupper 
  4147a8:	ret    
  4147a9:	lea    rdi,[rip+0x2f0c1]        # 443871 <_IO_stdin_used@@Base+0x14871>
  4147b0:	lea    rsi,[rip+0x2f0c6]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  4147b7:	lea    rcx,[rip+0x2fc7e]        # 44443c <_IO_stdin_used@@Base+0x1543c>
  4147be:	mov    edx,0x3cd
  4147c3:	call   406100 <__assert_fail@plt>
  4147c8:	lea    rdi,[rip+0x2f0a2]        # 443871 <_IO_stdin_used@@Base+0x14871>
  4147cf:	lea    rsi,[rip+0x2f0a7]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  4147d6:	lea    rcx,[rip+0x2fc5f]        # 44443c <_IO_stdin_used@@Base+0x1543c>
  4147dd:	mov    edx,0x3cf
  4147e2:	call   406100 <__assert_fail@plt>
  4147e7:	lea    rdi,[rip+0x2f083]        # 443871 <_IO_stdin_used@@Base+0x14871>
  4147ee:	lea    rsi,[rip+0x2f088]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  4147f5:	lea    rcx,[rip+0x2fc40]        # 44443c <_IO_stdin_used@@Base+0x1543c>
  4147fc:	mov    edx,0x414
  414801:	call   406100 <__assert_fail@plt>
  414806:	lea    rdi,[rip+0x2f064]        # 443871 <_IO_stdin_used@@Base+0x14871>
  41480d:	lea    rsi,[rip+0x2f069]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  414814:	lea    rcx,[rip+0x2fc21]        # 44443c <_IO_stdin_used@@Base+0x1543c>
  41481b:	mov    edx,0x430
  414820:	vzeroupper 
  414823:	call   406100 <__assert_fail@plt>
  414828:	lea    rdi,[rip+0x2f042]        # 443871 <_IO_stdin_used@@Base+0x14871>
  41482f:	lea    rsi,[rip+0x2f047]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  414836:	lea    rcx,[rip+0x2fbff]        # 44443c <_IO_stdin_used@@Base+0x1543c>
  41483d:	mov    edx,0x410
  414842:	call   406100 <__assert_fail@plt>
  414847:	nop    WORD PTR [rax+rax*1+0x0]
  414850:	push   rbx
  414851:	mov    eax,DWORD PTR [rdi+0x8]
  414854:	mov    ecx,DWORD PTR [rsi+0x8]
  414857:	mov    ebx,eax
  414859:	sub    ebx,ecx
  41485b:	cmovg  eax,ecx
  41485e:	mov    rdi,QWORD PTR [rdi]
  414861:	mov    rsi,QWORD PTR [rsi]
  414864:	movsxd rdx,eax
  414867:	call   406140 <memcmp@plt>
  41486c:	test   eax,eax
  41486e:	cmove  eax,ebx
  414871:	pop    rbx
  414872:	ret    
  414873:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41487d:	nop    DWORD PTR [rax]
  414880:	push   rbp
  414881:	push   r15
  414883:	push   r14
  414885:	push   r13
  414887:	push   r12
  414889:	push   rbx
  41488a:	sub    rsp,0x28
  41488e:	mov    DWORD PTR [rsp],r9d
  414892:	mov    r13d,ecx
  414895:	mov    r14,rdi
  414898:	sub    ecx,edx
  41489a:	lea    eax,[rcx+0x1]
  41489d:	shr    eax,0x1f
  4148a0:	mov    QWORD PTR [rsp+0x20],rcx
  4148a5:	lea    eax,[rcx+rax*1]
  4148a8:	add    eax,0x1
  4148ab:	sar    eax,1
  4148ad:	mov    DWORD PTR [rsp+0x1c],edx
  4148b1:	add    eax,edx
  4148b3:	mov    QWORD PTR [rsp+0x10],rsi
  4148b8:	mov    rcx,QWORD PTR [rsi]
  4148bb:	mov    DWORD PTR [rsp+0xc],eax
  4148bf:	movsxd r15,eax
  4148c2:	shl    r15,0x5
  4148c6:	mov    edi,DWORD PTR [rcx+r15*1+0x8]
  4148cb:	xor    r12d,r12d
  4148ce:	mov    r10d,edi
  4148d1:	mov    ebx,0x0
  4148d6:	mov    ebp,0x0
  4148db:	mov    edx,0x0
  4148e0:	sub    r10d,r8d
  4148e3:	mov    DWORD PTR [rsp+0x8],r8d
  4148e8:	jl     414b38 <__flatcc_fb_gen_c_json_parser@@Base+0x4848>
  4148ee:	mov    rax,QWORD PTR [rcx+r15*1]
  4148f2:	movsxd r9,r8d
  4148f5:	lea    r12,[rax+r9*1]
  4148f9:	cmp    r10d,0x9
  4148fd:	mov    ecx,0x8
  414902:	cmovl  ecx,r10d
  414906:	test   ecx,ecx
  414908:	je     414944 <__flatcc_fb_gen_c_json_parser@@Base+0x4654>
  41490a:	lea    edx,[rcx+0x1]
  41490d:	movsxd rsi,edx
  414910:	add    rsi,0xffffffffffffffff
  414914:	not    edi
  414916:	add    edi,r8d
  414919:	cmp    edi,0xfffffff6
  41491c:	mov    ebp,0xfffffff7
  414921:	cmovg  ebp,edi
  414924:	mov    edx,0xfffffffe
  414929:	sub    edx,ebp
  41492b:	lea    rbp,[rdx+0x1]
  41492f:	cmp    rbp,0x10
  414933:	mov    DWORD PTR [rsp+0x4],r13d
  414938:	jae    41494d <__flatcc_fb_gen_c_json_parser@@Base+0x465d>
  41493a:	xor    ebp,ebp
  41493c:	mov    rdi,rsi
  41493f:	jmp    414aaf <__flatcc_fb_gen_c_json_parser@@Base+0x47bf>
  414944:	xor    ebx,ebx
  414946:	xor    ebp,ebp
  414948:	jmp    414b38 <__flatcc_fb_gen_c_json_parser@@Base+0x4848>
  41494d:	add    edx,0x1
  414950:	and    edx,0xf
  414953:	mov    rdi,rdx
  414956:	sub    rdi,rbp
  414959:	add    rdi,rsi
  41495c:	vmovq  xmm0,rsi
  414961:	vpbroadcastq ymm0,xmm0
  414966:	vpaddq ymm0,ymm0,YMMWORD PTR [rip+0x2eb52]        # 4434c0 <_IO_stdin_used@@Base+0x144c0>
  41496e:	sub    rbp,rdx
  414971:	vpxor  xmm1,xmm1,xmm1
  414975:	vpcmpeqd ymm14,ymm14,ymm14
  41497a:	vmovdqa xmm3,XMMWORD PTR [rip+0x2ec3e]        # 4435c0 <_IO_stdin_used@@Base+0x145c0>
  414982:	vpbroadcastq ymm15,QWORD PTR [rip+0x2eb8d]        # 443518 <_IO_stdin_used@@Base+0x14518>
  41498b:	vpbroadcastq ymm5,QWORD PTR [rip+0x2eb8c]        # 443520 <_IO_stdin_used@@Base+0x14520>
  414994:	vpbroadcastq ymm6,QWORD PTR [rip+0x2eb8b]        # 443528 <_IO_stdin_used@@Base+0x14528>
  41499d:	vpbroadcastq ymm7,QWORD PTR [rip+0x2eb8a]        # 443530 <_IO_stdin_used@@Base+0x14530>
  4149a6:	vpbroadcastq ymm8,QWORD PTR [rip+0x2eb89]        # 443538 <_IO_stdin_used@@Base+0x14538>
  4149af:	vpbroadcastq ymm9,QWORD PTR [rip+0x2eb88]        # 443540 <_IO_stdin_used@@Base+0x14540>
  4149b8:	vpxor  xmm10,xmm10,xmm10
  4149bd:	vpxor  xmm11,xmm11,xmm11
  4149c2:	vpxor  xmm12,xmm12,xmm12
  4149c7:	nop    WORD PTR [rax+rax*1+0x0]
  4149d0:	vpaddq ymm13,ymm0,ymm14
  4149d5:	vmovq  rsi,xmm13
  4149da:	vmovd  xmm2,DWORD PTR [r12+rsi*1-0x3]
  4149e1:	vmovd  xmm4,DWORD PTR [r12+rsi*1-0x7]
  4149e8:	vpshufb xmm2,xmm2,xmm3
  4149ed:	vpmovsxbq ymm2,xmm2
  4149f2:	vpshufb xmm4,xmm4,xmm3
  4149f7:	vpmovsxbq ymm4,xmm4
  4149fc:	vpsllq ymm13,ymm13,0x3
  414a02:	vpsubq ymm13,ymm15,ymm13
  414a07:	vpand  ymm13,ymm13,ymm8
  414a0c:	vpsllvq ymm2,ymm2,ymm13
  414a11:	vpsllq ymm13,ymm0,0x3
  414a16:	vpor   ymm1,ymm2,ymm1
  414a1a:	vpsubq ymm2,ymm5,ymm13
  414a1f:	vpand  ymm2,ymm2,ymm8
  414a24:	vpsllvq ymm2,ymm4,ymm2
  414a29:	vmovd  xmm4,DWORD PTR [r12+rsi*1-0xb]
  414a30:	vpshufb xmm4,xmm4,xmm3
  414a35:	vpmovsxbq ymm4,xmm4
  414a3a:	vpor   ymm10,ymm2,ymm10
  414a3f:	vpsubq ymm2,ymm6,ymm13
  414a44:	vpand  ymm2,ymm2,ymm8
  414a49:	vpsllvq ymm2,ymm4,ymm2
  414a4e:	vpor   ymm11,ymm2,ymm11
  414a53:	vmovd  xmm2,DWORD PTR [r12+rsi*1-0xf]
  414a5a:	vpshufb xmm2,xmm2,xmm3
  414a5f:	vpmovsxbq ymm2,xmm2
  414a64:	vpsubq ymm4,ymm7,ymm13
  414a69:	vpand  ymm4,ymm4,ymm8
  414a6e:	vpsllvq ymm2,ymm2,ymm4
  414a73:	vpor   ymm12,ymm2,ymm12
  414a78:	vpaddq ymm0,ymm0,ymm9
  414a7d:	add    rbp,0xfffffffffffffff0
  414a81:	jne    4149d0 <__flatcc_fb_gen_c_json_parser@@Base+0x46e0>
  414a87:	vpor   ymm0,ymm10,ymm1
  414a8b:	vpor   ymm0,ymm11,ymm0
  414a8f:	vpor   ymm0,ymm12,ymm0
  414a93:	vextracti128 xmm1,ymm0,0x1
  414a99:	vpor   ymm0,ymm0,ymm1
  414a9d:	vpshufd xmm1,xmm0,0x4e
  414aa2:	vpor   ymm0,ymm0,ymm1
  414aa6:	vmovq  rbp,xmm0
  414aab:	test   edx,edx
  414aad:	je     414aee <__flatcc_fb_gen_c_json_parser@@Base+0x47fe>
  414aaf:	lea    rsi,[rdi*8+0x0]
  414ab7:	mov    ebx,0x40
  414abc:	sub    rbx,rsi
  414abf:	lea    rsi,[rax+r9*1]
  414ac3:	add    rsi,0xffffffffffffffff
  414ac7:	nop    WORD PTR [rax+rax*1+0x0]
  414ad0:	movsx  rax,BYTE PTR [rsi+rdi*1]
  414ad5:	add    rdi,0xffffffffffffffff
  414ad9:	mov    edx,ebx
  414adb:	and    dl,0xf8
  414ade:	shlx   rax,rax,rdx
  414ae3:	or     rbp,rax
  414ae6:	add    rbx,0x8
  414aea:	test   edi,edi
  414aec:	jne    414ad0 <__flatcc_fb_gen_c_json_parser@@Base+0x47e0>
  414aee:	cmp    r10d,0x8
  414af2:	jl     414b1a <__flatcc_fb_gen_c_json_parser@@Base+0x482a>
  414af4:	lea    rsi,[rip+0x2fa93]        # 44458e <_IO_stdin_used@@Base+0x1558e>
  414afb:	xor    eax,eax
  414afd:	mov    rdi,r14
  414b00:	mov    rdx,rbp
  414b03:	mov    r8,r12
  414b06:	vzeroupper 
  414b09:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414b0e:	mov    ebp,0x8
  414b13:	mov    r13d,DWORD PTR [rsp+0x4]
  414b18:	jmp    414b58 <__flatcc_fb_gen_c_json_parser@@Base+0x4868>
  414b1a:	shl    ecx,0x3
  414b1d:	mov    eax,0x40
  414b22:	sub    eax,ecx
  414b24:	mov    rcx,0xffffffffffffffff
  414b2b:	shlx   rdx,rcx,rax
  414b30:	mov    ebx,r10d
  414b33:	mov    r13d,DWORD PTR [rsp+0x4]
  414b38:	lea    rsi,[rip+0x2fa6e]        # 4445ad <_IO_stdin_used@@Base+0x155ad>
  414b3f:	xor    eax,eax
  414b41:	mov    rdi,r14
  414b44:	mov    rcx,rbp
  414b47:	mov    rbp,rbx
  414b4a:	mov    r8d,ebx
  414b4d:	mov    r9,r12
  414b50:	vzeroupper 
  414b53:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414b58:	add    DWORD PTR [r14+0xf0],0x1
  414b60:	mov    rax,QWORD PTR [rsp+0x20]
  414b65:	add    eax,0x2
  414b68:	cmp    eax,0x2
  414b6b:	ja     414baf <__flatcc_fb_gen_c_json_parser@@Base+0x48bf>
  414b6d:	mov    rbx,QWORD PTR [rsp+0x10]
  414b72:	mov    rax,QWORD PTR [rbx]
  414b75:	mov    rsi,QWORD PTR [rbx+0x18]
  414b79:	mov    rdx,QWORD PTR [rax+r15*1+0x10]
  414b7e:	mov    ecx,DWORD PTR [rax+r15*1+0x18]
  414b83:	mov    rdi,r14
  414b86:	mov    r15,rbp
  414b89:	mov    r8d,r15d
  414b8c:	call   QWORD PTR [rbx+0x8]
  414b8f:	mov    ebp,DWORD PTR [rsp]
  414b92:	test   ebp,ebp
  414b94:	jle    414c25 <__flatcc_fb_gen_c_json_parser@@Base+0x4935>
  414b9a:	lea    rsi,[rip+0x2fa35]        # 4445d6 <_IO_stdin_used@@Base+0x155d6>
  414ba1:	xor    eax,eax
  414ba3:	mov    rdi,r14
  414ba6:	mov    edx,ebp
  414ba8:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414bad:	jmp    414c2b <__flatcc_fb_gen_c_json_parser@@Base+0x493b>
  414baf:	mov    edx,DWORD PTR [rsp+0xc]
  414bb3:	cmp    edx,r13d
  414bb6:	mov    ecx,r13d
  414bb9:	mov    rbx,QWORD PTR [rsp+0x10]
  414bbe:	mov    r13d,DWORD PTR [rsp]
  414bc2:	jne    414c03 <__flatcc_fb_gen_c_json_parser@@Base+0x4913>
  414bc4:	mov    rax,QWORD PTR [rbx]
  414bc7:	mov    rsi,QWORD PTR [rbx+0x18]
  414bcb:	mov    rdx,QWORD PTR [rax+r15*1+0x10]
  414bd0:	mov    ecx,DWORD PTR [rax+r15*1+0x18]
  414bd5:	mov    rdi,r14
  414bd8:	mov    r15,rbp
  414bdb:	mov    r8d,r15d
  414bde:	call   QWORD PTR [rbx+0x8]
  414be1:	test   r13d,r13d
  414be4:	jle    414cbb <__flatcc_fb_gen_c_json_parser@@Base+0x49cb>
  414bea:	lea    rsi,[rip+0x2f9e5]        # 4445d6 <_IO_stdin_used@@Base+0x155d6>
  414bf1:	xor    eax,eax
  414bf3:	mov    rdi,r14
  414bf6:	mov    edx,r13d
  414bf9:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414bfe:	jmp    414cc1 <__flatcc_fb_gen_c_json_parser@@Base+0x49d1>
  414c03:	mov    rdi,r14
  414c06:	mov    rsi,rbx
  414c09:	mov    r8d,DWORD PTR [rsp+0x8]
  414c0e:	mov    r9d,r13d
  414c11:	call   414880 <__flatcc_fb_gen_c_json_parser@@Base+0x4590>
  414c16:	lea    r13,[r14+0xf0]
  414c1d:	mov    r15,rbp
  414c20:	jmp    414cf2 <__flatcc_fb_gen_c_json_parser@@Base+0x4a02>
  414c25:	mov    rdi,r14
  414c28:	call   QWORD PTR [rbx+0x10]
  414c2b:	mov    eax,DWORD PTR [r14+0xf0]
  414c32:	test   eax,eax
  414c34:	je     414d9e <__flatcc_fb_gen_c_json_parser@@Base+0x4aae>
  414c3a:	add    eax,0xffffffff
  414c3d:	mov    DWORD PTR [r14+0xf0],eax
  414c44:	lea    rsi,[rip+0x1e461]        # 4330ac <_IO_stdin_used@@Base+0x40ac>
  414c4b:	xor    eax,eax
  414c4d:	mov    rdi,r14
  414c50:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414c55:	mov    eax,DWORD PTR [r14+0xf0]
  414c5c:	test   eax,eax
  414c5e:	je     414dbd <__flatcc_fb_gen_c_json_parser@@Base+0x4acd>
  414c64:	lea    r13,[r14+0xf0]
  414c6b:	add    eax,0xffffffff
  414c6e:	mov    DWORD PTR [r14+0xf0],eax
  414c75:	lea    rsi,[rip+0x2f9ac]        # 444628 <_IO_stdin_used@@Base+0x15628>
  414c7c:	xor    eax,eax
  414c7e:	mov    rdi,r14
  414c81:	mov    edx,r15d
  414c84:	mov    rcx,r12
  414c87:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414c8c:	add    DWORD PTR [r14+0xf0],0x1
  414c94:	test   ebp,ebp
  414c96:	jle    414cb0 <__flatcc_fb_gen_c_json_parser@@Base+0x49c0>
  414c98:	lea    rsi,[rip+0x2f937]        # 4445d6 <_IO_stdin_used@@Base+0x155d6>
  414c9f:	xor    eax,eax
  414ca1:	mov    rdi,r14
  414ca4:	mov    edx,ebp
  414ca6:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414cab:	jmp    414d48 <__flatcc_fb_gen_c_json_parser@@Base+0x4a58>
  414cb0:	mov    rdi,r14
  414cb3:	call   QWORD PTR [rbx+0x10]
  414cb6:	jmp    414d48 <__flatcc_fb_gen_c_json_parser@@Base+0x4a58>
  414cbb:	mov    rdi,r14
  414cbe:	call   QWORD PTR [rbx+0x10]
  414cc1:	mov    eax,DWORD PTR [r14+0xf0]
  414cc8:	test   eax,eax
  414cca:	je     414dfb <__flatcc_fb_gen_c_json_parser@@Base+0x4b0b>
  414cd0:	lea    r13,[r14+0xf0]
  414cd7:	add    eax,0xffffffff
  414cda:	mov    DWORD PTR [r14+0xf0],eax
  414ce1:	lea    rsi,[rip+0x1e3c4]        # 4330ac <_IO_stdin_used@@Base+0x40ac>
  414ce8:	xor    eax,eax
  414cea:	mov    rdi,r14
  414ced:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414cf2:	mov    eax,DWORD PTR [r13+0x0]
  414cf6:	test   eax,eax
  414cf8:	je     414ddc <__flatcc_fb_gen_c_json_parser@@Base+0x4aec>
  414cfe:	add    eax,0xffffffff
  414d01:	mov    DWORD PTR [r14+0xf0],eax
  414d08:	lea    rsi,[rip+0x2f919]        # 444628 <_IO_stdin_used@@Base+0x15628>
  414d0f:	xor    eax,eax
  414d11:	mov    rdi,r14
  414d14:	mov    edx,r15d
  414d17:	mov    rcx,r12
  414d1a:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414d1f:	add    DWORD PTR [r14+0xf0],0x1
  414d27:	mov    ecx,DWORD PTR [rsp+0xc]
  414d2b:	add    ecx,0xffffffff
  414d2e:	mov    rdi,r14
  414d31:	mov    rsi,QWORD PTR [rsp+0x10]
  414d36:	mov    edx,DWORD PTR [rsp+0x1c]
  414d3a:	mov    r8d,DWORD PTR [rsp+0x8]
  414d3f:	mov    r9d,DWORD PTR [rsp]
  414d43:	call   414880 <__flatcc_fb_gen_c_json_parser@@Base+0x4590>
  414d48:	mov    eax,DWORD PTR [r13+0x0]
  414d4c:	test   eax,eax
  414d4e:	je     414d7f <__flatcc_fb_gen_c_json_parser@@Base+0x4a8f>
  414d50:	add    eax,0xffffffff
  414d53:	mov    DWORD PTR [r14+0xf0],eax
  414d5a:	lea    rsi,[rip+0x2f8dd]        # 44463e <_IO_stdin_used@@Base+0x1563e>
  414d61:	xor    eax,eax
  414d63:	mov    rdi,r14
  414d66:	mov    edx,r15d
  414d69:	mov    rcx,r12
  414d6c:	add    rsp,0x28
  414d70:	pop    rbx
  414d71:	pop    r12
  414d73:	pop    r13
  414d75:	pop    r14
  414d77:	pop    r15
  414d79:	pop    rbp
  414d7a:	jmp    412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414d7f:	lea    rdi,[rip+0x2eaeb]        # 443871 <_IO_stdin_used@@Base+0x14871>
  414d86:	lea    rsi,[rip+0x2eaf0]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  414d8d:	lea    rcx,[rip+0x2f852]        # 4445e6 <_IO_stdin_used@@Base+0x155e6>
  414d94:	mov    edx,0x38e
  414d99:	call   406100 <__assert_fail@plt>
  414d9e:	lea    rdi,[rip+0x2eacc]        # 443871 <_IO_stdin_used@@Base+0x14871>
  414da5:	lea    rsi,[rip+0x2ead1]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  414dac:	lea    rcx,[rip+0x2f833]        # 4445e6 <_IO_stdin_used@@Base+0x155e6>
  414db3:	mov    edx,0x378
  414db8:	call   406100 <__assert_fail@plt>
  414dbd:	lea    rdi,[rip+0x2eaad]        # 443871 <_IO_stdin_used@@Base+0x14871>
  414dc4:	lea    rsi,[rip+0x2eab2]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  414dcb:	lea    rcx,[rip+0x2f814]        # 4445e6 <_IO_stdin_used@@Base+0x155e6>
  414dd2:	mov    edx,0x379
  414dd7:	call   406100 <__assert_fail@plt>
  414ddc:	lea    rdi,[rip+0x2ea8e]        # 443871 <_IO_stdin_used@@Base+0x14871>
  414de3:	lea    rsi,[rip+0x2ea93]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  414dea:	lea    rcx,[rip+0x2f7f5]        # 4445e6 <_IO_stdin_used@@Base+0x155e6>
  414df1:	mov    edx,0x38b
  414df6:	call   406100 <__assert_fail@plt>
  414dfb:	lea    rdi,[rip+0x2ea6f]        # 443871 <_IO_stdin_used@@Base+0x14871>
  414e02:	lea    rsi,[rip+0x2ea74]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  414e09:	lea    rcx,[rip+0x2f7d6]        # 4445e6 <_IO_stdin_used@@Base+0x155e6>
  414e10:	mov    edx,0x387
  414e15:	call   406100 <__assert_fail@plt>
  414e1a:	nop    WORD PTR [rax+rax*1+0x0]
  414e20:	push   rbp
  414e21:	mov    rbp,rsp
  414e24:	push   r15
  414e26:	push   r14
  414e28:	push   r13
  414e2a:	push   r12
  414e2c:	push   rbx
  414e2d:	and    rsp,0xffffffffffffffe0
  414e31:	sub    rsp,0x240
  414e38:	mov    DWORD PTR [rsp+0x24],ecx
  414e3c:	mov    r13,rdx
  414e3f:	mov    r15,rsi
  414e42:	mov    r12,rdi
  414e45:	lea    rsi,[rip+0x2fa06]        # 444852 <_IO_stdin_used@@Base+0x15852>
  414e4c:	xor    ebx,ebx
  414e4e:	xor    eax,eax
  414e50:	mov    edx,r8d
  414e53:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414e58:	lea    rsi,[rip+0x2fa36]        # 444895 <_IO_stdin_used@@Base+0x15895>
  414e5f:	xor    eax,eax
  414e61:	mov    rdi,r12
  414e64:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  414e69:	add    DWORD PTR [r12+0xf0],0x1
  414e72:	vxorps xmm0,xmm0,xmm0
  414e76:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  414e7f:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  414e88:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  414e91:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  414e9a:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  414ea3:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  414eac:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  414eb2:	mov    QWORD PTR [rsp+0x140],0x0
  414ebe:	mov    rdi,QWORD PTR [r15+0x18]
  414ec2:	lea    rsi,[rsp+0x150]
  414eca:	vzeroupper 
  414ecd:	call   408110 <__flatcc_fb_copy_scope@@Base>
  414ed2:	movzx  eax,WORD PTR [r15+0x10]
  414ed7:	mov    WORD PTR [rsp+0x3a],ax
  414edc:	movzx  eax,WORD PTR [r13+0x28]
  414ee1:	mov    r15d,0x0
  414ee7:	cmp    eax,0xf
  414eea:	ja     414f02 <__flatcc_fb_gen_c_json_parser@@Base+0x4c12>
  414eec:	mov    ecx,0x8280
  414ef1:	bt     ecx,eax
  414ef4:	mov    r15d,0x0
  414efa:	jae    414f02 <__flatcc_fb_gen_c_json_parser@@Base+0x4c12>
  414efc:	mov    r15d,0x1
  414f02:	lea    eax,[rax-0x7]
  414f05:	movzx  ecx,ax
  414f08:	cmp    ecx,0x8
  414f0b:	ja     415a90 <__flatcc_fb_gen_c_json_parser@@Base+0x57a0>
  414f11:	movzx  eax,ax
  414f14:	lea    rcx,[rip+0x2e655]        # 443570 <_IO_stdin_used@@Base+0x14570>
  414f1b:	movsxd rsi,DWORD PTR [rcx+rax*4]
  414f1f:	add    rsi,rcx
  414f22:	xor    edx,edx
  414f24:	xor    ecx,ecx
  414f26:	xor    r8d,r8d
  414f29:	mov    DWORD PTR [rsp+0xc],0x0
  414f31:	mov    DWORD PTR [rsp+0x1c],0x0
  414f39:	xor    r9d,r9d
  414f3c:	mov    DWORD PTR [rsp+0x8],0x0
  414f44:	mov    DWORD PTR [rsp+0x10],0x0
  414f4c:	mov    DWORD PTR [rsp+0x18],0x0
  414f54:	xor    edi,edi
  414f56:	xor    r14d,r14d
  414f59:	xor    eax,eax
  414f5b:	mov    QWORD PTR [rsp+0x28],rax
  414f60:	jmp    rsi
  414f62:	mov    DWORD PTR [rsp+0xc],0x1
  414f6a:	mov    DWORD PTR [rsp+0x1c],0x0
  414f72:	xor    r9d,r9d
  414f75:	mov    DWORD PTR [rsp+0x8],0x0
  414f7d:	mov    DWORD PTR [rsp+0x10],0x0
  414f85:	mov    DWORD PTR [rsp+0x18],0x0
  414f8d:	xor    edi,edi
  414f8f:	xor    r14d,r14d
  414f92:	xor    eax,eax
  414f94:	mov    QWORD PTR [rsp+0x28],rax
  414f99:	jmp    415099 <__flatcc_fb_gen_c_json_parser@@Base+0x4da9>
  414f9e:	mov    rsi,QWORD PTR [r13+0x18]
  414fa2:	mov    rdi,QWORD PTR [rsi+0x18]
  414fa6:	lea    rdx,[rsp+0x60]
  414fab:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  414fb0:	mov    rax,QWORD PTR [r13+0x18]
  414fb4:	movzx  ecx,WORD PTR [rax+0x10]
  414fb8:	xor    edx,edx
  414fba:	cmp    ecx,0x1
  414fbd:	sete   dl
  414fc0:	mov    DWORD PTR [rsp+0x10],edx
  414fc4:	xor    edx,edx
  414fc6:	test   cx,cx
  414fc9:	sete   dl
  414fcc:	mov    DWORD PTR [rsp+0x8],edx
  414fd0:	cmp    ecx,0x4
  414fd3:	sete   dl
  414fd6:	cmp    DWORD PTR [rsp+0x24],0x0
  414fdb:	sete   bl
  414fde:	and    bl,dl
  414fe0:	movzx  edx,bl
  414fe3:	mov    DWORD PTR [rsp+0x18],edx
  414fe7:	cmp    ecx,0x3
  414fea:	jne    415016 <__flatcc_fb_gen_c_json_parser@@Base+0x4d26>
  414fec:	mov    eax,DWORD PTR [rax+0x48]
  414fef:	mov    QWORD PTR [rsp+0x28],rax
  414ff4:	mov    DWORD PTR [rsp+0x1c],0x1
  414ffc:	mov    DWORD PTR [rsp+0xc],0x0
  415004:	mov    r9d,0x1
  41500a:	xor    edi,edi
  41500c:	xor    r14d,r14d
  41500f:	xor    ebx,ebx
  415011:	jmp    415099 <__flatcc_fb_gen_c_json_parser@@Base+0x4da9>
  415016:	mov    DWORD PTR [rsp+0xc],0x0
  41501e:	mov    DWORD PTR [rsp+0x1c],0x0
  415026:	xor    r9d,r9d
  415029:	xor    edi,edi
  41502b:	xor    r14d,r14d
  41502e:	xor    eax,eax
  415030:	mov    QWORD PTR [rsp+0x28],rax
  415035:	xor    ebx,ebx
  415037:	jmp    415099 <__flatcc_fb_gen_c_json_parser@@Base+0x4da9>
  415039:	xor    r8d,r8d
  41503c:	cmp    QWORD PTR [r13+0x90],0x0
  415044:	setne  r8b
  415048:	movzx  ecx,WORD PTR [r13+0x70]
  41504d:	mov    edx,ecx
  41504f:	and    edx,0x400
  415055:	and    ecx,0x800
  41505b:	mov    esi,DWORD PTR [r13+0x18]
  41505f:	mov    QWORD PTR [rsp+0x28],rsi
  415064:	mov    r9d,0x1
  41506a:	mov    DWORD PTR [rsp+0xc],0x0
  415072:	mov    DWORD PTR [rsp+0x1c],0x0
  41507a:	mov    DWORD PTR [rsp+0x8],0x0
  415082:	mov    DWORD PTR [rsp+0x10],0x0
  41508a:	mov    DWORD PTR [rsp+0x18],0x0
  415092:	mov    ebx,edx
  415094:	mov    edi,ecx
  415096:	mov    r14d,r8d
  415099:	or     edi,ebx
  41509b:	mov    DWORD PTR [rsp+0x34],edi
  41509f:	je     415103 <__flatcc_fb_gen_c_json_parser@@Base+0x4e13>
  4150a1:	test   r15d,r15d
  4150a4:	je     4150ba <__flatcc_fb_gen_c_json_parser@@Base+0x4dca>
  4150a6:	xor    edx,edx
  4150a8:	mov    esi,0x0
  4150ad:	mov    r14d,0x0
  4150b3:	cmp    DWORD PTR [rsp+0x28],0x4
  4150b8:	je     415109 <__flatcc_fb_gen_c_json_parser@@Base+0x4e19>
  4150ba:	mov    rax,QWORD PTR [rip+0x3df37]        # 452ff8 <stderr@GLIBC_2.2.5>
  4150c1:	mov    rdi,QWORD PTR [rax]
  4150c4:	lea    rsi,[rip+0x1bb4d]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  4150cb:	lea    rbx,[rip+0x2e7ab]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  4150d2:	lea    r8,[rip+0x2f81f]        # 4448f8 <_IO_stdin_used@@Base+0x158f8>
  4150d9:	mov    ecx,0x1d2
  4150de:	xor    eax,eax
  4150e0:	mov    rdx,rbx
  4150e3:	call   406180 <fprintf@plt>
  4150e8:	lea    rdi,[rip+0x2ca90]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  4150ef:	lea    rcx,[rip+0x2f83d]        # 444933 <_IO_stdin_used@@Base+0x15933>
  4150f6:	mov    edx,0x1d2
  4150fb:	mov    rsi,rbx
  4150fe:	call   406100 <__assert_fail@plt>
  415103:	mov    edx,r15d
  415106:	mov    esi,r9d
  415109:	xor    edi,edi
  41510b:	cmp    DWORD PTR [rsp+0x24],0x0
  415110:	setne  cl
  415113:	cmovne esi,edi
  415116:	mov    DWORD PTR [rsp+0x3c],esi
  41511a:	test   edx,edx
  41511c:	setne  al
  41511f:	and    al,cl
  415121:	mov    BYTE PTR [rsp+0x16],al
  415125:	cmovne edx,edi
  415128:	test   edx,edx
  41512a:	setne  cl
  41512d:	cmp    DWORD PTR [rsp+0x18],0x0
  415132:	setne  al
  415135:	and    al,cl
  415137:	mov    BYTE PTR [rsp+0x17],al
  41513b:	cmovne edx,edi
  41513e:	mov    DWORD PTR [rsp+0x20],edx
  415142:	test   r14d,r14d
  415145:	je     415161 <__flatcc_fb_gen_c_json_parser@@Base+0x4e71>
  415147:	lea    rsi,[rip+0x2f833]        # 444981 <_IO_stdin_used@@Base+0x15981>
  41514e:	xor    eax,eax
  415150:	mov    rdi,r12
  415153:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415158:	add    DWORD PTR [r12+0xf0],0x1
  415161:	cmp    DWORD PTR [rsp+0x24],0x0
  415166:	sete   BYTE PTR [rsp+0x7]
  41516b:	xor    eax,eax
  41516d:	test   ebx,ebx
  41516f:	sete   al
  415172:	mov    DWORD PTR [rsp+0x58],eax
  415176:	lea    rax,[rip+0x2f777]        # 4448f4 <_IO_stdin_used@@Base+0x158f4>
  41517d:	mov    QWORD PTR [rsp+0x40],rax
  415182:	mov    QWORD PTR [rsp+0x50],rax
  415187:	mov    QWORD PTR [rsp+0x48],r13
  41518c:	jmp    415310 <__flatcc_fb_gen_c_json_parser@@Base+0x5020>
  415191:	cmp    DWORD PTR [rsp+0x8],0x0
  415196:	je     4151a9 <__flatcc_fb_gen_c_json_parser@@Base+0x4eb9>
  415198:	xor    eax,eax
  41519a:	mov    rdi,r12
  41519d:	lea    rsi,[rip+0x2fd89]        # 444f2d <_IO_stdin_used@@Base+0x15f2d>
  4151a4:	jmp    41582c <__flatcc_fb_gen_c_json_parser@@Base+0x553c>
  4151a9:	cmp    DWORD PTR [rsp+0x18],0x0
  4151ae:	je     4151da <__flatcc_fb_gen_c_json_parser@@Base+0x4eea>
  4151b0:	mov    rcx,QWORD PTR [r13+0x88]
  4151b7:	mov    rdx,QWORD PTR [r13+0xa0]
  4151be:	cmp    BYTE PTR [rsp+0x17],0x0
  4151c3:	je     4152c8 <__flatcc_fb_gen_c_json_parser@@Base+0x4fd8>
  4151c9:	xor    eax,eax
  4151cb:	mov    rdi,r12
  4151ce:	lea    rsi,[rip+0x2fd88]        # 444f5d <_IO_stdin_used@@Base+0x15f5d>
  4151d5:	jmp    4152f1 <__flatcc_fb_gen_c_json_parser@@Base+0x5001>
  4151da:	cmp    DWORD PTR [rsp+0x24],0x0
  4151df:	je     4152d6 <__flatcc_fb_gen_c_json_parser@@Base+0x4fe6>
  4151e5:	xor    eax,eax
  4151e7:	mov    rdi,r12
  4151ea:	lea    rsi,[rip+0x2f8f3]        # 444ae4 <_IO_stdin_used@@Base+0x15ae4>
  4151f1:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4151f6:	add    DWORD PTR [r12+0xf0],0x2
  4151ff:	xor    eax,eax
  415201:	mov    rdi,r12
  415204:	lea    rsi,[rip+0x2f91d]        # 444b28 <_IO_stdin_used@@Base+0x15b28>
  41520b:	lea    rdx,[rsp+0x60]
  415210:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415215:	mov    rax,QWORD PTR [r12+0xd8]
  41521d:	mov    rdx,QWORD PTR [rax+0x110]
  415224:	xor    eax,eax
  415226:	mov    rdi,r12
  415229:	lea    rsi,[rip+0x2f90c]        # 444b3c <_IO_stdin_used@@Base+0x15b3c>
  415230:	lea    rcx,[rsp+0x150]
  415238:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41523d:	mov    rax,QWORD PTR [r12+0xd8]
  415245:	mov    rdx,QWORD PTR [rax+0x110]
  41524c:	xor    eax,eax
  41524e:	mov    rdi,r12
  415251:	lea    rsi,[rip+0x2f901]        # 444b59 <_IO_stdin_used@@Base+0x15b59>
  415258:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41525d:	mov    eax,DWORD PTR [r12+0xf0]
  415265:	test   eax,eax
  415267:	je     415bca <__flatcc_fb_gen_c_json_parser@@Base+0x58da>
  41526d:	mov    ecx,eax
  41526f:	add    ecx,0xffffffff
  415272:	mov    DWORD PTR [r12+0xf0],ecx
  41527a:	je     415bca <__flatcc_fb_gen_c_json_parser@@Base+0x58da>
  415280:	add    eax,0xfffffffe
  415283:	mov    DWORD PTR [r12+0xf0],eax
  41528b:	mov    rcx,QWORD PTR [r13+0x88]
  415292:	mov    rdx,QWORD PTR [r13+0xa0]
  415299:	cmp    BYTE PTR [rsp+0x16],0x0
  41529e:	je     4152e5 <__flatcc_fb_gen_c_json_parser@@Base+0x4ff5>
  4152a0:	xor    eax,eax
  4152a2:	mov    rdi,r12
  4152a5:	lea    rsi,[rip+0x2fd68]        # 445014 <_IO_stdin_used@@Base+0x16014>
  4152ac:	lea    r8,[rsp+0x60]
  4152b1:	mov    r9,r8
  4152b4:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4152b9:	cmp    BYTE PTR [rsp],0x0
  4152bd:	jne    4158f6 <__flatcc_fb_gen_c_json_parser@@Base+0x5606>
  4152c3:	jmp    4159a5 <__flatcc_fb_gen_c_json_parser@@Base+0x56b5>
  4152c8:	xor    eax,eax
  4152ca:	mov    rdi,r12
  4152cd:	lea    rsi,[rip+0x2fce8]        # 444fbc <_IO_stdin_used@@Base+0x15fbc>
  4152d4:	jmp    4152f1 <__flatcc_fb_gen_c_json_parser@@Base+0x5001>
  4152d6:	cmp    BYTE PTR [rsp],0x0
  4152da:	jne    4158f6 <__flatcc_fb_gen_c_json_parser@@Base+0x5606>
  4152e0:	jmp    415be9 <__flatcc_fb_gen_c_json_parser@@Base+0x58f9>
  4152e5:	xor    eax,eax
  4152e7:	mov    rdi,r12
  4152ea:	lea    rsi,[rip+0x2fdb4]        # 4450a5 <_IO_stdin_used@@Base+0x160a5>
  4152f1:	lea    r8,[rsp+0x60]
  4152f6:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4152fb:	cmp    BYTE PTR [rsp],0x0
  4152ff:	jne    4158f6 <__flatcc_fb_gen_c_json_parser@@Base+0x5606>
  415305:	jmp    4159a5 <__flatcc_fb_gen_c_json_parser@@Base+0x56b5>
  41530a:	nop    WORD PTR [rax+rax*1+0x0]
  415310:	cmp    r14d,0x2
  415314:	mov    DWORD PTR [rsp+0x5c],r14d
  415319:	jne    4153d0 <__flatcc_fb_gen_c_json_parser@@Base+0x50e0>
  41531f:	mov    eax,DWORD PTR [r12+0xf0]
  415327:	test   eax,eax
  415329:	je     415a9d <__flatcc_fb_gen_c_json_parser@@Base+0x57ad>
  41532f:	add    eax,0xffffffff
  415332:	mov    DWORD PTR [r12+0xf0],eax
  41533a:	mov    DWORD PTR [rsp],0x0
  415341:	xor    eax,eax
  415343:	mov    rdi,r12
  415346:	lea    rsi,[rip+0x2f668]        # 4449b5 <_IO_stdin_used@@Base+0x159b5>
  41534d:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415352:	add    DWORD PTR [r12+0xf0],0x1
  41535b:	mov    rsi,QWORD PTR [r13+0x90]
  415362:	mov    rdi,QWORD PTR [rsi+0x18]
  415366:	lea    rdx,[rsp+0x60]
  41536b:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  415370:	mov    rax,QWORD PTR [r13+0x90]
  415377:	cmp    WORD PTR [rax+0x10],0x0
  41537c:	mov    eax,DWORD PTR [rsp+0x8]
  415380:	mov    ecx,0x1
  415385:	cmove  eax,ecx
  415388:	mov    DWORD PTR [rsp+0x8],eax
  41538c:	mov    ebx,DWORD PTR [rsp+0x10]
  415390:	cmovne ebx,ecx
  415393:	xor    eax,eax
  415395:	mov    rdi,r12
  415398:	lea    rsi,[rip+0x2f62c]        # 4449cb <_IO_stdin_used@@Base+0x159cb>
  41539f:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4153a4:	mov    DWORD PTR [rsp+0x10],ebx
  4153a8:	test   ebx,ebx
  4153aa:	sete   bl
  4153ad:	mov    r14d,ebx
  4153b0:	and    r14b,BYTE PTR [rsp+0x7]
  4153b5:	mov    DWORD PTR [rsp+0x20],0x0
  4153bd:	mov    DWORD PTR [rsp+0x3c],0x0
  4153c5:	xor    r13d,r13d
  4153c8:	jmp    415697 <__flatcc_fb_gen_c_json_parser@@Base+0x53a7>
  4153cd:	nop    DWORD PTR [rax]
  4153d0:	mov    eax,DWORD PTR [rsp+0x10]
  4153d4:	test   eax,eax
  4153d6:	sete   r15b
  4153da:	mov    ecx,DWORD PTR [rsp+0x3c]
  4153de:	or     eax,ecx
  4153e0:	sete   bl
  4153e3:	test   ecx,ecx
  4153e5:	je     415444 <__flatcc_fb_gen_c_json_parser@@Base+0x5154>
  4153e7:	mov    rax,QWORD PTR [rsp+0x28]
  4153ec:	lea    eax,[rax-0x1]
  4153ef:	cmp    eax,0xa
  4153f2:	ja     415b19 <__flatcc_fb_gen_c_json_parser@@Base+0x5829>
  4153f8:	mov    r14b,0x1
  4153fb:	lea    rcx,[rip+0x2e192]        # 443594 <_IO_stdin_used@@Base+0x14594>
  415402:	movsxd rdx,DWORD PTR [rcx+rax*4]
  415406:	add    rdx,rcx
  415409:	lea    rax,[rip+0x22939]        # 437d49 <_IO_stdin_used@@Base+0x8d49>
  415410:	lea    rcx,[rip+0x21f85]        # 43739c <_IO_stdin_used@@Base+0x839c>
  415417:	lea    rsi,[rip+0x33fea]        # 449408 <fb_schema_table_deleted@@Base+0x14d8>
  41541e:	mov    QWORD PTR [rsp+0x40],rsi
  415423:	lea    rsi,[rip+0x21f84]        # 4373ae <_IO_stdin_used@@Base+0x83ae>
  41542a:	mov    QWORD PTR [rsp+0x50],rsi
  41542f:	jmp    rdx
  415431:	lea    rax,[rip+0x2290a]        # 437d42 <_IO_stdin_used@@Base+0x8d42>
  415438:	lea    rcx,[rip+0x21f54]        # 437393 <_IO_stdin_used@@Base+0x8393>
  41543f:	jmp    4154c0 <__flatcc_fb_gen_c_json_parser@@Base+0x51d0>
  415444:	xor    r14d,r14d
  415447:	jmp    4154ca <__flatcc_fb_gen_c_json_parser@@Base+0x51da>
  41544c:	lea    rax,[rip+0x22904]        # 437d57 <_IO_stdin_used@@Base+0x8d57>
  415453:	lea    rcx,[rip+0x21f54]        # 4373ae <_IO_stdin_used@@Base+0x83ae>
  41545a:	jmp    4154c0 <__flatcc_fb_gen_c_json_parser@@Base+0x51d0>
  41545c:	lea    rax,[rip+0x21f60]        # 4373c3 <_IO_stdin_used@@Base+0x83c3>
  415463:	jmp    4154bc <__flatcc_fb_gen_c_json_parser@@Base+0x51cc>
  415465:	lea    rax,[rip+0x228e4]        # 437d50 <_IO_stdin_used@@Base+0x8d50>
  41546c:	lea    rcx,[rip+0x21f32]        # 4373a5 <_IO_stdin_used@@Base+0x83a5>
  415473:	jmp    4154c0 <__flatcc_fb_gen_c_json_parser@@Base+0x51d0>
  415475:	lea    rax,[rip+0x228d5]        # 437d51 <_IO_stdin_used@@Base+0x8d51>
  41547c:	lea    rcx,[rip+0x21f23]        # 4373a6 <_IO_stdin_used@@Base+0x83a6>
  415483:	jmp    4154c0 <__flatcc_fb_gen_c_json_parser@@Base+0x51d0>
  415485:	lea    rax,[rip+0x228b7]        # 437d43 <_IO_stdin_used@@Base+0x8d43>
  41548c:	lea    rcx,[rip+0x21f01]        # 437394 <_IO_stdin_used@@Base+0x8394>
  415493:	jmp    4154c0 <__flatcc_fb_gen_c_json_parser@@Base+0x51d0>
  415495:	lea    rax,[rip+0x228ae]        # 437d4a <_IO_stdin_used@@Base+0x8d4a>
  41549c:	lea    rcx,[rip+0x21efa]        # 43739d <_IO_stdin_used@@Base+0x839d>
  4154a3:	jmp    4154c0 <__flatcc_fb_gen_c_json_parser@@Base+0x51d0>
  4154a5:	lea    rax,[rip+0x228ac]        # 437d58 <_IO_stdin_used@@Base+0x8d58>
  4154ac:	lea    rcx,[rip+0x21efc]        # 4373af <_IO_stdin_used@@Base+0x83af>
  4154b3:	jmp    4154c0 <__flatcc_fb_gen_c_json_parser@@Base+0x51d0>
  4154b5:	lea    rax,[rip+0x21f01]        # 4373bd <_IO_stdin_used@@Base+0x83bd>
  4154bc:	mov    rcx,rax
  4154bf:	nop
  4154c0:	mov    QWORD PTR [rsp+0x40],rax
  4154c5:	mov    QWORD PTR [rsp+0x50],rcx
  4154ca:	and    bl,BYTE PTR [rsp+0x7]
  4154ce:	cmp    DWORD PTR [rsp+0x20],0x0
  4154d3:	je     4154ec <__flatcc_fb_gen_c_json_parser@@Base+0x51fc>
  4154d5:	test   bl,bl
  4154d7:	je     41551b <__flatcc_fb_gen_c_json_parser@@Base+0x522b>
  4154d9:	xor    eax,eax
  4154db:	mov    rdi,r12
  4154de:	lea    rsi,[rip+0x2f527]        # 444a0c <_IO_stdin_used@@Base+0x15a0c>
  4154e5:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4154ea:	jmp    415564 <__flatcc_fb_gen_c_json_parser@@Base+0x5274>
  4154ec:	mov    DWORD PTR [rsp],0x0
  4154f3:	test   r14b,r14b
  4154f6:	mov    r14d,DWORD PTR [rsp+0x20]
  4154fb:	jne    4155a5 <__flatcc_fb_gen_c_json_parser@@Base+0x52b5>
  415501:	mov    r14d,ebx
  415504:	mov    DWORD PTR [rsp],0x0
  41550b:	mov    DWORD PTR [rsp+0x20],0x0
  415513:	xor    r13d,r13d
  415516:	jmp    415694 <__flatcc_fb_gen_c_json_parser@@Base+0x53a4>
  41551b:	mov    r9,QWORD PTR [r13+0x80]
  415522:	movsx  ecx,WORD PTR [r13+0x72]
  415527:	test   r9,r9
  41552a:	mov    rsi,r9
  41552d:	mov    eax,0x1
  415532:	cmove  rsi,rax
  415536:	mov    rax,rsi
  415539:	shr    rax,0x20
  41553d:	jne    41554d <__flatcc_fb_gen_c_json_parser@@Base+0x525d>
  41553f:	mov    eax,0xffffffff
  415544:	xor    edx,edx
  415546:	div    esi
  415548:	mov    r8d,eax
  41554b:	jmp    415550 <__flatcc_fb_gen_c_json_parser@@Base+0x5260>
  41554d:	xor    r8d,r8d
  415550:	xor    eax,eax
  415552:	mov    rdi,r12
  415555:	lea    rsi,[rip+0x2f4ef]        # 444a4b <_IO_stdin_used@@Base+0x15a4b>
  41555c:	mov    rdx,r9
  41555f:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415564:	xor    r13d,r13d
  415567:	xor    eax,eax
  415569:	mov    rdi,r12
  41556c:	lea    rsi,[rip+0x2f529]        # 444a9c <_IO_stdin_used@@Base+0x15a9c>
  415573:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415578:	xor    eax,eax
  41557a:	mov    rdi,r12
  41557d:	lea    rsi,[rip+0x2f1f7]        # 44477b <_IO_stdin_used@@Base+0x1577b>
  415584:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415589:	add    DWORD PTR [r12+0xf0],0x1
  415592:	mov    al,0x1
  415594:	mov    DWORD PTR [rsp],eax
  415597:	test   r14b,r14b
  41559a:	mov    r14d,DWORD PTR [rsp+0x20]
  41559f:	je     41566b <__flatcc_fb_gen_c_json_parser@@Base+0x537b>
  4155a5:	xor    eax,eax
  4155a7:	mov    rdi,r12
  4155aa:	lea    rsi,[rip+0x2f527]        # 444ad8 <_IO_stdin_used@@Base+0x15ad8>
  4155b1:	mov    rdx,QWORD PTR [rsp+0x50]
  4155b6:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4155bb:	xor    eax,eax
  4155bd:	mov    rdi,r12
  4155c0:	lea    rsi,[rip+0x2f51d]        # 444ae4 <_IO_stdin_used@@Base+0x15ae4>
  4155c7:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4155cc:	add    DWORD PTR [r12+0xf0],0x2
  4155d5:	cmp    DWORD PTR [rsp+0x1c],0x0
  4155da:	je     4155f2 <__flatcc_fb_gen_c_json_parser@@Base+0x5302>
  4155dc:	xor    eax,eax
  4155de:	mov    rdi,r12
  4155e1:	lea    rsi,[rip+0x2f540]        # 444b28 <_IO_stdin_used@@Base+0x15b28>
  4155e8:	lea    rdx,[rsp+0x60]
  4155ed:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4155f2:	mov    rax,QWORD PTR [r12+0xd8]
  4155fa:	mov    rdx,QWORD PTR [rax+0x110]
  415601:	xor    eax,eax
  415603:	mov    rdi,r12
  415606:	lea    rsi,[rip+0x2f52f]        # 444b3c <_IO_stdin_used@@Base+0x15b3c>
  41560d:	lea    rcx,[rsp+0x150]
  415615:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41561a:	mov    rax,QWORD PTR [r12+0xd8]
  415622:	mov    rdx,QWORD PTR [rax+0x110]
  415629:	xor    eax,eax
  41562b:	mov    rdi,r12
  41562e:	lea    rsi,[rip+0x2f524]        # 444b59 <_IO_stdin_used@@Base+0x15b59>
  415635:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41563a:	mov    eax,DWORD PTR [r12+0xf0]
  415642:	test   eax,eax
  415644:	je     415abc <__flatcc_fb_gen_c_json_parser@@Base+0x57cc>
  41564a:	mov    ecx,eax
  41564c:	add    ecx,0xffffffff
  41564f:	mov    DWORD PTR [r12+0xf0],ecx
  415657:	je     415abc <__flatcc_fb_gen_c_json_parser@@Base+0x57cc>
  41565d:	add    eax,0xfffffffe
  415660:	mov    DWORD PTR [r12+0xf0],eax
  415668:	mov    r13b,0x1
  41566b:	test   r14d,r14d
  41566e:	sete   al
  415671:	or     al,bl
  415673:	je     415680 <__flatcc_fb_gen_c_json_parser@@Base+0x5390>
  415675:	mov    r14d,ebx
  415678:	jmp    415694 <__flatcc_fb_gen_c_json_parser@@Base+0x53a4>
  41567a:	nop    WORD PTR [rax+rax*1+0x0]
  415680:	xor    r14d,r14d
  415683:	xor    eax,eax
  415685:	mov    rdi,r12
  415688:	lea    rsi,[rip+0x2f4eb]        # 444b7a <_IO_stdin_used@@Base+0x15b7a>
  41568f:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415694:	mov    ebx,r15d
  415697:	movzx  r15d,WORD PTR [rsp+0x3a]
  41569d:	cmp    r15d,0x1
  4156a1:	jne    4156d0 <__flatcc_fb_gen_c_json_parser@@Base+0x53e0>
  4156a3:	mov    rax,QWORD PTR [rsp+0x48]
  4156a8:	mov    rdx,QWORD PTR [rax+0x78]
  4156ac:	xor    eax,eax
  4156ae:	mov    rdi,r12
  4156b1:	lea    rsi,[rip+0x2f508]        # 444bc0 <_IO_stdin_used@@Base+0x15bc0>
  4156b8:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4156bd:	test   r13b,r13b
  4156c0:	jne    415709 <__flatcc_fb_gen_c_json_parser@@Base+0x5419>
  4156c2:	jmp    4157f0 <__flatcc_fb_gen_c_json_parser@@Base+0x5500>
  4156c7:	nop    WORD PTR [rax+rax*1+0x0]
  4156d0:	mov    eax,DWORD PTR [rsp]
  4156d3:	or     al,bl
  4156d5:	jne    415700 <__flatcc_fb_gen_c_json_parser@@Base+0x5410>
  4156d7:	mov    rax,QWORD PTR [rsp+0x48]
  4156dc:	mov    rcx,QWORD PTR [rax+0x80]
  4156e3:	mov    rdx,QWORD PTR [rax+0x88]
  4156ea:	movzx  r8d,WORD PTR [rax+0x72]
  4156ef:	xor    eax,eax
  4156f1:	mov    rdi,r12
  4156f4:	lea    rsi,[rip+0x2f4f1]        # 444bec <_IO_stdin_used@@Base+0x15bec>
  4156fb:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415700:	test   r13b,r13b
  415703:	je     4157f0 <__flatcc_fb_gen_c_json_parser@@Base+0x5500>
  415709:	xor    eax,eax
  41570b:	mov    rdi,r12
  41570e:	lea    rsi,[rip+0x2f524]        # 444c39 <_IO_stdin_used@@Base+0x15c39>
  415715:	mov    rbx,QWORD PTR [rsp+0x40]
  41571a:	mov    rdx,rbx
  41571d:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415722:	xor    eax,eax
  415724:	mov    rdi,r12
  415727:	lea    rsi,[rip+0x2f546]        # 444c74 <_IO_stdin_used@@Base+0x15c74>
  41572e:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415733:	add    DWORD PTR [r12+0xf0],0x1
  41573c:	xor    eax,eax
  41573e:	mov    rdi,r12
  415741:	lea    rsi,[rip+0x2f53f]        # 444c87 <_IO_stdin_used@@Base+0x15c87>
  415748:	mov    rdx,rbx
  41574b:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415750:	xor    eax,eax
  415752:	mov    rdi,r12
  415755:	lea    rsi,[rip+0x2f581]        # 444cdd <_IO_stdin_used@@Base+0x15cdd>
  41575c:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415761:	mov    eax,DWORD PTR [r12+0xf0]
  415769:	test   eax,eax
  41576b:	mov    r13,QWORD PTR [rsp+0x48]
  415770:	je     415adb <__flatcc_fb_gen_c_json_parser@@Base+0x57eb>
  415776:	cmp    r15d,0x1
  41577a:	sete   bl
  41577d:	add    eax,0xffffffff
  415780:	mov    DWORD PTR [r12+0xf0],eax
  415788:	xor    eax,eax
  41578a:	mov    rdi,r12
  41578d:	lea    rsi,[rip+0x1d918]        # 4330ac <_IO_stdin_used@@Base+0x40ac>
  415794:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415799:	or     bl,BYTE PTR [rsp]
  41579c:	cmp    DWORD PTR [rsp+0x34],0x0
  4157a1:	jne    4158cb <__flatcc_fb_gen_c_json_parser@@Base+0x55db>
  4157a7:	test   bl,bl
  4157a9:	jne    4158cb <__flatcc_fb_gen_c_json_parser@@Base+0x55db>
  4157af:	mov    eax,DWORD PTR [r13+0x58]
  4157b3:	lea    ecx,[rax-0x5]
  4157b6:	movzx  ecx,cx
  4157b9:	cmp    ecx,0x2
  4157bc:	jb     415845 <__flatcc_fb_gen_c_json_parser@@Base+0x5555>
  4157c2:	movzx  eax,ax
  4157c5:	cmp    eax,0x3
  4157c8:	je     415887 <__flatcc_fb_gen_c_json_parser@@Base+0x5597>
  4157ce:	cmp    eax,0x4
  4157d1:	jne    415b62 <__flatcc_fb_gen_c_json_parser@@Base+0x5872>
  4157d7:	mov    rdx,QWORD PTR [r13+0x48]
  4157db:	xor    eax,eax
  4157dd:	mov    rdi,r12
  4157e0:	lea    rsi,[rip+0x2f565]        # 444d4c <_IO_stdin_used@@Base+0x15d4c>
  4157e7:	jmp    415855 <__flatcc_fb_gen_c_json_parser@@Base+0x5565>
  4157e9:	nop    DWORD PTR [rax+0x0]
  4157f0:	test   bl,bl
  4157f2:	mov    r13,QWORD PTR [rsp+0x48]
  4157f7:	je     415820 <__flatcc_fb_gen_c_json_parser@@Base+0x5530>
  4157f9:	cmp    DWORD PTR [rsp+0xc],0x0
  4157fe:	je     41585c <__flatcc_fb_gen_c_json_parser@@Base+0x556c>
  415800:	xor    eax,eax
  415802:	mov    rdi,r12
  415805:	lea    rsi,[rip+0x2f698]        # 444ea4 <_IO_stdin_used@@Base+0x15ea4>
  41580c:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415811:	cmp    BYTE PTR [rsp],0x0
  415815:	jne    4158f6 <__flatcc_fb_gen_c_json_parser@@Base+0x5606>
  41581b:	jmp    4159a5 <__flatcc_fb_gen_c_json_parser@@Base+0x56b5>
  415820:	xor    eax,eax
  415822:	mov    rdi,r12
  415825:	lea    rsi,[rip+0x2f640]        # 444e6c <_IO_stdin_used@@Base+0x15e6c>
  41582c:	lea    rdx,[rsp+0x60]
  415831:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415836:	cmp    BYTE PTR [rsp],0x0
  41583a:	jne    4158f6 <__flatcc_fb_gen_c_json_parser@@Base+0x5606>
  415840:	jmp    4159a5 <__flatcc_fb_gen_c_json_parser@@Base+0x56b5>
  415845:	mov    rdx,QWORD PTR [r13+0x48]
  415849:	xor    eax,eax
  41584b:	mov    rdi,r12
  41584e:	lea    rsi,[rip+0x2f4b4]        # 444d09 <_IO_stdin_used@@Base+0x15d09>
  415855:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41585a:	jmp    41589e <__flatcc_fb_gen_c_json_parser@@Base+0x55ae>
  41585c:	cmp    DWORD PTR [rsp+0x34],0x0
  415861:	je     415191 <__flatcc_fb_gen_c_json_parser@@Base+0x4ea1>
  415867:	xor    eax,eax
  415869:	mov    rdi,r12
  41586c:	lea    rsi,[rip+0x2f66d]        # 444ee0 <_IO_stdin_used@@Base+0x15ee0>
  415873:	mov    edx,DWORD PTR [rsp+0x58]
  415877:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41587c:	cmp    BYTE PTR [rsp],0x0
  415880:	jne    4158f6 <__flatcc_fb_gen_c_json_parser@@Base+0x5606>
  415882:	jmp    4159a5 <__flatcc_fb_gen_c_json_parser@@Base+0x56b5>
  415887:	vmovsd xmm0,QWORD PTR [r13+0x48]
  41588d:	mov    al,0x1
  41588f:	mov    rdi,r12
  415892:	lea    rsi,[rip+0x2f4f6]        # 444d8f <_IO_stdin_used@@Base+0x15d8f>
  415899:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41589e:	add    DWORD PTR [r12+0xf0],0x1
  4158a7:	mov    rcx,QWORD PTR [r13+0x80]
  4158ae:	mov    rdx,QWORD PTR [r13+0x88]
  4158b5:	movsx  r8d,WORD PTR [r13+0x72]
  4158ba:	xor    eax,eax
  4158bc:	mov    rdi,r12
  4158bf:	lea    rsi,[rip+0x2f53b]        # 444e01 <_IO_stdin_used@@Base+0x15e01>
  4158c6:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4158cb:	xor    eax,eax
  4158cd:	mov    rdi,r12
  4158d0:	lea    rsi,[rip+0x2f578]        # 444e4f <_IO_stdin_used@@Base+0x15e4f>
  4158d7:	mov    rdx,r12
  4158da:	mov    rcx,QWORD PTR [rsp+0x40]
  4158df:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4158e4:	test   bl,bl
  4158e6:	je     415970 <__flatcc_fb_gen_c_json_parser@@Base+0x5680>
  4158ec:	cmp    BYTE PTR [rsp],0x0
  4158f0:	je     4159a5 <__flatcc_fb_gen_c_json_parser@@Base+0x56b5>
  4158f6:	test   r14b,r14b
  4158f9:	je     41591d <__flatcc_fb_gen_c_json_parser@@Base+0x562d>
  4158fb:	xor    eax,eax
  4158fd:	mov    rdi,r12
  415900:	lea    rsi,[rip+0x2f83e]        # 445145 <_IO_stdin_used@@Base+0x16145>
  415907:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41590c:	xor    eax,eax
  41590e:	mov    rdi,r12
  415911:	lea    rsi,[rip+0x2f882]        # 44519a <_IO_stdin_used@@Base+0x1619a>
  415918:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41591d:	xor    eax,eax
  41591f:	mov    rdi,r12
  415922:	lea    rsi,[rip+0x2f87e]        # 4451a7 <_IO_stdin_used@@Base+0x161a7>
  415929:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41592e:	mov    eax,DWORD PTR [r12+0xf0]
  415936:	test   eax,eax
  415938:	je     415afa <__flatcc_fb_gen_c_json_parser@@Base+0x580a>
  41593e:	add    eax,0xffffffff
  415941:	mov    DWORD PTR [r12+0xf0],eax
  415949:	xor    eax,eax
  41594b:	mov    rdi,r12
  41594e:	lea    rsi,[rip+0x1d757]        # 4330ac <_IO_stdin_used@@Base+0x40ac>
  415955:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  41595a:	xor    eax,eax
  41595c:	mov    rdi,r12
  41595f:	test   r14b,r14b
  415962:	je     415999 <__flatcc_fb_gen_c_json_parser@@Base+0x56a9>
  415964:	lea    rsi,[rip+0x2f876]        # 4451e1 <_IO_stdin_used@@Base+0x161e1>
  41596b:	jmp    4159a0 <__flatcc_fb_gen_c_json_parser@@Base+0x56b0>
  41596d:	nop    DWORD PTR [rax]
  415970:	mov    eax,DWORD PTR [r12+0xf0]
  415978:	test   eax,eax
  41597a:	je     415bab <__flatcc_fb_gen_c_json_parser@@Base+0x58bb>
  415980:	add    eax,0xffffffff
  415983:	mov    DWORD PTR [r12+0xf0],eax
  41598b:	xor    eax,eax
  41598d:	mov    rdi,r12
  415990:	lea    rsi,[rip+0x1d715]        # 4330ac <_IO_stdin_used@@Base+0x40ac>
  415997:	jmp    4159a0 <__flatcc_fb_gen_c_json_parser@@Base+0x56b0>
  415999:	lea    rsi,[rip+0x2f873]        # 445213 <_IO_stdin_used@@Base+0x16213>
  4159a0:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4159a5:	mov    r14d,0x2
  4159ab:	mov    ebx,DWORD PTR [rsp+0x5c]
  4159af:	cmp    ebx,0x1
  4159b2:	je     415310 <__flatcc_fb_gen_c_json_parser@@Base+0x5020>
  4159b8:	cmp    ebx,0x2
  4159bb:	mov    r14d,DWORD PTR [rsp+0x20]
  4159c0:	jne    415a10 <__flatcc_fb_gen_c_json_parser@@Base+0x5720>
  4159c2:	lea    rsi,[rip+0x2f875]        # 44523e <_IO_stdin_used@@Base+0x1623e>
  4159c9:	xor    eax,eax
  4159cb:	mov    rdi,r12
  4159ce:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4159d3:	lea    rsi,[rip+0x2f87b]        # 445255 <_IO_stdin_used@@Base+0x16255>
  4159da:	xor    eax,eax
  4159dc:	mov    rdi,r12
  4159df:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  4159e4:	mov    eax,DWORD PTR [r12+0xf0]
  4159ec:	test   eax,eax
  4159ee:	je     415c51 <__flatcc_fb_gen_c_json_parser@@Base+0x5961>
  4159f4:	add    eax,0xffffffff
  4159f7:	mov    DWORD PTR [r12+0xf0],eax
  4159ff:	lea    rsi,[rip+0x2f87f]        # 445285 <_IO_stdin_used@@Base+0x16285>
  415a06:	xor    eax,eax
  415a08:	mov    rdi,r12
  415a0b:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415a10:	mov    eax,DWORD PTR [rsp+0x34]
  415a14:	or     eax,DWORD PTR [rsp+0xc]
  415a18:	or     eax,ebx
  415a1a:	or     eax,r14d
  415a1d:	or     eax,DWORD PTR [rsp+0x8]
  415a21:	je     415a4c <__flatcc_fb_gen_c_json_parser@@Base+0x575c>
  415a23:	mov    rdx,QWORD PTR [r13+0x88]
  415a2a:	lea    rsi,[rip+0x2f867]        # 445298 <_IO_stdin_used@@Base+0x16298>
  415a31:	xor    eax,eax
  415a33:	mov    rdi,r12
  415a36:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415a3b:	lea    rsi,[rip+0x2f758]        # 44519a <_IO_stdin_used@@Base+0x1619a>
  415a42:	xor    eax,eax
  415a44:	mov    rdi,r12
  415a47:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415a4c:	mov    eax,DWORD PTR [r12+0xf0]
  415a54:	test   eax,eax
  415a56:	je     415c32 <__flatcc_fb_gen_c_json_parser@@Base+0x5942>
  415a5c:	add    eax,0xffffffff
  415a5f:	mov    DWORD PTR [r12+0xf0],eax
  415a67:	lea    rsi,[rip+0x2e54d]        # 443fbb <_IO_stdin_used@@Base+0x14fbb>
  415a6e:	xor    eax,eax
  415a70:	mov    rdi,r12
  415a73:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415a78:	add    DWORD PTR [r12+0xf0],0x1
  415a81:	lea    rsp,[rbp-0x28]
  415a85:	pop    rbx
  415a86:	pop    r12
  415a88:	pop    r13
  415a8a:	pop    r14
  415a8c:	pop    r15
  415a8e:	pop    rbp
  415a8f:	ret    
  415a90:	mov    DWORD PTR [rsp+0xc],0x0
  415a98:	jmp    414f6a <__flatcc_fb_gen_c_json_parser@@Base+0x4c7a>
  415a9d:	lea    rdi,[rip+0x2ddcd]        # 443871 <_IO_stdin_used@@Base+0x14871>
  415aa4:	lea    rsi,[rip+0x2ddd2]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  415aab:	lea    rcx,[rip+0x2ee81]        # 444933 <_IO_stdin_used@@Base+0x15933>
  415ab2:	mov    edx,0x1ea
  415ab7:	call   406100 <__assert_fail@plt>
  415abc:	lea    rdi,[rip+0x2ddae]        # 443871 <_IO_stdin_used@@Base+0x14871>
  415ac3:	lea    rsi,[rip+0x2ddb3]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  415aca:	lea    rcx,[rip+0x2ee62]        # 444933 <_IO_stdin_used@@Base+0x15933>
  415ad1:	mov    edx,0x21b
  415ad6:	call   406100 <__assert_fail@plt>
  415adb:	lea    rdi,[rip+0x2dd8f]        # 443871 <_IO_stdin_used@@Base+0x14871>
  415ae2:	lea    rsi,[rip+0x2dd94]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  415ae9:	lea    rcx,[rip+0x2ee43]        # 444933 <_IO_stdin_used@@Base+0x15933>
  415af0:	mov    edx,0x22f
  415af5:	call   406100 <__assert_fail@plt>
  415afa:	lea    rdi,[rip+0x2dd70]        # 443871 <_IO_stdin_used@@Base+0x14871>
  415b01:	lea    rsi,[rip+0x2dd75]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  415b08:	lea    rcx,[rip+0x2ee24]        # 444933 <_IO_stdin_used@@Base+0x15933>
  415b0f:	mov    edx,0x287
  415b14:	call   406100 <__assert_fail@plt>
  415b19:	mov    rax,QWORD PTR [rip+0x3d4d8]        # 452ff8 <stderr@GLIBC_2.2.5>
  415b20:	mov    rdi,QWORD PTR [rax]
  415b23:	lea    rsi,[rip+0x1b0ee]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  415b2a:	lea    rbx,[rip+0x21899]        # 4373ca <_IO_stdin_used@@Base+0x83ca>
  415b31:	lea    r8,[rip+0x218f5]        # 43742d <_IO_stdin_used@@Base+0x842d>
  415b38:	mov    ecx,0x60
  415b3d:	xor    eax,eax
  415b3f:	mov    rdx,rbx
  415b42:	call   406180 <fprintf@plt>
  415b47:	lea    rdi,[rip+0x2c031]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  415b4e:	lea    rcx,[rip+0x22208]        # 437d5d <_IO_stdin_used@@Base+0x8d5d>
  415b55:	mov    edx,0x60
  415b5a:	mov    rsi,rbx
  415b5d:	call   406100 <__assert_fail@plt>
  415b62:	mov    rax,QWORD PTR [rip+0x3d48f]        # 452ff8 <stderr@GLIBC_2.2.5>
  415b69:	mov    rdi,QWORD PTR [rax]
  415b6c:	lea    rsi,[rip+0x1b0a5]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  415b73:	lea    rbx,[rip+0x2dd03]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  415b7a:	lea    r8,[rip+0x2f251]        # 444dd2 <_IO_stdin_used@@Base+0x15dd2>
  415b81:	mov    ecx,0x24e
  415b86:	xor    eax,eax
  415b88:	mov    rdx,rbx
  415b8b:	call   406180 <fprintf@plt>
  415b90:	lea    rdi,[rip+0x2bfe8]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  415b97:	lea    rcx,[rip+0x2ed95]        # 444933 <_IO_stdin_used@@Base+0x15933>
  415b9e:	mov    edx,0x24e
  415ba3:	mov    rsi,rbx
  415ba6:	call   406100 <__assert_fail@plt>
  415bab:	lea    rdi,[rip+0x2dcbf]        # 443871 <_IO_stdin_used@@Base+0x14871>
  415bb2:	lea    rsi,[rip+0x2dcc4]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  415bb9:	lea    rcx,[rip+0x2ed73]        # 444933 <_IO_stdin_used@@Base+0x15933>
  415bc0:	mov    edx,0x25a
  415bc5:	call   406100 <__assert_fail@plt>
  415bca:	lea    rdi,[rip+0x2dca0]        # 443871 <_IO_stdin_used@@Base+0x14871>
  415bd1:	lea    rsi,[rip+0x2dca5]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  415bd8:	lea    rcx,[rip+0x2ed54]        # 444933 <_IO_stdin_used@@Base+0x15933>
  415bdf:	mov    edx,0x273
  415be4:	call   406100 <__assert_fail@plt>
  415be9:	mov    rax,QWORD PTR [rip+0x3d408]        # 452ff8 <stderr@GLIBC_2.2.5>
  415bf0:	mov    rdi,QWORD PTR [rax]
  415bf3:	lea    rsi,[rip+0x1b01e]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  415bfa:	lea    rbx,[rip+0x2dc7c]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  415c01:	lea    r8,[rip+0x2f50c]        # 445114 <_IO_stdin_used@@Base+0x16114>
  415c08:	mov    ecx,0x27c
  415c0d:	xor    eax,eax
  415c0f:	mov    rdx,rbx
  415c12:	call   406180 <fprintf@plt>
  415c17:	lea    rdi,[rip+0x2bf61]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  415c1e:	lea    rcx,[rip+0x2ed0e]        # 444933 <_IO_stdin_used@@Base+0x15933>
  415c25:	mov    edx,0x27c
  415c2a:	mov    rsi,rbx
  415c2d:	call   406100 <__assert_fail@plt>
  415c32:	lea    rdi,[rip+0x2dc38]        # 443871 <_IO_stdin_used@@Base+0x14871>
  415c39:	lea    rsi,[rip+0x2dc3d]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  415c40:	lea    rcx,[rip+0x2ec61]        # 4448a8 <_IO_stdin_used@@Base+0x158a8>
  415c47:	mov    edx,0x2a3
  415c4c:	call   406100 <__assert_fail@plt>
  415c51:	lea    rdi,[rip+0x2dc19]        # 443871 <_IO_stdin_used@@Base+0x14871>
  415c58:	lea    rsi,[rip+0x2dc1e]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  415c5f:	lea    rcx,[rip+0x2eccd]        # 444933 <_IO_stdin_used@@Base+0x15933>
  415c66:	mov    edx,0x295
  415c6b:	call   406100 <__assert_fail@plt>
  415c70:	lea    rsi,[rip+0x2eb27]        # 44479e <_IO_stdin_used@@Base+0x1579e>
  415c77:	xor    eax,eax
  415c79:	jmp    412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415c7e:	xchg   ax,ax
  415c80:	push   rbp
  415c81:	mov    rbp,rsp
  415c84:	push   r15
  415c86:	push   r14
  415c88:	push   rbx
  415c89:	and    rsp,0xffffffffffffffe0
  415c8d:	sub    rsp,0x100
  415c94:	mov    r14,rdx
  415c97:	mov    rbx,rdi
  415c9a:	lea    rsi,[rip+0x2fcd0]        # 445971 <_IO_stdin_used@@Base+0x16971>
  415ca1:	xor    eax,eax
  415ca3:	mov    edx,r8d
  415ca6:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415cab:	lea    rsi,[rip+0x2e632]        # 4442e4 <_IO_stdin_used@@Base+0x152e4>
  415cb2:	xor    eax,eax
  415cb4:	mov    rdi,rbx
  415cb7:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415cbc:	add    DWORD PTR [rbx+0xf0],0x1
  415cc3:	mov    eax,DWORD PTR [r14+0x10]
  415cc7:	add    eax,0xfffffffd
  415cca:	movzx  eax,ax
  415ccd:	cmp    eax,0x2
  415cd0:	jae    415d77 <__flatcc_fb_gen_c_json_parser@@Base+0x5a87>
  415cd6:	vxorps xmm0,xmm0,xmm0
  415cda:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  415ce3:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  415cec:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  415cf5:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  415cfb:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  415d01:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  415d07:	vmovaps YMMWORD PTR [rsp],ymm0
  415d0c:	mov    QWORD PTR [rsp+0xe0],0x0
  415d18:	mov    rdi,QWORD PTR [r14+0x18]
  415d1c:	mov    r15,rsp
  415d1f:	mov    rsi,r14
  415d22:	mov    rdx,r15
  415d25:	vzeroupper 
  415d28:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  415d2d:	lea    rsi,[rip+0x2fd1a]        # 445a4e <_IO_stdin_used@@Base+0x16a4e>
  415d34:	xor    eax,eax
  415d36:	mov    rdi,rbx
  415d39:	mov    rdx,r15
  415d3c:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415d41:	mov    eax,DWORD PTR [rbx+0xf0]
  415d47:	test   eax,eax
  415d49:	je     415d96 <__flatcc_fb_gen_c_json_parser@@Base+0x5aa6>
  415d4b:	add    eax,0xffffffff
  415d4e:	mov    DWORD PTR [rbx+0xf0],eax
  415d54:	lea    rsi,[rip+0x2e260]        # 443fbb <_IO_stdin_used@@Base+0x14fbb>
  415d5b:	xor    eax,eax
  415d5d:	mov    rdi,rbx
  415d60:	call   412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415d65:	add    DWORD PTR [rbx+0xf0],0x1
  415d6c:	lea    rsp,[rbp-0x18]
  415d70:	pop    rbx
  415d71:	pop    r14
  415d73:	pop    r15
  415d75:	pop    rbp
  415d76:	ret    
  415d77:	lea    rdi,[rip+0x2131a]        # 437098 <_IO_stdin_used@@Base+0x8098>
  415d7e:	lea    rsi,[rip+0x2daf8]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  415d85:	lea    rcx,[rip+0x2fc73]        # 4459ff <_IO_stdin_used@@Base+0x169ff>
  415d8c:	mov    edx,0x2d9
  415d91:	call   406100 <__assert_fail@plt>
  415d96:	lea    rdi,[rip+0x2dad4]        # 443871 <_IO_stdin_used@@Base+0x14871>
  415d9d:	lea    rsi,[rip+0x2dad9]        # 44387d <_IO_stdin_used@@Base+0x1487d>
  415da4:	lea    rcx,[rip+0x2fc08]        # 4459b3 <_IO_stdin_used@@Base+0x169b3>
  415dab:	mov    edx,0x2e6
  415db0:	call   406100 <__assert_fail@plt>
  415db5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415dbf:	nop
  415dc0:	lea    rsi,[rip+0x2e63e]        # 444405 <_IO_stdin_used@@Base+0x15405>
  415dc7:	xor    eax,eax
  415dc9:	jmp    412af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2800>
  415dce:	xchg   ax,ax
  415dd0:	push   rbx
  415dd1:	movzx  eax,WORD PTR [rsi+0x10]
  415dd5:	add    eax,0xfffffffd
  415dd8:	cmp    eax,0x1
  415ddb:	ja     415dfa <__flatcc_fb_gen_c_json_parser@@Base+0x5b0a>
  415ddd:	mov    rbx,rdi
  415de0:	mov    edi,0x128
  415de5:	add    rdi,QWORD PTR [rbx+0x8]
  415de9:	mov    rsi,QWORD PTR [rsi+0x20]
  415ded:	call   419e50 <ptr_set_find_item@@Base>
  415df2:	test   rax,rax
  415df5:	je     415dfa <__flatcc_fb_gen_c_json_parser@@Base+0x5b0a>
  415df7:	add    DWORD PTR [rbx],0x1
  415dfa:	pop    rbx
  415dfb:	ret    
  415dfc:	nop    DWORD PTR [rax+0x0]
  415e00:	push   r14
  415e02:	push   rbx
  415e03:	push   rax
  415e04:	movzx  eax,WORD PTR [rsi+0x10]
  415e08:	add    eax,0xfffffffd
  415e0b:	cmp    eax,0x1
  415e0e:	ja     415e4d <__flatcc_fb_gen_c_json_parser@@Base+0x5b5d>
  415e10:	mov    rbx,rsi
  415e13:	mov    r14,rdi
  415e16:	mov    edi,0x128
  415e1b:	add    rdi,QWORD PTR [r14+0x8]
  415e1f:	mov    rsi,QWORD PTR [rsi+0x20]
  415e23:	call   419e50 <ptr_set_find_item@@Base>
  415e28:	test   rax,rax
  415e2b:	je     415e4d <__flatcc_fb_gen_c_json_parser@@Base+0x5b5d>
  415e2d:	mov    rax,QWORD PTR [rbx+0x8]
  415e31:	mov    rcx,QWORD PTR [rax]
  415e34:	mov    rdx,QWORD PTR [r14+0x10]
  415e38:	mov    QWORD PTR [rdx],rcx
  415e3b:	mov    eax,DWORD PTR [rax+0x8]
  415e3e:	mov    DWORD PTR [rdx+0x8],eax
  415e41:	mov    QWORD PTR [rdx+0x10],rbx
  415e45:	add    rdx,0x20
  415e49:	mov    QWORD PTR [r14+0x10],rdx
  415e4d:	add    rsp,0x8
  415e51:	pop    rbx
  415e52:	pop    r14
  415e54:	ret    
  415e55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415e5f:	nop
  415e60:	push   rbx
  415e61:	mov    rbx,rdi
  415e64:	mov    rdi,QWORD PTR [rdi+0x18]
  415e68:	test   rdi,rdi
  415e6b:	je     415e72 <__flatcc_fb_gen_c_json_parser@@Base+0x5b82>
  415e6d:	call   406040 <free@plt>
  415e72:	mov    rdi,QWORD PTR [rbx+0x20]
  415e76:	test   rdi,rdi
  415e79:	je     415e80 <__flatcc_fb_gen_c_json_parser@@Base+0x5b90>
  415e7b:	call   406040 <free@plt>
  415e80:	mov    rdi,QWORD PTR [rbx+0x28]
  415e84:	test   rdi,rdi
  415e87:	je     415e8e <__flatcc_fb_gen_c_json_parser@@Base+0x5b9e>
  415e89:	call   406040 <free@plt>
  415e8e:	vxorps xmm0,xmm0,xmm0
  415e92:	vmovups YMMWORD PTR [rbx+0x30],ymm0
  415e97:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  415e9c:	vmovups YMMWORD PTR [rbx],ymm0
  415ea0:	pop    rbx
  415ea1:	vzeroupper 
  415ea4:	ret    
  415ea5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415eaf:	nop
  415eb0:	mov    rax,rdi
  415eb3:	lea    rdi,[rsi+0x8]
  415eb7:	lea    rsi,[rip+0x32]        # 415ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x5c00>
  415ebe:	mov    rdx,rax
  415ec1:	jmp    41a700 <fb_symbol_table_visit@@Base>
  415ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415ed0:	mov    rax,rdi
  415ed3:	lea    rdi,[rsi+0x8]
  415ed7:	lea    rsi,[rip+0xc2]        # 415fa0 <__flatcc_fb_gen_c_json_parser@@Base+0x5cb0>
  415ede:	mov    rdx,rax
  415ee1:	jmp    41a700 <fb_symbol_table_visit@@Base>
  415ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415ef0:	push   r14
  415ef2:	push   rbx
  415ef3:	push   rax
  415ef4:	movzx  eax,WORD PTR [rsi+0x10]
  415ef8:	cmp    eax,0x4
  415efb:	ja     415f93 <__flatcc_fb_gen_c_json_parser@@Base+0x5ca3>
  415f01:	mov    rbx,rsi
  415f04:	mov    r14,rdi
  415f07:	mov    edi,0x128
  415f0c:	add    rdi,QWORD PTR [r14+0x48]
  415f10:	mov    rsi,QWORD PTR [rsi+0x20]
  415f14:	call   419e50 <ptr_set_find_item@@Base>
  415f19:	test   rax,rax
  415f1c:	je     415f93 <__flatcc_fb_gen_c_json_parser@@Base+0x5ca3>
  415f1e:	cmp    DWORD PTR [r14],0x0
  415f22:	je     415f60 <__flatcc_fb_gen_c_json_parser@@Base+0x5c70>
  415f24:	mov    rax,QWORD PTR [rbx+0x18]
  415f28:	mov    rcx,QWORD PTR [rax]
  415f2b:	test   rcx,rcx
  415f2e:	je     415f60 <__flatcc_fb_gen_c_json_parser@@Base+0x5c70>
  415f30:	xor    eax,eax
  415f32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415f3c:	nop    DWORD PTR [rax+0x0]
  415f40:	mov    rdx,QWORD PTR [rcx+0x8]
  415f44:	mov    rsi,QWORD PTR [rcx]
  415f47:	mov    rcx,QWORD PTR [rdx+0x8]
  415f4b:	add    rax,rcx
  415f4e:	add    rax,0x1
  415f52:	mov    rcx,rsi
  415f55:	test   rsi,rsi
  415f58:	jne    415f40 <__flatcc_fb_gen_c_json_parser@@Base+0x5c50>
  415f5a:	add    rax,0x1
  415f5e:	jmp    415f65 <__flatcc_fb_gen_c_json_parser@@Base+0x5c75>
  415f60:	mov    eax,0x1
  415f65:	mov    rcx,QWORD PTR [rbx+0x8]
  415f69:	add    rax,QWORD PTR [rcx+0x8]
  415f6d:	add    QWORD PTR [r14+0x10],rax
  415f71:	mov    eax,DWORD PTR [rbx+0x10]
  415f74:	lea    ecx,[rax-0x3]
  415f77:	movzx  ecx,cx
  415f7a:	cmp    ecx,0x2
  415f7d:	jb     415f8e <__flatcc_fb_gen_c_json_parser@@Base+0x5c9e>
  415f7f:	movzx  eax,ax
  415f82:	cmp    eax,0x1
  415f85:	ja     415f93 <__flatcc_fb_gen_c_json_parser@@Base+0x5ca3>
  415f87:	add    DWORD PTR [r14+0x4],0x1
  415f8c:	jmp    415f93 <__flatcc_fb_gen_c_json_parser@@Base+0x5ca3>
  415f8e:	add    DWORD PTR [r14+0x8],0x1
  415f93:	add    rsp,0x8
  415f97:	pop    rbx
  415f98:	pop    r14
  415f9a:	ret    
  415f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  415fa0:	push   rbp
  415fa1:	push   r15
  415fa3:	push   r14
  415fa5:	push   r13
  415fa7:	push   r12
  415fa9:	push   rbx
  415faa:	push   rax
  415fab:	movzx  eax,WORD PTR [rsi+0x10]
  415faf:	cmp    eax,0x4
  415fb2:	ja     41609d <__flatcc_fb_gen_c_json_parser@@Base+0x5dad>
  415fb8:	mov    r15,rsi
  415fbb:	mov    r14,rdi
  415fbe:	mov    edi,0x128
  415fc3:	add    rdi,QWORD PTR [r14+0x48]
  415fc7:	mov    rsi,QWORD PTR [rsi+0x20]
  415fcb:	call   419e50 <ptr_set_find_item@@Base>
  415fd0:	test   rax,rax
  415fd3:	je     41609d <__flatcc_fb_gen_c_json_parser@@Base+0x5dad>
  415fd9:	mov    r12,QWORD PTR [r14+0x40]
  415fdd:	cmp    DWORD PTR [r14],0x0
  415fe1:	mov    QWORD PTR [rsp],r12
  415fe5:	je     41602f <__flatcc_fb_gen_c_json_parser@@Base+0x5d3f>
  415fe7:	mov    rax,QWORD PTR [r15+0x18]
  415feb:	mov    rbp,QWORD PTR [rax]
  415fee:	mov    r12,QWORD PTR [rsp]
  415ff2:	test   rbp,rbp
  415ff5:	je     41602f <__flatcc_fb_gen_c_json_parser@@Base+0x5d3f>
  415ff7:	mov    rbx,QWORD PTR [rsp]
  415ffb:	nop    DWORD PTR [rax+rax*1+0x0]
  416000:	mov    rax,QWORD PTR [rbp+0x8]
  416004:	movsxd r13,DWORD PTR [rax+0x8]
  416008:	mov    rsi,QWORD PTR [rax]
  41600b:	mov    rdi,rbx
  41600e:	mov    rdx,r13
  416011:	call   4061a0 <memcpy@plt>
  416016:	lea    r12,[rbx+r13*1]
  41601a:	add    r12,0x1
  41601e:	mov    BYTE PTR [rbx+r13*1],0x2e
  416023:	mov    rbp,QWORD PTR [rbp+0x0]
  416027:	mov    rbx,r12
  41602a:	test   rbp,rbp
  41602d:	jne    416000 <__flatcc_fb_gen_c_json_parser@@Base+0x5d10>
  41602f:	mov    rax,QWORD PTR [r15+0x8]
  416033:	movsxd rbx,DWORD PTR [rax+0x8]
  416037:	mov    rsi,QWORD PTR [rax]
  41603a:	mov    rdi,r12
  41603d:	mov    rdx,rbx
  416040:	call   4061a0 <memcpy@plt>
  416045:	lea    rax,[r12+rbx*1]
  416049:	add    rax,0x1
  41604d:	mov    BYTE PTR [r12+rbx*1],0x0
  416052:	mov    QWORD PTR [r14+0x40],rax
  416056:	mov    eax,DWORD PTR [r15+0x10]
  41605a:	lea    ecx,[rax-0x3]
  41605d:	movzx  ecx,cx
  416060:	cmp    ecx,0x2
  416063:	jb     416086 <__flatcc_fb_gen_c_json_parser@@Base+0x5d96>
  416065:	movzx  eax,ax
  416068:	cmp    eax,0x1
  41606b:	ja     41609d <__flatcc_fb_gen_c_json_parser@@Base+0x5dad>
  41606d:	mov    rax,QWORD PTR [r14+0x30]
  416071:	mov    QWORD PTR [rax],r15
  416074:	mov    rcx,QWORD PTR [rsp]
  416078:	mov    QWORD PTR [rax+0x8],rcx
  41607c:	add    rax,0x10
  416080:	mov    QWORD PTR [r14+0x30],rax
  416084:	jmp    41609d <__flatcc_fb_gen_c_json_parser@@Base+0x5dad>
  416086:	mov    rax,QWORD PTR [r14+0x38]
  41608a:	mov    QWORD PTR [rax],r15
  41608d:	mov    rcx,QWORD PTR [rsp]
  416091:	mov    QWORD PTR [rax+0x8],rcx
  416095:	add    rax,0x10
  416099:	mov    QWORD PTR [r14+0x38],rax
  41609d:	add    rsp,0x8
  4160a1:	pop    rbx
  4160a2:	pop    r12
  4160a4:	pop    r13
  4160a6:	pop    r14
  4160a8:	pop    r15
  4160aa:	pop    rbp
  4160ab:	ret    
  4160ac:	nop    DWORD PTR [rax+0x0]
  4160b0:	mov    rdi,QWORD PTR [rdi+0x8]
  4160b4:	mov    rsi,QWORD PTR [rsi+0x8]
  4160b8:	jmp    406160 <strcmp@plt>
  4160bd:	nop    DWORD PTR [rax]

00000000004160c0 <__flatcc_fb_gen_c_json_printer@@Base>:
  4160c0:	push   rbp
  4160c1:	mov    rbp,rsp
  4160c4:	push   r15
  4160c6:	push   r14
  4160c8:	push   r13
  4160ca:	push   r12
  4160cc:	push   rbx
  4160cd:	and    rsp,0xffffffffffffffe0
  4160d1:	sub    rsp,0x220
  4160d8:	mov    rbx,rdi
  4160db:	lea    r15,[rdi+0xd0]
  4160e2:	mov    rdi,QWORD PTR [rdi+0xd0]
  4160e9:	mov    rax,QWORD PTR [rbx+0xd8]
  4160f0:	mov    rdx,QWORD PTR [rax+0x118]
  4160f7:	lea    rsi,[rip+0x2fd22]        # 445e20 <_IO_stdin_used@@Base+0x16e20>
  4160fe:	xor    eax,eax
  416100:	mov    rcx,rdx
  416103:	call   406180 <fprintf@plt>
  416108:	mov    rcx,QWORD PTR [rbx+0xd0]
  41610f:	lea    rdi,[rip+0x1a9d9]        # 430aef <_IO_stdin_used@@Base+0x1aef>
  416116:	mov    esi,0x51
  41611b:	mov    edx,0x1
  416120:	call   406220 <fwrite@plt>
  416125:	mov    rcx,QWORD PTR [rbx+0xd0]
  41612c:	lea    rdi,[rip+0x2fd22]        # 445e55 <_IO_stdin_used@@Base+0x16e55>
  416133:	mov    esi,0x28
  416138:	mov    edx,0x1
  41613d:	call   406220 <fwrite@plt>
  416142:	lea    rsi,[rip+0x1a915]        # 430a5e <_IO_stdin_used@@Base+0x1a5e>
  416149:	lea    rdx,[rip+0x2fd2e]        # 445e7e <_IO_stdin_used@@Base+0x16e7e>
  416150:	mov    rdi,rbx
  416153:	call   407f70 <__flatcc_fb_gen_c_includes@@Base>
  416158:	mov    QWORD PTR [rsp+0x18],rbx
  41615d:	mov    rax,QWORD PTR [rbx+0xe0]
  416164:	cmp    DWORD PTR [rax+0xac],0x0
  41616b:	je     416186 <__flatcc_fb_gen_c_json_printer@@Base+0xc6>
  41616d:	mov    rcx,QWORD PTR [r15]
  416170:	lea    rdi,[rip+0x1ab6e]        # 430ce5 <_IO_stdin_used@@Base+0x1ce5>
  416177:	mov    esi,0x24
  41617c:	mov    edx,0x1
  416181:	call   406220 <fwrite@plt>
  416186:	mov    rbx,QWORD PTR [rsp+0x18]
  41618b:	mov    rsi,QWORD PTR [rbx+0xd0]
  416192:	mov    edi,0xa
  416197:	call   406120 <fputc@plt>
  41619c:	mov    rax,QWORD PTR [rbx+0xd8]
  4161a3:	mov    rcx,QWORD PTR [rax+0x58]
  4161a7:	vxorps xmm0,xmm0,xmm0
  4161ab:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  4161b4:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  4161bd:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  4161c6:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  4161cf:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  4161d5:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  4161db:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  4161e1:	mov    QWORD PTR [rsp+0x100],0x0
  4161ed:	test   rcx,rcx
  4161f0:	je     41624a <__flatcc_fb_gen_c_json_printer@@Base+0x18a>
  4161f2:	movzx  ecx,WORD PTR [rcx+0x10]
  4161f6:	cmp    ecx,0x1
  4161f9:	ja     41624a <__flatcc_fb_gen_c_json_printer@@Base+0x18a>
  4161fb:	mov    rbx,QWORD PTR [rsp+0x18]
  416200:	mov    rcx,QWORD PTR [rbx+0xd0]
  416207:	lea    rdi,[rip+0x2fc80]        # 445e8e <_IO_stdin_used@@Base+0x16e8e>
  41620e:	mov    esi,0x1e2
  416213:	mov    edx,0x1
  416218:	vzeroupper 
  41621b:	call   406220 <fwrite@plt>
  416220:	mov    rdi,QWORD PTR [rbx+0xd0]
  416227:	mov    rax,QWORD PTR [rbx+0xd8]
  41622e:	mov    rdx,QWORD PTR [rax+0x110]
  416235:	lea    rsi,[rip+0x2fe35]        # 446071 <_IO_stdin_used@@Base+0x17071>
  41623c:	xor    eax,eax
  41623e:	call   406180 <fprintf@plt>
  416243:	mov    rax,QWORD PTR [rbx+0xd8]
  41624a:	mov    rbx,QWORD PTR [rax+0x40]
  41624e:	test   rbx,rbx
  416251:	je     416302 <__flatcc_fb_gen_c_json_printer@@Base+0x242>
  416257:	lea    r14,[rsp+0x20]
  41625c:	lea    r12,[rip+0x2ff96]        # 4461f9 <_IO_stdin_used@@Base+0x171f9>
  416263:	lea    r13,[rip+0x2fe5f]        # 4460c9 <_IO_stdin_used@@Base+0x170c9>
  41626a:	nop    WORD PTR [rax+rax*1+0x0]
  416270:	movzx  eax,WORD PTR [rbx+0x10]
  416274:	test   ax,ax
  416277:	je     4162d0 <__flatcc_fb_gen_c_json_printer@@Base+0x210>
  416279:	movzx  eax,ax
  41627c:	cmp    eax,0x1
  41627f:	je     4162b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1f0>
  416281:	cmp    eax,0x4
  416284:	jne    4162f6 <__flatcc_fb_gen_c_json_printer@@Base+0x236>
  416286:	mov    rdi,QWORD PTR [rbx+0x18]
  41628a:	mov    rsi,rbx
  41628d:	mov    rdx,r14
  416290:	vzeroupper 
  416293:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  416298:	mov    rdi,QWORD PTR [r15]
  41629b:	xor    eax,eax
  41629d:	mov    rsi,r13
  4162a0:	mov    rdx,r14
  4162a3:	mov    rcx,r14
  4162a6:	call   406180 <fprintf@plt>
  4162ab:	jmp    4162f6 <__flatcc_fb_gen_c_json_printer@@Base+0x236>
  4162ad:	nop    DWORD PTR [rax]
  4162b0:	mov    rdi,QWORD PTR [rbx+0x18]
  4162b4:	mov    rsi,rbx
  4162b7:	mov    rdx,r14
  4162ba:	vzeroupper 
  4162bd:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  4162c2:	mov    rdi,QWORD PTR [r15]
  4162c5:	xor    eax,eax
  4162c7:	mov    rsi,r12
  4162ca:	jmp    4162ee <__flatcc_fb_gen_c_json_printer@@Base+0x22e>
  4162cc:	nop    DWORD PTR [rax+0x0]
  4162d0:	mov    rdi,QWORD PTR [rbx+0x18]
  4162d4:	mov    rsi,rbx
  4162d7:	mov    rdx,r14
  4162da:	vzeroupper 
  4162dd:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  4162e2:	mov    rdi,QWORD PTR [r15]
  4162e5:	xor    eax,eax
  4162e7:	lea    rsi,[rip+0x2fea1]        # 44618f <_IO_stdin_used@@Base+0x1718f>
  4162ee:	mov    rdx,r14
  4162f1:	call   406180 <fprintf@plt>
  4162f6:	mov    rbx,QWORD PTR [rbx]
  4162f9:	test   rbx,rbx
  4162fc:	jne    416270 <__flatcc_fb_gen_c_json_printer@@Base+0x1b0>
  416302:	mov    rbx,QWORD PTR [rsp+0x18]
  416307:	mov    rsi,QWORD PTR [rbx+0xd0]
  41630e:	mov    edi,0xa
  416313:	vzeroupper 
  416316:	call   406120 <fputc@plt>
  41631b:	mov    rax,QWORD PTR [rbx+0xd8]
  416322:	mov    r13,QWORD PTR [rax+0x40]
  416326:	test   r13,r13
  416329:	je     41735d <__flatcc_fb_gen_c_json_printer@@Base+0x129d>
  41632f:	lea    r14,[rsp+0x20]
  416334:	lea    r12,[rip+0x3c965]        # 452ca0 <fb_value_set_deleted@@Base+0x6a40>
  41633b:	mov    QWORD PTR [rsp+0x118],r15
  416343:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41634d:	nop    DWORD PTR [rax]
  416350:	movzx  eax,WORD PTR [r13+0x10]
  416355:	cmp    eax,0x3
  416358:	jne    4166ff <__flatcc_fb_gen_c_json_printer@@Base+0x63f>
  41635e:	vxorps xmm0,xmm0,xmm0
  416362:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  41636b:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  416374:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  41637d:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  416386:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  41638c:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  416392:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  416398:	mov    QWORD PTR [rsp+0x100],0x0
  4163a4:	mov    rdi,QWORD PTR [r13+0x18]
  4163a8:	mov    rsi,r13
  4163ab:	mov    rdx,r14
  4163ae:	vzeroupper 
  4163b1:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  4163b6:	mov    eax,DWORD PTR [r13+0x48]
  4163ba:	lea    ecx,[rax-0x1]
  4163bd:	cmp    ecx,0xb
  4163c0:	jae    4175ff <__flatcc_fb_gen_c_json_printer@@Base+0x153f>
  4163c6:	movsxd rcx,ecx
  4163c9:	lea    rdx,[rip+0x3c970]        # 452d40 <fb_value_set_deleted@@Base+0x6ae0>
  4163d0:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4163d4:	mov    r8,QWORD PTR [r12+rcx*8]
  4163d8:	cmp    eax,0x5
  4163db:	lea    rcx,[rip+0x1a951]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  4163e2:	cmove  rcx,QWORD PTR [rsp+0x18]
  4163e8:	test   BYTE PTR [r13+0xa4],0x20
  4163f0:	mov    QWORD PTR [rsp+0x8],rdi
  4163f5:	jne    416500 <__flatcc_fb_gen_c_json_printer@@Base+0x440>
  4163fb:	mov    rdi,QWORD PTR [r15]
  4163fe:	xor    eax,eax
  416400:	lea    rsi,[rip+0x2fe49]        # 446250 <_IO_stdin_used@@Base+0x17250>
  416407:	mov    rdx,r14
  41640a:	call   406180 <fprintf@plt>
  41640f:	mov    rcx,QWORD PTR [r15]
  416412:	mov    esi,0x12
  416417:	mov    edx,0x1
  41641c:	lea    rdi,[rip+0x3009d]        # 4464c0 <_IO_stdin_used@@Base+0x174c0>
  416423:	call   406220 <fwrite@plt>
  416428:	mov    rbx,QWORD PTR [r13+0x28]
  41642c:	test   rbx,rbx
  41642f:	je     4164df <__flatcc_fb_gen_c_json_printer@@Base+0x41f>
  416435:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41643f:	nop
  416440:	movzx  eax,WORD PTR [rbx+0x58]
  416444:	cmp    eax,0x4
  416447:	je     4164b0 <__flatcc_fb_gen_c_json_printer@@Base+0x3f0>
  416449:	movzx  eax,ax
  41644c:	cmp    eax,0x6
  41644f:	je     416480 <__flatcc_fb_gen_c_json_printer@@Base+0x3c0>
  416451:	cmp    eax,0x5
  416454:	jne    417524 <__flatcc_fb_gen_c_json_printer@@Base+0x1464>
  41645a:	mov    rdi,QWORD PTR [r15]
  41645d:	mov    rax,QWORD PTR [rbx+0x8]
  416461:	mov    rdx,QWORD PTR [rbx+0x48]
  416465:	mov    r8,QWORD PTR [rax]
  416468:	mov    r9,QWORD PTR [rax+0x8]
  41646c:	xor    eax,eax
  41646e:	lea    rsi,[rip+0x3005e]        # 4464d3 <_IO_stdin_used@@Base+0x174d3>
  416475:	jmp    4164cb <__flatcc_fb_gen_c_json_printer@@Base+0x40b>
  416477:	nop    WORD PTR [rax+rax*1+0x0]
  416480:	mov    rdi,QWORD PTR [r15]
  416483:	movzx  edx,BYTE PTR [rbx+0x48]
  416487:	mov    rax,QWORD PTR [rbx+0x8]
  41648b:	mov    r8,QWORD PTR [rax]
  41648e:	mov    r9,QWORD PTR [rax+0x8]
  416492:	xor    eax,eax
  416494:	lea    rsi,[rip+0x300bc]        # 446557 <_IO_stdin_used@@Base+0x17557>
  41649b:	mov    ecx,r9d
  41649e:	call   406180 <fprintf@plt>
  4164a3:	mov    rbx,QWORD PTR [rbx]
  4164a6:	test   rbx,rbx
  4164a9:	jne    416440 <__flatcc_fb_gen_c_json_printer@@Base+0x380>
  4164ab:	jmp    4164df <__flatcc_fb_gen_c_json_printer@@Base+0x41f>
  4164ad:	nop    DWORD PTR [rax]
  4164b0:	mov    rdi,QWORD PTR [r15]
  4164b3:	mov    rax,QWORD PTR [rbx+0x8]
  4164b7:	mov    rdx,QWORD PTR [rbx+0x48]
  4164bb:	mov    r8,QWORD PTR [rax]
  4164be:	mov    r9,QWORD PTR [rax+0x8]
  4164c2:	xor    eax,eax
  4164c4:	lea    rsi,[rip+0x3004a]        # 446515 <_IO_stdin_used@@Base+0x17515>
  4164cb:	mov    ecx,r9d
  4164ce:	call   406180 <fprintf@plt>
  4164d3:	mov    rbx,QWORD PTR [rbx]
  4164d6:	test   rbx,rbx
  4164d9:	jne    416440 <__flatcc_fb_gen_c_json_printer@@Base+0x380>
  4164df:	mov    rdi,QWORD PTR [r15]
  4164e2:	xor    eax,eax
  4164e4:	lea    rsi,[rip+0x300ad]        # 446598 <_IO_stdin_used@@Base+0x17598>
  4164eb:	mov    rdx,QWORD PTR [rsp+0x8]
  4164f0:	call   406180 <fprintf@plt>
  4164f5:	jmp    4166e6 <__flatcc_fb_gen_c_json_printer@@Base+0x626>
  4164fa:	nop    WORD PTR [rax+rax*1+0x0]
  416500:	mov    rax,QWORD PTR [r13+0xb8]
  416507:	lea    rdx,[rax-0x1]
  41650b:	mov    r14,0xffffffffffffffff
  416512:	lea    r12,[rip+0x2fd33]        # 44624c <_IO_stdin_used@@Base+0x1724c>
  416519:	lea    rbx,[rip+0x20e73]        # 437393 <_IO_stdin_used@@Base+0x8393>
  416520:	cmp    rdx,0x3
  416524:	ja     41654a <__flatcc_fb_gen_c_json_printer@@Base+0x48a>
  416526:	lea    rdx,[rip+0x30f83]        # 4474b0 <_IO_stdin_used@@Base+0x184b0>
  41652d:	mov    r14,QWORD PTR [rdx+rax*8-0x8]
  416532:	lea    rdx,[rip+0x3c7c7]        # 452d00 <fb_value_set_deleted@@Base+0x6aa0>
  416539:	mov    r12,QWORD PTR [rdx+rax*8-0x8]
  41653e:	lea    rdx,[rip+0x3c7db]        # 452d20 <fb_value_set_deleted@@Base+0x6ac0>
  416545:	mov    rbx,QWORD PTR [rdx+rax*8-0x8]
  41654a:	mov    rax,QWORD PTR [r13+0x28]
  41654e:	test   rax,rax
  416551:	je     416591 <__flatcc_fb_gen_c_json_printer@@Base+0x4d1>
  416553:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41655d:	nop    DWORD PTR [rax]
  416560:	movzx  edx,WORD PTR [rax+0x58]
  416564:	cmp    edx,0x4
  416567:	je     416576 <__flatcc_fb_gen_c_json_printer@@Base+0x4b6>
  416569:	movzx  edx,dx
  41656c:	cmp    edx,0x6
  41656f:	je     416580 <__flatcc_fb_gen_c_json_printer@@Base+0x4c0>
  416571:	cmp    edx,0x5
  416574:	jne    416589 <__flatcc_fb_gen_c_json_printer@@Base+0x4c9>
  416576:	mov    rdx,QWORD PTR [rax+0x48]
  41657a:	jmp    416584 <__flatcc_fb_gen_c_json_printer@@Base+0x4c4>
  41657c:	nop    DWORD PTR [rax+0x0]
  416580:	movzx  edx,BYTE PTR [rax+0x48]
  416584:	andn   r14,rdx,r14
  416589:	mov    rax,QWORD PTR [rax]
  41658c:	test   rax,rax
  41658f:	jne    416560 <__flatcc_fb_gen_c_json_printer@@Base+0x4a0>
  416591:	mov    rdi,QWORD PTR [r15]
  416594:	xor    eax,eax
  416596:	lea    rsi,[rip+0x2fcb3]        # 446250 <_IO_stdin_used@@Base+0x17250>
  41659d:	lea    rdx,[rsp+0x20]
  4165a2:	mov    r15,r8
  4165a5:	call   406180 <fprintf@plt>
  4165aa:	mov    rdi,rbx
  4165ad:	mov    rsi,r15
  4165b0:	mov    r15,QWORD PTR [rsp+0x118]
  4165b8:	call   406160 <strcmp@plt>
  4165bd:	mov    rdi,QWORD PTR [r15]
  4165c0:	test   eax,eax
  4165c2:	je     4165da <__flatcc_fb_gen_c_json_printer@@Base+0x51a>
  4165c4:	xor    eax,eax
  4165c6:	lea    rsi,[rip+0x2fcc9]        # 446296 <_IO_stdin_used@@Base+0x17296>
  4165cd:	mov    rdx,rbx
  4165d0:	mov    rcx,rbx
  4165d3:	call   406180 <fprintf@plt>
  4165d8:	jmp    4165eb <__flatcc_fb_gen_c_json_printer@@Base+0x52b>
  4165da:	xor    eax,eax
  4165dc:	lea    rsi,[rip+0x2fcc6]        # 4462a9 <_IO_stdin_used@@Base+0x172a9>
  4165e3:	mov    rdx,rbx
  4165e6:	call   406180 <fprintf@plt>
  4165eb:	mov    rcx,QWORD PTR [r15]
  4165ee:	mov    esi,0x36
  4165f3:	mov    edx,0x1
  4165f8:	lea    rdi,[rip+0x2fcb9]        # 4462b8 <_IO_stdin_used@@Base+0x172b8>
  4165ff:	call   406220 <fwrite@plt>
  416604:	mov    rsi,QWORD PTR [r15]
  416607:	mov    edi,0xa
  41660c:	call   406120 <fputc@plt>
  416611:	test   r14,r14
  416614:	je     41662f <__flatcc_fb_gen_c_json_printer@@Base+0x56f>
  416616:	mov    rdi,QWORD PTR [r15]
  416619:	xor    eax,eax
  41661b:	lea    rsi,[rip+0x2fccd]        # 4462ef <_IO_stdin_used@@Base+0x172ef>
  416622:	mov    rdx,r14
  416625:	mov    rcx,QWORD PTR [rsp+0x8]
  41662a:	call   406180 <fprintf@plt>
  41662f:	mov    rcx,QWORD PTR [r15]
  416632:	mov    esi,0x3b
  416637:	mov    edx,0x1
  41663c:	lea    rdi,[rip+0x2fd0c]        # 44634f <_IO_stdin_used@@Base+0x1734f>
  416643:	call   406220 <fwrite@plt>
  416648:	mov    rbx,QWORD PTR [r13+0x28]
  41664c:	test   rbx,rbx
  41664f:	lea    r14,[rip+0x2fd35]        # 44638b <_IO_stdin_used@@Base+0x1738b>
  416656:	je     4166c1 <__flatcc_fb_gen_c_json_printer@@Base+0x601>
  416658:	nop    DWORD PTR [rax+rax*1+0x0]
  416660:	movzx  eax,WORD PTR [rbx+0x58]
  416664:	cmp    eax,0x4
  416667:	je     41667a <__flatcc_fb_gen_c_json_printer@@Base+0x5ba>
  416669:	movzx  eax,ax
  41666c:	cmp    eax,0x6
  41666f:	je     416690 <__flatcc_fb_gen_c_json_printer@@Base+0x5d0>
  416671:	cmp    eax,0x5
  416674:	jne    41756d <__flatcc_fb_gen_c_json_printer@@Base+0x14ad>
  41667a:	mov    rdi,QWORD PTR [r15]
  41667d:	mov    rax,QWORD PTR [rbx+0x8]
  416681:	mov    rdx,QWORD PTR [rbx+0x48]
  416685:	jmp    41669b <__flatcc_fb_gen_c_json_printer@@Base+0x5db>
  416687:	nop    WORD PTR [rax+rax*1+0x0]
  416690:	mov    rdi,QWORD PTR [r15]
  416693:	movzx  edx,BYTE PTR [rbx+0x48]
  416697:	mov    rax,QWORD PTR [rbx+0x8]
  41669b:	mov    r9,QWORD PTR [rax]
  41669e:	mov    r8,QWORD PTR [rax+0x8]
  4166a2:	sub    rsp,0x8
  4166a6:	xor    eax,eax
  4166a8:	mov    rsi,r14
  4166ab:	mov    rcx,r12
  4166ae:	push   r8
  4166b0:	call   406180 <fprintf@plt>
  4166b5:	add    rsp,0x10
  4166b9:	mov    rbx,QWORD PTR [rbx]
  4166bc:	test   rbx,rbx
  4166bf:	jne    416660 <__flatcc_fb_gen_c_json_printer@@Base+0x5a0>
  4166c1:	mov    rcx,QWORD PTR [r15]
  4166c4:	mov    esi,0x3b
  4166c9:	mov    edx,0x1
  4166ce:	lea    rdi,[rip+0x2fc7a]        # 44634f <_IO_stdin_used@@Base+0x1734f>
  4166d5:	call   406220 <fwrite@plt>
  4166da:	lea    r14,[rsp+0x20]
  4166df:	lea    r12,[rip+0x3c5ba]        # 452ca0 <fb_value_set_deleted@@Base+0x6a40>
  4166e6:	mov    rcx,QWORD PTR [r15]
  4166e9:	mov    esi,0x3
  4166ee:	mov    edx,0x1
  4166f3:	lea    rdi,[rip+0x30c75]        # 44736f <_IO_stdin_used@@Base+0x1836f>
  4166fa:	call   406220 <fwrite@plt>
  4166ff:	mov    r13,QWORD PTR [r13+0x0]
  416703:	test   r13,r13
  416706:	jne    416350 <__flatcc_fb_gen_c_json_printer@@Base+0x290>
  41670c:	mov    rax,QWORD PTR [rsp+0x18]
  416711:	mov    rax,QWORD PTR [rax+0xd8]
  416718:	mov    r13,QWORD PTR [rax+0x40]
  41671c:	test   r13,r13
  41671f:	je     41735d <__flatcc_fb_gen_c_json_printer@@Base+0x129d>
  416725:	lea    r14,[rsp+0x20]
  41672a:	lea    rbx,[rsp+0x120]
  416732:	lea    r12,[rip+0x2ff0c]        # 446645 <_IO_stdin_used@@Base+0x17645>
  416739:	nop    DWORD PTR [rax+0x0]
  416740:	movzx  eax,WORD PTR [r13+0x10]
  416745:	cmp    eax,0x4
  416748:	jne    4169d2 <__flatcc_fb_gen_c_json_printer@@Base+0x912>
  41674e:	vxorps xmm0,xmm0,xmm0
  416752:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  41675b:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  416764:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  41676d:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  416776:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  41677c:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  416782:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  416788:	mov    QWORD PTR [rsp+0x100],0x0
  416794:	mov    rdi,QWORD PTR [r13+0x18]
  416798:	mov    rsi,r13
  41679b:	mov    rdx,r14
  41679e:	vzeroupper 
  4167a1:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  4167a6:	mov    rdi,QWORD PTR [r15]
  4167a9:	xor    eax,eax
  4167ab:	lea    rsi,[rip+0x2fe21]        # 4465d3 <_IO_stdin_used@@Base+0x175d3>
  4167b2:	mov    rdx,r14
  4167b5:	call   406180 <fprintf@plt>
  4167ba:	mov    rbx,QWORD PTR [r13+0x28]
  4167be:	test   rbx,rbx
  4167c1:	je     4167fd <__flatcc_fb_gen_c_json_printer@@Base+0x73d>
  4167c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4167cd:	nop    DWORD PTR [rax]
  4167d0:	cmp    WORD PTR [rbx+0x28],0x0
  4167d5:	je     4167f5 <__flatcc_fb_gen_c_json_printer@@Base+0x735>
  4167d7:	mov    rdi,QWORD PTR [r15]
  4167da:	mov    edx,DWORD PTR [rbx+0x48]
  4167dd:	mov    rax,QWORD PTR [rbx+0x8]
  4167e1:	mov    r8,QWORD PTR [rax]
  4167e4:	mov    r9,QWORD PTR [rax+0x8]
  4167e8:	xor    eax,eax
  4167ea:	mov    rsi,r12
  4167ed:	mov    ecx,r9d
  4167f0:	call   406180 <fprintf@plt>
  4167f5:	mov    rbx,QWORD PTR [rbx]
  4167f8:	test   rbx,rbx
  4167fb:	jne    4167d0 <__flatcc_fb_gen_c_json_printer@@Base+0x710>
  4167fd:	mov    rcx,QWORD PTR [r15]
  416800:	mov    esi,0x4e
  416805:	mov    edx,0x1
  41680a:	lea    rdi,[rip+0x2fe85]        # 446696 <_IO_stdin_used@@Base+0x17696>
  416811:	call   406220 <fwrite@plt>
  416816:	mov    rcx,QWORD PTR [r15]
  416819:	mov    esi,0x9
  41681e:	mov    edx,0x1
  416823:	lea    rdi,[rip+0x2c2fb]        # 442b25 <_IO_stdin_used@@Base+0x13b25>
  41682a:	call   406220 <fwrite@plt>
  41682f:	vxorps xmm0,xmm0,xmm0
  416833:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  41683c:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  416845:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  41684e:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  416857:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  41685d:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  416863:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  416869:	mov    QWORD PTR [rsp+0x100],0x0
  416875:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  41687e:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  416887:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  416890:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  416899:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  4168a2:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  4168ab:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  4168b4:	mov    QWORD PTR [rsp+0x200],0x0
  4168c0:	mov    rdi,QWORD PTR [r13+0x18]
  4168c4:	mov    rsi,r13
  4168c7:	mov    rdx,r14
  4168ca:	vzeroupper 
  4168cd:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  4168d2:	mov    rdi,QWORD PTR [r15]
  4168d5:	xor    eax,eax
  4168d7:	lea    rsi,[rip+0x2fe07]        # 4466e5 <_IO_stdin_used@@Base+0x176e5>
  4168de:	mov    rdx,r14
  4168e1:	call   406180 <fprintf@plt>
  4168e6:	mov    r14,QWORD PTR [r13+0x28]
  4168ea:	test   r14,r14
  4168ed:	lea    rbx,[rsp+0x120]
  4168f5:	je     41699b <__flatcc_fb_gen_c_json_printer@@Base+0x8db>
  4168fb:	nop    DWORD PTR [rax+rax*1+0x0]
  416900:	movzx  eax,WORD PTR [r14+0x28]
  416905:	test   ax,ax
  416908:	je     41698f <__flatcc_fb_gen_c_json_printer@@Base+0x8cf>
  41690e:	movzx  eax,ax
  416911:	cmp    eax,0xa
  416914:	je     416960 <__flatcc_fb_gen_c_json_printer@@Base+0x8a0>
  416916:	cmp    eax,0xe
  416919:	jne    4174db <__flatcc_fb_gen_c_json_printer@@Base+0x141b>
  41691f:	mov    rsi,QWORD PTR [r14+0x18]
  416923:	mov    rdi,QWORD PTR [rsi+0x18]
  416927:	mov    rdx,rbx
  41692a:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  41692f:	mov    rax,QWORD PTR [r14+0x18]
  416933:	movzx  eax,WORD PTR [rax+0x10]
  416937:	cmp    eax,0x1
  41693a:	je     416977 <__flatcc_fb_gen_c_json_printer@@Base+0x8b7>
  41693c:	test   ax,ax
  41693f:	jne    4175b6 <__flatcc_fb_gen_c_json_printer@@Base+0x14f6>
  416945:	mov    rdi,QWORD PTR [r15]
  416948:	mov    edx,DWORD PTR [r14+0x48]
  41694c:	xor    eax,eax
  41694e:	lea    rsi,[rip+0x2fe13]        # 446768 <_IO_stdin_used@@Base+0x17768>
  416955:	jmp    416987 <__flatcc_fb_gen_c_json_printer@@Base+0x8c7>
  416957:	nop    WORD PTR [rax+rax*1+0x0]
  416960:	mov    rdi,QWORD PTR [r15]
  416963:	mov    edx,DWORD PTR [r14+0x48]
  416967:	xor    eax,eax
  416969:	lea    rsi,[rip+0x2ff30]        # 4468a0 <_IO_stdin_used@@Base+0x178a0>
  416970:	call   406180 <fprintf@plt>
  416975:	jmp    41698f <__flatcc_fb_gen_c_json_printer@@Base+0x8cf>
  416977:	mov    rdi,QWORD PTR [r15]
  41697a:	mov    edx,DWORD PTR [r14+0x48]
  41697e:	xor    eax,eax
  416980:	lea    rsi,[rip+0x2fe45]        # 4467cc <_IO_stdin_used@@Base+0x177cc>
  416987:	mov    rcx,rbx
  41698a:	call   406180 <fprintf@plt>
  41698f:	mov    r14,QWORD PTR [r14]
  416992:	test   r14,r14
  416995:	jne    416900 <__flatcc_fb_gen_c_json_printer@@Base+0x840>
  41699b:	mov    rcx,QWORD PTR [r15]
  41699e:	mov    esi,0x1c
  4169a3:	mov    edx,0x1
  4169a8:	lea    rdi,[rip+0x2ff41]        # 4468f0 <_IO_stdin_used@@Base+0x178f0>
  4169af:	call   406220 <fwrite@plt>
  4169b4:	mov    rcx,QWORD PTR [r15]
  4169b7:	mov    esi,0x9
  4169bc:	mov    edx,0x1
  4169c1:	lea    rdi,[rip+0x2c15d]        # 442b25 <_IO_stdin_used@@Base+0x13b25>
  4169c8:	call   406220 <fwrite@plt>
  4169cd:	lea    r14,[rsp+0x20]
  4169d2:	mov    r13,QWORD PTR [r13+0x0]
  4169d6:	test   r13,r13
  4169d9:	jne    416740 <__flatcc_fb_gen_c_json_printer@@Base+0x680>
  4169df:	mov    rax,QWORD PTR [rsp+0x18]
  4169e4:	mov    rax,QWORD PTR [rax+0xd8]
  4169eb:	mov    r14,QWORD PTR [rax+0x40]
  4169ef:	test   r14,r14
  4169f2:	je     41735d <__flatcc_fb_gen_c_json_printer@@Base+0x129d>
  4169f8:	lea    r12,[rsp+0x20]
  4169fd:	nop    DWORD PTR [rax]
  416a00:	movzx  eax,WORD PTR [r14+0x10]
  416a05:	cmp    eax,0x1
  416a08:	jne    416c46 <__flatcc_fb_gen_c_json_printer@@Base+0xb86>
  416a0e:	vxorps xmm0,xmm0,xmm0
  416a12:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  416a1b:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  416a24:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  416a2d:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  416a36:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  416a3c:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  416a42:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  416a48:	mov    QWORD PTR [rsp+0x100],0x0
  416a54:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  416a5d:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  416a66:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  416a6f:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  416a78:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  416a81:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  416a8a:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  416a93:	mov    QWORD PTR [rsp+0x200],0x0
  416a9f:	mov    rdi,QWORD PTR [r14+0x18]
  416aa3:	mov    rsi,r14
  416aa6:	mov    rdx,r12
  416aa9:	vzeroupper 
  416aac:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  416ab1:	mov    rdi,QWORD PTR [r15]
  416ab4:	xor    eax,eax
  416ab6:	lea    rsi,[rip+0x2fe50]        # 44690d <_IO_stdin_used@@Base+0x1790d>
  416abd:	mov    rdx,r12
  416ac0:	call   406180 <fprintf@plt>
  416ac5:	mov    r13,QWORD PTR [r14+0x28]
  416ac9:	test   r13,r13
  416acc:	je     416c11 <__flatcc_fb_gen_c_json_printer@@Base+0xb51>
  416ad2:	xor    r12d,r12d
  416ad5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416adf:	nop
  416ae0:	test   BYTE PTR [r13+0x70],0x4
  416ae5:	jne    416c00 <__flatcc_fb_gen_c_json_printer@@Base+0xb40>
  416aeb:	movzx  eax,WORD PTR [r13+0x28]
  416af0:	cmp    eax,0xe
  416af3:	je     416b53 <__flatcc_fb_gen_c_json_printer@@Base+0xa93>
  416af5:	movzx  eax,ax
  416af8:	cmp    eax,0x8
  416afb:	jne    416c00 <__flatcc_fb_gen_c_json_printer@@Base+0xb40>
  416b01:	mov    eax,DWORD PTR [r13+0x18]
  416b05:	add    eax,0xffffffff
  416b08:	cmp    eax,0xb
  416b0b:	jae    4175ff <__flatcc_fb_gen_c_json_printer@@Base+0x153f>
  416b11:	cdqe   
  416b13:	lea    rcx,[rip+0x3c226]        # 452d40 <fb_value_set_deleted@@Base+0x6ae0>
  416b1a:	mov    rdx,QWORD PTR [rcx+rax*8]
  416b1e:	mov    rdi,QWORD PTR [r15]
  416b21:	mov    rbx,QWORD PTR [r13+0x8]
  416b25:	mov    r8,QWORD PTR [r13+0x78]
  416b29:	mov    r9,QWORD PTR [rbx+0x8]
  416b2d:	xor    eax,eax
  416b2f:	lea    rsi,[rip+0x2fe26]        # 44695c <_IO_stdin_used@@Base+0x1795c>
  416b36:	mov    ecx,r12d
  416b39:	push   r9
  416b3b:	push   QWORD PTR [rbx]
  416b3d:	call   406180 <fprintf@plt>
  416b42:	add    rsp,0x10
  416b46:	lea    rbx,[rsp+0x120]
  416b4e:	jmp    416c00 <__flatcc_fb_gen_c_json_printer@@Base+0xb40>
  416b53:	mov    rsi,QWORD PTR [r13+0x18]
  416b57:	mov    rdi,QWORD PTR [rsi+0x18]
  416b5b:	mov    rdx,rbx
  416b5e:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  416b63:	mov    rax,QWORD PTR [r13+0x18]
  416b67:	movzx  ecx,WORD PTR [rax+0x10]
  416b6b:	cmp    ecx,0x1
  416b6e:	je     416bd0 <__flatcc_fb_gen_c_json_printer@@Base+0xb10>
  416b70:	movzx  ecx,cx
  416b73:	cmp    ecx,0x3
  416b76:	jne    416c00 <__flatcc_fb_gen_c_json_printer@@Base+0xb40>
  416b7c:	mov    eax,DWORD PTR [rax+0x48]
  416b7f:	add    eax,0xffffffff
  416b82:	cmp    eax,0xb
  416b85:	jae    4175ff <__flatcc_fb_gen_c_json_printer@@Base+0x153f>
  416b8b:	cdqe   
  416b8d:	lea    rcx,[rip+0x3c1ac]        # 452d40 <fb_value_set_deleted@@Base+0x6ae0>
  416b94:	mov    rdx,QWORD PTR [rcx+rax*8]
  416b98:	mov    rdi,QWORD PTR [r15]
  416b9b:	mov    r10,QWORD PTR [r13+0x8]
  416b9f:	mov    r8,QWORD PTR [r13+0x78]
  416ba3:	mov    r9,QWORD PTR [r10+0x8]
  416ba7:	sub    rsp,0x8
  416bab:	xor    eax,eax
  416bad:	lea    rsi,[rip+0x2fdf0]        # 4469a4 <_IO_stdin_used@@Base+0x179a4>
  416bb4:	mov    ecx,r12d
  416bb7:	lea    rbx,[rsp+0x128]
  416bbf:	push   rbx
  416bc0:	push   r9
  416bc2:	push   QWORD PTR [r10]
  416bc5:	call   406180 <fprintf@plt>
  416bca:	add    rsp,0x20
  416bce:	jmp    416c00 <__flatcc_fb_gen_c_json_printer@@Base+0xb40>
  416bd0:	mov    rdi,QWORD PTR [r15]
  416bd3:	mov    rax,QWORD PTR [r13+0x8]
  416bd7:	mov    rcx,QWORD PTR [r13+0x78]
  416bdb:	mov    r9,QWORD PTR [rax]
  416bde:	mov    r8,QWORD PTR [rax+0x8]
  416be2:	xor    eax,eax
  416be4:	lea    rsi,[rip+0x2fe1a]        # 446a05 <_IO_stdin_used@@Base+0x17a05>
  416beb:	mov    edx,r12d
  416bee:	push   rbx
  416bef:	push   r8
  416bf1:	call   406180 <fprintf@plt>
  416bf6:	add    rsp,0x10
  416bfa:	nop    WORD PTR [rax+rax*1+0x0]
  416c00:	add    r12d,0x1
  416c04:	mov    r13,QWORD PTR [r13+0x0]
  416c08:	test   r13,r13
  416c0b:	jne    416ae0 <__flatcc_fb_gen_c_json_printer@@Base+0xa20>
  416c11:	mov    rcx,QWORD PTR [r15]
  416c14:	mov    esi,0x3
  416c19:	mov    edx,0x1
  416c1e:	lea    rdi,[rip+0x3074a]        # 44736f <_IO_stdin_used@@Base+0x1836f>
  416c25:	call   406220 <fwrite@plt>
  416c2a:	mov    rdi,QWORD PTR [r15]
  416c2d:	xor    eax,eax
  416c2f:	lea    rsi,[rip+0x2fe33]        # 446a69 <_IO_stdin_used@@Base+0x17a69>
  416c36:	lea    r12,[rsp+0x20]
  416c3b:	mov    rdx,r12
  416c3e:	mov    rcx,r12
  416c41:	call   406180 <fprintf@plt>
  416c46:	mov    r14,QWORD PTR [r14]
  416c49:	test   r14,r14
  416c4c:	jne    416a00 <__flatcc_fb_gen_c_json_printer@@Base+0x940>
  416c52:	mov    rax,QWORD PTR [rsp+0x18]
  416c57:	mov    rax,QWORD PTR [rax+0xd8]
  416c5e:	mov    r12,QWORD PTR [rax+0x40]
  416c62:	test   r12,r12
  416c65:	je     41735d <__flatcc_fb_gen_c_json_printer@@Base+0x129d>
  416c6b:	lea    r14,[rsp+0x20]
  416c70:	cmp    WORD PTR [r12+0x10],0x0
  416c77:	jne    417344 <__flatcc_fb_gen_c_json_printer@@Base+0x1284>
  416c7d:	vxorps xmm0,xmm0,xmm0
  416c81:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  416c8a:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  416c93:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  416c9c:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  416ca5:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  416cab:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  416cb1:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  416cb7:	mov    QWORD PTR [rsp+0x100],0x0
  416cc3:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  416ccc:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  416cd5:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  416cde:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  416ce7:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  416cf0:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  416cf9:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  416d02:	mov    QWORD PTR [rsp+0x200],0x0
  416d0e:	mov    rdi,QWORD PTR [r12+0x18]
  416d13:	mov    rsi,r12
  416d16:	mov    rdx,r14
  416d19:	vzeroupper 
  416d1c:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  416d21:	mov    QWORD PTR [rsp+0x8],r12
  416d26:	mov    rbx,QWORD PTR [r12+0xa8]
  416d2e:	mov    esi,0x8
  416d33:	mov    rdi,rbx
  416d36:	call   406150 <calloc@plt>
  416d3b:	test   rbx,rbx
  416d3e:	mov    rbx,rax
  416d41:	je     416d4c <__flatcc_fb_gen_c_json_printer@@Base+0xc8c>
  416d43:	test   rbx,rbx
  416d46:	je     41776c <__flatcc_fb_gen_c_json_printer@@Base+0x16ac>
  416d4c:	mov    r12,QWORD PTR [rsp+0x8]
  416d51:	mov    rax,QWORD PTR [r12+0x28]
  416d56:	test   rax,rax
  416d59:	je     416d73 <__flatcc_fb_gen_c_json_printer@@Base+0xcb3>
  416d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  416d60:	mov    rcx,QWORD PTR [rax+0x88]
  416d67:	mov    QWORD PTR [rbx+rcx*8],rax
  416d6b:	mov    rax,QWORD PTR [rax]
  416d6e:	test   rax,rax
  416d71:	jne    416d60 <__flatcc_fb_gen_c_json_printer@@Base+0xca0>
  416d73:	mov    rdi,QWORD PTR [r15]
  416d76:	xor    eax,eax
  416d78:	lea    rsi,[rip+0x2fe2b]        # 446baa <_IO_stdin_used@@Base+0x17baa>
  416d7f:	mov    rdx,r14
  416d82:	call   406180 <fprintf@plt>
  416d87:	cmp    QWORD PTR [r12+0xa8],0x0
  416d90:	je     417302 <__flatcc_fb_gen_c_json_printer@@Base+0x1242>
  416d96:	xor    r14d,r14d
  416d99:	mov    QWORD PTR [rsp+0x10],rbx
  416d9e:	jmp    416ee0 <__flatcc_fb_gen_c_json_printer@@Base+0xe20>
  416da3:	mov    eax,DWORD PTR [rax+0x48]
  416da6:	add    eax,0xffffffff
  416da9:	cmp    eax,0xb
  416dac:	jae    4175ff <__flatcc_fb_gen_c_json_printer@@Base+0x153f>
  416db2:	cdqe   
  416db4:	lea    rcx,[rip+0x3bf85]        # 452d40 <fb_value_set_deleted@@Base+0x6ae0>
  416dbb:	mov    rdx,QWORD PTR [rcx+rax*8]
  416dbf:	mov    eax,DWORD PTR [r13+0x58]
  416dc3:	lea    ecx,[rax-0x5]
  416dc6:	movzx  ecx,cx
  416dc9:	cmp    ecx,0x2
  416dcc:	jae    416e8b <__flatcc_fb_gen_c_json_printer@@Base+0xdcb>
  416dd2:	mov    rdi,QWORD PTR [r15]
  416dd5:	mov    rcx,QWORD PTR [r13+0x88]
  416ddc:	mov    rax,QWORD PTR [r13+0x8]
  416de0:	mov    r9,QWORD PTR [rax]
  416de3:	mov    r8,QWORD PTR [rax+0x8]
  416de7:	sub    rsp,0x8
  416deb:	xor    eax,eax
  416ded:	lea    rsi,[rip+0x300ab]        # 446e9f <_IO_stdin_used@@Base+0x17e9f>
  416df4:	lea    rbx,[rsp+0x128]
  416dfc:	push   rbx
  416dfd:	mov    rbx,QWORD PTR [rsp+0x20]
  416e02:	mov    r12,QWORD PTR [rsp+0x18]
  416e07:	push   QWORD PTR [r13+0x48]
  416e0b:	push   r8
  416e0d:	call   406180 <fprintf@plt>
  416e12:	add    rsp,0x20
  416e16:	jmp    4172f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1230>
  416e1b:	mov    eax,DWORD PTR [r13+0x18]
  416e1f:	add    eax,0xffffffff
  416e22:	cmp    eax,0xb
  416e25:	jae    4175ff <__flatcc_fb_gen_c_json_printer@@Base+0x153f>
  416e2b:	cdqe   
  416e2d:	lea    rcx,[rip+0x3bf0c]        # 452d40 <fb_value_set_deleted@@Base+0x6ae0>
  416e34:	mov    rdx,QWORD PTR [rcx+rax*8]
  416e38:	mov    rdi,QWORD PTR [r15]
  416e3b:	mov    rax,QWORD PTR [r13+0x8]
  416e3f:	mov    rcx,QWORD PTR [r13+0x88]
  416e46:	mov    r9,QWORD PTR [rax]
  416e49:	mov    r8,QWORD PTR [rax+0x8]
  416e4d:	sub    rsp,0x8
  416e51:	xor    eax,eax
  416e53:	lea    rsi,[rip+0x2ff84]        # 446dde <_IO_stdin_used@@Base+0x17dde>
  416e5a:	jmp    417114 <__flatcc_fb_gen_c_json_printer@@Base+0x1054>
  416e5f:	sub    rsp,0x8
  416e63:	xor    eax,eax
  416e65:	lea    rsi,[rip+0x2feb6]        # 446d22 <_IO_stdin_used@@Base+0x17d22>
  416e6c:	mov    ecx,r9d
  416e6f:	lea    rbx,[rsp+0x128]
  416e77:	push   rbx
  416e78:	call   406180 <fprintf@plt>
  416e7d:	add    rsp,0x10
  416e81:	mov    rbx,QWORD PTR [rsp+0x10]
  416e86:	jmp    4172f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1230>
  416e8b:	movzx  eax,ax
  416e8e:	cmp    eax,0x4
  416e91:	jne    417648 <__flatcc_fb_gen_c_json_printer@@Base+0x1588>
  416e97:	mov    rdi,QWORD PTR [r15]
  416e9a:	mov    rcx,QWORD PTR [r13+0x88]
  416ea1:	mov    rax,QWORD PTR [r13+0x8]
  416ea5:	mov    r9,QWORD PTR [rax]
  416ea8:	mov    r8,QWORD PTR [rax+0x8]
  416eac:	sub    rsp,0x8
  416eb0:	xor    eax,eax
  416eb2:	lea    rsi,[rip+0x3003d]        # 446ef6 <_IO_stdin_used@@Base+0x17ef6>
  416eb9:	lea    rbx,[rsp+0x128]
  416ec1:	push   rbx
  416ec2:	push   QWORD PTR [r13+0x48]
  416ec6:	push   r8
  416ec8:	call   406180 <fprintf@plt>
  416ecd:	add    rsp,0x20
  416ed1:	mov    r12,QWORD PTR [rsp+0x8]
  416ed6:	mov    rbx,QWORD PTR [rsp+0x10]
  416edb:	jmp    4172f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1230>
  416ee0:	mov    r13,QWORD PTR [rbx+r14*8]
  416ee4:	test   r13,r13
  416ee7:	je     4172f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1230>
  416eed:	test   BYTE PTR [r13+0x70],0x4
  416ef2:	jne    4172f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1230>
  416ef8:	mov    rcx,QWORD PTR [r15]
  416efb:	mov    esi,0x5
  416f00:	mov    edx,0x1
  416f05:	lea    rdi,[rip+0x2fd08]        # 446c14 <_IO_stdin_used@@Base+0x17c14>
  416f0c:	call   406220 <fwrite@plt>
  416f11:	mov    eax,DWORD PTR [r13+0x28]
  416f15:	add    eax,0xfffffff9
  416f18:	movzx  ecx,ax
  416f1b:	cmp    ecx,0x8
  416f1e:	ja     4172f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1230>
  416f24:	movzx  eax,ax
  416f27:	lea    rcx,[rip+0x2eea6]        # 445dd4 <_IO_stdin_used@@Base+0x16dd4>
  416f2e:	movsxd rax,DWORD PTR [rcx+rax*4]
  416f32:	add    rax,rcx
  416f35:	jmp    rax
  416f37:	movzx  r10d,WORD PTR [r13+0x70]
  416f3c:	test   r10d,0xc00
  416f43:	je     417120 <__flatcc_fb_gen_c_json_printer@@Base+0x1060>
  416f49:	mov    rdi,QWORD PTR [r15]
  416f4c:	mov    rax,QWORD PTR [r13+0x8]
  416f50:	mov    rdx,QWORD PTR [r13+0x88]
  416f57:	mov    r8,QWORD PTR [rax]
  416f5a:	mov    r9,QWORD PTR [rax+0x8]
  416f5e:	shr    r10d,0xa
  416f62:	not    r10d
  416f65:	and    r10d,0x1
  416f69:	sub    rsp,0x8
  416f6d:	xor    eax,eax
  416f6f:	lea    rsi,[rip+0x2fd5e]        # 446cd4 <_IO_stdin_used@@Base+0x17cd4>
  416f76:	mov    ecx,r9d
  416f79:	push   r10
  416f7b:	jmp    4172db <__flatcc_fb_gen_c_json_printer@@Base+0x121b>
  416f80:	mov    rdi,QWORD PTR [r15]
  416f83:	mov    rax,QWORD PTR [r13+0x8]
  416f87:	mov    rdx,QWORD PTR [r13+0x88]
  416f8e:	mov    r8,QWORD PTR [rax]
  416f91:	mov    r9,QWORD PTR [rax+0x8]
  416f95:	xor    eax,eax
  416f97:	lea    rsi,[rip+0x2febd]        # 446e5b <_IO_stdin_used@@Base+0x17e5b>
  416f9e:	jmp    417087 <__flatcc_fb_gen_c_json_printer@@Base+0xfc7>
  416fa3:	mov    rsi,QWORD PTR [r13+0x18]
  416fa7:	mov    rdi,QWORD PTR [rsi+0x18]
  416fab:	lea    rdx,[rsp+0x120]
  416fb3:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  416fb8:	mov    rax,QWORD PTR [r13+0x18]
  416fbc:	movzx  ecx,WORD PTR [rax+0x10]
  416fc0:	cmp    rcx,0x4
  416fc4:	ja     417691 <__flatcc_fb_gen_c_json_printer@@Base+0x15d1>
  416fca:	lea    rdx,[rip+0x2ee27]        # 445df8 <_IO_stdin_used@@Base+0x16df8>
  416fd1:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  416fd5:	add    rcx,rdx
  416fd8:	jmp    rcx
  416fda:	mov    rdi,QWORD PTR [r15]
  416fdd:	mov    rax,QWORD PTR [r13+0x8]
  416fe1:	mov    rdx,QWORD PTR [r13+0x88]
  416fe8:	mov    r8,QWORD PTR [rax]
  416feb:	mov    r9,QWORD PTR [rax+0x8]
  416fef:	sub    rsp,0x8
  416ff3:	xor    eax,eax
  416ff5:	lea    rsi,[rip+0x300d6]        # 4470d2 <_IO_stdin_used@@Base+0x180d2>
  416ffc:	jmp    4172c5 <__flatcc_fb_gen_c_json_printer@@Base+0x1205>
  417001:	mov    eax,DWORD PTR [r13+0x18]
  417005:	add    eax,0xffffffff
  417008:	cmp    eax,0xb
  41700b:	jae    4175ff <__flatcc_fb_gen_c_json_printer@@Base+0x153f>
  417011:	cdqe   
  417013:	lea    rcx,[rip+0x3bd26]        # 452d40 <fb_value_set_deleted@@Base+0x6ae0>
  41701a:	mov    rdx,QWORD PTR [rcx+rax*8]
  41701e:	mov    eax,DWORD PTR [r13+0x58]
  417022:	lea    ecx,[rax-0x5]
  417025:	movzx  ecx,cx
  417028:	cmp    ecx,0x2
  41702b:	jb     4170f2 <__flatcc_fb_gen_c_json_printer@@Base+0x1032>
  417031:	movzx  eax,ax
  417034:	cmp    eax,0x3
  417037:	je     417246 <__flatcc_fb_gen_c_json_printer@@Base+0x1186>
  41703d:	cmp    eax,0x4
  417040:	jne    4176da <__flatcc_fb_gen_c_json_printer@@Base+0x161a>
  417046:	mov    rdi,QWORD PTR [r15]
  417049:	mov    rcx,QWORD PTR [r13+0x88]
  417050:	mov    rax,QWORD PTR [r13+0x8]
  417054:	mov    r9,QWORD PTR [rax]
  417057:	mov    r8,QWORD PTR [rax+0x8]
  41705b:	xor    eax,eax
  41705d:	lea    rsi,[rip+0x2fbf4]        # 446c58 <_IO_stdin_used@@Base+0x17c58>
  417064:	jmp    417110 <__flatcc_fb_gen_c_json_printer@@Base+0x1050>
  417069:	mov    rdi,QWORD PTR [r15]
  41706c:	mov    rax,QWORD PTR [r13+0x8]
  417070:	mov    rdx,QWORD PTR [r13+0x88]
  417077:	mov    r8,QWORD PTR [rax]
  41707a:	mov    r9,QWORD PTR [rax+0x8]
  41707e:	xor    eax,eax
  417080:	lea    rsi,[rip+0x2fd97]        # 446e1e <_IO_stdin_used@@Base+0x17e1e>
  417087:	mov    ecx,r9d
  41708a:	call   406180 <fprintf@plt>
  41708f:	jmp    4172f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1230>
  417094:	mov    rsi,QWORD PTR [r13+0x18]
  417098:	mov    rdi,QWORD PTR [rsi+0x18]
  41709c:	lea    rdx,[rsp+0x120]
  4170a4:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  4170a9:	mov    rax,QWORD PTR [r13+0x18]
  4170ad:	movzx  ecx,WORD PTR [rax+0x10]
  4170b1:	cmp    rcx,0x4
  4170b5:	ja     417723 <__flatcc_fb_gen_c_json_printer@@Base+0x1663>
  4170bb:	lea    rdx,[rip+0x2ed4a]        # 445e0c <_IO_stdin_used@@Base+0x16e0c>
  4170c2:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4170c6:	add    rcx,rdx
  4170c9:	jmp    rcx
  4170cb:	mov    rdi,QWORD PTR [r15]
  4170ce:	mov    rax,QWORD PTR [r13+0x8]
  4170d2:	mov    rdx,QWORD PTR [r13+0x88]
  4170d9:	mov    r8,QWORD PTR [rax]
  4170dc:	mov    r9,QWORD PTR [rax+0x8]
  4170e0:	sub    rsp,0x8
  4170e4:	xor    eax,eax
  4170e6:	lea    rsi,[rip+0x2feeb]        # 446fd8 <_IO_stdin_used@@Base+0x17fd8>
  4170ed:	jmp    4172c5 <__flatcc_fb_gen_c_json_printer@@Base+0x1205>
  4170f2:	mov    rdi,QWORD PTR [r15]
  4170f5:	mov    rcx,QWORD PTR [r13+0x88]
  4170fc:	mov    rax,QWORD PTR [r13+0x8]
  417100:	mov    r9,QWORD PTR [rax]
  417103:	mov    r8,QWORD PTR [rax+0x8]
  417107:	xor    eax,eax
  417109:	lea    rsi,[rip+0x2fb0a]        # 446c1a <_IO_stdin_used@@Base+0x17c1a>
  417110:	push   QWORD PTR [r13+0x48]
  417114:	push   r8
  417116:	call   406180 <fprintf@plt>
  41711b:	jmp    4172e0 <__flatcc_fb_gen_c_json_printer@@Base+0x1220>
  417120:	mov    rsi,QWORD PTR [r13+0x90]
  417127:	test   rsi,rsi
  41712a:	je     416e1b <__flatcc_fb_gen_c_json_printer@@Base+0xd5b>
  417130:	mov    rdi,QWORD PTR [rsi+0x18]
  417134:	lea    rax,[rsp+0x120]
  41713c:	mov    rdx,rax
  41713f:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  417144:	mov    rax,QWORD PTR [r13+0x90]
  41714b:	cmp    WORD PTR [rax+0x10],0x0
  417150:	mov    rdi,QWORD PTR [r15]
  417153:	mov    rax,QWORD PTR [r13+0x8]
  417157:	mov    rdx,QWORD PTR [r13+0x88]
  41715e:	mov    r8,QWORD PTR [rax]
  417161:	mov    r9,QWORD PTR [rax+0x8]
  417165:	je     416e5f <__flatcc_fb_gen_c_json_printer@@Base+0xd9f>
  41716b:	sub    rsp,0x8
  41716f:	xor    eax,eax
  417171:	lea    rsi,[rip+0x2fc07]        # 446d7f <_IO_stdin_used@@Base+0x17d7f>
  417178:	jmp    416e6c <__flatcc_fb_gen_c_json_printer@@Base+0xdac>
  41717d:	mov    rdi,QWORD PTR [r15]
  417180:	mov    rax,QWORD PTR [r13+0x8]
  417184:	mov    rdx,QWORD PTR [r13+0x88]
  41718b:	mov    r8,QWORD PTR [rax]
  41718e:	mov    r9,QWORD PTR [rax+0x8]
  417192:	xor    eax,eax
  417194:	lea    rsi,[rip+0x3004c]        # 4471e7 <_IO_stdin_used@@Base+0x181e7>
  41719b:	jmp    417295 <__flatcc_fb_gen_c_json_printer@@Base+0x11d5>
  4171a0:	mov    rdi,QWORD PTR [r15]
  4171a3:	mov    rdx,QWORD PTR [r13+0x88]
  4171aa:	mov    rax,QWORD PTR [r13+0x8]
  4171ae:	mov    r8,QWORD PTR [rax]
  4171b1:	mov    r9,QWORD PTR [rax+0x8]
  4171b5:	xor    eax,eax
  4171b7:	lea    rsi,[rip+0x2ffca]        # 447188 <_IO_stdin_used@@Base+0x18188>
  4171be:	mov    ecx,r9d
  4171c1:	lea    rbx,[rsp+0x120]
  4171c9:	push   rbx
  4171ca:	mov    rbx,QWORD PTR [rsp+0x18]
  4171cf:	mov    r12,QWORD PTR [rsp+0x10]
  4171d4:	push   QWORD PTR [r13+0x80]
  4171db:	jmp    4172db <__flatcc_fb_gen_c_json_printer@@Base+0x121b>
  4171e0:	add    eax,0xffffffff
  4171e3:	cmp    eax,0xb
  4171e6:	jae    4175ff <__flatcc_fb_gen_c_json_printer@@Base+0x153f>
  4171ec:	cdqe   
  4171ee:	lea    rcx,[rip+0x3bb4b]        # 452d40 <fb_value_set_deleted@@Base+0x6ae0>
  4171f5:	mov    rdx,QWORD PTR [rcx+rax*8]
  4171f9:	mov    rdi,QWORD PTR [r15]
  4171fc:	mov    rax,QWORD PTR [r13+0x8]
  417200:	mov    rcx,QWORD PTR [r13+0x88]
  417207:	mov    r9,QWORD PTR [rax]
  41720a:	mov    r8,QWORD PTR [rax+0x8]
  41720e:	sub    rsp,0x8
  417212:	xor    eax,eax
  417214:	lea    rsi,[rip+0x2ff0f]        # 44712a <_IO_stdin_used@@Base+0x1812a>
  41721b:	lea    rbx,[rsp+0x128]
  417223:	push   rbx
  417224:	mov    r12,QWORD PTR [rsp+0x18]
  417229:	push   QWORD PTR [r12+0xb8]
  417231:	push   r8
  417233:	call   406180 <fprintf@plt>
  417238:	add    rsp,0x20
  41723c:	mov    rbx,QWORD PTR [rsp+0x10]
  417241:	jmp    4172f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1230>
  417246:	mov    rdi,QWORD PTR [r15]
  417249:	mov    rcx,QWORD PTR [r13+0x88]
  417250:	mov    rax,QWORD PTR [r13+0x8]
  417254:	mov    r9,QWORD PTR [rax]
  417257:	mov    r8,QWORD PTR [rax+0x8]
  41725b:	vmovsd xmm0,QWORD PTR [r13+0x48]
  417261:	sub    rsp,0x8
  417265:	mov    al,0x1
  417267:	lea    rsi,[rip+0x2fa28]        # 446c96 <_IO_stdin_used@@Base+0x17c96>
  41726e:	push   r8
  417270:	call   406180 <fprintf@plt>
  417275:	jmp    4172e0 <__flatcc_fb_gen_c_json_printer@@Base+0x1220>
  417277:	mov    rdi,QWORD PTR [r15]
  41727a:	mov    rax,QWORD PTR [r13+0x8]
  41727e:	mov    rdx,QWORD PTR [r13+0x88]
  417285:	mov    r8,QWORD PTR [rax]
  417288:	mov    r9,QWORD PTR [rax+0x8]
  41728c:	xor    eax,eax
  41728e:	lea    rsi,[rip+0x2fd94]        # 447029 <_IO_stdin_used@@Base+0x18029>
  417295:	mov    ecx,r9d
  417298:	lea    rbx,[rsp+0x120]
  4172a0:	push   rbx
  4172a1:	jmp    4172d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1210>
  4172a3:	mov    rdi,QWORD PTR [r15]
  4172a6:	mov    rax,QWORD PTR [r13+0x8]
  4172aa:	mov    rdx,QWORD PTR [r13+0x88]
  4172b1:	mov    r8,QWORD PTR [rax]
  4172b4:	mov    r9,QWORD PTR [rax+0x8]
  4172b8:	sub    rsp,0x8
  4172bc:	xor    eax,eax
  4172be:	lea    rsi,[rip+0x2fcc0]        # 446f85 <_IO_stdin_used@@Base+0x17f85>
  4172c5:	mov    ecx,r9d
  4172c8:	lea    rbx,[rsp+0x128]
  4172d0:	push   rbx
  4172d1:	mov    rbx,QWORD PTR [rsp+0x20]
  4172d6:	mov    r12,QWORD PTR [rsp+0x18]
  4172db:	call   406180 <fprintf@plt>
  4172e0:	add    rsp,0x10
  4172e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4172ee:	xchg   ax,ax
  4172f0:	add    r14,0x1
  4172f4:	cmp    r14,QWORD PTR [r12+0xa8]
  4172fc:	jb     416ee0 <__flatcc_fb_gen_c_json_printer@@Base+0xe20>
  417302:	mov    rcx,QWORD PTR [r15]
  417305:	mov    esi,0x4
  41730a:	mov    edx,0x1
  41730f:	lea    rdi,[rip+0x30058]        # 44736e <_IO_stdin_used@@Base+0x1836e>
  417316:	call   406220 <fwrite@plt>
  41731b:	mov    rdi,QWORD PTR [r15]
  41731e:	xor    eax,eax
  417320:	lea    rsi,[rip+0x2ff77]        # 44729e <_IO_stdin_used@@Base+0x1829e>
  417327:	lea    r14,[rsp+0x20]
  41732c:	mov    rdx,r14
  41732f:	mov    rcx,r14
  417332:	call   406180 <fprintf@plt>
  417337:	test   rbx,rbx
  41733a:	je     417344 <__flatcc_fb_gen_c_json_printer@@Base+0x1284>
  41733c:	mov    rdi,rbx
  41733f:	call   406040 <free@plt>
  417344:	mov    r12,QWORD PTR [r12]
  417348:	test   r12,r12
  41734b:	jne    416c70 <__flatcc_fb_gen_c_json_printer@@Base+0xbb0>
  417351:	mov    rax,QWORD PTR [rsp+0x18]
  417356:	mov    rax,QWORD PTR [rax+0xd8]
  41735d:	mov    rsi,QWORD PTR [rax+0x58]
  417361:	test   rsi,rsi
  417364:	je     417474 <__flatcc_fb_gen_c_json_printer@@Base+0x13b4>
  41736a:	movzx  eax,WORD PTR [rsi+0x10]
  41736e:	cmp    eax,0x1
  417371:	ja     417474 <__flatcc_fb_gen_c_json_printer@@Base+0x13b4>
  417377:	vxorps xmm0,xmm0,xmm0
  41737b:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  417384:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  41738d:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  417396:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  41739f:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  4173a5:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  4173ab:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  4173b1:	mov    QWORD PTR [rsp+0x100],0x0
  4173bd:	mov    rdi,QWORD PTR [rsi+0x18]
  4173c1:	lea    r14,[rsp+0x20]
  4173c6:	mov    rdx,r14
  4173c9:	vzeroupper 
  4173cc:	call   4081d0 <__flatcc_fb_scoped_symbol_name@@Base>
  4173d1:	mov    rbx,QWORD PTR [rsp+0x18]
  4173d6:	mov    rdi,QWORD PTR [rbx+0xd0]
  4173dd:	mov    rax,QWORD PTR [rbx+0xd8]
  4173e4:	mov    rdx,QWORD PTR [rax+0x110]
  4173eb:	lea    rsi,[rip+0x2ff81]        # 447373 <_IO_stdin_used@@Base+0x18373>
  4173f2:	xor    eax,eax
  4173f4:	call   406180 <fprintf@plt>
  4173f9:	mov    rdi,QWORD PTR [rbx+0xd0]
  417400:	lea    rsi,[rip+0x2ffc2]        # 4473c9 <_IO_stdin_used@@Base+0x183c9>
  417407:	xor    eax,eax
  417409:	mov    rdx,r14
  41740c:	call   406180 <fprintf@plt>
  417411:	mov    rcx,QWORD PTR [rbx+0xd0]
  417418:	mov    rax,QWORD PTR [rbx+0xd8]
  41741f:	movzx  edx,WORD PTR [rax+0x20]
  417423:	cmp    edx,0x2
  417426:	jne    417445 <__flatcc_fb_gen_c_json_printer@@Base+0x1385>
  417428:	mov    edx,DWORD PTR [rax+0x18]
  41742b:	mov    rbx,QWORD PTR [rax+0x10]
  41742f:	lea    rsi,[rip+0x30049]        # 44747f <_IO_stdin_used@@Base+0x1847f>
  417436:	xor    eax,eax
  417438:	mov    rdi,rcx
  41743b:	mov    rcx,rbx
  41743e:	call   406180 <fprintf@plt>
  417443:	jmp    41745b <__flatcc_fb_gen_c_json_printer@@Base+0x139b>
  417445:	lea    rdi,[rip+0x3003d]        # 447489 <_IO_stdin_used@@Base+0x18489>
  41744c:	mov    esi,0x3
  417451:	mov    edx,0x1
  417456:	call   406220 <fwrite@plt>
  41745b:	mov    rcx,QWORD PTR [r15]
  41745e:	lea    rdi,[rip+0x2ff0a]        # 44736f <_IO_stdin_used@@Base+0x1836f>
  417465:	mov    esi,0x3
  41746a:	mov    edx,0x1
  41746f:	call   406220 <fwrite@plt>
  417474:	mov    rax,QWORD PTR [rsp+0x18]
  417479:	mov    rax,QWORD PTR [rax+0xe0]
  417480:	cmp    DWORD PTR [rax+0xac],0x0
  417487:	je     4174a2 <__flatcc_fb_gen_c_json_printer@@Base+0x13e2>
  417489:	mov    rcx,QWORD PTR [r15]
  41748c:	lea    rdi,[rip+0x1f63c]        # 436acf <_IO_stdin_used@@Base+0x7acf>
  417493:	mov    esi,0x24
  417498:	mov    edx,0x1
  41749d:	call   406220 <fwrite@plt>
  4174a2:	mov    rax,QWORD PTR [rsp+0x18]
  4174a7:	mov    rdi,QWORD PTR [rax+0xd0]
  4174ae:	mov    rax,QWORD PTR [rax+0xd8]
  4174b5:	mov    rdx,QWORD PTR [rax+0x118]
  4174bc:	lea    rsi,[rip+0x2ffca]        # 44748d <_IO_stdin_used@@Base+0x1848d>
  4174c3:	xor    eax,eax
  4174c5:	call   406180 <fprintf@plt>
  4174ca:	xor    eax,eax
  4174cc:	lea    rsp,[rbp-0x28]
  4174d0:	pop    rbx
  4174d1:	pop    r12
  4174d3:	pop    r13
  4174d5:	pop    r14
  4174d7:	pop    r15
  4174d9:	pop    rbp
  4174da:	ret    
  4174db:	mov    rax,QWORD PTR [rip+0x3bb16]        # 452ff8 <stderr@GLIBC_2.2.5>
  4174e2:	mov    rdi,QWORD PTR [rax]
  4174e5:	lea    rsi,[rip+0x1972c]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  4174ec:	lea    rbx,[rip+0x2eee4]        # 4463d7 <_IO_stdin_used@@Base+0x173d7>
  4174f3:	lea    r8,[rip+0x2f338]        # 446832 <_IO_stdin_used@@Base+0x17832>
  4174fa:	mov    ecx,0xfb
  4174ff:	xor    eax,eax
  417501:	mov    rdx,rbx
  417504:	call   406180 <fprintf@plt>
  417509:	lea    rdi,[rip+0x2a66f]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  417510:	lea    rcx,[rip+0x2f342]        # 446859 <_IO_stdin_used@@Base+0x17859>
  417517:	mov    edx,0xfb
  41751c:	mov    rsi,rbx
  41751f:	call   406100 <__assert_fail@plt>
  417524:	mov    rax,QWORD PTR [rip+0x3bacd]        # 452ff8 <stderr@GLIBC_2.2.5>
  41752b:	mov    rdi,QWORD PTR [rax]
  41752e:	lea    rsi,[rip+0x196e3]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  417535:	lea    rbx,[rip+0x2ee9b]        # 4463d7 <_IO_stdin_used@@Base+0x173d7>
  41753c:	lea    r8,[rip+0x2ef04]        # 446447 <_IO_stdin_used@@Base+0x17447>
  417543:	mov    ecx,0x9d
  417548:	xor    eax,eax
  41754a:	mov    rdx,rbx
  41754d:	call   406180 <fprintf@plt>
  417552:	lea    rdi,[rip+0x2a626]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  417559:	lea    rcx,[rip+0x2ef21]        # 446481 <_IO_stdin_used@@Base+0x17481>
  417560:	mov    edx,0x9d
  417565:	mov    rsi,rbx
  417568:	call   406100 <__assert_fail@plt>
  41756d:	mov    rax,QWORD PTR [rip+0x3ba84]        # 452ff8 <stderr@GLIBC_2.2.5>
  417574:	mov    rdi,QWORD PTR [rax]
  417577:	lea    rsi,[rip+0x1969a]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  41757e:	lea    rbx,[rip+0x2ee52]        # 4463d7 <_IO_stdin_used@@Base+0x173d7>
  417585:	lea    r8,[rip+0x2eebb]        # 446447 <_IO_stdin_used@@Base+0x17447>
  41758c:	mov    ecx,0x86
  417591:	xor    eax,eax
  417593:	mov    rdx,rbx
  417596:	call   406180 <fprintf@plt>
  41759b:	lea    rdi,[rip+0x2a5dd]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  4175a2:	lea    rcx,[rip+0x2eed8]        # 446481 <_IO_stdin_used@@Base+0x17481>
  4175a9:	mov    edx,0x86
  4175ae:	mov    rsi,rbx
  4175b1:	call   406100 <__assert_fail@plt>
  4175b6:	mov    rax,QWORD PTR [rip+0x3ba3b]        # 452ff8 <stderr@GLIBC_2.2.5>
  4175bd:	mov    rdi,QWORD PTR [rax]
  4175c0:	lea    rsi,[rip+0x19651]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  4175c7:	lea    rbx,[rip+0x2ee09]        # 4463d7 <_IO_stdin_used@@Base+0x173d7>
  4175ce:	lea    r8,[rip+0x2f25d]        # 446832 <_IO_stdin_used@@Base+0x17832>
  4175d5:	mov    ecx,0xf0
  4175da:	xor    eax,eax
  4175dc:	mov    rdx,rbx
  4175df:	call   406180 <fprintf@plt>
  4175e4:	lea    rdi,[rip+0x2a594]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  4175eb:	lea    rcx,[rip+0x2f267]        # 446859 <_IO_stdin_used@@Base+0x17859>
  4175f2:	mov    edx,0xf0
  4175f7:	mov    rsi,rbx
  4175fa:	call   406100 <__assert_fail@plt>
  4175ff:	mov    rax,QWORD PTR [rip+0x3b9f2]        # 452ff8 <stderr@GLIBC_2.2.5>
  417606:	mov    rdi,QWORD PTR [rax]
  417609:	lea    rsi,[rip+0x19608]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  417610:	lea    rbx,[rip+0x1fdb3]        # 4373ca <_IO_stdin_used@@Base+0x83ca>
  417617:	lea    r8,[rip+0x1fe0f]        # 43742d <_IO_stdin_used@@Base+0x842d>
  41761e:	mov    ecx,0x60
  417623:	xor    eax,eax
  417625:	mov    rdx,rbx
  417628:	call   406180 <fprintf@plt>
  41762d:	lea    rdi,[rip+0x2a54b]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  417634:	lea    rcx,[rip+0x20722]        # 437d5d <_IO_stdin_used@@Base+0x8d5d>
  41763b:	mov    edx,0x60
  417640:	mov    rsi,rbx
  417643:	call   406100 <__assert_fail@plt>
  417648:	mov    rax,QWORD PTR [rip+0x3b9a9]        # 452ff8 <stderr@GLIBC_2.2.5>
  41764f:	mov    rdi,QWORD PTR [rax]
  417652:	lea    rsi,[rip+0x195bf]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  417659:	lea    rbx,[rip+0x2ed77]        # 4463d7 <_IO_stdin_used@@Base+0x173d7>
  417660:	lea    r8,[rip+0x2f8e6]        # 446f4d <_IO_stdin_used@@Base+0x17f4d>
  417667:	mov    ecx,0x1e3
  41766c:	xor    eax,eax
  41766e:	mov    rdx,rbx
  417671:	call   406180 <fprintf@plt>
  417676:	lea    rdi,[rip+0x2a502]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  41767d:	lea    rcx,[rip+0x2f4e6]        # 446b6a <_IO_stdin_used@@Base+0x17b6a>
  417684:	mov    edx,0x1e3
  417689:	mov    rsi,rbx
  41768c:	call   406100 <__assert_fail@plt>
  417691:	mov    rax,QWORD PTR [rip+0x3b960]        # 452ff8 <stderr@GLIBC_2.2.5>
  417698:	mov    rdi,QWORD PTR [rax]
  41769b:	lea    rsi,[rip+0x19576]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  4176a2:	lea    rbx,[rip+0x2ed2e]        # 4463d7 <_IO_stdin_used@@Base+0x173d7>
  4176a9:	lea    r8,[rip+0x2fba9]        # 447259 <_IO_stdin_used@@Base+0x18259>
  4176b0:	mov    ecx,0x21f
  4176b5:	xor    eax,eax
  4176b7:	mov    rdx,rbx
  4176ba:	call   406180 <fprintf@plt>
  4176bf:	lea    rdi,[rip+0x2a4b9]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  4176c6:	lea    rcx,[rip+0x2f49d]        # 446b6a <_IO_stdin_used@@Base+0x17b6a>
  4176cd:	mov    edx,0x21f
  4176d2:	mov    rsi,rbx
  4176d5:	call   406100 <__assert_fail@plt>
  4176da:	mov    rax,QWORD PTR [rip+0x3b917]        # 452ff8 <stderr@GLIBC_2.2.5>
  4176e1:	mov    rdi,QWORD PTR [rax]
  4176e4:	lea    rsi,[rip+0x1952d]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  4176eb:	lea    rbx,[rip+0x2ece5]        # 4463d7 <_IO_stdin_used@@Base+0x173d7>
  4176f2:	lea    r8,[rip+0x2d6d9]        # 444dd2 <_IO_stdin_used@@Base+0x15dd2>
  4176f9:	mov    ecx,0x196
  4176fe:	xor    eax,eax
  417700:	mov    rdx,rbx
  417703:	call   406180 <fprintf@plt>
  417708:	lea    rdi,[rip+0x2a470]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  41770f:	lea    rcx,[rip+0x2f454]        # 446b6a <_IO_stdin_used@@Base+0x17b6a>
  417716:	mov    edx,0x196
  41771b:	mov    rsi,rbx
  41771e:	call   406100 <__assert_fail@plt>
  417723:	mov    rax,QWORD PTR [rip+0x3b8ce]        # 452ff8 <stderr@GLIBC_2.2.5>
  41772a:	mov    rdi,QWORD PTR [rax]
  41772d:	lea    rsi,[rip+0x194e4]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  417734:	lea    rbx,[rip+0x2ec9c]        # 4463d7 <_IO_stdin_used@@Base+0x173d7>
  41773b:	lea    r8,[rip+0x2f952]        # 447094 <_IO_stdin_used@@Base+0x18094>
  417742:	mov    ecx,0x1f8
  417747:	xor    eax,eax
  417749:	mov    rdx,rbx
  41774c:	call   406180 <fprintf@plt>
  417751:	lea    rdi,[rip+0x2a427]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  417758:	lea    rcx,[rip+0x2f40b]        # 446b6a <_IO_stdin_used@@Base+0x17b6a>
  41775f:	mov    edx,0x1f8
  417764:	mov    rsi,rbx
  417767:	call   406100 <__assert_fail@plt>
  41776c:	mov    rax,QWORD PTR [rip+0x3b885]        # 452ff8 <stderr@GLIBC_2.2.5>
  417773:	mov    rdi,QWORD PTR [rax]
  417776:	lea    rsi,[rip+0x1949b]        # 430c18 <_IO_stdin_used@@Base+0x1c18>
  41777d:	lea    rbx,[rip+0x2ec53]        # 4463d7 <_IO_stdin_used@@Base+0x173d7>
  417784:	lea    r8,[rip+0x2f3b5]        # 446b40 <_IO_stdin_used@@Base+0x17b40>
  41778b:	mov    ecx,0x169
  417790:	xor    eax,eax
  417792:	mov    rdx,rbx
  417795:	call   406180 <fprintf@plt>
  41779a:	lea    rdi,[rip+0x2a3de]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  4177a1:	lea    rcx,[rip+0x2f3c2]        # 446b6a <_IO_stdin_used@@Base+0x17b6a>
  4177a8:	mov    edx,0x169
  4177ad:	mov    rsi,rbx
  4177b0:	call   406100 <__assert_fail@plt>
  4177b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4177bf:	nop

00000000004177c0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
  4177c0:	push   r15
  4177c2:	push   r14
  4177c4:	push   r13
  4177c6:	push   r12
  4177c8:	push   rbx
  4177c9:	sub    rsp,0x190
  4177d0:	mov    r14,rcx
  4177d3:	mov    r15,rdx
  4177d6:	mov    r12,rsi
  4177d9:	mov    rbx,rdi
  4177dc:	lea    r13,[rsp+0x8]
  4177e1:	mov    rdi,r13
  4177e4:	call   427e80 <flatcc_builder_init@@Base>
  4177e9:	mov    rdi,r13
  4177ec:	mov    rsi,rbx
  4177ef:	mov    rdx,r12
  4177f2:	call   417840 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x80>
  4177f7:	mov    rdx,QWORD PTR [r14]
  4177fa:	mov    rdi,r13
  4177fd:	mov    rsi,r15
  417800:	call   42c500 <flatcc_builder_copy_buffer@@Base>
  417805:	test   rax,rax
  417808:	je     417812 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x52>
  41780a:	mov    rdi,r15
  41780d:	call   4187c0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1000>
  417812:	lea    rbx,[rsp+0x8]
  417817:	mov    rdi,rbx
  41781a:	call   42c400 <flatcc_builder_get_buffer_size@@Base>
  41781f:	mov    QWORD PTR [r14],rax
  417822:	mov    rdi,rbx
  417825:	call   428240 <flatcc_builder_clear@@Base>
  41782a:	mov    rax,r15
  41782d:	add    rsp,0x190
  417834:	pop    rbx
  417835:	pop    r12
  417837:	pop    r13
  417839:	pop    r14
  41783b:	pop    r15
  41783d:	ret    
  41783e:	xchg   ax,ax
  417840:	push   rbp
  417841:	mov    rbp,rsp
  417844:	push   r15
  417846:	push   r14
  417848:	push   r13
  41784a:	push   r12
  41784c:	push   rbx
  41784d:	and    rsp,0xffffffffffffffe0
  417851:	sub    rsp,0x100
  417858:	mov    QWORD PTR [rsp+0x30],rsi
  41785d:	mov    eax,DWORD PTR [rsi+0xd8]
  417863:	mov    rcx,QWORD PTR [rdx+0x68]
  417867:	vxorps xmm0,xmm0,xmm0
  41786b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  417871:	mov    QWORD PTR [rsp+0x28],rdi
  417876:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  41787c:	mov    QWORD PTR [rsp+0x80],0x0
  417888:	mov    DWORD PTR [rsp+0x40],eax
  41788c:	mov    QWORD PTR [rsp+0xc0],rdx
  417894:	mov    QWORD PTR [rsp+0x88],rdx
  41789c:	lea    rsi,[rip+0x138d]        # 418c30 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f0>
  4178a3:	lea    rdx,[rsp+0x40]
  4178a8:	mov    QWORD PTR [rsp+0x38],rcx
  4178ad:	mov    rdi,rcx
  4178b0:	vzeroupper 
  4178b3:	call   41b650 <fb_scope_table_visit@@Base>
  4178b8:	movsxd r15,DWORD PTR [rsp+0x44]
  4178bd:	mov    esi,0x10
  4178c2:	mov    rdi,r15
  4178c5:	call   406150 <calloc@plt>
  4178ca:	mov    r13,rax
  4178cd:	mov    QWORD PTR [rsp+0x58],rax
  4178d2:	mov    ebx,DWORD PTR [rsp+0x48]
  4178d6:	movsxd rdi,ebx
  4178d9:	mov    esi,0x10
  4178de:	call   406150 <calloc@plt>
  4178e3:	mov    r12,rax
  4178e6:	mov    QWORD PTR [rsp+0x60],rax
  4178eb:	mov    r14,QWORD PTR [rsp+0x50]
  4178f0:	mov    rdi,r14
  4178f3:	call   4061b0 <malloc@plt>
  4178f8:	mov    QWORD PTR [rsp+0x68],rax
  4178fd:	mov    QWORD PTR [rsp+0x70],r13
  417902:	mov    QWORD PTR [rsp+0x78],r12
  417907:	mov    QWORD PTR [rsp+0x80],rax
  41790f:	test   r15,r15
  417912:	jle    417919 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x159>
  417914:	test   r13,r13
  417917:	je     41793e <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x17e>
  417919:	test   ebx,ebx
  41791b:	jle    417922 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x162>
  41791d:	test   r12,r12
  417920:	je     41792c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x16c>
  417922:	test   r14,r14
  417925:	je     417989 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1c9>
  417927:	test   rax,rax
  41792a:	jne    417989 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1c9>
  41792c:	test   r13,r13
  41792f:	je     41793e <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x17e>
  417931:	mov    rdi,r13
  417934:	call   406040 <free@plt>
  417939:	mov    r12,QWORD PTR [rsp+0x60]
  41793e:	test   r12,r12
  417941:	je     41794b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x18b>
  417943:	mov    rdi,r12
  417946:	call   406040 <free@plt>
  41794b:	mov    rdi,QWORD PTR [rsp+0x68]
  417950:	test   rdi,rdi
  417953:	je     41795a <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x19a>
  417955:	call   406040 <free@plt>
  41795a:	vxorps xmm0,xmm0,xmm0
  41795e:	vmovups YMMWORD PTR [rsp+0x70],ymm0
  417964:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  41796a:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  417970:	mov    ebx,0xffffffff
  417975:	mov    eax,ebx
  417977:	lea    rsp,[rbp-0x28]
  41797b:	pop    rbx
  41797c:	pop    r12
  41797e:	pop    r13
  417980:	pop    r14
  417982:	pop    r15
  417984:	pop    rbp
  417985:	vzeroupper 
  417988:	ret    
  417989:	lea    rsi,[rip+0x12c0]        # 418c50 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x210>
  417990:	lea    rdx,[rsp+0x40]
  417995:	mov    rdi,QWORD PTR [rsp+0x38]
  41799a:	call   41b650 <fb_scope_table_visit@@Base>
  41799f:	mov    r15,QWORD PTR [rsp+0x58]
  4179a4:	movsxd rbx,DWORD PTR [rsp+0x44]
  4179a9:	lea    rcx,[rip+0x1480]        # 418e30 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3f0>
  4179b0:	mov    edx,0x10
  4179b5:	mov    rdi,r15
  4179b8:	mov    rsi,rbx
  4179bb:	call   406080 <qsort@plt>
  4179c0:	test   rbx,rbx
  4179c3:	mov    r14,QWORD PTR [rsp+0xc0]
  4179cb:	jle    417ab8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2f8>
  4179d1:	mov    edx,ebx
  4179d3:	lea    rcx,[rdx-0x1]
  4179d7:	mov    eax,edx
  4179d9:	and    eax,0x7
  4179dc:	cmp    rcx,0x7
  4179e0:	jae    4179f2 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x232>
  4179e2:	xor    ecx,ecx
  4179e4:	test   rax,rax
  4179e7:	jne    417a85 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2c5>
  4179ed:	jmp    417ab8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2f8>
  4179f2:	lea    rsi,[r15+0x70]
  4179f6:	sub    rdx,rax
  4179f9:	xor    ecx,ecx
  4179fb:	nop    DWORD PTR [rax+rax*1+0x0]
  417a00:	mov    rdi,QWORD PTR [rsi-0x70]
  417a04:	mov    QWORD PTR [rdi+0xc8],rcx
  417a0b:	mov    rdi,QWORD PTR [rsi-0x60]
  417a0f:	lea    rbx,[rcx+0x1]
  417a13:	mov    QWORD PTR [rdi+0xc8],rbx
  417a1a:	mov    rdi,QWORD PTR [rsi-0x50]
  417a1e:	lea    rbx,[rcx+0x2]
  417a22:	mov    QWORD PTR [rdi+0xc8],rbx
  417a29:	mov    rdi,QWORD PTR [rsi-0x40]
  417a2d:	lea    rbx,[rcx+0x3]
  417a31:	mov    QWORD PTR [rdi+0xc8],rbx
  417a38:	mov    rdi,QWORD PTR [rsi-0x30]
  417a3c:	lea    rbx,[rcx+0x4]
  417a40:	mov    QWORD PTR [rdi+0xc8],rbx
  417a47:	mov    rdi,QWORD PTR [rsi-0x20]
  417a4b:	lea    rbx,[rcx+0x5]
  417a4f:	mov    QWORD PTR [rdi+0xc8],rbx
  417a56:	mov    rdi,QWORD PTR [rsi-0x10]
  417a5a:	lea    rbx,[rcx+0x6]
  417a5e:	mov    QWORD PTR [rdi+0xc8],rbx
  417a65:	mov    rdi,QWORD PTR [rsi]
  417a68:	lea    rbx,[rcx+0x7]
  417a6c:	mov    QWORD PTR [rdi+0xc8],rbx
  417a73:	add    rcx,0x8
  417a77:	sub    rsi,0xffffffffffffff80
  417a7b:	cmp    rdx,rcx
  417a7e:	jne    417a00 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x240>
  417a80:	test   rax,rax
  417a83:	je     417ab8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2f8>
  417a85:	mov    rdx,rcx
  417a88:	shl    rdx,0x4
  417a8c:	add    r15,rdx
  417a8f:	neg    rax
  417a92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417a9c:	nop    DWORD PTR [rax+0x0]
  417aa0:	mov    rdx,QWORD PTR [r15]
  417aa3:	mov    QWORD PTR [rdx+0xc8],rcx
  417aaa:	add    rcx,0x1
  417aae:	add    r15,0x10
  417ab2:	add    rax,0x1
  417ab6:	jne    417aa0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2e0>
  417ab8:	mov    r15,QWORD PTR [rsp+0x60]
  417abd:	movsxd rbx,DWORD PTR [rsp+0x48]
  417ac2:	lea    rcx,[rip+0x1367]        # 418e30 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3f0>
  417ac9:	mov    edx,0x10
  417ace:	mov    rdi,r15
  417ad1:	mov    rsi,rbx
  417ad4:	call   406080 <qsort@plt>
  417ad9:	test   rbx,rbx
  417adc:	jle    417bc8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x408>
  417ae2:	mov    edx,ebx
  417ae4:	lea    rcx,[rdx-0x1]
  417ae8:	mov    eax,edx
  417aea:	and    eax,0x7
  417aed:	cmp    rcx,0x7
  417af1:	jae    417b03 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x343>
  417af3:	xor    ecx,ecx
  417af5:	test   rax,rax
  417af8:	jne    417b95 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x3d5>
  417afe:	jmp    417bc8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x408>
  417b03:	lea    rsi,[r15+0x70]
  417b07:	sub    rdx,rax
  417b0a:	xor    ecx,ecx
  417b0c:	nop    DWORD PTR [rax+0x0]
  417b10:	mov    rdi,QWORD PTR [rsi-0x70]
  417b14:	mov    QWORD PTR [rdi+0xc8],rcx
  417b1b:	mov    rdi,QWORD PTR [rsi-0x60]
  417b1f:	lea    rbx,[rcx+0x1]
  417b23:	mov    QWORD PTR [rdi+0xc8],rbx
  417b2a:	mov    rdi,QWORD PTR [rsi-0x50]
  417b2e:	lea    rbx,[rcx+0x2]
  417b32:	mov    QWORD PTR [rdi+0xc8],rbx
  417b39:	mov    rdi,QWORD PTR [rsi-0x40]
  417b3d:	lea    rbx,[rcx+0x3]
  417b41:	mov    QWORD PTR [rdi+0xc8],rbx
  417b48:	mov    rdi,QWORD PTR [rsi-0x30]
  417b4c:	lea    rbx,[rcx+0x4]
  417b50:	mov    QWORD PTR [rdi+0xc8],rbx
  417b57:	mov    rdi,QWORD PTR [rsi-0x20]
  417b5b:	lea    rbx,[rcx+0x5]
  417b5f:	mov    QWORD PTR [rdi+0xc8],rbx
  417b66:	mov    rdi,QWORD PTR [rsi-0x10]
  417b6a:	lea    rbx,[rcx+0x6]
  417b6e:	mov    QWORD PTR [rdi+0xc8],rbx
  417b75:	mov    rdi,QWORD PTR [rsi]
  417b78:	lea    rbx,[rcx+0x7]
  417b7c:	mov    QWORD PTR [rdi+0xc8],rbx
  417b83:	add    rcx,0x8
  417b87:	sub    rsi,0xffffffffffffff80
  417b8b:	cmp    rdx,rcx
  417b8e:	jne    417b10 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x350>
  417b90:	test   rax,rax
  417b93:	je     417bc8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x408>
  417b95:	mov    rdx,rcx
  417b98:	shl    rdx,0x4
  417b9c:	add    r15,rdx
  417b9f:	neg    rax
  417ba2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417bac:	nop    DWORD PTR [rax+0x0]
  417bb0:	mov    rdx,QWORD PTR [r15]
  417bb3:	mov    QWORD PTR [rdx+0xc8],rcx
  417bba:	add    rcx,0x1
  417bbe:	add    r15,0x10
  417bc2:	add    rax,0x1
  417bc6:	jne    417bb0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x3f0>
  417bc8:	movsxd rdi,DWORD PTR [rsp+0x44]
  417bcd:	test   rdi,rdi
  417bd0:	jle    417bee <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x42e>
  417bd2:	shl    rdi,0x2
  417bd6:	call   4061b0 <malloc@plt>
  417bdb:	test   rax,rax
  417bde:	mov    rbx,QWORD PTR [rsp+0x28]
  417be3:	je     4186ac <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xeec>
  417be9:	mov    r15,rax
  417bec:	jmp    417bf6 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x436>
  417bee:	xor    r15d,r15d
  417bf1:	mov    rbx,QWORD PTR [rsp+0x28]
  417bf6:	mov    rax,QWORD PTR [rsp+0x30]
  417bfb:	cmp    DWORD PTR [rax+0xdc],0x0
  417c02:	je     417c14 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x454>
  417c04:	lea    rsi,[rip+0x2f967]        # 447572 <_IO_stdin_used@@Base+0x18572>
  417c0b:	xor    edx,edx
  417c0d:	mov    ecx,0x2
  417c12:	jmp    417c1f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x45f>
  417c14:	lea    rsi,[rip+0x2f957]        # 447572 <_IO_stdin_used@@Base+0x18572>
  417c1b:	xor    edx,edx
  417c1d:	xor    ecx,ecx
  417c1f:	mov    rdi,rbx
  417c22:	call   428c20 <flatcc_builder_start_buffer@@Base>
  417c27:	test   eax,eax
  417c29:	jne    417c38 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x478>
  417c2b:	mov    esi,0x5
  417c30:	mov    rdi,rbx
  417c33:	call   429ef0 <flatcc_builder_start_table@@Base>
  417c38:	movzx  eax,WORD PTR [r14+0x20]
  417c3d:	cmp    eax,0x2
  417c40:	jne    417c70 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4b0>
  417c42:	mov    rsi,QWORD PTR [r14+0x10]
  417c46:	movsxd rdx,DWORD PTR [r14+0x18]
  417c4a:	mov    rdi,QWORD PTR [rsp+0x28]
  417c4f:	call   42c020 <flatcc_builder_create_string@@Base>
  417c54:	test   eax,eax
  417c56:	je     417c70 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4b0>
  417c58:	mov    ebx,eax
  417c5a:	mov    esi,0x2
  417c5f:	mov    rdi,QWORD PTR [rsp+0x28]
  417c64:	call   42b110 <flatcc_builder_table_add_offset@@Base>
  417c69:	test   rax,rax
  417c6c:	je     417c70 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4b0>
  417c6e:	mov    DWORD PTR [rax],ebx
  417c70:	movzx  eax,WORD PTR [r14+0x38]
  417c75:	cmp    eax,0x2
  417c78:	jne    417ca8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4e8>
  417c7a:	mov    rsi,QWORD PTR [r14+0x28]
  417c7e:	movsxd rdx,DWORD PTR [r14+0x30]
  417c82:	mov    rdi,QWORD PTR [rsp+0x28]
  417c87:	call   42c020 <flatcc_builder_create_string@@Base>
  417c8c:	test   eax,eax
  417c8e:	je     417ca8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4e8>
  417c90:	mov    ebx,eax
  417c92:	mov    esi,0x3
  417c97:	mov    rdi,QWORD PTR [rsp+0x28]
  417c9c:	call   42b110 <flatcc_builder_table_add_offset@@Base>
  417ca1:	test   rax,rax
  417ca4:	je     417ca8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4e8>
  417ca6:	mov    DWORD PTR [rax],ebx
  417ca8:	movsxd rax,DWORD PTR [rsp+0x44]
  417cad:	mov    QWORD PTR [rsp+0xc8],rax
  417cb5:	test   rax,rax
  417cb8:	mov    r14,QWORD PTR [rsp+0x28]
  417cbd:	mov    QWORD PTR [rsp+0xa0],r15
  417cc5:	jle    41831d <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb5d>
  417ccb:	mov    rax,QWORD PTR [rsp+0x58]
  417cd0:	mov    QWORD PTR [rsp+0xd0],rax
  417cd8:	xor    eax,eax
  417cda:	nop    WORD PTR [rax+rax*1+0x0]
  417ce0:	mov    QWORD PTR [rsp+0xd8],rax
  417ce8:	mov    rbx,rax
  417ceb:	shl    rbx,0x4
  417cef:	mov    r15,QWORD PTR [rsp+0xd0]
  417cf7:	mov    r12,QWORD PTR [r15+rbx*1]
  417cfb:	mov    esi,0x5
  417d00:	mov    rdi,r14
  417d03:	call   429ef0 <flatcc_builder_start_table@@Base>
  417d08:	mov    rsi,QWORD PTR [r15+rbx*1+0x8]
  417d0d:	mov    rdi,r14
  417d10:	call   42c160 <flatcc_builder_create_string_str@@Base>
  417d15:	test   eax,eax
  417d17:	mov    rbx,r14
  417d1a:	je     417d31 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x571>
  417d1c:	mov    r15d,eax
  417d1f:	xor    esi,esi
  417d21:	mov    rdi,rbx
  417d24:	call   42b110 <flatcc_builder_table_add_offset@@Base>
  417d29:	test   rax,rax
  417d2c:	je     417d31 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x571>
  417d2e:	mov    DWORD PTR [rax],r15d
  417d31:	mov    rdi,rbx
  417d34:	call   429b00 <flatcc_builder_start_offset_vector@@Base>
  417d39:	mov    r15,QWORD PTR [r12+0x28]
  417d3e:	test   r15,r15
  417d41:	je     418222 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa62>
  417d47:	xor    eax,eax
  417d49:	mov    QWORD PTR [rsp+0xe0],r12
  417d51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  417d60:	mov    DWORD PTR [rsp+0xb0],eax
  417d67:	test   al,al
  417d69:	sete   BYTE PTR [rsp+0x38]
  417d6e:	mov    r14d,DWORD PTR [r15+0x70]
  417d72:	test   r14b,r14b
  417d75:	sets   BYTE PTR [rsp+0xa8]
  417d7d:	mov    r13d,r14d
  417d80:	shr    r13b,0x2
  417d84:	and    r13b,0x1
  417d88:	lea    rax,[r15+0x18]
  417d8c:	mov    QWORD PTR [rsp+0x30],rax
  417d91:	movzx  eax,WORD PTR [r15+0x28]
  417d96:	cmp    eax,0xe
  417d99:	jne    417ef0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x730>
  417d9f:	mov    rax,QWORD PTR [rsp+0x30]
  417da4:	mov    rax,QWORD PTR [rax]
  417da7:	movzx  eax,WORD PTR [rax+0x10]
  417dab:	cmp    eax,0x4
  417dae:	jne    417ef0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x730>
  417db4:	mov    esi,0x9
  417db9:	mov    rdi,rbx
  417dbc:	call   429ef0 <flatcc_builder_start_table@@Base>
  417dc1:	mov    rdi,rbx
  417dc4:	call   429d80 <flatcc_builder_start_string@@Base>
  417dc9:	mov    rax,QWORD PTR [r15+0x8]
  417dcd:	mov    rsi,QWORD PTR [rax]
  417dd0:	mov    rdx,QWORD PTR [rax+0x8]
  417dd4:	mov    rdi,rbx
  417dd7:	call   429780 <flatcc_builder_append_string@@Base>
  417ddc:	mov    edx,0x5
  417de1:	mov    rdi,rbx
  417de4:	lea    rsi,[rip+0x1f345]        # 437130 <_IO_stdin_used@@Base+0x8130>
  417deb:	call   429780 <flatcc_builder_append_string@@Base>
  417df0:	mov    rdi,rbx
  417df3:	call   42c1d0 <flatcc_builder_end_string@@Base>
  417df8:	mov    rdi,rbx
  417dfb:	test   eax,eax
  417dfd:	je     417e1d <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x65d>
  417dff:	mov    ebx,eax
  417e01:	xor    esi,esi
  417e03:	mov    r12,rdi
  417e06:	call   42b110 <flatcc_builder_table_add_offset@@Base>
  417e0b:	mov    rdi,r12
  417e0e:	mov    r12,QWORD PTR [rsp+0xe0]
  417e16:	test   rax,rax
  417e19:	je     417e1d <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x65d>
  417e1b:	mov    DWORD PTR [rax],ebx
  417e1d:	mov    esi,0x3
  417e22:	mov    rbx,rdi
  417e25:	call   429ef0 <flatcc_builder_start_table@@Base>
  417e2a:	test   eax,eax
  417e2c:	je     418018 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x858>
  417e32:	mov    ebx,DWORD PTR [r15+0x88]
  417e39:	add    ebx,ebx
  417e3b:	add    bx,0x2
  417e3f:	je     417e62 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6a2>
  417e41:	mov    esi,0x3
  417e46:	mov    edx,0x2
  417e4b:	mov    ecx,0x2
  417e50:	mov    rdi,QWORD PTR [rsp+0x28]
  417e55:	call   42b270 <flatcc_builder_table_add@@Base>
  417e5a:	test   rax,rax
  417e5d:	je     417e62 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6a2>
  417e5f:	mov    WORD PTR [rax],bx
  417e62:	movzx  ebx,WORD PTR [r15+0x88]
  417e6a:	add    bx,0xffff
  417e6e:	je     417e91 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6d1>
  417e70:	mov    esi,0x2
  417e75:	mov    edx,0x2
  417e7a:	mov    ecx,0x2
  417e7f:	mov    rdi,QWORD PTR [rsp+0x28]
  417e84:	call   42b270 <flatcc_builder_table_add@@Base>
  417e89:	test   rax,rax
  417e8c:	je     417e91 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6d1>
  417e8e:	mov    WORD PTR [rax],bx
  417e91:	test   r13b,r13b
  417e94:	mov    rbx,QWORD PTR [rsp+0x28]
  417e99:	je     417eba <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6fa>
  417e9b:	mov    esi,0x6
  417ea0:	mov    edx,0x1
  417ea5:	mov    ecx,0x1
  417eaa:	mov    rdi,rbx
  417ead:	call   42b270 <flatcc_builder_table_add@@Base>
  417eb2:	test   rax,rax
  417eb5:	je     417eba <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6fa>
  417eb7:	mov    BYTE PTR [rax],r13b
  417eba:	mov    edx,0x2
  417ebf:	mov    rdi,rbx
  417ec2:	lea    rsi,[rip+0x2f659]        # 447522 <_IO_stdin_used@@Base+0x18522>
  417ec9:	call   42a890 <flatcc_builder_check_required@@Base>
  417ece:	test   eax,eax
  417ed0:	je     418700 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf40>
  417ed6:	mov    rdi,rbx
  417ed9:	call   42a900 <flatcc_builder_end_table@@Base>
  417ede:	test   eax,eax
  417ee0:	je     417ef0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x730>
  417ee2:	mov    rdi,rbx
  417ee5:	mov    esi,eax
  417ee7:	call   4294c0 <flatcc_builder_offset_vector_push@@Base>
  417eec:	nop    DWORD PTR [rax+0x0]
  417ef0:	mov    DWORD PTR [rsp+0xbc],r14d
  417ef8:	mov    r14,r12
  417efb:	mov    esi,0x9
  417f00:	mov    rdi,rbx
  417f03:	call   429ef0 <flatcc_builder_start_table@@Base>
  417f08:	mov    rax,QWORD PTR [r15+0x8]
  417f0c:	mov    rsi,QWORD PTR [rax]
  417f0f:	mov    rdx,QWORD PTR [rax+0x8]
  417f13:	mov    rdi,rbx
  417f16:	call   42c020 <flatcc_builder_create_string@@Base>
  417f1b:	mov    r12,rbx
  417f1e:	test   eax,eax
  417f20:	je     417f35 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x775>
  417f22:	mov    ebx,eax
  417f24:	xor    esi,esi
  417f26:	mov    rdi,r12
  417f29:	call   42b110 <flatcc_builder_table_add_offset@@Base>
  417f2e:	test   rax,rax
  417f31:	je     417f35 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x775>
  417f33:	mov    DWORD PTR [rax],ebx
  417f35:	mov    rcx,QWORD PTR [rsp+0x30]
  417f3a:	mov    rax,QWORD PTR [rcx+0x10]
  417f3e:	mov    QWORD PTR [rsp+0x10],rax
  417f43:	vmovups xmm0,XMMWORD PTR [rcx]
  417f47:	vmovups XMMWORD PTR [rsp],xmm0
  417f4c:	mov    rdi,r12
  417f4f:	call   418e40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x400>
  417f54:	test   eax,eax
  417f56:	je     417f70 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x7b0>
  417f58:	mov    ebx,eax
  417f5a:	mov    esi,0x1
  417f5f:	mov    rdi,QWORD PTR [rsp+0x28]
  417f64:	call   42b110 <flatcc_builder_table_add_offset@@Base>
  417f69:	test   rax,rax
  417f6c:	je     417f70 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x7b0>
  417f6e:	mov    DWORD PTR [rax],ebx
  417f70:	movzx  eax,BYTE PTR [rsp+0xa8]
  417f78:	and    BYTE PTR [rsp+0x38],al
  417f7c:	mov    r12,r14
  417f7f:	movzx  eax,WORD PTR [r14+0x10]
  417f84:	cmp    eax,0x1
  417f87:	je     417fe0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x820>
  417f89:	test   ax,ax
  417f8c:	mov    r14d,DWORD PTR [rsp+0xbc]
  417f94:	jne    4181b0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  417f9a:	mov    eax,DWORD PTR [r15+0x58]
  417f9e:	add    eax,0xfffffffd
  417fa1:	movzx  ecx,ax
  417fa4:	cmp    ecx,0x3
  417fa7:	ja     4180ed <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x92d>
  417fad:	movzx  eax,ax
  417fb0:	lea    rcx,[rip+0x2f521]        # 4474d8 <_IO_stdin_used@@Base+0x184d8>
  417fb7:	movsxd rax,DWORD PTR [rcx+rax*4]
  417fbb:	add    rax,rcx
  417fbe:	jmp    rax
  417fc0:	mov    rbx,QWORD PTR [r15+0x48]
  417fc4:	test   rbx,rbx
  417fc7:	jne    4180cc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x90c>
  417fcd:	jmp    4180ed <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x92d>
  417fd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417fdc:	nop    DWORD PTR [rax+0x0]
  417fe0:	movzx  ebx,WORD PTR [r15+0x78]
  417fe5:	test   bx,bx
  417fe8:	je     4181b0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  417fee:	mov    esi,0x3
  417ff3:	mov    edx,0x2
  417ff8:	mov    ecx,0x2
  417ffd:	mov    rdi,QWORD PTR [rsp+0x28]
  418002:	call   42b270 <flatcc_builder_table_add@@Base>
  418007:	test   rax,rax
  41800a:	je     4181b0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  418010:	mov    WORD PTR [rax],bx
  418013:	jmp    4181b0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  418018:	xor    esi,esi
  41801a:	mov    edx,0x1
  41801f:	mov    ecx,0x1
  418024:	mov    rdi,rbx
  418027:	call   42b270 <flatcc_builder_table_add@@Base>
  41802c:	test   rax,rax
  41802f:	je     417e32 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x672>
  418035:	mov    BYTE PTR [rax],0x1
  418038:	xor    edx,edx
  41803a:	mov    rdi,rbx
  41803d:	lea    rsi,[rip+0x2f4dc]        # 447520 <_IO_stdin_used@@Base+0x18520>
  418044:	call   42a890 <flatcc_builder_check_required@@Base>
  418049:	test   eax,eax
  41804b:	je     41873e <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf7e>
  418051:	mov    rdi,rbx
  418054:	call   42a900 <flatcc_builder_end_table@@Base>
  418059:	test   eax,eax
  41805b:	je     417e32 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x672>
  418061:	mov    rdi,rbx
  418064:	mov    ebx,eax
  418066:	mov    esi,0x1
  41806b:	call   42b110 <flatcc_builder_table_add_offset@@Base>
  418070:	test   rax,rax
  418073:	je     417e32 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x672>
  418079:	mov    DWORD PTR [rax],ebx
  41807b:	jmp    417e32 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x672>
  418080:	vmovsd xmm0,QWORD PTR [r15+0x48]
  418086:	vucomisd xmm0,QWORD PTR [rip+0x2f442]        # 4474d0 <_IO_stdin_used@@Base+0x184d0>
  41808e:	jne    418092 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x8d2>
  418090:	jnp    4180ed <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x92d>
  418092:	mov    esi,0x5
  418097:	mov    edx,0x8
  41809c:	mov    ecx,0x8
  4180a1:	mov    rdi,QWORD PTR [rsp+0x28]
  4180a6:	vmovsd QWORD PTR [rsp+0x30],xmm0
  4180ac:	call   42b270 <flatcc_builder_table_add@@Base>
  4180b1:	vmovsd xmm0,QWORD PTR [rsp+0x30]
  4180b7:	test   rax,rax
  4180ba:	je     4180ed <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x92d>
  4180bc:	vmovsd QWORD PTR [rax],xmm0
  4180c0:	jmp    4180ed <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x92d>
  4180c2:	movzx  ebx,BYTE PTR [r15+0x48]
  4180c7:	test   rbx,rbx
  4180ca:	je     4180ed <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x92d>
  4180cc:	mov    esi,0x4
  4180d1:	mov    edx,0x8
  4180d6:	mov    ecx,0x8
  4180db:	mov    rdi,QWORD PTR [rsp+0x28]
  4180e0:	call   42b270 <flatcc_builder_table_add@@Base>
  4180e5:	test   rax,rax
  4180e8:	je     4180ed <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x92d>
  4180ea:	mov    QWORD PTR [rax],rbx
  4180ed:	shr    r14d,0x8
  4180f1:	movzx  ebx,WORD PTR [r15+0x88]
  4180f9:	test   bx,bx
  4180fc:	je     41811f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x95f>
  4180fe:	mov    esi,0x2
  418103:	mov    edx,0x2
  418108:	mov    ecx,0x2
  41810d:	mov    rdi,QWORD PTR [rsp+0x28]
  418112:	call   42b270 <flatcc_builder_table_add@@Base>
  418117:	test   rax,rax
  41811a:	je     41811f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x95f>
  41811c:	mov    WORD PTR [rax],bx
  41811f:	mov    ebx,DWORD PTR [r15+0x88]
  418126:	add    ebx,ebx
  418128:	add    bx,0x4
  41812c:	je     41814f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x98f>
  41812e:	mov    esi,0x3
  418133:	mov    edx,0x2
  418138:	mov    ecx,0x2
  41813d:	mov    rdi,QWORD PTR [rsp+0x28]
  418142:	call   42b270 <flatcc_builder_table_add@@Base>
  418147:	test   rax,rax
  41814a:	je     41814f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x98f>
  41814c:	mov    WORD PTR [rax],bx
  41814f:	and    r14b,0x1
  418153:	cmp    BYTE PTR [rsp+0x38],0x0
  418158:	je     41817f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9bf>
  41815a:	mov    esi,0x8
  41815f:	mov    edx,0x1
  418164:	mov    ecx,0x1
  418169:	mov    rdi,QWORD PTR [rsp+0x28]
  41816e:	call   42b270 <flatcc_builder_table_add@@Base>
  418173:	test   rax,rax
  418176:	je     41817f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9bf>
  418178:	movzx  ecx,BYTE PTR [rsp+0x38]
  41817d:	mov    BYTE PTR [rax],cl
  41817f:	test   r14b,r14b
  418182:	je     4181b0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  418184:	mov    esi,0x7
  418189:	mov    edx,0x1
  41818e:	mov    ecx,0x1
  418193:	mov    rdi,QWORD PTR [rsp+0x28]
  418198:	call   42b270 <flatcc_builder_table_add@@Base>
  41819d:	test   rax,rax
  4181a0:	je     4181b0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  4181a2:	mov    BYTE PTR [rax],r14b
  4181a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4181af:	nop
  4181b0:	test   r13b,r13b
  4181b3:	mov    rbx,QWORD PTR [rsp+0x28]
  4181b8:	je     4181d9 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa19>
  4181ba:	mov    esi,0x6
  4181bf:	mov    edx,0x1
  4181c4:	mov    ecx,0x1
  4181c9:	mov    rdi,rbx
  4181cc:	call   42b270 <flatcc_builder_table_add@@Base>
  4181d1:	test   rax,rax
  4181d4:	je     4181d9 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa19>
  4181d6:	mov    BYTE PTR [rax],r13b
  4181d9:	mov    edx,0x2
  4181de:	mov    rdi,rbx
  4181e1:	lea    rsi,[rip+0x2f33a]        # 447522 <_IO_stdin_used@@Base+0x18522>
  4181e8:	call   42a890 <flatcc_builder_check_required@@Base>
  4181ed:	test   eax,eax
  4181ef:	je     418700 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf40>
  4181f5:	mov    rdi,rbx
  4181f8:	call   42a900 <flatcc_builder_end_table@@Base>
  4181fd:	test   eax,eax
  4181ff:	je     41820b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa4b>
  418201:	mov    rdi,rbx
  418204:	mov    esi,eax
  418206:	call   4294c0 <flatcc_builder_offset_vector_push@@Base>
  41820b:	mov    eax,DWORD PTR [rsp+0xb0]
  418212:	or     al,BYTE PTR [rsp+0x38]
  418216:	mov    r15,QWORD PTR [r15]
  418219:	test   r15,r15
  41821c:	jne    417d60 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x5a0>
  418222:	mov    rdi,rbx
  418225:	call   429cc0 <flatcc_builder_end_offset_vector@@Base>
  41822a:	test   eax,eax
  41822c:	je     418246 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa86>
  41822e:	mov    ebx,eax
  418230:	mov    esi,0x1
  418235:	mov    rdi,QWORD PTR [rsp+0x28]
  41823a:	call   42b110 <flatcc_builder_table_add_offset@@Base>
  41823f:	test   rax,rax
  418242:	je     418246 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa86>
  418244:	mov    DWORD PTR [rax],ebx
  418246:	movzx  eax,WORD PTR [r12+0x10]
  41824c:	cmp    eax,0x1
  41824f:	mov    r15,QWORD PTR [rsp+0xa0]
  418257:	jne    4182a6 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xae6>
  418259:	mov    ebx,DWORD PTR [r12+0xb8]
  418261:	test   ebx,ebx
  418263:	je     418285 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xac5>
  418265:	mov    esi,0x4
  41826a:	mov    edx,0x4
  41826f:	mov    ecx,0x4
  418274:	mov    rdi,QWORD PTR [rsp+0x28]
  418279:	call   42b270 <flatcc_builder_table_add@@Base>
  41827e:	test   rax,rax
  418281:	je     418285 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xac5>
  418283:	mov    DWORD PTR [rax],ebx
  418285:	mov    esi,0x2
  41828a:	mov    edx,0x1
  41828f:	mov    ecx,0x1
  418294:	mov    rdi,QWORD PTR [rsp+0x28]
  418299:	call   42b270 <flatcc_builder_table_add@@Base>
  41829e:	test   rax,rax
  4182a1:	je     4182a6 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xae6>
  4182a3:	mov    BYTE PTR [rax],0x1
  4182a6:	movzx  ebx,WORD PTR [r12+0xb0]
  4182af:	test   ebx,ebx
  4182b1:	je     4182d3 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb13>
  4182b3:	mov    esi,0x3
  4182b8:	mov    edx,0x4
  4182bd:	mov    ecx,0x4
  4182c2:	mov    rdi,QWORD PTR [rsp+0x28]
  4182c7:	call   42b270 <flatcc_builder_table_add@@Base>
  4182cc:	test   rax,rax
  4182cf:	je     4182d3 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb13>
  4182d1:	mov    DWORD PTR [rax],ebx
  4182d3:	mov    edx,0x2
  4182d8:	mov    r14,QWORD PTR [rsp+0x28]
  4182dd:	mov    rdi,r14
  4182e0:	lea    rsi,[rip+0x2f241]        # 447528 <_IO_stdin_used@@Base+0x18528>
  4182e7:	call   42a890 <flatcc_builder_check_required@@Base>
  4182ec:	test   eax,eax
  4182ee:	je     41875d <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf9d>
  4182f4:	mov    rdi,r14
  4182f7:	call   42a900 <flatcc_builder_end_table@@Base>
  4182fc:	mov    rcx,QWORD PTR [rsp+0xd8]
  418304:	mov    DWORD PTR [r15+rcx*4],eax
  418308:	mov    rax,rcx
  41830b:	add    rax,0x1
  41830f:	cmp    rax,QWORD PTR [rsp+0xc8]
  418317:	jl     417ce0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x520>
  41831d:	mov    rdi,r14
  418320:	mov    rsi,r15
  418323:	mov    rdx,QWORD PTR [rsp+0xc8]
  41832b:	call   429b70 <flatcc_builder_create_offset_vector@@Base>
  418330:	test   eax,eax
  418332:	je     418347 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb87>
  418334:	mov    ebx,eax
  418336:	xor    esi,esi
  418338:	mov    rdi,r14
  41833b:	call   42b110 <flatcc_builder_table_add_offset@@Base>
  418340:	test   rax,rax
  418343:	je     418347 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb87>
  418345:	mov    DWORD PTR [rax],ebx
  418347:	mov    rax,QWORD PTR [rsp+0x60]
  41834c:	mov    QWORD PTR [rsp+0xb0],rax
  418354:	movsxd rbx,DWORD PTR [rsp+0x48]
  418359:	mov    rdi,r14
  41835c:	call   429b00 <flatcc_builder_start_offset_vector@@Base>
  418361:	mov    QWORD PTR [rsp+0xa8],rbx
  418369:	test   rbx,rbx
  41836c:	jle    4185d3 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe13>
  418372:	xor    r15d,r15d
  418375:	lea    r12,[rip+0x2f1b2]        # 44752e <_IO_stdin_used@@Base+0x1852e>
  41837c:	nop    DWORD PTR [rax+0x0]
  418380:	mov    rbx,r15
  418383:	shl    rbx,0x4
  418387:	mov    r13,QWORD PTR [rsp+0xb0]
  41838f:	mov    rax,QWORD PTR [r13+rbx*1+0x0]
  418394:	mov    QWORD PTR [rsp+0x38],rax
  418399:	movzx  eax,WORD PTR [rax+0x10]
  41839d:	mov    WORD PTR [rsp+0x30],ax
  4183a2:	mov    esi,0x4
  4183a7:	mov    rdi,r14
  4183aa:	call   429ef0 <flatcc_builder_start_table@@Base>
  4183af:	mov    rsi,QWORD PTR [r13+rbx*1+0x8]
  4183b4:	mov    rdi,r14
  4183b7:	call   42c160 <flatcc_builder_create_string_str@@Base>
  4183bc:	test   eax,eax
  4183be:	je     4183d3 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc13>
  4183c0:	mov    ebx,eax
  4183c2:	xor    esi,esi
  4183c4:	mov    rdi,r14
  4183c7:	call   42b110 <flatcc_builder_table_add_offset@@Base>
  4183cc:	test   rax,rax
  4183cf:	je     4183d3 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc13>
  4183d1:	mov    DWORD PTR [rax],ebx
  4183d3:	mov    rdi,r14
  4183d6:	call   429b00 <flatcc_builder_start_offset_vector@@Base>
  4183db:	mov    rax,QWORD PTR [rsp+0x38]
  4183e0:	mov    r13,QWORD PTR [rax+0x28]
  4183e4:	test   r13,r13
  4183e7:	mov    rbx,r14
  4183ea:	je     4184fa <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd3a>
  4183f0:	movzx  eax,WORD PTR [rsp+0x30]
  4183f5:	cmp    eax,0x4
  4183f8:	mov    r14d,0x0
  4183fe:	cmove  r14,QWORD PTR [rsp+0xa0]
  418407:	nop    WORD PTR [rax+rax*1+0x0]
  418410:	mov    esi,0x3
  418415:	mov    rdi,rbx
  418418:	call   429ef0 <flatcc_builder_start_table@@Base>
  41841d:	mov    rax,QWORD PTR [r13+0x8]
  418421:	mov    rsi,QWORD PTR [rax]
  418424:	mov    rdx,QWORD PTR [rax+0x8]
  418428:	mov    rdi,rbx
  41842b:	call   42c020 <flatcc_builder_create_string@@Base>
  418430:	test   eax,eax
  418432:	je     418449 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc89>
  418434:	mov    ebx,eax
  418436:	xor    esi,esi
  418438:	mov    rdi,QWORD PTR [rsp+0x28]
  41843d:	call   42b110 <flatcc_builder_table_add_offset@@Base>
  418442:	test   rax,rax
  418445:	je     418449 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc89>
  418447:	mov    DWORD PTR [rax],ebx
  418449:	test   r14,r14
  41844c:	je     418490 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xcd0>
  41844e:	movzx  eax,WORD PTR [r13+0x28]
  418453:	cmp    eax,0xe
  418456:	jne    418490 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xcd0>
  418458:	mov    rax,QWORD PTR [r13+0x18]
  41845c:	mov    rax,QWORD PTR [rax+0xc8]
  418463:	mov    ebx,DWORD PTR [r14+rax*4]
  418467:	test   ebx,ebx
  418469:	je     418490 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xcd0>
  41846b:	mov    esi,0x2
  418470:	mov    rdi,QWORD PTR [rsp+0x28]
  418475:	call   42b110 <flatcc_builder_table_add_offset@@Base>
  41847a:	test   rax,rax
  41847d:	je     418490 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xcd0>
  41847f:	mov    DWORD PTR [rax],ebx
  418481:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41848b:	nop    DWORD PTR [rax+rax*1+0x0]
  418490:	mov    rbx,QWORD PTR [r13+0x48]
  418494:	test   rbx,rbx
  418497:	je     4184ba <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xcfa>
  418499:	mov    esi,0x1
  41849e:	mov    edx,0x8
  4184a3:	mov    ecx,0x8
  4184a8:	mov    rdi,QWORD PTR [rsp+0x28]
  4184ad:	call   42b270 <flatcc_builder_table_add@@Base>
  4184b2:	test   rax,rax
  4184b5:	je     4184ba <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xcfa>
  4184b7:	mov    QWORD PTR [rax],rbx
  4184ba:	mov    edx,0x1
  4184bf:	mov    rbx,QWORD PTR [rsp+0x28]
  4184c4:	mov    rdi,rbx
  4184c7:	mov    rsi,r12
  4184ca:	call   42a890 <flatcc_builder_check_required@@Base>
  4184cf:	test   eax,eax
  4184d1:	je     41871f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf5f>
  4184d7:	mov    rdi,rbx
  4184da:	call   42a900 <flatcc_builder_end_table@@Base>
  4184df:	test   eax,eax
  4184e1:	je     4184ed <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd2d>
  4184e3:	mov    rdi,rbx
  4184e6:	mov    esi,eax
  4184e8:	call   4294c0 <flatcc_builder_offset_vector_push@@Base>
  4184ed:	mov    r13,QWORD PTR [r13+0x0]
  4184f1:	test   r13,r13
  4184f4:	jne    418410 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc50>
  4184fa:	mov    rdi,rbx
  4184fd:	call   429cc0 <flatcc_builder_end_offset_vector@@Base>
  418502:	test   eax,eax
  418504:	je     41851e <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd5e>
  418506:	mov    ebx,eax
  418508:	mov    esi,0x1
  41850d:	mov    rdi,QWORD PTR [rsp+0x28]
  418512:	call   42b110 <flatcc_builder_table_add_offset@@Base>
  418517:	test   rax,rax
  41851a:	je     41851e <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd5e>
  41851c:	mov    DWORD PTR [rax],ebx
  41851e:	movzx  eax,WORD PTR [rsp+0x30]
  418523:	cmp    eax,0x4
  418526:	sete   bl
  418529:	jne    41854b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd8b>
  41852b:	mov    esi,0x2
  418530:	mov    edx,0x1
  418535:	mov    ecx,0x1
  41853a:	mov    rdi,QWORD PTR [rsp+0x28]
  41853f:	call   42b270 <flatcc_builder_table_add@@Base>
  418544:	test   rax,rax
  418547:	je     41854b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd8b>
  418549:	mov    BYTE PTR [rax],bl
  41854b:	mov    rcx,QWORD PTR [rsp+0x38]
  418550:	mov    rax,QWORD PTR [rcx+0x58]
  418554:	mov    QWORD PTR [rsp+0x10],rax
  418559:	vmovups xmm0,XMMWORD PTR [rcx+0x48]
  41855e:	vmovups XMMWORD PTR [rsp],xmm0
  418563:	mov    rbx,QWORD PTR [rsp+0x28]
  418568:	mov    rdi,rbx
  41856b:	call   418e40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x400>
  418570:	test   eax,eax
  418572:	je     41858c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xdcc>
  418574:	mov    r14d,eax
  418577:	mov    esi,0x3
  41857c:	mov    rdi,rbx
  41857f:	call   42b110 <flatcc_builder_table_add_offset@@Base>
  418584:	test   rax,rax
  418587:	je     41858c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xdcc>
  418589:	mov    DWORD PTR [rax],r14d
  41858c:	mov    edx,0x3
  418591:	mov    rdi,rbx
  418594:	lea    rsi,[rip+0x2ef97]        # 447532 <_IO_stdin_used@@Base+0x18532>
  41859b:	call   42a890 <flatcc_builder_check_required@@Base>
  4185a0:	test   eax,eax
  4185a2:	je     41877c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xfbc>
  4185a8:	mov    r14,rbx
  4185ab:	mov    rdi,rbx
  4185ae:	call   42a900 <flatcc_builder_end_table@@Base>
  4185b3:	test   eax,eax
  4185b5:	je     4185c1 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe01>
  4185b7:	mov    rdi,r14
  4185ba:	mov    esi,eax
  4185bc:	call   4294c0 <flatcc_builder_offset_vector_push@@Base>
  4185c1:	add    r15,0x1
  4185c5:	cmp    r15,QWORD PTR [rsp+0xa8]
  4185cd:	jl     418380 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xbc0>
  4185d3:	mov    rdi,r14
  4185d6:	call   429cc0 <flatcc_builder_end_offset_vector@@Base>
  4185db:	test   eax,eax
  4185dd:	mov    r14,QWORD PTR [rsp+0xc0]
  4185e5:	je     4185ff <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe3f>
  4185e7:	mov    ebx,eax
  4185e9:	mov    esi,0x1
  4185ee:	mov    rdi,QWORD PTR [rsp+0x28]
  4185f3:	call   42b110 <flatcc_builder_table_add_offset@@Base>
  4185f8:	test   rax,rax
  4185fb:	je     4185ff <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe3f>
  4185fd:	mov    DWORD PTR [rax],ebx
  4185ff:	mov    rax,QWORD PTR [r14+0x58]
  418603:	test   rax,rax
  418606:	mov    r14,QWORD PTR [rsp+0xa0]
  41860e:	je     41861b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe5b>
  418610:	cmp    WORD PTR [rax+0x10],0x0
  418615:	je     4186ce <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf0e>
  41861b:	lea    rsi,[rip+0x2ef18]        # 44753a <_IO_stdin_used@@Base+0x1853a>
  418622:	mov    edx,0x2
  418627:	mov    rbx,QWORD PTR [rsp+0x28]
  41862c:	mov    rdi,rbx
  41862f:	call   42a890 <flatcc_builder_check_required@@Base>
  418634:	test   eax,eax
  418636:	je     41879b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xfdb>
  41863c:	mov    rdi,rbx
  41863f:	call   42a900 <flatcc_builder_end_table@@Base>
  418644:	mov    rdi,rbx
  418647:	mov    esi,eax
  418649:	call   428e40 <flatcc_builder_end_buffer@@Base>
  41864e:	mov    rdi,QWORD PTR [rsp+0x58]
  418653:	test   rdi,rdi
  418656:	je     41865d <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe9d>
  418658:	call   406040 <free@plt>
  41865d:	mov    rdi,QWORD PTR [rsp+0x60]
  418662:	test   rdi,rdi
  418665:	je     41866c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xeac>
  418667:	call   406040 <free@plt>
  41866c:	mov    rdi,QWORD PTR [rsp+0x68]
  418671:	test   rdi,rdi
  418674:	je     41867b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xebb>
  418676:	call   406040 <free@plt>
  41867b:	vxorps xmm0,xmm0,xmm0
  41867f:	vmovups YMMWORD PTR [rsp+0x70],ymm0
  418685:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  41868b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  418691:	xor    ebx,ebx
  418693:	test   r14,r14
  418696:	je     417975 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1b5>
  41869c:	mov    rdi,r14
  41869f:	vzeroupper 
  4186a2:	call   406040 <free@plt>
  4186a7:	jmp    417975 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1b5>
  4186ac:	mov    rdi,QWORD PTR [rsp+0x58]
  4186b1:	test   rdi,rdi
  4186b4:	je     4186bb <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xefb>
  4186b6:	call   406040 <free@plt>
  4186bb:	mov    rdi,QWORD PTR [rsp+0x60]
  4186c0:	test   rdi,rdi
  4186c3:	jne    417946 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x186>
  4186c9:	jmp    41794b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x18b>
  4186ce:	mov    rax,QWORD PTR [rax+0xc8]
  4186d5:	mov    ebx,DWORD PTR [r14+rax*4]
  4186d9:	test   ebx,ebx
  4186db:	je     41861b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe5b>
  4186e1:	mov    esi,0x4
  4186e6:	mov    rdi,QWORD PTR [rsp+0x28]
  4186eb:	call   42b110 <flatcc_builder_table_add_offset@@Base>
  4186f0:	test   rax,rax
  4186f3:	je     41861b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe5b>
  4186f9:	mov    DWORD PTR [rax],ebx
  4186fb:	jmp    41861b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe5b>
  418700:	lea    rdi,[rip+0x2efb9]        # 4476c0 <_IO_stdin_used@@Base+0x186c0>
  418707:	lea    rsi,[rip+0x2eef6]        # 447604 <_IO_stdin_used@@Base+0x18604>
  41870e:	lea    rcx,[rip+0x2f03b]        # 447750 <_IO_stdin_used@@Base+0x18750>
  418715:	mov    edx,0x1d
  41871a:	call   406100 <__assert_fail@plt>
  41871f:	lea    rdi,[rip+0x2f149]        # 44786f <_IO_stdin_used@@Base+0x1886f>
  418726:	lea    rsi,[rip+0x2eed7]        # 447604 <_IO_stdin_used@@Base+0x18604>
  41872d:	lea    rcx,[rip+0x2f1d1]        # 447905 <_IO_stdin_used@@Base+0x18905>
  418734:	mov    edx,0x19
  418739:	call   406100 <__assert_fail@plt>
  41873e:	lea    rdi,[rip+0x2ee32]        # 447577 <_IO_stdin_used@@Base+0x18577>
  418745:	lea    rsi,[rip+0x2eeb8]        # 447604 <_IO_stdin_used@@Base+0x18604>
  41874c:	lea    rcx,[rip+0x2ef2a]        # 44767d <_IO_stdin_used@@Base+0x1867d>
  418753:	mov    edx,0x17
  418758:	call   406100 <__assert_fail@plt>
  41875d:	lea    rdi,[rip+0x2f031]        # 447795 <_IO_stdin_used@@Base+0x18795>
  418764:	lea    rsi,[rip+0x2ee99]        # 447604 <_IO_stdin_used@@Base+0x18604>
  41876b:	lea    rcx,[rip+0x2f0b6]        # 447828 <_IO_stdin_used@@Base+0x18828>
  418772:	mov    edx,0x1f
  418777:	call   406100 <__assert_fail@plt>
  41877c:	lea    rdi,[rip+0x2f1cb]        # 44794e <_IO_stdin_used@@Base+0x1894e>
  418783:	lea    rsi,[rip+0x2ee7a]        # 447604 <_IO_stdin_used@@Base+0x18604>
  41878a:	lea    rcx,[rip+0x2f24a]        # 4479db <_IO_stdin_used@@Base+0x189db>
  418791:	mov    edx,0x1b
  418796:	call   406100 <__assert_fail@plt>
  41879b:	lea    rdi,[rip+0x2f27c]        # 447a1e <_IO_stdin_used@@Base+0x18a1e>
  4187a2:	lea    rsi,[rip+0x2ee5b]        # 447604 <_IO_stdin_used@@Base+0x18604>
  4187a9:	lea    rcx,[rip+0x2f301]        # 447ab1 <_IO_stdin_used@@Base+0x18ab1>
  4187b0:	mov    edx,0x21
  4187b5:	call   406100 <__assert_fail@plt>
  4187ba:	nop    WORD PTR [rax+rax*1+0x0]
  4187c0:	push   rbp
  4187c1:	push   r15
  4187c3:	push   r14
  4187c5:	push   r13
  4187c7:	push   r12
  4187c9:	push   rbx
  4187ca:	sub    rsp,0x28
  4187ce:	test   rdi,rdi
  4187d1:	je     41899a <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11da>
  4187d7:	cmp    DWORD PTR [rdi+0x4],0x53424642
  4187de:	jne    41899a <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11da>
  4187e4:	mov    ecx,DWORD PTR [rdi]
  4187e6:	lea    rax,[rdi+rcx*1]
  4187ea:	movsxd rcx,DWORD PTR [rdi+rcx*1]
  4187ee:	mov    rdx,rax
  4187f1:	sub    rdx,rcx
  4187f4:	movzx  edx,WORD PTR [rdx]
  4187f7:	cmp    edx,0x5
  4187fa:	jbe    4189a3 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11e3>
  418800:	neg    rcx
  418803:	movzx  ecx,WORD PTR [rax+rcx*1+0x4]
  418808:	test   rcx,rcx
  41880b:	je     4189a3 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11e3>
  418811:	lea    rdx,[rax+rcx*1]
  418815:	mov    eax,DWORD PTR [rax+rcx*1]
  418818:	cmp    DWORD PTR [rax+rdx*1],0x0
  41881c:	je     418963 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11a3>
  418822:	lea    rcx,[rax+rdx*1]
  418826:	add    rcx,0x4
  41882a:	xor    edx,edx
  41882c:	mov    QWORD PTR [rsp+0x8],rcx
  418831:	mov    QWORD PTR [rsp+0x10],rcx
  418836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418840:	lea    rax,[rcx+rdx*4]
  418844:	mov    esi,DWORD PTR [rcx+rdx*4]
  418847:	add    rax,rsi
  41884a:	je     41897b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11bb>
  418850:	mov    QWORD PTR [rsp+0x20],rdx
  418855:	movsxd rcx,DWORD PTR [rax]
  418858:	mov    rdx,rax
  41885b:	sub    rdx,rcx
  41885e:	movzx  edx,WORD PTR [rdx]
  418861:	cmp    edx,0x8
  418864:	jb     418972 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11b2>
  41886a:	neg    rcx
  41886d:	movzx  r12d,WORD PTR [rax+rcx*1+0x6]
  418873:	test   r12,r12
  418876:	je     418972 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11b2>
  41887c:	mov    ebp,DWORD PTR [rax+r12*1]
  418880:	add    rax,r12
  418883:	mov    r13d,DWORD PTR [rbp+rax*1+0x0]
  418888:	test   r13,r13
  41888b:	je     418943 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1183>
  418891:	mov    QWORD PTR [rsp+0x18],rsi
  418896:	lea    r14,[rax+rbp*1]
  41889a:	add    r14,0x4
  41889e:	lea    r15,[r13-0x1]
  4188a2:	mov    rbx,r13
  4188a5:	shr    rbx,1
  4188a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4188b0:	mov    rdi,r14
  4188b3:	mov    rsi,rbx
  4188b6:	mov    rdx,r15
  4188b9:	call   419000 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5c0>
  4188be:	add    rbx,0xffffffffffffffff
  4188c2:	cmp    rbx,0xffffffffffffffff
  4188c6:	jne    4188b0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x10f0>
  4188c8:	test   r15,r15
  4188cb:	mov    rax,QWORD PTR [rsp+0x18]
  4188d0:	je     418943 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1183>
  4188d2:	lea    r15,[r13*4+0x0]
  4188da:	add    r15,rbp
  4188dd:	mov    rbx,r13
  4188e0:	add    rbx,0xfffffffffffffffe
  4188e4:	add    r15,r12
  4188e7:	add    r15,rax
  4188ea:	add    r15,QWORD PTR [rsp+0x8]
  4188ef:	lea    eax,[r13*4+0x0]
  4188f7:	mov    r12d,0x4
  4188fd:	sub    r12d,eax
  418900:	lea    ebp,[r13*4-0x4]
  418908:	nop    DWORD PTR [rax+rax*1+0x0]
  418910:	mov    eax,DWORD PTR [r15]
  418913:	add    eax,ebp
  418915:	mov    ecx,DWORD PTR [r14]
  418918:	add    ecx,r12d
  41891b:	mov    DWORD PTR [r14],eax
  41891e:	mov    DWORD PTR [r15],ecx
  418921:	xor    esi,esi
  418923:	mov    rdi,r14
  418926:	mov    rdx,rbx
  418929:	call   419000 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5c0>
  41892e:	add    rbx,0xffffffffffffffff
  418932:	add    r15,0xfffffffffffffffc
  418936:	add    ebp,0xfffffffc
  418939:	add    r12d,0x4
  41893d:	cmp    rbx,0xffffffffffffffff
  418941:	jne    418910 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1150>
  418943:	mov    rdx,QWORD PTR [rsp+0x20]
  418948:	add    rdx,0x1
  41894c:	mov    rcx,QWORD PTR [rsp+0x10]
  418951:	mov    eax,DWORD PTR [rcx-0x4]
  418954:	add    QWORD PTR [rsp+0x8],0x4
  41895a:	cmp    rdx,rax
  41895d:	jb     418840 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1080>
  418963:	add    rsp,0x28
  418967:	pop    rbx
  418968:	pop    r12
  41896a:	pop    r13
  41896c:	pop    r14
  41896e:	pop    r15
  418970:	pop    rbp
  418971:	ret    
  418972:	lea    rdi,[rip+0x2f26a]        # 447be3 <_IO_stdin_used@@Base+0x18be3>
  418979:	jmp    418982 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11c2>
  41897b:	lea    rdi,[rip+0x2f176]        # 447af8 <_IO_stdin_used@@Base+0x18af8>
  418982:	lea    rsi,[rip+0x2f195]        # 447b1e <_IO_stdin_used@@Base+0x18b1e>
  418989:	lea    rcx,[rip+0x2f2ab]        # 447c3b <_IO_stdin_used@@Base+0x18c3b>
  418990:	mov    edx,0xe0
  418995:	call   406100 <__assert_fail@plt>
  41899a:	lea    rdi,[rip+0x2f157]        # 447af8 <_IO_stdin_used@@Base+0x18af8>
  4189a1:	jmp    4189aa <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11ea>
  4189a3:	lea    rdi,[rip+0x2f239]        # 447be3 <_IO_stdin_used@@Base+0x18be3>
  4189aa:	lea    rsi,[rip+0x2f16d]        # 447b1e <_IO_stdin_used@@Base+0x18b1e>
  4189b1:	lea    rcx,[rip+0x2f1de]        # 447b96 <_IO_stdin_used@@Base+0x18b96>
  4189b8:	mov    edx,0xed
  4189bd:	call   406100 <__assert_fail@plt>
  4189c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4189cc:	nop    DWORD PTR [rax+0x0]

00000000004189d0 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
  4189d0:	push   r15
  4189d2:	push   r14
  4189d4:	push   r12
  4189d6:	push   rbx
  4189d7:	sub    rsp,0x188
  4189de:	mov    r14,rdx
  4189e1:	mov    r15,rsi
  4189e4:	mov    rbx,rdi
  4189e7:	mov    r12,rsp
  4189ea:	mov    rdi,r12
  4189ed:	call   427e80 <flatcc_builder_init@@Base>
  4189f2:	mov    rdi,r12
  4189f5:	mov    rsi,rbx
  4189f8:	mov    rdx,r15
  4189fb:	call   417840 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x80>
  418a00:	test   eax,eax
  418a02:	je     418a08 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x38>
  418a04:	xor    ebx,ebx
  418a06:	jmp    418a23 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x53>
  418a08:	mov    rdi,rsp
  418a0b:	mov    rsi,r14
  418a0e:	call   42c540 <flatcc_builder_finalize_buffer@@Base>
  418a13:	test   rax,rax
  418a16:	je     418a04 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x34>
  418a18:	mov    rbx,rax
  418a1b:	mov    rdi,rax
  418a1e:	call   4187c0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1000>
  418a23:	mov    rdi,rsp
  418a26:	call   428240 <flatcc_builder_clear@@Base>
  418a2b:	mov    rax,rbx
  418a2e:	add    rsp,0x188
  418a35:	pop    rbx
  418a36:	pop    r12
  418a38:	pop    r14
  418a3a:	pop    r15
  418a3c:	ret    
  418a3d:	nop    DWORD PTR [rax]

0000000000418a40 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
  418a40:	push   rbp
  418a41:	push   r15
  418a43:	push   r14
  418a45:	push   r12
  418a47:	push   rbx
  418a48:	sub    rsp,0x190
  418a4f:	mov    r14,rsi
  418a52:	mov    rbx,rdi
  418a55:	mov    rax,QWORD PTR [rdi+0x108]
  418a5c:	test   rax,rax
  418a5f:	lea    rbp,[rip+0x182cd]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  418a66:	cmovne rbp,rax
  418a6a:	cmp    DWORD PTR [rdi+0x80],0x0
  418a71:	je     418aad <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6d>
  418a73:	mov    rax,QWORD PTR [rip+0x3a566]        # 452fe0 <stdout@GLIBC_2.2.5>
  418a7a:	mov    r15,QWORD PTR [rax]
  418a7d:	test   r15,r15
  418a80:	je     418b1d <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdd>
  418a86:	lea    rbp,[rsp+0x8]
  418a8b:	mov    rdi,rbp
  418a8e:	call   427e80 <flatcc_builder_init@@Base>
  418a93:	mov    rdi,rbp
  418a96:	mov    rsi,rbx
  418a99:	mov    rdx,r14
  418a9c:	call   417840 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x80>
  418aa1:	test   eax,eax
  418aa3:	je     418b24 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe4>
  418aa5:	xor    r14d,r14d
  418aa8:	jmp    418b45 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x105>
  418aad:	mov    r15,QWORD PTR [r14+0x110]
  418ab4:	mov    rdi,r15
  418ab7:	call   4060d0 <strlen@plt>
  418abc:	mov    r12,rax
  418abf:	mov    rdi,rbp
  418ac2:	call   4060d0 <strlen@plt>
  418ac7:	lea    r8,[rip+0x17ce7]        # 4307b5 <_IO_stdin_used@@Base+0x17b5>
  418ace:	mov    r9d,0x1
  418ad4:	mov    rdi,rbp
  418ad7:	mov    rsi,rax
  418ada:	mov    rdx,r15
  418add:	mov    rcx,r12
  418ae0:	call   41bf00 <__flatcc_fb_create_join_path_n@@Base>
  418ae5:	test   rax,rax
  418ae8:	je     418bfa <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ba>
  418aee:	mov    rbp,rax
  418af1:	lea    rsi,[rip+0x17e1e]        # 430916 <_IO_stdin_used@@Base+0x1916>
  418af8:	mov    rdi,rax
  418afb:	call   4061e0 <fopen@plt>
  418b00:	mov    r15,rax
  418b03:	test   rax,rax
  418b06:	je     418bda <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19a>
  418b0c:	mov    rdi,rbp
  418b0f:	call   406040 <free@plt>
  418b14:	test   r15,r15
  418b17:	jne    418a86 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x46>
  418b1d:	mov    ebp,0xffffffff
  418b22:	jmp    418ba1 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x161>
  418b24:	lea    rdi,[rsp+0x8]
  418b29:	mov    rsi,rsp
  418b2c:	call   42c540 <flatcc_builder_finalize_buffer@@Base>
  418b31:	test   rax,rax
  418b34:	je     418aa5 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x65>
  418b3a:	mov    r14,rax
  418b3d:	mov    rdi,rax
  418b40:	call   4187c0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1000>
  418b45:	lea    rdi,[rsp+0x8]
  418b4a:	call   428240 <flatcc_builder_clear@@Base>
  418b4f:	test   r14,r14
  418b52:	je     418b7c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13c>
  418b54:	mov    rbx,QWORD PTR [rsp]
  418b58:	mov    esi,0x1
  418b5d:	mov    rdi,r14
  418b60:	mov    rdx,rbx
  418b63:	mov    rcx,r15
  418b66:	call   406220 <fwrite@plt>
  418b6b:	xor    ebp,ebp
  418b6d:	cmp    rbx,rax
  418b70:	jne    418bb3 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x173>
  418b72:	mov    rdi,r14
  418b75:	call   406040 <free@plt>
  418b7a:	jmp    418b8d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14d>
  418b7c:	lea    rdi,[rip+0x2f1cd]        # 447d50 <_IO_stdin_used@@Base+0x18d50>
  418b83:	call   406070 <puts@plt>
  418b88:	mov    ebp,0xffffffff
  418b8d:	mov    rax,QWORD PTR [rip+0x3a44c]        # 452fe0 <stdout@GLIBC_2.2.5>
  418b94:	cmp    QWORD PTR [rax],r15
  418b97:	je     418ba1 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x161>
  418b99:	mov    rdi,r15
  418b9c:	call   4060c0 <fclose@plt>
  418ba1:	mov    eax,ebp
  418ba3:	add    rsp,0x190
  418baa:	pop    rbx
  418bab:	pop    r12
  418bad:	pop    r14
  418baf:	pop    r15
  418bb1:	pop    rbp
  418bb2:	ret    
  418bb3:	mov    rax,QWORD PTR [rip+0x3a43e]        # 452ff8 <stderr@GLIBC_2.2.5>
  418bba:	mov    rcx,QWORD PTR [rax]
  418bbd:	lea    rdi,[rip+0x2e987]        # 44754b <_IO_stdin_used@@Base+0x1854b>
  418bc4:	mov    esi,0x26
  418bc9:	mov    edx,0x1
  418bce:	call   406220 <fwrite@plt>
  418bd3:	mov    ebp,0xffffffff
  418bd8:	jmp    418b72 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x132>
  418bda:	mov    rax,QWORD PTR [rip+0x3a417]        # 452ff8 <stderr@GLIBC_2.2.5>
  418be1:	mov    rdi,QWORD PTR [rax]
  418be4:	lea    rsi,[rip+0x2f131]        # 447d1c <_IO_stdin_used@@Base+0x18d1c>
  418beb:	xor    eax,eax
  418bed:	mov    rdx,rbp
  418bf0:	call   406180 <fprintf@plt>
  418bf5:	jmp    418b0c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcc>
  418bfa:	mov    rax,QWORD PTR [rip+0x3a3f7]        # 452ff8 <stderr@GLIBC_2.2.5>
  418c01:	mov    rcx,QWORD PTR [rax]
  418c04:	lea    rdi,[rip+0x17c01]        # 43080c <_IO_stdin_used@@Base+0x180c>
  418c0b:	mov    esi,0x22
  418c10:	mov    edx,0x1
  418c15:	call   406220 <fwrite@plt>
  418c1a:	mov    edi,0x1
  418c1f:	call   406210 <exit@plt>
  418c24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418c2e:	xchg   ax,ax
  418c30:	mov    rax,rdi
  418c33:	lea    rdi,[rsi+0x8]
  418c37:	lea    rsi,[rip+0x32]        # 418c70 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x230>
  418c3e:	mov    rdx,rax
  418c41:	jmp    41a700 <fb_symbol_table_visit@@Base>
  418c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418c50:	mov    rax,rdi
  418c53:	lea    rdi,[rsi+0x8]
  418c57:	lea    rsi,[rip+0xc2]        # 418d20 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2e0>
  418c5e:	mov    rdx,rax
  418c61:	jmp    41a700 <fb_symbol_table_visit@@Base>
  418c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418c70:	push   r14
  418c72:	push   rbx
  418c73:	push   rax
  418c74:	movzx  eax,WORD PTR [rsi+0x10]
  418c78:	cmp    eax,0x4
  418c7b:	ja     418d13 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d3>
  418c81:	mov    rbx,rsi
  418c84:	mov    r14,rdi
  418c87:	mov    edi,0x128
  418c8c:	add    rdi,QWORD PTR [r14+0x48]
  418c90:	mov    rsi,QWORD PTR [rsi+0x20]
  418c94:	call   419e50 <ptr_set_find_item@@Base>
  418c99:	test   rax,rax
  418c9c:	je     418d13 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d3>
  418c9e:	cmp    DWORD PTR [r14],0x0
  418ca2:	je     418ce0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2a0>
  418ca4:	mov    rax,QWORD PTR [rbx+0x18]
  418ca8:	mov    rcx,QWORD PTR [rax]
  418cab:	test   rcx,rcx
  418cae:	je     418ce0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2a0>
  418cb0:	xor    eax,eax
  418cb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418cbc:	nop    DWORD PTR [rax+0x0]
  418cc0:	mov    rdx,QWORD PTR [rcx+0x8]
  418cc4:	mov    rsi,QWORD PTR [rcx]
  418cc7:	mov    rcx,QWORD PTR [rdx+0x8]
  418ccb:	add    rax,rcx
  418cce:	add    rax,0x1
  418cd2:	mov    rcx,rsi
  418cd5:	test   rsi,rsi
  418cd8:	jne    418cc0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x280>
  418cda:	add    rax,0x1
  418cde:	jmp    418ce5 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2a5>
  418ce0:	mov    eax,0x1
  418ce5:	mov    rcx,QWORD PTR [rbx+0x8]
  418ce9:	add    rax,QWORD PTR [rcx+0x8]
  418ced:	add    QWORD PTR [r14+0x10],rax
  418cf1:	mov    eax,DWORD PTR [rbx+0x10]
  418cf4:	lea    ecx,[rax-0x3]
  418cf7:	movzx  ecx,cx
  418cfa:	cmp    ecx,0x2
  418cfd:	jb     418d0e <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2ce>
  418cff:	movzx  eax,ax
  418d02:	cmp    eax,0x1
  418d05:	ja     418d13 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d3>
  418d07:	add    DWORD PTR [r14+0x4],0x1
  418d0c:	jmp    418d13 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d3>
  418d0e:	add    DWORD PTR [r14+0x8],0x1
  418d13:	add    rsp,0x8
  418d17:	pop    rbx
  418d18:	pop    r14
  418d1a:	ret    
  418d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  418d20:	push   rbp
  418d21:	push   r15
  418d23:	push   r14
  418d25:	push   r13
  418d27:	push   r12
  418d29:	push   rbx
  418d2a:	push   rax
  418d2b:	movzx  eax,WORD PTR [rsi+0x10]
  418d2f:	cmp    eax,0x4
  418d32:	ja     418e1d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3dd>
  418d38:	mov    r15,rsi
  418d3b:	mov    r14,rdi
  418d3e:	mov    edi,0x128
  418d43:	add    rdi,QWORD PTR [r14+0x48]
  418d47:	mov    rsi,QWORD PTR [rsi+0x20]
  418d4b:	call   419e50 <ptr_set_find_item@@Base>
  418d50:	test   rax,rax
  418d53:	je     418e1d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3dd>
  418d59:	mov    r12,QWORD PTR [r14+0x40]
  418d5d:	cmp    DWORD PTR [r14],0x0
  418d61:	mov    QWORD PTR [rsp],r12
  418d65:	je     418daf <__flatcc_fb_codegen_bfbs_to_file@@Base+0x36f>
  418d67:	mov    rax,QWORD PTR [r15+0x18]
  418d6b:	mov    rbp,QWORD PTR [rax]
  418d6e:	mov    r12,QWORD PTR [rsp]
  418d72:	test   rbp,rbp
  418d75:	je     418daf <__flatcc_fb_codegen_bfbs_to_file@@Base+0x36f>
  418d77:	mov    rbx,QWORD PTR [rsp]
  418d7b:	nop    DWORD PTR [rax+rax*1+0x0]
  418d80:	mov    rax,QWORD PTR [rbp+0x8]
  418d84:	movsxd r13,DWORD PTR [rax+0x8]
  418d88:	mov    rsi,QWORD PTR [rax]
  418d8b:	mov    rdi,rbx
  418d8e:	mov    rdx,r13
  418d91:	call   4061a0 <memcpy@plt>
  418d96:	lea    r12,[rbx+r13*1]
  418d9a:	add    r12,0x1
  418d9e:	mov    BYTE PTR [rbx+r13*1],0x2e
  418da3:	mov    rbp,QWORD PTR [rbp+0x0]
  418da7:	mov    rbx,r12
  418daa:	test   rbp,rbp
  418dad:	jne    418d80 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x340>
  418daf:	mov    rax,QWORD PTR [r15+0x8]
  418db3:	movsxd rbx,DWORD PTR [rax+0x8]
  418db7:	mov    rsi,QWORD PTR [rax]
  418dba:	mov    rdi,r12
  418dbd:	mov    rdx,rbx
  418dc0:	call   4061a0 <memcpy@plt>
  418dc5:	lea    rax,[r12+rbx*1]
  418dc9:	add    rax,0x1
  418dcd:	mov    BYTE PTR [r12+rbx*1],0x0
  418dd2:	mov    QWORD PTR [r14+0x40],rax
  418dd6:	mov    eax,DWORD PTR [r15+0x10]
  418dda:	lea    ecx,[rax-0x3]
  418ddd:	movzx  ecx,cx
  418de0:	cmp    ecx,0x2
  418de3:	jb     418e06 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c6>
  418de5:	movzx  eax,ax
  418de8:	cmp    eax,0x1
  418deb:	ja     418e1d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3dd>
  418ded:	mov    rax,QWORD PTR [r14+0x30]
  418df1:	mov    QWORD PTR [rax],r15
  418df4:	mov    rcx,QWORD PTR [rsp]
  418df8:	mov    QWORD PTR [rax+0x8],rcx
  418dfc:	add    rax,0x10
  418e00:	mov    QWORD PTR [r14+0x30],rax
  418e04:	jmp    418e1d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3dd>
  418e06:	mov    rax,QWORD PTR [r14+0x38]
  418e0a:	mov    QWORD PTR [rax],r15
  418e0d:	mov    rcx,QWORD PTR [rsp]
  418e11:	mov    QWORD PTR [rax+0x8],rcx
  418e15:	add    rax,0x10
  418e19:	mov    QWORD PTR [r14+0x38],rax
  418e1d:	add    rsp,0x8
  418e21:	pop    rbx
  418e22:	pop    r12
  418e24:	pop    r13
  418e26:	pop    r14
  418e28:	pop    r15
  418e2a:	pop    rbp
  418e2b:	ret    
  418e2c:	nop    DWORD PTR [rax+0x0]
  418e30:	mov    rdi,QWORD PTR [rdi+0x8]
  418e34:	mov    rsi,QWORD PTR [rsi+0x8]
  418e38:	jmp    406160 <strcmp@plt>
  418e3d:	nop    DWORD PTR [rax]
  418e40:	push   rbp
  418e41:	push   r15
  418e43:	push   r14
  418e45:	push   rbx
  418e46:	push   rax
  418e47:	mov    r15,rdi
  418e4a:	mov    r14d,0xffffffff
  418e50:	xor    ebp,ebp
  418e52:	mov    ecx,DWORD PTR [rsp+0x40]
  418e56:	add    ecx,0xfffffffe
  418e59:	movzx  eax,cx
  418e5c:	cmp    eax,0xd
  418e5f:	ja     418f18 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d8>
  418e65:	lea    rax,[rsp+0x30]
  418e6a:	mov    dl,0xd
  418e6c:	movzx  ecx,cx
  418e6f:	lea    rsi,[rip+0x2e672]        # 4474e8 <_IO_stdin_used@@Base+0x184e8>
  418e76:	movsxd rdi,DWORD PTR [rsi+rcx*4]
  418e7a:	add    rdi,rsi
  418e7d:	mov    cl,0xd
  418e7f:	xor    ebx,ebx
  418e81:	jmp    rdi
  418e83:	mov    cl,0xe
  418e85:	mov    r14d,0xffffffff
  418e8b:	jmp    418eba <__flatcc_fb_codegen_bfbs_to_file@@Base+0x47a>
  418e8d:	mov    rax,QWORD PTR [rax]
  418e90:	mov    r14d,DWORD PTR [rax+0xc8]
  418e97:	movzx  ecx,WORD PTR [rax+0x10]
  418e9b:	mov    dl,0xf
  418e9d:	cmp    ecx,0x2
  418ea0:	jb     418ed9 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x499>
  418ea2:	movzx  ecx,cx
  418ea5:	cmp    ecx,0x3
  418ea8:	jne    418f1c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4dc>
  418eaa:	add    rax,0x48
  418eae:	mov    cl,0xe
  418eb0:	jmp    418eba <__flatcc_fb_codegen_bfbs_to_file@@Base+0x47a>
  418eb2:	mov    r14d,0xffffffff
  418eb8:	xor    ecx,ecx
  418eba:	mov    eax,DWORD PTR [rax]
  418ebc:	add    eax,0xffffffff
  418ebf:	cmp    eax,0xa
  418ec2:	ja     418ee0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a0>
  418ec4:	cdqe   
  418ec6:	lea    rdx,[rip+0x2e673]        # 447540 <_IO_stdin_used@@Base+0x18540>
  418ecd:	mov    dl,BYTE PTR [rax+rdx*1]
  418ed0:	test   cl,cl
  418ed2:	je     418ee6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a6>
  418ed4:	cmp    cl,0xe
  418ed7:	jne    418f27 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e7>
  418ed9:	mov    bpl,0xe
  418edc:	mov    ebx,edx
  418ede:	jmp    418f2b <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4eb>
  418ee0:	xor    edx,edx
  418ee2:	test   cl,cl
  418ee4:	jne    418ed4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x494>
  418ee6:	xor    ebx,ebx
  418ee8:	mov    ebp,edx
  418eea:	jmp    418f2b <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4eb>
  418eec:	mov    rax,QWORD PTR [rax]
  418eef:	mov    edx,DWORD PTR [rax+0xc8]
  418ef5:	movzx  esi,WORD PTR [rax+0x10]
  418ef9:	mov    cl,0xf
  418efb:	cmp    esi,0x2
  418efe:	jb     418f24 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e4>
  418f00:	movzx  ecx,si
  418f03:	cmp    ecx,0x4
  418f06:	je     418f22 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e2>
  418f08:	cmp    ecx,0x3
  418f0b:	jne    418f1c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4dc>
  418f0d:	add    rax,0x48
  418f11:	xor    ecx,ecx
  418f13:	mov    r14d,edx
  418f16:	jmp    418eba <__flatcc_fb_codegen_bfbs_to_file@@Base+0x47a>
  418f18:	xor    ebx,ebx
  418f1a:	jmp    418f2b <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4eb>
  418f1c:	xor    ebp,ebp
  418f1e:	xor    ebx,ebx
  418f20:	jmp    418f2b <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4eb>
  418f22:	mov    cl,0x10
  418f24:	mov    r14d,edx
  418f27:	xor    ebx,ebx
  418f29:	mov    ebp,ecx
  418f2b:	mov    esi,0x3
  418f30:	mov    rdi,r15
  418f33:	call   429ef0 <flatcc_builder_start_table@@Base>
  418f38:	test   eax,eax
  418f3a:	je     418f49 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x509>
  418f3c:	xor    eax,eax
  418f3e:	add    rsp,0x8
  418f42:	pop    rbx
  418f43:	pop    r14
  418f45:	pop    r15
  418f47:	pop    rbp
  418f48:	ret    
  418f49:	cmp    r14d,0xffffffff
  418f4d:	je     418f6e <__flatcc_fb_codegen_bfbs_to_file@@Base+0x52e>
  418f4f:	mov    esi,0x2
  418f54:	mov    edx,0x4
  418f59:	mov    ecx,0x4
  418f5e:	mov    rdi,r15
  418f61:	call   42b270 <flatcc_builder_table_add@@Base>
  418f66:	test   rax,rax
  418f69:	je     418f3c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4fc>
  418f6b:	mov    DWORD PTR [rax],r14d
  418f6e:	test   bpl,bpl
  418f71:	je     418f8f <__flatcc_fb_codegen_bfbs_to_file@@Base+0x54f>
  418f73:	xor    esi,esi
  418f75:	mov    edx,0x1
  418f7a:	mov    ecx,0x1
  418f7f:	mov    rdi,r15
  418f82:	call   42b270 <flatcc_builder_table_add@@Base>
  418f87:	test   rax,rax
  418f8a:	je     418f3c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4fc>
  418f8c:	mov    BYTE PTR [rax],bpl
  418f8f:	test   bl,bl
  418f91:	je     418fb1 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x571>
  418f93:	mov    esi,0x1
  418f98:	mov    edx,0x1
  418f9d:	mov    ecx,0x1
  418fa2:	mov    rdi,r15
  418fa5:	call   42b270 <flatcc_builder_table_add@@Base>
  418faa:	test   rax,rax
  418fad:	je     418f3c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4fc>
  418faf:	mov    BYTE PTR [rax],bl
  418fb1:	lea    rsi,[rip+0x2e568]        # 447520 <_IO_stdin_used@@Base+0x18520>
  418fb8:	xor    edx,edx
  418fba:	mov    rdi,r15
  418fbd:	call   42a890 <flatcc_builder_check_required@@Base>
  418fc2:	test   eax,eax
  418fc4:	je     418fd8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x598>
  418fc6:	mov    rdi,r15
  418fc9:	add    rsp,0x8
  418fcd:	pop    rbx
  418fce:	pop    r14
  418fd0:	pop    r15
  418fd2:	pop    rbp
  418fd3:	jmp    42a900 <flatcc_builder_end_table@@Base>
  418fd8:	lea    rdi,[rip+0x2e598]        # 447577 <_IO_stdin_used@@Base+0x18577>
  418fdf:	lea    rsi,[rip+0x2e61e]        # 447604 <_IO_stdin_used@@Base+0x18604>
  418fe6:	lea    rcx,[rip+0x2e690]        # 44767d <_IO_stdin_used@@Base+0x1867d>
  418fed:	mov    edx,0x17
  418ff2:	call   406100 <__assert_fail@plt>
  418ff7:	nop    WORD PTR [rax+rax*1+0x0]
  419000:	push   rbp
  419001:	push   r15
  419003:	push   r14
  419005:	push   r13
  419007:	push   r12
  419009:	push   rbx
  41900a:	sub    rsp,0x18
  41900e:	lea    rbp,[rsi+rsi*1]
  419012:	mov    QWORD PTR [rsp+0x10],rdx
  419017:	cmp    rbp,rdx
  41901a:	ja     41924e <__flatcc_fb_codegen_bfbs_to_file@@Base+0x80e>
  419020:	mov    r13,rsi
  419023:	mov    QWORD PTR [rsp+0x8],rdi
  419028:	nop    DWORD PTR [rax+rax*1+0x0]
  419030:	cmp    rbp,QWORD PTR [rsp+0x10]
  419035:	jae    419140 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x700>
  41903b:	test   rdi,rdi
  41903e:	je     419266 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x826>
  419044:	mov    esi,DWORD PTR [rdi-0x4]
  419047:	cmp    rbp,rsi
  41904a:	jae    419266 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x826>
  419050:	lea    rcx,[rdi+rbp*4]
  419054:	mov    eax,DWORD PTR [rdi+rbp*4]
  419057:	add    rax,rcx
  41905a:	je     419285 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x845>
  419060:	movsxd rcx,DWORD PTR [rax]
  419063:	mov    rdx,rax
  419066:	sub    rdx,rcx
  419069:	movzx  edx,WORD PTR [rdx]
  41906c:	cmp    edx,0x6
  41906f:	jb     41925d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81d>
  419075:	neg    rcx
  419078:	movzx  ecx,WORD PTR [rax+rcx*1+0x4]
  41907d:	test   rcx,rcx
  419080:	je     41925d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81d>
  419086:	mov    rbx,rbp
  419089:	or     rbx,0x1
  41908d:	cmp    rbx,rsi
  419090:	jae    419266 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x826>
  419096:	lea    r8,[rdi+rbx*4]
  41909a:	mov    edx,DWORD PTR [rdi+rbx*4]
  41909d:	add    rdx,r8
  4190a0:	je     419285 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x845>
  4190a6:	mov    QWORD PTR [rsp],rsi
  4190aa:	movsxd rsi,DWORD PTR [rdx]
  4190ad:	mov    rdi,rdx
  4190b0:	sub    rdi,rsi
  4190b3:	movzx  edi,WORD PTR [rdi]
  4190b6:	cmp    edi,0x6
  4190b9:	jb     41925d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81d>
  4190bf:	neg    rsi
  4190c2:	movzx  esi,WORD PTR [rdx+rsi*1+0x4]
  4190c7:	test   rsi,rsi
  4190ca:	je     41925d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81d>
  4190d0:	lea    rdi,[rax+rcx*1]
  4190d4:	mov    eax,DWORD PTR [rax+rcx*1]
  4190d7:	add    rdi,rax
  4190da:	add    rdi,0x4
  4190de:	lea    rax,[rdx+rsi*1]
  4190e2:	mov    ecx,DWORD PTR [rdx+rsi*1]
  4190e5:	lea    rsi,[rcx+rax*1]
  4190e9:	add    rsi,0x4
  4190ed:	mov    r14d,DWORD PTR [rcx+rax*1]
  4190f1:	mov    r15d,DWORD PTR [rdi-0x4]
  4190f5:	cmp    r15d,r14d
  4190f8:	mov    edx,r14d
  4190fb:	cmovb  edx,r15d
  4190ff:	call   406060 <strncmp@plt>
  419104:	test   eax,eax
  419106:	mov    rax,rbx
  419109:	cmovne rax,rbp
  41910d:	cmovs  rax,rbx
  419111:	cmovne rbp,rax
  419115:	cmp    r15d,r14d
  419118:	cmovb  rbp,rax
  41911c:	mov    r12,rbp
  41911f:	mov    rdi,QWORD PTR [rsp+0x8]
  419124:	mov    rbx,QWORD PTR [rsp]
  419128:	cmp    r13,rbx
  41912b:	jb     419158 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x718>
  41912d:	jmp    419266 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x826>
  419132:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41913c:	nop    DWORD PTR [rax+0x0]
  419140:	test   rdi,rdi
  419143:	je     419266 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x826>
  419149:	mov    ebx,DWORD PTR [rdi-0x4]
  41914c:	mov    r12,rbp
  41914f:	cmp    r13,rbx
  419152:	jae    419266 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x826>
  419158:	lea    rsi,[rdi+r13*4]
  41915c:	mov    r14d,DWORD PTR [rdi+r13*4]
  419160:	mov    rax,rsi
  419163:	add    rax,r14
  419166:	je     419285 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x845>
  41916c:	movsxd rcx,DWORD PTR [rax]
  41916f:	mov    rdx,rax
  419172:	sub    rdx,rcx
  419175:	movzx  edx,WORD PTR [rdx]
  419178:	cmp    edx,0x6
  41917b:	jb     41925d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81d>
  419181:	neg    rcx
  419184:	movzx  ecx,WORD PTR [rax+rcx*1+0x4]
  419189:	test   rcx,rcx
  41918c:	je     41925d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81d>
  419192:	cmp    r12,rbx
  419195:	jae    419266 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x826>
  41919b:	lea    rbx,[rdi+r12*4]
  41919f:	mov    ebp,DWORD PTR [rdi+r12*4]
  4191a3:	mov    rdx,rbx
  4191a6:	add    rdx,rbp
  4191a9:	je     419285 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x845>
  4191af:	mov    QWORD PTR [rsp],rsi
  4191b3:	movsxd rsi,DWORD PTR [rdx]
  4191b6:	mov    rdi,rdx
  4191b9:	sub    rdi,rsi
  4191bc:	movzx  edi,WORD PTR [rdi]
  4191bf:	cmp    edi,0x6
  4191c2:	jb     41925d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81d>
  4191c8:	neg    rsi
  4191cb:	movzx  esi,WORD PTR [rdx+rsi*1+0x4]
  4191d0:	test   rsi,rsi
  4191d3:	je     41925d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81d>
  4191d9:	lea    rdi,[rax+rcx*1]
  4191dd:	mov    eax,DWORD PTR [rax+rcx*1]
  4191e0:	add    rdi,rax
  4191e3:	add    rdi,0x4
  4191e7:	lea    rax,[rdx+rsi*1]
  4191eb:	mov    ecx,DWORD PTR [rdx+rsi*1]
  4191ee:	lea    rsi,[rcx+rax*1]
  4191f2:	add    rsi,0x4
  4191f6:	mov    edx,DWORD PTR [rcx+rax*1]
  4191f9:	mov    eax,DWORD PTR [rdi-0x4]
  4191fc:	cmp    eax,edx
  4191fe:	setb   r15b
  419202:	cmovb  edx,eax
  419205:	call   406060 <strncmp@plt>
  41920a:	test   eax,eax
  41920c:	setne  cl
  41920f:	setle  al
  419212:	or     cl,r15b
  419215:	cmp    cl,0x1
  419218:	mov    rdi,QWORD PTR [rsp+0x8]
  41921d:	jne    41924e <__flatcc_fb_codegen_bfbs_to_file@@Base+0x80e>
  41921f:	test   al,al
  419221:	je     41924e <__flatcc_fb_codegen_bfbs_to_file@@Base+0x80e>
  419223:	sub    r13d,r12d
  419226:	lea    eax,[r13*4+0x0]
  41922e:	sub    ebp,eax
  419230:	lea    eax,[r14+r13*4]
  419234:	mov    rcx,QWORD PTR [rsp]
  419238:	mov    DWORD PTR [rcx],ebp
  41923a:	mov    DWORD PTR [rbx],eax
  41923c:	lea    rbp,[r12+r12*1]
  419240:	mov    r13,r12
  419243:	cmp    rbp,QWORD PTR [rsp+0x10]
  419248:	jbe    419030 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5f0>
  41924e:	add    rsp,0x18
  419252:	pop    rbx
  419253:	pop    r12
  419255:	pop    r13
  419257:	pop    r14
  419259:	pop    r15
  41925b:	pop    rbp
  41925c:	ret    
  41925d:	lea    rdi,[rip+0x2e97f]        # 447be3 <_IO_stdin_used@@Base+0x18be3>
  419264:	jmp    41928c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x84c>
  419266:	lea    rdi,[rip+0x2e997]        # 447c04 <_IO_stdin_used@@Base+0x18c04>
  41926d:	lea    rsi,[rip+0x2e8aa]        # 447b1e <_IO_stdin_used@@Base+0x18b1e>
  419274:	lea    rcx,[rip+0x2ea50]        # 447ccb <_IO_stdin_used@@Base+0x18ccb>
  41927b:	mov    edx,0xc0
  419280:	call   406100 <__assert_fail@plt>
  419285:	lea    rdi,[rip+0x2e86c]        # 447af8 <_IO_stdin_used@@Base+0x18af8>
  41928c:	lea    rsi,[rip+0x2e88b]        # 447b1e <_IO_stdin_used@@Base+0x18b1e>
  419293:	lea    rcx,[rip+0x2e9ec]        # 447c86 <_IO_stdin_used@@Base+0x18c86>
  41929a:	mov    edx,0xc3
  41929f:	call   406100 <__assert_fail@plt>
  4192a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4192ae:	xchg   ax,ax

00000000004192b0 <str_set_clear@@Base>:
  4192b0:	push   rbx
  4192b1:	mov    rbx,rdi
  4192b4:	mov    rdi,QWORD PTR [rdi]
  4192b7:	test   rdi,rdi
  4192ba:	je     4192c1 <str_set_clear@@Base+0x11>
  4192bc:	call   406040 <free@plt>
  4192c1:	vxorps xmm0,xmm0,xmm0
  4192c5:	vmovups YMMWORD PTR [rbx],ymm0
  4192c9:	pop    rbx
  4192ca:	vzeroupper 
  4192cd:	ret    
  4192ce:	xchg   ax,ax

00000000004192d0 <str_set_destroy@@Base>:
  4192d0:	push   r15
  4192d2:	push   r14
  4192d4:	push   r13
  4192d6:	push   r12
  4192d8:	push   rbx
  4192d9:	mov    r12,rdi
  4192dc:	test   rsi,rsi
  4192df:	je     419326 <str_set_destroy@@Base+0x56>
  4192e1:	mov    rax,QWORD PTR [r12+0x18]
  4192e6:	test   rax,rax
  4192e9:	je     419326 <str_set_destroy@@Base+0x56>
  4192eb:	mov    r14,rdx
  4192ee:	mov    r15,rsi
  4192f1:	mov    r13,QWORD PTR [r12]
  4192f5:	xor    ebx,ebx
  4192f7:	nop    WORD PTR [rax+rax*1+0x0]
  419300:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  419305:	mov    rcx,rsi
  419308:	or     rcx,0x2
  41930c:	cmp    rcx,0x2
  419310:	je     41931d <str_set_destroy@@Base+0x4d>
  419312:	mov    rdi,r14
  419315:	call   r15
  419318:	mov    rax,QWORD PTR [r12+0x18]
  41931d:	add    rbx,0x1
  419321:	cmp    rbx,rax
  419324:	jb     419300 <str_set_destroy@@Base+0x30>
  419326:	mov    rdi,QWORD PTR [r12]
  41932a:	test   rdi,rdi
  41932d:	je     419334 <str_set_destroy@@Base+0x64>
  41932f:	call   406040 <free@plt>
  419334:	vxorps xmm0,xmm0,xmm0
  419338:	vmovups YMMWORD PTR [r12],ymm0
  41933e:	pop    rbx
  41933f:	pop    r12
  419341:	pop    r13
  419343:	pop    r14
  419345:	pop    r15
  419347:	vzeroupper 
  41934a:	ret    
  41934b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419350 <str_set_init@@Base>:
  419350:	push   r14
  419352:	push   rbx
  419353:	push   rax
  419354:	mov    r14,rdi
  419357:	mov    eax,0x4
  41935c:	nop    DWORD PTR [rax+0x0]
  419360:	mov    rbx,rax
  419363:	imul   rcx,rax,0xb3
  41936a:	shr    rcx,0x8
  41936e:	lea    rax,[rax+rax*1]
  419372:	cmp    rcx,rsi
  419375:	jb     419360 <str_set_init@@Base+0x10>
  419377:	mov    esi,0x8
  41937c:	mov    rdi,rbx
  41937f:	call   406150 <calloc@plt>
  419384:	mov    QWORD PTR [r14],rax
  419387:	test   rax,rax
  41938a:	je     41939e <str_set_init@@Base+0x4e>
  41938c:	vxorps xmm0,xmm0,xmm0
  419390:	vmovups XMMWORD PTR [r14+0x8],xmm0
  419396:	mov    QWORD PTR [r14+0x18],rbx
  41939a:	xor    eax,eax
  41939c:	jmp    4193a3 <str_set_init@@Base+0x53>
  41939e:	mov    eax,0xffffffff
  4193a3:	add    rsp,0x8
  4193a7:	pop    rbx
  4193a8:	pop    r14
  4193aa:	ret    
  4193ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004193b0 <str_set_resize@@Base>:
  4193b0:	jmp    4193c0 <str_set_resize@@Base+0x10>
  4193b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4193bc:	nop    DWORD PTR [rax+0x0]
  4193c0:	push   r15
  4193c2:	push   r14
  4193c4:	push   r13
  4193c6:	push   r12
  4193c8:	push   rbx
  4193c9:	sub    rsp,0x20
  4193cd:	mov    r14,rdi
  4193d0:	mov    r12,QWORD PTR [rdi]
  4193d3:	mov    rax,QWORD PTR [rdi+0x10]
  4193d7:	cmp    rax,rsi
  4193da:	cmova  rsi,rax
  4193de:	mov    eax,0x4
  4193e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4193ed:	nop    DWORD PTR [rax]
  4193f0:	mov    rbx,rax
  4193f3:	imul   rcx,rax,0xb3
  4193fa:	shr    rcx,0x8
  4193fe:	lea    rax,[rax+rax*1]
  419402:	cmp    rcx,rsi
  419405:	jb     4193f0 <str_set_resize@@Base+0x40>
  419407:	mov    esi,0x8
  41940c:	mov    rdi,rbx
  41940f:	call   406150 <calloc@plt>
  419414:	mov    QWORD PTR [rsp],rax
  419418:	test   rax,rax
  41941b:	je     41949b <str_set_resize@@Base+0xeb>
  41941d:	vxorps xmm0,xmm0,xmm0
  419421:	vmovups XMMWORD PTR [rsp+0x8],xmm0
  419427:	mov    QWORD PTR [rsp+0x18],rbx
  41942c:	mov    rax,QWORD PTR [r14+0x18]
  419430:	test   rax,rax
  419433:	je     419480 <str_set_resize@@Base+0xd0>
  419435:	xor    ebx,ebx
  419437:	mov    r15,rsp
  41943a:	nop    WORD PTR [rax+rax*1+0x0]
  419440:	mov    r13,QWORD PTR [r12+rbx*8]
  419444:	mov    rcx,r13
  419447:	or     rcx,0x2
  41944b:	cmp    rcx,0x2
  41944f:	je     419474 <str_set_resize@@Base+0xc4>
  419451:	mov    rdi,r13
  419454:	call   4060d0 <strlen@plt>
  419459:	mov    r8d,0x3
  41945f:	mov    rdi,r15
  419462:	mov    rsi,r13
  419465:	mov    rdx,rax
  419468:	mov    rcx,r13
  41946b:	call   4194d0 <str_set_insert@@Base+0x10>
  419470:	mov    rax,QWORD PTR [r14+0x18]
  419474:	add    rbx,0x1
  419478:	cmp    rbx,rax
  41947b:	jb     419440 <str_set_resize@@Base+0x90>
  41947d:	mov    r12,QWORD PTR [r14]
  419480:	test   r12,r12
  419483:	je     41948d <str_set_resize@@Base+0xdd>
  419485:	mov    rdi,r12
  419488:	call   406040 <free@plt>
  41948d:	vmovups ymm0,YMMWORD PTR [rsp]
  419492:	vmovups YMMWORD PTR [r14],ymm0
  419497:	xor    eax,eax
  419499:	jmp    4194a0 <str_set_resize@@Base+0xf0>
  41949b:	mov    eax,0xffffffff
  4194a0:	add    rsp,0x20
  4194a4:	pop    rbx
  4194a5:	pop    r12
  4194a7:	pop    r13
  4194a9:	pop    r14
  4194ab:	pop    r15
  4194ad:	vzeroupper 
  4194b0:	ret    
  4194b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4194bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004194c0 <str_set_insert@@Base>:
  4194c0:	jmp    4194d0 <str_set_insert@@Base+0x10>
  4194c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4194cc:	nop    DWORD PTR [rax+0x0]
  4194d0:	push   rbp
  4194d1:	push   r15
  4194d3:	push   r14
  4194d5:	push   r13
  4194d7:	push   r12
  4194d9:	push   rbx
  4194da:	sub    rsp,0x38
  4194de:	mov    QWORD PTR [rsp+0x20],rdx
  4194e3:	mov    QWORD PTR [rsp+0x18],rsi
  4194e8:	cmp    rcx,0x2
  4194ec:	je     419644 <str_set_insert@@Base+0x184>
  4194f2:	mov    r13,rcx
  4194f5:	cmp    rcx,0x1
  4194f9:	je     419663 <str_set_insert@@Base+0x1a3>
  4194ff:	test   r13,r13
  419502:	je     419682 <str_set_insert@@Base+0x1c2>
  419508:	mov    ebp,r8d
  41950b:	mov    rbx,rdi
  41950e:	mov    rsi,QWORD PTR [rdi+0x10]
  419512:	mov    r15,QWORD PTR [rdi+0x18]
  419516:	imul   rax,r15,0xb3
  41951d:	shr    rax,0x8
  419521:	cmp    rsi,rax
  419524:	jb     41953d <str_set_insert@@Base+0x7d>
  419526:	add    rsi,rsi
  419529:	mov    rdi,rbx
  41952c:	call   4193c0 <str_set_resize@@Base+0x10>
  419531:	test   eax,eax
  419533:	jne    4196a1 <str_set_insert@@Base+0x1e1>
  419539:	mov    r15,QWORD PTR [rbx+0x18]
  41953d:	mov    r14,QWORD PTR [rbx]
  419540:	add    r15,0xffffffffffffffff
  419544:	lea    rcx,[rsp+0x30]
  419549:	mov    edx,0x2f693b52
  41954e:	mov    rdi,QWORD PTR [rsp+0x18]
  419553:	mov    rsi,QWORD PTR [rsp+0x20]
  419558:	call   42cee0 <cmetrohash64_1@@Base>
  41955d:	mov    rcx,QWORD PTR [rsp+0x30]
  419562:	mov    r12d,ecx
  419565:	mov    eax,r15d
  419568:	and    eax,ecx
  41956a:	mov    ecx,ebp
  41956c:	or     ecx,0x1
  41956f:	cmp    ecx,0x3
  419572:	jne    4195a3 <str_set_insert@@Base+0xe3>
  419574:	add    QWORD PTR [rbx+0x10],0x1
  419579:	jmp    419586 <str_set_insert@@Base+0xc6>
  41957b:	nop    DWORD PTR [rax+rax*1+0x0]
  419580:	mov    rax,r12
  419583:	and    rax,r15
  419586:	add    r12,0x1
  41958a:	mov    rcx,QWORD PTR [r14+rax*8]
  41958e:	or     rcx,0x2
  419592:	cmp    rcx,0x2
  419596:	jne    419580 <str_set_insert@@Base+0xc0>
  419598:	lea    rbx,[r14+rax*8]
  41959c:	xor    ebp,ebp
  41959e:	jmp    419621 <str_set_insert@@Base+0x161>
  4195a3:	mov    DWORD PTR [rsp+0xc],ebp
  4195a7:	mov    QWORD PTR [rsp+0x28],rbx
  4195ac:	mov    QWORD PTR [rsp+0x10],r13
  4195b1:	add    r12,0x1
  4195b5:	xor    r13d,r13d
  4195b8:	jmp    4195ca <str_set_insert@@Base+0x10a>
  4195ba:	nop    WORD PTR [rax+rax*1+0x0]
  4195c0:	mov    rax,r12
  4195c3:	and    rax,r15
  4195c6:	add    r12,0x1
  4195ca:	lea    rbx,[r14+rax*8]
  4195ce:	mov    rbp,QWORD PTR [r14+rax*8]
  4195d2:	cmp    rbp,0x2
  4195d6:	je     419600 <str_set_insert@@Base+0x140>
  4195d8:	test   rbp,rbp
  4195db:	je     419609 <str_set_insert@@Base+0x149>
  4195dd:	mov    rdi,QWORD PTR [rsp+0x18]
  4195e2:	mov    rsi,rbp
  4195e5:	mov    rdx,QWORD PTR [rsp+0x20]
  4195ea:	call   406060 <strncmp@plt>
  4195ef:	test   eax,eax
  4195f1:	jne    4195c0 <str_set_insert@@Base+0x100>
  4195f3:	jmp    419636 <str_set_insert@@Base+0x176>
  4195f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4195ff:	nop
  419600:	test   r13,r13
  419603:	cmove  r13,rbx
  419607:	jmp    4195c0 <str_set_insert@@Base+0x100>
  419609:	test   r13,r13
  41960c:	cmovne rbx,r13
  419610:	mov    rax,QWORD PTR [rsp+0x28]
  419615:	add    QWORD PTR [rax+0x10],0x1
  41961a:	xor    ebp,ebp
  41961c:	mov    r13,QWORD PTR [rsp+0x10]
  419621:	mov    QWORD PTR [rbx],r13
  419624:	mov    rax,rbp
  419627:	add    rsp,0x38
  41962b:	pop    rbx
  41962c:	pop    r12
  41962e:	pop    r13
  419630:	pop    r14
  419632:	pop    r15
  419634:	pop    rbp
  419635:	ret    
  419636:	cmp    DWORD PTR [rsp+0xc],0x0
  41963b:	mov    r13,QWORD PTR [rsp+0x10]
  419640:	jne    419624 <str_set_insert@@Base+0x164>
  419642:	jmp    419621 <str_set_insert@@Base+0x161>
  419644:	lea    rdi,[rip+0x2e810]        # 447e5b <str_set_deleted@@Base+0xd3>
  41964b:	lea    rsi,[rip+0x2e755]        # 447da7 <str_set_deleted@@Base+0x1f>
  419652:	lea    rcx,[rip+0x2e7b8]        # 447e11 <str_set_deleted@@Base+0x89>
  419659:	mov    edx,0x73
  41965e:	call   406100 <__assert_fail@plt>
  419663:	lea    rdi,[rip+0x2e808]        # 447e72 <str_set_deleted@@Base+0xea>
  41966a:	lea    rsi,[rip+0x2e736]        # 447da7 <str_set_deleted@@Base+0x1f>
  419671:	lea    rcx,[rip+0x2e799]        # 447e11 <str_set_deleted@@Base+0x89>
  419678:	mov    edx,0x74
  41967d:	call   406100 <__assert_fail@plt>
  419682:	lea    rdi,[rip+0x2e707]        # 447d90 <str_set_deleted@@Base+0x8>
  419689:	lea    rsi,[rip+0x2e717]        # 447da7 <str_set_deleted@@Base+0x1f>
  419690:	lea    rcx,[rip+0x2e77a]        # 447e11 <str_set_deleted@@Base+0x89>
  419697:	mov    edx,0x72
  41969c:	call   406100 <__assert_fail@plt>
  4196a1:	mov    rax,QWORD PTR [rip+0x39950]        # 452ff8 <stderr@GLIBC_2.2.5>
  4196a8:	mov    rdi,QWORD PTR [rax]
  4196ab:	lea    rsi,[rip+0x2e7d5]        # 447e87 <str_set_deleted@@Base+0xff>
  4196b2:	lea    rdx,[rip+0x2e7e5]        # 447e9e <str_set_deleted@@Base+0x116>
  4196b9:	xor    eax,eax
  4196bb:	call   406180 <fprintf@plt>
  4196c0:	mov    edi,0x1
  4196c5:	call   406210 <exit@plt>
  4196ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004196d0 <str_set_insert_item@@Base>:
  4196d0:	push   rbp
  4196d1:	push   r14
  4196d3:	push   rbx
  4196d4:	mov    r14d,edx
  4196d7:	mov    rbx,rsi
  4196da:	mov    rbp,rdi
  4196dd:	mov    rdi,rsi
  4196e0:	call   4060d0 <strlen@plt>
  4196e5:	mov    rdi,rbp
  4196e8:	mov    rsi,rbx
  4196eb:	mov    rdx,rax
  4196ee:	mov    rcx,rbx
  4196f1:	mov    r8d,r14d
  4196f4:	pop    rbx
  4196f5:	pop    r14
  4196f7:	pop    rbp
  4196f8:	jmp    4194d0 <str_set_insert@@Base+0x10>
  4196fd:	nop    DWORD PTR [rax]

0000000000419700 <str_set_find@@Base>:
  419700:	push   rbp
  419701:	push   r15
  419703:	push   r14
  419705:	push   r13
  419707:	push   r12
  419709:	push   rbx
  41970a:	push   rax
  41970b:	mov    r12,QWORD PTR [rdi]
  41970e:	test   r12,r12
  419711:	je     41976d <str_set_find@@Base+0x6d>
  419713:	mov    r14,rdx
  419716:	mov    r15,rsi
  419719:	mov    r13,QWORD PTR [rdi+0x18]
  41971d:	add    r13,0xffffffffffffffff
  419721:	mov    rcx,rsp
  419724:	mov    edx,0x2f693b52
  419729:	mov    rdi,rsi
  41972c:	mov    rsi,r14
  41972f:	call   42cee0 <cmetrohash64_1@@Base>
  419734:	mov    ebp,DWORD PTR [rsp]
  419737:	jmp    419744 <str_set_find@@Base+0x44>
  419739:	nop    DWORD PTR [rax+0x0]
  419740:	add    rbp,0x1
  419744:	mov    rax,rbp
  419747:	and    rax,r13
  41974a:	mov    rbx,QWORD PTR [r12+rax*8]
  41974e:	cmp    rbx,0x2
  419752:	je     419740 <str_set_find@@Base+0x40>
  419754:	test   rbx,rbx
  419757:	je     41976d <str_set_find@@Base+0x6d>
  419759:	mov    rdi,r15
  41975c:	mov    rsi,rbx
  41975f:	mov    rdx,r14
  419762:	call   406060 <strncmp@plt>
  419767:	test   eax,eax
  419769:	jne    419740 <str_set_find@@Base+0x40>
  41976b:	jmp    41976f <str_set_find@@Base+0x6f>
  41976d:	xor    ebx,ebx
  41976f:	mov    rax,rbx
  419772:	add    rsp,0x8
  419776:	pop    rbx
  419777:	pop    r12
  419779:	pop    r13
  41977b:	pop    r14
  41977d:	pop    r15
  41977f:	pop    rbp
  419780:	ret    
  419781:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41978b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419790 <str_set_find_item@@Base>:
  419790:	push   rbp
  419791:	push   r15
  419793:	push   r14
  419795:	push   r13
  419797:	push   r12
  419799:	push   rbx
  41979a:	push   rax
  41979b:	mov    r15,rsi
  41979e:	mov    rbx,rdi
  4197a1:	mov    rdi,rsi
  4197a4:	call   4060d0 <strlen@plt>
  4197a9:	mov    r12,QWORD PTR [rbx]
  4197ac:	test   r12,r12
  4197af:	je     41980d <str_set_find_item@@Base+0x7d>
  4197b1:	mov    r14,rax
  4197b4:	mov    r13,QWORD PTR [rbx+0x18]
  4197b8:	add    r13,0xffffffffffffffff
  4197bc:	mov    rcx,rsp
  4197bf:	mov    edx,0x2f693b52
  4197c4:	mov    rdi,r15
  4197c7:	mov    rsi,rax
  4197ca:	call   42cee0 <cmetrohash64_1@@Base>
  4197cf:	mov    ebp,DWORD PTR [rsp]
  4197d2:	jmp    4197e4 <str_set_find_item@@Base+0x54>
  4197d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4197de:	xchg   ax,ax
  4197e0:	add    rbp,0x1
  4197e4:	mov    rax,rbp
  4197e7:	and    rax,r13
  4197ea:	mov    rbx,QWORD PTR [r12+rax*8]
  4197ee:	cmp    rbx,0x2
  4197f2:	je     4197e0 <str_set_find_item@@Base+0x50>
  4197f4:	test   rbx,rbx
  4197f7:	je     41980d <str_set_find_item@@Base+0x7d>
  4197f9:	mov    rdi,r15
  4197fc:	mov    rsi,rbx
  4197ff:	mov    rdx,r14
  419802:	call   406060 <strncmp@plt>
  419807:	test   eax,eax
  419809:	jne    4197e0 <str_set_find_item@@Base+0x50>
  41980b:	jmp    41980f <str_set_find_item@@Base+0x7f>
  41980d:	xor    ebx,ebx
  41980f:	mov    rax,rbx
  419812:	add    rsp,0x8
  419816:	pop    rbx
  419817:	pop    r12
  419819:	pop    r13
  41981b:	pop    r14
  41981d:	pop    r15
  41981f:	pop    rbp
  419820:	ret    
  419821:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41982b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419830 <str_set_remove@@Base>:
  419830:	push   rbp
  419831:	push   r15
  419833:	push   r14
  419835:	push   r13
  419837:	push   r12
  419839:	push   rbx
  41983a:	sub    rsp,0x18
  41983e:	mov    r13,QWORD PTR [rdi]
  419841:	test   r13,r13
  419844:	je     4198c2 <str_set_remove@@Base+0x92>
  419846:	mov    rax,rdx
  419849:	mov    QWORD PTR [rsp],rdi
  41984d:	mov    rbp,QWORD PTR [rdi+0x18]
  419851:	add    rbp,0xffffffffffffffff
  419855:	lea    rcx,[rsp+0x10]
  41985a:	mov    edx,0x2f693b52
  41985f:	mov    QWORD PTR [rsp+0x8],rsi
  419864:	mov    rdi,rsi
  419867:	mov    r12,rax
  41986a:	mov    rsi,rax
  41986d:	call   42cee0 <cmetrohash64_1@@Base>
  419872:	mov    r15d,DWORD PTR [rsp+0x10]
  419877:	jmp    419884 <str_set_remove@@Base+0x54>
  419879:	nop    DWORD PTR [rax+0x0]
  419880:	add    r15,0x1
  419884:	mov    r14,r15
  419887:	and    r14,rbp
  41988a:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41988f:	cmp    rbx,0x2
  419893:	je     419880 <str_set_remove@@Base+0x50>
  419895:	test   rbx,rbx
  419898:	je     4198c2 <str_set_remove@@Base+0x92>
  41989a:	mov    rdi,QWORD PTR [rsp+0x8]
  41989f:	mov    rsi,rbx
  4198a2:	mov    rdx,r12
  4198a5:	call   406060 <strncmp@plt>
  4198aa:	test   eax,eax
  4198ac:	jne    419880 <str_set_remove@@Base+0x50>
  4198ae:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  4198b7:	mov    rax,QWORD PTR [rsp]
  4198bb:	add    QWORD PTR [rax+0x10],0xffffffffffffffff
  4198c0:	jmp    4198c4 <str_set_remove@@Base+0x94>
  4198c2:	xor    ebx,ebx
  4198c4:	mov    rax,rbx
  4198c7:	add    rsp,0x18
  4198cb:	pop    rbx
  4198cc:	pop    r12
  4198ce:	pop    r13
  4198d0:	pop    r14
  4198d2:	pop    r15
  4198d4:	pop    rbp
  4198d5:	ret    
  4198d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004198e0 <str_set_remove_item@@Base>:
  4198e0:	push   rbp
  4198e1:	push   r15
  4198e3:	push   r14
  4198e5:	push   r13
  4198e7:	push   r12
  4198e9:	push   rbx
  4198ea:	sub    rsp,0x18
  4198ee:	mov    r14,rsi
  4198f1:	mov    rbx,rdi
  4198f4:	mov    rdi,rsi
  4198f7:	call   4060d0 <strlen@plt>
  4198fc:	mov    r13,QWORD PTR [rbx]
  4198ff:	test   r13,r13
  419902:	je     419982 <str_set_remove_item@@Base+0xa2>
  419904:	mov    QWORD PTR [rsp],rbx
  419908:	mov    rbp,QWORD PTR [rbx+0x18]
  41990c:	add    rbp,0xffffffffffffffff
  419910:	lea    rcx,[rsp+0x10]
  419915:	mov    edx,0x2f693b52
  41991a:	mov    QWORD PTR [rsp+0x8],r14
  41991f:	mov    rdi,r14
  419922:	mov    r12,rax
  419925:	mov    rsi,rax
  419928:	call   42cee0 <cmetrohash64_1@@Base>
  41992d:	mov    r15d,DWORD PTR [rsp+0x10]
  419932:	jmp    419944 <str_set_remove_item@@Base+0x64>
  419934:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41993e:	xchg   ax,ax
  419940:	add    r15,0x1
  419944:	mov    r14,r15
  419947:	and    r14,rbp
  41994a:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41994f:	cmp    rbx,0x2
  419953:	je     419940 <str_set_remove_item@@Base+0x60>
  419955:	test   rbx,rbx
  419958:	je     419982 <str_set_remove_item@@Base+0xa2>
  41995a:	mov    rdi,QWORD PTR [rsp+0x8]
  41995f:	mov    rsi,rbx
  419962:	mov    rdx,r12
  419965:	call   406060 <strncmp@plt>
  41996a:	test   eax,eax
  41996c:	jne    419940 <str_set_remove_item@@Base+0x60>
  41996e:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  419977:	mov    rax,QWORD PTR [rsp]
  41997b:	add    QWORD PTR [rax+0x10],0xffffffffffffffff
  419980:	jmp    419984 <str_set_remove_item@@Base+0xa4>
  419982:	xor    ebx,ebx
  419984:	mov    rax,rbx
  419987:	add    rsp,0x18
  41998b:	pop    rbx
  41998c:	pop    r12
  41998e:	pop    r13
  419990:	pop    r14
  419992:	pop    r15
  419994:	pop    rbp
  419995:	ret    
  419996:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004199a0 <str_set_visit@@Base>:
  4199a0:	push   r15
  4199a2:	push   r14
  4199a4:	push   r13
  4199a6:	push   r12
  4199a8:	push   rbx
  4199a9:	mov    rax,QWORD PTR [rdi+0x18]
  4199ad:	test   rax,rax
  4199b0:	je     4199e6 <str_set_visit@@Base+0x46>
  4199b2:	mov    r14,rdx
  4199b5:	mov    r15,rsi
  4199b8:	mov    r12,rdi
  4199bb:	mov    r13,QWORD PTR [rdi]
  4199be:	xor    ebx,ebx
  4199c0:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  4199c5:	mov    rcx,rsi
  4199c8:	or     rcx,0x2
  4199cc:	cmp    rcx,0x2
  4199d0:	je     4199dd <str_set_visit@@Base+0x3d>
  4199d2:	mov    rdi,r14
  4199d5:	call   r15
  4199d8:	mov    rax,QWORD PTR [r12+0x18]
  4199dd:	add    rbx,0x1
  4199e1:	cmp    rbx,rax
  4199e4:	jb     4199c0 <str_set_visit@@Base+0x20>
  4199e6:	pop    rbx
  4199e7:	pop    r12
  4199e9:	pop    r13
  4199eb:	pop    r14
  4199ed:	pop    r15
  4199ef:	ret    

00000000004199f0 <ptr_set_clear@@Base>:
  4199f0:	push   rbx
  4199f1:	mov    rbx,rdi
  4199f4:	mov    rdi,QWORD PTR [rdi]
  4199f7:	test   rdi,rdi
  4199fa:	je     419a01 <ptr_set_clear@@Base+0x11>
  4199fc:	call   406040 <free@plt>
  419a01:	vxorps xmm0,xmm0,xmm0
  419a05:	vmovups YMMWORD PTR [rbx],ymm0
  419a09:	pop    rbx
  419a0a:	vzeroupper 
  419a0d:	ret    
  419a0e:	xchg   ax,ax

0000000000419a10 <ptr_set_destroy@@Base>:
  419a10:	push   r15
  419a12:	push   r14
  419a14:	push   r13
  419a16:	push   r12
  419a18:	push   rbx
  419a19:	mov    r12,rdi
  419a1c:	test   rsi,rsi
  419a1f:	je     419a66 <ptr_set_destroy@@Base+0x56>
  419a21:	mov    rax,QWORD PTR [r12+0x18]
  419a26:	test   rax,rax
  419a29:	je     419a66 <ptr_set_destroy@@Base+0x56>
  419a2b:	mov    r14,rdx
  419a2e:	mov    r15,rsi
  419a31:	mov    r13,QWORD PTR [r12]
  419a35:	xor    ebx,ebx
  419a37:	nop    WORD PTR [rax+rax*1+0x0]
  419a40:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  419a45:	mov    rcx,rsi
  419a48:	or     rcx,0x2
  419a4c:	cmp    rcx,0x2
  419a50:	je     419a5d <ptr_set_destroy@@Base+0x4d>
  419a52:	mov    rdi,r14
  419a55:	call   r15
  419a58:	mov    rax,QWORD PTR [r12+0x18]
  419a5d:	add    rbx,0x1
  419a61:	cmp    rbx,rax
  419a64:	jb     419a40 <ptr_set_destroy@@Base+0x30>
  419a66:	mov    rdi,QWORD PTR [r12]
  419a6a:	test   rdi,rdi
  419a6d:	je     419a74 <ptr_set_destroy@@Base+0x64>
  419a6f:	call   406040 <free@plt>
  419a74:	vxorps xmm0,xmm0,xmm0
  419a78:	vmovups YMMWORD PTR [r12],ymm0
  419a7e:	pop    rbx
  419a7f:	pop    r12
  419a81:	pop    r13
  419a83:	pop    r14
  419a85:	pop    r15
  419a87:	vzeroupper 
  419a8a:	ret    
  419a8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419a90 <ptr_set_init@@Base>:
  419a90:	push   r14
  419a92:	push   rbx
  419a93:	push   rax
  419a94:	mov    r14,rdi
  419a97:	mov    eax,0x4
  419a9c:	nop    DWORD PTR [rax+0x0]
  419aa0:	mov    rbx,rax
  419aa3:	imul   rcx,rax,0xb3
  419aaa:	shr    rcx,0x8
  419aae:	lea    rax,[rax+rax*1]
  419ab2:	cmp    rcx,rsi
  419ab5:	jb     419aa0 <ptr_set_init@@Base+0x10>
  419ab7:	mov    esi,0x8
  419abc:	mov    rdi,rbx
  419abf:	call   406150 <calloc@plt>
  419ac4:	mov    QWORD PTR [r14],rax
  419ac7:	test   rax,rax
  419aca:	je     419ade <ptr_set_init@@Base+0x4e>
  419acc:	vxorps xmm0,xmm0,xmm0
  419ad0:	vmovups XMMWORD PTR [r14+0x8],xmm0
  419ad6:	mov    QWORD PTR [r14+0x18],rbx
  419ada:	xor    eax,eax
  419adc:	jmp    419ae3 <ptr_set_init@@Base+0x53>
  419ade:	mov    eax,0xffffffff
  419ae3:	add    rsp,0x8
  419ae7:	pop    rbx
  419ae8:	pop    r14
  419aea:	ret    
  419aeb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419af0 <ptr_set_resize@@Base>:
  419af0:	jmp    419b00 <ptr_set_resize@@Base+0x10>
  419af2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419afc:	nop    DWORD PTR [rax+0x0]
  419b00:	push   r15
  419b02:	push   r14
  419b04:	push   r12
  419b06:	push   rbx
  419b07:	sub    rsp,0x28
  419b0b:	mov    r14,rdi
  419b0e:	mov    r12,QWORD PTR [rdi]
  419b11:	mov    rax,QWORD PTR [rdi+0x10]
  419b15:	cmp    rax,rsi
  419b18:	cmova  rsi,rax
  419b1c:	mov    eax,0x4
  419b21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  419b30:	mov    rbx,rax
  419b33:	imul   rcx,rax,0xb3
  419b3a:	shr    rcx,0x8
  419b3e:	lea    rax,[rax+rax*1]
  419b42:	cmp    rcx,rsi
  419b45:	jb     419b30 <ptr_set_resize@@Base+0x40>
  419b47:	mov    esi,0x8
  419b4c:	mov    rdi,rbx
  419b4f:	call   406150 <calloc@plt>
  419b54:	mov    QWORD PTR [rsp+0x8],rax
  419b59:	test   rax,rax
  419b5c:	je     419bcd <ptr_set_resize@@Base+0xdd>
  419b5e:	vxorps xmm0,xmm0,xmm0
  419b62:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  419b68:	mov    QWORD PTR [rsp+0x20],rbx
  419b6d:	mov    rax,QWORD PTR [r14+0x18]
  419b71:	test   rax,rax
  419b74:	je     419bb1 <ptr_set_resize@@Base+0xc1>
  419b76:	xor    ebx,ebx
  419b78:	lea    r15,[rsp+0x8]
  419b7d:	nop    DWORD PTR [rax]
  419b80:	mov    rsi,QWORD PTR [r12+rbx*8]
  419b84:	mov    rcx,rsi
  419b87:	or     rcx,0x2
  419b8b:	cmp    rcx,0x2
  419b8f:	je     419ba5 <ptr_set_resize@@Base+0xb5>
  419b91:	mov    ecx,0x3
  419b96:	mov    rdi,r15
  419b99:	mov    rdx,rsi
  419b9c:	call   419c00 <ptr_set_insert@@Base+0x10>
  419ba1:	mov    rax,QWORD PTR [r14+0x18]
  419ba5:	add    rbx,0x1
  419ba9:	cmp    rbx,rax
  419bac:	jb     419b80 <ptr_set_resize@@Base+0x90>
  419bae:	mov    r12,QWORD PTR [r14]
  419bb1:	test   r12,r12
  419bb4:	je     419bbe <ptr_set_resize@@Base+0xce>
  419bb6:	mov    rdi,r12
  419bb9:	call   406040 <free@plt>
  419bbe:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  419bc4:	vmovups YMMWORD PTR [r14],ymm0
  419bc9:	xor    eax,eax
  419bcb:	jmp    419bd2 <ptr_set_resize@@Base+0xe2>
  419bcd:	mov    eax,0xffffffff
  419bd2:	add    rsp,0x28
  419bd6:	pop    rbx
  419bd7:	pop    r12
  419bd9:	pop    r14
  419bdb:	pop    r15
  419bdd:	vzeroupper 
  419be0:	ret    
  419be1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419beb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419bf0 <ptr_set_insert@@Base>:
  419bf0:	mov    rdx,rcx
  419bf3:	mov    ecx,r8d
  419bf6:	jmp    419c00 <ptr_set_insert@@Base+0x10>
  419bf8:	nop    DWORD PTR [rax+rax*1+0x0]
  419c00:	push   rbp
  419c01:	push   r15
  419c03:	push   r14
  419c05:	push   r13
  419c07:	push   r12
  419c09:	push   rbx
  419c0a:	sub    rsp,0x18
  419c0e:	cmp    rdx,0x2
  419c12:	je     419d44 <ptr_set_insert@@Base+0x154>
  419c18:	mov    r14,rdx
  419c1b:	cmp    rdx,0x1
  419c1f:	je     419d63 <ptr_set_insert@@Base+0x173>
  419c25:	test   r14,r14
  419c28:	je     419d82 <ptr_set_insert@@Base+0x192>
  419c2e:	mov    r12d,ecx
  419c31:	mov    r13,rsi
  419c34:	mov    r15,rdi
  419c37:	mov    rsi,QWORD PTR [rdi+0x10]
  419c3b:	mov    rbp,QWORD PTR [rdi+0x18]
  419c3f:	imul   rax,rbp,0xb3
  419c46:	shr    rax,0x8
  419c4a:	cmp    rsi,rax
  419c4d:	jb     419c66 <ptr_set_insert@@Base+0x76>
  419c4f:	add    rsi,rsi
  419c52:	mov    rdi,r15
  419c55:	call   419b00 <ptr_set_resize@@Base+0x10>
  419c5a:	test   eax,eax
  419c5c:	jne    419da1 <ptr_set_insert@@Base+0x1b1>
  419c62:	mov    rbp,QWORD PTR [r15+0x18]
  419c66:	mov    rbx,QWORD PTR [r15]
  419c69:	add    rbp,0xffffffffffffffff
  419c6d:	mov    QWORD PTR [rsp+0x8],r13
  419c72:	lea    rdi,[rsp+0x8]
  419c77:	lea    rcx,[rsp+0x10]
  419c7c:	mov    esi,0x8
  419c81:	mov    edx,0x2f693b52
  419c86:	call   42cee0 <cmetrohash64_1@@Base>
  419c8b:	mov    rdx,QWORD PTR [rsp+0x10]
  419c90:	mov    eax,edx
  419c92:	mov    ecx,ebp
  419c94:	and    ecx,edx
  419c96:	mov    edx,r12d
  419c99:	or     edx,0x1
  419c9c:	cmp    edx,0x3
  419c9f:	jne    419cce <ptr_set_insert@@Base+0xde>
  419ca1:	add    QWORD PTR [r15+0x10],0x1
  419ca6:	jmp    419cb6 <ptr_set_insert@@Base+0xc6>
  419ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  419cb0:	mov    rcx,rax
  419cb3:	and    rcx,rbp
  419cb6:	add    rax,0x1
  419cba:	mov    rdx,QWORD PTR [rbx+rcx*8]
  419cbe:	or     rdx,0x2
  419cc2:	cmp    rdx,0x2
  419cc6:	jne    419cb0 <ptr_set_insert@@Base+0xc0>
  419cc8:	lea    rsi,[rbx+rcx*8]
  419ccc:	jmp    419d25 <ptr_set_insert@@Base+0x135>
  419cce:	add    rax,0x1
  419cd2:	xor    edx,edx
  419cd4:	jmp    419cea <ptr_set_insert@@Base+0xfa>
  419cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419ce0:	mov    rcx,rax
  419ce3:	and    rcx,rbp
  419ce6:	add    rax,0x1
  419cea:	lea    rsi,[rbx+rcx*8]
  419cee:	mov    rcx,QWORD PTR [rbx+rcx*8]
  419cf2:	cmp    rcx,0x2
  419cf6:	je     419d10 <ptr_set_insert@@Base+0x120>
  419cf8:	test   rcx,rcx
  419cfb:	je     419d19 <ptr_set_insert@@Base+0x129>
  419cfd:	cmp    rcx,r13
  419d00:	jne    419ce0 <ptr_set_insert@@Base+0xf0>
  419d02:	jmp    419d3d <ptr_set_insert@@Base+0x14d>
  419d04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419d0e:	xchg   ax,ax
  419d10:	test   rdx,rdx
  419d13:	cmove  rdx,rsi
  419d17:	jmp    419ce0 <ptr_set_insert@@Base+0xf0>
  419d19:	test   rdx,rdx
  419d1c:	cmovne rsi,rdx
  419d20:	add    QWORD PTR [r15+0x10],0x1
  419d25:	xor    r13d,r13d
  419d28:	mov    QWORD PTR [rsi],r14
  419d2b:	mov    rax,r13
  419d2e:	add    rsp,0x18
  419d32:	pop    rbx
  419d33:	pop    r12
  419d35:	pop    r13
  419d37:	pop    r14
  419d39:	pop    r15
  419d3b:	pop    rbp
  419d3c:	ret    
  419d3d:	test   r12d,r12d
  419d40:	jne    419d2b <ptr_set_insert@@Base+0x13b>
  419d42:	jmp    419d28 <ptr_set_insert@@Base+0x138>
  419d44:	lea    rdi,[rip+0x2e110]        # 447e5b <str_set_deleted@@Base+0xd3>
  419d4b:	lea    rsi,[rip+0x2e055]        # 447da7 <str_set_deleted@@Base+0x1f>
  419d52:	lea    rcx,[rip+0x2e0b8]        # 447e11 <str_set_deleted@@Base+0x89>
  419d59:	mov    edx,0x73
  419d5e:	call   406100 <__assert_fail@plt>
  419d63:	lea    rdi,[rip+0x2e108]        # 447e72 <str_set_deleted@@Base+0xea>
  419d6a:	lea    rsi,[rip+0x2e036]        # 447da7 <str_set_deleted@@Base+0x1f>
  419d71:	lea    rcx,[rip+0x2e099]        # 447e11 <str_set_deleted@@Base+0x89>
  419d78:	mov    edx,0x74
  419d7d:	call   406100 <__assert_fail@plt>
  419d82:	lea    rdi,[rip+0x2e007]        # 447d90 <str_set_deleted@@Base+0x8>
  419d89:	lea    rsi,[rip+0x2e017]        # 447da7 <str_set_deleted@@Base+0x1f>
  419d90:	lea    rcx,[rip+0x2e07a]        # 447e11 <str_set_deleted@@Base+0x89>
  419d97:	mov    edx,0x72
  419d9c:	call   406100 <__assert_fail@plt>
  419da1:	mov    rax,QWORD PTR [rip+0x39250]        # 452ff8 <stderr@GLIBC_2.2.5>
  419da8:	mov    rdi,QWORD PTR [rax]
  419dab:	lea    rsi,[rip+0x2e0d5]        # 447e87 <str_set_deleted@@Base+0xff>
  419db2:	lea    rdx,[rip+0x2e0e5]        # 447e9e <str_set_deleted@@Base+0x116>
  419db9:	xor    eax,eax
  419dbb:	call   406180 <fprintf@plt>
  419dc0:	mov    edi,0x1
  419dc5:	call   406210 <exit@plt>
  419dca:	nop    WORD PTR [rax+rax*1+0x0]

0000000000419dd0 <ptr_set_insert_item@@Base>:
  419dd0:	mov    eax,edx
  419dd2:	mov    rdx,rsi
  419dd5:	mov    ecx,eax
  419dd7:	jmp    419c00 <ptr_set_insert@@Base+0x10>
  419ddc:	nop    DWORD PTR [rax+0x0]

0000000000419de0 <ptr_set_find@@Base>:
  419de0:	push   r15
  419de2:	push   r14
  419de4:	push   rbx
  419de5:	sub    rsp,0x10
  419de9:	mov    r15,QWORD PTR [rdi]
  419dec:	test   r15,r15
  419def:	je     419e40 <ptr_set_find@@Base+0x60>
  419df1:	mov    r14,rsi
  419df4:	mov    rbx,QWORD PTR [rdi+0x18]
  419df8:	add    rbx,0xffffffffffffffff
  419dfc:	mov    QWORD PTR [rsp],rsi
  419e00:	mov    rdi,rsp
  419e03:	lea    rcx,[rsp+0x8]
  419e08:	mov    esi,0x8
  419e0d:	mov    edx,0x2f693b52
  419e12:	call   42cee0 <cmetrohash64_1@@Base>
  419e17:	mov    eax,DWORD PTR [rsp+0x8]
  419e1b:	jmp    419e24 <ptr_set_find@@Base+0x44>
  419e1d:	nop    DWORD PTR [rax]
  419e20:	add    rax,0x1
  419e24:	mov    rcx,rax
  419e27:	and    rcx,rbx
  419e2a:	mov    rcx,QWORD PTR [r15+rcx*8]
  419e2e:	cmp    rcx,0x2
  419e32:	je     419e20 <ptr_set_find@@Base+0x40>
  419e34:	test   rcx,rcx
  419e37:	je     419e40 <ptr_set_find@@Base+0x60>
  419e39:	cmp    rcx,r14
  419e3c:	jne    419e20 <ptr_set_find@@Base+0x40>
  419e3e:	jmp    419e43 <ptr_set_find@@Base+0x63>
  419e40:	xor    r14d,r14d
  419e43:	mov    rax,r14
  419e46:	add    rsp,0x10
  419e4a:	pop    rbx
  419e4b:	pop    r14
  419e4d:	pop    r15
  419e4f:	ret    

0000000000419e50 <ptr_set_find_item@@Base>:
  419e50:	push   r15
  419e52:	push   r14
  419e54:	push   rbx
  419e55:	sub    rsp,0x10
  419e59:	mov    r15,QWORD PTR [rdi]
  419e5c:	test   r15,r15
  419e5f:	je     419eb0 <ptr_set_find_item@@Base+0x60>
  419e61:	mov    r14,rsi
  419e64:	mov    rbx,QWORD PTR [rdi+0x18]
  419e68:	add    rbx,0xffffffffffffffff
  419e6c:	mov    QWORD PTR [rsp],rsi
  419e70:	mov    rdi,rsp
  419e73:	lea    rcx,[rsp+0x8]
  419e78:	mov    esi,0x8
  419e7d:	mov    edx,0x2f693b52
  419e82:	call   42cee0 <cmetrohash64_1@@Base>
  419e87:	mov    eax,DWORD PTR [rsp+0x8]
  419e8b:	jmp    419e94 <ptr_set_find_item@@Base+0x44>
  419e8d:	nop    DWORD PTR [rax]
  419e90:	add    rax,0x1
  419e94:	mov    rcx,rax
  419e97:	and    rcx,rbx
  419e9a:	mov    rcx,QWORD PTR [r15+rcx*8]
  419e9e:	cmp    rcx,0x2
  419ea2:	je     419e90 <ptr_set_find_item@@Base+0x40>
  419ea4:	test   rcx,rcx
  419ea7:	je     419eb0 <ptr_set_find_item@@Base+0x60>
  419ea9:	cmp    rcx,r14
  419eac:	jne    419e90 <ptr_set_find_item@@Base+0x40>
  419eae:	jmp    419eb3 <ptr_set_find_item@@Base+0x63>
  419eb0:	xor    r14d,r14d
  419eb3:	mov    rax,r14
  419eb6:	add    rsp,0x10
  419eba:	pop    rbx
  419ebb:	pop    r14
  419ebd:	pop    r15
  419ebf:	ret    

0000000000419ec0 <ptr_set_remove@@Base>:
  419ec0:	push   r15
  419ec2:	push   r14
  419ec4:	push   r12
  419ec6:	push   rbx
  419ec7:	sub    rsp,0x18
  419ecb:	mov    r12,QWORD PTR [rdi]
  419ece:	test   r12,r12
  419ed1:	je     419f3d <ptr_set_remove@@Base+0x7d>
  419ed3:	mov    r15,rsi
  419ed6:	mov    r14,rdi
  419ed9:	mov    rbx,QWORD PTR [rdi+0x18]
  419edd:	add    rbx,0xffffffffffffffff
  419ee1:	mov    QWORD PTR [rsp+0x8],rsi
  419ee6:	lea    rdi,[rsp+0x8]
  419eeb:	lea    rcx,[rsp+0x10]
  419ef0:	mov    esi,0x8
  419ef5:	mov    edx,0x2f693b52
  419efa:	call   42cee0 <cmetrohash64_1@@Base>
  419eff:	mov    eax,DWORD PTR [rsp+0x10]
  419f03:	jmp    419f14 <ptr_set_remove@@Base+0x54>
  419f05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419f0f:	nop
  419f10:	add    rax,0x1
  419f14:	mov    rcx,rax
  419f17:	and    rcx,rbx
  419f1a:	mov    rdx,QWORD PTR [r12+rcx*8]
  419f1e:	cmp    rdx,0x2
  419f22:	je     419f10 <ptr_set_remove@@Base+0x50>
  419f24:	test   rdx,rdx
  419f27:	je     419f3d <ptr_set_remove@@Base+0x7d>
  419f29:	cmp    rdx,r15
  419f2c:	jne    419f10 <ptr_set_remove@@Base+0x50>
  419f2e:	mov    QWORD PTR [r12+rcx*8],0x2
  419f36:	add    QWORD PTR [r14+0x10],0xffffffffffffffff
  419f3b:	jmp    419f40 <ptr_set_remove@@Base+0x80>
  419f3d:	xor    r15d,r15d
  419f40:	mov    rax,r15
  419f43:	add    rsp,0x18
  419f47:	pop    rbx
  419f48:	pop    r12
  419f4a:	pop    r14
  419f4c:	pop    r15
  419f4e:	ret    
  419f4f:	nop

0000000000419f50 <ptr_set_remove_item@@Base>:
  419f50:	push   r15
  419f52:	push   r14
  419f54:	push   r12
  419f56:	push   rbx
  419f57:	sub    rsp,0x18
  419f5b:	mov    r12,QWORD PTR [rdi]
  419f5e:	test   r12,r12
  419f61:	je     419fcd <ptr_set_remove_item@@Base+0x7d>
  419f63:	mov    r15,rsi
  419f66:	mov    r14,rdi
  419f69:	mov    rbx,QWORD PTR [rdi+0x18]
  419f6d:	add    rbx,0xffffffffffffffff
  419f71:	mov    QWORD PTR [rsp+0x8],rsi
  419f76:	lea    rdi,[rsp+0x8]
  419f7b:	lea    rcx,[rsp+0x10]
  419f80:	mov    esi,0x8
  419f85:	mov    edx,0x2f693b52
  419f8a:	call   42cee0 <cmetrohash64_1@@Base>
  419f8f:	mov    eax,DWORD PTR [rsp+0x10]
  419f93:	jmp    419fa4 <ptr_set_remove_item@@Base+0x54>
  419f95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419f9f:	nop
  419fa0:	add    rax,0x1
  419fa4:	mov    rcx,rax
  419fa7:	and    rcx,rbx
  419faa:	mov    rdx,QWORD PTR [r12+rcx*8]
  419fae:	cmp    rdx,0x2
  419fb2:	je     419fa0 <ptr_set_remove_item@@Base+0x50>
  419fb4:	test   rdx,rdx
  419fb7:	je     419fcd <ptr_set_remove_item@@Base+0x7d>
  419fb9:	cmp    rdx,r15
  419fbc:	jne    419fa0 <ptr_set_remove_item@@Base+0x50>
  419fbe:	mov    QWORD PTR [r12+rcx*8],0x2
  419fc6:	add    QWORD PTR [r14+0x10],0xffffffffffffffff
  419fcb:	jmp    419fd0 <ptr_set_remove_item@@Base+0x80>
  419fcd:	xor    r15d,r15d
  419fd0:	mov    rax,r15
  419fd3:	add    rsp,0x18
  419fd7:	pop    rbx
  419fd8:	pop    r12
  419fda:	pop    r14
  419fdc:	pop    r15
  419fde:	ret    
  419fdf:	nop

0000000000419fe0 <ptr_set_visit@@Base>:
  419fe0:	push   r15
  419fe2:	push   r14
  419fe4:	push   r13
  419fe6:	push   r12
  419fe8:	push   rbx
  419fe9:	mov    rax,QWORD PTR [rdi+0x18]
  419fed:	test   rax,rax
  419ff0:	je     41a026 <ptr_set_visit@@Base+0x46>
  419ff2:	mov    r14,rdx
  419ff5:	mov    r15,rsi
  419ff8:	mov    r12,rdi
  419ffb:	mov    r13,QWORD PTR [rdi]
  419ffe:	xor    ebx,ebx
  41a000:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41a005:	mov    rcx,rsi
  41a008:	or     rcx,0x2
  41a00c:	cmp    rcx,0x2
  41a010:	je     41a01d <ptr_set_visit@@Base+0x3d>
  41a012:	mov    rdi,r14
  41a015:	call   r15
  41a018:	mov    rax,QWORD PTR [r12+0x18]
  41a01d:	add    rbx,0x1
  41a021:	cmp    rbx,rax
  41a024:	jb     41a000 <ptr_set_visit@@Base+0x20>
  41a026:	pop    rbx
  41a027:	pop    r12
  41a029:	pop    r13
  41a02b:	pop    r14
  41a02d:	pop    r15
  41a02f:	ret    

000000000041a030 <fb_symbol_table_clear@@Base>:
  41a030:	push   rbx
  41a031:	mov    rbx,rdi
  41a034:	mov    rdi,QWORD PTR [rdi]
  41a037:	test   rdi,rdi
  41a03a:	je     41a041 <fb_symbol_table_clear@@Base+0x11>
  41a03c:	call   406040 <free@plt>
  41a041:	vxorps xmm0,xmm0,xmm0
  41a045:	vmovups YMMWORD PTR [rbx],ymm0
  41a049:	pop    rbx
  41a04a:	vzeroupper 
  41a04d:	ret    
  41a04e:	xchg   ax,ax

000000000041a050 <fb_symbol_table_destroy@@Base>:
  41a050:	push   r15
  41a052:	push   r14
  41a054:	push   r13
  41a056:	push   r12
  41a058:	push   rbx
  41a059:	mov    r12,rdi
  41a05c:	test   rsi,rsi
  41a05f:	je     41a0a6 <fb_symbol_table_destroy@@Base+0x56>
  41a061:	mov    rax,QWORD PTR [r12+0x18]
  41a066:	test   rax,rax
  41a069:	je     41a0a6 <fb_symbol_table_destroy@@Base+0x56>
  41a06b:	mov    r14,rdx
  41a06e:	mov    r15,rsi
  41a071:	mov    r13,QWORD PTR [r12]
  41a075:	xor    ebx,ebx
  41a077:	nop    WORD PTR [rax+rax*1+0x0]
  41a080:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41a085:	mov    rcx,rsi
  41a088:	or     rcx,0x2
  41a08c:	cmp    rcx,0x2
  41a090:	je     41a09d <fb_symbol_table_destroy@@Base+0x4d>
  41a092:	mov    rdi,r14
  41a095:	call   r15
  41a098:	mov    rax,QWORD PTR [r12+0x18]
  41a09d:	add    rbx,0x1
  41a0a1:	cmp    rbx,rax
  41a0a4:	jb     41a080 <fb_symbol_table_destroy@@Base+0x30>
  41a0a6:	mov    rdi,QWORD PTR [r12]
  41a0aa:	test   rdi,rdi
  41a0ad:	je     41a0b4 <fb_symbol_table_destroy@@Base+0x64>
  41a0af:	call   406040 <free@plt>
  41a0b4:	vxorps xmm0,xmm0,xmm0
  41a0b8:	vmovups YMMWORD PTR [r12],ymm0
  41a0be:	pop    rbx
  41a0bf:	pop    r12
  41a0c1:	pop    r13
  41a0c3:	pop    r14
  41a0c5:	pop    r15
  41a0c7:	vzeroupper 
  41a0ca:	ret    
  41a0cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a0d0 <fb_symbol_table_init@@Base>:
  41a0d0:	push   r14
  41a0d2:	push   rbx
  41a0d3:	push   rax
  41a0d4:	mov    r14,rdi
  41a0d7:	mov    eax,0x4
  41a0dc:	nop    DWORD PTR [rax+0x0]
  41a0e0:	mov    rbx,rax
  41a0e3:	imul   rcx,rax,0xb3
  41a0ea:	shr    rcx,0x8
  41a0ee:	lea    rax,[rax+rax*1]
  41a0f2:	cmp    rcx,rsi
  41a0f5:	jb     41a0e0 <fb_symbol_table_init@@Base+0x10>
  41a0f7:	mov    esi,0x8
  41a0fc:	mov    rdi,rbx
  41a0ff:	call   406150 <calloc@plt>
  41a104:	mov    QWORD PTR [r14],rax
  41a107:	test   rax,rax
  41a10a:	je     41a11e <fb_symbol_table_init@@Base+0x4e>
  41a10c:	vxorps xmm0,xmm0,xmm0
  41a110:	vmovups XMMWORD PTR [r14+0x8],xmm0
  41a116:	mov    QWORD PTR [r14+0x18],rbx
  41a11a:	xor    eax,eax
  41a11c:	jmp    41a123 <fb_symbol_table_init@@Base+0x53>
  41a11e:	mov    eax,0xffffffff
  41a123:	add    rsp,0x8
  41a127:	pop    rbx
  41a128:	pop    r14
  41a12a:	ret    
  41a12b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a130 <fb_symbol_table_resize@@Base>:
  41a130:	jmp    41a140 <fb_symbol_table_resize@@Base+0x10>
  41a132:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a13c:	nop    DWORD PTR [rax+0x0]
  41a140:	push   r15
  41a142:	push   r14
  41a144:	push   r12
  41a146:	push   rbx
  41a147:	sub    rsp,0x28
  41a14b:	mov    r14,rdi
  41a14e:	mov    r12,QWORD PTR [rdi]
  41a151:	mov    rax,QWORD PTR [rdi+0x10]
  41a155:	cmp    rax,rsi
  41a158:	cmova  rsi,rax
  41a15c:	mov    eax,0x4
  41a161:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a16b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a170:	mov    rbx,rax
  41a173:	imul   rcx,rax,0xb3
  41a17a:	shr    rcx,0x8
  41a17e:	lea    rax,[rax+rax*1]
  41a182:	cmp    rcx,rsi
  41a185:	jb     41a170 <fb_symbol_table_resize@@Base+0x40>
  41a187:	mov    esi,0x8
  41a18c:	mov    rdi,rbx
  41a18f:	call   406150 <calloc@plt>
  41a194:	mov    QWORD PTR [rsp+0x8],rax
  41a199:	test   rax,rax
  41a19c:	je     41a216 <fb_symbol_table_resize@@Base+0xe6>
  41a19e:	vxorps xmm0,xmm0,xmm0
  41a1a2:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  41a1a8:	mov    QWORD PTR [rsp+0x20],rbx
  41a1ad:	mov    rax,QWORD PTR [r14+0x18]
  41a1b1:	test   rax,rax
  41a1b4:	je     41a1fa <fb_symbol_table_resize@@Base+0xca>
  41a1b6:	xor    ebx,ebx
  41a1b8:	lea    r15,[rsp+0x8]
  41a1bd:	nop    DWORD PTR [rax]
  41a1c0:	mov    rcx,QWORD PTR [r12+rbx*8]
  41a1c4:	mov    rdx,rcx
  41a1c7:	or     rdx,0x2
  41a1cb:	cmp    rdx,0x2
  41a1cf:	je     41a1ee <fb_symbol_table_resize@@Base+0xbe>
  41a1d1:	mov    rax,QWORD PTR [rcx+0x8]
  41a1d5:	mov    rsi,QWORD PTR [rax]
  41a1d8:	mov    rdx,QWORD PTR [rax+0x8]
  41a1dc:	mov    r8d,0x3
  41a1e2:	mov    rdi,r15
  41a1e5:	call   41a240 <fb_symbol_table_insert@@Base+0x10>
  41a1ea:	mov    rax,QWORD PTR [r14+0x18]
  41a1ee:	add    rbx,0x1
  41a1f2:	cmp    rbx,rax
  41a1f5:	jb     41a1c0 <fb_symbol_table_resize@@Base+0x90>
  41a1f7:	mov    r12,QWORD PTR [r14]
  41a1fa:	test   r12,r12
  41a1fd:	je     41a207 <fb_symbol_table_resize@@Base+0xd7>
  41a1ff:	mov    rdi,r12
  41a202:	call   406040 <free@plt>
  41a207:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  41a20d:	vmovups YMMWORD PTR [r14],ymm0
  41a212:	xor    eax,eax
  41a214:	jmp    41a21b <fb_symbol_table_resize@@Base+0xeb>
  41a216:	mov    eax,0xffffffff
  41a21b:	add    rsp,0x28
  41a21f:	pop    rbx
  41a220:	pop    r12
  41a222:	pop    r14
  41a224:	pop    r15
  41a226:	vzeroupper 
  41a229:	ret    
  41a22a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a230 <fb_symbol_table_insert@@Base>:
  41a230:	jmp    41a240 <fb_symbol_table_insert@@Base+0x10>
  41a232:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a23c:	nop    DWORD PTR [rax+0x0]
  41a240:	push   rbp
  41a241:	push   r15
  41a243:	push   r14
  41a245:	push   r13
  41a247:	push   r12
  41a249:	push   rbx
  41a24a:	sub    rsp,0x38
  41a24e:	mov    QWORD PTR [rsp+0x20],rsi
  41a253:	cmp    rcx,0x2
  41a257:	je     41a3c5 <fb_symbol_table_insert@@Base+0x195>
  41a25d:	mov    r13,rcx
  41a260:	cmp    rcx,0x1
  41a264:	je     41a3e4 <fb_symbol_table_insert@@Base+0x1b4>
  41a26a:	test   r13,r13
  41a26d:	je     41a403 <fb_symbol_table_insert@@Base+0x1d3>
  41a273:	mov    rbp,rdx
  41a276:	mov    rbx,rdi
  41a279:	mov    DWORD PTR [rsp+0xc],r8d
  41a27e:	mov    rsi,QWORD PTR [rdi+0x10]
  41a282:	mov    r15,QWORD PTR [rdi+0x18]
  41a286:	imul   rax,r15,0xb3
  41a28d:	shr    rax,0x8
  41a291:	cmp    rsi,rax
  41a294:	mov    QWORD PTR [rsp+0x10],rdx
  41a299:	jb     41a2b7 <fb_symbol_table_insert@@Base+0x87>
  41a29b:	add    rsi,rsi
  41a29e:	mov    rdi,rbx
  41a2a1:	call   41a140 <fb_symbol_table_resize@@Base+0x10>
  41a2a6:	test   eax,eax
  41a2a8:	jne    41a422 <fb_symbol_table_insert@@Base+0x1f2>
  41a2ae:	mov    r15,QWORD PTR [rbx+0x18]
  41a2b2:	mov    rbp,QWORD PTR [rsp+0x10]
  41a2b7:	mov    r14,QWORD PTR [rbx]
  41a2ba:	add    r15,0xffffffffffffffff
  41a2be:	lea    rcx,[rsp+0x30]
  41a2c3:	mov    edx,0x2f693b52
  41a2c8:	mov    rdi,QWORD PTR [rsp+0x20]
  41a2cd:	mov    rsi,rbp
  41a2d0:	call   42cee0 <cmetrohash64_1@@Base>
  41a2d5:	mov    rcx,QWORD PTR [rsp+0x30]
  41a2da:	mov    r12d,ecx
  41a2dd:	mov    eax,r15d
  41a2e0:	and    eax,ecx
  41a2e2:	mov    ecx,DWORD PTR [rsp+0xc]
  41a2e6:	or     ecx,0x1
  41a2e9:	cmp    ecx,0x3
  41a2ec:	jne    41a323 <fb_symbol_table_insert@@Base+0xf3>
  41a2ee:	add    QWORD PTR [rbx+0x10],0x1
  41a2f3:	jmp    41a306 <fb_symbol_table_insert@@Base+0xd6>
  41a2f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a2ff:	nop
  41a300:	mov    rax,r12
  41a303:	and    rax,r15
  41a306:	add    r12,0x1
  41a30a:	mov    rcx,QWORD PTR [r14+rax*8]
  41a30e:	or     rcx,0x2
  41a312:	cmp    rcx,0x2
  41a316:	jne    41a300 <fb_symbol_table_insert@@Base+0xd0>
  41a318:	lea    rbp,[r14+rax*8]
  41a31c:	xor    ebx,ebx
  41a31e:	jmp    41a3a1 <fb_symbol_table_insert@@Base+0x171>
  41a323:	mov    QWORD PTR [rsp+0x28],rbx
  41a328:	mov    QWORD PTR [rsp+0x18],r13
  41a32d:	add    r12,0x1
  41a331:	xor    r13d,r13d
  41a334:	mov    rdx,QWORD PTR [rsp+0x10]
  41a339:	jmp    41a34a <fb_symbol_table_insert@@Base+0x11a>
  41a33b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a340:	mov    rax,r12
  41a343:	and    rax,r15
  41a346:	add    r12,0x1
  41a34a:	lea    rbp,[r14+rax*8]
  41a34e:	mov    rbx,QWORD PTR [r14+rax*8]
  41a352:	cmp    rbx,0x2
  41a356:	je     41a380 <fb_symbol_table_insert@@Base+0x150>
  41a358:	test   rbx,rbx
  41a35b:	je     41a389 <fb_symbol_table_insert@@Base+0x159>
  41a35d:	mov    rax,QWORD PTR [rbx+0x8]
  41a361:	cmp    QWORD PTR [rax+0x8],rdx
  41a365:	jne    41a340 <fb_symbol_table_insert@@Base+0x110>
  41a367:	mov    rsi,QWORD PTR [rax]
  41a36a:	mov    rdi,QWORD PTR [rsp+0x20]
  41a36f:	call   406140 <memcmp@plt>
  41a374:	mov    rdx,QWORD PTR [rsp+0x10]
  41a379:	test   eax,eax
  41a37b:	jne    41a340 <fb_symbol_table_insert@@Base+0x110>
  41a37d:	jmp    41a3b7 <fb_symbol_table_insert@@Base+0x187>
  41a37f:	nop
  41a380:	test   r13,r13
  41a383:	cmove  r13,rbp
  41a387:	jmp    41a340 <fb_symbol_table_insert@@Base+0x110>
  41a389:	test   r13,r13
  41a38c:	cmovne rbp,r13
  41a390:	mov    rax,QWORD PTR [rsp+0x28]
  41a395:	add    QWORD PTR [rax+0x10],0x1
  41a39a:	xor    ebx,ebx
  41a39c:	mov    r13,QWORD PTR [rsp+0x18]
  41a3a1:	mov    QWORD PTR [rbp+0x0],r13
  41a3a5:	mov    rax,rbx
  41a3a8:	add    rsp,0x38
  41a3ac:	pop    rbx
  41a3ad:	pop    r12
  41a3af:	pop    r13
  41a3b1:	pop    r14
  41a3b3:	pop    r15
  41a3b5:	pop    rbp
  41a3b6:	ret    
  41a3b7:	cmp    DWORD PTR [rsp+0xc],0x0
  41a3bc:	mov    r13,QWORD PTR [rsp+0x18]
  41a3c1:	jne    41a3a5 <fb_symbol_table_insert@@Base+0x175>
  41a3c3:	jmp    41a3a1 <fb_symbol_table_insert@@Base+0x171>
  41a3c5:	lea    rdi,[rip+0x2da8f]        # 447e5b <str_set_deleted@@Base+0xd3>
  41a3cc:	lea    rsi,[rip+0x2d9d4]        # 447da7 <str_set_deleted@@Base+0x1f>
  41a3d3:	lea    rcx,[rip+0x2da37]        # 447e11 <str_set_deleted@@Base+0x89>
  41a3da:	mov    edx,0x73
  41a3df:	call   406100 <__assert_fail@plt>
  41a3e4:	lea    rdi,[rip+0x2da87]        # 447e72 <str_set_deleted@@Base+0xea>
  41a3eb:	lea    rsi,[rip+0x2d9b5]        # 447da7 <str_set_deleted@@Base+0x1f>
  41a3f2:	lea    rcx,[rip+0x2da18]        # 447e11 <str_set_deleted@@Base+0x89>
  41a3f9:	mov    edx,0x74
  41a3fe:	call   406100 <__assert_fail@plt>
  41a403:	lea    rdi,[rip+0x2d986]        # 447d90 <str_set_deleted@@Base+0x8>
  41a40a:	lea    rsi,[rip+0x2d996]        # 447da7 <str_set_deleted@@Base+0x1f>
  41a411:	lea    rcx,[rip+0x2d9f9]        # 447e11 <str_set_deleted@@Base+0x89>
  41a418:	mov    edx,0x72
  41a41d:	call   406100 <__assert_fail@plt>
  41a422:	mov    rax,QWORD PTR [rip+0x38bcf]        # 452ff8 <stderr@GLIBC_2.2.5>
  41a429:	mov    rdi,QWORD PTR [rax]
  41a42c:	lea    rsi,[rip+0x2da54]        # 447e87 <str_set_deleted@@Base+0xff>
  41a433:	lea    rdx,[rip+0x2da64]        # 447e9e <str_set_deleted@@Base+0x116>
  41a43a:	xor    eax,eax
  41a43c:	call   406180 <fprintf@plt>
  41a441:	mov    edi,0x1
  41a446:	call   406210 <exit@plt>
  41a44b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a450 <fb_symbol_table_insert_item@@Base>:
  41a450:	mov    eax,edx
  41a452:	mov    rcx,rsi
  41a455:	mov    rdx,QWORD PTR [rsi+0x8]
  41a459:	mov    rsi,QWORD PTR [rdx]
  41a45c:	mov    rdx,QWORD PTR [rdx+0x8]
  41a460:	mov    r8d,eax
  41a463:	jmp    41a240 <fb_symbol_table_insert@@Base+0x10>
  41a468:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a470 <fb_symbol_table_find@@Base>:
  41a470:	push   rbp
  41a471:	push   r15
  41a473:	push   r14
  41a475:	push   r13
  41a477:	push   r12
  41a479:	push   rbx
  41a47a:	push   rax
  41a47b:	mov    r12,QWORD PTR [rdi]
  41a47e:	test   r12,r12
  41a481:	je     41a4e7 <fb_symbol_table_find@@Base+0x77>
  41a483:	mov    r15,rdx
  41a486:	mov    r14,rsi
  41a489:	mov    r13,QWORD PTR [rdi+0x18]
  41a48d:	add    r13,0xffffffffffffffff
  41a491:	mov    rcx,rsp
  41a494:	mov    edx,0x2f693b52
  41a499:	mov    rdi,rsi
  41a49c:	mov    rsi,r15
  41a49f:	call   42cee0 <cmetrohash64_1@@Base>
  41a4a4:	mov    ebp,DWORD PTR [rsp]
  41a4a7:	jmp    41a4b4 <fb_symbol_table_find@@Base+0x44>
  41a4a9:	nop    DWORD PTR [rax+0x0]
  41a4b0:	add    rbp,0x1
  41a4b4:	mov    rax,rbp
  41a4b7:	and    rax,r13
  41a4ba:	mov    rbx,QWORD PTR [r12+rax*8]
  41a4be:	cmp    rbx,0x2
  41a4c2:	je     41a4b0 <fb_symbol_table_find@@Base+0x40>
  41a4c4:	test   rbx,rbx
  41a4c7:	je     41a4e7 <fb_symbol_table_find@@Base+0x77>
  41a4c9:	mov    rax,QWORD PTR [rbx+0x8]
  41a4cd:	cmp    QWORD PTR [rax+0x8],r15
  41a4d1:	jne    41a4b0 <fb_symbol_table_find@@Base+0x40>
  41a4d3:	mov    rsi,QWORD PTR [rax]
  41a4d6:	mov    rdi,r14
  41a4d9:	mov    rdx,r15
  41a4dc:	call   406140 <memcmp@plt>
  41a4e1:	test   eax,eax
  41a4e3:	jne    41a4b0 <fb_symbol_table_find@@Base+0x40>
  41a4e5:	jmp    41a4e9 <fb_symbol_table_find@@Base+0x79>
  41a4e7:	xor    ebx,ebx
  41a4e9:	mov    rax,rbx
  41a4ec:	add    rsp,0x8
  41a4f0:	pop    rbx
  41a4f1:	pop    r12
  41a4f3:	pop    r13
  41a4f5:	pop    r14
  41a4f7:	pop    r15
  41a4f9:	pop    rbp
  41a4fa:	ret    
  41a4fb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a500 <fb_symbol_table_find_item@@Base>:
  41a500:	push   rbp
  41a501:	push   r15
  41a503:	push   r14
  41a505:	push   r13
  41a507:	push   r12
  41a509:	push   rbx
  41a50a:	push   rax
  41a50b:	mov    r12,QWORD PTR [rdi]
  41a50e:	test   r12,r12
  41a511:	je     41a577 <fb_symbol_table_find_item@@Base+0x77>
  41a513:	mov    rax,QWORD PTR [rsi+0x8]
  41a517:	mov    r14,QWORD PTR [rax]
  41a51a:	mov    r15,QWORD PTR [rax+0x8]
  41a51e:	mov    r13,QWORD PTR [rdi+0x18]
  41a522:	add    r13,0xffffffffffffffff
  41a526:	mov    rcx,rsp
  41a529:	mov    edx,0x2f693b52
  41a52e:	mov    rdi,r14
  41a531:	mov    rsi,r15
  41a534:	call   42cee0 <cmetrohash64_1@@Base>
  41a539:	mov    ebp,DWORD PTR [rsp]
  41a53c:	jmp    41a544 <fb_symbol_table_find_item@@Base+0x44>
  41a53e:	xchg   ax,ax
  41a540:	add    rbp,0x1
  41a544:	mov    rax,rbp
  41a547:	and    rax,r13
  41a54a:	mov    rbx,QWORD PTR [r12+rax*8]
  41a54e:	cmp    rbx,0x2
  41a552:	je     41a540 <fb_symbol_table_find_item@@Base+0x40>
  41a554:	test   rbx,rbx
  41a557:	je     41a577 <fb_symbol_table_find_item@@Base+0x77>
  41a559:	mov    rax,QWORD PTR [rbx+0x8]
  41a55d:	cmp    QWORD PTR [rax+0x8],r15
  41a561:	jne    41a540 <fb_symbol_table_find_item@@Base+0x40>
  41a563:	mov    rsi,QWORD PTR [rax]
  41a566:	mov    rdi,r14
  41a569:	mov    rdx,r15
  41a56c:	call   406140 <memcmp@plt>
  41a571:	test   eax,eax
  41a573:	jne    41a540 <fb_symbol_table_find_item@@Base+0x40>
  41a575:	jmp    41a579 <fb_symbol_table_find_item@@Base+0x79>
  41a577:	xor    ebx,ebx
  41a579:	mov    rax,rbx
  41a57c:	add    rsp,0x8
  41a580:	pop    rbx
  41a581:	pop    r12
  41a583:	pop    r13
  41a585:	pop    r14
  41a587:	pop    r15
  41a589:	pop    rbp
  41a58a:	ret    
  41a58b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a590 <fb_symbol_table_remove@@Base>:
  41a590:	push   rbp
  41a591:	push   r15
  41a593:	push   r14
  41a595:	push   r13
  41a597:	push   r12
  41a599:	push   rbx
  41a59a:	sub    rsp,0x18
  41a59e:	mov    r13,QWORD PTR [rdi]
  41a5a1:	test   r13,r13
  41a5a4:	je     41a62c <fb_symbol_table_remove@@Base+0x9c>
  41a5aa:	mov    r12,rdx
  41a5ad:	mov    QWORD PTR [rsp],rdi
  41a5b1:	mov    rbp,QWORD PTR [rdi+0x18]
  41a5b5:	add    rbp,0xffffffffffffffff
  41a5b9:	lea    rcx,[rsp+0x10]
  41a5be:	mov    edx,0x2f693b52
  41a5c3:	mov    QWORD PTR [rsp+0x8],rsi
  41a5c8:	mov    rdi,rsi
  41a5cb:	mov    rsi,r12
  41a5ce:	call   42cee0 <cmetrohash64_1@@Base>
  41a5d3:	mov    r15d,DWORD PTR [rsp+0x10]
  41a5d8:	jmp    41a5e4 <fb_symbol_table_remove@@Base+0x54>
  41a5da:	nop    WORD PTR [rax+rax*1+0x0]
  41a5e0:	add    r15,0x1
  41a5e4:	mov    r14,r15
  41a5e7:	and    r14,rbp
  41a5ea:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41a5ef:	cmp    rbx,0x2
  41a5f3:	je     41a5e0 <fb_symbol_table_remove@@Base+0x50>
  41a5f5:	test   rbx,rbx
  41a5f8:	je     41a62c <fb_symbol_table_remove@@Base+0x9c>
  41a5fa:	mov    rax,QWORD PTR [rbx+0x8]
  41a5fe:	cmp    QWORD PTR [rax+0x8],r12
  41a602:	jne    41a5e0 <fb_symbol_table_remove@@Base+0x50>
  41a604:	mov    rsi,QWORD PTR [rax]
  41a607:	mov    rdi,QWORD PTR [rsp+0x8]
  41a60c:	mov    rdx,r12
  41a60f:	call   406140 <memcmp@plt>
  41a614:	test   eax,eax
  41a616:	jne    41a5e0 <fb_symbol_table_remove@@Base+0x50>
  41a618:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  41a621:	mov    rax,QWORD PTR [rsp]
  41a625:	add    QWORD PTR [rax+0x10],0xffffffffffffffff
  41a62a:	jmp    41a62e <fb_symbol_table_remove@@Base+0x9e>
  41a62c:	xor    ebx,ebx
  41a62e:	mov    rax,rbx
  41a631:	add    rsp,0x18
  41a635:	pop    rbx
  41a636:	pop    r12
  41a638:	pop    r13
  41a63a:	pop    r14
  41a63c:	pop    r15
  41a63e:	pop    rbp
  41a63f:	ret    

000000000041a640 <fb_symbol_table_remove_item@@Base>:
  41a640:	push   rbp
  41a641:	push   r15
  41a643:	push   r14
  41a645:	push   r13
  41a647:	push   r12
  41a649:	push   rbx
  41a64a:	sub    rsp,0x18
  41a64e:	mov    r13,QWORD PTR [rdi]
  41a651:	test   r13,r13
  41a654:	je     41a6ec <fb_symbol_table_remove_item@@Base+0xac>
  41a65a:	mov    rax,QWORD PTR [rsi+0x8]
  41a65e:	mov    rsi,QWORD PTR [rax]
  41a661:	mov    r12,QWORD PTR [rax+0x8]
  41a665:	mov    QWORD PTR [rsp],rdi
  41a669:	mov    rbp,QWORD PTR [rdi+0x18]
  41a66d:	add    rbp,0xffffffffffffffff
  41a671:	lea    rcx,[rsp+0x10]
  41a676:	mov    edx,0x2f693b52
  41a67b:	mov    QWORD PTR [rsp+0x8],rsi
  41a680:	mov    rdi,rsi
  41a683:	mov    rsi,r12
  41a686:	call   42cee0 <cmetrohash64_1@@Base>
  41a68b:	mov    r15d,DWORD PTR [rsp+0x10]
  41a690:	jmp    41a6a4 <fb_symbol_table_remove_item@@Base+0x64>
  41a692:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a69c:	nop    DWORD PTR [rax+0x0]
  41a6a0:	add    r15,0x1
  41a6a4:	mov    r14,r15
  41a6a7:	and    r14,rbp
  41a6aa:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41a6af:	cmp    rbx,0x2
  41a6b3:	je     41a6a0 <fb_symbol_table_remove_item@@Base+0x60>
  41a6b5:	test   rbx,rbx
  41a6b8:	je     41a6ec <fb_symbol_table_remove_item@@Base+0xac>
  41a6ba:	mov    rax,QWORD PTR [rbx+0x8]
  41a6be:	cmp    QWORD PTR [rax+0x8],r12
  41a6c2:	jne    41a6a0 <fb_symbol_table_remove_item@@Base+0x60>
  41a6c4:	mov    rsi,QWORD PTR [rax]
  41a6c7:	mov    rdi,QWORD PTR [rsp+0x8]
  41a6cc:	mov    rdx,r12
  41a6cf:	call   406140 <memcmp@plt>
  41a6d4:	test   eax,eax
  41a6d6:	jne    41a6a0 <fb_symbol_table_remove_item@@Base+0x60>
  41a6d8:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  41a6e1:	mov    rax,QWORD PTR [rsp]
  41a6e5:	add    QWORD PTR [rax+0x10],0xffffffffffffffff
  41a6ea:	jmp    41a6ee <fb_symbol_table_remove_item@@Base+0xae>
  41a6ec:	xor    ebx,ebx
  41a6ee:	mov    rax,rbx
  41a6f1:	add    rsp,0x18
  41a6f5:	pop    rbx
  41a6f6:	pop    r12
  41a6f8:	pop    r13
  41a6fa:	pop    r14
  41a6fc:	pop    r15
  41a6fe:	pop    rbp
  41a6ff:	ret    

000000000041a700 <fb_symbol_table_visit@@Base>:
  41a700:	push   r15
  41a702:	push   r14
  41a704:	push   r13
  41a706:	push   r12
  41a708:	push   rbx
  41a709:	mov    rax,QWORD PTR [rdi+0x18]
  41a70d:	test   rax,rax
  41a710:	je     41a746 <fb_symbol_table_visit@@Base+0x46>
  41a712:	mov    r14,rdx
  41a715:	mov    r15,rsi
  41a718:	mov    r12,rdi
  41a71b:	mov    r13,QWORD PTR [rdi]
  41a71e:	xor    ebx,ebx
  41a720:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41a725:	mov    rcx,rsi
  41a728:	or     rcx,0x2
  41a72c:	cmp    rcx,0x2
  41a730:	je     41a73d <fb_symbol_table_visit@@Base+0x3d>
  41a732:	mov    rdi,r14
  41a735:	call   r15
  41a738:	mov    rax,QWORD PTR [r12+0x18]
  41a73d:	add    rbx,0x1
  41a741:	cmp    rbx,rax
  41a744:	jb     41a720 <fb_symbol_table_visit@@Base+0x20>
  41a746:	pop    rbx
  41a747:	pop    r12
  41a749:	pop    r13
  41a74b:	pop    r14
  41a74d:	pop    r15
  41a74f:	ret    

000000000041a750 <fb_scope_table_clear@@Base>:
  41a750:	push   rbx
  41a751:	mov    rbx,rdi
  41a754:	mov    rdi,QWORD PTR [rdi]
  41a757:	test   rdi,rdi
  41a75a:	je     41a761 <fb_scope_table_clear@@Base+0x11>
  41a75c:	call   406040 <free@plt>
  41a761:	vxorps xmm0,xmm0,xmm0
  41a765:	vmovups YMMWORD PTR [rbx],ymm0
  41a769:	pop    rbx
  41a76a:	vzeroupper 
  41a76d:	ret    
  41a76e:	xchg   ax,ax

000000000041a770 <fb_scope_table_destroy@@Base>:
  41a770:	push   r15
  41a772:	push   r14
  41a774:	push   r13
  41a776:	push   r12
  41a778:	push   rbx
  41a779:	mov    r12,rdi
  41a77c:	test   rsi,rsi
  41a77f:	je     41a7c6 <fb_scope_table_destroy@@Base+0x56>
  41a781:	mov    rax,QWORD PTR [r12+0x18]
  41a786:	test   rax,rax
  41a789:	je     41a7c6 <fb_scope_table_destroy@@Base+0x56>
  41a78b:	mov    r14,rdx
  41a78e:	mov    r15,rsi
  41a791:	mov    r13,QWORD PTR [r12]
  41a795:	xor    ebx,ebx
  41a797:	nop    WORD PTR [rax+rax*1+0x0]
  41a7a0:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41a7a5:	mov    rcx,rsi
  41a7a8:	or     rcx,0x2
  41a7ac:	cmp    rcx,0x2
  41a7b0:	je     41a7bd <fb_scope_table_destroy@@Base+0x4d>
  41a7b2:	mov    rdi,r14
  41a7b5:	call   r15
  41a7b8:	mov    rax,QWORD PTR [r12+0x18]
  41a7bd:	add    rbx,0x1
  41a7c1:	cmp    rbx,rax
  41a7c4:	jb     41a7a0 <fb_scope_table_destroy@@Base+0x30>
  41a7c6:	mov    rdi,QWORD PTR [r12]
  41a7ca:	test   rdi,rdi
  41a7cd:	je     41a7d4 <fb_scope_table_destroy@@Base+0x64>
  41a7cf:	call   406040 <free@plt>
  41a7d4:	vxorps xmm0,xmm0,xmm0
  41a7d8:	vmovups YMMWORD PTR [r12],ymm0
  41a7de:	pop    rbx
  41a7df:	pop    r12
  41a7e1:	pop    r13
  41a7e3:	pop    r14
  41a7e5:	pop    r15
  41a7e7:	vzeroupper 
  41a7ea:	ret    
  41a7eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a7f0 <fb_scope_table_init@@Base>:
  41a7f0:	push   r14
  41a7f2:	push   rbx
  41a7f3:	push   rax
  41a7f4:	mov    r14,rdi
  41a7f7:	mov    eax,0x4
  41a7fc:	nop    DWORD PTR [rax+0x0]
  41a800:	mov    rbx,rax
  41a803:	imul   rcx,rax,0xb3
  41a80a:	shr    rcx,0x8
  41a80e:	lea    rax,[rax+rax*1]
  41a812:	cmp    rcx,rsi
  41a815:	jb     41a800 <fb_scope_table_init@@Base+0x10>
  41a817:	mov    esi,0x8
  41a81c:	mov    rdi,rbx
  41a81f:	call   406150 <calloc@plt>
  41a824:	mov    QWORD PTR [r14],rax
  41a827:	test   rax,rax
  41a82a:	je     41a83e <fb_scope_table_init@@Base+0x4e>
  41a82c:	vxorps xmm0,xmm0,xmm0
  41a830:	vmovups XMMWORD PTR [r14+0x8],xmm0
  41a836:	mov    QWORD PTR [r14+0x18],rbx
  41a83a:	xor    eax,eax
  41a83c:	jmp    41a843 <fb_scope_table_init@@Base+0x53>
  41a83e:	mov    eax,0xffffffff
  41a843:	add    rsp,0x8
  41a847:	pop    rbx
  41a848:	pop    r14
  41a84a:	ret    
  41a84b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a850 <fb_scope_table_resize@@Base>:
  41a850:	jmp    41a860 <fb_scope_table_resize@@Base+0x10>
  41a852:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a85c:	nop    DWORD PTR [rax+0x0]
  41a860:	push   r15
  41a862:	push   r14
  41a864:	push   r12
  41a866:	push   rbx
  41a867:	sub    rsp,0x28
  41a86b:	mov    r14,rdi
  41a86e:	mov    r12,QWORD PTR [rdi]
  41a871:	mov    rax,QWORD PTR [rdi+0x10]
  41a875:	cmp    rax,rsi
  41a878:	cmova  rsi,rax
  41a87c:	mov    eax,0x4
  41a881:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a88b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a890:	mov    rbx,rax
  41a893:	imul   rcx,rax,0xb3
  41a89a:	shr    rcx,0x8
  41a89e:	lea    rax,[rax+rax*1]
  41a8a2:	cmp    rcx,rsi
  41a8a5:	jb     41a890 <fb_scope_table_resize@@Base+0x40>
  41a8a7:	mov    esi,0x8
  41a8ac:	mov    rdi,rbx
  41a8af:	call   406150 <calloc@plt>
  41a8b4:	mov    QWORD PTR [rsp+0x8],rax
  41a8b9:	test   rax,rax
  41a8bc:	je     41a930 <fb_scope_table_resize@@Base+0xe0>
  41a8be:	vxorps xmm0,xmm0,xmm0
  41a8c2:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  41a8c8:	mov    QWORD PTR [rsp+0x20],rbx
  41a8cd:	mov    rax,QWORD PTR [r14+0x18]
  41a8d1:	test   rax,rax
  41a8d4:	je     41a914 <fb_scope_table_resize@@Base+0xc4>
  41a8d6:	xor    ebx,ebx
  41a8d8:	lea    r15,[rsp+0x8]
  41a8dd:	nop    DWORD PTR [rax]
  41a8e0:	mov    rcx,QWORD PTR [r12+rbx*8]
  41a8e4:	mov    rdx,rcx
  41a8e7:	or     rdx,0x2
  41a8eb:	cmp    rdx,0x2
  41a8ef:	je     41a908 <fb_scope_table_resize@@Base+0xb8>
  41a8f1:	mov    rsi,QWORD PTR [rcx]
  41a8f4:	xor    edx,edx
  41a8f6:	mov    r8d,0x3
  41a8fc:	mov    rdi,r15
  41a8ff:	call   41a960 <fb_scope_table_insert@@Base+0x10>
  41a904:	mov    rax,QWORD PTR [r14+0x18]
  41a908:	add    rbx,0x1
  41a90c:	cmp    rbx,rax
  41a90f:	jb     41a8e0 <fb_scope_table_resize@@Base+0x90>
  41a911:	mov    r12,QWORD PTR [r14]
  41a914:	test   r12,r12
  41a917:	je     41a921 <fb_scope_table_resize@@Base+0xd1>
  41a919:	mov    rdi,r12
  41a91c:	call   406040 <free@plt>
  41a921:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  41a927:	vmovups YMMWORD PTR [r14],ymm0
  41a92c:	xor    eax,eax
  41a92e:	jmp    41a935 <fb_scope_table_resize@@Base+0xe5>
  41a930:	mov    eax,0xffffffff
  41a935:	add    rsp,0x28
  41a939:	pop    rbx
  41a93a:	pop    r12
  41a93c:	pop    r14
  41a93e:	pop    r15
  41a940:	vzeroupper 
  41a943:	ret    
  41a944:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a94e:	xchg   ax,ax

000000000041a950 <fb_scope_table_insert@@Base>:
  41a950:	jmp    41a960 <fb_scope_table_insert@@Base+0x10>
  41a952:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a95c:	nop    DWORD PTR [rax+0x0]
  41a960:	push   rbp
  41a961:	push   r15
  41a963:	push   r14
  41a965:	push   r13
  41a967:	push   r12
  41a969:	push   rbx
  41a96a:	sub    rsp,0x48
  41a96e:	mov    QWORD PTR [rsp+0x8],rdx
  41a973:	mov    QWORD PTR [rsp],rsi
  41a977:	cmp    rcx,0x2
  41a97b:	je     41ad94 <fb_scope_table_insert@@Base+0x444>
  41a981:	mov    rbx,rcx
  41a984:	cmp    rcx,0x1
  41a988:	je     41adb3 <fb_scope_table_insert@@Base+0x463>
  41a98e:	test   rbx,rbx
  41a991:	je     41add2 <fb_scope_table_insert@@Base+0x482>
  41a997:	mov    r15d,r8d
  41a99a:	mov    r14,rdi
  41a99d:	mov    rsi,QWORD PTR [rdi+0x10]
  41a9a1:	mov    rcx,QWORD PTR [rdi+0x18]
  41a9a5:	imul   rax,rcx,0xb3
  41a9ac:	shr    rax,0x8
  41a9b0:	cmp    rsi,rax
  41a9b3:	jb     41a9cc <fb_scope_table_insert@@Base+0x7c>
  41a9b5:	add    rsi,rsi
  41a9b8:	mov    rdi,r14
  41a9bb:	call   41a860 <fb_scope_table_resize@@Base+0x10>
  41a9c0:	test   eax,eax
  41a9c2:	jne    41adf1 <fb_scope_table_insert@@Base+0x4a1>
  41a9c8:	mov    rcx,QWORD PTR [r14+0x18]
  41a9cc:	mov    rax,QWORD PTR [r14]
  41a9cf:	mov    QWORD PTR [rsp+0x18],rax
  41a9d4:	add    rcx,0xffffffffffffffff
  41a9d8:	mov    QWORD PTR [rsp+0x10],rcx
  41a9dd:	mov    rax,QWORD PTR [rsp+0x8]
  41a9e2:	test   eax,eax
  41a9e4:	mov    QWORD PTR [rsp+0x38],rbx
  41a9e9:	jle    41acdd <fb_scope_table_insert@@Base+0x38d>
  41a9ef:	xor    r12d,r12d
  41a9f2:	mov    r8d,0x9e3779b1
  41a9f8:	mov    r9,rax
  41a9fb:	mov    rdx,QWORD PTR [rsp]
  41a9ff:	test   r9,r9
  41aa02:	jne    41aa23 <fb_scope_table_insert@@Base+0xd3>
  41aa04:	jmp    41aa60 <fb_scope_table_insert@@Base+0x110>
  41aa06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aa10:	lea    rax,[rsi+0x1]
  41aa14:	sub    r9,rax
  41aa17:	add    rdx,rsi
  41aa1a:	add    rdx,0x1
  41aa1e:	test   r9,r9
  41aa21:	je     41aa60 <fb_scope_table_insert@@Base+0x110>
  41aa23:	xor    esi,esi
  41aa25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aa2f:	nop
  41aa30:	cmp    BYTE PTR [rdx+rsi*1],0x2e
  41aa34:	je     41aa3f <fb_scope_table_insert@@Base+0xef>
  41aa36:	add    rsi,0x1
  41aa3a:	cmp    rsi,r9
  41aa3d:	jb     41aa30 <fb_scope_table_insert@@Base+0xe0>
  41aa3f:	mov    rdi,rsi
  41aa42:	add    rdi,0xffffffffffffffff
  41aa46:	jne    41aa69 <fb_scope_table_insert@@Base+0x119>
  41aa48:	mov    esi,0x1
  41aa4d:	mov    ecx,0x2f692e57
  41aa52:	jmp    41aa8f <fb_scope_table_insert@@Base+0x13f>
  41aa54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aa5e:	xchg   ax,ax
  41aa60:	mov    rdi,0xffffffffffffffff
  41aa67:	xor    esi,esi
  41aa69:	xor    ebx,ebx
  41aa6b:	mov    ecx,0x2f692e57
  41aa70:	movzx  eax,BYTE PTR [rdx+rbx*1]
  41aa74:	test   rax,rax
  41aa77:	je     41aa8f <fb_scope_table_insert@@Base+0x13f>
  41aa79:	mov    rbp,rcx
  41aa7c:	shl    rbp,0x5
  41aa80:	add    rcx,rbp
  41aa83:	xor    rcx,rax
  41aa86:	add    rbx,0x1
  41aa8a:	cmp    rdi,rbx
  41aa8d:	jne    41aa70 <fb_scope_table_insert@@Base+0x120>
  41aa8f:	xor    r12,rcx
  41aa92:	xor    r12,0x2f693b52
  41aa99:	imul   r12,r8
  41aa9d:	cmp    rsi,r9
  41aaa0:	jne    41aa10 <fb_scope_table_insert@@Base+0xc0>
  41aaa6:	mov    rax,r12
  41aaa9:	and    rax,QWORD PTR [rsp+0x10]
  41aaae:	mov    ecx,r15d
  41aab1:	or     ecx,0x1
  41aab4:	cmp    ecx,0x3
  41aab7:	jne    41aaf1 <fb_scope_table_insert@@Base+0x1a1>
  41aab9:	add    QWORD PTR [r14+0x10],0x1
  41aabe:	add    r12,0x1
  41aac2:	mov    rdx,QWORD PTR [rsp+0x10]
  41aac7:	mov    rsi,QWORD PTR [rsp+0x18]
  41aacc:	jmp    41aada <fb_scope_table_insert@@Base+0x18a>
  41aace:	xchg   ax,ax
  41aad0:	mov    rax,r12
  41aad3:	and    rax,rdx
  41aad6:	add    r12,0x1
  41aada:	mov    rcx,QWORD PTR [rsi+rax*8]
  41aade:	or     rcx,0x2
  41aae2:	cmp    rcx,0x2
  41aae6:	jne    41aad0 <fb_scope_table_insert@@Base+0x180>
  41aae8:	lea    rcx,[rsi+rax*8]
  41aaec:	jmp    41acc0 <fb_scope_table_insert@@Base+0x370>
  41aaf1:	mov    DWORD PTR [rsp+0x28],r15d
  41aaf6:	mov    QWORD PTR [rsp+0x30],r14
  41aafb:	mov    r9,QWORD PTR [rsp+0x8]
  41ab00:	mov    ecx,r9d
  41ab03:	neg    ecx
  41ab05:	mov    DWORD PTR [rsp+0x2c],ecx
  41ab09:	xor    ebp,ebp
  41ab0b:	xor    r15d,r15d
  41ab0e:	mov    r8,QWORD PTR [rsp]
  41ab12:	mov    r10,QWORD PTR [rsp+0x10]
  41ab17:	mov    r11,QWORD PTR [rsp+0x18]
  41ab1c:	jmp    41ab2f <fb_scope_table_insert@@Base+0x1df>
  41ab1e:	xchg   ax,ax
  41ab20:	lea    rax,[r12+rbp*1]
  41ab24:	add    rax,0x1
  41ab28:	add    rbp,0x1
  41ab2c:	and    rax,r10
  41ab2f:	lea    rcx,[r11+rax*8]
  41ab33:	mov    r13,QWORD PTR [r11+rax*8]
  41ab37:	cmp    r13,0x2
  41ab3b:	je     41ab70 <fb_scope_table_insert@@Base+0x220>
  41ab3d:	test   r13,r13
  41ab40:	je     41acaf <fb_scope_table_insert@@Base+0x35f>
  41ab46:	mov    QWORD PTR [rsp+0x40],rcx
  41ab4b:	mov    r14,QWORD PTR [r13+0x0]
  41ab4f:	test   r9d,r9d
  41ab52:	jle    41ac06 <fb_scope_table_insert@@Base+0x2b6>
  41ab58:	mov    rax,r8
  41ab5b:	mov    rcx,r9
  41ab5e:	test   r14,r14
  41ab61:	jne    41ab96 <fb_scope_table_insert@@Base+0x246>
  41ab63:	jmp    41ab20 <fb_scope_table_insert@@Base+0x1d0>
  41ab65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ab6f:	nop
  41ab70:	test   r15,r15
  41ab73:	cmove  r15,rcx
  41ab77:	jmp    41ab20 <fb_scope_table_insert@@Base+0x1d0>
  41ab79:	nop    DWORD PTR [rax+0x0]
  41ab80:	lea    rsi,[rdx+0x1]
  41ab84:	sub    rcx,rsi
  41ab87:	add    rax,rdx
  41ab8a:	add    rax,0x1
  41ab8e:	mov    r14,QWORD PTR [r14]
  41ab91:	test   r14,r14
  41ab94:	je     41ab20 <fb_scope_table_insert@@Base+0x1d0>
  41ab96:	mov    rsi,QWORD PTR [r14+0x8]
  41ab9a:	mov    rdx,QWORD PTR [rsi+0x8]
  41ab9e:	cmp    rdx,rcx
  41aba1:	ja     41ab20 <fb_scope_table_insert@@Base+0x1d0>
  41aba7:	test   rdx,rdx
  41abaa:	je     41abf0 <fb_scope_table_insert@@Base+0x2a0>
  41abac:	mov    rdi,QWORD PTR [rsi]
  41abaf:	xor    esi,esi
  41abb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41abbb:	nop    DWORD PTR [rax+rax*1+0x0]
  41abc0:	movzx  ebx,BYTE PTR [rdi+rsi*1]
  41abc4:	cmp    bl,BYTE PTR [rax+rsi*1]
  41abc7:	jne    41ab20 <fb_scope_table_insert@@Base+0x1d0>
  41abcd:	add    rsi,0x1
  41abd1:	cmp    rsi,rdx
  41abd4:	jb     41abc0 <fb_scope_table_insert@@Base+0x270>
  41abd6:	cmp    rdx,rcx
  41abd9:	je     41abf7 <fb_scope_table_insert@@Base+0x2a7>
  41abdb:	cmp    BYTE PTR [rax+rsi*1],0x2e
  41abdf:	je     41ab80 <fb_scope_table_insert@@Base+0x230>
  41abe1:	jmp    41ab20 <fb_scope_table_insert@@Base+0x1d0>
  41abe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41abf0:	xor    esi,esi
  41abf2:	cmp    rdx,rcx
  41abf5:	jne    41abdb <fb_scope_table_insert@@Base+0x28b>
  41abf7:	cmp    QWORD PTR [r14],0x0
  41abfb:	jne    41ab20 <fb_scope_table_insert@@Base+0x1d0>
  41ac01:	jmp    41aca1 <fb_scope_table_insert@@Base+0x351>
  41ac06:	mov    QWORD PTR [rsp+0x20],r15
  41ac0b:	mov    rbx,rbp
  41ac0e:	mov    rbp,r8
  41ac11:	mov    r15d,DWORD PTR [rsp+0x2c]
  41ac16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ac20:	test   r14,r14
  41ac23:	je     41ac7d <fb_scope_table_insert@@Base+0x32d>
  41ac25:	test   rbp,rbp
  41ac28:	je     41ac7d <fb_scope_table_insert@@Base+0x32d>
  41ac2a:	mov    rax,QWORD PTR [r14+0x8]
  41ac2e:	mov    rdx,QWORD PTR [rax+0x8]
  41ac32:	mov    rcx,QWORD PTR [rbp+0x8]
  41ac36:	cmp    rdx,QWORD PTR [rcx+0x8]
  41ac3a:	jne    41ac5d <fb_scope_table_insert@@Base+0x30d>
  41ac3c:	mov    rdi,QWORD PTR [rax]
  41ac3f:	mov    rsi,QWORD PTR [rcx]
  41ac42:	call   406060 <strncmp@plt>
  41ac47:	test   eax,eax
  41ac49:	jne    41ac5d <fb_scope_table_insert@@Base+0x30d>
  41ac4b:	mov    r14,QWORD PTR [r14]
  41ac4e:	mov    rbp,QWORD PTR [rbp+0x0]
  41ac52:	add    r15d,0xffffffff
  41ac56:	jne    41ac20 <fb_scope_table_insert@@Base+0x2d0>
  41ac58:	test   r14,r14
  41ac5b:	jmp    41ac80 <fb_scope_table_insert@@Base+0x330>
  41ac5d:	mov    r9,QWORD PTR [rsp+0x8]
  41ac62:	mov    r8,QWORD PTR [rsp]
  41ac66:	mov    r10,QWORD PTR [rsp+0x10]
  41ac6b:	mov    r11,QWORD PTR [rsp+0x18]
  41ac70:	mov    rbp,rbx
  41ac73:	mov    r15,QWORD PTR [rsp+0x20]
  41ac78:	jmp    41ab20 <fb_scope_table_insert@@Base+0x1d0>
  41ac7d:	or     r14,rbp
  41ac80:	mov    r9,QWORD PTR [rsp+0x8]
  41ac85:	mov    r8,QWORD PTR [rsp]
  41ac89:	mov    r10,QWORD PTR [rsp+0x10]
  41ac8e:	mov    r11,QWORD PTR [rsp+0x18]
  41ac93:	mov    rbp,rbx
  41ac96:	mov    r15,QWORD PTR [rsp+0x20]
  41ac9b:	jne    41ab20 <fb_scope_table_insert@@Base+0x1d0>
  41aca1:	cmp    DWORD PTR [rsp+0x28],0x0
  41aca6:	mov    rcx,QWORD PTR [rsp+0x40]
  41acab:	jne    41accb <fb_scope_table_insert@@Base+0x37b>
  41acad:	jmp    41acc3 <fb_scope_table_insert@@Base+0x373>
  41acaf:	test   r15,r15
  41acb2:	cmovne rcx,r15
  41acb6:	mov    rax,QWORD PTR [rsp+0x30]
  41acbb:	add    QWORD PTR [rax+0x10],0x1
  41acc0:	xor    r13d,r13d
  41acc3:	mov    rax,QWORD PTR [rsp+0x38]
  41acc8:	mov    QWORD PTR [rcx],rax
  41accb:	mov    rax,r13
  41acce:	add    rsp,0x48
  41acd2:	pop    rbx
  41acd3:	pop    r12
  41acd5:	pop    r13
  41acd7:	pop    r14
  41acd9:	pop    r15
  41acdb:	pop    rbp
  41acdc:	ret    
  41acdd:	mov    rcx,QWORD PTR [rsp]
  41ace1:	test   rcx,rcx
  41ace4:	je     41ad8c <fb_scope_table_insert@@Base+0x43c>
  41acea:	mov    r8d,0x9e3779b1
  41acf0:	xor    r12d,r12d
  41acf3:	mov    rax,QWORD PTR [rsp+0x8]
  41acf8:	mov    r9d,eax
  41acfb:	mov    rdx,rcx
  41acfe:	xchg   ax,ax
  41ad00:	mov    rax,QWORD PTR [rdx+0x8]
  41ad04:	mov    rsi,QWORD PTR [rax+0x8]
  41ad08:	add    rsi,0xffffffffffffffff
  41ad0c:	je     41ad50 <fb_scope_table_insert@@Base+0x400>
  41ad0e:	mov    rdi,QWORD PTR [rax]
  41ad11:	xor    ebp,ebp
  41ad13:	mov    eax,0x2f692e57
  41ad18:	nop    DWORD PTR [rax+rax*1+0x0]
  41ad20:	movzx  ecx,BYTE PTR [rdi+rbp*1]
  41ad24:	test   rcx,rcx
  41ad27:	je     41ad60 <fb_scope_table_insert@@Base+0x410>
  41ad29:	mov    rbx,rax
  41ad2c:	shl    rbx,0x5
  41ad30:	add    rbx,rax
  41ad33:	xor    rbx,rcx
  41ad36:	add    rbp,0x1
  41ad3a:	mov    rax,rbx
  41ad3d:	cmp    rsi,rbp
  41ad40:	jne    41ad20 <fb_scope_table_insert@@Base+0x3d0>
  41ad42:	jmp    41ad63 <fb_scope_table_insert@@Base+0x413>
  41ad44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad4e:	xchg   ax,ax
  41ad50:	mov    ebx,0x2f692e57
  41ad55:	jmp    41ad63 <fb_scope_table_insert@@Base+0x413>
  41ad57:	nop    WORD PTR [rax+rax*1+0x0]
  41ad60:	mov    rbx,rax
  41ad63:	xor    r12,rbx
  41ad66:	xor    r12,0x2f693b52
  41ad6d:	imul   r12,r8
  41ad71:	add    r9d,0x1
  41ad75:	je     41aaa6 <fb_scope_table_insert@@Base+0x156>
  41ad7b:	mov    rdx,QWORD PTR [rdx]
  41ad7e:	test   rdx,rdx
  41ad81:	jne    41ad00 <fb_scope_table_insert@@Base+0x3b0>
  41ad87:	jmp    41aaa6 <fb_scope_table_insert@@Base+0x156>
  41ad8c:	xor    r12d,r12d
  41ad8f:	jmp    41aaa6 <fb_scope_table_insert@@Base+0x156>
  41ad94:	lea    rdi,[rip+0x2d0c0]        # 447e5b <str_set_deleted@@Base+0xd3>
  41ad9b:	lea    rsi,[rip+0x2d005]        # 447da7 <str_set_deleted@@Base+0x1f>
  41ada2:	lea    rcx,[rip+0x2d068]        # 447e11 <str_set_deleted@@Base+0x89>
  41ada9:	mov    edx,0x73
  41adae:	call   406100 <__assert_fail@plt>
  41adb3:	lea    rdi,[rip+0x2d0b8]        # 447e72 <str_set_deleted@@Base+0xea>
  41adba:	lea    rsi,[rip+0x2cfe6]        # 447da7 <str_set_deleted@@Base+0x1f>
  41adc1:	lea    rcx,[rip+0x2d049]        # 447e11 <str_set_deleted@@Base+0x89>
  41adc8:	mov    edx,0x74
  41adcd:	call   406100 <__assert_fail@plt>
  41add2:	lea    rdi,[rip+0x2cfb7]        # 447d90 <str_set_deleted@@Base+0x8>
  41add9:	lea    rsi,[rip+0x2cfc7]        # 447da7 <str_set_deleted@@Base+0x1f>
  41ade0:	lea    rcx,[rip+0x2d02a]        # 447e11 <str_set_deleted@@Base+0x89>
  41ade7:	mov    edx,0x72
  41adec:	call   406100 <__assert_fail@plt>
  41adf1:	mov    rax,QWORD PTR [rip+0x38200]        # 452ff8 <stderr@GLIBC_2.2.5>
  41adf8:	mov    rdi,QWORD PTR [rax]
  41adfb:	lea    rsi,[rip+0x2d085]        # 447e87 <str_set_deleted@@Base+0xff>
  41ae02:	lea    rdx,[rip+0x2d095]        # 447e9e <str_set_deleted@@Base+0x116>
  41ae09:	xor    eax,eax
  41ae0b:	call   406180 <fprintf@plt>
  41ae10:	mov    edi,0x1
  41ae15:	call   406210 <exit@plt>
  41ae1a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041ae20 <fb_scope_table_insert_item@@Base>:
  41ae20:	mov    eax,edx
  41ae22:	mov    rcx,rsi
  41ae25:	mov    rsi,QWORD PTR [rsi]
  41ae28:	xor    edx,edx
  41ae2a:	mov    r8d,eax
  41ae2d:	jmp    41a960 <fb_scope_table_insert@@Base+0x10>
  41ae32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae3c:	nop    DWORD PTR [rax+0x0]

000000000041ae40 <fb_scope_table_find@@Base>:
  41ae40:	push   rbp
  41ae41:	push   r15
  41ae43:	push   r14
  41ae45:	push   r13
  41ae47:	push   r12
  41ae49:	push   rbx
  41ae4a:	sub    rsp,0x38
  41ae4e:	mov    rax,QWORD PTR [rdi]
  41ae51:	mov    QWORD PTR [rsp+0x30],rax
  41ae56:	test   rax,rax
  41ae59:	je     41b083 <fb_scope_table_find@@Base+0x243>
  41ae5f:	mov    rax,QWORD PTR [rdi+0x18]
  41ae63:	mov    QWORD PTR [rsp+0x18],rax
  41ae68:	test   edx,edx
  41ae6a:	jle    41b097 <fb_scope_table_find@@Base+0x257>
  41ae70:	xor    r14d,r14d
  41ae73:	mov    r8d,0x9e3779b1
  41ae79:	mov    r9,rdx
  41ae7c:	mov    r10,rsi
  41ae7f:	test   r9,r9
  41ae82:	jne    41aea3 <fb_scope_table_find@@Base+0x63>
  41ae84:	jmp    41aee0 <fb_scope_table_find@@Base+0xa0>
  41ae86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae90:	lea    rax,[rdi+0x1]
  41ae94:	sub    r9,rax
  41ae97:	add    r10,rdi
  41ae9a:	add    r10,0x1
  41ae9e:	test   r9,r9
  41aea1:	je     41aee0 <fb_scope_table_find@@Base+0xa0>
  41aea3:	xor    edi,edi
  41aea5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aeaf:	nop
  41aeb0:	cmp    BYTE PTR [r10+rdi*1],0x2e
  41aeb5:	je     41aec0 <fb_scope_table_find@@Base+0x80>
  41aeb7:	add    rdi,0x1
  41aebb:	cmp    rdi,r9
  41aebe:	jb     41aeb0 <fb_scope_table_find@@Base+0x70>
  41aec0:	mov    r11,rdi
  41aec3:	add    r11,0xffffffffffffffff
  41aec7:	jne    41aee9 <fb_scope_table_find@@Base+0xa9>
  41aec9:	mov    edi,0x1
  41aece:	mov    ecx,0x2f692e57
  41aed3:	jmp    41af10 <fb_scope_table_find@@Base+0xd0>
  41aed5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aedf:	nop
  41aee0:	mov    r11,0xffffffffffffffff
  41aee7:	xor    edi,edi
  41aee9:	xor    eax,eax
  41aeeb:	mov    ecx,0x2f692e57
  41aef0:	movzx  ebp,BYTE PTR [r10+rax*1]
  41aef5:	test   rbp,rbp
  41aef8:	je     41af10 <fb_scope_table_find@@Base+0xd0>
  41aefa:	mov    rbx,rcx
  41aefd:	shl    rbx,0x5
  41af01:	add    rcx,rbx
  41af04:	xor    rcx,rbp
  41af07:	add    rax,0x1
  41af0b:	cmp    r11,rax
  41af0e:	jne    41aef0 <fb_scope_table_find@@Base+0xb0>
  41af10:	xor    r14,rcx
  41af13:	xor    r14,0x2f693b52
  41af1a:	imul   r14,r8
  41af1e:	cmp    rdi,r9
  41af21:	jne    41ae90 <fb_scope_table_find@@Base+0x50>
  41af27:	mov    QWORD PTR [rsp+0x10],rsi
  41af2c:	add    QWORD PTR [rsp+0x18],0xffffffffffffffff
  41af32:	mov    QWORD PTR [rsp+0x28],rdx
  41af37:	mov    eax,edx
  41af39:	neg    eax
  41af3b:	mov    DWORD PTR [rsp+0xc],eax
  41af3f:	mov    rax,r14
  41af42:	xor    ecx,ecx
  41af44:	jmp    41af63 <fb_scope_table_find@@Base+0x123>
  41af46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41af50:	mov    rax,QWORD PTR [rsp+0x20]
  41af55:	mov    rcx,rax
  41af58:	add    rax,r14
  41af5b:	add    rax,0x1
  41af5f:	add    rcx,0x1
  41af63:	mov    QWORD PTR [rsp+0x20],rcx
  41af68:	and    rax,QWORD PTR [rsp+0x18]
  41af6d:	mov    rcx,QWORD PTR [rsp+0x30]
  41af72:	mov    rbp,QWORD PTR [rcx+rax*8]
  41af76:	cmp    rbp,0x2
  41af7a:	je     41af50 <fb_scope_table_find@@Base+0x110>
  41af7c:	test   rbp,rbp
  41af7f:	je     41b083 <fb_scope_table_find@@Base+0x243>
  41af85:	mov    r15,QWORD PTR [rbp+0x0]
  41af89:	mov    rcx,QWORD PTR [rsp+0x28]
  41af8e:	test   ecx,ecx
  41af90:	jle    41b010 <fb_scope_table_find@@Base+0x1d0>
  41af92:	mov    rax,QWORD PTR [rsp+0x10]
  41af97:	test   r15,r15
  41af9a:	je     41af50 <fb_scope_table_find@@Base+0x110>
  41af9c:	mov    rsi,QWORD PTR [r15+0x8]
  41afa0:	mov    rdx,QWORD PTR [rsi+0x8]
  41afa4:	cmp    rdx,rcx
  41afa7:	ja     41af50 <fb_scope_table_find@@Base+0x110>
  41afa9:	test   rdx,rdx
  41afac:	je     41afe0 <fb_scope_table_find@@Base+0x1a0>
  41afae:	mov    rdi,QWORD PTR [rsi]
  41afb1:	xor    esi,esi
  41afb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41afbd:	nop    DWORD PTR [rax]
  41afc0:	movzx  ebx,BYTE PTR [rdi+rsi*1]
  41afc4:	cmp    bl,BYTE PTR [rax+rsi*1]
  41afc7:	jne    41af50 <fb_scope_table_find@@Base+0x110>
  41afc9:	add    rsi,0x1
  41afcd:	cmp    rsi,rdx
  41afd0:	jb     41afc0 <fb_scope_table_find@@Base+0x180>
  41afd2:	cmp    rdx,rcx
  41afd5:	jne    41afeb <fb_scope_table_find@@Base+0x1ab>
  41afd7:	jmp    41b077 <fb_scope_table_find@@Base+0x237>
  41afdc:	nop    DWORD PTR [rax+0x0]
  41afe0:	xor    esi,esi
  41afe2:	cmp    rdx,rcx
  41afe5:	je     41b077 <fb_scope_table_find@@Base+0x237>
  41afeb:	cmp    BYTE PTR [rax+rsi*1],0x2e
  41afef:	jne    41af50 <fb_scope_table_find@@Base+0x110>
  41aff5:	lea    rsi,[rdx+0x1]
  41aff9:	sub    rcx,rsi
  41affc:	add    rax,rdx
  41afff:	add    rax,0x1
  41b003:	mov    r15,QWORD PTR [r15]
  41b006:	test   r15,r15
  41b009:	jne    41af9c <fb_scope_table_find@@Base+0x15c>
  41b00b:	jmp    41af50 <fb_scope_table_find@@Base+0x110>
  41b010:	mov    r13d,DWORD PTR [rsp+0xc]
  41b015:	mov    r12,QWORD PTR [rsp+0x10]
  41b01a:	nop    WORD PTR [rax+rax*1+0x0]
  41b020:	test   r15,r15
  41b023:	je     41b06c <fb_scope_table_find@@Base+0x22c>
  41b025:	test   r12,r12
  41b028:	je     41b06c <fb_scope_table_find@@Base+0x22c>
  41b02a:	mov    rax,QWORD PTR [r15+0x8]
  41b02e:	mov    rdx,QWORD PTR [rax+0x8]
  41b032:	mov    rcx,QWORD PTR [r12+0x8]
  41b037:	cmp    rdx,QWORD PTR [rcx+0x8]
  41b03b:	jne    41af50 <fb_scope_table_find@@Base+0x110>
  41b041:	mov    rdi,QWORD PTR [rax]
  41b044:	mov    rsi,QWORD PTR [rcx]
  41b047:	call   406060 <strncmp@plt>
  41b04c:	test   eax,eax
  41b04e:	jne    41af50 <fb_scope_table_find@@Base+0x110>
  41b054:	mov    r15,QWORD PTR [r15]
  41b057:	mov    r12,QWORD PTR [r12]
  41b05b:	add    r13d,0xffffffff
  41b05f:	jne    41b020 <fb_scope_table_find@@Base+0x1e0>
  41b061:	test   r15,r15
  41b064:	jne    41af50 <fb_scope_table_find@@Base+0x110>
  41b06a:	jmp    41b085 <fb_scope_table_find@@Base+0x245>
  41b06c:	or     r15,r12
  41b06f:	jne    41af50 <fb_scope_table_find@@Base+0x110>
  41b075:	jmp    41b085 <fb_scope_table_find@@Base+0x245>
  41b077:	cmp    QWORD PTR [r15],0x0
  41b07b:	jne    41af50 <fb_scope_table_find@@Base+0x110>
  41b081:	jmp    41b085 <fb_scope_table_find@@Base+0x245>
  41b083:	xor    ebp,ebp
  41b085:	mov    rax,rbp
  41b088:	add    rsp,0x38
  41b08c:	pop    rbx
  41b08d:	pop    r12
  41b08f:	pop    r13
  41b091:	pop    r14
  41b093:	pop    r15
  41b095:	pop    rbp
  41b096:	ret    
  41b097:	test   rsi,rsi
  41b09a:	je     41b13c <fb_scope_table_find@@Base+0x2fc>
  41b0a0:	mov    r8d,0x9e3779b1
  41b0a6:	xor    r14d,r14d
  41b0a9:	mov    r9d,edx
  41b0ac:	mov    r10,rsi
  41b0af:	nop
  41b0b0:	mov    rax,QWORD PTR [r10+0x8]
  41b0b4:	mov    rdi,QWORD PTR [rax+0x8]
  41b0b8:	add    rdi,0xffffffffffffffff
  41b0bc:	je     41b100 <fb_scope_table_find@@Base+0x2c0>
  41b0be:	mov    r11,QWORD PTR [rax]
  41b0c1:	xor    ebx,ebx
  41b0c3:	mov    ecx,0x2f692e57
  41b0c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b0d0:	movzx  ebp,BYTE PTR [r11+rbx*1]
  41b0d5:	test   rbp,rbp
  41b0d8:	je     41b110 <fb_scope_table_find@@Base+0x2d0>
  41b0da:	mov    rax,rcx
  41b0dd:	shl    rax,0x5
  41b0e1:	add    rax,rcx
  41b0e4:	xor    rax,rbp
  41b0e7:	add    rbx,0x1
  41b0eb:	mov    rcx,rax
  41b0ee:	cmp    rdi,rbx
  41b0f1:	jne    41b0d0 <fb_scope_table_find@@Base+0x290>
  41b0f3:	jmp    41b113 <fb_scope_table_find@@Base+0x2d3>
  41b0f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b0ff:	nop
  41b100:	mov    eax,0x2f692e57
  41b105:	jmp    41b113 <fb_scope_table_find@@Base+0x2d3>
  41b107:	nop    WORD PTR [rax+rax*1+0x0]
  41b110:	mov    rax,rcx
  41b113:	xor    r14,rax
  41b116:	xor    r14,0x2f693b52
  41b11d:	imul   r14,r8
  41b121:	add    r9d,0x1
  41b125:	je     41af27 <fb_scope_table_find@@Base+0xe7>
  41b12b:	mov    r10,QWORD PTR [r10]
  41b12e:	test   r10,r10
  41b131:	jne    41b0b0 <fb_scope_table_find@@Base+0x270>
  41b137:	jmp    41af27 <fb_scope_table_find@@Base+0xe7>
  41b13c:	xor    r14d,r14d
  41b13f:	jmp    41af27 <fb_scope_table_find@@Base+0xe7>
  41b144:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b14e:	xchg   ax,ax

000000000041b150 <fb_scope_table_find_item@@Base>:
  41b150:	push   rbp
  41b151:	push   r15
  41b153:	push   r14
  41b155:	push   r13
  41b157:	push   r12
  41b159:	push   rbx
  41b15a:	sub    rsp,0x18
  41b15e:	mov    rax,QWORD PTR [rdi]
  41b161:	mov    QWORD PTR [rsp+0x10],rax
  41b166:	test   rax,rax
  41b169:	je     41b2d2 <fb_scope_table_find_item@@Base+0x182>
  41b16f:	mov    r10,QWORD PTR [rsi]
  41b172:	mov    rax,QWORD PTR [rdi+0x18]
  41b176:	mov    QWORD PTR [rsp+0x8],rax
  41b17b:	xor    ebx,ebx
  41b17d:	test   r10,r10
  41b180:	je     41b209 <fb_scope_table_find_item@@Base+0xb9>
  41b186:	mov    r8d,0x9e3779b1
  41b18c:	mov    r9,r10
  41b18f:	nop
  41b190:	mov    rax,QWORD PTR [r9+0x8]
  41b194:	mov    rdx,QWORD PTR [rax+0x8]
  41b198:	add    rdx,0xffffffffffffffff
  41b19c:	je     41b1e0 <fb_scope_table_find_item@@Base+0x90>
  41b19e:	mov    rsi,QWORD PTR [rax]
  41b1a1:	xor    edi,edi
  41b1a3:	mov    eax,0x2f692e57
  41b1a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b1b0:	movzx  ecx,BYTE PTR [rsi+rdi*1]
  41b1b4:	test   rcx,rcx
  41b1b7:	je     41b1f0 <fb_scope_table_find_item@@Base+0xa0>
  41b1b9:	mov    rbp,rax
  41b1bc:	shl    rbp,0x5
  41b1c0:	add    rbp,rax
  41b1c3:	xor    rbp,rcx
  41b1c6:	add    rdi,0x1
  41b1ca:	mov    rax,rbp
  41b1cd:	cmp    rdx,rdi
  41b1d0:	jne    41b1b0 <fb_scope_table_find_item@@Base+0x60>
  41b1d2:	jmp    41b1f3 <fb_scope_table_find_item@@Base+0xa3>
  41b1d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b1de:	xchg   ax,ax
  41b1e0:	mov    ebp,0x2f692e57
  41b1e5:	jmp    41b1f3 <fb_scope_table_find_item@@Base+0xa3>
  41b1e7:	nop    WORD PTR [rax+rax*1+0x0]
  41b1f0:	mov    rbp,rax
  41b1f3:	xor    rbx,rbp
  41b1f6:	xor    rbx,0x2f693b52
  41b1fd:	imul   rbx,r8
  41b201:	mov    r9,QWORD PTR [r9]
  41b204:	test   r9,r9
  41b207:	jne    41b190 <fb_scope_table_find_item@@Base+0x40>
  41b209:	add    QWORD PTR [rsp+0x8],0xffffffffffffffff
  41b20f:	mov    r12,r10
  41b212:	test   r10,r10
  41b215:	setne  BYTE PTR [rsp+0x7]
  41b21a:	mov    rax,rbx
  41b21d:	xor    ebp,ebp
  41b21f:	jmp    41b23c <fb_scope_table_find_item@@Base+0xec>
  41b221:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b22b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b230:	lea    rax,[rbx+rbp*1]
  41b234:	add    rax,0x1
  41b238:	add    rbp,0x1
  41b23c:	and    rax,QWORD PTR [rsp+0x8]
  41b241:	mov    rcx,QWORD PTR [rsp+0x10]
  41b246:	mov    r13,QWORD PTR [rcx+rax*8]
  41b24a:	cmp    r13,0x2
  41b24e:	je     41b230 <fb_scope_table_find_item@@Base+0xe0>
  41b250:	test   r13,r13
  41b253:	je     41b2d2 <fb_scope_table_find_item@@Base+0x182>
  41b255:	mov    r15,QWORD PTR [r13+0x0]
  41b259:	test   r15,r15
  41b25c:	setne  al
  41b25f:	mov    rcx,r12
  41b262:	test   r12,r12
  41b265:	je     41b2bc <fb_scope_table_find_item@@Base+0x16c>
  41b267:	mov    cl,BYTE PTR [rsp+0x7]
  41b26b:	test   r15,r15
  41b26e:	je     41b2c0 <fb_scope_table_find_item@@Base+0x170>
  41b270:	mov    r14,r12
  41b273:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b27d:	nop    DWORD PTR [rax]
  41b280:	mov    rax,QWORD PTR [r15+0x8]
  41b284:	mov    rdx,QWORD PTR [rax+0x8]
  41b288:	mov    rcx,QWORD PTR [r14+0x8]
  41b28c:	cmp    rdx,QWORD PTR [rcx+0x8]
  41b290:	jne    41b230 <fb_scope_table_find_item@@Base+0xe0>
  41b292:	mov    rdi,QWORD PTR [rax]
  41b295:	mov    rsi,QWORD PTR [rcx]
  41b298:	call   406060 <strncmp@plt>
  41b29d:	test   eax,eax
  41b29f:	jne    41b230 <fb_scope_table_find_item@@Base+0xe0>
  41b2a1:	mov    r14,QWORD PTR [r14]
  41b2a4:	mov    r15,QWORD PTR [r15]
  41b2a7:	test   r15,r15
  41b2aa:	setne  al
  41b2ad:	test   r14,r14
  41b2b0:	setne  cl
  41b2b3:	je     41b2c0 <fb_scope_table_find_item@@Base+0x170>
  41b2b5:	test   r15,r15
  41b2b8:	jne    41b280 <fb_scope_table_find_item@@Base+0x130>
  41b2ba:	jmp    41b2c0 <fb_scope_table_find_item@@Base+0x170>
  41b2bc:	mov    cl,BYTE PTR [rsp+0x7]
  41b2c0:	test   cl,cl
  41b2c2:	jne    41b230 <fb_scope_table_find_item@@Base+0xe0>
  41b2c8:	test   al,al
  41b2ca:	jne    41b230 <fb_scope_table_find_item@@Base+0xe0>
  41b2d0:	jmp    41b2d5 <fb_scope_table_find_item@@Base+0x185>
  41b2d2:	xor    r13d,r13d
  41b2d5:	mov    rax,r13
  41b2d8:	add    rsp,0x18
  41b2dc:	pop    rbx
  41b2dd:	pop    r12
  41b2df:	pop    r13
  41b2e1:	pop    r14
  41b2e3:	pop    r15
  41b2e5:	pop    rbp
  41b2e6:	ret    
  41b2e7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b2f0 <fb_scope_table_remove@@Base>:
  41b2f0:	jmp    41b300 <fb_scope_table_remove@@Base+0x10>
  41b2f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b2fc:	nop    DWORD PTR [rax+0x0]
  41b300:	push   rbp
  41b301:	push   r15
  41b303:	push   r14
  41b305:	push   r13
  41b307:	push   r12
  41b309:	push   rbx
  41b30a:	sub    rsp,0x48
  41b30e:	mov    rax,QWORD PTR [rdi]
  41b311:	mov    QWORD PTR [rsp+0x18],rax
  41b316:	test   rax,rax
  41b319:	je     41b573 <fb_scope_table_remove@@Base+0x283>
  41b31f:	mov    rax,QWORD PTR [rdi+0x18]
  41b323:	mov    QWORD PTR [rsp+0x20],rax
  41b328:	test   edx,edx
  41b32a:	mov    QWORD PTR [rsp+0x38],rdi
  41b32f:	mov    QWORD PTR [rsp+0x10],rsi
  41b334:	jle    41b584 <fb_scope_table_remove@@Base+0x294>
  41b33a:	xor    r14d,r14d
  41b33d:	mov    r8d,0x9e3779b1
  41b343:	mov    r9,rdx
  41b346:	mov    r10,rsi
  41b349:	test   r9,r9
  41b34c:	jne    41b363 <fb_scope_table_remove@@Base+0x73>
  41b34e:	jmp    41b3a0 <fb_scope_table_remove@@Base+0xb0>
  41b350:	lea    rax,[rsi+0x1]
  41b354:	sub    r9,rax
  41b357:	add    r10,rsi
  41b35a:	add    r10,0x1
  41b35e:	test   r9,r9
  41b361:	je     41b3a0 <fb_scope_table_remove@@Base+0xb0>
  41b363:	xor    esi,esi
  41b365:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b36f:	nop
  41b370:	cmp    BYTE PTR [r10+rsi*1],0x2e
  41b375:	je     41b380 <fb_scope_table_remove@@Base+0x90>
  41b377:	add    rsi,0x1
  41b37b:	cmp    rsi,r9
  41b37e:	jb     41b370 <fb_scope_table_remove@@Base+0x80>
  41b380:	mov    rdi,rsi
  41b383:	add    rdi,0xffffffffffffffff
  41b387:	jne    41b3a9 <fb_scope_table_remove@@Base+0xb9>
  41b389:	mov    esi,0x1
  41b38e:	mov    ecx,0x2f692e57
  41b393:	jmp    41b3d0 <fb_scope_table_remove@@Base+0xe0>
  41b395:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b39f:	nop
  41b3a0:	mov    rdi,0xffffffffffffffff
  41b3a7:	xor    esi,esi
  41b3a9:	xor    ebx,ebx
  41b3ab:	mov    ecx,0x2f692e57
  41b3b0:	movzx  eax,BYTE PTR [r10+rbx*1]
  41b3b5:	test   rax,rax
  41b3b8:	je     41b3d0 <fb_scope_table_remove@@Base+0xe0>
  41b3ba:	mov    rbp,rcx
  41b3bd:	shl    rbp,0x5
  41b3c1:	add    rcx,rbp
  41b3c4:	xor    rcx,rax
  41b3c7:	add    rbx,0x1
  41b3cb:	cmp    rdi,rbx
  41b3ce:	jne    41b3b0 <fb_scope_table_remove@@Base+0xc0>
  41b3d0:	xor    r14,rcx
  41b3d3:	xor    r14,0x2f693b52
  41b3da:	imul   r14,r8
  41b3de:	cmp    rsi,r9
  41b3e1:	jne    41b350 <fb_scope_table_remove@@Base+0x60>
  41b3e7:	add    QWORD PTR [rsp+0x20],0xffffffffffffffff
  41b3ed:	mov    QWORD PTR [rsp+0x40],rdx
  41b3f2:	mov    eax,edx
  41b3f4:	neg    eax
  41b3f6:	mov    DWORD PTR [rsp+0xc],eax
  41b3fa:	xor    eax,eax
  41b3fc:	mov    QWORD PTR [rsp+0x30],rax
  41b401:	mov    r12,r14
  41b404:	jmp    41b426 <fb_scope_table_remove@@Base+0x136>
  41b406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b410:	mov    rax,QWORD PTR [rsp+0x30]
  41b415:	lea    r12,[rax+r14*1]
  41b419:	add    r12,0x1
  41b41d:	add    rax,0x1
  41b421:	mov    QWORD PTR [rsp+0x30],rax
  41b426:	and    r12,QWORD PTR [rsp+0x20]
  41b42b:	mov    rax,QWORD PTR [rsp+0x18]
  41b430:	mov    rax,QWORD PTR [rax+r12*8]
  41b434:	mov    QWORD PTR [rsp+0x28],rax
  41b439:	cmp    rax,0x2
  41b43d:	je     41b410 <fb_scope_table_remove@@Base+0x120>
  41b43f:	mov    rax,QWORD PTR [rsp+0x28]
  41b444:	test   rax,rax
  41b447:	je     41b573 <fb_scope_table_remove@@Base+0x283>
  41b44d:	mov    r13,QWORD PTR [rax]
  41b450:	mov    rcx,QWORD PTR [rsp+0x40]
  41b455:	test   ecx,ecx
  41b457:	jle    41b4f4 <fb_scope_table_remove@@Base+0x204>
  41b45d:	mov    rax,QWORD PTR [rsp+0x10]
  41b462:	test   r13,r13
  41b465:	jne    41b487 <fb_scope_table_remove@@Base+0x197>
  41b467:	jmp    41b410 <fb_scope_table_remove@@Base+0x120>
  41b469:	nop    DWORD PTR [rax+0x0]
  41b470:	lea    rsi,[rdx+0x1]
  41b474:	sub    rcx,rsi
  41b477:	add    rax,rdx
  41b47a:	add    rax,0x1
  41b47e:	mov    r13,QWORD PTR [r13+0x0]
  41b482:	test   r13,r13
  41b485:	je     41b410 <fb_scope_table_remove@@Base+0x120>
  41b487:	mov    rsi,QWORD PTR [r13+0x8]
  41b48b:	mov    rdx,QWORD PTR [rsi+0x8]
  41b48f:	cmp    rdx,rcx
  41b492:	ja     41b410 <fb_scope_table_remove@@Base+0x120>
  41b498:	test   rdx,rdx
  41b49b:	je     41b4e0 <fb_scope_table_remove@@Base+0x1f0>
  41b49d:	mov    rdi,QWORD PTR [rsi]
  41b4a0:	xor    esi,esi
  41b4a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b4ac:	nop    DWORD PTR [rax+0x0]
  41b4b0:	movzx  ebx,BYTE PTR [rdi+rsi*1]
  41b4b4:	cmp    bl,BYTE PTR [rax+rsi*1]
  41b4b7:	jne    41b410 <fb_scope_table_remove@@Base+0x120>
  41b4bd:	add    rsi,0x1
  41b4c1:	cmp    rsi,rdx
  41b4c4:	jb     41b4b0 <fb_scope_table_remove@@Base+0x1c0>
  41b4c6:	cmp    rdx,rcx
  41b4c9:	je     41b4e7 <fb_scope_table_remove@@Base+0x1f7>
  41b4cb:	cmp    BYTE PTR [rax+rsi*1],0x2e
  41b4cf:	je     41b470 <fb_scope_table_remove@@Base+0x180>
  41b4d1:	jmp    41b410 <fb_scope_table_remove@@Base+0x120>
  41b4d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b4e0:	xor    esi,esi
  41b4e2:	cmp    rdx,rcx
  41b4e5:	jne    41b4cb <fb_scope_table_remove@@Base+0x1db>
  41b4e7:	cmp    QWORD PTR [r13+0x0],0x0
  41b4ec:	jne    41b410 <fb_scope_table_remove@@Base+0x120>
  41b4f2:	jmp    41b555 <fb_scope_table_remove@@Base+0x265>
  41b4f4:	mov    r15d,DWORD PTR [rsp+0xc]
  41b4f9:	mov    rbp,QWORD PTR [rsp+0x10]
  41b4fe:	xchg   ax,ax
  41b500:	test   r13,r13
  41b503:	je     41b54c <fb_scope_table_remove@@Base+0x25c>
  41b505:	test   rbp,rbp
  41b508:	je     41b54c <fb_scope_table_remove@@Base+0x25c>
  41b50a:	mov    rax,QWORD PTR [r13+0x8]
  41b50e:	mov    rdx,QWORD PTR [rax+0x8]
  41b512:	mov    rcx,QWORD PTR [rbp+0x8]
  41b516:	cmp    rdx,QWORD PTR [rcx+0x8]
  41b51a:	jne    41b410 <fb_scope_table_remove@@Base+0x120>
  41b520:	mov    rdi,QWORD PTR [rax]
  41b523:	mov    rsi,QWORD PTR [rcx]
  41b526:	call   406060 <strncmp@plt>
  41b52b:	test   eax,eax
  41b52d:	jne    41b410 <fb_scope_table_remove@@Base+0x120>
  41b533:	mov    r13,QWORD PTR [r13+0x0]
  41b537:	mov    rbp,QWORD PTR [rbp+0x0]
  41b53b:	add    r15d,0xffffffff
  41b53f:	jne    41b500 <fb_scope_table_remove@@Base+0x210>
  41b541:	test   r13,r13
  41b544:	jne    41b410 <fb_scope_table_remove@@Base+0x120>
  41b54a:	jmp    41b555 <fb_scope_table_remove@@Base+0x265>
  41b54c:	or     r13,rbp
  41b54f:	jne    41b410 <fb_scope_table_remove@@Base+0x120>
  41b555:	mov    rax,QWORD PTR [rsp+0x18]
  41b55a:	mov    QWORD PTR [rax+r12*8],0x2
  41b562:	mov    rax,QWORD PTR [rsp+0x38]
  41b567:	add    QWORD PTR [rax+0x10],0xffffffffffffffff
  41b56c:	mov    rax,QWORD PTR [rsp+0x28]
  41b571:	jmp    41b575 <fb_scope_table_remove@@Base+0x285>
  41b573:	xor    eax,eax
  41b575:	add    rsp,0x48
  41b579:	pop    rbx
  41b57a:	pop    r12
  41b57c:	pop    r13
  41b57e:	pop    r14
  41b580:	pop    r15
  41b582:	pop    rbp
  41b583:	ret    
  41b584:	test   rsi,rsi
  41b587:	je     41b62c <fb_scope_table_remove@@Base+0x33c>
  41b58d:	mov    r8d,0x9e3779b1
  41b593:	xor    r14d,r14d
  41b596:	mov    r9d,edx
  41b599:	mov    r10,rsi
  41b59c:	nop    DWORD PTR [rax+0x0]
  41b5a0:	mov    rax,QWORD PTR [r10+0x8]
  41b5a4:	mov    rsi,QWORD PTR [rax+0x8]
  41b5a8:	add    rsi,0xffffffffffffffff
  41b5ac:	je     41b5f0 <fb_scope_table_remove@@Base+0x300>
  41b5ae:	mov    rdi,QWORD PTR [rax]
  41b5b1:	xor    ebp,ebp
  41b5b3:	mov    eax,0x2f692e57
  41b5b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b5c0:	movzx  ecx,BYTE PTR [rdi+rbp*1]
  41b5c4:	test   rcx,rcx
  41b5c7:	je     41b600 <fb_scope_table_remove@@Base+0x310>
  41b5c9:	mov    rbx,rax
  41b5cc:	shl    rbx,0x5
  41b5d0:	add    rbx,rax
  41b5d3:	xor    rbx,rcx
  41b5d6:	add    rbp,0x1
  41b5da:	mov    rax,rbx
  41b5dd:	cmp    rsi,rbp
  41b5e0:	jne    41b5c0 <fb_scope_table_remove@@Base+0x2d0>
  41b5e2:	jmp    41b603 <fb_scope_table_remove@@Base+0x313>
  41b5e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b5ee:	xchg   ax,ax
  41b5f0:	mov    ebx,0x2f692e57
  41b5f5:	jmp    41b603 <fb_scope_table_remove@@Base+0x313>
  41b5f7:	nop    WORD PTR [rax+rax*1+0x0]
  41b600:	mov    rbx,rax
  41b603:	xor    r14,rbx
  41b606:	xor    r14,0x2f693b52
  41b60d:	imul   r14,r8
  41b611:	add    r9d,0x1
  41b615:	je     41b3e7 <fb_scope_table_remove@@Base+0xf7>
  41b61b:	mov    r10,QWORD PTR [r10]
  41b61e:	test   r10,r10
  41b621:	jne    41b5a0 <fb_scope_table_remove@@Base+0x2b0>
  41b627:	jmp    41b3e7 <fb_scope_table_remove@@Base+0xf7>
  41b62c:	xor    r14d,r14d
  41b62f:	jmp    41b3e7 <fb_scope_table_remove@@Base+0xf7>
  41b634:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b63e:	xchg   ax,ax

000000000041b640 <fb_scope_table_remove_item@@Base>:
  41b640:	mov    rsi,QWORD PTR [rsi]
  41b643:	xor    edx,edx
  41b645:	jmp    41b300 <fb_scope_table_remove@@Base+0x10>
  41b64a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b650 <fb_scope_table_visit@@Base>:
  41b650:	push   r15
  41b652:	push   r14
  41b654:	push   r13
  41b656:	push   r12
  41b658:	push   rbx
  41b659:	mov    rax,QWORD PTR [rdi+0x18]
  41b65d:	test   rax,rax
  41b660:	je     41b696 <fb_scope_table_visit@@Base+0x46>
  41b662:	mov    r14,rdx
  41b665:	mov    r15,rsi
  41b668:	mov    r12,rdi
  41b66b:	mov    r13,QWORD PTR [rdi]
  41b66e:	xor    ebx,ebx
  41b670:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41b675:	mov    rcx,rsi
  41b678:	or     rcx,0x2
  41b67c:	cmp    rcx,0x2
  41b680:	je     41b68d <fb_scope_table_visit@@Base+0x3d>
  41b682:	mov    rdi,r14
  41b685:	call   r15
  41b688:	mov    rax,QWORD PTR [r12+0x18]
  41b68d:	add    rbx,0x1
  41b691:	cmp    rbx,rax
  41b694:	jb     41b670 <fb_scope_table_visit@@Base+0x20>
  41b696:	pop    rbx
  41b697:	pop    r12
  41b699:	pop    r13
  41b69b:	pop    r14
  41b69d:	pop    r15
  41b69f:	ret    

000000000041b6a0 <fb_schema_table_clear@@Base>:
  41b6a0:	push   rbx
  41b6a1:	mov    rbx,rdi
  41b6a4:	mov    rdi,QWORD PTR [rdi]
  41b6a7:	test   rdi,rdi
  41b6aa:	je     41b6b1 <fb_schema_table_clear@@Base+0x11>
  41b6ac:	call   406040 <free@plt>
  41b6b1:	vxorps xmm0,xmm0,xmm0
  41b6b5:	vmovups YMMWORD PTR [rbx],ymm0
  41b6b9:	pop    rbx
  41b6ba:	vzeroupper 
  41b6bd:	ret    
  41b6be:	xchg   ax,ax

000000000041b6c0 <fb_schema_table_destroy@@Base>:
  41b6c0:	push   r15
  41b6c2:	push   r14
  41b6c4:	push   r13
  41b6c6:	push   r12
  41b6c8:	push   rbx
  41b6c9:	mov    r12,rdi
  41b6cc:	test   rsi,rsi
  41b6cf:	je     41b716 <fb_schema_table_destroy@@Base+0x56>
  41b6d1:	mov    rax,QWORD PTR [r12+0x18]
  41b6d6:	test   rax,rax
  41b6d9:	je     41b716 <fb_schema_table_destroy@@Base+0x56>
  41b6db:	mov    r14,rdx
  41b6de:	mov    r15,rsi
  41b6e1:	mov    r13,QWORD PTR [r12]
  41b6e5:	xor    ebx,ebx
  41b6e7:	nop    WORD PTR [rax+rax*1+0x0]
  41b6f0:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41b6f5:	mov    rcx,rsi
  41b6f8:	or     rcx,0x2
  41b6fc:	cmp    rcx,0x2
  41b700:	je     41b70d <fb_schema_table_destroy@@Base+0x4d>
  41b702:	mov    rdi,r14
  41b705:	call   r15
  41b708:	mov    rax,QWORD PTR [r12+0x18]
  41b70d:	add    rbx,0x1
  41b711:	cmp    rbx,rax
  41b714:	jb     41b6f0 <fb_schema_table_destroy@@Base+0x30>
  41b716:	mov    rdi,QWORD PTR [r12]
  41b71a:	test   rdi,rdi
  41b71d:	je     41b724 <fb_schema_table_destroy@@Base+0x64>
  41b71f:	call   406040 <free@plt>
  41b724:	vxorps xmm0,xmm0,xmm0
  41b728:	vmovups YMMWORD PTR [r12],ymm0
  41b72e:	pop    rbx
  41b72f:	pop    r12
  41b731:	pop    r13
  41b733:	pop    r14
  41b735:	pop    r15
  41b737:	vzeroupper 
  41b73a:	ret    
  41b73b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041b740 <fb_schema_table_init@@Base>:
  41b740:	push   r14
  41b742:	push   rbx
  41b743:	push   rax
  41b744:	mov    r14,rdi
  41b747:	mov    eax,0x4
  41b74c:	nop    DWORD PTR [rax+0x0]
  41b750:	mov    rbx,rax
  41b753:	imul   rcx,rax,0xb3
  41b75a:	shr    rcx,0x8
  41b75e:	lea    rax,[rax+rax*1]
  41b762:	cmp    rcx,rsi
  41b765:	jb     41b750 <fb_schema_table_init@@Base+0x10>
  41b767:	mov    esi,0x8
  41b76c:	mov    rdi,rbx
  41b76f:	call   406150 <calloc@plt>
  41b774:	mov    QWORD PTR [r14],rax
  41b777:	test   rax,rax
  41b77a:	je     41b78e <fb_schema_table_init@@Base+0x4e>
  41b77c:	vxorps xmm0,xmm0,xmm0
  41b780:	vmovups XMMWORD PTR [r14+0x8],xmm0
  41b786:	mov    QWORD PTR [r14+0x18],rbx
  41b78a:	xor    eax,eax
  41b78c:	jmp    41b793 <fb_schema_table_init@@Base+0x53>
  41b78e:	mov    eax,0xffffffff
  41b793:	add    rsp,0x8
  41b797:	pop    rbx
  41b798:	pop    r14
  41b79a:	ret    
  41b79b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041b7a0 <fb_schema_table_resize@@Base>:
  41b7a0:	jmp    41b7b0 <fb_schema_table_resize@@Base+0x10>
  41b7a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b7ac:	nop    DWORD PTR [rax+0x0]
  41b7b0:	push   r15
  41b7b2:	push   r14
  41b7b4:	push   r12
  41b7b6:	push   rbx
  41b7b7:	sub    rsp,0x28
  41b7bb:	mov    r14,rdi
  41b7be:	mov    r12,QWORD PTR [rdi]
  41b7c1:	mov    rax,QWORD PTR [rdi+0x10]
  41b7c5:	cmp    rax,rsi
  41b7c8:	cmova  rsi,rax
  41b7cc:	mov    eax,0x4
  41b7d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b7db:	nop    DWORD PTR [rax+rax*1+0x0]
  41b7e0:	mov    rbx,rax
  41b7e3:	imul   rcx,rax,0xb3
  41b7ea:	shr    rcx,0x8
  41b7ee:	lea    rax,[rax+rax*1]
  41b7f2:	cmp    rcx,rsi
  41b7f5:	jb     41b7e0 <fb_schema_table_resize@@Base+0x40>
  41b7f7:	mov    esi,0x8
  41b7fc:	mov    rdi,rbx
  41b7ff:	call   406150 <calloc@plt>
  41b804:	mov    QWORD PTR [rsp+0x8],rax
  41b809:	test   rax,rax
  41b80c:	je     41b889 <fb_schema_table_resize@@Base+0xe9>
  41b80e:	vxorps xmm0,xmm0,xmm0
  41b812:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  41b818:	mov    QWORD PTR [rsp+0x20],rbx
  41b81d:	mov    rax,QWORD PTR [r14+0x18]
  41b821:	test   rax,rax
  41b824:	je     41b86d <fb_schema_table_resize@@Base+0xcd>
  41b826:	xor    ebx,ebx
  41b828:	lea    r15,[rsp+0x8]
  41b82d:	nop    DWORD PTR [rax]
  41b830:	mov    rcx,QWORD PTR [r12+rbx*8]
  41b834:	mov    rdx,rcx
  41b837:	or     rdx,0x2
  41b83b:	cmp    rdx,0x2
  41b83f:	je     41b861 <fb_schema_table_resize@@Base+0xc1>
  41b841:	mov    rsi,QWORD PTR [rcx+0xf8]
  41b848:	movsxd rdx,DWORD PTR [rcx+0x100]
  41b84f:	mov    r8d,0x3
  41b855:	mov    rdi,r15
  41b858:	call   41b8b0 <fb_schema_table_insert@@Base+0x10>
  41b85d:	mov    rax,QWORD PTR [r14+0x18]
  41b861:	add    rbx,0x1
  41b865:	cmp    rbx,rax
  41b868:	jb     41b830 <fb_schema_table_resize@@Base+0x90>
  41b86a:	mov    r12,QWORD PTR [r14]
  41b86d:	test   r12,r12
  41b870:	je     41b87a <fb_schema_table_resize@@Base+0xda>
  41b872:	mov    rdi,r12
  41b875:	call   406040 <free@plt>
  41b87a:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  41b880:	vmovups YMMWORD PTR [r14],ymm0
  41b885:	xor    eax,eax
  41b887:	jmp    41b88e <fb_schema_table_resize@@Base+0xee>
  41b889:	mov    eax,0xffffffff
  41b88e:	add    rsp,0x28
  41b892:	pop    rbx
  41b893:	pop    r12
  41b895:	pop    r14
  41b897:	pop    r15
  41b899:	vzeroupper 
  41b89c:	ret    
  41b89d:	nop    DWORD PTR [rax]

000000000041b8a0 <fb_schema_table_insert@@Base>:
  41b8a0:	jmp    41b8b0 <fb_schema_table_insert@@Base+0x10>
  41b8a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b8ac:	nop    DWORD PTR [rax+0x0]
  41b8b0:	push   rbp
  41b8b1:	push   r15
  41b8b3:	push   r14
  41b8b5:	push   r13
  41b8b7:	push   r12
  41b8b9:	push   rbx
  41b8ba:	sub    rsp,0x38
  41b8be:	mov    QWORD PTR [rsp+0x20],rsi
  41b8c3:	cmp    rcx,0x2
  41b8c7:	je     41ba45 <fb_schema_table_insert@@Base+0x1a5>
  41b8cd:	mov    r13,rcx
  41b8d0:	cmp    rcx,0x1
  41b8d4:	je     41ba64 <fb_schema_table_insert@@Base+0x1c4>
  41b8da:	test   r13,r13
  41b8dd:	je     41ba83 <fb_schema_table_insert@@Base+0x1e3>
  41b8e3:	mov    rbp,rdx
  41b8e6:	mov    rbx,rdi
  41b8e9:	mov    DWORD PTR [rsp+0xc],r8d
  41b8ee:	mov    rsi,QWORD PTR [rdi+0x10]
  41b8f2:	mov    r15,QWORD PTR [rdi+0x18]
  41b8f6:	imul   rax,r15,0xb3
  41b8fd:	shr    rax,0x8
  41b901:	cmp    rsi,rax
  41b904:	mov    QWORD PTR [rsp+0x10],rdx
  41b909:	jb     41b927 <fb_schema_table_insert@@Base+0x87>
  41b90b:	add    rsi,rsi
  41b90e:	mov    rdi,rbx
  41b911:	call   41b7b0 <fb_schema_table_resize@@Base+0x10>
  41b916:	test   eax,eax
  41b918:	jne    41baa2 <fb_schema_table_insert@@Base+0x202>
  41b91e:	mov    r15,QWORD PTR [rbx+0x18]
  41b922:	mov    rbp,QWORD PTR [rsp+0x10]
  41b927:	mov    r14,QWORD PTR [rbx]
  41b92a:	add    r15,0xffffffffffffffff
  41b92e:	lea    rcx,[rsp+0x30]
  41b933:	mov    edx,0x2f693b52
  41b938:	mov    rdi,QWORD PTR [rsp+0x20]
  41b93d:	mov    rsi,rbp
  41b940:	call   42cee0 <cmetrohash64_1@@Base>
  41b945:	mov    rcx,QWORD PTR [rsp+0x30]
  41b94a:	mov    r12d,ecx
  41b94d:	mov    eax,r15d
  41b950:	and    eax,ecx
  41b952:	mov    ecx,DWORD PTR [rsp+0xc]
  41b956:	or     ecx,0x1
  41b959:	cmp    ecx,0x3
  41b95c:	jne    41b993 <fb_schema_table_insert@@Base+0xf3>
  41b95e:	add    QWORD PTR [rbx+0x10],0x1
  41b963:	jmp    41b976 <fb_schema_table_insert@@Base+0xd6>
  41b965:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b96f:	nop
  41b970:	mov    rax,r12
  41b973:	and    rax,r15
  41b976:	add    r12,0x1
  41b97a:	mov    rcx,QWORD PTR [r14+rax*8]
  41b97e:	or     rcx,0x2
  41b982:	cmp    rcx,0x2
  41b986:	jne    41b970 <fb_schema_table_insert@@Base+0xd0>
  41b988:	lea    rbp,[r14+rax*8]
  41b98c:	xor    ebx,ebx
  41b98e:	jmp    41ba21 <fb_schema_table_insert@@Base+0x181>
  41b993:	mov    QWORD PTR [rsp+0x28],rbx
  41b998:	mov    QWORD PTR [rsp+0x18],r13
  41b99d:	add    r12,0x1
  41b9a1:	xor    r13d,r13d
  41b9a4:	mov    rdx,QWORD PTR [rsp+0x10]
  41b9a9:	jmp    41b9ba <fb_schema_table_insert@@Base+0x11a>
  41b9ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41b9b0:	mov    rax,r12
  41b9b3:	and    rax,r15
  41b9b6:	add    r12,0x1
  41b9ba:	lea    rbp,[r14+rax*8]
  41b9be:	mov    rbx,QWORD PTR [r14+rax*8]
  41b9c2:	cmp    rbx,0x2
  41b9c6:	je     41ba00 <fb_schema_table_insert@@Base+0x160>
  41b9c8:	test   rbx,rbx
  41b9cb:	je     41ba09 <fb_schema_table_insert@@Base+0x169>
  41b9cd:	movsxd rax,DWORD PTR [rbx+0x100]
  41b9d4:	cmp    rax,rdx
  41b9d7:	jne    41b9b0 <fb_schema_table_insert@@Base+0x110>
  41b9d9:	mov    rsi,QWORD PTR [rbx+0xf8]
  41b9e0:	mov    rdi,QWORD PTR [rsp+0x20]
  41b9e5:	call   406140 <memcmp@plt>
  41b9ea:	mov    rdx,QWORD PTR [rsp+0x10]
  41b9ef:	test   eax,eax
  41b9f1:	jne    41b9b0 <fb_schema_table_insert@@Base+0x110>
  41b9f3:	jmp    41ba37 <fb_schema_table_insert@@Base+0x197>
  41b9f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b9ff:	nop
  41ba00:	test   r13,r13
  41ba03:	cmove  r13,rbp
  41ba07:	jmp    41b9b0 <fb_schema_table_insert@@Base+0x110>
  41ba09:	test   r13,r13
  41ba0c:	cmovne rbp,r13
  41ba10:	mov    rax,QWORD PTR [rsp+0x28]
  41ba15:	add    QWORD PTR [rax+0x10],0x1
  41ba1a:	xor    ebx,ebx
  41ba1c:	mov    r13,QWORD PTR [rsp+0x18]
  41ba21:	mov    QWORD PTR [rbp+0x0],r13
  41ba25:	mov    rax,rbx
  41ba28:	add    rsp,0x38
  41ba2c:	pop    rbx
  41ba2d:	pop    r12
  41ba2f:	pop    r13
  41ba31:	pop    r14
  41ba33:	pop    r15
  41ba35:	pop    rbp
  41ba36:	ret    
  41ba37:	cmp    DWORD PTR [rsp+0xc],0x0
  41ba3c:	mov    r13,QWORD PTR [rsp+0x18]
  41ba41:	jne    41ba25 <fb_schema_table_insert@@Base+0x185>
  41ba43:	jmp    41ba21 <fb_schema_table_insert@@Base+0x181>
  41ba45:	lea    rdi,[rip+0x2c40f]        # 447e5b <str_set_deleted@@Base+0xd3>
  41ba4c:	lea    rsi,[rip+0x2c354]        # 447da7 <str_set_deleted@@Base+0x1f>
  41ba53:	lea    rcx,[rip+0x2c3b7]        # 447e11 <str_set_deleted@@Base+0x89>
  41ba5a:	mov    edx,0x73
  41ba5f:	call   406100 <__assert_fail@plt>
  41ba64:	lea    rdi,[rip+0x2c407]        # 447e72 <str_set_deleted@@Base+0xea>
  41ba6b:	lea    rsi,[rip+0x2c335]        # 447da7 <str_set_deleted@@Base+0x1f>
  41ba72:	lea    rcx,[rip+0x2c398]        # 447e11 <str_set_deleted@@Base+0x89>
  41ba79:	mov    edx,0x74
  41ba7e:	call   406100 <__assert_fail@plt>
  41ba83:	lea    rdi,[rip+0x2c306]        # 447d90 <str_set_deleted@@Base+0x8>
  41ba8a:	lea    rsi,[rip+0x2c316]        # 447da7 <str_set_deleted@@Base+0x1f>
  41ba91:	lea    rcx,[rip+0x2c379]        # 447e11 <str_set_deleted@@Base+0x89>
  41ba98:	mov    edx,0x72
  41ba9d:	call   406100 <__assert_fail@plt>
  41baa2:	mov    rax,QWORD PTR [rip+0x3754f]        # 452ff8 <stderr@GLIBC_2.2.5>
  41baa9:	mov    rdi,QWORD PTR [rax]
  41baac:	lea    rsi,[rip+0x2c3d4]        # 447e87 <str_set_deleted@@Base+0xff>
  41bab3:	lea    rdx,[rip+0x2c3e4]        # 447e9e <str_set_deleted@@Base+0x116>
  41baba:	xor    eax,eax
  41babc:	call   406180 <fprintf@plt>
  41bac1:	mov    edi,0x1
  41bac6:	call   406210 <exit@plt>
  41bacb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041bad0 <fb_schema_table_insert_item@@Base>:
  41bad0:	mov    eax,edx
  41bad2:	mov    rcx,rsi
  41bad5:	mov    rsi,QWORD PTR [rsi+0xf8]
  41badc:	movsxd rdx,DWORD PTR [rcx+0x100]
  41bae3:	mov    r8d,eax
  41bae6:	jmp    41b8b0 <fb_schema_table_insert@@Base+0x10>
  41baeb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041baf0 <fb_schema_table_find@@Base>:
  41baf0:	push   rbp
  41baf1:	push   r15
  41baf3:	push   r14
  41baf5:	push   r13
  41baf7:	push   r12
  41baf9:	push   rbx
  41bafa:	push   rax
  41bafb:	mov    r12,QWORD PTR [rdi]
  41bafe:	test   r12,r12
  41bb01:	je     41bb6d <fb_schema_table_find@@Base+0x7d>
  41bb03:	mov    r15,rdx
  41bb06:	mov    r14,rsi
  41bb09:	mov    r13,QWORD PTR [rdi+0x18]
  41bb0d:	add    r13,0xffffffffffffffff
  41bb11:	mov    rcx,rsp
  41bb14:	mov    edx,0x2f693b52
  41bb19:	mov    rdi,rsi
  41bb1c:	mov    rsi,r15
  41bb1f:	call   42cee0 <cmetrohash64_1@@Base>
  41bb24:	mov    ebp,DWORD PTR [rsp]
  41bb27:	jmp    41bb34 <fb_schema_table_find@@Base+0x44>
  41bb29:	nop    DWORD PTR [rax+0x0]
  41bb30:	add    rbp,0x1
  41bb34:	mov    rax,rbp
  41bb37:	and    rax,r13
  41bb3a:	mov    rbx,QWORD PTR [r12+rax*8]
  41bb3e:	cmp    rbx,0x2
  41bb42:	je     41bb30 <fb_schema_table_find@@Base+0x40>
  41bb44:	test   rbx,rbx
  41bb47:	je     41bb6d <fb_schema_table_find@@Base+0x7d>
  41bb49:	movsxd rax,DWORD PTR [rbx+0x100]
  41bb50:	cmp    rax,r15
  41bb53:	jne    41bb30 <fb_schema_table_find@@Base+0x40>
  41bb55:	mov    rsi,QWORD PTR [rbx+0xf8]
  41bb5c:	mov    rdi,r14
  41bb5f:	mov    rdx,r15
  41bb62:	call   406140 <memcmp@plt>
  41bb67:	test   eax,eax
  41bb69:	jne    41bb30 <fb_schema_table_find@@Base+0x40>
  41bb6b:	jmp    41bb6f <fb_schema_table_find@@Base+0x7f>
  41bb6d:	xor    ebx,ebx
  41bb6f:	mov    rax,rbx
  41bb72:	add    rsp,0x8
  41bb76:	pop    rbx
  41bb77:	pop    r12
  41bb79:	pop    r13
  41bb7b:	pop    r14
  41bb7d:	pop    r15
  41bb7f:	pop    rbp
  41bb80:	ret    
  41bb81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bb8b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041bb90 <fb_schema_table_find_item@@Base>:
  41bb90:	push   rbp
  41bb91:	push   r15
  41bb93:	push   r14
  41bb95:	push   r13
  41bb97:	push   r12
  41bb99:	push   rbx
  41bb9a:	push   rax
  41bb9b:	mov    r12,QWORD PTR [rdi]
  41bb9e:	test   r12,r12
  41bba1:	je     41bc1a <fb_schema_table_find_item@@Base+0x8a>
  41bba3:	mov    r14,QWORD PTR [rsi+0xf8]
  41bbaa:	movsxd r15,DWORD PTR [rsi+0x100]
  41bbb1:	mov    r13,QWORD PTR [rdi+0x18]
  41bbb5:	add    r13,0xffffffffffffffff
  41bbb9:	mov    rcx,rsp
  41bbbc:	mov    edx,0x2f693b52
  41bbc1:	mov    rdi,r14
  41bbc4:	mov    rsi,r15
  41bbc7:	call   42cee0 <cmetrohash64_1@@Base>
  41bbcc:	mov    ebp,DWORD PTR [rsp]
  41bbcf:	jmp    41bbe4 <fb_schema_table_find_item@@Base+0x54>
  41bbd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bbdb:	nop    DWORD PTR [rax+rax*1+0x0]
  41bbe0:	add    rbp,0x1
  41bbe4:	mov    rax,rbp
  41bbe7:	and    rax,r13
  41bbea:	mov    rbx,QWORD PTR [r12+rax*8]
  41bbee:	cmp    rbx,0x2
  41bbf2:	je     41bbe0 <fb_schema_table_find_item@@Base+0x50>
  41bbf4:	test   rbx,rbx
  41bbf7:	je     41bc1a <fb_schema_table_find_item@@Base+0x8a>
  41bbf9:	cmp    DWORD PTR [rbx+0x100],r15d
  41bc00:	jne    41bbe0 <fb_schema_table_find_item@@Base+0x50>
  41bc02:	mov    rsi,QWORD PTR [rbx+0xf8]
  41bc09:	mov    rdi,r14
  41bc0c:	mov    rdx,r15
  41bc0f:	call   406140 <memcmp@plt>
  41bc14:	test   eax,eax
  41bc16:	jne    41bbe0 <fb_schema_table_find_item@@Base+0x50>
  41bc18:	jmp    41bc1c <fb_schema_table_find_item@@Base+0x8c>
  41bc1a:	xor    ebx,ebx
  41bc1c:	mov    rax,rbx
  41bc1f:	add    rsp,0x8
  41bc23:	pop    rbx
  41bc24:	pop    r12
  41bc26:	pop    r13
  41bc28:	pop    r14
  41bc2a:	pop    r15
  41bc2c:	pop    rbp
  41bc2d:	ret    
  41bc2e:	xchg   ax,ax

000000000041bc30 <fb_schema_table_remove@@Base>:
  41bc30:	push   rbp
  41bc31:	push   r15
  41bc33:	push   r14
  41bc35:	push   r13
  41bc37:	push   r12
  41bc39:	push   rbx
  41bc3a:	sub    rsp,0x18
  41bc3e:	mov    r13,QWORD PTR [rdi]
  41bc41:	test   r13,r13
  41bc44:	je     41bcd2 <fb_schema_table_remove@@Base+0xa2>
  41bc4a:	mov    r12,rdx
  41bc4d:	mov    QWORD PTR [rsp],rdi
  41bc51:	mov    rbp,QWORD PTR [rdi+0x18]
  41bc55:	add    rbp,0xffffffffffffffff
  41bc59:	lea    rcx,[rsp+0x10]
  41bc5e:	mov    edx,0x2f693b52
  41bc63:	mov    QWORD PTR [rsp+0x8],rsi
  41bc68:	mov    rdi,rsi
  41bc6b:	mov    rsi,r12
  41bc6e:	call   42cee0 <cmetrohash64_1@@Base>
  41bc73:	mov    r15d,DWORD PTR [rsp+0x10]
  41bc78:	jmp    41bc84 <fb_schema_table_remove@@Base+0x54>
  41bc7a:	nop    WORD PTR [rax+rax*1+0x0]
  41bc80:	add    r15,0x1
  41bc84:	mov    r14,r15
  41bc87:	and    r14,rbp
  41bc8a:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41bc8f:	cmp    rbx,0x2
  41bc93:	je     41bc80 <fb_schema_table_remove@@Base+0x50>
  41bc95:	test   rbx,rbx
  41bc98:	je     41bcd2 <fb_schema_table_remove@@Base+0xa2>
  41bc9a:	movsxd rax,DWORD PTR [rbx+0x100]
  41bca1:	cmp    rax,r12
  41bca4:	jne    41bc80 <fb_schema_table_remove@@Base+0x50>
  41bca6:	mov    rsi,QWORD PTR [rbx+0xf8]
  41bcad:	mov    rdi,QWORD PTR [rsp+0x8]
  41bcb2:	mov    rdx,r12
  41bcb5:	call   406140 <memcmp@plt>
  41bcba:	test   eax,eax
  41bcbc:	jne    41bc80 <fb_schema_table_remove@@Base+0x50>
  41bcbe:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  41bcc7:	mov    rax,QWORD PTR [rsp]
  41bccb:	add    QWORD PTR [rax+0x10],0xffffffffffffffff
  41bcd0:	jmp    41bcd4 <fb_schema_table_remove@@Base+0xa4>
  41bcd2:	xor    ebx,ebx
  41bcd4:	mov    rax,rbx
  41bcd7:	add    rsp,0x18
  41bcdb:	pop    rbx
  41bcdc:	pop    r12
  41bcde:	pop    r13
  41bce0:	pop    r14
  41bce2:	pop    r15
  41bce4:	pop    rbp
  41bce5:	ret    
  41bce6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041bcf0 <fb_schema_table_remove_item@@Base>:
  41bcf0:	push   rbp
  41bcf1:	push   r15
  41bcf3:	push   r14
  41bcf5:	push   r13
  41bcf7:	push   r12
  41bcf9:	push   rbx
  41bcfa:	sub    rsp,0x18
  41bcfe:	mov    r13,QWORD PTR [rdi]
  41bd01:	test   r13,r13
  41bd04:	je     41bd9f <fb_schema_table_remove_item@@Base+0xaf>
  41bd0a:	mov    rax,QWORD PTR [rsi+0xf8]
  41bd11:	movsxd r12,DWORD PTR [rsi+0x100]
  41bd18:	mov    QWORD PTR [rsp],rdi
  41bd1c:	mov    rbp,QWORD PTR [rdi+0x18]
  41bd20:	add    rbp,0xffffffffffffffff
  41bd24:	lea    rcx,[rsp+0x10]
  41bd29:	mov    edx,0x2f693b52
  41bd2e:	mov    QWORD PTR [rsp+0x8],rax
  41bd33:	mov    rdi,rax
  41bd36:	mov    rsi,r12
  41bd39:	call   42cee0 <cmetrohash64_1@@Base>
  41bd3e:	mov    r15d,DWORD PTR [rsp+0x10]
  41bd43:	jmp    41bd54 <fb_schema_table_remove_item@@Base+0x64>
  41bd45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bd4f:	nop
  41bd50:	add    r15,0x1
  41bd54:	mov    r14,r15
  41bd57:	and    r14,rbp
  41bd5a:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41bd5f:	cmp    rbx,0x2
  41bd63:	je     41bd50 <fb_schema_table_remove_item@@Base+0x60>
  41bd65:	test   rbx,rbx
  41bd68:	je     41bd9f <fb_schema_table_remove_item@@Base+0xaf>
  41bd6a:	cmp    DWORD PTR [rbx+0x100],r12d
  41bd71:	jne    41bd50 <fb_schema_table_remove_item@@Base+0x60>
  41bd73:	mov    rsi,QWORD PTR [rbx+0xf8]
  41bd7a:	mov    rdi,QWORD PTR [rsp+0x8]
  41bd7f:	mov    rdx,r12
  41bd82:	call   406140 <memcmp@plt>
  41bd87:	test   eax,eax
  41bd89:	jne    41bd50 <fb_schema_table_remove_item@@Base+0x60>
  41bd8b:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  41bd94:	mov    rax,QWORD PTR [rsp]
  41bd98:	add    QWORD PTR [rax+0x10],0xffffffffffffffff
  41bd9d:	jmp    41bda1 <fb_schema_table_remove_item@@Base+0xb1>
  41bd9f:	xor    ebx,ebx
  41bda1:	mov    rax,rbx
  41bda4:	add    rsp,0x18
  41bda8:	pop    rbx
  41bda9:	pop    r12
  41bdab:	pop    r13
  41bdad:	pop    r14
  41bdaf:	pop    r15
  41bdb1:	pop    rbp
  41bdb2:	ret    
  41bdb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bdbd:	nop    DWORD PTR [rax]

000000000041bdc0 <fb_schema_table_visit@@Base>:
  41bdc0:	push   r15
  41bdc2:	push   r14
  41bdc4:	push   r13
  41bdc6:	push   r12
  41bdc8:	push   rbx
  41bdc9:	mov    rax,QWORD PTR [rdi+0x18]
  41bdcd:	test   rax,rax
  41bdd0:	je     41be06 <fb_schema_table_visit@@Base+0x46>
  41bdd2:	mov    r14,rdx
  41bdd5:	mov    r15,rsi
  41bdd8:	mov    r12,rdi
  41bddb:	mov    r13,QWORD PTR [rdi]
  41bdde:	xor    ebx,ebx
  41bde0:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41bde5:	mov    rcx,rsi
  41bde8:	or     rcx,0x2
  41bdec:	cmp    rcx,0x2
  41bdf0:	je     41bdfd <fb_schema_table_visit@@Base+0x3d>
  41bdf2:	mov    rdi,r14
  41bdf5:	call   r15
  41bdf8:	mov    rax,QWORD PTR [r12+0x18]
  41bdfd:	add    rbx,0x1
  41be01:	cmp    rbx,rax
  41be04:	jb     41bde0 <fb_schema_table_visit@@Base+0x20>
  41be06:	pop    rbx
  41be07:	pop    r12
  41be09:	pop    r13
  41be0b:	pop    r14
  41be0d:	pop    r15
  41be0f:	ret    

000000000041be10 <__flatcc_fb_copy_path_n@@Base>:
  41be10:	push   r15
  41be12:	push   r14
  41be14:	push   rbx
  41be15:	mov    r15,rsi
  41be18:	mov    r14,rdi
  41be1b:	xor    esi,esi
  41be1d:	mov    rdx,r15
  41be20:	call   406130 <memchr@plt>
  41be25:	mov    rbx,rax
  41be28:	sub    rbx,r14
  41be2b:	test   rax,rax
  41be2e:	cmove  rbx,r15
  41be32:	lea    rdi,[rbx+0x1]
  41be36:	call   4061b0 <malloc@plt>
  41be3b:	mov    r15,rax
  41be3e:	test   rax,rax
  41be41:	je     41be56 <__flatcc_fb_copy_path_n@@Base+0x46>
  41be43:	mov    rdi,r15
  41be46:	mov    rsi,r14
  41be49:	mov    rdx,rbx
  41be4c:	call   4061a0 <memcpy@plt>
  41be51:	mov    BYTE PTR [r15+rbx*1],0x0
  41be56:	mov    rax,r15
  41be59:	pop    rbx
  41be5a:	pop    r14
  41be5c:	pop    r15
  41be5e:	ret    
  41be5f:	nop

000000000041be60 <__flatcc_fb_copy_path@@Base>:
  41be60:	push   r15
  41be62:	push   r14
  41be64:	push   rbx
  41be65:	mov    r14,rdi
  41be68:	call   4060d0 <strlen@plt>
  41be6d:	mov    r15,rax
  41be70:	lea    rdi,[rax+0x1]
  41be74:	call   4061b0 <malloc@plt>
  41be79:	mov    rbx,rax
  41be7c:	test   rax,rax
  41be7f:	je     41be94 <__flatcc_fb_copy_path@@Base+0x34>
  41be81:	mov    rdi,rbx
  41be84:	mov    rsi,r14
  41be87:	mov    rdx,r15
  41be8a:	call   4061a0 <memcpy@plt>
  41be8f:	mov    BYTE PTR [rbx+r15*1],0x0
  41be94:	mov    rax,rbx
  41be97:	pop    rbx
  41be98:	pop    r14
  41be9a:	pop    r15
  41be9c:	ret    
  41be9d:	nop    DWORD PTR [rax]

000000000041bea0 <__flatcc_fb_chomp@@Base>:
  41bea0:	push   r15
  41bea2:	push   r14
  41bea4:	push   r12
  41bea6:	push   rbx
  41bea7:	push   rax
  41bea8:	mov    r14,rdx
  41beab:	mov    rbx,rsi
  41beae:	mov    r12,rdi
  41beb1:	test   rdx,rdx
  41beb4:	je     41bef4 <__flatcc_fb_chomp@@Base+0x54>
  41beb6:	mov    rdi,r14
  41beb9:	call   4060d0 <strlen@plt>
  41bebe:	mov    r15,rax
  41bec1:	cmp    r15,rbx
  41bec4:	jae    41bee5 <__flatcc_fb_chomp@@Base+0x45>
  41bec6:	add    r12,rbx
  41bec9:	sub    r12,r15
  41becc:	mov    rdi,r12
  41becf:	mov    rsi,r14
  41bed2:	mov    rdx,r15
  41bed5:	call   406060 <strncmp@plt>
  41beda:	xor    ecx,ecx
  41bedc:	test   eax,eax
  41bede:	cmove  rcx,r15
  41bee2:	sub    rbx,rcx
  41bee5:	mov    rax,rbx
  41bee8:	add    rsp,0x8
  41beec:	pop    rbx
  41beed:	pop    r12
  41beef:	pop    r14
  41bef1:	pop    r15
  41bef3:	ret    
  41bef4:	xor    r15d,r15d
  41bef7:	cmp    r15,rbx
  41befa:	jb     41bec6 <__flatcc_fb_chomp@@Base+0x26>
  41befc:	jmp    41bee5 <__flatcc_fb_chomp@@Base+0x45>
  41befe:	xchg   ax,ax

000000000041bf00 <__flatcc_fb_create_join_path_n@@Base>:
  41bf00:	push   rbp
  41bf01:	push   r15
  41bf03:	push   r14
  41bf05:	push   r13
  41bf07:	push   r12
  41bf09:	push   rbx
  41bf0a:	sub    rsp,0x28
  41bf0e:	mov    ebp,r9d
  41bf11:	mov    r14,rcx
  41bf14:	mov    r15,rdx
  41bf17:	mov    rbx,rsi
  41bf1a:	mov    r12,rdi
  41bf1d:	test   r8,r8
  41bf20:	mov    QWORD PTR [rsp+0x20],r8
  41bf25:	je     41bf55 <__flatcc_fb_create_join_path_n@@Base+0x55>
  41bf27:	mov    rdi,r8
  41bf2a:	call   4060d0 <strlen@plt>
  41bf2f:	test   r12,r12
  41bf32:	je     41bf5c <__flatcc_fb_create_join_path_n@@Base+0x5c>
  41bf34:	test   r14,r14
  41bf37:	je     41bf5e <__flatcc_fb_create_join_path_n@@Base+0x5e>
  41bf39:	mov    cl,BYTE PTR [r15]
  41bf3c:	cmp    cl,0x2f
  41bf3f:	je     41bf5c <__flatcc_fb_create_join_path_n@@Base+0x5c>
  41bf41:	cmp    cl,0x5c
  41bf44:	je     41bf5c <__flatcc_fb_create_join_path_n@@Base+0x5c>
  41bf46:	cmp    r14,0x2
  41bf4a:	jb     41bf5e <__flatcc_fb_create_join_path_n@@Base+0x5e>
  41bf4c:	cmp    BYTE PTR [r15+0x1],0x3a
  41bf51:	je     41bf5c <__flatcc_fb_create_join_path_n@@Base+0x5c>
  41bf53:	jmp    41bf5e <__flatcc_fb_create_join_path_n@@Base+0x5e>
  41bf55:	xor    eax,eax
  41bf57:	test   r12,r12
  41bf5a:	jne    41bf34 <__flatcc_fb_create_join_path_n@@Base+0x34>
  41bf5c:	xor    ebx,ebx
  41bf5e:	test   ebp,ebp
  41bf60:	mov    QWORD PTR [rsp+0x18],r15
  41bf65:	je     41bf7b <__flatcc_fb_create_join_path_n@@Base+0x7b>
  41bf67:	test   rbx,rbx
  41bf6a:	je     41bf7b <__flatcc_fb_create_join_path_n@@Base+0x7b>
  41bf6c:	mov    cl,BYTE PTR [r12+rbx*1-0x1]
  41bf71:	cmp    cl,0x5c
  41bf74:	je     41bf7b <__flatcc_fb_create_join_path_n@@Base+0x7b>
  41bf76:	cmp    cl,0x2f
  41bf79:	jne    41bf7d <__flatcc_fb_create_join_path_n@@Base+0x7d>
  41bf7b:	xor    ebp,ebp
  41bf7d:	mov    r15,r12
  41bf80:	movsxd rdi,ebp
  41bf83:	mov    QWORD PTR [rsp+0x8],r14
  41bf88:	add    r14,rbx
  41bf8b:	add    r14,0x1
  41bf8f:	mov    QWORD PTR [rsp+0x10],rax
  41bf94:	lea    r13,[r14+rax*1]
  41bf98:	add    rdi,r13
  41bf9b:	call   4061b0 <malloc@plt>
  41bfa0:	mov    r12,rax
  41bfa3:	test   rax,rax
  41bfa6:	je     41c009 <__flatcc_fb_create_join_path_n@@Base+0x109>
  41bfa8:	mov    rdi,r12
  41bfab:	mov    rsi,r15
  41bfae:	mov    rdx,rbx
  41bfb1:	call   4061a0 <memcpy@plt>
  41bfb6:	test   ebp,ebp
  41bfb8:	je     41bfcf <__flatcc_fb_create_join_path_n@@Base+0xcf>
  41bfba:	mov    BYTE PTR [r12+rbx*1],0x2f
  41bfbf:	add    rbx,0x1
  41bfc3:	mov    rdx,QWORD PTR [rsp+0x8]
  41bfc8:	mov    rbp,QWORD PTR [rsp+0x10]
  41bfcd:	jmp    41bfe1 <__flatcc_fb_create_join_path_n@@Base+0xe1>
  41bfcf:	mov    rdx,QWORD PTR [rsp+0x8]
  41bfd4:	lea    r14,[rbx+rdx*1]
  41bfd8:	mov    rbp,QWORD PTR [rsp+0x10]
  41bfdd:	lea    r13,[r14+rbp*1]
  41bfe1:	add    rbx,r12
  41bfe4:	mov    rdi,rbx
  41bfe7:	mov    rsi,QWORD PTR [rsp+0x18]
  41bfec:	call   4061a0 <memcpy@plt>
  41bff1:	add    r14,r12
  41bff4:	mov    rdi,r14
  41bff7:	mov    rsi,QWORD PTR [rsp+0x20]
  41bffc:	mov    rdx,rbp
  41bfff:	call   4061a0 <memcpy@plt>
  41c004:	mov    BYTE PTR [r12+r13*1],0x0
  41c009:	mov    rax,r12
  41c00c:	add    rsp,0x28
  41c010:	pop    rbx
  41c011:	pop    r12
  41c013:	pop    r13
  41c015:	pop    r14
  41c017:	pop    r15
  41c019:	pop    rbp
  41c01a:	ret    
  41c01b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c020 <__flatcc_fb_create_join_path@@Base>:
  41c020:	push   rbp
  41c021:	push   r15
  41c023:	push   r14
  41c025:	push   r12
  41c027:	push   rbx
  41c028:	mov    r14d,ecx
  41c02b:	mov    r15,rdx
  41c02e:	mov    rbp,rsi
  41c031:	mov    rbx,rdi
  41c034:	test   rdi,rdi
  41c037:	je     41c056 <__flatcc_fb_create_join_path@@Base+0x36>
  41c039:	mov    rdi,rbx
  41c03c:	call   4060d0 <strlen@plt>
  41c041:	mov    r12,rax
  41c044:	test   rbp,rbp
  41c047:	je     41c05e <__flatcc_fb_create_join_path@@Base+0x3e>
  41c049:	mov    rdi,rbp
  41c04c:	call   4060d0 <strlen@plt>
  41c051:	mov    rcx,rax
  41c054:	jmp    41c060 <__flatcc_fb_create_join_path@@Base+0x40>
  41c056:	xor    r12d,r12d
  41c059:	test   rbp,rbp
  41c05c:	jne    41c049 <__flatcc_fb_create_join_path@@Base+0x29>
  41c05e:	xor    ecx,ecx
  41c060:	mov    rdi,rbx
  41c063:	mov    rsi,r12
  41c066:	mov    rdx,rbp
  41c069:	mov    r8,r15
  41c06c:	mov    r9d,r14d
  41c06f:	pop    rbx
  41c070:	pop    r12
  41c072:	pop    r14
  41c074:	pop    r15
  41c076:	pop    rbp
  41c077:	jmp    41bf00 <__flatcc_fb_create_join_path_n@@Base>
  41c07c:	nop    DWORD PTR [rax+0x0]

000000000041c080 <__flatcc_fb_create_path_ext_n@@Base>:
  41c080:	push   rbp
  41c081:	push   r15
  41c083:	push   r14
  41c085:	push   r13
  41c087:	push   r12
  41c089:	push   rbx
  41c08a:	push   rax
  41c08b:	mov    r14,rdx
  41c08e:	mov    r13,rsi
  41c091:	mov    r15,rdi
  41c094:	test   rdx,rdx
  41c097:	je     41c0a6 <__flatcc_fb_create_path_ext_n@@Base+0x26>
  41c099:	mov    rdi,r14
  41c09c:	call   4060d0 <strlen@plt>
  41c0a1:	mov    r12,rax
  41c0a4:	jmp    41c0a9 <__flatcc_fb_create_path_ext_n@@Base+0x29>
  41c0a6:	xor    r12d,r12d
  41c0a9:	lea    rdi,[r12+r13*1]
  41c0ad:	add    rdi,0x1
  41c0b1:	call   4061b0 <malloc@plt>
  41c0b6:	mov    rbx,rax
  41c0b9:	test   rax,rax
  41c0bc:	je     41c0e5 <__flatcc_fb_create_path_ext_n@@Base+0x65>
  41c0be:	lea    rbp,[r12+r13*1]
  41c0c2:	mov    rdi,rbx
  41c0c5:	mov    rsi,r15
  41c0c8:	mov    rdx,r13
  41c0cb:	call   4061a0 <memcpy@plt>
  41c0d0:	mov    rdi,rbx
  41c0d3:	add    rdi,r13
  41c0d6:	mov    rsi,r14
  41c0d9:	mov    rdx,r12
  41c0dc:	call   4061a0 <memcpy@plt>
  41c0e1:	mov    BYTE PTR [rbx+rbp*1],0x0
  41c0e5:	mov    rax,rbx
  41c0e8:	add    rsp,0x8
  41c0ec:	pop    rbx
  41c0ed:	pop    r12
  41c0ef:	pop    r13
  41c0f1:	pop    r14
  41c0f3:	pop    r15
  41c0f5:	pop    rbp
  41c0f6:	ret    
  41c0f7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041c100 <__flatcc_fb_create_path_ext@@Base>:
  41c100:	push   rbp
  41c101:	push   r15
  41c103:	push   r14
  41c105:	push   r13
  41c107:	push   r12
  41c109:	push   rbx
  41c10a:	push   rax
  41c10b:	mov    r14,rsi
  41c10e:	mov    r15,rdi
  41c111:	test   rdi,rdi
  41c114:	je     41c133 <__flatcc_fb_create_path_ext@@Base+0x33>
  41c116:	mov    rdi,r15
  41c119:	call   4060d0 <strlen@plt>
  41c11e:	mov    r12,rax
  41c121:	test   r14,r14
  41c124:	je     41c13b <__flatcc_fb_create_path_ext@@Base+0x3b>
  41c126:	mov    rdi,r14
  41c129:	call   4060d0 <strlen@plt>
  41c12e:	mov    r13,rax
  41c131:	jmp    41c13e <__flatcc_fb_create_path_ext@@Base+0x3e>
  41c133:	xor    r12d,r12d
  41c136:	test   r14,r14
  41c139:	jne    41c126 <__flatcc_fb_create_path_ext@@Base+0x26>
  41c13b:	xor    r13d,r13d
  41c13e:	lea    rdi,[r12+r13*1]
  41c142:	add    rdi,0x1
  41c146:	call   4061b0 <malloc@plt>
  41c14b:	mov    rbx,rax
  41c14e:	test   rax,rax
  41c151:	je     41c17a <__flatcc_fb_create_path_ext@@Base+0x7a>
  41c153:	lea    rbp,[r12+r13*1]
  41c157:	mov    rdi,rbx
  41c15a:	mov    rsi,r15
  41c15d:	mov    rdx,r12
  41c160:	call   4061a0 <memcpy@plt>
  41c165:	mov    rdi,rbx
  41c168:	add    rdi,r12
  41c16b:	mov    rsi,r14
  41c16e:	mov    rdx,r13
  41c171:	call   4061a0 <memcpy@plt>
  41c176:	mov    BYTE PTR [rbx+rbp*1],0x0
  41c17a:	mov    rax,rbx
  41c17d:	add    rsp,0x8
  41c181:	pop    rbx
  41c182:	pop    r12
  41c184:	pop    r13
  41c186:	pop    r14
  41c188:	pop    r15
  41c18a:	pop    rbp
  41c18b:	ret    
  41c18c:	nop    DWORD PTR [rax+0x0]

000000000041c190 <__flatcc_fb_create_make_path_n@@Base>:
  41c190:	push   rbp
  41c191:	push   r15
  41c193:	push   r14
  41c195:	push   r13
  41c197:	push   r12
  41c199:	push   rbx
  41c19a:	push   rax
  41c19b:	mov    rcx,rsi
  41c19e:	mov    r14,rdi
  41c1a1:	test   rsi,rsi
  41c1a4:	je     41c1e2 <__flatcc_fb_create_make_path_n@@Base+0x52>
  41c1a6:	cmp    rcx,0x1
  41c1aa:	jne    41c233 <__flatcc_fb_create_make_path_n@@Base+0xa3>
  41c1b0:	mov    bl,BYTE PTR [r14]
  41c1b3:	cmp    bl,0x5c
  41c1b6:	je     41c1bd <__flatcc_fb_create_make_path_n@@Base+0x2d>
  41c1b8:	cmp    bl,0x20
  41c1bb:	jne    41c1e2 <__flatcc_fb_create_make_path_n@@Base+0x52>
  41c1bd:	mov    edi,0x3
  41c1c2:	call   4061b0 <malloc@plt>
  41c1c7:	test   rax,rax
  41c1ca:	je     41c3c3 <__flatcc_fb_create_make_path_n@@Base+0x233>
  41c1d0:	mov    r15,rax
  41c1d3:	mov    BYTE PTR [rax],0x5c
  41c1d6:	mov    BYTE PTR [rax+0x1],bl
  41c1d9:	mov    BYTE PTR [rax+0x2],0x0
  41c1dd:	jmp    41c464 <__flatcc_fb_create_make_path_n@@Base+0x2d4>
  41c1e2:	xor    r15d,r15d
  41c1e5:	xor    esi,esi
  41c1e7:	mov    rdi,r14
  41c1ea:	mov    rdx,rcx
  41c1ed:	mov    rbx,rcx
  41c1f0:	call   406130 <memchr@plt>
  41c1f5:	mov    r12,rax
  41c1f8:	sub    r12,r14
  41c1fb:	test   rax,rax
  41c1fe:	cmove  r12,rbx
  41c202:	lea    rdi,[r12+0x1]
  41c207:	call   4061b0 <malloc@plt>
  41c20c:	test   rax,rax
  41c20f:	je     41c464 <__flatcc_fb_create_make_path_n@@Base+0x2d4>
  41c215:	mov    rbx,rax
  41c218:	mov    rdi,rax
  41c21b:	mov    rsi,r14
  41c21e:	mov    rdx,r12
  41c221:	call   4061a0 <memcpy@plt>
  41c226:	mov    BYTE PTR [rbx+r12*1],0x0
  41c22b:	mov    r15,rbx
  41c22e:	jmp    41c464 <__flatcc_fb_create_make_path_n@@Base+0x2d4>
  41c233:	lea    r12,[rcx-0x1]
  41c237:	mov    r13b,BYTE PTR [r14]
  41c23a:	lea    rax,[rcx-0x2]
  41c23e:	mov    r8d,r12d
  41c241:	and    r8d,0x3
  41c245:	cmp    rax,0x3
  41c249:	mov    QWORD PTR [rsp],rcx
  41c24d:	jae    41c259 <__flatcc_fb_create_make_path_n@@Base+0xc9>
  41c24f:	xor    ebp,ebp
  41c251:	mov    r11d,r13d
  41c254:	jmp    41c308 <__flatcc_fb_create_make_path_n@@Base+0x178>
  41c259:	mov    r9,r12
  41c25c:	sub    r9,r8
  41c25f:	xor    ebp,ebp
  41c261:	mov    r11d,r13d
  41c264:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c26e:	xchg   ax,ax
  41c270:	cmp    r11b,0x5c
  41c274:	sete   al
  41c277:	movzx  esi,BYTE PTR [r14+rbp*1+0x1]
  41c27d:	movzx  r10d,BYTE PTR [r14+rbp*1+0x2]
  41c283:	xor    edi,edi
  41c285:	cmp    sil,0x20
  41c289:	sete   dil
  41c28d:	and    al,dil
  41c290:	movzx  eax,al
  41c293:	add    rax,rcx
  41c296:	xor    ecx,ecx
  41c298:	cmp    r11b,0x20
  41c29c:	sete   cl
  41c29f:	add    rcx,rax
  41c2a2:	cmp    sil,0x5c
  41c2a6:	sete   al
  41c2a9:	xor    esi,esi
  41c2ab:	cmp    r10b,0x20
  41c2af:	sete   sil
  41c2b3:	and    al,sil
  41c2b6:	movzx  eax,al
  41c2b9:	add    rax,rcx
  41c2bc:	add    rdi,rax
  41c2bf:	cmp    r10b,0x5c
  41c2c3:	sete   al
  41c2c6:	movzx  edx,BYTE PTR [r14+rbp*1+0x3]
  41c2cc:	xor    ecx,ecx
  41c2ce:	cmp    dl,0x20
  41c2d1:	sete   cl
  41c2d4:	and    al,cl
  41c2d6:	movzx  eax,al
  41c2d9:	add    rax,rdi
  41c2dc:	add    rsi,rax
  41c2df:	xor    dl,0x5c
  41c2e2:	movzx  r11d,BYTE PTR [r14+rbp*1+0x4]
  41c2e8:	add    rbp,0x4
  41c2ec:	mov    eax,r11d
  41c2ef:	xor    al,0x20
  41c2f1:	xor    edi,edi
  41c2f3:	or     al,dl
  41c2f5:	sete   dil
  41c2f9:	add    rdi,rsi
  41c2fc:	add    rcx,rdi
  41c2ff:	cmp    r9,rbp
  41c302:	jne    41c270 <__flatcc_fb_create_make_path_n@@Base+0xe0>
  41c308:	mov    edx,r11d
  41c30b:	test   r8,r8
  41c30e:	je     41c351 <__flatcc_fb_create_make_path_n@@Base+0x1c1>
  41c310:	lea    rdi,[r14+rbp*1]
  41c314:	add    rdi,0x1
  41c318:	xor    esi,esi
  41c31a:	nop    WORD PTR [rax+rax*1+0x0]
  41c320:	mov    ebx,r11d
  41c323:	xor    bl,0x5c
  41c326:	movzx  edx,BYTE PTR [rdi+rsi*1]
  41c32a:	mov    eax,edx
  41c32c:	xor    al,0x20
  41c32e:	xor    ebp,ebp
  41c330:	or     al,bl
  41c332:	sete   bpl
  41c336:	add    rbp,rcx
  41c339:	xor    ecx,ecx
  41c33b:	cmp    r11b,0x20
  41c33f:	sete   cl
  41c342:	add    rcx,rbp
  41c345:	add    rsi,0x1
  41c349:	mov    r11d,edx
  41c34c:	cmp    r8,rsi
  41c34f:	jne    41c320 <__flatcc_fb_create_make_path_n@@Base+0x190>
  41c351:	xor    eax,eax
  41c353:	cmp    dl,0x20
  41c356:	sete   al
  41c359:	lea    rdi,[rcx+rax*1]
  41c35d:	add    rdi,0x1
  41c361:	call   4061b0 <malloc@plt>
  41c366:	test   rax,rax
  41c369:	je     41c3c3 <__flatcc_fb_create_make_path_n@@Base+0x233>
  41c36b:	mov    r15,rax
  41c36e:	and    r12d,0x1
  41c372:	mov    rsi,QWORD PTR [rsp]
  41c376:	cmp    rsi,0x2
  41c37a:	jne    41c3cb <__flatcc_fb_create_make_path_n@@Base+0x23b>
  41c37c:	mov    ecx,0x1
  41c381:	xor    eax,eax
  41c383:	test   r12,r12
  41c386:	je     41c448 <__flatcc_fb_create_make_path_n@@Base+0x2b8>
  41c38c:	cmp    r13b,0x5c
  41c390:	je     41c476 <__flatcc_fb_create_make_path_n@@Base+0x2e6>
  41c396:	cmp    r13b,0x20
  41c39a:	jne    41c3a5 <__flatcc_fb_create_make_path_n@@Base+0x215>
  41c39c:	mov    BYTE PTR [r15+rax*1],0x5c
  41c3a1:	add    rax,0x1
  41c3a5:	mov    BYTE PTR [r15+rax*1],r13b
  41c3a9:	mov    r13b,BYTE PTR [r14+rcx*1]
  41c3ad:	mov    rdx,rax
  41c3b0:	lea    rax,[rax+0x1]
  41c3b4:	cmp    r13b,0x20
  41c3b8:	jne    41c45a <__flatcc_fb_create_make_path_n@@Base+0x2ca>
  41c3be:	jmp    41c44e <__flatcc_fb_create_make_path_n@@Base+0x2be>
  41c3c3:	xor    r15d,r15d
  41c3c6:	jmp    41c464 <__flatcc_fb_create_make_path_n@@Base+0x2d4>
  41c3cb:	sub    rsi,r12
  41c3ce:	xor    eax,eax
  41c3d0:	mov    ecx,0x1
  41c3d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c3df:	nop
  41c3e0:	cmp    r13b,0x20
  41c3e4:	je     41c3f3 <__flatcc_fb_create_make_path_n@@Base+0x263>
  41c3e6:	cmp    r13b,0x5c
  41c3ea:	jne    41c3fc <__flatcc_fb_create_make_path_n@@Base+0x26c>
  41c3ec:	cmp    BYTE PTR [r14+rcx*1],0x20
  41c3f1:	jne    41c3fc <__flatcc_fb_create_make_path_n@@Base+0x26c>
  41c3f3:	mov    BYTE PTR [r15+rax*1],0x5c
  41c3f8:	add    rax,0x1
  41c3fc:	mov    BYTE PTR [r15+rax*1],r13b
  41c400:	movzx  ebx,BYTE PTR [r14+rcx*1]
  41c405:	cmp    bl,0x20
  41c408:	je     41c41b <__flatcc_fb_create_make_path_n@@Base+0x28b>
  41c40a:	lea    rdx,[rax+0x1]
  41c40e:	cmp    bl,0x5c
  41c411:	jne    41c428 <__flatcc_fb_create_make_path_n@@Base+0x298>
  41c413:	cmp    BYTE PTR [r14+rcx*1+0x1],0x20
  41c419:	jne    41c428 <__flatcc_fb_create_make_path_n@@Base+0x298>
  41c41b:	mov    BYTE PTR [r15+rax*1+0x1],0x5c
  41c421:	add    rax,0x2
  41c425:	mov    rdx,rax
  41c428:	mov    BYTE PTR [r15+rdx*1],bl
  41c42c:	lea    rax,[rdx+0x1]
  41c430:	movzx  r13d,BYTE PTR [r14+rcx*1+0x1]
  41c436:	add    rcx,0x2
  41c43a:	cmp    rsi,rcx
  41c43d:	jne    41c3e0 <__flatcc_fb_create_make_path_n@@Base+0x250>
  41c43f:	test   r12,r12
  41c442:	jne    41c38c <__flatcc_fb_create_make_path_n@@Base+0x1fc>
  41c448:	cmp    r13b,0x20
  41c44c:	jne    41c45a <__flatcc_fb_create_make_path_n@@Base+0x2ca>
  41c44e:	add    rdx,0x2
  41c452:	mov    BYTE PTR [r15+rax*1],0x5c
  41c457:	mov    rax,rdx
  41c45a:	mov    BYTE PTR [r15+rax*1],r13b
  41c45e:	mov    BYTE PTR [r15+rax*1+0x1],0x0
  41c464:	mov    rax,r15
  41c467:	add    rsp,0x8
  41c46b:	pop    rbx
  41c46c:	pop    r12
  41c46e:	pop    r13
  41c470:	pop    r14
  41c472:	pop    r15
  41c474:	pop    rbp
  41c475:	ret    
  41c476:	cmp    BYTE PTR [r14+rcx*1],0x20
  41c47b:	je     41c39c <__flatcc_fb_create_make_path_n@@Base+0x20c>
  41c481:	jmp    41c3a5 <__flatcc_fb_create_make_path_n@@Base+0x215>
  41c486:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041c490 <__flatcc_fb_create_make_path@@Base>:
  41c490:	push   rbx
  41c491:	mov    rbx,rdi
  41c494:	call   4060d0 <strlen@plt>
  41c499:	mov    rdi,rbx
  41c49c:	mov    rsi,rax
  41c49f:	pop    rbx
  41c4a0:	jmp    41c190 <__flatcc_fb_create_make_path_n@@Base>
  41c4a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c4af:	nop

000000000041c4b0 <__flatcc_fb_find_basename@@Base>:
  41c4b0:	lea    rax,[rdi+rsi*1]
  41c4b4:	add    rax,0x1
  41c4b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c4c0:	test   rsi,rsi
  41c4c3:	je     41c4df <__flatcc_fb_find_basename@@Base+0x2f>
  41c4c5:	movzx  ecx,BYTE PTR [rax-0x2]
  41c4c9:	add    rax,0xffffffffffffffff
  41c4cd:	cmp    cl,0x5c
  41c4d0:	je     41c4db <__flatcc_fb_find_basename@@Base+0x2b>
  41c4d2:	add    rsi,0xffffffffffffffff
  41c4d6:	cmp    cl,0x2f
  41c4d9:	jne    41c4c0 <__flatcc_fb_find_basename@@Base+0x10>
  41c4db:	sub    rax,rdi
  41c4de:	ret    
  41c4df:	mov    rax,rdi
  41c4e2:	sub    rax,rdi
  41c4e5:	ret    
  41c4e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041c4f0 <__flatcc_fb_create_basename@@Base>:
  41c4f0:	push   r15
  41c4f2:	push   r14
  41c4f4:	push   r12
  41c4f6:	push   rbx
  41c4f7:	push   rax
  41c4f8:	mov    r15,rdx
  41c4fb:	mov    r14,rdi
  41c4fe:	lea    rbx,[rdi+rsi*1]
  41c502:	add    rbx,0x1
  41c506:	mov    rax,rsi
  41c509:	nop    DWORD PTR [rax+0x0]
  41c510:	test   rax,rax
  41c513:	je     41c52d <__flatcc_fb_create_basename@@Base+0x3d>
  41c515:	movzx  ecx,BYTE PTR [rbx-0x2]
  41c519:	add    rbx,0xffffffffffffffff
  41c51d:	cmp    cl,0x5c
  41c520:	je     41c530 <__flatcc_fb_create_basename@@Base+0x40>
  41c522:	add    rax,0xffffffffffffffff
  41c526:	cmp    cl,0x2f
  41c529:	jne    41c510 <__flatcc_fb_create_basename@@Base+0x20>
  41c52b:	jmp    41c530 <__flatcc_fb_create_basename@@Base+0x40>
  41c52d:	mov    rbx,r14
  41c530:	sub    r14,rbx
  41c533:	add    r14,rsi
  41c536:	test   r15,r15
  41c539:	je     41c59b <__flatcc_fb_create_basename@@Base+0xab>
  41c53b:	mov    rdi,r15
  41c53e:	call   4060d0 <strlen@plt>
  41c543:	mov    r12,rax
  41c546:	cmp    r12,r14
  41c549:	jae    41c568 <__flatcc_fb_create_basename@@Base+0x78>
  41c54b:	lea    rdi,[rbx+r14*1]
  41c54f:	sub    rdi,r12
  41c552:	mov    rsi,r15
  41c555:	mov    rdx,r12
  41c558:	call   406060 <strncmp@plt>
  41c55d:	xor    ecx,ecx
  41c55f:	test   eax,eax
  41c561:	cmove  rcx,r12
  41c565:	sub    r14,rcx
  41c568:	lea    rdi,[r14+0x1]
  41c56c:	call   4061b0 <malloc@plt>
  41c571:	mov    r15,rax
  41c574:	test   rax,rax
  41c577:	je     41c58c <__flatcc_fb_create_basename@@Base+0x9c>
  41c579:	mov    rdi,r15
  41c57c:	mov    rsi,rbx
  41c57f:	mov    rdx,r14
  41c582:	call   4061a0 <memcpy@plt>
  41c587:	mov    BYTE PTR [r15+r14*1],0x0
  41c58c:	mov    rax,r15
  41c58f:	add    rsp,0x8
  41c593:	pop    rbx
  41c594:	pop    r12
  41c596:	pop    r14
  41c598:	pop    r15
  41c59a:	ret    
  41c59b:	xor    r12d,r12d
  41c59e:	cmp    r12,r14
  41c5a1:	jb     41c54b <__flatcc_fb_create_basename@@Base+0x5b>
  41c5a3:	jmp    41c568 <__flatcc_fb_create_basename@@Base+0x78>
  41c5a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c5af:	nop

000000000041c5b0 <__flatcc_fb_read_file@@Base>:
  41c5b0:	push   r15
  41c5b2:	push   r14
  41c5b4:	push   r13
  41c5b6:	push   r12
  41c5b8:	push   rbx
  41c5b9:	sub    rsp,0x10
  41c5bd:	mov    rbx,rsi
  41c5c0:	test   rdx,rdx
  41c5c3:	lea    r12,[rsp+0x8]
  41c5c8:	cmovne r12,rdx
  41c5cc:	lea    rsi,[rip+0x2b965]        # 447f38 <fb_schema_table_deleted@@Base+0x8>
  41c5d3:	call   4061e0 <fopen@plt>
  41c5d8:	test   rax,rax
  41c5db:	je     41c674 <__flatcc_fb_read_file@@Base+0xc4>
  41c5e1:	mov    r15,rax
  41c5e4:	xor    esi,esi
  41c5e6:	mov    edx,0x2
  41c5eb:	mov    rdi,rax
  41c5ee:	call   4061c0 <fseek@plt>
  41c5f3:	mov    rdi,r15
  41c5f6:	call   406190 <ftell@plt>
  41c5fb:	mov    r14,rax
  41c5fe:	mov    QWORD PTR [r12],rax
  41c602:	test   rbx,rbx
  41c605:	je     41c60c <__flatcc_fb_read_file@@Base+0x5c>
  41c607:	cmp    r14,rbx
  41c60a:	ja     41c66a <__flatcc_fb_read_file@@Base+0xba>
  41c60c:	mov    rdi,r15
  41c60f:	call   4060f0 <rewind@plt>
  41c614:	test   r14,r14
  41c617:	mov    edi,0x1
  41c61c:	cmovne rdi,r14
  41c620:	call   4061b0 <malloc@plt>
  41c625:	test   rax,rax
  41c628:	je     41c66a <__flatcc_fb_read_file@@Base+0xba>
  41c62a:	mov    r13,rax
  41c62d:	xor    ecx,ecx
  41c62f:	nop
  41c630:	mov    rbx,rcx
  41c633:	lea    rdi,[rcx+r13*1]
  41c637:	mov    rdx,r14
  41c63a:	sub    rdx,rcx
  41c63d:	mov    esi,0x1
  41c642:	mov    rcx,r15
  41c645:	call   4060b0 <fread_unlocked@plt>
  41c64a:	lea    rcx,[rax+rbx*1]
  41c64e:	test   rax,rax
  41c651:	jne    41c630 <__flatcc_fb_read_file@@Base+0x80>
  41c653:	mov    rdi,r15
  41c656:	call   4060c0 <fclose@plt>
  41c65b:	cmp    r14,rbx
  41c65e:	je     41c67a <__flatcc_fb_read_file@@Base+0xca>
  41c660:	mov    rdi,r13
  41c663:	call   406040 <free@plt>
  41c668:	jmp    41c677 <__flatcc_fb_read_file@@Base+0xc7>
  41c66a:	mov    rdi,r15
  41c66d:	call   4060c0 <fclose@plt>
  41c672:	jmp    41c677 <__flatcc_fb_read_file@@Base+0xc7>
  41c674:	xor    r14d,r14d
  41c677:	xor    r13d,r13d
  41c67a:	mov    QWORD PTR [r12],r14
  41c67e:	mov    rax,r13
  41c681:	add    rsp,0x10
  41c685:	pop    rbx
  41c686:	pop    r12
  41c688:	pop    r13
  41c68a:	pop    r14
  41c68c:	pop    r15
  41c68e:	ret    
  41c68f:	nop

000000000041c690 <__flatcc_fb_default_error_out@@Base>:
  41c690:	mov    rax,rsi
  41c693:	movsxd rdx,edx
  41c696:	mov    rcx,QWORD PTR [rip+0x3695b]        # 452ff8 <stderr@GLIBC_2.2.5>
  41c69d:	mov    rcx,QWORD PTR [rcx]
  41c6a0:	mov    esi,0x1
  41c6a5:	mov    rdi,rax
  41c6a8:	jmp    406220 <fwrite@plt>
  41c6ad:	nop    DWORD PTR [rax]

000000000041c6b0 <__flatcc_fb_print_error@@Base>:
  41c6b0:	push   rbp
  41c6b1:	push   rbx
  41c6b2:	sub    rsp,0x198
  41c6b9:	mov    rbp,rsi
  41c6bc:	mov    rbx,rdi
  41c6bf:	test   al,al
  41c6c1:	je     41c702 <__flatcc_fb_print_error@@Base+0x52>
  41c6c3:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  41c6c9:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  41c6cf:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  41c6d5:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  41c6de:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  41c6e7:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  41c6f0:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  41c6f9:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  41c702:	mov    QWORD PTR [rsp+0x48],r9
  41c707:	mov    QWORD PTR [rsp+0x40],r8
  41c70c:	mov    QWORD PTR [rsp+0x38],rcx
  41c711:	mov    QWORD PTR [rsp+0x30],rdx
  41c716:	lea    rax,[rsp+0x20]
  41c71b:	mov    QWORD PTR [rsp+0x10],rax
  41c720:	lea    rax,[rsp+0x1b0]
  41c728:	mov    QWORD PTR [rsp+0x8],rax
  41c72d:	movabs rax,0x3000000010
  41c737:	mov    QWORD PTR [rsp],rax
  41c73b:	lea    rdi,[rsp+0xd0]
  41c743:	mov    rcx,rsp
  41c746:	mov    esi,0xc8
  41c74b:	mov    rdx,rbp
  41c74e:	call   4060a0 <vsnprintf@plt>
  41c753:	mov    ebp,eax
  41c755:	cmp    eax,0xc8
  41c75a:	jl     41c774 <__flatcc_fb_print_error@@Base+0xc4>
  41c75c:	mov    BYTE PTR [rsp+0x197],0x0
  41c764:	mov    DWORD PTR [rsp+0x193],0xa2e2e2e
  41c76f:	mov    ebp,0xc7
  41c774:	mov    rdi,QWORD PTR [rbx+0x18]
  41c778:	lea    rsi,[rsp+0xd0]
  41c780:	mov    edx,ebp
  41c782:	call   QWORD PTR [rbx+0x10]
  41c785:	mov    eax,ebp
  41c787:	add    rsp,0x198
  41c78e:	pop    rbx
  41c78f:	pop    rbp
  41c790:	ret    
  41c791:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c79b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c7a0 <__flatcc_error_find_file_of_token@@Base>:
  41c7a0:	lea    rax,[rip+0x1458c]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41c7a7:	test   rdi,rdi
  41c7aa:	jne    41c7b8 <__flatcc_error_find_file_of_token@@Base+0x18>
  41c7ac:	ret    
  41c7ad:	nop    DWORD PTR [rax]
  41c7b0:	mov    rdi,QWORD PTR [rdi]
  41c7b3:	test   rdi,rdi
  41c7b6:	je     41c7ac <__flatcc_error_find_file_of_token@@Base+0xc>
  41c7b8:	cmp    QWORD PTR [rdi+0x28],rsi
  41c7bc:	ja     41c7b0 <__flatcc_error_find_file_of_token@@Base+0x10>
  41c7be:	cmp    QWORD PTR [rdi+0x30],rsi
  41c7c2:	jbe    41c7b0 <__flatcc_error_find_file_of_token@@Base+0x10>
  41c7c4:	mov    rax,QWORD PTR [rdi+0x318]
  41c7cb:	ret    
  41c7cc:	nop    DWORD PTR [rax+0x0]

000000000041c7d0 <__flatcc_error_report@@Base>:
  41c7d0:	push   r14
  41c7d2:	push   rbx
  41c7d3:	push   rax
  41c7d4:	mov    eax,r9d
  41c7d7:	mov    r11,r8
  41c7da:	mov    rbx,rcx
  41c7dd:	mov    r10,rdx
  41c7e0:	mov    r14,rdi
  41c7e3:	test   rsi,rsi
  41c7e6:	je     41c7f3 <__flatcc_error_report@@Base+0x23>
  41c7e8:	test   r11,r11
  41c7eb:	jne    41c7f3 <__flatcc_error_report@@Base+0x23>
  41c7ed:	mov    r11,QWORD PTR [rsi]
  41c7f0:	mov    eax,DWORD PTR [rsi+0x8]
  41c7f3:	test   r10,r10
  41c7f6:	lea    rdx,[rip+0x14536]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41c7fd:	cmove  r10,rdx
  41c801:	xor    r9d,r9d
  41c804:	test   r11,r11
  41c807:	cmove  r11,rdx
  41c80b:	cmovne r9d,eax
  41c80f:	test   rsi,rsi
  41c812:	je     41c84d <__flatcc_error_report@@Base+0x7d>
  41c814:	test   rbx,rbx
  41c817:	jne    41c84d <__flatcc_error_report@@Base+0x7d>
  41c819:	test   r14,r14
  41c81c:	je     41c8fd <__flatcc_error_report@@Base+0x12d>
  41c822:	mov    rax,r14
  41c825:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c82f:	nop
  41c830:	cmp    QWORD PTR [rax+0x28],rsi
  41c834:	ja     41c840 <__flatcc_error_report@@Base+0x70>
  41c836:	cmp    QWORD PTR [rax+0x30],rsi
  41c83a:	ja     41c8f6 <__flatcc_error_report@@Base+0x126>
  41c840:	mov    rax,QWORD PTR [rax]
  41c843:	test   rax,rax
  41c846:	jne    41c830 <__flatcc_error_report@@Base+0x60>
  41c848:	jmp    41c8fd <__flatcc_error_report@@Base+0x12d>
  41c84d:	test   rsi,rsi
  41c850:	je     41c890 <__flatcc_error_report@@Base+0xc0>
  41c852:	test   rbx,rbx
  41c855:	je     41c890 <__flatcc_error_report@@Base+0xc0>
  41c857:	test   r14,r14
  41c85a:	je     41c926 <__flatcc_error_report@@Base+0x156>
  41c860:	lea    rax,[rip+0x144cc]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41c867:	mov    rcx,r14
  41c86a:	nop    WORD PTR [rax+rax*1+0x0]
  41c870:	cmp    QWORD PTR [rcx+0x28],rsi
  41c874:	ja     41c880 <__flatcc_error_report@@Base+0xb0>
  41c876:	cmp    QWORD PTR [rcx+0x30],rsi
  41c87a:	ja     41c932 <__flatcc_error_report@@Base+0x162>
  41c880:	mov    rcx,QWORD PTR [rcx]
  41c883:	test   rcx,rcx
  41c886:	jne    41c870 <__flatcc_error_report@@Base+0xa0>
  41c888:	mov    rdx,rax
  41c88b:	jmp    41c939 <__flatcc_error_report@@Base+0x169>
  41c890:	or     rsi,rbx
  41c893:	je     41c8dd <__flatcc_error_report@@Base+0x10d>
  41c895:	test   rbx,rbx
  41c898:	je     41c9b6 <__flatcc_error_report@@Base+0x1e6>
  41c89e:	lea    rcx,[rip+0x1448e]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41c8a5:	test   r14,r14
  41c8a8:	je     41c9d0 <__flatcc_error_report@@Base+0x200>
  41c8ae:	mov    rax,r14
  41c8b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c8bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41c8c0:	cmp    QWORD PTR [rax+0x28],rbx
  41c8c4:	ja     41c8d0 <__flatcc_error_report@@Base+0x100>
  41c8c6:	cmp    QWORD PTR [rax+0x30],rbx
  41c8ca:	ja     41c9c9 <__flatcc_error_report@@Base+0x1f9>
  41c8d0:	mov    rax,QWORD PTR [rax]
  41c8d3:	test   rax,rax
  41c8d6:	jne    41c8c0 <__flatcc_error_report@@Base+0xf0>
  41c8d8:	jmp    41c9d0 <__flatcc_error_report@@Base+0x200>
  41c8dd:	lea    rsi,[rip+0x2bb3e]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41c8e4:	xor    eax,eax
  41c8e6:	mov    rdi,r14
  41c8e9:	mov    rdx,r10
  41c8ec:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41c8f1:	jmp    41c9a6 <__flatcc_error_report@@Base+0x1d6>
  41c8f6:	mov    rdx,QWORD PTR [rax+0x318]
  41c8fd:	mov    rcx,QWORD PTR [rsi+0x10]
  41c901:	mov    r8,QWORD PTR [rsi+0x18]
  41c905:	lea    rsi,[rip+0x2bac4]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41c90c:	mov    eax,0x0
  41c911:	mov    rdi,r14
  41c914:	push   r10
  41c916:	push   r11
  41c918:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41c91d:	add    rsp,0x10
  41c921:	jmp    41c9a6 <__flatcc_error_report@@Base+0x1d6>
  41c926:	lea    rdx,[rip+0x14406]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41c92d:	mov    rax,rdx
  41c930:	jmp    41c95d <__flatcc_error_report@@Base+0x18d>
  41c932:	mov    rdx,QWORD PTR [rcx+0x318]
  41c939:	mov    rcx,r14
  41c93c:	nop    DWORD PTR [rax+0x0]
  41c940:	cmp    QWORD PTR [rcx+0x28],rbx
  41c944:	ja     41c94c <__flatcc_error_report@@Base+0x17c>
  41c946:	cmp    QWORD PTR [rcx+0x30],rbx
  41c94a:	ja     41c956 <__flatcc_error_report@@Base+0x186>
  41c94c:	mov    rcx,QWORD PTR [rcx]
  41c94f:	test   rcx,rcx
  41c952:	jne    41c940 <__flatcc_error_report@@Base+0x170>
  41c954:	jmp    41c95d <__flatcc_error_report@@Base+0x18d>
  41c956:	mov    rax,QWORD PTR [rcx+0x318]
  41c95d:	mov    rcx,QWORD PTR [rsi+0x10]
  41c961:	mov    r8,QWORD PTR [rsi+0x18]
  41c965:	vmovups xmm0,XMMWORD PTR [rbx+0x10]
  41c96a:	mov    esi,DWORD PTR [rbx+0x8]
  41c96d:	mov    rdi,QWORD PTR [rbx]
  41c970:	sub    rsp,0x40
  41c974:	mov    QWORD PTR [rsp+0x30],rdi
  41c979:	vmovups XMMWORD PTR [rsp+0x18],xmm0
  41c97f:	mov    DWORD PTR [rsp+0x28],esi
  41c983:	mov    QWORD PTR [rsp+0x10],rax
  41c988:	mov    QWORD PTR [rsp+0x8],r10
  41c98d:	mov    QWORD PTR [rsp],r11
  41c991:	lea    rsi,[rip+0x2ba57]        # 4483ef <fb_schema_table_deleted@@Base+0x4bf>
  41c998:	xor    eax,eax
  41c99a:	mov    rdi,r14
  41c99d:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41c9a2:	add    rsp,0x40
  41c9a6:	add    DWORD PTR [r14+0xd0],0x1
  41c9ae:	add    rsp,0x8
  41c9b2:	pop    rbx
  41c9b3:	pop    r14
  41c9b5:	ret    
  41c9b6:	lea    rsi,[rip+0x2ba8f]        # 44844c <fb_schema_table_deleted@@Base+0x51c>
  41c9bd:	xor    eax,eax
  41c9bf:	mov    rdi,r14
  41c9c2:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41c9c7:	jmp    41c9a6 <__flatcc_error_report@@Base+0x1d6>
  41c9c9:	mov    rcx,QWORD PTR [rax+0x318]
  41c9d0:	mov    r8,QWORD PTR [rbx+0x10]
  41c9d4:	mov    r9,QWORD PTR [rbx+0x18]
  41c9d8:	mov    r11d,DWORD PTR [rbx+0x8]
  41c9dc:	lea    rsi,[rip+0x2ba4a]        # 44842d <fb_schema_table_deleted@@Base+0x4fd>
  41c9e3:	mov    eax,0x0
  41c9e8:	mov    rdi,r14
  41c9eb:	mov    rdx,r10
  41c9ee:	push   QWORD PTR [rbx]
  41c9f0:	push   r11
  41c9f2:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41c9f7:	jmp    41c91d <__flatcc_error_report@@Base+0x14d>
  41c9fc:	nop    DWORD PTR [rax+0x0]

000000000041ca00 <error_ref_sym@@Base>:
  41ca00:	push   rbp
  41ca01:	push   r15
  41ca03:	push   r14
  41ca05:	push   r13
  41ca07:	push   r12
  41ca09:	push   rbx
  41ca0a:	sub    rsp,0x48
  41ca0e:	mov    r12,rcx
  41ca11:	mov    r14,rsi
  41ca14:	test   rsi,rsi
  41ca17:	je     41ca87 <error_ref_sym@@Base+0x87>
  41ca19:	mov    QWORD PTR [rsp],rdi
  41ca1d:	mov    QWORD PTR [rsp+0x8],rdx
  41ca22:	mov    ebp,0x32
  41ca27:	xor    eax,eax
  41ca29:	mov    r13,r14
  41ca2c:	nop    DWORD PTR [rax+0x0]
  41ca30:	mov    r15d,ebp
  41ca33:	mov    rcx,QWORD PTR [r13+0x8]
  41ca37:	mov    edx,DWORD PTR [rcx+0x8]
  41ca3a:	cmp    ebp,edx
  41ca3c:	cmovle edx,ebp
  41ca3f:	movsxd rbx,eax
  41ca42:	lea    rdi,[rsp+rbx*1+0x10]
  41ca47:	mov    rsi,QWORD PTR [rcx]
  41ca4a:	movsxd rbp,edx
  41ca4d:	mov    rdx,rbp
  41ca50:	call   4061a0 <memcpy@plt>
  41ca55:	add    ebx,ebp
  41ca57:	movsxd rax,ebx
  41ca5a:	mov    BYTE PTR [rsp+rax*1+0x10],0x2e
  41ca5f:	not    ebp
  41ca61:	add    ebp,r15d
  41ca64:	add    rax,0x1
  41ca68:	mov    r13,QWORD PTR [r13+0x0]
  41ca6c:	test   r13,r13
  41ca6f:	je     41ca75 <error_ref_sym@@Base+0x75>
  41ca71:	test   ebp,ebp
  41ca73:	jg     41ca30 <error_ref_sym@@Base+0x30>
  41ca75:	mov    BYTE PTR [rsp+rax*1+0x10],0x0
  41ca7a:	test   ebp,ebp
  41ca7c:	jle    41ca90 <error_ref_sym@@Base+0x90>
  41ca7e:	mov    eax,ebx
  41ca80:	sar    eax,0x1f
  41ca83:	sub    ebx,eax
  41ca85:	jmp    41ca9d <error_ref_sym@@Base+0x9d>
  41ca87:	mov    BYTE PTR [rsp+0x10],0x0
  41ca8c:	xor    ebx,ebx
  41ca8e:	jmp    41caa6 <error_ref_sym@@Base+0xa6>
  41ca90:	mov    DWORD PTR [rsp+0x3f],0x2e2e2e
  41ca98:	mov    ebx,0x32
  41ca9d:	mov    rdx,QWORD PTR [rsp+0x8]
  41caa2:	mov    rdi,QWORD PTR [rsp]
  41caa6:	mov    rsi,QWORD PTR [r14+0x8]
  41caaa:	test   r12,r12
  41caad:	je     41cab6 <error_ref_sym@@Base+0xb6>
  41caaf:	mov    rcx,QWORD PTR [r12+0x8]
  41cab4:	jmp    41cab8 <error_ref_sym@@Base+0xb8>
  41cab6:	xor    ecx,ecx
  41cab8:	lea    r8,[rsp+0x10]
  41cabd:	mov    r9d,ebx
  41cac0:	call   41c7d0 <__flatcc_error_report@@Base>
  41cac5:	add    rsp,0x48
  41cac9:	pop    rbx
  41caca:	pop    r12
  41cacc:	pop    r13
  41cace:	pop    r14
  41cad0:	pop    r15
  41cad2:	pop    rbp
  41cad3:	ret    
  41cad4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cade:	xchg   ax,ax

000000000041cae0 <__flatcc_fb_init_parser@@Base>:
  41cae0:	push   rbp
  41cae1:	push   r15
  41cae3:	push   r14
  41cae5:	push   r13
  41cae7:	push   r12
  41cae9:	push   rbx
  41caea:	sub    rsp,0x18
  41caee:	mov    r15,r9
  41caf1:	mov    rbx,r8
  41caf4:	mov    rbp,rcx
  41caf7:	mov    r12,rdx
  41cafa:	mov    r14,rsi
  41cafd:	mov    r13,rdi
  41cb00:	xor    esi,esi
  41cb02:	mov    edx,0x358
  41cb07:	call   406110 <memset@plt>
  41cb0c:	test   rbp,rbp
  41cb0f:	je     41cb1b <__flatcc_fb_init_parser@@Base+0x3b>
  41cb11:	mov    QWORD PTR [r13+0x10],rbp
  41cb15:	mov    QWORD PTR [r13+0x18],rbx
  41cb19:	jmp    41cb26 <__flatcc_fb_init_parser@@Base+0x46>
  41cb1b:	lea    rax,[rip+0xfffffffffffffb6e]        # 41c690 <__flatcc_fb_default_error_out@@Base>
  41cb22:	mov    QWORD PTR [r13+0x10],rax
  41cb26:	lea    rdi,[r13+0xe8]
  41cb2d:	test   r14,r14
  41cb30:	je     41cb41 <__flatcc_fb_init_parser@@Base+0x61>
  41cb32:	mov    edx,0x110
  41cb37:	mov    rsi,r14
  41cb3a:	call   4061a0 <memcpy@plt>
  41cb3f:	jmp    41cb46 <__flatcc_fb_init_parser@@Base+0x66>
  41cb41:	call   4071e0 <flatcc_init_options@@Base>
  41cb46:	lea    rax,[r13+0x268]
  41cb4d:	test   r15,r15
  41cb50:	cmovne rax,r15
  41cb54:	mov    QWORD PTR [r13+0x260],rax
  41cb5b:	mov    eax,DWORD PTR [r13+0x12c]
  41cb62:	cmp    eax,0x8
  41cb65:	ja     41cd5f <__flatcc_fb_init_parser@@Base+0x27f>
  41cb6b:	mov    ecx,0x114
  41cb70:	bt     ecx,eax
  41cb73:	jae    41cd5f <__flatcc_fb_init_parser@@Base+0x27f>
  41cb79:	mov    eax,DWORD PTR [r13+0x130]
  41cb80:	cmp    eax,0x8
  41cb83:	ja     41cd6f <__flatcc_fb_init_parser@@Base+0x28f>
  41cb89:	mov    ecx,0x114
  41cb8e:	bt     ecx,eax
  41cb91:	jae    41cd6f <__flatcc_fb_init_parser@@Base+0x28f>
  41cb97:	test   r12,r12
  41cb9a:	lea    r15,[rip+0x2b93e]        # 4484df <fb_schema_table_deleted@@Base+0x5af>
  41cba1:	cmovne r15,r12
  41cba5:	mov    rdi,r15
  41cba8:	call   4060d0 <strlen@plt>
  41cbad:	mov    rbx,rax
  41cbb0:	mov    rdx,QWORD PTR [r14+0x68]
  41cbb4:	mov    rdi,r15
  41cbb7:	mov    rsi,rax
  41cbba:	call   41c4f0 <__flatcc_fb_create_basename@@Base>
  41cbbf:	mov    QWORD PTR [r13+0x308],rax
  41cbc6:	test   rax,rax
  41cbc9:	je     41cda7 <__flatcc_fb_init_parser@@Base+0x2c7>
  41cbcf:	mov    rbp,rax
  41cbd2:	mov    QWORD PTR [rsp+0x8],rbx
  41cbd7:	mov    QWORD PTR [rsp+0x10],r14
  41cbdc:	mov    rdi,rax
  41cbdf:	call   4060d0 <strlen@plt>
  41cbe4:	mov    rbx,rax
  41cbe7:	mov    rdi,rbp
  41cbea:	mov    rsi,rax
  41cbed:	call   41be10 <__flatcc_fb_copy_path_n@@Base>
  41cbf2:	test   rax,rax
  41cbf5:	je     41cda7 <__flatcc_fb_init_parser@@Base+0x2c7>
  41cbfb:	mov    rbp,rax
  41cbfe:	test   rbx,rbx
  41cc01:	je     41cc36 <__flatcc_fb_init_parser@@Base+0x156>
  41cc03:	xor    r12d,r12d
  41cc06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cc10:	movsx  r14,BYTE PTR [rbp+r12*1+0x0]
  41cc16:	test   r14,r14
  41cc19:	je     41cc36 <__flatcc_fb_init_parser@@Base+0x156>
  41cc1b:	call   406030 <__ctype_toupper_loc@plt>
  41cc20:	mov    rax,QWORD PTR [rax]
  41cc23:	movzx  eax,BYTE PTR [rax+r14*4]
  41cc28:	mov    BYTE PTR [rbp+r12*1+0x0],al
  41cc2d:	add    r12,0x1
  41cc31:	cmp    r12,rbx
  41cc34:	jb     41cc10 <__flatcc_fb_init_parser@@Base+0x130>
  41cc36:	mov    QWORD PTR [r13+0x310],rbp
  41cc3d:	mov    QWORD PTR [r13+0x2f0],rbp
  41cc44:	mov    DWORD PTR [r13+0x2f8],ebx
  41cc4b:	lea    rdx,[rip+0x140e1]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41cc52:	mov    rdi,r15
  41cc55:	mov    rsi,QWORD PTR [rsp+0x8]
  41cc5a:	call   41c4f0 <__flatcc_fb_create_basename@@Base>
  41cc5f:	mov    QWORD PTR [r13+0x318],rax
  41cc66:	test   rax,rax
  41cc69:	je     41cda7 <__flatcc_fb_init_parser@@Base+0x2c7>
  41cc6f:	mov    rax,QWORD PTR [rsp+0x10]
  41cc74:	mov    rdi,QWORD PTR [rax+0xe0]
  41cc7b:	test   rdi,rdi
  41cc7e:	je     41cc93 <__flatcc_fb_init_parser@@Base+0x1b3>
  41cc80:	mov    QWORD PTR [r13+0x2d8],rdi
  41cc87:	call   4060d0 <strlen@plt>
  41cc8c:	mov    DWORD PTR [r13+0x2e0],eax
  41cc93:	mov    rdi,QWORD PTR [r13+0x260]
  41cc9a:	xor    r14d,r14d
  41cc9d:	xor    esi,esi
  41cc9f:	xor    edx,edx
  41cca1:	call   41ae40 <fb_scope_table_find@@Base>
  41cca6:	mov    r15,rax
  41cca9:	test   rax,rax
  41ccac:	jne    41cd24 <__flatcc_fb_init_parser@@Base+0x244>
  41ccae:	mov    r15,QWORD PTR [r13+0x60]
  41ccb2:	lea    rax,[r15+0x40]
  41ccb6:	cmp    rax,QWORD PTR [r13+0x50]
  41ccba:	jbe    41ccf6 <__flatcc_fb_init_parser@@Base+0x216>
  41ccbc:	mov    edi,0x10000
  41ccc1:	mov    esi,0x1
  41ccc6:	call   406150 <calloc@plt>
  41cccb:	test   rax,rax
  41ccce:	je     41cda7 <__flatcc_fb_init_parser@@Base+0x2c7>
  41ccd4:	mov    rcx,QWORD PTR [r13+0x58]
  41ccd8:	mov    QWORD PTR [rax],rcx
  41ccdb:	mov    QWORD PTR [r13+0x58],rax
  41ccdf:	lea    r15,[rax+0x10]
  41cce3:	mov    QWORD PTR [r13+0x60],r15
  41cce7:	lea    rcx,[rax+0x10000]
  41ccee:	mov    QWORD PTR [r13+0x50],rcx
  41ccf2:	add    rax,0x50
  41ccf6:	mov    QWORD PTR [r13+0x60],rax
  41ccfa:	mov    QWORD PTR [r15],0x0
  41cd01:	vmovups xmm0,XMMWORD PTR [r13+0x2d8]
  41cd0a:	vmovups XMMWORD PTR [r15+0x28],xmm0
  41cd10:	mov    rdi,QWORD PTR [r13+0x260]
  41cd17:	mov    edx,0x1
  41cd1c:	mov    rsi,r15
  41cd1f:	call   41ae20 <fb_scope_table_insert_item@@Base>
  41cd24:	mov    QWORD PTR [r13+0x340],r15
  41cd2b:	mov    rdi,QWORD PTR [r13+0x260]
  41cd32:	xor    esi,esi
  41cd34:	xor    edx,edx
  41cd36:	call   41ae40 <fb_scope_table_find@@Base>
  41cd3b:	cmp    r15,rax
  41cd3e:	je     41cd95 <__flatcc_fb_init_parser@@Base+0x2b5>
  41cd40:	lea    rdi,[rip+0x2b79d]        # 4484e4 <fb_schema_table_deleted@@Base+0x5b4>
  41cd47:	lea    rsi,[rip+0x2b7e9]        # 448537 <fb_schema_table_deleted@@Base+0x607>
  41cd4e:	lea    rcx,[rip+0x2b842]        # 448597 <fb_schema_table_deleted@@Base+0x667>
  41cd55:	mov    edx,0x533
  41cd5a:	call   406100 <__assert_fail@plt>
  41cd5f:	lea    rsi,[rip+0x2b6bc]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41cd66:	lea    rdx,[rip+0x2b701]        # 44846e <fb_schema_table_deleted@@Base+0x53e>
  41cd6d:	jmp    41cd7d <__flatcc_fb_init_parser@@Base+0x29d>
  41cd6f:	lea    rsi,[rip+0x2b6ac]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41cd76:	lea    rdx,[rip+0x2b729]        # 4484a6 <fb_schema_table_deleted@@Base+0x576>
  41cd7d:	xor    eax,eax
  41cd7f:	mov    rdi,r13
  41cd82:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41cd87:	add    DWORD PTR [r13+0xd0],0x1
  41cd8f:	mov    r14d,0xffffffff
  41cd95:	mov    eax,r14d
  41cd98:	add    rsp,0x18
  41cd9c:	pop    rbx
  41cd9d:	pop    r12
  41cd9f:	pop    r13
  41cda1:	pop    r14
  41cda3:	pop    r15
  41cda5:	pop    rbp
  41cda6:	ret    
  41cda7:	mov    rax,QWORD PTR [rip+0x3624a]        # 452ff8 <stderr@GLIBC_2.2.5>
  41cdae:	mov    rcx,QWORD PTR [rax]
  41cdb1:	lea    rdi,[rip+0x13a54]        # 43080c <_IO_stdin_used@@Base+0x180c>
  41cdb8:	mov    esi,0x22
  41cdbd:	mov    edx,0x1
  41cdc2:	call   406220 <fwrite@plt>
  41cdc7:	mov    edi,0x1
  41cdcc:	call   406210 <exit@plt>
  41cdd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cddb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041cde0 <__flatcc_fb_parse@@Base>:
  41cde0:	push   rbp
  41cde1:	push   r15
  41cde3:	push   r14
  41cde5:	push   r13
  41cde7:	push   r12
  41cde9:	push   rbx
  41cdea:	sub    rsp,0x78
  41cdee:	mov    r12,rdi
  41cdf1:	mov    QWORD PTR [rdi+0x70],rsi
  41cdf5:	mov    QWORD PTR [rdi+0x78],0x1
  41cdfd:	mov    QWORD PTR [rdi+0xa0],0x9
  41ce08:	lea    rax,[rip+0x2b7fb]        # 44860a <fb_schema_table_deleted@@Base+0x6da>
  41ce0f:	mov    QWORD PTR [rdi+0x80],rax
  41ce16:	mov    QWORD PTR [rdi+0x88],0x4
  41ce21:	vxorps xmm0,xmm0,xmm0
  41ce25:	vmovups XMMWORD PTR [rdi+0x90],xmm0
  41ce2d:	mov    QWORD PTR [rdi+0xc8],0xfffffffffffffc2a
  41ce38:	lea    rax,[rip+0x2cfa6]        # 449de5 <fb_schema_table_deleted@@Base+0x1eb5>
  41ce3f:	mov    QWORD PTR [rdi+0xa8],rax
  41ce46:	mov    QWORD PTR [rdi+0xb0],0x5
  41ce51:	vmovups XMMWORD PTR [rdi+0xb8],xmm0
  41ce59:	test   ecx,ecx
  41ce5b:	je     41ce62 <__flatcc_fb_parse@@Base+0x82>
  41ce5d:	mov    QWORD PTR [r12+0x20],rsi
  41ce62:	mov    rdi,rsi
  41ce65:	mov    rsi,rdx
  41ce68:	mov    rdx,r12
  41ce6b:	call   41f2f0 <__flatcc_fb_parse@@Base+0x2510>
  41ce70:	mov    r13,QWORD PTR [r12+0x28]
  41ce75:	mov    rax,QWORD PTR [r12+0x48]
  41ce7a:	mov    QWORD PTR [r12+0x30],rax
  41ce7f:	mov    QWORD PTR [r12+0x48],r13
  41ce84:	mov    rdi,QWORD PTR [r12+0x148]
  41ce8c:	call   4061b0 <malloc@plt>
  41ce91:	mov    QWORD PTR [r12+0xd8],rax
  41ce99:	test   rax,rax
  41ce9c:	je     41f2c4 <__flatcc_fb_parse@@Base+0x24e4>
  41cea2:	mov    rax,QWORD PTR [r13+0x20]
  41cea6:	cmp    rax,0xfffffffffffffc3c
  41ceac:	jne    41cebf <__flatcc_fb_parse@@Base+0xdf>
  41ceae:	mov    rdi,r12
  41ceb1:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41ceb6:	mov    r13,QWORD PTR [r12+0x48]
  41cebb:	mov    rax,QWORD PTR [r13+0x20]
  41cebf:	lea    rcx,[r12+0x48]
  41cec4:	mov    QWORD PTR [rsp+0x10],rcx
  41cec9:	cmp    rax,0xfffffffffffffc35
  41cecf:	jne    41d25f <__flatcc_fb_parse@@Base+0x47f>
  41ced5:	lea    rax,[r12+0xd0]
  41cedd:	mov    QWORD PTR [rsp+0x8],rax
  41cee2:	lea    rax,[r12+0x60]
  41cee7:	mov    QWORD PTR [rsp+0x20],rax
  41ceec:	lea    rax,[r12+0x50]
  41cef1:	mov    QWORD PTR [rsp+0x28],rax
  41cef6:	lea    rax,[r12+0x58]
  41cefb:	mov    QWORD PTR [rsp+0x30],rax
  41cf00:	lea    rax,[r12+0x40]
  41cf05:	mov    QWORD PTR [rsp+0x18],rax
  41cf0a:	mov    rbp,r13
  41cf0d:	mov    r15,QWORD PTR [rsp+0x10]
  41cf12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cf1c:	nop    DWORD PTR [rax+0x0]
  41cf20:	mov    rdi,r12
  41cf23:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41cf28:	test   rbp,rbp
  41cf2b:	je     41d255 <__flatcc_fb_parse@@Base+0x475>
  41cf31:	cmp    DWORD PTR [r12+0xf8],0x0
  41cf3a:	je     41cf80 <__flatcc_fb_parse@@Base+0x1a0>
  41cf3c:	test   r13,r13
  41cf3f:	je     41cfa0 <__flatcc_fb_parse@@Base+0x1c0>
  41cf41:	mov    rax,QWORD PTR [r13+0x0]
  41cf45:	xor    r9d,r9d
  41cf48:	lea    rbp,[rip+0x13de4]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41cf4f:	test   rax,rax
  41cf52:	je     41cf5b <__flatcc_fb_parse@@Base+0x17b>
  41cf54:	mov    r9d,DWORD PTR [r13+0x8]
  41cf58:	mov    rbp,rax
  41cf5b:	mov    rax,r12
  41cf5e:	xchg   ax,ax
  41cf60:	cmp    QWORD PTR [rax+0x28],r13
  41cf64:	ja     41cf6c <__flatcc_fb_parse@@Base+0x18c>
  41cf66:	cmp    QWORD PTR [rax+0x30],r13
  41cf6a:	ja     41cfba <__flatcc_fb_parse@@Base+0x1da>
  41cf6c:	mov    rax,QWORD PTR [rax]
  41cf6f:	test   rax,rax
  41cf72:	jne    41cf60 <__flatcc_fb_parse@@Base+0x180>
  41cf74:	lea    rdx,[rip+0x13db8]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41cf7b:	jmp    41cfc1 <__flatcc_fb_parse@@Base+0x1e1>
  41cf7d:	nop    DWORD PTR [rax]
  41cf80:	mov    rax,QWORD PTR [rsp+0x8]
  41cf85:	mov    eax,DWORD PTR [rax]
  41cf87:	cmp    eax,0x9
  41cf8a:	jle    41cfff <__flatcc_fb_parse@@Base+0x21f>
  41cf8c:	jmp    41d255 <__flatcc_fb_parse@@Base+0x475>
  41cf91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cf9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cfa0:	xor    eax,eax
  41cfa2:	mov    rdi,r12
  41cfa5:	lea    rsi,[rip+0x2b476]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41cfac:	lea    rdx,[rip+0x2b701]        # 4486b4 <fb_schema_table_deleted@@Base+0x784>
  41cfb3:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41cfb8:	jmp    41cfea <__flatcc_fb_parse@@Base+0x20a>
  41cfba:	mov    rdx,QWORD PTR [rax+0x318]
  41cfc1:	mov    rcx,QWORD PTR [r13+0x10]
  41cfc5:	mov    r8,QWORD PTR [r13+0x18]
  41cfc9:	mov    eax,0x0
  41cfce:	mov    rdi,r12
  41cfd1:	lea    rsi,[rip+0x2b3f8]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41cfd8:	lea    rbx,[rip+0x2b6d5]        # 4486b4 <fb_schema_table_deleted@@Base+0x784>
  41cfdf:	push   rbx
  41cfe0:	push   rbp
  41cfe1:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41cfe6:	add    rsp,0x10
  41cfea:	mov    rcx,QWORD PTR [rsp+0x8]
  41cfef:	mov    eax,DWORD PTR [rcx]
  41cff1:	add    eax,0x1
  41cff4:	mov    DWORD PTR [rcx],eax
  41cff6:	cmp    eax,0x9
  41cff9:	jg     41d255 <__flatcc_fb_parse@@Base+0x475>
  41cfff:	mov    rax,QWORD PTR [rsp+0x10]
  41d004:	mov    r14,QWORD PTR [rax]
  41d007:	cmp    QWORD PTR [r14+0x20],0x13
  41d00c:	jne    41d030 <__flatcc_fb_parse@@Base+0x250>
  41d00e:	mov    rdi,r12
  41d011:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41d016:	test   r14,r14
  41d019:	mov    rbx,QWORD PTR [rsp+0x20]
  41d01e:	jne    41d106 <__flatcc_fb_parse@@Base+0x326>
  41d024:	jmp    41d0e0 <__flatcc_fb_parse@@Base+0x300>
  41d029:	nop    DWORD PTR [rax+0x0]
  41d030:	test   r14,r14
  41d033:	je     41d07d <__flatcc_fb_parse@@Base+0x29d>
  41d035:	mov    rax,QWORD PTR [r14]
  41d038:	xor    r9d,r9d
  41d03b:	lea    rbp,[rip+0x13cf1]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41d042:	test   rax,rax
  41d045:	je     41d04e <__flatcc_fb_parse@@Base+0x26e>
  41d047:	mov    r9d,DWORD PTR [r14+0x8]
  41d04b:	mov    rbp,rax
  41d04e:	mov    rax,r12
  41d051:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d05b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d060:	cmp    QWORD PTR [rax+0x28],r14
  41d064:	ja     41d06c <__flatcc_fb_parse@@Base+0x28c>
  41d066:	cmp    QWORD PTR [rax+0x30],r14
  41d06a:	ja     41d097 <__flatcc_fb_parse@@Base+0x2b7>
  41d06c:	mov    rax,QWORD PTR [rax]
  41d06f:	test   rax,rax
  41d072:	jne    41d060 <__flatcc_fb_parse@@Base+0x280>
  41d074:	lea    rdx,[rip+0x13cb8]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41d07b:	jmp    41d09e <__flatcc_fb_parse@@Base+0x2be>
  41d07d:	xor    eax,eax
  41d07f:	mov    rdi,r12
  41d082:	lea    rsi,[rip+0x2b399]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41d089:	lea    rdx,[rip+0x2b65c]        # 4486ec <fb_schema_table_deleted@@Base+0x7bc>
  41d090:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41d095:	jmp    41d0c7 <__flatcc_fb_parse@@Base+0x2e7>
  41d097:	mov    rdx,QWORD PTR [rax+0x318]
  41d09e:	mov    rcx,QWORD PTR [r14+0x10]
  41d0a2:	mov    r8,QWORD PTR [r14+0x18]
  41d0a6:	mov    eax,0x0
  41d0ab:	mov    rdi,r12
  41d0ae:	lea    rsi,[rip+0x2b31b]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41d0b5:	lea    rbx,[rip+0x2b630]        # 4486ec <fb_schema_table_deleted@@Base+0x7bc>
  41d0bc:	push   rbx
  41d0bd:	push   rbp
  41d0be:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41d0c3:	add    rsp,0x10
  41d0c7:	mov    rax,QWORD PTR [rsp+0x8]
  41d0cc:	add    DWORD PTR [rax],0x1
  41d0cf:	mov    rbx,QWORD PTR [rsp+0x20]
  41d0d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d0de:	xchg   ax,ax
  41d0e0:	mov    rax,QWORD PTR [r15]
  41d0e3:	mov    rbp,QWORD PTR [rax+0x20]
  41d0e7:	test   rbp,rbp
  41d0ea:	je     41d106 <__flatcc_fb_parse@@Base+0x326>
  41d0ec:	mov    rdi,r12
  41d0ef:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41d0f4:	cmp    rbp,0x3b
  41d0f8:	jne    41d0e0 <__flatcc_fb_parse@@Base+0x300>
  41d0fa:	mov    rax,QWORD PTR [rsp+0x18]
  41d0ff:	mov    QWORD PTR [rax],0x0
  41d106:	mov    rsi,QWORD PTR [rbx]
  41d109:	lea    rax,[rsi+0x20]
  41d10d:	mov    rcx,QWORD PTR [rsp+0x28]
  41d112:	cmp    rax,QWORD PTR [rcx]
  41d115:	jbe    41d157 <__flatcc_fb_parse@@Base+0x377>
  41d117:	mov    edi,0x10000
  41d11c:	mov    esi,0x1
  41d121:	call   406150 <calloc@plt>
  41d126:	test   rax,rax
  41d129:	je     41f2c4 <__flatcc_fb_parse@@Base+0x24e4>
  41d12f:	mov    rdx,QWORD PTR [rsp+0x30]
  41d134:	mov    rcx,QWORD PTR [rdx]
  41d137:	mov    QWORD PTR [rax],rcx
  41d13a:	mov    QWORD PTR [rdx],rax
  41d13d:	lea    rsi,[rax+0x10]
  41d141:	mov    QWORD PTR [rbx],rsi
  41d144:	lea    rcx,[rax+0x10000]
  41d14b:	mov    rdx,QWORD PTR [rsp+0x28]
  41d150:	mov    QWORD PTR [rdx],rcx
  41d153:	add    rax,0x30
  41d157:	mov    QWORD PTR [r12+0x60],rax
  41d15c:	mov    rax,QWORD PTR [r12+0x1f8]
  41d164:	mov    QWORD PTR [rsi],rax
  41d167:	mov    QWORD PTR [r12+0x1f8],rsi
  41d16f:	add    rsi,0x8
  41d173:	mov    rdi,r12
  41d176:	call   423310 <__flatcc_fb_clear_parser@@Base+0x140>
  41d17b:	mov    rax,QWORD PTR [r12+0x48]
  41d180:	cmp    QWORD PTR [rax+0x20],0x3b
  41d185:	jne    41d1a0 <__flatcc_fb_parse@@Base+0x3c0>
  41d187:	mov    rdi,r12
  41d18a:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41d18f:	jmp    41d23f <__flatcc_fb_parse@@Base+0x45f>
  41d194:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d19e:	xchg   ax,ax
  41d1a0:	test   rax,rax
  41d1a3:	je     41d1ed <__flatcc_fb_parse@@Base+0x40d>
  41d1a5:	mov    rcx,QWORD PTR [rax]
  41d1a8:	xor    r9d,r9d
  41d1ab:	lea    rbp,[rip+0x13b81]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41d1b2:	test   rcx,rcx
  41d1b5:	je     41d1be <__flatcc_fb_parse@@Base+0x3de>
  41d1b7:	mov    r9d,DWORD PTR [rax+0x8]
  41d1bb:	mov    rbp,rcx
  41d1be:	mov    rcx,r12
  41d1c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d1cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d1d0:	cmp    QWORD PTR [rcx+0x28],rax
  41d1d4:	ja     41d1dc <__flatcc_fb_parse@@Base+0x3fc>
  41d1d6:	cmp    QWORD PTR [rcx+0x30],rax
  41d1da:	ja     41d207 <__flatcc_fb_parse@@Base+0x427>
  41d1dc:	mov    rcx,QWORD PTR [rcx]
  41d1df:	test   rcx,rcx
  41d1e2:	jne    41d1d0 <__flatcc_fb_parse@@Base+0x3f0>
  41d1e4:	lea    rdx,[rip+0x13b48]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41d1eb:	jmp    41d20e <__flatcc_fb_parse@@Base+0x42e>
  41d1ed:	xor    eax,eax
  41d1ef:	mov    rdi,r12
  41d1f2:	lea    rsi,[rip+0x2b229]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41d1f9:	lea    rdx,[rip+0x2b51a]        # 44871a <fb_schema_table_deleted@@Base+0x7ea>
  41d200:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41d205:	jmp    41d237 <__flatcc_fb_parse@@Base+0x457>
  41d207:	mov    rdx,QWORD PTR [rcx+0x318]
  41d20e:	mov    rcx,QWORD PTR [rax+0x10]
  41d212:	mov    r8,QWORD PTR [rax+0x18]
  41d216:	mov    eax,0x0
  41d21b:	mov    rdi,r12
  41d21e:	lea    rsi,[rip+0x2b1ab]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41d225:	lea    rbx,[rip+0x2b4ee]        # 44871a <fb_schema_table_deleted@@Base+0x7ea>
  41d22c:	push   rbx
  41d22d:	push   rbp
  41d22e:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41d233:	add    rsp,0x10
  41d237:	mov    rax,QWORD PTR [rsp+0x8]
  41d23c:	add    DWORD PTR [rax],0x1
  41d23f:	mov    rax,QWORD PTR [rsp+0x10]
  41d244:	mov    rbp,QWORD PTR [rax]
  41d247:	cmp    QWORD PTR [rbp+0x20],0xfffffffffffffc35
  41d24f:	je     41cf20 <__flatcc_fb_parse@@Base+0x140>
  41d255:	mov    rax,QWORD PTR [rsp+0x10]
  41d25a:	mov    r13,QWORD PTR [rax]
  41d25d:	jmp    41d294 <__flatcc_fb_parse@@Base+0x4b4>
  41d25f:	lea    rax,[r12+0xd0]
  41d267:	mov    QWORD PTR [rsp+0x8],rax
  41d26c:	lea    rax,[r12+0x60]
  41d271:	mov    QWORD PTR [rsp+0x20],rax
  41d276:	lea    rax,[r12+0x50]
  41d27b:	mov    QWORD PTR [rsp+0x28],rax
  41d280:	lea    rax,[r12+0x40]
  41d285:	mov    QWORD PTR [rsp+0x18],rax
  41d28a:	lea    rax,[r12+0x58]
  41d28f:	mov    QWORD PTR [rsp+0x30],rax
  41d294:	mov    rax,r12
  41d297:	sub    rax,0xffffffffffffff80
  41d29b:	mov    QWORD PTR [rsp+0x50],rax
  41d2a0:	lea    rax,[r12+0x220]
  41d2a8:	mov    QWORD PTR [rsp+0x68],rax
  41d2ad:	lea    rax,[r12+0x208]
  41d2b5:	mov    QWORD PTR [rsp+0x60],rax
  41d2ba:	lea    rax,[r12+0x248]
  41d2c2:	mov    QWORD PTR [rsp+0x70],rax
  41d2c7:	lea    rax,[r12+0x2d8]
  41d2cf:	mov    QWORD PTR [rsp+0x58],rax
  41d2d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d2de:	xchg   ax,ax
  41d2e0:	mov    rcx,QWORD PTR [r13+0x20]
  41d2e4:	test   rcx,rcx
  41d2e7:	je     41f195 <__flatcc_fb_parse@@Base+0x23b5>
  41d2ed:	mov    rax,QWORD PTR [rsp+0x8]
  41d2f2:	mov    eax,DWORD PTR [rax]
  41d2f4:	cmp    eax,0x9
  41d2f7:	jg     41f2b5 <__flatcc_fb_parse@@Base+0x24d5>
  41d2fd:	mov    r14,r13
  41d300:	cmp    rcx,0x4
  41d304:	jg     41d3f0 <__flatcc_fb_parse@@Base+0x610>
  41d30a:	add    rcx,0x3e5
  41d311:	cmp    rcx,0x20
  41d315:	ja     41dbb4 <__flatcc_fb_parse@@Base+0xdd4>
  41d31b:	lea    rax,[rip+0x2ac1e]        # 447f40 <fb_schema_table_deleted@@Base+0x10>
  41d322:	mov    rdx,rax
  41d325:	movsxd rax,DWORD PTR [rax+rcx*4]
  41d329:	add    rax,rdx
  41d32c:	jmp    rax
  41d32e:	mov    rdi,r12
  41d331:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41d336:	mov    r13,QWORD PTR [r12+0x60]
  41d33b:	lea    rax,[r13+0xd0]
  41d342:	cmp    rax,QWORD PTR [r12+0x50]
  41d347:	jbe    41d390 <__flatcc_fb_parse@@Base+0x5b0>
  41d349:	mov    edi,0x10000
  41d34e:	mov    esi,0x1
  41d353:	call   406150 <calloc@plt>
  41d358:	test   rax,rax
  41d35b:	je     41f2c4 <__flatcc_fb_parse@@Base+0x24e4>
  41d361:	mov    rdx,QWORD PTR [rsp+0x30]
  41d366:	mov    rcx,QWORD PTR [rdx]
  41d369:	mov    QWORD PTR [rax],rcx
  41d36c:	mov    QWORD PTR [rdx],rax
  41d36f:	lea    r13,[rax+0x10]
  41d373:	mov    rcx,QWORD PTR [rsp+0x20]
  41d378:	mov    QWORD PTR [rcx],r13
  41d37b:	lea    rcx,[rax+0x10000]
  41d382:	mov    rdx,QWORD PTR [rsp+0x28]
  41d387:	mov    QWORD PTR [rdx],rcx
  41d38a:	add    rax,0xe0
  41d390:	mov    QWORD PTR [r12+0x60],rax
  41d395:	mov    rax,QWORD PTR [r12+0x238]
  41d39d:	mov    QWORD PTR [r13+0x0],rax
  41d3a1:	mov    WORD PTR [r13+0x10],0x3
  41d3a8:	mov    QWORD PTR [r12+0x238],r13
  41d3b0:	mov    rax,QWORD PTR [r12+0x340]
  41d3b8:	mov    QWORD PTR [r13+0x18],rax
  41d3bc:	mov    rax,QWORD PTR [r12+0x40]
  41d3c1:	test   rax,rax
  41d3c4:	je     41dcf4 <__flatcc_fb_parse@@Base+0xf14>
  41d3ca:	xor    edx,edx
  41d3cc:	nop    DWORD PTR [rax+0x0]
  41d3d0:	mov    rcx,rax
  41d3d3:	mov    rax,QWORD PTR [rax]
  41d3d6:	mov    QWORD PTR [rcx],rdx
  41d3d9:	mov    rdx,rcx
  41d3dc:	test   rax,rax
  41d3df:	jne    41d3d0 <__flatcc_fb_parse@@Base+0x5f0>
  41d3e1:	jmp    41dcf6 <__flatcc_fb_parse@@Base+0xf16>
  41d3e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d3f0:	cmp    rcx,0x1a
  41d3f4:	jg     41d444 <__flatcc_fb_parse@@Base+0x664>
  41d3f6:	cmp    rcx,0x5
  41d3fa:	je     41db54 <__flatcc_fb_parse@@Base+0xd74>
  41d400:	cmp    rcx,0x7
  41d404:	jne    41dbb4 <__flatcc_fb_parse@@Base+0xdd4>
  41d40a:	test   r14,r14
  41d40d:	je     41e24c <__flatcc_fb_parse@@Base+0x146c>
  41d413:	mov    rax,r12
  41d416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d420:	cmp    QWORD PTR [rax+0x28],r14
  41d424:	ja     41d430 <__flatcc_fb_parse@@Base+0x650>
  41d426:	cmp    QWORD PTR [rax+0x30],r14
  41d42a:	ja     41e30b <__flatcc_fb_parse@@Base+0x152b>
  41d430:	mov    rax,QWORD PTR [rax]
  41d433:	test   rax,rax
  41d436:	jne    41d420 <__flatcc_fb_parse@@Base+0x640>
  41d438:	lea    rdx,[rip+0x138f4]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41d43f:	jmp    41e312 <__flatcc_fb_parse@@Base+0x1532>
  41d444:	cmp    rcx,0x1b
  41d448:	je     41db84 <__flatcc_fb_parse@@Base+0xda4>
  41d44e:	cmp    rcx,0x7b
  41d452:	jne    41dbb4 <__flatcc_fb_parse@@Base+0xdd4>
  41d458:	test   r14,r14
  41d45b:	je     41e264 <__flatcc_fb_parse@@Base+0x1484>
  41d461:	mov    rax,QWORD PTR [r14]
  41d464:	xor    r9d,r9d
  41d467:	lea    rbp,[rip+0x138c5]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41d46e:	mov    r10,rbp
  41d471:	test   rax,rax
  41d474:	je     41d47d <__flatcc_fb_parse@@Base+0x69d>
  41d476:	mov    r9d,DWORD PTR [r14+0x8]
  41d47a:	mov    r10,rax
  41d47d:	mov    rax,r12
  41d480:	cmp    QWORD PTR [rax+0x28],r14
  41d484:	ja     41d490 <__flatcc_fb_parse@@Base+0x6b0>
  41d486:	cmp    QWORD PTR [rax+0x30],r14
  41d48a:	ja     41e338 <__flatcc_fb_parse@@Base+0x1558>
  41d490:	mov    rax,QWORD PTR [rax]
  41d493:	test   rax,rax
  41d496:	jne    41d480 <__flatcc_fb_parse@@Base+0x6a0>
  41d498:	lea    rdx,[rip+0x13894]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41d49f:	jmp    41e33f <__flatcc_fb_parse@@Base+0x155f>
  41d4a4:	mov    rdi,r12
  41d4a7:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41d4ac:	cmp    WORD PTR [r12+0x218],0x0
  41d4b6:	je     41d4de <__flatcc_fb_parse@@Base+0x6fe>
  41d4b8:	mov    rsi,QWORD PTR [r12+0x48]
  41d4bd:	mov    r8,QWORD PTR [r12+0x208]
  41d4c5:	mov    r9d,DWORD PTR [r12+0x210]
  41d4cd:	xor    ecx,ecx
  41d4cf:	mov    rdi,r12
  41d4d2:	lea    rdx,[rip+0x2b503]        # 4489dc <fb_schema_table_deleted@@Base+0xaac>
  41d4d9:	call   41c7d0 <__flatcc_error_report@@Base>
  41d4de:	mov    rax,QWORD PTR [rsp+0x10]
  41d4e3:	mov    rbp,QWORD PTR [rax]
  41d4e6:	cmp    QWORD PTR [rbp+0x20],0x13
  41d4eb:	jne    41dc04 <__flatcc_fb_parse@@Base+0xe24>
  41d4f1:	mov    rdi,r12
  41d4f4:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41d4f9:	test   rbp,rbp
  41d4fc:	je     41e730 <__flatcc_fb_parse@@Base+0x1950>
  41d502:	mov    rbp,QWORD PTR [r12+0x48]
  41d507:	mov    rdi,r12
  41d50a:	mov    rsi,QWORD PTR [rsp+0x60]
  41d50f:	call   423310 <__flatcc_fb_clear_parser@@Base+0x140>
  41d514:	cmp    QWORD PTR [r12+0x208],0x0
  41d51d:	je     41eafd <__flatcc_fb_parse@@Base+0x1d1d>
  41d523:	cmp    DWORD PTR [r12+0x210],0x4
  41d52c:	je     41eafd <__flatcc_fb_parse@@Base+0x1d1d>
  41d532:	mov    WORD PTR [r12+0x218],0x1
  41d53d:	test   rbp,rbp
  41d540:	je     41ea53 <__flatcc_fb_parse@@Base+0x1c73>
  41d546:	mov    rax,QWORD PTR [rbp+0x0]
  41d54a:	xor    r9d,r9d
  41d54d:	lea    r10,[rip+0x137df]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41d554:	test   rax,rax
  41d557:	je     41d560 <__flatcc_fb_parse@@Base+0x780>
  41d559:	mov    r9d,DWORD PTR [rbp+0x8]
  41d55d:	mov    r10,rax
  41d560:	mov    rax,r12
  41d563:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d56d:	nop    DWORD PTR [rax]
  41d570:	cmp    QWORD PTR [rax+0x28],rbp
  41d574:	ja     41d580 <__flatcc_fb_parse@@Base+0x7a0>
  41d576:	cmp    QWORD PTR [rax+0x30],rbp
  41d57a:	ja     41eac4 <__flatcc_fb_parse@@Base+0x1ce4>
  41d580:	mov    rax,QWORD PTR [rax]
  41d583:	test   rax,rax
  41d586:	jne    41d570 <__flatcc_fb_parse@@Base+0x790>
  41d588:	lea    rdx,[rip+0x137a4]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41d58f:	jmp    41eacb <__flatcc_fb_parse@@Base+0x1ceb>
  41d594:	mov    rdi,r12
  41d597:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41d59c:	mov    QWORD PTR [rsp+0x38],0x0
  41d5a5:	mov    rbp,QWORD PTR [r12+0x48]
  41d5aa:	mov    rcx,QWORD PTR [rbp+0x20]
  41d5ae:	mov    rax,rbp
  41d5b1:	cmp    rcx,0x3b
  41d5b5:	jne    41e406 <__flatcc_fb_parse@@Base+0x1626>
  41d5bb:	mov    rdi,r12
  41d5be:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41d5c3:	test   rbp,rbp
  41d5c6:	je     41e3fa <__flatcc_fb_parse@@Base+0x161a>
  41d5cc:	mov    QWORD PTR [r12+0x340],0x0
  41d5d8:	jmp    41ebb0 <__flatcc_fb_parse@@Base+0x1dd0>
  41d5dd:	mov    rdi,r12
  41d5e0:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41d5e5:	mov    rsi,QWORD PTR [r12+0x60]
  41d5ea:	lea    rax,[rsi+0xd0]
  41d5f1:	cmp    rax,QWORD PTR [r12+0x50]
  41d5f6:	jbe    41d63f <__flatcc_fb_parse@@Base+0x85f>
  41d5f8:	mov    edi,0x10000
  41d5fd:	mov    esi,0x1
  41d602:	call   406150 <calloc@plt>
  41d607:	test   rax,rax
  41d60a:	je     41f2c4 <__flatcc_fb_parse@@Base+0x24e4>
  41d610:	mov    rdx,QWORD PTR [rsp+0x30]
  41d615:	mov    rcx,QWORD PTR [rdx]
  41d618:	mov    QWORD PTR [rax],rcx
  41d61b:	mov    QWORD PTR [rdx],rax
  41d61e:	lea    rsi,[rax+0x10]
  41d622:	mov    rcx,QWORD PTR [rsp+0x20]
  41d627:	mov    QWORD PTR [rcx],rsi
  41d62a:	lea    rcx,[rax+0x10000]
  41d631:	mov    rdx,QWORD PTR [rsp+0x28]
  41d636:	mov    QWORD PTR [rdx],rcx
  41d639:	add    rax,0xe0
  41d63f:	mov    QWORD PTR [r12+0x60],rax
  41d644:	mov    rax,QWORD PTR [r12+0x238]
  41d64c:	mov    QWORD PTR [rsi],rax
  41d64f:	mov    WORD PTR [rsi+0x10],0x2
  41d655:	mov    QWORD PTR [r12+0x238],rsi
  41d65d:	mov    rax,QWORD PTR [r12+0x340]
  41d665:	mov    QWORD PTR [rsi+0x18],rax
  41d669:	mov    rax,QWORD PTR [r12+0x40]
  41d66e:	test   rax,rax
  41d671:	je     41de34 <__flatcc_fb_parse@@Base+0x1054>
  41d677:	xor    edx,edx
  41d679:	nop    DWORD PTR [rax+0x0]
  41d680:	mov    rcx,rax
  41d683:	mov    rax,QWORD PTR [rax]
  41d686:	mov    QWORD PTR [rcx],rdx
  41d689:	mov    rdx,rcx
  41d68c:	test   rax,rax
  41d68f:	jne    41d680 <__flatcc_fb_parse@@Base+0x8a0>
  41d691:	jmp    41de36 <__flatcc_fb_parse@@Base+0x1056>
  41d696:	mov    rdi,r12
  41d699:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41d69e:	mov    rsi,QWORD PTR [r12+0x60]
  41d6a3:	lea    rax,[rsi+0xd0]
  41d6aa:	cmp    rax,QWORD PTR [r12+0x50]
  41d6af:	jbe    41d6f8 <__flatcc_fb_parse@@Base+0x918>
  41d6b1:	mov    edi,0x10000
  41d6b6:	mov    esi,0x1
  41d6bb:	call   406150 <calloc@plt>
  41d6c0:	test   rax,rax
  41d6c3:	je     41f2c4 <__flatcc_fb_parse@@Base+0x24e4>
  41d6c9:	mov    rdx,QWORD PTR [rsp+0x30]
  41d6ce:	mov    rcx,QWORD PTR [rdx]
  41d6d1:	mov    QWORD PTR [rax],rcx
  41d6d4:	mov    QWORD PTR [rdx],rax
  41d6d7:	lea    rsi,[rax+0x10]
  41d6db:	mov    rcx,QWORD PTR [rsp+0x20]
  41d6e0:	mov    QWORD PTR [rcx],rsi
  41d6e3:	lea    rcx,[rax+0x10000]
  41d6ea:	mov    rdx,QWORD PTR [rsp+0x28]
  41d6ef:	mov    QWORD PTR [rdx],rcx
  41d6f2:	add    rax,0xe0
  41d6f8:	mov    QWORD PTR [r12+0x60],rax
  41d6fd:	mov    rax,QWORD PTR [r12+0x238]
  41d705:	mov    QWORD PTR [rsi],rax
  41d708:	mov    WORD PTR [rsi+0x10],0x0
  41d70e:	mov    QWORD PTR [r12+0x238],rsi
  41d716:	mov    rax,QWORD PTR [r12+0x340]
  41d71e:	mov    QWORD PTR [rsi+0x18],rax
  41d722:	mov    rax,QWORD PTR [r12+0x40]
  41d727:	test   rax,rax
  41d72a:	je     41de4c <__flatcc_fb_parse@@Base+0x106c>
  41d730:	xor    edx,edx
  41d732:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d73c:	nop    DWORD PTR [rax+0x0]
  41d740:	mov    rcx,rax
  41d743:	mov    rax,QWORD PTR [rax]
  41d746:	mov    QWORD PTR [rcx],rdx
  41d749:	mov    rdx,rcx
  41d74c:	test   rax,rax
  41d74f:	jne    41d740 <__flatcc_fb_parse@@Base+0x960>
  41d751:	jmp    41de4e <__flatcc_fb_parse@@Base+0x106e>
  41d756:	mov    rdi,r12
  41d759:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41d75e:	mov    rsi,QWORD PTR [r12+0x60]
  41d763:	lea    rax,[rsi+0xd0]
  41d76a:	cmp    rax,QWORD PTR [r12+0x50]
  41d76f:	jbe    41d7b8 <__flatcc_fb_parse@@Base+0x9d8>
  41d771:	mov    edi,0x10000
  41d776:	mov    esi,0x1
  41d77b:	call   406150 <calloc@plt>
  41d780:	test   rax,rax
  41d783:	je     41f2c4 <__flatcc_fb_parse@@Base+0x24e4>
  41d789:	mov    rdx,QWORD PTR [rsp+0x30]
  41d78e:	mov    rcx,QWORD PTR [rdx]
  41d791:	mov    QWORD PTR [rax],rcx
  41d794:	mov    QWORD PTR [rdx],rax
  41d797:	lea    rsi,[rax+0x10]
  41d79b:	mov    rcx,QWORD PTR [rsp+0x20]
  41d7a0:	mov    QWORD PTR [rcx],rsi
  41d7a3:	lea    rcx,[rax+0x10000]
  41d7aa:	mov    rdx,QWORD PTR [rsp+0x28]
  41d7af:	mov    QWORD PTR [rdx],rcx
  41d7b2:	add    rax,0xe0
  41d7b8:	mov    QWORD PTR [r12+0x60],rax
  41d7bd:	mov    rax,QWORD PTR [r12+0x238]
  41d7c5:	mov    QWORD PTR [rsi],rax
  41d7c8:	mov    WORD PTR [rsi+0x10],0x1
  41d7ce:	mov    QWORD PTR [r12+0x238],rsi
  41d7d6:	mov    rax,QWORD PTR [r12+0x340]
  41d7de:	mov    QWORD PTR [rsi+0x18],rax
  41d7e2:	mov    rax,QWORD PTR [r12+0x40]
  41d7e7:	test   rax,rax
  41d7ea:	je     41de64 <__flatcc_fb_parse@@Base+0x1084>
  41d7f0:	xor    edx,edx
  41d7f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d7fc:	nop    DWORD PTR [rax+0x0]
  41d800:	mov    rcx,rax
  41d803:	mov    rax,QWORD PTR [rax]
  41d806:	mov    QWORD PTR [rcx],rdx
  41d809:	mov    rdx,rcx
  41d80c:	test   rax,rax
  41d80f:	jne    41d800 <__flatcc_fb_parse@@Base+0xa20>
  41d811:	jmp    41de66 <__flatcc_fb_parse@@Base+0x1086>
  41d816:	mov    rdi,r12
  41d819:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41d81e:	movzx  eax,WORD PTR [r12+0x230]
  41d827:	cmp    eax,0x2
  41d82a:	jne    41d852 <__flatcc_fb_parse@@Base+0xa72>
  41d82c:	mov    rsi,QWORD PTR [r12+0x48]
  41d831:	mov    r8,QWORD PTR [r12+0x220]
  41d839:	mov    r9d,DWORD PTR [r12+0x228]
  41d841:	xor    ecx,ecx
  41d843:	mov    rdi,r12
  41d846:	lea    rdx,[rip+0x2b131]        # 44897e <fb_schema_table_deleted@@Base+0xa4e>
  41d84d:	call   41c7d0 <__flatcc_error_report@@Base>
  41d852:	mov    rax,QWORD PTR [rsp+0x10]
  41d857:	mov    rbp,QWORD PTR [rax]
  41d85a:	cmp    QWORD PTR [rbp+0x20],0x13
  41d85f:	jne    41dc54 <__flatcc_fb_parse@@Base+0xe74>
  41d865:	mov    rdi,r12
  41d868:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41d86d:	test   rbp,rbp
  41d870:	je     41e7a0 <__flatcc_fb_parse@@Base+0x19c0>
  41d876:	mov    rdi,r12
  41d879:	mov    rsi,QWORD PTR [rsp+0x68]
  41d87e:	call   423310 <__flatcc_fb_clear_parser@@Base+0x140>
  41d883:	mov    rax,QWORD PTR [r12+0x48]
  41d888:	cmp    QWORD PTR [rax+0x20],0x3b
  41d88d:	je     41eb0c <__flatcc_fb_parse@@Base+0x1d2c>
  41d893:	test   rax,rax
  41d896:	je     41e998 <__flatcc_fb_parse@@Base+0x1bb8>
  41d89c:	mov    rcx,QWORD PTR [rax]
  41d89f:	xor    r9d,r9d
  41d8a2:	lea    rbp,[rip+0x1348a]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41d8a9:	mov    r10,rbp
  41d8ac:	test   rcx,rcx
  41d8af:	je     41d8b8 <__flatcc_fb_parse@@Base+0xad8>
  41d8b1:	mov    r9d,DWORD PTR [rax+0x8]
  41d8b5:	mov    r10,rcx
  41d8b8:	mov    rcx,r12
  41d8bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d8c0:	cmp    QWORD PTR [rcx+0x28],rax
  41d8c4:	ja     41d8d0 <__flatcc_fb_parse@@Base+0xaf0>
  41d8c6:	cmp    QWORD PTR [rcx+0x30],rax
  41d8ca:	ja     41ea70 <__flatcc_fb_parse@@Base+0x1c90>
  41d8d0:	mov    rcx,QWORD PTR [rcx]
  41d8d3:	test   rcx,rcx
  41d8d6:	jne    41d8c0 <__flatcc_fb_parse@@Base+0xae0>
  41d8d8:	lea    rdx,[rip+0x13454]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41d8df:	jmp    41ea77 <__flatcc_fb_parse@@Base+0x1c97>
  41d8e4:	mov    rdi,r12
  41d8e7:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41d8ec:	mov    r13,QWORD PTR [r12+0x60]
  41d8f1:	lea    rax,[r13+0xd0]
  41d8f8:	cmp    rax,QWORD PTR [r12+0x50]
  41d8fd:	jbe    41d946 <__flatcc_fb_parse@@Base+0xb66>
  41d8ff:	mov    edi,0x10000
  41d904:	mov    esi,0x1
  41d909:	call   406150 <calloc@plt>
  41d90e:	test   rax,rax
  41d911:	je     41f2c4 <__flatcc_fb_parse@@Base+0x24e4>
  41d917:	mov    rdx,QWORD PTR [rsp+0x30]
  41d91c:	mov    rcx,QWORD PTR [rdx]
  41d91f:	mov    QWORD PTR [rax],rcx
  41d922:	mov    QWORD PTR [rdx],rax
  41d925:	lea    r13,[rax+0x10]
  41d929:	mov    rcx,QWORD PTR [rsp+0x20]
  41d92e:	mov    QWORD PTR [rcx],r13
  41d931:	lea    rcx,[rax+0x10000]
  41d938:	mov    rdx,QWORD PTR [rsp+0x28]
  41d93d:	mov    QWORD PTR [rdx],rcx
  41d940:	add    rax,0xe0
  41d946:	mov    QWORD PTR [r12+0x60],rax
  41d94b:	mov    rax,QWORD PTR [r12+0x238]
  41d953:	mov    QWORD PTR [r13+0x0],rax
  41d957:	mov    WORD PTR [r13+0x10],0x4
  41d95e:	mov    QWORD PTR [r12+0x238],r13
  41d966:	mov    rax,QWORD PTR [r12+0x340]
  41d96e:	mov    QWORD PTR [r13+0x18],rax
  41d972:	mov    rax,QWORD PTR [r12+0x40]
  41d977:	test   rax,rax
  41d97a:	je     41de87 <__flatcc_fb_parse@@Base+0x10a7>
  41d980:	xor    edx,edx
  41d982:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d98c:	nop    DWORD PTR [rax+0x0]
  41d990:	mov    rcx,rax
  41d993:	mov    rax,QWORD PTR [rax]
  41d996:	mov    QWORD PTR [rcx],rdx
  41d999:	mov    rdx,rcx
  41d99c:	test   rax,rax
  41d99f:	jne    41d990 <__flatcc_fb_parse@@Base+0xbb0>
  41d9a1:	jmp    41de89 <__flatcc_fb_parse@@Base+0x10a9>
  41d9a6:	mov    rdi,r12
  41d9a9:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41d9ae:	mov    rbp,QWORD PTR [r12+0x48]
  41d9b3:	cmp    QWORD PTR [r12+0x248],0x0
  41d9bc:	je     41e67d <__flatcc_fb_parse@@Base+0x189d>
  41d9c2:	test   rbp,rbp
  41d9c5:	je     41e2c4 <__flatcc_fb_parse@@Base+0x14e4>
  41d9cb:	mov    rax,QWORD PTR [rbp+0x0]
  41d9cf:	xor    r9d,r9d
  41d9d2:	lea    r10,[rip+0x1335a]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41d9d9:	test   rax,rax
  41d9dc:	je     41d9e5 <__flatcc_fb_parse@@Base+0xc05>
  41d9de:	mov    r9d,DWORD PTR [rbp+0x8]
  41d9e2:	mov    r10,rax
  41d9e5:	mov    rax,r12
  41d9e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d9f0:	cmp    QWORD PTR [rax+0x28],rbp
  41d9f4:	ja     41da00 <__flatcc_fb_parse@@Base+0xc20>
  41d9f6:	cmp    QWORD PTR [rax+0x30],rbp
  41d9fa:	ja     41e644 <__flatcc_fb_parse@@Base+0x1864>
  41da00:	mov    rax,QWORD PTR [rax]
  41da03:	test   rax,rax
  41da06:	jne    41d9f0 <__flatcc_fb_parse@@Base+0xc10>
  41da08:	lea    rdx,[rip+0x13324]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41da0f:	jmp    41e64b <__flatcc_fb_parse@@Base+0x186b>
  41da14:	test   r14,r14
  41da17:	je     41e234 <__flatcc_fb_parse@@Base+0x1454>
  41da1d:	mov    rax,QWORD PTR [r14]
  41da20:	xor    r9d,r9d
  41da23:	lea    rbp,[rip+0x13309]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41da2a:	mov    r10,rbp
  41da2d:	test   rax,rax
  41da30:	je     41da39 <__flatcc_fb_parse@@Base+0xc59>
  41da32:	mov    r9d,DWORD PTR [r14+0x8]
  41da36:	mov    r10,rax
  41da39:	mov    rax,r12
  41da3c:	nop    DWORD PTR [rax+0x0]
  41da40:	cmp    QWORD PTR [rax+0x28],r14
  41da44:	ja     41da50 <__flatcc_fb_parse@@Base+0xc70>
  41da46:	cmp    QWORD PTR [rax+0x30],r14
  41da4a:	ja     41e2e1 <__flatcc_fb_parse@@Base+0x1501>
  41da50:	mov    rax,QWORD PTR [rax]
  41da53:	test   rax,rax
  41da56:	jne    41da40 <__flatcc_fb_parse@@Base+0xc60>
  41da58:	lea    rdx,[rip+0x132d4]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41da5f:	jmp    41e2e8 <__flatcc_fb_parse@@Base+0x1508>
  41da64:	mov    rdi,r12
  41da67:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41da6c:	mov    r15,QWORD PTR [r12+0x60]
  41da71:	lea    rax,[r15+0x30]
  41da75:	cmp    rax,QWORD PTR [r12+0x50]
  41da7a:	jbe    41dac1 <__flatcc_fb_parse@@Base+0xce1>
  41da7c:	mov    edi,0x10000
  41da81:	mov    esi,0x1
  41da86:	call   406150 <calloc@plt>
  41da8b:	test   rax,rax
  41da8e:	je     41f2c4 <__flatcc_fb_parse@@Base+0x24e4>
  41da94:	mov    rdx,QWORD PTR [rsp+0x30]
  41da99:	mov    rcx,QWORD PTR [rdx]
  41da9c:	mov    QWORD PTR [rax],rcx
  41da9f:	mov    QWORD PTR [rdx],rax
  41daa2:	lea    r15,[rax+0x10]
  41daa6:	mov    rcx,QWORD PTR [rsp+0x20]
  41daab:	mov    QWORD PTR [rcx],r15
  41daae:	lea    rcx,[rax+0x10000]
  41dab5:	mov    rdx,QWORD PTR [rsp+0x28]
  41daba:	mov    QWORD PTR [rdx],rcx
  41dabd:	add    rax,0x40
  41dac1:	mov    QWORD PTR [r12+0x60],rax
  41dac6:	mov    rax,QWORD PTR [r12+0x200]
  41dace:	mov    QWORD PTR [r15],rax
  41dad1:	mov    QWORD PTR [r12+0x200],r15
  41dad9:	mov    rbp,QWORD PTR [r12+0x48]
  41dade:	cmp    QWORD PTR [rbp+0x20],0x13
  41dae3:	jne    41dca4 <__flatcc_fb_parse@@Base+0xec4>
  41dae9:	mov    rdi,r12
  41daec:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41daf1:	test   rbp,rbp
  41daf4:	je     41e801 <__flatcc_fb_parse@@Base+0x1a21>
  41dafa:	lea    rsi,[r15+0x8]
  41dafe:	mov    rdi,r12
  41db01:	call   423310 <__flatcc_fb_clear_parser@@Base+0x140>
  41db06:	cmp    DWORD PTR [r15+0x10],0x0
  41db0b:	jne    41e801 <__flatcc_fb_parse@@Base+0x1a21>
  41db11:	mov    rax,QWORD PTR [rbp+0x0]
  41db15:	xor    r9d,r9d
  41db18:	lea    r10,[rip+0x13214]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41db1f:	test   rax,rax
  41db22:	je     41db2b <__flatcc_fb_parse@@Base+0xd4b>
  41db24:	mov    r9d,DWORD PTR [rbp+0x8]
  41db28:	mov    r10,rax
  41db2b:	mov    rax,r12
  41db2e:	xchg   ax,ax
  41db30:	cmp    QWORD PTR [rax+0x28],rbp
  41db34:	ja     41db40 <__flatcc_fb_parse@@Base+0xd60>
  41db36:	cmp    QWORD PTR [rax+0x30],rbp
  41db3a:	ja     41ea14 <__flatcc_fb_parse@@Base+0x1c34>
  41db40:	mov    rax,QWORD PTR [rax]
  41db43:	test   rax,rax
  41db46:	jne    41db30 <__flatcc_fb_parse@@Base+0xd50>
  41db48:	lea    rdx,[rip+0x131e4]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41db4f:	jmp    41ea1b <__flatcc_fb_parse@@Base+0x1c3b>
  41db54:	test   r14,r14
  41db57:	je     41e27c <__flatcc_fb_parse@@Base+0x149c>
  41db5d:	mov    rax,r12
  41db60:	cmp    QWORD PTR [rax+0x28],r14
  41db64:	ja     41db70 <__flatcc_fb_parse@@Base+0xd90>
  41db66:	cmp    QWORD PTR [rax+0x30],r14
  41db6a:	ja     41e362 <__flatcc_fb_parse@@Base+0x1582>
  41db70:	mov    rax,QWORD PTR [rax]
  41db73:	test   rax,rax
  41db76:	jne    41db60 <__flatcc_fb_parse@@Base+0xd80>
  41db78:	lea    rdx,[rip+0x131b4]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41db7f:	jmp    41e369 <__flatcc_fb_parse@@Base+0x1589>
  41db84:	test   r14,r14
  41db87:	je     41e294 <__flatcc_fb_parse@@Base+0x14b4>
  41db8d:	mov    rax,r12
  41db90:	cmp    QWORD PTR [rax+0x28],r14
  41db94:	ja     41dba0 <__flatcc_fb_parse@@Base+0xdc0>
  41db96:	cmp    QWORD PTR [rax+0x30],r14
  41db9a:	ja     41e397 <__flatcc_fb_parse@@Base+0x15b7>
  41dba0:	mov    rax,QWORD PTR [rax]
  41dba3:	test   rax,rax
  41dba6:	jne    41db90 <__flatcc_fb_parse@@Base+0xdb0>
  41dba8:	lea    rdx,[rip+0x13184]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41dbaf:	jmp    41e39e <__flatcc_fb_parse@@Base+0x15be>
  41dbb4:	test   r14,r14
  41dbb7:	je     41e2ac <__flatcc_fb_parse@@Base+0x14cc>
  41dbbd:	mov    rax,QWORD PTR [r14]
  41dbc0:	xor    r9d,r9d
  41dbc3:	lea    rbp,[rip+0x13169]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41dbca:	mov    r10,rbp
  41dbcd:	test   rax,rax
  41dbd0:	je     41dbd9 <__flatcc_fb_parse@@Base+0xdf9>
  41dbd2:	mov    r9d,DWORD PTR [r14+0x8]
  41dbd6:	mov    r10,rax
  41dbd9:	mov    rax,r12
  41dbdc:	nop    DWORD PTR [rax+0x0]
  41dbe0:	cmp    QWORD PTR [rax+0x28],r14
  41dbe4:	ja     41dbf0 <__flatcc_fb_parse@@Base+0xe10>
  41dbe6:	cmp    QWORD PTR [rax+0x30],r14
  41dbea:	ja     41e3d0 <__flatcc_fb_parse@@Base+0x15f0>
  41dbf0:	mov    rax,QWORD PTR [rax]
  41dbf3:	test   rax,rax
  41dbf6:	jne    41dbe0 <__flatcc_fb_parse@@Base+0xe00>
  41dbf8:	lea    rdx,[rip+0x13134]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41dbff:	jmp    41e3d7 <__flatcc_fb_parse@@Base+0x15f7>
  41dc04:	test   rbp,rbp
  41dc07:	je     41e494 <__flatcc_fb_parse@@Base+0x16b4>
  41dc0d:	mov    rax,QWORD PTR [rbp+0x0]
  41dc11:	xor    r9d,r9d
  41dc14:	lea    r10,[rip+0x13118]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41dc1b:	test   rax,rax
  41dc1e:	je     41dc27 <__flatcc_fb_parse@@Base+0xe47>
  41dc20:	mov    r9d,DWORD PTR [rbp+0x8]
  41dc24:	mov    r10,rax
  41dc27:	mov    rax,r12
  41dc2a:	nop    WORD PTR [rax+rax*1+0x0]
  41dc30:	cmp    QWORD PTR [rax+0x28],rbp
  41dc34:	ja     41dc40 <__flatcc_fb_parse@@Base+0xe60>
  41dc36:	cmp    QWORD PTR [rax+0x30],rbp
  41dc3a:	ja     41e6ed <__flatcc_fb_parse@@Base+0x190d>
  41dc40:	mov    rax,QWORD PTR [rax]
  41dc43:	test   rax,rax
  41dc46:	jne    41dc30 <__flatcc_fb_parse@@Base+0xe50>
  41dc48:	lea    rdx,[rip+0x130e4]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41dc4f:	jmp    41e6f4 <__flatcc_fb_parse@@Base+0x1914>
  41dc54:	test   rbp,rbp
  41dc57:	je     41e4b1 <__flatcc_fb_parse@@Base+0x16d1>
  41dc5d:	mov    rax,QWORD PTR [rbp+0x0]
  41dc61:	xor    r9d,r9d
  41dc64:	lea    r10,[rip+0x130c8]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41dc6b:	test   rax,rax
  41dc6e:	je     41dc77 <__flatcc_fb_parse@@Base+0xe97>
  41dc70:	mov    r9d,DWORD PTR [rbp+0x8]
  41dc74:	mov    r10,rax
  41dc77:	mov    rax,r12
  41dc7a:	nop    WORD PTR [rax+rax*1+0x0]
  41dc80:	cmp    QWORD PTR [rax+0x28],rbp
  41dc84:	ja     41dc90 <__flatcc_fb_parse@@Base+0xeb0>
  41dc86:	cmp    QWORD PTR [rax+0x30],rbp
  41dc8a:	ja     41e758 <__flatcc_fb_parse@@Base+0x1978>
  41dc90:	mov    rax,QWORD PTR [rax]
  41dc93:	test   rax,rax
  41dc96:	jne    41dc80 <__flatcc_fb_parse@@Base+0xea0>
  41dc98:	lea    rdx,[rip+0x13094]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41dc9f:	jmp    41e75f <__flatcc_fb_parse@@Base+0x197f>
  41dca4:	test   rbp,rbp
  41dca7:	je     41e508 <__flatcc_fb_parse@@Base+0x1728>
  41dcad:	mov    rax,QWORD PTR [rbp+0x0]
  41dcb1:	xor    r9d,r9d
  41dcb4:	lea    r10,[rip+0x13078]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41dcbb:	test   rax,rax
  41dcbe:	je     41dcc7 <__flatcc_fb_parse@@Base+0xee7>
  41dcc0:	mov    r9d,DWORD PTR [rbp+0x8]
  41dcc4:	mov    r10,rax
  41dcc7:	mov    rax,r12
  41dcca:	nop    WORD PTR [rax+rax*1+0x0]
  41dcd0:	cmp    QWORD PTR [rax+0x28],rbp
  41dcd4:	ja     41dce0 <__flatcc_fb_parse@@Base+0xf00>
  41dcd6:	cmp    QWORD PTR [rax+0x30],rbp
  41dcda:	ja     41e7c8 <__flatcc_fb_parse@@Base+0x19e8>
  41dce0:	mov    rax,QWORD PTR [rax]
  41dce3:	test   rax,rax
  41dce6:	jne    41dcd0 <__flatcc_fb_parse@@Base+0xef0>
  41dce8:	lea    rdx,[rip+0x13044]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41dcef:	jmp    41e7cf <__flatcc_fb_parse@@Base+0x19ef>
  41dcf4:	xor    ecx,ecx
  41dcf6:	mov    QWORD PTR [r13+0x40],rcx
  41dcfa:	mov    rax,QWORD PTR [rsp+0x18]
  41dcff:	mov    QWORD PTR [rax],0x0
  41dd06:	mov    rax,QWORD PTR [rsp+0x10]
  41dd0b:	mov    rbp,QWORD PTR [rax]
  41dd0e:	cmp    QWORD PTR [rbp+0x20],0x9
  41dd13:	jne    41dde4 <__flatcc_fb_parse@@Base+0x1004>
  41dd19:	mov    rdi,r12
  41dd1c:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41dd21:	mov    QWORD PTR [r13+0x8],rbp
  41dd25:	test   rbp,rbp
  41dd28:	je     41f110 <__flatcc_fb_parse@@Base+0x2330>
  41dd2e:	mov    rax,QWORD PTR [rsp+0x10]
  41dd33:	mov    rbp,QWORD PTR [rax]
  41dd36:	cmp    QWORD PTR [rbp+0x20],0x3a
  41dd3b:	jne    41ee1c <__flatcc_fb_parse@@Base+0x203c>
  41dd41:	mov    rdi,r12
  41dd44:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41dd49:	test   rbp,rbp
  41dd4c:	je     41ee1c <__flatcc_fb_parse@@Base+0x203c>
  41dd52:	lea    rsi,[r13+0x48]
  41dd56:	mov    rdi,r12
  41dd59:	call   424910 <__flatcc_fb_clear_parser@@Base+0x1740>
  41dd5e:	movzx  ecx,WORD PTR [r13+0x58]
  41dd63:	mov    rax,QWORD PTR [r13+0x48]
  41dd67:	cmp    ecx,0x8
  41dd6a:	jne    41e9c8 <__flatcc_fb_parse@@Base+0x1be8>
  41dd70:	mov    rcx,QWORD PTR [rax+0x20]
  41dd74:	mov    edx,0x3e4
  41dd79:	add    rcx,rdx
  41dd7c:	cmp    rcx,0x15
  41dd80:	ja     41ee1c <__flatcc_fb_parse@@Base+0x203c>
  41dd86:	mov    edx,0x200803
  41dd8b:	bt     rdx,rcx
  41dd8f:	jae    41ee1c <__flatcc_fb_parse@@Base+0x203c>
  41dd95:	mov    rcx,QWORD PTR [rax]
  41dd98:	xor    r9d,r9d
  41dd9b:	lea    rbp,[rip+0x12f91]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41dda2:	mov    r10,rbp
  41dda5:	test   rcx,rcx
  41dda8:	je     41ddb1 <__flatcc_fb_parse@@Base+0xfd1>
  41ddaa:	mov    r9d,DWORD PTR [rax+0x8]
  41ddae:	mov    r10,rcx
  41ddb1:	mov    rcx,r12
  41ddb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ddbe:	xchg   ax,ax
  41ddc0:	cmp    QWORD PTR [rcx+0x28],rax
  41ddc4:	ja     41ddd0 <__flatcc_fb_parse@@Base+0xff0>
  41ddc6:	cmp    QWORD PTR [rcx+0x30],rax
  41ddca:	ja     41ec00 <__flatcc_fb_parse@@Base+0x1e20>
  41ddd0:	mov    rcx,QWORD PTR [rcx]
  41ddd3:	test   rcx,rcx
  41ddd6:	jne    41ddc0 <__flatcc_fb_parse@@Base+0xfe0>
  41ddd8:	lea    rdx,[rip+0x12f54]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41dddf:	jmp    41ec07 <__flatcc_fb_parse@@Base+0x1e27>
  41dde4:	test   rbp,rbp
  41dde7:	je     41e4ce <__flatcc_fb_parse@@Base+0x16ee>
  41dded:	mov    rax,QWORD PTR [rbp+0x0]
  41ddf1:	xor    r9d,r9d
  41ddf4:	lea    r10,[rip+0x12f38]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41ddfb:	test   rax,rax
  41ddfe:	je     41de07 <__flatcc_fb_parse@@Base+0x1027>
  41de00:	mov    r9d,DWORD PTR [rbp+0x8]
  41de04:	mov    r10,rax
  41de07:	mov    rax,r12
  41de0a:	nop    WORD PTR [rax+rax*1+0x0]
  41de10:	cmp    QWORD PTR [rax+0x28],rbp
  41de14:	ja     41de20 <__flatcc_fb_parse@@Base+0x1040>
  41de16:	cmp    QWORD PTR [rax+0x30],rbp
  41de1a:	ja     41e87c <__flatcc_fb_parse@@Base+0x1a9c>
  41de20:	mov    rax,QWORD PTR [rax]
  41de23:	test   rax,rax
  41de26:	jne    41de10 <__flatcc_fb_parse@@Base+0x1030>
  41de28:	lea    rdx,[rip+0x12f04]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41de2f:	jmp    41e883 <__flatcc_fb_parse@@Base+0x1aa3>
  41de34:	xor    ecx,ecx
  41de36:	mov    QWORD PTR [rsi+0x40],rcx
  41de3a:	mov    QWORD PTR [r12+0x40],0x0
  41de43:	mov    rdx,0xfffffffffffffc39
  41de4a:	jmp    41de7a <__flatcc_fb_parse@@Base+0x109a>
  41de4c:	xor    ecx,ecx
  41de4e:	mov    QWORD PTR [rsi+0x40],rcx
  41de52:	mov    QWORD PTR [r12+0x40],0x0
  41de5b:	mov    rdx,0xfffffffffffffc29
  41de62:	jmp    41de7a <__flatcc_fb_parse@@Base+0x109a>
  41de64:	xor    ecx,ecx
  41de66:	mov    QWORD PTR [rsi+0x40],rcx
  41de6a:	mov    QWORD PTR [r12+0x40],0x0
  41de73:	mov    rdx,0xfffffffffffffc33
  41de7a:	mov    rdi,r12
  41de7d:	call   423580 <__flatcc_fb_clear_parser@@Base+0x3b0>
  41de82:	jmp    41ebb0 <__flatcc_fb_parse@@Base+0x1dd0>
  41de87:	xor    ecx,ecx
  41de89:	mov    QWORD PTR [r13+0x40],rcx
  41de8d:	mov    rax,QWORD PTR [rsp+0x18]
  41de92:	mov    QWORD PTR [rax],0x0
  41de99:	mov    rax,QWORD PTR [rsp+0x10]
  41de9e:	mov    rbp,QWORD PTR [rax]
  41dea1:	cmp    QWORD PTR [rbp+0x20],0x9
  41dea6:	jne    41e1e4 <__flatcc_fb_parse@@Base+0x1404>
  41deac:	mov    rdi,r12
  41deaf:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41deb4:	mov    QWORD PTR [r13+0x8],rbp
  41deb8:	test   rbp,rbp
  41debb:	je     41ece5 <__flatcc_fb_parse@@Base+0x1f05>
  41dec1:	mov    rdi,r12
  41dec4:	call   4241a0 <__flatcc_fb_clear_parser@@Base+0xfd0>
  41dec9:	mov    QWORD PTR [r13+0x38],rax
  41decd:	mov    rbx,QWORD PTR [r12+0x48]
  41ded2:	cmp    QWORD PTR [rbx+0x20],0x7b
  41ded7:	jne    41e5f4 <__flatcc_fb_parse@@Base+0x1814>
  41dedd:	mov    rdi,r12
  41dee0:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41dee5:	test   rbx,rbx
  41dee8:	je     41ece5 <__flatcc_fb_parse@@Base+0x1f05>
  41deee:	mov    rax,QWORD PTR [rsp+0x10]
  41def3:	mov    r15,QWORD PTR [rax]
  41def6:	cmp    QWORD PTR [r15+0x20],0x9
  41defb:	mov    QWORD PTR [rsp+0x40],r13
  41df00:	jne    41e195 <__flatcc_fb_parse@@Base+0x13b5>
  41df06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41df10:	mov    rax,QWORD PTR [rsp+0x8]
  41df15:	cmp    DWORD PTR [rax],0x9
  41df18:	jg     41ece5 <__flatcc_fb_parse@@Base+0x1f05>
  41df1e:	mov    rdx,QWORD PTR [rsp+0x20]
  41df23:	mov    rbp,QWORD PTR [rdx]
  41df26:	lea    rax,[rbp+0xb0]
  41df2d:	mov    rcx,QWORD PTR [rsp+0x28]
  41df32:	cmp    rax,QWORD PTR [rcx]
  41df35:	jbe    41df7e <__flatcc_fb_parse@@Base+0x119e>
  41df37:	mov    edi,0x10000
  41df3c:	mov    esi,0x1
  41df41:	call   406150 <calloc@plt>
  41df46:	test   rax,rax
  41df49:	je     41f2c4 <__flatcc_fb_parse@@Base+0x24e4>
  41df4f:	mov    rdx,QWORD PTR [rsp+0x30]
  41df54:	mov    rcx,QWORD PTR [rdx]
  41df57:	mov    QWORD PTR [rax],rcx
  41df5a:	mov    QWORD PTR [rdx],rax
  41df5d:	lea    rbp,[rax+0x10]
  41df61:	mov    rdx,QWORD PTR [rsp+0x20]
  41df66:	mov    QWORD PTR [rdx],rbp
  41df69:	lea    rcx,[rax+0x10000]
  41df70:	mov    rsi,QWORD PTR [rsp+0x28]
  41df75:	mov    QWORD PTR [rsi],rcx
  41df78:	add    rax,0xc0
  41df7e:	mov    QWORD PTR [rdx],rax
  41df81:	mov    rax,QWORD PTR [r13+0x28]
  41df85:	mov    QWORD PTR [rbp+0x0],rax
  41df89:	mov    WORD PTR [rbp+0x10],0x5
  41df8f:	mov    QWORD PTR [r13+0x28],rbp
  41df93:	mov    rax,QWORD PTR [rsp+0x18]
  41df98:	mov    rax,QWORD PTR [rax]
  41df9b:	test   rax,rax
  41df9e:	je     41dfc3 <__flatcc_fb_parse@@Base+0x11e3>
  41dfa0:	xor    edx,edx
  41dfa2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dfac:	nop    DWORD PTR [rax+0x0]
  41dfb0:	mov    rcx,rax
  41dfb3:	mov    rax,QWORD PTR [rax]
  41dfb6:	mov    QWORD PTR [rcx],rdx
  41dfb9:	mov    rdx,rcx
  41dfbc:	test   rax,rax
  41dfbf:	jne    41dfb0 <__flatcc_fb_parse@@Base+0x11d0>
  41dfc1:	jmp    41dfc5 <__flatcc_fb_parse@@Base+0x11e5>
  41dfc3:	xor    ecx,ecx
  41dfc5:	mov    QWORD PTR [rbp+0x68],rcx
  41dfc9:	mov    QWORD PTR [r12+0x40],0x0
  41dfd2:	mov    rdi,r12
  41dfd5:	lea    rsi,[rsp+0x38]
  41dfda:	call   424020 <__flatcc_fb_clear_parser@@Base+0xe50>
  41dfdf:	mov    rax,QWORD PTR [rsp+0x38]
  41dfe4:	mov    QWORD PTR [rbp+0x18],rax
  41dfe8:	mov    WORD PTR [rbp+0x28],0xc
  41dfee:	mov    rcx,QWORD PTR [rax]
  41dff1:	test   rcx,rcx
  41dff4:	je     41e010 <__flatcc_fb_parse@@Base+0x1230>
  41dff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e000:	mov    rax,rcx
  41e003:	mov    rcx,QWORD PTR [rcx]
  41e006:	test   rcx,rcx
  41e009:	jne    41e000 <__flatcc_fb_parse@@Base+0x1220>
  41e00b:	mov    QWORD PTR [rsp+0x38],rax
  41e010:	mov    rax,QWORD PTR [rax+0x8]
  41e014:	mov    QWORD PTR [rbp+0x8],rax
  41e018:	mov    rax,QWORD PTR [rsp+0x10]
  41e01d:	mov    r13,QWORD PTR [rax]
  41e020:	mov    rax,QWORD PTR [r13+0x20]
  41e024:	cmp    rax,0x3a
  41e028:	jne    41e115 <__flatcc_fb_parse@@Base+0x1335>
  41e02e:	mov    rdi,r12
  41e031:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41e036:	test   r13,r13
  41e039:	je     41e109 <__flatcc_fb_parse@@Base+0x1329>
  41e03f:	lea    r13,[rbp+0x18]
  41e043:	mov    rax,QWORD PTR [r13+0x0]
  41e047:	cmp    QWORD PTR [rax],0x0
  41e04b:	je     41e0fe <__flatcc_fb_parse@@Base+0x131e>
  41e051:	test   r15,r15
  41e054:	je     41e0a0 <__flatcc_fb_parse@@Base+0x12c0>
  41e056:	mov    rax,QWORD PTR [r15]
  41e059:	xor    r9d,r9d
  41e05c:	lea    r10,[rip+0x12cd0]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41e063:	test   rax,rax
  41e066:	je     41e06f <__flatcc_fb_parse@@Base+0x128f>
  41e068:	mov    r9d,DWORD PTR [r15+0x8]
  41e06c:	mov    r10,rax
  41e06f:	mov    rax,r12
  41e072:	mov    QWORD PTR [rsp+0x48],r13
  41e077:	nop    WORD PTR [rax+rax*1+0x0]
  41e080:	cmp    QWORD PTR [rax+0x28],r15
  41e084:	ja     41e08c <__flatcc_fb_parse@@Base+0x12ac>
  41e086:	cmp    QWORD PTR [rax+0x30],r15
  41e08a:	ja     41e0ba <__flatcc_fb_parse@@Base+0x12da>
  41e08c:	mov    rax,QWORD PTR [rax]
  41e08f:	test   rax,rax
  41e092:	jne    41e080 <__flatcc_fb_parse@@Base+0x12a0>
  41e094:	mov    r13,rbp
  41e097:	lea    rdx,[rip+0x12c95]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41e09e:	jmp    41e0c4 <__flatcc_fb_parse@@Base+0x12e4>
  41e0a0:	xor    eax,eax
  41e0a2:	mov    rdi,r12
  41e0a5:	lea    rsi,[rip+0x2a376]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41e0ac:	lea    rdx,[rip+0x2aef5]        # 448fa8 <fb_schema_table_deleted@@Base+0x1078>
  41e0b3:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41e0b8:	jmp    41e0f6 <__flatcc_fb_parse@@Base+0x1316>
  41e0ba:	mov    r13,rbp
  41e0bd:	mov    rdx,QWORD PTR [rax+0x318]
  41e0c4:	mov    rcx,QWORD PTR [r15+0x10]
  41e0c8:	mov    r8,QWORD PTR [r15+0x18]
  41e0cc:	mov    eax,0x0
  41e0d1:	mov    rdi,r12
  41e0d4:	lea    rsi,[rip+0x2a2f5]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41e0db:	lea    rbp,[rip+0x2aec6]        # 448fa8 <fb_schema_table_deleted@@Base+0x1078>
  41e0e2:	push   rbp
  41e0e3:	push   r10
  41e0e5:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41e0ea:	add    rsp,0x10
  41e0ee:	mov    rbp,r13
  41e0f1:	mov    r13,QWORD PTR [rsp+0x48]
  41e0f6:	mov    rax,QWORD PTR [rsp+0x8]
  41e0fb:	add    DWORD PTR [rax],0x1
  41e0fe:	mov    rdi,r12
  41e101:	mov    rsi,r13
  41e104:	call   424910 <__flatcc_fb_clear_parser@@Base+0x1740>
  41e109:	mov    rax,QWORD PTR [rsp+0x10]
  41e10e:	mov    r13,QWORD PTR [rax]
  41e111:	mov    rax,QWORD PTR [r13+0x20]
  41e115:	cmp    rax,0x3d
  41e119:	jne    41e140 <__flatcc_fb_parse@@Base+0x1360>
  41e11b:	mov    rdi,r12
  41e11e:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41e123:	test   r13,r13
  41e126:	je     41e140 <__flatcc_fb_parse@@Base+0x1360>
  41e128:	add    rbp,0x48
  41e12c:	xor    edx,edx
  41e12e:	mov    rdi,r12
  41e131:	mov    rsi,rbp
  41e134:	lea    rcx,[rip+0x2adcf]        # 448f0a <fb_schema_table_deleted@@Base+0xfda>
  41e13b:	call   424420 <__flatcc_fb_clear_parser@@Base+0x1250>
  41e140:	mov    rax,QWORD PTR [rsp+0x10]
  41e145:	mov    r15,QWORD PTR [rax]
  41e148:	mov    rax,QWORD PTR [r15+0x20]
  41e14c:	cmp    rax,0x2c
  41e150:	jne    41ec3f <__flatcc_fb_parse@@Base+0x1e5f>
  41e156:	mov    rdi,r12
  41e159:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41e15e:	test   r15,r15
  41e161:	mov    r15,QWORD PTR [r12+0x48]
  41e166:	mov    rax,QWORD PTR [r15+0x20]
  41e16a:	mov    r13,QWORD PTR [rsp+0x40]
  41e16f:	je     41ec44 <__flatcc_fb_parse@@Base+0x1e64>
  41e175:	mov    rcx,QWORD PTR [rsp+0x18]
  41e17a:	mov    QWORD PTR [rcx],0x0
  41e181:	cmp    rax,0x9
  41e185:	je     41df10 <__flatcc_fb_parse@@Base+0x1130>
  41e18b:	cmp    rax,0x7d
  41e18f:	je     41ec56 <__flatcc_fb_parse@@Base+0x1e76>
  41e195:	test   r15,r15
  41e198:	je     41ebc6 <__flatcc_fb_parse@@Base+0x1de6>
  41e19e:	mov    rax,QWORD PTR [r15]
  41e1a1:	xor    r9d,r9d
  41e1a4:	lea    rbp,[rip+0x12b88]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41e1ab:	mov    r10,rbp
  41e1ae:	test   rax,rax
  41e1b1:	je     41e1ba <__flatcc_fb_parse@@Base+0x13da>
  41e1b3:	mov    r9d,DWORD PTR [r15+0x8]
  41e1b7:	mov    r10,rax
  41e1ba:	mov    rax,r12
  41e1bd:	nop    DWORD PTR [rax]
  41e1c0:	cmp    QWORD PTR [rax+0x28],r15
  41e1c4:	ja     41e1d0 <__flatcc_fb_parse@@Base+0x13f0>
  41e1c6:	cmp    QWORD PTR [rax+0x30],r15
  41e1ca:	ja     41eca3 <__flatcc_fb_parse@@Base+0x1ec3>
  41e1d0:	mov    rax,QWORD PTR [rax]
  41e1d3:	test   rax,rax
  41e1d6:	jne    41e1c0 <__flatcc_fb_parse@@Base+0x13e0>
  41e1d8:	lea    rdx,[rip+0x12b54]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41e1df:	jmp    41ecaa <__flatcc_fb_parse@@Base+0x1eca>
  41e1e4:	test   rbp,rbp
  41e1e7:	je     41e4eb <__flatcc_fb_parse@@Base+0x170b>
  41e1ed:	mov    rax,QWORD PTR [rbp+0x0]
  41e1f1:	xor    r9d,r9d
  41e1f4:	lea    r10,[rip+0x12b38]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41e1fb:	test   rax,rax
  41e1fe:	je     41e207 <__flatcc_fb_parse@@Base+0x1427>
  41e200:	mov    r9d,DWORD PTR [rbp+0x8]
  41e204:	mov    r10,rax
  41e207:	mov    rax,r12
  41e20a:	nop    WORD PTR [rax+rax*1+0x0]
  41e210:	cmp    QWORD PTR [rax+0x28],rbp
  41e214:	ja     41e220 <__flatcc_fb_parse@@Base+0x1440>
  41e216:	cmp    QWORD PTR [rax+0x30],rbp
  41e21a:	ja     41e8c2 <__flatcc_fb_parse@@Base+0x1ae2>
  41e220:	mov    rax,QWORD PTR [rax]
  41e223:	test   rax,rax
  41e226:	jne    41e210 <__flatcc_fb_parse@@Base+0x1430>
  41e228:	lea    rdx,[rip+0x12b04]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41e22f:	jmp    41e8c9 <__flatcc_fb_parse@@Base+0x1ae9>
  41e234:	xor    eax,eax
  41e236:	mov    rdi,r12
  41e239:	lea    rsi,[rip+0x2a1e2]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41e240:	lea    rdx,[rip+0x2a59a]        # 4487e1 <fb_schema_table_deleted@@Base+0x8b1>
  41e247:	jmp    41eb70 <__flatcc_fb_parse@@Base+0x1d90>
  41e24c:	xor    eax,eax
  41e24e:	mov    rdi,r12
  41e251:	lea    rsi,[rip+0x2a1ca]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41e258:	lea    rdx,[rip+0x2a64c]        # 4488ab <fb_schema_table_deleted@@Base+0x97b>
  41e25f:	jmp    41eb70 <__flatcc_fb_parse@@Base+0x1d90>
  41e264:	xor    eax,eax
  41e266:	mov    rdi,r12
  41e269:	lea    rsi,[rip+0x2a1b2]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41e270:	lea    rdx,[rip+0x2a5a0]        # 448817 <fb_schema_table_deleted@@Base+0x8e7>
  41e277:	jmp    41eb70 <__flatcc_fb_parse@@Base+0x1d90>
  41e27c:	xor    eax,eax
  41e27e:	mov    rdi,r12
  41e281:	lea    rsi,[rip+0x2a19a]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41e288:	lea    rdx,[rip+0x2a5ea]        # 448879 <fb_schema_table_deleted@@Base+0x949>
  41e28f:	jmp    41eb70 <__flatcc_fb_parse@@Base+0x1d90>
  41e294:	xor    eax,eax
  41e296:	mov    rdi,r12
  41e299:	lea    rsi,[rip+0x2a182]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41e2a0:	lea    rdx,[rip+0x2a62c]        # 4488d3 <fb_schema_table_deleted@@Base+0x9a3>
  41e2a7:	jmp    41eb70 <__flatcc_fb_parse@@Base+0x1d90>
  41e2ac:	xor    eax,eax
  41e2ae:	mov    rdi,r12
  41e2b1:	lea    rsi,[rip+0x2a16a]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41e2b8:	lea    rdx,[rip+0x2a62f]        # 4488ee <fb_schema_table_deleted@@Base+0x9be>
  41e2bf:	jmp    41eb70 <__flatcc_fb_parse@@Base+0x1d90>
  41e2c4:	xor    eax,eax
  41e2c6:	mov    rdi,r12
  41e2c9:	lea    rsi,[rip+0x2a152]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41e2d0:	lea    rdx,[rip+0x2a78b]        # 448a62 <fb_schema_table_deleted@@Base+0xb32>
  41e2d7:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41e2dc:	jmp    41e675 <__flatcc_fb_parse@@Base+0x1895>
  41e2e1:	mov    rdx,QWORD PTR [rax+0x318]
  41e2e8:	mov    rcx,QWORD PTR [r14+0x10]
  41e2ec:	mov    r8,QWORD PTR [r14+0x18]
  41e2f0:	mov    eax,0x0
  41e2f5:	mov    rdi,r12
  41e2f8:	lea    rsi,[rip+0x2a0d1]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41e2ff:	lea    rbp,[rip+0x2a4db]        # 4487e1 <fb_schema_table_deleted@@Base+0x8b1>
  41e306:	jmp    41eb9c <__flatcc_fb_parse@@Base+0x1dbc>
  41e30b:	mov    rdx,QWORD PTR [rax+0x318]
  41e312:	mov    rcx,QWORD PTR [r14+0x10]
  41e316:	mov    r8,QWORD PTR [r14+0x18]
  41e31a:	mov    r9d,0x1
  41e320:	mov    eax,0x0
  41e325:	mov    rdi,r12
  41e328:	lea    rsi,[rip+0x2a0a1]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41e32f:	lea    rbp,[rip+0x2a575]        # 4488ab <fb_schema_table_deleted@@Base+0x97b>
  41e336:	jmp    41e38d <__flatcc_fb_parse@@Base+0x15ad>
  41e338:	mov    rdx,QWORD PTR [rax+0x318]
  41e33f:	mov    rcx,QWORD PTR [r14+0x10]
  41e343:	mov    r8,QWORD PTR [r14+0x18]
  41e347:	mov    eax,0x0
  41e34c:	mov    rdi,r12
  41e34f:	lea    rsi,[rip+0x2a07a]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41e356:	lea    rbp,[rip+0x2a4ba]        # 448817 <fb_schema_table_deleted@@Base+0x8e7>
  41e35d:	jmp    41eb9c <__flatcc_fb_parse@@Base+0x1dbc>
  41e362:	mov    rdx,QWORD PTR [rax+0x318]
  41e369:	mov    rcx,QWORD PTR [r14+0x10]
  41e36d:	mov    r8,QWORD PTR [r14+0x18]
  41e371:	mov    r9d,0x1
  41e377:	mov    eax,0x0
  41e37c:	mov    rdi,r12
  41e37f:	lea    rsi,[rip+0x2a04a]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41e386:	lea    rbp,[rip+0x2a4ec]        # 448879 <fb_schema_table_deleted@@Base+0x949>
  41e38d:	push   rbp
  41e38e:	lea    rbp,[rip+0x2a3ec]        # 448781 <fb_schema_table_deleted@@Base+0x851>
  41e395:	jmp    41e3ca <__flatcc_fb_parse@@Base+0x15ea>
  41e397:	mov    rdx,QWORD PTR [rax+0x318]
  41e39e:	mov    rcx,QWORD PTR [r14+0x10]
  41e3a2:	mov    r8,QWORD PTR [r14+0x18]
  41e3a6:	mov    r9d,0x5
  41e3ac:	mov    eax,0x0
  41e3b1:	mov    rdi,r12
  41e3b4:	lea    rsi,[rip+0x2a015]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41e3bb:	lea    rbp,[rip+0x2a511]        # 4488d3 <fb_schema_table_deleted@@Base+0x9a3>
  41e3c2:	push   rbp
  41e3c3:	lea    rbp,[rip+0x2a51e]        # 4488e8 <fb_schema_table_deleted@@Base+0x9b8>
  41e3ca:	push   rbp
  41e3cb:	jmp    41eb9f <__flatcc_fb_parse@@Base+0x1dbf>
  41e3d0:	mov    rdx,QWORD PTR [rax+0x318]
  41e3d7:	mov    rcx,QWORD PTR [r14+0x10]
  41e3db:	mov    r8,QWORD PTR [r14+0x18]
  41e3df:	mov    eax,0x0
  41e3e4:	mov    rdi,r12
  41e3e7:	lea    rsi,[rip+0x29fe2]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41e3ee:	lea    rbp,[rip+0x2a4f9]        # 4488ee <fb_schema_table_deleted@@Base+0x9be>
  41e3f5:	jmp    41eb9c <__flatcc_fb_parse@@Base+0x1dbc>
  41e3fa:	mov    rax,QWORD PTR [rsp+0x10]
  41e3ff:	mov    rax,QWORD PTR [rax]
  41e402:	mov    rcx,QWORD PTR [rax+0x20]
  41e406:	cmp    rcx,0x9
  41e40a:	jne    41e43f <__flatcc_fb_parse@@Base+0x165f>
  41e40c:	mov    rdi,r12
  41e40f:	lea    rsi,[rsp+0x38]
  41e414:	call   424020 <__flatcc_fb_clear_parser@@Base+0xe50>
  41e419:	mov    QWORD PTR [r12+0x40],0x0
  41e422:	mov    rsi,QWORD PTR [r12+0x48]
  41e427:	cmp    QWORD PTR [rsi+0x20],0x3b
  41e42c:	jne    41e525 <__flatcc_fb_parse@@Base+0x1745>
  41e432:	mov    rdi,r12
  41e435:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41e43a:	jmp    41e53d <__flatcc_fb_parse@@Base+0x175d>
  41e43f:	test   rax,rax
  41e442:	je     41e6d0 <__flatcc_fb_parse@@Base+0x18f0>
  41e448:	mov    rcx,QWORD PTR [rax]
  41e44b:	xor    r9d,r9d
  41e44e:	lea    rbp,[rip+0x128de]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41e455:	mov    r10,rbp
  41e458:	test   rcx,rcx
  41e45b:	je     41e464 <__flatcc_fb_parse@@Base+0x1684>
  41e45d:	mov    r9d,DWORD PTR [rax+0x8]
  41e461:	mov    r10,rcx
  41e464:	mov    rcx,r12
  41e467:	nop    WORD PTR [rax+rax*1+0x0]
  41e470:	cmp    QWORD PTR [rcx+0x28],rax
  41e474:	ja     41e480 <__flatcc_fb_parse@@Base+0x16a0>
  41e476:	cmp    QWORD PTR [rcx+0x30],rax
  41e47a:	ja     41e932 <__flatcc_fb_parse@@Base+0x1b52>
  41e480:	mov    rcx,QWORD PTR [rcx]
  41e483:	test   rcx,rcx
  41e486:	jne    41e470 <__flatcc_fb_parse@@Base+0x1690>
  41e488:	lea    rdx,[rip+0x128a4]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41e48f:	jmp    41e939 <__flatcc_fb_parse@@Base+0x1b59>
  41e494:	xor    eax,eax
  41e496:	mov    rdi,r12
  41e499:	lea    rsi,[rip+0x29f82]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41e4a0:	lea    rdx,[rip+0x2a551]        # 4489f8 <fb_schema_table_deleted@@Base+0xac8>
  41e4a7:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41e4ac:	jmp    41e71e <__flatcc_fb_parse@@Base+0x193e>
  41e4b1:	xor    eax,eax
  41e4b3:	mov    rdi,r12
  41e4b6:	lea    rsi,[rip+0x29f65]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41e4bd:	lea    rdx,[rip+0x2a4d5]        # 448999 <fb_schema_table_deleted@@Base+0xa69>
  41e4c4:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41e4c9:	jmp    41e789 <__flatcc_fb_parse@@Base+0x19a9>
  41e4ce:	xor    eax,eax
  41e4d0:	mov    rdi,r12
  41e4d3:	lea    rsi,[rip+0x29f48]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41e4da:	lea    rdx,[rip+0x2a9b4]        # 448e95 <fb_schema_table_deleted@@Base+0xf65>
  41e4e1:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41e4e6:	jmp    41e8ad <__flatcc_fb_parse@@Base+0x1acd>
  41e4eb:	xor    eax,eax
  41e4ed:	mov    rdi,r12
  41e4f0:	lea    rsi,[rip+0x29f2b]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41e4f7:	lea    rdx,[rip+0x2aa49]        # 448f47 <fb_schema_table_deleted@@Base+0x1017>
  41e4fe:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41e503:	jmp    41e8f3 <__flatcc_fb_parse@@Base+0x1b13>
  41e508:	xor    eax,eax
  41e50a:	mov    rdi,r12
  41e50d:	lea    rsi,[rip+0x29f0e]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41e514:	lea    rdx,[rip+0x2a582]        # 448a9d <fb_schema_table_deleted@@Base+0xb6d>
  41e51b:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41e520:	jmp    41e7f9 <__flatcc_fb_parse@@Base+0x1a19>
  41e525:	xor    r8d,r8d
  41e528:	xor    r9d,r9d
  41e52b:	mov    rdi,r12
  41e52e:	lea    rdx,[rip+0x2a3ff]        # 448934 <fb_schema_table_deleted@@Base+0xa04>
  41e535:	mov    rcx,rbp
  41e538:	call   41c7d0 <__flatcc_error_report@@Base>
  41e53d:	mov    r15,QWORD PTR [rsp+0x38]
  41e542:	mov    rdi,QWORD PTR [r12+0x260]
  41e54a:	xor    edx,edx
  41e54c:	mov    rsi,r15
  41e54f:	call   41ae40 <fb_scope_table_find@@Base>
  41e554:	mov    rbp,rax
  41e557:	test   rax,rax
  41e55a:	jne    41e5e7 <__flatcc_fb_parse@@Base+0x1807>
  41e560:	mov    rax,QWORD PTR [rsp+0x20]
  41e565:	mov    rbp,QWORD PTR [rax]
  41e568:	lea    rax,[rbp+0x40]
  41e56c:	mov    rcx,QWORD PTR [rsp+0x28]
  41e571:	cmp    rax,QWORD PTR [rcx]
  41e574:	jbe    41e5bb <__flatcc_fb_parse@@Base+0x17db>
  41e576:	mov    edi,0x10000
  41e57b:	mov    esi,0x1
  41e580:	call   406150 <calloc@plt>
  41e585:	test   rax,rax
  41e588:	je     41f2c4 <__flatcc_fb_parse@@Base+0x24e4>
  41e58e:	mov    rdx,QWORD PTR [rsp+0x30]
  41e593:	mov    rcx,QWORD PTR [rdx]
  41e596:	mov    QWORD PTR [rax],rcx
  41e599:	mov    QWORD PTR [rdx],rax
  41e59c:	lea    rbp,[rax+0x10]
  41e5a0:	mov    rcx,QWORD PTR [rsp+0x20]
  41e5a5:	mov    QWORD PTR [rcx],rbp
  41e5a8:	lea    rcx,[rax+0x10000]
  41e5af:	mov    rdx,QWORD PTR [rsp+0x28]
  41e5b4:	mov    QWORD PTR [rdx],rcx
  41e5b7:	add    rax,0x50
  41e5bb:	mov    QWORD PTR [r12+0x60],rax
  41e5c0:	mov    QWORD PTR [rbp+0x0],r15
  41e5c4:	mov    rax,QWORD PTR [rsp+0x58]
  41e5c9:	vmovups xmm0,XMMWORD PTR [rax]
  41e5cd:	vmovups XMMWORD PTR [rbp+0x28],xmm0
  41e5d2:	mov    rdi,QWORD PTR [r12+0x260]
  41e5da:	mov    edx,0x1
  41e5df:	mov    rsi,rbp
  41e5e2:	call   41ae20 <fb_scope_table_insert_item@@Base>
  41e5e7:	mov    QWORD PTR [r12+0x340],rbp
  41e5ef:	jmp    41ebb0 <__flatcc_fb_parse@@Base+0x1dd0>
  41e5f4:	test   rbx,rbx
  41e5f7:	je     41e9b0 <__flatcc_fb_parse@@Base+0x1bd0>
  41e5fd:	mov    rax,QWORD PTR [rbx]
  41e600:	xor    r9d,r9d
  41e603:	lea    rbp,[rip+0x12729]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41e60a:	mov    r10,rbp
  41e60d:	test   rax,rax
  41e610:	je     41e619 <__flatcc_fb_parse@@Base+0x1839>
  41e612:	mov    r9d,DWORD PTR [rbx+0x8]
  41e616:	mov    r10,rax
  41e619:	mov    rax,r12
  41e61c:	nop    DWORD PTR [rax+0x0]
  41e620:	cmp    QWORD PTR [rax+0x28],rbx
  41e624:	ja     41e630 <__flatcc_fb_parse@@Base+0x1850>
  41e626:	cmp    QWORD PTR [rax+0x30],rbx
  41e62a:	ja     41ea9a <__flatcc_fb_parse@@Base+0x1cba>
  41e630:	mov    rax,QWORD PTR [rax]
  41e633:	test   rax,rax
  41e636:	jne    41e620 <__flatcc_fb_parse@@Base+0x1840>
  41e638:	lea    rdx,[rip+0x126f4]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41e63f:	jmp    41eaa1 <__flatcc_fb_parse@@Base+0x1cc1>
  41e644:	mov    rdx,QWORD PTR [rax+0x318]
  41e64b:	mov    rcx,QWORD PTR [rbp+0x10]
  41e64f:	mov    r8,QWORD PTR [rbp+0x18]
  41e653:	mov    eax,0x0
  41e658:	mov    rdi,r12
  41e65b:	lea    rsi,[rip+0x29d6e]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41e662:	lea    rbx,[rip+0x2a3f9]        # 448a62 <fb_schema_table_deleted@@Base+0xb32>
  41e669:	push   rbx
  41e66a:	push   r10
  41e66c:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41e671:	add    rsp,0x10
  41e675:	mov    rax,QWORD PTR [rsp+0x8]
  41e67a:	add    DWORD PTR [rax],0x1
  41e67d:	mov    rdi,r12
  41e680:	mov    rsi,QWORD PTR [rsp+0x70]
  41e685:	call   424020 <__flatcc_fb_clear_parser@@Base+0xe50>
  41e68a:	mov    rax,QWORD PTR [r12+0x340]
  41e692:	mov    QWORD PTR [r12+0x258],rax
  41e69a:	mov    QWORD PTR [r12+0x40],0x0
  41e6a3:	mov    rsi,QWORD PTR [r12+0x48]
  41e6a8:	cmp    QWORD PTR [rsi+0x20],0x3b
  41e6ad:	je     41eb0c <__flatcc_fb_parse@@Base+0x1d2c>
  41e6b3:	xor    r8d,r8d
  41e6b6:	xor    r9d,r9d
  41e6b9:	mov    rdi,r12
  41e6bc:	lea    rdx,[rip+0x2a3b5]        # 448a78 <fb_schema_table_deleted@@Base+0xb48>
  41e6c3:	mov    rcx,rbp
  41e6c6:	call   41c7d0 <__flatcc_error_report@@Base>
  41e6cb:	jmp    41ebb0 <__flatcc_fb_parse@@Base+0x1dd0>
  41e6d0:	xor    eax,eax
  41e6d2:	mov    rdi,r12
  41e6d5:	lea    rsi,[rip+0x29d46]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41e6dc:	lea    rdx,[rip+0x2a231]        # 448914 <fb_schema_table_deleted@@Base+0x9e4>
  41e6e3:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41e6e8:	jmp    41e963 <__flatcc_fb_parse@@Base+0x1b83>
  41e6ed:	mov    rdx,QWORD PTR [rax+0x318]
  41e6f4:	mov    rcx,QWORD PTR [rbp+0x10]
  41e6f8:	mov    r8,QWORD PTR [rbp+0x18]
  41e6fc:	mov    eax,0x0
  41e701:	mov    rdi,r12
  41e704:	lea    rsi,[rip+0x29cc5]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41e70b:	lea    rbp,[rip+0x2a2e6]        # 4489f8 <fb_schema_table_deleted@@Base+0xac8>
  41e712:	push   rbp
  41e713:	push   r10
  41e715:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41e71a:	add    rsp,0x10
  41e71e:	mov    rax,QWORD PTR [rsp+0x8]
  41e723:	add    DWORD PTR [rax],0x1
  41e726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e730:	mov    rax,QWORD PTR [rsp+0x10]
  41e735:	mov    rax,QWORD PTR [rax]
  41e738:	mov    rbp,QWORD PTR [rax+0x20]
  41e73c:	test   rbp,rbp
  41e73f:	je     41ebb0 <__flatcc_fb_parse@@Base+0x1dd0>
  41e745:	mov    rdi,r12
  41e748:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41e74d:	cmp    rbp,0x3b
  41e751:	jne    41e730 <__flatcc_fb_parse@@Base+0x1950>
  41e753:	jmp    41f133 <__flatcc_fb_parse@@Base+0x2353>
  41e758:	mov    rdx,QWORD PTR [rax+0x318]
  41e75f:	mov    rcx,QWORD PTR [rbp+0x10]
  41e763:	mov    r8,QWORD PTR [rbp+0x18]
  41e767:	mov    eax,0x0
  41e76c:	mov    rdi,r12
  41e76f:	lea    rsi,[rip+0x29c5a]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41e776:	lea    rbp,[rip+0x2a21c]        # 448999 <fb_schema_table_deleted@@Base+0xa69>
  41e77d:	push   rbp
  41e77e:	push   r10
  41e780:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41e785:	add    rsp,0x10
  41e789:	mov    rax,QWORD PTR [rsp+0x8]
  41e78e:	add    DWORD PTR [rax],0x1
  41e791:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e79b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e7a0:	mov    rax,QWORD PTR [rsp+0x10]
  41e7a5:	mov    rax,QWORD PTR [rax]
  41e7a8:	mov    rbp,QWORD PTR [rax+0x20]
  41e7ac:	test   rbp,rbp
  41e7af:	je     41ebb0 <__flatcc_fb_parse@@Base+0x1dd0>
  41e7b5:	mov    rdi,r12
  41e7b8:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41e7bd:	cmp    rbp,0x3b
  41e7c1:	jne    41e7a0 <__flatcc_fb_parse@@Base+0x19c0>
  41e7c3:	jmp    41f133 <__flatcc_fb_parse@@Base+0x2353>
  41e7c8:	mov    rdx,QWORD PTR [rax+0x318]
  41e7cf:	mov    rcx,QWORD PTR [rbp+0x10]
  41e7d3:	mov    r8,QWORD PTR [rbp+0x18]
  41e7d7:	mov    eax,0x0
  41e7dc:	mov    rdi,r12
  41e7df:	lea    rsi,[rip+0x29bea]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41e7e6:	lea    rbp,[rip+0x2a2b0]        # 448a9d <fb_schema_table_deleted@@Base+0xb6d>
  41e7ed:	push   rbp
  41e7ee:	push   r10
  41e7f0:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41e7f5:	add    rsp,0x10
  41e7f9:	mov    rax,QWORD PTR [rsp+0x8]
  41e7fe:	add    DWORD PTR [rax],0x1
  41e801:	mov    rax,QWORD PTR [rsp+0x10]
  41e806:	mov    rax,QWORD PTR [rax]
  41e809:	cmp    QWORD PTR [rax+0x20],0x3b
  41e80e:	je     41eb0c <__flatcc_fb_parse@@Base+0x1d2c>
  41e814:	test   rax,rax
  41e817:	je     41e864 <__flatcc_fb_parse@@Base+0x1a84>
  41e819:	mov    rcx,QWORD PTR [rax]
  41e81c:	xor    r9d,r9d
  41e81f:	lea    rbp,[rip+0x1250d]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41e826:	mov    r10,rbp
  41e829:	test   rcx,rcx
  41e82c:	je     41e835 <__flatcc_fb_parse@@Base+0x1a55>
  41e82e:	mov    r9d,DWORD PTR [rax+0x8]
  41e832:	mov    r10,rcx
  41e835:	mov    rcx,r12
  41e838:	nop    DWORD PTR [rax+rax*1+0x0]
  41e840:	cmp    QWORD PTR [rcx+0x28],rax
  41e844:	ja     41e850 <__flatcc_fb_parse@@Base+0x1a70>
  41e846:	cmp    QWORD PTR [rcx+0x30],rax
  41e84a:	ja     41e908 <__flatcc_fb_parse@@Base+0x1b28>
  41e850:	mov    rcx,QWORD PTR [rcx]
  41e853:	test   rcx,rcx
  41e856:	jne    41e840 <__flatcc_fb_parse@@Base+0x1a60>
  41e858:	lea    rdx,[rip+0x124d4]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41e85f:	jmp    41e90f <__flatcc_fb_parse@@Base+0x1b2f>
  41e864:	xor    eax,eax
  41e866:	mov    rdi,r12
  41e869:	lea    rsi,[rip+0x29bb2]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41e870:	lea    rdx,[rip+0x2a267]        # 448ade <fb_schema_table_deleted@@Base+0xbae>
  41e877:	jmp    41eb70 <__flatcc_fb_parse@@Base+0x1d90>
  41e87c:	mov    rdx,QWORD PTR [rax+0x318]
  41e883:	mov    rcx,QWORD PTR [rbp+0x10]
  41e887:	mov    r8,QWORD PTR [rbp+0x18]
  41e88b:	mov    eax,0x0
  41e890:	mov    rdi,r12
  41e893:	lea    rsi,[rip+0x29b36]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41e89a:	lea    rbp,[rip+0x2a5f4]        # 448e95 <fb_schema_table_deleted@@Base+0xf65>
  41e8a1:	push   rbp
  41e8a2:	push   r10
  41e8a4:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41e8a9:	add    rsp,0x10
  41e8ad:	mov    rax,QWORD PTR [rsp+0x8]
  41e8b2:	add    DWORD PTR [rax],0x1
  41e8b5:	mov    QWORD PTR [r13+0x8],0x0
  41e8bd:	jmp    41f110 <__flatcc_fb_parse@@Base+0x2330>
  41e8c2:	mov    rdx,QWORD PTR [rax+0x318]
  41e8c9:	mov    rcx,QWORD PTR [rbp+0x10]
  41e8cd:	mov    r8,QWORD PTR [rbp+0x18]
  41e8d1:	mov    eax,0x0
  41e8d6:	mov    rdi,r12
  41e8d9:	lea    rsi,[rip+0x29af0]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41e8e0:	lea    rbp,[rip+0x2a660]        # 448f47 <fb_schema_table_deleted@@Base+0x1017>
  41e8e7:	push   rbp
  41e8e8:	push   r10
  41e8ea:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41e8ef:	add    rsp,0x10
  41e8f3:	mov    rax,QWORD PTR [rsp+0x8]
  41e8f8:	add    DWORD PTR [rax],0x1
  41e8fb:	mov    QWORD PTR [r13+0x8],0x0
  41e903:	jmp    41ece5 <__flatcc_fb_parse@@Base+0x1f05>
  41e908:	mov    rdx,QWORD PTR [rcx+0x318]
  41e90f:	mov    rcx,QWORD PTR [rax+0x10]
  41e913:	mov    r8,QWORD PTR [rax+0x18]
  41e917:	mov    eax,0x0
  41e91c:	mov    rdi,r12
  41e91f:	lea    rsi,[rip+0x29aaa]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41e926:	lea    rbp,[rip+0x2a1b1]        # 448ade <fb_schema_table_deleted@@Base+0xbae>
  41e92d:	jmp    41eb9c <__flatcc_fb_parse@@Base+0x1dbc>
  41e932:	mov    rdx,QWORD PTR [rcx+0x318]
  41e939:	mov    rcx,QWORD PTR [rax+0x10]
  41e93d:	mov    r8,QWORD PTR [rax+0x18]
  41e941:	mov    eax,0x0
  41e946:	mov    rdi,r12
  41e949:	lea    rsi,[rip+0x29a80]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41e950:	lea    rbp,[rip+0x29fbd]        # 448914 <fb_schema_table_deleted@@Base+0x9e4>
  41e957:	push   rbp
  41e958:	push   r10
  41e95a:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41e95f:	add    rsp,0x10
  41e963:	mov    rax,QWORD PTR [rsp+0x8]
  41e968:	add    DWORD PTR [rax],0x1
  41e96b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e970:	mov    rax,QWORD PTR [rsp+0x10]
  41e975:	mov    rax,QWORD PTR [rax]
  41e978:	mov    rbp,QWORD PTR [rax+0x20]
  41e97c:	test   rbp,rbp
  41e97f:	je     41ebb0 <__flatcc_fb_parse@@Base+0x1dd0>
  41e985:	mov    rdi,r12
  41e988:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41e98d:	cmp    rbp,0x3b
  41e991:	jne    41e970 <__flatcc_fb_parse@@Base+0x1b90>
  41e993:	jmp    41f133 <__flatcc_fb_parse@@Base+0x2353>
  41e998:	xor    eax,eax
  41e99a:	mov    rdi,r12
  41e99d:	lea    rsi,[rip+0x29a7e]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41e9a4:	lea    rdx,[rip+0x2a015]        # 4489c0 <fb_schema_table_deleted@@Base+0xa90>
  41e9ab:	jmp    41eb70 <__flatcc_fb_parse@@Base+0x1d90>
  41e9b0:	xor    eax,eax
  41e9b2:	mov    rdi,r12
  41e9b5:	lea    rsi,[rip+0x29a66]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41e9bc:	lea    rdx,[rip+0x2a5aa]        # 448f6d <fb_schema_table_deleted@@Base+0x103d>
  41e9c3:	jmp    41ebd9 <__flatcc_fb_parse@@Base+0x1df9>
  41e9c8:	test   rax,rax
  41e9cb:	je     41ebe3 <__flatcc_fb_parse@@Base+0x1e03>
  41e9d1:	mov    rcx,QWORD PTR [rax]
  41e9d4:	xor    r9d,r9d
  41e9d7:	lea    rbp,[rip+0x12355]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41e9de:	mov    r10,rbp
  41e9e1:	test   rcx,rcx
  41e9e4:	je     41e9ed <__flatcc_fb_parse@@Base+0x1c0d>
  41e9e6:	mov    r9d,DWORD PTR [rax+0x8]
  41e9ea:	mov    r10,rcx
  41e9ed:	mov    rcx,r12
  41e9f0:	cmp    QWORD PTR [rcx+0x28],rax
  41e9f4:	ja     41ea00 <__flatcc_fb_parse@@Base+0x1c20>
  41e9f6:	cmp    QWORD PTR [rcx+0x30],rax
  41e9fa:	ja     41ede3 <__flatcc_fb_parse@@Base+0x2003>
  41ea00:	mov    rcx,QWORD PTR [rcx]
  41ea03:	test   rcx,rcx
  41ea06:	jne    41e9f0 <__flatcc_fb_parse@@Base+0x1c10>
  41ea08:	lea    rdx,[rip+0x12324]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41ea0f:	jmp    41edea <__flatcc_fb_parse@@Base+0x200a>
  41ea14:	mov    rdx,QWORD PTR [rax+0x318]
  41ea1b:	mov    rcx,QWORD PTR [rbp+0x10]
  41ea1f:	mov    r8,QWORD PTR [rbp+0x18]
  41ea23:	mov    eax,0x0
  41ea28:	mov    rdi,r12
  41ea2b:	lea    rsi,[rip+0x2999e]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41ea32:	lea    rbp,[rip+0x2a086]        # 448abf <fb_schema_table_deleted@@Base+0xb8f>
  41ea39:	push   rbp
  41ea3a:	push   r10
  41ea3c:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41ea41:	add    rsp,0x10
  41ea45:	add    DWORD PTR [r12+0xd0],0x1
  41ea4e:	jmp    41e801 <__flatcc_fb_parse@@Base+0x1a21>
  41ea53:	xor    eax,eax
  41ea55:	mov    rdi,r12
  41ea58:	lea    rsi,[rip+0x299c3]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41ea5f:	lea    rdx,[rip+0x29fba]        # 448a20 <fb_schema_table_deleted@@Base+0xaf0>
  41ea66:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41ea6b:	jmp    41eaf5 <__flatcc_fb_parse@@Base+0x1d15>
  41ea70:	mov    rdx,QWORD PTR [rcx+0x318]
  41ea77:	mov    rcx,QWORD PTR [rax+0x10]
  41ea7b:	mov    r8,QWORD PTR [rax+0x18]
  41ea7f:	mov    eax,0x0
  41ea84:	mov    rdi,r12
  41ea87:	lea    rsi,[rip+0x29942]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41ea8e:	lea    rbp,[rip+0x29f2b]        # 4489c0 <fb_schema_table_deleted@@Base+0xa90>
  41ea95:	jmp    41eb9c <__flatcc_fb_parse@@Base+0x1dbc>
  41ea9a:	mov    rdx,QWORD PTR [rax+0x318]
  41eaa1:	mov    rcx,QWORD PTR [rbx+0x10]
  41eaa5:	mov    r8,QWORD PTR [rbx+0x18]
  41eaa9:	mov    eax,0x0
  41eaae:	mov    rdi,r12
  41eab1:	lea    rsi,[rip+0x29918]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41eab8:	lea    rbp,[rip+0x2a4ae]        # 448f6d <fb_schema_table_deleted@@Base+0x103d>
  41eabf:	jmp    41ecc8 <__flatcc_fb_parse@@Base+0x1ee8>
  41eac4:	mov    rdx,QWORD PTR [rax+0x318]
  41eacb:	mov    rcx,QWORD PTR [rbp+0x10]
  41eacf:	mov    r8,QWORD PTR [rbp+0x18]
  41ead3:	mov    eax,0x0
  41ead8:	mov    rdi,r12
  41eadb:	lea    rsi,[rip+0x298ee]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41eae2:	lea    rbp,[rip+0x29f37]        # 448a20 <fb_schema_table_deleted@@Base+0xaf0>
  41eae9:	push   rbp
  41eaea:	push   r10
  41eaec:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41eaf1:	add    rsp,0x10
  41eaf5:	mov    rax,QWORD PTR [rsp+0x8]
  41eafa:	add    DWORD PTR [rax],0x1
  41eafd:	mov    rax,QWORD PTR [rsp+0x10]
  41eb02:	mov    rax,QWORD PTR [rax]
  41eb05:	cmp    QWORD PTR [rax+0x20],0x3b
  41eb0a:	jne    41eb19 <__flatcc_fb_parse@@Base+0x1d39>
  41eb0c:	mov    rdi,r12
  41eb0f:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41eb14:	jmp    41ebb0 <__flatcc_fb_parse@@Base+0x1dd0>
  41eb19:	test   rax,rax
  41eb1c:	je     41eb5d <__flatcc_fb_parse@@Base+0x1d7d>
  41eb1e:	mov    rcx,QWORD PTR [rax]
  41eb21:	xor    r9d,r9d
  41eb24:	lea    rbp,[rip+0x12208]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41eb2b:	mov    r10,rbp
  41eb2e:	test   rcx,rcx
  41eb31:	je     41eb3a <__flatcc_fb_parse@@Base+0x1d5a>
  41eb33:	mov    r9d,DWORD PTR [rax+0x8]
  41eb37:	mov    r10,rcx
  41eb3a:	mov    rcx,r12
  41eb3d:	nop    DWORD PTR [rax]
  41eb40:	cmp    QWORD PTR [rcx+0x28],rax
  41eb44:	ja     41eb4c <__flatcc_fb_parse@@Base+0x1d6c>
  41eb46:	cmp    QWORD PTR [rcx+0x30],rax
  41eb4a:	ja     41eb77 <__flatcc_fb_parse@@Base+0x1d97>
  41eb4c:	mov    rcx,QWORD PTR [rcx]
  41eb4f:	test   rcx,rcx
  41eb52:	jne    41eb40 <__flatcc_fb_parse@@Base+0x1d60>
  41eb54:	lea    rdx,[rip+0x121d8]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41eb5b:	jmp    41eb7e <__flatcc_fb_parse@@Base+0x1d9e>
  41eb5d:	xor    eax,eax
  41eb5f:	mov    rdi,r12
  41eb62:	lea    rsi,[rip+0x298b9]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41eb69:	lea    rdx,[rip+0x29ed5]        # 448a45 <fb_schema_table_deleted@@Base+0xb15>
  41eb70:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41eb75:	jmp    41eba8 <__flatcc_fb_parse@@Base+0x1dc8>
  41eb77:	mov    rdx,QWORD PTR [rcx+0x318]
  41eb7e:	mov    rcx,QWORD PTR [rax+0x10]
  41eb82:	mov    r8,QWORD PTR [rax+0x18]
  41eb86:	mov    eax,0x0
  41eb8b:	mov    rdi,r12
  41eb8e:	lea    rsi,[rip+0x2983b]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41eb95:	lea    rbp,[rip+0x29ea9]        # 448a45 <fb_schema_table_deleted@@Base+0xb15>
  41eb9c:	push   rbp
  41eb9d:	push   r10
  41eb9f:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41eba4:	add    rsp,0x10
  41eba8:	mov    rax,QWORD PTR [rsp+0x8]
  41ebad:	add    DWORD PTR [rax],0x1
  41ebb0:	mov    rax,QWORD PTR [rsp+0x10]
  41ebb5:	mov    r13,QWORD PTR [rax]
  41ebb8:	cmp    r13,r14
  41ebbb:	jne    41d2e0 <__flatcc_fb_parse@@Base+0x500>
  41ebc1:	jmp    41f1c3 <__flatcc_fb_parse@@Base+0x23e3>
  41ebc6:	xor    eax,eax
  41ebc8:	mov    rdi,r12
  41ebcb:	lea    rsi,[rip+0x29850]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41ebd2:	lea    rdx,[rip+0x2a3b3]        # 448f8c <fb_schema_table_deleted@@Base+0x105c>
  41ebd9:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41ebde:	jmp    41ecd4 <__flatcc_fb_parse@@Base+0x1ef4>
  41ebe3:	xor    eax,eax
  41ebe5:	mov    rdi,r12
  41ebe8:	lea    rsi,[rip+0x29833]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41ebef:	lea    rdx,[rip+0x2a2c4]        # 448eba <fb_schema_table_deleted@@Base+0xf8a>
  41ebf6:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41ebfb:	jmp    41ee14 <__flatcc_fb_parse@@Base+0x2034>
  41ec00:	mov    rdx,QWORD PTR [rcx+0x318]
  41ec07:	mov    rcx,QWORD PTR [rax+0x10]
  41ec0b:	mov    r8,QWORD PTR [rax+0x18]
  41ec0f:	mov    eax,0x0
  41ec14:	mov    rdi,r12
  41ec17:	lea    rsi,[rip+0x297b2]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41ec1e:	lea    rbp,[rip+0x2a295]        # 448eba <fb_schema_table_deleted@@Base+0xf8a>
  41ec25:	push   rbp
  41ec26:	push   r10
  41ec28:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41ec2d:	add    rsp,0x10
  41ec31:	add    DWORD PTR [r12+0xd0],0x1
  41ec3a:	jmp    41ee1c <__flatcc_fb_parse@@Base+0x203c>
  41ec3f:	mov    r13,QWORD PTR [rsp+0x40]
  41ec44:	mov    rcx,QWORD PTR [rsp+0x18]
  41ec49:	mov    QWORD PTR [rcx],0x0
  41ec50:	cmp    rax,0x7d
  41ec54:	jne    41ec60 <__flatcc_fb_parse@@Base+0x1e80>
  41ec56:	mov    rdi,r12
  41ec59:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41ec5e:	jmp    41ec7b <__flatcc_fb_parse@@Base+0x1e9b>
  41ec60:	xor    r8d,r8d
  41ec63:	xor    r9d,r9d
  41ec66:	mov    rdi,r12
  41ec69:	mov    rsi,r15
  41ec6c:	lea    rdx,[rip+0x2a36e]        # 448fe1 <fb_schema_table_deleted@@Base+0x10b1>
  41ec73:	mov    rcx,rbx
  41ec76:	call   41c7d0 <__flatcc_error_report@@Base>
  41ec7b:	mov    rax,QWORD PTR [r13+0x28]
  41ec7f:	test   rax,rax
  41ec82:	je     41ed20 <__flatcc_fb_parse@@Base+0x1f40>
  41ec88:	xor    ecx,ecx
  41ec8a:	nop    WORD PTR [rax+rax*1+0x0]
  41ec90:	mov    rdx,rax
  41ec93:	mov    rax,QWORD PTR [rax]
  41ec96:	mov    QWORD PTR [rdx],rcx
  41ec99:	mov    rcx,rdx
  41ec9c:	test   rax,rax
  41ec9f:	jne    41ec90 <__flatcc_fb_parse@@Base+0x1eb0>
  41eca1:	jmp    41ed22 <__flatcc_fb_parse@@Base+0x1f42>
  41eca3:	mov    rdx,QWORD PTR [rax+0x318]
  41ecaa:	mov    rcx,QWORD PTR [r15+0x10]
  41ecae:	mov    r8,QWORD PTR [r15+0x18]
  41ecb2:	mov    eax,0x0
  41ecb7:	mov    rdi,r12
  41ecba:	lea    rsi,[rip+0x2970f]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41ecc1:	lea    rbp,[rip+0x2a2c4]        # 448f8c <fb_schema_table_deleted@@Base+0x105c>
  41ecc8:	push   rbp
  41ecc9:	push   r10
  41eccb:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41ecd0:	add    rsp,0x10
  41ecd4:	mov    rax,QWORD PTR [rsp+0x8]
  41ecd9:	add    DWORD PTR [rax],0x1
  41ecdc:	jmp    41ece5 <__flatcc_fb_parse@@Base+0x1f05>
  41ecde:	xchg   ax,ax
  41ece0:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41ece5:	mov    rax,QWORD PTR [rsp+0x10]
  41ecea:	mov    rax,QWORD PTR [rax]
  41eced:	mov    rax,QWORD PTR [rax+0x20]
  41ecf1:	test   rax,rax
  41ecf4:	je     41ebb0 <__flatcc_fb_parse@@Base+0x1dd0>
  41ecfa:	cmp    rax,0x7d
  41ecfe:	je     41f133 <__flatcc_fb_parse@@Base+0x2353>
  41ed04:	mov    rdi,r12
  41ed07:	cmp    rax,0x3b
  41ed0b:	jne    41ece0 <__flatcc_fb_parse@@Base+0x1f00>
  41ed0d:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41ed12:	mov    QWORD PTR [r12+0x40],0x0
  41ed1b:	jmp    41ebb0 <__flatcc_fb_parse@@Base+0x1dd0>
  41ed20:	xor    edx,edx
  41ed22:	mov    QWORD PTR [r13+0x28],rdx
  41ed26:	mov    rsi,QWORD PTR [rsp+0x20]
  41ed2b:	mov    rcx,QWORD PTR [rsi]
  41ed2e:	lea    rax,[rcx+0xb0]
  41ed35:	mov    rdi,QWORD PTR [rsp+0x28]
  41ed3a:	cmp    rax,QWORD PTR [rdi]
  41ed3d:	jbe    41ed8a <__flatcc_fb_parse@@Base+0x1faa>
  41ed3f:	mov    edi,0x10000
  41ed44:	mov    esi,0x1
  41ed49:	call   406150 <calloc@plt>
  41ed4e:	test   rax,rax
  41ed51:	je     41f2c4 <__flatcc_fb_parse@@Base+0x24e4>
  41ed57:	mov    rdx,QWORD PTR [rsp+0x30]
  41ed5c:	mov    rcx,QWORD PTR [rdx]
  41ed5f:	mov    QWORD PTR [rax],rcx
  41ed62:	mov    QWORD PTR [rdx],rax
  41ed65:	lea    rcx,[rax+0x10]
  41ed69:	mov    rsi,QWORD PTR [rsp+0x20]
  41ed6e:	mov    QWORD PTR [rsi],rcx
  41ed71:	lea    rdx,[rax+0x10000]
  41ed78:	mov    rdi,QWORD PTR [rsp+0x28]
  41ed7d:	mov    QWORD PTR [rdi],rdx
  41ed80:	add    rax,0xc0
  41ed86:	mov    rdx,QWORD PTR [r13+0x28]
  41ed8a:	mov    QWORD PTR [rsi],rax
  41ed8d:	mov    QWORD PTR [rcx],rdx
  41ed90:	mov    WORD PTR [rcx+0x10],0x5
  41ed96:	mov    QWORD PTR [r13+0x28],rcx
  41ed9a:	mov    rax,QWORD PTR [rsp+0x18]
  41ed9f:	mov    rax,QWORD PTR [rax]
  41eda2:	test   rax,rax
  41eda5:	je     41edc3 <__flatcc_fb_parse@@Base+0x1fe3>
  41eda7:	xor    esi,esi
  41eda9:	nop    DWORD PTR [rax+0x0]
  41edb0:	mov    rdx,rax
  41edb3:	mov    rax,QWORD PTR [rax]
  41edb6:	mov    QWORD PTR [rdx],rsi
  41edb9:	mov    rsi,rdx
  41edbc:	test   rax,rax
  41edbf:	jne    41edb0 <__flatcc_fb_parse@@Base+0x1fd0>
  41edc1:	jmp    41edc5 <__flatcc_fb_parse@@Base+0x1fe5>
  41edc3:	xor    edx,edx
  41edc5:	mov    QWORD PTR [rcx+0x68],rdx
  41edc9:	mov    rax,QWORD PTR [rsp+0x18]
  41edce:	mov    QWORD PTR [rax],0x0
  41edd5:	mov    rax,QWORD PTR [rsp+0x50]
  41edda:	mov    QWORD PTR [rcx+0x8],rax
  41edde:	jmp    41ebb0 <__flatcc_fb_parse@@Base+0x1dd0>
  41ede3:	mov    rdx,QWORD PTR [rcx+0x318]
  41edea:	mov    rcx,QWORD PTR [rax+0x10]
  41edee:	mov    r8,QWORD PTR [rax+0x18]
  41edf2:	mov    eax,0x0
  41edf7:	mov    rdi,r12
  41edfa:	lea    rsi,[rip+0x295cf]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41ee01:	lea    rbp,[rip+0x2a0b2]        # 448eba <fb_schema_table_deleted@@Base+0xf8a>
  41ee08:	push   rbp
  41ee09:	push   r10
  41ee0b:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41ee10:	add    rsp,0x10
  41ee14:	mov    rax,QWORD PTR [rsp+0x8]
  41ee19:	add    DWORD PTR [rax],0x1
  41ee1c:	mov    rdi,r12
  41ee1f:	call   4241a0 <__flatcc_fb_clear_parser@@Base+0xfd0>
  41ee24:	mov    QWORD PTR [r13+0x38],rax
  41ee28:	mov    rbx,QWORD PTR [r12+0x48]
  41ee2d:	cmp    QWORD PTR [rbx+0x20],0x7b
  41ee32:	jne    41f014 <__flatcc_fb_parse@@Base+0x2234>
  41ee38:	mov    rdi,r12
  41ee3b:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41ee40:	test   rbx,rbx
  41ee43:	je     41f110 <__flatcc_fb_parse@@Base+0x2330>
  41ee49:	mov    rax,QWORD PTR [rsp+0x10]
  41ee4e:	mov    r15,QWORD PTR [rax]
  41ee51:	cmp    QWORD PTR [r15+0x20],0x9
  41ee56:	jne    41efc0 <__flatcc_fb_parse@@Base+0x21e0>
  41ee5c:	nop    DWORD PTR [rax+0x0]
  41ee60:	mov    rdi,r12
  41ee63:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41ee68:	test   r15,r15
  41ee6b:	je     41f110 <__flatcc_fb_parse@@Base+0x2330>
  41ee71:	mov    rax,QWORD PTR [rsp+0x8]
  41ee76:	cmp    DWORD PTR [rax],0x9
  41ee79:	jg     41f110 <__flatcc_fb_parse@@Base+0x2330>
  41ee7f:	mov    rdx,QWORD PTR [rsp+0x20]
  41ee84:	mov    rbp,QWORD PTR [rdx]
  41ee87:	lea    rax,[rbp+0xb0]
  41ee8e:	mov    rcx,QWORD PTR [rsp+0x28]
  41ee93:	cmp    rax,QWORD PTR [rcx]
  41ee96:	jbe    41eedf <__flatcc_fb_parse@@Base+0x20ff>
  41ee98:	mov    edi,0x10000
  41ee9d:	mov    esi,0x1
  41eea2:	call   406150 <calloc@plt>
  41eea7:	test   rax,rax
  41eeaa:	je     41f2c4 <__flatcc_fb_parse@@Base+0x24e4>
  41eeb0:	mov    rdx,QWORD PTR [rsp+0x30]
  41eeb5:	mov    rcx,QWORD PTR [rdx]
  41eeb8:	mov    QWORD PTR [rax],rcx
  41eebb:	mov    QWORD PTR [rdx],rax
  41eebe:	lea    rbp,[rax+0x10]
  41eec2:	mov    rdx,QWORD PTR [rsp+0x20]
  41eec7:	mov    QWORD PTR [rdx],rbp
  41eeca:	lea    rcx,[rax+0x10000]
  41eed1:	mov    rsi,QWORD PTR [rsp+0x28]
  41eed6:	mov    QWORD PTR [rsi],rcx
  41eed9:	add    rax,0xc0
  41eedf:	mov    QWORD PTR [rdx],rax
  41eee2:	mov    rax,QWORD PTR [r13+0x28]
  41eee6:	mov    QWORD PTR [rbp+0x0],rax
  41eeea:	mov    WORD PTR [rbp+0x10],0x5
  41eef0:	mov    QWORD PTR [r13+0x28],rbp
  41eef4:	mov    rax,QWORD PTR [rsp+0x18]
  41eef9:	mov    rax,QWORD PTR [rax]
  41eefc:	test   rax,rax
  41eeff:	je     41ef23 <__flatcc_fb_parse@@Base+0x2143>
  41ef01:	xor    edx,edx
  41ef03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ef0d:	nop    DWORD PTR [rax]
  41ef10:	mov    rcx,rax
  41ef13:	mov    rax,QWORD PTR [rax]
  41ef16:	mov    QWORD PTR [rcx],rdx
  41ef19:	mov    rdx,rcx
  41ef1c:	test   rax,rax
  41ef1f:	jne    41ef10 <__flatcc_fb_parse@@Base+0x2130>
  41ef21:	jmp    41ef25 <__flatcc_fb_parse@@Base+0x2145>
  41ef23:	xor    ecx,ecx
  41ef25:	mov    QWORD PTR [rbp+0x68],rcx
  41ef29:	mov    rax,QWORD PTR [rsp+0x18]
  41ef2e:	mov    QWORD PTR [rax],0x0
  41ef35:	mov    QWORD PTR [rbp+0x8],r15
  41ef39:	mov    rax,QWORD PTR [rsp+0x10]
  41ef3e:	mov    r15,QWORD PTR [rax]
  41ef41:	mov    rax,QWORD PTR [r15+0x20]
  41ef45:	cmp    rax,0x3d
  41ef49:	jne    41ef7c <__flatcc_fb_parse@@Base+0x219c>
  41ef4b:	mov    rdi,r12
  41ef4e:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41ef53:	test   r15,r15
  41ef56:	je     41ef70 <__flatcc_fb_parse@@Base+0x2190>
  41ef58:	add    rbp,0x48
  41ef5c:	xor    edx,edx
  41ef5e:	mov    rdi,r12
  41ef61:	mov    rsi,rbp
  41ef64:	lea    rcx,[rip+0x29f9f]        # 448f0a <fb_schema_table_deleted@@Base+0xfda>
  41ef6b:	call   424420 <__flatcc_fb_clear_parser@@Base+0x1250>
  41ef70:	mov    rax,QWORD PTR [rsp+0x10]
  41ef75:	mov    r15,QWORD PTR [rax]
  41ef78:	mov    rax,QWORD PTR [r15+0x20]
  41ef7c:	cmp    rax,0x2c
  41ef80:	jne    41f0b3 <__flatcc_fb_parse@@Base+0x22d3>
  41ef86:	mov    rdi,r12
  41ef89:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41ef8e:	test   r15,r15
  41ef91:	mov    r15,QWORD PTR [r12+0x48]
  41ef96:	mov    rax,QWORD PTR [r15+0x20]
  41ef9a:	je     41f0b3 <__flatcc_fb_parse@@Base+0x22d3>
  41efa0:	mov    rcx,QWORD PTR [rsp+0x18]
  41efa5:	mov    QWORD PTR [rcx],0x0
  41efac:	cmp    rax,0x9
  41efb0:	je     41ee60 <__flatcc_fb_parse@@Base+0x2080>
  41efb6:	cmp    rax,0x7d
  41efba:	je     41f0c5 <__flatcc_fb_parse@@Base+0x22e5>
  41efc0:	test   r15,r15
  41efc3:	je     41f099 <__flatcc_fb_parse@@Base+0x22b9>
  41efc9:	mov    rax,QWORD PTR [r15]
  41efcc:	xor    r9d,r9d
  41efcf:	lea    rbp,[rip+0x11d5d]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41efd6:	mov    r10,rbp
  41efd9:	test   rax,rax
  41efdc:	je     41efe5 <__flatcc_fb_parse@@Base+0x2205>
  41efde:	mov    r9d,DWORD PTR [r15+0x8]
  41efe2:	mov    r10,rax
  41efe5:	mov    rax,r12
  41efe8:	nop    DWORD PTR [rax+rax*1+0x0]
  41eff0:	cmp    QWORD PTR [rax+0x28],r15
  41eff4:	ja     41f000 <__flatcc_fb_parse@@Base+0x2220>
  41eff6:	cmp    QWORD PTR [rax+0x30],r15
  41effa:	ja     41f0d2 <__flatcc_fb_parse@@Base+0x22f2>
  41f000:	mov    rax,QWORD PTR [rax]
  41f003:	test   rax,rax
  41f006:	jne    41eff0 <__flatcc_fb_parse@@Base+0x2210>
  41f008:	lea    rdx,[rip+0x11d24]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41f00f:	jmp    41f0d9 <__flatcc_fb_parse@@Base+0x22f9>
  41f014:	test   rbx,rbx
  41f017:	je     41f05d <__flatcc_fb_parse@@Base+0x227d>
  41f019:	mov    rax,QWORD PTR [rbx]
  41f01c:	xor    r9d,r9d
  41f01f:	lea    rbp,[rip+0x11d0d]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41f026:	mov    r10,rbp
  41f029:	test   rax,rax
  41f02c:	je     41f035 <__flatcc_fb_parse@@Base+0x2255>
  41f02e:	mov    r9d,DWORD PTR [rbx+0x8]
  41f032:	mov    r10,rax
  41f035:	mov    rax,r12
  41f038:	nop    DWORD PTR [rax+rax*1+0x0]
  41f040:	cmp    QWORD PTR [rax+0x28],rbx
  41f044:	ja     41f04c <__flatcc_fb_parse@@Base+0x226c>
  41f046:	cmp    QWORD PTR [rax+0x30],rbx
  41f04a:	ja     41f072 <__flatcc_fb_parse@@Base+0x2292>
  41f04c:	mov    rax,QWORD PTR [rax]
  41f04f:	test   rax,rax
  41f052:	jne    41f040 <__flatcc_fb_parse@@Base+0x2260>
  41f054:	lea    rdx,[rip+0x11cd8]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41f05b:	jmp    41f079 <__flatcc_fb_parse@@Base+0x2299>
  41f05d:	xor    eax,eax
  41f05f:	mov    rdi,r12
  41f062:	lea    rsi,[rip+0x293b9]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41f069:	lea    rdx,[rip+0x29e61]        # 448ed1 <fb_schema_table_deleted@@Base+0xfa1>
  41f070:	jmp    41f0ac <__flatcc_fb_parse@@Base+0x22cc>
  41f072:	mov    rdx,QWORD PTR [rax+0x318]
  41f079:	mov    rcx,QWORD PTR [rbx+0x10]
  41f07d:	mov    r8,QWORD PTR [rbx+0x18]
  41f081:	mov    eax,0x0
  41f086:	mov    rdi,r12
  41f089:	lea    rsi,[rip+0x29340]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41f090:	lea    rbp,[rip+0x29e3a]        # 448ed1 <fb_schema_table_deleted@@Base+0xfa1>
  41f097:	jmp    41f0f7 <__flatcc_fb_parse@@Base+0x2317>
  41f099:	xor    eax,eax
  41f09b:	mov    rdi,r12
  41f09e:	lea    rsi,[rip+0x2937d]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41f0a5:	lea    rdx,[rip+0x29e43]        # 448eef <fb_schema_table_deleted@@Base+0xfbf>
  41f0ac:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41f0b1:	jmp    41f103 <__flatcc_fb_parse@@Base+0x2323>
  41f0b3:	mov    rcx,QWORD PTR [rsp+0x18]
  41f0b8:	mov    QWORD PTR [rcx],0x0
  41f0bf:	cmp    rax,0x7d
  41f0c3:	jne    41f144 <__flatcc_fb_parse@@Base+0x2364>
  41f0c5:	mov    rdi,r12
  41f0c8:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41f0cd:	jmp    41f15f <__flatcc_fb_parse@@Base+0x237f>
  41f0d2:	mov    rdx,QWORD PTR [rax+0x318]
  41f0d9:	mov    rcx,QWORD PTR [r15+0x10]
  41f0dd:	mov    r8,QWORD PTR [r15+0x18]
  41f0e1:	mov    eax,0x0
  41f0e6:	mov    rdi,r12
  41f0e9:	lea    rsi,[rip+0x292e0]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41f0f0:	lea    rbp,[rip+0x29df8]        # 448eef <fb_schema_table_deleted@@Base+0xfbf>
  41f0f7:	push   rbp
  41f0f8:	push   r10
  41f0fa:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41f0ff:	add    rsp,0x10
  41f103:	mov    rax,QWORD PTR [rsp+0x8]
  41f108:	add    DWORD PTR [rax],0x1
  41f10b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f110:	mov    rax,QWORD PTR [rsp+0x10]
  41f115:	mov    rax,QWORD PTR [rax]
  41f118:	mov    rbp,QWORD PTR [rax+0x20]
  41f11c:	test   rbp,rbp
  41f11f:	je     41ebb0 <__flatcc_fb_parse@@Base+0x1dd0>
  41f125:	mov    rdi,r12
  41f128:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  41f12d:	cmp    rbp,0x7d
  41f131:	jne    41f110 <__flatcc_fb_parse@@Base+0x2330>
  41f133:	mov    rax,QWORD PTR [rsp+0x18]
  41f138:	mov    QWORD PTR [rax],0x0
  41f13f:	jmp    41ebb0 <__flatcc_fb_parse@@Base+0x1dd0>
  41f144:	xor    r8d,r8d
  41f147:	xor    r9d,r9d
  41f14a:	mov    rdi,r12
  41f14d:	mov    rsi,r15
  41f150:	lea    rdx,[rip+0x29dce]        # 448f25 <fb_schema_table_deleted@@Base+0xff5>
  41f157:	mov    rcx,rbx
  41f15a:	call   41c7d0 <__flatcc_error_report@@Base>
  41f15f:	mov    rax,QWORD PTR [r13+0x28]
  41f163:	test   rax,rax
  41f166:	je     41f18a <__flatcc_fb_parse@@Base+0x23aa>
  41f168:	xor    edx,edx
  41f16a:	nop    WORD PTR [rax+rax*1+0x0]
  41f170:	mov    rcx,rax
  41f173:	mov    rax,QWORD PTR [rax]
  41f176:	mov    QWORD PTR [rcx],rdx
  41f179:	mov    rdx,rcx
  41f17c:	test   rax,rax
  41f17f:	jne    41f170 <__flatcc_fb_parse@@Base+0x2390>
  41f181:	mov    QWORD PTR [r13+0x28],rcx
  41f185:	jmp    41ebb0 <__flatcc_fb_parse@@Base+0x1dd0>
  41f18a:	xor    ecx,ecx
  41f18c:	mov    QWORD PTR [r13+0x28],rcx
  41f190:	jmp    41ebb0 <__flatcc_fb_parse@@Base+0x1dd0>
  41f195:	mov    rax,QWORD PTR [r12+0x200]
  41f19d:	test   rax,rax
  41f1a0:	je     41f216 <__flatcc_fb_parse@@Base+0x2436>
  41f1a2:	xor    edx,edx
  41f1a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f1ae:	xchg   ax,ax
  41f1b0:	mov    rcx,rax
  41f1b3:	mov    rax,QWORD PTR [rax]
  41f1b6:	mov    QWORD PTR [rcx],rdx
  41f1b9:	mov    rdx,rcx
  41f1bc:	test   rax,rax
  41f1bf:	jne    41f1b0 <__flatcc_fb_parse@@Base+0x23d0>
  41f1c1:	jmp    41f218 <__flatcc_fb_parse@@Base+0x2438>
  41f1c3:	mov    rax,QWORD PTR [rsp+0x8]
  41f1c8:	mov    eax,DWORD PTR [rax]
  41f1ca:	test   eax,eax
  41f1cc:	jne    41f2b5 <__flatcc_fb_parse@@Base+0x24d5>
  41f1d2:	test   r14,r14
  41f1d5:	je     41f257 <__flatcc_fb_parse@@Base+0x2477>
  41f1db:	mov    rax,QWORD PTR [r14]
  41f1de:	xor    r9d,r9d
  41f1e1:	lea    rdx,[rip+0x11b4b]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  41f1e8:	mov    rbp,rdx
  41f1eb:	test   rax,rax
  41f1ee:	je     41f1f7 <__flatcc_fb_parse@@Base+0x2417>
  41f1f0:	mov    r9d,DWORD PTR [r14+0x8]
  41f1f4:	mov    rbp,rax
  41f1f7:	mov    rax,r12
  41f1fa:	nop    WORD PTR [rax+rax*1+0x0]
  41f200:	cmp    QWORD PTR [rax+0x28],r14
  41f204:	ja     41f20c <__flatcc_fb_parse@@Base+0x242c>
  41f206:	cmp    QWORD PTR [rax+0x30],r14
  41f20a:	ja     41f271 <__flatcc_fb_parse@@Base+0x2491>
  41f20c:	mov    rax,QWORD PTR [rax]
  41f20f:	test   rax,rax
  41f212:	jne    41f200 <__flatcc_fb_parse@@Base+0x2420>
  41f214:	jmp    41f278 <__flatcc_fb_parse@@Base+0x2498>
  41f216:	xor    ecx,ecx
  41f218:	mov    QWORD PTR [r12+0x200],rcx
  41f220:	mov    rax,QWORD PTR [r12+0x238]
  41f228:	test   rax,rax
  41f22b:	je     41f243 <__flatcc_fb_parse@@Base+0x2463>
  41f22d:	xor    edx,edx
  41f22f:	nop
  41f230:	mov    rcx,rax
  41f233:	mov    rax,QWORD PTR [rax]
  41f236:	mov    QWORD PTR [rcx],rdx
  41f239:	mov    rdx,rcx
  41f23c:	test   rax,rax
  41f23f:	jne    41f230 <__flatcc_fb_parse@@Base+0x2450>
  41f241:	jmp    41f245 <__flatcc_fb_parse@@Base+0x2465>
  41f243:	xor    ecx,ecx
  41f245:	mov    QWORD PTR [r12+0x238],rcx
  41f24d:	mov    eax,DWORD PTR [r12+0xd0]
  41f255:	jmp    41f2b5 <__flatcc_fb_parse@@Base+0x24d5>
  41f257:	lea    rsi,[rip+0x291c4]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  41f25e:	lea    rdx,[rip+0x29439]        # 44869e <fb_schema_table_deleted@@Base+0x76e>
  41f265:	xor    eax,eax
  41f267:	mov    rdi,r12
  41f26a:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41f26f:	jmp    41f2a2 <__flatcc_fb_parse@@Base+0x24c2>
  41f271:	mov    rdx,QWORD PTR [rax+0x318]
  41f278:	mov    rcx,QWORD PTR [r14+0x10]
  41f27c:	mov    r8,QWORD PTR [r14+0x18]
  41f280:	lea    r10,[rip+0x29417]        # 44869e <fb_schema_table_deleted@@Base+0x76e>
  41f287:	lea    rsi,[rip+0x29142]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  41f28e:	mov    eax,0x0
  41f293:	mov    rdi,r12
  41f296:	push   r10
  41f298:	push   rbp
  41f299:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  41f29e:	add    rsp,0x10
  41f2a2:	mov    eax,DWORD PTR [r12+0xd0]
  41f2aa:	add    eax,0x1
  41f2ad:	mov    DWORD PTR [r12+0xd0],eax
  41f2b5:	add    rsp,0x78
  41f2b9:	pop    rbx
  41f2ba:	pop    r12
  41f2bc:	pop    r13
  41f2be:	pop    r14
  41f2c0:	pop    r15
  41f2c2:	pop    rbp
  41f2c3:	ret    
  41f2c4:	mov    rax,QWORD PTR [rip+0x33d2d]        # 452ff8 <stderr@GLIBC_2.2.5>
  41f2cb:	mov    rcx,QWORD PTR [rax]
  41f2ce:	lea    rdi,[rip+0x11537]        # 43080c <_IO_stdin_used@@Base+0x180c>
  41f2d5:	mov    esi,0x22
  41f2da:	mov    edx,0x1
  41f2df:	call   406220 <fwrite@plt>
  41f2e4:	mov    edi,0x1
  41f2e9:	call   406210 <exit@plt>
  41f2ee:	xchg   ax,ax
  41f2f0:	push   rbp
  41f2f1:	push   r15
  41f2f3:	push   r14
  41f2f5:	push   r13
  41f2f7:	push   r12
  41f2f9:	push   rbx
  41f2fa:	sub    rsp,0x58
  41f2fe:	mov    r14,rdi
  41f301:	lea    r13,[rdi+rsi*1]
  41f305:	test   rsi,rsi
  41f308:	mov    QWORD PTR [rsp+0x38],rdx
  41f30d:	je     422e12 <__flatcc_fb_parse@@Base+0x6032>
  41f313:	lea    rbp,[rdx+0x28]
  41f317:	lea    r10,[rdx+0x38]
  41f31b:	lea    r9,[rdx+0x30]
  41f31f:	lea    rsi,[rdx+0x48]
  41f323:	lea    r8,[rdx+0x78]
  41f327:	lea    r11,[rdx+0x70]
  41f32b:	lea    r12,[r13-0x1]
  41f32f:	lea    rax,[r13-0x2]
  41f333:	mov    QWORD PTR [rsp+0x50],rax
  41f338:	lea    rdx,[rip+0x28f81]        # 4482c0 <fb_schema_table_deleted@@Base+0x390>
  41f33f:	mov    QWORD PTR [rsp+0x20],rsi
  41f344:	mov    QWORD PTR [rsp+0x18],r11
  41f349:	mov    QWORD PTR [rsp+0x8],r8
  41f34e:	mov    QWORD PTR [rsp],r9
  41f352:	mov    QWORD PTR [rsp+0x30],r10
  41f357:	mov    QWORD PTR [rsp+0x40],r13
  41f35c:	mov    QWORD PTR [rsp+0x10],rbp
  41f361:	mov    QWORD PTR [rsp+0x28],r12
  41f366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f370:	movsx  eax,BYTE PTR [r14]
  41f374:	movsxd rbx,eax
  41f377:	cmp    ebx,0x7e
  41f37a:	ja     420d74 <__flatcc_fb_parse@@Base+0x3f94>
  41f380:	lea    rcx,[rip+0x28c3d]        # 447fc4 <fb_schema_table_deleted@@Base+0x94>
  41f387:	movsxd rax,DWORD PTR [rcx+rax*4]
  41f38b:	add    rax,rcx
  41f38e:	jmp    rax
  41f390:	shl    rbx,0x8
  41f394:	lea    r15,[r14+0x1]
  41f398:	cmp    r15,r13
  41f39b:	je     41f3e0 <__flatcc_fb_parse@@Base+0x2600>
  41f39d:	movzx  eax,BYTE PTR [r15]
  41f3a1:	cmp    BYTE PTR [rax+rdx*1],0x0
  41f3a5:	je     41f3e3 <__flatcc_fb_parse@@Base+0x2603>
  41f3a7:	movsx  rcx,al
  41f3ab:	shl    rcx,0x10
  41f3af:	or     rcx,rbx
  41f3b2:	lea    r15,[r14+0x2]
  41f3b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f3c0:	cmp    r13,r15
  41f3c3:	je     41f3e8 <__flatcc_fb_parse@@Base+0x2608>
  41f3c5:	movzx  eax,BYTE PTR [r15]
  41f3c9:	add    r15,0x1
  41f3cd:	cmp    BYTE PTR [rax+rdx*1],0x0
  41f3d1:	jne    41f3c0 <__flatcc_fb_parse@@Base+0x25e0>
  41f3d3:	add    r15,0xffffffffffffffff
  41f3d7:	jmp    41f3f0 <__flatcc_fb_parse@@Base+0x2610>
  41f3d9:	nop    DWORD PTR [rax+0x0]
  41f3e0:	mov    r15,r13
  41f3e3:	mov    rcx,rbx
  41f3e6:	jmp    41f3f0 <__flatcc_fb_parse@@Base+0x2610>
  41f3e8:	mov    r15,r13
  41f3eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f3f0:	movsx  rdx,BYTE PTR [r15-0x1]
  41f3f5:	shl    rdx,0x18
  41f3f9:	mov    rbx,r15
  41f3fc:	sub    rbx,r14
  41f3ff:	movzx  eax,bl
  41f402:	add    rax,0x30
  41f406:	or     rax,rcx
  41f409:	or     rax,rdx
  41f40c:	cmp    rax,0x6570723a
  41f412:	mov    QWORD PTR [rsp+0x48],r14
  41f417:	jle    41f480 <__flatcc_fb_parse@@Base+0x26a0>
  41f419:	cmp    rax,0x6e69663d
  41f41f:	jg     41f4f9 <__flatcc_fb_parse@@Base+0x2719>
  41f425:	cmp    rax,0x676c7534
  41f42b:	jle    41f6fd <__flatcc_fb_parse@@Base+0x291d>
  41f431:	cmp    rax,0x67747335
  41f437:	jle    41f98d <__flatcc_fb_parse@@Base+0x2bad>
  41f43d:	cmp    rax,0x67747336
  41f443:	je     41fbae <__flatcc_fb_parse@@Base+0x2dce>
  41f449:	cmp    rax,0x6c6f6234
  41f44f:	je     41fbda <__flatcc_fb_parse@@Base+0x2dfa>
  41f455:	cmp    rax,0x6d6e6534
  41f45b:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f461:	cmp    DWORD PTR [r14],0x6d756e65
  41f468:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f46e:	mov    r14,rbx
  41f471:	mov    r13,0xfffffffffffffc1b
  41f478:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41f47d:	nop    DWORD PTR [rax]
  41f480:	cmp    rax,0x38697534
  41f486:	jle    41f55e <__flatcc_fb_parse@@Base+0x277e>
  41f48c:	cmp    rax,0x65617434
  41f492:	jle    41f73d <__flatcc_fb_parse@@Base+0x295d>
  41f498:	cmp    rax,0x656e6936
  41f49e:	jle    41f9c1 <__flatcc_fb_parse@@Base+0x2be1>
  41f4a4:	cmp    rax,0x656e6937
  41f4aa:	je     41fbf6 <__flatcc_fb_parse@@Base+0x2e16>
  41f4b0:	cmp    rax,0x656f6436
  41f4b6:	je     41fc39 <__flatcc_fb_parse@@Base+0x2e59>
  41f4bc:	cmp    rax,0x656f7239
  41f4c2:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f4c8:	mov    rax,QWORD PTR [r14]
  41f4cb:	movabs rcx,0x7079745f746f6f72
  41f4d5:	xor    rax,rcx
  41f4d8:	movzx  ecx,BYTE PTR [r14+0x8]
  41f4dd:	xor    rcx,0x65
  41f4e1:	or     rcx,rax
  41f4e4:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f4ea:	mov    r14,rbx
  41f4ed:	mov    r13,0xfffffffffffffc38
  41f4f4:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41f4f9:	cmp    rax,0x74697533
  41f4ff:	jle    41f77d <__flatcc_fb_parse@@Base+0x299d>
  41f505:	cmp    rax,0x746e6932
  41f50b:	jle    41fa02 <__flatcc_fb_parse@@Base+0x2c22>
  41f511:	cmp    rax,0x74747336
  41f517:	je     41fc65 <__flatcc_fb_parse@@Base+0x2e85>
  41f51d:	cmp    rax,0x74737536
  41f523:	je     41fc91 <__flatcc_fb_parse@@Base+0x2eb1>
  41f529:	cmp    rax,0x746e6933
  41f52f:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f535:	movzx  eax,WORD PTR [r14]
  41f539:	xor    eax,0x6e69
  41f53e:	movzx  ecx,BYTE PTR [r14+0x2]
  41f543:	xor    ecx,0x74
  41f546:	or     cx,ax
  41f549:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f54f:	mov    r14,rbx
  41f552:	mov    r13,0xfffffffffffffc1e
  41f559:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41f55e:	cmp    rax,0x346c6636
  41f564:	jg     41f7ca <__flatcc_fb_parse@@Base+0x29ea>
  41f56a:	cmp    rax,0x326e6934
  41f570:	jg     41fa43 <__flatcc_fb_parse@@Base+0x2c63>
  41f576:	cmp    rax,0x32697536
  41f57c:	je     41fcbd <__flatcc_fb_parse@@Base+0x2edd>
  41f582:	cmp    rax,0x326c6637
  41f588:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f58e:	mov    edx,0x7
  41f593:	lea    rdi,[rip+0x2908d]        # 448627 <fb_schema_table_deleted@@Base+0x6f7>
  41f59a:	mov    rsi,r14
  41f59d:	call   406140 <memcmp@plt>
  41f5a2:	mov    r10,QWORD PTR [rsp+0x30]
  41f5a7:	mov    r9,QWORD PTR [rsp]
  41f5ab:	mov    r8,QWORD PTR [rsp+0x8]
  41f5b0:	mov    r11,QWORD PTR [rsp+0x18]
  41f5b5:	mov    rsi,QWORD PTR [rsp+0x20]
  41f5ba:	test   eax,eax
  41f5bc:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f5c2:	mov    r14,rbx
  41f5c5:	mov    r13,0xfffffffffffffc1c
  41f5cc:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41f5d1:	mov    rdi,QWORD PTR [rbp+0x0]
  41f5d5:	movsxd rcx,DWORD PTR [r10]
  41f5d8:	lea    r15,[rcx+rcx*4]
  41f5dc:	lea    rdx,[rdi+r15*8]
  41f5e0:	mov    QWORD PTR [r9],rdx
  41f5e3:	mov    rax,QWORD PTR [rsi]
  41f5e6:	cmp    rax,rdx
  41f5e9:	jne    41f653 <__flatcc_fb_parse@@Base+0x2873>
  41f5eb:	lea    eax,[rcx+rcx*1]
  41f5ee:	test   ecx,ecx
  41f5f0:	mov    ecx,0x400
  41f5f5:	cmove  eax,ecx
  41f5f8:	mov    DWORD PTR [r10],eax
  41f5fb:	cdqe   
  41f5fd:	shl    rax,0x3
  41f601:	lea    rsi,[rax+rax*4]
  41f605:	mov    r12,rbp
  41f608:	mov    rbp,r10
  41f60b:	call   4061d0 <realloc@plt>
  41f610:	mov    QWORD PTR [r12],rax
  41f614:	test   rax,rax
  41f617:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  41f61d:	movsxd rcx,DWORD PTR [rbp+0x0]
  41f621:	lea    rcx,[rcx+rcx*4]
  41f625:	lea    rcx,[rax+rcx*8]
  41f629:	mov    r9,QWORD PTR [rsp]
  41f62d:	mov    QWORD PTR [r9],rcx
  41f630:	lea    rax,[rax+r15*8]
  41f634:	mov    rsi,QWORD PTR [rsp+0x20]
  41f639:	mov    QWORD PTR [rsi],rax
  41f63c:	mov    r11,QWORD PTR [rsp+0x18]
  41f641:	mov    r8,QWORD PTR [rsp+0x8]
  41f646:	mov    r10,rbp
  41f649:	mov    rbp,QWORD PTR [rsp+0x10]
  41f64e:	mov    r12,QWORD PTR [rsp+0x28]
  41f653:	lea    r15,[r14+0x1]
  41f657:	mov    QWORD PTR [rax+0x20],rbx
  41f65b:	mov    QWORD PTR [rax],r14
  41f65e:	mov    QWORD PTR [rax+0x8],0x1
  41f666:	jmp    421f70 <__flatcc_fb_parse@@Base+0x5190>
  41f66b:	mov    r15,r14
  41f66e:	xchg   ax,ax
  41f670:	movzx  eax,BYTE PTR [r15+0x1]
  41f675:	add    r15,0x1
  41f679:	mov    ecx,eax
  41f67b:	add    cl,0xd0
  41f67e:	cmp    cl,0xa
  41f681:	jb     41f670 <__flatcc_fb_parse@@Base+0x2890>
  41f683:	mov    rbx,r15
  41f686:	cmp    al,0x2e
  41f688:	jne    41f6a7 <__flatcc_fb_parse@@Base+0x28c7>
  41f68a:	nop    WORD PTR [rax+rax*1+0x0]
  41f690:	cmp    r12,r15
  41f693:	je     420a2a <__flatcc_fb_parse@@Base+0x3c4a>
  41f699:	mov    al,BYTE PTR [r15+0x1]
  41f69d:	add    r15,0x1
  41f6a1:	add    al,0xd0
  41f6a3:	cmp    al,0xa
  41f6a5:	jb     41f690 <__flatcc_fb_parse@@Base+0x28b0>
  41f6a7:	cmp    r15,r13
  41f6aa:	je     420a2a <__flatcc_fb_parse@@Base+0x3c4a>
  41f6b0:	mov    al,BYTE PTR [r15]
  41f6b3:	or     al,0x20
  41f6b5:	cmp    al,0x65
  41f6b7:	jne    420a2d <__flatcc_fb_parse@@Base+0x3c4d>
  41f6bd:	lea    rax,[r15+0x1]
  41f6c1:	mov    rcx,r13
  41f6c4:	cmp    rax,r13
  41f6c7:	je     41f6db <__flatcc_fb_parse@@Base+0x28fb>
  41f6c9:	mov    dl,BYTE PTR [rax]
  41f6cb:	mov    rcx,rax
  41f6ce:	cmp    dl,0x2b
  41f6d1:	je     41f6db <__flatcc_fb_parse@@Base+0x28fb>
  41f6d3:	cmp    dl,0x2d
  41f6d6:	je     41f6db <__flatcc_fb_parse@@Base+0x28fb>
  41f6d8:	mov    rcx,r15
  41f6db:	mov    r15,rcx
  41f6de:	xchg   ax,ax
  41f6e0:	cmp    r12,r15
  41f6e3:	je     420a2a <__flatcc_fb_parse@@Base+0x3c4a>
  41f6e9:	movzx  eax,BYTE PTR [r15+0x1]
  41f6ee:	add    r15,0x1
  41f6f2:	add    al,0xd0
  41f6f4:	cmp    al,0xa
  41f6f6:	jb     41f6e0 <__flatcc_fb_parse@@Base+0x2900>
  41f6f8:	jmp    420a2d <__flatcc_fb_parse@@Base+0x3c4d>
  41f6fd:	cmp    rax,0x65746138
  41f703:	jg     41f8cf <__flatcc_fb_parse@@Base+0x2aef>
  41f709:	cmp    rax,0x6570723b
  41f70f:	je     41fce9 <__flatcc_fb_parse@@Base+0x2f09>
  41f715:	cmp    rax,0x65727434
  41f71b:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f721:	cmp    DWORD PTR [r14],0x65757274
  41f728:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f72e:	mov    r14,rbx
  41f731:	mov    r13,0xfffffffffffffc24
  41f738:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41f73d:	cmp    rax,0x65616634
  41f743:	jg     41f903 <__flatcc_fb_parse@@Base+0x2b23>
  41f749:	cmp    rax,0x38697535
  41f74f:	je     41fd2c <__flatcc_fb_parse@@Base+0x2f4c>
  41f755:	cmp    rax,0x386e6934
  41f75b:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f761:	cmp    DWORD PTR [r14],0x38746e69
  41f768:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f76e:	mov    r14,rbx
  41f771:	mov    r13,0xfffffffffffffc1f
  41f778:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41f77d:	cmp    rax,0x7269663e
  41f783:	jg     41f94c <__flatcc_fb_parse@@Base+0x2b6c>
  41f789:	cmp    rax,0x6e69663e
  41f78f:	je     41fd55 <__flatcc_fb_parse@@Base+0x2f75>
  41f795:	cmp    rax,0x6e6e7535
  41f79b:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f7a1:	mov    eax,DWORD PTR [r14]
  41f7a4:	mov    ecx,0x6f696e75
  41f7a9:	xor    eax,ecx
  41f7ab:	movzx  ecx,BYTE PTR [r14+0x4]
  41f7b0:	xor    ecx,0x6e
  41f7b3:	or     ecx,eax
  41f7b5:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f7bb:	mov    r14,rbx
  41f7be:	mov    r13,0xfffffffffffffc30
  41f7c5:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41f7ca:	cmp    rax,0x36697535
  41f7d0:	jg     41fa87 <__flatcc_fb_parse@@Base+0x2ca7>
  41f7d6:	cmp    rax,0x346c6637
  41f7dc:	je     41fd98 <__flatcc_fb_parse@@Base+0x2fb8>
  41f7e2:	cmp    rax,0x346e6935
  41f7e8:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f7ee:	mov    eax,DWORD PTR [r14]
  41f7f1:	mov    ecx,0x36746e69
  41f7f6:	xor    eax,ecx
  41f7f8:	movzx  ecx,BYTE PTR [r14+0x4]
  41f7fd:	xor    ecx,0x34
  41f800:	or     ecx,eax
  41f802:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f808:	mov    r14,rbx
  41f80b:	mov    r13,0xfffffffffffffc22
  41f812:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41f817:	lea    r15,[r14+0x1]
  41f81b:	cmp    r15,r13
  41f81e:	je     41fac8 <__flatcc_fb_parse@@Base+0x2ce8>
  41f824:	cmp    BYTE PTR [r15],0x3d
  41f828:	jne    41fac8 <__flatcc_fb_parse@@Base+0x2ce8>
  41f82e:	mov    rdi,QWORD PTR [rbp+0x0]
  41f832:	movsxd rcx,DWORD PTR [r10]
  41f835:	lea    r15,[rcx+rcx*4]
  41f839:	lea    rdx,[rdi+r15*8]
  41f83d:	mov    QWORD PTR [r9],rdx
  41f840:	mov    rax,QWORD PTR [rsi]
  41f843:	cmp    rax,rdx
  41f846:	jne    41f8b0 <__flatcc_fb_parse@@Base+0x2ad0>
  41f848:	lea    eax,[rcx+rcx*1]
  41f84b:	test   ecx,ecx
  41f84d:	mov    ecx,0x400
  41f852:	cmove  eax,ecx
  41f855:	mov    DWORD PTR [r10],eax
  41f858:	cdqe   
  41f85a:	shl    rax,0x3
  41f85e:	lea    rsi,[rax+rax*4]
  41f862:	mov    r12,rbp
  41f865:	mov    rbp,r10
  41f868:	call   4061d0 <realloc@plt>
  41f86d:	mov    QWORD PTR [r12],rax
  41f871:	test   rax,rax
  41f874:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  41f87a:	movsxd rcx,DWORD PTR [rbp+0x0]
  41f87e:	lea    rcx,[rcx+rcx*4]
  41f882:	lea    rcx,[rax+rcx*8]
  41f886:	mov    r9,QWORD PTR [rsp]
  41f88a:	mov    QWORD PTR [r9],rcx
  41f88d:	lea    rax,[rax+r15*8]
  41f891:	mov    rsi,QWORD PTR [rsp+0x20]
  41f896:	mov    QWORD PTR [rsi],rax
  41f899:	mov    r11,QWORD PTR [rsp+0x18]
  41f89e:	mov    r8,QWORD PTR [rsp+0x8]
  41f8a3:	mov    r10,rbp
  41f8a6:	mov    rbp,QWORD PTR [rsp+0x10]
  41f8ab:	mov    r12,QWORD PTR [rsp+0x28]
  41f8b0:	lea    r15,[r14+0x2]
  41f8b4:	or     rbx,0x3d00
  41f8bb:	mov    QWORD PTR [rax+0x20],rbx
  41f8bf:	mov    QWORD PTR [rax],r14
  41f8c2:	mov    QWORD PTR [rax+0x8],0x2
  41f8ca:	jmp    421f70 <__flatcc_fb_parse@@Base+0x5190>
  41f8cf:	cmp    rax,0x65746139
  41f8d5:	je     41fddb <__flatcc_fb_parse@@Base+0x2ffb>
  41f8db:	cmp    rax,0x65796234
  41f8e1:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f8e7:	cmp    DWORD PTR [r14],0x65747962
  41f8ee:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f8f4:	mov    r14,rbx
  41f8f7:	mov    r13,0xfffffffffffffc1a
  41f8fe:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41f903:	cmp    rax,0x65616635
  41f909:	je     41fe0c <__flatcc_fb_parse@@Base+0x302c>
  41f90f:	cmp    rax,0x65616e39
  41f915:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f91b:	mov    rax,QWORD PTR [r14]
  41f91e:	movabs rcx,0x63617073656d616e
  41f928:	xor    rax,rcx
  41f92b:	movzx  ecx,BYTE PTR [r14+0x8]
  41f930:	xor    rcx,0x65
  41f934:	or     rcx,rax
  41f937:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f93d:	mov    r14,rbx
  41f940:	mov    r13,0xfffffffffffffc37
  41f947:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41f94c:	cmp    rax,0x7269663f
  41f952:	je     41fe35 <__flatcc_fb_parse@@Base+0x3055>
  41f958:	cmp    rax,0x74687335
  41f95e:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f964:	mov    eax,DWORD PTR [r14]
  41f967:	mov    ecx,0x726f6873
  41f96c:	xor    eax,ecx
  41f96e:	movzx  ecx,BYTE PTR [r14+0x4]
  41f973:	xor    ecx,0x74
  41f976:	or     ecx,eax
  41f978:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f97e:	mov    r14,rbx
  41f981:	mov    r13,0xfffffffffffffc28
  41f988:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41f98d:	cmp    rax,0x676c7535
  41f993:	je     41fe78 <__flatcc_fb_parse@@Base+0x3098>
  41f999:	cmp    rax,0x676f6c34
  41f99f:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f9a5:	cmp    DWORD PTR [r14],0x676e6f6c
  41f9ac:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f9b2:	mov    r14,rbx
  41f9b5:	mov    r13,0xfffffffffffffc23
  41f9bc:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41f9c1:	cmp    rax,0x65617435
  41f9c7:	je     41fea1 <__flatcc_fb_parse@@Base+0x30c1>
  41f9cd:	cmp    rax,0x65627535
  41f9d3:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f9d9:	mov    eax,DWORD PTR [r14]
  41f9dc:	mov    ecx,0x74796275
  41f9e1:	xor    eax,ecx
  41f9e3:	movzx  ecx,BYTE PTR [r14+0x4]
  41f9e8:	xor    ecx,0x65
  41f9eb:	or     ecx,eax
  41f9ed:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41f9f3:	mov    r14,rbx
  41f9f6:	mov    r13,0xfffffffffffffc2a
  41f9fd:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fa02:	cmp    rax,0x74697534
  41fa08:	je     41fec3 <__flatcc_fb_parse@@Base+0x30e3>
  41fa0e:	cmp    rax,0x746c6635
  41fa14:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fa1a:	mov    eax,DWORD PTR [r14]
  41fa1d:	mov    ecx,0x616f6c66
  41fa22:	xor    eax,ecx
  41fa24:	movzx  ecx,BYTE PTR [r14+0x4]
  41fa29:	xor    ecx,0x74
  41fa2c:	or     ecx,eax
  41fa2e:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fa34:	mov    r14,rbx
  41fa37:	mov    r13,0xfffffffffffffc27
  41fa3e:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fa43:	cmp    rax,0x326e6935
  41fa49:	je     41fed8 <__flatcc_fb_parse@@Base+0x30f8>
  41fa4f:	cmp    rax,0x34697536
  41fa55:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fa5b:	mov    eax,DWORD PTR [r14]
  41fa5e:	mov    ecx,0x746e6975
  41fa63:	xor    eax,ecx
  41fa65:	movzx  ecx,WORD PTR [r14+0x4]
  41fa6a:	xor    ecx,0x3436
  41fa70:	or     ecx,eax
  41fa72:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fa78:	mov    r14,rbx
  41fa7b:	mov    r13,0xfffffffffffffc2e
  41fa82:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fa87:	cmp    rax,0x36697536
  41fa8d:	je     41fefa <__flatcc_fb_parse@@Base+0x311a>
  41fa93:	cmp    rax,0x366e6935
  41fa99:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fa9f:	mov    eax,DWORD PTR [r14]
  41faa2:	mov    ecx,0x31746e69
  41faa7:	xor    eax,ecx
  41faa9:	movzx  ecx,BYTE PTR [r14+0x4]
  41faae:	xor    ecx,0x36
  41fab1:	or     ecx,eax
  41fab3:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fab9:	mov    r14,rbx
  41fabc:	mov    r13,0xfffffffffffffc20
  41fac3:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fac8:	mov    rdi,QWORD PTR [rbp+0x0]
  41facc:	movsxd rcx,DWORD PTR [r10]
  41facf:	lea    r12,[rcx+rcx*4]
  41fad3:	lea    rdx,[rdi+r12*8]
  41fad7:	mov    QWORD PTR [r9],rdx
  41fada:	mov    rax,QWORD PTR [rsi]
  41fadd:	cmp    rax,rdx
  41fae0:	jne    41fb46 <__flatcc_fb_parse@@Base+0x2d66>
  41fae2:	lea    eax,[rcx+rcx*1]
  41fae5:	test   ecx,ecx
  41fae7:	mov    ecx,0x400
  41faec:	cmove  eax,ecx
  41faef:	mov    DWORD PTR [r10],eax
  41faf2:	cdqe   
  41faf4:	shl    rax,0x3
  41faf8:	lea    rsi,[rax+rax*4]
  41fafc:	mov    rbp,r10
  41faff:	call   4061d0 <realloc@plt>
  41fb04:	mov    rcx,QWORD PTR [rsp+0x10]
  41fb09:	mov    QWORD PTR [rcx],rax
  41fb0c:	test   rax,rax
  41fb0f:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  41fb15:	movsxd rcx,DWORD PTR [rbp+0x0]
  41fb19:	lea    rcx,[rcx+rcx*4]
  41fb1d:	lea    rcx,[rax+rcx*8]
  41fb21:	mov    r9,QWORD PTR [rsp]
  41fb25:	mov    QWORD PTR [r9],rcx
  41fb28:	lea    rax,[rax+r12*8]
  41fb2c:	mov    rsi,QWORD PTR [rsp+0x20]
  41fb31:	mov    QWORD PTR [rsi],rax
  41fb34:	mov    r11,QWORD PTR [rsp+0x18]
  41fb39:	mov    r8,QWORD PTR [rsp+0x8]
  41fb3e:	mov    r10,rbp
  41fb41:	mov    rbp,QWORD PTR [rsp+0x10]
  41fb46:	mov    QWORD PTR [rax+0x20],rbx
  41fb4a:	mov    QWORD PTR [rax],r14
  41fb4d:	mov    QWORD PTR [rax+0x8],0x1
  41fb55:	mov    rcx,QWORD PTR [r8]
  41fb58:	mov    QWORD PTR [rax+0x10],rcx
  41fb5c:	add    r14,0x1
  41fb60:	sub    r14,QWORD PTR [r11]
  41fb63:	mov    QWORD PTR [rax+0x18],r14
  41fb67:	add    rax,0x28
  41fb6b:	mov    QWORD PTR [rsi],rax
  41fb6e:	mov    r12,QWORD PTR [rsp+0x28]
  41fb73:	jmp    421f89 <__flatcc_fb_parse@@Base+0x51a9>
  41fb78:	add    r14,0x1
  41fb7c:	cmp    r14,r13
  41fb7f:	je     422e27 <__flatcc_fb_parse@@Base+0x6047>
  41fb85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fb8f:	nop
  41fb90:	movzx  eax,BYTE PTR [r14]
  41fb94:	cmp    al,0x20
  41fb96:	je     41fba0 <__flatcc_fb_parse@@Base+0x2dc0>
  41fb98:	cmp    al,0x9
  41fb9a:	jne    420e1f <__flatcc_fb_parse@@Base+0x403f>
  41fba0:	add    r14,0x1
  41fba4:	cmp    r13,r14
  41fba7:	jne    41fb90 <__flatcc_fb_parse@@Base+0x2db0>
  41fba9:	jmp    422e27 <__flatcc_fb_parse@@Base+0x6047>
  41fbae:	mov    eax,DWORD PTR [r14]
  41fbb1:	mov    ecx,0x69727473
  41fbb6:	xor    eax,ecx
  41fbb8:	movzx  ecx,WORD PTR [r14+0x4]
  41fbbd:	xor    ecx,0x676e
  41fbc3:	or     ecx,eax
  41fbc5:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fbcb:	mov    r14,rbx
  41fbce:	mov    r13,0xfffffffffffffc32
  41fbd5:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fbda:	cmp    DWORD PTR [r14],0x6c6f6f62
  41fbe1:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fbe7:	mov    r14,rbx
  41fbea:	mov    r13,0xfffffffffffffc19
  41fbf1:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fbf6:	mov    edx,0x7
  41fbfb:	lea    rdi,[rip+0x28a35]        # 448637 <fb_schema_table_deleted@@Base+0x707>
  41fc02:	mov    rsi,r14
  41fc05:	call   406140 <memcmp@plt>
  41fc0a:	mov    r10,QWORD PTR [rsp+0x30]
  41fc0f:	mov    r9,QWORD PTR [rsp]
  41fc13:	mov    r8,QWORD PTR [rsp+0x8]
  41fc18:	mov    r11,QWORD PTR [rsp+0x18]
  41fc1d:	mov    rsi,QWORD PTR [rsp+0x20]
  41fc22:	test   eax,eax
  41fc24:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fc2a:	mov    r14,rbx
  41fc2d:	mov    r13,0xfffffffffffffc35
  41fc34:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fc39:	mov    eax,DWORD PTR [r14]
  41fc3c:	mov    ecx,0x62756f64
  41fc41:	xor    eax,ecx
  41fc43:	movzx  ecx,WORD PTR [r14+0x4]
  41fc48:	xor    ecx,0x656c
  41fc4e:	or     ecx,eax
  41fc50:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fc56:	mov    r14,rbx
  41fc59:	mov    r13,0xfffffffffffffc31
  41fc60:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fc65:	mov    eax,DWORD PTR [r14]
  41fc68:	mov    ecx,0x75727473
  41fc6d:	xor    eax,ecx
  41fc6f:	movzx  ecx,WORD PTR [r14+0x4]
  41fc74:	xor    ecx,0x7463
  41fc7a:	or     ecx,eax
  41fc7c:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fc82:	mov    r14,rbx
  41fc85:	mov    r13,0xfffffffffffffc33
  41fc8c:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fc91:	mov    eax,DWORD PTR [r14]
  41fc94:	mov    ecx,0x6f687375
  41fc99:	xor    eax,ecx
  41fc9b:	movzx  ecx,WORD PTR [r14+0x4]
  41fca0:	xor    ecx,0x7472
  41fca6:	or     ecx,eax
  41fca8:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fcae:	mov    r14,rbx
  41fcb1:	mov    r13,0xfffffffffffffc34
  41fcb8:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fcbd:	mov    eax,DWORD PTR [r14]
  41fcc0:	mov    ecx,0x746e6975
  41fcc5:	xor    eax,ecx
  41fcc7:	movzx  ecx,WORD PTR [r14+0x4]
  41fccc:	xor    ecx,0x3233
  41fcd2:	or     ecx,eax
  41fcd4:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fcda:	mov    r14,rbx
  41fcdd:	mov    r13,0xfffffffffffffc2d
  41fce4:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fce9:	mov    edx,0xb
  41fcee:	lea    rdi,[rip+0x2895e]        # 448653 <fb_schema_table_deleted@@Base+0x723>
  41fcf5:	mov    rsi,r14
  41fcf8:	call   406140 <memcmp@plt>
  41fcfd:	mov    r10,QWORD PTR [rsp+0x30]
  41fd02:	mov    r9,QWORD PTR [rsp]
  41fd06:	mov    r8,QWORD PTR [rsp+0x8]
  41fd0b:	mov    r11,QWORD PTR [rsp+0x18]
  41fd10:	mov    rsi,QWORD PTR [rsp+0x20]
  41fd15:	test   eax,eax
  41fd17:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fd1d:	mov    r14,rbx
  41fd20:	mov    r13,0xfffffffffffffc39
  41fd27:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fd2c:	mov    eax,DWORD PTR [r14]
  41fd2f:	mov    ecx,0x746e6975
  41fd34:	xor    eax,ecx
  41fd36:	movzx  ecx,BYTE PTR [r14+0x4]
  41fd3b:	xor    ecx,0x38
  41fd3e:	or     ecx,eax
  41fd40:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fd46:	mov    r14,rbx
  41fd49:	mov    r13,0xfffffffffffffc2b
  41fd50:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fd55:	mov    edx,0xe
  41fd5a:	lea    rdi,[rip+0x288fe]        # 44865f <fb_schema_table_deleted@@Base+0x72f>
  41fd61:	mov    rsi,r14
  41fd64:	call   406140 <memcmp@plt>
  41fd69:	mov    r10,QWORD PTR [rsp+0x30]
  41fd6e:	mov    r9,QWORD PTR [rsp]
  41fd72:	mov    r8,QWORD PTR [rsp+0x8]
  41fd77:	mov    r11,QWORD PTR [rsp+0x18]
  41fd7c:	mov    rsi,QWORD PTR [rsp+0x20]
  41fd81:	test   eax,eax
  41fd83:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fd89:	mov    r14,rbx
  41fd8c:	mov    r13,0xfffffffffffffc3a
  41fd93:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fd98:	mov    edx,0x7
  41fd9d:	lea    rdi,[rip+0x2888b]        # 44862f <fb_schema_table_deleted@@Base+0x6ff>
  41fda4:	mov    rsi,r14
  41fda7:	call   406140 <memcmp@plt>
  41fdac:	mov    r10,QWORD PTR [rsp+0x30]
  41fdb1:	mov    r9,QWORD PTR [rsp]
  41fdb5:	mov    r8,QWORD PTR [rsp+0x8]
  41fdba:	mov    r11,QWORD PTR [rsp+0x18]
  41fdbf:	mov    rsi,QWORD PTR [rsp+0x20]
  41fdc4:	test   eax,eax
  41fdc6:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fdcc:	mov    r14,rbx
  41fdcf:	mov    r13,0xfffffffffffffc1d
  41fdd6:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fddb:	mov    rax,QWORD PTR [r14]
  41fdde:	movabs rcx,0x7475626972747461
  41fde8:	xor    rax,rcx
  41fdeb:	movzx  ecx,BYTE PTR [r14+0x8]
  41fdf0:	xor    rcx,0x65
  41fdf4:	or     rcx,rax
  41fdf7:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fdfd:	mov    r14,rbx
  41fe00:	mov    r13,0xfffffffffffffc36
  41fe07:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fe0c:	mov    eax,DWORD PTR [r14]
  41fe0f:	mov    ecx,0x736c6166
  41fe14:	xor    eax,ecx
  41fe16:	movzx  ecx,BYTE PTR [r14+0x4]
  41fe1b:	xor    ecx,0x65
  41fe1e:	or     ecx,eax
  41fe20:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fe26:	mov    r14,rbx
  41fe29:	mov    r13,0xfffffffffffffc26
  41fe30:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fe35:	mov    edx,0xf
  41fe3a:	lea    rdi,[rip+0x2882d]        # 44866e <fb_schema_table_deleted@@Base+0x73e>
  41fe41:	mov    rsi,r14
  41fe44:	call   406140 <memcmp@plt>
  41fe49:	mov    r10,QWORD PTR [rsp+0x30]
  41fe4e:	mov    r9,QWORD PTR [rsp]
  41fe52:	mov    r8,QWORD PTR [rsp+0x8]
  41fe57:	mov    r11,QWORD PTR [rsp+0x18]
  41fe5c:	mov    rsi,QWORD PTR [rsp+0x20]
  41fe61:	test   eax,eax
  41fe63:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fe69:	mov    r14,rbx
  41fe6c:	mov    r13,0xfffffffffffffc3b
  41fe73:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fe78:	mov    eax,DWORD PTR [r14]
  41fe7b:	mov    ecx,0x6e6f6c75
  41fe80:	xor    eax,ecx
  41fe82:	movzx  ecx,BYTE PTR [r14+0x4]
  41fe87:	xor    ecx,0x67
  41fe8a:	or     ecx,eax
  41fe8c:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fe92:	mov    r14,rbx
  41fe95:	mov    r13,0xfffffffffffffc2f
  41fe9c:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fea1:	mov    eax,DWORD PTR [r14]
  41fea4:	mov    ecx,0x6c626174
  41fea9:	xor    eax,ecx
  41feab:	movzx  ecx,BYTE PTR [r14+0x4]
  41feb0:	xor    ecx,0x65
  41feb3:	or     ecx,eax
  41feb5:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41feb7:	mov    r14,rbx
  41feba:	mov    r13,0xfffffffffffffc29
  41fec1:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fec3:	cmp    DWORD PTR [r14],0x746e6975
  41feca:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41fecc:	mov    r14,rbx
  41fecf:	mov    r13,0xfffffffffffffc25
  41fed6:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fed8:	mov    eax,DWORD PTR [r14]
  41fedb:	mov    ecx,0x33746e69
  41fee0:	xor    eax,ecx
  41fee2:	movzx  ecx,BYTE PTR [r14+0x4]
  41fee7:	xor    ecx,0x32
  41feea:	or     ecx,eax
  41feec:	jne    41ff20 <__flatcc_fb_parse@@Base+0x3140>
  41feee:	mov    r14,rbx
  41fef1:	mov    r13,0xfffffffffffffc21
  41fef8:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  41fefa:	mov    eax,DWORD PTR [r14]
  41fefd:	mov    ecx,0x746e6975
  41ff02:	xor    eax,ecx
  41ff04:	movzx  ecx,WORD PTR [r14+0x4]
  41ff09:	xor    ecx,0x3631
  41ff0f:	or     ecx,eax
  41ff11:	je     421063 <__flatcc_fb_parse@@Base+0x4283>
  41ff17:	nop    WORD PTR [rax+rax*1+0x0]
  41ff20:	mov    r14,rbx
  41ff23:	mov    r13d,0x9
  41ff29:	mov    rdi,QWORD PTR [rbp+0x0]
  41ff2d:	movsxd rcx,DWORD PTR [r10]
  41ff30:	lea    rbx,[rcx+rcx*4]
  41ff34:	lea    rdx,[rdi+rbx*8]
  41ff38:	mov    QWORD PTR [r9],rdx
  41ff3b:	mov    rax,QWORD PTR [rsi]
  41ff3e:	cmp    rax,rdx
  41ff41:	jne    41ffab <__flatcc_fb_parse@@Base+0x31cb>
  41ff43:	lea    eax,[rcx+rcx*1]
  41ff46:	test   ecx,ecx
  41ff48:	mov    ecx,0x400
  41ff4d:	cmove  eax,ecx
  41ff50:	mov    DWORD PTR [r10],eax
  41ff53:	cdqe   
  41ff55:	shl    rax,0x3
  41ff59:	lea    rsi,[rax+rax*4]
  41ff5d:	mov    r12,rbp
  41ff60:	mov    rbp,r10
  41ff63:	call   4061d0 <realloc@plt>
  41ff68:	mov    QWORD PTR [r12],rax
  41ff6c:	test   rax,rax
  41ff6f:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  41ff75:	movsxd rcx,DWORD PTR [rbp+0x0]
  41ff79:	lea    rcx,[rcx+rcx*4]
  41ff7d:	lea    rcx,[rax+rcx*8]
  41ff81:	mov    r9,QWORD PTR [rsp]
  41ff85:	mov    QWORD PTR [r9],rcx
  41ff88:	lea    rax,[rax+rbx*8]
  41ff8c:	mov    rsi,QWORD PTR [rsp+0x20]
  41ff91:	mov    QWORD PTR [rsi],rax
  41ff94:	mov    r11,QWORD PTR [rsp+0x18]
  41ff99:	mov    r8,QWORD PTR [rsp+0x8]
  41ff9e:	mov    r10,rbp
  41ffa1:	mov    rbp,QWORD PTR [rsp+0x10]
  41ffa6:	mov    r12,QWORD PTR [rsp+0x28]
  41ffab:	mov    QWORD PTR [rax+0x20],r13
  41ffaf:	mov    rdx,QWORD PTR [rsp+0x48]
  41ffb4:	mov    QWORD PTR [rax],rdx
  41ffb7:	mov    QWORD PTR [rax+0x8],r14
  41ffbb:	mov    rcx,QWORD PTR [r8]
  41ffbe:	mov    QWORD PTR [rax+0x10],rcx
  41ffc2:	add    rdx,0x1
  41ffc6:	sub    rdx,QWORD PTR [r11]
  41ffc9:	mov    QWORD PTR [rax+0x18],rdx
  41ffcd:	add    rax,0x28
  41ffd1:	mov    QWORD PTR [rsi],rax
  41ffd4:	mov    r13,QWORD PTR [rsp+0x40]
  41ffd9:	jmp    421f89 <__flatcc_fb_parse@@Base+0x51a9>
  41ffde:	lea    r15,[r14+0x1]
  41ffe2:	cmp    r15,r13
  41ffe5:	je     421072 <__flatcc_fb_parse@@Base+0x4292>
  41ffeb:	movsx  eax,BYTE PTR [r15]
  41ffef:	cmp    eax,0x3d
  41fff2:	je     421a89 <__flatcc_fb_parse@@Base+0x4ca9>
  41fff8:	cmp    eax,0x3c
  41fffb:	je     421b16 <__flatcc_fb_parse@@Base+0x4d36>
  420001:	cmp    eax,0x2d
  420004:	jne    421072 <__flatcc_fb_parse@@Base+0x4292>
  42000a:	mov    rdi,QWORD PTR [rbp+0x0]
  42000e:	movsxd rcx,DWORD PTR [r10]
  420011:	lea    rbx,[rcx+rcx*4]
  420015:	lea    rdx,[rdi+rbx*8]
  420019:	mov    QWORD PTR [r9],rdx
  42001c:	mov    rax,QWORD PTR [rsi]
  42001f:	cmp    rax,rdx
  420022:	jne    420086 <__flatcc_fb_parse@@Base+0x32a6>
  420024:	lea    eax,[rcx+rcx*1]
  420027:	test   ecx,ecx
  420029:	mov    ecx,0x400
  42002e:	cmove  eax,ecx
  420031:	mov    DWORD PTR [r10],eax
  420034:	cdqe   
  420036:	shl    rax,0x3
  42003a:	lea    rsi,[rax+rax*4]
  42003e:	mov    r15,rbp
  420041:	mov    rbp,r10
  420044:	call   4061d0 <realloc@plt>
  420049:	mov    QWORD PTR [r15],rax
  42004c:	test   rax,rax
  42004f:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  420055:	movsxd rcx,DWORD PTR [rbp+0x0]
  420059:	lea    rcx,[rcx+rcx*4]
  42005d:	lea    rcx,[rax+rcx*8]
  420061:	mov    r9,QWORD PTR [rsp]
  420065:	mov    QWORD PTR [r9],rcx
  420068:	lea    rax,[rax+rbx*8]
  42006c:	mov    rsi,QWORD PTR [rsp+0x20]
  420071:	mov    QWORD PTR [rsi],rax
  420074:	mov    r11,QWORD PTR [rsp+0x18]
  420079:	mov    r8,QWORD PTR [rsp+0x8]
  42007e:	mov    r10,rbp
  420081:	mov    rbp,QWORD PTR [rsp+0x10]
  420086:	lea    r15,[r14+0x2]
  42008a:	mov    QWORD PTR [rax+0x20],0x2d3c
  420092:	jmp    41f8bf <__flatcc_fb_parse@@Base+0x2adf>
  420097:	lea    r15,[r14+0x1]
  42009b:	cmp    r15,r13
  42009e:	je     420e27 <__flatcc_fb_parse@@Base+0x4047>
  4200a4:	movsx  eax,BYTE PTR [r15]
  4200a8:	cmp    eax,0x3a
  4200ab:	je     4213a6 <__flatcc_fb_parse@@Base+0x45c6>
  4200b1:	cmp    eax,0x3d
  4200b4:	jne    420e27 <__flatcc_fb_parse@@Base+0x4047>
  4200ba:	mov    rdi,QWORD PTR [rbp+0x0]
  4200be:	movsxd rcx,DWORD PTR [r10]
  4200c1:	lea    rbx,[rcx+rcx*4]
  4200c5:	lea    rdx,[rdi+rbx*8]
  4200c9:	mov    QWORD PTR [r9],rdx
  4200cc:	mov    rax,QWORD PTR [rsi]
  4200cf:	cmp    rax,rdx
  4200d2:	jne    420136 <__flatcc_fb_parse@@Base+0x3356>
  4200d4:	lea    eax,[rcx+rcx*1]
  4200d7:	test   ecx,ecx
  4200d9:	mov    ecx,0x400
  4200de:	cmove  eax,ecx
  4200e1:	mov    DWORD PTR [r10],eax
  4200e4:	cdqe   
  4200e6:	shl    rax,0x3
  4200ea:	lea    rsi,[rax+rax*4]
  4200ee:	mov    r15,rbp
  4200f1:	mov    rbp,r10
  4200f4:	call   4061d0 <realloc@plt>
  4200f9:	mov    QWORD PTR [r15],rax
  4200fc:	test   rax,rax
  4200ff:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  420105:	movsxd rcx,DWORD PTR [rbp+0x0]
  420109:	lea    rcx,[rcx+rcx*4]
  42010d:	lea    rcx,[rax+rcx*8]
  420111:	mov    r9,QWORD PTR [rsp]
  420115:	mov    QWORD PTR [r9],rcx
  420118:	lea    rax,[rax+rbx*8]
  42011c:	mov    rsi,QWORD PTR [rsp+0x20]
  420121:	mov    QWORD PTR [rsi],rax
  420124:	mov    r11,QWORD PTR [rsp+0x18]
  420129:	mov    r8,QWORD PTR [rsp+0x8]
  42012e:	mov    r10,rbp
  420131:	mov    rbp,QWORD PTR [rsp+0x10]
  420136:	lea    r15,[r14+0x2]
  42013a:	mov    QWORD PTR [rax+0x20],0x3d3a
  420142:	jmp    41f8bf <__flatcc_fb_parse@@Base+0x2adf>
  420147:	lea    r15,[r14+0x1]
  42014b:	cmp    r15,r13
  42014e:	je     420eb6 <__flatcc_fb_parse@@Base+0x40d6>
  420154:	movsx  eax,BYTE PTR [r15]
  420158:	cmp    eax,0x2b
  42015b:	je     42144a <__flatcc_fb_parse@@Base+0x466a>
  420161:	cmp    eax,0x3d
  420164:	jne    420eb6 <__flatcc_fb_parse@@Base+0x40d6>
  42016a:	mov    rdi,QWORD PTR [rbp+0x0]
  42016e:	movsxd rcx,DWORD PTR [r10]
  420171:	lea    rbx,[rcx+rcx*4]
  420175:	lea    rdx,[rdi+rbx*8]
  420179:	mov    QWORD PTR [r9],rdx
  42017c:	mov    rax,QWORD PTR [rsi]
  42017f:	cmp    rax,rdx
  420182:	jne    4201e6 <__flatcc_fb_parse@@Base+0x3406>
  420184:	lea    eax,[rcx+rcx*1]
  420187:	test   ecx,ecx
  420189:	mov    ecx,0x400
  42018e:	cmove  eax,ecx
  420191:	mov    DWORD PTR [r10],eax
  420194:	cdqe   
  420196:	shl    rax,0x3
  42019a:	lea    rsi,[rax+rax*4]
  42019e:	mov    r15,rbp
  4201a1:	mov    rbp,r10
  4201a4:	call   4061d0 <realloc@plt>
  4201a9:	mov    QWORD PTR [r15],rax
  4201ac:	test   rax,rax
  4201af:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  4201b5:	movsxd rcx,DWORD PTR [rbp+0x0]
  4201b9:	lea    rcx,[rcx+rcx*4]
  4201bd:	lea    rcx,[rax+rcx*8]
  4201c1:	mov    r9,QWORD PTR [rsp]
  4201c5:	mov    QWORD PTR [r9],rcx
  4201c8:	lea    rax,[rax+rbx*8]
  4201cc:	mov    rsi,QWORD PTR [rsp+0x20]
  4201d1:	mov    QWORD PTR [rsi],rax
  4201d4:	mov    r11,QWORD PTR [rsp+0x18]
  4201d9:	mov    r8,QWORD PTR [rsp+0x8]
  4201de:	mov    r10,rbp
  4201e1:	mov    rbp,QWORD PTR [rsp+0x10]
  4201e6:	lea    r15,[r14+0x2]
  4201ea:	mov    QWORD PTR [rax+0x20],0x3d2b
  4201f2:	jmp    41f8bf <__flatcc_fb_parse@@Base+0x2adf>
  4201f7:	lea    r15,[r14+0x1]
  4201fb:	cmp    r15,r13
  4201fe:	je     421101 <__flatcc_fb_parse@@Base+0x4321>
  420204:	movsx  eax,BYTE PTR [r15]
  420208:	cmp    eax,0x2a
  42020b:	je     421bc6 <__flatcc_fb_parse@@Base+0x4de6>
  420211:	cmp    eax,0x3d
  420214:	je     421be7 <__flatcc_fb_parse@@Base+0x4e07>
  42021a:	cmp    eax,0x2f
  42021d:	jne    421101 <__flatcc_fb_parse@@Base+0x4321>
  420223:	lea    rbp,[r14+0x2]
  420227:	cmp    rbp,r13
  42022a:	je     42238a <__flatcc_fb_parse@@Base+0x55aa>
  420230:	mov    al,BYTE PTR [rbp+0x0]
  420233:	cmp    al,0x2f
  420235:	sete   cl
  420238:	cmp    al,0x21
  42023a:	sete   al
  42023d:	or     al,cl
  42023f:	jmp    42238c <__flatcc_fb_parse@@Base+0x55ac>
  420244:	lea    rbx,[r14+0x1]
  420248:	mov    r15,r14
  42024b:	cmp    rbx,r13
  42024e:	je     41f670 <__flatcc_fb_parse@@Base+0x2890>
  420254:	movsx  eax,BYTE PTR [rbx]
  420257:	or     eax,0x20
  42025a:	mov    r15,r14
  42025d:	cmp    eax,0x78
  420260:	jne    41f670 <__flatcc_fb_parse@@Base+0x2890>
  420266:	lea    rax,[r14+0x2]
  42026a:	mov    r15,r13
  42026d:	cmp    rax,r13
  420270:	je     4222e4 <__flatcc_fb_parse@@Base+0x5504>
  420276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420280:	movzx  ecx,BYTE PTR [rax]
  420283:	mov    edx,ecx
  420285:	add    dl,0xd0
  420288:	cmp    dl,0xa
  42028b:	jb     42029c <__flatcc_fb_parse@@Base+0x34bc>
  42028d:	or     cl,0x20
  420290:	add    cl,0x9f
  420293:	cmp    cl,0x5
  420296:	ja     4222e1 <__flatcc_fb_parse@@Base+0x5501>
  42029c:	add    rax,0x1
  4202a0:	cmp    r13,rax
  4202a3:	jne    420280 <__flatcc_fb_parse@@Base+0x34a0>
  4202a5:	mov    r15,r13
  4202a8:	jmp    4222e4 <__flatcc_fb_parse@@Base+0x5504>
  4202ad:	lea    r15,[r14+0x1]
  4202b1:	cmp    r15,r13
  4202b4:	je     420f45 <__flatcc_fb_parse@@Base+0x4165>
  4202ba:	movsx  eax,BYTE PTR [r15]
  4202be:	cmp    eax,0x3e
  4202c1:	je     4214d7 <__flatcc_fb_parse@@Base+0x46f7>
  4202c7:	cmp    eax,0x3d
  4202ca:	jne    420f45 <__flatcc_fb_parse@@Base+0x4165>
  4202d0:	mov    rdi,QWORD PTR [rbp+0x0]
  4202d4:	movsxd rcx,DWORD PTR [r10]
  4202d7:	lea    rbx,[rcx+rcx*4]
  4202db:	lea    rdx,[rdi+rbx*8]
  4202df:	mov    QWORD PTR [r9],rdx
  4202e2:	mov    rax,QWORD PTR [rsi]
  4202e5:	cmp    rax,rdx
  4202e8:	jne    42034c <__flatcc_fb_parse@@Base+0x356c>
  4202ea:	lea    eax,[rcx+rcx*1]
  4202ed:	test   ecx,ecx
  4202ef:	mov    ecx,0x400
  4202f4:	cmove  eax,ecx
  4202f7:	mov    DWORD PTR [r10],eax
  4202fa:	cdqe   
  4202fc:	shl    rax,0x3
  420300:	lea    rsi,[rax+rax*4]
  420304:	mov    r15,rbp
  420307:	mov    rbp,r10
  42030a:	call   4061d0 <realloc@plt>
  42030f:	mov    QWORD PTR [r15],rax
  420312:	test   rax,rax
  420315:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  42031b:	movsxd rcx,DWORD PTR [rbp+0x0]
  42031f:	lea    rcx,[rcx+rcx*4]
  420323:	lea    rcx,[rax+rcx*8]
  420327:	mov    r9,QWORD PTR [rsp]
  42032b:	mov    QWORD PTR [r9],rcx
  42032e:	lea    rax,[rax+rbx*8]
  420332:	mov    rsi,QWORD PTR [rsp+0x20]
  420337:	mov    QWORD PTR [rsi],rax
  42033a:	mov    r11,QWORD PTR [rsp+0x18]
  42033f:	mov    r8,QWORD PTR [rsp+0x8]
  420344:	mov    r10,rbp
  420347:	mov    rbp,QWORD PTR [rsp+0x10]
  42034c:	lea    r15,[r14+0x2]
  420350:	mov    QWORD PTR [rax+0x20],0x3d3e
  420358:	jmp    41f8bf <__flatcc_fb_parse@@Base+0x2adf>
  42035d:	lea    rax,[r14+0x1]
  420361:	mov    r15,r13
  420364:	cmp    rax,r13
  420367:	je     42093c <__flatcc_fb_parse@@Base+0x3b5c>
  42036d:	lea    rcx,[r14+0x2]
  420371:	cmp    BYTE PTR [r14+0x1],0xa
  420376:	jmp    420935 <__flatcc_fb_parse@@Base+0x3b55>
  42037b:	mov    rax,QWORD PTR [rbp+0x0]
  42037f:	mov    r15,rbp
  420382:	mov    rbp,r10
  420385:	mov    r10d,DWORD PTR [r10]
  420388:	movsxd rcx,r10d
  42038b:	lea    rbx,[rcx+rcx*4]
  42038f:	lea    rdx,[rax+rbx*8]
  420393:	mov    QWORD PTR [r9],rdx
  420396:	mov    rcx,QWORD PTR [rsi]
  420399:	cmp    rcx,rdx
  42039c:	jne    4203f8 <__flatcc_fb_parse@@Base+0x3618>
  42039e:	lea    ecx,[r10+r10*1]
  4203a2:	test   r10d,r10d
  4203a5:	mov    edx,0x400
  4203aa:	cmove  ecx,edx
  4203ad:	mov    DWORD PTR [rbp+0x0],ecx
  4203b0:	movsxd rcx,ecx
  4203b3:	shl    rcx,0x3
  4203b7:	lea    rsi,[rcx+rcx*4]
  4203bb:	mov    rdi,rax
  4203be:	call   4061d0 <realloc@plt>
  4203c3:	mov    QWORD PTR [r15],rax
  4203c6:	test   rax,rax
  4203c9:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  4203cf:	movsxd r10,DWORD PTR [rbp+0x0]
  4203d3:	lea    rcx,[r10+r10*4]
  4203d7:	lea    rcx,[rax+rcx*8]
  4203db:	mov    rdx,QWORD PTR [rsp]
  4203df:	mov    QWORD PTR [rdx],rcx
  4203e2:	lea    rcx,[rax+rbx*8]
  4203e6:	mov    rsi,QWORD PTR [rsp+0x20]
  4203eb:	mov    QWORD PTR [rsi],rcx
  4203ee:	mov    r11,QWORD PTR [rsp+0x18]
  4203f3:	mov    r8,QWORD PTR [rsp+0x8]
  4203f8:	lea    rbx,[r14+0x1]
  4203fc:	mov    QWORD PTR [rcx+0x20],0x13
  420404:	mov    QWORD PTR [rcx],r14
  420407:	mov    QWORD PTR [rcx+0x8],0x1
  42040f:	mov    r9,QWORD PTR [r8]
  420412:	mov    QWORD PTR [rcx+0x10],r9
  420416:	mov    r8,QWORD PTR [r11]
  420419:	add    r14,0x1
  42041d:	sub    r14,r8
  420420:	mov    QWORD PTR [rcx+0x18],r14
  420424:	jmp    42044a <__flatcc_fb_parse@@Base+0x366a>
  420426:	mov    QWORD PTR [rcx+0x20],0x12
  42042e:	mov    QWORD PTR [rcx],r15
  420431:	mov    rdx,rbx
  420434:	sub    rdx,r15
  420437:	mov    QWORD PTR [rcx+0x8],rdx
  42043b:	mov    QWORD PTR [rcx+0x10],r9
  42043f:	add    r15,0x1
  420443:	sub    r15,r8
  420446:	mov    QWORD PTR [rcx+0x18],r15
  42044a:	add    rcx,0x28
  42044e:	mov    QWORD PTR [rsi],rcx
  420451:	mov    r15,rbx
  420454:	jmp    4204a0 <__flatcc_fb_parse@@Base+0x36c0>
  420456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420460:	add    r15,0x1
  420464:	mov    QWORD PTR [rcx+0x20],0x6
  42046c:	mov    QWORD PTR [rcx],r13
  42046f:	mov    QWORD PTR [rcx+0x8],0x1
  420477:	mov    QWORD PTR [rcx+0x10],r9
  42047b:	add    r13,0x1
  42047f:	sub    r13,r8
  420482:	mov    QWORD PTR [rcx+0x18],r13
  420486:	add    rcx,0x28
  42048a:	mov    QWORD PTR [rsi],rcx
  42048d:	mov    rbx,r15
  420490:	mov    r13,QWORD PTR [rsp+0x40]
  420495:	jmp    4204a0 <__flatcc_fb_parse@@Base+0x36c0>
  420497:	add    rbp,0x2
  42049b:	mov    rbx,rbp
  42049e:	xchg   ax,ax
  4204a0:	lea    r14,[rbx-0x1]
  4204a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4204ae:	xchg   ax,ax
  4204b0:	mov    rbp,rbx
  4204b3:	cmp    r13,rbx
  4204b6:	je     4205b0 <__flatcc_fb_parse@@Base+0x37d0>
  4204bc:	movzx  edx,BYTE PTR [rbp+0x0]
  4204c0:	cmp    dl,0x22
  4204c3:	je     420770 <__flatcc_fb_parse@@Base+0x3990>
  4204c9:	cmp    dl,0x5c
  4204cc:	je     420770 <__flatcc_fb_parse@@Base+0x3990>
  4204d2:	add    r14,0x1
  4204d6:	xor    r12d,r12d
  4204d9:	cmp    dl,0x20
  4204dc:	jl     4204f0 <__flatcc_fb_parse@@Base+0x3710>
  4204de:	lea    rbx,[rbp+0x1]
  4204e2:	cmp    dl,0x7f
  4204e5:	jne    4204b0 <__flatcc_fb_parse@@Base+0x36d0>
  4204e7:	nop    WORD PTR [rax+rax*1+0x0]
  4204f0:	cmp    r15,r14
  4204f3:	je     4205bf <__flatcc_fb_parse@@Base+0x37df>
  4204f9:	movsxd rdx,r10d
  4204fc:	lea    rbx,[rdx+rdx*4]
  420500:	lea    rdx,[rax+rbx*8]
  420504:	mov    rdi,QWORD PTR [rsp]
  420508:	mov    QWORD PTR [rdi],rdx
  42050b:	cmp    rcx,rdx
  42050e:	jne    42057b <__flatcc_fb_parse@@Base+0x379b>
  420510:	lea    ecx,[r10+r10*1]
  420514:	test   r10d,r10d
  420517:	mov    edx,0x400
  42051c:	cmove  ecx,edx
  42051f:	mov    r13,QWORD PTR [rsp+0x30]
  420524:	mov    DWORD PTR [r13+0x0],ecx
  420528:	movsxd rcx,ecx
  42052b:	shl    rcx,0x3
  42052f:	lea    rsi,[rcx+rcx*4]
  420533:	mov    rdi,rax
  420536:	call   4061d0 <realloc@plt>
  42053b:	mov    rcx,QWORD PTR [rsp+0x10]
  420540:	mov    QWORD PTR [rcx],rax
  420543:	test   rax,rax
  420546:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  42054c:	movsxd r10,DWORD PTR [r13+0x0]
  420550:	lea    rcx,[r10+r10*4]
  420554:	lea    rcx,[rax+rcx*8]
  420558:	mov    rdx,QWORD PTR [rsp]
  42055c:	mov    QWORD PTR [rdx],rcx
  42055f:	lea    rcx,[rax+rbx*8]
  420563:	mov    rsi,QWORD PTR [rsp+0x20]
  420568:	mov    QWORD PTR [rsi],rcx
  42056b:	mov    rdx,QWORD PTR [rsp+0x8]
  420570:	mov    r9,QWORD PTR [rdx]
  420573:	mov    r11,QWORD PTR [rsp+0x18]
  420578:	mov    r8,QWORD PTR [r11]
  42057b:	mov    QWORD PTR [rcx+0x20],0x14
  420583:	mov    QWORD PTR [rcx],r15
  420586:	mov    rdx,r14
  420589:	sub    rdx,r15
  42058c:	mov    QWORD PTR [rcx+0x8],rdx
  420590:	mov    QWORD PTR [rcx+0x10],r9
  420594:	add    r15,0x1
  420598:	sub    r15,r8
  42059b:	mov    QWORD PTR [rcx+0x18],r15
  42059f:	add    rcx,0x28
  4205a3:	mov    QWORD PTR [rsi],rcx
  4205a6:	mov    r13,r14
  4205a9:	jmp    4205c2 <__flatcc_fb_parse@@Base+0x37e2>
  4205ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4205b0:	mov    r12b,0x1
  4205b3:	mov    r14,r13
  4205b6:	cmp    r15,r14
  4205b9:	jne    4204f9 <__flatcc_fb_parse@@Base+0x3719>
  4205bf:	mov    r13,r15
  4205c2:	mov    dil,BYTE PTR [r14]
  4205c5:	cmp    dil,0x22
  4205c9:	je     42121f <__flatcc_fb_parse@@Base+0x443f>
  4205cf:	test   dil,dil
  4205d2:	setne  dl
  4205d5:	not    r12b
  4205d8:	test   r12b,dl
  4205db:	je     4212ed <__flatcc_fb_parse@@Base+0x450d>
  4205e1:	cmp    dil,0x5c
  4205e5:	mov    r12,QWORD PTR [rsp+0x28]
  4205ea:	jne    4206d0 <__flatcc_fb_parse@@Base+0x38f0>
  4205f0:	movsxd rdx,r10d
  4205f3:	lea    r14,[rdx+rdx*4]
  4205f7:	lea    rdx,[rax+r14*8]
  4205fb:	mov    rdi,QWORD PTR [rsp]
  4205ff:	mov    QWORD PTR [rdi],rdx
  420602:	cmp    rcx,rdx
  420605:	jne    420670 <__flatcc_fb_parse@@Base+0x3890>
  420607:	lea    ecx,[r10+r10*1]
  42060b:	test   r10d,r10d
  42060e:	mov    edx,0x400
  420613:	cmove  ecx,edx
  420616:	mov    r15,QWORD PTR [rsp+0x30]
  42061b:	mov    DWORD PTR [r15],ecx
  42061e:	movsxd rcx,ecx
  420621:	shl    rcx,0x3
  420625:	lea    rsi,[rcx+rcx*4]
  420629:	mov    rdi,rax
  42062c:	call   4061d0 <realloc@plt>
  420631:	mov    rcx,QWORD PTR [rsp+0x10]
  420636:	mov    QWORD PTR [rcx],rax
  420639:	test   rax,rax
  42063c:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  420642:	movsxd r10,DWORD PTR [r15]
  420645:	lea    rcx,[r10+r10*4]
  420649:	lea    rcx,[rax+rcx*8]
  42064d:	mov    rdx,QWORD PTR [rsp]
  420651:	mov    QWORD PTR [rdx],rcx
  420654:	lea    rcx,[rax+r14*8]
  420658:	mov    rsi,QWORD PTR [rsp+0x20]
  42065d:	mov    QWORD PTR [rsi],rcx
  420660:	mov    rdx,QWORD PTR [rsp+0x8]
  420665:	mov    r9,QWORD PTR [rdx]
  420668:	mov    r11,QWORD PTR [rsp+0x18]
  42066d:	mov    r8,QWORD PTR [r11]
  420670:	lea    r15,[rbp+0x1]
  420674:	mov    QWORD PTR [rcx+0x20],0x15
  42067c:	mov    QWORD PTR [rcx],r13
  42067f:	mov    rdx,r15
  420682:	sub    rdx,r13
  420685:	mov    QWORD PTR [rcx+0x8],rdx
  420689:	mov    QWORD PTR [rcx+0x10],r9
  42068d:	add    r13,0x1
  420691:	sub    r13,r8
  420694:	mov    QWORD PTR [rcx+0x18],r13
  420698:	add    rcx,0x28
  42069c:	mov    QWORD PTR [rsi],rcx
  42069f:	cmp    r12,rbp
  4206a2:	je     421fa1 <__flatcc_fb_parse@@Base+0x51c1>
  4206a8:	movzx  edi,BYTE PTR [r15]
  4206ac:	cmp    rdi,0x22
  4206b0:	mov    r13,QWORD PTR [rsp+0x40]
  4206b5:	ja     420784 <__flatcc_fb_parse@@Base+0x39a4>
  4206bb:	lea    rdx,[rip+0x27afe]        # 4481c0 <fb_schema_table_deleted@@Base+0x290>
  4206c2:	mov    rbx,rdx
  4206c5:	movsxd rdx,DWORD PTR [rdx+rdi*4]
  4206c9:	add    rdx,rbx
  4206cc:	jmp    rdx
  4206ce:	xchg   ax,ax
  4206d0:	mov    r15,r14
  4206d3:	cmp    dil,0xd
  4206d7:	je     4219bf <__flatcc_fb_parse@@Base+0x4bdf>
  4206dd:	cmp    dil,0xa
  4206e1:	je     4219bf <__flatcc_fb_parse@@Base+0x4bdf>
  4206e7:	movsxd rdx,r10d
  4206ea:	lea    rbp,[rdx+rdx*4]
  4206ee:	lea    rdx,[rax+rbp*8]
  4206f2:	mov    rdi,QWORD PTR [rsp]
  4206f6:	mov    QWORD PTR [rdi],rdx
  4206f9:	cmp    rcx,rdx
  4206fc:	jne    420460 <__flatcc_fb_parse@@Base+0x3680>
  420702:	lea    ecx,[r10+r10*1]
  420706:	test   r10d,r10d
  420709:	mov    edx,0x400
  42070e:	cmove  ecx,edx
  420711:	mov    rbx,QWORD PTR [rsp+0x30]
  420716:	mov    DWORD PTR [rbx],ecx
  420718:	movsxd rcx,ecx
  42071b:	shl    rcx,0x3
  42071f:	lea    rsi,[rcx+rcx*4]
  420723:	mov    rdi,rax
  420726:	call   4061d0 <realloc@plt>
  42072b:	mov    rcx,QWORD PTR [rsp+0x10]
  420730:	mov    QWORD PTR [rcx],rax
  420733:	test   rax,rax
  420736:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  42073c:	movsxd r10,DWORD PTR [rbx]
  42073f:	lea    rcx,[r10+r10*4]
  420743:	lea    rcx,[rax+rcx*8]
  420747:	mov    rdx,QWORD PTR [rsp]
  42074b:	mov    QWORD PTR [rdx],rcx
  42074e:	lea    rcx,[rax+rbp*8]
  420752:	mov    rsi,QWORD PTR [rsp+0x20]
  420757:	mov    QWORD PTR [rsi],rcx
  42075a:	mov    rdx,QWORD PTR [rsp+0x8]
  42075f:	mov    r9,QWORD PTR [rdx]
  420762:	mov    r11,QWORD PTR [rsp+0x18]
  420767:	mov    r8,QWORD PTR [r11]
  42076a:	jmp    420460 <__flatcc_fb_parse@@Base+0x3680>
  42076f:	nop
  420770:	xor    r12d,r12d
  420773:	mov    r14,rbp
  420776:	cmp    r15,r14
  420779:	jne    4204f9 <__flatcc_fb_parse@@Base+0x3719>
  42077f:	jmp    4205bf <__flatcc_fb_parse@@Base+0x37df>
  420784:	cmp    dil,0x5c
  420788:	je     420497 <__flatcc_fb_parse@@Base+0x36b7>
  42078e:	mov    r13,r15
  420791:	cmp    dil,0xd
  420795:	jne    4206dd <__flatcc_fb_parse@@Base+0x38fd>
  42079b:	jmp    4219bf <__flatcc_fb_parse@@Base+0x4bdf>
  4207a0:	mov    rbx,r13
  4207a3:	cmp    QWORD PTR [rsp+0x50],rbp
  4207a8:	je     4207ce <__flatcc_fb_parse@@Base+0x39ee>
  4207aa:	lea    rdx,[rbp+0x3]
  4207ae:	cmp    BYTE PTR [rbp+0x2],0xd
  4207b2:	jmp    4207c6 <__flatcc_fb_parse@@Base+0x39e6>
  4207b4:	mov    rbx,r13
  4207b7:	cmp    QWORD PTR [rsp+0x50],rbp
  4207bc:	je     4207ce <__flatcc_fb_parse@@Base+0x39ee>
  4207be:	lea    rdx,[rbp+0x3]
  4207c2:	cmp    BYTE PTR [rbp+0x2],0xa
  4207c6:	lea    rbx,[rbp+0x2]
  4207ca:	cmove  rbx,rdx
  4207ce:	add    r9,0x1
  4207d2:	mov    rdx,QWORD PTR [rsp+0x8]
  4207d7:	mov    QWORD PTR [rdx],r9
  4207da:	mov    QWORD PTR [r11],rbx
  4207dd:	movsxd rdx,r10d
  4207e0:	lea    r14,[rdx+rdx*4]
  4207e4:	lea    rdx,[rax+r14*8]
  4207e8:	mov    rdi,QWORD PTR [rsp]
  4207ec:	mov    QWORD PTR [rdi],rdx
  4207ef:	cmp    rcx,rdx
  4207f2:	je     4207fc <__flatcc_fb_parse@@Base+0x3a1c>
  4207f4:	mov    r8,rbx
  4207f7:	jmp    420426 <__flatcc_fb_parse@@Base+0x3646>
  4207fc:	lea    ecx,[r10+r10*1]
  420800:	test   r10d,r10d
  420803:	mov    edx,0x400
  420808:	cmove  ecx,edx
  42080b:	mov    rbp,QWORD PTR [rsp+0x30]
  420810:	mov    DWORD PTR [rbp+0x0],ecx
  420813:	movsxd rcx,ecx
  420816:	shl    rcx,0x3
  42081a:	lea    rsi,[rcx+rcx*4]
  42081e:	mov    rdi,rax
  420821:	call   4061d0 <realloc@plt>
  420826:	mov    rcx,QWORD PTR [rsp+0x10]
  42082b:	mov    QWORD PTR [rcx],rax
  42082e:	test   rax,rax
  420831:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  420837:	movsxd r10,DWORD PTR [rbp+0x0]
  42083b:	lea    rcx,[r10+r10*4]
  42083f:	lea    rcx,[rax+rcx*8]
  420843:	mov    rdx,QWORD PTR [rsp]
  420847:	mov    QWORD PTR [rdx],rcx
  42084a:	lea    rcx,[rax+r14*8]
  42084e:	mov    rsi,QWORD PTR [rsp+0x20]
  420853:	mov    QWORD PTR [rsi],rcx
  420856:	mov    rdx,QWORD PTR [rsp+0x8]
  42085b:	mov    r9,QWORD PTR [rdx]
  42085e:	mov    r11,QWORD PTR [rsp+0x18]
  420863:	mov    r8,QWORD PTR [r11]
  420866:	jmp    420426 <__flatcc_fb_parse@@Base+0x3646>
  42086b:	lea    rax,[r14+0x1]
  42086f:	mov    r15,r13
  420872:	cmp    rax,r13
  420875:	je     421633 <__flatcc_fb_parse@@Base+0x4853>
  42087b:	movsx  ecx,BYTE PTR [rax]
  42087e:	cmp    ecx,0x26
  420881:	je     421587 <__flatcc_fb_parse@@Base+0x47a7>
  420887:	mov    r15,rax
  42088a:	cmp    ecx,0x3d
  42088d:	jne    421633 <__flatcc_fb_parse@@Base+0x4853>
  420893:	mov    rdi,QWORD PTR [rbp+0x0]
  420897:	movsxd rcx,DWORD PTR [r10]
  42089a:	lea    rbx,[rcx+rcx*4]
  42089e:	lea    rdx,[rdi+rbx*8]
  4208a2:	mov    QWORD PTR [r9],rdx
  4208a5:	mov    rax,QWORD PTR [rsi]
  4208a8:	cmp    rax,rdx
  4208ab:	jne    42090f <__flatcc_fb_parse@@Base+0x3b2f>
  4208ad:	lea    eax,[rcx+rcx*1]
  4208b0:	test   ecx,ecx
  4208b2:	mov    ecx,0x400
  4208b7:	cmove  eax,ecx
  4208ba:	mov    DWORD PTR [r10],eax
  4208bd:	cdqe   
  4208bf:	shl    rax,0x3
  4208c3:	lea    rsi,[rax+rax*4]
  4208c7:	mov    r15,rbp
  4208ca:	mov    rbp,r10
  4208cd:	call   4061d0 <realloc@plt>
  4208d2:	mov    QWORD PTR [r15],rax
  4208d5:	test   rax,rax
  4208d8:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  4208de:	movsxd rcx,DWORD PTR [rbp+0x0]
  4208e2:	lea    rcx,[rcx+rcx*4]
  4208e6:	lea    rcx,[rax+rcx*8]
  4208ea:	mov    r9,QWORD PTR [rsp]
  4208ee:	mov    QWORD PTR [r9],rcx
  4208f1:	lea    rax,[rax+rbx*8]
  4208f5:	mov    rsi,QWORD PTR [rsp+0x20]
  4208fa:	mov    QWORD PTR [rsi],rax
  4208fd:	mov    r11,QWORD PTR [rsp+0x18]
  420902:	mov    r8,QWORD PTR [rsp+0x8]
  420907:	mov    r10,rbp
  42090a:	mov    rbp,QWORD PTR [rsp+0x10]
  42090f:	lea    r15,[r14+0x2]
  420913:	mov    QWORD PTR [rax+0x20],0x3d26
  42091b:	jmp    41f8bf <__flatcc_fb_parse@@Base+0x2adf>
  420920:	lea    rax,[r14+0x1]
  420924:	mov    r15,r13
  420927:	cmp    rax,r13
  42092a:	je     42093c <__flatcc_fb_parse@@Base+0x3b5c>
  42092c:	lea    rcx,[r14+0x2]
  420930:	cmp    BYTE PTR [r14+0x1],0xd
  420935:	cmove  rax,rcx
  420939:	mov    r15,rax
  42093c:	add    QWORD PTR [r8],0x1
  420940:	mov    QWORD PTR [r11],r15
  420943:	jmp    421f90 <__flatcc_fb_parse@@Base+0x51b0>
  420948:	lea    r15,[r14+0x1]
  42094c:	cmp    r15,r13
  42094f:	je     421190 <__flatcc_fb_parse@@Base+0x43b0>
  420955:	movsx  eax,BYTE PTR [r15]
  420959:	cmp    eax,0x2d
  42095c:	je     421c74 <__flatcc_fb_parse@@Base+0x4e94>
  420962:	cmp    eax,0x3e
  420965:	je     421d01 <__flatcc_fb_parse@@Base+0x4f21>
  42096b:	cmp    eax,0x3d
  42096e:	jne    421190 <__flatcc_fb_parse@@Base+0x43b0>
  420974:	mov    rdi,QWORD PTR [rbp+0x0]
  420978:	movsxd rcx,DWORD PTR [r10]
  42097b:	lea    rbx,[rcx+rcx*4]
  42097f:	lea    rdx,[rdi+rbx*8]
  420983:	mov    QWORD PTR [r9],rdx
  420986:	mov    rax,QWORD PTR [rsi]
  420989:	cmp    rax,rdx
  42098c:	jne    4209f0 <__flatcc_fb_parse@@Base+0x3c10>
  42098e:	lea    eax,[rcx+rcx*1]
  420991:	test   ecx,ecx
  420993:	mov    ecx,0x400
  420998:	cmove  eax,ecx
  42099b:	mov    DWORD PTR [r10],eax
  42099e:	cdqe   
  4209a0:	shl    rax,0x3
  4209a4:	lea    rsi,[rax+rax*4]
  4209a8:	mov    r15,rbp
  4209ab:	mov    rbp,r10
  4209ae:	call   4061d0 <realloc@plt>
  4209b3:	mov    QWORD PTR [r15],rax
  4209b6:	test   rax,rax
  4209b9:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  4209bf:	movsxd rcx,DWORD PTR [rbp+0x0]
  4209c3:	lea    rcx,[rcx+rcx*4]
  4209c7:	lea    rcx,[rax+rcx*8]
  4209cb:	mov    r9,QWORD PTR [rsp]
  4209cf:	mov    QWORD PTR [r9],rcx
  4209d2:	lea    rax,[rax+rbx*8]
  4209d6:	mov    rsi,QWORD PTR [rsp+0x20]
  4209db:	mov    QWORD PTR [rsi],rax
  4209de:	mov    r11,QWORD PTR [rsp+0x18]
  4209e3:	mov    r8,QWORD PTR [rsp+0x8]
  4209e8:	mov    r10,rbp
  4209eb:	mov    rbp,QWORD PTR [rsp+0x10]
  4209f0:	lea    r15,[r14+0x2]
  4209f4:	mov    QWORD PTR [rax+0x20],0x3d2d
  4209fc:	jmp    41f8bf <__flatcc_fb_parse@@Base+0x2adf>
  420a01:	lea    r15,[r14+0x1]
  420a05:	cmp    r15,r13
  420a08:	je     4221c3 <__flatcc_fb_parse@@Base+0x53e3>
  420a0e:	movsx  eax,BYTE PTR [r15]
  420a12:	lea    ecx,[rax-0x30]
  420a15:	cmp    ecx,0xa
  420a18:	jae    422116 <__flatcc_fb_parse@@Base+0x5336>
  420a1e:	mov    rbx,r14
  420a21:	cmp    r12,r15
  420a24:	jne    41f699 <__flatcc_fb_parse@@Base+0x28b9>
  420a2a:	mov    r15,r13
  420a2d:	mov    rdi,QWORD PTR [rbp+0x0]
  420a31:	movsxd rcx,DWORD PTR [r10]
  420a34:	lea    rbp,[rcx+rcx*4]
  420a38:	lea    rdx,[rdi+rbp*8]
  420a3c:	mov    QWORD PTR [r9],rdx
  420a3f:	mov    rax,QWORD PTR [rsi]
  420a42:	cmp    rbx,r15
  420a45:	je     420aba <__flatcc_fb_parse@@Base+0x3cda>
  420a47:	cmp    rax,rdx
  420a4a:	jne    420aaa <__flatcc_fb_parse@@Base+0x3cca>
  420a4c:	lea    eax,[rcx+rcx*1]
  420a4f:	test   ecx,ecx
  420a51:	mov    ecx,0x400
  420a56:	cmove  eax,ecx
  420a59:	mov    DWORD PTR [r10],eax
  420a5c:	cdqe   
  420a5e:	shl    rax,0x3
  420a62:	lea    rsi,[rax+rax*4]
  420a66:	mov    rbx,r10
  420a69:	call   4061d0 <realloc@plt>
  420a6e:	mov    rcx,QWORD PTR [rsp+0x10]
  420a73:	mov    QWORD PTR [rcx],rax
  420a76:	test   rax,rax
  420a79:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  420a7f:	movsxd rcx,DWORD PTR [rbx]
  420a82:	lea    rcx,[rcx+rcx*4]
  420a86:	lea    rcx,[rax+rcx*8]
  420a8a:	mov    r9,QWORD PTR [rsp]
  420a8e:	mov    QWORD PTR [r9],rcx
  420a91:	lea    rax,[rax+rbp*8]
  420a95:	mov    rsi,QWORD PTR [rsp+0x20]
  420a9a:	mov    QWORD PTR [rsi],rax
  420a9d:	mov    r11,QWORD PTR [rsp+0x18]
  420aa2:	mov    r8,QWORD PTR [rsp+0x8]
  420aa7:	mov    r10,rbx
  420aaa:	mov    QWORD PTR [rax+0x20],0xb
  420ab2:	mov    QWORD PTR [rax],r14
  420ab5:	mov    rbx,r15
  420ab8:	jmp    420b2e <__flatcc_fb_parse@@Base+0x3d4e>
  420aba:	cmp    rax,rdx
  420abd:	jne    420b23 <__flatcc_fb_parse@@Base+0x3d43>
  420abf:	lea    eax,[rcx+rcx*1]
  420ac2:	test   ecx,ecx
  420ac4:	mov    ecx,0x400
  420ac9:	cmove  eax,ecx
  420acc:	mov    DWORD PTR [r10],eax
  420acf:	cdqe   
  420ad1:	shl    rax,0x3
  420ad5:	lea    rsi,[rax+rax*4]
  420ad9:	mov    r12,r10
  420adc:	call   4061d0 <realloc@plt>
  420ae1:	mov    rcx,QWORD PTR [rsp+0x10]
  420ae6:	mov    QWORD PTR [rcx],rax
  420ae9:	test   rax,rax
  420aec:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  420af2:	movsxd rcx,DWORD PTR [r12]
  420af6:	lea    rcx,[rcx+rcx*4]
  420afa:	lea    rcx,[rax+rcx*8]
  420afe:	mov    r9,QWORD PTR [rsp]
  420b02:	mov    QWORD PTR [r9],rcx
  420b05:	lea    rax,[rax+rbp*8]
  420b09:	mov    rsi,QWORD PTR [rsp+0x20]
  420b0e:	mov    QWORD PTR [rsi],rax
  420b11:	mov    r11,QWORD PTR [rsp+0x18]
  420b16:	mov    r8,QWORD PTR [rsp+0x8]
  420b1b:	mov    r10,r12
  420b1e:	mov    r12,QWORD PTR [rsp+0x28]
  420b23:	mov    QWORD PTR [rax+0x20],0xa
  420b2b:	mov    QWORD PTR [rax],r14
  420b2e:	sub    rbx,r14
  420b31:	mov    QWORD PTR [rax+0x8],rbx
  420b35:	mov    rcx,QWORD PTR [r8]
  420b38:	mov    QWORD PTR [rax+0x10],rcx
  420b3c:	add    r14,0x1
  420b40:	sub    r14,QWORD PTR [r11]
  420b43:	mov    QWORD PTR [rax+0x18],r14
  420b47:	add    rax,0x28
  420b4b:	mov    QWORD PTR [rsi],rax
  420b4e:	mov    rbp,QWORD PTR [rsp+0x10]
  420b53:	jmp    421f89 <__flatcc_fb_parse@@Base+0x51a9>
  420b58:	lea    rax,[r14+0x1]
  420b5c:	mov    r15,r13
  420b5f:	cmp    rax,r13
  420b62:	je     42176e <__flatcc_fb_parse@@Base+0x498e>
  420b68:	movsx  ecx,BYTE PTR [rax]
  420b6b:	cmp    ecx,0x7c
  420b6e:	je     4216c2 <__flatcc_fb_parse@@Base+0x48e2>
  420b74:	mov    r15,rax
  420b77:	cmp    ecx,0x3d
  420b7a:	jne    42176e <__flatcc_fb_parse@@Base+0x498e>
  420b80:	mov    rdi,QWORD PTR [rbp+0x0]
  420b84:	movsxd rcx,DWORD PTR [r10]
  420b87:	lea    rbx,[rcx+rcx*4]
  420b8b:	lea    rdx,[rdi+rbx*8]
  420b8f:	mov    QWORD PTR [r9],rdx
  420b92:	mov    rax,QWORD PTR [rsi]
  420b95:	cmp    rax,rdx
  420b98:	jne    420bfc <__flatcc_fb_parse@@Base+0x3e1c>
  420b9a:	lea    eax,[rcx+rcx*1]
  420b9d:	test   ecx,ecx
  420b9f:	mov    ecx,0x400
  420ba4:	cmove  eax,ecx
  420ba7:	mov    DWORD PTR [r10],eax
  420baa:	cdqe   
  420bac:	shl    rax,0x3
  420bb0:	lea    rsi,[rax+rax*4]
  420bb4:	mov    r15,rbp
  420bb7:	mov    rbp,r10
  420bba:	call   4061d0 <realloc@plt>
  420bbf:	mov    QWORD PTR [r15],rax
  420bc2:	test   rax,rax
  420bc5:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  420bcb:	movsxd rcx,DWORD PTR [rbp+0x0]
  420bcf:	lea    rcx,[rcx+rcx*4]
  420bd3:	lea    rcx,[rax+rcx*8]
  420bd7:	mov    r9,QWORD PTR [rsp]
  420bdb:	mov    QWORD PTR [r9],rcx
  420bde:	lea    rax,[rax+rbx*8]
  420be2:	mov    rsi,QWORD PTR [rsp+0x20]
  420be7:	mov    QWORD PTR [rsi],rax
  420bea:	mov    r11,QWORD PTR [rsp+0x18]
  420bef:	mov    r8,QWORD PTR [rsp+0x8]
  420bf4:	mov    r10,rbp
  420bf7:	mov    rbp,QWORD PTR [rsp+0x10]
  420bfc:	lea    r15,[r14+0x2]
  420c00:	mov    QWORD PTR [rax+0x20],0x3d7c
  420c08:	jmp    41f8bf <__flatcc_fb_parse@@Base+0x2adf>
  420c0d:	lea    r15,[r14+0x1]
  420c11:	cmp    r15,r13
  420c14:	je     420fd4 <__flatcc_fb_parse@@Base+0x41f4>
  420c1a:	movsx  eax,BYTE PTR [r15]
  420c1e:	cmp    eax,0x2a
  420c21:	je     4217fd <__flatcc_fb_parse@@Base+0x4a1d>
  420c27:	cmp    eax,0x3d
  420c2a:	jne    420fd4 <__flatcc_fb_parse@@Base+0x41f4>
  420c30:	mov    rdi,QWORD PTR [rbp+0x0]
  420c34:	movsxd rcx,DWORD PTR [r10]
  420c37:	lea    rbx,[rcx+rcx*4]
  420c3b:	lea    rdx,[rdi+rbx*8]
  420c3f:	mov    QWORD PTR [r9],rdx
  420c42:	mov    rax,QWORD PTR [rsi]
  420c45:	cmp    rax,rdx
  420c48:	jne    420cb2 <__flatcc_fb_parse@@Base+0x3ed2>
  420c4a:	lea    eax,[rcx+rcx*1]
  420c4d:	test   ecx,ecx
  420c4f:	mov    ecx,0x400
  420c54:	cmove  eax,ecx
  420c57:	mov    DWORD PTR [r10],eax
  420c5a:	cdqe   
  420c5c:	shl    rax,0x3
  420c60:	lea    rsi,[rax+rax*4]
  420c64:	mov    r12,rbp
  420c67:	mov    rbp,r10
  420c6a:	call   4061d0 <realloc@plt>
  420c6f:	mov    QWORD PTR [r12],rax
  420c73:	test   rax,rax
  420c76:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  420c7c:	movsxd rcx,DWORD PTR [rbp+0x0]
  420c80:	lea    rcx,[rcx+rcx*4]
  420c84:	lea    rcx,[rax+rcx*8]
  420c88:	mov    r9,QWORD PTR [rsp]
  420c8c:	mov    QWORD PTR [r9],rcx
  420c8f:	lea    rax,[rax+rbx*8]
  420c93:	mov    rsi,QWORD PTR [rsp+0x20]
  420c98:	mov    QWORD PTR [rsi],rax
  420c9b:	mov    r11,QWORD PTR [rsp+0x18]
  420ca0:	mov    r8,QWORD PTR [rsp+0x8]
  420ca5:	mov    r10,rbp
  420ca8:	mov    rbp,QWORD PTR [rsp+0x10]
  420cad:	mov    r12,QWORD PTR [rsp+0x28]
  420cb2:	mov    QWORD PTR [rax+0x20],0x3d2a
  420cba:	jmp    41f65b <__flatcc_fb_parse@@Base+0x287b>
  420cbf:	lea    rax,[r14+0x1]
  420cc3:	mov    r15,r13
  420cc6:	cmp    rax,r13
  420cc9:	je     421ecb <__flatcc_fb_parse@@Base+0x50eb>
  420ccf:	movsx  ecx,BYTE PTR [rax]
  420cd2:	cmp    ecx,0x3d
  420cd5:	je     42188c <__flatcc_fb_parse@@Base+0x4aac>
  420cdb:	mov    r15,rax
  420cde:	cmp    ecx,0x3e
  420ce1:	jne    421ecb <__flatcc_fb_parse@@Base+0x50eb>
  420ce7:	mov    rdi,QWORD PTR [rbp+0x0]
  420ceb:	movsxd rcx,DWORD PTR [r10]
  420cee:	lea    rbx,[rcx+rcx*4]
  420cf2:	lea    rdx,[rdi+rbx*8]
  420cf6:	mov    QWORD PTR [r9],rdx
  420cf9:	mov    rax,QWORD PTR [rsi]
  420cfc:	cmp    rax,rdx
  420cff:	jne    420d63 <__flatcc_fb_parse@@Base+0x3f83>
  420d01:	lea    eax,[rcx+rcx*1]
  420d04:	test   ecx,ecx
  420d06:	mov    ecx,0x400
  420d0b:	cmove  eax,ecx
  420d0e:	mov    DWORD PTR [r10],eax
  420d11:	cdqe   
  420d13:	shl    rax,0x3
  420d17:	lea    rsi,[rax+rax*4]
  420d1b:	mov    r15,rbp
  420d1e:	mov    rbp,r10
  420d21:	call   4061d0 <realloc@plt>
  420d26:	mov    QWORD PTR [r15],rax
  420d29:	test   rax,rax
  420d2c:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  420d32:	movsxd rcx,DWORD PTR [rbp+0x0]
  420d36:	lea    rcx,[rcx+rcx*4]
  420d3a:	lea    rcx,[rax+rcx*8]
  420d3e:	mov    r9,QWORD PTR [rsp]
  420d42:	mov    QWORD PTR [r9],rcx
  420d45:	lea    rax,[rax+rbx*8]
  420d49:	mov    rsi,QWORD PTR [rsp+0x20]
  420d4e:	mov    QWORD PTR [rsi],rax
  420d51:	mov    r11,QWORD PTR [rsp+0x18]
  420d56:	mov    r8,QWORD PTR [rsp+0x8]
  420d5b:	mov    r10,rbp
  420d5e:	mov    rbp,QWORD PTR [rsp+0x10]
  420d63:	lea    r15,[r14+0x2]
  420d67:	mov    QWORD PTR [rax+0x20],0x3e3d
  420d6f:	jmp    41f8bf <__flatcc_fb_parse@@Base+0x2adf>
  420d74:	lea    r15,[r14+0x1]
  420d78:	cmp    bl,0x20
  420d7b:	jl     420d82 <__flatcc_fb_parse@@Base+0x3fa2>
  420d7d:	cmp    bl,0x7f
  420d80:	jne    420d90 <__flatcc_fb_parse@@Base+0x3fb0>
  420d82:	cmp    bl,0x9
  420d85:	je     420d90 <__flatcc_fb_parse@@Base+0x3fb0>
  420d87:	cmp    bl,0x20
  420d8a:	jne    421930 <__flatcc_fb_parse@@Base+0x4b50>
  420d90:	mov    rdi,QWORD PTR [rbp+0x0]
  420d94:	movsxd rcx,DWORD PTR [r10]
  420d97:	lea    rbx,[rcx+rcx*4]
  420d9b:	lea    rdx,[rdi+rbx*8]
  420d9f:	mov    QWORD PTR [r9],rdx
  420da2:	mov    rax,QWORD PTR [rsi]
  420da5:	cmp    rax,rdx
  420da8:	jne    420e12 <__flatcc_fb_parse@@Base+0x4032>
  420daa:	lea    eax,[rcx+rcx*1]
  420dad:	test   ecx,ecx
  420daf:	mov    ecx,0x400
  420db4:	cmove  eax,ecx
  420db7:	mov    DWORD PTR [r10],eax
  420dba:	cdqe   
  420dbc:	shl    rax,0x3
  420dc0:	lea    rsi,[rax+rax*4]
  420dc4:	mov    r12,rbp
  420dc7:	mov    rbp,r10
  420dca:	call   4061d0 <realloc@plt>
  420dcf:	mov    QWORD PTR [r12],rax
  420dd3:	test   rax,rax
  420dd6:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  420ddc:	movsxd rcx,DWORD PTR [rbp+0x0]
  420de0:	lea    rcx,[rcx+rcx*4]
  420de4:	lea    rcx,[rax+rcx*8]
  420de8:	mov    r9,QWORD PTR [rsp]
  420dec:	mov    QWORD PTR [r9],rcx
  420def:	lea    rax,[rax+rbx*8]
  420df3:	mov    rsi,QWORD PTR [rsp+0x20]
  420df8:	mov    QWORD PTR [rsi],rax
  420dfb:	mov    r11,QWORD PTR [rsp+0x18]
  420e00:	mov    r8,QWORD PTR [rsp+0x8]
  420e05:	mov    r10,rbp
  420e08:	mov    rbp,QWORD PTR [rsp+0x10]
  420e0d:	mov    r12,QWORD PTR [rsp+0x28]
  420e12:	mov    QWORD PTR [rax+0x20],0x8
  420e1a:	jmp    41f65b <__flatcc_fb_parse@@Base+0x287b>
  420e1f:	mov    r15,r14
  420e22:	jmp    421f90 <__flatcc_fb_parse@@Base+0x51b0>
  420e27:	mov    rdi,QWORD PTR [rbp+0x0]
  420e2b:	movsxd rcx,DWORD PTR [r10]
  420e2e:	lea    rbx,[rcx+rcx*4]
  420e32:	lea    rdx,[rdi+rbx*8]
  420e36:	mov    QWORD PTR [r9],rdx
  420e39:	mov    rax,QWORD PTR [rsi]
  420e3c:	cmp    rax,rdx
  420e3f:	jne    420ea9 <__flatcc_fb_parse@@Base+0x40c9>
  420e41:	lea    eax,[rcx+rcx*1]
  420e44:	test   ecx,ecx
  420e46:	mov    ecx,0x400
  420e4b:	cmove  eax,ecx
  420e4e:	mov    DWORD PTR [r10],eax
  420e51:	cdqe   
  420e53:	shl    rax,0x3
  420e57:	lea    rsi,[rax+rax*4]
  420e5b:	mov    r12,rbp
  420e5e:	mov    rbp,r10
  420e61:	call   4061d0 <realloc@plt>
  420e66:	mov    QWORD PTR [r12],rax
  420e6a:	test   rax,rax
  420e6d:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  420e73:	movsxd rcx,DWORD PTR [rbp+0x0]
  420e77:	lea    rcx,[rcx+rcx*4]
  420e7b:	lea    rcx,[rax+rcx*8]
  420e7f:	mov    r9,QWORD PTR [rsp]
  420e83:	mov    QWORD PTR [r9],rcx
  420e86:	lea    rax,[rax+rbx*8]
  420e8a:	mov    rsi,QWORD PTR [rsp+0x20]
  420e8f:	mov    QWORD PTR [rsi],rax
  420e92:	mov    r11,QWORD PTR [rsp+0x18]
  420e97:	mov    r8,QWORD PTR [rsp+0x8]
  420e9c:	mov    r10,rbp
  420e9f:	mov    rbp,QWORD PTR [rsp+0x10]
  420ea4:	mov    r12,QWORD PTR [rsp+0x28]
  420ea9:	mov    QWORD PTR [rax+0x20],0x3a
  420eb1:	jmp    41f65b <__flatcc_fb_parse@@Base+0x287b>
  420eb6:	mov    rdi,QWORD PTR [rbp+0x0]
  420eba:	movsxd rcx,DWORD PTR [r10]
  420ebd:	lea    rbx,[rcx+rcx*4]
  420ec1:	lea    rdx,[rdi+rbx*8]
  420ec5:	mov    QWORD PTR [r9],rdx
  420ec8:	mov    rax,QWORD PTR [rsi]
  420ecb:	cmp    rax,rdx
  420ece:	jne    420f38 <__flatcc_fb_parse@@Base+0x4158>
  420ed0:	lea    eax,[rcx+rcx*1]
  420ed3:	test   ecx,ecx
  420ed5:	mov    ecx,0x400
  420eda:	cmove  eax,ecx
  420edd:	mov    DWORD PTR [r10],eax
  420ee0:	cdqe   
  420ee2:	shl    rax,0x3
  420ee6:	lea    rsi,[rax+rax*4]
  420eea:	mov    r12,rbp
  420eed:	mov    rbp,r10
  420ef0:	call   4061d0 <realloc@plt>
  420ef5:	mov    QWORD PTR [r12],rax
  420ef9:	test   rax,rax
  420efc:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  420f02:	movsxd rcx,DWORD PTR [rbp+0x0]
  420f06:	lea    rcx,[rcx+rcx*4]
  420f0a:	lea    rcx,[rax+rcx*8]
  420f0e:	mov    r9,QWORD PTR [rsp]
  420f12:	mov    QWORD PTR [r9],rcx
  420f15:	lea    rax,[rax+rbx*8]
  420f19:	mov    rsi,QWORD PTR [rsp+0x20]
  420f1e:	mov    QWORD PTR [rsi],rax
  420f21:	mov    r11,QWORD PTR [rsp+0x18]
  420f26:	mov    r8,QWORD PTR [rsp+0x8]
  420f2b:	mov    r10,rbp
  420f2e:	mov    rbp,QWORD PTR [rsp+0x10]
  420f33:	mov    r12,QWORD PTR [rsp+0x28]
  420f38:	mov    QWORD PTR [rax+0x20],0x2b
  420f40:	jmp    41f65b <__flatcc_fb_parse@@Base+0x287b>
  420f45:	mov    rdi,QWORD PTR [rbp+0x0]
  420f49:	movsxd rcx,DWORD PTR [r10]
  420f4c:	lea    rbx,[rcx+rcx*4]
  420f50:	lea    rdx,[rdi+rbx*8]
  420f54:	mov    QWORD PTR [r9],rdx
  420f57:	mov    rax,QWORD PTR [rsi]
  420f5a:	cmp    rax,rdx
  420f5d:	jne    420fc7 <__flatcc_fb_parse@@Base+0x41e7>
  420f5f:	lea    eax,[rcx+rcx*1]
  420f62:	test   ecx,ecx
  420f64:	mov    ecx,0x400
  420f69:	cmove  eax,ecx
  420f6c:	mov    DWORD PTR [r10],eax
  420f6f:	cdqe   
  420f71:	shl    rax,0x3
  420f75:	lea    rsi,[rax+rax*4]
  420f79:	mov    r12,rbp
  420f7c:	mov    rbp,r10
  420f7f:	call   4061d0 <realloc@plt>
  420f84:	mov    QWORD PTR [r12],rax
  420f88:	test   rax,rax
  420f8b:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  420f91:	movsxd rcx,DWORD PTR [rbp+0x0]
  420f95:	lea    rcx,[rcx+rcx*4]
  420f99:	lea    rcx,[rax+rcx*8]
  420f9d:	mov    r9,QWORD PTR [rsp]
  420fa1:	mov    QWORD PTR [r9],rcx
  420fa4:	lea    rax,[rax+rbx*8]
  420fa8:	mov    rsi,QWORD PTR [rsp+0x20]
  420fad:	mov    QWORD PTR [rsi],rax
  420fb0:	mov    r11,QWORD PTR [rsp+0x18]
  420fb5:	mov    r8,QWORD PTR [rsp+0x8]
  420fba:	mov    r10,rbp
  420fbd:	mov    rbp,QWORD PTR [rsp+0x10]
  420fc2:	mov    r12,QWORD PTR [rsp+0x28]
  420fc7:	mov    QWORD PTR [rax+0x20],0x3e
  420fcf:	jmp    41f65b <__flatcc_fb_parse@@Base+0x287b>
  420fd4:	mov    rdi,QWORD PTR [rbp+0x0]
  420fd8:	movsxd rcx,DWORD PTR [r10]
  420fdb:	lea    rbx,[rcx+rcx*4]
  420fdf:	lea    rdx,[rdi+rbx*8]
  420fe3:	mov    QWORD PTR [r9],rdx
  420fe6:	mov    rax,QWORD PTR [rsi]
  420fe9:	cmp    rax,rdx
  420fec:	jne    421056 <__flatcc_fb_parse@@Base+0x4276>
  420fee:	lea    eax,[rcx+rcx*1]
  420ff1:	test   ecx,ecx
  420ff3:	mov    ecx,0x400
  420ff8:	cmove  eax,ecx
  420ffb:	mov    DWORD PTR [r10],eax
  420ffe:	cdqe   
  421000:	shl    rax,0x3
  421004:	lea    rsi,[rax+rax*4]
  421008:	mov    r12,rbp
  42100b:	mov    rbp,r10
  42100e:	call   4061d0 <realloc@plt>
  421013:	mov    QWORD PTR [r12],rax
  421017:	test   rax,rax
  42101a:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  421020:	movsxd rcx,DWORD PTR [rbp+0x0]
  421024:	lea    rcx,[rcx+rcx*4]
  421028:	lea    rcx,[rax+rcx*8]
  42102c:	mov    r9,QWORD PTR [rsp]
  421030:	mov    QWORD PTR [r9],rcx
  421033:	lea    rax,[rax+rbx*8]
  421037:	mov    rsi,QWORD PTR [rsp+0x20]
  42103c:	mov    QWORD PTR [rsi],rax
  42103f:	mov    r11,QWORD PTR [rsp+0x18]
  421044:	mov    r8,QWORD PTR [rsp+0x8]
  421049:	mov    r10,rbp
  42104c:	mov    rbp,QWORD PTR [rsp+0x10]
  421051:	mov    r12,QWORD PTR [rsp+0x28]
  421056:	mov    QWORD PTR [rax+0x20],0x2a
  42105e:	jmp    41f65b <__flatcc_fb_parse@@Base+0x287b>
  421063:	mov    r14,rbx
  421066:	mov    r13,0xfffffffffffffc2c
  42106d:	jmp    41ff29 <__flatcc_fb_parse@@Base+0x3149>
  421072:	mov    rdi,QWORD PTR [rbp+0x0]
  421076:	movsxd rcx,DWORD PTR [r10]
  421079:	lea    rbx,[rcx+rcx*4]
  42107d:	lea    rdx,[rdi+rbx*8]
  421081:	mov    QWORD PTR [r9],rdx
  421084:	mov    rax,QWORD PTR [rsi]
  421087:	cmp    rax,rdx
  42108a:	jne    4210f4 <__flatcc_fb_parse@@Base+0x4314>
  42108c:	lea    eax,[rcx+rcx*1]
  42108f:	test   ecx,ecx
  421091:	mov    ecx,0x400
  421096:	cmove  eax,ecx
  421099:	mov    DWORD PTR [r10],eax
  42109c:	cdqe   
  42109e:	shl    rax,0x3
  4210a2:	lea    rsi,[rax+rax*4]
  4210a6:	mov    r12,rbp
  4210a9:	mov    rbp,r10
  4210ac:	call   4061d0 <realloc@plt>
  4210b1:	mov    QWORD PTR [r12],rax
  4210b5:	test   rax,rax
  4210b8:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  4210be:	movsxd rcx,DWORD PTR [rbp+0x0]
  4210c2:	lea    rcx,[rcx+rcx*4]
  4210c6:	lea    rcx,[rax+rcx*8]
  4210ca:	mov    r9,QWORD PTR [rsp]
  4210ce:	mov    QWORD PTR [r9],rcx
  4210d1:	lea    rax,[rax+rbx*8]
  4210d5:	mov    rsi,QWORD PTR [rsp+0x20]
  4210da:	mov    QWORD PTR [rsi],rax
  4210dd:	mov    r11,QWORD PTR [rsp+0x18]
  4210e2:	mov    r8,QWORD PTR [rsp+0x8]
  4210e7:	mov    r10,rbp
  4210ea:	mov    rbp,QWORD PTR [rsp+0x10]
  4210ef:	mov    r12,QWORD PTR [rsp+0x28]
  4210f4:	mov    QWORD PTR [rax+0x20],0x3c
  4210fc:	jmp    41f65b <__flatcc_fb_parse@@Base+0x287b>
  421101:	mov    rdi,QWORD PTR [rbp+0x0]
  421105:	movsxd rcx,DWORD PTR [r10]
  421108:	lea    rbx,[rcx+rcx*4]
  42110c:	lea    rdx,[rdi+rbx*8]
  421110:	mov    QWORD PTR [r9],rdx
  421113:	mov    rax,QWORD PTR [rsi]
  421116:	cmp    rax,rdx
  421119:	jne    421183 <__flatcc_fb_parse@@Base+0x43a3>
  42111b:	lea    eax,[rcx+rcx*1]
  42111e:	test   ecx,ecx
  421120:	mov    ecx,0x400
  421125:	cmove  eax,ecx
  421128:	mov    DWORD PTR [r10],eax
  42112b:	cdqe   
  42112d:	shl    rax,0x3
  421131:	lea    rsi,[rax+rax*4]
  421135:	mov    r12,rbp
  421138:	mov    rbp,r10
  42113b:	call   4061d0 <realloc@plt>
  421140:	mov    QWORD PTR [r12],rax
  421144:	test   rax,rax
  421147:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  42114d:	movsxd rcx,DWORD PTR [rbp+0x0]
  421151:	lea    rcx,[rcx+rcx*4]
  421155:	lea    rcx,[rax+rcx*8]
  421159:	mov    r9,QWORD PTR [rsp]
  42115d:	mov    QWORD PTR [r9],rcx
  421160:	lea    rax,[rax+rbx*8]
  421164:	mov    rsi,QWORD PTR [rsp+0x20]
  421169:	mov    QWORD PTR [rsi],rax
  42116c:	mov    r11,QWORD PTR [rsp+0x18]
  421171:	mov    r8,QWORD PTR [rsp+0x8]
  421176:	mov    r10,rbp
  421179:	mov    rbp,QWORD PTR [rsp+0x10]
  42117e:	mov    r12,QWORD PTR [rsp+0x28]
  421183:	mov    QWORD PTR [rax+0x20],0x2f
  42118b:	jmp    41f65b <__flatcc_fb_parse@@Base+0x287b>
  421190:	mov    rdi,QWORD PTR [rbp+0x0]
  421194:	movsxd rcx,DWORD PTR [r10]
  421197:	lea    rbx,[rcx+rcx*4]
  42119b:	lea    rdx,[rdi+rbx*8]
  42119f:	mov    QWORD PTR [r9],rdx
  4211a2:	mov    rax,QWORD PTR [rsi]
  4211a5:	cmp    rax,rdx
  4211a8:	jne    421212 <__flatcc_fb_parse@@Base+0x4432>
  4211aa:	lea    eax,[rcx+rcx*1]
  4211ad:	test   ecx,ecx
  4211af:	mov    ecx,0x400
  4211b4:	cmove  eax,ecx
  4211b7:	mov    DWORD PTR [r10],eax
  4211ba:	cdqe   
  4211bc:	shl    rax,0x3
  4211c0:	lea    rsi,[rax+rax*4]
  4211c4:	mov    r12,rbp
  4211c7:	mov    rbp,r10
  4211ca:	call   4061d0 <realloc@plt>
  4211cf:	mov    QWORD PTR [r12],rax
  4211d3:	test   rax,rax
  4211d6:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  4211dc:	movsxd rcx,DWORD PTR [rbp+0x0]
  4211e0:	lea    rcx,[rcx+rcx*4]
  4211e4:	lea    rcx,[rax+rcx*8]
  4211e8:	mov    r9,QWORD PTR [rsp]
  4211ec:	mov    QWORD PTR [r9],rcx
  4211ef:	lea    rax,[rax+rbx*8]
  4211f3:	mov    rsi,QWORD PTR [rsp+0x20]
  4211f8:	mov    QWORD PTR [rsi],rax
  4211fb:	mov    r11,QWORD PTR [rsp+0x18]
  421200:	mov    r8,QWORD PTR [rsp+0x8]
  421205:	mov    r10,rbp
  421208:	mov    rbp,QWORD PTR [rsp+0x10]
  42120d:	mov    r12,QWORD PTR [rsp+0x28]
  421212:	mov    QWORD PTR [rax+0x20],0x2d
  42121a:	jmp    41f65b <__flatcc_fb_parse@@Base+0x287b>
  42121f:	movsxd rdx,r10d
  421222:	lea    r14,[rdx+rdx*4]
  421226:	lea    rdx,[rax+r14*8]
  42122a:	mov    rdi,QWORD PTR [rsp]
  42122e:	mov    QWORD PTR [rdi],rdx
  421231:	cmp    rcx,rdx
  421234:	mov    r12,QWORD PTR [rsp+0x28]
  421239:	jne    4212a3 <__flatcc_fb_parse@@Base+0x44c3>
  42123b:	lea    ecx,[r10+r10*1]
  42123f:	test   r10d,r10d
  421242:	mov    edx,0x400
  421247:	cmove  ecx,edx
  42124a:	mov    rbx,QWORD PTR [rsp+0x30]
  42124f:	mov    DWORD PTR [rbx],ecx
  421251:	movsxd rcx,ecx
  421254:	shl    rcx,0x3
  421258:	lea    rsi,[rcx+rcx*4]
  42125c:	mov    rdi,rax
  42125f:	call   4061d0 <realloc@plt>
  421264:	mov    rcx,QWORD PTR [rsp+0x10]
  421269:	mov    QWORD PTR [rcx],rax
  42126c:	test   rax,rax
  42126f:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  421275:	movsxd rcx,DWORD PTR [rbx]
  421278:	lea    rcx,[rcx+rcx*4]
  42127c:	lea    rcx,[rax+rcx*8]
  421280:	mov    rdx,QWORD PTR [rsp]
  421284:	mov    QWORD PTR [rdx],rcx
  421287:	lea    rcx,[rax+r14*8]
  42128b:	mov    rsi,QWORD PTR [rsp+0x20]
  421290:	mov    QWORD PTR [rsi],rcx
  421293:	mov    rax,QWORD PTR [rsp+0x8]
  421298:	mov    r9,QWORD PTR [rax]
  42129b:	mov    r11,QWORD PTR [rsp+0x18]
  4212a0:	mov    r8,QWORD PTR [r11]
  4212a3:	add    rbp,0x1
  4212a7:	mov    QWORD PTR [rcx+0x20],0x16
  4212af:	mov    QWORD PTR [rcx],r13
  4212b2:	mov    rax,rbp
  4212b5:	sub    rax,r13
  4212b8:	mov    QWORD PTR [rcx+0x8],rax
  4212bc:	mov    QWORD PTR [rcx+0x10],r9
  4212c0:	add    r13,0x1
  4212c4:	sub    r13,r8
  4212c7:	mov    QWORD PTR [rcx+0x18],r13
  4212cb:	add    rcx,0x28
  4212cf:	mov    QWORD PTR [rsi],rcx
  4212d2:	mov    r14,rbp
  4212d5:	mov    r8,QWORD PTR [rsp+0x8]
  4212da:	mov    r9,QWORD PTR [rsp]
  4212de:	mov    r10,QWORD PTR [rsp+0x30]
  4212e3:	mov    r13,QWORD PTR [rsp+0x40]
  4212e8:	jmp    421a7f <__flatcc_fb_parse@@Base+0x4c9f>
  4212ed:	movsxd rdx,r10d
  4212f0:	lea    rbx,[rdx+rdx*4]
  4212f4:	lea    rdx,[rax+rbx*8]
  4212f8:	mov    rdi,QWORD PTR [rsp]
  4212fc:	mov    QWORD PTR [rdi],rdx
  4212ff:	cmp    rcx,rdx
  421302:	mov    r13,QWORD PTR [rsp+0x40]
  421307:	mov    r12,QWORD PTR [rsp+0x28]
  42130c:	jne    421378 <__flatcc_fb_parse@@Base+0x4598>
  42130e:	lea    ecx,[r10+r10*1]
  421312:	test   r10d,r10d
  421315:	mov    edx,0x400
  42131a:	cmove  ecx,edx
  42131d:	mov    rbp,QWORD PTR [rsp+0x30]
  421322:	mov    DWORD PTR [rbp+0x0],ecx
  421325:	movsxd rcx,ecx
  421328:	shl    rcx,0x3
  42132c:	lea    rsi,[rcx+rcx*4]
  421330:	mov    rdi,rax
  421333:	call   4061d0 <realloc@plt>
  421338:	mov    rcx,QWORD PTR [rsp+0x10]
  42133d:	mov    QWORD PTR [rcx],rax
  421340:	test   rax,rax
  421343:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  421349:	movsxd rcx,DWORD PTR [rbp+0x0]
  42134d:	lea    rcx,[rcx+rcx*4]
  421351:	lea    rcx,[rax+rcx*8]
  421355:	mov    rdx,QWORD PTR [rsp]
  421359:	mov    QWORD PTR [rdx],rcx
  42135c:	lea    rcx,[rax+rbx*8]
  421360:	mov    rsi,QWORD PTR [rsp+0x20]
  421365:	mov    QWORD PTR [rsi],rcx
  421368:	mov    rax,QWORD PTR [rsp+0x8]
  42136d:	mov    r9,QWORD PTR [rax]
  421370:	mov    r11,QWORD PTR [rsp+0x18]
  421375:	mov    r8,QWORD PTR [r11]
  421378:	mov    QWORD PTR [rcx+0x20],0x17
  421380:	mov    QWORD PTR [rcx],r14
  421383:	mov    QWORD PTR [rcx+0x8],0x0
  42138b:	mov    QWORD PTR [rcx+0x10],r9
  42138f:	lea    rax,[r14+0x1]
  421393:	sub    rax,r8
  421396:	mov    QWORD PTR [rcx+0x18],rax
  42139a:	add    rcx,0x28
  42139e:	mov    QWORD PTR [rsi],rcx
  4213a1:	jmp    421a71 <__flatcc_fb_parse@@Base+0x4c91>
  4213a6:	lea    r15,[r14+0x2]
  4213aa:	cmp    r15,r13
  4213ad:	je     421d8e <__flatcc_fb_parse@@Base+0x4fae>
  4213b3:	cmp    BYTE PTR [r15],0x3d
  4213b7:	jne    421d8e <__flatcc_fb_parse@@Base+0x4fae>
  4213bd:	mov    rdi,QWORD PTR [rbp+0x0]
  4213c1:	movsxd rcx,DWORD PTR [r10]
  4213c4:	lea    rbx,[rcx+rcx*4]
  4213c8:	lea    rdx,[rdi+rbx*8]
  4213cc:	mov    QWORD PTR [r9],rdx
  4213cf:	mov    rax,QWORD PTR [rsi]
  4213d2:	cmp    rax,rdx
  4213d5:	jne    421439 <__flatcc_fb_parse@@Base+0x4659>
  4213d7:	lea    eax,[rcx+rcx*1]
  4213da:	test   ecx,ecx
  4213dc:	mov    ecx,0x400
  4213e1:	cmove  eax,ecx
  4213e4:	mov    DWORD PTR [r10],eax
  4213e7:	cdqe   
  4213e9:	shl    rax,0x3
  4213ed:	lea    rsi,[rax+rax*4]
  4213f1:	mov    r15,rbp
  4213f4:	mov    rbp,r10
  4213f7:	call   4061d0 <realloc@plt>
  4213fc:	mov    QWORD PTR [r15],rax
  4213ff:	test   rax,rax
  421402:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  421408:	movsxd rcx,DWORD PTR [rbp+0x0]
  42140c:	lea    rcx,[rcx+rcx*4]
  421410:	lea    rcx,[rax+rcx*8]
  421414:	mov    r9,QWORD PTR [rsp]
  421418:	mov    QWORD PTR [r9],rcx
  42141b:	lea    rax,[rax+rbx*8]
  42141f:	mov    rsi,QWORD PTR [rsp+0x20]
  421424:	mov    QWORD PTR [rsi],rax
  421427:	mov    r11,QWORD PTR [rsp+0x18]
  42142c:	mov    r8,QWORD PTR [rsp+0x8]
  421431:	mov    r10,rbp
  421434:	mov    rbp,QWORD PTR [rsp+0x10]
  421439:	lea    r15,[r14+0x3]
  42143d:	mov    QWORD PTR [rax+0x20],0x3d3a3a
  421445:	jmp    422ded <__flatcc_fb_parse@@Base+0x600d>
  42144a:	mov    rdi,QWORD PTR [rbp+0x0]
  42144e:	movsxd rcx,DWORD PTR [r10]
  421451:	lea    rbx,[rcx+rcx*4]
  421455:	lea    rdx,[rdi+rbx*8]
  421459:	mov    QWORD PTR [r9],rdx
  42145c:	mov    rax,QWORD PTR [rsi]
  42145f:	cmp    rax,rdx
  421462:	jne    4214c6 <__flatcc_fb_parse@@Base+0x46e6>
  421464:	lea    eax,[rcx+rcx*1]
  421467:	test   ecx,ecx
  421469:	mov    ecx,0x400
  42146e:	cmove  eax,ecx
  421471:	mov    DWORD PTR [r10],eax
  421474:	cdqe   
  421476:	shl    rax,0x3
  42147a:	lea    rsi,[rax+rax*4]
  42147e:	mov    r15,rbp
  421481:	mov    rbp,r10
  421484:	call   4061d0 <realloc@plt>
  421489:	mov    QWORD PTR [r15],rax
  42148c:	test   rax,rax
  42148f:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  421495:	movsxd rcx,DWORD PTR [rbp+0x0]
  421499:	lea    rcx,[rcx+rcx*4]
  42149d:	lea    rcx,[rax+rcx*8]
  4214a1:	mov    r9,QWORD PTR [rsp]
  4214a5:	mov    QWORD PTR [r9],rcx
  4214a8:	lea    rax,[rax+rbx*8]
  4214ac:	mov    rsi,QWORD PTR [rsp+0x20]
  4214b1:	mov    QWORD PTR [rsi],rax
  4214b4:	mov    r11,QWORD PTR [rsp+0x18]
  4214b9:	mov    r8,QWORD PTR [rsp+0x8]
  4214be:	mov    r10,rbp
  4214c1:	mov    rbp,QWORD PTR [rsp+0x10]
  4214c6:	lea    r15,[r14+0x2]
  4214ca:	mov    QWORD PTR [rax+0x20],0x2b2b
  4214d2:	jmp    41f8bf <__flatcc_fb_parse@@Base+0x2adf>
  4214d7:	lea    r15,[r14+0x2]
  4214db:	cmp    r15,r13
  4214de:	je     422087 <__flatcc_fb_parse@@Base+0x52a7>
  4214e4:	movsx  eax,BYTE PTR [r15]
  4214e8:	cmp    eax,0x3e
  4214eb:	je     422af2 <__flatcc_fb_parse@@Base+0x5d12>
  4214f1:	cmp    eax,0x3d
  4214f4:	jne    422087 <__flatcc_fb_parse@@Base+0x52a7>
  4214fa:	mov    rdi,QWORD PTR [rbp+0x0]
  4214fe:	movsxd rcx,DWORD PTR [r10]
  421501:	lea    rbx,[rcx+rcx*4]
  421505:	lea    rdx,[rdi+rbx*8]
  421509:	mov    QWORD PTR [r9],rdx
  42150c:	mov    rax,QWORD PTR [rsi]
  42150f:	cmp    rax,rdx
  421512:	jne    421576 <__flatcc_fb_parse@@Base+0x4796>
  421514:	lea    eax,[rcx+rcx*1]
  421517:	test   ecx,ecx
  421519:	mov    ecx,0x400
  42151e:	cmove  eax,ecx
  421521:	mov    DWORD PTR [r10],eax
  421524:	cdqe   
  421526:	shl    rax,0x3
  42152a:	lea    rsi,[rax+rax*4]
  42152e:	mov    r15,rbp
  421531:	mov    rbp,r10
  421534:	call   4061d0 <realloc@plt>
  421539:	mov    QWORD PTR [r15],rax
  42153c:	test   rax,rax
  42153f:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  421545:	movsxd rcx,DWORD PTR [rbp+0x0]
  421549:	lea    rcx,[rcx+rcx*4]
  42154d:	lea    rcx,[rax+rcx*8]
  421551:	mov    r9,QWORD PTR [rsp]
  421555:	mov    QWORD PTR [r9],rcx
  421558:	lea    rax,[rax+rbx*8]
  42155c:	mov    rsi,QWORD PTR [rsp+0x20]
  421561:	mov    QWORD PTR [rsi],rax
  421564:	mov    r11,QWORD PTR [rsp+0x18]
  421569:	mov    r8,QWORD PTR [rsp+0x8]
  42156e:	mov    r10,rbp
  421571:	mov    rbp,QWORD PTR [rsp+0x10]
  421576:	lea    r15,[r14+0x3]
  42157a:	mov    QWORD PTR [rax+0x20],0x3d3e3e
  421582:	jmp    422ded <__flatcc_fb_parse@@Base+0x600d>
  421587:	mov    rdi,QWORD PTR [rbp+0x0]
  42158b:	movsxd rcx,DWORD PTR [r10]
  42158e:	lea    rbx,[rcx+rcx*4]
  421592:	lea    rdx,[rdi+rbx*8]
  421596:	mov    QWORD PTR [r9],rdx
  421599:	mov    rax,QWORD PTR [rsi]
  42159c:	cmp    rax,rdx
  42159f:	jne    421603 <__flatcc_fb_parse@@Base+0x4823>
  4215a1:	lea    eax,[rcx+rcx*1]
  4215a4:	test   ecx,ecx
  4215a6:	mov    ecx,0x400
  4215ab:	cmove  eax,ecx
  4215ae:	mov    DWORD PTR [r10],eax
  4215b1:	cdqe   
  4215b3:	shl    rax,0x3
  4215b7:	lea    rsi,[rax+rax*4]
  4215bb:	mov    r15,rbp
  4215be:	mov    rbp,r10
  4215c1:	call   4061d0 <realloc@plt>
  4215c6:	mov    QWORD PTR [r15],rax
  4215c9:	test   rax,rax
  4215cc:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  4215d2:	movsxd rcx,DWORD PTR [rbp+0x0]
  4215d6:	lea    rcx,[rcx+rcx*4]
  4215da:	lea    rcx,[rax+rcx*8]
  4215de:	mov    r9,QWORD PTR [rsp]
  4215e2:	mov    QWORD PTR [r9],rcx
  4215e5:	lea    rax,[rax+rbx*8]
  4215e9:	mov    rsi,QWORD PTR [rsp+0x20]
  4215ee:	mov    QWORD PTR [rsi],rax
  4215f1:	mov    r11,QWORD PTR [rsp+0x18]
  4215f6:	mov    r8,QWORD PTR [rsp+0x8]
  4215fb:	mov    r10,rbp
  4215fe:	mov    rbp,QWORD PTR [rsp+0x10]
  421603:	lea    r15,[r14+0x2]
  421607:	mov    QWORD PTR [rax+0x20],0x2626
  42160f:	mov    QWORD PTR [rax],r14
  421612:	mov    QWORD PTR [rax+0x8],0x2
  42161a:	mov    rcx,QWORD PTR [r8]
  42161d:	mov    QWORD PTR [rax+0x10],rcx
  421621:	lea    rcx,[r14+0x1]
  421625:	sub    rcx,QWORD PTR [r11]
  421628:	mov    QWORD PTR [rax+0x18],rcx
  42162c:	add    rax,0x28
  421630:	mov    QWORD PTR [rsi],rax
  421633:	mov    rdi,QWORD PTR [rbp+0x0]
  421637:	movsxd rcx,DWORD PTR [r10]
  42163a:	lea    rbx,[rcx+rcx*4]
  42163e:	lea    rdx,[rdi+rbx*8]
  421642:	mov    QWORD PTR [r9],rdx
  421645:	mov    rax,QWORD PTR [rsi]
  421648:	cmp    rax,rdx
  42164b:	jne    4216b5 <__flatcc_fb_parse@@Base+0x48d5>
  42164d:	lea    eax,[rcx+rcx*1]
  421650:	test   ecx,ecx
  421652:	mov    ecx,0x400
  421657:	cmove  eax,ecx
  42165a:	mov    DWORD PTR [r10],eax
  42165d:	cdqe   
  42165f:	shl    rax,0x3
  421663:	lea    rsi,[rax+rax*4]
  421667:	mov    r12,rbp
  42166a:	mov    rbp,r10
  42166d:	call   4061d0 <realloc@plt>
  421672:	mov    QWORD PTR [r12],rax
  421676:	test   rax,rax
  421679:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  42167f:	movsxd rcx,DWORD PTR [rbp+0x0]
  421683:	lea    rcx,[rcx+rcx*4]
  421687:	lea    rcx,[rax+rcx*8]
  42168b:	mov    r9,QWORD PTR [rsp]
  42168f:	mov    QWORD PTR [r9],rcx
  421692:	lea    rax,[rax+rbx*8]
  421696:	mov    rsi,QWORD PTR [rsp+0x20]
  42169b:	mov    QWORD PTR [rsi],rax
  42169e:	mov    r11,QWORD PTR [rsp+0x18]
  4216a3:	mov    r8,QWORD PTR [rsp+0x8]
  4216a8:	mov    r10,rbp
  4216ab:	mov    rbp,QWORD PTR [rsp+0x10]
  4216b0:	mov    r12,QWORD PTR [rsp+0x28]
  4216b5:	mov    QWORD PTR [rax+0x20],0x26
  4216bd:	jmp    421f55 <__flatcc_fb_parse@@Base+0x5175>
  4216c2:	mov    rdi,QWORD PTR [rbp+0x0]
  4216c6:	movsxd rcx,DWORD PTR [r10]
  4216c9:	lea    rbx,[rcx+rcx*4]
  4216cd:	lea    rdx,[rdi+rbx*8]
  4216d1:	mov    QWORD PTR [r9],rdx
  4216d4:	mov    rax,QWORD PTR [rsi]
  4216d7:	cmp    rax,rdx
  4216da:	jne    42173e <__flatcc_fb_parse@@Base+0x495e>
  4216dc:	lea    eax,[rcx+rcx*1]
  4216df:	test   ecx,ecx
  4216e1:	mov    ecx,0x400
  4216e6:	cmove  eax,ecx
  4216e9:	mov    DWORD PTR [r10],eax
  4216ec:	cdqe   
  4216ee:	shl    rax,0x3
  4216f2:	lea    rsi,[rax+rax*4]
  4216f6:	mov    r15,rbp
  4216f9:	mov    rbp,r10
  4216fc:	call   4061d0 <realloc@plt>
  421701:	mov    QWORD PTR [r15],rax
  421704:	test   rax,rax
  421707:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  42170d:	movsxd rcx,DWORD PTR [rbp+0x0]
  421711:	lea    rcx,[rcx+rcx*4]
  421715:	lea    rcx,[rax+rcx*8]
  421719:	mov    r9,QWORD PTR [rsp]
  42171d:	mov    QWORD PTR [r9],rcx
  421720:	lea    rax,[rax+rbx*8]
  421724:	mov    rsi,QWORD PTR [rsp+0x20]
  421729:	mov    QWORD PTR [rsi],rax
  42172c:	mov    r11,QWORD PTR [rsp+0x18]
  421731:	mov    r8,QWORD PTR [rsp+0x8]
  421736:	mov    r10,rbp
  421739:	mov    rbp,QWORD PTR [rsp+0x10]
  42173e:	lea    r15,[r14+0x2]
  421742:	mov    QWORD PTR [rax+0x20],0x7c7c
  42174a:	mov    QWORD PTR [rax],r14
  42174d:	mov    QWORD PTR [rax+0x8],0x2
  421755:	mov    rcx,QWORD PTR [r8]
  421758:	mov    QWORD PTR [rax+0x10],rcx
  42175c:	lea    rcx,[r14+0x1]
  421760:	sub    rcx,QWORD PTR [r11]
  421763:	mov    QWORD PTR [rax+0x18],rcx
  421767:	add    rax,0x28
  42176b:	mov    QWORD PTR [rsi],rax
  42176e:	mov    rdi,QWORD PTR [rbp+0x0]
  421772:	movsxd rcx,DWORD PTR [r10]
  421775:	lea    rbx,[rcx+rcx*4]
  421779:	lea    rdx,[rdi+rbx*8]
  42177d:	mov    QWORD PTR [r9],rdx
  421780:	mov    rax,QWORD PTR [rsi]
  421783:	cmp    rax,rdx
  421786:	jne    4217f0 <__flatcc_fb_parse@@Base+0x4a10>
  421788:	lea    eax,[rcx+rcx*1]
  42178b:	test   ecx,ecx
  42178d:	mov    ecx,0x400
  421792:	cmove  eax,ecx
  421795:	mov    DWORD PTR [r10],eax
  421798:	cdqe   
  42179a:	shl    rax,0x3
  42179e:	lea    rsi,[rax+rax*4]
  4217a2:	mov    r12,rbp
  4217a5:	mov    rbp,r10
  4217a8:	call   4061d0 <realloc@plt>
  4217ad:	mov    QWORD PTR [r12],rax
  4217b1:	test   rax,rax
  4217b4:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  4217ba:	movsxd rcx,DWORD PTR [rbp+0x0]
  4217be:	lea    rcx,[rcx+rcx*4]
  4217c2:	lea    rcx,[rax+rcx*8]
  4217c6:	mov    r9,QWORD PTR [rsp]
  4217ca:	mov    QWORD PTR [r9],rcx
  4217cd:	lea    rax,[rax+rbx*8]
  4217d1:	mov    rsi,QWORD PTR [rsp+0x20]
  4217d6:	mov    QWORD PTR [rsi],rax
  4217d9:	mov    r11,QWORD PTR [rsp+0x18]
  4217de:	mov    r8,QWORD PTR [rsp+0x8]
  4217e3:	mov    r10,rbp
  4217e6:	mov    rbp,QWORD PTR [rsp+0x10]
  4217eb:	mov    r12,QWORD PTR [rsp+0x28]
  4217f0:	mov    QWORD PTR [rax+0x20],0x7c
  4217f8:	jmp    421f55 <__flatcc_fb_parse@@Base+0x5175>
  4217fd:	mov    rdi,QWORD PTR [rbp+0x0]
  421801:	movsxd rcx,DWORD PTR [r10]
  421804:	lea    rbx,[rcx+rcx*4]
  421808:	lea    rdx,[rdi+rbx*8]
  42180c:	mov    QWORD PTR [r9],rdx
  42180f:	mov    rax,QWORD PTR [rsi]
  421812:	cmp    rax,rdx
  421815:	jne    42187f <__flatcc_fb_parse@@Base+0x4a9f>
  421817:	lea    eax,[rcx+rcx*1]
  42181a:	test   ecx,ecx
  42181c:	mov    ecx,0x400
  421821:	cmove  eax,ecx
  421824:	mov    DWORD PTR [r10],eax
  421827:	cdqe   
  421829:	shl    rax,0x3
  42182d:	lea    rsi,[rax+rax*4]
  421831:	mov    r12,rbp
  421834:	mov    rbp,r10
  421837:	call   4061d0 <realloc@plt>
  42183c:	mov    QWORD PTR [r12],rax
  421840:	test   rax,rax
  421843:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  421849:	movsxd rcx,DWORD PTR [rbp+0x0]
  42184d:	lea    rcx,[rcx+rcx*4]
  421851:	lea    rcx,[rax+rcx*8]
  421855:	mov    r9,QWORD PTR [rsp]
  421859:	mov    QWORD PTR [r9],rcx
  42185c:	lea    rax,[rax+rbx*8]
  421860:	mov    rsi,QWORD PTR [rsp+0x20]
  421865:	mov    QWORD PTR [rsi],rax
  421868:	mov    r11,QWORD PTR [rsp+0x18]
  42186d:	mov    r8,QWORD PTR [rsp+0x8]
  421872:	mov    r10,rbp
  421875:	mov    rbp,QWORD PTR [rsp+0x10]
  42187a:	mov    r12,QWORD PTR [rsp+0x28]
  42187f:	mov    QWORD PTR [rax+0x20],0x2a2a
  421887:	jmp    41f65b <__flatcc_fb_parse@@Base+0x287b>
  42188c:	lea    r15,[r14+0x2]
  421890:	cmp    r15,r13
  421893:	je     421e1d <__flatcc_fb_parse@@Base+0x503d>
  421899:	cmp    BYTE PTR [r15],0x3d
  42189d:	jne    421e1d <__flatcc_fb_parse@@Base+0x503d>
  4218a3:	mov    rdi,QWORD PTR [rbp+0x0]
  4218a7:	movsxd rcx,DWORD PTR [r10]
  4218aa:	lea    rbx,[rcx+rcx*4]
  4218ae:	lea    rdx,[rdi+rbx*8]
  4218b2:	mov    QWORD PTR [r9],rdx
  4218b5:	mov    rax,QWORD PTR [rsi]
  4218b8:	cmp    rax,rdx
  4218bb:	jne    42191f <__flatcc_fb_parse@@Base+0x4b3f>
  4218bd:	lea    eax,[rcx+rcx*1]
  4218c0:	test   ecx,ecx
  4218c2:	mov    ecx,0x400
  4218c7:	cmove  eax,ecx
  4218ca:	mov    DWORD PTR [r10],eax
  4218cd:	cdqe   
  4218cf:	shl    rax,0x3
  4218d3:	lea    rsi,[rax+rax*4]
  4218d7:	mov    r15,rbp
  4218da:	mov    rbp,r10
  4218dd:	call   4061d0 <realloc@plt>
  4218e2:	mov    QWORD PTR [r15],rax
  4218e5:	test   rax,rax
  4218e8:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  4218ee:	movsxd rcx,DWORD PTR [rbp+0x0]
  4218f2:	lea    rcx,[rcx+rcx*4]
  4218f6:	lea    rcx,[rax+rcx*8]
  4218fa:	mov    r9,QWORD PTR [rsp]
  4218fe:	mov    QWORD PTR [r9],rcx
  421901:	lea    rax,[rax+rbx*8]
  421905:	mov    rsi,QWORD PTR [rsp+0x20]
  42190a:	mov    QWORD PTR [rsi],rax
  42190d:	mov    r11,QWORD PTR [rsp+0x18]
  421912:	mov    r8,QWORD PTR [rsp+0x8]
  421917:	mov    r10,rbp
  42191a:	mov    rbp,QWORD PTR [rsp+0x10]
  42191f:	lea    r15,[r14+0x3]
  421923:	mov    QWORD PTR [rax+0x20],0x3d3d3d
  42192b:	jmp    422ded <__flatcc_fb_parse@@Base+0x600d>
  421930:	mov    rdi,QWORD PTR [rbp+0x0]
  421934:	movsxd rcx,DWORD PTR [r10]
  421937:	lea    rbx,[rcx+rcx*4]
  42193b:	lea    rdx,[rdi+rbx*8]
  42193f:	mov    QWORD PTR [r9],rdx
  421942:	mov    rax,QWORD PTR [rsi]
  421945:	cmp    rax,rdx
  421948:	jne    4219b2 <__flatcc_fb_parse@@Base+0x4bd2>
  42194a:	lea    eax,[rcx+rcx*1]
  42194d:	test   ecx,ecx
  42194f:	mov    ecx,0x400
  421954:	cmove  eax,ecx
  421957:	mov    DWORD PTR [r10],eax
  42195a:	cdqe   
  42195c:	shl    rax,0x3
  421960:	lea    rsi,[rax+rax*4]
  421964:	mov    r12,rbp
  421967:	mov    rbp,r10
  42196a:	call   4061d0 <realloc@plt>
  42196f:	mov    QWORD PTR [r12],rax
  421973:	test   rax,rax
  421976:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  42197c:	movsxd rcx,DWORD PTR [rbp+0x0]
  421980:	lea    rcx,[rcx+rcx*4]
  421984:	lea    rcx,[rax+rcx*8]
  421988:	mov    r9,QWORD PTR [rsp]
  42198c:	mov    QWORD PTR [r9],rcx
  42198f:	lea    rax,[rax+rbx*8]
  421993:	mov    rsi,QWORD PTR [rsp+0x20]
  421998:	mov    QWORD PTR [rsi],rax
  42199b:	mov    r11,QWORD PTR [rsp+0x18]
  4219a0:	mov    r8,QWORD PTR [rsp+0x8]
  4219a5:	mov    r10,rbp
  4219a8:	mov    rbp,QWORD PTR [rsp+0x10]
  4219ad:	mov    r12,QWORD PTR [rsp+0x28]
  4219b2:	mov    QWORD PTR [rax+0x20],0x5
  4219ba:	jmp    41f65b <__flatcc_fb_parse@@Base+0x287b>
  4219bf:	movsxd rdx,r10d
  4219c2:	lea    rbx,[rdx+rdx*4]
  4219c6:	lea    rdx,[rax+rbx*8]
  4219ca:	mov    rdi,QWORD PTR [rsp]
  4219ce:	mov    QWORD PTR [rdi],rdx
  4219d1:	cmp    rcx,rdx
  4219d4:	mov    r13,QWORD PTR [rsp+0x40]
  4219d9:	jne    421a45 <__flatcc_fb_parse@@Base+0x4c65>
  4219db:	lea    ecx,[r10+r10*1]
  4219df:	test   r10d,r10d
  4219e2:	mov    edx,0x400
  4219e7:	cmove  ecx,edx
  4219ea:	mov    rbp,QWORD PTR [rsp+0x30]
  4219ef:	mov    DWORD PTR [rbp+0x0],ecx
  4219f2:	movsxd rcx,ecx
  4219f5:	shl    rcx,0x3
  4219f9:	lea    rsi,[rcx+rcx*4]
  4219fd:	mov    rdi,rax
  421a00:	call   4061d0 <realloc@plt>
  421a05:	mov    rcx,QWORD PTR [rsp+0x10]
  421a0a:	mov    QWORD PTR [rcx],rax
  421a0d:	test   rax,rax
  421a10:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  421a16:	movsxd rcx,DWORD PTR [rbp+0x0]
  421a1a:	lea    rcx,[rcx+rcx*4]
  421a1e:	lea    rcx,[rax+rcx*8]
  421a22:	mov    rdx,QWORD PTR [rsp]
  421a26:	mov    QWORD PTR [rdx],rcx
  421a29:	lea    rcx,[rax+rbx*8]
  421a2d:	mov    rsi,QWORD PTR [rsp+0x20]
  421a32:	mov    QWORD PTR [rsi],rcx
  421a35:	mov    rax,QWORD PTR [rsp+0x8]
  421a3a:	mov    r9,QWORD PTR [rax]
  421a3d:	mov    r11,QWORD PTR [rsp+0x18]
  421a42:	mov    r8,QWORD PTR [r11]
  421a45:	mov    QWORD PTR [rcx+0x20],0x17
  421a4d:	mov    QWORD PTR [rcx],r15
  421a50:	mov    QWORD PTR [rcx+0x8],0x0
  421a58:	mov    QWORD PTR [rcx+0x10],r9
  421a5c:	lea    rax,[r15+0x1]
  421a60:	sub    rax,r8
  421a63:	mov    QWORD PTR [rcx+0x18],rax
  421a67:	add    rcx,0x28
  421a6b:	mov    QWORD PTR [rsi],rcx
  421a6e:	mov    r14,r15
  421a71:	mov    r8,QWORD PTR [rsp+0x8]
  421a76:	mov    r9,QWORD PTR [rsp]
  421a7a:	mov    r10,QWORD PTR [rsp+0x30]
  421a7f:	mov    rbp,QWORD PTR [rsp+0x10]
  421a84:	jmp    422072 <__flatcc_fb_parse@@Base+0x5292>
  421a89:	mov    rdi,QWORD PTR [rbp+0x0]
  421a8d:	movsxd rcx,DWORD PTR [r10]
  421a90:	lea    rbx,[rcx+rcx*4]
  421a94:	lea    rdx,[rdi+rbx*8]
  421a98:	mov    QWORD PTR [r9],rdx
  421a9b:	mov    rax,QWORD PTR [rsi]
  421a9e:	cmp    rax,rdx
  421aa1:	jne    421b05 <__flatcc_fb_parse@@Base+0x4d25>
  421aa3:	lea    eax,[rcx+rcx*1]
  421aa6:	test   ecx,ecx
  421aa8:	mov    ecx,0x400
  421aad:	cmove  eax,ecx
  421ab0:	mov    DWORD PTR [r10],eax
  421ab3:	cdqe   
  421ab5:	shl    rax,0x3
  421ab9:	lea    rsi,[rax+rax*4]
  421abd:	mov    r15,rbp
  421ac0:	mov    rbp,r10
  421ac3:	call   4061d0 <realloc@plt>
  421ac8:	mov    QWORD PTR [r15],rax
  421acb:	test   rax,rax
  421ace:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  421ad4:	movsxd rcx,DWORD PTR [rbp+0x0]
  421ad8:	lea    rcx,[rcx+rcx*4]
  421adc:	lea    rcx,[rax+rcx*8]
  421ae0:	mov    r9,QWORD PTR [rsp]
  421ae4:	mov    QWORD PTR [r9],rcx
  421ae7:	lea    rax,[rax+rbx*8]
  421aeb:	mov    rsi,QWORD PTR [rsp+0x20]
  421af0:	mov    QWORD PTR [rsi],rax
  421af3:	mov    r11,QWORD PTR [rsp+0x18]
  421af8:	mov    r8,QWORD PTR [rsp+0x8]
  421afd:	mov    r10,rbp
  421b00:	mov    rbp,QWORD PTR [rsp+0x10]
  421b05:	lea    r15,[r14+0x2]
  421b09:	mov    QWORD PTR [rax+0x20],0x3d3c
  421b11:	jmp    41f8bf <__flatcc_fb_parse@@Base+0x2adf>
  421b16:	lea    r15,[r14+0x2]
  421b1a:	cmp    r15,r13
  421b1d:	je     422252 <__flatcc_fb_parse@@Base+0x5472>
  421b23:	movsx  eax,BYTE PTR [r15]
  421b27:	cmp    eax,0x3c
  421b2a:	je     422c25 <__flatcc_fb_parse@@Base+0x5e45>
  421b30:	cmp    eax,0x3d
  421b33:	jne    422252 <__flatcc_fb_parse@@Base+0x5472>
  421b39:	mov    rdi,QWORD PTR [rbp+0x0]
  421b3d:	movsxd rcx,DWORD PTR [r10]
  421b40:	lea    rbx,[rcx+rcx*4]
  421b44:	lea    rdx,[rdi+rbx*8]
  421b48:	mov    QWORD PTR [r9],rdx
  421b4b:	mov    rax,QWORD PTR [rsi]
  421b4e:	cmp    rax,rdx
  421b51:	jne    421bb5 <__flatcc_fb_parse@@Base+0x4dd5>
  421b53:	lea    eax,[rcx+rcx*1]
  421b56:	test   ecx,ecx
  421b58:	mov    ecx,0x400
  421b5d:	cmove  eax,ecx
  421b60:	mov    DWORD PTR [r10],eax
  421b63:	cdqe   
  421b65:	shl    rax,0x3
  421b69:	lea    rsi,[rax+rax*4]
  421b6d:	mov    r15,rbp
  421b70:	mov    rbp,r10
  421b73:	call   4061d0 <realloc@plt>
  421b78:	mov    QWORD PTR [r15],rax
  421b7b:	test   rax,rax
  421b7e:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  421b84:	movsxd rcx,DWORD PTR [rbp+0x0]
  421b88:	lea    rcx,[rcx+rcx*4]
  421b8c:	lea    rcx,[rax+rcx*8]
  421b90:	mov    r9,QWORD PTR [rsp]
  421b94:	mov    QWORD PTR [r9],rcx
  421b97:	lea    rax,[rax+rbx*8]
  421b9b:	mov    rsi,QWORD PTR [rsp+0x20]
  421ba0:	mov    QWORD PTR [rsi],rax
  421ba3:	mov    r11,QWORD PTR [rsp+0x18]
  421ba8:	mov    r8,QWORD PTR [rsp+0x8]
  421bad:	mov    r10,rbp
  421bb0:	mov    rbp,QWORD PTR [rsp+0x10]
  421bb5:	lea    r15,[r14+0x3]
  421bb9:	mov    QWORD PTR [rax+0x20],0x3d3c3c
  421bc1:	jmp    422ded <__flatcc_fb_parse@@Base+0x600d>
  421bc6:	lea    rbp,[r14+0x2]
  421bca:	cmp    rbp,r13
  421bcd:	je     422709 <__flatcc_fb_parse@@Base+0x5929>
  421bd3:	mov    al,BYTE PTR [rbp+0x0]
  421bd6:	cmp    al,0x2a
  421bd8:	sete   cl
  421bdb:	cmp    al,0x21
  421bdd:	sete   al
  421be0:	or     al,cl
  421be2:	jmp    42270b <__flatcc_fb_parse@@Base+0x592b>
  421be7:	mov    rdi,QWORD PTR [rbp+0x0]
  421beb:	movsxd rcx,DWORD PTR [r10]
  421bee:	lea    rbx,[rcx+rcx*4]
  421bf2:	lea    rdx,[rdi+rbx*8]
  421bf6:	mov    QWORD PTR [r9],rdx
  421bf9:	mov    rax,QWORD PTR [rsi]
  421bfc:	cmp    rax,rdx
  421bff:	jne    421c63 <__flatcc_fb_parse@@Base+0x4e83>
  421c01:	lea    eax,[rcx+rcx*1]
  421c04:	test   ecx,ecx
  421c06:	mov    ecx,0x400
  421c0b:	cmove  eax,ecx
  421c0e:	mov    DWORD PTR [r10],eax
  421c11:	cdqe   
  421c13:	shl    rax,0x3
  421c17:	lea    rsi,[rax+rax*4]
  421c1b:	mov    r15,rbp
  421c1e:	mov    rbp,r10
  421c21:	call   4061d0 <realloc@plt>
  421c26:	mov    QWORD PTR [r15],rax
  421c29:	test   rax,rax
  421c2c:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  421c32:	movsxd rcx,DWORD PTR [rbp+0x0]
  421c36:	lea    rcx,[rcx+rcx*4]
  421c3a:	lea    rcx,[rax+rcx*8]
  421c3e:	mov    r9,QWORD PTR [rsp]
  421c42:	mov    QWORD PTR [r9],rcx
  421c45:	lea    rax,[rax+rbx*8]
  421c49:	mov    rsi,QWORD PTR [rsp+0x20]
  421c4e:	mov    QWORD PTR [rsi],rax
  421c51:	mov    r11,QWORD PTR [rsp+0x18]
  421c56:	mov    r8,QWORD PTR [rsp+0x8]
  421c5b:	mov    r10,rbp
  421c5e:	mov    rbp,QWORD PTR [rsp+0x10]
  421c63:	lea    r15,[r14+0x2]
  421c67:	mov    QWORD PTR [rax+0x20],0x3d2f
  421c6f:	jmp    41f8bf <__flatcc_fb_parse@@Base+0x2adf>
  421c74:	mov    rdi,QWORD PTR [rbp+0x0]
  421c78:	movsxd rcx,DWORD PTR [r10]
  421c7b:	lea    rbx,[rcx+rcx*4]
  421c7f:	lea    rdx,[rdi+rbx*8]
  421c83:	mov    QWORD PTR [r9],rdx
  421c86:	mov    rax,QWORD PTR [rsi]
  421c89:	cmp    rax,rdx
  421c8c:	jne    421cf0 <__flatcc_fb_parse@@Base+0x4f10>
  421c8e:	lea    eax,[rcx+rcx*1]
  421c91:	test   ecx,ecx
  421c93:	mov    ecx,0x400
  421c98:	cmove  eax,ecx
  421c9b:	mov    DWORD PTR [r10],eax
  421c9e:	cdqe   
  421ca0:	shl    rax,0x3
  421ca4:	lea    rsi,[rax+rax*4]
  421ca8:	mov    r15,rbp
  421cab:	mov    rbp,r10
  421cae:	call   4061d0 <realloc@plt>
  421cb3:	mov    QWORD PTR [r15],rax
  421cb6:	test   rax,rax
  421cb9:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  421cbf:	movsxd rcx,DWORD PTR [rbp+0x0]
  421cc3:	lea    rcx,[rcx+rcx*4]
  421cc7:	lea    rcx,[rax+rcx*8]
  421ccb:	mov    r9,QWORD PTR [rsp]
  421ccf:	mov    QWORD PTR [r9],rcx
  421cd2:	lea    rax,[rax+rbx*8]
  421cd6:	mov    rsi,QWORD PTR [rsp+0x20]
  421cdb:	mov    QWORD PTR [rsi],rax
  421cde:	mov    r11,QWORD PTR [rsp+0x18]
  421ce3:	mov    r8,QWORD PTR [rsp+0x8]
  421ce8:	mov    r10,rbp
  421ceb:	mov    rbp,QWORD PTR [rsp+0x10]
  421cf0:	lea    r15,[r14+0x2]
  421cf4:	mov    QWORD PTR [rax+0x20],0x2d2d
  421cfc:	jmp    41f8bf <__flatcc_fb_parse@@Base+0x2adf>
  421d01:	mov    rdi,QWORD PTR [rbp+0x0]
  421d05:	movsxd rcx,DWORD PTR [r10]
  421d08:	lea    rbx,[rcx+rcx*4]
  421d0c:	lea    rdx,[rdi+rbx*8]
  421d10:	mov    QWORD PTR [r9],rdx
  421d13:	mov    rax,QWORD PTR [rsi]
  421d16:	cmp    rax,rdx
  421d19:	jne    421d7d <__flatcc_fb_parse@@Base+0x4f9d>
  421d1b:	lea    eax,[rcx+rcx*1]
  421d1e:	test   ecx,ecx
  421d20:	mov    ecx,0x400
  421d25:	cmove  eax,ecx
  421d28:	mov    DWORD PTR [r10],eax
  421d2b:	cdqe   
  421d2d:	shl    rax,0x3
  421d31:	lea    rsi,[rax+rax*4]
  421d35:	mov    r15,rbp
  421d38:	mov    rbp,r10
  421d3b:	call   4061d0 <realloc@plt>
  421d40:	mov    QWORD PTR [r15],rax
  421d43:	test   rax,rax
  421d46:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  421d4c:	movsxd rcx,DWORD PTR [rbp+0x0]
  421d50:	lea    rcx,[rcx+rcx*4]
  421d54:	lea    rcx,[rax+rcx*8]
  421d58:	mov    r9,QWORD PTR [rsp]
  421d5c:	mov    QWORD PTR [r9],rcx
  421d5f:	lea    rax,[rax+rbx*8]
  421d63:	mov    rsi,QWORD PTR [rsp+0x20]
  421d68:	mov    QWORD PTR [rsi],rax
  421d6b:	mov    r11,QWORD PTR [rsp+0x18]
  421d70:	mov    r8,QWORD PTR [rsp+0x8]
  421d75:	mov    r10,rbp
  421d78:	mov    rbp,QWORD PTR [rsp+0x10]
  421d7d:	lea    r15,[r14+0x2]
  421d81:	mov    QWORD PTR [rax+0x20],0x3e2d
  421d89:	jmp    41f8bf <__flatcc_fb_parse@@Base+0x2adf>
  421d8e:	mov    rdi,QWORD PTR [rbp+0x0]
  421d92:	movsxd rcx,DWORD PTR [r10]
  421d95:	lea    rbx,[rcx+rcx*4]
  421d99:	lea    rdx,[rdi+rbx*8]
  421d9d:	mov    QWORD PTR [r9],rdx
  421da0:	mov    rax,QWORD PTR [rsi]
  421da3:	cmp    rax,rdx
  421da6:	jne    421e10 <__flatcc_fb_parse@@Base+0x5030>
  421da8:	lea    eax,[rcx+rcx*1]
  421dab:	test   ecx,ecx
  421dad:	mov    ecx,0x400
  421db2:	cmove  eax,ecx
  421db5:	mov    DWORD PTR [r10],eax
  421db8:	cdqe   
  421dba:	shl    rax,0x3
  421dbe:	lea    rsi,[rax+rax*4]
  421dc2:	mov    r12,rbp
  421dc5:	mov    rbp,r10
  421dc8:	call   4061d0 <realloc@plt>
  421dcd:	mov    QWORD PTR [r12],rax
  421dd1:	test   rax,rax
  421dd4:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  421dda:	movsxd rcx,DWORD PTR [rbp+0x0]
  421dde:	lea    rcx,[rcx+rcx*4]
  421de2:	lea    rcx,[rax+rcx*8]
  421de6:	mov    r9,QWORD PTR [rsp]
  421dea:	mov    QWORD PTR [r9],rcx
  421ded:	lea    rax,[rax+rbx*8]
  421df1:	mov    rsi,QWORD PTR [rsp+0x20]
  421df6:	mov    QWORD PTR [rsi],rax
  421df9:	mov    r11,QWORD PTR [rsp+0x18]
  421dfe:	mov    r8,QWORD PTR [rsp+0x8]
  421e03:	mov    r10,rbp
  421e06:	mov    rbp,QWORD PTR [rsp+0x10]
  421e0b:	mov    r12,QWORD PTR [rsp+0x28]
  421e10:	mov    QWORD PTR [rax+0x20],0x3a3a
  421e18:	jmp    41f8bf <__flatcc_fb_parse@@Base+0x2adf>
  421e1d:	mov    rdi,QWORD PTR [rbp+0x0]
  421e21:	movsxd rcx,DWORD PTR [r10]
  421e24:	lea    rbx,[rcx+rcx*4]
  421e28:	lea    rdx,[rdi+rbx*8]
  421e2c:	mov    QWORD PTR [r9],rdx
  421e2f:	mov    rax,QWORD PTR [rsi]
  421e32:	cmp    rax,rdx
  421e35:	jne    421e9f <__flatcc_fb_parse@@Base+0x50bf>
  421e37:	lea    eax,[rcx+rcx*1]
  421e3a:	test   ecx,ecx
  421e3c:	mov    ecx,0x400
  421e41:	cmove  eax,ecx
  421e44:	mov    DWORD PTR [r10],eax
  421e47:	cdqe   
  421e49:	shl    rax,0x3
  421e4d:	lea    rsi,[rax+rax*4]
  421e51:	mov    r12,rbp
  421e54:	mov    rbp,r10
  421e57:	call   4061d0 <realloc@plt>
  421e5c:	mov    QWORD PTR [r12],rax
  421e60:	test   rax,rax
  421e63:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  421e69:	movsxd rcx,DWORD PTR [rbp+0x0]
  421e6d:	lea    rcx,[rcx+rcx*4]
  421e71:	lea    rcx,[rax+rcx*8]
  421e75:	mov    r9,QWORD PTR [rsp]
  421e79:	mov    QWORD PTR [r9],rcx
  421e7c:	lea    rax,[rax+rbx*8]
  421e80:	mov    rsi,QWORD PTR [rsp+0x20]
  421e85:	mov    QWORD PTR [rsi],rax
  421e88:	mov    r11,QWORD PTR [rsp+0x18]
  421e8d:	mov    r8,QWORD PTR [rsp+0x8]
  421e92:	mov    r10,rbp
  421e95:	mov    rbp,QWORD PTR [rsp+0x10]
  421e9a:	mov    r12,QWORD PTR [rsp+0x28]
  421e9f:	mov    QWORD PTR [rax+0x20],0x3d3d
  421ea7:	mov    QWORD PTR [rax],r14
  421eaa:	mov    QWORD PTR [rax+0x8],0x2
  421eb2:	mov    rcx,QWORD PTR [r8]
  421eb5:	mov    QWORD PTR [rax+0x10],rcx
  421eb9:	lea    rcx,[r14+0x1]
  421ebd:	sub    rcx,QWORD PTR [r11]
  421ec0:	mov    QWORD PTR [rax+0x18],rcx
  421ec4:	add    rax,0x28
  421ec8:	mov    QWORD PTR [rsi],rax
  421ecb:	mov    rdi,QWORD PTR [rbp+0x0]
  421ecf:	movsxd rcx,DWORD PTR [r10]
  421ed2:	lea    rbx,[rcx+rcx*4]
  421ed6:	lea    rdx,[rdi+rbx*8]
  421eda:	mov    QWORD PTR [r9],rdx
  421edd:	mov    rax,QWORD PTR [rsi]
  421ee0:	cmp    rax,rdx
  421ee3:	jne    421f4d <__flatcc_fb_parse@@Base+0x516d>
  421ee5:	lea    eax,[rcx+rcx*1]
  421ee8:	test   ecx,ecx
  421eea:	mov    ecx,0x400
  421eef:	cmove  eax,ecx
  421ef2:	mov    DWORD PTR [r10],eax
  421ef5:	cdqe   
  421ef7:	shl    rax,0x3
  421efb:	lea    rsi,[rax+rax*4]
  421eff:	mov    r12,rbp
  421f02:	mov    rbp,r10
  421f05:	call   4061d0 <realloc@plt>
  421f0a:	mov    QWORD PTR [r12],rax
  421f0e:	test   rax,rax
  421f11:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  421f17:	movsxd rcx,DWORD PTR [rbp+0x0]
  421f1b:	lea    rcx,[rcx+rcx*4]
  421f1f:	lea    rcx,[rax+rcx*8]
  421f23:	mov    r9,QWORD PTR [rsp]
  421f27:	mov    QWORD PTR [r9],rcx
  421f2a:	lea    rax,[rax+rbx*8]
  421f2e:	mov    rsi,QWORD PTR [rsp+0x20]
  421f33:	mov    QWORD PTR [rsi],rax
  421f36:	mov    r11,QWORD PTR [rsp+0x18]
  421f3b:	mov    r8,QWORD PTR [rsp+0x8]
  421f40:	mov    r10,rbp
  421f43:	mov    rbp,QWORD PTR [rsp+0x10]
  421f48:	mov    r12,QWORD PTR [rsp+0x28]
  421f4d:	mov    QWORD PTR [rax+0x20],0x3d
  421f55:	mov    QWORD PTR [rax],r14
  421f58:	mov    rcx,r15
  421f5b:	sub    rcx,r14
  421f5e:	mov    QWORD PTR [rax+0x8],rcx
  421f62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421f6c:	nop    DWORD PTR [rax+0x0]
  421f70:	mov    rcx,QWORD PTR [r8]
  421f73:	mov    QWORD PTR [rax+0x10],rcx
  421f77:	add    r14,0x1
  421f7b:	sub    r14,QWORD PTR [r11]
  421f7e:	mov    QWORD PTR [rax+0x18],r14
  421f82:	add    rax,0x28
  421f86:	mov    QWORD PTR [rsi],rax
  421f89:	lea    rdx,[rip+0x26330]        # 4482c0 <fb_schema_table_deleted@@Base+0x390>
  421f90:	mov    r14,r15
  421f93:	cmp    r15,r13
  421f96:	jne    41f370 <__flatcc_fb_parse@@Base+0x2590>
  421f9c:	jmp    422e27 <__flatcc_fb_parse@@Base+0x6047>
  421fa1:	mov    r13,QWORD PTR [rsp+0x40]
  421fa6:	mov    r14,r13
  421fa9:	jmp    421fb2 <__flatcc_fb_parse@@Base+0x51d2>
  421fab:	add    rbp,0x1
  421faf:	mov    r14,rbp
  421fb2:	movsxd rdx,r10d
  421fb5:	lea    rbx,[rdx+rdx*4]
  421fb9:	lea    rdx,[rax+rbx*8]
  421fbd:	mov    rdi,QWORD PTR [rsp]
  421fc1:	mov    QWORD PTR [rdi],rdx
  421fc4:	cmp    rcx,rdx
  421fc7:	mov    rbp,QWORD PTR [rsp+0x10]
  421fcc:	jne    42203b <__flatcc_fb_parse@@Base+0x525b>
  421fce:	lea    ecx,[r10+r10*1]
  421fd2:	test   r10d,r10d
  421fd5:	mov    edx,0x400
  421fda:	cmove  ecx,edx
  421fdd:	mov    r15,rbp
  421fe0:	mov    rbp,QWORD PTR [rsp+0x30]
  421fe5:	mov    DWORD PTR [rbp+0x0],ecx
  421fe8:	movsxd rcx,ecx
  421feb:	shl    rcx,0x3
  421fef:	lea    rsi,[rcx+rcx*4]
  421ff3:	mov    rdi,rax
  421ff6:	call   4061d0 <realloc@plt>
  421ffb:	mov    QWORD PTR [r15],rax
  421ffe:	test   rax,rax
  422001:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  422007:	movsxd rcx,DWORD PTR [rbp+0x0]
  42200b:	lea    rcx,[rcx+rcx*4]
  42200f:	lea    rcx,[rax+rcx*8]
  422013:	mov    rdx,QWORD PTR [rsp]
  422017:	mov    QWORD PTR [rdx],rcx
  42201a:	lea    rcx,[rax+rbx*8]
  42201e:	mov    rsi,QWORD PTR [rsp+0x20]
  422023:	mov    QWORD PTR [rsi],rcx
  422026:	mov    rax,QWORD PTR [rsp+0x8]
  42202b:	mov    r9,QWORD PTR [rax]
  42202e:	mov    r11,QWORD PTR [rsp+0x18]
  422033:	mov    r8,QWORD PTR [r11]
  422036:	mov    rbp,QWORD PTR [rsp+0x10]
  42203b:	mov    QWORD PTR [rcx+0x20],0x17
  422043:	mov    QWORD PTR [rcx],r14
  422046:	mov    QWORD PTR [rcx+0x8],0x0
  42204e:	mov    QWORD PTR [rcx+0x10],r9
  422052:	lea    rax,[r14+0x1]
  422056:	sub    rax,r8
  422059:	mov    QWORD PTR [rcx+0x18],rax
  42205d:	add    rcx,0x28
  422061:	mov    QWORD PTR [rsi],rcx
  422064:	mov    r8,QWORD PTR [rsp+0x8]
  422069:	mov    r9,QWORD PTR [rsp]
  42206d:	mov    r10,QWORD PTR [rsp+0x30]
  422072:	lea    rdx,[rip+0x26247]        # 4482c0 <fb_schema_table_deleted@@Base+0x390>
  422079:	cmp    r14,r13
  42207c:	jne    41f370 <__flatcc_fb_parse@@Base+0x2590>
  422082:	jmp    422e27 <__flatcc_fb_parse@@Base+0x6047>
  422087:	mov    rdi,QWORD PTR [rbp+0x0]
  42208b:	movsxd rcx,DWORD PTR [r10]
  42208e:	lea    rbx,[rcx+rcx*4]
  422092:	lea    rdx,[rdi+rbx*8]
  422096:	mov    QWORD PTR [r9],rdx
  422099:	mov    rax,QWORD PTR [rsi]
  42209c:	cmp    rax,rdx
  42209f:	jne    422109 <__flatcc_fb_parse@@Base+0x5329>
  4220a1:	lea    eax,[rcx+rcx*1]
  4220a4:	test   ecx,ecx
  4220a6:	mov    ecx,0x400
  4220ab:	cmove  eax,ecx
  4220ae:	mov    DWORD PTR [r10],eax
  4220b1:	cdqe   
  4220b3:	shl    rax,0x3
  4220b7:	lea    rsi,[rax+rax*4]
  4220bb:	mov    r12,rbp
  4220be:	mov    rbp,r10
  4220c1:	call   4061d0 <realloc@plt>
  4220c6:	mov    QWORD PTR [r12],rax
  4220ca:	test   rax,rax
  4220cd:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  4220d3:	movsxd rcx,DWORD PTR [rbp+0x0]
  4220d7:	lea    rcx,[rcx+rcx*4]
  4220db:	lea    rcx,[rax+rcx*8]
  4220df:	mov    r9,QWORD PTR [rsp]
  4220e3:	mov    QWORD PTR [r9],rcx
  4220e6:	lea    rax,[rax+rbx*8]
  4220ea:	mov    rsi,QWORD PTR [rsp+0x20]
  4220ef:	mov    QWORD PTR [rsi],rax
  4220f2:	mov    r11,QWORD PTR [rsp+0x18]
  4220f7:	mov    r8,QWORD PTR [rsp+0x8]
  4220fc:	mov    r10,rbp
  4220ff:	mov    rbp,QWORD PTR [rsp+0x10]
  422104:	mov    r12,QWORD PTR [rsp+0x28]
  422109:	mov    QWORD PTR [rax+0x20],0x3e3e
  422111:	jmp    41f8bf <__flatcc_fb_parse@@Base+0x2adf>
  422116:	cmp    eax,0x2e
  422119:	jne    4221c3 <__flatcc_fb_parse@@Base+0x53e3>
  42211f:	lea    r15,[r14+0x2]
  422123:	cmp    r15,r13
  422126:	je     422b96 <__flatcc_fb_parse@@Base+0x5db6>
  42212c:	cmp    BYTE PTR [r15],0x2e
  422130:	jne    422b96 <__flatcc_fb_parse@@Base+0x5db6>
  422136:	mov    rdi,QWORD PTR [rbp+0x0]
  42213a:	movsxd rcx,DWORD PTR [r10]
  42213d:	lea    rbx,[rcx+rcx*4]
  422141:	lea    rdx,[rdi+rbx*8]
  422145:	mov    QWORD PTR [r9],rdx
  422148:	mov    rax,QWORD PTR [rsi]
  42214b:	cmp    rax,rdx
  42214e:	jne    4221b2 <__flatcc_fb_parse@@Base+0x53d2>
  422150:	lea    eax,[rcx+rcx*1]
  422153:	test   ecx,ecx
  422155:	mov    ecx,0x400
  42215a:	cmove  eax,ecx
  42215d:	mov    DWORD PTR [r10],eax
  422160:	cdqe   
  422162:	shl    rax,0x3
  422166:	lea    rsi,[rax+rax*4]
  42216a:	mov    r15,rbp
  42216d:	mov    rbp,r10
  422170:	call   4061d0 <realloc@plt>
  422175:	mov    QWORD PTR [r15],rax
  422178:	test   rax,rax
  42217b:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  422181:	movsxd rcx,DWORD PTR [rbp+0x0]
  422185:	lea    rcx,[rcx+rcx*4]
  422189:	lea    rcx,[rax+rcx*8]
  42218d:	mov    r9,QWORD PTR [rsp]
  422191:	mov    QWORD PTR [r9],rcx
  422194:	lea    rax,[rax+rbx*8]
  422198:	mov    rsi,QWORD PTR [rsp+0x20]
  42219d:	mov    QWORD PTR [rsi],rax
  4221a0:	mov    r11,QWORD PTR [rsp+0x18]
  4221a5:	mov    r8,QWORD PTR [rsp+0x8]
  4221aa:	mov    r10,rbp
  4221ad:	mov    rbp,QWORD PTR [rsp+0x10]
  4221b2:	lea    r15,[r14+0x3]
  4221b6:	mov    QWORD PTR [rax+0x20],0x2e2e2e
  4221be:	jmp    422ded <__flatcc_fb_parse@@Base+0x600d>
  4221c3:	mov    rdi,QWORD PTR [rbp+0x0]
  4221c7:	movsxd rcx,DWORD PTR [r10]
  4221ca:	lea    rbx,[rcx+rcx*4]
  4221ce:	lea    rdx,[rdi+rbx*8]
  4221d2:	mov    QWORD PTR [r9],rdx
  4221d5:	mov    rax,QWORD PTR [rsi]
  4221d8:	cmp    rax,rdx
  4221db:	jne    422245 <__flatcc_fb_parse@@Base+0x5465>
  4221dd:	lea    eax,[rcx+rcx*1]
  4221e0:	test   ecx,ecx
  4221e2:	mov    ecx,0x400
  4221e7:	cmove  eax,ecx
  4221ea:	mov    DWORD PTR [r10],eax
  4221ed:	cdqe   
  4221ef:	shl    rax,0x3
  4221f3:	lea    rsi,[rax+rax*4]
  4221f7:	mov    r12,rbp
  4221fa:	mov    rbp,r10
  4221fd:	call   4061d0 <realloc@plt>
  422202:	mov    QWORD PTR [r12],rax
  422206:	test   rax,rax
  422209:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  42220f:	movsxd rcx,DWORD PTR [rbp+0x0]
  422213:	lea    rcx,[rcx+rcx*4]
  422217:	lea    rcx,[rax+rcx*8]
  42221b:	mov    r9,QWORD PTR [rsp]
  42221f:	mov    QWORD PTR [r9],rcx
  422222:	lea    rax,[rax+rbx*8]
  422226:	mov    rsi,QWORD PTR [rsp+0x20]
  42222b:	mov    QWORD PTR [rsi],rax
  42222e:	mov    r11,QWORD PTR [rsp+0x18]
  422233:	mov    r8,QWORD PTR [rsp+0x8]
  422238:	mov    r10,rbp
  42223b:	mov    rbp,QWORD PTR [rsp+0x10]
  422240:	mov    r12,QWORD PTR [rsp+0x28]
  422245:	mov    QWORD PTR [rax+0x20],0x2e
  42224d:	jmp    41f65b <__flatcc_fb_parse@@Base+0x287b>
  422252:	mov    rdi,QWORD PTR [rbp+0x0]
  422256:	movsxd rcx,DWORD PTR [r10]
  422259:	lea    rbx,[rcx+rcx*4]
  42225d:	lea    rdx,[rdi+rbx*8]
  422261:	mov    QWORD PTR [r9],rdx
  422264:	mov    rax,QWORD PTR [rsi]
  422267:	cmp    rax,rdx
  42226a:	jne    4222d4 <__flatcc_fb_parse@@Base+0x54f4>
  42226c:	lea    eax,[rcx+rcx*1]
  42226f:	test   ecx,ecx
  422271:	mov    ecx,0x400
  422276:	cmove  eax,ecx
  422279:	mov    DWORD PTR [r10],eax
  42227c:	cdqe   
  42227e:	shl    rax,0x3
  422282:	lea    rsi,[rax+rax*4]
  422286:	mov    r12,rbp
  422289:	mov    rbp,r10
  42228c:	call   4061d0 <realloc@plt>
  422291:	mov    QWORD PTR [r12],rax
  422295:	test   rax,rax
  422298:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  42229e:	movsxd rcx,DWORD PTR [rbp+0x0]
  4222a2:	lea    rcx,[rcx+rcx*4]
  4222a6:	lea    rcx,[rax+rcx*8]
  4222aa:	mov    r9,QWORD PTR [rsp]
  4222ae:	mov    QWORD PTR [r9],rcx
  4222b1:	lea    rax,[rax+rbx*8]
  4222b5:	mov    rsi,QWORD PTR [rsp+0x20]
  4222ba:	mov    QWORD PTR [rsi],rax
  4222bd:	mov    r11,QWORD PTR [rsp+0x18]
  4222c2:	mov    r8,QWORD PTR [rsp+0x8]
  4222c7:	mov    r10,rbp
  4222ca:	mov    rbp,QWORD PTR [rsp+0x10]
  4222cf:	mov    r12,QWORD PTR [rsp+0x28]
  4222d4:	mov    QWORD PTR [rax+0x20],0x3c3c
  4222dc:	jmp    41f8bf <__flatcc_fb_parse@@Base+0x2adf>
  4222e1:	mov    r15,rax
  4222e4:	mov    rdi,QWORD PTR [rbp+0x0]
  4222e8:	movsxd rcx,DWORD PTR [r10]
  4222eb:	lea    r12,[rcx+rcx*4]
  4222ef:	lea    rdx,[rdi+r12*8]
  4222f3:	mov    QWORD PTR [r9],rdx
  4222f6:	mov    rax,QWORD PTR [rsi]
  4222f9:	cmp    rax,rdx
  4222fc:	jne    422362 <__flatcc_fb_parse@@Base+0x5582>
  4222fe:	lea    eax,[rcx+rcx*1]
  422301:	test   ecx,ecx
  422303:	mov    ecx,0x400
  422308:	cmove  eax,ecx
  42230b:	mov    DWORD PTR [r10],eax
  42230e:	cdqe   
  422310:	shl    rax,0x3
  422314:	lea    rsi,[rax+rax*4]
  422318:	mov    rbp,r10
  42231b:	call   4061d0 <realloc@plt>
  422320:	mov    rcx,QWORD PTR [rsp+0x10]
  422325:	mov    QWORD PTR [rcx],rax
  422328:	test   rax,rax
  42232b:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  422331:	movsxd rcx,DWORD PTR [rbp+0x0]
  422335:	lea    rcx,[rcx+rcx*4]
  422339:	lea    rcx,[rax+rcx*8]
  42233d:	mov    r9,QWORD PTR [rsp]
  422341:	mov    QWORD PTR [r9],rcx
  422344:	lea    rax,[rax+r12*8]
  422348:	mov    rsi,QWORD PTR [rsp+0x20]
  42234d:	mov    QWORD PTR [rsi],rax
  422350:	mov    r11,QWORD PTR [rsp+0x18]
  422355:	mov    r8,QWORD PTR [rsp+0x8]
  42235a:	mov    r10,rbp
  42235d:	mov    rbp,QWORD PTR [rsp+0x10]
  422362:	mov    QWORD PTR [rax+0x20],0xe
  42236a:	mov    QWORD PTR [rax],r14
  42236d:	mov    rcx,r15
  422370:	sub    rcx,r14
  422373:	mov    QWORD PTR [rax+0x8],rcx
  422377:	mov    rcx,QWORD PTR [r8]
  42237a:	mov    QWORD PTR [rax+0x10],rcx
  42237e:	sub    rbx,QWORD PTR [r11]
  422381:	mov    QWORD PTR [rax+0x18],rbx
  422385:	jmp    41fb67 <__flatcc_fb_parse@@Base+0x2d87>
  42238a:	xor    eax,eax
  42238c:	movzx  eax,al
  42238f:	add    rbp,rax
  422392:	mov    rax,rbp
  422395:	sub    rax,r14
  422398:	xor    ecx,ecx
  42239a:	cmp    rax,0x3
  42239e:	sete   cl
  4223a1:	mov    rax,QWORD PTR [rsp+0x38]
  4223a6:	mov    DWORD PTR [rax+0x3c],ecx
  4223a9:	jne    42248f <__flatcc_fb_parse@@Base+0x56af>
  4223af:	mov    rax,QWORD PTR [rsp+0x10]
  4223b4:	mov    rdi,QWORD PTR [rax]
  4223b7:	movsxd rcx,DWORD PTR [r10]
  4223ba:	lea    r14,[rcx+rcx*4]
  4223be:	lea    rdx,[rdi+r14*8]
  4223c2:	mov    QWORD PTR [r9],rdx
  4223c5:	mov    rax,QWORD PTR [rsi]
  4223c8:	cmp    rax,rdx
  4223cb:	jne    42242b <__flatcc_fb_parse@@Base+0x564b>
  4223cd:	lea    eax,[rcx+rcx*1]
  4223d0:	test   ecx,ecx
  4223d2:	mov    ecx,0x400
  4223d7:	cmove  eax,ecx
  4223da:	mov    DWORD PTR [r10],eax
  4223dd:	cdqe   
  4223df:	shl    rax,0x3
  4223e3:	lea    rsi,[rax+rax*4]
  4223e7:	mov    rbx,r10
  4223ea:	call   4061d0 <realloc@plt>
  4223ef:	mov    rcx,QWORD PTR [rsp+0x10]
  4223f4:	mov    QWORD PTR [rcx],rax
  4223f7:	test   rax,rax
  4223fa:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  422400:	movsxd rcx,DWORD PTR [rbx]
  422403:	lea    rcx,[rcx+rcx*4]
  422407:	lea    rcx,[rax+rcx*8]
  42240b:	mov    r9,QWORD PTR [rsp]
  42240f:	mov    QWORD PTR [r9],rcx
  422412:	lea    rax,[rax+r14*8]
  422416:	mov    rsi,QWORD PTR [rsp+0x20]
  42241b:	mov    QWORD PTR [rsi],rax
  42241e:	mov    r11,QWORD PTR [rsp+0x18]
  422423:	mov    r8,QWORD PTR [rsp+0x8]
  422428:	mov    r10,rbx
  42242b:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  422433:	mov    QWORD PTR [rax],rbp
  422436:	mov    QWORD PTR [rax+0x8],0x0
  42243e:	mov    rcx,QWORD PTR [r8]
  422441:	mov    QWORD PTR [rax+0x10],rcx
  422445:	lea    rcx,[rbp+0x1]
  422449:	sub    rcx,QWORD PTR [r11]
  42244c:	mov    QWORD PTR [rax+0x18],rcx
  422450:	add    rax,0x28
  422454:	mov    QWORD PTR [rsi],rax
  422457:	lea    rdx,[rip+0x25e62]        # 4482c0 <fb_schema_table_deleted@@Base+0x390>
  42245e:	jmp    42248f <__flatcc_fb_parse@@Base+0x56af>
  422460:	lea    rdx,[rip+0x25e59]        # 4482c0 <fb_schema_table_deleted@@Base+0x390>
  422467:	mov    QWORD PTR [rax+0x20],r14
  42246b:	mov    QWORD PTR [rax],r15
  42246e:	mov    QWORD PTR [rax+0x8],0x1
  422476:	mov    rcx,QWORD PTR [r8]
  422479:	mov    QWORD PTR [rax+0x10],rcx
  42247d:	add    r15,0x1
  422481:	sub    r15,QWORD PTR [r11]
  422484:	mov    QWORD PTR [rax+0x18],r15
  422488:	add    rax,0x28
  42248c:	mov    QWORD PTR [rsi],rax
  42248f:	mov    r14,rbp
  422492:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42249c:	nop    DWORD PTR [rax+0x0]
  4224a0:	mov    rbx,r14
  4224a3:	cmp    r13,r14
  4224a6:	je     4224cb <__flatcc_fb_parse@@Base+0x56eb>
  4224a8:	movzx  eax,BYTE PTR [rbx]
  4224ab:	lea    r14,[rbx+0x1]
  4224af:	cmp    al,0x20
  4224b1:	jl     4224b7 <__flatcc_fb_parse@@Base+0x56d7>
  4224b3:	cmp    al,0x7f
  4224b5:	jne    4224a0 <__flatcc_fb_parse@@Base+0x56c0>
  4224b7:	add    r14,0xffffffffffffffff
  4224bb:	xor    r12d,r12d
  4224be:	cmp    rbp,r14
  4224c1:	jne    4224d6 <__flatcc_fb_parse@@Base+0x56f6>
  4224c3:	mov    r15,rbp
  4224c6:	jmp    4225a2 <__flatcc_fb_parse@@Base+0x57c2>
  4224cb:	mov    r12b,0x1
  4224ce:	mov    r14,r13
  4224d1:	cmp    rbp,r14
  4224d4:	je     4224c3 <__flatcc_fb_parse@@Base+0x56e3>
  4224d6:	mov    rax,QWORD PTR [rsp+0x38]
  4224db:	cmp    DWORD PTR [rax+0x3c],0x0
  4224df:	mov    r15,r14
  4224e2:	je     4225a2 <__flatcc_fb_parse@@Base+0x57c2>
  4224e8:	mov    rax,QWORD PTR [rsp+0x10]
  4224ed:	mov    rdi,QWORD PTR [rax]
  4224f0:	movsxd rcx,DWORD PTR [r10]
  4224f3:	lea    r15,[rcx+rcx*4]
  4224f7:	lea    rdx,[rdi+r15*8]
  4224fb:	mov    QWORD PTR [r9],rdx
  4224fe:	mov    rax,QWORD PTR [rsi]
  422501:	cmp    rax,rdx
  422504:	jne    42256a <__flatcc_fb_parse@@Base+0x578a>
  422506:	lea    eax,[rcx+rcx*1]
  422509:	test   ecx,ecx
  42250b:	mov    ecx,0x400
  422510:	cmove  eax,ecx
  422513:	mov    DWORD PTR [r10],eax
  422516:	cdqe   
  422518:	shl    rax,0x3
  42251c:	lea    rsi,[rax+rax*4]
  422520:	mov    r13,r10
  422523:	call   4061d0 <realloc@plt>
  422528:	mov    rcx,QWORD PTR [rsp+0x10]
  42252d:	mov    QWORD PTR [rcx],rax
  422530:	test   rax,rax
  422533:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  422539:	movsxd rcx,DWORD PTR [r13+0x0]
  42253d:	lea    rcx,[rcx+rcx*4]
  422541:	lea    rcx,[rax+rcx*8]
  422545:	mov    r9,QWORD PTR [rsp]
  422549:	mov    QWORD PTR [r9],rcx
  42254c:	lea    rax,[rax+r15*8]
  422550:	mov    rsi,QWORD PTR [rsp+0x20]
  422555:	mov    QWORD PTR [rsi],rax
  422558:	mov    r11,QWORD PTR [rsp+0x18]
  42255d:	mov    r8,QWORD PTR [rsp+0x8]
  422562:	mov    r10,r13
  422565:	mov    r13,QWORD PTR [rsp+0x40]
  42256a:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  422572:	mov    QWORD PTR [rax],rbp
  422575:	mov    rcx,r14
  422578:	sub    rcx,rbp
  42257b:	mov    QWORD PTR [rax+0x8],rcx
  42257f:	mov    rcx,QWORD PTR [r8]
  422582:	mov    QWORD PTR [rax+0x10],rcx
  422586:	add    rbp,0x1
  42258a:	sub    rbp,QWORD PTR [r11]
  42258d:	mov    QWORD PTR [rax+0x18],rbp
  422591:	add    rax,0x28
  422595:	mov    QWORD PTR [rsi],rax
  422598:	mov    r15,r14
  42259b:	lea    rdx,[rip+0x25d1e]        # 4482c0 <fb_schema_table_deleted@@Base+0x390>
  4225a2:	test   r12b,r12b
  4225a5:	mov    rbp,QWORD PTR [rsp+0x10]
  4225aa:	mov    r12,QWORD PTR [rsp+0x28]
  4225af:	jne    423005 <__flatcc_fb_parse@@Base+0x6225>
  4225b5:	mov    al,BYTE PTR [r14]
  4225b8:	cmp    al,0xd
  4225ba:	je     422e01 <__flatcc_fb_parse@@Base+0x6021>
  4225c0:	cmp    al,0xa
  4225c2:	je     422e01 <__flatcc_fb_parse@@Base+0x6021>
  4225c8:	test   al,al
  4225ca:	je     423005 <__flatcc_fb_parse@@Base+0x6225>
  4225d0:	mov    rbp,rbx
  4225d3:	add    rbp,0x1
  4225d7:	mov    al,BYTE PTR [r15]
  4225da:	cmp    al,0x20
  4225dc:	je     4225e6 <__flatcc_fb_parse@@Base+0x5806>
  4225de:	cmp    al,0x9
  4225e0:	jne    42267b <__flatcc_fb_parse@@Base+0x589b>
  4225e6:	mov    rax,QWORD PTR [rsp+0x38]
  4225eb:	cmp    DWORD PTR [rax+0x3c],0x0
  4225ef:	je     42248f <__flatcc_fb_parse@@Base+0x56af>
  4225f5:	mov    r12,QWORD PTR [rsp+0x10]
  4225fa:	mov    rdi,QWORD PTR [r12]
  4225fe:	movsxd rcx,DWORD PTR [r10]
  422601:	lea    rbx,[rcx+rcx*4]
  422605:	lea    rdx,[rdi+rbx*8]
  422609:	mov    QWORD PTR [r9],rdx
  42260c:	mov    rax,QWORD PTR [rsi]
  42260f:	mov    r14,0xfffffffffffffc3c
  422616:	cmp    rax,rdx
  422619:	jne    422460 <__flatcc_fb_parse@@Base+0x5680>
  42261f:	mov    QWORD PTR [rsp+0x48],rbx
  422624:	lea    eax,[rcx+rcx*1]
  422627:	test   ecx,ecx
  422629:	mov    ecx,0x400
  42262e:	cmove  eax,ecx
  422631:	mov    DWORD PTR [r10],eax
  422634:	cdqe   
  422636:	shl    rax,0x3
  42263a:	lea    rsi,[rax+rax*4]
  42263e:	mov    rbx,r12
  422641:	mov    r12,r10
  422644:	call   4061d0 <realloc@plt>
  422649:	mov    QWORD PTR [rbx],rax
  42264c:	test   rax,rax
  42264f:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  422655:	movsxd rcx,DWORD PTR [r12]
  422659:	lea    rcx,[rcx+rcx*4]
  42265d:	lea    rcx,[rax+rcx*8]
  422661:	mov    r9,QWORD PTR [rsp]
  422665:	mov    QWORD PTR [r9],rcx
  422668:	mov    rcx,QWORD PTR [rsp+0x48]
  42266d:	lea    rax,[rax+rcx*8]
  422671:	mov    rsi,QWORD PTR [rsp+0x20]
  422676:	mov    QWORD PTR [rsi],rax
  422679:	jmp    4226f7 <__flatcc_fb_parse@@Base+0x5917>
  42267b:	mov    rbx,QWORD PTR [rsp+0x10]
  422680:	mov    rdi,QWORD PTR [rbx]
  422683:	movsxd rcx,DWORD PTR [r10]
  422686:	lea    r14,[rcx+rcx*4]
  42268a:	lea    rdx,[rdi+r14*8]
  42268e:	mov    QWORD PTR [r9],rdx
  422691:	mov    rax,QWORD PTR [rsi]
  422694:	cmp    rax,rdx
  422697:	je     4226a4 <__flatcc_fb_parse@@Base+0x58c4>
  422699:	mov    r14d,0x7
  42269f:	jmp    422460 <__flatcc_fb_parse@@Base+0x5680>
  4226a4:	lea    eax,[rcx+rcx*1]
  4226a7:	test   ecx,ecx
  4226a9:	mov    ecx,0x400
  4226ae:	cmove  eax,ecx
  4226b1:	mov    DWORD PTR [r10],eax
  4226b4:	cdqe   
  4226b6:	shl    rax,0x3
  4226ba:	lea    rsi,[rax+rax*4]
  4226be:	mov    r12,r10
  4226c1:	call   4061d0 <realloc@plt>
  4226c6:	mov    QWORD PTR [rbx],rax
  4226c9:	test   rax,rax
  4226cc:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  4226d2:	movsxd rcx,DWORD PTR [r12]
  4226d6:	lea    rcx,[rcx+rcx*4]
  4226da:	lea    rcx,[rax+rcx*8]
  4226de:	mov    r9,QWORD PTR [rsp]
  4226e2:	mov    QWORD PTR [r9],rcx
  4226e5:	lea    rax,[rax+r14*8]
  4226e9:	mov    rsi,QWORD PTR [rsp+0x20]
  4226ee:	mov    QWORD PTR [rsi],rax
  4226f1:	mov    r14d,0x7
  4226f7:	mov    r11,QWORD PTR [rsp+0x18]
  4226fc:	mov    r8,QWORD PTR [rsp+0x8]
  422701:	mov    r10,r12
  422704:	jmp    422460 <__flatcc_fb_parse@@Base+0x5680>
  422709:	xor    eax,eax
  42270b:	movzx  eax,al
  42270e:	add    rbp,rax
  422711:	mov    rax,rbp
  422714:	sub    rax,r14
  422717:	xor    ecx,ecx
  422719:	cmp    rax,0x3
  42271d:	sete   cl
  422720:	mov    rax,QWORD PTR [rsp+0x38]
  422725:	mov    DWORD PTR [rax+0x3c],ecx
  422728:	jne    4227e6 <__flatcc_fb_parse@@Base+0x5a06>
  42272e:	mov    rax,QWORD PTR [rsp+0x10]
  422733:	mov    rdi,QWORD PTR [rax]
  422736:	movsxd rcx,DWORD PTR [r10]
  422739:	lea    r14,[rcx+rcx*4]
  42273d:	lea    rdx,[rdi+r14*8]
  422741:	mov    QWORD PTR [r9],rdx
  422744:	mov    rax,QWORD PTR [rsi]
  422747:	cmp    rax,rdx
  42274a:	jne    4227aa <__flatcc_fb_parse@@Base+0x59ca>
  42274c:	lea    eax,[rcx+rcx*1]
  42274f:	test   ecx,ecx
  422751:	mov    ecx,0x400
  422756:	cmove  eax,ecx
  422759:	mov    DWORD PTR [r10],eax
  42275c:	cdqe   
  42275e:	shl    rax,0x3
  422762:	lea    rsi,[rax+rax*4]
  422766:	mov    rbx,r10
  422769:	call   4061d0 <realloc@plt>
  42276e:	mov    rcx,QWORD PTR [rsp+0x10]
  422773:	mov    QWORD PTR [rcx],rax
  422776:	test   rax,rax
  422779:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  42277f:	movsxd rcx,DWORD PTR [rbx]
  422782:	lea    rcx,[rcx+rcx*4]
  422786:	lea    rcx,[rax+rcx*8]
  42278a:	mov    r9,QWORD PTR [rsp]
  42278e:	mov    QWORD PTR [r9],rcx
  422791:	lea    rax,[rax+r14*8]
  422795:	mov    rsi,QWORD PTR [rsp+0x20]
  42279a:	mov    QWORD PTR [rsi],rax
  42279d:	mov    r11,QWORD PTR [rsp+0x18]
  4227a2:	mov    r8,QWORD PTR [rsp+0x8]
  4227a7:	mov    r10,rbx
  4227aa:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  4227b2:	mov    QWORD PTR [rax],rbp
  4227b5:	mov    QWORD PTR [rax+0x8],0x0
  4227bd:	mov    rcx,QWORD PTR [r8]
  4227c0:	mov    QWORD PTR [rax+0x10],rcx
  4227c4:	lea    rcx,[rbp+0x1]
  4227c8:	sub    rcx,QWORD PTR [r11]
  4227cb:	mov    QWORD PTR [rax+0x18],rcx
  4227cf:	add    rax,0x28
  4227d3:	mov    QWORD PTR [rsi],rax
  4227d6:	lea    rdx,[rip+0x25ae3]        # 4482c0 <fb_schema_table_deleted@@Base+0x390>
  4227dd:	jmp    4227e6 <__flatcc_fb_parse@@Base+0x5a06>
  4227df:	add    QWORD PTR [r8],0x1
  4227e3:	mov    QWORD PTR [r11],rbp
  4227e6:	mov    r14,r13
  4227e9:	cmp    rbp,r13
  4227ec:	je     422832 <__flatcc_fb_parse@@Base+0x5a52>
  4227ee:	lea    r14,[rbp-0x1]
  4227f2:	mov    rcx,rbp
  4227f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4227ff:	nop
  422800:	mov    rax,rcx
  422803:	movzx  ecx,BYTE PTR [rcx]
  422806:	cmp    cl,0x20
  422809:	jl     42290b <__flatcc_fb_parse@@Base+0x5b2b>
  42280f:	cmp    cl,0x7f
  422812:	je     42290b <__flatcc_fb_parse@@Base+0x5b2b>
  422818:	cmp    cl,0x2f
  42281b:	jne    422823 <__flatcc_fb_parse@@Base+0x5a43>
  42281d:	cmp    BYTE PTR [rax-0x1],0x2a
  422821:	je     422832 <__flatcc_fb_parse@@Base+0x5a52>
  422823:	lea    rcx,[rax+0x1]
  422827:	mov    r14,rax
  42282a:	cmp    r13,rcx
  42282d:	jne    422800 <__flatcc_fb_parse@@Base+0x5a20>
  42282f:	mov    r14,r13
  422832:	cmp    rbp,r14
  422835:	je     422917 <__flatcc_fb_parse@@Base+0x5b37>
  42283b:	mov    rax,QWORD PTR [rsp+0x38]
  422840:	cmp    DWORD PTR [rax+0x3c],0x0
  422844:	mov    r15,r14
  422847:	je     42291a <__flatcc_fb_parse@@Base+0x5b3a>
  42284d:	mov    rax,QWORD PTR [rsp+0x10]
  422852:	mov    rdi,QWORD PTR [rax]
  422855:	movsxd rcx,DWORD PTR [r10]
  422858:	lea    r15,[rcx+rcx*4]
  42285c:	lea    rdx,[rdi+r15*8]
  422860:	mov    QWORD PTR [r9],rdx
  422863:	mov    rax,QWORD PTR [rsi]
  422866:	cmp    rax,rdx
  422869:	jne    4228c9 <__flatcc_fb_parse@@Base+0x5ae9>
  42286b:	lea    eax,[rcx+rcx*1]
  42286e:	test   ecx,ecx
  422870:	mov    ecx,0x400
  422875:	cmove  eax,ecx
  422878:	mov    DWORD PTR [r10],eax
  42287b:	cdqe   
  42287d:	shl    rax,0x3
  422881:	lea    rsi,[rax+rax*4]
  422885:	mov    rbx,r10
  422888:	call   4061d0 <realloc@plt>
  42288d:	mov    rcx,QWORD PTR [rsp+0x10]
  422892:	mov    QWORD PTR [rcx],rax
  422895:	test   rax,rax
  422898:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  42289e:	movsxd rcx,DWORD PTR [rbx]
  4228a1:	lea    rcx,[rcx+rcx*4]
  4228a5:	lea    rcx,[rax+rcx*8]
  4228a9:	mov    r9,QWORD PTR [rsp]
  4228ad:	mov    QWORD PTR [r9],rcx
  4228b0:	lea    rax,[rax+r15*8]
  4228b4:	mov    rsi,QWORD PTR [rsp+0x20]
  4228b9:	mov    QWORD PTR [rsi],rax
  4228bc:	mov    r11,QWORD PTR [rsp+0x18]
  4228c1:	mov    r8,QWORD PTR [rsp+0x8]
  4228c6:	mov    r10,rbx
  4228c9:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  4228d1:	mov    QWORD PTR [rax],rbp
  4228d4:	mov    rcx,r14
  4228d7:	sub    rcx,rbp
  4228da:	mov    QWORD PTR [rax+0x8],rcx
  4228de:	mov    rcx,QWORD PTR [r8]
  4228e1:	mov    QWORD PTR [rax+0x10],rcx
  4228e5:	add    rbp,0x1
  4228e9:	sub    rbp,QWORD PTR [r11]
  4228ec:	mov    QWORD PTR [rax+0x18],rbp
  4228f0:	add    rax,0x28
  4228f4:	mov    QWORD PTR [rsi],rax
  4228f7:	mov    r15,r14
  4228fa:	lea    rdx,[rip+0x259bf]        # 4482c0 <fb_schema_table_deleted@@Base+0x390>
  422901:	cmp    r14,r13
  422904:	jne    422923 <__flatcc_fb_parse@@Base+0x5b43>
  422906:	jmp    422ffd <__flatcc_fb_parse@@Base+0x621d>
  42290b:	mov    r14,rax
  42290e:	cmp    rbp,r14
  422911:	jne    42283b <__flatcc_fb_parse@@Base+0x5a5b>
  422917:	mov    r15,rbp
  42291a:	cmp    r14,r13
  42291d:	je     422ffd <__flatcc_fb_parse@@Base+0x621d>
  422923:	mov    al,BYTE PTR [r14]
  422926:	cmp    al,0xa
  422928:	mov    rbp,QWORD PTR [rsp+0x10]
  42292d:	je     422a19 <__flatcc_fb_parse@@Base+0x5c39>
  422933:	cmp    al,0xd
  422935:	je     4229fe <__flatcc_fb_parse@@Base+0x5c1e>
  42293b:	test   al,al
  42293d:	je     423005 <__flatcc_fb_parse@@Base+0x6225>
  422943:	cmp    al,0x20
  422945:	jl     42294f <__flatcc_fb_parse@@Base+0x5b6f>
  422947:	cmp    al,0x7f
  422949:	jne    422dfd <__flatcc_fb_parse@@Base+0x601d>
  42294f:	add    r14,0x1
  422953:	mov    al,BYTE PTR [r15]
  422956:	cmp    al,0x20
  422958:	je     422962 <__flatcc_fb_parse@@Base+0x5b82>
  42295a:	cmp    al,0x9
  42295c:	jne    422a3e <__flatcc_fb_parse@@Base+0x5c5e>
  422962:	mov    rax,QWORD PTR [rsp+0x38]
  422967:	cmp    DWORD PTR [rax+0x3c],0x0
  42296b:	mov    rbp,r14
  42296e:	je     4227e6 <__flatcc_fb_parse@@Base+0x5a06>
  422974:	mov    rax,QWORD PTR [rsp+0x10]
  422979:	mov    rdi,QWORD PTR [rax]
  42297c:	movsxd rcx,DWORD PTR [r10]
  42297f:	lea    rbx,[rcx+rcx*4]
  422983:	lea    rdx,[rdi+rbx*8]
  422987:	mov    QWORD PTR [r9],rdx
  42298a:	mov    rax,QWORD PTR [rsi]
  42298d:	cmp    rax,rdx
  422990:	jne    4229f1 <__flatcc_fb_parse@@Base+0x5c11>
  422992:	lea    eax,[rcx+rcx*1]
  422995:	test   ecx,ecx
  422997:	mov    ecx,0x400
  42299c:	cmove  eax,ecx
  42299f:	mov    DWORD PTR [r10],eax
  4229a2:	cdqe   
  4229a4:	shl    rax,0x3
  4229a8:	lea    rsi,[rax+rax*4]
  4229ac:	mov    rbp,r10
  4229af:	call   4061d0 <realloc@plt>
  4229b4:	mov    rcx,QWORD PTR [rsp+0x10]
  4229b9:	mov    QWORD PTR [rcx],rax
  4229bc:	test   rax,rax
  4229bf:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  4229c5:	movsxd rcx,DWORD PTR [rbp+0x0]
  4229c9:	lea    rcx,[rcx+rcx*4]
  4229cd:	lea    rcx,[rax+rcx*8]
  4229d1:	mov    r9,QWORD PTR [rsp]
  4229d5:	mov    QWORD PTR [r9],rcx
  4229d8:	lea    rax,[rax+rbx*8]
  4229dc:	mov    rsi,QWORD PTR [rsp+0x20]
  4229e1:	mov    QWORD PTR [rsi],rax
  4229e4:	mov    r11,QWORD PTR [rsp+0x18]
  4229e9:	mov    r8,QWORD PTR [rsp+0x8]
  4229ee:	mov    r10,rbp
  4229f1:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  4229f9:	jmp    422abf <__flatcc_fb_parse@@Base+0x5cdf>
  4229fe:	lea    rax,[r14+0x1]
  422a02:	mov    rbp,r13
  422a05:	cmp    rax,r13
  422a08:	je     4227df <__flatcc_fb_parse@@Base+0x59ff>
  422a0e:	lea    rcx,[r14+0x2]
  422a12:	cmp    BYTE PTR [r14+0x1],0xa
  422a17:	jmp    422a32 <__flatcc_fb_parse@@Base+0x5c52>
  422a19:	lea    rax,[r14+0x1]
  422a1d:	mov    rbp,r13
  422a20:	cmp    rax,r13
  422a23:	je     4227df <__flatcc_fb_parse@@Base+0x59ff>
  422a29:	lea    rcx,[r14+0x2]
  422a2d:	cmp    BYTE PTR [r14+0x1],0xd
  422a32:	cmove  rax,rcx
  422a36:	mov    rbp,rax
  422a39:	jmp    4227df <__flatcc_fb_parse@@Base+0x59ff>
  422a3e:	mov    rdi,QWORD PTR [rbp+0x0]
  422a42:	movsxd rcx,DWORD PTR [r10]
  422a45:	lea    rbx,[rcx+rcx*4]
  422a49:	lea    rdx,[rdi+rbx*8]
  422a4d:	mov    QWORD PTR [r9],rdx
  422a50:	mov    rax,QWORD PTR [rsi]
  422a53:	cmp    rax,rdx
  422a56:	jne    422ab7 <__flatcc_fb_parse@@Base+0x5cd7>
  422a58:	lea    eax,[rcx+rcx*1]
  422a5b:	test   ecx,ecx
  422a5d:	mov    ecx,0x400
  422a62:	cmove  eax,ecx
  422a65:	mov    DWORD PTR [r10],eax
  422a68:	cdqe   
  422a6a:	shl    rax,0x3
  422a6e:	lea    rsi,[rax+rax*4]
  422a72:	mov    rbp,r10
  422a75:	call   4061d0 <realloc@plt>
  422a7a:	mov    rcx,QWORD PTR [rsp+0x10]
  422a7f:	mov    QWORD PTR [rcx],rax
  422a82:	test   rax,rax
  422a85:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  422a8b:	movsxd rcx,DWORD PTR [rbp+0x0]
  422a8f:	lea    rcx,[rcx+rcx*4]
  422a93:	lea    rcx,[rax+rcx*8]
  422a97:	mov    r9,QWORD PTR [rsp]
  422a9b:	mov    QWORD PTR [r9],rcx
  422a9e:	lea    rax,[rax+rbx*8]
  422aa2:	mov    rsi,QWORD PTR [rsp+0x20]
  422aa7:	mov    QWORD PTR [rsi],rax
  422aaa:	mov    r11,QWORD PTR [rsp+0x18]
  422aaf:	mov    r8,QWORD PTR [rsp+0x8]
  422ab4:	mov    r10,rbp
  422ab7:	mov    QWORD PTR [rax+0x20],0x7
  422abf:	mov    QWORD PTR [rax],r15
  422ac2:	mov    QWORD PTR [rax+0x8],0x1
  422aca:	mov    rcx,QWORD PTR [r8]
  422acd:	mov    QWORD PTR [rax+0x10],rcx
  422ad1:	add    r15,0x1
  422ad5:	sub    r15,QWORD PTR [r11]
  422ad8:	mov    QWORD PTR [rax+0x18],r15
  422adc:	add    rax,0x28
  422ae0:	mov    QWORD PTR [rsi],rax
  422ae3:	mov    rbp,r14
  422ae6:	lea    rdx,[rip+0x257d3]        # 4482c0 <fb_schema_table_deleted@@Base+0x390>
  422aed:	jmp    4227e6 <__flatcc_fb_parse@@Base+0x5a06>
  422af2:	lea    r15,[r14+0x3]
  422af6:	cmp    r15,r13
  422af9:	je     422cd4 <__flatcc_fb_parse@@Base+0x5ef4>
  422aff:	cmp    BYTE PTR [r15],0x3d
  422b03:	jne    422cd4 <__flatcc_fb_parse@@Base+0x5ef4>
  422b09:	mov    rdi,QWORD PTR [rbp+0x0]
  422b0d:	movsxd rcx,DWORD PTR [r10]
  422b10:	lea    rbx,[rcx+rcx*4]
  422b14:	lea    rdx,[rdi+rbx*8]
  422b18:	mov    QWORD PTR [r9],rdx
  422b1b:	mov    rax,QWORD PTR [rsi]
  422b1e:	cmp    rax,rdx
  422b21:	jne    422b85 <__flatcc_fb_parse@@Base+0x5da5>
  422b23:	lea    eax,[rcx+rcx*1]
  422b26:	test   ecx,ecx
  422b28:	mov    ecx,0x400
  422b2d:	cmove  eax,ecx
  422b30:	mov    DWORD PTR [r10],eax
  422b33:	cdqe   
  422b35:	shl    rax,0x3
  422b39:	lea    rsi,[rax+rax*4]
  422b3d:	mov    r15,rbp
  422b40:	mov    rbp,r10
  422b43:	call   4061d0 <realloc@plt>
  422b48:	mov    QWORD PTR [r15],rax
  422b4b:	test   rax,rax
  422b4e:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  422b54:	movsxd rcx,DWORD PTR [rbp+0x0]
  422b58:	lea    rcx,[rcx+rcx*4]
  422b5c:	lea    rcx,[rax+rcx*8]
  422b60:	mov    r9,QWORD PTR [rsp]
  422b64:	mov    QWORD PTR [r9],rcx
  422b67:	lea    rax,[rax+rbx*8]
  422b6b:	mov    rsi,QWORD PTR [rsp+0x20]
  422b70:	mov    QWORD PTR [rsi],rax
  422b73:	mov    r11,QWORD PTR [rsp+0x18]
  422b78:	mov    r8,QWORD PTR [rsp+0x8]
  422b7d:	mov    r10,rbp
  422b80:	mov    rbp,QWORD PTR [rsp+0x10]
  422b85:	lea    r15,[r14+0x4]
  422b89:	mov    QWORD PTR [rax+0x20],0x3d3e3e3e
  422b91:	jmp    422cc4 <__flatcc_fb_parse@@Base+0x5ee4>
  422b96:	mov    rdi,QWORD PTR [rbp+0x0]
  422b9a:	movsxd rcx,DWORD PTR [r10]
  422b9d:	lea    rbx,[rcx+rcx*4]
  422ba1:	lea    rdx,[rdi+rbx*8]
  422ba5:	mov    QWORD PTR [r9],rdx
  422ba8:	mov    rax,QWORD PTR [rsi]
  422bab:	cmp    rax,rdx
  422bae:	jne    422c18 <__flatcc_fb_parse@@Base+0x5e38>
  422bb0:	lea    eax,[rcx+rcx*1]
  422bb3:	test   ecx,ecx
  422bb5:	mov    ecx,0x400
  422bba:	cmove  eax,ecx
  422bbd:	mov    DWORD PTR [r10],eax
  422bc0:	cdqe   
  422bc2:	shl    rax,0x3
  422bc6:	lea    rsi,[rax+rax*4]
  422bca:	mov    r12,rbp
  422bcd:	mov    rbp,r10
  422bd0:	call   4061d0 <realloc@plt>
  422bd5:	mov    QWORD PTR [r12],rax
  422bd9:	test   rax,rax
  422bdc:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  422be2:	movsxd rcx,DWORD PTR [rbp+0x0]
  422be6:	lea    rcx,[rcx+rcx*4]
  422bea:	lea    rcx,[rax+rcx*8]
  422bee:	mov    r9,QWORD PTR [rsp]
  422bf2:	mov    QWORD PTR [r9],rcx
  422bf5:	lea    rax,[rax+rbx*8]
  422bf9:	mov    rsi,QWORD PTR [rsp+0x20]
  422bfe:	mov    QWORD PTR [rsi],rax
  422c01:	mov    r11,QWORD PTR [rsp+0x18]
  422c06:	mov    r8,QWORD PTR [rsp+0x8]
  422c0b:	mov    r10,rbp
  422c0e:	mov    rbp,QWORD PTR [rsp+0x10]
  422c13:	mov    r12,QWORD PTR [rsp+0x28]
  422c18:	mov    QWORD PTR [rax+0x20],0x2e2e
  422c20:	jmp    41f8bf <__flatcc_fb_parse@@Base+0x2adf>
  422c25:	lea    r15,[r14+0x3]
  422c29:	cmp    r15,r13
  422c2c:	je     422d63 <__flatcc_fb_parse@@Base+0x5f83>
  422c32:	cmp    BYTE PTR [r15],0x3d
  422c36:	jne    422d63 <__flatcc_fb_parse@@Base+0x5f83>
  422c3c:	mov    rdi,QWORD PTR [rbp+0x0]
  422c40:	movsxd rcx,DWORD PTR [r10]
  422c43:	lea    rbx,[rcx+rcx*4]
  422c47:	lea    rdx,[rdi+rbx*8]
  422c4b:	mov    QWORD PTR [r9],rdx
  422c4e:	mov    rax,QWORD PTR [rsi]
  422c51:	cmp    rax,rdx
  422c54:	jne    422cb8 <__flatcc_fb_parse@@Base+0x5ed8>
  422c56:	lea    eax,[rcx+rcx*1]
  422c59:	test   ecx,ecx
  422c5b:	mov    ecx,0x400
  422c60:	cmove  eax,ecx
  422c63:	mov    DWORD PTR [r10],eax
  422c66:	cdqe   
  422c68:	shl    rax,0x3
  422c6c:	lea    rsi,[rax+rax*4]
  422c70:	mov    r15,rbp
  422c73:	mov    rbp,r10
  422c76:	call   4061d0 <realloc@plt>
  422c7b:	mov    QWORD PTR [r15],rax
  422c7e:	test   rax,rax
  422c81:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  422c87:	movsxd rcx,DWORD PTR [rbp+0x0]
  422c8b:	lea    rcx,[rcx+rcx*4]
  422c8f:	lea    rcx,[rax+rcx*8]
  422c93:	mov    r9,QWORD PTR [rsp]
  422c97:	mov    QWORD PTR [r9],rcx
  422c9a:	lea    rax,[rax+rbx*8]
  422c9e:	mov    rsi,QWORD PTR [rsp+0x20]
  422ca3:	mov    QWORD PTR [rsi],rax
  422ca6:	mov    r11,QWORD PTR [rsp+0x18]
  422cab:	mov    r8,QWORD PTR [rsp+0x8]
  422cb0:	mov    r10,rbp
  422cb3:	mov    rbp,QWORD PTR [rsp+0x10]
  422cb8:	lea    r15,[r14+0x4]
  422cbc:	mov    QWORD PTR [rax+0x20],0x3d3c3c3c
  422cc4:	mov    QWORD PTR [rax],r14
  422cc7:	mov    QWORD PTR [rax+0x8],0x4
  422ccf:	jmp    421f70 <__flatcc_fb_parse@@Base+0x5190>
  422cd4:	mov    rdi,QWORD PTR [rbp+0x0]
  422cd8:	movsxd rcx,DWORD PTR [r10]
  422cdb:	lea    rbx,[rcx+rcx*4]
  422cdf:	lea    rdx,[rdi+rbx*8]
  422ce3:	mov    QWORD PTR [r9],rdx
  422ce6:	mov    rax,QWORD PTR [rsi]
  422ce9:	cmp    rax,rdx
  422cec:	jne    422d56 <__flatcc_fb_parse@@Base+0x5f76>
  422cee:	lea    eax,[rcx+rcx*1]
  422cf1:	test   ecx,ecx
  422cf3:	mov    ecx,0x400
  422cf8:	cmove  eax,ecx
  422cfb:	mov    DWORD PTR [r10],eax
  422cfe:	cdqe   
  422d00:	shl    rax,0x3
  422d04:	lea    rsi,[rax+rax*4]
  422d08:	mov    r12,rbp
  422d0b:	mov    rbp,r10
  422d0e:	call   4061d0 <realloc@plt>
  422d13:	mov    QWORD PTR [r12],rax
  422d17:	test   rax,rax
  422d1a:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  422d20:	movsxd rcx,DWORD PTR [rbp+0x0]
  422d24:	lea    rcx,[rcx+rcx*4]
  422d28:	lea    rcx,[rax+rcx*8]
  422d2c:	mov    r9,QWORD PTR [rsp]
  422d30:	mov    QWORD PTR [r9],rcx
  422d33:	lea    rax,[rax+rbx*8]
  422d37:	mov    rsi,QWORD PTR [rsp+0x20]
  422d3c:	mov    QWORD PTR [rsi],rax
  422d3f:	mov    r11,QWORD PTR [rsp+0x18]
  422d44:	mov    r8,QWORD PTR [rsp+0x8]
  422d49:	mov    r10,rbp
  422d4c:	mov    rbp,QWORD PTR [rsp+0x10]
  422d51:	mov    r12,QWORD PTR [rsp+0x28]
  422d56:	mov    QWORD PTR [rax+0x20],0x3e3e3e
  422d5e:	jmp    422ded <__flatcc_fb_parse@@Base+0x600d>
  422d63:	mov    rdi,QWORD PTR [rbp+0x0]
  422d67:	movsxd rcx,DWORD PTR [r10]
  422d6a:	lea    rbx,[rcx+rcx*4]
  422d6e:	lea    rdx,[rdi+rbx*8]
  422d72:	mov    QWORD PTR [r9],rdx
  422d75:	mov    rax,QWORD PTR [rsi]
  422d78:	cmp    rax,rdx
  422d7b:	jne    422de5 <__flatcc_fb_parse@@Base+0x6005>
  422d7d:	lea    eax,[rcx+rcx*1]
  422d80:	test   ecx,ecx
  422d82:	mov    ecx,0x400
  422d87:	cmove  eax,ecx
  422d8a:	mov    DWORD PTR [r10],eax
  422d8d:	cdqe   
  422d8f:	shl    rax,0x3
  422d93:	lea    rsi,[rax+rax*4]
  422d97:	mov    r12,rbp
  422d9a:	mov    rbp,r10
  422d9d:	call   4061d0 <realloc@plt>
  422da2:	mov    QWORD PTR [r12],rax
  422da6:	test   rax,rax
  422da9:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  422daf:	movsxd rcx,DWORD PTR [rbp+0x0]
  422db3:	lea    rcx,[rcx+rcx*4]
  422db7:	lea    rcx,[rax+rcx*8]
  422dbb:	mov    r9,QWORD PTR [rsp]
  422dbf:	mov    QWORD PTR [r9],rcx
  422dc2:	lea    rax,[rax+rbx*8]
  422dc6:	mov    rsi,QWORD PTR [rsp+0x20]
  422dcb:	mov    QWORD PTR [rsi],rax
  422dce:	mov    r11,QWORD PTR [rsp+0x18]
  422dd3:	mov    r8,QWORD PTR [rsp+0x8]
  422dd8:	mov    r10,rbp
  422ddb:	mov    rbp,QWORD PTR [rsp+0x10]
  422de0:	mov    r12,QWORD PTR [rsp+0x28]
  422de5:	mov    QWORD PTR [rax+0x20],0x3c3c3c
  422ded:	mov    QWORD PTR [rax],r14
  422df0:	mov    QWORD PTR [rax+0x8],0x3
  422df8:	jmp    421f70 <__flatcc_fb_parse@@Base+0x5190>
  422dfd:	add    r14,0x2
  422e01:	mov    rax,QWORD PTR [rsp+0x38]
  422e06:	mov    DWORD PTR [rax+0x3c],0x0
  422e0d:	jmp    422079 <__flatcc_fb_parse@@Base+0x5299>
  422e12:	mov    r15,r14
  422e15:	cmp    r14,r13
  422e18:	je     422e24 <__flatcc_fb_parse@@Base+0x6044>
  422e1a:	cmp    BYTE PTR [r14],0x0
  422e1e:	je     422f4d <__flatcc_fb_parse@@Base+0x616d>
  422e24:	mov    r13,r14
  422e27:	mov    rbp,QWORD PTR [rsp+0x38]
  422e2c:	mov    rdi,QWORD PTR [rbp+0x28]
  422e30:	mov    rax,QWORD PTR [rbp+0x48]
  422e34:	movsxd rcx,DWORD PTR [rbp+0x38]
  422e38:	lea    rbx,[rcx+rcx*4]
  422e3c:	lea    rdx,[rdi+rbx*8]
  422e40:	mov    QWORD PTR [rbp+0x30],rdx
  422e44:	cmp    rax,rdx
  422e47:	jne    422e8e <__flatcc_fb_parse@@Base+0x60ae>
  422e49:	lea    eax,[rcx+rcx*1]
  422e4c:	test   ecx,ecx
  422e4e:	mov    ecx,0x400
  422e53:	cmovne ecx,eax
  422e56:	mov    DWORD PTR [rbp+0x38],ecx
  422e59:	movsxd rax,ecx
  422e5c:	shl    rax,0x3
  422e60:	lea    rsi,[rax+rax*4]
  422e64:	call   4061d0 <realloc@plt>
  422e69:	mov    QWORD PTR [rbp+0x28],rax
  422e6d:	test   rax,rax
  422e70:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  422e76:	movsxd rcx,DWORD PTR [rbp+0x38]
  422e7a:	lea    rcx,[rcx+rcx*4]
  422e7e:	lea    rcx,[rax+rcx*8]
  422e82:	mov    QWORD PTR [rbp+0x30],rcx
  422e86:	lea    rax,[rax+rbx*8]
  422e8a:	mov    QWORD PTR [rbp+0x48],rax
  422e8e:	lea    rsi,[rbp+0x48]
  422e92:	mov    QWORD PTR [rax+0x20],0x0
  422e9a:	mov    QWORD PTR [rax],r13
  422e9d:	mov    QWORD PTR [rax+0x8],0x0
  422ea5:	mov    rcx,QWORD PTR [rbp+0x78]
  422ea9:	mov    QWORD PTR [rax+0x10],rcx
  422ead:	add    rbp,0x70
  422eb1:	mov    r11,rbp
  422eb4:	mov    r14,r13
  422eb7:	jmp    422fdc <__flatcc_fb_parse@@Base+0x61fc>
  422ebc:	mov    rdi,QWORD PTR [rbp+0x0]
  422ec0:	movsxd rcx,DWORD PTR [r10]
  422ec3:	lea    rbx,[rcx+rcx*4]
  422ec7:	lea    rdx,[rdi+rbx*8]
  422ecb:	mov    QWORD PTR [r9],rdx
  422ece:	mov    rax,QWORD PTR [rsi]
  422ed1:	cmp    rax,rdx
  422ed4:	jne    422f2e <__flatcc_fb_parse@@Base+0x614e>
  422ed6:	lea    eax,[rcx+rcx*1]
  422ed9:	test   ecx,ecx
  422edb:	mov    ecx,0x400
  422ee0:	cmovne ecx,eax
  422ee3:	mov    DWORD PTR [r10],ecx
  422ee6:	movsxd rax,ecx
  422ee9:	shl    rax,0x3
  422eed:	lea    rsi,[rax+rax*4]
  422ef1:	mov    r15,r10
  422ef4:	call   4061d0 <realloc@plt>
  422ef9:	mov    QWORD PTR [rbp+0x0],rax
  422efd:	test   rax,rax
  422f00:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  422f06:	movsxd rcx,DWORD PTR [r15]
  422f09:	lea    rcx,[rcx+rcx*4]
  422f0d:	lea    rcx,[rax+rcx*8]
  422f11:	mov    rdx,QWORD PTR [rsp]
  422f15:	mov    QWORD PTR [rdx],rcx
  422f18:	lea    rax,[rax+rbx*8]
  422f1c:	mov    rsi,QWORD PTR [rsp+0x20]
  422f21:	mov    QWORD PTR [rsi],rax
  422f24:	mov    r11,QWORD PTR [rsp+0x18]
  422f29:	mov    r8,QWORD PTR [rsp+0x8]
  422f2e:	mov    QWORD PTR [rax+0x20],0x0
  422f36:	mov    QWORD PTR [rax],r14
  422f39:	mov    QWORD PTR [rax+0x8],0x0
  422f41:	mov    rcx,QWORD PTR [r8]
  422f44:	mov    QWORD PTR [rax+0x10],rcx
  422f48:	jmp    422fdc <__flatcc_fb_parse@@Base+0x61fc>
  422f4d:	mov    rbp,QWORD PTR [rsp+0x38]
  422f52:	mov    rdi,QWORD PTR [rbp+0x28]
  422f56:	mov    rax,QWORD PTR [rbp+0x48]
  422f5a:	movsxd rcx,DWORD PTR [rbp+0x38]
  422f5e:	lea    rbx,[rcx+rcx*4]
  422f62:	lea    rdx,[rdi+rbx*8]
  422f66:	mov    QWORD PTR [rbp+0x30],rdx
  422f6a:	cmp    rax,rdx
  422f6d:	jne    422fb4 <__flatcc_fb_parse@@Base+0x61d4>
  422f6f:	lea    eax,[rcx+rcx*1]
  422f72:	test   ecx,ecx
  422f74:	mov    ecx,0x400
  422f79:	cmovne ecx,eax
  422f7c:	mov    DWORD PTR [rbp+0x38],ecx
  422f7f:	movsxd rax,ecx
  422f82:	shl    rax,0x3
  422f86:	lea    rsi,[rax+rax*4]
  422f8a:	call   4061d0 <realloc@plt>
  422f8f:	mov    QWORD PTR [rbp+0x28],rax
  422f93:	test   rax,rax
  422f96:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  422f9c:	movsxd rcx,DWORD PTR [rbp+0x38]
  422fa0:	lea    rcx,[rcx+rcx*4]
  422fa4:	lea    rcx,[rax+rcx*8]
  422fa8:	mov    QWORD PTR [rbp+0x30],rcx
  422fac:	lea    rax,[rax+rbx*8]
  422fb0:	mov    QWORD PTR [rbp+0x48],rax
  422fb4:	lea    rsi,[rbp+0x48]
  422fb8:	mov    QWORD PTR [rax+0x20],0x0
  422fc0:	mov    QWORD PTR [rax],r15
  422fc3:	sub    r14,r15
  422fc6:	mov    QWORD PTR [rax+0x8],r14
  422fca:	mov    rcx,QWORD PTR [rbp+0x78]
  422fce:	mov    QWORD PTR [rax+0x10],rcx
  422fd2:	add    rbp,0x70
  422fd6:	mov    r11,rbp
  422fd9:	mov    r14,r15
  422fdc:	add    r14,0x1
  422fe0:	sub    r14,QWORD PTR [r11]
  422fe3:	mov    QWORD PTR [rax+0x18],r14
  422fe7:	add    rax,0x28
  422feb:	mov    QWORD PTR [rsi],rax
  422fee:	add    rsp,0x58
  422ff2:	pop    rbx
  422ff3:	pop    r12
  422ff5:	pop    r13
  422ff7:	pop    r14
  422ff9:	pop    r15
  422ffb:	pop    rbp
  422ffc:	ret    
  422ffd:	mov    r14,r13
  423000:	mov    rbp,QWORD PTR [rsp+0x10]
  423005:	mov    rdi,QWORD PTR [rbp+0x0]
  423009:	movsxd rcx,DWORD PTR [r10]
  42300c:	lea    rbx,[rcx+rcx*4]
  423010:	lea    rdx,[rdi+rbx*8]
  423014:	mov    QWORD PTR [r9],rdx
  423017:	mov    rax,QWORD PTR [rsi]
  42301a:	cmp    rax,rdx
  42301d:	jne    423074 <__flatcc_fb_parse@@Base+0x6294>
  42301f:	lea    eax,[rcx+rcx*1]
  423022:	test   ecx,ecx
  423024:	mov    ecx,0x400
  423029:	cmovne ecx,eax
  42302c:	mov    DWORD PTR [r10],ecx
  42302f:	movsxd rax,ecx
  423032:	shl    rax,0x3
  423036:	lea    rsi,[rax+rax*4]
  42303a:	mov    r12,r10
  42303d:	call   4061d0 <realloc@plt>
  423042:	mov    QWORD PTR [rbp+0x0],rax
  423046:	test   rax,rax
  423049:	je     4230ae <__flatcc_fb_parse@@Base+0x62ce>
  42304b:	movsxd rcx,DWORD PTR [r12]
  42304f:	lea    rcx,[rcx+rcx*4]
  423053:	lea    rcx,[rax+rcx*8]
  423057:	mov    rdx,QWORD PTR [rsp]
  42305b:	mov    QWORD PTR [rdx],rcx
  42305e:	lea    rax,[rax+rbx*8]
  423062:	mov    rsi,QWORD PTR [rsp+0x20]
  423067:	mov    QWORD PTR [rsi],rax
  42306a:	mov    r11,QWORD PTR [rsp+0x18]
  42306f:	mov    r8,QWORD PTR [rsp+0x8]
  423074:	mov    QWORD PTR [rax+0x20],0x1b
  42307c:	mov    QWORD PTR [rax],r14
  42307f:	mov    QWORD PTR [rax+0x8],0x0
  423087:	mov    rcx,QWORD PTR [r8]
  42308a:	mov    QWORD PTR [rax+0x10],rcx
  42308e:	lea    rcx,[r14+0x1]
  423092:	sub    rcx,QWORD PTR [r11]
  423095:	mov    QWORD PTR [rax+0x18],rcx
  423099:	add    rax,0x28
  42309d:	mov    QWORD PTR [rsi],rax
  4230a0:	cmp    r14,r13
  4230a3:	jne    422e1a <__flatcc_fb_parse@@Base+0x603a>
  4230a9:	jmp    422e24 <__flatcc_fb_parse@@Base+0x6044>
  4230ae:	mov    rax,QWORD PTR [rip+0x2ff43]        # 452ff8 <stderr@GLIBC_2.2.5>
  4230b5:	mov    rcx,QWORD PTR [rax]
  4230b8:	lea    rdi,[rip+0xd74d]        # 43080c <_IO_stdin_used@@Base+0x180c>
  4230bf:	mov    esi,0x22
  4230c4:	mov    edx,0x1
  4230c9:	call   406220 <fwrite@plt>
  4230ce:	mov    edi,0x1
  4230d3:	call   406210 <exit@plt>
  4230d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4230e0:	push   r15
  4230e2:	push   r14
  4230e4:	push   rbx
  4230e5:	mov    r14,rdi
  4230e8:	mov    r15,QWORD PTR [rdi+0x30]
  4230ec:	mov    rax,QWORD PTR [rdi+0x48]
  4230f0:	lea    rbx,[rax+0x28]
  4230f4:	mov    QWORD PTR [rdi+0x48],rbx
  4230f8:	cmp    rbx,r15
  4230fb:	je     423179 <__flatcc_fb_parse@@Base+0x6399>
  4230fd:	nop    DWORD PTR [rax]
  423100:	cmp    QWORD PTR [rbx+0x20],0xfffffffffffffc3c
  423108:	jne    42319c <__flatcc_fb_parse@@Base+0x63bc>
  42310e:	mov    rcx,QWORD PTR [r14+0x60]
  423112:	lea    rax,[rcx+0x20]
  423116:	cmp    rax,QWORD PTR [r14+0x50]
  42311a:	jbe    423152 <__flatcc_fb_parse@@Base+0x6372>
  42311c:	mov    edi,0x10000
  423121:	mov    esi,0x1
  423126:	call   406150 <calloc@plt>
  42312b:	test   rax,rax
  42312e:	je     4231a5 <__flatcc_fb_parse@@Base+0x63c5>
  423130:	mov    rcx,QWORD PTR [r14+0x58]
  423134:	mov    QWORD PTR [rax],rcx
  423137:	mov    QWORD PTR [r14+0x58],rax
  42313b:	lea    rcx,[rax+0x10]
  42313f:	mov    QWORD PTR [r14+0x60],rcx
  423143:	lea    rdx,[rax+0x10000]
  42314a:	mov    QWORD PTR [r14+0x50],rdx
  42314e:	add    rax,0x30
  423152:	mov    QWORD PTR [r14+0x60],rax
  423156:	mov    QWORD PTR [rcx+0x8],rbx
  42315a:	mov    rax,QWORD PTR [r14+0x40]
  42315e:	mov    QWORD PTR [rcx],rax
  423161:	mov    QWORD PTR [r14+0x40],rcx
  423165:	add    rbx,0x28
  423169:	mov    QWORD PTR [r14+0x48],rbx
  42316d:	cmp    r15,rbx
  423170:	jne    423100 <__flatcc_fb_parse@@Base+0x6320>
  423172:	add    rbx,0xffffffffffffffd8
  423176:	mov    rax,rbx
  423179:	mov    QWORD PTR [r14+0x48],rax
  42317d:	lea    rdi,[rip+0x1e9fb]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  423184:	lea    rsi,[rip+0x253ac]        # 448537 <fb_schema_table_deleted@@Base+0x607>
  42318b:	lea    rcx,[rip+0x254ec]        # 44867e <fb_schema_table_deleted@@Base+0x74e>
  423192:	mov    edx,0x155
  423197:	call   406100 <__assert_fail@plt>
  42319c:	mov    rax,rbx
  42319f:	pop    rbx
  4231a0:	pop    r14
  4231a2:	pop    r15
  4231a4:	ret    
  4231a5:	mov    rax,QWORD PTR [rip+0x2fe4c]        # 452ff8 <stderr@GLIBC_2.2.5>
  4231ac:	mov    rcx,QWORD PTR [rax]
  4231af:	lea    rdi,[rip+0xd656]        # 43080c <_IO_stdin_used@@Base+0x180c>
  4231b6:	mov    esi,0x22
  4231bb:	mov    edx,0x1
  4231c0:	call   406220 <fwrite@plt>
  4231c5:	mov    edi,0x1
  4231ca:	call   406210 <exit@plt>
  4231cf:	nop

00000000004231d0 <__flatcc_fb_clear_parser@@Base>:
  4231d0:	push   r14
  4231d2:	push   rbx
  4231d3:	push   rax
  4231d4:	mov    r14,rdi
  4231d7:	mov    rbx,QWORD PTR [rdi+0x238]
  4231de:	test   rbx,rbx
  4231e1:	jne    4231f8 <__flatcc_fb_clear_parser@@Base+0x28>
  4231e3:	jmp    423218 <__flatcc_fb_clear_parser@@Base+0x48>
  4231e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4231ef:	nop
  4231f0:	mov    rbx,QWORD PTR [rbx]
  4231f3:	test   rbx,rbx
  4231f6:	je     423218 <__flatcc_fb_clear_parser@@Base+0x48>
  4231f8:	movzx  eax,WORD PTR [rbx+0x10]
  4231fc:	cmp    eax,0x4
  4231ff:	ja     4231f0 <__flatcc_fb_clear_parser@@Base+0x20>
  423201:	lea    rdi,[rbx+0x60]
  423205:	call   41a030 <fb_symbol_table_clear@@Base>
  42320a:	mov    rdi,rbx
  42320d:	sub    rdi,0xffffffffffffff80
  423211:	call   42db50 <fb_value_set_clear@@Base>
  423216:	jmp    4231f0 <__flatcc_fb_clear_parser@@Base+0x20>
  423218:	lea    rdi,[r14+0x2a8]
  42321f:	call   41b6a0 <fb_schema_table_clear@@Base>
  423224:	lea    rdi,[r14+0x288]
  42322b:	call   42d440 <fb_name_table_clear@@Base>
  423230:	lea    rdi,[r14+0x320]
  423237:	call   4199f0 <ptr_set_clear@@Base>
  42323c:	mov    rdi,QWORD PTR [r14+0xd8]
  423243:	test   rdi,rdi
  423246:	je     42324d <__flatcc_fb_clear_parser@@Base+0x7d>
  423248:	call   406040 <free@plt>
  42324d:	mov    rdi,QWORD PTR [r14+0x28]
  423251:	test   rdi,rdi
  423254:	je     42325b <__flatcc_fb_clear_parser@@Base+0x8b>
  423256:	call   406040 <free@plt>
  42325b:	mov    rdi,QWORD PTR [r14+0x308]
  423262:	test   rdi,rdi
  423265:	je     42326c <__flatcc_fb_clear_parser@@Base+0x9c>
  423267:	call   406040 <free@plt>
  42326c:	mov    rdi,QWORD PTR [r14+0x310]
  423273:	test   rdi,rdi
  423276:	je     42327d <__flatcc_fb_clear_parser@@Base+0xad>
  423278:	call   406040 <free@plt>
  42327d:	mov    rdi,QWORD PTR [r14+0x318]
  423284:	test   rdi,rdi
  423287:	je     42328e <__flatcc_fb_clear_parser@@Base+0xbe>
  423289:	call   406040 <free@plt>
  42328e:	mov    rdi,QWORD PTR [r14+0x348]
  423295:	test   rdi,rdi
  423298:	je     42329f <__flatcc_fb_clear_parser@@Base+0xcf>
  42329a:	call   406040 <free@plt>
  42329f:	lea    rdi,[r14+0x268]
  4232a6:	lea    rsi,[rip+0x53]        # 423300 <__flatcc_fb_clear_parser@@Base+0x130>
  4232ad:	xor    edx,edx
  4232af:	call   41a770 <fb_scope_table_destroy@@Base>
  4232b4:	mov    rdi,QWORD PTR [r14+0x58]
  4232b8:	test   rdi,rdi
  4232bb:	je     4232d0 <__flatcc_fb_clear_parser@@Base+0x100>
  4232bd:	nop    DWORD PTR [rax]
  4232c0:	mov    rbx,QWORD PTR [rdi]
  4232c3:	call   406040 <free@plt>
  4232c8:	mov    rdi,rbx
  4232cb:	test   rbx,rbx
  4232ce:	jne    4232c0 <__flatcc_fb_clear_parser@@Base+0xf0>
  4232d0:	mov    rdi,QWORD PTR [r14+0x20]
  4232d4:	test   rdi,rdi
  4232d7:	je     4232de <__flatcc_fb_clear_parser@@Base+0x10e>
  4232d9:	call   406040 <free@plt>
  4232de:	xor    esi,esi
  4232e0:	mov    edx,0x358
  4232e5:	mov    rdi,r14
  4232e8:	add    rsp,0x8
  4232ec:	pop    rbx
  4232ed:	pop    r14
  4232ef:	jmp    406110 <memset@plt>
  4232f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4232fe:	xchg   ax,ax
  423300:	lea    rdi,[rsi+0x8]
  423304:	jmp    41a030 <fb_symbol_table_clear@@Base>
  423309:	nop    DWORD PTR [rax+0x0]
  423310:	push   rbp
  423311:	push   r15
  423313:	push   r14
  423315:	push   r13
  423317:	push   r12
  423319:	push   rbx
  42331a:	push   rax
  42331b:	mov    r14,rsi
  42331e:	mov    rbx,rdi
  423321:	mov    WORD PTR [rsi+0x10],0x2
  423327:	mov    QWORD PTR [rsi],0x0
  42332e:	mov    DWORD PTR [rsi+0x8],0x0
  423335:	lea    r13,[rip+0x24f10]        # 44824c <fb_schema_table_deleted@@Base+0x31c>
  42333c:	lea    r12,[rip+0x25440]        # 448783 <fb_schema_table_deleted@@Base+0x853>
  423343:	lea    r15,[rip+0x253ef]        # 448739 <fb_schema_table_deleted@@Base+0x809>
  42334a:	jmp    423358 <__flatcc_fb_clear_parser@@Base+0x188>
  42334c:	nop    DWORD PTR [rax+0x0]
  423350:	mov    rdi,rbx
  423353:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  423358:	mov    rsi,QWORD PTR [rbx+0x48]
  42335c:	mov    rax,QWORD PTR [rsi+0x20]
  423360:	add    rax,0xfffffffffffffffa
  423364:	cmp    rax,0x11
  423368:	ja     423482 <__flatcc_fb_clear_parser@@Base+0x2b2>
  42336e:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  423373:	add    rax,r13
  423376:	jmp    rax
  423378:	mov    WORD PTR [r14+0x10],0x1
  42337f:	test   rsi,rsi
  423382:	je     42341f <__flatcc_fb_clear_parser@@Base+0x24f>
  423388:	mov    rax,rbx
  42338b:	nop    DWORD PTR [rax+rax*1+0x0]
  423390:	cmp    QWORD PTR [rax+0x28],rsi
  423394:	ja     4233a0 <__flatcc_fb_clear_parser@@Base+0x1d0>
  423396:	cmp    QWORD PTR [rax+0x30],rsi
  42339a:	ja     423439 <__flatcc_fb_clear_parser@@Base+0x269>
  4233a0:	mov    rax,QWORD PTR [rax]
  4233a3:	test   rax,rax
  4233a6:	jne    423390 <__flatcc_fb_clear_parser@@Base+0x1c0>
  4233a8:	lea    rdx,[rip+0xd984]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  4233af:	jmp    423440 <__flatcc_fb_clear_parser@@Base+0x270>
  4233b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4233be:	xchg   ax,ax
  4233c0:	mov    WORD PTR [r14+0x10],0x1
  4233c7:	xor    ecx,ecx
  4233c9:	xor    r8d,r8d
  4233cc:	xor    r9d,r9d
  4233cf:	mov    rdi,rbx
  4233d2:	mov    rdx,r12
  4233d5:	jmp    423415 <__flatcc_fb_clear_parser@@Base+0x245>
  4233d7:	nop    WORD PTR [rax+rax*1+0x0]
  4233e0:	cmp    QWORD PTR [r14],0x0
  4233e4:	jne    423350 <__flatcc_fb_clear_parser@@Base+0x180>
  4233ea:	mov    rax,QWORD PTR [rsi]
  4233ed:	mov    QWORD PTR [r14],rax
  4233f0:	jmp    423350 <__flatcc_fb_clear_parser@@Base+0x180>
  4233f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4233ff:	nop
  423400:	mov    WORD PTR [r14+0x10],0x1
  423407:	xor    ecx,ecx
  423409:	xor    r8d,r8d
  42340c:	xor    r9d,r9d
  42340f:	mov    rdi,rbx
  423412:	mov    rdx,r15
  423415:	call   41c7d0 <__flatcc_error_report@@Base>
  42341a:	jmp    423350 <__flatcc_fb_clear_parser@@Base+0x180>
  42341f:	xor    eax,eax
  423421:	mov    rdi,rbx
  423424:	lea    rsi,[rip+0x24ff7]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  42342b:	lea    rdx,[rip+0x25325]        # 448757 <fb_schema_table_deleted@@Base+0x827>
  423432:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  423437:	jmp    423476 <__flatcc_fb_clear_parser@@Base+0x2a6>
  423439:	mov    rdx,QWORD PTR [rax+0x318]
  423440:	mov    rcx,QWORD PTR [rsi+0x10]
  423444:	mov    r8,QWORD PTR [rsi+0x18]
  423448:	mov    r9d,0x1
  42344e:	mov    eax,0x0
  423453:	mov    rdi,rbx
  423456:	lea    rsi,[rip+0x24f73]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  42345d:	lea    rbp,[rip+0x252f3]        # 448757 <fb_schema_table_deleted@@Base+0x827>
  423464:	push   rbp
  423465:	lea    rbp,[rip+0x25315]        # 448781 <fb_schema_table_deleted@@Base+0x851>
  42346c:	push   rbp
  42346d:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  423472:	add    rsp,0x10
  423476:	add    DWORD PTR [rbx+0xd0],0x1
  42347d:	jmp    423350 <__flatcc_fb_clear_parser@@Base+0x180>
  423482:	lea    rdx,[rip+0x25319]        # 4487a2 <fb_schema_table_deleted@@Base+0x872>
  423489:	xor    ecx,ecx
  42348b:	xor    r8d,r8d
  42348e:	xor    r9d,r9d
  423491:	mov    rdi,rbx
  423494:	call   41c7d0 <__flatcc_error_report@@Base>
  423499:	mov    WORD PTR [r14+0x10],0x1
  4234a0:	mov    rax,QWORD PTR [r14]
  4234a3:	test   rax,rax
  4234a6:	je     4234b4 <__flatcc_fb_clear_parser@@Base+0x2e4>
  4234a8:	mov    rcx,QWORD PTR [rbx+0x48]
  4234ac:	mov    ecx,DWORD PTR [rcx]
  4234ae:	sub    ecx,eax
  4234b0:	mov    DWORD PTR [r14+0x8],ecx
  4234b4:	mov    rbp,QWORD PTR [rbx+0x48]
  4234b8:	cmp    QWORD PTR [rbp+0x20],0x16
  4234bd:	jne    4234d5 <__flatcc_fb_clear_parser@@Base+0x305>
  4234bf:	mov    rdi,rbx
  4234c2:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  4234c7:	test   rbp,rbp
  4234ca:	jne    42356f <__flatcc_fb_clear_parser@@Base+0x39f>
  4234d0:	jmp    423568 <__flatcc_fb_clear_parser@@Base+0x398>
  4234d5:	test   rbp,rbp
  4234d8:	je     423516 <__flatcc_fb_clear_parser@@Base+0x346>
  4234da:	mov    rax,QWORD PTR [rbp+0x0]
  4234de:	xor    r9d,r9d
  4234e1:	lea    rdx,[rip+0xd84b]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  4234e8:	mov    r10,rdx
  4234eb:	test   rax,rax
  4234ee:	je     4234f7 <__flatcc_fb_clear_parser@@Base+0x327>
  4234f0:	mov    r9d,DWORD PTR [rbp+0x8]
  4234f4:	mov    r10,rax
  4234f7:	mov    rax,rbx
  4234fa:	nop    WORD PTR [rax+rax*1+0x0]
  423500:	cmp    QWORD PTR [rax+0x28],rbp
  423504:	ja     42350c <__flatcc_fb_clear_parser@@Base+0x33c>
  423506:	cmp    QWORD PTR [rax+0x30],rbp
  42350a:	ja     423530 <__flatcc_fb_clear_parser@@Base+0x360>
  42350c:	mov    rax,QWORD PTR [rax]
  42350f:	test   rax,rax
  423512:	jne    423500 <__flatcc_fb_clear_parser@@Base+0x330>
  423514:	jmp    423537 <__flatcc_fb_clear_parser@@Base+0x367>
  423516:	lea    rsi,[rip+0x24f05]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  42351d:	lea    rdx,[rip+0x252a9]        # 4487cd <fb_schema_table_deleted@@Base+0x89d>
  423524:	xor    eax,eax
  423526:	mov    rdi,rbx
  423529:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  42352e:	jmp    423561 <__flatcc_fb_clear_parser@@Base+0x391>
  423530:	mov    rdx,QWORD PTR [rax+0x318]
  423537:	mov    rcx,QWORD PTR [rbp+0x10]
  42353b:	mov    r8,QWORD PTR [rbp+0x18]
  42353f:	lea    rbp,[rip+0x25287]        # 4487cd <fb_schema_table_deleted@@Base+0x89d>
  423546:	lea    rsi,[rip+0x24e83]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  42354d:	mov    eax,0x0
  423552:	mov    rdi,rbx
  423555:	push   rbp
  423556:	push   r10
  423558:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  42355d:	add    rsp,0x10
  423561:	add    DWORD PTR [rbx+0xd0],0x1
  423568:	mov    WORD PTR [r14+0x10],0x1
  42356f:	add    rsp,0x8
  423573:	pop    rbx
  423574:	pop    r12
  423576:	pop    r13
  423578:	pop    r14
  42357a:	pop    r15
  42357c:	pop    rbp
  42357d:	ret    
  42357e:	xchg   ax,ax
  423580:	push   rbp
  423581:	push   r15
  423583:	push   r14
  423585:	push   r13
  423587:	push   r12
  423589:	push   rbx
  42358a:	push   rax
  42358b:	mov    rbx,rdi
  42358e:	mov    rbp,QWORD PTR [rdi+0x48]
  423592:	cmp    QWORD PTR [rbp+0x20],0x9
  423597:	jne    423e2e <__flatcc_fb_clear_parser@@Base+0xc5e>
  42359d:	mov    r15,rdx
  4235a0:	mov    r14,rsi
  4235a3:	mov    rdi,rbx
  4235a6:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  4235ab:	test   rbp,rbp
  4235ae:	je     423fb0 <__flatcc_fb_clear_parser@@Base+0xde0>
  4235b4:	mov    QWORD PTR [r14+0x8],rbp
  4235b8:	mov    rdi,rbx
  4235bb:	call   4241a0 <__flatcc_fb_clear_parser@@Base+0xfd0>
  4235c0:	mov    QWORD PTR [r14+0x38],rax
  4235c4:	mov    rbp,QWORD PTR [rbx+0x48]
  4235c8:	cmp    QWORD PTR [rbp+0x20],0x7b
  4235cd:	jne    423e89 <__flatcc_fb_clear_parser@@Base+0xcb9>
  4235d3:	mov    rdi,rbx
  4235d6:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  4235db:	test   rbp,rbp
  4235de:	je     423fb0 <__flatcc_fb_clear_parser@@Base+0xde0>
  4235e4:	mov    r12,QWORD PTR [rbx+0x48]
  4235e8:	cmp    QWORD PTR [r12+0x20],0x7d
  4235ee:	mov    rbp,r12
  4235f1:	je     423ef8 <__flatcc_fb_clear_parser@@Base+0xd28>
  4235f7:	nop    WORD PTR [rax+rax*1+0x0]
  423600:	mov    r13,QWORD PTR [rbx+0x60]
  423604:	lea    rax,[r13+0xb0]
  42360b:	cmp    rax,QWORD PTR [rbx+0x50]
  42360f:	jbe    42364d <__flatcc_fb_clear_parser@@Base+0x47d>
  423611:	mov    edi,0x10000
  423616:	mov    esi,0x1
  42361b:	call   406150 <calloc@plt>
  423620:	test   rax,rax
  423623:	je     423fea <__flatcc_fb_clear_parser@@Base+0xe1a>
  423629:	mov    rcx,QWORD PTR [rbx+0x58]
  42362d:	mov    QWORD PTR [rax],rcx
  423630:	mov    QWORD PTR [rbx+0x58],rax
  423634:	lea    r13,[rax+0x10]
  423638:	mov    QWORD PTR [rbx+0x60],r13
  42363c:	lea    rcx,[rax+0x10000]
  423643:	mov    QWORD PTR [rbx+0x50],rcx
  423647:	add    rax,0xc0
  42364d:	mov    QWORD PTR [rbx+0x60],rax
  423651:	mov    rax,QWORD PTR [r14+0x28]
  423655:	mov    QWORD PTR [r13+0x0],rax
  423659:	mov    WORD PTR [r13+0x10],0x5
  423660:	mov    QWORD PTR [r14+0x28],r13
  423664:	mov    rax,QWORD PTR [rbx+0x40]
  423668:	test   rax,rax
  42366b:	je     423690 <__flatcc_fb_clear_parser@@Base+0x4c0>
  42366d:	xor    edx,edx
  42366f:	nop
  423670:	mov    rcx,rax
  423673:	mov    rax,QWORD PTR [rax]
  423676:	mov    QWORD PTR [rcx],rdx
  423679:	mov    rdx,rcx
  42367c:	test   rax,rax
  42367f:	jne    423670 <__flatcc_fb_clear_parser@@Base+0x4a0>
  423681:	jmp    423692 <__flatcc_fb_clear_parser@@Base+0x4c2>
  423683:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42368d:	nop    DWORD PTR [rax]
  423690:	xor    ecx,ecx
  423692:	mov    QWORD PTR [r13+0x68],rcx
  423696:	mov    QWORD PTR [rbx+0x40],0x0
  42369e:	mov    rbp,QWORD PTR [rbx+0x48]
  4236a2:	mov    rax,QWORD PTR [rbp+0x20]
  4236a6:	cmp    r15,0xfffffffffffffc39
  4236ad:	jne    4237b0 <__flatcc_fb_clear_parser@@Base+0x5e0>
  4236b3:	cmp    rax,0x9
  4236b7:	jne    42385b <__flatcc_fb_clear_parser@@Base+0x68b>
  4236bd:	mov    rdi,rbx
  4236c0:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  4236c5:	test   rbp,rbp
  4236c8:	je     423db8 <__flatcc_fb_clear_parser@@Base+0xbe8>
  4236ce:	mov    QWORD PTR [r13+0x8],rbp
  4236d2:	mov    rbp,QWORD PTR [rbx+0x48]
  4236d6:	cmp    QWORD PTR [rbp+0x20],0x28
  4236db:	jne    42393e <__flatcc_fb_clear_parser@@Base+0x76e>
  4236e1:	mov    rdi,rbx
  4236e4:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  4236e9:	test   rbp,rbp
  4236ec:	je     423db8 <__flatcc_fb_clear_parser@@Base+0xbe8>
  4236f2:	lea    rsi,[r13+0x30]
  4236f6:	mov    rdi,rbx
  4236f9:	call   424910 <__flatcc_fb_clear_parser@@Base+0x1740>
  4236fe:	mov    rbp,QWORD PTR [rbx+0x48]
  423702:	cmp    QWORD PTR [rbp+0x20],0x29
  423707:	jne    423a72 <__flatcc_fb_clear_parser@@Base+0x8a2>
  42370d:	mov    rdi,rbx
  423710:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  423715:	test   rbp,rbp
  423718:	je     423db8 <__flatcc_fb_clear_parser@@Base+0xbe8>
  42371e:	mov    rbp,QWORD PTR [rbx+0x48]
  423722:	cmp    QWORD PTR [rbp+0x20],0x3a
  423727:	jne    423be8 <__flatcc_fb_clear_parser@@Base+0xa18>
  42372d:	mov    rdi,rbx
  423730:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  423735:	test   rbp,rbp
  423738:	je     423db8 <__flatcc_fb_clear_parser@@Base+0xbe8>
  42373e:	lea    rsi,[r13+0x18]
  423742:	mov    rdi,rbx
  423745:	call   424910 <__flatcc_fb_clear_parser@@Base+0x1740>
  42374a:	mov    rbp,QWORD PTR [rbx+0x48]
  42374e:	cmp    QWORD PTR [rbp+0x20],0x3d
  423753:	jne    423caa <__flatcc_fb_clear_parser@@Base+0xada>
  423759:	mov    rdi,rbx
  42375c:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  423761:	test   rbp,rbp
  423764:	je     423caa <__flatcc_fb_clear_parser@@Base+0xada>
  42376a:	mov    rax,QWORD PTR [rbp+0x0]
  42376e:	xor    r9d,r9d
  423771:	lea    r10,[rip+0xd5bb]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  423778:	test   rax,rax
  42377b:	je     423784 <__flatcc_fb_clear_parser@@Base+0x5b4>
  42377d:	mov    r9d,DWORD PTR [rbp+0x8]
  423781:	mov    r10,rax
  423784:	mov    rax,rbx
  423787:	cmp    QWORD PTR [rax+0x28],rbp
  42378b:	ja     423797 <__flatcc_fb_clear_parser@@Base+0x5c7>
  42378d:	cmp    QWORD PTR [rax+0x30],rbp
  423791:	ja     423d72 <__flatcc_fb_clear_parser@@Base+0xba2>
  423797:	mov    rax,QWORD PTR [rax]
  42379a:	test   rax,rax
  42379d:	jne    423787 <__flatcc_fb_clear_parser@@Base+0x5b7>
  42379f:	lea    rdx,[rip+0xd58d]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  4237a6:	jmp    423d79 <__flatcc_fb_clear_parser@@Base+0xba9>
  4237ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4237b0:	cmp    rax,0x9
  4237b4:	jne    4238b4 <__flatcc_fb_clear_parser@@Base+0x6e4>
  4237ba:	mov    rdi,rbx
  4237bd:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  4237c2:	test   rbp,rbp
  4237c5:	je     423b88 <__flatcc_fb_clear_parser@@Base+0x9b8>
  4237cb:	mov    QWORD PTR [r13+0x8],rbp
  4237cf:	mov    rbp,QWORD PTR [rbx+0x48]
  4237d3:	cmp    QWORD PTR [rbp+0x20],0x3a
  4237d8:	jne    423994 <__flatcc_fb_clear_parser@@Base+0x7c4>
  4237de:	mov    rdi,rbx
  4237e1:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  4237e6:	test   rbp,rbp
  4237e9:	je     423b88 <__flatcc_fb_clear_parser@@Base+0x9b8>
  4237ef:	lea    rsi,[r13+0x18]
  4237f3:	mov    rdi,rbx
  4237f6:	call   424910 <__flatcc_fb_clear_parser@@Base+0x1740>
  4237fb:	mov    rbp,QWORD PTR [rbx+0x48]
  4237ff:	cmp    QWORD PTR [rbp+0x20],0x3d
  423804:	jne    42382b <__flatcc_fb_clear_parser@@Base+0x65b>
  423806:	mov    rdi,rbx
  423809:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  42380e:	test   rbp,rbp
  423811:	je     42382b <__flatcc_fb_clear_parser@@Base+0x65b>
  423813:	lea    rsi,[r13+0x48]
  423817:	mov    edx,0x2
  42381c:	mov    rdi,rbx
  42381f:	lea    rcx,[rip+0x2562a]        # 448e50 <fb_schema_table_deleted@@Base+0xf20>
  423826:	call   424420 <__flatcc_fb_clear_parser@@Base+0x1250>
  42382b:	mov    rdi,rbx
  42382e:	call   4241a0 <__flatcc_fb_clear_parser@@Base+0xfd0>
  423833:	mov    QWORD PTR [r13+0x60],rax
  423837:	mov    QWORD PTR [rbx+0x40],0x0
  42383f:	mov    rax,QWORD PTR [rbx+0x48]
  423843:	cmp    QWORD PTR [rax+0x20],0x3b
  423848:	jne    423ac4 <__flatcc_fb_clear_parser@@Base+0x8f4>
  42384e:	mov    rdi,rbx
  423851:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  423856:	jmp    423de1 <__flatcc_fb_clear_parser@@Base+0xc11>
  42385b:	test   rbp,rbp
  42385e:	je     423904 <__flatcc_fb_clear_parser@@Base+0x734>
  423864:	mov    rax,QWORD PTR [rbp+0x0]
  423868:	xor    r9d,r9d
  42386b:	lea    r10,[rip+0xd4c1]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  423872:	test   rax,rax
  423875:	je     42387e <__flatcc_fb_clear_parser@@Base+0x6ae>
  423877:	mov    r9d,DWORD PTR [rbp+0x8]
  42387b:	mov    r10,rax
  42387e:	mov    rax,rbx
  423881:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42388b:	nop    DWORD PTR [rax+rax*1+0x0]
  423890:	cmp    QWORD PTR [rax+0x28],rbp
  423894:	ja     4238a0 <__flatcc_fb_clear_parser@@Base+0x6d0>
  423896:	cmp    QWORD PTR [rax+0x30],rbp
  42389a:	ja     4239e4 <__flatcc_fb_clear_parser@@Base+0x814>
  4238a0:	mov    rax,QWORD PTR [rax]
  4238a3:	test   rax,rax
  4238a6:	jne    423890 <__flatcc_fb_clear_parser@@Base+0x6c0>
  4238a8:	lea    rdx,[rip+0xd484]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  4238af:	jmp    4239eb <__flatcc_fb_clear_parser@@Base+0x81b>
  4238b4:	test   rbp,rbp
  4238b7:	je     423921 <__flatcc_fb_clear_parser@@Base+0x751>
  4238b9:	mov    rax,QWORD PTR [rbp+0x0]
  4238bd:	xor    r9d,r9d
  4238c0:	lea    r10,[rip+0xd46c]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  4238c7:	test   rax,rax
  4238ca:	je     4238d3 <__flatcc_fb_clear_parser@@Base+0x703>
  4238cc:	mov    r9d,DWORD PTR [rbp+0x8]
  4238d0:	mov    r10,rax
  4238d3:	mov    rax,rbx
  4238d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4238e0:	cmp    QWORD PTR [rax+0x28],rbp
  4238e4:	ja     4238f0 <__flatcc_fb_clear_parser@@Base+0x720>
  4238e6:	cmp    QWORD PTR [rax+0x30],rbp
  4238ea:	ja     423a0e <__flatcc_fb_clear_parser@@Base+0x83e>
  4238f0:	mov    rax,QWORD PTR [rax]
  4238f3:	test   rax,rax
  4238f6:	jne    4238e0 <__flatcc_fb_clear_parser@@Base+0x710>
  4238f8:	lea    rdx,[rip+0xd434]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  4238ff:	jmp    423a15 <__flatcc_fb_clear_parser@@Base+0x845>
  423904:	xor    eax,eax
  423906:	mov    rdi,rbx
  423909:	lea    rsi,[rip+0x24b12]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  423910:	lea    rdx,[rip+0x25380]        # 448c97 <fb_schema_table_deleted@@Base+0xd67>
  423917:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  42391c:	jmp    423da3 <__flatcc_fb_clear_parser@@Base+0xbd3>
  423921:	xor    eax,eax
  423923:	mov    rdi,rbx
  423926:	lea    rsi,[rip+0x24af5]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  42392d:	lea    rdx,[rip+0x254d9]        # 448e0d <fb_schema_table_deleted@@Base+0xedd>
  423934:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  423939:	jmp    423b6f <__flatcc_fb_clear_parser@@Base+0x99f>
  42393e:	test   rbp,rbp
  423941:	je     423a38 <__flatcc_fb_clear_parser@@Base+0x868>
  423947:	mov    rax,QWORD PTR [rbp+0x0]
  42394b:	xor    r9d,r9d
  42394e:	lea    r10,[rip+0xd3de]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  423955:	test   rax,rax
  423958:	je     423961 <__flatcc_fb_clear_parser@@Base+0x791>
  42395a:	mov    r9d,DWORD PTR [rbp+0x8]
  42395e:	mov    r10,rax
  423961:	mov    rax,rbx
  423964:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42396e:	xchg   ax,ax
  423970:	cmp    QWORD PTR [rax+0x28],rbp
  423974:	ja     423980 <__flatcc_fb_clear_parser@@Base+0x7b0>
  423976:	cmp    QWORD PTR [rax+0x30],rbp
  42397a:	ja     423b14 <__flatcc_fb_clear_parser@@Base+0x944>
  423980:	mov    rax,QWORD PTR [rax]
  423983:	test   rax,rax
  423986:	jne    423970 <__flatcc_fb_clear_parser@@Base+0x7a0>
  423988:	lea    rdx,[rip+0xd3a4]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  42398f:	jmp    423b1b <__flatcc_fb_clear_parser@@Base+0x94b>
  423994:	test   rbp,rbp
  423997:	je     423a55 <__flatcc_fb_clear_parser@@Base+0x885>
  42399d:	mov    rax,QWORD PTR [rbp+0x0]
  4239a1:	xor    r9d,r9d
  4239a4:	lea    r10,[rip+0xd388]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  4239ab:	test   rax,rax
  4239ae:	je     4239b7 <__flatcc_fb_clear_parser@@Base+0x7e7>
  4239b0:	mov    r9d,DWORD PTR [rbp+0x8]
  4239b4:	mov    r10,rax
  4239b7:	mov    rax,rbx
  4239ba:	nop    WORD PTR [rax+rax*1+0x0]
  4239c0:	cmp    QWORD PTR [rax+0x28],rbp
  4239c4:	ja     4239d0 <__flatcc_fb_clear_parser@@Base+0x800>
  4239c6:	cmp    QWORD PTR [rax+0x30],rbp
  4239ca:	ja     423b3e <__flatcc_fb_clear_parser@@Base+0x96e>
  4239d0:	mov    rax,QWORD PTR [rax]
  4239d3:	test   rax,rax
  4239d6:	jne    4239c0 <__flatcc_fb_clear_parser@@Base+0x7f0>
  4239d8:	lea    rdx,[rip+0xd354]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  4239df:	jmp    423b45 <__flatcc_fb_clear_parser@@Base+0x975>
  4239e4:	mov    rdx,QWORD PTR [rax+0x318]
  4239eb:	mov    rcx,QWORD PTR [rbp+0x10]
  4239ef:	mov    r8,QWORD PTR [rbp+0x18]
  4239f3:	mov    eax,0x0
  4239f8:	mov    rdi,rbx
  4239fb:	lea    rsi,[rip+0x249ce]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  423a02:	lea    rbp,[rip+0x2528e]        # 448c97 <fb_schema_table_deleted@@Base+0xd67>
  423a09:	jmp    423d97 <__flatcc_fb_clear_parser@@Base+0xbc7>
  423a0e:	mov    rdx,QWORD PTR [rax+0x318]
  423a15:	mov    rcx,QWORD PTR [rbp+0x10]
  423a19:	mov    r8,QWORD PTR [rbp+0x18]
  423a1d:	mov    eax,0x0
  423a22:	mov    rdi,rbx
  423a25:	lea    rsi,[rip+0x249a4]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  423a2c:	lea    rbp,[rip+0x253da]        # 448e0d <fb_schema_table_deleted@@Base+0xedd>
  423a33:	jmp    423b63 <__flatcc_fb_clear_parser@@Base+0x993>
  423a38:	xor    eax,eax
  423a3a:	mov    rdi,rbx
  423a3d:	lea    rsi,[rip+0x249de]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  423a44:	lea    rdx,[rip+0x25267]        # 448cb2 <fb_schema_table_deleted@@Base+0xd82>
  423a4b:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  423a50:	jmp    423da3 <__flatcc_fb_clear_parser@@Base+0xbd3>
  423a55:	xor    eax,eax
  423a57:	mov    rdi,rbx
  423a5a:	lea    rsi,[rip+0x249c1]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  423a61:	lea    rdx,[rip+0x253bf]        # 448e27 <fb_schema_table_deleted@@Base+0xef7>
  423a68:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  423a6d:	jmp    423b6f <__flatcc_fb_clear_parser@@Base+0x99f>
  423a72:	test   rbp,rbp
  423a75:	je     423bae <__flatcc_fb_clear_parser@@Base+0x9de>
  423a7b:	mov    rax,QWORD PTR [rbp+0x0]
  423a7f:	xor    r9d,r9d
  423a82:	lea    r10,[rip+0xd2aa]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  423a89:	test   rax,rax
  423a8c:	je     423a95 <__flatcc_fb_clear_parser@@Base+0x8c5>
  423a8e:	mov    r9d,DWORD PTR [rbp+0x8]
  423a92:	mov    r10,rax
  423a95:	mov    rax,rbx
  423a98:	nop    DWORD PTR [rax+rax*1+0x0]
  423aa0:	cmp    QWORD PTR [rax+0x28],rbp
  423aa4:	ja     423ab0 <__flatcc_fb_clear_parser@@Base+0x8e0>
  423aa6:	cmp    QWORD PTR [rax+0x30],rbp
  423aaa:	ja     423c32 <__flatcc_fb_clear_parser@@Base+0xa62>
  423ab0:	mov    rax,QWORD PTR [rax]
  423ab3:	test   rax,rax
  423ab6:	jne    423aa0 <__flatcc_fb_clear_parser@@Base+0x8d0>
  423ab8:	lea    rdx,[rip+0xd274]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  423abf:	jmp    423c39 <__flatcc_fb_clear_parser@@Base+0xa69>
  423ac4:	test   rax,rax
  423ac7:	je     423bcb <__flatcc_fb_clear_parser@@Base+0x9fb>
  423acd:	mov    rcx,QWORD PTR [rax]
  423ad0:	xor    r9d,r9d
  423ad3:	lea    rbp,[rip+0xd259]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  423ada:	mov    r10,rbp
  423add:	test   rcx,rcx
  423ae0:	je     423ae9 <__flatcc_fb_clear_parser@@Base+0x919>
  423ae2:	mov    r9d,DWORD PTR [rax+0x8]
  423ae6:	mov    r10,rcx
  423ae9:	mov    rcx,rbx
  423aec:	nop    DWORD PTR [rax+0x0]
  423af0:	cmp    QWORD PTR [rcx+0x28],rax
  423af4:	ja     423b00 <__flatcc_fb_clear_parser@@Base+0x930>
  423af6:	cmp    QWORD PTR [rcx+0x30],rax
  423afa:	ja     423c5c <__flatcc_fb_clear_parser@@Base+0xa8c>
  423b00:	mov    rcx,QWORD PTR [rcx]
  423b03:	test   rcx,rcx
  423b06:	jne    423af0 <__flatcc_fb_clear_parser@@Base+0x920>
  423b08:	lea    rdx,[rip+0xd224]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  423b0f:	jmp    423c63 <__flatcc_fb_clear_parser@@Base+0xa93>
  423b14:	mov    rdx,QWORD PTR [rax+0x318]
  423b1b:	mov    rcx,QWORD PTR [rbp+0x10]
  423b1f:	mov    r8,QWORD PTR [rbp+0x18]
  423b23:	mov    eax,0x0
  423b28:	mov    rdi,rbx
  423b2b:	lea    rsi,[rip+0x2489e]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  423b32:	lea    rbp,[rip+0x25179]        # 448cb2 <fb_schema_table_deleted@@Base+0xd82>
  423b39:	jmp    423d97 <__flatcc_fb_clear_parser@@Base+0xbc7>
  423b3e:	mov    rdx,QWORD PTR [rax+0x318]
  423b45:	mov    rcx,QWORD PTR [rbp+0x10]
  423b49:	mov    r8,QWORD PTR [rbp+0x18]
  423b4d:	mov    eax,0x0
  423b52:	mov    rdi,rbx
  423b55:	lea    rsi,[rip+0x24874]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  423b5c:	lea    rbp,[rip+0x252c4]        # 448e27 <fb_schema_table_deleted@@Base+0xef7>
  423b63:	push   rbp
  423b64:	push   r10
  423b66:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  423b6b:	add    rsp,0x10
  423b6f:	add    DWORD PTR [rbx+0xd0],0x1
  423b76:	jmp    423b88 <__flatcc_fb_clear_parser@@Base+0x9b8>
  423b78:	nop    DWORD PTR [rax+rax*1+0x0]
  423b80:	mov    rdi,rbx
  423b83:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  423b88:	mov    rax,QWORD PTR [rbx+0x48]
  423b8c:	mov    rax,QWORD PTR [rax+0x20]
  423b90:	test   rax,rax
  423b93:	je     423de1 <__flatcc_fb_clear_parser@@Base+0xc11>
  423b99:	cmp    rax,0x7d
  423b9d:	je     423dd9 <__flatcc_fb_clear_parser@@Base+0xc09>
  423ba3:	cmp    rax,0x3b
  423ba7:	jne    423b80 <__flatcc_fb_clear_parser@@Base+0x9b0>
  423ba9:	jmp    423dd1 <__flatcc_fb_clear_parser@@Base+0xc01>
  423bae:	xor    eax,eax
  423bb0:	mov    rdi,rbx
  423bb3:	lea    rsi,[rip+0x24868]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  423bba:	lea    rdx,[rip+0x25116]        # 448cd7 <fb_schema_table_deleted@@Base+0xda7>
  423bc1:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  423bc6:	jmp    423da3 <__flatcc_fb_clear_parser@@Base+0xbd3>
  423bcb:	xor    eax,eax
  423bcd:	mov    rdi,rbx
  423bd0:	lea    rsi,[rip+0x2484b]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  423bd7:	lea    rdx,[rip+0x25295]        # 448e73 <fb_schema_table_deleted@@Base+0xf43>
  423bde:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  423be3:	jmp    423c8d <__flatcc_fb_clear_parser@@Base+0xabd>
  423be8:	test   rbp,rbp
  423beb:	je     423d19 <__flatcc_fb_clear_parser@@Base+0xb49>
  423bf1:	mov    rax,QWORD PTR [rbp+0x0]
  423bf5:	xor    r9d,r9d
  423bf8:	lea    r10,[rip+0xd134]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  423bff:	test   rax,rax
  423c02:	je     423c0b <__flatcc_fb_clear_parser@@Base+0xa3b>
  423c04:	mov    r9d,DWORD PTR [rbp+0x8]
  423c08:	mov    r10,rax
  423c0b:	mov    rax,rbx
  423c0e:	cmp    QWORD PTR [rax+0x28],rbp
  423c12:	ja     423c1e <__flatcc_fb_clear_parser@@Base+0xa4e>
  423c14:	cmp    QWORD PTR [rax+0x30],rbp
  423c18:	ja     423d33 <__flatcc_fb_clear_parser@@Base+0xb63>
  423c1e:	mov    rax,QWORD PTR [rax]
  423c21:	test   rax,rax
  423c24:	jne    423c0e <__flatcc_fb_clear_parser@@Base+0xa3e>
  423c26:	lea    rdx,[rip+0xd106]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  423c2d:	jmp    423d3a <__flatcc_fb_clear_parser@@Base+0xb6a>
  423c32:	mov    rdx,QWORD PTR [rax+0x318]
  423c39:	mov    rcx,QWORD PTR [rbp+0x10]
  423c3d:	mov    r8,QWORD PTR [rbp+0x18]
  423c41:	mov    eax,0x0
  423c46:	mov    rdi,rbx
  423c49:	lea    rsi,[rip+0x24780]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  423c50:	lea    rbp,[rip+0x25080]        # 448cd7 <fb_schema_table_deleted@@Base+0xda7>
  423c57:	jmp    423d97 <__flatcc_fb_clear_parser@@Base+0xbc7>
  423c5c:	mov    rdx,QWORD PTR [rcx+0x318]
  423c63:	mov    rcx,QWORD PTR [rax+0x10]
  423c67:	mov    r8,QWORD PTR [rax+0x18]
  423c6b:	mov    eax,0x0
  423c70:	mov    rdi,rbx
  423c73:	lea    rsi,[rip+0x24756]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  423c7a:	lea    rbp,[rip+0x251f2]        # 448e73 <fb_schema_table_deleted@@Base+0xf43>
  423c81:	push   rbp
  423c82:	push   r10
  423c84:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  423c89:	add    rsp,0x10
  423c8d:	mov    eax,DWORD PTR [rbx+0xd0]
  423c93:	add    eax,0x1
  423c96:	mov    DWORD PTR [rbx+0xd0],eax
  423c9c:	cmp    eax,0x9
  423c9f:	jle    423df0 <__flatcc_fb_clear_parser@@Base+0xc20>
  423ca5:	jmp    423fb0 <__flatcc_fb_clear_parser@@Base+0xde0>
  423caa:	mov    rdi,rbx
  423cad:	call   4241a0 <__flatcc_fb_clear_parser@@Base+0xfd0>
  423cb2:	mov    QWORD PTR [r13+0x60],rax
  423cb6:	mov    QWORD PTR [rbx+0x40],0x0
  423cbe:	mov    rax,QWORD PTR [rbx+0x48]
  423cc2:	cmp    QWORD PTR [rax+0x20],0x3b
  423cc7:	je     42384e <__flatcc_fb_clear_parser@@Base+0x67e>
  423ccd:	test   rax,rax
  423cd0:	je     423d5a <__flatcc_fb_clear_parser@@Base+0xb8a>
  423cd6:	mov    rcx,QWORD PTR [rax]
  423cd9:	xor    r9d,r9d
  423cdc:	lea    rbp,[rip+0xd050]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  423ce3:	mov    r10,rbp
  423ce6:	test   rcx,rcx
  423ce9:	je     423cf2 <__flatcc_fb_clear_parser@@Base+0xb22>
  423ceb:	mov    r9d,DWORD PTR [rax+0x8]
  423cef:	mov    r10,rcx
  423cf2:	mov    rcx,rbx
  423cf5:	cmp    QWORD PTR [rcx+0x28],rax
  423cf9:	ja     423d05 <__flatcc_fb_clear_parser@@Base+0xb35>
  423cfb:	cmp    QWORD PTR [rcx+0x30],rax
  423cff:	ja     423e04 <__flatcc_fb_clear_parser@@Base+0xc34>
  423d05:	mov    rcx,QWORD PTR [rcx]
  423d08:	test   rcx,rcx
  423d0b:	jne    423cf5 <__flatcc_fb_clear_parser@@Base+0xb25>
  423d0d:	lea    rdx,[rip+0xd01f]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  423d14:	jmp    423e0b <__flatcc_fb_clear_parser@@Base+0xc3b>
  423d19:	xor    eax,eax
  423d1b:	mov    rdi,rbx
  423d1e:	lea    rsi,[rip+0x246fd]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  423d25:	lea    rdx,[rip+0x24fd2]        # 448cfe <fb_schema_table_deleted@@Base+0xdce>
  423d2c:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  423d31:	jmp    423da3 <__flatcc_fb_clear_parser@@Base+0xbd3>
  423d33:	mov    rdx,QWORD PTR [rax+0x318]
  423d3a:	mov    rcx,QWORD PTR [rbp+0x10]
  423d3e:	mov    r8,QWORD PTR [rbp+0x18]
  423d42:	mov    eax,0x0
  423d47:	mov    rdi,rbx
  423d4a:	lea    rsi,[rip+0x2467f]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  423d51:	lea    rbp,[rip+0x24fa6]        # 448cfe <fb_schema_table_deleted@@Base+0xdce>
  423d58:	jmp    423d97 <__flatcc_fb_clear_parser@@Base+0xbc7>
  423d5a:	xor    eax,eax
  423d5c:	mov    rdi,rbx
  423d5f:	lea    rsi,[rip+0x246bc]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  423d66:	lea    rdx,[rip+0x24fea]        # 448d57 <fb_schema_table_deleted@@Base+0xe27>
  423d6d:	jmp    423bde <__flatcc_fb_clear_parser@@Base+0xa0e>
  423d72:	mov    rdx,QWORD PTR [rax+0x318]
  423d79:	mov    rcx,QWORD PTR [rbp+0x10]
  423d7d:	mov    r8,QWORD PTR [rbp+0x18]
  423d81:	mov    eax,0x0
  423d86:	mov    rdi,rbx
  423d89:	lea    rsi,[rip+0x24640]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  423d90:	lea    rbp,[rip+0x24f9a]        # 448d31 <fb_schema_table_deleted@@Base+0xe01>
  423d97:	push   rbp
  423d98:	push   r10
  423d9a:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  423d9f:	add    rsp,0x10
  423da3:	add    DWORD PTR [rbx+0xd0],0x1
  423daa:	jmp    423db8 <__flatcc_fb_clear_parser@@Base+0xbe8>
  423dac:	nop    DWORD PTR [rax+0x0]
  423db0:	mov    rdi,rbx
  423db3:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  423db8:	mov    rax,QWORD PTR [rbx+0x48]
  423dbc:	mov    rax,QWORD PTR [rax+0x20]
  423dc0:	test   rax,rax
  423dc3:	je     423de1 <__flatcc_fb_clear_parser@@Base+0xc11>
  423dc5:	cmp    rax,0x7d
  423dc9:	je     423dd9 <__flatcc_fb_clear_parser@@Base+0xc09>
  423dcb:	cmp    rax,0x3b
  423dcf:	jne    423db0 <__flatcc_fb_clear_parser@@Base+0xbe0>
  423dd1:	mov    rdi,rbx
  423dd4:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  423dd9:	mov    QWORD PTR [rbx+0x40],0x0
  423de1:	mov    eax,DWORD PTR [rbx+0xd0]
  423de7:	cmp    eax,0x9
  423dea:	jg     423fb0 <__flatcc_fb_clear_parser@@Base+0xde0>
  423df0:	mov    rbp,QWORD PTR [rbx+0x48]
  423df4:	cmp    QWORD PTR [rbp+0x20],0x7d
  423df9:	jne    423600 <__flatcc_fb_clear_parser@@Base+0x430>
  423dff:	jmp    423ef8 <__flatcc_fb_clear_parser@@Base+0xd28>
  423e04:	mov    rdx,QWORD PTR [rcx+0x318]
  423e0b:	mov    rcx,QWORD PTR [rax+0x10]
  423e0f:	mov    r8,QWORD PTR [rax+0x18]
  423e13:	mov    eax,0x0
  423e18:	mov    rdi,rbx
  423e1b:	lea    rsi,[rip+0x245ae]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  423e22:	lea    rbp,[rip+0x24f2e]        # 448d57 <fb_schema_table_deleted@@Base+0xe27>
  423e29:	jmp    423c81 <__flatcc_fb_clear_parser@@Base+0xab1>
  423e2e:	test   rbp,rbp
  423e31:	je     423e76 <__flatcc_fb_clear_parser@@Base+0xca6>
  423e33:	mov    rax,QWORD PTR [rbp+0x0]
  423e37:	xor    r9d,r9d
  423e3a:	lea    rdx,[rip+0xcef2]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  423e41:	mov    r10,rdx
  423e44:	test   rax,rax
  423e47:	je     423e50 <__flatcc_fb_clear_parser@@Base+0xc80>
  423e49:	mov    r9d,DWORD PTR [rbp+0x8]
  423e4d:	mov    r10,rax
  423e50:	mov    rax,rbx
  423e53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423e5d:	nop    DWORD PTR [rax]
  423e60:	cmp    QWORD PTR [rax+0x28],rbp
  423e64:	ja     423e6c <__flatcc_fb_clear_parser@@Base+0xc9c>
  423e66:	cmp    QWORD PTR [rax+0x30],rbp
  423e6a:	ja     423edd <__flatcc_fb_clear_parser@@Base+0xd0d>
  423e6c:	mov    rax,QWORD PTR [rax]
  423e6f:	test   rax,rax
  423e72:	jne    423e60 <__flatcc_fb_clear_parser@@Base+0xc90>
  423e74:	jmp    423ee4 <__flatcc_fb_clear_parser@@Base+0xd14>
  423e76:	lea    rsi,[rip+0x245a5]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  423e7d:	lea    rdx,[rip+0x24c71]        # 448af5 <fb_schema_table_deleted@@Base+0xbc5>
  423e84:	jmp    423f64 <__flatcc_fb_clear_parser@@Base+0xd94>
  423e89:	test   rbp,rbp
  423e8c:	je     423f56 <__flatcc_fb_clear_parser@@Base+0xd86>
  423e92:	mov    rax,QWORD PTR [rbp+0x0]
  423e96:	xor    r9d,r9d
  423e99:	lea    rdx,[rip+0xce93]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  423ea0:	mov    r10,rdx
  423ea3:	test   rax,rax
  423ea6:	je     423eaf <__flatcc_fb_clear_parser@@Base+0xcdf>
  423ea8:	mov    r9d,DWORD PTR [rbp+0x8]
  423eac:	mov    r10,rax
  423eaf:	mov    rax,rbx
  423eb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423ebc:	nop    DWORD PTR [rax+0x0]
  423ec0:	cmp    QWORD PTR [rax+0x28],rbp
  423ec4:	ja     423ed0 <__flatcc_fb_clear_parser@@Base+0xd00>
  423ec6:	cmp    QWORD PTR [rax+0x30],rbp
  423eca:	ja     423f70 <__flatcc_fb_clear_parser@@Base+0xda0>
  423ed0:	mov    rax,QWORD PTR [rax]
  423ed3:	test   rax,rax
  423ed6:	jne    423ec0 <__flatcc_fb_clear_parser@@Base+0xcf0>
  423ed8:	jmp    423f77 <__flatcc_fb_clear_parser@@Base+0xda7>
  423edd:	mov    rdx,QWORD PTR [rax+0x318]
  423ee4:	mov    rcx,QWORD PTR [rbp+0x10]
  423ee8:	mov    r8,QWORD PTR [rbp+0x18]
  423eec:	lea    rbp,[rip+0x24c02]        # 448af5 <fb_schema_table_deleted@@Base+0xbc5>
  423ef3:	jmp    423f86 <__flatcc_fb_clear_parser@@Base+0xdb6>
  423ef8:	mov    rdi,rbx
  423efb:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  423f00:	test   r12,r12
  423f03:	je     423f26 <__flatcc_fb_clear_parser@@Base+0xd56>
  423f05:	test   rbp,rbp
  423f08:	jne    423f26 <__flatcc_fb_clear_parser@@Base+0xd56>
  423f0a:	mov    rsi,QWORD PTR [rbx+0x48]
  423f0e:	lea    rdx,[rip+0x24c1c]        # 448b31 <fb_schema_table_deleted@@Base+0xc01>
  423f15:	xor    r8d,r8d
  423f18:	xor    r9d,r9d
  423f1b:	mov    rdi,rbx
  423f1e:	mov    rcx,r12
  423f21:	call   41c7d0 <__flatcc_error_report@@Base>
  423f26:	mov    rax,QWORD PTR [r14+0x28]
  423f2a:	test   rax,rax
  423f2d:	je     423fe2 <__flatcc_fb_clear_parser@@Base+0xe12>
  423f33:	xor    edx,edx
  423f35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423f3f:	nop
  423f40:	mov    rcx,rax
  423f43:	mov    rax,QWORD PTR [rax]
  423f46:	mov    QWORD PTR [rcx],rdx
  423f49:	mov    rdx,rcx
  423f4c:	test   rax,rax
  423f4f:	jne    423f40 <__flatcc_fb_clear_parser@@Base+0xd70>
  423f51:	jmp    423fe4 <__flatcc_fb_clear_parser@@Base+0xe14>
  423f56:	lea    rsi,[rip+0x244c5]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  423f5d:	lea    rdx,[rip+0x24bb4]        # 448b18 <fb_schema_table_deleted@@Base+0xbe8>
  423f64:	xor    eax,eax
  423f66:	mov    rdi,rbx
  423f69:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  423f6e:	jmp    423fa1 <__flatcc_fb_clear_parser@@Base+0xdd1>
  423f70:	mov    rdx,QWORD PTR [rax+0x318]
  423f77:	mov    rcx,QWORD PTR [rbp+0x10]
  423f7b:	mov    r8,QWORD PTR [rbp+0x18]
  423f7f:	lea    rbp,[rip+0x24b92]        # 448b18 <fb_schema_table_deleted@@Base+0xbe8>
  423f86:	lea    rsi,[rip+0x24443]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  423f8d:	mov    eax,0x0
  423f92:	mov    rdi,rbx
  423f95:	push   rbp
  423f96:	push   r10
  423f98:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  423f9d:	add    rsp,0x10
  423fa1:	add    DWORD PTR [rbx+0xd0],0x1
  423fa8:	nop    DWORD PTR [rax+rax*1+0x0]
  423fb0:	mov    rax,QWORD PTR [rbx+0x48]
  423fb4:	mov    rbp,QWORD PTR [rax+0x20]
  423fb8:	test   rbp,rbp
  423fbb:	je     423fd3 <__flatcc_fb_clear_parser@@Base+0xe03>
  423fbd:	mov    rdi,rbx
  423fc0:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  423fc5:	cmp    rbp,0x7d
  423fc9:	jne    423fb0 <__flatcc_fb_clear_parser@@Base+0xde0>
  423fcb:	mov    QWORD PTR [rbx+0x40],0x0
  423fd3:	add    rsp,0x8
  423fd7:	pop    rbx
  423fd8:	pop    r12
  423fda:	pop    r13
  423fdc:	pop    r14
  423fde:	pop    r15
  423fe0:	pop    rbp
  423fe1:	ret    
  423fe2:	xor    ecx,ecx
  423fe4:	mov    QWORD PTR [r14+0x28],rcx
  423fe8:	jmp    423fd3 <__flatcc_fb_clear_parser@@Base+0xe03>
  423fea:	mov    rax,QWORD PTR [rip+0x2f007]        # 452ff8 <stderr@GLIBC_2.2.5>
  423ff1:	mov    rcx,QWORD PTR [rax]
  423ff4:	lea    rdi,[rip+0xc811]        # 43080c <_IO_stdin_used@@Base+0x180c>
  423ffb:	mov    esi,0x22
  424000:	mov    edx,0x1
  424005:	call   406220 <fwrite@plt>
  42400a:	mov    edi,0x1
  42400f:	call   406210 <exit@plt>
  424014:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42401e:	xchg   ax,ax
  424020:	push   r15
  424022:	push   r14
  424024:	push   r13
  424026:	push   r12
  424028:	push   rbx
  424029:	mov    r14,rsi
  42402c:	mov    r12,rdi
  42402f:	mov    r15,QWORD PTR [rdi+0x48]
  424033:	mov    rcx,QWORD PTR [rdi+0x60]
  424037:	lea    rax,[rcx+0x20]
  42403b:	cmp    rax,QWORD PTR [rdi+0x50]
  42403f:	jbe    42407f <__flatcc_fb_clear_parser@@Base+0xeaf>
  424041:	mov    edi,0x10000
  424046:	mov    esi,0x1
  42404b:	call   406150 <calloc@plt>
  424050:	test   rax,rax
  424053:	je     424167 <__flatcc_fb_clear_parser@@Base+0xf97>
  424059:	mov    rcx,QWORD PTR [r12+0x58]
  42405e:	mov    QWORD PTR [rax],rcx
  424061:	mov    QWORD PTR [r12+0x58],rax
  424066:	lea    rcx,[rax+0x10]
  42406a:	mov    QWORD PTR [r12+0x60],rcx
  42406f:	lea    rdx,[rax+0x10000]
  424076:	mov    QWORD PTR [r12+0x50],rdx
  42407b:	add    rax,0x30
  42407f:	mov    QWORD PTR [r12+0x60],rax
  424084:	mov    QWORD PTR [rcx+0x8],r15
  424088:	mov    QWORD PTR [r14],rcx
  42408b:	mov    rdi,r12
  42408e:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  424093:	mov    r13,QWORD PTR [r12+0x48]
  424098:	cmp    QWORD PTR [r13+0x20],0x2e
  42409d:	jne    42413a <__flatcc_fb_clear_parser@@Base+0xf6a>
  4240a3:	mov    r15,QWORD PTR [r14]
  4240a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4240b0:	mov    rdi,r12
  4240b3:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  4240b8:	test   r13,r13
  4240bb:	je     42413a <__flatcc_fb_clear_parser@@Base+0xf6a>
  4240bd:	mov    r14,QWORD PTR [r12+0x48]
  4240c2:	cmp    QWORD PTR [r14+0x20],0x9
  4240c7:	jne    424144 <__flatcc_fb_clear_parser@@Base+0xf74>
  4240c9:	mov    rbx,QWORD PTR [r12+0x60]
  4240ce:	lea    rax,[rbx+0x20]
  4240d2:	cmp    rax,QWORD PTR [r12+0x50]
  4240d7:	jbe    424113 <__flatcc_fb_clear_parser@@Base+0xf43>
  4240d9:	mov    edi,0x10000
  4240de:	mov    esi,0x1
  4240e3:	call   406150 <calloc@plt>
  4240e8:	test   rax,rax
  4240eb:	je     424167 <__flatcc_fb_clear_parser@@Base+0xf97>
  4240ed:	mov    rcx,QWORD PTR [r12+0x58]
  4240f2:	mov    QWORD PTR [rax],rcx
  4240f5:	mov    QWORD PTR [r12+0x58],rax
  4240fa:	lea    rbx,[rax+0x10]
  4240fe:	mov    QWORD PTR [r12+0x60],rbx
  424103:	lea    rcx,[rax+0x10000]
  42410a:	mov    QWORD PTR [r12+0x50],rcx
  42410f:	add    rax,0x30
  424113:	mov    QWORD PTR [r12+0x60],rax
  424118:	mov    QWORD PTR [rbx+0x8],r14
  42411c:	mov    QWORD PTR [r15],rbx
  42411f:	mov    rdi,r12
  424122:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  424127:	mov    r13,QWORD PTR [r12+0x48]
  42412c:	cmp    QWORD PTR [r13+0x20],0x2e
  424131:	mov    r15,rbx
  424134:	je     4240b0 <__flatcc_fb_clear_parser@@Base+0xee0>
  42413a:	pop    rbx
  42413b:	pop    r12
  42413d:	pop    r13
  42413f:	pop    r14
  424141:	pop    r15
  424143:	ret    
  424144:	lea    rdx,[rip+0x2480e]        # 448959 <fb_schema_table_deleted@@Base+0xa29>
  42414b:	xor    ecx,ecx
  42414d:	xor    r8d,r8d
  424150:	xor    r9d,r9d
  424153:	mov    rdi,r12
  424156:	mov    rsi,r14
  424159:	pop    rbx
  42415a:	pop    r12
  42415c:	pop    r13
  42415e:	pop    r14
  424160:	pop    r15
  424162:	jmp    41c7d0 <__flatcc_error_report@@Base>
  424167:	mov    rax,QWORD PTR [rip+0x2ee8a]        # 452ff8 <stderr@GLIBC_2.2.5>
  42416e:	mov    rcx,QWORD PTR [rax]
  424171:	lea    rdi,[rip+0xc694]        # 43080c <_IO_stdin_used@@Base+0x180c>
  424178:	mov    esi,0x22
  42417d:	mov    edx,0x1
  424182:	call   406220 <fwrite@plt>
  424187:	mov    edi,0x1
  42418c:	call   406210 <exit@plt>
  424191:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42419b:	nop    DWORD PTR [rax+rax*1+0x0]
  4241a0:	push   rbp
  4241a1:	push   r15
  4241a3:	push   r14
  4241a5:	push   r13
  4241a7:	push   r12
  4241a9:	push   rbx
  4241aa:	push   rax
  4241ab:	mov    r14,QWORD PTR [rdi+0x48]
  4241af:	cmp    QWORD PTR [r14+0x20],0x28
  4241b4:	jne    424330 <__flatcc_fb_clear_parser@@Base+0x1160>
  4241ba:	mov    r12,rdi
  4241bd:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  4241c2:	test   r14,r14
  4241c5:	je     424330 <__flatcc_fb_clear_parser@@Base+0x1160>
  4241cb:	mov    r13,QWORD PTR [r12+0x48]
  4241d0:	cmp    QWORD PTR [r13+0x20],0x9
  4241d5:	jne    4242d5 <__flatcc_fb_clear_parser@@Base+0x1105>
  4241db:	mov    rdi,r12
  4241de:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  4241e3:	test   r13,r13
  4241e6:	je     4242d5 <__flatcc_fb_clear_parser@@Base+0x1105>
  4241ec:	xor    ebp,ebp
  4241ee:	lea    r15,[rip+0x24965]        # 448b5a <fb_schema_table_deleted@@Base+0xc2a>
  4241f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4241ff:	nop
  424200:	mov    rbx,QWORD PTR [r12+0x60]
  424205:	lea    rax,[rbx+0x30]
  424209:	cmp    rax,QWORD PTR [r12+0x50]
  42420e:	jbe    42424e <__flatcc_fb_clear_parser@@Base+0x107e>
  424210:	mov    edi,0x10000
  424215:	mov    esi,0x1
  42421a:	call   406150 <calloc@plt>
  42421f:	test   rax,rax
  424222:	je     4243eb <__flatcc_fb_clear_parser@@Base+0x121b>
  424228:	mov    rcx,QWORD PTR [r12+0x58]
  42422d:	mov    QWORD PTR [rax],rcx
  424230:	mov    QWORD PTR [r12+0x58],rax
  424235:	lea    rbx,[rax+0x10]
  424239:	mov    QWORD PTR [r12+0x60],rbx
  42423e:	lea    rcx,[rax+0x10000]
  424245:	mov    QWORD PTR [r12+0x50],rcx
  42424a:	add    rax,0x40
  42424e:	mov    QWORD PTR [r12+0x60],rax
  424253:	mov    QWORD PTR [rbx],rbp
  424256:	mov    QWORD PTR [rbx+0x8],r13
  42425a:	mov    rbp,QWORD PTR [r12+0x48]
  42425f:	cmp    QWORD PTR [rbp+0x20],0x3a
  424264:	jne    424287 <__flatcc_fb_clear_parser@@Base+0x10b7>
  424266:	mov    rdi,r12
  424269:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  42426e:	test   rbp,rbp
  424271:	je     424287 <__flatcc_fb_clear_parser@@Base+0x10b7>
  424273:	lea    rsi,[rbx+0x10]
  424277:	mov    edx,0x1
  42427c:	mov    rdi,r12
  42427f:	mov    rcx,r15
  424282:	call   424420 <__flatcc_fb_clear_parser@@Base+0x1250>
  424287:	cmp    DWORD PTR [r12+0xd0],0x9
  424290:	jg     424341 <__flatcc_fb_clear_parser@@Base+0x1171>
  424296:	mov    rbp,QWORD PTR [r12+0x48]
  42429b:	cmp    QWORD PTR [rbp+0x20],0x2c
  4242a0:	jne    4242d7 <__flatcc_fb_clear_parser@@Base+0x1107>
  4242a2:	mov    rdi,r12
  4242a5:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  4242aa:	test   rbp,rbp
  4242ad:	je     4242d7 <__flatcc_fb_clear_parser@@Base+0x1107>
  4242af:	mov    r13,QWORD PTR [r12+0x48]
  4242b4:	cmp    QWORD PTR [r13+0x20],0x9
  4242b9:	jne    424346 <__flatcc_fb_clear_parser@@Base+0x1176>
  4242bf:	mov    rdi,r12
  4242c2:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  4242c7:	mov    rbp,rbx
  4242ca:	test   r13,r13
  4242cd:	jne    424200 <__flatcc_fb_clear_parser@@Base+0x1030>
  4242d3:	jmp    4242d7 <__flatcc_fb_clear_parser@@Base+0x1107>
  4242d5:	xor    ebx,ebx
  4242d7:	mov    QWORD PTR [r12+0x40],0x0
  4242e0:	mov    rsi,QWORD PTR [r12+0x48]
  4242e5:	cmp    QWORD PTR [rsi+0x20],0x29
  4242ea:	jne    424313 <__flatcc_fb_clear_parser@@Base+0x1143>
  4242ec:	mov    rdi,r12
  4242ef:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  4242f4:	test   rbx,rbx
  4242f7:	je     424330 <__flatcc_fb_clear_parser@@Base+0x1160>
  4242f9:	xor    ecx,ecx
  4242fb:	nop    DWORD PTR [rax+rax*1+0x0]
  424300:	mov    rax,rbx
  424303:	mov    rbx,QWORD PTR [rbx]
  424306:	mov    QWORD PTR [rax],rcx
  424309:	mov    rcx,rax
  42430c:	test   rbx,rbx
  42430f:	jne    424300 <__flatcc_fb_clear_parser@@Base+0x1130>
  424311:	jmp    424332 <__flatcc_fb_clear_parser@@Base+0x1162>
  424313:	lea    rdx,[rip+0x2488d]        # 448ba7 <fb_schema_table_deleted@@Base+0xc77>
  42431a:	xor    r8d,r8d
  42431d:	xor    r9d,r9d
  424320:	mov    rdi,r12
  424323:	mov    rcx,r14
  424326:	call   41c7d0 <__flatcc_error_report@@Base>
  42432b:	test   rbx,rbx
  42432e:	jne    4242f9 <__flatcc_fb_clear_parser@@Base+0x1129>
  424330:	xor    eax,eax
  424332:	add    rsp,0x8
  424336:	pop    rbx
  424337:	pop    r12
  424339:	pop    r13
  42433b:	pop    r14
  42433d:	pop    r15
  42433f:	pop    rbp
  424340:	ret    
  424341:	mov    rax,rbx
  424344:	jmp    424332 <__flatcc_fb_clear_parser@@Base+0x1162>
  424346:	test   r13,r13
  424349:	je     424386 <__flatcc_fb_clear_parser@@Base+0x11b6>
  42434b:	mov    rax,QWORD PTR [r13+0x0]
  42434f:	xor    r9d,r9d
  424352:	lea    rdx,[rip+0xc9da]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  424359:	mov    rbp,rdx
  42435c:	test   rax,rax
  42435f:	je     424368 <__flatcc_fb_clear_parser@@Base+0x1198>
  424361:	mov    r9d,DWORD PTR [r13+0x8]
  424365:	mov    rbp,rax
  424368:	mov    rax,r12
  42436b:	nop    DWORD PTR [rax+rax*1+0x0]
  424370:	cmp    QWORD PTR [rax+0x28],r13
  424374:	ja     42437c <__flatcc_fb_clear_parser@@Base+0x11ac>
  424376:	cmp    QWORD PTR [rax+0x30],r13
  42437a:	ja     4243ac <__flatcc_fb_clear_parser@@Base+0x11dc>
  42437c:	mov    rax,QWORD PTR [rax]
  42437f:	test   rax,rax
  424382:	jne    424370 <__flatcc_fb_clear_parser@@Base+0x11a0>
  424384:	jmp    4243b3 <__flatcc_fb_clear_parser@@Base+0x11e3>
  424386:	lea    rsi,[rip+0x24095]        # 448422 <fb_schema_table_deleted@@Base+0x4f2>
  42438d:	lea    rdx,[rip+0x247e6]        # 448b7a <fb_schema_table_deleted@@Base+0xc4a>
  424394:	xor    eax,eax
  424396:	mov    rdi,r12
  424399:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  42439e:	add    DWORD PTR [r12+0xd0],0x1
  4243a7:	jmp    4242d7 <__flatcc_fb_clear_parser@@Base+0x1107>
  4243ac:	mov    rdx,QWORD PTR [rax+0x318]
  4243b3:	mov    rcx,QWORD PTR [r13+0x10]
  4243b7:	mov    r8,QWORD PTR [r13+0x18]
  4243bb:	lea    r10,[rip+0x247b8]        # 448b7a <fb_schema_table_deleted@@Base+0xc4a>
  4243c2:	lea    rsi,[rip+0x24007]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  4243c9:	mov    eax,0x0
  4243ce:	mov    rdi,r12
  4243d1:	push   r10
  4243d3:	push   rbp
  4243d4:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  4243d9:	add    rsp,0x10
  4243dd:	add    DWORD PTR [r12+0xd0],0x1
  4243e6:	jmp    4242d7 <__flatcc_fb_clear_parser@@Base+0x1107>
  4243eb:	mov    rax,QWORD PTR [rip+0x2ec06]        # 452ff8 <stderr@GLIBC_2.2.5>
  4243f2:	mov    rcx,QWORD PTR [rax]
  4243f5:	lea    rdi,[rip+0xc410]        # 43080c <_IO_stdin_used@@Base+0x180c>
  4243fc:	mov    esi,0x22
  424401:	mov    edx,0x1
  424406:	call   406220 <fwrite@plt>
  42440b:	mov    edi,0x1
  424410:	call   406210 <exit@plt>
  424415:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42441f:	nop
  424420:	push   rbp
  424421:	push   r15
  424423:	push   r14
  424425:	push   r13
  424427:	push   r12
  424429:	push   rbx
  42442a:	push   rax
  42442b:	mov    rbx,rcx
  42442e:	mov    ebp,edx
  424430:	mov    r15,rsi
  424433:	mov    r14,rdi
  424436:	mov    r13,QWORD PTR [rdi+0x48]
  42443a:	mov    rax,QWORD PTR [r13+0x20]
  42443e:	cmp    rax,0x2d
  424442:	jne    424457 <__flatcc_fb_clear_parser@@Base+0x1287>
  424444:	mov    rdi,r14
  424447:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  42444c:	mov    r12,QWORD PTR [r14+0x48]
  424450:	mov    rax,QWORD PTR [r12+0x20]
  424455:	jmp    42445d <__flatcc_fb_clear_parser@@Base+0x128d>
  424457:	mov    r12,r13
  42445a:	xor    r13d,r13d
  42445d:	lea    rcx,[rax-0x9]
  424461:	cmp    rcx,0xa
  424465:	ja     4244a5 <__flatcc_fb_clear_parser@@Base+0x12d5>
  424467:	lea    rax,[rip+0x23e26]        # 448294 <fb_schema_table_deleted@@Base+0x364>
  42446e:	movsxd rcx,DWORD PTR [rax+rcx*4]
  424472:	add    rcx,rax
  424475:	jmp    rcx
  424477:	mov    rdi,r14
  42447a:	mov    rsi,r15
  42447d:	call   424020 <__flatcc_fb_clear_parser@@Base+0xe50>
  424482:	mov    WORD PTR [r15+0x10],0xd
  424489:	test   r13,r13
  42448c:	je     424714 <__flatcc_fb_clear_parser@@Base+0x1544>
  424492:	mov    WORD PTR [r15+0x10],0x1
  424499:	lea    rdx,[rip+0x24748]        # 448be8 <fb_schema_table_deleted@@Base+0xcb8>
  4244a0:	jmp    4246f3 <__flatcc_fb_clear_parser@@Base+0x1523>
  4244a5:	cmp    rax,0xfffffffffffffc24
  4244ab:	je     4246c7 <__flatcc_fb_clear_parser@@Base+0x14f7>
  4244b1:	cmp    rax,0xfffffffffffffc26
  4244b7:	jne    4246b4 <__flatcc_fb_clear_parser@@Base+0x14e4>
  4244bd:	mov    BYTE PTR [r15],0x0
  4244c1:	jmp    4246cb <__flatcc_fb_clear_parser@@Base+0x14fb>
  4244c6:	mov    WORD PTR [r15+0x10],0x5
  4244cd:	mov    rax,QWORD PTR [r12+0x8]
  4244d2:	test   eax,eax
  4244d4:	je     4247f9 <__flatcc_fb_clear_parser@@Base+0x1629>
  4244da:	mov    rcx,QWORD PTR [r12]
  4244de:	movsxd rbx,eax
  4244e1:	mov    r9b,BYTE PTR [rcx]
  4244e4:	xor    esi,esi
  4244e6:	cmp    r9b,0x2d
  4244ea:	sete   sil
  4244ee:	cmp    rbx,rsi
  4244f1:	je     4247f9 <__flatcc_fb_clear_parser@@Base+0x1629>
  4244f7:	lea    rbp,[rcx+rbx*1]
  4244fb:	lea    r8,[rcx+rsi*1]
  4244ff:	xor    edx,edx
  424501:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42450b:	nop    DWORD PTR [rax+rax*1+0x0]
  424510:	movsx  rdi,BYTE PTR [rcx+rsi*1]
  424515:	mov    eax,edi
  424517:	add    al,0xd0
  424519:	cmp    al,0x9
  42451b:	ja     4247b2 <__flatcc_fb_clear_parser@@Base+0x15e2>
  424521:	lea    rax,[rdx+rdx*4]
  424525:	lea    rdi,[rdi+rax*2]
  424529:	add    rdi,0xffffffffffffffd0
  42452d:	cmp    rdx,rdi
  424530:	ja     4247f9 <__flatcc_fb_clear_parser@@Base+0x1629>
  424536:	add    rsi,0x1
  42453a:	mov    rdx,rdi
  42453d:	cmp    rbx,rsi
  424540:	jne    424510 <__flatcc_fb_clear_parser@@Base+0x1340>
  424542:	xor    ebx,ebx
  424544:	cmp    rbp,rcx
  424547:	jne    4247c2 <__flatcc_fb_clear_parser@@Base+0x15f2>
  42454d:	jmp    4247f9 <__flatcc_fb_clear_parser@@Base+0x1629>
  424552:	mov    WORD PTR [r15+0x10],0x3
  424559:	mov    rdi,QWORD PTR [r12]
  42455d:	mov    rsi,rsp
  424560:	call   406090 <strtod@plt>
  424565:	vmovsd QWORD PTR [r15],xmm0
  42456a:	mov    rbx,QWORD PTR [r12]
  42456e:	mov    r9,QWORD PTR [r12+0x8]
  424573:	lea    rax,[rbx+r9*1]
  424577:	cmp    QWORD PTR [rsp],rax
  42457b:	je     424723 <__flatcc_fb_clear_parser@@Base+0x1553>
  424581:	mov    WORD PTR [r15+0x10],0x1
  424588:	xor    ebp,ebp
  42458a:	test   rbx,rbx
  42458d:	lea    rdx,[rip+0xc79f]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  424594:	cmove  rbx,rdx
  424598:	cmovne ebp,r9d
  42459c:	mov    rax,r14
  42459f:	nop
  4245a0:	cmp    QWORD PTR [rax+0x28],r12
  4245a4:	ja     4245b0 <__flatcc_fb_clear_parser@@Base+0x13e0>
  4245a6:	cmp    QWORD PTR [rax+0x30],r12
  4245aa:	ja     42475d <__flatcc_fb_clear_parser@@Base+0x158d>
  4245b0:	mov    rax,QWORD PTR [rax]
  4245b3:	test   rax,rax
  4245b6:	jne    4245a0 <__flatcc_fb_clear_parser@@Base+0x13d0>
  4245b8:	jmp    424764 <__flatcc_fb_clear_parser@@Base+0x1594>
  4245bd:	mov    WORD PTR [r15+0x10],0x5
  4245c4:	mov    rax,QWORD PTR [r12+0x8]
  4245c9:	test   eax,eax
  4245cb:	je     424895 <__flatcc_fb_clear_parser@@Base+0x16c5>
  4245d1:	mov    rdx,QWORD PTR [r12]
  4245d5:	movsxd r10,eax
  4245d8:	add    r10,rdx
  4245db:	mov    r8b,BYTE PTR [rdx]
  4245de:	xor    edi,edi
  4245e0:	cmp    r8b,0x2d
  4245e4:	sete   dil
  4245e8:	lea    rsi,[rdx+rdi*1]
  4245ec:	mov    rax,r10
  4245ef:	sub    rax,rsi
  4245f2:	cmp    rax,0x2
  4245f6:	jl     424895 <__flatcc_fb_clear_parser@@Base+0x16c5>
  4245fc:	cmp    BYTE PTR [rsi],0x30
  4245ff:	jne    424895 <__flatcc_fb_clear_parser@@Base+0x16c5>
  424605:	mov    al,BYTE PTR [rsi+0x1]
  424608:	or     al,0x20
  42460a:	cmp    al,0x78
  42460c:	jne    424895 <__flatcc_fb_clear_parser@@Base+0x16c5>
  424612:	lea    rax,[rsi+0x2]
  424616:	mov    rbp,r10
  424619:	sub    rbp,rax
  42461c:	lea    r9,[rsi+0x12]
  424620:	cmp    rbp,0x10
  424624:	cmovle r9,r10
  424628:	cmp    rax,r9
  42462b:	je     424895 <__flatcc_fb_clear_parser@@Base+0x16c5>
  424631:	neg    rdi
  424634:	sub    rdi,rdx
  424637:	add    rdi,r9
  42463a:	xor    edx,edx
  42463c:	mov    ebx,0x2
  424641:	movzx  ecx,BYTE PTR [rsi+rbx*1]
  424645:	mov    eax,ecx
  424647:	add    al,0xd0
  424649:	mov    rbp,0xffffffffffffffd0
  424650:	cmp    al,0xa
  424652:	jb     42466a <__flatcc_fb_clear_parser@@Base+0x149a>
  424654:	or     cl,0x20
  424657:	mov    eax,ecx
  424659:	add    al,0x9f
  42465b:	mov    rbp,0xffffffffffffffa9
  424662:	cmp    al,0x5
  424664:	ja     424850 <__flatcc_fb_clear_parser@@Base+0x1680>
  42466a:	shl    rdx,0x4
  42466e:	mov    rax,rdx
  424671:	add    rax,rbp
  424674:	movzx  edx,cl
  424677:	add    rdx,rax
  42467a:	add    rbx,0x1
  42467e:	cmp    rdi,rbx
  424681:	jne    424641 <__flatcc_fb_clear_parser@@Base+0x1471>
  424683:	mov    al,0x1
  424685:	cmp    rbx,0x2
  424689:	jne    42485e <__flatcc_fb_clear_parser@@Base+0x168e>
  42468f:	jmp    424895 <__flatcc_fb_clear_parser@@Base+0x16c5>
  424694:	mov    rdi,r14
  424697:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  42469c:	mov    rdi,r14
  42469f:	mov    rsi,r15
  4246a2:	call   423310 <__flatcc_fb_clear_parser@@Base+0x140>
  4246a7:	test   bpl,0x1
  4246ab:	jne    4246e0 <__flatcc_fb_clear_parser@@Base+0x1510>
  4246ad:	mov    WORD PTR [r15+0x10],0x1
  4246b4:	xor    ecx,ecx
  4246b6:	xor    r8d,r8d
  4246b9:	xor    r9d,r9d
  4246bc:	mov    rdi,r14
  4246bf:	mov    rsi,r12
  4246c2:	mov    rdx,rbx
  4246c5:	jmp    424701 <__flatcc_fb_clear_parser@@Base+0x1531>
  4246c7:	mov    BYTE PTR [r15],0x1
  4246cb:	mov    WORD PTR [r15+0x10],0x6
  4246d2:	test   r13,r13
  4246d5:	jne    4248c5 <__flatcc_fb_clear_parser@@Base+0x16f5>
  4246db:	jmp    4248f0 <__flatcc_fb_clear_parser@@Base+0x1720>
  4246e0:	test   r13,r13
  4246e3:	je     424714 <__flatcc_fb_clear_parser@@Base+0x1544>
  4246e5:	mov    WORD PTR [r15+0x10],0x1
  4246ec:	lea    rdx,[rip+0x244d3]        # 448bc6 <fb_schema_table_deleted@@Base+0xc96>
  4246f3:	xor    ecx,ecx
  4246f5:	xor    r8d,r8d
  4246f8:	xor    r9d,r9d
  4246fb:	mov    rdi,r14
  4246fe:	mov    rsi,r12
  424701:	add    rsp,0x8
  424705:	pop    rbx
  424706:	pop    r12
  424708:	pop    r13
  42470a:	pop    r14
  42470c:	pop    r15
  42470e:	pop    rbp
  42470f:	jmp    41c7d0 <__flatcc_error_report@@Base>
  424714:	add    rsp,0x8
  424718:	pop    rbx
  424719:	pop    r12
  42471b:	pop    r13
  42471d:	pop    r14
  42471f:	pop    r15
  424721:	pop    rbp
  424722:	ret    
  424723:	cmp    BYTE PTR [rbx],0x2e
  424726:	jne    42478e <__flatcc_fb_clear_parser@@Base+0x15be>
  424728:	mov    WORD PTR [r15+0x10],0x1
  42472f:	lea    rdx,[rip+0xc5fd]        # 430d33 <_IO_stdin_used@@Base+0x1d33>
  424736:	mov    rax,r14
  424739:	nop    DWORD PTR [rax+0x0]
  424740:	cmp    QWORD PTR [rax+0x28],r12
  424744:	ja     424750 <__flatcc_fb_clear_parser@@Base+0x1580>
  424746:	cmp    QWORD PTR [rax+0x30],r12
  42474a:	ja     42480c <__flatcc_fb_clear_parser@@Base+0x163c>
  424750:	mov    rax,QWORD PTR [rax]
  424753:	test   rax,rax
  424756:	jne    424740 <__flatcc_fb_clear_parser@@Base+0x1570>
  424758:	jmp    424813 <__flatcc_fb_clear_parser@@Base+0x1643>
  42475d:	mov    rdx,QWORD PTR [rax+0x318]
  424764:	mov    rcx,QWORD PTR [r12+0x10]
  424769:	mov    r8,QWORD PTR [r12+0x18]
  42476e:	lea    r10,[rip+0x244e6]        # 448c5b <fb_schema_table_deleted@@Base+0xd2b>
  424775:	lea    rsi,[rip+0x23c54]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  42477c:	mov    eax,0x0
  424781:	mov    rdi,r14
  424784:	mov    r9d,ebp
  424787:	push   r10
  424789:	jmp    424834 <__flatcc_fb_clear_parser@@Base+0x1664>
  42478e:	test   r13,r13
  424791:	je     424846 <__flatcc_fb_clear_parser@@Base+0x1676>
  424797:	vxorps xmm0,xmm0,XMMWORD PTR [rip+0x23c21]        # 4483c0 <fb_schema_table_deleted@@Base+0x490>
  42479f:	vmovlps QWORD PTR [r15],xmm0
  4247a4:	test   r13,r13
  4247a7:	jne    4248c5 <__flatcc_fb_clear_parser@@Base+0x16f5>
  4247ad:	jmp    4248f0 <__flatcc_fb_clear_parser@@Base+0x1720>
  4247b2:	add    rsi,rcx
  4247b5:	mov    bl,0x1
  4247b7:	mov    rdi,rdx
  4247ba:	mov    rbp,rsi
  4247bd:	cmp    rbp,rcx
  4247c0:	je     4247f9 <__flatcc_fb_clear_parser@@Base+0x1629>
  4247c2:	cmp    rbp,r8
  4247c5:	je     4247f9 <__flatcc_fb_clear_parser@@Base+0x1629>
  4247c7:	test   bl,bl
  4247c9:	je     4247ec <__flatcc_fb_clear_parser@@Base+0x161c>
  4247cb:	movsx  ecx,BYTE PTR [rbp+0x0]
  4247cf:	lea    edx,[rcx-0x45]
  4247d2:	cmp    edx,0x2b
  4247d5:	ja     4247e7 <__flatcc_fb_clear_parser@@Base+0x1617>
  4247d7:	movabs rax,0x80100000801
  4247e1:	bt     rax,rdx
  4247e5:	jb     4247f9 <__flatcc_fb_clear_parser@@Base+0x1629>
  4247e7:	cmp    ecx,0x2e
  4247ea:	je     4247f9 <__flatcc_fb_clear_parser@@Base+0x1629>
  4247ec:	mov    QWORD PTR [r15],rdi
  4247ef:	cmp    r9b,0x2d
  4247f3:	jne    4248b6 <__flatcc_fb_clear_parser@@Base+0x16e6>
  4247f9:	mov    WORD PTR [r15+0x10],0x1
  424800:	lea    rdx,[rip+0x2443d]        # 448c44 <fb_schema_table_deleted@@Base+0xd14>
  424807:	jmp    4248a3 <__flatcc_fb_clear_parser@@Base+0x16d3>
  42480c:	mov    rdx,QWORD PTR [rax+0x318]
  424813:	mov    rcx,QWORD PTR [r12+0x10]
  424818:	mov    r8,QWORD PTR [r12+0x18]
  42481d:	lea    rbp,[rip+0x2444c]        # 448c70 <fb_schema_table_deleted@@Base+0xd40>
  424824:	lea    rsi,[rip+0x23ba5]        # 4483d0 <fb_schema_table_deleted@@Base+0x4a0>
  42482b:	mov    eax,0x0
  424830:	mov    rdi,r14
  424833:	push   rbp
  424834:	push   rbx
  424835:	call   41c6b0 <__flatcc_fb_print_error@@Base>
  42483a:	add    rsp,0x10
  42483e:	add    DWORD PTR [r14+0xd0],0x1
  424846:	test   r13,r13
  424849:	jne    4248c5 <__flatcc_fb_clear_parser@@Base+0x16f5>
  42484b:	jmp    4248f0 <__flatcc_fb_clear_parser@@Base+0x1720>
  424850:	add    rsi,rbx
  424853:	xor    eax,eax
  424855:	mov    r9,rsi
  424858:	cmp    rbx,0x2
  42485c:	je     424895 <__flatcc_fb_clear_parser@@Base+0x16c5>
  42485e:	cmp    r9,r10
  424861:	je     42488c <__flatcc_fb_clear_parser@@Base+0x16bc>
  424863:	mov    cl,BYTE PTR [r9]
  424866:	test   al,al
  424868:	je     42487d <__flatcc_fb_clear_parser@@Base+0x16ad>
  42486a:	mov    eax,ecx
  42486c:	add    al,0xd0
  42486e:	cmp    al,0xa
  424870:	jb     424895 <__flatcc_fb_clear_parser@@Base+0x16c5>
  424872:	or     cl,0x20
  424875:	mov    eax,ecx
  424877:	add    al,0x9f
  424879:	cmp    al,0x6
  42487b:	jb     424895 <__flatcc_fb_clear_parser@@Base+0x16c5>
  42487d:	cmp    cl,0x2e
  424880:	je     424895 <__flatcc_fb_clear_parser@@Base+0x16c5>
  424882:	cmp    cl,0x50
  424885:	je     424895 <__flatcc_fb_clear_parser@@Base+0x16c5>
  424887:	cmp    cl,0x70
  42488a:	je     424895 <__flatcc_fb_clear_parser@@Base+0x16c5>
  42488c:	mov    QWORD PTR [r15],rdx
  42488f:	cmp    r8b,0x2d
  424893:	jne    4248b6 <__flatcc_fb_clear_parser@@Base+0x16e6>
  424895:	mov    WORD PTR [r15+0x10],0x1
  42489c:	lea    rdx,[rip+0x24386]        # 448c29 <fb_schema_table_deleted@@Base+0xcf9>
  4248a3:	xor    ecx,ecx
  4248a5:	xor    r8d,r8d
  4248a8:	xor    r9d,r9d
  4248ab:	mov    rdi,r14
  4248ae:	mov    rsi,r12
  4248b1:	call   41c7d0 <__flatcc_error_report@@Base>
  4248b6:	test   r13,r13
  4248b9:	je     4248f0 <__flatcc_fb_clear_parser@@Base+0x1720>
  4248bb:	neg    QWORD PTR [r15]
  4248be:	mov    WORD PTR [r15+0x10],0x4
  4248c5:	movzx  eax,WORD PTR [r15+0x10]
  4248ca:	cmp    eax,0x6
  4248cd:	jne    4248f0 <__flatcc_fb_clear_parser@@Base+0x1720>
  4248cf:	mov    WORD PTR [r15+0x10],0x1
  4248d6:	lea    rdx,[rip+0x24329]        # 448c06 <fb_schema_table_deleted@@Base+0xcd6>
  4248dd:	xor    ecx,ecx
  4248df:	xor    r8d,r8d
  4248e2:	xor    r9d,r9d
  4248e5:	mov    rdi,r14
  4248e8:	mov    rsi,r12
  4248eb:	call   41c7d0 <__flatcc_error_report@@Base>
  4248f0:	mov    rdi,r14
  4248f3:	add    rsp,0x8
  4248f7:	pop    rbx
  4248f8:	pop    r12
  4248fa:	pop    r13
  4248fc:	pop    r14
  4248fe:	pop    r15
  424900:	pop    rbp
  424901:	jmp    4230e0 <__flatcc_fb_parse@@Base+0x6300>
  424906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424910:	push   rbp
  424911:	push   r15
  424913:	push   r14
  424915:	push   r12
  424917:	push   rbx
  424918:	mov    r15,rsi
  42491b:	mov    r12,rdi
  42491e:	mov    r14,QWORD PTR [rdi+0x48]
  424922:	mov    WORD PTR [rsi+0x10],0x1
  424928:	xor    ebp,ebp
  42492a:	cmp    QWORD PTR [r14+0x20],0x5b
  42492f:	jne    42497b <__flatcc_fb_clear_parser@@Base+0x17ab>
  424931:	xor    ebp,ebp
  424933:	mov    rbx,r14
  424936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424940:	mov    rdi,r12
  424943:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  424948:	test   rbx,rbx
  42494b:	je     42495c <__flatcc_fb_clear_parser@@Base+0x178c>
  42494d:	add    ebp,0x1
  424950:	mov    rbx,QWORD PTR [r12+0x48]
  424955:	cmp    QWORD PTR [rbx+0x20],0x5b
  42495a:	je     424940 <__flatcc_fb_clear_parser@@Base+0x1770>
  42495c:	cmp    ebp,0x2
  42495f:	jb     42497b <__flatcc_fb_clear_parser@@Base+0x17ab>
  424961:	lea    rdx,[rip+0x24412]        # 448d7a <fb_schema_table_deleted@@Base+0xe4a>
  424968:	xor    ecx,ecx
  42496a:	xor    r8d,r8d
  42496d:	xor    r9d,r9d
  424970:	mov    rdi,r12
  424973:	mov    rsi,r14
  424976:	call   41c7d0 <__flatcc_error_report@@Base>
  42497b:	mov    rcx,QWORD PTR [r12+0x48]
  424980:	mov    rax,QWORD PTR [rcx+0x20]
  424984:	lea    rdx,[rax+0x3e7]
  42498b:	cmp    rdx,0x1b
  42498f:	ja     424a87 <__flatcc_fb_clear_parser@@Base+0x18b7>
  424995:	mov    esi,0x97ed7fb
  42499a:	bt     rsi,rdx
  42499e:	jae    424a72 <__flatcc_fb_clear_parser@@Base+0x18a2>
  4249a4:	mov    QWORD PTR [r15],rcx
  4249a7:	cmp    ebp,0x1
  4249aa:	mov    ax,0x7
  4249ae:	adc    ax,0x0
  4249b2:	mov    WORD PTR [r15+0x10],ax
  4249b7:	mov    rdi,r12
  4249ba:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  4249bf:	neg    ebp
  4249c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4249cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4249d0:	mov    rbx,QWORD PTR [r12+0x48]
  4249d5:	cmp    QWORD PTR [rbx+0x20],0x5d
  4249da:	jne    4249f3 <__flatcc_fb_clear_parser@@Base+0x1823>
  4249dc:	mov    rdi,r12
  4249df:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  4249e4:	test   rbx,rbx
  4249e7:	je     4249f3 <__flatcc_fb_clear_parser@@Base+0x1823>
  4249e9:	add    ebp,0x1
  4249ec:	cmp    ebp,0x1
  4249ef:	jne    4249d0 <__flatcc_fb_clear_parser@@Base+0x1800>
  4249f1:	jmp    4249f7 <__flatcc_fb_clear_parser@@Base+0x1827>
  4249f3:	test   ebp,ebp
  4249f5:	je     424a11 <__flatcc_fb_clear_parser@@Base+0x1841>
  4249f7:	lea    rdx,[rip+0x243d7]        # 448dd5 <fb_schema_table_deleted@@Base+0xea5>
  4249fe:	xor    esi,esi
  424a00:	xor    r8d,r8d
  424a03:	xor    r9d,r9d
  424a06:	mov    rdi,r12
  424a09:	mov    rcx,r14
  424a0c:	call   41c7d0 <__flatcc_error_report@@Base>
  424a11:	mov    r15,QWORD PTR [r12+0x48]
  424a16:	cmp    QWORD PTR [r15+0x20],0x5d
  424a1b:	jne    424a69 <__flatcc_fb_clear_parser@@Base+0x1899>
  424a1d:	mov    rdi,r12
  424a20:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  424a25:	test   r15,r15
  424a28:	je     424a69 <__flatcc_fb_clear_parser@@Base+0x1899>
  424a2a:	lea    rdx,[rip+0x243c5]        # 448df6 <fb_schema_table_deleted@@Base+0xec6>
  424a31:	xor    r8d,r8d
  424a34:	xor    r9d,r9d
  424a37:	mov    rdi,r12
  424a3a:	mov    rsi,r15
  424a3d:	mov    rcx,r14
  424a40:	call   41c7d0 <__flatcc_error_report@@Base>
  424a45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424a4f:	nop
  424a50:	mov    rbx,QWORD PTR [r12+0x48]
  424a55:	cmp    QWORD PTR [rbx+0x20],0x5d
  424a5a:	jne    424a69 <__flatcc_fb_clear_parser@@Base+0x1899>
  424a5c:	mov    rdi,r12
  424a5f:	call   4230e0 <__flatcc_fb_parse@@Base+0x6300>
  424a64:	test   rbx,rbx
  424a67:	jne    424a50 <__flatcc_fb_clear_parser@@Base+0x1880>
  424a69:	pop    rbx
  424a6a:	pop    r12
  424a6c:	pop    r14
  424a6e:	pop    r15
  424a70:	pop    rbp
  424a71:	ret    
  424a72:	cmp    rdx,0x19
  424a76:	jne    424a87 <__flatcc_fb_clear_parser@@Base+0x18b7>
  424a78:	mov    QWORD PTR [r15],rcx
  424a7b:	cmp    ebp,0x1
  424a7e:	mov    ax,0x9
  424a82:	jmp    4249ae <__flatcc_fb_clear_parser@@Base+0x17de>
  424a87:	cmp    rax,0x9
  424a8b:	je     424a9c <__flatcc_fb_clear_parser@@Base+0x18cc>
  424a8d:	cmp    rax,0x5d
  424a91:	jne    424abc <__flatcc_fb_clear_parser@@Base+0x18ec>
  424a93:	lea    rdx,[rip+0x24308]        # 448da2 <fb_schema_table_deleted@@Base+0xe72>
  424a9a:	jmp    424ac3 <__flatcc_fb_clear_parser@@Base+0x18f3>
  424a9c:	mov    rdi,r12
  424a9f:	mov    rsi,r15
  424aa2:	call   424020 <__flatcc_fb_clear_parser@@Base+0xe50>
  424aa7:	cmp    ebp,0x1
  424aaa:	mov    ax,0xb
  424aae:	adc    ax,0x0
  424ab2:	mov    WORD PTR [r15+0x10],ax
  424ab7:	jmp    4249bf <__flatcc_fb_clear_parser@@Base+0x17ef>
  424abc:	lea    rdx,[rip+0x242fb]        # 448dbe <fb_schema_table_deleted@@Base+0xe8e>
  424ac3:	xor    esi,esi
  424ac5:	xor    ecx,ecx
  424ac7:	xor    r8d,r8d
  424aca:	xor    r9d,r9d
  424acd:	mov    rdi,r12
  424ad0:	call   41c7d0 <__flatcc_error_report@@Base>
  424ad5:	jmp    4249bf <__flatcc_fb_clear_parser@@Base+0x17ef>
  424ada:	nop    WORD PTR [rax+rax*1+0x0]

0000000000424ae0 <__flatcc_fb_build_schema@@Base>:
  424ae0:	push   rbp
  424ae1:	mov    rbp,rsp
  424ae4:	push   r15
  424ae6:	push   r14
  424ae8:	push   r13
  424aea:	push   r12
  424aec:	push   rbx
  424aed:	and    rsp,0xffffffffffffffe0
  424af1:	sub    rsp,0x140
  424af8:	mov    r12,rdi
  424afb:	lea    r14,[rdi+0x1f8]
  424b02:	lea    rdi,[rdi+0x320]
  424b09:	mov    QWORD PTR [rsp+0x58],rdi
  424b0e:	mov    rsi,r14
  424b11:	call   419e50 <ptr_set_find_item@@Base>
  424b16:	test   rax,rax
  424b19:	je     4268c6 <__flatcc_fb_build_schema@@Base+0x1de6>
  424b1f:	mov    r15,QWORD PTR [r12+0x238]
  424b27:	test   r15,r15
  424b2a:	je     424d8c <__flatcc_fb_build_schema@@Base+0x2ac>
  424b30:	mov    r13d,0x811c9dc5
  424b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424b40:	movzx  eax,WORD PTR [r15+0x10]
  424b45:	cmp    eax,0x4
  424b48:	ja     424d80 <__flatcc_fb_build_schema@@Base+0x2a0>
  424b4e:	mov    rdi,QWORD PTR [r15+0x18]
  424b52:	mov    eax,0x811c9dc5
  424b57:	test   rdi,rdi
  424b5a:	je     424c65 <__flatcc_fb_build_schema@@Base+0x185>
  424b60:	mov    r8,QWORD PTR [rdi]
  424b63:	test   r8,r8
  424b66:	je     424c65 <__flatcc_fb_build_schema@@Base+0x185>
  424b6c:	mov    eax,0x811c9dc5
  424b71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424b7b:	nop    DWORD PTR [rax+rax*1+0x0]
  424b80:	mov    rdx,QWORD PTR [r8+0x8]
  424b84:	mov    r10,QWORD PTR [rdx+0x8]
  424b88:	test   r10,r10
  424b8b:	je     424c50 <__flatcc_fb_build_schema@@Base+0x170>
  424b91:	mov    rsi,QWORD PTR [rdx]
  424b94:	lea    r9,[r10-0x1]
  424b98:	mov    rdx,r10
  424b9b:	and    rdx,0x7
  424b9f:	je     424bcb <__flatcc_fb_build_schema@@Base+0xeb>
  424ba1:	xor    ebx,ebx
  424ba3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424bad:	nop    DWORD PTR [rax]
  424bb0:	movzx  ecx,BYTE PTR [rsi+rbx*1]
  424bb4:	xor    ecx,eax
  424bb6:	imul   eax,ecx,0x1000193
  424bbc:	add    rbx,0x1
  424bc0:	cmp    rdx,rbx
  424bc3:	jne    424bb0 <__flatcc_fb_build_schema@@Base+0xd0>
  424bc5:	sub    r10,rbx
  424bc8:	add    rsi,rbx
  424bcb:	cmp    r9,0x7
  424bcf:	jb     424c50 <__flatcc_fb_build_schema@@Base+0x170>
  424bd1:	xor    ebx,ebx
  424bd3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424bdd:	nop    DWORD PTR [rax]
  424be0:	movzx  ecx,BYTE PTR [rsi+rbx*1]
  424be4:	xor    ecx,eax
  424be6:	imul   eax,ecx,0x1000193
  424bec:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x1]
  424bf1:	xor    ecx,eax
  424bf3:	imul   eax,ecx,0x1000193
  424bf9:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x2]
  424bfe:	xor    ecx,eax
  424c00:	imul   eax,ecx,0x1000193
  424c06:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x3]
  424c0b:	xor    ecx,eax
  424c0d:	imul   eax,ecx,0x1000193
  424c13:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x4]
  424c18:	xor    ecx,eax
  424c1a:	imul   eax,ecx,0x1000193
  424c20:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x5]
  424c25:	xor    ecx,eax
  424c27:	imul   eax,ecx,0x1000193
  424c2d:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x6]
  424c32:	xor    ecx,eax
  424c34:	imul   eax,ecx,0x1000193
  424c3a:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x7]
  424c3f:	xor    ecx,eax
  424c41:	imul   eax,ecx,0x1000193
  424c47:	add    rbx,0x8
  424c4b:	cmp    r10,rbx
  424c4e:	jne    424be0 <__flatcc_fb_build_schema@@Base+0x100>
  424c50:	xor    eax,0x2e
  424c53:	imul   eax,eax,0x1000193
  424c59:	mov    r8,QWORD PTR [r8]
  424c5c:	test   r8,r8
  424c5f:	jne    424b80 <__flatcc_fb_build_schema@@Base+0xa0>
  424c65:	mov    rcx,QWORD PTR [r15+0x8]
  424c69:	mov    r9,QWORD PTR [rcx+0x8]
  424c6d:	test   r9,r9
  424c70:	je     424d30 <__flatcc_fb_build_schema@@Base+0x250>
  424c76:	mov    rdx,QWORD PTR [rcx]
  424c79:	lea    r8,[r9-0x1]
  424c7d:	mov    rcx,r9
  424c80:	and    rcx,0x7
  424c84:	je     424cab <__flatcc_fb_build_schema@@Base+0x1cb>
  424c86:	xor    esi,esi
  424c88:	nop    DWORD PTR [rax+rax*1+0x0]
  424c90:	movzx  ebx,BYTE PTR [rdx+rsi*1]
  424c94:	xor    ebx,eax
  424c96:	imul   eax,ebx,0x1000193
  424c9c:	add    rsi,0x1
  424ca0:	cmp    rcx,rsi
  424ca3:	jne    424c90 <__flatcc_fb_build_schema@@Base+0x1b0>
  424ca5:	sub    r9,rsi
  424ca8:	add    rdx,rsi
  424cab:	cmp    r8,0x7
  424caf:	jb     424d30 <__flatcc_fb_build_schema@@Base+0x250>
  424cb1:	xor    esi,esi
  424cb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424cbd:	nop    DWORD PTR [rax]
  424cc0:	movzx  ecx,BYTE PTR [rdx+rsi*1]
  424cc4:	xor    ecx,eax
  424cc6:	imul   eax,ecx,0x1000193
  424ccc:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x1]
  424cd1:	xor    ecx,eax
  424cd3:	imul   eax,ecx,0x1000193
  424cd9:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x2]
  424cde:	xor    ecx,eax
  424ce0:	imul   eax,ecx,0x1000193
  424ce6:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x3]
  424ceb:	xor    ecx,eax
  424ced:	imul   eax,ecx,0x1000193
  424cf3:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x4]
  424cf8:	xor    ecx,eax
  424cfa:	imul   eax,ecx,0x1000193
  424d00:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x5]
  424d05:	xor    ecx,eax
  424d07:	imul   eax,ecx,0x1000193
  424d0d:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x6]
  424d12:	xor    ecx,eax
  424d14:	imul   eax,ecx,0x1000193
  424d1a:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x7]
  424d1f:	xor    ecx,eax
  424d21:	imul   eax,ecx,0x1000193
  424d27:	add    rsi,0x8
  424d2b:	cmp    r9,rsi
  424d2e:	jne    424cc0 <__flatcc_fb_build_schema@@Base+0x1e0>
  424d30:	test   eax,eax
  424d32:	cmove  eax,r13d
  424d36:	mov    DWORD PTR [r15+0xa0],eax
  424d3d:	mov    QWORD PTR [r15+0x20],r14
  424d41:	test   rdi,rdi
  424d44:	je     424d80 <__flatcc_fb_build_schema@@Base+0x2a0>
  424d46:	add    rdi,0x8
  424d4a:	mov    edx,0x1
  424d4f:	mov    rsi,r15
  424d52:	call   41a450 <fb_symbol_table_insert_item@@Base>
  424d57:	test   rax,rax
  424d5a:	je     424d80 <__flatcc_fb_build_schema@@Base+0x2a0>
  424d5c:	mov    rsi,QWORD PTR [r15+0x8]
  424d60:	mov    rcx,QWORD PTR [rax+0x8]
  424d64:	xor    r8d,r8d
  424d67:	xor    r9d,r9d
  424d6a:	mov    rdi,r12
  424d6d:	lea    rdx,[rip+0x244e1]        # 449255 <fb_schema_table_deleted@@Base+0x1325>
  424d74:	call   41c7d0 <__flatcc_error_report@@Base>
  424d79:	nop    DWORD PTR [rax+0x0]
  424d80:	mov    r15,QWORD PTR [r15]
  424d83:	test   r15,r15
  424d86:	jne    424b40 <__flatcc_fb_build_schema@@Base+0x60>
  424d8c:	mov    rbx,QWORD PTR [r12+0x200]
  424d94:	test   rbx,rbx
  424d97:	je     424ddd <__flatcc_fb_build_schema@@Base+0x2fd>
  424d99:	lea    r14,[rip+0x244d1]        # 449271 <fb_schema_table_deleted@@Base+0x1341>
  424da0:	mov    rdi,QWORD PTR [r12+0x260]
  424da8:	add    rdi,0x20
  424dac:	mov    edx,0x1
  424db1:	mov    rsi,rbx
  424db4:	call   42d860 <fb_name_table_insert_item@@Base>
  424db9:	test   rax,rax
  424dbc:	je     424dd5 <__flatcc_fb_build_schema@@Base+0x2f5>
  424dbe:	mov    r8,QWORD PTR [rbx+0x8]
  424dc2:	mov    r9d,DWORD PTR [rbx+0x10]
  424dc6:	xor    esi,esi
  424dc8:	xor    ecx,ecx
  424dca:	mov    rdi,r12
  424dcd:	mov    rdx,r14
  424dd0:	call   41c7d0 <__flatcc_error_report@@Base>
  424dd5:	mov    rbx,QWORD PTR [rbx]
  424dd8:	test   rbx,rbx
  424ddb:	jne    424da0 <__flatcc_fb_build_schema@@Base+0x2c0>
  424ddd:	lea    r14,[rip+0x2dfbc]        # 452da0 <fb_value_set_deleted@@Base+0x6b40>
  424de4:	xor    r15d,r15d
  424de7:	nop    WORD PTR [rax+rax*1+0x0]
  424df0:	mov    rbx,QWORD PTR [r12+0x60]
  424df5:	lea    rax,[rbx+0x30]
  424df9:	cmp    rax,QWORD PTR [r12+0x50]
  424dfe:	jbe    424e3e <__flatcc_fb_build_schema@@Base+0x35e>
  424e00:	mov    edi,0x10000
  424e05:	mov    esi,0x1
  424e0a:	call   406150 <calloc@plt>
  424e0f:	test   rax,rax
  424e12:	je     42689c <__flatcc_fb_build_schema@@Base+0x1dbc>
  424e18:	mov    rcx,QWORD PTR [r12+0x58]
  424e1d:	mov    QWORD PTR [rax],rcx
  424e20:	mov    QWORD PTR [r12+0x58],rax
  424e25:	lea    rbx,[rax+0x10]
  424e29:	mov    QWORD PTR [r12+0x60],rbx
  424e2e:	lea    rcx,[rax+0x10000]
  424e35:	mov    QWORD PTR [r12+0x50],rcx
  424e3a:	add    rax,0x40
  424e3e:	mov    QWORD PTR [r12+0x60],rax
  424e43:	mov    DWORD PTR [rbx+0x20],r15d
  424e47:	mov    rdi,QWORD PTR [r14]
  424e4a:	mov    QWORD PTR [rbx+0x8],rdi
  424e4e:	call   4060d0 <strlen@plt>
  424e53:	mov    DWORD PTR [rbx+0x10],eax
  424e56:	mov    WORD PTR [rbx+0x18],0x2
  424e5c:	mov    QWORD PTR [rbx],0x0
  424e63:	mov    rdi,QWORD PTR [r12+0x260]
  424e6b:	add    rdi,0x20
  424e6f:	mov    edx,0x1
  424e74:	mov    rsi,rbx
  424e77:	call   42d860 <fb_name_table_insert_item@@Base>
  424e7c:	test   rax,rax
  424e7f:	je     424e85 <__flatcc_fb_build_schema@@Base+0x3a5>
  424e81:	mov    DWORD PTR [rax+0x20],r15d
  424e85:	add    r15,0x1
  424e89:	add    r14,0x8
  424e8d:	cmp    r15,0xc
  424e91:	jb     424df0 <__flatcc_fb_build_schema@@Base+0x310>
  424e97:	cmp    DWORD PTR [r12+0x124],0x0
  424ea0:	jne    424ee6 <__flatcc_fb_build_schema@@Base+0x406>
  424ea2:	mov    rbx,QWORD PTR [r12+0x238]
  424eaa:	test   rbx,rbx
  424ead:	je     4264ad <__flatcc_fb_build_schema@@Base+0x19cd>
  424eb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424ebd:	nop    DWORD PTR [rax]
  424ec0:	movzx  eax,WORD PTR [rbx+0x10]
  424ec4:	cmp    eax,0x3
  424ec7:	jne    424ede <__flatcc_fb_build_schema@@Base+0x3fe>
  424ec9:	mov    rdi,r12
  424ecc:	mov    rsi,rbx
  424ecf:	call   426950 <__flatcc_fb_build_schema@@Base+0x1e70>
  424ed4:	test   eax,eax
  424ed6:	je     424ede <__flatcc_fb_build_schema@@Base+0x3fe>
  424ed8:	mov    WORD PTR [rbx+0x58],0x1
  424ede:	mov    rbx,QWORD PTR [rbx]
  424ee1:	test   rbx,rbx
  424ee4:	jne    424ec0 <__flatcc_fb_build_schema@@Base+0x3e0>
  424ee6:	mov    rbx,QWORD PTR [r12+0x238]
  424eee:	test   rbx,rbx
  424ef1:	je     4264ad <__flatcc_fb_build_schema@@Base+0x19cd>
  424ef7:	lea    r13,[rip+0x24112]        # 449010 <fb_schema_table_deleted@@Base+0x10e0>
  424efe:	lea    r14,[rip+0x249c4]        # 4498c9 <fb_schema_table_deleted@@Base+0x1999>
  424f05:	lea    r15,[rip+0x24993]        # 44989f <fb_schema_table_deleted@@Base+0x196f>
  424f0c:	nop    DWORD PTR [rax+0x0]
  424f10:	movzx  eax,WORD PTR [rbx+0x10]
  424f14:	cmp    rax,0x4
  424f18:	ja     42528a <__flatcc_fb_build_schema@@Base+0x7aa>
  424f1e:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  424f23:	add    rax,r13
  424f26:	jmp    rax
  424f28:	cmp    WORD PTR [rbx+0x58],0x0
  424f2d:	je     424f75 <__flatcc_fb_build_schema@@Base+0x495>
  424f2f:	mov    rsi,QWORD PTR [rbx+0x8]
  424f33:	xor    ecx,ecx
  424f35:	xor    r8d,r8d
  424f38:	xor    r9d,r9d
  424f3b:	mov    rdi,r12
  424f3e:	mov    rdx,r15
  424f41:	call   41c7d0 <__flatcc_error_report@@Base>
  424f46:	jmp    424f62 <__flatcc_fb_build_schema@@Base+0x482>
  424f48:	cmp    DWORD PTR [r12+0x124],0x0
  424f51:	je     424f68 <__flatcc_fb_build_schema@@Base+0x488>
  424f53:	mov    rdi,r12
  424f56:	mov    rsi,rbx
  424f59:	call   426950 <__flatcc_fb_build_schema@@Base+0x1e70>
  424f5e:	test   eax,eax
  424f60:	je     424f68 <__flatcc_fb_build_schema@@Base+0x488>
  424f62:	mov    WORD PTR [rbx+0x58],0x1
  424f68:	mov    rbx,QWORD PTR [rbx]
  424f6b:	test   rbx,rbx
  424f6e:	jne    424f10 <__flatcc_fb_build_schema@@Base+0x430>
  424f70:	jmp    4252af <__flatcc_fb_build_schema@@Base+0x7cf>
  424f75:	mov    rsi,QWORD PTR [rbx+0x38]
  424f79:	mov    edx,0x10
  424f7e:	mov    rdi,r12
  424f81:	lea    rcx,[rsp+0x60]
  424f86:	call   427400 <__flatcc_fb_build_schema@@Base+0x2920>
  424f8b:	mov    WORD PTR [rbx+0xa4],ax
  424f92:	mov    rax,QWORD PTR [rsp+0x80]
  424f9a:	test   rax,rax
  424f9d:	je     424fed <__flatcc_fb_build_schema@@Base+0x50d>
  424f9f:	mov    rax,QWORD PTR [rax+0x10]
  424fa3:	test   rax,rax
  424fa6:	je     424fcd <__flatcc_fb_build_schema@@Base+0x4ed>
  424fa8:	lea    rcx,[rax-0x1]
  424fac:	cmp    rcx,0xff
  424fb3:	ja     424fcd <__flatcc_fb_build_schema@@Base+0x4ed>
  424fb5:	mov    ecx,0x1
  424fba:	nop    WORD PTR [rax+rax*1+0x0]
  424fc0:	cmp    rcx,rax
  424fc3:	je     424fe6 <__flatcc_fb_build_schema@@Base+0x506>
  424fc5:	add    rcx,rcx
  424fc8:	cmp    rcx,rax
  424fcb:	jbe    424fc0 <__flatcc_fb_build_schema@@Base+0x4e0>
  424fcd:	mov    rsi,QWORD PTR [rbx+0x8]
  424fd1:	xor    ecx,ecx
  424fd3:	xor    r8d,r8d
  424fd6:	xor    r9d,r9d
  424fd9:	mov    rdi,r12
  424fdc:	mov    rdx,r14
  424fdf:	call   41c7d0 <__flatcc_error_report@@Base>
  424fe4:	jmp    424fed <__flatcc_fb_build_schema@@Base+0x50d>
  424fe6:	mov    WORD PTR [rbx+0xb0],ax
  424fed:	mov    r15,QWORD PTR [rbx+0x28]
  424ff1:	test   r15,r15
  424ff4:	je     4251da <__flatcc_fb_build_schema@@Base+0x6fa>
  424ffa:	lea    r14,[rbx+0x60]
  424ffe:	mov    DWORD PTR [rsp+0x4],0x0
  425006:	jmp    425080 <__flatcc_fb_build_schema@@Base+0x5a0>
  425008:	mov    rsi,QWORD PTR [r15+0x18]
  42500c:	mov    rdi,r12
  42500f:	lea    rdx,[rip+0x24942]        # 449958 <fb_schema_table_deleted@@Base+0x1a28>
  425016:	mov    rcx,r15
  425019:	call   41ca00 <error_ref_sym@@Base>
  42501e:	mov    WORD PTR [r15+0x28],0x1
  425025:	jmp    42518a <__flatcc_fb_build_schema@@Base+0x6aa>
  42502a:	cmp    DWORD PTR [r12+0x104],0x0
  425033:	je     42524a <__flatcc_fb_build_schema@@Base+0x76a>
  425039:	movzx  ecx,cx
  42503c:	cmp    ecx,0x3
  42503f:	jne    425264 <__flatcc_fb_build_schema@@Base+0x784>
  425045:	cmp    BYTE PTR [r15+0x70],0x0
  42504a:	jns    425167 <__flatcc_fb_build_schema@@Base+0x687>
  425050:	cmp    DWORD PTR [r12+0x100],0x0
  425059:	je     425232 <__flatcc_fb_build_schema@@Base+0x752>
  42505f:	add    DWORD PTR [rsp+0x4],0x1
  425064:	cmp    WORD PTR [r15+0x58],0x0
  42506a:	jne    42516f <__flatcc_fb_build_schema@@Base+0x68f>
  425070:	jmp    42518a <__flatcc_fb_build_schema@@Base+0x6aa>
  425075:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42507f:	nop
  425080:	mov    edx,0x1
  425085:	mov    rdi,r14
  425088:	mov    rsi,r15
  42508b:	call   41a450 <fb_symbol_table_insert_item@@Base>
  425090:	test   rax,rax
  425093:	je     4250c0 <__flatcc_fb_build_schema@@Base+0x5e0>
  425095:	mov    rsi,QWORD PTR [r15+0x8]
  425099:	mov    rcx,QWORD PTR [rax+0x8]
  42509d:	xor    r8d,r8d
  4250a0:	xor    r9d,r9d
  4250a3:	mov    rdi,r12
  4250a6:	lea    rdx,[rip+0x24865]        # 449912 <fb_schema_table_deleted@@Base+0x19e2>
  4250ad:	jmp    425185 <__flatcc_fb_build_schema@@Base+0x6a5>
  4250b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4250bc:	nop    DWORD PTR [rax+0x0]
  4250c0:	movzx  eax,WORD PTR [r15+0x10]
  4250c5:	cmp    eax,0x5
  4250c8:	jne    4251e6 <__flatcc_fb_build_schema@@Base+0x706>
  4250ce:	xor    eax,eax
  4250d0:	cmp    DWORD PTR [r12+0x118],0x0
  4250d9:	setne  al
  4250dc:	shl    eax,0x7
  4250df:	lea    edx,[rax+0x4]
  4250e2:	cmp    DWORD PTR [r12+0x114],0x0
  4250eb:	cmove  edx,eax
  4250ee:	mov    rsi,QWORD PTR [r15+0x60]
  4250f2:	mov    rdi,r12
  4250f5:	lea    rcx,[rsp+0x60]
  4250fa:	call   427400 <__flatcc_fb_build_schema@@Base+0x2920>
  4250ff:	mov    WORD PTR [r15+0x70],ax
  425104:	movzx  ecx,WORD PTR [r15+0x28]
  425109:	cmp    ecx,0x8
  42510c:	je     425159 <__flatcc_fb_build_schema@@Base+0x679>
  42510e:	movzx  eax,cx
  425111:	cmp    eax,0xc
  425114:	jne    4251fe <__flatcc_fb_build_schema@@Base+0x71e>
  42511a:	mov    rsi,QWORD PTR [rbx+0x18]
  42511e:	mov    rdx,QWORD PTR [r15+0x18]
  425122:	xor    ecx,ecx
  425124:	mov    rdi,r12
  425127:	call   4275e0 <__flatcc_fb_build_schema@@Base+0x2b00>
  42512c:	test   rax,rax
  42512f:	je     425008 <__flatcc_fb_build_schema@@Base+0x528>
  425135:	mov    QWORD PTR [r15+0x18],rax
  425139:	mov    WORD PTR [r15+0x28],0xe
  425140:	movzx  ecx,WORD PTR [rax+0x10]
  425144:	cmp    ecx,0x1
  425147:	jne    42502a <__flatcc_fb_build_schema@@Base+0x54a>
  42514d:	cmp    BYTE PTR [r15+0x70],0x0
  425152:	jns    425167 <__flatcc_fb_build_schema@@Base+0x687>
  425154:	jmp    425232 <__flatcc_fb_build_schema@@Base+0x752>
  425159:	mov    ecx,0x107
  42515e:	bextr  eax,eax,ecx
  425163:	add    DWORD PTR [rsp+0x4],eax
  425167:	cmp    WORD PTR [r15+0x58],0x0
  42516d:	je     42518a <__flatcc_fb_build_schema@@Base+0x6aa>
  42516f:	mov    rsi,QWORD PTR [r15+0x8]
  425173:	xor    ecx,ecx
  425175:	xor    r8d,r8d
  425178:	xor    r9d,r9d
  42517b:	mov    rdi,r12
  42517e:	lea    rdx,[rip+0x248ec]        # 449a71 <fb_schema_table_deleted@@Base+0x1b41>
  425185:	call   41c7d0 <__flatcc_error_report@@Base>
  42518a:	mov    r15,QWORD PTR [r15]
  42518d:	test   r15,r15
  425190:	jne    425080 <__flatcc_fb_build_schema@@Base+0x5a0>
  425196:	mov    eax,DWORD PTR [rsp+0x4]
  42519a:	test   eax,eax
  42519c:	lea    r14,[rip+0x24726]        # 4498c9 <fb_schema_table_deleted@@Base+0x1999>
  4251a3:	je     4251da <__flatcc_fb_build_schema@@Base+0x6fa>
  4251a5:	or     BYTE PTR [rbx+0x12],0x8
  4251a9:	cmp    eax,0x2
  4251ac:	jl     4251da <__flatcc_fb_build_schema@@Base+0x6fa>
  4251ae:	cmp    DWORD PTR [r12+0x108],0x0
  4251b7:	jne    4251da <__flatcc_fb_build_schema@@Base+0x6fa>
  4251b9:	mov    rsi,QWORD PTR [rbx+0x8]
  4251bd:	xor    ecx,ecx
  4251bf:	xor    r8d,r8d
  4251c2:	xor    r9d,r9d
  4251c5:	mov    rdi,r12
  4251c8:	lea    rdx,[rip+0x248d3]        # 449aa2 <fb_schema_table_deleted@@Base+0x1b72>
  4251cf:	call   41c7d0 <__flatcc_error_report@@Base>
  4251d4:	mov    WORD PTR [rbx+0x58],0x1
  4251da:	lea    r15,[rip+0x246be]        # 44989f <fb_schema_table_deleted@@Base+0x196f>
  4251e1:	jmp    424f68 <__flatcc_fb_build_schema@@Base+0x488>
  4251e6:	mov    rsi,QWORD PTR [r15+0x8]
  4251ea:	xor    ecx,ecx
  4251ec:	xor    r8d,r8d
  4251ef:	xor    r9d,r9d
  4251f2:	mov    rdi,r12
  4251f5:	lea    rdx,[rip+0x24738]        # 449934 <fb_schema_table_deleted@@Base+0x1a04>
  4251fc:	jmp    425214 <__flatcc_fb_build_schema@@Base+0x734>
  4251fe:	mov    rsi,QWORD PTR [r15+0x8]
  425202:	xor    ecx,ecx
  425204:	xor    r8d,r8d
  425207:	xor    r9d,r9d
  42520a:	mov    rdi,r12
  42520d:	lea    rdx,[rip+0x24823]        # 449a37 <fb_schema_table_deleted@@Base+0x1b07>
  425214:	call   41c7d0 <__flatcc_error_report@@Base>
  425219:	mov    WORD PTR [rbx+0x58],0x1
  42521f:	lea    r14,[rip+0x246a3]        # 4498c9 <fb_schema_table_deleted@@Base+0x1999>
  425226:	lea    r15,[rip+0x24672]        # 44989f <fb_schema_table_deleted@@Base+0x196f>
  42522d:	jmp    424f68 <__flatcc_fb_build_schema@@Base+0x488>
  425232:	mov    rsi,QWORD PTR [r15+0x8]
  425236:	xor    ecx,ecx
  425238:	xor    r8d,r8d
  42523b:	xor    r9d,r9d
  42523e:	mov    rdi,r12
  425241:	lea    rdx,[rip+0x24782]        # 4499ca <fb_schema_table_deleted@@Base+0x1a9a>
  425248:	jmp    42527c <__flatcc_fb_build_schema@@Base+0x79c>
  42524a:	mov    rsi,QWORD PTR [r15+0x8]
  42524e:	mov    rcx,QWORD PTR [rax+0x8]
  425252:	xor    r8d,r8d
  425255:	xor    r9d,r9d
  425258:	mov    rdi,r12
  42525b:	lea    rdx,[rip+0x24799]        # 4499fb <fb_schema_table_deleted@@Base+0x1acb>
  425262:	jmp    42527c <__flatcc_fb_build_schema@@Base+0x79c>
  425264:	mov    rsi,QWORD PTR [r15+0x8]
  425268:	mov    rcx,QWORD PTR [rax+0x8]
  42526c:	xor    r8d,r8d
  42526f:	xor    r9d,r9d
  425272:	mov    rdi,r12
  425275:	lea    rdx,[rip+0x2470a]        # 449986 <fb_schema_table_deleted@@Base+0x1a56>
  42527c:	call   41c7d0 <__flatcc_error_report@@Base>
  425281:	mov    WORD PTR [r15+0x28],0x1
  425288:	jmp    425219 <__flatcc_fb_build_schema@@Base+0x739>
  42528a:	mov    rsi,QWORD PTR [rbx+0x8]
  42528e:	lea    rdx,[rip+0x23ff6]        # 44928b <fb_schema_table_deleted@@Base+0x135b>
  425295:	xor    ecx,ecx
  425297:	xor    r8d,r8d
  42529a:	xor    r9d,r9d
  42529d:	mov    rdi,r12
  4252a0:	call   41c7d0 <__flatcc_error_report@@Base>
  4252a5:	mov    eax,0xffffffff
  4252aa:	jmp    426868 <__flatcc_fb_build_schema@@Base+0x1d88>
  4252af:	mov    rbx,QWORD PTR [r12+0x238]
  4252b7:	test   rbx,rbx
  4252ba:	je     4264ad <__flatcc_fb_build_schema@@Base+0x19cd>
  4252c0:	movzx  eax,WORD PTR [rbx+0x10]
  4252c4:	cmp    eax,0x1
  4252c7:	jne    4252f0 <__flatcc_fb_build_schema@@Base+0x810>
  4252c9:	movzx  eax,WORD PTR [rbx+0x58]
  4252cd:	cmp    eax,0x1
  4252d0:	je     4252f0 <__flatcc_fb_build_schema@@Base+0x810>
  4252d2:	mov    rdi,r12
  4252d5:	mov    rsi,rbx
  4252d8:	call   427000 <__flatcc_fb_build_schema@@Base+0x2520>
  4252dd:	test   eax,eax
  4252df:	je     4252f0 <__flatcc_fb_build_schema@@Base+0x810>
  4252e1:	mov    WORD PTR [rbx+0x58],0x1
  4252e7:	nop    WORD PTR [rax+rax*1+0x0]
  4252f0:	mov    rbx,QWORD PTR [rbx]
  4252f3:	test   rbx,rbx
  4252f6:	jne    4252c0 <__flatcc_fb_build_schema@@Base+0x7e0>
  4252f8:	mov    r13,QWORD PTR [r12+0x238]
  425300:	test   r13,r13
  425303:	je     4264ad <__flatcc_fb_build_schema@@Base+0x19cd>
  425309:	lea    r15,[rip+0x24a20]        # 449d30 <fb_schema_table_deleted@@Base+0x1e00>
  425310:	movzx  eax,WORD PTR [r13+0x10]
  425315:	cmp    eax,0x2
  425318:	je     426120 <__flatcc_fb_build_schema@@Base+0x1640>
  42531e:	test   ax,ax
  425321:	jne    4264a0 <__flatcc_fb_build_schema@@Base+0x19c0>
  425327:	movzx  eax,WORD PTR [r13+0x58]
  42532c:	cmp    eax,0x1
  42532f:	je     4264a0 <__flatcc_fb_build_schema@@Base+0x19c0>
  425335:	test   ax,ax
  425338:	jne    4268e5 <__flatcc_fb_build_schema@@Base+0x1e05>
  42533e:	mov    rsi,QWORD PTR [r13+0x38]
  425342:	mov    edx,0x8
  425347:	mov    rdi,r12
  42534a:	lea    rcx,[rsp+0x60]
  42534f:	call   427400 <__flatcc_fb_build_schema@@Base+0x2920>
  425354:	mov    WORD PTR [r13+0xa4],ax
  42535c:	mov    r14,QWORD PTR [r13+0x28]
  425360:	test   r14,r14
  425363:	je     42630c <__flatcc_fb_build_schema@@Base+0x182c>
  425369:	lea    rbx,[r13+0x60]
  42536d:	xor    eax,eax
  42536f:	mov    QWORD PTR [rsp+0x30],rax
  425374:	mov    DWORD PTR [rsp+0x1c],0x0
  42537c:	xor    eax,eax
  42537e:	mov    QWORD PTR [rsp+0x40],rax
  425383:	mov    DWORD PTR [rsp+0x4],0x0
  42538b:	mov    DWORD PTR [rsp+0x18],0x0
  425393:	xor    eax,eax
  425395:	mov    QWORD PTR [rsp+0x20],rax
  42539a:	mov    QWORD PTR [rsp+0x10],rbx
  42539f:	jmp    4260b0 <__flatcc_fb_build_schema@@Base+0x15d0>
  4253a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4253ae:	xchg   ax,ax
  4253b0:	movzx  eax,WORD PTR [r14+0x10]
  4253b5:	cmp    eax,0x5
  4253b8:	jne    426328 <__flatcc_fb_build_schema@@Base+0x1848>
  4253be:	mov    eax,DWORD PTR [r14+0x28]
  4253c2:	lea    ecx,[rax-0x7]
  4253c5:	movzx  ecx,cx
  4253c8:	cmp    ecx,0x2
  4253cb:	jae    4253f8 <__flatcc_fb_build_schema@@Base+0x918>
  4253cd:	mov    rax,QWORD PTR [r14+0x18]
  4253d1:	mov    rcx,QWORD PTR [rax+0x20]
  4253d5:	lea    rdx,[rcx+0x3e7]
  4253dc:	xor    eax,eax
  4253de:	cmp    rdx,0x1b
  4253e2:	ja     4253f2 <__flatcc_fb_build_schema@@Base+0x912>
  4253e4:	lea    rax,[rip+0x23cc5]        # 4490b0 <fb_schema_table_deleted@@Base+0x1180>
  4253eb:	mov    eax,DWORD PTR [rax+rcx*4+0xf9c]
  4253f2:	mov    DWORD PTR [r14+0x18],eax
  4253f6:	jmp    425404 <__flatcc_fb_build_schema@@Base+0x924>
  4253f8:	movzx  eax,ax
  4253fb:	cmp    eax,0x1
  4253fe:	je     4260e2 <__flatcc_fb_build_schema@@Base+0x1602>
  425404:	mov    rsi,QWORD PTR [r14+0x60]
  425408:	mov    edx,0xfc6
  42540d:	mov    rdi,r12
  425410:	lea    rcx,[rsp+0x60]
  425415:	call   427400 <__flatcc_fb_build_schema@@Base+0x2920>
  42541a:	mov    WORD PTR [r14+0x70],ax
  42541f:	mov    rcx,QWORD PTR [rsp+0x90]
  425427:	test   rcx,rcx
  42542a:	mov    ebx,DWORD PTR [rsp+0x4]
  42542e:	je     4254b5 <__flatcc_fb_build_schema@@Base+0x9d5>
  425434:	movzx  eax,WORD PTR [r14+0x28]
  425439:	cmp    eax,0x7
  42543c:	jne    42549a <__flatcc_fb_build_schema@@Base+0x9ba>
  42543e:	cmp    DWORD PTR [r14+0x18],0x4
  425443:	jne    42549a <__flatcc_fb_build_schema@@Base+0x9ba>
  425445:	movzx  eax,WORD PTR [rcx+0x20]
  425449:	cmp    eax,0x2
  42544c:	jne    4254b5 <__flatcc_fb_build_schema@@Base+0x9d5>
  42544e:	mov    QWORD PTR [rsp+0x48],r13
  425453:	mov    r13,QWORD PTR [r13+0x18]
  425457:	mov    rsi,QWORD PTR [rcx+0x10]
  42545b:	mov    QWORD PTR [rsp+0x50],rcx
  425460:	mov    r15d,DWORD PTR [rcx+0x18]
  425464:	movsxd rax,r15d
  425467:	nop    WORD PTR [rax+rax*1+0x0]
  425470:	test   rax,rax
  425473:	jle    425a01 <__flatcc_fb_build_schema@@Base+0xf21>
  425479:	cmp    BYTE PTR [rsi+rax*1-0x1],0x2e
  42547e:	lea    rax,[rax-0x1]
  425482:	jne    425470 <__flatcc_fb_build_schema@@Base+0x990>
  425484:	lea    rcx,[rsi+rax*1]
  425488:	add    rcx,0x1
  42548c:	mov    QWORD PTR [rsp+0x8],rcx
  425491:	add    r15d,0xffffffff
  425495:	jmp    425a06 <__flatcc_fb_build_schema@@Base+0xf26>
  42549a:	mov    rsi,QWORD PTR [rcx+0x8]
  42549e:	xor    ecx,ecx
  4254a0:	xor    r8d,r8d
  4254a3:	xor    r9d,r9d
  4254a6:	mov    rdi,r12
  4254a9:	lea    rdx,[rip+0x2504d]        # 44a4fd <fb_schema_table_deleted@@Base+0x25cd>
  4254b0:	call   41c7d0 <__flatcc_error_report@@Base>
  4254b5:	movzx  eax,WORD PTR [r14+0x70]
  4254ba:	test   eax,0x100
  4254bf:	je     4254eb <__flatcc_fb_build_schema@@Base+0xa0b>
  4254c1:	movzx  ecx,WORD PTR [r14+0x28]
  4254c6:	cmp    ecx,0x8
  4254c9:	jne    4254eb <__flatcc_fb_build_schema@@Base+0xa0b>
  4254cb:	mov    rsi,QWORD PTR [r14+0x8]
  4254cf:	xor    ecx,ecx
  4254d1:	xor    r8d,r8d
  4254d4:	xor    r9d,r9d
  4254d7:	mov    rdi,r12
  4254da:	lea    rdx,[rip+0x24896]        # 449d77 <fb_schema_table_deleted@@Base+0x1e47>
  4254e1:	call   41c7d0 <__flatcc_error_report@@Base>
  4254e6:	movzx  eax,WORD PTR [r14+0x70]
  4254eb:	test   eax,0x400
  4254f0:	je     425523 <__flatcc_fb_build_schema@@Base+0xa43>
  4254f2:	movzx  ecx,WORD PTR [r14+0x28]
  4254f7:	cmp    ecx,0x7
  4254fa:	jne    425503 <__flatcc_fb_build_schema@@Base+0xa23>
  4254fc:	cmp    DWORD PTR [r14+0x18],0x4
  425501:	je     425523 <__flatcc_fb_build_schema@@Base+0xa43>
  425503:	mov    rsi,QWORD PTR [r14+0x8]
  425507:	xor    ecx,ecx
  425509:	xor    r8d,r8d
  42550c:	xor    r9d,r9d
  42550f:	mov    rdi,r12
  425512:	lea    rdx,[rip+0x24896]        # 449daf <fb_schema_table_deleted@@Base+0x1e7f>
  425519:	call   41c7d0 <__flatcc_error_report@@Base>
  42551e:	movzx  eax,WORD PTR [r14+0x70]
  425523:	test   eax,0x800
  425528:	je     42555b <__flatcc_fb_build_schema@@Base+0xa7b>
  42552a:	movzx  ecx,WORD PTR [r14+0x28]
  42552f:	cmp    ecx,0x7
  425532:	jne    42553b <__flatcc_fb_build_schema@@Base+0xa5b>
  425534:	cmp    DWORD PTR [r14+0x18],0x4
  425539:	je     42555b <__flatcc_fb_build_schema@@Base+0xa7b>
  42553b:	mov    rsi,QWORD PTR [r14+0x8]
  42553f:	xor    ecx,ecx
  425541:	xor    r8d,r8d
  425544:	xor    r9d,r9d
  425547:	mov    rdi,r12
  42554a:	lea    rdx,[rip+0x2489a]        # 449deb <fb_schema_table_deleted@@Base+0x1ebb>
  425551:	call   41c7d0 <__flatcc_error_report@@Base>
  425556:	movzx  eax,WORD PTR [r14+0x70]
  42555b:	and    eax,0xc00
  425560:	cmp    eax,0xc00
  425565:	jne    425582 <__flatcc_fb_build_schema@@Base+0xaa2>
  425567:	mov    rsi,QWORD PTR [r14+0x8]
  42556b:	xor    ecx,ecx
  42556d:	xor    r8d,r8d
  425570:	xor    r9d,r9d
  425573:	mov    rdi,r12
  425576:	lea    rdx,[rip+0x248ad]        # 449e2a <fb_schema_table_deleted@@Base+0x1efa>
  42557d:	call   41c7d0 <__flatcc_error_report@@Base>
  425582:	mov    r15,QWORD PTR [rsp+0x68]
  425587:	cmp    QWORD PTR [rsp+0x20],0x0
  42558d:	jne    4255b8 <__flatcc_fb_build_schema@@Base+0xad8>
  42558f:	test   r15,r15
  425592:	je     4255b8 <__flatcc_fb_build_schema@@Base+0xad8>
  425594:	mov    rdi,QWORD PTR [r12+0xd8]
  42559c:	mov    rdx,QWORD PTR [r12+0x148]
  4255a4:	xor    esi,esi
  4255a6:	mov    QWORD PTR [rsp+0x30],rdi
  4255ab:	call   406110 <memset@plt>
  4255b0:	mov    DWORD PTR [rsp+0x18],0x1
  4255b8:	test   ebx,ebx
  4255ba:	jne    425608 <__flatcc_fb_build_schema@@Base+0xb28>
  4255bc:	mov    rax,QWORD PTR [rsp+0x20]
  4255c1:	cmp    rax,QWORD PTR [r12+0x148]
  4255c9:	jae    4255e2 <__flatcc_fb_build_schema@@Base+0xb02>
  4255cb:	xor    ebx,ebx
  4255cd:	cmp    DWORD PTR [rsp+0x18],0x0
  4255d2:	jne    425602 <__flatcc_fb_build_schema@@Base+0xb22>
  4255d4:	movzx  eax,WORD PTR [rsp+0x20]
  4255d9:	mov    QWORD PTR [r14+0x88],rax
  4255e0:	jmp    425602 <__flatcc_fb_build_schema@@Base+0xb22>
  4255e2:	mov    rsi,QWORD PTR [r14+0x8]
  4255e6:	xor    ecx,ecx
  4255e8:	xor    r8d,r8d
  4255eb:	xor    r9d,r9d
  4255ee:	mov    rdi,r12
  4255f1:	lea    rdx,[rip+0x24869]        # 449e61 <fb_schema_table_deleted@@Base+0x1f31>
  4255f8:	call   41c7d0 <__flatcc_error_report@@Base>
  4255fd:	mov    ebx,0x1
  425602:	add    QWORD PTR [rsp+0x20],0x1
  425608:	mov    eax,DWORD PTR [r14+0x28]
  42560c:	add    eax,0xfffffff9
  42560f:	movzx  ecx,ax
  425612:	cmp    ecx,0x5
  425615:	mov    DWORD PTR [rsp+0x4],ebx
  425619:	ja     4258d0 <__flatcc_fb_build_schema@@Base+0xdf0>
  42561f:	movzx  eax,ax
  425622:	lea    rcx,[rip+0x239fb]        # 449024 <fb_schema_table_deleted@@Base+0x10f4>
  425629:	movsxd rax,DWORD PTR [rcx+rax*4]
  42562d:	add    rax,rcx
  425630:	jmp    rax
  425632:	mov    eax,DWORD PTR [r14+0x18]
  425636:	lea    rcx,[rip+0x23a43]        # 449080 <fb_schema_table_deleted@@Base+0x1150>
  42563d:	movsxd rax,DWORD PTR [rcx+rax*4]
  425641:	mov    QWORD PTR [r14+0x80],rax
  425648:	mov    WORD PTR [r14+0x72],ax
  42564d:	cmp    WORD PTR [r14+0x58],0x0
  425653:	je     425903 <__flatcc_fb_build_schema@@Base+0xe23>
  425659:	mov    rsi,QWORD PTR [r14+0x8]
  42565d:	xor    ecx,ecx
  42565f:	xor    r8d,r8d
  425662:	xor    r9d,r9d
  425665:	mov    rdi,r12
  425668:	lea    rdx,[rip+0x24844]        # 449eb3 <fb_schema_table_deleted@@Base+0x1f83>
  42566f:	jmp    4258e6 <__flatcc_fb_build_schema@@Base+0xe06>
  425674:	mov    rsi,QWORD PTR [r13+0x18]
  425678:	mov    rdx,QWORD PTR [r14+0x18]
  42567c:	xor    ecx,ecx
  42567e:	mov    rdi,r12
  425681:	call   4275e0 <__flatcc_fb_build_schema@@Base+0x2b00>
  425686:	test   rax,rax
  425689:	je     425968 <__flatcc_fb_build_schema@@Base+0xe88>
  42568f:	mov    rbx,rax
  425692:	movzx  eax,WORD PTR [rax+0x10]
  425696:	cmp    eax,0x4
  425699:	ja     425c71 <__flatcc_fb_build_schema@@Base+0x1191>
  42569f:	movzx  eax,ax
  4256a2:	cmp    eax,0x2
  4256a5:	je     425c71 <__flatcc_fb_build_schema@@Base+0x1191>
  4256ab:	cmp    WORD PTR [r14+0x58],0x0
  4256b1:	jne    425dca <__flatcc_fb_build_schema@@Base+0x12ea>
  4256b7:	mov    WORD PTR [r14+0x28],0xf
  4256be:	mov    QWORD PTR [r14+0x18],rbx
  4256c2:	mov    rax,QWORD PTR [rbx+0xb8]
  4256c9:	mov    QWORD PTR [r14+0x80],rax
  4256d0:	movzx  eax,WORD PTR [rbx+0xb0]
  4256d7:	mov    WORD PTR [r14+0x72],ax
  4256dc:	xor    edx,edx
  4256de:	cmp    DWORD PTR [rsp+0x4],0x0
  4256e3:	jne    42598d <__flatcc_fb_build_schema@@Base+0xead>
  4256e9:	movzx  eax,WORD PTR [rbx+0x10]
  4256ed:	cmp    eax,0x4
  4256f0:	jne    42598d <__flatcc_fb_build_schema@@Base+0xead>
  4256f6:	cmp    DWORD PTR [rsp+0x18],0x0
  4256fb:	jne    425709 <__flatcc_fb_build_schema@@Base+0xc29>
  4256fd:	movzx  eax,WORD PTR [rsp+0x20]
  425702:	mov    QWORD PTR [r14+0x88],rax
  425709:	add    QWORD PTR [rsp+0x20],0x1
  42570f:	xor    edx,edx
  425711:	test   r15,r15
  425714:	je     42591b <__flatcc_fb_build_schema@@Base+0xe3b>
  42571a:	cmp    DWORD PTR [rsp+0x18],0x0
  42571f:	jne    42591b <__flatcc_fb_build_schema@@Base+0xe3b>
  425725:	mov    rsi,QWORD PTR [r15+0x8]
  425729:	xor    ecx,ecx
  42572b:	xor    r8d,r8d
  42572e:	xor    r9d,r9d
  425731:	mov    rdi,r12
  425734:	mov    ebx,edx
  425736:	lea    rdx,[rip+0x24a1a]        # 44a157 <fb_schema_table_deleted@@Base+0x2227>
  42573d:	jmp    425947 <__flatcc_fb_build_schema@@Base+0xe67>
  425742:	cmp    WORD PTR [r14+0x58],0x0
  425748:	je     425903 <__flatcc_fb_build_schema@@Base+0xe23>
  42574e:	mov    rsi,QWORD PTR [r14+0x8]
  425752:	xor    ecx,ecx
  425754:	xor    r8d,r8d
  425757:	xor    r9d,r9d
  42575a:	mov    rdi,r12
  42575d:	lea    rdx,[rip+0x2479c]        # 449f00 <fb_schema_table_deleted@@Base+0x1fd0>
  425764:	jmp    4258e6 <__flatcc_fb_build_schema@@Base+0xe06>
  425769:	cmp    WORD PTR [r14+0x58],0x0
  42576f:	je     425983 <__flatcc_fb_build_schema@@Base+0xea3>
  425775:	mov    rsi,QWORD PTR [r14+0x8]
  425779:	xor    ecx,ecx
  42577b:	xor    r8d,r8d
  42577e:	xor    r9d,r9d
  425781:	mov    rdi,r12
  425784:	lea    rdx,[rip+0x24752]        # 449edd <fb_schema_table_deleted@@Base+0x1fad>
  42578b:	jmp    4258e6 <__flatcc_fb_build_schema@@Base+0xe06>
  425790:	lea    rbx,[r14+0x48]
  425794:	movzx  eax,WORD PTR [r14+0x58]
  425799:	cmp    eax,0xd
  42579c:	jne    425815 <__flatcc_fb_build_schema@@Base+0xd35>
  42579e:	mov    rsi,QWORD PTR [r13+0x18]
  4257a2:	mov    rdx,QWORD PTR [rbx]
  4257a5:	mov    QWORD PTR [rsp+0x28],0x0
  4257ae:	test   rdx,rdx
  4257b1:	je     426923 <__flatcc_fb_build_schema@@Base+0x1e43>
  4257b7:	mov    rdi,r12
  4257ba:	lea    rcx,[rsp+0x28]
  4257bf:	call   4275e0 <__flatcc_fb_build_schema@@Base+0x2b00>
  4257c4:	test   rax,rax
  4257c7:	je     425958 <__flatcc_fb_build_schema@@Base+0xe78>
  4257cd:	movzx  ecx,WORD PTR [rax+0x10]
  4257d1:	cmp    ecx,0x3
  4257d4:	jne    425958 <__flatcc_fb_build_schema@@Base+0xe78>
  4257da:	add    rax,0x60
  4257de:	mov    rcx,QWORD PTR [rsp+0x28]
  4257e3:	mov    rcx,QWORD PTR [rcx+0x8]
  4257e7:	mov    rsi,QWORD PTR [rcx]
  4257ea:	mov    rdx,QWORD PTR [rcx+0x8]
  4257ee:	mov    rdi,rax
  4257f1:	call   41a470 <fb_symbol_table_find@@Base>
  4257f6:	test   rax,rax
  4257f9:	je     425958 <__flatcc_fb_build_schema@@Base+0xe78>
  4257ff:	mov    rcx,QWORD PTR [rax+0x58]
  425803:	mov    QWORD PTR [rbx+0x10],rcx
  425807:	vmovups xmm0,XMMWORD PTR [rax+0x48]
  42580c:	vmovups XMMWORD PTR [rbx],xmm0
  425810:	movzx  eax,WORD PTR [r14+0x58]
  425815:	test   ax,ax
  425818:	jne    425829 <__flatcc_fb_build_schema@@Base+0xd49>
  42581a:	mov    WORD PTR [r14+0x58],0x5
  425821:	mov    QWORD PTR [r14+0x48],0x0
  425829:	mov    edx,DWORD PTR [r14+0x18]
  42582d:	mov    rdi,r12
  425830:	mov    rsi,r14
  425833:	mov    rcx,rbx
  425836:	call   427800 <__flatcc_fb_coerce_scalar_type@@Base>
  42583b:	test   eax,eax
  42583d:	jne    425de5 <__flatcc_fb_build_schema@@Base+0x1305>
  425843:	mov    eax,DWORD PTR [r14+0x18]
  425847:	lea    rcx,[rip+0x23832]        # 449080 <fb_schema_table_deleted@@Base+0x1150>
  42584e:	movsxd rax,DWORD PTR [rcx+rax*4]
  425852:	mov    QWORD PTR [r14+0x80],rax
  425859:	mov    WORD PTR [r14+0x72],ax
  42585e:	mov    edx,0x1
  425863:	xor    ebx,ebx
  425865:	cmp    DWORD PTR [rsp+0x4],0x0
  42586a:	jne    425998 <__flatcc_fb_build_schema@@Base+0xeb8>
  425870:	jmp    425912 <__flatcc_fb_build_schema@@Base+0xe32>
  425875:	mov    rsi,QWORD PTR [r13+0x18]
  425879:	mov    rdx,QWORD PTR [r14+0x18]
  42587d:	xor    ecx,ecx
  42587f:	mov    rdi,r12
  425882:	call   4275e0 <__flatcc_fb_build_schema@@Base+0x2b00>
  425887:	test   rax,rax
  42588a:	je     4259d7 <__flatcc_fb_build_schema@@Base+0xef7>
  425890:	mov    rbx,rax
  425893:	movzx  eax,WORD PTR [rax+0x10]
  425897:	cmp    rax,0x4
  42589b:	ja     425e77 <__flatcc_fb_build_schema@@Base+0x1397>
  4258a1:	xor    edx,edx
  4258a3:	lea    rcx,[rip+0x23792]        # 44903c <fb_schema_table_deleted@@Base+0x110c>
  4258aa:	movsxd rax,DWORD PTR [rcx+rax*4]
  4258ae:	add    rax,rcx
  4258b1:	jmp    rax
  4258b3:	mov    rsi,QWORD PTR [r14+0x8]
  4258b7:	mov    rcx,QWORD PTR [rbx+0x8]
  4258bb:	xor    r8d,r8d
  4258be:	xor    r9d,r9d
  4258c1:	mov    rdi,r12
  4258c4:	lea    rdx,[rip+0x246c2]        # 449f8d <fb_schema_table_deleted@@Base+0x205d>
  4258cb:	jmp    425de0 <__flatcc_fb_build_schema@@Base+0x1300>
  4258d0:	mov    rsi,QWORD PTR [r14+0x8]
  4258d4:	xor    ecx,ecx
  4258d6:	xor    r8d,r8d
  4258d9:	xor    r9d,r9d
  4258dc:	mov    rdi,r12
  4258df:	lea    rdx,[rip+0x24849]        # 44a12f <fb_schema_table_deleted@@Base+0x21ff>
  4258e6:	call   41c7d0 <__flatcc_error_report@@Base>
  4258eb:	mov    WORD PTR [r14+0x28],0x1
  4258f2:	mov    rbx,QWORD PTR [rsp+0x10]
  4258f7:	lea    r15,[rip+0x24432]        # 449d30 <fb_schema_table_deleted@@Base+0x1e00>
  4258fe:	jmp    4260e2 <__flatcc_fb_build_schema@@Base+0x1602>
  425903:	xor    ebx,ebx
  425905:	xor    edx,edx
  425907:	cmp    DWORD PTR [rsp+0x4],0x0
  42590c:	jne    425998 <__flatcc_fb_build_schema@@Base+0xeb8>
  425912:	test   r15,r15
  425915:	jne    42571a <__flatcc_fb_build_schema@@Base+0xc3a>
  42591b:	test   r15,r15
  42591e:	jne    425bcb <__flatcc_fb_build_schema@@Base+0x10eb>
  425924:	cmp    DWORD PTR [rsp+0x18],0x0
  425929:	je     425bcb <__flatcc_fb_build_schema@@Base+0x10eb>
  42592f:	mov    rsi,QWORD PTR [r14+0x8]
  425933:	xor    ecx,ecx
  425935:	xor    r8d,r8d
  425938:	xor    r9d,r9d
  42593b:	mov    rdi,r12
  42593e:	mov    ebx,edx
  425940:	lea    rdx,[rip+0x2484d]        # 44a194 <fb_schema_table_deleted@@Base+0x2264>
  425947:	call   41c7d0 <__flatcc_error_report@@Base>
  42594c:	mov    edx,ebx
  42594e:	mov    DWORD PTR [rsp+0x4],0x1
  425956:	jmp    425998 <__flatcc_fb_build_schema@@Base+0xeb8>
  425958:	mov    rsi,QWORD PTR [r14+0x48]
  42595c:	mov    rdi,r12
  42595f:	lea    rdx,[rip+0x2451b]        # 449e81 <fb_schema_table_deleted@@Base+0x1f51>
  425966:	jmp    425976 <__flatcc_fb_build_schema@@Base+0xe96>
  425968:	mov    rsi,QWORD PTR [r14+0x18]
  42596c:	mov    rdi,r12
  42596f:	lea    rdx,[rip+0x2473a]        # 44a0b0 <fb_schema_table_deleted@@Base+0x2180>
  425976:	mov    rcx,r14
  425979:	call   41ca00 <error_ref_sym@@Base>
  42597e:	jmp    425de5 <__flatcc_fb_build_schema@@Base+0x1305>
  425983:	mov    edx,DWORD PTR [r12+0x110]
  42598b:	xor    ebx,ebx
  42598d:	cmp    DWORD PTR [rsp+0x4],0x0
  425992:	je     425912 <__flatcc_fb_build_schema@@Base+0xe32>
  425998:	lea    r15,[rip+0x24391]        # 449d30 <fb_schema_table_deleted@@Base+0x1e00>
  42599f:	cmp    BYTE PTR [r14+0x70],0x0
  4259a4:	mov    rbx,QWORD PTR [rsp+0x10]
  4259a9:	jns    4260e2 <__flatcc_fb_build_schema@@Base+0x1602>
  4259af:	add    DWORD PTR [rsp+0x1c],0x1
  4259b4:	test   edx,edx
  4259b6:	jne    4260e2 <__flatcc_fb_build_schema@@Base+0x1602>
  4259bc:	mov    rsi,QWORD PTR [r14+0x8]
  4259c0:	xor    ecx,ecx
  4259c2:	xor    r8d,r8d
  4259c5:	xor    r9d,r9d
  4259c8:	mov    rdi,r12
  4259cb:	lea    rdx,[rip+0x24ab3]        # 44a485 <fb_schema_table_deleted@@Base+0x2555>
  4259d2:	jmp    4260dd <__flatcc_fb_build_schema@@Base+0x15fd>
  4259d7:	mov    rsi,QWORD PTR [r14+0x18]
  4259db:	mov    rdi,r12
  4259de:	lea    rdx,[rip+0x24545]        # 449f2a <fb_schema_table_deleted@@Base+0x1ffa>
  4259e5:	mov    rcx,r14
  4259e8:	call   41ca00 <error_ref_sym@@Base>
  4259ed:	mov    WORD PTR [r14+0x28],0x1
  4259f4:	mov    DWORD PTR [rsp+0x4],0x1
  4259fc:	jmp    425dec <__flatcc_fb_build_schema@@Base+0x130c>
  425a01:	mov    QWORD PTR [rsp+0x8],rsi
  425a06:	sub    r15d,eax
  425a09:	test   r13,r13
  425a0c:	je     425b20 <__flatcc_fb_build_schema@@Base+0x1040>
  425a12:	test   eax,eax
  425a14:	jne    425b20 <__flatcc_fb_build_schema@@Base+0x1040>
  425a1a:	movsxd rax,r15d
  425a1d:	mov    QWORD PTR [rsp+0x38],rax
  425a22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425a2c:	nop    DWORD PTR [rax+0x0]
  425a30:	lea    rdi,[r13+0x8]
  425a34:	mov    rsi,QWORD PTR [rsp+0x8]
  425a39:	mov    rdx,QWORD PTR [rsp+0x38]
  425a3e:	call   41a470 <fb_symbol_table_find@@Base>
  425a43:	test   rax,rax
  425a46:	je     425a6b <__flatcc_fb_build_schema@@Base+0xf8b>
  425a48:	mov    r15,rax
  425a4b:	movzx  eax,WORD PTR [rax+0x10]
  425a4f:	cmp    eax,0x4
  425a52:	ja     425a6b <__flatcc_fb_build_schema@@Base+0xf8b>
  425a54:	mov    rsi,QWORD PTR [r15+0x20]
  425a58:	mov    rdi,QWORD PTR [rsp+0x58]
  425a5d:	call   419e50 <ptr_set_find_item@@Base>
  425a62:	test   rax,rax
  425a65:	jne    425b61 <__flatcc_fb_build_schema@@Base+0x1081>
  425a6b:	mov    rax,QWORD PTR [r13+0x0]
  425a6f:	test   rax,rax
  425a72:	je     425b9b <__flatcc_fb_build_schema@@Base+0x10bb>
  425a78:	mov    edx,0x2
  425a7d:	xor    esi,esi
  425a7f:	xor    ecx,ecx
  425a81:	movabs rdi,0xffffffff00000000
  425a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  425a90:	mov    r15,rsi
  425a93:	mov    rbx,rdx
  425a96:	mov    rax,QWORD PTR [rax]
  425a99:	add    rcx,0x1
  425a9d:	lea    rsi,[rsi+rdi*1]
  425aa1:	lea    rdx,[rdx+0x1]
  425aa5:	test   rax,rax
  425aa8:	jne    425a90 <__flatcc_fb_build_schema@@Base+0xfb0>
  425aaa:	nop    WORD PTR [rax+rax*1+0x0]
  425ab0:	mov    rdi,QWORD PTR [r12+0x260]
  425ab8:	add    rbx,0xffffffffffffffff
  425abc:	cmp    rbx,0x2
  425ac0:	jl     425b00 <__flatcc_fb_build_schema@@Base+0x1020>
  425ac2:	test   rdi,rdi
  425ac5:	je     425ae0 <__flatcc_fb_build_schema@@Base+0x1000>
  425ac7:	mov    rsi,QWORD PTR [r13+0x0]
  425acb:	mov    rdx,r15
  425ace:	sar    rdx,0x20
  425ad2:	call   41ae40 <fb_scope_table_find@@Base>
  425ad7:	jmp    425ae2 <__flatcc_fb_build_schema@@Base+0x1002>
  425ad9:	nop    DWORD PTR [rax+0x0]
  425ae0:	xor    eax,eax
  425ae2:	movabs rcx,0x100000000
  425aec:	add    r15,rcx
  425aef:	test   rax,rax
  425af2:	je     425ab0 <__flatcc_fb_build_schema@@Base+0xfd0>
  425af4:	jmp    425b12 <__flatcc_fb_build_schema@@Base+0x1032>
  425af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425b00:	test   rdi,rdi
  425b03:	je     425b9b <__flatcc_fb_build_schema@@Base+0x10bb>
  425b09:	xor    esi,esi
  425b0b:	xor    edx,edx
  425b0d:	call   41ae40 <fb_scope_table_find@@Base>
  425b12:	mov    r13,rax
  425b15:	test   rax,rax
  425b18:	jne    425a30 <__flatcc_fb_build_schema@@Base+0xf50>
  425b1e:	jmp    425b9b <__flatcc_fb_build_schema@@Base+0x10bb>
  425b20:	mov    rdi,QWORD PTR [r12+0x260]
  425b28:	test   rdi,rdi
  425b2b:	je     425b9b <__flatcc_fb_build_schema@@Base+0x10bb>
  425b2d:	test   eax,eax
  425b2f:	mov    ecx,0x0
  425b34:	cmove  rsi,rcx
  425b38:	movsxd rdx,eax
  425b3b:	call   41ae40 <fb_scope_table_find@@Base>
  425b40:	test   rax,rax
  425b43:	je     425b9b <__flatcc_fb_build_schema@@Base+0x10bb>
  425b45:	add    rax,0x8
  425b49:	movsxd rdx,r15d
  425b4c:	mov    rdi,rax
  425b4f:	mov    rsi,QWORD PTR [rsp+0x8]
  425b54:	call   41a470 <fb_symbol_table_find@@Base>
  425b59:	mov    r15,rax
  425b5c:	test   rax,rax
  425b5f:	je     425b9b <__flatcc_fb_build_schema@@Base+0x10bb>
  425b61:	movzx  eax,WORD PTR [r15+0x10]
  425b66:	test   ax,ax
  425b69:	mov    r13,QWORD PTR [rsp+0x48]
  425b6e:	mov    ebx,DWORD PTR [rsp+0x4]
  425b72:	je     425b8f <__flatcc_fb_build_schema@@Base+0x10af>
  425b74:	cmp    DWORD PTR [r12+0x11c],0x0
  425b7d:	je     425f5d <__flatcc_fb_build_schema@@Base+0x147d>
  425b83:	movzx  eax,ax
  425b86:	cmp    eax,0x1
  425b89:	jne    425f7f <__flatcc_fb_build_schema@@Base+0x149f>
  425b8f:	mov    QWORD PTR [r14+0x90],r15
  425b96:	jmp    4254b5 <__flatcc_fb_build_schema@@Base+0x9d5>
  425b9b:	mov    rax,QWORD PTR [rsp+0x50]
  425ba0:	mov    rsi,QWORD PTR [rax+0x8]
  425ba4:	mov    r8,QWORD PTR [rax+0x10]
  425ba8:	mov    r9d,DWORD PTR [rax+0x18]
  425bac:	xor    ecx,ecx
  425bae:	mov    rdi,r12
  425bb1:	lea    rdx,[rip+0x24982]        # 44a53a <fb_schema_table_deleted@@Base+0x260a>
  425bb8:	call   41c7d0 <__flatcc_error_report@@Base>
  425bbd:	mov    r13,QWORD PTR [rsp+0x48]
  425bc2:	mov    ebx,DWORD PTR [rsp+0x4]
  425bc6:	jmp    4254b5 <__flatcc_fb_build_schema@@Base+0x9d5>
  425bcb:	test   r15,r15
  425bce:	je     425c0b <__flatcc_fb_build_schema@@Base+0x112b>
  425bd0:	movzx  eax,WORD PTR [r15+0x20]
  425bd5:	cmp    eax,0x5
  425bd8:	jne    425ee8 <__flatcc_fb_build_schema@@Base+0x1408>
  425bde:	mov    rax,QWORD PTR [r15+0x10]
  425be2:	cmp    rax,QWORD PTR [r12+0x148]
  425bea:	jae    425f29 <__flatcc_fb_build_schema@@Base+0x1449>
  425bf0:	movzx  eax,ax
  425bf3:	mov    QWORD PTR [r14+0x88],rax
  425bfa:	mov    rcx,QWORD PTR [rsp+0x40]
  425bff:	cmp    rax,rcx
  425c02:	cmova  rcx,rax
  425c06:	mov    QWORD PTR [rsp+0x40],rcx
  425c0b:	mov    DWORD PTR [rsp+0x4],0x0
  425c13:	cmp    DWORD PTR [rsp+0x18],0x0
  425c18:	je     425998 <__flatcc_fb_build_schema@@Base+0xeb8>
  425c1e:	mov    rax,QWORD PTR [r14+0x88]
  425c25:	mov    rcx,QWORD PTR [rsp+0x30]
  425c2a:	mov    cl,BYTE PTR [rcx+rax*1]
  425c2d:	test   cl,cl
  425c2f:	je     425fa1 <__flatcc_fb_build_schema@@Base+0x14c1>
  425c35:	mov    DWORD PTR [rsp+0x8],edx
  425c39:	cmp    cl,0x2
  425c3c:	jne    425fb4 <__flatcc_fb_build_schema@@Base+0x14d4>
  425c42:	mov    rsi,QWORD PTR [r15+0x8]
  425c46:	xor    ecx,ecx
  425c48:	xor    r8d,r8d
  425c4b:	xor    r9d,r9d
  425c4e:	mov    rdi,r12
  425c51:	lea    rdx,[rip+0x245d0]        # 44a228 <fb_schema_table_deleted@@Base+0x22f8>
  425c58:	call   41c7d0 <__flatcc_error_report@@Base>
  425c5d:	mov    DWORD PTR [rsp+0x4],0x1
  425c65:	lea    r15,[rip+0x240c4]        # 449d30 <fb_schema_table_deleted@@Base+0x1e00>
  425c6c:	jmp    4260a7 <__flatcc_fb_build_schema@@Base+0x15c7>
  425c71:	mov    rsi,QWORD PTR [r14+0x8]
  425c75:	mov    rcx,QWORD PTR [r14+0x18]
  425c79:	xor    r8d,r8d
  425c7c:	xor    r9d,r9d
  425c7f:	mov    rdi,r12
  425c82:	lea    rdx,[rip+0x2445b]        # 44a0e4 <fb_schema_table_deleted@@Base+0x21b4>
  425c89:	jmp    425de0 <__flatcc_fb_build_schema@@Base+0x1300>
  425c8e:	test   BYTE PTR [r14+0x71],0x1
  425c93:	je     425cb0 <__flatcc_fb_build_schema@@Base+0x11d0>
  425c95:	mov    rsi,QWORD PTR [r14+0x8]
  425c99:	xor    ecx,ecx
  425c9b:	xor    r8d,r8d
  425c9e:	xor    r9d,r9d
  425ca1:	mov    rdi,r12
  425ca4:	lea    rdx,[rip+0x242ac]        # 449f57 <fb_schema_table_deleted@@Base+0x2027>
  425cab:	call   41c7d0 <__flatcc_error_report@@Base>
  425cb0:	mov    edx,DWORD PTR [r12+0x100]
  425cb8:	mov    WORD PTR [r14+0x28],0xe
  425cbf:	mov    QWORD PTR [r14+0x18],rbx
  425cc3:	mov    rax,QWORD PTR [rbx+0xb8]
  425cca:	mov    QWORD PTR [r14+0x80],rax
  425cd1:	movzx  eax,WORD PTR [rbx+0xb0]
  425cd8:	mov    WORD PTR [r14+0x72],ax
  425cdd:	movzx  eax,WORD PTR [rbx+0x10]
  425ce1:	cmp    DWORD PTR [rsp+0x4],0x0
  425ce6:	jne    425d09 <__flatcc_fb_build_schema@@Base+0x1229>
  425ce8:	movzx  ecx,ax
  425ceb:	cmp    ecx,0x4
  425cee:	jne    425d09 <__flatcc_fb_build_schema@@Base+0x1229>
  425cf0:	cmp    DWORD PTR [rsp+0x18],0x0
  425cf5:	jne    425d03 <__flatcc_fb_build_schema@@Base+0x1223>
  425cf7:	movzx  ecx,WORD PTR [rsp+0x20]
  425cfc:	mov    QWORD PTR [r14+0x88],rcx
  425d03:	add    QWORD PTR [rsp+0x20],0x1
  425d09:	lea    rcx,[r14+0x48]
  425d0d:	movzx  esi,WORD PTR [r14+0x58]
  425d12:	movzx  eax,ax
  425d15:	test   si,si
  425d18:	je     425dfd <__flatcc_fb_build_schema@@Base+0x131d>
  425d1e:	cmp    eax,0x3
  425d21:	jne    425dca <__flatcc_fb_build_schema@@Base+0x12ea>
  425d27:	movzx  eax,si
  425d2a:	cmp    eax,0xd
  425d2d:	mov    DWORD PTR [rsp+0x8],edx
  425d31:	mov    QWORD PTR [rsp+0x38],rcx
  425d36:	jne    425e94 <__flatcc_fb_build_schema@@Base+0x13b4>
  425d3c:	mov    rsi,QWORD PTR [r13+0x18]
  425d40:	mov    rax,QWORD PTR [rcx]
  425d43:	mov    QWORD PTR [rsp+0x28],0x0
  425d4c:	test   rax,rax
  425d4f:	je     426923 <__flatcc_fb_build_schema@@Base+0x1e43>
  425d55:	mov    rdi,r12
  425d58:	mov    QWORD PTR [rsp+0x48],rax
  425d5d:	mov    rdx,rax
  425d60:	lea    rcx,[rsp+0x28]
  425d65:	call   4275e0 <__flatcc_fb_build_schema@@Base+0x2b00>
  425d6a:	test   rax,rax
  425d6d:	je     425d78 <__flatcc_fb_build_schema@@Base+0x1298>
  425d6f:	movzx  ecx,WORD PTR [rax+0x10]
  425d73:	cmp    ecx,0x3
  425d76:	je     425d8a <__flatcc_fb_build_schema@@Base+0x12aa>
  425d78:	mov    rax,QWORD PTR [rsp+0x48]
  425d7d:	cmp    QWORD PTR [rax],0x0
  425d81:	mov    rax,rbx
  425d84:	jne    425f16 <__flatcc_fb_build_schema@@Base+0x1436>
  425d8a:	add    rax,0x60
  425d8e:	mov    rcx,QWORD PTR [rsp+0x28]
  425d93:	mov    rcx,QWORD PTR [rcx+0x8]
  425d97:	mov    rsi,QWORD PTR [rcx]
  425d9a:	mov    rdx,QWORD PTR [rcx+0x8]
  425d9e:	mov    rdi,rax
  425da1:	call   41a470 <fb_symbol_table_find@@Base>
  425da6:	test   rax,rax
  425da9:	je     425f16 <__flatcc_fb_build_schema@@Base+0x1436>
  425daf:	mov    rcx,QWORD PTR [rax+0x58]
  425db3:	mov    rdx,QWORD PTR [rsp+0x38]
  425db8:	mov    QWORD PTR [rdx+0x10],rcx
  425dbc:	vmovups xmm0,XMMWORD PTR [rax+0x48]
  425dc1:	vmovups XMMWORD PTR [rdx],xmm0
  425dc5:	jmp    425ed4 <__flatcc_fb_build_schema@@Base+0x13f4>
  425dca:	mov    rsi,QWORD PTR [r14+0x8]
  425dce:	xor    ecx,ecx
  425dd0:	xor    r8d,r8d
  425dd3:	xor    r9d,r9d
  425dd6:	mov    rdi,r12
  425dd9:	lea    rdx,[rip+0x241ff]        # 449fdf <fb_schema_table_deleted@@Base+0x20af>
  425de0:	call   41c7d0 <__flatcc_error_report@@Base>
  425de5:	mov    WORD PTR [r14+0x28],0x1
  425dec:	lea    r15,[rip+0x23f3d]        # 449d30 <fb_schema_table_deleted@@Base+0x1e00>
  425df3:	mov    rbx,QWORD PTR [rsp+0x10]
  425df8:	jmp    4260e2 <__flatcc_fb_build_schema@@Base+0x1602>
  425dfd:	cmp    eax,0x3
  425e00:	jne    42598d <__flatcc_fb_build_schema@@Base+0xead>
  425e06:	mov    DWORD PTR [rsp+0x8],edx
  425e0a:	mov    WORD PTR [r14+0x58],0x5
  425e11:	mov    QWORD PTR [r14+0x48],0x0
  425e19:	mov    edx,DWORD PTR [rbx+0x48]
  425e1c:	mov    rdi,r12
  425e1f:	mov    rsi,rbx
  425e22:	mov    QWORD PTR [rsp+0x38],rcx
  425e27:	call   427800 <__flatcc_fb_coerce_scalar_type@@Base>
  425e2c:	test   eax,eax
  425e2e:	jne    425de5 <__flatcc_fb_build_schema@@Base+0x1305>
  425e30:	mov    rsi,QWORD PTR [rsp+0x38]
  425e35:	cmp    DWORD PTR [r12+0x140],0x0
  425e3e:	je     425ed4 <__flatcc_fb_build_schema@@Base+0x13f4>
  425e44:	mov    rdi,QWORD PTR [r14+0x18]
  425e48:	mov    eax,0x80
  425e4d:	add    rdi,rax
  425e50:	call   42e040 <fb_value_set_find_item@@Base>
  425e55:	test   rax,rax
  425e58:	jne    425ed4 <__flatcc_fb_build_schema@@Base+0x13f4>
  425e5a:	mov    rsi,QWORD PTR [r14+0x8]
  425e5e:	mov    rcx,QWORD PTR [rbx+0x8]
  425e62:	xor    r8d,r8d
  425e65:	xor    r9d,r9d
  425e68:	mov    rdi,r12
  425e6b:	lea    rdx,[rip+0x241f9]        # 44a06b <fb_schema_table_deleted@@Base+0x213b>
  425e72:	jmp    425de0 <__flatcc_fb_build_schema@@Base+0x1300>
  425e77:	mov    rsi,QWORD PTR [r14+0x8]
  425e7b:	mov    rcx,QWORD PTR [rbx+0x8]
  425e7f:	xor    r8d,r8d
  425e82:	xor    r9d,r9d
  425e85:	mov    rdi,r12
  425e88:	lea    rdx,[rip+0x2412a]        # 449fb9 <fb_schema_table_deleted@@Base+0x2089>
  425e8f:	jmp    425de0 <__flatcc_fb_build_schema@@Base+0x1300>
  425e94:	mov    edx,DWORD PTR [rbx+0x48]
  425e97:	mov    rdi,r12
  425e9a:	mov    rsi,r14
  425e9d:	call   427800 <__flatcc_fb_coerce_scalar_type@@Base>
  425ea2:	test   eax,eax
  425ea4:	jne    425de5 <__flatcc_fb_build_schema@@Base+0x1305>
  425eaa:	mov    rsi,QWORD PTR [rsp+0x38]
  425eaf:	cmp    DWORD PTR [r12+0x140],0x0
  425eb8:	je     425ed4 <__flatcc_fb_build_schema@@Base+0x13f4>
  425eba:	mov    rdi,QWORD PTR [r14+0x18]
  425ebe:	mov    eax,0x80
  425ec3:	add    rdi,rax
  425ec6:	call   42e040 <fb_value_set_find_item@@Base>
  425ecb:	test   rax,rax
  425ece:	je     42604c <__flatcc_fb_build_schema@@Base+0x156c>
  425ed4:	mov    edx,DWORD PTR [rsp+0x8]
  425ed8:	cmp    DWORD PTR [rsp+0x4],0x0
  425edd:	jne    425998 <__flatcc_fb_build_schema@@Base+0xeb8>
  425ee3:	jmp    425912 <__flatcc_fb_build_schema@@Base+0xe32>
  425ee8:	mov    DWORD PTR [rsp+0x8],edx
  425eec:	movzx  eax,ax
  425eef:	mov    rsi,QWORD PTR [r15+0x8]
  425ef3:	cmp    eax,0x4
  425ef6:	lea    rbx,[rip+0x23e33]        # 449d30 <fb_schema_table_deleted@@Base+0x1e00>
  425efd:	jne    425f46 <__flatcc_fb_build_schema@@Base+0x1466>
  425eff:	xor    ecx,ecx
  425f01:	xor    r8d,r8d
  425f04:	xor    r9d,r9d
  425f07:	mov    rdi,r12
  425f0a:	lea    rdx,[rip+0x242db]        # 44a1ec <fb_schema_table_deleted@@Base+0x22bc>
  425f11:	jmp    426097 <__flatcc_fb_build_schema@@Base+0x15b7>
  425f16:	mov    rsi,QWORD PTR [r14+0x48]
  425f1a:	mov    rdi,r12
  425f1d:	lea    rdx,[rip+0x240e7]        # 44a00b <fb_schema_table_deleted@@Base+0x20db>
  425f24:	jmp    425976 <__flatcc_fb_build_schema@@Base+0xe96>
  425f29:	mov    rsi,QWORD PTR [r14+0x8]
  425f2d:	xor    ecx,ecx
  425f2f:	xor    r8d,r8d
  425f32:	xor    r9d,r9d
  425f35:	mov    rdi,r12
  425f38:	mov    ebx,edx
  425f3a:	lea    rdx,[rip+0x2428d]        # 44a1ce <fb_schema_table_deleted@@Base+0x229e>
  425f41:	jmp    425947 <__flatcc_fb_build_schema@@Base+0xe67>
  425f46:	xor    ecx,ecx
  425f48:	xor    r8d,r8d
  425f4b:	xor    r9d,r9d
  425f4e:	mov    rdi,r12
  425f51:	lea    rdx,[rip+0x242b4]        # 44a20c <fb_schema_table_deleted@@Base+0x22dc>
  425f58:	jmp    426097 <__flatcc_fb_build_schema@@Base+0x15b7>
  425f5d:	mov    rax,QWORD PTR [rsp+0x50]
  425f62:	mov    rsi,QWORD PTR [rax+0x8]
  425f66:	mov    rcx,QWORD PTR [r15+0x8]
  425f6a:	xor    r8d,r8d
  425f6d:	xor    r9d,r9d
  425f70:	mov    rdi,r12
  425f73:	lea    rdx,[rip+0x245db]        # 44a555 <fb_schema_table_deleted@@Base+0x2625>
  425f7a:	jmp    4254b0 <__flatcc_fb_build_schema@@Base+0x9d0>
  425f7f:	mov    rax,QWORD PTR [rsp+0x50]
  425f84:	mov    rsi,QWORD PTR [rax+0x8]
  425f88:	mov    rcx,QWORD PTR [r15+0x8]
  425f8c:	xor    r8d,r8d
  425f8f:	xor    r9d,r9d
  425f92:	mov    rdi,r12
  425f95:	lea    rdx,[rip+0x245e4]        # 44a580 <fb_schema_table_deleted@@Base+0x2650>
  425f9c:	jmp    4254b0 <__flatcc_fb_build_schema@@Base+0x9d0>
  425fa1:	mov    rcx,QWORD PTR [rsp+0x30]
  425fa6:	mov    BYTE PTR [rcx+rax*1],0x1
  425faa:	test   rbx,rbx
  425fad:	jne    425fdc <__flatcc_fb_build_schema@@Base+0x14fc>
  425faf:	jmp    425998 <__flatcc_fb_build_schema@@Base+0xeb8>
  425fb4:	mov    rsi,QWORD PTR [r15+0x8]
  425fb8:	xor    ecx,ecx
  425fba:	xor    r8d,r8d
  425fbd:	xor    r9d,r9d
  425fc0:	mov    rdi,r12
  425fc3:	lea    rdx,[rip+0x24294]        # 44a25e <fb_schema_table_deleted@@Base+0x232e>
  425fca:	call   41c7d0 <__flatcc_error_report@@Base>
  425fcf:	mov    edx,DWORD PTR [rsp+0x8]
  425fd3:	test   rbx,rbx
  425fd6:	je     425998 <__flatcc_fb_build_schema@@Base+0xeb8>
  425fdc:	movzx  eax,WORD PTR [rbx+0x10]
  425fe0:	cmp    eax,0x4
  425fe3:	jne    425998 <__flatcc_fb_build_schema@@Base+0xeb8>
  425fe9:	mov    DWORD PTR [rsp+0x8],edx
  425fed:	movzx  eax,WORD PTR [r14+0x28]
  425ff2:	mov    rcx,QWORD PTR [r14+0x88]
  425ff9:	cmp    rcx,0x1
  425ffd:	lea    rbx,[rip+0x23d2c]        # 449d30 <fb_schema_table_deleted@@Base+0x1e00>
  426004:	ja     426020 <__flatcc_fb_build_schema@@Base+0x1540>
  426006:	movzx  eax,ax
  426009:	cmp    eax,0xb
  42600c:	mov    rsi,QWORD PTR [r15+0x8]
  426010:	lea    rdx,[rip+0x242c7]        # 44a2de <fb_schema_table_deleted@@Base+0x23ae>
  426017:	lea    rax,[rip+0x24270]        # 44a28e <fb_schema_table_deleted@@Base+0x235e>
  42601e:	jmp    426088 <__flatcc_fb_build_schema@@Base+0x15a8>
  426020:	mov    rdx,QWORD PTR [rsp+0x30]
  426025:	mov    dl,BYTE PTR [rdx+rcx*1-0x1]
  426029:	test   dl,dl
  42602b:	je     426067 <__flatcc_fb_build_schema@@Base+0x1587>
  42602d:	movzx  eax,ax
  426030:	cmp    dl,0x2
  426033:	jne    426073 <__flatcc_fb_build_schema@@Base+0x1593>
  426035:	cmp    eax,0xb
  426038:	mov    rsi,QWORD PTR [r15+0x8]
  42603c:	lea    rdx,[rip+0x24345]        # 44a388 <fb_schema_table_deleted@@Base+0x2458>
  426043:	lea    rax,[rip+0x242dd]        # 44a327 <fb_schema_table_deleted@@Base+0x23f7>
  42604a:	jmp    426088 <__flatcc_fb_build_schema@@Base+0x15a8>
  42604c:	mov    rsi,QWORD PTR [r14+0x8]
  426050:	xor    ecx,ecx
  426052:	xor    r8d,r8d
  426055:	xor    r9d,r9d
  426058:	mov    rdi,r12
  42605b:	lea    rdx,[rip+0x23fd9]        # 44a03b <fb_schema_table_deleted@@Base+0x210b>
  426062:	jmp    425de0 <__flatcc_fb_build_schema@@Base+0x1300>
  426067:	mov    rax,QWORD PTR [rsp+0x30]
  42606c:	mov    BYTE PTR [rax+rcx*1-0x1],0x2
  426071:	jmp    4260a4 <__flatcc_fb_build_schema@@Base+0x15c4>
  426073:	cmp    eax,0xb
  426076:	mov    rsi,QWORD PTR [r15+0x8]
  42607a:	lea    rdx,[rip+0x243b6]        # 44a437 <fb_schema_table_deleted@@Base+0x2507>
  426081:	lea    rax,[rip+0x2435a]        # 44a3e2 <fb_schema_table_deleted@@Base+0x24b2>
  426088:	cmove  rdx,rax
  42608c:	xor    ecx,ecx
  42608e:	xor    r8d,r8d
  426091:	xor    r9d,r9d
  426094:	mov    rdi,r12
  426097:	call   41c7d0 <__flatcc_error_report@@Base>
  42609c:	mov    DWORD PTR [rsp+0x4],0x1
  4260a4:	mov    r15,rbx
  4260a7:	mov    edx,DWORD PTR [rsp+0x8]
  4260ab:	jmp    42599f <__flatcc_fb_build_schema@@Base+0xebf>
  4260b0:	mov    edx,0x1
  4260b5:	mov    rdi,rbx
  4260b8:	mov    rsi,r14
  4260bb:	call   41a450 <fb_symbol_table_insert_item@@Base>
  4260c0:	test   rax,rax
  4260c3:	je     4253b0 <__flatcc_fb_build_schema@@Base+0x8d0>
  4260c9:	mov    rsi,QWORD PTR [r14+0x8]
  4260cd:	mov    rcx,QWORD PTR [rax+0x8]
  4260d1:	xor    r8d,r8d
  4260d4:	xor    r9d,r9d
  4260d7:	mov    rdi,r12
  4260da:	mov    rdx,r15
  4260dd:	call   41c7d0 <__flatcc_error_report@@Base>
  4260e2:	mov    r14,QWORD PTR [r14]
  4260e5:	test   r14,r14
  4260e8:	jne    4260b0 <__flatcc_fb_build_schema@@Base+0x15d0>
  4260ea:	mov    ecx,DWORD PTR [rsp+0x4]
  4260ee:	test   ecx,ecx
  4260f0:	je     426376 <__flatcc_fb_build_schema@@Base+0x1896>
  4260f6:	xor    eax,eax
  4260f8:	mov    rdx,QWORD PTR [rsp+0x20]
  4260fd:	mov    ebx,ecx
  4260ff:	mov    ecx,DWORD PTR [rsp+0x1c]
  426103:	cmp    QWORD PTR [rsp+0x40],rdx
  426108:	jae    426395 <__flatcc_fb_build_schema@@Base+0x18b5>
  42610e:	jmp    42644f <__flatcc_fb_build_schema@@Base+0x196f>
  426113:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42611d:	nop    DWORD PTR [rax]
  426120:	movzx  eax,WORD PTR [r13+0x58]
  426125:	cmp    eax,0x1
  426128:	je     4264a0 <__flatcc_fb_build_schema@@Base+0x19c0>
  42612e:	test   ax,ax
  426131:	jne    426904 <__flatcc_fb_build_schema@@Base+0x1e24>
  426137:	cmp    QWORD PTR [r13+0x38],0x0
  42613c:	lea    r15,[rip+0x2453b]        # 44a67e <fb_schema_table_deleted@@Base+0x274e>
  426143:	je     426160 <__flatcc_fb_build_schema@@Base+0x1680>
  426145:	mov    rsi,QWORD PTR [r13+0x8]
  426149:	xor    ecx,ecx
  42614b:	xor    r8d,r8d
  42614e:	xor    r9d,r9d
  426151:	mov    rdi,r12
  426154:	lea    rdx,[rip+0x244ff]        # 44a65a <fb_schema_table_deleted@@Base+0x272a>
  42615b:	call   41c7d0 <__flatcc_error_report@@Base>
  426160:	mov    rbx,QWORD PTR [r13+0x28]
  426164:	test   rbx,rbx
  426167:	je     42636a <__flatcc_fb_build_schema@@Base+0x188a>
  42616d:	lea    r14,[r13+0x60]
  426171:	jmp    4262d0 <__flatcc_fb_build_schema@@Base+0x17f0>
  426176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426180:	movzx  eax,WORD PTR [rbx+0x10]
  426184:	cmp    eax,0x5
  426187:	jne    426348 <__flatcc_fb_build_schema@@Base+0x1868>
  42618d:	cmp    WORD PTR [rbx+0x58],0x0
  426192:	je     4261af <__flatcc_fb_build_schema@@Base+0x16cf>
  426194:	mov    rsi,QWORD PTR [rbx+0x8]
  426198:	xor    ecx,ecx
  42619a:	xor    r8d,r8d
  42619d:	xor    r9d,r9d
  4261a0:	mov    rdi,r12
  4261a3:	lea    rdx,[rip+0x244f4]        # 44a69e <fb_schema_table_deleted@@Base+0x276e>
  4261aa:	call   41c7d0 <__flatcc_error_report@@Base>
  4261af:	movzx  eax,WORD PTR [rbx+0x28]
  4261b3:	cmp    eax,0x1
  4261b6:	je     426302 <__flatcc_fb_build_schema@@Base+0x1822>
  4261bc:	movzx  eax,ax
  4261bf:	cmp    eax,0xc
  4261c2:	je     4261df <__flatcc_fb_build_schema@@Base+0x16ff>
  4261c4:	mov    rsi,QWORD PTR [rbx+0x8]
  4261c8:	xor    ecx,ecx
  4261ca:	xor    r8d,r8d
  4261cd:	xor    r9d,r9d
  4261d0:	mov    rdi,r12
  4261d3:	lea    rdx,[rip+0x24504]        # 44a6de <fb_schema_table_deleted@@Base+0x27ae>
  4261da:	call   41c7d0 <__flatcc_error_report@@Base>
  4261df:	mov    rsi,QWORD PTR [r13+0x18]
  4261e3:	mov    rdx,QWORD PTR [rbx+0x30]
  4261e7:	xor    ecx,ecx
  4261e9:	mov    rdi,r12
  4261ec:	call   4275e0 <__flatcc_fb_build_schema@@Base+0x2b00>
  4261f1:	test   rax,rax
  4261f4:	je     426225 <__flatcc_fb_build_schema@@Base+0x1745>
  4261f6:	cmp    WORD PTR [rax+0x10],0x0
  4261fb:	je     426246 <__flatcc_fb_build_schema@@Base+0x1766>
  4261fd:	mov    rsi,QWORD PTR [rbx+0x8]
  426201:	mov    rcx,QWORD PTR [rax+0x8]
  426205:	xor    r8d,r8d
  426208:	xor    r9d,r9d
  42620b:	mov    rdi,r12
  42620e:	lea    rdx,[rip+0x24538]        # 44a74d <fb_schema_table_deleted@@Base+0x281d>
  426215:	call   41c7d0 <__flatcc_error_report@@Base>
  42621a:	mov    WORD PTR [rbx+0x28],0x1
  426220:	jmp    426302 <__flatcc_fb_build_schema@@Base+0x1822>
  426225:	mov    rsi,QWORD PTR [rbx+0x30]
  426229:	mov    rdi,r12
  42622c:	lea    rdx,[rip+0x244e8]        # 44a71b <fb_schema_table_deleted@@Base+0x27eb>
  426233:	mov    rcx,rbx
  426236:	call   41ca00 <error_ref_sym@@Base>
  42623b:	mov    WORD PTR [rbx+0x28],0x1
  426241:	jmp    426302 <__flatcc_fb_build_schema@@Base+0x1822>
  426246:	mov    WORD PTR [rbx+0x40],0xe
  42624c:	mov    QWORD PTR [rbx+0x30],rax
  426250:	mov    rsi,QWORD PTR [r13+0x18]
  426254:	mov    rdx,QWORD PTR [rbx+0x18]
  426258:	xor    ecx,ecx
  42625a:	mov    rdi,r12
  42625d:	call   4275e0 <__flatcc_fb_build_schema@@Base+0x2b00>
  426262:	test   rax,rax
  426265:	je     426288 <__flatcc_fb_build_schema@@Base+0x17a8>
  426267:	cmp    WORD PTR [rax+0x10],0x0
  42626c:	je     426298 <__flatcc_fb_build_schema@@Base+0x17b8>
  42626e:	mov    rsi,QWORD PTR [rbx+0x8]
  426272:	mov    rcx,QWORD PTR [rax+0x8]
  426276:	xor    r8d,r8d
  426279:	xor    r9d,r9d
  42627c:	mov    rdi,r12
  42627f:	lea    rdx,[rip+0x24530]        # 44a7b6 <fb_schema_table_deleted@@Base+0x2886>
  426286:	jmp    426215 <__flatcc_fb_build_schema@@Base+0x1735>
  426288:	mov    rsi,QWORD PTR [rbx+0x18]
  42628c:	mov    rdi,r12
  42628f:	lea    rdx,[rip+0x244ed]        # 44a783 <fb_schema_table_deleted@@Base+0x2853>
  426296:	jmp    426233 <__flatcc_fb_build_schema@@Base+0x1753>
  426298:	mov    WORD PTR [rbx+0x28],0xe
  42629e:	mov    QWORD PTR [rbx+0x18],rax
  4262a2:	mov    QWORD PTR [rbx+0x80],0x0
  4262ad:	mov    rsi,QWORD PTR [rbx+0x60]
  4262b1:	mov    edx,0x4
  4262b6:	mov    rdi,r12
  4262b9:	lea    rcx,[rsp+0x60]
  4262be:	call   427400 <__flatcc_fb_build_schema@@Base+0x2920>
  4262c3:	mov    WORD PTR [rbx+0x70],ax
  4262c7:	jmp    426302 <__flatcc_fb_build_schema@@Base+0x1822>
  4262c9:	nop    DWORD PTR [rax+0x0]
  4262d0:	mov    edx,0x1
  4262d5:	mov    rdi,r14
  4262d8:	mov    rsi,rbx
  4262db:	call   41a450 <fb_symbol_table_insert_item@@Base>
  4262e0:	test   rax,rax
  4262e3:	je     426180 <__flatcc_fb_build_schema@@Base+0x16a0>
  4262e9:	mov    rsi,QWORD PTR [rbx+0x8]
  4262ed:	mov    rcx,QWORD PTR [rax+0x8]
  4262f1:	xor    r8d,r8d
  4262f4:	xor    r9d,r9d
  4262f7:	mov    rdi,r12
  4262fa:	mov    rdx,r15
  4262fd:	call   41c7d0 <__flatcc_error_report@@Base>
  426302:	mov    rbx,QWORD PTR [rbx]
  426305:	test   rbx,rbx
  426308:	jne    4262d0 <__flatcc_fb_build_schema@@Base+0x17f0>
  42630a:	jmp    42636a <__flatcc_fb_build_schema@@Base+0x188a>
  42630c:	xor    eax,eax
  42630e:	mov    QWORD PTR [rsp+0x30],rax
  426313:	xor    ecx,ecx
  426315:	xor    eax,eax
  426317:	mov    QWORD PTR [rsp+0x40],rax
  42631c:	mov    DWORD PTR [rsp+0x18],0x0
  426324:	xor    edx,edx
  426326:	jmp    42637f <__flatcc_fb_build_schema@@Base+0x189f>
  426328:	mov    rsi,QWORD PTR [r14+0x8]
  42632c:	xor    ecx,ecx
  42632e:	xor    r8d,r8d
  426331:	xor    r9d,r9d
  426334:	mov    rdi,r12
  426337:	lea    rdx,[rip+0x23a14]        # 449d52 <fb_schema_table_deleted@@Base+0x1e22>
  42633e:	call   41c7d0 <__flatcc_error_report@@Base>
  426343:	jmp    426498 <__flatcc_fb_build_schema@@Base+0x19b8>
  426348:	mov    rsi,QWORD PTR [rbx+0x8]
  42634c:	xor    ecx,ecx
  42634e:	xor    r8d,r8d
  426351:	xor    r9d,r9d
  426354:	mov    rdi,r12
  426357:	lea    rdx,[rip+0x239f4]        # 449d52 <fb_schema_table_deleted@@Base+0x1e22>
  42635e:	call   41c7d0 <__flatcc_error_report@@Base>
  426363:	mov    WORD PTR [r13+0x58],0x1
  42636a:	lea    r15,[rip+0x239bf]        # 449d30 <fb_schema_table_deleted@@Base+0x1e00>
  426371:	jmp    4264a0 <__flatcc_fb_build_schema@@Base+0x19c0>
  426376:	mov    ecx,DWORD PTR [rsp+0x1c]
  42637a:	mov    rdx,QWORD PTR [rsp+0x20]
  42637f:	mov    QWORD PTR [r13+0xa8],rdx
  426386:	mov    al,0x1
  426388:	xor    ebx,ebx
  42638a:	cmp    QWORD PTR [rsp+0x40],rdx
  42638f:	jb     42644f <__flatcc_fb_build_schema@@Base+0x196f>
  426395:	test   rdx,rdx
  426398:	je     42644f <__flatcc_fb_build_schema@@Base+0x196f>
  42639e:	test   al,al
  4263a0:	je     42644f <__flatcc_fb_build_schema@@Base+0x196f>
  4263a6:	cmp    DWORD PTR [rsp+0x18],0x0
  4263ab:	je     42644f <__flatcc_fb_build_schema@@Base+0x196f>
  4263b1:	mov    ebx,0x1
  4263b6:	cmp    QWORD PTR [rsp+0x40],0x0
  4263bc:	je     42644f <__flatcc_fb_build_schema@@Base+0x196f>
  4263c2:	mov    DWORD PTR [rsp+0x1c],ecx
  4263c6:	mov    r14d,0xa
  4263cc:	xor    ebx,ebx
  4263ce:	xchg   ax,ax
  4263d0:	mov    rax,QWORD PTR [rsp+0x30]
  4263d5:	cmp    BYTE PTR [rax+rbx*1],0x0
  4263d9:	jne    426417 <__flatcc_fb_build_schema@@Base+0x1937>
  4263db:	test   r14d,r14d
  4263de:	je     426424 <__flatcc_fb_build_schema@@Base+0x1944>
  4263e0:	add    r14d,0xffffffff
  4263e4:	xor    eax,eax
  4263e6:	lea    r15,[rsp+0xc0]
  4263ee:	mov    rdi,r15
  4263f1:	lea    rsi,[rip+0x240d4]        # 44a4cc <fb_schema_table_deleted@@Base+0x259c>
  4263f8:	mov    rdx,rbx
  4263fb:	call   406200 <sprintf@plt>
  426400:	mov    rsi,QWORD PTR [r13+0x8]
  426404:	xor    ecx,ecx
  426406:	xor    r8d,r8d
  426409:	xor    r9d,r9d
  42640c:	mov    rdi,r12
  42640f:	mov    rdx,r15
  426412:	call   41c7d0 <__flatcc_error_report@@Base>
  426417:	add    rbx,0x1
  42641b:	cmp    rbx,QWORD PTR [rsp+0x40]
  426420:	jb     4263d0 <__flatcc_fb_build_schema@@Base+0x18f0>
  426422:	jmp    42643f <__flatcc_fb_build_schema@@Base+0x195f>
  426424:	mov    rsi,QWORD PTR [r13+0x8]
  426428:	xor    ecx,ecx
  42642a:	xor    r8d,r8d
  42642d:	xor    r9d,r9d
  426430:	mov    rdi,r12
  426433:	lea    rdx,[rip+0x2407c]        # 44a4b6 <fb_schema_table_deleted@@Base+0x2586>
  42643a:	call   41c7d0 <__flatcc_error_report@@Base>
  42643f:	lea    r15,[rip+0x238ea]        # 449d30 <fb_schema_table_deleted@@Base+0x1e00>
  426446:	mov    ebx,0x1
  42644b:	mov    ecx,DWORD PTR [rsp+0x1c]
  42644f:	xor    eax,eax
  426451:	test   ecx,ecx
  426453:	je     42646a <__flatcc_fb_build_schema@@Base+0x198a>
  426455:	or     BYTE PTR [r13+0x12],0x8
  42645a:	cmp    ecx,0x2
  42645d:	jl     42646a <__flatcc_fb_build_schema@@Base+0x198a>
  42645f:	cmp    DWORD PTR [r12+0x108],0x0
  426468:	je     426474 <__flatcc_fb_build_schema@@Base+0x1994>
  42646a:	test   ebx,ebx
  42646c:	jne    426498 <__flatcc_fb_build_schema@@Base+0x19b8>
  42646e:	test   eax,eax
  426470:	jne    426498 <__flatcc_fb_build_schema@@Base+0x19b8>
  426472:	jmp    4264a0 <__flatcc_fb_build_schema@@Base+0x19c0>
  426474:	mov    rsi,QWORD PTR [r13+0x8]
  426478:	xor    ecx,ecx
  42647a:	xor    r8d,r8d
  42647d:	xor    r9d,r9d
  426480:	mov    rdi,r12
  426483:	lea    rdx,[rip+0x23618]        # 449aa2 <fb_schema_table_deleted@@Base+0x1b72>
  42648a:	call   41c7d0 <__flatcc_error_report@@Base>
  42648f:	mov    eax,0xffffffff
  426494:	test   ebx,ebx
  426496:	je     42646e <__flatcc_fb_build_schema@@Base+0x198e>
  426498:	mov    WORD PTR [r13+0x58],0x1
  42649f:	nop
  4264a0:	mov    r13,QWORD PTR [r13+0x0]
  4264a4:	test   r13,r13
  4264a7:	jne    425310 <__flatcc_fb_build_schema@@Base+0x830>
  4264ad:	mov    rax,QWORD PTR [r12+0x240]
  4264b5:	test   rax,rax
  4264b8:	je     4264db <__flatcc_fb_build_schema@@Base+0x19fb>
  4264ba:	xor    edx,edx
  4264bc:	nop    DWORD PTR [rax+0x0]
  4264c0:	mov    rcx,rax
  4264c3:	mov    rax,QWORD PTR [rax+0xc0]
  4264ca:	mov    QWORD PTR [rcx+0xc0],rdx
  4264d1:	mov    rdx,rcx
  4264d4:	test   rax,rax
  4264d7:	jne    4264c0 <__flatcc_fb_build_schema@@Base+0x19e0>
  4264d9:	jmp    4264dd <__flatcc_fb_build_schema@@Base+0x19fd>
  4264db:	xor    ecx,ecx
  4264dd:	mov    QWORD PTR [r12+0x240],rcx
  4264e5:	mov    rax,QWORD PTR [r12+0x238]
  4264ed:	test   rax,rax
  4264f0:	je     42678c <__flatcc_fb_build_schema@@Base+0x1cac>
  4264f6:	lea    r9,[rsp+0x100]
  4264fe:	vxorps xmm0,xmm0,xmm0
  426502:	mov    edx,0x8680
  426507:	lea    r8,[rsp+0x28]
  42650c:	lea    r10,[rsp+0xc0]
  426514:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42651e:	xchg   ax,ax
  426520:	cmp    WORD PTR [rax+0x10],0x0
  426525:	jne    426780 <__flatcc_fb_build_schema@@Base+0x1ca0>
  42652b:	test   BYTE PTR [rax+0xa4],0x8
  426532:	mov    rbx,QWORD PTR [rax+0x28]
  426536:	jne    42668a <__flatcc_fb_build_schema@@Base+0x1baa>
  42653c:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  426545:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  42654e:	mov    QWORD PTR [rsp+0x100],0x0
  42655a:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  426563:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  426569:	mov    QWORD PTR [rsp+0xa0],0x0
  426575:	test   rbx,rbx
  426578:	je     4266e0 <__flatcc_fb_build_schema@@Base+0x1c00>
  42657e:	mov    rsi,rbx
  426581:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42658b:	nop    DWORD PTR [rax+rax*1+0x0]
  426590:	movzx  ecx,WORD PTR [rsi+0x28]
  426594:	cmp    ecx,0xf
  426597:	ja     426678 <__flatcc_fb_build_schema@@Base+0x1b98>
  42659d:	bt     edx,ecx
  4265a0:	jae    426630 <__flatcc_fb_build_schema@@Base+0x1b50>
  4265a6:	movzx  ecx,WORD PTR [r12+0x12c]
  4265af:	test   cx,cx
  4265b2:	je     42687a <__flatcc_fb_build_schema@@Base+0x1d9a>
  4265b8:	movzx  ecx,cx
  4265bb:	shr    ecx,1
  4265bd:	lzcnt  di,cx
  4265c2:	mov    ecx,0x10
  4265c7:	sub    ecx,edi
  4265c9:	movzx  edi,cx
  4265cc:	cmp    edi,0x7
  4265cf:	jb     4265d6 <__flatcc_fb_build_schema@@Base+0x1af6>
  4265d1:	mov    ecx,0x7
  4265d6:	movzx  edi,cx
  4265d9:	cmp    QWORD PTR [rsp+rdi*8+0xc0],0x0
  4265e2:	je     426600 <__flatcc_fb_build_schema@@Base+0x1b20>
  4265e4:	lea    rcx,[rsp+rdi*8]
  4265e8:	add    rcx,0x60
  4265ec:	mov    rdi,QWORD PTR [rsp+rdi*8+0x60]
  4265f1:	mov    QWORD PTR [rdi],rsi
  4265f4:	jmp    426610 <__flatcc_fb_build_schema@@Base+0x1b30>
  4265f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426600:	mov    QWORD PTR [rsp+rdi*8+0xc0],rsi
  426608:	lea    rcx,[rsp+rdi*8]
  42660c:	add    rcx,0x60
  426610:	lea    rdi,[rsi+0x98]
  426617:	mov    QWORD PTR [rcx],rdi
  42661a:	mov    rsi,QWORD PTR [rsi]
  42661d:	test   rsi,rsi
  426620:	jne    426590 <__flatcc_fb_build_schema@@Base+0x1ab0>
  426626:	jmp    4266e0 <__flatcc_fb_build_schema@@Base+0x1c00>
  42662b:	nop    DWORD PTR [rax+rax*1+0x0]
  426630:	movzx  ecx,cx
  426633:	cmp    ecx,0xe
  426636:	jne    42666f <__flatcc_fb_build_schema@@Base+0x1b8f>
  426638:	mov    rcx,QWORD PTR [rsi+0x18]
  42663c:	movzx  edi,WORD PTR [rcx+0x10]
  426640:	cmp    edi,0x1
  426643:	je     42665a <__flatcc_fb_build_schema@@Base+0x1b7a>
  426645:	movzx  edi,di
  426648:	cmp    edi,0x4
  42664b:	je     4265a6 <__flatcc_fb_build_schema@@Base+0x1ac6>
  426651:	cmp    edi,0x3
  426654:	jne    4265a6 <__flatcc_fb_build_schema@@Base+0x1ac6>
  42665a:	movzx  ecx,WORD PTR [rcx+0xb0]
  426661:	test   cx,cx
  426664:	jne    4265b8 <__flatcc_fb_build_schema@@Base+0x1ad8>
  42666a:	jmp    42687a <__flatcc_fb_build_schema@@Base+0x1d9a>
  42666f:	cmp    ecx,0x1
  426672:	je     426744 <__flatcc_fb_build_schema@@Base+0x1c64>
  426678:	movzx  ecx,WORD PTR [rsi+0x72]
  42667c:	test   cx,cx
  42667f:	jne    4265b8 <__flatcc_fb_build_schema@@Base+0x1ad8>
  426685:	jmp    42687a <__flatcc_fb_build_schema@@Base+0x1d9a>
  42668a:	mov    QWORD PTR [rsp+0xc0],0x0
  426696:	mov    rcx,r10
  426699:	test   rbx,rbx
  42669c:	je     4266c8 <__flatcc_fb_build_schema@@Base+0x1be8>
  42669e:	mov    rcx,r10
  4266a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4266ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4266b0:	mov    QWORD PTR [rcx],rbx
  4266b3:	mov    rcx,rbx
  4266b6:	mov    rsi,QWORD PTR [rbx]
  4266b9:	add    rcx,0x98
  4266c0:	mov    rbx,rsi
  4266c3:	test   rsi,rsi
  4266c6:	jne    4266b0 <__flatcc_fb_build_schema@@Base+0x1bd0>
  4266c8:	mov    QWORD PTR [rcx],0x0
  4266cf:	mov    rcx,QWORD PTR [rsp+0xc0]
  4266d7:	mov    QWORD PTR [rax+0x30],rcx
  4266db:	jmp    426780 <__flatcc_fb_build_schema@@Base+0x1ca0>
  4266e0:	mov    QWORD PTR [rsp+0xa0],r9
  4266e8:	mov    si,0x8
  4266ec:	nop    DWORD PTR [rax+0x0]
  4266f0:	movzx  ebx,si
  4266f3:	mov    rsi,rbx
  4266f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426700:	test   rsi,rsi
  426703:	je     426720 <__flatcc_fb_build_schema@@Base+0x1c40>
  426705:	lea    ecx,[rsi-0x1]
  426708:	movzx  ecx,cx
  42670b:	add    rsi,0xffffffffffffffff
  42670f:	cmp    QWORD PTR [rsp+rcx*8+0xc0],0x0
  426718:	je     426700 <__flatcc_fb_build_schema@@Base+0x1c20>
  42671a:	jmp    426722 <__flatcc_fb_build_schema@@Base+0x1c42>
  42671c:	nop    DWORD PTR [rax+0x0]
  426720:	xor    esi,esi
  426722:	movzx  ecx,si
  426725:	mov    rdi,QWORD PTR [rsp+rcx*8+0xc0]
  42672d:	mov    rbx,QWORD PTR [rsp+rbx*8+0x60]
  426732:	mov    QWORD PTR [rbx],rdi
  426735:	test   cx,cx
  426738:	jne    4266f0 <__flatcc_fb_build_schema@@Base+0x1c10>
  42673a:	mov    rsi,QWORD PTR [rsp+0x100]
  426742:	jmp    426774 <__flatcc_fb_build_schema@@Base+0x1c94>
  426744:	mov    QWORD PTR [rsp+0x28],0x0
  42674d:	mov    rcx,r8
  426750:	mov    QWORD PTR [rcx],rbx
  426753:	mov    rcx,rbx
  426756:	mov    rsi,QWORD PTR [rbx]
  426759:	add    rcx,0x98
  426760:	mov    rbx,rsi
  426763:	test   rsi,rsi
  426766:	jne    426750 <__flatcc_fb_build_schema@@Base+0x1c70>
  426768:	mov    rsi,QWORD PTR [rsp+0x28]
  42676d:	mov    QWORD PTR [rcx],0x0
  426774:	mov    QWORD PTR [rax+0x30],rsi
  426778:	nop    DWORD PTR [rax+rax*1+0x0]
  426780:	mov    rax,QWORD PTR [rax]
  426783:	test   rax,rax
  426786:	jne    426520 <__flatcc_fb_build_schema@@Base+0x1a40>
  42678c:	mov    rdx,QWORD PTR [r12+0x248]
  426794:	test   rdx,rdx
  426797:	je     4267e3 <__flatcc_fb_build_schema@@Base+0x1d03>
  426799:	mov    rsi,QWORD PTR [r12+0x258]
  4267a1:	xor    ecx,ecx
  4267a3:	mov    rdi,r12
  4267a6:	vzeroupper 
  4267a9:	call   4275e0 <__flatcc_fb_build_schema@@Base+0x2b00>
  4267ae:	mov    QWORD PTR [r12+0x250],rax
  4267b6:	test   rax,rax
  4267b9:	je     42680c <__flatcc_fb_build_schema@@Base+0x1d2c>
  4267bb:	cmp    DWORD PTR [r12+0x11c],0x0
  4267c4:	movzx  ecx,WORD PTR [rax+0x10]
  4267c8:	je     42681d <__flatcc_fb_build_schema@@Base+0x1d3d>
  4267ca:	movzx  ecx,cx
  4267cd:	cmp    ecx,0x2
  4267d0:	jb     42683d <__flatcc_fb_build_schema@@Base+0x1d5d>
  4267d2:	mov    rsi,QWORD PTR [r12+0x248]
  4267da:	lea    rdx,[rip+0x22b07]        # 4492e8 <fb_schema_table_deleted@@Base+0x13b8>
  4267e1:	jmp    426831 <__flatcc_fb_build_schema@@Base+0x1d51>
  4267e3:	cmp    DWORD PTR [r12+0x13c],0x0
  4267ec:	je     426851 <__flatcc_fb_build_schema@@Base+0x1d71>
  4267ee:	lea    rdx,[rip+0x22ac8]        # 4492bd <fb_schema_table_deleted@@Base+0x138d>
  4267f5:	xor    esi,esi
  4267f7:	xor    ecx,ecx
  4267f9:	xor    r8d,r8d
  4267fc:	xor    r9d,r9d
  4267ff:	mov    rdi,r12
  426802:	vzeroupper 
  426805:	call   41c7d0 <__flatcc_error_report@@Base>
  42680a:	jmp    426851 <__flatcc_fb_build_schema@@Base+0x1d71>
  42680c:	mov    rsi,QWORD PTR [r12+0x248]
  426814:	lea    rdx,[rip+0x22ab9]        # 4492d4 <fb_schema_table_deleted@@Base+0x13a4>
  42681b:	jmp    426831 <__flatcc_fb_build_schema@@Base+0x1d51>
  42681d:	test   cx,cx
  426820:	je     42683d <__flatcc_fb_build_schema@@Base+0x1d5d>
  426822:	mov    rsi,QWORD PTR [r12+0x248]
  42682a:	lea    rdx,[rip+0x22add]        # 44930e <fb_schema_table_deleted@@Base+0x13de>
  426831:	xor    ecx,ecx
  426833:	mov    rdi,r12
  426836:	call   41ca00 <error_ref_sym@@Base>
  42683b:	jmp    426845 <__flatcc_fb_build_schema@@Base+0x1d65>
  42683d:	mov    QWORD PTR [r12+0x250],rax
  426845:	mov    QWORD PTR [r12+0x248],0x0
  426851:	mov    eax,DWORD PTR [r12+0xd0]
  426859:	xor    ecx,ecx
  42685b:	test   eax,eax
  42685d:	sete   cl
  426860:	mov    DWORD PTR [r12+0xe4],ecx
  426868:	lea    rsp,[rbp-0x28]
  42686c:	pop    rbx
  42686d:	pop    r12
  42686f:	pop    r13
  426871:	pop    r14
  426873:	pop    r15
  426875:	pop    rbp
  426876:	vzeroupper 
  426879:	ret    
  42687a:	lea    rdi,[rip+0x23f6c]        # 44a7ed <fb_schema_table_deleted@@Base+0x28bd>
  426881:	lea    rsi,[rip+0x2293e]        # 4491c6 <fb_schema_table_deleted@@Base+0x1296>
  426888:	lea    rcx,[rip+0x23f64]        # 44a7f3 <fb_schema_table_deleted@@Base+0x28c3>
  42688f:	mov    edx,0x5f1
  426894:	vzeroupper 
  426897:	call   406100 <__assert_fail@plt>
  42689c:	mov    rax,QWORD PTR [rip+0x2c755]        # 452ff8 <stderr@GLIBC_2.2.5>
  4268a3:	mov    rcx,QWORD PTR [rax]
  4268a6:	lea    rdi,[rip+0x9f5f]        # 43080c <_IO_stdin_used@@Base+0x180c>
  4268ad:	mov    esi,0x22
  4268b2:	mov    edx,0x1
  4268b7:	call   406220 <fwrite@plt>
  4268bc:	mov    edi,0x1
  4268c1:	call   406210 <exit@plt>
  4268c6:	lea    rdi,[rip+0x228c3]        # 449190 <fb_schema_table_deleted@@Base+0x1260>
  4268cd:	lea    rsi,[rip+0x228f2]        # 4491c6 <fb_schema_table_deleted@@Base+0x1296>
  4268d4:	lea    rcx,[rip+0x2294e]        # 449229 <fb_schema_table_deleted@@Base+0x12f9>
  4268db:	mov    edx,0x616
  4268e0:	call   406100 <__assert_fail@plt>
  4268e5:	lea    rdi,[rip+0x23435]        # 449d21 <fb_schema_table_deleted@@Base+0x1df1>
  4268ec:	lea    rsi,[rip+0x228d3]        # 4491c6 <fb_schema_table_deleted@@Base+0x1296>
  4268f3:	lea    rcx,[rip+0x233f0]        # 449cea <fb_schema_table_deleted@@Base+0x1dba>
  4268fa:	mov    edx,0x302
  4268ff:	call   406100 <__assert_fail@plt>
  426904:	lea    rdi,[rip+0x23416]        # 449d21 <fb_schema_table_deleted@@Base+0x1df1>
  42690b:	lea    rsi,[rip+0x228b4]        # 4491c6 <fb_schema_table_deleted@@Base+0x1296>
  426912:	lea    rcx,[rip+0x23d04]        # 44a61d <fb_schema_table_deleted@@Base+0x26ed>
  426919:	mov    edx,0x469
  42691e:	call   406100 <__assert_fail@plt>
  426923:	lea    rdi,[rip+0x23c8d]        # 44a5b7 <fb_schema_table_deleted@@Base+0x2687>
  42692a:	lea    rsi,[rip+0x22895]        # 4491c6 <fb_schema_table_deleted@@Base+0x1296>
  426931:	lea    rcx,[rip+0x23c83]        # 44a5bb <fb_schema_table_deleted@@Base+0x268b>
  426938:	mov    edx,0x15b
  42693d:	call   406100 <__assert_fail@plt>
  426942:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42694c:	nop    DWORD PTR [rax+0x0]
  426950:	push   rbp
  426951:	push   r15
  426953:	push   r14
  426955:	push   r13
  426957:	push   r12
  426959:	push   rbx
  42695a:	sub    rsp,0xb8
  426961:	mov    r15,rsi
  426964:	mov    r14,rdi
  426967:	movzx  r13d,WORD PTR [rsi+0x10]
  42696c:	cmp    r13d,0x4
  426970:	jne    42698a <__flatcc_fb_build_schema@@Base+0x1eaa>
  426972:	cmp    WORD PTR [r15+0x58],0x0
  426978:	je     4269c1 <__flatcc_fb_build_schema@@Base+0x1ee1>
  42697a:	mov    rsi,QWORD PTR [r15+0x8]
  42697e:	lea    rdx,[rip+0x22a88]        # 44940d <fb_schema_table_deleted@@Base+0x14dd>
  426985:	jmp    426b01 <__flatcc_fb_build_schema@@Base+0x2021>
  42698a:	movzx  eax,r13w
  42698e:	cmp    eax,0x3
  426991:	jne    426fdd <__flatcc_fb_build_schema@@Base+0x24fd>
  426997:	movzx  eax,WORD PTR [r15+0x58]
  42699c:	cmp    eax,0x8
  42699f:	je     4269e1 <__flatcc_fb_build_schema@@Base+0x1f01>
  4269a1:	test   ax,ax
  4269a4:	jne    426af6 <__flatcc_fb_build_schema@@Base+0x2016>
  4269aa:	mov    WORD PTR [r15+0x58],0x1
  4269b1:	mov    rsi,QWORD PTR [r15+0x8]
  4269b5:	lea    rdx,[rip+0x22a0a]        # 4493c6 <fb_schema_table_deleted@@Base+0x1496>
  4269bc:	jmp    426b01 <__flatcc_fb_build_schema@@Base+0x2021>
  4269c1:	mov    WORD PTR [r15+0x58],0x8
  4269c8:	mov    DWORD PTR [r15+0x48],0x4
  4269d0:	mov    QWORD PTR [r15+0xb8],0x1
  4269db:	mov    ax,0x1
  4269df:	jmp    426a1e <__flatcc_fb_build_schema@@Base+0x1f3e>
  4269e1:	mov    rax,QWORD PTR [r15+0x48]
  4269e5:	mov    rcx,QWORD PTR [rax+0x20]
  4269e9:	lea    rdx,[rcx+0x3e7]
  4269f0:	xor    eax,eax
  4269f2:	cmp    rdx,0x1b
  4269f6:	ja     426a06 <__flatcc_fb_build_schema@@Base+0x1f26>
  4269f8:	lea    rax,[rip+0x226b1]        # 4490b0 <fb_schema_table_deleted@@Base+0x1180>
  4269ff:	mov    eax,DWORD PTR [rax+rcx*4+0xf9c]
  426a06:	mov    DWORD PTR [r15+0x48],eax
  426a0a:	mov    eax,eax
  426a0c:	lea    rcx,[rip+0x2266d]        # 449080 <fb_schema_table_deleted@@Base+0x1150>
  426a13:	movsxd rax,DWORD PTR [rcx+rax*4]
  426a17:	mov    QWORD PTR [r15+0xb8],rax
  426a1e:	mov    WORD PTR [r15+0xb0],ax
  426a26:	mov    rsi,QWORD PTR [r15+0x38]
  426a2a:	lea    rcx,[rsp+0x50]
  426a2f:	mov    edx,0x20
  426a34:	mov    rdi,r14
  426a37:	call   427400 <__flatcc_fb_build_schema@@Base+0x2920>
  426a3c:	mov    WORD PTR [r15+0xa4],ax
  426a44:	mov    DWORD PTR [rsp+0x28],0x0
  426a4c:	test   al,0x20
  426a4e:	je     426a67 <__flatcc_fb_build_schema@@Base+0x1f87>
  426a50:	mov    WORD PTR [rsp+0x10],0x5
  426a57:	mov    QWORD PTR [rsp],0x0
  426a5f:	mov    DWORD PTR [rsp+0x28],0x1
  426a67:	mov    edx,DWORD PTR [r15+0x48]
  426a6b:	cmp    edx,0x5
  426a6e:	jne    426a7d <__flatcc_fb_build_schema@@Base+0x1f9d>
  426a70:	mov    BYTE PTR [rsp],0x0
  426a74:	mov    WORD PTR [rsp+0x10],0x6
  426a7b:	jmp    426aa9 <__flatcc_fb_build_schema@@Base+0x1fc9>
  426a7d:	mov    QWORD PTR [rsp],0x0
  426a85:	mov    WORD PTR [rsp+0x10],0x4
  426a8c:	mov    rcx,rsp
  426a8f:	mov    rdi,r14
  426a92:	mov    rsi,r15
  426a95:	call   427800 <__flatcc_fb_coerce_scalar_type@@Base>
  426a9a:	test   eax,eax
  426a9c:	je     426aa9 <__flatcc_fb_build_schema@@Base+0x1fc9>
  426a9e:	lea    rdx,[rip+0x229a7]        # 44944c <fb_schema_table_deleted@@Base+0x151c>
  426aa5:	xor    esi,esi
  426aa7:	jmp    426b01 <__flatcc_fb_build_schema@@Base+0x2021>
  426aa9:	mov    rbx,QWORD PTR [r15+0x28]
  426aad:	test   rbx,rbx
  426ab0:	je     426f20 <__flatcc_fb_build_schema@@Base+0x2440>
  426ab6:	mov    rcx,QWORD PTR [rsp]
  426aba:	mov    rax,rcx
  426abd:	mov    QWORD PTR [rsp+0x20],rcx
  426ac2:	shr    rcx,0x8
  426ac6:	mov    QWORD PTR [rsp+0x30],rcx
  426acb:	lea    r12,[r15+0x60]
  426acf:	mov    rax,r14
  426ad2:	sub    rax,0xffffffffffffff80
  426ad6:	mov    QWORD PTR [rsp+0x38],rax
  426adb:	mov    rax,r15
  426ade:	sub    rax,0xffffffffffffff80
  426ae2:	mov    QWORD PTR [rsp+0x40],rax
  426ae7:	mov    ebp,0x1
  426aec:	mov    QWORD PTR [rsp+0x48],r12
  426af1:	jmp    426e40 <__flatcc_fb_build_schema@@Base+0x2360>
  426af6:	mov    rsi,QWORD PTR [r15+0x8]
  426afa:	lea    rdx,[rip+0x228db]        # 4493dc <fb_schema_table_deleted@@Base+0x14ac>
  426b01:	xor    ecx,ecx
  426b03:	xor    r8d,r8d
  426b06:	xor    r9d,r9d
  426b09:	mov    rdi,r14
  426b0c:	call   41c7d0 <__flatcc_error_report@@Base>
  426b11:	mov    ebp,0xffffffff
  426b16:	mov    eax,ebp
  426b18:	add    rsp,0xb8
  426b1f:	pop    rbx
  426b20:	pop    r12
  426b22:	pop    r13
  426b24:	pop    r14
  426b26:	pop    r15
  426b28:	pop    rbp
  426b29:	ret    
  426b2a:	mov    WORD PTR [rbx+0x28],0x0
  426b30:	jmp    426b70 <__flatcc_fb_build_schema@@Base+0x2090>
  426b32:	mov    rsi,QWORD PTR [r15+0x18]
  426b36:	mov    rdx,QWORD PTR [rbx+0x18]
  426b3a:	xor    ecx,ecx
  426b3c:	mov    rdi,r14
  426b3f:	call   4275e0 <__flatcc_fb_build_schema@@Base+0x2b00>
  426b44:	test   rax,rax
  426b47:	je     426dfb <__flatcc_fb_build_schema@@Base+0x231b>
  426b4d:	movzx  ecx,WORD PTR [rax+0x10]
  426b51:	cmp    ecx,0x2
  426b54:	jae    426e16 <__flatcc_fb_build_schema@@Base+0x2336>
  426b5a:	mov    WORD PTR [rbx+0x28],0xe
  426b60:	mov    QWORD PTR [rbx+0x18],rax
  426b64:	mov    QWORD PTR [rbx+0x80],0x0
  426b6f:	nop
  426b70:	movzx  eax,WORD PTR [rbx+0x58]
  426b74:	test   ebp,ebp
  426b76:	jne    426c35 <__flatcc_fb_build_schema@@Base+0x2155>
  426b7c:	test   ax,ax
  426b7f:	jne    426c35 <__flatcc_fb_build_schema@@Base+0x2155>
  426b85:	movzx  eax,WORD PTR [rsp+0x10]
  426b8a:	cmp    eax,0x4
  426b8d:	je     426bf0 <__flatcc_fb_build_schema@@Base+0x2110>
  426b8f:	movzx  eax,ax
  426b92:	cmp    eax,0x6
  426b95:	je     426bc9 <__flatcc_fb_build_schema@@Base+0x20e9>
  426b97:	cmp    eax,0x5
  426b9a:	jne    426c31 <__flatcc_fb_build_schema@@Base+0x2151>
  426ba0:	cmp    DWORD PTR [r15+0x48],0x6
  426ba5:	mov    rax,QWORD PTR [rsp]
  426ba9:	jne    426c29 <__flatcc_fb_build_schema@@Base+0x2149>
  426bab:	cmp    rax,0xffffffffffffffff
  426baf:	jne    426c29 <__flatcc_fb_build_schema@@Base+0x2149>
  426bb1:	mov    rsi,QWORD PTR [rbx+0x8]
  426bb5:	xor    ecx,ecx
  426bb7:	xor    r8d,r8d
  426bba:	xor    r9d,r9d
  426bbd:	mov    rdi,r14
  426bc0:	lea    rdx,[rip+0x229f5]        # 4495bc <fb_schema_table_deleted@@Base+0x168c>
  426bc7:	jmp    426c20 <__flatcc_fb_build_schema@@Base+0x2140>
  426bc9:	cmp    BYTE PTR [rsp],0x1
  426bcd:	jne    426bea <__flatcc_fb_build_schema@@Base+0x210a>
  426bcf:	mov    rsi,QWORD PTR [rbx+0x8]
  426bd3:	xor    ecx,ecx
  426bd5:	xor    r8d,r8d
  426bd8:	xor    r9d,r9d
  426bdb:	mov    rdi,r14
  426bde:	lea    rdx,[rip+0x22a0f]        # 4495f4 <fb_schema_table_deleted@@Base+0x16c4>
  426be5:	call   41c7d0 <__flatcc_error_report@@Base>
  426bea:	mov    BYTE PTR [rsp],0x1
  426bee:	jmp    426c31 <__flatcc_fb_build_schema@@Base+0x2151>
  426bf0:	cmp    DWORD PTR [r15+0x48],0x6
  426bf5:	mov    rax,QWORD PTR [rsp]
  426bf9:	jne    426c29 <__flatcc_fb_build_schema@@Base+0x2149>
  426bfb:	movabs rcx,0x7fffffffffffffff
  426c05:	cmp    rax,rcx
  426c08:	jne    426c29 <__flatcc_fb_build_schema@@Base+0x2149>
  426c0a:	mov    rsi,QWORD PTR [rbx+0x8]
  426c0e:	xor    ecx,ecx
  426c10:	xor    r8d,r8d
  426c13:	xor    r9d,r9d
  426c16:	mov    rdi,r14
  426c19:	lea    rdx,[rip+0x229b9]        # 4495d9 <fb_schema_table_deleted@@Base+0x16a9>
  426c20:	call   41c7d0 <__flatcc_error_report@@Base>
  426c25:	mov    rax,QWORD PTR [rsp]
  426c29:	add    rax,0x1
  426c2d:	mov    QWORD PTR [rsp],rax
  426c31:	movzx  eax,WORD PTR [rbx+0x58]
  426c35:	mov    r12d,r13d
  426c38:	lea    r13,[rbx+0x48]
  426c3c:	cmp    DWORD PTR [rsp+0x28],0x0
  426c41:	je     426d0b <__flatcc_fb_build_schema@@Base+0x222b>
  426c47:	test   ax,ax
  426c4a:	je     426c6c <__flatcc_fb_build_schema@@Base+0x218c>
  426c4c:	movzx  eax,ax
  426c4f:	cmp    eax,0x5
  426c52:	jne    426f6d <__flatcc_fb_build_schema@@Base+0x248d>
  426c58:	mov    rax,QWORD PTR [r13+0x10]
  426c5c:	mov    QWORD PTR [rsp+0x10],rax
  426c61:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  426c67:	vmovaps XMMWORD PTR [rsp],xmm0
  426c6c:	mov    rax,QWORD PTR [rsp]
  426c70:	mov    ecx,DWORD PTR [r15+0x48]
  426c74:	lea    rdx,[rip+0x22405]        # 449080 <fb_schema_table_deleted@@Base+0x1150>
  426c7b:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  426c7f:	shl    rcx,0x3
  426c83:	cmp    rax,rcx
  426c86:	jae    426f37 <__flatcc_fb_build_schema@@Base+0x2457>
  426c8c:	mov    ecx,0x1
  426c91:	shlx   rax,rcx,rax
  426c96:	mov    QWORD PTR [rbx+0x48],rax
  426c9a:	mov    WORD PTR [rbx+0x58],0x5
  426ca0:	mov    edx,DWORD PTR [r15+0x48]
  426ca4:	mov    rdi,r14
  426ca7:	mov    rsi,rbx
  426caa:	mov    rcx,r13
  426cad:	call   427800 <__flatcc_fb_coerce_scalar_type@@Base>
  426cb2:	test   eax,eax
  426cb4:	jne    426f37 <__flatcc_fb_build_schema@@Base+0x2457>
  426cba:	test   ebp,ebp
  426cbc:	jne    426d5a <__flatcc_fb_build_schema@@Base+0x227a>
  426cc2:	cmp    DWORD PTR [r14+0x120],0x0
  426cca:	je     426d5a <__flatcc_fb_build_schema@@Base+0x227a>
  426cd0:	movzx  eax,WORD PTR [rsp+0x10]
  426cd5:	cmp    eax,0x4
  426cd8:	je     426dc8 <__flatcc_fb_build_schema@@Base+0x22e8>
  426cde:	movzx  eax,ax
  426ce1:	cmp    eax,0x6
  426ce4:	je     426de8 <__flatcc_fb_build_schema@@Base+0x2308>
  426cea:	cmp    eax,0x5
  426ced:	jne    426d5a <__flatcc_fb_build_schema@@Base+0x227a>
  426cef:	mov    rax,QWORD PTR [rsp+0x30]
  426cf4:	shl    rax,0x8
  426cf8:	movzx  ecx,BYTE PTR [rsp+0x20]
  426cfd:	or     rcx,rax
  426d00:	cmp    QWORD PTR [rsp],rcx
  426d04:	ja     426d5a <__flatcc_fb_build_schema@@Base+0x227a>
  426d06:	jmp    426f7d <__flatcc_fb_build_schema@@Base+0x249d>
  426d0b:	test   ax,ax
  426d0e:	je     426d3e <__flatcc_fb_build_schema@@Base+0x225e>
  426d10:	mov    rax,QWORD PTR [r13+0x10]
  426d14:	mov    QWORD PTR [rsp+0x10],rax
  426d19:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  426d1f:	vmovaps XMMWORD PTR [rsp],xmm0
  426d24:	mov    edx,DWORD PTR [r15+0x48]
  426d28:	mov    rdi,r14
  426d2b:	mov    rsi,rbx
  426d2e:	mov    rcx,rsp
  426d31:	call   427800 <__flatcc_fb_coerce_scalar_type@@Base>
  426d36:	test   eax,eax
  426d38:	jne    426b11 <__flatcc_fb_build_schema@@Base+0x2031>
  426d3e:	mov    rax,QWORD PTR [rsp+0x10]
  426d43:	mov    QWORD PTR [r13+0x10],rax
  426d47:	vmovaps xmm0,XMMWORD PTR [rsp]
  426d4c:	vmovups XMMWORD PTR [r13+0x0],xmm0
  426d52:	test   ebp,ebp
  426d54:	je     426cc2 <__flatcc_fb_build_schema@@Base+0x21e2>
  426d5a:	mov    rbp,QWORD PTR [rsp]
  426d5e:	mov    edx,0x1
  426d63:	mov    rdi,QWORD PTR [rsp+0x40]
  426d68:	mov    rsi,r13
  426d6b:	call   42df80 <fb_value_set_insert_item@@Base>
  426d70:	test   rax,rax
  426d73:	mov    r13d,r12d
  426d76:	mov    r12,QWORD PTR [rsp+0x48]
  426d7b:	je     426d8c <__flatcc_fb_build_schema@@Base+0x22ac>
  426d7d:	cmp    DWORD PTR [rsp+0x2c],0x4
  426d82:	je     426f47 <__flatcc_fb_build_schema@@Base+0x2467>
  426d88:	or     BYTE PTR [rbx+0x12],0x4
  426d8c:	mov    rax,rbp
  426d8f:	shr    rax,0x8
  426d93:	mov    QWORD PTR [rsp+0x30],rax
  426d98:	cmp    QWORD PTR [rbx+0x60],0x0
  426d9d:	mov    QWORD PTR [rsp+0x20],rbp
  426da2:	je     426f0d <__flatcc_fb_build_schema@@Base+0x242d>
  426da8:	mov    rsi,QWORD PTR [rbx+0x8]
  426dac:	xor    ecx,ecx
  426dae:	xor    r8d,r8d
  426db1:	xor    r9d,r9d
  426db4:	mov    rdi,r14
  426db7:	lea    rdx,[rip+0x229c3]        # 449781 <fb_schema_table_deleted@@Base+0x1851>
  426dbe:	call   41c7d0 <__flatcc_error_report@@Base>
  426dc3:	jmp    426f0d <__flatcc_fb_build_schema@@Base+0x242d>
  426dc8:	mov    rax,QWORD PTR [rsp+0x30]
  426dcd:	shl    rax,0x8
  426dd1:	movzx  ecx,BYTE PTR [rsp+0x20]
  426dd6:	or     rcx,rax
  426dd9:	cmp    QWORD PTR [rsp],rcx
  426ddd:	jg     426d5a <__flatcc_fb_build_schema@@Base+0x227a>
  426de3:	jmp    426f7d <__flatcc_fb_build_schema@@Base+0x249d>
  426de8:	mov    rax,QWORD PTR [rsp+0x20]
  426ded:	cmp    BYTE PTR [rsp],al
  426df0:	ja     426d5a <__flatcc_fb_build_schema@@Base+0x227a>
  426df6:	jmp    426fa4 <__flatcc_fb_build_schema@@Base+0x24c4>
  426dfb:	mov    rsi,QWORD PTR [rbx+0x18]
  426dff:	mov    rdi,r14
  426e02:	lea    rdx,[rip+0x2273f]        # 449548 <fb_schema_table_deleted@@Base+0x1618>
  426e09:	mov    rcx,rbx
  426e0c:	call   41ca00 <error_ref_sym@@Base>
  426e11:	jmp    426f07 <__flatcc_fb_build_schema@@Base+0x2427>
  426e16:	mov    rsi,QWORD PTR [rbx+0x8]
  426e1a:	mov    rcx,QWORD PTR [rax+0x8]
  426e1e:	xor    r8d,r8d
  426e21:	xor    r9d,r9d
  426e24:	mov    rdi,r14
  426e27:	lea    rdx,[rip+0x22748]        # 449576 <fb_schema_table_deleted@@Base+0x1646>
  426e2e:	jmp    426f02 <__flatcc_fb_build_schema@@Base+0x2422>
  426e33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426e3d:	nop    DWORD PTR [rax]
  426e40:	mov    edx,0x1
  426e45:	mov    rdi,r12
  426e48:	mov    rsi,rbx
  426e4b:	call   41a450 <fb_symbol_table_insert_item@@Base>
  426e50:	test   rax,rax
  426e53:	je     426e80 <__flatcc_fb_build_schema@@Base+0x23a0>
  426e55:	mov    rcx,QWORD PTR [rax+0x8]
  426e59:	mov    rsi,QWORD PTR [rbx+0x8]
  426e5d:	cmp    rcx,QWORD PTR [rsp+0x38]
  426e62:	je     426ef0 <__flatcc_fb_build_schema@@Base+0x2410>
  426e68:	xor    r8d,r8d
  426e6b:	xor    r9d,r9d
  426e6e:	mov    rdi,r14
  426e71:	lea    rdx,[rip+0x2262f]        # 4494a7 <fb_schema_table_deleted@@Base+0x1577>
  426e78:	jmp    426f02 <__flatcc_fb_build_schema@@Base+0x2422>
  426e7d:	nop    DWORD PTR [rax]
  426e80:	movzx  eax,WORD PTR [rbx+0x10]
  426e84:	cmp    eax,0x5
  426e87:	jne    426f27 <__flatcc_fb_build_schema@@Base+0x2447>
  426e8d:	cmp    QWORD PTR [rbx+0x60],0x0
  426e92:	jne    426fbe <__flatcc_fb_build_schema@@Base+0x24de>
  426e98:	movzx  eax,r13w
  426e9c:	mov    DWORD PTR [rsp+0x2c],eax
  426ea0:	cmp    eax,0x4
  426ea3:	jne    426b70 <__flatcc_fb_build_schema@@Base+0x2090>
  426ea9:	mov    rsi,QWORD PTR [rbx+0x8]
  426ead:	cmp    rsi,QWORD PTR [rsp+0x38]
  426eb2:	je     426b2a <__flatcc_fb_build_schema@@Base+0x204a>
  426eb8:	movzx  eax,WORD PTR [rbx+0x28]
  426ebc:	cmp    eax,0x1
  426ebf:	je     426f0d <__flatcc_fb_build_schema@@Base+0x242d>
  426ec1:	movzx  eax,ax
  426ec4:	cmp    eax,0xc
  426ec7:	je     426b32 <__flatcc_fb_build_schema@@Base+0x2052>
  426ecd:	cmp    eax,0xa
  426ed0:	je     426b64 <__flatcc_fb_build_schema@@Base+0x2084>
  426ed6:	xor    ecx,ecx
  426ed8:	xor    r8d,r8d
  426edb:	xor    r9d,r9d
  426ede:	mov    rdi,r14
  426ee1:	lea    rdx,[rip+0x22619]        # 449501 <fb_schema_table_deleted@@Base+0x15d1>
  426ee8:	jmp    426f02 <__flatcc_fb_build_schema@@Base+0x2422>
  426eea:	nop    WORD PTR [rax+rax*1+0x0]
  426ef0:	xor    ecx,ecx
  426ef2:	xor    r8d,r8d
  426ef5:	xor    r9d,r9d
  426ef8:	mov    rdi,r14
  426efb:	lea    rdx,[rip+0x22588]        # 44948a <fb_schema_table_deleted@@Base+0x155a>
  426f02:	call   41c7d0 <__flatcc_error_report@@Base>
  426f07:	mov    WORD PTR [rbx+0x28],0x1
  426f0d:	mov    rbx,QWORD PTR [rbx]
  426f10:	xor    ebp,ebp
  426f12:	test   rbx,rbx
  426f15:	jne    426e40 <__flatcc_fb_build_schema@@Base+0x2360>
  426f1b:	jmp    426b16 <__flatcc_fb_build_schema@@Base+0x2036>
  426f20:	xor    ebp,ebp
  426f22:	jmp    426b16 <__flatcc_fb_build_schema@@Base+0x2036>
  426f27:	mov    rsi,QWORD PTR [rbx+0x8]
  426f2b:	lea    rdx,[rip+0x22590]        # 4494c2 <fb_schema_table_deleted@@Base+0x1592>
  426f32:	jmp    426b01 <__flatcc_fb_build_schema@@Base+0x2021>
  426f37:	mov    rsi,QWORD PTR [rbx+0x8]
  426f3b:	lea    rdx,[rip+0x2271a]        # 44965c <fb_schema_table_deleted@@Base+0x172c>
  426f42:	jmp    426b01 <__flatcc_fb_build_schema@@Base+0x2021>
  426f47:	mov    rsi,QWORD PTR [rbx+0x8]
  426f4b:	lea    rdx,[rip+0x227e5]        # 449737 <fb_schema_table_deleted@@Base+0x1807>
  426f52:	xor    ecx,ecx
  426f54:	xor    r8d,r8d
  426f57:	xor    r9d,r9d
  426f5a:	mov    rdi,r14
  426f5d:	call   41c7d0 <__flatcc_error_report@@Base>
  426f62:	mov    WORD PTR [rbx+0x58],0x1
  426f68:	jmp    426b11 <__flatcc_fb_build_schema@@Base+0x2031>
  426f6d:	mov    rsi,QWORD PTR [rbx+0x8]
  426f71:	lea    rdx,[rip+0x226a9]        # 449621 <fb_schema_table_deleted@@Base+0x16f1>
  426f78:	jmp    426b01 <__flatcc_fb_build_schema@@Base+0x2021>
  426f7d:	cmp    DWORD PTR [rsp+0x2c],0x4
  426f82:	jne    426f97 <__flatcc_fb_build_schema@@Base+0x24b7>
  426f84:	mov    rcx,QWORD PTR [rsp+0x30]
  426f89:	shl    rcx,0x8
  426f8d:	movzx  eax,BYTE PTR [rsp+0x20]
  426f92:	or     rax,rcx
  426f95:	je     426fb1 <__flatcc_fb_build_schema@@Base+0x24d1>
  426f97:	mov    rsi,QWORD PTR [rbx+0x8]
  426f9b:	lea    rdx,[rip+0x2272e]        # 4496d0 <fb_schema_table_deleted@@Base+0x17a0>
  426fa2:	jmp    426f52 <__flatcc_fb_build_schema@@Base+0x2472>
  426fa4:	mov    rsi,QWORD PTR [rbx+0x8]
  426fa8:	lea    rdx,[rip+0x22748]        # 4496f7 <fb_schema_table_deleted@@Base+0x17c7>
  426faf:	jmp    426f52 <__flatcc_fb_build_schema@@Base+0x2472>
  426fb1:	mov    rsi,QWORD PTR [rbx+0x8]
  426fb5:	lea    rdx,[rip+0x226d3]        # 44968f <fb_schema_table_deleted@@Base+0x175f>
  426fbc:	jmp    426f52 <__flatcc_fb_build_schema@@Base+0x2472>
  426fbe:	lea    rdi,[rip+0x22526]        # 4494eb <fb_schema_table_deleted@@Base+0x15bb>
  426fc5:	lea    rsi,[rip+0x221fa]        # 4491c6 <fb_schema_table_deleted@@Base+0x1296>
  426fcc:	lea    rcx,[rip+0x223bd]        # 449390 <fb_schema_table_deleted@@Base+0x1460>
  426fd3:	mov    edx,0x523
  426fd8:	call   406100 <__assert_fail@plt>
  426fdd:	lea    rdi,[rip+0x10851]        # 437835 <_IO_stdin_used@@Base+0x8835>
  426fe4:	lea    rsi,[rip+0x221db]        # 4491c6 <fb_schema_table_deleted@@Base+0x1296>
  426feb:	lea    rcx,[rip+0x2239e]        # 449390 <fb_schema_table_deleted@@Base+0x1460>
  426ff2:	mov    edx,0x4cd
  426ff7:	call   406100 <__assert_fail@plt>
  426ffc:	nop    DWORD PTR [rax+0x0]
  427000:	push   rbp
  427001:	push   r15
  427003:	push   r14
  427005:	push   r13
  427007:	push   r12
  427009:	push   rbx
  42700a:	push   rax
  42700b:	movzx  eax,WORD PTR [rsi+0x10]
  42700f:	cmp    eax,0x1
  427012:	jne    42739c <__flatcc_fb_build_schema@@Base+0x28bc>
  427018:	mov    rbx,rsi
  42701b:	movzx  eax,WORD PTR [rsi+0x12]
  42701f:	test   al,0x1
  427021:	jne    4273bb <__flatcc_fb_build_schema@@Base+0x28db>
  427027:	xor    r13d,r13d
  42702a:	test   al,0x2
  42702c:	jne    427374 <__flatcc_fb_build_schema@@Base+0x2894>
  427032:	cmp    QWORD PTR [rbx+0xc0],0x0
  42703a:	jne    4273da <__flatcc_fb_build_schema@@Base+0x28fa>
  427040:	mov    r14,rdi
  427043:	or     eax,0x1
  427046:	mov    WORD PTR [rbx+0x12],ax
  42704a:	mov    r15,QWORD PTR [rbx+0x28]
  42704e:	mov    r12w,0x1
  427053:	test   r15,r15
  427056:	jne    42707b <__flatcc_fb_build_schema@@Base+0x259b>
  427058:	jmp    427246 <__flatcc_fb_build_schema@@Base+0x2766>
  42705d:	nop    DWORD PTR [rax]
  427060:	mov    QWORD PTR [rbx+0xb8],rbp
  427067:	cmp    r12w,ax
  42706b:	cmovb  r12d,eax
  42706f:	mov    r15,QWORD PTR [r15]
  427072:	test   r15,r15
  427075:	je     427246 <__flatcc_fb_build_schema@@Base+0x2766>
  42707b:	mov    eax,DWORD PTR [r14+0xe0]
  427082:	cmp    eax,0x64
  427085:	jge    427311 <__flatcc_fb_build_schema@@Base+0x2831>
  42708b:	movzx  ecx,WORD PTR [r15+0x28]
  427090:	mov    r13d,0xffffffff
  427096:	cmp    ecx,0x8
  427099:	je     4270d0 <__flatcc_fb_build_schema@@Base+0x25f0>
  42709b:	movzx  ecx,cx
  42709e:	cmp    ecx,0xe
  4270a1:	jne    427332 <__flatcc_fb_build_schema@@Base+0x2852>
  4270a7:	mov    rbp,QWORD PTR [r15+0x18]
  4270ab:	movzx  ecx,WORD PTR [rbp+0x10]
  4270af:	cmp    ecx,0x1
  4270b2:	je     427120 <__flatcc_fb_build_schema@@Base+0x2640>
  4270b4:	movzx  eax,cx
  4270b7:	cmp    eax,0x3
  4270ba:	jne    427359 <__flatcc_fb_build_schema@@Base+0x2879>
  4270c0:	mov    rbp,QWORD PTR [rbp+0xb8]
  4270c7:	jmp    427114 <__flatcc_fb_build_schema@@Base+0x2634>
  4270c9:	nop    DWORD PTR [rax+0x0]
  4270d0:	mov    rcx,QWORD PTR [r15+0x18]
  4270d4:	mov    rax,QWORD PTR [rcx+0x20]
  4270d8:	lea    rdx,[rax+0x3e7]
  4270df:	cmp    rdx,0x1c
  4270e3:	jae    427344 <__flatcc_fb_build_schema@@Base+0x2864>
  4270e9:	mov    esi,0x97ed7fb
  4270ee:	bt     esi,edx
  4270f1:	jae    427344 <__flatcc_fb_build_schema@@Base+0x2864>
  4270f7:	lea    rcx,[rip+0x22022]        # 449120 <fb_schema_table_deleted@@Base+0x11f0>
  4270fe:	mov    eax,DWORD PTR [rcx+rax*4+0xf9c]
  427105:	mov    DWORD PTR [r15+0x18],eax
  427109:	lea    rcx,[rip+0x21f70]        # 449080 <fb_schema_table_deleted@@Base+0x1150>
  427110:	movsxd rbp,DWORD PTR [rcx+rax*4]
  427114:	mov    WORD PTR [r15+0x72],bp
  427119:	mov    eax,ebp
  42711b:	jmp    427198 <__flatcc_fb_build_schema@@Base+0x26b8>
  42711d:	nop    DWORD PTR [rax]
  427120:	movzx  ecx,WORD PTR [rbp+0x12]
  427124:	test   cl,0x1
  427127:	jne    427386 <__flatcc_fb_build_schema@@Base+0x28a6>
  42712d:	test   cl,0x2
  427130:	jne    427185 <__flatcc_fb_build_schema@@Base+0x26a5>
  427132:	cmp    DWORD PTR [r14+0x128],0x0
  42713a:	je     427160 <__flatcc_fb_build_schema@@Base+0x2680>
  42713c:	mov    rsi,QWORD PTR [r15+0x8]
  427140:	mov    rcx,QWORD PTR [rbp+0x8]
  427144:	xor    r8d,r8d
  427147:	xor    r9d,r9d
  42714a:	mov    rdi,r14
  42714d:	lea    rdx,[rip+0x22a6d]        # 449bc1 <fb_schema_table_deleted@@Base+0x1c91>
  427154:	call   41c7d0 <__flatcc_error_report@@Base>
  427159:	mov    eax,DWORD PTR [r14+0xe0]
  427160:	add    eax,0x1
  427163:	mov    DWORD PTR [r14+0xe0],eax
  42716a:	mov    rdi,r14
  42716d:	mov    rsi,rbp
  427170:	call   427000 <__flatcc_fb_build_schema@@Base+0x2520>
  427175:	add    DWORD PTR [r14+0xe0],0xffffffff
  42717d:	test   eax,eax
  42717f:	jne    427397 <__flatcc_fb_build_schema@@Base+0x28b7>
  427185:	movzx  eax,WORD PTR [rbp+0xb0]
  42718c:	mov    WORD PTR [r15+0x72],ax
  427191:	mov    rbp,QWORD PTR [rbp+0xb8]
  427198:	mov    QWORD PTR [r15+0x80],rbp
  42719f:	test   ax,ax
  4271a2:	je     4272ad <__flatcc_fb_build_schema@@Base+0x27cd>
  4271a8:	movzx  ecx,ax
  4271ab:	lea    rsi,[rcx-0x1]
  4271af:	cmp    rsi,0xff
  4271b6:	ja     4272ad <__flatcc_fb_build_schema@@Base+0x27cd>
  4271bc:	mov    rdx,QWORD PTR [rbx+0xb8]
  4271c3:	mov    edi,0x1
  4271c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4271d0:	cmp    rdi,rcx
  4271d3:	je     4271f0 <__flatcc_fb_build_schema@@Base+0x2710>
  4271d5:	add    rdi,rdi
  4271d8:	cmp    rdi,rcx
  4271db:	jbe    4271d0 <__flatcc_fb_build_schema@@Base+0x26f0>
  4271dd:	jmp    4272ad <__flatcc_fb_build_schema@@Base+0x27cd>
  4271e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4271ec:	nop    DWORD PTR [rax+0x0]
  4271f0:	add    rsi,rdx
  4271f3:	neg    rcx
  4271f6:	and    rcx,rsi
  4271f9:	mov    QWORD PTR [r15+0x78],rcx
  4271fd:	cmp    rcx,rdx
  427200:	jb     427304 <__flatcc_fb_build_schema@@Base+0x2824>
  427206:	add    rbp,rcx
  427209:	jb     427304 <__flatcc_fb_build_schema@@Base+0x2824>
  42720f:	cmp    rbp,rdx
  427212:	jb     427221 <__flatcc_fb_build_schema@@Base+0x2741>
  427214:	cmp    rbp,0x10000
  42721b:	jb     427060 <__flatcc_fb_build_schema@@Base+0x2580>
  427221:	mov    rsi,QWORD PTR [r15+0x8]
  427225:	xor    ecx,ecx
  427227:	xor    r8d,r8d
  42722a:	xor    r9d,r9d
  42722d:	mov    rdi,r14
  427230:	lea    rdx,[rip+0x22a09]        # 449c40 <fb_schema_table_deleted@@Base+0x1d10>
  427237:	call   41c7d0 <__flatcc_error_report@@Base>
  42723c:	movzx  eax,WORD PTR [r15+0x72]
  427241:	jmp    427060 <__flatcc_fb_build_schema@@Base+0x2580>
  427246:	movzx  eax,WORD PTR [rbx+0xb0]
  42724d:	test   ax,ax
  427250:	je     427273 <__flatcc_fb_build_schema@@Base+0x2793>
  427252:	cmp    r12w,ax
  427256:	jbe    42727e <__flatcc_fb_build_schema@@Base+0x279e>
  427258:	mov    rsi,QWORD PTR [rbx+0x8]
  42725c:	lea    rdx,[rip+0x22a10]        # 449c73 <fb_schema_table_deleted@@Base+0x1d43>
  427263:	xor    ecx,ecx
  427265:	xor    r8d,r8d
  427268:	xor    r9d,r9d
  42726b:	mov    rdi,r14
  42726e:	call   41c7d0 <__flatcc_error_report@@Base>
  427273:	mov    WORD PTR [rbx+0xb0],r12w
  42727b:	mov    eax,r12d
  42727e:	test   ax,ax
  427281:	je     4272ad <__flatcc_fb_build_schema@@Base+0x27cd>
  427283:	movzx  eax,ax
  427286:	lea    rcx,[rax-0x1]
  42728a:	cmp    rcx,0xff
  427291:	ja     4272ad <__flatcc_fb_build_schema@@Base+0x27cd>
  427293:	mov    rdx,QWORD PTR [rbx+0xb8]
  42729a:	mov    esi,0x1
  42729f:	nop
  4272a0:	cmp    rsi,rax
  4272a3:	je     4272cc <__flatcc_fb_build_schema@@Base+0x27ec>
  4272a5:	add    rsi,rsi
  4272a8:	cmp    rsi,rax
  4272ab:	jbe    4272a0 <__flatcc_fb_build_schema@@Base+0x27c0>
  4272ad:	lea    rdi,[rip+0x229fa]        # 449cae <fb_schema_table_deleted@@Base+0x1d7e>
  4272b4:	lea    rsi,[rip+0x21f0b]        # 4491c6 <fb_schema_table_deleted@@Base+0x1296>
  4272bb:	lea    rcx,[rip+0x22a02]        # 449cc4 <fb_schema_table_deleted@@Base+0x1d94>
  4272c2:	mov    edx,0x6c
  4272c7:	call   406100 <__assert_fail@plt>
  4272cc:	add    rcx,rdx
  4272cf:	neg    rax
  4272d2:	and    rax,rcx
  4272d5:	mov    QWORD PTR [rbx+0xb8],rax
  4272dc:	movzx  eax,WORD PTR [rbx+0x12]
  4272e0:	and    eax,0xfffffffc
  4272e3:	or     eax,0x2
  4272e6:	mov    WORD PTR [rbx+0x12],ax
  4272ea:	mov    rax,QWORD PTR [r14+0x240]
  4272f1:	mov    QWORD PTR [rbx+0xc0],rax
  4272f8:	mov    QWORD PTR [r14+0x240],rbx
  4272ff:	xor    r13d,r13d
  427302:	jmp    427374 <__flatcc_fb_build_schema@@Base+0x2894>
  427304:	mov    rsi,QWORD PTR [r15+0x8]
  427308:	lea    rdx,[rip+0x2291c]        # 449c2b <fb_schema_table_deleted@@Base+0x1cfb>
  42730f:	jmp    427364 <__flatcc_fb_build_schema@@Base+0x2884>
  427311:	lea    rdx,[rip+0x22830]        # 449b48 <fb_schema_table_deleted@@Base+0x1c18>
  427318:	xor    esi,esi
  42731a:	xor    ecx,ecx
  42731c:	xor    r8d,r8d
  42731f:	xor    r9d,r9d
  427322:	mov    rdi,r14
  427325:	call   41c7d0 <__flatcc_error_report@@Base>
  42732a:	mov    r13d,0xffffffff
  427330:	jmp    427374 <__flatcc_fb_build_schema@@Base+0x2894>
  427332:	cmp    ecx,0x1
  427335:	je     427374 <__flatcc_fb_build_schema@@Base+0x2894>
  427337:	mov    rsi,QWORD PTR [r15+0x8]
  42733b:	lea    rdx,[rip+0x2284f]        # 449b91 <fb_schema_table_deleted@@Base+0x1c61>
  427342:	jmp    427364 <__flatcc_fb_build_schema@@Base+0x2884>
  427344:	mov    DWORD PTR [r15+0x18],0x0
  42734c:	mov    rsi,QWORD PTR [r15+0x8]
  427350:	lea    rdx,[rip+0x2283a]        # 449b91 <fb_schema_table_deleted@@Base+0x1c61>
  427357:	jmp    427366 <__flatcc_fb_build_schema@@Base+0x2886>
  427359:	mov    rsi,QWORD PTR [r15+0x8]
  42735d:	lea    rdx,[rip+0x228a4]        # 449c08 <fb_schema_table_deleted@@Base+0x1cd8>
  427364:	xor    ecx,ecx
  427366:	xor    r8d,r8d
  427369:	xor    r9d,r9d
  42736c:	mov    rdi,r14
  42736f:	call   41c7d0 <__flatcc_error_report@@Base>
  427374:	mov    eax,r13d
  427377:	add    rsp,0x8
  42737b:	pop    rbx
  42737c:	pop    r12
  42737e:	pop    r13
  427380:	pop    r14
  427382:	pop    r15
  427384:	pop    rbp
  427385:	ret    
  427386:	mov    rsi,QWORD PTR [r15+0x8]
  42738a:	mov    rcx,QWORD PTR [rbp+0x8]
  42738e:	lea    rdx,[rip+0x2280c]        # 449ba1 <fb_schema_table_deleted@@Base+0x1c71>
  427395:	jmp    427366 <__flatcc_fb_build_schema@@Base+0x2886>
  427397:	mov    r13d,eax
  42739a:	jmp    427374 <__flatcc_fb_build_schema@@Base+0x2894>
  42739c:	lea    rdi,[rip+0x101af]        # 437552 <_IO_stdin_used@@Base+0x8552>
  4273a3:	lea    rsi,[rip+0x21e1c]        # 4491c6 <fb_schema_table_deleted@@Base+0x1296>
  4273aa:	lea    rcx,[rip+0x2272d]        # 449ade <fb_schema_table_deleted@@Base+0x1bae>
  4273b1:	mov    edx,0x1f6
  4273b6:	call   406100 <__assert_fail@plt>
  4273bb:	lea    rdi,[rip+0x22754]        # 449b16 <fb_schema_table_deleted@@Base+0x1be6>
  4273c2:	lea    rsi,[rip+0x21dfd]        # 4491c6 <fb_schema_table_deleted@@Base+0x1296>
  4273c9:	lea    rcx,[rip+0x2270e]        # 449ade <fb_schema_table_deleted@@Base+0x1bae>
  4273d0:	mov    edx,0x1f8
  4273d5:	call   406100 <__assert_fail@plt>
  4273da:	lea    rdi,[rip+0x2275c]        # 449b3d <fb_schema_table_deleted@@Base+0x1c0d>
  4273e1:	lea    rsi,[rip+0x21dde]        # 4491c6 <fb_schema_table_deleted@@Base+0x1296>
  4273e8:	lea    rcx,[rip+0x226ef]        # 449ade <fb_schema_table_deleted@@Base+0x1bae>
  4273ef:	mov    edx,0x1fc
  4273f4:	call   406100 <__assert_fail@plt>
  4273f9:	nop    DWORD PTR [rax+0x0]
  427400:	push   rbp
  427401:	push   r15
  427403:	push   r14
  427405:	push   r13
  427407:	push   r12
  427409:	push   rbx
  42740a:	push   rax
  42740b:	vxorps xmm0,xmm0,xmm0
  42740f:	vmovups YMMWORD PTR [rcx+0x40],ymm0
  427414:	vmovups YMMWORD PTR [rcx+0x20],ymm0
  427419:	vmovups YMMWORD PTR [rcx],ymm0
  42741d:	test   rsi,rsi
  427420:	je     4275ba <__flatcc_fb_build_schema@@Base+0x2ada>
  427426:	mov    r15,rcx
  427429:	mov    rbx,rsi
  42742c:	mov    r12,rdi
  42742f:	movzx  ebp,dx
  427432:	mov    r13d,0xffffff9d
  427438:	xor    r14d,r14d
  42743b:	jmp    4274e0 <__flatcc_fb_build_schema@@Base+0x2a00>
  427440:	mov    QWORD PTR [r15+rax*8],rbx
  427444:	mov    ecx,0xdac
  427449:	bt     rcx,rax
  42744d:	jae    427471 <__flatcc_fb_build_schema@@Base+0x2991>
  42744f:	cmp    WORD PTR [rbx+0x20],0x0
  427454:	je     427471 <__flatcc_fb_build_schema@@Base+0x2991>
  427456:	mov    rsi,QWORD PTR [rbx+0x8]
  42745a:	xor    ecx,ecx
  42745c:	xor    r8d,r8d
  42745f:	xor    r9d,r9d
  427462:	mov    rdi,r12
  427465:	lea    rdx,[rip+0x223aa]        # 449816 <fb_schema_table_deleted@@Base+0x18e6>
  42746c:	jmp    42757e <__flatcc_fb_build_schema@@Base+0x2a9e>
  427471:	add    eax,0xffffffff
  427474:	cmp    eax,0x8
  427477:	ja     427583 <__flatcc_fb_build_schema@@Base+0x2aa3>
  42747d:	lea    rcx,[rip+0x21bcc]        # 449050 <fb_schema_table_deleted@@Base+0x1120>
  427484:	movsxd rax,DWORD PTR [rcx+rax*4]
  427488:	add    rax,rcx
  42748b:	jmp    rax
  42748d:	movzx  eax,WORD PTR [rbx+0x20]
  427491:	cmp    eax,0x5
  427494:	je     427583 <__flatcc_fb_build_schema@@Base+0x2aa3>
  42749a:	mov    rsi,QWORD PTR [rbx+0x8]
  42749e:	xor    ecx,ecx
  4274a0:	xor    r8d,r8d
  4274a3:	xor    r9d,r9d
  4274a6:	mov    rdi,r12
  4274a9:	lea    rdx,[rip+0x223af]        # 44985f <fb_schema_table_deleted@@Base+0x192f>
  4274b0:	jmp    42757e <__flatcc_fb_build_schema@@Base+0x2a9e>
  4274b5:	movzx  eax,WORD PTR [rbx+0x20]
  4274b9:	cmp    eax,0x2
  4274bc:	je     427583 <__flatcc_fb_build_schema@@Base+0x2aa3>
  4274c2:	mov    rsi,QWORD PTR [rbx+0x8]
  4274c6:	xor    ecx,ecx
  4274c8:	xor    r8d,r8d
  4274cb:	xor    r9d,r9d
  4274ce:	mov    rdi,r12
  4274d1:	lea    rdx,[rip+0x22366]        # 44983e <fb_schema_table_deleted@@Base+0x190e>
  4274d8:	jmp    42757e <__flatcc_fb_build_schema@@Base+0x2a9e>
  4274dd:	nop    DWORD PTR [rax]
  4274e0:	mov    rdi,QWORD PTR [r12+0x260]
  4274e8:	add    rdi,0x20
  4274ec:	mov    rax,QWORD PTR [rbx+0x8]
  4274f0:	mov    rsi,QWORD PTR [rax]
  4274f3:	mov    rdx,QWORD PTR [rax+0x8]
  4274f7:	vzeroupper 
  4274fa:	call   42d880 <fb_name_table_find@@Base>
  4274ff:	test   rax,rax
  427502:	je     427550 <__flatcc_fb_build_schema@@Base+0x2a70>
  427504:	movsxd rax,DWORD PTR [rax+0x20]
  427508:	test   rax,rax
  42750b:	je     427583 <__flatcc_fb_build_schema@@Base+0x2aa3>
  42750d:	bt     ebp,eax
  427510:	jae    427568 <__flatcc_fb_build_schema@@Base+0x2a88>
  427512:	mov    ecx,0x1
  427517:	shlx   ecx,ecx,eax
  42751c:	or     r14d,ecx
  42751f:	cmp    QWORD PTR [r15+rax*8],0x0
  427524:	je     427440 <__flatcc_fb_build_schema@@Base+0x2960>
  42752a:	mov    rsi,QWORD PTR [rbx+0x8]
  42752e:	xor    ecx,ecx
  427530:	xor    r8d,r8d
  427533:	xor    r9d,r9d
  427536:	mov    rdi,r12
  427539:	lea    rdx,[rip+0x222b0]        # 4497f0 <fb_schema_table_deleted@@Base+0x18c0>
  427540:	jmp    42757e <__flatcc_fb_build_schema@@Base+0x2a9e>
  427542:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42754c:	nop    DWORD PTR [rax+0x0]
  427550:	mov    rsi,QWORD PTR [rbx+0x8]
  427554:	xor    ecx,ecx
  427556:	xor    r8d,r8d
  427559:	xor    r9d,r9d
  42755c:	mov    rdi,r12
  42755f:	lea    rdx,[rip+0x2223e]        # 4497a4 <fb_schema_table_deleted@@Base+0x1874>
  427566:	jmp    42757e <__flatcc_fb_build_schema@@Base+0x2a9e>
  427568:	mov    rsi,QWORD PTR [rbx+0x8]
  42756c:	xor    ecx,ecx
  42756e:	xor    r8d,r8d
  427571:	xor    r9d,r9d
  427574:	mov    rdi,r12
  427577:	lea    rdx,[rip+0x22245]        # 4497c3 <fb_schema_table_deleted@@Base+0x1893>
  42757e:	call   41c7d0 <__flatcc_error_report@@Base>
  427583:	mov    rbx,QWORD PTR [rbx]
  427586:	test   r13d,r13d
  427589:	je     427598 <__flatcc_fb_build_schema@@Base+0x2ab8>
  42758b:	add    r13d,0x1
  42758f:	test   rbx,rbx
  427592:	jne    4274e0 <__flatcc_fb_build_schema@@Base+0x2a00>
  427598:	test   rbx,rbx
  42759b:	je     4275bd <__flatcc_fb_build_schema@@Base+0x2add>
  42759d:	mov    rsi,QWORD PTR [rbx+0x8]
  4275a1:	lea    rdx,[rip+0x222e3]        # 44988b <fb_schema_table_deleted@@Base+0x195b>
  4275a8:	xor    ecx,ecx
  4275aa:	xor    r8d,r8d
  4275ad:	xor    r9d,r9d
  4275b0:	mov    rdi,r12
  4275b3:	call   41c7d0 <__flatcc_error_report@@Base>
  4275b8:	jmp    4275bd <__flatcc_fb_build_schema@@Base+0x2add>
  4275ba:	xor    r14d,r14d
  4275bd:	mov    eax,r14d
  4275c0:	add    rsp,0x8
  4275c4:	pop    rbx
  4275c5:	pop    r12
  4275c7:	pop    r13
  4275c9:	pop    r14
  4275cb:	pop    r15
  4275cd:	pop    rbp
  4275ce:	vzeroupper 
  4275d1:	ret    
  4275d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4275dc:	nop    DWORD PTR [rax+0x0]
  4275e0:	push   rbp
  4275e1:	push   r15
  4275e3:	push   r14
  4275e5:	push   r13
  4275e7:	push   r12
  4275e9:	push   rbx
  4275ea:	push   rax
  4275eb:	mov    r13,rsi
  4275ee:	mov    r14,rdi
  4275f1:	test   rdx,rdx
  4275f4:	je     427753 <__flatcc_fb_build_schema@@Base+0x2c73>
  4275fa:	xor    eax,eax
  4275fc:	mov    rdi,rdx
  4275ff:	xor    esi,esi
  427601:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42760b:	nop    DWORD PTR [rax+rax*1+0x0]
  427610:	mov    r12,rsi
  427613:	mov    rsi,rdi
  427616:	mov    rdi,QWORD PTR [rdi]
  427619:	add    eax,0x1
  42761c:	test   rdi,rdi
  42761f:	jne    427610 <__flatcc_fb_build_schema@@Base+0x2b30>
  427621:	test   rcx,rcx
  427624:	je     427763 <__flatcc_fb_build_schema@@Base+0x2c83>
  42762a:	add    eax,0xffffffff
  42762d:	mov    QWORD PTR [rcx],rsi
  427630:	test   r12,r12
  427633:	je     4277e1 <__flatcc_fb_build_schema@@Base+0x2d01>
  427639:	test   r13,r13
  42763c:	je     427771 <__flatcc_fb_build_schema@@Base+0x2c91>
  427642:	cmp    eax,0x1
  427645:	jne    427771 <__flatcc_fb_build_schema@@Base+0x2c91>
  42764b:	lea    rax,[r14+0x320]
  427652:	mov    QWORD PTR [rsp],rax
  427656:	movabs rbp,0xffffffff00000000
  427660:	lea    rdi,[r13+0x8]
  427664:	mov    rax,QWORD PTR [r12+0x8]
  427669:	mov    rsi,QWORD PTR [rax]
  42766c:	mov    rdx,QWORD PTR [rax+0x8]
  427670:	call   41a470 <fb_symbol_table_find@@Base>
  427675:	test   rax,rax
  427678:	je     42769c <__flatcc_fb_build_schema@@Base+0x2bbc>
  42767a:	mov    rbx,rax
  42767d:	movzx  eax,WORD PTR [rax+0x10]
  427681:	cmp    eax,0x4
  427684:	ja     42769c <__flatcc_fb_build_schema@@Base+0x2bbc>
  427686:	mov    rsi,QWORD PTR [rbx+0x20]
  42768a:	mov    rdi,QWORD PTR [rsp]
  42768e:	call   419e50 <ptr_set_find_item@@Base>
  427693:	test   rax,rax
  427696:	jne    4277e3 <__flatcc_fb_build_schema@@Base+0x2d03>
  42769c:	mov    rax,QWORD PTR [r13+0x0]
  4276a0:	test   rax,rax
  4276a3:	je     4277e1 <__flatcc_fb_build_schema@@Base+0x2d01>
  4276a9:	mov    edx,0x2
  4276ae:	xor    esi,esi
  4276b0:	xor    ecx,ecx
  4276b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4276bc:	nop    DWORD PTR [rax+0x0]
  4276c0:	mov    rbx,rsi
  4276c3:	mov    r15,rdx
  4276c6:	mov    rax,QWORD PTR [rax]
  4276c9:	add    rcx,0x1
  4276cd:	lea    rsi,[rsi+rbp*1]
  4276d1:	lea    rdx,[rdx+0x1]
  4276d5:	test   rax,rax
  4276d8:	jne    4276c0 <__flatcc_fb_build_schema@@Base+0x2be0>
  4276da:	nop    WORD PTR [rax+rax*1+0x0]
  4276e0:	mov    rdi,QWORD PTR [r14+0x260]
  4276e7:	add    r15,0xffffffffffffffff
  4276eb:	cmp    r15,0x2
  4276ef:	jl     427730 <__flatcc_fb_build_schema@@Base+0x2c50>
  4276f1:	test   rdi,rdi
  4276f4:	je     427710 <__flatcc_fb_build_schema@@Base+0x2c30>
  4276f6:	mov    rsi,QWORD PTR [r13+0x0]
  4276fa:	mov    rdx,rbx
  4276fd:	sar    rdx,0x20
  427701:	call   41ae40 <fb_scope_table_find@@Base>
  427706:	jmp    427712 <__flatcc_fb_build_schema@@Base+0x2c32>
  427708:	nop    DWORD PTR [rax+rax*1+0x0]
  427710:	xor    eax,eax
  427712:	movabs rcx,0x100000000
  42771c:	add    rbx,rcx
  42771f:	test   rax,rax
  427722:	je     4276e0 <__flatcc_fb_build_schema@@Base+0x2c00>
  427724:	jmp    427742 <__flatcc_fb_build_schema@@Base+0x2c62>
  427726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427730:	test   rdi,rdi
  427733:	je     4277e1 <__flatcc_fb_build_schema@@Base+0x2d01>
  427739:	xor    esi,esi
  42773b:	xor    edx,edx
  42773d:	call   41ae40 <fb_scope_table_find@@Base>
  427742:	mov    r13,rax
  427745:	test   rax,rax
  427748:	jne    427660 <__flatcc_fb_build_schema@@Base+0x2b80>
  42774e:	jmp    4277e1 <__flatcc_fb_build_schema@@Base+0x2d01>
  427753:	xor    r12d,r12d
  427756:	xor    esi,esi
  427758:	xor    eax,eax
  42775a:	test   rcx,rcx
  42775d:	jne    42762a <__flatcc_fb_build_schema@@Base+0x2b4a>
  427763:	mov    r12,rsi
  427766:	test   r12,r12
  427769:	jne    427639 <__flatcc_fb_build_schema@@Base+0x2b59>
  42776f:	jmp    4277e1 <__flatcc_fb_build_schema@@Base+0x2d01>
  427771:	mov    rdi,QWORD PTR [r14+0x260]
  427778:	test   rdi,rdi
  42777b:	je     4277e1 <__flatcc_fb_build_schema@@Base+0x2d01>
  42777d:	xor    ebx,ebx
  42777f:	cmp    eax,0x1
  427782:	cmove  rdx,rbx
  427786:	mov    ecx,0x1
  42778b:	sub    ecx,eax
  42778d:	movsxd rax,ecx
  427790:	mov    rsi,rdx
  427793:	mov    rdx,rax
  427796:	call   41ae40 <fb_scope_table_find@@Base>
  42779b:	test   rax,rax
  42779e:	je     4277e3 <__flatcc_fb_build_schema@@Base+0x2d03>
  4277a0:	add    rax,0x8
  4277a4:	mov    rcx,QWORD PTR [r12+0x8]
  4277a9:	mov    rsi,QWORD PTR [rcx]
  4277ac:	mov    rdx,QWORD PTR [rcx+0x8]
  4277b0:	mov    rdi,rax
  4277b3:	call   41a470 <fb_symbol_table_find@@Base>
  4277b8:	test   rax,rax
  4277bb:	je     4277e1 <__flatcc_fb_build_schema@@Base+0x2d01>
  4277bd:	mov    rbx,rax
  4277c0:	movzx  eax,WORD PTR [rax+0x10]
  4277c4:	cmp    eax,0x4
  4277c7:	ja     4277e1 <__flatcc_fb_build_schema@@Base+0x2d01>
  4277c9:	add    r14,0x320
  4277d0:	mov    rsi,QWORD PTR [rbx+0x20]
  4277d4:	mov    rdi,r14
  4277d7:	call   419e50 <ptr_set_find_item@@Base>
  4277dc:	test   rax,rax
  4277df:	jne    4277e3 <__flatcc_fb_build_schema@@Base+0x2d03>
  4277e1:	xor    ebx,ebx
  4277e3:	mov    rax,rbx
  4277e6:	add    rsp,0x8
  4277ea:	pop    rbx
  4277eb:	pop    r12
  4277ed:	pop    r13
  4277ef:	pop    r14
  4277f1:	pop    r15
  4277f3:	pop    rbp
  4277f4:	ret    
  4277f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4277ff:	nop

0000000000427800 <__flatcc_fb_coerce_scalar_type@@Base>:
  427800:	push   r14
  427802:	push   rbx
  427803:	push   rax
  427804:	movzx  ebx,WORD PTR [rcx+0x10]
  427808:	xor    eax,eax
  42780a:	cmp    ebx,0x2
  42780d:	jb     427c3e <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  427813:	lea    r14,[rcx+0x10]
  427817:	movzx  r8d,bx
  42781b:	cmp    r8d,0x4
  42781f:	jne    427833 <__flatcc_fb_coerce_scalar_type@@Base+0x33>
  427821:	cmp    QWORD PTR [rcx],0x0
  427825:	js     42787d <__flatcc_fb_coerce_scalar_type@@Base+0x7d>
  427827:	mov    WORD PTR [r14],0x5
  42782d:	mov    bx,0x5
  427831:	jmp    427887 <__flatcc_fb_coerce_scalar_type@@Base+0x87>
  427833:	cmp    edx,0x5
  427836:	je     427887 <__flatcc_fb_coerce_scalar_type@@Base+0x87>
  427838:	cmp    r8d,0x6
  42783c:	jne    427887 <__flatcc_fb_coerce_scalar_type@@Base+0x87>
  42783e:	cmp    DWORD PTR [rdi+0xfc],0x0
  427845:	je     427883 <__flatcc_fb_coerce_scalar_type@@Base+0x83>
  427847:	mov    WORD PTR [rcx+0x10],0x5
  42784d:	movzx  r8d,BYTE PTR [rcx]
  427851:	mov    QWORD PTR [rcx],r8
  427854:	mov    bx,0x5
  427858:	cmp    r8,0x2
  42785c:	jb     427887 <__flatcc_fb_coerce_scalar_type@@Base+0x87>
  42785e:	lea    rdi,[rip+0x2302f]        # 44a894 <fb_schema_table_deleted@@Base+0x2964>
  427865:	lea    rsi,[rip+0x23047]        # 44a8b3 <fb_schema_table_deleted@@Base+0x2983>
  42786c:	lea    rcx,[rip+0x230a0]        # 44a913 <fb_schema_table_deleted@@Base+0x29e3>
  427873:	mov    edx,0x34
  427878:	call   406100 <__assert_fail@plt>
  42787d:	mov    bx,0x4
  427881:	jmp    427887 <__flatcc_fb_coerce_scalar_type@@Base+0x87>
  427883:	mov    bx,0x6
  427887:	add    edx,0xffffffff
  42788a:	cmp    edx,0xa
  42788d:	ja     427abb <__flatcc_fb_coerce_scalar_type@@Base+0x2bb>
  427893:	lea    r8,[rip+0x22fce]        # 44a868 <fb_schema_table_deleted@@Base+0x2938>
  42789a:	movsxd rdx,DWORD PTR [r8+rdx*4]
  42789e:	add    rdx,r8
  4278a1:	jmp    rdx
  4278a3:	movzx  ecx,bx
  4278a6:	cmp    ecx,0x5
  4278a9:	je     427c3e <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  4278af:	mov    rsi,QWORD PTR [rsi+0x8]
  4278b3:	lea    rdx,[rip+0x230ba]        # 44a974 <fb_schema_table_deleted@@Base+0x2a44>
  4278ba:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  4278bf:	movzx  edx,bx
  4278c2:	cmp    edx,0x6
  4278c5:	je     427c3e <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  4278cb:	cmp    edx,0x5
  4278ce:	jne    427afb <__flatcc_fb_coerce_scalar_type@@Base+0x2fb>
  4278d4:	cmp    DWORD PTR [rdi+0xfc],0x0
  4278db:	je     427afb <__flatcc_fb_coerce_scalar_type@@Base+0x2fb>
  4278e1:	cmp    QWORD PTR [rcx],0x2
  4278e5:	jb     427c3e <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  4278eb:	mov    rsi,QWORD PTR [rsi+0x8]
  4278ef:	lea    rdx,[rip+0x23330]        # 44ac26 <fb_schema_table_deleted@@Base+0x2cf6>
  4278f6:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  4278fb:	movzx  edx,bx
  4278fe:	cmp    edx,0x3
  427901:	je     427c3e <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  427907:	cmp    edx,0x5
  42790a:	je     427ba2 <__flatcc_fb_coerce_scalar_type@@Base+0x3a2>
  427910:	cmp    edx,0x4
  427913:	jne    427bff <__flatcc_fb_coerce_scalar_type@@Base+0x3ff>
  427919:	mov    rdx,QWORD PTR [rcx]
  42791c:	vcvtsi2sd xmm0,xmm0,rdx
  427921:	vcvttsd2si rbx,xmm0
  427926:	cmp    rdx,rbx
  427929:	jne    427bf2 <__flatcc_fb_coerce_scalar_type@@Base+0x3f2>
  42792f:	jmp    427c96 <__flatcc_fb_coerce_scalar_type@@Base+0x496>
  427934:	movzx  edx,bx
  427937:	cmp    edx,0x5
  42793a:	jne    427acb <__flatcc_fb_coerce_scalar_type@@Base+0x2cb>
  427940:	cmp    QWORD PTR [rcx],0x10000
  427947:	jb     427c3e <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  42794d:	mov    rsi,QWORD PTR [rsi+0x8]
  427951:	lea    rdx,[rip+0x230df]        # 44aa37 <fb_schema_table_deleted@@Base+0x2b07>
  427958:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  42795d:	movzx  edx,bx
  427960:	cmp    edx,0x5
  427963:	jne    427adb <__flatcc_fb_coerce_scalar_type@@Base+0x2db>
  427969:	cmp    QWORD PTR [rcx],0x100
  427970:	jb     427c3e <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  427976:	mov    rsi,QWORD PTR [rsi+0x8]
  42797a:	lea    rdx,[rip+0x2310d]        # 44aa8e <fb_schema_table_deleted@@Base+0x2b5e>
  427981:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  427986:	movzx  edx,bx
  427989:	cmp    edx,0x5
  42798c:	je     427b0b <__flatcc_fb_coerce_scalar_type@@Base+0x30b>
  427992:	cmp    edx,0x4
  427995:	jne    427b62 <__flatcc_fb_coerce_scalar_type@@Base+0x362>
  42799b:	cmp    QWORD PTR [rcx],0xffffffffffff7fff
  4279a2:	jg     427c3e <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  4279a8:	mov    rsi,QWORD PTR [rsi+0x8]
  4279ac:	lea    rdx,[rip+0x231a5]        # 44ab58 <fb_schema_table_deleted@@Base+0x2c28>
  4279b3:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  4279b8:	movzx  edx,bx
  4279bb:	cmp    edx,0x5
  4279be:	jne    427aeb <__flatcc_fb_coerce_scalar_type@@Base+0x2eb>
  4279c4:	cmp    DWORD PTR [rcx+0x4],0x0
  4279c8:	je     427c3e <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  4279ce:	mov    rsi,QWORD PTR [rsi+0x8]
  4279d2:	lea    rdx,[rip+0x23007]        # 44a9e0 <fb_schema_table_deleted@@Base+0x2ab0>
  4279d9:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  4279de:	movzx  edx,bx
  4279e1:	cmp    edx,0x4
  4279e4:	je     427c3e <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  4279ea:	cmp    edx,0x5
  4279ed:	jne    427b72 <__flatcc_fb_coerce_scalar_type@@Base+0x372>
  4279f3:	cmp    QWORD PTR [rcx],0x0
  4279f7:	jns    427b57 <__flatcc_fb_coerce_scalar_type@@Base+0x357>
  4279fd:	mov    rsi,QWORD PTR [rsi+0x8]
  427a01:	lea    rdx,[rip+0x230a3]        # 44aaab <fb_schema_table_deleted@@Base+0x2b7b>
  427a08:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  427a0d:	movzx  edx,bx
  427a10:	cmp    edx,0x5
  427a13:	je     427b24 <__flatcc_fb_coerce_scalar_type@@Base+0x324>
  427a19:	cmp    edx,0x4
  427a1c:	jne    427b82 <__flatcc_fb_coerce_scalar_type@@Base+0x382>
  427a22:	movabs rdx,0xffffffff7fffffff
  427a2c:	cmp    QWORD PTR [rcx],rdx
  427a2f:	jg     427c3e <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  427a35:	mov    rsi,QWORD PTR [rsi+0x8]
  427a39:	lea    rdx,[rip+0x230b4]        # 44aaf4 <fb_schema_table_deleted@@Base+0x2bc4>
  427a40:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  427a45:	movzx  edx,bx
  427a48:	cmp    edx,0x5
  427a4b:	je     427b3e <__flatcc_fb_coerce_scalar_type@@Base+0x33e>
  427a51:	cmp    edx,0x4
  427a54:	jne    427b92 <__flatcc_fb_coerce_scalar_type@@Base+0x392>
  427a5a:	cmp    QWORD PTR [rcx],0xffffffffffffff7f
  427a61:	jg     427c3e <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  427a67:	mov    rsi,QWORD PTR [rsi+0x8]
  427a6b:	lea    rdx,[rip+0x23150]        # 44abc2 <fb_schema_table_deleted@@Base+0x2c92>
  427a72:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  427a77:	movzx  edx,bx
  427a7a:	cmp    edx,0x3
  427a7d:	je     427c3e <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  427a83:	cmp    edx,0x5
  427a86:	je     427c0c <__flatcc_fb_coerce_scalar_type@@Base+0x40c>
  427a8c:	cmp    edx,0x4
  427a8f:	jne    427c1b <__flatcc_fb_coerce_scalar_type@@Base+0x41b>
  427a95:	mov    rdx,QWORD PTR [rcx]
  427a98:	vcvtsi2ss xmm0,xmm0,rdx
  427a9d:	vcvttss2si rbx,xmm0
  427aa2:	cmp    rdx,rbx
  427aa5:	je     427c92 <__flatcc_fb_coerce_scalar_type@@Base+0x492>
  427aab:	mov    rsi,QWORD PTR [rsi+0x8]
  427aaf:	lea    rdx,[rip+0x2324d]        # 44ad03 <fb_schema_table_deleted@@Base+0x2dd3>
  427ab6:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  427abb:	mov    rsi,QWORD PTR [rsi+0x8]
  427abf:	lea    rdx,[rip+0x232a4]        # 44ad6a <fb_schema_table_deleted@@Base+0x2e3a>
  427ac6:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  427acb:	mov    rsi,QWORD PTR [rsi+0x8]
  427acf:	lea    rdx,[rip+0x22f27]        # 44a9fd <fb_schema_table_deleted@@Base+0x2acd>
  427ad6:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  427adb:	mov    rsi,QWORD PTR [rsi+0x8]
  427adf:	lea    rdx,[rip+0x22f70]        # 44aa56 <fb_schema_table_deleted@@Base+0x2b26>
  427ae6:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  427aeb:	mov    rsi,QWORD PTR [rsi+0x8]
  427aef:	lea    rdx,[rip+0x22eb2]        # 44a9a8 <fb_schema_table_deleted@@Base+0x2a78>
  427af6:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  427afb:	mov    rsi,QWORD PTR [rsi+0x8]
  427aff:	lea    rdx,[rip+0x2315e]        # 44ac64 <fb_schema_table_deleted@@Base+0x2d34>
  427b06:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  427b0b:	cmp    QWORD PTR [rcx],0x8000
  427b12:	jl     427b57 <__flatcc_fb_coerce_scalar_type@@Base+0x357>
  427b14:	mov    rsi,QWORD PTR [rsi+0x8]
  427b18:	lea    rdx,[rip+0x23057]        # 44ab76 <fb_schema_table_deleted@@Base+0x2c46>
  427b1f:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  427b24:	mov    edx,0x80000000
  427b29:	cmp    QWORD PTR [rcx],rdx
  427b2c:	jl     427b57 <__flatcc_fb_coerce_scalar_type@@Base+0x357>
  427b2e:	mov    rsi,QWORD PTR [rsi+0x8]
  427b32:	lea    rdx,[rip+0x22fd7]        # 44ab10 <fb_schema_table_deleted@@Base+0x2be0>
  427b39:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  427b3e:	cmp    QWORD PTR [rcx],0x80
  427b45:	jl     427b57 <__flatcc_fb_coerce_scalar_type@@Base+0x357>
  427b47:	mov    rsi,QWORD PTR [rsi+0x8]
  427b4b:	lea    rdx,[rip+0x2308c]        # 44abde <fb_schema_table_deleted@@Base+0x2cae>
  427b52:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  427b57:	mov    WORD PTR [r14],0x4
  427b5d:	jmp    427c3e <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  427b62:	mov    rsi,QWORD PTR [rsi+0x8]
  427b66:	lea    rdx,[rip+0x23026]        # 44ab93 <fb_schema_table_deleted@@Base+0x2c63>
  427b6d:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  427b72:	mov    rsi,QWORD PTR [rsi+0x8]
  427b76:	lea    rdx,[rip+0x22f4d]        # 44aaca <fb_schema_table_deleted@@Base+0x2b9a>
  427b7d:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  427b82:	mov    rsi,QWORD PTR [rsi+0x8]
  427b86:	lea    rdx,[rip+0x22f9e]        # 44ab2b <fb_schema_table_deleted@@Base+0x2bfb>
  427b8d:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  427b92:	mov    rsi,QWORD PTR [rsi+0x8]
  427b96:	lea    rdx,[rip+0x2305c]        # 44abf9 <fb_schema_table_deleted@@Base+0x2cc9>
  427b9d:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  427ba2:	mov    r9,QWORD PTR [rcx]
  427ba5:	vmovq  xmm0,r9
  427baa:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x22c8e]        # 44a840 <fb_schema_table_deleted@@Base+0x2910>
  427bb2:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x22c96]        # 44a850 <fb_schema_table_deleted@@Base+0x2920>
  427bba:	vhaddpd xmm0,xmm0,xmm0
  427bbe:	vmovsd xmm1,QWORD PTR [rip+0x22c9a]        # 44a860 <fb_schema_table_deleted@@Base+0x2930>
  427bc6:	vsubsd xmm2,xmm0,xmm1
  427bca:	vcvttsd2si r8,xmm2
  427bcf:	movabs rbx,0x8000000000000000
  427bd9:	xor    rbx,r8
  427bdc:	vcvttsd2si rdx,xmm0
  427be1:	vucomisd xmm0,xmm1
  427be5:	cmovae rdx,rbx
  427be9:	cmp    r9,rdx
  427bec:	je     427c96 <__flatcc_fb_coerce_scalar_type@@Base+0x496>
  427bf2:	mov    rsi,QWORD PTR [rsi+0x8]
  427bf6:	lea    rdx,[rip+0x2309d]        # 44ac9a <fb_schema_table_deleted@@Base+0x2d6a>
  427bfd:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  427bff:	mov    rsi,QWORD PTR [rsi+0x8]
  427c03:	lea    rdx,[rip+0x230c0]        # 44acca <fb_schema_table_deleted@@Base+0x2d9a>
  427c0a:	jmp    427c26 <__flatcc_fb_coerce_scalar_type@@Base+0x426>
  427c0c:	mov    r9,QWORD PTR [rcx]
  427c0f:	test   r9,r9
  427c12:	js     427c46 <__flatcc_fb_coerce_scalar_type@@Base+0x446>
  427c14:	vcvtsi2ss xmm0,xmm0,r9
  427c19:	jmp    427c5e <__flatcc_fb_coerce_scalar_type@@Base+0x45e>
  427c1b:	mov    rsi,QWORD PTR [rsi+0x8]
  427c1f:	lea    rdx,[rip+0x2310c]        # 44ad32 <fb_schema_table_deleted@@Base+0x2e02>
  427c26:	xor    ecx,ecx
  427c28:	xor    r8d,r8d
  427c2b:	xor    r9d,r9d
  427c2e:	call   41c7d0 <__flatcc_error_report@@Base>
  427c33:	mov    WORD PTR [r14],0x1
  427c39:	mov    eax,0xffffffff
  427c3e:	add    rsp,0x8
  427c42:	pop    rbx
  427c43:	pop    r14
  427c45:	ret    
  427c46:	mov    r8,r9
  427c49:	shr    r8,1
  427c4c:	mov    edx,r9d
  427c4f:	and    edx,0x1
  427c52:	or     rdx,r8
  427c55:	vcvtsi2ss xmm0,xmm0,rdx
  427c5a:	vaddss xmm0,xmm0,xmm0
  427c5e:	vmovss xmm1,DWORD PTR [rip+0x22bce]        # 44a834 <fb_schema_table_deleted@@Base+0x2904>
  427c66:	vsubss xmm2,xmm0,xmm1
  427c6a:	vcvttss2si r8,xmm2
  427c6f:	movabs rdx,0x8000000000000000
  427c79:	xor    rdx,r8
  427c7c:	vcvttss2si rbx,xmm0
  427c81:	vucomiss xmm0,xmm1
  427c85:	cmovae rbx,rdx
  427c89:	cmp    r9,rbx
  427c8c:	jne    427aab <__flatcc_fb_coerce_scalar_type@@Base+0x2ab>
  427c92:	vcvtss2sd xmm0,xmm0,xmm0
  427c96:	vmovsd QWORD PTR [rcx],xmm0
  427c9a:	mov    WORD PTR [rcx+0x10],0x3
  427ca0:	jmp    427c3e <__flatcc_fb_coerce_scalar_type@@Base+0x43e>
  427ca2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427cac:	nop    DWORD PTR [rax+0x0]

0000000000427cb0 <flatcc_builder_default_alloc@@Base>:
  427cb0:	push   rbp
  427cb1:	push   r15
  427cb3:	push   r14
  427cb5:	push   r12
  427cb7:	push   rbx
  427cb8:	mov    rbx,rsi
  427cbb:	test   rdx,rdx
  427cbe:	je     427ce9 <flatcc_builder_default_alloc@@Base+0x39>
  427cc0:	mov    r14d,ecx
  427cc3:	add    r8d,0xffffffff
  427cc7:	cmp    r8d,0x6
  427ccb:	ja     427d07 <flatcc_builder_default_alloc@@Base+0x57>
  427ccd:	mov    eax,0x100
  427cd2:	lea    rcx,[rip+0x230a7]        # 44ad80 <fb_schema_table_deleted@@Base+0x2e50>
  427cd9:	movsxd rsi,DWORD PTR [rcx+r8*4]
  427cdd:	add    rsi,rcx
  427ce0:	jmp    rsi
  427ce2:	mov    eax,0x120
  427ce7:	jmp    427d20 <flatcc_builder_default_alloc@@Base+0x70>
  427ce9:	mov    rdi,QWORD PTR [rbx]
  427cec:	xor    r15d,r15d
  427cef:	test   rdi,rdi
  427cf2:	je     427d80 <flatcc_builder_default_alloc@@Base+0xd0>
  427cf8:	call   406040 <free@plt>
  427cfd:	vxorps xmm0,xmm0,xmm0
  427d01:	vmovups XMMWORD PTR [rbx],xmm0
  427d05:	jmp    427d80 <flatcc_builder_default_alloc@@Base+0xd0>
  427d07:	mov    eax,0x20
  427d0c:	jmp    427d20 <flatcc_builder_default_alloc@@Base+0x70>
  427d0e:	mov    rax,rdx
  427d11:	jmp    427d20 <flatcc_builder_default_alloc@@Base+0x70>
  427d13:	mov    eax,0x40
  427d18:	nop    DWORD PTR [rax+rax*1+0x0]
  427d20:	mov    rbp,rax
  427d23:	lea    rax,[rax+rax*1]
  427d27:	cmp    rbp,rdx
  427d2a:	jb     427d20 <flatcc_builder_default_alloc@@Base+0x70>
  427d2c:	mov    rax,QWORD PTR [rbx+0x8]
  427d30:	xor    r15d,r15d
  427d33:	cmp    rax,rdx
  427d36:	jb     427d40 <flatcc_builder_default_alloc@@Base+0x90>
  427d38:	shr    rax,1
  427d3b:	cmp    rax,rbp
  427d3e:	jae    427d80 <flatcc_builder_default_alloc@@Base+0xd0>
  427d40:	mov    rdi,QWORD PTR [rbx]
  427d43:	mov    rsi,rbp
  427d46:	call   4061d0 <realloc@plt>
  427d4b:	test   rax,rax
  427d4e:	je     427d7a <flatcc_builder_default_alloc@@Base+0xca>
  427d50:	mov    r12,rax
  427d53:	test   r14d,r14d
  427d56:	je     427d71 <flatcc_builder_default_alloc@@Base+0xc1>
  427d58:	mov    rax,QWORD PTR [rbx+0x8]
  427d5c:	mov    rdx,rbp
  427d5f:	sub    rdx,rax
  427d62:	jbe    427d71 <flatcc_builder_default_alloc@@Base+0xc1>
  427d64:	mov    rdi,r12
  427d67:	add    rdi,rax
  427d6a:	xor    esi,esi
  427d6c:	call   406110 <memset@plt>
  427d71:	mov    QWORD PTR [rbx],r12
  427d74:	mov    QWORD PTR [rbx+0x8],rbp
  427d78:	jmp    427d80 <flatcc_builder_default_alloc@@Base+0xd0>
  427d7a:	mov    r15d,0xffffffff
  427d80:	mov    eax,r15d
  427d83:	pop    rbx
  427d84:	pop    r12
  427d86:	pop    r14
  427d88:	pop    r15
  427d8a:	pop    rbp
  427d8b:	ret    
  427d8c:	nop    DWORD PTR [rax+0x0]

0000000000427d90 <flatcc_builder_flush_vtable_cache@@Base>:
  427d90:	cmp    QWORD PTR [rdi+0xd8],0x0
  427d98:	je     427dc5 <flatcc_builder_flush_vtable_cache@@Base+0x35>
  427d9a:	push   rbx
  427d9b:	mov    rbx,rdi
  427d9e:	mov    rdi,QWORD PTR [rdi+0xa8]
  427da5:	mov    rdx,QWORD PTR [rbx+0xb0]
  427dac:	xor    esi,esi
  427dae:	call   406110 <memset@plt>
  427db3:	movabs rax,0x1000000000
  427dbd:	mov    QWORD PTR [rbx+0xe0],rax
  427dc4:	pop    rbx
  427dc5:	ret    
  427dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000427dd0 <flatcc_builder_custom_init@@Base>:
  427dd0:	vxorps xmm0,xmm0,xmm0
  427dd4:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  427ddc:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  427de4:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  427dec:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  427df4:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  427dfc:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  427e04:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  427e0c:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  427e14:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  427e19:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  427e1e:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  427e23:	vmovups YMMWORD PTR [rdi],ymm0
  427e27:	mov    QWORD PTR [rdi+0x180],0x0
  427e32:	test   rsi,rsi
  427e35:	je     427e59 <flatcc_builder_custom_init@@Base+0x89>
  427e37:	test   rcx,rcx
  427e3a:	jne    427e43 <flatcc_builder_custom_init@@Base+0x73>
  427e3c:	lea    rcx,[rip+0xfffffffffffffe6d]        # 427cb0 <flatcc_builder_default_alloc@@Base>
  427e43:	mov    QWORD PTR [rdi+0x40],r8
  427e47:	mov    QWORD PTR [rdi+0x50],rcx
  427e4b:	mov    QWORD PTR [rdi+0x38],rdx
  427e4f:	mov    QWORD PTR [rdi+0x48],rsi
  427e53:	xor    eax,eax
  427e55:	vzeroupper 
  427e58:	ret    
  427e59:	mov    DWORD PTR [rdi+0x128],0x1
  427e63:	lea    rdx,[rdi+0x130]
  427e6a:	lea    rsi,[rip+0x4acf]        # 42c940 <flatcc_emitter@@Base>
  427e71:	test   rcx,rcx
  427e74:	je     427e3c <flatcc_builder_custom_init@@Base+0x6c>
  427e76:	jmp    427e43 <flatcc_builder_custom_init@@Base+0x73>
  427e78:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000427e80 <flatcc_builder_init@@Base>:
  427e80:	vxorps xmm0,xmm0,xmm0
  427e84:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  427e8c:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  427e91:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  427e96:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  427e9e:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  427ea6:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  427eae:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  427eb6:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  427ebe:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  427ec6:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  427ece:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  427ed3:	vmovups YMMWORD PTR [rdi],ymm0
  427ed7:	mov    QWORD PTR [rdi+0x180],0x0
  427ee2:	mov    DWORD PTR [rdi+0x128],0x1
  427eec:	lea    rax,[rdi+0x130]
  427ef3:	mov    QWORD PTR [rdi+0x40],0x0
  427efb:	lea    rcx,[rip+0xfffffffffffffdae]        # 427cb0 <flatcc_builder_default_alloc@@Base>
  427f02:	mov    QWORD PTR [rdi+0x50],rcx
  427f06:	mov    QWORD PTR [rdi+0x38],rax
  427f0a:	lea    rax,[rip+0x4a2f]        # 42c940 <flatcc_emitter@@Base>
  427f11:	mov    QWORD PTR [rdi+0x48],rax
  427f15:	xor    eax,eax
  427f17:	vzeroupper 
  427f1a:	ret    
  427f1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000427f20 <flatcc_builder_custom_reset@@Base>:
  427f20:	push   rbp
  427f21:	push   r15
  427f23:	push   r14
  427f25:	push   r12
  427f27:	push   rbx
  427f28:	mov    r15d,edx
  427f2b:	mov    r14d,esi
  427f2e:	mov    r12,rdi
  427f31:	lea    rbp,[rdi+0x58]
  427f35:	xor    ebx,ebx
  427f37:	nop    WORD PTR [rax+rax*1+0x0]
  427f40:	mov    rdi,QWORD PTR [rbp+0x0]
  427f44:	test   rdi,rdi
  427f47:	je     427f90 <flatcc_builder_custom_reset@@Base+0x70>
  427f49:	test   r15d,r15d
  427f4c:	je     427f7a <flatcc_builder_custom_reset@@Base+0x5a>
  427f4e:	cmp    rbx,0x5
  427f52:	je     427f7a <flatcc_builder_custom_reset@@Base+0x5a>
  427f54:	mov    rdi,QWORD PTR [r12+0x40]
  427f59:	mov    edx,0x1
  427f5e:	mov    ecx,0x1
  427f63:	mov    rsi,rbp
  427f66:	mov    r8d,ebx
  427f69:	call   QWORD PTR [r12+0x50]
  427f6e:	test   eax,eax
  427f70:	jne    428050 <flatcc_builder_custom_reset@@Base+0x130>
  427f76:	mov    rdi,QWORD PTR [rbp+0x0]
  427f7a:	mov    rdx,QWORD PTR [rbp+0x8]
  427f7e:	xor    esi,esi
  427f80:	call   406110 <memset@plt>
  427f85:	jmp    427f9b <flatcc_builder_custom_reset@@Base+0x7b>
  427f87:	nop    WORD PTR [rax+rax*1+0x0]
  427f90:	cmp    QWORD PTR [rbp+0x8],0x0
  427f95:	jne    428060 <flatcc_builder_custom_reset@@Base+0x140>
  427f9b:	add    rbx,0x1
  427f9f:	add    rbp,0x10
  427fa3:	cmp    rbx,0x8
  427fa7:	jb     427f40 <flatcc_builder_custom_reset@@Base+0x20>
  427fa9:	mov    DWORD PTR [r12+0xe0],0x0
  427fb5:	cmp    DWORD PTR [r12+0xe4],0x0
  427fbe:	je     427fcc <flatcc_builder_custom_reset@@Base+0xac>
  427fc0:	mov    DWORD PTR [r12+0xe4],0x10
  427fcc:	mov    WORD PTR [r12+0xe8],0x0
  427fd7:	mov    QWORD PTR [r12+0xf0],0x0
  427fe3:	mov    QWORD PTR [r12+0x20],0x0
  427fec:	vxorps xmm0,xmm0,xmm0
  427ff0:	vmovups XMMWORD PTR [r12+0xfc],xmm0
  427ffa:	mov    rax,QWORD PTR [r12+0x58]
  427fff:	mov    rcx,QWORD PTR [r12+0x68]
  428004:	mov    QWORD PTR [r12+0x18],rcx
  428009:	mov    rcx,QWORD PTR [r12+0x88]
  428011:	mov    QWORD PTR [r12],rcx
  428015:	mov    QWORD PTR [r12+0x8],rax
  42801a:	mov    QWORD PTR [r12+0x30],0x0
  428023:	test   r14d,r14d
  428026:	je     428032 <flatcc_builder_custom_reset@@Base+0x112>
  428028:	vmovups XMMWORD PTR [r12+0x118],xmm0
  428032:	xor    ebx,ebx
  428034:	cmp    DWORD PTR [r12+0x128],0x0
  42803d:	je     428055 <flatcc_builder_custom_reset@@Base+0x135>
  42803f:	add    r12,0x130
  428046:	mov    rdi,r12
  428049:	call   42c7c0 <flatcc_emitter_reset@@Base>
  42804e:	jmp    428055 <flatcc_builder_custom_reset@@Base+0x135>
  428050:	mov    ebx,0xffffffff
  428055:	mov    eax,ebx
  428057:	pop    rbx
  428058:	pop    r12
  42805a:	pop    r14
  42805c:	pop    r15
  42805e:	pop    rbp
  42805f:	ret    
  428060:	lea    rdi,[rip+0x22f69]        # 44afd0 <flatcc_builder_padding_base@@Base+0x230>
  428067:	lea    rsi,[rip+0x22f74]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42806e:	lea    rcx,[rip+0x22fcd]        # 44b042 <flatcc_builder_padding_base@@Base+0x2a2>
  428075:	mov    edx,0x1b2
  42807a:	call   406100 <__assert_fail@plt>
  42807f:	nop

0000000000428080 <flatcc_builder_reset@@Base>:
  428080:	push   rbx
  428081:	mov    rbx,rdi
  428084:	mov    rdi,QWORD PTR [rdi+0x58]
  428088:	mov    rdx,QWORD PTR [rbx+0x60]
  42808c:	test   rdi,rdi
  42808f:	je     42809a <flatcc_builder_reset@@Base+0x1a>
  428091:	xor    esi,esi
  428093:	call   406110 <memset@plt>
  428098:	jmp    4280a3 <flatcc_builder_reset@@Base+0x23>
  42809a:	test   rdx,rdx
  42809d:	jne    428220 <flatcc_builder_reset@@Base+0x1a0>
  4280a3:	mov    rdi,QWORD PTR [rbx+0x68]
  4280a7:	mov    rdx,QWORD PTR [rbx+0x70]
  4280ab:	test   rdi,rdi
  4280ae:	je     4280b9 <flatcc_builder_reset@@Base+0x39>
  4280b0:	xor    esi,esi
  4280b2:	call   406110 <memset@plt>
  4280b7:	jmp    4280c2 <flatcc_builder_reset@@Base+0x42>
  4280b9:	test   rdx,rdx
  4280bc:	jne    428220 <flatcc_builder_reset@@Base+0x1a0>
  4280c2:	mov    rdi,QWORD PTR [rbx+0x78]
  4280c6:	mov    rdx,QWORD PTR [rbx+0x80]
  4280cd:	test   rdi,rdi
  4280d0:	je     4280db <flatcc_builder_reset@@Base+0x5b>
  4280d2:	xor    esi,esi
  4280d4:	call   406110 <memset@plt>
  4280d9:	jmp    4280e4 <flatcc_builder_reset@@Base+0x64>
  4280db:	test   rdx,rdx
  4280de:	jne    428220 <flatcc_builder_reset@@Base+0x1a0>
  4280e4:	mov    rdi,QWORD PTR [rbx+0x88]
  4280eb:	mov    rdx,QWORD PTR [rbx+0x90]
  4280f2:	test   rdi,rdi
  4280f5:	je     428100 <flatcc_builder_reset@@Base+0x80>
  4280f7:	xor    esi,esi
  4280f9:	call   406110 <memset@plt>
  4280fe:	jmp    428109 <flatcc_builder_reset@@Base+0x89>
  428100:	test   rdx,rdx
  428103:	jne    428220 <flatcc_builder_reset@@Base+0x1a0>
  428109:	mov    rdi,QWORD PTR [rbx+0x98]
  428110:	mov    rdx,QWORD PTR [rbx+0xa0]
  428117:	test   rdi,rdi
  42811a:	je     428125 <flatcc_builder_reset@@Base+0xa5>
  42811c:	xor    esi,esi
  42811e:	call   406110 <memset@plt>
  428123:	jmp    42812e <flatcc_builder_reset@@Base+0xae>
  428125:	test   rdx,rdx
  428128:	jne    428220 <flatcc_builder_reset@@Base+0x1a0>
  42812e:	mov    rdi,QWORD PTR [rbx+0xa8]
  428135:	mov    rdx,QWORD PTR [rbx+0xb0]
  42813c:	test   rdi,rdi
  42813f:	je     42814a <flatcc_builder_reset@@Base+0xca>
  428141:	xor    esi,esi
  428143:	call   406110 <memset@plt>
  428148:	jmp    428153 <flatcc_builder_reset@@Base+0xd3>
  42814a:	test   rdx,rdx
  42814d:	jne    428220 <flatcc_builder_reset@@Base+0x1a0>
  428153:	mov    rdi,QWORD PTR [rbx+0xb8]
  42815a:	mov    rdx,QWORD PTR [rbx+0xc0]
  428161:	test   rdi,rdi
  428164:	je     42816f <flatcc_builder_reset@@Base+0xef>
  428166:	xor    esi,esi
  428168:	call   406110 <memset@plt>
  42816d:	jmp    428178 <flatcc_builder_reset@@Base+0xf8>
  42816f:	test   rdx,rdx
  428172:	jne    428220 <flatcc_builder_reset@@Base+0x1a0>
  428178:	mov    rdi,QWORD PTR [rbx+0xc8]
  42817f:	mov    rdx,QWORD PTR [rbx+0xd0]
  428186:	test   rdi,rdi
  428189:	je     428194 <flatcc_builder_reset@@Base+0x114>
  42818b:	xor    esi,esi
  42818d:	call   406110 <memset@plt>
  428192:	jmp    42819d <flatcc_builder_reset@@Base+0x11d>
  428194:	test   rdx,rdx
  428197:	jne    428220 <flatcc_builder_reset@@Base+0x1a0>
  42819d:	mov    DWORD PTR [rbx+0xe0],0x0
  4281a7:	cmp    DWORD PTR [rbx+0xe4],0x0
  4281ae:	je     4281ba <flatcc_builder_reset@@Base+0x13a>
  4281b0:	mov    DWORD PTR [rbx+0xe4],0x10
  4281ba:	mov    WORD PTR [rbx+0xe8],0x0
  4281c3:	mov    QWORD PTR [rbx+0xf0],0x0
  4281ce:	mov    QWORD PTR [rbx+0x20],0x0
  4281d6:	vxorps xmm0,xmm0,xmm0
  4281da:	vmovups XMMWORD PTR [rbx+0xfc],xmm0
  4281e2:	mov    rax,QWORD PTR [rbx+0x58]
  4281e6:	mov    rcx,QWORD PTR [rbx+0x68]
  4281ea:	mov    QWORD PTR [rbx+0x18],rcx
  4281ee:	mov    rcx,QWORD PTR [rbx+0x88]
  4281f5:	mov    QWORD PTR [rbx],rcx
  4281f8:	mov    QWORD PTR [rbx+0x8],rax
  4281fc:	mov    QWORD PTR [rbx+0x30],0x0
  428204:	cmp    DWORD PTR [rbx+0x128],0x0
  42820b:	je     42821c <flatcc_builder_reset@@Base+0x19c>
  42820d:	add    rbx,0x130
  428214:	mov    rdi,rbx
  428217:	call   42c7c0 <flatcc_emitter_reset@@Base>
  42821c:	xor    eax,eax
  42821e:	pop    rbx
  42821f:	ret    
  428220:	lea    rdi,[rip+0x22da9]        # 44afd0 <flatcc_builder_padding_base@@Base+0x230>
  428227:	lea    rsi,[rip+0x22db4]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42822e:	lea    rcx,[rip+0x22e0d]        # 44b042 <flatcc_builder_padding_base@@Base+0x2a2>
  428235:	mov    edx,0x1b2
  42823a:	call   406100 <__assert_fail@plt>
  42823f:	nop

0000000000428240 <flatcc_builder_clear@@Base>:
  428240:	push   rbx
  428241:	mov    rbx,rdi
  428244:	lea    rsi,[rdi+0x58]
  428248:	mov    rdi,QWORD PTR [rdi+0x40]
  42824c:	xor    edx,edx
  42824e:	xor    ecx,ecx
  428250:	xor    r8d,r8d
  428253:	call   QWORD PTR [rbx+0x50]
  428256:	lea    rsi,[rbx+0x68]
  42825a:	mov    rdi,QWORD PTR [rbx+0x40]
  42825e:	xor    edx,edx
  428260:	xor    ecx,ecx
  428262:	mov    r8d,0x1
  428268:	call   QWORD PTR [rbx+0x50]
  42826b:	lea    rsi,[rbx+0x78]
  42826f:	mov    rdi,QWORD PTR [rbx+0x40]
  428273:	xor    edx,edx
  428275:	xor    ecx,ecx
  428277:	mov    r8d,0x2
  42827d:	call   QWORD PTR [rbx+0x50]
  428280:	lea    rsi,[rbx+0x88]
  428287:	mov    rdi,QWORD PTR [rbx+0x40]
  42828b:	xor    edx,edx
  42828d:	xor    ecx,ecx
  42828f:	mov    r8d,0x3
  428295:	call   QWORD PTR [rbx+0x50]
  428298:	lea    rsi,[rbx+0x98]
  42829f:	mov    rdi,QWORD PTR [rbx+0x40]
  4282a3:	xor    edx,edx
  4282a5:	xor    ecx,ecx
  4282a7:	mov    r8d,0x4
  4282ad:	call   QWORD PTR [rbx+0x50]
  4282b0:	lea    rsi,[rbx+0xa8]
  4282b7:	mov    rdi,QWORD PTR [rbx+0x40]
  4282bb:	xor    edx,edx
  4282bd:	xor    ecx,ecx
  4282bf:	mov    r8d,0x5
  4282c5:	call   QWORD PTR [rbx+0x50]
  4282c8:	lea    rsi,[rbx+0xb8]
  4282cf:	mov    rdi,QWORD PTR [rbx+0x40]
  4282d3:	xor    edx,edx
  4282d5:	xor    ecx,ecx
  4282d7:	mov    r8d,0x6
  4282dd:	call   QWORD PTR [rbx+0x50]
  4282e0:	lea    rsi,[rbx+0xc8]
  4282e7:	mov    rdi,QWORD PTR [rbx+0x40]
  4282eb:	xor    edx,edx
  4282ed:	xor    ecx,ecx
  4282ef:	mov    r8d,0x7
  4282f5:	call   QWORD PTR [rbx+0x50]
  4282f8:	cmp    DWORD PTR [rbx+0x128],0x0
  4282ff:	je     42830d <flatcc_builder_clear@@Base+0xcd>
  428301:	lea    rdi,[rbx+0x130]
  428308:	call   42c8c0 <flatcc_emitter_clear@@Base>
  42830d:	vxorps xmm0,xmm0,xmm0
  428311:	vmovups YMMWORD PTR [rbx+0x160],ymm0
  428319:	vmovups YMMWORD PTR [rbx+0x140],ymm0
  428321:	vmovups YMMWORD PTR [rbx+0x120],ymm0
  428329:	vmovups YMMWORD PTR [rbx+0x100],ymm0
  428331:	vmovups YMMWORD PTR [rbx+0xe0],ymm0
  428339:	vmovups YMMWORD PTR [rbx+0xc0],ymm0
  428341:	vmovups YMMWORD PTR [rbx+0xa0],ymm0
  428349:	vmovups YMMWORD PTR [rbx+0x80],ymm0
  428351:	vmovups YMMWORD PTR [rbx+0x60],ymm0
  428356:	vmovups YMMWORD PTR [rbx+0x40],ymm0
  42835b:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  428360:	vmovups YMMWORD PTR [rbx],ymm0
  428364:	mov    QWORD PTR [rbx+0x180],0x0
  42836f:	pop    rbx
  428370:	vzeroupper 
  428373:	ret    
  428374:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42837e:	xchg   ax,ax

0000000000428380 <flatcc_builder_enter_user_frame_ptr@@Base>:
  428380:	push   r15
  428382:	push   r14
  428384:	push   r12
  428386:	push   rbx
  428387:	push   rax
  428388:	mov    r14,rsi
  42838b:	mov    r15,rdi
  42838e:	add    r14,0xf
  428392:	and    r14,0xfffffffffffffff8
  428396:	mov    rbx,QWORD PTR [rdi+0x180]
  42839d:	lea    r12,[rdi+0xc8]
  4283a4:	lea    rdx,[rbx+r14*1]
  4283a8:	cmp    rdx,QWORD PTR [rdi+0xd0]
  4283af:	jbe    4283c8 <flatcc_builder_enter_user_frame_ptr@@Base+0x48>
  4283b1:	mov    rdi,QWORD PTR [r15+0x40]
  4283b5:	xor    ecx,ecx
  4283b7:	mov    r8d,0x7
  4283bd:	mov    rsi,r12
  4283c0:	call   QWORD PTR [r15+0x50]
  4283c4:	test   eax,eax
  4283c6:	jne    428418 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
  4283c8:	add    rbx,QWORD PTR [r12]
  4283cc:	je     428407 <flatcc_builder_enter_user_frame_ptr@@Base+0x87>
  4283ce:	xor    esi,esi
  4283d0:	mov    rdi,rbx
  4283d3:	mov    rdx,r14
  4283d6:	call   406110 <memset@plt>
  4283db:	mov    rax,QWORD PTR [r15+0x178]
  4283e2:	mov    QWORD PTR [rbx],rax
  4283e5:	add    rbx,0x8
  4283e9:	mov    rax,QWORD PTR [r15+0x180]
  4283f0:	lea    rcx,[rax+0x8]
  4283f4:	mov    QWORD PTR [r15+0x178],rcx
  4283fb:	add    rax,r14
  4283fe:	mov    QWORD PTR [r15+0x180],rax
  428405:	jmp    428409 <flatcc_builder_enter_user_frame_ptr@@Base+0x89>
  428407:	xor    ebx,ebx
  428409:	mov    rax,rbx
  42840c:	add    rsp,0x8
  428410:	pop    rbx
  428411:	pop    r12
  428413:	pop    r14
  428415:	pop    r15
  428417:	ret    
  428418:	lea    rdi,[rip+0x19760]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  42841f:	lea    rsi,[rip+0x22bbc]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  428426:	lea    rcx,[rip+0x23baf]        # 44bfdc <flatcc_builder_padding_base@@Base+0x123c>
  42842d:	mov    edx,0x134
  428432:	call   406100 <__assert_fail@plt>
  428437:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428440 <flatcc_builder_enter_user_frame@@Base>:
  428440:	push   r15
  428442:	push   r14
  428444:	push   r12
  428446:	push   rbx
  428447:	push   rax
  428448:	mov    r14,rsi
  42844b:	mov    rbx,rdi
  42844e:	add    r14,0xf
  428452:	and    r14,0xfffffffffffffff8
  428456:	mov    r15,QWORD PTR [rdi+0x180]
  42845d:	lea    r12,[rdi+0xc8]
  428464:	lea    rdx,[r15+r14*1]
  428468:	cmp    rdx,QWORD PTR [rdi+0xd0]
  42846f:	jbe    428487 <flatcc_builder_enter_user_frame@@Base+0x47>
  428471:	mov    rdi,QWORD PTR [rbx+0x40]
  428475:	xor    ecx,ecx
  428477:	mov    r8d,0x7
  42847d:	mov    rsi,r12
  428480:	call   QWORD PTR [rbx+0x50]
  428483:	test   eax,eax
  428485:	jne    4284d0 <flatcc_builder_enter_user_frame@@Base+0x90>
  428487:	add    r15,QWORD PTR [r12]
  42848b:	je     4284c2 <flatcc_builder_enter_user_frame@@Base+0x82>
  42848d:	xor    esi,esi
  42848f:	mov    rdi,r15
  428492:	mov    rdx,r14
  428495:	call   406110 <memset@plt>
  42849a:	mov    rax,QWORD PTR [rbx+0x178]
  4284a1:	mov    QWORD PTR [r15],rax
  4284a4:	mov    rcx,QWORD PTR [rbx+0x180]
  4284ab:	lea    rax,[rcx+0x8]
  4284af:	mov    QWORD PTR [rbx+0x178],rax
  4284b6:	add    rcx,r14
  4284b9:	mov    QWORD PTR [rbx+0x180],rcx
  4284c0:	jmp    4284c4 <flatcc_builder_enter_user_frame@@Base+0x84>
  4284c2:	xor    eax,eax
  4284c4:	add    rsp,0x8
  4284c8:	pop    rbx
  4284c9:	pop    r12
  4284cb:	pop    r14
  4284cd:	pop    r15
  4284cf:	ret    
  4284d0:	lea    rdi,[rip+0x196a8]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  4284d7:	lea    rsi,[rip+0x22b04]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  4284de:	lea    rcx,[rip+0x23af7]        # 44bfdc <flatcc_builder_padding_base@@Base+0x123c>
  4284e5:	mov    edx,0x134
  4284ea:	call   406100 <__assert_fail@plt>
  4284ef:	nop

00000000004284f0 <flatcc_builder_exit_user_frame@@Base>:
  4284f0:	mov    rax,QWORD PTR [rdi+0x178]
  4284f7:	test   rax,rax
  4284fa:	je     42851d <flatcc_builder_exit_user_frame@@Base+0x2d>
  4284fc:	mov    rcx,QWORD PTR [rdi+0xc8]
  428503:	mov    edx,eax
  428505:	add    rax,0xfffffffffffffff8
  428509:	mov    QWORD PTR [rdi+0x180],rax
  428510:	mov    rax,QWORD PTR [rcx+rdx*1-0x8]
  428515:	mov    QWORD PTR [rdi+0x178],rax
  42851c:	ret    
  42851d:	push   rax
  42851e:	lea    rdi,[rip+0x22b5b]        # 44b080 <flatcc_builder_padding_base@@Base+0x2e0>
  428525:	lea    rsi,[rip+0x22ab6]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42852c:	lea    rcx,[rip+0x22b66]        # 44b099 <flatcc_builder_padding_base@@Base+0x2f9>
  428533:	mov    edx,0x21e
  428538:	call   406100 <__assert_fail@plt>
  42853d:	nop    DWORD PTR [rax]

0000000000428540 <flatcc_builder_exit_user_frame_at@@Base>:
  428540:	push   rax
  428541:	cmp    QWORD PTR [rdi+0x178],rsi
  428548:	jb     428578 <flatcc_builder_exit_user_frame_at@@Base+0x38>
  42854a:	mov    QWORD PTR [rdi+0x178],rsi
  428551:	test   rsi,rsi
  428554:	je     428597 <flatcc_builder_exit_user_frame_at@@Base+0x57>
  428556:	mov    rax,QWORD PTR [rdi+0xc8]
  42855d:	mov    ecx,esi
  42855f:	add    rsi,0xfffffffffffffff8
  428563:	mov    QWORD PTR [rdi+0x180],rsi
  42856a:	mov    rax,QWORD PTR [rax+rcx*1-0x8]
  42856f:	mov    QWORD PTR [rdi+0x178],rax
  428576:	pop    rcx
  428577:	ret    
  428578:	lea    rdi,[rip+0x22b54]        # 44b0d3 <flatcc_builder_padding_base@@Base+0x333>
  42857f:	lea    rsi,[rip+0x22a5c]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  428586:	lea    rcx,[rip+0x22b65]        # 44b0f2 <flatcc_builder_padding_base@@Base+0x352>
  42858d:	mov    edx,0x227
  428592:	call   406100 <__assert_fail@plt>
  428597:	lea    rdi,[rip+0x22ae2]        # 44b080 <flatcc_builder_padding_base@@Base+0x2e0>
  42859e:	lea    rsi,[rip+0x22a3d]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  4285a5:	lea    rcx,[rip+0x22aed]        # 44b099 <flatcc_builder_padding_base@@Base+0x2f9>
  4285ac:	mov    edx,0x21e
  4285b1:	call   406100 <__assert_fail@plt>
  4285b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004285c0 <flatcc_builder_get_current_user_frame@@Base>:
  4285c0:	mov    rax,QWORD PTR [rdi+0x178]
  4285c7:	ret    
  4285c8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004285d0 <flatcc_builder_get_user_frame_ptr@@Base>:
  4285d0:	mov    eax,esi
  4285d2:	add    rax,QWORD PTR [rdi+0xc8]
  4285d9:	ret    
  4285da:	nop    WORD PTR [rax+rax*1+0x0]

00000000004285e0 <flatcc_builder_embed_buffer@@Base>:
  4285e0:	push   rbp
  4285e1:	push   r15
  4285e3:	push   r14
  4285e5:	push   r12
  4285e7:	push   rbx
  4285e8:	sub    rsp,0xa0
  4285ef:	mov    ebx,r9d
  4285f2:	mov    rbp,rcx
  4285f5:	mov    r15,rdx
  4285f8:	mov    eax,esi
  4285fa:	mov    r12,rdi
  4285fd:	mov    WORD PTR [rsp+0xa],r8w
  428603:	xor    ecx,ecx
  428605:	cmp    DWORD PTR [rdi+0x100],0x0
  42860c:	setne  cl
  42860f:	lea    rsi,[rsp+0xa]
  428614:	mov    edx,eax
  428616:	call   428780 <flatcc_builder_embed_buffer@@Base+0x1a0>
  42861b:	and    ebx,0x2
  42861e:	movzx  eax,WORD PTR [rsp+0xa]
  428623:	mov    r14d,DWORD PTR [r12+0xf0]
  42862b:	lea    ecx,[rbp+rbx*2+0x0]
  42862f:	mov    edx,r14d
  428632:	sub    edx,ecx
  428634:	add    eax,0xffffffff
  428637:	and    eax,edx
  428639:	lea    ecx,[rax+rbp*1]
  42863c:	mov    DWORD PTR [rsp+0xc],ecx
  428640:	mov    QWORD PTR [rsp+0x10],0x0
  428649:	mov    DWORD PTR [rsp+0x18],0x0
  428651:	cmp    DWORD PTR [r12+0x100],0x0
  42865a:	je     42872e <flatcc_builder_embed_buffer@@Base+0x14e>
  428660:	mov    QWORD PTR [rsp+0x10],0x4
  428669:	lea    rcx,[rsp+0xc]
  42866e:	mov    QWORD PTR [rsp+0x20],rcx
  428673:	mov    QWORD PTR [rsp+0x28],0x4
  42867c:	mov    DWORD PTR [rsp+0x18],0x1
  428684:	mov    edx,0x1
  428689:	mov    r8d,0x4
  42868f:	test   rbp,rbp
  428692:	je     4286b3 <flatcc_builder_embed_buffer@@Base+0xd3>
  428694:	add    r8,rbp
  428697:	mov    QWORD PTR [rsp+0x10],r8
  42869c:	mov    ecx,edx
  42869e:	shl    rcx,0x4
  4286a2:	mov    QWORD PTR [rsp+rcx*1+0x20],r15
  4286a7:	mov    QWORD PTR [rsp+rcx*1+0x28],rbp
  4286ac:	add    edx,0x1
  4286af:	mov    DWORD PTR [rsp+0x18],edx
  4286b3:	test   eax,eax
  4286b5:	je     4286df <flatcc_builder_embed_buffer@@Base+0xff>
  4286b7:	mov    eax,eax
  4286b9:	add    r8,rax
  4286bc:	mov    QWORD PTR [rsp+0x10],r8
  4286c1:	mov    ecx,edx
  4286c3:	shl    rcx,0x4
  4286c7:	lea    rsi,[rip+0x226d2]        # 44ada0 <flatcc_builder_padding_base@@Base>
  4286ce:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  4286d3:	mov    QWORD PTR [rsp+rcx*1+0x28],rax
  4286d8:	add    edx,0x1
  4286db:	mov    DWORD PTR [rsp+0x18],edx
  4286df:	cmp    r8,0x11
  4286e3:	setb   al
  4286e6:	lea    rcx,[r8-0x10]
  4286ea:	shr    rcx,0x20
  4286ee:	sete   cl
  4286f1:	test   r8d,r8d
  4286f4:	jle    428741 <flatcc_builder_embed_buffer@@Base+0x161>
  4286f6:	or     al,cl
  4286f8:	je     428741 <flatcc_builder_embed_buffer@@Base+0x161>
  4286fa:	sub    r14d,r8d
  4286fd:	mov    rdi,QWORD PTR [r12+0x38]
  428702:	lea    rsi,[rsp+0x20]
  428707:	mov    ecx,r14d
  42870a:	call   QWORD PTR [r12+0x48]
  42870f:	test   eax,eax
  428711:	jne    428760 <flatcc_builder_embed_buffer@@Base+0x180>
  428713:	mov    DWORD PTR [r12+0xf0],r14d
  42871b:	mov    eax,r14d
  42871e:	add    rsp,0xa0
  428725:	pop    rbx
  428726:	pop    r12
  428728:	pop    r14
  42872a:	pop    r15
  42872c:	pop    rbp
  42872d:	ret    
  42872e:	xor    edx,edx
  428730:	xor    r8d,r8d
  428733:	test   rbp,rbp
  428736:	jne    428694 <flatcc_builder_embed_buffer@@Base+0xb4>
  42873c:	jmp    4286b3 <flatcc_builder_embed_buffer@@Base+0xd3>
  428741:	lea    rdi,[rip+0x19437]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  428748:	lea    rsi,[rip+0x22893]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42874f:	lea    rcx,[rip+0x2390b]        # 44c061 <flatcc_builder_padding_base@@Base+0x12c1>
  428756:	mov    edx,0x287
  42875b:	call   406100 <__assert_fail@plt>
  428760:	lea    rdi,[rip+0x19418]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  428767:	lea    rsi,[rip+0x22874]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42876e:	lea    rcx,[rip+0x238ec]        # 44c061 <flatcc_builder_padding_base@@Base+0x12c1>
  428775:	mov    edx,0x28b
  42877a:	call   406100 <__assert_fail@plt>
  42877f:	nop
  428780:	push   rbx
  428781:	sub    rsp,0x90
  428788:	mov    rax,rdi
  42878b:	test   dx,dx
  42878e:	jne    4287a1 <flatcc_builder_embed_buffer@@Base+0x1c1>
  428790:	mov    edi,DWORD PTR [rax+0xec]
  428796:	test   di,di
  428799:	mov    edx,0x1
  42879e:	cmovne edx,edi
  4287a1:	movzx  ebx,WORD PTR [rsi]
  4287a4:	mov    edi,0x4
  4287a9:	cmp    ebx,0x4
  4287ac:	cmovae edi,ebx
  4287af:	jb     4287bc <flatcc_builder_embed_buffer@@Base+0x1dc>
  4287b1:	cmp    di,dx
  4287b4:	jb     4287bc <flatcc_builder_embed_buffer@@Base+0x1dc>
  4287b6:	test   ecx,ecx
  4287b8:	jne    428824 <flatcc_builder_embed_buffer@@Base+0x244>
  4287ba:	jmp    4287c9 <flatcc_builder_embed_buffer@@Base+0x1e9>
  4287bc:	cmp    di,dx
  4287bf:	cmovb  edi,edx
  4287c2:	mov    WORD PTR [rsi],di
  4287c5:	test   ecx,ecx
  4287c7:	jne    428824 <flatcc_builder_embed_buffer@@Base+0x244>
  4287c9:	mov    ebx,DWORD PTR [rax+0xf4]
  4287cf:	movzx  r8d,dx
  4287d3:	add    r8d,0xffffffff
  4287d7:	and    r8d,ebx
  4287da:	je     428824 <flatcc_builder_embed_buffer@@Base+0x244>
  4287dc:	mov    QWORD PTR [rsp],r8
  4287e0:	lea    rcx,[rip+0x225b9]        # 44ada0 <flatcc_builder_padding_base@@Base>
  4287e7:	mov    QWORD PTR [rsp+0x10],rcx
  4287ec:	mov    QWORD PTR [rsp+0x18],r8
  4287f1:	mov    DWORD PTR [rsp+0x8],0x1
  4287f9:	lea    ecx,[r8+rbx*1]
  4287fd:	mov    DWORD PTR [rax+0xf4],ecx
  428803:	test   r8d,r8d
  428806:	js     42882d <flatcc_builder_embed_buffer@@Base+0x24d>
  428808:	mov    rdi,QWORD PTR [rax+0x38]
  42880c:	lea    rsi,[rsp+0x10]
  428811:	mov    edx,0x1
  428816:	mov    ecx,ebx
  428818:	call   QWORD PTR [rax+0x48]
  42881b:	test   eax,eax
  42881d:	jne    42884c <flatcc_builder_embed_buffer@@Base+0x26c>
  42881f:	cmp    ebx,0xffffffff
  428822:	je     42886b <flatcc_builder_embed_buffer@@Base+0x28b>
  428824:	add    rsp,0x90
  42882b:	pop    rbx
  42882c:	ret    
  42882d:	lea    rdi,[rip+0x1934b]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  428834:	lea    rsi,[rip+0x227a7]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42883b:	lea    rcx,[rip+0x238db]        # 44c11d <flatcc_builder_padding_base@@Base+0x137d>
  428842:	mov    edx,0x2a1
  428847:	call   406100 <__assert_fail@plt>
  42884c:	lea    rdi,[rip+0x1932c]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  428853:	lea    rsi,[rip+0x22788]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42885a:	lea    rcx,[rip+0x238bc]        # 44c11d <flatcc_builder_padding_base@@Base+0x137d>
  428861:	mov    edx,0x2a5
  428866:	call   406100 <__assert_fail@plt>
  42886b:	lea    rdi,[rip+0x1930d]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  428872:	lea    rsi,[rip+0x22769]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  428879:	lea    rcx,[rip+0x2379f]        # 44c01f <flatcc_builder_padding_base@@Base+0x127f>
  428880:	mov    edx,0x2be
  428885:	call   406100 <__assert_fail@plt>
  42888a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428890 <flatcc_builder_create_buffer@@Base>:
  428890:	push   rbp
  428891:	push   r15
  428893:	push   r14
  428895:	push   r13
  428897:	push   r12
  428899:	push   rbx
  42889a:	sub    rsp,0xa8
  4288a1:	mov    r12d,r9d
  4288a4:	mov    r14d,ecx
  4288a7:	mov    rbp,rsi
  4288aa:	mov    r13,rdi
  4288ad:	mov    WORD PTR [rsp+0xa],r8w
  4288b3:	mov    DWORD PTR [rsp+0xc],0x0
  4288bb:	mov    r15d,r9d
  4288be:	and    r15d,0x1
  4288c2:	lea    rsi,[rsp+0xa]
  4288c7:	mov    ecx,r15d
  4288ca:	call   428780 <flatcc_builder_embed_buffer@@Base+0x1a0>
  4288cf:	movzx  eax,WORD PTR [rsp+0xa]
  4288d4:	cmp    WORD PTR [r13+0xe8],ax
  4288dc:	jae    4288e6 <flatcc_builder_create_buffer@@Base+0x56>
  4288de:	mov    WORD PTR [r13+0xe8],ax
  4288e6:	movzx  edx,ax
  4288e9:	xor    eax,eax
  4288eb:	test   rbp,rbp
  4288ee:	je     428908 <flatcc_builder_create_buffer@@Base+0x78>
  4288f0:	mov    ecx,DWORD PTR [rbp+0x0]
  4288f3:	mov    DWORD PTR [rsp+0xc],ecx
  4288f7:	xor    edi,edi
  4288f9:	test   ecx,ecx
  4288fb:	setne  dil
  4288ff:	mov    rsi,rdi
  428902:	shl    rsi,0x2
  428906:	jmp    42890c <flatcc_builder_create_buffer@@Base+0x7c>
  428908:	xor    edi,edi
  42890a:	xor    esi,esi
  42890c:	lea    ecx,[r12+r12*1]
  428910:	and    ecx,0x4
  428913:	mov    ebp,DWORD PTR [r13+0xf0]
  42891a:	xor    ecx,0xfffffffc
  42891d:	add    ecx,ebp
  42891f:	sub    ecx,esi
  428921:	add    edx,0xffffffff
  428924:	mov    QWORD PTR [rsp+0x18],0x0
  42892d:	mov    DWORD PTR [rsp+0x20],0x0
  428935:	test   r12b,0x3
  428939:	je     42896c <flatcc_builder_create_buffer@@Base+0xdc>
  42893b:	mov    QWORD PTR [rsp+0x18],0x4
  428944:	lea    rax,[rsp+0x10]
  428949:	mov    QWORD PTR [rsp+0x28],rax
  42894e:	mov    QWORD PTR [rsp+0x30],0x4
  428957:	mov    DWORD PTR [rsp+0x20],0x1
  42895f:	mov    eax,0x1
  428964:	mov    r8d,0x8
  42896a:	jmp    428972 <flatcc_builder_create_buffer@@Base+0xe2>
  42896c:	mov    r8d,0x4
  428972:	and    ecx,edx
  428974:	mov    QWORD PTR [rsp+0x18],r8
  428979:	mov    edx,eax
  42897b:	shl    rdx,0x4
  42897f:	lea    rbx,[rsp+0x14]
  428984:	mov    QWORD PTR [rsp+rdx*1+0x28],rbx
  428989:	mov    QWORD PTR [rsp+rdx*1+0x30],0x4
  428992:	lea    edx,[rax+0x1]
  428995:	mov    DWORD PTR [rsp+0x20],edx
  428999:	test   dil,dil
  42899c:	je     4289c4 <flatcc_builder_create_buffer@@Base+0x134>
  42899e:	add    r8,rsi
  4289a1:	mov    QWORD PTR [rsp+0x18],r8
  4289a6:	mov    edx,edx
  4289a8:	shl    rdx,0x4
  4289ac:	lea    rdi,[rsp+0xc]
  4289b1:	mov    QWORD PTR [rsp+rdx*1+0x28],rdi
  4289b6:	mov    QWORD PTR [rsp+rdx*1+0x30],rsi
  4289bb:	or     eax,0x2
  4289be:	mov    DWORD PTR [rsp+0x20],eax
  4289c2:	mov    edx,eax
  4289c4:	test   ecx,ecx
  4289c6:	je     4289f0 <flatcc_builder_create_buffer@@Base+0x160>
  4289c8:	mov    eax,ecx
  4289ca:	add    r8,rax
  4289cd:	mov    QWORD PTR [rsp+0x18],r8
  4289d2:	mov    ecx,edx
  4289d4:	shl    rcx,0x4
  4289d8:	lea    rsi,[rip+0x223c1]        # 44ada0 <flatcc_builder_padding_base@@Base>
  4289df:	mov    QWORD PTR [rsp+rcx*1+0x28],rsi
  4289e4:	mov    QWORD PTR [rsp+rcx*1+0x30],rax
  4289e9:	add    edx,0x1
  4289ec:	mov    DWORD PTR [rsp+0x20],edx
  4289f0:	xor    eax,eax
  4289f2:	test   r12b,0x3
  4289f6:	setne  al
  4289f9:	sub    ebp,r8d
  4289fc:	lea    eax,[rbp+rax*4+0x0]
  428a00:	mov    ecx,r15d
  428a03:	mov    ecx,DWORD PTR [r13+rcx*4+0xf4]
  428a0b:	sub    ecx,eax
  428a0d:	mov    DWORD PTR [rsp+0x10],ecx
  428a11:	sub    r14d,eax
  428a14:	mov    DWORD PTR [rsp+0x14],r14d
  428a19:	cmp    r8,0x11
  428a1d:	setb   al
  428a20:	lea    rcx,[r8-0x10]
  428a24:	shr    rcx,0x20
  428a28:	sete   cl
  428a2b:	test   r8d,r8d
  428a2e:	jle    428a66 <flatcc_builder_create_buffer@@Base+0x1d6>
  428a30:	or     al,cl
  428a32:	je     428a66 <flatcc_builder_create_buffer@@Base+0x1d6>
  428a34:	mov    rdi,QWORD PTR [r13+0x38]
  428a38:	lea    rsi,[rsp+0x28]
  428a3d:	mov    ecx,ebp
  428a3f:	call   QWORD PTR [r13+0x48]
  428a43:	test   eax,eax
  428a45:	jne    428a85 <flatcc_builder_create_buffer@@Base+0x1f5>
  428a47:	mov    DWORD PTR [r13+0xf0],ebp
  428a4e:	test   ebp,ebp
  428a50:	je     428aa4 <flatcc_builder_create_buffer@@Base+0x214>
  428a52:	mov    eax,ebp
  428a54:	add    rsp,0xa8
  428a5b:	pop    rbx
  428a5c:	pop    r12
  428a5e:	pop    r13
  428a60:	pop    r14
  428a62:	pop    r15
  428a64:	pop    rbp
  428a65:	ret    
  428a66:	lea    rdi,[rip+0x19112]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  428a6d:	lea    rsi,[rip+0x2256e]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  428a74:	lea    rcx,[rip+0x235e6]        # 44c061 <flatcc_builder_padding_base@@Base+0x12c1>
  428a7b:	mov    edx,0x287
  428a80:	call   406100 <__assert_fail@plt>
  428a85:	lea    rdi,[rip+0x190f3]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  428a8c:	lea    rsi,[rip+0x2254f]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  428a93:	lea    rcx,[rip+0x235c7]        # 44c061 <flatcc_builder_padding_base@@Base+0x12c1>
  428a9a:	mov    edx,0x28b
  428a9f:	call   406100 <__assert_fail@plt>
  428aa4:	lea    rdi,[rip+0x190d4]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  428aab:	lea    rsi,[rip+0x22530]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  428ab2:	lea    rcx,[rip+0x2267e]        # 44b137 <flatcc_builder_padding_base@@Base+0x397>
  428ab9:	mov    edx,0x304
  428abe:	call   406100 <__assert_fail@plt>
  428ac3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428acd:	nop    DWORD PTR [rax]

0000000000428ad0 <flatcc_builder_create_struct@@Base>:
  428ad0:	push   rbp
  428ad1:	push   r14
  428ad3:	push   rbx
  428ad4:	sub    rsp,0x90
  428adb:	test   cx,cx
  428ade:	je     428bd9 <flatcc_builder_create_struct@@Base+0x109>
  428ae4:	mov    rax,rdx
  428ae7:	mov    r14,rdi
  428aea:	cmp    WORD PTR [rdi+0xe8],cx
  428af1:	jae    428afb <flatcc_builder_create_struct@@Base+0x2b>
  428af3:	mov    WORD PTR [r14+0xe8],cx
  428afb:	mov    ebp,DWORD PTR [r14+0xf0]
  428b02:	mov    edx,ebp
  428b04:	sub    edx,eax
  428b06:	movzx  ecx,cx
  428b09:	add    ecx,0xffffffff
  428b0c:	and    ecx,edx
  428b0e:	mov    QWORD PTR [rsp],0x0
  428b16:	mov    DWORD PTR [rsp+0x8],0x0
  428b1e:	test   rax,rax
  428b21:	je     428bb2 <flatcc_builder_create_struct@@Base+0xe2>
  428b27:	mov    QWORD PTR [rsp],rax
  428b2b:	mov    QWORD PTR [rsp+0x10],rsi
  428b30:	mov    QWORD PTR [rsp+0x18],rax
  428b35:	mov    DWORD PTR [rsp+0x8],0x1
  428b3d:	mov    edx,0x1
  428b42:	test   ecx,ecx
  428b44:	je     428b6b <flatcc_builder_create_struct@@Base+0x9b>
  428b46:	add    rax,rcx
  428b49:	mov    QWORD PTR [rsp],rax
  428b4d:	mov    esi,edx
  428b4f:	shl    rsi,0x4
  428b53:	lea    rdi,[rip+0x22246]        # 44ada0 <flatcc_builder_padding_base@@Base>
  428b5a:	mov    QWORD PTR [rsp+rsi*1+0x10],rdi
  428b5f:	mov    QWORD PTR [rsp+rsi*1+0x18],rcx
  428b64:	add    edx,0x1
  428b67:	mov    DWORD PTR [rsp+0x8],edx
  428b6b:	cmp    rax,0x11
  428b6f:	setb   cl
  428b72:	lea    rsi,[rax-0x10]
  428b76:	shr    rsi,0x20
  428b7a:	sete   bl
  428b7d:	test   eax,eax
  428b7f:	jle    428bba <flatcc_builder_create_struct@@Base+0xea>
  428b81:	or     cl,bl
  428b83:	je     428bba <flatcc_builder_create_struct@@Base+0xea>
  428b85:	sub    ebp,eax
  428b87:	mov    rdi,QWORD PTR [r14+0x38]
  428b8b:	lea    rsi,[rsp+0x10]
  428b90:	mov    ecx,ebp
  428b92:	mov    r8,rax
  428b95:	call   QWORD PTR [r14+0x48]
  428b99:	test   eax,eax
  428b9b:	jne    428bf8 <flatcc_builder_create_struct@@Base+0x128>
  428b9d:	mov    DWORD PTR [r14+0xf0],ebp
  428ba4:	mov    eax,ebp
  428ba6:	add    rsp,0x90
  428bad:	pop    rbx
  428bae:	pop    r14
  428bb0:	pop    rbp
  428bb1:	ret    
  428bb2:	xor    edx,edx
  428bb4:	test   ecx,ecx
  428bb6:	jne    428b46 <flatcc_builder_create_struct@@Base+0x76>
  428bb8:	jmp    428b6b <flatcc_builder_create_struct@@Base+0x9b>
  428bba:	lea    rdi,[rip+0x18fbe]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  428bc1:	lea    rsi,[rip+0x2241a]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  428bc8:	lea    rcx,[rip+0x23492]        # 44c061 <flatcc_builder_padding_base@@Base+0x12c1>
  428bcf:	mov    edx,0x287
  428bd4:	call   406100 <__assert_fail@plt>
  428bd9:	lea    rdi,[rip+0x225da]        # 44b1ba <flatcc_builder_padding_base@@Base+0x41a>
  428be0:	lea    rsi,[rip+0x223fb]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  428be7:	lea    rcx,[rip+0x225d7]        # 44b1c5 <flatcc_builder_padding_base@@Base+0x425>
  428bee:	mov    edx,0x30f
  428bf3:	call   406100 <__assert_fail@plt>
  428bf8:	lea    rdi,[rip+0x18f80]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  428bff:	lea    rsi,[rip+0x223dc]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  428c06:	lea    rcx,[rip+0x23454]        # 44c061 <flatcc_builder_padding_base@@Base+0x12c1>
  428c0d:	mov    edx,0x28b
  428c12:	call   406100 <__assert_fail@plt>
  428c17:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428c20 <flatcc_builder_start_buffer@@Base>:
  428c20:	push   rbp
  428c21:	push   r15
  428c23:	push   r14
  428c25:	push   rbx
  428c26:	push   rax
  428c27:	mov    r15d,ecx
  428c2a:	mov    ebp,edx
  428c2c:	mov    r14,rsi
  428c2f:	mov    rbx,rdi
  428c32:	movzx  esi,WORD PTR [rdi+0xe8]
  428c39:	call   428d00 <flatcc_builder_start_buffer@@Base+0xe0>
  428c3e:	mov    ecx,eax
  428c40:	mov    eax,0xffffffff
  428c45:	test   ecx,ecx
  428c47:	jne    428cec <flatcc_builder_start_buffer@@Base+0xcc>
  428c4d:	mov    WORD PTR [rbx+0xe8],0x1
  428c56:	movzx  eax,WORD PTR [rbx+0xec]
  428c5d:	mov    rcx,QWORD PTR [rbx+0x30]
  428c61:	mov    WORD PTR [rcx+0x22],ax
  428c65:	mov    WORD PTR [rbx+0xec],bp
  428c6c:	movzx  eax,WORD PTR [rbx+0x10c]
  428c73:	mov    rcx,QWORD PTR [rbx+0x30]
  428c77:	mov    WORD PTR [rcx+0x20],ax
  428c7b:	mov    WORD PTR [rbx+0x10c],r15w
  428c83:	mov    eax,DWORD PTR [rbx+0xf8]
  428c89:	mov    rcx,QWORD PTR [rbx+0x30]
  428c8d:	mov    DWORD PTR [rcx+0x14],eax
  428c90:	mov    eax,DWORD PTR [rbx+0x100]
  428c96:	mov    rcx,QWORD PTR [rbx+0x30]
  428c9a:	mov    DWORD PTR [rcx+0x1c],eax
  428c9d:	mov    eax,DWORD PTR [rbx+0xf0]
  428ca3:	mov    DWORD PTR [rbx+0xf8],eax
  428ca9:	mov    eax,DWORD PTR [rbx+0xfc]
  428caf:	lea    ecx,[rax+0x1]
  428cb2:	mov    DWORD PTR [rbx+0xfc],ecx
  428cb8:	mov    DWORD PTR [rbx+0x100],eax
  428cbe:	mov    eax,DWORD PTR [rbx+0x110]
  428cc4:	mov    rcx,QWORD PTR [rbx+0x30]
  428cc8:	mov    DWORD PTR [rcx+0x10],eax
  428ccb:	test   r14,r14
  428cce:	jne    428cd7 <flatcc_builder_start_buffer@@Base+0xb7>
  428cd0:	lea    r14,[rip+0x220c9]        # 44ada0 <flatcc_builder_padding_base@@Base>
  428cd7:	mov    eax,DWORD PTR [r14]
  428cda:	mov    DWORD PTR [rbx+0x110],eax
  428ce0:	mov    rax,QWORD PTR [rbx+0x30]
  428ce4:	mov    WORD PTR [rax+0xe],0x1
  428cea:	xor    eax,eax
  428cec:	add    rsp,0x8
  428cf0:	pop    rbx
  428cf1:	pop    r14
  428cf3:	pop    r15
  428cf5:	pop    rbp
  428cf6:	ret    
  428cf7:	nop    WORD PTR [rax+rax*1+0x0]
  428d00:	push   rbp
  428d01:	push   r15
  428d03:	push   r14
  428d05:	push   rbx
  428d06:	push   rax
  428d07:	mov    r14d,esi
  428d0a:	mov    rbx,rdi
  428d0d:	movsxd rbp,DWORD PTR [rdi+0x104]
  428d14:	lea    eax,[rbp+0x1]
  428d17:	mov    DWORD PTR [rdi+0x104],eax
  428d1d:	cmp    ebp,DWORD PTR [rdi+0x108]
  428d23:	jge    428d36 <flatcc_builder_start_buffer@@Base+0x116>
  428d25:	mov    rax,QWORD PTR [rbx+0x30]
  428d29:	add    rax,0x24
  428d2d:	mov    QWORD PTR [rbx+0x30],rax
  428d31:	jmp    428dcb <flatcc_builder_start_buffer@@Base+0x1ab>
  428d36:	mov    eax,DWORD PTR [rbx+0x120]
  428d3c:	mov    r15d,0xffffffff
  428d42:	test   eax,eax
  428d44:	jle    428d4e <flatcc_builder_start_buffer@@Base+0x12e>
  428d46:	cmp    ebp,eax
  428d48:	jge    428e06 <flatcc_builder_start_buffer@@Base+0x1e6>
  428d4e:	shl    rbp,0x2
  428d52:	lea    rdx,[rbp*8+0x24]
  428d5a:	add    rdx,rbp
  428d5d:	cmp    rdx,QWORD PTR [rbx+0xa0]
  428d64:	jbe    428d84 <flatcc_builder_start_buffer@@Base+0x164>
  428d66:	lea    rsi,[rbx+0x98]
  428d6d:	mov    rdi,QWORD PTR [rbx+0x40]
  428d71:	xor    ecx,ecx
  428d73:	mov    r8d,0x4
  428d79:	call   QWORD PTR [rbx+0x50]
  428d7c:	test   eax,eax
  428d7e:	jne    428e14 <flatcc_builder_start_buffer@@Base+0x1f4>
  428d84:	lea    rax,[rbp*8+0x0]
  428d8c:	add    rax,rbp
  428d8f:	add    rax,QWORD PTR [rbx+0x98]
  428d96:	mov    QWORD PTR [rbx+0x30],rax
  428d9a:	je     428e06 <flatcc_builder_start_buffer@@Base+0x1e6>
  428d9c:	movabs rdx,0xe38e38e38e38e38f
  428da6:	mulx   rdx,rcx,QWORD PTR [rbx+0xa0]
  428daf:	shr    rdx,0x5
  428db3:	mov    ecx,DWORD PTR [rbx+0x120]
  428db9:	cmp    ecx,edx
  428dbb:	mov    esi,edx
  428dbd:	cmovle esi,ecx
  428dc0:	test   ecx,ecx
  428dc2:	cmovle esi,edx
  428dc5:	mov    DWORD PTR [rbx+0x108],esi
  428dcb:	mov    ecx,DWORD PTR [rbx+0x20]
  428dce:	mov    DWORD PTR [rax+0x8],ecx
  428dd1:	movzx  edx,WORD PTR [rbx+0xea]
  428dd8:	mov    WORD PTR [rax+0xc],dx
  428ddc:	mov    WORD PTR [rbx+0xea],r14w
  428de4:	mov    edx,DWORD PTR [rbx+0x28]
  428de7:	mov    DWORD PTR [rax],edx
  428de9:	mov    DWORD PTR [rax+0x4],0xfffffffc
  428df0:	lea    eax,[rcx+rdx*1]
  428df3:	add    eax,0x7
  428df6:	and    eax,0xfffffff8
  428df9:	mov    DWORD PTR [rbx+0x28],eax
  428dfc:	mov    DWORD PTR [rbx+0x20],0x0
  428e03:	xor    r15d,r15d
  428e06:	mov    eax,r15d
  428e09:	add    rsp,0x8
  428e0d:	pop    rbx
  428e0e:	pop    r14
  428e10:	pop    r15
  428e12:	pop    rbp
  428e13:	ret    
  428e14:	lea    rdi,[rip+0x18d64]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  428e1b:	lea    rsi,[rip+0x221c0]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  428e22:	lea    rcx,[rip+0x231b3]        # 44bfdc <flatcc_builder_padding_base@@Base+0x123c>
  428e29:	mov    edx,0x134
  428e2e:	call   406100 <__assert_fail@plt>
  428e33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428e3d:	nop    DWORD PTR [rax]

0000000000428e40 <flatcc_builder_end_buffer@@Base>:
  428e40:	push   rbp
  428e41:	push   rbx
  428e42:	push   rax
  428e43:	mov    rcx,QWORD PTR [rdi+0x30]
  428e47:	movzx  ecx,WORD PTR [rcx+0xe]
  428e4b:	cmp    ecx,0x1
  428e4e:	jne    428f4e <flatcc_builder_end_buffer@@Base+0x10e>
  428e54:	mov    eax,esi
  428e56:	mov    rbx,rdi
  428e59:	movzx  ecx,WORD PTR [rdi+0x10c]
  428e60:	and    ecx,0x2
  428e63:	xor    r9d,r9d
  428e66:	cmp    DWORD PTR [rdi+0x100],0x0
  428e6d:	setne  r9b
  428e71:	or     r9d,ecx
  428e74:	movzx  edi,WORD PTR [rdi+0xe8]
  428e7b:	movzx  ecx,WORD PTR [rbx+0xec]
  428e82:	cmp    di,cx
  428e85:	jae    428e90 <flatcc_builder_end_buffer@@Base+0x50>
  428e87:	mov    WORD PTR [rbx+0xe8],cx
  428e8e:	mov    edi,ecx
  428e90:	lea    rsi,[rbx+0x110]
  428e97:	movzx  edx,cx
  428e9a:	movzx  r8d,di
  428e9e:	mov    rdi,rbx
  428ea1:	mov    ecx,eax
  428ea3:	call   428890 <flatcc_builder_create_buffer@@Base>
  428ea8:	mov    ebp,eax
  428eaa:	test   eax,eax
  428eac:	je     428f45 <flatcc_builder_end_buffer@@Base+0x105>
  428eb2:	mov    rax,QWORD PTR [rbx+0x30]
  428eb6:	mov    ecx,DWORD PTR [rax+0x14]
  428eb9:	mov    DWORD PTR [rbx+0xf8],ecx
  428ebf:	mov    ecx,DWORD PTR [rax+0x1c]
  428ec2:	mov    DWORD PTR [rbx+0x100],ecx
  428ec8:	mov    ecx,DWORD PTR [rax+0x10]
  428ecb:	mov    DWORD PTR [rbx+0x110],ecx
  428ed1:	movzx  eax,WORD PTR [rax+0x20]
  428ed5:	mov    WORD PTR [rbx+0x10c],ax
  428edc:	mov    rdi,QWORD PTR [rbx+0x18]
  428ee0:	mov    edx,DWORD PTR [rbx+0x20]
  428ee3:	xor    esi,esi
  428ee5:	call   406110 <memset@plt>
  428eea:	mov    rax,QWORD PTR [rbx+0x30]
  428eee:	mov    ecx,DWORD PTR [rax+0x8]
  428ef1:	mov    DWORD PTR [rbx+0x20],ecx
  428ef4:	mov    ecx,DWORD PTR [rax]
  428ef6:	mov    DWORD PTR [rbx+0x28],ecx
  428ef9:	mov    edx,DWORD PTR [rax+0x4]
  428efc:	mov    rsi,rcx
  428eff:	add    rsi,QWORD PTR [rbx+0x68]
  428f03:	mov    QWORD PTR [rbx+0x18],rsi
  428f07:	mov    esi,DWORD PTR [rbx+0x70]
  428f0a:	sub    esi,ecx
  428f0c:	cmp    esi,edx
  428f0e:	cmova  esi,edx
  428f11:	mov    DWORD PTR [rbx+0x24],esi
  428f14:	movzx  ecx,WORD PTR [rbx+0xea]
  428f1b:	cmp    WORD PTR [rbx+0xe8],cx
  428f22:	jae    428f2b <flatcc_builder_end_buffer@@Base+0xeb>
  428f24:	mov    WORD PTR [rbx+0xe8],cx
  428f2b:	movzx  ecx,WORD PTR [rax+0xc]
  428f2f:	mov    WORD PTR [rbx+0xea],cx
  428f36:	add    rax,0xffffffffffffffdc
  428f3a:	mov    QWORD PTR [rbx+0x30],rax
  428f3e:	add    DWORD PTR [rbx+0x104],0xffffffff
  428f45:	mov    eax,ebp
  428f47:	add    rsp,0x8
  428f4b:	pop    rbx
  428f4c:	pop    rbp
  428f4d:	ret    
  428f4e:	lea    rdi,[rip+0x222d6]        # 44b22b <flatcc_builder_padding_base@@Base+0x48b>
  428f55:	lea    rsi,[rip+0x22086]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  428f5c:	lea    rcx,[rip+0x222f4]        # 44b257 <flatcc_builder_padding_base@@Base+0x4b7>
  428f63:	mov    edx,0x346
  428f68:	call   406100 <__assert_fail@plt>
  428f6d:	nop    DWORD PTR [rax]

0000000000428f70 <flatcc_builder_start_struct@@Base>:
  428f70:	push   r15
  428f72:	push   r14
  428f74:	push   rbx
  428f75:	mov    r14,rsi
  428f78:	mov    rbx,rdi
  428f7b:	mov    esi,edx
  428f7d:	call   428d00 <flatcc_builder_start_buffer@@Base+0xe0>
  428f82:	test   eax,eax
  428f84:	je     428f8d <flatcc_builder_start_struct@@Base+0x1d>
  428f86:	xor    eax,eax
  428f88:	jmp    429022 <flatcc_builder_start_struct@@Base+0xb2>
  428f8d:	mov    rdx,QWORD PTR [rbx+0x30]
  428f91:	mov    WORD PTR [rdx+0xe],0x2
  428f97:	mov    ecx,DWORD PTR [rbx+0x28]
  428f9a:	mov    esi,DWORD PTR [rbx+0x70]
  428f9d:	mov    rax,QWORD PTR [rbx+0x68]
  428fa1:	add    rax,rcx
  428fa4:	mov    QWORD PTR [rbx+0x18],rax
  428fa8:	sub    esi,ecx
  428faa:	cmp    esi,0xfffffffc
  428fad:	mov    edi,0xfffffffc
  428fb2:	cmovb  edi,esi
  428fb5:	mov    DWORD PTR [rbx+0x24],edi
  428fb8:	mov    DWORD PTR [rdx+0x4],0xfffffffc
  428fbf:	mov    r15d,DWORD PTR [rbx+0x20]
  428fc3:	add    r14d,r15d
  428fc6:	mov    DWORD PTR [rbx+0x20],r14d
  428fca:	cmp    r14d,edi
  428fcd:	jb     42901f <flatcc_builder_start_struct@@Base+0xaf>
  428fcf:	add    r14d,0x1
  428fd3:	lea    rsi,[rbx+0x68]
  428fd7:	mov    rdi,QWORD PTR [rbx+0x40]
  428fdb:	add    r14,rcx
  428fde:	mov    ecx,0x1
  428fe3:	mov    r8d,0x1
  428fe9:	mov    rdx,r14
  428fec:	call   QWORD PTR [rbx+0x50]
  428fef:	test   eax,eax
  428ff1:	jne    428f86 <flatcc_builder_start_struct@@Base+0x16>
  428ff3:	mov    ecx,DWORD PTR [rbx+0x28]
  428ff6:	mov    rax,rcx
  428ff9:	add    rax,QWORD PTR [rbx+0x68]
  428ffd:	mov    QWORD PTR [rbx+0x18],rax
  429001:	mov    edx,DWORD PTR [rbx+0x70]
  429004:	sub    edx,ecx
  429006:	cmp    edx,0xfffffffc
  429009:	mov    ecx,0xfffffffc
  42900e:	cmovb  ecx,edx
  429011:	mov    DWORD PTR [rbx+0x24],ecx
  429014:	mov    rcx,QWORD PTR [rbx+0x30]
  429018:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  42901f:	add    rax,r15
  429022:	pop    rbx
  429023:	pop    r14
  429025:	pop    r15
  429027:	ret    
  429028:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429030 <flatcc_builder_struct_edit@@Base>:
  429030:	mov    rax,QWORD PTR [rdi+0x18]
  429034:	ret    
  429035:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42903f:	nop

0000000000429040 <flatcc_builder_end_struct@@Base>:
  429040:	push   rbp
  429041:	push   rbx
  429042:	push   rax
  429043:	mov    rax,QWORD PTR [rdi+0x30]
  429047:	movzx  eax,WORD PTR [rax+0xe]
  42904b:	cmp    eax,0x2
  42904e:	jne    4290e2 <flatcc_builder_end_struct@@Base+0xa2>
  429054:	mov    rbx,rdi
  429057:	mov    rsi,QWORD PTR [rdi+0x18]
  42905b:	mov    edx,DWORD PTR [rdi+0x20]
  42905e:	movzx  ecx,WORD PTR [rdi+0xea]
  429065:	call   428ad0 <flatcc_builder_create_struct@@Base>
  42906a:	mov    ebp,eax
  42906c:	test   eax,eax
  42906e:	je     4290d9 <flatcc_builder_end_struct@@Base+0x99>
  429070:	mov    rdi,QWORD PTR [rbx+0x18]
  429074:	mov    edx,DWORD PTR [rbx+0x20]
  429077:	xor    esi,esi
  429079:	call   406110 <memset@plt>
  42907e:	mov    rax,QWORD PTR [rbx+0x30]
  429082:	mov    ecx,DWORD PTR [rax+0x8]
  429085:	mov    DWORD PTR [rbx+0x20],ecx
  429088:	mov    ecx,DWORD PTR [rax]
  42908a:	mov    DWORD PTR [rbx+0x28],ecx
  42908d:	mov    edx,DWORD PTR [rax+0x4]
  429090:	mov    rsi,rcx
  429093:	add    rsi,QWORD PTR [rbx+0x68]
  429097:	mov    QWORD PTR [rbx+0x18],rsi
  42909b:	mov    esi,DWORD PTR [rbx+0x70]
  42909e:	sub    esi,ecx
  4290a0:	cmp    esi,edx
  4290a2:	cmova  esi,edx
  4290a5:	mov    DWORD PTR [rbx+0x24],esi
  4290a8:	movzx  ecx,WORD PTR [rbx+0xea]
  4290af:	cmp    WORD PTR [rbx+0xe8],cx
  4290b6:	jae    4290bf <flatcc_builder_end_struct@@Base+0x7f>
  4290b8:	mov    WORD PTR [rbx+0xe8],cx
  4290bf:	movzx  ecx,WORD PTR [rax+0xc]
  4290c3:	mov    WORD PTR [rbx+0xea],cx
  4290ca:	add    rax,0xffffffffffffffdc
  4290ce:	mov    QWORD PTR [rbx+0x30],rax
  4290d2:	add    DWORD PTR [rbx+0x104],0xffffffff
  4290d9:	mov    eax,ebp
  4290db:	add    rsp,0x8
  4290df:	pop    rbx
  4290e0:	pop    rbp
  4290e1:	ret    
  4290e2:	lea    rdi,[rip+0x221c7]        # 44b2b0 <flatcc_builder_padding_base@@Base+0x510>
  4290e9:	lea    rsi,[rip+0x21ef2]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  4290f0:	lea    rcx,[rip+0x221e5]        # 44b2dc <flatcc_builder_padding_base@@Base+0x53c>
  4290f7:	mov    edx,0x368
  4290fc:	call   406100 <__assert_fail@plt>
  429101:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42910b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429110 <flatcc_builder_extend_vector@@Base>:
  429110:	push   r14
  429112:	push   rbx
  429113:	push   rax
  429114:	mov    rax,QWORD PTR [rdi+0x30]
  429118:	mov    ecx,DWORD PTR [rax+0x14]
  42911b:	add    ecx,esi
  42911d:	jb     4291b0 <flatcc_builder_extend_vector@@Base+0xa0>
  429123:	cmp    ecx,DWORD PTR [rax+0x18]
  429126:	ja     4291b0 <flatcc_builder_extend_vector@@Base+0xa0>
  42912c:	mov    rbx,rdi
  42912f:	mov    DWORD PTR [rax+0x14],ecx
  429132:	mov    rax,QWORD PTR [rdi+0x30]
  429136:	imul   esi,DWORD PTR [rax+0x10]
  42913a:	mov    r14d,DWORD PTR [rdi+0x20]
  42913e:	add    esi,r14d
  429141:	mov    DWORD PTR [rdi+0x20],esi
  429144:	cmp    esi,DWORD PTR [rdi+0x24]
  429147:	jae    42914f <flatcc_builder_extend_vector@@Base+0x3f>
  429149:	mov    rax,QWORD PTR [rbx+0x18]
  42914d:	jmp    4291a5 <flatcc_builder_extend_vector@@Base+0x95>
  42914f:	add    esi,0x1
  429152:	lea    rax,[rbx+0x68]
  429156:	mov    rdi,QWORD PTR [rbx+0x40]
  42915a:	mov    edx,DWORD PTR [rbx+0x28]
  42915d:	add    rdx,rsi
  429160:	mov    ecx,0x1
  429165:	mov    r8d,0x1
  42916b:	mov    rsi,rax
  42916e:	call   QWORD PTR [rbx+0x50]
  429171:	test   eax,eax
  429173:	je     429179 <flatcc_builder_extend_vector@@Base+0x69>
  429175:	xor    eax,eax
  429177:	jmp    4291a8 <flatcc_builder_extend_vector@@Base+0x98>
  429179:	mov    ecx,DWORD PTR [rbx+0x28]
  42917c:	mov    rax,rcx
  42917f:	add    rax,QWORD PTR [rbx+0x68]
  429183:	mov    QWORD PTR [rbx+0x18],rax
  429187:	mov    edx,DWORD PTR [rbx+0x70]
  42918a:	sub    edx,ecx
  42918c:	cmp    edx,0xfffffffc
  42918f:	mov    ecx,0xfffffffc
  429194:	cmovb  ecx,edx
  429197:	mov    DWORD PTR [rbx+0x24],ecx
  42919a:	mov    rcx,QWORD PTR [rbx+0x30]
  42919e:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  4291a5:	add    rax,r14
  4291a8:	add    rsp,0x8
  4291ac:	pop    rbx
  4291ad:	pop    r14
  4291af:	ret    
  4291b0:	lea    rdi,[rip+0x22ef4]        # 44c0ab <flatcc_builder_padding_base@@Base+0x130b>
  4291b7:	lea    rsi,[rip+0x21e24]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  4291be:	lea    rcx,[rip+0x22f01]        # 44c0c6 <flatcc_builder_padding_base@@Base+0x1326>
  4291c5:	mov    edx,0x37c
  4291ca:	call   406100 <__assert_fail@plt>
  4291cf:	nop

00000000004291d0 <flatcc_builder_vector_push@@Base>:
  4291d0:	push   r15
  4291d2:	push   r14
  4291d4:	push   r13
  4291d6:	push   r12
  4291d8:	push   rbx
  4291d9:	mov    rax,QWORD PTR [rdi+0x30]
  4291dd:	movzx  ecx,WORD PTR [rax+0xe]
  4291e1:	cmp    ecx,0x4
  4291e4:	jne    429299 <flatcc_builder_vector_push@@Base+0xc9>
  4291ea:	mov    ecx,DWORD PTR [rax+0x14]
  4291ed:	cmp    ecx,DWORD PTR [rax+0x18]
  4291f0:	ja     4292b8 <flatcc_builder_vector_push@@Base+0xe8>
  4291f6:	mov    r14,rsi
  4291f9:	mov    rbx,rdi
  4291fc:	add    ecx,0x1
  4291ff:	mov    DWORD PTR [rax+0x14],ecx
  429202:	mov    rax,QWORD PTR [rdi+0x30]
  429206:	mov    r15d,DWORD PTR [rax+0x10]
  42920a:	mov    r13d,DWORD PTR [rdi+0x20]
  42920e:	lea    eax,[r15+r13*1]
  429212:	mov    DWORD PTR [rdi+0x20],eax
  429215:	cmp    eax,DWORD PTR [rdi+0x24]
  429218:	jae    429225 <flatcc_builder_vector_push@@Base+0x55>
  42921a:	mov    r12,QWORD PTR [rbx+0x18]
  42921e:	add    r12,r13
  429221:	jne    42927e <flatcc_builder_vector_push@@Base+0xae>
  429223:	jmp    429248 <flatcc_builder_vector_push@@Base+0x78>
  429225:	add    eax,0x1
  429228:	lea    rsi,[rbx+0x68]
  42922c:	mov    rdi,QWORD PTR [rbx+0x40]
  429230:	mov    edx,DWORD PTR [rbx+0x28]
  429233:	add    rdx,rax
  429236:	mov    ecx,0x1
  42923b:	mov    r8d,0x1
  429241:	call   QWORD PTR [rbx+0x50]
  429244:	test   eax,eax
  429246:	je     42924d <flatcc_builder_vector_push@@Base+0x7d>
  429248:	xor    r12d,r12d
  42924b:	jmp    42928c <flatcc_builder_vector_push@@Base+0xbc>
  42924d:	mov    eax,DWORD PTR [rbx+0x28]
  429250:	mov    r12,rax
  429253:	add    r12,QWORD PTR [rbx+0x68]
  429257:	mov    QWORD PTR [rbx+0x18],r12
  42925b:	mov    ecx,DWORD PTR [rbx+0x70]
  42925e:	sub    ecx,eax
  429260:	cmp    ecx,0xfffffffc
  429263:	mov    eax,0xfffffffc
  429268:	cmovb  eax,ecx
  42926b:	mov    DWORD PTR [rbx+0x24],eax
  42926e:	mov    rax,QWORD PTR [rbx+0x30]
  429272:	mov    DWORD PTR [rax+0x4],0xfffffffc
  429279:	add    r12,r13
  42927c:	je     429248 <flatcc_builder_vector_push@@Base+0x78>
  42927e:	mov    rdi,r12
  429281:	mov    rsi,r14
  429284:	mov    rdx,r15
  429287:	call   4061a0 <memcpy@plt>
  42928c:	mov    rax,r12
  42928f:	pop    rbx
  429290:	pop    r12
  429292:	pop    r13
  429294:	pop    r14
  429296:	pop    r15
  429298:	ret    
  429299:	lea    rdi,[rip+0x2207f]        # 44b31f <flatcc_builder_padding_base@@Base+0x57f>
  4292a0:	lea    rsi,[rip+0x21d3b]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  4292a7:	lea    rcx,[rip+0x2209d]        # 44b34b <flatcc_builder_padding_base@@Base+0x5ab>
  4292ae:	mov    edx,0x38b
  4292b3:	call   406100 <__assert_fail@plt>
  4292b8:	lea    rdi,[rip+0x220cf]        # 44b38e <flatcc_builder_padding_base@@Base+0x5ee>
  4292bf:	lea    rsi,[rip+0x21d1c]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  4292c6:	lea    rcx,[rip+0x2207e]        # 44b34b <flatcc_builder_padding_base@@Base+0x5ab>
  4292cd:	mov    edx,0x38c
  4292d2:	call   406100 <__assert_fail@plt>
  4292d7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004292e0 <flatcc_builder_append_vector@@Base>:
  4292e0:	push   r15
  4292e2:	push   r14
  4292e4:	push   r13
  4292e6:	push   r12
  4292e8:	push   rbx
  4292e9:	mov    rax,QWORD PTR [rdi+0x30]
  4292ed:	movzx  ecx,WORD PTR [rax+0xe]
  4292f1:	cmp    ecx,0x4
  4292f4:	jne    4293d2 <flatcc_builder_append_vector@@Base+0xf2>
  4292fa:	mov    r15,rdx
  4292fd:	mov    ecx,DWORD PTR [rax+0x14]
  429300:	add    ecx,r15d
  429303:	jb     4293b3 <flatcc_builder_append_vector@@Base+0xd3>
  429309:	cmp    ecx,DWORD PTR [rax+0x18]
  42930c:	ja     4293b3 <flatcc_builder_append_vector@@Base+0xd3>
  429312:	mov    r14,rsi
  429315:	mov    rbx,rdi
  429318:	mov    DWORD PTR [rax+0x14],ecx
  42931b:	mov    rax,QWORD PTR [rdi+0x30]
  42931f:	imul   r15d,DWORD PTR [rax+0x10]
  429324:	mov    r13d,DWORD PTR [rdi+0x20]
  429328:	lea    eax,[r15+r13*1]
  42932c:	mov    DWORD PTR [rdi+0x20],eax
  42932f:	cmp    eax,DWORD PTR [rdi+0x24]
  429332:	jae    42933f <flatcc_builder_append_vector@@Base+0x5f>
  429334:	mov    r12,QWORD PTR [rbx+0x18]
  429338:	add    r12,r13
  42933b:	jne    429398 <flatcc_builder_append_vector@@Base+0xb8>
  42933d:	jmp    429362 <flatcc_builder_append_vector@@Base+0x82>
  42933f:	add    eax,0x1
  429342:	lea    rsi,[rbx+0x68]
  429346:	mov    rdi,QWORD PTR [rbx+0x40]
  42934a:	mov    edx,DWORD PTR [rbx+0x28]
  42934d:	add    rdx,rax
  429350:	mov    ecx,0x1
  429355:	mov    r8d,0x1
  42935b:	call   QWORD PTR [rbx+0x50]
  42935e:	test   eax,eax
  429360:	je     429367 <flatcc_builder_append_vector@@Base+0x87>
  429362:	xor    r12d,r12d
  429365:	jmp    4293a6 <flatcc_builder_append_vector@@Base+0xc6>
  429367:	mov    eax,DWORD PTR [rbx+0x28]
  42936a:	mov    r12,rax
  42936d:	add    r12,QWORD PTR [rbx+0x68]
  429371:	mov    QWORD PTR [rbx+0x18],r12
  429375:	mov    ecx,DWORD PTR [rbx+0x70]
  429378:	sub    ecx,eax
  42937a:	cmp    ecx,0xfffffffc
  42937d:	mov    eax,0xfffffffc
  429382:	cmovb  eax,ecx
  429385:	mov    DWORD PTR [rbx+0x24],eax
  429388:	mov    rax,QWORD PTR [rbx+0x30]
  42938c:	mov    DWORD PTR [rax+0x4],0xfffffffc
  429393:	add    r12,r13
  429396:	je     429362 <flatcc_builder_append_vector@@Base+0x82>
  429398:	mov    edx,r15d
  42939b:	mov    rdi,r12
  42939e:	mov    rsi,r14
  4293a1:	call   4061a0 <memcpy@plt>
  4293a6:	mov    rax,r12
  4293a9:	pop    rbx
  4293aa:	pop    r12
  4293ac:	pop    r13
  4293ae:	pop    r14
  4293b0:	pop    r15
  4293b2:	ret    
  4293b3:	lea    rdi,[rip+0x22cf1]        # 44c0ab <flatcc_builder_padding_base@@Base+0x130b>
  4293ba:	lea    rsi,[rip+0x21c21]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  4293c1:	lea    rcx,[rip+0x22cfe]        # 44c0c6 <flatcc_builder_padding_base@@Base+0x1326>
  4293c8:	mov    edx,0x37c
  4293cd:	call   406100 <__assert_fail@plt>
  4293d2:	lea    rdi,[rip+0x21f46]        # 44b31f <flatcc_builder_padding_base@@Base+0x57f>
  4293d9:	lea    rsi,[rip+0x21c02]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  4293e0:	lea    rcx,[rip+0x21fe4]        # 44b3cb <flatcc_builder_padding_base@@Base+0x62b>
  4293e7:	mov    edx,0x393
  4293ec:	call   406100 <__assert_fail@plt>
  4293f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4293fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429400 <flatcc_builder_extend_offset_vector@@Base>:
  429400:	push   r14
  429402:	push   rbx
  429403:	push   rax
  429404:	mov    rax,QWORD PTR [rdi+0x30]
  429408:	mov    ecx,DWORD PTR [rax+0x14]
  42940b:	add    ecx,esi
  42940d:	jb     429495 <flatcc_builder_extend_offset_vector@@Base+0x95>
  429413:	cmp    ecx,0x40000000
  429419:	jae    429495 <flatcc_builder_extend_offset_vector@@Base+0x95>
  42941b:	mov    rbx,rdi
  42941e:	mov    DWORD PTR [rax+0x14],ecx
  429421:	mov    r14d,DWORD PTR [rdi+0x20]
  429425:	lea    eax,[r14+rsi*4]
  429429:	mov    DWORD PTR [rdi+0x20],eax
  42942c:	cmp    eax,DWORD PTR [rdi+0x24]
  42942f:	jae    429437 <flatcc_builder_extend_offset_vector@@Base+0x37>
  429431:	mov    rax,QWORD PTR [rbx+0x18]
  429435:	jmp    42948a <flatcc_builder_extend_offset_vector@@Base+0x8a>
  429437:	add    eax,0x1
  42943a:	lea    rsi,[rbx+0x68]
  42943e:	mov    rdi,QWORD PTR [rbx+0x40]
  429442:	mov    edx,DWORD PTR [rbx+0x28]
  429445:	add    rdx,rax
  429448:	mov    ecx,0x1
  42944d:	mov    r8d,0x1
  429453:	call   QWORD PTR [rbx+0x50]
  429456:	test   eax,eax
  429458:	je     42945e <flatcc_builder_extend_offset_vector@@Base+0x5e>
  42945a:	xor    eax,eax
  42945c:	jmp    42948d <flatcc_builder_extend_offset_vector@@Base+0x8d>
  42945e:	mov    ecx,DWORD PTR [rbx+0x28]
  429461:	mov    rax,rcx
  429464:	add    rax,QWORD PTR [rbx+0x68]
  429468:	mov    QWORD PTR [rbx+0x18],rax
  42946c:	mov    edx,DWORD PTR [rbx+0x70]
  42946f:	sub    edx,ecx
  429471:	cmp    edx,0xfffffffc
  429474:	mov    ecx,0xfffffffc
  429479:	cmovb  ecx,edx
  42947c:	mov    DWORD PTR [rbx+0x24],ecx
  42947f:	mov    rcx,QWORD PTR [rbx+0x30]
  429483:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  42948a:	add    rax,r14
  42948d:	add    rsp,0x8
  429491:	pop    rbx
  429492:	pop    r14
  429494:	ret    
  429495:	lea    rdi,[rip+0x22c0f]        # 44c0ab <flatcc_builder_padding_base@@Base+0x130b>
  42949c:	lea    rsi,[rip+0x21b3f]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  4294a3:	lea    rcx,[rip+0x22c1c]        # 44c0c6 <flatcc_builder_padding_base@@Base+0x1326>
  4294aa:	mov    edx,0x37c
  4294af:	call   406100 <__assert_fail@plt>
  4294b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4294be:	xchg   ax,ax

00000000004294c0 <flatcc_builder_offset_vector_push@@Base>:
  4294c0:	push   rbp
  4294c1:	push   r14
  4294c3:	push   rbx
  4294c4:	mov    rax,QWORD PTR [rdi+0x30]
  4294c8:	movzx  ecx,WORD PTR [rax+0xe]
  4294cc:	cmp    ecx,0x5
  4294cf:	jne    429565 <flatcc_builder_offset_vector_push@@Base+0xa5>
  4294d5:	mov    ecx,DWORD PTR [rax+0x14]
  4294d8:	cmp    ecx,0x3fffffff
  4294de:	je     429528 <flatcc_builder_offset_vector_push@@Base+0x68>
  4294e0:	mov    r14d,esi
  4294e3:	mov    rbx,rdi
  4294e6:	add    ecx,0x1
  4294e9:	mov    DWORD PTR [rax+0x14],ecx
  4294ec:	mov    ebp,DWORD PTR [rdi+0x20]
  4294ef:	lea    eax,[rbp+0x4]
  4294f2:	mov    DWORD PTR [rdi+0x20],eax
  4294f5:	cmp    eax,DWORD PTR [rdi+0x24]
  4294f8:	jae    429505 <flatcc_builder_offset_vector_push@@Base+0x45>
  4294fa:	mov    rax,QWORD PTR [rbx+0x18]
  4294fe:	add    rax,rbp
  429501:	jne    42955d <flatcc_builder_offset_vector_push@@Base+0x9d>
  429503:	jmp    429528 <flatcc_builder_offset_vector_push@@Base+0x68>
  429505:	lea    eax,[rbp+0x5]
  429508:	lea    rsi,[rbx+0x68]
  42950c:	mov    rdi,QWORD PTR [rbx+0x40]
  429510:	mov    edx,DWORD PTR [rbx+0x28]
  429513:	add    rdx,rax
  429516:	mov    ecx,0x1
  42951b:	mov    r8d,0x1
  429521:	call   QWORD PTR [rbx+0x50]
  429524:	test   eax,eax
  429526:	je     42952c <flatcc_builder_offset_vector_push@@Base+0x6c>
  429528:	xor    eax,eax
  42952a:	jmp    429560 <flatcc_builder_offset_vector_push@@Base+0xa0>
  42952c:	mov    ecx,DWORD PTR [rbx+0x28]
  42952f:	mov    rax,rcx
  429532:	add    rax,QWORD PTR [rbx+0x68]
  429536:	mov    QWORD PTR [rbx+0x18],rax
  42953a:	mov    edx,DWORD PTR [rbx+0x70]
  42953d:	sub    edx,ecx
  42953f:	cmp    edx,0xfffffffc
  429542:	mov    ecx,0xfffffffc
  429547:	cmovb  ecx,edx
  42954a:	mov    DWORD PTR [rbx+0x24],ecx
  42954d:	mov    rcx,QWORD PTR [rbx+0x30]
  429551:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  429558:	add    rax,rbp
  42955b:	je     429528 <flatcc_builder_offset_vector_push@@Base+0x68>
  42955d:	mov    DWORD PTR [rax],r14d
  429560:	pop    rbx
  429561:	pop    r14
  429563:	pop    rbp
  429564:	ret    
  429565:	lea    rdi,[rip+0x21eac]        # 44b418 <flatcc_builder_padding_base@@Base+0x678>
  42956c:	lea    rsi,[rip+0x21a6f]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  429573:	lea    rcx,[rip+0x21ed1]        # 44b44b <flatcc_builder_padding_base@@Base+0x6ab>
  42957a:	mov    edx,0x3a6
  42957f:	call   406100 <__assert_fail@plt>
  429584:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42958e:	xchg   ax,ax

0000000000429590 <flatcc_builder_append_offset_vector@@Base>:
  429590:	push   r15
  429592:	push   r14
  429594:	push   r13
  429596:	push   r12
  429598:	push   rbx
  429599:	mov    rax,QWORD PTR [rdi+0x30]
  42959d:	movzx  ecx,WORD PTR [rax+0xe]
  4295a1:	cmp    ecx,0x5
  4295a4:	jne    429681 <flatcc_builder_append_offset_vector@@Base+0xf1>
  4295aa:	mov    r15,rdx
  4295ad:	mov    ecx,DWORD PTR [rax+0x14]
  4295b0:	add    ecx,r15d
  4295b3:	jb     429662 <flatcc_builder_append_offset_vector@@Base+0xd2>
  4295b9:	cmp    ecx,0x40000000
  4295bf:	jae    429662 <flatcc_builder_append_offset_vector@@Base+0xd2>
  4295c5:	mov    r14,rsi
  4295c8:	mov    rbx,rdi
  4295cb:	mov    DWORD PTR [rax+0x14],ecx
  4295ce:	mov    r13d,DWORD PTR [rdi+0x20]
  4295d2:	lea    eax,[r13+r15*4+0x0]
  4295d7:	mov    DWORD PTR [rdi+0x20],eax
  4295da:	cmp    eax,DWORD PTR [rdi+0x24]
  4295dd:	jae    4295ea <flatcc_builder_append_offset_vector@@Base+0x5a>
  4295df:	mov    r12,QWORD PTR [rbx+0x18]
  4295e3:	add    r12,r13
  4295e6:	jne    429643 <flatcc_builder_append_offset_vector@@Base+0xb3>
  4295e8:	jmp    42960d <flatcc_builder_append_offset_vector@@Base+0x7d>
  4295ea:	add    eax,0x1
  4295ed:	lea    rsi,[rbx+0x68]
  4295f1:	mov    rdi,QWORD PTR [rbx+0x40]
  4295f5:	mov    edx,DWORD PTR [rbx+0x28]
  4295f8:	add    rdx,rax
  4295fb:	mov    ecx,0x1
  429600:	mov    r8d,0x1
  429606:	call   QWORD PTR [rbx+0x50]
  429609:	test   eax,eax
  42960b:	je     429612 <flatcc_builder_append_offset_vector@@Base+0x82>
  42960d:	xor    r12d,r12d
  429610:	jmp    429655 <flatcc_builder_append_offset_vector@@Base+0xc5>
  429612:	mov    eax,DWORD PTR [rbx+0x28]
  429615:	mov    r12,rax
  429618:	add    r12,QWORD PTR [rbx+0x68]
  42961c:	mov    QWORD PTR [rbx+0x18],r12
  429620:	mov    ecx,DWORD PTR [rbx+0x70]
  429623:	sub    ecx,eax
  429625:	cmp    ecx,0xfffffffc
  429628:	mov    eax,0xfffffffc
  42962d:	cmovb  eax,ecx
  429630:	mov    DWORD PTR [rbx+0x24],eax
  429633:	mov    rax,QWORD PTR [rbx+0x30]
  429637:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42963e:	add    r12,r13
  429641:	je     42960d <flatcc_builder_append_offset_vector@@Base+0x7d>
  429643:	shl    r15d,0x2
  429647:	mov    edx,r15d
  42964a:	mov    rdi,r12
  42964d:	mov    rsi,r14
  429650:	call   4061a0 <memcpy@plt>
  429655:	mov    rax,r12
  429658:	pop    rbx
  429659:	pop    r12
  42965b:	pop    r13
  42965d:	pop    r14
  42965f:	pop    r15
  429661:	ret    
  429662:	lea    rdi,[rip+0x22a42]        # 44c0ab <flatcc_builder_padding_base@@Base+0x130b>
  429669:	lea    rsi,[rip+0x21972]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  429670:	lea    rcx,[rip+0x22a4f]        # 44c0c6 <flatcc_builder_padding_base@@Base+0x1326>
  429677:	mov    edx,0x37c
  42967c:	call   406100 <__assert_fail@plt>
  429681:	lea    rdi,[rip+0x21d90]        # 44b418 <flatcc_builder_padding_base@@Base+0x678>
  429688:	lea    rsi,[rip+0x21953]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42968f:	lea    rcx,[rip+0x21e17]        # 44b4ad <flatcc_builder_padding_base@@Base+0x70d>
  429696:	mov    edx,0x3b4
  42969b:	call   406100 <__assert_fail@plt>

00000000004296a0 <flatcc_builder_extend_string@@Base>:
  4296a0:	push   r14
  4296a2:	push   rbx
  4296a3:	push   rax
  4296a4:	mov    rax,QWORD PTR [rdi+0x30]
  4296a8:	movzx  ecx,WORD PTR [rax+0xe]
  4296ac:	cmp    ecx,0x6
  4296af:	jne    42973c <flatcc_builder_extend_string@@Base+0x9c>
  4296b5:	mov    ecx,DWORD PTR [rax+0x14]
  4296b8:	add    ecx,esi
  4296ba:	jb     42975b <flatcc_builder_extend_string@@Base+0xbb>
  4296c0:	mov    rbx,rdi
  4296c3:	mov    DWORD PTR [rax+0x14],ecx
  4296c6:	mov    r14d,DWORD PTR [rdi+0x20]
  4296ca:	add    esi,r14d
  4296cd:	mov    DWORD PTR [rdi+0x20],esi
  4296d0:	cmp    esi,DWORD PTR [rdi+0x24]
  4296d3:	jae    4296db <flatcc_builder_extend_string@@Base+0x3b>
  4296d5:	mov    rax,QWORD PTR [rbx+0x18]
  4296d9:	jmp    429731 <flatcc_builder_extend_string@@Base+0x91>
  4296db:	add    esi,0x1
  4296de:	lea    rax,[rbx+0x68]
  4296e2:	mov    rdi,QWORD PTR [rbx+0x40]
  4296e6:	mov    edx,DWORD PTR [rbx+0x28]
  4296e9:	add    rdx,rsi
  4296ec:	mov    ecx,0x1
  4296f1:	mov    r8d,0x1
  4296f7:	mov    rsi,rax
  4296fa:	call   QWORD PTR [rbx+0x50]
  4296fd:	test   eax,eax
  4296ff:	je     429705 <flatcc_builder_extend_string@@Base+0x65>
  429701:	xor    eax,eax
  429703:	jmp    429734 <flatcc_builder_extend_string@@Base+0x94>
  429705:	mov    ecx,DWORD PTR [rbx+0x28]
  429708:	mov    rax,rcx
  42970b:	add    rax,QWORD PTR [rbx+0x68]
  42970f:	mov    QWORD PTR [rbx+0x18],rax
  429713:	mov    edx,DWORD PTR [rbx+0x70]
  429716:	sub    edx,ecx
  429718:	cmp    edx,0xfffffffc
  42971b:	mov    ecx,0xfffffffc
  429720:	cmovb  ecx,edx
  429723:	mov    DWORD PTR [rbx+0x24],ecx
  429726:	mov    rcx,QWORD PTR [rbx+0x30]
  42972a:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  429731:	add    rax,r14
  429734:	add    rsp,0x8
  429738:	pop    rbx
  429739:	pop    r14
  42973b:	ret    
  42973c:	lea    rdi,[rip+0x21dde]        # 44b521 <flatcc_builder_padding_base@@Base+0x781>
  429743:	lea    rsi,[rip+0x21898]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42974a:	lea    rcx,[rip+0x21dfc]        # 44b54d <flatcc_builder_padding_base@@Base+0x7ad>
  429751:	mov    edx,0x3bd
  429756:	call   406100 <__assert_fail@plt>
  42975b:	lea    rdi,[rip+0x22949]        # 44c0ab <flatcc_builder_padding_base@@Base+0x130b>
  429762:	lea    rsi,[rip+0x21879]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  429769:	lea    rcx,[rip+0x22956]        # 44c0c6 <flatcc_builder_padding_base@@Base+0x1326>
  429770:	mov    edx,0x37c
  429775:	call   406100 <__assert_fail@plt>
  42977a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429780 <flatcc_builder_append_string@@Base>:
  429780:	push   r15
  429782:	push   r14
  429784:	push   r13
  429786:	push   r12
  429788:	push   rbx
  429789:	mov    rax,QWORD PTR [rdi+0x30]
  42978d:	movzx  ecx,WORD PTR [rax+0xe]
  429791:	cmp    ecx,0x6
  429794:	jne    429841 <flatcc_builder_append_string@@Base+0xc1>
  42979a:	mov    r15,rdx
  42979d:	mov    ecx,DWORD PTR [rax+0x14]
  4297a0:	add    ecx,r15d
  4297a3:	jb     429860 <flatcc_builder_append_string@@Base+0xe0>
  4297a9:	mov    r14,rsi
  4297ac:	mov    rbx,rdi
  4297af:	mov    DWORD PTR [rax+0x14],ecx
  4297b2:	mov    r13d,DWORD PTR [rdi+0x20]
  4297b6:	lea    eax,[r15+r13*1]
  4297ba:	mov    DWORD PTR [rdi+0x20],eax
  4297bd:	cmp    eax,DWORD PTR [rdi+0x24]
  4297c0:	jae    4297cd <flatcc_builder_append_string@@Base+0x4d>
  4297c2:	mov    r12,QWORD PTR [rbx+0x18]
  4297c6:	add    r12,r13
  4297c9:	jne    429826 <flatcc_builder_append_string@@Base+0xa6>
  4297cb:	jmp    4297f0 <flatcc_builder_append_string@@Base+0x70>
  4297cd:	add    eax,0x1
  4297d0:	lea    rsi,[rbx+0x68]
  4297d4:	mov    rdi,QWORD PTR [rbx+0x40]
  4297d8:	mov    edx,DWORD PTR [rbx+0x28]
  4297db:	add    rdx,rax
  4297de:	mov    ecx,0x1
  4297e3:	mov    r8d,0x1
  4297e9:	call   QWORD PTR [rbx+0x50]
  4297ec:	test   eax,eax
  4297ee:	je     4297f5 <flatcc_builder_append_string@@Base+0x75>
  4297f0:	xor    r12d,r12d
  4297f3:	jmp    429834 <flatcc_builder_append_string@@Base+0xb4>
  4297f5:	mov    eax,DWORD PTR [rbx+0x28]
  4297f8:	mov    r12,rax
  4297fb:	add    r12,QWORD PTR [rbx+0x68]
  4297ff:	mov    QWORD PTR [rbx+0x18],r12
  429803:	mov    ecx,DWORD PTR [rbx+0x70]
  429806:	sub    ecx,eax
  429808:	cmp    ecx,0xfffffffc
  42980b:	mov    eax,0xfffffffc
  429810:	cmovb  eax,ecx
  429813:	mov    DWORD PTR [rbx+0x24],eax
  429816:	mov    rax,QWORD PTR [rbx+0x30]
  42981a:	mov    DWORD PTR [rax+0x4],0xfffffffc
  429821:	add    r12,r13
  429824:	je     4297f0 <flatcc_builder_append_string@@Base+0x70>
  429826:	mov    edx,r15d
  429829:	mov    rdi,r12
  42982c:	mov    rsi,r14
  42982f:	call   4061a0 <memcpy@plt>
  429834:	mov    rax,r12
  429837:	pop    rbx
  429838:	pop    r12
  42983a:	pop    r13
  42983c:	pop    r14
  42983e:	pop    r15
  429840:	ret    
  429841:	lea    rdi,[rip+0x21cd9]        # 44b521 <flatcc_builder_padding_base@@Base+0x781>
  429848:	lea    rsi,[rip+0x21793]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42984f:	lea    rcx,[rip+0x21d36]        # 44b58c <flatcc_builder_padding_base@@Base+0x7ec>
  429856:	mov    edx,0x3c6
  42985b:	call   406100 <__assert_fail@plt>
  429860:	lea    rdi,[rip+0x22844]        # 44c0ab <flatcc_builder_padding_base@@Base+0x130b>
  429867:	lea    rsi,[rip+0x21774]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42986e:	lea    rcx,[rip+0x22851]        # 44c0c6 <flatcc_builder_padding_base@@Base+0x1326>
  429875:	mov    edx,0x37c
  42987a:	call   406100 <__assert_fail@plt>
  42987f:	nop

0000000000429880 <flatcc_builder_append_string_str@@Base>:
  429880:	push   r14
  429882:	push   rbx
  429883:	push   rax
  429884:	mov    rbx,rsi
  429887:	mov    r14,rdi
  42988a:	mov    rdi,rsi
  42988d:	call   4060d0 <strlen@plt>
  429892:	mov    rdi,r14
  429895:	mov    rsi,rbx
  429898:	mov    rdx,rax
  42989b:	add    rsp,0x8
  42989f:	pop    rbx
  4298a0:	pop    r14
  4298a2:	jmp    429780 <flatcc_builder_append_string@@Base>
  4298a7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004298b0 <flatcc_builder_append_string_strn@@Base>:
  4298b0:	push   r15
  4298b2:	push   r14
  4298b4:	push   rbx
  4298b5:	mov    rbx,rdx
  4298b8:	mov    r14,rsi
  4298bb:	mov    r15,rdi
  4298be:	xor    esi,esi
  4298c0:	mov    rdi,r14
  4298c3:	call   406130 <memchr@plt>
  4298c8:	mov    rcx,rax
  4298cb:	sub    rcx,r14
  4298ce:	test   rax,rax
  4298d1:	cmovne rbx,rcx
  4298d5:	mov    rdi,r15
  4298d8:	mov    rsi,r14
  4298db:	mov    rdx,rbx
  4298de:	pop    rbx
  4298df:	pop    r14
  4298e1:	pop    r15
  4298e3:	jmp    429780 <flatcc_builder_append_string@@Base>
  4298e8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004298f0 <flatcc_builder_truncate_vector@@Base>:
  4298f0:	push   rax
  4298f1:	mov    rcx,QWORD PTR [rdi+0x30]
  4298f5:	movzx  edx,WORD PTR [rcx+0xe]
  4298f9:	cmp    edx,0x4
  4298fc:	jne    429933 <flatcc_builder_truncate_vector@@Base+0x43>
  4298fe:	mov    rax,rsi
  429901:	mov    edx,DWORD PTR [rcx+0x14]
  429904:	cmp    rdx,rsi
  429907:	jb     429952 <flatcc_builder_truncate_vector@@Base+0x62>
  429909:	sub    edx,eax
  42990b:	mov    DWORD PTR [rcx+0x14],edx
  42990e:	mov    rcx,QWORD PTR [rdi+0x30]
  429912:	imul   eax,DWORD PTR [rcx+0x10]
  429916:	mov    ecx,DWORD PTR [rdi+0x20]
  429919:	sub    ecx,eax
  42991b:	mov    DWORD PTR [rdi+0x20],ecx
  42991e:	add    rcx,QWORD PTR [rdi+0x18]
  429922:	xor    esi,esi
  429924:	mov    rdi,rcx
  429927:	mov    rdx,rax
  42992a:	call   406110 <memset@plt>
  42992f:	xor    eax,eax
  429931:	pop    rcx
  429932:	ret    
  429933:	lea    rdi,[rip+0x219e5]        # 44b31f <flatcc_builder_padding_base@@Base+0x57f>
  42993a:	lea    rsi,[rip+0x216a1]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  429941:	lea    rcx,[rip+0x21c91]        # 44b5d9 <flatcc_builder_padding_base@@Base+0x839>
  429948:	mov    edx,0x3d9
  42994d:	call   406100 <__assert_fail@plt>
  429952:	lea    rdi,[rip+0x21cbf]        # 44b618 <flatcc_builder_padding_base@@Base+0x878>
  429959:	lea    rsi,[rip+0x21682]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  429960:	lea    rcx,[rip+0x21c72]        # 44b5d9 <flatcc_builder_padding_base@@Base+0x839>
  429967:	mov    edx,0x3da
  42996c:	call   406100 <__assert_fail@plt>
  429971:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42997b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429980 <flatcc_builder_truncate_offset_vector@@Base>:
  429980:	push   rax
  429981:	mov    rcx,QWORD PTR [rdi+0x30]
  429985:	movzx  edx,WORD PTR [rcx+0xe]
  429989:	cmp    edx,0x5
  42998c:	jne    4299c0 <flatcc_builder_truncate_offset_vector@@Base+0x40>
  42998e:	mov    rax,rsi
  429991:	mov    edx,DWORD PTR [rcx+0x14]
  429994:	sub    edx,eax
  429996:	jb     4299df <flatcc_builder_truncate_offset_vector@@Base+0x5f>
  429998:	mov    DWORD PTR [rcx+0x14],edx
  42999b:	mov    rcx,QWORD PTR [rdi+0x30]
  42999f:	imul   eax,DWORD PTR [rcx+0x10]
  4299a3:	mov    ecx,DWORD PTR [rdi+0x20]
  4299a6:	sub    ecx,eax
  4299a8:	mov    DWORD PTR [rdi+0x20],ecx
  4299ab:	add    rcx,QWORD PTR [rdi+0x18]
  4299af:	xor    esi,esi
  4299b1:	mov    rdi,rcx
  4299b4:	mov    rdx,rax
  4299b7:	call   406110 <memset@plt>
  4299bc:	xor    eax,eax
  4299be:	pop    rcx
  4299bf:	ret    
  4299c0:	lea    rdi,[rip+0x21a51]        # 44b418 <flatcc_builder_padding_base@@Base+0x678>
  4299c7:	lea    rsi,[rip+0x21614]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  4299ce:	lea    rcx,[rip+0x21c67]        # 44b63c <flatcc_builder_padding_base@@Base+0x89c>
  4299d5:	mov    edx,0x3e2
  4299da:	call   406100 <__assert_fail@plt>
  4299df:	lea    rdi,[rip+0x21c9c]        # 44b682 <flatcc_builder_padding_base@@Base+0x8e2>
  4299e6:	lea    rsi,[rip+0x215f5]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  4299ed:	lea    rcx,[rip+0x21c48]        # 44b63c <flatcc_builder_padding_base@@Base+0x89c>
  4299f4:	mov    edx,0x3e3
  4299f9:	call   406100 <__assert_fail@plt>
  4299fe:	xchg   ax,ax

0000000000429a00 <flatcc_builder_truncate_string@@Base>:
  429a00:	push   rax
  429a01:	mov    rax,QWORD PTR [rdi+0x30]
  429a05:	movzx  ecx,WORD PTR [rax+0xe]
  429a09:	cmp    ecx,0x6
  429a0c:	jne    429a37 <flatcc_builder_truncate_string@@Base+0x37>
  429a0e:	mov    ecx,DWORD PTR [rax+0x14]
  429a11:	cmp    rcx,rsi
  429a14:	jb     429a56 <flatcc_builder_truncate_string@@Base+0x56>
  429a16:	sub    ecx,esi
  429a18:	mov    DWORD PTR [rax+0x14],ecx
  429a1b:	mov    eax,DWORD PTR [rdi+0x20]
  429a1e:	sub    eax,esi
  429a20:	mov    DWORD PTR [rdi+0x20],eax
  429a23:	add    rax,QWORD PTR [rdi+0x18]
  429a27:	mov    edx,esi
  429a29:	xor    esi,esi
  429a2b:	mov    rdi,rax
  429a2e:	call   406110 <memset@plt>
  429a33:	xor    eax,eax
  429a35:	pop    rcx
  429a36:	ret    
  429a37:	lea    rdi,[rip+0x21ae3]        # 44b521 <flatcc_builder_padding_base@@Base+0x781>
  429a3e:	lea    rsi,[rip+0x2159d]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  429a45:	lea    rcx,[rip+0x21c71]        # 44b6bd <flatcc_builder_padding_base@@Base+0x91d>
  429a4c:	mov    edx,0x3eb
  429a51:	call   406100 <__assert_fail@plt>
  429a56:	lea    rdi,[rip+0x21c9f]        # 44b6fc <flatcc_builder_padding_base@@Base+0x95c>
  429a5d:	lea    rsi,[rip+0x2157e]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  429a64:	lea    rcx,[rip+0x21c52]        # 44b6bd <flatcc_builder_padding_base@@Base+0x91d>
  429a6b:	mov    edx,0x3ec
  429a70:	call   406100 <__assert_fail@plt>
  429a75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429a7f:	nop

0000000000429a80 <flatcc_builder_start_vector@@Base>:
  429a80:	push   r15
  429a82:	push   r14
  429a84:	push   rbx
  429a85:	mov    r14,rcx
  429a88:	mov    r15,rsi
  429a8b:	mov    rbx,rdi
  429a8e:	cmp    edx,0x4
  429a91:	mov    esi,0x4
  429a96:	cmova  esi,edx
  429a99:	call   428d00 <flatcc_builder_start_buffer@@Base+0xe0>
  429a9e:	mov    ecx,eax
  429aa0:	mov    eax,0xffffffff
  429aa5:	test   ecx,ecx
  429aa7:	jne    429af5 <flatcc_builder_start_vector@@Base+0x75>
  429aa9:	mov    rax,QWORD PTR [rbx+0x30]
  429aad:	mov    DWORD PTR [rax+0x10],r15d
  429ab1:	mov    rax,QWORD PTR [rbx+0x30]
  429ab5:	mov    DWORD PTR [rax+0x14],0x0
  429abc:	mov    rax,QWORD PTR [rbx+0x30]
  429ac0:	mov    DWORD PTR [rax+0x18],r14d
  429ac4:	mov    rax,QWORD PTR [rbx+0x30]
  429ac8:	mov    WORD PTR [rax+0xe],0x4
  429ace:	mov    ecx,DWORD PTR [rbx+0x28]
  429ad1:	mov    edx,DWORD PTR [rbx+0x70]
  429ad4:	sub    edx,ecx
  429ad6:	add    rcx,QWORD PTR [rbx+0x68]
  429ada:	mov    QWORD PTR [rbx+0x18],rcx
  429ade:	cmp    edx,0xfffffffc
  429ae1:	mov    ecx,0xfffffffc
  429ae6:	cmovb  ecx,edx
  429ae9:	mov    DWORD PTR [rbx+0x24],ecx
  429aec:	mov    DWORD PTR [rax+0x4],0xfffffffc
  429af3:	xor    eax,eax
  429af5:	pop    rbx
  429af6:	pop    r14
  429af8:	pop    r15
  429afa:	ret    
  429afb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429b00 <flatcc_builder_start_offset_vector@@Base>:
  429b00:	push   rbx
  429b01:	mov    rbx,rdi
  429b04:	mov    esi,0x4
  429b09:	call   428d00 <flatcc_builder_start_buffer@@Base+0xe0>
  429b0e:	mov    ecx,eax
  429b10:	mov    eax,0xffffffff
  429b15:	test   ecx,ecx
  429b17:	je     429b1b <flatcc_builder_start_offset_vector@@Base+0x1b>
  429b19:	pop    rbx
  429b1a:	ret    
  429b1b:	mov    rax,QWORD PTR [rbx+0x30]
  429b1f:	mov    DWORD PTR [rax+0x10],0x4
  429b26:	mov    rax,QWORD PTR [rbx+0x30]
  429b2a:	mov    DWORD PTR [rax+0x14],0x0
  429b31:	mov    rax,QWORD PTR [rbx+0x30]
  429b35:	mov    WORD PTR [rax+0xe],0x5
  429b3b:	mov    ecx,DWORD PTR [rbx+0x28]
  429b3e:	mov    edx,DWORD PTR [rbx+0x70]
  429b41:	sub    edx,ecx
  429b43:	add    rcx,QWORD PTR [rbx+0x68]
  429b47:	mov    QWORD PTR [rbx+0x18],rcx
  429b4b:	cmp    edx,0xfffffffc
  429b4e:	mov    ecx,0xfffffffc
  429b53:	cmovb  ecx,edx
  429b56:	mov    DWORD PTR [rbx+0x24],ecx
  429b59:	mov    DWORD PTR [rax+0x4],0xfffffffc
  429b60:	xor    eax,eax
  429b62:	pop    rbx
  429b63:	ret    
  429b64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429b6e:	xchg   ax,ax

0000000000429b70 <flatcc_builder_create_offset_vector@@Base>:
  429b70:	push   r15
  429b72:	push   r14
  429b74:	push   r12
  429b76:	push   rbx
  429b77:	push   rax
  429b78:	mov    r14,rdx
  429b7b:	mov    r15,rsi
  429b7e:	mov    rbx,rdi
  429b81:	mov    esi,0x4
  429b86:	call   428d00 <flatcc_builder_start_buffer@@Base+0xe0>
  429b8b:	test   eax,eax
  429b8d:	je     429b9d <flatcc_builder_create_offset_vector@@Base+0x2d>
  429b8f:	xor    eax,eax
  429b91:	add    rsp,0x8
  429b95:	pop    rbx
  429b96:	pop    r12
  429b98:	pop    r14
  429b9a:	pop    r15
  429b9c:	ret    
  429b9d:	mov    rax,QWORD PTR [rbx+0x30]
  429ba1:	mov    DWORD PTR [rax+0x10],0x4
  429ba8:	mov    rax,QWORD PTR [rbx+0x30]
  429bac:	mov    DWORD PTR [rax+0x14],0x0
  429bb3:	mov    rax,QWORD PTR [rbx+0x30]
  429bb7:	mov    WORD PTR [rax+0xe],0x5
  429bbd:	mov    ecx,DWORD PTR [rbx+0x28]
  429bc0:	mov    edx,DWORD PTR [rbx+0x70]
  429bc3:	sub    edx,ecx
  429bc5:	add    rcx,QWORD PTR [rbx+0x68]
  429bc9:	mov    QWORD PTR [rbx+0x18],rcx
  429bcd:	cmp    edx,0xfffffffc
  429bd0:	mov    ecx,0xfffffffc
  429bd5:	cmovb  ecx,edx
  429bd8:	mov    DWORD PTR [rbx+0x24],ecx
  429bdb:	mov    DWORD PTR [rax+0x4],0xfffffffc
  429be2:	mov    ecx,DWORD PTR [rax+0x14]
  429be5:	add    ecx,r14d
  429be8:	jb     429c99 <flatcc_builder_create_offset_vector@@Base+0x129>
  429bee:	cmp    ecx,0x40000000
  429bf4:	jae    429c99 <flatcc_builder_create_offset_vector@@Base+0x129>
  429bfa:	mov    DWORD PTR [rax+0x14],ecx
  429bfd:	mov    r12d,DWORD PTR [rbx+0x20]
  429c01:	lea    eax,[r12+r14*4]
  429c05:	mov    DWORD PTR [rbx+0x20],eax
  429c08:	cmp    eax,DWORD PTR [rbx+0x24]
  429c0b:	jae    429c1b <flatcc_builder_create_offset_vector@@Base+0xab>
  429c0d:	mov    rdi,QWORD PTR [rbx+0x18]
  429c11:	add    rdi,r12
  429c14:	jne    429c77 <flatcc_builder_create_offset_vector@@Base+0x107>
  429c16:	jmp    429b8f <flatcc_builder_create_offset_vector@@Base+0x1f>
  429c1b:	add    eax,0x1
  429c1e:	lea    rsi,[rbx+0x68]
  429c22:	mov    rdi,QWORD PTR [rbx+0x40]
  429c26:	mov    edx,DWORD PTR [rbx+0x28]
  429c29:	add    rdx,rax
  429c2c:	mov    ecx,0x1
  429c31:	mov    r8d,0x1
  429c37:	call   QWORD PTR [rbx+0x50]
  429c3a:	test   eax,eax
  429c3c:	jne    429b8f <flatcc_builder_create_offset_vector@@Base+0x1f>
  429c42:	mov    eax,DWORD PTR [rbx+0x28]
  429c45:	mov    rdi,rax
  429c48:	add    rdi,QWORD PTR [rbx+0x68]
  429c4c:	mov    QWORD PTR [rbx+0x18],rdi
  429c50:	mov    ecx,DWORD PTR [rbx+0x70]
  429c53:	sub    ecx,eax
  429c55:	cmp    ecx,0xfffffffc
  429c58:	mov    eax,0xfffffffc
  429c5d:	cmovb  eax,ecx
  429c60:	mov    DWORD PTR [rbx+0x24],eax
  429c63:	mov    rax,QWORD PTR [rbx+0x30]
  429c67:	mov    DWORD PTR [rax+0x4],0xfffffffc
  429c6e:	add    rdi,r12
  429c71:	je     429b8f <flatcc_builder_create_offset_vector@@Base+0x1f>
  429c77:	shl    r14,0x2
  429c7b:	mov    rsi,r15
  429c7e:	mov    rdx,r14
  429c81:	call   4061a0 <memcpy@plt>
  429c86:	mov    rdi,rbx
  429c89:	add    rsp,0x8
  429c8d:	pop    rbx
  429c8e:	pop    r12
  429c90:	pop    r14
  429c92:	pop    r15
  429c94:	jmp    429cc0 <flatcc_builder_end_offset_vector@@Base>
  429c99:	lea    rdi,[rip+0x2240b]        # 44c0ab <flatcc_builder_padding_base@@Base+0x130b>
  429ca0:	lea    rsi,[rip+0x2133b]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  429ca7:	lea    rcx,[rip+0x22418]        # 44c0c6 <flatcc_builder_padding_base@@Base+0x1326>
  429cae:	mov    edx,0x37c
  429cb3:	call   406100 <__assert_fail@plt>
  429cb8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429cc0 <flatcc_builder_end_offset_vector@@Base>:
  429cc0:	push   rbp
  429cc1:	push   rbx
  429cc2:	push   rax
  429cc3:	mov    rax,QWORD PTR [rdi+0x30]
  429cc7:	movzx  ecx,WORD PTR [rax+0xe]
  429ccb:	cmp    ecx,0x5
  429cce:	jne    429d5d <flatcc_builder_end_offset_vector@@Base+0x9d>
  429cd4:	mov    rbx,rdi
  429cd7:	mov    rsi,QWORD PTR [rdi+0x18]
  429cdb:	mov    edx,DWORD PTR [rax+0x14]
  429cde:	xor    ecx,ecx
  429ce0:	call   42ad10 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  429ce5:	mov    ebp,eax
  429ce7:	test   eax,eax
  429ce9:	je     429d54 <flatcc_builder_end_offset_vector@@Base+0x94>
  429ceb:	mov    rdi,QWORD PTR [rbx+0x18]
  429cef:	mov    edx,DWORD PTR [rbx+0x20]
  429cf2:	xor    esi,esi
  429cf4:	call   406110 <memset@plt>
  429cf9:	mov    rax,QWORD PTR [rbx+0x30]
  429cfd:	mov    ecx,DWORD PTR [rax+0x8]
  429d00:	mov    DWORD PTR [rbx+0x20],ecx
  429d03:	mov    ecx,DWORD PTR [rax]
  429d05:	mov    DWORD PTR [rbx+0x28],ecx
  429d08:	mov    edx,DWORD PTR [rax+0x4]
  429d0b:	mov    rsi,rcx
  429d0e:	add    rsi,QWORD PTR [rbx+0x68]
  429d12:	mov    QWORD PTR [rbx+0x18],rsi
  429d16:	mov    esi,DWORD PTR [rbx+0x70]
  429d19:	sub    esi,ecx
  429d1b:	cmp    esi,edx
  429d1d:	cmova  esi,edx
  429d20:	mov    DWORD PTR [rbx+0x24],esi
  429d23:	movzx  ecx,WORD PTR [rbx+0xea]
  429d2a:	cmp    WORD PTR [rbx+0xe8],cx
  429d31:	jae    429d3a <flatcc_builder_end_offset_vector@@Base+0x7a>
  429d33:	mov    WORD PTR [rbx+0xe8],cx
  429d3a:	movzx  ecx,WORD PTR [rax+0xc]
  429d3e:	mov    WORD PTR [rbx+0xea],cx
  429d45:	add    rax,0xffffffffffffffdc
  429d49:	mov    QWORD PTR [rbx+0x30],rax
  429d4d:	add    DWORD PTR [rbx+0x104],0xffffffff
  429d54:	mov    eax,ebp
  429d56:	add    rsp,0x8
  429d5a:	pop    rbx
  429d5b:	pop    rbp
  429d5c:	ret    
  429d5d:	lea    rdi,[rip+0x216b4]        # 44b418 <flatcc_builder_padding_base@@Base+0x678>
  429d64:	lea    rsi,[rip+0x21277]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  429d6b:	lea    rcx,[rip+0x21cd5]        # 44ba47 <flatcc_builder_padding_base@@Base+0xca7>
  429d72:	mov    edx,0x5c8
  429d77:	call   406100 <__assert_fail@plt>
  429d7c:	nop    DWORD PTR [rax+0x0]

0000000000429d80 <flatcc_builder_start_string@@Base>:
  429d80:	push   rbx
  429d81:	mov    rbx,rdi
  429d84:	mov    esi,0x1
  429d89:	call   428d00 <flatcc_builder_start_buffer@@Base+0xe0>
  429d8e:	mov    ecx,eax
  429d90:	mov    eax,0xffffffff
  429d95:	test   ecx,ecx
  429d97:	je     429d9b <flatcc_builder_start_string@@Base+0x1b>
  429d99:	pop    rbx
  429d9a:	ret    
  429d9b:	mov    rax,QWORD PTR [rbx+0x30]
  429d9f:	mov    DWORD PTR [rax+0x10],0x1
  429da6:	mov    rax,QWORD PTR [rbx+0x30]
  429daa:	mov    DWORD PTR [rax+0x14],0x0
  429db1:	mov    rax,QWORD PTR [rbx+0x30]
  429db5:	mov    WORD PTR [rax+0xe],0x6
  429dbb:	mov    ecx,DWORD PTR [rbx+0x28]
  429dbe:	mov    edx,DWORD PTR [rbx+0x70]
  429dc1:	sub    edx,ecx
  429dc3:	add    rcx,QWORD PTR [rbx+0x68]
  429dc7:	mov    QWORD PTR [rbx+0x18],rcx
  429dcb:	cmp    edx,0xfffffffc
  429dce:	mov    ecx,0xfffffffc
  429dd3:	cmovb  ecx,edx
  429dd6:	mov    DWORD PTR [rbx+0x24],ecx
  429dd9:	mov    DWORD PTR [rax+0x4],0xfffffffc
  429de0:	xor    eax,eax
  429de2:	pop    rbx
  429de3:	ret    
  429de4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429dee:	xchg   ax,ax

0000000000429df0 <flatcc_builder_reserve_table@@Base>:
  429df0:	push   r15
  429df2:	push   r14
  429df4:	push   rbx
  429df5:	test   esi,esi
  429df7:	js     429ea4 <flatcc_builder_reserve_table@@Base+0xb4>
  429dfd:	mov    r14d,esi
  429e00:	mov    r15,rdi
  429e03:	mov    rax,QWORD PTR [rdi+0x30]
  429e07:	movzx  ebx,WORD PTR [rax+0x1c]
  429e0b:	add    ebx,ebx
  429e0d:	add    ebx,DWORD PTR [rax+0x10]
  429e10:	lea    edx,[r14+r14*1]
  429e14:	add    edx,0x4
  429e17:	add    rdx,rbx
  429e1a:	cmp    rdx,QWORD PTR [rdi+0x60]
  429e1e:	jbe    429e3c <flatcc_builder_reserve_table@@Base+0x4c>
  429e20:	lea    rsi,[r15+0x58]
  429e24:	mov    rdi,QWORD PTR [r15+0x40]
  429e28:	mov    ecx,0x1
  429e2d:	xor    r8d,r8d
  429e30:	call   QWORD PTR [r15+0x50]
  429e34:	test   eax,eax
  429e36:	jne    429ec3 <flatcc_builder_reserve_table@@Base+0xd3>
  429e3c:	add    rbx,QWORD PTR [r15+0x58]
  429e40:	mov    QWORD PTR [r15+0x8],rbx
  429e44:	je     429e99 <flatcc_builder_reserve_table@@Base+0xa9>
  429e46:	add    r14d,r14d
  429e49:	add    rbx,0x4
  429e4d:	mov    QWORD PTR [r15+0x8],rbx
  429e51:	mov    rax,QWORD PTR [r15+0x30]
  429e55:	mov    ebx,DWORD PTR [rax+0x14]
  429e58:	or     r14d,0x1
  429e5c:	add    r14,rbx
  429e5f:	cmp    r14,QWORD PTR [r15+0x90]
  429e66:	jbe    429e86 <flatcc_builder_reserve_table@@Base+0x96>
  429e68:	lea    rsi,[r15+0x88]
  429e6f:	mov    rdi,QWORD PTR [r15+0x40]
  429e73:	xor    ecx,ecx
  429e75:	mov    r8d,0x3
  429e7b:	mov    rdx,r14
  429e7e:	call   QWORD PTR [r15+0x50]
  429e82:	test   eax,eax
  429e84:	jne    429ec3 <flatcc_builder_reserve_table@@Base+0xd3>
  429e86:	xor    eax,eax
  429e88:	add    rbx,QWORD PTR [r15+0x88]
  429e8f:	mov    QWORD PTR [r15],rbx
  429e92:	sete   al
  429e95:	neg    eax
  429e97:	jmp    429e9e <flatcc_builder_reserve_table@@Base+0xae>
  429e99:	mov    eax,0xffffffff
  429e9e:	pop    rbx
  429e9f:	pop    r14
  429ea1:	pop    r15
  429ea3:	ret    
  429ea4:	lea    rdi,[rip+0x218b4]        # 44b75f <flatcc_builder_padding_base@@Base+0x9bf>
  429eab:	lea    rsi,[rip+0x21130]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  429eb2:	lea    rcx,[rip+0x21865]        # 44b71e <flatcc_builder_padding_base@@Base+0x97e>
  429eb9:	mov    edx,0x429
  429ebe:	call   406100 <__assert_fail@plt>
  429ec3:	lea    rdi,[rip+0x17cb5]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  429eca:	lea    rsi,[rip+0x21111]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  429ed1:	lea    rcx,[rip+0x22104]        # 44bfdc <flatcc_builder_padding_base@@Base+0x123c>
  429ed8:	mov    edx,0x134
  429edd:	call   406100 <__assert_fail@plt>
  429ee2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429eec:	nop    DWORD PTR [rax+0x0]

0000000000429ef0 <flatcc_builder_start_table@@Base>:
  429ef0:	push   rbp
  429ef1:	push   r15
  429ef3:	push   r14
  429ef5:	push   rbx
  429ef6:	push   rax
  429ef7:	mov    r15d,esi
  429efa:	mov    rbx,rdi
  429efd:	mov    esi,0x4
  429f02:	call   428d00 <flatcc_builder_start_buffer@@Base+0xe0>
  429f07:	mov    r14d,0xffffffff
  429f0d:	test   eax,eax
  429f0f:	je     429f1f <flatcc_builder_start_table@@Base+0x2f>
  429f11:	mov    eax,r14d
  429f14:	add    rsp,0x8
  429f18:	pop    rbx
  429f19:	pop    r14
  429f1b:	pop    r15
  429f1d:	pop    rbp
  429f1e:	ret    
  429f1f:	mov    eax,DWORD PTR [rbx+0x8]
  429f22:	sub    eax,DWORD PTR [rbx+0x58]
  429f25:	mov    rcx,QWORD PTR [rbx+0x30]
  429f29:	mov    DWORD PTR [rcx+0x10],eax
  429f2c:	mov    eax,DWORD PTR [rbx]
  429f2e:	sub    eax,DWORD PTR [rbx+0x88]
  429f34:	mov    rcx,QWORD PTR [rbx+0x30]
  429f38:	mov    DWORD PTR [rcx+0x14],eax
  429f3b:	mov    eax,DWORD PTR [rbx+0x14]
  429f3e:	mov    rcx,QWORD PTR [rbx+0x30]
  429f42:	mov    DWORD PTR [rcx+0x18],eax
  429f45:	movzx  eax,WORD PTR [rbx+0x10]
  429f49:	mov    rcx,QWORD PTR [rbx+0x30]
  429f4d:	mov    WORD PTR [rcx+0x1c],ax
  429f51:	mov    DWORD PTR [rbx+0x14],0x2f693b52
  429f58:	mov    WORD PTR [rbx+0x10],0x0
  429f5e:	mov    rax,QWORD PTR [rbx+0x30]
  429f62:	mov    WORD PTR [rax+0xe],0x3
  429f68:	movzx  ebp,WORD PTR [rax+0x1c]
  429f6c:	add    ebp,ebp
  429f6e:	add    ebp,DWORD PTR [rax+0x10]
  429f71:	lea    edx,[r15+r15*1]
  429f75:	add    edx,0x4
  429f78:	add    rdx,rbp
  429f7b:	cmp    rdx,QWORD PTR [rbx+0x60]
  429f7f:	jbe    429f9c <flatcc_builder_start_table@@Base+0xac>
  429f81:	lea    rsi,[rbx+0x58]
  429f85:	mov    rdi,QWORD PTR [rbx+0x40]
  429f89:	mov    ecx,0x1
  429f8e:	xor    r8d,r8d
  429f91:	call   QWORD PTR [rbx+0x50]
  429f94:	test   eax,eax
  429f96:	jne    42a030 <flatcc_builder_start_table@@Base+0x140>
  429f9c:	add    rbp,QWORD PTR [rbx+0x58]
  429fa0:	mov    QWORD PTR [rbx+0x8],rbp
  429fa4:	je     429f11 <flatcc_builder_start_table@@Base+0x21>
  429faa:	add    r15d,r15d
  429fad:	add    rbp,0x4
  429fb1:	mov    QWORD PTR [rbx+0x8],rbp
  429fb5:	mov    rax,QWORD PTR [rbx+0x30]
  429fb9:	mov    ebp,DWORD PTR [rax+0x14]
  429fbc:	or     r15d,0x1
  429fc0:	add    r15,rbp
  429fc3:	cmp    r15,QWORD PTR [rbx+0x90]
  429fca:	jbe    429fe9 <flatcc_builder_start_table@@Base+0xf9>
  429fcc:	lea    rsi,[rbx+0x88]
  429fd3:	mov    rdi,QWORD PTR [rbx+0x40]
  429fd7:	xor    ecx,ecx
  429fd9:	mov    r8d,0x3
  429fdf:	mov    rdx,r15
  429fe2:	call   QWORD PTR [rbx+0x50]
  429fe5:	test   eax,eax
  429fe7:	jne    42a030 <flatcc_builder_start_table@@Base+0x140>
  429fe9:	add    rbp,QWORD PTR [rbx+0x88]
  429ff0:	mov    QWORD PTR [rbx],rbp
  429ff3:	je     429f11 <flatcc_builder_start_table@@Base+0x21>
  429ff9:	mov    eax,DWORD PTR [rbx+0x28]
  429ffc:	mov    rcx,rax
  429fff:	add    rcx,QWORD PTR [rbx+0x68]
  42a003:	mov    QWORD PTR [rbx+0x18],rcx
  42a007:	mov    ecx,DWORD PTR [rbx+0x70]
  42a00a:	sub    ecx,eax
  42a00c:	cmp    ecx,0xfffc
  42a012:	mov    eax,0xfffc
  42a017:	cmovb  eax,ecx
  42a01a:	mov    DWORD PTR [rbx+0x24],eax
  42a01d:	mov    rax,QWORD PTR [rbx+0x30]
  42a021:	mov    DWORD PTR [rax+0x4],0xfffc
  42a028:	xor    r14d,r14d
  42a02b:	jmp    429f11 <flatcc_builder_start_table@@Base+0x21>
  42a030:	lea    rdi,[rip+0x17b48]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  42a037:	lea    rsi,[rip+0x20fa4]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42a03e:	lea    rcx,[rip+0x21f97]        # 44bfdc <flatcc_builder_padding_base@@Base+0x123c>
  42a045:	mov    edx,0x134
  42a04a:	call   406100 <__assert_fail@plt>
  42a04f:	nop

000000000042a050 <flatcc_builder_create_vtable@@Base>:
  42a050:	push   r14
  42a052:	push   rbx
  42a053:	sub    rsp,0x98
  42a05a:	mov    r14,rdi
  42a05d:	mov    QWORD PTR [rsp+0x8],0x0
  42a066:	mov    DWORD PTR [rsp+0x10],0x0
  42a06e:	test   dx,dx
  42a071:	je     42a0d7 <flatcc_builder_create_vtable@@Base+0x87>
  42a073:	movzx  r8d,dx
  42a077:	mov    QWORD PTR [rsp+0x8],r8
  42a07c:	mov    QWORD PTR [rsp+0x18],rsi
  42a081:	mov    QWORD PTR [rsp+0x20],r8
  42a086:	mov    DWORD PTR [rsp+0x10],0x1
  42a08e:	mov    edx,0x1
  42a093:	cmp    DWORD PTR [r14+0x100],0x0
  42a09b:	jne    42a0e6 <flatcc_builder_create_vtable@@Base+0x96>
  42a09d:	cmp    DWORD PTR [r14+0x124],0x0
  42a0a5:	jne    42a0e6 <flatcc_builder_create_vtable@@Base+0x96>
  42a0a7:	mov    ebx,DWORD PTR [r14+0xf4]
  42a0ae:	lea    eax,[r8+rbx*1]
  42a0b2:	mov    DWORD PTR [r14+0xf4],eax
  42a0b9:	mov    rdi,QWORD PTR [r14+0x38]
  42a0bd:	lea    rsi,[rsp+0x18]
  42a0c2:	mov    ecx,ebx
  42a0c4:	call   QWORD PTR [r14+0x48]
  42a0c8:	test   eax,eax
  42a0ca:	jne    42a17b <flatcc_builder_create_vtable@@Base+0x12b>
  42a0d0:	add    ebx,0x1
  42a0d3:	jne    42a130 <flatcc_builder_create_vtable@@Base+0xe0>
  42a0d5:	jmp    42a12e <flatcc_builder_create_vtable@@Base+0xde>
  42a0d7:	xor    edx,edx
  42a0d9:	xor    r8d,r8d
  42a0dc:	cmp    DWORD PTR [r14+0x100],0x0
  42a0e4:	je     42a09d <flatcc_builder_create_vtable@@Base+0x4d>
  42a0e6:	cmp    r8,0x11
  42a0ea:	setb   al
  42a0ed:	lea    rcx,[r8-0x10]
  42a0f1:	shr    rcx,0x20
  42a0f5:	sete   cl
  42a0f8:	test   r8d,r8d
  42a0fb:	je     42a13d <flatcc_builder_create_vtable@@Base+0xed>
  42a0fd:	or     al,cl
  42a0ff:	je     42a13d <flatcc_builder_create_vtable@@Base+0xed>
  42a101:	mov    ebx,DWORD PTR [r14+0xf0]
  42a108:	sub    ebx,r8d
  42a10b:	mov    rdi,QWORD PTR [r14+0x38]
  42a10f:	lea    rsi,[rsp+0x18]
  42a114:	mov    ecx,ebx
  42a116:	call   QWORD PTR [r14+0x48]
  42a11a:	test   eax,eax
  42a11c:	jne    42a15c <flatcc_builder_create_vtable@@Base+0x10c>
  42a11e:	mov    DWORD PTR [r14+0xf0],ebx
  42a125:	test   ebx,ebx
  42a127:	je     42a12e <flatcc_builder_create_vtable@@Base+0xde>
  42a129:	add    ebx,0x1
  42a12c:	jmp    42a130 <flatcc_builder_create_vtable@@Base+0xe0>
  42a12e:	xor    ebx,ebx
  42a130:	mov    eax,ebx
  42a132:	add    rsp,0x98
  42a139:	pop    rbx
  42a13a:	pop    r14
  42a13c:	ret    
  42a13d:	lea    rdi,[rip+0x17a3b]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  42a144:	lea    rsi,[rip+0x20e97]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42a14b:	lea    rcx,[rip+0x21f0f]        # 44c061 <flatcc_builder_padding_base@@Base+0x12c1>
  42a152:	mov    edx,0x287
  42a157:	call   406100 <__assert_fail@plt>
  42a15c:	lea    rdi,[rip+0x17a1c]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  42a163:	lea    rsi,[rip+0x20e78]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42a16a:	lea    rcx,[rip+0x21ef0]        # 44c061 <flatcc_builder_padding_base@@Base+0x12c1>
  42a171:	mov    edx,0x28b
  42a176:	call   406100 <__assert_fail@plt>
  42a17b:	lea    rdi,[rip+0x179fd]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  42a182:	lea    rsi,[rip+0x20e59]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42a189:	lea    rcx,[rip+0x21f8d]        # 44c11d <flatcc_builder_padding_base@@Base+0x137d>
  42a190:	mov    edx,0x2a5
  42a195:	call   406100 <__assert_fail@plt>
  42a19a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a1a0 <flatcc_builder_create_cached_vtable@@Base>:
  42a1a0:	push   rbp
  42a1a1:	push   r15
  42a1a3:	push   r14
  42a1a5:	push   r13
  42a1a7:	push   r12
  42a1a9:	push   rbx
  42a1aa:	sub    rsp,0x28
  42a1ae:	mov    r15d,ecx
  42a1b1:	mov    r8d,edx
  42a1b4:	mov    QWORD PTR [rsp+0x18],rsi
  42a1b9:	mov    r13,rdi
  42a1bc:	mov    rax,QWORD PTR [rdi+0xd8]
  42a1c3:	test   rax,rax
  42a1c6:	je     42a29a <flatcc_builder_create_cached_vtable@@Base+0xfa>
  42a1cc:	mov    ecx,0x20
  42a1d1:	sub    ecx,eax
  42a1d3:	shrx   r15d,r15d,ecx
  42a1d8:	shl    r15,0x2
  42a1dc:	add    r15,QWORD PTR [r13+0xa8]
  42a1e3:	je     42a36a <flatcc_builder_create_cached_vtable@@Base+0x1ca>
  42a1e9:	mov    ebp,DWORD PTR [r15]
  42a1ec:	test   ebp,ebp
  42a1ee:	je     42a372 <flatcc_builder_create_cached_vtable@@Base+0x1d2>
  42a1f4:	mov    rbx,QWORD PTR [r13+0x78]
  42a1f8:	mov    QWORD PTR [rsp+0x10],r13
  42a1fd:	mov    r13,QWORD PTR [r13+0xb8]
  42a204:	movzx  eax,r8w
  42a208:	mov    QWORD PTR [rsp+0x20],rax
  42a20d:	xor    eax,eax
  42a20f:	mov    QWORD PTR [rsp],rax
  42a213:	mov    QWORD PTR [rsp+0x8],r15
  42a218:	mov    r14,r15
  42a21b:	nop    DWORD PTR [rax+rax*1+0x0]
  42a220:	mov    eax,ebp
  42a222:	lea    r15,[rax+r13*1]
  42a226:	mov    esi,DWORD PTR [r13+rax*1+0x8]
  42a22b:	cmp    WORD PTR [rbx+rsi*1],r8w
  42a230:	jne    42a24e <flatcc_builder_create_cached_vtable@@Base+0xae>
  42a232:	add    rsi,rbx
  42a235:	mov    rdi,QWORD PTR [rsp+0x18]
  42a23a:	mov    rdx,QWORD PTR [rsp+0x20]
  42a23f:	mov    r12d,r8d
  42a242:	call   406140 <memcmp@plt>
  42a247:	mov    r8d,r12d
  42a24a:	test   eax,eax
  42a24c:	je     42a25f <flatcc_builder_create_cached_vtable@@Base+0xbf>
  42a24e:	mov    ebp,DWORD PTR [r15+0xc]
  42a252:	add    r15,0xc
  42a256:	mov    r14,r15
  42a259:	test   ebp,ebp
  42a25b:	jne    42a220 <flatcc_builder_create_cached_vtable@@Base+0x80>
  42a25d:	jmp    42a28b <flatcc_builder_create_cached_vtable@@Base+0xeb>
  42a25f:	mov    eax,DWORD PTR [r15+0x4]
  42a263:	mov    rcx,QWORD PTR [rsp+0x10]
  42a268:	cmp    eax,DWORD PTR [rcx+0x100]
  42a26e:	je     42a4d4 <flatcc_builder_create_cached_vtable@@Base+0x334>
  42a274:	lea    r14,[r15+0xc]
  42a278:	mov    ebp,DWORD PTR [r15+0xc]
  42a27c:	mov    rax,r15
  42a27f:	mov    QWORD PTR [rsp],r15
  42a283:	test   ebp,ebp
  42a285:	jne    42a220 <flatcc_builder_create_cached_vtable@@Base+0x80>
  42a287:	mov    QWORD PTR [rsp],r15
  42a28b:	mov    r13,QWORD PTR [rsp+0x10]
  42a290:	mov    r15,QWORD PTR [rsp+0x8]
  42a295:	jmp    42a378 <flatcc_builder_create_cached_vtable@@Base+0x1d8>
  42a29a:	cmp    DWORD PTR [r13+0xe4],0x0
  42a2a2:	jne    42a511 <flatcc_builder_create_cached_vtable@@Base+0x371>
  42a2a8:	lea    rbx,[r13+0xb8]
  42a2af:	cmp    QWORD PTR [r13+0xc0],0xf
  42a2b7:	ja     42a2df <flatcc_builder_create_cached_vtable@@Base+0x13f>
  42a2b9:	mov    rdi,QWORD PTR [r13+0x40]
  42a2bd:	mov    edx,0x10
  42a2c2:	xor    ecx,ecx
  42a2c4:	mov    ebp,r8d
  42a2c7:	mov    r8d,0x6
  42a2cd:	mov    rsi,rbx
  42a2d0:	call   QWORD PTR [r13+0x50]
  42a2d4:	mov    r8d,ebp
  42a2d7:	test   eax,eax
  42a2d9:	jne    42a4f2 <flatcc_builder_create_cached_vtable@@Base+0x352>
  42a2df:	xor    r12d,r12d
  42a2e2:	cmp    QWORD PTR [rbx],0x0
  42a2e6:	je     42a4ba <flatcc_builder_create_cached_vtable@@Base+0x31a>
  42a2ec:	mov    ebx,r8d
  42a2ef:	lea    rsi,[r13+0xa8]
  42a2f6:	mov    DWORD PTR [r13+0xe4],0x10
  42a301:	mov    rdi,QWORD PTR [r13+0x40]
  42a305:	mov    edx,0x100
  42a30a:	mov    ecx,0x1
  42a30f:	mov    r8d,0x5
  42a315:	call   QWORD PTR [r13+0x50]
  42a319:	test   eax,eax
  42a31b:	jne    42a4ba <flatcc_builder_create_cached_vtable@@Base+0x31a>
  42a321:	mov    rax,QWORD PTR [r13+0xb0]
  42a328:	mov    edx,0x100
  42a32d:	nop    DWORD PTR [rax]
  42a330:	mov    rcx,rdx
  42a333:	lea    rdx,[rdx+rdx*1]
  42a337:	cmp    rdx,rax
  42a33a:	jbe    42a330 <flatcc_builder_create_cached_vtable@@Base+0x190>
  42a33c:	shr    rcx,0x2
  42a340:	mov    rax,0xffffffffffffffff
  42a347:	mov    edx,0x1
  42a34c:	mov    r8d,ebx
  42a34f:	nop
  42a350:	add    rax,0x1
  42a354:	shlx   rsi,rdx,rax
  42a359:	cmp    rsi,rcx
  42a35c:	jb     42a350 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  42a35e:	mov    QWORD PTR [r13+0xd8],rax
  42a365:	jmp    42a1cc <flatcc_builder_create_cached_vtable@@Base+0x2c>
  42a36a:	xor    r12d,r12d
  42a36d:	jmp    42a4ba <flatcc_builder_create_cached_vtable@@Base+0x31a>
  42a372:	xor    eax,eax
  42a374:	mov    QWORD PTR [rsp],rax
  42a378:	mov    ebp,DWORD PTR [r13+0xe4]
  42a37f:	lea    rbx,[r13+0xb8]
  42a386:	lea    rdx,[rbp+0x10]
  42a38a:	cmp    rdx,QWORD PTR [r13+0xc0]
  42a391:	jbe    42a3b4 <flatcc_builder_create_cached_vtable@@Base+0x214>
  42a393:	mov    rdi,QWORD PTR [r13+0x40]
  42a397:	xor    ecx,ecx
  42a399:	mov    r14d,r8d
  42a39c:	mov    r8d,0x6
  42a3a2:	mov    rsi,rbx
  42a3a5:	call   QWORD PTR [r13+0x50]
  42a3a9:	mov    r8d,r14d
  42a3ac:	test   eax,eax
  42a3ae:	jne    42a4f2 <flatcc_builder_create_cached_vtable@@Base+0x352>
  42a3b4:	xor    r12d,r12d
  42a3b7:	add    rbp,QWORD PTR [rbx]
  42a3ba:	je     42a4ba <flatcc_builder_create_cached_vtable@@Base+0x31a>
  42a3c0:	mov    eax,DWORD PTR [r13+0xe4]
  42a3c7:	mov    ecx,DWORD PTR [r13+0x100]
  42a3ce:	lea    edx,[rax+0x10]
  42a3d1:	mov    DWORD PTR [r13+0xe4],edx
  42a3d8:	mov    DWORD PTR [rbp+0x4],ecx
  42a3db:	mov    ecx,DWORD PTR [r15]
  42a3de:	mov    DWORD PTR [rbp+0xc],ecx
  42a3e1:	mov    DWORD PTR [r15],eax
  42a3e4:	movzx  ebx,r8w
  42a3e8:	mov    rdi,r13
  42a3eb:	mov    rsi,QWORD PTR [rsp+0x18]
  42a3f0:	mov    edx,ebx
  42a3f2:	call   42a050 <flatcc_builder_create_vtable@@Base>
  42a3f7:	mov    DWORD PTR [rbp+0x0],eax
  42a3fa:	test   eax,eax
  42a3fc:	je     42a4ba <flatcc_builder_create_cached_vtable@@Base+0x31a>
  42a402:	mov    rax,QWORD PTR [rsp]
  42a406:	test   rax,rax
  42a409:	je     42a416 <flatcc_builder_create_cached_vtable@@Base+0x276>
  42a40b:	mov    eax,DWORD PTR [rax+0x8]
  42a40e:	mov    DWORD PTR [rbp+0x8],eax
  42a411:	jmp    42a4b6 <flatcc_builder_create_cached_vtable@@Base+0x316>
  42a416:	mov    rax,QWORD PTR [r13+0x118]
  42a41d:	mov    r14d,DWORD PTR [r13+0xe0]
  42a424:	test   rax,rax
  42a427:	je     42a464 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  42a429:	lea    ecx,[r14+rbx*1]
  42a42d:	cmp    rax,rcx
  42a430:	jae    42a464 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  42a432:	cmp    QWORD PTR [r13+0xd8],0x0
  42a43a:	je     42a4b6 <flatcc_builder_create_cached_vtable@@Base+0x316>
  42a43c:	mov    rdi,QWORD PTR [r13+0xa8]
  42a443:	mov    rdx,QWORD PTR [r13+0xb0]
  42a44a:	xor    esi,esi
  42a44c:	call   406110 <memset@plt>
  42a451:	movabs rax,0x1000000000
  42a45b:	mov    QWORD PTR [r13+0xe0],rax
  42a462:	jmp    42a4b6 <flatcc_builder_create_cached_vtable@@Base+0x316>
  42a464:	lea    r15,[r13+0x78]
  42a468:	lea    rdx,[r14+rbx*1]
  42a46c:	cmp    rdx,QWORD PTR [r13+0x80]
  42a473:	jbe    42a48c <flatcc_builder_create_cached_vtable@@Base+0x2ec>
  42a475:	mov    rdi,QWORD PTR [r13+0x40]
  42a479:	xor    ecx,ecx
  42a47b:	mov    r8d,0x2
  42a481:	mov    rsi,r15
  42a484:	call   QWORD PTR [r13+0x50]
  42a488:	test   eax,eax
  42a48a:	jne    42a4f2 <flatcc_builder_create_cached_vtable@@Base+0x352>
  42a48c:	add    r14,QWORD PTR [r15]
  42a48f:	je     42a4cc <flatcc_builder_create_cached_vtable@@Base+0x32c>
  42a491:	mov    eax,DWORD PTR [r13+0xe0]
  42a498:	mov    DWORD PTR [rbp+0x8],eax
  42a49b:	mov    ecx,ebx
  42a49d:	add    ecx,eax
  42a49f:	mov    DWORD PTR [r13+0xe0],ecx
  42a4a6:	mov    rdi,r14
  42a4a9:	mov    rsi,QWORD PTR [rsp+0x18]
  42a4ae:	mov    rdx,rbx
  42a4b1:	call   4061a0 <memcpy@plt>
  42a4b6:	mov    r12d,DWORD PTR [rbp+0x0]
  42a4ba:	mov    eax,r12d
  42a4bd:	add    rsp,0x28
  42a4c1:	pop    rbx
  42a4c2:	pop    r12
  42a4c4:	pop    r13
  42a4c6:	pop    r14
  42a4c8:	pop    r15
  42a4ca:	pop    rbp
  42a4cb:	ret    
  42a4cc:	mov    r12d,0xffffffff
  42a4d2:	jmp    42a4ba <flatcc_builder_create_cached_vtable@@Base+0x31a>
  42a4d4:	mov    rcx,QWORD PTR [rsp+0x8]
  42a4d9:	cmp    r14,rcx
  42a4dc:	je     42a4ed <flatcc_builder_create_cached_vtable@@Base+0x34d>
  42a4de:	mov    eax,DWORD PTR [r15+0xc]
  42a4e2:	mov    DWORD PTR [r14],eax
  42a4e5:	mov    eax,DWORD PTR [rcx]
  42a4e7:	mov    DWORD PTR [r15+0xc],eax
  42a4eb:	mov    DWORD PTR [rcx],ebp
  42a4ed:	mov    r12d,DWORD PTR [r15]
  42a4f0:	jmp    42a4ba <flatcc_builder_create_cached_vtable@@Base+0x31a>
  42a4f2:	lea    rdi,[rip+0x17686]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  42a4f9:	lea    rsi,[rip+0x20ae2]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42a500:	lea    rcx,[rip+0x21ad5]        # 44bfdc <flatcc_builder_padding_base@@Base+0x123c>
  42a507:	mov    edx,0x134
  42a50c:	call   406100 <__assert_fail@plt>
  42a511:	lea    rdi,[rip+0x21c4e]        # 44c166 <flatcc_builder_padding_base@@Base+0x13c6>
  42a518:	lea    rsi,[rip+0x20ac3]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42a51f:	lea    rcx,[rip+0x21c4f]        # 44c175 <flatcc_builder_padding_base@@Base+0x13d5>
  42a526:	mov    edx,0x156
  42a52b:	call   406100 <__assert_fail@plt>

000000000042a530 <flatcc_builder_create_table@@Base>:
  42a530:	push   rbp
  42a531:	push   r14
  42a533:	push   rbx
  42a534:	sub    rsp,0xa0
  42a53b:	test   r9d,r9d
  42a53e:	js     42a755 <flatcc_builder_create_table@@Base+0x225>
  42a544:	mov    r14,rdi
  42a547:	mov    edi,DWORD PTR [rsp+0xc0]
  42a54e:	test   dil,0x1
  42a552:	je     42a774 <flatcc_builder_create_table@@Base+0x244>
  42a558:	movzx  ecx,cx
  42a55b:	cmp    ecx,0x4
  42a55e:	mov    eax,0x4
  42a563:	cmova  eax,ecx
  42a566:	cmp    WORD PTR [r14+0xe8],ax
  42a56e:	jae    42a578 <flatcc_builder_create_table@@Base+0x48>
  42a570:	mov    WORD PTR [r14+0xe8],ax
  42a578:	mov    ebp,DWORD PTR [r14+0xf0]
  42a57f:	mov    ecx,ebp
  42a581:	sub    ecx,edx
  42a583:	movzx  r10d,ax
  42a587:	add    r10d,0xffffffff
  42a58b:	and    r10d,ecx
  42a58e:	mov    ecx,0xfffffffc
  42a593:	mov    ebx,0xfffffffc
  42a598:	sub    ebx,edx
  42a59a:	add    edi,r10d
  42a59d:	lea    eax,[rbx+rbp*1]
  42a5a0:	add    eax,0x1
  42a5a3:	sub    eax,edi
  42a5a5:	mov    DWORD PTR [rsp+0xc],eax
  42a5a9:	test   r9d,r9d
  42a5ac:	jle    42a657 <flatcc_builder_create_table@@Base+0x127>
  42a5b2:	add    ebx,ebp
  42a5b4:	sub    ebx,r10d
  42a5b7:	sub    ecx,ebx
  42a5b9:	mov    edi,r9d
  42a5bc:	lea    rax,[rdi-0x1]
  42a5c0:	mov    r9d,edi
  42a5c3:	and    r9d,0x3
  42a5c7:	cmp    rax,0x3
  42a5cb:	jae    42a5d9 <flatcc_builder_create_table@@Base+0xa9>
  42a5cd:	xor    ebx,ebx
  42a5cf:	test   r9,r9
  42a5d2:	jne    42a62d <flatcc_builder_create_table@@Base+0xfd>
  42a5d4:	jmp    42a657 <flatcc_builder_create_table@@Base+0x127>
  42a5d9:	sub    rdi,r9
  42a5dc:	xor    ebx,ebx
  42a5de:	xchg   ax,ax
  42a5e0:	movzx  eax,WORD PTR [r8+rbx*2]
  42a5e5:	mov    ebp,DWORD PTR [rax+rsi*1]
  42a5e8:	add    ebp,ecx
  42a5ea:	sub    ebp,eax
  42a5ec:	mov    DWORD PTR [rax+rsi*1],ebp
  42a5ef:	movzx  eax,WORD PTR [r8+rbx*2+0x2]
  42a5f5:	mov    ebp,DWORD PTR [rax+rsi*1]
  42a5f8:	add    ebp,ecx
  42a5fa:	sub    ebp,eax
  42a5fc:	mov    DWORD PTR [rax+rsi*1],ebp
  42a5ff:	movzx  eax,WORD PTR [r8+rbx*2+0x4]
  42a605:	mov    ebp,DWORD PTR [rax+rsi*1]
  42a608:	add    ebp,ecx
  42a60a:	sub    ebp,eax
  42a60c:	mov    DWORD PTR [rax+rsi*1],ebp
  42a60f:	movzx  eax,WORD PTR [r8+rbx*2+0x6]
  42a615:	mov    ebp,DWORD PTR [rax+rsi*1]
  42a618:	add    ebp,ecx
  42a61a:	sub    ebp,eax
  42a61c:	mov    DWORD PTR [rax+rsi*1],ebp
  42a61f:	add    rbx,0x4
  42a623:	cmp    rdi,rbx
  42a626:	jne    42a5e0 <flatcc_builder_create_table@@Base+0xb0>
  42a628:	test   r9,r9
  42a62b:	je     42a657 <flatcc_builder_create_table@@Base+0x127>
  42a62d:	lea    rdi,[r8+rbx*2]
  42a631:	xor    ebx,ebx
  42a633:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a63d:	nop    DWORD PTR [rax]
  42a640:	movzx  eax,WORD PTR [rdi+rbx*2]
  42a644:	mov    ebp,DWORD PTR [rax+rsi*1]
  42a647:	add    ebp,ecx
  42a649:	sub    ebp,eax
  42a64b:	mov    DWORD PTR [rax+rsi*1],ebp
  42a64e:	add    rbx,0x1
  42a652:	cmp    r9,rbx
  42a655:	jne    42a640 <flatcc_builder_create_table@@Base+0x110>
  42a657:	mov    QWORD PTR [rsp+0x10],0x4
  42a660:	lea    rax,[rsp+0xc]
  42a665:	mov    QWORD PTR [rsp+0x20],rax
  42a66a:	mov    QWORD PTR [rsp+0x28],0x4
  42a673:	mov    DWORD PTR [rsp+0x18],0x1
  42a67b:	test   rdx,rdx
  42a67e:	je     42a720 <flatcc_builder_create_table@@Base+0x1f0>
  42a684:	lea    r8,[rdx+0x4]
  42a688:	mov    QWORD PTR [rsp+0x10],r8
  42a68d:	mov    QWORD PTR [rsp+0x30],rsi
  42a692:	mov    QWORD PTR [rsp+0x38],rdx
  42a697:	mov    DWORD PTR [rsp+0x18],0x2
  42a69f:	mov    edx,0x2
  42a6a4:	test   r10d,r10d
  42a6a7:	je     42a6cf <flatcc_builder_create_table@@Base+0x19f>
  42a6a9:	add    r8,r10
  42a6ac:	mov    QWORD PTR [rsp+0x10],r8
  42a6b1:	mov    eax,edx
  42a6b3:	shl    rax,0x4
  42a6b7:	lea    rcx,[rip+0x206e2]        # 44ada0 <flatcc_builder_padding_base@@Base>
  42a6be:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
  42a6c3:	mov    QWORD PTR [rsp+rax*1+0x28],r10
  42a6c8:	add    edx,0x1
  42a6cb:	mov    DWORD PTR [rsp+0x18],edx
  42a6cf:	cmp    r8,0x11
  42a6d3:	setb   al
  42a6d6:	lea    rcx,[r8-0x10]
  42a6da:	shr    rcx,0x20
  42a6de:	sete   cl
  42a6e1:	test   r8d,r8d
  42a6e4:	jle    42a736 <flatcc_builder_create_table@@Base+0x206>
  42a6e6:	or     al,cl
  42a6e8:	je     42a736 <flatcc_builder_create_table@@Base+0x206>
  42a6ea:	mov    ebp,DWORD PTR [r14+0xf0]
  42a6f1:	sub    ebp,r8d
  42a6f4:	mov    rdi,QWORD PTR [r14+0x38]
  42a6f8:	lea    rsi,[rsp+0x20]
  42a6fd:	mov    ecx,ebp
  42a6ff:	call   QWORD PTR [r14+0x48]
  42a703:	test   eax,eax
  42a705:	jne    42a793 <flatcc_builder_create_table@@Base+0x263>
  42a70b:	mov    DWORD PTR [r14+0xf0],ebp
  42a712:	mov    eax,ebp
  42a714:	add    rsp,0xa0
  42a71b:	pop    rbx
  42a71c:	pop    r14
  42a71e:	pop    rbp
  42a71f:	ret    
  42a720:	mov    edx,0x1
  42a725:	mov    r8d,0x4
  42a72b:	test   r10d,r10d
  42a72e:	jne    42a6a9 <flatcc_builder_create_table@@Base+0x179>
  42a734:	jmp    42a6cf <flatcc_builder_create_table@@Base+0x19f>
  42a736:	lea    rdi,[rip+0x17442]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  42a73d:	lea    rsi,[rip+0x2089e]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42a744:	lea    rcx,[rip+0x21916]        # 44c061 <flatcc_builder_padding_base@@Base+0x12c1>
  42a74b:	mov    edx,0x287
  42a750:	call   406100 <__assert_fail@plt>
  42a755:	lea    rdi,[rip+0x20ffc]        # 44b758 <flatcc_builder_padding_base@@Base+0x9b8>
  42a75c:	lea    rsi,[rip+0x2087f]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42a763:	lea    rcx,[rip+0x21000]        # 44b76a <flatcc_builder_padding_base@@Base+0x9ca>
  42a76a:	mov    edx,0x4d5
  42a76f:	call   406100 <__assert_fail@plt>
  42a774:	lea    rdi,[rip+0x2108b]        # 44b806 <flatcc_builder_padding_base@@Base+0xa66>
  42a77b:	lea    rsi,[rip+0x20860]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42a782:	lea    rcx,[rip+0x20fe1]        # 44b76a <flatcc_builder_padding_base@@Base+0x9ca>
  42a789:	mov    edx,0x4db
  42a78e:	call   406100 <__assert_fail@plt>
  42a793:	lea    rdi,[rip+0x173e5]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  42a79a:	lea    rsi,[rip+0x20841]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42a7a1:	lea    rcx,[rip+0x218b9]        # 44c061 <flatcc_builder_padding_base@@Base+0x12c1>
  42a7a8:	mov    edx,0x28b
  42a7ad:	call   406100 <__assert_fail@plt>
  42a7b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a7bc:	nop    DWORD PTR [rax+0x0]

000000000042a7c0 <flatcc_builder_check_required_field@@Base>:
  42a7c0:	mov    rax,QWORD PTR [rdi+0x30]
  42a7c4:	movzx  eax,WORD PTR [rax+0xe]
  42a7c8:	cmp    eax,0x3
  42a7cb:	jne    42a7e7 <flatcc_builder_check_required_field@@Base+0x27>
  42a7cd:	xor    eax,eax
  42a7cf:	cmp    WORD PTR [rdi+0x10],si
  42a7d3:	jbe    42a7e6 <flatcc_builder_check_required_field@@Base+0x26>
  42a7d5:	mov    rcx,QWORD PTR [rdi+0x8]
  42a7d9:	movzx  edx,si
  42a7dc:	xor    eax,eax
  42a7de:	cmp    WORD PTR [rcx+rdx*2],0x0
  42a7e3:	setne  al
  42a7e6:	ret    
  42a7e7:	push   rax
  42a7e8:	lea    rdi,[rip+0x21022]        # 44b811 <flatcc_builder_padding_base@@Base+0xa71>
  42a7ef:	lea    rsi,[rip+0x207ec]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42a7f6:	lea    rcx,[rip+0x2103f]        # 44b83c <flatcc_builder_padding_base@@Base+0xa9c>
  42a7fd:	mov    edx,0x4f8
  42a802:	call   406100 <__assert_fail@plt>
  42a807:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a810 <flatcc_builder_check_union_field@@Base>:
  42a810:	mov    rax,QWORD PTR [rdi+0x30]
  42a814:	movzx  eax,WORD PTR [rax+0xe]
  42a818:	cmp    eax,0x3
  42a81b:	jne    42a86e <flatcc_builder_check_union_field@@Base+0x5e>
  42a81d:	test   si,si
  42a820:	je     42a851 <flatcc_builder_check_union_field@@Base+0x41>
  42a822:	cmp    WORD PTR [rdi+0x10],si
  42a826:	jbe    42a857 <flatcc_builder_check_union_field@@Base+0x47>
  42a828:	movzx  eax,si
  42a82b:	mov    rcx,QWORD PTR [rdi+0x8]
  42a82f:	movzx  edx,WORD PTR [rcx+rax*2-0x2]
  42a834:	test   rdx,rdx
  42a837:	je     42a85d <flatcc_builder_check_union_field@@Base+0x4d>
  42a839:	mov    rsi,QWORD PTR [rdi+0x18]
  42a83d:	cmp    BYTE PTR [rsi+rdx*1],0x0
  42a841:	movzx  eax,WORD PTR [rcx+rax*2]
  42a845:	je     42a864 <flatcc_builder_check_union_field@@Base+0x54>
  42a847:	test   ax,ax
  42a84a:	setne  al
  42a84d:	movzx  eax,al
  42a850:	ret    
  42a851:	xor    eax,eax
  42a853:	movzx  eax,al
  42a856:	ret    
  42a857:	xor    eax,eax
  42a859:	movzx  eax,al
  42a85c:	ret    
  42a85d:	cmp    WORD PTR [rcx+rax*2],0x0
  42a862:	jmp    42a867 <flatcc_builder_check_union_field@@Base+0x57>
  42a864:	test   ax,ax
  42a867:	sete   al
  42a86a:	movzx  eax,al
  42a86d:	ret    
  42a86e:	push   rax
  42a86f:	lea    rdi,[rip+0x20f9b]        # 44b811 <flatcc_builder_padding_base@@Base+0xa71>
  42a876:	lea    rsi,[rip+0x20765]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42a87d:	lea    rcx,[rip+0x2100b]        # 44b88f <flatcc_builder_padding_base@@Base+0xaef>
  42a884:	mov    edx,0x4ff
  42a889:	call   406100 <__assert_fail@plt>
  42a88e:	xchg   ax,ax

000000000042a890 <flatcc_builder_check_required@@Base>:
  42a890:	mov    rax,QWORD PTR [rdi+0x30]
  42a894:	movzx  eax,WORD PTR [rax+0xe]
  42a898:	cmp    eax,0x3
  42a89b:	jne    42a8d8 <flatcc_builder_check_required@@Base+0x48>
  42a89d:	movzx  ecx,WORD PTR [rdi+0x10]
  42a8a1:	xor    eax,eax
  42a8a3:	cmp    ecx,edx
  42a8a5:	jl     42a8d4 <flatcc_builder_check_required@@Base+0x44>
  42a8a7:	mov    eax,0x1
  42a8ac:	test   edx,edx
  42a8ae:	jle    42a8d4 <flatcc_builder_check_required@@Base+0x44>
  42a8b0:	mov    rcx,QWORD PTR [rdi+0x8]
  42a8b4:	movsxd r8,edx
  42a8b7:	xor    edi,edi
  42a8b9:	nop    DWORD PTR [rax+0x0]
  42a8c0:	movzx  edx,WORD PTR [rsi+rdi*2]
  42a8c4:	cmp    WORD PTR [rcx+rdx*2],0x0
  42a8c9:	je     42a8d5 <flatcc_builder_check_required@@Base+0x45>
  42a8cb:	add    rdi,0x1
  42a8cf:	cmp    rdi,r8
  42a8d2:	jl     42a8c0 <flatcc_builder_check_required@@Base+0x30>
  42a8d4:	ret    
  42a8d5:	xor    eax,eax
  42a8d7:	ret    
  42a8d8:	push   rax
  42a8d9:	lea    rdi,[rip+0x20f31]        # 44b811 <flatcc_builder_padding_base@@Base+0xa71>
  42a8e0:	lea    rsi,[rip+0x206fb]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42a8e7:	lea    rcx,[rip+0x20ff1]        # 44b8df <flatcc_builder_padding_base@@Base+0xb3f>
  42a8ee:	mov    edx,0x511
  42a8f3:	call   406100 <__assert_fail@plt>
  42a8f8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a900 <flatcc_builder_end_table@@Base>:
  42a900:	push   rbp
  42a901:	push   r15
  42a903:	push   r14
  42a905:	push   r12
  42a907:	push   rbx
  42a908:	sub    rsp,0x10
  42a90c:	mov    rax,QWORD PTR [rdi+0x30]
  42a910:	movzx  eax,WORD PTR [rax+0xe]
  42a914:	cmp    eax,0x3
  42a917:	jne    42aa68 <flatcc_builder_end_table@@Base+0x168>
  42a91d:	mov    rbx,rdi
  42a920:	mov    rax,QWORD PTR [rdi+0x8]
  42a924:	mov    ecx,DWORD PTR [rdi+0x10]
  42a927:	lea    ecx,[rcx+rcx*1]
  42a92a:	add    ecx,0x4
  42a92d:	mov    WORD PTR [rax-0x4],cx
  42a931:	mov    edx,DWORD PTR [rdi+0x20]
  42a934:	add    edx,0x4
  42a937:	mov    WORD PTR [rax-0x2],dx
  42a93b:	lea    r12,[rax-0x4]
  42a93f:	movzx  ebp,cx
  42a942:	mov    eax,DWORD PTR [rdi+0x14]
  42a945:	xor    eax,ebp
  42a947:	imul   eax,eax,0x9e3779b1
  42a94d:	movzx  ecx,dx
  42a950:	xor    ecx,eax
  42a952:	imul   ecx,ecx,0x9e3779b1
  42a958:	mov    DWORD PTR [rdi+0x14],ecx
  42a95b:	mov    rsi,r12
  42a95e:	mov    edx,ebp
  42a960:	call   42a1a0 <flatcc_builder_create_cached_vtable@@Base>
  42a965:	test   eax,eax
  42a967:	je     42aa55 <flatcc_builder_end_table@@Base+0x155>
  42a96d:	mov    r14d,eax
  42a970:	xor    r15d,r15d
  42a973:	xor    esi,esi
  42a975:	mov    rdi,r12
  42a978:	mov    rdx,rbp
  42a97b:	call   406110 <memset@plt>
  42a980:	mov    rax,QWORD PTR [rbx+0x30]
  42a984:	mov    r8d,DWORD PTR [rax+0x14]
  42a988:	add    r8,QWORD PTR [rbx+0x88]
  42a98f:	mov    r9,QWORD PTR [rbx]
  42a992:	mov    rsi,QWORD PTR [rbx+0x18]
  42a996:	sub    r9,r8
  42a999:	shr    r9,1
  42a99c:	mov    edx,DWORD PTR [rbx+0x20]
  42a99f:	movzx  ecx,WORD PTR [rbx+0xea]
  42a9a6:	mov    DWORD PTR [rsp],r14d
  42a9aa:	mov    rdi,rbx
  42a9ad:	call   42a530 <flatcc_builder_create_table@@Base>
  42a9b2:	test   eax,eax
  42a9b4:	je     42aa58 <flatcc_builder_end_table@@Base+0x158>
  42a9ba:	mov    r14d,eax
  42a9bd:	mov    rax,QWORD PTR [rbx+0x30]
  42a9c1:	mov    ecx,DWORD PTR [rax+0x18]
  42a9c4:	mov    DWORD PTR [rbx+0x14],ecx
  42a9c7:	movzx  ecx,WORD PTR [rax+0x1c]
  42a9cb:	mov    WORD PTR [rbx+0x10],cx
  42a9cf:	mov    ecx,DWORD PTR [rax+0x10]
  42a9d2:	add    rcx,QWORD PTR [rbx+0x58]
  42a9d6:	mov    QWORD PTR [rbx+0x8],rcx
  42a9da:	mov    eax,DWORD PTR [rax+0x14]
  42a9dd:	add    rax,QWORD PTR [rbx+0x88]
  42a9e4:	mov    QWORD PTR [rbx],rax
  42a9e7:	mov    rdi,QWORD PTR [rbx+0x18]
  42a9eb:	mov    edx,DWORD PTR [rbx+0x20]
  42a9ee:	xor    esi,esi
  42a9f0:	call   406110 <memset@plt>
  42a9f5:	mov    rax,QWORD PTR [rbx+0x30]
  42a9f9:	mov    ecx,DWORD PTR [rax+0x8]
  42a9fc:	mov    DWORD PTR [rbx+0x20],ecx
  42a9ff:	mov    ecx,DWORD PTR [rax]
  42aa01:	mov    DWORD PTR [rbx+0x28],ecx
  42aa04:	mov    edx,DWORD PTR [rax+0x4]
  42aa07:	mov    rsi,rcx
  42aa0a:	add    rsi,QWORD PTR [rbx+0x68]
  42aa0e:	mov    QWORD PTR [rbx+0x18],rsi
  42aa12:	mov    esi,DWORD PTR [rbx+0x70]
  42aa15:	sub    esi,ecx
  42aa17:	cmp    esi,edx
  42aa19:	cmova  esi,edx
  42aa1c:	mov    DWORD PTR [rbx+0x24],esi
  42aa1f:	movzx  ecx,WORD PTR [rbx+0xea]
  42aa26:	cmp    WORD PTR [rbx+0xe8],cx
  42aa2d:	jae    42aa36 <flatcc_builder_end_table@@Base+0x136>
  42aa2f:	mov    WORD PTR [rbx+0xe8],cx
  42aa36:	movzx  ecx,WORD PTR [rax+0xc]
  42aa3a:	mov    WORD PTR [rbx+0xea],cx
  42aa41:	add    rax,0xffffffffffffffdc
  42aa45:	mov    QWORD PTR [rbx+0x30],rax
  42aa49:	add    DWORD PTR [rbx+0x104],0xffffffff
  42aa50:	mov    r15d,r14d
  42aa53:	jmp    42aa58 <flatcc_builder_end_table@@Base+0x158>
  42aa55:	xor    r15d,r15d
  42aa58:	mov    eax,r15d
  42aa5b:	add    rsp,0x10
  42aa5f:	pop    rbx
  42aa60:	pop    r12
  42aa62:	pop    r14
  42aa64:	pop    r15
  42aa66:	pop    rbp
  42aa67:	ret    
  42aa68:	lea    rdi,[rip+0x20da2]        # 44b811 <flatcc_builder_padding_base@@Base+0xa71>
  42aa6f:	lea    rsi,[rip+0x2056c]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42aa76:	lea    rcx,[rip+0x20ebc]        # 44b939 <flatcc_builder_padding_base@@Base+0xb99>
  42aa7d:	mov    edx,0x525
  42aa82:	call   406100 <__assert_fail@plt>
  42aa87:	nop    WORD PTR [rax+rax*1+0x0]

000000000042aa90 <flatcc_builder_create_vector@@Base>:
  42aa90:	push   rbp
  42aa91:	push   rbx
  42aa92:	sub    rsp,0x98
  42aa99:	cmp    rdx,r9
  42aa9c:	ja     42abc9 <flatcc_builder_create_vector@@Base+0x139>
  42aaa2:	mov    rbx,rdi
  42aaa5:	movzx  edi,r8w
  42aaa9:	cmp    edi,0x4
  42aaac:	mov    eax,0x4
  42aab1:	cmova  eax,edi
  42aab4:	cmp    WORD PTR [rbx+0xe8],ax
  42aabb:	jae    42aac4 <flatcc_builder_create_vector@@Base+0x34>
  42aabd:	mov    WORD PTR [rbx+0xe8],ax
  42aac4:	imul   ecx,edx
  42aac7:	mov    DWORD PTR [rsp+0x4],edx
  42aacb:	mov    ebp,DWORD PTR [rbx+0xf0]
  42aad1:	mov    edx,ebp
  42aad3:	sub    edx,ecx
  42aad5:	movzx  eax,ax
  42aad8:	add    eax,0xffffffff
  42aadb:	and    eax,edx
  42aadd:	mov    QWORD PTR [rsp+0x8],0x4
  42aae6:	lea    rdx,[rsp+0x4]
  42aaeb:	mov    QWORD PTR [rsp+0x18],rdx
  42aaf0:	mov    QWORD PTR [rsp+0x20],0x4
  42aaf9:	mov    DWORD PTR [rsp+0x10],0x1
  42ab01:	test   ecx,ecx
  42ab03:	je     42ab99 <flatcc_builder_create_vector@@Base+0x109>
  42ab09:	mov    ecx,ecx
  42ab0b:	lea    r8,[rcx+0x4]
  42ab0f:	mov    QWORD PTR [rsp+0x8],r8
  42ab14:	mov    QWORD PTR [rsp+0x28],rsi
  42ab19:	mov    QWORD PTR [rsp+0x30],rcx
  42ab1e:	mov    DWORD PTR [rsp+0x10],0x2
  42ab26:	mov    edx,0x2
  42ab2b:	test   eax,eax
  42ab2d:	je     42ab57 <flatcc_builder_create_vector@@Base+0xc7>
  42ab2f:	mov    eax,eax
  42ab31:	add    r8,rax
  42ab34:	mov    QWORD PTR [rsp+0x8],r8
  42ab39:	mov    ecx,edx
  42ab3b:	shl    rcx,0x4
  42ab3f:	lea    rsi,[rip+0x2025a]        # 44ada0 <flatcc_builder_padding_base@@Base>
  42ab46:	mov    QWORD PTR [rsp+rcx*1+0x18],rsi
  42ab4b:	mov    QWORD PTR [rsp+rcx*1+0x20],rax
  42ab50:	add    edx,0x1
  42ab53:	mov    DWORD PTR [rsp+0x10],edx
  42ab57:	cmp    r8,0x11
  42ab5b:	setb   al
  42ab5e:	lea    rcx,[r8-0x10]
  42ab62:	shr    rcx,0x20
  42ab66:	sete   cl
  42ab69:	test   r8d,r8d
  42ab6c:	jle    42abaa <flatcc_builder_create_vector@@Base+0x11a>
  42ab6e:	or     al,cl
  42ab70:	je     42abaa <flatcc_builder_create_vector@@Base+0x11a>
  42ab72:	sub    ebp,r8d
  42ab75:	mov    rdi,QWORD PTR [rbx+0x38]
  42ab79:	lea    rsi,[rsp+0x18]
  42ab7e:	mov    ecx,ebp
  42ab80:	call   QWORD PTR [rbx+0x48]
  42ab83:	test   eax,eax
  42ab85:	jne    42abe8 <flatcc_builder_create_vector@@Base+0x158>
  42ab87:	mov    DWORD PTR [rbx+0xf0],ebp
  42ab8d:	mov    eax,ebp
  42ab8f:	add    rsp,0x98
  42ab96:	pop    rbx
  42ab97:	pop    rbp
  42ab98:	ret    
  42ab99:	mov    edx,0x1
  42ab9e:	mov    r8d,0x4
  42aba4:	test   eax,eax
  42aba6:	jne    42ab2f <flatcc_builder_create_vector@@Base+0x9f>
  42aba8:	jmp    42ab57 <flatcc_builder_create_vector@@Base+0xc7>
  42abaa:	lea    rdi,[rip+0x16fce]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  42abb1:	lea    rsi,[rip+0x2042a]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42abb8:	lea    rcx,[rip+0x214a2]        # 44c061 <flatcc_builder_padding_base@@Base+0x12c1>
  42abbf:	mov    edx,0x287
  42abc4:	call   406100 <__assert_fail@plt>
  42abc9:	lea    rdi,[rip+0x20dab]        # 44b97b <flatcc_builder_padding_base@@Base+0xbdb>
  42abd0:	lea    rsi,[rip+0x2040b]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42abd7:	lea    rcx,[rip+0x20db0]        # 44b98e <flatcc_builder_padding_base@@Base+0xbee>
  42abde:	mov    edx,0x555
  42abe3:	call   406100 <__assert_fail@plt>
  42abe8:	lea    rdi,[rip+0x16f90]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  42abef:	lea    rsi,[rip+0x203ec]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42abf6:	lea    rcx,[rip+0x21464]        # 44c061 <flatcc_builder_padding_base@@Base+0x12c1>
  42abfd:	mov    edx,0x28b
  42ac02:	call   406100 <__assert_fail@plt>
  42ac07:	nop    WORD PTR [rax+rax*1+0x0]

000000000042ac10 <flatcc_builder_end_vector@@Base>:
  42ac10:	push   rbp
  42ac11:	push   rbx
  42ac12:	push   rax
  42ac13:	mov    rax,QWORD PTR [rdi+0x30]
  42ac17:	movzx  ecx,WORD PTR [rax+0xe]
  42ac1b:	cmp    ecx,0x4
  42ac1e:	jne    42acba <flatcc_builder_end_vector@@Base+0xaa>
  42ac24:	mov    rbx,rdi
  42ac27:	mov    rsi,QWORD PTR [rdi+0x18]
  42ac2b:	mov    ecx,DWORD PTR [rax+0x10]
  42ac2e:	mov    edx,DWORD PTR [rax+0x14]
  42ac31:	movzx  r8d,WORD PTR [rdi+0xea]
  42ac39:	mov    r9d,DWORD PTR [rax+0x18]
  42ac3d:	call   42aa90 <flatcc_builder_create_vector@@Base>
  42ac42:	mov    ebp,eax
  42ac44:	test   eax,eax
  42ac46:	je     42acb1 <flatcc_builder_end_vector@@Base+0xa1>
  42ac48:	mov    rdi,QWORD PTR [rbx+0x18]
  42ac4c:	mov    edx,DWORD PTR [rbx+0x20]
  42ac4f:	xor    esi,esi
  42ac51:	call   406110 <memset@plt>
  42ac56:	mov    rax,QWORD PTR [rbx+0x30]
  42ac5a:	mov    ecx,DWORD PTR [rax+0x8]
  42ac5d:	mov    DWORD PTR [rbx+0x20],ecx
  42ac60:	mov    ecx,DWORD PTR [rax]
  42ac62:	mov    DWORD PTR [rbx+0x28],ecx
  42ac65:	mov    edx,DWORD PTR [rax+0x4]
  42ac68:	mov    rsi,rcx
  42ac6b:	add    rsi,QWORD PTR [rbx+0x68]
  42ac6f:	mov    QWORD PTR [rbx+0x18],rsi
  42ac73:	mov    esi,DWORD PTR [rbx+0x70]
  42ac76:	sub    esi,ecx
  42ac78:	cmp    esi,edx
  42ac7a:	cmova  esi,edx
  42ac7d:	mov    DWORD PTR [rbx+0x24],esi
  42ac80:	movzx  ecx,WORD PTR [rbx+0xea]
  42ac87:	cmp    WORD PTR [rbx+0xe8],cx
  42ac8e:	jae    42ac97 <flatcc_builder_end_vector@@Base+0x87>
  42ac90:	mov    WORD PTR [rbx+0xe8],cx
  42ac97:	movzx  ecx,WORD PTR [rax+0xc]
  42ac9b:	mov    WORD PTR [rbx+0xea],cx
  42aca2:	add    rax,0xffffffffffffffdc
  42aca6:	mov    QWORD PTR [rbx+0x30],rax
  42acaa:	add    DWORD PTR [rbx+0x104],0xffffffff
  42acb1:	mov    eax,ebp
  42acb3:	add    rsp,0x8
  42acb7:	pop    rbx
  42acb8:	pop    rbp
  42acb9:	ret    
  42acba:	lea    rdi,[rip+0x2065e]        # 44b31f <flatcc_builder_padding_base@@Base+0x57f>
  42acc1:	lea    rsi,[rip+0x2031a]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42acc8:	lea    rcx,[rip+0x20d35]        # 44ba04 <flatcc_builder_padding_base@@Base+0xc64>
  42accf:	mov    edx,0x578
  42acd4:	call   406100 <__assert_fail@plt>
  42acd9:	nop    DWORD PTR [rax+0x0]

000000000042ace0 <flatcc_builder_vector_count@@Base>:
  42ace0:	mov    rax,QWORD PTR [rdi+0x30]
  42ace4:	mov    eax,DWORD PTR [rax+0x14]
  42ace7:	ret    
  42ace8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042acf0 <flatcc_builder_vector_edit@@Base>:
  42acf0:	mov    rax,QWORD PTR [rdi+0x18]
  42acf4:	ret    
  42acf5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42acff:	nop

000000000042ad00 <flatcc_builder_create_offset_vector_direct@@Base>:
  42ad00:	xor    ecx,ecx
  42ad02:	jmp    42ad10 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42ad04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ad0e:	xchg   ax,ax
  42ad10:	push   r14
  42ad12:	push   rbx
  42ad13:	sub    rsp,0x98
  42ad1a:	mov    r10,rdx
  42ad1d:	xor    ebx,ebx
  42ad1f:	test   r10d,0xc0000000
  42ad26:	jne    42ae7a <flatcc_builder_create_offset_vector_direct@@Base+0x17a>
  42ad2c:	mov    r14,rdi
  42ad2f:	movzx  edx,WORD PTR [rdi+0xe8]
  42ad36:	cmp    edx,0x3
  42ad39:	ja     42ad45 <flatcc_builder_create_offset_vector_direct@@Base+0x45>
  42ad3b:	mov    WORD PTR [r14+0xe8],0x4
  42ad45:	lea    r8d,[r10*4+0x0]
  42ad4d:	mov    DWORD PTR [rsp+0x4],r10d
  42ad52:	mov    ebx,DWORD PTR [r14+0xf0]
  42ad59:	mov    r9d,ebx
  42ad5c:	and    r9d,0x3
  42ad60:	mov    QWORD PTR [rsp+0x8],0x4
  42ad69:	lea    rdx,[rsp+0x4]
  42ad6e:	mov    QWORD PTR [rsp+0x18],rdx
  42ad73:	mov    QWORD PTR [rsp+0x20],0x4
  42ad7c:	mov    DWORD PTR [rsp+0x10],0x1
  42ad84:	test   r8d,r8d
  42ad87:	je     42ae87 <flatcc_builder_create_offset_vector_direct@@Base+0x187>
  42ad8d:	mov    edx,r8d
  42ad90:	lea    r8,[rdx+0x4]
  42ad94:	mov    QWORD PTR [rsp+0x8],r8
  42ad99:	mov    QWORD PTR [rsp+0x28],rsi
  42ad9e:	mov    QWORD PTR [rsp+0x30],rdx
  42ada3:	mov    DWORD PTR [rsp+0x10],0x2
  42adab:	mov    edx,0x2
  42adb0:	test   r9d,r9d
  42adb3:	je     42addb <flatcc_builder_create_offset_vector_direct@@Base+0xdb>
  42adb5:	add    r8,r9
  42adb8:	mov    QWORD PTR [rsp+0x8],r8
  42adbd:	mov    edi,edx
  42adbf:	shl    rdi,0x4
  42adc3:	lea    rax,[rip+0x1ffd6]        # 44ada0 <flatcc_builder_padding_base@@Base>
  42adca:	mov    QWORD PTR [rsp+rdi*1+0x18],rax
  42adcf:	mov    QWORD PTR [rsp+rdi*1+0x20],r9
  42add4:	add    edx,0x1
  42add7:	mov    DWORD PTR [rsp+0x10],edx
  42addb:	test   r10d,r10d
  42adde:	je     42ae36 <flatcc_builder_create_offset_vector_direct@@Base+0x136>
  42ade0:	mov    edi,0xfffffffc
  42ade5:	sub    edi,ebx
  42ade7:	add    edi,r8d
  42adea:	mov    r9d,r10d
  42aded:	xor    ebx,ebx
  42adef:	nop
  42adf0:	mov    eax,DWORD PTR [rsi+rbx*4]
  42adf3:	test   eax,eax
  42adf5:	je     42ae10 <flatcc_builder_create_offset_vector_direct@@Base+0x110>
  42adf7:	add    eax,edi
  42adf9:	mov    DWORD PTR [rsi+rbx*4],eax
  42adfc:	test   rcx,rcx
  42adff:	je     42ae23 <flatcc_builder_create_offset_vector_direct@@Base+0x123>
  42ae01:	cmp    BYTE PTR [rcx+rbx*1],0x0
  42ae05:	jne    42ae23 <flatcc_builder_create_offset_vector_direct@@Base+0x123>
  42ae07:	jmp    42aea0 <flatcc_builder_create_offset_vector_direct@@Base+0x1a0>
  42ae0c:	nop    DWORD PTR [rax+0x0]
  42ae10:	test   rcx,rcx
  42ae13:	je     42aebf <flatcc_builder_create_offset_vector_direct@@Base+0x1bf>
  42ae19:	cmp    BYTE PTR [rcx+rbx*1],0x0
  42ae1d:	jne    42aede <flatcc_builder_create_offset_vector_direct@@Base+0x1de>
  42ae23:	add    rbx,0x1
  42ae27:	add    edi,0xfffffffc
  42ae2a:	cmp    rbx,r9
  42ae2d:	jb     42adf0 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  42ae2f:	mov    ebx,DWORD PTR [r14+0xf0]
  42ae36:	cmp    r8,0x11
  42ae3a:	setb   al
  42ae3d:	lea    rcx,[r8-0x10]
  42ae41:	shr    rcx,0x20
  42ae45:	sete   cl
  42ae48:	test   r8d,r8d
  42ae4b:	jle    42aefd <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  42ae51:	or     al,cl
  42ae53:	je     42aefd <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  42ae59:	sub    ebx,r8d
  42ae5c:	mov    rdi,QWORD PTR [r14+0x38]
  42ae60:	lea    rsi,[rsp+0x18]
  42ae65:	mov    ecx,ebx
  42ae67:	call   QWORD PTR [r14+0x48]
  42ae6b:	test   eax,eax
  42ae6d:	jne    42af1c <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
  42ae73:	mov    DWORD PTR [r14+0xf0],ebx
  42ae7a:	mov    eax,ebx
  42ae7c:	add    rsp,0x98
  42ae83:	pop    rbx
  42ae84:	pop    r14
  42ae86:	ret    
  42ae87:	mov    edx,0x1
  42ae8c:	mov    r8d,0x4
  42ae92:	test   r9d,r9d
  42ae95:	jne    42adb5 <flatcc_builder_create_offset_vector_direct@@Base+0xb5>
  42ae9b:	jmp    42addb <flatcc_builder_create_offset_vector_direct@@Base+0xdb>
  42aea0:	lea    rdi,[rip+0x212ef]        # 44c196 <flatcc_builder_padding_base@@Base+0x13f6>
  42aea7:	lea    rsi,[rip+0x20134]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42aeae:	lea    rcx,[rip+0x212ef]        # 44c1a4 <flatcc_builder_padding_base@@Base+0x1404>
  42aeb5:	mov    edx,0x5b1
  42aeba:	call   406100 <__assert_fail@plt>
  42aebf:	lea    rdi,[rip+0x16cb9]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  42aec6:	lea    rsi,[rip+0x20115]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42aecd:	lea    rcx,[rip+0x212d0]        # 44c1a4 <flatcc_builder_padding_base@@Base+0x1404>
  42aed4:	mov    edx,0x5b7
  42aed9:	call   406100 <__assert_fail@plt>
  42aede:	lea    rdi,[rip+0x21342]        # 44c227 <flatcc_builder_padding_base@@Base+0x1487>
  42aee5:	lea    rsi,[rip+0x200f6]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42aeec:	lea    rcx,[rip+0x212b1]        # 44c1a4 <flatcc_builder_padding_base@@Base+0x1404>
  42aef3:	mov    edx,0x5b5
  42aef8:	call   406100 <__assert_fail@plt>
  42aefd:	lea    rdi,[rip+0x16c7b]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  42af04:	lea    rsi,[rip+0x200d7]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42af0b:	lea    rcx,[rip+0x2114f]        # 44c061 <flatcc_builder_padding_base@@Base+0x12c1>
  42af12:	mov    edx,0x287
  42af17:	call   406100 <__assert_fail@plt>
  42af1c:	lea    rdi,[rip+0x16c5c]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  42af23:	lea    rsi,[rip+0x200b8]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42af2a:	lea    rcx,[rip+0x21130]        # 44c061 <flatcc_builder_padding_base@@Base+0x12c1>
  42af31:	mov    edx,0x28b
  42af36:	call   406100 <__assert_fail@plt>
  42af3b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042af40 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  42af40:	push   rbp
  42af41:	push   rbx
  42af42:	push   rax
  42af43:	mov    rcx,QWORD PTR [rdi+0x30]
  42af47:	movzx  edx,WORD PTR [rcx+0xe]
  42af4b:	cmp    edx,0x5
  42af4e:	jne    42afe1 <flatcc_builder_end_offset_vector_for_unions@@Base+0xa1>
  42af54:	mov    rax,rsi
  42af57:	mov    rbx,rdi
  42af5a:	mov    rsi,QWORD PTR [rdi+0x18]
  42af5e:	mov    edx,DWORD PTR [rcx+0x14]
  42af61:	mov    rcx,rax
  42af64:	call   42ad10 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42af69:	mov    ebp,eax
  42af6b:	test   eax,eax
  42af6d:	je     42afd8 <flatcc_builder_end_offset_vector_for_unions@@Base+0x98>
  42af6f:	mov    rdi,QWORD PTR [rbx+0x18]
  42af73:	mov    edx,DWORD PTR [rbx+0x20]
  42af76:	xor    esi,esi
  42af78:	call   406110 <memset@plt>
  42af7d:	mov    rax,QWORD PTR [rbx+0x30]
  42af81:	mov    ecx,DWORD PTR [rax+0x8]
  42af84:	mov    DWORD PTR [rbx+0x20],ecx
  42af87:	mov    ecx,DWORD PTR [rax]
  42af89:	mov    DWORD PTR [rbx+0x28],ecx
  42af8c:	mov    edx,DWORD PTR [rax+0x4]
  42af8f:	mov    rsi,rcx
  42af92:	add    rsi,QWORD PTR [rbx+0x68]
  42af96:	mov    QWORD PTR [rbx+0x18],rsi
  42af9a:	mov    esi,DWORD PTR [rbx+0x70]
  42af9d:	sub    esi,ecx
  42af9f:	cmp    esi,edx
  42afa1:	cmova  esi,edx
  42afa4:	mov    DWORD PTR [rbx+0x24],esi
  42afa7:	movzx  ecx,WORD PTR [rbx+0xea]
  42afae:	cmp    WORD PTR [rbx+0xe8],cx
  42afb5:	jae    42afbe <flatcc_builder_end_offset_vector_for_unions@@Base+0x7e>
  42afb7:	mov    WORD PTR [rbx+0xe8],cx
  42afbe:	movzx  ecx,WORD PTR [rax+0xc]
  42afc2:	mov    WORD PTR [rbx+0xea],cx
  42afc9:	add    rax,0xffffffffffffffdc
  42afcd:	mov    QWORD PTR [rbx+0x30],rax
  42afd1:	add    DWORD PTR [rbx+0x104],0xffffffff
  42afd8:	mov    eax,ebp
  42afda:	add    rsp,0x8
  42afde:	pop    rbx
  42afdf:	pop    rbp
  42afe0:	ret    
  42afe1:	lea    rdi,[rip+0x20430]        # 44b418 <flatcc_builder_padding_base@@Base+0x678>
  42afe8:	lea    rsi,[rip+0x1fff3]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42afef:	lea    rcx,[rip+0x20a9b]        # 44ba91 <flatcc_builder_padding_base@@Base+0xcf1>
  42aff6:	mov    edx,0x5d5
  42affb:	call   406100 <__assert_fail@plt>

000000000042b000 <flatcc_builder_offset_vector_edit@@Base>:
  42b000:	mov    rax,QWORD PTR [rdi+0x18]
  42b004:	ret    
  42b005:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b00f:	nop

000000000042b010 <flatcc_builder_offset_vector_count@@Base>:
  42b010:	mov    rax,QWORD PTR [rdi+0x30]
  42b014:	mov    eax,DWORD PTR [rax+0x14]
  42b017:	ret    
  42b018:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b020 <flatcc_builder_table_add_union@@Base>:
  42b020:	push   rbp
  42b021:	push   r15
  42b023:	push   r14
  42b025:	push   rbx
  42b026:	push   rax
  42b027:	mov    rax,QWORD PTR [rdi+0x30]
  42b02b:	movzx  eax,WORD PTR [rax+0xe]
  42b02f:	cmp    eax,0x3
  42b032:	jne    42b091 <flatcc_builder_table_add_union@@Base+0x71>
  42b034:	mov    r14,rdx
  42b037:	mov    ebp,esi
  42b039:	mov    r15,rdi
  42b03c:	mov    rbx,rdx
  42b03f:	shr    rbx,0x20
  42b043:	test   r14b,r14b
  42b046:	jne    42b04c <flatcc_builder_table_add_union@@Base+0x2c>
  42b048:	test   ebx,ebx
  42b04a:	jne    42b0b0 <flatcc_builder_table_add_union@@Base+0x90>
  42b04c:	test   ebx,ebx
  42b04e:	je     42b065 <flatcc_builder_table_add_union@@Base+0x45>
  42b050:	mov    rdi,r15
  42b053:	mov    esi,ebp
  42b055:	call   42b110 <flatcc_builder_table_add_offset@@Base>
  42b05a:	test   rax,rax
  42b05d:	je     42b0ee <flatcc_builder_table_add_union@@Base+0xce>
  42b063:	mov    DWORD PTR [rax],ebx
  42b065:	add    ebp,0xffffffff
  42b068:	mov    edx,0x1
  42b06d:	mov    ecx,0x1
  42b072:	mov    rdi,r15
  42b075:	mov    esi,ebp
  42b077:	call   42b270 <flatcc_builder_table_add@@Base>
  42b07c:	test   rax,rax
  42b07f:	je     42b0cf <flatcc_builder_table_add_union@@Base+0xaf>
  42b081:	mov    BYTE PTR [rax],r14b
  42b084:	xor    eax,eax
  42b086:	add    rsp,0x8
  42b08a:	pop    rbx
  42b08b:	pop    r14
  42b08d:	pop    r15
  42b08f:	pop    rbp
  42b090:	ret    
  42b091:	lea    rdi,[rip+0x20779]        # 44b811 <flatcc_builder_padding_base@@Base+0xa71>
  42b098:	lea    rsi,[rip+0x1ff43]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42b09f:	lea    rcx,[rip+0x20a5d]        # 44bb03 <flatcc_builder_padding_base@@Base+0xd63>
  42b0a6:	mov    edx,0x5ee
  42b0ab:	call   406100 <__assert_fail@plt>
  42b0b0:	lea    rdi,[rip+0x20aa4]        # 44bb5b <flatcc_builder_padding_base@@Base+0xdbb>
  42b0b7:	lea    rsi,[rip+0x1ff24]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42b0be:	lea    rcx,[rip+0x20a3e]        # 44bb03 <flatcc_builder_padding_base@@Base+0xd63>
  42b0c5:	mov    edx,0x5ef
  42b0ca:	call   406100 <__assert_fail@plt>
  42b0cf:	lea    rdi,[rip+0x20ab1]        # 44bb87 <flatcc_builder_padding_base@@Base+0xde7>
  42b0d6:	lea    rsi,[rip+0x1ff05]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42b0dd:	lea    rcx,[rip+0x20a1f]        # 44bb03 <flatcc_builder_padding_base@@Base+0xd63>
  42b0e4:	mov    edx,0x5f6
  42b0e9:	call   406100 <__assert_fail@plt>
  42b0ee:	lea    rdi,[rip+0x20a88]        # 44bb7d <flatcc_builder_padding_base@@Base+0xddd>
  42b0f5:	lea    rsi,[rip+0x1fee6]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42b0fc:	lea    rcx,[rip+0x20a00]        # 44bb03 <flatcc_builder_padding_base@@Base+0xd63>
  42b103:	mov    edx,0x5f2
  42b108:	call   406100 <__assert_fail@plt>
  42b10d:	nop    DWORD PTR [rax]

000000000042b110 <flatcc_builder_table_add_offset@@Base>:
  42b110:	push   rbp
  42b111:	push   r15
  42b113:	push   r14
  42b115:	push   rbx
  42b116:	push   rax
  42b117:	mov    rax,QWORD PTR [rdi+0x30]
  42b11b:	movzx  eax,WORD PTR [rax+0xe]
  42b11f:	cmp    eax,0x3
  42b122:	jne    42b20e <flatcc_builder_table_add_offset@@Base+0xfe>
  42b128:	mov    r14d,esi
  42b12b:	cmp    esi,0x7ffd
  42b131:	jae    42b22d <flatcc_builder_table_add_offset@@Base+0x11d>
  42b137:	mov    rbx,rdi
  42b13a:	mov    rax,QWORD PTR [rdi+0x8]
  42b13e:	movsxd rcx,r14d
  42b141:	cmp    WORD PTR [rax+rcx*2],0x0
  42b146:	jne    42b24c <flatcc_builder_table_add_offset@@Base+0x13c>
  42b14c:	mov    ecx,DWORD PTR [rbx+0x14]
  42b14f:	xor    ecx,r14d
  42b152:	imul   ecx,ecx,0x9e3779b1
  42b158:	xor    ecx,0x4
  42b15b:	imul   ecx,ecx,0x9e3779b1
  42b161:	mov    DWORD PTR [rbx+0x14],ecx
  42b164:	mov    ebp,DWORD PTR [rbx+0x20]
  42b167:	mov    ecx,DWORD PTR [rbx+0x24]
  42b16a:	add    ebp,0x3
  42b16d:	and    ebp,0xfffffffc
  42b170:	lea    r15,[rbp+0x4]
  42b174:	mov    DWORD PTR [rbx+0x20],r15d
  42b178:	cmp    ecx,r15d
  42b17b:	jae    42b1d7 <flatcc_builder_table_add_offset@@Base+0xc7>
  42b17d:	lea    eax,[rbp+0x4]
  42b180:	lea    rsi,[rbx+0x68]
  42b184:	mov    rdi,QWORD PTR [rbx+0x40]
  42b188:	mov    edx,DWORD PTR [rbx+0x28]
  42b18b:	add    rdx,rax
  42b18e:	mov    ecx,0x1
  42b193:	mov    r8d,0x1
  42b199:	call   QWORD PTR [rbx+0x50]
  42b19c:	test   eax,eax
  42b19e:	je     42b1a4 <flatcc_builder_table_add_offset@@Base+0x94>
  42b1a0:	xor    ebp,ebp
  42b1a2:	jmp    42b200 <flatcc_builder_table_add_offset@@Base+0xf0>
  42b1a4:	mov    eax,DWORD PTR [rbx+0x28]
  42b1a7:	mov    rcx,rax
  42b1aa:	add    rcx,QWORD PTR [rbx+0x68]
  42b1ae:	mov    QWORD PTR [rbx+0x18],rcx
  42b1b2:	mov    ecx,DWORD PTR [rbx+0x70]
  42b1b5:	sub    ecx,eax
  42b1b7:	cmp    ecx,0xfffc
  42b1bd:	mov    eax,0xfffc
  42b1c2:	cmovb  eax,ecx
  42b1c5:	mov    DWORD PTR [rbx+0x24],eax
  42b1c8:	mov    rax,QWORD PTR [rbx+0x30]
  42b1cc:	mov    DWORD PTR [rax+0x4],0xfffc
  42b1d3:	mov    rax,QWORD PTR [rbx+0x8]
  42b1d7:	movzx  ecx,r14w
  42b1db:	mov    WORD PTR [rax+rcx*2],r15w
  42b1e0:	cmp    WORD PTR [rbx+0x10],cx
  42b1e4:	ja     42b1ef <flatcc_builder_table_add_offset@@Base+0xdf>
  42b1e6:	add    r14d,0x1
  42b1ea:	mov    WORD PTR [rbx+0x10],r14w
  42b1ef:	mov    rax,QWORD PTR [rbx]
  42b1f2:	lea    rcx,[rax+0x2]
  42b1f6:	mov    QWORD PTR [rbx],rcx
  42b1f9:	mov    WORD PTR [rax],bp
  42b1fc:	add    rbp,QWORD PTR [rbx+0x18]
  42b200:	mov    rax,rbp
  42b203:	add    rsp,0x8
  42b207:	pop    rbx
  42b208:	pop    r14
  42b20a:	pop    r15
  42b20c:	pop    rbp
  42b20d:	ret    
  42b20e:	lea    rdi,[rip+0x205fc]        # 44b811 <flatcc_builder_padding_base@@Base+0xa71>
  42b215:	lea    rsi,[rip+0x1fdc6]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42b21c:	lea    rcx,[rip+0x20ce2]        # 44bf05 <flatcc_builder_padding_base@@Base+0x1165>
  42b223:	mov    edx,0x713
  42b228:	call   406100 <__assert_fail@plt>
  42b22d:	lea    rdi,[rip+0x20c51]        # 44be85 <flatcc_builder_padding_base@@Base+0x10e5>
  42b234:	lea    rsi,[rip+0x1fda7]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42b23b:	lea    rcx,[rip+0x20cc3]        # 44bf05 <flatcc_builder_padding_base@@Base+0x1165>
  42b242:	mov    edx,0x714
  42b247:	call   406100 <__assert_fail@plt>
  42b24c:	lea    rdi,[rip+0x1692c]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  42b253:	lea    rsi,[rip+0x1fd88]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42b25a:	lea    rcx,[rip+0x20ca4]        # 44bf05 <flatcc_builder_padding_base@@Base+0x1165>
  42b261:	mov    edx,0x71b
  42b266:	call   406100 <__assert_fail@plt>
  42b26b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b270 <flatcc_builder_table_add@@Base>:
  42b270:	push   rbp
  42b271:	push   r14
  42b273:	push   rbx
  42b274:	mov    rax,QWORD PTR [rdi+0x30]
  42b278:	movzx  eax,WORD PTR [rax+0xe]
  42b27c:	cmp    eax,0x3
  42b27f:	jne    42b36c <flatcc_builder_table_add@@Base+0xfc>
  42b285:	mov    r14d,esi
  42b288:	cmp    esi,0x7ffd
  42b28e:	jae    42b38b <flatcc_builder_table_add@@Base+0x11b>
  42b294:	mov    rbx,rdi
  42b297:	cmp    WORD PTR [rdi+0xea],cx
  42b29e:	jae    42b2a7 <flatcc_builder_table_add@@Base+0x37>
  42b2a0:	mov    WORD PTR [rbx+0xea],cx
  42b2a7:	mov    rsi,QWORD PTR [rbx+0x8]
  42b2ab:	movsxd rax,r14d
  42b2ae:	cmp    WORD PTR [rsi+rax*2],0x0
  42b2b3:	jne    42b3aa <flatcc_builder_table_add@@Base+0x13a>
  42b2b9:	mov    eax,DWORD PTR [rbx+0x14]
  42b2bc:	xor    eax,r14d
  42b2bf:	imul   eax,eax,0x9e3779b1
  42b2c5:	xor    eax,edx
  42b2c7:	imul   eax,eax,0x9e3779b1
  42b2cd:	mov    DWORD PTR [rbx+0x14],eax
  42b2d0:	mov    eax,DWORD PTR [rbx+0x20]
  42b2d3:	movzx  ebp,cx
  42b2d6:	lea    eax,[rax+rbp*1]
  42b2d9:	add    eax,0xffffffff
  42b2dc:	neg    ebp
  42b2de:	and    ebp,eax
  42b2e0:	add    edx,ebp
  42b2e2:	mov    DWORD PTR [rbx+0x20],edx
  42b2e5:	cmp    edx,DWORD PTR [rbx+0x24]
  42b2e8:	jb     42b347 <flatcc_builder_table_add@@Base+0xd7>
  42b2ea:	add    edx,0x1
  42b2ed:	lea    rsi,[rbx+0x68]
  42b2f1:	mov    rdi,QWORD PTR [rbx+0x40]
  42b2f5:	mov    eax,DWORD PTR [rbx+0x28]
  42b2f8:	add    rax,rdx
  42b2fb:	mov    ecx,0x1
  42b300:	mov    r8d,0x1
  42b306:	mov    rdx,rax
  42b309:	call   QWORD PTR [rbx+0x50]
  42b30c:	test   eax,eax
  42b30e:	je     42b314 <flatcc_builder_table_add@@Base+0xa4>
  42b310:	xor    eax,eax
  42b312:	jmp    42b367 <flatcc_builder_table_add@@Base+0xf7>
  42b314:	mov    eax,DWORD PTR [rbx+0x28]
  42b317:	mov    rcx,rax
  42b31a:	add    rcx,QWORD PTR [rbx+0x68]
  42b31e:	mov    QWORD PTR [rbx+0x18],rcx
  42b322:	mov    ecx,DWORD PTR [rbx+0x70]
  42b325:	sub    ecx,eax
  42b327:	cmp    ecx,0xfffc
  42b32d:	mov    eax,0xfffc
  42b332:	cmovb  eax,ecx
  42b335:	mov    DWORD PTR [rbx+0x24],eax
  42b338:	mov    rax,QWORD PTR [rbx+0x30]
  42b33c:	mov    DWORD PTR [rax+0x4],0xfffc
  42b343:	mov    rsi,QWORD PTR [rbx+0x8]
  42b347:	mov    eax,ebp
  42b349:	add    ebp,0x4
  42b34c:	movzx  ecx,r14w
  42b350:	mov    WORD PTR [rsi+rcx*2],bp
  42b354:	cmp    WORD PTR [rbx+0x10],cx
  42b358:	ja     42b363 <flatcc_builder_table_add@@Base+0xf3>
  42b35a:	add    r14d,0x1
  42b35e:	mov    WORD PTR [rbx+0x10],r14w
  42b363:	add    rax,QWORD PTR [rbx+0x18]
  42b367:	pop    rbx
  42b368:	pop    r14
  42b36a:	pop    rbp
  42b36b:	ret    
  42b36c:	lea    rdi,[rip+0x2049e]        # 44b811 <flatcc_builder_padding_base@@Base+0xa71>
  42b373:	lea    rsi,[rip+0x1fc68]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42b37a:	lea    rcx,[rip+0x20aba]        # 44be3b <flatcc_builder_padding_base@@Base+0x109b>
  42b381:	mov    edx,0x6ed
  42b386:	call   406100 <__assert_fail@plt>
  42b38b:	lea    rdi,[rip+0x20af3]        # 44be85 <flatcc_builder_padding_base@@Base+0x10e5>
  42b392:	lea    rsi,[rip+0x1fc49]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42b399:	lea    rcx,[rip+0x20a9b]        # 44be3b <flatcc_builder_padding_base@@Base+0x109b>
  42b3a0:	mov    edx,0x6ee
  42b3a5:	call   406100 <__assert_fail@plt>
  42b3aa:	lea    rdi,[rip+0x167ce]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  42b3b1:	lea    rsi,[rip+0x1fc2a]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42b3b8:	lea    rcx,[rip+0x20a7c]        # 44be3b <flatcc_builder_padding_base@@Base+0x109b>
  42b3bf:	mov    edx,0x6f8
  42b3c4:	call   406100 <__assert_fail@plt>
  42b3c9:	nop    DWORD PTR [rax+0x0]

000000000042b3d0 <flatcc_builder_table_add_union_vector@@Base>:
  42b3d0:	push   r15
  42b3d2:	push   r14
  42b3d4:	push   r12
  42b3d6:	push   rbx
  42b3d7:	push   rax
  42b3d8:	mov    rax,QWORD PTR [rdi+0x30]
  42b3dc:	movzx  eax,WORD PTR [rax+0xe]
  42b3e0:	cmp    eax,0x3
  42b3e3:	jne    42b439 <flatcc_builder_table_add_union_vector@@Base+0x69>
  42b3e5:	mov    rbx,rdx
  42b3e8:	mov    r12,rdx
  42b3eb:	shr    r12,0x20
  42b3ef:	test   ebx,ebx
  42b3f1:	sete   al
  42b3f4:	test   r12d,r12d
  42b3f7:	sete   cl
  42b3fa:	cmp    al,cl
  42b3fc:	jne    42b458 <flatcc_builder_table_add_union_vector@@Base+0x88>
  42b3fe:	test   ebx,ebx
  42b400:	je     42b42b <flatcc_builder_table_add_union_vector@@Base+0x5b>
  42b402:	mov    r14d,esi
  42b405:	mov    r15,rdi
  42b408:	lea    esi,[r14-0x1]
  42b40c:	call   42b110 <flatcc_builder_table_add_offset@@Base>
  42b411:	test   rax,rax
  42b414:	je     42b477 <flatcc_builder_table_add_union_vector@@Base+0xa7>
  42b416:	mov    DWORD PTR [rax],ebx
  42b418:	mov    rdi,r15
  42b41b:	mov    esi,r14d
  42b41e:	call   42b110 <flatcc_builder_table_add_offset@@Base>
  42b423:	test   rax,rax
  42b426:	je     42b496 <flatcc_builder_table_add_union_vector@@Base+0xc6>
  42b428:	mov    DWORD PTR [rax],r12d
  42b42b:	xor    eax,eax
  42b42d:	add    rsp,0x8
  42b431:	pop    rbx
  42b432:	pop    r12
  42b434:	pop    r14
  42b436:	pop    r15
  42b438:	ret    
  42b439:	lea    rdi,[rip+0x203d1]        # 44b811 <flatcc_builder_padding_base@@Base+0xa71>
  42b440:	lea    rsi,[rip+0x1fb9b]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42b447:	lea    rcx,[rip+0x20745]        # 44bb93 <flatcc_builder_padding_base@@Base+0xdf3>
  42b44e:	mov    edx,0x600
  42b453:	call   406100 <__assert_fail@plt>
  42b458:	lea    rdi,[rip+0x20797]        # 44bbf6 <flatcc_builder_padding_base@@Base+0xe56>
  42b45f:	lea    rsi,[rip+0x1fb7c]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42b466:	lea    rcx,[rip+0x20726]        # 44bb93 <flatcc_builder_padding_base@@Base+0xdf3>
  42b46d:	mov    edx,0x601
  42b472:	call   406100 <__assert_fail@plt>
  42b477:	lea    rdi,[rip+0x206ff]        # 44bb7d <flatcc_builder_padding_base@@Base+0xddd>
  42b47e:	lea    rsi,[rip+0x1fb5d]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42b485:	lea    rcx,[rip+0x20707]        # 44bb93 <flatcc_builder_padding_base@@Base+0xdf3>
  42b48c:	mov    edx,0x604
  42b491:	call   406100 <__assert_fail@plt>
  42b496:	lea    rdi,[rip+0x206e0]        # 44bb7d <flatcc_builder_padding_base@@Base+0xddd>
  42b49d:	lea    rsi,[rip+0x1fb3e]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42b4a4:	lea    rcx,[rip+0x206e8]        # 44bb93 <flatcc_builder_padding_base@@Base+0xdf3>
  42b4ab:	mov    edx,0x608
  42b4b0:	call   406100 <__assert_fail@plt>
  42b4b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b4bf:	nop

000000000042b4c0 <flatcc_builder_create_union_vector@@Base>:
  42b4c0:	push   r15
  42b4c2:	push   r14
  42b4c4:	push   r13
  42b4c6:	push   r12
  42b4c8:	push   rbx
  42b4c9:	mov    r14,rdx
  42b4cc:	mov    r15,rsi
  42b4cf:	mov    rbx,rdi
  42b4d2:	mov    esi,0x4
  42b4d7:	call   428d00 <flatcc_builder_start_buffer@@Base+0xe0>
  42b4dc:	test   eax,eax
  42b4de:	je     42b4f0 <flatcc_builder_create_union_vector@@Base+0x30>
  42b4e0:	xor    r14d,r14d
  42b4e3:	mov    rax,r14
  42b4e6:	pop    rbx
  42b4e7:	pop    r12
  42b4e9:	pop    r13
  42b4eb:	pop    r14
  42b4ed:	pop    r15
  42b4ef:	ret    
  42b4f0:	mov    rax,QWORD PTR [rbx+0x30]
  42b4f4:	mov    DWORD PTR [rax+0x10],0x4
  42b4fb:	mov    rax,QWORD PTR [rbx+0x30]
  42b4ff:	mov    DWORD PTR [rax+0x14],0x0
  42b506:	mov    rax,QWORD PTR [rbx+0x30]
  42b50a:	mov    WORD PTR [rax+0xe],0x5
  42b510:	mov    ecx,DWORD PTR [rbx+0x28]
  42b513:	mov    edx,DWORD PTR [rbx+0x70]
  42b516:	sub    edx,ecx
  42b518:	add    rcx,QWORD PTR [rbx+0x68]
  42b51c:	mov    QWORD PTR [rbx+0x18],rcx
  42b520:	cmp    edx,0xfffffffc
  42b523:	mov    ecx,0xfffffffc
  42b528:	cmovb  ecx,edx
  42b52b:	mov    DWORD PTR [rbx+0x24],ecx
  42b52e:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42b535:	mov    ecx,DWORD PTR [rax+0x14]
  42b538:	add    ecx,r14d
  42b53b:	jb     42b7aa <flatcc_builder_create_union_vector@@Base+0x2ea>
  42b541:	cmp    ecx,0x40000000
  42b547:	jae    42b7aa <flatcc_builder_create_union_vector@@Base+0x2ea>
  42b54d:	mov    DWORD PTR [rax+0x14],ecx
  42b550:	mov    r12d,DWORD PTR [rbx+0x20]
  42b554:	mov    eax,DWORD PTR [rbx+0x24]
  42b557:	lea    ecx,[r12+r14*4]
  42b55b:	mov    DWORD PTR [rbx+0x20],ecx
  42b55e:	cmp    ecx,eax
  42b560:	jae    42b570 <flatcc_builder_create_union_vector@@Base+0xb0>
  42b562:	mov    rsi,QWORD PTR [rbx+0x18]
  42b566:	add    r12,rsi
  42b569:	jne    42b5cc <flatcc_builder_create_union_vector@@Base+0x10c>
  42b56b:	jmp    42b4e0 <flatcc_builder_create_union_vector@@Base+0x20>
  42b570:	add    ecx,0x1
  42b573:	lea    rsi,[rbx+0x68]
  42b577:	mov    rdi,QWORD PTR [rbx+0x40]
  42b57b:	mov    edx,DWORD PTR [rbx+0x28]
  42b57e:	add    rdx,rcx
  42b581:	mov    ecx,0x1
  42b586:	mov    r8d,0x1
  42b58c:	call   QWORD PTR [rbx+0x50]
  42b58f:	test   eax,eax
  42b591:	jne    42b4e0 <flatcc_builder_create_union_vector@@Base+0x20>
  42b597:	mov    eax,DWORD PTR [rbx+0x28]
  42b59a:	mov    rsi,rax
  42b59d:	add    rsi,QWORD PTR [rbx+0x68]
  42b5a1:	mov    QWORD PTR [rbx+0x18],rsi
  42b5a5:	mov    ecx,DWORD PTR [rbx+0x70]
  42b5a8:	sub    ecx,eax
  42b5aa:	cmp    ecx,0xfffffffc
  42b5ad:	mov    eax,0xfffffffc
  42b5b2:	cmovb  eax,ecx
  42b5b5:	mov    DWORD PTR [rbx+0x24],eax
  42b5b8:	mov    rcx,QWORD PTR [rbx+0x30]
  42b5bc:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  42b5c3:	add    r12,rsi
  42b5c6:	je     42b4e0 <flatcc_builder_create_union_vector@@Base+0x20>
  42b5cc:	mov    r13d,DWORD PTR [rbx+0x20]
  42b5d0:	lea    ecx,[r14+r13*1]
  42b5d4:	mov    DWORD PTR [rbx+0x20],ecx
  42b5d7:	cmp    ecx,eax
  42b5d9:	jb     42b62e <flatcc_builder_create_union_vector@@Base+0x16e>
  42b5db:	add    ecx,0x1
  42b5de:	lea    rsi,[rbx+0x68]
  42b5e2:	mov    rdi,QWORD PTR [rbx+0x40]
  42b5e6:	mov    edx,DWORD PTR [rbx+0x28]
  42b5e9:	add    rdx,rcx
  42b5ec:	mov    ecx,0x1
  42b5f1:	mov    r8d,0x1
  42b5f7:	call   QWORD PTR [rbx+0x50]
  42b5fa:	test   eax,eax
  42b5fc:	jne    42b4e0 <flatcc_builder_create_union_vector@@Base+0x20>
  42b602:	mov    eax,DWORD PTR [rbx+0x28]
  42b605:	mov    rsi,rax
  42b608:	add    rsi,QWORD PTR [rbx+0x68]
  42b60c:	mov    QWORD PTR [rbx+0x18],rsi
  42b610:	mov    ecx,DWORD PTR [rbx+0x70]
  42b613:	sub    ecx,eax
  42b615:	cmp    ecx,0xfffffffc
  42b618:	mov    eax,0xfffffffc
  42b61d:	cmovb  eax,ecx
  42b620:	mov    DWORD PTR [rbx+0x24],eax
  42b623:	mov    rax,QWORD PTR [rbx+0x30]
  42b627:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42b62e:	mov    r12,rsi
  42b631:	add    r12,r13
  42b634:	je     42b4e0 <flatcc_builder_create_union_vector@@Base+0x20>
  42b63a:	test   r14,r14
  42b63d:	je     42b6f9 <flatcc_builder_create_union_vector@@Base+0x239>
  42b643:	lea    rcx,[r14-0x1]
  42b647:	mov    r8d,r14d
  42b64a:	and    r8d,0x3
  42b64e:	cmp    rcx,0x3
  42b652:	jae    42b660 <flatcc_builder_create_union_vector@@Base+0x1a0>
  42b654:	xor    ecx,ecx
  42b656:	test   r8,r8
  42b659:	jne    42b6c7 <flatcc_builder_create_union_vector@@Base+0x207>
  42b65b:	jmp    42b6f9 <flatcc_builder_create_union_vector@@Base+0x239>
  42b660:	mov    rdx,r14
  42b663:	sub    rdx,r8
  42b666:	lea    rdi,[rsi+r13*1]
  42b66a:	add    rdi,0x3
  42b66e:	xor    ecx,ecx
  42b670:	movzx  eax,BYTE PTR [r15+rcx*8]
  42b675:	mov    BYTE PTR [rdi+rcx*1-0x3],al
  42b679:	mov    eax,DWORD PTR [r15+rcx*8+0x4]
  42b67e:	mov    DWORD PTR [rsi+rcx*4],eax
  42b681:	movzx  eax,BYTE PTR [r15+rcx*8+0x8]
  42b687:	mov    BYTE PTR [rdi+rcx*1-0x2],al
  42b68b:	mov    eax,DWORD PTR [r15+rcx*8+0xc]
  42b690:	mov    DWORD PTR [rsi+rcx*4+0x4],eax
  42b694:	movzx  eax,BYTE PTR [r15+rcx*8+0x10]
  42b69a:	mov    BYTE PTR [rdi+rcx*1-0x1],al
  42b69e:	mov    eax,DWORD PTR [r15+rcx*8+0x14]
  42b6a3:	mov    DWORD PTR [rsi+rcx*4+0x8],eax
  42b6a7:	movzx  eax,BYTE PTR [r15+rcx*8+0x18]
  42b6ad:	mov    BYTE PTR [rdi+rcx*1],al
  42b6b0:	mov    eax,DWORD PTR [r15+rcx*8+0x1c]
  42b6b5:	mov    DWORD PTR [rsi+rcx*4+0xc],eax
  42b6b9:	add    rcx,0x4
  42b6bd:	cmp    rdx,rcx
  42b6c0:	jne    42b670 <flatcc_builder_create_union_vector@@Base+0x1b0>
  42b6c2:	test   r8,r8
  42b6c5:	je     42b6f9 <flatcc_builder_create_union_vector@@Base+0x239>
  42b6c7:	lea    rdx,[rsi+rcx*4]
  42b6cb:	lea    rdi,[r15+rcx*8]
  42b6cf:	add    rdi,0x4
  42b6d3:	add    r13,rcx
  42b6d6:	add    r13,rsi
  42b6d9:	xor    ecx,ecx
  42b6db:	nop    DWORD PTR [rax+rax*1+0x0]
  42b6e0:	movzx  eax,BYTE PTR [rdi+rcx*8-0x4]
  42b6e5:	mov    BYTE PTR [r13+rcx*1+0x0],al
  42b6ea:	mov    eax,DWORD PTR [rdi+rcx*8]
  42b6ed:	mov    DWORD PTR [rdx+rcx*4],eax
  42b6f0:	add    rcx,0x1
  42b6f4:	cmp    r8,rcx
  42b6f7:	jne    42b6e0 <flatcc_builder_create_union_vector@@Base+0x220>
  42b6f9:	mov    rdi,rbx
  42b6fc:	mov    rdx,r14
  42b6ff:	mov    rcx,r12
  42b702:	call   42ad10 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42b707:	mov    r15d,eax
  42b70a:	test   eax,eax
  42b70c:	je     42b732 <flatcc_builder_create_union_vector@@Base+0x272>
  42b70e:	mov    ecx,0x1
  42b713:	mov    r8d,0x1
  42b719:	mov    r9d,0xffffffff
  42b71f:	mov    rdi,rbx
  42b722:	mov    rsi,r12
  42b725:	mov    rdx,r14
  42b728:	call   42aa90 <flatcc_builder_create_vector@@Base>
  42b72d:	mov    r14d,eax
  42b730:	jmp    42b735 <flatcc_builder_create_union_vector@@Base+0x275>
  42b732:	xor    r14d,r14d
  42b735:	shl    r15,0x20
  42b739:	mov    rdi,QWORD PTR [rbx+0x18]
  42b73d:	mov    edx,DWORD PTR [rbx+0x20]
  42b740:	xor    esi,esi
  42b742:	call   406110 <memset@plt>
  42b747:	mov    rax,QWORD PTR [rbx+0x30]
  42b74b:	mov    ecx,DWORD PTR [rax+0x8]
  42b74e:	mov    DWORD PTR [rbx+0x20],ecx
  42b751:	mov    ecx,DWORD PTR [rax]
  42b753:	mov    DWORD PTR [rbx+0x28],ecx
  42b756:	mov    edx,DWORD PTR [rax+0x4]
  42b759:	mov    rsi,rcx
  42b75c:	add    rsi,QWORD PTR [rbx+0x68]
  42b760:	mov    QWORD PTR [rbx+0x18],rsi
  42b764:	mov    esi,DWORD PTR [rbx+0x70]
  42b767:	sub    esi,ecx
  42b769:	cmp    esi,edx
  42b76b:	cmova  esi,edx
  42b76e:	mov    DWORD PTR [rbx+0x24],esi
  42b771:	movzx  ecx,WORD PTR [rbx+0xea]
  42b778:	cmp    WORD PTR [rbx+0xe8],cx
  42b77f:	jae    42b788 <flatcc_builder_create_union_vector@@Base+0x2c8>
  42b781:	mov    WORD PTR [rbx+0xe8],cx
  42b788:	or     r14,r15
  42b78b:	movzx  ecx,WORD PTR [rax+0xc]
  42b78f:	mov    WORD PTR [rbx+0xea],cx
  42b796:	add    rax,0xffffffffffffffdc
  42b79a:	mov    QWORD PTR [rbx+0x30],rax
  42b79e:	add    DWORD PTR [rbx+0x104],0xffffffff
  42b7a5:	jmp    42b4e3 <flatcc_builder_create_union_vector@@Base+0x23>
  42b7aa:	lea    rdi,[rip+0x208fa]        # 44c0ab <flatcc_builder_padding_base@@Base+0x130b>
  42b7b1:	lea    rsi,[rip+0x1f82a]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42b7b8:	lea    rcx,[rip+0x20907]        # 44c0c6 <flatcc_builder_padding_base@@Base+0x1326>
  42b7bf:	mov    edx,0x37c
  42b7c4:	call   406100 <__assert_fail@plt>
  42b7c9:	nop    DWORD PTR [rax+0x0]

000000000042b7d0 <flatcc_builder_create_union_vector_direct@@Base>:
  42b7d0:	push   r15
  42b7d2:	push   r14
  42b7d4:	push   r12
  42b7d6:	push   rbx
  42b7d7:	push   rax
  42b7d8:	mov    r14,rcx
  42b7db:	mov    r15,rsi
  42b7de:	mov    r12,rdi
  42b7e1:	mov    rsi,rdx
  42b7e4:	mov    rdx,rcx
  42b7e7:	mov    rcx,r15
  42b7ea:	call   42ad10 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42b7ef:	mov    ebx,eax
  42b7f1:	test   eax,eax
  42b7f3:	je     42b818 <flatcc_builder_create_union_vector_direct@@Base+0x48>
  42b7f5:	mov    ecx,0x1
  42b7fa:	mov    r8d,0x1
  42b800:	mov    r9d,0xffffffff
  42b806:	mov    rdi,r12
  42b809:	mov    rsi,r15
  42b80c:	mov    rdx,r14
  42b80f:	call   42aa90 <flatcc_builder_create_vector@@Base>
  42b814:	mov    eax,eax
  42b816:	jmp    42b81a <flatcc_builder_create_union_vector_direct@@Base+0x4a>
  42b818:	xor    eax,eax
  42b81a:	shl    rbx,0x20
  42b81e:	or     rbx,rax
  42b821:	mov    rax,rbx
  42b824:	add    rsp,0x8
  42b828:	pop    rbx
  42b829:	pop    r12
  42b82b:	pop    r14
  42b82d:	pop    r15
  42b82f:	ret    

000000000042b830 <flatcc_builder_start_union_vector@@Base>:
  42b830:	push   rbx
  42b831:	mov    rbx,rdi
  42b834:	mov    esi,0x4
  42b839:	call   428d00 <flatcc_builder_start_buffer@@Base+0xe0>
  42b83e:	mov    ecx,eax
  42b840:	mov    eax,0xffffffff
  42b845:	test   ecx,ecx
  42b847:	je     42b84b <flatcc_builder_start_union_vector@@Base+0x1b>
  42b849:	pop    rbx
  42b84a:	ret    
  42b84b:	mov    rax,QWORD PTR [rbx+0x30]
  42b84f:	mov    DWORD PTR [rax+0x10],0x8
  42b856:	mov    rax,QWORD PTR [rbx+0x30]
  42b85a:	mov    DWORD PTR [rax+0x14],0x0
  42b861:	mov    rax,QWORD PTR [rbx+0x30]
  42b865:	mov    WORD PTR [rax+0xe],0x7
  42b86b:	mov    ecx,DWORD PTR [rbx+0x28]
  42b86e:	mov    edx,DWORD PTR [rbx+0x70]
  42b871:	sub    edx,ecx
  42b873:	add    rcx,QWORD PTR [rbx+0x68]
  42b877:	mov    QWORD PTR [rbx+0x18],rcx
  42b87b:	cmp    edx,0xfffffffc
  42b87e:	mov    ecx,0xfffffffc
  42b883:	cmovb  ecx,edx
  42b886:	mov    DWORD PTR [rbx+0x24],ecx
  42b889:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42b890:	xor    eax,eax
  42b892:	pop    rbx
  42b893:	ret    
  42b894:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b89e:	xchg   ax,ax

000000000042b8a0 <flatcc_builder_end_union_vector@@Base>:
  42b8a0:	push   rbp
  42b8a1:	push   r15
  42b8a3:	push   r14
  42b8a5:	push   r13
  42b8a7:	push   r12
  42b8a9:	push   rbx
  42b8aa:	push   rax
  42b8ab:	mov    rax,QWORD PTR [rdi+0x30]
  42b8af:	movzx  ecx,WORD PTR [rax+0xe]
  42b8b3:	cmp    ecx,0x7
  42b8b6:	jne    42bcb6 <flatcc_builder_end_union_vector@@Base+0x416>
  42b8bc:	mov    r13,rdi
  42b8bf:	mov    r14d,DWORD PTR [rax+0x14]
  42b8c3:	lea    eax,[r14+r14*4]
  42b8c7:	mov    r12d,DWORD PTR [rdi+0x20]
  42b8cb:	add    eax,r12d
  42b8ce:	mov    DWORD PTR [rdi+0x20],eax
  42b8d1:	cmp    eax,DWORD PTR [rdi+0x24]
  42b8d4:	jae    42b8dc <flatcc_builder_end_union_vector@@Base+0x3c>
  42b8d6:	mov    r8,QWORD PTR [r13+0x18]
  42b8da:	jmp    42b934 <flatcc_builder_end_union_vector@@Base+0x94>
  42b8dc:	add    eax,0x1
  42b8df:	lea    rsi,[r13+0x68]
  42b8e3:	mov    rdi,QWORD PTR [r13+0x40]
  42b8e7:	mov    edx,DWORD PTR [r13+0x28]
  42b8eb:	add    rdx,rax
  42b8ee:	mov    ecx,0x1
  42b8f3:	mov    r8d,0x1
  42b8f9:	call   QWORD PTR [r13+0x50]
  42b8fd:	test   eax,eax
  42b8ff:	jne    42ba76 <flatcc_builder_end_union_vector@@Base+0x1d6>
  42b905:	mov    eax,DWORD PTR [r13+0x28]
  42b909:	mov    r8,rax
  42b90c:	add    r8,QWORD PTR [r13+0x68]
  42b910:	mov    QWORD PTR [r13+0x18],r8
  42b914:	mov    ecx,DWORD PTR [r13+0x70]
  42b918:	sub    ecx,eax
  42b91a:	cmp    ecx,0xfffffffc
  42b91d:	mov    eax,0xfffffffc
  42b922:	cmovb  eax,ecx
  42b925:	mov    DWORD PTR [r13+0x24],eax
  42b929:	mov    rax,QWORD PTR [r13+0x30]
  42b92d:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42b934:	mov    rsi,r8
  42b937:	add    rsi,r12
  42b93a:	je     42ba76 <flatcc_builder_end_union_vector@@Base+0x1d6>
  42b940:	lea    r15,[rsi+r14*4]
  42b944:	test   r14d,r14d
  42b947:	je     42ba3a <flatcc_builder_end_union_vector@@Base+0x19a>
  42b94d:	cmp    r14d,0x9
  42b951:	jae    42bb0a <flatcc_builder_end_union_vector@@Base+0x26a>
  42b957:	xor    r9d,r9d
  42b95a:	mov    r11d,r14d
  42b95d:	sub    r11d,r9d
  42b960:	mov    r10,r9
  42b963:	not    r10
  42b966:	add    r10,r14
  42b969:	and    r11,0x3
  42b96d:	je     42b9b2 <flatcc_builder_end_union_vector@@Base+0x112>
  42b96f:	mov    rdx,r9
  42b972:	neg    rdx
  42b975:	lea    rbp,[r12+r9*4]
  42b979:	add    rbp,r8
  42b97c:	lea    rbx,[r8+r9*8]
  42b980:	add    rbx,0x4
  42b984:	lea    rax,[r9+r14*4]
  42b988:	add    rax,r12
  42b98b:	add    rax,r8
  42b98e:	xor    edi,edi
  42b990:	movzx  ecx,BYTE PTR [rbx+rdi*8-0x4]
  42b995:	mov    BYTE PTR [rax+rdi*1],cl
  42b998:	mov    ecx,DWORD PTR [rbx+rdi*8]
  42b99b:	mov    DWORD PTR [rbp+rdi*4+0x0],ecx
  42b99f:	add    rdx,0xffffffffffffffff
  42b9a3:	add    rdi,0x1
  42b9a7:	cmp    r11,rdi
  42b9aa:	jne    42b990 <flatcc_builder_end_union_vector@@Base+0xf0>
  42b9ac:	neg    rdx
  42b9af:	mov    r9,rdx
  42b9b2:	cmp    r10,0x3
  42b9b6:	jb     42ba3a <flatcc_builder_end_union_vector@@Base+0x19a>
  42b9bc:	mov    rbp,r14
  42b9bf:	sub    rbp,r9
  42b9c2:	lea    rcx,[r12+r9*4]
  42b9c6:	lea    rdx,[r8+rcx*1]
  42b9ca:	add    rdx,0xc
  42b9ce:	lea    rdi,[r8+r9*8]
  42b9d2:	add    rdi,0x1c
  42b9d6:	lea    rcx,[r9+r14*4]
  42b9da:	add    rcx,r12
  42b9dd:	add    rcx,r8
  42b9e0:	add    rcx,0x3
  42b9e4:	xor    ebx,ebx
  42b9e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b9f0:	movzx  eax,BYTE PTR [rdi+rbx*8-0x1c]
  42b9f5:	mov    BYTE PTR [rcx+rbx*1-0x3],al
  42b9f9:	mov    eax,DWORD PTR [rdi+rbx*8-0x18]
  42b9fd:	mov    DWORD PTR [rdx+rbx*4-0xc],eax
  42ba01:	movzx  eax,BYTE PTR [rdi+rbx*8-0x14]
  42ba06:	mov    BYTE PTR [rcx+rbx*1-0x2],al
  42ba0a:	mov    eax,DWORD PTR [rdi+rbx*8-0x10]
  42ba0e:	mov    DWORD PTR [rdx+rbx*4-0x8],eax
  42ba12:	movzx  eax,BYTE PTR [rdi+rbx*8-0xc]
  42ba17:	mov    BYTE PTR [rcx+rbx*1-0x1],al
  42ba1b:	mov    eax,DWORD PTR [rdi+rbx*8-0x8]
  42ba1f:	mov    DWORD PTR [rdx+rbx*4-0x4],eax
  42ba23:	movzx  eax,BYTE PTR [rdi+rbx*8-0x4]
  42ba28:	mov    BYTE PTR [rcx+rbx*1],al
  42ba2b:	mov    eax,DWORD PTR [rdi+rbx*8]
  42ba2e:	mov    DWORD PTR [rdx+rbx*4],eax
  42ba31:	add    rbx,0x4
  42ba35:	cmp    rbp,rbx
  42ba38:	jne    42b9f0 <flatcc_builder_end_union_vector@@Base+0x150>
  42ba3a:	mov    rdi,r13
  42ba3d:	mov    rdx,r14
  42ba40:	mov    rcx,r15
  42ba43:	vzeroupper 
  42ba46:	call   42ad10 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42ba4b:	mov    r12d,eax
  42ba4e:	test   eax,eax
  42ba50:	je     42ba7b <flatcc_builder_end_union_vector@@Base+0x1db>
  42ba52:	mov    ecx,0x1
  42ba57:	mov    r8d,0x1
  42ba5d:	mov    r9d,0xffffffff
  42ba63:	mov    rdi,r13
  42ba66:	mov    rsi,r15
  42ba69:	mov    rdx,r14
  42ba6c:	call   42aa90 <flatcc_builder_create_vector@@Base>
  42ba71:	mov    r14d,eax
  42ba74:	jmp    42ba7e <flatcc_builder_end_union_vector@@Base+0x1de>
  42ba76:	xor    r14d,r14d
  42ba79:	jmp    42baf8 <flatcc_builder_end_union_vector@@Base+0x258>
  42ba7b:	xor    r14d,r14d
  42ba7e:	shl    r12,0x20
  42ba82:	mov    rdi,QWORD PTR [r13+0x18]
  42ba86:	mov    edx,DWORD PTR [r13+0x20]
  42ba8a:	xor    esi,esi
  42ba8c:	call   406110 <memset@plt>
  42ba91:	mov    rax,QWORD PTR [r13+0x30]
  42ba95:	mov    ecx,DWORD PTR [rax+0x8]
  42ba98:	mov    DWORD PTR [r13+0x20],ecx
  42ba9c:	mov    ecx,DWORD PTR [rax]
  42ba9e:	mov    DWORD PTR [r13+0x28],ecx
  42baa2:	mov    edx,DWORD PTR [rax+0x4]
  42baa5:	mov    rsi,rcx
  42baa8:	add    rsi,QWORD PTR [r13+0x68]
  42baac:	mov    QWORD PTR [r13+0x18],rsi
  42bab0:	mov    esi,DWORD PTR [r13+0x70]
  42bab4:	sub    esi,ecx
  42bab6:	cmp    esi,edx
  42bab8:	cmova  esi,edx
  42babb:	mov    DWORD PTR [r13+0x24],esi
  42babf:	movzx  ecx,WORD PTR [r13+0xea]
  42bac7:	cmp    WORD PTR [r13+0xe8],cx
  42bacf:	jae    42bad9 <flatcc_builder_end_union_vector@@Base+0x239>
  42bad1:	mov    WORD PTR [r13+0xe8],cx
  42bad9:	or     r14,r12
  42badc:	movzx  ecx,WORD PTR [rax+0xc]
  42bae0:	mov    WORD PTR [r13+0xea],cx
  42bae8:	add    rax,0xffffffffffffffdc
  42baec:	mov    QWORD PTR [r13+0x30],rax
  42baf0:	add    DWORD PTR [r13+0x104],0xffffffff
  42baf8:	mov    rax,r14
  42bafb:	add    rsp,0x8
  42baff:	pop    rbx
  42bb00:	pop    r12
  42bb02:	pop    r13
  42bb04:	pop    r14
  42bb06:	pop    r15
  42bb08:	pop    rbp
  42bb09:	ret    
  42bb0a:	lea    rax,[r14-0x1]
  42bb0e:	mov    ecx,0x8
  42bb13:	mul    rcx
  42bb16:	seto   cl
  42bb19:	lea    rdi,[r8+0x4]
  42bb1d:	mov    rdx,rax
  42bb20:	add    rdx,rdi
  42bb23:	setb   dl
  42bb26:	xor    r9d,r9d
  42bb29:	add    rax,r8
  42bb2c:	jb     42b95a <flatcc_builder_end_union_vector@@Base+0xba>
  42bb32:	test   cl,cl
  42bb34:	jne    42b95a <flatcc_builder_end_union_vector@@Base+0xba>
  42bb3a:	test   dl,dl
  42bb3c:	jne    42b95a <flatcc_builder_end_union_vector@@Base+0xba>
  42bb42:	test   cl,cl
  42bb44:	jne    42b95a <flatcc_builder_end_union_vector@@Base+0xba>
  42bb4a:	lea    rcx,[r14+r14*4]
  42bb4e:	add    rcx,r12
  42bb51:	add    rcx,r8
  42bb54:	lea    rdx,[r8+r14*8]
  42bb58:	add    rdx,0xfffffffffffffff9
  42bb5c:	cmp    rdx,r15
  42bb5f:	seta   r11b
  42bb63:	lea    rbx,[r8+r14*8]
  42bb67:	cmp    r8,rcx
  42bb6a:	setb   r10b
  42bb6e:	cmp    rbx,r15
  42bb71:	seta   al
  42bb74:	cmp    rdi,rcx
  42bb77:	setb   bpl
  42bb7b:	cmp    rsi,rdx
  42bb7e:	setb   cl
  42bb81:	cmp    r8,r15
  42bb84:	setb   BYTE PTR [rsp+0x7]
  42bb89:	cmp    rsi,rbx
  42bb8c:	setb   dl
  42bb8f:	cmp    rdi,r15
  42bb92:	setb   dil
  42bb96:	xor    r9d,r9d
  42bb99:	test   r11b,r10b
  42bb9c:	jne    42b95a <flatcc_builder_end_union_vector@@Base+0xba>
  42bba2:	and    al,bpl
  42bba5:	jne    42b95a <flatcc_builder_end_union_vector@@Base+0xba>
  42bbab:	and    cl,BYTE PTR [rsp+0x7]
  42bbaf:	jne    42b95a <flatcc_builder_end_union_vector@@Base+0xba>
  42bbb5:	and    dl,dil
  42bbb8:	jne    42b95a <flatcc_builder_end_union_vector@@Base+0xba>
  42bbbe:	mov    eax,r14d
  42bbc1:	and    eax,0x7
  42bbc4:	test   rax,rax
  42bbc7:	mov    ecx,0x8
  42bbcc:	cmovne rcx,rax
  42bbd0:	mov    r9,r14
  42bbd3:	sub    r9,rcx
  42bbd6:	vmovdqa ymm0,YMMWORD PTR [rip+0x17882]        # 443460 <_IO_stdin_used@@Base+0x14460>
  42bbde:	vmovdqa ymm1,YMMWORD PTR [rip+0x1789a]        # 443480 <_IO_stdin_used@@Base+0x14480>
  42bbe6:	xor    eax,eax
  42bbe8:	vmovdqa xmm8,XMMWORD PTR [rip+0x1f3b0]        # 44afa0 <flatcc_builder_padding_base@@Base+0x200>
  42bbf0:	vmovdqa xmm9,XMMWORD PTR [rip+0x1f3b8]        # 44afb0 <flatcc_builder_padding_base@@Base+0x210>
  42bbf8:	vpbroadcastq ymm4,QWORD PTR [rip+0x1f3bf]        # 44afc0 <flatcc_builder_padding_base@@Base+0x220>
  42bc01:	vpbroadcastq ymm5,QWORD PTR [rip+0x1f3be]        # 44afc8 <flatcc_builder_padding_base@@Base+0x228>
  42bc0a:	mov    rdi,r8
  42bc0d:	nop    DWORD PTR [rax]
  42bc10:	vmovdqu ymm6,YMMWORD PTR [rdi]
  42bc14:	vmovdqu ymm7,YMMWORD PTR [rdi+0x20]
  42bc19:	vextracti128 xmm2,ymm7,0x1
  42bc1f:	vpshufb xmm2,xmm2,xmm8
  42bc24:	vpshufb xmm7,xmm7,xmm8
  42bc29:	vpunpcklwd xmm2,xmm7,xmm2
  42bc2d:	vextracti128 xmm7,ymm6,0x1
  42bc33:	vpshufb xmm7,xmm7,xmm9
  42bc38:	vpshufb xmm6,xmm6,xmm9
  42bc3d:	vpunpcklwd xmm6,xmm6,xmm7
  42bc41:	vpblendd xmm2,xmm6,xmm2,0x2
  42bc47:	vmovq  QWORD PTR [r15+rax*1],xmm2
  42bc4d:	vpsllq ymm2,ymm1,0x3
  42bc52:	vmovq  xmm6,r8
  42bc57:	vpbroadcastq ymm6,xmm6
  42bc5c:	vpaddq ymm2,ymm6,ymm2
  42bc60:	vpaddq ymm2,ymm2,ymm4
  42bc64:	vpsllq ymm7,ymm0,0x3
  42bc69:	vpaddq ymm6,ymm6,ymm7
  42bc6d:	vpaddq ymm6,ymm6,ymm4
  42bc71:	vpcmpeqd xmm7,xmm7,xmm7
  42bc75:	vpgatherqd xmm3,DWORD PTR [ymm6*1+0x0],xmm7
  42bc7f:	vpcmpeqd xmm6,xmm6,xmm6
  42bc83:	vpgatherqd xmm7,DWORD PTR [ymm2*1+0x0],xmm6
  42bc8d:	vinserti128 ymm2,ymm7,xmm3,0x1
  42bc93:	vmovdqu YMMWORD PTR [rsi+rax*4],ymm2
  42bc98:	add    rax,0x8
  42bc9c:	vpaddq ymm1,ymm1,ymm5
  42bca0:	vpaddq ymm0,ymm0,ymm5
  42bca4:	add    rdi,0x40
  42bca8:	cmp    r9,rax
  42bcab:	jne    42bc10 <flatcc_builder_end_union_vector@@Base+0x370>
  42bcb1:	jmp    42b95a <flatcc_builder_end_union_vector@@Base+0xba>
  42bcb6:	lea    rdi,[rip+0x1ff61]        # 44bc1e <flatcc_builder_padding_base@@Base+0xe7e>
  42bcbd:	lea    rsi,[rip+0x1f31e]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42bcc4:	lea    rcx,[rip+0x1ff85]        # 44bc50 <flatcc_builder_padding_base@@Base+0xeb0>
  42bccb:	mov    edx,0x651
  42bcd0:	call   406100 <__assert_fail@plt>
  42bcd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bcdf:	nop

000000000042bce0 <flatcc_builder_union_vector_count@@Base>:
  42bce0:	mov    rax,QWORD PTR [rdi+0x30]
  42bce4:	mov    eax,DWORD PTR [rax+0x14]
  42bce7:	ret    
  42bce8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042bcf0 <flatcc_builder_union_vector_edit@@Base>:
  42bcf0:	mov    rax,QWORD PTR [rdi+0x18]
  42bcf4:	ret    
  42bcf5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bcff:	nop

000000000042bd00 <flatcc_builder_extend_union_vector@@Base>:
  42bd00:	push   r14
  42bd02:	push   rbx
  42bd03:	push   rax
  42bd04:	mov    rax,QWORD PTR [rdi+0x30]
  42bd08:	mov    ecx,DWORD PTR [rax+0x14]
  42bd0b:	add    ecx,esi
  42bd0d:	jb     42bd95 <flatcc_builder_extend_union_vector@@Base+0x95>
  42bd13:	cmp    ecx,0x20000000
  42bd19:	jae    42bd95 <flatcc_builder_extend_union_vector@@Base+0x95>
  42bd1b:	mov    rbx,rdi
  42bd1e:	mov    DWORD PTR [rax+0x14],ecx
  42bd21:	mov    r14d,DWORD PTR [rdi+0x20]
  42bd25:	lea    eax,[r14+rsi*8]
  42bd29:	mov    DWORD PTR [rdi+0x20],eax
  42bd2c:	cmp    eax,DWORD PTR [rdi+0x24]
  42bd2f:	jae    42bd37 <flatcc_builder_extend_union_vector@@Base+0x37>
  42bd31:	mov    rax,QWORD PTR [rbx+0x18]
  42bd35:	jmp    42bd8a <flatcc_builder_extend_union_vector@@Base+0x8a>
  42bd37:	add    eax,0x1
  42bd3a:	lea    rsi,[rbx+0x68]
  42bd3e:	mov    rdi,QWORD PTR [rbx+0x40]
  42bd42:	mov    edx,DWORD PTR [rbx+0x28]
  42bd45:	add    rdx,rax
  42bd48:	mov    ecx,0x1
  42bd4d:	mov    r8d,0x1
  42bd53:	call   QWORD PTR [rbx+0x50]
  42bd56:	test   eax,eax
  42bd58:	je     42bd5e <flatcc_builder_extend_union_vector@@Base+0x5e>
  42bd5a:	xor    eax,eax
  42bd5c:	jmp    42bd8d <flatcc_builder_extend_union_vector@@Base+0x8d>
  42bd5e:	mov    ecx,DWORD PTR [rbx+0x28]
  42bd61:	mov    rax,rcx
  42bd64:	add    rax,QWORD PTR [rbx+0x68]
  42bd68:	mov    QWORD PTR [rbx+0x18],rax
  42bd6c:	mov    edx,DWORD PTR [rbx+0x70]
  42bd6f:	sub    edx,ecx
  42bd71:	cmp    edx,0xfffffffc
  42bd74:	mov    ecx,0xfffffffc
  42bd79:	cmovb  ecx,edx
  42bd7c:	mov    DWORD PTR [rbx+0x24],ecx
  42bd7f:	mov    rcx,QWORD PTR [rbx+0x30]
  42bd83:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  42bd8a:	add    rax,r14
  42bd8d:	add    rsp,0x8
  42bd91:	pop    rbx
  42bd92:	pop    r14
  42bd94:	ret    
  42bd95:	lea    rdi,[rip+0x2030f]        # 44c0ab <flatcc_builder_padding_base@@Base+0x130b>
  42bd9c:	lea    rsi,[rip+0x1f23f]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42bda3:	lea    rcx,[rip+0x2031c]        # 44c0c6 <flatcc_builder_padding_base@@Base+0x1326>
  42bdaa:	mov    edx,0x37c
  42bdaf:	call   406100 <__assert_fail@plt>
  42bdb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bdbe:	xchg   ax,ax

000000000042bdc0 <flatcc_builder_truncate_union_vector@@Base>:
  42bdc0:	push   rax
  42bdc1:	mov    rcx,QWORD PTR [rdi+0x30]
  42bdc5:	movzx  edx,WORD PTR [rcx+0xe]
  42bdc9:	cmp    edx,0x7
  42bdcc:	jne    42be00 <flatcc_builder_truncate_union_vector@@Base+0x40>
  42bdce:	mov    rax,rsi
  42bdd1:	mov    edx,DWORD PTR [rcx+0x14]
  42bdd4:	sub    edx,eax
  42bdd6:	jb     42be1f <flatcc_builder_truncate_union_vector@@Base+0x5f>
  42bdd8:	mov    DWORD PTR [rcx+0x14],edx
  42bddb:	mov    rcx,QWORD PTR [rdi+0x30]
  42bddf:	imul   eax,DWORD PTR [rcx+0x10]
  42bde3:	mov    ecx,DWORD PTR [rdi+0x20]
  42bde6:	sub    ecx,eax
  42bde8:	mov    DWORD PTR [rdi+0x20],ecx
  42bdeb:	add    rcx,QWORD PTR [rdi+0x18]
  42bdef:	xor    esi,esi
  42bdf1:	mov    rdi,rcx
  42bdf4:	mov    rdx,rax
  42bdf7:	call   406110 <memset@plt>
  42bdfc:	xor    eax,eax
  42bdfe:	pop    rcx
  42bdff:	ret    
  42be00:	lea    rdi,[rip+0x1fe17]        # 44bc1e <flatcc_builder_padding_base@@Base+0xe7e>
  42be07:	lea    rsi,[rip+0x1f1d4]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42be0e:	lea    rcx,[rip+0x1fe8e]        # 44bca3 <flatcc_builder_padding_base@@Base+0xf03>
  42be15:	mov    edx,0x681
  42be1a:	call   406100 <__assert_fail@plt>
  42be1f:	lea    rdi,[rip+0x1f85c]        # 44b682 <flatcc_builder_padding_base@@Base+0x8e2>
  42be26:	lea    rsi,[rip+0x1f1b5]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42be2d:	lea    rcx,[rip+0x1fe6f]        # 44bca3 <flatcc_builder_padding_base@@Base+0xf03>
  42be34:	mov    edx,0x682
  42be39:	call   406100 <__assert_fail@plt>
  42be3e:	xchg   ax,ax

000000000042be40 <flatcc_builder_union_vector_push@@Base>:
  42be40:	push   r15
  42be42:	push   r14
  42be44:	push   rbx
  42be45:	mov    rax,QWORD PTR [rdi+0x30]
  42be49:	movzx  ecx,WORD PTR [rax+0xe]
  42be4d:	cmp    ecx,0x7
  42be50:	jne    42beea <flatcc_builder_union_vector_push@@Base+0xaa>
  42be56:	mov    ecx,DWORD PTR [rax+0x14]
  42be59:	cmp    ecx,0x1fffffff
  42be5f:	je     42beac <flatcc_builder_union_vector_push@@Base+0x6c>
  42be61:	mov    r14,rsi
  42be64:	mov    rbx,rdi
  42be67:	add    ecx,0x1
  42be6a:	mov    DWORD PTR [rax+0x14],ecx
  42be6d:	mov    r15d,DWORD PTR [rdi+0x20]
  42be71:	lea    eax,[r15+0x8]
  42be75:	mov    DWORD PTR [rdi+0x20],eax
  42be78:	cmp    eax,DWORD PTR [rdi+0x24]
  42be7b:	jae    42be88 <flatcc_builder_union_vector_push@@Base+0x48>
  42be7d:	mov    rax,QWORD PTR [rbx+0x18]
  42be81:	add    rax,r15
  42be84:	jne    42bee1 <flatcc_builder_union_vector_push@@Base+0xa1>
  42be86:	jmp    42beac <flatcc_builder_union_vector_push@@Base+0x6c>
  42be88:	lea    eax,[r15+0x9]
  42be8c:	lea    rsi,[rbx+0x68]
  42be90:	mov    rdi,QWORD PTR [rbx+0x40]
  42be94:	mov    edx,DWORD PTR [rbx+0x28]
  42be97:	add    rdx,rax
  42be9a:	mov    ecx,0x1
  42be9f:	mov    r8d,0x1
  42bea5:	call   QWORD PTR [rbx+0x50]
  42bea8:	test   eax,eax
  42beaa:	je     42beb0 <flatcc_builder_union_vector_push@@Base+0x70>
  42beac:	xor    eax,eax
  42beae:	jmp    42bee4 <flatcc_builder_union_vector_push@@Base+0xa4>
  42beb0:	mov    ecx,DWORD PTR [rbx+0x28]
  42beb3:	mov    rax,rcx
  42beb6:	add    rax,QWORD PTR [rbx+0x68]
  42beba:	mov    QWORD PTR [rbx+0x18],rax
  42bebe:	mov    edx,DWORD PTR [rbx+0x70]
  42bec1:	sub    edx,ecx
  42bec3:	cmp    edx,0xfffffffc
  42bec6:	mov    ecx,0xfffffffc
  42becb:	cmovb  ecx,edx
  42bece:	mov    DWORD PTR [rbx+0x24],ecx
  42bed1:	mov    rcx,QWORD PTR [rbx+0x30]
  42bed5:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  42bedc:	add    rax,r15
  42bedf:	je     42beac <flatcc_builder_union_vector_push@@Base+0x6c>
  42bee1:	mov    QWORD PTR [rax],r14
  42bee4:	pop    rbx
  42bee5:	pop    r14
  42bee7:	pop    r15
  42bee9:	ret    
  42beea:	lea    rdi,[rip+0x1fd2d]        # 44bc1e <flatcc_builder_padding_base@@Base+0xe7e>
  42bef1:	lea    rsi,[rip+0x1f0ea]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42bef8:	lea    rcx,[rip+0x1fde9]        # 44bce8 <flatcc_builder_padding_base@@Base+0xf48>
  42beff:	mov    edx,0x68d
  42bf04:	call   406100 <__assert_fail@plt>
  42bf09:	nop    DWORD PTR [rax+0x0]

000000000042bf10 <flatcc_builder_append_union_vector@@Base>:
  42bf10:	push   r15
  42bf12:	push   r14
  42bf14:	push   r13
  42bf16:	push   r12
  42bf18:	push   rbx
  42bf19:	mov    rax,QWORD PTR [rdi+0x30]
  42bf1d:	movzx  ecx,WORD PTR [rax+0xe]
  42bf21:	cmp    ecx,0x7
  42bf24:	jne    42c001 <flatcc_builder_append_union_vector@@Base+0xf1>
  42bf2a:	mov    r15,rdx
  42bf2d:	mov    ecx,DWORD PTR [rax+0x14]
  42bf30:	add    ecx,r15d
  42bf33:	jb     42bfe2 <flatcc_builder_append_union_vector@@Base+0xd2>
  42bf39:	cmp    ecx,0x20000000
  42bf3f:	jae    42bfe2 <flatcc_builder_append_union_vector@@Base+0xd2>
  42bf45:	mov    r14,rsi
  42bf48:	mov    rbx,rdi
  42bf4b:	mov    DWORD PTR [rax+0x14],ecx
  42bf4e:	mov    r13d,DWORD PTR [rdi+0x20]
  42bf52:	lea    eax,[r13+r15*8+0x0]
  42bf57:	mov    DWORD PTR [rdi+0x20],eax
  42bf5a:	cmp    eax,DWORD PTR [rdi+0x24]
  42bf5d:	jae    42bf6a <flatcc_builder_append_union_vector@@Base+0x5a>
  42bf5f:	mov    r12,QWORD PTR [rbx+0x18]
  42bf63:	add    r12,r13
  42bf66:	jne    42bfc3 <flatcc_builder_append_union_vector@@Base+0xb3>
  42bf68:	jmp    42bf8d <flatcc_builder_append_union_vector@@Base+0x7d>
  42bf6a:	add    eax,0x1
  42bf6d:	lea    rsi,[rbx+0x68]
  42bf71:	mov    rdi,QWORD PTR [rbx+0x40]
  42bf75:	mov    edx,DWORD PTR [rbx+0x28]
  42bf78:	add    rdx,rax
  42bf7b:	mov    ecx,0x1
  42bf80:	mov    r8d,0x1
  42bf86:	call   QWORD PTR [rbx+0x50]
  42bf89:	test   eax,eax
  42bf8b:	je     42bf92 <flatcc_builder_append_union_vector@@Base+0x82>
  42bf8d:	xor    r12d,r12d
  42bf90:	jmp    42bfd5 <flatcc_builder_append_union_vector@@Base+0xc5>
  42bf92:	mov    eax,DWORD PTR [rbx+0x28]
  42bf95:	mov    r12,rax
  42bf98:	add    r12,QWORD PTR [rbx+0x68]
  42bf9c:	mov    QWORD PTR [rbx+0x18],r12
  42bfa0:	mov    ecx,DWORD PTR [rbx+0x70]
  42bfa3:	sub    ecx,eax
  42bfa5:	cmp    ecx,0xfffffffc
  42bfa8:	mov    eax,0xfffffffc
  42bfad:	cmovb  eax,ecx
  42bfb0:	mov    DWORD PTR [rbx+0x24],eax
  42bfb3:	mov    rax,QWORD PTR [rbx+0x30]
  42bfb7:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42bfbe:	add    r12,r13
  42bfc1:	je     42bf8d <flatcc_builder_append_union_vector@@Base+0x7d>
  42bfc3:	shl    r15d,0x3
  42bfc7:	mov    edx,r15d
  42bfca:	mov    rdi,r12
  42bfcd:	mov    rsi,r14
  42bfd0:	call   4061a0 <memcpy@plt>
  42bfd5:	mov    rax,r12
  42bfd8:	pop    rbx
  42bfd9:	pop    r12
  42bfdb:	pop    r13
  42bfdd:	pop    r14
  42bfdf:	pop    r15
  42bfe1:	ret    
  42bfe2:	lea    rdi,[rip+0x200c2]        # 44c0ab <flatcc_builder_padding_base@@Base+0x130b>
  42bfe9:	lea    rsi,[rip+0x1eff2]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42bff0:	lea    rcx,[rip+0x200cf]        # 44c0c6 <flatcc_builder_padding_base@@Base+0x1326>
  42bff7:	mov    edx,0x37c
  42bffc:	call   406100 <__assert_fail@plt>
  42c001:	lea    rdi,[rip+0x1fc16]        # 44bc1e <flatcc_builder_padding_base@@Base+0xe7e>
  42c008:	lea    rsi,[rip+0x1efd3]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42c00f:	lea    rcx,[rip+0x1fd3f]        # 44bd55 <flatcc_builder_padding_base@@Base+0xfb5>
  42c016:	mov    edx,0x69c
  42c01b:	call   406100 <__assert_fail@plt>

000000000042c020 <flatcc_builder_create_string@@Base>:
  42c020:	push   rbp
  42c021:	push   rbx
  42c022:	sub    rsp,0x98
  42c029:	xor    ebp,ebp
  42c02b:	mov    rax,rdx
  42c02e:	shr    rax,0x20
  42c032:	jne    42c108 <flatcc_builder_create_string@@Base+0xe8>
  42c038:	mov    rbx,rdi
  42c03b:	mov    DWORD PTR [rsp+0x4],edx
  42c03f:	mov    ebp,DWORD PTR [rdi+0xf0]
  42c045:	mov    eax,edx
  42c047:	not    eax
  42c049:	add    eax,ebp
  42c04b:	and    eax,0x3
  42c04e:	add    eax,0x1
  42c051:	mov    QWORD PTR [rsp+0x8],0x4
  42c05a:	lea    rcx,[rsp+0x4]
  42c05f:	mov    QWORD PTR [rsp+0x18],rcx
  42c064:	mov    QWORD PTR [rsp+0x20],0x4
  42c06d:	mov    DWORD PTR [rsp+0x10],0x1
  42c075:	test   rdx,rdx
  42c078:	je     42c09c <flatcc_builder_create_string@@Base+0x7c>
  42c07a:	lea    rcx,[rdx+0x4]
  42c07e:	mov    QWORD PTR [rsp+0x8],rcx
  42c083:	mov    QWORD PTR [rsp+0x28],rsi
  42c088:	mov    QWORD PTR [rsp+0x30],rdx
  42c08d:	mov    DWORD PTR [rsp+0x10],0x2
  42c095:	mov    edx,0x2
  42c09a:	jmp    42c0a6 <flatcc_builder_create_string@@Base+0x86>
  42c09c:	mov    edx,0x1
  42c0a1:	mov    ecx,0x4
  42c0a6:	mov    esi,eax
  42c0a8:	lea    r8,[rcx+rsi*1]
  42c0ac:	mov    QWORD PTR [rsp+0x8],r8
  42c0b1:	mov    eax,edx
  42c0b3:	shl    rax,0x4
  42c0b7:	lea    rdi,[rip+0x1ece2]        # 44ada0 <flatcc_builder_padding_base@@Base>
  42c0be:	mov    QWORD PTR [rsp+rax*1+0x18],rdi
  42c0c3:	mov    QWORD PTR [rsp+rax*1+0x20],rsi
  42c0c8:	add    edx,0x1
  42c0cb:	mov    DWORD PTR [rsp+0x10],edx
  42c0cf:	cmp    r8,0x11
  42c0d3:	setb   al
  42c0d6:	add    rcx,rsi
  42c0d9:	add    rcx,0xfffffffffffffff0
  42c0dd:	shr    rcx,0x20
  42c0e1:	sete   cl
  42c0e4:	test   r8d,r8d
  42c0e7:	jle    42c114 <flatcc_builder_create_string@@Base+0xf4>
  42c0e9:	or     al,cl
  42c0eb:	je     42c114 <flatcc_builder_create_string@@Base+0xf4>
  42c0ed:	sub    ebp,r8d
  42c0f0:	mov    rdi,QWORD PTR [rbx+0x38]
  42c0f4:	lea    rsi,[rsp+0x18]
  42c0f9:	mov    ecx,ebp
  42c0fb:	call   QWORD PTR [rbx+0x48]
  42c0fe:	test   eax,eax
  42c100:	jne    42c133 <flatcc_builder_create_string@@Base+0x113>
  42c102:	mov    DWORD PTR [rbx+0xf0],ebp
  42c108:	mov    eax,ebp
  42c10a:	add    rsp,0x98
  42c111:	pop    rbx
  42c112:	pop    rbp
  42c113:	ret    
  42c114:	lea    rdi,[rip+0x15a64]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  42c11b:	lea    rsi,[rip+0x1eec0]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42c122:	lea    rcx,[rip+0x1ff38]        # 44c061 <flatcc_builder_padding_base@@Base+0x12c1>
  42c129:	mov    edx,0x287
  42c12e:	call   406100 <__assert_fail@plt>
  42c133:	lea    rdi,[rip+0x15a45]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  42c13a:	lea    rsi,[rip+0x1eea1]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42c141:	lea    rcx,[rip+0x1ff19]        # 44c061 <flatcc_builder_padding_base@@Base+0x12c1>
  42c148:	mov    edx,0x28b
  42c14d:	call   406100 <__assert_fail@plt>
  42c152:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c15c:	nop    DWORD PTR [rax+0x0]

000000000042c160 <flatcc_builder_create_string_str@@Base>:
  42c160:	push   r14
  42c162:	push   rbx
  42c163:	push   rax
  42c164:	mov    rbx,rsi
  42c167:	mov    r14,rdi
  42c16a:	mov    rdi,rsi
  42c16d:	call   4060d0 <strlen@plt>
  42c172:	mov    rdi,r14
  42c175:	mov    rsi,rbx
  42c178:	mov    rdx,rax
  42c17b:	add    rsp,0x8
  42c17f:	pop    rbx
  42c180:	pop    r14
  42c182:	jmp    42c020 <flatcc_builder_create_string@@Base>
  42c187:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c190 <flatcc_builder_create_string_strn@@Base>:
  42c190:	push   r15
  42c192:	push   r14
  42c194:	push   rbx
  42c195:	mov    rbx,rdx
  42c198:	mov    r14,rsi
  42c19b:	mov    r15,rdi
  42c19e:	xor    esi,esi
  42c1a0:	mov    rdi,r14
  42c1a3:	call   406130 <memchr@plt>
  42c1a8:	mov    rcx,rax
  42c1ab:	sub    rcx,r14
  42c1ae:	test   rax,rax
  42c1b1:	cmovne rbx,rcx
  42c1b5:	mov    rdi,r15
  42c1b8:	mov    rsi,r14
  42c1bb:	mov    rdx,rbx
  42c1be:	pop    rbx
  42c1bf:	pop    r14
  42c1c1:	pop    r15
  42c1c3:	jmp    42c020 <flatcc_builder_create_string@@Base>
  42c1c8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042c1d0 <flatcc_builder_end_string@@Base>:
  42c1d0:	push   rbp
  42c1d1:	push   rbx
  42c1d2:	push   rax
  42c1d3:	mov    rax,QWORD PTR [rdi+0x30]
  42c1d7:	movzx  ecx,WORD PTR [rax+0xe]
  42c1db:	cmp    ecx,0x6
  42c1de:	jne    42c277 <flatcc_builder_end_string@@Base+0xa7>
  42c1e4:	mov    rbx,rdi
  42c1e7:	mov    edx,DWORD PTR [rax+0x14]
  42c1ea:	cmp    edx,DWORD PTR [rdi+0x20]
  42c1ed:	jne    42c296 <flatcc_builder_end_string@@Base+0xc6>
  42c1f3:	mov    rsi,QWORD PTR [rbx+0x18]
  42c1f7:	mov    rdi,rbx
  42c1fa:	call   42c020 <flatcc_builder_create_string@@Base>
  42c1ff:	mov    ebp,eax
  42c201:	test   eax,eax
  42c203:	je     42c26e <flatcc_builder_end_string@@Base+0x9e>
  42c205:	mov    rdi,QWORD PTR [rbx+0x18]
  42c209:	mov    edx,DWORD PTR [rbx+0x20]
  42c20c:	xor    esi,esi
  42c20e:	call   406110 <memset@plt>
  42c213:	mov    rax,QWORD PTR [rbx+0x30]
  42c217:	mov    ecx,DWORD PTR [rax+0x8]
  42c21a:	mov    DWORD PTR [rbx+0x20],ecx
  42c21d:	mov    ecx,DWORD PTR [rax]
  42c21f:	mov    DWORD PTR [rbx+0x28],ecx
  42c222:	mov    edx,DWORD PTR [rax+0x4]
  42c225:	mov    rsi,rcx
  42c228:	add    rsi,QWORD PTR [rbx+0x68]
  42c22c:	mov    QWORD PTR [rbx+0x18],rsi
  42c230:	mov    esi,DWORD PTR [rbx+0x70]
  42c233:	sub    esi,ecx
  42c235:	cmp    esi,edx
  42c237:	cmova  esi,edx
  42c23a:	mov    DWORD PTR [rbx+0x24],esi
  42c23d:	movzx  ecx,WORD PTR [rbx+0xea]
  42c244:	cmp    WORD PTR [rbx+0xe8],cx
  42c24b:	jae    42c254 <flatcc_builder_end_string@@Base+0x84>
  42c24d:	mov    WORD PTR [rbx+0xe8],cx
  42c254:	movzx  ecx,WORD PTR [rax+0xc]
  42c258:	mov    WORD PTR [rbx+0xea],cx
  42c25f:	add    rax,0xffffffffffffffdc
  42c263:	mov    QWORD PTR [rbx+0x30],rax
  42c267:	add    DWORD PTR [rbx+0x104],0xffffffff
  42c26e:	mov    eax,ebp
  42c270:	add    rsp,0x8
  42c274:	pop    rbx
  42c275:	pop    rbp
  42c276:	ret    
  42c277:	lea    rdi,[rip+0x1f2a3]        # 44b521 <flatcc_builder_padding_base@@Base+0x781>
  42c27e:	lea    rsi,[rip+0x1ed5d]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42c285:	lea    rcx,[rip+0x1fb48]        # 44bdd4 <flatcc_builder_padding_base@@Base+0x1034>
  42c28c:	mov    edx,0x6c4
  42c291:	call   406100 <__assert_fail@plt>
  42c296:	lea    rdi,[rip+0x1fb7a]        # 44be17 <flatcc_builder_padding_base@@Base+0x1077>
  42c29d:	lea    rsi,[rip+0x1ed3e]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42c2a4:	lea    rcx,[rip+0x1fb29]        # 44bdd4 <flatcc_builder_padding_base@@Base+0x1034>
  42c2ab:	mov    edx,0x6c5
  42c2b0:	call   406100 <__assert_fail@plt>
  42c2b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c2bf:	nop

000000000042c2c0 <flatcc_builder_string_edit@@Base>:
  42c2c0:	mov    rax,QWORD PTR [rdi+0x18]
  42c2c4:	ret    
  42c2c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c2cf:	nop

000000000042c2d0 <flatcc_builder_string_len@@Base>:
  42c2d0:	mov    rax,QWORD PTR [rdi+0x30]
  42c2d4:	mov    eax,DWORD PTR [rax+0x14]
  42c2d7:	ret    
  42c2d8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042c2e0 <flatcc_builder_table_edit@@Base>:
  42c2e0:	mov    rax,QWORD PTR [rdi+0x30]
  42c2e4:	movzx  eax,WORD PTR [rax+0xe]
  42c2e8:	cmp    eax,0x3
  42c2eb:	jne    42c2f8 <flatcc_builder_table_edit@@Base+0x18>
  42c2ed:	mov    eax,DWORD PTR [rdi+0x20]
  42c2f0:	add    rax,QWORD PTR [rdi+0x18]
  42c2f4:	sub    rax,rsi
  42c2f7:	ret    
  42c2f8:	push   rax
  42c2f9:	lea    rdi,[rip+0x1f511]        # 44b811 <flatcc_builder_padding_base@@Base+0xa71>
  42c300:	lea    rsi,[rip+0x1ecdb]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42c307:	lea    rcx,[rip+0x1fbbb]        # 44bec9 <flatcc_builder_padding_base@@Base+0x1129>
  42c30e:	mov    edx,0x702
  42c313:	call   406100 <__assert_fail@plt>
  42c318:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042c320 <flatcc_builder_table_add_copy@@Base>:
  42c320:	push   r15
  42c322:	push   r14
  42c324:	push   rbx
  42c325:	mov    r15,rcx
  42c328:	mov    r14,rdx
  42c32b:	mov    rdx,rcx
  42c32e:	mov    ecx,r8d
  42c331:	call   42b270 <flatcc_builder_table_add@@Base>
  42c336:	mov    rbx,rax
  42c339:	test   rax,rax
  42c33c:	je     42c34c <flatcc_builder_table_add_copy@@Base+0x2c>
  42c33e:	mov    rdi,rbx
  42c341:	mov    rsi,r14
  42c344:	mov    rdx,r15
  42c347:	call   4061a0 <memcpy@plt>
  42c34c:	mov    rax,rbx
  42c34f:	pop    rbx
  42c350:	pop    r14
  42c352:	pop    r15
  42c354:	ret    
  42c355:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c35f:	nop

000000000042c360 <flatcc_builder_push_buffer_alignment@@Base>:
  42c360:	movzx  eax,WORD PTR [rdi+0xe8]
  42c367:	mov    WORD PTR [rdi+0xe8],0x4
  42c370:	ret    
  42c371:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c37b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042c380 <flatcc_builder_pop_buffer_alignment@@Base>:
  42c380:	cmp    WORD PTR [rdi+0xe8],si
  42c387:	jae    42c390 <flatcc_builder_pop_buffer_alignment@@Base+0x10>
  42c389:	mov    WORD PTR [rdi+0xe8],si
  42c390:	ret    
  42c391:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c39b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042c3a0 <flatcc_builder_get_buffer_alignment@@Base>:
  42c3a0:	movzx  eax,WORD PTR [rdi+0xe8]
  42c3a7:	ret    
  42c3a8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042c3b0 <flatcc_builder_set_vtable_clustering@@Base>:
  42c3b0:	xor    eax,eax
  42c3b2:	test   esi,esi
  42c3b4:	sete   al
  42c3b7:	mov    DWORD PTR [rdi+0x124],eax
  42c3bd:	ret    
  42c3be:	xchg   ax,ax

000000000042c3c0 <flatcc_builder_set_block_align@@Base>:
  42c3c0:	mov    WORD PTR [rdi+0xec],si
  42c3c7:	ret    
  42c3c8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042c3d0 <flatcc_builder_get_level@@Base>:
  42c3d0:	mov    eax,DWORD PTR [rdi+0x104]
  42c3d6:	ret    
  42c3d7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c3e0 <flatcc_builder_set_max_level@@Base>:
  42c3e0:	mov    DWORD PTR [rdi+0x120],esi
  42c3e6:	cmp    DWORD PTR [rdi+0x108],esi
  42c3ec:	jge    42c3f4 <flatcc_builder_set_max_level@@Base+0x14>
  42c3ee:	mov    DWORD PTR [rdi+0x108],esi
  42c3f4:	ret    
  42c3f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c3ff:	nop

000000000042c400 <flatcc_builder_get_buffer_size@@Base>:
  42c400:	movsxd rax,DWORD PTR [rdi+0xf4]
  42c407:	movsxd rcx,DWORD PTR [rdi+0xf0]
  42c40e:	sub    rax,rcx
  42c411:	ret    
  42c412:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c41c:	nop    DWORD PTR [rax+0x0]

000000000042c420 <flatcc_builder_get_buffer_start@@Base>:
  42c420:	mov    eax,DWORD PTR [rdi+0xf0]
  42c426:	ret    
  42c427:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c430 <flatcc_builder_get_buffer_end@@Base>:
  42c430:	mov    eax,DWORD PTR [rdi+0xf4]
  42c436:	ret    
  42c437:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c440 <flatcc_builder_set_vtable_cache_limit@@Base>:
  42c440:	mov    QWORD PTR [rdi+0x118],rsi
  42c447:	ret    
  42c448:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042c450 <flatcc_builder_set_identifier@@Base>:
  42c450:	test   rsi,rsi
  42c453:	jne    42c45c <flatcc_builder_set_identifier@@Base+0xc>
  42c455:	lea    rsi,[rip+0x1e944]        # 44ada0 <flatcc_builder_padding_base@@Base>
  42c45c:	mov    eax,DWORD PTR [rsi]
  42c45e:	mov    DWORD PTR [rdi+0x110],eax
  42c464:	ret    
  42c465:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c46f:	nop

000000000042c470 <flatcc_builder_get_type@@Base>:
  42c470:	mov    rax,QWORD PTR [rdi+0x30]
  42c474:	test   rax,rax
  42c477:	je     42c47e <flatcc_builder_get_type@@Base+0xe>
  42c479:	movzx  eax,WORD PTR [rax+0xe]
  42c47d:	ret    
  42c47e:	xor    eax,eax
  42c480:	ret    
  42c481:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c48b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042c490 <flatcc_builder_get_type_at@@Base>:
  42c490:	xor    eax,eax
  42c492:	test   esi,esi
  42c494:	jle    42c4b2 <flatcc_builder_get_type_at@@Base+0x22>
  42c496:	mov    ecx,DWORD PTR [rdi+0x104]
  42c49c:	cmp    ecx,esi
  42c49e:	jl     42c4b2 <flatcc_builder_get_type_at@@Base+0x22>
  42c4a0:	mov    rax,QWORD PTR [rdi+0x30]
  42c4a4:	sub    esi,ecx
  42c4a6:	movsxd rcx,esi
  42c4a9:	lea    rcx,[rcx+rcx*8]
  42c4ad:	movzx  eax,WORD PTR [rax+rcx*4+0xe]
  42c4b2:	ret    
  42c4b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c4bd:	nop    DWORD PTR [rax]

000000000042c4c0 <flatcc_builder_get_direct_buffer@@Base>:
  42c4c0:	cmp    DWORD PTR [rdi+0x128],0x0
  42c4c7:	je     42c4d9 <flatcc_builder_get_direct_buffer@@Base+0x19>
  42c4c9:	mov    rax,QWORD PTR [rdi+0x130]
  42c4d0:	cmp    rax,QWORD PTR [rdi+0x138]
  42c4d7:	je     42c4e8 <flatcc_builder_get_direct_buffer@@Base+0x28>
  42c4d9:	test   rsi,rsi
  42c4dc:	je     42c4e5 <flatcc_builder_get_direct_buffer@@Base+0x25>
  42c4de:	mov    QWORD PTR [rsi],0x0
  42c4e5:	xor    eax,eax
  42c4e7:	ret    
  42c4e8:	test   rsi,rsi
  42c4eb:	je     42c4f7 <flatcc_builder_get_direct_buffer@@Base+0x37>
  42c4ed:	mov    rax,QWORD PTR [rdi+0x160]
  42c4f4:	mov    QWORD PTR [rsi],rax
  42c4f7:	mov    rax,QWORD PTR [rdi+0x140]
  42c4fe:	ret    
  42c4ff:	nop

000000000042c500 <flatcc_builder_copy_buffer@@Base>:
  42c500:	push   rax
  42c501:	cmp    DWORD PTR [rdi+0x128],0x0
  42c508:	je     42c51d <flatcc_builder_copy_buffer@@Base+0x1d>
  42c50a:	add    rdi,0x130
  42c511:	call   42ce20 <flatcc_emitter_copy_buffer@@Base>
  42c516:	test   rax,rax
  42c519:	je     42c521 <flatcc_builder_copy_buffer@@Base+0x21>
  42c51b:	pop    rcx
  42c51c:	ret    
  42c51d:	xor    eax,eax
  42c51f:	pop    rcx
  42c520:	ret    
  42c521:	lea    rdi,[rip+0x1ed28]        # 44b250 <flatcc_builder_padding_base@@Base+0x4b0>
  42c528:	lea    rsi,[rip+0x1eab3]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42c52f:	lea    rcx,[rip+0x1fa1e]        # 44bf54 <flatcc_builder_padding_base@@Base+0x11b4>
  42c536:	mov    edx,0x786
  42c53b:	call   406100 <__assert_fail@plt>

000000000042c540 <flatcc_builder_finalize_buffer@@Base>:
  42c540:	push   r15
  42c542:	push   r14
  42c544:	push   rbx
  42c545:	mov    rbx,rdi
  42c548:	movsxd r14,DWORD PTR [rdi+0xf4]
  42c54f:	movsxd rax,DWORD PTR [rdi+0xf0]
  42c556:	sub    r14,rax
  42c559:	test   rsi,rsi
  42c55c:	je     42c561 <flatcc_builder_finalize_buffer@@Base+0x21>
  42c55e:	mov    QWORD PTR [rsi],r14
  42c561:	mov    rdi,r14
  42c564:	call   4061b0 <malloc@plt>
  42c569:	test   rax,rax
  42c56c:	je     42c59d <flatcc_builder_finalize_buffer@@Base+0x5d>
  42c56e:	cmp    DWORD PTR [rbx+0x128],0x0
  42c575:	je     42c5bc <flatcc_builder_finalize_buffer@@Base+0x7c>
  42c577:	mov    r15,rax
  42c57a:	add    rbx,0x130
  42c581:	mov    rdi,rbx
  42c584:	mov    rsi,rax
  42c587:	mov    rdx,r14
  42c58a:	call   42ce20 <flatcc_emitter_copy_buffer@@Base>
  42c58f:	test   rax,rax
  42c592:	je     42c5db <flatcc_builder_finalize_buffer@@Base+0x9b>
  42c594:	mov    rax,r15
  42c597:	pop    rbx
  42c598:	pop    r14
  42c59a:	pop    r15
  42c59c:	ret    
  42c59d:	lea    rdi,[rip+0x155db]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  42c5a4:	lea    rsi,[rip+0x1ea37]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42c5ab:	lea    rcx,[rip+0x1f9e7]        # 44bf99 <flatcc_builder_padding_base@@Base+0x11f9>
  42c5b2:	mov    edx,0x798
  42c5b7:	call   406100 <__assert_fail@plt>
  42c5bc:	lea    rdi,[rip+0x155bc]        # 441b7f <_IO_stdin_used@@Base+0x12b7f>
  42c5c3:	lea    rsi,[rip+0x1ea18]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42c5ca:	lea    rcx,[rip+0x1f9c8]        # 44bf99 <flatcc_builder_padding_base@@Base+0x11f9>
  42c5d1:	mov    edx,0x79c
  42c5d6:	call   406100 <__assert_fail@plt>
  42c5db:	lea    rdi,[rip+0x1ec6e]        # 44b250 <flatcc_builder_padding_base@@Base+0x4b0>
  42c5e2:	lea    rsi,[rip+0x1e9f9]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42c5e9:	lea    rcx,[rip+0x1f964]        # 44bf54 <flatcc_builder_padding_base@@Base+0x11b4>
  42c5f0:	mov    edx,0x786
  42c5f5:	call   406100 <__assert_fail@plt>
  42c5fa:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c600 <flatcc_builder_finalize_aligned_buffer@@Base>:
  42c600:	push   r15
  42c602:	push   r14
  42c604:	push   r12
  42c606:	push   rbx
  42c607:	push   rax
  42c608:	mov    r14,rsi
  42c60b:	mov    r15,rdi
  42c60e:	movsxd rax,DWORD PTR [rdi+0xf4]
  42c615:	movsxd rcx,DWORD PTR [rdi+0xf0]
  42c61c:	sub    rax,rcx
  42c61f:	test   rsi,rsi
  42c622:	je     42c627 <flatcc_builder_finalize_aligned_buffer@@Base+0x27>
  42c624:	mov    QWORD PTR [r14],rax
  42c627:	movzx  ecx,WORD PTR [r15+0xe8]
  42c62f:	add    rax,rcx
  42c632:	add    rax,0xffffffffffffffff
  42c636:	mov    rbx,rcx
  42c639:	neg    rbx
  42c63c:	and    rbx,rax
  42c63f:	cmp    rcx,0x8
  42c643:	mov    QWORD PTR [rsp],0x0
  42c64b:	mov    esi,0x8
  42c650:	cmova  rsi,rcx
  42c654:	mov    rdi,rsp
  42c657:	mov    rdx,rbx
  42c65a:	call   406230 <posix_memalign@plt>
  42c65f:	mov    r12,QWORD PTR [rsp]
  42c663:	test   eax,eax
  42c665:	je     42c676 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  42c667:	test   r12,r12
  42c66a:	je     42c676 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  42c66c:	mov    rdi,r12
  42c66f:	call   406040 <free@plt>
  42c674:	jmp    42c6be <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  42c676:	test   r12,r12
  42c679:	je     42c6be <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  42c67b:	cmp    DWORD PTR [r15+0x128],0x0
  42c683:	je     42c66c <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>
  42c685:	add    r15,0x130
  42c68c:	mov    rdi,r15
  42c68f:	mov    rsi,r12
  42c692:	mov    rdx,rbx
  42c695:	call   42ce20 <flatcc_emitter_copy_buffer@@Base>
  42c69a:	test   rax,rax
  42c69d:	jne    42c6cd <flatcc_builder_finalize_aligned_buffer@@Base+0xcd>
  42c69f:	lea    rdi,[rip+0x1ebaa]        # 44b250 <flatcc_builder_padding_base@@Base+0x4b0>
  42c6a6:	lea    rsi,[rip+0x1e935]        # 44afe2 <flatcc_builder_padding_base@@Base+0x242>
  42c6ad:	lea    rcx,[rip+0x1f8a0]        # 44bf54 <flatcc_builder_padding_base@@Base+0x11b4>
  42c6b4:	mov    edx,0x786
  42c6b9:	call   406100 <__assert_fail@plt>
  42c6be:	test   r14,r14
  42c6c1:	je     42c6ca <flatcc_builder_finalize_aligned_buffer@@Base+0xca>
  42c6c3:	mov    QWORD PTR [r14],0x0
  42c6ca:	xor    r12d,r12d
  42c6cd:	mov    rax,r12
  42c6d0:	add    rsp,0x8
  42c6d4:	pop    rbx
  42c6d5:	pop    r12
  42c6d7:	pop    r14
  42c6d9:	pop    r15
  42c6db:	ret    
  42c6dc:	nop    DWORD PTR [rax+0x0]

000000000042c6e0 <flatcc_builder_aligned_alloc@@Base>:
  42c6e0:	push   rax
  42c6e1:	mov    rax,rsi
  42c6e4:	mov    QWORD PTR [rsp],0x0
  42c6ec:	cmp    rdi,0x8
  42c6f0:	mov    esi,0x8
  42c6f5:	cmova  rsi,rdi
  42c6f9:	mov    rdi,rsp
  42c6fc:	mov    rdx,rax
  42c6ff:	call   406230 <posix_memalign@plt>
  42c704:	mov    ecx,eax
  42c706:	mov    rax,QWORD PTR [rsp]
  42c70a:	test   ecx,ecx
  42c70c:	je     42c725 <flatcc_builder_aligned_alloc@@Base+0x45>
  42c70e:	test   rax,rax
  42c711:	je     42c725 <flatcc_builder_aligned_alloc@@Base+0x45>
  42c713:	mov    rdi,rax
  42c716:	call   406040 <free@plt>
  42c71b:	mov    QWORD PTR [rsp],0x0
  42c723:	xor    eax,eax
  42c725:	pop    rcx
  42c726:	ret    
  42c727:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c730 <flatcc_builder_aligned_free@@Base>:
  42c730:	jmp    406040 <free@plt>
  42c735:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c73f:	nop

000000000042c740 <flatcc_builder_get_emit_context@@Base>:
  42c740:	mov    rax,QWORD PTR [rdi+0x38]
  42c744:	ret    
  42c745:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c74f:	nop

000000000042c750 <flatcc_emitter_recycle_page@@Base>:
  42c750:	mov    rcx,QWORD PTR [rdi]
  42c753:	mov    eax,0xffffffff
  42c758:	cmp    rcx,rsi
  42c75b:	je     42c7b2 <flatcc_emitter_recycle_page@@Base+0x62>
  42c75d:	cmp    QWORD PTR [rdi+0x8],rsi
  42c761:	je     42c7b2 <flatcc_emitter_recycle_page@@Base+0x62>
  42c763:	mov    rax,QWORD PTR [rsi+0xb80]
  42c76a:	mov    rdx,QWORD PTR [rsi+0xb88]
  42c771:	mov    QWORD PTR [rax+0xb88],rdx
  42c778:	mov    rdx,QWORD PTR [rsi+0xb88]
  42c77f:	mov    QWORD PTR [rdx+0xb80],rax
  42c786:	mov    rax,QWORD PTR [rcx+0xb88]
  42c78d:	mov    QWORD PTR [rsi+0xb88],rax
  42c794:	mov    QWORD PTR [rsi+0xb80],rcx
  42c79b:	mov    QWORD PTR [rax+0xb80],rsi
  42c7a2:	mov    rax,QWORD PTR [rsi+0xb80]
  42c7a9:	mov    QWORD PTR [rax+0xb88],rsi
  42c7b0:	xor    eax,eax
  42c7b2:	ret    
  42c7b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c7bd:	nop    DWORD PTR [rax]

000000000042c7c0 <flatcc_emitter_reset@@Base>:
  42c7c0:	push   r14
  42c7c2:	push   rbx
  42c7c3:	push   rax
  42c7c4:	mov    rax,QWORD PTR [rdi]
  42c7c7:	test   rax,rax
  42c7ca:	je     42c8ab <flatcc_emitter_reset@@Base+0xeb>
  42c7d0:	mov    rbx,rdi
  42c7d3:	mov    QWORD PTR [rdi+0x8],rax
  42c7d7:	lea    rcx,[rax+0x5c0]
  42c7de:	mov    QWORD PTR [rdi+0x10],rcx
  42c7e2:	mov    QWORD PTR [rdi+0x20],rcx
  42c7e6:	mov    QWORD PTR [rdi+0x18],0x5c0
  42c7ee:	mov    QWORD PTR [rdi+0x28],0x5c0
  42c7f6:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42c800:	mov    rcx,QWORD PTR [rdi+0x30]
  42c804:	mov    rdx,QWORD PTR [rdi+0x40]
  42c808:	test   rdx,rdx
  42c80b:	jne    42c814 <flatcc_emitter_reset@@Base+0x54>
  42c80d:	mov    QWORD PTR [rbx+0x40],rcx
  42c811:	mov    rdx,rcx
  42c814:	lea    rdx,[rdx+rdx*2]
  42c818:	shr    rdx,0x2
  42c81c:	shr    rcx,0x2
  42c820:	add    rcx,rdx
  42c823:	mov    QWORD PTR [rbx+0x40],rcx
  42c827:	mov    QWORD PTR [rbx+0x30],0x0
  42c82f:	add    rcx,rcx
  42c832:	cmp    rcx,QWORD PTR [rbx+0x38]
  42c836:	jae    42c8ab <flatcc_emitter_reset@@Base+0xeb>
  42c838:	mov    rdi,QWORD PTR [rax+0xb80]
  42c83f:	cmp    rdi,rax
  42c842:	je     42c8ab <flatcc_emitter_reset@@Base+0xeb>
  42c844:	lea    rcx,[rax+0xb80]
  42c84b:	mov    r14,0xfffffffffffff480
  42c852:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c85c:	nop    DWORD PTR [rax+0x0]
  42c860:	mov    rdx,QWORD PTR [rdi+0xb80]
  42c867:	mov    QWORD PTR [rcx],rdx
  42c86a:	mov    rcx,QWORD PTR [rdi+0xb80]
  42c871:	mov    QWORD PTR [rcx+0xb88],rax
  42c878:	call   406040 <free@plt>
  42c87d:	mov    rax,QWORD PTR [rbx+0x38]
  42c881:	add    rax,r14
  42c884:	mov    QWORD PTR [rbx+0x38],rax
  42c888:	mov    rcx,QWORD PTR [rbx+0x40]
  42c88c:	add    rcx,rcx
  42c88f:	cmp    rcx,rax
  42c892:	jae    42c8ab <flatcc_emitter_reset@@Base+0xeb>
  42c894:	mov    rax,QWORD PTR [rbx+0x8]
  42c898:	lea    rcx,[rax+0xb80]
  42c89f:	mov    rdi,QWORD PTR [rax+0xb80]
  42c8a6:	cmp    rdi,QWORD PTR [rbx]
  42c8a9:	jne    42c860 <flatcc_emitter_reset@@Base+0xa0>
  42c8ab:	add    rsp,0x8
  42c8af:	pop    rbx
  42c8b0:	pop    r14
  42c8b2:	ret    
  42c8b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c8bd:	nop    DWORD PTR [rax]

000000000042c8c0 <flatcc_emitter_clear@@Base>:
  42c8c0:	push   r14
  42c8c2:	push   rbx
  42c8c3:	push   rax
  42c8c4:	mov    rbx,QWORD PTR [rdi]
  42c8c7:	test   rbx,rbx
  42c8ca:	je     42c92a <flatcc_emitter_clear@@Base+0x6a>
  42c8cc:	mov    r14,rdi
  42c8cf:	mov    rax,QWORD PTR [rbx+0xb88]
  42c8d6:	mov    QWORD PTR [rax+0xb80],0x0
  42c8e1:	jmp    42c8ff <flatcc_emitter_clear@@Base+0x3f>
  42c8e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c8ed:	nop    DWORD PTR [rax]
  42c8f0:	mov    rbx,rax
  42c8f3:	mov    rdi,QWORD PTR [rax+0xb88]
  42c8fa:	call   406040 <free@plt>
  42c8ff:	mov    rax,QWORD PTR [rbx+0xb80]
  42c906:	test   rax,rax
  42c909:	jne    42c8f0 <flatcc_emitter_clear@@Base+0x30>
  42c90b:	mov    rdi,rbx
  42c90e:	call   406040 <free@plt>
  42c913:	vxorps xmm0,xmm0,xmm0
  42c917:	vmovups YMMWORD PTR [r14+0x20],ymm0
  42c91d:	vmovups YMMWORD PTR [r14],ymm0
  42c922:	mov    QWORD PTR [r14+0x40],0x0
  42c92a:	add    rsp,0x8
  42c92e:	pop    rbx
  42c92f:	pop    r14
  42c931:	vzeroupper 
  42c934:	ret    
  42c935:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c93f:	nop

000000000042c940 <flatcc_emitter@@Base>:
  42c940:	push   rbp
  42c941:	push   r15
  42c943:	push   r14
  42c945:	push   r13
  42c947:	push   r12
  42c949:	push   rbx
  42c94a:	sub    rsp,0x18
  42c94e:	mov    r13d,edx
  42c951:	mov    r14,rsi
  42c954:	mov    r12,rdi
  42c957:	add    QWORD PTR [rdi+0x30],r8
  42c95b:	test   ecx,ecx
  42c95d:	js     42caf1 <flatcc_emitter@@Base+0x1b1>
  42c963:	mov    rdx,QWORD PTR [r12+0x28]
  42c968:	cmp    rdx,r8
  42c96b:	jae    42ccd8 <flatcc_emitter@@Base+0x398>
  42c971:	xor    eax,eax
  42c973:	test   r13d,r13d
  42c976:	je     42ce0f <flatcc_emitter@@Base+0x4cf>
  42c97c:	mov    QWORD PTR [rsp+0x8],r13
  42c981:	mov    r15,QWORD PTR [r14+0x8]
  42c985:	test   r15,r15
  42c988:	je     42cad6 <flatcc_emitter@@Base+0x196>
  42c98e:	mov    r13,QWORD PTR [r14]
  42c991:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c99b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c9a0:	mov    rbp,r15
  42c9a3:	cmp    r15,rdx
  42c9a6:	jbe    42caa8 <flatcc_emitter@@Base+0x168>
  42c9ac:	mov    rbp,rdx
  42c9af:	nop
  42c9b0:	test   rbp,rbp
  42c9b3:	jne    42caa8 <flatcc_emitter@@Base+0x168>
  42c9b9:	mov    rbx,QWORD PTR [r12+0x8]
  42c9be:	test   rbx,rbx
  42c9c1:	je     42c9d0 <flatcc_emitter@@Base+0x90>
  42c9c3:	mov    rax,QWORD PTR [rbx+0xb80]
  42c9ca:	cmp    rax,QWORD PTR [r12]
  42c9ce:	jne    42ca11 <flatcc_emitter@@Base+0xd1>
  42c9d0:	mov    edi,0xb98
  42c9d5:	call   4061b0 <malloc@plt>
  42c9da:	test   rax,rax
  42c9dd:	je     42cced <flatcc_emitter@@Base+0x3ad>
  42c9e3:	add    QWORD PTR [r12+0x38],0xb80
  42c9ec:	test   rbx,rbx
  42c9ef:	je     42ca50 <flatcc_emitter@@Base+0x110>
  42c9f1:	mov    QWORD PTR [rax+0xb88],rbx
  42c9f8:	mov    rcx,QWORD PTR [r12]
  42c9fc:	mov    QWORD PTR [rax+0xb80],rcx
  42ca03:	mov    QWORD PTR [rcx+0xb88],rax
  42ca0a:	mov    QWORD PTR [rbx+0xb80],rax
  42ca11:	mov    QWORD PTR [r12+0x8],rax
  42ca16:	mov    QWORD PTR [r12+0x20],rax
  42ca1b:	mov    QWORD PTR [r12+0x28],0xb80
  42ca24:	mov    rcx,QWORD PTR [rax+0xb88]
  42ca2b:	mov    ecx,DWORD PTR [rcx+0xb90]
  42ca31:	mov    edx,0xb80
  42ca36:	add    ecx,edx
  42ca38:	mov    DWORD PTR [rax+0xb90],ecx
  42ca3e:	mov    ebp,0xb80
  42ca43:	cmp    r15,rbp
  42ca46:	ja     42c9b0 <flatcc_emitter@@Base+0x70>
  42ca4c:	jmp    42caa5 <flatcc_emitter@@Base+0x165>
  42ca4e:	xchg   ax,ax
  42ca50:	mov    QWORD PTR [r12],rax
  42ca54:	mov    QWORD PTR [r12+0x8],rax
  42ca59:	mov    QWORD PTR [rax+0xb80],rax
  42ca60:	mov    QWORD PTR [rax+0xb88],rax
  42ca67:	mov    rcx,rax
  42ca6a:	add    rcx,0x5c0
  42ca71:	mov    QWORD PTR [r12+0x10],rcx
  42ca76:	mov    QWORD PTR [r12+0x20],rcx
  42ca7b:	mov    QWORD PTR [r12+0x18],0x5c0
  42ca84:	mov    QWORD PTR [r12+0x28],0x5c0
  42ca8d:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42ca97:	mov    ebp,0x5c0
  42ca9c:	cmp    r15,rbp
  42ca9f:	ja     42c9b0 <flatcc_emitter@@Base+0x70>
  42caa5:	mov    rbp,r15
  42caa8:	mov    rdi,QWORD PTR [r12+0x20]
  42caad:	mov    rsi,r13
  42cab0:	mov    rdx,rbp
  42cab3:	call   4061a0 <memcpy@plt>
  42cab8:	add    QWORD PTR [r12+0x20],rbp
  42cabd:	add    r13,rbp
  42cac0:	mov    rdx,QWORD PTR [r12+0x28]
  42cac5:	sub    rdx,rbp
  42cac8:	mov    QWORD PTR [r12+0x28],rdx
  42cacd:	sub    r15,rbp
  42cad0:	jne    42c9a0 <flatcc_emitter@@Base+0x60>
  42cad6:	mov    r13,QWORD PTR [rsp+0x8]
  42cadb:	add    r13d,0xffffffff
  42cadf:	add    r14,0x10
  42cae3:	test   r13d,r13d
  42cae6:	jne    42c97c <flatcc_emitter@@Base+0x3c>
  42caec:	jmp    42ce0d <flatcc_emitter@@Base+0x4cd>
  42caf1:	lea    rsi,[r12+0x18]
  42caf6:	mov    rdx,QWORD PTR [r12+0x18]
  42cafb:	cmp    rdx,r8
  42cafe:	jae    42ccf7 <flatcc_emitter@@Base+0x3b7>
  42cb04:	xor    eax,eax
  42cb06:	test   r13d,r13d
  42cb09:	je     42ce0f <flatcc_emitter@@Base+0x4cf>
  42cb0f:	mov    QWORD PTR [rsp+0x10],rsi
  42cb14:	movsxd rax,r13d
  42cb17:	shl    rax,0x4
  42cb1b:	add    r14,rax
  42cb1e:	mov    esi,0xfffff480
  42cb23:	mov    QWORD PTR [rsp+0x8],r13
  42cb28:	mov    r15,QWORD PTR [r14-0x8]
  42cb2c:	add    r14,0xfffffffffffffff0
  42cb30:	test   r15,r15
  42cb33:	je     42ccc4 <flatcc_emitter@@Base+0x384>
  42cb39:	mov    r13,QWORD PTR [r14]
  42cb3c:	add    r13,r15
  42cb3f:	nop
  42cb40:	mov    rax,QWORD PTR [rsp+0x10]
  42cb45:	mov    rax,QWORD PTR [rax]
  42cb48:	cmp    r15,rax
  42cb4b:	jbe    42cc90 <flatcc_emitter@@Base+0x350>
  42cb51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cb5b:	nop    DWORD PTR [rax+rax*1+0x0]
  42cb60:	mov    rbp,rax
  42cb63:	test   rax,rax
  42cb66:	jne    42cc93 <flatcc_emitter@@Base+0x353>
  42cb6c:	mov    rbx,QWORD PTR [r12]
  42cb70:	test   rbx,rbx
  42cb73:	je     42cba0 <flatcc_emitter@@Base+0x260>
  42cb75:	mov    rax,QWORD PTR [rbx+0xb88]
  42cb7c:	cmp    rax,QWORD PTR [r12+0x8]
  42cb81:	je     42cba0 <flatcc_emitter@@Base+0x260>
  42cb83:	mov    edx,DWORD PTR [rbx+0xb90]
  42cb89:	add    edx,esi
  42cb8b:	lea    rcx,[rax+0xb90]
  42cb92:	mov    DWORD PTR [rax+0xb90],edx
  42cb98:	mov    QWORD PTR [r12],rax
  42cb9c:	jmp    42cbf5 <flatcc_emitter@@Base+0x2b5>
  42cb9e:	xchg   ax,ax
  42cba0:	mov    edi,0xb98
  42cba5:	call   4061b0 <malloc@plt>
  42cbaa:	test   rax,rax
  42cbad:	je     42cced <flatcc_emitter@@Base+0x3ad>
  42cbb3:	add    QWORD PTR [r12+0x38],0xb80
  42cbbc:	test   rbx,rbx
  42cbbf:	je     42cc30 <flatcc_emitter@@Base+0x2f0>
  42cbc1:	mov    rcx,QWORD PTR [r12+0x8]
  42cbc6:	mov    QWORD PTR [rax+0xb88],rcx
  42cbcd:	mov    QWORD PTR [rax+0xb80],rbx
  42cbd4:	mov    QWORD PTR [rbx+0xb88],rax
  42cbdb:	mov    QWORD PTR [rcx+0xb80],rax
  42cbe2:	mov    QWORD PTR [r12],rax
  42cbe6:	mov    rcx,rax
  42cbe9:	add    rcx,0xb90
  42cbf0:	mov    esi,0xfffff480
  42cbf5:	lea    rdx,[rax+0xb80]
  42cbfc:	mov    QWORD PTR [r12+0x10],rdx
  42cc01:	mov    QWORD PTR [r12+0x18],0xb80
  42cc0a:	mov    rax,QWORD PTR [rax+0xb80]
  42cc11:	mov    eax,DWORD PTR [rax+0xb90]
  42cc17:	add    eax,esi
  42cc19:	mov    DWORD PTR [rcx],eax
  42cc1b:	mov    eax,0xb80
  42cc20:	cmp    r15,rax
  42cc23:	ja     42cb60 <flatcc_emitter@@Base+0x220>
  42cc29:	jmp    42cc90 <flatcc_emitter@@Base+0x350>
  42cc2b:	nop    DWORD PTR [rax+rax*1+0x0]
  42cc30:	mov    QWORD PTR [r12],rax
  42cc34:	mov    QWORD PTR [r12+0x8],rax
  42cc39:	mov    QWORD PTR [rax+0xb80],rax
  42cc40:	mov    QWORD PTR [rax+0xb88],rax
  42cc47:	mov    rcx,rax
  42cc4a:	add    rcx,0x5c0
  42cc51:	mov    QWORD PTR [r12+0x10],rcx
  42cc56:	mov    QWORD PTR [r12+0x20],rcx
  42cc5b:	mov    QWORD PTR [r12+0x18],0x5c0
  42cc64:	mov    QWORD PTR [r12+0x28],0x5c0
  42cc6d:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42cc77:	mov    eax,0x5c0
  42cc7c:	mov    esi,0xfffff480
  42cc81:	cmp    r15,rax
  42cc84:	ja     42cb60 <flatcc_emitter@@Base+0x220>
  42cc8a:	nop    WORD PTR [rax+rax*1+0x0]
  42cc90:	mov    rbp,r15
  42cc93:	mov    rdi,QWORD PTR [r12+0x10]
  42cc98:	sub    rdi,rbp
  42cc9b:	mov    QWORD PTR [r12+0x10],rdi
  42cca0:	sub    rax,rbp
  42cca3:	mov    QWORD PTR [r12+0x18],rax
  42cca8:	sub    r13,rbp
  42ccab:	mov    rsi,r13
  42ccae:	mov    rdx,rbp
  42ccb1:	call   4061a0 <memcpy@plt>
  42ccb6:	mov    esi,0xfffff480
  42ccbb:	sub    r15,rbp
  42ccbe:	jne    42cb40 <flatcc_emitter@@Base+0x200>
  42ccc4:	mov    r13,QWORD PTR [rsp+0x8]
  42ccc9:	add    r13d,0xffffffff
  42cccd:	jne    42cb23 <flatcc_emitter@@Base+0x1e3>
  42ccd3:	jmp    42ce0d <flatcc_emitter@@Base+0x4cd>
  42ccd8:	lea    rsi,[r12+0x28]
  42ccdd:	mov    rbp,QWORD PTR [r12+0x20]
  42cce2:	lea    rcx,[r8+rbp*1]
  42cce6:	mov    QWORD PTR [r12+0x20],rcx
  42cceb:	jmp    42cd04 <flatcc_emitter@@Base+0x3c4>
  42cced:	mov    eax,0xffffffff
  42ccf2:	jmp    42ce0f <flatcc_emitter@@Base+0x4cf>
  42ccf7:	mov    rbp,QWORD PTR [r12+0x10]
  42ccfc:	sub    rbp,r8
  42ccff:	mov    QWORD PTR [r12+0x10],rbp
  42cd04:	sub    rdx,r8
  42cd07:	mov    QWORD PTR [rsi],rdx
  42cd0a:	xor    eax,eax
  42cd0c:	test   r13d,r13d
  42cd0f:	je     42ce0f <flatcc_emitter@@Base+0x4cf>
  42cd15:	lea    r15d,[r13-0x1]
  42cd19:	mov    r12d,r13d
  42cd1c:	and    r12d,0x7
  42cd20:	je     42cd52 <flatcc_emitter@@Base+0x412>
  42cd22:	xor    ebx,ebx
  42cd24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cd2e:	xchg   ax,ax
  42cd30:	mov    rsi,QWORD PTR [r14]
  42cd33:	mov    rdx,QWORD PTR [r14+0x8]
  42cd37:	mov    rdi,rbp
  42cd3a:	call   4061a0 <memcpy@plt>
  42cd3f:	add    rbp,QWORD PTR [r14+0x8]
  42cd43:	add    r14,0x10
  42cd47:	add    ebx,0x1
  42cd4a:	cmp    r12d,ebx
  42cd4d:	jne    42cd30 <flatcc_emitter@@Base+0x3f0>
  42cd4f:	sub    r13d,ebx
  42cd52:	cmp    r15d,0x7
  42cd56:	jb     42ce0d <flatcc_emitter@@Base+0x4cd>
  42cd5c:	nop    DWORD PTR [rax+0x0]
  42cd60:	mov    rsi,QWORD PTR [r14]
  42cd63:	mov    rdx,QWORD PTR [r14+0x8]
  42cd67:	mov    rdi,rbp
  42cd6a:	call   4061a0 <memcpy@plt>
  42cd6f:	add    rbp,QWORD PTR [r14+0x8]
  42cd73:	mov    rsi,QWORD PTR [r14+0x10]
  42cd77:	mov    rdx,QWORD PTR [r14+0x18]
  42cd7b:	mov    rdi,rbp
  42cd7e:	call   4061a0 <memcpy@plt>
  42cd83:	add    rbp,QWORD PTR [r14+0x18]
  42cd87:	mov    rsi,QWORD PTR [r14+0x20]
  42cd8b:	mov    rdx,QWORD PTR [r14+0x28]
  42cd8f:	mov    rdi,rbp
  42cd92:	call   4061a0 <memcpy@plt>
  42cd97:	add    rbp,QWORD PTR [r14+0x28]
  42cd9b:	mov    rsi,QWORD PTR [r14+0x30]
  42cd9f:	mov    rdx,QWORD PTR [r14+0x38]
  42cda3:	mov    rdi,rbp
  42cda6:	call   4061a0 <memcpy@plt>
  42cdab:	add    rbp,QWORD PTR [r14+0x38]
  42cdaf:	mov    rsi,QWORD PTR [r14+0x40]
  42cdb3:	mov    rdx,QWORD PTR [r14+0x48]
  42cdb7:	mov    rdi,rbp
  42cdba:	call   4061a0 <memcpy@plt>
  42cdbf:	add    rbp,QWORD PTR [r14+0x48]
  42cdc3:	mov    rsi,QWORD PTR [r14+0x50]
  42cdc7:	mov    rdx,QWORD PTR [r14+0x58]
  42cdcb:	mov    rdi,rbp
  42cdce:	call   4061a0 <memcpy@plt>
  42cdd3:	add    rbp,QWORD PTR [r14+0x58]
  42cdd7:	mov    rsi,QWORD PTR [r14+0x60]
  42cddb:	mov    rdx,QWORD PTR [r14+0x68]
  42cddf:	mov    rdi,rbp
  42cde2:	call   4061a0 <memcpy@plt>
  42cde7:	add    rbp,QWORD PTR [r14+0x68]
  42cdeb:	mov    rsi,QWORD PTR [r14+0x70]
  42cdef:	mov    rdx,QWORD PTR [r14+0x78]
  42cdf3:	mov    rdi,rbp
  42cdf6:	call   4061a0 <memcpy@plt>
  42cdfb:	add    rbp,QWORD PTR [r14+0x78]
  42cdff:	sub    r14,0xffffffffffffff80
  42ce03:	add    r13d,0xfffffff8
  42ce07:	jne    42cd60 <flatcc_emitter@@Base+0x420>
  42ce0d:	xor    eax,eax
  42ce0f:	add    rsp,0x18
  42ce13:	pop    rbx
  42ce14:	pop    r12
  42ce16:	pop    r13
  42ce18:	pop    r14
  42ce1a:	pop    r15
  42ce1c:	pop    rbp
  42ce1d:	ret    
  42ce1e:	xchg   ax,ax

000000000042ce20 <flatcc_emitter_copy_buffer@@Base>:
  42ce20:	push   r15
  42ce22:	push   r14
  42ce24:	push   r12
  42ce26:	push   rbx
  42ce27:	push   rax
  42ce28:	mov    rax,rdx
  42ce2b:	mov    rdx,QWORD PTR [rdi+0x30]
  42ce2f:	cmp    rdx,rax
  42ce32:	ja     42cebd <flatcc_emitter_copy_buffer@@Base+0x9d>
  42ce38:	mov    r14,rdi
  42ce3b:	mov    rax,QWORD PTR [rdi]
  42ce3e:	test   rax,rax
  42ce41:	je     42cebd <flatcc_emitter_copy_buffer@@Base+0x9d>
  42ce43:	mov    r15,rsi
  42ce46:	cmp    rax,QWORD PTR [r14+0x8]
  42ce4a:	je     42cecf <flatcc_emitter_copy_buffer@@Base+0xaf>
  42ce50:	mov    r12d,0xb80
  42ce56:	sub    r12,QWORD PTR [r14+0x18]
  42ce5a:	mov    rsi,QWORD PTR [r14+0x10]
  42ce5e:	mov    rdi,r15
  42ce61:	mov    rdx,r12
  42ce64:	call   4061a0 <memcpy@plt>
  42ce69:	add    r12,r15
  42ce6c:	mov    rax,QWORD PTR [r14]
  42ce6f:	mov    rbx,QWORD PTR [rax+0xb80]
  42ce76:	cmp    rbx,QWORD PTR [r14+0x8]
  42ce7a:	je     42cea4 <flatcc_emitter_copy_buffer@@Base+0x84>
  42ce7c:	nop    DWORD PTR [rax+0x0]
  42ce80:	mov    edx,0xb80
  42ce85:	mov    rdi,r12
  42ce88:	mov    rsi,rbx
  42ce8b:	call   4061a0 <memcpy@plt>
  42ce90:	add    r12,0xb80
  42ce97:	mov    rbx,QWORD PTR [rbx+0xb80]
  42ce9e:	cmp    rbx,QWORD PTR [r14+0x8]
  42cea2:	jne    42ce80 <flatcc_emitter_copy_buffer@@Base+0x60>
  42cea4:	mov    edx,0xb80
  42cea9:	sub    rdx,QWORD PTR [r14+0x28]
  42cead:	mov    rdi,r12
  42ceb0:	mov    rsi,rbx
  42ceb3:	call   4061a0 <memcpy@plt>
  42ceb8:	mov    r15,r12
  42cebb:	jmp    42cec0 <flatcc_emitter_copy_buffer@@Base+0xa0>
  42cebd:	xor    r15d,r15d
  42cec0:	mov    rax,r15
  42cec3:	add    rsp,0x8
  42cec7:	pop    rbx
  42cec8:	pop    r12
  42ceca:	pop    r14
  42cecc:	pop    r15
  42cece:	ret    
  42cecf:	mov    rsi,QWORD PTR [r14+0x10]
  42ced3:	mov    rdi,r15
  42ced6:	call   4061a0 <memcpy@plt>
  42cedb:	jmp    42cec0 <flatcc_emitter_copy_buffer@@Base+0xa0>
  42cedd:	nop    DWORD PTR [rax]

000000000042cee0 <cmetrohash64_1@@Base>:
  42cee0:	push   r15
  42cee2:	push   r14
  42cee4:	push   rbx
  42cee5:	mov    r8d,0x8648dbdb
  42ceeb:	lea    r9,[rdi+rsi*1]
  42ceef:	mov    eax,edx
  42cef1:	lea    r11,[r8+0x41f1b606]
  42cef8:	imul   rax,r11
  42cefc:	add    rax,rsi
  42ceff:	movabs r10,0x60e25d3baf065edb
  42cf09:	add    r10,rax
  42cf0c:	cmp    rsi,0x20
  42cf10:	jb     42cfed <cmetrohash64_1@@Base+0x10d>
  42cf16:	lea    r14,[r9-0x20]
  42cf1a:	mov    rax,r10
  42cf1d:	mov    rbx,r10
  42cf20:	mov    r15,r10
  42cf23:	mov    rdx,r10
  42cf26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cf30:	mov    rsi,QWORD PTR [rdi]
  42cf33:	imul   rsi,r11
  42cf37:	add    rsi,rdx
  42cf3a:	rorx   rdx,rsi,0x1d
  42cf40:	add    rdx,rbx
  42cf43:	mov    rsi,QWORD PTR [rdi+0x8]
  42cf47:	imul   rsi,r8
  42cf4b:	add    rsi,r15
  42cf4e:	rorx   r15,rsi,0x1d
  42cf54:	add    r15,rax
  42cf57:	imul   rsi,QWORD PTR [rdi+0x10],0x7bdec03b
  42cf5f:	add    rsi,rbx
  42cf62:	rorx   rbx,rsi,0x1d
  42cf68:	imul   rsi,QWORD PTR [rdi+0x18],0x2f5870a5
  42cf70:	add    rbx,rdx
  42cf73:	add    rsi,rax
  42cf76:	add    rdi,0x20
  42cf7a:	rorx   rax,rsi,0x1d
  42cf80:	add    rax,r15
  42cf83:	cmp    rdi,r14
  42cf86:	jbe    42cf30 <cmetrohash64_1@@Base+0x50>
  42cf88:	lea    rsi,[rax+rdx*1]
  42cf8c:	imul   rsi,r11
  42cf90:	add    rsi,r15
  42cf93:	rorx   rsi,rsi,0x21
  42cf99:	imul   rsi,r8
  42cf9d:	xor    rsi,rbx
  42cfa0:	lea    rbx,[rsi+r15*1]
  42cfa4:	imul   rbx,r8
  42cfa8:	add    rbx,rdx
  42cfab:	rorx   rbx,rbx,0x21
  42cfb1:	imul   rbx,r11
  42cfb5:	xor    rbx,rax
  42cfb8:	lea    rax,[rsi+rdx*1]
  42cfbc:	imul   rax,r11
  42cfc0:	add    rax,rbx
  42cfc3:	rorx   rax,rax,0x21
  42cfc9:	imul   rax,r8
  42cfcd:	add    rbx,r15
  42cfd0:	imul   rbx,r8
  42cfd4:	add    rbx,rsi
  42cfd7:	rorx   rsi,rbx,0x21
  42cfdd:	imul   rsi,r11
  42cfe1:	xor    r15,rdx
  42cfe4:	xor    r15,rax
  42cfe7:	xor    r15,rsi
  42cfea:	add    r10,r15
  42cfed:	mov    rax,r9
  42cff0:	sub    rax,rdi
  42cff3:	cmp    rax,0x10
  42cff7:	jge    42d067 <cmetrohash64_1@@Base+0x187>
  42cff9:	cmp    rax,0x8
  42cffd:	jge    42d0fc <cmetrohash64_1@@Base+0x21c>
  42d003:	cmp    rax,0x4
  42d007:	jge    42d127 <cmetrohash64_1@@Base+0x247>
  42d00d:	cmp    rax,0x2
  42d011:	jge    42d154 <cmetrohash64_1@@Base+0x274>
  42d017:	test   rax,rax
  42d01a:	jle    42d036 <cmetrohash64_1@@Base+0x156>
  42d01c:	movzx  eax,BYTE PTR [rdi]
  42d01f:	imul   rax,rax,0x2f5870a5
  42d026:	add    rax,r10
  42d029:	rorx   r10,rax,0x19
  42d02f:	imul   r10,r8
  42d033:	xor    r10,rax
  42d036:	rorx   rax,r10,0x21
  42d03c:	xor    rax,r10
  42d03f:	imul   r11,rax
  42d043:	mov    rdx,r11
  42d046:	shr    rdx,0x21
  42d04a:	movabs rsi,0x641d48f080000000
  42d054:	imul   rsi,rax
  42d058:	or     rsi,rdx
  42d05b:	xor    rsi,r11
  42d05e:	mov    QWORD PTR [rcx],rsi
  42d061:	pop    rbx
  42d062:	pop    r14
  42d064:	pop    r15
  42d066:	ret    
  42d067:	mov    rax,QWORD PTR [rdi]
  42d06a:	imul   rax,r11
  42d06e:	add    rax,r10
  42d071:	rorx   rax,rax,0x21
  42d077:	movabs rdx,0x6907a4ca322e467b
  42d081:	imul   rdx,rax
  42d085:	movabs rsi,0x4645c8cf60000000
  42d08f:	imul   rsi,rax
  42d093:	imul   rax,r8
  42d097:	mov    rbx,QWORD PTR [rdi+0x8]
  42d09b:	imul   rbx,r8
  42d09f:	add    rbx,r10
  42d0a2:	add    rdi,0x10
  42d0a6:	rorx   rbx,rbx,0x21
  42d0ac:	imul   r14,rbx,0x7bdec03b
  42d0b3:	shr    rdx,0x23
  42d0b7:	or     rsi,rdx
  42d0ba:	add    rsi,r14
  42d0bd:	xor    rsi,rax
  42d0c0:	movabs rax,0x16e8b05e33f3b607
  42d0ca:	imul   rax,rbx
  42d0ce:	shr    rax,0x23
  42d0d2:	movabs rdx,0xc67e76c0e0000000
  42d0dc:	imul   rdx,rbx
  42d0e0:	or     rdx,rax
  42d0e3:	add    rdx,rsi
  42d0e6:	xor    rdx,r14
  42d0e9:	add    r10,rdx
  42d0ec:	mov    rax,r9
  42d0ef:	sub    rax,rdi
  42d0f2:	cmp    rax,0x8
  42d0f6:	jl     42d003 <cmetrohash64_1@@Base+0x123>
  42d0fc:	imul   rax,QWORD PTR [rdi],0x2f5870a5
  42d103:	add    rax,r10
  42d106:	add    rdi,0x8
  42d10a:	rorx   r10,rax,0x21
  42d110:	imul   r10,r8
  42d114:	xor    r10,rax
  42d117:	mov    rax,r9
  42d11a:	sub    rax,rdi
  42d11d:	cmp    rax,0x4
  42d121:	jl     42d00d <cmetrohash64_1@@Base+0x12d>
  42d127:	mov    eax,DWORD PTR [rdi]
  42d129:	imul   rax,rax,0x2f5870a5
  42d130:	add    rax,r10
  42d133:	add    rdi,0x4
  42d137:	rorx   r10,rax,0xf
  42d13d:	imul   r10,r8
  42d141:	xor    r10,rax
  42d144:	mov    rax,r9
  42d147:	sub    rax,rdi
  42d14a:	cmp    rax,0x2
  42d14e:	jl     42d017 <cmetrohash64_1@@Base+0x137>
  42d154:	movzx  eax,WORD PTR [rdi]
  42d157:	imul   rax,rax,0x2f5870a5
  42d15e:	add    rax,r10
  42d161:	add    rdi,0x2
  42d165:	rorx   r10,rax,0xd
  42d16b:	imul   r10,r8
  42d16f:	xor    r10,rax
  42d172:	sub    r9,rdi
  42d175:	mov    rax,r9
  42d178:	test   rax,rax
  42d17b:	jg     42d01c <cmetrohash64_1@@Base+0x13c>
  42d181:	jmp    42d036 <cmetrohash64_1@@Base+0x156>
  42d186:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042d190 <cmetrohash64_2@@Base>:
  42d190:	push   r15
  42d192:	push   r14
  42d194:	push   rbx
  42d195:	mov    r8d,0xa2aa033b
  42d19b:	lea    r9,[rdi+rsi*1]
  42d19f:	mov    eax,edx
  42d1a1:	lea    r11,[r8+0x342615ba]
  42d1a8:	imul   rax,r11
  42d1ac:	add    rax,rsi
  42d1af:	movabs r10,0x52bc33fedbe4cbb5
  42d1b9:	add    r10,rax
  42d1bc:	cmp    rsi,0x20
  42d1c0:	jb     42d29d <cmetrohash64_2@@Base+0x10d>
  42d1c6:	lea    r14,[r9-0x20]
  42d1ca:	mov    rax,r10
  42d1cd:	mov    rbx,r10
  42d1d0:	mov    r15,r10
  42d1d3:	mov    rdx,r10
  42d1d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d1e0:	mov    rsi,QWORD PTR [rdi]
  42d1e3:	imul   rsi,r11
  42d1e7:	add    rsi,rdx
  42d1ea:	rorx   rdx,rsi,0x1d
  42d1f0:	add    rdx,rbx
  42d1f3:	mov    rsi,QWORD PTR [rdi+0x8]
  42d1f7:	imul   rsi,r8
  42d1fb:	add    rsi,r15
  42d1fe:	rorx   r15,rsi,0x1d
  42d204:	add    r15,rax
  42d207:	imul   rsi,QWORD PTR [rdi+0x10],0x62992fc1
  42d20f:	add    rsi,rbx
  42d212:	rorx   rbx,rsi,0x1d
  42d218:	imul   rsi,QWORD PTR [rdi+0x18],0x30bc5b29
  42d220:	add    rbx,rdx
  42d223:	add    rsi,rax
  42d226:	add    rdi,0x20
  42d22a:	rorx   rax,rsi,0x1d
  42d230:	add    rax,r15
  42d233:	cmp    rdi,r14
  42d236:	jbe    42d1e0 <cmetrohash64_2@@Base+0x50>
  42d238:	lea    rsi,[rax+rdx*1]
  42d23c:	imul   rsi,r11
  42d240:	add    rsi,r15
  42d243:	rorx   rsi,rsi,0x1e
  42d249:	imul   rsi,r8
  42d24d:	xor    rsi,rbx
  42d250:	lea    rbx,[rsi+r15*1]
  42d254:	imul   rbx,r8
  42d258:	add    rbx,rdx
  42d25b:	rorx   rbx,rbx,0x1e
  42d261:	imul   rbx,r11
  42d265:	xor    rbx,rax
  42d268:	lea    rax,[rsi+rdx*1]
  42d26c:	imul   rax,r11
  42d270:	add    rax,rbx
  42d273:	rorx   rax,rax,0x1e
  42d279:	imul   rax,r8
  42d27d:	add    rbx,r15
  42d280:	imul   rbx,r8
  42d284:	add    rbx,rsi
  42d287:	rorx   rsi,rbx,0x1e
  42d28d:	imul   rsi,r11
  42d291:	xor    r15,rdx
  42d294:	xor    r15,rax
  42d297:	xor    r15,rsi
  42d29a:	add    r10,r15
  42d29d:	mov    rax,r9
  42d2a0:	sub    rax,rdi
  42d2a3:	cmp    rax,0x10
  42d2a7:	jge    42d317 <cmetrohash64_2@@Base+0x187>
  42d2a9:	cmp    rax,0x8
  42d2ad:	jge    42d3af <cmetrohash64_2@@Base+0x21f>
  42d2b3:	cmp    rax,0x4
  42d2b7:	jge    42d3da <cmetrohash64_2@@Base+0x24a>
  42d2bd:	cmp    rax,0x2
  42d2c1:	jge    42d407 <cmetrohash64_2@@Base+0x277>
  42d2c7:	test   rax,rax
  42d2ca:	jle    42d2e6 <cmetrohash64_2@@Base+0x156>
  42d2cc:	movzx  eax,BYTE PTR [rdi]
  42d2cf:	imul   rax,rax,0x30bc5b29
  42d2d6:	add    rax,r10
  42d2d9:	rorx   r10,rax,0x17
  42d2df:	imul   r10,r8
  42d2e3:	xor    r10,rax
  42d2e6:	rorx   rax,r10,0x1c
  42d2ec:	xor    rax,r10
  42d2ef:	imul   r11,rax
  42d2f3:	mov    rdx,r11
  42d2f6:	shr    rdx,0x1d
  42d2fa:	movabs rsi,0xb680c7a800000000
  42d304:	imul   rsi,rax
  42d308:	or     rsi,rdx
  42d30b:	xor    rsi,r11
  42d30e:	mov    QWORD PTR [rcx],rsi
  42d311:	pop    rbx
  42d312:	pop    r14
  42d314:	pop    r15
  42d316:	ret    
  42d317:	imul   rax,QWORD PTR [rdi],0x62992fc1
  42d31e:	add    rax,r10
  42d321:	rorx   rax,rax,0x1d
  42d327:	imul   r14,rax,0x30bc5b29
  42d32e:	imul   rsi,QWORD PTR [rdi+0x8],0x62992fc1
  42d336:	add    rsi,r10
  42d339:	add    rdi,0x10
  42d33d:	rorx   rsi,rsi,0x1d
  42d343:	imul   r15,rsi,0x30bc5b29
  42d34a:	movabs rdx,0x28e511fea41f163d
  42d354:	imul   rdx,rax
  42d358:	shr    rdx,0x22
  42d35c:	movabs rbx,0xa907c58f40000000
  42d366:	imul   rbx,rax
  42d36a:	or     rbx,rdx
  42d36d:	add    rbx,r15
  42d370:	xor    rbx,r14
  42d373:	movabs rax,0x9472cc564ae2c91
  42d37d:	imul   rax,rsi
  42d381:	shr    rax,0x22
  42d385:	movabs rdx,0x592b8b2440000000
  42d38f:	imul   rdx,rsi
  42d393:	or     rdx,rax
  42d396:	add    rdx,rbx
  42d399:	xor    rdx,r15
  42d39c:	add    r10,rdx
  42d39f:	mov    rax,r9
  42d3a2:	sub    rax,rdi
  42d3a5:	cmp    rax,0x8
  42d3a9:	jl     42d2b3 <cmetrohash64_2@@Base+0x123>
  42d3af:	imul   rax,QWORD PTR [rdi],0x30bc5b29
  42d3b6:	add    rax,r10
  42d3b9:	add    rdi,0x8
  42d3bd:	rorx   r10,rax,0x24
  42d3c3:	imul   r10,r8
  42d3c7:	xor    r10,rax
  42d3ca:	mov    rax,r9
  42d3cd:	sub    rax,rdi
  42d3d0:	cmp    rax,0x4
  42d3d4:	jl     42d2bd <cmetrohash64_2@@Base+0x12d>
  42d3da:	mov    eax,DWORD PTR [rdi]
  42d3dc:	imul   rax,rax,0x30bc5b29
  42d3e3:	add    rax,r10
  42d3e6:	add    rdi,0x4
  42d3ea:	rorx   r10,rax,0xf
  42d3f0:	imul   r10,r8
  42d3f4:	xor    r10,rax
  42d3f7:	mov    rax,r9
  42d3fa:	sub    rax,rdi
  42d3fd:	cmp    rax,0x2
  42d401:	jl     42d2c7 <cmetrohash64_2@@Base+0x137>
  42d407:	movzx  eax,WORD PTR [rdi]
  42d40a:	imul   rax,rax,0x30bc5b29
  42d411:	add    rax,r10
  42d414:	add    rdi,0x2
  42d418:	rorx   r10,rax,0xf
  42d41e:	imul   r10,r8
  42d422:	xor    r10,rax
  42d425:	sub    r9,rdi
  42d428:	mov    rax,r9
  42d42b:	test   rax,rax
  42d42e:	jg     42d2cc <cmetrohash64_2@@Base+0x13c>
  42d434:	jmp    42d2e6 <cmetrohash64_2@@Base+0x156>
  42d439:	nop    DWORD PTR [rax+0x0]

000000000042d440 <fb_name_table_clear@@Base>:
  42d440:	push   rbx
  42d441:	mov    rbx,rdi
  42d444:	mov    rdi,QWORD PTR [rdi]
  42d447:	test   rdi,rdi
  42d44a:	je     42d451 <fb_name_table_clear@@Base+0x11>
  42d44c:	call   406040 <free@plt>
  42d451:	vxorps xmm0,xmm0,xmm0
  42d455:	vmovups YMMWORD PTR [rbx],ymm0
  42d459:	pop    rbx
  42d45a:	vzeroupper 
  42d45d:	ret    
  42d45e:	xchg   ax,ax

000000000042d460 <fb_name_table_destroy@@Base>:
  42d460:	push   r15
  42d462:	push   r14
  42d464:	push   r13
  42d466:	push   r12
  42d468:	push   rbx
  42d469:	mov    r12,rdi
  42d46c:	test   rsi,rsi
  42d46f:	je     42d4b6 <fb_name_table_destroy@@Base+0x56>
  42d471:	mov    rax,QWORD PTR [r12+0x18]
  42d476:	test   rax,rax
  42d479:	je     42d4b6 <fb_name_table_destroy@@Base+0x56>
  42d47b:	mov    r14,rdx
  42d47e:	mov    r15,rsi
  42d481:	mov    r13,QWORD PTR [r12]
  42d485:	xor    ebx,ebx
  42d487:	nop    WORD PTR [rax+rax*1+0x0]
  42d490:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  42d495:	mov    rcx,rsi
  42d498:	or     rcx,0x2
  42d49c:	cmp    rcx,0x2
  42d4a0:	je     42d4ad <fb_name_table_destroy@@Base+0x4d>
  42d4a2:	mov    rdi,r14
  42d4a5:	call   r15
  42d4a8:	mov    rax,QWORD PTR [r12+0x18]
  42d4ad:	add    rbx,0x1
  42d4b1:	cmp    rbx,rax
  42d4b4:	jb     42d490 <fb_name_table_destroy@@Base+0x30>
  42d4b6:	mov    rdi,QWORD PTR [r12]
  42d4ba:	test   rdi,rdi
  42d4bd:	je     42d4c4 <fb_name_table_destroy@@Base+0x64>
  42d4bf:	call   406040 <free@plt>
  42d4c4:	vxorps xmm0,xmm0,xmm0
  42d4c8:	vmovups YMMWORD PTR [r12],ymm0
  42d4ce:	pop    rbx
  42d4cf:	pop    r12
  42d4d1:	pop    r13
  42d4d3:	pop    r14
  42d4d5:	pop    r15
  42d4d7:	vzeroupper 
  42d4da:	ret    
  42d4db:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042d4e0 <fb_name_table_init@@Base>:
  42d4e0:	push   r14
  42d4e2:	push   rbx
  42d4e3:	push   rax
  42d4e4:	mov    r14,rdi
  42d4e7:	mov    eax,0x4
  42d4ec:	nop    DWORD PTR [rax+0x0]
  42d4f0:	mov    rbx,rax
  42d4f3:	imul   rcx,rax,0xb3
  42d4fa:	shr    rcx,0x8
  42d4fe:	lea    rax,[rax+rax*1]
  42d502:	cmp    rcx,rsi
  42d505:	jb     42d4f0 <fb_name_table_init@@Base+0x10>
  42d507:	mov    esi,0x8
  42d50c:	mov    rdi,rbx
  42d50f:	call   406150 <calloc@plt>
  42d514:	mov    QWORD PTR [r14],rax
  42d517:	test   rax,rax
  42d51a:	je     42d52e <fb_name_table_init@@Base+0x4e>
  42d51c:	vxorps xmm0,xmm0,xmm0
  42d520:	vmovups XMMWORD PTR [r14+0x8],xmm0
  42d526:	mov    QWORD PTR [r14+0x18],rbx
  42d52a:	xor    eax,eax
  42d52c:	jmp    42d533 <fb_name_table_init@@Base+0x53>
  42d52e:	mov    eax,0xffffffff
  42d533:	add    rsp,0x8
  42d537:	pop    rbx
  42d538:	pop    r14
  42d53a:	ret    
  42d53b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042d540 <fb_name_table_resize@@Base>:
  42d540:	jmp    42d550 <fb_name_table_resize@@Base+0x10>
  42d542:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d54c:	nop    DWORD PTR [rax+0x0]
  42d550:	push   r15
  42d552:	push   r14
  42d554:	push   r12
  42d556:	push   rbx
  42d557:	sub    rsp,0x28
  42d55b:	mov    r14,rdi
  42d55e:	mov    r12,QWORD PTR [rdi]
  42d561:	mov    rax,QWORD PTR [rdi+0x10]
  42d565:	cmp    rax,rsi
  42d568:	cmova  rsi,rax
  42d56c:	mov    eax,0x4
  42d571:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d57b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d580:	mov    rbx,rax
  42d583:	imul   rcx,rax,0xb3
  42d58a:	shr    rcx,0x8
  42d58e:	lea    rax,[rax+rax*1]
  42d592:	cmp    rcx,rsi
  42d595:	jb     42d580 <fb_name_table_resize@@Base+0x40>
  42d597:	mov    esi,0x8
  42d59c:	mov    rdi,rbx
  42d59f:	call   406150 <calloc@plt>
  42d5a4:	mov    QWORD PTR [rsp+0x8],rax
  42d5a9:	test   rax,rax
  42d5ac:	je     42d623 <fb_name_table_resize@@Base+0xe3>
  42d5ae:	vxorps xmm0,xmm0,xmm0
  42d5b2:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  42d5b8:	mov    QWORD PTR [rsp+0x20],rbx
  42d5bd:	mov    rax,QWORD PTR [r14+0x18]
  42d5c1:	test   rax,rax
  42d5c4:	je     42d607 <fb_name_table_resize@@Base+0xc7>
  42d5c6:	xor    ebx,ebx
  42d5c8:	lea    r15,[rsp+0x8]
  42d5cd:	nop    DWORD PTR [rax]
  42d5d0:	mov    rcx,QWORD PTR [r12+rbx*8]
  42d5d4:	mov    rdx,rcx
  42d5d7:	or     rdx,0x2
  42d5db:	cmp    rdx,0x2
  42d5df:	je     42d5fb <fb_name_table_resize@@Base+0xbb>
  42d5e1:	mov    rsi,QWORD PTR [rcx+0x8]
  42d5e5:	movsxd rdx,DWORD PTR [rcx+0x10]
  42d5e9:	mov    r8d,0x3
  42d5ef:	mov    rdi,r15
  42d5f2:	call   42d650 <fb_name_table_insert@@Base+0x10>
  42d5f7:	mov    rax,QWORD PTR [r14+0x18]
  42d5fb:	add    rbx,0x1
  42d5ff:	cmp    rbx,rax
  42d602:	jb     42d5d0 <fb_name_table_resize@@Base+0x90>
  42d604:	mov    r12,QWORD PTR [r14]
  42d607:	test   r12,r12
  42d60a:	je     42d614 <fb_name_table_resize@@Base+0xd4>
  42d60c:	mov    rdi,r12
  42d60f:	call   406040 <free@plt>
  42d614:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  42d61a:	vmovups YMMWORD PTR [r14],ymm0
  42d61f:	xor    eax,eax
  42d621:	jmp    42d628 <fb_name_table_resize@@Base+0xe8>
  42d623:	mov    eax,0xffffffff
  42d628:	add    rsp,0x28
  42d62c:	pop    rbx
  42d62d:	pop    r12
  42d62f:	pop    r14
  42d631:	pop    r15
  42d633:	vzeroupper 
  42d636:	ret    
  42d637:	nop    WORD PTR [rax+rax*1+0x0]

000000000042d640 <fb_name_table_insert@@Base>:
  42d640:	jmp    42d650 <fb_name_table_insert@@Base+0x10>
  42d642:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d64c:	nop    DWORD PTR [rax+0x0]
  42d650:	push   rbp
  42d651:	push   r15
  42d653:	push   r14
  42d655:	push   r13
  42d657:	push   r12
  42d659:	push   rbx
  42d65a:	sub    rsp,0x38
  42d65e:	mov    QWORD PTR [rsp+0x20],rsi
  42d663:	cmp    rcx,0x2
  42d667:	je     42d7d5 <fb_name_table_insert@@Base+0x195>
  42d66d:	mov    r13,rcx
  42d670:	cmp    rcx,0x1
  42d674:	je     42d7f4 <fb_name_table_insert@@Base+0x1b4>
  42d67a:	test   r13,r13
  42d67d:	je     42d813 <fb_name_table_insert@@Base+0x1d3>
  42d683:	mov    rbp,rdx
  42d686:	mov    rbx,rdi
  42d689:	mov    DWORD PTR [rsp+0xc],r8d
  42d68e:	mov    rsi,QWORD PTR [rdi+0x10]
  42d692:	mov    r15,QWORD PTR [rdi+0x18]
  42d696:	imul   rax,r15,0xb3
  42d69d:	shr    rax,0x8
  42d6a1:	cmp    rsi,rax
  42d6a4:	mov    QWORD PTR [rsp+0x10],rdx
  42d6a9:	jb     42d6c7 <fb_name_table_insert@@Base+0x87>
  42d6ab:	add    rsi,rsi
  42d6ae:	mov    rdi,rbx
  42d6b1:	call   42d550 <fb_name_table_resize@@Base+0x10>
  42d6b6:	test   eax,eax
  42d6b8:	jne    42d832 <fb_name_table_insert@@Base+0x1f2>
  42d6be:	mov    r15,QWORD PTR [rbx+0x18]
  42d6c2:	mov    rbp,QWORD PTR [rsp+0x10]
  42d6c7:	mov    r14,QWORD PTR [rbx]
  42d6ca:	add    r15,0xffffffffffffffff
  42d6ce:	lea    rcx,[rsp+0x30]
  42d6d3:	mov    edx,0x2f693b52
  42d6d8:	mov    rdi,QWORD PTR [rsp+0x20]
  42d6dd:	mov    rsi,rbp
  42d6e0:	call   42cee0 <cmetrohash64_1@@Base>
  42d6e5:	mov    rcx,QWORD PTR [rsp+0x30]
  42d6ea:	mov    r12d,ecx
  42d6ed:	mov    eax,r15d
  42d6f0:	and    eax,ecx
  42d6f2:	mov    ecx,DWORD PTR [rsp+0xc]
  42d6f6:	or     ecx,0x1
  42d6f9:	cmp    ecx,0x3
  42d6fc:	jne    42d733 <fb_name_table_insert@@Base+0xf3>
  42d6fe:	add    QWORD PTR [rbx+0x10],0x1
  42d703:	jmp    42d716 <fb_name_table_insert@@Base+0xd6>
  42d705:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d70f:	nop
  42d710:	mov    rax,r12
  42d713:	and    rax,r15
  42d716:	add    r12,0x1
  42d71a:	mov    rcx,QWORD PTR [r14+rax*8]
  42d71e:	or     rcx,0x2
  42d722:	cmp    rcx,0x2
  42d726:	jne    42d710 <fb_name_table_insert@@Base+0xd0>
  42d728:	lea    rbp,[r14+rax*8]
  42d72c:	xor    ebx,ebx
  42d72e:	jmp    42d7b1 <fb_name_table_insert@@Base+0x171>
  42d733:	mov    QWORD PTR [rsp+0x28],rbx
  42d738:	mov    QWORD PTR [rsp+0x18],r13
  42d73d:	add    r12,0x1
  42d741:	xor    r13d,r13d
  42d744:	mov    rdx,QWORD PTR [rsp+0x10]
  42d749:	jmp    42d75a <fb_name_table_insert@@Base+0x11a>
  42d74b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d750:	mov    rax,r12
  42d753:	and    rax,r15
  42d756:	add    r12,0x1
  42d75a:	lea    rbp,[r14+rax*8]
  42d75e:	mov    rbx,QWORD PTR [r14+rax*8]
  42d762:	cmp    rbx,0x2
  42d766:	je     42d790 <fb_name_table_insert@@Base+0x150>
  42d768:	test   rbx,rbx
  42d76b:	je     42d799 <fb_name_table_insert@@Base+0x159>
  42d76d:	movsxd rax,DWORD PTR [rbx+0x10]
  42d771:	cmp    rax,rdx
  42d774:	jne    42d750 <fb_name_table_insert@@Base+0x110>
  42d776:	mov    rsi,QWORD PTR [rbx+0x8]
  42d77a:	mov    rdi,QWORD PTR [rsp+0x20]
  42d77f:	call   406140 <memcmp@plt>
  42d784:	mov    rdx,QWORD PTR [rsp+0x10]
  42d789:	test   eax,eax
  42d78b:	jne    42d750 <fb_name_table_insert@@Base+0x110>
  42d78d:	jmp    42d7c7 <fb_name_table_insert@@Base+0x187>
  42d78f:	nop
  42d790:	test   r13,r13
  42d793:	cmove  r13,rbp
  42d797:	jmp    42d750 <fb_name_table_insert@@Base+0x110>
  42d799:	test   r13,r13
  42d79c:	cmovne rbp,r13
  42d7a0:	mov    rax,QWORD PTR [rsp+0x28]
  42d7a5:	add    QWORD PTR [rax+0x10],0x1
  42d7aa:	xor    ebx,ebx
  42d7ac:	mov    r13,QWORD PTR [rsp+0x18]
  42d7b1:	mov    QWORD PTR [rbp+0x0],r13
  42d7b5:	mov    rax,rbx
  42d7b8:	add    rsp,0x38
  42d7bc:	pop    rbx
  42d7bd:	pop    r12
  42d7bf:	pop    r13
  42d7c1:	pop    r14
  42d7c3:	pop    r15
  42d7c5:	pop    rbp
  42d7c6:	ret    
  42d7c7:	cmp    DWORD PTR [rsp+0xc],0x0
  42d7cc:	mov    r13,QWORD PTR [rsp+0x18]
  42d7d1:	jne    42d7b5 <fb_name_table_insert@@Base+0x175>
  42d7d3:	jmp    42d7b1 <fb_name_table_insert@@Base+0x171>
  42d7d5:	lea    rdi,[rip+0x1a67f]        # 447e5b <str_set_deleted@@Base+0xd3>
  42d7dc:	lea    rsi,[rip+0x1a5c4]        # 447da7 <str_set_deleted@@Base+0x1f>
  42d7e3:	lea    rcx,[rip+0x1a627]        # 447e11 <str_set_deleted@@Base+0x89>
  42d7ea:	mov    edx,0x73
  42d7ef:	call   406100 <__assert_fail@plt>
  42d7f4:	lea    rdi,[rip+0x1a677]        # 447e72 <str_set_deleted@@Base+0xea>
  42d7fb:	lea    rsi,[rip+0x1a5a5]        # 447da7 <str_set_deleted@@Base+0x1f>
  42d802:	lea    rcx,[rip+0x1a608]        # 447e11 <str_set_deleted@@Base+0x89>
  42d809:	mov    edx,0x74
  42d80e:	call   406100 <__assert_fail@plt>
  42d813:	lea    rdi,[rip+0x1a576]        # 447d90 <str_set_deleted@@Base+0x8>
  42d81a:	lea    rsi,[rip+0x1a586]        # 447da7 <str_set_deleted@@Base+0x1f>
  42d821:	lea    rcx,[rip+0x1a5e9]        # 447e11 <str_set_deleted@@Base+0x89>
  42d828:	mov    edx,0x72
  42d82d:	call   406100 <__assert_fail@plt>
  42d832:	mov    rax,QWORD PTR [rip+0x257bf]        # 452ff8 <stderr@GLIBC_2.2.5>
  42d839:	mov    rdi,QWORD PTR [rax]
  42d83c:	lea    rsi,[rip+0x1a644]        # 447e87 <str_set_deleted@@Base+0xff>
  42d843:	lea    rdx,[rip+0x1a654]        # 447e9e <str_set_deleted@@Base+0x116>
  42d84a:	xor    eax,eax
  42d84c:	call   406180 <fprintf@plt>
  42d851:	mov    edi,0x1
  42d856:	call   406210 <exit@plt>
  42d85b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042d860 <fb_name_table_insert_item@@Base>:
  42d860:	mov    eax,edx
  42d862:	mov    rcx,rsi
  42d865:	mov    rsi,QWORD PTR [rsi+0x8]
  42d869:	movsxd rdx,DWORD PTR [rcx+0x10]
  42d86d:	mov    r8d,eax
  42d870:	jmp    42d650 <fb_name_table_insert@@Base+0x10>
  42d875:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d87f:	nop

000000000042d880 <fb_name_table_find@@Base>:
  42d880:	push   rbp
  42d881:	push   r15
  42d883:	push   r14
  42d885:	push   r13
  42d887:	push   r12
  42d889:	push   rbx
  42d88a:	push   rax
  42d88b:	mov    r12,QWORD PTR [rdi]
  42d88e:	test   r12,r12
  42d891:	je     42d8f7 <fb_name_table_find@@Base+0x77>
  42d893:	mov    r15,rdx
  42d896:	mov    r14,rsi
  42d899:	mov    r13,QWORD PTR [rdi+0x18]
  42d89d:	add    r13,0xffffffffffffffff
  42d8a1:	mov    rcx,rsp
  42d8a4:	mov    edx,0x2f693b52
  42d8a9:	mov    rdi,rsi
  42d8ac:	mov    rsi,r15
  42d8af:	call   42cee0 <cmetrohash64_1@@Base>
  42d8b4:	mov    ebp,DWORD PTR [rsp]
  42d8b7:	jmp    42d8c4 <fb_name_table_find@@Base+0x44>
  42d8b9:	nop    DWORD PTR [rax+0x0]
  42d8c0:	add    rbp,0x1
  42d8c4:	mov    rax,rbp
  42d8c7:	and    rax,r13
  42d8ca:	mov    rbx,QWORD PTR [r12+rax*8]
  42d8ce:	cmp    rbx,0x2
  42d8d2:	je     42d8c0 <fb_name_table_find@@Base+0x40>
  42d8d4:	test   rbx,rbx
  42d8d7:	je     42d8f7 <fb_name_table_find@@Base+0x77>
  42d8d9:	movsxd rax,DWORD PTR [rbx+0x10]
  42d8dd:	cmp    rax,r15
  42d8e0:	jne    42d8c0 <fb_name_table_find@@Base+0x40>
  42d8e2:	mov    rsi,QWORD PTR [rbx+0x8]
  42d8e6:	mov    rdi,r14
  42d8e9:	mov    rdx,r15
  42d8ec:	call   406140 <memcmp@plt>
  42d8f1:	test   eax,eax
  42d8f3:	jne    42d8c0 <fb_name_table_find@@Base+0x40>
  42d8f5:	jmp    42d8f9 <fb_name_table_find@@Base+0x79>
  42d8f7:	xor    ebx,ebx
  42d8f9:	mov    rax,rbx
  42d8fc:	add    rsp,0x8
  42d900:	pop    rbx
  42d901:	pop    r12
  42d903:	pop    r13
  42d905:	pop    r14
  42d907:	pop    r15
  42d909:	pop    rbp
  42d90a:	ret    
  42d90b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042d910 <fb_name_table_find_item@@Base>:
  42d910:	push   rbp
  42d911:	push   r15
  42d913:	push   r14
  42d915:	push   r13
  42d917:	push   r12
  42d919:	push   rbx
  42d91a:	push   rax
  42d91b:	mov    r12,QWORD PTR [rdi]
  42d91e:	test   r12,r12
  42d921:	je     42d984 <fb_name_table_find_item@@Base+0x74>
  42d923:	mov    r14,QWORD PTR [rsi+0x8]
  42d927:	movsxd r15,DWORD PTR [rsi+0x10]
  42d92b:	mov    r13,QWORD PTR [rdi+0x18]
  42d92f:	add    r13,0xffffffffffffffff
  42d933:	mov    rcx,rsp
  42d936:	mov    edx,0x2f693b52
  42d93b:	mov    rdi,r14
  42d93e:	mov    rsi,r15
  42d941:	call   42cee0 <cmetrohash64_1@@Base>
  42d946:	mov    ebp,DWORD PTR [rsp]
  42d949:	jmp    42d954 <fb_name_table_find_item@@Base+0x44>
  42d94b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d950:	add    rbp,0x1
  42d954:	mov    rax,rbp
  42d957:	and    rax,r13
  42d95a:	mov    rbx,QWORD PTR [r12+rax*8]
  42d95e:	cmp    rbx,0x2
  42d962:	je     42d950 <fb_name_table_find_item@@Base+0x40>
  42d964:	test   rbx,rbx
  42d967:	je     42d984 <fb_name_table_find_item@@Base+0x74>
  42d969:	cmp    DWORD PTR [rbx+0x10],r15d
  42d96d:	jne    42d950 <fb_name_table_find_item@@Base+0x40>
  42d96f:	mov    rsi,QWORD PTR [rbx+0x8]
  42d973:	mov    rdi,r14
  42d976:	mov    rdx,r15
  42d979:	call   406140 <memcmp@plt>
  42d97e:	test   eax,eax
  42d980:	jne    42d950 <fb_name_table_find_item@@Base+0x40>
  42d982:	jmp    42d986 <fb_name_table_find_item@@Base+0x76>
  42d984:	xor    ebx,ebx
  42d986:	mov    rax,rbx
  42d989:	add    rsp,0x8
  42d98d:	pop    rbx
  42d98e:	pop    r12
  42d990:	pop    r13
  42d992:	pop    r14
  42d994:	pop    r15
  42d996:	pop    rbp
  42d997:	ret    
  42d998:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042d9a0 <fb_name_table_remove@@Base>:
  42d9a0:	push   rbp
  42d9a1:	push   r15
  42d9a3:	push   r14
  42d9a5:	push   r13
  42d9a7:	push   r12
  42d9a9:	push   rbx
  42d9aa:	sub    rsp,0x18
  42d9ae:	mov    r13,QWORD PTR [rdi]
  42d9b1:	test   r13,r13
  42d9b4:	je     42da3c <fb_name_table_remove@@Base+0x9c>
  42d9ba:	mov    r12,rdx
  42d9bd:	mov    QWORD PTR [rsp],rdi
  42d9c1:	mov    rbp,QWORD PTR [rdi+0x18]
  42d9c5:	add    rbp,0xffffffffffffffff
  42d9c9:	lea    rcx,[rsp+0x10]
  42d9ce:	mov    edx,0x2f693b52
  42d9d3:	mov    QWORD PTR [rsp+0x8],rsi
  42d9d8:	mov    rdi,rsi
  42d9db:	mov    rsi,r12
  42d9de:	call   42cee0 <cmetrohash64_1@@Base>
  42d9e3:	mov    r15d,DWORD PTR [rsp+0x10]
  42d9e8:	jmp    42d9f4 <fb_name_table_remove@@Base+0x54>
  42d9ea:	nop    WORD PTR [rax+rax*1+0x0]
  42d9f0:	add    r15,0x1
  42d9f4:	mov    r14,r15
  42d9f7:	and    r14,rbp
  42d9fa:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  42d9ff:	cmp    rbx,0x2
  42da03:	je     42d9f0 <fb_name_table_remove@@Base+0x50>
  42da05:	test   rbx,rbx
  42da08:	je     42da3c <fb_name_table_remove@@Base+0x9c>
  42da0a:	movsxd rax,DWORD PTR [rbx+0x10]
  42da0e:	cmp    rax,r12
  42da11:	jne    42d9f0 <fb_name_table_remove@@Base+0x50>
  42da13:	mov    rsi,QWORD PTR [rbx+0x8]
  42da17:	mov    rdi,QWORD PTR [rsp+0x8]
  42da1c:	mov    rdx,r12
  42da1f:	call   406140 <memcmp@plt>
  42da24:	test   eax,eax
  42da26:	jne    42d9f0 <fb_name_table_remove@@Base+0x50>
  42da28:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  42da31:	mov    rax,QWORD PTR [rsp]
  42da35:	add    QWORD PTR [rax+0x10],0xffffffffffffffff
  42da3a:	jmp    42da3e <fb_name_table_remove@@Base+0x9e>
  42da3c:	xor    ebx,ebx
  42da3e:	mov    rax,rbx
  42da41:	add    rsp,0x18
  42da45:	pop    rbx
  42da46:	pop    r12
  42da48:	pop    r13
  42da4a:	pop    r14
  42da4c:	pop    r15
  42da4e:	pop    rbp
  42da4f:	ret    

000000000042da50 <fb_name_table_remove_item@@Base>:
  42da50:	push   rbp
  42da51:	push   r15
  42da53:	push   r14
  42da55:	push   r13
  42da57:	push   r12
  42da59:	push   rbx
  42da5a:	sub    rsp,0x18
  42da5e:	mov    r13,QWORD PTR [rdi]
  42da61:	test   r13,r13
  42da64:	je     42dae9 <fb_name_table_remove_item@@Base+0x99>
  42da6a:	mov    rax,QWORD PTR [rsi+0x8]
  42da6e:	movsxd r12,DWORD PTR [rsi+0x10]
  42da72:	mov    QWORD PTR [rsp],rdi
  42da76:	mov    rbp,QWORD PTR [rdi+0x18]
  42da7a:	add    rbp,0xffffffffffffffff
  42da7e:	lea    rcx,[rsp+0x10]
  42da83:	mov    edx,0x2f693b52
  42da88:	mov    QWORD PTR [rsp+0x8],rax
  42da8d:	mov    rdi,rax
  42da90:	mov    rsi,r12
  42da93:	call   42cee0 <cmetrohash64_1@@Base>
  42da98:	mov    r15d,DWORD PTR [rsp+0x10]
  42da9d:	jmp    42daa4 <fb_name_table_remove_item@@Base+0x54>
  42da9f:	nop
  42daa0:	add    r15,0x1
  42daa4:	mov    r14,r15
  42daa7:	and    r14,rbp
  42daaa:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  42daaf:	cmp    rbx,0x2
  42dab3:	je     42daa0 <fb_name_table_remove_item@@Base+0x50>
  42dab5:	test   rbx,rbx
  42dab8:	je     42dae9 <fb_name_table_remove_item@@Base+0x99>
  42daba:	cmp    DWORD PTR [rbx+0x10],r12d
  42dabe:	jne    42daa0 <fb_name_table_remove_item@@Base+0x50>
  42dac0:	mov    rsi,QWORD PTR [rbx+0x8]
  42dac4:	mov    rdi,QWORD PTR [rsp+0x8]
  42dac9:	mov    rdx,r12
  42dacc:	call   406140 <memcmp@plt>
  42dad1:	test   eax,eax
  42dad3:	jne    42daa0 <fb_name_table_remove_item@@Base+0x50>
  42dad5:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  42dade:	mov    rax,QWORD PTR [rsp]
  42dae2:	add    QWORD PTR [rax+0x10],0xffffffffffffffff
  42dae7:	jmp    42daeb <fb_name_table_remove_item@@Base+0x9b>
  42dae9:	xor    ebx,ebx
  42daeb:	mov    rax,rbx
  42daee:	add    rsp,0x18
  42daf2:	pop    rbx
  42daf3:	pop    r12
  42daf5:	pop    r13
  42daf7:	pop    r14
  42daf9:	pop    r15
  42dafb:	pop    rbp
  42dafc:	ret    
  42dafd:	nop    DWORD PTR [rax]

000000000042db00 <fb_name_table_visit@@Base>:
  42db00:	push   r15
  42db02:	push   r14
  42db04:	push   r13
  42db06:	push   r12
  42db08:	push   rbx
  42db09:	mov    rax,QWORD PTR [rdi+0x18]
  42db0d:	test   rax,rax
  42db10:	je     42db46 <fb_name_table_visit@@Base+0x46>
  42db12:	mov    r14,rdx
  42db15:	mov    r15,rsi
  42db18:	mov    r12,rdi
  42db1b:	mov    r13,QWORD PTR [rdi]
  42db1e:	xor    ebx,ebx
  42db20:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  42db25:	mov    rcx,rsi
  42db28:	or     rcx,0x2
  42db2c:	cmp    rcx,0x2
  42db30:	je     42db3d <fb_name_table_visit@@Base+0x3d>
  42db32:	mov    rdi,r14
  42db35:	call   r15
  42db38:	mov    rax,QWORD PTR [r12+0x18]
  42db3d:	add    rbx,0x1
  42db41:	cmp    rbx,rax
  42db44:	jb     42db20 <fb_name_table_visit@@Base+0x20>
  42db46:	pop    rbx
  42db47:	pop    r12
  42db49:	pop    r13
  42db4b:	pop    r14
  42db4d:	pop    r15
  42db4f:	ret    

000000000042db50 <fb_value_set_clear@@Base>:
  42db50:	push   rbx
  42db51:	mov    rbx,rdi
  42db54:	mov    rdi,QWORD PTR [rdi]
  42db57:	test   rdi,rdi
  42db5a:	je     42db61 <fb_value_set_clear@@Base+0x11>
  42db5c:	call   406040 <free@plt>
  42db61:	vxorps xmm0,xmm0,xmm0
  42db65:	vmovups YMMWORD PTR [rbx],ymm0
  42db69:	pop    rbx
  42db6a:	vzeroupper 
  42db6d:	ret    
  42db6e:	xchg   ax,ax

000000000042db70 <fb_value_set_destroy@@Base>:
  42db70:	push   r15
  42db72:	push   r14
  42db74:	push   r13
  42db76:	push   r12
  42db78:	push   rbx
  42db79:	mov    r12,rdi
  42db7c:	test   rsi,rsi
  42db7f:	je     42dbc6 <fb_value_set_destroy@@Base+0x56>
  42db81:	mov    rax,QWORD PTR [r12+0x18]
  42db86:	test   rax,rax
  42db89:	je     42dbc6 <fb_value_set_destroy@@Base+0x56>
  42db8b:	mov    r14,rdx
  42db8e:	mov    r15,rsi
  42db91:	mov    r13,QWORD PTR [r12]
  42db95:	xor    ebx,ebx
  42db97:	nop    WORD PTR [rax+rax*1+0x0]
  42dba0:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  42dba5:	mov    rcx,rsi
  42dba8:	or     rcx,0x2
  42dbac:	cmp    rcx,0x2
  42dbb0:	je     42dbbd <fb_value_set_destroy@@Base+0x4d>
  42dbb2:	mov    rdi,r14
  42dbb5:	call   r15
  42dbb8:	mov    rax,QWORD PTR [r12+0x18]
  42dbbd:	add    rbx,0x1
  42dbc1:	cmp    rbx,rax
  42dbc4:	jb     42dba0 <fb_value_set_destroy@@Base+0x30>
  42dbc6:	mov    rdi,QWORD PTR [r12]
  42dbca:	test   rdi,rdi
  42dbcd:	je     42dbd4 <fb_value_set_destroy@@Base+0x64>
  42dbcf:	call   406040 <free@plt>
  42dbd4:	vxorps xmm0,xmm0,xmm0
  42dbd8:	vmovups YMMWORD PTR [r12],ymm0
  42dbde:	pop    rbx
  42dbdf:	pop    r12
  42dbe1:	pop    r13
  42dbe3:	pop    r14
  42dbe5:	pop    r15
  42dbe7:	vzeroupper 
  42dbea:	ret    
  42dbeb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042dbf0 <fb_value_set_init@@Base>:
  42dbf0:	push   r14
  42dbf2:	push   rbx
  42dbf3:	push   rax
  42dbf4:	mov    r14,rdi
  42dbf7:	mov    eax,0x4
  42dbfc:	nop    DWORD PTR [rax+0x0]
  42dc00:	mov    rbx,rax
  42dc03:	imul   rcx,rax,0xb3
  42dc0a:	shr    rcx,0x8
  42dc0e:	lea    rax,[rax+rax*1]
  42dc12:	cmp    rcx,rsi
  42dc15:	jb     42dc00 <fb_value_set_init@@Base+0x10>
  42dc17:	mov    esi,0x8
  42dc1c:	mov    rdi,rbx
  42dc1f:	call   406150 <calloc@plt>
  42dc24:	mov    QWORD PTR [r14],rax
  42dc27:	test   rax,rax
  42dc2a:	je     42dc3e <fb_value_set_init@@Base+0x4e>
  42dc2c:	vxorps xmm0,xmm0,xmm0
  42dc30:	vmovups XMMWORD PTR [r14+0x8],xmm0
  42dc36:	mov    QWORD PTR [r14+0x18],rbx
  42dc3a:	xor    eax,eax
  42dc3c:	jmp    42dc43 <fb_value_set_init@@Base+0x53>
  42dc3e:	mov    eax,0xffffffff
  42dc43:	add    rsp,0x8
  42dc47:	pop    rbx
  42dc48:	pop    r14
  42dc4a:	ret    
  42dc4b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042dc50 <fb_value_set_resize@@Base>:
  42dc50:	jmp    42dc60 <fb_value_set_resize@@Base+0x10>
  42dc52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dc5c:	nop    DWORD PTR [rax+0x0]
  42dc60:	push   r15
  42dc62:	push   r14
  42dc64:	push   r12
  42dc66:	push   rbx
  42dc67:	sub    rsp,0x28
  42dc6b:	mov    r14,rdi
  42dc6e:	mov    r12,QWORD PTR [rdi]
  42dc71:	mov    rax,QWORD PTR [rdi+0x10]
  42dc75:	cmp    rax,rsi
  42dc78:	cmova  rsi,rax
  42dc7c:	mov    eax,0x4
  42dc81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dc8b:	nop    DWORD PTR [rax+rax*1+0x0]
  42dc90:	mov    rbx,rax
  42dc93:	imul   rcx,rax,0xb3
  42dc9a:	shr    rcx,0x8
  42dc9e:	lea    rax,[rax+rax*1]
  42dca2:	cmp    rcx,rsi
  42dca5:	jb     42dc90 <fb_value_set_resize@@Base+0x40>
  42dca7:	mov    esi,0x8
  42dcac:	mov    rdi,rbx
  42dcaf:	call   406150 <calloc@plt>
  42dcb4:	mov    QWORD PTR [rsp+0x8],rax
  42dcb9:	test   rax,rax
  42dcbc:	je     42dd2d <fb_value_set_resize@@Base+0xdd>
  42dcbe:	vxorps xmm0,xmm0,xmm0
  42dcc2:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  42dcc8:	mov    QWORD PTR [rsp+0x20],rbx
  42dccd:	mov    rax,QWORD PTR [r14+0x18]
  42dcd1:	test   rax,rax
  42dcd4:	je     42dd11 <fb_value_set_resize@@Base+0xc1>
  42dcd6:	xor    ebx,ebx
  42dcd8:	lea    r15,[rsp+0x8]
  42dcdd:	nop    DWORD PTR [rax]
  42dce0:	mov    rsi,QWORD PTR [r12+rbx*8]
  42dce4:	mov    rcx,rsi
  42dce7:	or     rcx,0x2
  42dceb:	cmp    rcx,0x2
  42dcef:	je     42dd05 <fb_value_set_resize@@Base+0xb5>
  42dcf1:	mov    ecx,0x3
  42dcf6:	mov    rdi,r15
  42dcf9:	mov    rdx,rsi
  42dcfc:	call   42dd60 <fb_value_set_insert@@Base+0x10>
  42dd01:	mov    rax,QWORD PTR [r14+0x18]
  42dd05:	add    rbx,0x1
  42dd09:	cmp    rbx,rax
  42dd0c:	jb     42dce0 <fb_value_set_resize@@Base+0x90>
  42dd0e:	mov    r12,QWORD PTR [r14]
  42dd11:	test   r12,r12
  42dd14:	je     42dd1e <fb_value_set_resize@@Base+0xce>
  42dd16:	mov    rdi,r12
  42dd19:	call   406040 <free@plt>
  42dd1e:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  42dd24:	vmovups YMMWORD PTR [r14],ymm0
  42dd29:	xor    eax,eax
  42dd2b:	jmp    42dd32 <fb_value_set_resize@@Base+0xe2>
  42dd2d:	mov    eax,0xffffffff
  42dd32:	add    rsp,0x28
  42dd36:	pop    rbx
  42dd37:	pop    r12
  42dd39:	pop    r14
  42dd3b:	pop    r15
  42dd3d:	vzeroupper 
  42dd40:	ret    
  42dd41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dd4b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042dd50 <fb_value_set_insert@@Base>:
  42dd50:	mov    rdx,rcx
  42dd53:	mov    ecx,r8d
  42dd56:	jmp    42dd60 <fb_value_set_insert@@Base+0x10>
  42dd58:	nop    DWORD PTR [rax+rax*1+0x0]
  42dd60:	push   rbp
  42dd61:	push   r15
  42dd63:	push   r14
  42dd65:	push   r13
  42dd67:	push   r12
  42dd69:	push   rbx
  42dd6a:	push   rax
  42dd6b:	cmp    rdx,0x2
  42dd6f:	je     42def4 <fb_value_set_insert@@Base+0x1a4>
  42dd75:	mov    r14,rdx
  42dd78:	cmp    rdx,0x1
  42dd7c:	je     42df13 <fb_value_set_insert@@Base+0x1c3>
  42dd82:	test   r14,r14
  42dd85:	je     42df32 <fb_value_set_insert@@Base+0x1e2>
  42dd8b:	mov    r15d,ecx
  42dd8e:	mov    r12,rsi
  42dd91:	mov    r13,rdi
  42dd94:	mov    rsi,QWORD PTR [rdi+0x10]
  42dd98:	mov    r9,QWORD PTR [rdi+0x18]
  42dd9c:	imul   rax,r9,0xb3
  42dda3:	shr    rax,0x8
  42dda7:	cmp    rsi,rax
  42ddaa:	jb     42ddc3 <fb_value_set_insert@@Base+0x73>
  42ddac:	add    rsi,rsi
  42ddaf:	mov    rdi,r13
  42ddb2:	call   42dc60 <fb_value_set_resize@@Base+0x10>
  42ddb7:	test   eax,eax
  42ddb9:	jne    42df51 <fb_value_set_insert@@Base+0x201>
  42ddbf:	mov    r9,QWORD PTR [r13+0x18]
  42ddc3:	mov    rdx,QWORD PTR [r13+0x0]
  42ddc7:	add    r9,0xffffffffffffffff
  42ddcb:	movzx  r8d,WORD PTR [r12+0x10]
  42ddd1:	cmp    r8d,0x6
  42ddd5:	je     42ddfb <fb_value_set_insert@@Base+0xab>
  42ddd7:	movzx  eax,r8w
  42dddb:	cmp    eax,0x5
  42ddde:	je     42ddf0 <fb_value_set_insert@@Base+0xa0>
  42dde0:	cmp    eax,0x4
  42dde3:	jne    42de11 <fb_value_set_insert@@Base+0xc1>
  42dde5:	mov    eax,0x2f693b56
  42ddea:	xor    rax,QWORD PTR [r12]
  42ddee:	jmp    42de06 <fb_value_set_insert@@Base+0xb6>
  42ddf0:	mov    eax,0x2f693b57
  42ddf5:	xor    rax,QWORD PTR [r12]
  42ddf9:	jmp    42de06 <fb_value_set_insert@@Base+0xb6>
  42ddfb:	movzx  eax,BYTE PTR [r12]
  42de00:	xor    rax,0x2f693b54
  42de06:	mov    edi,0x9e3779b1
  42de0b:	imul   rdi,rax
  42de0f:	jmp    42de13 <fb_value_set_insert@@Base+0xc3>
  42de11:	xor    edi,edi
  42de13:	mov    rax,rdi
  42de16:	and    rax,r9
  42de19:	mov    esi,r15d
  42de1c:	or     esi,0x1
  42de1f:	cmp    esi,0x3
  42de22:	jne    42de51 <fb_value_set_insert@@Base+0x101>
  42de24:	add    QWORD PTR [r13+0x10],0x1
  42de29:	jmp    42de36 <fb_value_set_insert@@Base+0xe6>
  42de2b:	nop    DWORD PTR [rax+rax*1+0x0]
  42de30:	mov    rax,rdi
  42de33:	and    rax,r9
  42de36:	add    rdi,0x1
  42de3a:	mov    rsi,QWORD PTR [rdx+rax*8]
  42de3e:	or     rsi,0x2
  42de42:	cmp    rsi,0x2
  42de46:	jne    42de30 <fb_value_set_insert@@Base+0xe0>
  42de48:	lea    rbx,[rdx+rax*8]
  42de4c:	jmp    42dee0 <fb_value_set_insert@@Base+0x190>
  42de51:	add    rdi,0x1
  42de55:	xor    ebp,ebp
  42de57:	jmp    42de6a <fb_value_set_insert@@Base+0x11a>
  42de59:	nop    DWORD PTR [rax+0x0]
  42de60:	mov    rax,rdi
  42de63:	and    rax,r9
  42de66:	add    rdi,0x1
  42de6a:	lea    rbx,[rdx+rax*8]
  42de6e:	mov    rax,QWORD PTR [rdx+rax*8]
  42de72:	cmp    rax,0x2
  42de76:	je     42deb0 <fb_value_set_insert@@Base+0x160>
  42de78:	test   rax,rax
  42de7b:	je     42ded4 <fb_value_set_insert@@Base+0x184>
  42de7d:	cmp    r8w,WORD PTR [rax+0x10]
  42de82:	jne    42de60 <fb_value_set_insert@@Base+0x110>
  42de84:	movzx  esi,r8w
  42de88:	cmp    esi,0x4
  42de8b:	je     42dec4 <fb_value_set_insert@@Base+0x174>
  42de8d:	cmp    esi,0x6
  42de90:	je     42deb9 <fb_value_set_insert@@Base+0x169>
  42de92:	cmp    esi,0x5
  42de95:	jne    42de60 <fb_value_set_insert@@Base+0x110>
  42de97:	mov    rsi,QWORD PTR [r12]
  42de9b:	cmp    rsi,QWORD PTR [rax]
  42de9e:	jne    42de60 <fb_value_set_insert@@Base+0x110>
  42dea0:	jmp    42decd <fb_value_set_insert@@Base+0x17d>
  42dea2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42deac:	nop    DWORD PTR [rax+0x0]
  42deb0:	test   rbp,rbp
  42deb3:	cmove  rbp,rbx
  42deb7:	jmp    42de60 <fb_value_set_insert@@Base+0x110>
  42deb9:	movzx  ecx,BYTE PTR [r12]
  42debe:	cmp    cl,BYTE PTR [rax]
  42dec0:	jne    42de60 <fb_value_set_insert@@Base+0x110>
  42dec2:	jmp    42decd <fb_value_set_insert@@Base+0x17d>
  42dec4:	mov    rcx,QWORD PTR [r12]
  42dec8:	cmp    rcx,QWORD PTR [rax]
  42decb:	jne    42de60 <fb_value_set_insert@@Base+0x110>
  42decd:	test   r15d,r15d
  42ded0:	jne    42dee5 <fb_value_set_insert@@Base+0x195>
  42ded2:	jmp    42dee2 <fb_value_set_insert@@Base+0x192>
  42ded4:	test   rbp,rbp
  42ded7:	cmovne rbx,rbp
  42dedb:	add    QWORD PTR [r13+0x10],0x1
  42dee0:	xor    eax,eax
  42dee2:	mov    QWORD PTR [rbx],r14
  42dee5:	add    rsp,0x8
  42dee9:	pop    rbx
  42deea:	pop    r12
  42deec:	pop    r13
  42deee:	pop    r14
  42def0:	pop    r15
  42def2:	pop    rbp
  42def3:	ret    
  42def4:	lea    rdi,[rip+0x19f60]        # 447e5b <str_set_deleted@@Base+0xd3>
  42defb:	lea    rsi,[rip+0x19ea5]        # 447da7 <str_set_deleted@@Base+0x1f>
  42df02:	lea    rcx,[rip+0x19f08]        # 447e11 <str_set_deleted@@Base+0x89>
  42df09:	mov    edx,0x73
  42df0e:	call   406100 <__assert_fail@plt>
  42df13:	lea    rdi,[rip+0x19f58]        # 447e72 <str_set_deleted@@Base+0xea>
  42df1a:	lea    rsi,[rip+0x19e86]        # 447da7 <str_set_deleted@@Base+0x1f>
  42df21:	lea    rcx,[rip+0x19ee9]        # 447e11 <str_set_deleted@@Base+0x89>
  42df28:	mov    edx,0x74
  42df2d:	call   406100 <__assert_fail@plt>
  42df32:	lea    rdi,[rip+0x19e57]        # 447d90 <str_set_deleted@@Base+0x8>
  42df39:	lea    rsi,[rip+0x19e67]        # 447da7 <str_set_deleted@@Base+0x1f>
  42df40:	lea    rcx,[rip+0x19eca]        # 447e11 <str_set_deleted@@Base+0x89>
  42df47:	mov    edx,0x72
  42df4c:	call   406100 <__assert_fail@plt>
  42df51:	mov    rax,QWORD PTR [rip+0x250a0]        # 452ff8 <stderr@GLIBC_2.2.5>
  42df58:	mov    rdi,QWORD PTR [rax]
  42df5b:	lea    rsi,[rip+0x19f25]        # 447e87 <str_set_deleted@@Base+0xff>
  42df62:	lea    rdx,[rip+0x19f35]        # 447e9e <str_set_deleted@@Base+0x116>
  42df69:	xor    eax,eax
  42df6b:	call   406180 <fprintf@plt>
  42df70:	mov    edi,0x1
  42df75:	call   406210 <exit@plt>
  42df7a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042df80 <fb_value_set_insert_item@@Base>:
  42df80:	mov    eax,edx
  42df82:	mov    rdx,rsi
  42df85:	mov    ecx,eax
  42df87:	jmp    42dd60 <fb_value_set_insert@@Base+0x10>
  42df8c:	nop    DWORD PTR [rax+0x0]

000000000042df90 <fb_value_set_find@@Base>:
  42df90:	mov    r10,QWORD PTR [rdi]
  42df93:	test   r10,r10
  42df96:	je     42dfbc <fb_value_set_find@@Base+0x2c>
  42df98:	mov    rdx,QWORD PTR [rdi+0x18]
  42df9c:	movzx  r8d,WORD PTR [rsi+0x10]
  42dfa1:	cmp    r8d,0x6
  42dfa5:	je     42dfbf <fb_value_set_find@@Base+0x2f>
  42dfa7:	movzx  eax,r8w
  42dfab:	cmp    eax,0x5
  42dfae:	je     42dfca <fb_value_set_find@@Base+0x3a>
  42dfb0:	cmp    eax,0x4
  42dfb3:	jne    42dfdd <fb_value_set_find@@Base+0x4d>
  42dfb5:	mov    eax,0x2f693b56
  42dfba:	jmp    42dfcf <fb_value_set_find@@Base+0x3f>
  42dfbc:	xor    eax,eax
  42dfbe:	ret    
  42dfbf:	movzx  eax,BYTE PTR [rsi]
  42dfc2:	xor    rax,0x2f693b54
  42dfc8:	jmp    42dfd2 <fb_value_set_find@@Base+0x42>
  42dfca:	mov    eax,0x2f693b57
  42dfcf:	xor    rax,QWORD PTR [rsi]
  42dfd2:	mov    edi,0x9e3779b1
  42dfd7:	imul   rdi,rax
  42dfdb:	jmp    42dfdf <fb_value_set_find@@Base+0x4f>
  42dfdd:	xor    edi,edi
  42dfdf:	add    rdx,0xffffffffffffffff
  42dfe3:	movzx  r9d,r8w
  42dfe7:	jmp    42dff4 <fb_value_set_find@@Base+0x64>
  42dfe9:	nop    DWORD PTR [rax+0x0]
  42dff0:	add    rdi,0x1
  42dff4:	mov    rax,rdi
  42dff7:	and    rax,rdx
  42dffa:	mov    rax,QWORD PTR [r10+rax*8]
  42dffe:	cmp    rax,0x2
  42e002:	je     42dff0 <fb_value_set_find@@Base+0x60>
  42e004:	test   rax,rax
  42e007:	je     42e034 <fb_value_set_find@@Base+0xa4>
  42e009:	cmp    r8w,WORD PTR [rax+0x10]
  42e00e:	jne    42dff0 <fb_value_set_find@@Base+0x60>
  42e010:	cmp    r9d,0x4
  42e014:	je     42e022 <fb_value_set_find@@Base+0x92>
  42e016:	cmp    r9d,0x6
  42e01a:	je     42e02c <fb_value_set_find@@Base+0x9c>
  42e01c:	cmp    r9d,0x5
  42e020:	jne    42dff0 <fb_value_set_find@@Base+0x60>
  42e022:	mov    rcx,QWORD PTR [rsi]
  42e025:	cmp    rcx,QWORD PTR [rax]
  42e028:	jne    42dff0 <fb_value_set_find@@Base+0x60>
  42e02a:	jmp    42e033 <fb_value_set_find@@Base+0xa3>
  42e02c:	movzx  ecx,BYTE PTR [rsi]
  42e02f:	cmp    cl,BYTE PTR [rax]
  42e031:	jne    42dff0 <fb_value_set_find@@Base+0x60>
  42e033:	ret    
  42e034:	xor    eax,eax
  42e036:	ret    
  42e037:	nop    WORD PTR [rax+rax*1+0x0]

000000000042e040 <fb_value_set_find_item@@Base>:
  42e040:	mov    r10,QWORD PTR [rdi]
  42e043:	test   r10,r10
  42e046:	je     42e06c <fb_value_set_find_item@@Base+0x2c>
  42e048:	mov    rdx,QWORD PTR [rdi+0x18]
  42e04c:	movzx  r8d,WORD PTR [rsi+0x10]
  42e051:	cmp    r8d,0x6
  42e055:	je     42e06f <fb_value_set_find_item@@Base+0x2f>
  42e057:	movzx  eax,r8w
  42e05b:	cmp    eax,0x5
  42e05e:	je     42e07a <fb_value_set_find_item@@Base+0x3a>
  42e060:	cmp    eax,0x4
  42e063:	jne    42e08d <fb_value_set_find_item@@Base+0x4d>
  42e065:	mov    eax,0x2f693b56
  42e06a:	jmp    42e07f <fb_value_set_find_item@@Base+0x3f>
  42e06c:	xor    eax,eax
  42e06e:	ret    
  42e06f:	movzx  eax,BYTE PTR [rsi]
  42e072:	xor    rax,0x2f693b54
  42e078:	jmp    42e082 <fb_value_set_find_item@@Base+0x42>
  42e07a:	mov    eax,0x2f693b57
  42e07f:	xor    rax,QWORD PTR [rsi]
  42e082:	mov    edi,0x9e3779b1
  42e087:	imul   rdi,rax
  42e08b:	jmp    42e08f <fb_value_set_find_item@@Base+0x4f>
  42e08d:	xor    edi,edi
  42e08f:	add    rdx,0xffffffffffffffff
  42e093:	movzx  r9d,r8w
  42e097:	jmp    42e0a4 <fb_value_set_find_item@@Base+0x64>
  42e099:	nop    DWORD PTR [rax+0x0]
  42e0a0:	add    rdi,0x1
  42e0a4:	mov    rax,rdi
  42e0a7:	and    rax,rdx
  42e0aa:	mov    rax,QWORD PTR [r10+rax*8]
  42e0ae:	cmp    rax,0x2
  42e0b2:	je     42e0a0 <fb_value_set_find_item@@Base+0x60>
  42e0b4:	test   rax,rax
  42e0b7:	je     42e0e4 <fb_value_set_find_item@@Base+0xa4>
  42e0b9:	cmp    r8w,WORD PTR [rax+0x10]
  42e0be:	jne    42e0a0 <fb_value_set_find_item@@Base+0x60>
  42e0c0:	cmp    r9d,0x4
  42e0c4:	je     42e0d2 <fb_value_set_find_item@@Base+0x92>
  42e0c6:	cmp    r9d,0x6
  42e0ca:	je     42e0dc <fb_value_set_find_item@@Base+0x9c>
  42e0cc:	cmp    r9d,0x5
  42e0d0:	jne    42e0a0 <fb_value_set_find_item@@Base+0x60>
  42e0d2:	mov    rcx,QWORD PTR [rsi]
  42e0d5:	cmp    rcx,QWORD PTR [rax]
  42e0d8:	jne    42e0a0 <fb_value_set_find_item@@Base+0x60>
  42e0da:	jmp    42e0e3 <fb_value_set_find_item@@Base+0xa3>
  42e0dc:	movzx  ecx,BYTE PTR [rsi]
  42e0df:	cmp    cl,BYTE PTR [rax]
  42e0e1:	jne    42e0a0 <fb_value_set_find_item@@Base+0x60>
  42e0e3:	ret    
  42e0e4:	xor    eax,eax
  42e0e6:	ret    
  42e0e7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042e0f0 <fb_value_set_remove@@Base>:
  42e0f0:	jmp    42e100 <fb_value_set_remove@@Base+0x10>
  42e0f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e0fc:	nop    DWORD PTR [rax+0x0]
  42e100:	push   rbx
  42e101:	mov    r9,QWORD PTR [rdi]
  42e104:	test   r9,r9
  42e107:	je     42e1b2 <fb_value_set_remove@@Base+0xc2>
  42e10d:	mov    r11,QWORD PTR [rdi+0x18]
  42e111:	movzx  r8d,WORD PTR [rsi+0x10]
  42e116:	cmp    r8d,0x6
  42e11a:	je     42e131 <fb_value_set_remove@@Base+0x41>
  42e11c:	movzx  eax,r8w
  42e120:	cmp    eax,0x5
  42e123:	je     42e13c <fb_value_set_remove@@Base+0x4c>
  42e125:	cmp    eax,0x4
  42e128:	jne    42e14f <fb_value_set_remove@@Base+0x5f>
  42e12a:	mov    eax,0x2f693b56
  42e12f:	jmp    42e141 <fb_value_set_remove@@Base+0x51>
  42e131:	movzx  eax,BYTE PTR [rsi]
  42e134:	xor    rax,0x2f693b54
  42e13a:	jmp    42e144 <fb_value_set_remove@@Base+0x54>
  42e13c:	mov    eax,0x2f693b57
  42e141:	xor    rax,QWORD PTR [rsi]
  42e144:	mov    edx,0x9e3779b1
  42e149:	imul   rdx,rax
  42e14d:	jmp    42e151 <fb_value_set_remove@@Base+0x61>
  42e14f:	xor    edx,edx
  42e151:	add    r11,0xffffffffffffffff
  42e155:	movzx  r10d,r8w
  42e159:	jmp    42e164 <fb_value_set_remove@@Base+0x74>
  42e15b:	nop    DWORD PTR [rax+rax*1+0x0]
  42e160:	add    rdx,0x1
  42e164:	mov    rcx,rdx
  42e167:	and    rcx,r11
  42e16a:	mov    rax,QWORD PTR [r9+rcx*8]
  42e16e:	cmp    rax,0x2
  42e172:	je     42e160 <fb_value_set_remove@@Base+0x70>
  42e174:	test   rax,rax
  42e177:	je     42e1b2 <fb_value_set_remove@@Base+0xc2>
  42e179:	cmp    r8w,WORD PTR [rax+0x10]
  42e17e:	jne    42e160 <fb_value_set_remove@@Base+0x70>
  42e180:	cmp    r10d,0x4
  42e184:	je     42e192 <fb_value_set_remove@@Base+0xa2>
  42e186:	cmp    r10d,0x6
  42e18a:	je     42e19c <fb_value_set_remove@@Base+0xac>
  42e18c:	cmp    r10d,0x5
  42e190:	jne    42e160 <fb_value_set_remove@@Base+0x70>
  42e192:	mov    rbx,QWORD PTR [rsi]
  42e195:	cmp    rbx,QWORD PTR [rax]
  42e198:	jne    42e160 <fb_value_set_remove@@Base+0x70>
  42e19a:	jmp    42e1a3 <fb_value_set_remove@@Base+0xb3>
  42e19c:	movzx  ebx,BYTE PTR [rsi]
  42e19f:	cmp    bl,BYTE PTR [rax]
  42e1a1:	jne    42e160 <fb_value_set_remove@@Base+0x70>
  42e1a3:	mov    QWORD PTR [r9+rcx*8],0x2
  42e1ab:	add    QWORD PTR [rdi+0x10],0xffffffffffffffff
  42e1b0:	pop    rbx
  42e1b1:	ret    
  42e1b2:	xor    eax,eax
  42e1b4:	pop    rbx
  42e1b5:	ret    
  42e1b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042e1c0 <fb_value_set_remove_item@@Base>:
  42e1c0:	jmp    42e100 <fb_value_set_remove@@Base+0x10>
  42e1c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e1cf:	nop

000000000042e1d0 <fb_value_set_visit@@Base>:
  42e1d0:	push   r15
  42e1d2:	push   r14
  42e1d4:	push   r13
  42e1d6:	push   r12
  42e1d8:	push   rbx
  42e1d9:	mov    rax,QWORD PTR [rdi+0x18]
  42e1dd:	test   rax,rax
  42e1e0:	je     42e216 <fb_value_set_visit@@Base+0x46>
  42e1e2:	mov    r14,rdx
  42e1e5:	mov    r15,rsi
  42e1e8:	mov    r12,rdi
  42e1eb:	mov    r13,QWORD PTR [rdi]
  42e1ee:	xor    ebx,ebx
  42e1f0:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  42e1f5:	mov    rcx,rsi
  42e1f8:	or     rcx,0x2
  42e1fc:	cmp    rcx,0x2
  42e200:	je     42e20d <fb_value_set_visit@@Base+0x3d>
  42e202:	mov    rdi,r14
  42e205:	call   r15
  42e208:	mov    rax,QWORD PTR [r12+0x18]
  42e20d:	add    rbx,0x1
  42e211:	cmp    rbx,rax
  42e214:	jb     42e1f0 <fb_value_set_visit@@Base+0x20>
  42e216:	pop    rbx
  42e217:	pop    r12
  42e219:	pop    r13
  42e21b:	pop    r14
  42e21d:	pop    r15
  42e21f:	ret    

000000000042e220 <__libc_csu_init@@Base>:
  42e220:	endbr64 
  42e224:	push   r15
  42e226:	lea    r15,[rip+0x247e3]        # 452a10 <fb_value_set_deleted@@Base+0x67b0>
  42e22d:	push   r14
  42e22f:	mov    r14,rdx
  42e232:	push   r13
  42e234:	mov    r13,rsi
  42e237:	push   r12
  42e239:	mov    r12d,edi
  42e23c:	push   rbp
  42e23d:	lea    rbp,[rip+0x247d4]        # 452a18 <fb_value_set_deleted@@Base+0x67b8>
  42e244:	push   rbx
  42e245:	sub    rbp,r15
  42e248:	sub    rsp,0x8
  42e24c:	call   406000 <__ctype_toupper_loc@plt-0x30>
  42e251:	sar    rbp,0x3
  42e255:	je     42e276 <__libc_csu_init@@Base+0x56>
  42e257:	xor    ebx,ebx
  42e259:	nop    DWORD PTR [rax+0x0]
  42e260:	mov    rdx,r14
  42e263:	mov    rsi,r13
  42e266:	mov    edi,r12d
  42e269:	call   QWORD PTR [r15+rbx*8]
  42e26d:	add    rbx,0x1
  42e271:	cmp    rbp,rbx
  42e274:	jne    42e260 <__libc_csu_init@@Base+0x40>
  42e276:	add    rsp,0x8
  42e27a:	pop    rbx
  42e27b:	pop    rbp
  42e27c:	pop    r12
  42e27e:	pop    r13
  42e280:	pop    r14
  42e282:	pop    r15
  42e284:	ret    
  42e285:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042e290 <__libc_csu_fini@@Base>:
  42e290:	endbr64 
  42e294:	ret    

Disassembly of section .fini:

000000000042e298 <.fini>:
  42e298:	endbr64 
  42e29c:	sub    rsp,0x8
  42e2a0:	add    rsp,0x8
  42e2a4:	ret    
