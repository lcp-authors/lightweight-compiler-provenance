
../repos/tbeu-matio-3dd266d/tools/.libs/matdump:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x6fd9]        # 408fe8 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <Mat_VarGetNumberOfFields@plt-0x31a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <.plt>:
  402020:	push   QWORD PTR [rip+0x6fe2]        # 409008 <getopt_long_only@@Base+0x3f88>
  402026:	bnd jmp QWORD PTR [rip+0x6fe3]        # 409010 <getopt_long_only@@Base+0x3f90>
  40202d:	nop    DWORD PTR [rax]
  402030:	endbr64 
  402034:	push   0x0
  402039:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40203f:	nop
  402040:	endbr64 
  402044:	push   0x1
  402049:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40204f:	nop
  402050:	endbr64 
  402054:	push   0x2
  402059:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40205f:	nop
  402060:	endbr64 
  402064:	push   0x3
  402069:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40206f:	nop
  402070:	endbr64 
  402074:	push   0x4
  402079:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40207f:	nop
  402080:	endbr64 
  402084:	push   0x5
  402089:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40208f:	nop
  402090:	endbr64 
  402094:	push   0x6
  402099:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40209f:	nop
  4020a0:	endbr64 
  4020a4:	push   0x7
  4020a9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  4020af:	nop
  4020b0:	endbr64 
  4020b4:	push   0x8
  4020b9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  4020bf:	nop
  4020c0:	endbr64 
  4020c4:	push   0x9
  4020c9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  4020cf:	nop
  4020d0:	endbr64 
  4020d4:	push   0xa
  4020d9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  4020df:	nop
  4020e0:	endbr64 
  4020e4:	push   0xb
  4020e9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  4020ef:	nop
  4020f0:	endbr64 
  4020f4:	push   0xc
  4020f9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  4020ff:	nop
  402100:	endbr64 
  402104:	push   0xd
  402109:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40210f:	nop
  402110:	endbr64 
  402114:	push   0xe
  402119:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40211f:	nop
  402120:	endbr64 
  402124:	push   0xf
  402129:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40212f:	nop
  402130:	endbr64 
  402134:	push   0x10
  402139:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40213f:	nop
  402140:	endbr64 
  402144:	push   0x11
  402149:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40214f:	nop
  402150:	endbr64 
  402154:	push   0x12
  402159:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40215f:	nop
  402160:	endbr64 
  402164:	push   0x13
  402169:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40216f:	nop
  402170:	endbr64 
  402174:	push   0x14
  402179:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40217f:	nop
  402180:	endbr64 
  402184:	push   0x15
  402189:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40218f:	nop
  402190:	endbr64 
  402194:	push   0x16
  402199:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40219f:	nop
  4021a0:	endbr64 
  4021a4:	push   0x17
  4021a9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  4021af:	nop
  4021b0:	endbr64 
  4021b4:	push   0x18
  4021b9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  4021bf:	nop
  4021c0:	endbr64 
  4021c4:	push   0x19
  4021c9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  4021cf:	nop
  4021d0:	endbr64 
  4021d4:	push   0x1a
  4021d9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  4021df:	nop
  4021e0:	endbr64 
  4021e4:	push   0x1b
  4021e9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  4021ef:	nop
  4021f0:	endbr64 
  4021f4:	push   0x1c
  4021f9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  4021ff:	nop
  402200:	endbr64 
  402204:	push   0x1d
  402209:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40220f:	nop
  402210:	endbr64 
  402214:	push   0x1e
  402219:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40221f:	nop
  402220:	endbr64 
  402224:	push   0x1f
  402229:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40222f:	nop
  402230:	endbr64 
  402234:	push   0x20
  402239:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40223f:	nop
  402240:	endbr64 
  402244:	push   0x21
  402249:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40224f:	nop
  402250:	endbr64 
  402254:	push   0x22
  402259:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40225f:	nop
  402260:	endbr64 
  402264:	push   0x23
  402269:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40226f:	nop
  402270:	endbr64 
  402274:	push   0x24
  402279:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40227f:	nop
  402280:	endbr64 
  402284:	push   0x25
  402289:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40228f:	nop
  402290:	endbr64 
  402294:	push   0x26
  402299:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40229f:	nop
  4022a0:	endbr64 
  4022a4:	push   0x27
  4022a9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  4022af:	nop
  4022b0:	endbr64 
  4022b4:	push   0x28
  4022b9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  4022bf:	nop
  4022c0:	endbr64 
  4022c4:	push   0x29
  4022c9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  4022cf:	nop
  4022d0:	endbr64 
  4022d4:	push   0x2a
  4022d9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  4022df:	nop
  4022e0:	endbr64 
  4022e4:	push   0x2b
  4022e9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  4022ef:	nop
  4022f0:	endbr64 
  4022f4:	push   0x2c
  4022f9:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  4022ff:	nop
  402300:	endbr64 
  402304:	push   0x2d
  402309:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40230f:	nop
  402310:	endbr64 
  402314:	push   0x2e
  402319:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40231f:	nop
  402320:	endbr64 
  402324:	push   0x2f
  402329:	bnd jmp 402020 <Mat_VarGetNumberOfFields@plt-0x310>
  40232f:	nop

Disassembly of section .plt.sec:

0000000000402330 <Mat_VarGetNumberOfFields@plt>:
  402330:	endbr64 
  402334:	bnd jmp QWORD PTR [rip+0x6cdd]        # 409018 <Mat_VarGetNumberOfFields>
  40233b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402340 <getenv@plt>:
  402340:	endbr64 
  402344:	bnd jmp QWORD PTR [rip+0x6cd5]        # 409020 <getenv@GLIBC_2.2.5>
  40234b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402350 <Mat_SetVerbose@plt>:
  402350:	endbr64 
  402354:	bnd jmp QWORD PTR [rip+0x6ccd]        # 409028 <Mat_SetVerbose>
  40235b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402360 <free@plt>:
  402360:	endbr64 
  402364:	bnd jmp QWORD PTR [rip+0x6cc5]        # 409030 <free@GLIBC_2.2.5>
  40236b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402370 <Mat_LogClose@plt>:
  402370:	endbr64 
  402374:	bnd jmp QWORD PTR [rip+0x6cbd]        # 409038 <Mat_LogClose>
  40237b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402380 <putchar@plt>:
  402380:	endbr64 
  402384:	bnd jmp QWORD PTR [rip+0x6cb5]        # 409040 <putchar@GLIBC_2.2.5>
  40238b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402390 <Mat_VarReadNext@plt>:
  402390:	endbr64 
  402394:	bnd jmp QWORD PTR [rip+0x6cad]        # 409048 <Mat_VarReadNext>
  40239b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023a0 <Mat_Open@plt>:
  4023a0:	endbr64 
  4023a4:	bnd jmp QWORD PTR [rip+0x6ca5]        # 409050 <Mat_Open>
  4023ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023b0 <strncmp@plt>:
  4023b0:	endbr64 
  4023b4:	bnd jmp QWORD PTR [rip+0x6c9d]        # 409058 <strncmp@GLIBC_2.2.5>
  4023bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023c0 <Mat_VarGetCells@plt>:
  4023c0:	endbr64 
  4023c4:	bnd jmp QWORD PTR [rip+0x6c95]        # 409060 <Mat_VarGetCells>
  4023cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023d0 <puts@plt>:
  4023d0:	endbr64 
  4023d4:	bnd jmp QWORD PTR [rip+0x6c8d]        # 409068 <puts@GLIBC_2.2.5>
  4023db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023e0 <Mat_VarGetCell@plt>:
  4023e0:	endbr64 
  4023e4:	bnd jmp QWORD PTR [rip+0x6c85]        # 409070 <Mat_VarGetCell>
  4023eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023f0 <Mat_VarCreate@plt>:
  4023f0:	endbr64 
  4023f4:	bnd jmp QWORD PTR [rip+0x6c7d]        # 409078 <Mat_VarCreate>
  4023fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402400 <Mat_Warning@plt>:
  402400:	endbr64 
  402404:	bnd jmp QWORD PTR [rip+0x6c75]        # 409080 <Mat_Warning>
  40240b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402410 <Mat_VarReadDataLinear@plt>:
  402410:	endbr64 
  402414:	bnd jmp QWORD PTR [rip+0x6c6d]        # 409088 <Mat_VarReadDataLinear>
  40241b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402420 <Mat_Message@plt>:
  402420:	endbr64 
  402424:	bnd jmp QWORD PTR [rip+0x6c65]        # 409090 <Mat_Message>
  40242b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402430 <strlen@plt>:
  402430:	endbr64 
  402434:	bnd jmp QWORD PTR [rip+0x6c5d]        # 409098 <strlen@GLIBC_2.2.5>
  40243b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402440 <Mat_VarReadData@plt>:
  402440:	endbr64 
  402444:	bnd jmp QWORD PTR [rip+0x6c55]        # 4090a0 <Mat_VarReadData>
  40244b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402450 <__stack_chk_fail@plt>:
  402450:	endbr64 
  402454:	bnd jmp QWORD PTR [rip+0x6c4d]        # 4090a8 <__stack_chk_fail@GLIBC_2.4>
  40245b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402460 <strchr@plt>:
  402460:	endbr64 
  402464:	bnd jmp QWORD PTR [rip+0x6c45]        # 4090b0 <strchr@GLIBC_2.2.5>
  40246b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402470 <warnx@plt>:
  402470:	endbr64 
  402474:	bnd jmp QWORD PTR [rip+0x6c3d]        # 4090b8 <warnx@GLIBC_2.2.5>
  40247b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402480 <Mat_VarReadDataAll@plt>:
  402480:	endbr64 
  402484:	bnd jmp QWORD PTR [rip+0x6c35]        # 4090c0 <Mat_VarReadDataAll>
  40248b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402490 <Mat_VarReadInfo@plt>:
  402490:	endbr64 
  402494:	bnd jmp QWORD PTR [rip+0x6c2d]        # 4090c8 <Mat_VarReadInfo>
  40249b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024a0 <Mat_VarGetStructFieldnames@plt>:
  4024a0:	endbr64 
  4024a4:	bnd jmp QWORD PTR [rip+0x6c25]        # 4090d0 <Mat_VarGetStructFieldnames>
  4024ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024b0 <strcmp@plt>:
  4024b0:	endbr64 
  4024b4:	bnd jmp QWORD PTR [rip+0x6c1d]        # 4090d8 <strcmp@GLIBC_2.2.5>
  4024bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024c0 <log10@plt>:
  4024c0:	endbr64 
  4024c4:	bnd jmp QWORD PTR [rip+0x6c15]        # 4090e0 <log10@GLIBC_2.2.5>
  4024cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024d0 <strtol@plt>:
  4024d0:	endbr64 
  4024d4:	bnd jmp QWORD PTR [rip+0x6c0d]        # 4090e8 <strtol@GLIBC_2.2.5>
  4024db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024e0 <Mat_VarFree@plt>:
  4024e0:	endbr64 
  4024e4:	bnd jmp QWORD PTR [rip+0x6c05]        # 4090f0 <Mat_VarFree>
  4024eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024f0 <Mat_SizeOf@plt>:
  4024f0:	endbr64 
  4024f4:	bnd jmp QWORD PTR [rip+0x6bfd]        # 4090f8 <Mat_SizeOf>
  4024fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402500 <Mat_GetLibraryVersion@plt>:
  402500:	endbr64 
  402504:	bnd jmp QWORD PTR [rip+0x6bf5]        # 409100 <Mat_GetLibraryVersion>
  40250b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402510 <malloc@plt>:
  402510:	endbr64 
  402514:	bnd jmp QWORD PTR [rip+0x6bed]        # 409108 <malloc@GLIBC_2.2.5>
  40251b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402520 <Mat_VarPrint@plt>:
  402520:	endbr64 
  402524:	bnd jmp QWORD PTR [rip+0x6be5]        # 409110 <Mat_VarPrint>
  40252b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402530 <Mat_Close@plt>:
  402530:	endbr64 
  402534:	bnd jmp QWORD PTR [rip+0x6bdd]        # 409118 <Mat_Close>
  40253b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402540 <Mat_Critical@plt>:
  402540:	endbr64 
  402544:	bnd jmp QWORD PTR [rip+0x6bd5]        # 409120 <Mat_Critical>
  40254b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402550 <__printf_chk@plt>:
  402550:	endbr64 
  402554:	bnd jmp QWORD PTR [rip+0x6bcd]        # 409128 <__printf_chk@GLIBC_2.3.4>
  40255b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402560 <Mat_LogInitFunc@plt>:
  402560:	endbr64 
  402564:	bnd jmp QWORD PTR [rip+0x6bc5]        # 409130 <Mat_LogInitFunc>
  40256b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402570 <Mat_VerbMessage@plt>:
  402570:	endbr64 
  402574:	bnd jmp QWORD PTR [rip+0x6bbd]        # 409138 <Mat_VerbMessage>
  40257b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402580 <Mat_VarGetCellsLinear@plt>:
  402580:	endbr64 
  402584:	bnd jmp QWORD PTR [rip+0x6bb5]        # 409140 <Mat_VarGetCellsLinear>
  40258b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402590 <Mat_Help@plt>:
  402590:	endbr64 
  402594:	bnd jmp QWORD PTR [rip+0x6bad]        # 409148 <Mat_Help>
  40259b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025a0 <Mat_VarGetStructFieldByName@plt>:
  4025a0:	endbr64 
  4025a4:	bnd jmp QWORD PTR [rip+0x6ba5]        # 409150 <Mat_VarGetStructFieldByName>
  4025ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025b0 <Mat_SizeOfClass@plt>:
  4025b0:	endbr64 
  4025b4:	bnd jmp QWORD PTR [rip+0x6b9d]        # 409158 <Mat_SizeOfClass>
  4025bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025c0 <exit@plt>:
  4025c0:	endbr64 
  4025c4:	bnd jmp QWORD PTR [rip+0x6b95]        # 409160 <exit@GLIBC_2.2.5>
  4025cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025d0 <fwrite@plt>:
  4025d0:	endbr64 
  4025d4:	bnd jmp QWORD PTR [rip+0x6b8d]        # 409168 <fwrite@GLIBC_2.2.5>
  4025db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025e0 <__fprintf_chk@plt>:
  4025e0:	endbr64 
  4025e4:	bnd jmp QWORD PTR [rip+0x6b85]        # 409170 <__fprintf_chk@GLIBC_2.3.4>
  4025eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025f0 <Mat_VarGetSize@plt>:
  4025f0:	endbr64 
  4025f4:	bnd jmp QWORD PTR [rip+0x6b7d]        # 409178 <Mat_VarGetSize>
  4025fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402600 <Mat_VarDuplicate@plt>:
  402600:	endbr64 
  402604:	bnd jmp QWORD PTR [rip+0x6b75]        # 409180 <Mat_VarDuplicate>
  40260b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402610 <__sprintf_chk@plt>:
  402610:	endbr64 
  402614:	bnd jmp QWORD PTR [rip+0x6b6d]        # 409188 <__sprintf_chk@GLIBC_2.3.4>
  40261b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402620 <Mat_VarReadNextInfo@plt>:
  402620:	endbr64 
  402624:	bnd jmp QWORD PTR [rip+0x6b65]        # 409190 <Mat_VarReadNextInfo>
  40262b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000402630 <getopt@@Base-0x2a20>:
  402630:	endbr64 
  402634:	push   r15
  402636:	mov    r15d,edi
  402639:	push   r14
  40263b:	push   r13
  40263d:	mov    r13,rsi
  402640:	push   r12
  402642:	push   rbp
  402643:	push   rbx
  402644:	sub    rsp,0x68
  402648:	lea    rdi,[rsp+0x4c]
  40264d:	lea    rdx,[rdi+0x8]
  402651:	lea    rsi,[rdi+0x4]
  402655:	mov    rax,QWORD PTR fs:0x28
  40265e:	mov    QWORD PTR [rsp+0x58],rax
  402663:	xor    eax,eax
  402665:	call   402500 <Mat_GetLibraryVersion@plt>
  40266a:	mov    r14d,DWORD PTR [rsp+0x4c]
  40266f:	cmp    r14d,0x1
  402673:	jne    40267c <Mat_VarReadNextInfo@plt+0x5c>
  402675:	cmp    DWORD PTR [rsp+0x50],0x5
  40267a:	je     4026c8 <Mat_VarReadNextInfo@plt+0xa8>
  40267c:	mov    rax,QWORD PTR [rip+0x696d]        # 408ff0 <getopt_long_only@@Base+0x3f70>
  402683:	mov    edx,0x37
  402688:	mov    rcx,QWORD PTR [rax]
  40268b:	mov    esi,0x1
  402690:	lea    rdi,[rip+0x3e61]        # 4064f8 <getopt_long_only@@Base+0x1478>
  402697:	call   4025d0 <fwrite@plt>
  40269c:	mov    r14d,0x1
  4026a2:	mov    rbx,QWORD PTR [rsp+0x58]
  4026a7:	xor    rbx,QWORD PTR fs:0x28
  4026b0:	mov    eax,r14d
  4026b3:	jne    4030ea <Mat_VarReadNextInfo@plt+0xaca>
  4026b9:	add    rsp,0x68
  4026bd:	pop    rbx
  4026be:	pop    rbp
  4026bf:	pop    r12
  4026c1:	pop    r13
  4026c3:	pop    r14
  4026c5:	pop    r15
  4026c7:	ret    
  4026c8:	cmp    DWORD PTR [rsp+0x54],0xf
  4026cd:	jne    40267c <Mat_VarReadNextInfo@plt+0x5c>
  4026cf:	lea    rsi,[rip+0xb6a]        # 403240 <Mat_VarReadNextInfo@plt+0xc20>
  4026d6:	lea    rdi,[rip+0x3a93]        # 406170 <getopt_long_only@@Base+0x10f0>
  4026dd:	call   402560 <Mat_LogInitFunc@plt>
  4026e2:	lea    rax,[rip+0x1037]        # 403720 <Mat_VarReadNextInfo@plt+0x1100>
  4026e9:	mov    QWORD PTR [rip+0x6c80],rax        # 409370 <opterr@@Base+0x1c>
  4026f0:	lea    r12,[rip+0x6b69]        # 409260 <getopt_long_only@@Base+0x41e0>
  4026f7:	lea    rbp,[rip+0x3aac]        # 4061aa <getopt_long_only@@Base+0x112a>
  4026fe:	lea    rbx,[rip+0x3cbb]        # 4063c0 <getopt_long_only@@Base+0x1340>
  402705:	xor    r8d,r8d
  402708:	mov    rcx,r12
  40270b:	mov    rdx,rbp
  40270e:	mov    rsi,r13
  402711:	mov    edi,r15d
  402714:	call   405070 <getopt_long@@Base>
  402719:	cmp    eax,0xffffffff
  40271c:	je     402824 <Mat_VarReadNextInfo@plt+0x204>
  402722:	lea    ecx,[rax-0x48]
  402725:	cmp    ecx,0x2e
  402728:	ja     4027f4 <Mat_VarReadNextInfo@plt+0x1d4>
  40272e:	movsxd rcx,DWORD PTR [rbx+rcx*4]
  402732:	add    rcx,rbx
  402735:	notrack jmp rcx
  402738:	xor    esi,esi
  40273a:	mov    edi,0x1
  40273f:	call   402350 <Mat_SetVerbose@plt>
  402744:	jmp    402705 <Mat_VarReadNextInfo@plt+0xe5>
  402746:	mov    DWORD PTR [rip+0x6c28],0x1        # 409378 <opterr@@Base+0x24>
  402750:	jmp    402705 <Mat_VarReadNextInfo@plt+0xe5>
  402752:	mov    rax,0x409388
  402759:	mov    rdx,QWORD PTR [rax]
  40275c:	test   rdx,rdx
  40275f:	je     402955 <Mat_VarReadNextInfo@plt+0x335>
  402765:	mov    rdi,rdx
  402768:	lea    rsi,[rip+0x3a18]        # 406187 <getopt_long_only@@Base+0x1107>
  40276f:	mov    QWORD PTR [rsp],rdx
  402773:	call   4024b0 <strcmp@plt>
  402778:	test   eax,eax
  40277a:	mov    rdx,QWORD PTR [rsp]
  40277e:	jne    40280e <Mat_VarReadNextInfo@plt+0x1ee>
  402784:	lea    rax,[rip+0xc65]        # 4033f0 <Mat_VarReadNextInfo@plt+0xdd0>
  40278b:	mov    QWORD PTR [rip+0x6bde],rax        # 409370 <opterr@@Base+0x1c>
  402792:	jmp    402705 <Mat_VarReadNextInfo@plt+0xe5>
  402797:	lea    rsi,[rip+0x39da]        # 406178 <getopt_long_only@@Base+0x10f8>
  40279e:	mov    edi,0x1
  4027a3:	xor    eax,eax
  4027a5:	mov    DWORD PTR [rip+0x6bcd],0x1        # 40937c <opterr@@Base+0x28>
  4027af:	call   402570 <Mat_VerbMessage@plt>
  4027b4:	jmp    402705 <Mat_VarReadNextInfo@plt+0xe5>
  4027b9:	mov    edi,0x1
  4027be:	lea    rcx,[rip+0x39c7]        # 40618c <getopt_long_only@@Base+0x110c>
  4027c5:	lea    rdx,[rip+0x39a4]        # 406170 <getopt_long_only@@Base+0x10f0>
  4027cc:	lea    rsi,[rip+0x3dbd]        # 406590 <getopt_long_only@@Base+0x1510>
  4027d3:	xor    eax,eax
  4027d5:	call   402550 <__printf_chk@plt>
  4027da:	xor    edi,edi
  4027dc:	call   4025c0 <exit@plt>
  4027e1:	lea    rdi,[rip+0x69d8]        # 4091c0 <getopt_long_only@@Base+0x4140>
  4027e8:	call   402590 <Mat_Help@plt>
  4027ed:	xor    edi,edi
  4027ef:	call   4025c0 <exit@plt>
  4027f4:	mov    edx,eax
  4027f6:	lea    rsi,[rip+0x3996]        # 406193 <getopt_long_only@@Base+0x1113>
  4027fd:	mov    edi,0x1
  402802:	xor    eax,eax
  402804:	call   402550 <__printf_chk@plt>
  402809:	jmp    402705 <Mat_VarReadNextInfo@plt+0xe5>
  40280e:	mov    rsi,rdx
  402811:	lea    rdi,[rip+0x3d18]        # 406530 <getopt_long_only@@Base+0x14b0>
  402818:	xor    eax,eax
  40281a:	call   402400 <Mat_Warning@plt>
  40281f:	jmp    402705 <Mat_VarReadNextInfo@plt+0xe5>
  402824:	mov    rbx,0x409350
  40282b:	mov    edx,r15d
  40282e:	movsxd rax,DWORD PTR [rbx]
  402831:	sub    edx,eax
  402833:	test   edx,edx
  402835:	jle    402fd6 <Mat_VarReadNextInfo@plt+0x9b6>
  40283b:	mov    rdi,QWORD PTR [r13+rax*8+0x0]
  402840:	xor    esi,esi
  402842:	call   4023a0 <Mat_Open@plt>
  402847:	mov    QWORD PTR [rsp+0x30],rax
  40284c:	test   rax,rax
  40284f:	je     40307c <Mat_VarReadNextInfo@plt+0xa5c>
  402855:	mov    eax,DWORD PTR [rbx]
  402857:	inc    eax
  402859:	mov    DWORD PTR [rbx],eax
  40285b:	cmp    eax,r15d
  40285e:	jge    40290a <Mat_VarReadNextInfo@plt+0x2ea>
  402864:	cdqe   
  402866:	mov    QWORD PTR [rsp+0x10],rax
  40286b:	mov    DWORD PTR [rsp+0x3c],r15d
  402870:	mov    QWORD PTR [rsp+0x18],r13
  402875:	jmp    4028e1 <Mat_VarReadNextInfo@plt+0x2c1>
  402877:	movzx  ebx,BYTE PTR [rax]
  40287a:	mov    BYTE PTR [rax],0x0
  40287d:	mov    rax,QWORD PTR [rsp+0x18]
  402882:	mov    rcx,QWORD PTR [rsp+0x10]
  402887:	mov    r14,QWORD PTR [rsp+0x30]
  40288c:	mov    rsi,QWORD PTR [rax+rcx*8]
  402890:	mov    rdi,r14
  402893:	call   402490 <Mat_VarReadInfo@plt>
  402898:	mov    r15,rax
  40289b:	test   rax,rax
  40289e:	je     402e9c <Mat_VarReadNextInfo@plt+0x87c>
  4028a4:	cmp    DWORD PTR [rip+0x6ad1],0x0        # 40937c <opterr@@Base+0x28>
  4028ab:	je     4028c0 <Mat_VarReadNextInfo@plt+0x2a0>
  4028ad:	test   bl,bl
  4028af:	jne    402968 <Mat_VarReadNextInfo@plt+0x348>
  4028b5:	mov    rsi,rax
  4028b8:	mov    rdi,r14
  4028bb:	call   402480 <Mat_VarReadDataAll@plt>
  4028c0:	mov    rdi,r15
  4028c3:	call   QWORD PTR [rip+0x6aa7]        # 409370 <opterr@@Base+0x1c>
  4028c9:	mov    rdi,r15
  4028cc:	call   4024e0 <Mat_VarFree@plt>
  4028d1:	inc    QWORD PTR [rsp+0x10]
  4028d6:	mov    rax,QWORD PTR [rsp+0x10]
  4028db:	cmp    DWORD PTR [rsp+0x3c],eax
  4028df:	jle    40293e <Mat_VarReadNextInfo@plt+0x31e>
  4028e1:	mov    rax,QWORD PTR [rsp+0x18]
  4028e6:	mov    rcx,QWORD PTR [rsp+0x10]
  4028eb:	mov    rbx,QWORD PTR [rax+rcx*8]
  4028ef:	mov    rdi,rbx
  4028f2:	call   403e20 <Mat_VarReadNextInfo@plt+0x1800>
  4028f7:	mov    rbp,rax
  4028fa:	cmp    rbx,rax
  4028fd:	jne    402877 <Mat_VarReadNextInfo@plt+0x257>
  402903:	xor    ebx,ebx
  402905:	jmp    40287d <Mat_VarReadNextInfo@plt+0x25d>
  40290a:	cmp    DWORD PTR [rip+0x6a6b],0x0        # 40937c <opterr@@Base+0x28>
  402911:	mov    rbp,QWORD PTR [rsp+0x30]
  402916:	jne    40292e <Mat_VarReadNextInfo@plt+0x30e>
  402918:	jmp    402f9c <Mat_VarReadNextInfo@plt+0x97c>
  40291d:	mov    rdi,rbx
  402920:	call   QWORD PTR [rip+0x6a4a]        # 409370 <opterr@@Base+0x1c>
  402926:	mov    rdi,rbx
  402929:	call   4024e0 <Mat_VarFree@plt>
  40292e:	mov    rdi,rbp
  402931:	call   402390 <Mat_VarReadNext@plt>
  402936:	mov    rbx,rax
  402939:	test   rax,rax
  40293c:	jne    40291d <Mat_VarReadNextInfo@plt+0x2fd>
  40293e:	mov    rdi,QWORD PTR [rsp+0x30]
  402943:	xor    r14d,r14d
  402946:	call   402530 <Mat_Close@plt>
  40294b:	call   402370 <Mat_LogClose@plt>
  402950:	jmp    4026a2 <Mat_VarReadNextInfo@plt+0x82>
  402955:	lea    rdi,[rip+0x3c0c]        # 406568 <getopt_long_only@@Base+0x14e8>
  40295c:	xor    eax,eax
  40295e:	call   402400 <Mat_Warning@plt>
  402963:	jmp    402705 <Mat_VarReadNextInfo@plt+0xe5>
  402968:	mov    BYTE PTR [rbp+0x0],bl
  40296b:	mov    rdi,rbp
  40296e:	call   403e20 <Mat_VarReadNextInfo@plt+0x1800>
  402973:	mov    r9,rax
  402976:	movzx  ebp,BYTE PTR [rax]
  402979:	jmp    40298f <Mat_VarReadNextInfo@plt+0x36f>
  40297b:	cmp    bpl,0x7b
  40297f:	je     402ad9 <Mat_VarReadNextInfo@plt+0x4b9>
  402985:	mov    QWORD PTR [rsp+0x8],r9
  40298a:	mov    r9,QWORD PTR [rsp+0x8]
  40298f:	cmp    bpl,0x28
  402993:	je     402ce0 <Mat_VarReadNextInfo@plt+0x6c0>
  402999:	cmp    bpl,0x2e
  40299d:	jne    40297b <Mat_VarReadNextInfo@plt+0x35b>
  40299f:	mov    eax,DWORD PTR [r15+0x14]
  4029a3:	lea    r13,[r9+0x1]
  4029a7:	cmp    eax,0x2
  4029aa:	je     402a7c <Mat_VarReadNextInfo@plt+0x45c>
  4029b0:	dec    eax
  4029b2:	jne    4030c5 <Mat_VarReadNextInfo@plt+0xaa5>
  4029b8:	movsxd rcx,DWORD PTR [r15+0x10]
  4029bc:	mov    rax,QWORD PTR [r15]
  4029bf:	xor    edx,edx
  4029c1:	div    rcx
  4029c4:	mov    rdi,r13
  4029c7:	mov    QWORD PTR [rsp+0x20],rax
  4029cc:	mov    DWORD PTR [rsp],eax
  4029cf:	mov    rax,QWORD PTR [r15+0x38]
  4029d3:	mov    r14,rax
  4029d6:	call   403e20 <Mat_VarReadNextInfo@plt+0x1800>
  4029db:	mov    QWORD PTR [rsp+0x8],rax
  4029e0:	cmp    r13,rax
  4029e3:	je     402de1 <Mat_VarReadNextInfo@plt+0x7c1>
  4029e9:	movzx  ebp,BYTE PTR [rax]
  4029ec:	mov    DWORD PTR [rsp+0x38],0x0
  4029f4:	mov    BYTE PTR [rax],0x0
  4029f7:	xor    ebx,ebx
  4029f9:	mov    BYTE PTR [rsp+0x28],bpl
  4029fe:	jmp    402a55 <Mat_VarReadNextInfo@plt+0x435>
  402a00:	mov    esi,ebx
  402a02:	mov    rdi,r15
  402a05:	call   4023e0 <Mat_VarGetCell@plt>
  402a0a:	mov    rbp,rax
  402a0d:	test   rax,rax
  402a10:	je     402cbb <Mat_VarReadNextInfo@plt+0x69b>
  402a16:	cmp    DWORD PTR [rax+0x14],0x2
  402a1a:	jne    402cbb <Mat_VarReadNextInfo@plt+0x69b>
  402a20:	xor    edx,edx
  402a22:	mov    rsi,r13
  402a25:	mov    rdi,rax
  402a28:	call   4025a0 <Mat_VarGetStructFieldByName@plt>
  402a2d:	test   rax,rax
  402a30:	je     402dee <Mat_VarReadNextInfo@plt+0x7ce>
  402a36:	mov    esi,0x1
  402a3b:	mov    rdi,rax
  402a3e:	call   402600 <Mat_VarDuplicate@plt>
  402a43:	mov    r12,rax
  402a46:	mov    rdi,rbp
  402a49:	call   4024e0 <Mat_VarFree@plt>
  402a4e:	mov    QWORD PTR [r14+rbx*8],r12
  402a52:	inc    rbx
  402a55:	mov    r12d,ebx
  402a58:	cmp    DWORD PTR [rsp],ebx
  402a5b:	jg     402a00 <Mat_VarReadNextInfo@plt+0x3e0>
  402a5d:	movzx  ebp,BYTE PTR [rsp+0x28]
  402a62:	cmp    DWORD PTR [rsp+0x20],ebx
  402a66:	jne    4028c0 <Mat_VarReadNextInfo@plt+0x2a0>
  402a6c:	cmp    DWORD PTR [rsp+0x38],0x0
  402a71:	je     40298a <Mat_VarReadNextInfo@plt+0x36a>
  402a77:	jmp    4028c0 <Mat_VarReadNextInfo@plt+0x2a0>
  402a7c:	mov    rdi,r13
  402a7f:	call   403e20 <Mat_VarReadNextInfo@plt+0x1800>
  402a84:	cmp    r13,rax
  402a87:	je     402e17 <Mat_VarReadNextInfo@plt+0x7f7>
  402a8d:	movzx  ebp,BYTE PTR [rax]
  402a90:	mov    BYTE PTR [rax],0x0
  402a93:	xor    edx,edx
  402a95:	mov    rsi,r13
  402a98:	mov    rdi,r15
  402a9b:	mov    QWORD PTR [rsp],rax
  402a9f:	call   4025a0 <Mat_VarGetStructFieldByName@plt>
  402aa4:	test   rax,rax
  402aa7:	mov    r9,QWORD PTR [rsp]
  402aab:	je     403026 <Mat_VarReadNextInfo@plt+0xa06>
  402ab1:	mov    esi,0x1
  402ab6:	mov    rdi,rax
  402ab9:	mov    QWORD PTR [rsp],r9
  402abd:	call   402600 <Mat_VarDuplicate@plt>
  402ac2:	mov    rbx,rax
  402ac5:	mov    rdi,r15
  402ac8:	call   4024e0 <Mat_VarFree@plt>
  402acd:	mov    r15,rbx
  402ad0:	mov    r9,QWORD PTR [rsp]
  402ad4:	jmp    402985 <Mat_VarReadNextInfo@plt+0x365>
  402ad9:	cmp    DWORD PTR [r15+0x14],0x1
  402ade:	jne    4030ef <Mat_VarReadNextInfo@plt+0xacf>
  402ae4:	lea    r12,[r9+0x1]
  402ae8:	mov    esi,0x7d
  402aed:	mov    rdi,r12
  402af0:	mov    QWORD PTR [rsp],r9
  402af4:	call   402460 <strchr@plt>
  402af9:	lea    rdi,[rax+0x1]
  402afd:	mov    rbx,rax
  402b00:	call   403e20 <Mat_VarReadNextInfo@plt+0x1800>
  402b05:	mov    rcx,rax
  402b08:	mov    QWORD PTR [rsp+0x8],rax
  402b0d:	movzx  eax,BYTE PTR [rax]
  402b10:	mov    DWORD PTR [rsp+0x38],0x1
  402b18:	test   al,al
  402b1a:	mov    r9,QWORD PTR [rsp]
  402b1e:	je     402b2d <Mat_VarReadNextInfo@plt+0x50d>
  402b20:	mov    BYTE PTR [rcx],0x0
  402b23:	mov    DWORD PTR [rsp+0x38],0x0
  402b2b:	mov    ebp,eax
  402b2d:	mov    rax,r12
  402b30:	mov    r14d,0x1
  402b36:	cmp    rbx,rax
  402b39:	je     402b49 <Mat_VarReadNextInfo@plt+0x529>
  402b3b:	inc    rax
  402b3e:	cmp    BYTE PTR [rax-0x1],0x2c
  402b42:	jne    402b36 <Mat_VarReadNextInfo@plt+0x516>
  402b44:	inc    r14d
  402b47:	jmp    402b36 <Mat_VarReadNextInfo@plt+0x516>
  402b49:	mov    rsi,r9
  402b4c:	not    rsi
  402b4f:	add    rsi,rbx
  402b52:	movsxd rax,r14d
  402b55:	add    rsi,r12
  402b58:	lea    r12,[rax*4+0x0]
  402b60:	mov    rdi,r12
  402b63:	mov    QWORD PTR [rsp+0x20],r9
  402b68:	mov    QWORD PTR [rsp],rsi
  402b6c:	call   402510 <malloc@plt>
  402b71:	mov    rdi,r12
  402b74:	mov    rbx,rax
  402b77:	call   402510 <malloc@plt>
  402b7c:	mov    rdi,r12
  402b7f:	mov    r13,rax
  402b82:	call   402510 <malloc@plt>
  402b87:	mov    rsi,QWORD PTR [rsp]
  402b8b:	mov    r9,QWORD PTR [rsp+0x20]
  402b90:	mov    r12,rax
  402b93:	xor    eax,eax
  402b95:	mov    DWORD PTR [rbx+rax*4],0x0
  402b9c:	mov    DWORD PTR [r13+rax*4+0x0],0x1
  402ba5:	mov    DWORD PTR [r12+rax*4],0x1
  402bad:	inc    rax
  402bb0:	cmp    r14d,eax
  402bb3:	jg     402b95 <Mat_VarReadNextInfo@plt+0x575>
  402bb5:	mov    rdi,r9
  402bb8:	mov    r8,r12
  402bbb:	mov    rcx,r13
  402bbe:	mov    rdx,rbx
  402bc1:	call   403e90 <Mat_VarReadNextInfo@plt+0x1870>
  402bc6:	mov    r8d,DWORD PTR [r15+0x8]
  402bca:	lea    r9,[r15+0x28]
  402bce:	mov    rcx,r12
  402bd1:	mov    rdx,r13
  402bd4:	mov    rsi,rbx
  402bd7:	mov    edi,r14d
  402bda:	call   404190 <Mat_VarReadNextInfo@plt+0x1b70>
  402bdf:	mov    DWORD PTR [rsp],eax
  402be2:	test   eax,eax
  402be4:	je     402e5f <Mat_VarReadNextInfo@plt+0x83f>
  402bea:	cmp    r14d,0x1
  402bee:	jne    402f5c <Mat_VarReadNextInfo@plt+0x93c>
  402bf4:	mov    ecx,DWORD PTR [r12]
  402bf8:	mov    edx,DWORD PTR [r13+0x0]
  402bfc:	mov    esi,DWORD PTR [rbx]
  402bfe:	mov    rdi,r15
  402c01:	call   402580 <Mat_VarGetCellsLinear@plt>
  402c06:	cmp    DWORD PTR [r15+0x8],0x2
  402c0b:	mov    r9,rax
  402c0e:	mov    rax,QWORD PTR [r15+0x28]
  402c12:	je     403035 <Mat_VarReadNextInfo@plt+0xa15>
  402c18:	mov    DWORD PTR [r15+0x8],0x1
  402c20:	movsxd rdx,DWORD PTR [r12]
  402c24:	mov    QWORD PTR [rax],rdx
  402c27:	test   r9,r9
  402c2a:	je     402fb1 <Mat_VarReadNextInfo@plt+0x991>
  402c30:	xor    r14d,r14d
  402c33:	mov    QWORD PTR [rsp+0x20],rbx
  402c38:	mov    QWORD PTR [rsp+0x28],r12
  402c3d:	mov    rbx,r14
  402c40:	mov    r12,r9
  402c43:	mov    r14d,DWORD PTR [rsp]
  402c47:	jmp    402c5e <Mat_VarReadNextInfo@plt+0x63e>
  402c49:	mov    rdi,QWORD PTR [r12+rbx*8]
  402c4d:	mov    esi,0x1
  402c52:	call   402600 <Mat_VarDuplicate@plt>
  402c57:	mov    QWORD PTR [r12+rbx*8],rax
  402c5b:	inc    rbx
  402c5e:	cmp    r14d,ebx
  402c61:	jg     402c49 <Mat_VarReadNextInfo@plt+0x629>
  402c63:	mov    ecx,DWORD PTR [r15+0x8]
  402c67:	mov    r8,QWORD PTR [r15+0x28]
  402c6b:	mov    rbx,QWORD PTR [rsp+0x20]
  402c70:	mov    r9,r12
  402c73:	mov    rdi,QWORD PTR [r15+0x30]
  402c77:	mov    r12,QWORD PTR [rsp+0x28]
  402c7c:	push   rax
  402c7d:	mov    edx,0x15
  402c82:	mov    esi,0x1
  402c87:	push   0x1
  402c89:	call   4023f0 <Mat_VarCreate@plt>
  402c8e:	mov    rdi,r15
  402c91:	mov    r14,rax
  402c94:	call   4024e0 <Mat_VarFree@plt>
  402c99:	mov    rdi,rbx
  402c9c:	call   402360 <free@plt>
  402ca1:	mov    rdi,r13
  402ca4:	call   402360 <free@plt>
  402ca9:	mov    rdi,r12
  402cac:	call   402360 <free@plt>
  402cb1:	pop    rdx
  402cb2:	pop    rcx
  402cb3:	mov    r15,r14
  402cb6:	jmp    402a6c <Mat_VarReadNextInfo@plt+0x44c>
  402cbb:	mov    rax,QWORD PTR [rip+0x632e]        # 408ff0 <getopt_long_only@@Base+0x3f70>
  402cc2:	mov    ecx,r12d
  402cc5:	mov    rdi,QWORD PTR [rax]
  402cc8:	lea    rdx,[rip+0x39d1]        # 4066a0 <getopt_long_only@@Base+0x1620>
  402ccf:	mov    esi,0x1
  402cd4:	xor    eax,eax
  402cd6:	call   4025e0 <__fprintf_chk@plt>
  402cdb:	jmp    4028c0 <Mat_VarReadNextInfo@plt+0x2a0>
  402ce0:	lea    r14,[r9+0x1]
  402ce4:	mov    esi,0x29
  402ce9:	mov    rdi,r14
  402cec:	mov    QWORD PTR [rsp],r9
  402cf0:	call   402460 <strchr@plt>
  402cf5:	lea    r12,[rax+0x1]
  402cf9:	mov    rdi,r12
  402cfc:	mov    rbp,rax
  402cff:	call   403e20 <Mat_VarReadNextInfo@plt+0x1800>
  402d04:	cmp    r12,rax
  402d07:	mov    rdx,r14
  402d0a:	mov    ebx,0x1
  402d0f:	mov    r9,QWORD PTR [rsp]
  402d13:	jne    403114 <Mat_VarReadNextInfo@plt+0xaf4>
  402d19:	cmp    rbp,rdx
  402d1c:	je     402d2b <Mat_VarReadNextInfo@plt+0x70b>
  402d1e:	inc    rdx
  402d21:	cmp    BYTE PTR [rdx-0x1],0x2c
  402d25:	jne    402d19 <Mat_VarReadNextInfo@plt+0x6f9>
  402d27:	inc    ebx
  402d29:	jmp    402d19 <Mat_VarReadNextInfo@plt+0x6f9>
  402d2b:	dec    rbp
  402d2e:	sub    rbp,r9
  402d31:	add    r14,rbp
  402d34:	movsxd rbp,ebx
  402d37:	shl    rbp,0x2
  402d3b:	mov    rdi,rbp
  402d3e:	mov    QWORD PTR [rsp],r9
  402d42:	call   402510 <malloc@plt>
  402d47:	mov    rdi,rbp
  402d4a:	mov    r13,rax
  402d4d:	call   402510 <malloc@plt>
  402d52:	mov    rdi,rbp
  402d55:	mov    r12,rax
  402d58:	call   402510 <malloc@plt>
  402d5d:	mov    r9,QWORD PTR [rsp]
  402d61:	mov    rbp,rax
  402d64:	xor    eax,eax
  402d66:	mov    DWORD PTR [r13+rax*4+0x0],0x0
  402d6f:	mov    DWORD PTR [r12+rax*4],0x1
  402d77:	mov    DWORD PTR [rbp+rax*4+0x0],0x1
  402d7f:	inc    rax
  402d82:	cmp    ebx,eax
  402d84:	jg     402d66 <Mat_VarReadNextInfo@plt+0x746>
  402d86:	mov    rsi,r14
  402d89:	mov    rdi,r9
  402d8c:	mov    r8,rbp
  402d8f:	mov    rcx,r12
  402d92:	mov    rdx,r13
  402d95:	call   403e90 <Mat_VarReadNextInfo@plt+0x1870>
  402d9a:	mov    r8d,DWORD PTR [r15+0x8]
  402d9e:	lea    r9,[r15+0x28]
  402da2:	mov    rcx,rbp
  402da5:	mov    rdx,r12
  402da8:	mov    rsi,r13
  402dab:	mov    edi,ebx
  402dad:	call   404190 <Mat_VarReadNextInfo@plt+0x1b70>
  402db2:	movsxd r14,eax
  402db5:	test   r14d,r14d
  402db8:	jne    402ebd <Mat_VarReadNextInfo@plt+0x89d>
  402dbe:	mov    rdi,r13
  402dc1:	call   402360 <free@plt>
  402dc6:	mov    rdi,r12
  402dc9:	call   402360 <free@plt>
  402dce:	mov    rdi,rbp
  402dd1:	call   402360 <free@plt>
  402dd6:	mov    rbx,r15
  402dd9:	mov    r15,rbx
  402ddc:	jmp    4028c0 <Mat_VarReadNextInfo@plt+0x2a0>
  402de1:	mov    DWORD PTR [rsp+0x38],0x1
  402de9:	jmp    4029f7 <Mat_VarReadNextInfo@plt+0x3d7>
  402dee:	mov    r8,QWORD PTR [r15+0x30]
  402df2:	mov    rcx,r13
  402df5:	mov    rax,QWORD PTR [rip+0x61f4]        # 408ff0 <getopt_long_only@@Base+0x3f70>
  402dfc:	lea    rdx,[rip+0x3875]        # 406678 <getopt_long_only@@Base+0x15f8>
  402e03:	mov    rdi,QWORD PTR [rax]
  402e06:	mov    esi,0x1
  402e0b:	xor    eax,eax
  402e0d:	call   4025e0 <__fprintf_chk@plt>
  402e12:	jmp    4028c0 <Mat_VarReadNextInfo@plt+0x2a0>
  402e17:	xor    edx,edx
  402e19:	mov    rsi,rax
  402e1c:	mov    rdi,r15
  402e1f:	mov    QWORD PTR [rsp],rax
  402e23:	call   4025a0 <Mat_VarGetStructFieldByName@plt>
  402e28:	test   rax,rax
  402e2b:	mov    r9,QWORD PTR [rsp]
  402e2f:	je     403029 <Mat_VarReadNextInfo@plt+0xa09>
  402e35:	mov    esi,0x1
  402e3a:	mov    rdi,rax
  402e3d:	call   402600 <Mat_VarDuplicate@plt>
  402e42:	mov    rdi,r15
  402e45:	mov    rbx,rax
  402e48:	call   4024e0 <Mat_VarFree@plt>
  402e4d:	mov    rdi,QWORD PTR [rsp+0x30]
  402e52:	mov    rsi,rbx
  402e55:	call   402480 <Mat_VarReadDataAll@plt>
  402e5a:	jmp    402dd9 <Mat_VarReadNextInfo@plt+0x7b9>
  402e5f:	mov    rax,QWORD PTR [rip+0x618a]        # 408ff0 <getopt_long_only@@Base+0x3f70>
  402e66:	mov    edx,0x18
  402e6b:	mov    rcx,QWORD PTR [rax]
  402e6e:	mov    esi,0x1
  402e73:	lea    rdi,[rip+0x3360]        # 4061da <getopt_long_only@@Base+0x115a>
  402e7a:	call   4025d0 <fwrite@plt>
  402e7f:	mov    rdi,rbx
  402e82:	call   402360 <free@plt>
  402e87:	mov    rdi,r13
  402e8a:	call   402360 <free@plt>
  402e8f:	mov    rdi,r12
  402e92:	call   402360 <free@plt>
  402e97:	jmp    4028c0 <Mat_VarReadNextInfo@plt+0x2a0>
  402e9c:	mov    rax,QWORD PTR [rsp+0x18]
  402ea1:	mov    rcx,QWORD PTR [rsp+0x10]
  402ea6:	lea    rdi,[rip+0x3863]        # 406710 <getopt_long_only@@Base+0x1690>
  402ead:	mov    rsi,QWORD PTR [rax+rcx*8]
  402eb1:	xor    eax,eax
  402eb3:	call   402400 <Mat_Warning@plt>
  402eb8:	jmp    4028d1 <Mat_VarReadNextInfo@plt+0x2b1>
  402ebd:	mov    edi,DWORD PTR [r15+0x14]
  402ec1:	call   4025b0 <Mat_SizeOfClass@plt>
  402ec6:	mov    DWORD PTR [r15+0x10],eax
  402eca:	cdqe   
  402ecc:	imul   r14,rax
  402ed0:	cmp    DWORD PTR [r15+0x18],0x0
  402ed5:	mov    QWORD PTR [r15],r14
  402ed8:	je     402fe9 <Mat_VarReadNextInfo@plt+0x9c9>
  402ede:	mov    edi,0x10
  402ee3:	call   402510 <malloc@plt>
  402ee8:	mov    QWORD PTR [r15+0x38],rax
  402eec:	mov    rdi,r14
  402eef:	mov    QWORD PTR [rsp],rax
  402ef3:	call   402510 <malloc@plt>
  402ef8:	mov    rdx,QWORD PTR [rsp]
  402efc:	mov    rdi,r14
  402eff:	mov    QWORD PTR [rdx],rax
  402f02:	call   402510 <malloc@plt>
  402f07:	mov    rdx,QWORD PTR [rsp]
  402f0b:	mov    QWORD PTR [rdx+0x8],rax
  402f0f:	cmp    ebx,0x1
  402f12:	jne    40304b <Mat_VarReadNextInfo@plt+0xa2b>
  402f18:	mov    r9d,DWORD PTR [rbp+0x0]
  402f1c:	mov    r8d,DWORD PTR [r12]
  402f20:	mov    ecx,DWORD PTR [r13+0x0]
  402f24:	mov    rdi,QWORD PTR [rsp+0x30]
  402f29:	mov    rsi,r15
  402f2c:	call   402410 <Mat_VarReadDataLinear@plt>
  402f31:	cmp    DWORD PTR [r15+0x8],0x2
  402f36:	mov    rax,QWORD PTR [r15+0x28]
  402f3a:	je     403097 <Mat_VarReadNextInfo@plt+0xa77>
  402f40:	mov    DWORD PTR [r15+0x8],0x2
  402f48:	movsxd rdx,DWORD PTR [rbp+0x0]
  402f4c:	mov    QWORD PTR [rax+0x8],0x1
  402f54:	mov    QWORD PTR [rax],rdx
  402f57:	jmp    402dbe <Mat_VarReadNextInfo@plt+0x79e>
  402f5c:	mov    rcx,r12
  402f5f:	mov    rdx,r13
  402f62:	mov    rsi,rbx
  402f65:	mov    rdi,r15
  402f68:	call   4023c0 <Mat_VarGetCells@plt>
  402f6d:	mov    rcx,QWORD PTR [r15+0x28]
  402f71:	mov    r9,rax
  402f74:	xor    eax,eax
  402f76:	movsxd rdx,DWORD PTR [r12+rax*4]
  402f7a:	mov    QWORD PTR [rcx+rax*8],rdx
  402f7e:	inc    rax
  402f81:	cmp    r14d,eax
  402f84:	jg     402f76 <Mat_VarReadNextInfo@plt+0x956>
  402f86:	jmp    402c27 <Mat_VarReadNextInfo@plt+0x607>
  402f8b:	mov    rdi,rbx
  402f8e:	call   QWORD PTR [rip+0x63dc]        # 409370 <opterr@@Base+0x1c>
  402f94:	mov    rdi,rbx
  402f97:	call   4024e0 <Mat_VarFree@plt>
  402f9c:	mov    rdi,rbp
  402f9f:	call   402620 <Mat_VarReadNextInfo@plt>
  402fa4:	mov    rbx,rax
  402fa7:	test   rax,rax
  402faa:	jne    402f8b <Mat_VarReadNextInfo@plt+0x96b>
  402fac:	jmp    40293e <Mat_VarReadNextInfo@plt+0x31e>
  402fb1:	mov    rax,QWORD PTR [rip+0x6038]        # 408ff0 <getopt_long_only@@Base+0x3f70>
  402fb8:	mov    edx,0x1f
  402fbd:	mov    rcx,QWORD PTR [rax]
  402fc0:	mov    esi,0x1
  402fc5:	lea    rdi,[rip+0x3724]        # 4066f0 <getopt_long_only@@Base+0x1670>
  402fcc:	call   4025d0 <fwrite@plt>
  402fd1:	jmp    402e7f <Mat_VarReadNextInfo@plt+0x85f>
  402fd6:	lea    rdi,[rip+0x360b]        # 4065e8 <getopt_long_only@@Base+0x1568>
  402fdd:	xor    eax,eax
  402fdf:	call   402540 <Mat_Critical@plt>
  402fe4:	jmp    4026a2 <Mat_VarReadNextInfo@plt+0x82>
  402fe9:	mov    rdi,r14
  402fec:	call   402510 <malloc@plt>
  402ff1:	mov    rdx,rax
  402ff4:	mov    QWORD PTR [r15+0x38],rax
  402ff8:	test   rax,rax
  402ffb:	jne    402f0f <Mat_VarReadNextInfo@plt+0x8ef>
  403001:	mov    rax,QWORD PTR [rip+0x5fe8]        # 408ff0 <getopt_long_only@@Base+0x3f70>
  403008:	mov    edx,0x25
  40300d:	mov    rcx,QWORD PTR [rax]
  403010:	mov    esi,0x1
  403015:	lea    rdi,[rip+0x3634]        # 406650 <getopt_long_only@@Base+0x15d0>
  40301c:	call   4025d0 <fwrite@plt>
  403021:	jmp    402dbe <Mat_VarReadNextInfo@plt+0x79e>
  403026:	mov    r9,r13
  403029:	mov    r8,QWORD PTR [r15+0x30]
  40302d:	mov    rcx,r9
  403030:	jmp    402df5 <Mat_VarReadNextInfo@plt+0x7d5>
  403035:	cmp    QWORD PTR [rax],0x1
  403039:	je     4030b8 <Mat_VarReadNextInfo@plt+0xa98>
  40303b:	cmp    QWORD PTR [rax+0x8],0x1
  403040:	jne    402c18 <Mat_VarReadNextInfo@plt+0x5f8>
  403046:	jmp    402c20 <Mat_VarReadNextInfo@plt+0x600>
  40304b:	mov    rdi,QWORD PTR [rsp+0x30]
  403050:	mov    rcx,r13
  403053:	mov    r9,rbp
  403056:	mov    r8,r12
  403059:	mov    rsi,r15
  40305c:	call   402440 <Mat_VarReadData@plt>
  403061:	mov    rcx,QWORD PTR [r15+0x28]
  403065:	xor    eax,eax
  403067:	movsxd rdx,DWORD PTR [rbp+rax*4+0x0]
  40306c:	mov    QWORD PTR [rcx+rax*8],rdx
  403070:	inc    rax
  403073:	cmp    ebx,eax
  403075:	jg     403067 <Mat_VarReadNextInfo@plt+0xa47>
  403077:	jmp    402dbe <Mat_VarReadNextInfo@plt+0x79e>
  40307c:	movsxd rax,DWORD PTR [rbx]
  40307f:	lea    rdi,[rip+0x312c]        # 4061b2 <getopt_long_only@@Base+0x1132>
  403086:	mov    rsi,QWORD PTR [r13+rax*8+0x0]
  40308b:	xor    eax,eax
  40308d:	call   402540 <Mat_Critical@plt>
  403092:	jmp    4026a2 <Mat_VarReadNextInfo@plt+0x82>
  403097:	cmp    QWORD PTR [rax],0x1
  40309b:	je     40313c <Mat_VarReadNextInfo@plt+0xb1c>
  4030a1:	cmp    QWORD PTR [rax+0x8],0x1
  4030a6:	jne    402f40 <Mat_VarReadNextInfo@plt+0x920>
  4030ac:	movsxd rdx,DWORD PTR [rbp+0x0]
  4030b0:	mov    QWORD PTR [rax],rdx
  4030b3:	jmp    402dbe <Mat_VarReadNextInfo@plt+0x79e>
  4030b8:	movsxd rdx,DWORD PTR [r12]
  4030bc:	mov    QWORD PTR [rax+0x8],rdx
  4030c0:	jmp    402c27 <Mat_VarReadNextInfo@plt+0x607>
  4030c5:	mov    rax,QWORD PTR [rip+0x5f24]        # 408ff0 <getopt_long_only@@Base+0x3f70>
  4030cc:	mov    rcx,r13
  4030cf:	mov    rdi,QWORD PTR [rax]
  4030d2:	lea    rdx,[rip+0x30eb]        # 4061c4 <getopt_long_only@@Base+0x1144>
  4030d9:	mov    esi,0x1
  4030de:	xor    eax,eax
  4030e0:	call   4025e0 <__fprintf_chk@plt>
  4030e5:	jmp    4028c0 <Mat_VarReadNextInfo@plt+0x2a0>
  4030ea:	call   402450 <__stack_chk_fail@plt>
  4030ef:	mov    rax,QWORD PTR [rip+0x5efa]        # 408ff0 <getopt_long_only@@Base+0x3f70>
  4030f6:	mov    edx,0x22
  4030fb:	mov    rcx,QWORD PTR [rax]
  4030fe:	mov    esi,0x1
  403103:	lea    rdi,[rip+0x35be]        # 4066c8 <getopt_long_only@@Base+0x1648>
  40310a:	call   4025d0 <fwrite@plt>
  40310f:	jmp    4028c0 <Mat_VarReadNextInfo@plt+0x2a0>
  403114:	mov    BYTE PTR [rax],0x0
  403117:	mov    rax,QWORD PTR [rip+0x5ed2]        # 408ff0 <getopt_long_only@@Base+0x3f70>
  40311e:	mov    edx,0x38
  403123:	mov    rcx,QWORD PTR [rax]
  403126:	mov    esi,0x1
  40312b:	lea    rdi,[rip+0x34de]        # 406610 <getopt_long_only@@Base+0x1590>
  403132:	call   4025d0 <fwrite@plt>
  403137:	jmp    4028c0 <Mat_VarReadNextInfo@plt+0x2a0>
  40313c:	movsxd rdx,DWORD PTR [rbp+0x0]
  403140:	mov    QWORD PTR [rax+0x8],rdx
  403144:	jmp    402dbe <Mat_VarReadNextInfo@plt+0x79e>
  403149:	nop    DWORD PTR [rax+0x0]
  403150:	endbr64 
  403154:	xor    ebp,ebp
  403156:	mov    r9,rdx
  403159:	pop    rsi
  40315a:	mov    rdx,rsp
  40315d:	and    rsp,0xfffffffffffffff0
  403161:	push   rax
  403162:	push   rsp
  403163:	mov    r8,0x405100
  40316a:	mov    rcx,0x405090
  403171:	mov    rdi,0x402630
  403178:	call   QWORD PTR [rip+0x5e62]        # 408fe0 <getopt_long_only@@Base+0x3f60>
  40317e:	hlt    
  40317f:	nop
  403180:	endbr64 
  403184:	ret    
  403185:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40318f:	nop
  403190:	mov    eax,0x409360
  403195:	cmp    rax,0x409360
  40319b:	je     4031b0 <Mat_VarReadNextInfo@plt+0xb90>
  40319d:	mov    eax,0x0
  4031a2:	test   rax,rax
  4031a5:	je     4031b0 <Mat_VarReadNextInfo@plt+0xb90>
  4031a7:	mov    edi,0x409360
  4031ac:	jmp    rax
  4031ae:	xchg   ax,ax
  4031b0:	ret    
  4031b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031bc:	nop    DWORD PTR [rax+0x0]
  4031c0:	mov    esi,0x409360
  4031c5:	sub    rsi,0x409360
  4031cc:	sar    rsi,0x3
  4031d0:	mov    rax,rsi
  4031d3:	shr    rax,0x3f
  4031d7:	add    rsi,rax
  4031da:	sar    rsi,1
  4031dd:	je     4031f0 <Mat_VarReadNextInfo@plt+0xbd0>
  4031df:	mov    eax,0x0
  4031e4:	test   rax,rax
  4031e7:	je     4031f0 <Mat_VarReadNextInfo@plt+0xbd0>
  4031e9:	mov    edi,0x409360
  4031ee:	jmp    rax
  4031f0:	ret    
  4031f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031fc:	nop    DWORD PTR [rax+0x0]
  403200:	endbr64 
  403204:	cmp    BYTE PTR [rip+0x6155],0x0        # 409360 <opterr@@Base+0xc>
  40320b:	jne    403220 <Mat_VarReadNextInfo@plt+0xc00>
  40320d:	push   rbp
  40320e:	mov    rbp,rsp
  403211:	call   403190 <Mat_VarReadNextInfo@plt+0xb70>
  403216:	mov    BYTE PTR [rip+0x6143],0x1        # 409360 <opterr@@Base+0xc>
  40321d:	pop    rbp
  40321e:	ret    
  40321f:	nop
  403220:	ret    
  403221:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40322c:	nop    DWORD PTR [rax+0x0]
  403230:	endbr64 
  403234:	jmp    4031c0 <Mat_VarReadNextInfo@plt+0xba0>
  403236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403240:	endbr64 
  403244:	push   r12
  403246:	mov    eax,DWORD PTR [rip+0x611c]        # 409368 <opterr@@Base+0x14>
  40324c:	mov    r12,rsi
  40324f:	push   rbp
  403250:	push   rbx
  403251:	test   eax,eax
  403253:	jle    403279 <Mat_VarReadNextInfo@plt+0xc59>
  403255:	xor    ebx,ebx
  403257:	lea    rbp,[rip+0x2e02]        # 406060 <getopt_long_only@@Base+0xfe0>
  40325e:	xchg   ax,ax
  403260:	xor    eax,eax
  403262:	mov    rsi,rbp
  403265:	mov    edi,0x1
  40326a:	inc    ebx
  40326c:	call   402550 <__printf_chk@plt>
  403271:	cmp    DWORD PTR [rip+0x60f1],ebx        # 409368 <opterr@@Base+0x14>
  403277:	jg     403260 <Mat_VarReadNextInfo@plt+0xc40>
  403279:	pop    rbx
  40327a:	pop    rbp
  40327b:	mov    rdi,r12
  40327e:	pop    r12
  403280:	jmp    4023d0 <puts@plt>
  403285:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403290:	cmp    edi,0xd
  403293:	ja     4033e0 <Mat_VarReadNextInfo@plt+0xdc0>
  403299:	lea    rdx,[rip+0x30a8]        # 406348 <getopt_long_only@@Base+0x12c8>
  4032a0:	mov    edi,edi
  4032a2:	movsxd rax,DWORD PTR [rdx+rdi*4]
  4032a6:	add    rax,rdx
  4032a9:	notrack jmp rax
  4032ac:	nop    DWORD PTR [rax+0x0]
  4032b0:	mov    rdx,QWORD PTR [rsi]
  4032b3:	mov    edi,0x1
  4032b8:	lea    rsi,[rip+0x2d4c]        # 40600b <getopt_long_only@@Base+0xf8b>
  4032bf:	xor    eax,eax
  4032c1:	jmp    402550 <__printf_chk@plt>
  4032c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032d0:	movsx  edx,BYTE PTR [rsi]
  4032d3:	mov    edi,0x1
  4032d8:	lea    rsi,[rip+0x2d3b]        # 40601a <getopt_long_only@@Base+0xf9a>
  4032df:	xor    eax,eax
  4032e1:	jmp    402550 <__printf_chk@plt>
  4032e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032f0:	movzx  edx,BYTE PTR [rsi]
  4032f3:	mov    edi,0x1
  4032f8:	lea    rsi,[rip+0x2d20]        # 40601f <getopt_long_only@@Base+0xf9f>
  4032ff:	xor    eax,eax
  403301:	jmp    402550 <__printf_chk@plt>
  403306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403310:	movsx  edx,WORD PTR [rsi]
  403313:	mov    edi,0x1
  403318:	lea    rsi,[rip+0x2cf3]        # 406012 <getopt_long_only@@Base+0xf92>
  40331f:	xor    eax,eax
  403321:	jmp    402550 <__printf_chk@plt>
  403326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403330:	movzx  edx,WORD PTR [rsi]
  403333:	mov    edi,0x1
  403338:	lea    rsi,[rip+0x2cd7]        # 406016 <getopt_long_only@@Base+0xf96>
  40333f:	xor    eax,eax
  403341:	jmp    402550 <__printf_chk@plt>
  403346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403350:	mov    edx,DWORD PTR [rsi]
  403352:	mov    edi,0x1
  403357:	lea    rsi,[rip+0x2d6c]        # 4060ca <getopt_long_only@@Base+0x104a>
  40335e:	xor    eax,eax
  403360:	jmp    402550 <__printf_chk@plt>
  403365:	nop    DWORD PTR [rax]
  403368:	mov    edx,DWORD PTR [rsi]
  40336a:	mov    edi,0x1
  40336f:	lea    rsi,[rip+0x2c99]        # 40600f <getopt_long_only@@Base+0xf8f>
  403376:	xor    eax,eax
  403378:	jmp    402550 <__printf_chk@plt>
  40337d:	nop    DWORD PTR [rax]
  403380:	vxorpd xmm0,xmm0,xmm0
  403384:	vcvtss2sd xmm0,xmm0,DWORD PTR [rsi]
  403388:	mov    edi,0x1
  40338d:	lea    rsi,[rip+0x2c70]        # 406004 <getopt_long_only@@Base+0xf84>
  403394:	mov    eax,0x1
  403399:	jmp    402550 <__printf_chk@plt>
  40339e:	xchg   ax,ax
  4033a0:	vmovsd xmm0,QWORD PTR [rsi]
  4033a4:	mov    edi,0x1
  4033a9:	lea    rsi,[rip+0x2c54]        # 406004 <getopt_long_only@@Base+0xf84>
  4033b0:	mov    eax,0x1
  4033b5:	jmp    402550 <__printf_chk@plt>
  4033ba:	nop    WORD PTR [rax+rax*1+0x0]
  4033c0:	mov    rdx,QWORD PTR [rsi]
  4033c3:	mov    edi,0x1
  4033c8:	lea    rsi,[rip+0x2c38]        # 406007 <getopt_long_only@@Base+0xf87>
  4033cf:	xor    eax,eax
  4033d1:	jmp    402550 <__printf_chk@plt>
  4033d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4033e0:	ret    
  4033e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4033ec:	nop    DWORD PTR [rax+0x0]
  4033f0:	endbr64 
  4033f4:	push   r15
  4033f6:	vpxor  xmm0,xmm0,xmm0
  4033fa:	push   r14
  4033fc:	push   r13
  4033fe:	push   r12
  403400:	push   rbp
  403401:	push   rbx
  403402:	mov    rbx,rdi
  403405:	sub    rsp,0x38
  403409:	mov    esi,DWORD PTR [rip+0x5da1]        # 4091b0 <getopt_long_only@@Base+0x4130>
  40340f:	mov    rax,QWORD PTR fs:0x28
  403418:	mov    QWORD PTR [rsp+0x28],rax
  40341d:	xor    eax,eax
  40341f:	vmovaps XMMWORD PTR [rsp],xmm0
  403424:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  40342a:	test   esi,esi
  40342c:	jne    403660 <Mat_VarReadNextInfo@plt+0x1040>
  403432:	mov    rdx,QWORD PTR [rbx+0x30]
  403436:	lea    rsi,[rip+0x2bfd]        # 40603a <getopt_long_only@@Base+0xfba>
  40343d:	mov    edi,0x1
  403442:	xor    eax,eax
  403444:	call   402550 <__printf_chk@plt>
  403449:	mov    ecx,DWORD PTR [rbx+0x8]
  40344c:	test   ecx,ecx
  40344e:	jle    4035e8 <Mat_VarReadNextInfo@plt+0xfc8>
  403454:	mov    rax,QWORD PTR [rbx+0x28]
  403458:	lea    rsi,[rip+0x2be1]        # 406040 <getopt_long_only@@Base+0xfc0>
  40345f:	mov    rdx,QWORD PTR [rax]
  403462:	mov    edi,0x1
  403467:	xor    eax,eax
  403469:	call   402550 <__printf_chk@plt>
  40346e:	cmp    DWORD PTR [rbx+0x8],0x1
  403472:	mov    r12,rsp
  403475:	jle    403533 <Mat_VarReadNextInfo@plt+0xf13>
  40347b:	mov    r14d,0x8
  403481:	xor    ebp,ebp
  403483:	mov    r15d,0x1
  403489:	mov    r12,rsp
  40348c:	lea    r13,[rip+0x2bb2]        # 406045 <getopt_long_only@@Base+0xfc5>
  403493:	jmp    4034cf <Mat_VarReadNextInfo@plt+0xeaf>
  403495:	nop    DWORD PTR [rax]
  403498:	vxorpd xmm0,xmm0,xmm0
  40349c:	vcvtsi2sd xmm0,xmm0,rax
  4034a1:	call   4024c0 <log10@plt>
  4034a6:	vroundsd xmm0,xmm0,xmm0,0xa
  4034ac:	vaddsd xmm0,xmm0,QWORD PTR [rip+0x349c]        # 406950 <getopt_long_only@@Base+0x18d0>
  4034b4:	vmovsd xmm1,QWORD PTR [rip+0x349c]        # 406958 <getopt_long_only@@Base+0x18d8>
  4034bc:	vcomisd xmm1,xmm0
  4034c0:	ja     403500 <Mat_VarReadNextInfo@plt+0xee0>
  4034c2:	inc    r15d
  4034c5:	add    r14,0x8
  4034c9:	cmp    DWORD PTR [rbx+0x8],r15d
  4034cd:	jle    403533 <Mat_VarReadNextInfo@plt+0xf13>
  4034cf:	mov    rax,QWORD PTR [rbx+0x28]
  4034d3:	mov    rax,QWORD PTR [rax+r14*1]
  4034d7:	test   rax,rax
  4034da:	jns    403498 <Mat_VarReadNextInfo@plt+0xe78>
  4034dc:	mov    rdx,rax
  4034df:	shr    rdx,1
  4034e2:	and    eax,0x1
  4034e5:	or     rdx,rax
  4034e8:	vxorpd xmm0,xmm0,xmm0
  4034ec:	vcvtsi2sd xmm0,xmm0,rdx
  4034f1:	vaddsd xmm0,xmm0,xmm0
  4034f5:	jmp    4034a1 <Mat_VarReadNextInfo@plt+0xe81>
  4034f7:	nop    WORD PTR [rax+rax*1+0x0]
  403500:	mov    rax,QWORD PTR [rbx+0x28]
  403504:	movsxd rdi,ebp
  403507:	mov    r8,QWORD PTR [rax+r14*1]
  40350b:	add    rdi,r12
  40350e:	mov    rcx,r13
  403511:	mov    rdx,0xffffffffffffffff
  403518:	mov    esi,0x1
  40351d:	xor    eax,eax
  40351f:	call   402610 <__sprintf_chk@plt>
  403524:	inc    r15d
  403527:	add    ebp,eax
  403529:	add    r14,0x8
  40352d:	cmp    DWORD PTR [rbx+0x8],r15d
  403531:	jg     4034cf <Mat_VarReadNextInfo@plt+0xeaf>
  403533:	mov    rdx,r12
  403536:	lea    rsi,[rip+0x2b0d]        # 40604a <getopt_long_only@@Base+0xfca>
  40353d:	mov    edi,0x1
  403542:	xor    eax,eax
  403544:	call   402550 <__printf_chk@plt>
  403549:	mov    rdi,rbx
  40354c:	call   4025f0 <Mat_VarGetSize@plt>
  403551:	mov    edx,DWORD PTR [rip+0x5e21]        # 409378 <opterr@@Base+0x24>
  403557:	test   edx,edx
  403559:	je     403600 <Mat_VarReadNextInfo@plt+0xfe0>
  40355f:	cmp    rax,0x40000000
  403565:	ja     4035b0 <Mat_VarReadNextInfo@plt+0xf90>
  403567:	cmp    rax,0x100000
  40356d:	ja     4036e0 <Mat_VarReadNextInfo@plt+0x10c0>
  403573:	cmp    rax,0x400
  403579:	jbe    4036a0 <Mat_VarReadNextInfo@plt+0x1080>
  40357f:	vxorpd xmm0,xmm0,xmm0
  403583:	vcvtsi2sd xmm0,xmm0,rax
  403588:	lea    rsi,[rip+0x2ae8]        # 406077 <getopt_long_only@@Base+0xff7>
  40358f:	mov    edi,0x1
  403594:	mov    eax,0x1
  403599:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x33cf]        # 406970 <getopt_long_only@@Base+0x18f0>
  4035a1:	call   402550 <__printf_chk@plt>
  4035a6:	jmp    403616 <Mat_VarReadNextInfo@plt+0xff6>
  4035a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4035b0:	test   rax,rax
  4035b3:	js     4036c0 <Mat_VarReadNextInfo@plt+0x10a0>
  4035b9:	vxorpd xmm0,xmm0,xmm0
  4035bd:	vcvtsi2sd xmm0,xmm0,rax
  4035c2:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x3396]        # 406960 <getopt_long_only@@Base+0x18e0>
  4035ca:	lea    rsi,[rip+0x2a94]        # 406065 <getopt_long_only@@Base+0xfe5>
  4035d1:	mov    edi,0x1
  4035d6:	mov    eax,0x1
  4035db:	call   402550 <__printf_chk@plt>
  4035e0:	jmp    403616 <Mat_VarReadNextInfo@plt+0xff6>
  4035e2:	nop    WORD PTR [rax+rax*1+0x0]
  4035e8:	lea    rsi,[rip+0x2a61]        # 406050 <getopt_long_only@@Base+0xfd0>
  4035ef:	mov    edi,0x1
  4035f4:	xor    eax,eax
  4035f6:	call   402550 <__printf_chk@plt>
  4035fb:	jmp    403549 <Mat_VarReadNextInfo@plt+0xf29>
  403600:	mov    rdx,rax
  403603:	lea    rsi,[rip+0x2a7e]        # 406088 <getopt_long_only@@Base+0x1008>
  40360a:	mov    edi,0x1
  40360f:	xor    eax,eax
  403611:	call   402550 <__printf_chk@plt>
  403616:	mov    edx,DWORD PTR [rbx+0x14]
  403619:	lea    rax,[rip+0x5740]        # 408d60 <getopt_long_only@@Base+0x3ce0>
  403620:	mov    rdx,QWORD PTR [rax+rdx*8]
  403624:	lea    rsi,[rip+0x2a65]        # 406090 <getopt_long_only@@Base+0x1010>
  40362b:	xor    eax,eax
  40362d:	mov    edi,0x1
  403632:	call   402550 <__printf_chk@plt>
  403637:	mov    rax,QWORD PTR [rsp+0x28]
  40363c:	xor    rax,QWORD PTR fs:0x28
  403645:	jne    40370c <Mat_VarReadNextInfo@plt+0x10ec>
  40364b:	add    rsp,0x38
  40364f:	pop    rbx
  403650:	pop    rbp
  403651:	pop    r12
  403653:	pop    r13
  403655:	pop    r14
  403657:	pop    r15
  403659:	ret    
  40365a:	nop    WORD PTR [rax+rax*1+0x0]
  403660:	lea    r9,[rip+0x29bd]        # 406024 <getopt_long_only@@Base+0xfa4>
  403667:	lea    r8,[rip+0x29bc]        # 40602a <getopt_long_only@@Base+0xfaa>
  40366e:	lea    rcx,[rip+0x29bb]        # 406030 <getopt_long_only@@Base+0xfb0>
  403675:	lea    rdx,[rip+0x29b9]        # 406035 <getopt_long_only@@Base+0xfb5>
  40367c:	lea    rsi,[rip+0x2dfd]        # 406480 <getopt_long_only@@Base+0x1400>
  403683:	mov    edi,0x1
  403688:	call   402550 <__printf_chk@plt>
  40368d:	mov    DWORD PTR [rip+0x5b19],0x0        # 4091b0 <getopt_long_only@@Base+0x4130>
  403697:	jmp    403432 <Mat_VarReadNextInfo@plt+0xe12>
  40369c:	nop    DWORD PTR [rax+0x0]
  4036a0:	mov    rdx,rax
  4036a3:	lea    rsi,[rip+0x29d6]        # 406080 <getopt_long_only@@Base+0x1000>
  4036aa:	mov    edi,0x1
  4036af:	xor    eax,eax
  4036b1:	call   402550 <__printf_chk@plt>
  4036b6:	jmp    403616 <Mat_VarReadNextInfo@plt+0xff6>
  4036bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4036c0:	mov    rdx,rax
  4036c3:	shr    rdx,1
  4036c6:	and    eax,0x1
  4036c9:	or     rdx,rax
  4036cc:	vxorpd xmm0,xmm0,xmm0
  4036d0:	vcvtsi2sd xmm0,xmm0,rdx
  4036d5:	vaddsd xmm0,xmm0,xmm0
  4036d9:	jmp    4035c2 <Mat_VarReadNextInfo@plt+0xfa2>
  4036de:	xchg   ax,ax
  4036e0:	vxorpd xmm0,xmm0,xmm0
  4036e4:	vcvtsi2sd xmm0,xmm0,rax
  4036e9:	lea    rsi,[rip+0x297e]        # 40606e <getopt_long_only@@Base+0xfee>
  4036f0:	mov    edi,0x1
  4036f5:	mov    eax,0x1
  4036fa:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x3266]        # 406968 <getopt_long_only@@Base+0x18e8>
  403702:	call   402550 <__printf_chk@plt>
  403707:	jmp    403616 <Mat_VarReadNextInfo@plt+0xff6>
  40370c:	call   402450 <__stack_chk_fail@plt>
  403711:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40371c:	nop    DWORD PTR [rax+0x0]
  403720:	endbr64 
  403724:	test   rdi,rdi
  403727:	je     403998 <Mat_VarReadNextInfo@plt+0x1378>
  40372d:	push   r15
  40372f:	push   r14
  403731:	push   r13
  403733:	push   r12
  403735:	push   rbp
  403736:	push   rbx
  403737:	sub    rsp,0x18
  40373b:	cmp    DWORD PTR [rdi+0x14],0xf
  40373f:	ja     403978 <Mat_VarReadNextInfo@plt+0x1358>
  403745:	mov    eax,DWORD PTR [rdi+0x14]
  403748:	lea    rdx,[rip+0x2c31]        # 406380 <getopt_long_only@@Base+0x1300>
  40374f:	movsxd rax,DWORD PTR [rdx+rax*4]
  403753:	mov    r14,rdi
  403756:	add    rax,rdx
  403759:	notrack jmp rax
  40375c:	nop    DWORD PTR [rax+0x0]
  403760:	mov    eax,DWORD PTR [rdi+0x8]
  403763:	cmp    eax,0x2
  403766:	je     403a00 <Mat_VarReadNextInfo@plt+0x13e0>
  40376c:	cmp    eax,0x3
  40376f:	je     403ae0 <Mat_VarReadNextInfo@plt+0x14c0>
  403775:	add    rsp,0x18
  403779:	pop    rbx
  40377a:	pop    rbp
  40377b:	pop    r12
  40377d:	pop    r13
  40377f:	pop    r14
  403781:	pop    r15
  403783:	ret    
  403784:	nop    DWORD PTR [rax+0x0]
  403788:	mov    rsi,QWORD PTR [rdi+0x30]
  40378c:	test   rsi,rsi
  40378f:	je     40379f <Mat_VarReadNextInfo@plt+0x117f>
  403791:	lea    rdi,[rip+0x2917]        # 4060af <getopt_long_only@@Base+0x102f>
  403798:	xor    eax,eax
  40379a:	call   402420 <Mat_Message@plt>
  40379f:	mov    esi,DWORD PTR [r14+0x8]
  4037a3:	lea    rdi,[rip+0x2914]        # 4060be <getopt_long_only@@Base+0x103e>
  4037aa:	xor    eax,eax
  4037ac:	call   402420 <Mat_Message@plt>
  4037b1:	mov    edx,DWORD PTR [r14+0x8]
  4037b5:	test   edx,edx
  4037b7:	je     403775 <Mat_VarReadNextInfo@plt+0x1155>
  4037b9:	mov    rsi,QWORD PTR [r14+0x28]
  4037bd:	mov    rbx,QWORD PTR [rsi]
  4037c0:	cmp    edx,0x1
  4037c3:	jle    4037e5 <Mat_VarReadNextInfo@plt+0x11c5>
  4037c5:	sub    edx,0x2
  4037c8:	lea    rax,[rsi+0x8]
  4037cc:	lea    rdx,[rsi+rdx*8+0x10]
  4037d1:	nop    DWORD PTR [rax+0x0]
  4037d8:	imul   rbx,QWORD PTR [rax]
  4037dc:	add    rax,0x8
  4037e0:	cmp    rdx,rax
  4037e3:	jne    4037d8 <Mat_VarReadNextInfo@plt+0x11b8>
  4037e5:	lea    rdi,[rip+0x2906]        # 4060f2 <getopt_long_only@@Base+0x1072>
  4037ec:	xor    eax,eax
  4037ee:	call   402420 <Mat_Message@plt>
  4037f3:	lea    rdi,[rip+0x28f4]        # 4060ee <getopt_long_only@@Base+0x106e>
  4037fa:	xor    eax,eax
  4037fc:	call   402420 <Mat_Message@plt>
  403801:	mov    eax,DWORD PTR [rip+0x5b61]        # 409368 <opterr@@Base+0x14>
  403807:	mov    rbp,QWORD PTR [r14+0x38]
  40380b:	lea    edx,[rax+0x1]
  40380e:	mov    DWORD PTR [rip+0x5b54],edx        # 409368 <opterr@@Base+0x14>
  403814:	test   rbp,rbp
  403817:	je     40383d <Mat_VarReadNextInfo@plt+0x121d>
  403819:	test   rbx,rbx
  40381c:	je     40383d <Mat_VarReadNextInfo@plt+0x121d>
  40381e:	lea    rbx,[rbp+rbx*8+0x0]
  403823:	mov    rdi,QWORD PTR [rbp+0x0]
  403827:	add    rbp,0x8
  40382b:	call   403720 <Mat_VarReadNextInfo@plt+0x1100>
  403830:	cmp    rbp,rbx
  403833:	jne    403823 <Mat_VarReadNextInfo@plt+0x1203>
  403835:	mov    eax,DWORD PTR [rip+0x5b2d]        # 409368 <opterr@@Base+0x14>
  40383b:	dec    eax
  40383d:	mov    DWORD PTR [rip+0x5b25],eax        # 409368 <opterr@@Base+0x14>
  403843:	lea    rdi,[rip+0x28a6]        # 4060f0 <getopt_long_only@@Base+0x1070>
  40384a:	jmp    40397f <Mat_VarReadNextInfo@plt+0x135f>
  40384f:	nop
  403850:	mov    rsi,QWORD PTR [rdi+0x30]
  403854:	test   rsi,rsi
  403857:	je     403867 <Mat_VarReadNextInfo@plt+0x1247>
  403859:	lea    rdi,[rip+0x284f]        # 4060af <getopt_long_only@@Base+0x102f>
  403860:	xor    eax,eax
  403862:	call   402420 <Mat_Message@plt>
  403867:	mov    esi,DWORD PTR [r14+0x8]
  40386b:	lea    rdi,[rip+0x284c]        # 4060be <getopt_long_only@@Base+0x103e>
  403872:	xor    eax,eax
  403874:	call   402420 <Mat_Message@plt>
  403879:	mov    eax,DWORD PTR [r14+0x8]
  40387d:	test   eax,eax
  40387f:	je     403775 <Mat_VarReadNextInfo@plt+0x1155>
  403885:	lea    rdi,[rip+0x2841]        # 4060cd <getopt_long_only@@Base+0x104d>
  40388c:	xor    eax,eax
  40388e:	call   402420 <Mat_Message@plt>
  403893:	mov    rdi,r14
  403896:	call   402330 <Mat_VarGetNumberOfFields@plt>
  40389b:	mov    rdx,QWORD PTR [r14+0x28]
  40389f:	mov    esi,DWORD PTR [r14+0x8]
  4038a3:	movsxd rbp,eax
  4038a6:	mov    rbx,QWORD PTR [rdx]
  4038a9:	cmp    esi,0x1
  4038ac:	jle    4038cd <Mat_VarReadNextInfo@plt+0x12ad>
  4038ae:	sub    esi,0x2
  4038b1:	lea    rax,[rdx+0x8]
  4038b5:	lea    rdx,[rdx+rsi*8+0x10]
  4038ba:	nop    WORD PTR [rax+rax*1+0x0]
  4038c0:	imul   rbx,QWORD PTR [rax]
  4038c4:	add    rax,0x8
  4038c8:	cmp    rdx,rax
  4038cb:	jne    4038c0 <Mat_VarReadNextInfo@plt+0x12a0>
  4038cd:	test   ebp,ebp
  4038cf:	setg   al
  4038d2:	test   rbx,rbx
  4038d5:	jne    4038df <Mat_VarReadNextInfo@plt+0x12bf>
  4038d7:	test   al,al
  4038d9:	jne    4039a0 <Mat_VarReadNextInfo@plt+0x1380>
  4038df:	test   rbx,rbx
  4038e2:	je     403775 <Mat_VarReadNextInfo@plt+0x1155>
  4038e8:	test   al,al
  4038ea:	je     403775 <Mat_VarReadNextInfo@plt+0x1155>
  4038f0:	mov    esi,ebp
  4038f2:	lea    rdi,[rip+0x27ea]        # 4060e3 <getopt_long_only@@Base+0x1063>
  4038f9:	xor    eax,eax
  4038fb:	call   402420 <Mat_Message@plt>
  403900:	mov    edx,DWORD PTR [rip+0x5a62]        # 409368 <opterr@@Base+0x14>
  403906:	lea    eax,[rdx+0x1]
  403909:	mov    DWORD PTR [rip+0x5a59],eax        # 409368 <opterr@@Base+0x14>
  40390f:	mov    rax,QWORD PTR [r14+0x38]
  403913:	test   rax,rax
  403916:	je     403943 <Mat_VarReadNextInfo@plt+0x1323>
  403918:	imul   rbx,rbp
  40391c:	test   rbx,rbx
  40391f:	je     403943 <Mat_VarReadNextInfo@plt+0x1323>
  403921:	mov    rbp,rax
  403924:	lea    rbx,[rax+rbx*8]
  403928:	mov    rdi,QWORD PTR [rbp+0x0]
  40392c:	add    rbp,0x8
  403930:	call   403720 <Mat_VarReadNextInfo@plt+0x1100>
  403935:	cmp    rbx,rbp
  403938:	jne    403928 <Mat_VarReadNextInfo@plt+0x1308>
  40393a:	mov    eax,DWORD PTR [rip+0x5a28]        # 409368 <opterr@@Base+0x14>
  403940:	lea    edx,[rax-0x1]
  403943:	mov    DWORD PTR [rip+0x5a1f],edx        # 409368 <opterr@@Base+0x14>
  403949:	lea    rdi,[rip+0x27a0]        # 4060f0 <getopt_long_only@@Base+0x1070>
  403950:	jmp    40397f <Mat_VarReadNextInfo@plt+0x135f>
  403952:	nop    WORD PTR [rax+rax*1+0x0]
  403958:	mov    esi,DWORD PTR [rip+0x5a1e]        # 40937c <opterr@@Base+0x28>
  40395e:	add    rsp,0x18
  403962:	pop    rbx
  403963:	pop    rbp
  403964:	pop    r12
  403966:	pop    r13
  403968:	pop    r14
  40396a:	pop    r15
  40396c:	jmp    402520 <Mat_VarPrint@plt>
  403971:	nop    DWORD PTR [rax+0x0]
  403978:	lea    rdi,[rip+0x278a]        # 406109 <getopt_long_only@@Base+0x1089>
  40397f:	add    rsp,0x18
  403983:	pop    rbx
  403984:	pop    rbp
  403985:	pop    r12
  403987:	pop    r13
  403989:	pop    r14
  40398b:	xor    eax,eax
  40398d:	pop    r15
  40398f:	jmp    402420 <Mat_Message@plt>
  403994:	nop    DWORD PTR [rax+0x0]
  403998:	ret    
  403999:	nop    DWORD PTR [rax+0x0]
  4039a0:	mov    rdi,r14
  4039a3:	call   4024a0 <Mat_VarGetStructFieldnames@plt>
  4039a8:	mov    r12,rax
  4039ab:	mov    esi,ebp
  4039ad:	lea    rdi,[rip+0x272f]        # 4060e3 <getopt_long_only@@Base+0x1063>
  4039b4:	xor    eax,eax
  4039b6:	call   402420 <Mat_Message@plt>
  4039bb:	mov    eax,DWORD PTR [rip+0x59a7]        # 409368 <opterr@@Base+0x14>
  4039c1:	lea    edx,[rax+0x1]
  4039c4:	mov    DWORD PTR [rip+0x599e],edx        # 409368 <opterr@@Base+0x14>
  4039ca:	test   r12,r12
  4039cd:	je     40383d <Mat_VarReadNextInfo@plt+0x121d>
  4039d3:	lea    r13,[rip+0x26d7]        # 4060b1 <getopt_long_only@@Base+0x1031>
  4039da:	nop    WORD PTR [rax+rax*1+0x0]
  4039e0:	mov    rsi,QWORD PTR [r12+rbx*8]
  4039e4:	mov    rdi,r13
  4039e7:	xor    eax,eax
  4039e9:	inc    rbx
  4039ec:	call   402420 <Mat_Message@plt>
  4039f1:	cmp    ebp,ebx
  4039f3:	jg     4039e0 <Mat_VarReadNextInfo@plt+0x13c0>
  4039f5:	jmp    403835 <Mat_VarReadNextInfo@plt+0x1215>
  4039fa:	nop    WORD PTR [rax+rax*1+0x0]
  403a00:	cmp    QWORD PTR [rdi+0x38],0x0
  403a05:	je     403775 <Mat_VarReadNextInfo@plt+0x1155>
  403a0b:	mov    edi,DWORD PTR [rdi+0xc]
  403a0e:	call   4024f0 <Mat_SizeOf@plt>
  403a13:	mov    ecx,DWORD PTR [r14+0x18]
  403a17:	mov    rbx,rax
  403a1a:	test   ecx,ecx
  403a1c:	je     403c78 <Mat_VarReadNextInfo@plt+0x1658>
  403a22:	mov    rax,QWORD PTR [r14+0x38]
  403a26:	xor    ebp,ebp
  403a28:	mov    r12,QWORD PTR [rax]
  403a2b:	mov    rax,QWORD PTR [rax+0x8]
  403a2f:	mov    QWORD PTR [rsp],rax
  403a33:	mov    rax,QWORD PTR [r14+0x28]
  403a37:	cmp    QWORD PTR [rax],0x0
  403a3b:	je     403775 <Mat_VarReadNextInfo@plt+0x1155>
  403a41:	nop    DWORD PTR [rax+0x0]
  403a48:	xor    r13d,r13d
  403a4b:	cmp    QWORD PTR [rax+0x8],0x0
  403a50:	je     403ab7 <Mat_VarReadNextInfo@plt+0x1497>
  403a52:	nop    WORD PTR [rax+rax*1+0x0]
  403a58:	mov    r15,QWORD PTR [rax]
  403a5b:	mov    edi,DWORD PTR [r14+0xc]
  403a5f:	imul   r15,r13
  403a63:	inc    r13
  403a66:	add    r15,rbp
  403a69:	imul   r15,rbx
  403a6d:	lea    rsi,[r12+r15*1]
  403a71:	call   403290 <Mat_VarReadNextInfo@plt+0xc70>
  403a76:	lea    rsi,[rip+0x261c]        # 406099 <getopt_long_only@@Base+0x1019>
  403a7d:	mov    edi,0x1
  403a82:	xor    eax,eax
  403a84:	call   402550 <__printf_chk@plt>
  403a89:	mov    rax,QWORD PTR [rsp]
  403a8d:	mov    edi,DWORD PTR [r14+0xc]
  403a91:	lea    rsi,[rax+r15*1]
  403a95:	call   403290 <Mat_VarReadNextInfo@plt+0xc70>
  403a9a:	lea    rsi,[rip+0x25fc]        # 40609d <getopt_long_only@@Base+0x101d>
  403aa1:	mov    edi,0x1
  403aa6:	xor    eax,eax
  403aa8:	call   402550 <__printf_chk@plt>
  403aad:	mov    rax,QWORD PTR [r14+0x28]
  403ab1:	cmp    r13,QWORD PTR [rax+0x8]
  403ab5:	jb     403a58 <Mat_VarReadNextInfo@plt+0x1438>
  403ab7:	mov    edi,0xa
  403abc:	call   402380 <putchar@plt>
  403ac1:	mov    rax,QWORD PTR [r14+0x28]
  403ac5:	inc    rbp
  403ac8:	cmp    rbp,QWORD PTR [rax]
  403acb:	jb     403a48 <Mat_VarReadNextInfo@plt+0x1428>
  403ad1:	jmp    403775 <Mat_VarReadNextInfo@plt+0x1155>
  403ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ae0:	cmp    QWORD PTR [rdi+0x38],0x0
  403ae5:	je     403775 <Mat_VarReadNextInfo@plt+0x1155>
  403aeb:	mov    edi,DWORD PTR [rdi+0xc]
  403aee:	call   4024f0 <Mat_SizeOf@plt>
  403af3:	mov    edx,DWORD PTR [r14+0x18]
  403af7:	mov    rbp,rax
  403afa:	test   edx,edx
  403afc:	je     403cec <Mat_VarReadNextInfo@plt+0x16cc>
  403b02:	mov    rax,QWORD PTR [r14+0x38]
  403b06:	mov    r13,QWORD PTR [rax]
  403b09:	mov    rax,QWORD PTR [rax+0x8]
  403b0d:	mov    QWORD PTR [rsp+0x8],rax
  403b12:	mov    rax,QWORD PTR [r14+0x28]
  403b16:	cmp    QWORD PTR [rax+0x10],0x0
  403b1b:	je     403775 <Mat_VarReadNextInfo@plt+0x1155>
  403b21:	mov    QWORD PTR [rsp],0x0
  403b29:	nop    DWORD PTR [rax+0x0]
  403b30:	mov    rsi,QWORD PTR [r14+0x30]
  403b34:	mov    rdx,QWORD PTR [rsp]
  403b38:	xor    eax,eax
  403b3a:	lea    rdi,[rip+0x255f]        # 4060a0 <getopt_long_only@@Base+0x1020>
  403b41:	call   402420 <Mat_Message@plt>
  403b46:	mov    edx,DWORD PTR [rip+0x581c]        # 409368 <opterr@@Base+0x14>
  403b4c:	mov    rax,QWORD PTR [r14+0x28]
  403b50:	lea    esi,[rdx+0x1]
  403b53:	xor    ebx,ebx
  403b55:	cmp    QWORD PTR [rax],0x0
  403b59:	mov    DWORD PTR [rip+0x5809],esi        # 409368 <opterr@@Base+0x14>
  403b5f:	je     403c49 <Mat_VarReadNextInfo@plt+0x1629>
  403b65:	nop    DWORD PTR [rax]
  403b68:	xor    r15d,r15d
  403b6b:	test   esi,esi
  403b6d:	je     403b96 <Mat_VarReadNextInfo@plt+0x1576>
  403b6f:	nop
  403b70:	lea    rsi,[rip+0x24e9]        # 406060 <getopt_long_only@@Base+0xfe0>
  403b77:	mov    edi,0x1
  403b7c:	xor    eax,eax
  403b7e:	call   402550 <__printf_chk@plt>
  403b83:	movsxd rax,DWORD PTR [rip+0x57de]        # 409368 <opterr@@Base+0x14>
  403b8a:	inc    r15
  403b8d:	cmp    r15,rax
  403b90:	jb     403b70 <Mat_VarReadNextInfo@plt+0x1550>
  403b92:	mov    rax,QWORD PTR [r14+0x28]
  403b96:	mov    rsi,rax
  403b99:	mov    rax,QWORD PTR [rax+0x8]
  403b9d:	xor    r15d,r15d
  403ba0:	test   rax,rax
  403ba3:	je     403c15 <Mat_VarReadNextInfo@plt+0x15f5>
  403ba5:	nop    DWORD PTR [rax]
  403ba8:	imul   rax,QWORD PTR [rsp]
  403bad:	mov    edi,DWORD PTR [r14+0xc]
  403bb1:	lea    rdx,[rax+r15*1]
  403bb5:	imul   rdx,QWORD PTR [rsi]
  403bb9:	inc    r15
  403bbc:	add    rdx,rbx
  403bbf:	imul   rdx,rbp
  403bc3:	lea    rsi,[r13+rdx*1+0x0]
  403bc8:	mov    r12,rdx
  403bcb:	call   403290 <Mat_VarReadNextInfo@plt+0xc70>
  403bd0:	lea    rsi,[rip+0x24c2]        # 406099 <getopt_long_only@@Base+0x1019>
  403bd7:	mov    edi,0x1
  403bdc:	xor    eax,eax
  403bde:	call   402550 <__printf_chk@plt>
  403be3:	mov    rax,QWORD PTR [rsp+0x8]
  403be8:	mov    edi,DWORD PTR [r14+0xc]
  403bec:	lea    rsi,[rax+r12*1]
  403bf0:	call   403290 <Mat_VarReadNextInfo@plt+0xc70>
  403bf5:	lea    rsi,[rip+0x24a1]        # 40609d <getopt_long_only@@Base+0x101d>
  403bfc:	mov    edi,0x1
  403c01:	xor    eax,eax
  403c03:	call   402550 <__printf_chk@plt>
  403c08:	mov    rsi,QWORD PTR [r14+0x28]
  403c0c:	mov    rax,QWORD PTR [rsi+0x8]
  403c10:	cmp    rax,r15
  403c13:	ja     403ba8 <Mat_VarReadNextInfo@plt+0x1588>
  403c15:	mov    edi,0xa
  403c1a:	call   402380 <putchar@plt>
  403c1f:	mov    rax,QWORD PTR [r14+0x28]
  403c23:	inc    rbx
  403c26:	cmp    rbx,QWORD PTR [rax]
  403c29:	jae    403c40 <Mat_VarReadNextInfo@plt+0x1620>
  403c2b:	mov    esi,DWORD PTR [rip+0x5737]        # 409368 <opterr@@Base+0x14>
  403c31:	jmp    403b68 <Mat_VarReadNextInfo@plt+0x1548>
  403c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c40:	mov    eax,DWORD PTR [rip+0x5722]        # 409368 <opterr@@Base+0x14>
  403c46:	lea    edx,[rax-0x1]
  403c49:	mov    edi,0xa
  403c4e:	mov    DWORD PTR [rip+0x5714],edx        # 409368 <opterr@@Base+0x14>
  403c54:	call   402380 <putchar@plt>
  403c59:	inc    QWORD PTR [rsp]
  403c5d:	mov    rax,QWORD PTR [r14+0x28]
  403c61:	mov    rcx,QWORD PTR [rsp]
  403c65:	cmp    rcx,QWORD PTR [rax+0x10]
  403c69:	jb     403b30 <Mat_VarReadNextInfo@plt+0x1510>
  403c6f:	jmp    403775 <Mat_VarReadNextInfo@plt+0x1155>
  403c74:	nop    DWORD PTR [rax+0x0]
  403c78:	mov    rax,QWORD PTR [r14+0x28]
  403c7c:	xor    ebp,ebp
  403c7e:	cmp    QWORD PTR [rax],0x0
  403c82:	mov    r12,QWORD PTR [r14+0x38]
  403c86:	je     403775 <Mat_VarReadNextInfo@plt+0x1155>
  403c8c:	nop    DWORD PTR [rax+0x0]
  403c90:	xor    r13d,r13d
  403c93:	cmp    QWORD PTR [rax+0x8],0x0
  403c98:	je     403cd1 <Mat_VarReadNextInfo@plt+0x16b1>
  403c9a:	nop    WORD PTR [rax+rax*1+0x0]
  403ca0:	mov    rsi,QWORD PTR [rax]
  403ca3:	mov    edi,DWORD PTR [r14+0xc]
  403ca7:	imul   rsi,r13
  403cab:	inc    r13
  403cae:	add    rsi,rbp
  403cb1:	imul   rsi,rbx
  403cb5:	add    rsi,r12
  403cb8:	call   403290 <Mat_VarReadNextInfo@plt+0xc70>
  403cbd:	mov    edi,0x20
  403cc2:	call   402380 <putchar@plt>
  403cc7:	mov    rax,QWORD PTR [r14+0x28]
  403ccb:	cmp    r13,QWORD PTR [rax+0x8]
  403ccf:	jb     403ca0 <Mat_VarReadNextInfo@plt+0x1680>
  403cd1:	mov    edi,0xa
  403cd6:	call   402380 <putchar@plt>
  403cdb:	mov    rax,QWORD PTR [r14+0x28]
  403cdf:	inc    rbp
  403ce2:	cmp    rbp,QWORD PTR [rax]
  403ce5:	jb     403c90 <Mat_VarReadNextInfo@plt+0x1670>
  403ce7:	jmp    403775 <Mat_VarReadNextInfo@plt+0x1155>
  403cec:	mov    rax,QWORD PTR [r14+0x28]
  403cf0:	mov    r13,QWORD PTR [r14+0x38]
  403cf4:	cmp    QWORD PTR [rax+0x10],0x0
  403cf9:	je     403775 <Mat_VarReadNextInfo@plt+0x1155>
  403cff:	xor    r12d,r12d
  403d02:	nop    WORD PTR [rax+rax*1+0x0]
  403d08:	mov    rsi,QWORD PTR [r14+0x30]
  403d0c:	mov    rdx,r12
  403d0f:	xor    eax,eax
  403d11:	lea    rdi,[rip+0x2388]        # 4060a0 <getopt_long_only@@Base+0x1020>
  403d18:	call   402420 <Mat_Message@plt>
  403d1d:	mov    esi,DWORD PTR [rip+0x5645]        # 409368 <opterr@@Base+0x14>
  403d23:	mov    rax,QWORD PTR [r14+0x28]
  403d27:	lea    edx,[rsi+0x1]
  403d2a:	xor    ebx,ebx
  403d2c:	cmp    QWORD PTR [rax],0x0
  403d30:	mov    DWORD PTR [rip+0x5632],edx        # 409368 <opterr@@Base+0x14>
  403d36:	je     403df1 <Mat_VarReadNextInfo@plt+0x17d1>
  403d3c:	nop    DWORD PTR [rax+0x0]
  403d40:	xor    r15d,r15d
  403d43:	test   edx,edx
  403d45:	je     403d76 <Mat_VarReadNextInfo@plt+0x1756>
  403d47:	nop    WORD PTR [rax+rax*1+0x0]
  403d50:	lea    rsi,[rip+0x2309]        # 406060 <getopt_long_only@@Base+0xfe0>
  403d57:	mov    edi,0x1
  403d5c:	xor    eax,eax
  403d5e:	call   402550 <__printf_chk@plt>
  403d63:	movsxd rax,DWORD PTR [rip+0x55fe]        # 409368 <opterr@@Base+0x14>
  403d6a:	inc    r15
  403d6d:	cmp    r15,rax
  403d70:	jb     403d50 <Mat_VarReadNextInfo@plt+0x1730>
  403d72:	mov    rax,QWORD PTR [r14+0x28]
  403d76:	mov    rdx,rax
  403d79:	mov    rax,QWORD PTR [rax+0x8]
  403d7d:	xor    r15d,r15d
  403d80:	test   rax,rax
  403d83:	je     403dc1 <Mat_VarReadNextInfo@plt+0x17a1>
  403d85:	nop    DWORD PTR [rax]
  403d88:	imul   rax,r12
  403d8c:	mov    edi,DWORD PTR [r14+0xc]
  403d90:	lea    rsi,[rax+r15*1]
  403d94:	imul   rsi,QWORD PTR [rdx]
  403d98:	inc    r15
  403d9b:	add    rsi,rbx
  403d9e:	imul   rsi,rbp
  403da2:	add    rsi,r13
  403da5:	call   403290 <Mat_VarReadNextInfo@plt+0xc70>
  403daa:	mov    edi,0x20
  403daf:	call   402380 <putchar@plt>
  403db4:	mov    rdx,QWORD PTR [r14+0x28]
  403db8:	mov    rax,QWORD PTR [rdx+0x8]
  403dbc:	cmp    rax,r15
  403dbf:	ja     403d88 <Mat_VarReadNextInfo@plt+0x1768>
  403dc1:	mov    edi,0xa
  403dc6:	call   402380 <putchar@plt>
  403dcb:	mov    rax,QWORD PTR [r14+0x28]
  403dcf:	inc    rbx
  403dd2:	cmp    rbx,QWORD PTR [rax]
  403dd5:	jae    403de8 <Mat_VarReadNextInfo@plt+0x17c8>
  403dd7:	mov    edx,DWORD PTR [rip+0x558b]        # 409368 <opterr@@Base+0x14>
  403ddd:	jmp    403d40 <Mat_VarReadNextInfo@plt+0x1720>
  403de2:	nop    WORD PTR [rax+rax*1+0x0]
  403de8:	mov    eax,DWORD PTR [rip+0x557a]        # 409368 <opterr@@Base+0x14>
  403dee:	lea    esi,[rax-0x1]
  403df1:	mov    edi,0xa
  403df6:	mov    DWORD PTR [rip+0x556c],esi        # 409368 <opterr@@Base+0x14>
  403dfc:	call   402380 <putchar@plt>
  403e01:	mov    rax,QWORD PTR [r14+0x28]
  403e05:	inc    r12
  403e08:	cmp    r12,QWORD PTR [rax+0x10]
  403e0c:	jb     403d08 <Mat_VarReadNextInfo@plt+0x16e8>
  403e12:	jmp    403775 <Mat_VarReadNextInfo@plt+0x1155>
  403e17:	nop    WORD PTR [rax+rax*1+0x0]
  403e20:	push   r13
  403e22:	mov    esi,0x28
  403e27:	xor    r13d,r13d
  403e2a:	push   r12
  403e2c:	mov    r12,rdi
  403e2f:	push   rbp
  403e30:	mov    ebp,0x29
  403e35:	push   rbx
  403e36:	lea    rbx,[rip+0x22d2]        # 40610f <getopt_long_only@@Base+0x108f>
  403e3d:	sub    rsp,0x8
  403e41:	jmp    403e50 <Mat_VarReadNextInfo@plt+0x1830>
  403e43:	nop    DWORD PTR [rax+rax*1+0x0]
  403e48:	movsx  esi,bpl
  403e4c:	movzx  ebp,BYTE PTR [rbx+0x1]
  403e50:	mov    rdi,r12
  403e53:	call   402460 <strchr@plt>
  403e58:	test   rax,rax
  403e5b:	je     403e6a <Mat_VarReadNextInfo@plt+0x184a>
  403e5d:	cmp    rax,r13
  403e60:	jb     403e67 <Mat_VarReadNextInfo@plt+0x1847>
  403e62:	test   r13,r13
  403e65:	jne    403e6a <Mat_VarReadNextInfo@plt+0x184a>
  403e67:	mov    r13,rax
  403e6a:	inc    rbx
  403e6d:	test   bpl,bpl
  403e70:	jne    403e48 <Mat_VarReadNextInfo@plt+0x1828>
  403e72:	test   r13,r13
  403e75:	cmove  r13,r12
  403e79:	add    rsp,0x8
  403e7d:	pop    rbx
  403e7e:	pop    rbp
  403e7f:	pop    r12
  403e81:	mov    rax,r13
  403e84:	pop    r13
  403e86:	ret    
  403e87:	nop    WORD PTR [rax+rax*1+0x0]
  403e90:	push   r15
  403e92:	xor    r15d,r15d
  403e95:	push   r14
  403e97:	xor    r14d,r14d
  403e9a:	push   r13
  403e9c:	mov    r13,r8
  403e9f:	push   r12
  403ea1:	mov    r12,rsi
  403ea4:	push   rbp
  403ea5:	push   rbx
  403ea6:	lea    rbx,[rdi+0x1]
  403eaa:	mov    r11,rbx
  403ead:	sub    rsp,0x28
  403eb1:	mov    QWORD PTR [rsp+0x8],rdx
  403eb6:	mov    QWORD PTR [rsp+0x10],rcx
  403ebb:	jmp    403ee1 <Mat_VarReadNextInfo@plt+0x18c1>
  403ebd:	nop    DWORD PTR [rax]
  403ec0:	cmp    al,0x3a
  403ec2:	je     403f70 <Mat_VarReadNextInfo@plt+0x1950>
  403ec8:	cmp    al,0x29
  403eca:	je     403fc0 <Mat_VarReadNextInfo@plt+0x19a0>
  403ed0:	cmp    al,0x7d
  403ed2:	je     403fc0 <Mat_VarReadNextInfo@plt+0x19a0>
  403ed8:	cmp    rbp,r12
  403edb:	je     403f57 <Mat_VarReadNextInfo@plt+0x1937>
  403edd:	lea    rbx,[rbp+0x1]
  403ee1:	movzx  eax,BYTE PTR [rbx]
  403ee4:	mov    rbp,rbx
  403ee7:	cmp    al,0x2c
  403ee9:	jne    403ec0 <Mat_VarReadNextInfo@plt+0x18a0>
  403eeb:	cmp    r15d,0x2
  403eef:	je     404000 <Mat_VarReadNextInfo@plt+0x19e0>
  403ef5:	cmp    r15d,0x1
  403ef9:	je     404000 <Mat_VarReadNextInfo@plt+0x19e0>
  403eff:	test   r15d,r15d
  403f02:	jne    403f48 <Mat_VarReadNextInfo@plt+0x1928>
  403f04:	mov    BYTE PTR [rbx],0x0
  403f07:	mov    ecx,0x4
  403f0c:	mov    rsi,r11
  403f0f:	lea    rdi,[rip+0x21ff]        # 406115 <getopt_long_only@@Base+0x1095>
  403f16:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403f18:	movsxd rax,r14d
  403f1b:	mov    rsi,QWORD PTR [rsp+0x8]
  403f20:	seta   dl
  403f23:	sbb    dl,0x0
  403f26:	shl    rax,0x2
  403f2a:	lea    r15,[r13+rax*1+0x0]
  403f2f:	lea    rcx,[rsi+rax*1]
  403f33:	test   dl,dl
  403f35:	jne    404150 <Mat_VarReadNextInfo@plt+0x1b30>
  403f3b:	mov    DWORD PTR [rcx],0xffffffff
  403f41:	mov    DWORD PTR [r15],0xffffffff
  403f48:	inc    r14d
  403f4b:	lea    r11,[rbx+0x1]
  403f4f:	xor    r15d,r15d
  403f52:	cmp    rbp,r12
  403f55:	jne    403edd <Mat_VarReadNextInfo@plt+0x18bd>
  403f57:	add    rsp,0x28
  403f5b:	pop    rbx
  403f5c:	pop    rbp
  403f5d:	pop    r12
  403f5f:	pop    r13
  403f61:	pop    r14
  403f63:	pop    r15
  403f65:	ret    
  403f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f70:	mov    BYTE PTR [rbx],0x0
  403f73:	mov    ecx,0x4
  403f78:	mov    rsi,r11
  403f7b:	lea    rdi,[rip+0x2193]        # 406115 <getopt_long_only@@Base+0x1095>
  403f82:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403f84:	seta   al
  403f87:	sbb    al,0x0
  403f89:	test   al,al
  403f8b:	jne    404090 <Mat_VarReadNextInfo@plt+0x1a70>
  403f91:	test   r15d,r15d
  403f94:	jne    404040 <Mat_VarReadNextInfo@plt+0x1a20>
  403f9a:	mov    rdx,QWORD PTR [rsp+0x8]
  403f9f:	movsxd rax,r14d
  403fa2:	mov    DWORD PTR [rdx+rax*4],0xffffffff
  403fa9:	nop    DWORD PTR [rax+0x0]
  403fb0:	inc    r15d
  403fb3:	lea    r11,[rbx+0x1]
  403fb7:	jmp    403ed8 <Mat_VarReadNextInfo@plt+0x18b8>
  403fbc:	nop    DWORD PTR [rax+0x0]
  403fc0:	mov    BYTE PTR [rbx],0x0
  403fc3:	mov    ecx,0x4
  403fc8:	mov    rsi,r11
  403fcb:	lea    rdi,[rip+0x2143]        # 406115 <getopt_long_only@@Base+0x1095>
  403fd2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403fd4:	seta   al
  403fd7:	sbb    al,0x0
  403fd9:	test   al,al
  403fdb:	jne    4040c8 <Mat_VarReadNextInfo@plt+0x1aa8>
  403fe1:	test   r15d,r15d
  403fe4:	jne    404040 <Mat_VarReadNextInfo@plt+0x1a20>
  403fe6:	mov    rdx,QWORD PTR [rsp+0x8]
  403feb:	movsxd rax,r14d
  403fee:	mov    DWORD PTR [rdx+rax*4],0xffffffff
  403ff5:	mov    DWORD PTR [r13+rax*4+0x0],0xffffffff
  403ffe:	jmp    403fb0 <Mat_VarReadNextInfo@plt+0x1990>
  404000:	mov    BYTE PTR [rbx],0x0
  404003:	mov    ecx,0x4
  404008:	mov    rsi,r11
  40400b:	lea    rdi,[rip+0x2103]        # 406115 <getopt_long_only@@Base+0x1095>
  404012:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404014:	movsxd rdx,r14d
  404017:	lea    r15,[r13+rdx*4+0x0]
  40401c:	seta   al
  40401f:	sbb    al,0x0
  404021:	test   al,al
  404023:	jne    4040f8 <Mat_VarReadNextInfo@plt+0x1ad8>
  404029:	mov    DWORD PTR [r15],0xffffffff
  404030:	inc    r14d
  404033:	lea    r11,[rbx+0x1]
  404037:	xor    r15d,r15d
  40403a:	jmp    403f52 <Mat_VarReadNextInfo@plt+0x1932>
  40403f:	nop
  404040:	cmp    r15d,0x1
  404044:	je     40404c <Mat_VarReadNextInfo@plt+0x1a2c>
  404046:	cmp    r15d,0x2
  40404a:	jne    404060 <Mat_VarReadNextInfo@plt+0x1a40>
  40404c:	movsxd rax,r14d
  40404f:	mov    DWORD PTR [r13+rax*4+0x0],0xffffffff
  404058:	jmp    403fb0 <Mat_VarReadNextInfo@plt+0x1990>
  40405d:	nop    DWORD PTR [rax]
  404060:	mov    rax,QWORD PTR [rip+0x4f89]        # 408ff0 <getopt_long_only@@Base+0x3f70>
  404067:	lea    ecx,[r14+0x1]
  40406b:	mov    rdi,QWORD PTR [rax]
  40406e:	lea    rdx,[rip+0x20a4]        # 406119 <getopt_long_only@@Base+0x1099>
  404075:	mov    esi,0x1
  40407a:	xor    eax,eax
  40407c:	call   4025e0 <__fprintf_chk@plt>
  404081:	jmp    403fb0 <Mat_VarReadNextInfo@plt+0x1990>
  404086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404090:	xor    esi,esi
  404092:	mov    edx,0xa
  404097:	mov    rdi,r11
  40409a:	call   4024d0 <strtol@plt>
  40409f:	test   r15d,r15d
  4040a2:	je     404120 <Mat_VarReadNextInfo@plt+0x1b00>
  4040a4:	cmp    r15d,0x1
  4040a8:	je     404180 <Mat_VarReadNextInfo@plt+0x1b60>
  4040ae:	cmp    r15d,0x2
  4040b2:	jne    404060 <Mat_VarReadNextInfo@plt+0x1a40>
  4040b4:	movsxd rdx,r14d
  4040b7:	mov    DWORD PTR [r13+rdx*4+0x0],eax
  4040bc:	jmp    403fb0 <Mat_VarReadNextInfo@plt+0x1990>
  4040c1:	nop    DWORD PTR [rax+0x0]
  4040c8:	xor    esi,esi
  4040ca:	mov    edx,0xa
  4040cf:	mov    rdi,r11
  4040d2:	call   4024d0 <strtol@plt>
  4040d7:	test   r15d,r15d
  4040da:	jne    404138 <Mat_VarReadNextInfo@plt+0x1b18>
  4040dc:	mov    rdi,QWORD PTR [rsp+0x8]
  4040e1:	movsxd rdx,r14d
  4040e4:	lea    ecx,[rax-0x1]
  4040e7:	mov    DWORD PTR [rdi+rdx*4],ecx
  4040ea:	mov    DWORD PTR [r13+rdx*4+0x0],eax
  4040ef:	jmp    403fb0 <Mat_VarReadNextInfo@plt+0x1990>
  4040f4:	nop    DWORD PTR [rax+0x0]
  4040f8:	mov    rdi,r11
  4040fb:	mov    edx,0xa
  404100:	xor    esi,esi
  404102:	call   4024d0 <strtol@plt>
  404107:	mov    DWORD PTR [r15],eax
  40410a:	inc    r14d
  40410d:	lea    r11,[rbx+0x1]
  404111:	xor    r15d,r15d
  404114:	jmp    403f52 <Mat_VarReadNextInfo@plt+0x1932>
  404119:	nop    DWORD PTR [rax+0x0]
  404120:	mov    rdi,QWORD PTR [rsp+0x8]
  404125:	movsxd rdx,r14d
  404128:	dec    eax
  40412a:	mov    DWORD PTR [rdi+rdx*4],eax
  40412d:	jmp    403fb0 <Mat_VarReadNextInfo@plt+0x1990>
  404132:	nop    WORD PTR [rax+rax*1+0x0]
  404138:	cmp    r15d,0x1
  40413c:	jne    4040ae <Mat_VarReadNextInfo@plt+0x1a8e>
  404142:	jmp    4040b4 <Mat_VarReadNextInfo@plt+0x1a94>
  404147:	nop    WORD PTR [rax+rax*1+0x0]
  404150:	mov    edx,0xa
  404155:	mov    rdi,r11
  404158:	xor    esi,esi
  40415a:	mov    QWORD PTR [rsp+0x18],rcx
  40415f:	call   4024d0 <strtol@plt>
  404164:	mov    rcx,QWORD PTR [rsp+0x18]
  404169:	lea    edx,[rax-0x1]
  40416c:	mov    DWORD PTR [rcx],edx
  40416e:	inc    r14d
  404171:	mov    DWORD PTR [r15],eax
  404174:	lea    r11,[rbx+0x1]
  404178:	xor    r15d,r15d
  40417b:	jmp    403f52 <Mat_VarReadNextInfo@plt+0x1932>
  404180:	mov    rdi,QWORD PTR [rsp+0x10]
  404185:	movsxd rdx,r14d
  404188:	mov    DWORD PTR [rdi+rdx*4],eax
  40418b:	jmp    403fb0 <Mat_VarReadNextInfo@plt+0x1990>
  404190:	cmp    edi,0x1
  404193:	je     4041a0 <Mat_VarReadNextInfo@plt+0x1b80>
  404195:	xor    eax,eax
  404197:	cmp    edi,r8d
  40419a:	je     4041a0 <Mat_VarReadNextInfo@plt+0x1b80>
  40419c:	ret    
  40419d:	nop    DWORD PTR [rax]
  4041a0:	push   r13
  4041a2:	push   r12
  4041a4:	push   rbp
  4041a5:	push   rbx
  4041a6:	sub    rsp,0x8
  4041aa:	cmp    edi,0x1
  4041ad:	je     404350 <Mat_VarReadNextInfo@plt+0x1d30>
  4041b3:	test   edi,edi
  4041b5:	jle    4044f7 <Mat_VarReadNextInfo@plt+0x1ed7>
  4041bb:	mov    ebx,DWORD PTR [rdx]
  4041bd:	test   ebx,ebx
  4041bf:	jle    404410 <Mat_VarReadNextInfo@plt+0x1df0>
  4041c5:	lea    r11d,[rdi-0x1]
  4041c9:	mov    r10,QWORD PTR [r9]
  4041cc:	mov    eax,0x1
  4041d1:	xor    edi,edi
  4041d3:	jmp    40426c <Mat_VarReadNextInfo@plt+0x1c4c>
  4041d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4041e0:	test   r9d,r9d
  4041e3:	js     4042d0 <Mat_VarReadNextInfo@plt+0x1cb0>
  4041e9:	movsxd rbp,r9d
  4041ec:	cmp    rbp,r8
  4041ef:	ja     40446f <Mat_VarReadNextInfo@plt+0x1e4f>
  4041f5:	movsxd r13,DWORD PTR [rsi+rdi*4]
  4041f9:	mov    rbp,r13
  4041fc:	cmp    r13,r8
  4041ff:	jae    404440 <Mat_VarReadNextInfo@plt+0x1e20>
  404205:	cmp    r9d,r13d
  404208:	jge    404213 <Mat_VarReadNextInfo@plt+0x1bf3>
  40420a:	test   r9d,r9d
  40420d:	jg     404440 <Mat_VarReadNextInfo@plt+0x1e20>
  404213:	lea    r8d,[rbp+0x1]
  404217:	cmp    r9d,r8d
  40421a:	je     4042b0 <Mat_VarReadNextInfo@plt+0x1c90>
  404220:	test   r9d,r9d
  404223:	jle    404340 <Mat_VarReadNextInfo@plt+0x1d20>
  404229:	sub    r9d,ebp
  40422c:	dec    r9d
  40422f:	vxorpd xmm0,xmm0,xmm0
  404233:	vcvtsi2sd xmm0,xmm0,r9d
  404238:	vxorpd xmm1,xmm1,xmm1
  40423c:	vcvtsi2sd xmm1,xmm1,ebx
  404240:	vdivsd xmm0,xmm0,xmm1
  404244:	vroundsd xmm0,xmm0,xmm0,0x9
  40424a:	vcvttsd2si r8d,xmm0
  40424e:	inc    r8d
  404251:	mov    DWORD PTR [rcx+rdi*4],r8d
  404255:	imul   eax,r8d
  404259:	cmp    rdi,r11
  40425c:	je     4042bc <Mat_VarReadNextInfo@plt+0x1c9c>
  40425e:	inc    rdi
  404261:	mov    ebx,DWORD PTR [rdx+rdi*4]
  404264:	test   ebx,ebx
  404266:	jle    404410 <Mat_VarReadNextInfo@plt+0x1df0>
  40426c:	mov    r9d,DWORD PTR [rcx+rdi*4]
  404270:	mov    r12d,edi
  404273:	mov    r8,QWORD PTR [r10+rdi*8]
  404277:	cmp    r9d,0xffffffff
  40427b:	jne    4041e0 <Mat_VarReadNextInfo@plt+0x1bc0>
  404281:	cmp    DWORD PTR [rsi+rdi*4],0xffffffff
  404285:	lea    r9,[rsi+rdi*4]
  404289:	je     404320 <Mat_VarReadNextInfo@plt+0x1d00>
  40428f:	cmp    ebx,0x1
  404292:	je     4042d9 <Mat_VarReadNextInfo@plt+0x1cb9>
  404294:	movsxd r9,DWORD PTR [r9]
  404297:	dec    r8
  40429a:	sub    r8,r9
  40429d:	js     404300 <Mat_VarReadNextInfo@plt+0x1ce0>
  40429f:	vxorpd xmm0,xmm0,xmm0
  4042a3:	vcvtsi2sd xmm0,xmm0,r8
  4042a8:	jmp    404238 <Mat_VarReadNextInfo@plt+0x1c18>
  4042aa:	nop    WORD PTR [rax+rax*1+0x0]
  4042b0:	mov    DWORD PTR [rcx+rdi*4],0x1
  4042b7:	cmp    rdi,r11
  4042ba:	jne    40425e <Mat_VarReadNextInfo@plt+0x1c3e>
  4042bc:	add    rsp,0x8
  4042c0:	pop    rbx
  4042c1:	pop    rbp
  4042c2:	pop    r12
  4042c4:	pop    r13
  4042c6:	ret    
  4042c7:	nop    WORD PTR [rax+rax*1+0x0]
  4042d0:	lea    r9,[rsi+rdi*4]
  4042d4:	cmp    ebx,0x1
  4042d7:	jne    404294 <Mat_VarReadNextInfo@plt+0x1c74>
  4042d9:	mov    DWORD PTR [rcx+rdi*4],r8d
  4042dd:	mov    ebx,DWORD PTR [r9]
  4042e0:	test   ebx,ebx
  4042e2:	jns    404255 <Mat_VarReadNextInfo@plt+0x1c35>
  4042e8:	mov    DWORD PTR [r9],0x0
  4042ef:	imul   eax,DWORD PTR [rcx+rdi*4]
  4042f3:	jmp    404259 <Mat_VarReadNextInfo@plt+0x1c39>
  4042f8:	nop    DWORD PTR [rax+rax*1+0x0]
  404300:	mov    r9,r8
  404303:	shr    r9,1
  404306:	and    r8d,0x1
  40430a:	or     r9,r8
  40430d:	vxorpd xmm0,xmm0,xmm0
  404311:	vcvtsi2sd xmm0,xmm0,r9
  404316:	vaddsd xmm0,xmm0,xmm0
  40431a:	jmp    404238 <Mat_VarReadNextInfo@plt+0x1c18>
  40431f:	nop
  404320:	dec    r8d
  404323:	mov    DWORD PTR [rcx+rdi*4],0x1
  40432a:	mov    DWORD PTR [rsi+rdi*4],r8d
  40432e:	imul   eax,DWORD PTR [rcx+rdi*4]
  404332:	jmp    404259 <Mat_VarReadNextInfo@plt+0x1c39>
  404337:	nop    WORD PTR [rax+rax*1+0x0]
  404340:	imul   eax,r9d
  404344:	jmp    404259 <Mat_VarReadNextInfo@plt+0x1c39>
  404349:	nop    DWORD PTR [rax+0x0]
  404350:	test   r8d,r8d
  404353:	jle    404378 <Mat_VarReadNextInfo@plt+0x1d58>
  404355:	mov    r9,QWORD PTR [r9]
  404358:	dec    r8d
  40435b:	lea    rax,[r9+0x8]
  40435f:	lea    r8,[rax+r8*8]
  404363:	jmp    40436c <Mat_VarReadNextInfo@plt+0x1d4c>
  404365:	nop    DWORD PTR [rax]
  404368:	add    rax,0x8
  40436c:	imul   edi,DWORD PTR [r9]
  404370:	mov    r9,rax
  404373:	cmp    r8,rax
  404376:	jne    404368 <Mat_VarReadNextInfo@plt+0x1d48>
  404378:	mov    r8d,DWORD PTR [rdx]
  40437b:	test   r8d,r8d
  40437e:	jle    404410 <Mat_VarReadNextInfo@plt+0x1df0>
  404384:	mov    eax,DWORD PTR [rcx]
  404386:	cmp    eax,edi
  404388:	jg     4044a2 <Mat_VarReadNextInfo@plt+0x1e82>
  40438e:	mov    r9d,DWORD PTR [rsi]
  404391:	cmp    r9d,edi
  404394:	jge    40447b <Mat_VarReadNextInfo@plt+0x1e5b>
  40439a:	cmp    eax,r9d
  40439d:	jge    4043a7 <Mat_VarReadNextInfo@plt+0x1d87>
  40439f:	test   eax,eax
  4043a1:	jg     40447b <Mat_VarReadNextInfo@plt+0x1e5b>
  4043a7:	cmp    eax,0xffffffff
  4043aa:	mov    r10d,eax
  4043ad:	sete   r11b
  4043b1:	and    r10d,r9d
  4043b4:	cmp    r10d,0xffffffff
  4043b8:	je     404501 <Mat_VarReadNextInfo@plt+0x1ee1>
  4043be:	cmp    r8d,0x1
  4043c2:	jne    4043cd <Mat_VarReadNextInfo@plt+0x1dad>
  4043c4:	test   r11b,r11b
  4043c7:	jne    404512 <Mat_VarReadNextInfo@plt+0x1ef2>
  4043cd:	cmp    eax,0xffffffff
  4043d0:	je     4044c9 <Mat_VarReadNextInfo@plt+0x1ea9>
  4043d6:	test   eax,eax
  4043d8:	jle    4042bc <Mat_VarReadNextInfo@plt+0x1c9c>
  4043de:	sub    eax,r9d
  4043e1:	dec    eax
  4043e3:	vxorpd xmm1,xmm1,xmm1
  4043e7:	vxorpd xmm0,xmm0,xmm0
  4043eb:	vcvtsi2sd xmm1,xmm1,eax
  4043ef:	vcvtsi2sd xmm0,xmm0,r8d
  4043f4:	vdivsd xmm0,xmm1,xmm0
  4043f8:	vroundsd xmm0,xmm0,xmm0,0x9
  4043fe:	vcvttsd2si eax,xmm0
  404402:	inc    eax
  404404:	mov    DWORD PTR [rcx],eax
  404406:	jmp    4042bc <Mat_VarReadNextInfo@plt+0x1c9c>
  40440b:	nop    DWORD PTR [rax+rax*1+0x0]
  404410:	mov    rax,QWORD PTR [rip+0x4bd9]        # 408ff0 <getopt_long_only@@Base+0x3f70>
  404417:	mov    edx,0x17
  40441c:	mov    rcx,QWORD PTR [rax]
  40441f:	mov    esi,0x1
  404424:	lea    rdi,[rip+0x1d08]        # 406133 <getopt_long_only@@Base+0x10b3>
  40442b:	call   4025d0 <fwrite@plt>
  404430:	add    rsp,0x8
  404434:	pop    rbx
  404435:	pop    rbp
  404436:	pop    r12
  404438:	xor    eax,eax
  40443a:	pop    r13
  40443c:	ret    
  40443d:	nop    DWORD PTR [rax]
  404440:	lea    ecx,[r12+0x1]
  404445:	lea    rdx,[rip+0x2084]        # 4064d0 <getopt_long_only@@Base+0x1450>
  40444c:	mov    rax,QWORD PTR [rip+0x4b9d]        # 408ff0 <getopt_long_only@@Base+0x3f70>
  404453:	mov    esi,0x1
  404458:	mov    rdi,QWORD PTR [rax]
  40445b:	xor    eax,eax
  40445d:	call   4025e0 <__fprintf_chk@plt>
  404462:	add    rsp,0x8
  404466:	pop    rbx
  404467:	pop    rbp
  404468:	pop    r12
  40446a:	xor    eax,eax
  40446c:	pop    r13
  40446e:	ret    
  40446f:	lea    ecx,[rdi+0x1]
  404472:	lea    rdx,[rip+0x202f]        # 4064a8 <getopt_long_only@@Base+0x1428>
  404479:	jmp    40444c <Mat_VarReadNextInfo@plt+0x1e2c>
  40447b:	mov    rax,QWORD PTR [rip+0x4b6e]        # 408ff0 <getopt_long_only@@Base+0x3f70>
  404482:	mov    edx,0x12
  404487:	mov    rcx,QWORD PTR [rax]
  40448a:	mov    esi,0x1
  40448f:	lea    rdi,[rip+0x1cc7]        # 40615d <getopt_long_only@@Base+0x10dd>
  404496:	call   4025d0 <fwrite@plt>
  40449b:	xor    eax,eax
  40449d:	jmp    4042bc <Mat_VarReadNextInfo@plt+0x1c9c>
  4044a2:	mov    rax,QWORD PTR [rip+0x4b47]        # 408ff0 <getopt_long_only@@Base+0x3f70>
  4044a9:	mov    edx,0x11
  4044ae:	mov    rcx,QWORD PTR [rax]
  4044b1:	mov    esi,0x1
  4044b6:	lea    rdi,[rip+0x1c8e]        # 40614b <getopt_long_only@@Base+0x10cb>
  4044bd:	call   4025d0 <fwrite@plt>
  4044c2:	xor    eax,eax
  4044c4:	jmp    4042bc <Mat_VarReadNextInfo@plt+0x1c9c>
  4044c9:	mov    DWORD PTR [rcx],edi
  4044cb:	vxorpd xmm0,xmm0,xmm0
  4044cf:	vxorpd xmm1,xmm1,xmm1
  4044d3:	sub    edi,DWORD PTR [rsi]
  4044d5:	lea    eax,[rdi-0x1]
  4044d8:	vcvtsi2sd xmm0,xmm0,eax
  4044dc:	vcvtsi2sd xmm1,xmm1,DWORD PTR [rdx]
  4044e0:	vdivsd xmm0,xmm0,xmm1
  4044e4:	vroundsd xmm0,xmm0,xmm0,0x9
  4044ea:	vcvttsd2si eax,xmm0
  4044ee:	inc    eax
  4044f0:	mov    DWORD PTR [rcx],eax
  4044f2:	jmp    4042bc <Mat_VarReadNextInfo@plt+0x1c9c>
  4044f7:	mov    eax,0x1
  4044fc:	jmp    4042bc <Mat_VarReadNextInfo@plt+0x1c9c>
  404501:	dec    edi
  404503:	mov    DWORD PTR [rcx],0x1
  404509:	mov    DWORD PTR [rsi],edi
  40450b:	mov    eax,DWORD PTR [rcx]
  40450d:	jmp    4042bc <Mat_VarReadNextInfo@plt+0x1c9c>
  404512:	mov    DWORD PTR [rcx],edi
  404514:	mov    eax,edi
  404516:	mov    ebp,DWORD PTR [rsi]
  404518:	test   ebp,ebp
  40451a:	jns    4042bc <Mat_VarReadNextInfo@plt+0x1c9c>
  404520:	mov    DWORD PTR [rsi],0x0
  404526:	mov    eax,DWORD PTR [rcx]
  404528:	jmp    4042bc <Mat_VarReadNextInfo@plt+0x1c9c>
  40452d:	nop    DWORD PTR [rax]
  404530:	push   r13
  404532:	mov    r8d,edx
  404535:	push   r12
  404537:	push   rbp
  404538:	mov    ebp,esi
  40453a:	sub    ebp,edi
  40453c:	mov    eax,ebp
  40453e:	push   rbx
  40453f:	mov    ebx,edx
  404541:	sub    ebx,esi
  404543:	cdq    
  404544:	idiv   ebx
  404546:	test   edx,edx
  404548:	je     4045d9 <Mat_VarReadNextInfo@plt+0x1fb9>
  40454e:	mov    r12d,edx
  404551:	mov    eax,ebx
  404553:	jmp    40455b <Mat_VarReadNextInfo@plt+0x1f3b>
  404555:	nop    DWORD PTR [rax]
  404558:	mov    r12d,edx
  40455b:	cdq    
  40455c:	idiv   r12d
  40455f:	mov    eax,r12d
  404562:	test   edx,edx
  404564:	jne    404558 <Mat_VarReadNextInfo@plt+0x1f38>
  404566:	mov    eax,r8d
  404569:	sub    eax,edi
  40456b:	cdq    
  40456c:	idiv   r12d
  40456f:	test   r12d,r12d
  404572:	jle    4045d2 <Mat_VarReadNextInfo@plt+0x1fb2>
  404574:	movsxd rdx,esi
  404577:	lea    rdx,[rcx+rdx*8]
  40457b:	mov    r13d,esi
  40457e:	add    r12d,esi
  404581:	nop    DWORD PTR [rax+0x0]
  404588:	mov    edi,r13d
  40458b:	test   eax,eax
  40458d:	jle    4045c6 <Mat_VarReadNextInfo@plt+0x1fa6>
  40458f:	mov    r11,QWORD PTR [rdx]
  404592:	xor    r8d,r8d
  404595:	nop    DWORD PTR [rax]
  404598:	mov    r9d,edi
  40459b:	sub    r9d,ebp
  40459e:	lea    r10d,[rdi+rbx*1]
  4045a2:	cmp    esi,edi
  4045a4:	mov    edi,r9d
  4045a7:	cmovg  edi,r10d
  4045ab:	inc    r8d
  4045ae:	movsxd r9,edi
  4045b1:	lea    r10,[rcx+r9*8]
  4045b5:	mov    r9,QWORD PTR [r10]
  4045b8:	mov    QWORD PTR [r10],r11
  4045bb:	mov    QWORD PTR [rdx],r9
  4045be:	mov    r11,r9
  4045c1:	cmp    eax,r8d
  4045c4:	jne    404598 <Mat_VarReadNextInfo@plt+0x1f78>
  4045c6:	inc    r13d
  4045c9:	add    rdx,0x8
  4045cd:	cmp    r12d,r13d
  4045d0:	jne    404588 <Mat_VarReadNextInfo@plt+0x1f68>
  4045d2:	pop    rbx
  4045d3:	pop    rbp
  4045d4:	pop    r12
  4045d6:	pop    r13
  4045d8:	ret    
  4045d9:	mov    r12d,ebx
  4045dc:	jmp    404566 <Mat_VarReadNextInfo@plt+0x1f46>
  4045de:	xchg   ax,ax
  4045e0:	push   r15
  4045e2:	push   r14
  4045e4:	mov    r14d,r9d
  4045e7:	push   r13
  4045e9:	push   r12
  4045eb:	mov    r12,rdx
  4045ee:	push   rbp
  4045ef:	push   rbx
  4045f0:	sub    rsp,0x58
  4045f4:	mov    eax,DWORD PTR [rip+0x4d46]        # 409340 <getopt_long_only@@Base+0x42c0>
  4045fa:	mov    QWORD PTR [rsp+0x30],rcx
  4045ff:	lea    rcx,[rip+0x2376]        # 40697c <getopt_long_only@@Base+0x18fc>
  404606:	mov    QWORD PTR [rsp+0x48],rdi
  40460b:	mov    QWORD PTR [rsp+0x38],rsi
  404610:	mov    DWORD PTR [rsp+0x24],r8d
  404615:	mov    r13,QWORD PTR [rip+0x4d3c]        # 409358 <opterr@@Base+0x4>
  40461c:	mov    QWORD PTR [rsp+0x18],rcx
  404621:	cmp    eax,0x1
  404624:	je     404650 <Mat_VarReadNextInfo@plt+0x2030>
  404626:	lea    rcx,[rip+0x234b]        # 406978 <getopt_long_only@@Base+0x18f8>
  40462d:	mov    QWORD PTR [rsp+0x18],rcx
  404632:	cmp    eax,0x2
  404635:	je     404650 <Mat_VarReadNextInfo@plt+0x2030>
  404637:	test   eax,eax
  404639:	lea    rdx,[rip+0x233d]        # 40697d <getopt_long_only@@Base+0x18fd>
  404640:	lea    rax,[rip+0x1b3f]        # 406186 <getopt_long_only@@Base+0x1106>
  404647:	cmove  rax,rdx
  40464b:	mov    QWORD PTR [rsp+0x18],rax
  404650:	mov    rax,0x409350
  404657:	mov    rsi,0x409350
  40465e:	mov    eax,DWORD PTR [rax]
  404660:	mov    rdi,r13
  404663:	mov    DWORD PTR [rsp+0x44],eax
  404667:	inc    eax
  404669:	mov    DWORD PTR [rsi],eax
  40466b:	mov    esi,0x3d
  404670:	mov    DWORD PTR [rsp+0x40],eax
  404674:	call   402460 <strchr@plt>
  404679:	mov    QWORD PTR [rsp+0x28],rax
  40467e:	test   rax,rax
  404681:	je     4048c0 <Mat_VarReadNextInfo@plt+0x22a0>
  404687:	mov    rbp,rax
  40468a:	inc    rax
  40468d:	mov    QWORD PTR [rsp+0x28],rax
  404692:	sub    rbp,r13
  404695:	mov    r15,QWORD PTR [r12]
  404699:	test   r15,r15
  40469c:	je     40476d <Mat_VarReadNextInfo@plt+0x214d>
  4046a2:	movzx  eax,BYTE PTR [rsp+0x24]
  4046a7:	and    r14d,0x4
  4046ab:	and    eax,0x1
  4046ae:	xor    ebx,ebx
  4046b0:	mov    DWORD PTR [rsp+0x14],0x0
  4046b8:	mov    DWORD PTR [rsp+0xc],0xffffffff
  4046c0:	mov    DWORD PTR [rsp+0x20],r14d
  4046c5:	mov    BYTE PTR [rsp+0x13],al
  4046c9:	jmp    404711 <Mat_VarReadNextInfo@plt+0x20f1>
  4046cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4046d0:	mov    r9d,DWORD PTR [rsp+0x20]
  4046d5:	test   r9d,r9d
  4046d8:	jne    4046f6 <Mat_VarReadNextInfo@plt+0x20d6>
  4046da:	shl    rax,0x5
  4046de:	add    rax,r12
  4046e1:	mov    rdx,rbx
  4046e4:	mov    ecx,DWORD PTR [rax+0x8]
  4046e7:	shl    rdx,0x5
  4046eb:	cmp    DWORD PTR [r12+rdx*1+0x8],ecx
  4046f0:	je     404828 <Mat_VarReadNextInfo@plt+0x2208>
  4046f6:	mov    DWORD PTR [rsp+0x14],0x1
  4046fe:	inc    rbx
  404701:	mov    rax,rbx
  404704:	shl    rax,0x5
  404708:	mov    r15,QWORD PTR [r12+rax*1]
  40470c:	test   r15,r15
  40470f:	je     404758 <Mat_VarReadNextInfo@plt+0x2138>
  404711:	mov    rdx,rbp
  404714:	mov    rsi,r15
  404717:	mov    rdi,r13
  40471a:	mov    r14d,ebx
  40471d:	call   4023b0 <strncmp@plt>
  404722:	test   eax,eax
  404724:	jne    4046fe <Mat_VarReadNextInfo@plt+0x20de>
  404726:	mov    rdi,r15
  404729:	call   402430 <strlen@plt>
  40472e:	cmp    rax,rbp
  404731:	je     4047d5 <Mat_VarReadNextInfo@plt+0x21b5>
  404737:	cmp    rbp,0x1
  40473b:	jne    404744 <Mat_VarReadNextInfo@plt+0x2124>
  40473d:	cmp    BYTE PTR [rsp+0x13],0x0
  404742:	jne    4046fe <Mat_VarReadNextInfo@plt+0x20de>
  404744:	movsxd rax,DWORD PTR [rsp+0xc]
  404749:	cmp    eax,0xffffffff
  40474c:	jne    4046d0 <Mat_VarReadNextInfo@plt+0x20b0>
  40474e:	mov    DWORD PTR [rsp+0xc],r14d
  404753:	jmp    4046fe <Mat_VarReadNextInfo@plt+0x20de>
  404755:	nop    DWORD PTR [rax]
  404758:	mov    r8d,DWORD PTR [rsp+0x14]
  40475d:	test   r8d,r8d
  404760:	jne    404880 <Mat_VarReadNextInfo@plt+0x2260>
  404766:	cmp    DWORD PTR [rsp+0xc],0xffffffff
  40476b:	jne    4047d0 <Mat_VarReadNextInfo@plt+0x21b0>
  40476d:	mov    edx,DWORD PTR [rsp+0x24]
  404771:	test   edx,edx
  404773:	jne    4049dd <Mat_VarReadNextInfo@plt+0x23bd>
  404779:	mov    rax,0x409354
  404780:	mov    eax,DWORD PTR [rax]
  404782:	test   eax,eax
  404784:	je     4047a6 <Mat_VarReadNextInfo@plt+0x2186>
  404786:	mov    rax,QWORD PTR [rsp+0x38]
  40478b:	cmp    BYTE PTR [rax],0x3a
  40478e:	je     4047a6 <Mat_VarReadNextInfo@plt+0x2186>
  404790:	mov    rsi,QWORD PTR [rsp+0x18]
  404795:	mov    rdx,r13
  404798:	lea    rdi,[rip+0x2201]        # 4069a0 <getopt_long_only@@Base+0x1920>
  40479f:	xor    eax,eax
  4047a1:	call   402470 <warnx@plt>
  4047a6:	mov    rax,0x40934c
  4047ad:	mov    DWORD PTR [rax],0x0
  4047b3:	add    rsp,0x58
  4047b7:	mov    eax,0x3f
  4047bc:	pop    rbx
  4047bd:	pop    rbp
  4047be:	pop    r12
  4047c0:	pop    r13
  4047c2:	pop    r14
  4047c4:	pop    r15
  4047c6:	ret    
  4047c7:	nop    WORD PTR [rax+rax*1+0x0]
  4047d0:	mov    r14d,DWORD PTR [rsp+0xc]
  4047d5:	movsxd rax,r14d
  4047d8:	shl    rax,0x5
  4047dc:	add    r12,rax
  4047df:	mov    eax,DWORD PTR [r12+0x8]
  4047e4:	test   eax,eax
  4047e6:	jne    404858 <Mat_VarReadNextInfo@plt+0x2238>
  4047e8:	cmp    QWORD PTR [rsp+0x28],0x0
  4047ee:	jne    4048d0 <Mat_VarReadNextInfo@plt+0x22b0>
  4047f4:	mov    rax,QWORD PTR [rsp+0x30]
  4047f9:	test   rax,rax
  4047fc:	je     404801 <Mat_VarReadNextInfo@plt+0x21e1>
  4047fe:	mov    DWORD PTR [rax],r14d
  404801:	mov    rdx,QWORD PTR [r12+0x10]
  404806:	mov    eax,DWORD PTR [r12+0x18]
  40480b:	test   rdx,rdx
  40480e:	je     404814 <Mat_VarReadNextInfo@plt+0x21f4>
  404810:	mov    DWORD PTR [rdx],eax
  404812:	xor    eax,eax
  404814:	add    rsp,0x58
  404818:	pop    rbx
  404819:	pop    rbp
  40481a:	pop    r12
  40481c:	pop    r13
  40481e:	pop    r14
  404820:	pop    r15
  404822:	ret    
  404823:	nop    DWORD PTR [rax+rax*1+0x0]
  404828:	mov    rcx,QWORD PTR [rax+0x10]
  40482c:	cmp    QWORD PTR [r12+rdx*1+0x10],rcx
  404831:	jne    4046f6 <Mat_VarReadNextInfo@plt+0x20d6>
  404837:	mov    eax,DWORD PTR [rax+0x18]
  40483a:	cmp    DWORD PTR [r12+rdx*1+0x18],eax
  40483f:	mov    eax,0x1
  404844:	cmove  eax,DWORD PTR [rsp+0x14]
  404849:	mov    DWORD PTR [rsp+0x14],eax
  40484d:	jmp    4046fe <Mat_VarReadNextInfo@plt+0x20de>
  404852:	nop    WORD PTR [rax+rax*1+0x0]
  404858:	lea    edx,[rax-0x1]
  40485b:	cmp    edx,0x1
  40485e:	ja     4047f4 <Mat_VarReadNextInfo@plt+0x21d4>
  404860:	mov    rsi,QWORD PTR [rsp+0x28]
  404865:	test   rsi,rsi
  404868:	je     40490f <Mat_VarReadNextInfo@plt+0x22ef>
  40486e:	mov    rax,0x409388
  404875:	mov    QWORD PTR [rax],rsi
  404878:	jmp    4047f4 <Mat_VarReadNextInfo@plt+0x21d4>
  40487d:	nop    DWORD PTR [rax]
  404880:	mov    rax,0x409354
  404887:	mov    edi,DWORD PTR [rax]
  404889:	test   edi,edi
  40488b:	je     4047a6 <Mat_VarReadNextInfo@plt+0x2186>
  404891:	mov    rax,QWORD PTR [rsp+0x38]
  404896:	cmp    BYTE PTR [rax],0x3a
  404899:	je     4047a6 <Mat_VarReadNextInfo@plt+0x2186>
  40489f:	mov    rsi,QWORD PTR [rsp+0x18]
  4048a4:	mov    rcx,r13
  4048a7:	mov    edx,ebp
  4048a9:	lea    rdi,[rip+0x2140]        # 4069f0 <getopt_long_only@@Base+0x1970>
  4048b0:	xor    eax,eax
  4048b2:	call   402470 <warnx@plt>
  4048b7:	jmp    4047a6 <Mat_VarReadNextInfo@plt+0x2186>
  4048bc:	nop    DWORD PTR [rax+0x0]
  4048c0:	mov    rdi,r13
  4048c3:	call   402430 <strlen@plt>
  4048c8:	mov    rbp,rax
  4048cb:	jmp    404695 <Mat_VarReadNextInfo@plt+0x2075>
  4048d0:	mov    rax,0x409354
  4048d7:	mov    esi,DWORD PTR [rax]
  4048d9:	test   esi,esi
  4048db:	je     4048eb <Mat_VarReadNextInfo@plt+0x22cb>
  4048dd:	mov    rax,QWORD PTR [rsp+0x38]
  4048e2:	cmp    BYTE PTR [rax],0x3a
  4048e5:	jne    4049c0 <Mat_VarReadNextInfo@plt+0x23a0>
  4048eb:	cmp    QWORD PTR [r12+0x10],0x0
  4048f1:	jne    4047a6 <Mat_VarReadNextInfo@plt+0x2186>
  4048f7:	mov    rax,0x40934c
  4048fe:	mov    edx,DWORD PTR [r12+0x18]
  404903:	mov    DWORD PTR [rax],edx
  404905:	mov    eax,0x3f
  40490a:	jmp    404814 <Mat_VarReadNextInfo@plt+0x21f4>
  40490f:	cmp    eax,0x1
  404912:	jne    4047f4 <Mat_VarReadNextInfo@plt+0x21d4>
  404918:	mov    eax,DWORD PTR [rsp+0x44]
  40491c:	mov    rcx,0x409350
  404923:	add    eax,0x2
  404926:	mov    DWORD PTR [rcx],eax
  404928:	movsxd rax,DWORD PTR [rsp+0x40]
  40492d:	mov    rcx,QWORD PTR [rsp+0x48]
  404932:	mov    rdx,0x409388
  404939:	mov    rax,QWORD PTR [rcx+rax*8]
  40493d:	mov    QWORD PTR [rdx],rax
  404940:	test   rax,rax
  404943:	jne    4047f4 <Mat_VarReadNextInfo@plt+0x21d4>
  404949:	mov    rax,0x409354
  404950:	mov    ecx,DWORD PTR [rax]
  404952:	test   ecx,ecx
  404954:	je     404989 <Mat_VarReadNextInfo@plt+0x2369>
  404956:	mov    rax,QWORD PTR [rsp+0x38]
  40495b:	cmp    BYTE PTR [rax],0x3a
  40495e:	je     404989 <Mat_VarReadNextInfo@plt+0x2369>
  404960:	mov    rsi,QWORD PTR [rsp+0x18]
  404965:	xor    eax,eax
  404967:	mov    rdx,r13
  40496a:	lea    rdi,[rip+0x20af]        # 406a20 <getopt_long_only@@Base+0x19a0>
  404971:	call   402470 <warnx@plt>
  404976:	mov    rax,0x409350
  40497d:	mov    eax,DWORD PTR [rax]
  40497f:	mov    DWORD PTR [rsp+0xc],eax
  404983:	dec    eax
  404985:	mov    DWORD PTR [rsp+0x40],eax
  404989:	xor    eax,eax
  40498b:	cmp    QWORD PTR [r12+0x10],0x0
  404991:	je     4049f4 <Mat_VarReadNextInfo@plt+0x23d4>
  404993:	mov    rdx,0x40934c
  40499a:	mov    ecx,DWORD PTR [rsp+0x40]
  40499e:	mov    DWORD PTR [rdx],eax
  4049a0:	mov    rax,0x409350
  4049a7:	mov    DWORD PTR [rax],ecx
  4049a9:	mov    rax,QWORD PTR [rsp+0x38]
  4049ae:	cmp    BYTE PTR [rax],0x3a
  4049b1:	setne  al
  4049b4:	movzx  eax,al
  4049b7:	lea    eax,[rax+rax*4+0x3a]
  4049bb:	jmp    404814 <Mat_VarReadNextInfo@plt+0x21f4>
  4049c0:	mov    rsi,QWORD PTR [rsp+0x18]
  4049c5:	mov    rcx,r13
  4049c8:	mov    edx,ebp
  4049ca:	lea    rdi,[rip+0x1fef]        # 4069c0 <getopt_long_only@@Base+0x1940>
  4049d1:	xor    eax,eax
  4049d3:	call   402470 <warnx@plt>
  4049d8:	jmp    4048eb <Mat_VarReadNextInfo@plt+0x22cb>
  4049dd:	mov    rax,0x409350
  4049e4:	mov    ecx,DWORD PTR [rsp+0x44]
  4049e8:	mov    DWORD PTR [rax],ecx
  4049ea:	mov    eax,0xffffffff
  4049ef:	jmp    404814 <Mat_VarReadNextInfo@plt+0x21f4>
  4049f4:	mov    eax,DWORD PTR [r12+0x18]
  4049f9:	jmp    404993 <Mat_VarReadNextInfo@plt+0x2373>
  4049fb:	nop    DWORD PTR [rax+rax*1+0x0]
  404a00:	push   r15
  404a02:	push   r14
  404a04:	push   r13
  404a06:	push   r12
  404a08:	push   rbp
  404a09:	push   rbx
  404a0a:	sub    rsp,0x48
  404a0e:	mov    QWORD PTR [rsp+0x18],rdx
  404a13:	mov    QWORD PTR [rsp+0x28],rcx
  404a18:	mov    QWORD PTR [rsp+0x38],r8
  404a1d:	test   rdx,rdx
  404a20:	je     404c71 <Mat_VarReadNextInfo@plt+0x2651>
  404a26:	mov    r15d,edi
  404a29:	lea    rdi,[rip+0x1f4f]        # 40697f <getopt_long_only@@Base+0x18ff>
  404a30:	mov    r14,rsi
  404a33:	mov    r12d,r9d
  404a36:	call   402340 <getenv@plt>
  404a3b:	mov    QWORD PTR [rsp+0x20],rax
  404a40:	mov    rax,QWORD PTR [rsp+0x18]
  404a45:	movzx  eax,BYTE PTR [rax]
  404a48:	cmp    al,0x2d
  404a4a:	je     404cd0 <Mat_VarReadNextInfo@plt+0x26b0>
  404a50:	cmp    QWORD PTR [rsp+0x20],0x0
  404a56:	jne    404a5c <Mat_VarReadNextInfo@plt+0x243c>
  404a58:	cmp    al,0x2b
  404a5a:	jne    404a68 <Mat_VarReadNextInfo@plt+0x2448>
  404a5c:	and    r12d,0xfffffffe
  404a60:	cmp    al,0x2b
  404a62:	je     404cd4 <Mat_VarReadNextInfo@plt+0x26b4>
  404a68:	mov    rbx,0x409350
  404a6f:	mov    r8,0x409380
  404a76:	mov    esi,DWORD PTR [rbx]
  404a78:	test   esi,esi
  404a7a:	je     404c90 <Mat_VarReadNextInfo@plt+0x2670>
  404a80:	mov    rcx,0x409388
  404a87:	mov    eax,DWORD PTR [r8]
  404a8a:	mov    QWORD PTR [rsp+0x30],rcx
  404a8f:	mov    QWORD PTR [rcx],0x0
  404a96:	test   eax,eax
  404a98:	jne    404cb5 <Mat_VarReadNextInfo@plt+0x2695>
  404a9e:	mov    rdi,r8
  404aa1:	lea    r13,[rip+0x16de]        # 406186 <getopt_long_only@@Base+0x1106>
  404aa8:	mov    r8d,r15d
  404aab:	mov    r15,rdi
  404aae:	test   eax,eax
  404ab0:	je     404b18 <Mat_VarReadNextInfo@plt+0x24f8>
  404ab2:	mov    edx,DWORD PTR [rbx]
  404ab4:	mov    DWORD PTR [r15],0x0
  404abb:	cmp    edx,r8d
  404abe:	jge    404c30 <Mat_VarReadNextInfo@plt+0x2610>
  404ac4:	movsxd rax,edx
  404ac7:	mov    rax,QWORD PTR [r14+rax*8]
  404acb:	cmp    BYTE PTR [rax],0x2d
  404ace:	mov    QWORD PTR [rip+0x4883],rax        # 409358 <opterr@@Base+0x4>
  404ad5:	je     404ce0 <Mat_VarReadNextInfo@plt+0x26c0>
  404adb:	mov    QWORD PTR [rip+0x4876],r13        # 409358 <opterr@@Base+0x4>
  404ae2:	test   r12b,0x2
  404ae6:	jne    404db8 <Mat_VarReadNextInfo@plt+0x2798>
  404aec:	test   r12b,0x1
  404af0:	je     404c71 <Mat_VarReadNextInfo@plt+0x2651>
  404af6:	mov    ebp,DWORD PTR [rip+0x484c]        # 409348 <getopt_long_only@@Base+0x42c8>
  404afc:	cmp    ebp,0xffffffff
  404aff:	je     404d60 <Mat_VarReadNextInfo@plt+0x2740>
  404b05:	mov    eax,DWORD PTR [rip+0x4839]        # 409344 <getopt_long_only@@Base+0x42c4>
  404b0b:	cmp    eax,0xffffffff
  404b0e:	jne    404d70 <Mat_VarReadNextInfo@plt+0x2750>
  404b14:	inc    edx
  404b16:	mov    DWORD PTR [rbx],edx
  404b18:	mov    rcx,QWORD PTR [rip+0x4839]        # 409358 <opterr@@Base+0x4>
  404b1f:	movsx  esi,BYTE PTR [rcx]
  404b22:	test   sil,sil
  404b25:	je     404ab2 <Mat_VarReadNextInfo@plt+0x2492>
  404b27:	mov    r15d,r8d
  404b2a:	cmp    QWORD PTR [rsp+0x28],0x0
  404b30:	je     404b4f <Mat_VarReadNextInfo@plt+0x252f>
  404b32:	movsxd rax,DWORD PTR [rbx]
  404b35:	cmp    QWORD PTR [r14+rax*8],rcx
  404b39:	je     404b4f <Mat_VarReadNextInfo@plt+0x252f>
  404b3b:	cmp    sil,0x2d
  404b3f:	je     404d40 <Mat_VarReadNextInfo@plt+0x2720>
  404b45:	test   r12b,0x4
  404b49:	jne    404e8a <Mat_VarReadNextInfo@plt+0x286a>
  404b4f:	lea    rdx,[rcx+0x1]
  404b53:	movsx  ebp,sil
  404b57:	mov    QWORD PTR [rip+0x47fa],rdx        # 409358 <opterr@@Base+0x4>
  404b5e:	cmp    ebp,0x3a
  404b61:	je     404e37 <Mat_VarReadNextInfo@plt+0x2817>
  404b67:	cmp    ebp,0x2d
  404b6a:	je     404f77 <Mat_VarReadNextInfo@plt+0x2957>
  404b70:	mov    rdi,QWORD PTR [rsp+0x18]
  404b75:	mov    esi,ebp
  404b77:	mov    QWORD PTR [rsp+0x10],rdx
  404b7c:	mov    QWORD PTR [rsp+0x8],rcx
  404b81:	call   402460 <strchr@plt>
  404b86:	test   rax,rax
  404b89:	mov    rcx,QWORD PTR [rsp+0x8]
  404b8e:	mov    rdx,QWORD PTR [rsp+0x10]
  404b93:	je     404e37 <Mat_VarReadNextInfo@plt+0x2817>
  404b99:	cmp    QWORD PTR [rsp+0x28],0x0
  404b9f:	movzx  esi,BYTE PTR [rax+0x1]
  404ba3:	je     404e1c <Mat_VarReadNextInfo@plt+0x27fc>
  404ba9:	cmp    ebp,0x57
  404bac:	jne    404e1c <Mat_VarReadNextInfo@plt+0x27fc>
  404bb2:	cmp    sil,0x3b
  404bb6:	jne    404e1c <Mat_VarReadNextInfo@plt+0x27fc>
  404bbc:	cmp    BYTE PTR [rcx+0x1],0x0
  404bc0:	jne    404f30 <Mat_VarReadNextInfo@plt+0x2910>
  404bc6:	mov    eax,DWORD PTR [rbx]
  404bc8:	inc    eax
  404bca:	mov    DWORD PTR [rbx],eax
  404bcc:	cmp    eax,r15d
  404bcf:	jl     404f23 <Mat_VarReadNextInfo@plt+0x2903>
  404bd5:	lea    rax,[rip+0x15aa]        # 406186 <getopt_long_only@@Base+0x1106>
  404bdc:	mov    QWORD PTR [rip+0x4775],rax        # 409358 <opterr@@Base+0x4>
  404be3:	mov    rax,0x409354
  404bea:	mov    edx,DWORD PTR [rax]
  404bec:	test   edx,edx
  404bee:	je     404c0d <Mat_VarReadNextInfo@plt+0x25ed>
  404bf0:	mov    rax,QWORD PTR [rsp+0x18]
  404bf5:	cmp    BYTE PTR [rax],0x3a
  404bf8:	je     404c0d <Mat_VarReadNextInfo@plt+0x25ed>
  404bfa:	mov    esi,0x57
  404bff:	lea    rdi,[rip+0x1e9a]        # 406aa0 <getopt_long_only@@Base+0x1a20>
  404c06:	xor    eax,eax
  404c08:	call   402470 <warnx@plt>
  404c0d:	mov    rax,0x40934c
  404c14:	mov    DWORD PTR [rax],0x57
  404c1a:	mov    rax,QWORD PTR [rsp+0x18]
  404c1f:	cmp    BYTE PTR [rax],0x3a
  404c22:	je     404fff <Mat_VarReadNextInfo@plt+0x29df>
  404c28:	mov    ebp,0x3f
  404c2d:	jmp    404c76 <Mat_VarReadNextInfo@plt+0x2656>
  404c2f:	nop
  404c30:	mov    ebp,DWORD PTR [rip+0x470e]        # 409344 <getopt_long_only@@Base+0x42c4>
  404c36:	lea    rax,[rip+0x1549]        # 406186 <getopt_long_only@@Base+0x1106>
  404c3d:	mov    QWORD PTR [rip+0x4714],rax        # 409358 <opterr@@Base+0x4>
  404c44:	mov    r12d,DWORD PTR [rip+0x46fd]        # 409348 <getopt_long_only@@Base+0x42c8>
  404c4b:	cmp    ebp,0xffffffff
  404c4e:	jne    404dd0 <Mat_VarReadNextInfo@plt+0x27b0>
  404c54:	cmp    r12d,0xffffffff
  404c58:	je     404c5d <Mat_VarReadNextInfo@plt+0x263d>
  404c5a:	mov    DWORD PTR [rbx],r12d
  404c5d:	mov    DWORD PTR [rip+0x46dd],0xffffffff        # 409344 <getopt_long_only@@Base+0x42c4>
  404c67:	mov    DWORD PTR [rip+0x46d7],0xffffffff        # 409348 <getopt_long_only@@Base+0x42c8>
  404c71:	mov    ebp,0xffffffff
  404c76:	add    rsp,0x48
  404c7a:	pop    rbx
  404c7b:	mov    eax,ebp
  404c7d:	pop    rbp
  404c7e:	pop    r12
  404c80:	pop    r13
  404c82:	pop    r14
  404c84:	pop    r15
  404c86:	ret    
  404c87:	nop    WORD PTR [rax+rax*1+0x0]
  404c90:	mov    rax,0x409388
  404c97:	mov    DWORD PTR [r8],0x1
  404c9e:	mov    DWORD PTR [rbx],0x1
  404ca4:	mov    QWORD PTR [rsp+0x30],rax
  404ca9:	mov    QWORD PTR [rax],0x0
  404cb0:	mov    eax,0x1
  404cb5:	mov    DWORD PTR [rip+0x4685],0xffffffff        # 409344 <getopt_long_only@@Base+0x42c4>
  404cbf:	mov    DWORD PTR [rip+0x467f],0xffffffff        # 409348 <getopt_long_only@@Base+0x42c8>
  404cc9:	jmp    404a9e <Mat_VarReadNextInfo@plt+0x247e>
  404cce:	xchg   ax,ax
  404cd0:	or     r12d,0x2
  404cd4:	inc    QWORD PTR [rsp+0x18]
  404cd9:	jmp    404a68 <Mat_VarReadNextInfo@plt+0x2448>
  404cde:	xchg   ax,ax
  404ce0:	movsx  esi,BYTE PTR [rax+0x1]
  404ce4:	test   sil,sil
  404ce7:	je     404adb <Mat_VarReadNextInfo@plt+0x24bb>
  404ced:	mov    ebp,DWORD PTR [rip+0x4655]        # 409348 <getopt_long_only@@Base+0x42c8>
  404cf3:	mov    r15d,r8d
  404cf6:	cmp    ebp,0xffffffff
  404cf9:	je     404d08 <Mat_VarReadNextInfo@plt+0x26e8>
  404cfb:	cmp    DWORD PTR [rip+0x4642],0xffffffff        # 409344 <getopt_long_only@@Base+0x42c4>
  404d02:	je     404f18 <Mat_VarReadNextInfo@plt+0x28f8>
  404d08:	lea    rcx,[rax+0x1]
  404d0c:	mov    QWORD PTR [rip+0x4645],rcx        # 409358 <opterr@@Base+0x4>
  404d13:	cmp    sil,0x2d
  404d17:	jne    404b2a <Mat_VarReadNextInfo@plt+0x250a>
  404d1d:	cmp    BYTE PTR [rax+0x2],0x0
  404d21:	je     405009 <Mat_VarReadNextInfo@plt+0x29e9>
  404d27:	cmp    QWORD PTR [rsp+0x28],0x0
  404d2d:	je     404f6c <Mat_VarReadNextInfo@plt+0x294c>
  404d33:	movsxd rax,DWORD PTR [rbx]
  404d36:	cmp    rcx,QWORD PTR [r14+rax*8]
  404d3a:	je     404b4f <Mat_VarReadNextInfo@plt+0x252f>
  404d40:	inc    rcx
  404d43:	mov    QWORD PTR [rip+0x460e],rcx        # 409358 <opterr@@Base+0x4>
  404d4a:	mov    DWORD PTR [rip+0x45ec],0x1        # 409340 <getopt_long_only@@Base+0x42c0>
  404d54:	xor    r8d,r8d
  404d57:	jmp    404eb1 <Mat_VarReadNextInfo@plt+0x2891>
  404d5c:	nop    DWORD PTR [rax+0x0]
  404d60:	mov    DWORD PTR [rip+0x45e2],edx        # 409348 <getopt_long_only@@Base+0x42c8>
  404d66:	inc    edx
  404d68:	mov    DWORD PTR [rbx],edx
  404d6a:	jmp    404b18 <Mat_VarReadNextInfo@plt+0x24f8>
  404d6f:	nop
  404d70:	mov    esi,eax
  404d72:	mov    edi,ebp
  404d74:	mov    rcx,r14
  404d77:	mov    DWORD PTR [rsp+0x10],r8d
  404d7c:	mov    DWORD PTR [rsp+0x8],eax
  404d80:	call   404530 <Mat_VarReadNextInfo@plt+0x1f10>
  404d85:	mov    edx,DWORD PTR [rbx]
  404d87:	mov    eax,DWORD PTR [rsp+0x8]
  404d8b:	mov    edi,edx
  404d8d:	sub    eax,ebp
  404d8f:	sub    edi,eax
  404d91:	inc    edx
  404d93:	mov    DWORD PTR [rip+0x45af],edi        # 409348 <getopt_long_only@@Base+0x42c8>
  404d99:	mov    DWORD PTR [rip+0x45a1],0xffffffff        # 409344 <getopt_long_only@@Base+0x42c4>
  404da3:	mov    eax,DWORD PTR [r15]
  404da6:	mov    DWORD PTR [rbx],edx
  404da8:	mov    r8d,DWORD PTR [rsp+0x10]
  404dad:	jmp    404aae <Mat_VarReadNextInfo@plt+0x248e>
  404db2:	nop    WORD PTR [rax+rax*1+0x0]
  404db8:	mov    rdi,QWORD PTR [rsp+0x30]
  404dbd:	inc    edx
  404dbf:	mov    DWORD PTR [rbx],edx
  404dc1:	mov    QWORD PTR [rdi],rax
  404dc4:	mov    ebp,0x1
  404dc9:	jmp    404c76 <Mat_VarReadNextInfo@plt+0x2656>
  404dce:	xchg   ax,ax
  404dd0:	mov    esi,ebp
  404dd2:	mov    rcx,r14
  404dd5:	mov    edi,r12d
  404dd8:	sub    ebp,r12d
  404ddb:	call   404530 <Mat_VarReadNextInfo@plt+0x1f10>
  404de0:	sub    DWORD PTR [rbx],ebp
  404de2:	jmp    404c5d <Mat_VarReadNextInfo@plt+0x263d>
  404de7:	mov    rdi,QWORD PTR [rsp+0x18]
  404dec:	mov    esi,0x2d
  404df1:	mov    QWORD PTR [rsp+0x10],rdx
  404df6:	mov    QWORD PTR [rsp+0x8],rcx
  404dfb:	call   402460 <strchr@plt>
  404e00:	test   rax,rax
  404e03:	mov    rcx,QWORD PTR [rsp+0x8]
  404e08:	mov    rdx,QWORD PTR [rsp+0x10]
  404e0d:	je     404c71 <Mat_VarReadNextInfo@plt+0x2651>
  404e13:	movzx  esi,BYTE PTR [rax+0x1]
  404e17:	mov    ebp,0x2d
  404e1c:	cmp    sil,0x3a
  404e20:	je     404ee5 <Mat_VarReadNextInfo@plt+0x28c5>
  404e26:	cmp    BYTE PTR [rcx+0x1],0x0
  404e2a:	jne    404c76 <Mat_VarReadNextInfo@plt+0x2656>
  404e30:	inc    DWORD PTR [rbx]
  404e32:	jmp    404c76 <Mat_VarReadNextInfo@plt+0x2656>
  404e37:	cmp    BYTE PTR [rcx+0x1],0x0
  404e3b:	jne    404e3f <Mat_VarReadNextInfo@plt+0x281f>
  404e3d:	inc    DWORD PTR [rbx]
  404e3f:	mov    rax,0x409354
  404e46:	mov    ecx,DWORD PTR [rax]
  404e48:	test   ecx,ecx
  404e4a:	je     404e77 <Mat_VarReadNextInfo@plt+0x2857>
  404e4c:	mov    rax,QWORD PTR [rsp+0x18]
  404e51:	cmp    BYTE PTR [rax],0x3a
  404e54:	je     404e77 <Mat_VarReadNextInfo@plt+0x2857>
  404e56:	cmp    QWORD PTR [rsp+0x20],0x0
  404e5c:	lea    rax,[rip+0x1bed]        # 406a50 <getopt_long_only@@Base+0x19d0>
  404e63:	lea    rdi,[rip+0x1c06]        # 406a70 <getopt_long_only@@Base+0x19f0>
  404e6a:	cmove  rdi,rax
  404e6e:	mov    esi,ebp
  404e70:	xor    eax,eax
  404e72:	call   402470 <warnx@plt>
  404e77:	mov    rax,0x40934c
  404e7e:	mov    DWORD PTR [rax],ebp
  404e80:	mov    ebp,0x3f
  404e85:	jmp    404c76 <Mat_VarReadNextInfo@plt+0x2656>
  404e8a:	mov    DWORD PTR [rip+0x44ac],0x0        # 409340 <getopt_long_only@@Base+0x42c0>
  404e94:	xor    r8d,r8d
  404e97:	cmp    sil,0x3a
  404e9b:	je     404eb1 <Mat_VarReadNextInfo@plt+0x2891>
  404e9d:	mov    rdi,QWORD PTR [rsp+0x18]
  404ea2:	call   402460 <strchr@plt>
  404ea7:	xor    r8d,r8d
  404eaa:	test   rax,rax
  404ead:	setne  r8b
  404eb1:	mov    rcx,QWORD PTR [rsp+0x38]
  404eb6:	mov    rdx,QWORD PTR [rsp+0x28]
  404ebb:	mov    rsi,QWORD PTR [rsp+0x18]
  404ec0:	mov    r9d,r12d
  404ec3:	mov    rdi,r14
  404ec6:	call   4045e0 <Mat_VarReadNextInfo@plt+0x1fc0>
  404ecb:	mov    ebp,eax
  404ecd:	cmp    eax,0xffffffff
  404ed0:	jne    404f59 <Mat_VarReadNextInfo@plt+0x2939>
  404ed6:	mov    rcx,QWORD PTR [rip+0x447b]        # 409358 <opterr@@Base+0x4>
  404edd:	movzx  esi,BYTE PTR [rcx]
  404ee0:	jmp    404b4f <Mat_VarReadNextInfo@plt+0x252f>
  404ee5:	mov    r10,QWORD PTR [rsp+0x30]
  404eea:	mov    edi,DWORD PTR [rbx]
  404eec:	mov    QWORD PTR [r10],0x0
  404ef3:	lea    esi,[rdi+0x1]
  404ef6:	cmp    BYTE PTR [rcx+0x1],0x0
  404efa:	je     404f8b <Mat_VarReadNextInfo@plt+0x296b>
  404f00:	mov    QWORD PTR [r10],rdx
  404f03:	lea    rax,[rip+0x127c]        # 406186 <getopt_long_only@@Base+0x1106>
  404f0a:	mov    QWORD PTR [rip+0x4447],rax        # 409358 <opterr@@Base+0x4>
  404f11:	mov    DWORD PTR [rbx],esi
  404f13:	jmp    404c76 <Mat_VarReadNextInfo@plt+0x2656>
  404f18:	mov    DWORD PTR [rip+0x4426],edx        # 409344 <getopt_long_only@@Base+0x42c4>
  404f1e:	jmp    404d08 <Mat_VarReadNextInfo@plt+0x26e8>
  404f23:	cdqe   
  404f25:	mov    rax,QWORD PTR [r14+rax*8]
  404f29:	mov    QWORD PTR [rip+0x4428],rax        # 409358 <opterr@@Base+0x4>
  404f30:	mov    rcx,QWORD PTR [rsp+0x38]
  404f35:	mov    rdx,QWORD PTR [rsp+0x28]
  404f3a:	mov    rsi,QWORD PTR [rsp+0x18]
  404f3f:	mov    r9d,r12d
  404f42:	xor    r8d,r8d
  404f45:	mov    rdi,r14
  404f48:	mov    DWORD PTR [rip+0x43ee],0x2        # 409340 <getopt_long_only@@Base+0x42c0>
  404f52:	call   4045e0 <Mat_VarReadNextInfo@plt+0x1fc0>
  404f57:	mov    ebp,eax
  404f59:	lea    rax,[rip+0x1226]        # 406186 <getopt_long_only@@Base+0x1106>
  404f60:	mov    QWORD PTR [rip+0x43f1],rax        # 409358 <opterr@@Base+0x4>
  404f67:	jmp    404c76 <Mat_VarReadNextInfo@plt+0x2656>
  404f6c:	lea    rdx,[rax+0x2]
  404f70:	mov    QWORD PTR [rip+0x43e1],rdx        # 409358 <opterr@@Base+0x4>
  404f77:	cmp    BYTE PTR [rcx+0x1],0x0
  404f7b:	je     404de7 <Mat_VarReadNextInfo@plt+0x27c7>
  404f81:	mov    ebp,0x2d
  404f86:	jmp    404e3f <Mat_VarReadNextInfo@plt+0x281f>
  404f8b:	cmp    BYTE PTR [rax+0x2],0x3a
  404f8f:	je     404f03 <Mat_VarReadNextInfo@plt+0x28e3>
  404f95:	mov    DWORD PTR [rbx],esi
  404f97:	cmp    r15d,esi
  404f9a:	jle    404fb3 <Mat_VarReadNextInfo@plt+0x2993>
  404f9c:	movsxd rsi,esi
  404f9f:	mov    rax,QWORD PTR [r14+rsi*8]
  404fa3:	mov    rcx,QWORD PTR [rsp+0x30]
  404fa8:	lea    esi,[rdi+0x2]
  404fab:	mov    QWORD PTR [rcx],rax
  404fae:	jmp    404f03 <Mat_VarReadNextInfo@plt+0x28e3>
  404fb3:	lea    rax,[rip+0x11cc]        # 406186 <getopt_long_only@@Base+0x1106>
  404fba:	mov    QWORD PTR [rip+0x4397],rax        # 409358 <opterr@@Base+0x4>
  404fc1:	mov    rax,0x409354
  404fc8:	mov    eax,DWORD PTR [rax]
  404fca:	test   eax,eax
  404fcc:	je     404fe8 <Mat_VarReadNextInfo@plt+0x29c8>
  404fce:	mov    rax,QWORD PTR [rsp+0x18]
  404fd3:	cmp    BYTE PTR [rax],0x3a
  404fd6:	je     404fe8 <Mat_VarReadNextInfo@plt+0x29c8>
  404fd8:	mov    esi,ebp
  404fda:	lea    rdi,[rip+0x1abf]        # 406aa0 <getopt_long_only@@Base+0x1a20>
  404fe1:	xor    eax,eax
  404fe3:	call   402470 <warnx@plt>
  404fe8:	mov    rax,0x40934c
  404fef:	mov    DWORD PTR [rax],ebp
  404ff1:	mov    rax,QWORD PTR [rsp+0x18]
  404ff6:	cmp    BYTE PTR [rax],0x3a
  404ff9:	jne    404c28 <Mat_VarReadNextInfo@plt+0x2608>
  404fff:	mov    ebp,0x3a
  405004:	jmp    404c76 <Mat_VarReadNextInfo@plt+0x2656>
  405009:	mov    r12d,DWORD PTR [rip+0x4334]        # 409344 <getopt_long_only@@Base+0x42c4>
  405010:	inc    edx
  405012:	lea    rax,[rip+0x116d]        # 406186 <getopt_long_only@@Base+0x1106>
  405019:	mov    DWORD PTR [rbx],edx
  40501b:	mov    QWORD PTR [rip+0x4336],rax        # 409358 <opterr@@Base+0x4>
  405022:	cmp    r12d,0xffffffff
  405026:	je     404c5d <Mat_VarReadNextInfo@plt+0x263d>
  40502c:	mov    rcx,r14
  40502f:	mov    esi,r12d
  405032:	mov    edi,ebp
  405034:	call   404530 <Mat_VarReadNextInfo@plt+0x1f10>
  405039:	mov    eax,DWORD PTR [rbx]
  40503b:	add    eax,ebp
  40503d:	sub    eax,r12d
  405040:	mov    DWORD PTR [rbx],eax
  405042:	jmp    404c5d <Mat_VarReadNextInfo@plt+0x263d>
  405047:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405050 <getopt@@Base>:
  405050:	endbr64 
  405054:	xor    r9d,r9d
  405057:	xor    r8d,r8d
  40505a:	xor    ecx,ecx
  40505c:	jmp    404a00 <Mat_VarReadNextInfo@plt+0x23e0>
  405061:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40506c:	nop    DWORD PTR [rax+0x0]

0000000000405070 <getopt_long@@Base>:
  405070:	endbr64 
  405074:	mov    r9d,0x1
  40507a:	jmp    404a00 <Mat_VarReadNextInfo@plt+0x23e0>
  40507f:	nop

0000000000405080 <getopt_long_only@@Base>:
  405080:	endbr64 
  405084:	mov    r9d,0x5
  40508a:	jmp    404a00 <Mat_VarReadNextInfo@plt+0x23e0>
  40508f:	nop
  405090:	endbr64 
  405094:	push   r15
  405096:	lea    r15,[rip+0x3cb3]        # 408d50 <getopt_long_only@@Base+0x3cd0>
  40509d:	push   r14
  40509f:	mov    r14,rdx
  4050a2:	push   r13
  4050a4:	mov    r13,rsi
  4050a7:	push   r12
  4050a9:	mov    r12d,edi
  4050ac:	push   rbp
  4050ad:	lea    rbp,[rip+0x3ca4]        # 408d58 <getopt_long_only@@Base+0x3cd8>
  4050b4:	push   rbx
  4050b5:	sub    rbp,r15
  4050b8:	sub    rsp,0x8
  4050bc:	call   402000 <Mat_VarGetNumberOfFields@plt-0x330>
  4050c1:	sar    rbp,0x3
  4050c5:	je     4050e6 <getopt_long_only@@Base+0x66>
  4050c7:	xor    ebx,ebx
  4050c9:	nop    DWORD PTR [rax+0x0]
  4050d0:	mov    rdx,r14
  4050d3:	mov    rsi,r13
  4050d6:	mov    edi,r12d
  4050d9:	call   QWORD PTR [r15+rbx*8]
  4050dd:	add    rbx,0x1
  4050e1:	cmp    rbp,rbx
  4050e4:	jne    4050d0 <getopt_long_only@@Base+0x50>
  4050e6:	add    rsp,0x8
  4050ea:	pop    rbx
  4050eb:	pop    rbp
  4050ec:	pop    r12
  4050ee:	pop    r13
  4050f0:	pop    r14
  4050f2:	pop    r15
  4050f4:	ret    
  4050f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405100:	endbr64 
  405104:	ret    

Disassembly of section .fini:

0000000000405108 <.fini>:
  405108:	endbr64 
  40510c:	sub    rsp,0x8
  405110:	add    rsp,0x8
  405114:	ret    
