
../repos/eddieantonio-ocreval-3ab279a/synctext/synctext:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x4fd9]        # 405fe8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <free@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x4fe2]        # 406008 <error@@Base+0x2cb8>
  401026:	jmp    QWORD PTR [rip+0x4fe4]        # 406010 <error@@Base+0x2cc0>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <free@plt>:
  401030:	jmp    QWORD PTR [rip+0x4fe2]        # 406018 <free@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <free@plt-0x10>

0000000000401040 <unlink@plt>:
  401040:	jmp    QWORD PTR [rip+0x4fda]        # 406020 <unlink@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <free@plt-0x10>

0000000000401050 <utf8proc_get_property@plt>:
  401050:	jmp    QWORD PTR [rip+0x4fd2]        # 406028 <utf8proc_get_property>
  401056:	push   0x2
  40105b:	jmp    401020 <free@plt-0x10>

0000000000401060 <utf8proc_encode_char@plt>:
  401060:	jmp    QWORD PTR [rip+0x4fca]        # 406030 <utf8proc_encode_char>
  401066:	push   0x3
  40106b:	jmp    401020 <free@plt-0x10>

0000000000401070 <getpid@plt>:
  401070:	jmp    QWORD PTR [rip+0x4fc2]        # 406038 <getpid@GLIBC_2.2.5>
  401076:	push   0x4
  40107b:	jmp    401020 <free@plt-0x10>

0000000000401080 <fclose@plt>:
  401080:	jmp    QWORD PTR [rip+0x4fba]        # 406040 <fclose@GLIBC_2.2.5>
  401086:	push   0x5
  40108b:	jmp    401020 <free@plt-0x10>

0000000000401090 <strlen@plt>:
  401090:	jmp    QWORD PTR [rip+0x4fb2]        # 406048 <strlen@GLIBC_2.2.5>
  401096:	push   0x6
  40109b:	jmp    401020 <free@plt-0x10>

00000000004010a0 <__stack_chk_fail@plt>:
  4010a0:	jmp    QWORD PTR [rip+0x4faa]        # 406050 <__stack_chk_fail@GLIBC_2.4>
  4010a6:	push   0x7
  4010ab:	jmp    401020 <free@plt-0x10>

00000000004010b0 <rewind@plt>:
  4010b0:	jmp    QWORD PTR [rip+0x4fa2]        # 406058 <rewind@GLIBC_2.2.5>
  4010b6:	push   0x8
  4010bb:	jmp    401020 <free@plt-0x10>

00000000004010c0 <utf8proc_tolower@plt>:
  4010c0:	jmp    QWORD PTR [rip+0x4f9a]        # 406060 <utf8proc_tolower>
  4010c6:	push   0x9
  4010cb:	jmp    401020 <free@plt-0x10>

00000000004010d0 <fputs@plt>:
  4010d0:	jmp    QWORD PTR [rip+0x4f92]        # 406068 <fputs@GLIBC_2.2.5>
  4010d6:	push   0xa
  4010db:	jmp    401020 <free@plt-0x10>

00000000004010e0 <fgets@plt>:
  4010e0:	jmp    QWORD PTR [rip+0x4f8a]        # 406070 <fgets@GLIBC_2.2.5>
  4010e6:	push   0xb
  4010eb:	jmp    401020 <free@plt-0x10>

00000000004010f0 <utf8proc_iterate@plt>:
  4010f0:	jmp    QWORD PTR [rip+0x4f82]        # 406078 <utf8proc_iterate>
  4010f6:	push   0xc
  4010fb:	jmp    401020 <free@plt-0x10>

0000000000401100 <calloc@plt>:
  401100:	jmp    QWORD PTR [rip+0x4f7a]        # 406080 <calloc@GLIBC_2.2.5>
  401106:	push   0xd
  40110b:	jmp    401020 <free@plt-0x10>

0000000000401110 <putc@plt>:
  401110:	jmp    QWORD PTR [rip+0x4f72]        # 406088 <putc@GLIBC_2.2.5>
  401116:	push   0xe
  40111b:	jmp    401020 <free@plt-0x10>

0000000000401120 <__sysv_signal@plt>:
  401120:	jmp    QWORD PTR [rip+0x4f6a]        # 406090 <__sysv_signal@GLIBC_2.2.5>
  401126:	push   0xf
  40112b:	jmp    401020 <free@plt-0x10>

0000000000401130 <utf8proc_category@plt>:
  401130:	jmp    QWORD PTR [rip+0x4f62]        # 406098 <utf8proc_category>
  401136:	push   0x10
  40113b:	jmp    401020 <free@plt-0x10>

0000000000401140 <__xstat@plt>:
  401140:	jmp    QWORD PTR [rip+0x4f5a]        # 4060a0 <__xstat@GLIBC_2.2.5>
  401146:	push   0x11
  40114b:	jmp    401020 <free@plt-0x10>

0000000000401150 <__printf_chk@plt>:
  401150:	jmp    QWORD PTR [rip+0x4f52]        # 4060a8 <__printf_chk@GLIBC_2.3.4>
  401156:	push   0x12
  40115b:	jmp    401020 <free@plt-0x10>

0000000000401160 <__fread_chk@plt>:
  401160:	jmp    QWORD PTR [rip+0x4f4a]        # 4060b0 <__fread_chk@GLIBC_2.7>
  401166:	push   0x13
  40116b:	jmp    401020 <free@plt-0x10>

0000000000401170 <fopen@plt>:
  401170:	jmp    QWORD PTR [rip+0x4f42]        # 4060b8 <fopen@GLIBC_2.2.5>
  401176:	push   0x14
  40117b:	jmp    401020 <free@plt-0x10>

0000000000401180 <exit@plt>:
  401180:	jmp    QWORD PTR [rip+0x4f3a]        # 4060c0 <exit@GLIBC_2.2.5>
  401186:	push   0x15
  40118b:	jmp    401020 <free@plt-0x10>

0000000000401190 <fwrite@plt>:
  401190:	jmp    QWORD PTR [rip+0x4f32]        # 4060c8 <fwrite@GLIBC_2.2.5>
  401196:	push   0x16
  40119b:	jmp    401020 <free@plt-0x10>

00000000004011a0 <__fprintf_chk@plt>:
  4011a0:	jmp    QWORD PTR [rip+0x4f2a]        # 4060d0 <__fprintf_chk@GLIBC_2.3.4>
  4011a6:	push   0x17
  4011ab:	jmp    401020 <free@plt-0x10>

00000000004011b0 <utf8proc_errmsg@plt>:
  4011b0:	jmp    QWORD PTR [rip+0x4f22]        # 4060d8 <utf8proc_errmsg>
  4011b6:	push   0x18
  4011bb:	jmp    401020 <free@plt-0x10>

00000000004011c0 <strdup@plt>:
  4011c0:	jmp    QWORD PTR [rip+0x4f1a]        # 4060e0 <strdup@GLIBC_2.2.5>
  4011c6:	push   0x19
  4011cb:	jmp    401020 <free@plt-0x10>

00000000004011d0 <getc@plt>:
  4011d0:	jmp    QWORD PTR [rip+0x4f12]        # 4060e8 <getc@GLIBC_2.2.5>
  4011d6:	push   0x1a
  4011db:	jmp    401020 <free@plt-0x10>

00000000004011e0 <__sprintf_chk@plt>:
  4011e0:	jmp    QWORD PTR [rip+0x4f0a]        # 4060f0 <__sprintf_chk@GLIBC_2.3.4>
  4011e6:	push   0x1b
  4011eb:	jmp    401020 <free@plt-0x10>

Disassembly of section .text:

00000000004011f0 <error@@Base-0x2160>:
  4011f0:	push   r15
  4011f2:	push   r14
  4011f4:	lea    rdx,[rip+0x2e4d]        # 404048 <error@@Base+0xcf8>
  4011fb:	push   r13
  4011fd:	push   r12
  4011ff:	mov    r12,rsi
  401202:	push   rbp
  401203:	push   rbx
  401204:	sub    rsp,0x68
  401208:	mov    rcx,0x406120
  40120f:	mov    DWORD PTR [rsp+0xc],edi
  401213:	lea    rdi,[rsp+0xc]
  401218:	mov    rax,QWORD PTR fs:0x28
  401221:	mov    QWORD PTR [rsp+0x58],rax
  401226:	xor    eax,eax
  401228:	call   4034b0 <error@@Base+0x160>
  40122d:	movsxd rdi,DWORD PTR [rsp+0xc]
  401232:	cmp    edi,0x1
  401235:	jle    401249 <__sprintf_chk@plt+0x69>
  401237:	mov    r15,0x406245
  40123e:	cmp    BYTE PTR [r15],0x0
  401242:	je     401257 <__sprintf_chk@plt+0x77>
  401244:	cmp    edi,0x2
  401247:	je     401257 <__sprintf_chk@plt+0x77>
  401249:	lea    rdi,[rip+0x2dd8]        # 404028 <error@@Base+0xcd8>
  401250:	xor    eax,eax
  401252:	call   403350 <error@@Base>
  401257:	mov    esi,0x20
  40125c:	xor    eax,eax
  40125e:	call   403390 <error@@Base+0x40>
  401263:	mov    esi,DWORD PTR [rsp+0xc]
  401267:	mov    r14,rax
  40126a:	test   esi,esi
  40126c:	jle    4012a4 <__sprintf_chk@plt+0xc4>
  40126e:	mov    r13,0x406110
  401275:	mov    rbp,rax
  401278:	mov    ebx,0x1
  40127d:	nop    DWORD PTR [rax]
  401280:	mov    rsi,QWORD PTR [r12+rbx*8-0x8]
  401285:	xor    eax,eax
  401287:	mov    rdi,rbp
  40128a:	mov    rdx,r13
  40128d:	add    rbp,0x20
  401291:	call   402980 <__sprintf_chk@plt+0x17a0>
  401296:	mov    esi,DWORD PTR [rsp+0xc]
  40129a:	mov    eax,ebx
  40129c:	add    rbx,0x1
  4012a0:	cmp    esi,eax
  4012a2:	jg     401280 <__sprintf_chk@plt+0xa0>
  4012a4:	cmp    BYTE PTR [r15],0x0
  4012a8:	jne    401300 <__sprintf_chk@plt+0x120>
  4012aa:	mov    rax,0x406246
  4012b1:	lea    rbx,[rsp+0x10]
  4012b6:	cmp    BYTE PTR [rax],0x0
  4012b9:	jne    4012c0 <__sprintf_chk@plt+0xe0>
  4012bb:	cmp    esi,0x2
  4012be:	jle    40133d <__sprintf_chk@plt+0x15d>
  4012c0:	mov    rdx,r14
  4012c3:	mov    rdi,rbx
  4012c6:	xor    eax,eax
  4012c8:	call   402350 <__sprintf_chk@plt+0x1170>
  4012cd:	mov    esi,DWORD PTR [rsp+0xc]
  4012d1:	mov    rdx,r14
  4012d4:	mov    rdi,rbx
  4012d7:	xor    eax,eax
  4012d9:	call   401600 <__sprintf_chk@plt+0x420>
  4012de:	mov    esi,DWORD PTR [rsp+0xc]
  4012e2:	mov    rcx,r12
  4012e5:	mov    rdx,r14
  4012e8:	mov    rdi,rbx
  4012eb:	xor    eax,eax
  4012ed:	call   4017a0 <__sprintf_chk@plt+0x5c0>
  4012f2:	xor    eax,eax
  4012f4:	call   401460 <__sprintf_chk@plt+0x280>
  4012f9:	xor    eax,eax
  4012fb:	call   4032f0 <__sprintf_chk@plt+0x2110>
  401300:	lea    rbp,[r14+0x20]
  401304:	lea    rbx,[rsp+0x30]
  401309:	lea    r12,[rsp+0x10]
  40130e:	mov    rdx,r14
  401311:	xor    eax,eax
  401313:	mov    rcx,rbp
  401316:	mov    rsi,rbx
  401319:	mov    rdi,r12
  40131c:	call   4023d0 <__sprintf_chk@plt+0x11f0>
  401321:	mov    rsi,r14
  401324:	mov    rdi,r12
  401327:	xor    eax,eax
  401329:	call   4014a0 <__sprintf_chk@plt+0x2c0>
  40132e:	mov    rsi,rbp
  401331:	mov    rdi,rbx
  401334:	xor    eax,eax
  401336:	call   4014a0 <__sprintf_chk@plt+0x2c0>
  40133b:	jmp    4012f2 <__sprintf_chk@plt+0x112>
  40133d:	mov    rsi,r14
  401340:	mov    rdi,rbx
  401343:	xor    eax,eax
  401345:	call   402590 <__sprintf_chk@plt+0x13b0>
  40134a:	jmp    4012cd <__sprintf_chk@plt+0xed>
  40134c:	nop    DWORD PTR [rax+0x0]
  401350:	endbr64 
  401354:	xor    ebp,ebp
  401356:	mov    r9,rdx
  401359:	pop    rsi
  40135a:	mov    rdx,rsp
  40135d:	and    rsp,0xfffffffffffffff0
  401361:	push   rax
  401362:	push   rsp
  401363:	mov    r8,0x403a00
  40136a:	mov    rcx,0x403990
  401371:	mov    rdi,0x4011f0
  401378:	call   QWORD PTR [rip+0x4c62]        # 405fe0 <error@@Base+0x2c90>
  40137e:	hlt    
  40137f:	nop
  401380:	endbr64 
  401384:	ret    
  401385:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40138f:	nop
  401390:	mov    eax,0x4061a7
  401395:	push   rbp
  401396:	sub    rax,0x4061a0
  40139c:	cmp    rax,0xe
  4013a0:	mov    rbp,rsp
  4013a3:	jbe    4013c0 <__sprintf_chk@plt+0x1e0>
  4013a5:	mov    eax,0x0
  4013aa:	test   rax,rax
  4013ad:	je     4013c0 <__sprintf_chk@plt+0x1e0>
  4013af:	pop    rbp
  4013b0:	mov    edi,0x4061a0
  4013b5:	jmp    rax
  4013b7:	nop    WORD PTR [rax+rax*1+0x0]
  4013c0:	pop    rbp
  4013c1:	ret    
  4013c2:	nop    DWORD PTR [rax+0x0]
  4013c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4013d0:	mov    esi,0x4061a0
  4013d5:	push   rbp
  4013d6:	sub    rsi,0x4061a0
  4013dd:	sar    rsi,0x3
  4013e1:	mov    rbp,rsp
  4013e4:	mov    rax,rsi
  4013e7:	shr    rax,0x3f
  4013eb:	add    rsi,rax
  4013ee:	sar    rsi,1
  4013f1:	je     401408 <__sprintf_chk@plt+0x228>
  4013f3:	mov    eax,0x0
  4013f8:	test   rax,rax
  4013fb:	je     401408 <__sprintf_chk@plt+0x228>
  4013fd:	pop    rbp
  4013fe:	mov    edi,0x4061a0
  401403:	jmp    rax
  401405:	nop    DWORD PTR [rax]
  401408:	pop    rbp
  401409:	ret    
  40140a:	nop    WORD PTR [rax+rax*1+0x0]
  401410:	cmp    BYTE PTR [rip+0x4d89],0x0        # 4061a0 <error@@Base+0x2e50>
  401417:	jne    40142a <__sprintf_chk@plt+0x24a>
  401419:	push   rbp
  40141a:	mov    rbp,rsp
  40141d:	call   401390 <__sprintf_chk@plt+0x1b0>
  401422:	pop    rbp
  401423:	mov    BYTE PTR [rip+0x4d76],0x1        # 4061a0 <error@@Base+0x2e50>
  40142a:	repz ret 
  40142c:	nop    DWORD PTR [rax+0x0]
  401430:	mov    edi,0x405de8
  401435:	cmp    QWORD PTR [rdi],0x0
  401439:	jne    401440 <__sprintf_chk@plt+0x260>
  40143b:	jmp    4013d0 <__sprintf_chk@plt+0x1f0>
  40143d:	nop    DWORD PTR [rax]
  401440:	mov    eax,0x0
  401445:	test   rax,rax
  401448:	je     40143b <__sprintf_chk@plt+0x25b>
  40144a:	push   rbp
  40144b:	mov    rbp,rsp
  40144e:	call   rax
  401450:	pop    rbp
  401451:	jmp    4013d0 <__sprintf_chk@plt+0x1f0>
  401456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401460:	push   rbp
  401461:	push   rbx
  401462:	mov    ebx,0x4f
  401467:	sub    rsp,0x8
  40146b:	mov    rbp,QWORD PTR [rip+0x4b5e]        # 405fd0 <error@@Base+0x2c80>
  401472:	nop    WORD PTR [rax+rax*1+0x0]
  401478:	mov    rsi,QWORD PTR [rbp+0x0]
  40147c:	mov    edi,0x3d
  401481:	call   401110 <putc@plt>
  401486:	sub    bx,0x1
  40148a:	jne    401478 <__sprintf_chk@plt+0x298>
  40148c:	mov    rsi,QWORD PTR [rbp+0x0]
  401490:	add    rsp,0x8
  401494:	mov    edi,0xa
  401499:	pop    rbx
  40149a:	pop    rbp
  40149b:	jmp    401110 <putc@plt>
  4014a0:	push   r15
  4014a2:	push   r14
  4014a4:	push   r13
  4014a6:	push   r12
  4014a8:	mov    r13,rsi
  4014ab:	push   rbp
  4014ac:	push   rbx
  4014ad:	mov    rbx,rdi
  4014b0:	sub    rsp,0x28
  4014b4:	mov    rax,QWORD PTR fs:0x28
  4014bd:	mov    QWORD PTR [rsp+0x18],rax
  4014c2:	xor    eax,eax
  4014c4:	call   401460 <__sprintf_chk@plt+0x280>
  4014c9:	mov    rax,QWORD PTR [rip+0x4b00]        # 405fd0 <error@@Base+0x2c80>
  4014d0:	mov    edi,0xa
  4014d5:	mov    rsi,QWORD PTR [rax]
  4014d8:	call   401110 <putc@plt>
  4014dd:	mov    r15,QWORD PTR [rbx]
  4014e0:	lea    rbx,[rsp+0xf]
  4014e5:	test   r15,r15
  4014e8:	je     4015a3 <__sprintf_chk@plt+0x3c3>
  4014ee:	xchg   ax,ax
  4014f0:	mov    rax,QWORD PTR [r15+0x18]
  4014f4:	test   rax,rax
  4014f7:	je     4015e0 <__sprintf_chk@plt+0x400>
  4014fd:	mov    rdx,QWORD PTR [rax]
  401500:	lea    rsi,[rip+0x2afd]        # 404004 <error@@Base+0xcb4>
  401507:	xor    eax,eax
  401509:	mov    edi,0x1
  40150e:	call   401150 <__printf_chk@plt>
  401513:	mov    rax,QWORD PTR [r15+0x10]
  401517:	mov    r14,QWORD PTR [rax]
  40151a:	cmp    r14,QWORD PTR [rax+0x8]
  40151e:	jg     40157b <__sprintf_chk@plt+0x39b>
  401520:	mov    rbp,0x406244
  401527:	lea    r12,[r14*8+0x0]
  40152f:	nop
  401530:	mov    rax,QWORD PTR [r13+0x10]
  401534:	xor    ecx,ecx
  401536:	mov    rdx,rbx
  401539:	add    r14,0x1
  40153d:	mov    rax,QWORD PTR [rax+r12*1]
  401541:	add    r12,0x8
  401545:	movzx  edi,BYTE PTR [rax+0x10]
  401549:	mov    esi,DWORD PTR [rax+0x14]
  40154c:	xor    eax,eax
  40154e:	and    dil,BYTE PTR [rbp+0x0]
  401552:	movsx  edi,dil
  401556:	call   402db0 <__sprintf_chk@plt+0x1bd0>
  40155b:	lea    rsi,[rip+0x2aa8]        # 40400a <error@@Base+0xcba>
  401562:	xor    eax,eax
  401564:	mov    rdx,rbx
  401567:	mov    edi,0x1
  40156c:	call   401150 <__printf_chk@plt>
  401571:	mov    rax,QWORD PTR [r15+0x10]
  401575:	cmp    QWORD PTR [rax+0x8],r14
  401579:	jge    401530 <__sprintf_chk@plt+0x350>
  40157b:	cmp    QWORD PTR [r15+0x18],0x0
  401580:	je     401596 <__sprintf_chk@plt+0x3b6>
  401582:	mov    rax,QWORD PTR [rip+0x4a47]        # 405fd0 <error@@Base+0x2c80>
  401589:	mov    edi,0x7d
  40158e:	mov    rsi,QWORD PTR [rax]
  401591:	call   401110 <putc@plt>
  401596:	mov    r15,QWORD PTR [r15+0x8]
  40159a:	test   r15,r15
  40159d:	jne    4014f0 <__sprintf_chk@plt+0x310>
  4015a3:	mov    rax,QWORD PTR [rip+0x4a26]        # 405fd0 <error@@Base+0x2c80>
  4015aa:	mov    edi,0xa
  4015af:	mov    rsi,QWORD PTR [rax]
  4015b2:	call   401110 <putc@plt>
  4015b7:	mov    rax,QWORD PTR [rsp+0x18]
  4015bc:	xor    rax,QWORD PTR fs:0x28
  4015c5:	jne    4015f3 <__sprintf_chk@plt+0x413>
  4015c7:	add    rsp,0x28
  4015cb:	pop    rbx
  4015cc:	pop    rbp
  4015cd:	pop    r12
  4015cf:	pop    r13
  4015d1:	pop    r14
  4015d3:	pop    r15
  4015d5:	ret    
  4015d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015e0:	mov    rax,QWORD PTR [r15+0x10]
  4015e4:	mov    r14,QWORD PTR [rax]
  4015e7:	cmp    r14,QWORD PTR [rax+0x8]
  4015eb:	jle    401520 <__sprintf_chk@plt+0x340>
  4015f1:	jmp    401596 <__sprintf_chk@plt+0x3b6>
  4015f3:	call   4010a0 <__stack_chk_fail@plt>
  4015f8:	nop    DWORD PTR [rax+rax*1+0x0]
  401600:	push   r15
  401602:	push   r14
  401604:	movsx  r15,si
  401608:	push   r13
  40160a:	push   r12
  40160c:	mov    r13,rdx
  40160f:	push   rbp
  401610:	push   rbx
  401611:	mov    rbx,rdi
  401614:	sub    rsp,0x38
  401618:	mov    rax,QWORD PTR fs:0x28
  401621:	mov    QWORD PTR [rsp+0x28],rax
  401626:	xor    eax,eax
  401628:	call   401460 <__sprintf_chk@plt+0x280>
  40162d:	mov    rax,QWORD PTR [rip+0x499c]        # 405fd0 <error@@Base+0x2c80>
  401634:	mov    edi,0xa
  401639:	mov    rsi,QWORD PTR [rax]
  40163c:	call   401110 <putc@plt>
  401641:	mov    rbp,QWORD PTR [rbx]
  401644:	mov    QWORD PTR [rsp+0x8],0x0
  40164d:	lea    rbx,[rsp+0x1f]
  401652:	test   rbp,rbp
  401655:	je     401722 <__sprintf_chk@plt+0x542>
  40165b:	nop    DWORD PTR [rax+rax*1+0x0]
  401660:	cmp    QWORD PTR [rbp+0x18],0x0
  401665:	je     401762 <__sprintf_chk@plt+0x582>
  40166b:	mov    r10,QWORD PTR [rbp+0x10]
  40166f:	cmp    QWORD PTR [r10+0x10],0x0
  401674:	jle    401715 <__sprintf_chk@plt+0x535>
  40167a:	mov    r12,0x406244
  401681:	xor    r14d,r14d
  401684:	nop    DWORD PTR [rax+0x0]
  401688:	cmp    BYTE PTR [r12],0x0
  40168d:	je     4016c8 <__sprintf_chk@plt+0x4e8>
  40168f:	xor    edi,edi
  401691:	test   r15,r15
  401694:	lea    rdx,[r13+0x10]
  401698:	mov    rax,r10
  40169b:	jle    4016d0 <__sprintf_chk@plt+0x4f0>
  40169d:	nop    DWORD PTR [rax]
  4016a0:	mov    rsi,r14
  4016a3:	add    rsi,QWORD PTR [rax]
  4016a6:	mov    rcx,QWORD PTR [rdx]
  4016a9:	mov    rcx,QWORD PTR [rcx+rsi*8]
  4016ad:	cmp    BYTE PTR [rcx+0x10],0x0
  4016b1:	jne    401758 <__sprintf_chk@plt+0x578>
  4016b7:	add    rdi,0x1
  4016bb:	add    rdx,0x20
  4016bf:	add    rax,0x18
  4016c3:	cmp    r15,rdi
  4016c6:	jne    4016a0 <__sprintf_chk@plt+0x4c0>
  4016c8:	xor    edi,edi
  4016ca:	nop    WORD PTR [rax+rax*1+0x0]
  4016d0:	mov    rdx,r14
  4016d3:	add    rdx,QWORD PTR [r10]
  4016d6:	mov    rax,QWORD PTR [r13+0x10]
  4016da:	xor    ecx,ecx
  4016dc:	add    r14,0x1
  4016e0:	mov    rax,QWORD PTR [rax+rdx*8]
  4016e4:	mov    rdx,rbx
  4016e7:	mov    esi,DWORD PTR [rax+0x14]
  4016ea:	xor    eax,eax
  4016ec:	call   402db0 <__sprintf_chk@plt+0x1bd0>
  4016f1:	lea    rsi,[rip+0x2912]        # 40400a <error@@Base+0xcba>
  4016f8:	xor    eax,eax
  4016fa:	mov    rdx,rbx
  4016fd:	mov    edi,0x1
  401702:	call   401150 <__printf_chk@plt>
  401707:	mov    r10,QWORD PTR [rbp+0x10]
  40170b:	cmp    QWORD PTR [r10+0x10],r14
  40170f:	jg     401688 <__sprintf_chk@plt+0x4a8>
  401715:	mov    rbp,QWORD PTR [rbp+0x8]
  401719:	test   rbp,rbp
  40171c:	jne    401660 <__sprintf_chk@plt+0x480>
  401722:	mov    rax,QWORD PTR [rip+0x48a7]        # 405fd0 <error@@Base+0x2c80>
  401729:	mov    edi,0xa
  40172e:	mov    rsi,QWORD PTR [rax]
  401731:	call   401110 <putc@plt>
  401736:	mov    rax,QWORD PTR [rsp+0x28]
  40173b:	xor    rax,QWORD PTR fs:0x28
  401744:	jne    401792 <__sprintf_chk@plt+0x5b2>
  401746:	add    rsp,0x38
  40174a:	pop    rbx
  40174b:	pop    rbp
  40174c:	pop    r12
  40174e:	pop    r13
  401750:	pop    r14
  401752:	pop    r15
  401754:	ret    
  401755:	nop    DWORD PTR [rax]
  401758:	mov    edi,0x1
  40175d:	jmp    4016d0 <__sprintf_chk@plt+0x4f0>
  401762:	add    QWORD PTR [rsp+0x8],0x1
  401768:	lea    rsi,[rip+0x289e]        # 40400d <error@@Base+0xcbd>
  40176f:	mov    edi,0x1
  401774:	mov    rax,QWORD PTR [rsp+0x8]
  401779:	mov    rdx,rax
  40177c:	xor    eax,eax
  40177e:	call   401150 <__printf_chk@plt>
  401783:	mov    rbp,QWORD PTR [rbp+0x8]
  401787:	test   rbp,rbp
  40178a:	jne    401660 <__sprintf_chk@plt+0x480>
  401790:	jmp    401722 <__sprintf_chk@plt+0x542>
  401792:	call   4010a0 <__stack_chk_fail@plt>
  401797:	nop    WORD PTR [rax+rax*1+0x0]
  4017a0:	push   r15
  4017a2:	push   r14
  4017a4:	push   r13
  4017a6:	push   r12
  4017a8:	xor    r12d,r12d
  4017ab:	push   rbp
  4017ac:	push   rbx
  4017ad:	mov    rbp,rdi
  4017b0:	sub    rsp,0x68
  4017b4:	mov    rax,QWORD PTR fs:0x28
  4017bd:	mov    QWORD PTR [rsp+0x58],rax
  4017c2:	xor    eax,eax
  4017c4:	movsx  rax,si
  4017c8:	mov    QWORD PTR [rsp+0x28],rdx
  4017cd:	mov    QWORD PTR [rsp+0x18],rcx
  4017d2:	test   rax,rax
  4017d5:	mov    QWORD PTR [rsp+0x10],rax
  4017da:	jle    401801 <__sprintf_chk@plt+0x621>
  4017dc:	xor    ebx,ebx
  4017de:	mov    r13,rax
  4017e1:	mov    r14,rcx
  4017e4:	nop    DWORD PTR [rax+0x0]
  4017e8:	mov    rdi,QWORD PTR [r14+rbx*8]
  4017ec:	call   401090 <strlen@plt>
  4017f1:	cmp    rax,r12
  4017f4:	cmovae r12,rax
  4017f8:	add    rbx,0x1
  4017fc:	cmp    rbx,r13
  4017ff:	jne    4017e8 <__sprintf_chk@plt+0x608>
  401801:	lea    rax,[rsp+0x40]
  401806:	lea    rcx,[rip+0x2806]        # 404013 <error@@Base+0xcc3>
  40180d:	mov    r8,r12
  401810:	mov    edx,0x14
  401815:	mov    esi,0x1
  40181a:	lea    rbx,[rsp+0x37]
  40181f:	mov    QWORD PTR [rsp+0x8],rax
  401824:	mov    rdi,rax
  401827:	xor    eax,eax
  401829:	call   4011e0 <__sprintf_chk@plt>
  40182e:	mov    r15,QWORD PTR [rbp+0x0]
  401832:	mov    QWORD PTR [rsp+0x20],0x0
  40183b:	test   r15,r15
  40183e:	je     401858 <__sprintf_chk@plt+0x678>
  401840:	mov    r14,r15
  401843:	nop    DWORD PTR [rax+rax*1+0x0]
  401848:	cmp    QWORD PTR [r14+0x18],0x0
  40184d:	je     40187b <__sprintf_chk@plt+0x69b>
  40184f:	mov    r14,QWORD PTR [r14+0x8]
  401853:	test   r14,r14
  401856:	jne    401848 <__sprintf_chk@plt+0x668>
  401858:	mov    rax,QWORD PTR [rsp+0x58]
  40185d:	xor    rax,QWORD PTR fs:0x28
  401866:	jne    4019d4 <__sprintf_chk@plt+0x7f4>
  40186c:	add    rsp,0x68
  401870:	pop    rbx
  401871:	pop    rbp
  401872:	pop    r12
  401874:	pop    r13
  401876:	pop    r14
  401878:	pop    r15
  40187a:	ret    
  40187b:	xor    eax,eax
  40187d:	call   401460 <__sprintf_chk@plt+0x280>
  401882:	add    QWORD PTR [rsp+0x20],0x1
  401888:	lea    rsi,[rip+0x278c]        # 40401b <error@@Base+0xccb>
  40188f:	mov    edi,0x1
  401894:	mov    rax,QWORD PTR [rsp+0x20]
  401899:	mov    rdx,rax
  40189c:	xor    eax,eax
  40189e:	call   401150 <__printf_chk@plt>
  4018a3:	cmp    QWORD PTR [rsp+0x10],0x0
  4018a9:	jle    40184f <__sprintf_chk@plt+0x66f>
  4018ab:	mov    rax,QWORD PTR [rsp+0x28]
  4018b0:	xor    ebp,ebp
  4018b2:	mov    QWORD PTR [rsp],0x0
  4018ba:	lea    r15,[rax+0x10]
  4018be:	xchg   ax,ax
  4018c0:	mov    rax,QWORD PTR [rsp+0x18]
  4018c5:	mov    rcx,QWORD PTR [rsp]
  4018c9:	mov    edi,0x1
  4018ce:	mov    rsi,QWORD PTR [rsp+0x8]
  4018d3:	mov    rdx,QWORD PTR [rax+rcx*8]
  4018d7:	xor    eax,eax
  4018d9:	call   401150 <__printf_chk@plt>
  4018de:	lea    rsi,[rip+0x273d]        # 404022 <error@@Base+0xcd2>
  4018e5:	xor    eax,eax
  4018e7:	mov    edi,0x1
  4018ec:	call   401150 <__printf_chk@plt>
  4018f1:	mov    rax,rbp
  4018f4:	add    rax,QWORD PTR [r14+0x10]
  4018f8:	mov    r12,QWORD PTR [rax]
  4018fb:	cmp    r12,QWORD PTR [rax+0x8]
  4018ff:	jg     4019a0 <__sprintf_chk@plt+0x7c0>
  401905:	lea    r13,[r12*8+0x0]
  40190d:	jmp    401923 <__sprintf_chk@plt+0x743>
  40190f:	nop
  401910:	mov    rax,QWORD PTR [r14+0x10]
  401914:	add    r12,0x1
  401918:	add    r13,0x8
  40191c:	cmp    QWORD PTR [rax+rbp*1+0x8],r12
  401921:	jl     4019a0 <__sprintf_chk@plt+0x7c0>
  401923:	mov    rax,QWORD PTR [r15]
  401926:	xor    ecx,ecx
  401928:	mov    rdx,rbx
  40192b:	mov    rax,QWORD PTR [rax+r13*1]
  40192f:	mov    esi,DWORD PTR [rax+0x14]
  401932:	movzx  edi,BYTE PTR [rax+0x10]
  401936:	mov    rax,0x406244
  40193d:	and    dil,BYTE PTR [rax]
  401940:	xor    eax,eax
  401942:	movsx  edi,dil
  401946:	call   402db0 <__sprintf_chk@plt+0x1bd0>
  40194b:	lea    rsi,[rip+0x26b8]        # 40400a <error@@Base+0xcba>
  401952:	xor    eax,eax
  401954:	mov    rdx,rbx
  401957:	mov    edi,0x1
  40195c:	call   401150 <__printf_chk@plt>
  401961:	mov    rax,QWORD PTR [r15]
  401964:	mov    rax,QWORD PTR [rax+r13*1]
  401968:	cmp    DWORD PTR [rax+0x14],0xa
  40196c:	jne    401910 <__sprintf_chk@plt+0x730>
  40196e:	mov    rsi,QWORD PTR [rsp+0x8]
  401973:	lea    rdx,[rip+0x28a0]        # 40421a <error@@Base+0xeca>
  40197a:	mov    edi,0x1
  40197f:	xor    eax,eax
  401981:	call   401150 <__printf_chk@plt>
  401986:	lea    rsi,[rip+0x2698]        # 404025 <error@@Base+0xcd5>
  40198d:	mov    edi,0x1
  401992:	xor    eax,eax
  401994:	call   401150 <__printf_chk@plt>
  401999:	jmp    401910 <__sprintf_chk@plt+0x730>
  40199e:	xchg   ax,ax
  4019a0:	lea    rsi,[rip+0x2678]        # 40401f <error@@Base+0xccf>
  4019a7:	xor    eax,eax
  4019a9:	mov    edi,0x1
  4019ae:	add    rbp,0x18
  4019b2:	add    r15,0x20
  4019b6:	call   401150 <__printf_chk@plt>
  4019bb:	add    QWORD PTR [rsp],0x1
  4019c0:	mov    rax,QWORD PTR [rsp]
  4019c4:	cmp    rax,QWORD PTR [rsp+0x10]
  4019c9:	jne    4018c0 <__sprintf_chk@plt+0x6e0>
  4019cf:	jmp    40184f <__sprintf_chk@plt+0x66f>
  4019d4:	call   4010a0 <__stack_chk_fail@plt>
  4019d9:	nop    DWORD PTR [rax+0x0]
  4019e0:	push   r15
  4019e2:	push   r14
  4019e4:	mov    rax,rcx
  4019e7:	push   r13
  4019e9:	push   r12
  4019eb:	sub    rax,rdi
  4019ee:	push   rbp
  4019ef:	push   rbx
  4019f0:	mov    r14,QWORD PTR [rsp+0x38]
  4019f5:	mov    QWORD PTR [rsp-0x18],r9
  4019fa:	mov    QWORD PTR [rsp-0x20],rax
  4019ff:	mov    r9,r14
  401a02:	sub    r9,rdi
  401a05:	cmp    rax,rdx
  401a08:	jl     401b9f <__sprintf_chk@plt+0x9bf>
  401a0e:	lea    rax,[rdx+0x1]
  401a12:	lea    r15,[rsi+rdx*8]
  401a16:	mov    QWORD PTR [rsp-0x38],rdi
  401a1b:	mov    QWORD PTR [rsp-0x48],rax
  401a20:	mov    rax,QWORD PTR [rsp-0x18]
  401a25:	mov    r10,r15
  401a28:	lea    rax,[r8+rax*8]
  401a2c:	mov    QWORD PTR [rsp-0x8],rax
  401a31:	nop    DWORD PTR [rax+0x0]
  401a38:	mov    rax,QWORD PTR [rsp-0x48]
  401a3d:	sub    rax,0x1
  401a41:	cmp    QWORD PTR [rsp-0x18],r9
  401a46:	mov    QWORD PTR [rsp-0x28],rax
  401a4b:	jg     401b93 <__sprintf_chk@plt+0x9b3>
  401a51:	mov    rax,QWORD PTR [r10]
  401a54:	mov    rbx,QWORD PTR [rsp-0x8]
  401a59:	mov    QWORD PTR [rsp-0x40],rsi
  401a5e:	mov    r12d,DWORD PTR [rax+0x14]
  401a62:	mov    rax,QWORD PTR [rsp-0x48]
  401a67:	mov    QWORD PTR [rsp-0x10],rax
  401a6c:	mov    rax,QWORD PTR [rsp-0x18]
  401a71:	cmp    r12d,0x7e
  401a75:	setne  r15b
  401a79:	lea    r11,[rax+0x1]
  401a7d:	nop    DWORD PTR [rax]
  401a80:	mov    rax,QWORD PTR [rbx]
  401a83:	lea    r13,[r11-0x1]
  401a87:	mov    rbp,r11
  401a8a:	cmp    DWORD PTR [rax+0x14],r12d
  401a8e:	jne    401b4c <__sprintf_chk@plt+0x96c>
  401a94:	test   r15b,r15b
  401a97:	je     401b4c <__sprintf_chk@plt+0x96c>
  401a9d:	mov    rdi,QWORD PTR [rsp-0x48]
  401aa2:	cmp    rcx,rdi
  401aa5:	jl     401b8c <__sprintf_chk@plt+0x9ac>
  401aab:	cmp    r14,r11
  401aae:	jl     401b8c <__sprintf_chk@plt+0x9ac>
  401ab4:	mov    rax,QWORD PTR [r10+0x8]
  401ab8:	mov    rdx,QWORD PTR [rbx+0x8]
  401abc:	mov    eax,DWORD PTR [rax+0x14]
  401abf:	cmp    DWORD PTR [rdx+0x14],eax
  401ac2:	jne    401b8c <__sprintf_chk@plt+0x9ac>
  401ac8:	cmp    eax,0x7e
  401acb:	je     401b8c <__sprintf_chk@plt+0x9ac>
  401ad1:	mov    rdx,r11
  401ad4:	mov    rax,rdi
  401ad7:	mov    QWORD PTR [rsp-0x30],r9
  401adc:	mov    rsi,QWORD PTR [rsp-0x40]
  401ae1:	jmp    401b03 <__sprintf_chk@plt+0x923>
  401ae3:	nop    DWORD PTR [rax+rax*1+0x0]
  401ae8:	cmp    r14,rdx
  401aeb:	jl     401b10 <__sprintf_chk@plt+0x930>
  401aed:	mov    rdi,QWORD PTR [rsi+rax*8]
  401af1:	mov    r9,QWORD PTR [r8+rdx*8]
  401af5:	mov    edi,DWORD PTR [rdi+0x14]
  401af8:	cmp    DWORD PTR [r9+0x14],edi
  401afc:	jne    401b10 <__sprintf_chk@plt+0x930>
  401afe:	cmp    edi,0x7e
  401b01:	je     401b10 <__sprintf_chk@plt+0x930>
  401b03:	add    rax,0x1
  401b07:	add    rdx,0x1
  401b0b:	cmp    rcx,rax
  401b0e:	jge    401ae8 <__sprintf_chk@plt+0x908>
  401b10:	mov    r9,QWORD PTR [rsp-0x30]
  401b15:	mov    QWORD PTR [rsp-0x40],rsi
  401b1a:	mov    rdi,QWORD PTR [rsp-0x28]
  401b1f:	sub    rax,rdi
  401b22:	mov    rdx,rax
  401b25:	sub    rdx,QWORD PTR [rsp-0x38]
  401b2a:	test   rdx,rdx
  401b2d:	jle    401b4c <__sprintf_chk@plt+0x96c>
  401b2f:	mov    rsi,QWORD PTR [rsp+0x40]
  401b34:	sub    QWORD PTR [rsp-0x20],rdx
  401b39:	sub    r9,rdx
  401b3c:	mov    QWORD PTR [rsp-0x38],rax
  401b41:	mov    QWORD PTR [rsi],rdi
  401b44:	mov    rsi,QWORD PTR [rsp+0x48]
  401b49:	mov    QWORD PTR [rsi],r13
  401b4c:	add    rbx,0x8
  401b50:	add    r11,0x1
  401b54:	cmp    r9,rbp
  401b57:	jge    401a80 <__sprintf_chk@plt+0x8a0>
  401b5d:	mov    rsi,QWORD PTR [rsp-0x40]
  401b62:	add    QWORD PTR [rsp-0x48],0x1
  401b68:	add    r10,0x8
  401b6c:	mov    rbx,QWORD PTR [rsp-0x10]
  401b71:	cmp    QWORD PTR [rsp-0x20],rbx
  401b76:	jge    401a38 <__sprintf_chk@plt+0x858>
  401b7c:	mov    rax,QWORD PTR [rsp-0x38]
  401b81:	pop    rbx
  401b82:	pop    rbp
  401b83:	pop    r12
  401b85:	pop    r13
  401b87:	pop    r14
  401b89:	pop    r15
  401b8b:	ret    
  401b8c:	mov    rax,QWORD PTR [rsp-0x48]
  401b91:	jmp    401b1a <__sprintf_chk@plt+0x93a>
  401b93:	mov    rax,QWORD PTR [rsp-0x48]
  401b98:	mov    QWORD PTR [rsp-0x10],rax
  401b9d:	jmp    401b62 <__sprintf_chk@plt+0x982>
  401b9f:	mov    QWORD PTR [rsp-0x38],rdi
  401ba4:	mov    rax,QWORD PTR [rsp-0x38]
  401ba9:	pop    rbx
  401baa:	pop    rbp
  401bab:	pop    r12
  401bad:	pop    r13
  401baf:	pop    r14
  401bb1:	pop    r15
  401bb3:	ret    
  401bb4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401bbf:	nop
  401bc0:	test   rsi,rsi
  401bc3:	je     401c30 <__sprintf_chk@plt+0xa50>
  401bc5:	mov    r8,QWORD PTR [rsi+0x18]
  401bc9:	lea    rcx,[rdi-0x1]
  401bcd:	lea    r10,[rdi+0x1]
  401bd1:	cmp    rcx,r8
  401bd4:	cmovl  rcx,r8
  401bd8:	cmp    QWORD PTR [rsi+0x20],r10
  401bdc:	cmovle r10,QWORD PTR [rsi+0x20]
  401be1:	cmp    rcx,r10
  401be4:	jg     401c33 <__sprintf_chk@plt+0xa53>
  401be6:	mov    r11,QWORD PTR [rsi+0x28]
  401bea:	add    r10,0x1
  401bee:	xor    eax,eax
  401bf0:	jmp    401bfc <__sprintf_chk@plt+0xa1c>
  401bf2:	nop    WORD PTR [rax+rax*1+0x0]
  401bf8:	mov    r8,QWORD PTR [rsi+0x18]
  401bfc:	mov    r9,rcx
  401bff:	sub    r9,r8
  401c02:	movzx  r8d,WORD PTR [r11+r9*2]
  401c07:	xor    r9d,r9d
  401c0a:	cmp    rdi,rcx
  401c0d:	setle  r9b
  401c11:	add    r8,r9
  401c14:	cmp    r8,rax
  401c17:	jl     401c1f <__sprintf_chk@plt+0xa3f>
  401c19:	mov    QWORD PTR [rdx],rcx
  401c1c:	mov    rax,r8
  401c1f:	add    rcx,0x1
  401c23:	cmp    rcx,r10
  401c26:	jne    401bf8 <__sprintf_chk@plt+0xa18>
  401c28:	repz ret 
  401c2a:	nop    WORD PTR [rax+rax*1+0x0]
  401c30:	xor    eax,eax
  401c32:	ret    
  401c33:	lea    rdi,[rip+0x2446]        # 404080 <error@@Base+0xd30>
  401c3a:	sub    rsp,0x8
  401c3e:	xor    eax,eax
  401c40:	call   403350 <error@@Base>
  401c45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401c50:	push   rbp
  401c51:	push   rbx
  401c52:	mov    esi,0x20
  401c57:	mov    ebx,edi
  401c59:	xor    eax,eax
  401c5b:	mov    edi,0x1
  401c60:	sub    rsp,0x8
  401c64:	call   403390 <error@@Base+0x40>
  401c69:	movsx  rdi,bx
  401c6d:	mov    rbp,rax
  401c70:	mov    esi,0x18
  401c75:	xor    eax,eax
  401c77:	call   403390 <error@@Base+0x40>
  401c7c:	mov    QWORD PTR [rbp+0x10],rax
  401c80:	add    rsp,0x8
  401c84:	mov    rax,rbp
  401c87:	pop    rbx
  401c88:	pop    rbp
  401c89:	ret    
  401c8a:	nop    WORD PTR [rax+rax*1+0x0]
  401c90:	push   r15
  401c92:	push   r14
  401c94:	xor    eax,eax
  401c96:	push   r13
  401c98:	push   r12
  401c9a:	mov    r14d,esi
  401c9d:	push   rbp
  401c9e:	push   rbx
  401c9f:	mov    r13,rdi
  401ca2:	mov    rbx,rdx
  401ca5:	sub    rsp,0x8
  401ca9:	call   403720 <error@@Base+0x3d0>
  401cae:	xor    eax,eax
  401cb0:	movsx  edi,r14w
  401cb4:	call   401c50 <__sprintf_chk@plt+0xa70>
  401cb9:	test   r14w,r14w
  401cbd:	mov    r12,rax
  401cc0:	jle    401d7b <__sprintf_chk@plt+0xb9b>
  401cc6:	sub    r14d,0x1
  401cca:	xor    ebp,ebp
  401ccc:	movzx  r14d,r14w
  401cd0:	lea    r15,[r14+r14*2+0x3]
  401cd5:	shl    r15,0x3
  401cd9:	nop    DWORD PTR [rax+0x0]
  401ce0:	mov    rdi,rbx
  401ce3:	xor    eax,eax
  401ce5:	add    rbx,0x20
  401ce9:	call   4038f0 <error@@Base+0x5a0>
  401cee:	mov    rdi,QWORD PTR [r12+0x10]
  401cf3:	lea    rax,[rdi+rbp*1]
  401cf7:	add    rbp,0x18
  401cfb:	mov    QWORD PTR [rax],0x0
  401d02:	mov    rdx,QWORD PTR [rbx-0x8]
  401d06:	cmp    rbp,r15
  401d09:	lea    rcx,[rdx-0x1]
  401d0d:	mov    QWORD PTR [rax+0x10],rdx
  401d11:	mov    QWORD PTR [rax+0x8],rcx
  401d15:	jne    401ce0 <__sprintf_chk@plt+0xb00>
  401d17:	cmp    QWORD PTR [rdi+0x10],0x0
  401d1c:	jg     401d60 <__sprintf_chk@plt+0xb80>
  401d1e:	lea    rdx,[r14+r14*2]
  401d22:	lea    rax,[rdi+0x28]
  401d26:	lea    rdx,[rdi+rdx*8+0x28]
  401d2b:	jmp    401d3b <__sprintf_chk@plt+0xb5b>
  401d2d:	nop    DWORD PTR [rax]
  401d30:	add    rax,0x18
  401d34:	cmp    QWORD PTR [rax-0x18],0x0
  401d39:	jg     401d60 <__sprintf_chk@plt+0xb80>
  401d3b:	cmp    rdx,rax
  401d3e:	jne    401d30 <__sprintf_chk@plt+0xb50>
  401d40:	call   401030 <free@plt>
  401d45:	add    rsp,0x8
  401d49:	mov    rdi,r12
  401d4c:	pop    rbx
  401d4d:	pop    rbp
  401d4e:	pop    r12
  401d50:	pop    r13
  401d52:	pop    r14
  401d54:	pop    r15
  401d56:	jmp    401030 <free@plt>
  401d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  401d60:	add    rsp,0x8
  401d64:	mov    rsi,r12
  401d67:	mov    rdi,r13
  401d6a:	pop    rbx
  401d6b:	pop    rbp
  401d6c:	pop    r12
  401d6e:	pop    r13
  401d70:	pop    r14
  401d72:	pop    r15
  401d74:	xor    eax,eax
  401d76:	jmp    403740 <error@@Base+0x3f0>
  401d7b:	mov    rdi,QWORD PTR [rax+0x10]
  401d7f:	jmp    401d40 <__sprintf_chk@plt+0xb60>
  401d81:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401d8c:	nop    DWORD PTR [rax+0x0]
  401d90:	push   r15
  401d92:	push   r14
  401d94:	movsx  r15d,si
  401d98:	push   r13
  401d9a:	push   r12
  401d9c:	xor    eax,eax
  401d9e:	push   rbp
  401d9f:	push   rbx
  401da0:	mov    r14d,esi
  401da3:	mov    rbp,rdx
  401da6:	mov    rbx,rcx
  401da9:	mov    r13d,esi
  401dac:	sub    rsp,0x28
  401db0:	mov    QWORD PTR [rsp+0x10],rdi
  401db5:	mov    edi,r15d
  401db8:	mov    QWORD PTR [rsp+0x18],r8
  401dbd:	mov    QWORD PTR [rsp+0x8],r9
  401dc2:	call   401c50 <__sprintf_chk@plt+0xa70>
  401dc7:	mov    edi,r15d
  401dca:	mov    r12,rax
  401dcd:	xor    eax,eax
  401dcf:	call   401c50 <__sprintf_chk@plt+0xa70>
  401dd4:	test   r14w,r14w
  401dd8:	mov    r15,rax
  401ddb:	jle    401f40 <__sprintf_chk@plt+0xd60>
  401de1:	mov    rdi,QWORD PTR [r12+0x10]
  401de6:	sub    r14d,0x1
  401dea:	mov    rax,QWORD PTR [rbp+0x10]
  401dee:	movzx  r14d,r14w
  401df2:	mov    rdx,QWORD PTR [r15+0x10]
  401df6:	mov    r8,QWORD PTR [rsp+0x18]
  401dfb:	mov    rcx,rbx
  401dfe:	lea    rbx,[rbx+r14*8+0x8]
  401e03:	mov    r9,rdi
  401e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e10:	mov    rsi,QWORD PTR [rax]
  401e13:	mov    r11,r8
  401e16:	add    r11,QWORD PTR [rcx]
  401e19:	add    rcx,0x8
  401e1d:	add    rax,0x18
  401e21:	add    r9,0x18
  401e25:	add    rdx,0x18
  401e29:	mov    QWORD PTR [r9-0x18],rsi
  401e2d:	mov    rsi,QWORD PTR [rcx-0x8]
  401e31:	lea    r10,[r11-0x1]
  401e35:	sub    rsi,0x1
  401e39:	mov    QWORD PTR [r9-0x10],rsi
  401e3d:	mov    rsi,QWORD PTR [rcx-0x8]
  401e41:	sub    rsi,QWORD PTR [rax-0x18]
  401e45:	mov    QWORD PTR [r9-0x8],rsi
  401e49:	mov    QWORD PTR [rdx-0x18],r11
  401e4d:	mov    rsi,QWORD PTR [rax-0x10]
  401e51:	mov    QWORD PTR [rdx-0x10],rsi
  401e55:	mov    rsi,QWORD PTR [rax-0x10]
  401e59:	sub    rsi,r10
  401e5c:	mov    QWORD PTR [rdx-0x8],rsi
  401e60:	mov    rsi,QWORD PTR [rcx-0x8]
  401e64:	mov    QWORD PTR [rax-0x10],r10
  401e68:	mov    QWORD PTR [rax-0x8],r8
  401e6c:	mov    QWORD PTR [rax-0x18],rsi
  401e70:	cmp    rcx,rbx
  401e73:	jne    401e10 <__sprintf_chk@plt+0xc30>
  401e75:	cmp    QWORD PTR [rdi+0x10],0x0
  401e7a:	mov    rax,QWORD PTR [rsp+0x8]
  401e7f:	mov    QWORD PTR [rbp+0x18],rax
  401e83:	jg     401ec0 <__sprintf_chk@plt+0xce0>
  401e85:	lea    rdx,[r14+r14*2]
  401e89:	lea    rax,[rdi+0x28]
  401e8d:	lea    rdx,[rdi+rdx*8+0x28]
  401e92:	jmp    401ea3 <__sprintf_chk@plt+0xcc3>
  401e94:	nop    DWORD PTR [rax+0x0]
  401e98:	add    rax,0x18
  401e9c:	cmp    QWORD PTR [rax-0x18],0x0
  401ea1:	jg     401ec0 <__sprintf_chk@plt+0xce0>
  401ea3:	cmp    rdx,rax
  401ea6:	jne    401e98 <__sprintf_chk@plt+0xcb8>
  401ea8:	call   401030 <free@plt>
  401ead:	mov    rdi,r12
  401eb0:	call   401030 <free@plt>
  401eb5:	jmp    401ed2 <__sprintf_chk@plt+0xcf2>
  401eb7:	nop    WORD PTR [rax+rax*1+0x0]
  401ec0:	mov    rdi,QWORD PTR [rsp+0x10]
  401ec5:	mov    rdx,rbp
  401ec8:	mov    rsi,r12
  401ecb:	xor    eax,eax
  401ecd:	call   4037e0 <error@@Base+0x490>
  401ed2:	mov    rdi,QWORD PTR [r15+0x10]
  401ed6:	xor    eax,eax
  401ed8:	cmp    QWORD PTR [rdi+0x10],0x0
  401edd:	lea    rdx,[rdi+0x28]
  401ee1:	jle    401ef3 <__sprintf_chk@plt+0xd13>
  401ee3:	jmp    401f20 <__sprintf_chk@plt+0xd40>
  401ee5:	nop    DWORD PTR [rax]
  401ee8:	add    rdx,0x18
  401eec:	cmp    QWORD PTR [rdx-0x18],0x0
  401ef1:	jg     401f20 <__sprintf_chk@plt+0xd40>
  401ef3:	add    eax,0x1
  401ef6:	cmp    r13w,ax
  401efa:	jg     401ee8 <__sprintf_chk@plt+0xd08>
  401efc:	call   401030 <free@plt>
  401f01:	add    rsp,0x28
  401f05:	mov    rdi,r15
  401f08:	pop    rbx
  401f09:	pop    rbp
  401f0a:	pop    r12
  401f0c:	pop    r13
  401f0e:	pop    r14
  401f10:	pop    r15
  401f12:	jmp    401030 <free@plt>
  401f17:	nop    WORD PTR [rax+rax*1+0x0]
  401f20:	mov    rdi,QWORD PTR [rsp+0x10]
  401f25:	add    rsp,0x28
  401f29:	mov    rdx,r15
  401f2c:	pop    rbx
  401f2d:	mov    rsi,rbp
  401f30:	xor    eax,eax
  401f32:	pop    rbp
  401f33:	pop    r12
  401f35:	pop    r13
  401f37:	pop    r14
  401f39:	pop    r15
  401f3b:	jmp    403830 <error@@Base+0x4e0>
  401f40:	mov    rax,QWORD PTR [rsp+0x8]
  401f45:	mov    rdi,QWORD PTR [r12+0x10]
  401f4a:	mov    QWORD PTR [rbp+0x18],rax
  401f4e:	call   401030 <free@plt>
  401f53:	mov    rdi,r12
  401f56:	call   401030 <free@plt>
  401f5b:	mov    rdi,QWORD PTR [r15+0x10]
  401f5f:	jmp    401efc <__sprintf_chk@plt+0xd1c>
  401f61:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401f6c:	nop    DWORD PTR [rax+0x0]
  401f70:	push   r15
  401f72:	push   r14
  401f74:	mov    r14,rdx
  401f77:	push   r13
  401f79:	push   r12
  401f7b:	push   rbp
  401f7c:	push   rbx
  401f7d:	mov    rbp,rcx
  401f80:	sub    rsp,0xc8
  401f87:	mov    rax,QWORD PTR fs:0x28
  401f90:	mov    QWORD PTR [rsp+0xb8],rax
  401f98:	xor    eax,eax
  401f9a:	test   si,si
  401f9d:	mov    QWORD PTR [rsp+0x10],rdi
  401fa2:	mov    DWORD PTR [rsp+0xc],esi
  401fa6:	jle    4020bf <__sprintf_chk@plt+0xedf>
  401fac:	mov    rcx,QWORD PTR [rcx+0x10]
  401fb0:	mov    r8,QWORD PTR [rcx+0x10]
  401fb4:	test   r8,r8
  401fb7:	je     402149 <__sprintf_chk@plt+0xf69>
  401fbd:	movzx  edi,WORD PTR [rsp+0xc]
  401fc2:	lea    rax,[rcx+0x28]
  401fc6:	lea    edx,[rdi-0x1]
  401fc9:	movzx  edx,dx
  401fcc:	lea    rdx,[rdx+rdx*2]
  401fd0:	lea    rdx,[rcx+rdx*8+0x28]
  401fd5:	jmp    401fef <__sprintf_chk@plt+0xe0f>
  401fd7:	nop    WORD PTR [rax+rax*1+0x0]
  401fe0:	add    rax,0x18
  401fe4:	cmp    QWORD PTR [rax-0x18],0x0
  401fe9:	je     402149 <__sprintf_chk@plt+0xf69>
  401fef:	cmp    rax,rdx
  401ff2:	jne    401fe0 <__sprintf_chk@plt+0xe00>
  401ff4:	cmp    WORD PTR [rsp+0xc],0x1
  401ffa:	mov    rdx,QWORD PTR [rcx]
  401ffd:	lea    rax,[rsp+0x30]
  402002:	mov    QWORD PTR [rsp],rax
  402006:	mov    QWORD PTR [rsp+0x30],rdx
  40200b:	jle    4020d8 <__sprintf_chk@plt+0xef8>
  402011:	movzx  eax,WORD PTR [rsp+0xc]
  402016:	mov    r15d,0x8
  40201c:	mov    rdi,r14
  40201f:	lea    rbx,[rsp+0x38]
  402024:	lea    r12,[rsp+0x28]
  402029:	mov    r14,r15
  40202c:	mov    r15,rdi
  40202f:	sub    eax,0x2
  402032:	movzx  eax,ax
  402035:	lea    r13,[rax*8+0x10]
  40203d:	mov    rax,r8
  402040:	lea    rdi,[r14+r14*2]
  402044:	mov    rsi,QWORD PTR [r15+0x10]
  402048:	mov    r8,QWORD PTR [r15+r14*4+0x10]
  40204d:	push   rbx
  40204e:	push   r12
  402050:	add    rdi,rcx
  402053:	lea    rcx,[rax+rdx*1-0x1]
  402058:	xor    eax,eax
  40205a:	push   QWORD PTR [rdi+0x8]
  40205d:	mov    r9,QWORD PTR [rdi]
  402060:	xor    edi,edi
  402062:	call   4019e0 <__sprintf_chk@plt+0x800>
  402067:	add    rsp,0x18
  40206b:	test   rax,rax
  40206e:	je     402149 <__sprintf_chk@plt+0xf69>
  402074:	mov    rcx,QWORD PTR [rsp+0x30]
  402079:	mov    rsi,QWORD PTR [rsp+0x28]
  40207e:	mov    rdx,QWORD PTR [rsp]
  402082:	sub    rsi,rcx
  402085:	test   rsi,rsi
  402088:	jg     402093 <__sprintf_chk@plt+0xeb3>
  40208a:	jmp    4020a3 <__sprintf_chk@plt+0xec3>
  40208c:	nop    DWORD PTR [rax+0x0]
  402090:	mov    rcx,QWORD PTR [rdx]
  402093:	add    rcx,rsi
  402096:	add    rdx,0x8
  40209a:	mov    QWORD PTR [rdx-0x8],rcx
  40209e:	cmp    rdx,rbx
  4020a1:	jne    402090 <__sprintf_chk@plt+0xeb0>
  4020a3:	add    r14,0x8
  4020a7:	add    rbx,0x8
  4020ab:	cmp    r13,r14
  4020ae:	je     40216e <__sprintf_chk@plt+0xf8e>
  4020b4:	mov    rcx,QWORD PTR [rbp+0x10]
  4020b8:	mov    rdx,QWORD PTR [rsp+0x30]
  4020bd:	jmp    402040 <__sprintf_chk@plt+0xe60>
  4020bf:	mov    rax,QWORD PTR [rcx+0x10]
  4020c3:	mov    r8,QWORD PTR [rax+0x10]
  4020c7:	mov    rax,QWORD PTR [rax]
  4020ca:	mov    QWORD PTR [rsp+0x30],rax
  4020cf:	lea    rax,[rsp+0x30]
  4020d4:	mov    QWORD PTR [rsp],rax
  4020d8:	mov    esi,0x8
  4020dd:	mov    edi,0x1
  4020e2:	xor    eax,eax
  4020e4:	mov    QWORD PTR [rsp+0x18],r8
  4020e9:	call   403390 <error@@Base+0x40>
  4020ee:	movsx  r15d,WORD PTR [rsp+0xc]
  4020f4:	mov    rbx,QWORD PTR [rsp+0x10]
  4020f9:	mov    r9,rax
  4020fc:	mov    rcx,QWORD PTR [rsp]
  402100:	mov    r8,QWORD PTR [rsp+0x18]
  402105:	xor    eax,eax
  402107:	mov    rdx,rbp
  40210a:	mov    rdi,rbx
  40210d:	mov    esi,r15d
  402110:	call   401d90 <__sprintf_chk@plt+0xbb0>
  402115:	mov    rcx,QWORD PTR [rbp+0x0]
  402119:	test   rcx,rcx
  40211c:	je     40212e <__sprintf_chk@plt+0xf4e>
  40211e:	mov    rdx,r14
  402121:	mov    esi,r15d
  402124:	mov    rdi,rbx
  402127:	xor    eax,eax
  402129:	call   401f70 <__sprintf_chk@plt+0xd90>
  40212e:	mov    rcx,QWORD PTR [rbp+0x8]
  402132:	test   rcx,rcx
  402135:	je     402149 <__sprintf_chk@plt+0xf69>
  402137:	mov    rdi,QWORD PTR [rsp+0x10]
  40213c:	mov    rdx,r14
  40213f:	mov    esi,r15d
  402142:	xor    eax,eax
  402144:	call   401f70 <__sprintf_chk@plt+0xd90>
  402149:	mov    rax,QWORD PTR [rsp+0xb8]
  402151:	xor    rax,QWORD PTR fs:0x28
  40215a:	jne    402179 <__sprintf_chk@plt+0xf99>
  40215c:	add    rsp,0xc8
  402163:	pop    rbx
  402164:	pop    rbp
  402165:	pop    r12
  402167:	pop    r13
  402169:	pop    r14
  40216b:	pop    r15
  40216d:	ret    
  40216e:	mov    r8,rax
  402171:	mov    r14,r15
  402174:	jmp    4020d8 <__sprintf_chk@plt+0xef8>
  402179:	call   4010a0 <__stack_chk_fail@plt>
  40217e:	xchg   ax,ax
  402180:	push   r12
  402182:	push   rbp
  402183:	mov    r12,rsi
  402186:	push   rbx
  402187:	mov    rbp,rdi
  40218a:	sub    rsp,0x10
  40218e:	mov    rsi,QWORD PTR [rsi]
  402191:	mov    rax,QWORD PTR fs:0x28
  40219a:	mov    QWORD PTR [rsp+0x8],rax
  40219f:	xor    eax,eax
  4021a1:	mov    rdx,rsp
  4021a4:	call   401bc0 <__sprintf_chk@plt+0x9e0>
  4021a9:	mov    rdi,QWORD PTR [rip+0x4030]        # 4061e0 <error@@Base+0x2e90>
  4021b0:	mov    rbx,rax
  4021b3:	add    rax,rbp
  4021b6:	mov    rcx,QWORD PTR [rip+0x401b]        # 4061d8 <error@@Base+0x2e88>
  4021bd:	cmp    rbx,rdi
  4021c0:	jge    402307 <__sprintf_chk@plt+0x1127>
  4021c6:	cmp    rax,rcx
  4021c9:	jge    402310 <__sprintf_chk@plt+0x1130>
  4021cf:	mov    r9,QWORD PTR [rip+0x401a]        # 4061f0 <error@@Base+0x2ea0>
  4021d6:	mov    r8,QWORD PTR [rip+0x400b]        # 4061e8 <error@@Base+0x2e98>
  4021dd:	jmp    4021e9 <__sprintf_chk@plt+0x1009>
  4021df:	nop
  4021e0:	cmp    rax,rcx
  4021e3:	je     4022f0 <__sprintf_chk@plt+0x1110>
  4021e9:	mov    rdx,QWORD PTR [r9+rbx*8]
  4021ed:	mov    rsi,QWORD PTR [r8+rax*8]
  4021f1:	mov    edx,DWORD PTR [rdx+0x14]
  4021f4:	cmp    DWORD PTR [rsi+0x14],edx
  4021f7:	jne    402310 <__sprintf_chk@plt+0x1130>
  4021fd:	cmp    edx,0x7e
  402200:	je     402310 <__sprintf_chk@plt+0x1130>
  402206:	add    rbx,0x1
  40220a:	add    rax,0x1
  40220e:	cmp    rbx,rdi
  402211:	jne    4021e0 <__sprintf_chk@plt+0x1000>
  402213:	lea    r8,[rbp+0x1]
  402217:	mov    rbx,rdi
  40221a:	mov    QWORD PTR [rip+0x3fa7],r8        # 4061c8 <error@@Base+0x2e78>
  402221:	cmp    rax,rcx
  402224:	je     4022f7 <__sprintf_chk@plt+0x1117>
  40222a:	mov    rsi,QWORD PTR [rip+0x3f8f]        # 4061c0 <error@@Base+0x2e70>
  402231:	sub    rcx,rbp
  402234:	cmp    rcx,rdi
  402237:	cmovl  rcx,rdi
  40223b:	mov    rax,rcx
  40223e:	add    rax,QWORD PTR [r12+0x10]
  402243:	mov    rcx,QWORD PTR [rip+0x3f86]        # 4061d0 <error@@Base+0x2e80>
  40224a:	mov    rdx,rcx
  40224d:	sub    rax,rbx
  402250:	sub    rdx,rax
  402253:	add    rdx,0x1
  402257:	sar    rdx,1
  40225a:	cmp    rdx,r8
  40225d:	jle    402266 <__sprintf_chk@plt+0x1086>
  40225f:	mov    QWORD PTR [rip+0x3f62],rdx        # 4061c8 <error@@Base+0x2e78>
  402266:	add    rax,rcx
  402269:	sar    rax,1
  40226c:	cmp    rax,rsi
  40226f:	mov    QWORD PTR [rsp],rax
  402273:	jge    40227c <__sprintf_chk@plt+0x109c>
  402275:	mov    QWORD PTR [rip+0x3f44],rax        # 4061c0 <error@@Base+0x2e70>
  40227c:	xor    eax,eax
  40227e:	mov    esi,0x18
  402283:	mov    edi,0x1
  402288:	call   403390 <error@@Base+0x40>
  40228d:	cmp    QWORD PTR [rip+0x3fa3],0x0        # 406238 <error@@Base+0x2ee8>
  402295:	mov    WORD PTR [rax+0x10],bx
  402299:	je     402320 <__sprintf_chk@plt+0x1140>
  40229f:	cmp    rbp,QWORD PTR [r12+0x18]
  4022a4:	jl     4022d8 <__sprintf_chk@plt+0x10f8>
  4022a6:	lea    rdi,[rip+0x3f73]        # 406220 <error@@Base+0x2ed0>
  4022ad:	mov    rsi,rax
  4022b0:	mov    QWORD PTR [r12+0x20],rbp
  4022b5:	xor    eax,eax
  4022b7:	call   403790 <error@@Base+0x440>
  4022bc:	mov    rax,QWORD PTR [rsp+0x8]
  4022c1:	xor    rax,QWORD PTR fs:0x28
  4022ca:	jne    402340 <__sprintf_chk@plt+0x1160>
  4022cc:	add    rsp,0x10
  4022d0:	pop    rbx
  4022d1:	pop    rbp
  4022d2:	pop    r12
  4022d4:	ret    
  4022d5:	nop    DWORD PTR [rax]
  4022d8:	lea    rdi,[rip+0x3f41]        # 406220 <error@@Base+0x2ed0>
  4022df:	mov    rsi,rax
  4022e2:	mov    QWORD PTR [r12+0x18],rbp
  4022e7:	xor    eax,eax
  4022e9:	call   403740 <error@@Base+0x3f0>
  4022ee:	jmp    4022bc <__sprintf_chk@plt+0x10dc>
  4022f0:	mov    r8,QWORD PTR [rip+0x3ed1]        # 4061c8 <error@@Base+0x2e78>
  4022f7:	lea    rsi,[rbp-0x1]
  4022fb:	mov    QWORD PTR [rip+0x3ebe],rsi        # 4061c0 <error@@Base+0x2e70>
  402302:	jmp    402231 <__sprintf_chk@plt+0x1051>
  402307:	je     402213 <__sprintf_chk@plt+0x1033>
  40230d:	nop    DWORD PTR [rax]
  402310:	mov    r8,QWORD PTR [rip+0x3eb1]        # 4061c8 <error@@Base+0x2e78>
  402317:	jmp    402221 <__sprintf_chk@plt+0x1041>
  40231c:	nop    DWORD PTR [rax+0x0]
  402320:	lea    rdi,[rip+0x3ef9]        # 406220 <error@@Base+0x2ed0>
  402327:	mov    rsi,rax
  40232a:	mov    QWORD PTR [r12+0x20],rbp
  40232f:	mov    QWORD PTR [r12+0x18],rbp
  402334:	xor    eax,eax
  402336:	call   403790 <error@@Base+0x440>
  40233b:	jmp    4022bc <__sprintf_chk@plt+0x10dc>
  402340:	call   4010a0 <__stack_chk_fail@plt>
  402345:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402350:	lea    eax,[rsi-0x2]
  402353:	push   r12
  402355:	push   rbp
  402356:	push   rbx
  402357:	cmp    ax,0xe
  40235b:	ja     4023b6 <__sprintf_chk@plt+0x11d6>
  40235d:	movsx  ebx,si
  402360:	mov    rbp,rdi
  402363:	xor    eax,eax
  402365:	mov    esi,ebx
  402367:	mov    r12,rdx
  40236a:	call   401c90 <__sprintf_chk@plt+0xab0>
  40236f:	mov    rcx,QWORD PTR [rbp+0x0]
  402373:	test   rcx,rcx
  402376:	je     4023b1 <__sprintf_chk@plt+0x11d1>
  402378:	xor    eax,eax
  40237a:	mov    rdx,r12
  40237d:	mov    esi,ebx
  40237f:	mov    rdi,rbp
  402382:	call   401f70 <__sprintf_chk@plt+0xd90>
  402387:	mov    rax,QWORD PTR [rbp+0x0]
  40238b:	test   rax,rax
  40238e:	je     4023b1 <__sprintf_chk@plt+0x11d1>
  402390:	xor    ecx,ecx
  402392:	nop    WORD PTR [rax+rax*1+0x0]
  402398:	mov    rdx,QWORD PTR [rax+0x18]
  40239c:	test   rdx,rdx
  40239f:	je     4023a8 <__sprintf_chk@plt+0x11c8>
  4023a1:	add    rcx,0x1
  4023a5:	mov    QWORD PTR [rdx],rcx
  4023a8:	mov    rax,QWORD PTR [rax+0x8]
  4023ac:	test   rax,rax
  4023af:	jne    402398 <__sprintf_chk@plt+0x11b8>
  4023b1:	pop    rbx
  4023b2:	pop    rbp
  4023b3:	pop    r12
  4023b5:	ret    
  4023b6:	lea    rdi,[rip+0x1ce3]        # 4040a0 <error@@Base+0xd50>
  4023bd:	xor    eax,eax
  4023bf:	call   403350 <error@@Base>
  4023c4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4023cf:	nop
  4023d0:	push   r15
  4023d2:	push   r14
  4023d4:	mov    r14,rdx
  4023d7:	push   r13
  4023d9:	push   r12
  4023db:	mov    r13,rcx
  4023de:	push   rbp
  4023df:	push   rbx
  4023e0:	mov    r12,rsi
  4023e3:	mov    esi,0x1
  4023e8:	mov    rbp,rdi
  4023eb:	sub    rsp,0x58
  4023ef:	mov    rax,QWORD PTR fs:0x28
  4023f8:	mov    QWORD PTR [rsp+0x48],rax
  4023fd:	xor    eax,eax
  4023ff:	call   401c90 <__sprintf_chk@plt+0xab0>
  402404:	mov    rdx,r13
  402407:	xor    eax,eax
  402409:	mov    esi,0x1
  40240e:	mov    rdi,r12
  402411:	call   401c90 <__sprintf_chk@plt+0xab0>
  402416:	lea    rax,[rsp+0x40]
  40241b:	mov    QWORD PTR [rsp+0x18],r13
  402420:	mov    r13,r12
  402423:	mov    QWORD PTR [rsp+0x8],rax
  402428:	lea    rax,[rsp+0x38]
  40242d:	mov    QWORD PTR [rsp+0x10],rax
  402432:	mov    rbx,QWORD PTR [rbp+0x0]
  402436:	test   rbx,rbx
  402439:	je     402511 <__sprintf_chk@plt+0x1331>
  40243f:	xor    r12d,r12d
  402442:	jmp    402455 <__sprintf_chk@plt+0x1275>
  402444:	nop    DWORD PTR [rax+0x0]
  402448:	mov    rbx,QWORD PTR [rbx+0x8]
  40244c:	test   rbx,rbx
  40244f:	je     4024e0 <__sprintf_chk@plt+0x1300>
  402455:	cmp    QWORD PTR [rbx+0x18],0x0
  40245a:	jne    402448 <__sprintf_chk@plt+0x1268>
  40245c:	mov    rax,QWORD PTR [rbx+0x10]
  402460:	cmp    QWORD PTR [rax+0x10],r12
  402464:	jle    402448 <__sprintf_chk@plt+0x1268>
  402466:	mov    r15,QWORD PTR [r13+0x0]
  40246a:	test   r15,r15
  40246d:	jne    402481 <__sprintf_chk@plt+0x12a1>
  40246f:	jmp    402448 <__sprintf_chk@plt+0x1268>
  402471:	nop    DWORD PTR [rax+0x0]
  402478:	mov    r15,QWORD PTR [r15+0x8]
  40247c:	test   r15,r15
  40247f:	je     402448 <__sprintf_chk@plt+0x1268>
  402481:	cmp    QWORD PTR [r15+0x18],0x0
  402486:	jne    402478 <__sprintf_chk@plt+0x1298>
  402488:	mov    rax,QWORD PTR [r15+0x10]
  40248c:	cmp    QWORD PTR [rax+0x10],r12
  402490:	jle    402478 <__sprintf_chk@plt+0x1298>
  402492:	mov    rdx,QWORD PTR [rbx+0x10]
  402496:	sub    rsp,0x8
  40249a:	mov    rsi,QWORD PTR [r14+0x10]
  40249e:	mov    rdi,r12
  4024a1:	mov    rcx,QWORD PTR [rdx+0x8]
  4024a5:	push   QWORD PTR [rsp+0x10]
  4024a9:	push   QWORD PTR [rsp+0x20]
  4024ad:	push   QWORD PTR [rax+0x8]
  4024b0:	mov    r9,QWORD PTR [rax]
  4024b3:	mov    rax,QWORD PTR [rsp+0x38]
  4024b8:	mov    rdx,QWORD PTR [rdx]
  4024bb:	mov    r8,QWORD PTR [rax+0x10]
  4024bf:	xor    eax,eax
  4024c1:	call   4019e0 <__sprintf_chk@plt+0x800>
  4024c6:	add    rsp,0x20
  4024ca:	cmp    rax,r12
  4024cd:	jle    402478 <__sprintf_chk@plt+0x1298>
  4024cf:	mov    QWORD PTR [rsp+0x28],r15
  4024d4:	mov    QWORD PTR [rsp+0x20],rbx
  4024d9:	mov    r12,rax
  4024dc:	jmp    402478 <__sprintf_chk@plt+0x1298>
  4024de:	xchg   ax,ax
  4024e0:	test   r12,r12
  4024e3:	jne    402530 <__sprintf_chk@plt+0x1350>
  4024e5:	mov    rax,QWORD PTR [rbp+0x0]
  4024e9:	mov    r15,r12
  4024ec:	test   rax,rax
  4024ef:	je     402511 <__sprintf_chk@plt+0x1331>
  4024f1:	nop    DWORD PTR [rax+0x0]
  4024f8:	mov    rdx,QWORD PTR [rax+0x18]
  4024fc:	test   rdx,rdx
  4024ff:	je     402508 <__sprintf_chk@plt+0x1328>
  402501:	add    r15,0x1
  402505:	mov    QWORD PTR [rdx],r15
  402508:	mov    rax,QWORD PTR [rax+0x8]
  40250c:	test   rax,rax
  40250f:	jne    4024f8 <__sprintf_chk@plt+0x1318>
  402511:	mov    rax,QWORD PTR [rsp+0x48]
  402516:	xor    rax,QWORD PTR fs:0x28
  40251f:	jne    402587 <__sprintf_chk@plt+0x13a7>
  402521:	add    rsp,0x58
  402525:	pop    rbx
  402526:	pop    rbp
  402527:	pop    r12
  402529:	pop    r13
  40252b:	pop    r14
  40252d:	pop    r15
  40252f:	ret    
  402530:	mov    esi,0x8
  402535:	mov    edi,0x1
  40253a:	xor    eax,eax
  40253c:	call   403390 <error@@Base+0x40>
  402541:	mov    rcx,QWORD PTR [rsp+0x10]
  402546:	mov    rdx,QWORD PTR [rsp+0x20]
  40254b:	mov    rbx,rax
  40254e:	mov    r9,rax
  402551:	mov    r8,r12
  402554:	mov    rdi,rbp
  402557:	xor    eax,eax
  402559:	mov    esi,0x1
  40255e:	call   401d90 <__sprintf_chk@plt+0xbb0>
  402563:	mov    rcx,QWORD PTR [rsp+0x8]
  402568:	mov    rdx,QWORD PTR [rsp+0x28]
  40256d:	mov    r9,rbx
  402570:	mov    r8,r12
  402573:	mov    esi,0x1
  402578:	mov    rdi,r13
  40257b:	xor    eax,eax
  40257d:	call   401d90 <__sprintf_chk@plt+0xbb0>
  402582:	jmp    402432 <__sprintf_chk@plt+0x1252>
  402587:	call   4010a0 <__stack_chk_fail@plt>
  40258c:	nop    DWORD PTR [rax+0x0]
  402590:	push   r15
  402592:	push   r14
  402594:	push   r13
  402596:	push   r12
  402598:	push   rbp
  402599:	push   rbx
  40259a:	sub    rsp,0x48
  40259e:	mov    rax,QWORD PTR fs:0x28
  4025a7:	mov    QWORD PTR [rsp+0x38],rax
  4025ac:	xor    eax,eax
  4025ae:	cmp    QWORD PTR [rsi+0x18],0xffff
  4025b6:	mov    QWORD PTR [rsp+0x8],rdi
  4025bb:	jg     402920 <__sprintf_chk@plt+0x1740>
  4025c1:	mov    rdi,QWORD PTR [rsp+0x8]
  4025c6:	mov    rbx,rsi
  4025c9:	mov    rdx,rsi
  4025cc:	xor    eax,eax
  4025ce:	mov    esi,0x2
  4025d3:	xor    r12d,r12d
  4025d6:	call   401c90 <__sprintf_chk@plt+0xab0>
  4025db:	mov    rax,QWORD PTR [rbx+0x10]
  4025df:	mov    rdx,QWORD PTR [rbx+0x38]
  4025e3:	mov    QWORD PTR [rip+0x3c06],rax        # 4061f0 <error@@Base+0x2ea0>
  4025ea:	mov    rax,QWORD PTR [rbx+0x30]
  4025ee:	mov    rbp,rdx
  4025f1:	mov    QWORD PTR [rip+0x3be0],rdx        # 4061d8 <error@@Base+0x2e88>
  4025f8:	mov    QWORD PTR [rip+0x3bc1],rdx        # 4061c0 <error@@Base+0x2e70>
  4025ff:	mov    QWORD PTR [rip+0x3be2],rax        # 4061e8 <error@@Base+0x2e98>
  402606:	mov    rax,QWORD PTR [rbx+0x18]
  40260a:	sub    rbp,rax
  40260d:	mov    QWORD PTR [rip+0x3bcc],rax        # 4061e0 <error@@Base+0x2e90>
  402614:	neg    rax
  402617:	cmp    rbp,rax
  40261a:	mov    QWORD PTR [rip+0x3baf],rbp        # 4061d0 <error@@Base+0x2e80>
  402621:	mov    QWORD PTR [rip+0x3ba0],rax        # 4061c8 <error@@Base+0x2e78>
  402628:	jl     40277a <__sprintf_chk@plt+0x159a>
  40262e:	xchg   ax,ax
  402630:	mov    esi,0x30
  402635:	mov    edi,0x1
  40263a:	xor    eax,eax
  40263c:	mov    rbp,r12
  40263f:	call   403390 <error@@Base+0x40>
  402644:	neg    rbp
  402647:	lea    rdi,[rip+0x3bb2]        # 406200 <error@@Base+0x2eb0>
  40264e:	mov    rsi,rax
  402651:	mov    QWORD PTR [rax+0x10],rbp
  402655:	mov    rbx,rax
  402658:	xor    eax,eax
  40265a:	call   403790 <error@@Base+0x440>
  40265f:	mov    rax,QWORD PTR [rip+0x3b72]        # 4061d8 <error@@Base+0x2e88>
  402666:	cmp    QWORD PTR [rip+0x3b73],rax        # 4061e0 <error@@Base+0x2e90>
  40266d:	jg     402840 <__sprintf_chk@plt+0x1660>
  402673:	mov    r13,QWORD PTR [rip+0x3b56]        # 4061d0 <error@@Base+0x2e80>
  40267a:	mov    r14,rbp
  40267d:	mov    rax,r12
  402680:	cmp    r13,rbp
  402683:	cmovle r14,r13
  402687:	cmp    QWORD PTR [rip+0x3b3a],r12        # 4061c8 <error@@Base+0x2e78>
  40268e:	cmovge rax,QWORD PTR [rip+0x3b32]        # 4061c8 <error@@Base+0x2e78>
  402696:	cmp    r14,rax
  402699:	jl     4026e5 <__sprintf_chk@plt+0x1505>
  40269b:	nop    DWORD PTR [rax+rax*1+0x0]
  4026a0:	xor    eax,eax
  4026a2:	mov    rdi,r14
  4026a5:	mov    rsi,rbx
  4026a8:	call   402180 <__sprintf_chk@plt+0xfa0>
  4026ad:	sub    r14,0x1
  4026b1:	cmp    QWORD PTR [rip+0x3b10],r12        # 4061c8 <error@@Base+0x2e78>
  4026b8:	mov    rax,r12
  4026bb:	cmovge rax,QWORD PTR [rip+0x3b05]        # 4061c8 <error@@Base+0x2e78>
  4026c3:	cmp    r14,rax
  4026c6:	jge    4026a0 <__sprintf_chk@plt+0x14c0>
  4026c8:	mov    r13,QWORD PTR [rip+0x3b01]        # 4061d0 <error@@Base+0x2e80>
  4026cf:	jmp    4026e5 <__sprintf_chk@plt+0x1505>
  4026d1:	nop    DWORD PTR [rax+0x0]
  4026d8:	mov    rsi,rbx
  4026db:	mov    rdi,r13
  4026de:	xor    eax,eax
  4026e0:	call   402180 <__sprintf_chk@plt+0xfa0>
  4026e5:	add    r13,0x1
  4026e9:	cmp    QWORD PTR [rip+0x3ad0],rbp        # 4061c0 <error@@Base+0x2e70>
  4026f0:	mov    rax,rbp
  4026f3:	cmovle rax,QWORD PTR [rip+0x3ac5]        # 4061c0 <error@@Base+0x2e70>
  4026fb:	cmp    r13,rax
  4026fe:	jle    4026d8 <__sprintf_chk@plt+0x14f8>
  402700:	mov    rdi,QWORD PTR [rip+0x3b31]        # 406238 <error@@Base+0x2ee8>
  402707:	xor    eax,eax
  402709:	mov    esi,0x2
  40270e:	lea    r13,[rip+0x3b0b]        # 406220 <error@@Base+0x2ed0>
  402715:	xor    ebp,ebp
  402717:	call   403390 <error@@Base+0x40>
  40271c:	mov    r15,QWORD PTR [rip+0x3afd]        # 406220 <error@@Base+0x2ed0>
  402723:	mov    QWORD PTR [rbx+0x28],rax
  402727:	mov    r14,r13
  40272a:	test   r15,r15
  40272d:	je     40275f <__sprintf_chk@plt+0x157f>
  40272f:	nop
  402730:	mov    rsi,r15
  402733:	xor    eax,eax
  402735:	mov    rdi,r14
  402738:	call   403880 <error@@Base+0x530>
  40273d:	movzx  ecx,WORD PTR [r15+0x10]
  402742:	mov    rax,QWORD PTR [rbx+0x28]
  402746:	mov    rdi,r15
  402749:	mov    WORD PTR [rax+rbp*1],cx
  40274d:	add    rbp,0x2
  402751:	call   401030 <free@plt>
  402756:	mov    r15,QWORD PTR [r13+0x0]
  40275a:	test   r15,r15
  40275d:	jne    402730 <__sprintf_chk@plt+0x1550>
  40275f:	mov    rax,QWORD PTR [rip+0x3a62]        # 4061c8 <error@@Base+0x2e78>
  402766:	mov    rbp,QWORD PTR [rip+0x3a63]        # 4061d0 <error@@Base+0x2e80>
  40276d:	sub    r12,0x1
  402771:	cmp    rbp,rax
  402774:	jge    402630 <__sprintf_chk@plt+0x1450>
  40277a:	mov    rbx,QWORD PTR [rip+0x3a87]        # 406208 <error@@Base+0x2eb8>
  402781:	lea    r13,[rsp+0x18]
  402786:	lea    r14,[rsp+0x20]
  40278b:	test   rbx,rbx
  40278e:	jne    4027cf <__sprintf_chk@plt+0x15ef>
  402790:	jmp    4028d5 <__sprintf_chk@plt+0x16f5>
  402795:	nop    DWORD PTR [rax]
  402798:	lea    rdi,[rip+0x3a61]        # 406200 <error@@Base+0x2eb0>
  40279f:	mov    rsi,rbx
  4027a2:	xor    eax,eax
  4027a4:	call   403880 <error@@Base+0x530>
  4027a9:	mov    rdi,QWORD PTR [rbx+0x28]
  4027ad:	call   401030 <free@plt>
  4027b2:	mov    rdi,rbx
  4027b5:	call   401030 <free@plt>
  4027ba:	mov    rbx,QWORD PTR [rip+0x3a47]        # 406208 <error@@Base+0x2eb8>
  4027c1:	mov    rbp,QWORD PTR [rsp+0x18]
  4027c6:	test   rbx,rbx
  4027c9:	je     4028d5 <__sprintf_chk@plt+0x16f5>
  4027cf:	mov    rdx,rbp
  4027d2:	sub    rdx,QWORD PTR [rbx+0x18]
  4027d6:	mov    rax,QWORD PTR [rbx+0x28]
  4027da:	mov    rsi,QWORD PTR [rbx]
  4027dd:	mov    rdi,rbp
  4027e0:	movzx  r12d,WORD PTR [rax+rdx*2]
  4027e5:	xor    eax,eax
  4027e7:	mov    rdx,r13
  4027ea:	call   401bc0 <__sprintf_chk@plt+0x9e0>
  4027ef:	mov    QWORD PTR [rsp+0x20],rax
  4027f4:	cmp    r12,rax
  4027f7:	jle    402798 <__sprintf_chk@plt+0x15b8>
  4027f9:	add    rax,rbp
  4027fc:	mov    esi,0x8
  402801:	mov    edi,0x1
  402806:	mov    QWORD PTR [rsp+0x28],rax
  40280b:	xor    eax,eax
  40280d:	call   403390 <error@@Base+0x40>
  402812:	mov    r9,rax
  402815:	mov    rax,QWORD PTR [rsp+0x8]
  40281a:	mov    r8,r12
  40281d:	sub    r8,QWORD PTR [rsp+0x20]
  402822:	mov    rcx,r14
  402825:	mov    esi,0x2
  40282a:	mov    rdx,QWORD PTR [rax]
  40282d:	mov    rdi,rax
  402830:	xor    eax,eax
  402832:	call   401d90 <__sprintf_chk@plt+0xbb0>
  402837:	jmp    402798 <__sprintf_chk@plt+0x15b8>
  40283c:	nop    DWORD PTR [rax+0x0]
  402840:	mov    rax,QWORD PTR [rip+0x3989]        # 4061d0 <error@@Base+0x2e80>
  402847:	mov    rdx,rbp
  40284a:	cmp    r12,rax
  40284d:	mov    r13,rax
  402850:	cmovge r13,r12
  402854:	cmp    QWORD PTR [rip+0x3965],rbp        # 4061c0 <error@@Base+0x2e70>
  40285b:	cmovle rdx,QWORD PTR [rip+0x395d]        # 4061c0 <error@@Base+0x2e70>
  402863:	cmp    r13,rdx
  402866:	jg     40289f <__sprintf_chk@plt+0x16bf>
  402868:	nop    DWORD PTR [rax+rax*1+0x0]
  402870:	xor    eax,eax
  402872:	mov    rdi,r13
  402875:	mov    rsi,rbx
  402878:	call   402180 <__sprintf_chk@plt+0xfa0>
  40287d:	add    r13,0x1
  402881:	cmp    QWORD PTR [rip+0x3938],rbp        # 4061c0 <error@@Base+0x2e70>
  402888:	mov    rax,rbp
  40288b:	cmovle rax,QWORD PTR [rip+0x392d]        # 4061c0 <error@@Base+0x2e70>
  402893:	cmp    r13,rax
  402896:	jle    402870 <__sprintf_chk@plt+0x1690>
  402898:	mov    rax,QWORD PTR [rip+0x3931]        # 4061d0 <error@@Base+0x2e80>
  40289f:	lea    rbp,[rax-0x1]
  4028a3:	jmp    4028b9 <__sprintf_chk@plt+0x16d9>
  4028a5:	nop    DWORD PTR [rax]
  4028a8:	mov    rdi,rbp
  4028ab:	mov    rsi,rbx
  4028ae:	xor    eax,eax
  4028b0:	sub    rbp,0x1
  4028b4:	call   402180 <__sprintf_chk@plt+0xfa0>
  4028b9:	cmp    QWORD PTR [rip+0x3908],r12        # 4061c8 <error@@Base+0x2e78>
  4028c0:	mov    rax,r12
  4028c3:	cmovge rax,QWORD PTR [rip+0x38fd]        # 4061c8 <error@@Base+0x2e78>
  4028cb:	cmp    rbp,rax
  4028ce:	jge    4028a8 <__sprintf_chk@plt+0x16c8>
  4028d0:	jmp    402700 <__sprintf_chk@plt+0x1520>
  4028d5:	mov    rax,QWORD PTR [rsp+0x8]
  4028da:	xor    ecx,ecx
  4028dc:	mov    rax,QWORD PTR [rax]
  4028df:	test   rax,rax
  4028e2:	je     402901 <__sprintf_chk@plt+0x1721>
  4028e4:	nop    DWORD PTR [rax+0x0]
  4028e8:	mov    rdx,QWORD PTR [rax+0x18]
  4028ec:	test   rdx,rdx
  4028ef:	je     4028f8 <__sprintf_chk@plt+0x1718>
  4028f1:	add    rcx,0x1
  4028f5:	mov    QWORD PTR [rdx],rcx
  4028f8:	mov    rax,QWORD PTR [rax+0x8]
  4028fc:	test   rax,rax
  4028ff:	jne    4028e8 <__sprintf_chk@plt+0x1708>
  402901:	mov    rax,QWORD PTR [rsp+0x38]
  402906:	xor    rax,QWORD PTR fs:0x28
  40290f:	jne    40292c <__sprintf_chk@plt+0x174c>
  402911:	add    rsp,0x48
  402915:	pop    rbx
  402916:	pop    rbp
  402917:	pop    r12
  402919:	pop    r13
  40291b:	pop    r14
  40291d:	pop    r15
  40291f:	ret    
  402920:	lea    rdi,[rip+0x1798]        # 4040bf <error@@Base+0xd6f>
  402927:	call   403350 <error@@Base>
  40292c:	call   4010a0 <__stack_chk_fail@plt>
  402931:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40293b:	nop    DWORD PTR [rax+rax*1+0x0]
  402940:	push   r12
  402942:	push   rbp
  402943:	mov    r12d,esi
  402946:	push   rbx
  402947:	mov    ebp,edx
  402949:	mov    rbx,rdi
  40294c:	mov    esi,0x18
  402951:	mov    edi,0x1
  402956:	xor    eax,eax
  402958:	call   403390 <error@@Base+0x40>
  40295d:	mov    rdi,rbx
  402960:	mov    BYTE PTR [rax+0x10],r12b
  402964:	mov    DWORD PTR [rax+0x14],ebp
  402967:	pop    rbx
  402968:	pop    rbp
  402969:	pop    r12
  40296b:	mov    rsi,rax
  40296e:	xor    eax,eax
  402970:	jmp    403790 <error@@Base+0x440>
  402975:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402980:	push   r15
  402982:	push   r14
  402984:	push   r13
  402986:	push   r12
  402988:	push   rbp
  402989:	push   rbx
  40298a:	sub    rsp,0xc8
  402991:	mov    rcx,QWORD PTR fs:0x28
  40299a:	mov    QWORD PTR [rsp+0xb8],rcx
  4029a2:	xor    ecx,ecx
  4029a4:	cmp    BYTE PTR [rdx],0x0
  4029a7:	mov    QWORD PTR [rsp+0x20],rdi
  4029ac:	mov    rdi,rsi
  4029af:	mov    QWORD PTR [rsp+0x30],rdx
  4029b4:	je     4029bf <__sprintf_chk@plt+0x17df>
  4029b6:	test   rsi,rsi
  4029b9:	je     402d5f <__sprintf_chk@plt+0x1b7f>
  4029bf:	mov    rax,QWORD PTR [rsp+0x20]
  4029c4:	lea    rsi,[rip+0x173c]        # 404107 <error@@Base+0xdb7>
  4029cb:	mov    rax,QWORD PTR [rax+0x8]
  4029cf:	mov    QWORD PTR [rsp+0x38],rax
  4029d4:	xor    eax,eax
  4029d6:	call   403430 <error@@Base+0xe0>
  4029db:	mov    rbp,rax
  4029de:	mov    rax,QWORD PTR [rsp+0x30]
  4029e3:	cmp    BYTE PTR [rax],0x0
  4029e6:	jne    402c7d <__sprintf_chk@plt+0x1a9d>
  4029ec:	mov    rcx,QWORD PTR [rsp+0x30]
  4029f1:	mov    rdi,rbp
  4029f4:	mov    eax,DWORD PTR [rcx+0x4]
  4029f7:	movzx  r15d,BYTE PTR [rcx+0x1]
  4029fc:	test   eax,eax
  4029fe:	mov    ebx,eax
  402a00:	mov    eax,0x5e
  402a05:	cmovne eax,ebx
  402a08:	mov    DWORD PTR [rsp+0x2c],eax
  402a0c:	call   4011d0 <getc@plt>
  402a11:	cmp    eax,0xffffffff
  402a14:	je     402b18 <__sprintf_chk@plt+0x1938>
  402a1a:	mov    r13,QWORD PTR [rip+0x35cf]        # 405ff0 <error@@Base+0x2ca0>
  402a21:	movsxd rdx,eax
  402a24:	movsx  r14,BYTE PTR [r13+rdx*1+0x0]
  402a2a:	test   r14,r14
  402a2d:	jle    402d43 <__sprintf_chk@plt+0x1b63>
  402a33:	lea    rcx,[rsp+0x50]
  402a38:	xor    ebx,ebx
  402a3a:	mov    r12,r14
  402a3d:	mov    QWORD PTR [rsp+0x8],rcx
  402a42:	lea    rcx,[rsp+0x51]
  402a47:	mov    QWORD PTR [rsp+0x18],rcx
  402a4c:	lea    rcx,[rsp+0x4c]
  402a51:	mov    QWORD PTR [rsp+0x10],rcx
  402a56:	jmp    402a94 <__sprintf_chk@plt+0x18b4>
  402a58:	nop    DWORD PTR [rax+rax*1+0x0]
  402a60:	mov    rdi,QWORD PTR [rsp+0x20]
  402a65:	movsx  esi,bl
  402a68:	xor    eax,eax
  402a6a:	xor    ebx,ebx
  402a6c:	call   402940 <__sprintf_chk@plt+0x1760>
  402a71:	mov    rdi,rbp
  402a74:	call   4011d0 <getc@plt>
  402a79:	cmp    eax,0xffffffff
  402a7c:	je     402b18 <__sprintf_chk@plt+0x1938>
  402a82:	movsxd rdx,eax
  402a85:	movsx  r12,BYTE PTR [r13+rdx*1+0x0]
  402a8b:	test   r12,r12
  402a8e:	jle    402d43 <__sprintf_chk@plt+0x1b63>
  402a94:	cmp    r12,0x1
  402a98:	mov    BYTE PTR [rsp+0x50],al
  402a9c:	je     402ac8 <__sprintf_chk@plt+0x18e8>
  402a9e:	lea    r14,[r12-0x1]
  402aa3:	mov    rdi,QWORD PTR [rsp+0x18]
  402aa8:	mov    r8,rbp
  402aab:	mov    edx,0x1
  402ab0:	mov    esi,0x3
  402ab5:	mov    rcx,r14
  402ab8:	call   401160 <__fread_chk@plt>
  402abd:	cdqe   
  402abf:	cmp    r14,rax
  402ac2:	jne    402d51 <__sprintf_chk@plt+0x1b71>
  402ac8:	mov    rdx,QWORD PTR [rsp+0x10]
  402acd:	mov    rdi,QWORD PTR [rsp+0x8]
  402ad2:	mov    esi,0x4
  402ad7:	call   4010f0 <utf8proc_iterate@plt>
  402adc:	cdqe   
  402ade:	cmp    rax,r12
  402ae1:	jne    402d31 <__sprintf_chk@plt+0x1b51>
  402ae7:	test   r15b,r15b
  402aea:	mov    edx,DWORD PTR [rsp+0x4c]
  402aee:	je     402a60 <__sprintf_chk@plt+0x1880>
  402af4:	cmp    edx,DWORD PTR [rsp+0x2c]
  402af8:	jne    402a60 <__sprintf_chk@plt+0x1880>
  402afe:	mov    rdi,rbp
  402b01:	mov    ebx,0x1
  402b06:	call   4011d0 <getc@plt>
  402b0b:	cmp    eax,0xffffffff
  402b0e:	jne    402a82 <__sprintf_chk@plt+0x18a2>
  402b14:	nop    DWORD PTR [rax+0x0]
  402b18:	xor    eax,eax
  402b1a:	mov    rdi,rbp
  402b1d:	call   4031f0 <__sprintf_chk@plt+0x2010>
  402b22:	mov    rax,QWORD PTR [rsp+0x30]
  402b27:	cmp    BYTE PTR [rax+0x9],0x0
  402b2b:	je     402c1d <__sprintf_chk@plt+0x1a3d>
  402b31:	mov    rax,QWORD PTR [rsp+0x38]
  402b36:	test   rax,rax
  402b39:	je     402d24 <__sprintf_chk@plt+0x1b44>
  402b3f:	mov    rbp,QWORD PTR [rax+0x8]
  402b43:	test   rbp,rbp
  402b46:	je     402c1d <__sprintf_chk@plt+0x1a3d>
  402b4c:	mov    r12,rbp
  402b4f:	jmp    402b71 <__sprintf_chk@plt+0x1991>
  402b51:	nop    DWORD PTR [rax+0x0]
  402b58:	cmp    ebx,0xb
  402b5b:	jae    402b96 <__sprintf_chk@plt+0x19b6>
  402b5d:	cmp    ebx,0x9
  402b60:	je     402b96 <__sprintf_chk@plt+0x19b6>
  402b62:	cmp    ebx,0xa
  402b65:	jne    402b8a <__sprintf_chk@plt+0x19aa>
  402b67:	mov    r12,QWORD PTR [r12+0x8]
  402b6c:	test   r12,r12
  402b6f:	je     402ba9 <__sprintf_chk@plt+0x19c9>
  402b71:	mov    ebx,DWORD PTR [r12+0x14]
  402b76:	mov    edi,ebx
  402b78:	call   401050 <utf8proc_get_property@plt>
  402b7d:	cmp    ebx,0xd
  402b80:	jbe    402b58 <__sprintf_chk@plt+0x1978>
  402b82:	cmp    ebx,0xa0
  402b88:	je     402b96 <__sprintf_chk@plt+0x19b6>
  402b8a:	movzx  eax,WORD PTR [rax]
  402b8d:	sub    eax,0x17
  402b90:	cmp    ax,0x2
  402b94:	ja     402b67 <__sprintf_chk@plt+0x1987>
  402b96:	mov    DWORD PTR [r12+0x14],0x20
  402b9f:	mov    r12,QWORD PTR [r12+0x8]
  402ba4:	test   r12,r12
  402ba7:	jne    402b71 <__sprintf_chk@plt+0x1991>
  402ba9:	mov    r13,QWORD PTR [rsp+0x20]
  402bae:	jmp    402beb <__sprintf_chk@plt+0x1a0b>
  402bb0:	cmp    eax,0xa
  402bb3:	jne    402c0e <__sprintf_chk@plt+0x1a2e>
  402bb5:	test   r12b,r12b
  402bb8:	jne    402c0e <__sprintf_chk@plt+0x1a2e>
  402bba:	test   rbx,rbx
  402bbd:	je     402bce <__sprintf_chk@plt+0x19ee>
  402bbf:	test   r12b,r12b
  402bc2:	je     402bce <__sprintf_chk@plt+0x19ee>
  402bc4:	cmp    DWORD PTR [rbx+0x14],0x20
  402bc8:	je     402cf4 <__sprintf_chk@plt+0x1b14>
  402bce:	mov    rsi,rbp
  402bd1:	xor    eax,eax
  402bd3:	mov    rdi,r13
  402bd6:	call   403880 <error@@Base+0x530>
  402bdb:	mov    rdi,rbp
  402bde:	mov    rbp,rbx
  402be1:	call   401030 <free@plt>
  402be6:	test   rbx,rbx
  402be9:	je     402c1d <__sprintf_chk@plt+0x1a3d>
  402beb:	mov    eax,DWORD PTR [rbp+0x14]
  402bee:	mov    rbx,QWORD PTR [rbp+0x8]
  402bf2:	cmp    eax,0x20
  402bf5:	jne    402bb0 <__sprintf_chk@plt+0x19d0>
  402bf7:	test   r12b,r12b
  402bfa:	je     402bba <__sprintf_chk@plt+0x19da>
  402bfc:	test   rbx,rbx
  402bff:	je     402bba <__sprintf_chk@plt+0x19da>
  402c01:	mov    edx,DWORD PTR [rbx+0x14]
  402c04:	cmp    edx,0x20
  402c07:	je     402bba <__sprintf_chk@plt+0x19da>
  402c09:	cmp    edx,0xa
  402c0c:	je     402bba <__sprintf_chk@plt+0x19da>
  402c0e:	cmp    eax,0xa
  402c11:	mov    rbp,rbx
  402c14:	setne  r12b
  402c18:	test   rbx,rbx
  402c1b:	jne    402beb <__sprintf_chk@plt+0x1a0b>
  402c1d:	mov    rax,QWORD PTR [rsp+0x30]
  402c22:	cmp    BYTE PTR [rax+0xa],0x0
  402c26:	je     402c54 <__sprintf_chk@plt+0x1a74>
  402c28:	mov    rax,QWORD PTR [rsp+0x38]
  402c2d:	test   rax,rax
  402c30:	je     402d17 <__sprintf_chk@plt+0x1b37>
  402c36:	mov    rbx,QWORD PTR [rax+0x8]
  402c3a:	jmp    402c4f <__sprintf_chk@plt+0x1a6f>
  402c3c:	nop    DWORD PTR [rax+0x0]
  402c40:	mov    edi,DWORD PTR [rbx+0x14]
  402c43:	call   4010c0 <utf8proc_tolower@plt>
  402c48:	mov    DWORD PTR [rbx+0x14],eax
  402c4b:	mov    rbx,QWORD PTR [rbx+0x8]
  402c4f:	test   rbx,rbx
  402c52:	jne    402c40 <__sprintf_chk@plt+0x1a60>
  402c54:	mov    rax,QWORD PTR [rsp+0xb8]
  402c5c:	xor    rax,QWORD PTR fs:0x28
  402c65:	jne    402d74 <__sprintf_chk@plt+0x1b94>
  402c6b:	add    rsp,0xc8
  402c72:	pop    rbx
  402c73:	pop    rbp
  402c74:	pop    r12
  402c76:	pop    r13
  402c78:	pop    r14
  402c7a:	pop    r15
  402c7c:	ret    
  402c7d:	lea    rsi,[rsp+0x50]
  402c82:	mov    rdx,rbp
  402c85:	mov    rbx,rsi
  402c88:	mov    esi,0x63
  402c8d:	mov    rdi,rbx
  402c90:	mov    r12,rbx
  402c93:	call   4010e0 <fgets@plt>
  402c98:	test   rax,rax
  402c9b:	je     402d00 <__sprintf_chk@plt+0x1b20>
  402c9d:	lea    rdi,[rip+0x14ac]        # 404150 <error@@Base+0xe00>
  402ca4:	mov    ecx,0x33
  402ca9:	mov    rsi,rbx
  402cac:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402cae:	jne    402d00 <__sprintf_chk@plt+0x1b20>
  402cb0:	lea    r13,[rip+0x14d1]        # 404188 <error@@Base+0xe38>
  402cb7:	xor    ebx,ebx
  402cb9:	nop    DWORD PTR [rax+0x0]
  402cc0:	mov    rdx,rbp
  402cc3:	mov    esi,0x63
  402cc8:	mov    rdi,r12
  402ccb:	call   4010e0 <fgets@plt>
  402cd0:	test   rax,rax
  402cd3:	je     402ced <__sprintf_chk@plt+0x1b0d>
  402cd5:	mov    ecx,0x38
  402cda:	mov    rsi,r12
  402cdd:	mov    rdi,r13
  402ce0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402ce2:	jne    402cc0 <__sprintf_chk@plt+0x1ae0>
  402ce4:	add    ebx,0x1
  402ce7:	cmp    bx,0x1
  402ceb:	jle    402cc0 <__sprintf_chk@plt+0x1ae0>
  402ced:	mov    eax,0x1
  402cf2:	jmp    402d0a <__sprintf_chk@plt+0x1b2a>
  402cf4:	movzx  eax,BYTE PTR [rbp+0x10]
  402cf8:	or     BYTE PTR [rbx+0x10],al
  402cfb:	jmp    402bce <__sprintf_chk@plt+0x19ee>
  402d00:	mov    rdi,rbp
  402d03:	call   4010b0 <rewind@plt>
  402d08:	xor    eax,eax
  402d0a:	mov    rcx,QWORD PTR [rsp+0x30]
  402d0f:	mov    BYTE PTR [rcx+0xb],al
  402d12:	jmp    4029ec <__sprintf_chk@plt+0x180c>
  402d17:	mov    rax,QWORD PTR [rsp+0x20]
  402d1c:	mov    rbx,QWORD PTR [rax]
  402d1f:	jmp    402c4f <__sprintf_chk@plt+0x1a6f>
  402d24:	mov    rax,QWORD PTR [rsp+0x20]
  402d29:	mov    rbp,QWORD PTR [rax]
  402d2c:	jmp    402b43 <__sprintf_chk@plt+0x1963>
  402d31:	mov    rdi,rax
  402d34:	call   4011b0 <utf8proc_errmsg@plt>
  402d39:	mov    rdi,rax
  402d3c:	xor    eax,eax
  402d3e:	call   403350 <error@@Base>
  402d43:	lea    rdi,[rip+0x13a7]        # 4040f1 <error@@Base+0xda1>
  402d4a:	xor    eax,eax
  402d4c:	call   403350 <error@@Base>
  402d51:	lea    rdi,[rip+0x13b1]        # 404109 <error@@Base+0xdb9>
  402d58:	xor    eax,eax
  402d5a:	call   403350 <error@@Base>
  402d5f:	lea    rsi,[rip+0x1371]        # 4040d7 <error@@Base+0xd87>
  402d66:	lea    rdi,[rip+0x1374]        # 4040e1 <error@@Base+0xd91>
  402d6d:	xor    eax,eax
  402d6f:	call   4033e0 <error@@Base+0x90>
  402d74:	call   4010a0 <__stack_chk_fail@plt>
  402d79:	nop    DWORD PTR [rax+0x0]
  402d80:	sub    rsp,0x8
  402d84:	call   401060 <utf8proc_encode_char@plt>
  402d89:	test   rax,rax
  402d8c:	jle    402d93 <__sprintf_chk@plt+0x1bb3>
  402d8e:	add    rsp,0x8
  402d92:	ret    
  402d93:	lea    rdi,[rip+0x1387]        # 404121 <error@@Base+0xdd1>
  402d9a:	xor    eax,eax
  402d9c:	call   403350 <error@@Base>
  402da1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402dac:	nop    DWORD PTR [rax+0x0]
  402db0:	push   r13
  402db2:	push   r12
  402db4:	xor    r12d,r12d
  402db7:	push   rbp
  402db8:	push   rbx
  402db9:	xor    ebx,ebx
  402dbb:	mov    r13d,esi
  402dbe:	mov    rbp,rdx
  402dc1:	sub    rsp,0x18
  402dc5:	test   dil,dil
  402dc8:	jne    402e80 <__sprintf_chk@plt+0x1ca0>
  402dce:	cmp    r13d,0xa
  402dd2:	je     402e40 <__sprintf_chk@plt+0x1c60>
  402dd4:	mov    edi,r13d
  402dd7:	call   401050 <utf8proc_get_property@plt>
  402ddc:	cmp    r13d,0x20
  402de0:	je     402ea8 <__sprintf_chk@plt+0x1cc8>
  402de6:	movzx  eax,WORD PTR [rax]
  402de9:	cmp    ax,0x1d
  402ded:	ja     402e04 <__sprintf_chk@plt+0x1c24>
  402def:	mov    edx,0x1
  402df4:	shlx   rax,rdx,rax
  402df9:	test   eax,0x207ffffe
  402dfe:	jne    402ea8 <__sprintf_chk@plt+0x1cc8>
  402e04:	cmp    r13d,0xff
  402e0b:	jbe    402f00 <__sprintf_chk@plt+0x1d20>
  402e11:	lea    rdi,[rbp+rbx*1+0x0]
  402e16:	lea    rcx,[rip+0x1327]        # 404144 <error@@Base+0xdf4>
  402e1d:	mov    r8d,r13d
  402e20:	add    rsp,0x18
  402e24:	mov    rdx,0xffffffffffffffff
  402e2b:	mov    esi,0x1
  402e30:	pop    rbx
  402e31:	pop    rbp
  402e32:	pop    r12
  402e34:	pop    r13
  402e36:	xor    eax,eax
  402e38:	jmp    4011e0 <__sprintf_chk@plt>
  402e3d:	nop    DWORD PTR [rax]
  402e40:	test   cl,cl
  402e42:	lea    rax,[rip+0x12ef]        # 404138 <error@@Base+0xde8>
  402e49:	lea    rcx,[rip+0x13c9]        # 404219 <error@@Base+0xec9>
  402e50:	lea    rdi,[rbp+rbx*1+0x0]
  402e55:	mov    rdx,0xffffffffffffffff
  402e5c:	mov    esi,0x1
  402e61:	cmovne rcx,rax
  402e65:	add    rsp,0x18
  402e69:	xor    eax,eax
  402e6b:	pop    rbx
  402e6c:	pop    rbp
  402e6d:	pop    r12
  402e6f:	pop    r13
  402e71:	jmp    4011e0 <__sprintf_chk@plt>
  402e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e80:	mov    rsi,rdx
  402e83:	mov    edi,0x5e
  402e88:	xor    eax,eax
  402e8a:	mov    DWORD PTR [rsp+0xc],ecx
  402e8e:	call   402d80 <__sprintf_chk@plt+0x1ba0>
  402e93:	mov    ecx,DWORD PTR [rsp+0xc]
  402e97:	movsx  r12w,al
  402e9c:	movsx  rbx,al
  402ea0:	jmp    402dce <__sprintf_chk@plt+0x1bee>
  402ea5:	nop    DWORD PTR [rax]
  402ea8:	mov    edi,r13d
  402eab:	call   401130 <utf8proc_category@plt>
  402eb0:	sub    eax,0x6
  402eb3:	cmp    eax,0x2
  402eb6:	ja     402ed2 <__sprintf_chk@plt+0x1cf2>
  402eb8:	lea    rsi,[rbp+rbx*1+0x0]
  402ebd:	mov    edi,0x25cc
  402ec2:	xor    eax,eax
  402ec4:	call   402d80 <__sprintf_chk@plt+0x1ba0>
  402ec9:	cbw    
  402ecb:	add    r12d,eax
  402ece:	movsx  rbx,r12w
  402ed2:	lea    rsi,[rbp+rbx*1+0x0]
  402ed7:	mov    edi,r13d
  402eda:	xor    eax,eax
  402edc:	call   402d80 <__sprintf_chk@plt+0x1ba0>
  402ee1:	cbw    
  402ee3:	add    r12d,eax
  402ee6:	movsx  r12,r12w
  402eea:	mov    BYTE PTR [rbp+r12*1+0x0],0x0
  402ef0:	add    rsp,0x18
  402ef4:	pop    rbx
  402ef5:	pop    rbp
  402ef6:	pop    r12
  402ef8:	pop    r13
  402efa:	ret    
  402efb:	nop    DWORD PTR [rax+rax*1+0x0]
  402f00:	lea    rdi,[rbp+rbx*1+0x0]
  402f05:	mov    r8d,r13d
  402f08:	lea    rcx,[rip+0x122e]        # 40413d <error@@Base+0xded>
  402f0f:	jmp    402e20 <__sprintf_chk@plt+0x1c40>
  402f14:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402f1f:	nop
  402f20:	push   r12
  402f22:	push   rbp
  402f23:	mov    rbp,rdi
  402f26:	push   rbx
  402f27:	mov    rdi,rsi
  402f2a:	lea    rsi,[rip+0x121a]        # 40414b <error@@Base+0xdfb>
  402f31:	mov    rbx,rdx
  402f34:	sub    rsp,0x20
  402f38:	mov    rax,QWORD PTR fs:0x28
  402f41:	mov    QWORD PTR [rsp+0x18],rax
  402f46:	xor    eax,eax
  402f48:	call   403430 <error@@Base+0xe0>
  402f4d:	test   rbx,rbx
  402f50:	mov    r12,rax
  402f53:	je     402fa7 <__sprintf_chk@plt+0x1dc7>
  402f55:	lea    rdi,[rip+0x11f4]        # 404150 <error@@Base+0xe00>
  402f5c:	mov    rcx,rax
  402f5f:	mov    edx,0x37
  402f64:	mov    esi,0x1
  402f69:	call   401190 <fwrite@plt>
  402f6e:	lea    rdi,[rip+0x1213]        # 404188 <error@@Base+0xe38>
  402f75:	mov    rcx,r12
  402f78:	mov    edx,0x37
  402f7d:	mov    esi,0x1
  402f82:	call   401190 <fwrite@plt>
  402f87:	mov    rdi,r12
  402f8a:	xor    eax,eax
  402f8c:	call   rbx
  402f8e:	lea    rdi,[rip+0x11f3]        # 404188 <error@@Base+0xe38>
  402f95:	mov    rcx,r12
  402f98:	mov    edx,0x37
  402f9d:	mov    esi,0x1
  402fa2:	call   401190 <fwrite@plt>
  402fa7:	mov    rbx,QWORD PTR [rbp+0x0]
  402fab:	lea    rbp,[rsp+0xf]
  402fb0:	test   rbx,rbx
  402fb3:	je     402fdf <__sprintf_chk@plt+0x1dff>
  402fb5:	nop    DWORD PTR [rax]
  402fb8:	movsx  edi,BYTE PTR [rbx+0x10]
  402fbc:	mov    esi,DWORD PTR [rbx+0x14]
  402fbf:	xor    ecx,ecx
  402fc1:	xor    eax,eax
  402fc3:	mov    rdx,rbp
  402fc6:	call   402db0 <__sprintf_chk@plt+0x1bd0>
  402fcb:	mov    rsi,r12
  402fce:	mov    rdi,rbp
  402fd1:	call   4010d0 <fputs@plt>
  402fd6:	mov    rbx,QWORD PTR [rbx+0x8]
  402fda:	test   rbx,rbx
  402fdd:	jne    402fb8 <__sprintf_chk@plt+0x1dd8>
  402fdf:	xor    eax,eax
  402fe1:	mov    rdi,r12
  402fe4:	call   4031f0 <__sprintf_chk@plt+0x2010>
  402fe9:	mov    rax,QWORD PTR [rsp+0x18]
  402fee:	xor    rax,QWORD PTR fs:0x28
  402ff7:	jne    403002 <__sprintf_chk@plt+0x1e22>
  402ff9:	add    rsp,0x20
  402ffd:	pop    rbx
  402ffe:	pop    rbp
  402fff:	pop    r12
  403001:	ret    
  403002:	call   4010a0 <__stack_chk_fail@plt>
  403007:	nop    WORD PTR [rax+rax*1+0x0]
  403010:	push   r14
  403012:	push   r13
  403014:	push   r12
  403016:	push   rbp
  403017:	push   rbx
  403018:	sub    rsp,0x10
  40301c:	mov    rax,QWORD PTR fs:0x28
  403025:	mov    QWORD PTR [rsp+0x8],rax
  40302a:	xor    eax,eax
  40302c:	cmp    BYTE PTR [rsi],0x0
  40302f:	mov    DWORD PTR [rsp+0x4],0x0
  403037:	je     403088 <__sprintf_chk@plt+0x1ea8>
  403039:	mov    r14,rdi
  40303c:	mov    rbp,rsi
  40303f:	lea    r13,[rsp+0x4]
  403044:	mov    r12,0xffffffffffffffff
  40304b:	jmp    40306c <__sprintf_chk@plt+0x1e8c>
  40304d:	nop    DWORD PTR [rax]
  403050:	mov    edx,DWORD PTR [rsp+0x4]
  403054:	movsxd rbx,ebx
  403057:	xor    esi,esi
  403059:	xor    eax,eax
  40305b:	mov    rdi,r14
  40305e:	add    rbp,rbx
  403061:	call   402940 <__sprintf_chk@plt+0x1760>
  403066:	cmp    BYTE PTR [rbp+0x0],0x0
  40306a:	je     403088 <__sprintf_chk@plt+0x1ea8>
  40306c:	mov    rdx,r13
  40306f:	mov    rsi,r12
  403072:	mov    rdi,rbp
  403075:	call   4010f0 <utf8proc_iterate@plt>
  40307a:	test   eax,eax
  40307c:	mov    rbx,rax
  40307f:	jg     403050 <__sprintf_chk@plt+0x1e70>
  403081:	xor    eax,eax
  403083:	jmp    40308d <__sprintf_chk@plt+0x1ead>
  403085:	nop    DWORD PTR [rax]
  403088:	mov    eax,0x1
  40308d:	mov    rcx,QWORD PTR [rsp+0x8]
  403092:	xor    rcx,QWORD PTR fs:0x28
  40309b:	jne    4030aa <__sprintf_chk@plt+0x1eca>
  40309d:	add    rsp,0x10
  4030a1:	pop    rbx
  4030a2:	pop    rbp
  4030a3:	pop    r12
  4030a5:	pop    r13
  4030a7:	pop    r14
  4030a9:	ret    
  4030aa:	call   4010a0 <__stack_chk_fail@plt>
  4030af:	nop
  4030b0:	push   rbp
  4030b1:	push   rbx
  4030b2:	mov    ebx,edi
  4030b4:	movsx  ebx,bx
  4030b7:	sub    rsp,0x78
  4030bb:	mov    rax,QWORD PTR fs:0x28
  4030c4:	mov    QWORD PTR [rsp+0x68],rax
  4030c9:	xor    eax,eax
  4030cb:	mov    rbp,rsp
  4030ce:	call   401070 <getpid@plt>
  4030d3:	mov    r9d,eax
  4030d6:	mov    rax,0x406250
  4030dd:	sub    rsp,0x8
  4030e1:	push   rbx
  4030e2:	lea    rcx,[rip+0x10d7]        # 4041c0 <error@@Base+0xe70>
  4030e9:	mov    edx,0x64
  4030ee:	mov    esi,0x1
  4030f3:	mov    rdi,rbp
  4030f6:	mov    r8,QWORD PTR [rax]
  4030f9:	xor    eax,eax
  4030fb:	call   4011e0 <__sprintf_chk@plt>
  403100:	mov    rdi,rbp
  403103:	call   4011c0 <strdup@plt>
  403108:	pop    rdx
  403109:	pop    rcx
  40310a:	mov    rdx,QWORD PTR [rsp+0x68]
  40310f:	xor    rdx,QWORD PTR fs:0x28
  403118:	jne    403121 <__sprintf_chk@plt+0x1f41>
  40311a:	add    rsp,0x78
  40311e:	pop    rbx
  40311f:	pop    rbp
  403120:	ret    
  403121:	call   4010a0 <__stack_chk_fail@plt>
  403126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403130:	mov    rax,0x406258
  403137:	push   r12
  403139:	mov    r12d,edi
  40313c:	push   rbp
  40313d:	push   rbx
  40313e:	mov    rdx,QWORD PTR [rax]
  403141:	test   rdx,rdx
  403144:	je     40314a <__sprintf_chk@plt+0x1f6a>
  403146:	xor    eax,eax
  403148:	call   rdx
  40314a:	cmp    WORD PTR [rip+0x30f0],0x0        # 406242 <error@@Base+0x2ef2>
  403152:	mov    ebx,0x1
  403157:	jle    40318b <__sprintf_chk@plt+0x1fab>
  403159:	nop    DWORD PTR [rax+0x0]
  403160:	movsx  edi,bx
  403163:	xor    eax,eax
  403165:	add    ebx,0x1
  403168:	call   4030b0 <__sprintf_chk@plt+0x1ed0>
  40316d:	mov    rdi,rax
  403170:	mov    rbp,rax
  403173:	xor    eax,eax
  403175:	call   401040 <unlink@plt>
  40317a:	mov    rdi,rbp
  40317d:	call   401030 <free@plt>
  403182:	cmp    WORD PTR [rip+0x30b9],bx        # 406242 <error@@Base+0x2ef2>
  403189:	jge    403160 <__sprintf_chk@plt+0x1f80>
  40318b:	mov    edi,r12d
  40318e:	call   401180 <exit@plt>
  403193:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40319e:	xchg   ax,ax
  4031a0:	movzx  edx,BYTE PTR [rdi]
  4031a3:	test   dl,dl
  4031a5:	je     4031eb <__sprintf_chk@plt+0x200b>
  4031a7:	movzx  ecx,BYTE PTR [rsi]
  4031aa:	cmp    cl,dl
  4031ac:	jne    4031d9 <__sprintf_chk@plt+0x1ff9>
  4031ae:	xor    eax,eax
  4031b0:	jmp    4031c0 <__sprintf_chk@plt+0x1fe0>
  4031b2:	nop    WORD PTR [rax+rax*1+0x0]
  4031b8:	movzx  ecx,BYTE PTR [rsi+rax*1]
  4031bc:	cmp    dl,cl
  4031be:	jne    4031d9 <__sprintf_chk@plt+0x1ff9>
  4031c0:	add    rax,0x1
  4031c4:	movzx  edx,BYTE PTR [rdi+rax*1]
  4031c8:	mov    rcx,rax
  4031cb:	test   dl,dl
  4031cd:	jne    4031b8 <__sprintf_chk@plt+0x1fd8>
  4031cf:	movzx  ecx,BYTE PTR [rsi+rcx*1]
  4031d3:	xor    edx,edx
  4031d5:	test   cl,cl
  4031d7:	je     4031e8 <__sprintf_chk@plt+0x2008>
  4031d9:	cmp    dl,cl
  4031db:	sbb    eax,eax
  4031dd:	or     eax,0x1
  4031e0:	ret    
  4031e1:	nop    DWORD PTR [rax+0x0]
  4031e8:	xor    eax,eax
  4031ea:	ret    
  4031eb:	xor    ecx,ecx
  4031ed:	jmp    4031cf <__sprintf_chk@plt+0x1fef>
  4031ef:	nop
  4031f0:	mov    rax,QWORD PTR [rip+0x2de1]        # 405fd8 <error@@Base+0x2c88>
  4031f7:	cmp    QWORD PTR [rax],rdi
  4031fa:	je     403210 <__sprintf_chk@plt+0x2030>
  4031fc:	mov    rax,QWORD PTR [rip+0x2dcd]        # 405fd0 <error@@Base+0x2c80>
  403203:	cmp    rdi,QWORD PTR [rax]
  403206:	je     403210 <__sprintf_chk@plt+0x2030>
  403208:	jmp    401080 <fclose@plt>
  40320d:	nop    DWORD PTR [rax]
  403210:	repz ret 
  403212:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40321d:	nop    DWORD PTR [rax]
  403220:	sub    rsp,0xa8
  403227:	mov    rsi,rdi
  40322a:	mov    edi,0x1
  40322f:	mov    rdx,rsp
  403232:	mov    rax,QWORD PTR fs:0x28
  40323b:	mov    QWORD PTR [rsp+0x98],rax
  403243:	xor    eax,eax
  403245:	call   401140 <__xstat@plt>
  40324a:	test   eax,eax
  40324c:	sete   al
  40324f:	mov    rcx,QWORD PTR [rsp+0x98]
  403257:	xor    rcx,QWORD PTR fs:0x28
  403260:	jne    40326a <__sprintf_chk@plt+0x208a>
  403262:	add    rsp,0xa8
  403269:	ret    
  40326a:	call   4010a0 <__stack_chk_fail@plt>
  40326f:	nop
  403270:	movzx  eax,WORD PTR [rip+0x2fcb]        # 406242 <error@@Base+0x2ef2>
  403277:	push   rbx
  403278:	lea    edi,[rax+0x1]
  40327b:	xor    eax,eax
  40327d:	mov    WORD PTR [rip+0x2fbe],di        # 406242 <error@@Base+0x2ef2>
  403284:	movsx  edi,di
  403287:	call   4030b0 <__sprintf_chk@plt+0x1ed0>
  40328c:	mov    rbx,rax
  40328f:	mov    rdi,rax
  403292:	xor    eax,eax
  403294:	call   401040 <unlink@plt>
  403299:	mov    rax,rbx
  40329c:	pop    rbx
  40329d:	ret    
  40329e:	xchg   ax,ax
  4032a0:	push   rbx
  4032a1:	mov    rbx,rdi
  4032a4:	call   401090 <strlen@plt>
  4032a9:	sub    ax,0x1
  4032ad:	movsx  rdx,ax
  4032b1:	js     4032da <__sprintf_chk@plt+0x20fa>
  4032b3:	cmp    BYTE PTR [rbx+rdx*1],0x2f
  4032b7:	jne    4032ca <__sprintf_chk@plt+0x20ea>
  4032b9:	jmp    4032da <__sprintf_chk@plt+0x20fa>
  4032bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4032c0:	movsx  rdx,ax
  4032c4:	cmp    BYTE PTR [rbx+rdx*1],0x2f
  4032c8:	je     4032da <__sprintf_chk@plt+0x20fa>
  4032ca:	sub    eax,0x1
  4032cd:	cmp    ax,0xffff
  4032d1:	jne    4032c0 <__sprintf_chk@plt+0x20e0>
  4032d3:	mov    rdx,0xffffffffffffffff
  4032da:	lea    rax,[rbx+rdx*1+0x1]
  4032df:	pop    rbx
  4032e0:	ret    
  4032e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4032ec:	nop    DWORD PTR [rax+0x0]
  4032f0:	sub    rsp,0x8
  4032f4:	xor    edi,edi
  4032f6:	xor    eax,eax
  4032f8:	call   403130 <__sprintf_chk@plt+0x1f50>
  4032fd:	nop    DWORD PTR [rax]
  403300:	sub    rsp,0x8
  403304:	mov    rax,0x406248
  40330b:	mov    rdx,QWORD PTR [rax]
  40330e:	test   rdx,rdx
  403311:	je     40331e <__sprintf_chk@plt+0x213e>
  403313:	xor    eax,eax
  403315:	call   rdx
  403317:	xor    eax,eax
  403319:	call   4032f0 <__sprintf_chk@plt+0x2110>
  40331e:	mov    rax,0x406250
  403325:	mov    r8,rdi
  403328:	lea    rdx,[rip+0xe9f]        # 4041ce <error@@Base+0xe7e>
  40332f:	mov    esi,0x1
  403334:	mov    rcx,QWORD PTR [rax]
  403337:	mov    rax,QWORD PTR [rip+0x2cba]        # 405ff8 <error@@Base+0x2ca8>
  40333e:	mov    rdi,QWORD PTR [rax]
  403341:	xor    eax,eax
  403343:	call   4011a0 <__fprintf_chk@plt>
  403348:	jmp    403317 <__sprintf_chk@plt+0x2137>
  40334a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403350 <error@@Base>:
  403350:	sub    rsp,0x8
  403354:	mov    rax,0x406250
  40335b:	mov    r8,rdi
  40335e:	lea    rdx,[rip+0xe78]        # 4041dd <error@@Base+0xe8d>
  403365:	mov    esi,0x1
  40336a:	mov    rcx,QWORD PTR [rax]
  40336d:	mov    rax,QWORD PTR [rip+0x2c84]        # 405ff8 <error@@Base+0x2ca8>
  403374:	mov    rdi,QWORD PTR [rax]
  403377:	xor    eax,eax
  403379:	call   4011a0 <__fprintf_chk@plt>
  40337e:	mov    rax,0x406198
  403385:	mov    edi,DWORD PTR [rax]
  403387:	xor    eax,eax
  403389:	call   403130 <__sprintf_chk@plt+0x1f50>
  40338e:	xchg   ax,ax
  403390:	sub    rsp,0x8
  403394:	call   401100 <calloc@plt>
  403399:	test   rax,rax
  40339c:	je     4033a3 <error@@Base+0x53>
  40339e:	add    rsp,0x8
  4033a2:	ret    
  4033a3:	lea    rdi,[rip+0xe3b]        # 4041e5 <error@@Base+0xe95>
  4033aa:	call   403350 <error@@Base>
  4033af:	nop
  4033b0:	cmp    BYTE PTR [rip+0x2e89],0x0        # 406240 <error@@Base+0x2ef0>
  4033b7:	je     4033bb <error@@Base+0x6b>
  4033b9:	repz ret 
  4033bb:	lea    rdi,[rip+0xe3d]        # 4041ff <error@@Base+0xeaf>
  4033c2:	sub    rsp,0x8
  4033c6:	xor    eax,eax
  4033c8:	mov    BYTE PTR [rip+0x2e71],0x1        # 406240 <error@@Base+0x2ef0>
  4033cf:	call   403350 <error@@Base>
  4033d4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4033df:	nop
  4033e0:	sub    rsp,0x8
  4033e4:	mov    rax,0x406250
  4033eb:	mov    r8,rdi
  4033ee:	lea    rdx,[rip+0xe19]        # 40420e <error@@Base+0xebe>
  4033f5:	mov    r9,rsi
  4033f8:	mov    esi,0x1
  4033fd:	mov    rcx,QWORD PTR [rax]
  403400:	mov    rax,QWORD PTR [rip+0x2bf1]        # 405ff8 <error@@Base+0x2ca8>
  403407:	mov    rdi,QWORD PTR [rax]
  40340a:	xor    eax,eax
  40340c:	call   4011a0 <__fprintf_chk@plt>
  403411:	mov    rax,0x406198
  403418:	mov    edi,DWORD PTR [rax]
  40341a:	xor    eax,eax
  40341c:	call   403130 <__sprintf_chk@plt+0x1f50>
  403421:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40342c:	nop    DWORD PTR [rax+0x0]
  403430:	test   rdi,rdi
  403433:	je     403458 <error@@Base+0x108>
  403435:	push   rbp
  403436:	push   rbx
  403437:	mov    rbp,rsi
  40343a:	mov    rbx,rdi
  40343d:	sub    rsp,0x8
  403441:	call   401170 <fopen@plt>
  403446:	test   rax,rax
  403449:	je     403470 <error@@Base+0x120>
  40344b:	add    rsp,0x8
  40344f:	pop    rbx
  403450:	pop    rbp
  403451:	ret    
  403452:	nop    WORD PTR [rax+rax*1+0x0]
  403458:	cmp    BYTE PTR [rsi],0x72
  40345b:	je     403490 <error@@Base+0x140>
  40345d:	mov    rax,QWORD PTR [rip+0x2b6c]        # 405fd0 <error@@Base+0x2c80>
  403464:	mov    rax,QWORD PTR [rax]
  403467:	ret    
  403468:	nop    DWORD PTR [rax+rax*1+0x0]
  403470:	cmp    BYTE PTR [rbp+0x0],0x77
  403474:	mov    rsi,rbx
  403477:	je     4034a0 <error@@Base+0x150>
  403479:	lea    rdi,[rip+0xdb1]        # 404231 <error@@Base+0xee1>
  403480:	xor    eax,eax
  403482:	call   4033e0 <error@@Base+0x90>
  403487:	nop    WORD PTR [rax+rax*1+0x0]
  403490:	mov    rax,QWORD PTR [rip+0x2b41]        # 405fd8 <error@@Base+0x2c88>
  403497:	mov    rax,QWORD PTR [rax]
  40349a:	ret    
  40349b:	nop    DWORD PTR [rax+rax*1+0x0]
  4034a0:	lea    rdi,[rip+0xd74]        # 40421b <error@@Base+0xecb>
  4034a7:	call   4033e0 <error@@Base+0x90>
  4034ac:	nop    DWORD PTR [rax+0x0]
  4034b0:	push   r15
  4034b2:	push   r14
  4034b4:	xor    eax,eax
  4034b6:	push   r13
  4034b8:	push   r12
  4034ba:	mov    r15,rsi
  4034bd:	push   rbp
  4034be:	push   rbx
  4034bf:	mov    rbx,rdi
  4034c2:	sub    rsp,0x38
  4034c6:	mov    QWORD PTR [rsp+0x20],rdi
  4034cb:	mov    rdi,QWORD PTR [rsi]
  4034ce:	mov    QWORD PTR [rsp+0x28],rdx
  4034d3:	mov    QWORD PTR [rsp+0x8],rcx
  4034d8:	call   4032a0 <__sprintf_chk@plt+0x20c0>
  4034dd:	mov    rcx,0x406250
  4034e4:	lea    rsi,[rip+0xfffffffffffffec5]        # 4033b0 <error@@Base+0x60>
  4034eb:	mov    edi,0x2
  4034f0:	mov    QWORD PTR [rcx],rax
  4034f3:	call   401120 <__sysv_signal@plt>
  4034f8:	lea    rsi,[rip+0xfffffffffffffeb1]        # 4033b0 <error@@Base+0x60>
  4034ff:	mov    edi,0xf
  403504:	call   401120 <__sysv_signal@plt>
  403509:	mov    r9d,DWORD PTR [rbx]
  40350c:	cmp    r9d,0x1
  403510:	je     4036bc <error@@Base+0x36c>
  403516:	mov    rdx,QWORD PTR [rsp+0x8]
  40351b:	jle    4036c8 <error@@Base+0x378>
  403521:	mov    r13d,0x1
  403527:	xor    r12d,r12d
  40352a:	mov    ebx,0x1
  40352f:	mov    r8d,r13d
  403532:	mov    r14,rdx
  403535:	mov    r13d,r9d
  403538:	jmp    40355c <error@@Base+0x20c>
  40353a:	nop    WORD PTR [rax+rax*1+0x0]
  403540:	movsx  rax,r12w
  403544:	add    r12d,0x1
  403548:	mov    QWORD PTR [r15+rax*8],rbp
  40354c:	add    ebx,0x1
  40354f:	movsx  r8d,bx
  403553:	cmp    r8d,r13d
  403556:	jge    403670 <error@@Base+0x320>
  40355c:	movsx  rax,bx
  403560:	mov    rbp,QWORD PTR [r15+rax*8]
  403564:	lea    r9,[rax*8+0x0]
  40356c:	cmp    BYTE PTR [rbp+0x0],0x2d
  403570:	jne    403540 <error@@Base+0x1f0>
  403572:	movzx  edx,BYTE PTR [rbp+0x1]
  403576:	mov    DWORD PTR [rsp+0x14],r8d
  40357b:	mov    QWORD PTR [rsp+0x18],r9
  403580:	test   dl,dl
  403582:	mov    BYTE PTR [rsp+0x8],dl
  403586:	je     403540 <error@@Base+0x1f0>
  403588:	mov    rdi,rbp
  40358b:	call   401090 <strlen@plt>
  403590:	mov    ecx,0x6
  403595:	cmp    rax,0x6
  403599:	lea    rsi,[rip+0xca5]        # 404245 <error@@Base+0xef5>
  4035a0:	cmovle rcx,rax
  4035a4:	mov    rdi,rbp
  4035a7:	cmp    rcx,rcx
  4035aa:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4035ac:	je     4036cd <error@@Base+0x37d>
  4035b2:	mov    r8d,DWORD PTR [rsp+0x14]
  4035b7:	xor    edi,edi
  4035b9:	movzx  edx,BYTE PTR [rsp+0x8]
  4035be:	add    r8d,0x1
  4035c2:	cmp    r8d,r13d
  4035c5:	jge    4035d1 <error@@Base+0x281>
  4035c7:	mov    r9,QWORD PTR [rsp+0x18]
  4035cc:	mov    rdi,QWORD PTR [r15+r9*1+0x8]
  4035d1:	test   r14,r14
  4035d4:	je     40360a <error@@Base+0x2ba>
  4035d6:	movzx  eax,BYTE PTR [r14]
  4035da:	test   al,al
  4035dc:	je     40360a <error@@Base+0x2ba>
  4035de:	cmp    al,dl
  4035e0:	je     403620 <error@@Base+0x2d0>
  4035e2:	xor    eax,eax
  4035e4:	jmp    4035f4 <error@@Base+0x2a4>
  4035e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4035f0:	cmp    dl,cl
  4035f2:	je     403628 <error@@Base+0x2d8>
  4035f4:	add    eax,0x1
  4035f7:	movsx  rcx,ax
  4035fb:	lea    rcx,[rcx+rcx*2]
  4035ff:	lea    rsi,[r14+rcx*8]
  403603:	movzx  ecx,BYTE PTR [rsi]
  403606:	test   cl,cl
  403608:	jne    4035f0 <error@@Base+0x2a0>
  40360a:	lea    rdi,[rip+0xc3a]        # 40424b <error@@Base+0xefb>
  403611:	mov    rsi,rbp
  403614:	xor    eax,eax
  403616:	call   4033e0 <error@@Base+0x90>
  40361b:	nop    DWORD PTR [rax+rax*1+0x0]
  403620:	mov    rsi,r14
  403623:	nop    DWORD PTR [rax+rax*1+0x0]
  403628:	mov    rax,QWORD PTR [rsi+0x8]
  40362c:	test   rax,rax
  40362f:	je     403690 <error@@Base+0x340>
  403631:	test   rdi,rdi
  403634:	movzx  edx,BYTE PTR [rbp+0x2]
  403638:	jne    40363e <error@@Base+0x2ee>
  40363a:	test   dl,dl
  40363c:	je     403690 <error@@Base+0x340>
  40363e:	cmp    QWORD PTR [rax],0x0
  403642:	jne    4036d9 <error@@Base+0x389>
  403648:	lea    rcx,[rbp+0x2]
  40364c:	test   dl,dl
  40364e:	cmovne rdi,rcx
  403652:	mov    QWORD PTR [rax],rdi
  403655:	cmp    BYTE PTR [rbp+0x2],0x0
  403659:	lea    eax,[rbx+0x1]
  40365c:	cmove  ebx,eax
  40365f:	add    ebx,0x1
  403662:	movsx  r8d,bx
  403666:	cmp    r8d,r13d
  403669:	jl     40355c <error@@Base+0x20c>
  40366f:	nop
  403670:	movsx  r12d,r12w
  403674:	mov    rax,QWORD PTR [rsp+0x20]
  403679:	mov    DWORD PTR [rax],r12d
  40367c:	add    rsp,0x38
  403680:	pop    rbx
  403681:	pop    rbp
  403682:	pop    r12
  403684:	pop    r13
  403686:	pop    r14
  403688:	pop    r15
  40368a:	ret    
  40368b:	nop    DWORD PTR [rax+rax*1+0x0]
  403690:	mov    rax,QWORD PTR [rsi+0x10]
  403694:	test   rax,rax
  403697:	je     40360a <error@@Base+0x2ba>
  40369d:	cmp    BYTE PTR [rbp+0x2],0x0
  4036a1:	jne    40360a <error@@Base+0x2ba>
  4036a7:	cmp    BYTE PTR [rax],0x0
  4036aa:	jne    4036d9 <error@@Base+0x389>
  4036ac:	mov    BYTE PTR [rax],0x1
  4036af:	mov    rax,QWORD PTR [rsp+0x20]
  4036b4:	mov    r13d,DWORD PTR [rax]
  4036b7:	jmp    40354c <error@@Base+0x1fc>
  4036bc:	mov    rax,0x40619c
  4036c3:	cmp    BYTE PTR [rax],0x0
  4036c6:	jne    4036cd <error@@Base+0x37d>
  4036c8:	xor    r12d,r12d
  4036cb:	jmp    403674 <error@@Base+0x324>
  4036cd:	mov    rdi,QWORD PTR [rsp+0x28]
  4036d2:	xor    eax,eax
  4036d4:	call   403300 <__sprintf_chk@plt+0x2120>
  4036d9:	lea    rdi,[rip+0xb7a]        # 40425a <error@@Base+0xf0a>
  4036e0:	mov    rsi,rbp
  4036e3:	xor    eax,eax
  4036e5:	call   4033e0 <error@@Base+0x90>
  4036ea:	nop    WORD PTR [rax+rax*1+0x0]
  4036f0:	mov    rax,0x406250
  4036f7:	mov    r8,rdi
  4036fa:	lea    rdx,[rip+0xb0d]        # 40420e <error@@Base+0xebe>
  403701:	mov    r9,rsi
  403704:	mov    esi,0x1
  403709:	mov    rcx,QWORD PTR [rax]
  40370c:	mov    rax,QWORD PTR [rip+0x28e5]        # 405ff8 <error@@Base+0x2ca8>
  403713:	mov    rdi,QWORD PTR [rax]
  403716:	xor    eax,eax
  403718:	jmp    4011a0 <__fprintf_chk@plt>
  40371d:	nop    DWORD PTR [rax]
  403720:	mov    QWORD PTR [rdi+0x8],0x0
  403728:	mov    QWORD PTR [rdi],0x0
  40372f:	mov    QWORD PTR [rdi+0x10],0x0
  403737:	mov    QWORD PTR [rdi+0x18],0x0
  40373f:	ret    
  403740:	push   rbx
  403741:	mov    rax,QWORD PTR [rdi]
  403744:	mov    rbx,rdi
  403747:	mov    QWORD PTR [rsi],0x0
  40374e:	test   rax,rax
  403751:	mov    QWORD PTR [rsi+0x8],rax
  403755:	mov    QWORD PTR [rdi],rsi
  403758:	je     403780 <error@@Base+0x430>
  40375a:	mov    QWORD PTR [rax],rsi
  40375d:	mov    rdi,QWORD PTR [rbx+0x10]
  403761:	test   rdi,rdi
  403764:	je     403773 <error@@Base+0x423>
  403766:	call   401030 <free@plt>
  40376b:	mov    QWORD PTR [rbx+0x10],0x0
  403773:	add    QWORD PTR [rbx+0x18],0x1
  403778:	pop    rbx
  403779:	ret    
  40377a:	nop    WORD PTR [rax+rax*1+0x0]
  403780:	mov    QWORD PTR [rdi+0x8],rsi
  403784:	jmp    40375d <error@@Base+0x40d>
  403786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403790:	push   rbx
  403791:	mov    rax,QWORD PTR [rdi+0x8]
  403795:	mov    rbx,rdi
  403798:	mov    QWORD PTR [rsi+0x8],0x0
  4037a0:	test   rax,rax
  4037a3:	mov    QWORD PTR [rsi],rax
  4037a6:	je     4037d0 <error@@Base+0x480>
  4037a8:	mov    QWORD PTR [rax+0x8],rsi
  4037ac:	mov    rdi,QWORD PTR [rbx+0x10]
  4037b0:	mov    QWORD PTR [rbx+0x8],rsi
  4037b4:	test   rdi,rdi
  4037b7:	je     4037c6 <error@@Base+0x476>
  4037b9:	call   401030 <free@plt>
  4037be:	mov    QWORD PTR [rbx+0x10],0x0
  4037c6:	add    QWORD PTR [rbx+0x18],0x1
  4037cb:	pop    rbx
  4037cc:	ret    
  4037cd:	nop    DWORD PTR [rax]
  4037d0:	mov    QWORD PTR [rdi],rsi
  4037d3:	jmp    4037ac <error@@Base+0x45c>
  4037d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4037e0:	mov    rax,QWORD PTR [rdx]
  4037e3:	push   rbx
  4037e4:	mov    rbx,rdi
  4037e7:	mov    QWORD PTR [rsi+0x8],rdx
  4037eb:	test   rax,rax
  4037ee:	mov    QWORD PTR [rsi],rax
  4037f1:	je     403820 <error@@Base+0x4d0>
  4037f3:	mov    QWORD PTR [rax+0x8],rsi
  4037f7:	mov    rdi,QWORD PTR [rbx+0x10]
  4037fb:	mov    QWORD PTR [rdx],rsi
  4037fe:	test   rdi,rdi
  403801:	je     403810 <error@@Base+0x4c0>
  403803:	call   401030 <free@plt>
  403808:	mov    QWORD PTR [rbx+0x10],0x0
  403810:	add    QWORD PTR [rbx+0x18],0x1
  403815:	pop    rbx
  403816:	ret    
  403817:	nop    WORD PTR [rax+rax*1+0x0]
  403820:	mov    QWORD PTR [rdi],rsi
  403823:	jmp    4037f7 <error@@Base+0x4a7>
  403825:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403830:	mov    rax,QWORD PTR [rsi+0x8]
  403834:	push   rbx
  403835:	mov    rbx,rdi
  403838:	mov    QWORD PTR [rdx],rsi
  40383b:	test   rax,rax
  40383e:	mov    QWORD PTR [rdx+0x8],rax
  403842:	mov    QWORD PTR [rsi+0x8],rdx
  403846:	je     403870 <error@@Base+0x520>
  403848:	mov    QWORD PTR [rax],rdx
  40384b:	mov    rdi,QWORD PTR [rbx+0x10]
  40384f:	test   rdi,rdi
  403852:	je     403861 <error@@Base+0x511>
  403854:	call   401030 <free@plt>
  403859:	mov    QWORD PTR [rbx+0x10],0x0
  403861:	add    QWORD PTR [rbx+0x18],0x1
  403866:	pop    rbx
  403867:	ret    
  403868:	nop    DWORD PTR [rax+rax*1+0x0]
  403870:	mov    QWORD PTR [rdi+0x8],rdx
  403874:	jmp    40384b <error@@Base+0x4fb>
  403876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403880:	mov    rax,QWORD PTR [rsi]
  403883:	push   rbx
  403884:	mov    rbx,rdi
  403887:	mov    rdx,QWORD PTR [rsi+0x8]
  40388b:	test   rax,rax
  40388e:	je     4038d0 <error@@Base+0x580>
  403890:	mov    QWORD PTR [rax+0x8],rdx
  403894:	mov    rdx,QWORD PTR [rsi+0x8]
  403898:	test   rdx,rdx
  40389b:	je     4038e0 <error@@Base+0x590>
  40389d:	mov    QWORD PTR [rdx],rax
  4038a0:	mov    rdi,QWORD PTR [rbx+0x10]
  4038a4:	mov    QWORD PTR [rsi+0x8],0x0
  4038ac:	mov    QWORD PTR [rsi],0x0
  4038b3:	test   rdi,rdi
  4038b6:	je     4038c5 <error@@Base+0x575>
  4038b8:	call   401030 <free@plt>
  4038bd:	mov    QWORD PTR [rbx+0x10],0x0
  4038c5:	sub    QWORD PTR [rbx+0x18],0x1
  4038ca:	pop    rbx
  4038cb:	ret    
  4038cc:	nop    DWORD PTR [rax+0x0]
  4038d0:	test   rdx,rdx
  4038d3:	mov    QWORD PTR [rdi],rdx
  4038d6:	jne    40389d <error@@Base+0x54d>
  4038d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4038e0:	mov    QWORD PTR [rbx+0x8],rax
  4038e4:	jmp    4038a0 <error@@Base+0x550>
  4038e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038f0:	cmp    QWORD PTR [rdi+0x10],0x0
  4038f5:	je     403900 <error@@Base+0x5b0>
  4038f7:	ret    
  4038f8:	nop    DWORD PTR [rax+rax*1+0x0]
  403900:	mov    rax,QWORD PTR [rdi+0x18]
  403904:	test   rax,rax
  403907:	je     4038f7 <error@@Base+0x5a7>
  403909:	push   rbx
  40390a:	mov    esi,0x8
  40390f:	mov    rbx,rdi
  403912:	mov    rdi,rax
  403915:	xor    eax,eax
  403917:	call   403390 <error@@Base+0x40>
  40391c:	mov    rdx,QWORD PTR [rbx]
  40391f:	mov    QWORD PTR [rbx+0x10],rax
  403923:	test   rdx,rdx
  403926:	je     403940 <error@@Base+0x5f0>
  403928:	nop    DWORD PTR [rax+rax*1+0x0]
  403930:	mov    QWORD PTR [rax],rdx
  403933:	mov    rdx,QWORD PTR [rdx+0x8]
  403937:	add    rax,0x8
  40393b:	test   rdx,rdx
  40393e:	jne    403930 <error@@Base+0x5e0>
  403940:	pop    rbx
  403941:	ret    
  403942:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40394d:	nop    DWORD PTR [rax]
  403950:	push   r12
  403952:	push   rbp
  403953:	push   rbx
  403954:	mov    rbx,QWORD PTR [rdi]
  403957:	test   rbx,rbx
  40395a:	je     403986 <error@@Base+0x636>
  40395c:	mov    rbp,rdi
  40395f:	mov    r12,rsi
  403962:	nop    WORD PTR [rax+rax*1+0x0]
  403968:	mov    rsi,rbx
  40396b:	xor    eax,eax
  40396d:	mov    rdi,rbp
  403970:	call   403880 <error@@Base+0x530>
  403975:	mov    rdi,rbx
  403978:	xor    eax,eax
  40397a:	call   r12
  40397d:	mov    rbx,QWORD PTR [rbp+0x0]
  403981:	test   rbx,rbx
  403984:	jne    403968 <error@@Base+0x618>
  403986:	pop    rbx
  403987:	pop    rbp
  403988:	pop    r12
  40398a:	ret    
  40398b:	nop    DWORD PTR [rax+rax*1+0x0]
  403990:	endbr64 
  403994:	push   r15
  403996:	lea    r15,[rip+0x243b]        # 405dd8 <error@@Base+0x2a88>
  40399d:	push   r14
  40399f:	mov    r14,rdx
  4039a2:	push   r13
  4039a4:	mov    r13,rsi
  4039a7:	push   r12
  4039a9:	mov    r12d,edi
  4039ac:	push   rbp
  4039ad:	lea    rbp,[rip+0x242c]        # 405de0 <error@@Base+0x2a90>
  4039b4:	push   rbx
  4039b5:	sub    rbp,r15
  4039b8:	sub    rsp,0x8
  4039bc:	call   401000 <free@plt-0x30>
  4039c1:	sar    rbp,0x3
  4039c5:	je     4039e6 <error@@Base+0x696>
  4039c7:	xor    ebx,ebx
  4039c9:	nop    DWORD PTR [rax+0x0]
  4039d0:	mov    rdx,r14
  4039d3:	mov    rsi,r13
  4039d6:	mov    edi,r12d
  4039d9:	call   QWORD PTR [r15+rbx*8]
  4039dd:	add    rbx,0x1
  4039e1:	cmp    rbp,rbx
  4039e4:	jne    4039d0 <error@@Base+0x680>
  4039e6:	add    rsp,0x8
  4039ea:	pop    rbx
  4039eb:	pop    rbp
  4039ec:	pop    r12
  4039ee:	pop    r13
  4039f0:	pop    r14
  4039f2:	pop    r15
  4039f4:	ret    
  4039f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403a00:	endbr64 
  403a04:	ret    

Disassembly of section .fini:

0000000000403a08 <.fini>:
  403a08:	endbr64 
  403a0c:	sub    rsp,0x8
  403a10:	add    rsp,0x8
  403a14:	ret    
