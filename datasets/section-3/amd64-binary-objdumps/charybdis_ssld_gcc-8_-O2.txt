
../repos/charybdis/ssld/.libs/ssld:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x4fd9]        # 406fe8 <open@plt+0x47e8>
  40200f:	test   rax,rax
  402012:	je     402016 <dup2@plt-0x40a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <.plt>:
  402020:	push   QWORD PTR [rip+0x4fe2]        # 407008 <open@plt+0x4808>
  402026:	bnd jmp QWORD PTR [rip+0x4fe3]        # 407010 <open@plt+0x4810>
  40202d:	nop    DWORD PTR [rax]
  402030:	endbr64 
  402034:	push   0x0
  402039:	bnd jmp 402020 <dup2@plt-0x400>
  40203f:	nop
  402040:	endbr64 
  402044:	push   0x1
  402049:	bnd jmp 402020 <dup2@plt-0x400>
  40204f:	nop
  402050:	endbr64 
  402054:	push   0x2
  402059:	bnd jmp 402020 <dup2@plt-0x400>
  40205f:	nop
  402060:	endbr64 
  402064:	push   0x3
  402069:	bnd jmp 402020 <dup2@plt-0x400>
  40206f:	nop
  402070:	endbr64 
  402074:	push   0x4
  402079:	bnd jmp 402020 <dup2@plt-0x400>
  40207f:	nop
  402080:	endbr64 
  402084:	push   0x5
  402089:	bnd jmp 402020 <dup2@plt-0x400>
  40208f:	nop
  402090:	endbr64 
  402094:	push   0x6
  402099:	bnd jmp 402020 <dup2@plt-0x400>
  40209f:	nop
  4020a0:	endbr64 
  4020a4:	push   0x7
  4020a9:	bnd jmp 402020 <dup2@plt-0x400>
  4020af:	nop
  4020b0:	endbr64 
  4020b4:	push   0x8
  4020b9:	bnd jmp 402020 <dup2@plt-0x400>
  4020bf:	nop
  4020c0:	endbr64 
  4020c4:	push   0x9
  4020c9:	bnd jmp 402020 <dup2@plt-0x400>
  4020cf:	nop
  4020d0:	endbr64 
  4020d4:	push   0xa
  4020d9:	bnd jmp 402020 <dup2@plt-0x400>
  4020df:	nop
  4020e0:	endbr64 
  4020e4:	push   0xb
  4020e9:	bnd jmp 402020 <dup2@plt-0x400>
  4020ef:	nop
  4020f0:	endbr64 
  4020f4:	push   0xc
  4020f9:	bnd jmp 402020 <dup2@plt-0x400>
  4020ff:	nop
  402100:	endbr64 
  402104:	push   0xd
  402109:	bnd jmp 402020 <dup2@plt-0x400>
  40210f:	nop
  402110:	endbr64 
  402114:	push   0xe
  402119:	bnd jmp 402020 <dup2@plt-0x400>
  40211f:	nop
  402120:	endbr64 
  402124:	push   0xf
  402129:	bnd jmp 402020 <dup2@plt-0x400>
  40212f:	nop
  402130:	endbr64 
  402134:	push   0x10
  402139:	bnd jmp 402020 <dup2@plt-0x400>
  40213f:	nop
  402140:	endbr64 
  402144:	push   0x11
  402149:	bnd jmp 402020 <dup2@plt-0x400>
  40214f:	nop
  402150:	endbr64 
  402154:	push   0x12
  402159:	bnd jmp 402020 <dup2@plt-0x400>
  40215f:	nop
  402160:	endbr64 
  402164:	push   0x13
  402169:	bnd jmp 402020 <dup2@plt-0x400>
  40216f:	nop
  402170:	endbr64 
  402174:	push   0x14
  402179:	bnd jmp 402020 <dup2@plt-0x400>
  40217f:	nop
  402180:	endbr64 
  402184:	push   0x15
  402189:	bnd jmp 402020 <dup2@plt-0x400>
  40218f:	nop
  402190:	endbr64 
  402194:	push   0x16
  402199:	bnd jmp 402020 <dup2@plt-0x400>
  40219f:	nop
  4021a0:	endbr64 
  4021a4:	push   0x17
  4021a9:	bnd jmp 402020 <dup2@plt-0x400>
  4021af:	nop
  4021b0:	endbr64 
  4021b4:	push   0x18
  4021b9:	bnd jmp 402020 <dup2@plt-0x400>
  4021bf:	nop
  4021c0:	endbr64 
  4021c4:	push   0x19
  4021c9:	bnd jmp 402020 <dup2@plt-0x400>
  4021cf:	nop
  4021d0:	endbr64 
  4021d4:	push   0x1a
  4021d9:	bnd jmp 402020 <dup2@plt-0x400>
  4021df:	nop
  4021e0:	endbr64 
  4021e4:	push   0x1b
  4021e9:	bnd jmp 402020 <dup2@plt-0x400>
  4021ef:	nop
  4021f0:	endbr64 
  4021f4:	push   0x1c
  4021f9:	bnd jmp 402020 <dup2@plt-0x400>
  4021ff:	nop
  402200:	endbr64 
  402204:	push   0x1d
  402209:	bnd jmp 402020 <dup2@plt-0x400>
  40220f:	nop
  402210:	endbr64 
  402214:	push   0x1e
  402219:	bnd jmp 402020 <dup2@plt-0x400>
  40221f:	nop
  402220:	endbr64 
  402224:	push   0x1f
  402229:	bnd jmp 402020 <dup2@plt-0x400>
  40222f:	nop
  402230:	endbr64 
  402234:	push   0x20
  402239:	bnd jmp 402020 <dup2@plt-0x400>
  40223f:	nop
  402240:	endbr64 
  402244:	push   0x21
  402249:	bnd jmp 402020 <dup2@plt-0x400>
  40224f:	nop
  402250:	endbr64 
  402254:	push   0x22
  402259:	bnd jmp 402020 <dup2@plt-0x400>
  40225f:	nop
  402260:	endbr64 
  402264:	push   0x23
  402269:	bnd jmp 402020 <dup2@plt-0x400>
  40226f:	nop
  402270:	endbr64 
  402274:	push   0x24
  402279:	bnd jmp 402020 <dup2@plt-0x400>
  40227f:	nop
  402280:	endbr64 
  402284:	push   0x25
  402289:	bnd jmp 402020 <dup2@plt-0x400>
  40228f:	nop
  402290:	endbr64 
  402294:	push   0x26
  402299:	bnd jmp 402020 <dup2@plt-0x400>
  40229f:	nop
  4022a0:	endbr64 
  4022a4:	push   0x27
  4022a9:	bnd jmp 402020 <dup2@plt-0x400>
  4022af:	nop
  4022b0:	endbr64 
  4022b4:	push   0x28
  4022b9:	bnd jmp 402020 <dup2@plt-0x400>
  4022bf:	nop
  4022c0:	endbr64 
  4022c4:	push   0x29
  4022c9:	bnd jmp 402020 <dup2@plt-0x400>
  4022cf:	nop
  4022d0:	endbr64 
  4022d4:	push   0x2a
  4022d9:	bnd jmp 402020 <dup2@plt-0x400>
  4022df:	nop
  4022e0:	endbr64 
  4022e4:	push   0x2b
  4022e9:	bnd jmp 402020 <dup2@plt-0x400>
  4022ef:	nop
  4022f0:	endbr64 
  4022f4:	push   0x2c
  4022f9:	bnd jmp 402020 <dup2@plt-0x400>
  4022ff:	nop
  402300:	endbr64 
  402304:	push   0x2d
  402309:	bnd jmp 402020 <dup2@plt-0x400>
  40230f:	nop
  402310:	endbr64 
  402314:	push   0x2e
  402319:	bnd jmp 402020 <dup2@plt-0x400>
  40231f:	nop
  402320:	endbr64 
  402324:	push   0x2f
  402329:	bnd jmp 402020 <dup2@plt-0x400>
  40232f:	nop
  402330:	endbr64 
  402334:	push   0x30
  402339:	bnd jmp 402020 <dup2@plt-0x400>
  40233f:	nop
  402340:	endbr64 
  402344:	push   0x31
  402349:	bnd jmp 402020 <dup2@plt-0x400>
  40234f:	nop
  402350:	endbr64 
  402354:	push   0x32
  402359:	bnd jmp 402020 <dup2@plt-0x400>
  40235f:	nop
  402360:	endbr64 
  402364:	push   0x33
  402369:	bnd jmp 402020 <dup2@plt-0x400>
  40236f:	nop
  402370:	endbr64 
  402374:	push   0x34
  402379:	bnd jmp 402020 <dup2@plt-0x400>
  40237f:	nop
  402380:	endbr64 
  402384:	push   0x35
  402389:	bnd jmp 402020 <dup2@plt-0x400>
  40238f:	nop
  402390:	endbr64 
  402394:	push   0x36
  402399:	bnd jmp 402020 <dup2@plt-0x400>
  40239f:	nop
  4023a0:	endbr64 
  4023a4:	push   0x37
  4023a9:	bnd jmp 402020 <dup2@plt-0x400>
  4023af:	nop
  4023b0:	endbr64 
  4023b4:	push   0x38
  4023b9:	bnd jmp 402020 <dup2@plt-0x400>
  4023bf:	nop
  4023c0:	endbr64 
  4023c4:	push   0x39
  4023c9:	bnd jmp 402020 <dup2@plt-0x400>
  4023cf:	nop
  4023d0:	endbr64 
  4023d4:	push   0x3a
  4023d9:	bnd jmp 402020 <dup2@plt-0x400>
  4023df:	nop
  4023e0:	endbr64 
  4023e4:	push   0x3b
  4023e9:	bnd jmp 402020 <dup2@plt-0x400>
  4023ef:	nop
  4023f0:	endbr64 
  4023f4:	push   0x3c
  4023f9:	bnd jmp 402020 <dup2@plt-0x400>
  4023ff:	nop
  402400:	endbr64 
  402404:	push   0x3d
  402409:	bnd jmp 402020 <dup2@plt-0x400>
  40240f:	nop
  402410:	endbr64 
  402414:	push   0x3e
  402419:	bnd jmp 402020 <dup2@plt-0x400>
  40241f:	nop

Disassembly of section .plt.sec:

0000000000402420 <dup2@plt>:
  402420:	endbr64 
  402424:	bnd jmp QWORD PTR [rip+0x4bed]        # 407018 <open@plt+0x4818>
  40242b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402430 <rb_get_type@plt>:
  402430:	endbr64 
  402434:	bnd jmp QWORD PTR [rip+0x4be5]        # 407020 <open@plt+0x4820>
  40243b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402440 <zError@plt>:
  402440:	endbr64 
  402444:	bnd jmp QWORD PTR [rip+0x4bdd]        # 407028 <open@plt+0x4828>
  40244b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402450 <rb_event_addish@plt>:
  402450:	endbr64 
  402454:	bnd jmp QWORD PTR [rip+0x4bd5]        # 407030 <open@plt+0x4830>
  40245b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402460 <rb_ignore_errno@plt>:
  402460:	endbr64 
  402464:	bnd jmp QWORD PTR [rip+0x4bcd]        # 407038 <open@plt+0x4838>
  40246b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402470 <rb_lib_version@plt>:
  402470:	endbr64 
  402474:	bnd jmp QWORD PTR [rip+0x4bc5]        # 407040 <open@plt+0x4840>
  40247b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402480 <close@plt>:
  402480:	endbr64 
  402484:	bnd jmp QWORD PTR [rip+0x4bbd]        # 407048 <open@plt+0x4848>
  40248b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402490 <inflateEnd@plt>:
  402490:	endbr64 
  402494:	bnd jmp QWORD PTR [rip+0x4bb5]        # 407050 <open@plt+0x4850>
  40249b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024a0 <rb_setselect@plt>:
  4024a0:	endbr64 
  4024a4:	bnd jmp QWORD PTR [rip+0x4bad]        # 407058 <open@plt+0x4858>
  4024ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024b0 <rb_ssl_handshake_count@plt>:
  4024b0:	endbr64 
  4024b4:	bnd jmp QWORD PTR [rip+0x4ba5]        # 407060 <open@plt+0x4860>
  4024bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024c0 <rb_send_fd_buf@plt>:
  4024c0:	endbr64 
  4024c4:	bnd jmp QWORD PTR [rip+0x4b9d]        # 407068 <open@plt+0x4868>
  4024cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024d0 <exit@plt>:
  4024d0:	endbr64 
  4024d4:	bnd jmp QWORD PTR [rip+0x4b95]        # 407070 <open@plt+0x4870>
  4024db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024e0 <__assert_fail@plt>:
  4024e0:	endbr64 
  4024e4:	bnd jmp QWORD PTR [rip+0x4b8d]        # 407078 <open@plt+0x4878>
  4024eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024f0 <deflate@plt>:
  4024f0:	endbr64 
  4024f4:	bnd jmp QWORD PTR [rip+0x4b85]        # 407080 <open@plt+0x4880>
  4024fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402500 <deflateInit_@plt>:
  402500:	endbr64 
  402504:	bnd jmp QWORD PTR [rip+0x4b7d]        # 407088 <open@plt+0x4888>
  40250b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402510 <rb_set_nb@plt>:
  402510:	endbr64 
  402514:	bnd jmp QWORD PTR [rip+0x4b75]        # 407090 <open@plt+0x4890>
  40251b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402520 <__vsnprintf_chk@plt>:
  402520:	endbr64 
  402524:	bnd jmp QWORD PTR [rip+0x4b6d]        # 407098 <open@plt+0x4898>
  40252b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402530 <rb_strlcpy@plt>:
  402530:	endbr64 
  402534:	bnd jmp QWORD PTR [rip+0x4b65]        # 4070a0 <open@plt+0x48a0>
  40253b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402540 <rb_get_ssl_certfp@plt>:
  402540:	endbr64 
  402544:	bnd jmp QWORD PTR [rip+0x4b5d]        # 4070a8 <open@plt+0x48a8>
  40254b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402550 <inflate@plt>:
  402550:	endbr64 
  402554:	bnd jmp QWORD PTR [rip+0x4b55]        # 4070b0 <open@plt+0x48b0>
  40255b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402560 <rb_init_rawbuffers@plt>:
  402560:	endbr64 
  402564:	bnd jmp QWORD PTR [rip+0x4b4d]        # 4070b8 <open@plt+0x48b8>
  40256b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402570 <free@plt>:
  402570:	endbr64 
  402574:	bnd jmp QWORD PTR [rip+0x4b45]        # 4070c0 <open@plt+0x48c0>
  40257b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402580 <strlen@plt>:
  402580:	endbr64 
  402584:	bnd jmp QWORD PTR [rip+0x4b3d]        # 4070c8 <open@plt+0x48c8>
  40258b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402590 <rb_lib_loop@plt>:
  402590:	endbr64 
  402594:	bnd jmp QWORD PTR [rip+0x4b35]        # 4070d0 <open@plt+0x48d0>
  40259b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025a0 <deflateEnd@plt>:
  4025a0:	endbr64 
  4025a4:	bnd jmp QWORD PTR [rip+0x4b2d]        # 4070d8 <open@plt+0x48d8>
  4025ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025b0 <rb_read@plt>:
  4025b0:	endbr64 
  4025b4:	bnd jmp QWORD PTR [rip+0x4b25]        # 4070e0 <open@plt+0x48e0>
  4025bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025c0 <rb_set_type@plt>:
  4025c0:	endbr64 
  4025c4:	bnd jmp QWORD PTR [rip+0x4b1d]        # 4070e8 <open@plt+0x48e8>
  4025cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025d0 <rb_ssl_get_cipher@plt>:
  4025d0:	endbr64 
  4025d4:	bnd jmp QWORD PTR [rip+0x4b15]        # 4070f0 <open@plt+0x48f0>
  4025db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025e0 <strerror@plt>:
  4025e0:	endbr64 
  4025e4:	bnd jmp QWORD PTR [rip+0x4b0d]        # 4070f8 <open@plt+0x48f8>
  4025eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025f0 <sigaction@plt>:
  4025f0:	endbr64 
  4025f4:	bnd jmp QWORD PTR [rip+0x4b05]        # 407100 <open@plt+0x4900>
  4025fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402600 <rb_close@plt>:
  402600:	endbr64 
  402604:	bnd jmp QWORD PTR [rip+0x4afd]        # 407108 <open@plt+0x4908>
  40260b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402610 <rb_ssl_clear_handshake_count@plt>:
  402610:	endbr64 
  402614:	bnd jmp QWORD PTR [rip+0x4af5]        # 407110 <open@plt+0x4910>
  40261b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402620 <strtol@plt>:
  402620:	endbr64 
  402624:	bnd jmp QWORD PTR [rip+0x4aed]        # 407118 <open@plt+0x4918>
  40262b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402630 <rb_rawbuf_length@plt>:
  402630:	endbr64 
  402634:	bnd jmp QWORD PTR [rip+0x4ae5]        # 407120 <open@plt+0x4920>
  40263b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402640 <__strcpy_chk@plt>:
  402640:	endbr64 
  402644:	bnd jmp QWORD PTR [rip+0x4add]        # 407128 <open@plt+0x4928>
  40264b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402650 <rb_free_rawbuffer@plt>:
  402650:	endbr64 
  402654:	bnd jmp QWORD PTR [rip+0x4ad5]        # 407130 <open@plt+0x4930>
  40265b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402660 <rb_get_ssl_strerror@plt>:
  402660:	endbr64 
  402664:	bnd jmp QWORD PTR [rip+0x4acd]        # 407138 <open@plt+0x4938>
  40266b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402670 <rb_init_prng@plt>:
  402670:	endbr64 
  402674:	bnd jmp QWORD PTR [rip+0x4ac5]        # 407140 <open@plt+0x4940>
  40267b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402680 <getenv@plt>:
  402680:	endbr64 
  402684:	bnd jmp QWORD PTR [rip+0x4abd]        # 407148 <open@plt+0x4948>
  40268b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402690 <rb_outofmemory@plt>:
  402690:	endbr64 
  402694:	bnd jmp QWORD PTR [rip+0x4ab5]        # 407150 <open@plt+0x4950>
  40269b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026a0 <__errno_location@plt>:
  4026a0:	endbr64 
  4026a4:	bnd jmp QWORD PTR [rip+0x4aad]        # 407158 <open@plt+0x4958>
  4026ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026b0 <rb_supports_ssl@plt>:
  4026b0:	endbr64 
  4026b4:	bnd jmp QWORD PTR [rip+0x4aa5]        # 407160 <open@plt+0x4960>
  4026bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026c0 <sigaddset@plt>:
  4026c0:	endbr64 
  4026c4:	bnd jmp QWORD PTR [rip+0x4a9d]        # 407168 <open@plt+0x4968>
  4026cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026d0 <__stack_chk_fail@plt>:
  4026d0:	endbr64 
  4026d4:	bnd jmp QWORD PTR [rip+0x4a95]        # 407170 <open@plt+0x4970>
  4026db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026e0 <rb_ssl_start_connected@plt>:
  4026e0:	endbr64 
  4026e4:	bnd jmp QWORD PTR [rip+0x4a8d]        # 407178 <open@plt+0x4978>
  4026eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026f0 <rb_lib_init@plt>:
  4026f0:	endbr64 
  4026f4:	bnd jmp QWORD PTR [rip+0x4a85]        # 407180 <open@plt+0x4980>
  4026fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402700 <rb_new_rawbuffer@plt>:
  402700:	endbr64 
  402704:	bnd jmp QWORD PTR [rip+0x4a7d]        # 407188 <open@plt+0x4988>
  40270b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402710 <rb_open@plt>:
  402710:	endbr64 
  402714:	bnd jmp QWORD PTR [rip+0x4a75]        # 407190 <open@plt+0x4990>
  40271b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402720 <inflateInit_@plt>:
  402720:	endbr64 
  402724:	bnd jmp QWORD PTR [rip+0x4a6d]        # 407198 <open@plt+0x4998>
  40272b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402730 <rb_recv_fd_buf@plt>:
  402730:	endbr64 
  402734:	bnd jmp QWORD PTR [rip+0x4a65]        # 4071a0 <open@plt+0x49a0>
  40273b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402740 <rb_ssl_start_accepted@plt>:
  402740:	endbr64 
  402744:	bnd jmp QWORD PTR [rip+0x4a5d]        # 4071a8 <open@plt+0x49a8>
  40274b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402750 <calloc@plt>:
  402750:	endbr64 
  402754:	bnd jmp QWORD PTR [rip+0x4a55]        # 4071b0 <open@plt+0x49b0>
  40275b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402760 <strncpy@plt>:
  402760:	endbr64 
  402764:	bnd jmp QWORD PTR [rip+0x4a4d]        # 4071b8 <open@plt+0x49b8>
  40276b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402770 <getrlimit@plt>:
  402770:	endbr64 
  402774:	bnd jmp QWORD PTR [rip+0x4a45]        # 4071c0 <open@plt+0x49c0>
  40277b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402780 <rb_event_add@plt>:
  402780:	endbr64 
  402784:	bnd jmp QWORD PTR [rip+0x4a3d]        # 4071c8 <open@plt+0x49c8>
  40278b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402790 <__snprintf_chk@plt>:
  402790:	endbr64 
  402794:	bnd jmp QWORD PTR [rip+0x4a35]        # 4071d0 <open@plt+0x49d0>
  40279b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027a0 <sigemptyset@plt>:
  4027a0:	endbr64 
  4027a4:	bnd jmp QWORD PTR [rip+0x4a2d]        # 4071d8 <open@plt+0x49d8>
  4027ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027b0 <fwrite@plt>:
  4027b0:	endbr64 
  4027b4:	bnd jmp QWORD PTR [rip+0x4a25]        # 4071e0 <open@plt+0x49e0>
  4027bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027c0 <rb_rawbuf_append@plt>:
  4027c0:	endbr64 
  4027c4:	bnd jmp QWORD PTR [rip+0x4a1d]        # 4071e8 <open@plt+0x49e8>
  4027cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027d0 <rb_rawbuf_flush@plt>:
  4027d0:	endbr64 
  4027d4:	bnd jmp QWORD PTR [rip+0x4a15]        # 4071f0 <open@plt+0x49f0>
  4027db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027e0 <rb_setup_ssl_server@plt>:
  4027e0:	endbr64 
  4027e4:	bnd jmp QWORD PTR [rip+0x4a0d]        # 4071f8 <open@plt+0x49f8>
  4027eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027f0 <memcpy@plt>:
  4027f0:	endbr64 
  4027f4:	bnd jmp QWORD PTR [rip+0x4a05]        # 407200 <open@plt+0x4a00>
  4027fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402800 <open@plt>:
  402800:	endbr64 
  402804:	bnd jmp QWORD PTR [rip+0x49fd]        # 407208 <open@plt+0x4a08>
  40280b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000402810 <.text>:
  402810:	endbr64 
  402814:	push   r15
  402816:	mov    edi,0x7
  40281b:	push   r14
  40281d:	push   r13
  40281f:	push   r12
  402821:	push   rbp
  402822:	mov    ebp,0xffff
  402827:	push   rbx
  402828:	sub    rsp,0xc8
  40282f:	lea    rsi,[rsp+0x10]
  402834:	mov    rax,QWORD PTR fs:0x28
  40283d:	mov    QWORD PTR [rsp+0xb8],rax
  402845:	xor    eax,eax
  402847:	call   402770 <getrlimit@plt>
  40284c:	test   eax,eax
  40284e:	jne    402854 <open@plt+0x54>
  402850:	mov    ebp,DWORD PTR [rsp+0x10]
  402854:	lea    rdi,[rip+0x28ab]        # 405106 <open@plt+0x2906>
  40285b:	call   402680 <getenv@plt>
  402860:	lea    rdi,[rip+0x28a6]        # 40510d <open@plt+0x290d>
  402867:	mov    r12,rax
  40286a:	call   402680 <getenv@plt>
  40286f:	lea    rdi,[rip+0x28a0]        # 405116 <open@plt+0x2916>
  402876:	mov    rbx,rax
  402879:	call   402680 <getenv@plt>
  40287e:	test   r12,r12
  402881:	sete   dl
  402884:	test   rbx,rbx
  402887:	mov    rcx,rax
  40288a:	sete   al
  40288d:	or     dl,al
  40288f:	jne    402b43 <open@plt+0x343>
  402895:	test   rcx,rcx
  402898:	je     402b43 <open@plt+0x343>
  40289e:	mov    rdi,r12
  4028a1:	mov    edx,0xa
  4028a6:	xor    esi,esi
  4028a8:	mov    QWORD PTR [rsp+0x8],rcx
  4028ad:	call   402620 <strtol@plt>
  4028b2:	mov    edx,0xa
  4028b7:	xor    esi,esi
  4028b9:	mov    rdi,rbx
  4028bc:	mov    r14,rax
  4028bf:	mov    r12d,eax
  4028c2:	call   402620 <strtol@plt>
  4028c7:	mov    rcx,QWORD PTR [rsp+0x8]
  4028cc:	mov    edx,0xa
  4028d1:	xor    esi,esi
  4028d3:	mov    rdi,rcx
  4028d6:	mov    r15,rax
  4028d9:	mov    r13d,eax
  4028dc:	call   402620 <strtol@plt>
  4028e1:	mov    DWORD PTR [rip+0x10521],eax        # 412e08 <open@plt+0x10608>
  4028e7:	cmp    ebp,0x3
  4028ea:	jle    40290f <open@plt+0x10f>
  4028ec:	mov    ebx,0x3
  4028f1:	nop    DWORD PTR [rax+0x0]
  4028f8:	cmp    ebx,r12d
  4028fb:	je     402909 <open@plt+0x109>
  4028fd:	cmp    ebx,r13d
  402900:	je     402909 <open@plt+0x109>
  402902:	mov    edi,ebx
  402904:	call   402480 <close@plt>
  402909:	inc    ebx
  40290b:	cmp    ebx,ebp
  40290d:	jne    4028f8 <open@plt+0xf8>
  40290f:	mov    esi,0x2
  402914:	lea    rdi,[rip+0x2804]        # 40511f <open@plt+0x291f>
  40291b:	xor    eax,eax
  40291d:	call   402800 <open@plt>
  402922:	mov    ebx,eax
  402924:	test   eax,eax
  402926:	js     402974 <open@plt+0x174>
  402928:	test   r14d,r14d
  40292b:	je     40293b <open@plt+0x13b>
  40292d:	test   r15d,r15d
  402930:	je     40293b <open@plt+0x13b>
  402932:	xor    esi,esi
  402934:	mov    edi,eax
  402936:	call   402420 <dup2@plt>
  40293b:	cmp    r14d,0x1
  40293f:	je     402953 <open@plt+0x153>
  402941:	cmp    r15d,0x1
  402945:	je     402953 <open@plt+0x153>
  402947:	mov    esi,0x1
  40294c:	mov    edi,ebx
  40294e:	call   402420 <dup2@plt>
  402953:	cmp    r14d,0x2
  402957:	je     40296b <open@plt+0x16b>
  402959:	cmp    r15d,0x2
  40295d:	je     40296b <open@plt+0x16b>
  40295f:	mov    esi,0x2
  402964:	mov    edi,ebx
  402966:	call   402420 <dup2@plt>
  40296b:	cmp    ebx,0x2
  40296e:	jg     402b86 <open@plt+0x386>
  402974:	lea    r12,[rsp+0x28]
  402979:	mov    rdi,r12
  40297c:	mov    DWORD PTR [rsp+0xa8],0x0
  402987:	mov    QWORD PTR [rsp+0x20],0x1
  402990:	call   4027a0 <sigemptyset@plt>
  402995:	mov    esi,0xd
  40299a:	mov    rdi,r12
  40299d:	call   4026c0 <sigaddset@plt>
  4029a2:	mov    esi,0xe
  4029a7:	mov    rdi,r12
  4029aa:	call   4026c0 <sigaddset@plt>
  4029af:	mov    esi,0x5
  4029b4:	mov    rdi,r12
  4029b7:	call   4026c0 <sigaddset@plt>
  4029bc:	lea    rbx,[rsp+0x20]
  4029c1:	mov    esi,0x1c
  4029c6:	mov    rdi,r12
  4029c9:	call   4026c0 <sigaddset@plt>
  4029ce:	xor    edx,edx
  4029d0:	mov    rsi,rbx
  4029d3:	mov    edi,0x1c
  4029d8:	call   4025f0 <sigaction@plt>
  4029dd:	xor    edx,edx
  4029df:	mov    rsi,rbx
  4029e2:	mov    edi,0xd
  4029e7:	call   4025f0 <sigaction@plt>
  4029ec:	xor    edx,edx
  4029ee:	mov    rsi,rbx
  4029f1:	mov    edi,0x5
  4029f6:	call   4025f0 <sigaction@plt>
  4029fb:	xor    edx,edx
  4029fd:	mov    rsi,rbx
  402a00:	lea    rax,[rip+0x299]        # 402ca0 <open@plt+0x4a0>
  402a07:	mov    edi,0xe
  402a0c:	mov    QWORD PTR [rsp+0x20],rax
  402a11:	call   4025f0 <sigaction@plt>
  402a16:	push   rax
  402a17:	xor    ecx,ecx
  402a19:	xor    edx,edx
  402a1b:	push   0x1000
  402a20:	mov    r9d,0x400
  402a26:	mov    r8d,ebp
  402a29:	xor    esi,esi
  402a2b:	xor    edi,edi
  402a2d:	call   4026f0 <rb_lib_init@plt>
  402a32:	mov    edi,0x400
  402a37:	call   402560 <rb_init_rawbuffers@plt>
  402a3c:	xor    edi,edi
  402a3e:	mov    esi,0x1
  402a43:	call   402670 <rb_init_prng@plt>
  402a48:	call   4026b0 <rb_supports_ssl@plt>
  402a4d:	pop    rdx
  402a4e:	test   eax,eax
  402a50:	pop    rcx
  402a51:	mov    esi,0x60
  402a56:	mov    edi,0x1
  402a5b:	setne  BYTE PTR [rip+0x47e2]        # 407244 <open@plt+0x4a44>
  402a62:	call   402750 <calloc@plt>
  402a67:	mov    rbx,rax
  402a6a:	test   rax,rax
  402a6d:	je     402ba2 <open@plt+0x3a2>
  402a73:	lea    rdx,[rip+0x26af]        # 405129 <open@plt+0x2929>
  402a7a:	mov    esi,0x4
  402a7f:	mov    edi,r14d
  402a82:	mov    QWORD PTR [rip+0x10377],rax        # 412e00 <open@plt+0x10600>
  402a89:	call   402710 <rb_open@plt>
  402a8e:	mov    QWORD PTR [rbx+0x20],rax
  402a92:	lea    rdx,[rip+0x26a4]        # 40513d <open@plt+0x293d>
  402a99:	mov    esi,0x8
  402a9e:	mov    rbx,QWORD PTR [rip+0x1035b]        # 412e00 <open@plt+0x10600>
  402aa5:	mov    edi,r15d
  402aa8:	call   402710 <rb_open@plt>
  402aad:	mov    QWORD PTR [rbx+0x28],rax
  402ab1:	mov    rax,QWORD PTR [rip+0x10348]        # 412e00 <open@plt+0x10600>
  402ab8:	mov    rdi,QWORD PTR [rax+0x20]
  402abc:	call   402510 <rb_set_nb@plt>
  402ac1:	mov    rax,QWORD PTR [rip+0x10338]        # 412e00 <open@plt+0x10600>
  402ac8:	mov    rdi,QWORD PTR [rax+0x28]
  402acc:	call   402510 <rb_set_nb@plt>
  402ad1:	xor    edx,edx
  402ad3:	mov    ecx,0xa
  402ad8:	lea    rsi,[rip+0x1f1]        # 402cd0 <open@plt+0x4d0>
  402adf:	lea    rdi,[rip+0x2661]        # 405147 <open@plt+0x2947>
  402ae6:	call   402450 <rb_event_addish@plt>
  402aeb:	xor    edx,edx
  402aed:	mov    ecx,0xa
  402af2:	lea    rsi,[rip+0xdf7]        # 4038f0 <open@plt+0x10f0>
  402af9:	lea    rdi,[rip+0x2658]        # 405158 <open@plt+0x2958>
  402b00:	call   402780 <rb_event_add@plt>
  402b05:	mov    rax,QWORD PTR [rip+0x102f4]        # 412e00 <open@plt+0x10600>
  402b0c:	xor    esi,esi
  402b0e:	mov    rdi,QWORD PTR [rax+0x28]
  402b12:	call   402d70 <open@plt+0x570>
  402b17:	mov    rsi,QWORD PTR [rip+0x102e2]        # 412e00 <open@plt+0x10600>
  402b1e:	mov    rdi,QWORD PTR [rsi+0x20]
  402b22:	call   404410 <open@plt+0x1c10>
  402b27:	mov    rdi,QWORD PTR [rip+0x102d2]        # 412e00 <open@plt+0x10600>
  402b2e:	call   403460 <open@plt+0xc60>
  402b33:	cmp    BYTE PTR [rip+0x470a],0x0        # 407244 <open@plt+0x4a44>
  402b3a:	je     402b92 <open@plt+0x392>
  402b3c:	xor    edi,edi
  402b3e:	call   402590 <rb_lib_loop@plt>
  402b43:	mov    rbx,QWORD PTR [rip+0x44ae]        # 406ff8 <open@plt+0x47f8>
  402b4a:	mov    edx,0x32
  402b4f:	mov    rcx,QWORD PTR [rbx]
  402b52:	mov    esi,0x1
  402b57:	lea    rdi,[rip+0x26b2]        # 405210 <open@plt+0x2a10>
  402b5e:	call   4027b0 <fwrite@plt>
  402b63:	mov    rcx,QWORD PTR [rbx]
  402b66:	lea    rdi,[rip+0x26db]        # 405248 <open@plt+0x2a48>
  402b6d:	mov    edx,0x31
  402b72:	mov    esi,0x1
  402b77:	call   4027b0 <fwrite@plt>
  402b7c:	mov    edi,0x1
  402b81:	call   4024d0 <exit@plt>
  402b86:	mov    edi,ebx
  402b88:	call   402480 <close@plt>
  402b8d:	jmp    402974 <open@plt+0x174>
  402b92:	mov    rdi,QWORD PTR [rip+0x10267]        # 412e00 <open@plt+0x10600>
  402b99:	xor    esi,esi
  402b9b:	call   404350 <open@plt+0x1b50>
  402ba0:	jmp    402b3c <open@plt+0x33c>
  402ba2:	call   402690 <rb_outofmemory@plt>
  402ba7:	nop    WORD PTR [rax+rax*1+0x0]
  402bb0:	endbr64 
  402bb4:	xor    ebp,ebp
  402bb6:	mov    r9,rdx
  402bb9:	pop    rsi
  402bba:	mov    rdx,rsp
  402bbd:	and    rsp,0xfffffffffffffff0
  402bc1:	push   rax
  402bc2:	push   rsp
  402bc3:	mov    r8,0x404c80
  402bca:	mov    rcx,0x404c10
  402bd1:	mov    rdi,0x402810
  402bd8:	call   QWORD PTR [rip+0x4412]        # 406ff0 <open@plt+0x47f0>
  402bde:	hlt    
  402bdf:	nop
  402be0:	endbr64 
  402be4:	ret    
  402be5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402bef:	nop
  402bf0:	mov    eax,0x407220
  402bf5:	cmp    rax,0x407220
  402bfb:	je     402c10 <open@plt+0x410>
  402bfd:	mov    eax,0x0
  402c02:	test   rax,rax
  402c05:	je     402c10 <open@plt+0x410>
  402c07:	mov    edi,0x407220
  402c0c:	jmp    rax
  402c0e:	xchg   ax,ax
  402c10:	ret    
  402c11:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402c1c:	nop    DWORD PTR [rax+0x0]
  402c20:	mov    esi,0x407220
  402c25:	sub    rsi,0x407220
  402c2c:	sar    rsi,0x3
  402c30:	mov    rax,rsi
  402c33:	shr    rax,0x3f
  402c37:	add    rsi,rax
  402c3a:	sar    rsi,1
  402c3d:	je     402c50 <open@plt+0x450>
  402c3f:	mov    eax,0x0
  402c44:	test   rax,rax
  402c47:	je     402c50 <open@plt+0x450>
  402c49:	mov    edi,0x407220
  402c4e:	jmp    rax
  402c50:	ret    
  402c51:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402c5c:	nop    DWORD PTR [rax+0x0]
  402c60:	endbr64 
  402c64:	cmp    BYTE PTR [rip+0x45b5],0x0        # 407220 <open@plt+0x4a20>
  402c6b:	jne    402c80 <open@plt+0x480>
  402c6d:	push   rbp
  402c6e:	mov    rbp,rsp
  402c71:	call   402bf0 <open@plt+0x3f0>
  402c76:	mov    BYTE PTR [rip+0x45a3],0x1        # 407220 <open@plt+0x4a20>
  402c7d:	pop    rbp
  402c7e:	ret    
  402c7f:	nop
  402c80:	ret    
  402c81:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402c8c:	nop    DWORD PTR [rax+0x0]
  402c90:	endbr64 
  402c94:	jmp    402c20 <open@plt+0x420>
  402c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ca0:	endbr64 
  402ca4:	ret    
  402ca5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402cb0:	endbr64 
  402cb4:	test   rsi,rsi
  402cb7:	je     402cc8 <open@plt+0x4c8>
  402cb9:	mov    rdi,rsi
  402cbc:	jmp    402570 <free@plt>
  402cc1:	nop    DWORD PTR [rax+0x0]
  402cc8:	ret    
  402cc9:	nop    DWORD PTR [rax+0x0]
  402cd0:	endbr64 
  402cd4:	push   r12
  402cd6:	mov    rax,QWORD PTR [rip+0x4573]        # 407250 <open@plt+0x4a50>
  402cdd:	push   rbp
  402cde:	push   rbx
  402cdf:	test   rax,rax
  402ce2:	je     402d28 <open@plt+0x528>
  402ce4:	mov    rbp,QWORD PTR [rax+0x10]
  402ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  402cf0:	mov    rbx,QWORD PTR [rax]
  402cf3:	mov    rdi,QWORD PTR [rbx+0x20]
  402cf7:	call   402650 <rb_free_rawbuffer@plt>
  402cfc:	mov    rdi,QWORD PTR [rbx+0x28]
  402d00:	call   402650 <rb_free_rawbuffer@plt>
  402d05:	test   BYTE PTR [rbx+0x68],0x2
  402d09:	jne    402d48 <open@plt+0x548>
  402d0b:	mov    rdi,rbx
  402d0e:	call   402570 <free@plt>
  402d13:	test   rbp,rbp
  402d16:	je     402d28 <open@plt+0x528>
  402d18:	mov    rax,rbp
  402d1b:	mov    rbp,QWORD PTR [rbp+0x10]
  402d1f:	jmp    402cf0 <open@plt+0x4f0>
  402d21:	nop    DWORD PTR [rax+0x0]
  402d28:	pop    rbx
  402d29:	pop    rbp
  402d2a:	mov    QWORD PTR [rip+0x451b],0x0        # 407250 <open@plt+0x4a50>
  402d35:	mov    QWORD PTR [rip+0x4518],0x0        # 407258 <open@plt+0x4a58>
  402d40:	pop    r12
  402d42:	ret    
  402d43:	nop    DWORD PTR [rax+rax*1+0x0]
  402d48:	mov    r12,QWORD PTR [rbx+0x70]
  402d4c:	mov    rdi,r12
  402d4f:	call   402490 <inflateEnd@plt>
  402d54:	lea    rdi,[r12+0x70]
  402d59:	call   4025a0 <deflateEnd@plt>
  402d5e:	test   r12,r12
  402d61:	je     402d0b <open@plt+0x50b>
  402d63:	mov    rdi,r12
  402d66:	call   402570 <free@plt>
  402d6b:	jmp    402d0b <open@plt+0x50b>
  402d6d:	nop    DWORD PTR [rax]
  402d70:	endbr64 
  402d74:	push   rbp
  402d75:	push   rbx
  402d76:	lea    r11,[rsp-0x4000]
  402d7e:	sub    rsp,0x1000
  402d85:	or     QWORD PTR [rsp],0x0
  402d8a:	cmp    rsp,r11
  402d8d:	jne    402d7e <open@plt+0x57e>
  402d8f:	sub    rsp,0x18
  402d93:	mov    rax,QWORD PTR fs:0x28
  402d9c:	mov    QWORD PTR [rsp+0x4008],rax
  402da4:	xor    eax,eax
  402da6:	mov    rbx,rdi
  402da9:	mov    rbp,rsp
  402dac:	nop    DWORD PTR [rax+0x0]
  402db0:	mov    edx,0x4000
  402db5:	mov    rsi,rbp
  402db8:	mov    rdi,rbx
  402dbb:	call   4025b0 <rb_read@plt>
  402dc0:	test   eax,eax
  402dc2:	jg     402db0 <open@plt+0x5b0>
  402dc4:	test   eax,eax
  402dc6:	je     402dd8 <open@plt+0x5d8>
  402dc8:	call   4026a0 <__errno_location@plt>
  402dcd:	mov    edi,DWORD PTR [rax]
  402dcf:	call   402460 <rb_ignore_errno@plt>
  402dd4:	test   eax,eax
  402dd6:	jne    402de0 <open@plt+0x5e0>
  402dd8:	xor    edi,edi
  402dda:	call   4024d0 <exit@plt>
  402ddf:	nop
  402de0:	xor    ecx,ecx
  402de2:	lea    rdx,[rip+0xffffffffffffff87]        # 402d70 <open@plt+0x570>
  402de9:	mov    esi,0x1
  402dee:	mov    rdi,rbx
  402df1:	call   4024a0 <rb_setselect@plt>
  402df6:	mov    rax,QWORD PTR [rsp+0x4008]
  402dfe:	xor    rax,QWORD PTR fs:0x28
  402e07:	jne    402e13 <open@plt+0x613>
  402e09:	add    rsp,0x4018
  402e10:	pop    rbx
  402e11:	pop    rbp
  402e12:	ret    
  402e13:	call   4026d0 <__stack_chk_fail@plt>
  402e18:	nop    DWORD PTR [rax+rax*1+0x0]
  402e20:	push   rax
  402e21:	pop    rax
  402e22:	lea    rcx,[rip+0x24e7]        # 405310 <open@plt+0x2b10>
  402e29:	mov    edx,0xec
  402e2e:	lea    rsi,[rip+0x21cf]        # 405004 <open@plt+0x2804>
  402e35:	lea    rdi,[rip+0x21e4]        # 405020 <open@plt+0x2820>
  402e3c:	sub    rsp,0x8
  402e40:	call   4024e0 <__assert_fail@plt>
  402e45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402e50:	push   rax
  402e51:	pop    rax
  402e52:	lea    rcx,[rip+0x24a7]        # 405300 <open@plt+0x2b00>
  402e59:	mov    edx,0x91
  402e5e:	lea    rsi,[rip+0x219f]        # 405004 <open@plt+0x2804>
  402e65:	lea    rdi,[rip+0x21b4]        # 405020 <open@plt+0x2820>
  402e6c:	sub    rsp,0x8
  402e70:	call   4024e0 <__assert_fail@plt>
  402e75:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402e80:	push   rax
  402e81:	pop    rax
  402e82:	lea    rcx,[rip+0x2467]        # 4052f0 <open@plt+0x2af0>
  402e89:	mov    edx,0xd5
  402e8e:	lea    rsi,[rip+0x216f]        # 405004 <open@plt+0x2804>
  402e95:	lea    rdi,[rip+0x2191]        # 40502d <open@plt+0x282d>
  402e9c:	sub    rsp,0x8
  402ea0:	call   4024e0 <__assert_fail@plt>
  402ea5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402eb0:	endbr64 
  402eb4:	imul   rsi,rdx
  402eb8:	sub    rsp,0x8
  402ebc:	mov    edi,0x1
  402ec1:	call   402750 <calloc@plt>
  402ec6:	test   rax,rax
  402ec9:	je     402ed0 <open@plt+0x6d0>
  402ecb:	add    rsp,0x8
  402ecf:	ret    
  402ed0:	call   402690 <rb_outofmemory@plt>
  402ed5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402ee0:	push   r13
  402ee2:	mov    r13,rdi
  402ee5:	mov    edi,0x1
  402eea:	push   r12
  402eec:	mov    r12,rsi
  402eef:	mov    esi,0x78
  402ef4:	push   rbp
  402ef5:	mov    rbp,rdx
  402ef8:	push   rbx
  402ef9:	sub    rsp,0x8
  402efd:	call   402750 <calloc@plt>
  402f02:	test   rax,rax
  402f05:	je     402f58 <open@plt+0x758>
  402f07:	mov    QWORD PTR [rax+0x18],r13
  402f0b:	mov    rbx,rax
  402f0e:	call   402700 <rb_new_rawbuffer@plt>
  402f13:	mov    QWORD PTR [rbx+0x20],rax
  402f17:	call   402700 <rb_new_rawbuffer@plt>
  402f1c:	mov    QWORD PTR [rbx+0x28],rax
  402f20:	mov    QWORD PTR [rbx+0x38],r12
  402f24:	mov    QWORD PTR [rbx+0x40],rbp
  402f28:	mov    DWORD PTR [rbx+0x30],0xffffffff
  402f2f:	mov    QWORD PTR [rbx+0x70],0x0
  402f37:	mov    rdi,r12
  402f3a:	call   402510 <rb_set_nb@plt>
  402f3f:	mov    rdi,rbp
  402f42:	call   402510 <rb_set_nb@plt>
  402f47:	add    rsp,0x8
  402f4b:	mov    rax,rbx
  402f4e:	pop    rbx
  402f4f:	pop    rbp
  402f50:	pop    r12
  402f52:	pop    r13
  402f54:	ret    
  402f55:	nop    DWORD PTR [rax]
  402f58:	call   402690 <rb_outofmemory@plt>
  402f5d:	nop    DWORD PTR [rax]
  402f60:	endbr64 
  402f64:	push   r13
  402f66:	mov    r13,rsi
  402f69:	push   r12
  402f6b:	push   rbp
  402f6c:	push   rbx
  402f6d:	sub    rsp,0x8
  402f71:	mov    rbp,QWORD PTR [rsi+0x48]
  402f75:	test   rbp,rbp
  402f78:	je     402fd0 <open@plt+0x7d0>
  402f7a:	mov    r12,QWORD PTR [rbp+0x10]
  402f7e:	xchg   ax,ax
  402f80:	mov    rbx,QWORD PTR [rbp+0x0]
  402f84:	mov    rdi,QWORD PTR [r13+0x20]
  402f88:	mov    rcx,QWORD PTR [rbx+0x18]
  402f8c:	mov    edx,DWORD PTR [rbx+0x48]
  402f8f:	mov    r9d,DWORD PTR [rip+0xfe72]        # 412e08 <open@plt+0x10608>
  402f96:	mov    r8,QWORD PTR [rbx+0x20]
  402f9a:	lea    rsi,[rbx+0x28]
  402f9e:	call   4024c0 <rb_send_fd_buf@plt>
  402fa3:	test   eax,eax
  402fa5:	jg     402ff0 <open@plt+0x7f0>
  402fa7:	je     403080 <open@plt+0x880>
  402fad:	call   4026a0 <__errno_location@plt>
  402fb2:	mov    edi,DWORD PTR [rax]
  402fb4:	call   402460 <rb_ignore_errno@plt>
  402fb9:	test   eax,eax
  402fbb:	je     403080 <open@plt+0x880>
  402fc1:	test   r12,r12
  402fc4:	je     402fd0 <open@plt+0x7d0>
  402fc6:	mov    rbp,r12
  402fc9:	mov    r12,QWORD PTR [r12+0x10]
  402fce:	jmp    402f80 <open@plt+0x780>
  402fd0:	cmp    QWORD PTR [r13+0x58],0x0
  402fd5:	jne    403090 <open@plt+0x890>
  402fdb:	add    rsp,0x8
  402fdf:	pop    rbx
  402fe0:	pop    rbp
  402fe1:	pop    r12
  402fe3:	pop    r13
  402fe5:	ret    
  402fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ff0:	mov    rdx,QWORD PTR [rbp+0x10]
  402ff4:	mov    rax,QWORD PTR [rbp+0x8]
  402ff8:	test   rdx,rdx
  402ffb:	je     403070 <open@plt+0x870>
  402ffd:	mov    QWORD PTR [rdx+0x8],rax
  403001:	mov    rax,QWORD PTR [rbp+0x8]
  403005:	test   rax,rax
  403008:	je     403060 <open@plt+0x860>
  40300a:	mov    QWORD PTR [rax+0x10],rdx
  40300e:	mov    eax,DWORD PTR [rbx+0x48]
  403011:	mov    QWORD PTR [rbp+0x8],0x0
  403019:	mov    QWORD PTR [rbp+0x10],0x0
  403021:	dec    QWORD PTR [r13+0x58]
  403025:	xor    ebp,ebp
  403027:	test   eax,eax
  403029:	jle    40303d <open@plt+0x83d>
  40302b:	mov    rdi,QWORD PTR [rbx+rbp*8+0x28]
  403030:	inc    rbp
  403033:	call   402600 <rb_close@plt>
  403038:	cmp    DWORD PTR [rbx+0x48],ebp
  40303b:	jg     40302b <open@plt+0x82b>
  40303d:	mov    rdi,QWORD PTR [rbx+0x18]
  403041:	test   rdi,rdi
  403044:	je     40304b <open@plt+0x84b>
  403046:	call   402570 <free@plt>
  40304b:	mov    rdi,rbx
  40304e:	call   402570 <free@plt>
  403053:	jmp    402fc1 <open@plt+0x7c1>
  403058:	nop    DWORD PTR [rax+rax*1+0x0]
  403060:	mov    QWORD PTR [r13+0x48],rdx
  403064:	jmp    40300e <open@plt+0x80e>
  403066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403070:	mov    QWORD PTR [r13+0x50],rax
  403074:	jmp    403005 <open@plt+0x805>
  403076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403080:	xor    edi,edi
  403082:	call   4024d0 <exit@plt>
  403087:	nop    WORD PTR [rax+rax*1+0x0]
  403090:	mov    rdi,QWORD PTR [r13+0x20]
  403094:	add    rsp,0x8
  403098:	pop    rbx
  403099:	pop    rbp
  40309a:	pop    r12
  40309c:	mov    rcx,r13
  40309f:	lea    rdx,[rip+0xfffffffffffffeba]        # 402f60 <open@plt+0x760>
  4030a6:	mov    esi,0x2
  4030ab:	pop    r13
  4030ad:	jmp    4024a0 <rb_setselect@plt>
  4030b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4030bd:	nop    DWORD PTR [rax]
  4030c0:	push   r13
  4030c2:	mov    r13,rsi
  4030c5:	mov    esi,0x50
  4030ca:	push   r12
  4030cc:	mov    r12,rdx
  4030cf:	push   rbp
  4030d0:	mov    rbp,rdi
  4030d3:	mov    edi,0x1
  4030d8:	push   rbx
  4030d9:	sub    rsp,0x8
  4030dd:	call   402750 <calloc@plt>
  4030e2:	test   rax,rax
  4030e5:	je     403170 <open@plt+0x970>
  4030eb:	mov    rsi,r12
  4030ee:	mov    edi,0x1
  4030f3:	mov    rbx,rax
  4030f6:	call   402750 <calloc@plt>
  4030fb:	test   rax,rax
  4030fe:	je     403170 <open@plt+0x970>
  403100:	mov    QWORD PTR [rbx+0x18],rax
  403104:	mov    QWORD PTR [rbx+0x20],r12
  403108:	mov    rdx,r12
  40310b:	mov    rsi,r13
  40310e:	mov    rdi,rax
  403111:	call   4027f0 <memcpy@plt>
  403116:	mov    DWORD PTR [rbx+0x48],0x0
  40311d:	cmp    rbp,0xffffffffffffffb8
  403121:	je     403175 <open@plt+0x975>
  403123:	mov    rax,QWORD PTR [rbp+0x50]
  403127:	mov    QWORD PTR [rbx],rbx
  40312a:	mov    QWORD PTR [rbx+0x10],0x0
  403132:	mov    QWORD PTR [rbx+0x8],rax
  403136:	test   rax,rax
  403139:	je     403160 <open@plt+0x960>
  40313b:	mov    QWORD PTR [rax+0x10],rbx
  40313f:	mov    QWORD PTR [rbp+0x50],rbx
  403143:	inc    QWORD PTR [rbp+0x58]
  403147:	mov    rdi,QWORD PTR [rbp+0x20]
  40314b:	add    rsp,0x8
  40314f:	pop    rbx
  403150:	mov    rsi,rbp
  403153:	pop    rbp
  403154:	pop    r12
  403156:	pop    r13
  403158:	jmp    402f60 <open@plt+0x760>
  40315d:	nop    DWORD PTR [rax]
  403160:	cmp    QWORD PTR [rbp+0x48],0x0
  403165:	jne    40313f <open@plt+0x93f>
  403167:	mov    QWORD PTR [rbp+0x48],rbx
  40316b:	jmp    40313f <open@plt+0x93f>
  40316d:	nop    DWORD PTR [rax]
  403170:	call   402690 <rb_outofmemory@plt>
  403175:	lea    rcx,[rip+0x2174]        # 4052f0 <open@plt+0x2af0>
  40317c:	mov    edx,0xd4
  403181:	lea    rsi,[rip+0x1e7c]        # 405004 <open@plt+0x2804>
  403188:	lea    rdi,[rip+0x1e91]        # 405020 <open@plt+0x2820>
  40318f:	call   4024e0 <__assert_fail@plt>
  403194:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40319f:	nop
  4031a0:	push   rbp
  4031a1:	mov    edx,0x10624dd3
  4031a6:	mov    rbp,rsp
  4031a9:	push   r14
  4031ab:	push   r12
  4031ad:	push   rbx
  4031ae:	sub    rsp,0x218
  4031b5:	mov    ecx,DWORD PTR [rsi+0x1]
  4031b8:	mov    rax,QWORD PTR fs:0x28
  4031c1:	mov    QWORD PTR [rbp-0x28],rax
  4031c5:	xor    eax,eax
  4031c7:	mov    eax,ecx
  4031c9:	mul    edx
  4031cb:	mov    eax,ecx
  4031cd:	shr    edx,0x7
  4031d0:	imul   edx,edx,0x7d0
  4031d6:	sub    eax,edx
  4031d8:	lea    rdx,[rax+rax*2]
  4031dc:	lea    rax,[rip+0x409d]        # 407280 <open@plt+0x4a80>
  4031e3:	mov    rax,QWORD PTR [rax+rdx*8]
  4031e7:	test   rax,rax
  4031ea:	je     4032b8 <open@plt+0xab8>
  4031f0:	mov    r14,rdi
  4031f3:	jmp    403205 <open@plt+0xa05>
  4031f5:	nop    DWORD PTR [rax]
  4031f8:	mov    rax,QWORD PTR [rax+0x10]
  4031fc:	test   rax,rax
  4031ff:	je     4032b8 <open@plt+0xab8>
  403205:	mov    rbx,QWORD PTR [rax]
  403208:	cmp    ecx,DWORD PTR [rbx+0x30]
  40320b:	jne    4031f8 <open@plt+0x9f8>
  40320d:	test   BYTE PTR [rbx+0x68],0x8
  403211:	jne    4031f8 <open@plt+0x9f8>
  403213:	push   QWORD PTR [rbx+0x48]
  403216:	lea    r12,[rbp-0x230]
  40321d:	lea    r9,[rsi+0x5]
  403221:	push   QWORD PTR [rbx+0x58]
  403224:	mov    edx,0x1
  403229:	lea    r8,[rip+0x1e0a]        # 40503a <open@plt+0x283a>
  403230:	push   QWORD PTR [rbx+0x50]
  403233:	mov    ecx,0x200
  403238:	mov    esi,0x200
  40323d:	push   QWORD PTR [rbx+0x60]
  403240:	mov    rdi,r12
  403243:	xor    eax,eax
  403245:	call   402790 <__snprintf_chk@plt>
  40324a:	mov    QWORD PTR [rbx+0x60],0x0
  403252:	mov    QWORD PTR [rbx+0x58],0x0
  40325a:	mov    QWORD PTR [rbx+0x50],0x0
  403262:	mov    QWORD PTR [rbx+0x48],0x0
  40326a:	mov    rdx,r12
  40326d:	mov    ecx,DWORD PTR [rdx]
  40326f:	add    rdx,0x4
  403273:	lea    eax,[rcx-0x1010101]
  403279:	andn   eax,ecx,eax
  40327e:	and    eax,0x80808080
  403283:	je     40326d <open@plt+0xa6d>
  403285:	mov    ecx,eax
  403287:	shr    ecx,0x10
  40328a:	test   eax,0x8080
  40328f:	cmove  eax,ecx
  403292:	lea    rcx,[rdx+0x2]
  403296:	cmove  rdx,rcx
  40329a:	mov    edi,eax
  40329c:	add    dil,al
  40329f:	sbb    rdx,0x3
  4032a3:	sub    rdx,r12
  4032a6:	add    rsp,0x20
  4032aa:	inc    rdx
  4032ad:	mov    rsi,r12
  4032b0:	mov    rdi,r14
  4032b3:	call   4030c0 <open@plt+0x8c0>
  4032b8:	mov    rax,QWORD PTR [rbp-0x28]
  4032bc:	xor    rax,QWORD PTR fs:0x28
  4032c5:	jne    4032d2 <open@plt+0xad2>
  4032c7:	lea    rsp,[rbp-0x18]
  4032cb:	pop    rbx
  4032cc:	pop    r12
  4032ce:	pop    r14
  4032d0:	pop    rbp
  4032d1:	ret    
  4032d2:	call   4026d0 <__stack_chk_fail@plt>
  4032d7:	nop    WORD PTR [rax+rax*1+0x0]
  4032e0:	push   r12
  4032e2:	push   rbp
  4032e3:	push   rbx
  4032e4:	sub    rsp,0x310
  4032eb:	mov    rax,QWORD PTR fs:0x28
  4032f4:	mov    QWORD PTR [rsp+0x308],rax
  4032fc:	xor    eax,eax
  4032fe:	test   BYTE PTR [rdi+0x68],0x1
  403302:	jne    403330 <open@plt+0xb30>
  403304:	mov    rax,QWORD PTR [rsp+0x308]
  40330c:	xor    rax,QWORD PTR fs:0x28
  403315:	jne    4033d1 <open@plt+0xbd1>
  40331b:	add    rsp,0x310
  403322:	pop    rbx
  403323:	pop    rbp
  403324:	pop    r12
  403326:	ret    
  403327:	nop    WORD PTR [rax+rax*1+0x0]
  403330:	mov    rbx,rdi
  403333:	mov    rdi,QWORD PTR [rdi+0x38]
  403337:	call   4025d0 <rb_ssl_get_cipher@plt>
  40333c:	test   rax,rax
  40333f:	je     403304 <open@plt+0xb04>
  403341:	mov    rbp,rsp
  403344:	mov    edx,0x100
  403349:	mov    rsi,rax
  40334c:	mov    rdi,rbp
  40334f:	call   402530 <rb_strlcpy@plt>
  403354:	lea    r12,[rsp+0x100]
  40335c:	mov    eax,DWORD PTR [rbx+0x30]
  40335f:	mov    edx,0x1fb
  403364:	lea    rdi,[r12+0x5]
  403369:	mov    rsi,rbp
  40336c:	mov    BYTE PTR [rsp+0x100],0x43
  403374:	mov    DWORD PTR [rsp+0x101],eax
  40337b:	call   402640 <__strcpy_chk@plt>
  403380:	mov    rdx,rbp
  403383:	mov    ecx,DWORD PTR [rdx]
  403385:	add    rdx,0x4
  403389:	lea    eax,[rcx-0x1010101]
  40338f:	andn   eax,ecx,eax
  403394:	and    eax,0x80808080
  403399:	je     403383 <open@plt+0xb83>
  40339b:	mov    ecx,eax
  40339d:	shr    ecx,0x10
  4033a0:	test   eax,0x8080
  4033a5:	cmove  eax,ecx
  4033a8:	lea    rcx,[rdx+0x2]
  4033ac:	cmove  rdx,rcx
  4033b0:	mov    esi,eax
  4033b2:	add    sil,al
  4033b5:	sbb    rdx,0x3
  4033b9:	sub    rdx,rbp
  4033bc:	mov    rdi,QWORD PTR [rbx+0x18]
  4033c0:	add    rdx,0x6
  4033c4:	mov    rsi,r12
  4033c7:	call   4030c0 <open@plt+0x8c0>
  4033cc:	jmp    403304 <open@plt+0xb04>
  4033d1:	call   4026d0 <__stack_chk_fail@plt>
  4033d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4033e0:	push   rbp
  4033e1:	push   rbx
  4033e2:	mov    rbx,rdi
  4033e5:	sub    rsp,0x68
  4033e9:	mov    rbp,rsp
  4033ec:	mov    rdi,QWORD PTR [rdi+0x38]
  4033f0:	mov    edx,DWORD PTR [rip+0x3e4a]        # 407240 <open@plt+0x4a40>
  4033f6:	lea    rsi,[rbp+0xd]
  4033fa:	mov    rax,QWORD PTR fs:0x28
  403403:	mov    QWORD PTR [rsp+0x58],rax
  403408:	xor    eax,eax
  40340a:	call   402540 <rb_get_ssl_certfp@plt>
  40340f:	test   eax,eax
  403411:	je     40343e <open@plt+0xc3e>
  403413:	mov    edx,DWORD PTR [rbx+0x30]
  403416:	mov    DWORD PTR [rsp+0x9],eax
  40341a:	mov    DWORD PTR [rsp+0x1],edx
  40341e:	mov    edx,DWORD PTR [rip+0x3e1c]        # 407240 <open@plt+0x4a40>
  403424:	add    eax,0xd
  403427:	mov    rdi,QWORD PTR [rbx+0x18]
  40342b:	mov    DWORD PTR [rsp+0x5],edx
  40342f:	mov    rsi,rbp
  403432:	movsxd rdx,eax
  403435:	mov    BYTE PTR [rsp],0x46
  403439:	call   4030c0 <open@plt+0x8c0>
  40343e:	mov    rax,QWORD PTR [rsp+0x58]
  403443:	xor    rax,QWORD PTR fs:0x28
  40344c:	jne    403455 <open@plt+0xc55>
  40344e:	add    rsp,0x68
  403452:	pop    rbx
  403453:	pop    rbp
  403454:	ret    
  403455:	call   4026d0 <__stack_chk_fail@plt>
  40345a:	nop    WORD PTR [rax+rax*1+0x0]
  403460:	push   rbp
  403461:	mov    ecx,0x20
  403466:	mov    rbp,rdi
  403469:	push   rbx
  40346a:	sub    rsp,0x118
  403471:	mov    rax,QWORD PTR fs:0x28
  40347a:	mov    QWORD PTR [rsp+0x108],rax
  403482:	xor    eax,eax
  403484:	mov    rdi,rsp
  403487:	mov    rbx,rsp
  40348a:	rep stos QWORD PTR es:[rdi],rax
  40348d:	mov    BYTE PTR [rsp],0x56
  403491:	call   402470 <rb_lib_version@plt>
  403496:	mov    rsi,rax
  403499:	mov    edx,0xfe
  40349e:	lea    rdi,[rbx+0x1]
  4034a2:	call   402760 <strncpy@plt>
  4034a7:	mov    rdx,rbx
  4034aa:	mov    ecx,DWORD PTR [rdx]
  4034ac:	add    rdx,0x4
  4034b0:	lea    eax,[rcx-0x1010101]
  4034b6:	andn   eax,ecx,eax
  4034bb:	and    eax,0x80808080
  4034c0:	je     4034aa <open@plt+0xcaa>
  4034c2:	mov    ecx,eax
  4034c4:	shr    ecx,0x10
  4034c7:	test   eax,0x8080
  4034cc:	cmove  eax,ecx
  4034cf:	lea    rcx,[rdx+0x2]
  4034d3:	mov    esi,eax
  4034d5:	cmove  rdx,rcx
  4034d9:	add    sil,al
  4034dc:	sbb    rdx,0x3
  4034e0:	sub    rdx,rbx
  4034e3:	mov    rsi,rbx
  4034e6:	mov    rdi,rbp
  4034e9:	call   4030c0 <open@plt+0x8c0>
  4034ee:	mov    rax,QWORD PTR [rsp+0x108]
  4034f6:	xor    rax,QWORD PTR fs:0x28
  4034ff:	jne    40350b <open@plt+0xd0b>
  403501:	add    rsp,0x118
  403508:	pop    rbx
  403509:	pop    rbp
  40350a:	ret    
  40350b:	call   4026d0 <__stack_chk_fail@plt>
  403510:	endbr64 
  403514:	push   rbp
  403515:	push   rbx
  403516:	lea    r11,[rsp-0x4000]
  40351e:	sub    rsp,0x1000
  403525:	or     QWORD PTR [rsp],0x0
  40352a:	cmp    rsp,r11
  40352d:	jne    40351e <open@plt+0xd1e>
  40352f:	sub    rsp,0x18
  403533:	mov    rax,QWORD PTR fs:0x28
  40353c:	mov    QWORD PTR [rsp+0x4008],rax
  403544:	xor    eax,eax
  403546:	test   rsi,rsi
  403549:	je     403597 <open@plt+0xd97>
  40354b:	mov    rbx,rsi
  40354e:	mov    rbp,rsp
  403551:	nop    DWORD PTR [rax+0x0]
  403558:	mov    rdi,QWORD PTR [rbx+0x40]
  40355c:	mov    edx,0x4000
  403561:	mov    rsi,rbp
  403564:	call   4025b0 <rb_read@plt>
  403569:	test   eax,eax
  40356b:	je     4035b8 <open@plt+0xdb8>
  40356d:	jns    403558 <open@plt+0xd58>
  40356f:	call   4026a0 <__errno_location@plt>
  403574:	mov    edi,DWORD PTR [rax]
  403576:	call   402460 <rb_ignore_errno@plt>
  40357b:	test   eax,eax
  40357d:	je     4035b8 <open@plt+0xdb8>
  40357f:	mov    rdi,QWORD PTR [rbx+0x40]
  403583:	mov    rcx,rbx
  403586:	lea    rdx,[rip+0xffffffffffffff83]        # 403510 <open@plt+0xd10>
  40358d:	mov    esi,0x1
  403592:	call   4024a0 <rb_setselect@plt>
  403597:	mov    rax,QWORD PTR [rsp+0x4008]
  40359f:	xor    rax,QWORD PTR fs:0x28
  4035a8:	jne    403603 <open@plt+0xe03>
  4035aa:	add    rsp,0x4018
  4035b1:	pop    rbx
  4035b2:	pop    rbp
  4035b3:	ret    
  4035b4:	nop    DWORD PTR [rax+0x0]
  4035b8:	mov    rdi,QWORD PTR [rbx+0x40]
  4035bc:	call   402600 <rb_close@plt>
  4035c1:	mov    rax,QWORD PTR [rip+0x3c88]        # 407250 <open@plt+0x4a50>
  4035c8:	mov    QWORD PTR [rbx],rbx
  4035cb:	mov    QWORD PTR [rbx+0x8],0x0
  4035d3:	mov    QWORD PTR [rbx+0x10],rax
  4035d7:	test   rax,rax
  4035da:	je     4035f0 <open@plt+0xdf0>
  4035dc:	mov    QWORD PTR [rax+0x8],rbx
  4035e0:	mov    QWORD PTR [rip+0x3c69],rbx        # 407250 <open@plt+0x4a50>
  4035e7:	inc    QWORD PTR [rip+0x3c72]        # 407260 <open@plt+0x4a60>
  4035ee:	jmp    403597 <open@plt+0xd97>
  4035f0:	cmp    QWORD PTR [rip+0x3c60],0x0        # 407258 <open@plt+0x4a58>
  4035f8:	jne    4035e0 <open@plt+0xde0>
  4035fa:	mov    QWORD PTR [rip+0x3c57],rbx        # 407258 <open@plt+0x4a58>
  403601:	jmp    4035e0 <open@plt+0xde0>
  403603:	call   4026d0 <__stack_chk_fail@plt>
  403608:	nop    DWORD PTR [rax+rax*1+0x0]
  403610:	push   r12
  403612:	mov    r12d,esi
  403615:	push   rbp
  403616:	mov    rbp,rdx
  403619:	push   rbx
  40361a:	mov    rbx,rdi
  40361d:	sub    rsp,0x260
  403624:	mov    QWORD PTR [rsp+0x1c8],rcx
  40362c:	mov    QWORD PTR [rsp+0x1d0],r8
  403634:	mov    QWORD PTR [rsp+0x1d8],r9
  40363c:	test   al,al
  40363e:	je     403688 <open@plt+0xe88>
  403640:	vmovaps XMMWORD PTR [rsp+0x1e0],xmm0
  403649:	vmovaps XMMWORD PTR [rsp+0x1f0],xmm1
  403652:	vmovaps XMMWORD PTR [rsp+0x200],xmm2
  40365b:	vmovaps XMMWORD PTR [rsp+0x210],xmm3
  403664:	vmovaps XMMWORD PTR [rsp+0x220],xmm4
  40366d:	vmovaps XMMWORD PTR [rsp+0x230],xmm5
  403676:	vmovaps XMMWORD PTR [rsp+0x240],xmm6
  40367f:	vmovaps XMMWORD PTR [rsp+0x250],xmm7
  403688:	mov    rax,QWORD PTR fs:0x28
  403691:	mov    QWORD PTR [rsp+0x1a8],rax
  403699:	xor    eax,eax
  40369b:	test   BYTE PTR [rbx+0x68],0x8
  40369f:	je     4036c8 <open@plt+0xec8>
  4036a1:	mov    rax,QWORD PTR [rsp+0x1a8]
  4036a9:	xor    rax,QWORD PTR fs:0x28
  4036b2:	jne    4038e2 <open@plt+0x10e2>
  4036b8:	add    rsp,0x260
  4036bf:	pop    rbx
  4036c0:	pop    rbp
  4036c1:	pop    r12
  4036c3:	ret    
  4036c4:	nop    DWORD PTR [rax+0x0]
  4036c8:	mov    rsi,QWORD PTR [rbx+0x38]
  4036cc:	mov    rdi,QWORD PTR [rbx+0x20]
  4036d0:	call   4027d0 <rb_rawbuf_flush@plt>
  4036d5:	mov    rsi,QWORD PTR [rbx+0x40]
  4036d9:	mov    rdi,QWORD PTR [rbx+0x28]
  4036dd:	call   4027d0 <rb_rawbuf_flush@plt>
  4036e2:	mov    rdi,QWORD PTR [rbx+0x38]
  4036e6:	call   402600 <rb_close@plt>
  4036eb:	movzx  eax,BYTE PTR [rbx+0x68]
  4036ef:	mov    edx,eax
  4036f1:	or     edx,0x8
  4036f4:	mov    BYTE PTR [rbx+0x68],dl
  4036f7:	test   al,0x40
  4036f9:	je     403840 <open@plt+0x1040>
  4036ff:	and    r12d,0x1
  403703:	mov    rdi,QWORD PTR [rbx+0x40]
  403707:	je     403808 <open@plt+0x1008>
  40370d:	test   rbp,rbp
  403710:	je     403808 <open@plt+0x1008>
  403716:	mov    rcx,rbx
  403719:	lea    rdx,[rip+0xfffffffffffffdf0]        # 403510 <open@plt+0xd10>
  403720:	mov    esi,0x1
  403725:	call   4024a0 <rb_setselect@plt>
  40372a:	mov    rdi,QWORD PTR [rbx+0x40]
  40372e:	xor    ecx,ecx
  403730:	xor    edx,edx
  403732:	mov    esi,0x2
  403737:	call   4024a0 <rb_setselect@plt>
  40373c:	lea    r12,[rsp+0x20]
  403741:	lea    rax,[rsp+0x280]
  403749:	mov    r8,rbp
  40374c:	mov    QWORD PTR [rsp+0x10],rax
  403751:	lea    r9,[rsp+0x8]
  403756:	lea    rax,[rsp+0x1b0]
  40375e:	mov    ecx,0x80
  403763:	mov    edx,0x1
  403768:	mov    esi,0x80
  40376d:	mov    rdi,r12
  403770:	mov    DWORD PTR [rsp+0x8],0x18
  403778:	mov    DWORD PTR [rsp+0xc],0x30
  403780:	mov    QWORD PTR [rsp+0x18],rax
  403785:	lea    rbp,[rsp+0xa0]
  40378d:	call   402520 <__vsnprintf_chk@plt>
  403792:	mov    eax,DWORD PTR [rbx+0x30]
  403795:	mov    edx,0xfb
  40379a:	lea    rdi,[rbp+0x5]
  40379e:	mov    rsi,r12
  4037a1:	mov    BYTE PTR [rsp+0xa0],0x44
  4037a9:	mov    DWORD PTR [rsp+0xa1],eax
  4037b0:	call   402530 <rb_strlcpy@plt>
  4037b5:	mov    rdx,r12
  4037b8:	mov    ecx,DWORD PTR [rdx]
  4037ba:	add    rdx,0x4
  4037be:	lea    eax,[rcx-0x1010101]
  4037c4:	andn   eax,ecx,eax
  4037c9:	and    eax,0x80808080
  4037ce:	je     4037b8 <open@plt+0xfb8>
  4037d0:	mov    ecx,eax
  4037d2:	shr    ecx,0x10
  4037d5:	test   eax,0x8080
  4037da:	cmove  eax,ecx
  4037dd:	lea    rcx,[rdx+0x2]
  4037e1:	cmove  rdx,rcx
  4037e5:	mov    esi,eax
  4037e7:	add    sil,al
  4037ea:	sbb    rdx,0x3
  4037ee:	sub    rdx,r12
  4037f1:	mov    rdi,QWORD PTR [rbx+0x18]
  4037f5:	add    edx,0x6
  4037f8:	mov    rsi,rbp
  4037fb:	call   4030c0 <open@plt+0x8c0>
  403800:	jmp    4036a1 <open@plt+0xea1>
  403805:	nop    DWORD PTR [rax]
  403808:	call   402600 <rb_close@plt>
  40380d:	mov    rax,QWORD PTR [rip+0x3a3c]        # 407250 <open@plt+0x4a50>
  403814:	mov    QWORD PTR [rbx],rbx
  403817:	mov    QWORD PTR [rbx+0x8],0x0
  40381f:	mov    QWORD PTR [rbx+0x10],rax
  403823:	test   rax,rax
  403826:	je     4038a0 <open@plt+0x10a0>
  403828:	mov    QWORD PTR [rax+0x8],rbx
  40382c:	mov    QWORD PTR [rip+0x3a1d],rbx        # 407250 <open@plt+0x4a50>
  403833:	inc    QWORD PTR [rip+0x3a26]        # 407260 <open@plt+0x4a60>
  40383a:	jmp    4036a1 <open@plt+0xea1>
  40383f:	nop
  403840:	mov    ecx,DWORD PTR [rbx+0x30]
  403843:	mov    edx,0x10624dd3
  403848:	mov    eax,ecx
  40384a:	mul    edx
  40384c:	mov    rax,QWORD PTR [rbx+0x8]
  403850:	shr    edx,0x7
  403853:	imul   edx,edx,0x7d0
  403859:	sub    ecx,edx
  40385b:	mov    edx,ecx
  40385d:	mov    rcx,QWORD PTR [rbx+0x10]
  403861:	test   rcx,rcx
  403864:	je     4038d0 <open@plt+0x10d0>
  403866:	mov    QWORD PTR [rcx+0x8],rax
  40386a:	lea    rsi,[rip+0x3a0f]        # 407280 <open@plt+0x4a80>
  403871:	mov    rax,QWORD PTR [rbx+0x8]
  403875:	test   rax,rax
  403878:	je     4038c0 <open@plt+0x10c0>
  40387a:	mov    QWORD PTR [rax+0x10],rcx
  40387e:	lea    rax,[rdx+rdx*2]
  403882:	mov    QWORD PTR [rbx+0x8],0x0
  40388a:	mov    QWORD PTR [rbx+0x10],0x0
  403892:	dec    QWORD PTR [rsi+rax*8+0x10]
  403897:	jmp    4036ff <open@plt+0xeff>
  40389c:	nop    DWORD PTR [rax+0x0]
  4038a0:	cmp    QWORD PTR [rip+0x39b0],0x0        # 407258 <open@plt+0x4a58>
  4038a8:	jne    40382c <open@plt+0x102c>
  4038aa:	mov    QWORD PTR [rip+0x39a7],rbx        # 407258 <open@plt+0x4a58>
  4038b1:	jmp    40382c <open@plt+0x102c>
  4038b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038c0:	lea    rax,[rdx+rdx*2]
  4038c4:	mov    QWORD PTR [rsi+rax*8],rcx
  4038c8:	jmp    40387e <open@plt+0x107e>
  4038ca:	nop    WORD PTR [rax+rax*1+0x0]
  4038d0:	lea    rsi,[rip+0x39a9]        # 407280 <open@plt+0x4a80>
  4038d7:	lea    rdi,[rdx+rdx*2]
  4038db:	mov    QWORD PTR [rsi+rdi*8+0x8],rax
  4038e0:	jmp    403875 <open@plt+0x1075>
  4038e2:	call   4026d0 <__stack_chk_fail@plt>
  4038e7:	nop    WORD PTR [rax+rax*1+0x0]
  4038f0:	endbr64 
  4038f4:	push   r14
  4038f6:	lea    r14,[rip+0x1756]        # 405053 <open@plt+0x2853>
  4038fd:	push   r13
  4038ff:	push   r12
  403901:	lea    r12,[rip+0x3978]        # 407280 <open@plt+0x4a80>
  403908:	lea    r13,[r12+0xbb80]
  403910:	push   rbp
  403911:	push   rbx
  403912:	nop    WORD PTR [rax+rax*1+0x0]
  403918:	mov    rax,QWORD PTR [r12]
  40391c:	test   rax,rax
  40391f:	je     40396a <open@plt+0x116a>
  403921:	mov    rbp,QWORD PTR [rax]
  403924:	mov    rbx,QWORD PTR [rax+0x10]
  403928:	test   BYTE PTR [rbp+0x68],0x1
  40392c:	je     403950 <open@plt+0x1150>
  40392e:	xchg   ax,ax
  403930:	mov    rdi,QWORD PTR [rbp+0x38]
  403934:	call   4024b0 <rb_ssl_handshake_count@plt>
  403939:	cmp    eax,0x2
  40393c:	jbe    403980 <open@plt+0x1180>
  40393e:	mov    rdx,r14
  403941:	mov    esi,0x1
  403946:	mov    rdi,rbp
  403949:	xor    eax,eax
  40394b:	call   403610 <open@plt+0xe10>
  403950:	test   rbx,rbx
  403953:	je     40396a <open@plt+0x116a>
  403955:	mov    rax,rbx
  403958:	mov    rbp,QWORD PTR [rax]
  40395b:	mov    rbx,QWORD PTR [rbx+0x10]
  40395f:	test   BYTE PTR [rbp+0x68],0x1
  403963:	jne    403930 <open@plt+0x1130>
  403965:	test   rbx,rbx
  403968:	jne    403955 <open@plt+0x1155>
  40396a:	add    r12,0x18
  40396e:	cmp    r12,r13
  403971:	jne    403918 <open@plt+0x1118>
  403973:	pop    rbx
  403974:	pop    rbp
  403975:	pop    r12
  403977:	pop    r13
  403979:	pop    r14
  40397b:	ret    
  40397c:	nop    DWORD PTR [rax+0x0]
  403980:	mov    rdi,QWORD PTR [rbp+0x38]
  403984:	call   402610 <rb_ssl_clear_handshake_count@plt>
  403989:	jmp    403950 <open@plt+0x1150>
  40398b:	nop    DWORD PTR [rax+rax*1+0x0]
  403990:	endbr64 
  403994:	test   BYTE PTR [rsi+0x68],0x8
  403998:	jne    403a20 <open@plt+0x1220>
  40399e:	push   rbp
  40399f:	mov    rbp,rdi
  4039a2:	push   rbx
  4039a3:	mov    rbx,rsi
  4039a6:	sub    rsp,0x8
  4039aa:	jmp    4039b6 <open@plt+0x11b6>
  4039ac:	nop    DWORD PTR [rax+0x0]
  4039b0:	cdqe   
  4039b2:	add    QWORD PTR [rbx+0x60],rax
  4039b6:	mov    rdi,QWORD PTR [rbx+0x28]
  4039ba:	mov    rsi,rbp
  4039bd:	call   4027d0 <rb_rawbuf_flush@plt>
  4039c2:	test   eax,eax
  4039c4:	jg     4039b0 <open@plt+0x11b0>
  4039c6:	je     403a08 <open@plt+0x1208>
  4039c8:	call   4026a0 <__errno_location@plt>
  4039cd:	mov    edi,DWORD PTR [rax]
  4039cf:	call   402460 <rb_ignore_errno@plt>
  4039d4:	test   eax,eax
  4039d6:	je     403a08 <open@plt+0x1208>
  4039d8:	mov    rdi,QWORD PTR [rbx+0x28]
  4039dc:	call   402630 <rb_rawbuf_length@plt>
  4039e1:	mov    rdi,QWORD PTR [rbx+0x40]
  4039e5:	test   eax,eax
  4039e7:	jle    403a28 <open@plt+0x1228>
  4039e9:	mov    rcx,rbx
  4039ec:	lea    rdx,[rip+0xffffffffffffff9d]        # 403990 <open@plt+0x1190>
  4039f3:	add    rsp,0x8
  4039f7:	pop    rbx
  4039f8:	mov    esi,0x2
  4039fd:	pop    rbp
  4039fe:	jmp    4024a0 <rb_setselect@plt>
  403a03:	nop    DWORD PTR [rax+rax*1+0x0]
  403a08:	add    rsp,0x8
  403a0c:	mov    rdi,rbx
  403a0f:	pop    rbx
  403a10:	xor    edx,edx
  403a12:	xor    esi,esi
  403a14:	xor    eax,eax
  403a16:	pop    rbp
  403a17:	jmp    403610 <open@plt+0xe10>
  403a1c:	nop    DWORD PTR [rax+0x0]
  403a20:	ret    
  403a21:	nop    DWORD PTR [rax+0x0]
  403a28:	xor    ecx,ecx
  403a2a:	xor    edx,edx
  403a2c:	jmp    4039f3 <open@plt+0x11f3>
  403a2e:	xchg   ax,ax
  403a30:	push   r13
  403a32:	push   r12
  403a34:	push   rbp
  403a35:	push   rbx
  403a36:	lea    r11,[rsp-0x4000]
  403a3e:	sub    rsp,0x1000
  403a45:	or     QWORD PTR [rsp],0x0
  403a4a:	cmp    rsp,r11
  403a4d:	jne    403a3e <open@plt+0x123e>
  403a4f:	sub    rsp,0x18
  403a53:	mov    ebp,0x4000
  403a58:	mov    rbx,rdi
  403a5b:	mov    rdi,QWORD PTR [rdi+0x70]
  403a5f:	mov    r13,rsp
  403a62:	mov    rax,QWORD PTR fs:0x28
  403a6b:	mov    QWORD PTR [rsp+0x4008],rax
  403a73:	xor    eax,eax
  403a75:	mov    QWORD PTR [rdi],rsi
  403a78:	mov    DWORD PTR [rdi+0x8],edx
  403a7b:	mov    QWORD PTR [rdi+0x18],r13
  403a7f:	mov    DWORD PTR [rdi+0x20],0x4000
  403a86:	mov    r12,rsi
  403a89:	mov    eax,edx
  403a8b:	test   eax,eax
  403a8d:	je     403ac0 <open@plt+0x12c0>
  403a8f:	xor    esi,esi
  403a91:	call   402550 <inflate@plt>
  403a96:	test   eax,eax
  403a98:	jne    403ae8 <open@plt+0x12e8>
  403a9a:	mov    rdi,QWORD PTR [rbx+0x70]
  403a9e:	mov    edx,ebp
  403aa0:	mov    eax,DWORD PTR [rdi+0x8]
  403aa3:	sub    edx,DWORD PTR [rdi+0x20]
  403aa6:	test   eax,eax
  403aa8:	jne    403b20 <open@plt+0x1320>
  403aaa:	test   edx,edx
  403aac:	je     403ac0 <open@plt+0x12c0>
  403aae:	test   BYTE PTR [rbx+0x68],0x8
  403ab2:	je     403b78 <open@plt+0x1378>
  403ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  403ac0:	mov    rax,QWORD PTR [rsp+0x4008]
  403ac8:	xor    rax,QWORD PTR fs:0x28
  403ad1:	jne    403b89 <open@plt+0x1389>
  403ad7:	add    rsp,0x4018
  403ade:	pop    rbx
  403adf:	pop    rbp
  403ae0:	pop    r12
  403ae2:	pop    r13
  403ae4:	ret    
  403ae5:	nop    DWORD PTR [rax]
  403ae8:	mov    ecx,0x6
  403aed:	lea    rsi,[rip+0x1572]        # 405066 <open@plt+0x2866>
  403af4:	mov    rdi,r12
  403af7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403af9:	seta   dl
  403afc:	sbb    dl,0x0
  403aff:	test   dl,dl
  403b01:	jne    403b50 <open@plt+0x1350>
  403b03:	lea    rdx,[rip+0x1563]        # 40506d <open@plt+0x286d>
  403b0a:	mov    esi,0x1
  403b0f:	mov    rdi,rbx
  403b12:	xor    eax,eax
  403b14:	call   403610 <open@plt+0xe10>
  403b19:	jmp    403ac0 <open@plt+0x12c0>
  403b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  403b20:	test   BYTE PTR [rbx+0x68],0x8
  403b24:	jne    403b39 <open@plt+0x1339>
  403b26:	mov    rdi,QWORD PTR [rbx+0x28]
  403b2a:	mov    rsi,r13
  403b2d:	call   4027c0 <rb_rawbuf_append@plt>
  403b32:	mov    rdi,QWORD PTR [rbx+0x70]
  403b36:	mov    eax,DWORD PTR [rdi+0x8]
  403b39:	mov    QWORD PTR [rdi+0x18],r13
  403b3d:	mov    DWORD PTR [rdi+0x20],0x4000
  403b44:	jmp    403a8b <open@plt+0x128b>
  403b49:	nop    DWORD PTR [rax+0x0]
  403b50:	mov    edi,eax
  403b52:	call   402440 <zError@plt>
  403b57:	mov    rcx,rax
  403b5a:	lea    rdx,[rip+0x1528]        # 405089 <open@plt+0x2889>
  403b61:	mov    esi,0x1
  403b66:	mov    rdi,rbx
  403b69:	xor    eax,eax
  403b6b:	call   403610 <open@plt+0xe10>
  403b70:	jmp    403ac0 <open@plt+0x12c0>
  403b75:	nop    DWORD PTR [rax]
  403b78:	mov    rdi,QWORD PTR [rbx+0x28]
  403b7c:	mov    rsi,r13
  403b7f:	call   4027c0 <rb_rawbuf_append@plt>
  403b84:	jmp    403ac0 <open@plt+0x12c0>
  403b89:	call   4026d0 <__stack_chk_fail@plt>
  403b8e:	xchg   ax,ax
  403b90:	push   r12
  403b92:	push   rbp
  403b93:	push   rbx
  403b94:	lea    r11,[rsp-0x4000]
  403b9c:	sub    rsp,0x1000
  403ba3:	or     QWORD PTR [rsp],0x0
  403ba8:	cmp    rsp,r11
  403bab:	jne    403b9c <open@plt+0x139c>
  403bad:	sub    rsp,0x10
  403bb1:	mov    rax,QWORD PTR fs:0x28
  403bba:	mov    QWORD PTR [rsp+0x4008],rax
  403bc2:	xor    eax,eax
  403bc4:	movzx  ecx,BYTE PTR [rdi+0x68]
  403bc8:	mov    rbx,rdi
  403bcb:	mov    rbp,rsp
  403bce:	xchg   ax,ax
  403bd0:	and    ecx,0x8
  403bd3:	jne    403c20 <open@plt+0x1420>
  403bd5:	mov    rdi,QWORD PTR [rbx+0x38]
  403bd9:	mov    edx,0x4000
  403bde:	mov    rsi,rbp
  403be1:	call   4025b0 <rb_read@plt>
  403be6:	mov    r12d,eax
  403be9:	test   eax,eax
  403beb:	je     403d00 <open@plt+0x1500>
  403bf1:	js     403c60 <open@plt+0x1460>
  403bf3:	movzx  ecx,BYTE PTR [rbx+0x68]
  403bf7:	movsxd rdx,eax
  403bfa:	add    QWORD PTR [rbx+0x50],rdx
  403bfe:	test   cl,0x2
  403c01:	jne    403c48 <open@plt+0x1448>
  403c03:	test   cl,0x8
  403c06:	jne    403bd0 <open@plt+0x13d0>
  403c08:	mov    rdi,QWORD PTR [rbx+0x28]
  403c0c:	mov    edx,eax
  403c0e:	mov    rsi,rbp
  403c11:	call   4027c0 <rb_rawbuf_append@plt>
  403c16:	movzx  ecx,BYTE PTR [rbx+0x68]
  403c1a:	and    ecx,0x8
  403c1d:	je     403bd5 <open@plt+0x13d5>
  403c1f:	nop
  403c20:	mov    rax,QWORD PTR [rsp+0x4008]
  403c28:	xor    rax,QWORD PTR fs:0x28
  403c31:	jne    403d2d <open@plt+0x152d>
  403c37:	add    rsp,0x4010
  403c3e:	pop    rbx
  403c3f:	pop    rbp
  403c40:	pop    r12
  403c42:	ret    
  403c43:	nop    DWORD PTR [rax+rax*1+0x0]
  403c48:	mov    rsi,rbp
  403c4b:	mov    rdi,rbx
  403c4e:	call   403a30 <open@plt+0x1230>
  403c53:	movzx  ecx,BYTE PTR [rbx+0x68]
  403c57:	jmp    403bd0 <open@plt+0x13d0>
  403c5c:	nop    DWORD PTR [rax+0x0]
  403c60:	call   4026a0 <__errno_location@plt>
  403c65:	mov    edi,DWORD PTR [rax]
  403c67:	mov    rbp,rax
  403c6a:	call   402460 <rb_ignore_errno@plt>
  403c6f:	test   eax,eax
  403c71:	je     403c9f <open@plt+0x149f>
  403c73:	mov    rdi,QWORD PTR [rbx+0x38]
  403c77:	cmp    r12d,0xfffffffc
  403c7b:	je     403cd1 <open@plt+0x14d1>
  403c7d:	mov    rcx,rbx
  403c80:	lea    rdx,[rip+0xb9]        # 403d40 <open@plt+0x1540>
  403c87:	mov    esi,0x1
  403c8c:	call   4024a0 <rb_setselect@plt>
  403c91:	mov    rdi,QWORD PTR [rbx+0x40]
  403c95:	mov    rsi,rbx
  403c98:	call   403990 <open@plt+0x1190>
  403c9d:	jmp    403c20 <open@plt+0x1420>
  403c9f:	test   BYTE PTR [rbx+0x68],0x1
  403ca3:	je     403cab <open@plt+0x14ab>
  403ca5:	cmp    r12d,0xfffffffe
  403ca9:	je     403d22 <open@plt+0x1522>
  403cab:	mov    edi,DWORD PTR [rbp+0x0]
  403cae:	call   4025e0 <strerror@plt>
  403cb3:	mov    rcx,rax
  403cb6:	lea    rdx,[rip+0x13df]        # 40509c <open@plt+0x289c>
  403cbd:	mov    esi,0x1
  403cc2:	mov    rdi,rbx
  403cc5:	xor    eax,eax
  403cc7:	call   403610 <open@plt+0xe10>
  403ccc:	jmp    403c20 <open@plt+0x1420>
  403cd1:	xor    ecx,ecx
  403cd3:	xor    edx,edx
  403cd5:	mov    esi,0x1
  403cda:	call   4024a0 <rb_setselect@plt>
  403cdf:	mov    rdi,QWORD PTR [rbx+0x38]
  403ce3:	mov    rcx,rbx
  403ce6:	lea    rdx,[rip+0x53]        # 403d40 <open@plt+0x1540>
  403ced:	mov    esi,0x2
  403cf2:	call   4024a0 <rb_setselect@plt>
  403cf7:	or     BYTE PTR [rbx+0x68],0x20
  403cfb:	jmp    403c91 <open@plt+0x1491>
  403cfd:	nop    DWORD PTR [rax]
  403d00:	lea    rcx,[rip+0x1469]        # 405170 <open@plt+0x2970>
  403d07:	lea    rdx,[rip+0x13bd]        # 4050cb <open@plt+0x28cb>
  403d0e:	mov    esi,0x1
  403d13:	mov    rdi,rbx
  403d16:	xor    eax,eax
  403d18:	call   403610 <open@plt+0xe10>
  403d1d:	jmp    403c20 <open@plt+0x1420>
  403d22:	mov    rdi,QWORD PTR [rbx+0x38]
  403d26:	call   402660 <rb_get_ssl_strerror@plt>
  403d2b:	jmp    403cb3 <open@plt+0x14b3>
  403d2d:	call   4026d0 <__stack_chk_fail@plt>
  403d32:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403d3d:	nop    DWORD PTR [rax]
  403d40:	endbr64 
  403d44:	test   rsi,rsi
  403d47:	je     403d80 <open@plt+0x1580>
  403d49:	movzx  eax,BYTE PTR [rsi+0x68]
  403d4d:	test   al,0x8
  403d4f:	jne    403d80 <open@plt+0x1580>
  403d51:	push   rbx
  403d52:	mov    rbx,rsi
  403d55:	test   al,0x20
  403d57:	jne    403d68 <open@plt+0x1568>
  403d59:	mov    rdi,rbx
  403d5c:	pop    rbx
  403d5d:	jmp    403b90 <open@plt+0x1390>
  403d62:	nop    WORD PTR [rax+rax*1+0x0]
  403d68:	and    eax,0xffffffdf
  403d6b:	mov    BYTE PTR [rsi+0x68],al
  403d6e:	mov    rdi,QWORD PTR [rsi+0x38]
  403d72:	call   403d90 <open@plt+0x1590>
  403d77:	test   BYTE PTR [rbx+0x68],0x8
  403d7b:	je     403d59 <open@plt+0x1559>
  403d7d:	pop    rbx
  403d7e:	ret    
  403d7f:	nop
  403d80:	ret    
  403d81:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403d8c:	nop    DWORD PTR [rax+0x0]
  403d90:	endbr64 
  403d94:	movzx  eax,BYTE PTR [rsi+0x68]
  403d98:	test   al,0x8
  403d9a:	jne    403ec8 <open@plt+0x16c8>
  403da0:	push   r12
  403da2:	mov    r12,rdi
  403da5:	push   rbp
  403da6:	mov    rbp,rsi
  403da9:	push   rbx
  403daa:	test   al,0x10
  403dac:	je     403dd4 <open@plt+0x15d4>
  403dae:	and    eax,0xffffffef
  403db1:	mov    BYTE PTR [rsi+0x68],al
  403db4:	mov    rdi,QWORD PTR [rsi+0x38]
  403db8:	call   403d40 <open@plt+0x1540>
  403dbd:	test   BYTE PTR [rbp+0x68],0x8
  403dc1:	je     403dd4 <open@plt+0x15d4>
  403dc3:	pop    rbx
  403dc4:	pop    rbp
  403dc5:	pop    r12
  403dc7:	ret    
  403dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  403dd0:	add    QWORD PTR [rbp+0x48],rbx
  403dd4:	mov    rdi,QWORD PTR [rbp+0x20]
  403dd8:	mov    rsi,r12
  403ddb:	call   4027d0 <rb_rawbuf_flush@plt>
  403de0:	movsxd rbx,eax
  403de3:	test   ebx,ebx
  403de5:	jg     403dd0 <open@plt+0x15d0>
  403de7:	call   4026a0 <__errno_location@plt>
  403dec:	mov    r12,rax
  403def:	test   ebx,ebx
  403df1:	jne    403e40 <open@plt+0x1640>
  403df3:	lea    rcx,[rip+0x1376]        # 405170 <open@plt+0x2970>
  403dfa:	lea    rdx,[rip+0x12ca]        # 4050cb <open@plt+0x28cb>
  403e01:	mov    esi,0x1
  403e06:	mov    rdi,rbp
  403e09:	xor    eax,eax
  403e0b:	call   403610 <open@plt+0xe10>
  403e10:	mov    edi,DWORD PTR [r12]
  403e14:	call   4025e0 <strerror@plt>
  403e19:	pop    rbx
  403e1a:	mov    rdi,rbp
  403e1d:	pop    rbp
  403e1e:	mov    rcx,rax
  403e21:	lea    rdx,[rip+0x1283]        # 4050ab <open@plt+0x28ab>
  403e28:	mov    esi,0x1
  403e2d:	xor    eax,eax
  403e2f:	pop    r12
  403e31:	jmp    403610 <open@plt+0xe10>
  403e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e40:	mov    edi,DWORD PTR [rax]
  403e42:	call   402460 <rb_ignore_errno@plt>
  403e47:	test   eax,eax
  403e49:	jne    403e68 <open@plt+0x1668>
  403e4b:	cmp    ebx,0xfffffffe
  403e4e:	jne    403e10 <open@plt+0x1610>
  403e50:	test   BYTE PTR [rbp+0x68],0x1
  403e54:	je     403e10 <open@plt+0x1610>
  403e56:	mov    rdi,QWORD PTR [rbp+0x38]
  403e5a:	call   402660 <rb_get_ssl_strerror@plt>
  403e5f:	jmp    403e19 <open@plt+0x1619>
  403e61:	nop    DWORD PTR [rax+0x0]
  403e68:	mov    rdi,QWORD PTR [rbp+0x20]
  403e6c:	call   402630 <rb_rawbuf_length@plt>
  403e71:	mov    rdi,QWORD PTR [rbp+0x38]
  403e75:	test   eax,eax
  403e77:	jle    403ef1 <open@plt+0x16f1>
  403e79:	mov    rcx,rbp
  403e7c:	lea    rdx,[rip+0xffffffffffffff0d]        # 403d90 <open@plt+0x1590>
  403e83:	cmp    ebx,0xfffffffd
  403e86:	je     403ec9 <open@plt+0x16c9>
  403e88:	mov    esi,0x2
  403e8d:	call   4024a0 <rb_setselect@plt>
  403e92:	movzx  eax,BYTE PTR [rbp+0x68]
  403e96:	test   al,0x4
  403e98:	je     403dc3 <open@plt+0x15c3>
  403e9e:	mov    rdi,QWORD PTR [rbp+0x20]
  403ea2:	call   402630 <rb_rawbuf_length@plt>
  403ea7:	test   eax,eax
  403ea9:	jne    403dc3 <open@plt+0x15c3>
  403eaf:	and    BYTE PTR [rbp+0x68],0xfb
  403eb3:	mov    rdi,QWORD PTR [rbp+0x40]
  403eb7:	mov    rsi,rbp
  403eba:	pop    rbx
  403ebb:	pop    rbp
  403ebc:	pop    r12
  403ebe:	jmp    404150 <open@plt+0x1950>
  403ec3:	nop    DWORD PTR [rax+rax*1+0x0]
  403ec8:	ret    
  403ec9:	mov    esi,0x1
  403ece:	call   4024a0 <rb_setselect@plt>
  403ed3:	mov    rdi,QWORD PTR [rbp+0x38]
  403ed7:	xor    ecx,ecx
  403ed9:	xor    edx,edx
  403edb:	mov    esi,0x2
  403ee0:	call   4024a0 <rb_setselect@plt>
  403ee5:	movzx  eax,BYTE PTR [rbp+0x68]
  403ee9:	or     eax,0x10
  403eec:	mov    BYTE PTR [rbp+0x68],al
  403eef:	jmp    403e96 <open@plt+0x1696>
  403ef1:	xor    ecx,ecx
  403ef3:	xor    edx,edx
  403ef5:	jmp    403e88 <open@plt+0x1688>
  403ef7:	nop    WORD PTR [rax+rax*1+0x0]
  403f00:	push   r15
  403f02:	push   r14
  403f04:	push   r13
  403f06:	push   r12
  403f08:	push   rbp
  403f09:	push   rbx
  403f0a:	lea    r11,[rsp-0x8000]
  403f12:	sub    rsp,0x1000
  403f19:	or     QWORD PTR [rsp],0x0
  403f1e:	cmp    rsp,r11
  403f21:	jne    403f12 <open@plt+0x1712>
  403f23:	sub    rsp,0x18
  403f27:	lea    r14,[rip+0x1292]        # 4051c0 <open@plt+0x29c0>
  403f2e:	lea    r13,[rip+0x1263]        # 405198 <open@plt+0x2998>
  403f35:	mov    rax,QWORD PTR fs:0x28
  403f3e:	mov    QWORD PTR [rsp+0x8008],rax
  403f46:	xor    eax,eax
  403f48:	mov    rbx,rdi
  403f4b:	mov    rbp,rsp
  403f4e:	lea    r12,[rsp+0x4000]
  403f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f60:	test   BYTE PTR [rbx+0x68],0x8
  403f64:	jne    403f9e <open@plt+0x179e>
  403f66:	mov    rdi,QWORD PTR [rbx+0x40]
  403f6a:	mov    edx,0x4000
  403f6f:	mov    rsi,rbp
  403f72:	call   4025b0 <rb_read@plt>
  403f77:	test   eax,eax
  403f79:	je     404130 <open@plt+0x1930>
  403f7f:	js     4040b0 <open@plt+0x18b0>
  403f85:	movsxd rdx,eax
  403f88:	add    QWORD PTR [rbx+0x58],rdx
  403f8c:	movzx  edx,BYTE PTR [rbx+0x68]
  403f90:	test   dl,0x2
  403f93:	jne    403fd0 <open@plt+0x17d0>
  403f95:	and    edx,0x8
  403f98:	je     404090 <open@plt+0x1890>
  403f9e:	mov    rax,QWORD PTR [rsp+0x8008]
  403fa6:	xor    rax,QWORD PTR fs:0x28
  403faf:	jne    404143 <open@plt+0x1943>
  403fb5:	add    rsp,0x8018
  403fbc:	pop    rbx
  403fbd:	pop    rbp
  403fbe:	pop    r12
  403fc0:	pop    r13
  403fc2:	pop    r14
  403fc4:	pop    r15
  403fc6:	ret    
  403fc7:	nop    WORD PTR [rax+rax*1+0x0]
  403fd0:	mov    r15,QWORD PTR [rbx+0x70]
  403fd4:	mov    esi,0x2
  403fd9:	mov    QWORD PTR [r15+0x70],rbp
  403fdd:	mov    DWORD PTR [r15+0x78],eax
  403fe1:	mov    QWORD PTR [r15+0x88],r12
  403fe8:	mov    DWORD PTR [r15+0x90],0x4000
  403ff3:	lea    rdi,[r15+0x70]
  403ff7:	call   4024f0 <deflate@plt>
  403ffc:	test   eax,eax
  403ffe:	jne    4040d0 <open@plt+0x18d0>
  404004:	mov    eax,DWORD PTR [r15+0x90]
  40400b:	test   eax,eax
  40400d:	je     4040f8 <open@plt+0x18f8>
  404013:	mov    edx,DWORD PTR [r15+0x78]
  404017:	test   edx,edx
  404019:	jne    404110 <open@plt+0x1910>
  40401f:	test   BYTE PTR [rbx+0x68],0x8
  404023:	jne    403f9e <open@plt+0x179e>
  404029:	mov    edx,0x4000
  40402e:	mov    rdi,QWORD PTR [rbx+0x20]
  404032:	sub    edx,eax
  404034:	mov    rsi,r12
  404037:	call   4027c0 <rb_rawbuf_append@plt>
  40403c:	movzx  eax,BYTE PTR [rbx+0x68]
  404040:	and    eax,0x8
  404043:	nop    DWORD PTR [rax+rax*1+0x0]
  404048:	test   al,al
  40404a:	jne    403f9e <open@plt+0x179e>
  404050:	mov    rdi,QWORD PTR [rbx+0x20]
  404054:	call   402630 <rb_rawbuf_length@plt>
  404059:	cmp    eax,0xfff
  40405e:	jle    403f60 <open@plt+0x1760>
  404064:	or     BYTE PTR [rbx+0x68],0x4
  404068:	mov    rdi,QWORD PTR [rbx+0x40]
  40406c:	xor    ecx,ecx
  40406e:	xor    edx,edx
  404070:	mov    esi,0x1
  404075:	call   4024a0 <rb_setselect@plt>
  40407a:	mov    rdi,QWORD PTR [rbx+0x38]
  40407e:	mov    rsi,rbx
  404081:	call   403d90 <open@plt+0x1590>
  404086:	jmp    403f9e <open@plt+0x179e>
  40408b:	nop    DWORD PTR [rax+rax*1+0x0]
  404090:	mov    rdi,QWORD PTR [rbx+0x20]
  404094:	mov    edx,eax
  404096:	mov    rsi,rbp
  404099:	call   4027c0 <rb_rawbuf_append@plt>
  40409e:	movzx  eax,BYTE PTR [rbx+0x68]
  4040a2:	and    eax,0x8
  4040a5:	jmp    404048 <open@plt+0x1848>
  4040a7:	nop    WORD PTR [rax+rax*1+0x0]
  4040b0:	call   4026a0 <__errno_location@plt>
  4040b5:	mov    edi,DWORD PTR [rax]
  4040b7:	call   402460 <rb_ignore_errno@plt>
  4040bc:	test   eax,eax
  4040be:	je     404130 <open@plt+0x1930>
  4040c0:	mov    rdi,QWORD PTR [rbx+0x40]
  4040c4:	mov    rcx,rbx
  4040c7:	lea    rdx,[rip+0x82]        # 404150 <open@plt+0x1950>
  4040ce:	jmp    404070 <open@plt+0x1870>
  4040d0:	mov    edi,eax
  4040d2:	call   402440 <zError@plt>
  4040d7:	mov    rcx,rax
  4040da:	lea    rdx,[rip+0xfda]        # 4050bb <open@plt+0x28bb>
  4040e1:	mov    esi,0x1
  4040e6:	mov    rdi,rbx
  4040e9:	xor    eax,eax
  4040eb:	call   403610 <open@plt+0xe10>
  4040f0:	jmp    40409e <open@plt+0x189e>
  4040f2:	nop    WORD PTR [rax+rax*1+0x0]
  4040f8:	mov    rdx,r13
  4040fb:	mov    esi,0x1
  404100:	mov    rdi,rbx
  404103:	call   403610 <open@plt+0xe10>
  404108:	jmp    40409e <open@plt+0x189e>
  40410a:	nop    WORD PTR [rax+rax*1+0x0]
  404110:	mov    rdx,r14
  404113:	mov    esi,0x1
  404118:	mov    rdi,rbx
  40411b:	xor    eax,eax
  40411d:	call   403610 <open@plt+0xe10>
  404122:	jmp    40409e <open@plt+0x189e>
  404127:	nop    WORD PTR [rax+rax*1+0x0]
  404130:	xor    edx,edx
  404132:	xor    esi,esi
  404134:	mov    rdi,rbx
  404137:	xor    eax,eax
  404139:	call   403610 <open@plt+0xe10>
  40413e:	jmp    403f9e <open@plt+0x179e>
  404143:	call   4026d0 <__stack_chk_fail@plt>
  404148:	nop    DWORD PTR [rax+rax*1+0x0]
  404150:	endbr64 
  404154:	test   rsi,rsi
  404157:	je     40415f <open@plt+0x195f>
  404159:	test   BYTE PTR [rsi+0x68],0x8
  40415d:	je     404160 <open@plt+0x1960>
  40415f:	ret    
  404160:	push   rbx
  404161:	mov    rbx,rsi
  404164:	mov    rdi,QWORD PTR [rsi+0x20]
  404168:	call   402630 <rb_rawbuf_length@plt>
  40416d:	cmp    eax,0xfff
  404172:	jg     404180 <open@plt+0x1980>
  404174:	mov    rdi,rbx
  404177:	pop    rbx
  404178:	jmp    403f00 <open@plt+0x1700>
  40417d:	nop    DWORD PTR [rax]
  404180:	or     BYTE PTR [rbx+0x68],0x4
  404184:	mov    rdi,QWORD PTR [rbx+0x40]
  404188:	mov    esi,0x1
  40418d:	xor    ecx,ecx
  40418f:	xor    edx,edx
  404191:	call   4024a0 <rb_setselect@plt>
  404196:	mov    rdi,QWORD PTR [rbx+0x38]
  40419a:	mov    rsi,rbx
  40419d:	pop    rbx
  40419e:	jmp    403d90 <open@plt+0x1590>
  4041a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4041ae:	xchg   ax,ax
  4041b0:	endbr64 
  4041b4:	push   rbx
  4041b5:	mov    rbx,r8
  4041b8:	sub    rsp,0x10
  4041bc:	mov    rax,QWORD PTR fs:0x28
  4041c5:	mov    QWORD PTR [rsp+0x8],rax
  4041ca:	xor    eax,eax
  4041cc:	test   esi,esi
  4041ce:	je     4041f8 <open@plt+0x19f8>
  4041d0:	xor    edx,edx
  4041d2:	xor    esi,esi
  4041d4:	mov    rdi,r8
  4041d7:	xor    eax,eax
  4041d9:	call   403610 <open@plt+0xe10>
  4041de:	mov    rax,QWORD PTR [rsp+0x8]
  4041e3:	xor    rax,QWORD PTR fs:0x28
  4041ec:	jne    404241 <open@plt+0x1a41>
  4041ee:	add    rsp,0x10
  4041f2:	pop    rbx
  4041f3:	ret    
  4041f4:	nop    DWORD PTR [rax+0x0]
  4041f8:	mov    rdi,r8
  4041fb:	call   4032e0 <open@plt+0xae0>
  404200:	mov    rdi,rbx
  404203:	call   4033e0 <open@plt+0xbe0>
  404208:	mov    eax,DWORD PTR [rbx+0x30]
  40420b:	mov    rdi,QWORD PTR [rbx+0x18]
  40420f:	lea    rsi,[rsp+0x3]
  404214:	mov    edx,0x5
  404219:	mov    DWORD PTR [rsp+0x4],eax
  40421d:	mov    BYTE PTR [rsp+0x3],0x4f
  404222:	call   4030c0 <open@plt+0x8c0>
  404227:	mov    rdi,QWORD PTR [rbx+0x38]
  40422b:	mov    rsi,rbx
  40422e:	call   403d40 <open@plt+0x1540>
  404233:	mov    rdi,QWORD PTR [rbx+0x40]
  404237:	mov    rsi,rbx
  40423a:	call   404150 <open@plt+0x1950>
  40423f:	jmp    4041de <open@plt+0x19de>
  404241:	call   4026d0 <__stack_chk_fail@plt>
  404246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404250:	endbr64 
  404254:	push   rbx
  404255:	mov    rbx,rdx
  404258:	sub    rsp,0x10
  40425c:	mov    rax,QWORD PTR fs:0x28
  404265:	mov    QWORD PTR [rsp+0x8],rax
  40426a:	xor    eax,eax
  40426c:	test   esi,esi
  40426e:	je     4042b8 <open@plt+0x1ab8>
  404270:	cmp    esi,0x3
  404273:	je     404330 <open@plt+0x1b30>
  404279:	cmp    esi,0x6
  40427c:	je     404308 <open@plt+0x1b08>
  404282:	lea    rdx,[rip+0xe5d]        # 4050e6 <open@plt+0x28e6>
  404289:	mov    esi,0x1
  40428e:	mov    rdi,rbx
  404291:	xor    eax,eax
  404293:	call   403610 <open@plt+0xe10>
  404298:	mov    rax,QWORD PTR [rsp+0x8]
  40429d:	xor    rax,QWORD PTR fs:0x28
  4042a6:	jne    40434b <open@plt+0x1b4b>
  4042ac:	add    rsp,0x10
  4042b0:	pop    rbx
  4042b1:	ret    
  4042b2:	nop    WORD PTR [rax+rax*1+0x0]
  4042b8:	mov    rdi,rdx
  4042bb:	call   4032e0 <open@plt+0xae0>
  4042c0:	mov    rdi,rbx
  4042c3:	call   4033e0 <open@plt+0xbe0>
  4042c8:	mov    eax,DWORD PTR [rbx+0x30]
  4042cb:	mov    rdi,QWORD PTR [rbx+0x18]
  4042cf:	lea    rsi,[rsp+0x3]
  4042d4:	mov    edx,0x5
  4042d9:	mov    DWORD PTR [rsp+0x4],eax
  4042dd:	mov    BYTE PTR [rsp+0x3],0x4f
  4042e2:	call   4030c0 <open@plt+0x8c0>
  4042e7:	mov    rdi,QWORD PTR [rbx+0x38]
  4042eb:	mov    rsi,rbx
  4042ee:	call   403d40 <open@plt+0x1540>
  4042f3:	mov    rdi,QWORD PTR [rbx+0x40]
  4042f7:	mov    rsi,rbx
  4042fa:	call   404150 <open@plt+0x1950>
  4042ff:	jmp    404298 <open@plt+0x1a98>
  404301:	nop    DWORD PTR [rax+0x0]
  404308:	mov    rdi,QWORD PTR [rdx+0x38]
  40430c:	call   402660 <rb_get_ssl_strerror@plt>
  404311:	mov    rcx,rax
  404314:	lea    rdx,[rip+0xdb0]        # 4050cb <open@plt+0x28cb>
  40431b:	mov    esi,0x1
  404320:	mov    rdi,rbx
  404323:	xor    eax,eax
  404325:	call   403610 <open@plt+0xe10>
  40432a:	jmp    404298 <open@plt+0x1a98>
  40432f:	nop
  404330:	lea    rdx,[rip+0xd97]        # 4050ce <open@plt+0x28ce>
  404337:	mov    esi,0x1
  40433c:	mov    rdi,rbx
  40433f:	xor    eax,eax
  404341:	call   403610 <open@plt+0xe10>
  404346:	jmp    404298 <open@plt+0x1a98>
  40434b:	call   4026d0 <__stack_chk_fail@plt>
  404350:	push   rbp
  404351:	mov    rbp,rdi
  404354:	push   rbx
  404355:	sub    rsp,0x8
  404359:	test   rsi,rsi
  40435c:	je     4043dd <open@plt+0x1bdd>
  40435e:	mov    rdx,QWORD PTR [rsi+0x30]
  404362:	mov    rbx,rsi
  404365:	mov    rsi,QWORD PTR [rsi+0x28]
  404369:	call   402ee0 <open@plt+0x6e0>
  40436e:	mov    rdi,rax
  404371:	mov    rax,QWORD PTR [rbx+0x18]
  404375:	mov    edx,0x10624dd3
  40437a:	mov    ecx,DWORD PTR [rax+0x1]
  40437d:	lea    rsi,[rip+0x2efc]        # 407280 <open@plt+0x4a80>
  404384:	mov    eax,ecx
  404386:	mul    edx
  404388:	mov    eax,ecx
  40438a:	mov    DWORD PTR [rdi+0x30],ecx
  40438d:	shr    edx,0x7
  404390:	imul   edx,edx,0x7d0
  404396:	mov    QWORD PTR [rdi],rdi
  404399:	mov    QWORD PTR [rdi+0x8],0x0
  4043a1:	sub    eax,edx
  4043a3:	lea    rdx,[rax+rax*2]
  4043a7:	lea    rcx,[rsi+rdx*8]
  4043ab:	mov    rdx,QWORD PTR [rcx]
  4043ae:	mov    QWORD PTR [rdi+0x10],rdx
  4043b2:	test   rdx,rdx
  4043b5:	je     404400 <open@plt+0x1c00>
  4043b7:	mov    QWORD PTR [rdx+0x8],rdi
  4043bb:	lea    rax,[rax+rax*2]
  4043bf:	lea    rax,[rsi+rax*8]
  4043c3:	inc    QWORD PTR [rax+0x10]
  4043c7:	mov    QWORD PTR [rax],rdi
  4043ca:	lea    rdx,[rip+0xe17]        # 4051e8 <open@plt+0x29e8>
  4043d1:	mov    esi,0x1
  4043d6:	xor    eax,eax
  4043d8:	call   403610 <open@plt+0xe10>
  4043dd:	add    rsp,0x8
  4043e1:	pop    rbx
  4043e2:	mov    rdi,rbp
  4043e5:	mov    edx,0x1
  4043ea:	lea    rsi,[rip+0xd0a]        # 4050fb <open@plt+0x28fb>
  4043f1:	pop    rbp
  4043f2:	jmp    4030c0 <open@plt+0x8c0>
  4043f7:	nop    WORD PTR [rax+rax*1+0x0]
  404400:	cmp    QWORD PTR [rcx+0x8],0x0
  404405:	jne    4043bb <open@plt+0x1bbb>
  404407:	mov    QWORD PTR [rcx+0x8],rdi
  40440b:	jmp    4043bb <open@plt+0x1bbb>
  40440d:	nop    DWORD PTR [rax]
  404410:	endbr64 
  404414:	push   r15
  404416:	push   r14
  404418:	push   r13
  40441a:	push   r12
  40441c:	push   rbp
  40441d:	push   rbx
  40441e:	mov    rbx,rsi
  404421:	sub    rsp,0x28
  404425:	mov    esi,0x50
  40442a:	mov    edi,0x1
  40442f:	call   402750 <calloc@plt>
  404434:	mov    rbp,rax
  404437:	test   rax,rax
  40443a:	je     4044c0 <open@plt+0x1cc0>
  404440:	mov    esi,0x4000
  404445:	mov    edi,0x1
  40444a:	call   402750 <calloc@plt>
  40444f:	test   rax,rax
  404452:	je     4044c0 <open@plt+0x1cc0>
  404454:	mov    QWORD PTR [rbp+0x18],rax
  404458:	mov    QWORD PTR [rbp+0x20],0x4000
  404460:	mov    rdi,QWORD PTR [rbx+0x20]
  404464:	lea    rcx,[rbp+0x28]
  404468:	mov    r8d,0x4
  40446e:	mov    edx,0x4000
  404473:	mov    rsi,rax
  404476:	call   402730 <rb_recv_fd_buf@plt>
  40447b:	test   eax,eax
  40447d:	jg     4044c8 <open@plt+0x1cc8>
  40447f:	mov    rdi,QWORD PTR [rbp+0x18]
  404483:	mov    r12d,eax
  404486:	test   rdi,rdi
  404489:	je     404490 <open@plt+0x1c90>
  40448b:	call   402570 <free@plt>
  404490:	mov    rdi,rbp
  404493:	call   402570 <free@plt>
  404498:	test   r12d,r12d
  40449b:	je     4044b0 <open@plt+0x1cb0>
  40449d:	call   4026a0 <__errno_location@plt>
  4044a2:	mov    edi,DWORD PTR [rax]
  4044a4:	call   402460 <rb_ignore_errno@plt>
  4044a9:	test   eax,eax
  4044ab:	jne    404525 <open@plt+0x1d25>
  4044ad:	nop    DWORD PTR [rax]
  4044b0:	xor    edi,edi
  4044b2:	call   4024d0 <exit@plt>
  4044b7:	nop    WORD PTR [rax+rax*1+0x0]
  4044c0:	call   402690 <rb_outofmemory@plt>
  4044c5:	nop    DWORD PTR [rax]
  4044c8:	cdqe   
  4044ca:	mov    QWORD PTR [rbp+0x20],rax
  4044ce:	mov    rax,QWORD PTR [rbx+0x38]
  4044d2:	mov    QWORD PTR [rbp+0x0],rbp
  4044d6:	mov    QWORD PTR [rbp+0x10],0x0
  4044de:	mov    QWORD PTR [rbp+0x8],rax
  4044e2:	test   rax,rax
  4044e5:	je     404518 <open@plt+0x1d18>
  4044e7:	mov    QWORD PTR [rax+0x10],rbp
  4044eb:	inc    QWORD PTR [rbx+0x40]
  4044ef:	mov    QWORD PTR [rbx+0x38],rbp
  4044f3:	xor    eax,eax
  4044f5:	cmp    QWORD PTR [rbp+rax*8+0x28],0x0
  4044fb:	mov    edx,eax
  4044fd:	je     40450d <open@plt+0x1d0d>
  4044ff:	inc    rax
  404502:	cmp    rax,0x4
  404506:	jne    4044f5 <open@plt+0x1cf5>
  404508:	mov    edx,0x4
  40450d:	mov    DWORD PTR [rbp+0x48],edx
  404510:	jmp    404425 <open@plt+0x1c25>
  404515:	nop    DWORD PTR [rax]
  404518:	cmp    QWORD PTR [rbx+0x30],0x0
  40451d:	jne    4044eb <open@plt+0x1ceb>
  40451f:	mov    QWORD PTR [rbx+0x30],rbp
  404523:	jmp    4044eb <open@plt+0x1ceb>
  404525:	mov    r13,QWORD PTR [rbx+0x30]
  404529:	test   r13,r13
  40452c:	je     404568 <open@plt+0x1d68>
  40452e:	mov    rbp,QWORD PTR [r13+0x10]
  404532:	lea    r12,[rip+0xd47]        # 405280 <open@plt+0x2a80>
  404539:	mov    r15,r13
  40453c:	nop    DWORD PTR [rax+0x0]
  404540:	mov    r14,QWORD PTR [r15]
  404543:	mov    rdi,QWORD PTR [r14+0x18]
  404547:	movzx  eax,BYTE PTR [rdi]
  40454a:	sub    eax,0x41
  40454d:	cmp    al,0x19
  40454f:	ja     404764 <open@plt+0x1f64>
  404555:	movzx  eax,al
  404558:	movsxd rax,DWORD PTR [r12+rax*4]
  40455c:	add    rax,r12
  40455f:	notrack jmp rax
  404562:	nop    WORD PTR [rax+rax*1+0x0]
  404568:	mov    rdi,QWORD PTR [rbx+0x20]
  40456c:	add    rsp,0x28
  404570:	mov    rcx,rbx
  404573:	pop    rbx
  404574:	pop    rbp
  404575:	pop    r12
  404577:	pop    r13
  404579:	pop    r14
  40457b:	lea    rdx,[rip+0xfffffffffffffe8e]        # 404410 <open@plt+0x1c10>
  404582:	mov    esi,0x1
  404587:	pop    r15
  404589:	jmp    4024a0 <rb_setselect@plt>
  40458e:	mov    eax,DWORD PTR [r14+0x48]
  404592:	cmp    eax,0x2
  404595:	jne    404a7d <open@plt+0x227d>
  40459b:	cmp    QWORD PTR [r14+0x20],0x5
  4045a0:	mov    rdi,QWORD PTR [r14+0x28]
  4045a4:	jbe    404a89 <open@plt+0x2289>
  4045aa:	mov    rdx,QWORD PTR [r14+0x30]
  4045ae:	mov    rsi,rdi
  4045b1:	mov    rdi,rbx
  4045b4:	call   402ee0 <open@plt+0x6e0>
  4045b9:	mov    rdi,QWORD PTR [rax+0x38]
  4045bd:	mov    r13,rax
  4045c0:	call   402430 <rb_get_type@plt>
  4045c5:	cmp    al,0x40
  4045c7:	je     404b84 <open@plt+0x2384>
  4045cd:	mov    rdi,QWORD PTR [r13+0x40]
  4045d1:	call   402430 <rb_get_type@plt>
  4045d6:	cmp    al,0x40
  4045d8:	je     404b71 <open@plt+0x2371>
  4045de:	mov    r10,QWORD PTR [r14+0x18]
  4045e2:	mov    edx,0x10624dd3
  4045e7:	mov    ecx,DWORD PTR [r10+0x1]
  4045eb:	mov    QWORD PTR [r13+0x0],r13
  4045ef:	mov    eax,ecx
  4045f1:	mul    edx
  4045f3:	mov    DWORD PTR [r13+0x30],ecx
  4045f7:	mov    QWORD PTR [r13+0x8],0x0
  4045ff:	mov    eax,edx
  404601:	shr    eax,0x7
  404604:	imul   eax,eax,0x7d0
  40460a:	mov    edx,ecx
  40460c:	lea    rcx,[rip+0x2c6d]        # 407280 <open@plt+0x4a80>
  404613:	sub    edx,eax
  404615:	mov    rax,rdx
  404618:	lea    rdx,[rdx+rdx*2]
  40461c:	lea    rcx,[rcx+rdx*8]
  404620:	mov    rdx,QWORD PTR [rcx]
  404623:	mov    QWORD PTR [r13+0x10],rdx
  404627:	test   rdx,rdx
  40462a:	je     404b5d <open@plt+0x235d>
  404630:	mov    QWORD PTR [rdx+0x8],r13
  404634:	lea    rax,[rax+rax*2]
  404638:	lea    rdx,[rip+0x2c41]        # 407280 <open@plt+0x4a80>
  40463f:	lea    rax,[rdx+rax*8]
  404643:	inc    QWORD PTR [rax+0x10]
  404647:	mov    QWORD PTR [rax],r13
  40464a:	mov    rcx,QWORD PTR [r14+0x20]
  40464e:	mov    esi,0xe0
  404653:	movzx  eax,BYTE PTR [r10+0x5]
  404658:	or     BYTE PTR [r13+0x68],0x2
  40465d:	sub    rcx,0x6
  404661:	mov    edi,0x1
  404666:	mov    QWORD PTR [rsp+0x10],r10
  40466b:	mov    BYTE PTR [rsp+0x8],al
  40466f:	mov    QWORD PTR [rsp],rcx
  404673:	call   402750 <calloc@plt>
  404678:	test   rax,rax
  40467b:	je     4044c0 <open@plt+0x1cc0>
  404681:	lea    rsi,[rip+0xffffffffffffe828]        # 402eb0 <open@plt+0x6b0>
  404688:	lea    rdi,[rip+0xffffffffffffe621]        # 402cb0 <open@plt+0x4b0>
  40468f:	mov    QWORD PTR [r13+0x70],rax
  404693:	mov    QWORD PTR [rax+0x40],rsi
  404697:	mov    QWORD PTR [rax+0x48],rdi
  40469b:	mov    QWORD PTR [rax+0x10],0x0
  4046a3:	mov    QWORD PTR [rax+0x28],0x0
  4046ab:	mov    DWORD PTR [rax+0x58],0x1
  4046b2:	mov    edx,0x70
  4046b7:	lea    rsi,[rip+0xa41]        # 4050ff <open@plt+0x28ff>
  4046be:	mov    rdi,rax
  4046c1:	mov    QWORD PTR [rsp+0x18],rax
  4046c6:	call   402720 <inflateInit_@plt>
  4046cb:	movzx  edx,BYTE PTR [rsp+0x8]
  4046d0:	mov    eax,0xffffffff
  4046d5:	cmp    dl,0xa
  4046d8:	mov    rcx,QWORD PTR [rsp+0x18]
  4046dd:	cmovae edx,eax
  4046e0:	lea    rsi,[rip+0xffffffffffffe7c9]        # 402eb0 <open@plt+0x6b0>
  4046e7:	lea    rdi,[rip+0xffffffffffffe5c2]        # 402cb0 <open@plt+0x4b0>
  4046ee:	mov    QWORD PTR [rcx+0xb0],rsi
  4046f5:	mov    QWORD PTR [rcx+0xb8],rdi
  4046fc:	mov    QWORD PTR [rcx+0x80],0x0
  404707:	mov    QWORD PTR [rcx+0x98],0x0
  404712:	mov    DWORD PTR [rcx+0xc8],0x1
  40471c:	movzx  esi,dl
  40471f:	mov    rdx,QWORD PTR [r13+0x70]
  404723:	mov    ecx,0x70
  404728:	lea    rdi,[rdx+0x70]
  40472c:	lea    rdx,[rip+0x9cc]        # 4050ff <open@plt+0x28ff>
  404733:	call   402500 <deflateInit_@plt>
  404738:	cmp    QWORD PTR [rsp],0x0
  40473d:	mov    r10,QWORD PTR [rsp+0x10]
  404742:	jne    404b48 <open@plt+0x2348>
  404748:	mov    rdi,QWORD PTR [r13+0x38]
  40474c:	mov    rsi,r13
  40474f:	call   403d40 <open@plt+0x1540>
  404754:	mov    rdi,QWORD PTR [r13+0x40]
  404758:	mov    rsi,r13
  40475b:	call   404150 <open@plt+0x1950>
  404760:	mov    rdi,QWORD PTR [r14+0x18]
  404764:	mov    rdx,QWORD PTR [r15+0x10]
  404768:	mov    rax,QWORD PTR [r15+0x8]
  40476c:	test   rdx,rdx
  40476f:	je     404a60 <open@plt+0x2260>
  404775:	mov    QWORD PTR [rdx+0x8],rax
  404779:	mov    rax,QWORD PTR [r15+0x8]
  40477d:	test   rax,rax
  404780:	je     404a50 <open@plt+0x2250>
  404786:	mov    QWORD PTR [rax+0x10],rdx
  40478a:	mov    QWORD PTR [r15+0x8],0x0
  404792:	mov    QWORD PTR [r15+0x10],0x0
  40479a:	dec    QWORD PTR [rbx+0x40]
  40479e:	test   rdi,rdi
  4047a1:	je     4047a8 <open@plt+0x1fa8>
  4047a3:	call   402570 <free@plt>
  4047a8:	mov    rdi,r14
  4047ab:	call   402570 <free@plt>
  4047b0:	test   rbp,rbp
  4047b3:	je     404568 <open@plt+0x1d68>
  4047b9:	mov    r15,rbp
  4047bc:	mov    rbp,QWORD PTR [rbp+0x10]
  4047c0:	jmp    404540 <open@plt+0x1d40>
  4047c5:	mov    rsi,rdi
  4047c8:	mov    rdi,rbx
  4047cb:	call   4031a0 <open@plt+0x9a0>
  4047d0:	mov    rdi,QWORD PTR [r14+0x18]
  4047d4:	jmp    404764 <open@plt+0x1f64>
  4047d6:	cmp    BYTE PTR [rip+0x2a67],0x0        # 407244 <open@plt+0x4a44>
  4047dd:	je     404a69 <open@plt+0x2269>
  4047e3:	lea    r13,[rdi+0x2]
  4047e7:	mov    rdi,r13
  4047ea:	call   402580 <strlen@plt>
  4047ef:	lea    rsi,[r13+rax*1+0x1]
  4047f4:	mov    rdi,rsi
  4047f7:	mov    QWORD PTR [rsp],rsi
  4047fb:	call   402580 <strlen@plt>
  404800:	mov    rsi,QWORD PTR [rsp]
  404804:	lea    rdx,[rsi+rax*1+0x1]
  404809:	mov    rdi,rdx
  40480c:	mov    QWORD PTR [rsp+0x8],rsi
  404811:	mov    QWORD PTR [rsp],rdx
  404815:	call   402580 <strlen@plt>
  40481a:	mov    rsi,QWORD PTR [rsp+0x8]
  40481f:	mov    rdx,QWORD PTR [rsp]
  404823:	cmp    BYTE PTR [rsi],0x0
  404826:	lea    rcx,[rdx+rax*1+0x1]
  40482b:	cmove  rsi,r13
  40482f:	xor    eax,eax
  404831:	cmp    BYTE PTR [rdx],0x0
  404834:	cmove  rdx,rax
  404838:	cmp    BYTE PTR [rcx],0x0
  40483b:	cmove  rcx,rax
  40483f:	mov    rdi,r13
  404842:	call   4027e0 <rb_setup_ssl_server@plt>
  404847:	test   eax,eax
  404849:	jne    404760 <open@plt+0x1f60>
  40484f:	mov    rdi,rbx
  404852:	mov    edx,0x1
  404857:	lea    rsi,[rip+0x89f]        # 4050fd <open@plt+0x28fd>
  40485e:	call   4030c0 <open@plt+0x8c0>
  404863:	mov    rdi,QWORD PTR [r14+0x18]
  404867:	jmp    404764 <open@plt+0x1f64>
  40486c:	cmp    QWORD PTR [r14+0x20],0x5
  404871:	jne    404ab6 <open@plt+0x22b6>
  404877:	mov    eax,DWORD PTR [rdi+0x1]
  40487a:	mov    DWORD PTR [rip+0x29c0],eax        # 407240 <open@plt+0x4a40>
  404880:	jmp    404764 <open@plt+0x1f64>
  404885:	mov    eax,DWORD PTR [r14+0x48]
  404889:	cmp    eax,0x2
  40488c:	jne    404add <open@plt+0x22dd>
  404892:	cmp    QWORD PTR [r14+0x20],0x5
  404897:	jne    404b2f <open@plt+0x232f>
  40489d:	cmp    BYTE PTR [rip+0x29a0],0x0        # 407244 <open@plt+0x4a44>
  4048a4:	je     404a69 <open@plt+0x2269>
  4048aa:	mov    rdx,QWORD PTR [r14+0x30]
  4048ae:	mov    rsi,QWORD PTR [r14+0x28]
  4048b2:	mov    rdi,rbx
  4048b5:	call   402ee0 <open@plt+0x6e0>
  4048ba:	mov    r13,rax
  4048bd:	mov    rax,QWORD PTR [r14+0x18]
  4048c1:	mov    edx,0x10624dd3
  4048c6:	mov    ecx,DWORD PTR [rax+0x1]
  4048c9:	mov    QWORD PTR [r13+0x0],r13
  4048cd:	mov    eax,ecx
  4048cf:	mul    edx
  4048d1:	mov    DWORD PTR [r13+0x30],ecx
  4048d5:	mov    QWORD PTR [r13+0x8],0x0
  4048dd:	mov    eax,edx
  4048df:	shr    eax,0x7
  4048e2:	imul   eax,eax,0x7d0
  4048e8:	mov    edx,ecx
  4048ea:	lea    rcx,[rip+0x298f]        # 407280 <open@plt+0x4a80>
  4048f1:	sub    edx,eax
  4048f3:	mov    rax,rdx
  4048f6:	lea    rdx,[rdx+rdx*2]
  4048fa:	lea    rcx,[rcx+rdx*8]
  4048fe:	mov    rdx,QWORD PTR [rcx]
  404901:	mov    QWORD PTR [r13+0x10],rdx
  404905:	test   rdx,rdx
  404908:	je     404bd0 <open@plt+0x23d0>
  40490e:	mov    QWORD PTR [rdx+0x8],r13
  404912:	lea    rax,[rax+rax*2]
  404916:	lea    rdx,[rip+0x2963]        # 407280 <open@plt+0x4a80>
  40491d:	lea    rax,[rdx+rax*8]
  404921:	inc    QWORD PTR [rax+0x10]
  404925:	mov    QWORD PTR [rax],r13
  404928:	mov    rdi,QWORD PTR [r13+0x38]
  40492c:	or     BYTE PTR [r13+0x68],0x1
  404931:	call   402430 <rb_get_type@plt>
  404936:	test   al,0x40
  404938:	jne    404bbd <open@plt+0x23bd>
  40493e:	mov    rdi,QWORD PTR [r13+0x40]
  404942:	call   402430 <rb_get_type@plt>
  404947:	cmp    al,0x40
  404949:	je     404bf0 <open@plt+0x23f0>
  40494f:	mov    rdi,QWORD PTR [r14+0x28]
  404953:	mov    ecx,0xa
  404958:	mov    rdx,r13
  40495b:	lea    rsi,[rip+0xfffffffffffff84e]        # 4041b0 <open@plt+0x19b0>
  404962:	call   402740 <rb_ssl_start_accepted@plt>
  404967:	mov    rdi,QWORD PTR [r14+0x18]
  40496b:	jmp    404764 <open@plt+0x1f64>
  404970:	cmp    QWORD PTR [r14+0x20],0x5
  404975:	jne    404b08 <open@plt+0x2308>
  40497b:	cmp    BYTE PTR [rip+0x28c2],0x0        # 407244 <open@plt+0x4a44>
  404982:	je     404a69 <open@plt+0x2269>
  404988:	mov    rdx,QWORD PTR [r14+0x30]
  40498c:	mov    rsi,QWORD PTR [r14+0x28]
  404990:	mov    rdi,rbx
  404993:	call   402ee0 <open@plt+0x6e0>
  404998:	mov    r13,rax
  40499b:	mov    rax,QWORD PTR [r14+0x18]
  40499f:	mov    edx,0x10624dd3
  4049a4:	mov    ecx,DWORD PTR [rax+0x1]
  4049a7:	mov    QWORD PTR [r13+0x0],r13
  4049ab:	mov    eax,ecx
  4049ad:	mul    edx
  4049af:	mov    DWORD PTR [r13+0x30],ecx
  4049b3:	mov    QWORD PTR [r13+0x8],0x0
  4049bb:	mov    eax,edx
  4049bd:	shr    eax,0x7
  4049c0:	imul   eax,eax,0x7d0
  4049c6:	mov    edx,ecx
  4049c8:	lea    rcx,[rip+0x28b1]        # 407280 <open@plt+0x4a80>
  4049cf:	sub    edx,eax
  4049d1:	mov    rax,rdx
  4049d4:	lea    rdx,[rdx+rdx*2]
  4049d8:	lea    rdx,[rcx+rdx*8]
  4049dc:	mov    rcx,QWORD PTR [rdx]
  4049df:	mov    QWORD PTR [r13+0x10],rcx
  4049e3:	test   rcx,rcx
  4049e6:	je     404b34 <open@plt+0x2334>
  4049ec:	mov    QWORD PTR [rcx+0x8],r13
  4049f0:	lea    rax,[rax+rax*2]
  4049f4:	lea    rdx,[rip+0x2885]        # 407280 <open@plt+0x4a80>
  4049fb:	lea    rax,[rdx+rax*8]
  4049ff:	inc    QWORD PTR [rax+0x10]
  404a03:	mov    QWORD PTR [rax],r13
  404a06:	mov    rdi,QWORD PTR [r13+0x38]
  404a0a:	or     BYTE PTR [r13+0x68],0x1
  404a0f:	call   402430 <rb_get_type@plt>
  404a14:	cmp    al,0x40
  404a16:	je     404baa <open@plt+0x23aa>
  404a1c:	mov    rdi,QWORD PTR [r13+0x40]
  404a20:	call   402430 <rb_get_type@plt>
  404a25:	cmp    al,0x40
  404a27:	je     404b97 <open@plt+0x2397>
  404a2d:	mov    rdi,QWORD PTR [r14+0x28]
  404a31:	mov    ecx,0xa
  404a36:	mov    rdx,r13
  404a39:	lea    rsi,[rip+0xfffffffffffff810]        # 404250 <open@plt+0x1a50>
  404a40:	call   4026e0 <rb_ssl_start_connected@plt>
  404a45:	mov    rdi,QWORD PTR [r14+0x18]
  404a49:	jmp    404764 <open@plt+0x1f64>
  404a4e:	xchg   ax,ax
  404a50:	mov    QWORD PTR [rbx+0x30],rdx
  404a54:	jmp    40478a <open@plt+0x1f8a>
  404a59:	nop    DWORD PTR [rax+0x0]
  404a60:	mov    QWORD PTR [rbx+0x38],rax
  404a64:	jmp    40477d <open@plt+0x1f7d>
  404a69:	mov    rdi,rbx
  404a6c:	mov    rsi,r14
  404a6f:	call   404350 <open@plt+0x1b50>
  404a74:	mov    rdi,QWORD PTR [r14+0x18]
  404a78:	jmp    404764 <open@plt+0x1f64>
  404a7d:	test   eax,eax
  404a7f:	jle    404764 <open@plt+0x1f64>
  404a85:	mov    rdi,QWORD PTR [r14+0x28]
  404a89:	xor    r13d,r13d
  404a8c:	inc    r13
  404a8f:	call   402600 <rb_close@plt>
  404a94:	cmp    DWORD PTR [r14+0x48],r13d
  404a98:	jle    404760 <open@plt+0x1f60>
  404a9e:	mov    rdi,QWORD PTR [r14+r13*8+0x28]
  404aa3:	inc    r13
  404aa6:	call   402600 <rb_close@plt>
  404aab:	cmp    DWORD PTR [r14+0x48],r13d
  404aaf:	jg     404a9e <open@plt+0x229e>
  404ab1:	jmp    404760 <open@plt+0x1f60>
  404ab6:	mov    eax,DWORD PTR [r14+0x48]
  404aba:	test   eax,eax
  404abc:	jle    404764 <open@plt+0x1f64>
  404ac2:	xor    r13d,r13d
  404ac5:	mov    rdi,QWORD PTR [r14+r13*8+0x28]
  404aca:	inc    r13
  404acd:	call   402600 <rb_close@plt>
  404ad2:	cmp    DWORD PTR [r14+0x48],r13d
  404ad6:	jg     404ac5 <open@plt+0x22c5>
  404ad8:	jmp    404760 <open@plt+0x1f60>
  404add:	xor    r13d,r13d
  404ae0:	test   eax,eax
  404ae2:	jle    404764 <open@plt+0x1f64>
  404ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  404af0:	mov    rdi,QWORD PTR [r14+r13*8+0x28]
  404af5:	inc    r13
  404af8:	call   402600 <rb_close@plt>
  404afd:	cmp    DWORD PTR [r14+0x48],r13d
  404b01:	jg     404af0 <open@plt+0x22f0>
  404b03:	jmp    404760 <open@plt+0x1f60>
  404b08:	mov    edx,DWORD PTR [r14+0x48]
  404b0c:	test   edx,edx
  404b0e:	jle    404764 <open@plt+0x1f64>
  404b14:	xor    r13d,r13d
  404b17:	mov    rdi,QWORD PTR [r14+r13*8+0x28]
  404b1c:	inc    r13
  404b1f:	call   402600 <rb_close@plt>
  404b24:	cmp    DWORD PTR [r14+0x48],r13d
  404b28:	jg     404b17 <open@plt+0x2317>
  404b2a:	jmp    404760 <open@plt+0x1f60>
  404b2f:	xor    r13d,r13d
  404b32:	jmp    404af0 <open@plt+0x22f0>
  404b34:	cmp    QWORD PTR [rdx+0x8],0x0
  404b39:	jne    4049f0 <open@plt+0x21f0>
  404b3f:	mov    QWORD PTR [rdx+0x8],r13
  404b43:	jmp    4049f0 <open@plt+0x21f0>
  404b48:	mov    rdx,QWORD PTR [rsp]
  404b4c:	lea    rsi,[r10+0x6]
  404b50:	mov    rdi,r13
  404b53:	call   403a30 <open@plt+0x1230>
  404b58:	jmp    404748 <open@plt+0x1f48>
  404b5d:	cmp    QWORD PTR [rcx+0x8],0x0
  404b62:	jne    404634 <open@plt+0x1e34>
  404b68:	mov    QWORD PTR [rcx+0x8],r13
  404b6c:	jmp    404634 <open@plt+0x1e34>
  404b71:	mov    rdi,QWORD PTR [r13+0x40]
  404b75:	mov    esi,0x4
  404b7a:	call   4025c0 <rb_set_type@plt>
  404b7f:	jmp    4045de <open@plt+0x1dde>
  404b84:	mov    rdi,QWORD PTR [r13+0x38]
  404b88:	mov    esi,0x4
  404b8d:	call   4025c0 <rb_set_type@plt>
  404b92:	jmp    4045cd <open@plt+0x1dcd>
  404b97:	mov    rdi,QWORD PTR [r13+0x40]
  404b9b:	mov    esi,0x4
  404ba0:	call   4025c0 <rb_set_type@plt>
  404ba5:	jmp    404a2d <open@plt+0x222d>
  404baa:	mov    rdi,QWORD PTR [r13+0x38]
  404bae:	mov    esi,0x4
  404bb3:	call   4025c0 <rb_set_type@plt>
  404bb8:	jmp    404a1c <open@plt+0x221c>
  404bbd:	mov    rdi,QWORD PTR [r13+0x38]
  404bc1:	mov    esi,0x4
  404bc6:	call   4025c0 <rb_set_type@plt>
  404bcb:	jmp    40493e <open@plt+0x213e>
  404bd0:	cmp    QWORD PTR [rcx+0x8],0x0
  404bd5:	jne    404912 <open@plt+0x2112>
  404bdb:	imul   rdx,rax,0x18
  404bdf:	lea    rcx,[rip+0x269a]        # 407280 <open@plt+0x4a80>
  404be6:	mov    QWORD PTR [rcx+rdx*1+0x8],r13
  404beb:	jmp    404912 <open@plt+0x2112>
  404bf0:	mov    rdi,QWORD PTR [r13+0x40]
  404bf4:	mov    esi,0x4
  404bf9:	call   4025c0 <rb_set_type@plt>
  404bfe:	jmp    40494f <open@plt+0x214f>
  404c03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c0d:	nop    DWORD PTR [rax]
  404c10:	endbr64 
  404c14:	push   r15
  404c16:	lea    r15,[rip+0x21bb]        # 406dd8 <open@plt+0x45d8>
  404c1d:	push   r14
  404c1f:	mov    r14,rdx
  404c22:	push   r13
  404c24:	mov    r13,rsi
  404c27:	push   r12
  404c29:	mov    r12d,edi
  404c2c:	push   rbp
  404c2d:	lea    rbp,[rip+0x21ac]        # 406de0 <open@plt+0x45e0>
  404c34:	push   rbx
  404c35:	sub    rbp,r15
  404c38:	sub    rsp,0x8
  404c3c:	call   402000 <dup2@plt-0x420>
  404c41:	sar    rbp,0x3
  404c45:	je     404c66 <open@plt+0x2466>
  404c47:	xor    ebx,ebx
  404c49:	nop    DWORD PTR [rax+0x0]
  404c50:	mov    rdx,r14
  404c53:	mov    rsi,r13
  404c56:	mov    edi,r12d
  404c59:	call   QWORD PTR [r15+rbx*8]
  404c5d:	add    rbx,0x1
  404c61:	cmp    rbp,rbx
  404c64:	jne    404c50 <open@plt+0x2450>
  404c66:	add    rsp,0x8
  404c6a:	pop    rbx
  404c6b:	pop    rbp
  404c6c:	pop    r12
  404c6e:	pop    r13
  404c70:	pop    r14
  404c72:	pop    r15
  404c74:	ret    
  404c75:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404c80:	endbr64 
  404c84:	ret    

Disassembly of section .fini:

0000000000404c88 <.fini>:
  404c88:	endbr64 
  404c8c:	sub    rsp,0x8
  404c90:	add    rsp,0x8
  404c94:	ret    
