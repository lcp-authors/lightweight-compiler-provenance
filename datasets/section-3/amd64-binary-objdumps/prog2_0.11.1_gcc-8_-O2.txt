
../repos/prog2/0.11.1:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <__stack_chk_fail@plt-0x4a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	bnd jmp QWORD PTR [rip+0x2fe3]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <__stack_chk_fail@plt-0x40>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <__stack_chk_fail@plt-0x40>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <__stack_chk_fail@plt-0x40>
  40105f:	nop

Disassembly of section .plt.sec:

0000000000401060 <__stack_chk_fail@plt>:
  401060:	endbr64 
  401064:	bnd jmp QWORD PTR [rip+0x2fad]        # 404018 <__stack_chk_fail@GLIBC_2.4>
  40106b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401070 <__printf_chk@plt>:
  401070:	endbr64 
  401074:	bnd jmp QWORD PTR [rip+0x2fa5]        # 404020 <__printf_chk@GLIBC_2.3.4>
  40107b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401080 <__isoc99_scanf@plt>:
  401080:	endbr64 
  401084:	bnd jmp QWORD PTR [rip+0x2f9d]        # 404028 <__isoc99_scanf@GLIBC_2.7>
  40108b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000401090 <main@@Base>:
  401090:	endbr64 
  401094:	push   r14
  401096:	lea    rdi,[rip+0xf6a]        # 402007 <_IO_stdin_used@@Base+0x7>
  40109d:	push   r13
  40109f:	push   r12
  4010a1:	push   rbp
  4010a2:	push   rbx
  4010a3:	sub    rsp,0x20
  4010a7:	mov    rax,QWORD PTR fs:0x28
  4010b0:	mov    QWORD PTR [rsp+0x18],rax
  4010b5:	xor    eax,eax
  4010b7:	lea    rsi,[rsp+0xc]
  4010bc:	call   401080 <__isoc99_scanf@plt>
  4010c1:	mov    eax,DWORD PTR [rsp+0xc]
  4010c5:	test   eax,eax
  4010c7:	jle    401129 <main@@Base+0x99>
  4010c9:	xor    ebp,ebp
  4010cb:	lea    r14,[rsp+0x14]
  4010d0:	lea    r13,[rsp+0x10]
  4010d5:	lea    r12,[rip+0xf28]        # 402004 <_IO_stdin_used@@Base+0x4>
  4010dc:	nop    DWORD PTR [rax+0x0]
  4010e0:	mov    rdx,r14
  4010e3:	mov    rsi,r13
  4010e6:	mov    rdi,r12
  4010e9:	xor    eax,eax
  4010eb:	call   401080 <__isoc99_scanf@plt>
  4010f0:	mov    edi,DWORD PTR [rsp+0x10]
  4010f4:	inc    ebp
  4010f6:	call   401240 <invert@@Base>
  4010fb:	mov    edi,DWORD PTR [rsp+0x14]
  4010ff:	mov    ebx,eax
  401101:	call   401240 <invert@@Base>
  401106:	lea    edi,[rbx+rax*1]
  401109:	call   401240 <invert@@Base>
  40110e:	mov    edx,eax
  401110:	lea    rsi,[rip+0xef3]        # 40200a <_IO_stdin_used@@Base+0xa>
  401117:	mov    edi,0x1
  40111c:	xor    eax,eax
  40111e:	call   401070 <__printf_chk@plt>
  401123:	cmp    DWORD PTR [rsp+0xc],ebp
  401127:	jg     4010e0 <main@@Base+0x50>
  401129:	xor    eax,eax
  40112b:	mov    rcx,QWORD PTR [rsp+0x18]
  401130:	xor    rcx,QWORD PTR fs:0x28
  401139:	jne    401148 <main@@Base+0xb8>
  40113b:	add    rsp,0x20
  40113f:	pop    rbx
  401140:	pop    rbp
  401141:	pop    r12
  401143:	pop    r13
  401145:	pop    r14
  401147:	ret    
  401148:	call   401060 <__stack_chk_fail@plt>
  40114d:	nop    DWORD PTR [rax]

0000000000401150 <_start@@Base>:
  401150:	endbr64 
  401154:	xor    ebp,ebp
  401156:	mov    r9,rdx
  401159:	pop    rsi
  40115a:	mov    rdx,rsp
  40115d:	and    rsp,0xfffffffffffffff0
  401161:	push   rax
  401162:	push   rsp
  401163:	mov    r8,0x4012f0
  40116a:	mov    rcx,0x401280
  401171:	mov    rdi,0x401090
  401178:	call   QWORD PTR [rip+0x2e72]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40117e:	hlt    
  40117f:	nop
  401180:	endbr64 
  401184:	ret    
  401185:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40118f:	nop
  401190:	mov    eax,0x404040
  401195:	cmp    rax,0x404040
  40119b:	je     4011b0 <_start@@Base+0x60>
  40119d:	mov    eax,0x0
  4011a2:	test   rax,rax
  4011a5:	je     4011b0 <_start@@Base+0x60>
  4011a7:	mov    edi,0x404040
  4011ac:	jmp    rax
  4011ae:	xchg   ax,ax
  4011b0:	ret    
  4011b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4011bc:	nop    DWORD PTR [rax+0x0]
  4011c0:	mov    esi,0x404040
  4011c5:	sub    rsi,0x404040
  4011cc:	sar    rsi,0x3
  4011d0:	mov    rax,rsi
  4011d3:	shr    rax,0x3f
  4011d7:	add    rsi,rax
  4011da:	sar    rsi,1
  4011dd:	je     4011f0 <_start@@Base+0xa0>
  4011df:	mov    eax,0x0
  4011e4:	test   rax,rax
  4011e7:	je     4011f0 <_start@@Base+0xa0>
  4011e9:	mov    edi,0x404040
  4011ee:	jmp    rax
  4011f0:	ret    
  4011f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4011fc:	nop    DWORD PTR [rax+0x0]
  401200:	endbr64 
  401204:	cmp    BYTE PTR [rip+0x2e35],0x0        # 404040 <__bss_start@@Base>
  40120b:	jne    401220 <_start@@Base+0xd0>
  40120d:	push   rbp
  40120e:	mov    rbp,rsp
  401211:	call   401190 <_start@@Base+0x40>
  401216:	mov    BYTE PTR [rip+0x2e23],0x1        # 404040 <__bss_start@@Base>
  40121d:	pop    rbp
  40121e:	ret    
  40121f:	nop
  401220:	ret    
  401221:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40122c:	nop    DWORD PTR [rax+0x0]
  401230:	endbr64 
  401234:	jmp    4011c0 <_start@@Base+0x70>
  401236:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401240 <invert@@Base>:
  401240:	endbr64 
  401244:	xor    eax,eax
  401246:	test   edi,edi
  401248:	je     401278 <invert@@Base+0x38>
  40124a:	mov    esi,0x66666667
  40124f:	nop
  401250:	lea    ecx,[rax+rax*4]
  401253:	mov    eax,edi
  401255:	imul   esi
  401257:	mov    eax,edi
  401259:	sar    eax,0x1f
  40125c:	sar    edx,0x2
  40125f:	sub    edx,eax
  401261:	lea    eax,[rdx+rdx*4]
  401264:	add    eax,eax
  401266:	sub    edi,eax
  401268:	lea    eax,[rdi+rcx*2]
  40126b:	mov    edi,edx
  40126d:	test   edx,edx
  40126f:	jne    401250 <invert@@Base+0x10>
  401271:	ret    
  401272:	nop    WORD PTR [rax+rax*1+0x0]
  401278:	ret    
  401279:	nop    DWORD PTR [rax+0x0]

0000000000401280 <__libc_csu_init@@Base>:
  401280:	endbr64 
  401284:	push   r15
  401286:	lea    r15,[rip+0x2b83]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  40128d:	push   r14
  40128f:	mov    r14,rdx
  401292:	push   r13
  401294:	mov    r13,rsi
  401297:	push   r12
  401299:	mov    r12d,edi
  40129c:	push   rbp
  40129d:	lea    rbp,[rip+0x2b74]        # 403e18 <_IO_stdin_used@@Base+0x1e18>
  4012a4:	push   rbx
  4012a5:	sub    rbp,r15
  4012a8:	sub    rsp,0x8
  4012ac:	call   401000 <__stack_chk_fail@plt-0x60>
  4012b1:	sar    rbp,0x3
  4012b5:	je     4012d6 <__libc_csu_init@@Base+0x56>
  4012b7:	xor    ebx,ebx
  4012b9:	nop    DWORD PTR [rax+0x0]
  4012c0:	mov    rdx,r14
  4012c3:	mov    rsi,r13
  4012c6:	mov    edi,r12d
  4012c9:	call   QWORD PTR [r15+rbx*8]
  4012cd:	add    rbx,0x1
  4012d1:	cmp    rbp,rbx
  4012d4:	jne    4012c0 <__libc_csu_init@@Base+0x40>
  4012d6:	add    rsp,0x8
  4012da:	pop    rbx
  4012db:	pop    rbp
  4012dc:	pop    r12
  4012de:	pop    r13
  4012e0:	pop    r14
  4012e2:	pop    r15
  4012e4:	ret    
  4012e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004012f0 <__libc_csu_fini@@Base>:
  4012f0:	endbr64 
  4012f4:	ret    

Disassembly of section .fini:

00000000004012f8 <.fini>:
  4012f8:	endbr64 
  4012fc:	sub    rsp,0x8
  401300:	add    rsp,0x8
  401304:	ret    
